name,id,description,language,open_issues,stargazers_count,topics,watchers,fork,forks_url,readme,config,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'Probabilistic-Programming-and-Bayesian-Methods-for-Hackers',7607075,"b'aka ""Bayesian Methods for Hackers"": An introduction to Bayesian methods + probabilistic programming with a computation/understanding-first, mathematics-second point of view. All in pure Python ;)  '",b'Jupyter Notebook',154,19548,,19548,False,b'https://api.github.com/repos/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/forks',"IyBbQmF5ZXNpYW4gTWV0aG9kcyBmb3IgSGFja2Vyc10oaHR0cDovL2NhbWRh
dmlkc29ucGlsb24uZ2l0aHViLmlvL1Byb2JhYmlsaXN0aWMtUHJvZ3JhbW1p
bmctYW5kLUJheWVzaWFuLU1ldGhvZHMtZm9yLUhhY2tlcnMvKQojIyMjICpV
c2luZyBQeXRob24gYW5kIFB5TUMqCgoKVGhlIEJheWVzaWFuIG1ldGhvZCBp
cyB0aGUgbmF0dXJhbCBhcHByb2FjaCB0byBpbmZlcmVuY2UsIHlldCBpdCBp
cyBoaWRkZW4gZnJvbSByZWFkZXJzIGJlaGluZCBjaGFwdGVycyBvZiBzbG93
LCBtYXRoZW1hdGljYWwgYW5hbHlzaXMuIFRoZSB0eXBpY2FsIHRleHQgb24g
QmF5ZXNpYW4gaW5mZXJlbmNlIGludm9sdmVzIHR3byB0byB0aHJlZSBjaGFw
dGVycyBvbiBwcm9iYWJpbGl0eSB0aGVvcnksIHRoZW4gZW50ZXJzIHdoYXQg
QmF5ZXNpYW4gaW5mZXJlbmNlIGlzLiBVbmZvcnR1bmF0ZWx5LCBkdWUgdG8g
bWF0aGVtYXRpY2FsIGludHJhY3RhYmlsaXR5IG9mIG1vc3QgQmF5ZXNpYW4g
bW9kZWxzLCB0aGUgcmVhZGVyIGlzIG9ubHkgc2hvd24gc2ltcGxlLCBhcnRp
ZmljaWFsIGV4YW1wbGVzLiBUaGlzIGNhbiBsZWF2ZSB0aGUgdXNlciB3aXRo
IGEgKnNvLXdoYXQqIGZlZWxpbmcgYWJvdXQgQmF5ZXNpYW4gaW5mZXJlbmNl
LiBJbiBmYWN0LCB0aGlzIHdhcyB0aGUgYXV0aG9yJ3Mgb3duIHByaW9yIG9w
aW5pb24uCgpBZnRlciBzb21lIHJlY2VudCBzdWNjZXNzIG9mIEJheWVzaWFu
IG1ldGhvZHMgaW4gbWFjaGluZS1sZWFybmluZyBjb21wZXRpdGlvbnMsIEkg
ZGVjaWRlZCB0byBpbnZlc3RpZ2F0ZSB0aGUgc3ViamVjdCBhZ2Fpbi4gRXZl
biB3aXRoIG15IG1hdGhlbWF0aWNhbCBiYWNrZ3JvdW5kLCBpdCB0b29rIG1l
IHRocmVlIHN0cmFpZ2h0LWRheXMgb2YgcmVhZGluZyBleGFtcGxlcyBhbmQg
dHJ5aW5nIHRvIHB1dCB0aGUgcGllY2VzIHRvZ2V0aGVyIHRvIHVuZGVyc3Rh
bmQgdGhlIG1ldGhvZHMuIFRoZXJlIHdhcyBzaW1wbHkgbm90IGVub3VnaCBs
aXRlcmF0dXJlIGJyaWRnaW5nIHRoZW9yeSB0byBwcmFjdGljZS4gVGhlIHBy
b2JsZW0gd2l0aCBteSBtaXN1bmRlcnN0YW5kaW5nIHdhcyB0aGUgZGlzY29u
bmVjdCBiZXR3ZWVuIEJheWVzaWFuIG1hdGhlbWF0aWNzIGFuZCBwcm9iYWJp
bGlzdGljIHByb2dyYW1taW5nLiBUaGF0IGJlaW5nIHNhaWQsIEkgc3VmZmVy
ZWQgdGhlbiBzbyB0aGUgcmVhZGVyIHdvdWxkIG5vdCBoYXZlIHRvIG5vdy4g
VGhpcyBib29rIGF0dGVtcHRzIHRvIGJyaWRnZSB0aGUgZ2FwLgoKSWYgQmF5
ZXNpYW4gaW5mZXJlbmNlIGlzIHRoZSBkZXN0aW5hdGlvbiwgdGhlbiBtYXRo
ZW1hdGljYWwgYW5hbHlzaXMgaXMgYSBwYXJ0aWN1bGFyIHBhdGggdG93YXJk
cyBpdC4gT24gdGhlIG90aGVyIGhhbmQsIGNvbXB1dGluZyBwb3dlciBpcyBj
aGVhcCBlbm91Z2ggdGhhdCB3ZSBjYW4gYWZmb3JkIHRvIHRha2UgYW4gYWx0
ZXJuYXRlIHJvdXRlIHZpYSBwcm9iYWJpbGlzdGljIHByb2dyYW1taW5nLiBU
aGUgbGF0dGVyIHBhdGggaXMgbXVjaCBtb3JlIHVzZWZ1bCwgYXMgaXQgZGVu
aWVzIHRoZSBuZWNlc3NpdHkgb2YgbWF0aGVtYXRpY2FsIGludGVydmVudGlv
biBhdCBlYWNoIHN0ZXAsIHRoYXQgaXMsIHdlIHJlbW92ZSBvZnRlbi1pbnRy
YWN0YWJsZSBtYXRoZW1hdGljYWwgYW5hbHlzaXMgYXMgYSBwcmVyZXF1aXNp
dGUgdG8gQmF5ZXNpYW4gaW5mZXJlbmNlLiBTaW1wbHkgcHV0LCB0aGlzIGxh
dHRlciBjb21wdXRhdGlvbmFsIHBhdGggcHJvY2VlZHMgdmlhIHNtYWxsIGlu
dGVybWVkaWF0ZSBqdW1wcyBmcm9tIGJlZ2lubmluZyB0byBlbmQsIHdoZXJl
IGFzIHRoZSBmaXJzdCBwYXRoIHByb2NlZWRzIGJ5IGVub3Jtb3VzIGxlYXBz
LCBvZnRlbiBsYW5kaW5nIGZhciBhd2F5IGZyb20gb3VyIHRhcmdldC4gRnVy
dGhlcm1vcmUsIHdpdGhvdXQgYSBzdHJvbmcgbWF0aGVtYXRpY2FsIGJhY2tn
cm91bmQsIHRoZSBhbmFseXNpcyByZXF1aXJlZCBieSB0aGUgZmlyc3QgcGF0
aCBjYW5ub3QgZXZlbiB0YWtlIHBsYWNlLgoKKkJheWVzaWFuIE1ldGhvZHMg
Zm9yIEhhY2tlcnMqIGlzIGRlc2lnbmVkIGFzIGFuIGludHJvZHVjdGlvbiB0
byBCYXllc2lhbiBpbmZlcmVuY2UgZnJvbSBhIGNvbXB1dGF0aW9uYWwvdW5k
ZXJzdGFuZGluZy1maXJzdCwgYW5kIG1hdGhlbWF0aWNzLXNlY29uZCwgcG9p
bnQgb2Ygdmlldy4gT2YgY291cnNlIGFzIGFuIGludHJvZHVjdG9yeSBib29r
LCB3ZSBjYW4gb25seSBsZWF2ZSBpdCBhdCB0aGF0OiBhbiBpbnRyb2R1Y3Rv
cnkgYm9vay4gRm9yIHRoZSBtYXRoZW1hdGljYWxseSB0cmFpbmVkLCB0aGV5
IG1heSBjdXJlIHRoZSBjdXJpb3NpdHkgdGhpcyB0ZXh0IGdlbmVyYXRlcyB3
aXRoIG90aGVyIHRleHRzIGRlc2lnbmVkIHdpdGggbWF0aGVtYXRpY2FsIGFu
YWx5c2lzIGluIG1pbmQuIEZvciB0aGUgZW50aHVzaWFzdCB3aXRoIGxlc3Mg
bWF0aGVtYXRpY2FsIGJhY2tncm91bmQsIG9yIG9uZSB3aG8gaXMgbm90IGlu
dGVyZXN0ZWQgaW4gdGhlIG1hdGhlbWF0aWNzIGJ1dCBzaW1wbHkgdGhlIHBy
YWN0aWNlIG9mIEJheWVzaWFuIG1ldGhvZHMsIHRoaXMgdGV4dCBzaG91bGQg
YmUgc3VmZmljaWVudCBhbmQgZW50ZXJ0YWluaW5nLgoKVGhlIGNob2ljZSBv
ZiBQeU1DIGFzIHRoZSBwcm9iYWJpbGlzdGljIHByb2dyYW1taW5nIGxhbmd1
YWdlIGlzIHR3by1mb2xkLiBBcyBvZiB0aGlzIHdyaXRpbmcsIHRoZXJlIGlz
IGN1cnJlbnRseSBubyBjZW50cmFsIHJlc291cmNlIGZvciBleGFtcGxlcyBh
bmQgZXhwbGFuYXRpb25zIGluIHRoZSBQeU1DIHVuaXZlcnNlLiBUaGUgb2Zm
aWNpYWwgZG9jdW1lbnRhdGlvbiBhc3N1bWVzIHByaW9yIGtub3dsZWRnZSBv
ZiBCYXllc2lhbiBpbmZlcmVuY2UgYW5kIHByb2JhYmlsaXN0aWMgcHJvZ3Jh
bW1pbmcuIFdlIGhvcGUgdGhpcyBib29rIGVuY291cmFnZXMgdXNlcnMgYXQg
ZXZlcnkgbGV2ZWwgdG8gbG9vayBhdCBQeU1DLiBTZWNvbmRseSwgd2l0aCBy
ZWNlbnQgY29yZSBkZXZlbG9wbWVudHMgYW5kIHBvcHVsYXJpdHkgb2YgdGhl
IHNjaWVudGlmaWMgc3RhY2sgaW4gUHl0aG9uLCBQeU1DIGlzIGxpa2VseSB0
byBiZWNvbWUgYSBjb3JlIGNvbXBvbmVudCBzb29uIGVub3VnaC4KClB5TUMg
ZG9lcyBoYXZlIGRlcGVuZGVuY2llcyB0byBydW4sIG5hbWVseSBOdW1QeSBh
bmQgKG9wdGlvbmFsbHkpIFNjaVB5LiBUbyBub3QgbGltaXQgdGhlIHVzZXIs
IHRoZSBleGFtcGxlcyBpbiB0aGlzIGJvb2sgd2lsbCByZWx5IG9ubHkgb24g
UHlNQywgTnVtUHksIFNjaVB5IGFuZCBNYXRwbG90bGliLgoKClByaW50ZWQg
VmVyc2lvbiBieSBBZGRpc29uLVdlc2xleQotLS0tLS0KPGRpdiBzdHlsZT0i
ZmxvYXQ6IHJpZ2h0OyBtYXJnaW4tbGVmdDogMzBweDsiPjxpbWcgdGl0bGU9
IkJheWVzaWFuIE1ldGhvZHMgZm9yIEhhY2tlcnNnInN0eWxlPSJmbG9hdDog
cmlnaHQ7bWFyZ2luLWxlZnQ6IDMwcHg7IiBzcmM9Imh0dHA6Ly93d3ctZnAu
cGVhcnNvbmhpZ2hlcmVkLmNvbS9hc3NldHMvaGlwL2ltYWdlcy9iaWdjb3Zl
cnMvMDEzMzkwMjgzOC5qcGciIGFsaWduPXJpZ2h0IGhlaWdodCA9IDIwMCAv
PjwvZGl2PgoKKipCYXllc2lhbiBNZXRob2RzIGZvciBIYWNrZXJzIGlzIG5v
dyBhdmFpbGFibGUgYXMgYSBwcmludGVkIGJvb2shKiogWW91IGNhbiBwaWNr
IHVwIGEgY29weSBvbiBbQW1hem9uXShodHRwOi8vd3d3LmFtYXpvbi5jb20v
QmF5ZXNpYW4tTWV0aG9kcy1IYWNrZXJzLVByb2JhYmlsaXN0aWMtQWRkaXNv
bi1XZXNsZXkvZHAvMDEzMzkwMjgzOCkuIFdoYXQgYXJlIHRoZSBkaWZmZXJl
bmNlcyBiZXR3ZWVuIHRoZSBvbmxpbmUgdmVyc2lvbiBhbmQgdGhlIHByaW50
ZWQgdmVyc2lvbj8KCiAtIEFkZGl0aW9uYWwgQ2hhcHRlciBvbiBCYXllc2lh
biBBL0IgdGVzdGluZwogLSBVcGRhdGVkIGV4YW1wbGVzCiAtIEFuc3dlcnMg
dG8gdGhlIGVuZCBvZiBjaGFwdGVyIHF1ZXN0aW9ucwogLSBBZGRpdGlvbmFs
IGV4cGxhbmF0aW9uLCBhbmQgcmV3cml0dGVuIHNlY3Rpb25zIHRvIGFpZCB0
aGUgcmVhZGVyLiAKCgpDb250ZW50cwotLS0tLS0KClNlZSB0aGUgcHJvamVj
dCBob21lcGFnZSBbaGVyZV0oaHR0cDovL2NhbWRhdmlkc29ucGlsb24uZ2l0
aHViLmlvL1Byb2JhYmlsaXN0aWMtUHJvZ3JhbW1pbmctYW5kLUJheWVzaWFu
LU1ldGhvZHMtZm9yLUhhY2tlcnMvKSBmb3IgZXhhbXBsZXMsIHRvby4KCgpU
aGUgYmVsb3cgY2hhcHRlcnMgYXJlIHJlbmRlcmVkIHZpYSB0aGUgKm5idmll
d2VyKiBhdApbbmJ2aWV3ZXIuanVweXRlci5vcmcvXShodHRwOi8vbmJ2aWV3
ZXIuanVweXRlci5vcmcvKSwgYW5kIGlzIHJlYWQtb25seSBhbmQgcmVuZGVy
ZWQgaW4gcmVhbC10aW1lLgpJbnRlcmFjdGl2ZSBub3RlYm9va3MgKyBleGFt
cGxlcyBjYW4gYmUgZG93bmxvYWRlZCBieSBjbG9uaW5nISAKCiMjIyBQeU1D
MgoKKiBbKipQcm9sb2d1ZToqKl0oaHR0cDovL25idmlld2VyLmp1cHl0ZXIu
b3JnL3VybHMvcmF3LmdpdGh1Yi5jb20vQ2FtRGF2aWRzb25QaWxvbi9Qcm9i
YWJpbGlzdGljLVByb2dyYW1taW5nLWFuZC1CYXllc2lhbi1NZXRob2RzLWZv
ci1IYWNrZXJzL21hc3Rlci9Qcm9sb2d1ZS9Qcm9sb2d1ZS5pcHluYikgV2h5
IHdlIGRvIGl0LgoKKiBbKipDaGFwdGVyIDE6IEludHJvZHVjdGlvbiB0byBC
YXllc2lhbiBNZXRob2RzKipdKGh0dHA6Ly9uYnZpZXdlci5qdXB5dGVyLm9y
Zy91cmxzL3Jhdy5naXRodWIuY29tL0NhbURhdmlkc29uUGlsb24vUHJvYmFi
aWxpc3RpYy1Qcm9ncmFtbWluZy1hbmQtQmF5ZXNpYW4tTWV0aG9kcy1mb3It
SGFja2Vycy9tYXN0ZXIvQ2hhcHRlcjFfSW50cm9kdWN0aW9uL0NoMV9JbnRy
b2R1Y3Rpb25fUHlNQzIuaXB5bmIpCiAgICBJbnRyb2R1Y3Rpb24gdG8gdGhl
IHBoaWxvc29waHkgYW5kIHByYWN0aWNlIG9mIEJheWVzaWFuIG1ldGhvZHMg
YW5kIGFuc3dlcmluZyB0aGUgcXVlc3Rpb24sICJXaGF0IGlzIHByb2JhYmls
aXN0aWMgcHJvZ3JhbW1pbmc/IiBFeGFtcGxlcyBpbmNsdWRlOgogICAgLSBJ
bmZlcnJpbmcgaHVtYW4gYmVoYXZpb3VyIGNoYW5nZXMgZnJvbSB0ZXh0IG1l
c3NhZ2UgcmF0ZXMKICAgIAoqIFsqKkNoYXB0ZXIgMjogQSBsaXR0bGUgbW9y
ZSBvbiBQeU1DKipdKGh0dHA6Ly9uYnZpZXdlci5qdXB5dGVyLm9yZy91cmxz
L3Jhdy5naXRodWIuY29tL0NhbURhdmlkc29uUGlsb24vUHJvYmFiaWxpc3Rp
Yy1Qcm9ncmFtbWluZy1hbmQtQmF5ZXNpYW4tTWV0aG9kcy1mb3ItSGFja2Vy
cy9tYXN0ZXIvQ2hhcHRlcjJfTW9yZVB5TUMvQ2gyX01vcmVQeU1DX1B5TUMy
LmlweW5iKQogICAgV2UgZXhwbG9yZSBtb2RlbGluZyBCYXllc2lhbiBwcm9i
bGVtcyB1c2luZyBQeXRob24ncyBQeU1DIGxpYnJhcnkgdGhyb3VnaCBleGFt
cGxlcy4gSG93IGRvIHdlIGNyZWF0ZSBCYXllc2lhbiBtb2RlbHM/IEV4YW1w
bGVzIGluY2x1ZGU6CiAgICAtIERldGVjdGluZyB0aGUgZnJlcXVlbmN5IG9m
IGNoZWF0aW5nIHN0dWRlbnRzLCB3aGlsZSBhdm9pZGluZyBsaWFycwogICAg
LSBDYWxjdWxhdGluZyBwcm9iYWJpbGl0aWVzIG9mIHRoZSBDaGFsbGVuZ2Vy
IHNwYWNlLXNodXR0bGUgZGlzYXN0ZXIKICAgIAoqIFsqKkNoYXB0ZXIgMzog
T3BlbmluZyB0aGUgQmxhY2sgQm94IG9mIE1DTUMqKl0oaHR0cDovL25idmll
d2VyLmp1cHl0ZXIub3JnL3VybHMvcmF3LmdpdGh1Yi5jb20vQ2FtRGF2aWRz
b25QaWxvbi9Qcm9iYWJpbGlzdGljLVByb2dyYW1taW5nLWFuZC1CYXllc2lh
bi1NZXRob2RzLWZvci1IYWNrZXJzL21hc3Rlci9DaGFwdGVyM19NQ01DL0No
M19JbnRyb01DTUNfUHlNQzIuaXB5bmIpCiAgICBXZSBkaXNjdXNzIGhvdyBN
Q01DIG9wZXJhdGVzIGFuZCBkaWFnbm9zdGljIHRvb2xzLiBFeGFtcGxlcyBp
bmNsdWRlOgogICAgLSBCYXllc2lhbiBjbHVzdGVyaW5nIHdpdGggbWl4dHVy
ZSBtb2RlbHMKICAgIAoqIFsqKkNoYXB0ZXIgNDogVGhlIEdyZWF0ZXN0IFRo
ZW9yZW0gTmV2ZXIgVG9sZCoqXShodHRwOi8vbmJ2aWV3ZXIuanVweXRlci5v
cmcvdXJscy9yYXcuZ2l0aHViLmNvbS9DYW1EYXZpZHNvblBpbG9uL1Byb2Jh
YmlsaXN0aWMtUHJvZ3JhbW1pbmctYW5kLUJheWVzaWFuLU1ldGhvZHMtZm9y
LUhhY2tlcnMvbWFzdGVyL0NoYXB0ZXI0X1RoZUdyZWF0ZXN0VGhlb3JlbU5l
dmVyVG9sZC9DaDRfTGF3T2ZMYXJnZU51bWJlcnNfUHlNQzIuaXB5bmIpCiAg
ICBXZSBleHBsb3JlIGFuIGluY3JlZGlibHkgdXNlZnVsLCBhbmQgZGFuZ2Vy
b3VzLCB0aGVvcmVtOiBUaGUgTGF3IG9mIExhcmdlIE51bWJlcnMuIEV4YW1w
bGVzIGluY2x1ZGU6CiAgICAtIEV4cGxvcmluZyBhIEthZ2dsZSBkYXRhc2V0
IGFuZCB0aGUgcGl0ZmFsbHMgb2YgbmFpdmUgYW5hbHlzaXMKICAgIC0gSG93
IHRvIHNvcnQgUmVkZGl0IGNvbW1lbnRzIGZyb20gYmVzdCB0byB3b3JzdCAo
bm90IGFzIGVhc3kgYXMgeW91IHRoaW5rKQogICAgCiogWyoqQ2hhcHRlciA1
OiBXb3VsZCB5b3UgcmF0aGVyIGxvc2UgYW4gYXJtIG9yIGEgbGVnPyoqXSho
dHRwOi8vbmJ2aWV3ZXIuanVweXRlci5vcmcvdXJscy9yYXcuZ2l0aHViLmNv
bS9DYW1EYXZpZHNvblBpbG9uL1Byb2JhYmlsaXN0aWMtUHJvZ3JhbW1pbmct
YW5kLUJheWVzaWFuLU1ldGhvZHMtZm9yLUhhY2tlcnMvbWFzdGVyL0NoYXB0
ZXI1X0xvc3NGdW5jdGlvbnMvQ2g1X0xvc3NGdW5jdGlvbnNfUHlNQzIuaXB5
bmIpCiAgICBUaGUgaW50cm9kdWN0aW9uIG9mIGxvc3MgZnVuY3Rpb25zIGFu
ZCB0aGVpciAoYXdlc29tZSkgdXNlIGluIEJheWVzaWFuIG1ldGhvZHMuICBF
eGFtcGxlcyBpbmNsdWRlOgogICAgLSBTb2x2aW5nIHRoZSAqUHJpY2UgaXMg
UmlnaHQqJ3MgU2hvd2Rvd24KICAgIC0gT3B0aW1pemluZyBmaW5hbmNpYWwg
cHJlZGljdGlvbnMKICAgIC0gV2lubmluZyBzb2x1dGlvbiB0byB0aGUgS2Fn
Z2xlIERhcmsgV29ybGQncyBjb21wZXRpdGlvbgogICAgCiogWyoqQ2hhcHRl
ciA2OiBHZXR0aW5nIG91ciAqcHJpb3IqLWl0aWVzIHN0cmFpZ2h0KipdKGh0
dHA6Ly9uYnZpZXdlci5qdXB5dGVyLm9yZy91cmxzL3Jhdy5naXRodWIuY29t
L0NhbURhdmlkc29uUGlsb24vUHJvYmFiaWxpc3RpYy1Qcm9ncmFtbWluZy1h
bmQtQmF5ZXNpYW4tTWV0aG9kcy1mb3ItSGFja2Vycy9tYXN0ZXIvQ2hhcHRl
cjZfUHJpb3JpdGllcy9DaDZfUHJpb3JzX1B5TUMyLmlweW5iKQogICAgUHJv
YmFibHkgdGhlIG1vc3QgaW1wb3J0YW50IGNoYXB0ZXIuIFdlIGRyYXcgb24g
ZXhwZXJ0IG9waW5pb25zIHRvIGFuc3dlciBxdWVzdGlvbnMuIEV4YW1wbGVz
IGluY2x1ZGU6CiAgICAtIE11bHRpLUFybWVkIEJhbmRpdHMgYW5kIHRoZSBC
YXllc2lhbiBCYW5kaXQgc29sdXRpb24uCiAgICAtIFdoYXQgaXMgdGhlIHJl
bGF0aW9uc2hpcCBiZXR3ZWVuIGRhdGEgc2FtcGxlIHNpemUgYW5kIHByaW9y
PwogICAgLSBFc3RpbWF0aW5nIGZpbmFuY2lhbCB1bmtub3ducyB1c2luZyBl
eHBlcnQgcHJpb3JzCiAgICAKICAgIFdlIGV4cGxvcmUgdXNlZnVsIHRpcHMg
dG8gYmUgb2JqZWN0aXZlIGluIGFuYWx5c2lzIGFzIHdlbGwgYXMgY29tbW9u
IHBpdGZhbGxzIG9mIHByaW9ycy4gCgojIyMgUHlNQzMKCiogWyoqUHJvbG9n
dWU6KipdKGh0dHA6Ly9uYnZpZXdlci5qdXB5dGVyLm9yZy91cmxzL3Jhdy5n
aXRodWIuY29tL0NhbURhdmlkc29uUGlsb24vUHJvYmFiaWxpc3RpYy1Qcm9n
cmFtbWluZy1hbmQtQmF5ZXNpYW4tTWV0aG9kcy1mb3ItSGFja2Vycy9tYXN0
ZXIvUHJvbG9ndWUvUHJvbG9ndWUuaXB5bmIpIFdoeSB3ZSBkbyBpdC4KCiog
WyoqQ2hhcHRlciAxOiBJbnRyb2R1Y3Rpb24gdG8gQmF5ZXNpYW4gTWV0aG9k
cyoqXShodHRwOi8vbmJ2aWV3ZXIuanVweXRlci5vcmcvdXJscy9yYXcuZ2l0
aHViLmNvbS9DYW1EYXZpZHNvblBpbG9uL1Byb2JhYmlsaXN0aWMtUHJvZ3Jh
bW1pbmctYW5kLUJheWVzaWFuLU1ldGhvZHMtZm9yLUhhY2tlcnMvbWFzdGVy
L0NoYXB0ZXIxX0ludHJvZHVjdGlvbi9DaDFfSW50cm9kdWN0aW9uX1B5TUMz
LmlweW5iKQogICAgSW50cm9kdWN0aW9uIHRvIHRoZSBwaGlsb3NvcGh5IGFu
ZCBwcmFjdGljZSBvZiBCYXllc2lhbiBtZXRob2RzIGFuZCBhbnN3ZXJpbmcg
dGhlIHF1ZXN0aW9uLCAiV2hhdCBpcyBwcm9iYWJpbGlzdGljIHByb2dyYW1t
aW5nPyIgRXhhbXBsZXMgaW5jbHVkZToKICAgIC0gSW5mZXJyaW5nIGh1bWFu
IGJlaGF2aW91ciBjaGFuZ2VzIGZyb20gdGV4dCBtZXNzYWdlIHJhdGVzCiAg
ICAKKiBbKipDaGFwdGVyIDI6IEEgbGl0dGxlIG1vcmUgb24gUHlNQyoqXSho
dHRwOi8vbmJ2aWV3ZXIuanVweXRlci5vcmcvdXJscy9yYXcuZ2l0aHViLmNv
bS9DYW1EYXZpZHNvblBpbG9uL1Byb2JhYmlsaXN0aWMtUHJvZ3JhbW1pbmct
YW5kLUJheWVzaWFuLU1ldGhvZHMtZm9yLUhhY2tlcnMvbWFzdGVyL0NoYXB0
ZXIyX01vcmVQeU1DL0NoMl9Nb3JlUHlNQ19QeU1DMy5pcHluYikKICAgIFdl
IGV4cGxvcmUgbW9kZWxpbmcgQmF5ZXNpYW4gcHJvYmxlbXMgdXNpbmcgUHl0
aG9uJ3MgUHlNQyBsaWJyYXJ5IHRocm91Z2ggZXhhbXBsZXMuIEhvdyBkbyB3
ZSBjcmVhdGUgQmF5ZXNpYW4gbW9kZWxzPyBFeGFtcGxlcyBpbmNsdWRlOgog
ICAgLSBEZXRlY3RpbmcgdGhlIGZyZXF1ZW5jeSBvZiBjaGVhdGluZyBzdHVk
ZW50cywgd2hpbGUgYXZvaWRpbmcgbGlhcnMKICAgIC0gQ2FsY3VsYXRpbmcg
cHJvYmFiaWxpdGllcyBvZiB0aGUgQ2hhbGxlbmdlciBzcGFjZS1zaHV0dGxl
IGRpc2FzdGVyCiAgICAKKiBbKipDaGFwdGVyIDM6IE9wZW5pbmcgdGhlIEJs
YWNrIEJveCBvZiBNQ01DKipdKGh0dHA6Ly9uYnZpZXdlci5qdXB5dGVyLm9y
Zy91cmxzL3Jhdy5naXRodWIuY29tL0NhbURhdmlkc29uUGlsb24vUHJvYmFi
aWxpc3RpYy1Qcm9ncmFtbWluZy1hbmQtQmF5ZXNpYW4tTWV0aG9kcy1mb3It
SGFja2Vycy9tYXN0ZXIvQ2hhcHRlcjNfTUNNQy9DaDNfSW50cm9NQ01DX1B5
TUMzLmlweW5iKQogICAgV2UgZGlzY3VzcyBob3cgTUNNQyBvcGVyYXRlcyBh
bmQgZGlhZ25vc3RpYyB0b29scy4gRXhhbXBsZXMgaW5jbHVkZToKICAgIC0g
QmF5ZXNpYW4gY2x1c3RlcmluZyB3aXRoIG1peHR1cmUgbW9kZWxzCiAgICAK
KiBbKipDaGFwdGVyIDQ6IFRoZSBHcmVhdGVzdCBUaGVvcmVtIE5ldmVyIFRv
bGQqKl0oaHR0cDovL25idmlld2VyLmp1cHl0ZXIub3JnL3VybHMvcmF3Lmdp
dGh1Yi5jb20vQ2FtRGF2aWRzb25QaWxvbi9Qcm9iYWJpbGlzdGljLVByb2dy
YW1taW5nLWFuZC1CYXllc2lhbi1NZXRob2RzLWZvci1IYWNrZXJzL21hc3Rl
ci9DaGFwdGVyNF9UaGVHcmVhdGVzdFRoZW9yZW1OZXZlclRvbGQvQ2g0X0xh
d09mTGFyZ2VOdW1iZXJzX1B5TUMzLmlweW5iKQogICAgV2UgZXhwbG9yZSBh
biBpbmNyZWRpYmx5IHVzZWZ1bCwgYW5kIGRhbmdlcm91cywgdGhlb3JlbTog
VGhlIExhdyBvZiBMYXJnZSBOdW1iZXJzLiBFeGFtcGxlcyBpbmNsdWRlOgog
ICAgLSBFeHBsb3JpbmcgYSBLYWdnbGUgZGF0YXNldCBhbmQgdGhlIHBpdGZh
bGxzIG9mIG5haXZlIGFuYWx5c2lzCiAgICAtIEhvdyB0byBzb3J0IFJlZGRp
dCBjb21tZW50cyBmcm9tIGJlc3QgdG8gd29yc3QgKG5vdCBhcyBlYXN5IGFz
IHlvdSB0aGluaykKICAgIAoqIFsqKkNoYXB0ZXIgNTogV291bGQgeW91IHJh
dGhlciBsb3NlIGFuIGFybSBvciBhIGxlZz8qKl0oaHR0cDovL25idmlld2Vy
Lmp1cHl0ZXIub3JnL3VybHMvcmF3LmdpdGh1Yi5jb20vQ2FtRGF2aWRzb25Q
aWxvbi9Qcm9iYWJpbGlzdGljLVByb2dyYW1taW5nLWFuZC1CYXllc2lhbi1N
ZXRob2RzLWZvci1IYWNrZXJzL21hc3Rlci9DaGFwdGVyNV9Mb3NzRnVuY3Rp
b25zL0NoNV9Mb3NzRnVuY3Rpb25zX1B5TUMzLmlweW5iKQogICAgVGhlIGlu
dHJvZHVjdGlvbiBvZiBsb3NzIGZ1bmN0aW9ucyBhbmQgdGhlaXIgKGF3ZXNv
bWUpIHVzZSBpbiBCYXllc2lhbiBtZXRob2RzLiAgRXhhbXBsZXMgaW5jbHVk
ZToKICAgIC0gU29sdmluZyB0aGUgKlByaWNlIGlzIFJpZ2h0KidzIFNob3dk
b3duCiAgICAtIE9wdGltaXppbmcgZmluYW5jaWFsIHByZWRpY3Rpb25zCiAg
ICAtIFdpbm5pbmcgc29sdXRpb24gdG8gdGhlIEthZ2dsZSBEYXJrIFdvcmxk
J3MgY29tcGV0aXRpb24KICAgIAoqIFsqKkNoYXB0ZXIgNjogR2V0dGluZyBv
dXIgKnByaW9yKi1pdGllcyBzdHJhaWdodCoqXShodHRwOi8vbmJ2aWV3ZXIu
anVweXRlci5vcmcvdXJscy9yYXcuZ2l0aHViLmNvbS9DYW1EYXZpZHNvblBp
bG9uL1Byb2JhYmlsaXN0aWMtUHJvZ3JhbW1pbmctYW5kLUJheWVzaWFuLU1l
dGhvZHMtZm9yLUhhY2tlcnMvbWFzdGVyL0NoYXB0ZXI2X1ByaW9yaXRpZXMv
Q2g2X1ByaW9yc19QeU1DMy5pcHluYikKICAgIFByb2JhYmx5IHRoZSBtb3N0
IGltcG9ydGFudCBjaGFwdGVyLiBXZSBkcmF3IG9uIGV4cGVydCBvcGluaW9u
cyB0byBhbnN3ZXIgcXVlc3Rpb25zLiBFeGFtcGxlcyBpbmNsdWRlOgogICAg
LSBNdWx0aS1Bcm1lZCBCYW5kaXRzIGFuZCB0aGUgQmF5ZXNpYW4gQmFuZGl0
IHNvbHV0aW9uLgogICAgLSBXaGF0IGlzIHRoZSByZWxhdGlvbnNoaXAgYmV0
d2VlbiBkYXRhIHNhbXBsZSBzaXplIGFuZCBwcmlvcj8KICAgIC0gRXN0aW1h
dGluZyBmaW5hbmNpYWwgdW5rbm93bnMgdXNpbmcgZXhwZXJ0IHByaW9ycwog
ICAgCiAgICBXZSBleHBsb3JlIHVzZWZ1bCB0aXBzIHRvIGJlIG9iamVjdGl2
ZSBpbiBhbmFseXNpcyBhcyB3ZWxsIGFzIGNvbW1vbiBwaXRmYWxscyBvZiBw
cmlvcnMuIAoKCgogICAgCioqTW9yZSBxdWVzdGlvbnMgYWJvdXQgUHlNQz8q
KgpQbGVhc2UgcG9zdCB5b3VyIG1vZGVsaW5nLCBjb252ZXJnZW5jZSwgb3Ig
YW55IG90aGVyIFB5TUMgcXVlc3Rpb24gb24gW2Nyb3NzLXZhbGlkYXRlZF0o
aHR0cDovL3N0YXRzLnN0YWNrZXhjaGFuZ2UuY29tLyksIHRoZSBzdGF0aXN0
aWNzIHN0YWNrLWV4Y2hhbmdlLgogICAgCiAgICAKVXNpbmcgdGhlIGJvb2sK
LS0tLS0tLQoKVGhlIGJvb2sgY2FuIGJlIHJlYWQgaW4gdGhyZWUgZGlmZmVy
ZW50IHdheXMsIHN0YXJ0aW5nIGZyb20gbW9zdCByZWNvbW1lbmRlZCB0byBs
ZWFzdCByZWNvbW1lbmRlZDogCgoxLiBUaGUgbW9zdCByZWNvbW1lbmRlZCBv
cHRpb24gaXMgdG8gY2xvbmUgdGhlIHJlcG9zaXRvcnkgdG8gZG93bmxvYWQg
dGhlIC5pcHluYiBmaWxlcyB0byB5b3VyIGxvY2FsIG1hY2hpbmUuIElmIHlv
dSBoYXZlIEp1cHl0ZXIgaW5zdGFsbGVkLCB5b3UgY2FuIHZpZXcgdGhlIApj
aGFwdGVycyBpbiB5b3VyIGJyb3dzZXIgKnBsdXMqIGVkaXQgYW5kIHJ1biB0
aGUgY29kZSBwcm92aWRlZCAoYW5kIHRyeSBzb21lIHByYWN0aWNlIHF1ZXN0
aW9ucykuIFRoaXMgaXMgdGhlIHByZWZlcnJlZCBvcHRpb24gdG8gcmVhZAp0
aGlzIGJvb2ssIHRob3VnaCBpdCBjb21lcyB3aXRoIHNvbWUgZGVwZW5kZW5j
aWVzLiAKICAgIC0gIEp1cHl0ZXIgaXMgYSByZXF1aXJlbWVudCB0byB2aWV3
IHRoZSBpcHluYiBmaWxlcy4gSXQgY2FuIGJlIGRvd25sb2FkZWQgW2hlcmVd
KGh0dHA6Ly9qdXB5dGVyLm9yZy8pLiBKdXB5dGVyIG5vdGVib29rcyBjYW4g
YmUgcnVuIGJ5IGAoeW91ci12aXJ0dWFsZW52KSB+L3BhdGgvdG8vdGhlL2Jv
b2svQ2hhcHRlcjFfSW50cm9kdWN0aW9uICQganVweXRlciBub3RlYm9va2AK
ICAgIC0gIEZvciBMaW51eCB1c2VycywgeW91IHNob3VsZCBub3QgaGF2ZSBh
IHByb2JsZW0gaW5zdGFsbGluZyBOdW1QeSwgU2NpUHksIE1hdHBsb3RsaWIg
YW5kIFB5TUMuIEZvciBXaW5kb3dzIHVzZXJzLCBjaGVjayBvdXQgW3ByZS1j
b21waWxlZCB2ZXJzaW9uc10oaHR0cDovL3d3dy5sZmQudWNpLmVkdS9+Z29o
bGtlL3B5dGhvbmxpYnMvKSBpZiB5b3UgaGF2ZSBkaWZmaWN1bHR5LiAKICAg
IC0gIEluIHRoZSBzdHlsZXMvIGRpcmVjdG9yeSBhcmUgYSBudW1iZXIgb2Yg
ZmlsZXMgKC5tYXRwbG90bGlyYykgdGhhdCB1c2VkIHRvIG1ha2UgdGhpbmdz
IHByZXR0eS4gVGhlc2UgYXJlIG5vdCBvbmx5IGRlc2lnbmVkIGZvciB0aGUg
Ym9vaywgYnV0IHRoZXkgb2ZmZXIgbWFueSBpbXByb3ZlbWVudHMgb3ZlciB0
aGUgZGVmYXVsdCBzZXR0aW5ncyBvZiBtYXRwbG90bGliLgoyLiBUaGUgc2Vj
b25kLCBwcmVmZXJyZWQsIG9wdGlvbiBpcyB0byB1c2UgdGhlIG5idmlld2Vy
Lmp1cHl0ZXIub3JnIHNpdGUsIHdoaWNoIGRpc3BsYXkgSnVweXRlciBub3Rl
Ym9va3MgaW4gdGhlIGJyb3dzZXIgKFtleGFtcGxlXShodHRwOi8vbmJ2aWV3
ZXIuanVweXRlci5vcmcvdXJscy9yYXcuZ2l0aHViLmNvbS9DYW1EYXZpZHNv
blBpbG9uL1Byb2JhYmlsaXN0aWMtUHJvZ3JhbW1pbmctYW5kLUJheWVzaWFu
LU1ldGhvZHMtZm9yLUhhY2tlcnMvbWFzdGVyL0NoYXB0ZXIxX0ludHJvZHVj
dGlvbi9DaDFfSW50cm9kdWN0aW9uX1B5TUMyLmlweW5iKSkuClRoZSBjb250
ZW50cyBhcmUgdXBkYXRlZCBzeW5jaHJvbm91c2x5IGFzIGNvbW1pdHMgYXJl
IG1hZGUgdG8gdGhlIGJvb2suIFlvdSBjYW4gdXNlIHRoZSBDb250ZW50cyBz
ZWN0aW9uIGFib3ZlIHRvIGxpbmsgdG8gdGhlIGNoYXB0ZXJzLgogCjMuIFBE
RnMgYXJlIHRoZSBsZWFzdC1wcmVmZXJyZWQgbWV0aG9kIHRvIHJlYWQgdGhl
IGJvb2ssIGFzIFBERnMgYXJlIHN0YXRpYyBhbmQgbm9uLWludGVyYWN0aXZl
LiBJZiBQREZzIGFyZSBkZXNpcmVkLCB0aGV5IGNhbiBiZSBjcmVhdGVkIGR5
bmFtaWNhbGx5IHVzaW5nIHRoZSBbbmJjb252ZXJ0XShodHRwczovL2dpdGh1
Yi5jb20vanVweXRlci9uYmNvbnZlcnQpIHV0aWxpdHkuCiAKCkluc3RhbGxh
dGlvbiBhbmQgY29uZmlndXJhdGlvbgotLS0tLS0KCgpJZiB5b3Ugd291bGQg
bGlrZSB0byBydW4gdGhlIEp1cHl0ZXIgbm90ZWJvb2tzIGxvY2FsbHksIChv
cHRpb24gMS4gYWJvdmUpLCB5b3UnbGwgbmVlZCB0byBpbnN0YWxsIHRoZSBm
b2xsb3dpbmc6CgotICBKdXB5dGVyIGlzIGEgcmVxdWlyZW1lbnQgdG8gdmll
dyB0aGUgaXB5bmIgZmlsZXMuIEl0IGNhbiBiZSBkb3dubG9hZGVkIFtoZXJl
XShodHRwOi8vanVweXRlci5vcmcvaW5zdGFsbC5odG1sKSAKLSBOZWNlc3Nh
cnkgcGFja2FnZXMgYXJlIFB5TUMsIE51bVB5LCBTY2lQeSBhbmQgTWF0cGxv
dGxpYi4gICAKICAgLSAgRm9yIExpbnV4L09TWCB1c2VycywgeW91IHNob3Vs
ZCBub3QgaGF2ZSBhIHByb2JsZW0gaW5zdGFsbGluZyB0aGUgYWJvdmUsIFsq
ZXhjZXB0IGZvciBNYXRwbG90bGliIG9uIE9TWCpdKGh0dHA6Ly93d3cucGVu
YW5kcGFudHMuY29tLzIwMTIvMDIvMjQvaW5zdGFsbC1weXRob24vKS4KICAg
LSAgRm9yIFdpbmRvd3MgdXNlcnMsIGNoZWNrIG91dCBbcHJlLWNvbXBpbGVk
IHZlcnNpb25zXShodHRwOi8vd3d3LmxmZC51Y2kuZWR1L35nb2hsa2UvcHl0
aG9ubGlicy8pIGlmIHlvdSBoYXZlIGRpZmZpY3VsdHkuIAogICAtIGFsc28g
cmVjb21tZW5kZWQsIGZvciBkYXRhLW1pbmluZyBleGVyY2lzZXMsIGFyZSBb
UFJBV10oaHR0cHM6Ly9naXRodWIuY29tL3ByYXctZGV2L3ByYXcpIGFuZCBb
cmVxdWVzdHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9rZW5uZXRocmVpdHovcmVx
dWVzdHMpLiAKLSBOZXcgdG8gUHl0aG9uIG9yIEp1cHl0ZXIsIGFuZCBoZWxw
IHdpdGggdGhlIG5hbWVzcGFjZXM/IENoZWNrIG91dCBbdGhpcyBhbnN3ZXJd
KGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMTI5ODc2MjQv
Y29uZnVzaW9uLWJldHdlZW4tbnVtcHktc2NpcHktbWF0cGxvdGxpYi1hbmQt
cHlsYWIpLiAKCi0gIEluIHRoZSBzdHlsZXMvIGRpcmVjdG9yeSBhcmUgYSBu
dW1iZXIgb2YgZmlsZXMgdGhhdCBhcmUgY3VzdG9taXplZCBmb3IgdGhlIG5v
dGVib29rLiAKVGhlc2UgYXJlIG5vdCBvbmx5IGRlc2lnbmVkIGZvciB0aGUg
Ym9vaywgYnV0IHRoZXkgb2ZmZXIgbWFueSBpbXByb3ZlbWVudHMgb3ZlciB0
aGUgCmRlZmF1bHQgc2V0dGluZ3Mgb2YgbWF0cGxvdGxpYiBhbmQgdGhlIEp1
cHl0ZXIgbm90ZWJvb2suIFRoZSBpbiBub3RlYm9vayBzdHlsZSBoYXMgbm90
IGJlZW4gZmluYWxpemVkIHlldC4KCgoKRGV2ZWxvcG1lbnQKLS0tLS0tCgpU
aGlzIGJvb2sgaGFzIGFuIHVudXN1YWwgZGV2ZWxvcG1lbnQgZGVzaWduLiBU
aGUgY29udGVudCBpcyBvcGVuLXNvdXJjZWQsIG1lYW5pbmcgYW55b25lIGNh
biBiZSBhbiBhdXRob3IuIApBdXRob3JzIHN1Ym1pdCBjb250ZW50IG9yIHJl
dmlzaW9ucyB1c2luZyB0aGUgR2l0SHViIGludGVyZmFjZS4gCgojIyMgSG93
IHRvIGNvbnRyaWJ1dGUKCiMjIyMgV2hhdCB0byBjb250cmlidXRlPwoKLSAg
VGhlIGN1cnJlbnQgY2hhcHRlciBsaXN0IGlzIG5vdCBmaW5hbGl6ZWQuIElm
IHlvdSBzZWUgc29tZXRoaW5nIHRoYXQgaXMgbWlzc2luZyAoTUNNQywgTUFQ
LCBCYXllc2lhbiBuZXR3b3JrcywgZ29vZCBwcmlvciBjaG9pY2VzLCBQb3Rl
bnRpYWwgY2xhc3NlcyBldGMuKSwKZmVlbCBmcmVlIHRvIHN0YXJ0IHRoZXJl
LiAKLSAgQ2xlYW5pbmcgdXAgUHl0aG9uIGNvZGUgYW5kIG1ha2luZyBjb2Rl
IG1vcmUgUHlNQy1lc3F1ZQotICBHaXZpbmcgYmV0dGVyIGV4cGxhbmF0aW9u
cwotICBTcGVsbGluZy9ncmFtbWFyIG1pc3Rha2VzCi0gIFN1Z2dlc3Rpb25z
Ci0gIENvbnRyaWJ1dGluZyB0byB0aGUgSnVweXRlciBub3RlYm9vayBzdHls
ZXMKCgojIyMjIENvbW1pdGluZwoKLSAgQWxsIGNvbW1pdHMgYXJlIHdlbGNv
bWUsIGV2ZW4gaWYgdGhleSBhcmUgbWlub3IgOykKLSAgSWYgeW91IGFyZSB1
bmZhbWlsaWFyIHdpdGggR2l0aHViLCB5b3UgY2FuIGVtYWlsIG1lIGNvbnRy
aWJ1dGlvbnMgdG8gdGhlIGVtYWlsIGJlbG93LgoKUmV2aWV3cwotLS0tLS0K
KnRoZXNlIGFyZSBzYXRpcmljYWwsIGJ1dCByZWFsKgoKIk5vLCBidXQgaXQg
bG9va3MgZ29vZCIgLSBbSm9obiBELiBDb29rXShodHRwczovL3R3aXR0ZXIu
Y29tL0pvaG5EQ29vay9zdGF0dXMvMzU5NjcyMTMzNjk1MTg0ODk2KQoKIkkg
Li4uIHJlYWQgdGhpcyBib29rIC4uLiBJIGxpa2UgaXQhIiAtIFtBbmRyZXcg
R2VsbWFuXShodHRwOi8vd3d3LmFuZHJld2dlbG1hbi5jb20vMjAxMy8wNy8y
MS9iYXllcy1yZWxhdGVkKQoKIlRoaXMgYm9vayBpcyBhIGdvZHNlbmQsIGFu
ZCBhIGRpcmVjdCByZWZ1dGF0aW9uIHRvIHRoYXQgJ2htcGghIHlvdSBkb24n
dCBrbm93IG1hdGhzLCBwaXNzIG9mZiEnIHNjaG9vbCBvZiB0aG91Z2h0Li4u
ClRoZSBwdWJsaXNoaW5nIG1vZGVsIGlzIHNvIHVudXN1YWwuIE5vdCBvbmx5
IGlzIGl0IG9wZW4gc291cmNlIGJ1dCBpdCByZWxpZXMgb24gcHVsbCByZXF1
ZXN0cyBmcm9tIGFueW9uZSBpbiBvcmRlciB0byBwcm9ncmVzcyB0aGUgYm9v
ay4gVGhpcyBpcyBpbmdlbmlvdXMgYW5kIGhlYXJ0ZW5pbmciIC0gW2V4Y2l0
ZWQgUmVkZGl0IHVzZXJdKGh0dHA6Ly93d3cucmVkZGl0LmNvbS9yL1B5dGhv
bi9jb21tZW50cy8xYWxuYWwvcHJvYmFiaWxpc3RpY19wcm9ncmFtbWluZ19h
bmRfYmF5ZXNpYW5fbWV0aG9kcy8pCgoKCkNvbnRyaWJ1dGlvbnMgYW5kIFRo
YW5rcwotLS0tLQoKClRoYW5rcyB0byBhbGwgb3VyIGNvbnRyaWJ1dGluZyBh
dXRob3JzLCBpbmNsdWRpbmcgKGluIGNocm9ub2xvZ2ljYWwgb3JkZXIpOgoK
QXV0aG9ycyB8IHwgfCB8Ci0tLSB8IC0tLSB8IC0tLSB8IC0tLQpbQ2FtZXJv
biBEYXZpZHNvbi1QaWxvbl0oaHR0cDovL3d3dy5jYW1kcC5jb20pIHwgIFtT
dGVmIEdpYnNvbl0oaHR0cDovL3N0ZWZnaWJzb24uY29tKSB8IFtWaW5jZW50
IE9ocHJlY2lvXShodHRwOi8vYmlnc25hcmYud29yZHByZXNzLmNvbS8pIHxb
TGFycyBCdWl0aW5ja10oaHR0cHM6Ly9naXRodWIuY29tL2xhcnNtYW4pCltQ
YXVsIE1hZ3dlbmVdKGh0dHA6Ly9naXRodWIuY29tL3BtYWd3ZW5lKSB8ICBb
TWF0dGhpYXMgQnVzc29ubmllcl0oaHR0cHM6Ly9naXRodWIuY29tL0NhcnJl
YXUpIHwgW0plbnMgUmFudGlsXShodHRwczovL2dpdGh1Yi5jb20vSmVuc1Jh
bnRpbCkgfCAgW3ktcF0oaHR0cHM6Ly9naXRodWIuY29tL3ktcCkKW0V0aGFu
IEJyb3duXShodHRwOi8vd3d3LmV0YW5vLm5ldC8pIHwgIFtKb25hdGhhbiBX
aGl0bW9yZV0oaHR0cDovL2pvbmF0aGFud2hpdG1vcmUuY29tLykgfCBbTWF0
dGlhIFJpZ290dGldKGh0dHBzOi8vZ2l0aHViLmNvbS9tYXRyaWcpIHwgIFtD
b2xieSBMZW1vbl0oaHR0cHM6Ly9naXRodWIuY29tL2NvbGliaXVzKQpbR3Vz
dGF2IFcgRGVsaXVzXShodHRwczovL2dpdGh1Yi5jb20vZ3VzdGF2ZGVsaXVz
KSB8ICBbTWF0dGhldyBDb25sZW5dKGh0dHA6Ly93d3cubWF0aGlzb25pYW4u
Y29tLykgIHwgW0ppbSBSYWRmb3JkXShodHRwczovL2dpdGh1Yi5jb20vcmFk
Zm9yZCkgfCAgW1Zhbm5lc3NhIFNhYmlub10oaHR0cDovL2Jhbml2ZXJzby5j
b20vKQpbVGhvbWFzIEJyYXR0XShodHRwczovL2dpdGh1Yi5jb20vdGhvbWFz
YnJhdHQpIHwgIFtOaXNhbiBIYXJhbWF0aV0oaHR0cHM6Ly9naXRodWIuY29t
L25pc2FuaGFyYW1hdGkpIHwgIFtSb2JlcnQgR3JhbnRdKGh0dHBzOi8vZ2l0
aHViLmNvbS9iZ3JhbnQpIHwgW01hdHRoZXcgV2FtcGxlci1Eb3R5XShodHRw
czovL2dpdGh1Yi5jb20veGN0aHVsaHUpCltZYXJvc2xhdiBIYWxjaGVua29d
KGh0dHBzOi8vZ2l0aHViLmNvbS95YXJpa29wdGljKSB8ICBbQWxleCBHYXJl
bF0oaHR0cHM6Ly9naXRodWIuY29tL2FsZXhnYXJlbCkgfCBbT2xla3NhbmRy
IEx5c2Vua29dKGh0dHBzOi8vdHdpdHRlci5jb20vc2FzaF9rbykgfCAgW2xp
b3JpXShodHRwczovL2dpdGh1Yi5jb20vbGlvcmkpCltkdWNreTQyN10oaHR0
cHM6Ly9naXRodWIuY29tL2R1Y2t5NDI3KSB8ICBbUGFibG8gZGUgT2xpdmVp
cmEgQ2FzdHJvXShodHRwczovL2dpdGh1Yi5jb20vcGFibG9vbGl2ZWlyYSkg
fCBbc2VyZ2V5Zm9nZWxzb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9zZXJnZXlm
b2dlbHNvbikgfCAgW01hdHRpYSBSaWdvdHRpXShodHRwOi8vbmV1cm90aGVv
cnkuY29sdW1iaWEuZWR1L35tcmlnb3R0aS8pCltNYXR0IEJhdW1hbl0oaHR0
cHM6Ly9naXRodWIuY29tL21iYXVtYW4pIHwgW0FuZHJldyBEdWJlcnN0ZWlu
XShodHRwOi8vd3d3LmFuZHJld2R1YmVyc3RlaW4uY29tLykgfCBbQ2Fyc3Rl
biBCcmFuZHRdKGh0dHA6Ly9jZWJlLmNjLykgfCAgW0JvYiBKYW5zZW5dKGh0
dHA6Ly93ZWIyZG9jeC5jb20pCiBbdWd1cnRoZW1hc3Rlcl0oaHR0cHM6Ly9n
aXRodWIuY29tL3VndXJ0aGVtYXN0ZXIpICAgfCBbV2lsbGlhbSBTY290dF0o
aHR0cHM6Ly9naXRodWIuY29tL3dpbGxpYW1zY290dCkgICB8ICBbTWluIFJL
XShodHRwOi8vdHdpdHRlci5jb20vbWlucmspICB8ICBbQnVsd2Vyc2F0b3Jd
KGh0dHBzOi8vZ2l0aHViLmNvbS9CdWx3ZXJzYXRvcikKICBbZWxwcmVzXSho
dHRwczovL2dpdGh1Yi5jb20vZWxwcmVzKSAgfCAgW0F1Z3VzdG8gSGFja10o
aHR0cHM6Ly9naXRodWIuY29tL2hhY2thdWd1c3RvKSAgfCBbTWljaGFlbCBG
ZWxkbWFubl0oaHR0cHM6Ly9naXRodWIuY29tL21pY2hhZikgICB8IFtZb3Vr
aV0oaHR0cHM6Ly9naXRodWIuY29tL1lvdWtpKQogICBbSmVucyBSYW50aWxd
KGh0dHA6Ly9qZW5zcmFudGlsLmdpdGh1Yi5pbykgfCAgW0t5bGUgTWV5ZXJd
KGh0dHA6Ly9reWxlYW0uY29tKSAgfCAgW0VyaWMgTWFydGluXShodHRwOi8v
ZXJpY21hcnQuaW4pICB8IFtJbmNvbmRpdHVzXShodHRwczovL2dpdGh1Yi5j
b20vSW5jb25kaXR1cykKIFtLbGVwdGluZV0oaHR0cHM6Ly9naXRodWIuY29t
L0tsZXB0aW5lKSAgIHwgIFtTdHVhcnQgTGF5dG9uXShodHRwczovL2dpdGh1
Yi5jb20vc2xheXRvbikgIHwgIFtBbnRvbmlubyBJbmdhcmdpb2xhXShodHRw
czovL2dpdGh1Yi5jb20vdHJpdGVtaW8pICB8ICBbdnNsOV0oaHR0cHM6Ly9n
aXRodWIuY29tL3ZzbDkpCiAgW1RvbSBDaHJpc3RpZV0oaHR0cHM6Ly9naXRo
dWIuY29tL3RvbS1jaHJpc3RpZSkgIHwgIFtiY2xvd10oaHR0cHM6Ly9naXRo
dWIuY29tL2JjbG93KSAgfCAgW1NpbW9uIFBvdHRlcl0oaHR0cDovL3NqcC5j
by5uei8pICB8IFtHYXJ0aCBTbnlkZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9H
YXJ0aFNueWRlcikKIFtEYW5pZWwgQmVhdWNoYW1wXShodHRwOi8vdHdpdHRl
ci5jb20vcHVzaG1hdHJpeCkgIHwgIFtQaGlsaXBwIFNpbmdlcl0oaHR0cDov
L3d3dy5waGlsaXBwc2luZ2VyLmluZm8pICB8IFtnYmVubWFydGluXShodHRw
czovL2dpdGh1Yi5jb20vZ2Jlbm1hcnRpbikgfCBbUGVhZGFyIENveWxlXSho
dHRwczovL3R3aXR0ZXIuY29tL1NwcmluZ2NvaWwpCgpXZSB3b3VsZCBsaWtl
IHRvIHRoYW5rIHRoZSBQeXRob24gY29tbXVuaXR5IGZvciBidWlsZGluZyBh
biBhbWF6aW5nIGFyY2hpdGVjdHVyZS4gV2Ugd291bGQgbGlrZSB0byB0aGFu
ayB0aGUgCnN0YXRpc3RpY3MgY29tbXVuaXR5IGZvciBidWlsZGluZyBhbiBh
bWF6aW5nIGFyY2hpdGVjdHVyZS4gCgpTaW1pbGFybHksIHRoZSBib29rIGlz
IG9ubHkgcG9zc2libGUgYmVjYXVzZSBvZiB0aGUgW1B5TUNdKGh0dHA6Ly9n
aXRodWIuY29tL3B5bWMtZGV2cy9weW1jKSBsaWJyYXJ5LiBBIGJpZyB0aGFu
a3MgdG8gdGhlIGNvcmUgZGV2cyBvZiBQeU1DOiBDaHJpcyBGb25uZXNiZWNr
LCBBbmFuZCBQYXRpbCwgRGF2aWQgSHVhcmQgYW5kIEpvaG4gU2FsdmF0aWVy
LgoKT25lIGZpbmFsIHRoYW5rcy4gVGhpcyBib29rIHdhcyBnZW5lcmF0ZWQg
YnkgSnVweXRlciBOb3RlYm9vaywgYSB3b25kZXJmdWwgdG9vbCBmb3IgZGV2
ZWxvcGluZyBpbiBQeXRob24uIFdlIHRoYW5rIHRoZSBJUHl0aG9uL0p1cHl0
ZXIgCmNvbW11bml0eSBmb3IgZGV2ZWxvcGluZyB0aGUgTm90ZWJvb2sgaW50
ZXJmYWNlLiBBbGwgSnVweXRlciBub3RlYm9vayBmaWxlcyBhcmUgYXZhaWxh
YmxlIGZvciBkb3dubG9hZCBvbiB0aGUgR2l0SHViIHJlcG9zaXRvcnkuIAoK
CgojIyMjIENvbnRhY3QKQ29udGFjdCB0aGUgbWFpbiBhdXRob3IsIENhbSBE
YXZpZHNvbi1QaWxvbiBhdCBjYW0uZGF2aWRzb24ucGlsb25AZ21haWwuY29t
IG9yIFtAY21ybmRwXShodHRwczovL3R3aXR0ZXIuY29tL2Ntcm5fZHApCgoK
IVtJbWd1cl0oaHR0cDovL2kuaW1ndXIuY29tL1piNzlRWmIucG5nKQo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'terraform',17728164,"b'Terraform enables you to safely and predictably create, change, and improve infrastructure. It is an open source tool that codifies APIs into declarative configuration files that can be shared amongst team members, treated as code, edited, reviewed, and versioned.'",b'Go',1241,19539,,19539,False,b'https://api.github.com/repos/hashicorp/terraform/forks',"VGVycmFmb3JtCj09PT09PT09PQoKLSBXZWJzaXRlOiBodHRwczovL3d3dy50
ZXJyYWZvcm0uaW8KLSBbIVtHaXR0ZXIgY2hhdF0oaHR0cHM6Ly9iYWRnZXMu
Z2l0dGVyLmltL2hhc2hpY29ycC10ZXJyYWZvcm0vTG9iYnkucG5nKV0oaHR0
cHM6Ly9naXR0ZXIuaW0vaGFzaGljb3JwLXRlcnJhZm9ybS9Mb2JieSkKLSBN
YWlsaW5nIGxpc3Q6IFtHb29nbGUgR3JvdXBzXShodHRwOi8vZ3JvdXBzLmdv
b2dsZS5jb20vZ3JvdXAvdGVycmFmb3JtLXRvb2wpCgo8aW1nIGFsdD0iVGVy
cmFmb3JtIiBzcmM9Imh0dHBzOi8vY2RuLnJhd2dpdC5jb20vaGFzaGljb3Jw
L3RlcnJhZm9ybS13ZWJzaXRlL21hc3Rlci9jb250ZW50L3NvdXJjZS9hc3Nl
dHMvaW1hZ2VzL2xvZ28taGFzaGljb3JwLnN2ZyIgd2lkdGg9IjYwMHB4Ij4K
ClRlcnJhZm9ybSBpcyBhIHRvb2wgZm9yIGJ1aWxkaW5nLCBjaGFuZ2luZywg
YW5kIHZlcnNpb25pbmcgaW5mcmFzdHJ1Y3R1cmUgc2FmZWx5IGFuZCBlZmZp
Y2llbnRseS4gVGVycmFmb3JtIGNhbiBtYW5hZ2UgZXhpc3RpbmcgYW5kIHBv
cHVsYXIgc2VydmljZSBwcm92aWRlcnMgYXMgd2VsbCBhcyBjdXN0b20gaW4t
aG91c2Ugc29sdXRpb25zLgoKVGhlIGtleSBmZWF0dXJlcyBvZiBUZXJyYWZv
cm0gYXJlOgoKLSAqKkluZnJhc3RydWN0dXJlIGFzIENvZGUqKjogSW5mcmFz
dHJ1Y3R1cmUgaXMgZGVzY3JpYmVkIHVzaW5nIGEgaGlnaC1sZXZlbCBjb25m
aWd1cmF0aW9uIHN5bnRheC4gVGhpcyBhbGxvd3MgYSBibHVlcHJpbnQgb2Yg
eW91ciBkYXRhY2VudGVyIHRvIGJlIHZlcnNpb25lZCBhbmQgdHJlYXRlZCBh
cyB5b3Ugd291bGQgYW55IG90aGVyIGNvZGUuIEFkZGl0aW9uYWxseSwgaW5m
cmFzdHJ1Y3R1cmUgY2FuIGJlIHNoYXJlZCBhbmQgcmUtdXNlZC4KCi0gKipF
eGVjdXRpb24gUGxhbnMqKjogVGVycmFmb3JtIGhhcyBhICJwbGFubmluZyIg
c3RlcCB3aGVyZSBpdCBnZW5lcmF0ZXMgYW4gKmV4ZWN1dGlvbiBwbGFuKi4g
VGhlIGV4ZWN1dGlvbiBwbGFuIHNob3dzIHdoYXQgVGVycmFmb3JtIHdpbGwg
ZG8gd2hlbiB5b3UgY2FsbCBhcHBseS4gVGhpcyBsZXRzIHlvdSBhdm9pZCBh
bnkgc3VycHJpc2VzIHdoZW4gVGVycmFmb3JtIG1hbmlwdWxhdGVzIGluZnJh
c3RydWN0dXJlLgoKLSAqKlJlc291cmNlIEdyYXBoKio6IFRlcnJhZm9ybSBi
dWlsZHMgYSBncmFwaCBvZiBhbGwgeW91ciByZXNvdXJjZXMsIGFuZCBwYXJh
bGxlbGl6ZXMgdGhlIGNyZWF0aW9uIGFuZCBtb2RpZmljYXRpb24gb2YgYW55
IG5vbi1kZXBlbmRlbnQgcmVzb3VyY2VzLiBCZWNhdXNlIG9mIHRoaXMsIFRl
cnJhZm9ybSBidWlsZHMgaW5mcmFzdHJ1Y3R1cmUgYXMgZWZmaWNpZW50bHkg
YXMgcG9zc2libGUsIGFuZCBvcGVyYXRvcnMgZ2V0IGluc2lnaHQgaW50byBk
ZXBlbmRlbmNpZXMgaW4gdGhlaXIgaW5mcmFzdHJ1Y3R1cmUuCgotICoqQ2hh
bmdlIEF1dG9tYXRpb24qKjogQ29tcGxleCBjaGFuZ2VzZXRzIGNhbiBiZSBh
cHBsaWVkIHRvIHlvdXIgaW5mcmFzdHJ1Y3R1cmUgd2l0aCBtaW5pbWFsIGh1
bWFuIGludGVyYWN0aW9uLiBXaXRoIHRoZSBwcmV2aW91c2x5IG1lbnRpb25l
ZCBleGVjdXRpb24gcGxhbiBhbmQgcmVzb3VyY2UgZ3JhcGgsIHlvdSBrbm93
IGV4YWN0bHkgd2hhdCBUZXJyYWZvcm0gd2lsbCBjaGFuZ2UgYW5kIGluIHdo
YXQgb3JkZXIsIGF2b2lkaW5nIG1hbnkgcG9zc2libGUgaHVtYW4gZXJyb3Jz
LgoKRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZSB0aGUgW2ludHJvZHVjdGlv
biBzZWN0aW9uXShodHRwOi8vd3d3LnRlcnJhZm9ybS5pby9pbnRybykgb2Yg
dGhlIFRlcnJhZm9ybSB3ZWJzaXRlLgoKR2V0dGluZyBTdGFydGVkICYgRG9j
dW1lbnRhdGlvbgotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgpJ
ZiB5b3UncmUgbmV3IHRvIFRlcnJhZm9ybSBhbmQgd2FudCB0byBnZXQgc3Rh
cnRlZCBjcmVhdGluZyBpbmZyYXN0cnVjdHVyZSwgcGxlYXNlIGNoZWNrb3V0
IG91ciBbR2V0dGluZyBTdGFydGVkXShodHRwczovL3d3dy50ZXJyYWZvcm0u
aW8vaW50cm8vZ2V0dGluZy1zdGFydGVkL2luc3RhbGwuaHRtbCkgZ3VpZGUs
IGF2YWlsYWJsZSBvbiB0aGUgW1RlcnJhZm9ybSB3ZWJzaXRlXShodHRwOi8v
d3d3LnRlcnJhZm9ybS5pbykuCgpBbGwgZG9jdW1lbnRhdGlvbiBpcyBhdmFp
bGFibGUgb24gdGhlIFtUZXJyYWZvcm0gd2Vic2l0ZV0oaHR0cDovL3d3dy50
ZXJyYWZvcm0uaW8pOgoKICAtIFtJbnRyb10oaHR0cHM6Ly93d3cudGVycmFm
b3JtLmlvL2ludHJvL2luZGV4Lmh0bWwpCiAgLSBbRG9jc10oaHR0cHM6Ly93
d3cudGVycmFmb3JtLmlvL2RvY3MvaW5kZXguaHRtbCkKCkRldmVsb3Bpbmcg
VGVycmFmb3JtCi0tLS0tLS0tLS0tLS0tLS0tLS0tCgpUaGlzIHJlcG9zaXRv
cnkgY29udGFpbnMgb25seSBUZXJyYWZvcm0gY29yZSwgd2hpY2ggaW5jbHVk
ZXMgdGhlIGNvbW1hbmQgbGluZSBpbnRlcmZhY2UgYW5kIHRoZSBtYWluIGdy
YXBoIGVuZ2luZS4gUHJvdmlkZXJzIGFyZSBpbXBsZW1lbnRlZCBhcyBwbHVn
aW5zIHRoYXQgZWFjaCBoYXZlIHRoZWlyIG93biByZXBvc2l0b3J5IGluIFt0
aGUgYHRlcnJhZm9ybS1wcm92aWRlcnNgIG9yZ2FuaXphdGlvbl0oaHR0cHM6
Ly9naXRodWIuY29tL3RlcnJhZm9ybS1wcm92aWRlcnMpIG9uIEdpdEh1Yi4g
SW5zdHJ1Y3Rpb25zIGZvciBkZXZlbG9waW5nIGVhY2ggcHJvdmlkZXIgYXJl
IGluIHRoZSBhc3NvY2lhdGVkIFJFQURNRSBmaWxlLiBGb3IgbW9yZSBpbmZv
cm1hdGlvbiwgc2VlIFt0aGUgcHJvdmlkZXIgZGV2ZWxvcG1lbnQgb3ZlcnZp
ZXddKGh0dHBzOi8vd3d3LnRlcnJhZm9ybS5pby9kb2NzL3BsdWdpbnMvcHJv
dmlkZXIuaHRtbCkuCgpUbyBsZWFybiBtb3JlIGFib3V0IGNvbXBpbGluZyBU
ZXJyYWZvcm0gYW5kIGNvbnRyaWJ1dGluZyBzdWdnZXN0ZWQgY2hhbmdlcywg
cGxlYXNlIHJlZmVyIHRvIFt0aGUgY29udHJpYnV0aW5nIGd1aWRlXSguZ2l0
aHViL0NPTlRSSUJVVElORy5tZCkuCgojIyBMaWNlbnNlCltNb3ppbGxhIFB1
YmxpYyBMaWNlbnNlIHYyLjBdKGh0dHBzOi8vZ2l0aHViLmNvbS9oYXNoaWNv
cnAvdGVycmFmb3JtL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpCg==
",,"ZGlzdDogdHJ1c3R5CnN1ZG86IHJlcXVpcmVkCnNlcnZpY2VzOgogIC0gZG9j
a2VyCmxhbmd1YWdlOiBnbwpnbzoKLSAiMS4xMi4xMyIKCiMgYWRkIFRGX0NP
TlNVTF9URVNUPTEgdG8gcnVuIGNvbnN1bCB0ZXN0cwojIHRoZXkgd2VyZSBj
YXVzaW5nIHRpbW91dHMgaW4gdHJhdmlzCiMgYWRkIFRGX0VUQ0RWM19URVNU
PTEgdG8gcnVuIGV0Y2R2MyB0ZXN0cwojIGlmIGFkZGVkLCBURl9FVENEVjNf
RU5EUE9JTlRTIG11c3QgYmUgc2V0IHRvIGEgY29tbWEtc2VwYXJhdGVkIGxp
c3Qgb2YgKGluc2VjdXJlKSBldGNkIGVuZHBvaW50cyBhZ2FpbnN0IHdoaWNo
IHRvIHRlc3QKZW52OgogIC0gQ09OU1VMX1ZFUlNJT049MC43LjUgR09NQVhQ
Uk9DUz00IEdPMTExTU9EVUxFPW9uIEdPUFJPWFk9aHR0cHM6Ly9wcm94eS5n
b2xhbmcub3JnLwoKIyBGZXRjaCBjb25zdWwgZm9yIHRoZSBiYWNrZW5kIGFu
ZCBwcm92aWRlciB0ZXN0cwpiZWZvcmVfaW5zdGFsbDoKICAtIGN1cmwgLXNM
byBjb25zdWwuemlwIGh0dHBzOi8vcmVsZWFzZXMuaGFzaGljb3JwLmNvbS9j
b25zdWwvJHtDT05TVUxfVkVSU0lPTn0vY29uc3VsXyR7Q09OU1VMX1ZFUlNJ
T059X2xpbnV4X2FtZDY0LnppcAogIC0gdW56aXAgY29uc3VsLnppcAogIC0g
bWtkaXIgLXAgfi9iaW4KICAtIG12IGNvbnN1bCB+L2JpbgogIC0gZXhwb3J0
IFBBVEg9In4vYmluOiRQQVRIIgoKaW5zdGFsbDoKIyBUaGlzIHNjcmlwdCBp
cyB1c2VkIGJ5IHRoZSBUcmF2aXMgYnVpbGQgdG8gaW5zdGFsbCBhIGNvb2tp
ZSBmb3IKIyBnby5nb29nbGVzb3VyY2UuY29tIHNvIHJhdGUgbGltaXRzIGFy
ZSBoaWdoZXIgd2hlbiB1c2luZyBgZ28gZ2V0YCB0byBmZXRjaAojIHBhY2th
Z2VzIHRoYXQgbGl2ZSB0aGVyZS4KIyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNv
bS9nb2xhbmcvZ28vaXNzdWVzLzEyOTMzCi0gYmFzaCBzY3JpcHRzL2dvZ2V0
Y29va2llLnNoCi0gbWFrZSB0b29scwoKYmVmb3JlX3NjcmlwdDoKLSBnaXQg
Y29uZmlnIC0tZ2xvYmFsIHVybC5odHRwczovL2dpdGh1Yi5jb20vLmluc3Rl
YWRPZiBzc2g6Ly9naXRAZ2l0aHViLmNvbS8KCnNjcmlwdDoKLSBtYWtlIHRl
c3QKLSBnbyBtb2QgdmVyaWZ5Ci0gbWFrZSBlMmV0ZXN0Ci0gR09PUz13aW5k
b3dzIGdvIGJ1aWxkIC1tb2Q9dmVuZG9yCiMgd2Vic2l0ZS10ZXN0IGlzIHRl
bXBvcmFyaWx5IGRpc2FibGVkIHdoaWxlIHdlIGdldCB0aGUgd2Vic2l0ZSBi
dWlsZCBiYWNrIGluIHNoYXBlIGFmdGVyIHRoZSB2MC4xMiByZW9yZ2FuaXph
dGlvbgojLSBtYWtlIHdlYnNpdGUtdGVzdAoKYnJhbmNoZXM6CiAgb25seToK
ICAtIG1hc3RlcgogIC0gdjAuMTEKbm90aWZpY2F0aW9uczoKICBpcmM6CiAg
ICBjaGFubmVsczoKICAgIC0gaXJjLmZyZWVub2RlLm9yZyN0ZXJyYWZvcm0t
dG9vbAogICAgc2tpcF9qb2luOiB0cnVlCiAgICB1c2Vfbm90aWNlOiB0cnVl
Cm1hdHJpeDoKICBmYXN0X2ZpbmlzaDogdHJ1ZQogIGFsbG93X2ZhaWx1cmVz
OgogIC0gZ286IHRpcAo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'python-guide',1481305,"b'Python best practices guidebook, written for humans. '",b'Batchfile',88,19528,,19528,False,b'https://api.github.com/repos/realpython/python-guide/forks',"SGl0Y2hoaWtlcidzIEd1aWRlIHRvIFB5dGhvbgo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09CgoqKlB5dGhvbiBCZXN0IFByYWN0aWNlcyBHdWlkZWJv
b2sqKgoK4oaSIFJlYWQgdGhlIGZyZWUgZ3VpZGUgYXQ6IGBkb2NzLnB5dGhv
bi1ndWlkZS5vcmcgPGh0dHBzOi8vZG9jcy5weXRob24tZ3VpZGUub3JnPmBf
CgouLiBpbWFnZTo6IGh0dHBzOi8vZmFybTEuc3RhdGljZmxpY2tyLmNvbS82
MjgvMzMxNzM4MjQ5MzJfNThhZGQzNDU4MV9rX2QuanBnCgotLS0tLS0tLS0t
LQoKKipXb3JrIGluIHByb2dyZXNzLiBJZiB5b3UnZCBsaWtlIHRvIGhlbHAs
IHBsZWFzZSBkby4gVGhlcmUncyBhIGxvdCBvZiB3b3JrIHRvCmJlIGRvbmUu
KioKClRoaXMgZ3VpZGUgaXMgY3VycmVudGx5IHVuZGVyIGhlYXZ5IGRldmVs
b3BtZW50LiBUaGlzIG9waW5pb25hdGVkIGd1aWRlCmV4aXN0cyB0byBwcm92
aWRlIGJvdGggbm92aWNlIGFuZCBleHBlcnQgUHl0aG9uIGRldmVsb3BlcnMg
YSBiZXN0IHByYWN0aWNlCmhhbmRib29rIHRvIHRoZSBpbnN0YWxsYXRpb24s
IGNvbmZpZ3VyYXRpb24sIGFuZCB1c2FnZSBvZiBQeXRob24gb24gYSBkYWls
eQpiYXNpcy4KCgpUb3BpY3MgaW5jbHVkZToKCi0gUGxhdGZvcm0gYW5kIHZl
cnNpb24tc3BlY2lmaWMgaW5zdGFsbGF0aW9ucwotIFB5MmFwcCwgUHkyZXhl
LCBiYmZyZWV6ZSwgcHlJbnN0YWxsZXIKLSBQaXAKLSBOdW1weSwgc2NpcHks
IHN0YXRweSwgcHlwbG90LCBtYXRwbG90bGliCi0gVmlydHVhbGVudgotIEZh
YnJpYwotIEV4aGF1c3RpdmUgbW9kdWxlIHJlY29tbWVuZGF0aW9ucywgZ3Jv
dXBlZCBieSB0b3BpYy9wdXJwb3NlCi0gV2hpY2ggbGlicmFyaWVzIHRvIHVz
ZSBmb3Igd2hhdAotIFNlcnZlciBjb25maWd1cmF0aW9ucyAmIHRvb2xzIGZv
ciB2YXJpb3VzIHdlYiBmcmFtZXdvcmtzCi0gRG9jdW1lbnRhdGlvbjogd3Jp
dGluZyBpdAotIFRlc3Rpbmc6IEplbmtpbnMgJiB0b3ggZ3VpZGVzCi0gSG93
IHRvIGVhc2lseSBpbnRlcmZhY2UgYGBoZ2BgIGZyb20gYGBnaXRgYAoKSWYg
eW91IGFyZW4ndCBmb25kIG9mIHJlYWRpbmcgcmVTdHJ1Y3R1cmVkVGV4dCwg
dGhlcmUgaXMgYW4KYWxtb3N0IHVwLXRvLWRhdGUgYEhUTUwgdmVyc2lvbiBh
dCBkb2NzLnB5dGhvbi1ndWlkZS5vcmcKPGh0dHBzOi8vZG9jcy5weXRob24t
Z3VpZGUub3JnPmBfLgo=
",,"c3VkbzogZmFsc2UKbGFuZ3VhZ2U6IHB5dGhvbgpweXRob246CiAgLSAiMy42
IgppbnN0YWxsOiBwaXAgaW5zdGFsbCBzcGhpbngKc2NyaXB0OgogIC0gbWFr
ZSBkb2N0ZXN0CiAgLSBtYWtlIGh0bWwK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'spring-boot-examples',72907253,b'about learning Spring Boot via examples. Spring Boot \xe6\x95\x99\xe7\xa8\x8b\xe3\x80\x81\xe6\x8a\x80\xe6\x9c\xaf\xe6\xa0\x88\xe7\xa4\xba\xe4\xbe\x8b\xe4\xbb\xa3\xe7\xa0\x81\xef\xbc\x8c\xe5\xbf\xab\xe9\x80\x9f\xe7\xae\x80\xe5\x8d\x95\xe4\xb8\x8a\xe6\x89\x8b\xe6\x95\x99\xe7\xa8\x8b\xe3\x80\x82 ',b'Java',18,19502,,19502,False,b'https://api.github.com/repos/ityouknow/spring-boot-examples/forks',"U3ByaW5nIEJvb3Qg5a2m5Lmg56S65L6LCj09PT09PT09PT09PT09PT09PT09
PT09PT0KCiFbU3ByaW5nIEJvb3QgMi4wXShodHRwczovL2ltZy5zaGllbGRz
LmlvL2JhZGdlL1NwcmluZyUyMEJvb3QtMi4wLWJyaWdodGdyZWVuLnN2ZykK
IVtNeXNxbCA1LjZdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvTXlz
cWwtNS42LWJsdWUuc3ZnKQohW0pESyAxLjhdKGh0dHBzOi8vaW1nLnNoaWVs
ZHMuaW8vYmFkZ2UvSkRLLTEuOC1icmlnaHRncmVlbi5zdmcpCiFbTWF2ZW5d
KGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvTWF2ZW4tMy41LjAteWVs
bG93Z3JlZW4uc3ZnKQohW2xpY2Vuc2VdKGh0dHBzOi8vaW1nLnNoaWVsZHMu
aW8vYmFkZ2UvbGljZW5zZS1NUEwtLTIuMC1ibHVlLnN2ZykKIApTcHJpbmcg
Qm9vdCDkvb/nlKjnmoTlkITnp43npLrkvovvvIzku6XmnIDnroDljZXjgIHm
nIDlrp7nlKjkuLrmoIflh4bvvIzmraTlvIDmupDpobnnm67kuK3nmoTmr4/k
uKrnpLrkvovpg73ku6XmnIDlsI/kvp3otZbvvIzmnIDnroDljZXkuLrmoIfl
h4bvvIzluK7liqnliJ3lrabogIXlv6vpgJ/mjozmj6EgU3ByaW5nIEJvb3Qg
5ZCE57uE5Lu255qE5L2/55So44CCCgpbU3ByaW5nIEJvb3Qg5Lit5paH57Si
5byVXShodHRwczovL2dpdGh1Yi5jb20vaXR5b3Vrbm93L2F3ZXNvbWUtc3By
aW5nLWJvb3QpICZuYnNwO3wgJm5ic3A7IFtTcHJpbmcgQ2xvdWTlrabkuaDn
pLrkvovku6PnoIFdKGh0dHBzOi8vZ2l0aHViLmNvbS9pdHlvdWtub3cvc3By
aW5nLWNsb3VkLWV4YW1wbGVzKSAmbmJzcDt8ICZuYnNwOyBbU3ByaW5nIEJv
b3Qg57K+5ZOB6K++56iLXShodHRwczovL2dpdGh1Yi5jb20vaXR5b3Vrbm93
L3NwcmluZy1ib290LWxlYW5pbmcpIAoKW0VuZ2xpc2hdKFJFQURNRV9FTi5t
ZCkgJm5ic3A7fCAmbmJzcDsgIFtHaXRodWLlnLDlnYBdKGh0dHBzOi8vZ2l0
aHViLmNvbS9pdHlvdWtub3cvc3ByaW5nLWJvb3QtZXhhbXBsZXMpICZuYnNw
O3wgJm5ic3A7IFvnoIHkupHlnLDlnYBdKGh0dHBzOi8vZ2l0ZWUuY29tL2l0
eW91a25vdy9zcHJpbmctYm9vdC1leGFtcGxlcykgJm5ic3A7fCAmbmJzcDsg
IFtTcHJpbmcgQm9vdCAxLjBdKGh0dHBzOi8vZ2l0aHViLmNvbS9pdHlvdWtu
b3cvc3ByaW5nLWJvb3QtZXhhbXBsZXMvdHJlZS9TcHJpbmctQm9vdC0xLjAp
CgotLS0KCiMjIFNwcmluZyBCb290IDIuMAoKKipbU3ByaW5nIEJvb3QgMi4w
IOacgOWFqOS9v+eUqOaVmeeoi10oaHR0cHM6Ly9naXRodWIuY29tL2l0eW91
a25vdy9zcHJpbmctYm9vdC1sZWFuaW5nKSoqCgoqKltGYXZvcml0ZXMtd2Vi
XShodHRwczovL2dpdGh1Yi5jb20vY2xvdWRmYXZvcml0ZXMvZmF2b3JpdGVz
LXdlYinvvJrkupHmlLbol4/vvIhTcHJpbmcgQm9vdCAyLjAg5a6e5oiY5byA
5rqQ6aG555uu77yJKioKCioq56S65L6L5Luj56CBKioKCi0gW3NwcmluZy1i
b290LWhlbGxvXShodHRwczovL2dpdGh1Yi5jb20vaXR5b3Vrbm93L3Nwcmlu
Zy1ib290LWV4YW1wbGVzL3RyZWUvbWFzdGVyL3NwcmluZy1ib290LWhlbGxv
Ke+8mlNwcmluZyBCb290IDIuMCAgSGVsbG8gV29ybGQg56S65L6LCi0gW3Nw
cmluZy1ib290LWJhbm5lcl0oaHR0cHM6Ly9naXRodWIuY29tL2l0eW91a25v
dy9zcHJpbmctYm9vdC1leGFtcGxlcy90cmVlL21hc3Rlci9zcHJpbmctYm9v
dC1iYW5uZXIp77yaU3ByaW5nIEJvb3Qg5a6a5Yi2IEJhbm5lciDnpLrkvosK
LSBbc3ByaW5nLWJvb3QtZG9ja2VyXShodHRwczovL2dpdGh1Yi5jb20vaXR5
b3Vrbm93L3NwcmluZy1ib290LWV4YW1wbGVzL3RyZWUvbWFzdGVyL3Nwcmlu
Zy1ib290LWRvY2tlcinvvJrkvb/nlKggRG9ja2VyIOmDqOe9siBTcHJpbmcg
Qm9vdCDnpLrkvosKLSBbZG9ja2VyY29tcG9zZS1zcHJpbmdib290LW15c3Fs
LW5naW54XShodHRwczovL2dpdGh1Yi5jb20vaXR5b3Vrbm93L3NwcmluZy1i
b290LWV4YW1wbGVzL3RyZWUvbWFzdGVyL2RvY2tlcmNvbXBvc2Utc3ByaW5n
Ym9vdC1teXNxbC1uZ2lueCkg77yaRG9ja2VyIENvbXBvc2UgKyBTcHJpbmcg
Qm9vdCArIE5naW54ICsgTXlzcWwg56S65L6LICAKLSBbc3ByaW5nLWJvb3Qt
Y29tbWFuZExpbmVSdW5uZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9pdHlvdWtu
b3cvc3ByaW5nLWJvb3QtZXhhbXBsZXMvdHJlZS9tYXN0ZXIvc3ByaW5nLWJv
b3QtY29tbWFuZExpbmVSdW5uZXIpIO+8mlNwcmluZyBCb290IOS9v+eUqCBj
b21tYW5kTGluZVJ1bm5lciDlrp7njrDpobnnm67lkK/liqjml7botYTmupDl
iJ3lp4vljJbnpLrkvosgIAotIFtzcHJpbmctYm9vdC13ZWItdGh5bWVsZWFm
XShodHRwczovL2dpdGh1Yi5jb20vaXR5b3Vrbm93L3NwcmluZy1ib290LWV4
YW1wbGVzL3RyZWUvbWFzdGVyL3NwcmluZy1ib290LXdlYi10aHltZWxlYWYp
IO+8mlNwcmluZyBCb290IOS9v+eUqCB0aHltZWxlYWYg5a6e546w5biD5bGA
44CB6aqM5Y+C44CB5aKe5Yig5pS55p+l56S65L6LICAgIAotIFtzcHJpbmct
Ym9vdC1tZW1jYWNoZS1zcHltZW1jYWNoZWRdKGh0dHBzOi8vZ2l0aHViLmNv
bS9pdHlvdWtub3cvc3ByaW5nLWJvb3QtZXhhbXBsZXMvdHJlZS9tYXN0ZXIv
c3ByaW5nLWJvb3QtbWVtY2FjaGUtc3B5bWVtY2FjaGVkKSDvvJpTcHJpbmcg
Qm9vdCDkvb/nlKggc3B5bWVtY2FjaGVkIOmbhuaIkCAgbWVtY2FjaGUg56S6
5L6LCi0gW3NwcmluZy1ib290LXdlYmZsdXhdKGh0dHBzOi8vZ2l0aHViLmNv
bS9pdHlvdWtub3cvc3ByaW5nLWJvb3QtZXhhbXBsZXMvdHJlZS9tYXN0ZXIv
c3ByaW5nLWJvb3Qtd2ViZmx1eCkg77yaU3ByaW5nIEJvb3Qgd2ViZmx1eCDn
pLrkvosKLSBbc3ByaW5nLWJvb3QtZWxhc3RpY3NlYXJjaF0oaHR0cHM6Ly9n
aXRodWIuY29tL2l0eW91a25vdy9zcHJpbmctYm9vdC1leGFtcGxlcy90cmVl
L21hc3Rlci9zcHJpbmctYm9vdC1lbGFzdGljc2VhcmNoKSDvvJpTcHJpbmcg
Qm9vdCBlbGFzdGljc2VhcmNoIOekuuS+iwotIFtzcHJpbmctYm9vdC1zd2Fn
Z2VyXShodHRwczovL2dpdGh1Yi5jb20vaXR5b3Vrbm93L3NwcmluZy1ib290
LWV4YW1wbGVzL3RyZWUvbWFzdGVyL3NwcmluZy1ib290LXN3YWdnZXIpIO+8
mlNwcmluZyBCb290IHN3YWdnZXIyIOekuuS+iwotIFtzcHJpbmctYm9vdC1t
eWJhdGlzLXBsdXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9pdHlvdWtub3cvc3By
aW5nLWJvb3QtZXhhbXBsZXMvdHJlZS9tYXN0ZXIvc3ByaW5nLWJvb3QtbXli
YXRpcy1wbHVzKSDvvJpTcHJpbmcgQm9vdCDpm4bmiJAgTXlCYXRpcyBQbHVz
IOekuuS+iwoKKirlj4LogIPmlofnq6AqKgoKLSBbU3ByaW5nIEJvb3QgMijk
uIAp77ya44CQ6YeN56OF44CRU3ByaW5nIEJvb3QgMi4w5p2D5aiB5Y+R5biD
XShodHRwOi8vd3d3Lml0eW91a25vdy5jb20vc3ByaW5nYm9vdC8yMDE4LzAz
LzAxL3NwcmluZy1ib290LTIuMC5odG1sKSAgCi0gW1NwcmluZyBCb290IDIo
5LqMKe+8mlNwcmluZyBCb290IDIuMOWwnemynC3liqjmgIEgQmFubmVyXSho
dHRwOi8vd3d3Lml0eW91a25vdy5jb20vc3ByaW5nYm9vdC8yMDE4LzAzLzAz
L3NwcmluZy1ib290LWJhbm5lci5odG1sKSAgCi0gW1NwcmluZyBCb290IDIo
5LiJKe+8mlNwcmluZyBCb290IOW8gOa6kOi9r+S7tumDveacieWTquS6m++8
n10oaHR0cDovL3d3dy5pdHlvdWtub3cuY29tL3NwcmluZ2Jvb3QvMjAxOC8w
My8wNS9zcHJpbmctYm9vdC1vcGVuLXNvdXJjZS5odG1sKSAgCi0gW1Nwcmlu
ZyBCb290IDIo5ZubKe+8muS9v+eUqCBEb2NrZXIg6YOo572yIFNwcmluZyBC
b290XShodHRwOi8vd3d3Lml0eW91a25vdy5jb20vc3ByaW5nYm9vdC8yMDE4
LzAzLzE5L3NwcmluZy1ib290LWRvY2tlci5odG1sKSAgCi0gW1NwcmluZyBC
b290IDIo5LqUKe+8mkRvY2tlciBDb21wb3NlICsgU3ByaW5nIEJvb3QgKyBO
Z2lueCArIE15c3FsIOWunui3tV0oaHR0cDovL3d3dy5pdHlvdWtub3cuY29t
L3NwcmluZ2Jvb3QvMjAxOC8wMy8yOC9kb2NrZXJjb21wb3NlLXNwcmluZ2Jv
b3QtbXlzcWwtbmdpbnguaHRtbCkgIAotIFtTcHJpbmcgQm9vdCAyKOWFrSnv
vJrkvb/nlKggRG9ja2VyIOmDqOe9siBTcHJpbmcgQm9vdCDlvIDmupDova/k
u7bkupHmlLbol49dKGh0dHA6Ly93d3cuaXR5b3Vrbm93LmNvbS9zcHJpbmdi
b290LzIwMTgvMDQvMDIvZG9ja2VyLWZhdm9yaXRlcy5odG1sKSAKLSBbU3By
aW5nIEJvb3QgMijkuIMp77yaU3ByaW5nIEJvb3Qg5aaC5L2V6Kej5Yaz6aG5
55uu5ZCv5Yqo5pe25Yid5aeL5YyW6LWE5rqQXShodHRwOi8vd3d3Lml0eW91
a25vdy5jb20vc3ByaW5nYm9vdC8yMDE4LzA1LzAzL3NwcmluZy1ib290LWNv
bW1hbmRMaW5lUnVubmVyLmh0bWwpIAotIFtTcHJpbmcgQm9vdCAyKOWFqynv
vJpTcHJpbmcgQm9vdCDpm4bmiJAgTWVtY2FjaGVkXShodHRwOi8vd3d3Lml0
eW91a25vdy5jb20vc3ByaW5nYm9vdC8yMDE4LzA5LzAxL3NwcmluZy1ib290
LW1lbWNhY2hlZC5odG1sKSAKLSBbU3ByaW5nIEJvb3QgMiAo5LmdKe+8muOA
kOmHjeejheOAkVNwcmluZyBCb290IDIuMS4wIOadg+WogeWPkeW4g10oaHR0
cDovL3d3dy5pdHlvdWtub3cuY29tL3NwcmluZ2Jvb3QvMjAxOC8xMS8wMy9z
cHJpbmctYm9vdC0yLjEuaHRtbCkgCi0gW1NwcmluZyBCb290L0Nsb3VkIOeg
lOWPkeWboumYn+S7i+e7jV0oaHR0cDovL3d3dy5pdHlvdWtub3cuY29tL3Nw
cmluZ2Jvb3QvMjAxOS8wMS8wMy9zcHJpbmctcGl2b3RhbC5odG1sKSAKLSBb
U3ByaW5nIEJvb3QgMiAo5Y2BKe+8mlNwcmluZyBCb290IOS4reeahOWTjeW6
lOW8j+e8lueoi+WSjCBXZWJGbHV4IOWFpemXqF0oaHR0cDovL3d3dy5pdHlv
dWtub3cuY29tL3NwcmluZ2Jvb3QvMjAxOS8wMi8xMi9zcHJpbmctYm9vdC13
ZWJmbHV4Lmh0bWwpIAoKCiMjIOS4i+aWueekuuS+i+W3sue7j+WFqOmDqOWN
h+e6p+WIsCAyLljvvIzlj6/lhbPms6jkuIvmlrnlhazlj7fmn6XnnIvjgIIK
CiFbXShodHRwOi8vd3d3Lml0eW91a25vdy5jb20vYXNzZXRzL2ltYWdlcy9q
YXZhLmpwZykKCuWPpuWkluWFs+azqOWQju+8jOWbnuWkje+8mmphdmEg6I63
5Y+W6LaF6L+HMTAwMDAr5Lq66aKG5Y+W55qEIEphdmEg55+l6K+G5L2T57O7
L+mdouivleW/heeci+i1hOaWmeOAggoKKirnpLrkvovku6PnoIEqKgoKLSBb
c3ByaW5nLWJvb3QtaGVsbG9Xb3JsZF0oaHR0cHM6Ly9naXRodWIuY29tL2l0
eW91a25vdy9zcHJpbmctYm9vdC1leGFtcGxlcy90cmVlL21hc3Rlci9zcHJp
bmctYm9vdC1oZWxsb1dvcmxkKe+8mlNwcmluZyBCb290IOeahCBoZWxsbyBX
b3JsZCDniYjmnKwKLSBbc3ByaW5nLWJvb3Qtd2ViXShodHRwczovL2dpdGh1
Yi5jb20vaXR5b3Vrbm93L3NwcmluZy1ib290LWV4YW1wbGVzL3RyZWUvbWFz
dGVyL3NwcmluZy1ib290LXdlYinvvJpTcHJpbmcgQm9vdCBXZWIg5byA5Y+R
57u85ZCI56S65L6LCi0gW3NwcmluZy1ib290LXJlZGlzXShodHRwczovL2dp
dGh1Yi5jb20vaXR5b3Vrbm93L3NwcmluZy1ib290LWV4YW1wbGVzL3RyZWUv
bWFzdGVyL3NwcmluZy1ib290LXJlZGlzKe+8mlNwcmluZyBCb290IOmbhuaI
kCBSZWRpcyDnpLrkvosKLSBbc3ByaW5nLWJvb3QtanBhXShodHRwczovL2dp
dGh1Yi5jb20vaXR5b3Vrbm93L3NwcmluZy1ib290LWV4YW1wbGVzL3RyZWUv
bWFzdGVyL3NwcmluZy1ib290LWpwYSnvvJpTcHJpbmcgQm9vdCDkvb/nlKgg
SnBhIOWQhOenjeekuuS+iwotIFtzcHJpbmctYm9vdC1teWJhaXRzLWFubm90
YXRpb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9pdHlvdWtub3cvc3ByaW5nLWJv
b3QtZXhhbXBsZXMvdHJlZS9tYXN0ZXIvc3ByaW5nLWJvb3QtbXliYXRpcy9z
cHJpbmctYm9vdC1teWJhdGlzLWFubm90YXRpb24p77ya5rOo6Kej54mI5pys
Ci0gW3NwcmluZy1ib290LW15YmFpdHMteG1sXShodHRwczovL2dpdGh1Yi5j
b20vaXR5b3Vrbm93L3NwcmluZy1ib290LWV4YW1wbGVzL3RyZWUvbWFzdGVy
L3NwcmluZy1ib290LW15YmF0aXMvc3ByaW5nLWJvb3QtbXliYXRpcy14bWwp
77yaWG1sIOmFjee9rueJiOacrAotIFtzcHJpbmctYm9vdC1teWJhdGlzLXht
bC1tdWxpZGF0YXNvdXJjZV0oaHR0cHM6Ly9naXRodWIuY29tL2l0eW91a25v
dy9zcHJpbmctYm9vdC1leGFtcGxlcy90cmVlL21hc3Rlci9zcHJpbmctYm9v
dC1teWJhdGlzL3NwcmluZy1ib290LW15YmF0aXMteG1sLW11bGlkYXRhc291
cmNlKe+8mlNwcmluZyBCb290ICsgTXliYXRpcyAoWG1sIOeJiO+8iSDlpJrm
lbDmja7mupDmnIDnroDop6PlhrPmlrnmoYgKLSBbc3ByaW5nLWJvb3QtbXli
YXRpcy1hbm5vdGF0aW9uLW11bGlkYXRhc291cmNlXShodHRwczovL2dpdGh1
Yi5jb20vaXR5b3Vrbm93L3NwcmluZy1ib290LWV4YW1wbGVzL3RyZWUvbWFz
dGVyL3NwcmluZy1ib290LW15YmF0aXMvc3ByaW5nLWJvb3QtbXliYXRpcy1h
bm5vdGF0aW9uLW11bGlkYXRhc291cmNlKe+8mlNwcmluZyBCb290ICsgTXli
YXRpc++8iOazqOino+eJiO+8ieWkmuaVsOaNrua6kOacgOeugOino+WGs+aW
ueahiAotIFtzcHJpbmctYm9vdC10aHltZWxlYWZdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9pdHlvdWtub3cvc3ByaW5nLWJvb3QtZXhhbXBsZXMvdHJlZS9tYXN0
ZXIvc3ByaW5nLWJvb3QtdGh5bWVsZWFmKe+8mlNwcmluZyBCb290IOS9v+eU
qCBUaHltZWxlYWYg6K+m57uG56S65L6LCi0gW3NwcmluZy1ib290LWpwYS10
aHltZWxlYWYtY3VyZF0oaHR0cHM6Ly9naXRodWIuY29tL2l0eW91a25vdy9z
cHJpbmctYm9vdC1leGFtcGxlcy90cmVlL21hc3Rlci9zcHJpbmctYm9vdC1q
cGEtdGh5bWVsZWFmLWN1cmQp77yaU3ByaW5nIEJvb3QgICsgSnBhICsgVGh5
bWVsZWFmIOWinuWIoOaUueafpeekuuS+iwotIFtzcHJpbmctYm9vdC1yYWJi
aXRtcV0oaHR0cHM6Ly9naXRodWIuY29tL2l0eW91a25vdy9zcHJpbmctYm9v
dC1leGFtcGxlcy90cmVlL21hc3Rlci9zcHJpbmctYm9vdC1yYWJiaXRtcSnv
vJpTcHJpbmcgQm9vdCDlkowgUmFiYml0bXEg5ZCE56eN5raI5oGv5bqU55So
5qGI5L6LCi0gW3NwcmluZy1ib290LXNjaGVkdWxlcl0oaHR0cHM6Ly9naXRo
dWIuY29tL2l0eW91a25vdy9zcHJpbmctYm9vdC1leGFtcGxlcy90cmVlL21h
c3Rlci9zcHJpbmctYm9vdC1zY2hlZHVsZXIp77yaU3ByaW5nIEJvb3Qg5ZKM
5a6a5pe25Lu75Yqh5qGI5L6LCi0gW3NwcmluZy1ib290LW1haWxdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9pdHlvdWtub3cvc3ByaW5nLWJvb3QtZXhhbXBsZXMv
dHJlZS9tYXN0ZXIvc3ByaW5nLWJvb3QtbWFpbCnvvJpTcHJpbmcgQm9vdCDl
kozpgq7ku7bmnI3liqEKLSBbc3ByaW5nLWJvb3QtbW9uZ29kYl0oaHR0cHM6
Ly9naXRodWIuY29tL2l0eW91a25vdy9zcHJpbmctYm9vdC1leGFtcGxlcy90
cmVlL21hc3Rlci9zcHJpbmctYm9vdC1tb25nb2RiL3NwcmluZy1ib290LW1v
bmdvZGIp77yaU3ByaW5nIEJvb3Qg5ZKMIE1vbmdvZGIg55qE5L2/55SoCi0g
W3NwcmluZy1ib290LW11bHRpLW1vbmdvZGJdKGh0dHBzOi8vZ2l0aHViLmNv
bS9pdHlvdWtub3cvc3ByaW5nLWJvb3QtZXhhbXBsZXMvdHJlZS9tYXN0ZXIv
c3ByaW5nLWJvb3QtbW9uZ29kYi9zcHJpbmctYm9vdC1tdWx0aS1tb25nb2Ri
Ke+8mlNwcmluZyBCb290IOWSjCBNb25nb2RiIOWkmuaVsOaNrua6kOeahOS9
v+eUqAotIFtzcHJpbmctYm9vdC1wYWNrYWdlLXdhcl0oaHR0cHM6Ly9naXRo
dWIuY29tL2l0eW91a25vdy9zcHJpbmctYm9vdC1leGFtcGxlcy90cmVlL21h
c3Rlci9zcHJpbmctYm9vdC1wYWNrYWdlLXdhcinvvJogU3ByaW5nIEJvb3Qg
5omT5YyF5oiQIFdhciDljIXnpLrkvosKLSBbc3ByaW5nLWJvb3Qtc2hpcm9d
KGh0dHBzOi8vZ2l0aHViLmNvbS9pdHlvdWtub3cvc3ByaW5nLWJvb3QtZXhh
bXBsZXMvdHJlZS9tYXN0ZXIvc3ByaW5nLWJvb3Qtc2hpcm8p77yaU3ByaW5n
IEJvb3QgIOaVtOWQiCBTaGlybyBSYmFjIOekuuS+iwotIFtzcHJpbmctYm9v
dC1maWxlLXVwbG9hZF0oaHR0cHM6Ly9naXRodWIuY29tL2l0eW91a25vdy9z
cHJpbmctYm9vdC1leGFtcGxlcy90cmVlL21hc3Rlci9zcHJpbmctYm9vdC1m
aWxlLXVwbG9hZCnvvJrkvb/nlKggU3ByaW5nIEJvb3Qg5LiK5Lyg5paH5Lu2
56S65L6LICAgCi0gW3NwcmluZy1ib290LWZhc3RERlNdKGh0dHBzOi8vZ2l0
aHViLmNvbS9pdHlvdWtub3cvc3ByaW5nLWJvb3QtZXhhbXBsZXMvdHJlZS9t
YXN0ZXIvc3ByaW5nLWJvb3QtZmFzdERGUynvvJpTcHJpbmcgQm9vdCDmlbTl
kIggRmFzdERGUyDnpLrkvosgIAotIFtzcHJpbmctYm9vdC1hY3R1YXRvcl0o
aHR0cHM6Ly9naXRodWIuY29tL2l0eW91a25vdy9zcHJpbmctYm9vdC1leGFt
cGxlcy90cmVlL21hc3Rlci9zcHJpbmctYm9vdC1hY3R1YXRvcinvvJpTcHJp
bmcgQm9vdCBBY3R1YXRvciDkvb/nlKjnpLrkvosKLSBbc3ByaW5nLWJvb3Qt
YWRtaW4tc2ltcGxlXShodHRwczovL2dpdGh1Yi5jb20vaXR5b3Vrbm93L3Nw
cmluZy1ib290LWV4YW1wbGVzL3RyZWUvbWFzdGVyL3NwcmluZy1ib290LWFk
bWluLXNpbXBsZSnvvJpTcHJpbmcgQm9vdCBBZG1pbiDnmoTkvb/nlKjnpLrk
vosgIAoKKirlj4LogIPmlofnq6AqKgoKLSBbU3ByaW5nIEJvb3Qo5LiAKe+8
muWFpemXqOevh10oaHR0cDovL3d3dy5pdHlvdWtub3cuY29tL3NwcmluZ2Jv
b3QvMjAxNi8wMS8wNi9zcHJpbmctYm9vdC1xdWljay1zdGFydC5odG1sKQot
IFtTcHJpbmcgQm9vdCjkuowp77yaV2ViIOe7vOWQiOW8gOWPkV0oaHR0cDov
L3d3dy5pdHlvdWtub3cuY29tL3NwcmluZ2Jvb3QvMjAxNi8wMi8wMy9zcHJp
bmctYm9vdC13ZWIuaHRtbCkKLSBbU3ByaW5nIEJvb3Qo5LiJKe+8mlNwcmlu
ZyBCb290IOS4rSBSZWRpcyDnmoTkvb/nlKhdKGh0dHA6Ly93d3cuaXR5b3Vr
bm93LmNvbS9zcHJpbmdib290LzIwMTYvMDMvMDYvc3ByaW5nLWJvb3QtcmVk
aXMuaHRtbCkKLSBbU3ByaW5nIEJvb3Qo5ZubKe+8mlRoeW1lbGVhZiDkvb/n
lKjor6bop6NdKGh0dHA6Ly93d3cuaXR5b3Vrbm93LmNvbS9zcHJpbmdib290
LzIwMTYvMDUvMDEvc3ByaW5nLWJvb3QtdGh5bWVsZWFmLmh0bWwpCi0gW1Nw
cmluZyBCb290KOS6lCnvvJpTcHJpbmcgRGF0YSBKcGEg55qE5L2/55SoXSho
dHRwOi8vd3d3Lml0eW91a25vdy5jb20vc3ByaW5nYm9vdC8yMDE2LzA4LzIw
L3NwcmluZy1ib290LWpwYS5odG1sKQotIFtTcHJpbmcgQm9vdCjlha0p77ya
5aaC5L2V5LyY6ZuF55qE5L2/55SoIE15YmF0aXNdKGh0dHA6Ly93d3cuaXR5
b3Vrbm93LmNvbS9zcHJpbmdib290LzIwMTYvMTEvMDYvc3ByaW5nLWJvb3Qt
bXliYXRpcy5odG1sKQotIFtTcHJpbmcgQm9vdCjkuIMp77yaU3ByaW5nIEJv
b3QgKyBNeWJhdGlzIOWkmuaVsOaNrua6kOacgOeugOino+WGs+aWueahiF0o
aHR0cDovL3d3dy5pdHlvdWtub3cuY29tL3NwcmluZ2Jvb3QvMjAxNi8xMS8y
NS9zcHJpbmctYm9vdC1tdWx0aS1teWJhdGlzLmh0bWwpCi0gW1NwcmluZyBC
b290KOWFqynvvJpSYWJiaXRNUSDor6bop6NdKGh0dHA6Ly93d3cuaXR5b3Vr
bm93LmNvbS9zcHJpbmdib290LzIwMTYvMTEvMzAvc3ByaW5nLWJvb3QtcmFi
Yml0TVEuaHRtbCkKLSBbU3ByaW5nIEJvb3Qo5LmdKe+8muWumuaXtuS7u+WK
oV0oaHR0cDovL3d3dy5pdHlvdWtub3cuY29tL3NwcmluZ2Jvb3QvMjAxNi8x
Mi8wMi9zcHJpbmctYm9vdC1zY2hlZHVsZXIuaHRtbCkKLSBbU3ByaW5nIEJv
b3Qo5Y2BKe+8mumCruS7tuacjeWKoV0oaHR0cDovL3d3dy5pdHlvdWtub3cu
Y29tL3NwcmluZ2Jvb3QvMjAxNy8wNS8wNi9zcHJpbmctYm9vdC1tYWlsLmh0
bWwpCi0gW1NwcmluZyBCb290KOWNgeS4gCnvvJpTcHJpbmcgQm9vdCDkuK0g
TW9uZ29kYiDnmoTkvb/nlKhdKGh0dHA6Ly93d3cuaXR5b3Vrbm93LmNvbS9z
cHJpbmdib290LzIwMTcvMDUvMDgvc3ByaW5nLWJvb3QtbW9uZ29kYi5odG1s
KQotIFtTcHJpbmcgQm9vdCjljYHkuowp77yaU3ByaW5nIEJvb3Qg5aaC5L2V
5rWL6K+V5omT5YyF6YOo572yXShodHRwOi8vd3d3Lml0eW91a25vdy5jb20v
c3ByaW5nYm9vdC8yMDE3LzA1LzA5L3NwcmluZy1ib290LWRlcGxveS5odG1s
KQotIFtTcHJpbmcgQm9vdCjljYHkuIkp77yaU3ByaW5nIEJvb3Qg5bCP5oqA
5benXShodHRwOi8vd3d3Lml0eW91a25vdy5jb20vc3ByaW5nYm9vdC8yMDE3
LzA2LzIyL3NwcmluZy1ib290LXRpcHMuaHRtbCkKLSBbU3ByaW5nIEJvb3Qo
5Y2B5ZubKe+8mlNwcmluZyBCb290IOaVtOWQiCBTaGlyby3nmbvlvZXorqTo
r4HlkozmnYPpmZDnrqHnkIZdKGh0dHA6Ly93d3cuaXR5b3Vrbm93LmNvbS9z
cHJpbmdib290LzIwMTcvMDYvMjYvc3ByaW5nLWJvb3Qtc2hpcm8uaHRtbCkK
LSBbU3ByaW5nIEJvb3Qo5Y2B5LqUKe+8mlNwcmluZyBCb290ICsgSnBhICsg
VGh5bWVsZWFmIOWinuWIoOaUueafpeekuuS+i10oaHR0cDovL3d3dy5pdHlv
dWtub3cuY29tL3NwcmluZ2Jvb3QvMjAxNy8wOS8yMy9zcHJpbmctYm9vdC1q
cGEtdGh5bWVsZWFmLWN1cmQuaHRtbCkgIAotIFtTcHJpbmcgQm9vdCjljYHl
ha0p77ya5L2/55SoIEplbmtpbnMg6YOo572yIFNwcmluZyBCb290XShodHRw
Oi8vd3d3Lml0eW91a25vdy5jb20vc3ByaW5nYm9vdC8yMDE3LzExLzExL3Nw
cmluZy1ib290LWplbmtpbnMuaHRtbCkKLSBbU3ByaW5nIEJvb3Qo5Y2B5LiD
Ke+8muS9v+eUqCBTcHJpbmcgQm9vdCDkuIrkvKDmlofku7ZdKGh0dHA6Ly93
d3cuaXR5b3Vrbm93LmNvbS9zcHJpbmdib290LzIwMTgvMDEvMTIvc3ByaW5n
LWJvb3QtdXBsb2FkLWZpbGUuaHRtbCkgICAKLSBbU3ByaW5nIEJvb3Qo5Y2B
5YWrKe+8muS9v+eUqCBTcHJpbmcgQm9vdCDpm4bmiJAgRmFzdERGU10oaHR0
cDovL3d3dy5pdHlvdWtub3cuY29tL3NwcmluZ2Jvb3QvMjAxOC8wMS8xNi9z
cHJpbmctYm9vdC1mYXN0ZGZzLmh0bWwpICAgCi0gW1NwcmluZyBCb290KOWN
geS5nSnvvJrkvb/nlKggU3ByaW5nIEJvb3QgQWN0dWF0b3Ig55uR5o6n5bqU
55SoXShodHRwOi8vd3d3Lml0eW91a25vdy5jb20vc3ByaW5nYm9vdC8yMDE4
LzAyLzA2L3NwcmluZy1ib290LWFjdHVhdG9yLmh0bWwpICAgCi0gW1Nwcmlu
ZyBCb290KOS6jOWNgSnvvJrkvb/nlKggc3ByaW5nLWJvb3QtYWRtaW4g5a+5
IFNwcmluZyBCb290IOacjeWKoei/m+ihjOebkeaOp10oaHR0cDovL3d3dy5p
dHlvdWtub3cuY29tL3NwcmluZ2Jvb3QvMjAxOC8wMi8xMS9zcHJpbmctYm9v
dC1hZG1pbi5odG1sKSAgIAoKKipbU3ByaW5nIEJvb3Qg5a6e5oiY77ya5oiR
5Lus55qE56ys5LiA5qy+5byA5rqQ6aG555uuXShodHRwOi8vd3d3Lml0eW91
a25vdy5jb20vc3ByaW5nYm9vdC8yMDE2LzA5LzI2L3NwcmluZy1ib290LW9w
ZW5zb3VyY2UtZmF2b3JpdGVzLmh0bWwpKioKCi0tLQoKPiDlpoLmnpzlpKfl
rrbmg7Pkuobop6PlhbPkuo4gU3ByaW5nIEJvb3Qg55qE5YW25a6D5pa56Z2i
5bqU55So77yM5Lmf5Y+v5Lul5LulW2lzc3Vlc10oaHR0cHM6Ly9naXRodWIu
Y29tL2l0eW91a25vdy9zcHJpbmctYm9vdC1leGFtcGxlcy9pc3N1ZXMp55qE
5b2i5byP5Y+N6aaI57uZ5oiR77yM5oiR5ZCO57ut5p2l5a6M5ZaE44CCCgrl
hbPms6jlhazkvJflj7fvvJrnuq/mtIHnmoTlvq7nrJHvvIzlm57lpI0ic3By
aW5nYm9vdCLov5vnvqTkuqTmtYEKCiFbXShodHRwOi8vd3d3Lml0eW91a25v
dy5jb20vYXNzZXRzL2ltYWdlcy9rZWVwcHVyZXNtaWxlXzQzMC5qcGcp
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
