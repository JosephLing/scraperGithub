name,id,description,language,open_issues,stargazers_count,topics,watchers_count,fork,forks_url,readme,config,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11
b'elasticsearch',507775,"b'Open Source, Distributed, RESTful Search Engine'",b'Java',2229,45346,,45346,False,b'https://api.github.com/repos/elastic/elasticsearch/forks',"aDEuIEVsYXN0aWNzZWFyY2gKCmgyLiBBIERpc3RyaWJ1dGVkIFJFU1RmdWwg
U2VhcmNoIEVuZ2luZQoKaDMuICJodHRwczovL3d3dy5lbGFzdGljLmNvL3By
b2R1Y3RzL2VsYXN0aWNzZWFyY2giOmh0dHBzOi8vd3d3LmVsYXN0aWMuY28v
cHJvZHVjdHMvZWxhc3RpY3NlYXJjaAoKRWxhc3RpY3NlYXJjaCBpcyBhIGRp
c3RyaWJ1dGVkIFJFU1RmdWwgc2VhcmNoIGVuZ2luZSBidWlsdCBmb3IgdGhl
IGNsb3VkLiBGZWF0dXJlcyBpbmNsdWRlOgoKKiBEaXN0cmlidXRlZCBhbmQg
SGlnaGx5IEF2YWlsYWJsZSBTZWFyY2ggRW5naW5lLgoqKiBFYWNoIGluZGV4
IGlzIGZ1bGx5IHNoYXJkZWQgd2l0aCBhIGNvbmZpZ3VyYWJsZSBudW1iZXIg
b2Ygc2hhcmRzLgoqKiBFYWNoIHNoYXJkIGNhbiBoYXZlIG9uZSBvciBtb3Jl
IHJlcGxpY2FzLgoqKiBSZWFkIC8gU2VhcmNoIG9wZXJhdGlvbnMgcGVyZm9y
bWVkIG9uIGFueSBvZiB0aGUgcmVwbGljYSBzaGFyZHMuCiogTXVsdGkgVGVu
YW50LgoqKiBTdXBwb3J0IGZvciBtb3JlIHRoYW4gb25lIGluZGV4LgoqKiBJ
bmRleCBsZXZlbCBjb25maWd1cmF0aW9uIChudW1iZXIgb2Ygc2hhcmRzLCBp
bmRleCBzdG9yYWdlLCAuLi4pLgoqIFZhcmlvdXMgc2V0IG9mIEFQSXMKKiog
SFRUUCBSRVNUZnVsIEFQSQoqKiBOYXRpdmUgSmF2YSBBUEkuCioqIEFsbCBB
UElzIHBlcmZvcm0gYXV0b21hdGljIG5vZGUgb3BlcmF0aW9uIHJlcm91dGlu
Zy4KKiBEb2N1bWVudCBvcmllbnRlZAoqKiBObyBuZWVkIGZvciB1cGZyb250
IHNjaGVtYSBkZWZpbml0aW9uLgoqKiBTY2hlbWEgY2FuIGJlIGRlZmluZWQg
Zm9yIGN1c3RvbWl6YXRpb24gb2YgdGhlIGluZGV4aW5nIHByb2Nlc3MuCiog
UmVsaWFibGUsIEFzeW5jaHJvbm91cyBXcml0ZSBCZWhpbmQgZm9yIGxvbmcg
dGVybSBwZXJzaXN0ZW5jeS4KKiAoTmVhcikgUmVhbCBUaW1lIFNlYXJjaC4K
KiBCdWlsdCBvbiB0b3Agb2YgTHVjZW5lCioqIEVhY2ggc2hhcmQgaXMgYSBm
dWxseSBmdW5jdGlvbmFsIEx1Y2VuZSBpbmRleAoqKiBBbGwgdGhlIHBvd2Vy
IG9mIEx1Y2VuZSBlYXNpbHkgZXhwb3NlZCB0aHJvdWdoIHNpbXBsZSBjb25m
aWd1cmF0aW9uIC8gcGx1Z2lucy4KKiBQZXIgb3BlcmF0aW9uIGNvbnNpc3Rl
bmN5CioqIFNpbmdsZSBkb2N1bWVudCBsZXZlbCBvcGVyYXRpb25zIGFyZSBh
dG9taWMsIGNvbnNpc3RlbnQsIGlzb2xhdGVkIGFuZCBkdXJhYmxlLgoKaDIu
IEdldHRpbmcgU3RhcnRlZAoKRmlyc3Qgb2YgYWxsLCBET04nVCBQQU5JQy4g
SXQgd2lsbCB0YWtlIDUgbWludXRlcyB0byBnZXQgdGhlIGdpc3Qgb2Ygd2hh
dCBFbGFzdGljc2VhcmNoIGlzIGFsbCBhYm91dC4KCmgzLiBSZXF1aXJlbWVu
dHMKCllvdSBuZWVkIHRvIGhhdmUgYSByZWNlbnQgdmVyc2lvbiBvZiBKYXZh
IGluc3RhbGxlZC4gU2VlIHRoZSAiU2V0dXAiOmh0dHA6Ly93d3cuZWxhc3Rp
Yy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3JlZmVyZW5jZS9jdXJyZW50
L3NldHVwLmh0bWwjanZtLXZlcnNpb24gcGFnZSBmb3IgbW9yZSBpbmZvcm1h
dGlvbi4KCmgzLiBJbnN0YWxsYXRpb24KCiogIkRvd25sb2FkIjpodHRwczov
L3d3dy5lbGFzdGljLmNvL2Rvd25sb2Fkcy9lbGFzdGljc2VhcmNoIGFuZCB1
bnppcCB0aGUgRWxhc3RpY3NlYXJjaCBvZmZpY2lhbCBkaXN0cmlidXRpb24u
CiogUnVuIEBiaW4vZWxhc3RpY3NlYXJjaEAgb24gdW5peCwgb3IgQGJpblxl
bGFzdGljc2VhcmNoLmJhdEAgb24gd2luZG93cy4KKiBSdW4gQGN1cmwgLVgg
R0VUIGh0dHA6Ly9sb2NhbGhvc3Q6OTIwMC9ALgoqIFN0YXJ0IG1vcmUgc2Vy
dmVycyAuLi4KCmgzLiBJbmRleGluZwoKTGV0J3MgdHJ5IGFuZCBpbmRleCBz
b21lIHR3aXR0ZXIgbGlrZSBpbmZvcm1hdGlvbi4gRmlyc3QsIGxldCdzIGlu
ZGV4IHNvbWUgdHdlZXRzICh0aGUgQHR3aXR0ZXJAIGluZGV4IHdpbGwgYmUg
Y3JlYXRlZCBhdXRvbWF0aWNhbGx5KToKCjxwcmU+CmN1cmwgLVhQVVQgJ2h0
dHA6Ly9sb2NhbGhvc3Q6OTIwMC90d2l0dGVyL19kb2MvMT9wcmV0dHknIC1I
ICdDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24nIC1kICcKewogICAg
InVzZXIiOiAia2ltY2h5IiwKICAgICJwb3N0X2RhdGUiOiAiMjAwOS0xMS0x
NVQxMzoxMjowMCIsCiAgICAibWVzc2FnZSI6ICJUcnlpbmcgb3V0IEVsYXN0
aWNzZWFyY2gsIHNvIGZhciBzbyBnb29kPyIKfScKCmN1cmwgLVhQVVQgJ2h0
dHA6Ly9sb2NhbGhvc3Q6OTIwMC90d2l0dGVyL19kb2MvMj9wcmV0dHknIC1I
ICdDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24nIC1kICcKewogICAg
InVzZXIiOiAia2ltY2h5IiwKICAgICJwb3N0X2RhdGUiOiAiMjAwOS0xMS0x
NVQxNDoxMjoxMiIsCiAgICAibWVzc2FnZSI6ICJBbm90aGVyIHR3ZWV0LCB3
aWxsIGl0IGJlIGluZGV4ZWQ/Igp9JwoKY3VybCAtWFBVVCAnaHR0cDovL2xv
Y2FsaG9zdDo5MjAwL3R3aXR0ZXIvX2RvYy8zP3ByZXR0eScgLUggJ0NvbnRl
bnQtVHlwZTogYXBwbGljYXRpb24vanNvbicgLWQgJwp7CiAgICAidXNlciI6
ICJlbGFzdGljIiwKICAgICJwb3N0X2RhdGUiOiAiMjAxMC0wMS0xNVQwMTo0
NjozOCIsCiAgICAibWVzc2FnZSI6ICJCdWlsZGluZyB0aGUgc2l0ZSwgc2hv
dWxkIGJlIGtld2wiCn0nCjwvcHJlPgoKTm93LCBsZXQncyBzZWUgaWYgdGhl
IGluZm9ybWF0aW9uIHdhcyBhZGRlZCBieSBHRVR0aW5nIGl0OgoKPHByZT4K
Y3VybCAtWEdFVCAnaHR0cDovL2xvY2FsaG9zdDo5MjAwL3R3aXR0ZXIvX2Rv
Yy8xP3ByZXR0eT10cnVlJwpjdXJsIC1YR0VUICdodHRwOi8vbG9jYWxob3N0
OjkyMDAvdHdpdHRlci9fZG9jLzI/cHJldHR5PXRydWUnCmN1cmwgLVhHRVQg
J2h0dHA6Ly9sb2NhbGhvc3Q6OTIwMC90d2l0dGVyL19kb2MvMz9wcmV0dHk9
dHJ1ZScKPC9wcmU+CgpoMy4gU2VhcmNoaW5nCgpNbW0gc2VhcmNoLi4uLCBz
aG91bGRuJ3QgaXQgYmUgZWxhc3RpYz8KTGV0J3MgZmluZCBhbGwgdGhlIHR3
ZWV0cyB0aGF0IEBraW1jaHlAIHBvc3RlZDoKCjxwcmU+CmN1cmwgLVhHRVQg
J2h0dHA6Ly9sb2NhbGhvc3Q6OTIwMC90d2l0dGVyL19zZWFyY2g/cT11c2Vy
OmtpbWNoeSZwcmV0dHk9dHJ1ZScKPC9wcmU+CgpXZSBjYW4gYWxzbyB1c2Ug
dGhlIEpTT04gcXVlcnkgbGFuZ3VhZ2UgRWxhc3RpY3NlYXJjaCBwcm92aWRl
cyBpbnN0ZWFkIG9mIGEgcXVlcnkgc3RyaW5nOgoKPHByZT4KY3VybCAtWEdF
VCAnaHR0cDovL2xvY2FsaG9zdDo5MjAwL3R3aXR0ZXIvX3NlYXJjaD9wcmV0
dHk9dHJ1ZScgLUggJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbicg
LWQgJwp7CiAgICAicXVlcnkiIDogewogICAgICAgICJtYXRjaCIgOiB7ICJ1
c2VyIjogImtpbWNoeSIgfQogICAgfQp9Jwo8L3ByZT4KCkp1c3QgZm9yIGtp
Y2tzLCBsZXQncyBnZXQgYWxsIHRoZSBkb2N1bWVudHMgc3RvcmVkICh3ZSBz
aG91bGQgc2VlIHRoZSB0d2VldCBmcm9tIEBlbGFzdGljQCBhcyB3ZWxsKToK
CjxwcmU+CmN1cmwgLVhHRVQgJ2h0dHA6Ly9sb2NhbGhvc3Q6OTIwMC90d2l0
dGVyL19zZWFyY2g/cHJldHR5PXRydWUnIC1IICdDb250ZW50LVR5cGU6IGFw
cGxpY2F0aW9uL2pzb24nIC1kICcKewogICAgInF1ZXJ5IiA6IHsKICAgICAg
ICAibWF0Y2hfYWxsIiA6IHt9CiAgICB9Cn0nCjwvcHJlPgoKV2UgY2FuIGFs
c28gZG8gcmFuZ2Ugc2VhcmNoICh0aGUgQHBvc3RfZGF0ZUAgd2FzIGF1dG9t
YXRpY2FsbHkgaWRlbnRpZmllZCBhcyBkYXRlKQoKPHByZT4KY3VybCAtWEdF
VCAnaHR0cDovL2xvY2FsaG9zdDo5MjAwL3R3aXR0ZXIvX3NlYXJjaD9wcmV0
dHk9dHJ1ZScgLUggJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbicg
LWQgJwp7CiAgICAicXVlcnkiIDogewogICAgICAgICJyYW5nZSIgOiB7CiAg
ICAgICAgICAgICJwb3N0X2RhdGUiIDogeyAiZnJvbSIgOiAiMjAwOS0xMS0x
NVQxMzowMDowMCIsICJ0byIgOiAiMjAwOS0xMS0xNVQxNDowMDowMCIgfQog
ICAgICAgIH0KICAgIH0KfScKPC9wcmU+CgpUaGVyZSBhcmUgbWFueSBtb3Jl
IG9wdGlvbnMgdG8gcGVyZm9ybSBzZWFyY2gsIGFmdGVyIGFsbCwgaXQncyBh
IHNlYXJjaCBwcm9kdWN0IG5vPyBBbGwgdGhlIGZhbWlsaWFyIEx1Y2VuZSBx
dWVyaWVzIGFyZSBhdmFpbGFibGUgdGhyb3VnaCB0aGUgSlNPTiBxdWVyeSBs
YW5ndWFnZSwgb3IgdGhyb3VnaCB0aGUgcXVlcnkgcGFyc2VyLgoKaDMuIE11
bHRpIFRlbmFudCBhbmQgSW5kaWNlcwoKTWFuLCB0aGF0IHR3aXR0ZXIgaW5k
ZXggbWlnaHQgZ2V0IGJpZyAoaW4gdGhpcyBjYXNlLCBpbmRleCBzaXplID09
IHZhbHVhdGlvbikuIExldCdzIHNlZSBpZiB3ZSBjYW4gc3RydWN0dXJlIG91
ciB0d2l0dGVyIHN5c3RlbSBhIGJpdCBkaWZmZXJlbnRseSBpbiBvcmRlciB0
byBzdXBwb3J0IHN1Y2ggbGFyZ2UgYW1vdW50cyBvZiBkYXRhLgoKRWxhc3Rp
Y3NlYXJjaCBzdXBwb3J0cyBtdWx0aXBsZSBpbmRpY2VzLiBJbiB0aGUgcHJl
dmlvdXMgZXhhbXBsZSB3ZSB1c2VkIGFuIGluZGV4IGNhbGxlZCBAdHdpdHRl
ckAgdGhhdCBzdG9yZWQgdHdlZXRzIGZvciBldmVyeSB1c2VyLgoKQW5vdGhl
ciB3YXkgdG8gZGVmaW5lIG91ciBzaW1wbGUgdHdpdHRlciBzeXN0ZW0gaXMg
dG8gaGF2ZSBhIGRpZmZlcmVudCBpbmRleCBwZXIgdXNlciAobm90ZSwgdGhv
dWdoIHRoYXQgZWFjaCBpbmRleCBoYXMgYW4gb3ZlcmhlYWQpLiBIZXJlIGlz
IHRoZSBpbmRleGluZyBjdXJsJ3MgaW4gdGhpcyBjYXNlOgoKPHByZT4KY3Vy
bCAtWFBVVCAnaHR0cDovL2xvY2FsaG9zdDo5MjAwL2tpbWNoeS9fZG9jLzE/
cHJldHR5JyAtSCAnQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uJyAt
ZCAnCnsKICAgICJ1c2VyIjogImtpbWNoeSIsCiAgICAicG9zdF9kYXRlIjog
IjIwMDktMTEtMTVUMTM6MTI6MDAiLAogICAgIm1lc3NhZ2UiOiAiVHJ5aW5n
IG91dCBFbGFzdGljc2VhcmNoLCBzbyBmYXIgc28gZ29vZD8iCn0nCgpjdXJs
IC1YUFVUICdodHRwOi8vbG9jYWxob3N0OjkyMDAva2ltY2h5L19kb2MvMj9w
cmV0dHknIC1IICdDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24nIC1k
ICcKewogICAgInVzZXIiOiAia2ltY2h5IiwKICAgICJwb3N0X2RhdGUiOiAi
MjAwOS0xMS0xNVQxNDoxMjoxMiIsCiAgICAibWVzc2FnZSI6ICJBbm90aGVy
IHR3ZWV0LCB3aWxsIGl0IGJlIGluZGV4ZWQ/Igp9Jwo8L3ByZT4KClRoZSBh
Ym92ZSB3aWxsIGluZGV4IGluZm9ybWF0aW9uIGludG8gdGhlIEBraW1jaHlA
IGluZGV4LiBFYWNoIHVzZXIgd2lsbCBnZXQgdGhlaXIgb3duIHNwZWNpYWwg
aW5kZXguCgpDb21wbGV0ZSBjb250cm9sIG9uIHRoZSBpbmRleCBsZXZlbCBp
cyBhbGxvd2VkLiBBcyBhbiBleGFtcGxlLCBpbiB0aGUgYWJvdmUgY2FzZSwg
d2UgbWlnaHQgd2FudCB0byBjaGFuZ2UgZnJvbSB0aGUgZGVmYXVsdCAxIHNo
YXJkIHdpdGggMSByZXBsaWNhIHBlciBpbmRleCwgdG8gMiBzaGFyZHMgd2l0
aCAxIHJlcGxpY2EgcGVyIGluZGV4IChiZWNhdXNlIHRoaXMgdXNlciB0d2Vl
dHMgYSBsb3QpLiBIZXJlIGlzIGhvdyB0aGlzIGNhbiBiZSBkb25lICh0aGUg
Y29uZmlndXJhdGlvbiBjYW4gYmUgaW4geWFtbCBhcyB3ZWxsKToKCjxwcmU+
CmN1cmwgLVhQVVQgaHR0cDovL2xvY2FsaG9zdDo5MjAwL2Fub3RoZXJfdXNl
cj9wcmV0dHkgLUggJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbicg
LWQgJwp7CiAgICAic2V0dGluZ3MiIDogewogICAgICAgICJpbmRleC5udW1i
ZXJfb2Zfc2hhcmRzIiA6IDIsCiAgICAgICAgImluZGV4Lm51bWJlcl9vZl9y
ZXBsaWNhcyIgOiAxCiAgICB9Cn0nCjwvcHJlPgoKU2VhcmNoIChhbmQgc2lt
aWxhciBvcGVyYXRpb25zKSBhcmUgbXVsdGkgaW5kZXggYXdhcmUuIFRoaXMg
bWVhbnMgdGhhdCB3ZSBjYW4gZWFzaWx5IHNlYXJjaCBvbiBtb3JlIHRoYW4g
b25lCmluZGV4ICh0d2l0dGVyIHVzZXIpLCBmb3IgZXhhbXBsZToKCjxwcmU+
CmN1cmwgLVhHRVQgJ2h0dHA6Ly9sb2NhbGhvc3Q6OTIwMC9raW1jaHksYW5v
dGhlcl91c2VyL19zZWFyY2g/cHJldHR5PXRydWUnIC1IICdDb250ZW50LVR5
cGU6IGFwcGxpY2F0aW9uL2pzb24nIC1kICcKewogICAgInF1ZXJ5IiA6IHsK
ICAgICAgICAibWF0Y2hfYWxsIiA6IHt9CiAgICB9Cn0nCjwvcHJlPgoKT3Ig
b24gYWxsIHRoZSBpbmRpY2VzOgoKPHByZT4KY3VybCAtWEdFVCAnaHR0cDov
L2xvY2FsaG9zdDo5MjAwL19zZWFyY2g/cHJldHR5PXRydWUnIC1IICdDb250
ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24nIC1kICcKewogICAgInF1ZXJ5
IiA6IHsKICAgICAgICAibWF0Y2hfYWxsIiA6IHt9CiAgICB9Cn0nCjwvcHJl
PgoKe09uZSBsaW5lciB0ZWFzZXJ9OiBBbmQgdGhlIGNvb2wgcGFydCBhYm91
dCB0aGF0PyBZb3UgY2FuIGVhc2lseSBzZWFyY2ggb24gbXVsdGlwbGUgdHdp
dHRlciB1c2VycyAoaW5kaWNlcyksIHdpdGggZGlmZmVyZW50IGJvb3N0IGxl
dmVscyBwZXIgdXNlciAoaW5kZXgpLCBtYWtpbmcgc29jaWFsIHNlYXJjaCBz
byBtdWNoIHNpbXBsZXIgKHJlc3VsdHMgZnJvbSBteSBmcmllbmRzIHJhbmsg
aGlnaGVyIHRoYW4gcmVzdWx0cyBmcm9tIGZyaWVuZHMgb2YgbXkgZnJpZW5k
cykuCgpoMy4gRGlzdHJpYnV0ZWQsIEhpZ2hseSBBdmFpbGFibGUKCkxldCdz
IGZhY2UgaXQsIHRoaW5ncyB3aWxsIGZhaWwuLi4uCgpFbGFzdGljc2VhcmNo
IGlzIGEgaGlnaGx5IGF2YWlsYWJsZSBhbmQgZGlzdHJpYnV0ZWQgc2VhcmNo
IGVuZ2luZS4gRWFjaCBpbmRleCBpcyBicm9rZW4gZG93biBpbnRvIHNoYXJk
cywgYW5kIGVhY2ggc2hhcmQgY2FuIGhhdmUgb25lIG9yIG1vcmUgcmVwbGlj
YXMuIEJ5IGRlZmF1bHQsIGFuIGluZGV4IGlzIGNyZWF0ZWQgd2l0aCAxIHNo
YXJkcyBhbmQgMSByZXBsaWNhIHBlciBzaGFyZCAoMS8xKS4gVGhlcmUgYXJl
IG1hbnkgdG9wb2xvZ2llcyB0aGF0IGNhbiBiZSB1c2VkLCBpbmNsdWRpbmcg
MS8xMCAoaW1wcm92ZSBzZWFyY2ggcGVyZm9ybWFuY2UpLCBvciAyMC8xIChp
bXByb3ZlIGluZGV4aW5nIHBlcmZvcm1hbmNlLCB3aXRoIHNlYXJjaCBleGVj
dXRlZCBpbiBhIG1hcCByZWR1Y2UgZmFzaGlvbiBhY3Jvc3Mgc2hhcmRzKS4K
CkluIG9yZGVyIHRvIHBsYXkgd2l0aCB0aGUgZGlzdHJpYnV0ZWQgbmF0dXJl
IG9mIEVsYXN0aWNzZWFyY2gsIHNpbXBseSBicmluZyBtb3JlIG5vZGVzIHVw
IGFuZCBzaHV0IGRvd24gbm9kZXMuIFRoZSBzeXN0ZW0gd2lsbCBjb250aW51
ZSB0byBzZXJ2ZSByZXF1ZXN0cyAobWFrZSBzdXJlIHlvdSB1c2UgdGhlIGNv
cnJlY3QgaHR0cCBwb3J0KSB3aXRoIHRoZSBsYXRlc3QgZGF0YSBpbmRleGVk
LgoKaDMuIFdoZXJlIHRvIGdvIGZyb20gaGVyZT8KCldlIGhhdmUganVzdCBj
b3ZlcmVkIGEgdmVyeSBzbWFsbCBwb3J0aW9uIG9mIHdoYXQgRWxhc3RpY3Nl
YXJjaCBpcyBhbGwgYWJvdXQuIEZvciBtb3JlIGluZm9ybWF0aW9uLCBwbGVh
c2UgcmVmZXIgdG8gdGhlICJlbGFzdGljLmNvIjpodHRwOi8vd3d3LmVsYXN0
aWMuY28vcHJvZHVjdHMvZWxhc3RpY3NlYXJjaCB3ZWJzaXRlLiBHZW5lcmFs
IHF1ZXN0aW9ucyBjYW4gYmUgYXNrZWQgb24gdGhlICJFbGFzdGljIERpc2Nv
dXJzZSBmb3J1bSI6aHR0cHM6Ly9kaXNjdXNzLmVsYXN0aWMuY28gb3Igb24g
SVJDIG9uIEZyZWVub2RlIGF0ICIjZWxhc3RpY3NlYXJjaCI6aHR0cHM6Ly93
ZWJjaGF0LmZyZWVub2RlLm5ldC8jZWxhc3RpY3NlYXJjaC4gVGhlIEVsYXN0
aWNzZWFyY2ggR2l0SHViIHJlcG9zaXRvcnkgaXMgcmVzZXJ2ZWQgZm9yIGJ1
ZyByZXBvcnRzIGFuZCBmZWF0dXJlIHJlcXVlc3RzIG9ubHkuCgpoMy4gQnVp
bGRpbmcgZnJvbSBTb3VyY2UKCkVsYXN0aWNzZWFyY2ggdXNlcyAiR3JhZGxl
IjpodHRwczovL2dyYWRsZS5vcmcgZm9yIGl0cyBidWlsZCBzeXN0ZW0uCgpJ
biBvcmRlciB0byBjcmVhdGUgYSBkaXN0cmlidXRpb24sIHNpbXBseSBydW4g
dGhlIEAuL2dyYWRsZXcgYXNzZW1ibGVAIGNvbW1hbmQgaW4gdGhlIGNsb25l
ZCBkaXJlY3RvcnkuCgpUaGUgZGlzdHJpYnV0aW9uIGZvciBlYWNoIHByb2pl
Y3Qgd2lsbCBiZSBjcmVhdGVkIHVuZGVyIHRoZSBAYnVpbGQvZGlzdHJpYnV0
aW9uc0AgZGlyZWN0b3J5IGluIHRoYXQgcHJvamVjdC4KClNlZSB0aGUgIlRF
U1RJTkciOlRFU1RJTkcuYXNjaWlkb2MgZmlsZSBmb3IgbW9yZSBpbmZvcm1h
dGlvbiBhYm91dCBydW5uaW5nIHRoZSBFbGFzdGljc2VhcmNoIHRlc3Qgc3Vp
dGUuCgpoMy4gVXBncmFkaW5nIGZyb20gb2xkZXIgRWxhc3RpY3NlYXJjaCB2
ZXJzaW9ucwoKSW4gb3JkZXIgdG8gZW5zdXJlIGEgc21vb3RoIHVwZ3JhZGUg
cHJvY2VzcyBmcm9tIGVhcmxpZXIgdmVyc2lvbnMgb2YgRWxhc3RpY3NlYXJj
aCwgcGxlYXNlIHNlZSBvdXIgInVwZ3JhZGUgZG9jdW1lbnRhdGlvbiI6aHR0
cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3Jl
ZmVyZW5jZS9jdXJyZW50L3NldHVwLXVwZ3JhZGUuaHRtbCBmb3IgbW9yZSBk
ZXRhaWxzIG9uIHRoZSB1cGdyYWRlIHByb2Nlc3MuCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'keras',33015583,b'Deep Learning for humans',b'Python',2671,45325,,45325,False,b'https://api.github.com/repos/keras-team/keras/forks',"77u/IyBLZXJhczogRGVlcCBMZWFybmluZyBmb3IgaHVtYW5zCgohW0tlcmFz
IGxvZ29dKGh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9rZXJhcy5pby9pbWcv
a2VyYXMtbG9nby0yMDE4LWxhcmdlLTEyMDAucG5nKQoKWyFbQnVpbGQgU3Rh
dHVzXShodHRwczovL3RyYXZpcy1jaS5vcmcva2VyYXMtdGVhbS9rZXJhcy5z
dmc/YnJhbmNoPW1hc3RlcildKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9rZXJh
cy10ZWFtL2tlcmFzKQpbIVtsaWNlbnNlXShodHRwczovL2ltZy5zaGllbGRz
LmlvL2dpdGh1Yi9saWNlbnNlL21hc2hhcGUvYXBpc3RhdHVzLnN2Zz9tYXhB
Z2U9MjU5MjAwMCldKGh0dHBzOi8vZ2l0aHViLmNvbS9rZXJhcy10ZWFtL2tl
cmFzL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpCgojIyBZb3UgaGF2ZSBqdXN0IGZv
dW5kIEtlcmFzLgoKS2VyYXMgaXMgYSBoaWdoLWxldmVsIG5ldXJhbCBuZXR3
b3JrcyBBUEksIHdyaXR0ZW4gaW4gUHl0aG9uIGFuZCBjYXBhYmxlIG9mIHJ1
bm5pbmcgb24gdG9wIG9mIFtUZW5zb3JGbG93XShodHRwczovL2dpdGh1Yi5j
b20vdGVuc29yZmxvdy90ZW5zb3JmbG93KSwgW0NOVEtdKGh0dHBzOi8vZ2l0
aHViLmNvbS9NaWNyb3NvZnQvY250ayksIG9yIFtUaGVhbm9dKGh0dHBzOi8v
Z2l0aHViLmNvbS9UaGVhbm8vVGhlYW5vKS4gSXQgd2FzIGRldmVsb3BlZCB3
aXRoIGEgZm9jdXMgb24gZW5hYmxpbmcgZmFzdCBleHBlcmltZW50YXRpb24u
ICpCZWluZyBhYmxlIHRvIGdvIGZyb20gaWRlYSB0byByZXN1bHQgd2l0aCB0
aGUgbGVhc3QgcG9zc2libGUgZGVsYXkgaXMga2V5IHRvIGRvaW5nIGdvb2Qg
cmVzZWFyY2guKgoKVXNlIEtlcmFzIGlmIHlvdSBuZWVkIGEgZGVlcCBsZWFy
bmluZyBsaWJyYXJ5IHRoYXQ6CgotIEFsbG93cyBmb3IgZWFzeSBhbmQgZmFz
dCBwcm90b3R5cGluZyAodGhyb3VnaCB1c2VyIGZyaWVuZGxpbmVzcywgbW9k
dWxhcml0eSwgYW5kIGV4dGVuc2liaWxpdHkpLgotIFN1cHBvcnRzIGJvdGgg
Y29udm9sdXRpb25hbCBuZXR3b3JrcyBhbmQgcmVjdXJyZW50IG5ldHdvcmtz
LCBhcyB3ZWxsIGFzIGNvbWJpbmF0aW9ucyBvZiB0aGUgdHdvLgotIFJ1bnMg
c2VhbWxlc3NseSBvbiBDUFUgYW5kIEdQVS4KClJlYWQgdGhlIGRvY3VtZW50
YXRpb24gYXQgW0tlcmFzLmlvXShodHRwczovL2tlcmFzLmlvKS4KCktlcmFz
IGlzIGNvbXBhdGlibGUgd2l0aDogX19QeXRob24gMi43LTMuNl9fLgoKCi0t
LS0tLS0tLS0tLS0tLS0tLQoKIyMgTXVsdGktYmFja2VuZCBLZXJhcyBhbmQg
dGYua2VyYXM6CgoqKkF0IHRoaXMgdGltZSwgd2UgcmVjb21tZW5kIHRoYXQg
S2VyYXMgdXNlcnMgd2hvIHVzZSBtdWx0aS1iYWNrZW5kIEtlcmFzIHdpdGgg
dGhlIFRlbnNvckZsb3cgYmFja2VuZCBzd2l0Y2ggdG8gYHRmLmtlcmFzYCBp
biBUZW5zb3JGbG93IDIuMCoqLiBgdGYua2VyYXNgIGlzIGJldHRlciBtYWlu
dGFpbmVkIGFuZCBoYXMgYmV0dGVyIGludGVncmF0aW9uIHdpdGggVGVuc29y
RmxvdyBmZWF0dXJlcyAoZWFnZXIgZXhlY3V0aW9uLCBkaXN0cmlidXRpb24g
c3VwcG9ydCBhbmQgb3RoZXIpLgoKS2VyYXMgMi4yLjUgd2FzIHRoZSBsYXN0
IHJlbGVhc2Ugb2YgS2VyYXMgaW1wbGVtZW50aW5nIHRoZSAyLjIuKiBBUEku
IEl0IHdhcyB0aGUgbGFzdCByZWxlYXNlIHRvIG9ubHkgc3VwcG9ydCBUZW5z
b3JGbG93IDEgKGFzIHdlbGwgYXMgVGhlYW5vIGFuZCBDTlRLKS4KClRoZSBj
dXJyZW50IHJlbGVhc2UgaXMgS2VyYXMgMi4zLjAsIHdoaWNoIG1ha2VzIHNp
Z25pZmljYW50IEFQSSBjaGFuZ2VzIGFuZCBhZGQgc3VwcG9ydCBmb3IgVGVu
c29yRmxvdyAyLjAuIFRoZSAyLjMuMCByZWxlYXNlIHdpbGwgYmUgdGhlIGxh
c3QgbWFqb3IgcmVsZWFzZSBvZiBtdWx0aS1iYWNrZW5kIEtlcmFzLiBNdWx0
aS1iYWNrZW5kIEtlcmFzIGlzIHN1cGVyc2VkZWQgYnkgYHRmLmtlcmFzYC4K
CkJ1Z3MgcHJlc2VudCBpbiBtdWx0aS1iYWNrZW5kIEtlcmFzIHdpbGwgb25s
eSBiZSBmaXhlZCB1bnRpbCBBcHJpbCAyMDIwIChhcyBwYXJ0IG9mIG1pbm9y
IHJlbGVhc2VzKS4KCkZvciBtb3JlIGluZm9ybWF0aW9uIGFib3V0IHRoZSBm
dXR1cmUgb2YgS2VyYXMsIHNlZSBbdGhlIEtlcmFzIG1lZXRpbmcgbm90ZXNd
KGh0dHA6Ly9iaXQubHkva2VyYXMtbWVldGluZy1ub3RlcykuCgoKLS0tLS0t
LS0tLS0tLS0tLS0tCgojIyBHdWlkaW5nIHByaW5jaXBsZXMKCi0gX19Vc2Vy
IGZyaWVuZGxpbmVzcy5fXyBLZXJhcyBpcyBhbiBBUEkgZGVzaWduZWQgZm9y
IGh1bWFuIGJlaW5ncywgbm90IG1hY2hpbmVzLiBJdCBwdXRzIHVzZXIgZXhw
ZXJpZW5jZSBmcm9udCBhbmQgY2VudGVyLiBLZXJhcyBmb2xsb3dzIGJlc3Qg
cHJhY3RpY2VzIGZvciByZWR1Y2luZyBjb2duaXRpdmUgbG9hZDogaXQgb2Zm
ZXJzIGNvbnNpc3RlbnQgJiBzaW1wbGUgQVBJcywgaXQgbWluaW1pemVzIHRo
ZSBudW1iZXIgb2YgdXNlciBhY3Rpb25zIHJlcXVpcmVkIGZvciBjb21tb24g
dXNlIGNhc2VzLCBhbmQgaXQgcHJvdmlkZXMgY2xlYXIgYW5kIGFjdGlvbmFi
bGUgZmVlZGJhY2sgdXBvbiB1c2VyIGVycm9yLgoKLSBfX01vZHVsYXJpdHku
X18gQSBtb2RlbCBpcyB1bmRlcnN0b29kIGFzIGEgc2VxdWVuY2Ugb3IgYSBn
cmFwaCBvZiBzdGFuZGFsb25lLCBmdWxseSBjb25maWd1cmFibGUgbW9kdWxl
cyB0aGF0IGNhbiBiZSBwbHVnZ2VkIHRvZ2V0aGVyIHdpdGggYXMgZmV3IHJl
c3RyaWN0aW9ucyBhcyBwb3NzaWJsZS4gSW4gcGFydGljdWxhciwgbmV1cmFs
IGxheWVycywgY29zdCBmdW5jdGlvbnMsIG9wdGltaXplcnMsIGluaXRpYWxp
emF0aW9uIHNjaGVtZXMsIGFjdGl2YXRpb24gZnVuY3Rpb25zIGFuZCByZWd1
bGFyaXphdGlvbiBzY2hlbWVzIGFyZSBhbGwgc3RhbmRhbG9uZSBtb2R1bGVz
IHRoYXQgeW91IGNhbiBjb21iaW5lIHRvIGNyZWF0ZSBuZXcgbW9kZWxzLgoK
LSBfX0Vhc3kgZXh0ZW5zaWJpbGl0eS5fXyBOZXcgbW9kdWxlcyBhcmUgc2lt
cGxlIHRvIGFkZCAoYXMgbmV3IGNsYXNzZXMgYW5kIGZ1bmN0aW9ucyksIGFu
ZCBleGlzdGluZyBtb2R1bGVzIHByb3ZpZGUgYW1wbGUgZXhhbXBsZXMuIFRv
IGJlIGFibGUgdG8gZWFzaWx5IGNyZWF0ZSBuZXcgbW9kdWxlcyBhbGxvd3Mg
Zm9yIHRvdGFsIGV4cHJlc3NpdmVuZXNzLCBtYWtpbmcgS2VyYXMgc3VpdGFi
bGUgZm9yIGFkdmFuY2VkIHJlc2VhcmNoLgoKLSBfX1dvcmsgd2l0aCBQeXRo
b25fXy4gTm8gc2VwYXJhdGUgbW9kZWxzIGNvbmZpZ3VyYXRpb24gZmlsZXMg
aW4gYSBkZWNsYXJhdGl2ZSBmb3JtYXQuIE1vZGVscyBhcmUgZGVzY3JpYmVk
IGluIFB5dGhvbiBjb2RlLCB3aGljaCBpcyBjb21wYWN0LCBlYXNpZXIgdG8g
ZGVidWcsIGFuZCBhbGxvd3MgZm9yIGVhc2Ugb2YgZXh0ZW5zaWJpbGl0eS4K
CgotLS0tLS0tLS0tLS0tLS0tLS0KCgojIyBHZXR0aW5nIHN0YXJ0ZWQ6IDMw
IHNlY29uZHMgdG8gS2VyYXMKClRoZSBjb3JlIGRhdGEgc3RydWN0dXJlIG9m
IEtlcmFzIGlzIGEgX19tb2RlbF9fLCBhIHdheSB0byBvcmdhbml6ZSBsYXll
cnMuIFRoZSBzaW1wbGVzdCB0eXBlIG9mIG1vZGVsIGlzIHRoZSBbYFNlcXVl
bnRpYWxgXShodHRwczovL2tlcmFzLmlvL2dldHRpbmctc3RhcnRlZC9zZXF1
ZW50aWFsLW1vZGVsLWd1aWRlKSBtb2RlbCwgYSBsaW5lYXIgc3RhY2sgb2Yg
bGF5ZXJzLiBGb3IgbW9yZSBjb21wbGV4IGFyY2hpdGVjdHVyZXMsIHlvdSBz
aG91bGQgdXNlIHRoZSBbS2VyYXMgZnVuY3Rpb25hbCBBUEldKGh0dHBzOi8v
a2VyYXMuaW8vZ2V0dGluZy1zdGFydGVkL2Z1bmN0aW9uYWwtYXBpLWd1aWRl
KSwgd2hpY2ggYWxsb3dzIHRvIGJ1aWxkIGFyYml0cmFyeSBncmFwaHMgb2Yg
bGF5ZXJzLgoKSGVyZSBpcyB0aGUgYFNlcXVlbnRpYWxgIG1vZGVsOgoKYGBg
cHl0aG9uCmZyb20ga2VyYXMubW9kZWxzIGltcG9ydCBTZXF1ZW50aWFsCgpt
b2RlbCA9IFNlcXVlbnRpYWwoKQpgYGAKClN0YWNraW5nIGxheWVycyBpcyBh
cyBlYXN5IGFzIGAuYWRkKClgOgoKYGBgcHl0aG9uCmZyb20ga2VyYXMubGF5
ZXJzIGltcG9ydCBEZW5zZQoKbW9kZWwuYWRkKERlbnNlKHVuaXRzPTY0LCBh
Y3RpdmF0aW9uPSdyZWx1JywgaW5wdXRfZGltPTEwMCkpCm1vZGVsLmFkZChE
ZW5zZSh1bml0cz0xMCwgYWN0aXZhdGlvbj0nc29mdG1heCcpKQpgYGAKCk9u
Y2UgeW91ciBtb2RlbCBsb29rcyBnb29kLCBjb25maWd1cmUgaXRzIGxlYXJu
aW5nIHByb2Nlc3Mgd2l0aCBgLmNvbXBpbGUoKWA6CgpgYGBweXRob24KbW9k
ZWwuY29tcGlsZShsb3NzPSdjYXRlZ29yaWNhbF9jcm9zc2VudHJvcHknLAog
ICAgICAgICAgICAgIG9wdGltaXplcj0nc2dkJywKICAgICAgICAgICAgICBt
ZXRyaWNzPVsnYWNjdXJhY3knXSkKYGBgCgpJZiB5b3UgbmVlZCB0bywgeW91
IGNhbiBmdXJ0aGVyIGNvbmZpZ3VyZSB5b3VyIG9wdGltaXplci4gQSBjb3Jl
IHByaW5jaXBsZSBvZiBLZXJhcyBpcyB0byBtYWtlIHRoaW5ncyByZWFzb25h
Ymx5IHNpbXBsZSwgd2hpbGUgYWxsb3dpbmcgdGhlIHVzZXIgdG8gYmUgZnVs
bHkgaW4gY29udHJvbCB3aGVuIHRoZXkgbmVlZCB0byAodGhlIHVsdGltYXRl
IGNvbnRyb2wgYmVpbmcgdGhlIGVhc3kgZXh0ZW5zaWJpbGl0eSBvZiB0aGUg
c291cmNlIGNvZGUpLgpgYGBweXRob24KbW9kZWwuY29tcGlsZShsb3NzPWtl
cmFzLmxvc3Nlcy5jYXRlZ29yaWNhbF9jcm9zc2VudHJvcHksCiAgICAgICAg
ICAgICAgb3B0aW1pemVyPWtlcmFzLm9wdGltaXplcnMuU0dEKGxyPTAuMDEs
IG1vbWVudHVtPTAuOSwgbmVzdGVyb3Y9VHJ1ZSkpCmBgYAoKWW91IGNhbiBu
b3cgaXRlcmF0ZSBvbiB5b3VyIHRyYWluaW5nIGRhdGEgaW4gYmF0Y2hlczoK
CmBgYHB5dGhvbgojIHhfdHJhaW4gYW5kIHlfdHJhaW4gYXJlIE51bXB5IGFy
cmF5cyAtLWp1c3QgbGlrZSBpbiB0aGUgU2Npa2l0LUxlYXJuIEFQSS4KbW9k
ZWwuZml0KHhfdHJhaW4sIHlfdHJhaW4sIGVwb2Nocz01LCBiYXRjaF9zaXpl
PTMyKQpgYGAKCkFsdGVybmF0aXZlbHksIHlvdSBjYW4gZmVlZCBiYXRjaGVz
IHRvIHlvdXIgbW9kZWwgbWFudWFsbHk6CgpgYGBweXRob24KbW9kZWwudHJh
aW5fb25fYmF0Y2goeF9iYXRjaCwgeV9iYXRjaCkKYGBgCgpFdmFsdWF0ZSB5
b3VyIHBlcmZvcm1hbmNlIGluIG9uZSBsaW5lOgoKYGBgcHl0aG9uCmxvc3Nf
YW5kX21ldHJpY3MgPSBtb2RlbC5ldmFsdWF0ZSh4X3Rlc3QsIHlfdGVzdCwg
YmF0Y2hfc2l6ZT0xMjgpCmBgYAoKT3IgZ2VuZXJhdGUgcHJlZGljdGlvbnMg
b24gbmV3IGRhdGE6CgpgYGBweXRob24KY2xhc3NlcyA9IG1vZGVsLnByZWRp
Y3QoeF90ZXN0LCBiYXRjaF9zaXplPTEyOCkKYGBgCgpCdWlsZGluZyBhIHF1
ZXN0aW9uIGFuc3dlcmluZyBzeXN0ZW0sIGFuIGltYWdlIGNsYXNzaWZpY2F0
aW9uIG1vZGVsLCBhIE5ldXJhbCBUdXJpbmcgTWFjaGluZSwgb3IgYW55IG90
aGVyIG1vZGVsIGlzIGp1c3QgYXMgZmFzdC4gVGhlIGlkZWFzIGJlaGluZCBk
ZWVwIGxlYXJuaW5nIGFyZSBzaW1wbGUsIHNvIHdoeSBzaG91bGQgdGhlaXIg
aW1wbGVtZW50YXRpb24gYmUgcGFpbmZ1bD8KCkZvciBhIG1vcmUgaW4tZGVw
dGggdHV0b3JpYWwgYWJvdXQgS2VyYXMsIHlvdSBjYW4gY2hlY2sgb3V0OgoK
LSBbR2V0dGluZyBzdGFydGVkIHdpdGggdGhlIFNlcXVlbnRpYWwgbW9kZWxd
KGh0dHBzOi8va2VyYXMuaW8vZ2V0dGluZy1zdGFydGVkL3NlcXVlbnRpYWwt
bW9kZWwtZ3VpZGUpCi0gW0dldHRpbmcgc3RhcnRlZCB3aXRoIHRoZSBmdW5j
dGlvbmFsIEFQSV0oaHR0cHM6Ly9rZXJhcy5pby9nZXR0aW5nLXN0YXJ0ZWQv
ZnVuY3Rpb25hbC1hcGktZ3VpZGUpCgpJbiB0aGUgW2V4YW1wbGVzIGZvbGRl
cl0oaHR0cHM6Ly9naXRodWIuY29tL2tlcmFzLXRlYW0va2VyYXMvdHJlZS9t
YXN0ZXIvZXhhbXBsZXMpIG9mIHRoZSByZXBvc2l0b3J5LCB5b3Ugd2lsbCBm
aW5kIG1vcmUgYWR2YW5jZWQgbW9kZWxzOiBxdWVzdGlvbi1hbnN3ZXJpbmcg
d2l0aCBtZW1vcnkgbmV0d29ya3MsIHRleHQgZ2VuZXJhdGlvbiB3aXRoIHN0
YWNrZWQgTFNUTXMsIGV0Yy4KCgotLS0tLS0tLS0tLS0tLS0tLS0KCgojIyBJ
bnN0YWxsYXRpb24KCkJlZm9yZSBpbnN0YWxsaW5nIEtlcmFzLCBwbGVhc2Ug
aW5zdGFsbCBvbmUgb2YgaXRzIGJhY2tlbmQgZW5naW5lczogVGVuc29yRmxv
dywgVGhlYW5vLCBvciBDTlRLLiBXZSByZWNvbW1lbmQgdGhlIFRlbnNvckZs
b3cgYmFja2VuZC4KCi0gW1RlbnNvckZsb3cgaW5zdGFsbGF0aW9uIGluc3Ry
dWN0aW9uc10oaHR0cHM6Ly93d3cudGVuc29yZmxvdy5vcmcvaW5zdGFsbC8p
LgotIFtUaGVhbm8gaW5zdGFsbGF0aW9uIGluc3RydWN0aW9uc10oaHR0cDov
L2RlZXBsZWFybmluZy5uZXQvc29mdHdhcmUvdGhlYW5vL2luc3RhbGwuaHRt
bCNpbnN0YWxsKS4KLSBbQ05USyBpbnN0YWxsYXRpb24gaW5zdHJ1Y3Rpb25z
XShodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9jb2duaXRpdmUt
dG9vbGtpdC9zZXR1cC1jbnRrLW9uLXlvdXItbWFjaGluZSkuCgpZb3UgbWF5
IGFsc28gY29uc2lkZXIgaW5zdGFsbGluZyB0aGUgZm9sbG93aW5nICoqb3B0
aW9uYWwgZGVwZW5kZW5jaWVzKio6CgotIFtjdUROTl0oaHR0cHM6Ly9kb2Nz
Lm52aWRpYS5jb20vZGVlcGxlYXJuaW5nL3Nkay9jdWRubi1pbnN0YWxsLykg
KHJlY29tbWVuZGVkIGlmIHlvdSBwbGFuIG9uIHJ1bm5pbmcgS2VyYXMgb24g
R1BVKS4KLSBIREY1IGFuZCBbaDVweV0oaHR0cDovL2RvY3MuaDVweS5vcmcv
ZW4vbGF0ZXN0L2J1aWxkLmh0bWwpIChyZXF1aXJlZCBpZiB5b3UgcGxhbiBv
biBzYXZpbmcgS2VyYXMgbW9kZWxzIHRvIGRpc2spLgotIFtncmFwaHZpel0o
aHR0cHM6Ly9ncmFwaHZpei5naXRsYWIuaW8vZG93bmxvYWQvKSBhbmQgW3B5
ZG90XShodHRwczovL2dpdGh1Yi5jb20vZXJvY2FycmVyYS9weWRvdCkgKHVz
ZWQgYnkgW3Zpc3VhbGl6YXRpb24gdXRpbGl0aWVzXShodHRwczovL2tlcmFz
LmlvL3Zpc3VhbGl6YXRpb24vKSB0byBwbG90IG1vZGVsIGdyYXBocykuCgpU
aGVuLCB5b3UgY2FuIGluc3RhbGwgS2VyYXMgaXRzZWxmLiBUaGVyZSBhcmUg
dHdvIHdheXMgdG8gaW5zdGFsbCBLZXJhczoKCi0gKipJbnN0YWxsIEtlcmFz
IGZyb20gUHlQSSAocmVjb21tZW5kZWQpOioqCgpOb3RlOiBUaGVzZSBpbnN0
YWxsYXRpb24gc3RlcHMgYXNzdW1lIHRoYXQgeW91IGFyZSBvbiBhIExpbnV4
IG9yIE1hYyBlbnZpcm9ubWVudC4KSWYgeW91IGFyZSBvbiBXaW5kb3dzLCB5
b3Ugd2lsbCBuZWVkIHRvIHJlbW92ZSBgc3Vkb2AgdG8gcnVuIHRoZSBjb21t
YW5kcyBiZWxvdy4KCmBgYHNoCnN1ZG8gcGlwIGluc3RhbGwga2VyYXMKYGBg
CgpJZiB5b3UgYXJlIHVzaW5nIGEgdmlydHVhbGVudiwgeW91IG1heSB3YW50
IHRvIGF2b2lkIHVzaW5nIHN1ZG86CgpgYGBzaApwaXAgaW5zdGFsbCBrZXJh
cwpgYGAKCi0gKipBbHRlcm5hdGl2ZWx5OiBpbnN0YWxsIEtlcmFzIGZyb20g
dGhlIEdpdEh1YiBzb3VyY2U6KioKCkZpcnN0LCBjbG9uZSBLZXJhcyB1c2lu
ZyBgZ2l0YDoKCmBgYHNoCmdpdCBjbG9uZSBodHRwczovL2dpdGh1Yi5jb20v
a2VyYXMtdGVhbS9rZXJhcy5naXQKYGBgCgogVGhlbiwgYGNkYCB0byB0aGUg
S2VyYXMgZm9sZGVyIGFuZCBydW4gdGhlIGluc3RhbGwgY29tbWFuZDoKYGBg
c2gKY2Qga2VyYXMKc3VkbyBweXRob24gc2V0dXAucHkgaW5zdGFsbApgYGAK
Ci0tLS0tLS0tLS0tLS0tLS0tLQoKCiMjIENvbmZpZ3VyaW5nIHlvdXIgS2Vy
YXMgYmFja2VuZAoKQnkgZGVmYXVsdCwgS2VyYXMgd2lsbCB1c2UgVGVuc29y
RmxvdyBhcyBpdHMgdGVuc29yIG1hbmlwdWxhdGlvbiBsaWJyYXJ5LiBbRm9s
bG93IHRoZXNlIGluc3RydWN0aW9uc10oaHR0cHM6Ly9rZXJhcy5pby9iYWNr
ZW5kLykgdG8gY29uZmlndXJlIHRoZSBLZXJhcyBiYWNrZW5kLgoKLS0tLS0t
LS0tLS0tLS0tLS0tCgoKIyMgU3VwcG9ydAoKWW91IGNhbiBhc2sgcXVlc3Rp
b25zIGFuZCBqb2luIHRoZSBkZXZlbG9wbWVudCBkaXNjdXNzaW9uOgoKLSBP
biB0aGUgW0tlcmFzIEdvb2dsZSBncm91cF0oaHR0cHM6Ly9ncm91cHMuZ29v
Z2xlLmNvbS9mb3J1bS8jIWZvcnVtL2tlcmFzLXVzZXJzKS4KLSBPbiB0aGUg
W0tlcmFzIFNsYWNrIGNoYW5uZWxdKGh0dHBzOi8va2VyYXN0ZWFtLnNsYWNr
LmNvbSkuIFVzZSBbdGhpcyBsaW5rXShodHRwczovL2tlcmFzLXNsYWNrLWF1
dG9qb2luLmhlcm9rdWFwcC5jb20vKSB0byByZXF1ZXN0IGFuIGludml0YXRp
b24gdG8gdGhlIGNoYW5uZWwuCgpZb3UgY2FuIGFsc28gcG9zdCAqKmJ1ZyBy
ZXBvcnRzIGFuZCBmZWF0dXJlIHJlcXVlc3RzKiogKG9ubHkpIGluIFtHaXRI
dWIgaXNzdWVzXShodHRwczovL2dpdGh1Yi5jb20va2VyYXMtdGVhbS9rZXJh
cy9pc3N1ZXMpLiBNYWtlIHN1cmUgdG8gcmVhZCBbb3VyIGd1aWRlbGluZXNd
KGh0dHBzOi8vZ2l0aHViLmNvbS9rZXJhcy10ZWFtL2tlcmFzL2Jsb2IvbWFz
dGVyL0NPTlRSSUJVVElORy5tZCkgZmlyc3QuCgoKLS0tLS0tLS0tLS0tLS0t
LS0tCgoKIyMgV2h5IHRoaXMgbmFtZSwgS2VyYXM/CgpLZXJhcyAozrrOrc+B
zrHPgikgbWVhbnMgX2hvcm5fIGluIEdyZWVrLiBJdCBpcyBhIHJlZmVyZW5j
ZSB0byBhIGxpdGVyYXJ5IGltYWdlIGZyb20gYW5jaWVudCBHcmVlayBhbmQg
TGF0aW4gbGl0ZXJhdHVyZSwgZmlyc3QgZm91bmQgaW4gdGhlIF9PZHlzc2V5
Xywgd2hlcmUgZHJlYW0gc3Bpcml0cyAoX09uZWlyb2lfLCBzaW5ndWxhciBf
T25laXJvc18pIGFyZSBkaXZpZGVkIGJldHdlZW4gdGhvc2Ugd2hvIGRlY2Vp
dmUgbWVuIHdpdGggZmFsc2UgdmlzaW9ucywgd2hvIGFycml2ZSB0byBFYXJ0
aCB0aHJvdWdoIGEgZ2F0ZSBvZiBpdm9yeSwgYW5kIHRob3NlIHdobyBhbm5v
dW5jZSBhIGZ1dHVyZSB0aGF0IHdpbGwgY29tZSB0byBwYXNzLCB3aG8gYXJy
aXZlIHRocm91Z2ggYSBnYXRlIG9mIGhvcm4uIEl0J3MgYSBwbGF5IG9uIHRo
ZSB3b3JkcyDOus6tz4HOsc+CIChob3JuKSAvIM66z4HOsc6vzr3PiSAoZnVs
ZmlsbCksIGFuZCDhvJDOu86tz4bOsc+CIChpdm9yeSkgLyDhvJDOu861z4bO
sc6vz4HOv868zrHOuSAoZGVjZWl2ZSkuCgpLZXJhcyB3YXMgaW5pdGlhbGx5
IGRldmVsb3BlZCBhcyBwYXJ0IG9mIHRoZSByZXNlYXJjaCBlZmZvcnQgb2Yg
cHJvamVjdCBPTkVJUk9TIChPcGVuLWVuZGVkIE5ldXJvLUVsZWN0cm9uaWMg
SW50ZWxsaWdlbnQgUm9ib3QgT3BlcmF0aW5nIFN5c3RlbSkuCgo+XyJPbmVp
cm9pIGFyZSBiZXlvbmQgb3VyIHVucmF2ZWxsaW5nIC0td2hvIGNhbiBiZSBz
dXJlIHdoYXQgdGFsZSB0aGV5IHRlbGw/IE5vdCBhbGwgdGhhdCBtZW4gbG9v
ayBmb3IgY29tZXMgdG8gcGFzcy4gVHdvIGdhdGVzIHRoZXJlIGFyZSB0aGF0
IGdpdmUgcGFzc2FnZSB0byBmbGVldGluZyBPbmVpcm9pOyBvbmUgaXMgbWFk
ZSBvZiBob3JuLCBvbmUgb2YgaXZvcnkuIFRoZSBPbmVpcm9pIHRoYXQgcGFz
cyB0aHJvdWdoIHNhd24gaXZvcnkgYXJlIGRlY2VpdGZ1bCwgYmVhcmluZyBh
IG1lc3NhZ2UgdGhhdCB3aWxsIG5vdCBiZSBmdWxmaWxsZWQ7IHRob3NlIHRo
YXQgY29tZSBvdXQgdGhyb3VnaCBwb2xpc2hlZCBob3JuIGhhdmUgdHJ1dGgg
YmVoaW5kIHRoZW0sIHRvIGJlIGFjY29tcGxpc2hlZCBmb3IgbWVuIHdobyBz
ZWUgdGhlbS4iXyBIb21lciwgT2R5c3NleSAxOS4gNTYyIGZmIChTaGV3cmlu
ZyB0cmFuc2xhdGlvbikuCgotLS0tLS0tLS0tLS0tLS0tLS0K
",,"ZGlzdDogdHJ1c3R5Cmxhbmd1YWdlOiBweXRob24KY2FjaGU6CiAgZGlyZWN0
b3JpZXM6CiAgICAtICRIT01FLy50aGVhbm8KbWF0cml4OgogICAgaW5jbHVk
ZToKICAgICAgICAtIHB5dGhvbjogMy42CiAgICAgICAgICBlbnY6IEtFUkFT
X0JBQ0tFTkQ9dGVuc29yZmxvdyBNT0RFPUlOVEVHUkFUSU9OX1RFU1RTIFBJ
TD1QaWxsb3cKICAgICAgICAtIHB5dGhvbjogMy42CiAgICAgICAgICBlbnY6
IEtFUkFTX0JBQ0tFTkQ9dGVuc29yZmxvdyBNT0RFPVBFUDhfRE9DIFBJTD1Q
aWxsb3cKICAgICAgICAtIHB5dGhvbjogMy42CiAgICAgICAgICBlbnY6IEtF
UkFTX0JBQ0tFTkQ9dGVuc29yZmxvdyBNT0RFPUFQSQogICAgICAgIC0gcHl0
aG9uOiAyLjcKICAgICAgICAgIGVudjogS0VSQVNfQkFDS0VORD10ZW5zb3Jm
bG93IE1PREU9VEYxCiAgICAgICAgLSBweXRob246IDMuNgogICAgICAgICAg
ZW52OiBLRVJBU19CQUNLRU5EPXRlbnNvcmZsb3cgTU9ERT1URjEKICAgICAg
ICAtIHB5dGhvbjogMi43CiAgICAgICAgICBlbnY6IEtFUkFTX0JBQ0tFTkQ9
dGVuc29yZmxvdyBNT0RFPVRGMgogICAgICAgIC0gcHl0aG9uOiAzLjYKICAg
ICAgICAgIGVudjogS0VSQVNfQkFDS0VORD10ZW5zb3JmbG93IE1PREU9VEYy
CiAgICAgICAgLSBweXRob246IDIuNwogICAgICAgICAgZW52OiBLRVJBU19C
QUNLRU5EPXRoZWFubyBUSEVBTk9fRkxBR1M9b3B0aW1pemVyPWZhc3RfY29t
cGlsZSBNS0w9Im1rbCBta2wtc2VydmljZSIgUlVOX09OTFlfQkFDS0VORF9U
RVNUUz0xCiAgICAgICAgLSBweXRob246IDMuNgogICAgICAgICAgZW52OiBL
RVJBU19CQUNLRU5EPXRoZWFubyBUSEVBTk9fRkxBR1M9b3B0aW1pemVyPWZh
c3RfY29tcGlsZSBNS0w9Im1rbCBta2wtc2VydmljZSIKICAgICAgICAtIHB5
dGhvbjogMi43CiAgICAgICAgICBlbnY6IEtFUkFTX0JBQ0tFTkQ9Y250ayBQ
WVRIT05XQVJOSU5HUz1pZ25vcmUgUlVOX09OTFlfQkFDS0VORF9URVNUUz0x
CiAgICAgICAgLSBweXRob246IDMuNgogICAgICAgICAgZW52OiBLRVJBU19C
QUNLRU5EPWNudGsgUFlUSE9OV0FSTklOR1M9aWdub3JlCmluc3RhbGw6CiAg
IyBjb2RlIGJlbG93IGlzIHRha2VuIGZyb20gaHR0cDovL2NvbmRhLnB5ZGF0
YS5vcmcvZG9jcy90cmF2aXMuaHRtbAogICMgV2UgZG8gdGhpcyBjb25kaXRp
b25hbGx5IGJlY2F1c2UgaXQgc2F2ZXMgdXMgc29tZSBkb3dubG9hZGluZyBp
ZiB0aGUKICAjIHZlcnNpb24gaXMgdGhlIHNhbWUuCiAgLSBpZiBbWyAiJFRS
QVZJU19QWVRIT05fVkVSU0lPTiIgPT0gIjIuNyIgXV07IHRoZW4KICAgICAg
d2dldCBodHRwczovL3JlcG8uY29udGludXVtLmlvL21pbmljb25kYS9NaW5p
Y29uZGEtbGF0ZXN0LUxpbnV4LXg4Nl82NC5zaCAtTyBtaW5pY29uZGEuc2g7
CiAgICBlbHNlCiAgICAgIHdnZXQgaHR0cHM6Ly9yZXBvLmNvbnRpbnV1bS5p
by9taW5pY29uZGEvTWluaWNvbmRhMy1sYXRlc3QtTGludXgteDg2XzY0LnNo
IC1PIG1pbmljb25kYS5zaDsKICAgIGZpCiAgLSBiYXNoIG1pbmljb25kYS5z
aCAtYiAtcCAkSE9NRS9taW5pY29uZGEKICAtIGV4cG9ydCBQQVRIPSIkSE9N
RS9taW5pY29uZGEvYmluOiRQQVRIIgogIC0gaGFzaCAtcgogIC0gY29uZGEg
Y29uZmlnIC0tc2V0IGFsd2F5c195ZXMgeWVzIC0tc2V0IGNoYW5nZXBzMSBu
bwogIC0gY29uZGEgdXBkYXRlIC1xIGNvbmRhCiAgIyBVc2VmdWwgZm9yIGRl
YnVnZ2luZyBhbnkgaXNzdWVzIHdpdGggY29uZGEKICAtIGNvbmRhIGluZm8g
LWEKCiAgLSB0cmF2aXNfcmV0cnkgY29uZGEgY3JlYXRlIC1xIC1uIHRlc3Qt
ZW52aXJvbm1lbnQgcHl0aG9uPSRUUkFWSVNfUFlUSE9OX1ZFUlNJT04KICAt
IHNvdXJjZSBhY3RpdmF0ZSB0ZXN0LWVudmlyb25tZW50CgogIC0gdHJhdmlz
X3JldHJ5IHBpcCBpbnN0YWxsIC0tb25seS1iaW5hcnk9bnVtcHksc2NpcHks
cGFuZGFzIG51bXB5IG5vc2Ugc2NpcHkgaDVweSB0aGVhbm8gcHl0ZXN0IHB5
dGVzdC1wZXA4IHBhbmRhcyAtLXByb2dyZXNzLWJhciBvZmYKICAtIHBpcCBp
bnN0YWxsIGtlcmFzX2FwcGxpY2F0aW9ucyBrZXJhc19wcmVwcm9jZXNzaW5n
IC0tcHJvZ3Jlc3MtYmFyIG9mZgoKICAjIHNldCBsaWJyYXJ5IHBhdGgKICAt
IGV4cG9ydCBMRF9MSUJSQVJZX1BBVEg9JEhPTUUvbWluaWNvbmRhL2VudnMv
dGVzdC1lbnZpcm9ubWVudC9saWIvOiRMRF9MSUJSQVJZX1BBVEgKCiAgICAj
IGluc3RhbGwgcHlkb3QgZm9yIHZpc3VhbGl6YXRpb24gdGVzdHMKICAtIHRy
YXZpc19yZXRyeSBjb25kYSBpbnN0YWxsIC1xICRNS0wgcHlkb3QgZ3JhcGh2
aXogJFBJTAoKICAtIHBpcCBpbnN0YWxsIC1lIC5bdGVzdHNdIC0tcHJvZ3Jl
c3MtYmFyIG9mZgoKICAjIGluc3RhbGwgVGVuc29yRmxvdyAoQ1BVIHZlcnNp
b24pLgogIC0gaWYgW1sgIiRNT0RFIiA9PSAiVEYyIiBdXTsgdGhlbgogICAg
cGlwIGluc3RhbGwgdGVuc29yZmxvdz09Mi4wLjAgLS1wcm9ncmVzcy1iYXIg
b2ZmOwogICAgZWxzZQogICAgcGlwIGluc3RhbGwgdGVuc29yZmxvdz09MS4x
NC4wIC0tcHJvZ3Jlc3MtYmFyIG9mZjsKICAgIGZpCgogICMgaW5zdGFsbCBj
bnRrCiAgLSBpZiBbWyAiJEtFUkFTX0JBQ0tFTkQiID09ICJjbnRrIiBdXSB8
fCBbWyAiJE1PREUiID09ICJQRVA4X0RPQyIgXV0gfHwgW1sgIiRNT0RFIiA9
PSAiQVBJIiBdXTsgdGhlbgogICAgICAuLy50cmF2aXMvaW5zdGFsbF9jbnRr
LnNoOwogICAgZmkKCiAgIyBSZW1vdmUgdGhlIGN1cnJlbnQgYmFja2VuZCBm
cm9tIHRoZSBjb3ZlcmFnZSBleGNsdXNpb24uCiAgLSBzZWQgLWkgIlwva2Vy
YXNcL2JhY2tlbmRcLyR7S0VSQVNfQkFDS0VORH1fYmFja2VuZC5weS9kIiAu
Y292ZXJhZ2VyYwoKICAjIGluc3RhbGwgbWtkb2NzCiAgLSBwaXAgaW5zdGFs
bCBta2RvY3MgLS1wcm9ncmVzcy1iYXIgb2ZmCgogICMgaW5zdGFsbCBweXV4
CiAgLSBwaXAgaW5zdGFsbCBweXV4CgojIGNvbW1hbmQgdG8gcnVuIHRlc3Rz
CnNjcmlwdDoKICAtIGV4cG9ydCBNS0xfVEhSRUFESU5HX0xBWUVSPSJHTlUi
CiAgIyBydW4ga2VyYXMgYmFja2VuZCBpbml0IHRvIGluaXRpYWxpemUgYmFj
a2VuZCBjb25maWcKICAtIHB5dGhvbiAtYyAiaW1wb3J0IGtlcmFzLmJhY2tl
bmQiCiAgIyBjcmVhdGUgZGF0YXNldCBkaXJlY3RvcnkgdG8gYXZvaWQgY29u
Y3VycmVudCBkaXJlY3RvcnkgY3JlYXRpb24gYXQgcnVudGltZQogIC0gbWtk
aXIgfi8ua2VyYXMvZGF0YXNldHMKICAjIHNldCB1cCBrZXJhcyBiYWNrZW5k
CiAgLSBzZWQgLWkgLWUgJ3MvImJhY2tlbmQiOltbOnNwYWNlOl1dKiJbXiJd
Ki8iYmFja2VuZCI6XCAiJyRLRVJBU19CQUNLRU5EJy9nJyB+Ly5rZXJhcy9r
ZXJhcy5qc29uOwogIC0gZWNobyAtZSAiUnVubmluZyB0ZXN0cyB3aXRoIHRo
ZSBmb2xsb3dpbmcgY29uZmlnOlxuJChjYXQgfi8ua2VyYXMva2VyYXMuanNv
bikiCiAgLSBpZiBbWyAiJE1PREUiID09ICJJTlRFR1JBVElPTl9URVNUUyIg
XV07IHRoZW4KICAgICAgUFlUSE9OUEFUSD0kUFdEOiRQWVRIT05QQVRIIHB5
LnRlc3QgdGVzdHMvaW50ZWdyYXRpb25fdGVzdHM7CiAgICBlbGlmIFtbICIk
TU9ERSIgPT0gIlBFUDhfRE9DIiBdXTsgdGhlbgogICAgICBQWVRIT05QQVRI
PSRQV0Q6JFBZVEhPTlBBVEggcHkudGVzdCAtLXBlcDggLW0gcGVwOCAtbjAg
JiYgcHkudGVzdCB0ZXN0cy9kb2NzOwogICAgZWxpZiBbWyAiJE1PREUiID09
ICJBUEkiIF1dOyB0aGVuCiAgICAgIFBZVEhPTlBBVEg9JFBXRDokUFlUSE9O
UEFUSCBwaXAgaW5zdGFsbCBnaXQrZ2l0Oi8vd3d3LmdpdGh1Yi5jb20va2Vy
YXMtdGVhbS9rZXJhcy5naXQgJiYgcHl0aG9uIHVwZGF0ZV9hcGkucHkgJiYg
cGlwIGluc3RhbGwgLWUgLlt0ZXN0c10gLS1wcm9ncmVzcy1iYXIgb2ZmICYm
IHB5LnRlc3QgdGVzdHMvdGVzdF9hcGkucHk7CiAgICBlbGlmIFtbICIkUlVO
X09OTFlfQkFDS0VORF9URVNUUyIgPT0gIjEiIF1dOyB0aGVuCiAgICAgIFBZ
VEhPTlBBVEg9JFBXRDokUFlUSE9OUEFUSCBweS50ZXN0ICB0ZXN0cy9rZXJh
cy9iYWNrZW5kLzsKICAgIGVsc2UKICAgICAgUFlUSE9OUEFUSD0kUFdEOiRQ
WVRIT05QQVRIIHB5LnRlc3QgdGVzdHMvIC0taWdub3JlPXRlc3RzL2ludGVn
cmF0aW9uX3Rlc3RzIC0taWdub3JlPXRlc3RzL2RvY3MgLS1pZ25vcmU9dGVz
dHMva2VyYXMvbGVnYWN5L2xheWVyc190ZXN0LnB5IC0taWdub3JlPXRlc3Rz
L3Rlc3RfYXBpLnB5IC0tY292LWNvbmZpZyAuY292ZXJhZ2VyYyAtLWNvdj1r
ZXJhcyB0ZXN0cy87CiAgICBmaQo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'django',4164482,b'The Web framework for perfectionists with deadlines.',b'Python',238,45185,,45185,False,b'https://api.github.com/repos/django/django/forks',"PT09PT09CkRqYW5nbwo9PT09PT0KCkRqYW5nbyBpcyBhIGhpZ2gtbGV2ZWwg
UHl0aG9uIFdlYiBmcmFtZXdvcmsgdGhhdCBlbmNvdXJhZ2VzIHJhcGlkIGRl
dmVsb3BtZW50CmFuZCBjbGVhbiwgcHJhZ21hdGljIGRlc2lnbi4gVGhhbmtz
IGZvciBjaGVja2luZyBpdCBvdXQuCgpBbGwgZG9jdW1lbnRhdGlvbiBpcyBp
biB0aGUgImBgZG9jc2BgIiBkaXJlY3RvcnkgYW5kIG9ubGluZSBhdApodHRw
czovL2RvY3MuZGphbmdvcHJvamVjdC5jb20vZW4vc3RhYmxlLy4gSWYgeW91
J3JlIGp1c3QgZ2V0dGluZyBzdGFydGVkLApoZXJlJ3MgaG93IHdlIHJlY29t
bWVuZCB5b3UgcmVhZCB0aGUgZG9jczoKCiogRmlyc3QsIHJlYWQgYGBkb2Nz
L2ludHJvL2luc3RhbGwudHh0YGAgZm9yIGluc3RydWN0aW9ucyBvbiBpbnN0
YWxsaW5nIERqYW5nby4KCiogTmV4dCwgd29yayB0aHJvdWdoIHRoZSB0dXRv
cmlhbHMgaW4gb3JkZXIgKGBgZG9jcy9pbnRyby90dXRvcmlhbDAxLnR4dGBg
LAogIGBgZG9jcy9pbnRyby90dXRvcmlhbDAyLnR4dGBgLCBldGMuKS4KCiog
SWYgeW91IHdhbnQgdG8gc2V0IHVwIGFuIGFjdHVhbCBkZXBsb3ltZW50IHNl
cnZlciwgcmVhZAogIGBgZG9jcy9ob3d0by9kZXBsb3ltZW50L2luZGV4LnR4
dGBgIGZvciBpbnN0cnVjdGlvbnMuCgoqIFlvdSdsbCBwcm9iYWJseSB3YW50
IHRvIHJlYWQgdGhyb3VnaCB0aGUgdG9waWNhbCBndWlkZXMgKGluIGBgZG9j
cy90b3BpY3NgYCkKICBuZXh0OyBmcm9tIHRoZXJlIHlvdSBjYW4ganVtcCB0
byB0aGUgSE9XVE9zIChpbiBgYGRvY3MvaG93dG9gYCkgZm9yIHNwZWNpZmlj
CiAgcHJvYmxlbXMsIGFuZCBjaGVjayBvdXQgdGhlIHJlZmVyZW5jZSAoYGBk
b2NzL3JlZmBgKSBmb3IgZ29yeSBkZXRhaWxzLgoKKiBTZWUgYGBkb2NzL1JF
QURNRWBgIGZvciBpbnN0cnVjdGlvbnMgb24gYnVpbGRpbmcgYW4gSFRNTCB2
ZXJzaW9uIG9mIHRoZSBkb2NzLgoKRG9jcyBhcmUgdXBkYXRlZCByaWdvcm91
c2x5LiBJZiB5b3UgZmluZCBhbnkgcHJvYmxlbXMgaW4gdGhlIGRvY3MsIG9y
IHRoaW5rCnRoZXkgc2hvdWxkIGJlIGNsYXJpZmllZCBpbiBhbnkgd2F5LCBw
bGVhc2UgdGFrZSAzMCBzZWNvbmRzIHRvIGZpbGwgb3V0IGEKdGlja2V0IGhl
cmU6IGh0dHBzOi8vY29kZS5kamFuZ29wcm9qZWN0LmNvbS9uZXd0aWNrZXQK
ClRvIGdldCBtb3JlIGhlbHA6CgoqIEpvaW4gdGhlIGBgI2RqYW5nb2BgIGNo
YW5uZWwgb24gaXJjLmZyZWVub2RlLm5ldC4gTG90cyBvZiBoZWxwZnVsIHBl
b3BsZSBoYW5nCiAgb3V0IHRoZXJlLiBTZWUgaHR0cHM6Ly9lbi53aWtpcGVk
aWEub3JnL3dpa2kvV2lraXBlZGlhOklSQy9UdXRvcmlhbCBpZiB5b3UncmUK
ICBuZXcgdG8gSVJDLgoKKiBKb2luIHRoZSBkamFuZ28tdXNlcnMgbWFpbGlu
ZyBsaXN0LCBvciByZWFkIHRoZSBhcmNoaXZlcywgYXQKICBodHRwczovL2dy
b3Vwcy5nb29nbGUuY29tL2dyb3VwL2RqYW5nby11c2Vycy4KClRvIGNvbnRy
aWJ1dGUgdG8gRGphbmdvOgoKKiBDaGVjayBvdXQgaHR0cHM6Ly9kb2NzLmRq
YW5nb3Byb2plY3QuY29tL2VuL2Rldi9pbnRlcm5hbHMvY29udHJpYnV0aW5n
LyBmb3IKICBpbmZvcm1hdGlvbiBhYm91dCBnZXR0aW5nIGludm9sdmVkLgoK
VG8gcnVuIERqYW5nbydzIHRlc3Qgc3VpdGU6CgoqIEZvbGxvdyB0aGUgaW5z
dHJ1Y3Rpb25zIGluIHRoZSAiVW5pdCB0ZXN0cyIgc2VjdGlvbiBvZgogIGBg
ZG9jcy9pbnRlcm5hbHMvY29udHJpYnV0aW5nL3dyaXRpbmctY29kZS91bml0
LXRlc3RzLnR4dGBgLCBwdWJsaXNoZWQgb25saW5lIGF0CiAgaHR0cHM6Ly9k
b2NzLmRqYW5nb3Byb2plY3QuY29tL2VuL2Rldi9pbnRlcm5hbHMvY29udHJp
YnV0aW5nL3dyaXRpbmctY29kZS91bml0LXRlc3RzLyNydW5uaW5nLXRoZS11
bml0LXRlc3RzCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
