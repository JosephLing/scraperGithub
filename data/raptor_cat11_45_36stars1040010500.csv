name,id,description,language,open_issues,stargazers_count,topics,watchers,fork,forks_url,readme,config,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'react-bits',76931209,"b'\xe2\x9c\xa8 React patterns, techniques, tips and tricks \xe2\x9c\xa8'",,10,10493,,10493,False,b'https://api.github.com/repos/vasanthk/react-bits/forks',"IyBbUmVhY3QgQml0c10oaHR0cHM6Ly92YXNhbnRoay5naXRib29rcy5pby9y
ZWFjdC1iaXRzKQoKQSBjb21waWxhdGlvbiBvZiBSZWFjdCBQYXR0ZXJucywg
dGVjaG5pcXVlcywgdGlwcyBhbmQgdHJpY2tzLgoKKipHaXRib29rIGZvcm1h
dCoqOiBodHRwczovL3Zhc2FudGhrLmdpdGJvb2tzLmlvL3JlYWN0LWJpdHMK
CioqR2l0aHViIHJlcG8qKjogaHR0cHM6Ly9naXRodWIuY29tL3Zhc2FudGhr
L3JlYWN0LWJpdHMKCj4gWW91ciBjb250cmlidXRpb25zIGFyZSBoZWFydGls
eSDimaEgd2VsY29tZS4gKOKcv+KXoOKAv+KXoCkKCj4gKipUcmFuc2xhdGlv
bnMgYnkgY29tbXVuaXR5OioqCj4gLSDkuK3mlofniYggKENoaW5lc2UpOiBb
cmVhY3QtYml0cy1jbl0oaHR0cHM6Ly9naXRodWIuY29tL2hhdGVvbmlvbi9y
ZWFjdC1iaXRzLUNOKQoKCi0gRGVzaWduIFBhdHRlcm5zIGFuZCBUZWNobmlx
dWVzCiAgLSBbQ29uZGl0aW9uYWwgaW4gSlNYXSguL3BhdHRlcm5zLzE4LmNv
bmRpdGlvbmFscy1pbi1qc3gubWQpCiAgLSBbQXN5bmMgTmF0dXJlIE9mIHNl
dFN0YXRlKCldKC4vcGF0dGVybnMvMTkuYXN5bmMtbmF0dXJlLW9mLXNldFN0
YXRlLm1kKQogIC0gW0RlcGVuZGVuY3kgSW5qZWN0aW9uXSguL3BhdHRlcm5z
LzIwLmRlcGVuZGVuY3ktaW5qZWN0aW9uLm1kKQogIC0gW0NvbnRleHQgV3Jh
cHBlcl0oLi9wYXR0ZXJucy8yMS5jb250ZXh0LXdyYXBwZXIubWQpCiAgLSBb
RXZlbnQgSGFuZGxlcnNdKC4vcGF0dGVybnMvMjIuZXZlbnQtaGFuZGxlcnMu
bWQpCiAgLSBbRmx1eCBQYXR0ZXJuXSguL3BhdHRlcm5zLzIzLmZsdXgtcGF0
dGVybi5tZCkKICAtIFtPbmUgV2F5IERhdGEgRmxvd10oLi9wYXR0ZXJucy8y
NC5vbmUtd2F5LWRhdGEtZmxvdy5tZCkKICAtIFtQcmVzZW50YXRpb25hbCB2
cyBDb250YWluZXJdKC4vcGF0dGVybnMvMjUucHJlc2VudGF0aW9uYWwtdnMt
Y29udGFpbmVyLm1kKQogIC0gW1RoaXJkIFBhcnR5IEludGVncmF0aW9uXSgu
L3BhdHRlcm5zLzI2LnRoaXJkLXBhcnR5LWludGVncmF0aW9uLm1kKQogIC0g
W1Bhc3NpbmcgRnVuY3Rpb24gVG8gc2V0U3RhdGUoKV0oLi9wYXR0ZXJucy8y
Ny5wYXNzaW5nLWZ1bmN0aW9uLXRvLXNldFN0YXRlLm1kKQogIC0gW0RlY29y
YXRvcnNdKC4vcGF0dGVybnMvMjguZGVjb3JhdG9ycy5tZCkKICAtIFtGZWF0
dXJlIEZsYWdzXSguL3BhdHRlcm5zLzI5LmZlYXR1cmUtZmxhZ3MtdXNpbmct
cmVkdXgubWQpCiAgLSBbQ29tcG9uZW50IFN3aXRjaF0oLi9wYXR0ZXJucy8z
MC5jb21wb25lbnQtc3dpdGNoLm1kKQogIC0gW1JlYWNoaW5nIEludG8gQSBD
b21wb25lbnRdKC4vcGF0dGVybnMvMzEucmVhY2hpbmctaW50by1hLWNvbXBv
bmVudC5tZCkKICAtIFtMaXN0IENvbXBvbmVudHNdKC4vcGF0dGVybnMvMzIu
bGlzdC1jb21wb25lbnRzLm1kKQogIC0gW0Zvcm1hdCBUZXh0IHZpYSBDb21w
b25lbnRdKC4vcGF0dGVybnMvMzMuZm9ybWF0LXRleHQtdmlhLWNvbXBvbmVu
dC5tZCkKICAtIFtTaGFyZSBUcmFja2luZyBMb2dpY10oLi9wYXR0ZXJucy8z
NC5zaGFyZS10cmFja2luZy1sb2dpYy5tZCkKLSBBbnRpLVBhdHRlcm5zCiAg
LSBbSW50cm9kdWN0aW9uXSguL2FudGktcGF0dGVybnMvUkVBRE1FLm1kKQog
IC0gW1Byb3BzIEluIEluaXRpYWwgU3RhdGVdKC4vYW50aS1wYXR0ZXJucy8w
MS5wcm9wcy1pbi1pbml0aWFsLXN0YXRlLm1kKQogIC0gW2ZpbmRET01Ob2Rl
KCldKC4vYW50aS1wYXR0ZXJucy8wMi5maW5kRE9NTm9kZS5tZCkKICAtIFtN
aXhpbnNdKC4vYW50aS1wYXR0ZXJucy8wMy5taXhpbnMubWQpCiAgLSBbc2V0
U3RhdGUoKSBpbiBjb21wb25lbnRXaWxsTW91bnQoKV0oLi9hbnRpLXBhdHRl
cm5zLzA0LnNldFN0YXRlLWluLWNvbXBvbmVudFdpbGxNb3VudC5tZCkKICAt
IFtNdXRhdGluZyBTdGF0ZV0oLi9hbnRpLXBhdHRlcm5zLzA1Lm11dGF0aW5n
LXN0YXRlLm1kKQogIC0gW1VzaW5nIEluZGV4ZXMgYXMgS2V5XSguL2FudGkt
cGF0dGVybnMvMDYudXNpbmctaW5kZXhlcy1hcy1rZXkubWQpCiAgLSBbU3By
ZWFkaW5nIFByb3BzIG9uIERPTSBlbGVtZW50c10oLi9hbnRpLXBhdHRlcm5z
LzA3LnNwcmVhZGluZy1wcm9wcy1kb20ubWQpCi0gSGFuZGxpbmcgVVggVmFy
aWF0aW9ucwogIC0gW0ludHJvZHVjdGlvbl0oLi91eC12YXJpYXRpb25zL1JF
QURNRS5tZCkKICAtIFtDb21wb3NpbmcgVVggVmFyaWF0aW9uc10oLi91eC12
YXJpYXRpb25zLzAxLmNvbXBvc2luZy12YXJpYXRpb25zLm1kKQogIC0gW1Rv
Z2dsZSBVSSBFbGVtZW50c10oLi91eC12YXJpYXRpb25zLzAyLnRvZ2dsZS11
aS1lbGVtZW50cy5tZCkKICAtIFtIT0MgZm9yIEZlYXR1cmUgVG9nZ2xlc10o
Li91eC12YXJpYXRpb25zLzAzLkhPQy1mZWF0dXJlLXRvZ2dsZXMubWQpCiAg
LSBbSE9DIHByb3BzIHByb3h5XSguL3V4LXZhcmlhdGlvbnMvMDQuSE9DLXBy
b3BzLXByb3h5Lm1kKQogIC0gW1dyYXBwZXIgQ29tcG9uZW50c10oLi91eC12
YXJpYXRpb25zLzA1LndyYXBwZXItY29tcG9uZW50cy5tZCkKICAtIFtEaXNw
bGF5IE9yZGVyIFZhcmlhdGlvbnNdKC4vdXgtdmFyaWF0aW9ucy8wNi5kaXNw
bGF5LW9yZGVyLXZhcmlhdGlvbnMubWQpCi0gUGVyZiBUaXBzCiAgLSBbSW50
cm9kdWN0aW9uXSguL3BlcmYtdGlwcy9SRUFETUUubWQpCiAgLSBbc2hvdWxk
Q29tcG9uZW50VXBkYXRlKCkgY2hlY2tdKC4vcGVyZi10aXBzLzAxLnNob3Vs
ZENvbXBvbmVudFVwZGF0ZS1jaGVjay5tZCkKICAtIFtVc2luZyBQdXJlIENv
bXBvbmVudHNdKC4vcGVyZi10aXBzLzAyLnB1cmUtY29tcG9uZW50Lm1kKQog
IC0gW1VzaW5nIHJlc2VsZWN0XSguL3BlcmYtdGlwcy8wMy5yZXNlbGVjdC5t
ZCkKLSBTdHlsaW5nCiAgLSBbSW50cm9kdWN0aW9uXSguL3N0eWxpbmcvUkVB
RE1FLm1kKQogIC0gW1N0YXRlbGVzcyBVSSBDb21wb25lbnRzXSguL3N0eWxp
bmcvMDEuc3RhdGVsZXNzLXVpLWNvbXBvbmVudHMubWQpCiAgLSBbU3R5bGVz
IE1vZHVsZV0oLi9zdHlsaW5nLzAyLnN0eWxlcy1tb2R1bGUubWQpCiAgLSBb
U3R5bGUgRnVuY3Rpb25zXSguL3N0eWxpbmcvMDMuc3R5bGUtZnVuY3Rpb25z
Lm1kKQogIC0gW05QTSBNb2R1bGVzXSguL3N0eWxpbmcvMDQudXNpbmctbnBt
LW1vZHVsZXMubWQpCiAgLSBbQmFzZSBDb21wb25lbnRdKC4vc3R5bGluZy8w
NS5iYXNlLWNvbXBvbmVudC5tZCkKICAtIFtMYXlvdXQgQ29tcG9uZW50XSgu
L3N0eWxpbmcvMDYubGF5b3V0LWNvbXBvbmVudC5tZCkKICAtIFtUeXBvZ3Jh
cGh5IENvbXBvbmVudF0oLi9zdHlsaW5nLzA3LnR5cG9ncmFwaHktY29tcG9u
ZW50Lm1kKQogIC0gW0hPQyBmb3IgU3R5bGluZ10oLi9zdHlsaW5nLzA4LkhP
Qy1mb3Itc3R5bGluZy5tZCkKLSBHb3RjaGFzCiAgLSBbSW50cm9kdWN0aW9u
XSguL2dvdGNoYXMvUkVBRE1FLm1kKQogIC0gW1B1cmUgcmVuZGVyIGNoZWNr
c10oLi9nb3RjaGFzLzAxLnB1cmUtcmVuZGVyLWNoZWNrcy5tZCkKICAtIFtT
eW50aGV0aWMgRXZlbnRzXSguL2dvdGNoYXMvMDIuc3ludGhldGljLWV2ZW50
cy5tZCkKLSBbUmVsYXRlZCBMaW5rc10oLi9SRUFESU5HUy5tZCkK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'codis',25804514,b'Proxy based Redis cluster solution supporting pipeline and scaling dynamically',b'Go',241,10491,,10491,False,b'https://api.github.com/repos/CodisLabs/codis/forks',"PGltZyBzcmM9ImRvYy9waWN0dXJlcy9sb2dvLTMucG5nIiBoZWlnaHQ9ODA+
PC9pbWc+CgpbIVtHaXR0ZXJdKGh0dHBzOi8vYmFkZ2VzLmdpdHRlci5pbS9K
b2luJTIwQ2hhdC5zdmcpXShodHRwczovL2dpdHRlci5pbS9Db2Rpc0xhYnMv
Y29kaXM/dXRtX3NvdXJjZT1iYWRnZSZ1dG1fbWVkaXVtPWJhZGdlJnV0bV9j
YW1wYWlnbj1wci1iYWRnZSZ1dG1fY29udGVudD1iYWRnZSkKWyFbQnVpbGQg
U3RhdHVzXShodHRwczovL3RyYXZpcy1jaS5vcmcvQ29kaXNMYWJzL2NvZGlz
LnN2ZyldKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9Db2Rpc0xhYnMvY29kaXMp
CgpDb2RpcyBpcyBhIHByb3h5IGJhc2VkIGhpZ2ggcGVyZm9ybWFuY2UgUmVk
aXMgY2x1c3RlciBzb2x1dGlvbiB3cml0dGVuIGluIEdvLiBJdCBpcyBwcm9k
dWN0aW9uLXJlYWR5IGFuZCB3aWRlbHkgdXNlZCBhdCBbd2FuZG91amlhLmNv
bV0oaHR0cDovL3dhbmRvdWppYS5jb20pIGFuZCBtYW55IGNvbXBhbmllcy4g
WW91IGNhbiBzZWUgW0NvZGlzIFJlbGVhc2VzXShodHRwczovL2dpdGh1Yi5j
b20vQ29kaXNMYWJzL2NvZGlzL3JlbGVhc2VzKSBmb3IgbGF0ZXN0IGFuZCBt
b3N0IHN0YWJsZSByZWFsZWFzZXMuCgojIyBEb25hdGlvbgpEb25hdGUgaWYg
eW91IHdhbnQgdG8gaGVscCB1cyBtYWludGFpbmluZyB0aGlzIHByb2plY3Qu
IFRoYW5rIHlvdSEKW1NlZSB0aGlzIGlzc3VlIGZvciBkZXRhaWxzXShodHRw
czovL2dpdGh1Yi5jb20vQ29kaXNMYWJzL2NvZGlzL2lzc3Vlcy85NzYpCgoj
IyBDb21wYXJlZCB3aXRoIFR3ZW1wcm94eSBhbmQgUmVkaXMgQ2x1c3Rlcgo8
dGFibGU+Cjx0cj48dGg+PC90aD48dGg+Q29kaXM8L3RoPjx0aD5Ud2VtcHJv
eHk8L3RoPjx0aD5SZWRpcyBDbHVzdGVyPC90aD48L3RyPgo8dHI+PHRkPnJl
c2hhcmRpbmcgd2l0aG91dCByZXN0YXJ0aW5nIGNsdXN0ZXI8L3RkPjx0ZD5Z
ZXM8L3RkPjx0ZD5ObzwvdGQ+PHRkPlllczwvdGQ+PC90cj4KPHRyPjx0ZD5w
aXBlbGluZTwvdGQ+PHRkPlllczwvdGQ+PHRkPlllczwvdGQ+PHRkPk5vPC90
ZD48L3RyPgo8dHI+PHRkPmhhc2ggdGFncyBmb3IgbXVsdGkta2V5IG9wZXJh
dGlvbnM8L3RkPjx0ZD5ZZXM8L3RkPjx0ZD5ZZXM8L3RkPjx0ZD5ZZXM8L3Rk
PjwvdHI+Cjx0cj48dGQ+bXVsdGkta2V5IG9wZXJhdGlvbnMgd2hpbGUgcmVz
aGFyZGluZzwvdGQ+PHRkPlllczwvdGQ+PHRkPi08L3RkPjx0ZD5Obyg8YSBo
cmVmPSJodHRwOi8vcmVkaXMuaW8vdG9waWNzL2NsdXN0ZXItc3BlYyNtdWx0
aXBsZS1rZXlzLW9wZXJhdGlvbnMiPmRldGFpbHM8L2E+KTwvdGQ+PC90cj4K
PHRyPjx0ZD5SZWRpcyBjbGllbnRzIHN1cHBvcnRpbmc8L3RkPjx0ZD5Bbnkg
Y2xpZW50czwvdGQ+PHRkPkFueSBjbGllbnRzPC90ZD48dGQ+Q2xpZW50cyBo
YXZlIHRvIHN1cHBvcnQgY2x1c3RlciBwcm90b2NvbDwvdGQ+PC90cj4KPC90
YWJsZT4KIlJlc2hhcmRpbmciIG1lYW5zIG1pZ3JhdGluZyB0aGUgZGF0YSBp
biBvbmUgc2xvdCBmcm9tIG9uZSByZWRpcyBzZXJ2ZXIgdG8gYW5vdGhlciwg
dXN1YWxseSBoYXBwZW5zIHdoaWxlIGluY3JlYXNpbmcvZGVjcmVhc2luZyB0
aGUgbnVtYmVyIG9mIHJlZGlzIHNlcnZlcnMuCgojIyBPdGhlciBGZWF0dXJl
cwoqIEdVSSB3ZWJzaXRlIGRhc2hib2FyZCAmIGFkbWluIHRvb2xzCiogU3Vw
cG9ydHMgbW9zdCBvZiBSZWRpcyBjb21tYW5kcywgRnVsbHkgY29tcGF0aWJs
ZSB3aXRoIFR3ZW1wcm94eShodHRwczovL2dpdGh1Yi5jb20vdHdpdHRlci90
d2VtcHJveHkpCiogUHJveGllcyBjYW4gcmVnaXN0ZXIgb24gemsvZXRjZCwg
Y2xpZW50cyBjYW4gYXZvaWQgZGVhZCBwcm94aWVzLCBzZWUgIkhpZ2ggQXZh
aWxhYmlsaXR5IiBzZWN0aW9uLgoKIyMgVHV0b3JpYWwKClvnroDkvZPkuK3m
loddKGRvYy90dXRvcmlhbF96aC5tZCkKW0VuZ2xpc2ggKFdJUCkgXShkb2Mv
dHV0b3JpYWxfZW4ubWQpCgojIyBGQVEKClvnroDkvZPkuK3mloddKGRvYy9G
QVFfemgubWQpCltFbmdsaXNoIChXSVApIF0oRkFRX2VuLm1kKQoKIyMgSGln
aCBBdmFpbGFiaWxpdHkKClvnroDkvZPkuK3mloddKGRvYy90dXRvcmlhbF96
aC5tZCMzLWpvZGlzLeS4ji1oYSkKW0VuZ2xpc2ggKFdJUCkgXShkb2MvdHV0
b3JpYWxfZW4ubWQjaGEpCgojIyBBcmNoaXRlY3R1cmUKCiFbYXJjaGl0ZWN0
dXJlXShkb2MvcGljdHVyZXMvYXJjaGl0ZWN0dXJlLnBuZykKCiMjIFNuYXBz
aG90cwoKUHJveHkKIVtwcm94eV0oZG9jL3BpY3R1cmVzL3NuYXBzaG90czEu
cG5nKQoKU2xvdHMKIVtzbG90c10oZG9jL3BpY3R1cmVzL3NuYXBzaG90czIu
cG5nKQoKR3JvdXAKIVtncm91cF0oZG9jL3BpY3R1cmVzL3NuYXBzaG90czMu
cG5nKQoKU2VudGluZWwKIVtzZW50aW5lbF0oZG9jL3BpY3R1cmVzL3NuYXBz
aG90czQucG5nKQoKIyMgQmVuY2htYXJrcwpbU2VlIGJlbmNobWFyayByZXN1
bHRzXShkb2MvYmVuY2htYXJrLm1kKQoKIyMgQXV0aG9ycwoKQWN0aXZlIGF1
dGhvcnM6CiogW0BzcGlubG9jazldKGh0dHBzOi8vZ2l0aHViLmNvbS9zcGlu
bG9jaykgW+W+ruWNmkDmlq/lrr7mtJvlhYtdKGh0dHA6Ly93ZWliby5jb20v
c3BpbmxvY2s5KQoqIFtAeWFuZ3poZTE5OTFdKGh0dHBzOi8vZ2l0aHViLmNv
bS95YW5nemhlMTk5MSkgW+W+ruWNmkBcX+adqOiCiVxfXShodHRwOi8vd2Vp
Ym8uY29tL3lhbmd6aGUxOTkxKQoKRW1lcml0dXMgYXV0aG9yczoKKiBbQGdv
cm91dGluZV0oaHR0cHM6Ly9naXRodWIuY29tL25nYXV0KSBb5b6u5Y2aQGdv
cm91dGluZV0oaHR0cDovL3dlaWJvLmNvbS91LzE5MjM0OTczOTMpCiogW0Bj
NHB0MHJdKGh0dHBzOi8vZ2l0aHViLmNvbS9jNHB0MHIpIFvlvq7ljZpARG9u
Z3h1XF9IdWFuZ10oaHR0cDovL3dlaWJvLmNvbS9jNHB0MHIpCgpUaGFua3M6
CiogW0BpdmFuemhhb3d5XShodHRwczovL2dpdGh1Yi5jb20vaXZhbnpoYW93
eSkKKiBbQEFwYWNoZTldKGh0dHBzOi8vZ2l0aHViLmNvbS9hcGFjaGU5KSBb
5b6u5Y2aQEFwYWNoZTldKGh0dHA6Ly93ZWliby5jb20vdS8xODc2ODI5Mzc1
KQoKIyMgTGljZW5zZQoKQ29kaXMgaXMgbGljZW5zZWQgdW5kZXIgTUlU77yM
IHNlZSBNSVQtTElDRU5TRS50eHQKCi0tLS0tLS0tLS0tLS0KKllvdSBhcmUg
d2VsY29tZSB0byB1c2UgQ29kaXMgaW4geW91ciBwcm9kdWN0LCBhbmQgZmVl
bCBmcmVlIHRvIGxldCB1cyBrbm93fiA6KSoK
",,"bGFuZ3VhZ2U6IGdvCgpvczoKICAgIC0gbGludXgKICAgIC0gb3N4CgpnbzoK
ICAgIC0gMS4xMS54CiAgICAtIDEuMTAueAogICAgLSAxLjkueAogICAgLSAx
LjgueAoKc2NyaXB0OgogICAgLSBtYWtlCiAgICAtIG1ha2UgZ290ZXN0Cgpi
ZWZvcmVfZGVwbG95OgogICAgLSBleHBvcnQgICBERVBMT1lfVEFSR0VUPWNv
ZGlzJHtUUkFWSVNfVEFHfS1nbyR7VFJBVklTX0dPX1ZFUlNJT059LSR7VFJB
VklTX09TX05BTUV9CiAgICAtIG12IGJpbiAke0RFUExPWV9UQVJHRVR9CiAg
ICAtIHppcCAtciAke0RFUExPWV9UQVJHRVR9LnppcCAke0RFUExPWV9UQVJH
RVR9ICYmIHRhciAtY3p2ZiAke0RFUExPWV9UQVJHRVR9LnRhci5neiAke0RF
UExPWV9UQVJHRVR9CgpkZXBsb3k6CiAgICBwcm92aWRlcjogcmVsZWFzZXMK
ICAgIG92ZXJ3cml0ZTogdHJ1ZQogICAgYXBpX2tleToKICAgICAgICBzZWN1
cmU6IFJLVmtvQ3dOSmVqMTlkNktiZ3B4a3dKOUgzYnUwaWNTODk1RzlCa2F5
dFVqUlZPMTI5UzkzTDR4cEhSZmVJeXlTWk5WcmQ0UC9sZTAxSklKNi9GbDg5
d0tDYy81b1gwN2FGbzZsMHcvK0pLeFNuMzNGc0doOHBHVGc1d3Q5Vm01YXFj
Y0I2bGJreWx3S3J2RFVPd3VKQ2J6TXZhOGYxWXJXdjBhKzNJNkpLVT0KICAg
IGZpbGU6CiAgICAgICAgLSAke0RFUExPWV9UQVJHRVR9LnppcAogICAgICAg
IC0gJHtERVBMT1lfVEFSR0VUfS50YXIuZ3oKICAgIHNraXBfY2xlYW51cDog
dHJ1ZQogICAgb246CiAgICAgICAgcmVwbzogQ29kaXNMYWJzL2NvZGlzCiAg
ICAgICAgdGFnczogdHJ1ZQogICAgICAgIGNvbmRpdGlvbjogJFRSQVZJU19H
T19WRVJTSU9OID1+IF4xXC4oMVswLTldfFs4LTldKVwuWzAtOV0rJAo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'twemoji',26291683,b'Emoji for everyone. https://twemoji.twitter.com/',b'HTML',55,10482,,10482,False,b'https://api.github.com/repos/twitter/twemoji/forks',"IyBUd2l0dGVyIEVtb2ppIChUd2Vtb2ppKSBbIVtCdWlsZCBTdGF0dXNdKGh0
dHBzOi8vdHJhdmlzLWNpLm9yZy90d2l0dGVyL3R3ZW1vamkuc3ZnP2JyYW5j
aD1naC1wYWdlcyldKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy90d2l0dGVyL3R3
ZW1vamkpCgpBIHNpbXBsZSBsaWJyYXJ5IHRoYXQgcHJvdmlkZXMgc3RhbmRh
cmQgVW5pY29kZSBbZW1vamldKGh0dHA6Ly9lbi53aWtpcGVkaWEub3JnL3dp
a2kvRW1vamkpIHN1cHBvcnQgYWNyb3NzIGFsbCBwbGF0Zm9ybXMuCgoqKlR3
ZW1vamkgdjEyLjAqKiBhZGhlcmVzIHRvIHRoZSBbVW5pY29kZSAxMi4wIHNw
ZWNdKGh0dHBzOi8vdW5pY29kZS5vcmcvdmVyc2lvbnMvVW5pY29kZTEyLjAu
MC8pIGFuZCBzdXBwb3J0cyB0aGUgW0Vtb2ppIDEyLjAgc3BlY10oaHR0cHM6
Ly93d3cudW5pY29kZS5vcmcvcmVwb3J0cy90cjUxL3RyNTEtMTYuaHRtbCkK
ClRoZSBUd2Vtb2ppIGxpYnJhcnkgb2ZmZXJzIHN1cHBvcnQgZm9yICoqMyww
NzUqKiBlbW9qaXMuCgojIyBVc2FnZQoKIyMjIENETiBTdXBwb3J0CgpUaGUg
Zm9sa3Mgb3ZlciBhdCBbTWF4Q0ROXShodHRwczovL3d3dy5tYXhjZG4uY29t
KSBoYXZlIGdyYWNpb3VzbHkgcHJvdmlkZWQgQ0ROIHN1cHBvcnQuCgpVc2Ug
dGhlIGZvbGxvd2luZyBpbiB0aGUgYDxoZWFkPmAgdGFnIG9mIHlvdXIgSFRN
TCBkb2N1bWVudChzKToKCmBgYGh0bWwKPHNjcmlwdCBzcmM9Imh0dHBzOi8v
dHdlbW9qaS5tYXhjZG4uY29tL3YvbGF0ZXN0L3R3ZW1vamkubWluLmpzIiBj
cm9zc29yaWdpbj0iYW5vbnltb3VzIj48L3NjcmlwdD4KYGBgCgpUaGlzIGd1
YXJhbnRlZXMgdGhhdCB5b3Ugd2lsbCBhbHdheXMgdXNlIHRoZSBsYXRlc3Qg
dmVyc2lvbiBvZiB0aGUgbGlicmFyeS4KCklmLCBpbnN0ZWFkLCB5b3UnZCBs
aWtlIHRvIGluY2x1ZGUgdGhlIGxhdGVzdCB2ZXJzaW9uIGV4cGxpY2l0bHks
IHlvdSBjYW4gYWRkIHRoZSBmb2xsb3dpbmcgdGFnOgpgYGBodG1sCjxzY3Jp
cHQgc3JjPSJodHRwczovL3R3ZW1vamkubWF4Y2RuLmNvbS92LzEyLjEuNC90
d2Vtb2ppLm1pbi5qcyIgaW50ZWdyaXR5PSJzaGEzODQtbDJ2bkJ1V0RwTysy
aFkxVkdUSEd0NTMzUVAwaXVJMEZQSnlSL2d6NUcwUzRvT29HbnM5dFZMamhy
bjF5Z1BZLyIgY3Jvc3NvcmlnaW49ImFub255bW91cyI+PC9zY3JpcHQ+CmBg
YAoKIyMjIERvd25sb2FkCgpJZiBpbnN0ZWFkIHlvdSB3YW50IHRvIGRvd25s
b2FkIGEgc3BlY2lmaWMgdmVyc2lvbiwgcGxlYXNlIGxvb2sgYXQgdGhlIGBn
aC1wYWdlc2AgYnJhbmNoLCB3aGVyZSB5b3Ugd2lsbCBmaW5kIHRoZSBidWls
dCBhc3NldHMgZm9yIGJvdGggb3VyIGxhdGVzdCBhbmQgb2xkZXIgdmVyc2lv
bnMuCgojIyBBUEkKCkZvbGxvd2luZyBhcmUgYWxsIHRoZSBtZXRob2RzIGV4
cG9zZWQgaW4gdGhlIGB0d2Vtb2ppYCBuYW1lc3BhY2UuCgojIyMgdHdlbW9q
aS5wYXJzZSggLi4uICkgVjEKClRoaXMgaXMgdGhlIG1haW4gcGFyc2luZyB1
dGlsaXR5IGFuZCBoYXMgMyBvdmVybG9hZHMgcGVyIHBhcnNpbmcgdHlwZS4K
ClRoZXJlIGFyZSBtYWlubHkgdHdvIGtpbmRzIG9mIHBhcnNpbmc6IFtzdHJp
bmcgcGFyc2luZ10oaHR0cHM6Ly9naXRodWIuY29tL3R3aXR0ZXIvdHdlbW9q
aSNzdHJpbmctcGFyc2luZykgYW5kIFtET00gcGFyc2luZ10oaHR0cHM6Ly9n
aXRodWIuY29tL3R3aXR0ZXIvdHdlbW9qaSNkb20tcGFyc2luZykuCgpFYWNo
IG9mIHRoZW0gYWNjZXB0cyBhIGNhbGxiYWNrIHRvIGdlbmVyYXRlIGFuIGlt
YWdlIHNvdXJjZSBvciBhbiBvcHRpb25zIG9iamVjdCB3aXRoIHBhcnNpbmcg
aW5mby4KCkhlcmUgaXMgYSB3YWxrdGhyb3VnaCBvZiBhbGwgcGFyc2luZyBw
b3NzaWJpbGl0aWVzOgoKIyMjIyBET00gcGFyc2luZwoKSW4gY29udHJhc3Qg
dG8gYHN0cmluZ2AgcGFyc2luZywgaWYgdGhlIGZpcnN0IGFyZ3VtZW50IGlz
IGFuIGBIVE1MRWxlbWVudGAsIGdlbmVyYXRlZCBpbWFnZSB0YWdzIHdpbGwg
cmVwbGFjZSBlbW9qaSB0aGF0IGFyZSAqKmluc2lkZSBgI3RleHRgIG5vZGVz
IG9ubHkqKiB3aXRob3V0IGNvbXByb21pc2luZyBzdXJyb3VuZGluZyBub2Rl
cyBvciBsaXN0ZW5lcnMsIGFuZCBjb21wbGV0ZWx5IGF2b2lkaW5nIHRoZSB1
c2FnZSBvZiBgaW5uZXJIVE1MYC4KCklmIHNlY3VyaXR5IGlzIGEgbWFqb3Ig
Y29uY2VybiwgdGhpcyBwYXJzaW5nIGNhbiBiZSBjb25zaWRlcmVkIHRoZSBz
YWZlc3Qgb3B0aW9uIGJ1dCB3aXRoIGEgc2xpZ2h0IHBlcmZvcm1hbmNlIHBl
bmFsdHkgZHVlIHRvIERPTSBvcGVyYXRpb25zIHRoYXQgYXJlIGluZXZpdGFi
bHkgKmNvc3RseSouCgpgYGBqcwp2YXIgZGl2ID0gZG9jdW1lbnQuY3JlYXRl
RWxlbWVudCgnZGl2Jyk7CmRpdi50ZXh0Q29udGVudCA9ICdJIFx1Mjc2NFx1
RkUwRiBlbW9qaSEnOwpkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGRpdik7
Cgp0d2Vtb2ppLnBhcnNlKGRvY3VtZW50LmJvZHkpOwoKdmFyIGltZyA9IGRp
di5xdWVyeVNlbGVjdG9yKCdpbWcnKTsKCi8vIG5vdGUgdGhlIGRpdiBpcyBw
cmVzZXJ2ZWQKaW1nLnBhcmVudE5vZGUgPT09IGRpdjsgLy8gdHJ1ZQoKaW1n
LnNyYzsgICAgICAgIC8vIGh0dHBzOi8vdHdlbW9qaS5tYXhjZG4uY29tL3Yv
bGF0ZXN0LzcyeDcyLzI3NjQucG5nCmltZy5hbHQ7ICAgICAgICAvLyBcdTI3
NjRcdUZFMEYKaW1nLmNsYXNzTmFtZTsgIC8vIGVtb2ppCmltZy5kcmFnZ2Fi
bGU7ICAvLyBmYWxzZQoKYGBgCgpBbGwgb3RoZXIgb3ZlcmxvYWRzIGRlc2Ny
aWJlZCBmb3IgYHN0cmluZ2AgYXJlIGF2YWlsYWJsZSBpbiBleGFjdGx5IHRo
ZSBzYW1lIHdheSBmb3IgRE9NIHBhcnNpbmcuCgojIyMgT2JqZWN0IGFzIHBh
cmFtZXRlcgoKSGVyZSdzIHRoZSBsaXN0IG9mIHByb3BlcnRpZXMgYWNjZXB0
ZWQgYnkgdGhlIG9wdGlvbmFsIG9iamVjdCB0aGF0IGNhbiBiZSBwYXNzZWQg
dG8gdGhlIGBwYXJzZWAgZnVuY3Rpb24uCgpgYGBqcwogIHsKICAgIGNhbGxi
YWNrOiBGdW5jdGlvbiwgICAvLyBkZWZhdWx0IHRoZSBjb21tb24gcmVwbGFj
ZXIKICAgIGF0dHJpYnV0ZXM6IEZ1bmN0aW9uLCAvLyBkZWZhdWx0IHJldHVy
bnMge30KICAgIGJhc2U6IHN0cmluZywgICAgICAgICAvLyBkZWZhdWx0IE1h
eENETgogICAgZXh0OiBzdHJpbmcsICAgICAgICAgIC8vIGRlZmF1bHQgIi5w
bmciCiAgICBjbGFzc05hbWU6IHN0cmluZywgICAgLy8gZGVmYXVsdCAiZW1v
amkiCiAgICBzaXplOiBzdHJpbmd8bnVtYmVyLCAgLy8gZGVmYXVsdCAiNzJ4
NzIiCiAgICBmb2xkZXI6IHN0cmluZyAgICAgICAgLy8gaW4gY2FzZSBpdCdz
IHNwZWNpZmllZAogICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGl0IHJl
cGxhY2VzIC5zaXplIGluZm8sIGlmIGFueQogIH0KYGBgCgojIyMjIGNhbGxi
YWNrCgpUaGUgZnVuY3Rpb24gdG8gaW52b2tlIGluIG9yZGVyIHRvIGdlbmVy
YXRlIGltYWdlIGBzcmNgKHMpLgoKQnkgZGVmYXVsdCBpdCBpcyBhIGZ1bmN0
aW9uIGxpa2UgdGhlIGZvbGxvd2luZyBvbmU6CgpgYGBqcwpmdW5jdGlvbiBp
bWFnZVNvdXJjZUdlbmVyYXRvcihpY29uLCBvcHRpb25zKSB7CiAgcmV0dXJu
ICcnLmNvbmNhdCgKICAgIG9wdGlvbnMuYmFzZSwgLy8gYnkgZGVmYXVsdCBU
d2l0dGVyIEluYy4gQ0ROCiAgICBvcHRpb25zLnNpemUsIC8vIGJ5IGRlZmF1
bHQgIjcyeDcyIiBzdHJpbmcKICAgICcvJywKICAgIGljb24sICAgICAgICAg
Ly8gdGhlIGZvdW5kIGVtb2ppIGFzIGNvZGUgcG9pbnQKICAgIG9wdGlvbnMu
ZXh0ICAgLy8gYnkgZGVmYXVsdCAiLnBuZyIKICApOwp9CmBgYAoKIyMjIyBi
YXNlCgpUaGUgZGVmYXVsdCB1cmwgaXMgdGhlIHNhbWUgYXMgYHR3ZW1vamku
YmFzZWAsIHNvIGlmIHlvdSBtb2RpZnkgdGhlIGZvcm1lciwgaXQgd2lsbCBy
ZWZsZWN0IGFzIGRlZmF1bHQgZm9yIGFsbCBwYXJzZWQgc3RyaW5ncyBvciBu
b2Rlcy4KCiMjIyMgZXh0CgpUaGUgZGVmYXVsdCBpbWFnZSBleHRlbnNpb24g
aXMgdGhlIHNhbWUgYXMgYHR3ZW1vamkuZXh0YCB3aGljaCBpcyBgIi5wbmci
YC4KCklmIHlvdSBtb2RpZnkgdGhlIGZvcm1lciwgaXQgd2lsbCByZWZsZWN0
IGFzIGRlZmF1bHQgZm9yIGFsbCBwYXJzZWQgc3RyaW5ncyBvciBub2Rlcy4K
CiMjIyMgY2xhc3NOYW1lCgpUaGUgZGVmYXVsdCBgY2xhc3NgIGZvciBlYWNo
IGdlbmVyYXRlZCBpbWFnZSBpcyBgZW1vamlgLiBJdCBpcyBwb3NzaWJsZSB0
byBzcGVjaWZ5IGEgZGlmZmVyZW50IG9uZSB0aHJvdWdoIHRoaXMgcHJvcGVy
dHkuCgojIyMjIyBzaXplCgpUaGUgZGVmYXVsdCBhc3NldCBzaXplIGlzIHRo
ZSBzYW1lIGFzIGB0d2Vtb2ppLnNpemVgIHdoaWNoIGlzIGAiNzJ4NzIiYC4K
CklmIHlvdSBtb2RpZnkgdGhlIGZvcm1lciwgaXQgd2lsbCByZWZsZWN0IGFz
IGRlZmF1bHQgZm9yIGFsbCBwYXJzZWQgc3RyaW5ncyBvciBub2Rlcy4KCiMj
IyMgZm9sZGVyCgpJbiBjYXNlIHlvdSBkb24ndCB3YW50IHRvIHNwZWNpZnkg
YSBzaXplIGZvciB0aGUgaW1hZ2UuIEl0IGlzIHBvc3NpYmxlIHRvIGNob29z
ZSBhIGZvbGRlciwgYXMgaW4gdGhlIGNhc2Ugb2YgU1ZHIGVtb2ppLgoKYGBg
anMKdHdlbW9qaS5wYXJzZShnZW5lcmljTm9kZSwgewogIGZvbGRlcjogJ3N2
ZycsCiAgZXh0OiAnLnN2ZycKfSk7CmBgYAoKVGhpcyB3aWxsIGdlbmVyYXRl
IHVybHMgc3VjaCBgaHR0cHM6Ly90d2Vtb2ppLm1heGNkbi5jb20vc3ZnLzI3
NjQuc3ZnYCBpbnN0ZWFkIG9mIHVzaW5nIGEgc3BlY2lmaWMgc2l6ZSBiYXNl
ZCBpbWFnZS4KCiMjIFV0aWxpdGllcwoKQmFzaWMgdXRpbGl0aWVzIC8gaGVs
cGVycyB0byBjb252ZXJ0IGNvZGUgcG9pbnRzIHRvIEphdmFTY3JpcHQgc3Vy
cm9nYXRlcyBhbmQgdmljZSB2ZXJzYS4KCiMjIyB0d2Vtb2ppLmNvbnZlcnQu
ZnJvbUNvZGVQb2ludCgpCgpGb3IgYSBnaXZlbiBIRVggY29kZXBvaW50LCBy
ZXR1cm5zIFVURi0xNiBzdXJyb2dhdGUgcGFpcnMuCgpgYGBqcwp0d2Vtb2pp
LmNvbnZlcnQuZnJvbUNvZGVQb2ludCgnMWYxZTgnKTsKIC8vICJcdWQ4M2Nc
dWRkZTgiCmBgYAoKIyMjIHR3ZW1vamkuY29udmVydC50b0NvZGVQb2ludCgp
CgpGb3IgZ2l2ZW4gVVRGLTE2IHN1cnJvZ2F0ZSBwYWlycywgcmV0dXJucyB0
aGUgZXF1aXZhbGVudCBIRVggY29kZXBvaW50LgoKYGBganMKIHR3ZW1vamku
Y29udmVydC50b0NvZGVQb2ludCgnXHVkODNjXHVkZGU4XHVkODNjXHVkZGYz
Jyk7CiAvLyAiMWYxZTgtMWYxZjMiCgogdHdlbW9qaS5jb252ZXJ0LnRvQ29k
ZVBvaW50KCdcdWQ4M2NcdWRkZThcdWQ4M2NcdWRkZjMnLCAnficpOwogLy8g
IjFmMWU4fjFmMWYzIgpgYGAKCiMjIFRpcHMKCiMjIyBJbmxpbmUgU3R5bGVz
CgpJZiB5b3UnZCBsaWtlIHRvIHNpemUgdGhlIGVtb2ppIGFjY29yZGluZyB0
byB0aGUgc3Vycm91bmRpbmcgdGV4dCwgeW91IGNhbiBhZGQgdGhlIGZvbGxv
d2luZyBDU1MgdG8geW91ciBzdHlsZXNoZWV0OgoKYGBgY3NzCmltZy5lbW9q
aSB7CiAgIGhlaWdodDogMWVtOwogICB3aWR0aDogMWVtOwogICBtYXJnaW46
IDAgLjA1ZW0gMCAuMWVtOwogICB2ZXJ0aWNhbC1hbGlnbjogLTAuMWVtOwp9
CmBgYAoKVGhpcyB3aWxsIG1ha2Ugc3VyZSBlbW9qaSBkZXJpdmUgdGhlaXIg
d2lkdGggYW5kIGhlaWdodCBmcm9tIHRoZSBgZm9udC1zaXplYCBvZiB0aGUg
dGV4dCB0aGV5J3JlIHNob3duIHdpdGguIEl0IGFsc28gYWRkcyBqdXN0IGEg
bGl0dGxlIGJpdCBvZiBzcGFjZSBiZWZvcmUgYW5kIGFmdGVyIGVhY2ggZW1v
amksIGFuZCBwdWxscyB0aGVtIHVwd2FyZHMgYSBsaXR0bGUgYml0IGZvciBi
ZXR0ZXIgb3B0aWNhbCBhbGlnbm1lbnQuCgojIyMgVVRGLTggQ2hhcmFjdGVy
IFNldAoKVG8gcHJvcGVybHkgc3VwcG9ydCBlbW9qaSwgdGhlIGRvY3VtZW50
IGNoYXJhY3RlciBzZXQgbXVzdCBiZSBzZXQgdG8gVVRGLTguIFRoaXMgY2Fu
IGRvbmUgYnkgaW5jbHVkaW5nIHRoZSBmb2xsb3dpbmcgbWV0YSB0YWcgaW4g
dGhlIGRvY3VtZW50IGA8aGVhZD5gCgpgYGBodG1sCjxtZXRhIGNoYXJzZXQ9
InV0Zi04Ij4KYGBgCgojIyMgRXhjbHVkZSBDaGFyYWN0ZXJzIChWMSkKClRv
IGV4Y2x1ZGUgY2VydGFpbiBjaGFyYWN0ZXJzIGZyb20gYmVpbmcgcmVwbGFj
ZWQgYnkgdHdlbW9qaS5qcywgY2FsbCB0d2Vtb2ppLnBhcnNlKCkgd2l0aCBh
IGNhbGxiYWNrLCByZXR1cm5pbmcgZmFsc2UgZm9yIHRoZSBzcGVjaWZpYyB1
bmljb2RlIGljb24uIEZvciBleGFtcGxlOgoKYGBganMKdHdlbW9qaS5wYXJz
ZShkb2N1bWVudC5ib2R5LCB7CiAgICBjYWxsYmFjazogZnVuY3Rpb24oaWNv
biwgb3B0aW9ucywgdmFyaWFudCkgewogICAgICAgIHN3aXRjaCAoIGljb24g
KSB7CiAgICAgICAgICAgIGNhc2UgJ2E5JzogICAgICAvLyDCqSBjb3B5cmln
aHQKICAgICAgICAgICAgY2FzZSAnYWUnOiAgICAgIC8vIMKuIHJlZ2lzdGVy
ZWQgdHJhZGVtYXJrCiAgICAgICAgICAgIGNhc2UgJzIxMjInOiAgICAvLyDi
hKIgdHJhZGVtYXJrCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAg
ICAgICAgfQogICAgICAgIHJldHVybiAnJy5jb25jYXQob3B0aW9ucy5iYXNl
LCBvcHRpb25zLnNpemUsICcvJywgaWNvbiwgb3B0aW9ucy5leHQpOwogICAg
fQp9KTsKYGBgCgojIyBMZWdhY3kgQVBJIChWMSkKCklmIHlvdSdyZSBzdGls
bCB1c2luZyBvdXIgVjEgQVBJLCB5b3UgY2FuIHJlYWQgb3VyIGxlZ2FjeSBk
b2N1bWVudGF0aW9uIFtoZXJlXShodHRwczovL2dpdGh1Yi5jb20vdHdpdHRl
ci90d2Vtb2ppL3RyZWUvbWFzdGVyL0xFR0FDWS5tZCkuCgojIyBDb250cmli
dXRpbmcKClRoZSBjb250cmlidXRpbmcgZG9jdW1lbnRhdGlvbiBjYW4gYmUg
Zm91bmQgW2hlcmVdKGh0dHBzOi8vZ2l0aHViLmNvbS90d2l0dGVyL3R3ZW1v
amkvdHJlZS9tYXN0ZXIvQ09OVFJJQlVUSU5HLm1kKS4KCiMjIEF0dHJpYnV0
aW9uIFJlcXVpcmVtZW50cwoKQXMgYW4gb3BlbiBzb3VyY2UgcHJvamVjdCwg
YXR0cmlidXRpb24gaXMgY3JpdGljYWwgZnJvbSBhIGxlZ2FsLCBwcmFjdGlj
YWwgYW5kIG1vdGl2YXRpb25hbCBwZXJzcGVjdGl2ZSBpbiBvdXIgb3Bpbmlv
bi4gVGhlIGdyYXBoaWNzIGFyZSBsaWNlbnNlZCB1bmRlciB0aGUgQ0MtQlkg
NC4wIHdoaWNoIGhhcyBhIHByZXR0eSBnb29kIGd1aWRlIG9uIFtiZXN0IHBy
YWN0aWNlcyBmb3IgYXR0cmlidXRpb25dKGh0dHBzOi8vd2lraS5jcmVhdGl2
ZWNvbW1vbnMub3JnL0Jlc3RfcHJhY3RpY2VzX2Zvcl9hdHRyaWJ1dGlvbiku
CgpIb3dldmVyLCB3ZSBjb25zaWRlciB0aGUgZ3VpZGUgYSBiaXQgb25lcm91
cyBhbmQgYXMgYSBwcm9qZWN0LCB3aWxsIGFjY2VwdCBhIG1lbnRpb24gaW4g
YSBwcm9qZWN0IFJFQURNRSBvciBhbiAnQWJvdXQnIHNlY3Rpb24gb3IgZm9v
dGVyIG9uIGEgd2Vic2l0ZS4gSW4gbW9iaWxlIGFwcGxpY2F0aW9ucywgYSBj
b21tb24gcGxhY2Ugd291bGQgYmUgaW4gdGhlIFNldHRpbmdzL0Fib3V0IHNl
Y3Rpb24gKGZvciBleGFtcGxlLCBzZWUgdGhlIG1vYmlsZSBUd2l0dGVyIGFw
cGxpY2F0aW9uIFNldHRpbmdzLT5BYm91dC0+TGVnYWwgc2VjdGlvbikuIFdl
IHdvdWxkIGNvbnNpZGVyIGEgbWVudGlvbiBpbiB0aGUgSFRNTC9KUyBzb3Vy
Y2Ugc3VmZmljaWVudCBhbHNvLgoKIyMgQ29tbXVuaXR5IFByb2plY3RzCgoq
IFtUd2Vtb2ppIEFtYXppbmddKGh0dHBzOi8vZ2l0aHViLmNvbS9TZWJhc3Rp
YW5BaWduZXIvdHdlbW9qaS1hbWF6aW5nKSBieSBbQFNlYmFzdGlhbkFpZ25l
cl0oaHR0cHM6Ly9naXRodWIuY29tL1NlYmFzdGlhbkFpZ25lcik6IFVzZSBU
d2Vtb2ppIHVzaW5nIENTUyBjbGFzc2VzIChsaWtlIFtGb250IEF3ZXNvbWVd
KGh0dHA6Ly9mb3J0YXdlc29tZS5naXRodWIuaW8vRm9udC1Bd2Vzb21lLykp
LgoqIFtUd2Vtb2ppIFJ1YnldKGh0dHBzOi8vZ2l0aHViLmNvbS9qb2xseWdv
b2Rjb2RlL3R3ZW1vamkpIGJ5IFtASm9sbHlHb29kQ29kZV0oaHR0cHM6Ly90
d2l0dGVyLmNvbS9qb2xseWdvb2Rjb2RlKTogVXNlIFR3ZW1vamkgaW4gUnVi
eS4KKiBbVHdlbW9qaSBmb3IgUGVuY2lsXShodHRwczovL2dpdGh1Yi5jb20v
bmF0aGFuaWVsdy9Ud2Vtb2ppLWZvci1QZW5jaWwpIGJ5IFtATmF0aGFuaWVs
bnddKGh0dHBzOi8vdHdpdHRlci5jb20vbmF0aGFuaWVsbncpOiBVc2UgVHdl
bW9qaSBpbiBQZW5jaWwuCiogW0Zyd1R3ZW1vamkgLSBUd2Vtb2ppIGluIGRv
dG5ldF0oaHR0cDovL2dpdGh1Yi5mcmVuY2h3Lm5ldC9GcndUd2Vtb2ppLykg
YnkgW0BGcmVuY2hXXShodHRwczovL3R3aXR0ZXIuY29tL2ZyZW5jaHcpOiBV
c2UgVHdlbW9qaSBpbiBhbnkgZG90bmV0IHByb2plY3QgKEMjLCBhc3AubmV0
IC4uLikuCiogW0Vtb2ppYXdlc29tZSAtIFR3ZW1vamkgZm9yIFllbGxvd10o
aHR0cHM6Ly9naXRodWIuY29tL2RhdGVuc3Ryb20veWVsbG93LWV4dGVuc2lv
bnMvdHJlZS9tYXN0ZXIvZmVhdHVyZXMvZW1vamlhd2Vzb21lKSBieSBbQGRh
dGVuc3Ryb21dKGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlbnN0cm9tLyk6IFVz
ZSBUd2Vtb2ppIG9uIHlvdXIgd2Vic2l0ZS4KKiBbRW1vamlQYW5lbCBmb3Ig
VHdpdHRlcl0oaHR0cHM6Ly9naXRodWIuY29tL2RhbmJvdmV5L0Vtb2ppUGFu
ZWwpIGJ5IFtAZGFuaWVsYm92ZXldKGh0dHBzOi8vdHdpdHRlci5jb20vZGFu
aWVsYm92ZXkvc3RhdHVzLzc0OTU4MDA1MDI3NDU4MjUyOCk6IEluc2VydCBU
d2Vtb2ppIGludG8geW91ciB0d2VldHMgb24gdHdpdHRlci5jb20uCiogW1R3
aXR0ZXIgQ29sb3IgRW1vamkgZm9udF0oaHR0cHM6Ly9naXRodWIuY29tL2Vv
c3JlaS90d2Vtb2ppLWNvbG9yLWZvbnQpIGJ5IFtAYmRlcmlja3Nvbl0oaHR0
cHM6Ly90d2l0dGVyLmNvbS9iZGVyaWNrc29uKTogVXNlIFR3ZW1vamkgYXMg
eW91ciBzeXN0ZW0gZGVmYXVsdCBmb250IG9uIExpbnV4ICYgT1MgWC4KKiBb
RW1vamljYV0oaHR0cHM6Ly9naXRodWIuY29tL3hvdWRpbmkvZW1vamljYSkg
YnkgW0B4b3VkaW5pXShodHRwczovL3R3aXR0ZXIuY29tL3hvdWRpbmkpOiBB
biBpT1MgZnJhbWV3b3JrIGFsbG93aW5nIHlvdSB0byByZXBsYWNlIGFsbCBz
dGFuZGFyZCBlbW9qaSBpbiBzdHJpbmdzIHdpdGggVHdlbW9qaS4KKiBbVW5t
YWludGFpbmVkXSBbVHdlbW9qaSBBd2Vzb21lXShodHRwOi8vZWxsZWthc2Fp
LmdpdGh1Yi5pby90d2Vtb2ppLWF3ZXNvbWUvKSBieSBbQGVsbGVrYXNhaV0o
aHR0cHM6Ly90d2l0dGVyLmNvbS9lbGxla2FzYWkvKTogVXNlIFR3ZW1vamkg
dXNpbmcgQ1NTIGNsYXNzZXMgKGxpa2UgW0ZvbnQgQXdlc29tZV0oaHR0cDov
L2ZvcnRhd2Vzb21lLmdpdGh1Yi5pby9Gb250LUF3ZXNvbWUvKSkuCgojIyBD
b21taXR0ZXJzIGFuZCBDb250cmlidXRvcnMKCiogQnJ5YW4gSGFnZ2VydHkg
KFR3aXR0ZXIpCiogTmF0aGFuIERvd25zIChUd2l0dGVyKQoqIFRvbSBXdXR0
a2UgKGV4LVR3aXR0ZXIpCiogQW5kcmVhIEdpYW1tYXJjaGkgKGV4LVR3aXR0
ZXIpCiogSm9lbiBBc211c3NlbiAoV29yZFByZXNzKQoqIE1hcmN1cyBLYXpt
aWVyY3phayAoV29yZFByZXNzKQoKVGhlIGdvYWwgb2YgdGhpcyBwcm9qZWN0
IGlzIHRvIHNpbXBseSBwcm92aWRlIGVtb2ppIGZvciBldmVyeW9uZS4gV2Ug
ZGVmaW5pdGVseSB3ZWxjb21lIGltcHJvdmVtZW50cyBhbmQgZml4ZXMsIGJ1
dCB3ZSBtYXkgbm90IG1lcmdlIGV2ZXJ5IHB1bGwgcmVxdWVzdCBzdWdnZXN0
ZWQgYnkgdGhlIGNvbW11bml0eSBkdWUgdG8gdGhlIHNpbXBsZSBuYXR1cmUg
b2YgdGhlIHByb2plY3QuCgpUaGUgcnVsZXMgZm9yIGNvbnRyaWJ1dGluZyBh
cmUgYXZhaWxhYmxlIGluIHRoZSBgQ09OVFJJQlVUSU5HLm1kYCBmaWxlLgoK
VGhhbmsgeW91IHRvIGFsbCBvZiBvdXIgW2NvbnRyaWJ1dG9yc10oaHR0cHM6
Ly9naXRodWIuY29tL3R3aXR0ZXIvdHdlbW9qaS9ncmFwaHMvY29udHJpYnV0
b3JzKS4KCiMjIExpY2Vuc2UKCkNvcHlyaWdodCAyMDE5IFR3aXR0ZXIsIElu
YyBhbmQgb3RoZXIgY29udHJpYnV0b3JzCgpDb2RlIGxpY2Vuc2VkIHVuZGVy
IHRoZSBNSVQgTGljZW5zZTogPGh0dHA6Ly9vcGVuc291cmNlLm9yZy9saWNl
bnNlcy9NSVQ+CgpHcmFwaGljcyBsaWNlbnNlZCB1bmRlciBDQy1CWSA0LjA6
IDxodHRwczovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4w
Lz4K
",,"bGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczoKICAtICI4IgpnaXQ6CiAgZGVw
dGg6IDEKYnJhbmNoZXM6CiAgb25seToKICAgIC0gZ2gtcGFnZXMKaW5zdGFs
bDogeWFybiBpbnN0YWxsIC0tZnJvemVuLWxvY2tmaWxlCnNjcmlwdDogeWFy
biB0ZXN0Cg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'mux',6051812,b'A powerful HTTP router and URL matcher for building Go web servers with \xf0\x9f\xa6\x8d',b'Go',17,10476,,10476,False,b'https://api.github.com/repos/gorilla/mux/forks',"IyBnb3JpbGxhL211eAoKWyFbR29Eb2NdKGh0dHBzOi8vZ29kb2Mub3JnL2dp
dGh1Yi5jb20vZ29yaWxsYS9tdXg/c3RhdHVzLnN2ZyldKGh0dHBzOi8vZ29k
b2Mub3JnL2dpdGh1Yi5jb20vZ29yaWxsYS9tdXgpClshW0NpcmNsZUNJXSho
dHRwczovL2NpcmNsZWNpLmNvbS9naC9nb3JpbGxhL211eC5zdmc/c3R5bGU9
c3ZnKV0oaHR0cHM6Ly9jaXJjbGVjaS5jb20vZ2gvZ29yaWxsYS9tdXgpClsh
W1NvdXJjZWdyYXBoXShodHRwczovL3NvdXJjZWdyYXBoLmNvbS9naXRodWIu
Y29tL2dvcmlsbGEvbXV4Ly0vYmFkZ2Uuc3ZnKV0oaHR0cHM6Ly9zb3VyY2Vn
cmFwaC5jb20vZ2l0aHViLmNvbS9nb3JpbGxhL211eD9iYWRnZSkKCiFbR29y
aWxsYSBMb2dvXShodHRwczovL2Nsb3VkLWNkbi5xdWVzdGlvbmFibGUuc2Vy
dmljZXMvZ29yaWxsYS1pY29uLTY0LnBuZykKCmh0dHBzOi8vd3d3Lmdvcmls
bGF0b29sa2l0Lm9yZy9wa2cvbXV4CgpQYWNrYWdlIGBnb3JpbGxhL211eGAg
aW1wbGVtZW50cyBhIHJlcXVlc3Qgcm91dGVyIGFuZCBkaXNwYXRjaGVyIGZv
ciBtYXRjaGluZyBpbmNvbWluZyByZXF1ZXN0cyB0bwp0aGVpciByZXNwZWN0
aXZlIGhhbmRsZXIuCgpUaGUgbmFtZSBtdXggc3RhbmRzIGZvciAiSFRUUCBy
ZXF1ZXN0IG11bHRpcGxleGVyIi4gTGlrZSB0aGUgc3RhbmRhcmQgYGh0dHAu
U2VydmVNdXhgLCBgbXV4LlJvdXRlcmAgbWF0Y2hlcyBpbmNvbWluZyByZXF1
ZXN0cyBhZ2FpbnN0IGEgbGlzdCBvZiByZWdpc3RlcmVkIHJvdXRlcyBhbmQg
Y2FsbHMgYSBoYW5kbGVyIGZvciB0aGUgcm91dGUgdGhhdCBtYXRjaGVzIHRo
ZSBVUkwgb3Igb3RoZXIgY29uZGl0aW9ucy4gVGhlIG1haW4gZmVhdHVyZXMg
YXJlOgoKKiBJdCBpbXBsZW1lbnRzIHRoZSBgaHR0cC5IYW5kbGVyYCBpbnRl
cmZhY2Ugc28gaXQgaXMgY29tcGF0aWJsZSB3aXRoIHRoZSBzdGFuZGFyZCBg
aHR0cC5TZXJ2ZU11eGAuCiogUmVxdWVzdHMgY2FuIGJlIG1hdGNoZWQgYmFz
ZWQgb24gVVJMIGhvc3QsIHBhdGgsIHBhdGggcHJlZml4LCBzY2hlbWVzLCBo
ZWFkZXIgYW5kIHF1ZXJ5IHZhbHVlcywgSFRUUCBtZXRob2RzIG9yIHVzaW5n
IGN1c3RvbSBtYXRjaGVycy4KKiBVUkwgaG9zdHMsIHBhdGhzIGFuZCBxdWVy
eSB2YWx1ZXMgY2FuIGhhdmUgdmFyaWFibGVzIHdpdGggYW4gb3B0aW9uYWwg
cmVndWxhciBleHByZXNzaW9uLgoqIFJlZ2lzdGVyZWQgVVJMcyBjYW4gYmUg
YnVpbHQsIG9yICJyZXZlcnNlZCIsIHdoaWNoIGhlbHBzIG1haW50YWluaW5n
IHJlZmVyZW5jZXMgdG8gcmVzb3VyY2VzLgoqIFJvdXRlcyBjYW4gYmUgdXNl
ZCBhcyBzdWJyb3V0ZXJzOiBuZXN0ZWQgcm91dGVzIGFyZSBvbmx5IHRlc3Rl
ZCBpZiB0aGUgcGFyZW50IHJvdXRlIG1hdGNoZXMuIFRoaXMgaXMgdXNlZnVs
IHRvIGRlZmluZSBncm91cHMgb2Ygcm91dGVzIHRoYXQgc2hhcmUgY29tbW9u
IGNvbmRpdGlvbnMgbGlrZSBhIGhvc3QsIGEgcGF0aCBwcmVmaXggb3Igb3Ro
ZXIgcmVwZWF0ZWQgYXR0cmlidXRlcy4gQXMgYSBib251cywgdGhpcyBvcHRp
bWl6ZXMgcmVxdWVzdCBtYXRjaGluZy4KCi0tLQoKKiBbSW5zdGFsbF0oI2lu
c3RhbGwpCiogW0V4YW1wbGVzXSgjZXhhbXBsZXMpCiogW01hdGNoaW5nIFJv
dXRlc10oI21hdGNoaW5nLXJvdXRlcykKKiBbU3RhdGljIEZpbGVzXSgjc3Rh
dGljLWZpbGVzKQoqIFtTZXJ2aW5nIFNpbmdsZSBQYWdlIEFwcGxpY2F0aW9u
c10oI3NlcnZpbmctc2luZ2xlLXBhZ2UtYXBwbGljYXRpb25zKSAoZS5nLiBS
ZWFjdCwgVnVlLCBFbWJlci5qcywgZXRjLikKKiBbUmVnaXN0ZXJlZCBVUkxz
XSgjcmVnaXN0ZXJlZC11cmxzKQoqIFtXYWxraW5nIFJvdXRlc10oI3dhbGtp
bmctcm91dGVzKQoqIFtHcmFjZWZ1bCBTaHV0ZG93bl0oI2dyYWNlZnVsLXNo
dXRkb3duKQoqIFtNaWRkbGV3YXJlXSgjbWlkZGxld2FyZSkKKiBbSGFuZGxp
bmcgQ09SUyBSZXF1ZXN0c10oI2hhbmRsaW5nLWNvcnMtcmVxdWVzdHMpCiog
W1Rlc3RpbmcgSGFuZGxlcnNdKCN0ZXN0aW5nLWhhbmRsZXJzKQoqIFtGdWxs
IEV4YW1wbGVdKCNmdWxsLWV4YW1wbGUpCgotLS0KCiMjIEluc3RhbGwKCldp
dGggYSBbY29ycmVjdGx5IGNvbmZpZ3VyZWRdKGh0dHBzOi8vZ29sYW5nLm9y
Zy9kb2MvaW5zdGFsbCN0ZXN0aW5nKSBHbyB0b29sY2hhaW46CgpgYGBzaApn
byBnZXQgLXUgZ2l0aHViLmNvbS9nb3JpbGxhL211eApgYGAKCiMjIEV4YW1w
bGVzCgpMZXQncyBzdGFydCByZWdpc3RlcmluZyBhIGNvdXBsZSBvZiBVUkwg
cGF0aHMgYW5kIGhhbmRsZXJzOgoKYGBgZ28KZnVuYyBtYWluKCkgewogICAg
ciA6PSBtdXguTmV3Um91dGVyKCkKICAgIHIuSGFuZGxlRnVuYygiLyIsIEhv
bWVIYW5kbGVyKQogICAgci5IYW5kbGVGdW5jKCIvcHJvZHVjdHMiLCBQcm9k
dWN0c0hhbmRsZXIpCiAgICByLkhhbmRsZUZ1bmMoIi9hcnRpY2xlcyIsIEFy
dGljbGVzSGFuZGxlcikKICAgIGh0dHAuSGFuZGxlKCIvIiwgcikKfQpgYGAK
CkhlcmUgd2UgcmVnaXN0ZXIgdGhyZWUgcm91dGVzIG1hcHBpbmcgVVJMIHBh
dGhzIHRvIGhhbmRsZXJzLiBUaGlzIGlzIGVxdWl2YWxlbnQgdG8gaG93IGBo
dHRwLkhhbmRsZUZ1bmMoKWAgd29ya3M6IGlmIGFuIGluY29taW5nIHJlcXVl
c3QgVVJMIG1hdGNoZXMgb25lIG9mIHRoZSBwYXRocywgdGhlIGNvcnJlc3Bv
bmRpbmcgaGFuZGxlciBpcyBjYWxsZWQgcGFzc2luZyAoYGh0dHAuUmVzcG9u
c2VXcml0ZXJgLCBgKmh0dHAuUmVxdWVzdGApIGFzIHBhcmFtZXRlcnMuCgpQ
YXRocyBjYW4gaGF2ZSB2YXJpYWJsZXMuIFRoZXkgYXJlIGRlZmluZWQgdXNp
bmcgdGhlIGZvcm1hdCBge25hbWV9YCBvciBge25hbWU6cGF0dGVybn1gLiBJ
ZiBhIHJlZ3VsYXIgZXhwcmVzc2lvbiBwYXR0ZXJuIGlzIG5vdCBkZWZpbmVk
LCB0aGUgbWF0Y2hlZCB2YXJpYWJsZSB3aWxsIGJlIGFueXRoaW5nIHVudGls
IHRoZSBuZXh0IHNsYXNoLiBGb3IgZXhhbXBsZToKCmBgYGdvCnIgOj0gbXV4
Lk5ld1JvdXRlcigpCnIuSGFuZGxlRnVuYygiL3Byb2R1Y3RzL3trZXl9Iiwg
UHJvZHVjdEhhbmRsZXIpCnIuSGFuZGxlRnVuYygiL2FydGljbGVzL3tjYXRl
Z29yeX0vIiwgQXJ0aWNsZXNDYXRlZ29yeUhhbmRsZXIpCnIuSGFuZGxlRnVu
YygiL2FydGljbGVzL3tjYXRlZ29yeX0ve2lkOlswLTldK30iLCBBcnRpY2xl
SGFuZGxlcikKYGBgCgpUaGUgbmFtZXMgYXJlIHVzZWQgdG8gY3JlYXRlIGEg
bWFwIG9mIHJvdXRlIHZhcmlhYmxlcyB3aGljaCBjYW4gYmUgcmV0cmlldmVk
IGNhbGxpbmcgYG11eC5WYXJzKClgOgoKYGBgZ28KZnVuYyBBcnRpY2xlc0Nh
dGVnb3J5SGFuZGxlcih3IGh0dHAuUmVzcG9uc2VXcml0ZXIsIHIgKmh0dHAu
UmVxdWVzdCkgewogICAgdmFycyA6PSBtdXguVmFycyhyKQogICAgdy5Xcml0
ZUhlYWRlcihodHRwLlN0YXR1c09LKQogICAgZm10LkZwcmludGYodywgIkNh
dGVnb3J5OiAldlxuIiwgdmFyc1siY2F0ZWdvcnkiXSkKfQpgYGAKCkFuZCB0
aGlzIGlzIGFsbCB5b3UgbmVlZCB0byBrbm93IGFib3V0IHRoZSBiYXNpYyB1
c2FnZS4gTW9yZSBhZHZhbmNlZCBvcHRpb25zIGFyZSBleHBsYWluZWQgYmVs
b3cuCgojIyMgTWF0Y2hpbmcgUm91dGVzCgpSb3V0ZXMgY2FuIGFsc28gYmUg
cmVzdHJpY3RlZCB0byBhIGRvbWFpbiBvciBzdWJkb21haW4uIEp1c3QgZGVm
aW5lIGEgaG9zdCBwYXR0ZXJuIHRvIGJlIG1hdGNoZWQuIFRoZXkgY2FuIGFs
c28gaGF2ZSB2YXJpYWJsZXM6CgpgYGBnbwpyIDo9IG11eC5OZXdSb3V0ZXIo
KQovLyBPbmx5IG1hdGNoZXMgaWYgZG9tYWluIGlzICJ3d3cuZXhhbXBsZS5j
b20iLgpyLkhvc3QoInd3dy5leGFtcGxlLmNvbSIpCi8vIE1hdGNoZXMgYSBk
eW5hbWljIHN1YmRvbWFpbi4Kci5Ib3N0KCJ7c3ViZG9tYWluOlthLXpdK30u
ZXhhbXBsZS5jb20iKQpgYGAKClRoZXJlIGFyZSBzZXZlcmFsIG90aGVyIG1h
dGNoZXJzIHRoYXQgY2FuIGJlIGFkZGVkLiBUbyBtYXRjaCBwYXRoIHByZWZp
eGVzOgoKYGBgZ28Kci5QYXRoUHJlZml4KCIvcHJvZHVjdHMvIikKYGBgCgou
Li5vciBIVFRQIG1ldGhvZHM6CgpgYGBnbwpyLk1ldGhvZHMoIkdFVCIsICJQ
T1NUIikKYGBgCgouLi5vciBVUkwgc2NoZW1lczoKCmBgYGdvCnIuU2NoZW1l
cygiaHR0cHMiKQpgYGAKCi4uLm9yIGhlYWRlciB2YWx1ZXM6CgpgYGBnbwpy
LkhlYWRlcnMoIlgtUmVxdWVzdGVkLVdpdGgiLCAiWE1MSHR0cFJlcXVlc3Qi
KQpgYGAKCi4uLm9yIHF1ZXJ5IHZhbHVlczoKCmBgYGdvCnIuUXVlcmllcygi
a2V5IiwgInZhbHVlIikKYGBgCgouLi5vciB0byB1c2UgYSBjdXN0b20gbWF0
Y2hlciBmdW5jdGlvbjoKCmBgYGdvCnIuTWF0Y2hlckZ1bmMoZnVuYyhyICpo
dHRwLlJlcXVlc3QsIHJtICpSb3V0ZU1hdGNoKSBib29sIHsKICAgIHJldHVy
biByLlByb3RvTWFqb3IgPT0gMAp9KQpgYGAKCi4uLmFuZCBmaW5hbGx5LCBp
dCBpcyBwb3NzaWJsZSB0byBjb21iaW5lIHNldmVyYWwgbWF0Y2hlcnMgaW4g
YSBzaW5nbGUgcm91dGU6CgpgYGBnbwpyLkhhbmRsZUZ1bmMoIi9wcm9kdWN0
cyIsIFByb2R1Y3RzSGFuZGxlcikuCiAgSG9zdCgid3d3LmV4YW1wbGUuY29t
IikuCiAgTWV0aG9kcygiR0VUIikuCiAgU2NoZW1lcygiaHR0cCIpCmBgYAoK
Um91dGVzIGFyZSB0ZXN0ZWQgaW4gdGhlIG9yZGVyIHRoZXkgd2VyZSBhZGRl
ZCB0byB0aGUgcm91dGVyLiBJZiB0d28gcm91dGVzIG1hdGNoLCB0aGUgZmly
c3Qgb25lIHdpbnM6CgpgYGBnbwpyIDo9IG11eC5OZXdSb3V0ZXIoKQpyLkhh
bmRsZUZ1bmMoIi9zcGVjaWZpYyIsIHNwZWNpZmljSGFuZGxlcikKci5QYXRo
UHJlZml4KCIvIikuSGFuZGxlcihjYXRjaEFsbEhhbmRsZXIpCmBgYAoKU2V0
dGluZyB0aGUgc2FtZSBtYXRjaGluZyBjb25kaXRpb25zIGFnYWluIGFuZCBh
Z2FpbiBjYW4gYmUgYm9yaW5nLCBzbyB3ZSBoYXZlIGEgd2F5IHRvIGdyb3Vw
IHNldmVyYWwgcm91dGVzIHRoYXQgc2hhcmUgdGhlIHNhbWUgcmVxdWlyZW1l
bnRzLiBXZSBjYWxsIGl0ICJzdWJyb3V0aW5nIi4KCkZvciBleGFtcGxlLCBs
ZXQncyBzYXkgd2UgaGF2ZSBzZXZlcmFsIFVSTHMgdGhhdCBzaG91bGQgb25s
eSBtYXRjaCB3aGVuIHRoZSBob3N0IGlzIGB3d3cuZXhhbXBsZS5jb21gLiBD
cmVhdGUgYSByb3V0ZSBmb3IgdGhhdCBob3N0IGFuZCBnZXQgYSAic3Vicm91
dGVyIiBmcm9tIGl0OgoKYGBgZ28KciA6PSBtdXguTmV3Um91dGVyKCkKcyA6
PSByLkhvc3QoInd3dy5leGFtcGxlLmNvbSIpLlN1YnJvdXRlcigpCmBgYAoK
VGhlbiByZWdpc3RlciByb3V0ZXMgaW4gdGhlIHN1YnJvdXRlcjoKCmBgYGdv
CnMuSGFuZGxlRnVuYygiL3Byb2R1Y3RzLyIsIFByb2R1Y3RzSGFuZGxlcikK
cy5IYW5kbGVGdW5jKCIvcHJvZHVjdHMve2tleX0iLCBQcm9kdWN0SGFuZGxl
cikKcy5IYW5kbGVGdW5jKCIvYXJ0aWNsZXMve2NhdGVnb3J5fS97aWQ6WzAt
OV0rfSIsIEFydGljbGVIYW5kbGVyKQpgYGAKClRoZSB0aHJlZSBVUkwgcGF0
aHMgd2UgcmVnaXN0ZXJlZCBhYm92ZSB3aWxsIG9ubHkgYmUgdGVzdGVkIGlm
IHRoZSBkb21haW4gaXMgYHd3dy5leGFtcGxlLmNvbWAsIGJlY2F1c2UgdGhl
IHN1YnJvdXRlciBpcyB0ZXN0ZWQgZmlyc3QuIFRoaXMgaXMgbm90IG9ubHkg
Y29udmVuaWVudCwgYnV0IGFsc28gb3B0aW1pemVzIHJlcXVlc3QgbWF0Y2hp
bmcuIFlvdSBjYW4gY3JlYXRlIHN1YnJvdXRlcnMgY29tYmluaW5nIGFueSBh
dHRyaWJ1dGUgbWF0Y2hlcnMgYWNjZXB0ZWQgYnkgYSByb3V0ZS4KClN1YnJv
dXRlcnMgY2FuIGJlIHVzZWQgdG8gY3JlYXRlIGRvbWFpbiBvciBwYXRoICJu
YW1lc3BhY2VzIjogeW91IGRlZmluZSBzdWJyb3V0ZXJzIGluIGEgY2VudHJh
bCBwbGFjZSBhbmQgdGhlbiBwYXJ0cyBvZiB0aGUgYXBwIGNhbiByZWdpc3Rl
ciBpdHMgcGF0aHMgcmVsYXRpdmVseSB0byBhIGdpdmVuIHN1YnJvdXRlci4K
ClRoZXJlJ3Mgb25lIG1vcmUgdGhpbmcgYWJvdXQgc3Vicm91dGVzLiBXaGVu
IGEgc3Vicm91dGVyIGhhcyBhIHBhdGggcHJlZml4LCB0aGUgaW5uZXIgcm91
dGVzIHVzZSBpdCBhcyBiYXNlIGZvciB0aGVpciBwYXRoczoKCmBgYGdvCnIg
Oj0gbXV4Lk5ld1JvdXRlcigpCnMgOj0gci5QYXRoUHJlZml4KCIvcHJvZHVj
dHMiKS5TdWJyb3V0ZXIoKQovLyAiL3Byb2R1Y3RzLyIKcy5IYW5kbGVGdW5j
KCIvIiwgUHJvZHVjdHNIYW5kbGVyKQovLyAiL3Byb2R1Y3RzL3trZXl9LyIK
cy5IYW5kbGVGdW5jKCIve2tleX0vIiwgUHJvZHVjdEhhbmRsZXIpCi8vICIv
cHJvZHVjdHMve2tleX0vZGV0YWlscyIKcy5IYW5kbGVGdW5jKCIve2tleX0v
ZGV0YWlscyIsIFByb2R1Y3REZXRhaWxzSGFuZGxlcikKYGBgCgoKIyMjIFN0
YXRpYyBGaWxlcwoKTm90ZSB0aGF0IHRoZSBwYXRoIHByb3ZpZGVkIHRvIGBQ
YXRoUHJlZml4KClgIHJlcHJlc2VudHMgYSAid2lsZGNhcmQiOiBjYWxsaW5n
CmBQYXRoUHJlZml4KCIvc3RhdGljLyIpLkhhbmRsZXIoLi4uKWAgbWVhbnMg
dGhhdCB0aGUgaGFuZGxlciB3aWxsIGJlIHBhc3NlZCBhbnkKcmVxdWVzdCB0
aGF0IG1hdGNoZXMgIi9zdGF0aWMvXCoiLiBUaGlzIG1ha2VzIGl0IGVhc3kg
dG8gc2VydmUgc3RhdGljIGZpbGVzIHdpdGggbXV4OgoKYGBgZ28KZnVuYyBt
YWluKCkgewogICAgdmFyIGRpciBzdHJpbmcKCiAgICBmbGFnLlN0cmluZ1Zh
cigmZGlyLCAiZGlyIiwgIi4iLCAidGhlIGRpcmVjdG9yeSB0byBzZXJ2ZSBm
aWxlcyBmcm9tLiBEZWZhdWx0cyB0byB0aGUgY3VycmVudCBkaXIiKQogICAg
ZmxhZy5QYXJzZSgpCiAgICByIDo9IG11eC5OZXdSb3V0ZXIoKQoKICAgIC8v
IFRoaXMgd2lsbCBzZXJ2ZSBmaWxlcyB1bmRlciBodHRwOi8vbG9jYWxob3N0
OjgwMDAvc3RhdGljLzxmaWxlbmFtZT4KICAgIHIuUGF0aFByZWZpeCgiL3N0
YXRpYy8iKS5IYW5kbGVyKGh0dHAuU3RyaXBQcmVmaXgoIi9zdGF0aWMvIiwg
aHR0cC5GaWxlU2VydmVyKGh0dHAuRGlyKGRpcikpKSkKCiAgICBzcnYgOj0g
Jmh0dHAuU2VydmVyewogICAgICAgIEhhbmRsZXI6ICAgICAgciwKICAgICAg
ICBBZGRyOiAgICAgICAgICIxMjcuMC4wLjE6ODAwMCIsCiAgICAgICAgLy8g
R29vZCBwcmFjdGljZTogZW5mb3JjZSB0aW1lb3V0cyBmb3Igc2VydmVycyB5
b3UgY3JlYXRlIQogICAgICAgIFdyaXRlVGltZW91dDogMTUgKiB0aW1lLlNl
Y29uZCwKICAgICAgICBSZWFkVGltZW91dDogIDE1ICogdGltZS5TZWNvbmQs
CiAgICB9CgogICAgbG9nLkZhdGFsKHNydi5MaXN0ZW5BbmRTZXJ2ZSgpKQp9
CmBgYAoKIyMjIFNlcnZpbmcgU2luZ2xlIFBhZ2UgQXBwbGljYXRpb25zCgpN
b3N0IG9mIHRoZSB0aW1lIGl0IG1ha2VzIHNlbnNlIHRvIHNlcnZlIHlvdXIg
U1BBIG9uIGEgc2VwYXJhdGUgd2ViIHNlcnZlciBmcm9tIHlvdXIgQVBJLApi
dXQgc29tZXRpbWVzIGl0J3MgZGVzaXJhYmxlIHRvIHNlcnZlIHRoZW0gYm90
aCBmcm9tIG9uZSBwbGFjZS4gSXQncyBwb3NzaWJsZSB0byB3cml0ZSBhIHNp
bXBsZQpoYW5kbGVyIGZvciBzZXJ2aW5nIHlvdXIgU1BBIChmb3IgdXNlIHdp
dGggUmVhY3QgUm91dGVyJ3MgW0Jyb3dzZXJSb3V0ZXJdKGh0dHBzOi8vcmVh
Y3R0cmFpbmluZy5jb20vcmVhY3Qtcm91dGVyL3dlYi9hcGkvQnJvd3NlclJv
dXRlcikgZm9yIGV4YW1wbGUpLCBhbmQgbGV2ZXJhZ2UKbXV4J3MgcG93ZXJm
dWwgcm91dGluZyBmb3IgeW91ciBBUEkgZW5kcG9pbnRzLgoKYGBgZ28KcGFj
a2FnZSBtYWluCgppbXBvcnQgKAoJImVuY29kaW5nL2pzb24iCgkibG9nIgoJ
Im5ldC9odHRwIgoJIm9zIgoJInBhdGgvZmlsZXBhdGgiCgkidGltZSIKCgki
Z2l0aHViLmNvbS9nb3JpbGxhL211eCIKKQoKLy8gc3BhSGFuZGxlciBpbXBs
ZW1lbnRzIHRoZSBodHRwLkhhbmRsZXIgaW50ZXJmYWNlLCBzbyB3ZSBjYW4g
dXNlIGl0Ci8vIHRvIHJlc3BvbmQgdG8gSFRUUCByZXF1ZXN0cy4gVGhlIHBh
dGggdG8gdGhlIHN0YXRpYyBkaXJlY3RvcnkgYW5kCi8vIHBhdGggdG8gdGhl
IGluZGV4IGZpbGUgd2l0aGluIHRoYXQgc3RhdGljIGRpcmVjdG9yeSBhcmUg
dXNlZCB0bwovLyBzZXJ2ZSB0aGUgU1BBIGluIHRoZSBnaXZlbiBzdGF0aWMg
ZGlyZWN0b3J5Lgp0eXBlIHNwYUhhbmRsZXIgc3RydWN0IHsKCXN0YXRpY1Bh
dGggc3RyaW5nCglpbmRleFBhdGggIHN0cmluZwp9CgovLyBTZXJ2ZUhUVFAg
aW5zcGVjdHMgdGhlIFVSTCBwYXRoIHRvIGxvY2F0ZSBhIGZpbGUgd2l0aGlu
IHRoZSBzdGF0aWMgZGlyCi8vIG9uIHRoZSBTUEEgaGFuZGxlci4gSWYgYSBm
aWxlIGlzIGZvdW5kLCBpdCB3aWxsIGJlIHNlcnZlZC4gSWYgbm90LCB0aGUK
Ly8gZmlsZSBsb2NhdGVkIGF0IHRoZSBpbmRleCBwYXRoIG9uIHRoZSBTUEEg
aGFuZGxlciB3aWxsIGJlIHNlcnZlZC4gVGhpcwovLyBpcyBzdWl0YWJsZSBi
ZWhhdmlvciBmb3Igc2VydmluZyBhbiBTUEEgKHNpbmdsZSBwYWdlIGFwcGxp
Y2F0aW9uKS4KZnVuYyAoaCBzcGFIYW5kbGVyKSBTZXJ2ZUhUVFAodyBodHRw
LlJlc3BvbnNlV3JpdGVyLCByICpodHRwLlJlcXVlc3QpIHsKICAgIC8vIGdl
dCB0aGUgYWJzb2x1dGUgcGF0aCB0byBwcmV2ZW50IGRpcmVjdG9yeSB0cmF2
ZXJzYWwKCXBhdGgsIGVyciA6PSBmaWxlcGF0aC5BYnMoci5VUkwuUGF0aCkK
CWlmIGVyciAhPSBuaWwgewogICAgICAgIC8vIGlmIHdlIGZhaWxlZCB0byBn
ZXQgdGhlIGFic29sdXRlIHBhdGggcmVzcG9uZCB3aXRoIGEgNDAwIGJhZCBy
ZXF1ZXN0CiAgICAgICAgLy8gYW5kIHN0b3AKCQlodHRwLkVycm9yKHcsIGVy
ci5FcnJvcigpLCBodHRwLlN0YXR1c0JhZFJlcXVlc3QpCgkJcmV0dXJuCgl9
CgogICAgLy8gcHJlcGVuZCB0aGUgcGF0aCB3aXRoIHRoZSBwYXRoIHRvIHRo
ZSBzdGF0aWMgZGlyZWN0b3J5CglwYXRoID0gZmlsZXBhdGguSm9pbihoLnN0
YXRpY1BhdGgsIHBhdGgpCgogICAgLy8gY2hlY2sgd2hldGhlciBhIGZpbGUg
ZXhpc3RzIGF0IHRoZSBnaXZlbiBwYXRoCglfLCBlcnIgPSBvcy5TdGF0KHBh
dGgpCglpZiBvcy5Jc05vdEV4aXN0KGVycikgewoJCS8vIGZpbGUgZG9lcyBu
b3QgZXhpc3QsIHNlcnZlIGluZGV4Lmh0bWwKCQlodHRwLlNlcnZlRmlsZSh3
LCByLCBmaWxlcGF0aC5Kb2luKGguc3RhdGljUGF0aCwgaC5pbmRleFBhdGgp
KQoJCXJldHVybgoJfSBlbHNlIGlmIGVyciAhPSBuaWwgewogICAgICAgIC8v
IGlmIHdlIGdvdCBhbiBlcnJvciAodGhhdCB3YXNuJ3QgdGhhdCB0aGUgZmls
ZSBkb2Vzbid0IGV4aXN0KSBzdGF0aW5nIHRoZQogICAgICAgIC8vIGZpbGUs
IHJldHVybiBhIDUwMCBpbnRlcm5hbCBzZXJ2ZXIgZXJyb3IgYW5kIHN0b3AK
CQlodHRwLkVycm9yKHcsIGVyci5FcnJvcigpLCBodHRwLlN0YXR1c0ludGVy
bmFsU2VydmVyRXJyb3IpCgkJcmV0dXJuCgl9CgogICAgLy8gb3RoZXJ3aXNl
LCB1c2UgaHR0cC5GaWxlU2VydmVyIHRvIHNlcnZlIHRoZSBzdGF0aWMgZGly
CglodHRwLkZpbGVTZXJ2ZXIoaHR0cC5EaXIoaC5zdGF0aWNQYXRoKSkuU2Vy
dmVIVFRQKHcsIHIpCn0KCmZ1bmMgbWFpbigpIHsKCXJvdXRlciA6PSBtdXgu
TmV3Um91dGVyKCkKCglyb3V0ZXIuSGFuZGxlRnVuYygiL2FwaS9oZWFsdGgi
LCBmdW5jKHcgaHR0cC5SZXNwb25zZVdyaXRlciwgciAqaHR0cC5SZXF1ZXN0
KSB7CgkJLy8gYW4gZXhhbXBsZSBBUEkgaGFuZGxlcgoJCWpzb24uTmV3RW5j
b2Rlcih3KS5FbmNvZGUobWFwW3N0cmluZ11ib29seyJvayI6IHRydWV9KQoJ
fSkKCglzcGEgOj0gc3BhSGFuZGxlcntzdGF0aWNQYXRoOiAiYnVpbGQiLCBp
bmRleFBhdGg6ICJpbmRleC5odG1sIn0KCXJvdXRlci5QYXRoUHJlZml4KCIv
IikuSGFuZGxlcihzcGEpCgoJc3J2IDo9ICZodHRwLlNlcnZlcnsKCQlIYW5k
bGVyOiByb3V0ZXIsCgkJQWRkcjogICAgIjEyNy4wLjAuMTo4MDAwIiwKCQkv
LyBHb29kIHByYWN0aWNlOiBlbmZvcmNlIHRpbWVvdXRzIGZvciBzZXJ2ZXJz
IHlvdSBjcmVhdGUhCgkJV3JpdGVUaW1lb3V0OiAxNSAqIHRpbWUuU2Vjb25k
LAoJCVJlYWRUaW1lb3V0OiAgMTUgKiB0aW1lLlNlY29uZCwKCX0KCglsb2cu
RmF0YWwoc3J2Lkxpc3RlbkFuZFNlcnZlKCkpCn0KYGBgCgojIyMgUmVnaXN0
ZXJlZCBVUkxzCgpOb3cgbGV0J3Mgc2VlIGhvdyB0byBidWlsZCByZWdpc3Rl
cmVkIFVSTHMuCgpSb3V0ZXMgY2FuIGJlIG5hbWVkLiBBbGwgcm91dGVzIHRo
YXQgZGVmaW5lIGEgbmFtZSBjYW4gaGF2ZSB0aGVpciBVUkxzIGJ1aWx0LCBv
ciAicmV2ZXJzZWQiLiBXZSBkZWZpbmUgYSBuYW1lIGNhbGxpbmcgYE5hbWUo
KWAgb24gYSByb3V0ZS4gRm9yIGV4YW1wbGU6CgpgYGBnbwpyIDo9IG11eC5O
ZXdSb3V0ZXIoKQpyLkhhbmRsZUZ1bmMoIi9hcnRpY2xlcy97Y2F0ZWdvcnl9
L3tpZDpbMC05XSt9IiwgQXJ0aWNsZUhhbmRsZXIpLgogIE5hbWUoImFydGlj
bGUiKQpgYGAKClRvIGJ1aWxkIGEgVVJMLCBnZXQgdGhlIHJvdXRlIGFuZCBj
YWxsIHRoZSBgVVJMKClgIG1ldGhvZCwgcGFzc2luZyBhIHNlcXVlbmNlIG9m
IGtleS92YWx1ZSBwYWlycyBmb3IgdGhlIHJvdXRlIHZhcmlhYmxlcy4gRm9y
IHRoZSBwcmV2aW91cyByb3V0ZSwgd2Ugd291bGQgZG86CgpgYGBnbwp1cmws
IGVyciA6PSByLkdldCgiYXJ0aWNsZSIpLlVSTCgiY2F0ZWdvcnkiLCAidGVj
aG5vbG9neSIsICJpZCIsICI0MiIpCmBgYAoKLi4uYW5kIHRoZSByZXN1bHQg
d2lsbCBiZSBhIGB1cmwuVVJMYCB3aXRoIHRoZSBmb2xsb3dpbmcgcGF0aDoK
CmBgYAoiL2FydGljbGVzL3RlY2hub2xvZ3kvNDIiCmBgYAoKVGhpcyBhbHNv
IHdvcmtzIGZvciBob3N0IGFuZCBxdWVyeSB2YWx1ZSB2YXJpYWJsZXM6Cgpg
YGBnbwpyIDo9IG11eC5OZXdSb3V0ZXIoKQpyLkhvc3QoIntzdWJkb21haW59
LmV4YW1wbGUuY29tIikuCiAgUGF0aCgiL2FydGljbGVzL3tjYXRlZ29yeX0v
e2lkOlswLTldK30iKS4KICBRdWVyaWVzKCJmaWx0ZXIiLCAie2ZpbHRlcn0i
KS4KICBIYW5kbGVyRnVuYyhBcnRpY2xlSGFuZGxlcikuCiAgTmFtZSgiYXJ0
aWNsZSIpCgovLyB1cmwuU3RyaW5nKCkgd2lsbCBiZSAiaHR0cDovL25ld3Mu
ZXhhbXBsZS5jb20vYXJ0aWNsZXMvdGVjaG5vbG9neS80Mj9maWx0ZXI9Z29y
aWxsYSIKdXJsLCBlcnIgOj0gci5HZXQoImFydGljbGUiKS5VUkwoInN1YmRv
bWFpbiIsICJuZXdzIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgImNhdGVnb3J5IiwgInRlY2hub2xvZ3kiLAogICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAiaWQiLCAiNDIiLAogICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAiZmlsdGVyIiwgImdvcmlsbGEiKQpgYGAKCkFs
bCB2YXJpYWJsZXMgZGVmaW5lZCBpbiB0aGUgcm91dGUgYXJlIHJlcXVpcmVk
LCBhbmQgdGhlaXIgdmFsdWVzIG11c3QgY29uZm9ybSB0byB0aGUgY29ycmVz
cG9uZGluZyBwYXR0ZXJucy4gVGhlc2UgcmVxdWlyZW1lbnRzIGd1YXJhbnRl
ZSB0aGF0IGEgZ2VuZXJhdGVkIFVSTCB3aWxsIGFsd2F5cyBtYXRjaCBhIHJl
Z2lzdGVyZWQgcm91dGUgLS0gdGhlIG9ubHkgZXhjZXB0aW9uIGlzIGZvciBl
eHBsaWNpdGx5IGRlZmluZWQgImJ1aWxkLW9ubHkiIHJvdXRlcyB3aGljaCBu
ZXZlciBtYXRjaC4KClJlZ2V4IHN1cHBvcnQgYWxzbyBleGlzdHMgZm9yIG1h
dGNoaW5nIEhlYWRlcnMgd2l0aGluIGEgcm91dGUuIEZvciBleGFtcGxlLCB3
ZSBjb3VsZCBkbzoKCmBgYGdvCnIuSGVhZGVyc1JlZ2V4cCgiQ29udGVudC1U
eXBlIiwgImFwcGxpY2F0aW9uLyh0ZXh0fGpzb24pIikKYGBgCgouLi5hbmQg
dGhlIHJvdXRlIHdpbGwgbWF0Y2ggYm90aCByZXF1ZXN0cyB3aXRoIGEgQ29u
dGVudC1UeXBlIG9mIGBhcHBsaWNhdGlvbi9qc29uYCBhcyB3ZWxsIGFzIGBh
cHBsaWNhdGlvbi90ZXh0YAoKVGhlcmUncyBhbHNvIGEgd2F5IHRvIGJ1aWxk
IG9ubHkgdGhlIFVSTCBob3N0IG9yIHBhdGggZm9yIGEgcm91dGU6IHVzZSB0
aGUgbWV0aG9kcyBgVVJMSG9zdCgpYCBvciBgVVJMUGF0aCgpYCBpbnN0ZWFk
LiBGb3IgdGhlIHByZXZpb3VzIHJvdXRlLCB3ZSB3b3VsZCBkbzoKCmBgYGdv
Ci8vICJodHRwOi8vbmV3cy5leGFtcGxlLmNvbS8iCmhvc3QsIGVyciA6PSBy
LkdldCgiYXJ0aWNsZSIpLlVSTEhvc3QoInN1YmRvbWFpbiIsICJuZXdzIikK
Ci8vICIvYXJ0aWNsZXMvdGVjaG5vbG9neS80MiIKcGF0aCwgZXJyIDo9IHIu
R2V0KCJhcnRpY2xlIikuVVJMUGF0aCgiY2F0ZWdvcnkiLCAidGVjaG5vbG9n
eSIsICJpZCIsICI0MiIpCmBgYAoKQW5kIGlmIHlvdSB1c2Ugc3Vicm91dGVy
cywgaG9zdCBhbmQgcGF0aCBkZWZpbmVkIHNlcGFyYXRlbHkgY2FuIGJlIGJ1
aWx0IGFzIHdlbGw6CgpgYGBnbwpyIDo9IG11eC5OZXdSb3V0ZXIoKQpzIDo9
IHIuSG9zdCgie3N1YmRvbWFpbn0uZXhhbXBsZS5jb20iKS5TdWJyb3V0ZXIo
KQpzLlBhdGgoIi9hcnRpY2xlcy97Y2F0ZWdvcnl9L3tpZDpbMC05XSt9Iiku
CiAgSGFuZGxlckZ1bmMoQXJ0aWNsZUhhbmRsZXIpLgogIE5hbWUoImFydGlj
bGUiKQoKLy8gImh0dHA6Ly9uZXdzLmV4YW1wbGUuY29tL2FydGljbGVzL3Rl
Y2hub2xvZ3kvNDIiCnVybCwgZXJyIDo9IHIuR2V0KCJhcnRpY2xlIikuVVJM
KCJzdWJkb21haW4iLCAibmV3cyIsCiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICJjYXRlZ29yeSIsICJ0ZWNobm9sb2d5IiwKICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgImlkIiwgIjQyIikKYGBgCgojIyMg
V2Fsa2luZyBSb3V0ZXMKClRoZSBgV2Fsa2AgZnVuY3Rpb24gb24gYG11eC5S
b3V0ZXJgIGNhbiBiZSB1c2VkIHRvIHZpc2l0IGFsbCBvZiB0aGUgcm91dGVz
IHRoYXQgYXJlIHJlZ2lzdGVyZWQgb24gYSByb3V0ZXIuIEZvciBleGFtcGxl
LAp0aGUgZm9sbG93aW5nIHByaW50cyBhbGwgb2YgdGhlIHJlZ2lzdGVyZWQg
cm91dGVzOgoKYGBgZ28KcGFja2FnZSBtYWluCgppbXBvcnQgKAoJImZtdCIK
CSJuZXQvaHR0cCIKCSJzdHJpbmdzIgoKCSJnaXRodWIuY29tL2dvcmlsbGEv
bXV4IgopCgpmdW5jIGhhbmRsZXIodyBodHRwLlJlc3BvbnNlV3JpdGVyLCBy
ICpodHRwLlJlcXVlc3QpIHsKCXJldHVybgp9CgpmdW5jIG1haW4oKSB7Cgly
IDo9IG11eC5OZXdSb3V0ZXIoKQoJci5IYW5kbGVGdW5jKCIvIiwgaGFuZGxl
cikKCXIuSGFuZGxlRnVuYygiL3Byb2R1Y3RzIiwgaGFuZGxlcikuTWV0aG9k
cygiUE9TVCIpCglyLkhhbmRsZUZ1bmMoIi9hcnRpY2xlcyIsIGhhbmRsZXIp
Lk1ldGhvZHMoIkdFVCIpCglyLkhhbmRsZUZ1bmMoIi9hcnRpY2xlcy97aWR9
IiwgaGFuZGxlcikuTWV0aG9kcygiR0VUIiwgIlBVVCIpCglyLkhhbmRsZUZ1
bmMoIi9hdXRob3JzIiwgaGFuZGxlcikuUXVlcmllcygic3VybmFtZSIsICJ7
c3VybmFtZX0iKQoJZXJyIDo9IHIuV2FsayhmdW5jKHJvdXRlICptdXguUm91
dGUsIHJvdXRlciAqbXV4LlJvdXRlciwgYW5jZXN0b3JzIFtdKm11eC5Sb3V0
ZSkgZXJyb3IgewoJCXBhdGhUZW1wbGF0ZSwgZXJyIDo9IHJvdXRlLkdldFBh
dGhUZW1wbGF0ZSgpCgkJaWYgZXJyID09IG5pbCB7CgkJCWZtdC5QcmludGxu
KCJST1VURToiLCBwYXRoVGVtcGxhdGUpCgkJfQoJCXBhdGhSZWdleHAsIGVy
ciA6PSByb3V0ZS5HZXRQYXRoUmVnZXhwKCkKCQlpZiBlcnIgPT0gbmlsIHsK
CQkJZm10LlByaW50bG4oIlBhdGggcmVnZXhwOiIsIHBhdGhSZWdleHApCgkJ
fQoJCXF1ZXJpZXNUZW1wbGF0ZXMsIGVyciA6PSByb3V0ZS5HZXRRdWVyaWVz
VGVtcGxhdGVzKCkKCQlpZiBlcnIgPT0gbmlsIHsKCQkJZm10LlByaW50bG4o
IlF1ZXJpZXMgdGVtcGxhdGVzOiIsIHN0cmluZ3MuSm9pbihxdWVyaWVzVGVt
cGxhdGVzLCAiLCIpKQoJCX0KCQlxdWVyaWVzUmVnZXhwcywgZXJyIDo9IHJv
dXRlLkdldFF1ZXJpZXNSZWdleHAoKQoJCWlmIGVyciA9PSBuaWwgewoJCQlm
bXQuUHJpbnRsbigiUXVlcmllcyByZWdleHBzOiIsIHN0cmluZ3MuSm9pbihx
dWVyaWVzUmVnZXhwcywgIiwiKSkKCQl9CgkJbWV0aG9kcywgZXJyIDo9IHJv
dXRlLkdldE1ldGhvZHMoKQoJCWlmIGVyciA9PSBuaWwgewoJCQlmbXQuUHJp
bnRsbigiTWV0aG9kczoiLCBzdHJpbmdzLkpvaW4obWV0aG9kcywgIiwiKSkK
CQl9CgkJZm10LlByaW50bG4oKQoJCXJldHVybiBuaWwKCX0pCgoJaWYgZXJy
ICE9IG5pbCB7CgkJZm10LlByaW50bG4oZXJyKQoJfQoKCWh0dHAuSGFuZGxl
KCIvIiwgcikKfQpgYGAKCiMjIyBHcmFjZWZ1bCBTaHV0ZG93bgoKR28gMS44
IGludHJvZHVjZWQgdGhlIGFiaWxpdHkgdG8gW2dyYWNlZnVsbHkgc2h1dGRv
d25dKGh0dHBzOi8vZ29sYW5nLm9yZy9kb2MvZ28xLjgjaHR0cF9zaHV0ZG93
bikgYSBgKmh0dHAuU2VydmVyYC4gSGVyZSdzIGhvdyB0byBkbyB0aGF0IGFs
b25nc2lkZSBgbXV4YDoKCmBgYGdvCnBhY2thZ2UgbWFpbgoKaW1wb3J0ICgK
ICAgICJjb250ZXh0IgogICAgImZsYWciCiAgICAibG9nIgogICAgIm5ldC9o
dHRwIgogICAgIm9zIgogICAgIm9zL3NpZ25hbCIKICAgICJ0aW1lIgoKICAg
ICJnaXRodWIuY29tL2dvcmlsbGEvbXV4IgopCgpmdW5jIG1haW4oKSB7CiAg
ICB2YXIgd2FpdCB0aW1lLkR1cmF0aW9uCiAgICBmbGFnLkR1cmF0aW9uVmFy
KCZ3YWl0LCAiZ3JhY2VmdWwtdGltZW91dCIsIHRpbWUuU2Vjb25kICogMTUs
ICJ0aGUgZHVyYXRpb24gZm9yIHdoaWNoIHRoZSBzZXJ2ZXIgZ3JhY2VmdWxs
eSB3YWl0IGZvciBleGlzdGluZyBjb25uZWN0aW9ucyB0byBmaW5pc2ggLSBl
LmcuIDE1cyBvciAxbSIpCiAgICBmbGFnLlBhcnNlKCkKCiAgICByIDo9IG11
eC5OZXdSb3V0ZXIoKQogICAgLy8gQWRkIHlvdXIgcm91dGVzIGFzIG5lZWRl
ZAoKICAgIHNydiA6PSAmaHR0cC5TZXJ2ZXJ7CiAgICAgICAgQWRkcjogICAg
ICAgICAiMC4wLjAuMDo4MDgwIiwKICAgICAgICAvLyBHb29kIHByYWN0aWNl
IHRvIHNldCB0aW1lb3V0cyB0byBhdm9pZCBTbG93bG9yaXMgYXR0YWNrcy4K
ICAgICAgICBXcml0ZVRpbWVvdXQ6IHRpbWUuU2Vjb25kICogMTUsCiAgICAg
ICAgUmVhZFRpbWVvdXQ6ICB0aW1lLlNlY29uZCAqIDE1LAogICAgICAgIElk
bGVUaW1lb3V0OiAgdGltZS5TZWNvbmQgKiA2MCwKICAgICAgICBIYW5kbGVy
OiByLCAvLyBQYXNzIG91ciBpbnN0YW5jZSBvZiBnb3JpbGxhL211eCBpbi4K
ICAgIH0KCiAgICAvLyBSdW4gb3VyIHNlcnZlciBpbiBhIGdvcm91dGluZSBz
byB0aGF0IGl0IGRvZXNuJ3QgYmxvY2suCiAgICBnbyBmdW5jKCkgewogICAg
ICAgIGlmIGVyciA6PSBzcnYuTGlzdGVuQW5kU2VydmUoKTsgZXJyICE9IG5p
bCB7CiAgICAgICAgICAgIGxvZy5QcmludGxuKGVycikKICAgICAgICB9CiAg
ICB9KCkKCiAgICBjIDo9IG1ha2UoY2hhbiBvcy5TaWduYWwsIDEpCiAgICAv
LyBXZSdsbCBhY2NlcHQgZ3JhY2VmdWwgc2h1dGRvd25zIHdoZW4gcXVpdCB2
aWEgU0lHSU5UIChDdHJsK0MpCiAgICAvLyBTSUdLSUxMLCBTSUdRVUlUIG9y
IFNJR1RFUk0gKEN0cmwrLykgd2lsbCBub3QgYmUgY2F1Z2h0LgogICAgc2ln
bmFsLk5vdGlmeShjLCBvcy5JbnRlcnJ1cHQpCgogICAgLy8gQmxvY2sgdW50
aWwgd2UgcmVjZWl2ZSBvdXIgc2lnbmFsLgogICAgPC1jCgogICAgLy8gQ3Jl
YXRlIGEgZGVhZGxpbmUgdG8gd2FpdCBmb3IuCiAgICBjdHgsIGNhbmNlbCA6
PSBjb250ZXh0LldpdGhUaW1lb3V0KGNvbnRleHQuQmFja2dyb3VuZCgpLCB3
YWl0KQogICAgZGVmZXIgY2FuY2VsKCkKICAgIC8vIERvZXNuJ3QgYmxvY2sg
aWYgbm8gY29ubmVjdGlvbnMsIGJ1dCB3aWxsIG90aGVyd2lzZSB3YWl0CiAg
ICAvLyB1bnRpbCB0aGUgdGltZW91dCBkZWFkbGluZS4KICAgIHNydi5TaHV0
ZG93bihjdHgpCiAgICAvLyBPcHRpb25hbGx5LCB5b3UgY291bGQgcnVuIHNy
di5TaHV0ZG93biBpbiBhIGdvcm91dGluZSBhbmQgYmxvY2sgb24KICAgIC8v
IDwtY3R4LkRvbmUoKSBpZiB5b3VyIGFwcGxpY2F0aW9uIHNob3VsZCB3YWl0
IGZvciBvdGhlciBzZXJ2aWNlcwogICAgLy8gdG8gZmluYWxpemUgYmFzZWQg
b24gY29udGV4dCBjYW5jZWxsYXRpb24uCiAgICBsb2cuUHJpbnRsbigic2h1
dHRpbmcgZG93biIpCiAgICBvcy5FeGl0KDApCn0KYGBgCgojIyMgTWlkZGxl
d2FyZQoKTXV4IHN1cHBvcnRzIHRoZSBhZGRpdGlvbiBvZiBtaWRkbGV3YXJl
cyB0byBhIFtSb3V0ZXJdKGh0dHBzOi8vZ29kb2Mub3JnL2dpdGh1Yi5jb20v
Z29yaWxsYS9tdXgjUm91dGVyKSwgd2hpY2ggYXJlIGV4ZWN1dGVkIGluIHRo
ZSBvcmRlciB0aGV5IGFyZSBhZGRlZCBpZiBhIG1hdGNoIGlzIGZvdW5kLCBp
bmNsdWRpbmcgaXRzIHN1YnJvdXRlcnMuCk1pZGRsZXdhcmVzIGFyZSAodHlw
aWNhbGx5KSBzbWFsbCBwaWVjZXMgb2YgY29kZSB3aGljaCB0YWtlIG9uZSBy
ZXF1ZXN0LCBkbyBzb21ldGhpbmcgd2l0aCBpdCwgYW5kIHBhc3MgaXQgZG93
biB0byBhbm90aGVyIG1pZGRsZXdhcmUgb3IgdGhlIGZpbmFsIGhhbmRsZXIu
IFNvbWUgY29tbW9uIHVzZSBjYXNlcyBmb3IgbWlkZGxld2FyZSBhcmUgcmVx
dWVzdCBsb2dnaW5nLCBoZWFkZXIgbWFuaXB1bGF0aW9uLCBvciBgUmVzcG9u
c2VXcml0ZXJgIGhpamFja2luZy4KCk11eCBtaWRkbGV3YXJlcyBhcmUgZGVm
aW5lZCB1c2luZyB0aGUgZGUgZmFjdG8gc3RhbmRhcmQgdHlwZToKCmBgYGdv
CnR5cGUgTWlkZGxld2FyZUZ1bmMgZnVuYyhodHRwLkhhbmRsZXIpIGh0dHAu
SGFuZGxlcgpgYGAKClR5cGljYWxseSwgdGhlIHJldHVybmVkIGhhbmRsZXIg
aXMgYSBjbG9zdXJlIHdoaWNoIGRvZXMgc29tZXRoaW5nIHdpdGggdGhlIGh0
dHAuUmVzcG9uc2VXcml0ZXIgYW5kIGh0dHAuUmVxdWVzdCBwYXNzZWQgdG8g
aXQsIGFuZCB0aGVuIGNhbGxzIHRoZSBoYW5kbGVyIHBhc3NlZCBhcyBwYXJh
bWV0ZXIgdG8gdGhlIE1pZGRsZXdhcmVGdW5jLiBUaGlzIHRha2VzIGFkdmFu
dGFnZSBvZiBjbG9zdXJlcyBiZWluZyBhYmxlIGFjY2VzcyB2YXJpYWJsZXMg
ZnJvbSB0aGUgY29udGV4dCB3aGVyZSB0aGV5IGFyZSBjcmVhdGVkLCB3aGls
ZSByZXRhaW5pbmcgdGhlIHNpZ25hdHVyZSBlbmZvcmNlZCBieSB0aGUgcmVj
ZWl2ZXJzLgoKQSB2ZXJ5IGJhc2ljIG1pZGRsZXdhcmUgd2hpY2ggbG9ncyB0
aGUgVVJJIG9mIHRoZSByZXF1ZXN0IGJlaW5nIGhhbmRsZWQgY291bGQgYmUg
d3JpdHRlbiBhczoKCmBgYGdvCmZ1bmMgbG9nZ2luZ01pZGRsZXdhcmUobmV4
dCBodHRwLkhhbmRsZXIpIGh0dHAuSGFuZGxlciB7CiAgICByZXR1cm4gaHR0
cC5IYW5kbGVyRnVuYyhmdW5jKHcgaHR0cC5SZXNwb25zZVdyaXRlciwgciAq
aHR0cC5SZXF1ZXN0KSB7CiAgICAgICAgLy8gRG8gc3R1ZmYgaGVyZQogICAg
ICAgIGxvZy5QcmludGxuKHIuUmVxdWVzdFVSSSkKICAgICAgICAvLyBDYWxs
IHRoZSBuZXh0IGhhbmRsZXIsIHdoaWNoIGNhbiBiZSBhbm90aGVyIG1pZGRs
ZXdhcmUgaW4gdGhlIGNoYWluLCBvciB0aGUgZmluYWwgaGFuZGxlci4KICAg
ICAgICBuZXh0LlNlcnZlSFRUUCh3LCByKQogICAgfSkKfQpgYGAKCk1pZGRs
ZXdhcmVzIGNhbiBiZSBhZGRlZCB0byBhIHJvdXRlciB1c2luZyBgUm91dGVy
LlVzZSgpYDoKCmBgYGdvCnIgOj0gbXV4Lk5ld1JvdXRlcigpCnIuSGFuZGxl
RnVuYygiLyIsIGhhbmRsZXIpCnIuVXNlKGxvZ2dpbmdNaWRkbGV3YXJlKQpg
YGAKCkEgbW9yZSBjb21wbGV4IGF1dGhlbnRpY2F0aW9uIG1pZGRsZXdhcmUs
IHdoaWNoIG1hcHMgc2Vzc2lvbiB0b2tlbiB0byB1c2VycywgY291bGQgYmUg
d3JpdHRlbiBhczoKCmBgYGdvCi8vIERlZmluZSBvdXIgc3RydWN0CnR5cGUg
YXV0aGVudGljYXRpb25NaWRkbGV3YXJlIHN0cnVjdCB7Cgl0b2tlblVzZXJz
IG1hcFtzdHJpbmddc3RyaW5nCn0KCi8vIEluaXRpYWxpemUgaXQgc29tZXdo
ZXJlCmZ1bmMgKGFtdyAqYXV0aGVudGljYXRpb25NaWRkbGV3YXJlKSBQb3B1
bGF0ZSgpIHsKCWFtdy50b2tlblVzZXJzWyIwMDAwMDAwMCJdID0gInVzZXIw
IgoJYW13LnRva2VuVXNlcnNbImFhYWFhYWFhIl0gPSAidXNlckEiCglhbXcu
dG9rZW5Vc2Vyc1siMDVmNzE3ZTUiXSA9ICJyYW5kb21Vc2VyIgoJYW13LnRv
a2VuVXNlcnNbImRlYWRiZWVmIl0gPSAidXNlcjAiCn0KCi8vIE1pZGRsZXdh
cmUgZnVuY3Rpb24sIHdoaWNoIHdpbGwgYmUgY2FsbGVkIGZvciBlYWNoIHJl
cXVlc3QKZnVuYyAoYW13ICphdXRoZW50aWNhdGlvbk1pZGRsZXdhcmUpIE1p
ZGRsZXdhcmUobmV4dCBodHRwLkhhbmRsZXIpIGh0dHAuSGFuZGxlciB7CiAg
ICByZXR1cm4gaHR0cC5IYW5kbGVyRnVuYyhmdW5jKHcgaHR0cC5SZXNwb25z
ZVdyaXRlciwgciAqaHR0cC5SZXF1ZXN0KSB7CiAgICAgICAgdG9rZW4gOj0g
ci5IZWFkZXIuR2V0KCJYLVNlc3Npb24tVG9rZW4iKQoKICAgICAgICBpZiB1
c2VyLCBmb3VuZCA6PSBhbXcudG9rZW5Vc2Vyc1t0b2tlbl07IGZvdW5kIHsK
ICAgICAgICAJLy8gV2UgZm91bmQgdGhlIHRva2VuIGluIG91ciBtYXAKICAg
ICAgICAJbG9nLlByaW50ZigiQXV0aGVudGljYXRlZCB1c2VyICVzXG4iLCB1
c2VyKQogICAgICAgIAkvLyBQYXNzIGRvd24gdGhlIHJlcXVlc3QgdG8gdGhl
IG5leHQgbWlkZGxld2FyZSAob3IgZmluYWwgaGFuZGxlcikKICAgICAgICAJ
bmV4dC5TZXJ2ZUhUVFAodywgcikKICAgICAgICB9IGVsc2UgewogICAgICAg
IAkvLyBXcml0ZSBhbiBlcnJvciBhbmQgc3RvcCB0aGUgaGFuZGxlciBjaGFp
bgogICAgICAgIAlodHRwLkVycm9yKHcsICJGb3JiaWRkZW4iLCBodHRwLlN0
YXR1c0ZvcmJpZGRlbikKICAgICAgICB9CiAgICB9KQp9CmBgYAoKYGBgZ28K
ciA6PSBtdXguTmV3Um91dGVyKCkKci5IYW5kbGVGdW5jKCIvIiwgaGFuZGxl
cikKCmFtdyA6PSBhdXRoZW50aWNhdGlvbk1pZGRsZXdhcmV7fQphbXcuUG9w
dWxhdGUoKQoKci5Vc2UoYW13Lk1pZGRsZXdhcmUpCmBgYAoKTm90ZTogVGhl
IGhhbmRsZXIgY2hhaW4gd2lsbCBiZSBzdG9wcGVkIGlmIHlvdXIgbWlkZGxl
d2FyZSBkb2Vzbid0IGNhbGwgYG5leHQuU2VydmVIVFRQKClgIHdpdGggdGhl
IGNvcnJlc3BvbmRpbmcgcGFyYW1ldGVycy4gVGhpcyBjYW4gYmUgdXNlZCB0
byBhYm9ydCBhIHJlcXVlc3QgaWYgdGhlIG1pZGRsZXdhcmUgd3JpdGVyIHdh
bnRzIHRvLiBNaWRkbGV3YXJlcyBfc2hvdWxkXyB3cml0ZSB0byBgUmVzcG9u
c2VXcml0ZXJgIGlmIHRoZXkgX2FyZV8gZ29pbmcgdG8gdGVybWluYXRlIHRo
ZSByZXF1ZXN0LCBhbmQgdGhleSBfc2hvdWxkIG5vdF8gd3JpdGUgdG8gYFJl
c3BvbnNlV3JpdGVyYCBpZiB0aGV5IF9hcmUgbm90XyBnb2luZyB0byB0ZXJt
aW5hdGUgaXQuCgojIyMgSGFuZGxpbmcgQ09SUyBSZXF1ZXN0cwoKW0NPUlNN
ZXRob2RNaWRkbGV3YXJlXShodHRwczovL2dvZG9jLm9yZy9naXRodWIuY29t
L2dvcmlsbGEvbXV4I0NPUlNNZXRob2RNaWRkbGV3YXJlKSBpbnRlbmRzIHRv
IG1ha2UgaXQgZWFzaWVyIHRvIHN0cmljdGx5IHNldCB0aGUgYEFjY2Vzcy1D
b250cm9sLUFsbG93LU1ldGhvZHNgIHJlc3BvbnNlIGhlYWRlci4KCiogWW91
IHdpbGwgc3RpbGwgbmVlZCB0byB1c2UgeW91ciBvd24gQ09SUyBoYW5kbGVy
IHRvIHNldCB0aGUgb3RoZXIgQ09SUyBoZWFkZXJzIHN1Y2ggYXMgYEFjY2Vz
cy1Db250cm9sLUFsbG93LU9yaWdpbmAKKiBUaGUgbWlkZGxld2FyZSB3aWxs
IHNldCB0aGUgYEFjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHNgIGhlYWRl
ciB0byBhbGwgdGhlIG1ldGhvZCBtYXRjaGVycyAoZS5nLiBgci5NZXRob2Rz
KGh0dHAuTWV0aG9kR2V0LCBodHRwLk1ldGhvZFB1dCwgaHR0cC5NZXRob2RP
cHRpb25zKWAgLT4gYEFjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHM6IEdF
VCxQVVQsT1BUSU9OU2ApIG9uIGEgcm91dGUKKiBJZiB5b3UgZG8gbm90IHNw
ZWNpZnkgYW55IG1ldGhvZHMsIHRoZW46Cj4gX0ltcG9ydGFudF86IHRoZXJl
IG11c3QgYmUgYW4gYE9QVElPTlNgIG1ldGhvZCBtYXRjaGVyIGZvciB0aGUg
bWlkZGxld2FyZSB0byBzZXQgdGhlIGhlYWRlcnMuCgpIZXJlIGlzIGFuIGV4
YW1wbGUgb2YgdXNpbmcgYENPUlNNZXRob2RNaWRkbGV3YXJlYCBhbG9uZyB3
aXRoIGEgY3VzdG9tIGBPUFRJT05TYCBoYW5kbGVyIHRvIHNldCBhbGwgdGhl
IHJlcXVpcmVkIENPUlMgaGVhZGVyczoKCmBgYGdvCnBhY2thZ2UgbWFpbgoK
aW1wb3J0ICgKCSJuZXQvaHR0cCIKCSJnaXRodWIuY29tL2dvcmlsbGEvbXV4
IgopCgpmdW5jIG1haW4oKSB7CiAgICByIDo9IG11eC5OZXdSb3V0ZXIoKQoK
ICAgIC8vIElNUE9SVEFOVDogeW91IG11c3Qgc3BlY2lmeSBhbiBPUFRJT05T
IG1ldGhvZCBtYXRjaGVyIGZvciB0aGUgbWlkZGxld2FyZSB0byBzZXQgQ09S
UyBoZWFkZXJzCiAgICByLkhhbmRsZUZ1bmMoIi9mb28iLCBmb29IYW5kbGVy
KS5NZXRob2RzKGh0dHAuTWV0aG9kR2V0LCBodHRwLk1ldGhvZFB1dCwgaHR0
cC5NZXRob2RQYXRjaCwgaHR0cC5NZXRob2RPcHRpb25zKQogICAgci5Vc2Uo
bXV4LkNPUlNNZXRob2RNaWRkbGV3YXJlKHIpKQogICAgCiAgICBodHRwLkxp
c3RlbkFuZFNlcnZlKCI6ODA4MCIsIHIpCn0KCmZ1bmMgZm9vSGFuZGxlcih3
IGh0dHAuUmVzcG9uc2VXcml0ZXIsIHIgKmh0dHAuUmVxdWVzdCkgewogICAg
dy5IZWFkZXIoKS5TZXQoIkFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbiIs
ICIqIikKICAgIGlmIHIuTWV0aG9kID09IGh0dHAuTWV0aG9kT3B0aW9ucyB7
CiAgICAgICAgcmV0dXJuCiAgICB9CgogICAgdy5Xcml0ZShbXWJ5dGUoImZv
byIpKQp9CmBgYAoKQW5kIGFuIHJlcXVlc3QgdG8gYC9mb29gIHVzaW5nIHNv
bWV0aGluZyBsaWtlOgoKYGBgYmFzaApjdXJsIGxvY2FsaG9zdDo4MDgwL2Zv
byAtdgpgYGAKCldvdWxkIGxvb2sgbGlrZToKCmBgYGJhc2gKKiAgIFRyeWlu
ZyA6OjEuLi4KKiBUQ1BfTk9ERUxBWSBzZXQKKiBDb25uZWN0ZWQgdG8gbG9j
YWxob3N0ICg6OjEpIHBvcnQgODA4MCAoIzApCj4gR0VUIC9mb28gSFRUUC8x
LjEKPiBIb3N0OiBsb2NhbGhvc3Q6ODA4MAo+IFVzZXItQWdlbnQ6IGN1cmwv
Ny41OS4wCj4gQWNjZXB0OiAqLyoKPiAKPCBIVFRQLzEuMSAyMDAgT0sKPCBB
Y2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzOiBHRVQsUFVULFBBVENILE9Q
VElPTlMKPCBBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46ICoKPCBEYXRl
OiBGcmksIDI4IEp1biAyMDE5IDIwOjEzOjMwIEdNVAo8IENvbnRlbnQtTGVu
Z3RoOiAzCjwgQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PXV0
Zi04CjwgCiogQ29ubmVjdGlvbiAjMCB0byBob3N0IGxvY2FsaG9zdCBsZWZ0
IGludGFjdApmb28KYGBgCgojIyMgVGVzdGluZyBIYW5kbGVycwoKVGVzdGlu
ZyBoYW5kbGVycyBpbiBhIEdvIHdlYiBhcHBsaWNhdGlvbiBpcyBzdHJhaWdo
dGZvcndhcmQsIGFuZCBfbXV4XyBkb2Vzbid0IGNvbXBsaWNhdGUgdGhpcyBh
bnkgZnVydGhlci4gR2l2ZW4gdHdvIGZpbGVzOiBgZW5kcG9pbnRzLmdvYCBh
bmQgYGVuZHBvaW50c190ZXN0LmdvYCwgaGVyZSdzIGhvdyB3ZSdkIHRlc3Qg
YW4gYXBwbGljYXRpb24gdXNpbmcgX211eF8uCgpGaXJzdCwgb3VyIHNpbXBs
ZSBIVFRQIGhhbmRsZXI6CgpgYGBnbwovLyBlbmRwb2ludHMuZ28KcGFja2Fn
ZSBtYWluCgpmdW5jIEhlYWx0aENoZWNrSGFuZGxlcih3IGh0dHAuUmVzcG9u
c2VXcml0ZXIsIHIgKmh0dHAuUmVxdWVzdCkgewogICAgLy8gQSB2ZXJ5IHNp
bXBsZSBoZWFsdGggY2hlY2suCiAgICB3LkhlYWRlcigpLlNldCgiQ29udGVu
dC1UeXBlIiwgImFwcGxpY2F0aW9uL2pzb24iKQogICAgdy5Xcml0ZUhlYWRl
cihodHRwLlN0YXR1c09LKQoKICAgIC8vIEluIHRoZSBmdXR1cmUgd2UgY291
bGQgcmVwb3J0IGJhY2sgb24gdGhlIHN0YXR1cyBvZiBvdXIgREIsIG9yIG91
ciBjYWNoZQogICAgLy8gKGUuZy4gUmVkaXMpIGJ5IHBlcmZvcm1pbmcgYSBz
aW1wbGUgUElORywgYW5kIGluY2x1ZGUgdGhlbSBpbiB0aGUgcmVzcG9uc2Uu
CiAgICBpby5Xcml0ZVN0cmluZyh3LCBgeyJhbGl2ZSI6IHRydWV9YCkKfQoK
ZnVuYyBtYWluKCkgewogICAgciA6PSBtdXguTmV3Um91dGVyKCkKICAgIHIu
SGFuZGxlRnVuYygiL2hlYWx0aCIsIEhlYWx0aENoZWNrSGFuZGxlcikKCiAg
ICBsb2cuRmF0YWwoaHR0cC5MaXN0ZW5BbmRTZXJ2ZSgibG9jYWxob3N0Ojgw
ODAiLCByKSkKfQpgYGAKCk91ciB0ZXN0IGNvZGU6CgpgYGBnbwovLyBlbmRw
b2ludHNfdGVzdC5nbwpwYWNrYWdlIG1haW4KCmltcG9ydCAoCiAgICAibmV0
L2h0dHAiCiAgICAibmV0L2h0dHAvaHR0cHRlc3QiCiAgICAidGVzdGluZyIK
KQoKZnVuYyBUZXN0SGVhbHRoQ2hlY2tIYW5kbGVyKHQgKnRlc3RpbmcuVCkg
ewogICAgLy8gQ3JlYXRlIGEgcmVxdWVzdCB0byBwYXNzIHRvIG91ciBoYW5k
bGVyLiBXZSBkb24ndCBoYXZlIGFueSBxdWVyeSBwYXJhbWV0ZXJzIGZvciBu
b3csIHNvIHdlJ2xsCiAgICAvLyBwYXNzICduaWwnIGFzIHRoZSB0aGlyZCBw
YXJhbWV0ZXIuCiAgICByZXEsIGVyciA6PSBodHRwLk5ld1JlcXVlc3QoIkdF
VCIsICIvaGVhbHRoIiwgbmlsKQogICAgaWYgZXJyICE9IG5pbCB7CiAgICAg
ICAgdC5GYXRhbChlcnIpCiAgICB9CgogICAgLy8gV2UgY3JlYXRlIGEgUmVz
cG9uc2VSZWNvcmRlciAod2hpY2ggc2F0aXNmaWVzIGh0dHAuUmVzcG9uc2VX
cml0ZXIpIHRvIHJlY29yZCB0aGUgcmVzcG9uc2UuCiAgICByciA6PSBodHRw
dGVzdC5OZXdSZWNvcmRlcigpCiAgICBoYW5kbGVyIDo9IGh0dHAuSGFuZGxl
ckZ1bmMoSGVhbHRoQ2hlY2tIYW5kbGVyKQoKICAgIC8vIE91ciBoYW5kbGVy
cyBzYXRpc2Z5IGh0dHAuSGFuZGxlciwgc28gd2UgY2FuIGNhbGwgdGhlaXIg
U2VydmVIVFRQIG1ldGhvZAogICAgLy8gZGlyZWN0bHkgYW5kIHBhc3MgaW4g
b3VyIFJlcXVlc3QgYW5kIFJlc3BvbnNlUmVjb3JkZXIuCiAgICBoYW5kbGVy
LlNlcnZlSFRUUChyciwgcmVxKQoKICAgIC8vIENoZWNrIHRoZSBzdGF0dXMg
Y29kZSBpcyB3aGF0IHdlIGV4cGVjdC4KICAgIGlmIHN0YXR1cyA6PSByci5D
b2RlOyBzdGF0dXMgIT0gaHR0cC5TdGF0dXNPSyB7CiAgICAgICAgdC5FcnJv
cmYoImhhbmRsZXIgcmV0dXJuZWQgd3Jvbmcgc3RhdHVzIGNvZGU6IGdvdCAl
diB3YW50ICV2IiwKICAgICAgICAgICAgc3RhdHVzLCBodHRwLlN0YXR1c09L
KQogICAgfQoKICAgIC8vIENoZWNrIHRoZSByZXNwb25zZSBib2R5IGlzIHdo
YXQgd2UgZXhwZWN0LgogICAgZXhwZWN0ZWQgOj0gYHsiYWxpdmUiOiB0cnVl
fWAKICAgIGlmIHJyLkJvZHkuU3RyaW5nKCkgIT0gZXhwZWN0ZWQgewogICAg
ICAgIHQuRXJyb3JmKCJoYW5kbGVyIHJldHVybmVkIHVuZXhwZWN0ZWQgYm9k
eTogZ290ICV2IHdhbnQgJXYiLAogICAgICAgICAgICByci5Cb2R5LlN0cmlu
ZygpLCBleHBlY3RlZCkKICAgIH0KfQpgYGAKCkluIHRoZSBjYXNlIHRoYXQg
b3VyIHJvdXRlcyBoYXZlIFt2YXJpYWJsZXNdKCNleGFtcGxlcyksIHdlIGNh
biBwYXNzIHRob3NlIGluIHRoZSByZXF1ZXN0LiBXZSBjb3VsZCB3cml0ZQpb
dGFibGUtZHJpdmVuIHRlc3RzXShodHRwczovL2RhdmUuY2hlbmV5Lm5ldC8y
MDEzLzA2LzA5L3dyaXRpbmctdGFibGUtZHJpdmVuLXRlc3RzLWluLWdvKSB0
byB0ZXN0IG11bHRpcGxlCnBvc3NpYmxlIHJvdXRlIHZhcmlhYmxlcyBhcyBu
ZWVkZWQuCgpgYGBnbwovLyBlbmRwb2ludHMuZ28KZnVuYyBtYWluKCkgewog
ICAgciA6PSBtdXguTmV3Um91dGVyKCkKICAgIC8vIEEgcm91dGUgd2l0aCBh
IHJvdXRlIHZhcmlhYmxlOgogICAgci5IYW5kbGVGdW5jKCIvbWV0cmljcy97
dHlwZX0iLCBNZXRyaWNzSGFuZGxlcikKCiAgICBsb2cuRmF0YWwoaHR0cC5M
aXN0ZW5BbmRTZXJ2ZSgibG9jYWxob3N0OjgwODAiLCByKSkKfQpgYGAKCk91
ciB0ZXN0IGZpbGUsIHdpdGggYSB0YWJsZS1kcml2ZW4gdGVzdCBvZiBgcm91
dGVWYXJpYWJsZXNgOgoKYGBgZ28KLy8gZW5kcG9pbnRzX3Rlc3QuZ28KZnVu
YyBUZXN0TWV0cmljc0hhbmRsZXIodCAqdGVzdGluZy5UKSB7CiAgICB0dCA6
PSBbXXN0cnVjdHsKICAgICAgICByb3V0ZVZhcmlhYmxlIHN0cmluZwogICAg
ICAgIHNob3VsZFBhc3MgYm9vbAogICAgfXsKICAgICAgICB7Imdvcm91dGlu
ZXMiLCB0cnVlfSwKICAgICAgICB7ImhlYXAiLCB0cnVlfSwKICAgICAgICB7
ImNvdW50ZXJzIiwgdHJ1ZX0sCiAgICAgICAgeyJxdWVyaWVzIiwgdHJ1ZX0s
CiAgICAgICAgeyJhZGhhZGFlcW0zayIsIGZhbHNlfSwKICAgIH0KCiAgICBm
b3IgXywgdGMgOj0gcmFuZ2UgdHQgewogICAgICAgIHBhdGggOj0gZm10LlNw
cmludGYoIi9tZXRyaWNzLyVzIiwgdGMucm91dGVWYXJpYWJsZSkKICAgICAg
ICByZXEsIGVyciA6PSBodHRwLk5ld1JlcXVlc3QoIkdFVCIsIHBhdGgsIG5p
bCkKICAgICAgICBpZiBlcnIgIT0gbmlsIHsKICAgICAgICAgICAgdC5GYXRh
bChlcnIpCiAgICAgICAgfQoKICAgICAgICByciA6PSBodHRwdGVzdC5OZXdS
ZWNvcmRlcigpCgkKCS8vIE5lZWQgdG8gY3JlYXRlIGEgcm91dGVyIHRoYXQg
d2UgY2FuIHBhc3MgdGhlIHJlcXVlc3QgdGhyb3VnaCBzbyB0aGF0IHRoZSB2
YXJzIHdpbGwgYmUgYWRkZWQgdG8gdGhlIGNvbnRleHQKCXJvdXRlciA6PSBt
dXguTmV3Um91dGVyKCkKICAgICAgICByb3V0ZXIuSGFuZGxlRnVuYygiL21l
dHJpY3Mve3R5cGV9IiwgTWV0cmljc0hhbmRsZXIpCiAgICAgICAgcm91dGVy
LlNlcnZlSFRUUChyciwgcmVxKQoKICAgICAgICAvLyBJbiB0aGlzIGNhc2Us
IG91ciBNZXRyaWNzSGFuZGxlciByZXR1cm5zIGEgbm9uLTIwMCByZXNwb25z
ZQogICAgICAgIC8vIGZvciBhIHJvdXRlIHZhcmlhYmxlIGl0IGRvZXNuJ3Qg
a25vdyBhYm91dC4KICAgICAgICBpZiByci5Db2RlID09IGh0dHAuU3RhdHVz
T0sgJiYgIXRjLnNob3VsZFBhc3MgewogICAgICAgICAgICB0LkVycm9yZigi
aGFuZGxlciBzaG91bGQgaGF2ZSBmYWlsZWQgb24gcm91dGVWYXJpYWJsZSAl
czogZ290ICV2IHdhbnQgJXYiLAogICAgICAgICAgICAgICAgdGMucm91dGVW
YXJpYWJsZSwgcnIuQ29kZSwgaHR0cC5TdGF0dXNPSykKICAgICAgICB9CiAg
ICB9Cn0KYGBgCgojIyBGdWxsIEV4YW1wbGUKCkhlcmUncyBhIGNvbXBsZXRl
LCBydW5uYWJsZSBleGFtcGxlIG9mIGEgc21hbGwgYG11eGAgYmFzZWQgc2Vy
dmVyOgoKYGBgZ28KcGFja2FnZSBtYWluCgppbXBvcnQgKAogICAgIm5ldC9o
dHRwIgogICAgImxvZyIKICAgICJnaXRodWIuY29tL2dvcmlsbGEvbXV4Igop
CgpmdW5jIFlvdXJIYW5kbGVyKHcgaHR0cC5SZXNwb25zZVdyaXRlciwgciAq
aHR0cC5SZXF1ZXN0KSB7CiAgICB3LldyaXRlKFtdYnl0ZSgiR29yaWxsYSFc
biIpKQp9CgpmdW5jIG1haW4oKSB7CiAgICByIDo9IG11eC5OZXdSb3V0ZXIo
KQogICAgLy8gUm91dGVzIGNvbnNpc3Qgb2YgYSBwYXRoIGFuZCBhIGhhbmRs
ZXIgZnVuY3Rpb24uCiAgICByLkhhbmRsZUZ1bmMoIi8iLCBZb3VySGFuZGxl
cikKCiAgICAvLyBCaW5kIHRvIGEgcG9ydCBhbmQgcGFzcyBvdXIgcm91dGVy
IGluCiAgICBsb2cuRmF0YWwoaHR0cC5MaXN0ZW5BbmRTZXJ2ZSgiOjgwMDAi
LCByKSkKfQpgYGAKCiMjIExpY2Vuc2UKCkJTRCBsaWNlbnNlZC4gU2VlIHRo
ZSBMSUNFTlNFIGZpbGUgZm9yIGRldGFpbHMuCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"dmVyc2lvbjogMi4wCgpqb2JzOgogICMgQmFzZSB0ZXN0IGNvbmZpZ3VyYXRp
b24gZm9yIEdvIGxpYnJhcnkgdGVzdHMgRWFjaCBkaXN0aW5jdCB2ZXJzaW9u
IHNob3VsZAogICMgaW5oZXJpdCB0aGlzIGJhc2UsIGFuZCBvdmVycmlkZSAo
YXQgbGVhc3QpIHRoZSBjb250YWluZXIgaW1hZ2UgdXNlZC4KICAidGVzdCI6
ICZ0ZXN0CiAgICBkb2NrZXI6CiAgICAgIC0gaW1hZ2U6IGNpcmNsZWNpL2dv
bGFuZzpsYXRlc3QKICAgIHdvcmtpbmdfZGlyZWN0b3J5OiAvZ28vc3JjL2dp
dGh1Yi5jb20vZ29yaWxsYS9tdXgKICAgIHN0ZXBzOiAmc3RlcHMKICAgICAg
IyBPdXIgYnVpbGQgc3RlcHM6IHdlIGNoZWNrb3V0IHRoZSByZXBvLCBmZXRj
aCBvdXIgZGVwcywgbGludCwgYW5kIGZpbmFsbHkKICAgICAgIyBydW4gImdv
IHRlc3QiIG9uIHRoZSBwYWNrYWdlLgogICAgICAtIGNoZWNrb3V0CiAgICAg
ICMgTG9ncyB0aGUgdmVyc2lvbiBpbiBvdXIgYnVpbGQgbG9ncywgZm9yIHBv
c3Rlcml0eQogICAgICAtIHJ1bjogZ28gdmVyc2lvbgogICAgICAtIHJ1bjoK
ICAgICAgICAgIG5hbWU6ICJGZXRjaCBkZXBlbmRlbmNpZXMiCiAgICAgICAg
ICBjb21tYW5kOiA+CiAgICAgICAgICAgIGdvIGdldCAtdCAtdiAuLy4uLgog
ICAgICAjIE9ubHkgcnVuIGdvZm10LCB2ZXQgJiBsaW50IGFnYWluc3QgdGhl
IGxhdGVzdCBHbyB2ZXJzaW9uCiAgICAgIC0gcnVuOgogICAgICAgICAgbmFt
ZTogIlJ1biBnb2xpbnQiCiAgICAgICAgICBjb21tYW5kOiA+CiAgICAgICAg
ICAgIGlmIFsgIiR7TEFURVNUfSIgPSB0cnVlIF0gJiYgWyAteiAiJHtTS0lQ
X0dPTElOVH0iIF07IHRoZW4KICAgICAgICAgICAgICBnbyBnZXQgLXUgZ29s
YW5nLm9yZy94L2xpbnQvZ29saW50CiAgICAgICAgICAgICAgZ29saW50IC4v
Li4uCiAgICAgICAgICAgIGZpCiAgICAgIC0gcnVuOgogICAgICAgICAgbmFt
ZTogIlJ1biBnb2ZtdCIKICAgICAgICAgIGNvbW1hbmQ6ID4KICAgICAgICAg
ICAgaWYgW1sgIiR7TEFURVNUfSIgPSB0cnVlIF1dOyB0aGVuCiAgICAgICAg
ICAgICAgZGlmZiAtdSA8KGVjaG8gLW4pIDwoZ29mbXQgLWQgLWUgLikKICAg
ICAgICAgICAgZmkKICAgICAgLSBydW46CiAgICAgICAgICBuYW1lOiAiUnVu
IGdvIHZldCIKICAgICAgICAgIGNvbW1hbmQ6ICA+CiAgICAgICAgICAgIGlm
IFtbICIke0xBVEVTVH0iID0gdHJ1ZSBdXTsgdGhlbgogICAgICAgICAgICAg
IGdvIHZldCAtdiAuLy4uLgogICAgICAgICAgICBmaQogICAgICAtIHJ1bjog
Z28gdGVzdCAtdiAtcmFjZSAuLy4uLgoKICAibGF0ZXN0IjoKICAgIDw8OiAq
dGVzdAogICAgZW52aXJvbm1lbnQ6CiAgICAgIExBVEVTVDogdHJ1ZQoKICAi
MS4xMiI6CiAgICA8PDogKnRlc3QKICAgIGRvY2tlcjoKICAgICAgLSBpbWFn
ZTogY2lyY2xlY2kvZ29sYW5nOjEuMTIKCiAgIjEuMTEiOgogICAgPDw6ICp0
ZXN0CiAgICBkb2NrZXI6CiAgICAgIC0gaW1hZ2U6IGNpcmNsZWNpL2dvbGFu
ZzoxLjExCgogICIxLjEwIjoKICAgIDw8OiAqdGVzdAogICAgZG9ja2VyOgog
ICAgICAtIGltYWdlOiBjaXJjbGVjaS9nb2xhbmc6MS4xMAoKICAiMS45IjoK
ICAgIDw8OiAqdGVzdAogICAgZG9ja2VyOgogICAgICAtIGltYWdlOiBjaXJj
bGVjaS9nb2xhbmc6MS45CgogICIxLjgiOgogICAgPDw6ICp0ZXN0CiAgICBk
b2NrZXI6CiAgICAgIC0gaW1hZ2U6IGNpcmNsZWNpL2dvbGFuZzoxLjgKCiAg
IjEuNyI6CiAgICA8PDogKnRlc3QKICAgIGRvY2tlcjoKICAgICAgLSBpbWFn
ZTogY2lyY2xlY2kvZ29sYW5nOjEuNwoKd29ya2Zsb3dzOgogIHZlcnNpb246
IDIKICBidWlsZDoKICAgIGpvYnM6CiAgICAgIC0gImxhdGVzdCIKICAgICAg
LSAiMS4xMiIKICAgICAgLSAiMS4xMSIKICAgICAgLSAiMS4xMCIKICAgICAg
LSAiMS45IgogICAgICAtICIxLjgiCiAgICAgIC0gIjEuNyIK
",,,,,,,,,,,,,,,,,,,,,,,
b'pydata-book',4844734,"b'Materials and IPython notebooks for ""Python for Data Analysis"" by Wes McKinney, published by O\'Reilly Media'",b'Jupyter Notebook',17,10475,,10475,False,b'https://api.github.com/repos/wesm/pydata-book/forks',"IyBQeXRob24gZm9yIERhdGEgQW5hbHlzaXMsIDJuZCBFZGl0aW9uCgpNYXRl
cmlhbHMgYW5kIElQeXRob24gbm90ZWJvb2tzIGZvciAiUHl0aG9uIGZvciBE
YXRhIEFuYWx5c2lzIiBieSBXZXMgTWNLaW5uZXksCnB1Ymxpc2hlZCBieSBP
J1JlaWxseSBNZWRpYQoKW0J1eSB0aGUgYm9vayBvbiBBbWF6b25dWzFdCgo8
YSBocmVmPSJodHRwczovL25vdGVib29rcy5henVyZS5jb20vaW1wb3J0L2do
L3dlc20vcHlkYXRhLWJvb2siPjxpbWcgc3JjPSJodHRwczovL25vdGVib29r
cy5henVyZS5jb20vbGF1bmNoLnBuZyIgLz48L2E+CgpGb2xsb3cgV2VzIG9u
IFR3aXR0ZXI6IFshW1R3aXR0ZXIgRm9sbG93XShodHRwczovL2ltZy5zaGll
bGRzLmlvL3R3aXR0ZXIvZm9sbG93L3dlc21ja2lubi5zdmc/c3R5bGU9c29j
aWFsJmxhYmVsPUZvbGxvdyldKGh0dHBzOi8vdHdpdHRlci5jb20vd2VzbWNr
aW5uKQoKIyAxc3QgRWRpdGlvbiBSZWFkZXJzCgpJZiB5b3UgYXJlIHJlYWRp
bmcgdGhlIFsxc3QgRWRpdGlvbl1bMV0gKHB1Ymxpc2hlZCBpbiAyMDEyKSwg
cGxlYXNlIGZpbmQgdGhlCnJlb3JnYW5pemVkIGJvb2sgbWF0ZXJpYWxzIG9u
IHRoZSBbYDFzdC1lZGl0aW9uYCBicmFuY2hdWzJdLgoKIyBUcmFuc2xhdGlv
bnMKCiogW0NoaW5lc2VdWzNdIGJ5IFh1IExpYW5nCgojIyBJUHl0aG9uIE5v
dGVib29rczoKCiogW0NoYXB0ZXIgMjogUHl0aG9uIExhbmd1YWdlIEJhc2lj
cywgSVB5dGhvbiwgYW5kIEp1cHl0ZXIgTm90ZWJvb2tzXShodHRwOi8vbmJ2
aWV3ZXIuaXB5dGhvbi5vcmcvZ2l0aHViL3B5ZGF0YS9weWRhdGEtYm9vay9i
bG9iLzJuZC1lZGl0aW9uL2NoMDIuaXB5bmIpCiogW0NoYXB0ZXIgMzogQnVp
bHQtaW4gRGF0YSBTdHJ1Y3R1cmVzLCBGdW5jdGlvbnMsIGFuZCBGaWxlc10o
aHR0cDovL25idmlld2VyLmlweXRob24ub3JnL2dpdGh1Yi9weWRhdGEvcHlk
YXRhLWJvb2svYmxvYi8ybmQtZWRpdGlvbi9jaDAzLmlweW5iKQoqIFtDaGFw
dGVyIDQ6IE51bVB5IEJhc2ljczogQXJyYXlzIGFuZCBWZWN0b3JpemVkIENv
bXB1dGF0aW9uXShodHRwOi8vbmJ2aWV3ZXIuaXB5dGhvbi5vcmcvZ2l0aHVi
L3B5ZGF0YS9weWRhdGEtYm9vay9ibG9iLzJuZC1lZGl0aW9uL2NoMDQuaXB5
bmIpCiogW0NoYXB0ZXIgNTogR2V0dGluZyBTdGFydGVkIHdpdGggcGFuZGFz
XShodHRwOi8vbmJ2aWV3ZXIuaXB5dGhvbi5vcmcvZ2l0aHViL3B5ZGF0YS9w
eWRhdGEtYm9vay9ibG9iLzJuZC1lZGl0aW9uL2NoMDUuaXB5bmIpCiogW0No
YXB0ZXIgNjogRGF0YSBMb2FkaW5nLCBTdG9yYWdlLCBhbmQgRmlsZSBGb3Jt
YXRzXShodHRwOi8vbmJ2aWV3ZXIuaXB5dGhvbi5vcmcvZ2l0aHViL3B5ZGF0
YS9weWRhdGEtYm9vay9ibG9iLzJuZC1lZGl0aW9uL2NoMDYuaXB5bmIpCiog
W0NoYXB0ZXIgNzogRGF0YSBDbGVhbmluZyBhbmQgUHJlcGFyYXRpb25dKGh0
dHA6Ly9uYnZpZXdlci5pcHl0aG9uLm9yZy9naXRodWIvcHlkYXRhL3B5ZGF0
YS1ib29rL2Jsb2IvMm5kLWVkaXRpb24vY2gwNy5pcHluYikKKiBbQ2hhcHRl
ciA4OiBEYXRhIFdyYW5nbGluZzogSm9pbiwgQ29tYmluZSwgYW5kIFJlc2hh
cGVdKGh0dHA6Ly9uYnZpZXdlci5pcHl0aG9uLm9yZy9naXRodWIvcHlkYXRh
L3B5ZGF0YS1ib29rL2Jsb2IvMm5kLWVkaXRpb24vY2gwOC5pcHluYikKKiBb
Q2hhcHRlciA5OiBQbG90dGluZyBhbmQgVmlzdWFsaXphdGlvbl0oaHR0cDov
L25idmlld2VyLmlweXRob24ub3JnL2dpdGh1Yi9weWRhdGEvcHlkYXRhLWJv
b2svYmxvYi8ybmQtZWRpdGlvbi9jaDA5LmlweW5iKQoqIFtDaGFwdGVyIDEw
OiBEYXRhIEFnZ3JlZ2F0aW9uIGFuZCBHcm91cCBPcGVyYXRpb25zXShodHRw
Oi8vbmJ2aWV3ZXIuaXB5dGhvbi5vcmcvZ2l0aHViL3B5ZGF0YS9weWRhdGEt
Ym9vay9ibG9iLzJuZC1lZGl0aW9uL2NoMTAuaXB5bmIpCiogW0NoYXB0ZXIg
MTE6IFRpbWUgU2VyaWVzXShodHRwOi8vbmJ2aWV3ZXIuaXB5dGhvbi5vcmcv
Z2l0aHViL3B5ZGF0YS9weWRhdGEtYm9vay9ibG9iLzJuZC1lZGl0aW9uL2No
MTEuaXB5bmIpCiogW0NoYXB0ZXIgMTI6IEFkdmFuY2VkIHBhbmRhc10oaHR0
cDovL25idmlld2VyLmlweXRob24ub3JnL2dpdGh1Yi9weWRhdGEvcHlkYXRh
LWJvb2svYmxvYi8ybmQtZWRpdGlvbi9jaDEyLmlweW5iKQoqIFtDaGFwdGVy
IDEzOiBJbnRyb2R1Y3Rpb24gdG8gTW9kZWxpbmcgTGlicmFyaWVzIGluIFB5
dGhvbl0oaHR0cDovL25idmlld2VyLmlweXRob24ub3JnL2dpdGh1Yi9weWRh
dGEvcHlkYXRhLWJvb2svYmxvYi8ybmQtZWRpdGlvbi9jaDEzLmlweW5iKQoq
IFtDaGFwdGVyIDE0OiBEYXRhIEFuYWx5c2lzIEV4YW1wbGVzXShodHRwOi8v
bmJ2aWV3ZXIuaXB5dGhvbi5vcmcvZ2l0aHViL3B5ZGF0YS9weWRhdGEtYm9v
ay9ibG9iLzJuZC1lZGl0aW9uL2NoMTQuaXB5bmIpCiogW0FwcGVuZGl4IEE6
IEFkdmFuY2VkIE51bVB5XShodHRwOi8vbmJ2aWV3ZXIuaXB5dGhvbi5vcmcv
Z2l0aHViL3B5ZGF0YS9weWRhdGEtYm9vay9ibG9iLzJuZC1lZGl0aW9uL2Fw
cGEuaXB5bmIpCgojIyBMaWNlbnNlCgojIyMgQ29kZQoKVGhlIGNvZGUgaW4g
dGhpcyByZXBvc2l0b3J5LCBpbmNsdWRpbmcgYWxsIGNvZGUgc2FtcGxlcyBp
biB0aGUgbm90ZWJvb2tzIGxpc3RlZAphYm92ZSwgaXMgcmVsZWFzZWQgdW5k
ZXIgdGhlIFtNSVQgbGljZW5zZV0oTElDRU5TRS1DT0RFKS4gUmVhZCBtb3Jl
IGF0IHRoZQpbT3BlbiBTb3VyY2UgSW5pdGlhdGl2ZV0oaHR0cHM6Ly9vcGVu
c291cmNlLm9yZy9saWNlbnNlcy9NSVQpLgoKWzFdOiBodHRwOi8vYW16bi50
by8ydnZCaWpCClsyXTogaHR0cHM6Ly9naXRodWIuY29tL3dlc20vcHlkYXRh
LWJvb2svdHJlZS8xc3QtZWRpdGlvbgpbM106IGh0dHBzOi8vZ2l0aHViLmNv
bS9CcmFtYmxlWHUvcHlkYXRhLW5vdGVib29r
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'headroom.js',11960085,b'Give your pages some headroom. Hide your header until you need it',b'JavaScript',17,10467,,10467,False,b'https://api.github.com/repos/WickyNilliams/headroom.js/forks',"IyBIZWFkcm9vbS5qcwoKSGVhZHJvb20uanMgaXMgYSBsaWdodHdlaWdodCwg
aGlnaC1wZXJmb3JtYW5jZSBKUyB3aWRnZXQgKHdpdGggbm8gZGVwZW5kZW5j
aWVzKSB0aGF0IGFsbG93cyB5b3UgdG8gcmVhY3QgdG8gdGhlIHVzZXIncyBz
Y3JvbGwuIFRoZSBoZWFkZXIgb24gW3RoaXMgc2l0ZV0oaHR0cDovL3dpY2t5
Lm5pbGxpYS5tcy9oZWFkcm9vbS5qcykgaXMgYSBsaXZpbmcgZXhhbXBsZSwg
aXQgc2xpZGVzIG91dCBvZiB2aWV3IHdoZW4gc2Nyb2xsaW5nIGRvd24gYW5k
IHNsaWRlcyBiYWNrIGluIHdoZW4gc2Nyb2xsaW5nIHVwLgoKIyMgSW5zdGFs
bGF0aW9uCgpIZWFkcm9vbS5qcyBpcyBhdmFpbGFibGUgb24gbnBtLiBUbyBp
bnN0YWxsOgoKYGBgYmFzaApucG0gaW5zdGFsbCBoZWFkcm9vbS5qcyAtLXNh
dmUKCiMgb3IuLi4KeWFybiBhZGQgaGVhZHJvb20uanMKYGBgCgpBIGEgdW5p
dmVyc2FsIGJ1aWxkIChzdWl0YWJsZSBmb3Igc2NyaXB0IHRhZ3MsIENvbW1v
bkpTLCBhbmQgQU1EKSBpcyBhdmFpbGFibGUgZnJvbSB1bnBrZy5jb206Cgpb
aHR0cHM6Ly91bnBrZy5jb20vaGVhZHJvb20uanNdKGh0dHBzOi8vdW5wa2cu
Y29tL2hlYWRyb29tLmpzKQoKIyMgRG9jdW1lbnRhdGlvbgoKRm9yIGNvbXBs
ZXRlIGRvY3VtZW50YXRpb24gcGxlYXNlIHZpc2l0IHRoZSBbaGVhZHJvb20u
anMgd2Vic2l0ZV0oaHR0cDovL3dpY2t5Lm5pbGxpYS5tcy9oZWFkcm9vbS5q
cykuCgojIyBRdWljayBzdGFydAoKQWZ0ZXIgaW5zdGFsbGluZyBgaGVhZHJv
b20uanNgLiBUaGUgZm9sbG93aW5nIEpTIHdpbGwgY3JlYXRlIGFuZCBpbml0
aWFsaXNlIGEgaGVhZHJvb20gaW5zdGFuY2U6CgpgYGBqcwppbXBvcnQgSGVh
ZHJvb20gZnJvbSAiaGVhZHJvb20uanMiOwoKLy8gc2VsZWN0IHlvdXIgaGVh
ZGVyIG9yIHdoYXRldmVyIGVsZW1lbnQgeW91IHdpc2gKY29uc3QgaGVhZGVy
ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiaGVhZGVyIik7Cgpjb25zdCBo
ZWFkcm9vbSA9IG5ldyBIZWFkcm9vbShoZWFkZXIpOwpoZWFkcm9vbS5pbml0
KCk7CmBgYAoKVGhlbiB5b3UgY2FuIGFkZCB0aGUgZm9sbG93aW5nIENTUyB0
byB5b3VyIHBhZ2U6CgpgYGBjc3MKLmhlYWRyb29tIHsKICB3aWxsLWNoYW5n
ZTogdHJhbnNmb3JtOwogIHRyYW5zaXRpb246IHRyYW5zZm9ybSAyMDBtcyBs
aW5lYXI7Cn0KLmhlYWRyb29tLS1waW5uZWQgewogIHRyYW5zZm9ybTogdHJh
bnNsYXRlWSgwJSk7Cn0KLmhlYWRyb29tLS11bnBpbm5lZCB7CiAgdHJhbnNm
b3JtOiB0cmFuc2xhdGVZKC0xMDAlKTsKfQpgYGAKCllvdSBzaG91bGQgbm93
IHNlZSB5b3VyIGhlYWRlciBzbGlkZSBpbiBhbmQgb3V0IGluIHJlc3BvbnNl
IHRvIHRoZSB1c2VyJ3Mgc2Nyb2xsLgoKIyMgQ29udHJpYnV0aW9ucyAmIElz
c3VlcwoKQ29udHJpYnV0aW9ucyBhcmUgd2VsY29tZS4gUGxlYXNlIGNsZWFy
bHkgZXhwbGFpbiB0aGUgcHVycG9zZSBvZiB0aGUgUFIgYW5kIGZvbGxvdyB0
aGUgY3VycmVudCBjb2RlIHN0eWxlLgoKSXNzdWVzIGNhbiBiZSByZXNvbHZl
ZCBxdWlja2VzdCBpZiB0aGV5IGFyZSBkZXNjcmlwdGl2ZSBhbmQgaW5jbHVk
ZSBib3RoIGEgcmVkdWNlZCB0ZXN0IGNhc2UgYW5kIGEgc2V0IG9mIHN0ZXBz
IHRvIHJlcHJvZHVjZS4KCiMjIENvbnRyaWJ1dGluZyBHdWlkZQoKIyMjIFNl
dHVwCgpUaGUgZm9sbG93aW5nIHN0ZXBzIHdpbGwgZ2V0IHlvdSBzZXR1cCB0
byBjb250cmlidXRlIGNoYW5nZXMgdG8gdGhpcyByZXBvOgoKMS4gRm9yayB0
aGUgcmVwbyAoY2xpY2sgdGhlIDxrYmQ+Rm9yazwva2JkPiBidXR0b24gYXQg
dGhlIHRvcCByaWdodCBvZiBbdGhpcyBwYWdlXShodHRwczovL2dpdGh1Yi5j
b20vV2lja3lOaWxsaWFtcy9oZWFkcm9vbS5qcykpCjIuIENsb25lIHlvdXIg
Zm9yayBsb2NhbGx5CgpgYGBiYXNoCmdpdCBjbG9uZSBodHRwczovL2dpdGh1
Yi5jb20vPHlvdXJfZ2l0aHViX3VzZXJuYW1lPi9oZWFkcm9vbS5qcy5naXQK
Y2QgaGVhZHJvb20uanMKYGBgCgozLiBJbnN0YWxsIGRlcGVuZGVuY2llcy4g
VGhpcyByZXBvIHVzZXMgYG5wbWAsIHNvIHlvdSBzaG91bGQgdG9vLgoKYGBg
YmFzaApucG0gaW5zdGFsbApgYGAKCiMjIyBCdWlsZGluZwoKVG8gYnVpbGQg
dGhlIHByb2plY3Q6CgpgYGBiYXNoCm5wbSBydW4gYnVpbGQKYGBgCgpUbyBz
dGFydCBhIHdhdGNoZXIgZm9yIGJ1aWxkaW5nIHRoZSBwcm9qZWN0IGFuZCBy
dW5uaW5nIHRlc3RzOgoKYGBgYmFzaApucG0gc3RhcnQKYGBgCgojIyMgVGVz
dGluZwoKVG8gcnVuIHRoZSB0ZXN0IHN1aXRlIGluIGhlYWRsZXNzIG1vZGU6
CgpgYGBiYXNoCm5wbSB0ZXN0CmBgYAoKIyMgTGljZW5zZQoKTGljZW5zZWQg
dW5kZXIgdGhlIFtNSVQgTGljZW5zZV0oaHR0cDovL3d3dy5vcGVuc291cmNl
Lm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHApLgo=
",,"bGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczoKICAtICIxMCIKYWRkb25zOgog
IGFwdDoKICAgIHBhY2thZ2VzOgogICAgICAjIFVidW50dSAxNisgZG9lcyBu
b3QgaW5zdGFsbCB0aGlzIGRlcGVuZGVuY3kgYnkgZGVmYXVsdCwgc28gd2Ug
bmVlZCB0byBpbnN0YWxsIGl0IG91cnNlbHZlcwogICAgICAtIGxpYmdjb25m
LTItNApjYWNoZToKICAjIENhY2hlcyAkSE9NRS8ubnBtIHdoZW4gbnBtIGNp
IGlzIGRlZmF1bHQgc2NyaXB0IGNvbW1hbmQKICAjIENhY2hlcyBub2RlX21v
ZHVsZXMgaW4gYWxsIG90aGVyIGNhc2VzCiAgbnBtOiB0cnVlCiAgZGlyZWN0
b3JpZXM6CiAgICAjIHdlIGFsc28gbmVlZCB0byBjYWNoZSBmb2xkZXIgd2l0
aCBDeXByZXNzIGJpbmFyeQogICAgLSB+Ly5jYWNoZQo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'appium',7530570,"b':iphone: Automation for iOS, Android, and Windows Apps.'",b'JavaScript',168,10467,,10467,False,b'https://api.github.com/repos/appium/appium/forks',"IyMgQXBwaXVtCgpbIVtOUE0gdmVyc2lvbl0oaHR0cHM6Ly9iYWRnZS5mdXJ5
LmlvL2pzL2FwcGl1bS5zdmcpXShodHRwczovL25wbWpzLm9yZy9wYWNrYWdl
L2FwcGl1bSkKWyFbRGVwZW5kZW5jeSBTdGF0dXNdKGh0dHBzOi8vZGF2aWQt
ZG0ub3JnL2FwcGl1bS9hcHBpdW0uc3ZnKV0oaHR0cHM6Ly9kYXZpZC1kbS5v
cmcvYXBwaXVtL2FwcGl1bSkKWyFbZGV2RGVwZW5kZW5jeSBTdGF0dXNdKGh0
dHBzOi8vZGF2aWQtZG0ub3JnL2FwcGl1bS9hcHBpdW0vZGV2LXN0YXR1cy5z
dmcpXShodHRwczovL2RhdmlkLWRtLm9yZy9hcHBpdW0vYXBwaXVtI2luZm89
ZGV2RGVwZW5kZW5jaWVzKQoKWyFbTW9udGhseSBEb3dubG9hZHNdKGh0dHBz
Oi8vaW1nLnNoaWVsZHMuaW8vbnBtL2RtL2FwcGl1bS5zdmcpXShodHRwczov
L25wbWpzLm9yZy9wYWNrYWdlL2FwcGl1bSkKClshW0ZPU1NBIFN0YXR1c10o
aHR0cHM6Ly9hcHAuZm9zc2EuaW8vYXBpL3Byb2plY3RzL2dpdCUyQmh0dHBz
JTNBJTJGJTJGZ2l0aHViLmNvbSUyRmFwcGl1bSUyRmFwcGl1bS5zdmc/dHlw
ZT1zaGllbGQpXShodHRwczovL2FwcC5mb3NzYS5pby9wcm9qZWN0cy9naXQl
MkJodHRwcyUzQSUyRiUyRmdpdGh1Yi5jb20lMkZhcHBpdW0lMkZhcHBpdW0/
cmVmPWJhZGdlX3NoaWVsZCkKWyFbR3JlZW5rZWVwZXIgYmFkZ2VdKGh0dHBz
Oi8vYmFkZ2VzLmdyZWVua2VlcGVyLmlvL2FwcGl1bS9hcHBpdW0uc3ZnKV0o
aHR0cHM6Ly9ncmVlbmtlZXBlci5pby8pCgpBcHBpdW0gaXMgYW4gb3BlbiBz
b3VyY2UsIGNyb3NzLXBsYXRmb3JtIHRlc3QgYXV0b21hdGlvbiB0b29sIGZv
ciBuYXRpdmUsCmh5YnJpZCBhbmQgbW9iaWxlIHdlYiBhbmQgZGVza3RvcCBh
cHBzLiBXZSBzdXBwb3J0IHNpbXVsYXRvcnMgKGlPUyksIGVtdWxhdG9ycwoo
QW5kcm9pZCksIGFuZCByZWFsIGRldmljZXMgKGlPUywgQW5kcm9pZCwgV2lu
ZG93cywgTWFjKS4KCldhbnQgdG8gc2tpcCBzdHJhaWdodCB0byB0aGUgYWN0
aW9uPyBDaGVjayBvdXQgb3VyIFtnZXR0aW5nCnN0YXJ0ZWRdKC9kb2NzL2Vu
L2Fib3V0LWFwcGl1bS9nZXR0aW5nLXN0YXJ0ZWQubWQpIGRvYy4KCiMjIyBT
dXBwb3J0ZWQgUGxhdGZvcm1zCgpBcHBpdW0gc3VwcG9ydHMgYXBwIGF1dG9t
YXRpb24gYWNyb3NzIGEgdmFyaWV0eSBvZiBwbGF0Zm9ybXMsIGxpa2UgaU9T
LApBbmRyb2lkLCBhbmQgV2luZG93cy4gRWFjaCBwbGF0Zm9ybSBpcyBzdXBw
b3J0ZWQgYnkgb25lIG9yIG1vcmUgImRyaXZlcnMiLAp3aGljaCBrbm93IGhv
dyB0byBhdXRvbWF0ZSB0aGF0IHBhcnRpY3VsYXIgcGxhdGZvcm0uIENob29z
ZSBhIGRyaXZlciBiZWxvdyBmb3IKc3BlY2lmaWMgaW5mb3JtYXRpb24gYWJv
dXQgaG93IHRoYXQgZHJpdmVyIHdvcmtzIGFuZCBob3cgdG8gc2V0IGl0IHVw
OgoKKiBpT1MKICAgICogVGhlIFtYQ1VJVGVzdCBEcml2ZXJdKC9kb2NzL2Vu
L2RyaXZlcnMvaW9zLXhjdWl0ZXN0Lm1kKQogICAgKiAoREVQUkVDQVRFRCkg
VGhlIFtVSUF1dG9tYXRpb24gRHJpdmVyXSgvZG9jcy9lbi9kcml2ZXJzL2lv
cy11aWF1dG9tYXRpb24ubWQpCiogQW5kcm9pZAogICAgKiBUaGUgW0VzcHJl
c3NvIERyaXZlcl0oL2RvY3MvZW4vZHJpdmVycy9hbmRyb2lkLWVzcHJlc3Nv
Lm1kKQogICAgKiBUaGUgW1VpQXV0b21hdG9yMiBEcml2ZXJdKC9kb2NzL2Vu
L2RyaXZlcnMvYW5kcm9pZC11aWF1dG9tYXRvcjIubWQpCiAgICAqIChERVBS
RUNBVEVEKSBUaGUgW1VpQXV0b21hdG9yIERyaXZlcl0oL2RvY3MvZW4vZHJp
dmVycy9hbmRyb2lkLXVpYXV0b21hdG9yLm1kKQoqIFRoZSBbV2luZG93cyBE
cml2ZXJdKC9kb2NzL2VuL2RyaXZlcnMvd2luZG93cy5tZCkgKGZvciBXaW5k
b3dzIERlc2t0b3AgYXBwcykKKiBUaGUgW01hYyBEcml2ZXJdKC9kb2NzL2Vu
L2RyaXZlcnMvbWFjLm1kKSAoZm9yIE1hYyBEZXNrdG9wIGFwcHMpCgojIyMg
V2h5IEFwcGl1bT8KCjEuIFlvdSBkb24ndCBoYXZlIHRvIHJlY29tcGlsZSB5
b3VyIGFwcCBvciBtb2RpZnkgaXQgaW4gYW55IHdheSwgZHVlCiAgIHRvIHVz
ZSBvZiBzdGFuZGFyZCBhdXRvbWF0aW9uIEFQSXMgb24gYWxsIHBsYXRmb3Jt
cy4KMi4gWW91IGNhbiB3cml0ZSB0ZXN0cyB3aXRoIHlvdXIgZmF2b3JpdGUg
ZGV2IHRvb2xzIHVzaW5nIGFueQogICBbV2ViRHJpdmVyXShodHRwczovL3cz
Yy5naXRodWIuaW8vd2ViZHJpdmVyL3dlYmRyaXZlci1zcGVjLmh0bWwpLWNv
bXBhdGlibGUKICAgbGFuZ3VhZ2Ugc3VjaCBhcyBKYXZhLCBPYmplY3RpdmUt
QywgSmF2YVNjcmlwdCAoTm9kZSksIFBIUCwgUHl0aG9uLCBSdWJ5LAogICBD
IywgQ2xvanVyZSwgb3IgUGVybCB3aXRoIHRoZSBTZWxlbml1bSBXZWJEcml2
ZXIgQVBJIGFuZCBbbGFuZ3VhZ2Utc3BlY2lmaWMKICAgY2xpZW50IGxpYnJh
cmllc10oL2RvY3MvZW4vYWJvdXQtYXBwaXVtL2FwcGl1bS1jbGllbnRzLm1k
KS4KMy4gWW91IGNhbiB1c2UgYW55IHRlc3RpbmcgZnJhbWV3b3JrLgo0LiBB
cHBpdW0gaGFzIGJ1aWx0LWluIG1vYmlsZSB3ZWIgYW5kIGh5YnJpZCBhcHAg
c3VwcG9ydC4gV2l0aGluIHRoZSBzYW1lCiAgIHNjcmlwdCB5b3UgY2FuIHN3
aXRjaCBzZWFtbGVzc2x5IGJldHdlZW4gbmF0aXZlIGFwcCBhdXRvbWF0aW9u
IGFuZCB3ZWJ2aWV3CiAgIGF1dG9tYXRpb24sIGFsbCB1c2luZyB0aGUgV2Vi
RHJpdmVyIG1vZGVsIHRoYXQncyBhbHJlYWR5IHRoZSBzdGFuZGFyZCBmb3IK
ICAgd2ViIGF1dG9tYXRpb24uCgpJbnZlc3RpbmcgaW4gdGhlCltXZWJEcml2
ZXJdKGh0dHBzOi8vdzNjLmdpdGh1Yi5pby93ZWJkcml2ZXIvd2ViZHJpdmVy
LXNwZWMuaHRtbCkgcHJvdG9jb2wgbWVhbnMKeW91IGFyZSBiZXR0aW5nIG9u
IGEgc2luZ2xlLCBmcmVlIGFuZCBvcGVuIHByb3RvY29sIGZvciB0ZXN0aW5n
IHRoYXQgaGFzIGJlY29tZQphIHdlYiBzdGFuZGFyZC4gRG9uJ3QgbG9jayB5
b3Vyc2VsZiBpbnRvIGEgcHJvcHJpZXRhcnkgc3RhY2suCgpGb3IgZXhhbXBs
ZSwgaWYgeW91IHVzZSBBcHBsZSdzIFhDVUlUZXN0IGxpYnJhcnkgd2l0aG91
dCBBcHBpdW0geW91IGNhbiBvbmx5CndyaXRlIHRlc3RzIHVzaW5nIE9iai1D
L1N3aWZ0LCBhbmQgeW91IGNhbiBvbmx5IHJ1biB0ZXN0cyB0aHJvdWdoIFhj
b2RlLgpTaW1pbGFybHksIHdpdGggR29vZ2xlJ3MgVWlBdXRvbWF0b3Igb3Ig
RXNwcmVzc28geW91IGNhbiBvbmx5IHdyaXRlIHRlc3RzIGluCkphdmEvS290
bGluLiBBcHBpdW0gb3BlbnMgdXAgdGhlIHBvc3NpYmlsaXR5IG9mIHRydWUg
Y3Jvc3MtcGxhdGZvcm0gbmF0aXZlIGFwcAphdXRvbWF0aW9uLCBmb3IgbW9i
aWxlIGFuZCBiZXlvbmQuIEZpbmFsbHkhCgpJZiB5b3UncmUgbmV3IHRvIEFw
cGl1bSwgb3Igd2FudCBhIG1vcmUgY29tcHJlaGVuc2l2ZSBkZXNjcmlwdGlv
biBvZiB3aGF0IHRoaXMgaXMgYWxsCmFib3V0LCBwbGVhc2UgcmVhZCBvdXIg
W0ludHJvZHVjdGlvbiB0byBBcHBpdW0KQ29uY2VwdHNdKC9kb2NzL2VuL2Fi
b3V0LWFwcGl1bS9pbnRyby5tZCkuCgojIyMgUmVxdWlyZW1lbnRzCgpZb3Vy
IGVudmlyb25tZW50IG5lZWRzIHRvIGJlIHNldCB1cCBmb3IgdGhlIHBhcnRp
Y3VsYXIgcGxhdGZvcm1zIHRoYXQgeW91IHdhbnQKdG8gcnVuIHRlc3RzIG9u
LiBFYWNoIG9mIHRoZSBkcml2ZXJzIGFib3ZlIGRvY3VtZW50cyB0aGUgcmVx
dWlyZW1lbnRzIGZvciB0aGVpcgpwYXJ0aWN1bGFyIGJyYW5kIG9mIGF1dG9t
YXRpb24uIEF0IGEgbWluaW11bSwgeW91IHdpbGwgbmVlZCB0byBiZSBhYmxl
IHRvIHJ1bgpOb2RlLmpzIDEwKy4KCiMjIyBHZXQgU3RhcnRlZAoKQ2hlY2sg
b3V0IG91ciBbR2V0dGluZyBTdGFydGVkXSgvZG9jcy9lbi9hYm91dC1hcHBp
dW0vZ2V0dGluZy1zdGFydGVkLm1kKSBndWlkZQp0byBnZXQgZ29pbmcgd2l0
aCBBcHBpdW0uCgpUaGVyZSBpcyBhbHNvIHNhbXBsZSBjb2RlIHRoYXQgY29u
dGFpbnMgW21hbnkgZXhhbXBsZXMgb2YgdGVzdHMgaW4gYSB2YXJpZXR5Cm9m
IGRpZmZlcmVudCBsYW5ndWFnZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9hcHBp
dW0vYXBwaXVtL3RyZWUvbWFzdGVyL3NhbXBsZS1jb2RlKSEKCiMjIyBEb2N1
bWVudGF0aW9uCgpGb3IgcHJldHRpbHktcmVuZGVyZWQgZG9jcywgcGxlYXNl
IHZpc2l0IFthcHBpdW0uaW9dKGh0dHA6Ly9hcHBpdW0uaW8pLiBZb3UgY2Fu
CmFsd2F5cyBmaW5kIHRoZSBmdWxsIGxpc3Qgb2YgQXBwaXVtIGRvYyBwYWdl
cyBhdCBbQXBwaXVtJ3MgR2l0SHViClJlcG9dKGh0dHBzOi8vZ2l0aHViLmNv
bS9hcHBpdW0vYXBwaXVtL3RyZWUvbWFzdGVyL2RvY3MvZW4vKSBhcyB3ZWxs
LgoKIyMjIENvbnRyaWJ1dGluZwoKUGxlYXNlIHRha2UgYSBsb29rIGF0IG91
ciBbY29udHJpYnV0aW9uIGRvY3VtZW50YXRpb25dKENPTlRSSUJVVElORy5t
ZCkKZm9yIGluc3RydWN0aW9ucyBvbiBob3cgdG8gYnVpbGQsIHRlc3QgYW5k
IHJ1biBBcHBpdW0gZnJvbSBzb3VyY2UuCgojIyMgUm9hZG1hcAoKSW50ZXJl
c3RlZCBpbiB3aGVyZSBBcHBpdW0gaXMgaGVhZGluZyBpbiB0aGUgZnV0dXJl
PyBDaGVjayBvdXQgdGhlIFtSb2FkbWFwXShST0FETUFQLm1kKQoKIyMjIFBy
b2plY3QgSGlzdG9yeSwgQ3JlZGl0cyAmIEluc3BpcmF0aW9uCgoqIFtIaXN0
b3J5XShodHRwOi8vYXBwaXVtLmlvL2hpc3RvcnkpCiogW0NyZWRpdHNdKC9k
b2NzL2VuL2NvbnRyaWJ1dGluZy10by1hcHBpdW0vY3JlZGl0cy5tZCkKCiMj
IyBVc2VyIEZvcnVtcwoKQW5ub3VuY2VtZW50cyBhbmQgZGViYXRlcyBvZnRl
biB0YWtlIHBsYWNlIG9uIHRoZSBbRGlzY3Vzc2lvbgpHcm91cF0oaHR0cHM6
Ly9kaXNjdXNzLmFwcGl1bS5pbyksIGJlIHN1cmUgdG8gc2lnbiB1cCEKCiMj
IyBUcm91Ymxlc2hvb3RpbmcKCldlIHB1dCB0b2dldGhlciBhIFt0cm91Ymxl
c2hvb3RpbmcKZ3VpZGVdKC9kb2NzL2VuL3dyaXRpbmctcnVubmluZy1hcHBp
dW0vb3RoZXIvdHJvdWJsZXNob290aW5nLm1kKS4gIFBsZWFzZSBoYXZlIGEg
bG9vawpoZXJlIGZpcnN0IGlmIHlvdSBydW4gaW50byBhbnkgcHJvYmxlbXMu
IEl0IGNvbnRhaW5zIGluc3RydWN0aW9ucyBmb3IgY2hlY2tpbmcKYSBsb3Qg
b2YgY29tbW9uIGVycm9ycyBhbmQgaG93IHRvIGdldCBpbiB0b3VjaCB3aXRo
IHRoZSBjb21tdW5pdHkgaWYgeW91J3JlCnN0dW1wZWQuCgojIyMgTGljZW5z
ZQoKWyFbRk9TU0EgU3RhdHVzXShodHRwczovL2FwcC5mb3NzYS5pby9hcGkv
cHJvamVjdHMvZ2l0JTJCaHR0cHMlM0ElMkYlMkZnaXRodWIuY29tJTJGYXBw
aXVtJTJGYXBwaXVtLnN2Zz90eXBlPWxhcmdlKV0oaHR0cHM6Ly9hcHAuZm9z
c2EuaW8vcHJvamVjdHMvZ2l0JTJCaHR0cHMlM0ElMkYlMkZnaXRodWIuY29t
JTJGYXBwaXVtJTJGYXBwaXVtP3JlZj1iYWRnZV9sYXJnZSkK
",,"bGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczogIjEwIgpvczogbGludXgKYWRk
b25zOgogIGFwdDoKICAgIHNvdXJjZXM6CiAgICAgIC0gdWJ1bnR1LXRvb2xj
aGFpbi1yLXRlc3QKICAgIHBhY2thZ2VzOgogICAgICAtIGcrKy00LjgKICAg
ICAgLSBidWlsZC1lc3NlbnRpYWwKZW52OgogIGdsb2JhbDoKICAgIC0gQ1hY
PWcrKy00LjgKY2FjaGU6CiAgbnBtOiBmYWxzZQpqb2JzOgogIGluY2x1ZGU6
CiAgICAtIHN0YWdlOiBUZXN0cwogICAgICBuYW1lOiBub2RlIDEwCiAgICAg
IGJlZm9yZV9zY3JpcHQ6IG5wbSBvdXRkYXRlZCB8fCB0cnVlCiAgICAgIHNj
cmlwdDogbnBtIHJ1biB0ZXN0ICYmIG5wbSBydW4gZTJlLXRlc3QKICAgICAg
YWZ0ZXJfc2NyaXB0OiBucG0gcnVuIGNvdmVyYWdlCiAgICAtIHN0YWdlOgog
ICAgICBuYW1lOiBub2RlIDEyCiAgICAgIGJlZm9yZV9zY3JpcHQ6IG5wbSBv
dXRkYXRlZCB8fCB0cnVlCiAgICAgIHNjcmlwdDogbnBtIHJ1biB0ZXN0ICYm
IG5wbSBydW4gZTJlLXRlc3QKICAgICAgbm9kZV9qczogIjEyIgogICAgLSBz
dGFnZToKICAgICAgbmFtZTogdGVzdCBkb2N1bWVudGF0aW9uIGdlbmVyYXRp
b24KICAgICAgc2NyaXB0OiBucG0gcnVuIGdlbmVyYXRlLWRvY3MKCiAgICAt
IHN0YWdlOiBTYW1wbGUgQ29kZQogICAgICBuYW1lOiBKYXZhU2NyaXB0ICh3
ZCkKICAgICAgIyBvbmx5IHdhbnQgdG8gcnVuIHRoaXMgb24gdGhlIG1haW4g
bWFzdGVyIGJyYW5jaAogICAgICBpZjogYnJhbmNoID0gbWFzdGVyIEFORCB0
eXBlICE9IHB1bGxfcmVxdWVzdAogICAgICBlbnY6CiAgICAgICAgLSBTQVVD
RV9MQUJTPTEKICAgICAgaW5zdGFsbDoKICAgICAgICAtIGNkIHNhbXBsZS1j
b2RlL2phdmFzY3JpcHQtd2QKICAgICAgICAtIG5wbSBpbnN0YWxsCiAgICAg
IHNjcmlwdDoKICAgICAgICAtIG5wbSBydW4gdGVzdAogICAgLSBzdGFnZToK
ICAgICAgbmFtZTogUHl0aG9uCiAgICAgICMgb25seSB3YW50IHRvIHJ1biB0
aGlzIG9uIHRoZSBtYWluIG1hc3RlciBicmFuY2gKICAgICAgaWY6IGJyYW5j
aCA9IG1hc3RlciBBTkQgdHlwZSAhPSBwdWxsX3JlcXVlc3QKICAgICAgbGFu
Z3VhZ2U6IHB5dGhvbgogICAgICBweXRob246ICIzLjYiCiAgICAgIGVudjoK
ICAgICAgICAtIFNBVUNFX0xBQlM9MQogICAgICBiZWZvcmVfaW5zdGFsbDoK
ICAgICAgICAtIHBpcCBpbnN0YWxsIC0tdXBncmFkZSBwaXAKICAgICAgaW5z
dGFsbDoKICAgICAgICAtIGNkIHNhbXBsZS1jb2RlL3B5dGhvbgogICAgICAg
IC0gcGlwIGluc3RhbGwgLXIgcmVxdWlyZW1lbnRzLnR4dAogICAgICAgIC0g
cGlwIGluc3RhbGwgcHl0ZXN0LXhkaXN0CiAgICAgIHNjcmlwdDoKICAgICAg
ICAtIHB5LnRlc3QgLXYgLW4gMzAgdGVzdAo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'akka',130013,"b'Build highly concurrent, distributed, and resilient message-driven applications on the JVM'",b'Scala',910,10460,,10460,False,b'https://api.github.com/repos/akka/akka/forks',"QWtrYSBbIVtMYXRlc3QgdmVyc2lvbl0oaHR0cHM6Ly9pbmRleC5zY2FsYS1s
YW5nLm9yZy9ha2thL2Fra2EvYWtrYS1hY3Rvci9sYXRlc3Quc3ZnKV0oaHR0
cHM6Ly9pbmRleC5zY2FsYS1sYW5nLm9yZy9ha2thL2Fra2EvYWtrYS1hY3Rv
cilbIVtCdWlsZCBTdGF0dXNdKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9ha2th
L2Fra2Euc3ZnP2JyYW5jaD1tYXN0ZXIpXShodHRwczovL3RyYXZpcy1jaS5v
cmcvYWtrYS9ha2thKSAKPT09PQoKV2UgYmVsaWV2ZSB0aGF0IHdyaXRpbmcg
Y29ycmVjdCBjb25jdXJyZW50ICYgZGlzdHJpYnV0ZWQsIHJlc2lsaWVudCBh
bmQgZWxhc3RpYyBhcHBsaWNhdGlvbnMgaXMgdG9vIGhhcmQuCk1vc3Qgb2Yg
dGhlIHRpbWUgaXQncyBiZWNhdXNlIHdlIGFyZSB1c2luZyB0aGUgd3Jvbmcg
dG9vbHMgYW5kIHRoZSB3cm9uZyBsZXZlbCBvZiBhYnN0cmFjdGlvbi4KCkFr
a2EgaXMgaGVyZSB0byBjaGFuZ2UgdGhhdC4KClVzaW5nIHRoZSBBY3RvciBN
b2RlbCB3ZSByYWlzZSB0aGUgYWJzdHJhY3Rpb24gbGV2ZWwgYW5kIHByb3Zp
ZGUgYSBiZXR0ZXIgcGxhdGZvcm0gdG8gYnVpbGQgY29ycmVjdCBjb25jdXJy
ZW50IGFuZCBzY2FsYWJsZSBhcHBsaWNhdGlvbnMuIFRoaXMgbW9kZWwgaXMg
YSBwZXJmZWN0IG1hdGNoIGZvciB0aGUgcHJpbmNpcGxlcyBsYWlkIG91dCBp
biB0aGUgW1JlYWN0aXZlIE1hbmlmZXN0b10oaHR0cDovL3d3dy5yZWFjdGl2
ZW1hbmlmZXN0by5vcmcvKS4KCkZvciByZXNpbGllbmNlLCB3ZSBhZG9wdCB0
aGUgIkxldCBpdCBjcmFzaCIgbW9kZWwgd2hpY2ggdGhlIHRlbGVjb20gaW5k
dXN0cnkgaGFzIHVzZWQgd2l0aCBncmVhdCBzdWNjZXNzIHRvIGJ1aWxkIGFw
cGxpY2F0aW9ucyB0aGF0IHNlbGYtaGVhbCBhbmQgc3lzdGVtcyB0aGF0IG5l
dmVyIHN0b3AuCgpBY3RvcnMgYWxzbyBwcm92aWRlIHRoZSBhYnN0cmFjdGlv
biBmb3IgdHJhbnNwYXJlbnQgZGlzdHJpYnV0aW9uIGFuZCB0aGUgYmFzaXMg
Zm9yIHRydWx5IHNjYWxhYmxlIGFuZCBmYXVsdC10b2xlcmFudCBhcHBsaWNh
dGlvbnMuCgpMZWFybiBtb3JlIGF0IFtha2thLmlvXShodHRwOi8vYWtrYS5p
by8pLgoKUmVmZXJlbmNlIERvY3VtZW50YXRpb24KLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0KClRoZSByZWZlcmVuY2UgZG9jdW1lbnRhdGlvbiBpcyBhdmFp
bGFibGUgYXQgW2RvYy5ha2thLmlvXShodHRwOi8vZG9jLmFra2EuaW8pLApm
b3IgW1NjYWxhXShodHRwOi8vZG9jLmFra2EuaW8vZG9jcy9ha2thL2N1cnJl
bnQvc2NhbGEuaHRtbCkgYW5kIFtKYXZhXShodHRwOi8vZG9jLmFra2EuaW8v
ZG9jcy9ha2thL2N1cnJlbnQvamF2YS5odG1sKS4KCkNvbW11bml0eQotLS0t
LS0tLS0KWW91IGNhbiBqb2luIHRoZXNlIGdyb3VwcyBhbmQgY2hhdHMgdG8g
ZGlzY3VzcyBhbmQgYXNrIEFra2EgcmVsYXRlZCBxdWVzdGlvbnM6CgotIEZv
cnVtczogW2Rpc2N1c3MuYWtrYS5pb10oaHR0cHM6Ly9kaXNjdXNzLmFra2Eu
aW8pCi0gQ2hhdCByb29tIGFib3V0ICp1c2luZyogQWtrYTogWyFbZ2l0dGVy
OiBha2thL2Fra2FdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvZ2l0
dGVyJTNBLWFra2ElMkZha2thLWJsdWUuc3ZnP3N0eWxlPWZsYXQtc3F1YXJl
KV0oaHR0cHM6Ly9naXR0ZXIuaW0vYWtrYS9ha2thKQotIElzc3VlIHRyYWNr
ZXI6IFshW2dpdGh1YjogYWtrYS9ha2thXShodHRwczovL2ltZy5zaGllbGRz
LmlvL2JhZGdlL2dpdGh1YiUzQS1pc3N1ZXMtYmx1ZS5zdmc/c3R5bGU9Zmxh
dC1zcXVhcmUpXShodHRwczovL2dpdGh1Yi5jb20vYWtrYS9ha2thL2lzc3Vl
cykKCkluIGFkZGl0aW9uIHRvIHRoYXQsIHlvdSBtYXkgZW5qb3kgZm9sbG93
aW5nOgoKLSBUaGUgW25ld3NdKGh0dHA6Ly9ha2thLmlvL25ld3MpIHNlY3Rp
b24gb2YgdGhlIHBhZ2UsIHdoaWNoIGlzIHVwZGF0ZWQgd2hlbmV2ZXIgYSBu
ZXcgdmVyc2lvbiBpcyByZWxlYXNlZAotIFRoZSBbQWtrYSBUZWFtIEJsb2dd
KGh0dHA6Ly9ibG9nLmFra2EuaW8pCi0gW0Bha2thdGVhbV0oaHR0cHM6Ly90
d2l0dGVyLmNvbS9ha2thdGVhbSkgb24gVHdpdHRlcgotIFF1ZXN0aW9ucyB0
YWdnZWQgWyNha2thIG9uIFN0YWNrT3ZlcmZsb3ddKGh0dHA6Ly9zdGFja292
ZXJmbG93LmNvbS9xdWVzdGlvbnMvdGFnZ2VkL2Fra2EpCi0gUHJvamVjdHMg
YnVpbHQgd2l0aCBBa2thOiBbIVtha2thLWRlcGVuZGVuY3ktYmFkZ2VdXVth
a2thLWRlcGVuZGVuY3ktc2NhbGFkZXhdCgpDb250cmlidXRpbmcKLS0tLS0t
LS0tLS0tCkNvbnRyaWJ1dGlvbnMgYXJlICp2ZXJ5KiB3ZWxjb21lIQoKSWYg
eW91IHNlZSBhbiBpc3N1ZSB0aGF0IHlvdSdkIGxpa2UgdG8gc2VlIGZpeGVk
LCB0aGUgYmVzdCB3YXkgdG8gbWFrZSBpdCBoYXBwZW4gaXMgdG8gaGVscCBv
dXQgYnkgc3VibWl0dGluZyBhIHB1bGwgcmVxdWVzdCBpbXBsZW1lbnRpbmcg
aXQuCgpSZWZlciB0byB0aGUgW0NPTlRSSUJVVElORy5tZF0oaHR0cHM6Ly9n
aXRodWIuY29tL2Fra2EvYWtrYS9ibG9iL21hc3Rlci9DT05UUklCVVRJTkcu
bWQpIGZpbGUgZm9yIG1vcmUgZGV0YWlscyBhYm91dCB0aGUgd29ya2Zsb3cs
CmFuZCBnZW5lcmFsIGhpbnRzIG9uIGhvdyB0byBwcmVwYXJlIHlvdXIgcHVs
bCByZXF1ZXN0LiBZb3UgY2FuIGFsc28gYXNrIGZvciBjbGFyaWZpY2F0aW9u
cyBvciBndWlkYW5jZSBpbiBHaXRIdWIgaXNzdWVzIGRpcmVjdGx5LApvciBp
biB0aGUgYWtrYS9kZXYgY2hhdCBpZiBhIG1vcmUgcmVhbCB0aW1lIGNvbW11
bmljYXRpb24gd291bGQgYmUgb2YgYmVuZWZpdC4KCkEgY2hhdCByb29tIGlz
IGF2YWlsYWJsZSBmb3IgYWxsIHF1ZXN0aW9ucyByZWxhdGVkIHRvICpkZXZl
bG9waW5nIGFuZCBjb250cmlidXRpbmcqIHRvIEFra2E6ClshW2dpdHRlcjog
YWtrYS9kZXZdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvZ2l0dGVy
JTNBLWFra2ElMkZkZXYtYmx1ZS5zdmc/c3R5bGU9ZmxhdC1zcXVhcmUpXSho
dHRwczovL2dpdHRlci5pbS9ha2thL2RldikKCkxpY2Vuc2UKLS0tLS0tLQoK
QWtrYSBpcyBPcGVuIFNvdXJjZSBhbmQgYXZhaWxhYmxlIHVuZGVyIHRoZSBB
cGFjaGUgMiBMaWNlbnNlLgoKW2Fra2EtZGVwZW5kZW5jeS1iYWRnZV06IGh0
dHBzOi8vaW5kZXguc2NhbGEtbGFuZy5vcmcvY291bnQuc3ZnP3E9ZGVwZW5k
ZW5jaWVzOmFra2EvKiZzdWJqZWN0PXNjYWxhZGV4OiZjb2xvcj1ibHVlJnN0
eWxlPWZsYXQtc3F1YXJlICJCdWlsdCB3aXRoIEFra2EiCltha2thLWRlcGVu
ZGVuY3ktc2NhbGFkZXhdOiBodHRwczovL2luZGV4LnNjYWxhLWxhbmcub3Jn
L3NlYXJjaD9xPWRlcGVuZGVuY2llczpha2thLyoK
",,"bGFuZ3VhZ2U6IHNjYWxhCgpzdWRvOiBmYWxzZQoKc2NhbGE6CiAgLSAiMi4x
Mi45IgogIC0gIjIuMTMuMCIKCmJlZm9yZV9pbnN0YWxsOiBjdXJsIC1McyBo
dHRwczovL2dpdC5pby9qYWJiYSB8IGJhc2ggJiYgLiB+Ly5qYWJiYS9qYWJi
YS5zaAppbnN0YWxsOiBqYWJiYSBpbnN0YWxsICJhZG9wdEB+MS4kVFJBVklT
X0pESy4wLTAiICYmIGphYmJhIHVzZSAiJF8iICYmIGphdmEgLVhteDMybSAt
dmVyc2lvbgoKYWRkb25zOgogIGFwdDoKICAgIHBhY2thZ2VzOgogICAgLSBn
cmFwaHZpegoKYmVmb3JlX2NhY2hlOgogIC0gZmluZCAkSE9NRS8uaXZ5MiAt
bmFtZSAiaXZ5ZGF0YS0qLnByb3BlcnRpZXMiIC1wcmludCAtZGVsZXRlCiAg
LSBmaW5kICRIT01FLy5zYnQgIC1uYW1lICIqLmxvY2siICAgICAgICAgICAg
ICAgLXByaW50IC1kZWxldGUKCmNhY2hlOgogIGRpcmVjdG9yaWVzOgogICAg
LSAkSE9NRS8uY2FjaGUvY291cnNpZXIKICAgIC0gJEhPTUUvLml2eTIvY2Fj
aGUKICAgIC0gJEhPTUUvLnNidAogICAgLSAkSE9NRS8uamFiYmEvamRrCgoj
IHNjcmlwdCBmb3IgdGhlIGRlZmF1bHQgJ3Rlc3QnIHN0YWdlOgpzY3JpcHQ6
IHNidCAtanZtLW9wdHMgLmp2bW9wdHMtdHJhdmlzIC1EYWtrYS5idWlsZC5z
Y2FsYVZlcnNpb249JFRSQVZJU19TQ0FMQV9WRVJTSU9OICI7dXBkYXRlIDtt
aW1hUmVwb3J0QmluYXJ5SXNzdWVzIDt0ZXN0OmNvbXBpbGUgO3ZhbGlkYXRl
Q29tcGlsZSIKCmpvYnM6CiAgaW5jbHVkZToKICAgIC0gc3RhZ2U6IHdoaXRl
c291cmNlCiAgICAgIG5hbWU6IHdoaXRlc291cmNlCiAgICAgIHNjcmlwdDog
Z2l0IGJyYW5jaCAtZiAiJFRSQVZJU19CUkFOQ0giICYmIGdpdCBjaGVja291
dCAiJFRSQVZJU19CUkFOQ0giICYmIHNidCB3aGl0ZXNvdXJjZUNoZWNrUG9s
aWNpZXMgd2hpdGVzb3VyY2VVcGRhdGUKCnN0YWdlczoKICAtIG5hbWU6IHdo
aXRlc291cmNlCiAgICBpZjogcmVwbyA9IGFra2EvYWtrYSBBTkQgKChicmFu
Y2ggPSBtYXN0ZXIgQU5EIHR5cGUgIT0gcHVsbF9yZXF1ZXN0KSBPUiB0YWcg
PX4gXnYpIEFORCBlbnYoVFJBVklTX1NDQUxBX1ZFUlNJT04pID1+IF4yLjEy
CiAgLSBuYW1lOiB0ZXN0CiAgICBpZjogdHlwZSA9PSBwdWxsX3JlcXVlc3Qg
T1IgTk9UIHRhZyA9fiBedgoKZW52OgogIGdsb2JhbDoKICAgIC0gVFJBVklT
X0pESz04CiAgICAjIGVuY3J5cHQgd2l0aDogdHJhdmlzIGVuY3J5cHQgV0hJ
VEVTT1VSQ0VfUEFTU1dPUkQ9Li4uCiAgICAtIHNlY3VyZTogIkJDV3RVcUtH
N3RySTduNU9aRTJSZUNHWFFFL2Y1UDhrWHBmY3BhNURYSmVhdXRCbnBIL2pl
dHRZNWVybUI1SkxsMTJDaXNHNlM0blMzQlNLUDRVZjhXUHBQZVNxNDAyQ1pZ
VENiVXhNV0N2Uys5TitrRVFySFU3aXdZcUhRQkwvUk15NmVJeVdQUkQrSnF4
S3V2bGdmTnVTRXJ5OXBNYWd3VzdtTlFyWmdZVT0iCgojIHNhZmVsaXN0CmJy
YW5jaGVzOgogIG9ubHk6CiAgLSBtYXN0ZXIKICAtIHJlbGVhc2UtMi41CiAg
LSAvXnZcZCtcLlxkKyhcLlxkKyk/KC1cUyopPyQvCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'alfred-workflows',13048104,b':metal: A collection of Alfred 3 and 4 workflows that will rock your world',,6,10458,,10458,False,b'https://api.github.com/repos/zenorocha/alfred-workflows/forks',"IyBBbGZyZWQgV29ya2Zsb3dzCgpBIGNvbGxlY3Rpb24gb2YgW0FsZnJlZCAz
IGFuZCA0XShodHRwczovL3d3dy5hbGZyZWRhcHAuY29tLykgd29ya2Zsb3dz
IHRoYXQgd2lsbCByb2NrIHlvdXIgd29ybGQuCgohW0FsZnJlZCBMb2dvXSho
dHRwczovL2Nsb3VkLmdpdGh1YnVzZXJjb250ZW50LmNvbS9hc3NldHMvMzk4
ODkzLzM1Mjg3MjIvNWI1YjMwYzYtMDc5Mi0xMWU0LTk1NmQtNzUwYWMzYTAw
YmQ4LnBuZykKCiMjIEluc3RhbGwKCkRvd25sb2FkIGFuZCBvcGVuIGZpbGUg
dXNpbmcgW0FsZnJlZF0oaHR0cHM6Ly93d3cuYWxmcmVkYXBwLmNvbS8pLgoK
UC5TLjogWW91IG5lZWQgdG8gW2J1eSB0aGUgUG93ZXJwYWNrXShodHRwczov
L2J1eS5hbGZyZWRhcHAuY29tLykgdG8gdXNlIHRoZXNlIHdvcmtmbG93cy4K
CiMjIFdvcmtmbG93cwoKOmFycm93X2Rvd246ICoqJm5ic3A7W0Rvd25sb2Fk
IHRoZW0gYWxsXShodHRwczovL2dpdGh1Yi5jb20vemVub3JvY2hhL2FsZnJl
ZC13b3JrZmxvd3MvcmVsZWFzZXMpLioqCgojIyMgW0NhZmZlaW5hdGVdKGh0
dHBzOi8vZ2l0aHViLmNvbS9zaGF3bnJpY2UvYWxmcmVkLTItY2FmZmVpbmF0
ZS13b3JrZmxvdykgKHYzLjAzLjApIH4gW0Rvd25sb2FkXShodHRwczovL2dp
dGh1Yi5jb20vemVub3JvY2hhL2FsZnJlZC13b3JrZmxvd3MvcmF3L21hc3Rl
ci9jYWZmZWluYXRlL2NhZmZlaW5hdGUuYWxmcmVkd29ya2Zsb3cpCgpTb2x2
ZXMgdGhlIHByb2JsZW0gb2YgeW91ciBjb21wdXRlciBjb25zdGFudGx5IGZh
bGxpbmcgYXNsZWVwIGJ5IHVzaW5nIE9TIFgncyBuYXRpdmUgY29tbWFuZCBs
aW5lIH4gKmJ5IFtAc2hhd25yaWNlXShodHRwczovL2dpdGh1Yi5jb20vc2hh
d25yaWNlLykuKgoKPiBUcmlnZ2VyczogYGNhZmZgLgoKPGltZyB3aWR0aD0i
NTk0IiBhbHQ9ImNhZmZlaW5hdGUiIHNyYz0iaHR0cHM6Ly9jbG91ZC5naXRo
dWJ1c2VyY29udGVudC5jb20vYXNzZXRzLzM5ODg5My8xNDM2MTkwMS8wMWZl
YmZkNi1mY2IyLTExZTUtODI5Mi02YWRmNDk5YWM5NzEucG5nIj4KCiMjIyBb
Q2FuIEkgVXNlXShodHRwczovL2dpdGh1Yi5jb20vd2lsbGZhcnJlbGwvYWxm
cmVkLWNhbml1c2Utd29ya2Zsb3cpICh2MS45LjApIH4gW0Rvd25sb2FkXSho
dHRwczovL2dpdGh1Yi5jb20vemVub3JvY2hhL2FsZnJlZC13b3JrZmxvd3Mv
cmF3L21hc3Rlci9jYW5pdXNlL2Nhbml1c2UuYWxmcmVkd29ya2Zsb3cpCgpT
ZWFyY2ggZm9yIGJyb3dzZXIgY29tcGF0aWJpbGl0eSBzdXBwb3J0IG9mIEhU
TUw1LCBDU1MzIGFuZCBtb3JlIHVzaW5nIFtjYW5pdXNlLmNvbV0oaHR0cDov
L2Nhbml1c2UuY29tKSB+ICpieSBbQHdpbGxmYXJyZWxsXShodHRwczovL2dp
dGh1Yi5jb20vd2lsbGZhcnJlbGwvKS4qCgo+IFRyaWdnZXJzOiBgY2FuaXVz
ZWAuCgo8aW1nIHdpZHRoPSI1OTQiIGFsdD0iY2FuaXVzZSIgc3JjPSJodHRw
czovL2Nsb3VkLmdpdGh1YnVzZXJjb250ZW50LmNvbS9hc3NldHMvMzk4ODkz
LzE0MzYwMjk4Lzg1ODljNmZhLWZjYWEtMTFlNS04M2RmLTIwMGY0YzkwZjg1
Zi5wbmciPgoKIyMjIFtDb2xvcnNdKGh0dHA6Ly93d3cucGFja2FsLm9yZy93
b3JrZmxvdy9jb2xvcnMpICh2Mi4wLjIpIH4gW0Rvd25sb2FkXShodHRwczov
L2dpdGh1Yi5jb20vemVub3JvY2hhL2FsZnJlZC13b3JrZmxvd3MvcmF3L21h
c3Rlci9jb2xvcnMvY29sb3JzLmFsZnJlZHdvcmtmbG93KQoKQ29udmVydCBI
RVgvUkdCL0hTTCBjb2xvcnMgfiAqYnkgW0BUeWxlckVpY2hdKGh0dHBzOi8v
Z2l0aHViLmNvbS9UeWxlckVpY2gvKS4qCgo+IFRyaWdnZXJzOiBgI2AsIGBy
Z2JgLCBgaHNsYCwgYGNgLgoKPGltZyB3aWR0aD0iNTk0IiBhbHQ9ImNvbG9y
cyIgc3JjPSJodHRwczovL2Nsb3VkLmdpdGh1YnVzZXJjb250ZW50LmNvbS9h
c3NldHMvMzk4ODkzLzE0MzYwMjY3LzZkMGFhMzRjLWZjYWEtMTFlNS05YzM1
LWZlZjI0MTg4ODQyZC5wbmciPgoKIyMjIFtEZXZEb2NzXShodHRwczovL2dp
dGh1Yi5jb20veWFubmlja2dsdC9hbGZyZWQtZGV2ZG9jcykgKHYxLjIuMCkg
fiBbRG93bmxvYWRdKGh0dHBzOi8vZ2l0aHViLmNvbS96ZW5vcm9jaGEvYWxm
cmVkLXdvcmtmbG93cy9yYXcvbWFzdGVyL2RldmRvY3MvZGV2ZG9jcy5hbGZy
ZWR3b3JrZmxvdykKClNlYXJjaCB0aHJvdWdoIFtEZXZEb2NzXShodHRwOi8v
ZGV2ZG9jcy5pby8pIGRvY3VtZW50YXRpb25zIGJ5IGZpbHRlcmluZyB0aGUg
a2V5d29yZCBmb3IgZWFjaCBsYW5ndWFnZS9saWJyYXJ5IH4gKmJ5IFtAeWFu
bmlja2dsdF0oaHR0cHM6Ly9naXRodWIuY29tL3lhbm5pY2tnbHQpLioKCj4g
VHJpZ2dlcnM6IGBjZG9jYCwgYGFuZ3VsYXJgLCBgY29mZmVlc2NyaXB0YCwg
YGNzc2AsIGBkM2AsIGBkb21gLCBgZG9tX2V2ZW50c2AsIGBnaXRgLCBgaHRt
bGAsIGBodHRwYCwgYGphdmFzY3JpcHRgLCBganF1ZXJ5YCwgYGpxdWVyeXVp
YCwgYGxvZGFzaGAsIGBwaHBgLCBgc2Fzc2AsIGBiYWNrYm9uZWAsIGBjYCwg
YGNwcGAsIGBjaGFpYCwgYGNvcmRvdmFgLCBgZW1iZXJgLCBgZXhwcmVzc2As
IGBnb2AsIGBncnVudGAsIGBoYXNrZWxsYCwgYGpxdWVyeW1vYmlsZWAsIGBr
bm9ja291dGAsIGBsYXJhdmVsYCwgYGxlc3NgLCBgbWF4Y2RuYCwgYG1vbWVu
dGAsIGBub2RlYCwgYHBvc3RncmVzcWxgLCBgcHl0aG9uYCwgYHJlZGlzYCwg
YHJlcXVpcmVqc2AsIGBydWJ5YCwgYHJhaWxzYCwgYHNpbm9uYCwgYHVuZGVy
c2NvcmVgLCBgeWlpYC4KCjxpbWcgd2lkdGg9IjU5NCIgYWx0PSJkZXZkb2Nz
LTEiIHNyYz0iaHR0cHM6Ly9jbG91ZC5naXRodWJ1c2VyY29udGVudC5jb20v
YXNzZXRzLzM5ODg5My8xNDM2MDI2Ni82ZDBhYTI4ZS1mY2FhLTExZTUtOGEz
Zi1hN2ZmOTVkMjI2ZWYucG5nIj4KPGltZyB3aWR0aD0iNTk0IiBhbHQ9ImRl
dmRvY3MtMiIgc3JjPSJodHRwczovL2Nsb3VkLmdpdGh1YnVzZXJjb250ZW50
LmNvbS9hc3NldHMvMzk4ODkzLzE0MzYwMjY4LzZkMGI3MzhhLWZjYWEtMTFl
NS05MTgyLTM2ODFhOWMwYzljYy5wbmciPgo8aW1nIHdpZHRoPSI1OTQiIGFs
dD0iZGV2ZG9jcy0zIiBzcmM9Imh0dHBzOi8vY2xvdWQuZ2l0aHVidXNlcmNv
bnRlbnQuY29tL2Fzc2V0cy8zOTg4OTMvMTQzNjAyNjQvNmQwODBiZDItZmNh
YS0xMWU1LTg1Y2MtYTJjYTE5N2M2ZGQ2LnBuZyI+CgoKIyMjIFtEb21haW5y
XShodHRwczovL2dpdGh1Yi5jb20vZGluZ3lpL0FsZnJlZC1Xb3JrZmxvd3Mv
dHJlZS9tYXN0ZXIvRG9tYWlucikgKHYxLjIuMSkgfiBbRG93bmxvYWRdKGh0
dHBzOi8vZ2l0aHViLmNvbS96ZW5vcm9jaGEvYWxmcmVkLXdvcmtmbG93cy9y
YXcvbWFzdGVyL2RvbWFpbnIvZG9tYWluci5hbGZyZWR3b3JrZmxvdykKCkZp
bmQgZG9tYWlucyBxdWlja2x5IHVzaW5nIFtkb21haS5ucl0oaHR0cHM6Ly9k
b21haW5yLmNvbS8pJ3MgQVBJIH4gKmJ5IFtAZGluZ3lpXShodHRwczovL2dp
dGh1Yi5jb20vZGluZ3lpLykuKgoKPiBUcmlnZ2VyczogYGRvbWFpbnJgLgoK
PGltZyB3aWR0aD0iNTk0IiBhbHQ9ImRvbWFpbnIiIHNyYz0iaHR0cHM6Ly9j
bG91ZC5naXRodWJ1c2VyY29udGVudC5jb20vYXNzZXRzLzM5ODg5My8xNDM2
MDI2OS82ZDBmZTM1Yy1mY2FhLTExZTUtOTk3MC0zYWQ2ZjRiOWM4ZjAucG5n
Ij4KCiMjIyBbRW1vamldKGh0dHBzOi8vZ2l0aHViLmNvbS9jYXJsb3NnYWxk
aW5vL2FsZnJlZC1lbW9qaS13b3JrZmxvdykgKHYxLjUuMCkgfiBbRG93bmxv
YWRdKGh0dHBzOi8vZ2l0aHViLmNvbS96ZW5vcm9jaGEvYWxmcmVkLXdvcmtm
bG93cy9yYXcvbWFzdGVyL2Vtb2ppL2Vtb2ppLmFsZnJlZHdvcmtmbG93KQoK
U2VhcmNoIGZvciBbRW1vamlzXShodHRwczovL2VuLndpa2lwZWRpYS5vcmcv
d2lraS9FbW9qaSkgdXNlZCBieSBCYXNlY2FtcCwgR2l0SHViLCBHaXRMYWIs
IFRyZWxsbywgYW5kIG90aGVyIHNlcnZpY2VzIH4gKmJ5IFtAY2FybG9zZ2Fs
ZGlub10oaHR0cHM6Ly9naXRodWIuY29tL2Nhcmxvc2dhbGRpbm8vKS4qCgo+
IFRyaWdnZXJzOiBgZW1vamlgLCBgZW1vamkgW2FsdCBrZXldYC4KCjxpbWcg
d2lkdGg9IjU5NCIgYWx0PSJlbW9qaSIgc3JjPSJodHRwczovL2Nsb3VkLmdp
dGh1YnVzZXJjb250ZW50LmNvbS9hc3NldHMvMzk4ODkzLzE0MzYwMjY1LzZk
MDk4ZDVlLWZjYWEtMTFlNS04N2U4LTQ2MWI1NTI3YjY3MS5wbmciPgoKIyMj
IFtFbmNvZGUvRGVjb2RlXShodHRwczovL2dpdGh1Yi5jb20vd2lsbGZhcnJl
bGwvYWxmcmVkLWVuY29kZS1kZWNvZGUtd29ya2Zsb3cpICh2MS44LjApIH4g
W0Rvd25sb2FkXShodHRwczovL2dpdGh1Yi5jb20vemVub3JvY2hhL2FsZnJl
ZC13b3JrZmxvd3MvcmF3L21hc3Rlci9lbmNvZGUtZGVjb2RlL2VuY29kZS1k
ZWNvZGUuYWxmcmVkd29ya2Zsb3cpCgpUcmFuc2Zvcm0gcXVlcnkgc3RyaW5n
cyB0aHJvdWdoIGJhc2U2NCwgaHRtbCwgdXJsLCBhbmQgdXRmLTggZW5jb2Rl
L2RlY29kZSB+ICpieSBbQHdpbGxmYXJyZWxsXShodHRwczovL2dpdGh1Yi5j
b20vd2lsbGZhcnJlbGwvKS4qCgo+IFRyaWdnZXJzOiBgZW5jb2RlYCwgYGRl
Y29kZWAuCgo8aW1nIHdpZHRoPSI1OTQiIGFsdD0iZW5jb2RlIiBzcmM9Imh0
dHBzOi8vY2xvdWQuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2Fzc2V0cy8zOTg4
OTMvMTQzNjAyNzIvNmQxYzEyMzAtZmNhYS0xMWU1LTk1MTQtNjRmMmVhOTk1
YmVjLnBuZyI+CgojIyMgW0Zha2VyXShodHRwOi8vd3d3LmFsZnJlZGZvcnVt
LmNvbS90b3BpYy81OTU5LWFuLWFsZnJlZC13b3JrZmxvdy10by1nZW5lcmF0
ZS1mYWtlLWRhdGEvKSAodjEuMC4wKSB+IFtEb3dubG9hZF0oaHR0cHM6Ly9n
aXRodWIuY29tL3plbm9yb2NoYS9hbGZyZWQtd29ya2Zsb3dzL3Jhdy9tYXN0
ZXIvZmFrZXIvZmFrZXIuYWxmcmVkd29ya2Zsb3cpCgpHZW5lcmF0ZSBmYWtl
IGRhdGEgc3VjaCBhcyBuYW1lLCBlbWFpbCBhZGRyZXNzLCBjcmVkaXQgY2Fy
ZCBudW1iZXIsIGV0YyB+ICpieSBbQGdyb2VuZXdlZ2VdKGh0dHBzOi8vZ2l0
aHViLmNvbS9ncm9lbmV3ZWdlKS4qCgo+IFRyaWdnZXJzOiBgZmFrZXJgLCBg
ZmFrZXJsb2NhbGVgLgoKPGltZyB3aWR0aD0iNTk0IiBhbHQ9ImZha2VyIiBz
cmM9Imh0dHBzOi8vY2xvdWQuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2Fzc2V0
cy8zOTg4OTMvMTQzNjAyNzEvNmQxYmE5NDQtZmNhYS0xMWU1LTg1ZGMtNTQw
NDU5NDZmMDJlLnBuZyI+CgojIyMgW0dpdEh1Yl0oaHR0cHM6Ly9naXRodWIu
Y29tL2doYXJsYW4vYWxmcmVkLWdpdGh1Yi13b3JrZmxvdykgKHYxLjYuMCkg
fiBbRG93bmxvYWRdKGh0dHBzOi8vZ2l0aHViLmNvbS96ZW5vcm9jaGEvYWxm
cmVkLXdvcmtmbG93cy9yYXcvbWFzdGVyL2dpdGh1Yi9naXRodWIuYWxmcmVk
d29ya2Zsb3cpCgpFYXNpbHkgb3BlbiBbR2l0SHViXShodHRwczovL2dpdGh1
Yi5jb20vKSByZXBvc2l0b3JpZXMgYW5kIG1vcmUgaW4gdGhlIGJyb3dzZXIg
fiAqYnkgW0BnaGFybGFuXShodHRwczovL2dpdGh1Yi5jb20vZ2hhcmxhbi8p
LioKClAuUy46IFlvdSBoYXZlIHRvIGxvZ2luIGJlZm9yZSB5b3UgY2FuIHVz
ZSB0aGUgd29ya2Zsb3c6IGBnaCA+IGxvZ2luIDx1c2VyPmAuCgo+IFRyaWdn
ZXJzOiBgZ2hgLgoKPGltZyB3aWR0aD0iNTk0IiBhbHQ9ImdpdGh1Yi0xIiBz
cmM9Imh0dHBzOi8vY2xvdWQuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2Fzc2V0
cy8zOTg4OTMvMTQzNjAyNzMvNmQxZDU0YmEtZmNhYS0xMWU1LTk5ZmItYTli
OTk3NjE5NGUyLnBuZyI+CjxpbWcgd2lkdGg9IjU5NCIgYWx0PSJnaXRodWIt
MiIgc3JjPSJodHRwczovL2Nsb3VkLmdpdGh1YnVzZXJjb250ZW50LmNvbS9h
c3NldHMvMzk4ODkzLzE0MzYwMjcwLzZkMWFlNzQ4LWZjYWEtMTFlNS04MGRh
LTY0MzNjMzEyZTQ1Mi5wbmciPgo8aW1nIHdpZHRoPSI1OTQiIGFsdD0iZ2l0
aHViLTMiIHNyYz0iaHR0cHM6Ly9jbG91ZC5naXRodWJ1c2VyY29udGVudC5j
b20vYXNzZXRzLzM5ODg5My8xNDM2MDI3NC82ZDFlYmE4YS1mY2FhLTExZTUt
ODgxNS1kN2U5Y2E4OTA1NDIucG5nIj4KCiMjIyBbSVAgQWRkcmVzc10oaHR0
cDovL2RmZXJnLnVzL2lwLWFkZHJlc3Mtd29ya2Zsb3cvKSAodjEuMi4wKSB+
IFtEb3dubG9hZF0oaHR0cHM6Ly9naXRodWIuY29tL3plbm9yb2NoYS9hbGZy
ZWQtd29ya2Zsb3dzL3Jhdy9tYXN0ZXIvaXAtYWRkcmVzcy9pcC1hZGRyZXNz
LmFsZnJlZHdvcmtmbG93KQoKU2hvd3MgeW91ciBpbnRlcm5hbCBhbmQgZXh0
ZXJuYWwgSVAgYWRkcmVzcyB+ICpieSBbQGRmZXJnXShodHRwOi8vZGZlcmcu
dXMvaXAtYWRkcmVzcy13b3JrZmxvdy8pLioKCj4gVHJpZ2dlcnM6IGBpcGAu
Cgo8aW1nIHdpZHRoPSI1OTQiIGFsdD0iaXAiIHNyYz0iaHR0cHM6Ly9jbG91
ZC5naXRodWJ1c2VyY29udGVudC5jb20vYXNzZXRzLzM5ODg5My8xNDM2MTQy
OC9hYjFlNzkxMC1mY2FmLTExZTUtODZlOC01MWY3YTVmNDRhYTgucG5nIj4K
CiMjIyBbS2lsbCBQcm9jZXNzXShodHRwczovL2dpdGh1Yi5jb20vbmdyZWVu
c3RlaW4vYWxmcmVkLXByb2Nlc3Mta2lsbGVyKSAodjEuMi4wKSB+IFtEb3du
bG9hZF0oaHR0cHM6Ly9naXRodWIuY29tL3plbm9yb2NoYS9hbGZyZWQtd29y
a2Zsb3dzL3Jhdy9tYXN0ZXIva2lsbC1wcm9jZXNzL2tpbGwtcHJvY2Vzcy5h
bGZyZWR3b3JrZmxvdykKCkVhc2lseSBmaW5kIHByb2Nlc3NlcyBieSBuYW1l
IGFuZCBraWxsIHRoZW0gfiAqYnkgW0BuZ3JlZW5zdGVpbl0oaHR0cHM6Ly9n
aXRodWIuY29tL25ncmVlbnN0ZWluKS4qCgo+IFRyaWdnZXJzOiBga2lsbGAu
Cgo8aW1nIHdpZHRoPSI1OTQiIGFsdD0ia2lsbCIgc3JjPSJodHRwczovL2Ns
b3VkLmdpdGh1YnVzZXJjb250ZW50LmNvbS9hc3NldHMvMzk4ODkzLzE0MzYw
Mjc2LzZkMmEzM2JhLWZjYWEtMTFlNS04ZmE1LTRkMzcwM2E4MTI5Zi5wbmci
PgoKIyMjIFtQYWNrYWdlIE1hbmFnZXJzXShodHRwczovL2dpdGh1Yi5jb20v
d2lsbGZhcnJlbGwvYWxmcmVkLXBrZ21hbi13b3JrZmxvdykgKHYzLjE2LjAp
IH4gW0Rvd25sb2FkXShodHRwczovL2dpdGh1Yi5jb20vemVub3JvY2hhL2Fs
ZnJlZC13b3JrZmxvd3MvcmF3L21hc3Rlci9wYWNrYWdlLW1hbmFnZXJzL3Bh
Y2thZ2UtbWFuYWdlcnMuYWxmcmVkd29ya2Zsb3cpCgpRdWljayBwYWNrYWdl
L3BsdWdpbi9jb21wb25lbnQgbG9va3VwIGZvciB5b3VyIGZhdm9yaXRlIHBh
Y2thZ2UgbWFuYWdlcnMgfiAqYnkgW0B3aWxsZmFycmVsbF0oaHR0cHM6Ly9n
aXRodWIuY29tL3dpbGxmYXJyZWxsLykuKgoKPiBUcmlnZ2VyczogYGFwdC1n
ZXRgLCBgYXBtYCwgYGJvd2VyYCwgYGJyZXdgLCBgY2hlZmAsIGBjb2NvYWAs
IGBjb21wb3NlcmAsIGBkb2NrZXJgLCBgZ2Vtc2AsIGBncmFkbGVgLCBgZ3J1
bnRgLCBgZ3VscGAsIGBoZXhgLCBgbWF2ZW5gLCBgbnBtYCwgYHBlYXJgLCBg
cHVwcGV0YCwgYHB5cGlgLCBgcmFzcGJpYW5gLCBgcnBtYCwgYHlvYC4KCjxp
bWcgd2lkdGg9IjU5NCIgYWx0PSJwbS0xIiBzcmM9Imh0dHBzOi8vY2xvdWQu
Z2l0aHVidXNlcmNvbnRlbnQuY29tL2Fzc2V0cy8zOTg4OTMvMTQzNjAyNzgv
NmQyZDdmMmEtZmNhYS0xMWU1LTk0NjMtMGE5MDlmZDRhOWJkLnBuZyI+Cjxp
bWcgd2lkdGg9IjU5NCIgYWx0PSJwbS0yIiBzcmM9Imh0dHBzOi8vY2xvdWQu
Z2l0aHVidXNlcmNvbnRlbnQuY29tL2Fzc2V0cy8zOTg4OTMvMTQzNjAyNzcv
NmQyYzVjOTQtZmNhYS0xMWU1LTk2NGItMDk2MzMyMzhlMjkxLnBuZyI+Cgoj
IyMgW1NvdXJjZSBUcmVlXShodHRwczovL2dpdGh1Yi5jb20vemhhb2NhaS9h
bGZyZWQyLXNvdXJjZXRyZWUtd29ya2Zsb3cpICh2MS4yLjApIH4gW0Rvd25s
b2FkXShodHRwczovL2dpdGh1Yi5jb20vemVub3JvY2hhL2FsZnJlZC13b3Jr
Zmxvd3MvcmF3L21hc3Rlci9zb3VyY2UtdHJlZS9zb3VyY2UtdHJlZS5hbGZy
ZWR3b3JrZmxvdykKCkxpc3QsIHNlYXJjaCwgYW5kIG9wZW4gR2l0IHJlcG9z
aXRvcmllcyBpbiBbU291cmNlIFRyZWVdKGh0dHBzOi8vd3d3LnNvdXJjZXRy
ZWVhcHAuY29tLykgfiAqYnkgW0B6aGFvY2FpXShodHRwczovL2dpdGh1Yi5j
b20vemhhb2NhaS8pLioKClAuUy46IFNvdXJjZSBUcmVlIGlzIGEgZnJlZSBl
eHRlcm5hbCBhcHBsaWNhdGlvbiwgbWFrZSBzdXJlIHRvIFtkb3dubG9hZF0o
aHR0cHM6Ly93d3cuc291cmNldHJlZWFwcC5jb20vKSBpdCBiZWZvcmUgc3Rh
cnQgdXNpbmcgdGhpcyB3b3JrZmxvdy4KCj4gVHJpZ2dlcnM6IGBzdGAsIGBz
dGJvb2ttYXJrYC4KCjxpbWcgd2lkdGg9IjU5NCIgYWx0PSJzb3VyY2V0cmVl
IiBzcmM9Imh0dHBzOi8vY2xvdWQuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2Fz
c2V0cy8zOTg4OTMvMTQzNjAyNzkvNmQyZWM5MmEtZmNhYS0xMWU1LTgyMDUt
ZjY4NTRlNmUwNThjLnBuZyI+CgpMb29raW5nIGZvciBhbm90aGVyIEdpdCBj
bGllbnQ/IFNlZSBbRXh0cmEgd2lraV0oaHR0cHM6Ly9naXRodWIuY29tL3pl
bm9yb2NoYS9hbGZyZWQtd29ya2Zsb3dzL3dpa2kvRXh0cmFzI2dpdC1jbGll
bnQpLgoKIyMjIFtTdGFjayBPdmVyZmxvd10oaHR0cHM6Ly9naXRodWIuY29t
L3hoaW5raW5nL0FsZnJlZCkgKHYxLjAuMSkgfiBbRG93bmxvYWRdKGh0dHBz
Oi8vZ2l0aHViLmNvbS96ZW5vcm9jaGEvYWxmcmVkLXdvcmtmbG93cy9yYXcv
bWFzdGVyL3N0YWNrLW92ZXJmbG93L3N0YWNrLW92ZXJmbG93LmFsZnJlZHdv
cmtmbG93KQoKU2VhcmNoIGZvciBhIHF1ZXN0aW9uIG9uIFtTdGFja092ZXJm
bG93XShodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20pIH4gKmJ5IFtAeGhpbmtp
bmddKGh0dHBzOi8vZ2l0aHViLmNvbS94aGlua2luZy8pLioKCj4gVHJpZ2dl
cnM6IGBzb2AuCgo8aW1nIHdpZHRoPSI1OTQiIGFsdD0ic3RhY2tvdmVyZmxv
dyIgc3JjPSJodHRwczovL2Nsb3VkLmdpdGh1YnVzZXJjb250ZW50LmNvbS9h
c3NldHMvMzk4ODkzLzE0MzYwMjgwLzZkMzI0YTUwLWZjYWEtMTFlNS05MmI2
LTJlNGM4NmQwNTUyNC5wbmciPgoKIyMjIFtTdWJsaW1lIFRleHRdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9mcmFuemhlaWRsL2FsZnJlZC13b3JrZmxvd3MvdHJl
ZS9tYXN0ZXIvb3Blbi13aXRoLXN1YmxpbWUtdGV4dCkgKHYxLjEuMCkgfiBb
RG93bmxvYWRdKGh0dHBzOi8vZ2l0aHViLmNvbS96ZW5vcm9jaGEvYWxmcmVk
LXdvcmtmbG93cy9yYXcvbWFzdGVyL3N1YmxpbWUtdGV4dC9zdWJsaW1lLXRl
eHQuYWxmcmVkd29ya2Zsb3cpCgpPcGVuIGZpbGVzIG9yIGEgZm9sZGVycyBp
biBbU3VibGltZSBUZXh0IDNdKGh0dHA6Ly93d3cuc3VibGltZXRleHQuY29t
LzMpIH4gKmJ5IFtAZnJhbnpoZWlkbF0oaHR0cHM6Ly9naXRodWIuY29tL2Zy
YW56aGVpZGwvKS4qCgo+IFRyaWdnZXJzOiBgc3VibGAsIGBzdWJsKmAuCgo8
aW1nIHdpZHRoPSI1OTQiIGFsdD0ic3VibCIgc3JjPSJodHRwczovL2Nsb3Vk
LmdpdGh1YnVzZXJjb250ZW50LmNvbS9hc3NldHMvMzk4ODkzLzE0MzYwMjgx
LzZkMzdhNjQ0LWZjYWEtMTFlNS04MTQ4LTcxNTlkODNhOWY5ZC5wbmciPgoK
IyMjIFtUZXJtaW5hbCDihpIgRmluZGVyXShodHRwczovL2dpdGh1Yi5jb20v
TGVFbm5vL2FsZnJlZC10ZXJtaW5hbGZpbmRlcikgKHYxLjYuMCkgfiBbRG93
bmxvYWRdKGh0dHBzOi8vZ2l0aHViLmNvbS96ZW5vcm9jaGEvYWxmcmVkLXdv
cmtmbG93cy9yYXcvbWFzdGVyL3Rlcm1pbmFsLWZpbmRlci90ZXJtaW5hbC1m
aW5kZXIuYWxmcmVkd29ya2Zsb3cpCgpPcGVuIGN1cnJlbnQgRmluZGVyIChv
ciBQYXRoIEZpbmRlcikgd2luZG93IGluIFRlcm1pbmFsIChvciBpVGVybSkg
YW5kIHZpY2UgdmVyc2EgfiAqYnkgW0BMZUVubm9dKGh0dHBzOi8vZ2l0aHVi
LmNvbS9MZUVubm8vKS4qCgo+IFRyaWdnZXJzOiBgZnRgLCBgdGZgLCBgZmlg
LCBgaWZgLCBgcHRgLCBgdHBgLCBgcGlgLCBgaXBgLgoKPGltZyB3aWR0aD0i
NTk0IiBhbHQ9InRlcm1pbmFsLTEiIHNyYz0iaHR0cHM6Ly9jbG91ZC5naXRo
dWJ1c2VyY29udGVudC5jb20vYXNzZXRzLzM5ODg5My8xNDM2MDI4Mi82ZDNh
MGUzZS1mY2FhLTExZTUtOGU1Yi1hOGM1YTMzMDU5NjIucG5nIj4KPGltZyB3
aWR0aD0iNTk0IiBhbHQ9InRlcm1pbmFsLTIiIHNyYz0iaHR0cHM6Ly9jbG91
ZC5naXRodWJ1c2VyY29udGVudC5jb20vYXNzZXRzLzM5ODg5My8xNDM2MDI4
NC82ZDNkMTlkYS1mY2FhLTExZTUtOTMzYi0yY2U2MmY4M2Q3N2UucG5nIj4K
CiMjIyBbVGltZVpvbmVzXShodHRwOi8vd3d3LmFsZnJlZGZvcnVtLmNvbS90
b3BpYy80OTEtdGltZXpvbmVzLWEtd29ybGQtY2xvY2stc2NyaXB0LWZpbHRl
ci11cGRhdGVkLXRvLXYxNy8pICh2MS45LjApIH4gW0Rvd25sb2FkXShodHRw
czovL2dpdGh1Yi5jb20vemVub3JvY2hhL2FsZnJlZC13b3JrZmxvd3MvcmF3
L21hc3Rlci90aW1lLXpvbmVzL3RpbWUtem9uZXMuYWxmcmVkd29ya2Zsb3cp
CgpHZXQgYW4gaW5zdGFudCBsaXN0IG9mIHRoZSBjdXJyZW50IHRpbWUgaW4g
dmFyaW91cyBjaXRpZXMgYXJvdW5kIHRoZSB3b3JsZC4KR2V0IGEgc3BlY2lm
aWMgdGltZSBpbiBjaXRpZXMgb24geW91ciBsaXN0LiB+ICpieSBbQENhcmxv
c05aXShodHRwOi8vd3d3LmFsZnJlZGZvcnVtLmNvbS90b3BpYy80OTEtdGlt
ZXpvbmVzLWEtd29ybGQtY2xvY2stc2NyaXB0LWZpbHRlci11cGRhdGVkLXRv
LXYxNjEvKS4qCgo+IFRyaWdnZXJzOiBgdHpgLCBgdHogSEhgLCBgdHogSEg6
TU1gLCBgdHogSEg6TU1gLCBgdGltZXpvbmUgYWRkIFt5b3VyIGNpdHldYCwg
YHRpbWV6b25lIHVwZGF0ZWAsIGB0aW1lem9uZSAxMmhgLCBgdGltZXpvbmUg
MjRoYCAuCgo8aW1nIHdpZHRoPSI1OTQiIGFsdD0idHoiIHNyYz0iaHR0cHM6
Ly9jbG91ZC5naXRodWJ1c2VyY29udGVudC5jb20vYXNzZXRzLzM5ODg5My8x
NDM2MDI4My82ZDNkMDRmNC1mY2FhLTExZTUtOTBkNi03OTc0MGU1YTVjNGQu
cG5nIj4KCiMjIyBbVmlydHVhbEJveF0oaHR0cHM6Ly9naXRodWIuY29tL2Fp
eW9kay9BbGZyZWQtRXh0ZW5zaW9ucy90cmVlL21hc3Rlci9BbGZyZWRBcHBf
Mi54L1ZpcnR1YWxCb3gtQ29udHJvbCkgKHYyLjAuMSkgfiBbRG93bmxvYWRd
KGh0dHBzOi8vZ2l0aHViLmNvbS96ZW5vcm9jaGEvYWxmcmVkLXdvcmtmbG93
cy9yYXcvbWFzdGVyL3ZpcnR1YWxib3gvdmlydHVhbGJveC5hbGZyZWR3b3Jr
ZmxvdykKCkNvbnRyb2wgeW91ciBbVmlydHVhbEJveF0oaHR0cHM6Ly93d3cu
dmlydHVhbGJveC5vcmcvKSB2aXJ0dWFsIG1hY2hpbmVzIH4gKmJ5IFtAYWl5
b2RrXShodHRwczovL2dpdGh1Yi5jb20vYWl5b2RrLykuKgoKUC5TLjogVmly
dHVhbEJveCBpcyBhIGZyZWUgZXh0ZXJuYWwgYXBwbGljYXRpb24sIG1ha2Ug
c3VyZSB0byBbZG93bmxvYWRdKGh0dHBzOi8vd3d3LnZpcnR1YWxib3gub3Jn
LykgaXQgYmVmb3JlIHN0YXJ0IHVzaW5nIHRoaXMgd29ya2Zsb3cuCgo+IFRy
aWdnZXJzOiBgdm1gLgoKPGltZyB3aWR0aD0iNTk0IiBhbHQ9InZtIiBzcmM9
Imh0dHBzOi8vY2xvdWQuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2Fzc2V0cy8z
OTg4OTMvMTQzNjAyODUvNmQzZmRjMjQtZmNhYS0xMWU1LTkwYmItNTRjNzA0
OTc1OTQyLnBuZyI+CgojIyBFeHRyYXMKCkRvIHlvdSB3YW50IG1vcmU/IFtH
byBnZXQgaXQhXShodHRwczovL2dpdGh1Yi5jb20vemVub3JvY2hhL2FsZnJl
ZC13b3JrZmxvd3Mvd2lraS9FeHRyYXMpCgojIyBDb250cmlidXRpbmcKCjEu
IEZvcmsgaXQhCjIuIENyZWF0ZSB5b3VyIGZlYXR1cmUgYnJhbmNoOiBgZ2l0
IGNoZWNrb3V0IC1iIG15LW5ldy1mZWF0dXJlYAozLiBDb21taXQgeW91ciBj
aGFuZ2VzOiBgZ2l0IGNvbW1pdCAtbSAnQWRkIHNvbWUgZmVhdHVyZSdgCjQu
IFB1c2ggdG8gdGhlIGJyYW5jaDogYGdpdCBwdXNoIG9yaWdpbiBteS1uZXct
ZmVhdHVyZWAKNS4gU3VibWl0IGEgcHVsbCByZXF1ZXN0IDpECgojIyBIaXN0
b3J5CgpTZWUgW1JlbGVhc2VzXShodHRwczovL2dpdGh1Yi5jb20vemVub3Jv
Y2hhL2FsZnJlZC13b3JrZmxvd3MvcmVsZWFzZXMpIGZvciBkZXRhaWxlZCBj
aGFuZ2Vsb2cuCgojIyBMaWNlbnNlCgpbTUlUIExpY2Vuc2VdKGh0dHA6Ly96
ZW5vcm9jaGEubWl0LWxpY2Vuc2Uub3JnLykgwqkgWmVubyBSb2NoYQo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'awesome-ruby',21461715,"b':gem: A collection of awesome Ruby libraries, tools, frameworks and software'",,87,10448,,10448,False,b'https://api.github.com/repos/markets/awesome-ruby/forks',"PGRpdj4KICA8cCBhbGlnbj0iY2VudGVyIj4KICAgIDxhIGhyZWY9Imh0dHBz
Oi8vYXdlc29tZS1ydWJ5LmNvbSI+PGltZyBzcmM9Imh0dHBzOi8vcmF3Lmdp
dGh1YnVzZXJjb250ZW50LmNvbS9tYXJrZXRzL2F3ZXNvbWUtcnVieS9naC1w
YWdlcy9pbWFnZXMvbG9nb19tLnBuZyI+PC9hPgogIDwvcD4KICA8aDMgYWxp
Z249ImNlbnRlciI+PGEgaHJlZj0iaHR0cHM6Ly9hd2Vzb21lLXJ1YnkuY29t
Ij5Bd2Vzb21lIFJ1Ynk8L2E+PC9oMz4KICA8cCBhbGlnbj0iY2VudGVyIj4K
ICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9zaW5kcmVzb3JodXMv
YXdlc29tZSI+PGltZyBzcmM9Imh0dHBzOi8vY2RuLnJhd2dpdC5jb20vc2lu
ZHJlc29yaHVzL2F3ZXNvbWUvZDczMDVmMzhkMjlmZWQ3OGZhODU2NTJlM2E2
M2UxNTRkZDhlODgyOS9tZWRpYS9iYWRnZS5zdmciPjwvYT4KICA8L3A+CiAg
PGhyPgo8L2Rpdj4KCkEgY2F0ZWdvcml6ZWQgY29tbXVuaXR5LWRyaXZlbiBj
b2xsZWN0aW9uIG9mIGF3ZXNvbWUgUnVieSBsaWJyYXJpZXMsIHRvb2xzLCBm
cmFtZXdvcmtzIGFuZCBzb2Z0d2FyZS4gVGhlIGVzc2VudGlhbCBSdWJ5IHRv
IGJ1aWxkIG1vZGVybiBBcHBzIGFuZCBXZWIgQXBwcy4KClNoYXJpbmcsIHN1
Z2dlc3Rpb25zIGFuZCBjb250cmlidXRpb25zIGFyZSBhbHdheXMgd2VsY29t
ZSEgUGxlYXNlIHRha2UgYSBsb29rIGF0IHRoZSBbY29udHJpYnV0aW9uIGd1
aWRlbGluZXMgYW5kIHF1YWxpdHkgc3RhbmRhcmRdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9tYXJrZXRzL2F3ZXNvbWUtcnVieS9ibG9iL21hc3Rlci9DT05UUklC
VVRJTkcubWQpIGZpcnN0LgoKVGhhbmtzIHRvIGFsbCBbY29udHJpYnV0b3Jz
XShodHRwczovL2dpdGh1Yi5jb20vbWFya2V0cy9hd2Vzb21lLXJ1YnkvZ3Jh
cGhzL2NvbnRyaWJ1dG9ycyksIHlvdSdyZSBhd2Vzb21lIGFuZCB0aGlzIHdv
dWxkbid0IGJlIHBvc3NpYmxlIHdpdGhvdXQgeW91IQoKKiBbQXdlc29tZSBS
dWJ5XSgjYXdlc29tZS1ydWJ5KQogICogW0Fic3RyYWN0aW9uXSgjYWJzdHJh
Y3Rpb24pCiAgKiBbQWRtaW4gSW50ZXJmYWNlXSgjYWRtaW4taW50ZXJmYWNl
KQogICogW0FuYWx5dGljc10oI2FuYWx5dGljcykKICAqIFtBUEkgQnVpbGRl
ciBhbmQgRGlzY292ZXJ5XSgjYXBpLWJ1aWxkZXItYW5kLWRpc2NvdmVyeSkK
ICAqIFtBc3NldHNdKCNhc3NldHMpCiAgKiBbQXV0aGVudGljYXRpb24gYW5k
IE9BdXRoXSgjYXV0aGVudGljYXRpb24tYW5kLW9hdXRoKQogICogW0F1dGhv
cml6YXRpb25dKCNhdXRob3JpemF0aW9uKQogICogW0F1dG9tYXRpb25dKCNh
dXRvbWF0aW9uKQogICogW0NhY2hpbmddKCNjYWNoaW5nKQogICogW0NhcHRj
aGFzIGFuZCBhbnRpLXNwYW1dKCNjYXB0Y2hhcy1hbmQtYW50aS1zcGFtKQog
ICogW0NMSSBCdWlsZGVyXSgjY2xpLWJ1aWxkZXIpCiAgKiBbQ0xJIFV0aWxp
dGllc10oI2NsaS11dGlsaXRpZXMpCiAgKiBbQ2xvdWRdKCNjbG91ZCkKICAq
IFtDTVNdKCNjbXMpCiAgKiBbQ29kZSBBbmFseXNpcyBhbmQgTWV0cmljc10o
I2NvZGUtYW5hbHlzaXMtYW5kLW1ldHJpY3MpCiAgKiBbQ29kZSBGb3JtYXR0
aW5nXSgjY29kZS1mb3JtYXR0aW5nKQogICogW0NvZGUgSGlnaGxpZ2h0aW5n
XSgjY29kZS1oaWdobGlnaHRpbmcpCiAgKiBbQ29kZSBMb2FkZXJzXSgjY29k
ZS1sb2FkZXJzKQogICogW0NvZGluZyBTdHlsZSBHdWlkZXNdKCNjb2Rpbmct
c3R5bGUtZ3VpZGVzKQogICogW0NvbmN1cnJlbmN5IGFuZCBQYXJhbGxlbGlz
bV0oI2NvbmN1cnJlbmN5LWFuZC1wYXJhbGxlbGlzbSkKICAqIFtDb25maWd1
cmF0aW9uXSgjY29uZmlndXJhdGlvbikKICAqIFtDb3JlIEV4dGVuc2lvbnNd
KCNjb3JlLWV4dGVuc2lvbnMpCiAgKiBbQ291bnRyeSBEYXRhXSgjY291bnRy
eS1kYXRhKQogICogW0NSTV0oI2NybSkKICAqIFtDcnlwdG9jdXJyZW5jaWVz
IGFuZCBCbG9ja2NoYWluc10oI2NyeXB0b2N1cnJlbmNpZXMtYW5kLWJsb2Nr
Y2hhaW5zKQogICogW0Rhc2hib2FyZHNdKCNkYXNoYm9hcmRzKQogICogW0Rh
dGEgUHJvY2Vzc2luZyBhbmQgRVRMXSgjZGF0YS1wcm9jZXNzaW5nLWFuZC1l
dGwpCiAgKiBbRGF0YSBWaXN1YWxpemF0aW9uXSgjZGF0YS12aXN1YWxpemF0
aW9uKQogICogW0RhdGFiYXNlIERyaXZlcnNdKCNkYXRhYmFzZS1kcml2ZXJz
KQogICogW0RhdGFiYXNlIFRvb2xzXSgjZGF0YWJhc2UtdG9vbHMpCiAgKiBb
RGF0ZSBhbmQgVGltZSBQcm9jZXNzaW5nXSgjZGF0ZS1hbmQtdGltZS1wcm9j
ZXNzaW5nKQogICogW0RlYnVnZ2luZyBUb29sc10oI2RlYnVnZ2luZy10b29s
cykKICAqIFtEZWNvcmF0b3JzXSgjZGVjb3JhdG9ycykKICAqIFtEZXZPcHMg
VG9vbHNdKCNkZXZvcHMtdG9vbHMpCiAgKiBbRGlmZl0oI2RpZmYpCiAgKiBb
RG9jdW1lbnRhdGlvbl0oI2RvY3VtZW50YXRpb24pCiAgKiBbRS1Db21tZXJj
ZSBhbmQgUGF5bWVudHNdKCNlLWNvbW1lcmNlLWFuZC1wYXltZW50cykKICAq
IFtFYm9va10oI2Vib29rKQogICogW0VtYWlsXSgjZW1haWwpCiAgKiBbRW5j
cnlwdGlvbl0oI2VuY3J5cHRpb24pCiAgKiBbRW52aXJvbm1lbnQgTWFuYWdl
bWVudF0oI2Vudmlyb25tZW50LW1hbmFnZW1lbnQpCiAgKiBbRXJyb3IgSGFu
ZGxpbmddKCNlcnJvci1oYW5kbGluZykKICAqIFtGZWF0dXJlIEZsaXBwZXJz
IGFuZCBBL0IgVGVzdGluZ10oI2ZlYXR1cmUtZmxpcHBlcnMtYW5kLWFiLXRl
c3RpbmcpCiAgKiBbRmlsZSBVcGxvYWRdKCNmaWxlLXVwbG9hZCkKICAqIFtG
aWxlIFN5c3RlbSBMaXN0ZW5lcl0oI2ZpbGUtc3lzdGVtLWxpc3RlbmVyKQog
ICogW0Zvcm0gQnVpbGRlcl0oI2Zvcm0tYnVpbGRlcikKICAqIFtHYW1lIERl
dmVsb3BtZW50XSgjZ2FtZS1kZXZlbG9wbWVudCkKICAqIFtHZW0gR2VuZXJh
dG9yc10oI2dlbS1nZW5lcmF0b3JzKQogICogW0dlb2xvY2F0aW9uXSgjZ2Vv
bG9jYXRpb24pCiAgKiBbR2l0IFRvb2xzXSgjZ2l0LXRvb2xzKQogICogW0dy
YXBoUUxdKCNncmFwaHFsKQogICogW0dVSV0oI2d1aSkKICAqIFtIVE1ML1hN
TCBQYXJzaW5nXSgjaHRtbHhtbC1wYXJzaW5nKQogICogW0hUVFAgQ2xpZW50
cyBhbmQgdG9vbHNdKCNodHRwLWNsaWVudHMtYW5kLXRvb2xzKQogICogW0lt
YWdlIFByb2Nlc3NpbmddKCNpbWFnZS1wcm9jZXNzaW5nKQogICogW0ltcGxl
bWVudGF0aW9ucy9Db21waWxlcnNdKCNpbXBsZW1lbnRhdGlvbnNjb21waWxl
cnMpCiAgKiBbSW50ZXJuYXRpb25hbGl6YXRpb25dKCNpbnRlcm5hdGlvbmFs
aXphdGlvbikKICAqIFtJUkJdKCNpcmIpCiAgKiBbTG9nZ2luZ10oI2xvZ2dp
bmcpCiAgKiBbTWFjaGluZSBMZWFybmluZ10oI21hY2hpbmUtbGVhcm5pbmcp
CiAgKiBbTWFya2Rvd24gUHJvY2Vzc29yc10oI21hcmtkb3duLXByb2Nlc3Nv
cnMpCiAgKiBbTWVhc3VyZW1lbnRzXSgjbWVhc3VyZW1lbnRzKQogICogW01v
YmlsZSBEZXZlbG9wbWVudF0oI21vYmlsZS1kZXZlbG9wbWVudCkKICAqIFtN
b25leV0oI21vbmV5KQogICogW011c2ljIGFuZCBTb3VuZF0oI211c2ljLWFu
ZC1zb3VuZCkKICAqIFtOYXR1cmFsIExhbmd1YWdlIFByb2Nlc3NpbmddKCNu
YXR1cmFsLWxhbmd1YWdlLXByb2Nlc3NpbmcpCiAgKiBbTmF2aWdhdGlvbl0o
I25hdmlnYXRpb24pCiAgKiBbTmV0d29ya2luZ10oI25ldHdvcmtpbmcpCiAg
KiBbT3B0aW1pemF0aW9uc10oI29wdGltaXphdGlvbnMpCiAgKiBbT1JNL09E
TV0oI29ybW9kbSkKICAqIFtPUk0vT0RNIEV4dGVuc2lvbnNdKCNvcm1vZG0t
ZXh0ZW5zaW9ucykKICAqIFtQYWNrYWdlIE1hbmFnZW1lbnRdKCNwYWNrYWdl
LW1hbmFnZW1lbnQpCiAgKiBbUGFnaW5hdGlvbl0oI3BhZ2luYXRpb24pCiAg
KiBbUERGXSgjcGRmKQogICogW1BlcmZvcm1hbmNlIE1vbml0b3JpbmddKCNw
ZXJmb3JtYW5jZS1tb25pdG9yaW5nKQogICogW1ByZXNlbnRhdGlvbiBQcm9n
cmFtc10oI3ByZXNlbnRhdGlvbi1wcm9ncmFtcykKICAqIFtQcm9jZXNzIE1h
bmFnZW1lbnQgYW5kIE1vbml0b3JpbmddKCNwcm9jZXNzLW1hbmFnZW1lbnQt
YW5kLW1vbml0b3JpbmcpCiAgKiBbUHJvY2Vzc2VzXSgjcHJvY2Vzc2VzKQog
ICogW1Byb2ZpbGVyIGFuZCBPcHRpbWl6YXRpb25dKCNwcm9maWxlci1hbmQt
b3B0aW1pemF0aW9uKQogICogW1FSXSgjcXIpCiAgKiBbUXVldWVzIGFuZCBN
ZXNzYWdpbmddKCNxdWV1ZXMtYW5kLW1lc3NhZ2luZykKICAqIFtSYWlscyBB
cHBsaWNhdGlvbiBHZW5lcmF0b3JzXSgjcmFpbHMtYXBwbGljYXRpb24tZ2Vu
ZXJhdG9ycykKICAqIFtSb2JvdGljc10oI3JvYm90aWNzKQogICogW1JTU10o
I3JzcykKICAqIFtTZXJ2ZXJsZXNzXSgjc2VydmVybGVzcykKICAqIFtTY2hl
ZHVsaW5nXSgjc2NoZWR1bGluZykKICAqIFtTY2llbnRpZmljXSgjc2NpZW50
aWZpYykKICAqIFtTZWFyY2hdKCNzZWFyY2gpCiAgKiBbU2VjdXJpdHldKCNz
ZWN1cml0eSkKICAqIFtTRU9dKCNzZW8pCiAgKiBbU29jaWFsIE5ldHdvcmtp
bmddKCNzb2NpYWwtbmV0d29ya2luZykKICAqIFtTcHJlYWRzaGVldHMgYW5k
IERvY3VtZW50c10oI3NwcmVhZHNoZWV0cy1hbmQtZG9jdW1lbnRzKQogICog
W1N0YXRlIE1hY2hpbmVzXSgjc3RhdGUtbWFjaGluZXMpCiAgKiBbU3RhdGlj
IFNpdGUgR2VuZXJhdGlvbl0oI3N0YXRpYy1zaXRlLWdlbmVyYXRpb24pCiAg
KiBbVGVtcGxhdGUgRW5naW5lXSgjdGVtcGxhdGUtZW5naW5lKQogICogW1Rl
c3RpbmddKCN0ZXN0aW5nKQogICogW1RoaXJkLXBhcnR5IEFQSXNdKCN0aGly
ZC1wYXJ0eS1hcGlzKQogICogW1ZpZGVvXSgjdmlkZW8pCiAgKiBbVmlldyBo
ZWxwZXJzXSgjdmlldy1oZWxwZXJzKQogICogW1dlYiBDcmF3bGluZ10oI3dl
Yi1jcmF3bGluZykKICAqIFtXZWIgRnJhbWV3b3Jrc10oI3dlYi1mcmFtZXdv
cmtzKQogICogW1dlYiBTZXJ2ZXJzXSgjd2ViLXNlcnZlcnMpCiAgKiBbV2Vi
U29ja2V0XSgjd2Vic29ja2V0KQoqIFtTZXJ2aWNlcyBhbmQgQXBwc10oI3Nl
cnZpY2VzLWFuZC1hcHBzKQoqIFtSZXNvdXJjZXNdKCNyZXNvdXJjZXMpCgoj
IyBBYnN0cmFjdGlvbgoKKiBbQWN0aXZlSW50ZXJhY3Rpb25dKGh0dHBzOi8v
Z2l0aHViLmNvbS9vcmdzeW5jL2FjdGl2ZV9pbnRlcmFjdGlvbikgLSBNYW5h
Z2UgYXBwbGljYXRpb24gc3BlY2lmaWMgYnVzaW5lc3MgbG9naWMuCiogW0Fw
b3RvbW9dKGh0dHBzOi8vZ2l0aHViLmNvbS9hcG90b25pY2svYXBvdG9tbykg
LSBCYXNlZCBvbiBDZWxscywgQXBvdG9tbyBnaXZlcyB5b3Ugd2lkZ2V0cyBh
bmQgZW5jYXBzdWxhdGlvbiwgYnViYmxpbmcgZXZlbnRzLCBBSkFYIHBhZ2Ug
dXBkYXRlcywgcm9jay1zb2xpZCB0ZXN0aW5nIGFuZCBtb3JlLgoqIFtDZWxs
c10oaHR0cHM6Ly9naXRodWIuY29tL3RyYWlsYmxhemVyL2NlbGxzKSAtIFZp
ZXcgQ29tcG9uZW50cyBmb3IgUmFpbHMuCiogW0RlY2VudCBFeHBvc3VyZV0o
aHR0cHM6Ly9naXRodWIuY29tL2hhc2hyb2NrZXQvZGVjZW50X2V4cG9zdXJl
KSAtIEEgaGVscGVyIGZvciBjcmVhdGluZyBkZWNsYXJhdGl2ZSBpbnRlcmZh
Y2VzIGluIGNvbnRyb2xsZXJzLgoqIFtEb2NpbGVdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9tcy1hdGkvZG9jaWxlKSAtIEEgdGlueSBsaWJyYXJ5IHRoYXQgbGV0
cyB5b3UgbWFwIGEgRFNMIChkb21haW4gc3BlY2lmaWMgbGFuZ3VhZ2UpIHRv
IHlvdXIgUnVieSBvYmplY3RzIGluIGEgc25hcC4KKiBbZHJ5LXJiXShodHRw
czovL2dpdGh1Yi5jb20vZHJ5LXJiKSAtIGRyeS1yYiBpcyBhIGNvbGxlY3Rp
b24gb2YgbmV4dC1nZW5lcmF0aW9uIFJ1YnkgbGlicmFyaWVzLCBlYWNoIGlu
dGVuZGVkIHRvIGVuY2Fwc3VsYXRlIGEgY29tbW9uIHRhc2suCiogW0ludGVy
YWN0b3JdKGh0dHBzOi8vZ2l0aHViLmNvbS9jb2xsZWN0aXZlaWRlYS9pbnRl
cmFjdG9yKSAtIEludGVyYWN0b3IgcHJvdmlkZXMgYSBjb21tb24gaW50ZXJm
YWNlIGZvciBwZXJmb3JtaW5nIGNvbXBsZXggaW50ZXJhY3Rpb25zIGluIGEg
c2luZ2xlIHJlcXVlc3QuCiogW0xpZ2h0IFNlcnZpY2VdKGh0dHBzOi8vZ2l0
aHViLmNvbS9hZG9tb2tvcy9saWdodC1zZXJ2aWNlKSAtIFNlcmllcyBvZiBB
Y3Rpb25zIHdpdGggYW4gZW1waGFzaXMgb24gc2ltcGxpY2l0eS4KKiBbTXV0
YXRpb25zXShodHRwczovL2dpdGh1Yi5jb20vY3lwcmlzcy9tdXRhdGlvbnMp
IC0gQ29tcG9zZSB5b3VyIGJ1c2luZXNzIGxvZ2ljIGludG8gY29tbWFuZHMg
dGhhdCBzYW5pdGl6ZSBhbmQgdmFsaWRhdGUgaW5wdXQuCiogW1JhaWxzIEV2
ZW50IFN0b3JlIChSRVMpXShodHRwczovL2dpdGh1Yi5jb20vUmFpbHNFdmVu
dFN0b3JlL3JhaWxzX2V2ZW50X3N0b3JlKSAtIEEgbGlicmFyeSBmb3IgcHVi
bGlzaGluZywgY29uc3VtaW5nLCBzdG9yaW5nIGFuZCByZXRyaWV2aW5nIGV2
ZW50cy4gSXQncyB5b3VyIGJlc3QgY29tcGFuaW9uIGZvciBnb2luZyB3aXRo
IGFuIGV2ZW50LWRyaXZlbiBhcmNoaXRlY3R1cmUgZm9yIHlvdXIgUmFpbHMg
YXBwbGljYXRpb24uCiogW1Jlc3BvbmRlcnNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9wbGF0YWZvcm1hdGVjL3Jlc3BvbmRlcnMpIC0gQSBzZXQgb2YgUmFpbHMg
cmVzcG9uZGVycyB0byBkcnkgdXAgeW91ciBhcHBsaWNhdGlvbi4KKiBbU3Vy
cm91bmRlZF0oaHR0cHM6Ly9naXRodWIuY29tL3NhdHVybmZseWVyL3N1cnJv
dW5kZWQpIC0gRW5jYXBzdWxhdGVkIHJlbGF0ZWQgb2JqZWN0cyBpbiBhIHNp
bmdsZSBzeXN0ZW0gdG8gYWRkIGJlaGF2aW9yIGR1cmluZyBydW50aW1lLiBF
eHRlbnNpYmxlIGltcGxlbWVudGF0aW9uIG9mIERDSS4KKiBbVHJhaWxibGF6
ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS90cmFpbGJsYXplci90cmFpbGJsYXpl
cikgLSBUcmFpbGJsYXplciBpcyBhIHRoaW4gbGF5ZXIgb24gdG9wIG9mIFJh
aWxzLiBJdCBnZW50bHkgZW5mb3JjZXMgZW5jYXBzdWxhdGlvbiwgYW4gaW50
dWl0aXZlIGNvZGUgc3RydWN0dXJlIGFuZCBnaXZlcyB5b3UgYW4gb2JqZWN0
LW9yaWVudGVkIGFyY2hpdGVjdHVyZS4KKiBbV2F0ZXJmYWxsXShodHRwczov
L2dpdGh1Yi5jb20vYXBuZWFkaXZpbmcvd2F0ZXJmYWxsKSAtIEEgc2xpY2Ug
b2YgZnVuY3Rpb25hbCBwcm9ncmFtbWluZyB0byBjaGFpbiBydWJ5IHNlcnZp
Y2VzIGFuZCBibG9ja3MsIHRodXMgcHJvdmlkaW5nIGEgbmV3IGFwcHJvYWNo
IHRvIGZsb3cgY29udHJvbC4KKiBbd2lzcGVyXShodHRwczovL2dpdGh1Yi5j
b20va3Jpc2xlZWNoL3dpc3BlcikgLSBBIG1pY3JvIGxpYnJhcnkgcHJvdmlk
aW5nIFJ1Ynkgb2JqZWN0cyB3aXRoIFB1Ymxpc2gtU3Vic2NyaWJlIGNhcGFi
aWxpdGllcy4KCiMjIEFkbWluIEludGVyZmFjZQoKKiBbQWN0aXZlQWRtaW5d
KGh0dHA6Ly9hY3RpdmVhZG1pbi5pbmZvKSAtIEEgUnVieSBvbiBSYWlscyBm
cmFtZXdvcmsgZm9yIGNyZWF0aW5nIGVsZWdhbnQgYmFja2VuZHMgZm9yIHdl
YnNpdGUgYWRtaW5pc3RyYXRpb24uCiogW0FjdGl2ZVNjYWZmb2xkXShodHRw
czovL2dpdGh1Yi5jb20vYWN0aXZlc2NhZmZvbGQvYWN0aXZlX3NjYWZmb2xk
KSAtIEFjdGl2ZVNjYWZmb2xkIHByb3ZpZGVzIHF1aWNrIGFuZCBwb3dlcmZ1
bCB1c2VyIGludGVyZmFjZXMgZm9yIENSVUQgKGNyZWF0ZSwgcmVhZCwgdXBk
YXRlLCBkZWxldGUpIG9wZXJhdGlvbnMgZm9yIFJhaWxzIGFwcGxpY2F0aW9u
cy4gSXQncyBleGNlbGxlbnQgZm9yIGdlbmVyYXRpbmcgYWRtaW4gaW50ZXJm
YWNlcywgbWFuYWdpbmcgRGF0YS1IZWF2eSBBcHBsaWNhdGlvbnMsIGNyZWF0
aW5nIFdpZGdldHMgb3IgZm9yIHF1aWNrIHByb3RvdHlwaW5nLiBBY3RpdmVT
Y2FmZm9sZCBpcyBjb21wbGV0bHkgY3VzdG9taXphYmxlIGFuZCBvZmZlcnMg
YSBidW5jaCBvZiBhZGRpdGlvbmFsIGZlYXR1cmVzIGluY2x1ZGluZyBzZWFy
Y2hpbmcsIHBhZ2luYXRpb24sIGxheW91dCBjb250cm9sIGFuZCBvdmVycmlk
ZXMgb2YgZmllbGRzLCBmb3JtcyBhbmQgdGVtcGxhdGVzLgoqIFtBZG1pbmlz
dHJhdGVdKGh0dHBzOi8vZ2l0aHViLmNvbS90aG91Z2h0Ym90L2FkbWluaXN0
cmF0ZSkgLSBBIFJhaWxzIGVuZ2luZSB0aGF0IGhlbHBzIHlvdSBwdXQgdG9n
ZXRoZXIgYSBzdXBlci1mbGV4aWJsZSBhZG1pbiBkYXNoYm9hcmQsIGJ5IFRo
b3VnaHRib3QuCiogW2JoZl0oaHR0cDovL2FudHBhdy5naXRodWIuaW8vYmhm
LykgLSBBIHNpbXBsZSB0byB1c2UgUmFpbHMtRW5naW5lLUdlbSB0aGF0IG9m
ZmVycyBhbiBhZG1pbiBpbnRlcmZhY2UgZm9yIHRydXN0ZWQgdXNlci4KKiBb
UmFpbHNBZG1pbl0oaHR0cHM6Ly9naXRodWIuY29tL3NmZXJpay9yYWlsc19h
ZG1pbikgLSBBIFJhaWxzIGVuZ2luZSB0aGF0IHByb3ZpZGVzIGFuIGVhc3kt
dG8tdXNlIGludGVyZmFjZSBmb3IgbWFuYWdpbmcgeW91ciBkYXRhLgoqIFtU
cmVzdGxlXShodHRwczovL2dpdGh1Yi5jb20vVHJlc3RsZUFkbWluL3RyZXN0
bGUpIC0gQSBtb2Rlcm4sIHJlc3BvbnNpdmUgYWRtaW4gZnJhbWV3b3JrIGZv
ciBSYWlscy4gQnVpbGQgYSBiYWNrLWVuZCBpbiBtaW51dGVzIHRoYXQgd2ls
bCBncm93IHdpdGggdGhlIG5lZWRzIG9mIHlvdXIgYXBwbGljYXRpb24uCiog
W1R5cHVzXShodHRwczovL2dpdGh1Yi5jb20vdHlwdXMvdHlwdXMpIC0gUnVi
eSBvbiBSYWlscyBjb250cm9sIHBhbmVsIHRvIGFsbG93IHRydXN0ZWQgdXNl
cnMgZWRpdCBzdHJ1Y3R1cmVkIGNvbnRlbnQuCgojIyBBbmFseXRpY3MKCiog
W0Fob3ldKGh0dHBzOi8vZ2l0aHViLmNvbS9hbmthbmUvYWhveSkgLSBBIHNv
bGlkIGZvdW5kYXRpb24gdG8gdHJhY2sgdmlzaXRzIGFuZCBldmVudHMgaW4g
UnVieSwgSmF2YVNjcmlwdCwgYW5kIG5hdGl2ZSBhcHBzLgoqIFtBbmFseXRp
Y2FsXShodHRwczovL2dpdGh1Yi5jb20vamtyYWxsL2FuYWx5dGljYWwpIC0g
R2VtIGZvciBtYW5hZ2luZyBtdWx0aXBsZSBhbmFseXRpY3Mgc2VydmljZXMg
aW4geW91ciByYWlscyBhcHAuCiogW0dhYmJhXShodHRwczovL2dpdGh1Yi5j
b20vaHlicmlkZ3JvdXAvZ2FiYmEpIC0gU2ltcGxlIHdheSB0byBzZW5kIHNl
cnZlci1zaWRlIG5vdGlmaWNhdGlvbnMgdG8gR29vZ2xlIEFuYWx5dGljcy4K
KiBbSW1wcmVzc2lvbmlzdF0oaHR0cHM6Ly9naXRodWIuY29tL2NoYXJsb3R0
ZS1ydWJ5L2ltcHJlc3Npb25pc3QpIC0gUmFpbHMgUGx1Z2luIHRoYXQgdHJh
Y2tzIGltcHJlc3Npb25zIGFuZCBwYWdlIHZpZXdzLgoqIFtMZWdhdG9dKGh0
dHBzOi8vZ2l0aHViLmNvbS90cGl0YWxlL2xlZ2F0bykgLSBNb2RlbCBhbmFs
eXRpY3MgcmVwb3J0cyBhbmQgcXVlcmllcyBhZ2FpbnN0IHRoZSBvZmZpY2lh
bCBHb29nbGUgQW5hbHl0aWNzIFJlcG9ydGluZyBBUEkuCiogW1JhY2s6OlRy
YWNrZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9yYWlsc2xvdmUvcmFjay10cmFj
a2VyKSAtIFJhY2sgbWlkZGxld2FyZSB0aGF0IGNhbiBiZSBob29rZWQgdXAg
dG8gbXVsdGlwbGUgc2VydmljZXMgYW5kIGV4cG9zaW5nIHRoZW0gaW4gYSB1
bmlmaWVkIGZhc2hpb24uCiogW1N0YWNjYXRvXShodHRwczovL2dpdGh1Yi5j
b20vdHBpdGFsZS9zdGFjY2F0bykgLSBUcmFjayBhbmFseXRpY3MgaW50byB0
aGUgb2ZmaWNpYWwgR29vZ2xlIEFuYWx5dGljcyBDb2xsZWN0aW9uIEFQSS4K
CiMjIEFQSSBCdWlsZGVyIGFuZCBEaXNjb3ZlcnkKCiogW0FjdGl2ZU1vZGVs
OjpTZXJpYWxpemVyc10oaHR0cHM6Ly9naXRodWIuY29tL3JhaWxzLWFwaS9h
Y3RpdmVfbW9kZWxfc2VyaWFsaXplcnMpIC0gSlNPTiBzZXJpYWxpemF0aW9u
IG9mIG9iamVjdHMuCiogW0JsYW5rZXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9p
bmYwcm1lci9ibGFua2V0KSAtIEEgZGVhZCBzaW1wbGUgQVBJIHdyYXBwZXIu
CiogW0NyZXBlXShodHRwczovL2dpdGh1Yi5jb20vY3JlcGUvY3JlcGUpIC0g
VGhlIHRoaW4gQVBJIHN0YWNrLgoqIFtGYXN0IEpTT04gQVBJXShodHRwczov
L2dpdGh1Yi5jb20vTmV0ZmxpeC9mYXN0X2pzb25hcGkpIC0gQSBsaWdodG5p
bmcgZmFzdCBKU09OOkFQSSBzZXJpYWxpemVyIGZvciBSdWJ5IE9iamVjdHMu
CiogW0dyYXBlXShodHRwOi8vd3d3LnJ1YnktZ3JhcGUub3JnKSAtIEFuIG9w
aW5pb25hdGVkIG1pY3JvLWZyYW1ld29yayBmb3IgY3JlYXRpbmcgUkVTVC1s
aWtlIEFQSXMgaW4gUnVieS4KKiBbSGVyXShodHRwczovL2dpdGh1Yi5jb20v
cmVtaXByZXYvaGVyKSAtIGFuIE9STSB0aGF0IG1hcHMgUkVTVCByZXNvdXJj
ZXMgdG8gUnVieSBvYmplY3RzLiBEZXNpZ25lZCB0byBidWlsZCBhcHBsaWNh
dGlvbnMgdGhhdCBhcmUgcG93ZXJlZCBieSBhIFJFU1RmdWwgQVBJIGluc3Rl
YWQgb2YgYSBkYXRhYmFzZS4KKiBbamJ1aWxkZXJdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9yYWlscy9qYnVpbGRlcikgLSBDcmVhdGUgSlNPTiBzdHJ1Y3R1cmVz
IHZpYSBhIEJ1aWxkZXItc3R5bGUgRFNMLgoqIFtqc29uYXBpLXJiXShodHRw
Oi8vanNvbmFwaS1yYi5vcmcpIOKAkyBFZmZpY2llbnQgYW5kIGNvbnZlbmll
bnQgSlNPTiBBUEkgKGRlKXNlcmlhbGl6YXRpb24gbGlicmFyeS4KKiBbSlNP
TkFQSTo6UmVzb3VyY2VzXShodHRwczovL2dpdGh1Yi5jb20vY2VyZWJyaXMv
anNvbmFwaS1yZXNvdXJjZXMpIC0gSlNPTkFQSTo6UmVzb3VyY2VzLCBvciAi
SlIiLCBwcm92aWRlcyBhIGZyYW1ld29yayBmb3IgZGV2ZWxvcGluZyBhIHNl
cnZlciB0aGF0IGNvbXBsaWVzIHdpdGggdGhlIEpTT04gQVBJIHNwZWNpZmlj
YXRpb24uCiogW0pTT05BUEk6OlV0aWxzXShodHRwczovL2dpdGh1Yi5jb20v
dGlhZ29wb2cvanNvbmFwaS11dGlscykgLSBKU09OQVBJOjpVdGlscyBpcyBi
dWlsdCBvbiB0b3Agb2YgSlNPTkFQSTo6UmVzb3VyY2VzIHRha2luZyBhZHZh
bnRhZ2Ugb2YgaXRzIHJlc291cmNlLWRyaXZlbiBzdHlsZSBhbmQgYnJpbmdp
bmcgYW4gZWFzeSB3YXkgdG8gYnVpbGQgbW9kZXJuIEpTT04gQVBJcyB3aXRo
IG5vIG9yIGxlc3MgbGVhcm5pbmcgY3VydmUuCiogW0pzb25pdGVdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9jcmVwZS9qc29uaXRlKSAtIEEgdGlueSwgSEFMLWNv
bXBsaWFudCBKU09OIHByZXNlbnRlciBmb3IgeW91ciBBUElzLgoqIFtQbGlu
eV0oaHR0cHM6Ly9naXRodWIuY29tL2ludGVyYWdlbnQvcGxpbnkpIC0gT3Bp
bmlvbmF0ZWQgdGVtcGxhdGUgU2luYXRyYSBhcHAgZm9yIHdyaXRpbmcgZXhj
ZWxsZW50IEFQSXMgaW4gUnVieS4KKiBbcmFibF0oaHR0cHM6Ly9naXRodWIu
Y29tL25lc3F1ZW5hL3JhYmwpIC0gR2VuZXJhbCBydWJ5IHRlbXBsYXRpbmcg
d2l0aCBqc29uLCBic29uLCB4bWwsIHBsaXN0IGFuZCBtc2dwYWNrIHN1cHBv
cnQuCiogW1JhaWxzOjpBUEldKGh0dHBzOi8vZ2l0aHViLmNvbS9yYWlscy1h
cGkvcmFpbHMtYXBpKSAtIFJhaWxzIGZvciBBUEkgb25seSBhcHBsaWNhdGlv
bnMuCiogW1JvYXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9hcG90b25pY2svcm9h
cikgLSBSZXNvdXJjZS1PcmllbnRlZCBBcmNoaXRlY3R1cmVzIGluIFJ1Ynku
CiogW1NweWtlXShodHRwczovL2dpdGh1Yi5jb20vYmFsdmlnL3NweWtlKSAt
IEludGVyYWN0IHdpdGggUkVTVCBzZXJ2aWNlcyBpbiBhbiBBY3RpdmVSZWNv
cmQtbGlrZSBtYW5uZXIuCiogW1ZlcnNpb24gQ2FrZV0oaHR0cHM6Ly9naXRo
dWIuY29tL2J3aWxsaXMvdmVyc2lvbmNha2UpIC0gQW4gdW5vYnRydXNpdmUg
d2F5IHRvIHZlcnNpb24gQVBJcyBpbiB5b3VyIFJhaWxzIGFwcC4KKiBbdmVy
c2lvbmlzdF0oaHR0cHM6Ly9naXRodWIuY29tL2JwbG9ldHovdmVyc2lvbmlz
dCkgLSBBIHBsdWdpbiBmb3IgdmVyc2lvbmluZyBSYWlscyBiYXNlZCBSRVNU
ZnVsIEFQSXMuCgojIyBBc3NldHMKCiogW0Fzc2V0IFN5bmNdKGh0dHBzOi8v
Z2l0aHViLmNvbS9Bc3NldFN5bmMvYXNzZXRfc3luYykgLSBTeW5jaHJvbmlz
ZXMgQXNzZXRzIGJldHdlZW4gUmFpbHMgYW5kIFMzLgoqIFtBdXRvcHJlZml4
ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9haS9hdXRvcHJlZml4ZXItcmFpbHMp
IC0gUGFyc2UgQ1NTIGFuZCBhZGQgdmVuZG9yIHByZWZpeGVzIHRvIHJ1bGVz
IGJ5IENhbiBJIFVzZS4KKiBbQm91cmJvbl0oaHR0cHM6Ly9naXRodWIuY29t
L3Rob3VnaHRib3QvYm91cmJvbikgLSBBIExpZ2h0d2VpZ2h0IFNhc3MgVG9v
bCBTZXQuCiogW2Jvd2VyLXJhaWxzXShodHRwczovL2dpdGh1Yi5jb20vcmhh
cnJpc28vYm93ZXItcmFpbHMpIC0gQm93ZXIgc3VwcG9ydCBmb3IgUmFpbHMg
cHJvamVjdHMuCiogW0Vtb2ppXShodHRwczovL2dpdGh1Yi5jb20vd3BldGVy
c29uL2Vtb2ppKSAtIEV4cG9zZXMgdGhlIFBoYW50b20gT3BlbiBFbW9qaSBs
aWJyYXJ5IHVuaWNvZGUvaW1hZ2UgYXNzZXRzIGFuZCBBUElzIGZvciB3b3Jr
aW5nIHdpdGggdGhlbS4KKiBbTGVzcyBSYWlsc10oaHR0cHM6Ly9naXRodWIu
Y29tL21ldGFza2lsbHMvbGVzcy1yYWlscykgLSBUaGUgZHluYW1pYyBzdHls
ZXNoZWV0IGxhbmd1YWdlIGZvciB0aGUgUmFpbHMgYXNzZXQgcGlwZWxpbmUu
CiogW0xlc3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9jb3dib3lkL2xlc3MucmIp
IC0gTGVhbmVyIENTUywgaW4geW91ciBicm93c2VyIG9yIFJ1YnkuCiogW1Jh
aWxzIEFzc2V0c10oaHR0cHM6Ly9yYWlscy1hc3NldHMub3JnKSAtIEJ1bmRs
ZXIgdG8gQm93ZXIgcHJveHkuCiogW1Nhc3NdKGh0dHA6Ly9zYXNzLWxhbmcu
Y29tKSAtIFNhc3MgbWFrZXMgQ1NTIGZ1biBhZ2Fpbi4KKiBbU3Byb2NrZXRz
XShodHRwczovL2dpdGh1Yi5jb20vcmFpbHMvc3Byb2NrZXRzKSAtIFJhY2st
YmFzZWQgYXNzZXQgcGFja2FnaW5nIHN5c3RlbS4KKiBbVG9yYmFdKGh0dHBz
Oi8vZ2l0aHViLmNvbS90b3JiYS1yYi90b3JiYSkgLSBCb3dlci1sZXNzIGJ1
bmRsZXIgZm9yIFNwcm9ja2V0cy4KKiBbV2VicGFja2VyXShodHRwczovL2dp
dGh1Yi5jb20vcmFpbHMvd2VicGFja2VyKSAtIFVzZSBXZWJwYWNrIHRvIG1h
bmFnZSBhcHAtbGlrZSBKYXZhU2NyaXB0IG1vZHVsZXMgaW4gUmFpbHMuCgoj
IyBBdXRoZW50aWNhdGlvbiBhbmQgT0F1dGgKCiogW0F1dGhsb2dpY10oaHR0
cHM6Ly9naXRodWIuY29tL2JpbmFyeWxvZ2ljL2F1dGhsb2dpYykgLSBBdXRo
bG9naWMgaXMgYSBjbGVhbiwgc2ltcGxlLCBhbmQgdW5vYnRydXNpdmUgcnVi
eSBhdXRoZW50aWNhdGlvbiBzb2x1dGlvbi4KKiBbQ2xlYXJhbmNlXShodHRw
czovL2dpdGh1Yi5jb20vdGhvdWdodGJvdC9jbGVhcmFuY2UpIC0gU21hbGwg
YW5kIHNpbXBsZSBlbWFpbCAmIHBhc3N3b3JkIGJhc2VkIGF1dGhlbnRpY2F0
aW9uIGZvciBSYWlscy4KKiBbRGV2aXNlXShodHRwczovL2dpdGh1Yi5jb20v
cGxhdGFmb3JtYXRlYy9kZXZpc2UpIC0gQSBmbGV4aWJsZSBhdXRoZW50aWNh
dGlvbiBzb2x1dGlvbiBmb3IgUmFpbHMgYmFzZWQgb24gV2FyZGVuLgoqIFtK
V1RdKGh0dHBzOi8vZ2l0aHViLmNvbS9qd3QvcnVieS1qd3QpIC0gSlNPTiBX
ZWIgVG9rZW4gaW1wbGVtZW50YXRpb24gaW4gUnVieS4KKiBbS25vY2tdKGh0
dHBzOi8vZ2l0aHViLmNvbS9uc2Fybm8va25vY2spIC0gU2VhbWxlc3MgSldU
IGF1dGhlbnRpY2F0aW9uIGZvciBSYWlscyBBUEkuCiogW01vbmJhbl0oaHR0
cHM6Ly9naXRodWIuY29tL2hhbG9nZW5hbmR0b2FzdC9tb25iYW4pIC0gQSB2
ZXJ5IHNpbXBsZSBhbmQgZXh0ZW5zaWJsZSB1c2VyIGF1dGhlbnRpY2F0aW9u
IGxpYnJhcnkgZm9yIHJhaWxzLgoqIFtPbW5pQXV0aF0oaHR0cHM6Ly9naXRo
dWIuY29tL29tbmlhdXRoL29tbmlhdXRoKSAtIEEgbGlicmFyeSB0aGF0IHN0
YW5kYXJkaXplcyBtdWx0aS1wcm92aWRlciBhdXRoZW50aWNhdGlvbiB1dGls
aXppbmcgUmFjayBtaWRkbGV3YXJlLgoqIFtSb2RhdXRoXShodHRwczovL2dp
dGh1Yi5jb20vamVyZW15ZXZhbnMvcm9kYXV0aCkgLSBBdXRoZW50aWNhdGlv
biBhbmQgYWNjb3VudCBtYW5hZ2VtZW50IGZyYW1ld29yayBmb3IgUmFjayBh
cHBsaWNhdGlvbnMuCiogW1NoaWVsZF0oaHR0cHM6Ly9naXRodWIuY29tL2N5
eC9zaGllbGQpIC0gQXV0aGVudGljYXRpb24gcHJvdG9jb2wgZm9yIHVzZSBp
biB5b3VyIHJvdXRpbmcgYW5kIG1vZGVsIGNvbnRleHQuCiogW1NvcmNlcnld
KGh0dHBzOi8vZ2l0aHViLmNvbS9Tb3JjZXJ5L3NvcmNlcnkpIC0gTWFnaWNh
bCBBdXRoZW50aWNhdGlvbiBmb3IgUmFpbHMgNCwgYW5kIFJhaWxzIDUuCiog
W3dhcmRlbl0oaHR0cHM6Ly9naXRodWIuY29tL2hhc3NveC93YXJkZW4pIC0g
R2VuZXJhbCBSYWNrIEF1dGhlbnRpY2F0aW9uIEZyYW1ld29yay4KKiBPQXV0
aDoKICAqIFtEb29ya2VlcGVyXShodHRwczovL2dpdGh1Yi5jb20vZG9vcmtl
ZXBlci1nZW0vZG9vcmtlZXBlcikgLSBBbiBPQXV0aDIgcHJvdmlkZXIgZm9y
IFJhaWxzLgogICogW09BdXRoMl0oaHR0cHM6Ly9naXRodWIuY29tL2ludHJp
ZGVhL29hdXRoMikgLSBBIFJ1Ynkgd3JhcHBlciBmb3IgdGhlIE9BdXRoIDIu
MCBwcm90b2NvbC4KCiMjIEF1dGhvcml6YXRpb24KCiogW2FjbDldKGh0dHBz
Oi8vZ2l0aHViLmNvbS9iZTkvYWNsOSkgLSBBY2w5IGlzIGEgcm9sZS1iYXNl
ZCBhdXRob3JpemF0aW9uIHN5c3RlbSB0aGF0IHByb3ZpZGVzIGEgY29uY2lz
ZSBEU0wgZm9yIHNlY3VyaW5nIHlvdXIgUmFpbHMgYXBwbGljYXRpb24uCiog
W0FjY2Vzc0dyYW50ZWRdKGh0dHBzOi8vZ2l0aHViLmNvbS9jaGFwcy1pby9h
Y2Nlc3MtZ3JhbnRlZCkgLSBNdWx0aS1yb2xlIGFuZCB3aGl0ZWxpc3QgYmFz
ZWQgYXV0aG9yaXphdGlvbiBnZW0gZm9yIFJhaWxzLgoqIFtBY3Rpb25Qb2xp
Y3ldKGh0dHBzOi8vZ2l0aHViLmNvbS9wYWxrYW4vYWN0aW9uX3BvbGljeSkg
LSBBdXRob3JpemF0aW9uIGZyYW1ld29yayBmb3IgUnVieSBhbmQgUmFpbHMg
YXBwbGljYXRpb25zLiBDb21wb3NhYmxlLCBleHRlbnNpYmxlIGFuZCBwZXJm
b3JtYW50LgoqIFtBdXRob3JpdHldKGh0dHBzOi8vZ2l0aHViLmNvbS9uYXRo
YW5sL2F1dGhvcml0eSkgLSBPUk0tbmV1dHJhbCB3YXkgdG8gYXV0aG9yaXpl
IGFjdGlvbnMgaW4geW91ciBSYWlscyBhcHAuCiogW0NhbkNhbkNhbl0oaHR0
cHM6Ly9naXRodWIuY29tL0NhbkNhbkNvbW11bml0eS9jYW5jYW5jYW4pIC0g
Q29udGludWF0aW9uIG9mIENhbkNhbiwgYW4gYXV0aG9yaXphdGlvbiBHZW0g
Zm9yIFJ1Ynkgb24gUmFpbHMuCiogW0RlY2xhcmF0aXZlIEF1dGhvcml6YXRp
b25dKGh0dHBzOi8vZ2l0aHViLmNvbS9zdGZmbi9kZWNsYXJhdGl2ZV9hdXRo
b3JpemF0aW9uKSAtIEFuIGF1dGhvcml6YXRpb24gUmFpbHMgcGx1Z2luIHVz
aW5nIGEgZGVjbGFyYXRpdmUgRFNMIGZvciBzcGVjaWZ5aW5nIGF1dGhvcml6
YXRpb24gcnVsZXMgaW4gb25lIHBsYWNlLgoqIFtQZXRlcmdhdGVdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9lbG9yZXN0L3BldGVyZ2F0ZSkgLSBFYXN5IHRvIHVz
ZSBhbmQgcmVhZCBhY3Rpb24gYW5kIGNvbnRlbnQgYmFzZWQgYXV0aG9yaXph
dGlvbnMuCiogW1B1bmRpdF0oaHR0cHM6Ly9naXRodWIuY29tL2VsYWJzL3B1
bmRpdCkgLSBNaW5pbWFsIGF1dGhvcml6YXRpb24gdGhyb3VnaCBPTyBkZXNp
Z24gYW5kIHB1cmUgUnVieSBjbGFzc2VzLgoKIyMgQXV0b21hdGlvbgoKKiBb
RGFuZ2VyXShodHRwczovL2dpdGh1Yi5jb20vZGFuZ2VyL2RhbmdlcikgLSBB
dXRvbWF0ZSB5b3VyIHRlYW0ncyBjb252ZW50aW9ucyBzdXJyb3VuZGluZyBj
b2RlIHJldmlldy4KKiBbSHVnaW5uXShodHRwczovL2dpdGh1Yi5jb20vY2Fu
dGluby9odWdpbm4pIC0gSHVnaW5uIGlzIGEgc3lzdGVtIGZvciBidWlsZGlu
ZyBhZ2VudHMgdGhhdCBwZXJmb3JtIGF1dG9tYXRlZCB0YXNrcyBmb3IgeW91
IG9ubGluZS4KCiMjIENhY2hpbmcKCiogW0FjdGlvbiBjYWNoaW5nIGZvciBB
Y3Rpb24gUGFja10oaHR0cHM6Ly9naXRodWIuY29tL3JhaWxzL2FjdGlvbnBh
Y2stYWN0aW9uX2NhY2hpbmcpIC0gQWN0aW9uIGNhY2hpbmcgZm9yIEFjdGlv
biBQYWNrLgoqIFtEYWxsaV0oaHR0cHM6Ly9naXRodWIuY29tL21wZXJoYW0v
ZGFsbGkpIC0gQSBoaWdoIHBlcmZvcm1hbmNlIHB1cmUgUnVieSBjbGllbnQg
Zm9yIGFjY2Vzc2luZyBtZW1jYWNoZWQgc2VydmVycy4KKiBbR2FybmVyXSho
dHRwczovL2dpdGh1Yi5jb20vYXJ0c3kvZ2FybmVyKSAtIEEgc2V0IG9mIFJh
Y2sgbWlkZGxld2FyZSBhbmQgY2FjaGUgaGVscGVycyB0aGF0IGltcGxlbWVu
dCB2YXJpb3VzIGNhY2hpbmcgc3RyYXRlZ2llcy4KKiBbSWRlbnRpdHlDYWNo
ZV0oaHR0cHM6Ly9naXRodWIuY29tL1Nob3BpZnkvaWRlbnRpdHlfY2FjaGUp
IC0gQSBibG9iIGxldmVsIGNhY2hpbmcgc29sdXRpb24gdG8gcGx1ZyBpbnRv
IEFjdGl2ZVJlY29yZC4KKiBbS2FzaG1pcl0oaHR0cHM6Ly9naXRodWIuY29t
L0lGVFRUL2thc2htaXIpIC0gS2FzaG1pciBpcyBhIFJ1YnkgRFNMIHRoYXQg
bWFrZXMgc2VyaWFsaXppbmcgYW5kIGNhY2hpbmcgb2JqZWN0cyBhIHNuYXAu
CiogW1JlYWR0aGlzXShodHRwczovL2dpdGh1Yi5jb20vc29yZW50d28vcmVh
ZHRoaXMpIC0gSGlnaCBwZXJmb3JtYW5jZSwgcG9vbGVkLCBBY3RpdmVTdXBw
b3J0IGNvbXBsaWFudCBjYWNoaW5nIHdpdGggUmVkaXMuCiogW1JlY29yZCBD
YWNoZV0oaHR0cHM6Ly9naXRodWIuY29tL29yc2x1bWVuL3JlY29yZC1jYWNo
ZSkgLSBDYWNoZSBBY3RpdmUgTW9kZWwgUmVjb3JkcyBpbiBSYWlscyAzLgoq
IFtyZWRpcy1zdG9yZV0oaHR0cDovL3JlZGlzLXN0b3JlLm9yZy8pIC0gUmVk
aXMgU3RvcmUgcHJvdmlkZXMgYSBmdWxsIHNldCBvZiBzdG9yZXMgKENhY2hl
LCBJMThuLCBTZXNzaW9uLCBIVFRQIENhY2hlKSBmb3IgbW9kZXJuIFJ1Ynkg
ZnJhbWV3b3JrcyBsaWtlOiBSdWJ5IG9uIFJhaWxzLCBTaW5hdHJhLCBSYWNr
LCBSYWNrOjpDYWNoZSBhbmQgSTE4bi4gSXQgc3VwcG9ydHMgb2JqZWN0IG1h
cnNoYWxsaW5nLCB0aW1lb3V0cywgc2luZ2xlIG9yIG11bHRpcGxlIG5vZGVz
LCBhbmQgbmFtZXNwYWNlcy4KKiBbU2Vjb25kIExldmVsIENhY2hlXShodHRw
czovL2dpdGh1Yi5jb20vaG9vb3BvL3NlY29uZF9sZXZlbF9jYWNoZSkgLSBX
cml0ZS1UaHJvdWdoIGFuZCBSZWFkLVRocm91Z2ggY2FjaGluZyBsaWJyYXJ5
IGZvciBBY3RpdmVSZWNvcmQgNC4KCiMjIENhcHRjaGFzIGFuZCBhbnRpLXNw
YW0KCiogW0ludmlzaWJsZSBDYXB0Y2hhXShodHRwczovL2dpdGh1Yi5jb20v
bWFya2V0cy9pbnZpc2libGVfY2FwdGNoYSkgLSBVbm9idHJ1c2l2ZSBhbmQg
ZmxleGlibGUgc3BhbSBwcm90ZWN0aW9uIGJhc2VkIG9uIHRoZSBob25leXBv
dCBzdHJhdGVneS4gSXQgYWxzbyBwcm92aWRlcyBhIHRpbWUtc2Vuc2l0aXZl
IGZvcm0gc3VibWlzc2lvbi4KKiBbUmFraXNtZXRdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9qb3NoZnJlbmNoL3Jha2lzbWV0KSAtIEVhc3kgQWtpc21ldCBhbmQg
VHlwZVBhZCBBbnRpU3BhbSBpbnRlZ3JhdGlvbiBmb3IgUmFpbHMuCiogW3Jl
Q0FQVENIQV0oaHR0cHM6Ly9naXRodWIuY29tL2FtYmV0aGlhL3JlY2FwdGNo
YSkgLSByZUNhcHRjaGEgQVBJIGhlbHBlcnMgZm9yIHJ1YnkgYXBwcy4KKiBb
Vm9pZ2h0LUthbXBmZl0oaHR0cHM6Ly9naXRodWIuY29tL2Jpb2xhL1ZvaWdo
dC1LYW1wZmYpIC0gQSBSdWJ5IGdlbSB0aGF0IGRldGVjdHMgYm90cywgc3Bp
ZGVycywgY3Jhd2xlcnMgYW5kIHJlcGxpY2FudHMuCgojIyBDTEkgQnVpbGRl
cgoKKiBbQ2xhbXBdKGh0dHBzOi8vZ2l0aHViLmNvbS9tZHViL2NsYW1wKSAt
IEEgY29tbWFuZC1saW5lIGFwcGxpY2F0aW9uIGZyYW1ld29yay4KKiBbY21k
cGFyc2VdKGh0dHA6Ly9jbWRwYXJzZS5nZXR0YWxvbmcub3JnKSAtIEFuIGFk
dmFuY2VkIGNvbW1hbmQgbGluZSBwYXJzZXIgc3VwcG9ydGluZyBuZXN0ZWQg
Y29tbWFuZHMuCiogW0NvbW1hbmRlcl0oaHR0cHM6Ly9naXRodWIuY29tL2Nv
bW1hbmRlci1yYi9jb21tYW5kZXIpIC0gVGhlIGNvbXBsZXRlIHNvbHV0aW9u
IGZvciBSdWJ5IGNvbW1hbmQtbGluZSBleGVjdXRhYmxlcy4KKiBbR0xJXSho
dHRwczovL2dpdGh1Yi5jb20vZGF2ZXRyb241MDAwL2dsaSkgLSBHaXQtTGlr
ZSBJbnRlcmZhY2UgQ29tbWFuZCBMaW5lIFBhcnNlci4KKiBbSGFuYW1pIENM
SV0oaHR0cHM6Ly9naXRodWIuY29tL2hhbmFtaS9jbGkpIC0gR2VuZXJhbCBw
dXJwb3NlIENvbW1hbmQgTGluZSBJbnRlcmZhY2UgKENMSSkgZnJhbWV3b3Jr
IGZvciBSdWJ5LgoqIFtNYWluXShodHRwczovL2dpdGh1Yi5jb20vYWhvd2Fy
ZC9tYWluKSAtIEEgY2xhc3MgZmFjdG9yeSBhbmQgRFNMIGZvciBnZW5lcmF0
aW5nIGNvbW1hbmQgbGluZSBwcm9ncmFtcyByZWFsIHF1aWNrLgoqIFtPcHRp
bWlzdF0oaHR0cHM6Ly9naXRodWIuY29tL01hbmFnZUlRL29wdGltaXN0KSAt
IEEgY29tbWFuZGxpbmUgb3B0aW9uIHBhcnNlciBmb3IgUnVieSB0aGF0IGp1
c3QgZ2V0cyBvdXQgb2YgeW91ciB3YXkuCiogW1Jha2VdKGh0dHBzOi8vZ2l0
aHViLmNvbS9ydWJ5L3Jha2UpIC0gQSBtYWtlLWxpa2UgYnVpbGQgdXRpbGl0
eSBmb3IgUnVieS4KKiBbU2xvcF0oaHR0cHM6Ly9naXRodWIuY29tL2xlZWph
cnZpcy9zbG9wKSAtIFNpbXBsZSBMaWdodHdlaWdodCBPcHRpb24gUGFyc2lu
Zy4KKiBbVGVycmFwaW5dKGh0dHBzOi8vZ2l0aHViLmNvbS90aG91Z2h0Ym90
L3RlcnJhcGluKSAtIEEgc21hbGwgY29tbWFuZCBsaW5lIGxpYnJhcnkgKEZv
cm1lcmx5IENvY2FpbmUpLgoqIFtUaG9yXShodHRwOi8vd2hhdGlzdGhvci5j
b20pIC0gQSB0b29sa2l0IGZvciBidWlsZGluZyBwb3dlcmZ1bCBjb21tYW5k
LWxpbmUgaW50ZXJmYWNlcy4KKiBbVFRZXShodHRwczovL2dpdGh1Yi5jb20v
cGV0ZXItbXVyYWNoL3R0eSkgLSBUb29sYm94IGZvciBkZXZlbG9waW5nIENM
SSBjbGllbnRzLgoKIyMgQ0xJIFV0aWxpdGllcwoKKiBbQXdlc29tZSBQcmlu
dF0oaHR0cHM6Ly9naXRodWIuY29tL2F3ZXNvbWUtcHJpbnQvYXdlc29tZV9w
cmludCkgLSBQcmV0dHkgcHJpbnQgeW91ciBSdWJ5IG9iamVjdHMgd2l0aCBz
dHlsZSAtLSBpbiBmdWxsIGNvbG9yIGFuZCB3aXRoIHByb3BlciBpbmRlbnRh
dGlvbgoqIFtCZXR0eV0oaHR0cHM6Ly9naXRodWIuY29tL3BpY2toYXJkdC9i
ZXR0eSkgLSBGcmllbmRseSBFbmdsaXNoLWxpa2UgaW50ZXJmYWNlIGZvciB5
b3VyIGNvbW1hbmQgbGluZS4gRG9uJ3QgcmVtZW1iZXIgYSBjb21tYW5kPyBB
c2sgQmV0dHkuCiogW2NvbG9yaXplXShodHRwczovL2dpdGh1Yi5jb20vZmF6
aWJlYXIvY29sb3JpemUpIC0gRXh0ZW5kcyBTdHJpbmcgY2xhc3Mgb3IgYWRk
IGEgQ29sb3JpemVkU3RyaW5nIHdpdGggbWV0aG9kcyB0byBzZXQgdGV4dCBj
b2xvciwgYmFja2dyb3VuZCBjb2xvciBhbmQgdGV4dCBlZmZlY3RzLgoqIFtj
b2xvcmxzXShodHRwczovL2dpdGh1Yi5jb20vYXRoaXR5YWt1bWFyL2NvbG9y
bHMpIC0gQmVhdXRpZmllcyB0aGUgYGxzYCBjb21tYW5kLCB3aXRoIGNvbG9y
IGFuZCBmb250LWF3ZXNvbWUgaWNvbnMuCiogW2Zvcm1hdGFkb3JdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9nZWVtdXMvZm9ybWF0YWRvcikgLSBTVERPVVQgdGV4
dCBmb3JtYXR0aW5nLgoqIFtQYWludF0oaHR0cHM6Ly9naXRodWIuY29tL2ph
bmxlbGlzL3BhaW50KSAtIFNpbXBsZSBhbmQgZmFzdCB3YXkgdG8gc2V0IEFO
U0kgdGVybWluYWwgY29sb3JzLgoqIFtQYXN0ZWxdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9wZXRlci1tdXJhY2gvcGFzdGVsKSAtIFRlcm1pbmFsIG91dHB1dCBz
dHlsaW5nIHdpdGggaW50dWl0aXZlIGFuZCBjbGVhbiBBUEkuCiogW1J1XSho
dHRwczovL2dpdGh1Yi5jb20vdG9tYmVubmVyL3J1KSAtIFJ1YnkgaW4geW91
ciBzaGVsbC4KKiBbUnVieS9Qcm9ncmVzc2Jhcl0oaHR0cHM6Ly9naXRodWIu
Y29tL2pmZWxjaG5lci9ydWJ5LXByb2dyZXNzYmFyKSAtIFRoZSBtb3N0IGZs
ZXhpYmxlIHRleHQgcHJvZ3Jlc3MgYmFyIGxpYnJhcnkgZm9yIFJ1YnkuCiog
W1RhYnVsb10oaHR0cHM6Ly9naXRodWIuY29tL21hdHQtaGFydmV5L3RhYnVs
bykgLSBSdWJ5IEFTQ0lJIHRhYmxlIGdlbmVyYXRvci4gUHJvZHVjZSBoaWdo
bHkgcmVhZGFibGUgdGVybWluYWwgdGFibGVzLCBldmVuIGZyb20gbGFyZ2Us
IHVud2llbGR5IGRhdGEgc2V0cyBhbmQgc3RyZWFtcy4KKiBbVGFibGVQcmlu
dF0oaHR0cHM6Ly9naXRodWIuY29tL2FyY2hlcy90YWJsZV9wcmludCkgLSBT
bGljZSB5b3VyIGRhdGEgZnJvbSBtdWx0aXBsZSBEQiB0YWJsZXMgaW50byBh
IHNpbmdsZSBDTEkgdmlldy4KKiBbVGVybWluYWwgVGFibGVdKGh0dHBzOi8v
Z2l0aHViLmNvbS90ai90ZXJtaW5hbC10YWJsZSkgLSBSdWJ5IEFTQ0lJIFRh
YmxlIEdlbmVyYXRvciwgc2ltcGxlIGFuZCBmZWF0dXJlIHJpY2guCiogW1Rt
dXhpbmF0b3JdKGh0dHBzOi8vZ2l0aHViLmNvbS90bXV4aW5hdG9yL3RtdXhp
bmF0b3IpIC0gQ3JlYXRlIGFuZCBtYW5hZ2UgY29tcGxleCB0bXV4IHNlc3Np
b25zIGVhc2lseS4KKiBbV2hpcmx5XShodHRwczovL2dpdGh1Yi5jb20vamFu
bGVsaXMvd2hpcmx5KSAtIEEgc2ltcGxlLCBjb2xvcmZ1bCBhbmQgY3VzdG9t
aXphYmxlIHRlcm1pbmFsIHNwaW5uZXIgbGlicmFyeSBmb3IgUnVieS4KCiMj
IENsb3VkCgoqIFtBV1MgU0RLIGZvciBSdWJ5XShodHRwczovL2dpdGh1Yi5j
b20vYXdzL2F3cy1zZGstcnVieSkgLSBUaGUgb2ZmaWNpYWwgQVdTIFNESyBm
b3IgUnVieS4KKiBbYnJvd3NlLWV2ZXJ5dGhpbmddKGh0dHBzOi8vZ2l0aHVi
LmNvbS9wcm9qZWN0aHlkcmEvYnJvd3NlLWV2ZXJ5dGhpbmcpIC0gTXVsdGkt
cHJvdmlkZXIgUmFpbHMgZW5naW5lIHByb3ZpZGluZyBhY2Nlc3MgdG8gZmls
ZXMgaW4gY2xvdWQgc3RvcmFnZS4KKiBbRm9nXShodHRwczovL2dpdGh1Yi5j
b20vZm9nL2ZvZykgLSBUaGUgUnVieSBjbG91ZCBzZXJ2aWNlcyBsaWJyYXJ5
LgoqIFtodW1pZGlmaWVyXShodHRwczovL2dpdGh1Yi5jb20va2RkZWlzei9o
dW1pZGlmaWVyKSAtIFByb2dyYW1tYXRpY2FsbHkgZ2VuZXJhdGUgYW5kIG1h
bmFnZSBBV1MgQ2xvdWRGb3JtYXRpb24gdGVtcGxhdGVzLCBzdGFja3MsIGFu
ZCBjaGFuZ2Ugc2V0cy4KCiMjIENNUwoqIFtBbGNoZW15IENNU10oaHR0cHM6
Ly9hbGNoZW15LWNtcy5jb20pIC0gQSBwb3dlcmZ1bCwgdXNlcmZyaWVuZGx5
IGFuZCBmbGV4aWJsZSBPcGVuIFNvdXJjZSBSYWlscyBDTVMuCiogW0NhbWFs
ZW9uIENNU10oaHR0cDovL2NhbWFsZW9uLnR1eml0aW8uY29tLykgLSBBIGR5
bmFtaWMgYW5kIGFkdmFuY2VkIGNvbnRlbnQgbWFuYWdlbWVudCBzeXN0ZW0g
YmFzZWQgb24gUnVieSBvbiBSYWlscyA0LgoqIFtDb21mb3J0YWJsZU1leGlj
YW5Tb2ZhXShodHRwczovL2dpdGh1Yi5jb20vY29tZnkvY29tZm9ydGFibGUt
bWV4aWNhbi1zb2ZhKSAtIFBvd2VyZnVsIFJhaWxzIDUuMisgQ01TIEVuZ2lu
ZS4KKiBbRmFlXShodHRwczovL2dpdGh1Yi5jb20vd2VhcmVmaW5lL2ZhZSkg
LSBGbGV4aWJsZSwgb3BlbiBzb3VyY2UsIFJhaWxzIENNUyBlbmdpbmUuCiog
W0xvY29tb3RpdmVDTVNdKGh0dHBzOi8vd3d3LmxvY29tb3RpdmVjbXMuY29t
KSAtIEEgc2ltcGxlIGJ1dCBwb3dlcmZ1bCBDTVMgYmFzZWQgb24gTGlxdWlk
IHRlbXBsYXRlcyBhbmQgTW9uZ29kYiBkYXRhYmFzZS4KKiBbUHVibGlmeV0o
aHR0cHM6Ly9naXRodWIuY29tL3B1YmxpZnkvcHVibGlmeSkgLSBBIHNlbGYg
aG9zdGVkIFdlYiBwdWJsaXNoaW5nIHBsYXRmb3JtIG9uIFJhaWxzLgoqIFtQ
dXNoVHlwZV0oaHR0cDovL3d3dy5wdXNodHlwZS5vcmcvKSAtIEEgbmV4dCBn
ZW5lcmF0aW9uLCBvcGVuIHNvdXJjZSBjb250ZW50IG1hbmFnZW1lbnQgc3lz
dGVtIGZvciBSdWJ5IG9uIFJhaWxzLgoqIFtSYWRpYW50XShodHRwOi8vcmFk
aWFudGNtcy5vcmcpIC0gQSBuby1mbHVmZiwgb3BlbiBzb3VyY2UgY29udGVu
dCBtYW5hZ2VtZW50IHN5c3RlbSBkZXNpZ25lZCBmb3Igc21hbGwgdGVhbXMu
CiogW1JlZmluZXJ5IENNU10oaHR0cHM6Ly93d3cucmVmaW5lcnljbXMuY29t
KSAtIEFuIG9wZW4gc291cmNlIFJ1Ynkgb24gUmFpbHMgY29udGVudCBtYW5h
Z2VtZW50IHN5c3RlbSBmb3IgUmFpbHMgNS4yKy4KKiBbU3BpbmEgQ01TXSho
dHRwczovL3d3dy5zcGluYWNtcy5jb20pIC0gQSBiZWF1dGlmdWwgQ01TIGZv
ciBSYWlscyBkZXZlbG9wZXJzLgoqIFtTdG9yeXRpbWVdKGh0dHBzOi8vZ2l0
aHViLmNvbS9DdWx0aXZhdGVMYWJzL3N0b3J5dGltZSkgLSBSYWlscyA0KyBD
TVMgYW5kIGJsb2dpbmcgZW5naW5lLCB3aXRoIGEgY29yZSBmb2N1cyBvbiBj
b250ZW50LgoKIyMgQ29kZSBBbmFseXNpcyBhbmQgTWV0cmljcwoKKiBbQmFy
a2VlcF0oaHR0cHM6Ly9naXRodWIuY29tL29veWFsYS9iYXJrZWVwKSAtIEJh
cmtlZXAgaXMgYSBmYXN0LCBmdW4gd2F5IHRvIHJldmlldyBjb2RlLiBFbmdp
bmVlcmluZyBvcmdhbml6YXRpb25zIGNhbiB1c2UgaXQgdG8ga2VlcCB0aGUg
YmFyIGhpZ2guCiogW0JyYWtlbWFuXShodHRwczovL2dpdGh1Yi5jb20vcHJl
c2lkZW50YmVlZi9icmFrZW1hbikgLSBBIHN0YXRpYyBhbmFseXNpcyBzZWN1
cml0eSB2dWxuZXJhYmlsaXR5IHNjYW5uZXIgZm9yIFJ1Ynkgb24gUmFpbHMg
YXBwbGljYXRpb25zLgoqIFtDYW5lXShodHRwczovL2dpdGh1Yi5jb20vc3F1
YXJlL2NhbmUpIC0gQ29kZSBxdWFsaXR5IHRocmVzaG9sZCBjaGVja2luZyBh
cyBwYXJ0IG9mIHlvdXIgYnVpbGQuCiogW0NvdmVyYmFuZF0oaHR0cHM6Ly9n
aXRodWIuY29tL2Rhbm1heWVyL2NvdmVyYmFuZCkgLSBSYWNrIG1pZGRsZXdh
cmUgdG8gaGVscCBtZWFzdXJlIHByb2R1Y3Rpb24gY29kZSBjb3ZlcmFnZS4K
KiBbRmFzdGVyZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9EYW1pclN2cnRhbi9m
YXN0ZXJlcikgLSBNYWtlIHlvdXIgUnViaWVzIGdvIGZhc3RlciB3aXRoIHRo
aXMgY29tbWFuZCBsaW5lIHRvb2wgaGlnaGx5IGluc3BpcmVkIGJ5IGZhc3Qt
cnVieSBhbmQgU2ZlcmlrJ3MgdGFsayBhdCBCYXJ1Y28gQ29uZi4KKiBbRmxh
eV0oaHR0cHM6Ly9naXRodWIuY29tL3NlYXR0bGVyYi9mbGF5KSAtIEZsYXkg
YW5hbHl6ZXMgY29kZSBmb3Igc3RydWN0dXJhbCBzaW1pbGFyaXRpZXMuIERp
ZmZlcmVuY2VzIGluIGxpdGVyYWwgdmFsdWVzLCB2YXJpYWJsZSwgY2xhc3Ms
IG1ldGhvZCBuYW1lcywgd2hpdGVzcGFjZSwgcHJvZ3JhbW1pbmcgc3R5bGUs
IGJyYWNlcyB2cyBkby9lbmQsIGV0YyBhcmUgYWxsIGlnbm9yZWQuIE1ha2lu
ZyB0aGlzIHRvdGFsbHkgcmFkLgoqIFtGbG9nXShodHRwczovL2dpdGh1Yi5j
b20vc2VhdHRsZXJiL2Zsb2cpIC0gRmxvZyByZXBvcnRzIHRoZSBtb3N0IHRv
cnR1cmVkIGNvZGUgaW4gYW4gZWFzeSB0byByZWFkIHBhaW4gcmVwb3J0LiBU
aGUgaGlnaGVyIHRoZSBzY29yZSwgdGhlIG1vcmUgcGFpbiB0aGUgY29kZSBp
cyBpbi4KKiBbZnVrdXphdHN1XShodHRwczovL2dpdGxhYi5jb20vY29yYWxp
bmUvZnVrdXphdHN1I2Z1a3V6YXRzdSkgLSBDb21wbGV4aXR5IGFuYWx5c2lz
IHRvb2wgd2l0aCBhIHJpY2ggd2ViIGZyb250LWVuZC4KKiBbTWV0cmljRnVd
KGh0dHBzOi8vZ2l0aHViLmNvbS9tZXRyaWNmdS9tZXRyaWNfZnUpIC0gQSBm
aXN0IGZ1bGwgb2YgY29kZSBtZXRyaWNzLgoqIFtQaXBwaV0oaHR0cHM6Ly9n
aXRodWIuY29tL3Rjb3BlbGFuZC9waXBwaSkgLSBBIHV0aWxpdHkgZm9yIGZp
bmRpbmcgc3Vib3B0aW1hbCBSdWJ5IGNsYXNzIEFQSSB1c2FnZSwgZm9jdXNl
ZCBvbiBydW50aW1lIGFuYWx5c2lzLgoqIFtQcm9udG9dKGh0dHBzOi8vZ2l0
aHViLmNvbS9tbW96dXJhcy9wcm9udG8pIC0gUXVpY2sgYXV0b21hdGVkIGNv
ZGUgcmV2aWV3IG9mIHlvdXIgY2hhbmdlcy4KKiBbcmFpbHNfYmVzdF9wcmFj
dGljZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9yYWlsc2JwL3JhaWxzX2Jlc3Rf
cHJhY3RpY2VzKSAtIEEgY29kZSBtZXRyaWMgdG9vbCBmb3IgcmFpbHMgcHJv
amVjdHMuCiogW1JlZWtdKGh0dHBzOi8vZ2l0aHViLmNvbS90cm9lc3NuZXIv
cmVlaykgLSBDb2RlIHNtZWxsIGRldGVjdG9yIGZvciBSdWJ5LgoqIFtSdWJ5
Y3JpdGljXShodHRwczovL2dpdGh1Yi5jb20vd2hpdGVzbWl0aC9ydWJ5Y3Jp
dGljKSAtIEEgUnVieSBjb2RlIHF1YWxpdHkgcmVwb3J0ZXIuCiogW1NjaWVu
dGlzdF0oaHR0cHM6Ly9naXRodWIuY29tL2dpdGh1Yi9zY2llbnRpc3QpIC0g
QSBSdWJ5IGxpYnJhcnkgZm9yIGNhcmVmdWxseSByZWZhY3RvcmluZyBjcml0
aWNhbCBwYXRocy4KKiBbU2ltcGxlQ292XShodHRwczovL2dpdGh1Yi5jb20v
Y29sc3pvd2thL3NpbXBsZWNvdikgLSBDb2RlIGNvdmVyYWdlIGZvciBSdWJ5
IDEuOSsgd2l0aCBhIHBvd2VyZnVsIGNvbmZpZ3VyYXRpb24gbGlicmFyeSBh
bmQgYXV0b21hdGljIG1lcmdpbmcgb2YgY292ZXJhZ2UgYWNyb3NzIHRlc3Qg
c3VpdGVzLgoqIFtTb3JiZXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9zb3JiZXQv
c29yYmV0KSAtIEEgc3RhdGljIHR5cGUgY2hlY2tlciBmb3IgUnVieS4KKiBb
U3V0dXJlXShodHRwczovL2dpdGh1Yi5jb20vdGVzdGRvdWJsZS9zdXR1cmUp
IC0gQSBSdWJ5IGdlbSB0aGF0IGhlbHBzIHlvdSByZWZhY3RvciB5b3VyIGxl
Z2FjeSBjb2RlLgoqIFtUcmFjZXJvdXRlXShodHRwczovL2dpdGh1Yi5jb20v
YW1hdHN1ZGEvdHJhY2Vyb3V0ZSkgLSBBIFJha2UgdGFzayBnZW0gdGhhdCBo
ZWxwcyB5b3UgZmluZCB0aGUgZGVhZCByb3V0ZXMgYW5kIGFjdGlvbnMgZm9y
IHlvdXIgUmFpbHMgMysgYXBwCgojIyBDb2RlIEZvcm1hdHRpbmcKCiogW3By
ZXR0aWVyXShodHRwczovL2dpdGh1Yi5jb20vcHJldHRpZXIvcGx1Z2luLXJ1
YnkpIC0gQSBwcmV0dGllciBwbHVnaW4gZm9yIHRoZSBSdWJ5IGxhbmd1YWdl
LgoqIFtSdWJvQ29wXShodHRwczovL2dpdGh1Yi5jb20vcnVib2NvcC1ocS9y
dWJvY29wKSAtIEEgc3RhdGljIGNvZGUgYW5hbHl6ZXIsIGJhc2VkIG9uIHRo
ZSBjb21tdW5pdHkgUnVieSBzdHlsZSBndWlkZS4KICAqIEV4dGVuc2lvbnMK
ICAgICogW1J1Ym9jb3AgUmFpbHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9ydWJv
Y29wLWhxL3J1Ym9jb3AtcmFpbHMpIC0gQSBSdWJvQ29wIGV4dGVuc2lvbiBm
b2N1c2VkIG9uIGVuZm9yY2luZyBSYWlscyBiZXN0IHByYWN0aWNlcyBhbmQg
Y29kaW5nIGNvbnZlbnRpb25zLgogICAgKiBbUnVib2NvcCBSc3BlY10oaHR0
cHM6Ly9naXRodWIuY29tL3J1Ym9jb3AtaHEvcnVib2NvcC1yc3BlYykgLSBD
b2RlIHN0eWxlIGNoZWNraW5nIGZvciBSU3BlYyBmaWxlcwogICAgKiBbUnVi
b2NvcCBQZXJmb3JtYW5jZV0oaHR0cHM6Ly9naXRodWIuY29tL3J1Ym9jb3At
aHEvcnVib2NvcC1wZXJmb3JtYW5jZSkgLSBBIFJ1Ym9Db3AgZXh0ZW5zaW9u
IGZvY3VzZWQgb24gY29kZSBwZXJmb3JtYW5jZSBjaGVja3MuCgoKIyMgQ29k
ZSBIaWdobGlnaHRpbmcKCiogW0NvZGVSYXldKGh0dHBzOi8vZ2l0aHViLmNv
bS9ydWJ5Y2hhbi9jb2RlcmF5KSAtIEZhc3QgYW5kIGVhc3kgc3ludGF4IGhp
Z2hsaWdodGluZyBmb3Igc2VsZWN0ZWQgbGFuZ3VhZ2VzLgoqIFtweWdtZW50
cy5yYl0oaHR0cHM6Ly9naXRodWIuY29tL3RtbTEvcHlnbWVudHMucmIpIC0g
QSBSdWJ5IHdyYXBwZXIgZm9yIHRoZSBQeXRob24gcHlnbWVudHMgc3ludGF4
IGhpZ2hsaWdodGVyLgoqIFtSb3VnZV0oaHR0cHM6Ly9naXRodWIuY29tL2pu
ZWVuL3JvdWdlKSAtIEEgcHVyZSBSdWJ5IGNvZGUgaGlnaGxpZ2h0ZXIgdGhh
dCBpcyBjb21wYXRpYmxlIHdpdGggUHlnbWVudHMuCgojIyBDb2RlIExvYWRl
cnMKCiogW1plaXR3ZXJrXShodHRwczovL2dpdGh1Yi5jb20vZnhuL3plaXR3
ZXJrKSAtIEFuIGVmZmljaWVudCBhbmQgdGhyZWFkLXNhZmUgUnVieSBjb2Rl
IGxvYWRlci4KCiMjIENvZGluZyBTdHlsZSBHdWlkZXMKCiogW0Jlc3QtUnVi
eV0oaHR0cHM6Ly9naXRodWIuY29tL2ZyYW56ZWpyL2Jlc3QtcnVieSkgLSBS
dWJ5IFRyaWNrcywgSWRpb21hdGljIFJ1YnksIFJlZmFjdG9yaW5nICYgQmVz
dCBQcmFjdGljZXMuCiogW2Zhc3QtcnVieV0oaHR0cHM6Ly9naXRodWIuY29t
L0p1YW5pdG9GYXRhcy9mYXN0LXJ1YnkpIC0gV3JpdGluZyBGYXN0IFJ1Ynku
IENvbGxlY3QgQ29tbW9uIFJ1YnkgaWRpb21zLgoqIFtGdW5kYW1lbnRhbCBS
dWJ5XShodHRwczovL2dpdGh1Yi5jb20va2h1c25ldGRpbm92L3J1YnkuZnVu
ZGFtZW50YWwpIC0gRnVuZGFtZW50YWwgcHJvZ3JhbW1pbmcgcnVieSB3aXRo
IGV4YW1wbGVzLiBUaHJlYWRzLCBkZXNpZ24gcGF0dGVybnMsIGRhdGEgc3Ry
dWN0dXJlcywgT09QIFNPTElEIHByaW5jaXBsZSwgYWxnb3JpdGhtcy4KKiBb
UmFpbHMgc3R5bGUgZ3VpZGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9iYmF0c292
L3JhaWxzLXN0eWxlLWd1aWRlKSAtIENvbW11bml0eS1kcml2ZW4gUmFpbHMg
YmVzdCBwcmFjdGljZXMgYW5kIHN0eWxlIGZvciBSYWlscyAzIGFuZCA0Lgoq
IFtSU3BlYyBzdHlsZSBndWlkZV0oaHR0cHM6Ly9naXRodWIuY29tL2FuZHJl
YXJlZ2luYXRvL2JldHRlcnNwZWNzKSAtIEJldHRlciBTcGVjcyB7IHJzcGVj
IGd1aWRlbGluZXMgd2l0aCBydWJ5IH0uCiogW1J1YnkgT3BlcmF0b3JzXSho
dHRwOi8vcnVieS1vcGVyYXRvcnMuaGVyb2t1YXBwLmNvbS8pIC0gQSB3ZWJw
YWdlIHNob3dpbmcgYXdlc29tZSBuYW1lcyBmb3IgZGlmZmVyZW50IFJ1Ynkg
b3BlcmF0b3JzLgoqIFtSdWJ5IHN0eWxlIGd1aWRlXShodHRwczovL2dpdGh1
Yi5jb20vYmJhdHNvdi9ydWJ5LXN0eWxlLWd1aWRlKSAtIENvbW11bml0eS1k
cml2ZW4gUnVieSBjb2Rpbmcgc3R5bGUuCgojIyBDb25jdXJyZW5jeSBhbmQg
UGFyYWxsZWxpc20KCiogW0NlbGx1bG9pZF0oaHR0cDovL2NlbGx1bG9pZC5p
bykgLSBBY3Rvci1iYXNlZCBjb25jdXJyZW50IG9iamVjdCBmcmFtZXdvcmsg
Zm9yIFJ1YnkuCiogW0NvbmN1cnJlbnQgUnVieV0oaHR0cHM6Ly9naXRodWIu
Y29tL3J1YnktY29uY3VycmVuY3kvY29uY3VycmVudC1ydWJ5KSAtIE1vZGVy
biBjb25jdXJyZW5jeSB0b29scyBpbmNsdWRpbmcgYWdlbnRzLCBmdXR1cmVz
LCBwcm9taXNlcywgdGhyZWFkIHBvb2xzLCBzdXBlcnZpc29ycywgYW5kIG1v
cmUuIEluc3BpcmVkIGJ5IEVybGFuZywgQ2xvanVyZSwgU2NhbGEsIEdvLCBK
YXZhLCBKYXZhU2NyaXB0LCBhbmQgY2xhc3NpYyBjb25jdXJyZW5jeSBwYXR0
ZXJucy4KKiBbRXZlbnRNYWNoaW5lXShodHRwczovL2dpdGh1Yi5jb20vZXZl
bnRtYWNoaW5lL2V2ZW50bWFjaGluZSkgLSBBbiBldmVudC1kcml2ZW4gSS9P
IGFuZCBsaWdodHdlaWdodCBjb25jdXJyZW5jeSBsaWJyYXJ5IGZvciBSdWJ5
LgoqIFtmb3Jrb2ZmXShodHRwczovL2dpdGh1Yi5jb20vYWhvd2FyZC9mb3Jr
b2ZmKSAtIGJyYWluLWRlYWQgc2ltcGxlIHBhcmFsbGVsIHByb2Nlc3Npbmcg
Zm9yIHJ1YnkuCiogW1BhcmFsbGVsXShodHRwczovL2dpdGh1Yi5jb20vZ3Jv
c3Nlci9wYXJhbGxlbCkgLSBSdW4gYW55IGNvZGUgaW4gcGFyYWxsZWwgUHJv
Y2Vzc2VzICg+IHVzZSBhbGwgQ1BVcykgb3IgVGhyZWFkcyAoPiBzcGVlZHVw
IGJsb2NraW5nIG9wZXJhdGlvbnMpLgpCZXN0IHN1aXRlZCBmb3IgbWFwLXJl
ZHVjZSBvciBlLmcuIHBhcmFsbGVsIGRvd25sb2Fkcy91cGxvYWRzLgoKIyMg
Q29uZmlndXJhdGlvbgoKKiBbQ2hhbWJlcl0oaHR0cHM6Ly9naXRodWIuY29t
L3RoZWtvbXBhbmVlL2NoYW1iZXIpIC0gU3VycHJpc2luZ2x5IGN1c3RvbWl6
YWJsZSBjb252ZW50aW9uLWJhc2VkIGFwcHJvYWNoIHRvIG1hbmFnaW5nIHlv
dXIgYXBwJ3MgY29uZmlndXJhdGlvbi4KKiBbQ29uZmlnYXRyb25dKGh0dHBz
Oi8vZ2l0aHViLmNvbS9tYXJrYmF0ZXMvY29uZmlnYXRyb24pIC0gU2ltcGxl
IGFuZCBmZWF0dXJlIHJpY2ggY29uZmlndXJhdGlvbiBzeXN0ZW0gZm9yIFJ1
YnkgYXBwcy4KKiBbQ29uZmlndXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9rYWl6
ZS9jb25maWd1cykgLSBIZWxwcyB5b3UgZWFzaWx5IG1hbmFnZSBlbnZpcm9u
bWVudCBzcGVjaWZpYyBzZXR0aW5ncy4KKiBbZG90ZW52XShodHRwczovL2dp
dGh1Yi5jb20vYmtlZXBlcnMvZG90ZW52KSAtIExvYWRzIGVudmlyb25tZW50
IHZhcmlhYmxlcyBmcm9tIGAuZW52YC4KKiBbRWNvbmZpZ10oaHR0cHM6Ly9n
aXRodWIuY29tL2VsYWJzL2Vjb25maWcpIC0gRmxleGlibGUgY29uZmlndXJh
dGlvbiBmb3IgUmFpbHMgYXBwbGljYXRpb25zLgoqIFtFTlZpZWRdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9ldmFsL2VudmllZCkgLSBlbnN1cmUgcHJlc2VuY2Ug
YW5kIHR5cGUgb2YgeW91ciBhcHAncyBFTlYtdmFyaWFibGVzCiogW0Vudnlh
YmxlXShodHRwczovL2dpdGh1Yi5jb20vcGhpbG5hc2gvZW52eWFibGUpIC0g
VGhlIHNpbXBsZXN0IFlBTUwgdG8gRU5WIGNvbmZpZyBsb2FkZXIuCiogW0Zp
Z2Fyb10oaHR0cHM6Ly9naXRodWIuY29tL2xhc2VybGVtb24vZmlnYXJvKSAt
IFNpbXBsZSwgSGVyb2t1LWZyaWVuZGx5IFJhaWxzIGFwcCBjb25maWd1cmF0
aW9uIHVzaW5nIGBFTlZgIGFuZCBhIHNpbmdsZSBZQU1MIGZpbGUuCiogW0ds
b2JhbF0oaHR0cHM6Ly9naXRodWIuY29tL3JhaWxzd2FyZS9nbG9iYWwpIC0g
UHJvdmlkZXMgYWNjZXNzb3IgbWV0aG9kcyBmb3IgeW91ciBjb25maWd1cmF0
aW9uIGRhdGEuCiogW1JhaWxzQ29uZmlnXShodHRwczovL2dpdGh1Yi5jb20v
cmFpbHNjb25maWcvY29uZmlnKSAtIE11bHRpLWVudmlyb25tZW50IHlhbWwg
c2V0dGluZ3MgZm9yIFJhaWxzMy4KKiBbU2FpbF0oaHR0cHM6Ly9naXRodWIu
Y29tL3ZpbmlzdG9jay9zYWlsKSAtIEEgbGlnaHR3ZWlnaHQgUmFpbHMgZW5n
aW5lIHRoYXQgYnJpbmdzIGFuIGFkbWluIHBhbmVsIGZvciBtYW5hZ2luZyBj
b25maWd1cmF0aW9uIHNldHRpbmdzIG9uIGEgbGl2ZSBSYWlscyBhcHAuCgoj
IyBDb3JlIEV4dGVuc2lvbnMKCiogW0FjdGl2ZVN1cHBvcnRdKGh0dHBzOi8v
Z2l0aHViLmNvbS9yYWlscy9yYWlscy90cmVlL21hc3Rlci9hY3RpdmVzdXBw
b3J0KSAtIEEgY29sbGVjdGlvbiBvZiB1dGlsaXR5IGNsYXNzZXMgYW5kIHN0
YW5kYXJkIGxpYnJhcnkgZXh0ZW5zaW9ucy4KKiBbQWRkcmVzc2FibGVdKGh0
dHBzOi8vZ2l0aHViLmNvbS9zcG9ya21vbmdlci9hZGRyZXNzYWJsZSkgLSBB
ZGRyZXNzYWJsZSBpcyBhIHJlcGxhY2VtZW50IGZvciB0aGUgVVJJIGltcGxl
bWVudGF0aW9uIHRoYXQgaXMgcGFydCBvZiBSdWJ5J3Mgc3RhbmRhcmQgbGli
cmFyeS4gSXQgbW9yZSBjbG9zZWx5IGNvbmZvcm1zIHRvIFJGQyAzOTg2LCBS
RkMgMzk4NywgYW5kIFJGQyA2NTcwIChsZXZlbCA0KSwgcHJvdmlkaW5nIHN1
cHBvcnQgZm9yIElSSXMgYW5kIFVSSSB0ZW1wbGF0ZXMuCiogW0ZpbmlzaGlu
ZyBNb3Zlc10oaHR0cHM6Ly9naXRodWIuY29tL2ZvcmdlY3JhZnRlZC9maW5p
c2hpbmdfbW92ZXMpIC0gU21hbGwsIGZvY3VzZWQsIGluY3JlZGlibHkgdXNl
ZnVsIG1ldGhvZHMgYWRkZWQgdG8gY29yZSBSdWJ5IGNsYXNzZXMuIEluY2x1
ZGVzIHRoZSBlbmRsZXNzbHkgdXNlZnVsIGBuaWxfY2hhaW5gLgoqIFtIYW1z
dGVyXShodHRwczovL2dpdGh1Yi5jb20vaGFtc3RlcmdlbS9oYW1zdGVyKSAt
IEVmZmljaWVudCwgaW1tdXRhYmxlLCBhbmQgdGhyZWFkLXNhZmUgY29sbGVj
dGlvbiBjbGFzc2VzIGZvciBSdWJ5LgoqIFtIYW5hbWk6OlV0aWxzXShodHRw
czovL2dpdGh1Yi5jb20vaGFuYW1pL3V0aWxzKSAtIExpZ2h0d2VpZ2h0LCBu
b24tbW9ua2V5LXBhdGNoIGNsYXNzIHV0aWxpdGllcyBmb3IgSGFuYW1pIGFu
ZCBSdWJ5IGFwcC4KKiBbUnVieSBGYWNldHNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9ydWJ5d29ya3MvZmFjZXRzKSAtIFRoZSBwcmVtaWVyZSBjb2xsZWN0aW9u
IG9mIGdlbmVyYWwgcHVycG9zZSBtZXRob2QgZXh0ZW5zaW9ucyBhbmQgc3Rh
bmRhcmQgYWRkaXRpb25zIGZvciBSdWJ5LgoqIEF0dHJpYnV0ZXMKICAqIFtB
Y3RpdmVBdHRyXShodHRwczovL2dpdGh1Yi5jb20vY2dyaWVnby9hY3RpdmVf
YXR0cikgLSBXaGF0IEFjdGl2ZU1vZGVsIGxlZnQgb3V0LgogICogW0Zhc3RB
dHRyaWJ1dGVzXShodHRwczovL2dpdGh1Yi5jb20vYXBwbGlmdC9mYXN0X2F0
dHJpYnV0ZXMpIC0gRmFzdEF0dHJpYnV0ZXMgYWRkcyBhdHRyaWJ1dGVzIHdp
dGggdGhlaXIgdHlwZXMgdG8gdGhlIGNsYXNzLgogICogW1ZpcnR1c10oaHR0
cHM6Ly9naXRodWIuY29tL3NvbG5pYy92aXJ0dXMpIC0gQXR0cmlidXRlcyBv
biBTdGVyb2lkcyBmb3IgUGxhaW4gT2xkIFJ1YnkgT2JqZWN0cy4KKiBIYXNo
CiAgKiBbSGFzaGllXShodHRwczovL2dpdGh1Yi5jb20vaW50cmlkZWEvaGFz
aGllKSAtIEEgY29sbGVjdGlvbiBvZiB0b29scyB0aGF0IGV4dGVuZCBIYXNo
ZXMgYW5kIG1ha2UgdGhlbSBtb3JlIHVzZWZ1bC4KCiMjIENvdW50cnkgRGF0
YQoKKiBbQ2FybWVuXShodHRwczovL2dpdGh1Yi5jb20vamltL2Nhcm1lbikg
LSBBIHJlcG9zaXRvcnkgb2YgZ2VvZ3JhcGhpYyByZWdpb25zLgoqIFtDb3Vu
dHJpZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9oZXhvcngvY291bnRyaWVzKSAt
IEFsbCBzb3J0cyBvZiB1c2VmdWwgaW5mb3JtYXRpb24gYWJvdXQgZXZlcnkg
Y291bnRyeSBwYWNrYWdlZCBhcyBwcmV0dHkgbGl0dGxlIGNvdW50cnkgb2Jq
ZWN0cy4KKiBbaTE4bl9kYXRhXShodHRwczovL2dpdGh1Yi5jb20vZ3Jvc3Nl
ci9pMThuX2RhdGEpIC0gY291bnRyeS9sYW5ndWFnZSBuYW1lcyBhbmQgMi1s
ZXR0ZXItY29kZSBwYWlycywgaW4gODUgbGFuZ3VhZ2VzLCBmb3IgY291bnRy
eS9sYW5ndWFnZSBpMThuLgoqIFtub3JtYWxpemVfY291bnRyeV0oaHR0cHM6
Ly9naXRodWIuY29tL3NzaGF3L25vcm1hbGl6ZV9jb3VudHJ5KSAtIENvbnZl
cnQgY291bnRyeSBuYW1lcyBhbmQgY29kZXMgdG8gYSBzdGFuZGFyZCwgaW5j
bHVkZXMgYSBjb252ZXJzaW9uIHByb2dyYW0gZm9yIFhNTHMsIENTVnMgYW5k
IERCcy4KKiBbUGhvbmVsaWJdKGh0dHBzOi8vZ2l0aHViLmNvbS9kYWRkeXov
cGhvbmVsaWIpIC0gUnVieSBnZW0gZm9yIHBob25lIHZhbGlkYXRpb24gYW5k
IGZvcm1hdHRpbmcgdXNpbmcgR29vZ2xlIGxpYnBob25lbnVtYmVyIGxpYnJh
cnkgZGF0YS4KKiBbUGhvbnldKGh0dHBzOi8vZ2l0aHViLmNvbS9mbG9lcmUv
cGhvbnkpIC0gRmFzdCBpbnRlcm5hdGlvbmFsIHBob25lIG51bWJlciAoRTE2
NCBzdGFuZGFyZCkgbm9ybWFsaXppbmcsIHNwbGl0dGluZyBhbmQgZm9ybWF0
dGluZy4KKiBbdmFsaWRhdGVzX3ppcGNvZGVdKGh0dHBzOi8vZ2l0aHViLmNv
bS9kZ2lscGVyZXovdmFsaWRhdGVzX3ppcGNvZGUpIC0gUG9zdGFsIGNvZGUg
LyB6aXBjb2RlIHZhbGlkYXRpb24gZm9yIFJhaWxzLCBzdXBwb3J0aW5nIDIz
MyBjb3VudHJ5IGNvZGVzLgoKIyMgQ1JNCgoqIFtGYXQgRnJlZSBDUk1dKGh0
dHBzOi8vZ2l0aHViLmNvbS9mYXRmcmVlY3JtL2ZhdF9mcmVlX2NybSkgLSBB
biBvcGVuIHNvdXJjZSBSdWJ5IG9uIFJhaWxzIGJhc2VkIGN1c3RvbWVyIHJl
bGF0aW9uc2hpcCBtYW5hZ2VtZW50IHBsYXRmb3JtLgoKIyMgQ3J5cHRvY3Vy
cmVuY2llcyBhbmQgQmxvY2tjaGFpbnMKCiogW0Jsb2NrY2hhaW4gTGl0ZV0o
aHR0cHM6Ly9naXRodWIuY29tL29wZW5ibG9ja2NoYWlucy9ibG9ja2NoYWlu
LmxpdGUucmIpIC0gQnVpbGQgeW91ciBvd24gYmxvY2tjaGFpbnMgd2l0aCBj
cnlwdG8gaGFzaGVzOyByZXZvbHV0aW9uaXplIHRoZSB3b3JsZCB3aXRoIGJs
b2NrY2hhaW5zLCBibG9ja2NoYWlucywgYmxvY2tjaGFpbnMgb25lIGJsb2Nr
IGF0IGEgdGltZS4KKiBbUGVhdGlvXShodHRwczovL2dpdGh1Yi5jb20vcnVi
eWt1YmUvcGVhdGlvKSAtIE1vc3QgQWR2YW5jZWQgQ3J5cHRvY3VycmVuY3kg
b3Blbi1zb3VyY2UgYXNzZXRzIGV4Y2hhbmdlLgoKIyMgRGFzaGJvYXJkcwoK
KiBbQmxhemVyXShodHRwczovL2dpdGh1Yi5jb20vYW5rYW5lL2JsYXplcikg
LSBTaW1wbGUgZGF0YSB2aWV3ZXIgdXNpbmcgb25seSBTUUwuIE91dHB1dCB0
byB0YWJsZSwgY2hhcnQsIGFuZCBtYXBzLgoqIFtTbWFzaGluZ10oaHR0cHM6
Ly9zbWFzaGluZy5naXRodWIuaW8vKSAtIFNtYXNoaW5nIGlzIGEgU2luYXRy
YSBiYXNlZCBmcmFtZXdvcmsgdGhhdCBsZXRzIHlvdSBidWlsZCBiZWF1dGlm
dWwgZGFzaGJvYXJkcy4gVGhpcyBwcm9qZWN0IGlzIHRoZSBtYWludGFpbmVk
IHNwaXJpdHVhbCBzdWNjZXNzb3IgdG8gdGhlIERhc2hpbmcgZnJhbWV3b3Jr
LgoqIFtEYXNoaW5nLVJhaWxzXShodHRwczovL2dpdGh1Yi5jb20vZ290dGZy
b2lzL2Rhc2hpbmctcmFpbHMpIC0gVGhlIGV4Y2VwdGlvbmFsbHkgaGFuZHNv
bWUgZGFzaGJvYXJkIGZyYW1ld29yayBmb3IgUmFpbHMuCgojIyBEYXRhIFBy
b2Nlc3NpbmcgYW5kIEVUTAoKKiBbS2liYV0oaHR0cDovL3d3dy5raWJhLWV0
bC5vcmcpIC0gQSBsaWdodHdlaWdodCBkYXRhIHByb2Nlc3NpbmcgLyBFVEwg
ZnJhbWV3b3JrIGZvciBSdWJ5LgoKIyMgRGF0YSBWaXN1YWxpemF0aW9uCgoq
IFtDaGFydGtpY2tdKGh0dHA6Ly9hbmthbmUuZ2l0aHViLmlvL2NoYXJ0a2lj
ay8pIC0gQ3JlYXRlIGJlYXV0aWZ1bCBKYXZhc2NyaXB0IGNoYXJ0cyB3aXRo
IG9uZSBsaW5lIG9mIFJ1YnkuIFdvcmtzIHdpdGggUmFpbHMsIFNpbmF0cmEg
YW5kIG1vc3QgYnJvd3NlcnMgKGluY2x1ZGluZyBJRSA2KS4KKiBbR2VvUGF0
dGVybl0oaHR0cHM6Ly9naXRodWIuY29tL2phc29ubG9uZy9nZW9fcGF0dGVy
bikgLSBDcmVhdGUgYmVhdXRpZnVsIGdlbmVyYXRpdmUgZ2VvbWV0cmljIGJh
Y2tncm91bmQgaW1hZ2VzIGZyb20gYSBzdHJpbmcuCiogW0xhenlIaWdoQ2hh
cnRzXShodHRwczovL2dpdGh1Yi5jb20vbWljaGVsc29uL2xhenlfaGlnaF9j
aGFydHMpIC0gQSBzaW1wbGUgYW5kIGV4dHJlbWVseSBmbGV4aWJsZSB3YXkg
dG8gdXNlIEhpZ2hDaGFydHMgZnJvbSBydWJ5IGNvZGUuIFRlc3RlZCBvbiBS
dWJ5IG9uIFJhaWxzLCBTaW5hdHJhIGFuZCBOYW5vYywgYnV0IGl0IHNob3Vs
ZCB3b3JrIHdpdGggb3RoZXJzIHRvby4KKiBbUmFpbFJvYWR5XShodHRwczov
L2dpdGh1Yi5jb20vcHJlc3Rvbi9yYWlscm9hZHkpIC0gUnVieSBvbiBSYWls
cyAzLzQgbW9kZWwgYW5kIGNvbnRyb2xsZXIgVU1MIGNsYXNzIGRpYWdyYW0g
Z2VuZXJhdG9yLgoqIFtSYWlscyBFcmRdKGh0dHBzOi8vZ2l0aHViLmNvbS92
b29ybWVkaWEvcmFpbHMtZXJkKSAtIEdlbmVyYXRlIEVudGl0eS1SZWxhdGlv
bnNoaXAgRGlhZ3JhbXMgZm9yIFJhaWxzIGFwcGxpY2F0aW9ucy4KKiBbUnVi
eS9HcmFwaFZpel0oaHR0cHM6Ly9naXRodWIuY29tL2dsZWpldW5lL1J1Ynkt
R3JhcGh2aXopIC0gUnVieSBpbnRlcmZhY2UgdG8gdGhlIEdyYXBoVml6IGdy
YXBoaW5nIHRvb2wuCgojIyBEYXRhYmFzZSBEcml2ZXJzCgoqIFtDYXNzYW5k
cmEgRHJpdmVyXShodHRwczovL2dpdGh1Yi5jb20vZGF0YXN0YXgvcnVieS1k
cml2ZXIpIC0gQSBwdXJlIHJ1YnkgZHJpdmVyIGZvciBBcGFjaGUgQ2Fzc2Fu
ZHJhIHdpdGggYXN5bmNocm9ub3VzIGlvIGFuZCBjb25maWd1cmFibGUgbG9h
ZCBiYWxhbmNpbmcsIHJlY29ubmVjdGlvbiBhbmQgcmV0cnkgcG9saWNpZXMu
CiogW0RhdGFPYmplY3RzXShodHRwczovL2dpdGh1Yi5jb20vZGF0YW1hcHBl
ci9kbykgLSBBbiBhdHRlbXB0IHRvIHJld3JpdGUgZXhpc3RpbmcgUnVieSBk
YXRhYmFzZSBkcml2ZXJzIHRvIGNvbmZvcm0gdG8gb25lLCBzdGFuZGFyZCBp
bnRlcmZhY2UuCiogW21vbmdvLXJ1YnktZHJpdmVyXShodHRwczovL2dpdGh1
Yi5jb20vbW9uZ29kYi9tb25nby1ydWJ5LWRyaXZlcikgLSBNb25nb0RCIFJ1
YnkgZHJpdmVyLgoqIFtteXNxbDJdKGh0dHBzOi8vZ2l0aHViLmNvbS9icmlh
bm1hcmlvL215c3FsMikgLSBBIG1vZGVybiwgc2ltcGxlIGFuZCB2ZXJ5IGZh
c3QgTXlzcWwgbGlicmFyeSBmb3IgUnVieSAoYmluZGluZyB0byBsaWJteXNx
bCkuCiogW05lb2dyYXBoeV0oaHR0cHM6Ly9naXRodWIuY29tL21heGRlbWFy
emkvbmVvZ3JhcGh5KSAtIEEgdGhpbiBSdWJ5IHdyYXBwZXIgdG8gdGhlIE5l
bzRqIFJlc3QgQVBJLgoqIFtSZWRpY10oaHR0cHM6Ly9naXRodWIuY29tL2Ft
YWthd2EvcmVkaWMpIC0gTGlnaHR3ZWlnaHQgUmVkaXMgQ2xpZW50LgoqIFty
ZWRpcy1yYl0oaHR0cHM6Ly9naXRodWIuY29tL3JlZGlzL3JlZGlzLXJiKSAt
IEEgUnVieSBjbGllbnQgdGhhdCB0cmllcyB0byBtYXRjaCBSZWRpcycgQVBJ
IG9uZS10by1vbmUsIHdoaWxlIHN0aWxsIHByb3ZpZGluZyBhbiBpZGlvbWF0
aWMgaW50ZXJmYWNlLgoqIFtydWJ5LXBnXShodHRwczovL2JpdGJ1Y2tldC5v
cmcvZ2VkL3J1YnktcGcpIC0gUnVieSBpbnRlcmZhY2UgdG8gUG9zdGdyZVNR
TCA4LjMgYW5kIGxhdGVyLgoqIFtTUUxpdGUzXShodHRwczovL2dpdGh1Yi5j
b20vc3BhcmtsZW1vdGlvbi9zcWxpdGUzLXJ1YnkpIC0gUnVieSBiaW5kaW5n
cyBmb3IgdGhlIFNRTGl0ZTMgZW1iZWRkZWQgZGF0YWJhc2UuCiogW1NRTCBT
ZXJ2ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9yYWlscy1zcWxzZXJ2ZXIvYWN0
aXZlcmVjb3JkLXNxbHNlcnZlci1hZGFwdGVyKSAtIFRoZSBTUUwgU2VydmVy
IGFkYXB0ZXIgZm9yIEFjdGl2ZVJlY29yZC4KKiBbVGlueVREU10oaHR0cHM6
Ly9naXRodWIuY29tL3JhaWxzLXNxbHNlcnZlci90aW55X3RkcykgLSBGcmVl
VERTIGJpbmRpbmdzIGZvciBSdWJ5IHVzaW5nIERCLUxpYnJhcnkuCgojIyBE
YXRhYmFzZSBUb29scwoKKiBbY29ubmVjdGlvbl9wb29sXShodHRwczovL2dp
dGh1Yi5jb20vbXBlcmhhbS9jb25uZWN0aW9uX3Bvb2wpIC0gR2VuZXJpYyBj
b25uZWN0aW9uIHBvb2xpbmcgZm9yIFJ1YnksIHRoYXQgY2FuIGJlIHVzZWQg
d2l0aCBhbnl0aGluZywgZS5nLiBSZWRpcywgRGFsbGksIGV0Yy4KKiBbRGF0
YWJhc2UgQ2xlYW5lcl0oaHR0cHM6Ly9naXRodWIuY29tL0RhdGFiYXNlQ2xl
YW5lci9kYXRhYmFzZV9jbGVhbmVyKSAtIERhdGFiYXNlIENsZWFuZXIgaXMg
YSBzZXQgb2Ygc3RyYXRlZ2llcyBmb3IgY2xlYW5pbmcgeW91ciBkYXRhYmFz
ZSBpbiBSdWJ5LgoqIFtGb3JlaWduZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9t
YXR0aHVoaWdnaW5zL2ZvcmVpZ25lcikgLSBBZGRzIGZvcmVpZ24ga2V5IGhl
bHBlcnMgdG8gbWlncmF0aW9ucyBhbmQgY29ycmVjdGx5IGR1bXBzIGZvcmVp
Z24ga2V5cyB0byBzY2hlbWEucmIuCiogW0xhcmdlIEhhZHJvbiBNaWdyYXRv
cl0oaHR0cHM6Ly9naXRodWIuY29tL3NvdW5kY2xvdWQvbGhtKSAtIE9ubGlu
ZSBNeVNRTCBzY2hlbWEgbWlncmF0aW9ucyB3aXRob3V0IGxvY2tpbmcgdGhl
IHRhYmxlLgoqIFtMb2wgREJBXShodHRwczovL2dpdGh1Yi5jb20vcGxlbnR6
L2xvbF9kYmEpIC0gU2NhbiB5b3VyIG1vZGVscyBhbmQgZGlzcGxheXMgYSBs
aXN0IG9mIGNvbHVtbnMgdGhhdCBwcm9iYWJseSBzaG91bGQgYmUgaW5kZXhl
ZC4KKiBbUG9sb10oaHR0cHM6Ly9naXRodWIuY29tL0lGVFRUL3BvbG8pIC0g
Q3JlYXRlcyBzYW1wbGUgZGF0YWJhc2Ugc25hcHNob3RzIHRvIHdvcmsgd2l0
aCByZWFsIHdvcmxkIGRhdGEgaW4gZGV2ZWxvcG1lbnQuCiogW1BnSGVyb10o
aHR0cHM6Ly9naXRodWIuY29tL2Fua2FuZS9wZ2hlcm8pIC0gUG9zdGdyZXMg
aW5zaWdodHMgbWFkZSBlYXN5LgoqIFtSYWlscyBEQl0oaHR0cHM6Ly9naXRo
dWIuY29tL2lnb3JrYXN5YW5jaHVrL3JhaWxzX2RiKSAtIERhdGFiYXNlIFZp
ZXdlciBhbmQgU1FMIFF1ZXJ5IFJ1bm5lci4KKiBbUmVpbl0oaHR0cHM6Ly9n
aXRodWIuY29tL251bGxvYmplY3QvcmVpbikgLSBEYXRhYmFzZSBjb25zdHJh
aW50cyBtYWRlIGVhc3kgZm9yIEFjdGl2ZVJlY29yZC4KKiBbU2NlbmljXSho
dHRwczovL2dpdGh1Yi5jb20vdGhvdWdodGJvdC9zY2VuaWMpIC0gVmVyc2lv
bmVkIGRhdGFiYXNlIHZpZXdzIGZvciBSYWlscy4KKiBbU2NoZW1hUGx1c10o
aHR0cHM6Ly9naXRodWIuY29tL1NjaGVtYVBsdXMvc2NoZW1hX3BsdXMpIC0g
U2NoZW1hUGx1cyBwcm92aWRlcyBhIGNvbGxlY3Rpb24gb2YgZW5oYW5jZW1l
bnRzIGFuZCBleHRlbnNpb25zIHRvIEFjdGl2ZVJlY29yZAoqIFtTZWNvbmRC
YXNlXShodHRwczovL2dpdGh1Yi5jb20vY3VzdG9taW5rL3NlY29uZGJhc2Up
IC0gU2VhbWxlc3Mgc2Vjb25kIGRhdGFiYXNlIGludGVncmF0aW9uIGZvciBS
YWlscy4gU2Vjb25kQmFzZSBwcm92aWRlcyBzdXBwb3J0IGZvciBSYWlscyB0
byBtYW5hZ2UgZHVhbCBkYXRhYmFzZXMgYnkgZXh0ZW5kaW5nIEFjdGl2ZVJl
Y29yZCB0YXNrcyB0aGF0IGNyZWF0ZSwgbWlncmF0ZSwgYW5kIHRlc3QgeW91
ciBhcHBsaWNhdGlvbi4KKiBbU2VlZGJhbmtdKGh0dHBzOi8vZ2l0aHViLmNv
bS9qYW1lczJtL3NlZWRiYW5rKSAtIFNlZWRiYW5rIGFsbG93cyB5b3UgdG8g
c3RydWN0dXJlIHlvdXIgUmFpbHMgc2VlZCBkYXRhIGluc3RlYWQgb2YgaGF2
aW5nIGl0IGFsbCBkdW1wZWQgaW50byBvbmUgbGFyZ2UgZmlsZS4KKiBbU2Vl
ZCBkdW1wXShodHRwczovL2dpdGh1Yi5jb20vcnJvYmxhay9zZWVkX2R1bXAp
IC0gUmFpbHMgNCB0YXNrIHRvIGR1bXAgKHBhcnRzKSBvZiB5b3VyIGRhdGFi
YXNlIHRvIGRiL3NlZWRzLnJiLgoqIFtTZWVkIEZ1XShodHRwczovL2dpdGh1
Yi5jb20vbWJsZWlnaC9zZWVkLWZ1KSAtIEFkdmFuY2VkIHNlZWQgZGF0YSBo
YW5kbGluZyBmb3IgUmFpbHMuCiogW1N0YW5kYnldKGh0dHBzOi8vZ2l0aHVi
LmNvbS9rZW5uL3N0YW5kYnkpIC0gUmVhZCBmcm9tIHN0YW5kYnkgZGF0YWJh
c2VzIGZvciBBY3RpdmVSZWNvcmQgKGZvcm1lcmx5IFNsYXZlcnkpLgoqIFtV
cHNlcnRdKGh0dHBzOi8vZ2l0aHViLmNvbS9zZWFtdXNhYnNoZXJlL3Vwc2Vy
dCkgLSBVcHNlcnQgb24gTXlTUUwsIFBvc3RncmVTUUwsIGFuZCBTUUxpdGUz
LiBUcmFuc3BhcmVudGx5IGNyZWF0ZXMgZnVuY3Rpb25zIChVREYpIGZvciBN
eVNRTCBhbmQgUG9zdGdyZVNRTDsgb24gU1FMaXRlMywgdXNlcyBJTlNFUlQg
T1IgSUdOT1JFLgoKIyMgRGF0ZSBhbmQgVGltZSBQcm9jZXNzaW5nCgoqIFti
aXpdKGh0dHBzOi8vZ2l0aHViLmNvbS96ZW5kZXNrL2JpeikgLSBUaW1lIGNh
bGN1bGF0aW9ucyB1c2luZyBidXNpbmVzcyBob3Vycy4KKiBbYnVzaW5lc3Nf
dGltZV0oaHR0cHM6Ly9naXRodWIuY29tL2Jva21hbm4vYnVzaW5lc3NfdGlt
ZSkgLSBTdXBwb3J0IGZvciBkb2luZyB0aW1lIG1hdGggaW4gYnVzaW5lc3Mg
aG91cnMgYW5kIGRheXMuCiogW0J5U3Rhcl0oaHR0cHM6Ly9naXRodWIuY29t
L3JhZGFyL2J5X3N0YXIpIC0gRmluZCBBY3RpdmVSZWNvcmQgb2JqZWN0cyBi
eSB5ZWFyLCBtb250aCwgZm9ydG5pZ2h0LCB3ZWVrIGFuZCBtb3JlIQoqIFtD
aHJvbmljXShodHRwczovL2dpdGh1Yi5jb20vbW9qb21iby9jaHJvbmljKSAt
IEEgbmF0dXJhbCBsYW5ndWFnZSBkYXRlL3RpbWUgcGFyc2VyIHdyaXR0ZW4g
aW4gcHVyZSBSdWJ5LgoqIFtncm91cGRhdGVdKGh0dHBzOi8vZ2l0aHViLmNv
bS9hbmthbmUvZ3JvdXBkYXRlKSAtIFRoZSBzaW1wbGVzdCB3YXkgdG8gZ3Jv
dXAgdGVtcG9yYWwgZGF0YSBpbiBBY3RpdmVSZWNvcmQsIGFycmF5cyBhbmQg
aGFzaGVzLgoqIFtpY2VfY3ViZV0oaHR0cHM6Ly9naXRodWIuY29tL3NlZWpv
aG5ydW4vaWNlX2N1YmUpIC0gQSBkYXRlIHJlY3VycmVuY2UgbGlicmFyeSB3
aGljaCBhbGxvd3MgZWFzeSBjcmVhdGlvbiBvZiByZWN1cnJlbmNlIHJ1bGVz
IGFuZCBmYXN0IHF1ZXJ5aW5nLgoqIFtsb2NhbF90aW1lXShodHRwczovL2dp
dGh1Yi5jb20vYmFzZWNhbXAvbG9jYWxfdGltZSkgLSBSYWlscyBFbmdpbmUg
Zm9yIGNhY2hlLWZyaWVuZGx5LCBjbGllbnQtc2lkZSBsb2NhbCB0aW1lLgoq
IFttb250cm9zZV0oaHR0cHM6Ly9naXRodWIuY29tL3Jvc3N0YS9tb250cm9z
ZSkgLSBhIHNpbXBsZSBsaWJyYXJ5IGZvciBleHByZXNzaW5nLCBzZXJpYWxp
emluZywgYW5kIGVudW1lcmF0aW5nIHJlY3VycmluZyBldmVudHMgaW4gUnVi
eQoqIFt0aW1lLWxvcmRdKGh0dHBzOi8vZ2l0aHViLmNvbS9rcmFpbmJvbHRn
cmVlbmUvdGltZS1sb3JkKSAtIEFkZHMgZXh0cmEgZnVuY3Rpb25hbGl0eSB0
byB0aGUgdGltZSBjbGFzcy4KKiBbdGltZV9kaWZmXShodHRwczovL2dpdGh1
Yi5jb20vYWJoaWRzbS90aW1lX2RpZmYpIC0gQ2FsY3VsYXRlcyB0aGUgZGlm
ZmVyZW5jZSBiZXR3ZWVuIHR3byB0aW1lLgoqIFt0aW1lem9uZV0oaHR0cHM6
Ly9naXRodWIuY29tL3BhbnRob21ha29zL3RpbWV6b25lKSAtIEFjY3VyYXRl
IGN1cnJlbnQgYW5kIGhpc3RvcmljYWwgdGltZXpvbmVzIGFuZCB0cmFuc2Zv
cm1hdGlvbnMsIHdpdGggc3VwcG9ydCBmb3IgR2VvbmFtZXMgYW5kIEdvb2ds
ZSBsYXRpdHVkZSAtIGxvbmdpdHVkZSB0aW1lem9uZSBsb29rdXBzLgoqIFtU
WmluZm9dKGh0dHBzOi8vZ2l0aHViLmNvbS90emluZm8vdHppbmZvKSAtIFBy
b3ZpZGVzIGRheWxpZ2h0IHNhdmluZ3MgYXdhcmUgdHJhbnNmb3JtYXRpb25z
IGJldHdlZW4gdGltZXMgaW4gZGlmZmVyZW50IHRpbWV6b25lcy4KKiBbdmFs
aWRhdGVzX3RpbWVsaW5lc3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9hZHphcC92
YWxpZGF0ZXNfdGltZWxpbmVzcykgLSBEYXRlIGFuZCB0aW1lIHZhbGlkYXRp
b24gcGx1Z2luIGZvciBBY3RpdmVNb2RlbCBhbmQgUmFpbHMuCiogW3l5bW1k
ZF0oaHR0cHM6Ly9naXRodWIuY29tL3NzaGF3L3l5bW1kZCkgLSBUaW55IERT
TCBmb3IgaWRpb21hdGljIGRhdGUgcGFyc2luZyBhbmQgZm9ybWF0dGluZy4K
CiMjIERlYnVnZ2luZyBUb29scwoKKiBbQnllYnVnXShodHRwczovL2dpdGh1
Yi5jb20vZGVpdmlkLXJvZHJpZ3Vlei9ieWVidWcpIC0gQSBzaW1wbGUgdG8g
dXNlLCBmZWF0dXJlIHJpY2ggZGVidWdnZXIgZm9yIFJ1YnkgMi4KKiBbZGlk
X3lvdV9tZWFuXShodHRwczovL2dpdGh1Yi5jb20veXVraTI0L2RpZF95b3Vf
bWVhbikgLSBBZGRzIGNsYXNzLCBtZXRob2QgJiBhdHRyaWJ1dGUgc3VnZ2Vz
dGlvbnMgdG8gZXJyb3IgbWVzc2FnZXMuCiogW1ByeSBCeWVidWddKGh0dHBz
Oi8vZ2l0aHViLmNvbS9kZWl2aWQtcm9kcmlndWV6L3ByeS1ieWVidWcpIC0g
UHJ5IG5hdmlnYXRpb24gY29tbWFuZHMgdmlhIGJ5ZWJ1Zy4KKiBbcHJ5LXJh
aWxzXShodHRwczovL2dpdGh1Yi5jb20vcndlbmcvcHJ5LXJhaWxzKSAtIEF2
b2lkIHJlcGVhdGluZyB5b3Vyc2VsZiwgdXNlIHByeS1yYWlscyBpbnN0ZWFk
IG9mIGNvcHlpbmcgdGhlIGluaXRpYWxpemVyIHRvIGV2ZXJ5IHJhaWxzIHBy
b2plY3QuIFRoaXMgaXMgYSBzbWFsbCBnZW0gd2hpY2ggY2F1c2VzIHJhaWxz
IGNvbnNvbGUgdG8gb3BlbiBwcnkuIEl0IHRoZXJlZm9yZSBkZXBlbmRzIG9u
IHByeS4KKiBbUmFpbHMgRm9vdG5vdGVzXShodHRwczovL2dpdGh1Yi5jb20v
am9zZXZhbGltL3JhaWxzLWZvb3Rub3RlcykgLSBSYWlscyBmb290bm90ZXMg
ZGlzcGxheXMgZm9vdG5vdGVzIGluIHlvdXIgYXBwbGljYXRpb24gZm9yIGVh
c3kgZGVidWdnaW5nLCBzdWNoIGFzIHNlc3Npb25zLCByZXF1ZXN0IHBhcmFt
ZXRlcnMsIGNvb2tpZXMsIGZpbHRlciBjaGFpbiwgcm91dGVzLCBxdWVyaWVz
LCBldGMuCiogW1NlZWluZyBJcyBCZWxpZXZpbmddKGh0dHBzOi8vZ2l0aHVi
LmNvbS9Kb3NoQ2hlZWsvc2VlaW5nX2lzX2JlbGlldmluZykgLSBEaXNwbGF5
cyB0aGUgcmVzdWx0cyBvZiBldmVyeSBsaW5lIG9mIGNvZGUgaW4geW91ciBm
aWxlLgoqIFtYcmF5XShodHRwczovL2dpdGh1Yi5jb20vYnJlbnRkL3hyYXkt
cmFpbHMpIC0gQSBkZXZlbG9wbWVudCB0b29sIHRoYXQgcmV2ZWFscyB5b3Vy
IFVJJ3MgYm9uZXMuCgojIyBEZWNvcmF0b3JzCgoqIFtEcmFwZXJdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9kcmFwZXJnZW0vZHJhcGVyKSAtIERyYXBlciBhZGRz
IGFuIG9iamVjdC1vcmllbnRlZCBsYXllciBvZiBwcmVzZW50YXRpb24gbG9n
aWMgdG8geW91ciBSYWlscyBhcHBsaWNhdGlvbi4KKiBbU2hvd0Zvcl0oaHR0
cHM6Ly9naXRodWIuY29tL3BsYXRhZm9ybWF0ZWMvc2hvd19mb3IpIC0gUXVp
Y2tseSBzaG93IGEgbW9kZWwgaW5mb3JtYXRpb24gd2l0aCBJMThuIGZlYXR1
cmVzLiBMaWtlIGZvcm1fZm9yIGZvciBkaXNwbGF5aW5nIG1vZGVsIGRhdGEu
CgojIyBEZXZPcHMgVG9vbHMKCiogW0JhY2t1cF0oaHR0cHM6Ly9naXRodWIu
Y29tL2JhY2t1cC9iYWNrdXApIC0gUHJvdmlkZXMgYW4gZWxlZ2FudCBEU0wg
aW4gUnVieSBmb3IgcGVyZm9ybWluZyBiYWNrdXBzIG9uIFVOSVgtbGlrZSBz
eXN0ZW1zLgoqIFtCbGVuZGVyXShodHRwczovL2dpdGh1Yi5jb20vUGFnZXJE
dXR5L2JsZW5kZXIpIC0gQSBtb2R1bGFyIHN5c3RlbSBvcmNoZXN0cmF0aW9u
IGZyYW1ld29yayB3aXRoIHBsdWdnYWJsZSBkcml2ZXIgYW5kIGhvc3QgZGlz
Y292ZXJ5LgoqIFtCT1NIXShodHRwczovL2dpdGh1Yi5jb20vY2xvdWRmb3Vu
ZHJ5L2Jvc2gpIC0gQ2xvdWQgRm91bmRyeSBCT1NIIGlzIGFuIG9wZW4gc291
cmNlIHRvb2wgY2hhaW4gZm9yIHJlbGVhc2UgZW5naW5lZXJpbmcsIGRlcGxv
eW1lbnQgYW5kIGxpZmVjeWNsZSBtYW5hZ2VtZW50IG9mIGxhcmdlIHNjYWxl
IGRpc3RyaWJ1dGVkIHNlcnZpY2VzLgoqIFtDYXBpc3RyYW5vXShodHRwOi8v
Y2FwaXN0cmFub3JiLmNvbSkgLSBBIHJlbW90ZSBzZXJ2ZXIgYXV0b21hdGlv
biBhbmQgZGVwbG95bWVudCB0b29sIHdyaXR0ZW4gaW4gUnVieS4KKiBbQ2Vu
dHVyaW9uXShodHRwczovL2dpdGh1Yi5jb20vbmV3cmVsaWMvY2VudHVyaW9u
KSAtIEEgbWFzcyBkZXBsb3ltZW50IHRvb2wgZm9yIERvY2tlciBmbGVldHMu
CiogW0NoZWZdKGh0dHBzOi8vZ2l0aHViLmNvbS9jaGVmL2NoZWYpIC0gQSBz
eXN0ZW1zIGludGVncmF0aW9uIGZyYW1ld29yaywgYnVpbHQgdG8gYnJpbmcg
dGhlIGJlbmVmaXRzIG9mIGNvbmZpZ3VyYXRpb24gbWFuYWdlbWVudCB0byB5
b3VyIGVudGlyZSBpbmZyYXN0cnVjdHVyZS4KKiBbRGVwbG95aW5hdG9yXSho
dHRwczovL2dpdGh1Yi5jb20vZXRzeS9kZXBsb3lpbmF0b3IpIC0gRGVwbG95
aW5hdG9yIGlzIGEgZGVwbG95bWVudCBmcmFtZXdvcmsgZXh0cmFjdGVkIGZy
b20gRXRzeS4KKiBbRWluaG9ybl0oaHR0cHM6Ly9naXRodWIuY29tL3N0cmlw
ZS9laW5ob3JuKSAtIEVpbmhvcm4gd2lsbCBvcGVuIG9uZSBvciBtb3JlIHNo
YXJlZCBzb2NrZXRzIGFuZCBydW4gbXVsdGlwbGUgY29waWVzIG9mIHlvdXIg
cHJvY2Vzcy4gWW91IGNhbiBzZWFtbGVzc2x5IHJlbG9hZCB5b3VyIGNvZGUs
IGR5bmFtaWNhbGx5IHJlY29uZmlndXJlIEVpbmhvcm4sIGFuZCBtb3JlLgoq
IFtJdGFtYWVdKGh0dHBzOi8vZ2l0aHViLmNvbS9pdGFtYWUta2l0Y2hlbi9p
dGFtYWUpIC0gU2ltcGxlIGFuZCBsaWdodHdlaWdodCBjb25maWd1cmF0aW9u
IG1hbmFnZW1lbnQgdG9vbCBpbnNwaXJlZCBieSBDaGVmLgoqIFtLb2NoaWt1
XShodHRwczovL2dpdGh1Yi5jb20vc3F1YXJlL2tvY2hpa3UpIC0gS29jaGlr
dSBpcyBhIGRpc3RyaWJ1dGVkIHBsYXRmb3JtIGZvciB0ZXN0IGF1dG9tYXRp
b24uCiogW0xpdGFdKGh0dHBzOi8vd3d3LmxpdGEuaW8vKSAtIENoYXRPcHMg
Zm9yIFJ1Ynk6IEEgcGx1Z2dhYmxlIGNoYXQgYm90IGZyYW1ld29yayB1c2Fi
bGUgd2l0aCBhbnkgY2hhdCBzZXJ2aWNlLgoqIFtMb2dzdGFzaF0oaHR0cHM6
Ly9naXRodWIuY29tL2VsYXN0aWMvbG9nc3Rhc2gpIC0gTG9ncy9ldmVudCB0
cmFuc3BvcnQsIHByb2Nlc3NpbmcsIG1hbmFnZW1lbnQsIHNlYXJjaC4KKiBb
TWluYV0oaHR0cHM6Ly9naXRodWIuY29tL21pbmEtZGVwbG95L21pbmEpIC0g
UmVhbGx5IGZhc3QgZGVwbG95ZXIgYW5kIHNlcnZlciBhdXRvbWF0aW9uIHRv
b2wuCiogW1B1cHBldF0oaHR0cHM6Ly9naXRodWIuY29tL3B1cHBldGxhYnMv
cHVwcGV0KSAtIEFuIGF1dG9tYXRlZCBhZG1pbmlzdHJhdGl2ZSBlbmdpbmUg
Zm9yIHlvdXIgTGludXgsIFVuaXgsIGFuZCBXaW5kb3dzIHN5c3RlbXMsIHBl
cmZvcm1zIGFkbWluaXN0cmF0aXZlIHRhc2tzIChzdWNoIGFzIGFkZGluZyB1
c2VycywgaW5zdGFsbGluZyBwYWNrYWdlcywgYW5kIHVwZGF0aW5nIHNlcnZl
ciBjb25maWd1cmF0aW9ucykgYmFzZWQgb24gYSBjZW50cmFsaXplZCBzcGVj
aWZpY2F0aW9uLgoqIFtSZXF1ZXN0LWxvZy1hbmFseXplcl0oaHR0cHM6Ly9n
aXRodWIuY29tL3d2YW5iZXJnZW4vcmVxdWVzdC1sb2ctYW5hbHl6ZXIpIC0g
Q3JlYXRlIHJlcG9ydHMgYmFzZWQgb24geW91ciBsb2cgZmlsZXMuIFN1cHBv
cnRzIFJhaWxzLCBBcGFjaGUsIE15U1FMLCBEZWxheWVkOjpKb2IsIGFuZCBv
dGhlciBmb3JtYXRzLgoqIFtSdWJiZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9y
dWJiZXIvcnViYmVyKSAtIFRoZSBydWJiZXIgcGx1Z2luIGVuYWJsZXMgcmVs
YXRpdmVseSBjb21wbGV4IG11bHRpLWluc3RhbmNlIGRlcGxveW1lbnRzIG9m
IFJ1YnlPblJhaWxzIGFwcGxpY2F0aW9ucyB0byBBbWF6b24ncyBFbGFzdGlj
IENvbXB1dGUgQ2xvdWQgKEVDMikuCiogW1NTSEtleV0oaHR0cHM6Ly9naXRo
dWIuY29tL2JlbnNpZS9zc2hrZXkpIC0gU1NIIHByaXZhdGUgYW5kIHB1Ymxp
YyBrZXkgZ2VuZXJhdG9yIGluIHB1cmUgUnVieSAoUlNBICYgRFNBKS4KKiBb
U3VuemldKGh0dHBzOi8vZ2l0aHViLmNvbS9rZW5uL3N1bnppKSAtIFNlcnZl
ciBwcm92aXNpb25pbmcgdXRpbGl0eSBmb3IgbWluaW1hbGlzdHMKKiBbUnVi
eS1MWENdKGh0dHBzOi8vZ2l0aHViLmNvbS9seGMvcnVieS1seGMpIC0gTmF0
aXZlIHJ1YnkgYmluZGluZyBmb3IgTGludXggY29udGFpbmVycy4KKiBbVmFn
cmFudF0oaHR0cDovL3d3dy52YWdyYW50dXAuY29tKSAtIENyZWF0ZSBhbmQg
Y29uZmlndXJlIGxpZ2h0d2VpZ2h0LCByZXByb2R1Y2libGUsIGFuZCBwb3J0
YWJsZSBkZXZlbG9wbWVudCBlbnZpcm9ubWVudHMuCgojIyBEaWZmCgoqIFtE
aWZmeV0oaHR0cHM6Ly9naXRodWIuY29tL3NhbWcvZGlmZnkpIC0gRWFzeSBE
aWZmaW5nIFdpdGggUnVieS4KKiBbZ2VtZGlmZl0oaHR0cHM6Ly9naXRodWIu
Y29tL3RlZXBhcmhhbS9nZW1kaWZmKSAtIEZpbmQgc291cmNlIHJlcG9zaXRv
cmllcyBmb3IgZ2Vtcy4gT3BlbiwgY29tcGFyZSwgYW5kIHVwZGF0ZSBvdXRk
YXRlZCBnZW0gdmVyc2lvbnMuCiogW0pzb25Db21wYXJlXShodHRwczovL2dp
dGh1Yi5jb20vYTJkZXNpZ24taW5jL2pzb24tY29tcGFyZSkgLSBSZXR1cm5z
IHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdHdvIEpTT04gZmlsZXMuCgojIyBE
b2N1bWVudGF0aW9uCgoqIFtBbm5vdGF0ZV0oaHR0cHM6Ly9naXRodWIuY29t
L2N0cmFuL2Fubm90YXRlX21vZGVscykgLSBBZGQgYSBjb21tZW50IGRvY3Vt
ZW50aW5nIHRoZSBjdXJyZW50IHNjaGVtYSB0byB0aGUgdG9wIG9yIGJvdHRv
bSBvZiBlYWNoIG9mIHlvdXIgQWN0aXZlUmVjb3JkIG1vZGVscy4KKiBbQXBp
cGllXShodHRwczovL2dpdGh1Yi5jb20vQXBpcGllL2FwaXBpZS1yYWlscykg
LSBSYWlscyBBUEkgZG9jdW1lbnRhdGlvbiBhbmQgZGlzcGxheSB0b29sIHVz
aW5nIFJ1Ynkgc3ludGF4LgoqIFtBc2NpaWRvY3Rvcl0oaHR0cHM6Ly9hc2Np
aWRvY3Rvci5vcmcpIC0gQSBmYXN0LCBSdWJ5LWJhc2VkIHRleHQgcHJvY2Vz
c29yICYgcHVibGlzaGluZyB0b29sY2hhaW4gZm9yIGNvbnZlcnRpbmcgQXNj
aWlEb2MgdG8gSFRNTDUsIERvY0Jvb2ssIEVQVUIzLCBQREYgJiBtb3JlLgoq
IFtEb2N0b3JdKGh0dHBzOi8vZ2l0aHViLmNvbS9taW5pby9kb2N0b3IpIC0g
RG9jdG9yIGlzIGEgRG9jdW1lbnRhdGlvbiBTZXJ2ZXIgZm9yIGFsbCB5b3Vy
IGRvY3MgaW4gZ2l0aHViLgoqIFtEb2N1bWVudGF0aW9uXShodHRwczovL2dp
dGh1Yi5jb20vYWRhbWNvb2tlL2RvY3VtZW50YXRpb24pIC0gQSBSYWlscyBl
bmdpbmUgdG8gcHJvdmlkZXIgdGhlIGFiaWxpdHkgdG8gYWRkIGRvY3VtZW50
YXRpb24gdG8gYSBSYWlscyBhcHBsaWNhdGlvbi4KKiBbR2l0SHViIENoYW5n
ZWxvZyBHZW5lcmF0b3JdKGh0dHBzOi8vZ2l0aHViLmNvbS9za3l3aW5kZXIv
Z2l0aHViLWNoYW5nZWxvZy1nZW5lcmF0b3IpIC0gQXV0b21hdGljYWxseSBn
ZW5lcmF0ZSBjaGFuZ2UgbG9nIGZyb20geW91ciB0YWdzLCBpc3N1ZXMsIGxh
YmVscyBhbmQgcHVsbCByZXF1ZXN0cyBvbiBHaXRIdWIuCiogW0dvbGx1bV0o
aHR0cHM6Ly9naXRodWIuY29tL2dvbGx1bS9nb2xsdW0pIC0gQSBzaW1wbGUs
IEdpdC1wb3dlcmVkIHdpa2kgd2l0aCBhIHN3ZWV0IEFQSSBhbmQgbG9jYWwg
ZnJvbnRlbmQuCiogW2dyYXBlLXN3YWdnZXJdKGh0dHBzOi8vZ2l0aHViLmNv
bS9ydWJ5LWdyYXBlL2dyYXBlLXN3YWdnZXIpIC0gQWRkIHN3YWdnZXIgY29t
cGxpYW50IGRvY3VtZW50YXRpb24gdG8geW91ciBHcmFwZSBBUEkuCiogW0hh
bm5hXShodHRwczovL2dpdGh1Yi5jb20vcmRvYy9oYW5uYS1ub3V2ZWF1KSAt
IEFuIFJEb2MgZm9ybWF0dGVyIGJ1aWx0IHdpdGggc2ltcGxpY2l0eSwgYmVh
dXR5IGFuZCBlYXNlIG9mIGJyb3dzaW5nIGluIG1pbmQuCiogW0hvbG9ncmFt
XShodHRwczovL2dpdGh1Yi5jb20vdHJ1bGlhL2hvbG9ncmFtKSAtIEEgbWFy
a2Rvd24gYmFzZWQgZG9jdW1lbnRhdGlvbiBzeXN0ZW0gZm9yIHN0eWxlIGd1
aWRlcy4gSXQgcGFyc2VzIGNvbW1lbnRzIGluIHlvdXIgQ1NTIGFuZCBoZWxw
cyB5b3UgdHVybiB0aGVtIGludG8gYSBiZWF1dGlmdWwgc3R5bGUgZ3VpZGUu
CiogW0luY2hdKGh0dHBzOi8vZ2l0aHViLmNvbS9ycnJlbmUvaW5jaCkgLSBJ
bmNoIGlzIGEgZG9jdW1lbnRhdGlvbiBtZWFzdXJlbWVudCBhbmQgZXZhbHV0
YXRpb24gdG9vbCBmb3IgUnVieSBjb2RlLCBiYXNlZCBvbiBZQVJELgoqIFtS
RG9jXShodHRwczovL2dpdGh1Yi5jb20vcnVieS9yZG9jKSAtIFJEb2MgcHJv
ZHVjZXMgSFRNTCBhbmQgY29tbWFuZC1saW5lIGRvY3VtZW50YXRpb24gZm9y
IFJ1YnkgcHJvamVjdHMuCiogW3JzcGVjX2FwaV9kb2N1bWVudGF0aW9uXSho
dHRwczovL2dpdGh1Yi5jb20vemlwbWFyay9yc3BlY19hcGlfZG9jdW1lbnRh
dGlvbikgLSBBdXRvbWF0aWNhbGx5IGdlbmVyYXRlIEFQSSBkb2N1bWVudGF0
aW9uIGZyb20gUlNwZWMuCiogW1lBUkRdKGh0dHA6Ly95YXJkb2Mub3JnKSAt
IFlBUkQgZW5hYmxlcyB0aGUgdXNlciB0byBnZW5lcmF0ZSBjb25zaXN0ZW50
LCB1c2FibGUgZG9jdW1lbnRhdGlvbiB0aGF0IGNhbiBiZSBleHBvcnRlZCB0
byBhIG51bWJlciBvZiBmb3JtYXRzIHZlcnkgZWFzaWx5LgoKIyMgRS1Db21t
ZXJjZSBhbmQgUGF5bWVudHMKCiogW0FjdGl2ZSBNZXJjaGFudF0oaHR0cHM6
Ly9naXRodWIuY29tL2FjdGl2ZW1lcmNoYW50L2FjdGl2ZV9tZXJjaGFudCkg
LSBBIHNpbXBsZSBwYXltZW50IGFic3RyYWN0aW9uIGxpYnJhcnkgZXh0cmFj
dGVkIGZyb20gU2hvcGlmeS4KKiBbQnJhaW50cmVlXShodHRwczovL2dpdGh1
Yi5jb20vYnJhaW50cmVlL2JyYWludHJlZV9ydWJ5KSAtIEJyYWludHJlZSBS
dWJ5IGJpbmRpbmdzLgoqIFtDb25la3RhXShodHRwczovL2dpdGh1Yi5jb20v
Y29uZWt0YS9jb25la3RhLXJ1YnkpIC0gQ29uZWt0YSBSdWJ5IGJpbmRpbmdz
LgoqIFtjcmVkaXRfY2FyZF92YWxpZGF0aW9uc10oaHR0cHM6Ly9naXRodWIu
Y29tL0ZpdmVsbC9jcmVkaXRfY2FyZF92YWxpZGF0aW9ucykgLSBBIHJ1Ynkg
Z2VtIGZvciB2YWxpZGF0aW5nIGNyZWRpdCBjYXJkIG51bWJlcnMsIGdlbmVy
YXRpbmcgdmFsaWQgbnVtYmVycywgTHVobiBjaGVja3MuCiogW0tvdWRva3Vd
KGh0dHBzOi8vZ2l0aHViLmNvbS9hbmRyZXdjdWx2ZXIva291ZG9rdSkgLSBS
b2J1c3Qgc3Vic2NyaXB0aW9uIHN1cHBvcnQgZm9yIFJ1Ynkgb24gUmFpbHMg
YXBwcyB1c2luZyBTdHJpcGUsIGluY2x1ZGluZyBvdXQtb2YtdGhlLWJveCBw
cmljaW5nIHBhZ2VzLCBwYXltZW50IHBhZ2VzLCBhbmQgc3Vic2NyaXB0aW9u
IG1hbmFnZW1lbnQuCiogW1BheW9sYV0oaHR0cHM6Ly9naXRodWIuY29tL3Bl
dGVya2Vlbi9wYXlvbGEpIC0gRHJvcC1pbiBSYWlscyBlbmdpbmUgZm9yIGFj
Y2VwdGluZyBwYXltZW50cyB3aXRoIFN0cmlwZS4KKiBbUGF5cGFsIE1lcmNo
YW50IFNES10oaHR0cHM6Ly9naXRodWIuY29tL3BheXBhbC9tZXJjaGFudC1z
ZGstcnVieSkgLSBPZmZpY2lhbCBQYXlwYWwgTWVyY2hhbnQgU0RLIGZvciBS
dWJ5LgoqIFtQaWdneWJha10oaHR0cHM6Ly9naXRodWIuY29tL3BpZ2d5YmFr
L3BpZ2d5YmFrKSAtIE1vZHVsYXIsIEV4dGVuc2libGUgb3Blbi1zb3VyY2Ug
ZWNvbW1lcmNlIHNvbHV0aW9uIGZvciBSdWJ5IG9uIFJhaWxzLgoqIFtST1Ig
RWNvbW1lcmNlXShodHRwczovL2dpdGh1Yi5jb20vZHJoZW5uZXIvcm9yX2Vj
b21tZXJjZSkgLSBBIFJhaWxzIGUtY29tbWVyY2UgcGxhdGZvcm0uCiogW1Nv
bGlkdXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9zb2xpZHVzaW8vc29saWR1cykg
LSBBbiBvcGVuIHNvdXJjZSwgZUNvbW1lcmNlIGFwcGxpY2F0aW9uIGZvciBo
aWdoIHZvbHVtZSByZXRhaWxlcnMuCiogW1NwcmVlXShodHRwczovL2dpdGh1
Yi5jb20vc3ByZWUvc3ByZWUpIC0gU3ByZWUgaXMgYSBjb21wbGV0ZSBvcGVu
IHNvdXJjZSBlLWNvbW1lcmNlIHNvbHV0aW9uIGZvciBSdWJ5IG9uIFJhaWxz
LgoqIFtTcXVhcmVDb25uZWN0XShodHRwczovL2dpdGh1Yi5jb20vc3F1YXJl
L2Nvbm5lY3QtcnVieS1zZGspIC0gU3F1YXJlJ3MgU0RLIGZvciBwYXltZW50
cyBhbmQgb3RoZXIgU3F1YXJlIEFQSXMuCiogW3N0cmlwZS1ydWJ5XShodHRw
czovL2dpdGh1Yi5jb20vc3RyaXBlL3N0cmlwZS1ydWJ5KSAtIFN0cmlwZSBS
dWJ5IGJpbmRpbmdzLgoKIyMgRWJvb2sKCiogW0Jvb2tzaG9wXShodHRwczov
L2dpdGh1Yi5jb20vd29ybGR1bml0aW5nL2Jvb2tzaG9wKSAtIEJvb2tzaG9w
IGlzIGEgYW4gb3Blbi1zb3VyY2UgYWdpbGUgYm9vayBkZXZlbG9wbWVudCBh
bmQgcHVibGlzaGluZyBmcmFtZXdvcmsgZm9yIGF1dGhvcnMsIGVkaXRvcnMu
CiogW0VlZXB1Yl0oaHR0cHM6Ly9naXRodWIuY29tL2p1Z3lvL2VlZXB1Yikg
LSBFZWVQdWIgaXMgYSBSdWJ5IGVQdWIgZ2VuZXJhdG9yLgoqIFtHZXB1Yl0o
aHR0cHM6Ly9naXRodWIuY29tL3Nrb2ppL2dlcHViKSAtIEEgZ2VuZXJpYyBF
UFVCIGxpYnJhcnkgZm9yIFJ1YnkgOiBzdXBwb3J0cyBFUFVCIDMuCiogW0dp
dCBTY3JpYmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9zY2hhY29uL2dpdC1zY3Jp
YmUpIC0gQmFzaWNhbGx5IHRoZSBiZXN0IHdheSB0byB3cml0ZSBhbiBlYm9v
ay4KKiBbTW9iaV0oaHR0cHM6Ly9naXRodWIuY29tL2prb25naWUvbW9iaSkg
LSBBIFJ1Ynkgd2F5IHRvIHJlYWQgTU9CSSBmb3JtYXQgbWV0YWRhdGEuCiog
W1Jldmlld10oaHR0cHM6Ly9naXRodWIuY29tL2ttdXRvL3JldmlldykgLSBS
ZTpWSUVXIGlzIGZsZXhpYmxlIGRvY3VtZW50IGZvcm1hdC9jb252ZXJzaW9u
IHN5c3RlbS4KCiMjIEVtYWlsCgoqIFtHaWJib25dKGh0dHBzOi8vZ2l0aHVi
LmNvbS9hbXJvL2dpYmJvbikgLSBBUEkgd3JhcHBlciBmb3IgdGhlIE1haWxj
aGltcCBlLW1haWwgbWFya2V0aW5nIHBsYXRmb3JtLgoqIFtHcmlkZGxlcl0o
aHR0cHM6Ly9naXRodWIuY29tL3Rob3VnaHRib3QvZ3JpZGRsZXIpIC0gU2lt
cGxpZnkgcmVjZWl2aW5nIGVtYWlsIGluIFJhaWxzLgoqIFtJbmNvbWluZ10o
aHR0cHM6Ly9naXRodWIuY29tL2hvbmV5YmFkZ2VyLWlvL2luY29taW5nKSAt
IEluY29taW5nISBoZWxwcyB5b3UgcmVjZWl2ZSBlbWFpbCBpbiB5b3VyIFJh
Y2sgYXBwcy4KKiBbTGV0dGVyT3BlbmVyXShodHRwczovL2dpdGh1Yi5jb20v
cnlhbmIvbGV0dGVyX29wZW5lcikgLSBQcmV2aWV3IG1haWwgaW4gdGhlIGJy
b3dzZXIgaW5zdGVhZCBvZiBzZW5kaW5nLgoqIFtNYWlsXShodHRwczovL2dp
dGh1Yi5jb20vbWlrZWwvbWFpbCkgLSBBIFJlYWxseSBSdWJ5IE1haWwgTGli
cmFyeS4KKiBbTWFpbENhdGNoZXJdKGh0dHBzOi8vbWFpbGNhdGNoZXIubWUp
IC0gQ2F0Y2hlcyBtYWlsIGFuZCBzZXJ2ZXMgaXQgdGhyb3VnaCBhIGRyZWFt
LgoqIFtNYWlsRm9ybV0oaHR0cHM6Ly9naXRodWIuY29tL3BsYXRhZm9ybWF0
ZWMvbWFpbF9mb3JtKSAtIFNlbmQgZS1tYWlsIHN0cmFpZ2h0IGZyb20gZm9y
bXMgaW4gUmFpbHMgd2l0aCBJMThuLCB2YWxpZGF0aW9ucywgYXR0YWNobWVu
dHMgYW5kIHJlcXVlc3QgaW5mb3JtYXRpb24uCiogW01haWxtYW5dKGh0dHBz
Oi8vZ2l0aHViLmNvbS9tYWlsbWFuL21haWxtYW4pIC0gQW4gaW5jb21pbmcg
bWFpbCBwcm9jZXNzaW5nIG1pY3JvZnJhbWV3b3JrIGluIFJ1YnkuCiogW01h
aWx5XShodHRwczovL2dpdGh1Yi5jb20vbWFya2V0cy9tYWlseSkgLSBBIFJh
aWxzIEVuZ2luZSB0byBtYW5hZ2UsIHRlc3QgYW5kIG5hdmlnYXRlIHRocm91
Z2ggYWxsIHlvdXIgZW1haWwgdGVtcGxhdGVzIG9mIHlvdXIgYXBwLCBiZWlu
ZyBhYmxlIHRvIHByZXZpZXcgdGhlbSBkaXJlY3RseSBpbiB5b3VyIGJyb3dz
ZXIuCiogW01hcmtlcmJdKGh0dHBzOi8vZ2l0aHViLmNvbS9wbGF0YWZvcm1h
dGVjL21hcmtlcmIpIC0gQWxsb3dzIHlvdSB0byByZW5kZXIgbXVsdGlwYXJ0
IGUtbWFpbHMgZnJvbSBhIHNpbmdsZSB0ZW1wbGF0ZSB3cml0dGVuIGluIE1h
cmtkb3duLgoqIFtNaWRpU210cFNlcnZlcl0oaHR0cHM6Ly80Y29tbWVyY2Ut
dGVjaG5vbG9naWVzLWFnLmdpdGh1Yi5pby9taWRpLXNtdHAtc2VydmVyLykg
LSBUaGUgaGlnaGx5IGN1c3RvbWl6YWJsZSBydWJ5IFNNVFAtU2VydmljZSBs
aWJyYXJ5IHdpdGggYnVpbHRpbiBzdXBwb3J0IGZvciBBVVRIIGFuZCBTU0wv
U1RBUlRUTFMsIDhCSVRNSU1FIGFuZCBTTVRQVVRGOCwgSVB2NCBhbmQgSVB2
NiBhbmQgbW9yZS4KKiBbUG9ueV0oaHR0cHM6Ly9naXRodWIuY29tL2JlbnBy
ZXcvcG9ueSkgLSBUaGUgZXhwcmVzcyB3YXkgdG8gc2VuZCBtYWlsIGZyb20g
UnVieS4KKiBbUG9zdGFsXShodHRwczovL2dpdGh1Yi5jb20vYXRlY2gvcG9z
dGFsKSAtIEEgZnVsbHkgZmVhdHVyZWQgb3BlbiBzb3VyY2UgbWFpbCBkZWxp
dmVyeSBwbGF0Zm9ybSBmb3IgaW5jb21pbmcgJiBvdXRnb2luZyBlLW1haWwu
CiogW3ByZW1haWxlci1yYWlsc10oaHR0cHM6Ly9naXRodWIuY29tL2ZwaGls
aXBlL3ByZW1haWxlci1yYWlscykgLSBDU1Mgc3R5bGVkIGVtYWlscyB3aXRo
b3V0IHRoZSBoYXNzbGUuCiogW1JvYWRpZV0oaHR0cHM6Ly9naXRodWIuY29t
L01hbmdlL3JvYWRpZSkgLSBSb2FkaWUgdHJpZXMgdG8gbWFrZSBzZW5kaW5n
IEhUTUwgZW1haWxzIGEgbGl0dGxlIGxlc3MgcGFpbmZ1bCBieSBpbmxpbmlu
ZyBzdHlsZXNoZWV0cyBhbmQgcmV3cml0aW5nIHJlbGF0aXZlIFVSTHMgZm9y
IHlvdSBpbnNpZGUgeW91ciBlbWFpbHMuCiogW1N1cF0oaHR0cHM6Ly9naXRo
dWIuY29tL3N1cC1oZWxpb3Ryb3BlL3N1cCkgLSBBIGN1cnNlcyB0aHJlYWRz
LXdpdGgtdGFncyBzdHlsZSBlbWFpbCBjbGllbnQuCgojIyBFbmNyeXB0aW9u
CgoqIFtiY3J5cHQtcnVieV0oaHR0cHM6Ly9naXRodWIuY29tL2NvZGFoYWxl
L2JjcnlwdC1ydWJ5KSAtIGJjcnlwdC1ydWJ5IGlzIGEgUnVieSBiaW5kaW5n
IGZvciB0aGUgT3BlbkJTRCBiY3J5cHQoKSBwYXNzd29yZCBoYXNoaW5nIGFs
Z29yaXRobS4KKiBbUmJOYUNsXShodHRwczovL2dpdGh1Yi5jb20vY3J5cHRv
c3BoZXJlL3JibmFjbCkgLSBSdWJ5IGJpbmRpbmcgdG8gdGhlIE5ldHdvcmtp
bmcgYW5kIENyeXB0b2dyYXBoeSAoTmFDbCkgbGlicmFyeS4KKiBbU3ltXSho
dHRwczovL2dpdGh1Yi5jb20va2lnc3Rlci9zeW0pIC0gQSB0aW1lLXNhdmlu
ZyBzeW1tZXRyaWMgZW5jcnlwdGlvbiBnZW0gYmFzZWQgb24gT3BlblNTTCB0
aGF0IHVzZXMgMjU2Yml0IChwYXNzd29yZC1lbmNyeXB0ZWQpIGtleXMuIFJl
YWQgdGhlIGtleSBmcm9tIFNURElOLCBhIGZpbGUsIEVOViBvciwgb24gYSBN
YWM6IE9TLVggS2V5Y2hhaW4uCiogW1N5bW1ldHJpYyBFbmNyeXB0aW9uXSho
dHRwOi8vcm9ja2V0am9iLmdpdGh1Yi5pby9zeW1tZXRyaWMtZW5jcnlwdGlv
bi8pIC0gVHJhbnNwYXJlbnRseSBlbmNyeXB0IEFjdGl2ZVJlY29yZCwgTW9u
Z29pZCwgYW5kIE1vbmdvTWFwcGVyIGF0dHJpYnV0ZXMuIEVuY3J5cHQgcGFz
c3dvcmRzIGluIGNvbmZpZ3VyYXRpb24gZmlsZXMuIEVuY3J5cHQgZW50aXJl
IGZpbGVzIGF0IHJlc3QuCiogW1RoZW1pc10oaHR0cHM6Ly9naXRodWIuY29t
L2Nvc3NhY2tsYWJzL3RoZW1pcykgLSBjcnlwdG8gbGlicmFyeSBmb3IgcGFp
bmxlc3MgZGF0YSBzZWN1cml0eSwgcHJvdmlkaW5nIHN5bW1ldHJpYyBhbmQg
YXN5bW1ldHJpYyBlbmNyeXB0aW9uLCBzZWN1cmUgc29ja2V0cyB3aXRoIGZv
cndhcmQgc2VjcmVjeSwgZm9yIG1vYmlsZSBhbmQgc2VydmVyIHBsYXRmb3Jt
cy4KCiMjIEVudmlyb25tZW50IE1hbmFnZW1lbnQKCiogW2NocnVieV0oaHR0
cHM6Ly9naXRodWIuY29tL3Bvc3Rtb2Rlcm4vY2hydWJ5KSAtIENoYW5nZSB5
b3VyIGN1cnJlbnQgUnVieS4gTm8gc2hpbXMsIG5vIGNyYXp5IG9wdGlvbnMg
b3IgZmVhdHVyZXMsIH45MCBMT0MuCiogW2ZyeV0oaHR0cHM6Ly9naXRodWIu
Y29tL3Rlcmxhci9mcnkpIC0gU2ltcGxlIHJ1YnkgdmVyc2lvbiBtYW5hZ2Vy
IGZvciBmaXNoLgoqIFtnZW1faG9tZV0oaHR0cHM6Ly9naXRodWIuY29tL3Bv
c3Rtb2Rlcm4vZ2VtX2hvbWUpIC0gQSB0b29sIGZvciBjaGFuZ2luZyB5b3Vy
ICRHRU1fSE9NRS4KKiBbcmJlbnZdKGh0dHBzOi8vZ2l0aHViLmNvbS9zc3Rl
cGhlbnNvbi9yYmVudikgLSBVc2UgcmJlbnYgdG8gcGljayBhIFJ1YnkgdmVy
c2lvbiBmb3IgeW91ciBhcHBsaWNhdGlvbiBhbmQgZ3VhcmFudGVlIHRoYXQg
eW91ciBkZXZlbG9wbWVudCBlbnZpcm9ubWVudCBtYXRjaGVzIHByb2R1Y3Rp
b24uCiogW3J1YnktYnVpbGRdKGh0dHBzOi8vZ2l0aHViLmNvbS9zc3RlcGhl
bnNvbi9ydWJ5LWJ1aWxkKSAtIENvbXBpbGUgYW5kIGluc3RhbGwgUnVieS4K
KiBbcnVieS1pbnN0YWxsXShodHRwczovL2dpdGh1Yi5jb20vcG9zdG1vZGVy
bi9ydWJ5LWluc3RhbGwpIC0gSW5zdGFsbHMgUnVieSwgSlJ1YnksIFJ1Ymlu
aXVzLCBNYWdMZXYgb3IgTVJ1YnkuCiogW1JWTV0oaHR0cHM6Ly9ydm0uaW8p
IC0gUlZNIGlzIGEgY29tbWFuZC1saW5lIHRvb2wgd2hpY2ggYWxsb3dzIHlv
dSB0byBlYXNpbHkgaW5zdGFsbCwgbWFuYWdlLCBhbmQgd29yayB3aXRoIG11
bHRpcGxlIHJ1YnkgZW52aXJvbm1lbnRzIGZyb20gaW50ZXJwcmV0ZXJzIHRv
IHNldHMgb2YgZ2Vtcy4KKiBbVG9rYWlkb10oaHR0cHM6Ly9naXRodWIuY29t
L3Rva2FpZG8vdG9rYWlkb2FwcC9yZWxlYXNlcykgLSBSdWJ5LCBSYWlscywg
U1FMaXRlIGFuZCBSZWRpcyBlbmNhcHN1bGF0ZWQgaW4gYSBzaW5nbGUgZHJh
Zy1hbmQtZHJvcCBPUyBYIGFwcCwgZGVzaWduZWQgdG8gbWFrZSBpbnN0YWxs
aW5nIGEgd29ya2luZyBSb1IgZW52aXJvbm1lbnQgZWFzeSBmb3IgYmVnaW5u
ZXJzLgoqIFtVcnVdKGh0dHBzOi8vYml0YnVja2V0Lm9yZy9qb25mb3J1bXMv
dXJ1KSAtIFVydSBpcyBhIGxpZ2h0d2VpZ2h0LCBtdWx0aS1wbGF0Zm9ybSBj
b21tYW5kIGxpbmUgdG9vbCB0aGF0IGhlbHBzIHlvdSB1c2UgdGhlIG11bHRp
cGxlIHJ1YmllcyBvbiB5b3VyIDMyLzY0LWJpdCBMaW51eCwgT1MgWCwgb3Ig
V2luZG93cyBzeXN0ZW1zLgoKIyMgRXJyb3IgSGFuZGxpbmcKCiogW0FpcmJy
YWtlXShodHRwczovL2dpdGh1Yi5jb20vYWlyYnJha2UvYWlyYnJha2UpIC0g
VGhlIG9mZmljaWFsIEFpcmJyYWtlIGxpYnJhcnkgZm9yIFJ1Ynkgb24gUmFp
bHMgKGFuZCBvdGhlciBSYWNrIGJhc2VkIGZyYW1ld29ya3MpLgoqIFtCZXR0
ZXIgRXJyb3JzXShodHRwczovL2dpdGh1Yi5jb20vY2hhcmxpZXNvbWUvYmV0
dGVyX2Vycm9ycykgLSBCZXR0ZXIgZXJyb3IgcGFnZSBmb3IgUmFjayBhcHBz
LgoqIFtCdWdzbmFnXShodHRwczovL2dpdGh1Yi5jb20vYnVnc25hZy9idWdz
bmFnLXJ1YnkpIC0gRXJyb3IgbW9uaXRvcmluZyBmb3IgUmFpbHMsIFNpbmF0
cmEsIFJhY2ssIGFuZCBwbGFpbiBSdWJ5IGFwcHMuCiogW0VycmJpdF0oaHR0
cHM6Ly9naXRodWIuY29tL2VycmJpdC9lcnJiaXQpIC0gVGhlIG9wZW4gc291
cmNlLCBzZWxmLWhvc3RlZCBlcnJvciBjYXRjaGVyLgoqIFtFeGNlcHRpb24g
SGFuZGxlcl0oaHR0cHM6Ly9naXRodWIuY29tL3JpY2hwZWNrL2V4Y2VwdGlv
bl9oYW5kbGVyKSAtIEN1c3RvbSBlcnJvciBwYWdlcy4KKiBbRXhjZXB0aW9u
IE5vdGlmaWNhdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL3NtYXJ0aW5lejg3
L2V4Y2VwdGlvbl9ub3RpZmljYXRpb24pIC0gQSBzZXQgb2Ygbm90aWZpZXJz
IGZvciBzZW5kaW5nIG5vdGlmaWNhdGlvbnMgd2hlbiBlcnJvcnMgb2NjdXIg
aW4gYSBSYWNrL1JhaWxzIGFwcGxpY2F0aW9uLgoqIFtIb25leWJhZGdlcl0o
aHR0cHM6Ly93d3cuaG9uZXliYWRnZXIuaW8vKSAtIEV4Y2VwdGlvbiwgdXB0
aW1lLCBhbmQgcGVyZm9ybWFuY2UgbW9uaXRvcmluZyBmb3IgUnVieS4KKiBb
TmVzdHldKGh0dHBzOi8vZ2l0aHViLmNvbS9za29ya3MvbmVzdHkpIC0gTmVz
dGVkIGV4Y2VwdGlvbnMgZm9yIFJ1YnkuCiogW1JhdmVuIFJ1YnldKGh0dHBz
Oi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvcmF2ZW4tcnVieSkgLSBSYXZlbiBp
cyBhIFJ1YnkgY2xpZW50IGZvciBTZW50cnkuCgojIyBGZWF0dXJlIEZsaXBw
ZXJzIGFuZCBBL0IgVGVzdGluZwoKKiBbTW90b3JoZWFkXShodHRwczovL2dp
dGh1Yi5jb20vYW1hdHN1ZGEvbW90b3JoZWFkKSAtIEEgUmFpbHMgRW5naW5l
IGZyYW1ld29yayB0aGF0IGhlbHBzIHNhZmUgYW5kIHJhcGlkIGZlYXR1cmUg
cHJvdG90eXBpbmcuCiogW2ZsaXBwZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9q
bnVuZW1ha2VyL2ZsaXBwZXIpIC0gRmVhdHVyZSBmbGlwcGluZyBmb3IgQU5Z
VEhJTkcuIE1ha2UgdHVybmluZyBmZWF0dXJlcyBvbi9vZmYgc28gZWFzeSB0
aGF0IGV2ZXJ5b25lIGRvZXMgaXQuIFdoYXRldmVyIHlvdXIgZGF0YSBzdG9y
ZSwgdGhyb3VnaHB1dCwgb3IgZXhwZXJpZW5jZS4KKiBbUm9sbG91dF0oaHR0
cHM6Ly9naXRodWIuY29tL0ZldExpZmUvcm9sbG91dCkgLSBGZWF0dXJlIGZs
aXBwZXJzLgoqIFtTcGxpdF0oaHR0cHM6Ly9naXRodWIuY29tL3NwbGl0cmIv
c3BsaXQpIC0gUmFjayBCYXNlZCBBQiB0ZXN0aW5nIGZyYW1ld29yay4KKiBb
VmFuaXR5XShodHRwczovL2dpdGh1Yi5jb20vYXNzYWYvdmFuaXR5KSAtIGFu
IEEvQiB0ZXN0aW5nIGZyYW1ld29yayBmb3IgUmFpbHMgdGhhdCBpcyBkYXRh
c3RvcmUgYWdub3N0aWMuCgojIyBGaWxlIFVwbG9hZAoKKiBbYXR0YWNoZV0o
aHR0cHM6Ly9naXRodWIuY29tL2Nob29ua2VhdC9hdHRhY2hlKSAtIFN0YW5k
YWxvbmUgaW1hZ2UgYW5kIGZpbGUgc2VydmVyIHRvIGRlY291cGxlIHlvdXIg
YXBwIGZyb20gZmlsZSBtYW5hZ2VtZW50IGNvbmNlcm5zLgoqIFtDYXJyaWVy
V2F2ZV0oaHR0cHM6Ly9naXRodWIuY29tL2NhcnJpZXJ3YXZldXBsb2FkZXIv
Y2FycmllcndhdmUpIC0gQ2xhc3NpZXIgc29sdXRpb24gZm9yIGZpbGUgdXBs
b2FkcyBmb3IgUmFpbHMsIFNpbmF0cmEgYW5kIG90aGVyIFJ1Ynkgd2ViIGZy
YW1ld29ya3MuCiogW0RyYWdvbkZseV0oaHR0cHM6Ly9naXRodWIuY29tL21h
cmtldmFucy9kcmFnb25mbHkpIC0gQSBSdWJ5IGdlbSBmb3Igb24tdGhlLWZs
eSBwcm9jZXNzaW5nIC0gc3VpdGFibGUgZm9yIGltYWdlIHVwbG9hZGluZyBp
biBSYWlscywgU2luYXRyYSBhbmQgbXVjaCBtb3JlIS4KKiBbUGFwZXJDbGlw
XShodHRwczovL2dpdGh1Yi5jb20vdGhvdWdodGJvdC9wYXBlcmNsaXApIC0g
RWFzeSBmaWxlIGF0dGFjaG1lbnQgbWFuYWdlbWVudCBmb3IgQWN0aXZlUmVj
b3JkLiBEZXByZWNhdGVkIGFzIG9mIE1heSAxNCwgMjAxOC4KKiBbcmFjay1z
ZWN1cmUtdXBsb2FkXShodHRwczovL2dpdGh1Yi5jb20vZHRhbml3YWtpL3Jh
Y2stc2VjdXJlLXVwbG9hZCkgLSBVcGxvYWQgZmlsZXMgc2VjdXJlbHkuCiog
W1JlZmlsZV0oaHR0cHM6Ly9naXRodWIuY29tL3JlZmlsZS9yZWZpbGUpIC0g
QSBtb2Rlcm4gZmlsZSB1cGxvYWQgbGlicmFyeSBmb3IgUnVieSBhcHBsaWNh
dGlvbnMsIFJlZmlsZSBpcyBhbiBhdHRlbXB0IGJ5IENhcnJpZXJXYXZlJ3Mg
b3JpZ2luYWwgYXV0aG9yIHRvIGZpeCB0aGUgZGVzaWduIG1pc3Rha2VzIGFu
ZCBvdmVyZW5naW5lZXJpbmcgaW4gQ2FycmllcldhdmUuCiogW1NocmluZV0o
aHR0cHM6Ly9naXRodWIuY29tL2phbmtvLW0vc2hyaW5lKSAtIFRvb2xraXQg
Zm9yIGhhbmRsaW5nIGZpbGUgdXBsb2FkcyBpbiBSdWJ5LgoKIyMgRmlsZSBT
eXN0ZW0gTGlzdGVuZXIKCiogW0d1YXJkXShodHRwczovL2dpdGh1Yi5jb20v
Z3VhcmQvZ3VhcmQpIC0gQSBjb21tYW5kIGxpbmUgdG9vbCB0byBlYXNpbHkg
aGFuZGxlIGV2ZW50cyBvbiBmaWxlIHN5c3RlbSBtb2RpZmljYXRpb25zLgoq
IFtHdWFyZDo6TGl2ZVJlbG9hZF0oaHR0cHM6Ly9naXRodWIuY29tL2d1YXJk
L2d1YXJkLWxpdmVyZWxvYWQpIC0gQXV0b21hdGljYWxseSByZWxvYWQgeW91
ciBicm93c2VyIHdoZW4gJ3ZpZXcnIGZpbGVzIGFyZSBtb2RpZmllZC4KKiBb
TGlzdGVuXShodHRwczovL2dpdGh1Yi5jb20vZ3VhcmQvbGlzdGVuKSAtIFRo
ZSBMaXN0ZW4gZ2VtIGxpc3RlbnMgdG8gZmlsZSBtb2RpZmljYXRpb25zIGFu
ZCBub3RpZmllcyB5b3UgYWJvdXQgdGhlIGNoYW5nZXMuCiogW1JlcnVuXSho
dHRwczovL2dpdGh1Yi5jb20vYWxleGNoL3JlcnVuKSAtIFJlc3RhcnRzIGFu
IGFwcCB3aGVuIHRoZSBmaWxlc3lzdGVtIGNoYW5nZXMuIFVzZXMgZ3Jvd2wg
YW5kIEZTRXZlbnRTdHJlYW0gaWYgb24gT1MgWC4KCiMjIEZvcm0gQnVpbGRl
cgoKKiBbQWJyYWNhZGFicmFdKGh0dHBzOi8vZ2l0aHViLmNvbS9UcmV2b3JI
aW5lc2xleS9hYnJhY2FkYWJyYSkgLSBUaGUgZ2VtIHRoYXQgc3dhcHMgb3V0
IHRleHQgd2l0aCBhIGZ1bGx5LWNvbXBsaWFudCBSYWlscyBmb3JtIGluIG9u
ZSBjbGljay4KKiBbQ29jb29uXShodHRwczovL2dpdGh1Yi5jb20vbmF0aGFu
dmRhL2NvY29vbikgLSBEeW5hbWljIG5lc3RlZCBmb3JtcyB1c2luZyBqUXVl
cnkgbWFkZSBlYXN5OyB3b3JrcyB3aXRoIGZvcm10YXN0aWMsIHNpbXBsZV9m
b3JtIG9yIGRlZmF1bHQgZm9ybXMuCiogW0Zvcm10YXN0aWNdKGh0dHBzOi8v
Z2l0aHViLmNvbS9qdXN0aW5mcmVuY2gvZm9ybXRhc3RpYykgLSBBIFJhaWxz
IGZvcm0gYnVpbGRlciBwbHVnaW4gd2l0aCBzZW1hbnRpY2FsbHkgcmljaCBh
bmQgYWNjZXNzaWJsZSBtYXJrdXAuCiogW1JhaWxzIEJvb3RzdHJhcCBGb3Jt
c10oaHR0cHM6Ly9naXRodWIuY29tL2Jvb3RzdHJhcC1ydWJ5L3JhaWxzLWJv
b3RzdHJhcC1mb3JtcykgLSBSYWlscyBmb3JtIGJ1aWxkZXIgdGhhdCBtYWtl
cyBpdCBzdXBlciBlYXN5IHRvIGNyZWF0ZSBiZWF1dGlmdWwtbG9va2luZyBm
b3JtcyB3aXRoIFR3aXR0ZXIgQm9vdHN0cmFwIDMrLgoqIFtSZWZvcm1dKGh0
dHBzOi8vZ2l0aHViLmNvbS9hcG90b25pY2svcmVmb3JtKSAtIEdpdmVzIHlv
dSBhIGZvcm0gb2JqZWN0IHdpdGggdmFsaWRhdGlvbnMgYW5kIG5lc3RlZCBz
ZXR1cCBvZiBtb2RlbHMuIEl0IGlzIGNvbXBsZXRlbHkgZnJhbWV3b3JrLWFn
bm9zdGljIGFuZCBkb2Vzbid0IGNhcmUgYWJvdXQgeW91ciBkYXRhYmFzZS4K
KiBbU2ltcGxlIEZvcm1dKGh0dHBzOi8vZ2l0aHViLmNvbS9wbGF0YWZvcm1h
dGVjL3NpbXBsZV9mb3JtKSAtIFJhaWxzIGZvcm1zIG1hZGUgZWFzeS4KCiMj
IEdhbWUgRGV2ZWxvcG1lbnQKCiogW0dvc3VdKGh0dHA6Ly93d3cubGliZ29z
dS5vcmcpIC0gQSAyRCBnYW1lIGRldmVsb3BtZW50IGxpYnJhcnkgZm9yIHRo
ZSBSdWJ5IGFuZCBDKysgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2VzLgoqIFtZZWFo
XShodHRwczovL2dpdGh1Yi5jb20veWVhaHJiL3llYWgpIC0gUHJhY3RpY2Fs
IFJ1YnkgdmlkZW8gZ2FtZSBmcmFtZXdvcmsuCgojIyBHZW0gR2VuZXJhdG9y
cwoKKiBbR2Vtc21pdGhdKGh0dHBzOi8vZ2l0aHViLmNvbS9ia3VobG1hbm4v
Z2Vtc21pdGgpIC0gQSBjb21tYW5kIGxpbmUgaW50ZXJmYWNlIGZvciBzbWl0
aGluZyBuZXcgUnVieSBnZW1zLgoqIFtIb2VdKGh0dHA6Ly93d3cuemVuc3Bp
ZGVyLmNvbS9wcm9qZWN0cy9ob2UuaHRtbCkgLSBIb2UgaXMgYSBSYWtlL1J1
YnlHZW1zIGhlbHBlciBmb3IgcHJvamVjdCBSYWtlZmlsZXMuCgojIyBHZW9s
b2NhdGlvbgoKKiBbR2VvY29kZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGV4
cmVpc25lci9nZW9jb2RlcikgLSBBIGNvbXBsZXRlIGdlb2NvZGluZyBzb2x1
dGlvbiBmb3IgUnVieS4gV2l0aCBSYWlscyBpdCBhZGRzIGdlb2NvZGluZyAo
Ynkgc3RyZWV0IG9yIElQIGFkZHJlc3MpLCByZXZlcnNlIGdlb2NvZGluZyAo
ZmluZCBzdHJlZXQgYWRkcmVzcyBiYXNlZCBvbiBnaXZlbiBjb29yZGluYXRl
cyksIGFuZCBkaXN0YW5jZSBxdWVyaWVzLgoqIFtnZW9pcF0oaHR0cHM6Ly9n
aXRodWIuY29tL2NqaGVhdGgvZ2VvaXApIC0gU2VhcmNoZXMgYSBHZW9JUCBk
YXRhYmFzZSBmb3IgYSBnaXZlbiBob3N0IG9yIElQIGFkZHJlc3MsIGFuZCBy
ZXR1cm5zIGluZm9ybWF0aW9uIGFib3V0IHRoZSBjb3VudHJ5IHdoZXJlIHRo
ZSBJUCBhZGRyZXNzIGlzIGFsbG9jYXRlZCwgYW5kIHRoZSBjaXR5LCBJU1Ag
YW5kIG90aGVyIGluZm9ybWF0aW9uLgoqIFtHZW9raXRdKGh0dHBzOi8vZ2l0
aHViLmNvbS9nZW9raXQvZ2Vva2l0KSAtIEdlb2tpdCBnZW0gcHJvdmlkZXMg
Z2VvY29kaW5nIGFuZCBkaXN0YW5jZS9oZWFkaW5nIGNhbGN1bGF0aW9ucy4K
KiBbR29vZ2xlIE1hcHMgZm9yIFJhaWxzXShodHRwczovL2dpdGh1Yi5jb20v
YXBuZWFkaXZpbmcvR29vZ2xlLU1hcHMtZm9yLVJhaWxzKSAtIEVuYWJsZXMg
ZWFzeSBHb29nbGUgbWFwICsgb3ZlcmxheXMgY3JlYXRpb24gaW4gUnVieSBh
cHBzLgoqIFtyZ2VvXShodHRwczovL2dpdGh1Yi5jb20vcmdlby9yZ2VvKSAt
IEdlb3NwYXRpYWwgZGF0YSBsaWJyYXJ5LiBTcGF0aWFsIGRhdGEgdHlwZXMs
IGdlb21ldHJpYyBhbmQgc3BoZXJpY2FsIGNhbGN1bGF0aW9ucywgYW5kIFdL
VC9XS0Igc2VyaWFsaXphdGlvbi4KCiMjIEdpdCBUb29scwoKKiBbZ2luYXRy
YV0oaHR0cHM6Ly9naXRodWIuY29tL05BUktPWi9naW5hdHJhKSAtIEEgd2Vi
IGZyb250ZW5kIGZvciBHaXQgcmVwb3NpdG9yaWVzLgoqIFtnaXQtYXV0by1i
aXNlY3RdKGh0dHBzOi8vZ2l0aHViLmNvbS9ncm9zc2VyL2dpdC1hdXRvYmlz
ZWN0KSAtIEZpbmQgdGhlIGNvbW1pdCB0aGF0IGJyb2tlIG1hc3Rlci4KKiBb
Z2l0X3JlZmxvd10oaHR0cHM6Ly9naXRodWIuY29tL3JlZW5oYW5jZWQvZ2l0
cmVmbG93KSAtIEFuIGF1dG9tYXRlZCBxdWFsaXR5IGNvbnRyb2wgd29ya2Zs
b3cgZm9yIEFnaWxlIHRlYW1zLgoqIFtnaXQtc3BlbHVua10oaHR0cHM6Ly9n
aXRodWIuY29tL29zaGVyb2ZmL2dpdC1zcGVsdW5rKSAtIERpZyB0aHJvdWdo
IGdpdCBibGFtZSBoaXN0b3J5LgoqIFtnaXQtdXBdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9hYW5hbmQvZ2l0LXVwKSAtIEZldGNoIGFuZCByZWJhc2UgYWxsIGxv
Y2FsbHktdHJhY2tlZCByZW1vdGUgYnJhbmNoZXMuCiogW2dpdC13aGVuY2Vd
KGh0dHBzOi8vZ2l0aHViLmNvbS9ncm9zc2VyL2dpdC13aGVuY2UpIC0gRmlu
ZCB3aGljaCBtZXJnZSBhIGNvbW1pdCBjYW1lIGZyb20uCiogW0dpdCBDb3Bd
KGh0dHBzOi8vZ2l0aHViLmNvbS9ia3VobG1hbm4vZ2l0LWNvcCkgLSBFbmZv
cmNlcyBjb25zaXN0ZW50IEdpdCBjb21taXRzLgoqIFtPdmVyY29tbWl0XSho
dHRwczovL2dpdGh1Yi5jb20vYnJpZ2FkZS9vdmVyY29tbWl0KSAtIEEgZnVs
bHkgY29uZmlndXJhYmxlIGFuZCBleHRlbmRhYmxlIEdpdCBob29rIG1hbmFn
ZXIuCiogW1J1Z2dlZF0oaHR0cHM6Ly9naXRodWIuY29tL2xpYmdpdDIvcnVn
Z2VkKSAtIFJ1YnkgYmluZGluZ3MgdG8gbGliZ2l0Mi4KCiMjIEdyYXBoUUwK
CiogW2dyYXBocWwtYmF0Y2hdKGh0dHBzOi8vZ2l0aHViLmNvbS9TaG9waWZ5
L2dyYXBocWwtYmF0Y2gpIOKAkyBBIHF1ZXJ5IGJhdGNoaW5nIGV4ZWN1dG9y
LgoqIFtncmFwaHFsLWNsaWVudF0oaHR0cHM6Ly9naXRodWIuY29tL2dpdGh1
Yi9ncmFwaHFsLWNsaWVudCkgLSBBIGxpYnJhcnkgZm9yIGRlY2xhcmluZywg
Y29tcG9zaW5nIGFuZCBleGVjdXRpbmcgR3JhcGhRTCBxdWVyaWVzLgoqIFtn
cmFwaHFsLWd1YXJkXShodHRwczovL2dpdGh1Yi5jb20vZXhBc3BBcmsvZ3Jh
cGhxbC1ndWFyZCkgLSBBIHNpbXBsZSBmaWVsZC1sZXZlbCBhdXRob3JpemF0
aW9uLgoqIFtncmFwaHFsLXJ1YnldKGh0dHBzOi8vZ2l0aHViLmNvbS9ybW9z
b2xnby9ncmFwaHFsLXJ1YnkpIC0gUnVieSBpbXBsZW1lbnRhdGlvbiBvZiBH
cmFwaFFMLgoKIyMgR1VJCgoqIFtxdGJpbmRpbmdzXShodHRwczovL2dpdGh1
Yi5jb20vcnlhbm1lbHQvcXRiaW5kaW5ncykgLSBBbGxvd3MgdGhlIFFUIEd1
aSB0b29sa2l0IHRvIGJlIHVzZWQgZnJvbSBSdWJ5LgoqIFtSdWJ5R25vbWUy
XShodHRwOi8vcnVieS1nbm9tZTIuc291cmNlZm9yZ2UuanAvKSAtIFJ1Ynkg
bGFuZ3VhZ2UgYmluZGluZ3MgZm9yIHRoZSBHTk9NRSAyLjAgZGV2ZWxvcG1l
bnQgZW52aXJvbm1lbnQuCiogW1Nob2VzXShodHRwOi8vc2hvZXNyYi5jb20p
IC0gU2hvZXMgbWFrZXMgYnVpbGRpbmcgbGl0dGxlIGdyYXBoaWNhbCBwcm9n
cmFtcyBmb3IgTWFjLCBXaW5kb3dzLCBhbmQgTGludXggc3VwZXIgc2ltcGxl
LgoKIyMgSFRNTC9YTUwgUGFyc2luZwoKKiBbSGFwcHlNYXBwZXJdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9kYW01cy9oYXBweW1hcHBlcikgLSBPYmplY3QgdG8g
WE1MIG1hcHBpbmcgbGlicmFyeSwgdXNpbmcgTm9rb2dpcmkuCiogW0hUTUw6
OlBpcGVsaW5lXShodHRwczovL2dpdGh1Yi5jb20vamNoL2h0bWwtcGlwZWxp
bmUpIC0gSFRNTCBwcm9jZXNzaW5nIGZpbHRlcnMgYW5kIHV0aWxpdGllcy4K
KiBbTm9rb2dpcmldKGh0dHBzOi8vbm9rb2dpcmkub3JnKSAtIEFuIEhUTUws
IFhNTCwgU0FYLCBhbmQgUmVhZGVyIHBhcnNlciB3aXRoIFhQYXRoIGFuZCBD
U1Mgc2VsZWN0b3Igc3VwcG9ydC4KKiBbT2dhXShodHRwczovL2dpdGxhYi5j
b20veW9yaWNrcGV0ZXJzZS9vZ2EpIC0gQW4gWE1ML0hUTUwgcGFyc2VyIHdy
aXR0ZW4gaW4gUnVieS4gT2dhIGRvZXMgbm90IHJlcXVpcmUgc3lzdGVtIGxp
YnJhcmllcyBzdWNoIGFzIGxpYnhtbCwgbWFraW5nIGl0IGVhc2llciBhbmQg
ZmFzdGVyIHRvIGluc3RhbGwgb24gdmFyaW91cyBwbGF0Zm9ybXMuCiogW094
XShodHRwczovL2dpdGh1Yi5jb20vb2hsZXI1NS9veCkgLSBBIGZhc3QgWE1M
IHBhcnNlciBhbmQgT2JqZWN0IG1hcnNoYWxsZXIuCiogW1JPWE1MXShodHRw
czovL2dpdGh1Yi5jb20vRW1wYWN0L3JveG1sKSAtIEN1c3RvbSBtYXBwaW5n
IGFuZCBiaWRpcmVjdGlvbmFsIG1hcnNoYWxsaW5nIGJldHdlZW4gUnVieSBh
bmQgWE1MIHVzaW5nIGFubm90YXRpb24tc3R5bGUgY2xhc3MgbWV0aG9kcywg
dmlhIE5va29naXJpIG9yIExpYlhNTC4KCiMjIEhUVFAgQ2xpZW50cyBhbmQg
dG9vbHMKCiogW2V4Y29uXShodHRwczovL2dpdGh1Yi5jb20vZXhjb24vZXhj
b24pIC0gVXNhYmxlLCBmYXN0LCBzaW1wbGUgUnVieSBIVFRQIDEuMS4gSXQg
d29ya3MgZ3JlYXQgYXMgYSBnZW5lcmFsIEhUVFAocykgY2xpZW50IGFuZCBp
cyBwYXJ0aWN1bGFybHkgd2VsbCBzdWl0ZWQgdG8gdXNhZ2UgaW4gQVBJIGNs
aWVudHMuCiogW0ZhcmFkYXldKGh0dHBzOi8vZ2l0aHViLmNvbS9sb3N0aXNs
YW5kL2ZhcmFkYXkpIC0gYW4gSFRUUCBjbGllbnQgbGliIHRoYXQgcHJvdmlk
ZXMgYSBjb21tb24gaW50ZXJmYWNlIG92ZXIgbWFueSBhZGFwdGVycyAoc3Vj
aCBhcyBOZXQ6OkhUVFApIGFuZCBlbWJyYWNlcyB0aGUgY29uY2VwdCBvZiBS
YWNrIG1pZGRsZXdhcmUgd2hlbiBwcm9jZXNzaW5nIHRoZSByZXF1ZXN0L3Jl
c3BvbnNlIGN5Y2xlLgoqIFtEZXZpY2UgRGV0ZWN0b3JdKGh0dHBzOi8vZ2l0
aHViLmNvbS9wb2RpZ2VlL2RldmljZV9kZXRlY3RvcikgLSBBIHByZWNpc2Ug
YW5kIGZhc3QgdXNlciBhZ2VudCBwYXJzZXIgYW5kIGRldmljZSBkZXRlY3Rv
ciwgYmFja2VkIGJ5IHRoZSBsYXJnZXN0IGFuZCBtb3N0IHVwLXRvLWRhdGUg
dXNlciBhZ2VudCBkYXRhYmFzZS4KKiBbSHR0cCBDbGllbnRdKGh0dHBzOi8v
Z2l0aHViLmNvbS9uYWhpL2h0dHBjbGllbnQpIC0gR2l2ZXMgc29tZXRoaW5n
IGxpa2UgdGhlIGZ1bmN0aW9uYWxpdHkgb2YgbGlid3d3LXBlcmwgKExXUCkg
aW4gUnVieS4KKiBbSFRUUF0oaHR0cHM6Ly9naXRodWIuY29tL2h0dHByYi9o
dHRwKSAtIFRoZSBIVFRQIEdlbTogYSBzaW1wbGUgUnVieSBEU0wgZm9yIG1h
a2luZyBIVFRQIHJlcXVlc3RzLgoqIFtIVFRQWF0oaHR0cHM6Ly9naXRsYWIu
Y29tL2hvbmV5cnlkZXJjaHVjay9odHRweCkgLSBhY2tub3dsZWRnZXMgdGhl
IGVhc2Utb2YtdXNlIG9mIHRoZSBbaHR0cF0oaHR0cHM6Ly9naXRodWIuY29t
L2h0dHByYi9odHRwKSBnZW0gQVBJIChpdHNlbGYgaW5zcGlyZWQgYnkgcHl0
aG9uIHJlcXVlc3RzIGxpYnJhcnkpIHdoaWNoIGFpbXMgYXQgcmV1c2luZyB0
aGUgc2FtZSBmYWNhZGUsIGV4dGVuZGluZyBpdCBmb3IgdGhlIHVzZSBjYXNl
cyB3aGljaCB0aGUgaHR0cCBnZW0gZG9lc24ndCBzdXBwb3J0LgoqIFtodHRw
YXJ0eV0oaHR0cHM6Ly9naXRodWIuY29tL2pudW5lbWFrZXIvaHR0cGFydHkp
IC0gTWFrZXMgaHR0cCBmdW4gYWdhaW4hCiogW0h0dHAtMl0oaHR0cHM6Ly9n
aXRodWIuY29tL2lncmlnb3Jpay9odHRwLTIpIC0gUHVyZSBSdWJ5IGltcGxl
bWVudGF0aW9uIG9mIEhUVFAvMiBwcm90b2NvbAoqIFtQYXRyb25dKGh0dHBz
Oi8vZ2l0aHViLmNvbS90b2xhbmQvcGF0cm9uKSAtIFBhdHJvbiBpcyBhIFJ1
YnkgSFRUUCBjbGllbnQgbGlicmFyeSBiYXNlZCBvbiBsaWJjdXJsLgoqIFtS
RVNUQ2xpZW50XShodHRwczovL2dpdGh1Yi5jb20vcmVzdC1jbGllbnQvcmVz
dC1jbGllbnQpIC0gU2ltcGxlIEhUVFAgYW5kIFJFU1QgY2xpZW50IGZvciBS
dWJ5LCBpbnNwaXJlZCBieSBtaWNyb2ZyYW1ld29yayBzeW50YXggZm9yIHNw
ZWNpZnlpbmcgYWN0aW9ucy4KKiBbU2F2b25dKGh0dHBzOi8vZ2l0aHViLmNv
bS9zYXZvbnJiL3Nhdm9uKSAtIFNhdm9uIGlzIGEgU09BUCBjbGllbnQgZm9y
IHRoZSBSdWJ5IHByb2dyYW1taW5nIGxhbmd1YWdlLgoqIFtTYXd5ZXJdKGh0
dHBzOi8vZ2l0aHViLmNvbS9sb3N0aXNsYW5kL3Nhd3llcikgLSBTZWNyZXQg
dXNlciBhZ2VudCBvZiBIVFRQLCBidWlsdCBvbiB0b3Agb2YgRmFyYWRheS4K
KiBbU25pZmZlcl0oaHR0cHM6Ly9naXRodWIuY29tL2FkZXJ5YWJpbi9zbmlm
ZmVyKSDigJMgVG9vbCB0byBsb2cgYW5kIGRlYnVnIG91dGdvaW5nIEhUVFAg
cmVxdWVzdHMgYWNyb3NzIG11bHRpcGxlIHJ1YnkgbGlicmFyaWVzLgoqIFtU
eXBob2V1c10oaHR0cHM6Ly9naXRodWIuY29tL3R5cGhvZXVzL3R5cGhvZXVz
KSAtIFR5cGhvZXVzIHdyYXBzIGxpYmN1cmwgaW4gb3JkZXIgdG8gbWFrZSBm
YXN0IGFuZCByZWxpYWJsZSByZXF1ZXN0cy4KCiMjIEltYWdlIFByb2Nlc3Np
bmcKCiogW01pbmlNYWdpY2tdKGh0dHBzOi8vZ2l0aHViLmNvbS9taW5pbWFn
aWNrL21pbmltYWdpY2spIC0gQSBydWJ5IHdyYXBwZXIgZm9yIEltYWdlTWFn
aWNrIG9yIEdyYXBoaWNzTWFnaWNrIGNvbW1hbmQgbGluZS4KKiBbUGhhc2lv
bl0oaHR0cHM6Ly9naXRodWIuY29tL3dlc3RvbnBsYXR0ZXIvcGhhc2hpb24p
IC0gUnVieSB3cmFwcGVyIGFyb3VuZCBwSGFzaCwgdGhlIHBlcmNlcHR1YWwg
aGFzaCBsaWJyYXJ5IGZvciBkZXRlY3RpbmcgZHVwbGljYXRlIG11bHRpbWVk
aWEgZmlsZXMuCiogW1BTRC5yYl0oaHR0cHM6Ly9naXRodWIuY29tL2xheWVy
dmF1bHQvcHNkLnJiKSAtIFBhcnNlIFBob3Rvc2hvcCBmaWxlcyBpbiBSdWJ5
IHdpdGggZWFzZS4KKiBbUk1hZ2lja10oaHR0cHM6Ly9naXRodWIuY29tL3Jt
YWdpY2svcm1hZ2ljaykgLSBSTWFnaWNrIGlzIGFuIGludGVyZmFjZSBiZXR3
ZWVuIFJ1YnkgYW5kIEltYWdlTWFnaWNrLgoqIFtydWJ5LXZpcHNdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9qY3VwaXR0L3J1YnktdmlwcykgLSBBIGJpbmRpbmcg
Zm9yIHRoZSBsaWJ2aXBzIGltYWdlIHByb2Nlc3NpbmcgbGlicmFyeS4KKiBb
U2tlcHRpY2tdKGh0dHBzOi8vZ2l0aHViLmNvbS9tYXhpbS9za2VwdGljaykg
LSBTa2VwdGljayBpcyBhbiBhbGwtcHVycG9zZSBEU0wgZm9yIGJ1aWxkaW5n
IGFuZCBydW5uaW5nIEltYWdlTWFnaWNrIGNvbW1hbmRzLgoKIyMgSW1wbGVt
ZW50YXRpb25zL0NvbXBpbGVycwoKKiBbSlJ1YnldKGh0dHBzOi8vZ2l0aHVi
LmNvbS9qcnVieS9qcnVieSkgLSBBIEphdmEgaW1wbGVtZW50YXRpb24gb2Yg
dGhlIFJ1YnkgbGFuZ3VhZ2UuCiogW01SdWJ5XShodHRwczovL2dpdGh1Yi5j
b20vbXJ1YnkvbXJ1YnkpIC0gTGlnaHR3ZWlnaHQgUnVieS4gQ2FuIGJlIGxp
bmtlZCBhbmQgZW1iZWRkZWQgaW4geW91ciBhcHBsaWNhdGlvbi4KKiBbT3Bh
bF0oaHR0cHM6Ly9naXRodWIuY29tL29wYWwvb3BhbCkgLSBSdWJ5IHRvIEph
dmFzY3JpcHQgY29tcGlsZXIuCiogW1J1YmluaXVzXShodHRwczovL2dpdGh1
Yi5jb20vcnViaW5pdXMvcnViaW5pdXMpIC0gQW4gaW1wbGVtZW50YXRpb24g
b2YgdGhlIFJ1YnkgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2UuIFJ1YmluaXVzIGlu
Y2x1ZGVzIGEgYnl0ZWNvZGUgdmlydHVhbCBtYWNoaW5lLCBSdWJ5IHN5bnRh
eCBwYXJzZXIsIGJ5dGVjb2RlIGNvbXBpbGVyLCBnZW5lcmF0aW9uYWwgZ2Fy
YmFnZSBjb2xsZWN0b3IsIGp1c3QtaW4tdGltZSAoSklUKSBuYXRpdmUgbWFj
aGluZSBjb2RlIGNvbXBpbGVyLCBhbmQgUnVieSBDb3JlIGFuZCBTdGFuZGFy
ZCBsaWJyYXJpZXMuCiogW1RydWZmbGVSdWJ5XShodHRwczovL2dpdGh1Yi5j
b20vb3JhY2xlL3RydWZmbGVydWJ5KSAtIEEgaGlnaCBwZXJmb3JtYW5jZSBp
bXBsZW1lbnRhdGlvbiBvZiB0aGUgUnVieSBwcm9ncmFtbWluZyBsYW5ndWFn
ZS4gQnVpbHQgb24gdGhlIEdyYWFsVk0gYnkgT3JhY2xlIExhYnMuCgojIyBJ
bnRlcm5hdGlvbmFsaXphdGlvbgoKKiBbRmFzdEdldHRleHRdKGh0dHBzOi8v
Z2l0aHViLmNvbS9ncm9zc2VyL2Zhc3RfZ2V0dGV4dCkgLSBSdWJ5IGludGVy
bmF0aW9uYWxpemF0aW9uIHRvb2wgd2l0aCBsZXNzIG1lbW9yeSwgc2ltcGxl
LCBjbGVhbiBuYW1lc3BhY2UgYW5kIHRocmVhZHNhZmUuCiogW0dsb2JhbGl6
ZV0oaHR0cHM6Ly9naXRodWIuY29tL2dsb2JhbGl6ZS9nbG9iYWxpemUpIC0g
R2xvYmFsaXplIGJ1aWxkcyBvbiB0aGUgSTE4biBBUEkgaW4gUnVieSBvbiBS
YWlscyB0byBhZGQgbW9kZWwgdHJhbnNsYXRpb25zIHRvIEFjdGl2ZVJlY29y
ZCBtb2RlbHMuCiogW2kxOG4tdGFza3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9n
bGVibS9pMThuLXRhc2tzKSAtIE1hbmFnZSBtaXNzaW5nIGFuZCB1bnVzZWQg
dHJhbnNsYXRpb25zIHdpdGggdGhlIGF3ZXNvbWUgcG93ZXIgb2Ygc3RhdGlj
IGFuYWx5c2lzLgoqIFtpMThuXShodHRwczovL2dpdGh1Yi5jb20vc3ZlbmZ1
Y2hzL2kxOG4pIC0gUnVieSBJbnRlcm5hdGlvbmFsaXphdGlvbiBhbmQgbG9j
YWxpemF0aW9uIHNvbHV0aW9uLgoqIFtyYWlscy1pMThuXShodHRwczovL2dp
dGh1Yi5jb20vc3ZlbmZ1Y2hzL3JhaWxzLWkxOG4pIC0gUmVwb3NpdG9yeSBm
b3IgY29sbGVjdGluZyBMb2NhbGUgZGF0YSBmb3IgUmFpbHMgSTE4biBhcyB3
ZWxsIGFzIG90aGVyIGludGVyZXN0aW5nLCBSYWlscyByZWxhdGVkIEkxOG4g
c3R1ZmYuCiogW3IxOG5dKGh0dHBzOi8vZ2l0aHViLmNvbS9haS9yMThuKSAt
IEFkdmFuY2VkIGkxOG4gbGlicmFyeSBmb3IgUmFpbHMsIFNpbmF0cmEsIGRl
c2t0b3AgYXBwcywgbW9kZWxzLCB3b3JrcyB3ZWxsIHdpdGggY29tcGxleCBs
YW5ndWFnZXMgbGlrZSBSdXNzaWFuLgoqIFtUZXJtaXRdKGh0dHBzOi8vZ2l0
aHViLmNvbS9wYXd1cmIvdGVybWl0KSAtIFRyYW5zbGF0aW9ucyB3aXRoIHNw
ZWVjaCBzeW50aGVzaXMgaW4geW91ciB0ZXJtaW5hbC4KKiBbVG9sa10oaHR0
cHM6Ly9naXRodWIuY29tL3RvbGsvdG9saykgLSBBIHdlYiBpbnRlcmZhY2Ug
Zm9yIGRvaW5nIGkxOG4gdHJhbnNsYXRpb25zIHBhY2thZ2VkIGFzIGEgUmFp
bHMgZW5naW5lLgoqIFt0d2l0dGVyLWNsZHItcmJdKGh0dHBzOi8vZ2l0aHVi
LmNvbS90d2l0dGVyL3R3aXR0ZXItY2xkci1yYikgLSBSdWJ5IGltcGxlbWVu
dGF0aW9uIG9mIHRoZSBJQ1UgKEludGVybmF0aW9uYWwgQ29tcG9uZW50cyBm
b3IgVW5pY29kZSkgdGhhdCB1c2VzIHRoZSBDb21tb24gTG9jYWxlIERhdGEg
UmVwb3NpdG9yeSB0byBmb3JtYXQgZGF0ZXMsIHBsdXJhbHMsIGFuZCBtb3Jl
LgoKIyMgSVJCCgoqIFtDbGlwYm9hcmRdKGh0dHBzOi8vZ2l0aHViLmNvbS9q
YW5sZWxpcy9jbGlwYm9hcmQpIC0gQWNjZXNzIHRvIHRoZSBzeXN0ZW0gY2xp
cGJvYXJkIG9uIExpbnV4LCBNYWNPUyBhbmQgV2luZG93cy4KKiBbSGlyYl0o
aHR0cHM6Ly9naXRodWIuY29tL2NsZHdhbGtlci9oaXJiKSAtIEEgbWluaSB2
aWV3IGZyYW1ld29yayBmb3IgY29uc29sZS9pcmIgdGhhdCdzIGVhc3kgdG8g
dXNlLCBldmVuIHdoaWxlIHVuZGVyIGl0cyBpbmZsdWVuY2UuIENvbnNvbGUg
Z29vZGllcyBpbmNsdWRlIGEgbm8td3JhcCB0YWJsZSwgYXV0by1wYWdlciwg
dHJlZSBhbmQgbWVudS4KKiBbaXJidG9vbHNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9qYW5sZWxpcy9pcmJ0b29scykgLSBJbXByb3ZlbWVudHMgZm9yIFJ1Ynkn
cyBJUkIuCiogW0xvb2tzZWVdKGh0dHBzOi8vZ2l0aHViLmNvbS9vZ2d5L2xv
b2tzZWUpIC0gQSB0b29sIGZvciBpbGx1c3RyYXRpbmcgdGhlIGFuY2VzdHJ5
IGFuZCBtZXRob2QgbG9va3VwIHBhdGggb2Ygb2JqZWN0cy4gSGFuZHkgZm9y
IGV4cGxvcmluZyB1bmZhbWlsaWFyIGNvZGViYXNlcy4KKiBbUHJ5XShodHRw
czovL2dpdGh1Yi5jb20vcHJ5L3ByeSkgLSBBIHBvd2VyZnVsIGFsdGVybmF0
aXZlIHRvIHRoZSBzdGFuZGFyZCBJUkIgc2hlbGwgZm9yIFJ1YnkuCiogW3Jp
Yl0oaHR0cDovL3JpYi5nb2RmYXQub3JnKSAtIEEgbGlnaHR3ZWlnaHQgYW5k
IGV4dGVuc2libGUgSVJCIHJlcGxhY2VtZW50LgoKIyMgTG9nZ2luZwoKKiBb
Q2FiaW5dKGh0dHBzOi8vZ2l0aHViLmNvbS9qb3JkYW5zaXNzZWwvcnVieS1j
YWJpbikgLSBTdHJ1Y3R1cmVkK2NvbnRleHR1YWwgbG9nZ2luZyBleHBlcmlt
ZW50cyBpbiBSdWJ5LgoqIFtGbHVlbnRkXShodHRwczovL2dpdGh1Yi5jb20v
Zmx1ZW50L2ZsdWVudGQpIC0gRmx1ZW50ZCBjb2xsZWN0cyBldmVudHMgZnJv
bSB2YXJpb3VzIGRhdGEgc291cmNlcyBhbmQgd3JpdGVzIHRoZW0gdG8gZmls
ZXMsIGRhdGFiYXNlIG9yIG90aGVyIHR5cGVzIG9mIHN0b3JhZ2VzLgoqIFtI
dHRwTG9nXShodHRwczovL2dpdGh1Yi5jb20vdHJ1c2NoZS9odHRwbG9nKSAt
IExvZyBvdXRnb2luZyBIVFRQIHJlcXVlc3RzLgoqIFtMb2c0cl0oaHR0cHM6
Ly9naXRodWIuY29tL2NvbGJ5Z2svbG9nNHIpIC0gTG9nNHIgaXMgYSBjb21w
cmVoZW5zaXZlIGFuZCBmbGV4aWJsZSBsb2dnaW5nIGxpYnJhcnkgZm9yIHVz
ZSBpbiBSdWJ5IHByb2dyYW1zLgoqIFtMb2dnaW5nXShodHRwczovL2dpdGh1
Yi5jb20vVHdQL2xvZ2dpbmcpIC0gQSBmbGV4aWJsZSBsb2dnaW5nIGxpYnJh
cnkgZm9yIHVzZSBpbiBSdWJ5IHByb2dyYW1zIGJhc2VkIG9uIHRoZSBkZXNp
Z24gb2YgSmF2YSdzIGxvZzRqIGxpYnJhcnkuCiogW0xvZ3JhZ2VdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9yb2lkcmFnZS9sb2dyYWdlKSAtIEFuIGF0dGVtcHQg
dG8gdGFtZSBSYWlscycgZGVmYXVsdCBwb2xpY3kgdG8gbG9nIGV2ZXJ5dGhp
bmcuCiogW01vbmdvREIgTG9nZ2VyXShodHRwczovL2dpdGh1Yi5jb20vbGUw
cGFyZC9tb25nb2RiX2xvZ2dlcikgLSBNb25nb0RCIGxvZ2dlciBmb3IgUmFp
bHMuCiogW1Njcm9sbHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9hc2VuY2hpL3Nj
cm9sbHMpIC0gU2ltcGxlIGxvZ2dpbmcuCiogW1NlbWFudGljIExvZ2dlcl0o
aHR0cHM6Ly9yb2NrZXRqb2IuZ2l0aHViLmlvL3NlbWFudGljX2xvZ2dlci8p
IC0gU2NhbGFibGUsIG5leHQgZ2VuZXJhdGlvbiBlbnRlcnByaXNlIGxvZ2dp
bmcgZm9yIFJ1YnkuCiogW1N5c2xvZ2dlcl0oaHR0cHM6Ly9naXRodWIuY29t
L2Nyb2hyL3N5c2xvZ2dlcikgLSBBIGRyb3AtaW4gcmVwbGFjZW1lbnQgZm9y
IHRoZSBzdGFuZGFyZCBMb2dnZXIgUnVieSBsaWJyYXJ5LCB0aGF0IGxvZ3Mg
dG8gdGhlIHN5c2xvZyBpbnN0ZWFkIG9mIGEgbG9nIGZpbGUuCiogW1llbGxd
KGh0dHBzOi8vZ2l0aHViLmNvbS9ydWRpb25yYWlscy95ZWxsKSAtIFlvdXIg
RXh0ZW5zaWJsZSBMb2dnaW5nIExpYnJhcnkuCgojIyBNYWNoaW5lIExlYXJu
aW5nCgoqIFtBSTRSXShodHRwczovL2dpdGh1Yi5jb20vc2VyZ2lvZmllcmVu
cy9haTRyKSAtIEFsZ29yaXRobXMgY292ZXJpbmcgc2V2ZXJhbCBBcnRpZmlj
aWFsIGludGVsbGlnZW5jZSBmaWVsZHMuCiogW0F3ZXNvbWUgTWFjaGluZSBM
ZWFybmluZyB3aXRoIFJ1YnldKGh0dHBzOi8vZ2l0aHViLmNvbS9hcmJveC9t
YWNoaW5lLWxlYXJuaW5nLXdpdGgtcnVieSkgLSBBIEN1cmF0ZWQgTGlzdCBv
ZiBSdWJ5IE1hY2hpbmUgTGVhcm5pbmcgTGlua3MgYW5kIFJlc291cmNlcy4K
KiBbUHJlZGljdGlvbklPIFJ1YnkgU0RLXShodHRwczovL2dpdGh1Yi5jb20v
UHJlZGljdGlvbklPL1ByZWRpY3Rpb25JTy1SdWJ5LVNESykgLSBUaGUgUHJl
ZGljdGlvbklPIFJ1YnkgU0RLIHByb3ZpZGVzIGEgY29udmVuaWVudCBBUEkg
dG8gcXVpY2tseSByZWNvcmQgeW91ciB1c2VycycgYmVoYXZpb3IgYW5kIHJl
dHJpZXZlIHBlcnNvbmFsaXplZCBwcmVkaWN0aW9ucyBmb3IgdGhlbS4KKiBb
cmItbGlic3ZtXShodHRwczovL2dpdGh1Yi5jb20vZmViZWxpbmcvcmItbGli
c3ZtKSAtIFJ1YnkgbGFuZ3VhZ2UgYmluZGluZ3MgZm9yIExJQlNWTS4gU1ZN
IGlzIGEgbWFjaGluZSBsZWFybmluZyBhbmQgY2xhc3NpZmljYXRpb24gYWxn
b3JpdGhtLgoqIFtydWJ5LWZhbm5dKGh0dHBzOi8vZ2l0aHViLmNvbS90YW5n
bGVkcGF0aC9ydWJ5LWZhbm4pIC0gUnVieSBsaWJyYXJ5IGZvciBpbnRlcmZh
Y2luZyB3aXRoIEZBTk4gKEZhc3QgQXJ0aWZpY2lhbCBOZXVyYWwgTmV0d29y
aykuCiogW3J1bWFsZV0oaHR0cHM6Ly9naXRodWIuY29tL3lvc2hva3UvcnVt
YWxlKSAtIEEgbWFjaGluZSBsZWFybmluaWcgbGlicmFyeSB3aXRoIGludGVy
ZmFjZXMgc2ltaWxhciB0byBTY2lraXQtTGVhcm4uCiogW3dla2FdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9wYXVsZ29ldHplL3dla2EtanJ1YnkpIC0gTWFjaGlu
ZSBsZWFybmluZyBhbmQgZGF0YSBtaW5pbmcgYWxnb3JpdGhtcyBmb3IgSlJ1
YnkuCgojIyBNYXJrZG93biBQcm9jZXNzb3JzCgoqIFtrcmFtZG93bl0oaHR0
cHM6Ly9naXRodWIuY29tL2dldHRhbG9uZy9rcmFtZG93bikgLSBLcmFtZG93
biBpcyB5ZXQtYW5vdGhlci1tYXJrZG93bi1wYXJzZXIgYnV0IGZhc3QsIHB1
cmUgUnVieSwgdXNpbmcgYSBzdHJpY3Qgc3ludGF4IGRlZmluaXRpb24gYW5k
IHN1cHBvcnRpbmcgc2V2ZXJhbCBjb21tb24gZXh0ZW5zaW9ucy4KKiBbTWFy
dWt1XShodHRwczovL2dpdGh1Yi5jb20vYmhvbGxpcy9tYXJ1a3UpIC0gQSBw
dXJlLVJ1YnkgTWFya2Rvd24tc3VwZXJzZXQgaW50ZXJwcmV0ZXIuCiogW1Jl
ZGNhcnBldF0oaHR0cHM6Ly9naXRodWIuY29tL3ZtZy9yZWRjYXJwZXQpIC0g
QSBmYXN0LCBzYWZlIGFuZCBleHRlbnNpYmxlIE1hcmtkb3duIHRvIChYKUhU
TUwgcGFyc2VyLgoqIFt3b3JkLXRvLW1hcmtkb3duXShodHRwczovL2dpdGh1
Yi5jb20vYmVuYmFsdGVyL3dvcmQtdG8tbWFya2Rvd24pIC0gR2VtIHRvIGNv
bnZlcnQgTWljcm9zb2Z0IFdvcmQgZG9jdW1lbnRzIHRvIE1hcmtkb3duLgoK
IyMgTWVhc3VyZW1lbnRzCgoqIFtNZWFzdXJlZF0oaHR0cHM6Ly9naXRodWIu
Y29tL1Nob3BpZnkvbWVhc3VyZWQpIC0gV3JhcHBlciBvYmplY3RzIHdoaWNo
IGVuY2Fwc3VsYXRlIG1lYXN1cmVtZW50cyBhbmQgdGhlaXIgYXNzb2NpYXRl
ZCB1bml0cyBpbiBSdWJ5LgoqIFtSdWJ5IFVuaXRzXShodHRwczovL2dpdGh1
Yi5jb20vb2xicmljaC9ydWJ5LXVuaXRzKSAtIFByb3ZpZGVzIGNsYXNzZXMg
YW5kIG1ldGhvZHMgdG8gcGVyZm9ybSB1bml0IG1hdGggYW5kIGNvbnZlcnNp
b25zLgoKIyMgTW9iaWxlIERldmVsb3BtZW50CgoqIFtkcnlydW5dKGh0dHBz
Oi8vZ2l0aHViLmNvbS9jZXNhcmZlcnJlaXJhL2RyeXJ1bikgLSBUcnkgYW55
IEFuZHJvaWQgbGlicmFyeSBvbiB5b3VyIHNtYXJ0cGhvbmUgZGlyZWN0bHkg
ZnJvbSB0aGUgY29tbWFuZCBsaW5lLgoqIFtmYXN0bGFuZV0oaHR0cHM6Ly9n
aXRodWIuY29tL2Zhc3RsYW5lL2Zhc3RsYW5lKSAtIENvbm5lY3QgYWxsIGlP
UyBkZXBsb3ltZW50IHRvb2xzIGludG8gb25lIHN0cmVhbWxpbmVkIHdvcmtm
bG93LgoqIFtSdWJvdG9dKGh0dHBzOi8vZ2l0aHViLmNvbS9ydWJvdG8vcnVi
b3RvKSAtIEEgcGxhdGZvcm0gZm9yIGRldmVsb3BpbmcgZnVsbCBzdGFuZC1h
bG9uZSBhcHBzIGZvciBBbmRyb2lkIHVzaW5nIHRoZSBSdWJ5IGxhbmd1YWdl
IGFuZCBsaWJyYXJpZXMuCiogW1J1YnlNb3Rpb25dKGh0dHA6Ly93d3cucnVi
eW1vdGlvbi5jb20pIC0gQSByZXZvbHV0aW9uYXJ5IHRvb2xjaGFpbiB0aGF0
IGxldHMgeW91IHF1aWNrbHkgZGV2ZWxvcCBhbmQgdGVzdCBmdWxsLWZsZWRn
ZWQgbmF0aXZlIGlPUyBhbmQgT1MgWCBhcHBsaWNhdGlvbnMgZm9yIGlQaG9u
ZSwgaVBhZCwgTWFjIGFuZCBBbmRyb2lkLgoqIFtSdWJ5IFB1c2ggTm90aWZp
Y2F0aW9uc10oaHR0cHM6Ly9naXRodWIuY29tL2NhbG9uc28vcnVieS1wdXNo
LW5vdGlmaWNhdGlvbnMpIC0gaU9TLCBBbmRyb2lkIGFuZCBXaW5kb3dzIFBo
b25lIFB1c2ggbm90aWZpY2F0aW9ucyBtYWRlIGVhc3kuCiogW1JwdXNoXSho
dHRwczovL2dpdGh1Yi5jb20vcnB1c2gvcnB1c2gpIC0gVGhlIHB1c2ggbm90
aWZpY2F0aW9uIHNlcnZpY2UgZm9yIFJ1Ynkgd2hpY2ggc3VwcG9ydHMgQXBw
bGUgUHVzaCBOb3RpZmljYXRpb24gU2VydmljZSwgR29vZ2xlIENsb3VkIE1l
c3NhZ2luZywgQW1hem9uIERldmljZSBNZXNzYWdpbmcgYW5kIFdpbmRvd3Mg
UGhvbmUgUHVzaCBOb3RpZmljYXRpb24gU2VydmljZS4KKiBbd2VicHVzaF0o
aHR0cHM6Ly9naXRodWIuY29tL3phcnUvd2VicHVzaCkgLSBFbmNyeXB0aW9u
IFV0aWxpdGllcyBmb3IgV2ViIFB1c2ggcHJvdG9jb2wKCiMjIE1vbmV5Cgoq
IFtldV9jZW50cmFsX2JhbmtdKGh0dHBzOi8vZ2l0aHViLmNvbS9SdWJ5TW9u
ZXkvZXVfY2VudHJhbF9iYW5rKSAtIEEgZ2VtIHRoYXQgY2FsY3VsYXRlcyB0
aGUgZXhjaGFuZ2UgcmF0ZSB1c2luZyBwdWJsaXNoZWQgcmF0ZXMgZnJvbSBF
dXJvcGVhbiBDZW50cmFsIEJhbmsuCiogW01vbmV0aXplXShodHRwczovL2dp
dGh1Yi5jb20vUnVieU1vbmV5L21vbmV0aXplKSAtIEEgbGlicmFyeSBmb3Ig
Y29udmVydGluZyB2YXJpb3VzIG9iamVjdHMgaW50byBNb25leSBvYmplY3Rz
LgoqIFtNb25leV0oaHR0cHM6Ly9naXRodWIuY29tL1J1YnlNb25leS9tb25l
eSkgLSBBIFJ1YnkgTGlicmFyeSBmb3IgZGVhbGluZyB3aXRoIG1vbmV5IGFu
ZCBjdXJyZW5jeSBjb252ZXJzaW9uLgoKIyMgTXVzaWMgYW5kIFNvdW5kCgoq
IFtDb2x0cmFuZV0oaHR0cHM6Ly9naXRodWIuY29tL3BlZHJvemF0aC9jb2x0
cmFuZSkgLSBBIG11c2ljIHRoZW9yeSBsaWJyYXJ5IHdpdGggYSBjb21tYW5k
LWxpbmUgaW50ZXJmYWNlLgoqIFtNYWVzdHJvXShodHRwczovL2dpdGh1Yi5j
b20vc21hc2hpbmdib3hlcy9tYWVzdHJvKSAtIEEgU2xhY2stUG93ZXJlZCBt
dXNpYyBib3QgZm9yIFNwb3RpZnkKKiBbcGxheSDilrpdKGh0dHBzOi8vZ2l0
aHViLmNvbS9wbGF5L3BsYXkpIC0gWW91ciBjb21wYW55J3MgZGouCiogW1Nv
bmljIFBpXShodHRwczovL2dpdGh1Yi5jb20vc2FtYWFyb24vc29uaWMtcGkp
IC0gQSBsaXZlIGNvZGluZyBzeW50aCBmb3IgZXZlcnlvbmUgb3JpZ2luYWxs
eSBkZXNpZ25lZCB0byBzdXBwb3J0IGNvbXB1dGluZyBhbmQgbXVzaWMgbGVz
c29ucy4KCiMjIE5hdHVyYWwgTGFuZ3VhZ2UgUHJvY2Vzc2luZwoKKiBbQXdl
c29tZSBOTFAgd2l0aCBSdWJ5XShodHRwczovL2dpdGh1Yi5jb20vYXJib3gv
bmxwLXdpdGgtcnVieSkgLSBBd2Vzb21lIExpc3QgZm9yIFByYWN0aWNhbCBO
YXR1cmFsIExhbmd1YWdlIFByb2Nlc3NpbmcgZG9uZSBpbiBSdWJ5LgoqIFtQ
YXJzbGV0XShodHRwOi8va3NjaGllc3MuZ2l0aHViLmlvL3BhcnNsZXQvKSAt
IEEgc21hbGwgUnVieSBsaWJyYXJ5IGZvciBjb25zdHJ1Y3RpbmcgcGFyc2Vy
cyBpbiB0aGUgUEVHIChQYXJzaW5nIEV4cHJlc3Npb24gR3JhbW1hcikgZmFz
aGlvbi4KKiBbcG9ja2V0c3BoaW54LXJ1YnldKGh0dHBzOi8vZ2l0aHViLmNv
bS93YXRzb25ib3gvcG9ja2V0c3BoaW54LXJ1YnkpIC0gUnVieSBzcGVlY2gg
cmVjb2duaXRpb24gd2l0aCBQb2NrZXRzcGhpbnguCiogW1ByYWdtYXRpYyBT
ZWdtZW50ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9kaWFza3MyL3ByYWdtYXRp
Y19zZWdtZW50ZXIpIC0gUHJhZ21hdGljIFNlZ21lbnRlciBpcyBhIHJ1bGUt
YmFzZWQgc2VudGVuY2UgYm91bmRhcnkgZGV0ZWN0aW9uIGdlbSB0aGF0IHdv
cmtzIG91dC1vZi10aGUtYm94IGFjcm9zcyBtYW55IGxhbmd1YWdlcy4KKiBb
UnVieSBOYXR1cmFsIExhbmd1YWdlIFByb2Nlc3NpbmcgUmVzb3VyY2VzXSho
dHRwczovL2dpdGh1Yi5jb20vZGlhc2tzMi9ydWJ5LW5scCkgLSBDb2xsZWN0
aW9uIG9mIGxpbmtzIHRvIFJ1YnkgTmF0dXJhbCBMYW5ndWFnZSBQcm9jZXNz
aW5nIChOTFApIGxpYnJhcmllcywgdG9vbHMgYW5kIHNvZnR3YXJlLgoqIFtT
ZW50aW1lbnRhbF0oaHR0cHM6Ly9naXRodWIuY29tLzdjb21wYXNzL3NlbnRp
bWVudGFsKSAtIFNpbXBsZSBzZW50aW1lbnQgYW5hbHlzaXMgd2l0aCBSdWJ5
LgoqIFtUZXh0XShodHRwczovL2dpdGh1Yi5jb20vdGhyZWVkYXltb25rL3Rl
eHQpIC0gQSBjb2xsZWN0aW9uIG9mIHRleHQgYWxnb3JpdGhtcyBpbmNsdWRp
bmcgTGV2ZW5zaHRlaW4gZGlzdGFuY2UsIE1ldGFwaG9uZSwgU291bmRleCAy
LCBQb3J0ZXIgc3RlbW1pbmcgJiBXaGl0ZSBzaW1pbGFyaXR5LgoqIFtUcmVh
dF0oaHR0cHM6Ly9naXRodWIuY29tL2xvdWlzbXVsbGllL3RyZWF0KSAtIFRy
ZWF0IGlzIGEgdG9vbGtpdCBmb3IgbmF0dXJhbCBsYW5ndWFnZSBwcm9jZXNz
aW5nIGFuZCBjb21wdXRhdGlvbmFsIGxpbmd1aXN0aWNzIGluIFJ1YnkuCiog
W1RyZWV0b3BdKGh0dHBzOi8vZ2l0aHViLmNvbS9jamhlYXRoL3RyZWV0b3Ap
IC0gUEVHIChQYXJzaW5nIEV4cHJlc3Npb24gR3JhbW1hcikgcGFyc2VyLgoq
IFtXb3JkcyBDb3VudGVkXShodHRwczovL2dpdGh1Yi5jb20vYWJpdGRvZGd5
L3dvcmRzX2NvdW50ZWQpIC0gQSBoaWdobHkgY3VzdG9taXNhYmxlIFJ1Ynkg
dGV4dCBhbmFseXNlciBhbmQgd29yZCBjb3VudGVyLgoKIyMgTmF2aWdhdGlv
bgoKKiBbYWN0aXZlX2xpbmtfdG9dKGh0dHBzOi8vZ2l0aHViLmNvbS9jb21m
eS9hY3RpdmVfbGlua190bykgLSBWaWV3IGhlbHBlciB0byBtYW5hZ2UgImFj
dGl2ZSIgc3RhdGUgb2YgYSBsaW5rLgoqIFtCcmVhZGNydW1icyBvbiBSYWls
c10oaHR0cHM6Ly9naXRodWIuY29tL3dlcHBvcy9icmVhZGNydW1ic19vbl9y
YWlscykgLSBBIHNpbXBsZSBSdWJ5IG9uIFJhaWxzIHBsdWdpbiBmb3IgY3Jl
YXRpbmcgYW5kIG1hbmFnaW5nIGEgYnJlYWRjcnVtYiBuYXZpZ2F0aW9uIGZv
ciBhIFJhaWxzIHByb2plY3QuCiogW0dyZXRlbF0oaHR0cHM6Ly9naXRodWIu
Y29tL2xhc3NlYnVuay9ncmV0ZWwpIC0gQSBSdWJ5IG9uIFJhaWxzIHBsdWdp
biB0aGF0IG1ha2VzIGl0IGVhc3kgeWV0IGZsZXhpYmxlIHRvIGNyZWF0ZSBi
cmVhZGNydW1icy4KKiBbbG9hZl0oaHR0cHM6Ly9naXRodWIuY29tL3BldGVy
LW11cmFjaC9sb2FmKSAtIE1hbmFnZXMgYW5kIGRpc3BsYXlzIGJyZWFkY3J1
bWIgdHJhaWxzIGluIFJhaWxzIGFwcCAtIGxlYW4gJiBtZWFuLgoqIFtTaW1w
bGUgTmF2aWdhdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL2NvZGVwbGFudC9z
aW1wbGUtbmF2aWdhdGlvbikgLSBBIHJ1YnkgZ2VtIGZvciBjcmVhdGluZyBu
YXZpZ2F0aW9uIChodG1sIGxpc3QsIGxpbmsgbGlzdCBvciBicmVhZGNydW1i
cyB3aXRoIG11bHRpcGxlIGxldmVscykgZm9yIHlvdXIgUmFpbHMgMiwgMyAm
IDQsIFNpbmF0cmEgb3IgUGFkcmluby4KCiMjIE5ldHdvcmtpbmcKCiogW0Ru
c3J1YnldKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGV4ZGFsaXR6L2Ruc3J1Ynkp
IC0gQSBwdXJlIFJ1YnkgRE5TIGNsaWVudCBsaWJyYXJ5IHdoaWNoIGltcGxl
bWVudHMgYSBzdHViIHJlc29sdmVyLiBJdCBhaW1zIHRvIGNvbXBseSB3aXRo
IGFsbCBETlMgUkZDcy4KKiBbUnVieUROU10oaHR0cHM6Ly9naXRodWIuY29t
L2lvcXVhdGl4L3J1YnlkbnMpIC0gQSBoaWdoLXBlcmZvcm1hbmNlIEROUyBz
ZXJ2ZXIgd2hpY2ggY2FuIGJlIGVhc2lseSBpbnRlZ3JhdGVkIGludG8gb3Ro
ZXIgcHJvamVjdHMgb3IgdXNlZCBhcyBhIHN0YW5kLWFsb25lIGRhZW1vbi4K
CiMjIE9wdGltaXphdGlvbnMKCiogW2Jvb3RzbmFwXShodHRwczovL2dpdGh1
Yi5jb20vU2hvcGlmeS9ib290c25hcCkgLSBCb290IGxhcmdlIFJ1YnkvUmFp
bHMgYXBwcyBmYXN0ZXIuCiogW2Zhc3RfYmxhbmtdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9TYW1TYWZmcm9uL2Zhc3RfYmxhbmspIC0gUHJvdmlkZXMgYSBDLW9w
dGltaXplZCBtZXRob2QgZm9yIGRldGVybWluaW5nIGlmIGEgc3RyaW5nIGlz
IGJsYW5rLgoqIFt5YWpsLXJ1YnldKGh0dHBzOi8vZ2l0aHViLmNvbS9icmlh
bm1hcmlvL3lhamwtcnVieSkgLSBBIHN0cmVhbWluZyBKU09OIHBhcnNpbmcg
YW5kIGVuY29kaW5nIGxpYnJhcnkgZm9yIFJ1YnkgKEMgYmluZGluZ3MgdG8g
eWFqbCkuCgojIyBPUk0vT0RNCgoqIFtBY3RpdmVSZWNvcmRdKGh0dHBzOi8v
Z2l0aHViLmNvbS9yYWlscy9yYWlscy90cmVlL21hc3Rlci9hY3RpdmVyZWNv
cmQpIC0gT2JqZWN0LXJlbGF0aW9uYWwgbWFwcGluZyBpbiBSYWlscy4KKiBb
RGF0YU1hcHBlcl0oaHR0cHM6Ly9naXRodWIuY29tL2RhdGFtYXBwZXIvZG0t
Y29yZSkgLSBPUk0gd2hpY2ggd29ya3Mgd2VsbCB3aXRoIGxlZ2FjeSBkYXRh
YmFzZXMuIExhc3QgcmVsZWFzZSAoMS4yLjApIHdhcyBvbiAxMyBPY3RvYmVy
IDIwMTEuCiogW0hhbmFtaTo6TW9kZWxdKGh0dHBzOi8vZ2l0aHViLmNvbS9o
YW5hbWkvbW9kZWwpIC0gQSBsZWFuIFJlcG9zaXRvcnktcGF0dGVybiBiYXNl
ZCBPUk0gZnJhbWV3b3JrIGZvciBIYW5hbWkgYW5kIG1vZGVybiBSdWJ5IGFw
cGxpY2F0aW9ucy4KKiBbTW9uZ29pZF0oaHR0cHM6Ly9naXRodWIuY29tL21v
bmdvZGIvbW9uZ29pZCkgLSBBbiBPRE0gKE9iamVjdC1Eb2N1bWVudC1NYXBw
ZXIpIGZyYW1ld29yayBmb3IgTW9uZ29EQiBpbiBSdWJ5LgoqIFtNb25nb01h
cHBlcl0oaHR0cHM6Ly9naXRodWIuY29tL21vbmdvbWFwcGVyL21vbmdvbWFw
cGVyKSAtIEEgUnVieSBPYmplY3QgTWFwcGVyIGZvciBNb25nby4KKiBbTW9u
Z29Nb2RlbF0oaHR0cHM6Ly9naXRodWIuY29tL3Nwb2hsZW56L21vbmdvbW9k
ZWwpIC0gUnVieSBPRE0gZm9yIGludGVyZmFjaW5nIHdpdGggTW9uZ29EQiBk
YXRhYmFzZXMuCiogW05lbzRqLnJiXShodHRwOi8vbmVvNGpyYi5pbykgLSBB
IE5lbzRqIE9HTSAoT2JqZWN0LUdyYXBoLU1hcHBlcikgZm9yIHVzZSBpbiBS
dWJ5IG9uIFJhaWxzIGFuZCBSYWNrIGZyYW1ld29ya3MgaGVhdmlseSBpbnNw
aXJlZCBieSBBY3RpdmVSZWNvcmQuCiogW05vQnJhaW5lcl0oaHR0cHM6Ly9n
aXRodWIuY29tL252aWVubm90L25vYnJhaW5lci8pIC0gQSBSZXRoaW5rREIg
T1JNIGZvciBSdWJ5CiogW09obV0oaHR0cHM6Ly9naXRodWIuY29tL3NvdmVy
YW4vb2htKSAtIE9iamVjdC1oYXNoIG1hcHBpbmcgbGlicmFyeSBmb3IgUmVk
aXMuCiogW1BlcnBldHVpdHldKGh0dHBzOi8vZ2l0aHViLmNvbS9qZ2Fza2lu
cy9wZXJwZXR1aXR5KSAtIFBlcnNpc3RlbmNlIGdlbSBmb3IgUnVieSBvYmpl
Y3RzIHVzaW5nIHRoZSBEYXRhIE1hcHBlciBwYXR0ZXJuLgoqIFtSZWRpcy1P
YmplY3RzXShodHRwczovL2dpdGh1Yi5jb20vbmF0ZXdhcmUvcmVkaXMtb2Jq
ZWN0cykgLSBSZWRpcyBPYmplY3RzIHByb3ZpZGVzIGEgUnVieWlzaCBpbnRl
cmZhY2UgdG8gUmVkaXMsIGJ5IG1hcHBpbmcgUmVkaXMgZGF0YSB0eXBlcyB0
byBSdWJ5IG9iamVjdHMsIHZpYSBhIHRoaW4gbGF5ZXIgb3ZlciB0aGUgcmVk
aXMgZ2VtLgoqIFtST01dKGh0dHBzOi8vZ2l0aHViLmNvbS9yb20tcmIvcm9t
KSAtIFJ1YnkgT2JqZWN0IE1hcHBlciAoUk9NKSBpcyBhbiBleHBlcmltZW50
YWwgUnVieSBsaWJyYXJ5IHdpdGggdGhlIGdvYWwgdG8gcHJvdmlkZSBwb3dl
cmZ1bCBvYmplY3QgbWFwcGluZyBjYXBhYmlsaXRpZXMgd2l0aG91dCBsaW1p
dGluZyB0aGUgZnVsbCBwb3dlciBvZiB5b3VyIGRhdGFzdG9yZS4KKiBbU2Vx
dWVsXShodHRwczovL2dpdGh1Yi5jb20vamVyZW15ZXZhbnMvc2VxdWVsKSAt
IFNlcXVlbCBpcyBhIHNpbXBsZSwgZmxleGlibGUsIGFuZCBwb3dlcmZ1bCBT
UUwgZGF0YWJhc2UgYWNjZXNzIHRvb2xraXQgZm9yIFJ1YnkuCgojIyBPUk0v
T0RNIEV4dGVuc2lvbnMKCiogQXVkaXRpbmcgYW5kIFZlcnNpb25pbmcKICAq
IFtBY3RzQXNQYXJhbm9pZF0oaHR0cHM6Ly9naXRodWIuY29tL0FjdHNBc1Bh
cmFub2lkL2FjdHNfYXNfcGFyYW5vaWQpIC0gQWN0aXZlUmVjb3JkIHBsdWdp
biBhbGxvd2luZyB5b3UgdG8gaGlkZSBhbmQgcmVzdG9yZSByZWNvcmRzIHdp
dGhvdXQgYWN0dWFsbHkgZGVsZXRpbmcgdGhlbS4KICAqIFtBdWRpdGVkXSho
dHRwczovL2dpdGh1Yi5jb20vY29sbGVjdGl2ZWlkZWEvYXVkaXRlZCkgLSBB
dWRpdGVkIGlzIGFuIE9STSBleHRlbnNpb24gZm9yIEFjdGl2ZVJlY29yZCAm
IE1vbmdvTWFwcGVyIHRoYXQgbG9ncyBhbGwgY2hhbmdlcyB0byB5b3VyIG1v
ZGVscy4KICAqIFtEZXN0cm95ZWQgQXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9k
b2NreWFyZC9ydWJ5LWRlc3Ryb3llZF9hdCkgLSBBbGxvd3MgeW91IHRvICJk
ZXN0cm95IiBhbiBvYmplY3Qgd2l0aG91dCBkZWxldGluZyB0aGUgcmVjb3Jk
IG9yIGFzc29jaWF0ZWQgcmVjb3Jkcy4KICAqIFtEaXNjYXJkXShodHRwczov
L2dpdGh1Yi5jb20vamhhd3Rob3JuL2Rpc2NhcmQpIC0gQSBzaW1wbGUgQWN0
aXZlUmVjb3JkIG1peGluIHRvIGFkZCBjb252ZW50aW9ucyBmb3IgZmxhZ2dp
bmcgcmVjb3JkcyBhcyBkaXNjYXJkZWQuCiAgKiBbRXNwaW5pdGFdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9jb250aW51dW0vZXNwaW5pdGEpIC0gQXVkaXQgYWN0
aXZlcmVjb3JkIG1vZGVscyBsaWtlIGEgYm9zcy4KICAqIFtMb2dpZHplXSho
dHRwczovL2dpdGh1Yi5jb20vcGFsa2FuL2xvZ2lkemUpIC0gRGF0YWJhc2Ug
Y2hhbmdlcyBsb2cgZm9yIFJhaWxzLgogICogW21hcmdpbmFsaWFdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9iYXNlY2FtcC9tYXJnaW5hbGlhKSAtIEF0dGFjaCBj
b21tZW50cyB0byB5b3VyIEFjdGl2ZVJlY29yZCBxdWVyaWVzLiBCeSBkZWZh
dWx0LCBpdCBhZGRzIHRoZSBhcHBsaWNhdGlvbiwgY29udHJvbGxlciwgYW5k
IGFjdGlvbiBuYW1lcyBhcyBhIGNvbW1lbnQgYXQgdGhlIGVuZCBvZiBlYWNo
IHF1ZXJ5LgogICogW21vbmdvaWQtaGlzdG9yeV0oaHR0cHM6Ly9naXRodWIu
Y29tL2FxMTAxOC9tb25nb2lkLWhpc3RvcnkpIC0gTXVsdGktdXNlciBub24t
bGluZWFyIGhpc3RvcnkgdHJhY2tpbmcsIGF1ZGl0aW5nLCB1bmRvLCByZWRv
IGZvciBtb25nb2lkLgogICogW1BhcGVyVHJhaWxdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9haXJibGFkZS9wYXBlcl90cmFpbCkgLSBUcmFjayBjaGFuZ2VzIHRv
IHlvdXIgQWN0aXZlUmVjb3JkIG1vZGVscycgZGF0YSBmb3IgYXVkaXRpbmcg
b3IgdmVyc2lvbmluZy4KICAqIFtQYXJhbm9pYV0oaHR0cHM6Ly9naXRodWIu
Y29tL3JhZGFyL3BhcmFub2lhKSAtIEEgcmUtaW1wbGVtZW50YXRpb24gb2Yg
YWN0c19hc19wYXJhbm9pZCBmb3IgUmFpbHMgMyBhbmQgNCwgdXNpbmcgbXVj
aCwgbXVjaCwgbXVjaCBsZXNzIGNvZGUuCiAgKiBbUGVybWVuYW50UmVjb3Jk
c10oaHR0cHM6Ly9naXRodWIuY29tL0phY2tEYW5nZXIvcGVybWFuZW50X3Jl
Y29yZHMpIC0gU29mdC1kZWxldGUgeW91ciBBY3RpdmVSZWNvcmQgcmVjb3Jk
cywgbGlrZSBhbiBleHBsaWNpdCB2ZXJzaW9uIG9mIEFjdHNBc1BhcmFub2lk
LgoqIEltcG9ydAogICogW0FjdGl2ZUltcG9ydGVyXShodHRwczovL2dpdGh1
Yi5jb20vY29udGludXVtL2FjdGl2ZV9pbXBvcnRlcikgLSBEZWZpbmUgaW1w
b3J0ZXJzIHRoYXQgbG9hZCB0YWJ1bGFyIGRhdGEgZnJvbSBzcHJlYWRzaGVl
dHMgb3IgQ1NWIGZpbGVzIGludG8gYW55IEFjdGl2ZVJlY29yZC1saWtlIE9S
TS4KICAqIFtBY3RpdmVSZWNvcmQgSW1wb3J0XShodHRwczovL2dpdGh1Yi5j
b20vemRlbm5pcy9hY3RpdmVyZWNvcmQtaW1wb3J0KSAtIGEgbGlicmFyeSBm
b3IgYnVsayBpbnNlcnRpbmcgZGF0YSB1c2luZyBBY3RpdmVSZWNvcmQuCiAg
KiBbYnVsa19pbnNlcnRdKGh0dHBzOi8vZ2l0aHViLmNvbS9qYW1pcy9idWxr
X2luc2VydCkgLSBBIGxpdHRsZSBBY3RpdmVSZWNvcmQgZXh0ZW5zaW9uIGZv
ciBoZWxwaW5nIHRvIGluc2VydCBsb3RzIG9mIHJvd3MgaW4gYSBzaW5nbGUg
aW5zZXJ0IHN0YXRlbWVudC4KICAqIFtkYXRhX21pbmVyXShodHRwczovL2dp
dGh1Yi5jb20vc2VhbXVzYWJzaGVyZS9kYXRhX21pbmVyKSAtIERvd25sb2Fk
LCBwdWxsIG91dCBvZiBhIFpJUC9UQVIvR1ovQloyIGFyY2hpdmUsIHBhcnNl
LCBjb3JyZWN0LCBhbmQgaW1wb3J0IFhMUywgT0RTLCBYTUwsIENTViwgSFRN
TCwgZXRjLiBpbnRvIHlvdXIgQWN0aXZlUmVjb3JkIG1vZGVscy4KICAqIFtm
ZXJyeV0oaHR0cHM6Ly9naXRodWIuY29tL2NtdS1pcy1wcm9qZWN0cy9mZXJy
eSkgLSBBIHJ1YnkgZ2VtIGZvciBlYXN5IGRhdGEgdHJhbnNmZXIuCiogTWlz
YwogICogW0FjdGl2ZVJlY29yZDo6VHVybnRhYmxlXShodHRwczovL2dpdGh1
Yi5jb20vZHJlY29tL2FjdGl2ZXJlY29yZC10dXJudGFibGUpIC0gQSBkYXRh
YmFzZSBzaGFyZGluZyBleHRlbnNpb24gZm9yIEFjdGl2ZVJlY29yZC4KICAq
IFtBY3RpdmVWYWxpZGF0b3JzXShodHRwczovL2dpdGh1Yi5jb20vZnJhbmNr
dmVycm90L2FjdGl2ZXZhbGlkYXRvcnMpIC0gQW4gZXhoYXVzdGl2ZSBjb2xs
ZWN0aW9uIG9mIG9mZi10aGUtc2hlbGYgYW5kIHRlc3RlZCBBY3RpdmVNb2Rl
bC9BY3RpdmVSZWNvcmQgdmFsaWRhdGlvbnMuCiAgKiBbRGVlcFBsdWNrXSho
dHRwczovL2dpdGh1Yi5jb20va2hpYXYyMjM1NzcvZGVlcF9wbHVjaykgLSBB
bGxvdyB5b3UgdG8gcGx1Y2sgYXR0cmlidXRlcyBmcm9tIG5lc3RlZCBhc3Nv
Y2lhdGlvbnMgd2l0aG91dCBsb2FkaW5nIGEgYnVuY2ggb2YgcmVjb3Jkcy4K
ICAqIFtFbnVtZXJpemVdKGh0dHBzOi8vZ2l0aHViLmNvbS9icmFpbnNwZWMv
ZW51bWVyaXplKSAtIEVudW1lcmF0ZWQgYXR0cmlidXRlcyB3aXRoIEkxOG4g
YW5kIEFjdGl2ZVJlY29yZC9Nb25nb2lkL01vbmdvTWFwcGVyIHN1cHBvcnQu
CiAgKiBbR29sZGlsb2FkZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9zYWxzaWZ5
L2dvbGRpbG9hZGVyKSAtIEF1dG9tYXRpYyBBY3RpdmVSZWNvcmQgZWFnZXIg
bG9hZGluZy4KICAqIFttaW5pX3JlY29yZF0oaHR0cHM6Ly9naXRodWIuY29t
L0RBZGRZRS9taW5pX3JlY29yZCkgLSBBY3RpdmVSZWNvcmQgbWVldHMgRGF0
YU1hcHBlciwgd2l0aCBNaW5pUmVjb3JkIHlvdSBhcmUgYmUgYWJsZSB0byB3
cml0ZSBzY2hlbWEgaW5zaWRlIHlvdXIgbW9kZWxzLgoqIE11bHRpLXRlbmFu
Y3kKICAqIFtBY3RzIEFzIFRlbm5hbnRdKGh0dHBzOi8vZ2l0aHViLmNvbS9F
cndpbk0vYWN0c19hc190ZW5hbnQpIC0gQWRkIG11bHRpLXRlbmFuY3kgdG8g
YSBSYWlscyBhcHAgdGhyb3VnaCBhIHNoYXJlZCBkYXRhYmFzZSBzdHJhdGVn
eS4KICAqIFtBcGFydG1lbnRdKGh0dHBzOi8vZ2l0aHViLmNvbS9pbmZsdWl0
aXZlL2FwYXJ0bWVudCkgLSBNdWx0aS10ZW5hbmN5IGZvciBSYWlscyBhbmQg
QWN0aXZlUmVjb3JkLgogICogW01pbGlhXShodHRwczovL2dpdGh1Yi5jb20v
amVrdW5vL21pbGlhKSAtIE5vbi1pbnZhc2l2ZSBtdWx0aS10ZW5hbmN5IGZv
ciBSYWlscyB3aGljaCBzdXBwb3J0cyBEZXZpc2UgYXV0aGVudGljYXRpb24g
b3V0IG9mIHRoZSBib3guCiogU29jaWFsCiAgKiBbQWN0cyBBcyBDb21tZW50
YWJsZV0oaHR0cHM6Ly9naXRodWIuY29tL2phY2tkZW1wc2V5L2FjdHNfYXNf
Y29tbWVudGFibGUpIC0gUHJvdmlkZXMgYSBzaW5nbGUgQ29tbWVudCBtb2Rl
bCB0aGF0IGNhbiBiZSBhdHRhY2hlZCB0byBhbnkgbW9kZWwocykgd2l0aGlu
IHlvdXIgYXBwLgogICogW0FjdHMgQXMgQ29tbWVudGFibGUgd2l0aCBUaHJl
YWRpbmddKGh0dHBzOi8vZ2l0aHViLmNvbS9lbGlnaHQvYWN0c19hc19jb21t
ZW50YWJsZV93aXRoX3RocmVhZGluZykgLSBTaW1pbGFyIHRvIGFjdHNfYXNf
Y29tbWVudGFibGU7IGhvd2V2ZXIsIHV0aWxpemVzIGF3ZXNvbWVfbmVzdGVk
X3NldCB0byBwcm92aWRlIHRocmVhZGVkIGNvbW1lbnRzLgogICogW2FjdHNf
YXNfZm9sbG93ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS90Y29jY2EvYWN0c19h
c19mb2xsb3dlcikgLSBBbGxvdyBhbnkgQWN0aXZlUmVjb3JkIG1vZGVsIHRv
IGZvbGxvdyBhbnkgb3RoZXIgbW9kZWwuCiAgKiBbQWN0aXZlUmVjb3JkIFJl
cHV0YXRpb24gU3lzdGVtXShodHRwczovL2dpdGh1Yi5jb20vdHdpdHRlci9h
Y3RpdmVyZWNvcmQtcmVwdXRhdGlvbi1zeXN0ZW0pIC0gQW4gQWN0aXZlIFJl
Y29yZCBSZXB1dGF0aW9uIFN5c3RlbSBmb3IgUmFpbHMuCiAgKiBbQWN0c0Fz
VGFnZ2FibGVPbl0oaHR0cHM6Ly9naXRodWIuY29tL21ibGVpZ2gvYWN0cy1h
cy10YWdnYWJsZS1vbikgLSBBIHRhZ2dpbmcgcGx1Z2luIGZvciBBY3RpdmVS
ZWNvcmQgdGhhdCBhbGxvd3MgZm9yIGN1c3RvbSB0YWdnaW5nIGFsb25nIGR5
bmFtaWMgY29udGV4dHMuCiAgKiBbQWN0cyBBcyBWb3RhYmxlXShodHRwczov
L2dpdGh1Yi5jb20vcnlhbnRvL2FjdHNfYXNfdm90YWJsZSkgLSBBbGxvdyBh
bnkgQWN0aXZlUmVjb3JkIG1vZGVsIHRvIGJlIHZvdGVkIG9uLCBsaWtlL2Rp
c2xpa2UsIHVwdm90ZS9kb3dudm90ZSwgZXRjLgogICogW01lcml0XShodHRw
czovL2dpdGh1Yi5jb20vbWVyaXQtZ2VtL21lcml0KSAtIEFkZHMgcmVwdXRh
dGlvbiBiZWhhdmlvciB0byBSYWlscyBhcHBzIGluIHRoZSBmb3JtIG9mIEJh
ZGdlcywgUG9pbnRzLCBhbmQgUmFua2luZ3MgZm9yIEFjdGl2ZVJlY29yZCBv
ciBNb25nb2lkLgogICogW1B1YmxpY0FjdGl2aXR5XShodHRwczovL2dpdGh1
Yi5jb20vY2hhcHMtaW8vcHVibGljX2FjdGl2aXR5KSAtIFByb3ZpZGVzIGVh
c3kgYWN0aXZpdHkgdHJhY2tpbmcgZm9yIHlvdXIgQWN0aXZlUmVjb3JkLCBN
b25nb2lkIDMgYW5kIE1vbmdvTWFwcGVyIG1vZGVscyBpbiBSYWlscyAzIGFu
ZCA0LiBTaW1pbGFyIHRvIEdpdGh1YidzIFB1YmxpYyBBY3Rpdml0eS4KICAq
IFtTaW1wbGUgRmVlZF0oaHR0cHM6Ly9naXRodWIuY29tL2tpZ3N0ZXIvc2lt
cGxlLWZlZWQpIC0gRmFzdCBhbmQgaGlnaGx5IHNjYWxhYmxlIHJlYWQtb3B0
aW1pemVkIHNvY2lhbCBhY3Rpdml0eSBmZWVkIGxpYnJhcnkgaW4gcHVyZSBS
dWJ5LCBiYWNrZWQgYnkgUmVkaXMuCiAgKiBbVW5yZWFkXShodHRwczovL2dp
dGh1Yi5jb20vbGVkZXJtYW5uL3VucmVhZCkgLSBNYW5hZ2UgcmVhZC91bnJl
YWQgc3RhdHVzIG9mIEFjdGl2ZVJlY29yZCBvYmplY3RzIC0gYW5kIGl0J3Mg
ZmFzdC4KKiBTb3J0aW5nCiAgKiBbQWN0c0FzTGlzdF0oaHR0cHM6Ly9naXRo
dWIuY29tL3N3YW5hbmRwL2FjdHNfYXNfbGlzdCkgLSBQcm92aWRlcyB0aGUg
Y2FwYWJpbGl0aWVzIGZvciBzb3J0aW5nIGFuZCByZW9yZGVyaW5nIGEgbnVt
YmVyIG9mIG9iamVjdHMgaW4gYSBsaXN0LgogICogW3JhbmtlZC1tb2RlbF0o
aHR0cHM6Ly9naXRodWIuY29tL21peG9uaWMvcmFua2VkLW1vZGVsKSAtIEEg
bW9kZXJuIHJvdyBzb3J0aW5nIGxpYnJhcnkgZm9yIEFjdGl2ZVJlY29yZC4g
SXQgdXNlcyBBUmVsIGFnZ3Jlc3NpdmVseSBhbmQgaXMgYmV0dGVyIG9wdGlt
aXplZCB0aGFuIG1vc3Qgb3RoZXIgbGlicmFyaWVzLgoqIFRyZWUKICAqIFtB
Y3RzQXNUcmVlXShodHRwczovL2dpdGh1Yi5jb20vYW1lcmluZS9hY3RzX2Fz
X3RyZWUpIC0gRXh0ZW5kcyBBY3RpdmVSZWNvcmQgdG8gYWRkIHNpbXBsZSBz
dXBwb3J0IGZvciBvcmdhbml6aW5nIGl0ZW1zIGludG8gcGFyZW504oCTY2hp
bGRyZW4gcmVsYXRpb25zaGlwcy4KICAqIFtBbmNlc3RyeV0oaHR0cHM6Ly9n
aXRodWIuY29tL3N0ZWZhbmtyb2VzL2FuY2VzdHJ5KSAtIE9yZ2FuaXNlIEFj
dGl2ZVJlY29yZCBtb2RlbCBpbnRvIGEgdHJlZSBzdHJ1Y3R1cmUgdXNpbmcg
YSB2YXJpYXRpb24gb24gdGhlIG1hdGVyaWFsaXNlZCBwYXRoIHBhdHRlcm4u
CiAgKiBbQXdlc29tZSBOZXN0ZWQgU2V0XShodHRwczovL2dpdGh1Yi5jb20v
Y29sbGVjdGl2ZWlkZWEvYXdlc29tZV9uZXN0ZWRfc2V0KSAtIEF3ZXNvbWUg
TmVzdGVkIFNldCBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgbmVzdGVk
IHNldCBwYXR0ZXJuIGZvciBBY3RpdmVSZWNvcmQgbW9kZWxzLgogICogW0Ns
b3N1cmUgVHJlZV0oaHR0cHM6Ly9naXRodWIuY29tL21jZWFjaGVuL2Nsb3N1
cmVfdHJlZSkgLSBFYXNpbHkgYW5kIGVmZmljaWVudGx5IG1ha2UgeW91ciBB
Y3RpdmVSZWNvcmQgbW9kZWxzIHN1cHBvcnQgaGllcmFyY2hpZXMgdXNpbmcg
YSBDbG9zdXJlIFRhYmxlLgogICogW01vbmdvaWQgVHJlZV0oaHR0cHM6Ly9n
aXRodWIuY29tL2JlbmVkaWt0L21vbmdvaWQtdHJlZSkgLSBBIHRyZWUgc3Ry
dWN0dXJlIGZvciBNb25nb2lkIGRvY3VtZW50cyB1c2luZyB0aGUgbWF0ZXJp
YWxpemVkIHBhdGggcGF0dGVybi4KCiMjIFBhY2thZ2UgTWFuYWdlbWVudAoK
KiBHZW1zCiAgKiBbQnVuZGxlcl0oaHR0cHM6Ly9idW5kbGVyLmlvKSAtIE1h
bmFnZSB5b3VyIGFwcGxpY2F0aW9uJ3MgZ2VtIGRlcGVuZGVuY2llcyB3aXRo
IGxlc3MgcGFpbi4KICAqIFtSdWJ5R2Vtc10oaHR0cHM6Ly9ydWJ5Z2Vtcy5v
cmcpIC0gQ29tbXVuaXR5J3MgZ2VtIGhvc3Rpbmcgc2VydmljZS4KICAqIFtD
bG91ZHNtaXRoXShodHRwczovL2Nsb3Vkc21pdGguaW8pIC0gQSBmdWxseSBt
YW5hZ2VkIHBhY2thZ2UgbWFuYWdlbWVudCBTYWFTIHdpdGggc3VwcG9ydCBm
b3IgUnVieWdlbXMgKGFuZCBtYW55IG90aGVycykuCiogUGFja2FnZXMgYW5k
IEFwcGxpY2F0aW9ucwogICogW0JlcmtzaGVsZl0oaHR0cHM6Ly9naXRodWIu
Y29tL2JlcmtzaGVsZi9iZXJrc2hlbGYpIC0gQSBDaGVmIENvb2tib29rIG1h
bmFnZXIuCiAgKiBbQ29jb2FQb2RzXShodHRwczovL2dpdGh1Yi5jb20vQ29j
b2FQb2RzL0NvY29hUG9kcykgLSBUaGUgT2JqZWN0aXZlLUMgZGVwZW5kZW5j
eSBtYW5hZ2VyLgogICogW2ZwbV0oaHR0cHM6Ly9naXRodWIuY29tL2pvcmRh
bnNpc3NlbC9mcG0pIC0gRWZmaW5nIHBhY2thZ2UgbWFuYWdlbWVudCEgQnVp
bGQgcGFja2FnZXMgZm9yIG11bHRpcGxlIHBsYXRmb3JtcyAoZGViLCBycG0s
IGV0Yykgd2l0aCBncmVhdCBlYXNlIGFuZCBzYW5pdHkuCiAgKiBbTGludXhi
cmV3XShodHRwczovL2dpdGh1Yi5jb20vSG9tZWJyZXcvbGludXhicmV3KSAt
IEEgZm9yayBvZiBIb21lYnJldyBmb3IgTGludXguCiAgKiBbSG9tZWJyZXct
Y2Fza10oaHR0cHM6Ly9naXRodWIuY29tL2Nhc2tyb29tL2hvbWVicmV3LWNh
c2spIC0gQSBDTEkgd29ya2Zsb3cgZm9yIHRoZSBhZG1pbmlzdHJhdGlvbiBv
ZiBNYWMgYXBwbGljYXRpb25zIGRpc3RyaWJ1dGVkIGFzIGJpbmFyaWVzLgog
ICogW0hvbWVicmV3XShodHRwczovL2dpdGh1Yi5jb20vSG9tZWJyZXcvYnJl
dykgLSBUaGUgbWlzc2luZyBwYWNrYWdlIG1hbmFnZXIgZm9yIE9TIFguCiAg
KiBbVHJhdmVsaW5nIFJ1YnldKGh0dHA6Ly9waHVzaW9uLmdpdGh1Yi5pby90
cmF2ZWxpbmctcnVieS8pIC0gVHJhdmVsaW5nIFJ1YnkgbGV0cyB5b3UgY3Jl
YXRlIHNlbGYtY29udGFpbmVkIFJ1YnkgYXBwIHBhY2thZ2VzIGZvciBMaW51
eCBhbmQgT1MgWC4KCiMjIFBhZ2luYXRpb24KCiogW0thbWluYXJpXShodHRw
czovL2dpdGh1Yi5jb20vYW1hdHN1ZGEva2FtaW5hcmkpIC0gQSBTY29wZSAm
IEVuZ2luZSBiYXNlZCwgY2xlYW4sIHBvd2VyZnVsLCBjdXN0b21pemFibGUg
YW5kIHNvcGhpc3RpY2F0ZWQgcGFnaW5hdG9yIGZvciBtb2Rlcm4gd2ViIGFw
cCBmcmFtZXdvcmtzIGFuZCBPUk1zLgoqIFtvcmRlcl9xdWVyeV0oaHR0cHM6
Ly9naXRodWIuY29tL2dsZWJtL29yZGVyX3F1ZXJ5KSAtIEEga2V5c2V0IHBh
Z2luYXRpb24gbGlicmFyeSB0byBmaW5kIHRoZSBuZXh0IG9yIHByZXZpb3Vz
IHJlY29yZChzKSByZWxhdGl2ZSB0byB0aGUgY3VycmVudCBvbmUgZWZmaWNp
ZW50bHksIGUuZy4gZm9yIGluZmluaXRlIHNjcm9sbC4KKiBbUGFneV0oaHR0
cHM6Ly9naXRodWIuY29tL2RkbmV4dXMvcGFneSkgLSBQYWd5IGlzIHRoZSB1
bHRpbWF0ZSBwYWdpbmF0aW9uIGdlbSB0aGF0IG91dHBlcmZvcm1zIHRoZSBv
dGhlcnMgaW4gZWFjaCBhbmQgZXZlcnkgYmVuY2htYXJrIGFuZCBjb21wYXJp
c29uLiBNb3JlIGRldGFpbHMgY2FuIGJlIGZvdW5kIG9uIFtQYWd5IFdpa2ld
KGh0dHBzOi8vZGRuZXh1cy5naXRodWIuaW8vcGFneS9pbmRleCkuCiogW3dp
bGxfcGFnaW5hdGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9taXNsYXYvd2lsbF9w
YWdpbmF0ZSkgLSBBIHBhZ2luYXRpb24gbGlicmFyeSB0aGF0IGludGVncmF0
ZXMgd2l0aCBSdWJ5IG9uIFJhaWxzLCBTaW5hdHJhLCBNZXJiLCBEYXRhTWFw
cGVyIGFuZCBTZXF1ZWwuCgojIyBQREYKCiogW0NvbWJpbmVQREZdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9ib2F6c2VnZXYvY29tYmluZV9wZGYpIC0gQSBQdXJl
IHJ1YnkgbGlicmFyeSB0byBtZXJnZSBvciBzdHVtcCBQREYgZmlsZXMsIG51
bWJlciBwYWdlcyBhbmQgbW9yZS4KKiBbR2ltbGldKGh0dHBzOi8vZ2l0aHVi
LmNvbS93YWxsZS9naW1saSkgLSBVdGlsaXR5IGZvciBjb252ZXJ0aW5nIG1h
cmt1cCBmaWxlcyB0byBwZGYgZmlsZXMuCiogW0hleGFQREZdKGh0dHBzOi8v
Z2l0aHViLmNvbS9nZXR0YWxvbmcvaGV4YXBkZikgLSBBIFZlcnNhdGlsZSBQ
REYgQ3JlYXRpb24gYW5kIE1hbmlwdWxhdGlvbiBMaWJyYXJ5IEZvciBSdWJ5
LgoqIFtJbnZvaWNlUHJpbnRlcl0oaHR0cHM6Ly9naXRodWIuY29tL3N0cnpp
Ym55L2ludm9pY2VfcHJpbnRlcikgLSBTdXBlciBzaW1wbGUgUERGIGludm9p
Y2luZyBpbiBSdWJ5IChidWlsdCBvbiB0b3Agb2YgUHJhd24pLgoqIFtLaXRh
YnVdKGh0dHBzOi8vZ2l0aHViLmNvbS9mbmFuZG8va2l0YWJ1KSAtIEEgZnJh
bWV3b3JrIGZvciBjcmVhdGluZyBlLWJvb2tzIGZyb20gTWFya2Rvd24vVGV4
dGlsZSB0ZXh0IG1hcmt1cCB1c2luZyBSdWJ5LgoqIFtQZGZraXRdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9wZGZraXQvcGRma2l0KSAtIEhUTUwrQ1NTIHRvIFBE
RiB1c2luZyB3a2h0bWx0b3BkZi4KKiBbUHJhd25dKGh0dHBzOi8vZ2l0aHVi
LmNvbS9wcmF3bnBkZi9wcmF3bikgLSBGYXN0LCBOaW1ibGUgUERGIFdyaXRl
ciBmb3IgUnVieS4KKiBbUkdob3N0XShodHRwczovL2dpdGh1Yi5jb20vc2hh
aXJvbnRvbGVkby9yZ2hvc3QpIC0gUkdob3N0IGlzIGEgZG9jdW1lbnQgY3Jl
YXRpb24gYW5kIGNvbnZlcnNpb24gQVBJLgoqIFtTaHJpbXBdKGh0dHBzOi8v
Z2l0aHViLmNvbS9hZGp1c3Qvc2hyaW1wKSAtIEEgcGhhbnRvbWpzIGJhc2Vk
IHBkZiByZW5kZXJlci4KKiBbU3F1aWRdKGh0dHBzOi8vZ2l0aHViLmNvbS9m
dWxsc2NyZWVuL3NxdWlkKSAtIFNxdWlkIMK3IEEgUnVieSBsaWJyYXJ5IHRv
IHBsb3QgY2hhcnRzIGluIFBERiBmaWxlcwoqIFtXaWNrZWQgUGRmXShodHRw
czovL2dpdGh1Yi5jb20vbWlsZXN6cy93aWNrZWRfcGRmKSAtIFBERiBnZW5l
cmF0b3IgKGZyb20gSFRNTCkgcGx1Z2luIGZvciBSdWJ5IG9uIFJhaWxzLgoq
IFtXaXNlcGRmXShodHRwczovL2dpdGh1Yi5jb20vaWdvci1hbGV4YW5kcm92
L3dpc2VwZGYpIC0gV2todG1sdG9wZGYgd3JhcHBlciBkb25lIHJpZ2h0LgoK
IyMgUGVyZm9ybWFuY2UgTW9uaXRvcmluZwoKKiBbSW5zdHJ1bWVudGFsXSho
dHRwczovL2dpdGh1Yi5jb20vZXhwZWN0ZWRiZWhhdmlvci9pbnN0cnVtZW50
YWxfYWdlbnQpIC0gTWVhc3VyZSB5b3VyIGFwcGxpY2F0aW9uIGluIHJlYWwg
dGltZSB3aXRoIFtJbnN0cnVtZW50YWxdKGh0dHA6Ly9pbnN0cnVtZW50YWxh
cHAuY29tKS4KKiBbTmV3IFJlbGljXShodHRwczovL2dpdGh1Yi5jb20vbmV3
cmVsaWMvcnBtKSAtIEZpbmQgYW5kIGZpeCBSdWJ5IGVycm9ycyB3aXRoIE5l
dyBSZWxpYyBhcHBsaWNhdGlvbiBtb25pdG9yaW5nIGFuZCB0cm91Ymxlc2hv
b3RpbmcuCiogW1Njb3V0XShodHRwczovL2dpdGh1Yi5jb20vc2NvdXRhcHAv
c2NvdXRfYXBtX3J1YnkpIC0gU2NvdXQgUnVieSBBcHBsaWNhdGlvbiBNb25p
dG9yaW5nIEFnZW50LgoqIFtTa3lsaWdodF0oaHR0cHM6Ly9naXRodWIuY29t
L3NreWxpZ2h0aW8vc2t5bGlnaHQtcnVieSkgLSBBIHNtYXJ0IHByb2ZpbGVy
IGZvciB5b3VyIFJhaWxzIGFwcHMgdGhhdCB2aXN1YWxpemVzIHJlcXVlc3Qg
cGVyZm9ybWFuY2UuCiogW1RyYWNlVmlld10oaHR0cHM6Ly9naXRodWIuY29t
L2FwcG5ldGEvcnVieS10cmFjZXZpZXcpIC0gRnVsbC1zdGFjayBhcHBsaWNh
dGlvbiB0cmFjaW5nIGFuZCBicmlsbGlhbnQgZGF0YSB2aXN1YWxpemF0aW9u
IHRvIGJ1aWxkIGZhc3RlciwgbW9yZSByZWxpYWJsZSB3ZWIgYXBwcy4KCiMj
IFByZXNlbnRhdGlvbiBQcm9ncmFtcwoKKiBbU2xpZGUgU2hvdyAoUzkpXSho
dHRwczovL2dpdGh1Yi5jb20vc2xpZGVzaG93LXM5L3NsaWRlc2hvdykgLSBX
cml0ZSB5b3VyIHNsaWRlcyAvIHRhbGtzIC8gcHJlc2VudGF0aW9ucyBpbiBw
bGFpbiB0ZXh0IHdpdGggbWFya2Rvd24gZm9ybWF0dGluZyBjb252ZW50aW9u
cyBhbmQgZ2VuZXJhdGUgKHN0YXRpYykgd2ViIHBhZ2VzOyB0ZW1wbGF0ZSBw
YWNrcyBpbmNsLiBkZWNrLmpzLCBpbXByZXNzLmpzLCByZXZlYWwuanMsIHNo
b3dlciwgczYsIHM1IGFuZCBtb3JlLgoKIyMgUHJvY2VzcyBNYW5hZ2VtZW50
IGFuZCBNb25pdG9yaW5nCgoqIFtCbHVlcGlsbF0oaHR0cHM6Ly9naXRodWIu
Y29tL2JsdWVwaWxsLXJiL2JsdWVwaWxsKSAtIFNpbXBsZSBwcm9jZXNzIG1v
bml0b3JpbmcgdG9vbC4KKiBbRXllXShodHRwczovL2dpdGh1Yi5jb20va29z
dHlhL2V5ZSkgLSBQcm9jZXNzIG1vbml0b3JpbmcgdG9vbC4gSW5zcGlyZWQg
ZnJvbSBCbHVlcGlsbCBhbmQgR29kLgoqIFtGb3JlbWFuXShodHRwczovL2dp
dGh1Yi5jb20vZGRvbGxhci9mb3JlbWFuKSAtIE1hbmFnZSBQcm9jZmlsZS1i
YXNlZCBhcHBsaWNhdGlvbnMuCiogW0dvZF0oaHR0cHM6Ly9naXRodWIuY29t
L21vam9tYm8vZ29kKSAtIEFuIGVhc3kgdG8gY29uZmlndXJlLCBlYXN5IHRv
IGV4dGVuZCBtb25pdG9yaW5nIGZyYW1ld29yayB3cml0dGVuIGluIFJ1Ynku
CiogW0hlYWx0aCBNb25pdG9yIFJhaWxzXShodHRwczovL2dpdGh1Yi5jb20v
bGJlZGVyL2hlYWx0aC1tb25pdG9yLXJhaWxzKSAtIEEgbW91bnRhYmxlIFJh
aWxzIHBsdWctaW4gdG8gY2hlY2sgaGVhbHRoIG9mIHNlcnZpY2VzIChEYXRh
YmFzZSwgQ2FjaGUsIFNpZGVraXEsIFJlZGlzLCBlLnQuYy4pIHVzZWQgYnkg
dGhlIFJhaWxzIGFwcC4KKiBbUHJvY29kaWxlXShodHRwczovL2dpdGh1Yi5j
b20vYWRhbWNvb2tlL3Byb2NvZGlsZSkgLSBSdW4gcHJvY2Vzc2VzIGluIHRo
ZSBiYWNrZ3JvdW5kIChhbmQgZm9yZWdyb3VuZCkgb24gTWFjICYgTGludXgg
ZnJvbSBhIFByb2NmaWxlLgoKIyMgUHJvY2Vzc2VzCgoqIFtjaGlsZHByb2Nl
c3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9qYXJpYi9jaGlsZHByb2Nlc3MpIC0g
Q3Jvc3MtcGxhdGZvcm0gcnVieSBsaWJyYXJ5IGZvciBtYW5hZ2luZyBjaGls
ZCBwcm9jZXNzZXMuCiogW3Bvc2l4LXNwYXduXShodHRwczovL2dpdGh1Yi5j
b20vcnRvbWF5a28vcG9zaXgtc3Bhd24pIC0gRmFzdCBQcm9jZXNzOjpzcGF3
biBmb3IgUnVieXMgPj0gMS44LjcgYmFzZWQgb24gdGhlIHBvc2l4X3NwYXdu
KCkgc3lzdGVtIGludGVyZmFjZXMuCgojIyBQcm9maWxlciBhbmQgT3B0aW1p
emF0aW9uCgoqIFtiYXRjaC1sb2FkZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9l
eGFzcGFyay9iYXRjaC1sb2FkZXIpIOKAkyBBIGdlbmVyaWMgbGF6eSBiYXRj
aGluZyBtZWNoYW5pc20gdG8gYXZvaWQgTisxIERCIHF1ZXJpZXMsIEhUVFAg
cXVlcmllcywgZXRjLgoqIFtiZW5jaG1hcmstaXBzXShodHRwczovL2dpdGh1
Yi5jb20vZXZhbnBoeC9iZW5jaG1hcmstaXBzKSAtIFByb3ZpZGVzIGl0ZXJh
dGlvbiBwZXIgc2Vjb25kIGJlbmNobWFya2luZyBmb3IgUnVieS4KKiBbYnVs
bGV0XShodHRwczovL2dpdGh1Yi5jb20vZmx5ZXJoem0vYnVsbGV0KSAtIEhl
bHAgdG8ga2lsbCBOKzEgcXVlcmllcyBhbmQgdW51c2VkIGVhZ2VyIGxvYWRp
bmcuCiogW0RlcmFpbGVkIEJlbmNobWFya3NdKGh0dHBzOi8vZ2l0aHViLmNv
bS9zY2huZWVtcy9kZXJhaWxlZF9iZW5jaG1hcmtzKSAtIEEgc2VyaWVzIG9m
IHRoaW5ncyB5b3UgY2FuIHVzZSB0byBiZW5jaG1hcmsgYW55IFJhY2sgYmFz
ZWQgYXBwLgoqIFtQZWVrXShodHRwczovL2dpdGh1Yi5jb20vcGVlay9wZWVr
KSAtIFZpc3VhbCBzdGF0dXMgYmFyIHNob3dpbmcgUmFpbHMgcGVyZm9ybWFu
Y2UuCiogW3BlcmZ0b29scy5yYl0oaHR0cHM6Ly9naXRodWIuY29tL3RtbTEv
cGVyZnRvb2xzLnJiKSAtIGdwZXJmdG9vbHMgKGZvcm1lcmx5IGtub3duIGFz
IGdvb2dsZS1wZXJmdG9vbHMpIGZvciBSdWJ5IGNvZGUuCiogW3JhY2stbWlu
aS1wcm9maWxlcl0oaHR0cHM6Ly9naXRodWIuY29tL01pbmlQcm9maWxlci9y
YWNrLW1pbmktcHJvZmlsZXIpIC0gUHJvZmlsZXIgZm9yIHlvdXIgZGV2ZWxv
cG1lbnQgYW5kIHByb2R1Y3Rpb24gUnVieSByYWNrIGFwcHMuCiogW1Jia2l0
XShodHRwczovL2dpdGh1Yi5jb20vY29kZS1tYW5jZXJzL3Jia2l0KSAtIHBy
b2ZpbGVyIGZvciBSdWJ5LiBXaXRoIGEgR1VJLgoqIFtyYnNweV0oaHR0cHM6
Ly9naXRodWIuY29tL3Jic3B5L3Jic3B5KSAtIFNhbXBsaW5nIHByb2ZpbGVy
IGZvciBhbnkgUnVieSBwcm9jZXNzLgoqIFtydWJ5LXByb2ZdKGh0dHBzOi8v
Z2l0aHViLmNvbS9ydWJ5LXByb2YvcnVieS1wcm9mKSAtIEEgY29kZSBwcm9m
aWxlciBmb3IgTVJJIHJ1Ymllcy4KCiMjIFFSCgoqIFtRUi1jb2RlXShodHRw
czovL2dpdGh1Yi5jb20vd2hvbXdhaC9ycXJjb2RlKSAtIEEgUnVieSBsaWJy
YXJ5IHRoYXQgZW5jb2RlcyBRUiBDb2Rlcy4KCiMjIFF1ZXVlcyBhbmQgTWVz
c2FnaW5nCgoqIFtCYWNrYnVybmVyXShodHRwczovL2dpdGh1Yi5jb20vbmVz
cXVlbmEvYmFja2J1cm5lcikgLSBCYWNrYnVybmVyIGlzIGEgYmVhbnN0YWxr
ZC1wb3dlcmVkIGpvYiBxdWV1ZSB0aGF0IGNhbiBoYW5kbGUgYSB2ZXJ5IGhp
Z2ggdm9sdW1lIG9mIGpvYnMuCiogW0J1bm55XShodHRwczovL2dpdGh1Yi5j
b20vcnVieS1hbXFwL2J1bm55KSAtIEJ1bm55IGlzIGEgcG9wdWxhciwgZWFz
eSB0byB1c2UsIHdlbGwtbWFpbnRhaW5lZCBSdWJ5IGNsaWVudCBmb3IgUmFi
Yml0TVEgKDMuMyspLgoqIFtEZWxheWVkOjpKb2JdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9jb2xsZWN0aXZlaWRlYS9kZWxheWVkX2pvYikgLSBEYXRhYmFzZSBi
YWNrZWQgYXN5bmNocm9ub3VzIHByaW9yaXR5IHF1ZXVlLgoqIFtHdXNoXSho
dHRwczovL2dpdGh1Yi5jb20vY2hhcHMtaW8vZ3VzaCkgLSBBIHBhcmFsbGVs
IHJ1bm5lciBmb3IgY29tcGxleCB3b3JrZmxvd3MgdXNpbmcgb25seSBSZWRp
cyBhbmQgU2lkZWtpcS4KKiBbS2FyYWZrYV0oaHR0cHM6Ly9naXRodWIuY29t
L2thcmFma2Eva2FyYWZrYSkgLSBGcmFtZXdvcmsgdXNlZCB0byBzaW1wbGlm
eSBBcGFjaGUgS2Fma2EgKGEgZGlzdHJpYnV0ZWQgc3RyZWFtaW5nIHBsYXRm
b3JtKSBiYXNlZCBSdWJ5IGFwcGxpY2F0aW9ucyBkZXZlbG9wbWVudC4KKiBb
TWFyY2ggSGFyZV0oaHR0cHM6Ly9naXRodWIuY29tL3J1YnktYW1xcC9tYXJj
aF9oYXJlKSAtIElkaW9tYXRpYywgZmFzdCBhbmQgd2VsbC1tYWludGFpbmVk
IEpSdWJ5IGNsaWVudCBmb3IgUmFiYml0TVEuCiogW1Jlc3F1ZV0oaHR0cHM6
Ly9naXRodWIuY29tL3Jlc3F1ZS9yZXNxdWUpIC0gQSBSZWRpcy1iYWNrZWQg
UnVieSBsaWJyYXJ5IGZvciBjcmVhdGluZyBiYWNrZ3JvdW5kIGpvYnMuCiog
W1F1ZV0oaHR0cHM6Ly9naXRodWIuY29tL2NoYW5rcy9xdWUpIC0gQSBSdWJ5
IGpvYiBxdWV1ZSB0aGF0IHVzZXMgUG9zdGdyZVNRTCdzIGFkdmlzb3J5IGxv
Y2tzIGZvciBzcGVlZCBhbmQgcmVsaWFiaWxpdHkuCiogW1JvY2tldEpvYl0o
aHR0cDovL3JvY2tldGpvYi5pbykgLSBFbnRlcnByaXNlIEJhdGNoIFByb2Nl
c3NpbmcgU3lzdGVtIGZvY3VzZWQgb24gcGVyZm9ybWFuY2UsIHNjYWxhYmls
aXR5LCByZWxpYWJpbGl0eSwgYW5kIHZpc2liaWxpdHkgb2YgZXZlcnkgam9i
IGluIHRoZSBzeXN0ZW0uIE91dGdyb3duIGV4aXN0aW5nIHNvbHV0aW9ucz8g
T3IsIHN0YXJ0IHNtYWxsIGFuZCBzY2FsZSB1cCBsYXRlci4KKiBbU2hvcnl1
a2VuXShodHRwczovL2dpdGh1Yi5jb20vcGhzdGMvc2hvcnl1a2VuKSAtIEEg
c3VwZXIgZWZmaWNpZW50IEFXUyBTUVMgdGhyZWFkIGJhc2VkIG1lc3NhZ2Ug
cHJvY2Vzc29yIGZvciBSdWJ5LgoqIFtTaWRla2lxXShodHRwczovL3NpZGVr
aXEub3JnKSAtIEEgZnVsbC1mZWF0dXJlZCBiYWNrZ3JvdW5kIHByb2Nlc3Np
bmcgZnJhbWV3b3JrIGZvciBSdWJ5LiBJdCBhaW1zIHRvIGJlIHNpbXBsZSB0
byBpbnRlZ3JhdGUgd2l0aCBhbnkgbW9kZXJuIFJhaWxzIGFwcGxpY2F0aW9u
IGFuZCBtdWNoIGhpZ2hlciBwZXJmb3JtYW5jZSB0aGFuIG90aGVyIGV4aXN0
aW5nIHNvbHV0aW9ucy4KKiBbU25lYWtlcnNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9qb25kb3Qvc25lYWtlcnMpIC0gQSBmYXN0IGJhY2tncm91bmQgcHJvY2Vz
c2luZyBmcmFtZXdvcmsgZm9yIFJ1YnkgYW5kIFJhYmJpdE1RLgoqIFtTdWNr
ZXIgUHVuY2hdKGh0dHBzOi8vZ2l0aHViLmNvbS9icmFuZG9uaGlsa2VydC9z
dWNrZXJfcHVuY2gpIC0gQSBzaW5nbGUgcHJvY2VzcyBiYWNrZ3JvdW5kIHBy
b2Nlc3NpbmcgbGlicmFyeSB1c2luZyBDZWxsdWxvaWQuIEFpbWVkIHRvIGJl
IFNpZGVraXEncyBsaXR0bGUgYnJvdGhlci4KCiMjIFJhaWxzIEFwcGxpY2F0
aW9uIEdlbmVyYXRvcnMKCiogW0Jvb3RzdHJhcHBlcnNdKGh0dHBzOi8vZ2l0
aHViLmNvbS94ZGl0ZS9ib290c3RyYXBwZXJzKSAtIEJvb3RzdHJhcHBlcnMg
Z2VuZXJhdGVzIGEgYmFzZSBSYWlscyBhcHAgdXNpbmcgQm9vdHN0cmFwIHRl
bXBsYXRlIGFuZCBvdGhlciBnb29kaWVzLgoqIFtIb2JvXShodHRwczovL2dp
dGh1Yi5jb20vSG9iby9ob2JvKSAtIFRoZSB3ZWIgYXBwIGJ1aWxkZXIgZm9y
IFJhaWxzLgoqIFtvcmF0c10oaHR0cHM6Ly9naXRodWIuY29tL25pY2tqai9v
cmF0cykgLSBPcGluaW9uYXRlZCByYWlscyBhcHBsaWNhdGlvbiB0ZW1wbGF0
ZXMuCiogW1JhaWxzIENvbXBvc2VyXShodHRwczovL2dpdGh1Yi5jb20vUmFp
bHNBcHBzL3JhaWxzLWNvbXBvc2VyKSAtIFRoZSBSYWlscyBnZW5lcmF0b3Ig
b24gc3Rlcm9pZHMgZm9yIHN0YXJ0ZXIgYXBwcy4KKiBbUmF5Z3VuXShodHRw
czovL2dpdGh1Yi5jb20vY2FyYm9uZml2ZS9yYXlndW4pIC0gQnVpbGRzIGFw
cGxpY2F0aW9ucyB3aXRoIHRoZSBjb21tb24gY3VzdG9taXphdGlvbiBzdHVm
ZiBhbHJlYWR5IGRvbmUuCiogW1N1c3BlbmRlcnNdKGh0dHBzOi8vZ2l0aHVi
LmNvbS90aG91Z2h0Ym90L3N1c3BlbmRlcnMpIC0gU3VzcGVuZGVycyBpcyB0
aGUgYmFzZSBSYWlscyBhcHBsaWNhdGlvbiB1c2VkIGF0IHRob3VnaHRib3Qu
CgojIyBSb2JvdGljcwoKKiBbQXJ0b29dKGh0dHA6Ly9hcnRvby5pbykgLSBO
ZXh0IGdlbmVyYXRpb24gcm9ib3RpY3MgZnJhbWV3b3JrIHdpdGggc3VwcG9y
dCBmb3IgZGlmZmVyZW50IHBsYXRmb3JtczogQXJkdWlubywgTGVhcCBNb3Rp
b24sIFBlYmJsZSwgUmFzcGJlcnJ5IFBpLCBldGMuCgojIyBSU1MKCiogW0Zl
ZWQgbm9ybWFsaXplcl0oaHR0cHM6Ly9naXRodWIuY29tL2Fhc21pdGgvZmVl
ZC1ub3JtYWxpemVyKSAtIEV4dGVuc2libGUgUnVieSB3cmFwcGVyIGZvciBB
dG9tIGFuZCBSU1MgcGFyc2Vycy4KKiBbRmVlZGppcmFdKGh0dHBzOi8vZ2l0
aHViLmNvbS9mZWVkamlyYS9mZWVkamlyYSkgLSBBIGZlZWQgZmV0Y2hpbmcg
YW5kIHBhcnNpbmcgbGlicmFyeS4KKiBbZmVlZHBhcnNlcl0oaHR0cHM6Ly9n
aXRodWIuY29tL2ZlZWRwYXJzZXIvZmVlZHBhcnNlcikgLSBBIGZlZWQgcGFy
c2VyIGFuZCBub3JtYWxpemVyIChBdG9tLCBSU1MsIEpTT04sIGV0YykgbGli
cmFyeS4KKiBbUmF0b21dKGh0dHBzOi8vZ2l0aHViLmNvbS9zZWFuZ2VvL3Jh
dG9tKSAtIEEgZmFzdCwgbGlieG1sIGJhc2VkLCBSdWJ5IEF0b20gbGlicmFy
eS4KKiBbU2ltcGxlIHJzc10oaHR0cHM6Ly9naXRodWIuY29tL2NhcmRtYWdp
Yy9zaW1wbGUtcnNzKSAtIEEgc2ltcGxlLCBmbGV4aWJsZSwgZXh0ZW5zaWJs
ZSwgYW5kIGxpYmVyYWwgUlNTIGFuZCBBdG9tIHJlYWRlci4KKiBbU3RyaW5n
ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9zd2Fuc29uL3N0cmluZ2VyKSAtIEEg
c2VsZi1ob3N0ZWQsIGFudGktc29jaWFsIFJTUyByZWFkZXIuCgojIyBTZXJ2
ZXJsZXNzCgoqIFtGYWFTdFJ1YnldKGh0dHBzOi8vZmFhc3RydWJ5LmlvKSAt
IFNlcnZlcmxlc3MgU29mdHdhcmUgRGV2ZWxvcG1lbnQgUGxhdGZvcm0gZm9y
IFJ1YnkgYW5kIENyeXN0YWwgZGV2ZWxvcGVycy4KKiBbSmV0c10oaHR0cHM6
Ly9naXRodWIuY29tL3Rvbmd1ZXJvby9qZXRzKSAtIEEgUnVieSBTZXJ2ZXJs
ZXNzIEZyYW1ld29yayB0byBjcmVhdGUgYW5kIGRlcGxveSBzZXJ2ZXJsZXNz
IG1pY3Jvc2VydmljZXMgd2l0aCBlYXNlLCBhbmQgdG8gc2VhbWxlc3NseSBn
bHVlIEFXUyBzZXJ2aWNlcy4KCiMjIFNjaGVkdWxpbmcKCiogW21pbmljcm9u
XShodHRwczovL2dpdGh1Yi5jb20vamFtZXNyd2hpdGUvbWluaWNyb24pIC0g
QSBzeXN0ZW0gdG8gbWFuYWdlIGFuZCBtb25pdG9yIGNyb24gam9icy4KKiBb
cmVzcXVlLXNjaGVkdWxlcl0oaHR0cHM6Ly9naXRodWIuY29tL3Jlc3F1ZS9y
ZXNxdWUtc2NoZWR1bGVyKSAtIEEgbGlnaHQtd2VpZ2h0IGpvYiBzY2hlZHVs
aW5nIHN5c3RlbSBidWlsdCBvbiB0b3Agb2YgUmVzcXVlLgoqIFtydWZ1cy1z
Y2hlZHVsZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9qbWV0dHJhdXgvcnVmdXMt
c2NoZWR1bGVyKSAtIEpvYiBzY2hlZHVsZXIgZm9yIFJ1YnkgKGF0LCBjcm9u
LCBpbiBhbmQgZXZlcnkgam9icykuCiogW1NpZGVraXEtQ3Jvbl0oaHR0cHM6
Ly9naXRodWIuY29tL29uZHJlamJhcnRhcy9zaWRla2lxLWNyb24pIC0gQSBz
Y2hlZHVsaW5nIGFkZC1vbiBmb3IgU2lkZWtpcS4KKiBbV2hlbmV2ZXJdKGh0
dHBzOi8vZ2l0aHViLmNvbS9qYXZhbi93aGVuZXZlcikgLSBBIFJ1YnkgZ2Vt
IHRoYXQgcHJvdmlkZXMgYSBjbGVhciBzeW50YXggZm9yIHdyaXRpbmcgYW5k
IGRlcGxveWluZyBjcm9uIGpvYnMuCgojIyBTY2llbnRpZmljCgoqIEJpbmRp
bmdzCiAgKiBbUHlDYWxsXShodHRwczovL2dpdGh1Yi5jb20vbXJrbi9weWNh
bGwucmIpIC0gQ2FsbGluZyBQeXRob24gZnVuY3Rpb25zIGZyb20gdGhlIFJ1
YnkgbGFuZ3VhZ2UuCiAgKiBbcnVieS1vcGVuY3ZdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9ydWJ5LW9wZW5jdi9ydWJ5LW9wZW5jdikgLSBBbiBPcGVuQ1Ygd3Jh
cHBlciBmb3IgUnVieS4KKiBDbGFzc2lmaWVycwogICogW2NsYXNzaWZpZXIt
cmVib3JuXShodHRwczovL2dpdGh1Yi5jb20vamVreWxsL2NsYXNzaWZpZXIt
cmVib3JuKSAtIEFuIGFjdGl2ZSBmb3JrIG9mIENsYXNzaWZpZXIsIGFuZCBn
ZW5lcmFsIG1vZHVsZSB0byBhbGxvdyBCYXllc2lhbiBhbmQgb3RoZXIgdHlw
ZXMgb2YgY2xhc3NpZmljYXRpb25zLgogICogW3N0dWZmLWNsYXNzaWZpZXJd
KGh0dHBzOi8vZ2l0aHViLmNvbS9hbGV4YW5kcnUvc3R1ZmYtY2xhc3NpZmll
cikgLSBBIGxpYnJhcnkgZm9yIGNsYXNzaWZ5aW5nIHRleHQgaW50byBtdWx0
aXBsZSBjYXRlZ29yaWVzLgoqIERhdGEgYW5hbHlzaXMvc3RydWN0dXJlcwog
ICogW2RhcnVdKGh0dHBzOi8vZ2l0aHViLmNvbS92MGRyby9kYXJ1KSAtIEEg
bGlicmFyeSBmb3Igc3RvcmFnZSwgYW5hbHlzaXMsIG1hbmlwdWxhdGlvbiBh
bmQgdmlzdWFsaXphdGlvbiBvZiBkYXRhIGluIHB1cmUgUnVieS4KICAqIFtE
YXJ1OjpWaWV3XShodHRwczovL2dpdGh1Yi5jb20vU2NpUnVieS9kYXJ1LXZp
ZXcpIC0gQSBsaWJyYXJ5IGZvciBlYXN5IGFuZCBpbnRlcmFjdGl2ZSBwbG90
dGluZyBvbiBKdXB5dGVyIE5vdGVib29rcyBhbmQgd2ViIGFwcGxpY2F0aW9u
cy4KICAqIFtSZ2xdKGh0dHBzOi8vZ2l0aHViLmNvbS9tb25vcmEvcmdsKSAt
IEEgZnJhbWV3b3JrIGZvciBncmFwaCBkYXRhIHN0cnVjdHVyZXMgYW5kIGFs
Z29yaXRobXMuCiogTnVtZXJpY2FsIGFycmF5cwogICogW05NYXRyaXhdKGh0
dHBzOi8vZ2l0aHViLmNvbS9zY2lydWJ5L25tYXRyaXgpIC0gRmFzdCBudW1l
cmljYWwgbGluZWFyIGFsZ2VicmEgbGlicmFyeSBmb3IgUnVieS4KICAqIFtO
dW1vOjpOQXJyYXldKGh0dHBzOi8vZ2l0aHViLmNvbS9ydWJ5LW51bW8vbnVt
by1uYXJyYXkpIC0gTi1kaW1lbnNpb25hbCBOdW1lcmljYWwgQXJyYXkgZm9y
IFJ1YnkuCiAgKiBbbWRhcnJheV0oaHR0cHM6Ly9naXRodWIuY29tL3Jib3Rh
Zm9nby9tZGFycmF5KSAtIE11bHRpIGRpbWVuc2lvbmFsIGFycmF5IGltcGxl
bWVudGVkIGZvciBKUnVieSBpbnNwaXJlZCBieSBOdW1QeS4KKiBbU2NpUnVi
eV0oaHR0cHM6Ly9naXRodWIuY29tL3NjaXJ1Ynkvc2NpcnVieSkgLSBUb29s
cyBmb3Igc2NpZW50aWZpYyBjb21wdXRhdGlvbiBpbiBSdWJ5L1JhaWxzLgog
ICogW0lSdWJ5XShodHRwczovL2dpdGh1Yi5jb20vU2NpUnVieS9pcnVieSkg
LSBBIFJ1Ynkga2VybmVsIGZvciBKdXB5dGVyLgogICogW3N0YXRzYW1wbGVd
KGh0dHBzOi8vZ2l0aHViLmNvbS9zY2lydWJ5L3N0YXRzYW1wbGUpIC0gQSBz
dWl0ZSBmb3IgYmFzaWMgYW5kIGFkdmFuY2VkIHN0YXRpc3RpY3Mgb24gUnVi
eS4KICAqIFtzdGF0c2FtcGxlLXRpbWVzZXJpZXNdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9zY2lydWJ5L3N0YXRzYW1wbGUtdGltZXNlcmllcykgLSBCaW9ydWJ5
IFN0YXRzYW1wbGUgVGltZVNlcmllcy4KICAqIFtzdGF0c2FtcGxlLWdsbV0o
aHR0cHM6Ly9naXRodWIuY29tL3NjaXJ1Ynkvc3RhdHNhbXBsZS1nbG0pIC0g
R2VuZXJhbGl6ZWQgTGluZWFyIE1vZGVscyBleHRlbnNpb24gZm9yIFN0YXRz
YW1wbGUuCiAgKiBbZGlzdHJpYnV0aW9uXShodHRwczovL2dpdGh1Yi5jb20v
c2NpcnVieS9kaXN0cmlidXRpb24pIC0gU3RhdGlzdGljYWwgRGlzdHJpYnV0
aW9ucyBtdWx0aSBsaWJyYXJ5IHdyYXBwZXIuCiAgKiBbbWluaW1pemF0aW9u
XShodHRwczovL2dpdGh1Yi5jb20vc2NpcnVieS9taW5pbWl6YXRpb24pIC0g
TWluaW1pemF0aW9uIGFsZ29yaXRobXMgb24gcHVyZSBSdWJ5LgogICogW3Ji
LWdzbF0oaHR0cHM6Ly9naXRodWIuY29tL1NjaVJ1YnkvcmItZ3NsKSAtIEEg
cnVieSBpbnRlcmZhY2UgdG8gR05VIFNjaWVudGlmaWMgbGlicmFyeSwgd2l0
aCBOTWF0cml4IHN1cHBvcnQuCiogU3BlY2lmaWMKICAqIFtCaW9SdWJ5XSho
dHRwczovL2dpdGh1Yi5jb20vYmlvcnVieS9iaW9ydWJ5KSAtIExpYnJhcnkg
Zm9yIGRldmVsb3BpbmcgYmlvaW5mb3JtYXRpY3Mgc29mdHdhcmUuCiAgKiBb
Ymxvb21maWx0ZXItcmJdKGh0dHBzOi8vZ2l0aHViLmNvbS9pZ3JpZ29yaWsv
Ymxvb21maWx0ZXItcmIpIC0gQmxvb21GaWx0ZXIocykgaW4gUnVieTogTmF0
aXZlIGNvdW50aW5nIGZpbHRlciArIFJlZGlzIGNvdW50aW5nL25vbi1jb3Vu
dGluZyBmaWx0ZXJzLgogICogW2RlY2lzaW9udHJlZV0oaHR0cHM6Ly9naXRo
dWIuY29tL2lncmlnb3Jpay9kZWNpc2lvbnRyZWUpIC0gQSBydWJ5IGxpYnJh
cnkgd2hpY2ggaW1wbGVtZW50cyBJRDMgKGluZm9ybWF0aW9uIGdhaW4pIGFs
Z29yaXRobSBmb3IgZGVjaXNpb24gdHJlZSBsZWFybmluZy4KKiBVdGlsaXRp
ZXMKICAqIFthbGdvcml0aG1zXShodHRwczovL2dpdGh1Yi5jb20va2Fud2Vp
L2FsZ29yaXRobXMpIC0gTGlicmFyeSB3aXRoIGRvY3VtZW50YXRpb24gb24g
d2hlbiB0byB1c2UgYSBwYXJ0aWN1bGFyIHN0cnVjdHVyZS9hbGdvcml0aG0u
CiAgKiBbamFyb193aW5rbGVyXShodHRwczovL2dpdGh1Yi5jb20vdG9ueXRv
bnlqYW4vamFyb193aW5rbGVyKSAtIFJ1YnkgJiBDIGltcGxlbWVudGF0aW9u
IG9mIEphcm8tV2lua2xlciBkaXN0YW5jZSBhbGdvcml0aG0gd2hpY2ggc3Vw
cG9ydHMgVVRGLTggc3RyaW5nLgogICogW3ByaW1lcy11dGlsc10oaHR0cHM6
Ly9naXRodWIuY29tL2p6YWtpeWEvcHJpbWVzLXV0aWxzKSAtIEEgUnVieWdl
bSB3aGljaCBwcm92aWRlcyBhIHN1aXRlIG9mIGV4dHJlbWVseSBmYXN0IHV0
aWxpdHkgbWV0aG9kcyBmb3IgdGVzdGluZyBhbmQgZ2VuZXJhdGluZyBwcmlt
ZXMuCiAgKiBbUm9vdHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9qemFraXlhL3Jv
b3RzKSAtIEEgUnVieWdlbSB3aGljaCBwcm92aWRlcyB1dGlsaXRpZXMgdG8g
ZmluZCBhbGwgdGhlIG50aCByb290cyBvZiByZWFsIGFuZCBjb21wbGV4IHZh
bHVlcy4KICAqIFtzbWFydGVyX2Nzdl0oaHR0cHM6Ly9naXRodWIuY29tL3Rp
bG8vc21hcnRlcl9jc3YpIC0gUnVieSBHZW0gZm9yIHNtYXJ0ZXIgaW1wb3J0
aW5nIG9mIENTViBGaWxlcyBhcyBBcnJheShzKSBvZiBIYXNoZXMuCgojIyBT
ZWFyY2gKCiogW2NoZXd5XShodHRwczovL2dpdGh1Yi5jb20vdG9wdGFsL2No
ZXd5KSAtIEhpZ2gtbGV2ZWwgRWxhc3RpY3NlYXJjaCBSdWJ5IGZyYW1ld29y
ayBiYXNlZCBvbiB0aGUgb2ZmaWNpYWwgZWxhc3RpY3NlYXJjaC1ydWJ5IGNs
aWVudC4KKiBbZWxhc3RpY3NlYXJjaC1ydWJ5XShodHRwczovL2dpdGh1Yi5j
b20vZWxhc3RpYy9lbGFzdGljc2VhcmNoLXJ1YnkpIC0gUnVieSBpbnRlZ3Jh
dGlvbnMgZm9yIEVsYXN0aWNzZWFyY2guCiogW2VsYXN0aWNzXShodHRwczov
L2dpdGh1Yi5jb20vcHJpbnRlcmN1L2VsYXN0aWNzLXJiKSAtIFNpbXBsZSBF
bGFzdGljU2VhcmNoIGNsaWVudCB3aXRoIHN1cHBvcnQgZm9yIG1pZ3JhdGlv
bnMgYW5kIEFjdGl2ZVJlY29yZCBpbnRlZ3JhdGlvbi4KKiBbaGFzX3Njb3Bl
XShodHRwczovL2dpdGh1Yi5jb20vcGxhdGFmb3JtYXRlYy9oYXNfc2NvcGUp
IC0gSGFzIHNjb3BlIGFsbG93cyB5b3UgdG8gZWFzaWx5IGNyZWF0ZSBjb250
cm9sbGVyIGZpbHRlcnMgYmFzZWQgb24geW91ciByZXNvdXJjZXMgbmFtZWQg
c2NvcGVzLgoqIFtNb25nb2lkIFNlYXJjaF0oaHR0cHM6Ly9naXRodWIuY29t
L21hdXJpY2lvemFmZmFyaS9tb25nb2lkX3NlYXJjaCkgLSBTaW1wbGUgZnVs
bCB0ZXh0IHNlYXJjaCBpbXBsZW1lbnRhdGlvbiBmb3IgTW9uZ29pZC4KKiBb
cGdfc2VhcmNoXShodHRwczovL2dpdGh1Yi5jb20vQ2FzZWNvbW1vbnMvcGdf
c2VhcmNoKSAtIEJ1aWxkcyBBY3RpdmVSZWNvcmQgbmFtZWQgc2NvcGVzIHRo
YXQgdGFrZSBhZHZhbnRhZ2Ugb2YgUG9zdGdyZVNRTCdzIGZ1bGwgdGV4dCBz
ZWFyY2guCiogW3JhbnNhY2tdKGh0dHBzOi8vZ2l0aHViLmNvbS9hY3RpdmVy
ZWNvcmQtaGFja2VyeS9yYW5zYWNrLykgLSBPYmplY3QtYmFzZWQgc2VhcmNo
aW5nLgoqIFtScm9vbmdhXShodHRwczovL2dpdGh1Yi5jb20vcmFuZ3ViYS9y
cm9vbmdhKSAtIFRoZSBSdWJ5IGJpbmRpbmdzIG9mIEdyb29uZ2EuCiogW3Nj
b3BlZF9zZWFyY2hdKGh0dHBzOi8vZ2l0aHViLmNvbS93dmFuYmVyZ2VuL3Nj
b3BlZF9zZWFyY2gpIC0gQWRkcyBhIHNjb3BlIHN1cHBvcnRpbmcgc2VhcmNo
IHF1ZXJpZXMgYW5kIGF1dG9jb21wbGV0aW9uIGFnYWluc3QgZXhpc3Rpbmcg
ZmllbGRzIG9uIEFjdGl2ZVJlY29yZCBtb2RlbHMgYW5kIGFzc29jaWF0aW9u
cy4KKiBbU2VhcmNoQ29wXShodHRwczovL2dpdGh1Yi5jb20vbXJrYW1lbC9z
ZWFyY2hfY29wKSAtIEV4dGVuZHMgeW91ciBBY3RpdmVSZWNvcmQgbW9kZWxz
IHRvIHN1cHBvcnQgZnVsbHRleHQgc2VhcmNoIGVuZ2luZSBsaWtlIHF1ZXJp
ZXMgdmlhIHNpbXBsZSBxdWVyeSBzdHJpbmdzIGFuZCBoYXNoLWJhc2VkIHF1
ZXJpZXMuCiogW1NlYXJjaGtpY2tdKGh0dHBzOi8vZ2l0aHViLmNvbS9hbmth
bmUvc2VhcmNoa2ljaykgLSBTZWFyY2hraWNrIGxlYXJucyB3aGF0IHlvdXIg
dXNlcnMgYXJlIGxvb2tpbmcgZm9yLiBBcyBtb3JlIHBlb3BsZSBzZWFyY2gs
IGl0IGdldHMgc21hcnRlciBhbmQgdGhlIHJlc3VsdHMgZ2V0IGJldHRlci4g
SXTigJlzIGZyaWVuZGx5IGZvciBkZXZlbG9wZXJzIC0gYW5kIG1hZ2ljYWwg
Zm9yIHlvdXIgdXNlcnMuCiogW1NlYXJjaGxvZ2ljXShodHRwczovL2dpdGh1
Yi5jb20vYmluYXJ5bG9naWMvc2VhcmNobG9naWMpIC0gT2JqZWN0IGJhc2Vk
IHNlYXJjaGluZywgY29tbW9uIG5hbWVkIHNjb3BlcywgYW5kIG90aGVyIHVz
ZWZ1bCBuYW1lZCBzY29wZSB0b29scyBmb3IgQWN0aXZlUmVjb3JkLgoqIFtT
dW5zcG90XShodHRwczovL2dpdGh1Yi5jb20vc3Vuc3BvdC9zdW5zcG90KSAt
IEEgUnVieSBsaWJyYXJ5IGZvciBleHByZXNzaXZlLCBwb3dlcmZ1bCBpbnRl
cmFjdGlvbiB3aXRoIHRoZSBTb2xyIHNlYXJjaCBlbmdpbmUuCiogW3RleHRh
Y3VsYXJdKGh0dHBzOi8vZ2l0aHViLmNvbS90ZXh0YWN1bGFyL3RleHRhY3Vs
YXIpIC0gRXhwb3NlcyBmdWxsIHRleHQgc2VhcmNoIGNhcGFiaWxpdGllcyBm
cm9tIFBvc3RncmVTUUwsIGFuZCBhbGxvd3MgeW91IHRvIGRlY2xhcmUgZnVs
bCB0ZXh0IGluZGV4ZXMuIFRleHRhY3VsYXIgZXh0ZW5kcyBBY3RpdmVSZWNv
cmQgd2l0aCBuYW1lZF9zY29wZSBtZXRob2RzIG1ha2luZyBzZWFyY2hpbmcg
ZWFzeSBhbmQgZnVuIQoqIFtUaGlua2luZyBTcGhpbnhdKGh0dHBzOi8vZ2l0
aHViLmNvbS9wYXQvdGhpbmtpbmctc3BoaW54KSAtIEEgbGlicmFyeSBmb3Ig
Y29ubmVjdGluZyBBY3RpdmVSZWNvcmQgdG8gdGhlIFNwaGlueCBmdWxsLXRl
eHQgc2VhcmNoIHRvb2wuCgojIyBTZWN1cml0eQoKKiBbQmVFRl0oaHR0cDov
L2JlZWZwcm9qZWN0LmNvbSkgLSBCZUVGIGlzIHNob3J0IGZvciBUaGUgQnJv
d3NlciBFeHBsb2l0YXRpb24gRnJhbWV3b3JrLiBJdCBpcyBhIHBlbmV0cmF0
aW9uIHRlc3RpbmcgdG9vbCB0aGF0IGZvY3VzZXMgb24gdGhlIHdlYiBicm93
c2VyLgoqIFtidW5kbGVyLWF1ZGl0XShodHRwczovL2dpdGh1Yi5jb20vcnVi
eXNlYy9idW5kbGVyLWF1ZGl0KSAtIFBhdGNoLWxldmVsIHNlY3VyaXR5IHZl
cmlmaWNhdGlvbiBmb3IgQnVuZGxlci4KKiBbTWV0YXNwbG9pdF0oaHR0cHM6
Ly9naXRodWIuY29tL3JhcGlkNy9tZXRhc3Bsb2l0LWZyYW1ld29yaykgLSBX
b3JsZCdzIG1vc3QgdXNlZCBwZW5ldHJhdGlvbiB0ZXN0aW5nIHNvZnR3YXJl
LgoqIFtSYWNrOjpBdHRhY2tdKGh0dHBzOi8vZ2l0aHViLmNvbS9raWNrc3Rh
cnRlci9yYWNrLWF0dGFjaykgLSBSYWNrIG1pZGRsZXdhcmUgZm9yIGJsb2Nr
aW5nICYgdGhyb3R0bGluZyBhYnVzaXZlIHJlcXVlc3RzLgoqIFtSYWNrOjpQ
cm90ZWN0aW9uXShodHRwczovL2dpdGh1Yi5jb20vc2luYXRyYS9yYWNrLXBy
b3RlY3Rpb24pIC0gUmFjayBtaWRkbGV3YXJlIGZvciBwcm90ZWN0aW5nIGFn
YWluc3QgdHlwaWNhbCBXZWIgYXR0YWNrcy4KKiBbU2VjdXJlSGVhZGVyc10o
aHR0cHM6Ly9naXRodWIuY29tL3R3aXR0ZXIvc2VjdXJlaGVhZGVycykgLSBB
dXRvbWF0aWNhbGx5IGFwcGx5IHNldmVyYWwgaGVhZGVycyB0aGF0IGFyZSBy
ZWxhdGVkIHRvIHNlY3VyaXR5LCBpbmNsdWRpbmc6IENvbnRlbnQgU2VjdXJp
dHkgUG9saWN5IChDU1ApLCBIVFRQIFN0cmljdCBUcmFuc3BvcnQgU2VjdXJp
dHkgKEhTVFMpLCBYLUZyYW1lLU9wdGlvbnMgKFhGTyksIFgtWFNTLVByb3Rl
Y3Rpb24sIFgtQ29udGVudC1UeXBlLU9wdGlvbnMsIFgtRG93bmxvYWQtT3B0
aW9ucyAmIFgtUGVybWl0dGVkLUNyb3NzLURvbWFpbi1Qb2xpY2llcy4KCiMj
IFNFTwoKKiBbRnJpZW5kbHlJZF0oaHR0cHM6Ly9naXRodWIuY29tL25vcm1h
bi9mcmllbmRseV9pZCkgLSBUaGUgIlN3aXNzIEFybXkgYnVsbGRvemVyIiBv
ZiBzbHVnZ2luZyBhbmQgcGVybWFsaW5rIHBsdWdpbnMgZm9yIEFjdGl2ZSBS
ZWNvcmQuCiogW01ldGFUYWdzXShodHRwczovL2dpdGh1Yi5jb20va3B1bXVr
L21ldGEtdGFncykgLSBBIGdlbSB0byBtYWtlIHlvdXIgUmFpbHMgYXBwbGlj
YXRpb24gU0VPLWZyaWVuZGx5LgoqIFtwcmVyZW5kZXJfcmFpbHNdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9wcmVyZW5kZXIvcHJlcmVuZGVyX3JhaWxzKSAtIFJh
aWxzIG1pZGRsZXdhcmUgZ2VtIGZvciBwcmVyZW5kZXJpbmcgamF2YXNjcmlw
dC1yZW5kZXJlZCBwYWdlcyBvbiB0aGUgZmx5IGZvciBTRU8uCiogW1NpdGVt
YXBHZW5lcmF0b3JdKGh0dHBzOi8vZ2l0aHViLmNvbS9ranZhcmdhL3NpdGVt
YXBfZ2VuZXJhdG9yKSAtIEEgZnJhbWV3b3JrLWFnbm9zdGljIFhNTCBTaXRl
bWFwIGdlbmVyYXRvciB3cml0dGVuIGluIFJ1YnkuCgojIyBTb2NpYWwgTmV0
d29ya2luZwoKKiBbRGVjaWRpbV0oaHR0cHM6Ly9naXRodWIuY29tL2RlY2lk
aW0vZGVjaWRpbSkgLSBmcmVlIG9wZW4tc291cmNlIHBhcnRpY2lwYXRvcnkg
ZGVtb2NyYWN5IGZvciBjaXRpZXMgYW5kIG9yZ2FuaXphdGlvbnMKKiBbZGlh
c3BvcmEqXShodHRwczovL2dpdGh1Yi5jb20vZGlhc3BvcmEvZGlhc3BvcmEp
IC0gQSBwcml2YWN5IGF3YXJlLCBkaXN0cmlidXRlZCwgb3BlbiBzb3VyY2Ug
c29jaWFsIG5ldHdvcmsuCiogW0Rpc2NvdXJzZV0oaHR0cHM6Ly9naXRodWIu
Y29tL2Rpc2NvdXJzZS9kaXNjb3Vyc2UpIC0gQSBwbGF0Zm9ybSBmb3IgY29t
bXVuaXR5IGRpc2N1c3Npb24uIEZyZWUsIG9wZW4sIHNpbXBsZS4KKiBbTWFp
bGJveGVyXShodHRwczovL2dpdGh1Yi5jb20vbWFpbGJveGVyL21haWxib3hl
cikgLSBBIHByaXZhdGUgbWVzc2FnZSBzeXN0ZW0gZm9yIFJhaWxzIGFwcGxp
Y2F0aW9ucy4KKiBbTWFzdG9kb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9HYXJn
cm9uL21hc3RvZG9uKSAtIEEgR05VIFNvY2lhbC1jb21wYXRpYmxlIG1pY3Jv
YmxvZ2dpbmcgc2VydmVyLgoqIFtTb2NpYWwgU2hhcmVzXShodHRwczovL2dp
dGh1Yi5jb20vVGltcmFlbC9zb2NpYWxfc2hhcmVzKSAtIEEgZ2VtIHRvIGNo
ZWNrIGhvdyBtYW55IHRpbWVzIHVybCB3YXMgc2hhcmVkIGluIHNvY2lhbCBu
ZXR3b3Jrcy4KKiBbVGhyZWRkZWRdKGh0dHBzOi8vdGhyZWRkZWQub3JnKSAt
IFJhaWxzIDQuMisgZm9ydW1zL21lc3NhZ2Vib2FyZHMgZW5naW5lLiBJdHMg
Z29hbCBpcyB0byBiZSBhcyBzaW1wbGUgYW5kIGZlYXR1cmUgcmljaCBhcyBw
b3NzaWJsZS4KCiMjIFNwcmVhZHNoZWV0cyBhbmQgRG9jdW1lbnRzCgoqIFtB
WExTWF0oaHR0cHM6Ly9naXRodWIuY29tL3JhbmR5bS9heGxzeCkgLSBBbiBl
eGNlbCB4bHN4IGdlbmVyYXRpb24gbGlicmFyeS4KKiBbRG9jc3BsaXRdKGh0
dHA6Ly9kb2N1bWVudGNsb3VkLmdpdGh1Yi5pby9kb2NzcGxpdCkgLSBHZW0g
dG8gY29udmVydCBNaWNyb3NvZnQgV29yZCAoYW5kIG90aGVyKSBkb2N1bWVu
dHMgaW50byBpbWFnZXMsIHBkZiwgcGFnZXMgb3IgdGV4dC4KKiBbUm9vXSho
dHRwczovL2dpdGh1Yi5jb20vcm9vLXJiL3JvbykgLSBJbXBsZW1lbnRzIHJl
YWQgYWNjZXNzIGZvciBhbGwgc3ByZWFkc2hlZXQgdHlwZXMgYW5kIHJlYWQv
d3JpdGUgYWNjZXNzIGZvciBHb29nbGUgc3ByZWFkc2hlZXRzLgoqIFtTcHJl
YWRzaGVldCBBcmNoaXRlY3RdKGh0dHBzOi8vZ2l0aHViLmNvbS93ZXN0b25n
YW5nZXIvc3ByZWFkc2hlZXRfYXJjaGl0ZWN0KSAtIFR1cm4gYW55IGFjdGl2
ZXJlY29yZCByZWxhdGlvbiBvciBydWJ5IG9iamVjdCBjb2xsZWN0aW9uIGlu
dG8gYSBYTFNYLCBPRFMsIG9yIENTViBzcHJlYWRzaGVldC4KKiBbWW9tdV0o
aHR0cHM6Ly9naXRodWIuY29tL0Vyb2wveW9tdSkgLSBSZWFkIHRleHQgYW5k
IG1ldGFkYXRhIGZyb20gZmlsZXMgYW5kIGRvY3VtZW50cyAoLmRvYywgLmRv
Y3gsIC5wYWdlcywgLm9kdCwgLnJ0ZiwgLnBkZikuCgojIyBTdGF0ZSBNYWNo
aW5lcwoKKiBbQUFTTV0oaHR0cHM6Ly9naXRodWIuY29tL2Fhc20vYWFzbSkg
LSBTdGF0ZSBtYWNoaW5lcyBmb3IgUnVieSBjbGFzc2VzIChwbGFpbiBSdWJ5
LCBSYWlscyBBY3RpdmUgUmVjb3JkLCBNb25nb2lkKS4KKiBbRmluaXRlTWFj
aGluZV0oaHR0cHM6Ly9naXRodWIuY29tL3BldGVyLW11cmFjaC9maW5pdGVf
bWFjaGluZSkgLSBBIHBsYWluIFJ1Ynkgc3RhdGUgbWFjaGluZSB3aXRoIGEg
c3RyYWlnaHRmb3J3YXJkIGFuZCBleHByZXNzaXZlIHN5bnRheC4KKiBbTWlj
cm9NYWNoaW5lXShodHRwczovL2dpdGh1Yi5jb20vc292ZXJhbi9taWNyb21h
Y2hpbmUpIC0gQSBtaW5pbWFsIGZpbml0ZSBzdGF0ZSBtYWNoaW5lIGltcGxl
bWVudGF0aW9uIGluIGxlc3MgdGhhbiA1MCBsaW5lcyBvZiBjb2RlLgoqIFtz
aW1wbGVfc3RhdGVzXShodHRwczovL2dpdGh1Yi5jb20vc3ZlbmZ1Y2hzL3Np
bXBsZV9zdGF0ZXMpIC0gQSBzdXBlci1zbGltIHN0YXRlbWFjaGluZS1saWtl
IHN1cHBvcnQgbGlicmFyeS4KKiBbU3RhdGVzbWFuXShodHRwczovL2dpdGh1
Yi5jb20vZ29jYXJkbGVzcy9zdGF0ZXNtYW4pIC0gQSBzdGF0ZXNtYW5saWtl
IHN0YXRlIG1hY2hpbmUgbGlicmFyeS4KKiBbc3RhdGVfbWFjaGluZXNdKGh0
dHBzOi8vZ2l0aHViLmNvbS9zdGF0ZS1tYWNoaW5lcy9zdGF0ZV9tYWNoaW5l
cykgLSBBZGRzIHN1cHBvcnQgZm9yIGNyZWF0aW5nIHN0YXRlIG1hY2hpbmVz
IGZvciBhdHRyaWJ1dGVzIG9uIGFueSBSdWJ5IGNsYXNzLgoqIFt0cmFuc2l0
aW9uc10oaHR0cHM6Ly9naXRodWIuY29tL3Ryb2Vzc25lci90cmFuc2l0aW9u
cykgLSBBIHJ1Ynkgc3RhdGUgbWFjaGluZSBpbXBsZW1lbnRhdGlvbi4KKiBb
V29ya2Zsb3ddKGh0dHBzOi8vZ2l0aHViLmNvbS9nZWVrcS93b3JrZmxvdykg
LSBBIGZpbml0ZS1zdGF0ZS1tYWNoaW5lLWluc3BpcmVkIEFQSSBmb3IgbW9k
ZWxpbmcgYW5kIGludGVyYWN0aW5nIHdpdGggd2hhdCB3ZSB0ZW5kIHRvIHJl
ZmVyIHRvIGFzICd3b3JrZmxvdycuCgojIyBTdGF0aWMgU2l0ZSBHZW5lcmF0
aW9uCgoqIFtIaWdoIFZvbHRhZ2VdKGh0dHBzOi8vZ2l0aHViLmNvbS90aG91
Z2h0Ym90L2hpZ2hfdm9sdGFnZSkgLSBFYXNpbHkgaW5jbHVkZSBzdGF0aWMg
cGFnZXMgaW4geW91ciBSYWlscyBhcHAuCiogW0pla3lsbF0oaHR0cHM6Ly9q
ZWt5bGxyYi5jb20pIC0gVHJhbnNmb3JtIHlvdXIgcGxhaW4gdGV4dCBpbnRv
IHN0YXRpYyB3ZWJzaXRlcyBhbmQgYmxvZ3MuCiAgKiBbQXdlc29tZSBKZWt5
bGxdKGh0dHBzOi8vZ2l0aHViLmNvbS9wbGFuZXRqZWt5bGwvYXdlc29tZS1q
ZWt5bGwpIC0gQSBjb2xsZWN0aW9uIG9mIGF3ZXNvbWUgSmVreWxsIHRvb2xz
LCBwbHVnaW5zLCB0aGVtZXMsIGd1aWRlcyBhbmQgbXVjaCBtb3JlLgoqIFtN
aWRkbGVtYW5dKGh0dHA6Ly9taWRkbGVtYW5hcHAuY29tKSAtIEEgc3RhdGlj
IHNpdGUgZ2VuZXJhdG9yIHVzaW5nIGFsbCB0aGUgc2hvcnRjdXRzIGFuZCB0
b29scyBpbiBtb2Rlcm4gd2ViIGRldmVsb3BtZW50LgoqIFtOYW5vY10oaHR0
cDovL25hbm9jLndzLykgLSBBIHN0YXRpYyBzaXRlIGdlbmVyYXRvciwgZml0
IGZvciBidWlsZGluZyBhbnl0aGluZyBmcm9tIGEgc21hbGwgcGVyc29uYWwg
YmxvZyB0byBhIGxhcmdlIGNvcnBvcmF0ZSB3ZWIgc2l0ZS4KKiBbT2N0b3By
ZXNzXShodHRwczovL2dpdGh1Yi5jb20vb2N0b3ByZXNzL29jdG9wcmVzcykg
LSBPY3RvcHJlc3MgaXMgYW4gb2JzZXNzaXZlbHkgZGVzaWduZWQgdG9vbGtp
dCBmb3Igd3JpdGluZyBhbmQgZGVwbG95aW5nIEpla3lsbCBibG9ncy4KKiBb
UGhvdGlzaF0oaHR0cHM6Ly9naXRodWIuY29tL2hlbnJ5bGF3c29uL3Bob3Rp
c2gpIC0gR2VuZXJhdGUgYSBoaWdobHkgY29uZmlndXJhYmxlIHN0YXRpYyB3
ZWJzaXRlIGZyb20gYSBwaG90byBjb2xsZWN0aW9uLgoqIFt3ZWJnZW5dKGh0
dHA6Ly93ZWJnZW4uZ2V0dGFsb25nLm9yZykgLSB3ZWJnZW4gaXMgYSBmYXN0
LCBwb3dlcmZ1bCBhbmQgZXh0ZW5zaWJsZSBzdGF0aWMgd2Vic2l0ZSBnZW5l
cmF0b3IuCgojIyBUZW1wbGF0ZSBFbmdpbmUKCiogW0N1cmx5XShodHRwczov
L2dpdGh1Yi5jb20vemVuZGVzay9jdXJseSkgLSBBIHRlbXBsYXRlIGxhbmd1
YWdlIHRoYXQgY29tcGxldGVseSBzZXBhcmF0ZXMgc3RydWN0dXJlIGFuZCBs
b2dpYy4KKiBbSGFtbF0oaHR0cHM6Ly9naXRodWIuY29tL2hhbWwvaGFtbCkg
LSBIVE1MIEFic3RyYWN0aW9uIE1hcmt1cCBMYW5ndWFnZS4KKiBbTGlxdWlk
XShodHRwczovL2dpdGh1Yi5jb20vU2hvcGlmeS9saXF1aWQpIC0gU2FmZSwg
Y3VzdG9tZXIgZmFjaW5nIHRlbXBsYXRlIGxhbmd1YWdlIGZvciBmbGV4aWJs
ZSB3ZWIgYXBwcy4KKiBbTXVzdGFjaGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9t
dXN0YWNoZS9tdXN0YWNoZSkgLSBMb2dpYy1sZXNzIFJ1YnkgdGVtcGxhdGVz
LgoqIFtTbGltXShodHRwczovL2dpdGh1Yi5jb20vc2xpbS10ZW1wbGF0ZS9z
bGltKSAtIEEgdGVtcGxhdGUgbGFuZ3VhZ2Ugd2hvc2UgZ29hbCBpcyByZWR1
Y2UgdGhlIHN5bnRheCB0byB0aGUgZXNzZW50aWFsIHBhcnRzIHdpdGhvdXQg
YmVjb21pbmcgY3J5cHRpYy4KKiBbVGlsdF0oaHR0cHM6Ly9naXRodWIuY29t
L3J0b21heWtvL3RpbHQpIC0gR2VuZXJpYyBpbnRlcmZhY2UgdG8gbXVsdGlw
bGUgUnVieSB0ZW1wbGF0ZSBlbmdpbmVzLgoKIyMgVGVzdGluZwoKKiBGcmFt
ZXdvcmtzCiAgKiBbUlNwZWNdKGh0dHBzOi8vZ2l0aHViLmNvbS9yc3BlYy9y
c3BlYykgLSBCZWhhdmlvdXIgRHJpdmVuIERldmVsb3BtZW50IGZvciBSdWJ5
LgogICAgKiBGb3JtYXR0ZXJzCiAgICAgICogW0Vtb2ppLVJTcGVjXShodHRw
czovL2dpdGh1Yi5jb20vY3VwYWtyb21lci9lbW9qaS1yc3BlYykgLSBDdXN0
b20gRW1vamkgRm9ybWF0dGVycyBmb3IgUlNwZWMuCiAgICAgICogW0Z1dWJh
cl0oaHR0cHM6Ly9naXRodWIuY29tL3RoZWtvbXBhbmVlL2Z1dWJhcikgLSBU
aGUgaW5zdGFmYWlsaW5nIFJTcGVjIHByb2dyZXNzIGJhciBmb3JtYXR0ZXIu
CiAgICAgICogW055YW4gQ2F0XShodHRwczovL2dpdGh1Yi5jb20vbWF0dHNl
YXJzL255YW4tY2F0LWZvcm1hdHRlcikgLSBOeWFuIENhdCBpbnNwaXJlZCBS
U3BlYyBmb3JtYXR0ZXIhCiAgKiBbQXJ1YmFdKGh0dHBzOi8vZ2l0aHViLmNv
bS9jdWN1bWJlci9hcnViYSkgLSBUZXN0aW5nIGNvbW1hbmQgbGluZSBhcHBs
aWNhdGlvbnMgd2l0aCBjdWN1bWJlciBhbmQgcnNwZWMuCiAgKiBbQmFjb25d
KGh0dHBzOi8vZ2l0aHViLmNvbS9jaG5ldWtpcmNoZW4vYmFjb24pIC0gQSBz
bWFsbCBSU3BlYyBjbG9uZS4KICAqIFtDYXB5YmFyYV0oaHR0cHM6Ly9naXRo
dWIuY29tL3RlYW1jYXB5YmFyYS9jYXB5YmFyYSkgLSBBY2NlcHRhbmNlIHRl
c3QgZnJhbWV3b3JrIGZvciB3ZWIgYXBwbGljYXRpb25zLgogICogW0N1Y3Vt
YmVyXShodHRwczovL2dpdGh1Yi5jb20vY3VjdW1iZXIvY3VjdW1iZXIpIC0g
QkREIHRoYXQgdGFsa3MgdG8gZG9tYWluIGV4cGVydHMgZmlyc3QgYW5kIGNv
ZGUgc2Vjb25kLgogICogW0N1dGVzdF0oaHR0cHM6Ly9naXRodWIuY29tL2Rq
YW5vd3NraS9jdXRlc3QpIC0gSXNvbGF0ZWQgdGVzdHMgaW4gUnVieS4KICAq
IFtIb3dpdHplcl0oaHR0cHM6Ly9naXRodWIuY29tL3N0cm9uZ3FhL2hvd2l0
emVyKSAtIFJ1YnkgYmFzZWQgZnJhbWV3b3JrIGZvciBhY2NlcHRhbmNlIHRl
c3RpbmcKICAqIFtLb25hY2hhXShodHRwczovL2dpdGh1Yi5jb20vamZpcmVi
YXVnaC9rb25hY2hhKSAtIFRlc3QgeW91ciBSYWlscyBhcHBsaWNhdGlvbidz
IEphdmFTY3JpcHQgd2l0aCB0aGUgbW9jaGEgdGVzdCBmcmFtZXdvcmsgYW5k
IGNoYWkgYXNzZXJ0aW9uIGxpYnJhcnkuCiAgKiBbbWluaXRlc3RdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9zZWF0dGxlcmIvbWluaXRlc3QpIC0gbWluaXRlc3Qg
cHJvdmlkZXMgYSBjb21wbGV0ZSBzdWl0ZSBvZiB0ZXN0aW5nIGZhY2lsaXRp
ZXMgc3VwcG9ydGluZyBUREQsIEJERCwgbW9ja2luZywgYW5kIGJlbmNobWFy
a2luZy4KICAqIFtNb2NoYV0oaHR0cHM6Ly9naXRodWIuY29tL2ZyZWVyYW5n
ZS9tb2NoYSkgLSBNb2NoYSBpcyBhIG1vY2tpbmcgYW5kIHN0dWJiaW5nIGxp
YnJhcnkgZm9yIFJ1YnkuCiAgKiBbUlJdKGh0dHBzOi8vZ2l0aHViLmNvbS9y
ci9ycikgLSBBIHRlc3QgZG91YmxlIGZyYW1ld29yayB0aGF0IGZlYXR1cmVz
IGEgcmljaCBzZWxlY3Rpb24gb2YgZG91YmxlIHRlY2huaXF1ZXMgYW5kIGEg
dGVyc2Ugc3ludGF4LgogICogW3Nob3VsZGEtbWF0Y2hlcnNdKGh0dHBzOi8v
Z2l0aHViLmNvbS90aG91Z2h0Ym90L3Nob3VsZGEtbWF0Y2hlcnMpIC0gUHJv
dmlkZXMgVGVzdDo6VW5pdC0gYW5kIFJTcGVjLWNvbXBhdGlibGUgb25lLWxp
bmVycyB0aGF0IHRlc3QgY29tbW9uIFJhaWxzIGZ1bmN0aW9uYWxpdHkuIFRo
ZXNlIHRlc3RzIHdvdWxkIG90aGVyd2lzZSBiZSBtdWNoIGxvbmdlciwgbW9y
ZSBjb21wbGV4LCBhbmQgZXJyb3ItcHJvbmUuCiAgKiBbU3BpbmFjaF0oaHR0
cHM6Ly9naXRodWIuY29tL2NvZGVncmFtL3NwaW5hY2gpIC0gU3BpbmFjaCBp
cyBhIGhpZ2gtbGV2ZWwgQkREIGZyYW1ld29yayB0aGF0IGxldmVyYWdlcyB0
aGUgZXhwcmVzc2l2ZSBHaGVya2luIGxhbmd1YWdlICh1c2VkIGJ5IEN1Y3Vt
YmVyKSB0byBoZWxwIHlvdSBkZWZpbmUgZXhlY3V0YWJsZSBzcGVjaWZpY2F0
aW9ucyBvZiB5b3VyIGFwcGxpY2F0aW9uIG9yIGxpYnJhcnkncyBhY2NlcHRh
bmNlIGNyaXRlcmlhLgogICogW1Nwb3JrXShodHRwczovL2dpdGh1Yi5jb20v
c3BvcmtyYi9zcG9yaykgLSBBIERSYiBzZXJ2ZXIgZm9yIHRlc3RpbmcgZnJh
bWV3b3JrcyAoUlNwZWMgLyBDdWN1bWJlciBjdXJyZW50bHkpLgogICogW1Rl
c3Q6OlVuaXRdKGh0dHA6Ly90ZXN0LXVuaXQuZ2l0aHViLmlvKSAtIFRlc3Q6
OlVuaXQgaXMgYSB4VW5pdCBmYW1pbHkgdW5pdCB0ZXN0aW5nIGZyYW1ld29y
ayBmb3IgUnVieS4KKiBGYWtlIERhdGEKICAqIFtGYWJyaWNhdGlvbl0oaHR0
cDovL2ZhYnJpY2F0aW9uZ2VtLm9yZy8pIC0gQSBzaW1wbGUgYW5kIHBvd2Vy
ZnVsIG9iamVjdCBnZW5lcmF0aW9uIGxpYnJhcnkuCiAgKiBbZmFjdG9yeV9i
b3RdKGh0dHBzOi8vZ2l0aHViLmNvbS90aG91Z2h0Ym90L2ZhY3RvcnlfYm90
KSAtIEEgbGlicmFyeSBmb3Igc2V0dGluZyB1cCBSdWJ5IG9iamVjdHMgYXMg
dGVzdCBkYXRhLgogICogW0Zha2UgUGVyc29uXShodHRwczovL2dpdGh1Yi5j
b20vYWRhbWNvb2tlL2Zha2UtcGVyc29uKSAtIFVzZXMgc29tZSBvZiB0aGUg
bW9zdCBwb3B1bGFyIGdpdmVuICYgc3VybmFtZXMgaW4gdGhlIFVTICYgVUsu
CiAgKiBbZmFrZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9zdHltcHkvZmFrZXIp
IC0gQSBsaWJyYXJ5IGZvciBnZW5lcmF0aW5nIGZha2UgZGF0YSBzdWNoIGFz
IG5hbWVzLCBhZGRyZXNzZXMsIGFuZCBwaG9uZSBudW1iZXJzLgogICogW2Zm
YWtlcl0oaHR0cHM6Ly9naXRodWIuY29tL2ZmYWtlci9mZmFrZXIpIC0gQSBm
YXN0ZXIgRmFrZXIsIGdlbmVyYXRlcyBkdW1teSBkYXRhLCByZXdyaXRlIG9m
IGZha2VyLgogICogW0ZvcmdlcnldKGh0dHBzOi8vZ2l0aHViLmNvbS9zZXZl
bndpcmUvZm9yZ2VyeSkgLSBFYXN5IGFuZCBjdXN0b21pemFibGUgZ2VuZXJh
dGlvbiBvZiBmb3JnZWQgZGF0YS4KICAqIFtNYWNoaW5pc3RdKGh0dHBzOi8v
Z2l0aHViLmNvbS9ub3RhaGF0L21hY2hpbmlzdCkgLSBGaXh0dXJlcyBhcmVu
J3QgZnVuLiBNYWNoaW5pc3QgaXMuCiogTW9jawogICogW0FjdGl2ZU1vY2tl
cl0oaHR0cHM6Ly9naXRodWIuY29tL3plaXNsZXIvYWN0aXZlX21vY2tlcikg
LSBHZW5lcmF0ZSBtb2NrcyBmcm9tIEFjdGl2ZVJlY29yZCBtb2RlbHMgZm9y
IHVuaXQgdGVzdHMgdGhhdCBydW4gZmFzdCBiZWNhdXNlIHRoZXkgZG9u4oCZ
dCBuZWVkIHRvIGxvYWQgUmFpbHMgb3IgYSBkYXRhYmFzZS4KICAqIFtEdWNr
UmFpbHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9pcmlkYWtvcy9kdWNrcmFpbHMp
IC0gVG9vbCBmb3IgbW9ja2luZyBBUEkgZW5kcG9pbnRzIHF1aWNrbHkgJiBk
eW5hbWljYWxseS4KICAqIFtUZXN0WG1sXShodHRwczovL2dpdGh1Yi5jb20v
YWxvdmFrL3Rlc3RfeG1sKSAtIFRlc3RYbWwgaXMgYSBzbWFsbCBleHRlbnNp
b24gZm9yIHRlc3RpbmcgWE1ML0hUTUwuCiAgKiBbV2ViTW9ja10oaHR0cHM6
Ly9naXRodWIuY29tL2JibGlta2Uvd2VibW9jaykgLSBMaWJyYXJ5IGZvciBz
dHViYmluZyBhbmQgc2V0dGluZyBleHBlY3RhdGlvbnMgb24gSFRUUCByZXF1
ZXN0cy4KKiBXZWJEcml2ZXJzCiAgKiBbU2VsZW5pdW0gV2ViRHJpdmVyXSho
dHRwczovL2dpdGh1Yi5jb20vU2VsZW5pdW1IUS9zZWxlbml1bS90cmVlL21h
c3Rlci9yYikgLSBSdWJ5IGJpbmRpbmdzIGZvciBXZWJEcml2ZXIuCiAgKiBb
QVBJIFRhc3Rlcl0oaHR0cHM6Ly9naXRodWIuY29tL2ZyZWR3dS9hcGlfdGFz
dGVyKSAtIEEgcXVpY2sgYW5kIGVhc3kgd2F5IHRvIHZpc3VhbGx5IHRlc3Qg
eW91ciBSYWlscyBhcHBsaWNhdGlvbidzIEFQSS4KICAqIFtQb2x0ZXJnZWlz
dF0oaHR0cHM6Ly9naXRodWIuY29tL3RlYW1wb2x0ZXJnZWlzdC9wb2x0ZXJn
ZWlzdCkgLSBBIFBoYW50b21KUyBkcml2ZXIgZm9yIENhcHliYXJhLgogICog
W1dhdGlyXShodHRwczovL2dpdGh1Yi5jb20vd2F0aXIvd2F0aXIvKSAtIFdl
YiBhcHBsaWNhdGlvbiB0ZXN0aW5nIGluIFJ1YnkuCiogRXh0cmEKICAqIFtB
cHByYWlzYWxdKGh0dHBzOi8vZ2l0aHViLmNvbS90aG91Z2h0Ym90L2FwcHJh
aXNhbCkgLSBBcHByYWlzYWwgaW50ZWdyYXRlcyB3aXRoIGJ1bmRsZXIgYW5k
IHJha2UgdG8gdGVzdCB5b3VyIGxpYnJhcnkgYWdhaW5zdCBkaWZmZXJlbnQg
dmVyc2lvbnMgb2YgZGVwZW5kZW5jaWVzLgogICogW2dpdGFycm9dKGh0dHBz
Oi8vZ2l0aHViLmNvbS9vcGVuU1VTRS9naXRhcnJvKSAtIFJ1biwgcmV0cmln
Z2VyLCBoYW5kbGUgYWxsIHR5cGUgYW5kIE9TLWluZGVwZW5kZW50IHRlc3Rz
IGFnYWluc3QgeW91ciBHaXRIdWIgUHVsbCBSZXF1ZXN0cy4KICAqIFtLbmFw
c2Fja10oaHR0cHM6Ly9naXRodWIuY29tL0FydHVyVC9rbmFwc2FjaykgLSBP
cHRpbWFsIHRlc3Qgc3VpdGUgcGFyYWxsZWxpc2F0aW9uIGFjcm9zcyBDSSBu
b2RlcyBmb3IgUlNwZWMsIEN1Y3VtYmVyLCBNaW5pdGVzdCwgU3BpbmFjaCBh
bmQgVHVybmlwLgogICogW211dGFudF0oaHR0cHM6Ly9naXRodWIuY29tL21i
ai9tdXRhbnQpIC0gTXV0YW50IGlzIGEgbXV0YXRpb24gdGVzdGluZyB0b29s
IGZvciBSdWJ5LgogICogW1BhcmFsbGVsIFRlc3RzXShodHRwczovL2dpdGh1
Yi5jb20vZ3Jvc3Nlci9wYXJhbGxlbF90ZXN0cykgLSBTcGVlZHVwIFRlc3Q6
OlVuaXQgKyBSU3BlYyArIEN1Y3VtYmVyIGJ5IHJ1bm5pbmcgcGFyYWxsZWwg
b24gbXVsdGlwbGUgQ1BVcyAob3IgY29yZXMpLgogICogW3Bvd2VyX2Fzc2Vy
dF0oaHR0cHM6Ly9naXRodWIuY29tL2stdHNqL3Bvd2VyX2Fzc2VydCkgLSBQ
b3dlciBBc3NlcnQgZm9yIFJ1YnkuCiAgKiBbUnVieS1KTWV0ZXJdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9mbG9vZC1pby9ydWJ5LWptZXRlcikgLSBBIFJ1Ynkg
YmFzZWQgRFNMIGZvciBidWlsZGluZyBKTWV0ZXIgdGVzdCBwbGFucy4KICAq
IFtTcHJpbmddKGh0dHBzOi8vZ2l0aHViLmNvbS9yYWlscy9zcHJpbmcpIC0g
UHJlbG9hZHMgeW91ciByYWlscyBlbnZpcm9ubWVudCBpbiB0aGUgYmFja2dy
b3VuZCBmb3IgZmFzdGVyIHRlc3RpbmcgYW5kIFJha2UgdGFza3MuCiAgKiBb
dGltZWNvcF0oaHR0cHM6Ly9naXRodWIuY29tL3RyYXZpc2plZmZlcnkvdGlt
ZWNvcCkgLSBQcm92aWRlcyAidGltZSB0cmF2ZWwiIGFuZCAidGltZSBmcmVl
emluZyIgY2FwYWJpbGl0aWVzLCBtYWtpbmcgaXQgZGVhZCBzaW1wbGUgdG8g
dGVzdCB0aW1lLWRlcGVuZGVudCBjb2RlLgogICogW3Zjcl0oaHR0cHM6Ly9n
aXRodWIuY29tL3Zjci92Y3IpIC0gUmVjb3JkIHlvdXIgdGVzdCBzdWl0ZSdz
IEhUVFAgaW50ZXJhY3Rpb25zIGFuZCByZXBsYXkgdGhlbSBkdXJpbmcgZnV0
dXJlIHRlc3QgcnVucyBmb3IgZmFzdCwgZGV0ZXJtaW5pc3RpYywgYWNjdXJh
dGUgdGVzdHMuCiAgKiBbWmFwYXRhXShodHRwczovL2dpdGh1Yi5jb20vTmVk
b21hcy96YXBhdGEpIC0gV2hvIGhhcyB0aW1lIHRvIHdyaXRlIHRlc3RzPyBU
aGlzIGlzIGEgcmV2b2x1dGlvbmFyeSB0b29sIHRvIG1ha2UgdGhlbSB3cml0
ZSB0aGVtc2VsdmVzLgoKIyMgVGhpcmQtcGFydHkgQVBJcwoKKiBbZGlzY29y
ZHJiXShodHRwczovL2dpdGh1Yi5jb20vbWVldzAvZGlzY29yZHJiKSAtIEFu
IGltcGxlbWVudGF0aW9uIG9mIHRoZSBEaXNjb3JkIEFQSS4KKiBbRHJvcGJv
eF0oaHR0cHM6Ly9naXRodWIuY29tL0plc3VzL2Ryb3Bib3hfYXBpKSAtIFJ1
YnkgY2xpZW50IGZvciBEcm9wYm94IEFQSSB2Mi4KKiBbZmFjeV0oaHR0cHM6
Ly9naXRodWIuY29tL2h1eWR4L2ZhY3kpIC0gQ29tbWFuZCBsaW5lIHBvd2Vy
IHRvb2wgZm9yIGZhY2Vib29rLgoqIFtmYl9ncmFwaDJdKGh0dHBzOi8vZ2l0
aHViLmNvbS9ub3YvZmJfZ3JhcGgyKSAtIEEgZnVsbC1zdGFjayBGYWNlYm9v
ayBHcmFwaCBBUEkgd3JhcHBlci4KKiBbZmxpY2tyXShodHRwczovL2dpdGh1
Yi5jb20vUmFWYmFrZXIvZmxpY2tyKSAtIEEgUnVieSBpbnRlcmZhY2UgdG8g
dGhlIEZsaWNrciBBUEkuCiogW2dpdGxhYl0oaHR0cHM6Ly9naXRodWIuY29t
L05BUktPWi9naXRsYWIpIC0gUnVieSB3cmFwcGVyIGFuZCBDTEkgZm9yIHRo
ZSBHaXRMYWIgQVBJLgoqIFtnb29nbGUtYXBpLWFkcy1ydWJ5XShodHRwczov
L2dpdGh1Yi5jb20vZ29vZ2xlYWRzL2dvb2dsZS1hcGktYWRzLXJ1YnkpIC0g
R29vZ2xlIEFkd29yZHMgUnVieSBjbGllbnQKKiBbZ21haWxdKGh0dHBzOi8v
Z2l0aHViLmNvbS9nbWFpbGdlbS9nbWFpbCkgLSBBIFJ1Ynllc3F1ZSBpbnRl
cmZhY2UgdG8gR21haWwsIHdpdGggYWxsIHRoZSB0b29scyB5b3UnbGwgbmVl
ZC4KKiBbaGlwY2hhdC1yYl0oaHR0cHM6Ly9naXRodWIuY29tL2hpcGNoYXQv
aGlwY2hhdC1yYikgLSBIaXBDaGF0IEhUVFAgQVBJIFdyYXBwZXIgaW4gUnVi
eSB3aXRoIENhcGlzdHJhbm8gaG9va3MuCiogW2luc3RhZ3JhbS1ydWJ5LWdl
bV0oaHR0cHM6Ly9naXRodWIuY29tL0luc3RhZ3JhbS9pbnN0YWdyYW0tcnVi
eS1nZW0pIC0gVGhlIG9mZmljaWFsIGdlbSBmb3IgdGhlIEluc3RhZ3JhbSBS
RVNUIGFuZCBTZWFyY2ggQVBJcy4KKiBbaXR1bmVzX3N0b3JlX3RyYW5zcG9y
dGVyXShodHRwczovL2dpdGh1Yi5jb20vc3NoYXcvaXR1bmVzX3N0b3JlX3Ry
YW5zcG9ydGVyKSAtIFJ1Ynkgd3JhcHBlciBhcm91bmQgQXBwbGUncyBpVE1T
VHJhbnNwb3J0ZXIgcHJvZ3JhbS4KKiBbbGlua2VkaW5dKGh0dHBzOi8vZ2l0
aHViLmNvbS9oZXhnbnUvbGlua2VkaW4pIC0gUHJvdmlkZXMgYW4gZWFzeS10
by11c2Ugd3JhcHBlciBmb3IgTGlua2VkSW4ncyBSRVNUIEFQSXMuCiogW09j
dG9raXRdKGh0dHA6Ly9vY3Rva2l0LmdpdGh1Yi5pby9vY3Rva2l0LnJiKSAt
IFJ1YnkgdG9vbGtpdCBmb3IgdGhlIEdpdEh1YiBBUEkuCiogW1B1c2hlcl0o
aHR0cHM6Ly9naXRodWIuY29tL3B1c2hlci9wdXNoZXItaHR0cC1ydWJ5KSAt
IFJ1Ynkgc2VydmVyIGxpYnJhcnkgZm9yIHRoZSBQdXNoZXIgQVBJLgoqIFtS
ZXN0Zm9yY2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9lamhvbG1lcy9yZXN0Zm9y
Y2UpIC0gQSBSdWJ5IGNsaWVudCBmb3IgdGhlIFNhbGVzZm9yY2UgUkVTVCBh
cGkuCiogW3J1YnktZ21haWxdKGh0dHBzOi8vZ2l0aHViLmNvbS9kY3Bhcmtl
ci9ydWJ5LWdtYWlsKSAtIEEgUnVieWVzcXVlIGludGVyZmFjZSB0byBHbWFp
bC4KKiBbcnVieS10cmVsbG9dKGh0dHBzOi8vZ2l0aHViLmNvbS9qZXJlbXl0
cmVndW5uYS9ydWJ5LXRyZWxsbykgLSBJbXBsZW1lbnRhdGlvbiBvZiB0aGUg
VHJlbGxvIEFQSSBmb3IgUnVieS4KKiBbc2ltcGxlLXNsYWNrLWJvdF0oaHR0
cHM6Ly9naXRodWIuY29tL2tjaXRlci9zaW1wbGUtc2xhY2stYm90KSAtIFlv
dSBjYW4gZWFzaWx5IG1ha2UgU2xhY2sgQm90LgoqIFtTbGFjayBOb3RpZmll
cl0oaHR0cHM6Ly9naXRodWIuY29tL3N0ZXZlbm9zbG9hbi9zbGFjay1ub3Rp
ZmllcikgLSBBIHNpbXBsZSB3cmFwcGVyIGZvciBwb3N0aW5nIHRvIFNsYWNr
IGNoYW5uZWxzLgoqIFtTbGFjayBydWJ5IGdlbV0oaHR0cHM6Ly9naXRodWIu
Y29tL2FraTAxNy9zbGFjay1ydWJ5LWdlbSkgLSBBIFJ1Ynkgd3JhcHBlciBm
b3IgdGhlIFNsYWNrIEFQSS4KKiBbc291bmRjbG91ZC1ydWJ5XShodHRwczov
L2dpdGh1Yi5jb20vc291bmRjbG91ZC9zb3VuZGNsb3VkLXJ1YnkpIC0gT2Zm
aWNpYWwgU291bmRDbG91ZCBBUEkgV3JhcHBlciBmb3IgUnVieS4KKiBbdF0o
aHR0cHM6Ly9naXRodWIuY29tL3NmZXJpay90KSAtIEEgY29tbWFuZC1saW5l
IHBvd2VyIHRvb2wgZm9yIFR3aXR0ZXIuCiogW3RlcmppcmFdKGh0dHBzOi8v
Z2l0aHViLmNvbS9rZWVwY29zbW9zL3RlcmppcmEpIC0gQSBjb21tYW5kLWxp
bmUgcG93ZXIgdG9vbCBmb3IgSmlyYS4KKiBbdHdlZXRzdHJlYW1dKGh0dHBz
Oi8vZ2l0aHViLmNvbS90d2VldHN0cmVhbS90d2VldHN0cmVhbSkgLSBBIHNp
bXBsZSBsaWJyYXJ5IGZvciBjb25zdW1pbmcgVHdpdHRlcidzIFN0cmVhbWlu
ZyBBUEkuCiogW3R3aWxpby1ydWJ5XShodHRwczovL2dpdGh1Yi5jb20vdHdp
bGlvL3R3aWxpby1ydWJ5KSAtIEEgbW9kdWxlIGZvciB1c2luZyB0aGUgVHdp
bGlvIFJFU1QgQVBJIGFuZCBnZW5lcmF0aW5nIHZhbGlkIFR3aU1MLgoqIFt0
d2l0dGVyXShodHRwczovL2dpdGh1Yi5jb20vc2ZlcmlrL3R3aXR0ZXIpIC0g
QSBSdWJ5IGludGVyZmFjZSB0byB0aGUgVHdpdHRlciBBUEkuCiogW3dpa2lw
ZWRpYV0oaHR0cHM6Ly9naXRodWIuY29tL2tlbnByYXR0L3dpa2lwZWRpYS1j
bGllbnQpIC0gUnVieSBjbGllbnQgZm9yIHRoZSBXaWtpcGVkaWEgQVBJLgoq
IFtZdF0oaHR0cHM6Ly9naXRodWIuY29tL0Z1bGxzY3JlZW4veXQpIC0gQW4g
b2JqZWN0LW9yaWVudGVkIFJ1YnkgY2xpZW50IGZvciBZb3VUdWJlIEFQSSBW
My4KCiMjIFZpZGVvCgoqIFtTdHJlYW1pbyBGRk1QRUddKGh0dHBzOi8vZ2l0
aHViLmNvbS9zdHJlYW1pby9zdHJlYW1pby1mZm1wZWcpIC0gU2ltcGxlIHll
dCBwb3dlcmZ1bCB3cmFwcGVyIGFyb3VuZCB0aGUgZmZtcGVnIGNvbW1hbmQg
Zm9yIHJlYWRpbmcgbWV0YWRhdGEgYW5kIHRyYW5zY29kaW5nIG1vdmllcy4K
KiBbVmlkZW8gVHJhbnNjb2RpbmddKGh0dHBzOi8vZ2l0aHViLmNvbS9kb25t
ZWx0b24vdmlkZW9fdHJhbnNjb2RpbmcpIC0gVG9vbHMgdG8gdHJhbnNjb2Rl
LCBpbnNwZWN0IGFuZCBjb252ZXJ0IHZpZGVvcy4KCiMjIFZpZXcgaGVscGVy
cwoKKiBbYXV0b19odG1sXShodHRwczovL2dpdGh1Yi5jb20vZGVqYW4vYXV0
b19odG1sKSAtIFJhaWxzIGV4dGVuc2lvbiBmb3IgdHJhbnNmb3JtaW5nIFVS
THMgdG8gYXBwcm9wcmlhdGUgcmVzb3VyY2UgKGltYWdlLCBsaW5rLCBZb3VU
dWJlLCBWaW1lbyB2aWRlby4uLikuCiogW0JoXShodHRwczovL2dpdGh1Yi5j
b20vZnVsbHNjcmVlbi9iaCkgLSBCb290c3RyYXAgSGVscGVycyBmb3IgUnVi
eS4KKiBbZ29uXShodHRwczovL2dpdGh1Yi5jb20vZ2F6YXkvZ29uKSAtIElm
IHlvdSBuZWVkIHRvIHNlbmQgc29tZSBkYXRhIHRvIHlvdXIganMgZmlsZXMg
YW5kIHlvdSBkb24ndCB3YW50IHRvIGRvIHRoaXMgd2l0aCBsb25nIHdheSB0
aHJvdWdoIHZpZXdzIGFuZCBwYXJzaW5nIC0gdXNlIGdvbi4KKiBbS29tcG9u
ZW50XShodHRwczovL2dpdGh1Yi5jb20va29tcG9zYWJsZS9rb21wb25lbnQp
IC0gQW4gb3BpbmlvbmF0ZWQgd2F5IG9mIG9yZ2FuaXppbmcgZnJvbnQtZW5k
IGNvZGUgaW4gUmFpbHMsIGJhc2VkIG9uIGNvbXBvbmVudHMuCiogW1BsdWdn
YWJsZUpzXShodHRwczovL2dpdGh1Yi5jb20vcGVyZXNsZWd1aW5lL3BsdWdn
YWJsZV9qcykgLSBQYWdlLXNwZWNpZmljIGphdmFzY3JpcHQgZm9yIFJhaWxz
IGFwcGxpY2F0aW9ucyB3aXRoIHRoZSBhYmlsaXR5IG9mIHBhc3NpbmcgZGF0
YSBmcm9tIGEgY29udHJvbGxlci4KKiBbcmVuZGVyX2FzeW5jXShodHRwczov
L2dpdGh1Yi5jb20vcmVuZGVyZWR0ZXh0L3JlbmRlcl9hc3luYykgLSBSZW5k
ZXIgcGFydGlhbHMgdG8geW91ciB2aWV3cyBhc3luY2hyb25vdXNseSBhbmQg
aW5jcmVhc2UgbG9hZCBwZXJmb3JtYW5jZSBvZiB5b3VyIHBhZ2VzLgoKIyMg
V2ViIENyYXdsaW5nCgoqIFthbmVtb25lXShodHRwczovL2dpdGh1Yi5jb20v
Y2hyaXNraXRlL2FuZW1vbmUpIC0gUnVieSBsaWJyYXJ5IGFuZCBDTEkgZm9y
IGNyYXdsaW5nIHdlYnNpdGVzLgoqIFtMaW5rVGh1bWJuYWlsZXJdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9nb3R0ZnJvaXMvbGlua190aHVtYm5haWxlcikgLSBS
dWJ5IGdlbSB0aGF0IGdlbmVyYXRlcyB0aHVtYm5haWwgaW1hZ2VzIGFuZCB2
aWRlb3MgZnJvbSBhIGdpdmVuIFVSTC4gTXVjaCBsaWtlIHBvcHVsYXIgc29j
aWFsIHdlYnNpdGUgd2l0aCBsaW5rIHByZXZpZXcuCiogW01lY2hhbml6ZV0o
aHR0cHM6Ly9naXRodWIuY29tL3NwYXJrbGVtb3Rpb24vbWVjaGFuaXplKSAt
IE1lY2hhbml6ZSBpcyBhIHJ1YnkgbGlicmFyeSB0aGF0IG1ha2VzIGF1dG9t
YXRlZCB3ZWIgaW50ZXJhY3Rpb24gZWFzeS4KKiBbTWV0YUluc3BlY3Rvcl0o
aHR0cHM6Ly9naXRodWIuY29tL2phaW1laW5pZXN0YS9tZXRhaW5zcGVjdG9y
KSAtIFJ1YnkgZ2VtIGZvciB3ZWIgc2NyYXBpbmcgcHVycG9zZXMuCiogW1Nw
aWRyXShodHRwczovL2dpdGh1Yi5jb20vcG9zdG1vZGVybi9zcGlkcikgLSBB
IHZlcnNhdGlsZSBSdWJ5IHdlYiBzcGlkZXJpbmcgbGlicmFyeSB0aGF0IGNh
biBzcGlkZXIgYSBzaXRlLCBtdWx0aXBsZSBkb21haW5zLCBjZXJ0YWluIGxp
bmtzIG9yIGluZmluaXRlbHkuIFNwaWRyIGlzIGRlc2lnbmVkIHRvIGJlIGZh
c3QgYW5kIGVhc3kgdG8gdXNlLgoqIFtVcHRvbl0oaHR0cHM6Ly9naXRodWIu
Y29tL3Byb3B1YmxpY2EvdXB0b24pIC0gQSBiYXR0ZXJpZXMtaW5jbHVkZWQg
ZnJhbWV3b3JrIGZvciBlYXN5IHdlYi1zY3JhcGluZy4KKiBbV29tYmF0XSho
dHRwczovL2dpdGh1Yi5jb20vZmVsaXBlY3NsL3dvbWJhdCkgLSBXZWIgc2Ny
YXBlciB3aXRoIGFuIGVsZWdhbnQgRFNMIHRoYXQgcGFyc2VzIHN0cnVjdHVy
ZWQgZGF0YSBmcm9tIHdlYiBwYWdlcy4KCiMjIFdlYiBGcmFtZXdvcmtzCgoq
IFtDYW1waW5nXShodHRwczovL2dpdGh1Yi5jb20vY2FtcGluZy9jYW1waW5n
KSAtIEEgd2ViIG1pY3JvZnJhbWV3b3JrIHdoaWNoIGNvbnNpc3RlbnRseSBz
dGF5cyBhdCBsZXNzIHRoYW4gNGtCIG9mIGNvZGUuCiogW0N1YmFdKGh0dHA6
Ly9jdWJhLmlzKSAtIEEgbWljcm9mcmFtZXdvcmsgZm9yIHdlYiBkZXZlbG9w
bWVudC4KKiBbSG9iYml0XShodHRwczovL2dpdGh1Yi5jb20vcGF0cmljaW9t
YWNhZGRlbi9ob2JiaXQpIC0gQSBtaW5pbWFsaXN0aWMgbWljcm9mcmFtZXdv
cmsgYnVpbHQgb24gdG9wIG9mIFJhY2suCiogW0hhbmFtaV0oaHR0cDovL2hh
bmFtaXJiLm9yZykgLSBJdCBhaW1zIHRvIGJyaW5nIGJhY2sgT2JqZWN0IE9y
aWVudGVkIFByb2dyYW1taW5nIHRvIHdlYiBkZXZlbG9wbWVudCwgbGV2ZXJh
Z2luZyBvbiBhIHN0YWJsZSBBUEksIGEgbWluaW1hbCBEU0wsIGFuZCBwbGFp
biBvYmplY3RzLgoqIFtIeXBlcnN0YWNrXShodHRwczovL2h5cGVyc3RhY2su
b3JnLykgLSBBIENvbXBsZXRlIElzb21vcnBoaWMgUnVieSBGcmFtZXdvcmsg
dXNpbmcgUmVhY3QgYW5kIE9wYWwuCiogW1BhZHJpbm9dKGh0dHA6Ly93d3cu
cGFkcmlub3JiLmNvbSkgLSBBIGZ1bGwtc3RhY2sgcnVieSBmcmFtZXdvcmsg
YnVpbHQgdXBvbiBTaW5hdHJhLgoqIFtQYWt5b3ddKGh0dHBzOi8vd3d3LnBh
a3lvdy5vcmcvKSAtIEEgZnJhbWV3b3JrIGZvciBidWlsZGluZyBtb2Rlcm4g
d2ViLWFwcHMgaW4gUnVieS4gSXQgaGVscHMgeW91IGJ1aWxkIHdvcmtpbmcg
c29mdHdhcmUgZmFzdGVyIHdpdGggYSBkZXZlbG9wbWVudCBwcm9jZXNzIHRo
YXQgcmVtYWlucyBmcmllbmRseSB0byBib3RoIGRlc2lnbmVycyBhbmQgZGV2
ZWxvcGVycy4KKiBbUmFjazo6QXBwXShodHRwczovL2dpdGh1Yi5jb20vcmFj
ay1hcHAvcmFjay1hcHApIC0gQmFyZSBib25lIG1pbmltYWxpc3RpYyBmcmFt
ZXdvcmsgZm9yIGJ1aWxkaW5nIHJhY2sgYXBwcy4KKiBbUmFtYXplXShodHRw
Oi8vcmFtYXplLm5ldC8pIC0gQSBzaW1wbGUsIGxpZ2h0IGFuZCBtb2R1bGFy
IG9wZW4tc291cmNlIHdlYiBhcHBsaWNhdGlvbiBmcmFtZXdvcmsgd3JpdHRl
biBpbiBSdWJ5LgoqIFtSb2RhXShodHRwOi8vcm9kYS5qZXJlbXlldmFucy5u
ZXQvKSAtIEEgcm91dGluZyB0cmVlIHdlYiBmcmFtZXdvcmsuCiogW1J1Ynkg
b24gUmFpbHNdKGh0dHA6Ly9ydWJ5b25yYWlscy5vcmcpIC0gQSB3ZWItYXBw
bGljYXRpb24gZnJhbWV3b3JrIHRoYXQgaW5jbHVkZXMgZXZlcnl0aGluZyBu
ZWVkZWQgdG8gY3JlYXRlIGRhdGFiYXNlLWJhY2tlZCB3ZWIgYXBwbGljYXRp
b25zIGFjY29yZGluZyB0byB0aGUgTW9kZWwtVmlldy1Db250cm9sbGVyIChN
VkMpIHBhdHRlcm4uCiogW1Njb3JjaGVkXShodHRwOi8vc2NvcmNoZWRyYi5j
b20pIC0gTGlnaHQtd2VpZ2h0LCBpbmhlcml0YWJsZSBhbmQgY29tcG9zYWJs
ZSB3ZWIgZnJhbWV3b3JrLCBpbnNwaXJlZCBieSBTaW5hdHJhLgoqIFtTaW5h
dHJhXShodHRwOi8vd3d3LnNpbmF0cmFyYi5jb20pIC0gQ2xhc3N5IHdlYi1k
ZXZlbG9wbWVudCBkcmVzc2VkIGluIGEgRFNMLgoqIFtTeXJvXShodHRwczov
L2dpdGh1Yi5jb20vc292ZXJhbi9zeXJvLykgLSBTaW1wbGUgcm91dGVyIGZv
ciB3ZWIgYXBwbGljYXRpb25zLgoqIFtWb2x0XShodHRwczovL2dpdGh1Yi5j
b20vdm9sdHJiL3ZvbHQpIC0gQSBSdWJ5IHdlYiBmcmFtZXdvcmsgd2hlcmUg
eW91ciBydWJ5IGNvZGUgcnVucyBvbiBib3RoIHRoZSBzZXJ2ZXIgYW5kIHRo
ZSBjbGllbnQuCgojIyBXZWIgU2VydmVycwoKKiBbQWdvb10oaHR0cHM6Ly9n
aXRodWIuY29tL29obGVyNTUvYWdvbykgLSBBIGhpZ2ggcGVyZm9ybWFuY2Ug
SFRUUCBzZXJ2ZXIgZm9yIFJ1YnkgdGhhdCBpbmNsdWRlcyBHcmFwaFFMIGFu
ZCBXZWJTb2NrZXQgc3VwcG9ydC4KKiBbR29saWF0aF0oaHR0cHM6Ly9naXRo
dWIuY29tL3Bvc3RyYW5rLWxhYnMvZ29saWF0aCkgLSBBIG5vbi1ibG9ja2lu
ZyBSdWJ5IHdlYiBzZXJ2ZXIgZnJhbWV3b3JrLgoqIFtJb2RpbmVdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9ib2F6c2VnZXYvaW9kaW5lKSAtIEFuIG5vbi1ibG9j
a2luZyBIVFRQIGFuZCBXZWJzb2NrZXQgd2ViIHNlcnZlciBvcHRpbWl6ZWQg
Zm9yIExpbnV4L0JEUy9tYWNPUyBhbmQgUnVieSBNUkkuCiogW1BodXNpb24g
UGFzc2VuZ2VyXShodHRwczovL3d3dy5waHVzaW9ucGFzc2VuZ2VyLmNvbSkg
LSBGYXN0IGFuZCByb2J1c3Qgd2ViIHNlcnZlciBhbmQgYXBwbGljYXRpb24g
c2VydmVyLgoqIFtQdW1hXShodHRwczovL2dpdGh1Yi5jb20vcHVtYS9wdW1h
KSAtIEEgbW9kZXJuLCBjb25jdXJyZW50IHdlYiBzZXJ2ZXIgZm9yIFJ1Ynku
CiogW1JhY2tdKGh0dHA6Ly9yYWNrLmdpdGh1Yi5pbykgLSBBIGNvbW1vbiBS
dWJ5IHdlYiBzZXJ2ZXIgaW50ZXJmYWNlLiBCeSBpdHNlbGYsIGl0J3MganVz
dCBhIHNwZWNpZmljYXRpb24gYW5kIHV0aWxpdHkgbGlicmFyeSwgYnV0IGFs
bCBSdWJ5IHdlYiBzZXJ2ZXJzIGltcGxlbWVudCB0aGlzIGludGVyZmFjZS4K
KiBbUmVlbF0oaHR0cHM6Ly9naXRodWIuY29tL2NlbGx1bG9pZC9yZWVsKSAt
IENlbGx1bG9pZDo6SU8tcG93ZXJlZCB3ZWIgc2VydmVyLgoqIFtUaGluXSho
dHRwOi8vY29kZS5tYWNvdXJub3llci5jb20vdGhpbikgLSBUaW55LCBmYXN0
ICYgZnVubnkgSFRUUCBzZXJ2ZXIuCiogW1RvcnF1ZUJveF0oaHR0cHM6Ly9n
aXRodWIuY29tL3RvcnF1ZWJveC90b3JxdWVib3gpIC0gQSBSdWJ5IGFwcGxp
Y2F0aW9uIHNlcnZlciBidWlsdCBvbiBKQm9zcyBBUzcgYW5kIEpSdWJ5Lgoq
IFtVbmljb3JuXShodHRwOi8vdW5pY29ybi5ib2dvbWlwcy5vcmcpIC0gUmFj
ayBIVFRQIHNlcnZlciBmb3IgZmFzdCBjbGllbnRzIGFuZCBVbml4LgoKIyMg
V2ViU29ja2V0CgoqIFtBbnlDYWJsZV0oaHR0cDovL2FueWNhYmxlLmlvKSDi
gJPCoFBvbHlnbG90IHJlcGxhY2VtZW50IGZvciBSdWJ5IFdlYlNvY2tldCBz
ZXJ2ZXJzIHdpdGggQWN0aW9uIENhYmxlIHByb3RvY29sLgoqIFtGYXllXSho
dHRwOi8vZmF5ZS5qY29nbGFuLmNvbS9ydWJ5Lmh0bWwpIC0gQSBzZXQgb2Yg
dG9vbHMgZm9yIHNpbXBsZSBwdWJsaXNoLXN1YnNjcmliZSBtZXNzYWdpbmcg
YmV0d2VlbiB3ZWIgY2xpZW50cy4KKiBbRmlyZWhvc2VdKGh0dHBzOi8vZ2l0
aHViLmNvbS9maXJlaG9zZWlvL2ZpcmVob3NlKSAtIEJ1aWxkIHJlYWx0aW1l
IFJ1Ynkgd2ViIGFwcGxpY2F0aW9ucy4KKiBbU2xhbmdlcl0oaHR0cHM6Ly9n
aXRodWIuY29tL3N0ZXZlZ3JhaGFtL3NsYW5nZXIpIC0gT3BlbiBQdXNoZXIg
aW1wbGVtZW50YXRpb24gY29tcGF0aWJsZSB3aXRoIFB1c2hlciBsaWJyYXJp
ZXMuCiogW1JlbmRlclN5bmNdKGh0dHBzOi8vZ2l0aHViLmNvbS9jaHJpc21j
Y29yZC9yZW5kZXJfc3luYykgLSBSZWFsLXRpbWUgUmFpbHMgUGFydGlhbHMu
CiogW1dlYnNvY2tldC1SYWlsc10oaHR0cHM6Ly9naXRodWIuY29tL3dlYnNv
Y2tldC1yYWlscy93ZWJzb2NrZXQtcmFpbHMpIC0gQ3JlYXRlcyBhIGJ1aWx0
IGluIFdlYlNvY2tldCBzZXJ2ZXIgaW5zaWRlIGEgUmFpbHMgYXBwbGljYXRp
b24gd2l0aCBlYXNlLCBhbmQgYWxzbyBzdXBwb3J0IHN0cmVhbWluZyBIVFRQ
LgoKIyBTZXJ2aWNlcyBhbmQgQXBwcwoKT25saW5lIHRvb2xzLCBzZXJ2aWNl
cyBhbmQgQVBJcyB0byBzaW1wbGlmeSBkZXZlbG9wbWVudC4KCiogW0FwcFNp
Z25hbF0oaHR0cHM6Ly9hcHBzaWduYWwuY29tKSAtIEJldHRlciBtb25pdG9y
aW5nIGZvciB5b3VyIFJhaWxzIGFwcGxpY2F0aW9ucy4KKiBbQ29kYWN5XSho
dHRwczovL3d3dy5jb2RhY3kuY29tKSAtIEF1dG9tYXRlZCBDb2RlIFJldmll
dyBmb3IgUnVieSwgUmFpbHMsIEpTLCBQSFAsIFB5dGhvbiBldGMuIFNlY3Vy
aXR5LCBDb3ZlcmFnZSAmIFF1YWxpdHkuCiogW0NvZGVDbGltYXRlXShodHRw
czovL2NvZGVjbGltYXRlLmNvbSkgLSBRdWFsaXR5ICYgc2VjdXJpdHkgYW5h
bHlzaXMgZm9yIFJ1Ynkgb24gUmFpbHMgYW5kIEphdmFzY3JpcHQuCiogW0Rl
cGVuZGFib3RdKGh0dHBzOi8vZGVwZW5kYWJvdC5jb20pIC0gQXV0b21hdGVk
IGRlcGVuZGVuY3kgdXBkYXRlIHB1bGwgcmVxdWVzdHMuCiogW0dpdEh1Yl0o
aHR0cHM6Ly9naXRodWIuY29tKSAtIFBvd2VyZnVsIGNvbGxhYm9yYXRpb24s
IGNvZGUgcmV2aWV3LCBhbmQgY29kZSBtYW5hZ2VtZW50IGZvciBvcGVuIHNv
dXJjZSBhbmQgcHJpdmF0ZSBwcm9qZWN0cy4KKiBbR2l0bGFiIENJXShodHRw
czovL2Fib3V0LmdpdGxhYi5jb20vZ2l0bGFiLWNpLykgLSBJbnRlZ3JhdGUg
d2l0aCB5b3VyIEdpdExhYiB0byBydW4gdGVzdHMgZm9yIHlvdXIgcHJvamVj
dHMuCiogW0dpdExhYl0oaHR0cHM6Ly9hYm91dC5naXRsYWIuY29tKSAtIE9w
ZW4gc291cmNlIHNvZnR3YXJlIHRvIGNvbGxhYm9yYXRlIG9uIGNvZGUuCiog
W0hha2lyaV0oaHR0cHM6Ly9oYWtpcmkuaW8pIC0gU2hpcCBTZWN1cmUgUnVi
eSBBcHBzLgoqIFtIb3VuZENJXShodHRwczovL2hvdW5kY2kuY29tKSAtIFJl
dmlldyB5b3VyIFJ1YnkgY29kZSBmb3Igc3R5bGUgZ3VpZGUgdmlvbGF0aW9u
cy4KKiBbSHVCb2FyZF0oaHR0cHM6Ly9odWJvYXJkLmNvbSkgLSBLYW5iYW4g
Ym9hcmQgZm9yIEdpdEh1YiBpc3N1ZXMuCiogW0luY2ggQ0ldKGh0dHBzOi8v
aW5jaC1jaS5vcmcvKSAtIERvY3VtZW50YXRpb24gYmFkZ2VzIGZvciBSdWJ5
IHByb2plY3RzLgoqIFtPY3RvTGlua2VyXShodHRwczovL2dpdGh1Yi5jb20v
T2N0b0xpbmtlci9icm93c2VyLWV4dGVuc2lvbikgLSBOYXZpZ2F0ZSB0aHJv
dWdoIHByb2plY3RzIG9uIEdpdEh1Yi5jb20gZWZmaWNpZW50bHkgd2l0aCB0
aGUgT2N0b0xpbmtlciBicm93c2VyIGV4dGVuc2lvbi4KKiBbU2VtYXBob3Jl
Q0ldKGh0dHBzOi8vc2VtYXBob3JlY2kuY29tKSAtIEhvc3RlZCBjb250aW51
b3VzIGludGVncmF0aW9uIGFuZCBkZXBsb3ltZW50IHNlcnZpY2UgZm9yIG9w
ZW4gc291cmNlIGFuZCBwcml2YXRlIHByb2plY3RzLgoqIFtTaWRlQ0ldKGh0
dHBzOi8vd3d3LnNpZGVjaS5jb20pIC0gQXV0b21hdGVkIENvZGUgUmV2aWV3
IHdpdGggR2l0SHViIFBSLiAtIE1vbml0b3JpbmcgU3R5bGUgVmlvbGF0aW9u
cywgUXVhbGl0eSwgU2VjdXJpdHksIERlcGVuZGVuY2llcy4KKiBbU3FyZWVu
XShodHRwczovL3d3dy5zcXJlZW4uaW8vKSAtIEF1dG9tYXRlZCBhbmQgUmVh
bC1UaW1lIFNlY3VyaXR5IGZvciBSdWJ5IEFwcHMuIFByb3RlY3QgeW91ciBh
cHAgaW4gMzAgc2Vjb25kcy4KKiBbVHJhdmlzIENJLmNvbV0oaHR0cHM6Ly90
cmF2aXMtY2kuY29tKSAtIFRha2UgY2FyZSBvZiBydW5uaW5nIHlvdXIgdGVz
dHMgYW5kIGRlcGxveWluZyB5b3VyIHByaXZhdGUgYXBwcy4KKiBbVHJhdmlz
IENJLm9yZ10oaHR0cHM6Ly90cmF2aXMtY2kub3JnKSAtIEEgZGlzdHJpYnV0
ZWQgYnVpbGQgc3lzdGVtIGZvciB0aGUgb3BlbiBzb3VyY2UgY29tbXVuaXR5
LgoqIFtWZXhvciBDSV0oaHR0cHM6Ly92ZXhvci5pbykgLSBBIGRpc3RyaWJ1
dGVkIGNsb3VkIHdlYi1zZXJ2aWNlIGZvciBidWlsZGluZyBhbmQgdGVzdGlu
ZyBzb2Z0d2FyZSwgYSBjb250aW51b3VzIGludGVncmF0aW9uIHRvb2wgZm9y
IHByaXZhdGUgYXBwcyB3aXRoIHBheS1wZXItbWludXRlIGJpbGxpbmcgbW9k
ZWwuCgojIFJlc291cmNlcwoKV2hlcmUgdG8gZGlzY292ZXIgbmV3IFJ1Ynkg
bGlicmFyaWVzLCBwcm9qZWN0cyBhbmQgdHJlbmRzLgoKKiBbQXdlc29tZSBS
dWJ5IEBMaWJIdW50XShodHRwczovL3J1YnkubGliaHVudC5jb20pIC0gWW91
ciBnby10byBSdWJ5IFRvb2xib3guIFRoZSBBd2Vzb21lIFJ1YnkgY29sbGVj
dGlvbiArIG9yZGVyaW5nIGJ5IHBvcHVsYXJpdHksIGFkZGl0aW9uYWwgbWV0
YWRhdGEgYW5kIGNvbXBhcmlzb25zLgoqIFtHaXRIdWIgVHJlbmRpbmddKGh0
dHBzOi8vZ2l0aHViLmNvbS90cmVuZGluZz9sPXJ1YnkpIC0gRmluZCB3aGF0
IHJlcG9zaXRvcmllcyB0aGUgR2l0SHViIGNvbW11bml0eSBpcyBtb3N0IGV4
Y2l0ZWQgYWJvdXQgdG9kYXkuCiogW09wZW4gU291cmNlIFJhaWxzXShodHRw
Oi8vd3d3Lm9wZW5zb3VyY2VyYWlscy5jb20vKSAtIEEgZ2FsbGVyeSBvZiB0
aGUgYmVzdCBvcGVuIHNvdXJjZSByYWNrIGFuZCBSdWJ5IG9uIFJhaWxzIHdl
YiBhcHBsaWNhdGlvbnMuCiogW1J1YnkgQm9va21hcmtzXShodHRwczovL2dp
dGh1Yi5jb20vZHJlaWthbnRlci9ydWJ5LWJvb2ttYXJrcykgLSBSdWJ5IGFu
ZCBSdWJ5IG9uIFJhaWxzIGJvb2ttYXJrcyBjb2xsZWN0aW9uLgoqIFtSdWJ5
RGFpbHldKGh0dHA6Ly9ydWJ5ZGFpbHkub3JnKSAtIENvbW11bml0eSBkcml2
ZW4gbmV3cy4KKiBbUnVieUZsb3ddKGh0dHA6Ly93d3cucnVieWZsb3cuY29t
KSAtIFJ1YnkgUHJvZ3JhbW1pbmcgQ29tbXVuaXR5IExpbmsgQmxvZy4KKiBb
UnVieSBMYW5kXShodHRwOi8vcnVieWxhbmQubmV3cy8pIC0gQSB3ZWxsIG1h
aW50YWluZWQgUnVieS9SYWlscyBhZ2dyZWdhdG9yIHRoYXQgY29udGFpbnMg
bmV3cywgb3BpbmlvbnMsIHR1dG9yaWFscywgYW5kIG1vcmUuCiogW1J1Ynkg
Um9ndWVzXShodHRwczovL2RldmNoYXQudHYvcnVieS1yb2d1ZXMpIC0gV2Vl
a2x5IHBhbmVsIGRpc2N1c3Npb24gYWJvdXQgcHJvZ3JhbW1pbmcsIHByaW1h
cmlseSBpbiBSdWJ5LgoqIFtSdWJ5IFdlZWtseV0oaHR0cHM6Ly9ydWJ5d2Vl
a2x5LmNvbS8pIC0gQSBmcmVlLCBvbmNl4oCTd2Vla2x5IGUtbWFpbCByb3Vu
ZC11cCBvZiBSdWJ5IG5ld3MgYW5kIGFydGljbGVzLgoqIFtUaGUgUnVieSBC
aWJsaW9ncmFwaHldKGh0dHBzOi8vcnVieWJpYi5vcmcpIC0gUmVzZWFyY2gg
cGFwZXJzIGFib3V0IFJ1YnkuCiogW1RoZSBSdWJ5IFRvb2xib3hdKGh0dHBz
Oi8vd3d3LnJ1YnktdG9vbGJveC5jb20pIC0gQSBjb21wcmVoZW5zaXZlIGNh
dGFsb2cgb2YgUnVieSBhbmQgUmFpbHMgcGx1Zy1pbnMsIGdlbXMsIHRvb2xz
IGFuZCByZXNvdXJjZXMgZm9yIFJ1YnkgZGV2ZWxvcGVycyB3aXRoIHBvcHVs
YXJpdHkgcmF0aW5ncyBiYXNlZCBvbiBHaXRIdWIgd2F0Y2hlcnMgYW5kIEdl
bSBkb3dubG9hZHMuCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'vert.x',1911523,b'Vert.x is a tool-kit for building reactive applications on the JVM',b'Java',234,10442,,10442,False,b'https://api.github.com/repos/eclipse-vertx/vert.x/forks',"WyFbQnVpbGQgU3RhdHVzXShodHRwczovL3RyYXZpcy1jaS5vcmcvZWNsaXBz
ZS12ZXJ0eC92ZXJ0Lnguc3ZnP2JyYW5jaD1tYXN0ZXIpXShodHRwczovL3Ry
YXZpcy1jaS5vcmcvZWNsaXBzZS12ZXJ0eC92ZXJ0LngpCgojIyBWZXJ0Lngg
Q29yZQoKVGhpcyBpcyB0aGUgcmVwb3NpdG9yeSBmb3IgVmVydC54IGNvcmUu
CgpWZXJ0LnggY29yZSBjb250YWlucyBmYWlybHkgbG93LWxldmVsIGZ1bmN0
aW9uYWxpdHksIGluY2x1ZGluZyBzdXBwb3J0IGZvciBIVFRQLCBUQ1AsIGZp
bGUgc3lzdGVtIGFjY2VzcywgYW5kIHZhcmlvdXMgb3RoZXIgZmVhdHVyZXMu
IFlvdSBjYW4gdXNlIHRoaXMgZGlyZWN0bHkgaW4geW91ciBvd24gYXBwbGlj
YXRpb25zLCBhbmQgaXQncyB1c2VkIGJ5IG1hbnkgb2YgdGhlIG90aGVyIGNv
bXBvbmVudHMgb2YgVmVydC54LgoKRm9yIG1vcmUgaW5mb3JtYXRpb24gb24g
VmVydC54IGFuZCB3aGVyZSBWZXJ0LnggY29yZSBmaXRzIGludG8gdGhlIGJp
ZyBwaWN0dXJlIHBsZWFzZSBzZWUgdGhlIFt3ZWJzaXRlXShodHRwOi8vdmVy
dHguaW8pLgoKIyMgQnVpbGRpbmcgVmVydC54IGFydGlmYWN0cwoKYGBgCj4g
bXZuIHBhY2thZ2UKYGBgCgojIyBSdW5uaW5nIHRlc3RzCgpSdW5zIHRoZSB0
ZXN0cwoKYGBgCj4gbXZuIHRlc3QKYGBgCgpWZXJ0Lnggc3VwcG9ydHMgbmF0
aXZlIHRyYW5zcG9ydCBvbiBCU0QgYW5kIExpbnV4LCB0byBydW4gdGhlIHRl
c3RzIHdpdGggbmF0aXZlIHRyYW5zcG9ydAoKYGBgCj4gbXZuIHRlc3QgLVB0
ZXN0TmF0aXZlVHJhbnNwb3J0CmBgYAoKVmVydC54IHN1cHBvcnRzIGRvbWFp
biBzb2NrZXRzIG9uIExpbnV4IGV4Y2x1c2l2ZWx5LCB0byBydW4gdGhlIHRl
c3RzIHdpdGggZG9tYWluIHNvY2tldHMKCmBgYAo+IG12biB0ZXN0IC1QdGVz
dERvbWFpblNvY2tldHMKYGBgCgpWZXJ0LnggaGFzIGEgZmV3IGludGVncmF0
aW9ucyB0ZXN0cyB0aGF0IHJ1biBhIGRpZmZlcmVudGx5IGNvbmZpZ3VyZWQg
SlZNIChjbGFzc3BhdGgsIHN5c3RlbSBwcm9wZXJ0aWVzLCBldGMuLi4uKQpm
b3IgQUxQTiwgbmF0aXZlIGFuZCBsb2dnaW5nCgpgYGAKPiB2ZXJ0eCB2ZXJp
ZnkgLUR0ZXN0PUZvb1Rlc3QgIyBGb29UZXN0IGRvZXMgbm90IGV4aXN0cywg
aXRzIG9ubHkgcHVycG9zZSBpcyB0byBleGVjdXRlIG5vIHRlc3RzIGR1cmlu
ZyB0aGUgdGVzdCBwaGFzZQpgYGAKCiMjIEJ1aWxkaW5nIGRvY3VtZW50YXRp
b24KCmBgYAo+IG12biBwYWNrYWdlIC1QZG9jcyAtRHNraXBUZXN0cwpgYGAK
Ck9wZW4gX3RhcmdldC9kb2NzL3ZlcnR4LWNvcmUvamF2YS9pbmRleC5odG1s
XyB3aXRoIHlvdXIgYnJvd3NlcgoKCg==
",,"bGFuZ3VhZ2U6IGphdmEKYnJhbmNoZXM6CiAgb25seToKICAtIG1hc3Rlcgog
IC0gL15cZCtcLlxkKyQvCmNhY2hlOgogIGRpcmVjdG9yaWVzOgogICAgLSAk
SE9NRS8ubTIKYmVmb3JlX2NhY2hlOgogIC0gcm0gLXJmICRIT01FLy5tMi9y
ZXBvc2l0b3J5L2lvL3ZlcnR4Lwpqb2JzOgogIGluY2x1ZGU6CiAgICAtIHN0
YWdlOiB0ZXN0CiAgICAgIG5hbWU6ICJPcGVuSkRLIDgiCiAgICAgIGpkazog
b3BlbmpkazgKICAgICAgc2NyaXB0OiBtdm4gLXEgY2xlYW4gdmVyaWZ5IC1C
CiAgICAtIGlmOiB0eXBlICE9IHB1bGxfcmVxdWVzdAogICAgICBuYW1lOiAi
T3BlbkpESyAxMSIKICAgICAgamRrOiBvcGVuamRrMTEKICAgICAgc2NyaXB0
OiBtdm4gLXEgY2xlYW4gdmVyaWZ5IC1CCiAgICAtIGlmOiB0eXBlICE9IHB1
bGxfcmVxdWVzdAogICAgICBuYW1lOiAiT3BlbkpESyA4IC8gbmF0aXZlIHRy
YW5zcG9ydCIKICAgICAgamRrOiBvcGVuamRrOAogICAgICAjIFdvcmthcm91
bmQsIG9ubHkgZXhlY3V0ZSBzb21lIHRlc3RzIGFzIE5ldHR5IGVwb2xsIGhh
cyBzbG93IHNodXRkb3duIChodHRwczovL2dpdGh1Yi5jb20vbmV0dHkvbmV0
dHkvaXNzdWVzLzk2NzgpCiAgICAgIHNjcmlwdDogbXZuIC1xIGNsZWFuIHZl
cmlmeSAtQiAtUHRlc3ROYXRpdmVUcmFuc3BvcnQgLUR0ZXN0PU5ldFRlc3Qs
SHR0cCpUZXN0LEhvc3RuYW1lUmVzb2x1dGlvblRlc3QKICAgIC0gaWY6IHR5
cGUgIT0gcHVsbF9yZXF1ZXN0CiAgICAgIG5hbWU6ICJPcGVuSkRLIDggLyBk
b21haW4gc29ja2V0cyIKICAgICAgamRrOiBvcGVuamRrOAogICAgICAjIFdv
cmthcm91bmQsIG9ubHkgZXhlY3V0ZSBzb21lIHRlc3RzIGFzIE5ldHR5IGVw
b2xsIGhhcyBzbG93IHNodXRkb3duIChodHRwczovL2dpdGh1Yi5jb20vbmV0
dHkvbmV0dHkvaXNzdWVzLzk2NzgpCiAgICAgIHNjcmlwdDogbXZuIC1xIGNs
ZWFuIHZlcmlmeSAtQiAtUHRlc3REb21haW5Tb2NrZXRzIC1EdGVzdD1OZXRU
ZXN0LEh0dHAqVGVzdCxIb3N0bmFtZVJlc29sdXRpb25UZXN0CiAgICAtIHN0
YWdlOiBkZXBsb3kKICAgICAgbmFtZTogIkRlcGxveSB0byBTb25hdHlwZSdz
IHNuYXBzaG90cyByZXBvc2l0b3J5IgogICAgICBqZGs6IG9wZW5qZGs4CiAg
ICAgIGlmOiB0eXBlICE9IHB1bGxfcmVxdWVzdCBBTkQgZW52KFNPTkFUWVBF
X05FWFVTX1VTRVJOQU1FKSBJUyBwcmVzZW50CiAgICAgIHNjcmlwdDogYmFz
aCAudHJhdmlzLmRlcGxveS5hcnRpZmFjdHMuc2gKbm90aWZpY2F0aW9uczoK
ICBlbWFpbDoKICAgIHJlY2lwaWVudHM6CiAgICAgIC0gc2VjdXJlOiAiVjNr
U2xVTWFITGxGaG5iR2E1NjdtZEt2MS9kNGlQTEhKRVdpMWxsRkRlTGh1K3BK
c0FHT1pPRnFyNmJOOVYwUEpJZENHenI5L3hxYXVBMmtkdW5ucUlDTThpTGdh
MC92dmpaV0IvRzFTWHJtUHNMODIwc3p2VTNJZC9CTEJKemJuWldQTmJtTUNT
eUZMZ2tVdUFKNlFMTUZHSDU2UnFVc3Q2NVoyKytWekhVPSIKICAgIG9uX3N1
Y2Nlc3M6IGFsd2F5cwogICAgb25fZmFpbHVyZTogYWx3YXlzCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'TDengine',196353673,b'An open-source big data platform designed and optimized for the Internet of Things (IoT).',b'C',230,10440,,10440,False,b'https://api.github.com/repos/taosdata/TDengine/forks',"WyFbVERlbmdpbmVdKFREZW5naW5lbG9nby5wbmcpXShodHRwczovL3d3dy50
YW9zZGF0YS5jb20pCgojIFdoYXQgaXMgVERlbmdpbmXvvJ8KClREZW5naW5l
IGlzIGFuIG9wZW4tc291cmNlZCBiaWcgZGF0YSBwbGF0Zm9ybSB1bmRlciBb
R05VIEFHUEwgdjMuMF0oaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2Fn
cGwtMy4wLmh0bWwpLCBkZXNpZ25lZCBhbmQgb3B0aW1pemVkIGZvciB0aGUg
SW50ZXJuZXQgb2YgVGhpbmdzIChJb1QpLCBDb25uZWN0ZWQgQ2FycywgSW5k
dXN0cmlhbCBJb1QsIGFuZCBJVCBJbmZyYXN0cnVjdHVyZSBhbmQgQXBwbGlj
YXRpb24gTW9uaXRvcmluZy4gQmVzaWRlcyB0aGUgMTB4IGZhc3RlciB0aW1l
LXNlcmllcyBkYXRhYmFzZSwgaXQgcHJvdmlkZXMgY2FjaGluZywgc3RyZWFt
IGNvbXB1dGluZywgbWVzc2FnZSBxdWV1aW5nIGFuZCBvdGhlciBmdW5jdGlv
bmFsaXRpZXMgdG8gcmVkdWNlIHRoZSBjb21wbGV4aXR5IGFuZCBjb3N0IG9m
IGRldmVsb3BtZW50IGFuZCBvcGVyYXRpb24uCgotICoqMTB4IEZhc3RlciBv
biBJbnNlcnQvUXVlcnkgU3BlZWRzKio6IFRocm91Z2ggdGhlIGlubm92YXRp
dmUgZGVzaWduIG9uIHN0b3JhZ2UsIG9uIGEgc2luZ2xlLWNvcmUgbWFjaGlu
ZSwgb3ZlciAyMEsgcmVxdWVzdHMgY2FuIGJlIHByb2Nlc3NlZCwgbWlsbGlv
bnMgb2YgZGF0YSBwb2ludHMgY2FuIGJlIGluZ2VzdGVkLCBhbmQgb3ZlciAx
MCBtaWxsaW9uIGRhdGEgcG9pbnRzIGNhbiBiZSByZXRyaWV2ZWQgaW4gYSBz
ZWNvbmQuIEl0IGlzIDEwIHRpbWVzIGZhc3RlciB0aGFuIG90aGVyIGRhdGFi
YXNlcy4KCi0gKioxLzUgSGFyZHdhcmUvQ2xvdWQgU2VydmljZSBDb3N0cyoq
OiBDb21wYXJlZCB3aXRoIHR5cGljYWwgYmlnIGRhdGEgc29sdXRpb25zLCBs
ZXNzIHRoYW4gMS81IG9mIGNvbXB1dGluZyByZXNvdXJjZXMgYXJlIHJlcXVp
cmVkLiBWaWEgY29sdW1uLWJhc2VkIHN0b3JhZ2UgYW5kIHR1bmVkIGNvbXBy
ZXNzaW9uIGFsZ29yaXRobXMgZm9yIGRpZmZlcmVudCBkYXRhIHR5cGVzLCBs
ZXNzIHRoYW4gMS8xMCBvZiBzdG9yYWdlIHNwYWNlIGlzIG5lZWRlZC4KCi0g
KipGdWxsIFN0YWNrIGZvciBUaW1lLVNlcmllcyBEYXRhKio6IEJ5IGludGVn
cmF0aW5nIGEgZGF0YWJhc2Ugd2l0aCBtZXNzYWdlIHF1ZXVpbmcsIGNhY2hp
bmcsIGFuZCBzdHJlYW0gY29tcHV0aW5nIGZlYXR1cmVzIHRvZ2V0aGVyLCBp
dCBpcyBubyBsb25nZXIgbmVjZXNzYXJ5IHRvIGludGVncmF0ZSBLYWZrYS9S
ZWRpcy9IQmFzZS9TcGFyayBvciBvdGhlciBzb2Z0d2FyZS4gSXQgbWFrZXMg
dGhlIHN5c3RlbSBhcmNoaXRlY3R1cmUgbXVjaCBzaW1wbGVyIGFuZCBtb3Jl
IHJvYnVzdC4KCi0gKipQb3dlcmZ1bCBEYXRhIEFuYWx5c2lzKio6IFdoZXRo
ZXIgaXQgaXMgMTAgeWVhcnMgb3Igb25lIG1pbnV0ZSBhZ28sIGRhdGEgY2Fu
IGJlIHF1ZXJpZWQganVzdCBieSBzcGVjaWZ5aW5nIHRoZSB0aW1lIHJhbmdl
LiBEYXRhIGNhbiBiZSBhZ2dyZWdhdGVkIG92ZXIgdGltZSwgbXVsdGlwbGUg
dGltZSBzdHJlYW1zIG9yIGJvdGguIEFkIEhvYyBxdWVyaWVzIG9yIGFuYWx5
c2VzIGNhbiBiZSBleGVjdXRlZCB2aWEgVERlbmdpbmUgc2hlbGwsIFB5dGhv
biwgUiBvciBNYXRsYWIuCgotICoqU2VhbWxlc3MgSW50ZWdyYXRpb24gd2l0
aCBPdGhlciBUb29scyoqOiBUZWxlZ3JhZiwgR3JhZmFuYSwgTWF0bGFiLCBS
LCBhbmQgb3RoZXIgdG9vbHMgY2FuIGJlIGludGVncmF0ZWQgd2l0aCBURGVu
Z2luZSB3aXRob3V0IGEgbGluZSBvZiBjb2RlLiBNUVRULCBPUEMsIEhhZG9v
cCwgU3BhcmssIGFuZCBtYW55IG90aGVycyB3aWxsIGJlIGludGVncmF0ZWQg
c29vbi4KCi0gKipaZXJvIE1hbmFnZW1lbnQsIE5vIExlYXJuaW5nIEN1cnZl
Kio6IEl0IHRha2VzIG9ubHkgc2Vjb25kcyB0byBkb3dubG9hZCwgaW5zdGFs
bCwgYW5kIHJ1biBpdCBzdWNjZXNzZnVsbHk7IHRoZXJlIGFyZSBubyBvdGhl
ciBkZXBlbmRlbmNpZXMuIEF1dG9tYXRpYyBwYXJ0aXRpb25pbmcgb24gdGFi
bGVzIG9yIERCcy4gU3RhbmRhcmQgU1FMIGlzIHVzZWQsIHdpdGggQy9DKyss
IFB5dGhvbiwgSkRCQywgR28gYW5kIFJFU1RmdWwgY29ubmVjdG9ycy4KCiMg
RG9jdW1lbnRhdGlvbgpGb3IgdXNlciBtYW51YWwsIHN5c3RlbSBkZXNpZ24g
YW5kIGFyY2hpdGVjdHVyZSwgZW5naW5lZXJpbmcgYmxvZ3MsIHJlZmVyIHRv
IFtURGVuZ2luZSBEb2N1bWVudGF0aW9uXShodHRwczovL3d3dy50YW9zZGF0
YS5jb20vZW4vZG9jdW1lbnRhdGlvbi8pCiBmb3IgZGV0YWlscy4gVGhlIGRv
Y3VtZW50YXRpb24gZnJvbSBvdXIgd2Vic2l0ZSBjYW4gYWxzbyBiZSBkb3du
bG9hZGVkIGxvY2FsbHkgZnJvbSAqZG9jdW1lbnRhdGlvbi90ZGVuZ2luZWRv
Y3MtZW4qIG9yICpkb2N1bWVudGF0aW9uL3RkZW5naW5lZG9jcy1jbiouCgoj
IEJ1aWxkaW5nCkF0IHRoZSBtb21lbnQsIFREZW5naW5lIG9ubHkgc3VwcG9y
dHMgYnVpbGRpbmcgYW5kIHJ1bm5pbmcgb24gTGludXggc3lzdGVtcy4gWW91
IGNhbiBjaG9vc2UgdG8gW2luc3RhbGwgZnJvbSBwYWNrYWdlc10oaHR0cHM6
Ly93d3cudGFvc2RhdGEuY29tL2VuL2dldHRpbmctc3RhcnRlZC8jSW5zdGFs
bC1mcm9tLVBhY2thZ2UpIG9yIGZyb20gdGhlIHNvdXJjZSBjb2RlLiBUaGlz
IHF1aWNrIGd1aWRlIGlzIGZvciBpbnN0YWxsYXRpb24gZnJvbSB0aGUgc291
cmNlIG9ubHkuCgpUbyBidWlsZCBURGVuZ2luZSwgdXNlIFtDTWFrZV0oaHR0
cHM6Ly9jbWFrZS5vcmcvKSAyLjggb3IgaGlnaGVyIHZlcnNpb25zIGluIHRo
ZSBwcm9qZWN0IGRpcmVjdG9yeS4gSW5zdGFsbCBDTWFrZSBmb3IgZXhhbXBs
ZSBvbiBVYnVudHU6CmBgYApzdWRvIGFwdC1nZXQgaW5zdGFsbCAteSBjbWFr
ZSBidWlsZC1lc3NlbnRpYWwKYGBgCgpUbyBjb21waWxlIGFuZCBwYWNrYWdl
IHRoZSBKREJDIGRyaXZlciBzb3VyY2UgY29kZSwgeW91IHNob3VsZCBoYXZl
IGEgSmF2YSBqZGstOCBvciBoaWdoZXIgYW5kIEFwYWNoZSBNYXZlbiAyLjcg
b3IgaGlnaGVyIGluc3RhbGxlZC4gClRvIGluc3RhbGwgb3Blbmpkay04IG9u
IFVidW50dToKYGBgCnN1ZG8gYXB0LWdldCBpbnN0YWxsIG9wZW5qZGstOC1q
ZGsKYGBgClRvIGluc3RhbGwgQXBhY2hlIE1hdmVuIG9uIFVidW50dToKYGBg
CnN1ZG8gYXB0LWdldCBpbnN0YWxsIG1hdmVuCmBgYAoKQnVpbGQgVERlbmdp
bmU6CmBgYGNtZAoKbWtkaXIgYnVpbGQgJiYgY2QgYnVpbGQKY21ha2UgLi4g
JiYgY21ha2UgLS1idWlsZCAuCmBgYAoKIyBRdWljayBSdW4KVG8gcXVpY2ts
eSBzdGFydCBhIFREZW5naW5lIHNlcnZlciBhZnRlciBidWlsZGluZywgcnVu
IHRoZSBjb21tYW5kIGJlbG93IGluIHRlcm1pbmFsOgpgYGBjbWQKLi9idWls
ZC9iaW4vdGFvc2QgLWMgdGVzdC9jZmcKYGBgCkluIGFub3RoZXIgdGVybWlu
YWwsIHVzZSB0aGUgVERlbmdpbmUgc2hlbGwgdG8gY29ubmVjdCB0aGUgc2Vy
dmVyOgpgYGAKLi9idWlsZC9iaW4vdGFvcyAtYyB0ZXN0L2NmZwpgYGAKb3B0
aW9uICItYyB0ZXN0L2NmZyIgc3BlY2lmaWVzIHRoZSBzeXN0ZW0gY29uZmln
dXJhdGlvbiBmaWxlIGRpcmVjdG9yeS4gCgojIEluc3RhbGxpbmcKQWZ0ZXIg
YnVpbGRpbmcgc3VjY2Vzc2Z1bGx5LCBURGVuZ2luZSBjYW4gYmUgaW5zdGFs
bGVkIGJ5OgpgYGBjbWQKbWFrZSBpbnN0YWxsCmBgYApVc2VycyBjYW4gZmlu
ZCBtb3JlIGluZm9ybWF0aW9uIGFib3V0IGRpcmVjdG9yaWVzIGluc3RhbGxl
ZCBvbiB0aGUgc3lzdGVtIGluIHRoZSBbZGlyZWN0b3J5IGFuZCBmaWxlc10o
aHR0cHM6Ly93d3cudGFvc2RhdGEuY29tL2VuL2RvY3VtZW50YXRpb24vYWRt
aW5pc3RyYXRvci8jRGlyZWN0b3J5LWFuZC1GaWxlcykgc2VjdGlvbi4gSXQg
c2hvdWxkIGJlIG5vdGVkIHRoYXQgaW5zdGFsbGluZyBmcm9tIHNvdXJjZSBj
b2RlIGRvZXMgbm90IGNvbmZpZ3VyZSBzZXJ2aWNlIG1hbmFnZW1lbnQgZm9y
IFREZW5naW5lLgpVc2VycyBjYW4gYWxzbyBjaG9vc2UgdG8gW2luc3RhbGwg
ZnJvbSBwYWNrYWdlc10oaHR0cHM6Ly93d3cudGFvc2RhdGEuY29tL2VuL2dl
dHRpbmctc3RhcnRlZC8jSW5zdGFsbC1mcm9tLVBhY2thZ2UpIGZvciBpdC4K
ClRvIHN0YXJ0IHRoZSBzZXJ2aWNlIGFmdGVyIGluc3RhbGxhdGlvbiwgaW4g
YSB0ZXJtaW5hbCwgdXNlOgpgYGBjbWQKdGFvc2QKYGBgCgpUaGVuIHVzZXJz
IGNhbiB1c2UgdGhlIFtURGVuZ2luZSBzaGVsbF0oaHR0cHM6Ly93d3cudGFv
c2RhdGEuY29tL2VuL2dldHRpbmctc3RhcnRlZC8jVERlbmdpbmUtU2hlbGwp
IHRvIGNvbm5lY3QgdGhlIFREZW5naW5lIHNlcnZlci4gSW4gYSB0ZXJtaW5h
bCwgdXNlOgpgYGBjbWQKdGFvcwpgYGAKCklmIFREZW5naW5lIHNoZWxsIGNv
bm5lY3RzIHRoZSBzZXJ2ZXIgc3VjY2Vzc2Z1bGx5LCB3ZWxjb21lIG1lc3Nh
Z2VzIGFuZCB2ZXJzaW9uIGluZm8gYXJlIHByaW50ZWQuIE90aGVyd2lzZSwg
YW4gZXJyb3IgbWVzc2FnZSBpcyBzaG93bi4KCiMgVHJ5IFREZW5naW5lCkl0
IGlzIGVhc3kgdG8gcnVuIFNRTCBjb21tYW5kcyBmcm9tIFREZW5naW5lIHNo
ZWxsIHdoaWNoIGlzIHRoZSBzYW1lIGFzIG90aGVyIFNRTCBkYXRhYmFzZXMu
CmBgYHNxbApjcmVhdGUgZGF0YWJhc2UgZGI7CnVzZSBkYjsKY3JlYXRlIHRh
YmxlIHQgKHRzIHRpbWVzdGFtcCwgYSBpbnQpOwppbnNlcnQgaW50byB0IHZh
bHVlcyAoJzIwMTktMDctMTUgMDA6MDA6MDAnLCAxKTsKaW5zZXJ0IGludG8g
dCB2YWx1ZXMgKCcyMDE5LTA3LTE1IDAxOjAwOjAwJywgMik7CnNlbGVjdCAq
IGZyb20gdDsKZHJvcCBkYXRhYmFzZSBkYjsKYGBgCgojIERldmVsb3Bpbmcg
d2l0aCBURGVuZ2luZQojIyMgT2ZmaWNpYWwgQ29ubmVjdG9ycwoKVERlbmdp
bmUgcHJvdmlkZXMgYWJ1bmRhbnQgZGV2ZWxvcGluZyB0b29scyBmb3IgdXNl
cnMgdG8gZGV2ZWxvcCBvbiBURGVuZ2luZS4gRm9sbG93IHRoZSBsaW5rcyBi
ZWxvdyB0byBmaW5kIHlvdXIgZGVzaXJlZCBjb25uZWN0b3JzIGFuZCByZWxl
dmFudCBkb2N1bWVudGF0aW9uLgoKLSBbSmF2YV0oaHR0cHM6Ly93d3cudGFv
c2RhdGEuY29tL2VuL2RvY3VtZW50YXRpb24vY29ubmVjdG9yLyNKYXZhLUNv
bm5lY3RvcikKLSBbQy9DKytdKGh0dHBzOi8vd3d3LnRhb3NkYXRhLmNvbS9l
bi9kb2N1bWVudGF0aW9uL2Nvbm5lY3Rvci8jQy9DKystQ29ubmVjdG9yKQot
IFtQeXRob25dKGh0dHBzOi8vd3d3LnRhb3NkYXRhLmNvbS9lbi9kb2N1bWVu
dGF0aW9uL2Nvbm5lY3Rvci8jUHl0aG9uLUNvbm5lY3RvcikKLSBbR29dKGh0
dHBzOi8vd3d3LnRhb3NkYXRhLmNvbS9lbi9kb2N1bWVudGF0aW9uL2Nvbm5l
Y3Rvci8jR28tQ29ubmVjdG9yKQotIFtSRVNUZnVsIEFQSV0oaHR0cHM6Ly93
d3cudGFvc2RhdGEuY29tL2VuL2RvY3VtZW50YXRpb24vY29ubmVjdG9yLyNS
RVNUZnVsLUNvbm5lY3RvcikKLSBbTm9kZS5qc10oaHR0cHM6Ly93d3cudGFv
c2RhdGEuY29tL2VuL2RvY3VtZW50YXRpb24vY29ubmVjdG9yLyNOb2RlLmpz
LUNvbm5lY3RvcikKCiMjIyBUaGlyZCBQYXJ0eSBDb25uZWN0b3JzCgpUaGUg
VERlbmdpbmUgY29tbXVuaXR5IGhhcyBhbHNvIGtpbmRseSBidWlsdCBzb21l
IG9mIHRoZWlyIG93biBjb25uZWN0b3JzISBGb2xsb3cgdGhlIGxpbmtzIGJl
bG93IHRvIGZpbmQgdGhlIHNvdXJjZSBjb2RlIGZvciB0aGVtLgoKLSBbUnVz
dCBDb25uZWN0b3JdKGh0dHBzOi8vZ2l0aHViLmNvbS90YW9zZGF0YS9URGVu
Z2luZS90cmVlL21hc3Rlci90ZXN0cy9leGFtcGxlcy9ydXN0KQotIFsuTmV0
IENvcmUgQ29ubmVjdG9yXShodHRwczovL2dpdGh1Yi5jb20vbWFpa2ViaW5n
L01haWtlYmluZy5FbnRpdHlGcmFtZXdvcmtDb3JlLlRhb3MpCgojIFREZW5n
aW5lIFJvYWRtYXAKLSBTdXBwb3J0IGV2ZW50LWRyaXZlbiBzdHJlYW0gY29t
cHV0aW5nCi0gU3VwcG9ydCB1c2VyIGRlZmluZWQgZnVuY3Rpb25zCi0gU3Vw
cG9ydCBNUVRUIGNvbm5lY3Rpb24KLSBTdXBwb3J0IE9QQyBjb25uZWN0aW9u
Ci0gU3VwcG9ydCBIYWRvb3AsIFNwYXJrIGNvbm5lY3Rpb25zCi0gU3VwcG9y
dCBUYWJsZWF1IGFuZCBvdGhlciBCSSB0b29scwoKIyBDb250cmlidXRlIHRv
IFREZW5naW5lCgpQbGVhc2UgZm9sbG93IHRoZSBbY29udHJpYnV0aW9uIGd1
aWRlbGluZXNdKENPTlRSSUJVVElORy5tZCkgdG8gY29udHJpYnV0ZSB0byB0
aGUgcHJvamVjdC4K
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'raphael',48296,b'JavaScript Vector Library',b'JavaScript',335,10439,,10439,False,b'https://api.github.com/repos/DmitryBaranovskiy/raphael/forks',"IyBSYXBoYcOrbDogQ3Jvc3MtYnJvd3NlciB2ZWN0b3IgZ3JhcGhpY3MgdGhl
IGVhc3kgd2F5CgpWaXNpdCB0aGUgbGlicmFyeSB3ZWJzaXRlIGZvciBtb3Jl
IGluZm9ybWF0aW9uOiB+fltodHRwOi8vcmFwaGFlbGpzLmNvbV0oaHR0cDov
L3JhcGhhZWxqcy5jb20vKX5+IFtodHRwczovL2RtaXRyeWJhcmFub3Zza2l5
LmdpdGh1Yi5pby9yYXBoYWVsL10oaHR0cHM6Ly9kbWl0cnliYXJhbm92c2tp
eS5naXRodWIuaW8vcmFwaGFlbC8pCgojIyBRdWlja3N0YXJ0IGd1aWRlCgpZ
b3UgbmVlZCB0byBoYXZlIE5QTSBpbnN0YWxsZWQgdG8gYnVpbGQgdGhlIGxp
YnJhcnkuCgoqIGBnaXQgY2xvbmUgaHR0cHM6Ly9naXRodWIuY29tL0RtaXRy
eUJhcmFub3Zza2l5L3JhcGhhZWwuZ2l0YAoqIGB5YXJuIGluc3RhbGwgLS1m
cm96ZW4tbG9ja2ZpbGVgCiogYHlhcm4gYnVpbGQtYWxsYAoKVG8gcnVuIHRl
c3RzIHlvdSBuZWVkIHRvIHJ1biBgbnB4IGJvd2VyIGluc3RhbGxgIG9wZW4g
YGRldi90ZXN0L2luZGV4Lmh0bWxgIGluIHlvdXIgYnJvd3NlciwgdGhlcmUn
cyBubyBhdXRvbWF0ZWQgd2F5IHJpZ2h0IG5vdy4KCiMjIERlcGVuZGVuY2ll
cwoKKiBbZXZlXShodHRwczovL2dpdGh1Yi5jb20vYWRvYmUtd2VicGxhdGZv
cm0vZXZlKQoKIyMgRGlzdHJpYnV0YWJsZQoKQWxsIGZpbGVzIGFyZSBVTUQg
Y29tcGxpYW50LgoKWW91IGNhbiB1c2U6CgoqIGByYXBoYWVsLm1pbi5qc2Ag
KGluY2x1ZGVzIGBldmVgIGFuZCBpdCdzIG1pbmlmaWVkKQoqIGByYXBoYWVs
LmpzYCAoaW5jbHVkZXMgYGV2ZWAgYW5kIGl0J3Mgbm90IG1pbmlmaWVkKQoq
IGByYXBoYWVsLm5vLWRlcHMuanNgIChkb2Vzbid0IGluY2x1ZGUgYGV2ZWAg
aXQncyBub3QgbWluaWZpZWQpCiogYHJhcGhhZWwubm8tZGVwcy5taW4uanNg
ICAoZG9lc24ndCBpbmNsdWRlIGBldmVgIGl0J3MgbWluaWZpZWQpCgojIyBX
aGVyZSB0byBzdGFydAoKQ2hlY2sgW1JhcGhhZWwtYm9pbGVycGxhdGVdKGh0
dHBzOi8vZ2l0aHViLmNvbS90b21hc0FsYWJlcy9yYXBoYWVsLWJvaWxlcnBs
YXRlKSB0byBzZWUgZXhhbXBsZXMgb2YgbG9hZGluZy4KClJhcGhhZWwgY2Fu
IGJlIGxvYWRlZCBpbiBhIHNjcmlwdCB0YWcgb3Igd2l0aCBBTUQ6CgpgYGBq
cwpkZWZpbmUoWyAicGF0aC90by9yYXBoYWVsIiBdLCBmdW5jdGlvbiggUmFw
aGFlbCApIHsKICBjb25zb2xlLmxvZyggUmFwaGFlbCApOwp9KTsKYGBgCgoj
IyBEZXZlbG9wbWVudAoKVmVyc2lvbnMgd2lsbCBiZSByZWxlYXNlZCBhcyB3
ZSBnYXRoZXIgYW5kIHRlc3QgbmV3IFBScy4gCkFzIHRoZXJlIGFyZSBhIGxv
dCBvZiBicm93c2VycyBiZWluZyBzdXBwb3J0ZWQgaXQgbWlnaHQgdGFrZSBh
IHdoaWxlIHRvIGFjY2VwdCBhIFBSLCB3ZSB3aWxsIHVzZSB0aGUgZmVlZGJh
Y2sgZnJvbSBvdGhlciB1c2VycyB0b28uCgpZb3UgY2FuIHVzZSB0aGUgYHJh
cGhhZWxUZXN0Lmh0bWxgIHRvIHRyeSB0aGluZ3MsIHlvdSBuZWVkIHRvIHN0
YXJ0IGEgc2VydmVyIGluIHRoZSByb290IGRpciB0byBzdGFydCB0ZXN0aW5n
IHRoaW5ncyB0aGVyZS4KU29tZXRoaW5nIGxpa2UgcnVubmluZyBgcHl0aG9u
IC1tIFNpbXBsZUhUVFBTZXJ2ZXJgIGluIHRoZSBgcmFwaGFlbGAgZGlyZWN0
b3J5IGFuZCBoaXR0aW5nIGBodHRwOi8vbG9jYWxob3N0OjgwMDAvZGV2L3Jh
cGhhZWxUZXN0Lmh0bWxgIHdpdGggdGhlIGJyb3dzZXIuIFlvdSBzaG91bGQg
cnVuIGBucG0gcnVuIHN0YXJ0YCBiZWZvcmUgdGhpcyBjYW4gd29yay4KCiMj
IENvbGxhYm9yYXRvcnMKCiogW3RvbWFzQWxhYmVzXShodHRwczovL2dpdGh1
Yi5jb20vdG9tYXNBbGFiZXMpCgojIyBSZWxhdGVkIFByb2plY3RzCgoqIFtn
cmFwaGFlbF0oaHR0cHM6Ly9naXRodWIuY29tL0RtaXRyeUJhcmFub3Zza2l5
L2cucmFwaGFlbC90cmVlL21hc3RlcikKKiBbcmFwaGFlbC5ib2lsZXJwbGF0
ZV0oaHR0cHM6Ly9naXRodWIuY29tL3RvbWFzQWxhYmVzL3JhcGhhZWwtYm9p
bGVycGxhdGUpCiogW2JhY2tib25lLnJhcGhhZWxdKGh0dHBzOi8vZ2l0aHVi
LmNvbS90b21hc0FsYWJlcy9iYWNrYm9uZS5yYXBoYWVsKQoqIFttYXBhZWxd
KGh0dHBzOi8vZ2l0aHViLmNvbS9uZXZlbGRvL2pRdWVyeS1NYXBhZWwpCiog
W3NuYXBdKGh0dHBzOi8vZ2l0aHViLmNvbS9hZG9iZS13ZWJwbGF0Zm9ybS9T
bmFwLnN2ZykKKiBbcmVhY3QtcmFwaGFlbF0oaHR0cHM6Ly9naXRodWIuY29t
L2xpdWhvbmcxaGFwcHkvcmVhY3QtcmFwaGFlbCkKCiMjIEJvb2tzCgoqIFtM
ZWFybmluZyBSYXBoYWVsIEpTIFZlY3RvciBHcmFwaGljc10oaHR0cDovL3No
b3Aub3JlaWxseS5jb20vcHJvZHVjdC85NzgxNzgyMTY5MTYxLmRvKQoqIFtS
YXBoYWVsSlNdKGh0dHA6Ly9zaG9wLm9yZWlsbHkuY29tL3Byb2R1Y3QvMDYz
NjkyMDAyOTYwMS5kbykKKiBbSW5zdGFudCBSYXBoYWVsSlMgU3RhcnRlcl0o
aHR0cDovL3Nob3Aub3JlaWxseS5jb20vcHJvZHVjdC85NzgxNzgyMTY5ODU3
LmRvKQoKIyMgQ29weXJpZ2h0IGFuZCBsaWNlbnNlCgpDb3B5cmlnaHQgwqkg
MjAwOC0yMDEzIERtaXRyeSBCYXJhbm92c2tpeSAoYGh0dHA6Ly9kbWl0cnli
YXJhbm92c2tpeS5naXRodWIuaW8vcmFwaGFlbC9gKQoKQ29weXJpZ2h0IMKp
IDIwMDgtMjAxMyBTZW5jaGEgTGFicyAoYGh0dHA6Ly9zZW5jaGEuY29tYCkK
CkxpY2Vuc2VkIHVuZGVyIHRoZSAqKk1JVCoqIChgaHR0cDovL2RtaXRyeWJh
cmFub3Zza2l5LmdpdGh1Yi5pby9yYXBoYWVsL2xpY2Vuc2UuaHRtbGApIGxp
Y2Vuc2UuCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'swagger-codegen',2006876,"b'swagger-codegen contains a template-driven engine to generate documentation, API clients and server stubs in different languages by parsing your OpenAPI / Swagger definition.'",b'HTML',2468,10435,,10435,False,b'https://api.github.com/repos/swagger-api/swagger-codegen/forks',"IyA8aW1nIHNyYz0iaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29t
L3N3YWdnZXItYXBpL3N3YWdnZXIuaW8vd29yZHByZXNzL2ltYWdlcy9hc3Nl
dHMvU1dDLWxvZ28tY2xyLnBuZyIgaGVpZ2h0PSI4MCI+CgpbIVtCdWlsZCBT
dGF0dXNdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vamVua2lucy9zL2h0dHBz
L2plbmtpbnMuc3dhZ2dlci5pby92aWV3L09TUyUyMC0lMjBKYXZhL2pvYi9v
c3Mtc3dhZ2dlci1jb3JlLW1hc3Rlci1qYXZhLTguc3ZnKV0oaHR0cHM6Ly9q
ZW5raW5zLnN3YWdnZXIuaW8vdmlldy9PU1MlMjAtJTIwSmF2YS9qb2Ivb3Nz
LXN3YWdnZXItY29yZS1tYXN0ZXItamF2YS04KQoKWyFbQnVpbGQgU3RhdHVz
XShodHRwczovL2plbmtpbnMuc3dhZ2dlci5pby92aWV3L09TUyUyMC0lMjBK
YXZhL2pvYi9vc3Mtc3dhZ2dlci1jb2RlZ2VuLW1hc3Rlci9iYWRnZS9pY29u
P3N1YmplY3Q9amVua2lucyUyMGJ1aWxkKV0oaHR0cHM6Ly9qZW5raW5zLnN3
YWdnZXIuaW8vdmlldy9PU1MlMjAtJTIwSmF2YS9qb2Ivb3NzLXN3YWdnZXIt
Y29kZWdlbi1tYXN0ZXIvKQoKWyFbQnVpbGQgU3RhdHVzXShodHRwczovL2pl
bmtpbnMuc3dhZ2dlci5pby92aWV3L09TUyUyMC0lMjBKYXZhL2pvYi9vc3Mt
c3dhZ2dlci1jb2RlZ2VuLW1hc3Rlci1qYXZhNy9iYWRnZS9pY29uP3N1Ympl
Y3Q9amVua2lucyUyMGJ1aWxkJTIwLSUyMGphdmElMjA3KV0oaHR0cHM6Ly9q
ZW5raW5zLnN3YWdnZXIuaW8vdmlldy9PU1MlMjAtJTIwSmF2YS9qb2Ivb3Nz
LXN3YWdnZXItY29kZWdlbi1tYXN0ZXItamF2YTcvKQoKLSBNYXN0ZXIgKDIu
NC45KTogWyFbQnVpbGQgU3RhdHVzXShodHRwczovL2ltZy5zaGllbGRzLmlv
L3RyYXZpcy9zd2FnZ2VyLWFwaS9zd2FnZ2VyLWNvZGVnZW4vbWFzdGVyLnN2
Zz9sYWJlbD1QZXRzdG9yZSUyMEludGVncmF0aW9uJTIwVGVzdCldKGh0dHBz
Oi8vdHJhdmlzLWNpLm9yZy9zd2FnZ2VyLWFwaS9zd2FnZ2VyLWNvZGVnZW4p
ClshW0phdmEgVGVzdF0oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9qZW5raW5z
L3MvaHR0cHMvamVua2lucy5zd2FnZ2VyLmlvL3ZpZXcvT1NTJTIwLSUyMEph
dmEvam9iL29zcy1zd2FnZ2VyLWNvZGVnZW4tbWFzdGVyLnN2ZyldKGh0dHBz
Oi8vamVua2lucy5zd2FnZ2VyLmlvL3ZpZXcvT1NTJTIwLSUyMEphdmEvam9i
L29zcy1zd2FnZ2VyLWNvZGVnZW4tbWFzdGVyKQpbIVtXaW5kb3dzIFRlc3Rd
KGh0dHBzOi8vY2kuYXBwdmV5b3IuY29tL2FwaS9wcm9qZWN0cy9zdGF0dXMv
Z2l0aHViL3N3YWdnZXItYXBpL3N3YWdnZXItY29kZWdlbj9icmFuY2g9bWFz
dGVyJnN2Zz10cnVlJnBhc3NpbmdUZXh0PVdpbmRvd3MlMjBUZXN0JTIwLSUy
ME9LJmZhaWxpbmdUZXh0PVdpbmRvd3MlMjBUZXN0JTIwLSUyMEZhaWxzKV0o
aHR0cHM6Ly9jaS5hcHB2ZXlvci5jb20vcHJvamVjdC9zd2FnZ2VyaHViLWJv
dC9zd2FnZ2VyLWNvZGVnZW4pCi0gMy4wLjEzOiAgWyFbQnVpbGQgU3RhdHVz
XShodHRwczovL2ltZy5zaGllbGRzLmlvL3RyYXZpcy9zd2FnZ2VyLWFwaS9z
d2FnZ2VyLWNvZGVnZW4vMy4wLjAuc3ZnP2xhYmVsPVBldHN0b3JlJTIwSW50
ZWdyYXRpb24lMjBUZXN0KV0oaHR0cHM6Ly90cmF2aXMtY2kub3JnL3N3YWdn
ZXItYXBpL3N3YWdnZXItY29kZWdlbikKWyFbSmF2YSBUZXN0XShodHRwczov
L2ltZy5zaGllbGRzLmlvL2plbmtpbnMvcy9odHRwcy9qZW5raW5zLnN3YWdn
ZXIuaW8vdmlldy9PU1MlMjAtJTIwSmF2YS9qb2Ivb3NzLXN3YWdnZXItY29k
ZWdlbi0zLnN2ZyldKGh0dHBzOi8vamVua2lucy5zd2FnZ2VyLmlvL3ZpZXcv
T1NTJTIwLSUyMEphdmEvam9iL29zcy1zd2FnZ2VyLWNvZGVnZW4tMykKWyFb
V2luZG93cyBUZXN0XShodHRwczovL2NpLmFwcHZleW9yLmNvbS9hcGkvcHJv
amVjdHMvc3RhdHVzL2dpdGh1Yi9zd2FnZ2VyLWFwaS9zd2FnZ2VyLWNvZGVn
ZW4/YnJhbmNoPTMuMC4wJnN2Zz10cnVlJnBhc3NpbmdUZXh0PVdpbmRvd3Ml
MjBUZXN0JTIwLSUyME9LJmZhaWxpbmdUZXh0PVdpbmRvd3MlMjBUZXN0JTIw
LSUyMEZhaWxzKV0oaHR0cHM6Ly9jaS5hcHB2ZXlvci5jb20vcHJvamVjdC9z
d2FnZ2VyaHViLWJvdC9zd2FnZ2VyLWNvZGVnZW4pCgoKW01hdmVuIENlbnRy
YWxdKGh0dHBzOi8vbWF2ZW4tYmFkZ2VzLmhlcm9rdWFwcC5jb20vbWF2ZW4t
Y2VudHJhbC9pby5zd2FnZ2VyL3N3YWdnZXItY29kZWdlbi1wcm9qZWN0KQoK
OnN0YXI6OnN0YXI6OnN0YXI6IElmIHlvdSB3b3VsZCBsaWtlIHRvIGNvbnRy
aWJ1dGUsIHBsZWFzZSByZWZlciB0byBbZ3VpZGVsaW5lc10oaHR0cHM6Ly9n
aXRodWIuY29tL3N3YWdnZXItYXBpL3N3YWdnZXItY29kZWdlbi9ibG9iL21h
c3Rlci9DT05UUklCVVRJTkcubWQpIGFuZCBhIGxpc3Qgb2YgW29wZW4gdGFz
a3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9zd2FnZ2VyLWFwaS9zd2FnZ2VyLWNv
ZGVnZW4vaXNzdWVzP3E9aXMlM0FvcGVuK2lzJTNBaXNzdWUrbGFiZWwlM0El
MjJoZWxwK3dhbnRlZCUyMikuOnN0YXI6OnN0YXI6OnN0YXI6Cgo6bm90ZWJv
b2tfd2l0aF9kZWNvcmF0aXZlX2NvdmVyOiBGb3IgbW9yZSBpbmZvcm1hdGlv
biwgcGxlYXNlIHJlZmVyIHRvIHRoZSBbV2lraSBwYWdlXShodHRwczovL2dp
dGh1Yi5jb20vc3dhZ2dlci1hcGkvc3dhZ2dlci1jb2RlZ2VuL3dpa2kpIGFu
ZCBbRkFRXShodHRwczovL2dpdGh1Yi5jb20vc3dhZ2dlci1hcGkvc3dhZ2dl
ci1jb2RlZ2VuL3dpa2kvRkFRKSA6bm90ZWJvb2tfd2l0aF9kZWNvcmF0aXZl
X2NvdmVyOgoKOndhcm5pbmc6IElmIHRoZSBPcGVuQVBJL1N3YWdnZXIgc3Bl
YyBpcyBvYnRhaW5lZCBmcm9tIGFuIHVudHJ1c3RlZCBzb3VyY2UsIHBsZWFz
ZSBtYWtlIHN1cmUgeW91J3ZlIHJldmlld2VkIHRoZSBzcGVjIGJlZm9yZSB1
c2luZyBTd2FnZ2VyIENvZGVnZW4gdG8gZ2VuZXJhdGUgdGhlIEFQSSBjbGll
bnQsIHNlcnZlciBzdHViIG9yIGRvY3VtZW50YXRpb24gYXMgW2NvZGUgaW5q
ZWN0aW9uXShodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Db2RlX2lu
amVjdGlvbikgbWF5IG9jY3VyIDp3YXJuaW5nOgoKOnJvY2tldDogUHJvZHVj
dEh1bnQ6IGh0dHBzOi8vcHJvZHVjdGh1bnQuY29tL3Bvc3RzL3N3YWdnZXIt
Y29kZWdlbiA6cm9ja2V0OgoKOm5vdGVib29rX3dpdGhfZGVjb3JhdGl2ZV9j
b3ZlcjogVGhlIGVCb29rIFtBIEJlZ2lubmVyJ3MgR3VpZGUgdG8gQ29kZSBH
ZW5lcmF0aW9uIGZvciBSRVNUIEFQSXNdKGh0dHBzOi8vZ3Vtcm9hZC5jb20v
bC9zd2FnZ2VyX2NvZGVnZW5fYmVnaW5uZXIpIGlzIGEgZ29vZCBzdGFydGlu
ZyBwb2ludCBmb3IgYmVnaW5uZXJzLgoKIyMgVmVyc2lvbmluZwoKKipOT1RF
OioqIHZlcnNpb24gMi5YIChgaW8uc3dhZ2dlcmApIGFuZCAzLlggKGBpby5z
d2FnZ2VyLmNvZGVnZW4udjNgKSBoYXZlICoqZGlmZmVyZW50KiogZ3JvdXAg
aWRzLgoKMi5YIGFuZCAzLlggdmVyc2lvbiBsaW5lcyBvZiBTd2FnZ2VyIENv
ZGVnZW4gYXJlIGF2YWlsYWJsZTsgMi5YIChgbWFzdGVyYCBicmFuY2gpIHN1
cHBvcnRzIFN3YWdnZXIvT3BlbkFQSSB2ZXJzaW9uIDIsCndoaWxlIDMuWCAo
W2AzLjAuMGAgYnJhbmNoXShodHRwczovL2dpdGh1Yi5jb20vc3dhZ2dlci1h
cGkvc3dhZ2dlci1jb2RlZ2VuL3RyZWUvMy4wLjApKSBzdXBwb3J0cyBPcGVu
QVBJIHZlcnNpb24gMyAoYW5kIHZlcnNpb24gMiB2aWEgc3BlYyBjb252ZXJz
aW9uIHRvIHZlcnNpb24gMykuCltPbmxpbmUgZ2VuZXJhdG9yIG9mIHZlcnNp
b24gMy5YXShodHRwczovL2dpdGh1Yi5jb20vc3dhZ2dlci1hcGkvc3dhZ2dl
ci1jb2RlZ2VuL3RyZWUvMy4wLjAjb25saW5lLWdlbmVyYXRvcnMpIHN1cHBv
cnRzIGJvdGggZ2VuZXJhdGlvbiBmcm9tIFN3YWdnZXIvT3BlbkFQSSB2ZXJz
aW9uIDIgKGJ5IHVzaW5nIGVuZ2luZSArIGdlbmVyYXRvcnMgb2YgMi5YKSBh
bmQgdmVyc2lvbiAzIHNwZWNpZmljYXRpb25zLgoKCioqTk9URToqKiB0aGlz
IGRvY3VtZW50IHJlZmVycyB0byB2ZXJzaW9uIDIuWCwgY2hlY2sgW2hlcmVd
KGh0dHBzOi8vZ2l0aHViLmNvbS9zd2FnZ2VyLWFwaS9zd2FnZ2VyLWNvZGVn
ZW4vdHJlZS8zLjAuMCkgZm9yIDMuWC4KCgojIyMgU3dhZ2dlciBDb2RlZ2Vu
IDIuWCAoW2BtYXN0ZXJgIGJyYW5jaF0oaHR0cHM6Ly9naXRodWIuY29tL3N3
YWdnZXItYXBpL3N3YWdnZXItY29kZWdlbi90cmVlL21hc3RlcikpCgpTd2Fn
Z2VyIENvZGVnZW4gMi5YIHN1cHBvcnRzIFN3YWdnZXIvT3BlbkFQSSB2ZXJz
aW9uIDIuCgpncm91cCBpZDogYGlvLnN3YWdnZXJgCm1hdmVuIGNlbnRyYWwg
KG1hdmVuIHBsdWdpbik6IGh0dHBzOi8vbXZucmVwb3NpdG9yeS5jb20vYXJ0
aWZhY3QvaW8uc3dhZ2dlci9zd2FnZ2VyLWNvZGVnZW4tbWF2ZW4tcGx1Z2lu
CgpkZXBlbmRlbmN5IGV4YW1wbGU6CgpgYGAKPGRlcGVuZGVuY3k+CiAgICA8
Z3JvdXBJZD5pby5zd2FnZ2VyPC9ncm91cElkPgogICAgPGFydGlmYWN0SWQ+
c3dhZ2dlci1jb2RlZ2VuLW1hdmVuLXBsdWdpbjwvYXJ0aWZhY3RJZD4KICAg
IDx2ZXJzaW9uPjIuNC45PC92ZXJzaW9uPgo8L2RlcGVuZGVuY3k+CmBgYAoK
IyMjIFN3YWdnZXIgQ29kZWdlbiAzLlggKFtgMy4wLjBgIGJyYW5jaF0oaHR0
cHM6Ly9naXRodWIuY29tL3N3YWdnZXItYXBpL3N3YWdnZXItY29kZWdlbi90
cmVlLzMuMC4wKSkKClN3YWdnZXIgQ29kZWdlbiAyLlggc3VwcG9ydHMgT3Bl
bkFQSSB2ZXJzaW9uIDMgKGFuZCB2ZXJzaW9uIDIgdmlhIHNwZWMgY29udmVy
c2lvbiB0byB2ZXJzaW9uIDMpCltPbmxpbmUgZ2VuZXJhdG9yIG9mIHZlcnNp
b24gMy5YXShodHRwczovL2dpdGh1Yi5jb20vc3dhZ2dlci1hcGkvc3dhZ2dl
ci1jb2RlZ2VuL3RyZWUvMy4wLjAjb25saW5lLWdlbmVyYXRvcnMpIHN1cHBv
cnRzIGJvdGggZ2VuZXJhdGlvbiBmcm9tIFN3YWdnZXIvT3BlbkFQSSB2ZXJz
aW9uIDIgKGJ5IHVzaW5nIGVuZ2luZSArIGdlbmVyYXRvcnMgb2YgMi5YKSBh
bmQgdmVyc2lvbiAzIHNwZWNpZmljYXRpb25zLgoKZ3JvdXAgaWQ6IGBpby5z
d2FnZ2VyLmNvZGVnZW4udjNgCm1hdmVuIGNlbnRyYWw6IGh0dHBzOi8vbXZu
cmVwb3NpdG9yeS5jb20vYXJ0aWZhY3QvaW8uc3dhZ2dlci5jb2RlZ2VuLnYz
CgpkZXBlbmRlbmN5IGV4YW1wbGU6CgpgYGAKPGRlcGVuZGVuY3k+CiAgICA8
Z3JvdXBJZD5pby5zd2FnZ2VyLmNvZGVnZW4udjM8L2dyb3VwSWQ+CiAgICA8
YXJ0aWZhY3RJZD5zd2FnZ2VyLWNvZGVnZW4tbWF2ZW4tcGx1Z2luPC9hcnRp
ZmFjdElkPgogICAgPHZlcnNpb24+My4wLjEzPC92ZXJzaW9uPgo8L2RlcGVu
ZGVuY3k+CmBgYAoKCgojIyBPdmVydmlldwpUaGlzIGlzIHRoZSBTd2FnZ2Vy
IENvZGVnZW4gcHJvamVjdCwgd2hpY2ggYWxsb3dzIGdlbmVyYXRpb24gb2Yg
QVBJIGNsaWVudCBsaWJyYXJpZXMgKFNESyBnZW5lcmF0aW9uKSwgc2VydmVy
IHN0dWJzIGFuZCBkb2N1bWVudGF0aW9uIGF1dG9tYXRpY2FsbHkgZ2l2ZW4g
YW4gW09wZW5BUEkgU3BlY10oaHR0cHM6Ly9naXRodWIuY29tL09BSS9PcGVu
QVBJLVNwZWNpZmljYXRpb24pLiBDdXJyZW50bHksIHRoZSBmb2xsb3dpbmcg
bGFuZ3VhZ2VzL2ZyYW1ld29ya3MgYXJlIHN1cHBvcnRlZDoKCi0gKipBUEkg
Y2xpZW50cyoqOiAqKkFjdGlvblNjcmlwdCoqLCAqKkFkYSoqLCAqKkFwZXgq
KiwgKipCYXNoKiosICoqQyMqKiAoLm5ldCAyLjAsIDMuNSBvciBsYXRlciks
ICoqQysrKiogKGNwcHJlc3QsIFF0NSwgVGl6ZW4pLCAqKkNsb2p1cmUqKiwg
KipEYXJ0KiosICoqRWxpeGlyKiosICoqRWxtKiosICoqRWlmZmVsKiosICoq
RXJsYW5nKiosICoqR28qKiwgKipHcm9vdnkqKiwgKipIYXNrZWxsKiogKGh0
dHAtY2xpZW50LCBTZXJ2YW50KSwgKipKYXZhKiogKEplcnNleTEueCwgSmVy
c2V5Mi54LCBPa0h0dHAsIFJldHJvZml0MS54LCBSZXRyb2ZpdDIueCwgRmVp
Z24sIFJlc3RUZW1wbGF0ZSwgUkVTVEVhc3ksIFZlcnR4LCBHb29nbGUgQVBJ
IENsaWVudCBMaWJyYXJ5IGZvciBKYXZhLCBSZXN0LWFzc3VyZWQpLCAqKktv
dGxpbioqLCAqKkx1YSoqLCAqKk5vZGUuanMqKiAoRVM1LCBFUzYsIEFuZ3Vs
YXJKUyB3aXRoIEdvb2dsZSBDbG9zdXJlIENvbXBpbGVyIGFubm90YXRpb25z
KSAqKk9iamVjdGl2ZS1DKiosICoqUGVybCoqLCAqKlBIUCoqLCAqKlBvd2Vy
U2hlbGwqKiwgKipQeXRob24qKiwgKipSKiosICoqUnVieSoqLCAqKlJ1c3Qq
KiAocnVzdCwgcnVzdC1zZXJ2ZXIpLCAqKlNjYWxhKiogKGFra2EsIGh0dHA0
cywgc3dhZ2dlci1hc3luYy1odHRwY2xpZW50KSwgKipTd2lmdCoqICgyLngs
IDMueCwgNC54KSwgKipUeXBlc2NyaXB0KiogKEFuZ3VsYXIxLngsIEFuZ3Vs
YXIyLngsIEZldGNoLCBqUXVlcnksIE5vZGUpCi0gKipTZXJ2ZXIgc3R1YnMq
KjogKipBZGEqKiwgKipDIyoqIChBU1AuTkVUIENvcmUsIE5hbmN5RngpLCAq
KkMrKyoqIChQaXN0YWNoZSwgUmVzdGJlZCksICoqRXJsYW5nKiosICoqR28q
KiwgKipIYXNrZWxsKiogKFNlcnZhbnQpLCAqKkphdmEqKiAoTVNGNEosIFNw
cmluZywgVW5kZXJ0b3csIEpBWC1SUzogQ0RJLCBDWEYsIEluZmxlY3Rvciwg
UmVzdEVhc3ksIFBsYXkgRnJhbWV3b3JrLCBbUEtNU1RdKGh0dHBzOi8vZ2l0
aHViLmNvbS9Qcm9LYXJtYS1JbmMvcGttc3QtZ2V0dGluZy1zdGFydGVkLWV4
YW1wbGVzKSksICoqS290bGluKiosICoqUEhQKiogKEx1bWVuLCBTbGltLCBT
aWxleCwgW1N5bWZvbnldKGh0dHBzOi8vc3ltZm9ueS5jb20vKSwgW1plbmQg
RXhwcmVzc2l2ZV0oaHR0cHM6Ly9naXRodWIuY29tL3plbmRmcmFtZXdvcmsv
emVuZC1leHByZXNzaXZlKSksICoqUHl0aG9uKiogKEZsYXNrKSwgKipOb2Rl
SlMqKiwgKipSdWJ5KiogKFNpbmF0cmEsIFJhaWxzNSksICoqUnVzdCoqIChy
dXN0LXNlcnZlciksICoqU2NhbGEqKiAoW0ZpbmNoXShodHRwczovL2dpdGh1
Yi5jb20vZmluYWdsZS9maW5jaCksIFtMYWdvbV0oaHR0cHM6Ly9naXRodWIu
Y29tL2xhZ29tL2xhZ29tKSwgU2NhbGF0cmEpCi0gKipBUEkgZG9jdW1lbnRh
dGlvbiBnZW5lcmF0b3JzKio6ICoqSFRNTCoqLCAqKkNvbmZsdWVuY2UgV2lr
aSoqCi0gKipDb25maWd1cmF0aW9uIGZpbGVzKio6IFsqKkFwYWNoZTIqKl0o
aHR0cHM6Ly9odHRwZC5hcGFjaGUub3JnLykKLSAqKk90aGVycyoqOiAqKkpN
ZXRlcioqCgpDaGVjayBvdXQgW09wZW5BUEktU3BlY10oaHR0cHM6Ly9naXRo
dWIuY29tL09BSS9PcGVuQVBJLVNwZWNpZmljYXRpb24pIGZvciBhZGRpdGlv
bmFsIGluZm9ybWF0aW9uIGFib3V0IHRoZSBPcGVuQVBJIHByb2plY3QuCgoj
IFRhYmxlIG9mIGNvbnRlbnRzCgogIC0gW1N3YWdnZXIgQ29kZSBHZW5lcmF0
b3JdKCNzd2FnZ2VyLWNvZGUtZ2VuZXJhdG9yKQogIC0gW092ZXJ2aWV3XSgj
b3ZlcnZpZXcpCiAgLSBbVGFibGUgb2YgQ29udGVudHNdKCN0YWJsZS1vZi1j
b250ZW50cykKICAtIEluc3RhbGxhdGlvbgogICAgLSBbQ29tcGF0aWJpbGl0
eV0oI2NvbXBhdGliaWxpdHkpCiAgICAtIFtQcmVyZXF1aXNpdGVzXSgjcHJl
cmVxdWlzaXRlcykKICAgICAgLSBbT1MgWCBVc2Vyc10oI29zLXgtdXNlcnMp
CiAgICAtIFtCdWlsZGluZ10oI2J1aWxkaW5nKQogICAgLSBbRG9ja2VyXSgj
ZG9ja2VyKQogICAgICAtIFtEZXZlbG9wbWVudCBpbiBEb2NrZXJdKCNkZXZl
bG9wbWVudC1pbi1kb2NrZXIpCiAgICAgIC0gW1J1biBkb2NrZXIgaW4gVmFn
cmFudF0oI3J1bi1kb2NrZXItaW4tdmFncmFudCkKICAgICAgLSBbUHVibGlj
IERvY2tlciBpbWFnZV0oI3B1YmxpYy1kb2NrZXItaW1hZ2UpCiAgICAtIFtI
b21lYnJld10oI2hvbWVicmV3KQogIC0gW0dldHRpbmcgU3RhcnRlZF0oI2dl
dHRpbmctc3RhcnRlZCkKICAtIEdlbmVyYXRvcnMKICAgIC0gW1RvIGdlbmVy
YXRlIGEgc2FtcGxlIGNsaWVudCBsaWJyYXJ5XSgjdG8tZ2VuZXJhdGUtYS1z
YW1wbGUtY2xpZW50LWxpYnJhcnkpCiAgICAtIFtHZW5lcmF0aW5nIGxpYnJh
cmllcyBmcm9tIHlvdXIgc2VydmVyXSgjZ2VuZXJhdGluZy1saWJyYXJpZXMt
ZnJvbS15b3VyLXNlcnZlcikKICAgIC0gW01vZGlmeWluZyB0aGUgY2xpZW50
IGxpYnJhcnkgZm9ybWF0XSgjbW9kaWZ5aW5nLXRoZS1jbGllbnQtbGlicmFy
eS1mb3JtYXQpCiAgICAtIFtNYWtpbmcgeW91ciBvd24gY29kZWdlbiBtb2R1
bGVzXSgjbWFraW5nLXlvdXItb3duLWNvZGVnZW4tbW9kdWxlcykKICAgIC0g
W1doZXJlIGlzIEphdmFzY3JpcHQ/Pz9dKCN3aGVyZS1pcy1qYXZhc2NyaXB0
KQogICAgLSBbR2VuZXJhdGluZyBhIGNsaWVudCBmcm9tIGxvY2FsIGZpbGVz
XSgjZ2VuZXJhdGluZy1hLWNsaWVudC1mcm9tLWxvY2FsLWZpbGVzKQogICAg
LSBbQ3VzdG9taXppbmcgdGhlIGdlbmVyYXRvcl0oI2N1c3RvbWl6aW5nLXRo
ZS1nZW5lcmF0b3IpCiAgICAtIFtWYWxpZGF0aW5nIHlvdXIgT3BlbkFQSSBT
cGVjXSgjdmFsaWRhdGluZy15b3VyLW9wZW5hcGktc3BlYykKICAgIC0gW0dl
bmVyYXRpbmcgZHluYW1pYyBodG1sIGFwaSBkb2N1bWVudGF0aW9uXSgjZ2Vu
ZXJhdGluZy1keW5hbWljLWh0bWwtYXBpLWRvY3VtZW50YXRpb24pCiAgICAt
IFtHZW5lcmF0aW5nIHN0YXRpYyBodG1sIGFwaSBkb2N1bWVudGF0aW9uXSgj
Z2VuZXJhdGluZy1zdGF0aWMtaHRtbC1hcGktZG9jdW1lbnRhdGlvbikKICAg
IC0gW1RvIGJ1aWxkIGEgc2VydmVyIHN0dWJdKCN0by1idWlsZC1hLXNlcnZl
ci1zdHViKQogICAgLSBbVG8gYnVpbGQgdGhlIGNvZGVnZW4gbGlicmFyeV0o
I3RvLWJ1aWxkLXRoZS1jb2RlZ2VuLWxpYnJhcnkpCiAgLSBbV29ya2Zsb3cg
SW50ZWdyYXRpb25dKCN3b3JrZmxvdy1pbnRlZ3JhdGlvbikKICAgIC0gW01h
dmVuIEludGVncmF0aW9uXSgjbWF2ZW4taW50ZWdyYXRpb24pCiAgICAtIFtH
cmFkbGUgSW50ZWdyYXRpb25dKCNncmFkbGUtaW50ZWdyYXRpb24pCiAgLSBb
R2l0aHViIEludGVncmF0aW9uXSgjZ2l0aHViLWludGVncmF0aW9uKQogIC0g
W09ubGluZSBHZW5lcmF0b3JzXSgjb25saW5lLWdlbmVyYXRvcnMpCiAgLSBb
R3VpZGVsaW5lcyBmb3IgQ29udHJpYnV0aW9uXShodHRwczovL2dpdGh1Yi5j
b20vc3dhZ2dlci1hcGkvc3dhZ2dlci1jb2RlZ2VuL2Jsb2IvbWFzdGVyL0NP
TlRSSUJVVElORy5tZCNndWlkZWxpbmVzLWZvci1jb250cmlidXRpbmcpCiAg
LSBbQ29tcGFuaWVzL1Byb2plY3RzIHVzaW5nIFN3YWdnZXIgQ29kZWdlbl0o
I2NvbXBhbmllc3Byb2plY3RzLXVzaW5nLXN3YWdnZXItY29kZWdlbikKICAt
IFtQcmVzZW50YXRpb25zL1ZpZGVvcy9UdXRvcmlhbHMvQm9va3NdKCNwcmVz
ZW50YXRpb25zdmlkZW9zdHV0b3JpYWxzYm9va3MpCiAgLSBbU3dhZ2dlciBD
b2RlZ2VuIENvcmUgVGVhbV0oI3N3YWdnZXItY29kZWdlbi1jb3JlLXRlYW0p
CiAgLSBbU3dhZ2dlciBDb2RlZ2VuIFRlY2huaWNhbCBDb21taXR0ZWVdKCNz
d2FnZ2VyLWNvZGVnZW4tdGVjaG5pY2FsLWNvbW1pdHRlZSkKICAtIFtMaWNl
bnNlXSgjbGljZW5zZSkKCgojIyBDb21wYXRpYmlsaXR5ClRoZSBPcGVuQVBJ
IFNwZWNpZmljYXRpb24gaGFzIHVuZGVyZ29uZSAzIHJldmlzaW9ucyBzaW5j
ZSBpbml0aWFsIGNyZWF0aW9uIGluIDIwMTAuICBUaGUgU3dhZ2dlciBDb2Rl
Z2VuIHByb2plY3QgaGFzIHRoZSBmb2xsb3dpbmcgY29tcGF0aWJpbGl0aWVz
IHdpdGggdGhlIE9wZW5BUEkgU3BlY2lmaWNhdGlvbjoKClN3YWdnZXIgQ29k
ZWdlbiBWZXJzaW9uICAgIHwgUmVsZWFzZSBEYXRlIHwgT3BlbkFQSSBTcGVj
IGNvbXBhdGliaWxpdHkgfCBOb3RlcwotLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLSB8IC0tLS0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tIHwgLS0tLS0KMy4wLjE0LVNOQVBTSE9UIChjdXJyZW50IDMuMC4wLCB1
cGNvbWluZyBtaW5vciByZWxlYXNlKSBbU05BUFNIT1RdKGh0dHBzOi8vb3Nz
LnNvbmF0eXBlLm9yZy9jb250ZW50L3JlcG9zaXRvcmllcy9zbmFwc2hvdHMv
aW8vc3dhZ2dlci9jb2RlZ2VuL3YzL3N3YWdnZXItY29kZWdlbi1jbGkvMy4w
LjE0LVNOQVBTSE9ULyl8IFRCRCB8IDEuMCwgMS4xLCAxLjIsIDIuMCwgMy4w
IHwgTWlub3IgcmVsZWFzZQpbMy4wLjEzXShodHRwczovL2dpdGh1Yi5jb20v
c3dhZ2dlci1hcGkvc3dhZ2dlci1jb2RlZ2VuL3JlbGVhc2VzL3RhZy92My4w
LjEzKSAoKipjdXJyZW50IHN0YWJsZSoqKSB8IDIwMTktMTYtMTQgICB8IDEu
MCwgMS4xLCAxLjIsIDIuMCwgMy4wICAgfCBbdGFnIHYzLjAuMTNdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9zd2FnZ2VyLWFwaS9zd2FnZ2VyLWNvZGVnZW4vdHJl
ZS92My4wLjEzKQpbMy4wLjEyXShodHRwczovL2dpdGh1Yi5jb20vc3dhZ2dl
ci1hcGkvc3dhZ2dlci1jb2RlZ2VuL3JlbGVhc2VzL3RhZy92My4wLjEyKSB8
IDIwMTktMTAtMTQgICB8IDEuMCwgMS4xLCAxLjIsIDIuMCwgMy4wICAgfCBb
dGFnIHYzLjAuMTJdKGh0dHBzOi8vZ2l0aHViLmNvbS9zd2FnZ2VyLWFwaS9z
d2FnZ2VyLWNvZGVnZW4vdHJlZS92My4wLjEyKQpbMy4wLjExXShodHRwczov
L2dpdGh1Yi5jb20vc3dhZ2dlci1hcGkvc3dhZ2dlci1jb2RlZ2VuL3JlbGVh
c2VzL3RhZy92My4wLjExKSB8IDIwMTktMDgtMjQgICB8IDEuMCwgMS4xLCAx
LjIsIDIuMCwgMy4wICAgfCBbdGFnIHYzLjAuMTFdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9zd2FnZ2VyLWFwaS9zd2FnZ2VyLWNvZGVnZW4vdHJlZS92My4wLjEx
KQpbMy4wLjEwXShodHRwczovL2dpdGh1Yi5jb20vc3dhZ2dlci1hcGkvc3dh
Z2dlci1jb2RlZ2VuL3JlbGVhc2VzL3RhZy92My4wLjEwKSB8IDIwMTktMDct
MTEgICB8IDEuMCwgMS4xLCAxLjIsIDIuMCwgMy4wICAgfCBbdGFnIHYzLjAu
MTBdKGh0dHBzOi8vZ2l0aHViLmNvbS9zd2FnZ2VyLWFwaS9zd2FnZ2VyLWNv
ZGVnZW4vdHJlZS92My4wLjEwKQpbMy4wLjldKGh0dHBzOi8vZ2l0aHViLmNv
bS9zd2FnZ2VyLWFwaS9zd2FnZ2VyLWNvZGVnZW4vcmVsZWFzZXMvdGFnL3Yz
LjAuOSkgfCAyMDE5LTA2LTI4ICAgfCAxLjAsIDEuMSwgMS4yLCAyLjAsIDMu
MCAgIHwgW3RhZyB2My4wLjldKGh0dHBzOi8vZ2l0aHViLmNvbS9zd2FnZ2Vy
LWFwaS9zd2FnZ2VyLWNvZGVnZW4vdHJlZS92My4wLjkpClszLjAuOF0oaHR0
cHM6Ly9naXRodWIuY29tL3N3YWdnZXItYXBpL3N3YWdnZXItY29kZWdlbi9y
ZWxlYXNlcy90YWcvdjMuMC44KSB8IDIwMTktMDQtMjUgICB8IDEuMCwgMS4x
LCAxLjIsIDIuMCwgMy4wICAgfCBbdGFnIHYzLjAuOF0oaHR0cHM6Ly9naXRo
dWIuY29tL3N3YWdnZXItYXBpL3N3YWdnZXItY29kZWdlbi90cmVlL3YzLjAu
OCkKWzMuMC43XShodHRwczovL2dpdGh1Yi5jb20vc3dhZ2dlci1hcGkvc3dh
Z2dlci1jb2RlZ2VuL3JlbGVhc2VzL3RhZy92My4wLjcpIHwgMjAxOS0wMy0y
NiAgIHwgMS4wLCAxLjEsIDEuMiwgMi4wLCAzLjAgICB8IFt0YWcgdjMuMC43
XShodHRwczovL2dpdGh1Yi5jb20vc3dhZ2dlci1hcGkvc3dhZ2dlci1jb2Rl
Z2VuL3RyZWUvdjMuMC43KQpbMy4wLjVdKGh0dHBzOi8vZ2l0aHViLmNvbS9z
d2FnZ2VyLWFwaS9zd2FnZ2VyLWNvZGVnZW4vcmVsZWFzZXMvdGFnL3YzLjAu
NSkgfCAyMDE5LTAyLTE4ICAgfCAxLjAsIDEuMSwgMS4yLCAyLjAsIDMuMCAg
IHwgW3RhZyB2My4wLjVdKGh0dHBzOi8vZ2l0aHViLmNvbS9zd2FnZ2VyLWFw
aS9zd2FnZ2VyLWNvZGVnZW4vdHJlZS92My4wLjUpClszLjAuNF0oaHR0cHM6
Ly9naXRodWIuY29tL3N3YWdnZXItYXBpL3N3YWdnZXItY29kZWdlbi9yZWxl
YXNlcy90YWcvdjMuMC40KSB8IDIwMTktMDEtMTYgICB8IDEuMCwgMS4xLCAx
LjIsIDIuMCwgMy4wICAgfCBbdGFnIHYzLjAuNF0oaHR0cHM6Ly9naXRodWIu
Y29tL3N3YWdnZXItYXBpL3N3YWdnZXItY29kZWdlbi90cmVlL3YzLjAuNCkK
WzMuMC4zXShodHRwczovL2dpdGh1Yi5jb20vc3dhZ2dlci1hcGkvc3dhZ2dl
ci1jb2RlZ2VuL3JlbGVhc2VzL3RhZy92My4wLjMpIHwgMjAxOC0xMS0zMCAg
IHwgMS4wLCAxLjEsIDEuMiwgMi4wLCAzLjAgICB8IFt0YWcgdjMuMC4zXSho
dHRwczovL2dpdGh1Yi5jb20vc3dhZ2dlci1hcGkvc3dhZ2dlci1jb2RlZ2Vu
L3RyZWUvdjMuMC4zKQpbMy4wLjJdKGh0dHBzOi8vZ2l0aHViLmNvbS9zd2Fn
Z2VyLWFwaS9zd2FnZ2VyLWNvZGVnZW4vcmVsZWFzZXMvdGFnL3YzLjAuMil8
IDIwMTgtMTAtMTkgfCAxLjAsIDEuMSwgMS4yLCAyLjAsIDMuMCB8IE1pbm9y
IHJlbGVhc2UKWzMuMC4xXShodHRwczovL2dpdGh1Yi5jb20vc3dhZ2dlci1h
cGkvc3dhZ2dlci1jb2RlZ2VuL3JlbGVhc2VzL3RhZy92My4wLjEpfCAyMDE4
LTEwLTA1IHwgMS4wLCAxLjEsIDEuMiwgMi4wLCAzLjAgfCBNYWpvciByZWxl
YXNlIHdpdGggYnJlYWtpbmcgY2hhbmdlcwpbMy4wLjBdKGh0dHBzOi8vZ2l0
aHViLmNvbS9zd2FnZ2VyLWFwaS9zd2FnZ2VyLWNvZGVnZW4vcmVsZWFzZXMv
dGFnL3YzLjAuMCl8IDIwMTgtMDktMDYgfCAxLjAsIDEuMSwgMS4yLCAyLjAs
IDMuMCB8IE1ham9yIHJlbGVhc2Ugd2l0aCBicmVha2luZyBjaGFuZ2VzCjIu
NC4xMC1TTkFQU0hPVCAoY3VycmVudCBtYXN0ZXIsIHVwY29taW5nIG1pbm9y
IHJlbGVhc2UpIFtTTkFQU0hPVF0oaHR0cHM6Ly9vc3Muc29uYXR5cGUub3Jn
L2NvbnRlbnQvcmVwb3NpdG9yaWVzL3NuYXBzaG90cy9pby9zd2FnZ2VyL3N3
YWdnZXItY29kZWdlbi1jbGkvMi40LjEwLVNOQVBTSE9ULyl8IFRCRCAgIHwg
MS4wLCAxLjEsIDEuMiwgMi4wICAgfCBNaW5vciByZWxlYXNlClsyLjQuOV0o
aHR0cHM6Ly9naXRodWIuY29tL3N3YWdnZXItYXBpL3N3YWdnZXItY29kZWdl
bi9yZWxlYXNlcy90YWcvdjIuNC45KSAoKipjdXJyZW50IHN0YWJsZSoqKSB8
IDIwMTktMTAtMTQgICB8IDEuMCwgMS4xLCAxLjIsIDIuMCAgIHwgW3RhZyB2
Mi40LjldKGh0dHBzOi8vZ2l0aHViLmNvbS9zd2FnZ2VyLWFwaS9zd2FnZ2Vy
LWNvZGVnZW4vdHJlZS92Mi40LjkpClsyLjQuOF0oaHR0cHM6Ly9naXRodWIu
Y29tL3N3YWdnZXItYXBpL3N3YWdnZXItY29kZWdlbi9yZWxlYXNlcy90YWcv
djIuNC44KSB8IDIwMTktMDgtMjQgICB8IDEuMCwgMS4xLCAxLjIsIDIuMCAg
IHwgW3RhZyB2Mi40LjhdKGh0dHBzOi8vZ2l0aHViLmNvbS9zd2FnZ2VyLWFw
aS9zd2FnZ2VyLWNvZGVnZW4vdHJlZS92Mi40LjgpClsyLjQuN10oaHR0cHM6
Ly9naXRodWIuY29tL3N3YWdnZXItYXBpL3N3YWdnZXItY29kZWdlbi9yZWxl
YXNlcy90YWcvdjIuNC43KSB8IDIwMTktMDctMTEgICB8IDEuMCwgMS4xLCAx
LjIsIDIuMCAgIHwgW3RhZyB2Mi40LjddKGh0dHBzOi8vZ2l0aHViLmNvbS9z
d2FnZ2VyLWFwaS9zd2FnZ2VyLWNvZGVnZW4vdHJlZS92Mi40LjcpClsyLjQu
Nl0oaHR0cHM6Ly9naXRodWIuY29tL3N3YWdnZXItYXBpL3N3YWdnZXItY29k
ZWdlbi9yZWxlYXNlcy90YWcvdjIuNC42KSB8IDIwMTktMDYtMjggICB8IDEu
MCwgMS4xLCAxLjIsIDIuMCAgIHwgW3RhZyB2Mi40LjZdKGh0dHBzOi8vZ2l0
aHViLmNvbS9zd2FnZ2VyLWFwaS9zd2FnZ2VyLWNvZGVnZW4vdHJlZS92Mi40
LjYpClsyLjQuNV0oaHR0cHM6Ly9naXRodWIuY29tL3N3YWdnZXItYXBpL3N3
YWdnZXItY29kZWdlbi9yZWxlYXNlcy90YWcvdjIuNC41KSAgfCAyMDE5LTA0
LTI1ICAgfCAxLjAsIDEuMSwgMS4yLCAyLjAgICB8IFt0YWcgdjIuNC41XSho
dHRwczovL2dpdGh1Yi5jb20vc3dhZ2dlci1hcGkvc3dhZ2dlci1jb2RlZ2Vu
L3RyZWUvdjIuNC41KQpbMi40LjRdKGh0dHBzOi8vZ2l0aHViLmNvbS9zd2Fn
Z2VyLWFwaS9zd2FnZ2VyLWNvZGVnZW4vcmVsZWFzZXMvdGFnL3YyLjQuNCkg
fCAyMDE5LTAzLTI2ICAgfCAxLjAsIDEuMSwgMS4yLCAyLjAgICB8IFt0YWcg
djIuNC40XShodHRwczovL2dpdGh1Yi5jb20vc3dhZ2dlci1hcGkvc3dhZ2dl
ci1jb2RlZ2VuL3RyZWUvdjIuNC40KQpbMi40LjJdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9zd2FnZ2VyLWFwaS9zd2FnZ2VyLWNvZGVnZW4vcmVsZWFzZXMvdGFn
L3YyLjQuMikgfCAyMDE5LTAyLTE4ICAgfCAxLjAsIDEuMSwgMS4yLCAyLjAg
ICB8IFt0YWcgdjIuNC4yXShodHRwczovL2dpdGh1Yi5jb20vc3dhZ2dlci1h
cGkvc3dhZ2dlci1jb2RlZ2VuL3RyZWUvdjIuNC4yKQpbMi40LjFdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9zd2FnZ2VyLWFwaS9zd2FnZ2VyLWNvZGVnZW4vcmVs
ZWFzZXMvdGFnL3YyLjQuMSkgfCAyMDE5LTAxLTE2ICAgfCAxLjAsIDEuMSwg
MS4yLCAyLjAgICB8IFt0YWcgdjIuNC4xXShodHRwczovL2dpdGh1Yi5jb20v
c3dhZ2dlci1hcGkvc3dhZ2dlci1jb2RlZ2VuL3RyZWUvdjIuNC4xKQpbMi40
LjBdKGh0dHBzOi8vZ2l0aHViLmNvbS9zd2FnZ2VyLWFwaS9zd2FnZ2VyLWNv
ZGVnZW4vcmVsZWFzZXMvdGFnL3YyLjQuMCkgfCAyMDE4LTExLTMwICAgfCAx
LjAsIDEuMSwgMS4yLCAyLjAgICB8IFt0YWcgdjIuNC4wXShodHRwczovL2dp
dGh1Yi5jb20vc3dhZ2dlci1hcGkvc3dhZ2dlci1jb2RlZ2VuL3RyZWUvdjIu
NC4wKQpbMi4zLjFdKGh0dHBzOi8vZ2l0aHViLmNvbS9zd2FnZ2VyLWFwaS9z
d2FnZ2VyLWNvZGVnZW4vcmVsZWFzZXMvdGFnL3YyLjMuMSkgfCAyMDE4LTAx
LTE3ICAgfCAxLjAsIDEuMSwgMS4yLCAyLjAgICB8IFt0YWcgdjIuMy4xXSho
dHRwczovL2dpdGh1Yi5jb20vc3dhZ2dlci1hcGkvc3dhZ2dlci1jb2RlZ2Vu
L3RyZWUvdjIuMy4xKQpbMi4zLjBdKGh0dHBzOi8vZ2l0aHViLmNvbS9zd2Fn
Z2VyLWFwaS9zd2FnZ2VyLWNvZGVnZW4vcmVsZWFzZXMvdGFnL3YyLjMuMCkg
fCAyMDE3LTEyLTIxICAgfCAxLjAsIDEuMSwgMS4yLCAyLjAgICB8IFt0YWcg
djIuMy4wXShodHRwczovL2dpdGh1Yi5jb20vc3dhZ2dlci1hcGkvc3dhZ2dl
ci1jb2RlZ2VuL3RyZWUvdjIuMy4wKQpbMi4yLjNdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9zd2FnZ2VyLWFwaS9zd2FnZ2VyLWNvZGVnZW4vcmVsZWFzZXMvdGFn
L3YyLjIuMykgfCAyMDE3LTA3LTE1ICAgfCAxLjAsIDEuMSwgMS4yLCAyLjAg
ICB8IFt0YWcgdjIuMi4zXShodHRwczovL2dpdGh1Yi5jb20vc3dhZ2dlci1h
cGkvc3dhZ2dlci1jb2RlZ2VuL3RyZWUvdjIuMi4zKQpbMi4yLjJdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9zd2FnZ2VyLWFwaS9zd2FnZ2VyLWNvZGVnZW4vcmVs
ZWFzZXMvdGFnL3YyLjIuMikgfCAyMDE3LTAzLTAxICAgfCAxLjAsIDEuMSwg
MS4yLCAyLjAgICB8IFt0YWcgdjIuMi4yXShodHRwczovL2dpdGh1Yi5jb20v
c3dhZ2dlci1hcGkvc3dhZ2dlci1jb2RlZ2VuL3RyZWUvdjIuMi4yKQpbMi4y
LjFdKGh0dHBzOi8vZ2l0aHViLmNvbS9zd2FnZ2VyLWFwaS9zd2FnZ2VyLWNv
ZGVnZW4vcmVsZWFzZXMvdGFnL3YyLjIuMSkgfCAyMDE2LTA4LTA3ICAgfCAx
LjAsIDEuMSwgMS4yLCAyLjAgICB8IFt0YWcgdjIuMi4xXShodHRwczovL2dp
dGh1Yi5jb20vc3dhZ2dlci1hcGkvc3dhZ2dlci1jb2RlZ2VuL3RyZWUvdjIu
Mi4xKQpbMi4xLjZdKGh0dHBzOi8vZ2l0aHViLmNvbS9zd2FnZ2VyLWFwaS9z
d2FnZ2VyLWNvZGVnZW4vcmVsZWFzZXMvdGFnL3YyLjEuNikgfCAyMDE2LTA0
LTA2ICAgfCAxLjAsIDEuMSwgMS4yLCAyLjAgICB8IFt0YWcgdjIuMS42XSho
dHRwczovL2dpdGh1Yi5jb20vc3dhZ2dlci1hcGkvc3dhZ2dlci1jb2RlZ2Vu
L3RyZWUvdjIuMS42KQoyLjAuMTcgICAgICAgICAgICAgICAgICAgICB8IDIw
MTQtMDgtMjIgICB8IDEuMSwgMS4yICAgICAgICAgICAgIHwgW3RhZyB2Mi4w
LjE3XShodHRwczovL2dpdGh1Yi5jb20vc3dhZ2dlci1hcGkvc3dhZ2dlci1j
b2RlZ2VuL3RyZWUvMi4wLjE3KQoxLjAuNCAgICAgICAgICAgICAgICAgICAg
ICB8IDIwMTItMDQtMTIgICB8IDEuMCwgMS4xICAgICAgICAgICAgIHwgW3Rh
ZyB2MS4wLjRdKGh0dHBzOi8vZ2l0aHViLmNvbS9zd2FnZ2VyLWFwaS9zd2Fn
Z2VyLWNvZGVnZW4vdHJlZS9zd2FnZ2VyLWNvZGVnZW5fMi45LjEtMS4xKQoK
CgojIyMgUHJlcmVxdWlzaXRlcwpJZiB5b3UncmUgbG9va2luZyBmb3IgdGhl
IGxhdGVzdCBzdGFibGUgdmVyc2lvbiwgeW91IGNhbiBncmFiIGl0IGRpcmVj
dGx5IGZyb20gTWF2ZW4ub3JnIChKYXZhIDcgcnVudGltZSBhdCBhIG1pbmlt
dW0pOgoKYGBgc2gKd2dldCBodHRwOi8vY2VudHJhbC5tYXZlbi5vcmcvbWF2
ZW4yL2lvL3N3YWdnZXIvc3dhZ2dlci1jb2RlZ2VuLWNsaS8yLjQuOS9zd2Fn
Z2VyLWNvZGVnZW4tY2xpLTIuNC45LmphciAtTyBzd2FnZ2VyLWNvZGVnZW4t
Y2xpLmphcgoKamF2YSAtamFyIHN3YWdnZXItY29kZWdlbi1jbGkuamFyIGhl
bHAKYGBgCgpGb3IgV2luZG93cyB1c2VycywgeW91IHdpbGwgbmVlZCB0byBp
bnN0YWxsIFt3Z2V0XShodHRwOi8vZ251d2luMzIuc291cmNlZm9yZ2UubmV0
L3BhY2thZ2VzL3dnZXQuaHRtKSBvciB5b3UgY2FuIHVzZSBJbnZva2UtV2Vi
UmVxdWVzdCBpbiBQb3dlclNoZWxsICgzLjArKSwgZS5nLiBgSW52b2tlLVdl
YlJlcXVlc3QgLU91dEZpbGUgc3dhZ2dlci1jb2RlZ2VuLWNsaS5qYXIgaHR0
cDovL2NlbnRyYWwubWF2ZW4ub3JnL21hdmVuMi9pby9zd2FnZ2VyL3N3YWdn
ZXItY29kZWdlbi1jbGkvMi40Ljkvc3dhZ2dlci1jb2RlZ2VuLWNsaS0yLjQu
OS5qYXJgCgpPbiBhIG1hYywgaXQncyBldmVuIGVhc2llciB3aXRoIGBicmV3
YDoKYGBgc2gKYnJldyBpbnN0YWxsIHN3YWdnZXItY29kZWdlbgpgYGAKClRv
IGJ1aWxkIGZyb20gc291cmNlLCB5b3UgbmVlZCB0aGUgZm9sbG93aW5nIGlu
c3RhbGxlZCBhbmQgYXZhaWxhYmxlIGluIHlvdXIgYCRQQVRIOmAKCiogW0ph
dmEgNyBvciA4XShodHRwOi8vamF2YS5vcmFjbGUuY29tKQoKKiBbQXBhY2hl
IG1hdmVuIDMuMy4zIG9yIGdyZWF0ZXJdKGh0dHA6Ly9tYXZlbi5hcGFjaGUu
b3JnLykKCiMjIyMgT1MgWCBVc2VycwpEb24ndCBmb3JnZXQgdG8gaW5zdGFs
bCBKYXZhIDcgb3IgOC4gWW91IHByb2JhYmx5IGhhdmUgMS42LgoKRXhwb3J0
IGBKQVZBX0hPTUVgIGluIG9yZGVyIHRvIHVzZSB0aGUgc3VwcG9ydGVkIEph
dmEgdmVyc2lvbjoKYGBgc2gKZXhwb3J0IEpBVkFfSE9NRT1gL3Vzci9saWJl
eGVjL2phdmFfaG9tZSAtdiAxLjhgCmV4cG9ydCBQQVRIPSR7SkFWQV9IT01F
fS9iaW46JFBBVEgKYGBgCgojIyMgQnVpbGRpbmcKCkFmdGVyIGNsb25pbmcg
dGhlIHByb2plY3QsIHlvdSBjYW4gYnVpbGQgaXQgZnJvbSBzb3VyY2Ugd2l0
aCB0aGlzIGNvbW1hbmQ6CmBgYHNoCm12biBjbGVhbiBwYWNrYWdlCmBgYAoK
SWYgeW91IGRvbid0IGhhdmUgbWF2ZW4gaW5zdGFsbGVkLCB5b3UgbWF5IGRp
cmVjdGx5IHVzZSB0aGUgaW5jbHVkZWQgW21hdmVuIHdyYXBwZXJdKGh0dHBz
Oi8vZ2l0aHViLmNvbS90YWthcmkvbWF2ZW4td3JhcHBlciksIGFuZCBidWls
ZCB3aXRoIHRoZSBjb21tYW5kOgpgYGBzaAouL212bncgY2xlYW4gcGFja2Fn
ZQpgYGAKCiMjIyBIb21lYnJldwoKVG8gaW5zdGFsbCwgcnVuIGBicmV3IGlu
c3RhbGwgc3dhZ2dlci1jb2RlZ2VuYAoKSGVyZSBpcyBhbiBleGFtcGxlIHVz
YWdlOgpgYGBzaApzd2FnZ2VyLWNvZGVnZW4gZ2VuZXJhdGUgLWkgaHR0cDov
L3BldHN0b3JlLnN3YWdnZXIuaW8vdjIvc3dhZ2dlci5qc29uIC1sIHJ1Ynkg
LW8gL3RtcC90ZXN0LwpgYGAKCiMjIyBEb2NrZXIKCiMjIyMgRGV2ZWxvcG1l
bnQgaW4gZG9ja2VyCgpZb3UgY2FuIHVzZSBgcnVuLWluLWRvY2tlci5zaGAg
dG8gZG8gYWxsIGRldmVsb3BtZW50LiBUaGlzIHNjcmlwdCBtYXBzIHlvdXIg
bG9jYWwgcmVwb3NpdG9yeSB0byBgL2dlbmAKaW4gdGhlIGRvY2tlciBjb250
YWluZXIuIEl0IGFsc28gbWFwcyBgfi8ubTIvcmVwb3NpdG9yeWAgdG8gdGhl
IGFwcHJvcHJpYXRlIGNvbnRhaW5lciBsb2NhdGlvbi4KClRvIGV4ZWN1dGUg
YG12biBwYWNrYWdlYDoKCmBgYHNoCmdpdCBjbG9uZSBodHRwczovL2dpdGh1
Yi5jb20vc3dhZ2dlci1hcGkvc3dhZ2dlci1jb2RlZ2VuCmNkIHN3YWdnZXIt
Y29kZWdlbgouL3J1bi1pbi1kb2NrZXIuc2ggbXZuIHBhY2thZ2UKYGBgCgpC
dWlsZCBhcnRpZmFjdHMgYXJlIG5vdyBhY2Nlc3NpYmxlIGluIHlvdXIgd29y
a2luZyBkaXJlY3RvcnkuCgpPbmNlIGJ1aWx0LCBgcnVuLWluLWRvY2tlci5z
aGAgd2lsbCBhY3QgYXMgYW4gZXhlY3V0YWJsZSBmb3Igc3dhZ2dlci1jb2Rl
Z2VuLWNsaS4gVG8gZ2VuZXJhdGUgY29kZSwgeW91J2xsIG5lZWQgdG8gb3V0
cHV0IHRvIGEgZGlyZWN0b3J5IHVuZGVyIGAvZ2VuYCAoZS5nLiBgL2dlbi9v
dXRgKS4gRm9yIGV4YW1wbGU6CgpgYGBzaAouL3J1bi1pbi1kb2NrZXIuc2gg
aGVscCAjIEV4ZWN1dGVzICdoZWxwJyBjb21tYW5kIGZvciBzd2FnZ2VyLWNv
ZGVnZW4tY2xpCi4vcnVuLWluLWRvY2tlci5zaCBsYW5ncyAjIEV4ZWN1dGVz
ICdsYW5ncycgY29tbWFuZCBmb3Igc3dhZ2dlci1jb2RlZ2VuLWNsaQouL3J1
bi1pbi1kb2NrZXIuc2ggL2dlbi9iaW4vZ28tcGV0c3RvcmUuc2ggICMgQnVp
bGRzIHRoZSBHbyBjbGllbnQKLi9ydW4taW4tZG9ja2VyLnNoIGdlbmVyYXRl
IC1pIG1vZHVsZXMvc3dhZ2dlci1jb2RlZ2VuL3NyYy90ZXN0L3Jlc291cmNl
cy8yXzAvcGV0c3RvcmUueWFtbCBcCiAgICAtbCBnbyAtbyAvZ2VuL291dC9n
by1wZXRzdG9yZSAtRHBhY2thZ2VOYW1lPXBldHN0b3JlICMgZ2VuZXJhdGVz
IGdvIGNsaWVudCwgb3V0cHV0cyBsb2NhbGx5IHRvIC4vb3V0L2dvLXBldHN0
b3JlCmBgYAoKIyMjIyBSdW4gRG9ja2VyIGluIFZhZ3JhbnQKUHJlcmVxdWlz
aXRlOiBpbnN0YWxsIFtWYWdyYW50XShodHRwczovL3d3dy52YWdyYW50dXAu
Y29tL2Rvd25sb2Fkcy5odG1sKSBhbmQgW1ZpcnR1YWxCb3hdKGh0dHBzOi8v
d3d3LnZpcnR1YWxib3gub3JnL3dpa2kvRG93bmxvYWRzKS4KIGBgYHNoCmdp
dCBjbG9uZSBodHRwOi8vZ2l0aHViLmNvbS9zd2FnZ2VyLWFwaS9zd2FnZ2Vy
LWNvZGVnZW4uZ2l0CmNkIHN3YWdnZXItY29kZWdlbgp2YWdyYW50IHVwCnZh
Z3JhbnQgc3NoCmNkIC92YWdyYW50Ci4vcnVuLWluLWRvY2tlci5zaCBtdm4g
cGFja2FnZQogYGBgCgojIyMjIFB1YmxpYyBQcmUtYnVpbHQgRG9ja2VyIGlt
YWdlcwoKIC0gaHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL3N3YWdnZXJhcGkv
c3dhZ2dlci1nZW5lcmF0b3IvIChvZmZpY2lhbCB3ZWIgc2VydmljZSkKIC0g
aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL3N3YWdnZXJhcGkvc3dhZ2dlci1j
b2RlZ2VuLWNsaS8gKG9mZmljaWFsIENMSSkKCgojIyMjIyBTd2FnZ2VyIEdl
bmVyYXRvciBEb2NrZXIgSW1hZ2UKClRoZSBTd2FnZ2VyIEdlbmVyYXRvciBp
bWFnZSBjYW4gYWN0IGFzIGEgc2VsZi1ob3N0ZWQgd2ViIGFwcGxpY2F0aW9u
IGFuZCBBUEkgZm9yIGdlbmVyYXRpbmcgY29kZS4gVGhpcyBjb250YWluZXIg
Y2FuIGJlICBpbmNvcnBvcmF0ZWQgaW50byBhIENJIHBpcGVsaW5lLCBhbmQg
cmVxdWlyZXMgYXQgbGVhc3QgdHdvIEhUVFAgcmVxdWVzdHMgYW5kIHNvbWUg
ZG9ja2VyIG9yY2hlc3RyYXRpb24gdG8gYWNjZXNzIGdlbmVyYXRlZCBjb2Rl
LgoKRXhhbXBsZSB1c2FnZSAobm90ZSB0aGlzIGFzc3VtZXMgYGpxYCBpcyBp
bnN0YWxsZWQgZm9yIGNvbW1hbmQgbGluZSBwcm9jZXNzaW5nIG9mIEpTT04p
OgoKYGBgc2gKIyBTdGFydCBjb250YWluZXIgYW5kIHNhdmUgdGhlIGNvbnRh
aW5lciBpZApDSUQ9JChkb2NrZXIgcnVuIC1kIHN3YWdnZXJhcGkvc3dhZ2dl
ci1nZW5lcmF0b3IpCiMgYWxsb3cgZm9yIHN0YXJ0dXAKc2xlZXAgNQojIEdl
dCB0aGUgSVAgb2YgdGhlIHJ1bm5pbmcgY29udGFpbmVyCkdFTl9JUD0kKGRv
Y2tlciBpbnNwZWN0IC0tZm9ybWF0ICd7ey5OZXR3b3JrU2V0dGluZ3MuSVBB
ZGRyZXNzfX0nICAkQ0lEKQojIEV4ZWN1dGUgYW4gSFRUUCByZXF1ZXN0IGFu
ZCBzdG9yZSB0aGUgZG93bmxvYWQgbGluawpSRVNVTFQ9JChjdXJsIC1YIFBP
U1QgLS1oZWFkZXIgJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbicg
LS1oZWFkZXIgJ0FjY2VwdDogYXBwbGljYXRpb24vanNvbicgLWQgJ3sKICAi
c3dhZ2dlclVybCI6ICJodHRwOi8vcGV0c3RvcmUuc3dhZ2dlci5pby92Mi9z
d2FnZ2VyLmpzb24iCn0nICdodHRwOi8vbG9jYWxob3N0OjgxODgvYXBpL2dl
bi9jbGllbnRzL2phdmFzY3JpcHQnIHwganEgJy5saW5rJyB8IHRyIC1kICci
JykKIyBEb3dubG9hZCB0aGUgZ2VuZXJhdGVkIHppcCBhbmQgcmVkaXJlY3Qg
dG8gYSBmaWxlCmN1cmwgJFJFU1VMVCA+IHJlc3VsdC56aXAKIyBTaHV0ZG93
biB0aGUgc3dhZ2dlciBnZW5lcmF0b3IgaW1hZ2UKZG9ja2VyIHN0b3AgJENJ
RCAmJiBkb2NrZXIgcm0gJENJRApgYGAKCkluIHRoZSBleGFtcGxlIGFib3Zl
LCBgcmVzdWx0LnppcGAgd2lsbCBjb250YWluIHRoZSBnZW5lcmF0ZWQgY2xp
ZW50LgoKIyMjIyMgU3dhZ2dlciBDb2RlZ2VuIENMSSBEb2NrZXIgSW1hZ2UK
ClRoZSBTd2FnZ2VyIENvZGVnZW4gaW1hZ2UgYWN0cyBhcyBhIHN0YW5kYWxv
bmUgZXhlY3V0YWJsZS4gSXQgY2FuIGJlIHVzZWQgYXMgYW4gYWx0ZXJuYXRp
dmUgdG8gaW5zdGFsbGluZyB2aWEgaG9tZWJyZXcsIG9yIGZvciBkZXZlbG9w
ZXJzIHdobyBhcmUgdW5hYmxlIHRvIGluc3RhbGwgSmF2YSBvciB1cGdyYWRl
IHRoZSBpbnN0YWxsZWQgdmVyc2lvbi4KClRvIGdlbmVyYXRlIGNvZGUgd2l0
aCB0aGlzIGltYWdlLCB5b3UnbGwgbmVlZCB0byBtb3VudCBhIGxvY2FsIGxv
Y2F0aW9uIGFzIGEgdm9sdW1lLgoKRXhhbXBsZToKCmBgYHNoCmRvY2tlciBy
dW4gLS1ybSAtdiAke1BXRH06L2xvY2FsIHN3YWdnZXJhcGkvc3dhZ2dlci1j
b2RlZ2VuLWNsaSBnZW5lcmF0ZSBcCiAgICAtaSBodHRwOi8vcGV0c3RvcmUu
c3dhZ2dlci5pby92Mi9zd2FnZ2VyLmpzb24gXAogICAgLWwgZ28gXAogICAg
LW8gL2xvY2FsL291dC9nbwpgYGAKCihPbiBXaW5kb3dzIHJlcGxhY2UgYCR7
UFdEfWAgd2l0aCBgJUNEJWApCgpUaGUgZ2VuZXJhdGVkIGNvZGUgd2lsbCBi
ZSBsb2NhdGVkIHVuZGVyIGAuL291dC9nb2AgaW4gdGhlIGN1cnJlbnQgZGly
ZWN0b3J5LgoKIyMgR2V0dGluZyBTdGFydGVkCgpUbyBnZW5lcmF0ZSBhIFBI
UCBjbGllbnQgZm9yIGh0dHA6Ly9wZXRzdG9yZS5zd2FnZ2VyLmlvL3YyL3N3
YWdnZXIuanNvbiwgcGxlYXNlIHJ1biB0aGUgZm9sbG93aW5nCmBgYHNoCmdp
dCBjbG9uZSBodHRwczovL2dpdGh1Yi5jb20vc3dhZ2dlci1hcGkvc3dhZ2dl
ci1jb2RlZ2VuCmNkIHN3YWdnZXItY29kZWdlbgptdm4gY2xlYW4gcGFja2Fn
ZQpqYXZhIC1qYXIgbW9kdWxlcy9zd2FnZ2VyLWNvZGVnZW4tY2xpL3Rhcmdl
dC9zd2FnZ2VyLWNvZGVnZW4tY2xpLmphciBnZW5lcmF0ZSBcCiAgIC1pIGh0
dHA6Ly9wZXRzdG9yZS5zd2FnZ2VyLmlvL3YyL3N3YWdnZXIuanNvbiBcCiAg
IC1sIHBocCBcCiAgIC1vIC92YXIvdG1wL3BocF9hcGlfY2xpZW50CmBgYAoo
aWYgeW91J3JlIG9uIFdpbmRvd3MsIHJlcGxhY2UgdGhlIGxhc3QgY29tbWFu
ZCB3aXRoIGBqYXZhIC1qYXIgbW9kdWxlc1xzd2FnZ2VyLWNvZGVnZW4tY2xp
XHRhcmdldFxzd2FnZ2VyLWNvZGVnZW4tY2xpLmphciBnZW5lcmF0ZSAtaSBo
dHRwOi8vcGV0c3RvcmUuc3dhZ2dlci5pby92Mi9zd2FnZ2VyLmpzb24gLWwg
cGhwIC1vIGM6XHRlbXBccGhwX2FwaV9jbGllbnRgKQoKWW91IGNhbiBhbHNv
IGRvd25sb2FkIHRoZSBKQVIgKGxhdGVzdCByZWxlYXNlKSBkaXJlY3RseSBm
cm9tIFttYXZlbi5vcmddKGh0dHA6Ly9jZW50cmFsLm1hdmVuLm9yZy9tYXZl
bjIvaW8vc3dhZ2dlci9zd2FnZ2VyLWNvZGVnZW4tY2xpLzIuNC45L3N3YWdn
ZXItY29kZWdlbi1jbGktMi40LjkuamFyKQoKVG8gZ2V0IGEgbGlzdCBvZiAq
KmdlbmVyYWwqKiBvcHRpb25zIGF2YWlsYWJsZSwgcGxlYXNlIHJ1biBgamF2
YSAtamFyIG1vZHVsZXMvc3dhZ2dlci1jb2RlZ2VuLWNsaS90YXJnZXQvc3dh
Z2dlci1jb2RlZ2VuLWNsaS5qYXIgaGVscCBnZW5lcmF0ZWAKClRvIGdldCBh
IGxpc3Qgb2YgUEhQIHNwZWNpZmllZCBvcHRpb25zICh3aGljaCBjYW4gYmUg
cGFzc2VkIHRvIHRoZSBnZW5lcmF0b3Igd2l0aCBhIGNvbmZpZyBmaWxlIHZp
YSB0aGUgYC1jYCBvcHRpb24pLCBwbGVhc2UgcnVuIGBqYXZhIC1qYXIgbW9k
dWxlcy9zd2FnZ2VyLWNvZGVnZW4tY2xpL3RhcmdldC9zd2FnZ2VyLWNvZGVn
ZW4tY2xpLmphciBjb25maWctaGVscCAtbCBwaHBgCgojIyBHZW5lcmF0b3Jz
CgojIyMgVG8gZ2VuZXJhdGUgYSBzYW1wbGUgY2xpZW50IGxpYnJhcnkKWW91
IGNhbiBidWlsZCBhIGNsaWVudCBhZ2FpbnN0IHRoZSBzd2FnZ2VyIHNhbXBs
ZSBbcGV0c3RvcmVdKGh0dHA6Ly9wZXRzdG9yZS5zd2FnZ2VyLmlvKSBBUEkg
YXMgZm9sbG93czoKCmBgYHNoCi4vYmluL2phdmEtcGV0c3RvcmUuc2gKYGBg
CgooT24gV2luZG93cywgcnVuIGAuXGJpblx3aW5kb3dzXGphdmEtcGV0c3Rv
cmUuYmF0YCBpbnN0ZWFkKQoKVGhpcyB3aWxsIHJ1biB0aGUgZ2VuZXJhdG9y
IHdpdGggdGhpcyBjb21tYW5kOgoKYGBgc2gKamF2YSAtamFyIG1vZHVsZXMv
c3dhZ2dlci1jb2RlZ2VuLWNsaS90YXJnZXQvc3dhZ2dlci1jb2RlZ2VuLWNs
aS5qYXIgZ2VuZXJhdGUgXAogIC1pIGh0dHA6Ly9wZXRzdG9yZS5zd2FnZ2Vy
LmlvL3YyL3N3YWdnZXIuanNvbiBcCiAgLWwgamF2YSBcCiAgLW8gc2FtcGxl
cy9jbGllbnQvcGV0c3RvcmUvamF2YQpgYGAKCndpdGggYSBudW1iZXIgb2Yg
b3B0aW9ucy4gWW91IGNhbiBnZXQgdGhlIG9wdGlvbnMgd2l0aCB0aGUgYGhl
bHAgZ2VuZXJhdGVgIGNvbW1hbmQgKGJlbG93IG9ubHkgc2hvd3MgcGFydGlh
bCByZXN1bHRzKToKCmBgYApOQU1FCiAgICAgICAgc3dhZ2dlci1jb2RlZ2Vu
LWNsaSBnZW5lcmF0ZSAtIEdlbmVyYXRlIGNvZGUgd2l0aCBjaG9zZW4gbGFu
ZwoKU1lOT1BTSVMKICAgICAgICBzd2FnZ2VyLWNvZGVnZW4tY2xpIGdlbmVy
YXRlCiAgICAgICAgICAgICAgICBbKC1hIDxhdXRob3JpemF0aW9uPiB8IC0t
YXV0aCA8YXV0aG9yaXphdGlvbj4pXQogICAgICAgICAgICAgICAgWy0tYWRk
aXRpb25hbC1wcm9wZXJ0aWVzIDxhZGRpdGlvbmFsIHByb3BlcnRpZXM+Li4u
XQogICAgICAgICAgICAgICAgWy0tYXBpLXBhY2thZ2UgPGFwaSBwYWNrYWdl
Pl0gWy0tYXJ0aWZhY3QtaWQgPGFydGlmYWN0IGlkPl0KICAgICAgICAgICAg
ICAgIFstLWFydGlmYWN0LXZlcnNpb24gPGFydGlmYWN0IHZlcnNpb24+XQog
ICAgICAgICAgICAgICAgWygtYyA8Y29uZmlndXJhdGlvbiBmaWxlPiB8IC0t
Y29uZmlnIDxjb25maWd1cmF0aW9uIGZpbGU+KV0KICAgICAgICAgICAgICAg
IFstRCA8c3lzdGVtIHByb3BlcnRpZXM+Li4uXSBbLS1naXQtcmVwby1pZCA8
Z2l0IHJlcG8gaWQ+XQogICAgICAgICAgICAgICAgWy0tZ2l0LXVzZXItaWQg
PGdpdCB1c2VyIGlkPl0gWy0tZ3JvdXAtaWQgPGdyb3VwIGlkPl0KICAgICAg
ICAgICAgICAgIFstLWh0dHAtdXNlci1hZ2VudCA8aHR0cCB1c2VyIGFnZW50
Pl0KICAgICAgICAgICAgICAgICgtaSA8c3BlYyBmaWxlPiB8IC0taW5wdXQt
c3BlYyA8c3BlYyBmaWxlPikKICAgICAgICAgICAgICAgIFstLWlnbm9yZS1m
aWxlLW92ZXJyaWRlIDxpZ25vcmUgZmlsZSBvdmVycmlkZSBsb2NhdGlvbj5d
CiAgICAgICAgICAgICAgICBbLS1pbXBvcnQtbWFwcGluZ3MgPGltcG9ydCBt
YXBwaW5ncz4uLi5dCiAgICAgICAgICAgICAgICBbLS1pbnN0YW50aWF0aW9u
LXR5cGVzIDxpbnN0YW50aWF0aW9uIHR5cGVzPi4uLl0KICAgICAgICAgICAg
ICAgIFstLWludm9rZXItcGFja2FnZSA8aW52b2tlciBwYWNrYWdlPl0KICAg
ICAgICAgICAgICAgICgtbCA8bGFuZ3VhZ2U+IHwgLS1sYW5nIDxsYW5ndWFn
ZT4pCiAgICAgICAgICAgICAgICBbLS1sYW5ndWFnZS1zcGVjaWZpYy1wcmlt
aXRpdmVzIDxsYW5ndWFnZSBzcGVjaWZpYyBwcmltaXRpdmVzPi4uLl0KICAg
ICAgICAgICAgICAgIFstLWxpYnJhcnkgPGxpYnJhcnk+XSBbLS1tb2RlbC1u
YW1lLXByZWZpeCA8bW9kZWwgbmFtZSBwcmVmaXg+XQogICAgICAgICAgICAg
ICAgWy0tbW9kZWwtbmFtZS1zdWZmaXggPG1vZGVsIG5hbWUgc3VmZml4Pl0K
ICAgICAgICAgICAgICAgIFstLW1vZGVsLXBhY2thZ2UgPG1vZGVsIHBhY2th
Z2U+XQogICAgICAgICAgICAgICAgWygtbyA8b3V0cHV0IGRpcmVjdG9yeT4g
fCAtLW91dHB1dCA8b3V0cHV0IGRpcmVjdG9yeT4pXQogICAgICAgICAgICAg
ICAgWy0tcmVsZWFzZS1ub3RlIDxyZWxlYXNlIG5vdGU+XSBbLS1yZW1vdmUt
b3BlcmF0aW9uLWlkLXByZWZpeF0KICAgICAgICAgICAgICAgIFstLXJlc2Vy
dmVkLXdvcmRzLW1hcHBpbmdzIDxyZXNlcnZlZCB3b3JkIG1hcHBpbmdzPi4u
Ll0KICAgICAgICAgICAgICAgIFsoLXMgfCAtLXNraXAtb3ZlcndyaXRlKV0K
ICAgICAgICAgICAgICAgIFsoLXQgPHRlbXBsYXRlIGRpcmVjdG9yeT4gfCAt
LXRlbXBsYXRlLWRpciA8dGVtcGxhdGUgZGlyZWN0b3J5PildCiAgICAgICAg
ICAgICAgICBbLS10eXBlLW1hcHBpbmdzIDx0eXBlIG1hcHBpbmdzPi4uLl0g
WygtdiB8IC0tdmVyYm9zZSldCgpPUFRJT05TCiAgICAgICAgLWEgPGF1dGhv
cml6YXRpb24+LCAtLWF1dGggPGF1dGhvcml6YXRpb24+CiAgICAgICAgICAg
IGFkZHMgYXV0aG9yaXphdGlvbiBoZWFkZXJzIHdoZW4gZmV0Y2hpbmcgdGhl
IHN3YWdnZXIgZGVmaW5pdGlvbnMKICAgICAgICAgICAgcmVtb3RlbHkuIFBh
c3MgaW4gYSBVUkwtZW5jb2RlZCBzdHJpbmcgb2YgbmFtZTpoZWFkZXIgd2l0
aCBhIGNvbW1hCiAgICAgICAgICAgIHNlcGFyYXRpbmcgbXVsdGlwbGUgdmFs
dWVzCgouLi4uLi4gKHJlc3VsdHMgb21pdHRlZCkKCiAgICAgICAgLXYsIC0t
dmVyYm9zZQogICAgICAgICAgICB2ZXJib3NlIG1vZGUKCmBgYAoKWW91IGNh
biB0aGVuIGNvbXBpbGUgYW5kIHJ1biB0aGUgY2xpZW50LCBhcyB3ZWxsIGFz
IHVuaXQgdGVzdHMgYWdhaW5zdCBpdDoKCmBgYHNoCmNkIHNhbXBsZXMvY2xp
ZW50L3BldHN0b3JlL2phdmEKbXZuIHBhY2thZ2UKYGBgCgpPdGhlciBsYW5n
dWFnZXMgaGF2ZSBwZXRzdG9yZSBzYW1wbGVzLCB0b286CmBgYHNoCi4vYmlu
L2FuZHJvaWQtcGV0c3RvcmUuc2gKLi9iaW4vamF2YS1wZXRzdG9yZS5zaAou
L2Jpbi9vYmpjLXBldHN0b3JlLnNoCmBgYAoKIyMjIEdlbmVyYXRpbmcgbGli
cmFyaWVzIGZyb20geW91ciBzZXJ2ZXIKSXQncyBqdXN0IGFzIGVhc3ktLWp1
c3QgdXNlIHRoZSBgLWlgIGZsYWcgdG8gcG9pbnQgdG8gZWl0aGVyIGEgc2Vy
dmVyIG9yIGZpbGUuCgojIyMgTW9kaWZ5aW5nIHRoZSBjbGllbnQgbGlicmFy
eSBmb3JtYXQKRG9uJ3QgbGlrZSB0aGUgZGVmYXVsdCBzd2FnZ2VyIGNsaWVu
dCBzeW50YXg/ICBXYW50IGEgZGlmZmVyZW50IGxhbmd1YWdlIHN1cHBvcnRl
ZD8gIE5vIHByb2JsZW0hICBTd2FnZ2VyIENvZGVnZW4gcHJvY2Vzc2VzIG11
c3RhY2hlIHRlbXBsYXRlcyB3aXRoIHRoZSBbam11c3RhY2hlXShodHRwczov
L2dpdGh1Yi5jb20vc2Ftc2tpdmVydC9qbXVzdGFjaGUpIGVuZ2luZS4gIFlv
dSBjYW4gbW9kaWZ5IG91ciB0ZW1wbGF0ZXMgb3IgbWFrZSB5b3VyIG93bi4K
CllvdSBjYW4gbG9vayBhdCBgbW9kdWxlcy9zd2FnZ2VyLWNvZGVnZW4vc3Jj
L21haW4vcmVzb3VyY2VzLyR7eW91ci1sYW5ndWFnZX1gIGZvciBleGFtcGxl
cy4gIFRvIG1ha2UgeW91ciBvd24gdGVtcGxhdGVzLCBjcmVhdGUgeW91ciBv
d24gZmlsZXMgYW5kIHVzZSB0aGUgYC10YCBmbGFnIHRvIHNwZWNpZnkgeW91
ciB0ZW1wbGF0ZSBmb2xkZXIuICBJdCBhY3R1YWxseSBpcyB0aGF0IGVhc3ku
CgojIyMgTWFraW5nIHlvdXIgb3duIGNvZGVnZW4gbW9kdWxlcwpJZiB5b3Un
cmUgc3RhcnRpbmcgYSBwcm9qZWN0IHdpdGggYSBuZXcgbGFuZ3VhZ2UgYW5k
IGRvbid0IHNlZSB3aGF0IHlvdSBuZWVkLCBTd2FnZ2VyIENvZGVnZW4gY2Fu
IGhlbHAgeW91IGNyZWF0ZSBhIHByb2plY3QgdG8gZ2VuZXJhdGUgeW91ciBv
d24gbGlicmFyaWVzOgoKYGBgc2gKamF2YSAtamFyIG1vZHVsZXMvc3dhZ2dl
ci1jb2RlZ2VuLWNsaS90YXJnZXQvc3dhZ2dlci1jb2RlZ2VuLWNsaS5qYXIg
bWV0YSBcCiAgLW8gb3V0cHV0L215TGlicmFyeSAtbiBteUNsaWVudENvZGVn
ZW4gLXAgY29tLm15LmNvbXBhbnkuY29kZWdlbgpgYGAKClRoaXMgd2lsbCB3
cml0ZSwgaW4gdGhlIGZvbGRlciBgb3V0cHV0L215TGlicmFyeWAsIGFsbCB0
aGUgZmlsZXMgeW91IG5lZWQgdG8gZ2V0IHN0YXJ0ZWQsIGluY2x1ZGluZyBh
IGBSRUFETUUubWQuIE9uY2UgbW9kaWZpZWQgYW5kIGNvbXBpbGVkLCB5b3Ug
Y2FuIGxvYWQgeW91ciBsaWJyYXJ5IHdpdGggdGhlIGNvZGVnZW4gYW5kIGdl
bmVyYXRlIGNsaWVudHMgd2l0aCB5b3VyIG93biwgY3VzdG9tLXJvbGxlZCBs
b2dpYy4KCllvdSB3b3VsZCB0aGVuIGNvbXBpbGUgeW91ciBsaWJyYXJ5IGlu
IHRoZSBgb3V0cHV0L215TGlicmFyeWAgZm9sZGVyIHdpdGggYG12biBwYWNr
YWdlYCBhbmQgZXhlY3V0ZSB0aGUgY29kZWdlbiBsaWtlIHN1Y2g6CgpgYGBz
aApqYXZhIC1jcCBvdXRwdXQvbXlMaWJyYXJ5L3RhcmdldC9teUNsaWVudENv
ZGVnZW4tc3dhZ2dlci1jb2RlZ2VuLTEuMC4wLmphcjptb2R1bGVzL3N3YWdn
ZXItY29kZWdlbi1jbGkvdGFyZ2V0L3N3YWdnZXItY29kZWdlbi1jbGkuamFy
IGlvLnN3YWdnZXIuY29kZWdlbi5Td2FnZ2VyQ29kZWdlbgpgYGAKRm9yIFdp
bmRvd3MgdXNlcnMsIHlvdSB3aWxsIG5lZWQgdG8gdXNlIGA7YCBpbnN0ZWFk
IG9mIGA6YCBpbiB0aGUgY2xhc3NwYXRoLCBlLmcuCmBgYApqYXZhIC1jcCBv
dXRwdXQvbXlMaWJyYXJ5L3RhcmdldC9teUNsaWVudENvZGVnZW4tc3dhZ2dl
ci1jb2RlZ2VuLTEuMC4wLmphcjttb2R1bGVzL3N3YWdnZXItY29kZWdlbi1j
bGkvdGFyZ2V0L3N3YWdnZXItY29kZWdlbi1jbGkuamFyIGlvLnN3YWdnZXIu
Y29kZWdlbi5Td2FnZ2VyQ29kZWdlbgpgYGAKCk5vdGUgdGhlIGBteUNsaWVu
dENvZGVnZW5gIGlzIGFuIG9wdGlvbiBub3csIGFuZCB5b3UgY2FuIHVzZSB0
aGUgdXN1YWwgYXJndW1lbnRzIGZvciBnZW5lcmF0aW5nIHlvdXIgbGlicmFy
eToKCmBgYHNoCmphdmEgLWNwIG91dHB1dC9teUxpYnJhcnkvdGFyZ2V0L215
Q2xpZW50Q29kZWdlbi1zd2FnZ2VyLWNvZGVnZW4tMS4wLjAuamFyOm1vZHVs
ZXMvc3dhZ2dlci1jb2RlZ2VuLWNsaS90YXJnZXQvc3dhZ2dlci1jb2RlZ2Vu
LWNsaS5qYXIgXAogIGlvLnN3YWdnZXIuY29kZWdlbi5Td2FnZ2VyQ29kZWdl
biBnZW5lcmF0ZSAtbCBteUNsaWVudENvZGVnZW5cCiAgLWkgaHR0cDovL3Bl
dHN0b3JlLnN3YWdnZXIuaW8vdjIvc3dhZ2dlci5qc29uIFwKICAtbyBteUNs
aWVudApgYGAKCiMjIyBXaGVyZSBpcyBKYXZhc2NyaXB0Pz8/ClNlZSBvdXIg
W2phdmFzY3JpcHQgbGlicmFyeV0oaHR0cDovL2dpdGh1Yi5jb20vc3dhZ2dl
ci1hcGkvc3dhZ2dlci1qcyktLWl0J3MgY29tcGxldGVseSBkeW5hbWljIGFu
ZCBkb2Vzbid0IHJlcXVpcmUKc3RhdGljIGNvZGUgZ2VuZXJhdGlvbi4KVGhl
cmUgaXMgYSB0aGlyZC1wYXJ0eSBjb21wb25lbnQgY2FsbGVkIFtzd2FnZ2Vy
LWpzLWNvZGVnZW5dKGh0dHBzOi8vZ2l0aHViLmNvbS93Y2FuZGlsbG9uL3N3
YWdnZXItanMtY29kZWdlbikgdGhhdCBjYW4gZ2VuZXJhdGUgYW5ndWxhcmpz
IG9yIG5vZGVqcyBzb3VyY2UgY29kZSBmcm9tIGEgT3BlbkFQSSBTcGVjaWZp
Y2F0aW9uLgoKOmV4Y2xhbWF0aW9uOiBPbiBEZWMgN3RoIDIwMTUsIGEgSmF2
YXNjcmlwdCBBUEkgY2xpZW50IGdlbmVyYXRvciBoYXMgYmVlbiBhZGRlZCBi
eSBAamZpYWxhLgoKIyMjIEdlbmVyYXRpbmcgYSBjbGllbnQgZnJvbSBsb2Nh
bCBmaWxlcwpJZiB5b3UgZG9uJ3Qgd2FudCB0byBjYWxsIHlvdXIgc2VydmVy
LCB5b3UgY2FuIHNhdmUgdGhlIE9wZW5BUEkgU3BlYyBmaWxlcyBpbnRvIGEg
ZGlyZWN0b3J5IGFuZCBwYXNzIGFuIGFyZ3VtZW50CnRvIHRoZSBjb2RlIGdl
bmVyYXRvciBsaWtlIHRoaXM6CgpgYGAKLWkgLi9tb2R1bGVzL3N3YWdnZXIt
Y29kZWdlbi9zcmMvdGVzdC9yZXNvdXJjZXMvMl8wL3BldHN0b3JlLmpzb24K
YGBgCgpHcmVhdCBmb3IgY3JlYXRpbmcgbGlicmFyaWVzIG9uIHlvdXIgY2kg
c2VydmVyLCBmcm9tIHRoZSBbU3dhZ2dlciBFZGl0b3JdKGh0dHA6Ly9lZGl0
b3Iuc3dhZ2dlci5pbykuLi4gb3Igd2hpbGUgY29kaW5nIG9uIGFuIGFpcnBs
YW5lLgoKIyMjIFNlbGVjdGl2ZSBnZW5lcmF0aW9uCllvdSBtYXkgbm90IHdh
bnQgdG8gZ2VuZXJhdGUgKmFsbCogbW9kZWxzIGluIHlvdXIgcHJvamVjdC4g
IExpa2V3aXNlIHlvdSBtYXkgd2FudCBqdXN0IG9uZSBvciB0d28gYXBpcyB0
byBiZSB3cml0dGVuLiAgSWYgdGhhdCdzIHRoZSBjYXNlLCB5b3UgY2FuIHVz
ZSBzeXN0ZW0gcHJvcGVydGllcyB0byBjb250cm9sIHRoZSBvdXRwdXQ6CgpU
aGUgZGVmYXVsdCBpcyBnZW5lcmF0ZSAqZXZlcnl0aGluZyogc3VwcG9ydGVk
IGJ5IHRoZSBzcGVjaWZpYyBsaWJyYXJ5LiAgT25jZSB5b3UgZW5hYmxlIGEg
ZmVhdHVyZSwgaXQgd2lsbCByZXN0cmljdCB0aGUgY29udGVudHMgZ2VuZXJh
dGVkOgoKYGBgc2gKIyBnZW5lcmF0ZSBvbmx5IG1vZGVscwpqYXZhIC1EbW9k
ZWxzIHtvcHRzfQoKIyBnZW5lcmF0ZSBvbmx5IGFwaXMKamF2YSAtRGFwaXMg
e29wdHN9CgojIGdlbmVyYXRlIG9ubHkgc3VwcG9ydGluZyBmaWxlcwpqYXZh
IC1Ec3VwcG9ydGluZ0ZpbGVzCgojIGdlbmVyYXRlIG1vZGVscyBhbmQgc3Vw
cG9ydGluZyBmaWxlcwpqYXZhIC1EbW9kZWxzIC1Ec3VwcG9ydGluZ0ZpbGVz
CmBgYAoKVG8gY29udHJvbCB0aGUgc3BlY2lmaWMgZmlsZXMgYmVpbmcgZ2Vu
ZXJhdGVkLCB5b3UgY2FuIHBhc3MgYSBDU1YgbGlzdCBvZiB3aGF0IHlvdSB3
YW50OgpgYGBzaAojIGdlbmVyYXRlIHRoZSBVc2VyIGFuZCBQZXQgbW9kZWxz
IG9ubHkKLURtb2RlbHM9VXNlcixQZXQKCiMgZ2VuZXJhdGUgdGhlIFVzZXIg
bW9kZWwgYW5kIHRoZSBzdXBwb3J0aW5nRmlsZSBgU3RyaW5nVXRpbC5qYXZh
YDoKLURtb2RlbHM9VXNlciAtRHN1cHBvcnRpbmdGaWxlcz1TdHJpbmdVdGls
LmphdmEKYGBgCgpUbyBjb250cm9sIGdlbmVyYXRpb24gb2YgZG9jcyBhbmQg
dGVzdHMgZm9yIGFwaSBhbmQgbW9kZWxzLCBwYXNzIGZhbHNlIHRvIHRoZSBv
cHRpb24uIEZvciBhcGksIHRoZXNlIG9wdGlvbnMgYXJlICBgLURhcGlUZXN0
cz1mYWxzZWAgYW5kIGAtRGFwaURvY3M9ZmFsc2VgLiBGb3IgbW9kZWxzLCBg
LURtb2RlbFRlc3RzPWZhbHNlYCBhbmQgYC1EbW9kZWxEb2NzPWZhbHNlYC4K
VGhlc2Ugb3B0aW9ucyBkZWZhdWx0IHRvIHRydWUgYW5kIGRvbid0IGxpbWl0
IHRoZSBnZW5lcmF0aW9uIG9mIHRoZSBmZWF0dXJlIG9wdGlvbnMgbGlzdGVk
IGFib3ZlIChsaWtlIGAtRGFwaWApOgoKYGBgc2gKIyBnZW5lcmF0ZSBvbmx5
IG1vZGVscyAod2l0aCB0ZXN0cyBhbmQgZG9jdW1lbnRhdGlvbikKamF2YSAt
RG1vZGVscyB7b3B0c30KCiMgZ2VuZXJhdGUgb25seSBtb2RlbHMgKHdpdGgg
dGVzdHMgYnV0IG5vIGRvY3VtZW50YXRpb24pCmphdmEgLURtb2RlbHMgLURt
b2RlbERvY3M9ZmFsc2Uge29wdHN9CgojIGdlbmVyYXRlIG9ubHkgVXNlciBh
bmQgUGV0IG1vZGVscyAobm8gdGVzdHMgYW5kIG5vIGRvY3VtZW50YXRpb24p
CmphdmEgLURtb2RlbHM9VXNlcixQZXQgLURtb2RlbFRlc3RzPWZhbHNlIHtv
cHRzfQoKIyBnZW5lcmF0ZSBvbmx5IGFwaXMgKHdpdGhvdXQgdGVzdHMpCmph
dmEgLURhcGlzIC1EYXBpVGVzdHM9ZmFsc2Uge29wdHN9CgojIGdlbmVyYXRl
IG9ubHkgYXBpcyAobW9kZWxUZXN0cyBvcHRpb24gaXMgaWdub3JlZCkKamF2
YSAtRGFwaXMgLURtb2RlbFRlc3RzPWZhbHNlIHtvcHRzfQpgYGAKCldoZW4g
dXNpbmcgc2VsZWN0aXZlIGdlbmVyYXRpb24sIF9vbmx5XyB0aGUgdGVtcGxh
dGVzIG5lZWRlZCBmb3IgdGhlIHNwZWNpZmljIGdlbmVyYXRpb24gd2lsbCBi
ZSB1c2VkLgoKIyMjIElnbm9yZSBmaWxlIGZvcm1hdAoKU3dhZ2dlciBDb2Rl
Z2VuIHN1cHBvcnRzIGEgYC5zd2FnZ2VyLWNvZGVnZW4taWdub3JlYCBmaWxl
LCBzaW1pbGFyIHRvIGAuZ2l0aWdub3JlYCBvciBgLmRvY2tlcmlnbm9yZWAg
eW91J3JlIHByb2JhYmx5IGFscmVhZHkgZmFtaWxpYXIgd2l0aC4KClRoZSBp
Z25vcmUgZmlsZSBhbGxvd3MgZm9yIGJldHRlciBjb250cm9sIG92ZXIgb3Zl
cndyaXRpbmcgZXhpc3RpbmcgZmlsZXMgdGhhbiB0aGUgYC0tc2tpcC1vdmVy
d3JpdGVgIGZsYWcuIFdpdGggdGhlIGlnbm9yZSBmaWxlLCB5b3UgY2FuIHNw
ZWNpZnkgaW5kaXZpZHVhbCBmaWxlcyBvciBkaXJlY3RvcmllcyBjYW4gYmUg
aWdub3JlZC4gVGhpcyBjYW4gYmUgdXNlZnVsLCBmb3IgZXhhbXBsZSBpZiB5
b3Ugb25seSB3YW50IGEgc3Vic2V0IG9mIHRoZSBnZW5lcmF0ZWQgY29kZS4K
CkV4YW1wbGVzOgoKYGBgc2gKIyBTd2FnZ2VyIENvZGVnZW4gSWdub3JlCiMg
TGluZXMgYmVnaW5uaW5nIHdpdGggYSAjIGFyZSBjb21tZW50cwoKIyBUaGlz
IHNob3VsZCBtYXRjaCBidWlsZC5zaCBsb2NhdGVkIGFueXdoZXJlLgpidWls
ZC5zaAoKIyBNYXRjaGVzIGJ1aWxkLnNoIGluIHRoZSByb290Ci9idWlsZC5z
aAoKIyBFeGNsdWRlIGFsbCByZWN1cnNpdmVseQpkb2NzLyoqCgojIEV4cGxp
Y2l0bHkgYWxsb3cgZmlsZXMgZXhjbHVkZWQgYnkgb3RoZXIgcnVsZXMKIWRv
Y3MvVXNlckFwaS5tZAoKIyBSZWN1cnNpdmVseSBleGNsdWRlIGRpcmVjdG9y
aWVzIG5hbWVkIEFwaQojIFlvdSBjYW4ndCBuZWdhdGUgZmlsZXMgYmVsb3cg
dGhpcyBkaXJlY3RvcnkuCnNyYy8qKi9BcGkvCgojIFdoZW4gdGhpcyBmaWxl
IGlzIG5lc3RlZCB1bmRlciAvQXBpIChleGNsdWRlZCBhYm92ZSksCiMgdGhp
cyBydWxlIGlzIGlnbm9yZWQgYmVjYXVzZSBwYXJlbnQgZGlyZWN0b3J5IGlz
IGV4Y2x1ZGVkIGJ5IHByZXZpb3VzIHJ1bGUuCiFzcmMvKiovUGV0QXBpVGVz
dHMuY3MKCiMgRXhjbHVkZSBhIHNpbmdsZSwgbmVzdGVkIGZpbGUgZXhwbGlj
aXRseQpzcmMvSU8uU3dhZ2dlci5UZXN0L01vZGVsL0FuaW1hbEZhcm1UZXN0
cy5jcwpgYGAKClRoZSBgLnN3YWdnZXItY29kZWdlbi1pZ25vcmVgIGZpbGUg
bXVzdCBleGlzdCBpbiB0aGUgcm9vdCBvZiB0aGUgb3V0cHV0IGRpcmVjdG9y
eS4KClVwb24gZmlyc3QgY29kZSBnZW5lcmF0aW9uLCB5b3UgbWF5IGFsc28g
cGFzcyB0aGUgQ0xJIG9wdGlvbiBgLS1pZ25vcmUtZmlsZS1vdmVycmlkZT0v
cGF0aC90by9pZ25vcmVfZmlsZWAgZm9yIGdyZWF0ZXIgY29udHJvbCBvdmVy
IGdlbmVyYXRlZCBvdXRwdXRzLiBOb3RlIHRoYXQgdGhpcyBpcyBhIGNvbXBs
ZXRlIG92ZXJyaWRlLCBhbmQgd2lsbCBvdmVycmlkZSB0aGUgYC5zd2FnZ2Vy
LWNvZGVnZW4taWdub3JlYCBmaWxlIGluIGFuIG91dHB1dCBkaXJlY3Rvcnkg
d2hlbiByZWdlbmVyYXRpbmcgY29kZS4KCkVkaXRvciBzdXBwb3J0IGZvciBg
LnN3YWdnZXItY29kZWdlbi1pZ25vcmVgIGZpbGVzIGlzIGF2YWlsYWJsZSBp
biBJbnRlbGxpSiB2aWEgdGhlIFsuaWdub3JlIHBsdWdpbl0oaHR0cHM6Ly9w
bHVnaW5zLmpldGJyYWlucy5jb20vcGx1Z2luLzc0OTUtLWlnbm9yZSkuCgoj
IyMgQ3VzdG9taXppbmcgdGhlIGdlbmVyYXRvcgoKVGhlcmUgYXJlIGRpZmZl
cmVudCBhc3BlY3RzIG9mIGN1c3RvbWl6aW5nIHRoZSBjb2RlIGdlbmVyYXRv
ciBiZXlvbmQganVzdCBjcmVhdGluZyBvciBtb2RpZnlpbmcgdGVtcGxhdGVz
LiAgRWFjaCBsYW5ndWFnZSBoYXMgYSBzdXBwb3J0aW5nIGNvbmZpZ3VyYXRp
b24gZmlsZSB0byBoYW5kbGUgZGlmZmVyZW50IHR5cGUgbWFwcGluZ3MsIGV0
YzoKCmBgYHNoCiQgbHMgLTEgbW9kdWxlcy9zd2FnZ2VyLWNvZGVnZW4vc3Jj
L21haW4vamF2YS9pby9zd2FnZ2VyL2NvZGVnZW4vbGFuZ3VhZ2VzLwpBYnN0
cmFjdEphdmFKQVhSU1NlcnZlckNvZGVnZW4uamF2YQpBYnN0cmFjdFR5cGVT
Y3JpcHRDbGllbnRDb2RlZ2VuLmphdmEKLi4uIChyZXN1bHRzIG9taXR0ZWQp
ClR5cGVTY3JpcHRBbmd1bGFyQ2xpZW50Q29kZWdlbi5qYXZhClR5cGVTY3Jp
cHROb2RlQ2xpZW50Q29kZWdlbi5qYXZhCmBgYAoKRWFjaCBvZiB0aGVzZSBm
aWxlcyBjcmVhdGVzIHJlYXNvbmFibGUgZGVmYXVsdHMgc28geW91IGNhbiBn
ZXQgcnVubmluZyBxdWlja2x5LiAgQnV0IGlmIHlvdSB3YW50IHRvIGNvbmZp
Z3VyZSBwYWNrYWdlIG5hbWVzLCBwcmVmaXhlcywgbW9kZWwgZm9sZGVycywg
ZXRjLiB5b3UgY2FuIHVzZSBhIGpzb24gY29uZmlnIGZpbGUgdG8gcGFzcyB0
aGUgdmFsdWVzLgoKYGBgc2gKamF2YSAtamFyIG1vZHVsZXMvc3dhZ2dlci1j
b2RlZ2VuLWNsaS90YXJnZXQvc3dhZ2dlci1jb2RlZ2VuLWNsaS5qYXIgZ2Vu
ZXJhdGUgXAogIC1pIGh0dHA6Ly9wZXRzdG9yZS5zd2FnZ2VyLmlvL3YyL3N3
YWdnZXIuanNvbiBcCiAgLWwgamF2YSBcCiAgLW8gc2FtcGxlcy9jbGllbnQv
cGV0c3RvcmUvamF2YSBcCiAgLWMgcGF0aC90by9jb25maWcuanNvbgpgYGAK
YW5kIGBjb25maWcuanNvbmAgY29udGFpbnMgdGhlIGZvbGxvd2luZyBhcyBh
biBleGFtcGxlOgpgYGBqc29uCnsKICAiYXBpUGFja2FnZSIgOiAicGV0c3Rv
cmUiCn0KYGBgCgpTdXBwb3J0ZWQgY29uZmlnIG9wdGlvbnMgY2FuIGJlIGRp
ZmZlcmVudCBwZXIgbGFuZ3VhZ2UuIFJ1bm5pbmcgYGNvbmZpZy1oZWxwIC1s
IHtsYW5nfWAgd2lsbCBzaG93IGF2YWlsYWJsZSBvcHRpb25zLgoqKlRoZXNl
IG9wdGlvbnMgYXJlIGFwcGxpZWQgdmlhIGNvbmZpZ3VyYXRpb24gZmlsZSAo
ZS5nLiBjb25maWcuanNvbikgb3IgYnkgcGFzc2luZyB0aGVtIHdpdGggYGph
dmEgLWphciBzd2FnZ2VyLWNvZGVnZW4tY2xpLmphciAtRHtvcHRpb25OYW1l
fT17b3B0aW9uVmFsdWV9YCoqLiAoSWYgYC1Ee29wdGlvbk5hbWV9YCBkb2Vz
IG5vdCB3b3JrLCBwbGVhc2Ugb3BlbiBhIFt0aWNrZXRdKGh0dHBzOi8vZ2l0
aHViLmNvbS9zd2FnZ2VyLWFwaS9zd2FnZ2VyLWNvZGVnZW4vaXNzdWVzL25l
dykgYW5kIHdlJ2xsIGxvb2sgaW50byBpdCkKCmBgYHNoCmphdmEgLWphciBt
b2R1bGVzL3N3YWdnZXItY29kZWdlbi1jbGkvdGFyZ2V0L3N3YWdnZXItY29k
ZWdlbi1jbGkuamFyIGNvbmZpZy1oZWxwIC1sIGphdmEKYGBgCgpPdXRwdXQK
CmBgYApDT05GSUcgT1BUSU9OUwoJbW9kZWxQYWNrYWdlCgkgICAgcGFja2Fn
ZSBmb3IgZ2VuZXJhdGVkIG1vZGVscwoKCWFwaVBhY2thZ2UKCSAgICBwYWNr
YWdlIGZvciBnZW5lcmF0ZWQgYXBpIGNsYXNzZXMKLi4uLi4uIChyZXN1bHRz
IG9taXR0ZWQpCglsaWJyYXJ5CgkgICAgbGlicmFyeSB0ZW1wbGF0ZSAoc3Vi
LXRlbXBsYXRlKSB0byB1c2U6CgkgICAgamVyc2V5MSAtIEhUVFAgY2xpZW50
OiBKZXJzZXkgY2xpZW50IDEuMTguIEpTT04gcHJvY2Vzc2luZzogSmFja3Nv
biAyLjQuMgoJICAgIGplcnNleTIgLSBIVFRQIGNsaWVudDogSmVyc2V5IGNs
aWVudCAyLjYKCSAgICBmZWlnbiAtIEhUVFAgY2xpZW50OiBOZXRmbGl4IEZl
aWduIDguMS4xLiAgSlNPTiBwcm9jZXNzaW5nOiBKYWNrc29uIDIuNi4zCgkg
ICAgb2todHRwLWdzb24gKGRlZmF1bHQpIC0gSFRUUCBjbGllbnQ6IE9rSHR0
cCAyLjQuMC4gSlNPTiBwcm9jZXNzaW5nOiBHc29uIDIuMy4xCgkgICAgcmV0
cm9maXQgLSBIVFRQIGNsaWVudDogT2tIdHRwIDIuNC4wLiBKU09OIHByb2Nl
c3Npbmc6IEdzb24gMi4zLjEgKFJldHJvZml0IDEuOS4wKQogICAgICAgIHJl
dHJvZml0MiAtIEhUVFAgY2xpZW50OiBPa0h0dHAgMi41LjAuIEpTT04gcHJv
Y2Vzc2luZzogR3NvbiAyLjQgKFJldHJvZml0IDIuMC4wLWJldGEyKQogICAg
ICAgIGdvb2dsZS1hcGktY2xpZW50IC0gSFRUUCBjbGllbnQ6IGdvb2dsZS1h
cGktY2xpZW50IDEuMjMuMC4gSlNPTiBwcm9jZXNzaW5nOiBKYWNrc29uIDIu
OC45CiAgICAgICAgcmVzdC1hc3N1cmVkIC0gSFRUUCBjbGllbnQ6IHJlc3Qt
YXNzdXJlZCA6IDMuMS4wLiBKU09OIHByb2Nlc3Npbmc6IEdzb24gMi42LjEu
IE9ubHkgZm9yIEphdmE4CmBgYAoKWW91ciBjb25maWcgZmlsZSBmb3IgSmF2
YSBjYW4gbG9vayBsaWtlCgpgYGBqc29uCnsKICAiZ3JvdXBJZCI6ImNvbS5t
eS5jb21wYW55IiwKICAiYXJ0aWZhY3RJZCI6Ik15Q2xpZW50IiwKICAiYXJ0
aWZhY3RWZXJzaW9uIjoiMS4yLjAiLAogICJsaWJyYXJ5IjoiZmVpZ24iCn0K
YGBgCgpGb3IgYWxsIHRoZSB1bnNwZWNpZmllZCBvcHRpb25zIGRlZmF1bHQg
dmFsdWVzIHdpbGwgYmUgdXNlZC4KCkFub3RoZXIgd2F5IHRvIG92ZXJyaWRl
IGRlZmF1bHQgb3B0aW9ucyBpcyB0byBleHRlbmQgdGhlIGNvbmZpZyBjbGFz
cyBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlLgpUbyBjaGFuZ2UsIGZvciBl
eGFtcGxlLCB0aGUgcHJlZml4IGZvciB0aGUgT2JqZWN0aXZlLUMgZ2VuZXJh
dGVkIGZpbGVzLCBzaW1wbHkgc3ViY2xhc3MgdGhlIGBPYmpjQ2xpZW50Q29k
ZWdlbi5qYXZhYDoKCmBgYGphdmEKcGFja2FnZSBjb20ubXljb21wYW55LnN3
YWdnZXIuY29kZWdlbjsKCmltcG9ydCBpby5zd2FnZ2VyLmNvZGVnZW4ubGFu
Z3VhZ2VzLio7CgpwdWJsaWMgY2xhc3MgTXlPYmpjQ29kZWdlbiBleHRlbmRz
IE9iamNDbGllbnRDb2RlZ2VuIHsKICAgIHN0YXRpYyB7CiAgICAgICAgUFJF
RklYID0gIkhFTE8iOwogICAgfQp9CmBgYAoKYW5kIHNwZWNpZnkgdGhlIGBj
bGFzc25hbWVgIHdoZW4gcnVubmluZyB0aGUgZ2VuZXJhdG9yOgoKYGBgCi1s
IGNvbS5teWNvbXBhbnkuc3dhZ2dlci5jb2RlZ2VuLk15T2JqY0NvZGVnZW4K
YGBgCgpZb3VyIHN1YmNsYXNzIHdpbGwgbm93IGJlIGxvYWRlZCBhbmQgb3Zl
cnJpZGVzIHRoZSBgUFJFRklYYCB2YWx1ZSBpbiB0aGUgc3VwZXJjbGFzcy4K
CiMjIyBCcmluZ2luZyB5b3VyIG93biBtb2RlbHMKClNvbWV0aW1lcyB5b3Ug
ZG9uJ3Qgd2FudCBhIG1vZGVsIGdlbmVyYXRlZC4gIEluIHRoaXMgY2FzZSwg
eW91IGNhbiBzaW1wbHkgc3BlY2lmeSBhbiBpbXBvcnQgbWFwcGluZyB0byB0
ZWxsCnRoZSBjb2RlZ2VuIHdoYXQgX25vdF8gdG8gY3JlYXRlLiAgV2hlbiBk
b2luZyB0aGlzLCBldmVyeSBsb2NhdGlvbiB0aGF0IHJlZmVyZW5jZXMgYSBz
cGVjaWZpYyBtb2RlbCB3aWxsCnJlZmVyIGJhY2sgdG8geW91ciBjbGFzc2Vz
LiAgTm90ZSwgdGhpcyBtYXkgbm90IGFwcGx5IHRvIGFsbCBsYW5ndWFnZXMu
Li4KClRvIHNwZWNpZnkgYW4gaW1wb3J0IG1hcHBpbmcsIHVzZSB0aGUgYC0t
aW1wb3J0LW1hcHBpbmdzYCBhcmd1bWVudCBhbmQgc3BlY2lmeSB0aGUgbW9k
ZWwtdG8taW1wb3J0IGxvZ2ljIGFzIHN1Y2g6CgpgYGAKLS1pbXBvcnQtbWFw
cGluZ3MgUGV0PW15Lm1vZGVscy5NeVBldApgYGAKCk9yIGZvciBtdWx0aXBs
ZSBtYXBwaW5nczoKCmBgYAotLWltcG9ydC1tYXBwaW5ncyBQZXQ9bXkubW9k
ZWxzLk15UGV0LE9yZGVyPW15Lm1vZGVscy5NeU9yZGVyCmBgYApvcgpgYGAK
LS1pbXBvcnQtbWFwcGluZ3MgUGV0PW15Lm1vZGVscy5NeVBldCAtLWltcG9y
dC1tYXBwaW5ncyBPcmRlcj1teS5tb2RlbHMuTXlPcmRlcgpgYGAKCgojIyMg
VmFsaWRhdGluZyB5b3VyIE9wZW5BUEkgU3BlYwoKWW91IGhhdmUgb3B0aW9u
cy4gIFRoZSBlYXNpZXN0IGlzIHRvIHVzZSBvdXIgW29ubGluZSB2YWxpZGF0
b3JdKGh0dHBzOi8vZ2l0aHViLmNvbS9zd2FnZ2VyLWFwaS92YWxpZGF0b3It
YmFkZ2UpIHdoaWNoIG5vdCBvbmx5IHdpbGwgbGV0IHlvdSB2YWxpZGF0ZSB5
b3VyIHNwZWMsIGJ1dCB3aXRoIHRoZSBkZWJ1ZyBmbGFnLCB5b3UgY2FuIHNl
ZSB3aGF0J3Mgd3Jvbmcgd2l0aCB5b3VyIHNwZWMuICBGb3IgZXhhbXBsZToK
Cmh0dHA6Ly9vbmxpbmUuc3dhZ2dlci5pby92YWxpZGF0b3IvZGVidWc/dXJs
PWh0dHA6Ly9wZXRzdG9yZS5zd2FnZ2VyLmlvL3YyL3N3YWdnZXIuanNvbgoK
IyMjIEdlbmVyYXRpbmcgZHluYW1pYyBodG1sIGFwaSBkb2N1bWVudGF0aW9u
CgpUbyBkbyBzbywganVzdCB1c2UgdGhlIGAtbCBkeW5hbWljLWh0bWxgIGZs
YWcgd2hlbiByZWFkaW5nIGEgc3BlYyBmaWxlLiAgVGhpcyBjcmVhdGVzIEhU
TUwgZG9jdW1lbnRhdGlvbiB0aGF0IGlzIGF2YWlsYWJsZSBhcyBhIHNpbmds
ZS1wYWdlIGFwcGxpY2F0aW9uIHdpdGggQUpBWC4gIFRvIHZpZXcgdGhlIGRv
Y3VtZW50YXRpb246CgpgYGBzaApjZCBzYW1wbGVzL2R5bmFtaWMtaHRtbC8K
bnBtIGluc3RhbGwKbm9kZSAuCmBgYAoKV2hpY2ggbGF1bmNoZXMgYSBub2Rl
LmpzIHNlcnZlciBzbyB0aGUgQUpBWCBjYWxscyBoYXZlIGEgcGxhY2UgdG8g
Z28uCgoKIyMjIEdlbmVyYXRpbmcgc3RhdGljIGh0bWwgYXBpIGRvY3VtZW50
YXRpb24KClRvIGRvIHNvLCBqdXN0IHVzZSB0aGUgYC1sIGh0bWxgIGZsYWcg
d2hlbiByZWFkaW5nIGEgc3BlYyBmaWxlLiAgVGhpcyBjcmVhdGVzIGEgc2lu
Z2xlLCBzaW1wbGUgSFRNTCBmaWxlIHdpdGggZW1iZWRkZWQgY3NzIHNvIHlv
dSBjYW4gc2hpcCBpdCBhcyBhbiBlbWFpbCBhdHRhY2htZW50LCBvciBsb2Fk
IGl0IGZyb20geW91ciBmaWxlc3lzdGVtOgoKYGBgc2gKY2Qgc2FtcGxlcy9o
dG1sLwpvcGVuIGluZGV4Lmh0bWwKYGBgCgoKIyMjIFRvIGJ1aWxkIGEgc2Vy
dmVyIHN0dWIKClBsZWFzZSByZWZlciB0byBodHRwczovL2dpdGh1Yi5jb20v
c3dhZ2dlci1hcGkvc3dhZ2dlci1jb2RlZ2VuL3dpa2kvU2VydmVyLXN0dWIt
Z2VuZXJhdG9yLUhPV1RPIGZvciBtb3JlIGluZm9ybWF0aW9uLgoKIyMjIFRv
IGJ1aWxkIHRoZSBjb2RlZ2VuIGxpYnJhcnkKClRoaXMgd2lsbCBjcmVhdGUg
dGhlIFN3YWdnZXIgQ29kZWdlbiBsaWJyYXJ5IGZyb20gc291cmNlLgoKYGBg
c2gKbXZuIHBhY2thZ2UKYGBgCgpOb3RlISAgVGhlIHRlbXBsYXRlcyBhcmUg
aW5jbHVkZWQgaW4gdGhlIGxpYnJhcnkgZ2VuZXJhdGVkLiAgSWYgeW91IHdh
bnQgdG8gbW9kaWZ5IHRoZSB0ZW1wbGF0ZXMsIHlvdSdsbCBuZWVkIHRvIGVp
dGhlciByZXBhY2thZ2UgdGhlIGxpYnJhcnkgT1Igc3BlY2lmeSBhIHBhdGgg
dG8geW91ciBzY3JpcHRzCgojIyBXb3JrZmxvdyBJbnRlZ3JhdGlvbgoKIyMj
IE1hdmVuIEludGVncmF0aW9uCgpZb3UgY2FuIHVzZSB0aGUgW3N3YWdnZXIt
Y29kZWdlbi1tYXZlbi1wbHVnaW5dKG1vZHVsZXMvc3dhZ2dlci1jb2RlZ2Vu
LW1hdmVuLXBsdWdpbi9SRUFETUUubWQpIGZvciBpbnRlZ3JhdGluZyB3aXRo
IHlvdXIgd29ya2Zsb3csIGFuZCBnZW5lcmF0aW5nIGFueSBjb2RlZ2VuIHRh
cmdldC4KCiMjIyBHcmFkbGUgSW50ZWdyYXRpb24KCltHcmFkbGUgU3dhZ2dl
ciBHZW5lcmF0b3IgUGx1Z2luXShodHRwczovL2dpdGh1Yi5jb20vaW50MTI4
L2dyYWRsZS1zd2FnZ2VyLWdlbmVyYXRvci1wbHVnaW4pIGlzIGF2YWlsYWJs
ZSBmb3IgZ2VuZXJhdGluZyBzb3VyY2UgY29kZSBhbmQgQVBJIGRvY3VtZW50
LgoKIyMgR2l0SHViIEludGVncmF0aW9uCgpUbyBwdXNoIHRoZSBhdXRvLWdl
bmVyYXRlZCBTREsgdG8gR2l0SHViLCB3ZSBwcm92aWRlIGBnaXRfcHVzaC5z
aGAgdG8gc3RyZWFtbGluZSB0aGUgcHJvY2Vzcy4gRm9yIGV4YW1wbGU6Cgog
MSkgQ3JlYXRlIGEgbmV3IHJlcG9zaXRvcnkgaW4gR2l0SHViIChSZWY6IGh0
dHBzOi8vaGVscC5naXRodWIuY29tL2FydGljbGVzL2NyZWF0aW5nLWEtbmV3
LXJlcG9zaXRvcnkvKQoKIDIpIEdlbmVyYXRlIHRoZSBTREsKYGBgc2gKIGph
dmEgLWphciBtb2R1bGVzL3N3YWdnZXItY29kZWdlbi1jbGkvdGFyZ2V0L3N3
YWdnZXItY29kZWdlbi1jbGkuamFyIGdlbmVyYXRlIFwKIC1pIG1vZHVsZXMv
c3dhZ2dlci1jb2RlZ2VuL3NyYy90ZXN0L3Jlc291cmNlcy8yXzAvcGV0c3Rv
cmUuanNvbiAtbCBwZXJsIFwKIC0tZ2l0LXVzZXItaWQgInN3YWdnZXJhcGki
IFwKIC0tZ2l0LXJlcG8taWQgInBldHN0b3JlLXBlcmwiIFwKIC0tcmVsZWFz
ZS1ub3RlICJHaXRodWIgaW50ZWdyYXRpb24gZGVtbyIgXAogLW8gL3Zhci90
bXAvcGVybC9wZXRzdG9yZQpgYGAKIDMpIFB1c2ggdGhlIFNESyB0byBHaXRI
dWIKYGBgc2gKY2QgL3Zhci90bXAvcGVybC9wZXRzdG9yZQovYmluL3NoIC4v
Z2l0X3B1c2guc2gKYGBgCgojIyBPbmxpbmUgZ2VuZXJhdG9ycwoKT25lIGNh
biBhbHNvIGdlbmVyYXRlIEFQSSBjbGllbnQgb3Igc2VydmVyIHVzaW5nIHRo
ZSBvbmxpbmUgZ2VuZXJhdG9ycyAoaHR0cHM6Ly9nZW5lcmF0b3Iuc3dhZ2dl
ci5pbykKCkZvciBleGFtcGxlLCB0byBnZW5lcmF0ZSBSdWJ5IEFQSSBjbGll
bnQsIHNpbXBseSBzZW5kIHRoZSBmb2xsb3dpbmcgSFRUUCByZXF1ZXN0IHVz
aW5nIGN1cmw6CmBgYHNoCmN1cmwgLVggUE9TVCAtSCAiY29udGVudC10eXBl
OmFwcGxpY2F0aW9uL2pzb24iIC1kICd7InN3YWdnZXJVcmwiOiJodHRwOi8v
cGV0c3RvcmUuc3dhZ2dlci5pby92Mi9zd2FnZ2VyLmpzb24ifScgaHR0cHM6
Ly9nZW5lcmF0b3Iuc3dhZ2dlci5pby9hcGkvZ2VuL2NsaWVudHMvcnVieQpg
YGAKVGhlbiB5b3Ugd2lsbCByZWNlaWV2ZSBhIEpTT04gcmVzcG9uc2Ugd2l0
aCB0aGUgVVJMIHRvIGRvd25sb2FkIHRoZSB6aXBwZWQgY29kZS4KClRvIGN1
c3RvbWl6ZSB0aGUgU0RLLCB5b3UgY2FuIGBQT1NUYCB0byBgaHR0cHM6Ly9n
ZW5lcmF0b3Iuc3dhZ2dlci5pby9nZW4vY2xpZW50cy97bGFuZ3VhZ2V9YCB3
aXRoIHRoZSBmb2xsb3dpbmcgSFRUUCBib2R5OgpgYGBqc29uCnsKICAib3B0
aW9ucyI6IHt9LAogICJzd2FnZ2VyVXJsIjogImh0dHA6Ly9wZXRzdG9yZS5z
d2FnZ2VyLmlvL3YyL3N3YWdnZXIuanNvbiIKfQpgYGAKaW4gd2hpY2ggdGhl
IGBvcHRpb25zYCBmb3IgYSBsYW5ndWFnZSBjYW4gYmUgb2J0YWluZWQgYnkg
c3VibWl0dGluZyBhIGBHRVRgIHJlcXVlc3QgdG8gYGh0dHBzOi8vZ2VuZXJh
dG9yLnN3YWdnZXIuaW8vYXBpL2dlbi9jbGllbnRzL3tsYW5ndWFnZX1gOgoK
Rm9yIGV4YW1wbGUsIGBjdXJsIGh0dHBzOi8vZ2VuZXJhdG9yLnN3YWdnZXIu
aW8vYXBpL2dlbi9jbGllbnRzL3B5dGhvbmAgcmV0dXJucwpgYGBqc29uCnsK
ICAicGFja2FnZU5hbWUiOnsKICAgICJvcHQiOiJwYWNrYWdlTmFtZSIsCiAg
ICAiZGVzY3JpcHRpb24iOiJweXRob24gcGFja2FnZSBuYW1lIChjb252ZW50
aW9uOiBzbmFrZV9jYXNlKS4iLAogICAgInR5cGUiOiJzdHJpbmciLAogICAg
ImRlZmF1bHQiOiJzd2FnZ2VyX2NsaWVudCIKICB9LAogICJwYWNrYWdlVmVy
c2lvbiI6ewogICAgIm9wdCI6InBhY2thZ2VWZXJzaW9uIiwKICAgICJkZXNj
cmlwdGlvbiI6InB5dGhvbiBwYWNrYWdlIHZlcnNpb24uIiwKICAgICJ0eXBl
Ijoic3RyaW5nIiwKICAgICJkZWZhdWx0IjoiMS4wLjAiCiAgfSwKICAic29y
dFBhcmFtc0J5UmVxdWlyZWRGbGFnIjp7CiAgICAib3B0Ijoic29ydFBhcmFt
c0J5UmVxdWlyZWRGbGFnIiwKICAgICJkZXNjcmlwdGlvbiI6IlNvcnQgbWV0
aG9kIGFyZ3VtZW50cyB0byBwbGFjZSByZXF1aXJlZCBwYXJhbWV0ZXJzIGJl
Zm9yZSBvcHRpb25hbCBwYXJhbWV0ZXJzLiIsCiAgICAidHlwZSI6ImJvb2xl
YW4iLAogICAgImRlZmF1bHQiOiJ0cnVlIgogIH0KfQpgYGAKVG8gc2V0IHBh
Y2thZ2UgbmFtZSB0byBgcGV0X3N0b3JlYCwgdGhlIEhUVFAgYm9keSBvZiB0
aGUgcmVxdWVzdCBpcyBhcyBmb2xsb3dzOgpgYGBqc29uCnsKICAib3B0aW9u
cyI6IHsKICAgICJwYWNrYWdlTmFtZSI6ICJwZXRfc3RvcmUiCiAgfSwKICAi
c3dhZ2dlclVybCI6ICJodHRwOi8vcGV0c3RvcmUuc3dhZ2dlci5pby92Mi9z
d2FnZ2VyLmpzb24iCn0KYGBgCmFuZCBoZXJlIGlzIHRoZSBjdXJsIGNvbW1h
bmQ6CmBgYHNoCmN1cmwgLUggIkNvbnRlbnQtdHlwZTogYXBwbGljYXRpb24v
anNvbiIgLVggUE9TVCAtZCAneyJvcHRpb25zIjogeyJwYWNrYWdlTmFtZSI6
ICJwZXRfc3RvcmUifSwic3dhZ2dlclVybCI6ICJodHRwOi8vcGV0c3RvcmUu
c3dhZ2dlci5pby92Mi9zd2FnZ2VyLmpzb24ifScgaHR0cHM6Ly9nZW5lcmF0
b3Iuc3dhZ2dlci5pby9hcGkvZ2VuL2NsaWVudHMvcHl0aG9uCmBgYAoKSW5z
dGVhZCBvZiB1c2luZyBgc3dhZ2dlclVybGAgd2l0aCBhbiBVUkwgdG8gdGhl
IE9wZW5BUEkvU3dhZ2dlciBzcGVjLCBvbmUgY2FuIGluY2x1ZGUgdGhlIHNw
ZWMgaW4gdGhlIEpTT04gcGF5bG9hZCB3aXRoIGBzcGVjYCwgZS5nLgpgYGBq
c29uCnsKICAib3B0aW9ucyI6IHt9LAogICJzcGVjIjogewogICAgInN3YWdn
ZXIiOiAiMi4wIiwKICAgICJpbmZvIjogewogICAgICAidmVyc2lvbiI6ICIx
LjAuMCIsCiAgICAgICJ0aXRsZSI6ICJUZXN0IEFQSSIKICAgIH0sCiAgICAu
Li4KICB9Cn0KYGBgCgpHdWlkZWxpbmVzIGZvciBDb250cmlidXRpb24KLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgpQbGVhc2UgcmVmZXIgdG8gdGhp
cyBbcGFnZV0oaHR0cHM6Ly9naXRodWIuY29tL3N3YWdnZXItYXBpL3N3YWdn
ZXItY29kZWdlbi9ibG9iL21hc3Rlci9DT05UUklCVVRJTkcubWQpCgpDb21w
YW5pZXMvUHJvamVjdHMgdXNpbmcgU3dhZ2dlciBDb2RlZ2VuCi0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KSGVyZSBhcmUgc29t
ZSBjb21wYW5pZXMvcHJvamVjdHMgdXNpbmcgU3dhZ2dlciBDb2RlZ2VuIGlu
IHByb2R1Y3Rpb24uIFRvIGFkZCB5b3VyIGNvbXBhbnkvcHJvamVjdCB0byB0
aGUgbGlzdCwgcGxlYXNlIHZpc2l0IFtSRUFETUUubWRdKGh0dHBzOi8vZ2l0
aHViLmNvbS9zd2FnZ2VyLWFwaS9zd2FnZ2VyLWNvZGVnZW4vYmxvYi9tYXN0
ZXIvUkVBRE1FLm1kKSBhbmQgY2xpY2sgb24gdGhlIGljb24gdG8gZWRpdCB0
aGUgcGFnZS4KLSBbQWNhbmRvXShodHRwczovL3d3dy5hY2FuZG8uZGUvKQot
IFtBY2NlbmdhZ2VdKGh0dHBzOi8vd3d3LmFjY2VuZ2FnZS5jb20vKQotIFtB
Y2NydWVudF0oaHR0cHM6Ly93d3cuYWNjcnVlbnQuY29tLykKLSBbQWN0aXZl
aG91cnNdKGh0dHBzOi8vd3d3LmFjdGl2ZWhvdXJzLmNvbS8pCi0gW0FjdG9u
aWNhXShodHRwczovL3d3dy5hY3RvbmljYS5jb20pCi0gW0FjdW5ldGl4XSho
dHRwczovL3d3dy5hY3VuZXRpeC5jb20vKQotIFtBZGFwdGFudF0oaHR0cHM6
Ly93d3cuYWRhcHRhbnQuaW8vKQotIFtBdGxhc3NpYW5dKGh0dHBzOi8vd3d3
LmF0bGFzc2lhbi5jb20vKQotIFtBdXRvZGVza10oaHR0cDovL3d3dy5hdXRv
ZGVzay5jb20vKQotIFtBdmVuaWRhIENvbXByYXMgUy5BLl0oaHR0cHM6Ly93
d3cuYXZlbmlkYS5jb20uYXIpCi0gW0FZTElFTl0oaHR0cDovL2F5bGllbi5j
b20vKQotIFtCYWxhbmNlIEludGVybmV0XShodHRwczovL3d3dy5iYWxhbmNl
aW50ZXJuZXQuY29tLmF1LykKLSBbYmVlbW9dKGh0dHA6Ly93d3cuYmVlbW8u
ZXUpCi0gW2JpdGx5XShodHRwczovL2JpdGx5LmNvbSkKLSBbQmVlelVQXSho
dHRwOi8vd3d3LmJlZXp1cC5jb20pCi0gW0JveF0oaHR0cHM6Ly9ib3guY29t
KQotIFtCdWZmZXJmbHkgTmV0d29ya10oaHR0cHM6Ly93d3cuYnV0dGVyZmx5
bmV0aW5jLmNvbS8pCi0gW0NhY2hldCBGaW5hbmNpYWxdKGh0dHA6Ly93d3cu
Y2FjaGV0ZmluYW5jaWFsLmNvbS8pCi0gW2NhcnBvbG9dKGh0dHA6Ly93d3cu
Y2FycG9sby5jby8pCi0gW0NhcnVzXShodHRwczovL3d3dy5jYXJ1cy5jb20v
KQotIFtDaXNjb10oaHR0cDovL3d3dy5jaXNjby5jb20vKQotIFtDbG91ZEJv
b3N0XShodHRwczovL3d3dy5DbG91ZEJvb3N0LmlvLykKLSBbQ2xvdWRzbWl0
aF0oaHR0cHM6Ly9jbG91ZHNtaXRoLmlvLykKLSBbQ29ucGxlbWVudF0oaHR0
cDovL3d3dy5jb25wbGVtZW50LmRlLykKLSBbQ3VtbWluc10oaHR0cDovL3d3
dy5jdW1taW5zLmNvbS8pCi0gW0N1cGl4XShodHRwOi8vd3d3LmN1cGl4LmNv
bSkKLSBbREJCZXN0IFRlY2hub2xvZ2llc10oaHR0cHM6Ly93d3cuZGJiZXN0
LmNvbSkKLSBbRGVjZW50Rm9YXShodHRwOi8vZGVjZW50Zm94LmNvbS8pCi0g
W0RvY1JhcHRvcl0oaHR0cHM6Ly9kb2NyYXB0b3IuY29tKQotIFtEb2N1U2ln
bl0oaHR0cHM6Ly93d3cuZG9jdXNpZ24uY29tKQotIFtFbGFzdGljXShodHRw
czovL3d3dy5lbGFzdGljLmNvLykKLSBbRXJnb25dKGh0dHA6Ly93d3cuZXJn
b24uY2gvKQotIFtEZWxsIEVNQ10oaHR0cHM6Ly93d3cuZW1jLmNvbS8pCi0g
W2V1cmVrYV0oaHR0cDovL2V1cmUuanAvKQotIFtldmVyeXN0b3J5LnVzXSho
dHRwOi8vZXZlcnlzdG9yeS51cykKLSBbRXhwZWN0ZWQgQmVoYXZpb3JdKGh0
dHA6Ly93d3cuZXhwZWN0ZWRiZWhhdmlvci5jb20vKQotIFtmYXNoaW9uVHJh
ZGVdKGh0dHBzOi8vd3d3LmZhc2hpb250cmFkZS5jb20vKQotIFtGYXN0bHld
KGh0dHBzOi8vd3d3LmZhc3RseS5jb20vKQotIFtGSU5SQV0oaHR0cHM6Ly9n
aXRodWIuY29tL0ZJTlJBT1MvaGVyZC8pCi0gW0ZsYXRdKGh0dHBzOi8vZmxh
dC5pbykKLSBbRmluZGVyXShodHRwOi8vZW4uZmluZGVyLnBsLykKLSBbRml0
d2VsbF0oaHR0cHM6Ly9maXR3ZWxsLmNvLykKLSBbRkggTcO8bnN0ZXIgLSBV
bml2ZXJzaXR5IG9mIEFwcGxpZWQgU2NpZW5jZXNdKGh0dHA6Ly93d3cuZmgt
bXVlbnN0ZXIuZGUpCi0gW0Zvcm1BUEldKGh0dHBzOi8vZm9ybWFwaS5pby8p
Ci0gW0ZvdGl0aW9uXShodHRwczovL3d3dy5mb3RpdGlvbi5jb20vKQotIFtH
ZWFyIFplcm8gTmV0d29ya10oaHR0cHM6Ly93d3cuZ2Vhcnplcm8uY2EpCi0g
W0dlbmVyYWwgRWxlY3RyaWNdKGh0dHBzOi8vd3d3LmdlLmNvbS8pCi0gW0dl
bmVzeXMgLSBQdXJlQ2xvdWRdKGh0dHA6Ly9kZXZlbG9wZXIubXlwdXJlY2xv
dWQuY29tLykKLSBbR2VybWluOF0oaHR0cDovL3d3dy5nZXJtaW44LmNvbSkK
LSBbR2lnYVNwYWNlc10oaHR0cDovL3d3dy5naWdhc3BhY2VzLmNvbSkKLSBb
R01PIFBlcGFib10oaHR0cHM6Ly9wZXBhYm8uY29tL2VuLykKLSBbZ29UcmFu
c3ZlcnNlXShodHRwOi8vd3d3LmdvdHJhbnN2ZXJzZS5jb20vYXBpKQotIFtH
cmFwaEhvcHBlcl0oaHR0cHM6Ly9ncmFwaGhvcHBlci5jb20vKQotIFtHcmF2
aXRhdGUgU29sdXRpb25zXShodHRwOi8vZ3Jhdml0YXRlc29sdXRpb25zLmNv
bS8pCi0gW0hhc2hEYXRhXShodHRwOi8vd3d3Lmhhc2hkYXRhLmNuLykKLSBb
SGV3bGV0dCBQYWNrYXJkIEVudGVycHJpc2VdKGh0dHBzOi8vaHBlLmNvbSkK
LSBbSGlnaCBUZWNobm9sb2dpZXMgQ2VudGVyXShodHRwOi8vaHRjLWNzLmNv
bSkKLSBbSG9vdHN1aXRlXShodHRwczovL2hvb3RzdWl0ZS5jb20vKQotIFtI
dWF3ZWkgQ2xvdWRdKGh0dHA6Ly93d3cuaHVhd2VpY2xvdWQuY29tL2VuLXVz
L3Byb2R1Y3QvY3MuaHRtbCkKLSBbSHVzYmFua2VuXShodHRwczovL3d3dy5o
dXNiYW5rZW4ubm8pCi0gW0lCTV0oaHR0cHM6Ly93d3cuaWJtLmNvbSkKLSBb
SU1TIEhlYWx0aF0oaHR0cDovL3d3dy5pbXNoZWFsdGguY29tL2VuL3NvbHV0
aW9uLWFyZWFzL3RlY2hub2xvZ3ktYW5kLWFwcGxpY2F0aW9ucykKLSBbSW5k
aXZpZHVhbCBTdGFuZGFyZCBJVlNdKGh0dHA6Ly93d3cuaW5kaXZpZHVhbC1z
dGFuZGFyZC5jb20pCi0gW0lOU1BJREVdKGh0dHA6Ly93d3cuaW5zcGlkZS5j
b20pCi0gW0ludGVudCBIUV0oaHR0cDovL3d3dy5pbnRlbnRocS5jb20pCi0g
W0thYnVrdV0oaHR0cDovL3d3dy5rYWJ1a3UuY28uanAvZW4pCi0gW0t1cmlv
XShodHRwczovL2t1cmlvLmNvLmlkKQotIFtLdXJvaV0oaHR0cDovL2t1cm9p
d2ViZGVzaWduLmNvbS8pCi0gW0t1YXJ5XShodHRwczovL2t1YXJ5LmNvbS8p
Ci0gW0t1YmVybmV0ZXNdKGh0dHBzOi8va3ViZXJuZXRlcy5pby8pCi0gW0xB
TkRSIEF1ZGlvXShodHRwczovL3d3dy5sYW5kci5jb20vKQotIFtMYXNjYXV4
XShodHRwOi8vd3d3Lmxhc2NhdXguaXQvKQotIFtMZWFuaXhdKGh0dHA6Ly93
d3cubGVhbml4Lm5ldC8pCi0gW0xlaWNhIEdlb3N5c3RlbXMgQUddKGh0dHA6
Ly9sZWljYS1nZW9zeXN0ZW1zLmNvbSkKLSBbTGl2ZUFnZW50XShodHRwczov
L3d3dy5sYWRlc2suY29tLykKLSBbTFhMIFRlY2hdKGh0dHA6Ly9seGx0ZWNo
LmNvbSkKLSBbTHlmdF0oaHR0cHM6Ly93d3cubHlmdC5jb20vZGV2ZWxvcGVy
cykKLSBbTWFpbE1vam9dKGh0dHBzOi8vbWFpbG1vam8ubm8vKQotIFtNZXRh
c3dpdGNoXShodHRwczovL3d3dy5tZXRhc3dpdGNoLmNvbS8pCi0gW01pbmRl
cmFdKGh0dHA6Ly9taW5kZXJhLmNvbS8pCi0gW01wb3JpdW1dKGh0dHA6Ly9t
cG9yaXVtLmNvbS8pCi0gW05ldmVyZmFpbF0oaHR0cHM6Ly9uZXZlcmZhaWwu
Y29tLykKLSBbTmV4Q2FwXShodHRwOi8vd3d3Lm5leGVzcy1zb2x1dGlvbnMu
Y29tL2ZyL3BsYXRlZm9ybWUtaW90LykKLSBbTlRUIERBVEFdKGh0dHA6Ly93
d3cubnR0ZGF0YS5jb20vKQotIFtuVmlzb10oaHR0cDovL3d3dy5udmlzby5j
aC8pCi0gW09raW9rXShodHRwczovL3d3dy5va2lvay5jb20pCi0gW09uZWRh
dGFdKGh0dHA6Ly9vbmVkYXRhLm9yZykKLSBbT3BlbiBJbnRlcm5hdGlvbmFs
IFN5c3RlbXNdKGh0dHBzOi8vb3BlbmludGwuY29tLykKLSBbT3JkZXJDbG91
ZC5pb10oaHR0cDovL29yZGVyY2xvdWQuaW8pCi0gW09TRE5dKGh0dHBzOi8v
b3Nkbi5qcCkKLSBbUGFnZXJEdXR5XShodHRwczovL3d3dy5wYWdlcmR1dHku
Y29tKQotIFtQYWdlclRyZWVdKGh0dHBzOi8vcGFnZXJ0cmVlLmNvbSkKLSBb
UGVwaXBvc3RdKGh0dHBzOi8vd3d3LnBlcGlwb3N0LmNvbSkKLSBbUGVhdGlv
IFRlY2hdKGh0dHBzOi8vd3d3LnBlYXRpby50ZWNoKQotIFtQbGV4eGldKGh0
dHA6Ly93d3cucGxleHhpLmNvbSkKLSBbUGl4b25leWVdKGh0dHA6Ly93d3cu
cGl4b25leWUuY29tLykKLSBbUG9zdEFmZmlsaWF0ZVByb10oaHR0cHM6Ly93
d3cucG9zdGFmZmlsaWF0ZXByby5jb20vKQotIFtQcmFjdGljZUJpcmRdKGh0
dHBzOi8vd3d3LnByYWN0aWNlYmlyZC5jb20vKQotIFtQcmlsbCBUZWNub2xv
Z2lhXShodHRwOi8vd3d3LnByaWxsLmNvbS5icikKLSBbUHJva2FybWFdKGh0
dHBzOi8vd3d3LnByb2thcm1hLmNvbSkKLSBbUUFkZXB0XShodHRwOi8vcWFk
ZXB0LmNvbS8pCi0gW1F1YW50aU1vZG9dKGh0dHBzOi8vcXVhbnRpbW8uZG8v
KQotIFtRdWlja0Jsb3hdKGh0dHBzOi8vcXVpY2tibG94LmNvbS8pCi0gW1Jh
cGlkN10oaHR0cHM6Ly9yYXBpZDcuY29tLykKLSBbUmVkIEhhdF0oaHR0cHM6
Ly93d3cucmVkaGF0LmNvbS8pCi0gW1JlbG9hZCEgQS9TXShodHRwczovL3Jl
bG9hZC5kay8pCi0gW1JFc3RvcmVdKGh0dHBzOi8vd3d3LnJlc3RvcmUuZXUp
Ci0gW1JFU1QgVW5pdGVkXShodHRwczovL3Jlc3R1bml0ZWQuY29tKQotIFtS
ZXZhdWx0IFPDoHJsXShodHRwOi8vcmV2YXVsdC5jaCkKLSBbUmlmZnluXSho
dHRwczovL3JpZmZ5bi5jb20pCi0gW1JveWFsIEJhbmsgb2YgQ2FuYWRhIChS
QkMpXShodHRwOi8vd3d3LnJiYy5jb20vY2FuYWRhLmh0bWwpCi0gW1Nhcml0
YXNhXShodHRwczovL3d3dy5zYXJpdGFzYS5jb20vKQotIFtTQVNdKGh0dHBz
Oi8vd3d3LnNhcy5jb20pCi0gW1NDT09QIFNvZnR3YXJlIEdtYkhdKGh0dHA6
Ly93d3cuc2Nvb3Atc29mdHdhcmUuZGUpCi0gW1Nlc3Npb25NXShodHRwczov
L3d3dy5zZXNzaW9ubS5jb20vKQotIFtTaGluZSBTb2x1dGlvbnNdKGh0dHBz
Oi8vc2hpbmVzb2x1dGlvbnMuY29tLykKLSBbU2ltcGZvbnldKGh0dHBzOi8v
d3d3LnNpbXBmb255LmNvbS8pCi0gW1NrdXJ0XShodHRwOi8vd3d3LnNrdXJ0
LmNvbSkKLSBbU2xhbWJ5XShodHRwczovL3d3dy5zbGFtYnkuY29tLykKLSBb
U21hcnRSZWNydWl0ZXJzXShodHRwczovL3d3dy5zbWFydHJlY3J1aXRlcnMu
Y29tLykKLSBbc25hcENYXShodHRwczovL3NuYXBjeC5pbykKLSBbU1BJTkVO
XShodHRwOi8vd3d3LnNwaW5lbi5jb20pCi0gW1Nwb25zb29dKGh0dHBzOi8v
d3d3LnNwb25zb28uZGUpCi0gW1NSQ10oaHR0cHM6Ly93d3cuc3JjLnNpLykK
LSBbU3RhcmRvZyBWZW50dXJlc10oaHR0cHM6Ly93d3cuc3RhcmRvZy5pbykK
LSBbU3RpbmdyYXldKGh0dHA6Ly93d3cuc3RpbmdyYXkuY29tKQotIFtTdHls
ZVJlY2lwZV0oaHR0cDovL3N0eWxlcmVjaXBlLmNvLmpwKQotIFtTdmVuc2th
IFNwZWwgQUJdKGh0dHBzOi8vd3d3LnN2ZW5za2FzcGVsLnNlLykKLSBbU3dp
dGNoIERhdGFiYXNlXShodHRwczovL3d3dy5zd2l0Y2hkYXRhYmFzZS5jb20v
KQotIFtUYXNrRGF0YV0oaHR0cDovL3d3dy50YXNrZGF0YS5jb20vKQotIFtU
aGlyZFdhdGNoLmFpXShodHRwczovL3d3dy50aGlyZHdhdGNoLmFpLykKLSBb
VGhvdWdodFdvcmtzXShodHRwczovL3d3dy50aG91Z2h0d29ya3MuY29tKQot
IFtUcGF5XShodHRwczovL3RwYXkuY29tKQotIFtUcmV4bGVdKGh0dHBzOi8v
dHJleGxlLmNvbS8pCi0gW1Vwd29ya10oaHR0cDovL3Vwd29yay5jb20vKQot
IFt1U2hpcF0oaHR0cHM6Ly93d3cudXNoaXAuY29tLykKLSBbVk13YXJlXSho
dHRwczovL3Ztd2FyZS5jb20vKQotIFtWaWF2aSBTb2x1dGlvbnMgSW5jLl0o
aHR0cHM6Ly93d3cudmlhdmlzb2x1dGlvbnMuY29tKQotIFtXLlVQXShodHRw
Oi8vd3VwLmh1Lz9zaXRlTGFuZz1lbikKLSBbV2VhbHRoZnJvbnRdKGh0dHBz
Oi8vd3d3LndlYWx0aGZyb250LmNvbS8pCi0gW1dlYmV2ZXIgR21iSF0oaHR0
cHM6Ly93d3cud2ViZXZlci5kZS8pCi0gW1dFWE8gQS9TXShodHRwczovL3d3
dy53ZXhvLmRrLykKLSBbWFNreV0oaHR0cDovL3d3dy54c2t5LmNvbS8pCi0g
W1llbHBdKGh0dHA6Ly93d3cueWVscC5jb20vKQotIFtaYWxhbmRvXShodHRw
czovL3RlY2guemFsYW5kby5jb20pCi0gW1pFRUYuY29tXShodHRwczovL3pl
ZWYuY29tLykKLSBbem9vcGx1c10oaHR0cHM6Ly93d3cuem9vcGx1cy5jb20v
KQoKUHJlc2VudGF0aW9ucy9WaWRlb3MvVHV0b3JpYWxzL0Jvb2tzCi0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KLSAyMDExLzA4
LzMxIC0gW0ludHJvZHVjaW5nIFN3YWdnZXJdKGh0dHBzOi8vd3d3LnNsaWRl
c2hhcmUubmV0L2ZlaGd1eS9pbnRyb2R1Y2luZy1zd2FnZ2VyKSBieSBbVG9u
eSBUYW1dKGh0dHBzOi8vdHdpdHRlci5jb20vZmVoZ3V5KQotIDIwMTQvMDUv
MjIgLSBbU3dhZ2dlciBBUElzIGZvciBIdW1hbnMgYW5kIFJvYm90c10oaHR0
cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvZmVoZ3V5L3N3YWdnZXItYXBpcy1m
b3ItaHVtYW5zLWFuZC1yb2JvdHMtZ2x1ZWNvbikgYnkgW1RvbnkgVGFtXSho
dHRwczovL3R3aXR0ZXIuY29tL2ZlaGd1eSkgYXQgW0dsdWVjb25dKGh0dHA6
Ly9nbHVlY29uLmNvbS8pCi0gMjAxNC8xMS8xMSAtIFtHZW5pZSAyLjA6IFNl
Y29uZCBXaXNoIEdyYW50ZWQhXShodHRwczovL21lZGl1bS5jb20vbmV0Zmxp
eC10ZWNoYmxvZy9nZW5pZS0yLTAtc2Vjb25kLXdpc2gtZ3JhbnRlZC1kODg4
ZDc5NDU1YzYpIGJ5IFtUb20gR2lhbm9zXShodHRwOi8vd3d3LmxpbmtlZGlu
LmNvbS9pbi90aG9tYXNnaWFub3MvKSBhbmQgW0FtaXQgU2hhcm1hXShodHRw
czovL3d3dy5saW5rZWRpbi5jb20vcHViL2FtaXQtc2hhcm1hLzUvMTYzL2E4
MykgQCBbTmV0ZmxpeF0oaHR0cHM6Ly93d3cubmV0ZmxpeC5jb20vKSBCaWcg
RGF0YSBQbGF0Zm9ybSBUZWFtCi0gMjAxNS8wNy8yOCAtIFtFbnJpY2hpbmcg
UkVTVGZ1bCBTZXJ2aWNlcyB3aXRoIFN3YWdnZXJdKGh0dHBzOi8vYmxvZy5w
aGlsaXBwaGF1ZXIuZGUvZW5yaWNoaW5nLXJlc3RmdWwtc2VydmljZXMtc3dh
Z2dlci8pIGJ5IFtQaGlsaXBwIEhhdWVyXShodHRwczovL2Jsb2cucGhpbGlw
cGhhdWVyLmRlLykKLSAyMDE1LzExLzExIC0gW0dlbmVyYXRlIGNsaWVudCBz
dHVicyAmIGRvY3VtZW50IHlvdXIgUkVTVC1BUEkgdXNpbmcgU3dhZ2dlciAm
IFNwcmluZ10oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj00M0do
QmJQLS1vSSkgYnkgW0pvaGFubmVzIEZpYWxhXShodHRwczovL2dpdGh1Yi5j
b20vamZpYWxhKSBAIERldm94eCBCZWxnaXVtIDIwMTUKLSAyMDE1LzEyLzAz
IC0gW+OBk+OCk+OBquOBq+ewoeWNmCEgU3dhZ2dlciBDb2RlZ2Vu44Gu44Kr
44K544K/44Oe44Kk44K6XShodHRwOi8vcWlpdGEuY29tL1F1cmFteS9pdGVt
cy9jNTgzZjMyMTNmMGI3N2ZmMWJhYykgYnkgW1F1cmFteV0oaHR0cDovL3Fp
aXRhLmNvbS9RdXJhbXkpCi0gMjAxNi8wMS8xMiAtIFtHZW5lcmF0ZSBjbGll
bnQgc2lkZSBjb2RlIHVzaW5nIFN3YWdnZXIgQ29kZWdlbl0oaHR0cDovL3Ju
YXZhZ2FtdXdhLmNvbS9vcGVuLXNvdXJjZS9nZW5lcmF0ZS1jbGllbnQtc2lk
ZS1jb2RlLXVzaW5nLXN3YWdnZXItY29kZWdlbi8pIGJ5IFtSTkFWQUdBTVVX
QV0oaHR0cDovL3JuYXZhZ2FtdXdhLmNvbS9hdXRob3IvYWRtaW4vKQotIDIw
MTYvMDEvMTUgLSBbSG93IHRvIGVuZCBtYW51YWwgUkVTVC1BUEkgY2xpZW50
IGNvZGluZ10oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1SelpS
ZHFacDZPbykgYnkgW0pvaGFubmVzIEZpYWxhXShodHRwczovL2dpdGh1Yi5j
b20vamZpYWxhKSBAIGRvdEpTIDIwMTUKLSAyMDE2LzA0LzI3IC0gW0F1dG9t
YXRlZCBSRVNUIEFQSSBEZXZlbG9wbWVudF0oaHR0cHM6Ly95b3MuaW8vMjAx
Ni8wNC8yNy9hdXRvbWF0ZWQtYXBpLWRldmVsb3BtZW50LykgYnkgW1lvcyBS
aWFkeV0oaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL3lvc3JpYWR5KQot
IDIwMTYvMDUvMjkgLSBbR2VuZXJhdGluZyBKYXZhIFNwcmluZy1NVkMgY29k
ZSBmcm9tIFN3YWdnZXIgU3BlY10oaHR0cHM6Ly93d3cuY2xpYW56LmNvbS8y
MDE2LzA1LzI5L2phdmEtbXZjLXN3YWdnZXItZ2VuLykgYnkgW0BpY2hhMDI0
XShodHRwczovL2dpdGh1Yi5jb20vaWNoYTAyNCkKLSAyMDE2LzA3LzIyIC0g
W0J1aWxkaW5nIE1pY3Jvc2VydmljZXM/IEhlcmUgaXMgd2hhdCB5b3Ugc2hv
dWxkIGtub3ddKGh0dHBzOi8vY2xvdWRuY29kZS5ibG9nLzIwMTYvMDcvMjIv
bXNhLWdldHRpbmctc3RhcnRlZC8pIGJ5IFN1bWl0IE1haW5naQotIDIwMTYv
MDgvMjMgLSBbR2VuZXJhdGluZyBEcmVhbWZhY3RvcnkgQ2xpZW50IFNES3Mg
YmFzZWQgb24gU3dhZ2dlciBBUEkgRGVmaW5pdGlvbnNdKGh0dHA6Ly9ibG9n
LmRyZWFtZmFjdG9yeS5jb20vZ2VuZXJhdGluZy1kcmVhbWZhY3RvcnktY2xp
ZW50LXNka3MtYmFzZWQtb24tc3dhZ2dlci1hcGktZGVmaW5pdGlvbnMpIGJ5
IFtQaGlsIFNjaHVsZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9waGlsaWNpb3Vz
LykKLSAyMDE2LzA5LzI4IC0gWzEgVU5CRUxJRVZBQkxFIFRSSUNLIFRPIENS
RUFURSBBTiBFQVNZIFRPIENPTlNVTUUgQVBJIElOIC5ORVRdKGh0dHBzOi8v
c3RhcHAuc3BhY2UvMS1zaW1wbGUtdHJpY2stdG8tY3JlYXRlLWEtZ29vZC1h
cGktaW4tbmV0LykgYnkgW1Bpb3RyIFN0YXBwXShodHRwczovL3N0YXBwLnNw
YWNlL2F1dGhvci9waW90ci1zdGFwcC8pCi0gMjAxNi8xMC8xMCAtIFtVc2lu
ZyBzd2FnZ2VyLWNvZGVnZW4gd2l0aCBNYXJrZXRvXShodHRwOi8vZGV2ZWxv
cGVycy5tYXJrZXRvLmNvbS9ibG9nL3VzaW5nLXN3YWdnZXItY29kZWdlbi13
aXRoLW1hcmtldG8vKSBieSBbS2VubnkgRWxraW5ndG9uXShodHRwOi8vZGV2
ZWxvcGVycy5tYXJrZXRvLmNvbS9ibG9nL3VzaW5nLXN3YWdnZXItY29kZWdl
bi13aXRoLW1hcmtldG8vKQotIDIwMTYvMTAvMTIgLSBbRGVzaWduaW5nIGEg
U3dhZ2dlciBBUEldKGh0dHBzOi8vc29va29jaGVmZi5jb20vcG9zdC9hcGkv
c3dhZ2dlci8pIGJ5IFtLZXZpbiBTb29rb2NoZWZmXShodHRwczovL3Nvb2tv
Y2hlZmYuY29tLykKLSAyMDE2LzExLzA1IC0gW0hvdyB0byBnZW5lcmF0ZSBh
IFJFU1QgQXBwbGljYXRpb25dKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dh
dGNoP3Y9aXlDOUJXTWU3NVEpIGJ5IFtKb2hhbm5lcyBGaWFsYV0oaHR0cHM6
Ly9naXRodWIuY29tL2pmaWFsYSkgQCBEZXZGZXN0IFZpZW5uYSAyMDE2Ci0g
MjAxNi8xMS8xMCAtIFtCdWlsZGluZyBhbiBBRU0gQVBJIGNsaWVudHMgZWNv
c3lzdGVtXShodHRwOi8vYmxvZy5jbGlmZmFuby5jb20vMjAxNi8xMS8xMC9h
ZG9iZS1tYXJrZXRpbmctY2xvdWQtY29tbXVuaXR5LWV4cG8vKSBieSBDbGlm
ZmFubyBTdWJhZ2lvLCBNaWNoYWVsIERpZW5kZXIsIFN0ZXBoZW4gU2hpbSBm
cm9tIFtTaGluZSBTb2x1dGlvbnNdKGh0dHBzOi8vc2hpbmVzb2x1dGlvbnMu
Y29tLykgQCBbQWRvYmUgTWFya2V0aW5nIENsb3VkIENvbW11bml0eSBFeHBv
IChBTUNDRSldKGh0dHBzOi8vd3d3Lm1lZXR1cC5jb20vTWVsYm91cm5lLUFF
TS1DUS1NZWV0dXAvZXZlbnRzLzIzMzM2MzEwMS8pCi0gMjAxNi8xMS8xOCAt
IFtIb3cgdG8gZ2VuZXJhdGUgYSBSRVNUIENYRjMgYXBwbGljYXRpb24gZnJv
bSBTd2FnZ2VyLUNvbnRyYWN0XShodHRwczovL3d3dy5zbGlkZXNoYXJlLm5l
dC9qb2hhbm5lc19maWFsYS9ob3ctdG8tZ2VuZXJhdGUtYS1yZXN0LWN4ZjMt
YXBwbGljYXRpb24tZnJvbS1zd2FnZ2VyLWFwYWNoZWNvbmV1LTIwMTYpIGJ5
IFtKb2hhbm5lcyBGaWFsYV0oaHR0cHM6Ly9naXRodWIuY29tL2pmaWFsYSkg
QCBBcGFjaGVDb25FVSAyMDE2Ci0gMjAxNi8xMS8yNSAtIFtTd2FnZ2VyIENv
ZGVnZW4gZm9yIFN3aWZ0MyBhbmQgTm9kZUpTXShodHRwczovL25vcm1hbmQx
LmdpdGh1Yi5pby9ibG9nL3N3aWZ0L3N3YWdnZXIvY29kZWdlbi8yMDE2LzEx
LzI1L1N3YWdnZXItQ29kZWdlbi1mb3ItU3dpZnQzLWFuZC1Ob2RlSlMuaHRt
bCkgYnkgW0RhdmlkIE5vcm1hbl0oaHR0cHM6Ly9naXRodWIuY29tL25vcm1h
bmQxKQotIDIwMTYvMTIvMDggLSBbQnVpbGRpbmcgYW4gQVBJIHdpdGggU3dh
Z2dlcl0oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1QYndRV3c3
eFNPTSkKLSAyMDE2LzEyLzA4IC0gW0dlbmVyYXRlIGNsaWVudCBzaWRlIGNv
ZGUgdXNpbmcgU3dhZ2dlciBDb2RlZ2VuXShodHRwczovL2NhcnJhLWx1Y2lh
LWx0ZC5jby51ay8yMDE2LzEyLzA4L2dlbmVyYXRlLWNsaWVudC1zaWRlLWNv
ZGUtdXNpbmctc3dhZ2dlci1jb2RlZ2VuLykgYnkgW3RoZUZlcmtlbF0oaHR0
cHM6Ly9jYXJyYS1sdWNpYS1sdGQuY28udWsvYXV0aG9yL3RoZWZlcmtlbC8p
Ci0gMjAxNy8wMS8xNiAtIFtaZXJvIHRvIEFQSSBpbiA0IG1pbnV0ZXNdKGh0
dHBzOi8vY2lkcmJsb2NrLmdpdGh1Yi5pby96ZXJvLXRvLWFwaS1pbi00LW1p
bnV0ZXMuaHRtbCkgYnkgW0JyYWRsZXkgQS4gVGhvcm50b25dKGh0dHBzOi8v
Z2l0aHViLmNvbS9jaWRyYmxvY2spCi0gMjAxNy8wMi8wOSAtIFvjgIxTd2Fn
Z2Vy44KS5Yip55So44GX44Gf5paw6KaP44K144O844OT44K56ZaL55m644CN
44Go44GE44GG44K/44Kk44OI44Or44Gn55m75aOH44GX44Gm5p2l44G+44GX
44GfXShodHRwczovL3RlY2hibG9nLnJlY29jaG9rdS5qcC8xMDU1KSBieSBb
cmVjb3RlY2hdKGh0dHBzOi8vd3d3LnNsaWRlc2hhcmUubmV0L3JlY290ZWNo
KQotIDIwMTcvMDMvMDMgLSBbU3dhZ2dlciBDb2RlZ2VuIOOBruS9v+OBhOaW
ueOBruewoeWNmOOBquiqrOaYjuOBp+OBmV0oaHR0cHM6Ly9zcGVha2VyZGVj
ay5jb20vd2FneXUyOTgvc3dhZ2dlci1jb2RlZ2VuKSBieSBbd2FneXUyOThd
KGh0dHBzOi8vZ2l0aHViLmNvbS93YWd5dTI5OCkKLSAyMDE3LzAzLzI0IC0g
W1VzaW5nIE9wZW4gQVBJIFNwZWNpZmljYXRpb24gVG8gUHV0IEx5ZnQgU0RL
IFN1cHBvcnQgaW4gdGhlIEZhc3QgTGFuZV0oaHR0cHM6Ly9tZWRpdW0uY29t
L2x5ZnQtZGV2ZWxvcGVyLXBsYXRmb3JtL3VzaW5nLW9wZW4tYXBpLXNwZWNp
ZmljYXRpb24tdG8tcHV0LWx5ZnQtc2RrLXN1cHBvcnQtaW4tdGhlLWZhc3Qt
bGFuZS03YjYyMzIxOGU0ZWUpIGJ5IFtWYWwgUG9sb3VjaGtpbmVdKGh0dHBz
Oi8vZ2l0aHViLmNvbS92cG9sb3VjaGtpbmUpCi0gMjAxNy8wNC8xMyAtIFtB
dXRvbWF0aWNhbGx5IEdlbmVyYXRpbmcgeW91ciBBUEkgQ2xpZW50IHdpdGgg
U3dhZ2dlciBhbmQgU3dhZ2dlciBDb2RlZ2VuXShodHRwczovL3d3dy55b3V0
dWJlLmNvbS93YXRjaD92PUV6S3dpLXU5alFvKSBieSBbSmVzc2UgQ29sbGlz
XShodHRwczovL2dpdGh1Yi5jb20vamVzc2VkYykgQCBNZWxib3VybmUgQ29j
b2FoZWFkcwotIDIwMTcvMDQvMjcgLSBbU3dhZ2dlciBDb2RlZ2VuIOOBrlBI
UOWun+ijheOBjOOBguOBvuOCiuOBq+OCouODrOOBoOOBo+OBn+OBruOBp+OA
geODqeOCpOODluODqeODquiHquS9nOOBl+OBpuWFrOmWi+OBl+OBpuOBv+OB
n10oaHR0cDovL3FpaXRhLmNvbS9pbXVuZXcvaXRlbXMvMmU5YzQ3MmUwMDk3
ZTMyOWYyY2QpIGJ5IFtpbXVuZXddKGh0dHA6Ly9xaWl0YS5jb20vaW11bmV3
KQotIDIwMTcvMDUvMTcgLSBbRGlzZcOxbyBkZSBBUElzIGNvbiBPcGVuQVBJ
XShodHRwczovL3d3dy5zbGlkZXNoYXJlLm5ldC9wam1vbGluYS9kaXNlby1k
ZS1hcGlzLWNvbi1vcGVuYXBpKSBieSBbUGVkcm8gSi4gTW9saW5hXShodHRw
czovL2dpdGh1Yi5jb20vcGptb2xpbmEpIEAgW0pTRGF5RVMgMjAxN10oaHR0
cDovLzIwMTcuanNkYXkuZXMvKQotIDIwMTcvMDUvMjIgLSBbUHJlc2VudGF0
aW9uIG9mIHRoZSBWZXJ0LngtU3dhZ2dlciBwcm9qZWN0XShodHRwOi8vdmVy
dHguaW8vYmxvZy9wcmVzZW50YXRpb24tb2YtdGhlLXZlcnQteC1zd2FnZ2Vy
LXByb2plY3QvKSBieSBbQHBoaXo3MV0oaHR0cDovL2dpdGh1Yi5jb20vcGhp
ejcxKQotIDIwMTcvMDUvMjIgLSBbQXV0b21hdGljYWxseSBnZW5lcmF0aW5n
IHlvdXIgQVBJIGZyb20gYSBzd2FnZ2VyIGZpbGUgdXNpbmcgZ3JhZGxlXSho
dHRwczovL3d3dy5qY29yZS5jb20vMjAxNy8wNS8yMi9hdXRvbWF0aWNhbGx5
LWdlbmVyYXRpbmctYXBpLXVzaW5nLXN3YWdnZXItYW5kLWdyYWRsZS8pIGJ5
IFtEZW5peiBUdXJhbl0oaHR0cHM6Ly93d3cuamNvcmUuY29tL2F1dGhvci9k
ZW5pei8pCi0gMjAxNy8wNi8yMSAtIFtTd2FnZ2VyIFByZXNlbnRhdGlvbiAt
IFdhcnNhdyBSdWJ5IFVzZXJzIEdyb3VwXShodHRwczovL3d3dy55b3V0dWJl
LmNvbS93YXRjaD92PXVDbm5ETUZRQjhVKSBieSBbQHJhZmFscGV0cnlrYV0o
aHR0cDovL2dpdGh1Yi5jb20vcmFmYWxwZXRyeWthKQotIDIwMTcvMDYvMjkg
LSBbTWFraW5nIFNES3M6IHRoZSBiZXNwb2tlLCB0aGUgaG9wZWZ1bCBhbmQg
dGhlIGdlbmVyYXRlZF0oaHR0cHM6Ly9kZXZyZWwubmV0L2RldmVsb3Blci1l
eHBlcmllbmNlL21ha2luZy1zZGtzLWJlc3Bva2UtaG9wZWZ1bC1nZW5lcmF0
ZWQpIGJ5IFtUcmlzdGFuIFNva29sXShodHRwczovL2dpdGh1Yi5jb20vdHJp
c3RhbnNva29sKSAoW1NxdWFyZV0oaHR0cHM6Ly9naXRodWIuY29tL3NxdWFy
ZSkpIGF0IERldlhjb24gMjAxNwotIDIwMTcvMDcvMTEgLSBbT3BlbkFQSSBk
ZXZlbG9wbWVudCB3aXRoIFB5dGhvbl0oaHR0cHM6Ly93d3cuc2xpZGVzaGFy
ZS5uZXQvVGFrdXJvV2FkYS8yMDE3MDcxMS1ldXJvLXB5dGhvbjIwMTcpIGJ5
IFvlkoznlLDmi5PmnJddKGh0dHBzOi8vZ2l0aHViLmNvbS90YXhwb24pIGF0
IFtFdXJvUHl0aG9uIDIwMTddKGh0dHBzOi8vZXAyMDE3LmV1cm9weXRob24u
ZXUvZW4vKQotIDIwMTcvMDcvMjkgLSBbSG93IFNxdWFyZSBtYWtlcyBpdHMg
U0RLc10oaHR0cHM6Ly9tZWRpdW0uY29tL3NxdWFyZS1jb3JuZXItYmxvZy9o
b3ctc3F1YXJlLW1ha2VzLWl0cy1zZGtzLTZhMGZkN2VhNGIyZCkgYnkgW1Ry
aXN0YW4gU29rb2xdKGh0dHBzOi8vZ2l0aHViLmNvbS90cmlzdGFuc29rb2wp
IChbU3F1YXJlXShodHRwczovL2dpdGh1Yi5jb20vc3F1YXJlKSkKLSAyMDE3
LzA3LzMxIC0gW0hvdyB0byBHZW5lcmF0ZSBhIERlcGxveWFibGUgUkVTVCBD
WEYzIEFwcGxpY2F0aW9uIGZyb20gYSBTd2FnZ2VyLUNvbnRyYWN0XShodHRw
czovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWdNNjNySmxVSFpRKSBieSBb
Sm9oYW5uZXMgRmlhbGFdKGh0dHBzOi8vZ2l0aHViLmNvbS9qZmlhbGEpIEAg
Vm94eGVkIERheXMgVmllbm5hCi0gMjAxNy8wOC8xMSAtIFtTd2FnZ2VyIENv
ZGVnZW4g6Ieq5Yqo55Sf5oiQUmV0cm9maXQg5Luj56CBXShodHRwczovL2p1
ZWppbi5pbS9lbnRyeS81OThkOGViODZmYjlhMDNjNTI0NTllMmEpIGJ5IFvl
vpDno4pdKGh0dHA6Ly93d3cuamlhbnNodS5jb20vdS83OTJjNzM4YjMzZmMp
Ci0gMjAxNy8wOC8yNCAtIFtBUElzIEZpcnN0XShodHRwczovL2VuZ2luZWVy
aW5nLnNxdWFyZXNwYWNlLmNvbS9ibG9nLzIwMTcvYXBpcy1maXJzdCkgYnkg
W3JveWthY2hvdWhdKGh0dHBzOi8vZ2l0aHViLmNvbS9yb3lrYWNob3VoKSAo
W1NxdWFyZV0oaHR0cHM6Ly9naXRodWIuY29tL3NxdWFyZSkpCi0gMjAxNy8w
OC8zMSAtIFtCcmluZ2luZyBKZW5raW5zIFJlbW90ZSBBY2Nlc3MgQVBJIFRv
IFRoZSBNYXNzZXNdKGh0dHA6Ly9ibG9nLmNsaWZmYW5vLmNvbS8yMDE3LzA5
LzAxL2plbmtpbnMtd29ybGQtMjAxNy8pIGJ5IFtDbGlmZmFubyBTdWJhZ2lv
XShodHRwOi8vY2xpZmZhbm8uY29tKSBmcm9tIFtTaGluZSBTb2x1dGlvbnNd
KGh0dHBzOi8vc2hpbmVzb2x1dGlvbnMuY29tLykgQCBbSmVua2lucyBXb3Js
ZCAyMDE3XShodHRwczovL2plbmtpbnN3b3JsZDIwMTYyMDE3LnNjaGVkLmNv
bS8pCi0gMjAxNy8wOS8wOCAtIFtTd2FnZ2VyIENvZGVnZW4g44Gn6Ieq5YuV
55Sf5oiQ44GX44Gf44Kv44Op44Kk44Ki44Oz44OIU0RL44KS5L2/44GGKGlP
U+e3qCldKGh0dHA6Ly9ibG9nLnRlY2hpdW0uanAvZW50cnkvMjAxNy8wOS8w
OC8wNzE2NTApIGJ5IFtrZnVydWVdKGh0dHA6Ly9wcm9maWxlLmhhdGVuYS5u
ZS5qcC9rZnVydWUvKQotIDIwMTcvMDkvMDkgLSBbU3dhZ2dlciBDb2RlZ2Vu
IOOBp+iHquWLleeUn+aIkOOBl+OBn+OCr+ODqeOCpOOCouODs+ODiFNES+OC
kuS9v+OBhihSeFN3aWZ0IOe3qCldKGh0dHA6Ly9ibG9nLnRlY2hpdW0uanAv
ZW50cnkvMjAxNy8wOS8wOS8xMTMwMDMpIGJ5IFtrZnVydWVdKGh0dHA6Ly9w
cm9maWxlLmhhdGVuYS5uZS5qcC9rZnVydWUvKQotIDIwMTcvMDkvMDkgLSBb
T3BlbkFQSeOCkuWIqeeUqOOBl+OBn1B5dGhvbldlYuOCouODl+ODquOCseOD
vOOCt+ODp+ODs+mWi+eZul0oaHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQv
VGFrdXJvV2FkYS9vcGVuYXBpcHl0aG9ud2ViKSBieSBb5ZKM55Sw5ouT5pyX
XShodHRwczovL2dpdGh1Yi5jb20vdGF4cG9uKSBhdCBbUHlDb24gSlAgMjAx
N10oaHR0cHM6Ly9weWNvbi5qcC8yMDE3L2phLykKLSAyMDE3LzA5LzIxIC0g
W0dlbmVyYXRpbmcgYW4gRWxhc3RpYyBDbG91ZCBFbnRlcnByaXNlIENsaWVu
dF0oaHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ibG9nL2dlbmVyYXRpbmctYW4t
ZWxhc3RpYy1jbG91ZC1lbnRlcnByaXNlLWNsaWVudCkgYnkgW0dyZWcgTWFy
em91a2FdKGh0dHBzOi8vZ2l0aHViLmNvbS9nbWFyeikgKFtFbGFzdGljXSho
dHRwczovL3d3dy5lbGFzdGljLmNvLykpCi0gMjAxNy8wOS8yNiAtIFtIb3cg
dG8gVXNlIElvVCBBcHBsaWNhdGlvbiBFbmFibGVtZW50IEFwaSBIdWIgSlNP
TiBEZXNjcmlwdG9yIGluIFBvc3RtYW4gYW5kIEhvdyB0byBHZW5lcmF0ZSBD
bGllbnQgQ29kZV0oaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL3JhZHUt
c2ltZW4vKSBieSBbUmFkdSBTaW1lbl0oaHR0cHM6Ly93d3cubGlua2VkaW4u
Y29tL2luL3JhZHUtc2ltZW4vKSAoW1NBUF0oaHR0cHM6Ly93d3cuc2FwLmNv
bS8pKQotIDIwMTcvMDkvMjggLSBbU3dhZ2dlciBDb2RlZ2Vu44GnIEFQSeOC
r+ODqeOCpOOCouODs+ODiGdlbSDoh6rli5XnlJ/miJAgI20za3RdKGh0dHBz
Oi8vc3BlYWtlcmRlY2suY29tL2p1bnRha2kvc3dhZ2dlci1jb2RlZ2VuZGUt
YXBpa3VyYWlhbnRvZ2VtLXppLWRvbmctc2hlbmctY2hlbmctbnVtYmVyLW0z
a3QpIGJ5IFtKdW1wZWkgVGFraXlhc3VdKGh0dHBzOi8vZ2l0aHViLmNvbS9q
dW50YWtpKQotIDIwMTcvMDkvMzAgLSBbU3dhZ2dlcuOBruODhuODs+ODl+OD
rOODvOODiOOCkumtlOaUuemAoOOBl+OBn+ipsSAj5riL6LC3amF2YV0oaHR0
cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvaW50MTI4L3N3YWdnZXItODAzMDky
MjQpIGJ5IFtIaWRldGFrZSBJd2F0YV0oaHR0cHM6Ly9naXRodWIuY29tL2lu
dDEyOCkgKFtOVFQgREFUQSBDb3Jwb3JhdGlvbl0oaHR0cDovL3d3dy5udHRk
YXRhLmNvbS9nbG9iYWwvZW4vKSkKLSAyMDE3LzEwLzA0IC0gW0VudGVycHJp
c2UtZnJpZW5kbHkgSmF2YSBjbGllbnQgZm9yIE1pY3Jvc29mdCBNYWNoaW5l
IExlYXJuaW5nIFNlcnZlcl0oaHR0cHM6Ly9ibG9ncy5tc2RuLm1pY3Jvc29m
dC5jb20vbWxzZXJ2ZXIvMjAxNy8xMC8wNC9lbnRlcnByaXNlLWZyaWVuZGx5
LWphdmEtY2xpZW50LWZvci1taWNyb3NvZnQtbWFjaGluZS1sZWFybmluZy1z
ZXJ2ZXIvKSBieSBbUHJhdGlrIFBhbG5pdGthcl0oaHR0cHM6Ly93d3cubGlu
a2VkaW4uY29tL2luL3ByYXRpa3BhbG5pdGthci8pIChbTWljcm9zb2Z0XSho
dHRwczovL3d3dy5taWNyb3NvZnQuY29tLykpCi0gMjAxNy8xMC8wOCAtIFtH
ZW5lcmF0aW5nIGEgUkVTVCBBZGEgY2xpZW50IHdpdGggT3BlbkFQSSBhbmQg
U3dhZ2dlciBDb2RlZ2VuXShodHRwczovL2Jsb2cudmFjcy5mci92YWNzL2Js
b2dzL3Bvc3QuaHRtbD9wb3N0PTIwMTcvMTAvMDgvR2VuZXJhdGluZy1hLVJF
U1QtQWRhLWNsaWVudC13aXRoLU9wZW5BUEktYW5kLVN3YWdnZXItQ29kZWdl
bikgYnkgW1N0ZXBoYW5lIENhcnJlel0oaHR0cHM6Ly9naXRodWIuY29tL3N0
Y2FycmV6KQotIDIwMTcvMTEvMDggLSBbQSBCZWdpbm5lcidzIEd1aWRlIHRv
IENvZGUgR2VuZXJhdGlvbiBmb3IgUkVTVCBBUElzXShodHRwczovL2d1bS5j
by9zd2FnZ2VyX2NvZGVnZW5fYmVnaW5uZXIpKGVCb29rKSBieSBbV2lsbGlh
bSBDaGVuZ10oaHR0cHM6Ly90d2l0dGVyLmNvbS93aW5nMzI4KQotIDIwMTcv
MTEvMTggLSBbMTDlubTliY3jga7jg6zjgqzjgrfjg7zjgrfjgrnjg4bjg6Dj
gpLjgrXjg7zjg5Djg7zjgrXjgqTjg4lLb3RsaW7jgafjg5Xjg6vjg6rjg4vj
g6Xjg7zjgqLjg6vjgZfjgabjgYTjgovoqbEgI2pqdWdfY2NjICNjY2NfZzJd
KGh0dHBzOi8vc3BlYWtlcmRlY2suY29tL21hZWhhcmluLzEwbmlhbi1xaWFu
LWZhbHNlcmVnYXNpc2lzdXRlbXV3b3NhYmFzYWlkb2tvdGxpbmRlaHVydXJp
bml5dWFydXNpdGVpcnVodWEtbnVtYmVyLWpqdWctY2NjLW51bWJlci1jY2Mt
ZzIpIGJ5IFtIaWRlbm9yaSBNYWVoYXJhXShodHRwczovL2dpdGh1Yi5jb20v
bWFlaGFyaW4pCi0gMjAxNy8xMS8yMSAtIFtzd2FnZ2VyLWNvZGVnZW4g44GL
44KJ55y644KB44KLIFN3aWZ0NF0oaHR0cHM6Ly9zcGVha2VyZGVjay5jb20v
ZF9kYXRlL3N3YWdnZXItY29kZWdlbi1rYXJhdGlhby1tZXJ1LXN3aWZ0NCkg
YnkgW0RhaWtpIE1hdHN1ZGF0ZV0oaHR0cHM6Ly9naXRodWIuY29tL2QtZGF0
ZSkKLSAyMDE3LzEyLzA3IC0gW0FQSS1kcml2ZW4gZGV2ZWxvcG1lbnQgd2l0
aCBPcGVuQVBJIGFuZCBTd2FnZ2VyLCBQYXJ0IDJdKGh0dHBzOi8vd3d3Lml0
d29ybGQuY29tL2FydGljbGUvMzE5OTE5MC9hcGlzL2FwaS1kcml2ZW4tZGV2
ZWxvcG1lbnQtd2l0aC1vcGVuYXBpLWFuZC1zd2FnZ2VyLXBhcnQtMi5odG1s
KSBieSBNYXR0aGV3IFR5c29uCi0gMjAxNy8xMi8yOSAtIFtSRVNUIEFQSXPk
u6PnoIHnlJ/miJDmjIfljZddKGh0dHBzOi8vZ3Vtcm9hZC5jb20vbC9zd2Fn
Z2VyX2NvZGVnZW5fYmVnaW5uZXJfemgpKGVCb29rKSBieSBbV2lsbGlhbSBD
aGVuZ10oaHR0cHM6Ly9naXRodWIuY29tL3dpbmczMjgpLCBbWGluIE1lbmdd
KGh0dHBzOi8vZ2l0aHViLmNvbS94bWVuZzEpCi0gMjAxNy8xMi8yMSAtIFtV
c2luZyBQcm90b2NvbCBCdWZmZXIgdG8gR2VuZXJhdGUgU0RLIGF0IEhvb3Rz
dWl0ZV0oaHR0cDovL2NvZGUuaG9vdHN1aXRlLmNvbS91c2luZy1wcm90b2Nv
bC1idWZmZXItdG8tZ2VuZXJhdGUtc2RrLWF0LWhvb3N1aXRlLz9saXBpPXVy
biUzQWxpJTNBcGFnZSUzQWRfZmxhZ3NoaXAzX21lc3NhZ2luZyUzQnk0QVR6
M1NEUlh5dlhKSjE0TFF5c1ElM0QlM0QpIGJ5IFtKb3kgWmhhbmddKGh0dHBz
Oi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qb3k4emhhbmcvKQotIDIwMTgvMDEv
MTEgLSBbU3dhZ2dlciDlt6XlhbfnrrHku4vnu43lj4rku6PnoIHoh6rliqjn
lJ/miJDnpLrkvotdKGh0dHBzOi8vZ2l0aHViLmNvbS9xY3Qvc3dhZ2dlci1l
eGFtcGxlKSBieSBbcWN0XShodHRwczovL2dpdGh1Yi5jb20vcWN0KQotIDIw
MTgvMDEvMTkgLSBbR2VuZXJvd2FuaWUga29kdSB1c8WCdWcgUkVTVCAtIHBy
emV3b2RuaWsgZGxhIHBvY3rEhXRrdWrEhWN5Y2hdKGh0dHBzOi8vZ3VtLmNv
L3N3YWdnZXJfY29kZWdlbl9iZWdpbm5lcl9wbCkoZUJvb2spIGJ5IFtXaWxs
aWFtIENoZW5nXShodHRwczovL2dpdGh1Yi5jb20vd2luZzMyOCksIFtUb21h
c3ogUHJ1c10oaHR0cHM6Ly9naXRodWIuY29tL3RvbXBsdXMpLCBbQmFydGVr
IEtyeXphXShodHRwczovL2dpdGh1Yi5jb20vYmtyeXphKQotIDIwMTgvMDIv
MDMgLSBbV3JpdGluZyBSRVNUIEFQSXMgd2l0aCBPcGVuQVBJIGFuZCBTd2Fn
Z2VyIEFkYV0oaHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvU3RlcGhhbmVD
YXJyZXoxL3dyaXRpbmctcmVzdC1hcGlzLXdpdGgtb3BlbmFwaS1hbmQtc3dh
Z2dlci1hZGEvU3RlcGhhbmVDYXJyZXoxL3dyaXRpbmctcmVzdC1hcGlzLXdp
dGgtb3BlbmFwaS1hbmQtc3dhZ2dlci1hZGEpIGJ5IFtTdGVwaGFuZSBDYXJy
ZXpdKGh0dHBzOi8vZ2l0aHViLmNvbS9zdGNhcnJleikgYXQgW0ZPU0RFTSAy
MDE4XShodHRwczovL2Zvc2RlbS5vcmcvMjAxOCkKLSAyMDE4LzAyLzI4IC0g
W09wZW5BUEnigJNBbiBlQmF5IFBlcnNwZWN0aXZlXShodHRwczovL3d3dy5l
YmF5aW5jLmNvbS9zdG9yaWVzL2Jsb2dzL3RlY2gvb3BlbmFwaS1hbi1lYmF5
LXBlcnNwZWN0aXZlLykgYnkgU2hla2hhciBCYW5lcmplZSAoZUJheSkKLSAy
MDE4LzAzLzE2IC0gW1JFU1QgQVBJ44Gu44Gf44KB44Gu44Kz44O844OJ55Sf
5oiQ5YWl6ZaAXShodHRwczovL2d1bXJvYWQuY29tL2wvc3dhZ2dlcl9jb2Rl
Z2VuX2JlZ2lubmVyX2pwKSBieSBbV2lsbGlhbSBDaGVuZ10oaHR0cHM6Ly9n
aXRodWIuY29tL3dpbmczMjgpLCBb5Lit6YeO5pqB5Lq6XShodHRwczovL2dp
dGh1Yi5jb20vYWNraW50b3NoKSwgW+WSjOeUsOaLk+acl10oaHR0cHM6Ly9n
aXRodWIuY29tL3RheHBvbikKCiMgU3dhZ2dlciBDb2RlZ2VuIENvcmUgVGVh
bQoKU3dhZ2dlciBDb2RlZ2VuIGNvcmUgdGVhbSBtZW1iZXJzIGFyZSBjb250
cmlidXRvcnMgd2hvIGhhdmUgYmVlbiBtYWtpbmcgc2lnbmlmaWNhbnQgY29u
dHJpYnV0aW9ucyAocmV2aWV3IGlzc3VlcywgZml4IGJ1Z3MsIG1ha2UgZW5o
YW5jZW1lbnRzLCBldGMpIHRvIHRoZSBwcm9qZWN0IG9uIGEgcmVndWxhciBi
YXNpcy4KCiMjIENvcmUgVGVhbSBNZW1iZXJzCgoKIyMgVGVtcGxhdGUgQ3Jl
YXRvcgpIZXJlIGlzIGEgbGlzdCBvZiB0ZW1wbGF0ZSBjcmVhdG9yczoKICog
QVBJIENsaWVudHM6CiAgICogQWRhOiBAc3RjYXJyZXoKICAgKiBBa2thLVNj
YWxhOiBAY2NoYWZlcgogICAqIEFwZXg6IEBhc25lbGxpbmcKICAgKiBCYXNo
OiBAYmtyeXphCiAgICogQysrIFJFU1Q6IEBEYW5pZWxrdTE1CiAgICogQyMg
KC5ORVQgMi4wKTogQHdobwogICAqIEMjICguTkVUIFN0YW5kYXJkIDEuMyAp
OiBAR3JvbnNhawogICAqIEMjICguTkVUIDQuNSByZWZhY3RvcmVkKTogQGpp
bXNjaHViZXJ0CiAgICogQ2xvanVyZTogQHhoaAogICAqIERhcnQ6IEB5aXNz
YWNoYXIKICAgKiBEYXJ0IChyZWZhY3RvcmVkIGluIDIuNC4wKTogQGpvZXJu
YWhyZW5zCiAgICogRWxpeGlyOiBAbmlrdQogICAqIEVsbTogQHRyZW5uZW1h
bgogICAqIEVpZmZlbDogQGp2ZWxpbGxhCiAgICogRXJsYW5nOiBAdHNsb3Vn
aHRlcgogICAqIEdyb292eTogQHZpY3RvcmdpdAogICAqIEdvOiBAd2luZzMy
OAogICAqIEdvIChyZXdyaXR0ZW4gaW4gMi4zLjApOiBAYW50aWhheAogICAq
IEhhc2tlbGwgKGh0dHAtY2xpZW50KTogQGpvbnNjaG9uaW5nCiAgICogSmF2
YSAoRmVpZ24pOiBAZGF2aWRraXNzCiAgICogSmF2YSAoUmV0cm9maXQpOiBA
MGxlZ2cKICAgKiBKYXZhIChSZXRyb2ZpdDIpOiBAZW1pbGlhbm9ib25hc3Np
CiAgICogSmF2YSAoSmVyc2V5Mik6IEB4aGgKICAgKiBKYXZhIChva2h0dHAt
Z3Nvbik6IEB4aGgKICAgKiBKYXZhIChSZXN0VGVtcGxhdGUpOiBAbmJydW5v
CiAgICogSmF2YSAoUkVTVEVhc3kpOiBAZ2F5YXRocmlncwogICAqIEphdmEg
KFZlcnR4KTogQGxvcGVzbWNjCiAgICogSmF2YSAoR29vZ2xlIEFQSXMgQ2xp
ZW50IExpYnJhcnkpOiBAY2hhcmxlc2NhcHBzCiAgICogSmF2YSAoUmVzdC1h
c3N1cmVkKTogQHZpY2xvdnNreQogICAqIEphdmFzY3JpcHQvTm9kZUpTOiBA
amZpYWxhCiAgICogSmF2YXNjcmlwdCAoQ2xvc3VyZS1hbm5vdGF0ZWQgQW5n
dWxhcikgQGFjaGV3MjIKICAgKiBKTWV0ZXI6IEBkYXZpZGtpc3MKICAgKiBL
b3RsaW46IEBqaW1zY2h1YmVydAogICAqIEx1YTogQGRhdXJuaW1hdG9yCiAg
ICogUGVybDogQHdpbmczMjgKICAgKiBQSFAgKEd1enpsZSk6IEBiYWFydG9z
egogICAqIFBvd2VyU2hlbGw6IEBiZWF0Y3JhY2tlcgogICAqIFI6IEByYW1u
b3YKICAgKiBSdXN0OiBAZmFyY2FsbGVyCiAgICogUnVzdCAocnVzdC1zZXJ2
ZXIpOiBAbWV0YXN3aXRjaAogICAqIFNjYWxhIChzY2FsYXogJiBodHRwNHMp
OiBAdGJyb3duMTk3OQogICAqIFN3aWZ0OiBAdGtxdWJvCiAgICogU3dpZnQg
MzogQGhleGVsb24KICAgKiBTd2lmdCA0OiBAZWh5Y2hlCiAgICogVHlwZVNj
cmlwdCAoTm9kZSk6ICBAbWhhcmRvcmYKICAgKiBUeXBlU2NyaXB0IChBbmd1
bGFyMSk6ICBAbWhhcmRvcmYKICAgKiBUeXBlU2NyaXB0IChGZXRjaCk6IEBs
ZW9ueXUKICAgKiBUeXBlU2NyaXB0IChBbmd1bGFyMik6IEByb25pLWZyYW50
Y2hpCiAgICogVHlwZVNjcmlwdCAoalF1ZXJ5KTogQGJoZXJpbGEKICogU2Vy
dmVyIFN0dWJzCiAgICogQWRhOiBAc3RjYXJyZXoKICAgKiBDIyBBU1AuTkVU
NTogQGppbXNjaHViZXJ0CiAgICogQyMgTmFuY3lGWDogQG1zdGVmYW5pdWsK
ICAgKiBDKysgUGlzdGFjaGU6IEBzZWJ5bWlhbm8KICAgKiBDKysgUmVzdGJl
ZDogQHN0a3J3b3JrCiAgICogRXJsYW5nIFNlcnZlcjogQGdhbGF4aWUKICAg
KiBHbyBTZXJ2ZXI6IEBndW9odWFuZwogICAqIEhhc2tlbGwgU2VydmFudDog
QGFsZ2FzCiAgICogSmF2YSBNU0Y0SjogQHNhbmplZXdhLW1hbGFsZ29kYQog
ICAqIEphdmEgU3ByaW5nIEJvb3Q6IEBkaXlmcgogICAqIEphdmEgVW5kZXJ0
b3c6IEBzdGV2ZWh1CiAgICogSmF2YSBQbGF5IEZyYW1ld29yazogQEpGQ290
ZQogICAqIEphdmEgUEtNU1Q6IEBhbnNodTIxODUgQHNhbnNodW1hbiBAcmt1
bWFyLXBrIEBuaW5vZHBpbGxhaQogICAqIEpBWC1SUyBSZXN0RWFzeTogQGNo
YW1lbGVvbjgyCiAgICogSkFYLVJTIENYRjogQGhpdmVzaGlwCiAgICogSkFY
LVJTIENYRiAoQ0RJKTogQG5pY2tjbWF5bmFyZAogICAqIEpBWC1SUyBSZXN0
RWFzeSAoSkJvc3MgRUFQKTogQGpmaWFsYQogICAqIEtvdGxpbjogQGppbXNj
aHViZXJ0CiAgICogUEhQIEx1bWVuOiBAYWJjc3VuCiAgICogUEhQIFNsaW06
IEBqZmFzdG5hY2h0CiAgICogUEhQIFN5bWZvbnk6IEBrc20yCiAgICogUEhQ
IFplbmQgRXhwcmVzc2l2ZSAod2l0aCBQYXRoIEhhbmRsZXIpOiBAQXJ0aWN1
cwogICAqIFJ1Ynkgb24gUmFpbHMgNTogQHpseAogICAqIFJ1c3QgKHJ1c3Qt
c2VydmVyKTogQG1ldGFzd2l0Y2gKICAgKiBTY2FsYSBGaW5jaDogQGppbXNj
aHViZXJ0CiAgICogU2NhbGEgTGFnb206IEBnbWt1bWFyMjAwNQogKiBEb2N1
bWVudGF0aW9uCiAgICogSFRNTCBEb2MgMjogQGpoaXRjaGNvY2sKICAgKiBD
b25mbHVlbmNlIFdpa2k6IEBqaGl0Y2hjb2NrCiAqIENvbmZpZ3VyYXRpb24K
ICAgKiBBcGFjaGUyOiBAc3RrcndvcmsKCiMjIEhvdyB0byBqb2luIHRoZSBj
b3JlIHRlYW0KCkhlcmUgYXJlIHRoZSByZXF1aXJlbWVudHMgdG8gYmVjb21l
IGEgY29yZSB0ZWFtIG1lbWJlcjoKLSByYW5rIHdpdGhpbiB0b3AgNTAgaW4g
aHR0cHM6Ly9naXRodWIuY29tL3N3YWdnZXItYXBpL3N3YWdnZXItY29kZWdl
bi9ncmFwaHMvY29udHJpYnV0b3JzCiAgLSB0byBjb250cmlidXRlLCBoZXJl
IGFyZSBzb21lIGdvb2QgW3N0YXJ0aW5nIHBvaW50c10oaHR0cHM6Ly9naXRo
dWIuY29tL3N3YWdnZXItYXBpL3N3YWdnZXItY29kZWdlbi9pc3N1ZXM/cT1p
cyUzQW9wZW4raXMlM0Fpc3N1ZStsYWJlbCUzQSUyMmhlbHArd2FudGVkJTIy
KQotIHJlZ3VsYXIgY29udHJpYnV0aW9ucyB0byB0aGUgcHJvamVjdAogIC0g
YWJvdXQgMyBob3VycyBwZXIgd2VlawogIC0gZm9yIGNvbnRyaWJ1dGlvbiwg
aXQgY2FuIGJlIGFkZHJlc3NpbmcgaXNzdWVzLCByZXZpZXdpbmcgUFJzIHN1
Ym1pdHRlZCBieSBvdGhlcnMsIHN1Ym1pdHRpbmcgUFIgdG8gZml4IGJ1Z3Mg
b3IgbWFrZSBlbmhhbmNlbWVudHMsIGV0YwoKIFRvIGJlY29tZSBhIFRlbXBs
YXRlIENyZWF0b3IsIHNpbXBseSBzdWJtaXQgYSBQUiBmb3IgbmV3IEFQSSBj
bGllbnQgKGUuZy4gUnVzdCwgRWxpeGlyKSBvciBzZXJ2ZXIgc3R1YiAoZS5n
LiBSdWJ5IEdyYXBlKSBnZW5lcmF0b3IuCgojIFN3YWdnZXIgQ29kZWdlbiBU
ZWNobmljYWwgQ29tbWl0dGVlCgpNZW1iZXJzIG9mIHRoZSBTd2FnZ2VyIENv
ZGVnZW4gdGVjaG5pY2FsIGNvbW1pdHRlZSBzaG91bGRlciB0aGUgZm9sbG93
aW5nIHJlc3BvbnNpYmlsaXRpZXM6CgotIFByb3ZpZGVzIGd1aWRhbmNlIGFu
ZCBkaXJlY3Rpb24gdG8gb3RoZXIgdXNlcnMKLSBSZXZpZXdzIHB1bGwgcmVx
dWVzdHMgYW5kIGlzc3VlcwotIEltcHJvdmVzIHRoZSBnZW5lcmF0b3IgYnkg
bWFraW5nIGVuaGFuY2VtZW50cywgZml4aW5nIGJ1Z3Mgb3IgdXBkYXRpbmcg
ZG9jdW1lbnRhdGlvbnMKLSBTZXRzIHRoZSB0ZWNobmljYWwgZGlyZWN0aW9u
IG9mIHRoZSBnZW5lcmF0b3IKCldobyBpcyBlbGlnaWJsZT8gVGhvc2Ugd2hv
IHdhbnQgdG8gam9pbiBtdXN0IGhhdmUgYXQgbGVhc3QgMyBQUnMgbWVyZ2Vk
IGludG8gYSBnZW5lcmF0b3IuIChFeGNlcHRpb25zIGNhbiBiZSBncmFudGVk
IHRvIHRlbXBsYXRlIGNyZWF0b3JzIG9yIGNvbnRyaWJ1dG9ycyB3aG8gaGF2
ZSBtYWRlIGEgbG90IG9mIGNvZGUgY2hhbmdlcyB3aXRoIGxlc3MgdGhhbiAz
IG1lcmdlZCBQUnMpCgojIyBNZW1iZXJzIG9mIFRlY2huaWNhbCBDb21taXR0
ZWUKCnwgTGFuZ3VhZ2VzICAgICB8IE1lbWJlciAoam9pbiBkYXRlKSB8Cnw6
LS0tLS0tLS0tLS0tLXw6LS0tLS0tLS0tLS0tLXwKfCBBY3Rpb25TY3JpcHQg
fCAgICAgIHwKfCBBZGEgfCBAc3RjYXJyZXogKDIwMTgvMDIpIHwKfCBBbmRy
b2lkIHwgIHwKfCBBcGV4ICB8ICAgICB8CnwgQmFzaCAgfCBAa2Vuam9uZXMt
Y2lzY28gKDIwMTcvMDkpIHwKfCBDKysgICAgICB8IEBmdmFyb3NlICgyMDE3
LzExKSB8CnwgQyMgICAgICAgIHwgQG1hbmRyZWFuICgyMDE3LzA4KSB8Cnwg
Q2xvanVyZSAgIHwgIHwKfCBEYXJ0ICAgICAgfCBAaXJjZWNobyAoMjAxNy8w
NykgfAp8IEVpZmZlbCAgICB8IHwKfCBFbGl4aXIgICAgfCAgfAp8IEVsbSAg
ICAgICB8ICB8CnwgRXJsYW5nICAgIHwgfAp8IEdyb292eSAgICB8ICB8Cnwg
R28gICAgICAgIHwgfAp8IEhhc2tlbGwgICB8IHwKfCBKYXZhICAgICAgfCB8
CnwgS290bGluICAgICB8IHwKfCBMdWEgICAgIHwgfAp8IE5vZGVKUy9KYXZh
c2NyaXB0IHwgQENvZGVOaW5qYWkgKDIwMTcvMDcpIHwKfCBPYmpDICAgICAg
fCAgfAp8IFBlcmwgICAgICB8IHwKfCBQSFAgICAgICB8IEBka2FybG92aSAo
MjAxNy8wNykgQG1hbmRyZWFuICgyMDE3LzA4KSB8CnwgUHl0aG9uICAgfCBA
a2Vuam9uZXMtY2lzY28gKDIwMTcvMTEpfAp8IFIgICAgICAgIHwgIHwKfCBS
dWJ5ICAgICAgfCBAemx4ICgyMDE3LzA5KSB8CnwgUnVzdCAgICAgIHwgfAp8
IFNjYWxhICAgICB8IHwKfCBTd2lmdCAgICAgfCBAZWh5Y2hlICgyMDE3LzA4
KSB8CnwgVHlwZVNjcmlwdCB8IHwKCiMgU2VjdXJpdHkgY29udGFjdAoKUGxl
YXNlIGRpc2Nsb3NlIGFueSBzZWN1cml0eS1yZWxhdGVkIGlzc3VlcyBvciB2
dWxuZXJhYmlsaXRpZXMgYnkgZW1haWxpbmcgW3NlY3VyaXR5QHN3YWdnZXIu
aW9dKG1haWx0bzpzZWN1cml0eUBzd2FnZ2VyLmlvKSwgaW5zdGVhZCBvZiB1
c2luZyB0aGUgcHVibGljIGlzc3VlIHRyYWNrZXIuCgojIExpY2Vuc2UgaW5m
b3JtYXRpb24gb24gR2VuZXJhdGVkIENvZGUKClRoZSBTd2FnZ2VyIENvZGVn
ZW4gcHJvamVjdCBpcyBpbnRlbmRlZCBhcyBhIGJlbmVmaXQgZm9yIHVzZXJz
IG9mIHRoZSBTd2FnZ2VyIC8gT3BlbiBBUEkgU3BlY2lmaWNhdGlvbi4gIFRo
ZSBwcm9qZWN0IGl0c2VsZiBoYXMgdGhlIFtMaWNlbnNlXSgjbGljZW5zZSkg
YXMgc3BlY2lmaWVkLiAgSW4gYWRkaXRpb24sIHBsZWFzZSB1bmRlcnN0YW5k
IHRoZSBmb2xsb3dpbmcgcG9pbnRzOgoKKiBUaGUgdGVtcGxhdGVzIGluY2x1
ZGVkIHdpdGggdGhpcyBwcm9qZWN0IGFyZSBzdWJqZWN0IHRvIHRoZSBbTGlj
ZW5zZV0oI2xpY2Vuc2UpLgoqIEdlbmVyYXRlZCBjb2RlIGlzIGludGVudGlv
bmFsbHkgX25vdF8gc3ViamVjdCB0byB0aGUgcGFyZW50IHByb2plY3QgbGlj
ZW5zZQoKV2hlbiBjb2RlIGlzIGdlbmVyYXRlZCBmcm9tIHRoaXMgcHJvamVj
dCwgaXQgc2hhbGwgYmUgY29uc2lkZXJlZCAqKkFTIElTKiogYW5kIG93bmVk
IGJ5IHRoZSB1c2VyIG9mIHRoZSBzb2Z0d2FyZS4gIFRoZXJlIGFyZSBubyB3
YXJyYW50aWVzLS1leHByZXNzZWQgb3IgaW1wbGllZC0tZm9yIGdlbmVyYXRl
ZCBjb2RlLiAgWW91IGNhbiBkbyB3aGF0IHlvdSB3aXNoIHdpdGggaXQsIGFu
ZCBvbmNlIGdlbmVyYXRlZCwgdGhlIGNvZGUgaXMgeW91ciByZXNwb25zaWJp
bGl0eSBhbmQgc3ViamVjdCB0byB0aGUgbGljZW5zaW5nIHRlcm1zIHRoYXQg
eW91IGRlZW0gYXBwcm9wcmlhdGUuCgojIExpY2Vuc2UKCmBgYApDb3B5cmln
aHQgMjAxOSBTbWFydEJlYXIgU29mdHdhcmUKCkxpY2Vuc2VkIHVuZGVyIHRo
ZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIp
Owp5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlh
bmNlIHdpdGggdGhlIExpY2Vuc2UuCllvdSBtYXkgb2J0YWluIGEgY29weSBv
ZiB0aGUgTGljZW5zZSBhdCBbYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNF
LTIuMF0oaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0Ut
Mi4wKQoKVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFn
cmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQpkaXN0cmlidXRlZCB1bmRl
ciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJB
U0lTLApXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkg
S0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KU2VlIHRoZSBMaWNl
bnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1p
c3Npb25zIGFuZApsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KYGBg
Cg==
",,"c3VkbzogcmVxdWlyZWQKbGFuZ3VhZ2U6IGphdmEKZGlzdDogdHJ1c3R5Cmpk
azoKICAtIG9wZW5qZGs4CgpjYWNoZToKICBkaXJlY3RvcmllczoKICAtICRI
T01FLy5tMgogIC0gJEhPTUUvLml2eTIKICAtICRIT01FLy5ncmFkbGUvY2Fj
aGVzLwogIC0gJEhPTUUvLmdyYWRsZS93cmFwcGVyLwogIC0gJEhPTUUvc2Ft
cGxlcy9jbGllbnQvcGV0c3RvcmUvcGhwL1N3YWdnZXJDbGllbnQtcGhwL3Zl
bmRvcgogIC0gJEhPTUUvc2FtcGxlcy9jbGllbnQvcGV0c3RvcmUvcnVieS92
ZW5vZHIvYnVuZGxlCiAgLSAkSE9NRS9zYW1wbGVzL2NsaWVudC9wZXRzdG9y
ZS9weXRob24vLnZlbnYvCiAgLSAkSE9NRS9zYW1wbGVzL2NsaWVudC9wZXRz
dG9yZS90eXBlc2NyaXB0LW5vZGUvbnBtL25vZGVfbW9kdWxlcwogIC0gJEhP
TUUvc2FtcGxlcy9jbGllbnQvcGV0c3RvcmUvdHlwZXNjcmlwdC1ub2RlL25w
bS90eXBpbmdzLwogIC0gJEhPTUUvc2FtcGxlcy9jbGllbnQvcGV0c3RvcmUv
dHlwZXNjcmlwdC1mZXRjaC90ZXN0cy9kZWZhdWx0L25vZGVfbW9kdWxlcwog
IC0gJEhPTUUvc2FtcGxlcy9jbGllbnQvcGV0c3RvcmUvdHlwZXNjcmlwdC1m
ZXRjaC90ZXN0cy9kZWZhdWx0L3R5cGluZ3MKICAtICRIT01FL3NhbXBsZXMv
Y2xpZW50L3BldHN0b3JlL3R5cGVzY3JpcHQtZmV0Y2gvYnVpbGRzL2RlZmF1
bHQvbm9kZV9tb2R1bGVzCiAgLSAkSE9NRS9zYW1wbGVzL2NsaWVudC9wZXRz
dG9yZS90eXBlc2NyaXB0LWZldGNoL2J1aWxkcy9kZWZhdWx0L3R5cGluZ3MK
ICAtICRIT01FL3NhbXBsZXMvY2xpZW50L3BldHN0b3JlL3R5cGVzY3JpcHQt
ZmV0Y2gvYnVpbGRzL2VzNi10YXJnZXQvbm9kZV9tb2R1bGVzCiAgLSAkSE9N
RS9zYW1wbGVzL2NsaWVudC9wZXRzdG9yZS90eXBlc2NyaXB0LWZldGNoL2J1
aWxkcy9lczYtdGFyZ2V0L3R5cGluZ3MKICAtICRIT01FL3NhbXBsZXMvY2xp
ZW50L3BldHN0b3JlL3R5cGVzY3JpcHQtZmV0Y2gvYnVpbGRzL3dpdGgtbnBt
LXZlcnNpb24vbm9kZV9tb2R1bGVzCiAgLSAkSE9NRS9zYW1wbGVzL2NsaWVu
dC9wZXRzdG9yZS90eXBlc2NyaXB0LWZldGNoL25wbS93aXRoLW5wbS12ZXJz
aW9uL3R5cGluZ3MKICAtICRIT01FL3NhbXBsZXMvY2xpZW50L3BldHN0b3Jl
L3R5cGVzY3JpcHQtYW5ndWxhci9ub2RlX21vZHVsZXMKICAtICRIT01FL3Nh
bXBsZXMvY2xpZW50L3BldHN0b3JlL3R5cGVzY3JpcHQtYW5ndWxhci90eXBp
bmdzCgpzZXJ2aWNlczoKICAtIGRvY2tlcgoKIyBjb21tZW50IG91dCB0aGUg
aG9zdCB0YWJsZSBjaGFuZ2UgdG8gdXNlIHRoZSBwdWJsaWMgcGV0c3RvcmUg
c2VydmVyCmFkZG9uczoKICBob3N0czoKICAgIC0gcGV0c3RvcmUuc3dhZ2dl
ci5pbwoKYmVmb3JlX2luc3RhbGw6CiAgIyByZXF1aXJlZCB3aGVuIHN1ZG86
IHJlcXVpcmVkIGZvciB0aGUgUnVieSBwZXRzdG9yZSB0ZXN0cwogIC0gZ2Vt
IGluc3RhbGwgYnVuZGxlciAtdiAnPCAyJwogIC0gZ2VtIHVwZGF0ZSAtLXN5
c3RlbSAyLjcuOAogIC0gZ2VtIC0tdmVyc2lvbgogIC0gbnBtIGluc3RhbGwg
LWcgdHlwZXNjcmlwdAogIC0gbnBtIGluc3RhbGwgLWcgbnBtCiAgLSBucG0g
Y29uZmlnIHNldCByZWdpc3RyeSBodHRwOi8vcmVnaXN0cnkubnBtanMub3Jn
LwogICMgc2V0IHB5dGhvbiAzLjYuMyBhcyBkZWZhdWx0CiAgLSBzb3VyY2Ug
fi92aXJ0dWFsZW52L3B5dGhvbjMuNi9iaW4vYWN0aXZhdGUKICAjIHRvIHJ1
biBwZXRzdG9yZSBzZXJ2ZXIgbG9jYWxseSB2aWEgZG9ja2VyCiAgLSBkb2Nr
ZXIgcHVsbCBzd2FnZ2VyYXBpL3BldHN0b3JlCiAgLSBkb2NrZXIgcnVuIC1k
IC1lIFNXQUdHRVJfSE9TVD1odHRwOi8vcGV0c3RvcmUuc3dhZ2dlci5pbyAt
ZSBTV0FHR0VSX0JBU0VfUEFUSD0vdjIgLXAgODA6ODA4MCBzd2FnZ2VyYXBp
L3BldHN0b3JlCiAgLSBkb2NrZXIgcHMgLWEKICAjIEFkZCBiYXRzIHRlc3Qg
ZnJhbWV3b3JrIGFuZCBjVVJMIGZvciBCYXNoIHNjcmlwdCBpbnRlZ3JhdGlv
biB0ZXN0cwogIC0gc3VkbyBhZGQtYXB0LXJlcG9zaXRvcnkgcHBhOmR1Z2dh
bi9iYXRzIC0teWVzCiAgLSBzdWRvIGFwdC1nZXQgdXBkYXRlIC1xcQogIC0g
c3VkbyBhcHQtZ2V0IGluc3RhbGwgLXFxIGJhdHMKICAtIHN1ZG8gYXB0LWdl
dCBpbnN0YWxsIC1xcSBjdXJsCiAgIyBjb21tZW50IG91dCBiZWxvdyBhcyBp
bnN0YWxsYXRpb24gZmFpbGVkIGluIHRyYXZpcwogICMgQWRkIHJlYmFyMyBi
dWlsZCB0b29sIGFuZCByZWNlbnQgRXJsYW5nL09UUCBmb3IgRXJsYW5nIHBl
dHN0b3JlIHNlcnZlciB0ZXN0cy4KICAjIC0gVHJhdmlzIENJIGRvZXMgbm90
IHN1cHBvcnQgcmViYXIzIFt5ZXRdKGh0dHBzOi8vZ2l0aHViLmNvbS90cmF2
aXMtY2kvdHJhdmlzLWNpL2lzc3Vlcy82NTA2I2lzc3VlY29tbWVudC0yNzUx
ODk0OTApLgogICMgLSBSZWx5IG9uIGBrZXJsYCBmb3IgW3ByZS1jb21waWxl
ZCB2ZXJzaW9ucyBhdmFpbGFibGVdKGh0dHBzOi8vZG9jcy50cmF2aXMtY2ku
Y29tL3VzZXIvbGFuZ3VhZ2VzL2VybGFuZyNDaG9vc2luZy1PVFAtcmVsZWFz
ZXMtdG8tdGVzdC1hZ2FpbnN0KS4gUmVseSBvbiBpbnN0YWxsYXRpb24gcGF0
aCBjaG9zZW4gYnkgW2B0cmF2aXMtZXJsYW5nLWJ1aWxkZXJgXShodHRwczov
L2dpdGh1Yi5jb20vdHJhdmlzLWNpL3RyYXZpcy1lcmxhbmctYnVpbGRlci9i
bG9iL2U2ZDAxNmIxYTkxY2E3ZWNhYzVhNWE0NjM5NWJkZTkxN2VhMTNkMzYv
YmluL2NvbXBpbGUjTDE4KS4KICAjIC0gLiB+L290cC8xOC4yLjEvYWN0aXZh
dGUgJiYgZXJsIC12ZXJzaW9uCiAgIy0gY3VybCAtZiAtTCAtbyAuL3JlYmFy
MyBodHRwczovL3MzLmFtYXpvbmF3cy5jb20vcmViYXIzL3JlYmFyMyAmJiBj
aG1vZCAreCAuL3JlYmFyMyAmJiAuL3JlYmFyMyB2ZXJzaW9uICYmIGV4cG9y
dCBQQVRIPSIke1RSQVZJU19CVUlMRF9ESVJ9OiRQQVRIIgoKICAjIHNob3cg
aG9zdCB0YWJsZSB0byBjb25maXJtIHBldHN0b3JlLnN3YWdnZXIuaW8gaXMg
bWFwcGVkIHRvIGxvY2FsaG9zdAogIC0gY2F0IC9ldGMvaG9zdHMKICAjIHNo
b3cgamF2YSB2ZXJzaW9uCiAgLSBqYXZhIC12ZXJzaW9uCgppbnN0YWxsOgog
ICMgQWRkIEdvZGVwcyBkZXBlbmRlbmNpZXMgdG8gR09QQVRIIGFuZCBQQVRI
CiAgLSBldmFsICIkKGN1cmwgLXNMIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJj
b250ZW50LmNvbS90cmF2aXMtY2kvZ2ltbWUvbWFzdGVyL2dpbW1lIHwgR0lN
TUVfR09fVkVSU0lPTj0xLjQgYmFzaCkiCiAgLSBleHBvcnQgR09QQVRIPSIk
e1RSQVZJU19CVUlMRF9ESVJ9L0dvZGVwcy9fd29ya3NwYWNlIgogIC0gZXhw
b3J0IFBBVEg9IiR7VFJBVklTX0JVSUxEX0RJUn0vR29kZXBzL193b3Jrc3Bh
Y2UvYmluOiRQQVRIIgoKc2NyaXB0OgogICMgZmFpbCBmYXN0CiAgLSBzZXQg
LWUKICAjIGZhaWwgaWYgdGVtcGxhdGVzL2dlbmVyYXRvcnMgY29udGFpbiBj
YXJyaWFnZSByZXR1cm4gJ1xyJwogIC0gL2Jpbi9iYXNoIC4vYmluL3V0aWxz
L2RldGVjdF9jYXJyaWFnZV9yZXR1cm4uc2gKICAjIGZhaWwgaWYgZ2VuZXJh
dG9ycyBjb250YWluIG1lcmdlIGNvbmZsaWN0cwogIC0gL2Jpbi9iYXNoIC4v
YmluL3V0aWxzL2RldGVjdF9tZXJnZV9jb25mbGljdC5zaAogICMgZmFpbCBp
ZiBnZW5lcmF0b3JzIGNvbnRhaW4gdGFiICdcdCcKICAtIC9iaW4vYmFzaCAu
L2Jpbi91dGlscy9kZXRlY3RfdGFiX2luX2phdmFfY2xhc3Muc2gKICAjIHJ1
biBpbnRlZ3JhdGlvbiB0ZXN0cyBkZWZpbmVkIGluIG1hdmVuIHBvbS54bWwK
ICAtIG12biBjbGVhbiBpbnN0YWxsCiAgLSBtdm4gLXEgLS1iYXRjaC1tb2Rl
IHZlcmlmeSAtUHNhbXBsZXMKICAjIEJlbG93IGhhcyBiZWVuIG1vdmVkIHRv
IENpcmNsZUNJCiAgIyBkb2NrZXI6IGJ1aWxkIGdlbmVyYXRvciBpbWFnZSBh
bmQgcHVzaCB0byBEb2NrZXIgSHViCiAgIy0gaWYgWyAkRE9DS0VSX0hVQl9V
U0VSTkFNRSBdOyB0aGVuIGRvY2tlciBsb2dpbiAtLWVtYWlsPSRET0NLRVJf
SFVCX0VNQUlMIC0tdXNlcm5hbWU9JERPQ0tFUl9IVUJfVVNFUk5BTUUgLS1w
YXNzd29yZD0kRE9DS0VSX0hVQl9QQVNTV09SRCAmJiBkb2NrZXIgYnVpbGQg
LXQgJERPQ0tFUl9HRU5FUkFUT1JfSU1BR0VfTkFNRSAuL21vZHVsZXMvc3dh
Z2dlci1nZW5lcmF0b3IgJiYgaWYgWyAhIC16ICIkVFJBVklTX1RBRyIgXTsg
dGhlbiBkb2NrZXIgdGFnICRET0NLRVJfR0VORVJBVE9SX0lNQUdFX05BTUU6
bGF0ZXN0ICRET0NLRVJfR0VORVJBVE9SX0lNQUdFX05BTUU6JFRSQVZJU19U
QUc7IGZpICYmIGlmIFsgISAteiAiJFRSQVZJU19UQUciIF0gfHwgWyAiJFRS
QVZJU19CUkFOQ0giID0gIm1hc3RlciIgXTsgdGhlbiBkb2NrZXIgcHVzaCAk
RE9DS0VSX0dFTkVSQVRPUl9JTUFHRV9OQU1FOyBmaTsgZmkKICAjIyBkb2Nr
ZXI6IGJ1aWxkIGNsaSBpbWFnZSBhbmQgcHVzaCB0byBEb2NrZXIgSHViCiAg
Iy0gaWYgWyAkRE9DS0VSX0hVQl9VU0VSTkFNRSBdOyB0aGVuIGRvY2tlciBs
b2dpbiAtLWVtYWlsPSRET0NLRVJfSFVCX0VNQUlMIC0tdXNlcm5hbWU9JERP
Q0tFUl9IVUJfVVNFUk5BTUUgLS1wYXNzd29yZD0kRE9DS0VSX0hVQl9QQVNT
V09SRCAmJiBkb2NrZXIgYnVpbGQgLXQgJERPQ0tFUl9DT0RFR0VOX0NMSV9J
TUFHRV9OQU1FIC4vbW9kdWxlcy9zd2FnZ2VyLWNvZGVnZW4tY2xpICYmIGlm
IFsgISAteiAiJFRSQVZJU19UQUciIF07IHRoZW4gZG9ja2VyIHRhZyAkRE9D
S0VSX0NPREVHRU5fQ0xJX0lNQUdFX05BTUU6bGF0ZXN0ICRET0NLRVJfQ09E
RUdFTl9DTElfSU1BR0VfTkFNRTokVFJBVklTX1RBRzsgZmkgJiYgaWYgWyAh
IC16ICIkVFJBVklTX1RBRyIgXSB8fCBbICIkVFJBVklTX0JSQU5DSCIgPSAi
bWFzdGVyIiBdOyB0aGVuIGRvY2tlciBwdXNoICRET0NLRVJfQ09ERUdFTl9D
TElfSU1BR0VfTkFNRTsgZmk7IGZpCgphZnRlcl9zdWNjZXNzOgogICMgcHVz
aCBhIHNuYXBzaG90IHZlcnNpb24gdG8gbWF2ZW4gcmVwbwogICMtIGlmIFsg
JFNPTkFUWVBFX1VTRVJOQU1FIF0gJiYgWyAteiAkVFJBVklTX1RBRyBdICYm
IFsgIiRUUkFWSVNfQlJBTkNIIiA9ICJtYXN0ZXIiIF07IHRoZW4KICAjICAg
IG12biBjbGVhbiBkZXBsb3kgLS1zZXR0aW5ncyAudHJhdmlzL3NldHRpbmdz
LnhtbDsKICAjICAgIGVjaG8gIkZpbmlzaGVkIG12biBjbGVhbiBkZXBsb3kg
Zm9yICRUUkFWSVNfQlJBTkNIIjsKICAjICBmaTsKCmVudjoKICAtIERPQ0tF
Ul9HRU5FUkFUT1JfSU1BR0VfTkFNRT1zd2FnZ2VyYXBpL3N3YWdnZXItZ2Vu
ZXJhdG9yIERPQ0tFUl9DT0RFR0VOX0NMSV9JTUFHRV9OQU1FPXN3YWdnZXJh
cGkvc3dhZ2dlci1jb2RlZ2VuLWNsaQo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'awesome-dotnet',21894635,"b'A collection of awesome .NET libraries, tools, frameworks and software'",,38,10433,,10433,False,b'https://api.github.com/repos/quozd/awesome-dotnet/forks',"IyBBd2Vzb21lIC5ORVQhCgpbIVtBd2Vzb21lXShodHRwczovL2Nkbi5yYXdn
aXQuY29tL3NpbmRyZXNvcmh1cy9hd2Vzb21lL2Q3MzA1ZjM4ZDI5ZmVkNzhm
YTg1NjUyZTNhNjNlMTU0ZGQ4ZTg4MjkvbWVkaWEvYmFkZ2Uuc3ZnKV0oaHR0
cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9hd2Vzb21lKQpbIVtCdWls
ZCBTdGF0dXNdKGh0dHBzOi8vYXBpLnRyYXZpcy1jaS5vcmcvcXVvemQvYXdl
c29tZS1kb3RuZXQuc3ZnKV0oaHR0cHM6Ly90cmF2aXMtY2kub3JnL3F1b3pk
L2F3ZXNvbWUtZG90bmV0KQpbIVtKb2luIHRoZSBjaGF0IGF0IGh0dHBzOi8v
Z2l0dGVyLmltL3F1b3pkL2F3ZXNvbWUtZG90bmV0XShodHRwczovL2JhZGdl
cy5naXR0ZXIuaW0vSm9pbiUyMENoYXQuc3ZnKV0oaHR0cHM6Ly9naXR0ZXIu
aW0vcXVvemQvYXdlc29tZS1kb3RuZXQ/dXRtX3NvdXJjZT1iYWRnZSZ1dG1f
bWVkaXVtPWJhZGdlJnV0bV9jYW1wYWlnbj1wci1iYWRnZSZ1dG1fY29udGVu
dD1iYWRnZSkKCkEgY29sbGVjdGlvbiBvZiBhd2Vzb21lIC5ORVQgbGlicmFy
aWVzLCB0b29scywgZnJhbWV3b3JrcywgYW5kIHNvZnR3YXJlLgoKSW5zcGly
ZWQgYnkgW2F3ZXNvbWUtcnVieV0oaHR0cHM6Ly9naXRodWIuY29tL21hcmtl
dHMvYXdlc29tZS1ydWJ5KSwgW2F3ZXNvbWUtcGhwXShodHRwczovL2dpdGh1
Yi5jb20vemlhZG96L2F3ZXNvbWUtcGhwKSwgW2F3ZXNvbWUtcHl0aG9uXSho
dHRwczovL2dpdGh1Yi5jb20vdmludGEvYXdlc29tZS1weXRob24pLCBbZnJv
bnRlbmQtZGV2LWJvb2ttYXJrc10oaHR0cHM6Ly9naXRodWIuY29tL2R5cHNp
bG9uL2Zyb250ZW5kLWRldi1ib29rbWFya3MpIGFuZCBbcnVieS1ib29rbWFy
a3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9kcmVpa2FudGVyL3J1YnktYm9va21h
cmtzKS4KCkNvbnRyaWJ1dGlvbnMgYXJlIGFsd2F5cyB3ZWxjb21lISBQbGVh
c2UgdGFrZSBhIGxvb2sgYXQgdGhlIFtjb250cmlidXRpb24gZ3VpZGVsaW5l
cyBhbmQgcXVhbGl0eSBzdGFuZGFyZF0oaHR0cHM6Ly9naXRodWIuY29tL3F1
b3pkL2F3ZXNvbWUtZG90bmV0L2Jsb2IvbWFzdGVyL0NPTlRSSUJVVElORy5t
ZCkgcGFnZXMgZmlyc3QuIFdlIGFjY2VwdCBwcm9wcmlldGFyeSBhbmQgY29t
bWVyY2lhbCBzb2Z0d2FyZSB0b28uCgpUaGFua3MgdG8gYWxsIFtjb250cmli
dXRvcnNdKGh0dHBzOi8vZ2l0aHViLmNvbS9xdW96ZC9hd2Vzb21lLWRvdG5l
dC9ncmFwaHMvY29udHJpYnV0b3JzKSwgeW91J3JlIGF3ZXNvbWUgYW5kIHdv
dWxkbid0IGJlIHBvc3NpYmxlIHdpdGhvdXQgeW91ISBUaGUgZ29hbCBpcyB0
byBidWlsZCBhIGNhdGVnb3JpemVkIGNvbW11bml0eS1kcml2ZW4gY29sbGVj
dGlvbiBvZiB2ZXJ5IHdlbGwta25vd24gcmVzb3VyY2VzLgoKIyBMaWNlbnNl
CgpbIVtDQzBdKGh0dHBzOi8vbGljZW5zZWJ1dHRvbnMubmV0L3AvemVyby8x
LjAvODh4MzEucG5nKV0oaHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL3B1
YmxpY2RvbWFpbi96ZXJvLzEuMC8pCgpUbyB0aGUgZXh0ZW50IHBvc3NpYmxl
IHVuZGVyIGxhdywgW1ZpdGFsaSBGb2tpbl0oaHR0cHM6Ly9naXRodWIuY29t
L3F1b3pkKSBoYXMgd2FpdmVkIGFsbCBjb3B5cmlnaHQgYW5kIHJlbGF0ZWQg
b3IgbmVpZ2hib3JpbmcgcmlnaHRzIHRvIHRoaXMgd29yay4KCiMgVGFibGUg
b2YgQ29udGVudHMKCiogW0F3ZXNvbWUgRG90TmV0XSgjYXdlc29tZS1kb3Ru
ZXQpCiAgKiBbQWxnb3JpdGhtcyBhbmQgRGF0YSBTdHJ1Y3R1cmVzXSgjYWxn
b3JpdGhtcy1hbmQtZGF0YS1zdHJ1Y3R1cmVzKQogICogW0FQSV0oI2FwaSkK
ICAqIFtBcHBsaWNhdGlvbiBGcmFtZXdvcmtzXSgjYXBwbGljYXRpb24tZnJh
bWV3b3JrcykKICAqIFtBcHBsaWNhdGlvbiBUZW1wbGF0ZXNdKCNhcHBsaWNh
dGlvbi10ZW1wbGF0ZXMpCiAgKiBbQXJ0aWZpY2lhbCBJbnRlbGxpZ2VuY2Vd
KCNhcnRpZmljaWFsLWludGVsbGlnZW5jZSkKICAqIFtBc3NlbWJseSBNYW5p
cHVsYXRpb25dKCNhc3NlbWJseS1tYW5pcHVsYXRpb24pCiAgKiBbQXNzZXRz
XSgjYXNzZXRzKQogICogW0F1dGhlbnRpY2F0aW9uIGFuZCBBdXRob3JpemF0
aW9uXSgjYXV0aGVudGljYXRpb24tYW5kLWF1dGhvcml6YXRpb24pCiAgKiBb
Qm9va3NdKCNib29rcykKICAqIFtCdWlsZCBBdXRvbWF0aW9uXSgjYnVpbGQt
YXV0b21hdGlvbikKICAqIFtCdXNpbmVzcyBJbnRlbGxpZ2VuY2UgYW5kIFJl
cG9ydGluZ10oI2J1c2luZXNzLWludGVsbGlnZW5jZSkKICAqIFtDYWNoaW5n
XSgjY2FjaGluZykKICAqIFtDTEldKCNjbGkpCiAgKiBbQ0xSXSgjY2xyKQog
ICogW0NNU10oI2NtcykKICAqIFtDb2RlIEFuYWx5c2lzIGFuZCBNZXRyaWNz
XSgjY29kZS1hbmFseXNpcy1hbmQtbWV0cmljcykKICAqIFtDb2RlIFNuaXBw
ZXRzXSgjY29kZS1zbmlwcGV0cykKICAqIFtDb21waWxlcnMsIFRyYW5zcGls
ZXJzIGFuZCBMYW5ndWFnZXNdKCNjb21waWxlcnMtdHJhbnNwaWxlcnMtYW5k
LWxhbmd1YWdlcykKICAqIFtDb21wcmVzc2lvbl0oI2NvbXByZXNzaW9uKQog
ICogW0NvbnRpbnVvdXMgSW50ZWdyYXRpb25dKCNjb250aW51b3VzLWludGVn
cmF0aW9uKQogICogW0NyeXB0b2dyYXBoeV0oI2NyeXB0b2dyYXBoeSkKICAq
IFtEYXRhYmFzZV0oI2RhdGFiYXNlKQogICogW0RhdGFiYXNlIERyaXZlcnNd
KCNkYXRhYmFzZS1kcml2ZXJzKQogICogW0RhdGVUaW1lXSgjZGF0ZXRpbWUp
CiAgKiBbRGVjb21waWxhdGlvbl0oI2RlY29tcGlsYXRpb24pCiAgKiBbRGVw
bG95bWVudF0oI2RlcGxveW1lbnQpCiAgKiBbRGlyZWN0WF0oI2RpcmVjdHgp
CiAgKiBbRGlzdHJpYnV0ZWQgQ29tcHV0aW5nXSgjZGlzdHJpYnV0ZWQtY29t
cHV0aW5nKQogICogW0RMUl0oI2RscikKICAqIFtEb2N1bWVudGF0aW9uXSgj
ZG9jdW1lbnRhdGlvbikKICAqIFtFLUNvbW1lcmNlIGFuZCBQYXltZW50c10o
I2UtY29tbWVyY2UtYW5kLXBheW1lbnRzKQogICogW0Vudmlyb25tZW50IE1h
bmFnZW1lbnRdKCNlbnZpcm9ubWVudC1tYW5hZ2VtZW50KQogICogW0VUTF0o
I2V0bCkKICAqIFtFdmVudCBhZ2dyZWdhdG9yIGFuZCBtZXNzZW5nZXJdKCNl
dmVudC1hZ2dyZWdhdG9yLWFuZC1tZXNzZW5nZXIpCiAgKiBbRXhjZXB0aW9u
c10oI2V4Y2VwdGlvbnMpCiAgKiBbRXh0ZW5zaW9ucyBsaWJyYWlyaWVzXSgj
ZXh0ZW5zaW9ucykKICAqIFtGdW5jdGlvbmFsIHByb2dyYW1taW5nXSgjZnVu
Y3Rpb25hbC1wcm9ncmFtbWluZykKICAqIFtHYW1lXSgjZ2FtZSkKICAqIFtH
SVNdKCNnaXMpCiAgKiBbR2l0IFRvb2xzXSgjZ2l0LXRvb2xzKQogICogW0dy
YXBoaWNzXSgjZ3JhcGhpY3MpCiAgKiBbR1VJXSgjZ3VpKQogICogW0hUTUwg
YW5kIENTU10oI2h0bWwtYW5kLWNzcykKICAqIFtIVFRQXSgjaHR0cCkKICAq
IFtJREVdKCNpZGUpCiAgKiBbSW1hZ2UgUHJvY2Vzc2luZ10oI2ltYWdlLXBy
b2Nlc3NpbmcpCiAgKiBbSW5zdGFsbCBUb29sc10oI2luc3RhbGwtdG9vbHMp
CiAgKiBbSW50ZXJuYXRpb25hbGl6YXRpb25dKCNpbnRlcm5hdGlvbmFsaXph
dGlvbikKICAqIFtJbnRlcm9wZXJhYmlsaXR5XSgjaW50ZXJvcGVyYWJpbGl0
eSkKICAqIFtJb0NdKCNpb2MpCiAgKiBbSmF2YVNjcmlwdCBFbmdpbmVzXSgj
amF2YXNjcmlwdC1lbmdpbmVzKQogICogW0xvZ2dpbmddKCNsb2dnaW5nKQog
ICogW01haWxdKCNtYWlsKQogICogW01hY2hpbmUgTGVhcm5pbmcgYW5kIERh
dGEgU2NpZW5jZV0oI21hY2hpbmUtbGVhcm5pbmctYW5kLWRhdGEtc2NpZW5j
ZSkKICAqIFtNYXJrZG93biBQcm9jZXNzb3JzXSgjbWFya2Rvd24tcHJvY2Vz
c29ycykKICAqIFtNYXRoZW1hdGljc10oI21hdGhlbWF0aWNzKQogICogW01l
ZGlhXSgjbWVkaWEpCiAgKiBbTWV0cmljc10oI21ldHJpY3MpCiAgKiBbTWlj
cm8gRnJhbWV3b3JrXSgjbWljcm8tZnJhbWV3b3JrKQogICogW01pbmlmaWNh
dGlvbl0oI21pbmlmaWNhdGlvbikKICAqIFtNaXNjXSgjbWlzYykKICAqIFtN
VlZNXSgjbXZ2bSkKICAqIFtPYmplY3QgdG8gb2JqZWN0IG1hcHBpbmddKCNv
YmplY3QtdG8tb2JqZWN0LW1hcHBpbmcpCiAgKiBbT2ZmaWNlXSgjb2ZmaWNl
KQogICogW09STV0oI29ybSkKICAqIFtQYWNrYWdlIE1hbmFnZW1lbnRdKCNw
YWNrYWdlLW1hbmFnZW1lbnQpCiAgKiBbUERGXSgjcGRmKQogICogW1Byb2Zp
bGVyXSgjcHJvZmlsZXIpCiAgKiBbUHJvdG9jb2xzXSgjcHJvdG9jb2xzKQog
ICogW1B1c2ggTm90aWZpY2F0aW9uc10oI3B1c2gtbm90aWZpY2F0aW9ucykK
ICAqIFtRdWVyeSBCdWlsZGVyc10oI3F1ZXJ5LWJ1aWxkZXJzKQogICogW1F1
ZXVlXSgjcXVldWUpCiAgKiBbUmVhY3RpdmUgUHJvZ3JhbW1pbmddKCNyZWFj
dGl2ZS1wcm9ncmFtbWluZykKICAqIFtTY2hlZHVsaW5nXSgjc2NoZWR1bGlu
ZykKICAqIFtTREsgYW5kIEFQSSBDbGllbnRzXSgjc2RrLWFuZC1hcGktY2xp
ZW50cykKICAqIFtTZWFyY2hdKCNzZWFyY2gpCiAgKiBbU2VyaWFsaXphdGlv
bl0oI3NlcmlhbGl6YXRpb24pCiAgKiBbU01TIGFuZCBQaG9uZSBDYWxsc10o
I3Ntcy1hbmQtcGhvbmUtY2FsbHMpCiAgKiBbU3RhdGUgbWFjaGluZXNdKCNz
dGF0ZS1tYWNoaW5lcykKICAqIFtTdGF0aWMgU2l0ZSBHZW5lcmF0b3JzXSgj
c3RhdGljLXNpdGUtZ2VuZXJhdG9ycykKICAqIFtTdHJvbmcgTmFtaW5nXSgj
c3Ryb25nLW5hbWluZykKICAqIFtTdHlsZSBHdWlkZV0oI3N0eWxlLWd1aWRl
KQogICogW1RlbXBsYXRlIEVuZ2luZV0oI3RlbXBsYXRlLWVuZ2luZSkKICAq
IFtUZXN0aW5nXSgjdGVzdGluZykKICAqIFtUb29sc10oI3Rvb2xzKQogICog
W1RyYWRpbmddKCN0cmFkaW5nKQogICogW1VJIEF1dG9tYXRpb25dKCN1aS1h
dXRvbWF0aW9uKQogICogW1Zpc3VhbCBTdHVkaW8gUGx1Z2luc10oI3Zpc3Vh
bC1zdHVkaW8tcGx1Z2lucykKICAqIFtXZWIgQnJvd3NlcnNdKCN3ZWItYnJv
d3NlcnMpCiAgKiBbV2ViIEZyYW1ld29ya3NdKCN3ZWItZnJhbWV3b3JrcykK
ICAqIFtXZWIgU2VydmVyc10oI3dlYi1zZXJ2ZXJzKQogICogW1dlYlNvY2tl
dF0oI3dlYnNvY2tldCkKICAqIFtXaW5kb3dzIFNlcnZpY2VzXSgjd2luZG93
cy1zZXJ2aWNlcykKICAqIFtXUEZdKCN3cGYpCiAgKiBbUGFyc2VyIExpYnJh
cnldKCNwYXJzZXItbGlicmFyeSkKKiBbT3RoZXIgTGlzdHNdKCNvdGhlci1s
aXN0cykKKiBbUmVzb3VyY2VzXSgjcmVzb3VyY2VzKQoKIyMgQWxnb3JpdGht
cyBhbmQgRGF0YSBzdHJ1Y3R1cmVzCgoqIFtBbGdvcml0aG1pYV0oaHR0cHM6
Ly9naXRodWIuY29tL1NvbHV0aW9uc0Rlc2lnbi9BbGdvcml0aG1pYSkgLSBB
bGdvcml0aG0gYW5kIGRhdGEtc3RydWN0dXJlIGxpYnJhcnkgZm9yIC5ORVQg
My41IGFuZCB1cC4gQWxnb3JpdGhtaWEgY29udGFpbnMgc29waGlzdGljYXRl
ZCBhbGdvcml0aG1zIGFuZCBkYXRhLXN0cnVjdHVyZXMgbGlrZSBncmFwaHMs
IHByaW9yaXR5IHF1ZXVlcywgY29tbWFuZCwgdW5kby1yZWRvIGFuZCBtb3Jl
LgoqIFtDIyBBbGdvcml0aG1zXShodHRwczovL2dpdGh1Yi5jb20vYWFsaG91
ci9DLVNoYXJwLUFsZ29yaXRobXMpIC0gQSBDIyBwbHVnLWFuZC1wbGF5IGNs
YXNzLWxpYnJhcnkgcHJvamVjdCBvZiBzdGFuZGFyZCBEYXRhIFN0cnVjdHVy
ZXMgYW5kIEFsZ29yaXRobXMuIEl0IGNvbnRhaW5zIDM1KyBEYXRhIFN0cnVj
dHVyZXMgYW5kIDMwKyBBbGdvcml0aG1zIGRlc2lnbmVkIGFzIE9iamVjdC1P
cmllbnRlZCBpc29sYXRlZCBjb21wb25lbnRzLgoKIyMgQVBJCgoqIFtUZWxl
Z3JhbS5Cb3RdKGh0dHBzOi8vZ2l0aHViLmNvbS9UZWxlZ3JhbUJvdHMvVGVs
ZWdyYW0uQm90KSAtIC5ORVQgQ2xpZW50IGZvciBbVGVsZWdyYW0gQm90IEFQ
SV0oaHR0cHM6Ly9jb3JlLnRlbGVncmFtLm9yZy9ib3RzL2FwaSkKKiBbVExT
aGFycF0oaHR0cHM6Ly9naXRodWIuY29tL3NvY2hpeC9UTFNoYXJwKSAtIEl0
J3MgYSBwZXJmZWN0IGZpdCBmb3IgYW55IGRldmVsb3BlciB3aG8gd291bGQg
bGlrZSB0byBzZW5kIGRhdGEgZGlyZWN0bHkgdG8gVGVsZWdyYW0gdXNlcnMg
b3Igd3JpdGUgb3duIGN1c3RvbSBUZWxlZ3JhbSBjbGllbnQuCiogW05hbmN5
RnhdKGh0dHBzOi8vZ2l0aHViLmNvbS9OYW5jeUZ4L05hbmN5KSAtIExpZ2h0
d2VpZ2h0LCBsb3ctY2VyZW1vbnksIGZyYW1ld29yayBmb3IgYnVpbGRpbmcg
SFRUUC1iYXNlZCBzZXJ2aWNlcyBvbiAuTkVUIGFuZCBNb25vCiogW0FTUC5O
RVQgV2ViIEFQSV0oaHR0cHM6Ly9kb3RuZXQubWljcm9zb2Z0LmNvbS9hcHBz
L2FzcG5ldC9hcGlzKSAtIEZyYW1ld29yayB0aGF0IG1ha2VzIGl0IGVhc3kg
dG8gYnVpbGQgSFRUUCBzZXJ2aWNlcyB0aGF0IHJlYWNoIGEgYnJvYWQgcmFu
Z2Ugb2YgY2xpZW50cywgaW5jbHVkaW5nIGJyb3dzZXJzIGFuZCBtb2JpbGUg
ZGV2aWNlcwoqIFtCcmVlemVdKGh0dHBzOi8vYnJlZXplLmdpdGh1Yi5pby9k
b2MtbmV0LykgLSBBUEkgZnJhbWV3b3JrIGVuYWJsaW5nIHJpY2ggZGF0YSBh
Y2Nlc3MgYnkgdXNpbmcgdGhlIE9EYXRhIDMgcHJvdG9jb2wuIENsaWVudCBs
aWJyYXJpZXMgYXZhaWxhYmxlIGZvciBKYXZhU2NyaXB0IGFuZCBDIy4KKiBb
TW9iaXVzOiBDIyBBUEkgZm9yIFNwYXJrXShodHRwczovL2dpdGh1Yi5jb20v
TWljcm9zb2Z0L01vYml1cykgLSBNb2JpdXMgYWRkcyBDIyBsYW5ndWFnZSBi
aW5kaW5nIHRvIEFwYWNoZSBTcGFyaywgZW5hYmxpbmcgdGhlIGltcGxlbWVu
dGF0aW9uIG9mIFNwYXJrIGRyaXZlciBjb2RlIGFuZCBkYXRhIHByb2Nlc3Np
bmcgb3BlcmF0aW9ucyBpbiBDIy4KKiBbU2VydmljZVN0YWNrXShodHRwczov
L2dpdGh1Yi5jb20vU2VydmljZVN0YWNrL1NlcnZpY2VTdGFjaykgLSBUaG91
Z2h0ZnVsbHkgYXJjaGl0ZWN0ZWQsIG9ic2NlbmVseSBmYXN0LCB0aG9yb3Vn
aGx5IGVuam95YWJsZSB3ZWIgc2VydmljZXMgZm9yIGFsbAoqIFtOZWxpYnVy
XShodHRwczovL2dpdGh1Yi5jb20vTmVsaWJ1ci9OZWxpYnVyKSAtIE5lbGli
dXIgaXMgbWVzc2FnZSBiYXNlZCB3ZWIgc2VydmljZSBmcmFtZXdvcmsgb24g
dGhlIHB1cmUgV0NGLiBOZWxpYnVyIHNpbXBsaWZpZXMgY3JlYXRpbmcgaGln
aC1wZXJmb3JtYW5jZSBhbmQgbWVzc2FnZS1iYXNlZCB3ZWIgc2VydmljZXMg
YW5kIHlvdSBjZXJ0YWlubHkgaGF2ZSBhbGwgdGhlIHBvd2VyIG9mIHRoZSBX
Q0YuCiogW1dlYkFQSSBDb250cmliXShodHRwczovL2dpdGh1Yi5jb20vV2Vi
QXBpQ29udHJpYi9XZWJBUElDb250cmliKSAtIENvbGxlY3Rpb24gb2Ygb3Bl
biBzb3VyY2UgcHJvamVjdHMgdG8gaGVscCBpbXByb3ZlIHlvdXIgd29yayB3
aXRoIEFTUC5ORVQgV2ViIEFQSQoqIFtYYW1hcmluLkVzc2VudGlhbHNdKGh0
dHBzOi8vZG9jcy5taWNyb3NvZnQuY29tL2VuLXVzL3hhbWFyaW4vZXNzZW50
aWFscy8pIC0gWGFtYXJpbi5Fc3NlbnRpYWxzIHByb3ZpZGVzIGRldmVsb3Bl
cnMgd2l0aCBjcm9zcy1wbGF0Zm9ybSBBUElzIGZvciB0aGVpciBtb2JpbGUg
YXBwbGljYXRpb25zLgoqIFtPY2Vsb3RdKGh0dHBzOi8vZ2l0aHViLmNvbS9U
aHJlZU1hbW1hbHMvT2NlbG90KSAtIC5ORVQgY29yZSBBUEkgR2F0ZXdheQoK
IyMgQXBwbGljYXRpb24gRnJhbWV3b3JrcwoKKiBbLk5FVCBCb3hlZCBGcmFt
ZXdvcmtdKGh0dHBzOi8vZ2l0aHViLmNvbS9Eb3RuZXQtQm94ZWQvRnJhbWV3
b3JrKSAtIC5ORVQgQ29yZSBFeHRlbnNpb25zIGFuZCBIZWxwZXIgTnVHZXQg
cGFja2FnZXMKKiBbQVNQLk5FVCBCb2lsZXJwbGF0ZV0oaHR0cHM6Ly9naXRo
dWIuY29tL2FzcG5ldGJvaWxlcnBsYXRlL2FzcG5ldGJvaWxlcnBsYXRlKSAt
IEEgc3RhcnRpbmcgcG9pbnQgZm9yIG5ldyBtb2Rlcm4gQVNQLk5FVCBNVkMg
d2ViIGFwcGxpY2F0aW9ucyB3aXRoIGJlc3QgcHJhY3RpY2VzIGFuZCBtb3N0
IHBvcHVsYXIgdG9vbHMuCiogW0FCUF0oaHR0cHM6Ly9naXRodWIuY29tL2Fi
cGZyYW1ld29yay9hYnApIC0gVGhlIG5leHQgZ2VuZXJhdGlvbiBvZiB0aGUg
QVNQLk5FVCBCb2lsZXJwbGF0ZSB3ZWIgYXBwbGljYXRpb24gZnJhbWV3b3Jr
LgoqIFtCdXR0ZXJmbHkgU2VydmVyIC5ORVRdKGh0dHBzOi8vYnV0dGVyZmx5
c2VydmVyLmlvKSAtIEVuYWJsZXMgZGVmaW5pbmcgYSBXZWIgQVBJIGFuZCBT
dWJzY3JpcHRpb24gQVBJIHRoYXQgYXV0b21hdGljYWxseSBzeW5jaHJvbml6
ZXMgZGF0YXNldHMgYWNyb3NzIGNvbm5lY3RlZCBjbGllbnRzLiBBbGxvd3Mg
YnVpbGRpbmcgcmVhbC10aW1lIHdlYiBhcHBzIGFuZCBuYXRpdmUgYXBwcyB3
aXRoIG1pbmltYWwgZWZmb3J0LgoqIFtPcmxlYW5zXShodHRwczovL2dpdGh1
Yi5jb20vZG90bmV0L29ybGVhbnMpIC0gT3JsZWFucyBpcyBhIGZyYW1ld29y
ayB0aGF0IHByb3ZpZGVzIGEgc3RyYWlnaHQtZm9yd2FyZCBhcHByb2FjaCB0
byBidWlsZGluZyBkaXN0cmlidXRlZCBoaWdoLXNjYWxlIGNvbXB1dGluZyBh
cHBsaWNhdGlvbnMsIHdpdGhvdXQgdGhlIG5lZWQgdG8gbGVhcm4gYW5kIGFw
cGx5IGNvbXBsZXggY29uY3VycmVuY3kgb3Igb3RoZXIgc2NhbGluZyBwYXR0
ZXJucwoqIFtDb3JlRlhdKGh0dHBzOi8vZ2l0aHViLmNvbS9kb3RuZXQvY29y
ZWZ4KSAtICBUaGUgY29yZWZ4IHJlcG8gY29udGFpbnMgdGhlIGxpYnJhcnkg
aW1wbGVtZW50YXRpb24gKGNhbGxlZCAiQ29yZUZYIikgZm9yIC5ORVQgQ29y
ZS4gSXQgaW5jbHVkZXMgU3lzdGVtLkNvbGxlY3Rpb25zLCBTeXN0ZW0uSU8s
IFN5c3RlbS5YbWwgYW5kIG1hbnkgb3RoZXIgY29tcG9uZW50cy4KKiBbQ1NM
QSAuTkVUXShodHRwczovL2dpdGh1Yi5jb20vTWFyaW1lckxMQy9jc2xhKSAt
IGJ1c2luZXNzIGxheWVyIGRldmVsb3BtZW50IGZyYW1ld29yayBodHRwczov
L2NzbGFuZXQuY29tLwoqIFtNb25vXShodHRwczovL2dpdGh1Yi5jb20vbW9u
by9tb25vKSAtIE9wZW4gc291cmNlIEVDTUEgQ0xJLCBDIywgRiMsIFZCIGFu
ZCAuTkVUIGltcGxlbWVudGF0aW9uCiogW01vbm8tQWRkaW5zXShodHRwczov
L2dpdGh1Yi5jb20vbW9uby9tb25vLWFkZGlucykgLSBNb25vLkFkZGlucyBp
cyBhIGdlbmVyaWMgZnJhbWV3b3JrIGZvciBjcmVhdGluZyBleHRlbnNpYmxl
IGFwcGxpY2F0aW9ucywgYW5kIGZvciBjcmVhdGluZyBhZGQtaW5zIHdoaWNo
IGV4dGVuZCB0aG9zZSBhcHBsaWNhdGlvbnMKKiBbcGVhc3ldKGh0dHBzOi8v
Z2l0aHViLmNvbS9wZWFzeS9QZWFzeS5ORVQpIC0gUGVhc3kgaXMgYSBtaWRk
bGUgdGllciBmcmFtZXdvcmsgdGhhdCBvZmZlcnMgYW4gZWFzeSB0byB1c2Ug
YW5kIGZsZXhpYmxlIHJ1bGVzIGVuZ2luZSBhbmQgd2FzIGRlc2lnbmVkIHRv
IGFkZHJlc3MgY29tbW9uIGNoYWxsZW5nZXMgc3VjaCBhcyBjb25jdXJyZW5j
eSBoYW5kbGluZywgdHJhbnNhY3Rpb25hbCBzdXBwb3J0LCBmYXVsdCB0b2xl
cmFuY2UsIHRocmVhZGluZywgc2NhbGFiaWxpdHksIGFzeW5jIGFuZCBtdWx0
aXBsZSBjbGllbnQgc3VwcG9ydCwgYW5kIGVhc3kgdGVzdGFiaWxpdHksIGFs
bCB3aXRob3V0IGEgaHVnZSBsZWFybmluZyBjdXJ2ZSEKKiBbU3ByaW5nLk5l
dF0oaHR0cHM6Ly9naXRodWIuY29tL3NwcmluZy1wcm9qZWN0cy9zcHJpbmct
bmV0KSAtIFNwcmluZy5ORVQgaXMgYW4gb3BlbiBzb3VyY2UgYXBwbGljYXRp
b24gZnJhbWV3b3JrIHRoYXQgbWFrZXMgYnVpbGRpbmcgIGVudGVycHJpc2Ug
Lk5FVCBhcHBsaWNhdGlvbnMgZWFzaWVyCiogW0RvdE5ldHR5XShodHRwczov
L2dpdGh1Yi5jb20vQXp1cmUvRG90TmV0dHkpIC0gRG90TmV0dHkgaXMgYSBw
b3J0IG9mIE5ldHR5LCBhc3luY2hyb25vdXMgZXZlbnQtZHJpdmVuIG5ldHdv
cmsgYXBwbGljYXRpb24gZnJhbWV3b3JrIGZvciByYXBpZCBkZXZlbG9wbWVu
dCBvZiBtYWludGFpbmFibGUgaGlnaCBwZXJmb3JtYW5jZSBwcm90b2NvbCBz
ZXJ2ZXJzICYgY2xpZW50cy4KKiBbQXNwZWN0Q29yZSBGcmFtZXdvcmtdKGh0
dHBzOi8vZ2l0aHViLmNvbS9kb3RuZXRjb3JlL0FzcGVjdENvcmUtRnJhbWV3
b3JrKSAtIEFzcGVjdENvcmUgRnJhbWV3b3JrIGlzIGFuIEFzcGVjdC1Pcmll
bnRlZCBQcm9ncmFtbWluZyBiYXNlZCBjcm9zcyBwbGF0Zm9ybSBmcmFtZXdv
cmsgZm9yIC5ORVQgQ29yZSBhbmQgLk5FVCBGcmFtZXdvcmsuIENvcmUgc3Vw
cG9ydCBmb3IgYXNwZWN0LWludGVyY2VwdG9yLGRlcGVuZGVuY3kgaW5qZWN0
aW9uIGludGVncmF0aW9uICwgd2ViIGFwcGxpY2F0aW9ucyAsIGRhdGEgdmFs
aWRhdGlvbiAsIGFuZCBtb3JlLgoqIFtFdGhlci5OZXR3b3JrXShodHRwczov
L2dpdGh1Yi5jb20vRWFzdHJhbGwvRXRoZXIuTmV0d29yaykgLSBFdGhlci5O
ZXR3b3JrIGlzIGFuIG9wZW4gc291cmNlIG5ldHdvcmtpbmcgbGlicmFyeSB0
aGF0IGFsbG93IGRldmVsb3BlcnMgdG8gY3JlYXRlIHNpbXBsZSwgZmFzdCBh
bmQgc2NhbGFibGUgc29ja2V0IHNlcnZlciBvciBjbGllbnQgYXBwbGljYXRp
b25zIG92ZXIgdGhlIFRDUC9JUCBwcm90b2NvbC4KKiBbSG9wRnJhbWV3b3Jr
XShodHRwczovL2dpdGh1Yi5jb20vRGllZ29Ub25kaW0vaG9wLWZyYW1ld29y
aykgLSBIb3BGcmFtZXdvcmsgaXMgYSBmcmFtZXdvcmsgdG8gY3JlYXRlIHBy
b2plY3RzIGVhc2lseSBhcHBseWluZyBEb21haW4gRHJpdmVuIERlc2lnbiBh
bmQgYSBsb3Qgb2YgcGF0dGVybnMgdG8gZGVsaXZlcnkgYSBiZXR0ZXIgc29s
dXRpb24uCgojIyBBcHBsaWNhdGlvbiBUZW1wbGF0ZXMKCiogWy5ORVQgQm94
ZWQgVGVtcGxhdGVzXShodHRwczovL2dpdGh1Yi5jb20vRG90bmV0LUJveGVk
L1RlbXBsYXRlcykgLSAuTkVUIHByb2plY3QgdGVtcGxhdGVzIHdpdGggYmF0
dGVyaWVzIGluY2x1ZGVkLCBwcm92aWRpbmcgdGhlIG1pbmltdW0gYW1vdW50
IG9mIGNvZGUgcmVxdWlyZWQgdG8gZ2V0IHlvdSBnb2luZyBmYXN0ZXIuCiog
W0FTUC5ORVQgQ29yZSBTdGFydGVyIEtpdF0oaHR0cHM6Ly9naXRodWIuY29t
L2tyaWFzb2Z0L2FzcG5ldC1zdGFydGVyLWtpdCkgLSBiYWNrZW5kOiAuTkVU
IENvcmUsIEVGIENvcmUsIEMjOyBmcm9udGVuZDogQmFiZWwsIFdlYnBhY2ss
IFJlYWN0LCBDU1MgTW9kdWxlcwoqIFtNVkMuVGVtcGxhdGVdKGh0dHBzOi8v
Z2l0aHViLmNvbS9Ob25GYWN0b3JzL01WQzYuVGVtcGxhdGUpIC0gQVNQLk5F
VCBDb3JlIE1WQyBwcm9qZWN0IHN0YXJ0ZXIgdGVtcGxhdGUuCiogW1Byb2pl
Y3RTY2FmZm9sZF0oaHR0cHM6Ly9naXRodWIuY29tL2ZzcHJvamVjdHMvUHJv
amVjdFNjYWZmb2xkKSAtIEEgcHJvdG90eXBpY2FsIC5ORVQgc29sdXRpb24g
cmVjb21tZW5kZWQgYnkgdGhlIEYjIEZvdW5kYXRpb24tLS1pbmNsdWRlcyBm
aWxlIHN5c3RlbSBzZXR1cCwgUGFrZXQgZm9yIGRlcGVuZGVuY2llcyBhbmQg
RkFLRSBmb3IgYnVpbGQvdGVzdCBhdXRvbWF0aW9uLiBCeSBkZWZhdWx0LCBi
dWlsZCBwcm9jZXNzIGFsc28gY29tcGlsZXMgZG9jdW1lbnRhdGlvbiBhbmQg
Z2VuZXJhdGVzIE51R2V0IHBhY2thZ2VzLgoqIFtTZXJlbmVdKGh0dHBzOi8v
Z2l0aHViLmNvbS92b2xrYW5jZXlsYW4vU2VyZW5pdHkpIC0gU2VyZW5pdHkg
aXMgYW4gQVNQLk5FVCBNVkMgYXBwbGljYXRpb24gcGxhdGZvcm0gZGVzaWdu
ZWQgdG8gc2ltcGxpZnkgYW5kIHNob3J0ZW4gZGV2ZWxvcG1lbnQgb2YgZGF0
YS1jZW50cmljIGJ1c2luZXNzIGFwcGxpY2F0aW9ucyB3aXRoIGEgc2Vydmlj
ZS1iYXNlZCBhcmNoaXRlY3R1cmUuIFNlcmVuZSBpcyBhIHN0YXJ0ZXIgdGVt
cGxhdGUgdG8gYnVpbGQgU2VyZW5pdHkgYXBwbGljYXRpb25zLgoqIFtTaWRl
LVdhZmZsZV0oaHR0cHM6Ly9naXRodWIuY29tL0xpZ2VyU2hhcmsvc2lkZS13
YWZmbGUpIC0gTGFyZ2UgY29sbGVjdGlvbiBvZiB1c2VmdWwgdGVtcGxhdGVz
IGZvciBXZWIgYW5kIERlc2t0b3AgZGV2ZWxvcG1lbnQuCiogW1RlbXBsYXRl
MTBdKGh0dHBzOi8vZ2l0aHViLmNvbS9XaW5kb3dzLVhBTUwvVGVtcGxhdGUx
MCkgLSBXaW5kb3dzIDEwIHRlbXBsYXRlcyB3aXRoIGRlc2lnbiBwYXR0ZXJu
cy4KKiBbTnVjbGV1c10oaHR0cHM6Ly9naXRodWIuY29tL2FsaXJpemFhZGl5
YWhzaS9OdWNsZXVzKSAtIFZ1ZSBzdGFydHVwIGFwcGxpY2F0aW9uIHRlbXBs
YXRlIHRoYXQgdXNlcyBBU1AuTkVUIENvcmUgQVBJIGxheWVyZWQgYXJjaGl0
ZWN0dXJlIGF0IHRoZSBiYWNrLWVuZCBhbmQgSldUIGJhc2VkIGF1dGhlbnRp
Y2F0aW9uCgojIyBBcnRpZmljaWFsIEludGVsbGlnZW5jZQoqIFtBSU1MQm90
IChQcm9ncmFtIyldKGh0dHA6Ly9haW1sYm90LnNvdXJjZWZvcmdlLm5ldC8p
IC0gQSBzbWFsbCwgZmFzdCwgc3RhbmRhcmRzLWNvbXBsaWFudCB5ZXQgZWFz
aWx5IGN1c3RvbWl6YWJsZSBpbXBsZW1lbnRhdGlvbiBvZiBhbiBBSU1MIChB
cnRpZmljaWFsIEludGVsbGlnZW5jZSBNYXJrdXAgTGFuZ3VhZ2UpIGJhc2Vk
IGNoYXR0ZXIgYm90IGluIEMjLgoqIFtTSU1MXShodHRwczovL3NpbWxib3Qu
Y29tLykgLSBTeW50aGV0aWMgSW50ZWxsaWdlbmNlIE1hcmt1cCBMYW5ndWFn
ZSwgYSBuZXh0IGdlbmVyYXRpb24gQ2hhdGJvdCAmIERpZ2l0YWwgQXNzaXN0
YW50IExhbmd1YWdlLgoKIyMgQXNzZW1ibHkgTWFuaXB1bGF0aW9uCgoqIFtG
b2R5XShodHRwczovL2dpdGh1Yi5jb20vRm9keS9Gb2R5KSAtIEV4dGVuc2li
bGUgdG9vbCBmb3Igd2VhdmluZyAuTkVUIGFzc2VtYmxpZXMuCiogW0lMUmVw
YWNrXShodHRwczovL2dpdGh1Yi5jb20vZ2x1Y2svaWwtcmVwYWNrKSAtIE9w
ZW4tc291cmNlIGFsdGVybmF0aXZlIHRvIElMTWVyZ2UuCiogW01vbm8uQ2Vj
aWxdKGh0dHBzOi8vZ2l0aHViLmNvbS9qYmV2YWluL2NlY2lsKSAtIENlY2ls
IGlzIGEgbGlicmFyeSB0byBnZW5lcmF0ZSBhbmQgaW5zcGVjdCBwcm9ncmFt
cyBhbmQgbGlicmFyaWVzIGluIHRoZSBFQ01BIENJTCBmb3JtLgoKIyMgQXNz
ZXRzCgoqIFtDYXNzZXR0ZV0oaHR0cHM6Ly9naXRodWIuY29tL2FuZHJld2Rh
dmV5L2Nhc3NldHRlKSAtIE1hbmFnZXMgLk5FVCB3ZWIgYXBwbGljYXRpb24g
YXNzZXRzIChzY3JpcHRzLCBjc3MgYW5kIHRlbXBsYXRlcykKKiBbTm9kZUFz
c2V0c10oaHR0cHM6Ly9naXRodWIuY29tL2Fqb3Jrb3dza2kvTm9kZUFzc2V0
cykgLSBBc3NldCBNYW5hZ2VyIGZvciAuTkVUIHRoYXQgaGFzIGxpdmUgQ1NT
IHVwZGF0ZXMgdXNpbmcgU2lnbmFsUiBhbmQgY2FuIG9wdGlvbmFsbHkgbGV2
ZXJhZ2UgTm9kZS5qcyBjb21waWxlcnMKKiBbQnVuZGxlIFRyYW5zZm9ybWVy
XShodHRwczovL2dpdGh1Yi5jb20vVGFyaXRzeW4vQnVuZGxlVHJhbnNmb3Jt
ZXIpIC0gTW9kdWxhciBleHRlbnNpb24gZm9yIFtNaWNyb3NvZnQgQVNQLk5F
VCBXZWIgT3B0aW1pemF0aW9uIEZyYW1ld29ya10oaHR0cHM6Ly93d3cubnVn
ZXQub3JnL3BhY2thZ2VzL01pY3Jvc29mdC5Bc3BOZXQuV2ViLk9wdGltaXph
dGlvbikuIEl0cyBtb2R1bGVzIHN1cHBvcnRzIExFU1MsIFNhc3MsIENvZmZl
ZVNjcmlwdCwgVHlwZVNjcmlwdCwgTXVzdGFjaGUsIEhhbmRsZWJhcnMsIEF1
dG9wcmVmaXhlciBhbG9uZyB3aXRoIGEgYnVuY2ggb2YgZGlmZmVyZW50IEpT
IGFuZCBDU1MgbWluaWZpZXJzLgoqIFtCdW5kbGVyXShodHRwczovL2dpdGh1
Yi5jb20vU2VydmljZVN0YWNrL0J1bmRsZXIpIC0gQ29tcGlsZSAmIE1pbmlm
eSBMZXNzL1Nhc3MvU3R5bHVzL0Nzcy9KUy9Db2ZmZWVTY3JpcHQvTGl2ZVNj
cmlwdCBmaWxlcy4gSW50ZWdyYXRlcyB3aXRoIE1WQyBhbmQgU2VydmljZVN0
YWNrCiogW1NxdWlzaEl0XShodHRwczovL2dpdGh1Yi5jb20vamV0aGVyZWRn
ZS9TcXVpc2hJdCkgLSBMZXRzIHlvdSAqZWFzaWx5KiBidW5kbGUgc29tZSBD
U1MgYW5kIEphdmFTY3JpcHQKCiMjIEF1dGhlbnRpY2F0aW9uIGFuZCBBdXRo
b3JpemF0aW9uCgoqIFtBU1AuTkVUIElkZW50aXR5XShodHRwczovL2dpdGh1
Yi5jb20vYXNwbmV0L0lkZW50aXR5LykgLSBOZXcgbWVtYmVyc2hpcCBzeXN0
ZW0gZm9yIEFTUC5ORVQgYXBwbGljYXRpb25zCiogW0RvdE5ldE9wZW5BdXRo
XShodHRwczovL2dpdGh1Yi5jb20vRG90TmV0T3BlbkF1dGgvRG90TmV0T3Bl
bkF1dGgpIC0gQSBDIyBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgT3BlbklELCBP
QXV0aCBhbmQgSW5mb0NhcmQgcHJvdG9jb2xzCiogW0xvZ2liaXQgSGF3a10o
aHR0cHM6Ly9naXRodWIuY29tL2xvZ2liaXQvbG9naWJpdC5oYXdrLykgLSBB
IEYjIFtIYXdrXShodHRwczovL2dpdGh1Yi5jb20vaHVlbml2ZXJzZS9oYXdr
I3VzYWdlLWV4YW1wbGUpIGF1dGhlbnRpY2F0aW9uIGxpYnJhcnkKKiBbSWRl
bnRpdHlNb2RlbF0oaHR0cHM6Ly9naXRodWIuY29tL0lkZW50aXR5TW9kZWwp
IC0gSGVscGVyIGxpYnJhcnkgZm9yIGlkZW50aXR5ICYgYWNjZXNzIGNvbnRy
b2wgaW4gLk5FVCA0LjUgYW5kIE1WQzQvV2ViIEFQSS4KKiBbSWRlbnRpdHlT
ZXJ2ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9JZGVudGl0eVNlcnZlcikgLSBF
eHRlbnNpYmxlIE9BdXRoMiBhbmQgT3BlbklEIENvbm5lY3QgcHJvdmlkZXIg
ZnJhbWV3b3JrLgoqIFtPQXV0aF0oaHR0cHM6Ly9naXRodWIuY29tL2Rhbmll
bGNyZW5uYS92YXVsdC90cmVlL21hc3Rlci9vYXV0aCkgLSBBIHZlcnkgbGln
aHR3ZWlnaHQgbGlicmFyeSBmb3IgZ2VuZXJhdGluZyBPQXV0aCAxLjBhIHNp
Z25hdHVyZXMgd3JpdHRlbiBpbiBDIwoqIFtTdHVudG1hbl0oaHR0cHM6Ly9y
aW1kZXYuaW8vc3R1bnRtYW4vKSAtIFN0dW50bWFuIGlzIGEgbGlicmFyeSBm
b3IgaW1wZXJzb25hdGluZyB1c2VycyBkdXJpbmcgZGV2ZWxvcG1lbnQgbGV2
ZXJhZ2luZyAuTkVUIENsYWltcyBJZGVudGl0eS4KCiMjIEJsb2NrY2hhaW4K
CiogW05ldGhlcm1pbmRdKGh0dHBzOi8vZ2l0aHViLmNvbS9OZXRoZXJtaW5k
RXRoL25ldGhlcm1pbmQpIC0gZnVsbCBFdGhlcmV1bSBjbGllbnQgaW4gLk5F
VCBDb3JlCgojIyBCb29rcwoKKiBbLk5FVCBDb3JlIGluIEFjdGlvbl0oaHR0
cHM6Ly93d3cubWFubmluZy5jb20vYm9va3MvZG90bmV0LWNvcmUtaW4tYWN0
aW9uKSAtIHRlYWNoZXMgaG93IHRvIHdyaXRlIGFwcGxpY2F0aW9ucyBhbmQg
bGlicmFyaWVzIHdpdGggLk5FVCBDb3JlLiAqKlskXSoqCiogQyMgaW4gRGVw
dGggLSBbM3JkIGVkaXRpb25dKGh0dHBzOi8vd3d3Lm1hbm5pbmcuY29tL2Jv
b2tzL2Mtc2hhcnAtaW4tZGVwdGgtdGhpcmQtZWRpdGlvbiksIFs0dGggZWRp
dGlvbiAoZWFybHkgYWNjZXNzKV0oaHR0cHM6Ly93d3cubWFubmluZy5jb20v
Ym9va3MvYy1zaGFycC1pbi1kZXB0aC1mb3VydGgtZWRpdGlvbikgLSBkZWVw
IGRpdmUgaW50byB0aGUgZGV0YWlscyBvZiB0aGUgQyMgbGFuZ3VhZ2UuICoq
WyRdKioKKiBbQ0xSIHZpYSBDI10oaHR0cHM6Ly93d3cubWljcm9zb2Z0cHJl
c3NzdG9yZS5jb20vc3RvcmUvY2xyLXZpYS1jLXNoYXJwLTk3ODA3MzU2Njc0
NTcpIC0gRGlnIGRlZXAgYW5kIG1hc3RlciB0aGUgaW50cmljYWNpZXMgb2Yg
dGhlIGNvbW1vbiBsYW5ndWFnZSBydW50aW1lLCBDIywgYW5kIC5ORVQgZGV2
ZWxvcG1lbnQuICoqWyRdKioKKiBbRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBp
biBDI10oaHR0cHM6Ly93d3cubWFubmluZy5jb20vYm9va3MvZnVuY3Rpb25h
bC1wcm9ncmFtbWluZy1pbi1jLXNoYXJwKSAtIHRlYWNoZXMgaG93IHRvIGJl
c3QgbGV2ZXJhZ2UgdGhlIGZ1bmN0aW9uYWwgZmVhdHVyZXMgb2YgdGhlIEMj
IGxhbmd1YWdlLiAqKlskXSoqCiogW01pY3Jvc2VydmljZXMgaW4gLk5FVCBD
b3JlXShodHRwczovL3d3dy5tYW5uaW5nLmNvbS9ib29rcy9taWNyb3NlcnZp
Y2VzLWluLW5ldC1jb3JlKSAtIHNob3dzIHlvdSBob3cgdG8gYnVpbGQgbWFp
bnRhaW5hYmxlLCBzZWN1cmUgYW5kIG9wZXJhdGlvbnMtZnJpZW5kbHkgbWlj
cm9zZXJ2aWNlcyB1c2luZyBOYW5jeSBhbmQgLk5FVCBDb3JlLiAqKlskXSoq
CiogW0RlcGVuZGVuY3kgSW5qZWN0aW9uIGluIC5ORVRdKGh0dHBzOi8vd3d3
Lm1hbm5pbmcuY29tL2Jvb2tzL2RlcGVuZGVuY3ktaW5qZWN0aW9uLXByaW5j
aXBsZXMtcHJhY3RpY2VzLXBhdHRlcm5zKSBbMm5kIGVkaXRpb25dKGh0dHBz
Oi8vd3d3Lm1hbm5pbmcuY29tL2Jvb2tzL2RlcGVuZGVuY3ktaW5qZWN0aW9u
LXByaW5jaXBsZXMtcHJhY3RpY2VzLXBhdHRlcm5zKSAtIHRlYWNoZXMgeW91
IHRvIHVzZSBEZXBlbmRlbmN5IEluamVjdGlvbiB0byByZWR1Y2UgaGFyZC1j
b2RlZCBkZXBlbmRlbmNpZXMgYmV0d2VlbiBhcHBsaWNhdGlvbiBjb21wb25l
bnRzIGluIC5ORVQuICoqWyRdKioKKiBbQVNQLk5FVCBDb3JlIGluIEFjdGlv
bl0oaHR0cHM6Ly93d3cubWFubmluZy5jb20vYm9va3MvYXNwLW5ldC1jb3Jl
LWluLWFjdGlvbikgLSB0ZWFjaGVzIGhvdyB0byB3cml0ZSB3ZWIgYXBwbGlj
YXRpb25zIHdpdGggQVNQLk5FVCBDb3JlLiAqKlskXSoqCiogW0VudGl0eSBG
cmFtZXdvcmsgQ29yZSBpbiBBY3Rpb25dKGh0dHBzOi8vd3d3Lm1hbm5pbmcu
Y29tL2Jvb2tzL2VudGl0eS1mcmFtZXdvcmstY29yZS1pbi1hY3Rpb24pIC0g
dGVhY2hlcyBob3cgdG8gdXNlIEVudGl0eSBGcmFtZXdvcmsgQ29yZSwgaW5j
bHVkaW5nIGxpZ2h0ZXIgd2VpZ2h0IGRhdGEgYWNjZXNzIGFsdGVybmF0aXZl
cyBzdWNoIGFzIERhcHBlci4gKipbJF0qKgoqIFtUaGUgTGl0dGxlIEFTUC5O
RVQgQ29yZSBCb29rXShodHRwczovL3JlY2FmZmVpbmF0ZS5jby9ib29rLykg
LSBBIGZyZWUsIG9wZW4tc291cmNlLCB0dXRvcmlhbC1iYXNlZCBib29rIGFp
bWluZyB0byBwcm92aWRlIGEgc2ltcGxlIGludHJvZHVjdGlvbiB0byBBU1Au
TkVUIENvcmUuCgojIyBCdWlsZCBBdXRvbWF0aW9uCgoqIFtQc2FrZV0oaHR0
cHM6Ly9naXRodWIuY29tL3BzYWtlL3BzYWtlKSAtIC5ORVQtYmFzZWQgYnVp
bGQgYXV0b21hdGlvbiB0b29sIHdyaXR0ZW4gaW4gUG93ZXJTaGVsbAoqIFtG
QUtFXShodHRwczovL2dpdGh1Yi5jb20vZnNoYXJwL0ZBS0UpIC0gRiMgTWFr
ZSwgYSBjcm9zcy1wbGF0Zm9ybSBidWlsZCBhdXRvbWF0aW9uIHN5c3RlbQoq
IFtJbnZva2UtQnVpbGRdKGh0dHBzOi8vZ2l0aHViLmNvbS9uaWdodHJvbWFu
L0ludm9rZS1CdWlsZCkgLSBQb3dlclNoZWxsIGJ1aWxkIGFuZCB0ZXN0IGF1
dG9tYXRpb24gdG9vbCBpbnNwaXJlZCBieSBQc2FrZS4KKiBbTVNCdWlsZF0o
aHR0cHM6Ly9naXRodWIuY29tL01pY3Jvc29mdC9tc2J1aWxkKSAtIFRoZSBN
aWNyb3NvZnQgQnVpbGQgRW5naW5lIChNU0J1aWxkKSBpcyB0aGUgYnVpbGQg
cGxhdGZvcm0gZm9yIC5ORVQgYW5kIFZpc3VhbCBTdHVkaW8KKiBbQ2FrZV0o
aHR0cHM6Ly9naXRodWIuY29tL2Nha2UtYnVpbGQvY2FrZSkgLSBDYWtlIChD
IyBNYWtlKSBpcyBhIGNyb3NzLXBsYXRmb3JtIGJ1aWxkIGF1dG9tYXRpb24g
c3lzdGVtIHdpdGggYSBDIyBEU0wuCiogW05ha2VdKGh0dHBzOi8vZ2l0aHVi
LmNvbS95ZXZoZW4vTmFrZSkgLSBNYWdpYyBzY3JpcHQtYmFzZWQgQyMgdGFz
ayBydW5uZXIKKiBbTnVrZV0oaHR0cHM6Ly9naXRodWIuY29tL251a2UtYnVp
bGQvbnVrZSkgLSBDcm9zcy1wbGF0Zm9ybSBidWlsZCBhdXRvbWF0aW9uIHN5
c3RlbQoqIFtGbHVidUNvcmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9kb3RuZXRj
b3JlL2ZsdWJ1LmNvcmUpIC0gIEEgY3Jvc3MgcGxhdGZvcm0gYnVpbGQgYW5k
IGRlcGxveW1lbnQgYXV0b21hdGlvbiBzeXN0ZW0gZm9yIGJ1aWxkaW5nIHBy
b2plY3RzIGFuZCBleGVjdXRpbmcgZGVwbG95bWVudCBzY3JpcHRzIHVzaW5n
IEMjIGNvZGUuCgojIyBCdXNpbmVzcyBJbnRlbGxpZ2VuY2UKCiogW0Zhc3RS
ZXBvcnRdKGh0dHBzOi8vZ2l0aHViLmNvbS9GYXN0UmVwb3J0cy9GYXN0UmVw
b3J0KSAtIFRoZSBvcGVuIHNvdXJjZSByZXBvcnQgZ2VuZXJhdG9yIGZvciAu
TkVUIENvcmUgMi54Ly5OZXQgRnJhbWV3b3JrIDQueC4gRmFzdFJlcG9ydCBj
YW4gYmUgdXNlZCBpbiBBU1AuTkVUIE1WQywgV2ViIEFQSSBhcHBsaWNhdGlv
bnMuCiogW05SZWNvIFBpdm90RGF0YV0oaHR0cHM6Ly93d3cubnJlY29zaXRl
LmNvbS9waXZvdF9kYXRhX2xpYnJhcnlfbmV0LmFzcHgpIC0gaW4tbWVtb3J5
IGRhdGEgYWdncmVnYXRpb24vT0xBUCBsaWJyYXJ5LCBwaXZvdCB0YWJsZXMg
Z2VuZXJhdGlvbiAocmVuZGVyIHRvIEhUTUwsIGV4cG9ydHMpLCBBU1AuTkVU
IHBpdm90IGJ1aWxkZXIgY29udHJvbCAqKlskXVtGcmVlIGZvciBzaW5nbGUt
ZGVwbG95bWVudC9ub24tU2FhU10qKgoKIyMgQ2FjaGluZwoKKiBbQ2FjaGVD
b3ddKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGlvc3RhZC9DYWNoZUNvdykgLSBB
biBBU1AuTkVUIFdlYiBBUEkgSFRUUCBjYWNoaW5nIGltcGxlbWVudGF0aW9u
IGJvdGggb24gY2xpZW50IGFuZCBzZXJ2ZXIKKiBbQWthdmFjaGVdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9yZWFjdGl2ZXVpL0FrYXZhY2hlKSAtIEFuIGFzeW5j
aHJvbm91cywgcGVyc2lzdGVudCBrZXktdmFsdWUgc3RvcmUKKiBbQ2FjaGVN
YW5hZ2VyXShodHRwczovL2dpdGh1Yi5jb20vTWljaGFDby9DYWNoZU1hbmFn
ZXIpIC0gQSBjb21tb24gaW50ZXJmYWNlIGFuZCBhYnN0cmFjdGlvbiBsYXll
ciBmb3IgY2FjaGluZy4KKiBbQ2FjaGVBZGFwdGVyXShodHRwczovL2JpdGJ1
Y2tldC5vcmcvZ2xhdi9jYWNoZWFkYXB0ZXIpIC0gQW5vdGhlciBjb21tb24g
Y2FjaGUgYWJzdHJhY3Rpb24gbGF5ZXIgZm9yIGNhY2hpbmcgd2l0aCBlbmhh
bmNlZCBjYWNoZSBBUEkgdXNhZ2UuCiogW0ZvdW5kYXRpb10oaHR0cHM6Ly9n
aXRodWIuY29tL0ZvdW5kYXRpb0Z4L0ZvdW5kYXRpbyNjYWNoaW5nKSAtIEEg
Y29tbW9uIGludGVyZmFjZSB3aXRoIGluIG1lbW9yeSwgUmVkaXMgYW5kIGh5
YnJpZCBpbXBsZW1lbnRhdGlvbnMuCiogW0Nhc2hld10oaHR0cHM6Ly9naXRo
dWIuY29tL2pvYWtpbXNrb29nL0Nhc2hldykgLSBhIC5ORVQgbGlicmFyeSBm
b3IgY2FjaGluZyByZXNwb25zZXMgZWFzaWx5IHdpdGggYW4gYEh0dHBDbGll
bnRgIHRocm91Z2ggYW4gQVBJIHRoYXQgaXMgc2ltcGxlIGFuZCBlbGVnYW50
IHlldCBwb3dlcmZ1bC4KCiMjIENMSQoKKiBbQXBwY2NlbGVyYXRlIC0gQ29t
bWFuZCBMaW5lIFBhcnNlcl0oaHR0cHM6Ly93d3cuYXBwY2NlbGVyYXRlLmNv
bS9jb21tYW5kbGluZXBhcnNlci5odG1sKSAtIEEgY29tbWFuZC1saW5lIHBh
cnNlciB3aXRoIGZsdWVudCBkZWZpbml0aW9uIHN5bnRheCwgZGlmZmVyZW50
IGFyZ3VtZW50IHR5cGVzLCByZXF1aXJlZCBhbmQgb3B0aW9uYWwgYXJndW1l
bnRzLCB2YWx1ZSByZXN0cmljdGlvbnMsIGFsaWFzZXMsIHR5cGUgY29udmVy
c2lvbiBhbmQgc2VtaS1hdXRvbWF0aWMgdXNhZ2UgaGVscCBtZXNzYWdlIGNv
bXBvc2l0aW9uCiogW0FyZ3VdKGh0dHBzOi8vZ2l0aHViLmNvbS9mc3Byb2pl
Y3RzL0FyZ3UpIC0gRGVjbGFyYXRpdmUgQ0xJIGFyZ3VtZW50ICYgWE1MIGNv
bmZpZ3VyYXRpb24gcGFyc2VyIGZvciBGIyBhcHBsaWNhdGlvbnMuCiogW2Ns
aXByXShodHRwczovL2dpdGh1Yi5jb20vbmVtZWMvY2xpcHIpIC0gQSBDTEkg
bGlicmFyeSBpbnNwaXJlZCBieSBQeXRob24ncyBhcmdwYXJzZSB0aGF0IHRy
YW5zZm9ybXMgYSBjb21tYW5kIGxpbmUgaW50byBhIHN0cm9uZ2x5LXR5cGVk
IG9iamVjdC4gSXQgc3VwcG9ydHMgY3VzdG9tIGFyZ3VtZW50IHR5cGVzLCBh
dXRvbWF0ZWQgKGFuZCBsb2NhbGl6ZWQpIGhlbHAgZ2VuZXJhdGlvbiwgYW5k
IGEgdmFyaWV0eSBvZiB3YXlzIHRvIHN0b3JlIHBhcnNlZCBhcmd1bWVudHMu
CiogW0NsaVdyYXBdKGh0dHBzOi8vZ2l0aHViLmNvbS9UeXJycnovQ2xpV3Jh
cCkgLSBXcmFwcGVyIGZvciBjb21tYW5kIGxpbmUgaW50ZXJmYWNlcy4KKiBb
Q29sb3JmdWwuQ29uc29sZV0oaHR0cHM6Ly9naXRodWIuY29tL3RvbWFraXRh
L0NvbG9yZnVsLkNvbnNvbGUpIC0gQ29sb3JmdWwgY29uc29sZSBvdXRwdXQu
CiogW0NvbW1hbmQgTGluZSBQYXJzZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9j
b21tYW5kbGluZXBhcnNlci9jb21tYW5kbGluZSkgLSBUaGUgQ29tbWFuZCBM
aW5lIFBhcnNlciBMaWJyYXJ5IG9mZmVycyB0byBDTFIgYXBwbGljYXRpb25z
IGEgY2xlYW4gYW5kIGNvbmNpc2UgQVBJIGZvciBtYW5pcHVsYXRpbmcgY29t
bWFuZC1saW5lIGFyZ3VtZW50cyBhbmQgcmVsYXRlZCB0YXNrcwoqIFtDc0Nv
bnNvbGVGb3JtYXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9BdGhhcmkvQ3NDb25z
b2xlRm9ybWF0KSAtIC5ORVQgQyMgbGlicmFyeSBmb3IgYWR2YW5jZWQgZm9y
bWF0dGluZyBvZiBjb25zb2xlIG91dHB1dC4KKiBbRG9jb3B0XShodHRwczov
L2dpdGh1Yi5jb20vZG9jb3B0L2RvY29wdC5uZXQpIC0gQ29tbWFuZC1saW5l
IGludGVyZmFjZSBkZXNjcmlwdGlvbiBsYW5ndWFnZSB0aGF0IHdpbGwgbWFr
ZSB5b3Ugc21pbGUuCiogW0VudHJ5UG9pbnRdKGh0dHBzOi8vZ2l0aHViLmNv
bS9OaWNrLUx1Y2FzL0VudHJ5UG9pbnQpIC0gQ29tcG9zYWJsZSBDTEkgQXJn
dW1lbnQgUGFyc2VyIGZvciAuTkVUIENvcmUgJiAuTkVUIEZyYW1ld29yayA0
LjUrLgoqIFtGbHVlbnQgQ29tbWFuZCBMaW5lIFBhcnNlcl0oaHR0cHM6Ly9n
aXRodWIuY29tL2ZjbHAvZmx1ZW50LWNvbW1hbmQtbGluZS1wYXJzZXIpIC0g
QSBzaW1wbGUsIHN0cm9uZ2x5IHR5cGVkIC5ORVQgQyMgY29tbWFuZC1saW5l
IHBhcnNlciBsaWJyYXJ5IHVzaW5nIGEgZmx1ZW50IGVhc3kgdG8gdXNlIGlu
dGVyZmFjZQoqIFtHdWkuY3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9taWd1ZWxk
ZWljYXphL2d1aS5jcykgLSBUZXJtaW5hbCBVSSB0b29sa2l0IGZvciAuTkVU
LgoqIFtQb3dlciBBcmdzXShodHRwczovL2dpdGh1Yi5jb20vYWRhbWFiZGVs
aGFtZWQvUG93ZXJBcmdzKSAtIFBvd2VyQXJncyBjb252ZXJ0cyBjb21tYW5k
LWxpbmUgYXJndW1lbnRzIGludG8gLk5FVCBvYmplY3RzIHRoYXQgYXJlIGVh
c3kgdG8gcHJvZ3JhbSBhZ2FpbnN0LiBJdCBhbHNvIHByb3ZpZGVzIGEgdG9u
IG9mIG9wdGlvbmFsIGNhcGFiaWxpdGllcyBzdWNoIGFzIGFyZ3VtZW50IHZh
bGlkYXRpb24sIGF1dG8gZ2VuZXJhdGVkIHVzYWdlLCB0YWIgY29tcGxldGlv
biwgYW5kIHBsZW50eSBvZiBleHRlbnNpYmlsaXR5CiogW1JlYWRMaW5lXSho
dHRwczovL2dpdGh1Yi5jb20vdG9uZXJkby9yZWFkbGluZSkgLSBBIEdOVS1S
ZWFkbGluZSBsaWtlIGxpYnJhcnkgZm9yIC5ORVQvLk5FVCBDb3JlLgoqIFtS
dW5JbmZvQnVpbGRlcl0oaHR0cHM6Ly9naXRodWIuY29tL3J1c2hmaXZlL1J1
bkluZm9CdWlsZGVyKSAtIEEgdW5pcXVlIGNvbW1hbmQgbGluZSBwYXJzZXIs
IHV0aWxpemluZyBvYmplY3QgdHJlZXMgZm9yIGNvbW1hbmRzLgoqIFtTaGFy
cE5ldFNIXShodHRwczovL2dpdGh1Yi5jb20vcnBldHovU2hhcnBOZXRTSCkg
LSBBIHNpbXBsZSBuZXRzaCBsaWJyYXJ5IGZvciBDIy4KCiMjIENMUgoKKiBb
Q29yZUNMUl0oaHR0cHM6Ly9naXRodWIuY29tL2RvdG5ldC9jb3JlY2xyKSAt
IFRoZSBjb3JlY2xyIHJlcG8gY29udGFpbnMgdGhlIGNvbXBsZXRlIHJ1bnRp
bWUgaW1wbGVtZW50YXRpb24gKGNhbGxlZCAiQ29yZUNMUiIpIGZvciAuTkVU
IENvcmUuIEl0IGluY2x1ZGVzIFJ5dUpJVCwgdGhlIC5ORVQgR0MsIG5hdGl2
ZSBpbnRlcm9wIGFuZCBtYW55IG90aGVyIGNvbXBvbmVudHMuCgojIyBDTVMK
CiogW0NvbXBvc2l0ZSBDMV0oaHR0cHM6Ly9naXRodWIuY29tL09yY2tlc3Ry
YS9DMS1DTVMtRm91bmRhdGlvbikgLSBBIHdlYiBDTVMgdGhhdCBmb2N1cyBv
biBVWCBhbmQgYWRhcHRhYmlsaXR5CiogW21vam9Qb3J0YWwgXShodHRwczov
L2dpdGh1Yi5jb20vaTdtZWRpYS9tb2pvcG9ydGFsKSAtIE1vam9Qb3J0YWwg
aXMgYW4gZXh0ZW5zaWJsZSwgY3Jvc3MgZGF0YWJhc2UsIG1vYmlsZSBmcmll
bmRseSwgd2ViIGNvbnRlbnQgbWFuYWdlbWVudCBzeXN0ZW0gKENNUykgYW5k
IHdlYiBhcHBsaWNhdGlvbiBmcmFtZXdvcmsgd3JpdHRlbiBpbiBDIyBBU1Au
TkVUCiogW04yQ01TXShodHRwczovL2dpdGh1Yi5jb20vbjJjbXMvbjJjbXMp
IC0gT3BlbiBzb3VyY2UsIGxpZ2h0d2VpZ2h0LCBjb2RlLWZpcnN0IENNUyBh
YmxlIHRvIHNlYW1sZXNzbHkgaW50ZWdyYXRlIGludG8gYW55IE1WQyBwcm9q
ZWN0LgoqIFtPcmNoYXJkIF0oaHR0cHM6Ly9naXRodWIuY29tL09yY2hhcmRD
TVMvT3JjaGFyZCkgLSBGcmVlLCBvcGVuIHNvdXJjZSwgY29tbXVuaXR5LWZv
Y3VzZWQgcHJvamVjdCBhaW1lZCBhdCBkZWxpdmVyaW5nIGFwcGxpY2F0aW9u
cyBhbmQgcmV1c2FibGUgY29tcG9uZW50cyBvbiB0aGUgQVNQLk5FVCBwbGF0
Zm9ybQoqIFtQaXJhbmhhIENNU10oaHR0cHM6Ly9naXRodWIuY29tL1BpcmFu
aGFDTVMvUGlyYW5oYSkgLSBQaXJhbmhhIGlzIHRoZSBmdW4sIGZhc3QgYW5k
IGxpZ2h0d2VpZ2h0IC5ORVQgZnJhbWV3b3JrIGZvciBkZXZlbG9waW5nIGNt
cy1iYXNlZCB3ZWIgYXBwbGljYXRpb25zIHdpdGggYW4gZXh0cmEgYml0ZS4g
SXQncyBidWlsdCBvbiBBU1AuTkVUIE1WQyBhbmQgV2ViIFBhZ2VzIGFuZCBp
cyBmdWxseSBjb21wYXRpYmxlIHdpdGggYm90aCBWaXN1YWwgU3R1ZGlvIGFu
ZCBXZWJNYXRyaXguIGh0dHBzOi8vcGlyYW5oYWNtcy5vcmcKKiBbVW1icmFj
b10oaHR0cHM6Ly9naXRodWIuY29tL3VtYnJhY28vVW1icmFjby1DTVMpIC0g
VW1icmFjbyBpcyBhIGZyZWUgb3BlbiBzb3VyY2UgQ29udGVudCBNYW5hZ2Vt
ZW50IFN5c3RlbSBidWlsdCBvbiB0aGUgQVNQLk5FVCBwbGF0Zm9ybQoqIFtC
ZXR0ZXJDTVNdKGh0dHA6Ly93d3cuYmV0dGVyY21zLmNvbSkgLSBPcGVuIFNv
dXJjZSAuTkVUIEludHVpdGl2ZSBVc2VyIEludGVyZmFjZSBmb3IgRGV2ZWxv
cGVyIGFuZCBQdWJsaXNoZXIKKiBbRG90TmV0TnVrZV0oaHR0cHM6Ly93d3cu
ZG5uc29mdHdhcmUuY29tL2NvbW11bml0eS9kb3dubG9hZCkgLSBETk4gUGxh
dGZvcm0gaXMgb3VyIGZyZWUsIG9wZW4gc291cmNlIHdlYiBDTVMgYW5kIHRo
ZSBmb3VuZGF0aW9uIG9mIGV2ZXJ5IHByb2Zlc3Npb25hbCBETk4gc29sdXRp
b24uIE92ZXIgNzUwLDAwMCBvcmdhbml6YXRpb25zIHdvcmxkd2lkZSBoYXZl
IGJ1aWx0IHdlYnNpdGVzIHBvd2VyZWQgYnkgdGhlIEROTiBQbGF0Zm9ybS4K
KiBbQmxvZ0VuZ2luZS5ORVRdKGh0dHBzOi8vZ2l0aHViLmNvbS9yeHR1ci9C
bG9nRW5naW5lLk5FVCkgLSBTaW1wbGUgYnV0IGZ1bGwgZmVhdHVyZWQgQVNQ
Lk5FVCBibG9nCgojIyBDb2RlIEFuYWx5c2lzIGFuZCBNZXRyaWNzCgoqIFsu
TkVUIENvbXBpbGVyIFBsYXRmb3JtICgiUm9zbHluIikgQW5hbHl6ZXJzXSho
dHRwczovL2dpdGh1Yi5jb20vZG90bmV0L3Jvc2x5bi1hbmFseXplcnMpIC0g
QSBudW1iZXIgb2YgUm9zbHluIGRpYWdub3N0aWMgYW5hbHl6ZXJzIGluaXRp
YWxseSBkZXZlbG9wZWQgdG8gaGVscCBmbGVzaCBvdXQgdGhlIGRlc2lnbiBh
bmQgaW1wbGVtZW50YXRpb24gb2YgdGhlIHN0YXRpYyBhbmFseXNpcyBBUElz
LgoqIFtORGVwZW5kXShodHRwczovL3d3dy5uZGVwZW5kLmNvbSkgLSBpcyBh
IFZpc3VhbCBTdHVkaW8gYW5kIFZTIFRlYW0gU2VydmljZXMgZXh0ZW5zaW9u
IHRoYXQgZXN0aW1hdGVzIHlvdXIgLk5FVCBjb2RlIHF1YWxpdHkgYW5kIFRl
Y2huaWNhbC1EZWJ0LCB0aGF0IGxldHMgY3JlYXRlIGNvZGUgcnVsZXMgd2l0
aCBDIyBMSU5RIHN5bnRheCwgdmlzdWFsaXplIGNvZGUgc3RydWN0dXJlIGFu
ZCBmb2N1cyBvbiBjaGFuZ2VzIGFuZCBldm9sdXRpb24uICoqWyRdKioKKiBb
QXBwLk1ldHJpY3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9BcHBNZXRyaWNzL0Fw
cE1ldHJpY3MpIC0gQXBwIE1ldHJpY3MgaXMgYW4gb3Blbi1zb3VyY2UgYW5k
IGNyb3NzLXBsYXRmb3JtIC5ORVQgbGlicmFyeSB1c2VkIHRvIHJlY29yZCBh
bmQgcmVwb3J0IG1ldHJpY3Mgd2l0aGluIGFuIGFwcGxpY2F0aW9uIGFuZCBy
ZXBvcnRzIGl0J3MgaGVhbHRoLiBTZWUgdGhlIFtkb2NzXShodHRwczovL3d3
dy5hcHAtbWV0cmljcy5pby8pIGZvciBtZSBkZXRhaWxzLgoqIFtDb2RlTWFp
ZF0oaHR0cC8vd3d3LmNvZGVtYWlkLm5ldC8pIC0gVmlzdWFsIHN0dWRpbyBl
eHRlbnNpb24gdG8gY2xlYW51cCwgZGlnIHRocm91Z2ggYW5kIHNpbXBsaWZ5
IEMjLCBDKyssIEYjLCBWQiwgUEhQLCBKU09OLCBYQU1MLCBYTUwsIEFTUCwg
SFRNTCwgQ1NTLCBMRVNTLCBTQ1NTLCBKYXZhU2NyaXB0IGFuZCBUeXBlU2Ny
aXB0IGNvZGluZy4KKiBbU3R5bGVDb3BdKGh0dHBzOi8vZ2l0aHViLmNvbS9T
dHlsZUNvcCkgLSBTdHlsZUNvcCBhbmFseXplcyBDIyBzb3VyY2UgY29kZSB0
byBlbmZvcmNlIGEgc2V0IG9mIHN0eWxlIGFuZCBjb25zaXN0ZW5jeSBydWxl
cwoqIFtHZW5kYXJtZV0oaHR0cHM6Ly9naXRodWIuY29tL3Nwb3VsaW90L2dl
bmRhcm1lKSAtIEV4dGVuc2libGUgcnVsZS1iYXNlZCB0b29sIHRvIGZpbmQg
cHJvYmxlbXMgaW4gLk5FVCBhcHBsaWNhdGlvbnMgYW5kIGxpYnJhcmllcwoq
IFtNZXRyaWNzLU5ldF0oaHR0cHM6Ly9naXRodWIuY29tL1JlY29nbm9zL01l
dHJpY3MuTkVUKSAtIENhcHR1cmluZyBDTFIgYW5kIGFwcGxpY2F0aW9uLWxl
dmVsIG1ldHJpY3MuIFNvIHlvdSBrbm93IHdoYXQncyBnb2luZyBvbi4KKiBb
QXNwTmV0Lk1ldHJpY3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGhhcmR5L2Fz
cG5ldC1tZXRyaWNzKSAtIENhcHR1cmluZyBDTFIsIGFwcGxpY2F0aW9uLWxl
dmVsIHdlYiByZXF1ZXN0IG1ldHJpY3MuIE1pZGRsZXdhcmUgYW5kIGV4dGVu
c2lvbnMgdXNpbmcgTWV0cmljcy1OZXQKKiBbQmVuY2htYXJrRG90TmV0XSho
dHRwczovL2dpdGh1Yi5jb20vZG90bmV0L0JlbmNobWFya0RvdE5ldCkgLSBQ
b3dlcmZ1bCAuTkVUIGxpYnJhcnkgZm9yIGJlbmNobWFya2luZy4KKiBbQ29k
aW5pb25dKGh0dHBzOi8vd3d3LmNvZGluaW9uLmNvbS8pIC0gRW5oYW5jZWQg
c3ludGF4IGhpZ2hsaWdodGluZyBmb3IgQyMgYW5kIHNvbWUgb3RoZXIgIlZp
c3VhbCIgZmVhdHVyZXMuICoqWyRdKioKKiBbTnNEZXBDb3BdKGh0dHBzOi8v
Z2l0aHViLmNvbS9yZWFsdml6dS9Oc0RlcENvcCkgLSBTdGF0aWMgY29kZSBh
bmFseXNpcyB0b29sIHRvIGVuZm9yY2UgbmFtZXNwYWNlIGRlcGVuZGVuY3kg
cnVsZXMgaW4gQyMgcHJvamVjdHMuCgojIyBDb2RlIFNuaXBwZXRzCgoqIFsu
TkVUIEZpZGRsZV0oaHR0cHM6Ly9kb3RuZXRmaWRkbGUubmV0LykgLSBXcml0
ZSwgY29tcGlsZSBhbmQgcnVuIEMjLCBGIyBhbmQgVkIgY29kZSBpbiB0aGUg
YnJvd3Nlci4gVGhlIC5OZXQgZXF1aXZhbGVudCBvZiBKU0ZpZGRsZS4KKiBb
R2lzdGx5bl0oaHR0cHM6Ly9naXN0bHluLmNvbS8pIC0gQ3JlYXRlLCBydW4g
YW5kIHNoYXJlIHlvdXIgZXhlY3V0YWJsZSBDIyBHaXRIdWIgR2lzdHMuCiog
W1RyeVJvc2x5bl0oaHR0cHM6Ly9zaGFycGxhYi5pby8pIC0gUnVuIEMjIGNv
ZGUgdXNpbmcgZGlmZmVyZW50IGJyYW5jaGVzIGFuZCB2ZXJzaW9ucyBvZiBS
b3NseW4uCgojIyBDb21waWxlcnMsIFRyYW5zcGlsZXJzIGFuZCBMYW5ndWFn
ZXMKCiogW0JyaWRnZS5ORVRdKGh0dHBzOi8vZ2l0aHViLmNvbS9icmlkZ2Vk
b3RuZXQvQnJpZGdlKSAtIE9wZW4gU291cmNlIEMjIHRvIEphdmFTY3JpcHQg
Q29tcGlsZXIgaHR0cHM6Ly9icmlkZ2UubmV0LwoqIFtDbG9qdXJlQ0xSXSho
dHRwczovL2dpdGh1Yi5jb20vY2xvanVyZS9jbG9qdXJlLWNscikgLSBBIHBv
cnQgb2YgQ2xvanVyZSB0byB0aGUgQ0xSLCBwYXJ0IG9mIHRoZSBDbG9qdXJl
IHByb2plY3QKKiBbRiNdKGh0dHBzOi8vZ2l0aHViLmNvbS9mc2hhcnAvZnNo
YXJwLykgLSAgVGhlIEYjIGNvbXBpbGVyLCBjb3JlIGxpYnJhcnkgYW5kIHRv
b2xzIC0gYSBmdW5jdGlvbmFsIHByb2dyYW1taW5nIGxhbmd1YWdlIGZvciBz
YWZlciwgZmFzdGVyLCBiZXR0ZXIgY29kZSB3cml0aW5nLgoqIFtIeWJyaWRp
emVyXShodHRwczovL3d3dy5hbHRpbWVzaC5jb20vaHlicmlkaXplci1lc3Nl
bnRpYWxzLykgLSBDSUwgKEMjLCBWQi5OZXQsIEYjKSB0byBDVURBIGNvbXBp
bGVyLiAqKlskXSoqCiogW0lyb25TY2hlbWVdKGh0dHBzOi8vZ2l0aHViLmNv
bS9sZXBwaWUvSXJvblNjaGVtZSkgLSBSNlJTIFNjaGVtZSBjb21waWxlciwg
cnVudGltZSBhbmQgbWFueSBzdGFuZGFyZCBsaWJyYXJpZXMKKiBbSlNJTF0o
aHR0cHM6Ly9naXRodWIuY29tL3NxL0pTSUwpIC0gQ0lMIHRvIEphdmFTY3Jp
cHQgQ29tcGlsZXIgaHR0cDovL2pzaWwub3JnLwoqIFtNb25kXShodHRwczov
L2dpdGh1Yi5jb20vUm9oYW5zaS9Nb25kKSAtIEEgZHluYW1pY2FsbHkgdHlw
ZWQgc2NyaXB0aW5nIGxhbmd1YWdlIHdyaXR0ZW4gaW4gQyMgd2l0aCBhIFJF
UEwsIGRlYnVnZ2VyLCBhbmQgc2ltcGxlIGVtYmVkZGluZyBBUEkuCiogW01v
bm8tYmFzaWNdKGh0dHBzOi8vZ2l0aHViLmNvbS9tb25vL21vbm8tYmFzaWMp
IC0gVmlzdWFsIEJhc2ljIENvbXBpbGVyIGFuZCBSdW50aW1lCiogW05lbWVy
bGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9yc2RuL25lbWVybGUpIC0gTmVtZXJs
ZSBpcyBhIGhpZ2gtbGV2ZWwgc3RhdGljYWxseS10eXBlZCBwcm9ncmFtbWlu
ZyBsYW5ndWFnZSBmb3IgdGhlIC5ORVQgcGxhdGZvcm0uIEl0IG9mZmVycyBm
dW5jdGlvbmFsLCBvYmplY3Qtb3JpZW50ZWQgYW5kIGltcGVyYXRpdmUgZmVh
dHVyZXMuIEl0IGhhcyBhIHNpbXBsZSBDIy1saWtlIHN5bnRheCBhbmQgYSBw
b3dlcmZ1bCBtZXRhLXByb2dyYW1taW5nIHN5c3RlbS4KKiBbTmV0anNdKGh0
dHBzOi8vZ2l0aHViLmNvbS9wcmFlY2xhcnVtL05ldGpzKSAtIC5ORVQgdG8g
VHlwZVNjcmlwdCBhbmQgSmF2YVNjcmlwdCBjb21waWxlci4gUG9ydGFibGUg
Q2xhc3MgTGlicmFyaWVzIHdvcmsgZ3JlYXQgZm9yIHRoaXMuIFlvdSBjYW4g
ZXZlbiBwYXNzIEVYRXMuCiogW1BdKGh0dHBzOi8vZ2l0aHViLmNvbS9wLW9y
Zy9QKSAtIFAgaXMgYSBsYW5ndWFnZSBmb3IgYXN5bmNocm9ub3VzIGV2ZW50
LWRyaXZlbiBwcm9ncmFtbWluZy4KKiBbUGVhY2hQaWVdKGh0dHBzOi8vZ2l0
aHViLmNvbS9wZWFjaHBpZWNvbXBpbGVyL3BlYWNocGllKSAtIFBlYWNoUGll
IGlzIGEgUEhQIGNvbXBpbGVyIGFuZCBydW50aW1lIGZvciAuTkVUIGFuZCAu
TkVUIENvcmUsIHdoaWNoIGFsbG93cyBlbnRpcmUgUEhQIGFwcGxpY2F0aW9u
cyB0byBydW4gb24gdGhlIG1vZGVybiwgc2VjdXJlIGFuZCBwZXJmb3JtYW50
IC5ORVQgYW5kIC5ORVQgQ29yZSBwbGF0Zm9ybXMuCiogW1Jvc2x5bl0oaHR0
cHM6Ly9naXRodWIuY29tL2RvdG5ldC9yb3NseW4pIC0gVGhlIC5ORVQgQ29t
cGlsZXIgUGxhdGZvcm0gKCJSb3NseW4iKSBwcm92aWRlcyBvcGVuLXNvdXJj
ZSBDIyBhbmQgVmlzdWFsIEJhc2ljIGNvbXBpbGVycyB3aXRoIHJpY2ggY29k
ZSBhbmFseXNpcyBBUElzLiBJdCBlbmFibGVzIGJ1aWxkaW5nIGNvZGUgYW5h
bHlzaXMgdG9vbHMgd2l0aCB0aGUgc2FtZSBBUElzIHRoYXQgYXJlIHVzZWQg
YnkgVmlzdWFsIFN0dWRpby4KKiBbVGVzdHVyYS5Db2RlXShodHRwczovL2dp
dGh1Yi5jb20vVGVzdHVyYS9UZXN0dXJhLkNvZGUpIC0gV3JhcHBlciBhcm91
bmQgdGhlIFJvc2x5biBBUEkgYW5kIHVzZWQgZm9yIGdlbmVyYXRpb24sIHNh
dmluZyBhbmQgY29tcGlsaW5nIEMjIGNvZGUuIEl0IHByb3ZpZGVzIG1ldGhv
ZHMgYW5kIGhlbHBlcnMgdG8gZ2VuZXJhdGUgY2xhc3NlcywgbWV0aG9kcywg
c3RhdGVtZW50cyBhbmQgZXhwcmVzc2lvbnMuCiogW1Zpc3VhbEZTaGFycF0o
aHR0cHM6Ly9naXRodWIuY29tL01pY3Jvc29mdC92aXN1YWxmc2hhcnApIC0g
VGhlIFZpc3VhbCBGIyBjb21waWxlciBhbmQgdG9vbHMKKiBbRmFibGVdKGh0
dHBzOi8vZ2l0aHViLmNvbS9mYWJsZS1jb21waWxlci9GYWJsZSkgLSBGIyB0
byBKYXZhU2NyaXB0IENvbXBpbGVyCiogW0xpbnFPcHRpbWl6ZXJdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9uZXNzb3MvTGlucU9wdGltaXplcikgLSBBbiBhdXRv
bWF0aWMgcXVlcnkgb3B0aW1pemVyLWNvbXBpbGVyIGZvciBTZXF1ZW50aWFs
IGFuZCBQYXJhbGxlbCBMSU5RCiogW1Jvc2x5bi1saW5xLXJld3JpdGVdKGh0
dHBzOi8vZ2l0aHViLmNvbS9hbnRpdWZvL3Jvc2x5bi1saW5xLXJld3JpdGUp
IC0gQ29tcGlsZXMgQyMgY29kZSBieSBmaXJzdCByZXdyaXRpbmcgdGhlIHN5
bnRheCB0cmVlcyBvZiBMSU5RIGV4cHJlc3Npb25zIHVzaW5nIHBsYWluIHBy
b2NlZHVyYWwgY29kZSwgbWluaW1pemluZyBhbGxvY2F0aW9ucyBhbmQgZHlu
YW1pYyBkaXNwYXRjaC4KKiBbSXJvbiBweXRob25dKGh0dHBzOi8vZ2l0aHVi
LmNvbS9Jcm9uTGFuZ3VhZ2VzL2lyb25weXRob24yKSAtIEEgcHl0aG9uIDIg
aW1wbGVtZW50YXRpb24gdGhhdCBpcyBpbnRlZ3JhdGVkIHdpdGggdGhlIGRv
dCBuZXQgZnJhbWV3b3JrLgoqIFtBbXBsaWZpZXIuTkVUXShodHRwczovL2dp
dGh1Yi5jb20vdGVjaC1xdWFudHVtL0FtcGxpZmllci5ORVQpIC0gV3JpdGUg
YW5kIGNvbXBpbGUgeW91ciBvd24ga2VybmVsIGZ1bmN0aW9uIHVzaW5nIEMj
IGFuZCBBbXBsaWZpZXIgd2lsbCB0YWtlIGNhcmUgb2YgcnVubmluZyBpdCBv
biB5b3VyIGZhdm9yaXRlIGhhcmR3YXJlLiBBbXBsaWZpZXIgYWxsb3dzIC5O
RVQgZGV2ZWxvcGVycyB0byBlYXNpbHkgcnVuIGNvbXBsZXggYXBwbGljYXRp
b25zIHdpdGggaW50ZW5zaXZlIG1hdGhlbWF0aWNhbCBjb21wdXRhdGlvbiBv
biBJbnRlbCBDUFUvR1BVLCBOVklESUEsIEFNRCB3aXRob3V0IHdyaXRpbmcg
YW55IGFkZGl0aW9uYWwgQyBrZXJuZWwgY29kZS4gCgojIyBDb21wcmVzc2lv
bgoKKiBbU2hhcnBDb21wcmVzc10oaHR0cHM6Ly9naXRodWIuY29tL2FkYW1o
YXRoY29jay9zaGFycGNvbXByZXNzKSAtIFNoYXJwQ29tcHJlc3MgaXMgYSBj
b21wcmVzc2lvbiBsaWJyYXJ5IGZvciAuTkVUL01vbm8vU2lsdmVybGlnaHQv
V1A3IHRoYXQgY2FuIHVucmFyLCB1bjd6aXAsIHVuemlwLCB1bnRhciB1bmJ6
aXAyIGFuZCB1bmd6aXAgd2l0aCBmb3J3YXJkLW9ubHkgcmVhZGluZyBhbmQg
ZmlsZSByYW5kb20gYWNjZXNzIEFQSXMuIFdyaXRlIHN1cHBvcnQgZm9yIHpp
cC90YXIvYnppcDIvZ3ppcCBhcmUgaW1wbGVtZW50ZWQKKiBbRG90TmV0Wmlw
LlNlbXZlcmRdKGh0dHBzOi8vZ2l0aHViLmNvbS9oYWYvRG90TmV0WmlwLlNl
bXZlcmQpIC0gQW4gb3Blbi1zb3VyY2UgcHJvamVjdCB0aGF0IGRlbGl2ZXJz
IGEgLk5FVCBsaWJyYXJ5IGZvciBoYW5kbGluZyBaSVAgZmlsZXMsIGFuZCBz
b21lIGFzc29jaWF0ZWQgdG9vbHMuIChmb3JrIG9mIFsqKlVubWFpbnRhaW5l
ZCoqIERvdE5ldFppcF0oaHR0cHM6Ly9hcmNoaXZlLmNvZGVwbGV4LmNvbS8/
cD1kb3RuZXR6aXApKQoqIFtTaGFycFppcExpYl0oaHR0cHM6Ly9pY3NoYXJw
Y29kZS5naXRodWIuaW8vU2hhcnBaaXBMaWIvKSAtIGEgWmlwLCBHWmlwLCBU
YXIgYW5kIEJaaXAyIGxpYnJhcnkgd3JpdHRlbiBlbnRpcmVseSBpbiBDIyBm
b3IgdGhlIC5ORVQgcGxhdGZvcm0KKiBbU25hcHB5IGZvciBXaW5kb3dzXSho
dHRwczovL3NuYXBweS5tYWNoaW5lem9vLmNvbS8pIC0gU25hcHB5IGNvbXBy
ZXNzaW9uIGxpYnJhcnkgZm9yIC5ORVQgYmFrZWQgb24gUC9JbnZva2UKKiBb
U25hcHB5LlNoYXJwXShodHRwczovL2dpdGh1Yi5jb20vamVmZmVzcC9TbmFw
cHkuU2hhcnApIC0gQW4gaW1wbGVtZW50YXRpb24gb2YgR29vZ2xlJ3MgU25h
cHB5IGNvbXByZXNzaW9uIGFsZ29yaXRobSBpbiBDIy4KCiMjIENvbnRpbnVv
dXMgSW50ZWdyYXRpb24KKiBbVGVhbUNpdHldKGh0dHBzOi8vd3d3LmpldGJy
YWlucy5jb20vdGVhbWNpdHkvKSAtIFJlYWR5IHRvIHdvcmssIGV4dGVuc2li
bGUgYW5kIGRldmVsb3Blci1mcmllbmRseSBidWlsZCBzZXJ2ZXLigInigJTi
gIlvdXQgb2YgdGhlIGJveCAqKlskXSoqCiogW015R2V0XShodHRwczovL3d3
dy5teWdldC5vcmcvKSAtIENvbnRpbnVvdXMgSW50ZWdyYXRpb24gYW5kIERl
cGxveW1lbnQsIEhvc3RlZCBQYWNrYWdlIFJlcG9zaXRvcnkgZm9yIE51R2V0
LCBOUE0sIEJvd2VyIGFuZCBWU0lYICoqWyRdKioKKiBbQXBwVmV5b3JdKGh0
dHBzOi8vd3d3LmFwcHZleW9yLmNvbS8pIC0gLk5FVCBDb250aW51b3VzIElu
dGVncmF0aW9uIGFuZCBEZXBsb3ltZW50IGFzIGEgc2VydmljZS4gKipbJF0q
KiAqKltGcmVlIGZvciBPU1NdKioKCiMjIENyeXB0b2dyYXBoeQoKKiBbQm91
bmN5Q2FzdGxlXShodHRwczovL2JvdW5jeWNhc3RsZS5vcmcvKSAtIFRvZ2V0
aGVyIHdpdGggdGhlIC5OZXQgU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBo
eSwgdGhlIHJlZmVyZW5jZSBpbXBsZW1lbnRhdGlvbiBmb3IgY3J5cHRvZ3Jh
cGhpYyBhbGdvcml0aG1zIG9uIHRoZSBDTFIuCiogW0hhc2hMaWJdKGh0dHBz
Oi8vYXJjaGl2ZS5jb2RlcGxleC5jb20vP3A9aGFzaGxpYikgLSBIYXNoTGli
IGlzIGEgY29sbGVjdGlvbiBvZiBuZWFybHkgYWxsIGhhc2ggYWxnb3JpdGht
cyB5b3UndmUgZXZlciBzZWVuLCBpdCBzdXBwb3J0cyBhbG1vc3QgZXZlcnl0
aGluZyBhbmQgaXMgdmVyeSBlYXN5IHRvIHVzZQoqIFtsaWJzb2RpdW0tbmV0
XShodHRwczovL2dpdGh1Yi5jb20vYWRhbWNhdWRpbGwvbGlic29kaXVtLW5l
dCkgLSBsaWJzb2RpdW0gZm9yIC5ORVQgLSBBIHNlY3VyZSBjcnlwdG9ncmFw
aGljIGxpYnJhcnkKKiBbUGtjczExSW50ZXJvcF0oaHR0cHM6Ly9naXRodWIu
Y29tL1BrY3MxMUludGVyb3AvUGtjczExSW50ZXJvcCkgLSBNYW5hZ2VkIC5O
RVQgd3JhcHBlciBmb3IgdW5tYW5hZ2VkIFBLQ1MjMTEgbGlicmFyaWVzIHRo
YXQgcHJvdmlkZSBhY2Nlc3MgdG8gdGhlIGNyeXB0b2dyYXBoaWMgaGFyZHdh
cmUKKiBbU3RyZWFtQ3J5cHRvcl0oaHR0cHM6Ly9naXRodWIuY29tL2JpdGJl
YW5zL1N0cmVhbUNyeXB0b3IpIC0gU3RyZWFtIGVuY3J5cHRpb24gJiBkZWNy
eXB0aW9uIHdpdGggbGlic29kaXVtIGFuZCBwcm90b2J1ZgoqIFtTZWN1cml0
eURyaXZlbi5JbmZlcm5vXShodHRwczovL2dpdGh1Yi5jb20vc2RyYXBraW4v
U2VjdXJpdHlEcml2ZW4uSW5mZXJubykgLSAuTkVUIGNyeXB0byBsaWJyYXJ5
LiBQcm9mZXNzaW9uYWxseSBhdWRpdGVkLgoKIyMgRGF0YWJhc2UKCiogW0Jy
aWdodHN0YXJEYl0oaHR0cHM6Ly9naXRodWIuY29tL0JyaWdodHN0YXJEQi9C
cmlnaHRzdGFyREIpIC0gQnJpZ2h0c3RhckRCIGlzIGEgbmF0aXZlIC5ORVQg
UkRGIHRyaXBsZSBzdG9yZQoqIFtFdmVudCBTdG9yZV0oaHR0cHM6Ly9naXRo
dWIuY29tL0V2ZW50U3RvcmUvRXZlbnRTdG9yZSkgLSBUaGUgb3Blbi1zb3Vy
Y2UsIGZ1bmN0aW9uYWwgZGF0YWJhc2Ugd2l0aCBDb21wbGV4IEV2ZW50IFBy
b2Nlc3NpbmcgaW4gSmF2YVNjcmlwdC4gaHR0cHM6Ly9ldmVudHN0b3JlLm9y
Zy8KKiBbTGl0ZURCXShodHRwczovL2dpdGh1Yi5jb20vbWJkYXZpZC9MaXRl
REIpIC0gQSAuTkVUIE5vU1FMIERvY3VtZW50IFN0b3JlIGluIGEgc2luZ2xl
IGRhdGEgZmlsZSAtIGh0dHBzOi8vd3d3LmxpdGVkYi5vcmcKKiBbUmF2ZW5E
Ql0oaHR0cHM6Ly9naXRodWIuY29tL3JhdmVuZGIvcmF2ZW5kYikgLSBBIExJ
TlEtZW5hYmxlZCBkb2N1bWVudCBkYXRhYmFzZSBmb3IgLk5FVAoqIFtNYXJ0
ZW5dKGh0dHBzOi8vZ2l0aHViLmNvbS9KYXNwZXJGeC9tYXJ0ZW4pIC0gUG9z
dGdyZVNRTCBhcyBhIGRvY3VtZW50IGRhdGFiYXNlIGFuZCBldmVudCBzdG9y
ZSBmb3IgLk5FVCBhcHBsaWNhdGlvbnMKKiBbUmVhbG0gWGFtYXJpbl0oaHR0
cHM6Ly9naXRodWIuY29tL3JlYWxtL3JlYWxtLWRvdG5ldCkgLSBBIGZhc3Qs
IGVhc3ktdG8tdXNlIGFsdGVybmF0aXZlIHRvIFNRTGl0ZSAmIE9STXMgLSBo
dHRwczovL3JlYWxtLmlvL2RvY3MvZG90bmV0L2xhdGVzdC8KKiBbU3RyZWFt
c3RvbmVdKGh0dHBzOi8vZ2l0aHViLmNvbS95ZXZoZW4vU3RyZWFtc3RvbmUp
IC0gRXZlbnQgc3RvcmUgZm9yIEF6dXJlIFRhYmxlIFN0b3JhZ2UKKiBbSWdu
aXRlXShodHRwczovL2dpdGh1Yi5jb20vYXBhY2hlL2lnbml0ZSkgLSBEaXN0
cmlidXRlZCBpbi1tZW1vcnkgcGxhdGZvcm06IGRvY3VtZW50IGRhdGFiYXNl
IHdpdGggU1FMIGFuZCBMSU5RIHN1cHBvcnQ7IGRpc3RyaWJ1dGVkIGNvbXB1
dGF0aW9uczsgZGlzdHJpYnV0ZWQgc2VydmljZXMgYW5kIGV2ZW50cy4KKiBb
WWVzc3FsXShodHRwczovL2dpdGh1Yi5jb20vc2ViYXN0aWVucm9zL3llc3Nx
bCkgLSBBIC5ORVQgZG9jdW1lbnQgZGF0YWJhc2Ugd29ya2luZyBvbiBhbnkg
UkRCTVMKKiBbSnNvbkZsYXRGaWxlRGF0YVN0b3JlXShodHRwczovL2dpdGh1
Yi5jb20vdHR1L2pzb24tZmxhdGZpbGUtZGF0YXN0b3JlKSAtIFNpbXBsZSBK
U09OIGZsYXQgZmlsZSBkYXRhIHN0b3JlIHdpdGggc3VwcG9ydCBmb3IgdHlw
ZWQgYW5kIGR5bmFtaWMgZGF0YQoKIyMgRGF0YWJhc2UgRHJpdmVycwoKKiBb
TXlTUUwgQ29ubmVjdG9yXShodHRwczovL2Rldi5teXNxbC5jb20vZG93bmxv
YWRzL2Nvbm5lY3Rvci9uZXQvKSAtIENvbm5lY3Rvci9OZXQgaXMgYSBmdWxs
eS1tYW5hZ2VkIEFETy5ORVQgZHJpdmVyIGZvciBNeVNRTAoqIFtOcGdzcWxd
KGh0dHBzOi8vZ2l0aHViLmNvbS9ucGdzcWwvTnBnc3FsKSAtIC5ORVQgZGF0
YSBwcm92aWRlciBmb3IgUG9zdGdyZVNRTAoqIFtNb25nb0RCXShodHRwczov
L2dpdGh1Yi5jb20vbW9uZ29kYi9tb25nby1jc2hhcnAtZHJpdmVyKSAtIE9m
ZmljaWFsIE1vbmdvREIgQyMgZHJpdmVyCiogW1JldGhpbmtEYi5Ecml2ZXJd
KGh0dHBzOi8vZ2l0aHViLmNvbS9iY2hhdmV6L1JldGhpbmtEYi5Ecml2ZXIv
KSAtIEEgUmV0aGlua0RCIGRhdGFiYXNlIGRyaXZlciBpbiBDIyBzdHJpdmlu
ZyBmb3IgMTAwJSBSZVFMIEFQSSBjb21wYXRpYmlsaXR5IGFuZCBjb21wbGV0
ZW5lc3MuCiogW1NlcnZpY2VTdGFjayBSZWRpc10oaHR0cHM6Ly9naXRodWIu
Y29tL1NlcnZpY2VTdGFjay9TZXJ2aWNlU3RhY2suUmVkaXMpIC0gLk5FVCdz
IGxlYWRpbmcgQyMgUmVkaXMgY2xpZW50CiogW1N0YWNrRXhjaGFuZ2UgUmVk
aXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9TdGFja0V4Y2hhbmdlL1N0YWNrRXhj
aGFuZ2UuUmVkaXMpIC0gR2VuZXJhbCBwdXJwb3NlIFJlZGlzIGNsaWVudCBm
cm9tIFN0YWNrRXhjaGFuZ2UKKiBbQ2Fzc2FuZHJhXShodHRwczovL2dpdGh1
Yi5jb20vZGF0YXN0YXgvY3NoYXJwLWRyaXZlcikgLSBEYXRhU3RheCAuTkVU
IGRyaXZlciBmb3IgQXBhY2hlIENhc3NhbmRyYQoqIFtDb3VjaGJhc2VdKGh0
dHBzOi8vZ2l0aHViLmNvbS9jb3VjaGJhc2UvY291Y2hiYXNlLW5ldC1jbGll
bnQpIC0gT2ZmaWNpYWwgQ291Y2hiYXNlIC5ORVQgY2xpZW50IGxpYnJhcnks
IGJhc2VkIG9uIHRoZSBFbnlpbSBtZW1jYWNoZWQgY2xpZW50CiogW0ZpcmVi
aXJkLk5FVF0oaHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvZmly
ZWJpcmQvKSAtIFRoZSAuTkVUIERhdGEgcHJvdmlkZXIgaXMgd3JpdHRlbiBp
biBDIyBhbmQgcHJvdmlkZXMgYSBoaWdoLXBlcmZvcm1hbmNlLCBuYXRpdmUg
aW1wbGVtZW50YXRpb24gb2YgdGhlIEZpcmViaXJkIEFQSQoqIFtTdG9yYWdl
Lk5ldF0oaHR0cHM6Ly9naXRodWIuY29tL2Fsb25lZ3VpZC9zdG9yYWdlKSAt
IEdlbmVyaWMgc3RvcmFnZSBhYnN0cmFjdGlvbnMgYW5kIGltcGxlbWVudGF0
aW9ucyBmb3IgcG9wdWxhciBjbG91ZCBzdG9yYWdlIHByb3ZpZGVycyBsaWtl
IEFtYXpvbiBTMywgQXp1cmUgU2VydmljZSBCdXMsIEF6dXJlIEV2ZW50IEh1
YiwgQXp1cmUgU3RvcmFnZSwgQXp1cmUgRGF0YSBMYWtlIFN0b3JlIGFuZCBt
YW55IG90aGVycy4KCiMjIERhdGV0aW1lCgoqIFtOb2RhVGltZV0oaHR0cHM6
Ly9naXRodWIuY29tL25vZGF0aW1lL25vZGF0aW1lKSAtIE5vZGEgVGltZSBp
cyBhbiBhbHRlcm5hdGl2ZSBkYXRlIGFuZCB0aW1lIEFQSSBmb3IgLk5FVC4g
SXQgaGVscHMgeW91IHRvIHRoaW5rIGFib3V0IHlvdXIgZGF0YSBtb3JlIGNs
ZWFybHksIGFuZCBleHByZXNzIG9wZXJhdGlvbnMgb24gdGhhdCBkYXRhIG1v
cmUgcHJlY2lzZWx5LiBodHRwczovL25vZGF0aW1lLm9yZy8KKiBbRGF0ZVRp
bWVFeHRlbnNpb25zXShodHRwczovL2dpdGh1Yi5jb20vam9hb21hdG9zc2ls
dmEvRGF0ZVRpbWVFeHRlbnNpb25zKSAtIENvbW1vbiBEYXRlIFRpbWUgb3Bl
cmF0aW9ucyBvbiB0aGUgZm9ybSBvZiBleHRlbnNpb25zIHRvIGBTeXN0ZW0u
RGF0ZVRpbWVgLCBpbmNsdWRpbmcgaG9saWRheXMgYW5kIHdvcmtpbmcgZGF5
cyBjYWxjdWxhdGlvbnMgb24gc2V2ZXJhbCBjdWx0dXJlIGxvY2FsZXMuCiog
W0V4Y2VwdGlvbmxlc3MuRGF0ZVRpbWVFeHRlbnNpb25zXShodHRwczovL2dp
dGh1Yi5jb20vZXhjZXB0aW9ubGVzcy9FeGNlcHRpb25sZXNzLkRhdGVUaW1l
RXh0ZW5zaW9ucykgLSBEYXRlVGltZVJhbmdlLCBCdXNpbmVzcyBEYXkgYW5k
IHZhcmlvdXMgYERhdGVUaW1lYCwgYERhdGVUaW1lT2Zmc2V0YCwgYFRpbWVT
cGFuYCBleHRlbnNpb24gbWV0aG9kcy4KCiMjIERlY29tcGlsYXRpb24KCiog
W2RuU3B5XShodHRwczovL2dpdGh1Yi5jb20vMHhkNGQvZG5TcHkpIC0gb3Bl
bi1zb3VyY2UgLk5FVCBhc3NlbWJseSBicm93c2VyLCBlZGl0b3IsIGRlY29t
cGlsZXIgYW5kIGRlYnVnZ2VyCiogW0lMU3B5XShodHRwczovL2lsc3B5Lm5l
dC8pIC0gSUxTcHkgaXMgdGhlIG9wZW4tc291cmNlIC5ORVQgYXNzZW1ibHkg
YnJvd3NlciBhbmQgZGVjb21waWxlcgoqIFtKdXN0RGVjb21waWxlIEVuZ2lu
ZV0oaHR0cHM6Ly9naXRodWIuY29tL3RlbGVyaWsvSnVzdERlY29tcGlsZUVu
Z2luZSkgLSBUaGUgZGVjb21waWxhdGlvbiBlbmdpbmUgb2YgW0p1c3REZWNv
bXBpbGVdKGh0dHBzOi8vd3d3LnRlbGVyaWsuY29tL3Byb2R1Y3RzL2RlY29t
cGlsZXIuYXNweCkKKiBbZG90UGVla10oaHR0cHM6Ly93d3cuamV0YnJhaW5z
LmNvbS9kZWNvbXBpbGVyLykgLSBGcmVlLW9mLWNoYXJnZSBzdGFuZGFsb25l
IHRvb2wgYmFzZWQgb24gUmVTaGFycGVyJ3MgYnVuZGxlZCBkZWNvbXBpbGVy
LiBJdCBjYW4gcmVsaWFibHkgZGVjb21waWxlIGFueSAuTkVUIGFzc2VtYmx5
IGludG8gZXF1aXZhbGVudCBDIyBvciBJTCBjb2RlLiBJdCBjYW4gY3JlYXRl
IFZpc3VhbCBTdHVkaW8gc29sdXRpb25zIGJhc2VkIG9uIHRoZSBvcmlnaW5h
bCBiaW5hcnkgZmlsZXMgaW4gYSBzdHJhaWdodC1mb3J3YXJkIHdheS4gKipb
UHJvcHJpZXRhcnldKiogKipbRnJlZV0qKgoKIyMgRGVwbG95bWVudAoKKiBb
VW5mb2xkXShodHRwczovL2dpdGh1Yi5jb20vdGhvbWFzdm0vdW5mb2xkKSAt
IFBvd2VyU2hlbGwtYmFzZWQgZGVwbG95bWVudCBzb2x1dGlvbiBmb3IgLk5F
VCB3ZWIgYXBwbGljYXRpb25zCiogW0RiVXBdKGh0dHBzOi8vZ2l0aHViLmNv
bS9EYlVwL0RiVXApIC0gLk5FVCBsaWJyYXJ5IHRoYXQgaGVscHMgeW91IHRv
IGRlcGxveSBjaGFuZ2VzIHRvIFNRTCBTZXJ2ZXIgZGF0YWJhc2VzLiBJdCB0
cmFja3Mgd2hpY2ggU1FMIHNjcmlwdHMgaGF2ZSBiZWVuIHJ1biBhbHJlYWR5
LCBhbmQgcnVucyB0aGUgY2hhbmdlIHNjcmlwdHMgdGhhdCBhcmUgbmVlZGVk
IHRvIGdldCB5b3VyIGRhdGFiYXNlIHVwIHRvIGRhdGUKKiBbT2N0byBQYWNr
XShodHRwczovL2dpdGh1Yi5jb20vT2N0b3B1c0RlcGxveS9PY3RvUGFjaykg
LSBVc2VkIHRvIGJ1aWxkIE51R2V0IHBhY2thZ2VzIG9mIHlvdXIgYXBwbGlj
YXRpb24gZm9yIGRlcGxveW1lbnQgdXNpbmcgdG9vbHMgc3VjaCBhcyBPY3Rv
cHVzIERlcGxveQoKIyMgRGlyZWN0WAoKKiBbU2hhcnBEWF0oaHR0cHM6Ly9n
aXRodWIuY29tL3NoYXJwZHgvU2hhcnBEWCkgLSBTaGFycERYIGlzIGFuIG9w
ZW4tc291cmNlIHByb2plY3QgZGVsaXZlcmluZyB0aGUgZnVsbCBEaXJlY3RY
IEFQSSBmb3IgLk5FVCBvbiBhbGwgV2luZG93cyBwbGF0Zm9ybXMsIGFsbG93
aW5nIHRoZSBkZXZlbG9wbWVudCBvZiBoaWdoIHBlcmZvcm1hbmNlIGdhbWUs
IDJEIGFuZCAzRCBncmFwaGljcyByZW5kZXJpbmcgYXMgd2VsbCBhcyByZWFs
LXRpbWUgc291bmQgYXBwbGljYXRpb24uCgojIyBEaXN0cmlidXRlZCBDb21w
dXRpbmcKCiogW09ybGVhbnNdKGh0dHBzOi8vZ2l0aHViLmNvbS9kb3RuZXQv
b3JsZWFucykgLSBPcmxlYW5zIGlzIGEgZnJhbWV3b3JrIHRoYXQgcHJvdmlk
ZXMgYSBzdHJhaWdodC1mb3J3YXJkIGFwcHJvYWNoIHRvIGJ1aWxkaW5nIGRp
c3RyaWJ1dGVkIGhpZ2gtc2NhbGUgY29tcHV0aW5nIGFwcGxpY2F0aW9ucywg
d2l0aG91dCB0aGUgbmVlZCB0byBsZWFybiBhbmQgYXBwbHkgY29tcGxleCBj
b25jdXJyZW5jeSBvciBvdGhlciBzY2FsaW5nIHBhdHRlcm5zLiBJdCB3YXMg
Y3JlYXRlZCBieSBNaWNyb3NvZnQgUmVzZWFyY2guCiogW09ybGVhbmtrYV0o
aHR0cHM6Ly9naXRodWIuY29tL09ybGVhbnNDb250cmliL09ybGVhbmtrYSkg
LSBPcmxlYW5ra2EgaXMgYSBmdW5jdGlvbmFsIEFQSSBmb3IgTWljcm9zb2Z0
IE9ybGVhbnMgZnJhbWV3b3JrLiBJdCBpcyBoaWdobHkgc3VpdGFibGUgZm9y
IHNjZW5hcmlvcyB3aGVyZSBoYXZpbmcgY29tcG9zYWJsZSwgdW5pZm9ybSBj
b21tdW5pY2F0aW9uIGludGVyZmFjZSBpcyBwcmVmZXJhYmxlLCBzdWNoIGFz
OiBDUVJTLCBldmVudC1zb3VyY2luZywgcmUtcm91dGluZywgRlNNLCBldGMu
IEFkZGl0aW9uYWwgQVBJIGF2YWlhYmxlIGZvciBGIyBjYWxsZWQgT3JsZWFu
a2thLkZTaGFycC4KKiBbQWtrYS5uZXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9h
a2thZG90bmV0L2Fra2EubmV0KSAtIEFra2EuTkVUIGlzIGEgcG9ydCBvZiB0
aGUgcG9wdWxhciBKYXZhL1NjYWxhIGZyYW1ld29yayBBa2thIHRvIC5ORVQu
IFRoaXMgaXMgYSBjb21tdW5pdHktZHJpdmVuIHBvcnQgYW5kIGlzIG5vdCBh
ZmZpbGlhdGVkIHdpdGggVHlwZXNhZmUgd2hvIG1ha2VzIHRoZSBvcmlnaW5h
bCBKYXZhL1NjYWxhIHZlcnNpb24uCiogW1plYnVzXShodHRwczovL2dpdGh1
Yi5jb20vQWJjLUFyYml0cmFnZS9aZWJ1cykgLSBaZWJ1cyBpcyBhIGxpZ2h0
d2VpZ2h0LCBoaWdobHkgdmVyc2F0aWxlLCBwZWVyLXRvLXBlZXIgc2Vydmlj
ZSBidXMsIGJ1aWx0IHdpdGggQ1FSUyBwcmluY2lwbGVzIGluIG1pbmQuIEl0
IGFsbG93cyBhcHBsaWNhdGlvbnMgdG8gY29tbXVuaWNhdGUgd2l0aCBlYWNo
IG90aGVyIGluIGEgZmFzdCBhbmQgZWFzeSBtYW5uZXIuIE1vc3Qgb2YgdGhl
IGNvbXBsZXhpdHkgaXMgaGlkZGVuIGluIHRoZSBsaWJyYXJ5IGFuZCB5b3Ug
Y2FuIGZvY3VzIG9uIHdyaXRpbmcgY29kZSB0aGF0IG1hdHRlcnMgdG8geW91
LCBub3QgZGVidWdnaW5nIG1lc3NhZ2luZyBjb2RlLiBBIHZlcnkgZnVuZGFt
ZW50YWwgYmFzZSBmb3IgYW55IGRpc3RyaWJ1dGVkIGFwcGxpY2F0aW9uLgoq
IFtGc1NoZWx0ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9Qcm9sdWNpZC9Gc1No
ZWx0ZXIpIC0gRiMgbGlicmFyeSBmb3IgYXV0aG9yaW5nIFtBcGFjaGUgU3Rv
cm1dKGh0dHBzOi8vc3Rvcm0uYXBhY2hlLm9yZykgY29tcG9uZW50cyBhbmQg
dG9wb2xvZ2llcy4gT2ZmZXJpbmcgaGlnaC1sZXZlbCBhYnN0cmFjdGlvbnMg
Zm9yIGRpc3RyaWJ1dGVkIGFuZCBmYXVsdC10b2xlcmFudCBldmVudCBzdHJl
YW0gcHJvY2Vzc2luZy4KKiBbRm91bmRhdGlvXShodHRwczovL2dpdGh1Yi5j
b20vRm91bmRhdGlvRngvRm91bmRhdGlvI2pvYnMpIC0gUGx1Z2dhYmxlIGZv
dW5kYXRpb24gYmxvY2tzIGZvciBidWlsZGluZyBkaXN0cmlidXRlZCBhcHBz
LgoqIFtNQnJhY2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9tYnJhY2Vwcm9qZWN0
KSAtIEludGVncmF0ZWQgRGF0YSBTY3JpcHRpbmcgZm9yIHRoZSBDbG91ZAoq
IFtwcm90b2FjdG9yLWRvdG5ldF0oaHR0cHM6Ly9naXRodWIuY29tL0FzeW5r
cm9uSVQvcHJvdG9hY3Rvci1kb3RuZXQpIC0gUHJvdG8gQWN0b3IgLSBVbHRy
YSBmYXN0IGRpc3RyaWJ1dGVkIGFjdG9ycyBmb3IgR29sYW5nIGFuZCBDIwoK
IyMgRExSCgoqIFtjbWRdKGh0dHBzOi8vZ2l0aHViLmNvbS9tYW5vamxkcy9j
bWQpIC0gQyMgbGlicmFyeSB0byBydW4gZXh0ZXJuYWwgcHJvZ3JhbXMgaW4g
YSBzaW1wbGVyIHdheS4gRGVtb25zdHJhdGlvbiBvZiAiZHluYW1pYyIgZmVh
dHVyZXMgb2YgQyMuCgojIyBEb2N1bWVudGF0aW9uCgoqIFtTYW5kY2FzdGxl
XShodHRwczovL2dpdGh1Yi5jb20vRVdTb2Z0d2FyZS9TSEZCKSAtIFNhbmRj
YXN0bGUgSGVscCBGaWxlIEJ1aWxkZXIgc2ltaWxhciB0byBORG9jCiogW1No
YXJwRG94XShodHRwczovL2dpdGh1Yi5jb20vR2Vhei9zaGFycERveCkgLSBB
IEMjIGRvY3VtZW50YXRpb24gdG9vbAoqIFtTb3VyY2VCcm93c2VyXShodHRw
czovL2dpdGh1Yi5jb20vS2lyaWxsT3Nlbmtvdi9Tb3VyY2VCcm93c2VyKSAt
IFNvdXJjZSBicm93c2VyIHdlYnNpdGUgZ2VuZXJhdG9yIHRoYXQgcG93ZXJz
IGh0dHBzOi8vcmVmZXJlbmNlc291cmNlLm1pY3Jvc29mdC5jb20gYW5kIGh0
dHA6Ly9zb3VyY2Uucm9zbHluLmlvCiogW1N3YXNoYnVja2xlXShodHRwczov
L2dpdGh1Yi5jb20vZG9tYWluZHJpdmVuZGV2L1N3YXNoYnVja2xlKSAtIFNl
YW1sZXNzbHkgYWRkcyBhIFN3YWdnZXIgdG8gV2ViIEFQSSBwcm9qZWN0cy4K
KiBbRiMgRm9ybWF0dGluZ10oaHR0cHM6Ly9mc3Byb2plY3RzLmdpdGh1Yi5p
by9GU2hhcnAuRm9ybWF0dGluZy8pIC0gVG9vbHMgZm9yIGRvY3VtZW50aW5n
IEYjIGFuZCBDIyBwcm9qZWN0cyBmcm9tIEYjIHNjcmlwdCBmaWxlcywgTWFy
a2Rvd24gZG9jdW1lbnRzIGFuZCBpbmxpbmUgWE1MIG9yIE1hcmtkb3duIGNv
bW1lbnRzCiogW0RvY0ZYXShodHRwczovL2dpdGh1Yi5jb20vZG90bmV0L2Rv
Y2Z4KSAtIFRvb2xzIGZvciBidWlsZGluZyBhbmQgcHVibGlzaGluZyBBUEkg
ZG9jdW1lbnRhdGlvbiBmb3IgLk5FVCBwcm9qZWN0cwoqIFtEb2NOZXRdKGh0
dHBzOi8vZ2l0aHViLmNvbS9GcmFuc0JvdW1hL0RvY05ldCkgLSBZb3VyIGZy
aWVuZGx5IHN0YXRpYyBkb2N1bWVudGF0aW9uIGdlbmVyYXRvciwgdXNpbmcg
bWFya2Rvd24gZmlsZXMgdG8gYnVpbGQgdGhlIGNvbnRlbnQuCgojIyBFLUNv
bW1lcmNlIGFuZCBQYXltZW50cwoKKiBbUGF5cGFsIE1lcmNoYW50IFNES10o
aHR0cHM6Ly9naXRodWIuY29tL3BheXBhbC9tZXJjaGFudC1zZGstZG90bmV0
KSAtIE9mZmljaWFsIFBheVBhbCBNZXJjaGFudCBTREsgZm9yIC5ORVQKKiBb
Tm9wQ29tbWVyY2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9ub3BTb2x1dGlvbnMv
bm9wQ29tbWVyY2UpIC0gbm9wQ29tbWVyY2UuIEZyZWUgb3Blbi1zb3VyY2Ug
ZS1jb21tZXJjZSBzaG9wcGluZyBjYXJ0IChBU1AuTkVUIENvcmUpCiogW1Nl
cnZpY2VTdGFjay5TdHJpcGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9TZXJ2aWNl
U3RhY2svU3RyaXBlKSAtIFR5cGVkIC5ORVQgY2xpZW50cyBmb3Igc3RyaXBl
LmNvbSBSRVNUIEFQSXMKKiBbU21hcnRTdG9yZU5FVF0oaHR0cHM6Ly9naXRo
dWIuY29tL3NtYXJ0c3RvcmVhZy9TbWFydFN0b3JlTkVUKSAtIEZyZWUgQVNQ
Lk5FVCBNVkMgZS1jb21tZXJjZSBTaG9wcGluZyBDYXJ0IFNvbHV0aW9uIGh0
dHBzOi8vd3d3LnNtYXJ0c3RvcmUuY29tL2VuL25ldAoqIFtTdHJpcGUuTmV0
XShodHRwczovL2dpdGh1Yi5jb20vc3RyaXBlL3N0cmlwZS1kb3RuZXQpIC0g
U3RyaXBlLm5ldCBpcyBhIGZ1bGwgc2VydmljZSAuTkVUIEFQSSBmb3IgaHR0
cHM6Ly9zdHJpcGUuY29tLwoqIFtWaXJ0byBDb21tZXJjZV0oaHR0cHM6Ly9n
aXRodWIuY29tL1ZpcnRvQ29tbWVyY2UvdmMtcGxhdGZvcm0pIC0gVmlydG8g
Q29tbWVyY2UgaXMgdGhlIHNlY29uZCBnZW5lcmF0aW9uIHJlbGVhc2UgYW5k
IGlzIHRoZSBvbmx5IGVudGVycHJpc2UgbGV2ZWwgZS1jb21tZXJjZSBwcm9k
dWN0IGZ1bGx5IGF2YWlsYWJsZSB1bmRlciBPcGVuIFNvdXJjZSBsaWNlbnNl
LiBWaXJ0byBDb21tZXJjZSBpcyBiYXNlZCBvbiAuTkVUIDQuNSB3aXRoIGV4
dGVuc2l2ZSB1c2Ugb2YgTVZDLCBJb0MsIEVGLCBBenVyZSwgQW5ndWxhckpT
IGFuZCBtYW55IG90aGVyIGN1dHRpbmcgZWRnZSB0ZWNobm9sb2dpZXMuIEl0
IGNhbiBiZSBkZXBsb3llZCBpbiBNaWNyb3NvZnQgQ2xvdWQgKEF6dXJlKSwg
QW1hem9uIFdlYiBTZXJ2aWNlcyAoQVdTKSBhbmQgb24tcHJlbWlzZS4gaHR0
cHM6Ly92aXJ0b2NvbW1lcmNlLmNvbQoqIFtTaW1wbENvbW1lcmNlXShodHRw
czovL2dpdGh1Yi5jb20vc2ltcGxjb21tZXJjZS9zaW1wbGNvbW1lcmNlKSAt
IFN1cGVyIHNpbXBsZSBlY29tbWVyY2Ugc3lzdGVtIGJ1aWx0IG9uIC5ORVQg
Q29yZS4gU2ltcGxlIHRvIHVzZSBhbmQgZWFzeSB0byBjdXN0b21pemUuIFRo
YW5rcyB0byAuTkVUIENvcmUsIHlvdSBjYW4gcnVuIHRoZSBTaW1wbENvbW1l
cmNlIG9uIFdpbmRvd3MsIExpbnV4LiBXaXRoIHZhcmlvdXMgUkRCTVM6IE1p
Y3Jvc29mdCBTUUwgU2VydmVyLCBQb3N0Z3JlU1FMLCBNeVNRTAoqIFtHcmFu
ZE5vZGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9ncmFuZG5vZGUvZ3JhbmRub2Rl
KSAtIEdyYW5kTm9kZSBpcyBhIGZ1bmN0aW9uYWwgY3Jvc3MtcGxhdGZvcm0g
ZS1jb21tZXJjZSBzb2x1dGlvbiBkZXZlbG9wZWQgZm9yIHRoZSBtb3N0IGRl
bWFuZGluZyB1c2Vycy4gWW91IGFyZSBhYmxlIHRvIHJ1biBpdCBvbiBhbnkg
c3lzdGVtIC0gTGludXgsIFdpbmRvd3MsIE1hYy4gR3JhbmROb2RlIHN1cHBv
cnRzIERvY2tlciwgc28geW91IGNhbiBpbnN0YWxsIGl0IHdpdGggRG9ja2Vy
IGZvciBMaW51eCBjb250YWluZXJzLiBTY2FsYWJsZSBlLWNvbW1lcmNlIHNv
bHV0aW9uIHdoaWNoIGNhbiBiZSBhZGFwdGVkIGluIGFueSBjb21wYW55IGlu
ZGVwZW5kZW50bHkgZnJvbSBjb21wYW55IHNpemUgb3IgaW5kdXN0cnkuIAoq
IFtTcXVhcmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9zcXVhcmUvY29ubmVjdC1j
c2hhcnAtc2RrKSAtIFRoZSBvZmZpY2lhbCBTREsgZm9yIFNxdWFyZSBwYXlt
ZW50cyBhbmQgb3RoZXIgU3F1YXJlIEFQSXMuCgojIyBFbnZpcm9ubWVudCBN
YW5hZ2VtZW50CgoqIFtEb3RuZXQgQ0xJXShodHRwczovL2dpdGh1Yi5jb20v
ZG90bmV0L2NsaSkgLSBUaGUgY3Jvc3MtcGxhdGZvcm0gLk5FVCBDb3JlIGNv
bW1hbmQtbGluZSB0b29sY2hhaW4gdXRpbGl0eS4KCiMjIEVUTAoKKiBbQ2lu
Y2hvbyBFVExdKGh0dHBzOi8vZ2l0aHViLmNvbS9DaW5jaG9vL0Nob0VUTCkg
LSBFVEwgRnJhbWV3b3JrIGZvciAuTkVUIChSZWFkIC8gV3JpdGUgQ1NWLCBG
bGF0LCBYbWwsIEpTT04sIEtleS1WYWx1ZSBmb3JtYXR0ZWQgZmlsZXMpCiog
W1JlYWN0aXZlIEVUTF0oaHR0cHM6Ly9hcmNoaXZlLmNvZGVwbGV4LmNvbS8/
cD1yZWFjdGl2ZWV0bCkgLSBSZWFjdGl2ZSBFVEwgaXMgYSByZXdyaXRlIG9m
IFJoaW5vIEVUTCB1c2luZyB0aGUgcmVhY3RpdmUgZXh0ZW5zaW9ucyBmb3Ig
Lk5FVAoKIyMgRXZlbnQgYWdncmVnYXRvciBhbmQgbWVzc2VuZ2VyCgoqIFtN
ZWRpYXRvci5OZXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9tYXl1YW55YW5nL01l
ZGlhdG9yLk5ldCkgLSBBIHNpbXBsZSBtZWRpYXRvciBmb3IgLk5FVCBmb3Ig
c2VuZGluZyBjb21tYW5kLCBwdWJsaXNoaW5nIGV2ZW50IGFuZCByZXF1ZXN0
IHJlc3BvbnNlIHdpdGggcGlwZWxpbmVzIHN1cHBvcnRlZAoqIFtNZWRpYXRS
XShodHRwczovL2dpdGh1Yi5jb20vamJvZ2FyZC9NZWRpYXRSKSAtIFNpbXBs
ZSwgdW5hbWJpdGlvdXMgbWVkaWF0b3IgaW1wbGVtZW50YXRpb24gaW4gLk5F
VAoqIFtSeCBFdmVudCBBZ2dyZWdhdG9yXShodHRwczovL21pa2VicmlkZ2Uu
Z2l0aHViLmlvL2FydGljbGVzL2NzaGFycC1kb21haW4tZXZlbnQtYWdncmVn
YXRvci8pIC0gU3VwZXItc2ltcGxlIFJlYWN0aXZlLUV4dGVuc2lvbiBjb2Rl
IGZyb20gUmVhY3RpdmUuRXZlbnRBZ2dyZWdhdG9yCiogW1RpbnlNZXNzZW5n
ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9ncnVtcHlkZXYvVGlueU1lc3Nlbmdl
cikgLSBBIGxpZ2h0d2VpZ2h0IGV2ZW50IGFnZ3JlZ2F0b3IvbWVzc2VuZ2Vy
IGZvciBsb29zZWx5IGNvdXBsZWQgY29tbXVuaWNhdGlvbi4KKiBbWGVyLkNx
cnNdKGh0dHBzOi8vZ2l0aHViLmNvbS9YZXJQcm9qZWN0cy9YZXIuQ3Fycykg
LSBBIHNpbXBsZSBsaWJyYXJ5IGZvciBjcmVhdGluZyBhcHBsaWNhdGlvbnMg
YmFzZWQgb24gdGhlIENRUlMgcGF0dGVybiB3aXRoIHN1cHBvcnQgZm9yIGF0
dHJpYnV0ZSByb3V0aW5nIGFuZCBob3N0ZWQgaGFuZGxlcnMuIERldmVsb3Bl
ZCBpbiBDIyB0YXJnZXRpbmcgLk5FVCBTdGFuZGFyZCAxLjAuCgojIyBFeGNl
cHRpb25zCiogW0V4Y2VwdGlvbmxlc3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9l
eGNlcHRpb25sZXNzL0V4Y2VwdGlvbmxlc3MuTmV0KSAtIEV4Y2VwdGlvbmxl
c3MgLk5FVCBDbGllbnQKCiMjIEV4dGVuc2lvbnMKKiBbRXh0ZW5zaW9uTWV0
aG9kcy5OZXRdKGh0dHA6Ly93d3cuZXh0ZW5zaW9ubWV0aG9kLm5ldC9jc2hh
cnApIC0gU2l0ZSB3aXRoIGNvbGxlY3Rpb24gb2YgZXh0ZW5zaW9uIG1ldGhv
ZHMKKiBbWi5FeHRlbnNpb25NZXRob2RzXShodHRwczovL2dpdGh1Yi5jb20v
enp6cHJvamVjdHMvWi5FeHRlbnNpb25NZXRob2RzKSAtIE92ZXIgYSAxMDAw
IHVzZWZ1bCBleHRlbnNpb24gbWV0aG9kcwoKIyMgRnVuY3Rpb25hbCBwcm9n
cmFtbWluZwoKKiBbbGFuZ3VhZ2UtZXh0XShodHRwczovL2dpdGh1Yi5jb20v
bG91dGh5L2xhbmd1YWdlLWV4dCkgLSBUaGlzIGxpYnJhcnkgdXNlcyBhbmQg
YWJ1c2VzIHRoZSBmZWF0dXJlcyBvZiBDIyA2KyB0byBwcm92aWRlIGEgZnVu
Y3Rpb25hbCAnQmFzZSBjbGFzcyBsaWJyYXJ5JywgdGhhdCwgaWYgeW91IHNx
dWludCwgY2FuIGxvb2sgbGlrZSBleHRlbnNpb25zIHRvIHRoZSBsYW5ndWFn
ZSBpdHNlbGYuIEl0IGFsc28gaW5jbHVkZXMgYW4gJ0VybGFuZyBsaWtlJyBw
cm9jZXNzIHN5c3RlbSAoYWN0b3JzKSB0aGF0IGNhbiBvcHRpb25hbGx5IHBl
cnNpc3QgbWVzc2FnZXMgYW5kIHN0YXRlIHRvIFJlZGlzIChub3RlIHlvdSBj
YW4gdXNlIGl0IHdpdGhvdXQgUmVkaXMgZm9yIGluLWFwcCBtZXNzYWdpbmcp
LiBUaGUgcHJvY2VzcyBzeXN0ZW0gYWRkaXRpb25hbGx5IHN1cHBvcnRzIFJ4
IHN0cmVhbXMgb2YgbWVzc2FnZXMgYW5kIHN0YXRlIGFsbG93aW5nIGZvciBh
IGNvbXBsZXRlIHN5c3RlbSBvZiByZWFjdGl2ZSBldmVudHMgYW5kIG1lc3Nh
Z2UgZGlzcGF0Y2guCiogW09wdGlvbmFsXShodHRwczovL2dpdGh1Yi5jb20v
bmxrbC9PcHRpb25hbCkgLSBBIHJvYnVzdCBvcHRpb24gdHlwZSBmb3IgQyMK
CiMjIEdhbWUKCiogW01vbm9HYW1lXShodHRwczovL2dpdGh1Yi5jb20vTW9u
b0dhbWUvTW9ub0dhbWUpIC0gT25lIGZyYW1ld29yayBmb3IgY3JlYXRpbmcg
cG93ZXJmdWwgY3Jvc3MtcGxhdGZvcm0gZ2FtZXMKKiBbQ29jb3NTaGFycF0o
aHR0cHM6Ly9naXRodWIuY29tL21vbm8vQ29jb3NTaGFycCkgLSBDb2Nvc1No
YXJwIGlzIGEgQyMgaW1wbGVtZW50YXRpb24gb2YgdGhlIENvY29zMkQgYW5k
IENvY29zM0QgQVBJcyB0aGF0IHJ1bnMgb24gYW55IHBsYXRmb3JtIHdoZXJl
IE1vbm9HYW1lIHJ1bnMKKiBbRHVhbGl0eV0oaHR0cHM6Ly9naXRodWIuY29t
L0FkYW1zTGFpci9kdWFsaXR5KSAtIER1YWxpdHkgaXMgYSAyRCBnYW1lIGRl
dmVsb3BtZW50IGZyYW1ld29yay4gRm9jdXNlZCBvbiBtb2R1bGFyaXR5LCBj
b21lcyB3aXRoIGEgdmlzdWFsIGVkaXRvci4KKiBbWGVua29dKGh0dHBzOi8v
eGVua28uY29tLykgLSBYZW5rbyBpcyBhIDJELzNEIGNyb3NzLXBsYXRmb3Jt
IGdhbWUgZW5naW5lIGZlYXR1cmluZyBhIHNjZW5lIGVkaXRvciwgcGFydGlj
bGVzLCBwaHlzaWNhbGx5IGJhc2VkIHJlbmRlcmluZyAoUEJSKSwgc2NyaXB0
aW5nLCBhbmQgbXVjaCBtb3JlCiogW1dhdmUgRW5naW5lXShodHRwczovL3dh
dmVlbmdpbmUubmV0L0VuZ2luZSkgLSBXYXZlIGVuZ2luZSBpcyBhIGZyZWUg
QyMgY29tcG9uZW50LWJhc2VkIG1vZGVybiBnYW1lIGVuZ2luZSB3aGljaCBh
bGxvd3MgeW91IHRvIGNyZWF0ZSBjcm9zcy1wbGF0Zm9ybSBnYW1lcyBzdXBw
b3J0aW5nIEtpbmVjdCwgT2N1bHVzIFJpZnQsIFZ1Zm9yaWEsIENhcmRib2Fy
ZCwgTGVhcCBNb3Rpb24gYW5kIG11Y2ggbW9yZS4gKipbRnJlZV1bUHJvcHJp
ZXRhcnldKioKKiBbVXJob1NoYXJwXShodHRwczovL2dpdGh1Yi5jb20veGFt
YXJpbi91cmhvKSAtIFVyaG9TaGFycCBpcyBhIEMjIGltcGxlbWVudGF0aW9u
IG9mIHRoZSBVcmhvM0QgZ2FtZSBlbmdpbmUgdGhhdCBydW5zIG9uIGlPUywg
TWFjLCBXaW5kb3dzLCBBbmRyb2lkIGFuZCBMaW51eCBzeXN0ZW1zCiogW05l
el0oaHR0cHM6Ly9naXRodWIuY29tL3ByaW1lMzEvTmV6KSAtIE5leiBpcyBh
IGZyZWUgMkQtZm9jdXNlZCBmcmFtZXdvcmsgdGhhdCB3b3JrcyB3aXRoIE1v
bm9HYW1lIGFuZCBGTkEKKiBbQkVQVXBoeXNpY3NdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9iZXB1L2JlcHVwaHlzaWNzMikgLSBCRVBVcGh5c2ljcyBpcyBhIHB1
cmUgQyMgM0QgcGh5c2ljcyBsaWJyYXJ5CgojIyBHSVMKCiAqIFtOZXRUb3Bv
bG9neVN1aXRlXShodHRwczovL2dpdGh1Yi5jb20vTmV0VG9wb2xvZ3lTdWl0
ZS9OZXRUb3BvbG9neVN1aXRlLykgIEEgLk5FVCBHSVMgc29sdXRpb24gdGhh
dCBpcyBmYXN0IGFuZCByZWxpYWJsZSBmb3IgdGhlIC5ORVQgcGxhdGZvcm0K
ICogW1NoYXJwTWFwXShodHRwczovL2dpdGh1Yi5jb20vU2hhcnBNYXApIEFu
IGVhc3ktdG8tdXNlIG1hcHBpbmcgbGlicmFyeSBmb3IgdXNlIGluIHdlYiBh
bmQgZGVza3RvcCBhcHBsaWNhdGlvbnMKICogW09zbVNoYXJwXShodHRwczov
L3d3dy5vc21zaGFycC5jb20vKSAtIEMjIGxpYnJhcnkgdG8gd29yayB3aXRo
IE9wZW5TdHJlZXRNYXAgKE9TTSkgZGF0YS4gUHJvdmlkZXMgcmVhZGluZywg
d3JpdGluZyBhbmQgcm91dGUtcGxhbm5pbmcgZm9yIE9TTSBkYXRhLgogKiBb
R2VvSlNPTjRFbnRpdHlGcmFtZXdvcmtdKGh0dHBzOi8vZ2l0aHViLmNvbS9h
bGF0YXMvR2VvSlNPTjRFbnRpdHlGcmFtZXdvcmspIC0gQSBsaWJyYXJ5IHRv
IGNyZWF0ZSBHZW9KU09OIGZyb20gRW50aXR5IEZyYW1ld29yayBTcGF0aWFs
IERhdGEgb3IgV2VsbC1Lbm93biBUZXh0IChXS1QpIGlucHV0cy4KICogW0dl
b0pTT04uTkVUXShodHRwczovL2dpdGh1Yi5jb20vR2VvSlNPTi1OZXQvR2Vv
SlNPTi5OZXQpIC0gLk5ldCBsaWJyYXJ5IGZvciBHZW9KU09OIHR5cGVzICYg
Y29ycmVzcG9uZGluZyBKc29uLk5ldCAoZGUpc2VyaWFsaXplcnMKICogW0Nv
b3JkaW5hdGVTaGFycF0oaHR0cHM6Ly9naXRodWIuY29tL1Ryb25hbGQvQ29v
cmRpbmF0ZVNoYXJwKSAtIEVhc2lseSBwYXJzZSBvciBjb252ZXJ0IGNvb3Jk
aW5hdGUgZm9ybWF0cyBhbmQgY2FsY3VsYXRlIGxvY2F0aW9uIGJhc2VkIHNv
bGFyL2x1bmFyIGluZm9ybWF0aW9uLgoKIyMgR2l0IFRvb2xzCgoqIFtCb25v
Ym8gR2l0IFNlcnZlcl0oaHR0cHM6Ly9naXRodWIuY29tL2pha3ViZ2FyZmll
bGQvQm9ub2JvLUdpdC1TZXJ2ZXIpIC0gQm9ub2JvIEdpdCBTZXJ2ZXIgZm9y
IFdpbmRvd3MgaXMgYSB3ZWIgYXBwbGljYXRpb24geW91IGNhbiBpbnN0YWxs
IG9uIHlvdXIgSUlTIGFuZCBlYXNpbHkgbWFuYWdlIGFuZCBjb25uZWN0IHRv
IHlvdXIgR2l0IHJlcG9zaXRvcmllcy4gaHR0cHM6Ly9ib25vYm9naXRzZXJ2
ZXIuY29tLwoqIFtHaXRFeHRlbnNpb25zXShodHRwczovL2dpdGh1Yi5jb20v
Z2l0ZXh0ZW5zaW9ucy9naXRleHRlbnNpb25zKSAtIEdpdEV4dGVuc2lvbnMg
aXMgYSBzaGVsbCBleHRlbnNpb24sIGEgVmlzdWFsIFN0dWRpbyAyMDA4LzIw
MTAvMjAxMi8yMDEzIHBsdWdpbiBhbmQgYSBzdGFuZGFsb25lIEdpdCByZXBv
c2l0b3J5IHRvb2wuIGh0dHBzOi8vZ2l0ZXh0ZW5zaW9ucy5naXRodWIuaW8v
CiogW0dpdExpbmtdKGh0dHBzOi8vZ2l0aHViLmNvbS9HaXRUb29scy9HaXRM
aW5rKSAtIGxldCdzIHVzZXJzIHN0ZXAgdGhyb3VnaCB0aGVpciBjb2RlIGhv
c3RlZCBvbiBHaXRIdWIgb3IgQml0QnVja2V0CiogW0dpdFZlcnNpb25dKGh0
dHBzOi8vZ2l0aHViLmNvbS9HaXRUb29scy9HaXRWZXJzaW9uKSAtIEdlbmVy
YXRlIGEgU2VtYW50aWMgVmVyc2lvbiBOdW1iZXIgYmFzZWQgb24gdGhlIHN0
YXRlIG9mIHlvdXIgR2l0IHJlcG9zaXRvcnkKKiBbTGliR2l0MlNoYXJwXSho
dHRwczovL2dpdGh1Yi5jb20vbGliZ2l0Mi9saWJnaXQyc2hhcnApIC0gTGli
R2l0MlNoYXJwIGJyaW5ncyBhbGwgdGhlIG1pZ2h0IGFuZCBzcGVlZCBvZiBs
aWJnaXQyLCBhIG5hdGl2ZSBHaXQgaW1wbGVtZW50YXRpb24sIHRvIHRoZSBt
YW5hZ2VkIHdvcmxkIG9mIC5ORVQgYW5kIE1vbm8uCiogW0dpdFJlYWQuTmV0
XShodHRwczovL2dpdGh1Yi5jb20va2luZ3NpbW15L0dpdFJlYWQuTmV0KSAt
IEdpdFJlYWQuTmV0IGlzIGEgLk5FVCBTdGFuZGFyZCBsaWJyYXJ5IHdoaWNo
IGFsbG93cyB5b3UgdG8gdmVyeSBlYXNpbHkgaW50ZXJyb2dhdGUgYSBHaXQg
cmVwb3NpdG9yeSB0aGF0IHlvdSBoYXZlIG9uIGRpc2suIEl0IGFsbG93cyB5
b3UgdG8gZW51bWVyYXRlIHRoZSBjb21taXQgbG9nLCBjb3VudCBsaW5lcyBw
ZXIgZmlsZSBhbmQgbGlzdCBmaWxlcyBjaGFuZ2VkIGJ5IGEgY29tbWl0Lgoq
IFtOR2l0XShodHRwczovL2dpdGh1Yi5jb20vbW9uby9uZ2l0KSAtIE5HaXQg
aXMgYSBwb3J0IG9mIEpHaXQgdG8gQyMKKiBbcG9zaC1naXRdKGh0dHBzOi8v
Z2l0aHViLmNvbS9kYWhsYnlrL3Bvc2gtZ2l0KSAtIEEgUG93ZXJTaGVsbCBl
bnZpcm9ubWVudCBmb3IgR2l0CiogW1JlcG9aXShodHRwczovL2dpdGh1Yi5j
b20vYXdhZXNjaGVyL1JlcG9aKSAtIEEgR2l0IHJlcG9zaXRvcnkgaW5mb3Jt
YXRpb24gYWdncmVnYXRvciB3aXRoIFdpbmRvd3MgRXhwbG9yZXIgJiBDTEkt
ZW5oYW5jZW1lbnRzCiogW0dpdCBDcmVkZW50aWFsIE1hbmFnZXIgZm9yIFdp
bmRvd3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9NaWNyb3NvZnQvR2l0LUNyZWRl
bnRpYWwtTWFuYWdlci1mb3ItV2luZG93cykgLSBIZWxwcyBzb2x2aW5nIGlz
c3VlcyBvZiBjcmVkZW50aWFscywgbWFkZSBieSBNaWNyb3NvZnQKCiMjIEdy
YXBoaWNzCgoqIFtMaWJUZXNzRG90TmV0XShodHRwczovL2dpdGh1Yi5jb20v
c3BlcHMvTGliVGVzc0RvdE5ldCkgLSAuTkVUIHBvcnQgb2YgdGhlIGZhbW91
cyBHTFUgVGVzc2VsbGF0b3IsIHRyaWFuZ3VsYXRlcyBwb2x5Z29ucwoqIFtP
eHlwbG90XShodHRwczovL2dpdGh1Yi5jb20vb3h5cGxvdC8pIC0gT3h5UGxv
dCBpcyBhIGNyb3NzLXBsYXRmb3JtIHBsb3R0aW5nIGxpYnJhcnkgZm9yIC5O
RVQKKiBbT3BlblRLXShodHRwczovL2dpdGh1Yi5jb20vb3BlbnRrL29wZW50
aykgLSBUaGUgT3BlbiBUb29sa2l0IGlzIGFuIGFkdmFuY2VkLCBsb3ctbGV2
ZWwgQyMgbGlicmFyeSB0aGF0IHdyYXBzIE9wZW5HTCwgT3BlbkNMIGFuZCBP
cGVuQUwKKiBbTkdyYXBoaWNzXShodHRwczovL2dpdGh1Yi5jb20vcHJhZWNs
YXJ1bS9OR3JhcGhpY3MpIC0gTkdyYXBoaWNzIGlzIGEgY3Jvc3MtcGxhdGZv
cm0gbGlicmFyeSBmb3IgcmVuZGVyaW5nIHZlY3RvciBncmFwaGljcyBvbiAu
TkVUCiogW0xpdmUtQ2hhcnRzXShodHRwczovL2dpdGh1Yi5jb20vTGl2ZS1D
aGFydHMvTGl2ZS1DaGFydHMpIC0gQW4gQW5pbWF0ZWQsIE1WVk0gb3JpZW50
ZWQgYW5kIG1vZGVybiBjaGFydGluZyBsaWJyYXJ5CiogW0hlbGl4IFRvb2xr
aXRdKGh0dHBzOi8vd3d3LmhlbGl4LXRvb2xraXQub3JnKSAtIEhlbGl4IFRv
b2xraXQgaXMgYSBjb2xsZWN0aW9uIG9mIDNEIGNvbXBvbmVudHMgZm9yIC5O
RVQKKiBbQXNzaW1wTmV0XShodHRwczovL2JpdGJ1Y2tldC5vcmcvU3Rhcm5p
Y2svYXNzaW1wbmV0KSAtIEEgY3Jvc3MtcGxhdGZvcm0gLk5FVCBTdGFuZGFy
ZCB3cmFwcGVyIGZvciB0aGUgT3BlbiBBc3NldCBJbXBvcnRlciAoIkFzc2lt
cCIpLiBUaGUgbGlicmFyeSBlbmFibGVzIGltcG9ydGluZywgcHJvY2Vzc2lu
ZywgYW5kIGV4cG9ydGluZyBvZiAzRCBtb2RlbHMgZm9yIHJlbmRlcmluZyBp
biBncmFwaGljcy9nYW1lIGFwcGxpY2F0aW9ucy4gT3ZlciA0MCBmb3JtYXRz
IGFyZSBzdXBwb3J0ZWQgZm9yIGltcG9ydGluZyAoZS5nLiBPQkosIEZCWCwg
R0xURiwgM0RTLCBDb2xsYWRhKSBhbmQgYSBzdWJzZXQgb2YgdGhvc2UgZm9y
bWF0cyBjYW4gYmUgZXhwb3J0ZWQgdG8gKGUuZy4gT0JKLCBHTFRGLCAzRFMs
IENvbGxhZGEpLiBNZXNoIHByb2Nlc3NpbmcgZmVhdHVyZXMgYWxsb3cgZm9y
IG1lc2ggZGF0YSB0byBiZSBnZW5lcmF0ZWQgb3Igb3B0aW1pemVkIGZvciBy
ZWFsLXRpbWUgcmVuZGVyaW5nLgoqIFtWZWxkcmlkXShodHRwczovL2dpdGh1
Yi5jb20vbWVsbGlub2UvdmVsZHJpZCkgLSBBIGxvdy1sZXZlbCwgcG9ydGFi
bGUgZ3JhcGhpY3MgYW5kIGNvbXB1dGUgbGlicmFyeSBmb3IgLk5FVAoKIyMg
R1VJCgoqIFtIYW5keUNvbnRyb2xdKGh0dHBzOi8vZ2l0aHViLmNvbS9IYW5k
eU9yZy9IYW5keUNvbnRyb2wpIC0gQ29udGFpbnMgc29tZSBzaW1wbGUgYW5k
IGNvbW1vbmx5IHVzZWQgV1BGIGNvbnRyb2xzCiogW1F0U2hhcnBdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9kZG9icmV2L1F0U2hhcnApIC0gTW9uby8uTkVUIEJp
bmRpbmdzIGZvciBRdAoqIFtRbWwuTmV0XShodHRwczovL2dpdGh1Yi5jb20v
cW1sbmV0L3FtbG5ldCkgLSBBIGNyb3NzLXBsYXRmb3JtIFFtbC8uTkVUIGlu
dGVncmF0aW9uIGZvciBNb25vLy5ORVQvLk5FVCBDb3JlCiogW01haEFwcHMu
TWV0cm9dKGh0dHBzOi8vZ2l0aHViLmNvbS9NYWhBcHBzL01haEFwcHMuTWV0
cm8pIC0gVG9vbGtpdCBmb3IgY3JlYXRpbmcgTWV0cm8tc3R5bGVkIFdQRiBh
cHBzCiogW0NhbGxpc3RvXShodHRwczovL2dpdGh1Yi5jb20vdGltaGV1ZXIv
Y2FsbGlzdG8pIC0gQSBjb250cm9sIHRvb2xraXQgZm9yIFdpbmRvd3MgOCBY
QU1MIGFwcGxpY2F0aW9ucy4gQ29udGFpbnMgc29tZSBVSSBjb250cm9scyB0
byBtYWtlIGl0IGVhc2llciB0byBjcmVhdGUgV2luZG93cyBVSSBzdHlsZSBh
cHBzIGZvciB0aGUgV2luZG93cyBTdG9yZSBpbiBhY2NvcmRhbmNlIHdpdGgg
V2luZG93cyBVSSBndWlkZWxpbmVzLgoqIFtPYmplY3RMaXN0Vmlld10oaHR0
cDovL29iamVjdGxpc3R2aWV3LnNvdXJjZWZvcmdlLm5ldC9jcy9pbmRleC5o
dG1sKSAtIE9iamVjdExpc3RWaWV3IGlzIGEgQyMgd3JhcHBlciBhcm91bmQg
YSAuTkVUIExpc3RWaWV3LiBJdCBtYWtlcyB0aGUgTGlzdFZpZXcgbXVjaCBl
YXNpZXIgdG8gdXNlIGFuZCB0ZWFjaGVzIGl0IHNvbWUgbmV3IHRyaWNrcwoq
IFtEb2NrUGFuZWxTdWl0ZV0oaHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJv
amVjdHMvZG9ja3BhbmVsc3VpdGUvKSAtIFRoZSBWaXN1YWwgU3R1ZGlvIGlu
c3BpcmVkIGRvY2tpbmcgbGlicmFyeSBmb3IgLk5FVCBXaW5Gb3JtcwoqIFtB
dmFsb25FZGl0XShodHRwczovL2dpdGh1Yi5jb20vaWNzaGFycGNvZGUvQXZh
bG9uRWRpdCkgLSBUaGUgV1BGLWJhc2VkIHRleHQgZWRpdG9yIGNvbXBvbmVu
dCB1c2VkIGluIFNoYXJwRGV2ZWxvcAoqIFtYV1RdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9tb25vL3h3dCkgLSBBIGNyb3NzLXBsYXRmb3JtIFVJIHRvb2xraXQg
Zm9yIGNyZWF0aW5nIGRlc2t0b3AgYXBwbGljYXRpb25zIHdpdGggLk5FVCBh
bmQgTW9ubwoqIFtHdGsjXShodHRwczovL2dpdGh1Yi5jb20vbW9uby9ndGst
c2hhcnApIC0gR3RrIyBpcyBhIE1vbm8vLk5FVCBiaW5kaW5nIHRvIHRoZSBj
cm9zcyBwbGF0Zm9ybSBHdGsrIEdVSSB0b29sa2l0IGFuZCB0aGUgZm91bmRh
dGlvbiBvZiBtb3N0IEdVSSBhcHBzIGJ1aWx0IHdpdGggTW9ubwoqIFtNYXRl
cmlhbERlc2lnbkluWGFtbFRvb2xraXRdKGh0dHA6Ly9tYXRlcmlhbGRlc2ln
bmlueGFtbC5uZXQvKSAtIFRvb2xraXQgZm9yIGNyZWF0aW5nIE1hdGVyaWFs
IERlc2lnbiBzdHlsZWQgV1BGIGFwcHMKKiBbRXRvLkZvcm1zXShodHRwczov
L2dpdGh1Yi5jb20vcGljb2UvRXRvKSAtIENyb3NzLXBsYXRmb3JtIEdVSSBm
cmFtZXdvcmsgZm9yIGRlc2t0b3AgYW5kIG1vYmlsZSBhcHBsaWNhdGlvbnMg
aW4gLk5FVCBhbmQgTW9ubwoqIFtEcmFnYWJsel0oaHR0cHM6Ly9naXRodWIu
Y29tL0J1dGNoZXJzQm95L0RyYWdhYmx6KSAtIERyYWdhYmxlLCB0ZWFyYWJs
ZSBXUEYgdGFiIGNvbnRyb2wgKHNpbWlsYXIgdG8gQ2hyb21lKSB3aGljaCBz
dXBwb3J0cyBsYXlvdXRzIGFuZCBpcyBmdWxsIHRoZW1lYWJsZSwgaW5jbHVk
aW5nIHRoZW1lc2UgY29tcGF0aWJsZSB3aXRoIE1haEFwcHMgYW5kIE1hdGVy
aWFsIERlc2lnbi4KKiBbRmx1ZW50LlJpYmJvbl0oaHR0cHM6Ly9naXRodWIu
Y29tL2ZsdWVudHJpYmJvbi9GbHVlbnQuUmliYm9uKSAtIEZsdWVudCBSaWJi
b24gQ29udHJvbCBTdWl0ZSBpcyBhIGxpYnJhcnkgdGhhdCBpbXBsZW1lbnRz
IGFuIE9mZmljZS0gYW5kIFdpbmRvd3MgOC1saWtlIFJpYmJvbiBmb3IgV1BG
LgoqIFtPZmZpY2UgUmliYm9uXShodHRwczovL2dpdGh1Yi5jb20vUmliYm9u
V2luRm9ybXMvUmliYm9uV2luRm9ybXMpIC0gQSBsaWJyYXJ5IHRoYXQgaW1w
bGVtZW50cyBNUyBPZmZpY2UgUmliYm9uIGZvciBXaW5Gb3Jtcy4KKiBbTWF0
ZXJpYWxTa2luXShodHRwczovL2dpdGh1Yi5jb20vSWduYWNlTWFlcy9NYXRl
cmlhbFNraW4pIC0gVGhlbWluZyAuTkVUIFdpbkZvcm1zLCBDIyBvciBWQi5O
ZXQsIHRvIEdvb2dsZSdzIE1hdGVyaWFsIERlc2lnbiBwcmluY2lwbGVzLgoq
IFtYYW1hcmluLkZvcm1zXShodHRwczovL2dpdGh1Yi5jb20veGFtYXJpbi9Y
YW1hcmluLkZvcm1zKSAtIEJ1aWxkIG5hdGl2ZSBVSXMgZm9yIGlPUywgQW5k
cm9pZCBhbmQgV2luZG93cyBmcm9tIGEgc2luZ2xlLCBzaGFyZWQgQyMgY29k
ZWJhc2UuCiogW1NjaXRlclNoYXJwXShodHRwczovL2dpdGh1Yi5jb20vcmFt
b24tbWVuZGVzL1NjaXRlclNoYXJwKSAtIENyZWF0ZSAuTkVUIGNyb3NzLXBs
YXRmb3JtIGRlc2t0b3AgYXBwcyB1c2luZyBub3QganVzdCBIVE1MLCBidXQg
YWxsIGZlYXR1cmVzIG9mIFNjaXRlciBlbmdpbmU6IENTUzMsIFNWRywgc2Ny
aXB0aW5nLCBBSkFYLCAmbHQ7dmlkZW8mZ3Q7Li4uIFNjaXRlciBpcyBmcmVl
IGZvciBjb21tZXJjaWFsIHVzZQoqIFtFbXB0eSBLZXlzIFVJXShodHRwOi8v
ZW1wdHlrZXlzLmNvbS91aV9saWJyYXJ5KSAtIE11bHRpLXBsYXRmb3JtIGFu
ZCBtdWx0aS1lbmdpbmUgWEFNTCBiYXNlZCB1c2VyIGludGVyZmFjZSBsaWJy
YXJ5ICoqW0ZyZWVdW1Byb3ByaWV0YXJ5XSoqCiogW1VXUCBDb21tdW5pdHkg
VG9vbGtpdF0oaHR0cHM6Ly9naXRodWIuY29tL3dpbmRvd3MtdG9vbGtpdC9X
aW5kb3dzQ29tbXVuaXR5VG9vbGtpdCkgLSBUaGUgVVdQIENvbW11bml0eSBU
b29sa2l0IGlzIGEgY29sbGVjdGlvbiBvZiBoZWxwZXIgZnVuY3Rpb25zLCBj
dXN0b20gY29udHJvbHMsIGFuZCBhcHAgc2VydmljZXMuIEl0IHNpbXBsaWZp
ZXMgYW5kIGRlbW9uc3RyYXRlcyBjb21tb24gZGV2ZWxvcGVyIHRhc2tzIGJ1
aWxkaW5nIFVXUCBhcHBzIGZvciBXaW5kb3dzIDEwLgoqIFtTY2ludGlsbGFO
RVRdKGh0dHBzOi8vZ2l0aHViLmNvbS9qYWNvYnNsdXNzZXIvU2NpbnRpbGxh
TkVUKSAtIFdpbmRvd3MgRm9ybXMgY29udHJvbCBmb3IgdGhlIFNjaW50aWxs
YSB0ZXh0IGVkaXRvciBjb21wb25lbnQgKFNjaW50aWxsYSBpcyB1c2VkIGJ5
IE5vdGVwYWQrKykKKiBbRmFzdENvbG9yZWRUZXh0Qm94XShodHRwczovL2dp
dGh1Yi5jb20vUGF2ZWxUb3JnYXNob3YvRmFzdENvbG9yZWRUZXh0Qm94KSAt
IEZhc3QgQ29sb3JlZCBUZXh0Qm94IGlzIHRleHQgZWRpdG9yIGNvbXBvbmVu
dCBmb3IgLk5FVC4gQWxsb3dzIHlvdSB0byBjcmVhdGUgY3VzdG9tIHRleHQg
ZWRpdG9yIHdpdGggc3ludGF4IGhpZ2hsaWdodGluZy4gSXQgd29ya3Mgd2Vs
bCB3aXRoIHNtYWxsLCBtZWRpdW0sIGxhcmdlIGFuZCB2ZXJ5LXZlcnkgbGFy
Z2UgZmlsZXMuCiogW0F2YWxvbmlhXShodHRwczovL2dpdGh1Yi5jb20vQXZh
bG9uaWFVSS9BdmFsb25pYSkgLSBBIG11bHRpLXBsYXRmb3JtIC5ORVQgVUkg
ZnJhbWV3b3JrIChmb3JtZXJseSBrbm93biBhcyBQZXJzcGV4KS4KKiBbTW9k
ZXJuIFVJIGZvciBXUEYgLSBNVUldKGh0dHBzOi8vZ2l0aHViLmNvbS9maXJz
dGZsb29yc29mdHdhcmUvbXVpKSAtIFNldCBvZiBjb250cm9scyBhbmQgc3R5
bGVzIHRvIGNvbnZlcnQgV1BGIGFwcGxpY2F0aW9ucyBpbnRvIGEgZ3JlYXQg
bG9va2luZyBNb2Rlcm4gVUkgYXBwcy4KKiBbV2luQXBpXShodHRwczovL2dp
dGh1Yi5jb20vcHJhc2FubmF2bC9XaW5BcGkpIC0gQSBzaW1wbGUsIGRpcmVj
dCwgdWx0cmEtdGhpbiBDTFIgbGlicmFyeSBmb3IgaGlnaC1wZXJmb3JtYW5j
ZSBXaW4zMiBOYXRpdmUgSW50ZXJvcCB3aXRoIGF1dG9tYXRpb24sIHdpbmRv
d2luZywgRGlyZWN0WCwgT3BlbkdMIGFuZCBTa2lhIGhlbHBlcnMuCiogW05l
dXRyb25pdW1dKGh0dHBzOi8vZ2l0aHViLmNvbS9OZXV0cm9uaXVtQ29yZS9O
ZXV0cm9uaXVtKSAtIEJ1aWxkIC5ORVQgZGVza3RvcCBhcHBsaWNhdGlvbnMg
dXNpbmcgSFRNTCwgQ1NTLCBqYXZhc2NyaXB0IGFuZCBNVlZNIGJpbmRpbmdz
IHN1Y2ggYXMgd2l0aCBXUEYuCiogW09vdWldKGh0dHBzOi8vZ2l0aHViLmNv
bS9wcmFlY2xhcnVtL09vdWkpIC0gQSBzbWFsbCBjcm9zcy1wbGF0Zm9ybSBV
SSBsaWJyYXJ5IHRoYXQgYnJpbmdzIHRoZSBzaW1wbGljaXR5IG9mIG5hdGl2
ZSBVSSBkZXZlbG9wbWVudCB0byB0aGUgd2ViCiogW0Fkb25pc1VJXShodHRw
czovL2dpdGh1Yi5jb20vYmVucnVlaGwvYWRvbmlzLXVpKSAtIExpZ2h0d2Vp
Z2h0IFVJIHRvb2xraXQgZm9yIFdQRiBhcHBsaWNhdGlvbnMgb2ZmZXJpbmcg
Y2xhc3NpYyBidXQgZW5oYW5jZWQgV2luZG93cyB2aXN1YWxzLgoKIyMgSFRN
TCBhbmQgQ1NTCgoqIFtBbmdsZVNoYXJwXShodHRwczovL2dpdGh1Yi5jb20v
QW5nbGVTaGFycC9BbmdsZVNoYXJwKSAtIENvbXBsZXRlIEhUTUw1IERPTSBh
bmQgQ1NTMyBPTSBjb25zdHJ1Y3Rpb24KKiBbZG90bGVzc10oaHR0cHM6Ly9n
aXRodWIuY29tL2RvdGxlc3MvZG90bGVzcykgLSAuTkVUIHBvcnQgb2YgdGhl
IFJ1YnkgTGVzcyBDU1MgbGliIGh0dHA6Ly93d3cuZG90bGVzc2Nzcy5vcmcK
KiBbRXhDU1NdKGh0dHBzOi8vZ2l0aHViLmNvbS9UeWxlckJyaW5rcy9FeENT
UykgLSBDU1MzIHBhcnNlciBsaWJyYXJ5IGZvciBDIwoqIFtGbHVlbnRCb290
c3RyYXBdKGh0dHA6Ly9mbHVlbnRib290c3RyYXAuY29tKSAtIE1ha2VzIHRo
ZSBCb290c3RyYXAgQ1NTIGZyYW1ld29yayBlYXNpZXIgdG8gdXNlIGZyb20g
QVNQLk5FVCBNVkMgb3IgV2ViUGFnZXMuCiogW0h0bWxBZ2lsaXR5UGFja10o
aHR0cHM6Ly9odG1sLWFnaWxpdHktcGFjay5uZXQvP3o9Y29kZXBsZXgpIC0g
YW4gYWdpbGUgSFRNTCBwYXJzZXIgdGhhdCBidWlsZHMgYSByZWFkL3dyaXRl
IERPTSBhbmQgc3VwcG9ydHMgcGxhaW4gWFBhdGggb3IgWFNMVAoqIFtMaWJT
YXNzIEhvc3RdKGh0dHBzOi8vZ2l0aHViLmNvbS9UYXJpdHN5bi9MaWJTYXNz
SG9zdCkgLSAuTkVUIHdyYXBwZXIgYXJvdW5kIHRoZSBbbGliU2Fzc10oaHR0
cHM6Ly9zYXNzLWxhbmcuY29tL2xpYnNhc3MpIGxpYnJhcnkgd2l0aCB0aGUg
YWJpbGl0eSB0byBzdXBwb3J0IGEgdmlydHVhbCBmaWxlIHN5c3RlbQoqIFtM
dEd0XShodHRwczovL2dpdGh1Yi5jb20vVHlycnJ6L0x0R3QpIC0gbGlnaHR3
ZWlnaHQgSFRNTCBwcm9jZXNzb3IsIGNhbiBiZSB1c2VkIHRvIHBhcnNlIGFu
ZCBuYXZpZ2F0ZSBET00sIGhhbmRsZXMgQ1NTIHNlbGVjdG9ycywgY2FuIGNv
bnZlcnQgdG8gTGlucTJYbWwsIGVhc2lseSBleHRlbnNpYmxlLCBhbmQgbW9y
ZS4KCiMjIEhUVFAKCiogW1RpbnkuUmVzdENsaWVudF0oaHR0cHM6Ly9naXRo
dWIuY29tL2pnaWFjb21pbmkvVGlueS5SZXN0Q2xpZW50KSAtIFNpbXBsaWVz
dCBGbHVlbnQgUkVTVCBjbGllbnQgZm9yIC5ORVQuCiogW0h0dHAuZnNdKGh0
dHBzOi8vZ2l0aHViLmNvbS9oYWYvSHR0cC5mcykgLSBBIGZ1bmN0aW9uYWwg
SFRUUCBjbGllbnQgZm9yIEYjLgoqIFtSZXN0U2hhcnBdKGh0dHBzOi8vZ2l0
aHViLmNvbS9yZXN0c2hhcnAvUmVzdFNoYXJwKSAtIFNpbXBsZSBSRVNUIGFu
ZCBIVFRQIEFQSSBjbGllbnQgZm9yIC5ORVQKKiBbRmx1cmxdKGh0dHBzOi8v
Zmx1cmwuZGV2KSAtIEZsdWVudCwgcG9ydGFibGUsIHRlc3RhYmxlIFJFU1Qv
SFRUUCBjbGllbnQgbGlicmFyeQoqIFtFYXN5SHR0cF0oaHR0cHM6Ly9naXRo
dWIuY29tL0Vhc3lIdHRwL0Vhc3lIdHRwKSAtIEhUVFAgbGlicmFyeSBmb3Ig
QyMKKiBbUmVmaXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGl2ZXVpL3Jl
Zml0KSAtIFRoZSBhdXRvbWF0aWMgdHlwZS1zYWZlIFJFU1QgbGlicmFyeSBm
b3IgWGFtYXJpbiBhbmQgLk5FVAoqIFtSZXN0RWFzZV0oaHR0cHM6Ly9naXRo
dWIuY29tL2NhbnRvbjcvUmVzdEVhc2UpIC0gRWFzeS10by11c2UgdHlwZXNh
ZmUgUkVTVCBBUEkgY2xpZW50IGxpYnJhcnksIHdoaWNoIGlzIHNpbXBsZSBh
bmQgY3VzdG9taXNhYmxlLiBIZWF2aWx5IGluc3BpcmVkIGJ5IFJlZml0Ciog
W1Jlc3RMZXNzXShodHRwczovL2dpdGh1Yi5jb20vbGV0c2FyL1Jlc3RMZXNz
KSAtIFRoZSBhdXRvbWF0aWMgdHlwZS1zYWZlLXJlZmxlY3Rpb25sZXNzIFJF
U1QgQVBJIGNsaWVudCBsaWJyYXJ5IGZvciAuTmV0IFN0YW5kYXJkLgoqIFtI
dHRwQ2xpZW50R29vZGllc10oaHR0cHM6Ly9naXRodWIuY29tL2plZmZpam9l
L2h0dHBjbGllbnRnb29kaWVzLm5ldCkgLSB1dGlsaXRpZXMgZm9yIHdvcmtp
bmcgd2l0aCBgSHR0cENsaWVudGAKKiBbQ29yZVJQQ10oaHR0cHM6Ly9naXRo
dWIuY29tL2tla2VrZWtzL0NvcmVSUEMpIC0gRXh0ZW5zaWJsZSBsaWJyYXJ5
IGZvciBXQ0YtbGlrZSBSUEMgdGFyZ2V0aW5nIG5ldHN0YW5kYXJkMS4zLiBD
b21wYXRpYmxlIHdpdGggLk5FVCwgTW9ubyBhbmQgLk5FVCBDb3JlLgoKIyMg
SURFCgoqIFtBdmFsb25TdHVkaW9dKGh0dHBzOi8vZ2l0aHViLmNvbS9WaXRh
bEVsZW1lbnQvQXZhbG9uU3R1ZGlvKSAtIEFuIGV4dGVuc2libGUsIGNyb3Nz
IHBsYXRmb3JtIElERSB3cml0dGVuIGluIEMjIGZvciBFbWJlZGRlZCBDL0Mr
KywgLk5FVCBDb3JlLCBBdmFsb25pYSBhbmQgVHlwZXNjcmlwdAoqIFtTaGFy
cERldmVsb3BdKGh0dHBzOi8vZ2l0aHViLmNvbS9pY3NoYXJwY29kZS9TaGFy
cERldmVsb3ApIC0gQSBmcmVlIElERSBmb3IgLk5FVCBwcm9ncmFtbWluZyBs
YW5ndWFnZXMKKiBbTW9ub0RldmVsb3BdKGh0dHBzOi8vZ2l0aHViLmNvbS9t
b25vL21vbm9kZXZlbG9wKSAtIE1vbm9EZXZlbG9wIGlzIGEgY3Jvc3MtcGxh
dGZvcm0gSURFIG1vc3RseSBhaW1lZCBhdCBNb25vLy5ORVQgZGV2ZWxvcGVy
cwoqIFtWaXN1YWwgU3R1ZGlvIEV4cHJlc3NdKGh0dHBzOi8vdmlzdWFsc3R1
ZGlvLm1pY3Jvc29mdC5jb20vdnMvZXhwcmVzcy8pIC0gVGhlIGZyZWUgbGln
aHR3ZWlnaHQgdmVyc2lvbiBvZiBWaXN1YWwgU3R1ZGlvIGZvciAuTkVUIHBy
b2dyYW1taW5nLgoqIFtWaXN1YWwgU3R1ZGlvIENvbW11bml0eV0oaHR0cHM6
Ly92aXN1YWxzdHVkaW8ubWljcm9zb2Z0LmNvbS92cy9jb21tdW5pdHkvKSAt
IEEgZnVsbC1mZWF0dXJlZCBJREUKKiBbV2FmIERvdE5ldFBhZF0oaHR0cHM6
Ly9qYmUyMjc3LmdpdGh1Yi5pby9kb3RuZXRwYWQvKSAtIEEgc2ltcGxlIGFu
ZCBmYXN0IGNvZGUgZWRpdG9yIHRoYXQgbWFrZXMgZnVuIHByb2dyYW0gd2l0
aCBDIyBvciBWaXN1YWwgQmFzaWMuCiogW1Zpc3VhbCBTdHVkaW8gQ29kZV0o
aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vKSAtIEV4Y2VsbGVudCBv
cGVuIHNvdXJjZSBlZGl0b3IgZnJvbSBNaWNyb3NvZnQsIGJhc2VkIG9uIEVs
ZWN0cm9uLgoqIFtJb25pZGVdKGh0dHA6Ly9pb25pZGUuaW8vKSAtIEFuIEF0
b20gRWRpdG9yIGFuZCBWaXN1YWwgU3R1ZGlvIENvZGUgcGFja2FnZSBzdWl0
ZSBmb3IgY3Jvc3MgcGxhdGZvcm0gRiMgZGV2ZWxvcG1lbnQuCiogW1JpZGVy
XShodHRwczovL3d3dy5qZXRicmFpbnMuY29tL3JpZGVyLykgLSBBIGNyb3Nz
LXBsYXRmb3JtIEMjIElERSBiYXNlZCBvbiB0aGUgSW50ZWxsaUogcGxhdGZv
cm0gYW5kIFJlU2hhcnBlcgoqIFtSb3NseW5QYWRdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9hZWxpai9Sb3NseW5QYWQpIC0gQSBzaW1wbGUgQyMgZWRpdG9yIGJh
c2VkIG9uIFJvc2x5biBhbmQgQXZhbG9uRWRpdC4KKiBbQ29uc3Vsb10oaHR0
cHM6Ly9jb25zdWxvLmlvKSAtIEEgY3Jvc3MtcGxhdGZvcm0gSURFIHdpdGgg
QyMgJiBKYXZhIHN1cHBvcnQsIGZvcmsgb2YgSW50ZWxsaUogSURFQSBDb21t
dW5pdHkgRWRpdGlvbgoKIyMgSW1hZ2UgUHJvY2Vzc2luZwoKKiBbSW1hZ2VS
ZXNpemVyXShodHRwczovL2ltYWdlcmVzaXppbmcubmV0LykgLSBBZGQgY29t
bWFuZHMgdG8gaW1hZ2UgVVJMcyB0byBnZXQgYWx0ZXJlZCB2ZXJzaW9ucyBp
biBtaWxsaXNlY29uZHMuIFJlc2l6aW5nLCBlZGl0aW5nIGV0YyBvZiBpbWFn
ZXMgaW4gcmVhbC10aW1lLgoqIFtJbWFnZVByb2Nlc3Nvcl0oaHR0cHM6Ly9n
aXRodWIuY29tL0ppbUJvYlNxdWFyZVBhbnRzL0ltYWdlUHJvY2Vzc29yKSAt
IE9wZW4tc291cmNlIC5ORVQgbGlicmFyeSB0byBtYW5pcHVsYXRlIGltYWdl
cyBvbi10aGUtZmx5LgoqIFtJbWFnZVNoYXJwXShodHRwczovL2dpdGh1Yi5j
b20vU2l4TGFib3JzL0ltYWdlU2hhcnApIC0gRnVsbHkgbWFuYWdlZCBjcm9z
cy1wbGF0Zm9ybSBsaWJyYXJ5IGZvciBwcm9jZXNzaW5nIG9mIGltYWdlIGZp
bGVzLgoqIFtEeW5hbWljSW1hZ2VdKGh0dHBzOi8vZHluYW1pY2ltYWdlLmFw
cGhiLmNvbS8pIC0gSGlnaC1wZXJmb3JtYW5jZSBvcGVuLXNvdXJjZSBpbWFn
ZSBtYW5pcHVsYXRpb24gbGlicmFyeSBmb3IgQVNQLk5FVC4KKiBbTWV0YWRh
dGFFeHRyYWN0b3JdKGh0dHBzOi8vZ2l0aHViLmNvbS9kcmV3bm9ha2VzL21l
dGFkYXRhLWV4dHJhY3Rvci1kb3RuZXQpIC0gRXh0cmFjdHMgRXhpZiwgSVBU
QywgWE1QLCBJQ0MgYW5kIG90aGVyIG1ldGFkYXRhIGZyb20gaW1hZ2UgZmls
ZXMuCiogW0VtZ3UgQ1ZdKGh0dHA6Ly93d3cuZW1ndS5jb20vd2lraS9pbmRl
eC5waHAvTWFpbl9QYWdlKSAtIENyb3NzLXBsYXRmb3JtIC5ORVQgd3JhcHBl
ciBmb3IgdGhlIE9wZW5DViBsaWJyYXJ5LgoqIFtEb3RJbWFnaW5nXShodHRw
czovL2dpdGh1Yi5jb20vZGFqdXJpYy9kb3QtaW1hZ2luZykgLSBNaW5pbWFs
aXN0aWMgLk5FVCBpbWFnaW5nIHBvcnRhYmxlIHBsYXRmb3JtCiogW01hZ2lj
ay5ORVRdKGh0dHBzOi8vZ2l0aHViLmNvbS9kbGVtc3RyYS9NYWdpY2suTkVU
KSAtIC5ORVQgd3JhcHBlciBmb3IgdGhlIEltYWdlTWFnaWNrIGxpYnJhcnku
CiogW09wZW5DdlNoYXJwXShodHRwczovL2dpdGh1Yi5jb20vc2hpbWF0L29w
ZW5jdnNoYXJwLykgLSBDcm9zcyBwbGF0Zm9ybSB3cmFwcGVyIG9mIE9wZW5D
ViBmb3IgLk5FVCBGcmFtZXdvcmsuCiogW1RleGltcE5ldF0oaHR0cHM6Ly9i
aXRidWNrZXQub3JnL1N0YXJuaWNrL3RleGltcG5ldCkgLSBBIGNyb3NzLXBs
YXRmb3JtIC5ORVQgU3RhbmRhcmQgbGlicmFyeSBmb3IgcmVhZGluZy9tYW5p
cHVsYXRpbmcvd3JpdGluZyBpbWFnZSBmaWxlcy4gVGhlIHByaW1hcnkgZm9j
dXMgaXMgdG8gY3JlYXRlIDJELzNEL0N1YmVtYXAgdGV4dHVyZXMgZm9yIGdy
YXBoaWNzL2dhbWUgYXBwbGljYXRpb25zLCBub3RhYmx5IHRvIGNvbnZlcnQg
aW1hZ2VzIHRvIEdQVSBjb21wcmVzc2VkIGZvcm1hdHMgYW5kIGdlbmVyYXRl
IG1pcG1hcHMuICBUaGUgbGlicmFyeSB3cmFwcyB0aGUgRnJlZUltYWdlIG5h
dGl2ZSBsaWJyYXJ5IHRvIGltcG9ydC9leHBvcnQgb3ZlciAzMCBjb21tb24g
aW1hZ2UgZm9ybWF0cywgYW5kIHdyYXBzIHRoZSBOdmlkaWEgVGV4dHVyZSBU
b29scyBuYXRpdmUgbGlicmFyeSBmb3IgR1BVIGNvbXByZXNzaW9uIGZlYXR1
cmVzLiBJdCBhbHNvIGhhcyBhIGZ1bGx5IGZlYXR1cmVkIEREUyBmb3JtYXQg
aW1wb3J0ZXIvZXhwb3J0ZXIgd3JpdHRlbiBpbiBDIy4KKiBbQ29sb3VyZnVs
XShodHRwczovL2dpdGh1Yi5jb20vdG9tcGF6b3VyZWsvQ29sb3VyZnVsKSAt
IE9wZW4gc291cmNlIC5ORVQgbGlicmFyeSBmb3Igd29ya2luZyB3aXRoIGNv
bG9yIHNwYWNlcy4KCiMjIEluc3RhbGwgdG9vbHMKCiogW1dpeCBUb29sc2V0
XShodHRwOi8vd2l4dG9vbHNldC5vcmcvKSAtIFRoZSBtb3N0IHBvd2VyZnVs
IHNldCBvZiB0b29scyBhdmFpbGFibGUgdG8gY3JlYXRlIHlvdXIgV2luZG93
cyBpbnN0YWxsYXRpb24gZXhwZXJpZW5jZQoqIFtTcXVpcnJlbF0oaHR0cHM6
Ly9naXRodWIuY29tL3NxdWlycmVsL3NxdWlycmVsLndpbmRvd3MpIC0gU3F1
aXJyZWwgaXMgYm90aCBhIHNldCBvZiB0b29scyBhbmQgYSBsaWJyYXJ5LCB0
byBjb21wbGV0ZWx5IG1hbmFnZSBib3RoIGluc3RhbGxhdGlvbiBhbmQgdXBk
YXRpbmcgeW91ciBkZXNrdG9wIFdpbmRvd3MgYXBwbGljYXRpb24uCiogW0No
b2NvbGF0ZXldKGh0dHBzOi8vZ2l0aHViLmNvbS9jaG9jb2xhdGV5L2Nob2Nv
KSAtIGxpa2UgYHl1bWAgb3IgYGFwdC1nZXRgLCBidXQgZm9yIFdpbmRvd3Mu
CiogW1dheF0oaHR0cHM6Ly9tYXJrZXRwbGFjZS52aXN1YWxzdHVkaW8uY29t
L2l0ZW1zP2l0ZW1OYW1lPVRvbUVuZ2xlcnQuV2F4KSAtIEFuIGludGVyYWN0
aXZlIGVkaXRvciBmb3IgV2lYIHByb2plY3RzLgoqIFtPbm92YV0oaHR0cHM6
Ly9naXRodWIuY29tL1R5cnJyei9Pbm92YSkgLSBBbiB1bm9waW5pb25hdGVk
IGF1dG8tdXBkYXRlIGZyYW1ld29yayBmb3IgZGVza3RvcCBhcHBsaWNhdGlv
bnMuCgojIyBJbnRlcm5hdGlvbmFsaXphdGlvbgoKKiBbaTE4bl0oaHR0cHM6
Ly9naXRodWIuY29tL3R1cnF1b2lzZW93bC9pMThuKSAtIFNtYXJ0IGludGVy
bmF0aW9uYWxpemF0aW9uIGZvciBBU1AuTkVUIE1WQwoqIFtNZXNzYWdlRm9y
bWF0Lk5FVF0oaHR0cHM6Ly9naXRodWIuY29tL2plZmZpam9lL01lc3NhZ2VG
b3JtYXQuTkVUKSAtIElDVSBNZXNzYWdlRm9ybWF0IGltcGxlbWVudGF0aW9u
IGluIC5ORVQgbGV0cyB5b3Ugd3JpdGUgY29udGV4dHVhbCBVSSBtZXNzYWdl
cyAoUENMIGxpYnJhcnkpCiogW1Jlc1ggUmVzb3VyY2UgTWFuYWdlcl0oaHR0
cHM6Ly9naXRodWIuY29tL3RvbS1lbmdsZXJ0L1Jlc1hSZXNvdXJjZU1hbmFn
ZXIpIC0gVGhlIG1vc3QgcG9wdWxhciBmcmVlIHRvb2wgdG8gbG9jYWxpemUg
YWxsIGtpbmQgb2YgYXBwbGljYXRpb25zIHdpdGggcmVzeC1iYXNlZCByZXNv
dXJjZXMuCgojIyBJbnRlcm9wZXJhYmlsaXR5CgoqIFtDcHBTaGFycF0oaHR0
cHM6Ly9naXRodWIuY29tL21vbm8vQ3BwU2hhcnApIC0gVG9vbHMgdG8gc3Vy
ZmFjZSBDKysgQVBJcyB0byBDIwoqIFtTaGFycGVuXShodHRwczovL2dpdGh1
Yi5jb20vbW9uby9zaGFycGVuKSAtIFNoYXJwZW4gaXMgYW4gRWNsaXBzZSBw
bHVnaW4gY3JlYXRlZCBieSBkYjRvIHRoYXQgYWxsb3dzIHlvdSB0byBjb252
ZXJ0IHlvdXIgSmF2YSBwcm9qZWN0IGludG8gQyMKKiBbQ1hYSV0oaHR0cHM6
Ly9naXRodWIuY29tL21vbm8vY3h4aSkgLSBDKysgaW50ZXJvcCBmcmFtZXdv
cmsKKiBbcHl0aG9ubmV0XShodHRwczovL2dpdGh1Yi5jb20vcHl0aG9ubmV0
L3B5dGhvbm5ldCkgLSBQeXRob24gYW5kIC5ORVQgaW50ZXJvcCBmcmFtZXdv
cmsKKiBbUEludm9rZSBJbnRlcm9wIEFzc2lzdGFudF0oaHR0cHM6Ly9naXRo
dWIuY29tL2phcmVkcGFyL3BpbnZva2UtaW50ZXJvcC1hc3Npc3RhbnQpIC0g
Q29udmVydHMgQyB0byBtYW5hZ2VkIFAvSW52b2tlIHNpZ25hdHVyZXMgb3Ig
dmVyc2UgdmlzYS4KKiBbcGludm9rZV0oaHR0cHM6Ly9naXRodWIuY29tL0FB
cm5vdHQvcGludm9rZSkgLSBBIGxpYnJhcnkgY29udGFpbmluZyBQL0ludm9r
ZSBjb2RlIGZvciBsYXRlc3QgV2luZG93cyBPUy4KKiBbTGVnYWN5V3JhcHBl
cl0oaHR0cHM6Ly9naXRodWIuY29tL0NvZGVmb3VuZHJ5REUvTGVnYWN5V3Jh
cHBlcikgLSBMZWdhY3lXcmFwcGVyIHVzZXMgYSB3cmFwcGVyIHByb2Nlc3Mg
dG8gY2FsbCBETExzIGZyb20gYSBwcm9jZXNzIG9mIHRoZSBvcHBvc2luZyBh
cmNoaXRlY3R1cmUgKHg4NiBvciBBTUQ2NCkuCiogW1B5cm9saXRlXShodHRw
czovL2dpdGh1Yi5jb20vaXJtZW4vUHlyb2xpdGUpIC0gVGhpcyBsaWJyYXJ5
IGFsbG93cyB5b3VyIEphdmEgb3IgLk5FVCBwcm9ncmFtIHRvIGludGVyZmFj
ZSB2ZXJ5IGVhc2lseSB3aXRoCnRoZSBQeXRob24gd29ybGQuIEl0IHVzZXMg
dGhlIFB5cm8gcHJvdG9jb2wgdG8gY2FsbCBtZXRob2RzIG9uIHJlbW90ZSBv
YmplY3RzLgoKIyMgSW9DCgoqIFtDYXN0bGUgV2luZHNvcl0oaHR0cHM6Ly9n
aXRodWIuY29tL2Nhc3RsZXByb2plY3QvV2luZHNvcikgLSBDYXN0bGUgV2lu
ZHNvciBpcyBiZXN0IG9mIGJyZWVkLCBtYXR1cmUgSW52ZXJzaW9uIG9mIENv
bnRyb2wgY29udGFpbmVyIGF2YWlsYWJsZSBmb3IgLk5FVCBhbmQgU2lsdmVy
bGlnaHQKKiBbVW5pdHldKGh0dHBzOi8vZ2l0aHViLmNvbS91bml0eWNvbnRh
aW5lci91bml0eSkgLSBMaWdodHdlaWdodCBleHRlbnNpYmxlIGRlcGVuZGVu
Y3kgaW5qZWN0aW9uIGNvbnRhaW5lciB3aXRoIHN1cHBvcnQgZm9yIGNvbnN0
cnVjdG9yLCBwcm9wZXJ0eSwgYW5kIG1ldGhvZCBjYWxsIGluamVjdGlvbgoq
IFtBdXRvZmFjXShodHRwczovL2dpdGh1Yi5jb20vYXV0b2ZhYy9BdXRvZmFj
KSAtIEFuIGFkZGljdGl2ZSAuTkVUIElvQyBjb250YWluZXIKKiBbRHJ5SW9j
XShodHRwczovL2dpdGh1Yi5jb20vZGFkaGkvRHJ5SW9jKSAtIFNpbXBsZSwg
ZmFzdCBhbGwgZnVsbHkgZmVhdHVyZWQgSW9DIGNvbnRhaW5lci4KKiBbTmlu
amVjdF0oaHR0cHM6Ly9naXRodWIuY29tL25pbmplY3QvbmluamVjdCkgLSBU
aGUgbmluamEgb2YgLk5FVCBkZXBlbmRlbmN5IGluamVjdG9ycwoqIFtsYW1h
cl0oaHR0cHM6Ly9naXRodWIuY29tL2phc3BlcmZ4L2xhbWFyLykgLSBUaGUg
b3JpZ2luYWwgSW9DL0RJIENvbnRhaW5lciBmb3IgLk5ldCAoUHJldmlvdXNs
eSBTdHJ1Y3R1cmVNYXApCiogW1NwcmluZy5OZXRdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9zcHJpbmctcHJvamVjdHMvc3ByaW5nLW5ldCkgLSBTcHJpbmcuTkVU
IGlzIGFuIG9wZW4gc291cmNlIGFwcGxpY2F0aW9uIGZyYW1ld29yayB0aGF0
IG1ha2VzIGJ1aWxkaW5nICBlbnRlcnByaXNlIC5ORVQgYXBwbGljYXRpb25z
IGVhc2llcgoqIFtMYW1hcl0oaHR0cHM6Ly9qYXNwZXJmeC5naXRodWIuaW8v
bGFtYXIvKSAtIEEgZmFzdCBJb0MgY29udGFpbmVyIGhlYXZpbHkgb3B0aW1p
emVkIGZvciB1c2FnZSB3aXRoaW4gQVNQLk5FVCBDb3JlIGFuZCBvdGhlciAu
TkVUIHNlcnZlciBzaWRlIGFwcGxpY2F0aW9ucy4KKiBbTGlnaHRJbmplY3Rd
KGh0dHBzOi8vZ2l0aHViLmNvbS9zZWVzaGFycGVyL0xpZ2h0SW5qZWN0KSAt
IEEgdWx0cmEgbGlnaHR3ZWlnaHQgSW9DIGNvbnRhaW5lcgoqIFtTaW1wbGUg
SW5qZWN0b3JdKGh0dHBzOi8vZ2l0aHViLmNvbS9zaW1wbGVpbmplY3Rvci9T
aW1wbGVJbmplY3RvcikgLSBTaW1wbGUgSW5qZWN0b3IgaXMgYW4gZWFzeS10
by11c2UgRGVwZW5kZW5jeSBJbmplY3Rpb24gKERJKSBsaWJyYXJ5IGZvciAu
TkVUIDQrIHRoYXQgc3VwcG9ydHMgU2lsdmVybGlnaHQgNCssIFdpbmRvd3Mg
UGhvbmUgOCwgV2luZG93cyA4IGluY2x1ZGluZyBVbml2ZXJzYWwgYXBwcyBh
bmQgTW9uby4KKiBbTWljcm9zb2Z0LkV4dGVuc2lvbnMuRGVwZW5kZW5jeUlu
amVjdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL2FzcG5ldC9EZXBlbmRlbmN5
SW5qZWN0aW9uKSAtIFRoZSBkZWZhdWx0IElvQyBjb250YWluZXIgZm9yIEFT
UC5ORVQgQ29yZSBhcHBsaWNhdGlvbnMuCiogW1NjcnV0b3JdKGh0dHBzOi8v
Z2l0aHViLmNvbS9raGVsbGFuZy9TY3J1dG9yKSAtIEFzc2VtYmx5IHNjYW5u
aW5nIGV4dGVuc2lvbnMgZm9yIE1pY3Jvc29mdC5FeHRlbnNpb25zLkRlcGVu
ZGVuY3lJbmplY3Rpb24uCiogW1ZTIE1FRl0oaHR0cHM6Ly9naXRodWIuY29t
L01pY3Jvc29mdC92cy1tZWYpIC0gTWFuYWdlZCBFeHRlbnNpYmlsaXR5IEZy
YW1ld29yayAoTUVGKSBpbXBsZW1lbnRhdGlvbiB1c2VkIGJ5IFZpc3VhbCBT
dHVkaW8uCiogW1RpbnlJb0NdKGh0dHBzOi8vZ2l0aHViLmNvbS9ncnVtcHlk
ZXYvVGlueUlvQykgLSBBbiBlYXN5IHRvIHVzZSwgaGFzc2xlIGZyZWUsIElu
dmVyc2lvbiBvZiBDb250cm9sIENvbnRhaW5lciBmb3Igc21hbGwgcHJvamVj
dHMsIGxpYnJhcmllcyBhbmQgYmVnaW5uZXJzIGFsaWtlLgoqIFtTdGFzaGJv
eF0oaHR0cHM6Ly9naXRodWIuY29tL3o0a240ZmVpbi9zdGFzaGJveCkgLSBB
IGxpZ2h0d2VpZ2h0LCBwb3J0YWJsZSBkZXBlbmRlbmN5IGluamVjdGlvbiBm
cmFtZXdvcmsgZm9yIC5ORVQgYmFzZWQgc29sdXRpb25zLgoKIyMgSmF2YVNj
cmlwdCBFbmdpbmVzCgoqIFtDbGVhclNjcmlwdF0oaHR0cHM6Ly9naXRodWIu
Y29tL01pY3Jvc29mdC9DbGVhclNjcmlwdCkgLSBBIGxpYnJhcnkgdGhhdCBt
YWtlcyBpdCBlYXN5IHRvIGFkZCBzY3JpcHRpbmcgdG8geW91ciAuTkVUIGFw
cGxpY2F0aW9ucy4gSXQgY3VycmVudGx5IHN1cHBvcnRzIEphdmFTY3JpcHQg
KHZpYSBWOCBhbmQgSlNjcmlwdCkgYW5kIFZCU2NyaXB0LgoqIFtFZGdlLmpz
XShodHRwczovL2dpdGh1Yi5jb20vdGphbmN6dWsvZWRnZSkgLSBSdW4gLk5F
VCBhbmQgTm9kZS5qcyBjb2RlIGluLXByb2Nlc3Mgb24gV2luZG93cywgbWFj
T1MsIGFuZCBMaW51eAoqIFtKaW50XShodHRwczovL2dpdGh1Yi5jb20vc2Vi
YXN0aWVucm9zL2ppbnQpIC0gSmF2YVNjcmlwdCBpbnRlcnByZXRlciBmb3Ig
Lk5FVCB3aGljaCBwcm92aWRlcyBmdWxsIEVDTUEgNS4xIGNvbXBsaWFuY2Ug
YW5kIGNhbiBydW4gb24gYW55IC5ORVQgcGxhdGZvcm0uCiogW0p1cmFzc2lj
XShodHRwczovL2dpdGh1Yi5jb20vcGF1bGJhcnRydW0vanVyYXNzaWMpIC0g
QSBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgRUNNQVNjcmlwdCBsYW5ndWFnZSBh
bmQgcnVudGltZS4gSXQgYWltcyB0byBwcm92aWRlIHRoZSBiZXN0IHBlcmZv
cm1pbmcgYW5kIG1vc3Qgc3RhbmRhcmRzLWNvbXBsaWFudCBpbXBsZW1lbnRh
dGlvbiBvZiBKYXZhU2NyaXB0IGZvciAuTkVULgoKIyMgTG9nZ2luZwoKKiBb
RXNzZW50aWFsIERpYWdub3N0aWNzXShodHRwczovL2dpdGh1Yi5jb20vc2dy
eXBob24vZXNzZW50aWFsLWRpYWdub3N0aWNzKSAtIEV4dGVuZHMgdGhlIGlu
YnVpbHQgZmVhdHVyZXMgb2YgU3lzdGVtLkRpYWdub3N0aWNzIG5hbWVzcGFj
ZSB0byBwcm92aWRlIGZsZXhpYmxlIGxvZ2dpbmcKKiBbTkxvZ10oaHR0cHM6
Ly9naXRodWIuY29tL25sb2cvTkxvZy8pIC0gTkxvZyAtIEFkdmFuY2VkIC5O
RVQgYW5kIFNpbHZlcmxpZ2h0IGxvZ2dpbmcKKiBbTG9nYXptaWNdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9paHRmdy9Mb2dhem1pYykgLSBPcGVuIHNvdXJjZSBO
TG9nIHZpZXdlciBmb3IgV2luZG93cwoqIFtFTE1BSF0oaHR0cHM6Ly9lbG1h
aC5naXRodWIuaW8vKSAtIE9mZmljaWFsIEVMTUFIIHNpdGUKKiBbRWxtYWgg
TVZDXShodHRwczovL2dpdGh1Yi5jb20vYWxleGJlbGV0c2t5L2VsbWFoLW12
YykgLSBFbG1haCBmb3IgTVZDCiogW0xvZ2FyeV0oaHR0cHM6Ly9sb2dhcnku
Z2l0aHViLmlvLykgLSBMb2dhcnkgaXMgYSBoaWdoIHBlcmZvcm1hbmNlLCBt
dWx0aS10YXJnZXQgbG9nZ2luZywgbWV0cmljLCB0cmFjaW5nIGFuZCBoZWFs
dGgtY2hlY2sgbGlicmFyeSBmb3IgTW9ubyBhbmQgLk5FVC4gLk5FVCdzIGFu
c3dlciB0byBEcm9wV2l6YXJkLiBTdXBwb3J0cyBtYW55IHRhcmdldHMsIGJ1
aWx0IGZvciBtaWNyby1zZXJ2aWNlcy4KKiBbTG9nNE5ldF0oaHR0cHM6Ly9s
b2dnaW5nLmFwYWNoZS5vcmcvbG9nNG5ldC8pIC0gVGhlIEFwYWNoZSBsb2c0
bmV0IGxpYnJhcnkgaXMgYSB0b29sIHRvIGhlbHAgdGhlIHByb2dyYW1tZXIg
b3V0cHV0IGxvZyBzdGF0ZW1lbnRzIHRvIGEgdmFyaWV0eSBvZiBvdXRwdXQg
dGFyZ2V0cwoqIFtTZW50cnldKGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50
cnkvc2VudHJ5LWRvdG5ldCkgLSAuTkVUIFNESyBmb3IgW1NlbnRyeV0oaHR0
cHM6Ly9zZW50cnkuaW8vd2VsY29tZS8pIE9wZW4tc291cmNlIGVycm9yIHRy
YWNraW5nIHRoYXQgaGVscHMgZGV2ZWxvcGVycyBtb25pdG9yIGFuZCBmaXgg
Y3Jhc2hlcyBpbiByZWFsIHRpbWUuLgoqIFtTZXJpbG9nXShodHRwczovL2dp
dGh1Yi5jb20vc2VyaWxvZy9zZXJpbG9nKSAtIEEgbm8tbm9uc2Vuc2UgbG9n
Z2luZyBsaWJyYXJ5IGZvciB0aGUgTm9TUUwgZXJhLiBDb21iaW5lcyB0aGUg
YmVzdCBvZiB0cmFkaXRpb25hbCBhbmQgc3RydWN0dXJlZCBkaWFnbm9zdGlj
IGxvZ2dpbmcgaW4gYW4gZWFzeS10by11c2UgcGFja2FnZS4KKiBbU3RhY2tF
eGNoYW5nZS5FeGNlcHRpb25hbF0oaHR0cHM6Ly9naXRodWIuY29tL05pY2tD
cmF2ZXIvU3RhY2tFeGNoYW5nZS5FeGNlcHRpb25hbCkgLSBFcnJvciBoYW5k
bGVyIHVzZWQgZm9yIHRoZSBTdGFjayBFeGNoYW5nZSBuZXR3b3JrCiogW1Nl
bWFudGljIExvZ2dpbmcgQXBwbGljYXRpb24gQmxvY2sgKFNMQUIpXShodHRw
czovL2dpdGh1Yi5jb20vTWljcm9zb2Z0QXJjaGl2ZS9zZW1hbnRpYy1sb2dn
aW5nKSAtIEV4dGVuZHMgdGhlIGluYnVpbHQgZmVhdHVyZXMgb2YgU3lzdGVt
LkRpYWdub3N0aWNzLlRyYWNpbmcgbmFtZXNwYWNlIChFdmVudFNvdXJjZSBj
bGFzcykgdG8gbG9nIHRvIHNldmVyYWwgc2lua3MgaW5jbHVkaW5nIEF6dXJl
IFRhYmxlcywgRGF0YWJhc2VzLCBmaWxlcyAoSlNPTiwgWE1MLCB0ZXh0KS4g
U3VwcG9ydHMgaW4tcHJvY2VzcyBhbmQgb3V0LW9mLXByb2Nlc3MgbG9nZ2lu
ZyB0aHJvdWdoIEVUVywgYW5kIFJ4IGZvciByZWFsLXRpbWUgZmlsdGVyaW5n
L2FnZ3JlZ2F0aW5nIG9mIGV2ZW50cy4KKiBbRm91bmRhdGlvXShodHRwczov
L2dpdGh1Yi5jb20vRm91bmRhdGlvRngvRm91bmRhdGlvI2xvZ2dpbmcpIC0g
QSBmbHVlbnQgbG9nZ2luZyBBUEkgdGhhdCBjYW4gYmUgdXNlZCB0byBsb2cg
bWVzc2FnZXMgdGhyb3VnaG91dCB5b3VyIGFwcGxpY2F0aW9uLgoqIFtFeGNl
cHRpb25sZXNzXShodHRwczovL2dpdGh1Yi5jb20vZXhjZXB0aW9ubGVzcy9F
eGNlcHRpb25sZXNzLk5ldCkgLSBFeGNlcHRpb25sZXNzIC5ORVQgQ2xpZW50
CiogW0xvdXBlXShodHRwczovL29ubG91cGUuY29tKSAtIENlbnRyYWxpemVk
IC5ORVQgbG9nZ2luZyBhbmQgbW9uaXRvcmluZy4gKipbUHJvcHJpZXRhcnld
KiogKipbRnJlZSBUaWVyXSoqCiogW2VsbWFoLmlvXShodHRwczovL2VsbWFo
LmlvKSAtIENsb3VkIGxvZ2dpbmcgZm9yIC5ORVQgd2ViIGFwcGxpY2F0aW9u
cyB1c2luZyBFTE1BSC4gRmluZCBidWdzIGJlZm9yZSB5b3UgZ28gbGl2ZS4g
UG93ZXJmdWwgc2VhcmNoLCBBUEksIGludGVncmF0aW9uIHdpdGggU2xhY2ss
IEdpdEh1YiwgVmlzdWFsIFN0dWRpbyBhbmQgbW9yZS4gKipbW0ZyZWUgZm9y
IE9TU10oaHR0cHM6Ly9lbG1haC5pby9zcG9uc29yc2hpcC9vcGVuc291cmNl
KV0qKiAqKlskXSoqCiogW0J1Z1NuYWddKGh0dHBzOi8vZG9jcy5idWdzbmFn
LmNvbS9wbGF0Zm9ybXMvZG90bmV0LykgLSBMb2dzIGVycm9ycy4gSW5jbHVk
ZXMgdXNlZnVsIGRpYWdub3N0aWMgaW5mbyBsaWtlIHN0YWNrIHRyYWNlLCBz
ZXNzaW9uLCByZWxlYXNlLCBldGMuIEhhcyBhIGZyZWUgdGllci4gKipbRnJl
ZSBmb3IgT1NTXVskXSoqCgojIyBNYWNoaW5lIExlYXJuaW5nIGFuZCBEYXRh
IFNjaWVuY2UKKiBbSW5mZXIuTkVUXShodHRwczovL2RvdG5ldC5naXRodWIu
aW8vaW5mZXIvKSAtIEEgZnJhbWV3b3JrIGZvciBydW5uaW5nIEJheWVzaWFu
IGluZmVyZW5jZSBpbiBncmFwaGljYWwgbW9kZWxzLiBJdCBjYW4gYWxzbyBi
ZSB1c2VkIGZvciBwcm9iYWJpbGlzdGljIHByb2dyYW1taW5nLgoqIFtBY2Nv
cmQuTkVUXShodHRwOi8vYWNjb3JkLWZyYW1ld29yay5uZXQvKSAtIE1hY2hp
bmUgbGVhcm5pbmcgZnJhbWV3b3JrIGNvbWJpbmVkIHdpdGggYXVkaW8gYW5k
IGltYWdlIHByb2Nlc3NpbmcgbGlicmFyaWVzIChjb21wdXRlciB2aXNpb24s
IGNvbXB1dGVyIGF1ZGl0aW9uLCBzaWduYWwgcHJvY2Vzc2luZyBhbmQgc3Rh
dGlzdGljcykuCiogW0FjY29yZC5ORVQgRXh0ZW5zaW9uc10oaHR0cHM6Ly9n
aXRodWIuY29tL2RhanVyaWMvYWNjb3JkLW5ldC1leHRlbnNpb25zKSAtIEFk
dmFuY2VkIGltYWdlIHByb2Nlc3NpbmcgYW5kIGNvbXB1dGVyIHZpc2lvbiBh
bGdvcml0aG1zIG1hZGUgYXMgZmx1ZW50IGV4dGVuc2lvbnMuCiogW0FGb3Jn
ZS5ORVRdKGh0dHA6Ly93d3cuYWZvcmdlbmV0LmNvbS8pIC0gRnJhbWV3b3Jr
IGZvciBkZXZlbG9wZXJzIGFuZCByZXNlYXJjaGVycyBpbiB0aGUgZmllbGRz
IG9mIENvbXB1dGVyIFZpc2lvbiBhbmQgQXJ0aWZpY2lhbCBJbnRlbGxpZ2Vu
Y2UgKGltYWdlIHByb2Nlc3NpbmcsIG5ldXJhbCBuZXR3b3JrcywgZ2VuZXRp
YyBhbGdvcml0aG1zLCBtYWNoaW5lIGxlYXJuaW5nLCByb2JvdGljcykuCiog
W0NhdGFseXN0XShodHRwczovL2dpdGh1Yi5jb20vY3VyaW9zaXR5LWFpL2Nh
dGFseXN0KSBDcm9zcy1wbGF0Zm9ybSBOYXR1cmFsIExhbmd1YWdlIFByb2Nl
c3NpbmcgKE5MUCkgbGlicmFyeSBpbnNwaXJlZCBieSBzcGFDeSwgd2l0aCBw
cmUtdHJhaW5lZCBtb2RlbHMsIG91dC1vZi10aGUgYm94IHN1cHBvcnQgZm9y
IHRyYWluaW5nIHdvcmQgYW5kIGRvY3VtZW50IGVtYmVkZGluZ3MsIGFuZCBm
bGV4aWJsZSBlbnRpdHkgcmVjb2duaXRpb24gbW9kZWxzLiBQYXJ0IG9mIHRo
ZSBbU2NpU2hhcnAgU3RhY2tdKGh0dHBzOi8vc2Npc2hhcnAuZ2l0aHViLmlv
L1NjaVNoYXJwLykKKiBbRGVlZGxlXShodHRwczovL2JsdWVtb3VudGFpbmNh
cGl0YWwuZ2l0aHViLmlvL0RlZWRsZS8pIC0gRGF0YSBmcmFtZSBhbmQgKHRp
bWUpIHNlcmllcyBsaWJyYXJ5IGZvciBleHBsb3JhdG9yeSBkYXRhIG1hbmlw
dWxhdGlvbiB3aXRoIEMjIGFuZCBGIyBzdXBwb3J0CiogW0ZzTGFiXShodHRw
czovL2ZzbGFiLm9yZy8pIC0gQSBjb2xsZWN0aW9uIG9mIGRhdGEgc2NpZW5j
ZSBhbmQgbWFjaGluZSBsZWFybmluZyBsaWJyYXJpZXMgZm9yIEYjIGFuZCAu
TkVUCiogW0dlbmV0aWNTaGFycF0oaHR0cHM6Ly9naXRodWIuY29tL2dpYWNv
bWVsbGkvR2VuZXRpY1NoYXJwKSAtIE11bHRpLXBsYXRmb3JtIGdlbmV0aWMg
YWxnb3JpdGhtIGxpYnJhcnkgZm9yIC5ORVQgQ29yZSBhbmQgLk5FVCBGcmFt
ZXdvcmsuIFRoZSBsaWJyYXJ5IGhhcyBzZXZlcmFsIGltcGxlbWVudGF0aW9u
cyBvZiBHQSBvcGVyYXRvcnMsIGxpa2U6IHNlbGVjdGlvbiwgY3Jvc3NvdmVy
LCBtdXRhdGlvbiwgcmVpbnNlcnRpb24gYW5kIHRlcm1pbmF0aW9uLgoqIFtu
dW1sXShodHRwczovL2dpdGh1Yi5jb20vc2V0aGp1YXJlei9udW1sKSAtIERl
c2lnbmVkIHRvIGluY2x1ZGUgdGhlIG1vc3QgcG9wdWxhciBzdXBlcnZpc2Vk
IGFuZCB1bnN1cGVydmlzZWQgbGVhcm5pbmcgYWxnb3JpdGhtcyB3aGlsZSBt
aW5pbWl6aW5nIHRoZSBmcmljdGlvbiBpbnZvbHZlZCB3aXRoIGNyZWF0aW5n
IHRoZSBwcmVkaWN0aXZlIG1vZGVscy4KKiBbTUwuTkVUXShodHRwczovL2dp
dGh1Yi5jb20vZG90bmV0L21hY2hpbmVsZWFybmluZykgLSBDcm9zcy1wbGF0
Zm9ybSBvcGVuLXNvdXJjZSBtYWNoaW5lIGxlYXJuaW5nIGZyYW1ld29yayB3
aGljaCBtYWtlcyBtYWNoaW5lIGxlYXJuaW5nIGFjY2Vzc2libGUgdG8gLk5F
VCBkZXZlbG9wZXJzLgoqIFtSIFByb3ZpZGVyXShodHRwczovL2JsdWVtb3Vu
dGFpbmNhcGl0YWwuZ2l0aHViLmlvL0ZTaGFycFJQcm92aWRlci8pIC0gVHlw
ZSBwcm92aWRlciB0aGF0IGV4cG9zZXMgUiBwYWNrYWdlcyBhbmQgZnVuY3Rp
b25zIGluIGEgdHlwZS1zYWZlIHdheSB0byBGIyBjYWxsZXJzCiogW0YjIERh
dGFdKGh0dHBzOi8vZnNoYXJwLmdpdGh1Yi5pby9GU2hhcnAuRGF0YS8pIC0g
RiMgdHlwZSBwcm92aWRlcnMgZm9yIGFjY2Vzc2luZyBYTUwsIEpTT04sIENT
ViBhbmQgSFRNTCBmaWxlcyAoYmFzZWQgb24gc2FtcGxlIGRvY3VtZW50cykg
YW5kIGZvciBhY2Nlc3NpbmcgV29ybGRCYW5rIGRhdGEKKiBbU3ByZWFkc10o
aHR0cHM6Ly9naXRodWIuY29tL1NwcmVhZHMvU3ByZWFkcy8pIC0gU2VyaWVz
IGFuZCBQYW5lbHMgZm9yIFJlYWwtdGltZSBhbmQgRXhwbG9yYXRvcnkgQW5h
bHlzaXMgb2YgRGF0YSBTdHJlYW1zLiBTcHJlYWRzIGxpYnJhcnkgaXMgb3B0
aW1pemVkIGZvciBwZXJmb3JtYW5jZSBhbmQgbWVtb3J5IHVzYWdlLiBJdCBp
cyBzZXZlcmFsIHRpbWVzIGZhc3RlciB0aGFuIG90aGVyIG9wZW4gc291cmNl
IHByb2plY3RzLgoqIFtTY2lTaGFycCBTVEFDS10oaHR0cDovL3NjaXNoYXJw
c3RhY2sub3JnKSAtIEEgcmljaCBtYWNoaW5lIGxlYXJuaW5nIGVjb3N5c3Rl
bSBmb3IgLk5FVCBjcmVhdGVkIGJ5IHBvcnRpbmcgdGhlIG1vc3QgcG9wdWxh
ciBQeXRob24gbGlicmFyaWVzIHRvIEMjLiAKCiMjIE1hcmtkb3duIFByb2Nl
c3NvcnMKKiBbTWFya2Rvd25TaGFycF0oaHR0cHM6Ly9jb2RlLmdvb2dsZS5j
b20vYXJjaGl2ZS9wL21hcmtkb3duc2hhcnApIC0gT3BlbiBzb3VyY2UgQyMg
aW1wbGVtZW50YXRpb24gb2YgTWFya2Rvd24gcHJvY2Vzc29yLCBhcyBmZWF0
dXJlZCBvbiBTdGFjayBPdmVyZmxvdy4KKiBbRiMgRm9ybWF0dGluZ10oaHR0
cHM6Ly9mc3Byb2plY3RzLmdpdGh1Yi5pby9GU2hhcnAuRm9ybWF0dGluZy8p
IC0gVG9vbHMgZm9yIGRvY3VtZW50aW5nIEYjIGFuZCBDIyBwcm9qZWN0cy4g
IFRoZSBsaWJyYXJ5IGNvbnRhaW5zIGV4dGVuc2libGUgTWFya2Rvd24gcGFy
c2VyIGFzIGEgY29yZSBjb21wb25lbnQuCiogW0NvbW1vbk1hcmsuTkVUXSho
dHRwczovL2dpdGh1Yi5jb20vS25hZ2lzL0NvbW1vbk1hcmsuTkVUKSAtIElt
cGxlbWVudGF0aW9uIG9mIENvbW1vbk1hcmsgc3BlY2lmaWNhdGlvbiBpbiBD
IyBmb3IgY29udmVydGluZyBNYXJrZG93biBkb2N1bWVudHMgdG8gSFRNTC4g
T3B0aW1pemVkIGZvciBtYXhpbXVtIHBlcmZvcm1hbmNlIGFuZCBwb3J0YWJp
bGl0eS4KKiBbbWFya2RpZ10oaHR0cHM6Ly9naXRodWIuY29tL2x1bmV0LWlv
L21hcmtkaWcpIC0gQSBmYXN0LCBwb3dlcmZ1bCwgQ29tbW9uTWFyayBjb21w
bGlhbnQsIGV4dGVuc2libGUgTWFya2Rvd24gcHJvY2Vzc29yIGZvciAuTkVU
LgoKIyMgTWFpbAoKKiBbRmx1ZW50RW1haWxdKGh0dHBzOi8vZ2l0aHViLmNv
bS9sdWtlbmNvZGUvRmx1ZW50RW1haWwpIC0gQSBmbHVlbnQgd3JhcHBlciBm
b3IgU3lzdGVtLk5ldC5NYWlsIHdpdGggUmF6b3IgdGVtcGxhdGluZyBzdXBw
b3J0LgoqIFtNYWlsS2l0XShodHRwczovL2dpdGh1Yi5jb20vanN0ZWRmYXN0
L01haWxLaXQpIC0gQSBjb21wbGV0ZSBjcm9zcy1wbGF0Zm9ybSBtYWlsIHN0
YWNrIGluY2x1ZGluZyBJTUFQLCBQT1AzLCBTTVRQLCBhdXRoZW50aWNhdGlv
biBhbmQgbW9yZS4gQnVpbHQgb24gdG9wIG9mIE1pbWVLaXQuCiogW01pbWVL
aXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9qc3RlZGZhc3QvTWltZUtpdCkgLSBB
IGNyb3NzLXBsYXRmb3JtIC5ORVQgTUlNRSBjcmVhdGlvbiBhbmQgcGFyc2Vy
IGxpYnJhcnkgd2l0aCBzdXBwb3J0IGZvciBTL01JTUUsIFBHUCwgVE5FRiBh
bmQgVW5peCBtYm94IHNwb29scy4KKiBbUHJlTWFpbGVyLk5ldF0oaHR0cHM6
Ly9naXRodWIuY29tL21pbGtzaGFrZXNvZnR3YXJlL1ByZU1haWxlci5OZXQp
IC0gQyMgbGlicmFyeSB0aGF0IG1vdmVzIHlvdXIgc3R5bGVzaGVldHMgdG8g
aW5saW5lIHN0eWxlIGF0dHJpYnV0ZXMsIGZvciBtYXhpbXVtIGNvbXBhdGli
aWxpdHkgd2l0aCBlLW1haWwgY2xpZW50cy4KKiBbU3Ryb25nR3JpZF0oaHR0
cHM6Ly9naXRodWIuY29tL0plcmljaG8vU3Ryb25nR3JpZCkgLSBDbGllbnQg
Zm9yIFNlbmRHcmlkJ3MgdjMgQVBJLiBOb3Qgb25seSBhbGxvd3MgeW91IHRv
IHNlbmQgZW1haWxzLCBidXQgYWxzbyBhbGxvd3MgeW91IHRvIGJ1bGsgaW1w
b3J0IGNvbnRhY3RzLCBtYW5hZ2UgbGlzdHMgYW5kIHNlZ21lbnRzLCBjcmVh
dGUgY3VzdG9tIGZpZWxkcyBmb3IgeW91ciBsaXN0cywgZXRjLiBBbHNvIGlu
Y2x1ZGVzIGEgcGFyc2VyIGZvciBTZW5kR3JpZCBXZWJob29rcy4KCiMjIE1h
dGhlbWF0aWNzCgoqIFtNYXRoTmV0XShodHRwczovL3d3dy5tYXRoZG90bmV0
LmNvbS8pIC0gTWF0aC5ORVQgaXMgYW4gb3BlbiBzb3VyY2UgaW5pdGlhdGl2
ZSB0byBidWlsZCBhbmQgbWFpbnRhaW4gdG9vbGtpdHMgY292ZXJpbmcgZnVu
ZGFtZW50YWwgbWF0aGVtYXRpY3MsIHRhcmdldHRpbmcgYWR2YW5jZWQgYnV0
IGFsc28gZXZlcnkgZGF5IG5lZWRzIG9mIC5ORVQgZGV2ZWxvcGVycwoqIFtN
aWNyb3NvZnQgQXV0b21hdGljIEdyYXBoIExheW91dF0oaHR0cHM6Ly9naXRo
dWIuY29tL01pY3Jvc29mdC9hdXRvbWF0aWMtZ3JhcGgtbGF5b3V0KSAtIEEg
c2V0IG9mIHRvb2xzIGZvciBncmFwaCBsYXlvdXQgYW5kIHZpZXdpbmcuCiog
W1VuaXRDb252ZXJzaW9uXShodHRwczovL2dpdGh1Yi5jb20vYXR1bG1pc2gv
VW5pdENvbnZlcnNpb24pIC0gRXhwYW5zaWJsZSBVbml0IENvbnZlcnNpb24g
TGlicmFyeSBmb3IgLk5FVCBDb3JlIGFuZCAuTkVUIEZyYW1ld29yawoqIFtB
TEdMSUJdKGh0dHA6Ly93d3cuYWxnbGliLm5ldC8pIC0gQUxHTElCIGlzIGEg
Y3Jvc3MtcGxhdGZvcm0gbnVtZXJpY2FsIGFuYWx5c2lzIGFuZCBkYXRhIHBy
b2Nlc3NpbmcgbGlicmFyeS4gSXQgc3VwcG9ydHMgc2V2ZXJhbCBwcm9ncmFt
bWluZyBsYW5ndWFnZXMgKEMrKywgQyMsIERlbHBoaSkgYW5kIHNldmVyYWwg
b3BlcmF0aW5nIHN5c3RlbXMgKFdpbmRvd3MgYW5kIFBPU0lYLCBpbmNsdWRp
bmcgTGludXgpICoqW1Byb3ByaWV0YXJ5XSoqIGFuZCAqKltGcmVlIEVkaXRp
b25dKioKKiBbQXV0b0RpZmZdKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGV4c2h0
Zi9hdXRvZGlmZikgLSBBdXRvRGlmZiBpcyBhIGxpYnJhcnkgZm9yIHF1aWNr
bHkgY29tcHV0aW5nIGdyYWRpZW50cyBvZiBmdW5jdGlvbnMgZGVmaW5lZCBi
eSBleHByZXNzaW9ucy4gTWFpbmx5IHVzZWZ1bCBpbiBudW1lcmljYWwgb3B0
aW1pemF0aW9uCiogW0dlb21ldFJpXShodHRwczovL2dpdGh1Yi5jb20vUmlT
ZWFyY2hlci9HZW9tZXRSaSkgLSBTaW1wbGUgYW5kIGxpZ2h0d2VpZ2h0IGNv
bXB1dGF0aW9uYWwgZ2VvbWV0cnkgbGlicmFyeSBmb3IgLk5ldAoqIFtSYXRp
b25hbHNdKGh0dHBzOi8vZ2l0aHViLmNvbS90b21wYXpvdXJlay9SYXRpb25h
bHMpIC0gSW1wbGVtZW50YXRpb24gb2YgcmF0aW9uYWwgbnVtYmVyIGFyaXRo
bWV0aWMgZm9yIC5ORVQgd2l0aCBhcmJpdHJhcnkgcHJlY2lzaW9uLgoKIyMg
TWVkaWEKCiogW0NTQ29yZV0oaHR0cHM6Ly9naXRodWIuY29tL2ZpbG9lL2Nz
Y29yZSkgLSBBbiBhZHZhbmNlZCBhdWRpbyBsaWJyYXJ5LCBzdXBwb3J0aW5n
IHBsYXliYWNrL3JlY29yZGluZywgZGVjb2RpbmcvZW5jb2RpbmcgYW5kIHBy
b2Nlc3Npbmcgb2YgYXVkaW8gZGF0YSBpbiByZWFsdGltZSAoZWZmZWN0cywg
dmlzdWFsaXphdGlvbnMsIC4uLikuCiogW1RhZ0xpYiNdKGh0dHBzOi8vZ2l0
aHViLmNvbS9tb25vL3RhZ2xpYi1zaGFycCkgLSBUYWdMaWIjIChha2EgdGFn
bGliLXNoYXJwKSBpcyBhIGxpYnJhcnkgZm9yIHJlYWRpbmcgYW5kIHdyaXRp
bmcKbWV0YWRhdGEgaW4gbWVkaWEgZmlsZXMsIGluY2x1ZGluZyB2aWRlbywg
YXVkaW8sIGFuZCBwaG90byBmb3JtYXRzCiogW0xpYlZMQ1NoYXJwXShodHRw
czovL2dpdGh1Yi5jb20vdmlkZW9sYW4vbGlidmxjc2hhcnApIC0gWGFtYXJp
biBiaW5kaW5ncyBmb3IgbGlidmxjLCB0aGUgbXVsdGltZWRpYSBmcmFtZXdv
cmsgcG93ZXJpbmcgdGhlIFZMQyBhcHBsaWNhdGlvbnMgbWFkZSBieSBWaWRl
b0xBTi4KKiBbTkF1ZGlvXShodHRwczovL2dpdGh1Yi5jb20vbmF1ZGlvL05B
dWRpbykgLSBQbGF5YmFjaywgZGVjb2RlIGFuZCBlbmNvZGUgYXVkaW8gaW4g
YSB2YXJpZXR5IG9mIGZpbGUgZm9ybWF0cyBzdWNoIGFzIE1QMywgTVA0LCBX
QVYsIEFJRkYsIFNwZWV4LCBldGMuCiogW1hhYmUuRkZtcGVnXShodHRwczov
L2dpdGh1Yi5jb20vdG9tYXN6em11ZGEvWGFiZS5GRm1wZWcpIC0gLk5FVCBT
dGFuZGFyZCB3cmFwcGVyIGZvciBGRm1wZWcuIEl0IGFsbG93cyB0byBwcm9j
ZXNzIG1lZGlhIHdpdGhvdXQga25vdyBob3cgRkZtcGVnIHdvcmtzLCBhbmQg
Y2FuIGJlIHVzZWQgdG8gcGFzcyBjdXN0b21pemVkIGFyZ3VtZW50cyB0byBG
Rm1wZWcgZnJvbSBDIyBhcHBsaWNhdGlvbi4gKipbJF0qKgoKIyMgTWV0cmlj
cwoKKiBbQyMgU3RhdHNEIENsaWVudF0oaHR0cHM6Ly9naXRodWIuY29tL1Bl
cmVpbmdvL3N0YXRzZC1jc2hhcnAtY2xpZW50KSAtIEMjIGNsaWVudCBmb3Ig
RXRzeSdzIFN0YXRzRAoqIFtGb3VuZGF0aW9dKGh0dHBzOi8vZ2l0aHViLmNv
bS9Gb3VuZGF0aW9GeC9Gb3VuZGF0aW8jbWV0cmljcykgLSBBIGNvbW1vbiBp
bnRlcmZhY2Ugd2l0aCBpbi1tZW1vcnksIFJlZGlzLCBTdGF0c0QsIGFuZCBN
ZXRyaWNzLk5FVCBpbXBsZW1lbnRhdGlvbnMuCgojIyBNaWNybyBGcmFtZXdv
cmsKKiBbLk5FVCBNaWNybyBGcmFtZXdvcmsgSW50ZXJwcmV0ZXJdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9ORVRNRi9uZXRtZi1pbnRlcnByZXRlcikgLSBNaWNy
b3NvZnTCriAuTkVUIE1pY3JvIEZyYW1ld29yayAoTkVUTUYpIGZvciBkZXZl
bG9waW5nIGVtYmVkZGVkIGFwcGxpY2F0aW9ucyBvbiBzbWFsbCBkZXZpY2Vz
IHVzaW5nIFZpc3VhbCBTdHVkaW8KCiMjIE1pbmlmaWNhdGlvbgoKKiBbTWlj
cm9zb2Z0IEFqYXggTWluaWZpZXJdKGh0dHBzOi8vYXJjaGl2ZS5jb2RlcGxl
eC5jb20vP3A9YWpheG1pbikgLSBDb250YWlucyBKUyBhbmQgQ1NTIG1pbmlm
aWVycyB3aGljaCBoYXZlIGEgaGlnaGVzdCBwZXJmb3JtYW5jZSwgYmVjYXVz
ZSBpdHMgaGF2ZSBiZWVuIHNwZWNpZmljYWxseSBkZXNpZ25lZCBmb3IgLk5F
VC4gT3B0aW9uYWxseSBwcm9kdWNlIFNvdXJjZSBNYXBzIGZvciBKUyBjb2Rl
LgoqIFtXZWIgTWFya3VwIE1pbmlmaWVyXShodHRwczovL2dpdGh1Yi5jb20v
VGFyaXRzeW4vV2ViTWFya3VwTWluKSAtIC5ORVQgbGlicmFyeSB0aGF0IGNv
bnRhaW5zIGEgc2V0IG9mIG1hcmt1cCBtaW5pZmllcnMuIFRoZSBvYmplY3Rp
dmUgb2YgdGhpcyBwcm9qZWN0IGlzIHRvIGltcHJvdmUgdGhlIHBlcmZvcm1h
bmNlIG9mIHdlYiBhcHBsaWNhdGlvbnMgYnkgcmVkdWNpbmcgdGhlIHNpemUg
b2YgSFRNTCwgWEhUTUwgYW5kIFhNTCBjb2RlLgoKIyMgTWlzYwoqIFtDU2hh
cnAgUGFkXShodHRwOi8vY3NoYXJwcGFkLmNvbSkgLSBBIHdlYi1iYXNlZCBD
IyBSRVBMIHdpdGggYXdlc29tZSBjb2RlIGNvbXBsZXRpb24uCiogW0F6dXJl
Q3Jhd2xlcl0oaHR0cHM6Ly9naXRodWIuY29tL3lhZ29wdi9BenVyZUNyYXds
ZXIpIC0gVGFrZSBIVE1MIFNuYXBzaG90cyBmb3IgeW91ciBBbmd1bGFyLCBF
bWJlciwgRHVyYW5kYWwgb3IgYW55IEphdmFTY3JpcHQgYXBwbGljYXRpb25z
CiogW0NTU2NyaXB0XShodHRwOi8vd3d3LmNzc2NyaXB0Lm5ldC8pIC0gQ1Mt
U2NyaXB0IGlzIGEgQ0xSIGJhc2VkIHNjcmlwdGluZyBzeXN0ZW0gd2hpY2gg
dXNlcyBDIyBhcyBhIHByb2dyYW1taW5nIGxhbmd1YWdlLiBDUy1TY3JpcHQg
Y3VycmVudGx5IHRhcmdldHMgTWljcm9zb2Z0IGltcGxlbWVudGF0aW9uIG9m
IENMUiAoLk5FVCAyLjAvMy4wLzMuNS80LjAvNC41KSB3aXRoIGZ1bGwgc3Vw
cG9ydCBvbiBNb25vLiBDb21lcyB3aXRoIG1hbnkgYWRkaXRpb25hbCBmZWF0
dXJlcywgc3VjaCBhcyBzY3JpcHQgaG9zdGluZy4KKiBbQ3N2SGVscGVyXSho
dHRwczovL2dpdGh1Yi5jb20vSm9zaENsb3NlL0NzdkhlbHBlcikgLSBMaWJy
YXJ5IHRvIGhlbHAgcmVhZGluZyBhbmQgd3JpdGluZyBDU1YgZmlsZXMgaHR0
cHM6Ly9naXRodWIuY29tL0pvc2hDbG9zZS9Dc3ZIZWxwZXIKKiBbQ29uc29s
ZVRhYmxlRXh0XShodHRwczovL2dpdGh1Yi5jb20vbWluaGh1bmdpdC9Db25z
b2xlVGFibGVFeHQpIC0gRmx1ZW50IGxpYnJhcnkgdG8gY3JlYXRlIHRhYmxl
IGZvciAuTmV0IGNvbnNvbGUgYXBwbGljYXRpb24uCiogW0ZsYXRNYXBwZXJd
KGh0dHBzOi8vZ2l0aHViLmNvbS9qb2FvbWF0b3NzaWx2YS9GbGF0TWFwcGVy
KSAtIEEgbGlicmFyeSB0byBpbXBvcnQgYW5kIGV4cG9ydCBkYXRhIGZyb20g
YW5kIHRvIHBsYWluIHRleHQgZmlsZXMgaW4gYSBMSU5RLWNvbXBhdGlibGUg
d2F5LgoqIFtGbHVlbnRWYWxpZGF0aW9uXShodHRwczovL2dpdGh1Yi5jb20v
SmVyZW15U2tpbm5lci9GbHVlbnRWYWxpZGF0aW9uKSAtIEEgc21hbGwgdmFs
aWRhdGlvbiBsaWJyYXJ5IGZvciAuTkVUIHRoYXQgdXNlcyBhIGZsdWVudCBp
bnRlcmZhY2UgYW5kIGxhbWJkYSBleHByZXNzaW9ucyBmb3IgYnVpbGRpbmcg
dmFsaWRhdGlvbiBydWxlcy4KKiBbR3VhcmRdKGh0dHBzOi8vZ2l0aHViLmNv
bS9zYWZha2d1ci9ndWFyZCkgLSBBIGhpZ2gtcGVyZm9ybWFuY2UsIGV4dGVu
c2libGUgYXJndW1lbnQgdmFsaWRhdGlvbiBsaWJyYXJ5LgoqIFtWYWxpdF0o
aHR0cHM6Ly9naXRodWIuY29tL3ZhbGl0LXN0YWNrL1ZhbGl0KSAtIFZhbGl0
IGlzIGRlYWQgc2ltcGxlLCBmbHVlbnQgdmFsaWRhdGlvbiBmb3IgLk5FVCBD
b3JlLgoqIFtIdW1hbml6ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9IdW1hbml6
ci9IdW1hbml6ZXIpIC0gSHVtYW5pemVyIG1lZXRzIGFsbCB5b3VyIC5ORVQg
bmVlZHMgZm9yIG1hbmlwdWxhdGluZyBhbmQgZGlzcGxheWluZyBzdHJpbmdz
LCBlbnVtcywgZGF0ZXMsIHRpbWVzLCB0aW1lc3BhbnMsIG51bWJlcnMgYW5k
IHF1YW50aXRpZXMKKiBbTElOUVBhZF0oaHR0cHM6Ly93d3cubGlucXBhZC5u
ZXQpIC0gYSBDIy9WQi9GIyBzY3JhdGNocGFkIHRoYXQgaW5zdGFudGx5IGV4
ZWN1dGVzIGFueSBleHByZXNzaW9uLCBzdGF0ZW1lbnQgYmxvY2sgb3IgcHJv
Z3JhbSB3aXRoIHJpY2ggb3V0cHV0IGZvcm1hdHRpbmcgYW5kIGEgd2VhbHRo
IG9mIGZlYXR1cmVzLiBBbHNvIGxldHMgeW91IGludGVyYWN0aXZlbHkgcXVl
cnkgZGF0YWJhc2VzIGluIExJTlEuIFskXQoqIFtQb2xseV0oaHR0cHM6Ly9n
aXRodWIuY29tL0FwcC12TmV4dC9Qb2xseSkgLSBFeHByZXNzIHRyYW5zaWVu
dC1leGNlcHRpb24taGFuZGxpbmcgYW5kIHJlc2lsaWVuY2UgcG9saWNpZXMg
c3VjaCBhcyBSZXRyeSwgV2FpdC1hbmQtUmV0cnksIENpcmN1aXQgQnJlYWtl
ciwgYW5kIEJ1bGtoZWFkIElzb2xhdGlvbiBpbiBhIGZsdWVudCBtYW5uZXIu
IEZ1bGx5IHRocmVhZC1zYWZlIGFuZCBmdWxsIGFzeW5jIHN1cHBvcnQuICAo
NC4wIC8gNC41IC8gLk5FVCBDb3JlIC8gLk5FVCBTdGFuZGFyZCAvIFhhbWFy
aW4pLgoqIFtSYW50XShodHRwczovL2dpdGh1Yi5jb20vVGhlQmVya2luL1Jh
bnQpIC0gVGhlIFJhbnQgUHJvY2VkdXJhbCBUZXh0IEdlbmVyYXRpb24gRFNM
IGh0dHBzOi8vYmVya2luLm1lL3JhbnQvCiogW1NjcmlwdENTXShodHRwczov
L2dpdGh1Yi5jb20vc2NyaXB0Y3Mvc2NyaXB0Y3MpIC0gV3JpdGUgQyMgYXBw
cyB3aXRoIGEgdGV4dCBlZGl0b3IsIE51R2V0IGFuZCB0aGUgcG93ZXIgb2Yg
Um9zbHluIQoqIFtTaGllbGRlZF0oaHR0cHM6Ly9naXRodWIuY29tL2piYWtp
Yy9TaGllbGRlZCkgLSBTb2Z0d2FyZSBUcmFuc2FjdGlvbmFsIE1lbW9yeSAo
U1RNKSBpbXBsZW1lbnRhdGlvbiBmb3IgLk5FVAoqIFtNU0J1aWxkIElMTWVy
Z2UgdGFza10oaHR0cHM6Ly9hcmNoaXZlLmNvZGVwbGV4LmNvbS8/cD1pbG1l
cmdlbXNidWlsZCkgLSBNU0J1aWxkIElMTWVyZ2UgdGFzayBpcyBhIE51R2V0
IHBhY2thZ2UgYWxsb3dzIHlvdSB0byB1c2UgdGhlIGZhbW91cyBJTE1lcmdl
IHV0aWxpdHkgaW4gYXV0b21hdGVkIGJ1aWxkcyBhbmQvb3IgVmlzdWFsIFN0
dWRpbyBwcm9qZWN0cy4KKiBbUmVhY3RKUy5ORVRdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9yZWFjdGpzL1JlYWN0Lk5FVCkgLSBSZWFjdEpTLk5FVCBpcyBhIGxp
YnJhcnkgdGhhdCBtYWtlcyBpdCBlYXNpZXIgdG8gdXNlIEJhYmVsIGFsb25n
IHdpdGggRmFjZWJvb2sncyBSZWFjdCBhbmQgSlNYIGZyb20gQyMuCiogW0Fl
cm9uLk5FVF0oaHR0cHM6Ly9naXRodWIuY29tL0FkYXB0aXZlQ29uc3VsdGlu
Zy9BZXJvbi5ORVQpIC0gRWZmaWNpZW50IHJlbGlhYmxlIFVEUCB1bmljYXN0
LCBVRFAgbXVsdGljYXN0LCBhbmQgSVBDIG1lc3NhZ2UgdHJhbnNwb3J0IC0g
Lk5FVCBwb3J0IG9mIEFlcm9uCiogW1R5cGVTaGFwZV0oaHR0cHM6Ly9naXRo
dWIuY29tL2VpcmlrdHNhcnBhbGlzL1R5cGVTaGFwZSkgLSBUeXBlU2hhcGUg
aXMgYSBzbWFsbCwgZXh0ZW5zaWJsZSBGIyBsaWJyYXJ5IGZvciBwcmFjdGlj
YWwgZ2VuZXJpYyBwcm9ncmFtbWluZwoqIFtTdHJlYW1zXShodHRwczovL2dp
dGh1Yi5jb20vbmVzc29zL1N0cmVhbXMpIC0gQSBsaWdodHdlaWdodCBGIy9D
IyBsaWJyYXJ5IGZvciBlZmZpY2llbnQgZnVuY3Rpb25hbC1zdHlsZSBwaXBl
bGluZXMgb24gc3RyZWFtcyBvZiBkYXRhLgoqIFtXYXJkZW5dKGh0dHBzOi8v
Z2l0aHViLmNvbS93YXJkZW4tc3RhY2svV2FyZGVuKSAtIERlZmluZSAiaGVh
bHRoIGNoZWNrcyIgZm9yIHlvdXIgYXBwbGljYXRpb25zLCByZXNvdXJjZXMg
YW5kIGluZnJhc3RydWN0dXJlLiBLZWVwIHlvdXIgV2FyZGVuIG9uIHRoZSB3
YXRjaAoqIFtCeXRlU2l6ZV0oaHR0cHM6Ly9naXRodWIuY29tL29tYXIvQnl0
ZVNpemUpIC0gQnl0ZVNpemUgaXMgYSB1dGlsaXR5IGNsYXNzIHRoYXQgbWFr
ZXMgYnl0ZSBzaXplIHJlcHJlc2VudGF0aW9uIGluIGNvZGUgZWFzaWVyIGJ5
IHJlbW92aW5nIGFtYmlndWl0eSBvZiB0aGUgdmFsdWUgYmVpbmcgcmVwcmVz
ZW50ZWQuIEJ5dGVTaXplIGlzIHRvIGJ5dGVzIHdoYXQgU3lzdGVtLlRpbWVT
cGFuIGlzIHRvIHRpbWUuCiogW0pvdF0oaHR0cHM6Ly9naXRodWIuY29tL2Fu
YWtpYy9qb3QpIC0gYSBsaWJyYXJ5IGZvciBwZXJzaXN0aW5nIGFuZCByZXN0
b3JpbmcgYXBwbGljYXRpb24gc3RhdGUgKGEgYmV0dGVyIGFsdGVybmF0aXZl
IHRvIC5zZXR0aW5ncyBmaWxlcykuCiogW0VudW1zLk5FVF0oaHR0cHM6Ly9n
aXRodWIuY29tL1R5bGVyQnJpbmtsZXkvRW51bXMuTkVUKSAtIEVudW1zLk5F
VCBpcyBhIGhpZ2gtcGVyZm9ybWFuY2UgdHlwZS1zYWZlIC5ORVQgZW51bSB1
dGlsaXR5IGxpYnJhcnkKKiBbSGlkTGlicmFyeV0oaHR0cHM6Ly9naXRodWIu
Y29tL21pa2VvYnJpZW4vSGlkTGlicmFyeSkgLSBUaGlzIGxpYnJhcnkgZW5h
YmxlcyB5b3UgdG8gZW51bWVyYXRlIGFuZCBjb21tdW5pY2F0ZSB3aXRoIEhp
ZCBjb21wYXRpYmxlIFVTQiBkZXZpY2VzIGluIC5ORVQuCiogW1N5c3RlbVdy
YXBwZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9qb3plZml6c28vU3lzdGVtV3Jh
cHBlcikgLSBTeXN0ZW1XcmFwcGVyIGlzIC5ORVQgbGlicmFyeSBmb3IgZWFz
aWVyIHRlc3Rpbmcgb2Ygc3lzdGVtIEFQSXMuCiogW1lvdXR1YmVFeHBsb2Rl
XShodHRwczovL2dpdGh1Yi5jb20vVHlycnJ6L1lvdXR1YmVFeHBsb2RlKSAt
IFVsdGltYXRlIGxpYnJhcnkgZm9yIGV4dHJhY3RpbmcgbWV0YWRhdGEgYW5k
IGRvd25sb2FkaW5nIFlvdXR1YmUgdmlkZW9zIGFuZCBwbGF5bGlzdHMuCiog
W0RldmljZUlkXShodHRwczovL2dpdGh1Yi5jb20vTWF0dGhld0tpbmcvRGV2
aWNlSWQpIC0gR2VuZXJhdGUgYSAnZGV2aWNlIElEJyB0aGF0IGNhbiBiZSB1
c2VkIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IGEgY29tcHV0ZXIuCiogW0Rldmlj
ZURldGVjdG9yLk5FVF0oaHR0cHM6Ly9naXRodWIuY29tL3RvdHBlcm8vRGV2
aWNlRGV0ZWN0b3IuTkVUKSAtIFRoZSBVbml2ZXJzYWwgRGV2aWNlIERldGVj
dGlvbiBsaWJyYXJ5IHdpbGwgcGFyc2UgYW55IFVzZXIgQWdlbnQgYW5kIGRl
dGVjdCB0aGUgYnJvd3Nlciwgb3BlcmF0aW5nIHN5c3RlbSwgZGV2aWNlIHVz
ZWQgKGRlc2t0b3AsIHRhYmxldCwgbW9iaWxlLCB0diwgY2FycywgY29uc29s
ZSwgZXRjLiksIGJyYW5kIGFuZCBtb2RlbC4KKiBbQ29yYXZlbF0oaHR0cHM6
Ly9naXRodWIuY29tL2phbWVzbWgvY29yYXZlbCkgTmVhci16ZXJvIGNvbmZp
ZyAuTkVUIENvcmUgbGlicmFyeSB0aGF0IG1ha2VzIFRhc2sgU2NoZWR1bGlu
ZywgQ2FjaGluZywgUXVldWluZywgTWFpbGluZywgRXZlbnQgQnJvYWRjYXN0
aW5nIChhbmQgbW9yZSkgYSBicmVlemUhCgojIyBNVlZNCgoqIFtDYWxpYnVy
bi5NaWNyb10oaHR0cHM6Ly9naXRodWIuY29tL0NhbGlidXJuLU1pY3JvL0Nh
bGlidXJuLk1pY3JvKSAtIEEgc21hbGwsIHlldCBwb3dlcmZ1bCBmcmFtZXdv
cmssIGRlc2lnbmVkIGZvciBidWlsZGluZyBhcHBsaWNhdGlvbnMgYWNyb3Nz
IGFsbCBYQU1MIHBsYXRmb3Jtcy4gSXRzIHN0cm9uZyBzdXBwb3J0IGZvciBN
ViogcGF0dGVybnMgd2lsbCBlbmFibGUgeW91IHRvIGJ1aWxkIHlvdXIgc29s
dXRpb24gcXVpY2tseSwgd2l0aG91dCB0aGUgbmVlZCB0byBzYWNyaWZpY2Ug
Y29kZSBxdWFsaXR5IG9yIHRlc3RhYmlsaXR5LgoqIFtNVlZNIExpZ2h0IFRv
b2xraXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sYnVnbmlvbi9tdnZtbGlnaHQp
IC0gVGhlIG1haW4gcHVycG9zZSBvZiB0aGUgdG9vbGtpdCBpcyB0byBhY2Nl
bGVyYXRlIHRoZSBjcmVhdGlvbiBhbmQgZGV2ZWxvcG1lbnQgb2YgTVZWTSBh
cHBsaWNhdGlvbnMgaW4gV1BGLCBTaWx2ZXJsaWdodCwgV2luZG93cyBTdG9y
ZSAoUlQpIGFuZCBmb3IgV2luZG93cyBQaG9uZQoqIFtDYXRlbF0oaHR0cHM6
Ly93d3cuY2F0ZWxwcm9qZWN0LmNvbS8pIC0gQ2F0ZWwgaXMgYW4gYXBwbGlj
YXRpb24gZGV2ZWxvcG1lbnQgcGxhdGZvcm0gd2l0aCB0aGUgZm9jdXMgb24g
TVZWTSAoV1BGLCBTaWx2ZXJsaWdodCwgV2luZG93cyBQaG9uZSBhbmQgV2lu
UlQpIGFuZCBNVkMgKEFTUC5ORVQgTVZDKS4gVGhlIGNvcmUgb2YgQ2F0ZWwg
Y29udGFpbnMgYW4gSW9DIGNvbnRhaW5lciwgbW9kZWxzLCB2YWxpZGF0aW9u
LCBtZW1lbnRvLCBtZXNzYWdlIG1lZGlhdG9yLCBhcmd1bWVudCBjaGVja2lu
ZywgZXRjLgoqIFtVcGRhdGVDb250cm9sc10oaHR0cDovL3VwZGF0ZWNvbnRy
b2xzLm5ldC9jcy8pIC0gVXBkYXRlIENvbnRyb2xzIGRvZXMgbm90IHJlcXVp
cmUgdGhhdCB5b3UgaW1wbGVtZW50IGBJTm90aWZ5UHJvcGVydHlDaGFuZ2Vk
YCBvciBkZWNsYXJlIGEgYERlcGVuZGVuY3lQcm9wZXJ0eWAuIEl0IGNvbm5l
Y3RzIGNvbnRyb2xzIGRpcmVjdGx5IHRvIENMUiBwcm9wZXJ0aWVzLiBUaGlz
IG1ha2VzIGl0IHBlcmZlY3QgZm9yIHRoZSBNb2RlbC9WaWV3L1ZpZXdNb2Rl
bCBwYXR0ZXJuLgoqIFtSZWFjdGl2ZVVJXShodHRwczovL2dpdGh1Yi5jb20v
cmVhY3RpdmV1aS9yZWFjdGl2ZXVpLykgLSBBbiBNVlZNIGZyYW1ld29yayBm
b3IgLk5FVCB0aGF0IGludGVncmF0ZXMgdGhlIFJlYWN0aXZlIEV4dGVuc2lv
bnMgKFJ4KSBmcmFtZXdvcmssIGVuYWJsaW5nIGRldmVsb3BlcnMgdG8gYnVp
bGQgZWxlZ2FudCwgdGVzdGFibGUgYXBwbGljYXRpb25zIHVzaW5nIFdQRiwg
V2luZG93cyBTdG9yZSBBcHBzLCBXUDggb3IgWGFtYXJpbi4KKiBbT2tyYSBB
cHAgRnJhbWV3b3JrXShodHRwczovL29rcmFmcmFtZXdvcmsuZ2l0aHViLmlv
KSAtIEFuIGFwcCBjZW50cmljIE1WVk0gZnJhbWV3b3JrIGZvciBXaW5kb3dz
IDguMSBidWlsdCB3aXRoIGRlcGVuZGVuY3kgaW5qZWN0aW9uIGluIG1pbmQs
IGluY2x1ZGluZyBhIGZ1bGwgc2V0IG9mIFZpc3VhbCBTdHVkaW8gTVZWTSB0
ZW1wbGF0ZXMuCiogW1ByaXNtXShodHRwczovL2dpdGh1Yi5jb20vUHJpc21M
aWJyYXJ5L1ByaXNtKSAtIEEgY3Jvc3MtcGxhdGZvcm0gZGVza3RvcCBhbmQg
bW9iaWxlIE1WVk0gZGV2ZWxvcG1lbnQgZnJhbWV3b3JrLgoqIFtXaW4gQXBw
bGljYXRpb24gRnJhbWV3b3JrIChXQUYpXShodHRwczovL2dpdGh1Yi5jb20v
amJlMjI3Ny93YWYpIC0gQSBsaWdodHdlaWdodCBGcmFtZXdvcmsgdGhhdCBo
ZWxwcyB5b3UgdG8gY3JlYXRlIHdlbGwgc3RydWN0dXJlZCBXUEYgYW5kIFVX
UCBBcHBsaWNhdGlvbnMuIEl0IHN1cHBvcnRzIHlvdSBpbiBhcHBseWluZyBh
IExheWVyZWQgQXJjaGl0ZWN0dXJlIGFuZCB0aGUgTW9kZWwtVmlldy1WaWV3
TW9kZWwgcGF0dGVybi4KKiBbTVZWTUNyb3NzXShodHRwczovL2dpdGh1Yi5j
b20vTXZ2bUNyb3NzL012dm1Dcm9zcykgLSBDcm9zcy1wbGF0Zm9ybSBtdnZt
IG1vYmlsZSBkZXZlbG9wbWVudCBmcmFtZXdvcmsgZm9yIFdQRiwgU2lsdmVy
bGlnaHQgZm9yIFdQNyBhbmQgV1A4LCBNb25vIGZvciBBbmRyb2lkLCBNb25v
VG91Y2ggZm9yIGlPUywgV2luZG93cyBVbml2ZXJzYWwgcHJvamVjdHMgKFdQ
QTguMSBhbmQgV2luZG93cyA4LjEgU3RvcmUgYXBwcykuIE1ha2VzIGV4dGVu
c2l2ZSB1c2Ugb2YgUG9ydGFibGUgQ2xhc3MgTGlicmFyaWVzIChQQ0wpIHRv
IHByb3ZpZGUgbWFpbnRhaW5hYmxlIGNyb3NzIHBsYXRmb3JtIEMjIG5hdGl2
ZSBhcHBsaWNhdGlvbnMuCiogW1N0eWxldF0oaHR0cHM6Ly9naXRodWIuY29t
L2NhbnRvbjcvc3R5bGV0LykgLSBNaW5pbWFsIE1WVk0gZnJhbWV3b3JrIGlu
c3BpcmVkIGJ5IENhbGlidXJuIE1pY3JvLCB3aXRoIGdvb2QgZG9jdW1lbnRh
dGlvbiwgaGlnaCB0ZXN0IGNvdmVyYWdlLCBhbmQgaXRzIG93biBJb0MgY29u
dGFpbmVyCiogW0dlbWluaV0oaHR0cHM6Ly9naXRodWIuY29tL3Rnam9uZXMv
Z2VtaW5pKSAtIElERSBmcmFtZXdvcmsgc2ltaWxhciBpbiBjb25jZXB0IHRv
IHRoZSBWaXN1YWwgU3R1ZGlvIFNoZWxsLiBCdWlsdCBvbiBXUEYsIEF2YWxv
bkRvY2ssIGFuZCBDYWxpYnVybiBNaWNyby4KKiBbVG9tcyBUb29sYm94XSho
dHRwczovL2dpdGh1Yi5jb20vdG9tLWVuZ2xlcnQvVG9tc1Rvb2xib3gpIC0g
VmlzdWFsIENvbXBvc2l0aW9uIGZyYW1ld29yayB0byBlYXNpbHkgYnVpbGQg
bW9kdWxhcml6ZWQgTVZWTSBhcHBsaWNhdGlvbnMgYmFzZWQgb24gdGhlIFtN
YW5hZ2VkIEV4dGVuc2liaWxpdHkgRnJhbWV3b3JrIChNRUYpXShodHRwczov
L2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9kb3RuZXQvZnJhbWV3b3JrL21l
Zi9pbmRleCkuCiogW01WVk0gRGlhbG9nc10oaHR0cHM6Ly9naXRodWIuY29t
L0ZhbnRhc3RpY0ZpYXNjby9tdnZtLWRpYWxvZ3MpIC0gRnJhbWV3b3JrIHNp
bXBsaWZ5aW5nIHRoZSBjb25jZXB0IG9mIG9wZW5pbmcgZGlhbG9ncyBmcm9t
IGEgdmlldyBtb2RlbCB3aGVuIHVzaW5nIE1WVk0gaW4gV1BGIG9yIFVXUC4K
CiMjIE9iamVjdCB0byBvYmplY3QgbWFwcGluZwoKKiBbQXV0b01hcHBlcl0o
aHR0cHM6Ly9naXRodWIuY29tL0F1dG9NYXBwZXIvQXV0b01hcHBlcikgLSBB
IGNvbnZlbnRpb24tYmFzZWQgb2JqZWN0LW9iamVjdCBtYXBwZXIgaW4gLk5F
VC4gaHR0cHM6Ly9hdXRvbWFwcGVyLm9yZwoqIFtUaW55TWFwcGVyXShodHRw
czovL2dpdGh1Yi5jb20vVGlueU1hcHBlci9UaW55TWFwcGVyKSAtIEEgdGlu
eSBhbmQgcXVpY2sgb2JqZWN0IG1hcHBlciBmb3IgLk5FVC4KKiBbRXhwcmVz
c01hcHBlcl0oaHR0cHM6Ly9naXRodWIuY29tL2ZsdWVudHNwcmluZ3MvRXhw
cmVzc01hcHBlcikgLSBBIGxpZ2h0d2VpZ2h0LCBsaWdodGluZyBmYXN0IC5O
RVQgbWFwcGVyIHRvIG1hcCBvbmUgdHlwZSBvZiBvYmplY3QocykgdG8gYW5v
dGhlciBpbiBhdXRvbWF0ZWQgYW5kIGVhc3kgd2F5LiBFeHByZXNzTWFwcGVy
IHJlbGllcyBjb21wbGV0ZWx5IG9uIHRoZSBleHByZXNzaW9uIHRyZWVzLgoq
IFtBZ2lsZU1hcHBlcl0oaHR0cHM6Ly9naXRodWIuY29tL2FnaWxlb2JqZWN0
cy9BZ2lsZU1hcHBlcikgLSBBIHplcm8tY29uZmlndXJhdGlvbiBPYmplY3Qt
T2JqZWN0IG1hcHBlciBzdXBwb3J0aW5nIC5ORVQgU3RhbmRhcmQgMS4wCiog
W01hcHN0ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9NYXBzdGVyTWFwcGVyL01h
cHN0ZXIpIC0gQSBoaWdoIHBlcmZvcm1hbmNlIG9iamVjdCBtYXBwZXIgaW4g
Lm5ldCAKIyMgT2ZmaWNlCgoqIFtFeGNlbERuYV0oaHR0cHM6Ly9naXRodWIu
Y29tL0V4Y2VsLUROQS9FeGNlbERuYSkgLSBFeGNlbERuYSBtYWtlcyBpdCBl
YXNpZXIgdG8gY3JlYXRlIGFuZCBkZXBsb3kgRXhjZWwgQWRkLUlucyB1c2lu
ZyBDIywgRiMgb3IgVkIgLk5FVAoqIFtDbG9zZWRYTUxdKGh0dHBzOi8vZ2l0
aHViLmNvbS9DbG9zZWRYTUwvQ2xvc2VkWE1MKSAtIENsb3NlZFhNTCBtYWtl
cyBpdCBlYXNpZXIgZm9yIGRldmVsb3BlcnMgdG8gY3JlYXRlIEV4Y2VsIDIw
MDcvMjAxMCBmaWxlcwoqIFtOUE9JXShodHRwczovL2dpdGh1Yi5jb20vdG9u
eXF1cy9ucG9pKSAtIFRoaXMgcHJvamVjdCBpcyB0aGUgLk5FVCB2ZXJzaW9u
IG9mIFBPSSBKYXZhIHByb2plY3QgYXQgaHR0cHM6Ly9wb2kuYXBhY2hlLm9y
Zy8uCiogW0VQUGx1c10oaHR0cHM6Ly9naXRodWIuY29tL0phbkthbGxtYW4v
RVBQbHVzKSAtIEVQUGx1cyBpcyBhIC5ORVQgbGlicmFyeSB0aGF0IHJlYWRz
IGFuZCB3cml0ZXMgRXhjZWwgMjAwNy8yMDEwIGZpbGVzIHVzaW5nIHRoZSBP
cGVuIE9mZmljZSBYTUwgZm9ybWF0ICh4bHN4KS4KKiBbT3BlbiBYTUwgU0RL
XShodHRwczovL2dpdGh1Yi5jb20vb2ZmaWNlZGV2L29wZW4teG1sLXNkaykg
LSBUaGUgT3BlbiBYTUwgU0RLIHByb3ZpZGVzIG9wZW4tc291cmNlIGxpYnJh
cmllcyBmb3Igd29ya2luZyB3aXRoIE9wZW4gWE1MIERvY3VtZW50cyAoRE9D
WCwgWExTWCwgYW5kIFBQVFgpLgoqIFtEb2NYXShodHRwczovL2dpdGh1Yi5j
b20veGNlZWRzb2Z0d2FyZS9Eb2NYKSAtIERvY1ggaXMgYSAuTkVUIGxpYnJh
cnkgdGhhdCBhbGxvd3MgZGV2ZWxvcGVycyB0byBtYW5pcHVsYXRlIFdvcmQg
MjAwNy8yMDEwLzIwMTMgZmlsZXMsIGl0IGRvZXMgbm90IHJlcXVpcmUgTWlj
cm9zb2Z0IFdvcmQgb3IgT2ZmaWNlIHRvIGJlIGluc3RhbGxlZC4KKiBbRXhj
ZWxEYXRhUmVhZGVyXShodHRwczovL2dpdGh1Yi5jb20vRXhjZWxEYXRhUmVh
ZGVyL0V4Y2VsRGF0YVJlYWRlcikgLSBMaWdodHdlaWdodCBhbmQgZmFzdCBs
aWJyYXJ5IHdyaXR0ZW4gaW4gQyMgZm9yIHJlYWRpbmcgTWljcm9zb2Z0IEV4
Y2VsIGZpbGVzICgyLjAtMjAwNykuCiogW05ldE9mZmljZV0oaHR0cHM6Ly9n
aXRodWIuY29tL05ldE9mZmljZUZ3L05ldE9mZmljZSkgLSAuTkVUIHdyYXBw
ZXIgYXNzZW1ibGllcyBmb3IgTWljcm9zb2Z0IE9mZmljZSBhcHBsaWNhdGlv
bnMuCgojIyBPUk0KCiogW0VudGl0eSBGcmFtZXdvcmsgNl0oaHR0cHM6Ly9n
aXRodWIuY29tL2FzcG5ldC9FbnRpdHlGcmFtZXdvcms2KSAtIE9iamVjdC1y
ZWxhdGlvbmFsIG1hcHBlciB0aGF0IGVuYWJsZXMgLk5FVCBkZXZlbG9wZXJz
IHRvIHdvcmsgd2l0aCByZWxhdGlvbmFsIGRhdGEgdXNpbmcgZG9tYWluLXNw
ZWNpZmljIG9iamVjdHMKKiBbRW50aXR5IEZyYW1ld29yayBDb3JlXShodHRw
czovL2dpdGh1Yi5jb20vYXNwbmV0L0VudGl0eUZyYW1ld29ya0NvcmUpIC0g
T2JqZWN0LXJlbGF0aW9uYWwgbWFwcGVyIHRoYXQgZW5hYmxlcyAuTkVUIGRl
dmVsb3BlcnMgdG8gd29yayB3aXRoIHJlbGF0aW9uYWwgZGF0YSB1c2luZyBk
b21haW4tc3BlY2lmaWMgb2JqZWN0cwoqIFtEYXBwZXJdKGh0dHBzOi8vZ2l0
aHViLmNvbS9TdGFja0V4Y2hhbmdlL0RhcHBlcikgLSBBIHNpbXBsZSBvYmpl
Y3QgbWFwcGVyIGZvciAuTkVUIGJ5IFtTdGFja0V4Y2hhbmdlXShodHRwczov
L3N0YWNrZXhjaGFuZ2UuZ2l0aHViLmlvLykKKiBbRGFwcGVyIEV4dGVuc2lv
bnNdKGh0dHBzOi8vZ2l0aHViLmNvbS90bXNtaXRoL0RhcHBlci1FeHRlbnNp
b25zKSAtIFNtYWxsIGxpYnJhcnkgdGhhdCBjb21wbGVtZW50cyBEYXBwZXIg
YnkgYWRkaW5nIGJhc2ljIENSVUQgb3BlcmF0aW9ucyAoR2V0LCBJbnNlcnQs
IFVwZGF0ZSwgRGVsZXRlKSBmb3IgeW91ciBQT0NPcwoqIFtEYXBwZXIuRmFz
dENSVURdKGh0dHBzOi8vZ2l0aHViLmNvbS9Nb29uU3Rvcm0vRGFwcGVyLkZh
c3RDUlVEKSAtIFRoZSBmYXN0ZXN0IG1pY3JvLU9STSBleHRlbnNpb24gZm9y
IERhcHBlcgoqIFtOSGliZXJuYXRlXShodHRwczovL2dpdGh1Yi5jb20vbmhp
YmVybmF0ZSkgLSBOSGliZXJuYXRlIE9iamVjdCBSZWxhdGlvbmFsIE1hcHBl
cgoqIFtGbHVlbnQgTkhpYmVybmF0ZV0oaHR0cHM6Ly9naXRodWIuY29tL0Zs
dWVudE5IaWJlcm5hdGUvZmx1ZW50LW5oaWJlcm5hdGUpIC0gRmx1ZW50LCBY
TUwtbGVzcywgY29tcGlsZSBzYWZlLCBhdXRvbWF0ZWQsIGNvbnZlbnRpb24t
YmFzZWQgbWFwcGluZ3MgZm9yIE5IaWJlcm5hdGUuCiogW0ZsdWVudE1pZ3Jh
dG9yXShodHRwczovL2dpdGh1Yi5jb20vZmx1ZW50bWlncmF0b3IvZmx1ZW50
bWlncmF0b3IpIC0gRmx1ZW50IE1pZ3JhdGlvbnMgZnJhbWV3b3JrIGZvciAu
bmV0CiogW1NlcnZpY2VTdGFjay5Pcm1MaXRlXShodHRwczovL2dpdGh1Yi5j
b20vU2VydmljZVN0YWNrL1NlcnZpY2VTdGFjay5Pcm1MaXRlKSAtIExpZ2h0
LCBzaW1wbGUgYW5kIGZhc3QgY29udmVudGlvbi1iYXNlZCBQT0NPIE9STSAq
KltbRnJlZSBmb3IgT1NTXShodHRwczovL2dpdGh1Yi5jb20vU2VydmljZVN0
YWNrL1NlcnZpY2VTdGFjay5Pcm1MaXRlL2Jsb2IvbWFzdGVyL2xpY2Vuc2Uu
dHh0KV0qKiAqKlskXSoqCiogW01hc3NpdmVdKGh0dHBzOi8vZ2l0aHViLmNv
bS9GcmFuc0JvdW1hL01hc3NpdmUpIC0gQSBzbWFsbCwgaGFwcHksIGRhdGEg
YWNjZXNzIHRvb2wgdGhhdCB3aWxsIGxvdmUgeW91IGZvcmV2ZXIuCiogW0xJ
TlEgdG8gREJdKGh0dHBzOi8vZ2l0aHViLmNvbS9saW5xMmRiL2xpbnEyZGIp
IC0gVGhlIGZhc3Rlc3QgTElOUSBkYXRhYmFzZSBhY2Nlc3MgbGlicmFyeSBv
ZmZlcmluZyBhIHNpbXBsZSwgbGlnaHQsIGZhc3QsIGFuZCB0eXBlLXNhZmUg
bGF5ZXIgYmV0d2VlbiB5b3VyIFBPQ08gb2JqZWN0cyBhbmQgeW91ciBkYXRh
YmFzZS4KKiBbTWljcm9MaXRlIE9STV0oaHR0cHM6Ly9naXRodWIuY29tL1Ry
ZXZvclBpbGxleS9NaWNyb0xpdGUpIE1pY3JvTGl0ZSBPUk0gaXMgYSBtaWNy
byBPYmplY3QgUmVsYXRpb25hbCBNYXBwZXIgZm9yIHRoZSAuTkVUIGZyYW1l
d29yay4gSXQgaXMgZGVzaWduZWQgdG8gYmUgZWFzeSB0byB1c2UsIGV4dGVu
c2libGUgYW5kIHRlc3RhYmxlLgoqIFtQZXRhUG9jb10oaHR0cHM6Ly9naXRo
dWIuY29tL0NvbGxhYm9yYXRpbmdQbGF0eXB1cy9QZXRhUG9jbykgLSBBIHRp
bnkgT1JNLWlzaCB0aGluZyBmb3IgeW91ciBQT0NPcwoqIFtBc3luY1BvY29d
KGh0dHBzOi8vZ2l0aHViLmNvbS90bWVuaWVyL0FzeW5jUG9jbykgLSBBIGxv
bmctImF3YWl0ZWQiIGZ1bGx5IGFzeW5jaHJvbm91cyBQZXRhUG9jbyBmb3Jr
CiogW05Qb2NvXShodHRwczovL2dpdGh1Yi5jb20vc2Nob3RpbWUvTlBvY28p
IC0gU2ltcGxlIG1pY3JvT1JNIHRoYXQgbWFwcyB0aGUgcmVzdWx0cyBvZiBh
IHF1ZXJ5IG9udG8gYSBQT0NPIG9iamVjdC4gQmFzZWQgb24gU2Nob3RpbWUn
cyBicmFuY2ggb2YgUGV0YVBvY28KKiBbTGltZWJlYW5dKGh0dHBzOi8vZ2l0
aHViLmNvbS9OaWNrLUx1Y2FzL0xpbWVCZWFuKSAtIEh5YnJpZCBPUk0gd2hp
Y2ggdXNlcyBTUUwgZnJhZ21lbnRzIGFuZCBkb2Vzbid0IHJlcXVpcmUgTW9k
ZWwgQ2xhc3Nlcy4KKiBbTExCTEdlbiBQcm9dKGh0dHBzOi8vd3d3LmxsYmxn
ZW4uY29tKSAtIEVudGl0eSBNb2RlbGluZyBzb2x1dGlvbiBmb3IgRW50aXR5
IEZyYW1ld29yaywgTkhpYmVybmF0ZSwgTGlucSB0byBTUUwgYW5kIGl0cyBv
d24gT1JNIGZyYW1ld29yazogTExCTEdlbiBQcm8gUnVudGltZSBGcmFtZXdv
cmsuICoqWyRdW0ZyZWUgTGl0ZSB2ZXJzaW9uXSoqCiogW0luc2lnaHQuRGF0
YWJhc2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9qb253YWduZXIvSW5zaWdodC5E
YXRhYmFzZSkgLSBJbnNpZ2h0LkRhdGFiYXNlIGlzIGEgZmFzdCwgbGlnaHR3
ZWlnaHQsIG1pY3JvLU9STSBmb3IgLk5FVAoqIFtEYkV4dGVuc2lvbnNdKGh0
dHBzOi8vbWF4dG9yb3EuZ2l0aHViLmlvL0RiRXh0ZW5zaW9ucy8pIC0gRGF0
YS1hY2Nlc3MgZnJhbWV3b3JrIHdpdGggYSBzdHJvbmcgZm9jdXMgb24gcXVl
cnkgY29tcG9zaXRpb24sIGdyYW51bGFyaXR5IGFuZCBjb2RlIGFlc3RoZXRp
Y3MuCiogW1NtYXJ0U3FsXShodHRwczovL2dpdGh1Yi5jb20vU21hcnQtS2l0
L1NtYXJ0U3FsKSAtIFNtYXJ0U3FsID0gTXlCYXRpcyArIENhY2hl77yITWVt
b3J5IHwgUmVkaXPvvIkrIFpvb0tlZXBlciArIFIgLyBXIFNwbGl0dGluZyAr
IER5bmFtaWMgUmVwb3NpdG9yeSAuLi4uCiogW1JlcG9EYl0oaHR0cHM6Ly9n
aXRodWIuY29tL21pa2VwZW5kb24vUmVwb0RiKSAtIEEgZHluYW1pYywgbGln
aHR3ZWlnaHQsIGVmZmljaWVudCBhbmQgdmVyeSBmYXN0IEh5YnJpZCBPUk0g
bGlicmFyeSBmb3IgLk5FVC4KCiMjIFBhY2thZ2UgTWFuYWdlbWVudAoKKiBb
TnVHZXRdKGh0dHBzOi8vd3d3Lm51Z2V0Lm9yZy8pIC0gVGhlIC5ORVQgcGFj
a2FnZSBtYW5hZ2VyCiogW0JhR2V0XShodHRwczovL2dpdGh1Yi5jb20vbG9p
Yy1zaGFybWEvQmFHZXQvKSAtIEEgY3Jvc3MtcGxhdGZvcm0sIGxpZ2h0d2Vp
Z2h0IE51R2V0IGFuZCBTeW1ib2wgc2VydmVyCiogW015R2V0XShodHRwczov
L3d3dy5teWdldC5vcmcvKSAtIEhvc3RlZCBQYWNrYWdlIFJlcG9zaXRvcnkg
Zm9yIE51R2V0LCBOUE0sIEJvd2VyIGFuZCBWU0lYLiBBbHNvIHByb3ZpZGVz
IENJIGFzLWEtU2VydmljZS4gKipbJF0qKgoqIFtQYWtldF0oaHR0cHM6Ly9n
aXRodWIuY29tL2ZzcHJvamVjdHMvUGFrZXQpIC0gQSBwYWNrYWdlIGRlcGVu
ZGVuY3kgbWFuYWdlciBmb3IgLk5FVCB3aXRoIHN1cHBvcnQgZm9yIE51R2V0
IHBhY2thZ2VzIGFuZCBHaXRIdWIgcmVwb3NpdG9yaWVzLiBodHRwczovL2Zz
cHJvamVjdHMuZ2l0aHViLmlvL1Bha2V0LwoqIFtTbGVldF0oaHR0cHM6Ly9n
aXRodWIuY29tL2VtZ2FydGVuL3NsZWV0LykgLSBBIE51R2V0IHYzIHN0YXRp
YyBmZWVkIGdlbmVyYXRvciB3aXRoIHN1cHBvcnQgZm9yIEFXUyBTMyBhbmQg
QXp1cmUgU3RvcmFnZQoKIyMgUERGCgoqIFtJVGV4dFNoYXJwXShodHRwczov
L2dpdGh1Yi5jb20vaXRleHQvaXRleHRzaGFycCkgLSBpVGV4dCBpcyBhIFBE
RiBsaWJyYXJ5IHRoYXQgYWxsb3dzIHlvdSB0byBDUkVBVEUsIEFEQVBULCBJ
TlNQRUNUIGFuZCBNQUlOVEFJTiBkb2N1bWVudHMgaW4gdGhlIFBvcnRhYmxl
IERvY3VtZW50IEZvcm1hdCAoUERGKSoqWyRdKioqKltGcmVlIGZvciBPU1Nd
KioKKiBbUGRmaXVtVmlld2VyXShodHRwczovL2dpdGh1Yi5jb20vcHZnaW5r
ZWwvUGRmaXVtVmlld2VyKSAtIFBkZml1bVZpZXdlciBpcyBhIFBERiB2aWV3
ZXIgYmFzZWQgb24gdGhlIFBERml1bSBwcm9qZWN0LgoqIFtXa2h0bWxUb1Bk
Zl0oaHR0cHM6Ly9naXRodWIuY29tL2NvZGF4eS93a2h0bWx0b3BkZikgLSBD
IyB3cmFwcGVyIGFyb3VuZCB3a2h0bWx0b3BkZiBjb25zb2xlIHV0aWxpdHku
IEFsbG93IHRvIGdlbmVyYXRlIHByZWV0eSBQREYgdXNpbmcgSFRNTCBhbmQg
Q1NTLgoqIFtQZGZpdW0uTmV0IFNES10oaHR0cHM6Ly9wZGZpdW0ucGF0YWdh
bWVzLmNvbS9jLXBkZi1saWJyYXJ5LykgLSBBZHZhbmNlZCBDIyBQREYgbGli
cmFyeSBmb3IgcmVuZGVyLCBjcmVhdGUsIGVkaXQsIG1lcmdlLCBzcGxpdCwg
cHJpbnQsIGFuZCB2aWV3IFBERnMuIE9wZW4gc291cmNlIFBERiBWaWV3ZXIg
aXMgYXZhaWxhYmxlIG9uIFtHaXRIdWJdKGh0dHBzOi8vZ2l0aHViLmNvbS9w
YXRhZ2FtZXMpLiBBIFtOdUdldCBwYWNrYWdlXShodHRwczovL3d3dy5udWdl
dC5vcmcvcGFja2FnZXMvUGRmaXVtLk5ldC5TREsvKSBpcyBhbHNvIGF2YWls
YWJsZSBmb3IgZWFzeSBpbmNsdXNpb24gaW50byB5b3VyIHByb2plY3RzLioq
WyRdKioKCiMjIFByb2ZpbGVyCgoqIFtNaW5pUHJvZmlsZXJdKGh0dHBzOi8v
Z2l0aHViLmNvbS9NaW5pUHJvZmlsZXIvZG90bmV0KSAtIEEgc2ltcGxlIGJ1
dCBlZmZlY3RpdmUgbWluaS1wcm9maWxlciBmb3IgQVNQLk5FVCB3ZWJzaXRl
cwoqIFtHbGltcHNlXShodHRwczovL2dpdGh1Yi5jb20vZ2xpbXBzZS9nbGlt
cHNlKSAtIFRoZSBvcGVuIHNvdXJjZSBkaWFnbm9zdGljcyBwbGF0Zm9ybSBm
b3IgdGhlIHdlYgoKIyMgUHJvdG9jb2xzCgoqIFtTU0guTkVUXShodHRwczov
L2dpdGh1Yi5jb20vc3NobmV0L1NTSC5ORVQpIC0gQSBTZWN1cmUgU2hlbGwg
KFNTSCkgbGlicmFyeSBmb3IgLk5FVCwgb3B0aW1pemVkIGZvciBwYXJhbGxl
bGlzbS4gUHJvdmlkZXMgU1NIIGNvbW1hbmRzLCBTRlRQL1NDUCB1cGxvYWRz
IGFuZCBkb3dubG9hZHMsIGFuZCBTT0NLUzQvU09DS1M1L0hUVFAgcHJveGll
cy4KKiBbRmx1ZW50RlRQXShodHRwczovL2dpdGh1Yi5jb20vcm9iaW5yb2Ry
aWNrcy9GbHVlbnRGVFApIC0gQW4gRlRQIGFuZCBGVFBTIGxpYnJhcnkgZm9y
IC5ORVQsIG9wdGltaXplZCBmb3Igc3BlZWQuIFByb3ZpZGVzIGV4dGVuc2l2
ZSBGVFAgY29tbWFuZHMsIGZpbGUgdXBsb2Fkcy9kb3dubG9hZHMgYW5kIEZU
UCBwcm94aWVzLgoqIFtTaGFycFNubXBMaWJdKGh0dHBzOi8vZG9jcy5zaGFy
cHNubXAuY29tLykgLSBBbiBvcGVuIHNvdXJjZSBTTk1QIGltcGxlbWVudGF0
aW9uIGZvciAuTkVUL01vbm8vWGFtYXJpbi4gVmVyc2lvaW4gMSwgMmMsIGFu
ZCAzIGFyZSBzdXBwb3J0ZWQuCiogW0ROU10oaHR0cHM6Ly9naXRodWIuY29t
L2thcGV0YW4vZG5zKSAtIEEgbGlicmFyeSBmb3IgcGFyc2luZyBhbmQgc2Vy
aWFsaXppbmcgRE5TIG1lc3NhZ2VzLiBJbmNsdWRlcyBhIGJhc2ljIEROUyBj
bGllbnQgYW5kIHNlcnZlci4KCiMjIFB1c2ggTm90aWZpY2F0aW9ucwoKKiBb
UHVzaFNoYXJwXShodHRwczovL2dpdGh1Yi5jb20vUmVkdGgvUHVzaFNoYXJw
KSAtIEEgc2VydmVyLXNpZGUgbGlicmFyeSBmb3Igc2VuZGluZyBQdXNoIE5v
dGlmaWNhdGlvbnMgdG8gaU9TLCBPU1gsIEFuZHJvaWQsIENocm9tZSwgV2lu
ZG93cyBQaG9uZSwgV2luZG93cyA4LCBCbGFja2JlcnJ5LCBhbmQgQW1hem9u
IGRldmljZXMuCgojIyBRdWVyeSBCdWlsZGVycwoqIFtTcWxLYXRhXShodHRw
czovL3NxbGthdGEuY29tKSAtIEVsZWdhbnQgU1FMIHF1ZXJ5IGJ1aWxkZXIs
IHRoYXQgc3VwcG9ydHMgY29tcGxleCBxdWVyaWVzLCBqb2lucywgc3ViIHF1
ZXJpZXMsIG5lc3RlZCB3aGVyZSBjb25kaXRpb25zLCB2ZW5kb3IgZW5naW5l
IHRhcmdldHMgYW5kIG1vcmUKCgojIyBRdWV1ZQoKKiBbQ0FQXShodHRwczov
L2dpdGh1Yi5jb20vZG90bmV0Y29yZS9DQVApIC0gQW4gRXZlbnRCdXMgd2l0
aCBsb2NhbCBwZXJzaXN0ZW50IG1lc3NhZ2UgZnVuY3Rpb25hbGl0eSBmb3Ig
UmFiYml0TVEgb3IgS2Fma2EuCiogW05TZXJ2aWNlQnVzXShodHRwczovL2dp
dGh1Yi5jb20vUGFydGljdWxhci9OU2VydmljZUJ1cykgLSBUaGUgbW9zdCBw
b3B1bGFyIHNlcnZpY2UgYnVzIGZvciAuTkVUCiogW0dvZmVyLk5FVF0oaHR0
cHM6Ly9naXRodWIuY29tL2JydGhvci9Hb2Zlci5ORVQpIC0gRWFzeSBDIyBB
UEkgZm9yIERpc3RyaWJ1dGVkIEJhY2tncm91bmQgVGFza3MvSm9icyBmb3Ig
Lk5FVCBDb3JlLiBJbnNwaXJlZCBieSBjZWxlcnkgZm9yIHB5dGhvbi4KKiBb
SGFuZ2ZpcmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9IYW5nZmlyZUlPL0hhbmdm
aXJlKSAtIEluY3JlZGlibHkgZWFzeSB3YXkgdG8gcGVyZm9ybSBmaXJlLWFu
ZC1mb3JnZXQsIGRlbGF5ZWQgYW5kIHJlY3VycmluZyB0YXNrcyBpbnNpZGUg
QVNQLk5FVCBhcHBsaWNhdGlvbnMKKiBbUmFiYml0TVEuTkVUXShodHRwczov
L2dpdGh1Yi5jb20vcmFiYml0bXEvcmFiYml0bXEtZG90bmV0LWNsaWVudCkg
LSBJbXBsZW1lbnRhdGlvbiBvZiBhbiBBTVFQIGNsaWVudCBsaWJyYXJ5IGZv
ciBDIywgYW5kIGEgYmluZGluZyBleHBvc2luZyBBTVFQIHNlcnZpY2VzIHZp
YSBXQ0YKKiBbTmV0TVFdKGh0dHBzOi8vZ2l0aHViLmNvbS96ZXJvbXEvbmV0
bXEpIC0gTmV0TVEgaXMgMTAwJSBuYXRpdmUgQyMgcG9ydCBvZiBaZXJvTVEK
KiBbTWFzc1RyYW5zaXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9NYXNzVHJhbnNp
dC9NYXNzVHJhbnNpdCkgLSBNYXNzVHJhbnNpdCBpcyBsZWFuIHNlcnZpY2Ug
YnVzIGltcGxlbWVudGF0aW9uIGZvciBidWlsZGluZyBsb29zZWx5IGNvdXBs
ZWQgYXBwbGljYXRpb25zIHVzaW5nIHRoZSAuTkVUIEZyYW1ld29yay4KKiBb
UmVidXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9yZWJ1cy1vcmcvUmVidXMpIC0g
UmVidXMgaXMgYSBsZWFuIHNlcnZpY2UgYnVzIGltcGxlbWVudGF0aW9uIGZv
ciAuTkVULCBzaW1pbGFyIGluIG5hdHVyZSB0byBOU2VydmljZUJ1cyBhbmQg
TWFzc1RyYW5zaXQsIG9ubHkgbGVhbmVyCiogW1Jlc3RCdXNdKGh0dHBzOi8v
Z2l0aHViLmNvbS90ZW5vci9SZXN0QnVzKSAtIEEgc2VydmljZS1vcmllbnRl
ZCAuTkVUIG1lc3NhZ2luZyBsaWJyYXJ5IGZvciBSYWJiaXRNUS4KKiBbUmF3
UmFiYml0XShodHRwczovL2dpdGh1Yi5jb20vcGFyZGFobG1hbi9SYXdSYWJi
aXQpIC0gQSBtb2Rlcm4gLk5FVCBDb3JlIGxpYnJhcnkgZm9yIFJhYmJpdE1R
LgoqIFtFYXN5TmV0UV0oaHR0cHM6Ly9naXRodWIuY29tL0Vhc3lOZXRRL0Vh
c3lOZXRRKSAtIEFuIGVhc3kgdG8gdXNlIC5ORVQgQVBJIGZvciBSYWJiaXRN
UQoqIFtXYXJld29sZiBFU0JdKGh0dHBzOi8vZ2l0aHViLmNvbS9XYXJld29s
Zi1FU0IvV2FyZXdvbGYpIC0gQW4gZWFzeSB0byB1c2Ugc2VydmljZSBidXMg
YW5kIG1pY3Jvc2VydmljZXMgcGxhdGZvcm0uIEVhc2lseSBidWlsZCBhcHBs
aWNhdGlvbnMgYW5kIHNlcnZpY2VzIGluIGEgdmlzdWFsIElERS4KKiBbQ29u
Zmx1ZW50J3MgLk5FVCBDbGllbnRdKGh0dHBzOi8vZ2l0aHViLmNvbS9jb25m
bHVlbnRpbmMvY29uZmx1ZW50LWthZmthLWRvdG5ldCkgLSBDb25mbHVlbnQn
cyAuTkVUIENsaWVudCBmb3IgQXBhY2hlIEthZmthLgoqIFtGb3VuZGF0aW9d
KGh0dHBzOi8vZ2l0aHViLmNvbS9Gb3VuZGF0aW9GeC9Gb3VuZGF0aW8jcXVl
dWVzKSAtIEEgY29tbW9uIGludGVyZmFjZSB3aXRoIGluLW1lbW9yeSwgUmVk
aXMgYW5kIEF6dXJlIGltcGxlbWVudGF0aW9ucy4KKiBbS2FmdW5rXShodHRw
czovL2dpdGh1Yi5jb20vamV0L2thZnVuaykgLSBGIyBLYWZrYSBjbGllbnQg
ZnJvbSBKZXQKKiBbQnJpZ2h0ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9Ccmln
aHRlckNvbW1hbmQvQnJpZ2h0ZXIpIC0gQ29tbWFuZCBEaXNwYXRjaGVyLCBQ
cm9jZXNzb3IsIGFuZCBEaXN0cmlidXRlZCBUYXNrIFF1ZXVlIGh0dHBzOi8v
d3d3LmdvcGFyYW1vcmUuaW8vCgojIyBSZWFjdGl2ZSBQcm9ncmFtbWluZwoK
KiBbUnguTkVUXShodHRwczovL2dpdGh1Yi5jb20vZG90bmV0L3JlYWN0aXZl
KSAtIFRoZSBSZWFjdGl2ZSBFeHRlbnNpb25zIChSeCkgaXMgYSBsaWJyYXJ5
IGZvciBjb21wb3NpbmcgYXN5bmNocm9ub3VzIGFuZCBldmVudC1iYXNlZCBw
cm9ncmFtcyB1c2luZyBvYnNlcnZhYmxlIHNlcXVlbmNlcyBhbmQgTElOUS1z
dHlsZSBxdWVyeSBvcGVyYXRvcnMKKiBbRHluYW1pYyBEYXRhXShodHRwczov
L2dpdGh1Yi5jb20vUm9sYW5kUGhlYXNhbnQvRHluYW1pY0RhdGEpIC0gUmVh
Y3RpdmUgRXh0ZW5zaW9ucyAoUngpIGZvciBjb2xsZWN0aW9ucwoKIyMgU2No
ZWR1bGluZwoKKiBbRmx1ZW50U2NoZWR1bGVyXShodHRwczovL2dpdGh1Yi5j
b20vZmx1ZW50c2NoZWR1bGVyL0ZsdWVudFNjaGVkdWxlcikgLSBUYXNrIHNj
aGVkdWxlciB3aXRoIGZsdWVudCBpbnRlcmZhY2UgdGhhdCBydW5zIGF1dG9t
YXRlZCBqb2JzIGZyb20geW91ciBhcHBsaWNhdGlvbgoqIFtOQ3JvbnRhYl0o
aHR0cHM6Ly9naXRodWIuY29tL2F0aWZheml6L05Dcm9udGFiKSAtIENsYXNz
IGxpYnJhcnkgZm9yIHBhcnNpbmcgJiBmb3JtYXR0aW5nIFtjcm9udGFiXSho
dHRwOi8vY3JvbnRhYi5vcmcvKSBleHByZXNzaW9ucyBhcyB3ZWxsIGFzIGNh
bGN1bGF0aW5nIG9jY3VycmVuY2VzIG9mIHRpbWUgYmFzZWQgb24gYSBjcm9u
dGFiIHNjaGVkdWxlCiogW1F1YXJ0ek5ldF0oaHR0cHM6Ly9naXRodWIuY29t
L3F1YXJ0em5ldC9xdWFydHpuZXQpIC0gUXVhcnR6IEVudGVycHJpc2UgU2No
ZWR1bGVyIC5ORVQKKiBbSGFuZ2ZpcmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9I
YW5nZmlyZUlPKSAtIEFuIGVhc3kgd2F5IHRvIHBlcmZvcm0gZmlyZS1hbmQt
Zm9yZ2V0LCBkZWxheWVkIGFuZCByZWN1cnJpbmcgdGFza3MgaW5zaWRlIC5O
RVQgYXBwcwoqIFtDaHJvbml0b25dKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9z
cGVycnkvQ2hyb25pdG9uKSAtIEEgc2ltcGxlLCBmdWxseSBpbnRlZ3JhYmxl
LCBhbmQgY3VzdG9taXphYmxlIGxpYnJhcnkgZm9yIHJ1bm5pbmcgc3Ryb25n
bHkgdHlwZWQgam9icyAodGFza3MpIG9uIHNjaGVkdWxlcy4KKiBbRHVyYWJs
ZVRhc2tdKGh0dHBzOi8vZ2l0aHViLmNvbS9BenVyZS9kdXJhYmxldGFzaykg
LSBUaGlzIGZyYW1ld29yayBhbGxvd3MgdXNlcnMgdG8gd3JpdGUgbG9uZyBy
dW5uaW5nIHBlcnNpc3RlbnQgd29ya2Zsb3dzIGluIEMjIHVzaW5nIHRoZSBh
c3luYy9hd2FpdCBjYXBhYmlsaXRpZXMuCiogW1dleGZsb3ddKGh0dHBzOi8v
Z2l0aHViLmNvbS9hZWxhc3Nhcy9XZXhmbG93KSAtIEFuIGV4dGVuc2libGUg
d29ya2Zsb3cgZW5naW5lIHdpdGggYSBjcm9zcy1wbGF0Zm9ybSBtYW5hZ2Vy
IGFuZCBkZXNpZ25lci4KKiBbV29ya2Zsb3cgQ29yZV0oaHR0cHM6Ly9naXRo
dWIuY29tL2RhbmllbGdlcmxhZy93b3JrZmxvdy1jb3JlKSAtIExpZ2h0d2Vp
Z2h0IGVtYmVkZGFibGUgd29ya2Zsb3cgZW5naW5lCgojIyBTREsgYW5kIEFQ
SSBDbGllbnRzCgoqIFtBV1MgU0RLXShodHRwczovL2dpdGh1Yi5jb20vYXdz
L2F3cy1zZGstbmV0KSAtIFRoZSBBV1MgU0RLIGZvciAuTkVUIGVuYWJsZXMg
Lk5FVCBkZXZlbG9wZXJzIHRvIGVhc2lseSB3b3JrIHdpdGggQW1hem9uIFdl
YiBTZXJ2aWNlcwoqIFtBenVyZSBQb3dlclNoZWxsXShodHRwczovL2dpdGh1
Yi5jb20vQXp1cmUvYXp1cmUtcG93ZXJzaGVsbCkgLSBBIHNldCBvZiBQb3dl
clNoZWxsIGNtZGxldHMgZm9yIGRldmVsb3BlcnMgYW5kIGFkbWluaXN0cmF0
b3JzIHRvIGRldmVsb3AsIGRlcGxveSBhbmQgbWFuYWdlIE1pY3Jvc29mdCBB
enVyZSBhcHBsaWNhdGlvbnMKKiBbQ291bnRseSBTREsgZm9yIFdpbmRvd3Nd
KGh0dHBzOi8vZ2l0aHViLmNvbS9Db3VudGx5L2NvdW50bHktc2RrLXdpbmRv
d3MvKSAtIFdpbmRvd3MgU0RLIGZvciBDb3VudGx5IGFuYWx5dGljcyBhbmQg
bWFya2V0aW5nIHBsYXRmb3JtIGZvciBwcm9kdWN0IGFuZCBtYXJrZXRpbmcg
bWFuYWdlcnMKKiBbT2N0b2tpdC5ORVRdKGh0dHBzOi8vZ2l0aHViLmNvbS9v
Y3Rva2l0L29jdG9raXQubmV0KSAtIEEgR2l0SHViIEFQSSBjbGllbnQgbGli
cmFyeSBmb3IgLk5FVAoqIFtEcm9wTmV0XShodHRwczovL2dpdGh1Yi5jb20v
RHJvcE5ldC9Ecm9wTmV0KSAtIENsaWVudCBsaWJyYXJ5IGZvciB0aGUgRHJv
cGJveCBBUEkKKiBbR2V0dHkgSW1hZ2VzIEFQSSBTREtdKGh0dHBzOi8vZ2l0
aHViLmNvbS9nZXR0eWltYWdlcy9nZXR0eWltYWdlcy1hcGlfZG90bmV0KSAt
IFNESyBmb3IgdGhlIEdldHR5IEltYWdlcyBhbmQgaVN0b2NrIEFQSXMKCiMj
IFNlYXJjaAoKKiBbRWxhc3RpY3NlYXJjaCAuTkVUXShodHRwczovL2dpdGh1
Yi5jb20vZWxhc3RpYy9lbGFzdGljc2VhcmNoLW5ldCkgLSBFbGFzdGljc2Vh
cmNoLk5ldCAmIE5FU1QKKiBbUGxhaW5FbGFzdGljLk5ldF0oaHR0cHM6Ly9n
aXRodWIuY29tL1llZ29yb2ZmL1BsYWluRWxhc3RpYy5OZXQpIC0gUGxhaW4g
Lk5FVCBjbGllbnQgZm9yIEVsYXN0aWNTZWFyY2gKKiBbU29sck5ldF0oaHR0
cHM6Ly9naXRodWIuY29tL1NvbHJOZXQvU29sck5ldCkgLSBTb2xyIGNsaWVu
dCBmb3IgLk5FVAoqIFtTb2xyRXhwcmVzc10oaHR0cHM6Ly9naXRodWIuY29t
L3NvbHItZXhwcmVzcy9zb2xyLWV4cHJlc3MpIC0gQSBzaW1wbGUgYW5kIGxp
Z2h0d2VpZ2h0IHF1ZXJ5IC5ORVQgbGlicmFyeSBmb3IgU29sciwgaW4gYSBj
b250cm9sbGVkLCBidWlsZGFibGUgYW5kIGZhaWwgZmFzdCB3YXkKKiBbTHVj
ZW5lLm5ldF0oaHR0cHM6Ly9sdWNlbmVuZXQuYXBhY2hlLm9yZy8pIC0gTHVj
ZW5lLk5ldCBpcyBhIHBvcnQgb2YgdGhlIEx1Y2VuZSBzZWFyY2ggZW5naW5l
IGxpYnJhcnksIHdyaXR0ZW4gaW4gQyMgYW5kIHRhcmdldGVkIGF0IC5ORVQg
cnVudGltZSB1c2VycwoKIyMgU2VyaWFsaXphdGlvbgoKKiBbQ2VyYXNdKGh0
dHBzOi8vZ2l0aHViLmNvbS9yaWtpbWFydTAzNDUvQ2VyYXMpIC0gW1Zlcnkg
ZmFzdF0oaHR0cHM6Ly9naXRodWIuY29tL3Jpa2ltYXJ1MDM0NS9DZXJhcyNw
ZXJmb3JtYW5jZS1iZW5jaG1hcmtzKSBiaW5hcnkgc2VyaWFsaXplciBmb3Ig
Lk5FVC9Db3JlL1VuaXR5OyBbaHVnZSBzZXQgb2YgZmVhdHVyZXNdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9yaWtpbWFydTAzNDUvQ2VyYXMvd2lraS9GdWxsLWZl
YXR1cmUtbGlzdC0mLXBsYW5uZWQtZmVhdHVyZXMpLCBjYW4gYmUgdXNlZCBb
Zm9yIGVhc3kgbmV0d29ya2luZ10oaHR0cHM6Ly93d3cucmlraWRldi5jb20v
bmV0d29ya2luZy13aXRoLWNlcmFzLXBhcnQtMS8pLCBoYW5kbGVzIGNpcmN1
bGFyIHJlZmVyZW5jZXMsIHBvbHltb3JwaGlzbSwgLi4uCiogW1Byb3RvYnVm
Lk5FVF0oaHR0cHM6Ly9naXRodWIuY29tL21ncmF2ZWxsL3Byb3RvYnVmLW5l
dCkgLSBQcm90b2NvbCBidWZmZXJzIGlzIHRoZSBuYW1lIG9mIHRoZSBiaW5h
cnkgc2VyaWFsaXphdGlvbiBmb3JtYXQgdXNlZCBieSBHb29nbGUgZm9yIG11
Y2ggb2YgdGhlaXIgZGF0YSBjb21tdW5pY2F0aW9ucwoqIFtKc29uLk5FVF0o
aHR0cHM6Ly9naXRodWIuY29tL0phbWVzTksvTmV3dG9uc29mdC5Kc29uKSAt
IFBvcHVsYXIgaGlnaC1wZXJmb3JtYW5jZSBKU09OIGZyYW1ld29yayBmb3Ig
Lk5FVAoqIFtTZXJ2aWNlU3RhY2suVGV4dF0oaHR0cHM6Ly9naXRodWIuY29t
L1NlcnZpY2VTdGFjay9TZXJ2aWNlU3RhY2suVGV4dCkgLSBKU09OLCBKU1Yg
YW5kIENTViBUZXh0IFNlcmlhbGl6ZXJzIHVzZWQgaW4gc2VydmljZXN0YWNr
Lm5ldAoqIFtNc2dwYWNrLUNsaV0oaHR0cHM6Ly9naXRodWIuY29tL21zZ3Bh
Y2svbXNncGFjay1jbGkpIC0gTWVzc2FnZVBhY2sgaW1wbGVtZW50YXRpb24g
Zm9yIENvbW1vbiBMYW5ndWFnZSBJbmZyYXN0cnVjdHVyZQoqIFtKaWxdKGh0
dHBzOi8vZ2l0aHViLmNvbS9rZXZpbi1tb250cm9zZS9KaWwpIC0gRmFzdCAu
TkVUIEpTT04gc2VyaWFsaXplciwgYnVpbHQgb24gU2lnaWwgKHVzZWQgYnkg
U3RhY2tPdmVyZmxvdykKKiBbUHJvdG9CdWZdKGh0dHBzOi8vZ2l0aHViLmNv
bS9odWx0cXZpc3QvUHJvdG9CdWYpIC0gR2VuZXJhdGUgQyMgY29kZSBmb3Ig
cHJvdG9jb2wgYnVmZmVyIHNlcmlhbGl6YXRpb24gZnJvbSBhIC5wcm90byBz
cGVjaWZpY2F0aW9uLgoqIFtGIyBEYXRhXShodHRwczovL2ZzaGFycC5naXRo
dWIuaW8vRlNoYXJwLkRhdGEvKSAtIEYjIHR5cGUgcHJvdmlkZXJzIGZvciBh
Y2Nlc3NpbmcgWE1MLCBKU09OLCBDU1YgYW5kIEhUTUwgZmlsZXMgKGJhc2Vk
IG9uIHNhbXBsZSBkb2N1bWVudHMpIGFuZCBmb3IgYWNjZXNzaW5nIFdvcmxk
QmFuayBkYXRhCiogW0JvbmRdKGh0dHBzOi8vZ2l0aHViLmNvbS9NaWNyb3Nv
ZnQvYm9uZCkgLSBjcm9zcy1wbGF0Zm9ybSBmcmFtZXdvcmsgZm9yIHdvcmtp
bmcgd2l0aCBzY2hlbWF0aXplZCBkYXRhLiBJdCBzdXBwb3J0cyBjcm9zcy1s
YW5ndWFnZSBkZS9zZXJpYWxpemF0aW9uIGFuZCBwb3dlcmZ1bCBnZW5lcmlj
IG1lY2hhbmlzbXMgZm9yIGVmZmljaWVudGx5IG1hbmlwdWxhdGluZyBkYXRh
LgoqIFtIeXBlcmlvbl0oaHR0cHM6Ly9naXRodWIuY29tL2Fra2Fkb3RuZXQv
SHlwZXJpb24pIC0gQSBoaWdoIHBlcmZvcm1hbmNlIHBvbHltb3JwaGljIHNl
cmlhbGl6ZXIgZm9yIHRoZSAuTkVUIGZyYW1ld29yay4KKiBbRmlsZUhlbHBl
cnNdKGh0dHBzOi8vZ2l0aHViLmNvbS9NYXJjb3NNZWxpL0ZpbGVIZWxwZXJz
KSAtIGZyZWUgYW5kIGVhc3kgdG8gdXNlIC5ORVQgbGlicmFyeSB0byBpbXBv
cnQgb3IgZXhwb3J0IGRhdGEgZnJvbSBmaXhlZCBsZW5ndGggb3IgZGVsaW1p
dGVkIHJlY29yZHMgaW4gZmlsZXMsIHN0cmluZ3Mgb3Igc3RyZWFtcy4KKiBb
RnNQaWNrbGVyXShodHRwczovL2dpdGh1Yi5jb20vbWJyYWNlcHJvamVjdC9G
c1BpY2tsZXIpIC0gQSBmYXN0IG11bHRpLWZvcm1hdCBtZXNzYWdlIHNlcmlh
bGl6ZXIgZm9yIC5ORVQKKiBbTWlncmFudF0oaHR0cHM6Ly9naXRodWIuY29t
L2FudG1pY3JvL01pZ3JhbnQpIC0gRmFzdCBhbmQgZmxleGlibGUgc2VyaWFs
aXphdGlvbiBmcmFtZXdvcmsgdXNhYmxlIG9uIHVuZGVjb3JhdGVkIGNsYXNz
ZXMuCiogW1V0ZjhKc29uXShodHRwczovL2dpdGh1Yi5jb20vbmV1ZWNjL1V0
ZjhKc29uKSAtIEZhc3QgYW5kIFplcm8gQWxsb2NhdGlvbiBKU09OIFNlcmlh
bGl6ZXIgZm9yIEMjKC5ORVQsIC5ORVQgQ29yZSwgVW5pdHkgYW5kIFhhbWFy
aW4pLCB0aGlzIHNlcmlhbGl6ZXIgd3JpdGUvcmVhZCBkaXJlY3RseSB0byBV
VEY4IGJpbmFyeSBzbyBib29zdHVwIHBlcmZvcm1hbmNlLgoKIyMgU01TIGFu
ZCBQaG9uZSBjYWxscwoKKiBbVHdpbGlvLWNzaGFycF0oaHR0cHM6Ly9naXRo
dWIuY29tL3R3aWxpby90d2lsaW8tY3NoYXJwKSAtIEEgQyMvLk5FVCBMaWJy
YXJ5IGZvciBzZW5kaW5nIGFuZCByZWNlaXZpbmcgcGhvbmUgY2FsbHMgYW5k
IHRleHQgbWVzc2FnZXMgd2l0aCBUd2lsaW8uCgojIyBTdGF0ZSBtYWNoaW5l
cwoKKiBbU3RhdGVsZXNzXShodHRwczovL2dpdGh1Yi5jb20vZG90bmV0LXN0
YXRlLW1hY2hpbmUvc3RhdGVsZXNzKSAtIENyZWF0ZSBzdGF0ZSBtYWNoaW5l
cyBhbmQgbGlnaHR3ZWlnaHQgc3RhdGUgbWFjaGluZS1iYXNlZCB3b3JrZmxv
d3MgZGlyZWN0bHkgaW4gLk5FVCBjb2RlCiogW0F1dG9tYXRvbnltb3VzXSho
dHRwczovL2dpdGh1Yi5jb20vTWFzc1RyYW5zaXQvQXV0b21hdG9ueW1vdXMp
IC0gQSBzdGF0ZSBtYWNoaW5lIGxpYnJhcnkgZm9yIC5ORVQgLSBhbGxvd3Mg
eW91IHRvIHdyaXRlIGZsdWVudCBzdHlsZSBzdGF0ZSBtYWNoaW5lcwoqIFtB
cHBjY2VsZXJhdGUgLSBTdGF0ZSBNYWNoaW5lXShodHRwczovL3d3dy5hcHBj
Y2VsZXJhdGUuY29tL3N0YXRlbWFjaGluZS5odG1sKSAtIEEgcG93ZXJmdWwg
c3RhdGUgbWFjaGluZSBsaWJyYXJ5IC0gY29uZmlndXJlZCB3aXRoIGEgZmx1
ZW50IEFQSSBhbmQgc3luY2hyb3Vub3VzIGFuZCBhc3luY2hyb25vdXMgc3Rh
dGUgdHJhbnNpdGlvbiBzdXBwb3J0CiogW0xpcXVpZFN0YXRlXShodHRwczov
L2dpdGh1Yi5jb20vcHJhc2FubmF2bC9MaXF1aWRTdGF0ZSkgLSBFZmZpY2ll
bnQgYXN5bmNocm9ub3VzIGFuZCBzeW5jaHJvbm91cyBzdGF0ZSBtYWNoaW5l
cyBmb3IgLk5FVAoKIyMgU3RhdGljIFNpdGUgR2VuZXJhdG9ycwoKKiBbRnNC
bG9nXShodHRwczovL2dpdGh1Yi5jb20vZnNwcm9qZWN0cy9Gc0Jsb2cvKSAt
IEJsb2cgYXdhcmUsIHN0YXRpYyBzaXRlIGdlbmVyYXRpb24gdXNpbmcgRiMK
KiBbUHJldHplbF0oaHR0cHM6Ly9naXRodWIuY29tL0NvZGU1Mi9wcmV0emVs
KSAtIEEgc2l0ZSBnZW5lcmF0aW9uIHRvb2wgKGFuZCB0aGVuIHNvbWUpIGZv
ciAuTkVUIHBsYXRmb3JtcwoqIFtTYW5kcmEuU25vd10oaHR0cHM6Ly9naXRo
dWIuY29tL1NhbmRyYS9TYW5kcmEuU25vdykgLSBKZWt5bGwtaW5zcGlyZWQg
c3RhdGljIHNpdGUgZ2VuZXJhdGlvbiBmb3IgLk5FVAoqIFtXeWFtXShodHRw
czovL3d5YW0uaW8vKSAtIEEgc2ltcGxlIHRvIHVzZSwgaGlnaGx5IG1vZHVs
YXIsIGFuZCBleHRyZW1lbHkgY29uZmlndXJhYmxlIHN0YXRpYyBjb250ZW50
IGdlbmVyYXRvcgoKIyMgU3Ryb25nIE5hbWluZwoKKiBbU3Ryb25nIE5hbWVy
XShodHRwczovL2dpdGh1Yi5jb20vZHNwbGFpc3RlZC9zdHJvbmduYW1lcikg
LSBBdXRvbWF0aWNhbGx5IGFkZCBzdHJvbmcgbmFtZXMgdG8gcmVmZXJlbmNl
ZCBhc3NlbWJsaWVzIHdoaWNoIGRvIG5vdCBhbHJlYWR5IGhhdmUgYSBzdHJv
bmcgbmFtZS4gVGhpcyB3aWxsIGFsbG93IHlvdSB0byByZWZlcmVuY2UgYW5k
IHVzZSAoTnVHZXQgcGFja2FnZXMgd2l0aCkgYXNzZW1ibGllcyB3aGljaCBh
cmUgbm90IHN0cm9uZyBuYW1lZCBmcm9tIHlvdXIgcHJvamVjdHMgdGhhdCBk
byB1c2UgYSBzdHJvbmcgbmFtZS4KCiMjIFN0eWxlIEd1aWRlCgoqIFtDIyBT
dHlsZSBHdWlkZV0oaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlv
bnMvNDY3ODE3OC9zdHlsZS1ndWlkZS1mb3ItYykgLSBTdGFja092ZXJmbG93
IFEgJiBBIG9uIHN0eWxlIGd1aWRlcwoqIFtDIyBDb2RpbmcgQ29udmVudGlv
bnNdKGh0dHBzOi8vZG9jcy5taWNyb3NvZnQuY29tL2VuLXVzL2RvdG5ldC9j
c2hhcnAvcHJvZ3JhbW1pbmctZ3VpZGUvaW5zaWRlLWEtcHJvZ3JhbS9jb2Rp
bmctY29udmVudGlvbnMpIC0gT2ZmaWNpYWwgTVNETiBDIyBjb2RlIGNvbnZl
bnRpb25zCgojIyBUZW1wbGF0ZSBFbmdpbmUKCiogW1Jhem9yRW5naW5lXSho
dHRwczovL2dpdGh1Yi5jb20vQW50YXJpcy9SYXpvckVuZ2luZSkgLSBPcGVu
IHNvdXJjZSB0ZW1wbGF0aW5nIGVuZ2luZSBiYXNlZCBvbiBNaWNyb3NvZnQn
cyBSYXpvciBwYXJzaW5nIGVuZ2luZQoqIFtSYXpvckxpZ2h0XShodHRwczov
L2dpdGh1Yi5jb20vdG9kZGFtcy9SYXpvckxpZ2h0KSAtIE9wZW4gc291cmNl
IHRlbXBsYXRlIGVuZ2luZSBiYXNlZCBvbiBNaWNyb3NvZnQncyBSYXpvciBw
YXJzaW5nIGVuZ2luZSBzdXBwb3J0aW5nIC5ORVQgU3RhbmRhcmQgMi4wCiog
W051c3RhY2hlXShodHRwczovL2dpdGh1Yi5jb20vamRpYW1vbmQvTnVzdGFj
aGUpIC0gT3BlbiBzb3VyY2UgbGlicmFyeSBmb3IgbG9naWMtbGVzcyB0ZW1w
bGF0ZXMKKiBbU3R1YmJsZV0oaHR0cHM6Ly9naXRodWIuY29tL3N0dWJibGVv
cmcvc3R1YmJsZSkgLSBUcmltbWVkIGRvd24ge3ttdXN0YWNoZX19IHRlbXBs
YXRlcyBpbiAuTkVULiBTdWNjZXNzb3Igb2YgTnVzdGFjaGUuCiogW0RvdExp
cXVpZF0oaHR0cHM6Ly9naXRodWIuY29tL2RvdGxpcXVpZC9kb3RsaXF1aWQp
IC0gQyMgcG9ydCBvZiB0aGUgUnVieSBMaXF1aWQgdGVtcGxhdGluZyBsYW5n
dWFnZQoqIFtNdXN0YWNoZSBTaGFycF0oaHR0cHM6Ly9naXRodWIuY29tL2pl
aHVnYWxlYWhzYS9tdXN0YWNoZS1zaGFycCkgLSBBbiBleHRlbnNpb24gb2Yg
dGhlIG11c3RhY2hlIHRleHQgdGVtcGxhdGUgZW5naW5lIGZvciAuTkVULgoK
IyMgVGVzdGluZwoKKiBbQXV0b0ZpeHR1cmVdKGh0dHBzOi8vZ2l0aHViLmNv
bS9BdXRvRml4dHVyZS9BdXRvRml4dHVyZSkgLSBBdXRvRml4dHVyZSBpcyBh
biBvcGVuIHNvdXJjZSBmcmFtZXdvcmsgZm9yIC5ORVQgZGVzaWduZWQgdG8g
bWluaW1pemUgdGhlICdBcnJhbmdlJyBwaGFzZSBvZiB5b3VyIHVuaXQgdGVz
dHMKKiBbQkREZnldKGh0dHBzOi8vZ2l0aHViLmNvbS9UZXN0U3RhY2svVGVz
dFN0YWNrLkJERGZ5KSAtIEJERGZ5IGlzIHRoZSBzaW1wbGVzdCBCREQgZnJh
bWV3b3JrIEVWRVIhCiogW0JvZ3VzXShodHRwczovL2dpdGh1Yi5jb20vYmNo
YXZlei9Cb2d1cykgLSBBIHNpbXBsZSBhbmQgc2FuZSBmYWtlIGRhdGEgZ2Vu
ZXJhdG9yIGZvciBDIy4gQmFzZWQgb24gYW5kIHBvcnRlZCBmcm9tIHRoZSBm
YW1lZCBmYWtlci5qcy4KKiBbRXhwcmVzc2lvblRvQ29kZV0oaHR0cHM6Ly9n
aXRodWIuY29tL0VhbW9uTmVyYm9ubmUvRXhwcmVzc2lvblRvQ29kZSkgLSBV
c2UgcGxhaW4gQyMgc3ludGF4IGluIGFzc2VydGlvbnMgdGhhdCBpbmNsdWRl
IGJvdGggdGhlIGV4cHJlc3Npb24gZXhwcmVzc2lvbiBhbmQgc3ViZXhwcmVz
c2lvbiB2YWx1ZXMgaW4gdGhlIGZhaWx1cmUgbWVzc2FnZS4KKiBbRmFrZUl0
RWFzeV0oaHR0cHM6Ly9naXRodWIuY29tL0Zha2VJdEVhc3kvRmFrZUl0RWFz
eSkgLSBUaGUgZWFzeSBtb2NraW5nIGxpYnJhcnkgZm9yIC5ORVQgaHR0cHM6
Ly9mYWtlaXRlYXN5LmdpdGh1Yi5pbwoqIFtGbHVlbnQgQXNzZXJ0aW9uc10o
aHR0cHM6Ly9naXRodWIuY29tL2ZsdWVudGFzc2VydGlvbnMvZmx1ZW50YXNz
ZXJ0aW9ucykgLSBBIHNldCBvZiAuTkVUIGV4dGVuc2lvbiBtZXRob2RzIHRo
YXQgYWxsb3cgeW91IHRvIG1vcmUgbmF0dXJhbGx5IHNwZWNpZnkgdGhlIGV4
cGVjdGVkIG91dGNvbWUgb2YgYSBUREQgb3IgQkRELXN0eWxlIHRlc3QKKiBb
Rmx1ZW50QXV0b21hdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL3N0aXJuby9G
bHVlbnRBdXRvbWF0aW9uKSAtIFNpbXBsZSBGbHVlbnQgQVBJIGZvciBVSSBB
dXRvbWF0aW9uCiogW0ZzQ2hlY2tdKGh0dHBzOi8vZ2l0aHViLmNvbS9mc2No
ZWNrL0ZzQ2hlY2spIC0gUmFuZG9tIFRlc3RpbmcgZm9yIC5ORVQuCiogW0Z1
Y2h1XShodHRwczovL2dpdGh1Yi5jb20vbWF1c2NoL0Z1Y2h1KSAtIEEgdW5p
dC10ZXN0aW5nIGxpYnJhcnkgZm9yIEYjIHdpdGggdGVzdHMtYXMtdmFsdWVz
IHdoaWNoIG1ha2VzIERTTHMgZXh0ZW1lbHkgZWFzeSB0byBjcmVhdGUuCiog
W01hY2hpbmUuU3BlY2lmaWNhdGlvbnNdKGh0dHBzOi8vZ2l0aHViLmNvbS9t
YWNoaW5lL21hY2hpbmUuc3BlY2lmaWNhdGlvbnMpIC0gTWFjaGluZS5TcGVj
aWZpY2F0aW9ucyAoTVNwZWMpIGlzIGEgY29udGV4dC9zcGVjaWZpY2F0aW9u
IGZyYW1ld29yayB0aGF0IHJlbW92ZXMgbGFuZ3VhZ2Ugbm9pc2UgYW5kIHNp
bXBsaWZpZXMgdGVzdHMuCiogW01vcV0oaHR0cHM6Ly9naXRodWIuY29tL01v
cS9tb3E0KSAtIFRoZSBtb3N0IHBvcHVsYXIgYW5kIGZyaWVuZGx5IG1vY2tp
bmcgZnJhbWV3b3JrIGZvciAuTkVUCiogW05CdWlsZGVyXShodHRwczovL2dp
dGh1Yi5jb20vZ2FyZXRoZG93bjQ0L25idWlsZGVyKSAtIFJhcGlkIGdlbmVy
YXRpb24gb2YgdGVzdCBvYmplY3RzCiogW05DcnVuY2hdKGh0dHBzOi8vd3d3
Lm5jcnVuY2gubmV0LykgLSBBbiBhdXRvbWF0ZWQgY29udGludW91cyAmIGNv
bmN1cnJlbnQgdGVzdGluZyB0b29sIGZvciBWaXN1YWwgU3R1ZGlvLiAqKlsk
XSoqCiogW05GbHVlbnRdKGh0dHA6Ly93d3cubi1mbHVlbnQubmV0KSAtIE5G
bHVlbnQgaXMgYW4gYXNzZXJ0aW9uIGxpYnJhcnkgd2hpY2ggYWltcyB0byBm
bHVlbnQgeW91ciAuTkVUIFRERCBleHBlcmllbmNlLgoqIFtOU3Vic3RpdHV0
ZV0oaHR0cHM6Ly9uc3Vic3RpdHV0ZS5naXRodWIuaW8vKSAtIEEgZnJpZW5k
bHkgc3Vic3RpdHV0ZSBmb3IgLk5FVCBtb2NraW5nIGZyYW1ld29ya3MKKiBb
TlVuaXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9udW5pdC9udW5pdCkgLSBBIHVu
aXQtdGVzdGluZyBmcmFtZXdvcmsgZm9yIGFsbCAuTkVUIGxhbmd1YWdlcwoq
IFtSaGlubyBNb2Nrc10oaHR0cHM6Ly9naXRodWIuY29tL2F5ZW5kZS9yaGlu
by1tb2NrcykgLSBEeW5hbWljIE1vY2tpbmcgRnJhbWV3b3JrIGZvciAuTkVU
CiogW1Nob3VsZGx5XShodHRwczovL2dpdGh1Yi5jb20vc2hvdWxkbHkvc2hv
dWxkbHkpIC0gU2hvdWxkbHkgaXMgYW4gYXNzZXJ0aW9uIGZyYW1ld29yayB3
aGljaCBmb2N1c2VzIG9uIGdpdmluZyBncmVhdCBlcnJvciBtZXNzYWdlcyB3
aGVuIHRoZSBhc3NlcnRpb24gZmFpbHMgd2hpbGUgYmVpbmcgc2ltcGxlIGFu
ZCB0ZXJzZS4KKiBbU3BlY0Zsb3ddKGh0dHBzOi8vZ2l0aHViLmNvbS90ZWNo
dGFsay9TcGVjRmxvdy8pIC0gQmluZGluZyBidXNpbmVzcyByZXF1aXJlbWVu
dHMgdG8gLk5ldCBjb2RlCiogW1N0cnlrZXIuTkVUXShodHRwczovL2dpdGh1
Yi5jb20vc3RyeWtlci1tdXRhdG9yL3N0cnlrZXItbmV0KSAtIE11dGF0aW9u
IHRlc3RpbmcgZm9yIC5ORVQgQ29yZSBwcm9qZWN0cwoqIFt4QmVoYXZlLm5l
dF0oaHR0cHM6Ly9naXRodWIuY29tL3hiZWhhdmUveGJlaGF2ZS5uZXQpIC0g
QW4geFVuaXQubmV0IGV4dGVuc2lvbiBmb3IgZGVzY3JpYmluZyB5b3VyIHRl
c3RzIHVzaW5nIG5hdHVyYWwgbGFuZ3VhZ2UuIFtodHRwczovL3hiZWhhdmUu
Z2l0aHViLmlvXShodHRwczovL3hiZWhhdmUuZ2l0aHViLmlvKQoqIFt4VW5p
dC5uZXRdKGh0dHBzOi8vZ2l0aHViLmNvbS94dW5pdC94dW5pdCkgLSBBIGZy
ZWUsIG9wZW4gc291cmNlLCBjb21tdW5pdHktZm9jdXNlZCB1bml0IHRlc3Rp
bmcgdG9vbCBmb3IgdGhlIC5ORVQgRnJhbWV3b3JrLiBbaHR0cHM6Ly94dW5p
dC5naXRodWIuaW8vXShodHRwczovL3h1bml0LmdpdGh1Yi5pby8pCiogW0Nh
bm9weV0oaHR0cHM6Ly9naXRodWIuY29tL2xlZnRoYW5kZWRnb2F0L2Nhbm9w
eSkgLSBDYW5vcHkgaXMgYSBmcmVlLCBvcGVuIHNvdXJjZSBGIyB3ZWIgYXV0
b21hdGlvbiBhbmQgdGVzdGluZyBmcmFtZXdvcmsKKiBbRXhwZWN0b10oaHR0
cHM6Ly9naXRodWIuY29tL2hhZi9leHBlY3RvKSAtIEEgc21vb3RoIHRlc3Rp
bmcgZnJhbWV3b3JrIGZvciBGIyB3aXRoIHRlc3RzIGFzIHZhbHVlcy4gVW5p
dCB0ZXN0aW5nLCBwcm9wZXJ0eSBiYXNlZCB0ZXN0aW5nLCBwZXJmb3JtYW5j
ZSB0ZXN0aW5nIGFuZCBzdHJlc3MgdGVzdGluZy4KKiBbUmVwb3J0UG9ydGFs
XShodHRwOi8vcmVwb3J0cG9ydGFsLmlvKSAtIEFJLXBvd2VyZWQgVGVzdCBB
dXRvbWF0aW9uIERhc2hib2FyZC4gQWNxdWlyZSwgYWdncmVnYXRlIGFuZCBh
bmFseXplIHRlc3QgcmVwb3J0cyB0byBhc2NlcnRhaW4gcmVsZWFzZSBoZWFs
dGguCiogW0NvbXBhcmUtTmV0LU9iamVjdHNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9HcmVnRmluemVyL0NvbXBhcmUtTmV0LU9iamVjdHMpIC0gUGVyZm9ybSBh
IGRlZXAgY29tcGFyZSBvZiBhbnkgdHdvIC5ORVQgb2JqZWN0cyB1c2luZyBy
ZWZsZWN0aW9uLiBTaG93cyB0aGUgZGlmZmVyZW5jZXMgYmV0d2VlbiB0aGUg
dHdvIG9iamVjdHMuIAoKIyMgVG9vbHMKCiogW0ZpZGRsZXJdKGh0dHBzOi8v
d3d3LnRlbGVyaWsuY29tL2ZpZGRsZXIpIC0gIFRoZSBmcmVlIHdlYiBkZWJ1
Z2dpbmcgcHJveHkgZm9yIGFueSBicm93c2VyLCBzeXN0ZW0gb3IgcGxhdGZv
cm0KKiBbT3BlbiBMaXZlIFdyaXRlcl0oaHR0cHM6Ly9naXRodWIuY29tL09w
ZW5MaXZlV3JpdGVyL09wZW5MaXZlV3JpdGVyKSAtIEJsb2cgd3JpdGVyIHdo
aWNoIGludGVncmF0ZWQgd2l0aCBXb3JkUHJlc3MsIEJsb2dnZXIsIGV0LiBh
bC4gT3BlbiBMaXZlIFdyaXRlciBtYWtlcyBpdCBlYXN5IHRvIHdyaXRlLCBw
cmV2aWV3LCBhbmQgcG9zdCB0byB5b3VyIGJsb2cuIEZvciBtb3JlIGluZm9y
bWF0aW9uIHNlZSBodHRwOi8vb3BlbmxpdmV3cml0ZXIub3JnIC4KKiBbQ29k
ZUh1Yl0oaHR0cHM6Ly9naXRodWIuY29tL0NvZGVIdWJBcHAvQ29kZUh1Yikg
LSBDb2RlSHViIGlzIHRoZSBiZXN0IHdheSB0byBicm93c2UgYW5kIG1haW50
YWluIHlvdXIgR2l0SHViIHJlcG9zaXRvcmllcyBvbiBhbnkgaU9TIGRldmlj
ZSEKKiBbU2hhcmVYXShodHRwczovL2dpdGh1Yi5jb20vU2hhcmVYL1NoYXJl
WCkgLSBTaGFyZVggaXMgYSBmcmVlIGFuZCBvcGVuIHNvdXJjZSBwcm9ncmFt
IHRoYXQgbGV0cyB5b3UgY2FwdHVyZSBvciByZWNvcmQgYW55IGFyZWEgb2Yg
eW91ciBzY3JlZW4gYW5kIHNoYXJlIGl0IHdpdGggYSBzaW5nbGUgcHJlc3Mg
b2YgYSBrZXkuIEl0IGFsc28gYWxsb3dzIHVwbG9hZGluZyBpbWFnZXMsIHRl
eHQgb3Igb3RoZXIgdHlwZXMgb2YgZmlsZXMgdG8gb3ZlciA4MCBzdXBwb3J0
ZWQgZGVzdGluYXRpb25zIHlvdSBjYW4gY2hvb3NlIGZyb20uCiogW015cnRp
bGxlXShodHRwczovL2dpdGh1Yi5jb20vY2Vkcm96b3IvbXlydGlsbGUpIC0g
QSBuYXRpdmUgSFRNTDQvNSBSZW1vdGUgRGVza3RvcCBQcm90b2NvbCBjbGll
bnQsIEhUVFAgZ2F0ZXdheSB3cml0dGVuIGluIEMjIGZvciAuTkVUCiogW09w
c2VydmVyXShodHRwczovL2dpdGh1Yi5jb20vT3BzZXJ2ZXIvT3BzZXJ2ZXIp
IC0gU3RhY2sgRXhjaGFuZ2UncyBNb25pdG9yaW5nIFN5c3RlbQoqIFtDYXRM
aWdodF0oaHR0cHM6Ly9jYXRsaWdodC5pbykgLSBCdWlsZCBzdGF0dXMgbm90
aWZpY2F0aW9ucyBmb3IgVEZTL0plbmtpbnMvVHJhdmlzL0FwcHZleW9yLiBD
cm9zcy1wbGF0Zm9ybSBkZXNrdG9wIGFwcCBiYXNlZCBvbiAuTkVUIENvcmUg
YW5kIEVsZWN0cm9uLiAqKltGcmVlXVtQcm9wcmlldGFyeV0qKgoqIFtNb2Nr
YWNvXShodHRwczovL2dpdGh1Yi5jb20vbmF0ZW5oby9Nb2NrYWNvLykgLSBB
UEkgbW9jayBzZXJ2ZXIgd2l0aCBmYXN0IHNldHVwLCB1c2VmdWwgdG8gc2lt
dWxhdGUgSFRUUCByZXNwb25zZXMsIGxldmVyYWdpbmcgQVNQLk5FVCBDb3Jl
IGZlYXR1cmVzLCBidWlsdC1pbiBmYWtlIGRhdGEgZ2VuZXJhdGlvbiBhbmQg
QyMgc2NyaXB0aW5nIGVuZ2luZSBwb3dlcmVkIGJ5IFJvc2x5biBzY3JpcHRp
bmcgQVBJLgoqIFtOZXRsaW5nXShodHRwczovL2dpdGh1Yi5jb20vaGFsbGF0
b3JlL05ldGxpbmcpIC0gQSBsb2FkIHRlc3RlciBjbGllbnQgZm9yIGVhc3kg
d2ViIHRlc3RpbmcuIEl0IGlzIGV4dHJlbWVseSBmYXN0IHdoaWxlIHVzaW5n
IGxpdHRsZSBDUFUgb3IgbWVtb3J5LgoqIFtQYXBlcmN1dF0oaHR0cHM6Ly9n
aXRodWIuY29tL0NoYW5nZW1ha2VyU3R1ZGlvcy9QYXBlcmN1dCkgLSBQYXBl
cmN1dCBpcyBhbiBvcGVuIHNvdXJjZSAoLk5FVCBiYXNlZCkgdGVzdCBlbWFp
bCB2aWV3ZXIgdGhhdCBydW5zIGxvY2FsbHkgd2l0aCBhIGJ1aWx0LWluIFNN
VFAgc2VydmVyIGRlc2lnbmVkIHRvIHJlY2VpdmUgYW5kIG5vdGlmeSBvZiB0
ZXN0IGVtYWlsIG1lc3NhZ2VzLgoqIFtWaXN1YWwgU3R1ZGlvIFVuaW5zdGFs
bGVyXShodHRwczovL2dpdGh1Yi5jb20vTWljcm9zb2Z0L1Zpc3VhbFN0dWRp
b1VuaW5zdGFsbGVyKSAtIFVuaW5zdGFsbCBhbmQgY2xlYW4gdXAgYWxsIGNv
bXBvbmVudHMgb2YgVmlzdWFsIFN0dWRpby4KKiBbRmFrZSBKU09OIFNlcnZl
cl0oaHR0cHM6Ly9naXRodWIuY29tL3R0dS9kb3RuZXQtZmFrZS1qc29uLXNl
cnZlcikgLSBGYWtlIFJFU1QgQVBJIGZvciBwcm90b3R5cGluZyBvciBhcyBh
IENSVUQgQmFjayBFbmQuIE5vIG5lZWQgdG8gZGVmaW5lIHR5cGVzLCB1c2Vz
IGR5bmFtaWMgdHlwaW5nLiBEYXRhIGlzIHN0b3JlZCB0byBhIHNpbmdsZSBK
U09OIGZpbGUuIEhhcyBhdXRoZW50aWNhdGlvbiwgV2ViU29ja2V0IG5vdGlm
aWNhdGlvbnMsIGFzeW5jIGxvbmcgcnVubmluZyBvcGVyYXRpb25zLCByYW5k
b20gZ2VuZXJhdGlvbiBmb3IgZXJyb3JzL2RlbGF5cyBhbmQgZXhwZXJpbWVu
dGFsIEdyYXBoUUwgc3VwcG9ydC4KKiBbcG9zaC1kb3RuZXRdKGh0dHBzOi8v
Z2l0aHViLmNvbS9iZXJnbWVpc3Rlci9wb3NoLWRvdG5ldCkgLSBgUG93ZXJT
aGVsbGAgdGFiIGNvbXBsZXRpb24gZm9yIHRoZSBbZG90bmV0IENMSV0oaHR0
cHM6Ly9naXRodWIuY29tL2RvdG5ldC9jbGkpCiogW1NtYXJ0Q29kZV0oaHR0
cHM6Ly9naXRodWIuY29tL1NtYXJ0LUtpdC9TbWFydENvZGUpIC0gU21hcnRD
b2RlID0gSURhdGFTb3VyY2UgLT4gSUJ1aWxkVGFzayAtPiBJT3V0cHV0ID0+
IEJ1aWxkIEV2ZXJ5dGhpbmchISEgKEluY2x1ZGluZyBbKipDb2RlIGdlbmVy
YXRvcioqXSkKKiBbTkVUd29ya01hbmFnZXJdKGh0dHBzOi8vZ2l0aHViLmNv
bS9Cb3JuVG9CZVJvb3QvTkVUd29ya01hbmFnZXIpIC0gQSBwb3dlcmZ1bCB0
b29sIGZvciBtYW5hZ2luZyBuZXR3b3JrcyBhbmQgdHJvdWJsZXNob290IG5l
dHdvcmsgcHJvYmxlbXMhCiogW0FueVN0YXR1c10oaHR0cHM6Ly93d3cuYW55
c3RhdC51cykgLSBBIGRlc2t0b3Agbm90aWZpY2F0aW9ucyBhcHAgZm9yIG1v
bml0b3JpbmcgQ0kvQ0QgcGlwZWxpbmVzLCBzZXJ2ZXJzLCBuZXR3b3JrLCBo
ZWFsdGggYW5kIG1ldHJpY3MuIEFueVN0YXR1cyBzdXBwb3J0cyBBenVyZSBE
ZXZPcHMsIEplbmtpbnMsIFRlYW1DaXR5LCBBcHBWZXlvciBhbmQgbW9yZS4K
CiMjIFRyYWRpbmcKCiogW0xlYW5dKGh0dHBzOi8vZ2l0aHViLmNvbS9RdWFu
dENvbm5lY3QvTGVhbikgLSBMZWFuIEVuZ2luZSBpcyBhbiBvcGVuLXNvdXJj
ZSBmdWxseSBtYW5hZ2VkIEMjIGFsZ29yaXRobWljIHRyYWRpbmcgZW5naW5l
IGJ1aWx0IGZvciBkZXNrdG9wIGFuZCBjbG91ZCB1c2FnZS4gaHR0cHM6Ly93
d3cucXVhbnRjb25uZWN0LmNvbS9sZWFuLwoqIFtTdG9ja1NoYXJwXShodHRw
czovL2dpdGh1Yi5jb20vU3RvY2tTaGFycC9TdG9ja1NoYXJwKSAtIFRyYWRp
bmcgYW5kIGFsZ29yaXRobWljIHRyYWRpbmcgb3BlbiBzb3VyY2UgcGxhdGZv
cm0gKHN0b2NrIG1hcmtldHMsIGZvcmV4LCBiaXRjb2lucyBhbmQgb3B0aW9u
cykuIGh0dHBzOi8vc3RvY2tzaGFycC5jb20KCiMjIFVJIEF1dG9tYXRpb24K
CiogW0F0YXRhXShodHRwczovL2dpdGh1Yi5jb20vYXRhdGEtZnJhbWV3b3Jr
L2F0YXRhKSAtIEF1dG9tYXRlZCB3ZWIgdGVzdGluZyBmdWxsIGZlYXR1cmVk
IGZyYW1ld29yayBiYXNlZCBvbiBTZWxlbml1bSBXZWJEcml2ZXIuCiogW01h
bmFnZWQgV2luZG93cyBBUEldKGh0dHA6Ly9td2luYXBpLnNvdXJjZWZvcmdl
Lm5ldC8pIC0gSW50cm9zcGVjdCBhbmQgYXV0b21hdGUgdGhpcmQtcGFydHkg
V2luZG93cyAvIFZDKysgYXBwbGljYXRpb25zIHdpdGhvdXQgbmVlZGluZyBp
dHMgc291cmNlIGNvZGUuCiogW0ZsYVVJXShodHRwczovL2dpdGh1Yi5jb20v
Um9lbWVyL0ZsYVVJKSAtIEZsYVVJIGlzIGEgLk5FVCBsaWJyYXJ5IHdoaWNo
IGhlbHBzIHdpdGggYXV0b21hdGVkIFVJIHRlc3Rpbmcgb2YgV2luZG93cyBh
cHBsaWNhdGlvbnMgKFdpbjMyLCBXaW5Gb3JtcywgV1BGLCBTdG9yZSBBcHBz
LCAuLi4pLgoKIyMgVmlzdWFsIFN0dWRpbyBQbHVnaW5zCgoqIFtXZWIgRXNz
ZW50aWFsc10oaHR0cHM6Ly9naXRodWIuY29tL21hZHNrcmlzdGVuc2VuL1dl
YkVzc2VudGlhbHMyMDEzKSAtIFdlYiBFc3NlbnRpYWxzIGV4dGVuZHMgVmlz
dWFsIFN0dWRpbyB3aXRoIGxvdHMgb2YgbmV3IGZlYXR1cmVzIHRoYXQgd2Vi
IGRldmVsb3BlcnMgaGF2ZSBiZWVuIG1pc3NpbmcgZm9yIG1hbnkgeWVhcnMK
KiBbVnNWSU1dKGh0dHBzOi8vZ2l0aHViLmNvbS9qYXJlZHBhci9Wc1ZpbSkg
LSBWSU0gaW4gVmlzdWFsIFN0dWRpbwoqIFtOdWdldCBQYWNrYWdlIE1hbmFn
ZXJdKGh0dHBzOi8vbWFya2V0cGxhY2UudmlzdWFsc3R1ZGlvLmNvbS9pdGVt
cz9pdGVtTmFtZT1OdUdldFRlYW0uTnVHZXRQYWNrYWdlTWFuYWdlcikgLSBO
dUdldCBpcyB0aGUgcGFja2FnZSBtYW5hZ2VyIGZvciB0aGUgTWljcm9zb2Z0
IGRldmVsb3BtZW50IHBsYXRmb3JtIGluY2x1ZGluZyAuTkVUCiogW1NpZGVX
YWZmbGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9saWdlcnNoYXJrL3NpZGUtd2Fm
ZmxlKSAtIEEgY29sbGVjdGlvbiBvZiBJdGVtIFRlbXBsYXRlcyBmb3IgVmlz
dWFsIFN0dWRpbyAyMDEyLzIwMTMgdGhhdCBtYWtlcyBhbnkgd2ViIGRldmVs
b3BlcidzIGxpZmUgbXVjaCBlYXNpZXIKKiBbUmVzaGFycGVyXShodHRwczov
L3d3dy5qZXRicmFpbnMuY29tL3Jlc2hhcnBlci8pIC0gRGV2ZWxvcGVyIFBy
b2R1Y3Rpdml0eSBUb29sIGZvciBWaXN1YWwgU3R1ZGlvICoqWyRdKioKKiBb
UmVmYWN0b3JpbmcgRXNzZW50aWFsc10oaHR0cDovL3ZzcmVmYWN0b3Jpbmdl
c3NlbnRpYWxzLmNvbS8pIC0gT3BlbiBzb3VyY2UgZXh0ZW5zaW9uIGZvciBD
IyBhbmQgVkIuTkVUIHJlZmFjdG9yaW5ncywgaW5jbHVkaW5nIGNvZGUgYmVz
dCBwcmFjdGljZSBhbmFseXplcnMuCiogW0NvZGVDb250cmFjdHNdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9NaWNyb3NvZnQvQ29kZUNvbnRyYWN0cykgLSBTb3Vy
Y2UgY29kZSBmb3IgdGhlIENvZGVDb250cmFjdHMgdG9vbHMgZm9yIC5ORVQK
KiBbR2l0IERpZmYgTWFyZ2luXShodHRwczovL2dpdGh1Yi5jb20vbGF1cmVu
dGtlbXBlL0dpdERpZmZNYXJnaW4pIC0gRGlzcGxheXMgbGl2ZSBHaXQgY2hh
bmdlcyBvZiB0aGUgY3VycmVudGx5IGVkaXRlZCBmaWxlIG9uIFZpc3VhbCBT
dHVkaW8gbWFyZ2luIGFuZCBzY3JvbGwgYmFyCiogW1Byb2R1Y3Rpdml0eSBQ
b3dlciBUb29sc10oaHR0cHM6Ly9tYXJrZXRwbGFjZS52aXN1YWxzdHVkaW8u
Y29tL2l0ZW1zP2l0ZW1OYW1lPVZpc3VhbFN0dWRpb1BsYXRmb3JtVGVhbS5Q
cm9kdWN0aXZpdHlQb3dlclRvb2xzKSAtIEEgc2V0IG9mIGV4dGVuc2lvbnMg
dG8gVmlzdWFsIFN0dWRpbyBQcm9mZXNzaW9uYWwgKGFuZCBhYm92ZSkgd2hp
Y2ggaW1wcm92ZXMgZGV2ZWxvcGVyIHByb2R1Y3Rpdml0eS4KKiBbVlNDb2xv
ck91dHB1dF0oaHR0cHM6Ly9tYXJrZXRwbGFjZS52aXN1YWxzdHVkaW8uY29t
L2l0ZW1zP2l0ZW1OYW1lPU1pa2VXYXJkLUFubkFyYm9yLlZTQ29sb3JPdXRw
dXQpIC0gQ29sb3IgaGlnaGxpZ2h0aW5nIGZvciBCdWlsZCwgRmluZCBhbmQg
RGVidWcgb3V0cHV0IHdpbmRvd3MuIEN1c3RvbSBtYXRjaCBwYXR0ZXJucyBh
bmQgY29sb3JzIGNhbiBiZSBhZGRlZC4KKiBbRGV2ZWxvcGVyIEFzc2lzdGFu
dF0oaHR0cHM6Ly9tYXJrZXRwbGFjZS52aXN1YWxzdHVkaW8uY29tL2l0ZW1z
P2l0ZW1OYW1lPVZpc3VhbFN0dWRpb1BsYXRmb3JtVGVhbS5EZXZlbG9wZXJB
c3Npc3RhbnQpIC0gRGV2ZWxvcGVyIEFzc2lzdGFudCBmb3IgVmlzdWFsIFN0
dWRpbyBlbmFibGVzIGRldmVsb3BlcnMgdG8gZmluZCBhbmQgcmV1c2Ugb3Zl
ciAyMSBtaWxsaW9uIGNvZGUgc25pcHBldHMgYW5kIGNvZGUgc2FtcGxlIHBy
b2plY3RzIGZyb20gd2l0aGluIHRoZSBWaXN1YWwgU3R1ZGlvIElERS4KKiBb
Q29kZUxpbmVhZ2VdKGh0dHBzOi8vbWFya2V0cGxhY2UudmlzdWFsc3R1ZGlv
LmNvbS9pdGVtcz9pdGVtTmFtZT1IaXBwb0NhbXBTb2Z0d2FyZUx0ZC5Db2Rl
TGluZWFnZSkgLSBFYXN5IGFjY2VzcyB0byBhIGN1bXVsYXRpdmUgZGlmZiB2
aWV3IGJldHdlZW4gZmlsZSByZXZpc2lvbnMgKHN1cHBvcnRzIHN2biwgZ2l0
LCBtZXJjdXJpYWwsIHBlcmZvcmNlKS4KKiBbT3pDb2RlXShodHRwczovL21h
cmtldHBsYWNlLnZpc3VhbHN0dWRpby5jb20vaXRlbXM/aXRlbU5hbWU9Q29k
ZVZhbHVlTHRkLk96Q29kZSkgLSBPekNvZGUgaXMgYSBWaXN1YWwgU3R1ZGlv
IEV4dGVuc2lvbiB3aGljaCBjdXRzIGRvd24gb24gZGVidWdnaW5nIHRpbWUg
YW5kIGluY3JlYXNlcyBwcm9kdWN0aXZpdHkgYnkgZGV0ZWN0aW5nIGFuZCBp
c29sYXRpbmcgYnVncywgbWFraW5nIHRoZW0gZWFzeSB0byBmaXguICoqWyRd
KioKICogW1Jvc2x5bmF0b3JdKGh0dHBzOi8vZ2l0aHViLmNvbS9Kb3NlZlBp
aHJ0L1Jvc2x5bmF0b3IpIC0gQSBjb2xsZWN0aW9uIG9mIDUwMCsgYW5hbHl6
ZXJzLCByZWZhY3RvcmluZ3MgYW5kIGZpeGVzIGZvciBDIywgcG93ZXJlZCBi
eSBSb3NseW4KCiMjIFdlYiBCcm93c2VycwoKKiBbQ2VmU2hhcnBdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9jZWZzaGFycC9DZWZTaGFycC8pIC0gSFRNTDUsIENT
UzMgYW5kIEpTIHdlYiBicm93c2VyIHBvd2VyZWQgYnkgQ2hyb21pdW0sIGZv
ciBXaW5Gb3JtcyBhbmQgV1BGCgojIyBXZWIgRnJhbWV3b3JrcwoKKiBbQVNQ
Lk5FVCBNVkNdKGh0dHBzOi8vZG90bmV0Lm1pY3Jvc29mdC5jb20vYXBwcy9h
c3BuZXQpIC0gQVNQLk5FVCBpcyBhIGZyZWUgd2ViIGZyYW1ld29yayBmb3Ig
YnVpbGRpbmcgZ3JlYXQgd2ViIHNpdGVzIGFuZCBhcHBsaWNhdGlvbnMKKiBb
Q29hbGVzY2VdKGh0dHBzOi8vY29hbGVzY2UuaW50ZWxsaXRlY3QuY29tLykg
LSBDb2FsZXNjZSBpcyBhIGZyYW1ld29yayBmb3IgcmFwaWQtZGV2ZWxvcG1l
bnQgb2YgQVNQLk5FVCBDb3JlIHdlYiBhcHBsaWNhdGlvbnMuCiogW0Z1YnVN
VkNdKGh0dHBzOi8vZ2l0aHViLmNvbS9EYXJ0aEZ1YnVNVkMvZnVidW12Yykg
LSBBIGZyb250LWNvbnRyb2xsZXIgc3R5bGUgTVZDIGZyYW1ld29yayBmb3Ig
Lk5FVAoqIFtOYW5jeUZ4XShodHRwczovL2dpdGh1Yi5jb20vTmFuY3lGeC9O
YW5jeSkgLSBMaWdodHdlaWdodCwgbG93LWNlcmVtb255LCBmcmFtZXdvcmsg
Zm9yIGJ1aWxkaW5nIEhUVFAtYmFzZWQgc2VydmljZXMgb24gLk5FVCBhbmQg
TW9ubwoqIFtJSVNOb2RlXShodHRwczovL2dpdGh1Yi5jb20vdGphbmN6dWsv
aWlzbm9kZSkgLSBIb3N0IE5vZGUuanMgYXBwbGljYXRpb25zIGluIElJUwoq
IFtTdWF2ZS5JT10oaHR0cHM6Ly9zdWF2ZS5pby8pIC0gRnJhbWV3b3JrL2xp
YnJhcnkvd2ViIHNlcnZlciB0aGF0IG1ha2VzIHlvdSBjcnkgdGVhcnMgb2Yg
am95IGFmdGVyIGZpbmlzaGluZyB5b3VyIHByb2plY3QgYWhlYWQtb2YtdGlt
ZSB3aGVuIHlvdSBsb29rIGF0IHRoZSBiZWF1dGlmdWwgY29kZSB5b3UndmUg
d3JpdHRlbiBpbiBGIy4KKiBbRG90VlZNXShodHRwczovL2dpdGh1Yi5jb20v
cmlnYW50aS9kb3R2dm0pIC0gTVZWTSBmcmFtZXdvcmsgZm9yIHBlb3BsZSB3
aG8gZG9uJ3QgbGlrZSB0byB3cml0ZSBKYXZhU2NyaXB0LCB3aXRoIE9XSU4g
YW5kIEFTUC5ORVQgQ29yZSBzdXBwb3J0IGFuZCBhIGZyZWUgZXh0ZW5zaW9u
IGZvciBWaXN1YWwgU3R1ZGlvIDIwMTUgYW5kIDIwMTcuCiogW0dpcmFmZmVd
KGh0dHBzOi8vZ2l0aHViLmNvbS9naXJhZmZlLWZzaGFycC9HaXJhZmZlKSAt
IEZ1bmN0aW9uYWwgKEYjKSBBU1AuTkVUIENvcmUgbWljcm8gZnJhbWV3b3Jr
IGZvciBidWlsZGluZyByaWNoIHdlYiBhcHBsaWNhdGlvbnMKCiMjIFdlYiBT
ZXJ2ZXJzCgoqIFtLZXN0cmVsXShodHRwczovL2dpdGh1Yi5jb20vYXNwbmV0
L0tlc3RyZWxIdHRwU2VydmVyKSAtICBBIHdlYiBzZXJ2ZXIgZm9yIEFTUC5O
RVQgQ29yZSBiYXNlZCBvbiBsaWJ1dgoqIFtFbWJlZElPXShodHRwczovL2dp
dGh1Yi5jb20vdW5vc3F1YXJlL2VtYmVkaW8pIC0gV2ViIHNlcnZlciBidWls
dCBvbiBNb25vIGFuZCBjcm9zcy1wbGF0Zm9ybQoqIFtYU1BdKGh0dHBzOi8v
Z2l0aHViLmNvbS9tb25vL3hzcCkgLSBNb25vJ3MgQVNQLk5FVCBob3N0aW5n
IHNlcnZlci4gVGhpcyBtb2R1bGUgaW5jbHVkZXMgYW4gQXBhY2hlIE1vZHVs
ZSwgYSBGYXN0Q0dJIG1vZHVsZSB0aGF0IGNhbiBiZSBob29rZWQgdG8gb3Ro
ZXIgd2ViIHNlcnZlcnMgYXMgd2VsbCBhcyBhIHN0YW5kYWxvbmUgc2VydmVy
IHVzZWQgZm9yIHRlc3RpbmcgKHNpbWlsYXIgdG8gTWljcm9zb2Z0J3MgQ2Fz
c2luaSkKCiMjIFdlYlNvY2tldAoKKiBbRmxlY2tdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9zdGF0aWFuem8vRmxlY2spIC0gRmxlY2sgaXMgYSBXZWJTb2NrZXQg
c2VydmVyIGltcGxlbWVudGF0aW9uIGluIEMjLiBCcmFuY2hlZCBmcm9tIHRo
ZSBOdWdnZXQgcHJvamVjdAoqIFtTaWduYWxSXShodHRwczovL2dpdGh1Yi5j
b20vU2lnbmFsUi9TaWduYWxSKSAtIExpYnJhcnkgZm9yIEFTUC5ORVQgZGV2
ZWxvcGVycyB0aGF0IG1ha2VzIGl0IGluY3JlZGlibHkgc2ltcGxlIHRvIGFk
ZCByZWFsLXRpbWUgd2ViIGZ1bmN0aW9uYWxpdHkgdG8geW91ciBhcHBsaWNh
dGlvbnMKKiBbU3VwZXJTb2NrZXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9rZXJy
eWppYW5nL1N1cGVyU29ja2V0KSAtIFN1cGVyU29ja2V0IGlzIGEgbGlnaHQg
d2VpZ2h0IGV4dGVuc2libGUgc29ja2V0IGFwcGxpY2F0aW9uIGZyYW1ld29y
awoqIFtXZWJzb2NrZXQtU2hhcnBdKGh0dHBzOi8vZ2l0aHViLmNvbS9zdGEv
d2Vic29ja2V0LXNoYXJwKSAtIEEgQyMgaW1wbGVtZW50YXRpb24gb2YgdGhl
IFdlYlNvY2tldCBwcm90b2NvbCBjbGllbnQgYW5kIHNlcnZlcgoqIFtXZWJT
b2NrZXQ0TkVUXShodHRwczovL2FyY2hpdmUuY29kZXBsZXguY29tLz9wPXdl
YnNvY2tldDRuZXQpIC0gV2ViU29ja2V0IGNsaWVudCBmb3IgLk5FVCAyLjAr
LCBYYW1hcmluLCBNb25vLCBTaWx2ZXJsaWdodCwgV2luZG93cyBQaG9uZSwg
JiBXaW5SVAoqIFtDcm9zc2VydGVjaF0oaHR0cHM6Ly9jcm9zc2VyLmlvLykg
LSBQcm92aWRlcyBhIGdyZWF0IHNldCBvZiB0b29scyBmb3IgeW91IHRvIGJ1
aWxkIHJlYWwtdGltZSBhcHBsaWNhdGlvbnMgb24gdGhlIE1pY3Jvc29mdC5O
RVQgcGxhdHRmb3JtIGFuZCBtdWNoIG1vcmUuICoqWyRdKioKKiBbV2FtcFNo
YXJwXShodHRwczovL2dpdGh1Yi5jb20vQ29kZS1TaGFycC9XYW1wU2hhcnAp
IC0gQSBDIyBpbXBsZW1lbnRhdGlvbiBvZiBbVGhlIFdlYiBBcHBsaWNhdGlv
biBNZXNzYWdpbmcgUHJvdG9jb2xdKGh0dHBzOi8vd2FtcC1wcm90by5vcmcv
KSAtIGEgcHJvdG9jb2wgdGhhdCBwcm92aWRlcyBtZXNzYWdpbmcgcGF0dGVy
bnMgb2YgUmVtb3RlIFByb2NlZHVyZSBDYWxscyBhbmQgUHVibGlzaC9TdWJz
Y3JpYmUgb3ZlciBXZWJTb2NrZXRzLgoqIFtOZXRHYWluXShodHRwczovL2dp
dGh1Yi5jb20vU3RhY2tFeGNoYW5nZS9OZXRHYWluKSAtIEEgaGlnaCBwZXJm
b3JtYW5jZSBXZWJTb2NrZXQgc2VydmVyIGxpYnJhcnkgcG93ZXJpbmcgU3Rh
Y2sgT3ZlcmZsb3cuCiogW1dlYnNvY2tldHMuUENMXShodHRwczovL2dpdGh1
Yi5jb20vTlZlbnRpbWlnbGlhL1dlYnNvY2tldHMuUENMKSAtIFdlYlNvY2tl
dHMuUENMIGlzIGEgcG9ydGFibGUgY2xhc3MgbGlicmFyeSwgcHJvZmlsZSAy
NTksIEMjIFdlYlNvY2tldCBpbXBsZW1lbnRhdGlvbi4KCiMjIFdpbmRvd3Mg
U2VydmljZXMKCiogW1RvcFNoZWxmXShodHRwczovL2dpdGh1Yi5jb20vVG9w
c2hlbGYvVG9wc2hlbGYpIC0gQW4gZWFzeSBzZXJ2aWNlIGhvc3RpbmcgZnJh
bWV3b3JrIGZvciBidWlsZGluZyBXaW5kb3dzIHNlcnZpY2VzIHVzaW5nIC5O
RVQKCiMjIFdQRgoKKiBbRGF0YSBHcmlkIEV4dGVuc2lvbnNdKGh0dHBzOi8v
Z2l0aHViLmNvbS90b20tZW5nbGVydC9EYXRhR3JpZEV4dGVuc2lvbnMpIC0g
TW9kdWxhciBleHRlbnNpb25zIGZvciB0aGUgV1BGIERhdGFHcmlkIGNvbnRy
b2wsIGxpa2UgZmlsdGVyaW5nLCBhZGRpdGlvbmFsIGNvbHVtbiBldmVudHMs
IGV4dGVuZGVkIHN0YXItc2l6ZSBjb2x1bW4gYmVoYXZpb3IsIGFuZCBtb3Jl
Li4uCiogW0V4dGVuZGVkIFdQRiBUb29sa2l04oSiXShodHRwczovL2dpdGh1
Yi5jb20veGNlZWRzb2Z0d2FyZS93cGZ0b29sa2l0KSAtIEEgcmljaCBjb2xs
ZWN0aW9uIG9mIGNvbnRyb2xzLCBjb21wb25lbnRzIGFuZCB1dGlsaXRpZXMg
Zm9yIGNyZWF0aW5nIFdQRiBhcHBsaWNhdGlvbnMKKiBbV1BGXShodHRwczov
L2dpdGh1Yi5jb20vZG90bmV0L3dwZikgLSBXUEYgaXMgYSAuTkVUIENvcmUg
VUkgZnJhbWV3b3JrIGZvciBidWlsZGluZyBXaW5kb3dzIGRlc2t0b3AgYXBw
bGljYXRpb25zLgoKIyMgUGFyc2VyIExpYnJhcnkKCiogW1NwcmFjaGVdKGh0
dHBzOi8vZ2l0aHViLmNvbS9zcHJhY2hlL1NwcmFjaGUpIC0gQSBzaW1wbGUs
IGxpZ2h0d2VpZ2h0IGxpYnJhcnkgZm9yIGNvbnN0cnVjdGluZyBwYXJzZXJz
IGRpcmVjdGx5IGluIEMjIGNvZGUKKiBbUGlkZ2luXShodHRwczovL2dpdGh1
Yi5jb20vYmVuamFtaW4taG9kZ3Nvbi9QaWRnaW4pIC0gQSBsaWdodHdlaWdo
dCwgZmFzdCBhbmQgZmxleGlibGUgcGFyc2luZyBsaWJyYXJ5IGZvciBDIywg
ZGV2ZWxvcGVkIGF0IFN0YWNrIE92ZXJmbG93CiogW0ZQYXJzZWNdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9zdGVwaGFuLXRvbGtzZG9yZi9mcGFyc2VjKSAtIEEg
cGFyc2VyIGNvbWJpbmF0b3IgbGlicmFyeSBmb3IgRiMKKiBbU3VwZXJwb3dl
cl0oaHR0cHM6Ly9naXRodWIuY29tL2RhdGFsdXN0L3N1cGVycG93ZXIpIC0g
QSBDIyBwYXJzZXIgY29uc3RydWN0aW9uIHRvb2xraXQgd2l0aCBoaWdoLXF1
YWxpdHkgZXJyb3IgcmVwb3J0aW5nCgojIE90aGVyIExpc3RzCgoqIFsuTkVU
LWxpYnJhcmllcy10aGF0LW1ha2UteW91ci1saWZlLWVhc2llcl0oaHR0cHM6
Ly9naXRodWIuY29tL3RhbGxlc2wvbmV0LWxpYnJhcmllcy10aGF0LW1ha2Ut
eW91ci1saWZlLWVhc2llcikgLSBPcGVuIFNvdXJjZSAuTkVUIGxpYnJhcmll
cyB0aGF0IG1ha2UgeW91ciBsaWZlIGVhc2llcgoqIFthd2Vzb21lLUxJTlFd
KGh0dHBzOi8vZ2l0aHViLmNvbS9hbG9pc2RnL2F3ZXNvbWUtbGlucSkgLSBB
IGN1cmF0ZWQgY29sbGVjdGlvbiBvZiBhd2Vzb21lIExJTlEgbGlicmFyaWVz
LCB0b29scywgYW5kIG1vcmUuCiogW2F3ZXNvbWUtYW5hbHl6ZXJzXShodHRw
czovL2dpdGh1Yi5jb20vQ3liZXJtYXhzL2F3ZXNvbWUtYW5hbHl6ZXJzKSAt
IEEgY3VyYXRlZCBsaXN0IG9mIC5ORVQgQ29tcGlsZXIgUGxhdGZvcm0gKCJS
b3NseW4iKSBkaWFnbm9zdGljIGFuYWx5emVycyBhbmQgY29kZSBmaXhlcy4K
KiBbQyMgQWxnb3JpdGhtcywgRGF0YSBTdHJ1Y3R1cmVzXShodHRwczovL2dp
dGh1Yi5jb20vYWFsaG91ci9DLVNoYXJwLUFsZ29yaXRobXMpIC0gQSBsaXN0
IG9mIGFsZ29yaXRobXMgYW5kIGRhdGEgc3RydWN0dXJlcyBpbXBsZW1lbnRh
dGlvbnMuCiogW0F3ZXNvbWUgLk5FVCBDb3JlXShodHRwczovL2dpdGh1Yi5j
b20vdGhhbmdjaHVuZy9hd2Vzb21lLWRvdG5ldC1jb3JlKSAtIEEgY29sbGVj
dGlvbiBvZiBhd2Vzb21lIC5ORVQgY29yZSBsaWJyYXJpZXMsIHRvb2xzLCBm
cmFtZXdvcmtzIGFuZCBzb2Z0d2FyZQoqIFtBU1AuTkVUIENvcmUgTGlicmFy
eSBhbmQgRnJhbWV3b3JrIFN1cHBvcnRdKGh0dHBzOi8vZ2l0aHViLmNvbS9q
cHNpbmdsZXRvbi9BTkNMQUZTKSAtIEEgbGlzdCBvZiB3aGF0IC5ORVQgbGli
cmFyaWVzIGFuZCBmcmFtZXdvcmtzIGFyZSBjdXJyZW50bHkgc3VwcG9ydGVk
IGJ5IEFTUC5ORVQgQ29yZSBhbmQgLk5FVCBDb3JlKS4KKiBbQXdlc29tZSAu
TkVUIFBlcmZvcm1hbmNlXShodHRwczovL2dpdGh1Yi5jb20vYWRhbXNpdG5p
ay9hd2Vzb21lLWRvdC1uZXQtcGVyZm9ybWFuY2UpIC0gQSBjdXJhdGVkIGxp
c3Qgb2YgYXdlc29tZSAuTkVUIFBlcmZvcm1hbmNlIGJvb2tzLCBjb3Vyc2Vz
LCB0cmFpbmluZ3MsIGNvbmZlcmVuY2UgdGFsa3MsIGJsb2dzIGFuZCBtb3N0
IGluc3BpcmluZyBvcGVuIHNvdXJjZSBjb250cmlidXRvcnMuCiogW2F3ZXNv
bWUtZGRkXShodHRwczovL2dpdGh1Yi5jb20vaGV5bmlja2MvYXdlc29tZS1k
ZGQpIC0gQSBjdXJhdGVkIGxpc3Qgb2YgRG9tYWluLURyaXZlbiBEZXNpZ24g
KERERCksIENvbW1hbmQgUXVlcnkgUmVzcG9uc2liaWxpdHkgU2VncmVnYXRp
b24gKENRUlMpLCBFdmVudCBTb3VyY2luZywgYW5kIEV2ZW50IFN0b3JtaW5n
IHJlc291cmNlcwoqIFtBd2Vzb21lIFVuaXR5XShodHRwczovL2dpdGh1Yi5j
b20vUnlhbk5pZWxzb24vYXdlc29tZS11bml0eSkgLSBBIGNhdGVnb3JpemVk
IGNvbW11bml0eS1kcml2ZW4gY29sbGVjdGlvbiBvZiBoaWdoLXF1YWxpdHkg
YXdlc29tZSBVbml0eSBhc3NldHMsIHByb2plY3RzLCBhbmQgcmVzb3VyY2Vz
LgoqIFtBd2Vzb21lIFhhbWFyaW5dKGh0dHBzOi8vZ2l0aHViLmNvbS9YYW1T
b21lL2F3ZXNvbWUteGFtYXJpbikgLSBBIGNvbGxlY3Rpb24gb2YgaW50ZXJl
c3RpbmcgbGlicmFyaWVzL3Rvb2xzIGZvciBYYW1hcmluIG1vYmlsZSBwcm9q
ZWN0cy4KKiBbQXdlc29tZSBSb3NseW5dKGh0dHBzOi8vZ2l0aHViLmNvbS9p
cm9uY2V2L2F3ZXNvbWUtcm9zbHluKSAtIEEgY3VyYXRlZCBsaXN0IG9mIGF3
ZXNvbWUgUm9zbHluIGJvb2tzLCB0dXRvcmlhbHMsIG9wZW4gc291cmNlIHBy
b2plY3RzLCBhbmFseXplcnMsIGNvZGUgZml4ZXMsIGFuZCByZWZhY3Rvcmlu
Z3MuCiogWy5ORVQgT3BlbiBTb3VyY2UgRGV2ZWxvcGVyIFByb2plY3RzXSho
dHRwczovL2dpdGh1Yi5jb20vTWljcm9zb2Z0L2RvdG5ldC9ibG9iL21hc3Rl
ci9kb3RuZXQtZGV2ZWxvcGVyLXByb2plY3RzLm1kKSAtIFRoaXMgY29tbXVu
aXR5IG1haW50YWluZWQgbGlzdCBzaG93Y2FzZXMgLk5FVCBvcGVuIHNvdXJj
ZSBwcm9qZWN0cyB0aGF0IGFyZSB1c2VmdWwgZm9yIGFueSBhc3BlY3Qgb2Yg
dGhlIGRldmVsb3BtZW50IHByb2Nlc3MuCgojIFJlc291cmNlcwoKKiBbRGlz
Y292ZXIgLk5FVF0oaHR0cHM6Ly9kaXNjb3ZlcmRvdC5uZXQpIC0gQXdlc29t
ZSAuTkVUIG9wZW4gc291cmNlIGFuZCBjb21tdW5pdHkgcmVzb3VyY2VzLgoq
IFtXZWVrbHkgQyMgRGlnZXN0XShodHRwczovL2NzaGFycGRpZ2VzdC5uZXQv
KSAtIFdlZWtseSBlbWFpbCBuZXdzbGV0dGVyIHdpdGggbWFudWFsbHkgY3Vy
YXRlZCB0b3AgNSBsaW5rcyBmcm9tIHRoZSAuTkVUIGNvbW11bml0eS4K
",,"bGFuZ3VhZ2U6IHJ1YnkKcnZtOgogIC0gMi4yCmJlZm9yZV9zY3JpcHQ6CiAg
LSBnZW0gaW5zdGFsbCBhd2Vzb21lX2JvdApzY3JpcHQ6CiAgLSBhd2Vzb21l
X2JvdCBSRUFETUUubWQgLS1hbGxvdy1kdXBlIC0td2hpdGUtbGlzdCBnaXN0
bHluLmNvbQo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'react-redux-starter-kit',38003903,"b'Get started with React, Redux, and React-Router.'",b'JavaScript',130,10432,,10432,False,b'https://api.github.com/repos/davezuko/react-redux-starter-kit/forks',"IyBEZXByZWNhdGlvbiBXYXJuaW5nCgpUaGlzIHByb2plY3Qgd2FzIHN0YXJ0
ZWQgYXQgdGhlIGFkdmVudCBvZiB0aGUgUmVkdXggZWNvc3lzdGVtLCBhbmQg
d2FzIGludGVuZGVkIHRvIGhlbHAgdXNlcnMgZ2V0IHVwIGFuZCBydW5uaW5n
IHF1aWNrbHkuIFNpbmNlIHRoZW4sIHRvb2xpbmcgYW5kIGJlc3QgcHJhY3Rp
Y2VzIGhhdmUgZXZvbHZlZCB0cmVtZW5kb3VzbHkuIEluIG9yZGVyIHRvIGdl
dCB0aGUgbW9zdCBtb2Rlcm4gZXhwZXJpZW5jZSBwb3NzaWJsZSwgSSByZWNv
bW1lbmQgY2hlY2tpbmcgb3V0IHNvbWV0aGluZyBsaWtlIFtjcmVhdGUtcmVh
Y3QtYXBwXShodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2tpbmN1YmF0b3Iv
Y3JlYXRlLXJlYWN0LWFwcCkgd2hpY2ggaXMgc3VwcG9ydGVkIGJ5IG1hbnkg
Y29yZSBSZWFjdCBhbmQgUmVkdXggZGV2ZWxvcGVycy4KCllvdSBhcmUgd2Vs
Y29tZSB0byB1c2UgdGhpcyBwcm9qZWN0IGlmIGl0IGlzIGEgYmV0dGVyIGZp
dCBmb3IgeW91ciBuZWVkcywgYnV0IGlmIHlvdSBhcmUgYnJhbmQgbmV3IHRv
IHRoZSBlY29zeXN0ZW0gSSBoaWdobHkgcmVjb21tZW5kIGNoZWNraW5nIG91
dCBzb21ldGhpbmcgdGhhdCBoYXMgcmVjZWl2ZWQgbW9yZSByZWNlbnQgdXBk
YXRlcy4KClRoYW5rIHlvdSB0byBldmVyeW9uZSB3aG8gbWFkZSB0aGlzIHBy
b2plY3QgcG9zc2libGUgb3ZlciB0aGUgcGFzdCB5ZWFyKHMpLgoKIyBSZWFj
dCBSZWR1eCBTdGFydGVyIEtpdAoKWyFbQnVpbGQgU3RhdHVzXShodHRwczov
L3RyYXZpcy1jaS5vcmcvZGF2ZXp1a28vcmVhY3QtcmVkdXgtc3RhcnRlci1r
aXQuc3ZnP2JyYW5jaD1tYXN0ZXIpXShodHRwczovL3RyYXZpcy1jaS5vcmcv
ZGF2ZXp1a28vcmVhY3QtcmVkdXgtc3RhcnRlci1raXQ/YnJhbmNoPW1hc3Rl
cikKWyFbZGVwZW5kZW5jaWVzXShodHRwczovL2RhdmlkLWRtLm9yZy9kYXZl
enVrby9yZWFjdC1yZWR1eC1zdGFydGVyLWtpdC5zdmcpXShodHRwczovL2Rh
dmlkLWRtLm9yZy9kYXZlenVrby9yZWFjdC1yZWR1eC1zdGFydGVyLWtpdCkK
WyFbZGV2RGVwZW5kZW5jeSBTdGF0dXNdKGh0dHBzOi8vZGF2aWQtZG0ub3Jn
L2RhdmV6dWtvL3JlYWN0LXJlZHV4LXN0YXJ0ZXIta2l0L2Rldi1zdGF0dXMu
c3ZnKV0oaHR0cHM6Ly9kYXZpZC1kbS5vcmcvZGF2ZXp1a28vcmVhY3QtcmVk
dXgtc3RhcnRlci1raXQjaW5mbz1kZXZEZXBlbmRlbmNpZXMpClshW2pzLXN0
YW5kYXJkLXN0eWxlXShodHRwczovL2ltZy5zaGllbGRzLmlvL2JhZGdlL2Nv
ZGUlMjBzdHlsZS1zdGFuZGFyZC1icmlnaHRncmVlbi5zdmcpXShodHRwOi8v
c3RhbmRhcmRqcy5jb20vKQoKVGhpcyBzdGFydGVyIGtpdCBpcyBkZXNpZ25l
ZCB0byBnZXQgeW91IHVwIGFuZCBydW5uaW5nIHdpdGggYSBidW5jaCBvZiBh
d2Vzb21lIGZyb250LWVuZCB0ZWNobm9sb2dpZXMuCgpUaGUgcHJpbWFyeSBn
b2FsIG9mIHRoaXMgcHJvamVjdCBpcyB0byBwcm92aWRlIGEgc3RhYmxlIGZv
dW5kYXRpb24gdXBvbiB3aGljaCB0byBidWlsZCBtb2Rlcm4gd2ViIGFwcGxp
aWNhdGlvbnMuIEl0cyBwdXJwb3NlIGlzIG5vdCB0byBkaWN0YXRlIHlvdXIg
cHJvamVjdCBzdHJ1Y3R1cmUgb3IgdG8gZGVtb25zdHJhdGUgYSBjb21wbGV0
ZSByZWFsLXdvcmxkIGFwcGxpY2F0aW9uLCBidXQgdG8gcHJvdmlkZSBhIHNl
dCBvZiB0b29scyBpbnRlbmRlZCB0byBtYWtlIGZyb250LWVuZCBkZXZlbG9w
bWVudCByb2J1c3QsIGVhc3ksIGFuZCwgbW9zdCBpbXBvcnRhbnRseSwgZnVu
LiBDaGVjayBvdXQgdGhlIGZ1bGwgZmVhdHVyZSBsaXN0IGJlbG93IQoKRmlu
YWxseSwgVGhpcyBwcm9qZWN0IHdvdWxkbid0IGJlIHBvc3NpYmxlIHdpdGhv
dXQgdGhlIGhlbHAgb2Ygb3VyIG1hbnkgY29udHJpYnV0b3JzLiBXaGF0IHlv
dSBzZWUgdG9kYXkgaXMgdGhlIHByb2R1Y3Qgb2YgaHVuZHJlZHMgY2hhbmdl
cyBtYWRlIHRvIGtlZXAgdXAgd2l0aCBhbiBldmVyLWV2b2x2aW5nIGVjb3N5
c3RlbS4gW1RoYW5rIHlvdV0oI3RoYW5rLXlvdSkgZm9yIGFsbCBvZiB5b3Vy
IGhlbHAuCgojIyBUYWJsZSBvZiBDb250ZW50cwoxLiBbUmVxdWlyZW1lbnRz
XSgjcmVxdWlyZW1lbnRzKQoxLiBbSW5zdGFsbGF0aW9uXSgjZ2V0dGluZy1z
dGFydGVkKQoxLiBbUnVubmluZyB0aGUgUHJvamVjdF0oI3J1bm5pbmctdGhl
LXByb2plY3QpCjEuIFtQcm9qZWN0IFN0cnVjdHVyZV0oI3Byb2plY3Qtc3Ry
dWN0dXJlKQoxLiBbTGl2ZSBEZXZlbG9wbWVudF0oI2xvY2FsLWRldmVsb3Bt
ZW50KQogICAgKiBbSG90IFJlbG9hZGluZ10oI2hvdC1yZWxvYWRpbmcpCiAg
ICAqIFtSZWR1eCBEZXZUb29sc10oI3JlZHV4LWRldnRvb2xzKQoxLiBbUm91
dGluZ10oI3JvdXRpbmcpCjEuIFtUZXN0aW5nXSgjdGVzdGluZykKICAgICog
W2RpcnR5LWNoYWldKCNkaXJ0eS1jaGFpKQoxLiBbQnVpbGRpbmcgZm9yIFBy
b2R1Y3Rpb25dKCNidWlsZGluZy1mb3ItcHJvZHVjdGlvbikKMS4gW0RlcGxv
eW1lbnRdKCNkZXBsb3ltZW50KQoxLiBbVGhhbmsgWW91XSgjdGhhbmsteW91
KQoKIyMgUmVxdWlyZW1lbnRzCiogbm9kZSBgXjUuMC4wYAoqIHlhcm4gYF4w
LjIzLjBgIG9yIG5wbSBgXjMuMC4wYAoKIyMgSW5zdGFsbGF0aW9uCgpBZnRl
ciBjb25maXJtaW5nIHRoYXQgeW91ciBlbnZpcm9ubWVudCBtZWV0cyB0aGUg
YWJvdmUgW3JlcXVpcmVtZW50c10oI3JlcXVpcmVtZW50cyksIHlvdSBjYW4g
Y3JlYXRlIGEgbmV3IHByb2plY3QgYmFzZWQgb24gYHJlYWN0LXJlZHV4LXN0
YXJ0ZXIta2l0YCBieSBkb2luZyB0aGUgZm9sbG93aW5nOgoKYGBgYmFzaAok
IGdpdCBjbG9uZSBodHRwczovL2dpdGh1Yi5jb20vZGF2ZXp1a28vcmVhY3Qt
cmVkdXgtc3RhcnRlci1raXQuZ2l0IDxteS1wcm9qZWN0LW5hbWU+CiQgY2Qg
PG15LXByb2plY3QtbmFtZT4KYGBgCgpXaGVuIHRoYXQncyBkb25lLCBpbnN0
YWxsIHRoZSBwcm9qZWN0IGRlcGVuZGVuY2llcy4gSXQgaXMgcmVjb21tZW5k
ZWQgdGhhdCB5b3UgdXNlIFtZYXJuXShodHRwczovL3lhcm5wa2cuY29tLykg
Zm9yIGRldGVybWluaXN0aWMgZGVwZW5kZW5jeSBtYW5hZ2VtZW50LCBidXQg
YG5wbSBpbnN0YWxsYCB3aWxsIHN1ZmZpY2UuCgpgYGBiYXNoCiQgeWFybiAg
IyBJbnN0YWxsIHByb2plY3QgZGVwZW5kZW5jaWVzIChvciBgbnBtIGluc3Rh
bGxgKQpgYGAKCiMjIFJ1bm5pbmcgdGhlIFByb2plY3QKCkFmdGVyIGNvbXBs
ZXRpbmcgdGhlIFtpbnN0YWxsYXRpb25dKCNpbnN0YWxsYXRpb24pIHN0ZXAs
IHlvdSdyZSByZWFkeSB0byBzdGFydCB0aGUgcHJvamVjdCEKCmBgYGJhc2gK
JCB5YXJuIHN0YXJ0ICAjIFN0YXJ0IHRoZSBkZXZlbG9wbWVudCBzZXJ2ZXIg
KG9yIGBucG0gc3RhcnRgKQpgYGAKCldoaWxlIGRldmVsb3BpbmcsIHlvdSB3
aWxsIHByb2JhYmx5IHJlbHkgbW9zdGx5IG9uIGB5YXJuIHN0YXJ0YDsgaG93
ZXZlciwgdGhlcmUgYXJlIGFkZGl0aW9uYWwgc2NyaXB0cyBhdCB5b3VyIGRp
c3Bvc2FsOgoKfGB5YXJuIDxzY3JpcHQ+YCAgICB8RGVzY3JpcHRpb258Cnwt
LS0tLS0tLS0tLS0tLS0tLS0tfC0tLS0tLS0tLS0tfAp8YHN0YXJ0YCAgICAg
ICAgICAgIHxTZXJ2ZXMgeW91ciBhcHAgYXQgYGxvY2FsaG9zdDozMDAwYHwK
fGBidWlsZGAgICAgICAgICAgICB8QnVpbGRzIHRoZSBhcHBsaWNhdGlvbiB0
byAuL2Rpc3R8CnxgdGVzdGAgICAgICAgICAgICAgfFJ1bnMgdW5pdCB0ZXN0
cyB3aXRoIEthcm1hLiBTZWUgW3Rlc3RpbmddKCN0ZXN0aW5nKXwKfGB0ZXN0
OndhdGNoYCAgICAgICB8UnVucyBgdGVzdGAgaW4gd2F0Y2ggbW9kZSB0byBy
ZS1ydW4gdGVzdHMgd2hlbiBjaGFuZ2VkfAp8YGxpbnRgICAgICAgICAgICAg
IHxbTGludHNdKGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMv
ODUwMzU1OS93aGF0LWlzLWxpbnRpbmcpIHRoZSBwcm9qZWN0IGZvciBwb3Rl
bnRpYWwgZXJyb3JzfAp8YGxpbnQ6Zml4YCAgICAgICAgIHxMaW50cyB0aGUg
cHJvamVjdCBhbmQgW2ZpeGVzIGFsbCBjb3JyZWN0YWJsZSBlcnJvcnNdKGh0
dHA6Ly9lc2xpbnQub3JnL2RvY3MvdXNlci1ndWlkZS9jb21tYW5kLWxpbmUt
aW50ZXJmYWNlLmh0bWwjZml4KXwKCiMjIFByb2plY3QgU3RydWN0dXJlCgpU
aGUgcHJvamVjdCBzdHJ1Y3R1cmUgcHJlc2VudGVkIGluIHRoaXMgYm9pbGVy
cGxhdGUgaXMgKipmcmFjdGFsKiosIHdoZXJlIGZ1bmN0aW9uYWxpdHkgaXMg
Z3JvdXBlZCBwcmltYXJpbHkgYnkgZmVhdHVyZSByYXRoZXIgdGhhbiBmaWxl
IHR5cGUuIFRoaXMgc3RydWN0dXJlIGlzIG9ubHkgbWVhbnQgdG8gc2VydmUg
YXMgYSBndWlkZSwgaXQgaXMgYnkgbm8gbWVhbnMgcHJlc2NyaXB0aXZlLiBU
aGF0IHNhaWQsIGl0IGFpbXMgdG8gcmVwcmVzZW50IGdlbmVyYWxseSBhY2Nl
cHRlZCBndWlkZWxpbmVzIGFuZCBwYXR0ZXJucyBmb3IgYnVpbGRpbmcgc2Nh
bGFibGUgYXBwbGljYXRpb25zLiBJZiB5b3Ugd2lzaCB0byByZWFkIG1vcmUg
YWJvdXQgdGhpcyBwYXR0ZXJuLCBwbGVhc2UgY2hlY2sgb3V0IHRoaXMgW2F3
ZXNvbWUgd3JpdGV1cF0oaHR0cHM6Ly9naXRodWIuY29tL2RhdmV6dWtvL3Jl
YWN0LXJlZHV4LXN0YXJ0ZXIta2l0L3dpa2kvRnJhY3RhbC1Qcm9qZWN0LVN0
cnVjdHVyZSkgYnkgW0p1c3RpbiBHcmVlbmJlcmddKGh0dHBzOi8vZ2l0aHVi
LmNvbS9qdXN0aW5ncmVlbmJlcmcpLgoKYGBgCi4K4pSc4pSA4pSAIGJ1aWxk
ICAgICAgICAgICAgICAgICAgICAjIEFsbCBidWlsZC1yZWxhdGVkIGNvZGUK
4pSc4pSA4pSAIHB1YmxpYyAgICAgICAgICAgICAgICAgICAjIFN0YXRpYyBw
dWJsaWMgYXNzZXRzIChub3QgaW1wb3J0ZWQgYW55d2hlcmUgaW4gc291cmNl
IGNvZGUpCuKUnOKUgOKUgCBzZXJ2ZXIgICAgICAgICAgICAgICAgICAgIyBF
eHByZXNzIGFwcGxpY2F0aW9uIHRoYXQgcHJvdmlkZXMgd2VicGFjayBtaWRk
bGV3YXJlCuKUgiAgIOKUlOKUgOKUgCBtYWluLmpzICAgICAgICAgICAgICAj
IFNlcnZlciBhcHBsaWNhdGlvbiBlbnRyeSBwb2ludArilJzilIDilIAgc3Jj
ICAgICAgICAgICAgICAgICAgICAgICMgQXBwbGljYXRpb24gc291cmNlIGNv
ZGUK4pSCICAg4pSc4pSA4pSAIGluZGV4Lmh0bWwgICAgICAgICAgICMgTWFp
biBIVE1MIHBhZ2UgY29udGFpbmVyIGZvciBhcHAK4pSCICAg4pSc4pSA4pSA
IG1haW4uanMgICAgICAgICAgICAgICMgQXBwbGljYXRpb24gYm9vdHN0cmFw
IGFuZCByZW5kZXJpbmcK4pSCICAg4pSc4pSA4pSAIG5vcm1hbGl6ZS5qcyAg
ICAgICAgICMgQnJvd3NlciBub3JtYWxpemF0aW9uIGFuZCBwb2x5ZmlsbHMK
4pSCICAg4pSc4pSA4pSAIGNvbXBvbmVudHMgICAgICAgICAgICMgR2xvYmFs
IFJldXNhYmxlIENvbXBvbmVudHMK4pSCICAg4pSc4pSA4pSAIGNvbnRhaW5l
cnMgICAgICAgICAgICMgR2xvYmFsIFJldXNhYmxlIENvbnRhaW5lciBDb21w
b25lbnRzCuKUgiAgIOKUnOKUgOKUgCBsYXlvdXRzICAgICAgICAgICAgICAj
IENvbXBvbmVudHMgdGhhdCBkaWN0YXRlIG1ham9yIHBhZ2Ugc3RydWN0dXJl
CuKUgiAgIOKUgiAgIOKUlOKUgOKUgCBQYWdlTGF5b3V0ICAgICAgICMgR2xv
YmFsIGFwcGxpY2F0aW9uIGxheW91dCBpbiB3aGljaCB0byByZW5kZXIgcm91
dGVzCuKUgiAgIOKUnOKUgOKUgCByb3V0ZXMgICAgICAgICAgICAgICAjIE1h
aW4gcm91dGUgZGVmaW5pdGlvbnMgYW5kIGFzeW5jIHNwbGl0IHBvaW50cwri
lIIgICDilIIgICDilJzilIDilIAgaW5kZXguanMgICAgICAgICAjIEJvb3Rz
dHJhcCBtYWluIGFwcGxpY2F0aW9uIHJvdXRlcyB3aXRoIHN0b3JlCuKUgiAg
IOKUgiAgIOKUnOKUgOKUgCBIb21lICAgICAgICAgICAgICMgRnJhY3RhbCBy
b3V0ZQrilIIgICDilIIgICDilIIgICDilJzilIDilIAgaW5kZXguanMgICAg
ICMgUm91dGUgZGVmaW5pdGlvbnMgYW5kIGFzeW5jIHNwbGl0IHBvaW50cwri
lIIgICDilIIgICDilIIgICDilJzilIDilIAgYXNzZXRzICAgICAgICMgQXNz
ZXRzIHJlcXVpcmVkIHRvIHJlbmRlciBjb21wb25lbnRzCuKUgiAgIOKUgiAg
IOKUgiAgIOKUnOKUgOKUgCBjb21wb25lbnRzICAgIyBQcmVzZW50YXRpb25h
bCBSZWFjdCBDb21wb25lbnRzCuKUgiAgIOKUgiAgIOKUgiAgIOKUlOKUgOKU
gCByb3V0ZXMgKiogICAgIyBGcmFjdGFsIHN1Yi1yb3V0ZXMgKCoqIG9wdGlv
bmFsKQrilIIgICDilIIgICDilJTilIDilIAgQ291bnRlciAgICAgICAgICAj
IEZyYWN0YWwgcm91dGUK4pSCICAg4pSCICAgICAgIOKUnOKUgOKUgCBpbmRl
eC5qcyAgICAgIyBDb3VudGVyIHJvdXRlIGRlZmluaXRpb24K4pSCICAg4pSC
ICAgICAgIOKUnOKUgOKUgCBjb250YWluZXIgICAgIyBDb25uZWN0IGNvbXBv
bmVudHMgdG8gYWN0aW9ucyBhbmQgc3RvcmUK4pSCICAg4pSCICAgICAgIOKU
nOKUgOKUgCBtb2R1bGVzICAgICAgIyBDb2xsZWN0aW9ucyBvZiByZWR1Y2Vy
cy9jb25zdGFudHMvYWN0aW9ucwrilIIgICDilIIgICAgICAg4pSU4pSA4pSA
IHJvdXRlcyAqKiAgICAjIEZyYWN0YWwgc3ViLXJvdXRlcyAoKiogb3B0aW9u
YWwpCuKUgiAgIOKUnOKUgOKUgCBzdG9yZSAgICAgICAgICAgICAgICAjIFJl
ZHV4LXNwZWNpZmljIHBpZWNlcwrilIIgICDilIIgICDilJzilIDilIAgY3Jl
YXRlU3RvcmUuanMgICAjIENyZWF0ZSBhbmQgaW5zdHJ1bWVudCByZWR1eCBz
dG9yZQrilIIgICDilIIgICDilJTilIDilIAgcmVkdWNlcnMuanMgICAgICAj
IFJlZHVjZXIgcmVnaXN0cnkgYW5kIGluamVjdGlvbgrilIIgICDilJTilIDi
lIAgc3R5bGVzICAgICAgICAgICAgICAgIyBBcHBsaWNhdGlvbi13aWRlIHN0
eWxlcyAoZ2VuZXJhbGx5IHNldHRpbmdzKQrilJTilIDilIAgdGVzdHMgICAg
ICAgICAgICAgICAgICAgICMgVW5pdCB0ZXN0cwpgYGAKCiMjIExpdmUgRGV2
ZWxvcG1lbnQKCiMjIyBIb3QgUmVsb2FkaW5nCgpIb3QgcmVsb2FkaW5nIGlz
IGVuYWJsZWQgYnkgZGVmYXVsdCB3aGVuIHRoZSBhcHBsaWNhdGlvbiBpcyBy
dW5uaW5nIGluIGRldmVsb3BtZW50IG1vZGUgKGB5YXJuIHN0YXJ0YCkuIFRo
aXMgZmVhdHVyZSBpcyBpbXBsZW1lbnRlZCB3aXRoIHdlYnBhY2sncyBbSG90
IE1vZHVsZSBSZXBsYWNlbWVudF0oaHR0cHM6Ly93ZWJwYWNrLmdpdGh1Yi5p
by9kb2NzL2hvdC1tb2R1bGUtcmVwbGFjZW1lbnQuaHRtbCkgY2FwYWJpbGl0
aWVzLCB3aGVyZSBjb2RlIHVwZGF0ZXMgY2FuIGJlIGluamVjdGVkIHRvIHRo
ZSBhcHBsaWNhdGlvbiB3aGlsZSBpdCdzIHJ1bm5pbmcsIG5vIGZ1bGwgcmVs
b2FkIHJlcXVpcmVkLiBIZXJlJ3MgaG93IGl0IHdvcmtzOgoKKiBGb3IgKipK
YXZhU2NyaXB0KiogbW9kdWxlcywgYSBjb2RlIGNoYW5nZSB3aWxsIHRyaWdn
ZXIgdGhlIGFwcGxpY2F0aW9uIHRvIHJlLXJlbmRlciBmcm9tIHRoZSB0b3Ag
b2YgdGhlIHRyZWUuICoqR2xvYmFsIHN0YXRlIGlzIHByZXNlcnZlZCAoaS5l
LiByZWR1eCksIGJ1dCBhbnkgbG9jYWwgY29tcG9uZW50IHN0YXRlIGlzIHJl
c2V0KiouIFRoaXMgZGlmZmVycyBmcm9tIFJlYWN0IEhvdCBMb2FkZXIsIGJ1
dCB3ZSd2ZSBmb3VuZCB0aGF0IHBlcmZvcm1pbmcgYSBmdWxsIHJlLXJlbmRl
ciBoZWxwcyBhdm9pZCBzdWJ0bGUgYnVncyBjYXVzZWQgYnkgUkhMIHBhdGNo
aW5nLgoKKiBGb3IgKipTYXNzKiosIGFueSBjaGFuZ2Ugd2lsbCB1cGRhdGUg
dGhlIHN0eWxlcyBpbiByZWFsdGltZSwgbm8gYWRkaXRpb25hbCBjb25maWd1
cmF0aW9uIG9yIHJlbG9hZCBuZWVkZWQuCgojIyMgUmVkdXggRGV2VG9vbHMK
CioqV2UgcmVjb21tZW5kIHVzaW5nIHRoZSBbUmVkdXggRGV2VG9vbHMgQ2hy
b21lIEV4dGVuc2lvbl0oaHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJz
dG9yZS9kZXRhaWwvcmVkdXgtZGV2dG9vbHMvbG1oa3BtYmVrY3Bta25rbGlv
ZWliZmtwbW1maWJsamQpLioqClVzaW5nIHRoZSBjaHJvbWUgZXh0ZW5zaW9u
IGFsbG93cyB5b3VyIG1vbml0b3JzIHRvIHJ1biBvbiBhIHNlcGFyYXRlIHRo
cmVhZCBhbmQgYWZmb3JkcyBiZXR0ZXIgcGVyZm9ybWFuY2UgYW5kIGZ1bmN0
aW9uYWxpdHkuIEl0IGNvbWVzIHdpdGggc2V2ZXJhbCBvZiB0aGUgbW9zdCBw
b3B1bGFyIG1vbml0b3JzLCBpcyBlYXN5IHRvIGNvbmZpZ3VyZSwgZmlsdGVy
cyBhY3Rpb25zLCBhbmQgZG9lc24ndCByZXF1aXJlIGluc3RhbGxpbmcgYW55
IHBhY2thZ2VzIGluIHlvdXIgcHJvamVjdC4KCkhvd2V2ZXIsIGl0J3MgZWFz
eSB0byBidW5kbGUgdGhlc2UgZGV2ZWxvcGVyIHRvb2xzIGxvY2FsbHkgc2hv
dWxkIHlvdSBjaG9vc2UgdG8gZG8gc28uIEZpcnN0LCBncmFiIHRoZSBwYWNr
YWdlcyBmcm9tIG5wbToKCmBgYGJhc2gKeWFybiBhZGQgLS1kZXYgcmVkdXgt
ZGV2dG9vbHMgcmVkdXgtZGV2dG9vbHMtbG9nLW1vbml0b3IgcmVkdXgtZGV2
dG9vbHMtZG9jay1tb25pdG9yCmBgYAoKVGhlbiBmb2xsb3cgdGhlIFttYW51
YWwgaW50ZWdyYXRpb24gd2Fsa3Rocm91Z2hdKGh0dHBzOi8vZ2l0aHViLmNv
bS9nYWVhcm9uL3JlZHV4LWRldnRvb2xzL2Jsb2IvbWFzdGVyL2RvY3MvV2Fs
a3Rocm91Z2gubWQpLgoKIyMgUm91dGluZwpXZSB1c2UgYHJlYWN0LXJvdXRl
cmAgW3JvdXRlIGRlZmluaXRpb25zXShodHRwczovL2dpdGh1Yi5jb20vUmVh
Y3RUcmFpbmluZy9yZWFjdC1yb3V0ZXIvYmxvYi92My9kb2NzL0FQSS5tZCNw
bGFpbnJvdXRlKSAoYDxyb3V0ZT4vaW5kZXguanNgKSB0byBkZWZpbmUgdW5p
dHMgb2YgbG9naWMgd2l0aGluIG91ciBhcHBsaWNhdGlvbi4gU2VlIHRoZSBb
cHJvamVjdCBzdHJ1Y3R1cmVdKCNwcm9qZWN0LXN0cnVjdHVyZSkgc2VjdGlv
biBmb3IgbW9yZSBpbmZvcm1hdGlvbi4KCiMjIFRlc3RpbmcKVG8gYWRkIGEg
dW5pdCB0ZXN0LCBjcmVhdGUgYSBgLnNwZWMuanNgIGZpbGUgYW55d2hlcmUg
aW5zaWRlIG9mIGAuL3Rlc3RzYC4gS2FybWEgYW5kIHdlYnBhY2sgd2lsbCBh
dXRvbWF0aWNhbGx5IGZpbmQgdGhlc2UgZmlsZXMsIGFuZCBNb2NoYSBhbmQg
Q2hhaSB3aWxsIGJlIGF2YWlsYWJsZSB3aXRoaW4geW91ciB0ZXN0IHdpdGhv
dXQgdGhlIG5lZWQgdG8gaW1wb3J0IHRoZW0uIEhlcmUgYXJlIGEgZmV3IGlt
cG9ydGFudCBwbHVnaW5zIGFuZCBwYWNrYWdlcyBhdmFpbGFibGUgdG8geW91
IGR1cmluZyB0ZXN0aW5nOgoKIyMjIGRpcnR5LWNoYWkKClNvbWUgb2YgdGhl
IGFzc2VydGlvbnMgYXZhaWxhYmxlIGZyb20gW2NoYWldKGNoYWlqcy5jb20p
IHVzZSBbbWFnaWNhbCBnZXR0ZXJzXShodHRwOi8vY2hhaWpzLmNvbS9hcGkv
YmRkLyNtZXRob2RfdHJ1ZSkuIFRoZXNlIGFyZSBwcm9ibGVtYXRpYyBmb3Ig
YSBmZXcgcmVhc29uczoKCjEpIElmIHlvdSBtaXN0eXBlIGEgcHJvcGVydHkg
bmFtZSAoZS5nLiBgZXhwZWN0KGZhbHNlKS50by5iZS50cnVgKSB0aGVuIHRo
ZSBleHByZXNzaW9uIGV2YWx1YXRlcyB0byB1bmRlZmluZWQsIHRoZSBtYWdp
Y2FsIGdldHRlciBvbiB0aGUgYHRydWVgIGlzIG5ldmVyIHJ1biwgYW5kIHNv
IHlvdXIgdGVzdCBzaWxlbnRseSBwYXNzZXMuCjIpIEJ5IGRlZmF1bHQsIGxp
bnRlcnMgZG9uJ3QgdW5kZXJzdGFuZCB0aGVtIGFuZCB0aGVyZWZvcmUgbWFy
ayB0aGVtIGFzIHVudXNlZCBleHByZXNzaW9ucywgd2hpY2ggY2FuIGJlIGFu
bm95aW5nLgoKW0RpcnR5IENoYWldKGh0dHBzOi8vZ2l0aHViLmNvbS9wcm9k
YXRha2V5L2RpcnR5LWNoYWkpIGZpeGVzIHRoaXMgYnkgY29udmVydGluZyB0
aGVzZSBnZXR0ZXJzIGludG8gY2FsbGFibGUgZnVuY3Rpb25zLiBUaGlzIHdh
eSwgaWYgbWlzdHlwZSBhbiBhc3NlcnRpb24sIG91ciBhdHRlbXB0IHRvIGlu
dm9rZSBpdCB3aWxsIHRocm93IGR1ZSB0byB0aGUgcHJvcGVydHkgYmVpbmcg
dW5kZWZpbmVkLgoKYGBganMKLy8gVGhpcyBzaWxlbnRseSBwYXNzZXMgYmVj
YXVzZSB0aGUgZ2V0dGVyIG9uIGB0cnVlYCBpcyBuZXZlciBpbnZva2VkIQpp
dCgnc2hvdWxkIGJlIHRydWUnLCAoKSA9PiB7CiAgZXhwZWN0KGZhbHNlKS50
by5iZS50cnUgLy8gZXZhbHV0ZXMgdG8gdW5kZWZpbmVkIDooCn0pCgovLyBN
dWNoIGJldHRlciEgT3VyIGFzc2VydGlvbiBpcyBpbnZhbGlkLCBzbyBpdCB0
aHJvd3MgcmF0aGVyIHRoYW4gaW1wbGljaXRseSBwYXNzaW5nLgppdCgnc2hv
dWxkIGJlIHRydWUnLCAoKSA9PiB7CiAgZXhwZWN0KGZhbHNlKS50by5iZS50
cnUoKSAvLyBgdHJ1YCBpcyBub3QgZGVmaW5lZCEKfSkKYGBgCgojIyBCdWls
ZGluZyBmb3IgUHJvZHVjdGlvbgoKIyMgRGVwbG95bWVudAoKT3V0IG9mIHRo
ZSBib3gsIHRoaXMgc3RhcnRlciBraXQgaXMgZGVwbG95YWJsZSBieSBzZXJ2
aW5nIHRoZSBgLi9kaXN0YCBmb2xkZXIgZ2VuZXJhdGVkIGJ5IGB5YXJuIGJ1
aWxkYC4gVGhpcyBwcm9qZWN0IGRvZXMgbm90IGNvbmNlcm4gaXRzZWxmIHdp
dGggdGhlIGRldGFpbHMgb2Ygc2VydmVyLXNpZGUgcmVuZGVyaW5nIG9yIEFQ
SSBzdHJ1Y3R1cmUsIHNpbmNlIHRoYXQgZGVtYW5kcyBhIG1vcmUgb3Bpbmlv
bmF0ZWQgc3RydWN0dXJlIHRoYXQgbWFrZXMgaXQgZGlmZmljdWx0IHRvIGV4
dGVuZCB0aGUgc3RhcnRlciBraXQuIFRoZSBzaW1wbGVzdCBkZXBsb3ltZW50
IHN0cmF0ZWd5IGlzIGEgW3N0YXRpYyBkZXBsb3ltZW50XSgjc3RhdGljLWRl
cGxveW1lbnRzKS4KCiMjIyBTdGF0aWMgRGVwbG95bWVudHMKClNlcnZlIHRo
ZSBhcHBsaWNhdGlvbiB3aXRoIGEgd2ViIHNlcnZlciBzdWNoIGFzIG5naW54
IGJ5IHBvaW50aW5nIGl0IGF0IHlvdXIgYC4vZGlzdGAgZm9sZGVyLiBNYWtl
IHN1cmUgdG8gZGlyZWN0IGluY29taW5nIHJvdXRlIHJlcXVlc3RzIHRvIHRo
ZSByb290IGAuL2Rpc3QvaW5kZXguaHRtbGAgZmlsZSBzbyB0aGF0IHRoZSBj
bGllbnQgYXBwbGljYXRpb24gd2lsbCBiZSBsb2FkZWQ7IHJlYWN0LXJvdXRl
ciB3aWxsIHRha2UgY2FyZSBvZiB0aGUgcmVzdC4gSWYgeW91IGFyZSB1bnN1
cmUgb2YgaG93IHRvIGRvIHRoaXMsIHlvdSBtaWdodCBmaW5kIFt0aGlzIGRv
Y3VtZW50YXRpb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3JlYWN0
LXJvdXRlci9ibG9iL21hc3Rlci9kb2NzL2d1aWRlcy9IaXN0b3JpZXMubWQj
Y29uZmlndXJpbmcteW91ci1zZXJ2ZXIpIGhlbHBmdWwuIFRoZSBFeHByZXNz
IHNlcnZlciB0aGF0IGNvbWVzIHdpdGggdGhlIHN0YXJ0ZXIga2l0IGlzIGFi
bGUgdG8gYmUgZXh0ZW5kZWQgdG8gc2VydmUgYXMgYW4gQVBJIGFuZCBtb3Jl
LCBidXQgaXMgbm90IHJlcXVpcmVkIGZvciBhIHN0YXRpYyBkZXBsb3ltZW50
LgoKIyMgVGhhbmsgWW91CgpUaGlzIHByb2plY3Qgd291bGRuJ3QgYmUgcG9z
c2libGUgd2l0aG91dCBoZWxwIGZyb20gdGhlIGNvbW11bml0eSwgc28gSSdk
IGxpa2UgdG8gaGlnaGxpZ2h0IHNvbWUgb2YgaXRzIGJpZ2dlc3QgY29udHJp
YnV0b3JzLiBUaGFuayB5b3UgYWxsIGZvciB5b3VyIGhhcmQgd29yaywgeW91
J3ZlIG1hZGUgbXkgbGlmZSBhIGxvdCBlYXNpZXIgYW5kIHRhdWdodCBtZSBh
IGxvdCBpbiB0aGUgcHJvY2Vzcy4KCiogW0p1c3RpbiBHcmVlbmJlcmddKGh0
dHBzOi8vZ2l0aHViLmNvbS9qdXN0aW5ncmVlbmJlcmcpIC0gRm9yIGFsbCBv
ZiB5b3VyIFBSJ3MsIGdldHRpbmcgdXMgdG8gQmFiZWwgNiwgYW5kIGNvbnN0
YW50IHdvcmsgaW1wcm92aW5nIG91ciBwYXR0ZXJucy4KKiBbUm9tYW4gUGVh
cmFoXShodHRwczovL2dpdGh1Yi5jb20vbmV2ZXJmb3gpIC0gRm9yIHlvdXIg
YnVnIHJlcG9ydHMsIGhlbHAgaW4gdHJpYWdpbmcgaXNzdWVzLCBhbmQgUFIg
Y29udHJpYnV0aW9ucy4KKiBbU3BlbmNlciBEaXhvbl0oaHR0cHM6Ly9naXRo
dWIuY29tL1NwZW5jZXJDRGl4b24pIC0gRm9yIHlvdXIgY3JlYXRpb24gb2Yg
W3JlZHV4LWNsaV0oaHR0cHM6Ly9naXRodWIuY29tL1NwZW5jZXJDRGl4b24v
cmVkdXgtY2xpKS4KKiBbSm9uYXMgTWF0c2VyXShodHRwczovL2dpdGh1Yi5j
b20vbXRzcikgLSBGb3IgeW91ciBoZWxwIGluIHRyaWFnaW5nIGlzc3VlcyBh
bmQgdW5lbmRpbmcgc3VwcG9ydCBpbiBvdXIgR2l0dGVyIGNoYW5uZWwuCgpB
bmQgdG8gZXZlcnlvbmUgZWxzZSB3aG8gaGFzIGNvbnRyaWJ1dGVkLCBldmVu
IGlmIHlvdSBhcmUgbm90IGxpc3RlZCBoZXJlIHlvdXIgd29yayBpcyBhcHBy
ZWNpYXRlZC4K
",,"c3VkbzogZmFsc2UKbGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczoKICAtICI1
IgogIC0gIjYiCgpjYWNoZToKICB5YXJuOiB0cnVlCiAgZGlyZWN0b3JpZXM6
CiAgICAtIG5vZGVfbW9kdWxlcwoKc2NyaXB0OgogIC0geWFybiBsaW50CiAg
LSB5YXJuIHRlc3QKICAtIHlhcm4gYnVpbGQKCmFmdGVyX3N1Y2Nlc3M6CiAg
LSB5YXJuIGNvZGVjb3YK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'Cachet',26730195,b'\xf0\x9f\x93\x9b An open source status page system for everyone.',b'PHP',184,10432,,10432,False,b'https://api.github.com/repos/CachetHQ/Cachet/forks',"PHAgYWxpZ249ImNlbnRlciI+PGltZyBzcmM9Imh0dHBzOi8vZGVtby5jYWNo
ZXRocS5pby9pbWcvY2FjaGV0LWxvZ28uc3ZnIiB3aWR0aD0iNTAlIj48L3A+
Cgo8cCBhbGlnbj0iY2VudGVyIj4KPGEgaHJlZj0iaHR0cHM6Ly9zdHlsZWNp
LmlvL3JlcG9zLzI2NzMwMTk1LyI+PGltZyBzcmM9Imh0dHBzOi8vc3R5bGVj
aS5pby9yZXBvcy8yNjczMDE5NS9zaGllbGQiIGFsdD0iU3R5bGVDSSI+PC9h
Pgo8YSBocmVmPSJodHRwczovL3RyYXZpcy1jaS5vcmcvQ2FjaGV0SFEvQ2Fj
aGV0Ij48YSBocmVmPSJodHRwczovL29wZW5jb2xsZWN0aXZlLmNvbS9DYWNo
ZXQiIGFsdD0iRmluYW5jaWFsIENvbnRyaWJ1dG9ycyBvbiBPcGVuIENvbGxl
Y3RpdmUiPjxpbWcgc3JjPSJodHRwczovL29wZW5jb2xsZWN0aXZlLmNvbS9D
YWNoZXQvYWxsL2JhZGdlLnN2Zz9sYWJlbD1maW5hbmNpYWwrY29udHJpYnV0
b3JzIiAvPjwvYT4gPGltZyBzcmM9Imh0dHBzOi8vaW1nLnNoaWVsZHMuaW8v
dHJhdmlzL0NhY2hldEhRL0NhY2hldC8yLjQuc3ZnP3N0eWxlPWZsYXQtc3F1
YXJlIiBhbHQ9IkJ1aWxkIFN0YXR1cyI+PC9hPgo8YSBocmVmPSJMSUNFTlNF
Ij48aW1nIHNyYz0iaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS9saWNl
bnNlLUJTRDMtYnJpZ2h0Z3JlZW4uc3ZnP3N0eWxlPWZsYXQtc3F1YXJlIiBh
bHQ9IkxpY2Vuc2UiPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly90cmFuc2xhdGUu
Y2FjaGV0aHEuaW8vcHJvamVjdC9jYWNoZXQiPjxpbWcgc3JjPSJodHRwczov
L2QzMjJjcXQ1ODRibzRvLmNsb3VkZnJvbnQubmV0L2NhY2hldC9sb2NhbGl6
ZWQuc3ZnIiBhbHQ9IkxvY2FsaXNhdGlvbiI+PC9hPgo8YSBocmVmPSJodHRw
czovL2dpdGh1Yi5jb20vQ2FjaGV0SFEvQ2FjaGV0L3JlbGVhc2VzIj48aW1n
IHNyYz0iaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9naXRodWIvcmVsZWFzZS9j
YWNoZXRocS9jYWNoZXQuc3ZnP3N0eWxlPWZsYXQtc3F1YXJlIiBhbHQ9Ikxh
dGVzdCBTdGFibGUgVmVyc2lvbiI+PC9hPgo8L3A+CgpDYWNoZXQgaXMgYSBi
ZWF1dGlmdWwgYW5kIHBvd2VyZnVsIG9wZW4gc291cmNlIHN0YXR1cyBwYWdl
IHN5c3RlbS4KCiMjIE92ZXJ2aWV3CgotIExpc3QgeW91ciBzZXJ2aWNlIGNv
bXBvbmVudHMKLSBSZXBvcnQgaW5jaWRlbnRzCi0gQ3VzdG9taXNlIHRoZSBs
b29rIG9mIHlvdXIgc3RhdHVzIHBhZ2UKLSBNYXJrZG93biBzdXBwb3J0IGZv
ciBpbmNpZGVudCBtZXNzYWdlcwotIEEgcG93ZXJmdWwgSlNPTiBBUEkKLSBN
ZXRyaWNzCi0gTXVsdGktbGluZ3VhbAotIFN1YnNjcmliZXIgbm90aWZpY2F0
aW9ucyB2aWEgZW1haWwKLSBUd28gZmFjdG9yIGF1dGhlbnRpY2F0aW9uCgoj
IyBDb21tdW5pdHkKCllvdSBjYW4gbm93IFtqb2luIG91ciBTbGFjayBjb21t
dW5pdHkhXShodHRwOi8vY2FjaGV0aHEtc2xhY2suaGVyb2t1YXBwLmNvbSkK
CiMjIFJlcXVpcmVtZW50cwoKLSBQSFAgNy4xLjMg4oCTIDcuMwotIEhUVFAg
c2VydmVyIHdpdGggUEhQIHN1cHBvcnQgKGUuZy46IEFwYWNoZSwgTmdpbngs
IENhZGR5KQotIFtDb21wb3Nlcl0oaHR0cHM6Ly9nZXRjb21wb3Nlci5vcmcp
Ci0gQSBzdXBwb3J0ZWQgZGF0YWJhc2U6IE15U1FMLCBQb3N0Z3JlU1FMIG9y
IFNRTGl0ZQoKIyMgSW5zdGFsbGF0aW9uLCBVcGdyYWRlcyBhbmQgRG9jdW1l
bnRhdGlvbgoKWW91IGNhbiBmaW5kIGRvY3VtZW50YXRpb24gYXQgW2h0dHBz
Oi8vZG9jcy5jYWNoZXRocS5pb10oaHR0cHM6Ly9kb2NzLmNhY2hldGhxLmlv
KS4KCkhlcmUgYXJlIHNvbWUgdXNlZnVsIHF1aWNrIGxpbmtzOgoKLSBbSW5z
dGFsbGluZyBDYWNoZXRdKGh0dHBzOi8vZG9jcy5jYWNoZXRocS5pby9kb2Nz
L2luc3RhbGxpbmctY2FjaGV0KQotIFtHZXR0aW5nIHN0YXJ0ZWQgd2l0aCBE
b2NrZXJdKGh0dHBzOi8vZG9jcy5jYWNoZXRocS5pby9kb2NzL2dldC1zdGFy
dGVkLXdpdGgtZG9ja2VyKQotIFtJbnN0YWxsaW5nIENhY2hldCBvbiBXaW5k
b3dzXShodHRwczovL2RvY3MuY2FjaGV0aHEuaW8vZG9jcy9pbnN0YWxsaW5n
LWNhY2hldC1vbi13aW5kb3dzKQoKIyMjIERlbW8KClRvIHRlc3Qgb3V0IHRo
ZSBkZW1vLCB5b3UgY2FuIGxvZyBpbiB0byB0aGUgW0Rhc2hib2FyZF0oaHR0
cHM6Ly9kZXYuY2FjaGV0aHEuaW8vZGFzaGJvYXJkKSB3aXRoIHRoZSBmb2xs
b3dpbmcgY3JlZGVudGlhbHM6CgotICoqVXNlcm5hbWU6KiogYHRlc3RgIG9y
IGB0ZXN0QGV4YW1wbGUuY29tYAotICoqUGFzc3dvcmQ6KiogYHRlc3QxMjNg
Cgo+IFRoZSBkZW1vIHJlc2V0cyBldmVyeSAzMCBtaW51dGVzLgoKIyMgVHJh
bnNsYXRlIENhY2hldAoKSWYgeW91J2QgbGlrZSB0byBjb250cmlidXRlIHRy
YW5zbGF0aW9ucywgcGxlYXNlIGNoZWNrIG91dCBvdXIgW0Nyb3dkaW4gcHJv
amVjdF0oaHR0cHM6Ly9jcm93ZGluLmNvbS9wcm9qZWN0L2NhY2hldCkuCgoj
IyBTZWN1cml0eSBWdWxuZXJhYmlsaXRpZXMKCklmIHlvdSBkaXNjb3ZlciBh
IHNlY3VyaXR5IHZ1bG5lcmFiaWxpdHkgd2l0aGluIENhY2hldCwgcGxlYXNl
IHNlbmQgYW4gZS1tYWlsIHRvIFtzdXBwb3J0QGNhY2hldGhxLmlvXShtYWls
dG86c3VwcG9ydEBjYWNoZXRocS5pbz9DYWNoZXQlMjBTZWN1cml0eSUyMFZ1
bG5lcmFiaWxpdHkpLiBBbGwgc2VjdXJpdHkgdnVsbmVyYWJpbGl0aWVzIGFy
ZSByZXZpZXdlZCBvbiBhIGNhc2UtYnktY2FzZSBiYXNpcy4KCiMjIExpbWl0
ZWQgU3VwcG9ydCBDb250YWN0CgpXZSBtYXkgYmUgYWJsZSB0byByZXNvbHZl
ICoqc3VwcG9ydCBxdWVyaWVzKiogdmlhIGVtYWlsLiBQbGVhc2Ugc2VuZCBh
biBlbWFpbCB0byBbc3VwcG9ydEBjYWNoZXRocS5pb10obWFpbHRvOnN1cHBv
cnRAY2FjaGV0aHEuaW8/Q2FjaGV0JTIwU3VwcG9ydCkuIFBsZWFzZSBjaGVj
ayB0aGUgR2l0SHViIFtpc3N1ZSB0cmFja2VyXShodHRwczovL2dpdGh1Yi5j
b20vQ2FjaGV0SFEvQ2FjaGV0L2lzc3VlcykgZmlyc3QgYmVmb3JlIGVtYWls
aW5nLgoKIyMgUHJvZmVzc2lvbmFsIEluc3RhbGxhdGlvbiBTZXJ2aWNlCgpB
IHByb2Zlc3Npb25hbCAqKmluc3RhbGxhdGlvbiBzZXJ2aWNlKiogaXMgb2Zm
ZXJlZCBieSBBbHQgVGhyZWUgU2VydmljZXMgTGltaXRlZC4gVG8gZmluZCBv
dXQgbW9yZSwgY29udGFjdCBbc3VwcG9ydEBhbHQtdGhyZWUuY29tXShtYWls
dG86c3VwcG9ydEBhbHQtdGhyZWUuY29tP0NhY2hldCUyMEluc3RhbGxhdGlv
bikuICoqRG8gbm90IGNvbnRhY3QgdGhpcyBlbWFpbCBhZGRyZXNzIGZvciBn
ZW5lcmFsIHN1cHBvcnQuKioKCiMjIFNwb25zb3JzaGlwCgpZb3UgY2FuIHNw
b25zb3IgQ2FjaGV0IGF0IG91ciBbUGF0cmVvbiBwYWdlXShodHRwczovL3Bh
dHJlb24uY29tL2picm9va3N1aykuCgojIyBDb250cmlidXRvcnMKCiMjIyBD
b2RlIENvbnRyaWJ1dG9ycwoKVGhpcyBwcm9qZWN0IGV4aXN0cyB0aGFua3Mg
dG8gYWxsIHRoZSBwZW9wbGUgd2hvIGNvbnRyaWJ1dGUuIFtbQ29udHJpYnV0
ZV0oQ09OVFJJQlVUSU5HLm1kKV0uCjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHVi
LmNvbS9DYWNoZXRIUS9DYWNoZXQvZ3JhcGhzL2NvbnRyaWJ1dG9ycyI+PGlt
ZyBzcmM9Imh0dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL0NhY2hldC9jb250
cmlidXRvcnMuc3ZnP3dpZHRoPTg5MCZidXR0b249ZmFsc2UiIC8+PC9hPgoK
IyMjIEZpbmFuY2lhbCBDb250cmlidXRvcnMKCkJlY29tZSBhIGZpbmFuY2lh
bCBjb250cmlidXRvciBhbmQgaGVscCB1cyBzdXN0YWluIG91ciBjb21tdW5p
dHkuIFtbQ29udHJpYnV0ZV0oaHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20v
Q2FjaGV0L2NvbnRyaWJ1dGUpXQoKIyMjIyBJbmRpdmlkdWFscwoKPGEgaHJl
Zj0iaHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20vQ2FjaGV0Ij48aW1nIHNy
Yz0iaHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20vQ2FjaGV0L2luZGl2aWR1
YWxzLnN2Zz93aWR0aD04OTAiPjwvYT4KCiMjIyMgT3JnYW5pemF0aW9ucwoK
U3VwcG9ydCB0aGlzIHByb2plY3Qgd2l0aCB5b3VyIG9yZ2FuaXphdGlvbi4g
WW91ciBsb2dvIHdpbGwgc2hvdyB1cCBoZXJlIHdpdGggYSBsaW5rIHRvIHlv
dXIgd2Vic2l0ZS4gW1tDb250cmlidXRlXShodHRwczovL29wZW5jb2xsZWN0
aXZlLmNvbS9DYWNoZXQvY29udHJpYnV0ZSldCgo8YSBocmVmPSJodHRwczov
L29wZW5jb2xsZWN0aXZlLmNvbS9DYWNoZXQvb3JnYW5pemF0aW9uLzAvd2Vi
c2l0ZSI+PGltZyBzcmM9Imh0dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL0Nh
Y2hldC9vcmdhbml6YXRpb24vMC9hdmF0YXIuc3ZnIj48L2E+CjxhIGhyZWY9
Imh0dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL0NhY2hldC9vcmdhbml6YXRp
b24vMS93ZWJzaXRlIj48aW1nIHNyYz0iaHR0cHM6Ly9vcGVuY29sbGVjdGl2
ZS5jb20vQ2FjaGV0L29yZ2FuaXphdGlvbi8xL2F2YXRhci5zdmciPjwvYT4K
PGEgaHJlZj0iaHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20vQ2FjaGV0L29y
Z2FuaXphdGlvbi8yL3dlYnNpdGUiPjxpbWcgc3JjPSJodHRwczovL29wZW5j
b2xsZWN0aXZlLmNvbS9DYWNoZXQvb3JnYW5pemF0aW9uLzIvYXZhdGFyLnN2
ZyI+PC9hPgo8YSBocmVmPSJodHRwczovL29wZW5jb2xsZWN0aXZlLmNvbS9D
YWNoZXQvb3JnYW5pemF0aW9uLzMvd2Vic2l0ZSI+PGltZyBzcmM9Imh0dHBz
Oi8vb3BlbmNvbGxlY3RpdmUuY29tL0NhY2hldC9vcmdhbml6YXRpb24vMy9h
dmF0YXIuc3ZnIj48L2E+CjxhIGhyZWY9Imh0dHBzOi8vb3BlbmNvbGxlY3Rp
dmUuY29tL0NhY2hldC9vcmdhbml6YXRpb24vNC93ZWJzaXRlIj48aW1nIHNy
Yz0iaHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20vQ2FjaGV0L29yZ2FuaXph
dGlvbi80L2F2YXRhci5zdmciPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly9vcGVu
Y29sbGVjdGl2ZS5jb20vQ2FjaGV0L29yZ2FuaXphdGlvbi81L3dlYnNpdGUi
PjxpbWcgc3JjPSJodHRwczovL29wZW5jb2xsZWN0aXZlLmNvbS9DYWNoZXQv
b3JnYW5pemF0aW9uLzUvYXZhdGFyLnN2ZyI+PC9hPgo8YSBocmVmPSJodHRw
czovL29wZW5jb2xsZWN0aXZlLmNvbS9DYWNoZXQvb3JnYW5pemF0aW9uLzYv
d2Vic2l0ZSI+PGltZyBzcmM9Imh0dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29t
L0NhY2hldC9vcmdhbml6YXRpb24vNi9hdmF0YXIuc3ZnIj48L2E+CjxhIGhy
ZWY9Imh0dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL0NhY2hldC9vcmdhbml6
YXRpb24vNy93ZWJzaXRlIj48aW1nIHNyYz0iaHR0cHM6Ly9vcGVuY29sbGVj
dGl2ZS5jb20vQ2FjaGV0L29yZ2FuaXphdGlvbi83L2F2YXRhci5zdmciPjwv
YT4KPGEgaHJlZj0iaHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20vQ2FjaGV0
L29yZ2FuaXphdGlvbi84L3dlYnNpdGUiPjxpbWcgc3JjPSJodHRwczovL29w
ZW5jb2xsZWN0aXZlLmNvbS9DYWNoZXQvb3JnYW5pemF0aW9uLzgvYXZhdGFy
LnN2ZyI+PC9hPgo8YSBocmVmPSJodHRwczovL29wZW5jb2xsZWN0aXZlLmNv
bS9DYWNoZXQvb3JnYW5pemF0aW9uLzkvd2Vic2l0ZSI+PGltZyBzcmM9Imh0
dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL0NhY2hldC9vcmdhbml6YXRpb24v
OS9hdmF0YXIuc3ZnIj48L2E+Cg==
",,"bGFuZ3VhZ2U6IHBocApkaXN0OiB0cnVzdHkKc3VkbzogZmFsc2UKCmJyYW5j
aGVzOgogIGV4Y2VwdDoKICAgIC0gbDEwbl8yLjMKICAgIC0gbDEwbl8yLjQK
CmJlZm9yZV9pbnN0YWxsOgogIC0gY3AgLmVudi5leGFtcGxlIC5lbnYKCmlu
c3RhbGw6CiAgLSB0cmF2aXNfcmV0cnkgY29tcG9zZXIgaW5zdGFsbCAtLW5v
LWludGVyYWN0aW9uIC0tbm8tc3VnZ2VzdAoKam9iczoKICBpbmNsdWRlOgoj
ICAgIC0gc3RhZ2U6IFNlY3VyaXR5IGNoZWNrCiMgICAgICBzY3JpcHQ6CiMg
ICAgICAgIC0gcGhwZW52IGNvbmZpZy1ybSB4ZGVidWcuaW5pIHx8IHRydWUK
IyAgICAgICAgLSB3Z2V0IGh0dHBzOi8vZ2V0LnNlbnNpb2xhYnMub3JnL3Nl
Y3VyaXR5LWNoZWNrZXIucGhhcgojICAgICAgICAtIHBocCBzZWN1cml0eS1j
aGVja2VyLnBoYXIgc2VjdXJpdHk6Y2hlY2sgLi9jb21wb3Nlci5sb2NrCiMg
ICAgICBwaHA6IDcuMQogICAgLSBzdGFnZTogVW5pdCB0ZXN0cwogICAgICBz
Y3JpcHQ6CiAgICAgICAgLSBwaHBlbnYgY29uZmlnLXJtIHhkZWJ1Zy5pbmkg
fHwgdHJ1ZQogICAgICAgIC0gdmVuZG9yL2Jpbi9waHB1bml0CiAgICAgIHBo
cDogNy4xCiAgICAtIHN0YWdlOiBVbml0IHRlc3RzCiAgICAgIHNjcmlwdDoK
ICAgICAgICAtIHBocGVudiBjb25maWctcm0geGRlYnVnLmluaSB8fCB0cnVl
CiAgICAgICAgLSB2ZW5kb3IvYmluL3BocHVuaXQKICAgICAgcGhwOiA3LjIK
ICAgIC0gc3RhZ2U6IFVuaXQgdGVzdHMKICAgICAgc2NyaXB0OgogICAgICAg
IC0gcGhwZW52IGNvbmZpZy1ybSB4ZGVidWcuaW5pIHx8IHRydWUKICAgICAg
ICAtIHZlbmRvci9iaW4vcGhwdW5pdAogICAgICBwaHA6IDcuMwogICAgLSBz
dGFnZTogQ29kZSBjb3ZlcmFnZQogICAgICBzY3JpcHQ6CiAgICAgICAgLSBw
aHBlbnYgY29uZmlnLXJtIHhkZWJ1Zy5pbmkgfHwgdHJ1ZQogICAgICAgIC0g
cGhwZGJnIC1xcnIgdmVuZG9yL2Jpbi9waHB1bml0IC0tY292ZXJhZ2UtdGV4
dCAtLWNvdmVyYWdlLWNsb3ZlciBidWlsZC9sb2dzL2Nsb3Zlci54bWwKICAg
ICAgICAtIGlmIFsgIiRUUkFWSVNfUFVMTF9SRVFVRVNUIiA9ICJmYWxzZSIg
XTsgdGhlbiB3Z2V0IGh0dHBzOi8vc2NydXRpbml6ZXItY2kuY29tL29jdWxh
ci5waGFyOyBmaQogICAgICAgIC0gaWYgWyAiJFRSQVZJU19QVUxMX1JFUVVF
U1QiID0gImZhbHNlIiBdOyB0aGVuIHBocCBvY3VsYXIucGhhciBjb2RlLWNv
dmVyYWdlOnVwbG9hZCAtLWZvcm1hdD1waHAtY2xvdmVyIGJ1aWxkL2xvZ3Mv
Y2xvdmVyLnhtbDsgZmkKICAgICAgcGhwOiA3LjEK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'shelljs',3604157,b':shell: Portable Unix shell commands for Node.js',b'JavaScript',74,10418,,10418,False,b'https://api.github.com/repos/shelljs/shelljs/forks',"IyBTaGVsbEpTIC0gVW5peCBzaGVsbCBjb21tYW5kcyBmb3IgTm9kZS5qcwoK
WyFbVHJhdmlzXShodHRwczovL2ltZy5zaGllbGRzLmlvL3RyYXZpcy9zaGVs
bGpzL3NoZWxsanMvbWFzdGVyLnN2Zz9zdHlsZT1mbGF0LXNxdWFyZSZsYWJl
bD11bml4KV0oaHR0cHM6Ly90cmF2aXMtY2kub3JnL3NoZWxsanMvc2hlbGxq
cykKWyFbQXBwVmV5b3JdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYXBwdmV5
b3IvY2kvc2hlbGxqcy9zaGVsbGpzL21hc3Rlci5zdmc/c3R5bGU9ZmxhdC1z
cXVhcmUmbGFiZWw9d2luZG93cyldKGh0dHBzOi8vY2kuYXBwdmV5b3IuY29t
L3Byb2plY3Qvc2hlbGxqcy9zaGVsbGpzL2JyYW5jaC9tYXN0ZXIpClshW0Nv
ZGVjb3ZdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vY29kZWNvdi9jL2dpdGh1
Yi9zaGVsbGpzL3NoZWxsanMvbWFzdGVyLnN2Zz9zdHlsZT1mbGF0LXNxdWFy
ZSZsYWJlbD1jb3ZlcmFnZSldKGh0dHBzOi8vY29kZWNvdi5pby9naC9zaGVs
bGpzL3NoZWxsanMpClshW25wbSB2ZXJzaW9uXShodHRwczovL2ltZy5zaGll
bGRzLmlvL25wbS92L3NoZWxsanMuc3ZnP3N0eWxlPWZsYXQtc3F1YXJlKV0o
aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2Uvc2hlbGxqcykKWyFbbnBt
IGRvd25sb2Fkc10oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9ucG0vZG0vc2hl
bGxqcy5zdmc/c3R5bGU9ZmxhdC1zcXVhcmUpXShodHRwczovL3d3dy5ucG1q
cy5jb20vcGFja2FnZS9zaGVsbGpzKQoKU2hlbGxKUyBpcyBhIHBvcnRhYmxl
ICoqKFdpbmRvd3MvTGludXgvbWFjT1MpKiogaW1wbGVtZW50YXRpb24gb2Yg
VW5peCBzaGVsbApjb21tYW5kcyBvbiB0b3Agb2YgdGhlIE5vZGUuanMgQVBJ
LiBZb3UgY2FuIHVzZSBpdCB0byBlbGltaW5hdGUgeW91ciBzaGVsbApzY3Jp
cHQncyBkZXBlbmRlbmN5IG9uIFVuaXggd2hpbGUgc3RpbGwga2VlcGluZyBp
dHMgZmFtaWxpYXIgYW5kIHBvd2VyZnVsCmNvbW1hbmRzLiBZb3UgY2FuIGFs
c28gaW5zdGFsbCBpdCBnbG9iYWxseSBzbyB5b3UgY2FuIHJ1biBpdCBmcm9t
IG91dHNpZGUgTm9kZQpwcm9qZWN0cyAtIHNheSBnb29kYnllIHRvIHRob3Nl
IGduYXJseSBCYXNoIHNjcmlwdHMhCgpTaGVsbEpTIGlzIHByb3VkbHkgdGVz
dGVkIG9uIGV2ZXJ5IG5vZGUgcmVsZWFzZSBzaW5jZSA8IS0tIHN0YXJ0IG1p
blZlcnNpb24gLS0+YHY2YDwhLS0gc3RvcCBtaW5WZXJzaW9uIC0tPiEKClRo
ZSBwcm9qZWN0IGlzIFt1bml0LXRlc3RlZF0oaHR0cDovL3RyYXZpcy1jaS5v
cmcvc2hlbGxqcy9zaGVsbGpzKSBhbmQgYmF0dGxlLXRlc3RlZCBpbiBwcm9q
ZWN0cyBsaWtlOgoKKyBbRmlyZWJ1Z10oaHR0cDovL2dldGZpcmVidWcuY29t
LykgLSBGaXJlZm94J3MgaW5mYW1vdXMgZGVidWdnZXIKKyBbSlNIaW50XSho
dHRwOi8vanNoaW50LmNvbSkgJiBbRVNMaW50XShodHRwOi8vZXNsaW50Lm9y
Zy8pIC0gcG9wdWxhciBKYXZhU2NyaXB0IGxpbnRlcnMKKyBbWmVwdG9dKGh0
dHA6Ly96ZXB0b2pzLmNvbSkgLSBqUXVlcnktY29tcGF0aWJsZSBKYXZhU2Ny
aXB0IGxpYnJhcnkgZm9yIG1vZGVybiBicm93c2VycworIFtZZW9tYW5dKGh0
dHA6Ly95ZW9tYW4uaW8vKSAtIFdlYiBhcHBsaWNhdGlvbiBzdGFjayBhbmQg
ZGV2ZWxvcG1lbnQgdG9vbAorIFtEZXBsb3lkLmNvbV0oaHR0cDovL2RlcGxv
eWQuY29tKSAtIE9wZW4gc291cmNlIFBhYVMgZm9yIHF1aWNrIEFQSSBiYWNr
ZW5kIGdlbmVyYXRpb24KKyBBbmQgW21hbnkgbW9yZV0oaHR0cHM6Ly9ucG1q
cy5vcmcvYnJvd3NlL2RlcGVuZGVkL3NoZWxsanMpLgoKSWYgeW91IGhhdmUg
ZmVlZGJhY2ssIHN1Z2dlc3Rpb25zLCBvciBuZWVkIGhlbHAsIGZlZWwgZnJl
ZSB0byBwb3N0IGluIG91ciBbaXNzdWUKdHJhY2tlcl0oaHR0cHM6Ly9naXRo
dWIuY29tL3NoZWxsanMvc2hlbGxqcy9pc3N1ZXMpLgoKVGhpbmsgU2hlbGxK
UyBpcyBjb29sPyBDaGVjayBvdXQgc29tZSByZWxhdGVkIHByb2plY3RzIGlu
IG91ciBbV2lraQpwYWdlXShodHRwczovL2dpdGh1Yi5jb20vc2hlbGxqcy9z
aGVsbGpzL3dpa2kpIQoKVXBncmFkaW5nIGZyb20gYW4gb2xkZXIgdmVyc2lv
bj8gQ2hlY2sgb3V0IG91ciBbYnJlYWtpbmcKY2hhbmdlc10oaHR0cHM6Ly9n
aXRodWIuY29tL3NoZWxsanMvc2hlbGxqcy93aWtpL0JyZWFraW5nLUNoYW5n
ZXMpIHBhZ2UgdG8gc2VlCndoYXQgY2hhbmdlcyB0byB3YXRjaCBvdXQgZm9y
IHdoaWxlIHVwZ3JhZGluZy4KCiMjIENvbW1hbmQgbGluZSB1c2UKCklmIHlv
dSBqdXN0IHdhbnQgY3Jvc3MgcGxhdGZvcm0gVU5JWCBjb21tYW5kcywgY2hl
Y2tvdXQgb3VyIG5ldyBwcm9qZWN0CltzaGVsbGpzL3NoeF0oaHR0cHM6Ly9n
aXRodWIuY29tL3NoZWxsanMvc2h4KSwgYSB1dGlsaXR5IHRvIGV4cG9zZSBg
c2hlbGxqc2AgdG8KdGhlIGNvbW1hbmQgbGluZS4KCkZvciBleGFtcGxlOgoK
YGBgCiQgc2h4IG1rZGlyIC1wIGZvbwokIHNoeCB0b3VjaCBmb28vYmFyLnR4
dAokIHNoeCBybSAtcmYgZm9vCmBgYAoKIyMgUGx1Z2luIEFQSQoKU2hlbGxK
UyBub3cgc3VwcG9ydHMgdGhpcmQtcGFydHkgcGx1Z2lucyEgWW91IGNhbiBs
ZWFybiBtb3JlIGFib3V0IHVzaW5nIHBsdWdpbnMKYW5kIHdyaXRpbmcgeW91
ciBvd24gU2hlbGxKUyBjb21tYW5kcyBpbiBbdGhlCndpa2ldKGh0dHBzOi8v
Z2l0aHViLmNvbS9zaGVsbGpzL3NoZWxsanMvd2lraS9Vc2luZy1TaGVsbEpT
LVBsdWdpbnMpLgoKIyMgQSBxdWljayBub3RlIGFib3V0IHRoZSBkb2NzCgpG
b3IgZG9jdW1lbnRhdGlvbiBvbiBhbGwgdGhlIGxhdGVzdCBmZWF0dXJlcywg
Y2hlY2sgb3V0IG91cgpbUkVBRE1FXShodHRwczovL2dpdGh1Yi5jb20vc2hl
bGxqcy9zaGVsbGpzKS4gVG8gcmVhZCBkb2NzIHRoYXQgYXJlIGNvbnNpc3Rl
bnQKd2l0aCB0aGUgbGF0ZXN0IHJlbGVhc2UsIGNoZWNrIG91dCBbdGhlIG5w
bQpwYWdlXShodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9zaGVsbGpz
KSBvcgpbc2hlbGxqcy5vcmddKGh0dHA6Ly9kb2N1bWVudHVwLmNvbS9zaGVs
bGpzL3NoZWxsanMpLgoKIyMgSW5zdGFsbGluZwoKVmlhIG5wbToKCmBgYGJh
c2gKJCBucG0gaW5zdGFsbCBbLWddIHNoZWxsanMKYGBgCgojIyBFeGFtcGxl
cwoKYGBgamF2YXNjcmlwdAp2YXIgc2hlbGwgPSByZXF1aXJlKCdzaGVsbGpz
Jyk7CgppZiAoIXNoZWxsLndoaWNoKCdnaXQnKSkgewogIHNoZWxsLmVjaG8o
J1NvcnJ5LCB0aGlzIHNjcmlwdCByZXF1aXJlcyBnaXQnKTsKICBzaGVsbC5l
eGl0KDEpOwp9CgovLyBDb3B5IGZpbGVzIHRvIHJlbGVhc2UgZGlyCnNoZWxs
LnJtKCctcmYnLCAnb3V0L1JlbGVhc2UnKTsKc2hlbGwuY3AoJy1SJywgJ3N0
dWZmLycsICdvdXQvUmVsZWFzZScpOwoKLy8gUmVwbGFjZSBtYWNyb3MgaW4g
ZWFjaCAuanMgZmlsZQpzaGVsbC5jZCgnbGliJyk7CnNoZWxsLmxzKCcqLmpz
JykuZm9yRWFjaChmdW5jdGlvbiAoZmlsZSkgewogIHNoZWxsLnNlZCgnLWkn
LCAnQlVJTERfVkVSU0lPTicsICd2MC4xLjInLCBmaWxlKTsKICBzaGVsbC5z
ZWQoJy1pJywgL14uKlJFTU9WRV9USElTX0xJTkUuKiQvLCAnJywgZmlsZSk7
CiAgc2hlbGwuc2VkKCctaScsIC8uKlJFUExBQ0VfTElORV9XSVRIX01BQ1JP
Lipcbi8sIHNoZWxsLmNhdCgnbWFjcm8uanMnKSwgZmlsZSk7Cn0pOwpzaGVs
bC5jZCgnLi4nKTsKCi8vIFJ1biBleHRlcm5hbCB0b29sIHN5bmNocm9ub3Vz
bHkKaWYgKHNoZWxsLmV4ZWMoJ2dpdCBjb21taXQgLWFtICJBdXRvLWNvbW1p
dCInKS5jb2RlICE9PSAwKSB7CiAgc2hlbGwuZWNobygnRXJyb3I6IEdpdCBj
b21taXQgZmFpbGVkJyk7CiAgc2hlbGwuZXhpdCgxKTsKfQpgYGAKCiMjIEV4
Y2x1ZGUgb3B0aW9ucwoKSWYgeW91IG5lZWQgdG8gcGFzcyBhIHBhcmFtZXRl
ciB0aGF0IGxvb2tzIGxpa2UgYW4gb3B0aW9uLCB5b3UgY2FuIGRvIHNvIGxp
a2U6CgpgYGBqcwpzaGVsbC5ncmVwKCctLScsICctdicsICdwYXRoL3RvL2Zp
bGUnKTsgLy8gU2VhcmNoIGZvciAiLXYiLCBubyBncmVwIG9wdGlvbnMKCnNo
ZWxsLmNwKCctUicsICctZGlyJywgJ291dGRpcicpOyAvLyBJZiBhbHJlYWR5
IHVzaW5nIGFuIG9wdGlvbiwgeW91J3JlIGRvbmUKYGBgCgojIyBHbG9iYWwg
dnMuIExvY2FsCgpXZSBubyBsb25nZXIgcmVjb21tZW5kIHVzaW5nIGEgZ2xv
YmFsLWltcG9ydCBmb3IgU2hlbGxKUyAoaS5lLgpgcmVxdWlyZSgnc2hlbGxq
cy9nbG9iYWwnKWApLiBXaGlsZSBzdGlsbCBzdXBwb3J0ZWQgZm9yIGNvbnZl
bmllbmNlLCB0aGlzCnBvbGx1dGVzIHRoZSBnbG9iYWwgbmFtZXNwYWNlLCBh
bmQgc2hvdWxkIHRoZXJlZm9yZSBvbmx5IGJlIHVzZWQgd2l0aCBjYXV0aW9u
LgoKSW5zdGVhZCwgd2UgcmVjb21tZW5kIGEgbG9jYWwgaW1wb3J0IChzdGFu
ZGFyZCBmb3IgbnBtIHBhY2thZ2VzKToKCmBgYGphdmFzY3JpcHQKdmFyIHNo
ZWxsID0gcmVxdWlyZSgnc2hlbGxqcycpOwpzaGVsbC5lY2hvKCdoZWxsbyB3
b3JsZCcpOwpgYGAKCjwhLS0gRE8gTk9UIE1PRElGWSBCRVlPTkQgVEhJUyBQ
T0lOVCAtIElUJ1MgQVVUT01BVElDQUxMWSBHRU5FUkFURUQgLS0+CgoKIyMg
Q29tbWFuZCByZWZlcmVuY2UKCgpBbGwgY29tbWFuZHMgcnVuIHN5bmNocm9u
b3VzbHksIHVubGVzcyBvdGhlcndpc2Ugc3RhdGVkLgpBbGwgY29tbWFuZHMg
YWNjZXB0IHN0YW5kYXJkIGJhc2ggZ2xvYmJpbmcgY2hhcmFjdGVycyAoYCpg
LCBgP2AsIGV0Yy4pLApjb21wYXRpYmxlIHdpdGggdGhlIFtub2RlIGBnbG9i
YCBtb2R1bGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9pc2FhY3Mvbm9kZS1nbG9i
KS4KCkZvciBsZXNzLWNvbW1vbmx5IHVzZWQgY29tbWFuZHMgYW5kIGZlYXR1
cmVzLCBwbGVhc2UgY2hlY2sgb3V0IG91ciBbd2lraQpwYWdlXShodHRwczov
L2dpdGh1Yi5jb20vc2hlbGxqcy9zaGVsbGpzL3dpa2kpLgoKCiMjIyBjYXQo
W29wdGlvbnMsXSBmaWxlIFssIGZpbGUgLi4uXSkKIyMjIGNhdChbb3B0aW9u
cyxdIGZpbGVfYXJyYXkpCgpBdmFpbGFibGUgb3B0aW9uczoKCisgYC1uYDog
bnVtYmVyIGFsbCBvdXRwdXQgbGluZXMKCkV4YW1wbGVzOgoKYGBgamF2YXNj
cmlwdAp2YXIgc3RyID0gY2F0KCdmaWxlKi50eHQnKTsKdmFyIHN0ciA9IGNh
dCgnZmlsZTEnLCAnZmlsZTInKTsKdmFyIHN0ciA9IGNhdChbJ2ZpbGUxJywg
J2ZpbGUyJ10pOyAvLyBzYW1lIGFzIGFib3ZlCmBgYAoKUmV0dXJucyBhIFtT
aGVsbFN0cmluZ10oI3NoZWxsc3RyaW5nc3RyKSBjb250YWluaW5nIHRoZSBn
aXZlbiBmaWxlLCBvciBhCmNvbmNhdGVuYXRlZCBzdHJpbmcgY29udGFpbmlu
ZyB0aGUgZmlsZXMgaWYgbW9yZSB0aGFuIG9uZSBmaWxlIGlzIGdpdmVuIChh
Cm5ldyBsaW5lIGNoYXJhY3RlciBpcyBpbnRyb2R1Y2VkIGJldHdlZW4gZWFj
aCBmaWxlKS4KCgojIyMgY2QoW2Rpcl0pCgpDaGFuZ2VzIHRvIGRpcmVjdG9y
eSBgZGlyYCBmb3IgdGhlIGR1cmF0aW9uIG9mIHRoZSBzY3JpcHQuIENoYW5n
ZXMgdG8gaG9tZQpkaXJlY3RvcnkgaWYgbm8gYXJndW1lbnQgaXMgc3VwcGxp
ZWQuIFJldHVybnMgYQpbU2hlbGxTdHJpbmddKCNzaGVsbHN0cmluZ3N0cikg
dG8gaW5kaWNhdGUgc3VjY2VzcyBvciBmYWlsdXJlLgoKCiMjIyBjaG1vZChb
b3B0aW9ucyxdIG9jdGFsX21vZGUgfHwgb2N0YWxfc3RyaW5nLCBmaWxlKQoj
IyMgY2htb2QoW29wdGlvbnMsXSBzeW1ib2xpY19tb2RlLCBmaWxlKQoKQXZh
aWxhYmxlIG9wdGlvbnM6CgorIGAtdmA6IG91dHB1dCBhIGRpYWdub3N0aWMg
Zm9yIGV2ZXJ5IGZpbGUgcHJvY2Vzc2VkCisgYC1jYDogbGlrZSB2ZXJib3Nl
LCBidXQgcmVwb3J0IG9ubHkgd2hlbiBhIGNoYW5nZSBpcyBtYWRlCisgYC1S
YDogY2hhbmdlIGZpbGVzIGFuZCBkaXJlY3RvcmllcyByZWN1cnNpdmVseQoK
RXhhbXBsZXM6CgpgYGBqYXZhc2NyaXB0CmNobW9kKDc1NSwgJy9Vc2Vycy9i
cmFuZG9uJyk7CmNobW9kKCc3NTUnLCAnL1VzZXJzL2JyYW5kb24nKTsgLy8g
c2FtZSBhcyBhYm92ZQpjaG1vZCgndSt4JywgJy9Vc2Vycy9icmFuZG9uJyk7
CmNobW9kKCctUicsICdhLXcnLCAnL1VzZXJzL2JyYW5kb24nKTsKYGBgCgpB
bHRlcnMgdGhlIHBlcm1pc3Npb25zIG9mIGEgZmlsZSBvciBkaXJlY3Rvcnkg
YnkgZWl0aGVyIHNwZWNpZnlpbmcgdGhlCmFic29sdXRlIHBlcm1pc3Npb25z
IGluIG9jdGFsIGZvcm0gb3IgZXhwcmVzc2luZyB0aGUgY2hhbmdlcyBpbiBz
eW1ib2xzLgpUaGlzIGNvbW1hbmQgdHJpZXMgdG8gbWltaWMgdGhlIFBPU0lY
IGJlaGF2aW9yIGFzIG11Y2ggYXMgcG9zc2libGUuCk5vdGFibGUgZXhjZXB0
aW9uczoKCisgSW4gc3ltYm9saWMgbW9kZXMsIGBhLXJgIGFuZCBgLXJgIGFy
ZSBpZGVudGljYWwuICBObyBjb25zaWRlcmF0aW9uIGlzCiAgZ2l2ZW4gdG8g
dGhlIGB1bWFza2AuCisgVGhlcmUgaXMgbm8gInF1aWV0IiBvcHRpb24sIHNp
bmNlIGRlZmF1bHQgYmVoYXZpb3IgaXMgdG8gcnVuIHNpbGVudC4KClJldHVy
bnMgYSBbU2hlbGxTdHJpbmddKCNzaGVsbHN0cmluZ3N0cikgaW5kaWNhdGlu
ZyBzdWNjZXNzIG9yIGZhaWx1cmUuCgoKIyMjIGNwKFtvcHRpb25zLF0gc291
cmNlIFssIHNvdXJjZSAuLi5dLCBkZXN0KQojIyMgY3AoW29wdGlvbnMsXSBz
b3VyY2VfYXJyYXksIGRlc3QpCgpBdmFpbGFibGUgb3B0aW9uczoKCisgYC1m
YDogZm9yY2UgKGRlZmF1bHQgYmVoYXZpb3IpCisgYC1uYDogbm8tY2xvYmJl
cgorIGAtdWA6IG9ubHkgY29weSBpZiBgc291cmNlYCBpcyBuZXdlciB0aGFu
IGBkZXN0YAorIGAtcmAsIGAtUmA6IHJlY3Vyc2l2ZQorIGAtTGA6IGZvbGxv
dyBzeW1saW5rcworIGAtUGA6IGRvbid0IGZvbGxvdyBzeW1saW5rcwoKRXhh
bXBsZXM6CgpgYGBqYXZhc2NyaXB0CmNwKCdmaWxlMScsICdkaXIxJyk7CmNw
KCctUicsICdwYXRoL3RvL2Rpci8nLCAnfi9uZXdDb3B5LycpOwpjcCgnLVJm
JywgJy90bXAvKicsICcvdXNyL2xvY2FsLyonLCAnL2hvbWUvdG1wJyk7CmNw
KCctUmYnLCBbJy90bXAvKicsICcvdXNyL2xvY2FsLyonXSwgJy9ob21lL3Rt
cCcpOyAvLyBzYW1lIGFzIGFib3ZlCmBgYAoKQ29waWVzIGZpbGVzLiBSZXR1
cm5zIGEgW1NoZWxsU3RyaW5nXSgjc2hlbGxzdHJpbmdzdHIpIGluZGljYXRp
bmcgc3VjY2VzcwpvciBmYWlsdXJlLgoKCiMjIyBwdXNoZChbb3B0aW9ucyxd
IFtkaXIgfCAnLU4nIHwgJytOJ10pCgpBdmFpbGFibGUgb3B0aW9uczoKCisg
YC1uYDogU3VwcHJlc3NlcyB0aGUgbm9ybWFsIGNoYW5nZSBvZiBkaXJlY3Rv
cnkgd2hlbiBhZGRpbmcgZGlyZWN0b3JpZXMgdG8gdGhlIHN0YWNrLCBzbyB0
aGF0IG9ubHkgdGhlIHN0YWNrIGlzIG1hbmlwdWxhdGVkLgorIGAtcWA6IFN1
cHByZXNzZXMgb3V0cHV0IHRvIHRoZSBjb25zb2xlLgoKQXJndW1lbnRzOgoK
KyBgZGlyYDogU2V0cyB0aGUgY3VycmVudCB3b3JraW5nIGRpcmVjdG9yeSB0
byB0aGUgdG9wIG9mIHRoZSBzdGFjaywgdGhlbiBleGVjdXRlcyB0aGUgZXF1
aXZhbGVudCBvZiBgY2QgZGlyYC4KKyBgK05gOiBCcmluZ3MgdGhlIE50aCBk
aXJlY3RvcnkgKGNvdW50aW5nIGZyb20gdGhlIGxlZnQgb2YgdGhlIGxpc3Qg
cHJpbnRlZCBieSBkaXJzLCBzdGFydGluZyB3aXRoIHplcm8pIHRvIHRoZSB0
b3Agb2YgdGhlIGxpc3QgYnkgcm90YXRpbmcgdGhlIHN0YWNrLgorIGAtTmA6
IEJyaW5ncyB0aGUgTnRoIGRpcmVjdG9yeSAoY291bnRpbmcgZnJvbSB0aGUg
cmlnaHQgb2YgdGhlIGxpc3QgcHJpbnRlZCBieSBkaXJzLCBzdGFydGluZyB3
aXRoIHplcm8pIHRvIHRoZSB0b3Agb2YgdGhlIGxpc3QgYnkgcm90YXRpbmcg
dGhlIHN0YWNrLgoKRXhhbXBsZXM6CgpgYGBqYXZhc2NyaXB0Ci8vIHByb2Nl
c3MuY3dkKCkgPT09ICcvdXNyJwpwdXNoZCgnL2V0YycpOyAvLyBSZXR1cm5z
IC9ldGMgL3VzcgpwdXNoZCgnKzEnKTsgICAvLyBSZXR1cm5zIC91c3IgL2V0
YwpgYGAKClNhdmUgdGhlIGN1cnJlbnQgZGlyZWN0b3J5IG9uIHRoZSB0b3Ag
b2YgdGhlIGRpcmVjdG9yeSBzdGFjayBhbmQgdGhlbiBgY2RgIHRvIGBkaXJg
LiBXaXRoIG5vIGFyZ3VtZW50cywgYHB1c2hkYCBleGNoYW5nZXMgdGhlIHRv
cCB0d28gZGlyZWN0b3JpZXMuIFJldHVybnMgYW4gYXJyYXkgb2YgcGF0aHMg
aW4gdGhlIHN0YWNrLgoKCiMjIyBwb3BkKFtvcHRpb25zLF0gWyctTicgfCAn
K04nXSkKCkF2YWlsYWJsZSBvcHRpb25zOgoKKyBgLW5gOiBTdXBwcmVzcyB0
aGUgbm9ybWFsIGRpcmVjdG9yeSBjaGFuZ2Ugd2hlbiByZW1vdmluZyBkaXJl
Y3RvcmllcyBmcm9tIHRoZSBzdGFjaywgc28gdGhhdCBvbmx5IHRoZSBzdGFj
ayBpcyBtYW5pcHVsYXRlZC4KKyBgLXFgOiBTdXByZXNzZXMgb3V0cHV0IHRv
IHRoZSBjb25zb2xlLgoKQXJndW1lbnRzOgoKKyBgK05gOiBSZW1vdmVzIHRo
ZSBOdGggZGlyZWN0b3J5IChjb3VudGluZyBmcm9tIHRoZSBsZWZ0IG9mIHRo
ZSBsaXN0IHByaW50ZWQgYnkgZGlycyksIHN0YXJ0aW5nIHdpdGggemVyby4K
KyBgLU5gOiBSZW1vdmVzIHRoZSBOdGggZGlyZWN0b3J5IChjb3VudGluZyBm
cm9tIHRoZSByaWdodCBvZiB0aGUgbGlzdCBwcmludGVkIGJ5IGRpcnMpLCBz
dGFydGluZyB3aXRoIHplcm8uCgpFeGFtcGxlczoKCmBgYGphdmFzY3JpcHQK
ZWNobyhwcm9jZXNzLmN3ZCgpKTsgLy8gJy91c3InCnB1c2hkKCcvZXRjJyk7
ICAgICAgIC8vICcvZXRjIC91c3InCmVjaG8ocHJvY2Vzcy5jd2QoKSk7IC8v
ICcvZXRjJwpwb3BkKCk7ICAgICAgICAgICAgICAvLyAnL3VzcicKZWNobyhw
cm9jZXNzLmN3ZCgpKTsgLy8gJy91c3InCmBgYAoKV2hlbiBubyBhcmd1bWVu
dHMgYXJlIGdpdmVuLCBgcG9wZGAgcmVtb3ZlcyB0aGUgdG9wIGRpcmVjdG9y
eSBmcm9tIHRoZSBzdGFjayBhbmQgcGVyZm9ybXMgYSBgY2RgIHRvIHRoZSBu
ZXcgdG9wIGRpcmVjdG9yeS4gVGhlIGVsZW1lbnRzIGFyZSBudW1iZXJlZCBm
cm9tIDAsIHN0YXJ0aW5nIGF0IHRoZSBmaXJzdCBkaXJlY3RvcnkgbGlzdGVk
IHdpdGggZGlycyAoaS5lLiwgYHBvcGRgIGlzIGVxdWl2YWxlbnQgdG8gYHBv
cGQgKzBgKS4gUmV0dXJucyBhbiBhcnJheSBvZiBwYXRocyBpbiB0aGUgc3Rh
Y2suCgoKIyMjIGRpcnMoW29wdGlvbnMgfCAnK04nIHwgJy1OJ10pCgpBdmFp
bGFibGUgb3B0aW9uczoKCisgYC1jYDogQ2xlYXJzIHRoZSBkaXJlY3Rvcnkg
c3RhY2sgYnkgZGVsZXRpbmcgYWxsIG9mIHRoZSBlbGVtZW50cy4KKyBgLXFg
OiBTdXByZXNzZXMgb3V0cHV0IHRvIHRoZSBjb25zb2xlLgoKQXJndW1lbnRz
OgoKKyBgK05gOiBEaXNwbGF5cyB0aGUgTnRoIGRpcmVjdG9yeSAoY291bnRp
bmcgZnJvbSB0aGUgbGVmdCBvZiB0aGUgbGlzdCBwcmludGVkIGJ5IGRpcnMg
d2hlbiBpbnZva2VkIHdpdGhvdXQgb3B0aW9ucyksIHN0YXJ0aW5nIHdpdGgg
emVyby4KKyBgLU5gOiBEaXNwbGF5cyB0aGUgTnRoIGRpcmVjdG9yeSAoY291
bnRpbmcgZnJvbSB0aGUgcmlnaHQgb2YgdGhlIGxpc3QgcHJpbnRlZCBieSBk
aXJzIHdoZW4gaW52b2tlZCB3aXRob3V0IG9wdGlvbnMpLCBzdGFydGluZyB3
aXRoIHplcm8uCgpEaXNwbGF5IHRoZSBsaXN0IG9mIGN1cnJlbnRseSByZW1l
bWJlcmVkIGRpcmVjdG9yaWVzLiBSZXR1cm5zIGFuIGFycmF5IG9mIHBhdGhz
IGluIHRoZSBzdGFjaywgb3IgYSBzaW5nbGUgcGF0aCBpZiBgK05gIG9yIGAt
TmAgd2FzIHNwZWNpZmllZC4KClNlZSBhbHNvOiBgcHVzaGRgLCBgcG9wZGAK
CgojIyMgZWNobyhbb3B0aW9ucyxdIHN0cmluZyBbLCBzdHJpbmcgLi4uXSkK
CkF2YWlsYWJsZSBvcHRpb25zOgoKKyBgLWVgOiBpbnRlcnByZXQgYmFja3Ns
YXNoIGVzY2FwZXMgKGRlZmF1bHQpCisgYC1uYDogcmVtb3ZlIHRyYWlsaW5n
IG5ld2xpbmUgZnJvbSBvdXRwdXQKCkV4YW1wbGVzOgoKYGBgamF2YXNjcmlw
dAplY2hvKCdoZWxsbyB3b3JsZCcpOwp2YXIgc3RyID0gZWNobygnaGVsbG8g
d29ybGQnKTsKZWNobygnLW4nLCAnbm8gbmV3bGluZSBhdCBlbmQnKTsKYGBg
CgpQcmludHMgYHN0cmluZ2AgdG8gc3Rkb3V0LCBhbmQgcmV0dXJucyBhIFtT
aGVsbFN0cmluZ10oI3NoZWxsc3RyaW5nc3RyKS4KCgojIyMgZXhlYyhjb21t
YW5kIFssIG9wdGlvbnNdIFssIGNhbGxiYWNrXSkKCkF2YWlsYWJsZSBvcHRp
b25zOgoKKyBgYXN5bmNgOiBBc3luY2hyb25vdXMgZXhlY3V0aW9uLiBJZiBh
IGNhbGxiYWNrIGlzIHByb3ZpZGVkLCBpdCB3aWxsIGJlIHNldCB0bwogIGB0
cnVlYCwgcmVnYXJkbGVzcyBvZiB0aGUgcGFzc2VkIHZhbHVlIChkZWZhdWx0
OiBgZmFsc2VgKS4KKyBgZmF0YWxgOiBFeGl0IHVwb24gZXJyb3IgKGRlZmF1
bHQ6IGBmYWxzZWApLgorIGBzaWxlbnRgOiBEbyBub3QgZWNobyBwcm9ncmFt
IG91dHB1dCB0byBjb25zb2xlIChkZWZhdWx0OiBgZmFsc2VgKS4KKyBgZW5j
b2RpbmdgOiBDaGFyYWN0ZXIgZW5jb2RpbmcgdG8gdXNlLiBBZmZlY3RzIHRo
ZSB2YWx1ZXMgcmV0dXJuZWQgdG8gc3Rkb3V0IGFuZCBzdGRlcnIsIGFuZAog
IHdoYXQgaXMgd3JpdHRlbiB0byBzdGRvdXQgYW5kIHN0ZGVyciB3aGVuIG5v
dCBpbiBzaWxlbnQgbW9kZSAoZGVmYXVsdDogYCd1dGY4J2ApLgorIGFuZCBh
bnkgb3B0aW9uIGF2YWlsYWJsZSB0byBOb2RlLmpzJ3MKICBbYGNoaWxkX3By
b2Nlc3MuZXhlYygpYF0oaHR0cHM6Ly9ub2RlanMub3JnL2FwaS9jaGlsZF9w
cm9jZXNzLmh0bWwjY2hpbGRfcHJvY2Vzc19jaGlsZF9wcm9jZXNzX2V4ZWNf
Y29tbWFuZF9vcHRpb25zX2NhbGxiYWNrKQoKRXhhbXBsZXM6CgpgYGBqYXZh
c2NyaXB0CnZhciB2ZXJzaW9uID0gZXhlYygnbm9kZSAtLXZlcnNpb24nLCB7
c2lsZW50OnRydWV9KS5zdGRvdXQ7Cgp2YXIgY2hpbGQgPSBleGVjKCdzb21l
X2xvbmdfcnVubmluZ19wcm9jZXNzJywge2FzeW5jOnRydWV9KTsKY2hpbGQu
c3Rkb3V0Lm9uKCdkYXRhJywgZnVuY3Rpb24oZGF0YSkgewogIC8qIC4uLiBk
byBzb21ldGhpbmcgd2l0aCBkYXRhIC4uLiAqLwp9KTsKCmV4ZWMoJ3NvbWVf
bG9uZ19ydW5uaW5nX3Byb2Nlc3MnLCBmdW5jdGlvbihjb2RlLCBzdGRvdXQs
IHN0ZGVycikgewogIGNvbnNvbGUubG9nKCdFeGl0IGNvZGU6JywgY29kZSk7
CiAgY29uc29sZS5sb2coJ1Byb2dyYW0gb3V0cHV0OicsIHN0ZG91dCk7CiAg
Y29uc29sZS5sb2coJ1Byb2dyYW0gc3RkZXJyOicsIHN0ZGVycik7Cn0pOwpg
YGAKCkV4ZWN1dGVzIHRoZSBnaXZlbiBgY29tbWFuZGAgX3N5bmNocm9ub3Vz
bHlfLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC4KV2hlbiBpbiBzeW5j
aHJvbm91cyBtb2RlLCB0aGlzIHJldHVybnMgYSBbU2hlbGxTdHJpbmddKCNz
aGVsbHN0cmluZ3N0cikuCk90aGVyd2lzZSwgdGhpcyByZXR1cm5zIHRoZSBj
aGlsZCBwcm9jZXNzIG9iamVjdCwgYW5kIHRoZSBgY2FsbGJhY2tgCnJlY2Vp
dmVzIHRoZSBhcmd1bWVudHMgYChjb2RlLCBzdGRvdXQsIHN0ZGVycilgLgoK
Tm90IHNlZWluZyB0aGUgYmVoYXZpb3IgeW91IHdhbnQ/IGBleGVjKClgIHJ1
bnMgZXZlcnl0aGluZyB0aHJvdWdoIGBzaGAKYnkgZGVmYXVsdCAob3IgYGNt
ZC5leGVgIG9uIFdpbmRvd3MpLCB3aGljaCBkaWZmZXJzIGZyb20gYGJhc2hg
LiBJZiB5b3UKbmVlZCBiYXNoLXNwZWNpZmljIGJlaGF2aW9yLCB0cnkgb3V0
IHRoZSBge3NoZWxsOiAncGF0aC90by9iYXNoJ31gIG9wdGlvbi4KCioqU2Vj
dXJpdHkgbm90ZToqKiBhcyBgc2hlbGwuZXhlYygpYCBleGVjdXRlcyBhbiBh
cmJpdHJhcnkgc3RyaW5nIGluIHRoZQpzeXN0ZW0gc2hlbGwsIGl0IGlzICoq
Y3JpdGljYWwqKiB0byBwcm9wZXJseSBzYW5pdGl6ZSB1c2VyIGlucHV0IHRv
IGF2b2lkCioqY29tbWFuZCBpbmplY3Rpb24qKi4gRm9yIG1vcmUgY29udGV4
dCwgY29uc3VsdCB0aGUgW1NlY3VyaXR5Ckd1aWRlbGluZXNdKGh0dHBzOi8v
Z2l0aHViLmNvbS9zaGVsbGpzL3NoZWxsanMvd2lraS9TZWN1cml0eS1ndWlk
ZWxpbmVzKS4KCgojIyMgZmluZChwYXRoIFssIHBhdGggLi4uXSkKIyMjIGZp
bmQocGF0aF9hcnJheSkKCkV4YW1wbGVzOgoKYGBgamF2YXNjcmlwdApmaW5k
KCdzcmMnLCAnbGliJyk7CmZpbmQoWydzcmMnLCAnbGliJ10pOyAvLyBzYW1l
IGFzIGFib3ZlCmZpbmQoJy4nKS5maWx0ZXIoZnVuY3Rpb24oZmlsZSkgeyBy
ZXR1cm4gZmlsZS5tYXRjaCgvXC5qcyQvKTsgfSk7CmBgYAoKUmV0dXJucyBh
IFtTaGVsbFN0cmluZ10oI3NoZWxsc3RyaW5nc3RyKSAod2l0aCBhcnJheS1s
aWtlIHByb3BlcnRpZXMpIG9mIGFsbApmaWxlcyAoaG93ZXZlciBkZWVwKSBp
biB0aGUgZ2l2ZW4gcGF0aHMuCgpUaGUgbWFpbiBkaWZmZXJlbmNlIGZyb20g
YGxzKCctUicsIHBhdGgpYCBpcyB0aGF0IHRoZSByZXN1bHRpbmcgZmlsZSBu
YW1lcwppbmNsdWRlIHRoZSBiYXNlIGRpcmVjdG9yaWVzIChlLmcuLCBgbGli
L3Jlc291cmNlcy9maWxlMWAgaW5zdGVhZCBvZiBqdXN0IGBmaWxlMWApLgoK
CiMjIyBncmVwKFtvcHRpb25zLF0gcmVnZXhfZmlsdGVyLCBmaWxlIFssIGZp
bGUgLi4uXSkKIyMjIGdyZXAoW29wdGlvbnMsXSByZWdleF9maWx0ZXIsIGZp
bGVfYXJyYXkpCgpBdmFpbGFibGUgb3B0aW9uczoKCisgYC12YDogSW52ZXJ0
IGByZWdleF9maWx0ZXJgIChvbmx5IHByaW50IG5vbi1tYXRjaGluZyBsaW5l
cykuCisgYC1sYDogUHJpbnQgb25seSBmaWxlbmFtZXMgb2YgbWF0Y2hpbmcg
ZmlsZXMuCisgYC1pYDogSWdub3JlIGNhc2UuCgpFeGFtcGxlczoKCmBgYGph
dmFzY3JpcHQKZ3JlcCgnLXYnLCAnR0xPQkFMX1ZBUklBQkxFJywgJyouanMn
KTsKZ3JlcCgnR0xPQkFMX1ZBUklBQkxFJywgJyouanMnKTsKYGBgCgpSZWFk
cyBpbnB1dCBzdHJpbmcgZnJvbSBnaXZlbiBmaWxlcyBhbmQgcmV0dXJucyBh
CltTaGVsbFN0cmluZ10oI3NoZWxsc3RyaW5nc3RyKSBjb250YWluaW5nIGFs
bCBsaW5lcyBvZiB0aGUgQCBmaWxlIHRoYXQgbWF0Y2gKdGhlIGdpdmVuIGBy
ZWdleF9maWx0ZXJgLgoKCiMjIyBoZWFkKFt7Jy1uJzogXDxudW1cPn0sXSBm
aWxlIFssIGZpbGUgLi4uXSkKIyMjIGhlYWQoW3snLW4nOiBcPG51bVw+fSxd
IGZpbGVfYXJyYXkpCgpBdmFpbGFibGUgb3B0aW9uczoKCisgYC1uIDxudW0+
YDogU2hvdyB0aGUgZmlyc3QgYDxudW0+YCBsaW5lcyBvZiB0aGUgZmlsZXMK
CkV4YW1wbGVzOgoKYGBgamF2YXNjcmlwdAp2YXIgc3RyID0gaGVhZCh7Jy1u
JzogMX0sICdmaWxlKi50eHQnKTsKdmFyIHN0ciA9IGhlYWQoJ2ZpbGUxJywg
J2ZpbGUyJyk7CnZhciBzdHIgPSBoZWFkKFsnZmlsZTEnLCAnZmlsZTInXSk7
IC8vIHNhbWUgYXMgYWJvdmUKYGBgCgpSZWFkIHRoZSBzdGFydCBvZiBhIGBm
aWxlYC4gUmV0dXJucyBhIFtTaGVsbFN0cmluZ10oI3NoZWxsc3RyaW5nc3Ry
KS4KCgojIyMgbG4oW29wdGlvbnMsXSBzb3VyY2UsIGRlc3QpCgpBdmFpbGFi
bGUgb3B0aW9uczoKCisgYC1zYDogc3ltbGluaworIGAtZmA6IGZvcmNlCgpF
eGFtcGxlczoKCmBgYGphdmFzY3JpcHQKbG4oJ2ZpbGUnLCAnbmV3bGluaycp
OwpsbignLXNmJywgJ2ZpbGUnLCAnZXhpc3RpbmcnKTsKYGBgCgpMaW5rcyBg
c291cmNlYCB0byBgZGVzdGAuIFVzZSBgLWZgIHRvIGZvcmNlIHRoZSBsaW5r
LCBzaG91bGQgYGRlc3RgIGFscmVhZHkKZXhpc3QuIFJldHVybnMgYSBbU2hl
bGxTdHJpbmddKCNzaGVsbHN0cmluZ3N0cikgaW5kaWNhdGluZyBzdWNjZXNz
IG9yCmZhaWx1cmUuCgoKIyMjIGxzKFtvcHRpb25zLF0gW3BhdGgsIC4uLl0p
CiMjIyBscyhbb3B0aW9ucyxdIHBhdGhfYXJyYXkpCgpBdmFpbGFibGUgb3B0
aW9uczoKCisgYC1SYDogcmVjdXJzaXZlCisgYC1BYDogYWxsIGZpbGVzIChp
bmNsdWRlIGZpbGVzIGJlZ2lubmluZyB3aXRoIGAuYCwgZXhjZXB0IGZvciBg
LmAgYW5kIGAuLmApCisgYC1MYDogZm9sbG93IHN5bWxpbmtzCisgYC1kYDog
bGlzdCBkaXJlY3RvcmllcyB0aGVtc2VsdmVzLCBub3QgdGhlaXIgY29udGVu
dHMKKyBgLWxgOiBsaXN0IG9iamVjdHMgcmVwcmVzZW50aW5nIGVhY2ggZmls
ZSwgZWFjaCB3aXRoIGZpZWxkcyBjb250YWluaW5nIGBscwogICAgICAgIC1s
YCBvdXRwdXQgZmllbGRzLiBTZWUKICAgICAgICBbYGZzLlN0YXRzYF0oaHR0
cHM6Ly9ub2RlanMub3JnL2FwaS9mcy5odG1sI2ZzX2NsYXNzX2ZzX3N0YXRz
KQogICAgICAgIGZvciBtb3JlIGluZm8KCkV4YW1wbGVzOgoKYGBgamF2YXNj
cmlwdApscygncHJvanMvKi5qcycpOwpscygnLVInLCAnL3VzZXJzL21lJywg
Jy90bXAnKTsKbHMoJy1SJywgWycvdXNlcnMvbWUnLCAnL3RtcCddKTsgLy8g
c2FtZSBhcyBhYm92ZQpscygnLWwnLCAnZmlsZS50eHQnKTsgLy8geyBuYW1l
OiAnZmlsZS50eHQnLCBtb2RlOiAzMzE4OCwgbmxpbms6IDEsIC4uLn0KYGBg
CgpSZXR1cm5zIGEgW1NoZWxsU3RyaW5nXSgjc2hlbGxzdHJpbmdzdHIpICh3
aXRoIGFycmF5LWxpa2UgcHJvcGVydGllcykgb2YgYWxsCnRoZSBmaWxlcyBp
biB0aGUgZ2l2ZW4gYHBhdGhgLCBvciBmaWxlcyBpbiB0aGUgY3VycmVudCBk
aXJlY3RvcnkgaWYgbm8KYHBhdGhgIGlzICBwcm92aWRlZC4KCgojIyMgbWtk
aXIoW29wdGlvbnMsXSBkaXIgWywgZGlyIC4uLl0pCiMjIyBta2Rpcihbb3B0
aW9ucyxdIGRpcl9hcnJheSkKCkF2YWlsYWJsZSBvcHRpb25zOgoKKyBgLXBg
OiBmdWxsIHBhdGggKGFuZCBjcmVhdGUgaW50ZXJtZWRpYXRlIGRpcmVjdG9y
aWVzLCBpZiBuZWNlc3NhcnkpCgpFeGFtcGxlczoKCmBgYGphdmFzY3JpcHQK
bWtkaXIoJy1wJywgJy90bXAvYS9iL2MvZCcsICcvdG1wL2UvZi9nJyk7Cm1r
ZGlyKCctcCcsIFsnL3RtcC9hL2IvYy9kJywgJy90bXAvZS9mL2cnXSk7IC8v
IHNhbWUgYXMgYWJvdmUKYGBgCgpDcmVhdGVzIGRpcmVjdG9yaWVzLiBSZXR1
cm5zIGEgW1NoZWxsU3RyaW5nXSgjc2hlbGxzdHJpbmdzdHIpIGluZGljYXRp
bmcKc3VjY2VzcyBvciBmYWlsdXJlLgoKCiMjIyBtdihbb3B0aW9ucyAsXSBz
b3VyY2UgWywgc291cmNlIC4uLl0sIGRlc3QnKQojIyMgbXYoW29wdGlvbnMg
LF0gc291cmNlX2FycmF5LCBkZXN0JykKCkF2YWlsYWJsZSBvcHRpb25zOgoK
KyBgLWZgOiBmb3JjZSAoZGVmYXVsdCBiZWhhdmlvcikKKyBgLW5gOiBuby1j
bG9iYmVyCgpFeGFtcGxlczoKCmBgYGphdmFzY3JpcHQKbXYoJy1uJywgJ2Zp
bGUnLCAnZGlyLycpOwptdignZmlsZTEnLCAnZmlsZTInLCAnZGlyLycpOwpt
dihbJ2ZpbGUxJywgJ2ZpbGUyJ10sICdkaXIvJyk7IC8vIHNhbWUgYXMgYWJv
dmUKYGBgCgpNb3ZlcyBgc291cmNlYCBmaWxlKHMpIHRvIGBkZXN0YC4gUmV0
dXJucyBhIFtTaGVsbFN0cmluZ10oI3NoZWxsc3RyaW5nc3RyKQppbmRpY2F0
aW5nIHN1Y2Nlc3Mgb3IgZmFpbHVyZS4KCgojIyMgcHdkKCkKClJldHVybnMg
dGhlIGN1cnJlbnQgZGlyZWN0b3J5IGFzIGEgW1NoZWxsU3RyaW5nXSgjc2hl
bGxzdHJpbmdzdHIpLgoKCiMjIyBybShbb3B0aW9ucyxdIGZpbGUgWywgZmls
ZSAuLi5dKQojIyMgcm0oW29wdGlvbnMsXSBmaWxlX2FycmF5KQoKQXZhaWxh
YmxlIG9wdGlvbnM6CgorIGAtZmA6IGZvcmNlCisgYC1yLCAtUmA6IHJlY3Vy
c2l2ZQoKRXhhbXBsZXM6CgpgYGBqYXZhc2NyaXB0CnJtKCctcmYnLCAnL3Rt
cC8qJyk7CnJtKCdzb21lX2ZpbGUudHh0JywgJ2Fub3RoZXJfZmlsZS50eHQn
KTsKcm0oWydzb21lX2ZpbGUudHh0JywgJ2Fub3RoZXJfZmlsZS50eHQnXSk7
IC8vIHNhbWUgYXMgYWJvdmUKYGBgCgpSZW1vdmVzIGZpbGVzLiBSZXR1cm5z
IGEgW1NoZWxsU3RyaW5nXSgjc2hlbGxzdHJpbmdzdHIpIGluZGljYXRpbmcg
c3VjY2VzcwpvciBmYWlsdXJlLgoKCiMjIyBzZWQoW29wdGlvbnMsXSBzZWFy
Y2hfcmVnZXgsIHJlcGxhY2VtZW50LCBmaWxlIFssIGZpbGUgLi4uXSkKIyMj
IHNlZChbb3B0aW9ucyxdIHNlYXJjaF9yZWdleCwgcmVwbGFjZW1lbnQsIGZp
bGVfYXJyYXkpCgpBdmFpbGFibGUgb3B0aW9uczoKCisgYC1pYDogUmVwbGFj
ZSBjb250ZW50cyBvZiBgZmlsZWAgaW4tcGxhY2UuIF9Ob3RlIHRoYXQgbm8g
YmFja3VwcyB3aWxsIGJlIGNyZWF0ZWQhXwoKRXhhbXBsZXM6CgpgYGBqYXZh
c2NyaXB0CnNlZCgnLWknLCAnUFJPR1JBTV9WRVJTSU9OJywgJ3YwLjEuMycs
ICdzb3VyY2UuanMnKTsKYGBgCgpSZWFkcyBhbiBpbnB1dCBzdHJpbmcgZnJv
bSBgZmlsZWBzLCBsaW5lIGJ5IGxpbmUsIGFuZCBwZXJmb3JtcyBhIEphdmFT
Y3JpcHQgYHJlcGxhY2UoKWAgb24KZWFjaCBvZiB0aGUgbGluZXMgZnJvbSB0
aGUgaW5wdXQgc3RyaW5nIHVzaW5nIHRoZSBnaXZlbiBgc2VhcmNoX3JlZ2V4
YCBhbmQgYHJlcGxhY2VtZW50YCBzdHJpbmcgb3IKZnVuY3Rpb24uIFJldHVy
bnMgdGhlIG5ldyBbU2hlbGxTdHJpbmddKCNzaGVsbHN0cmluZ3N0cikgYWZ0
ZXIgcmVwbGFjZW1lbnQuCgpOb3RlOgoKTGlrZSB1bml4IGBzZWRgLCBTaGVs
bEpTIGBzZWRgIHN1cHBvcnRzIGNhcHR1cmUgZ3JvdXBzLiBDYXB0dXJlIGdy
b3VwcyBhcmUgc3BlY2lmaWVkCnVzaW5nIHRoZSBgJG5gIHN5bnRheDoKCmBg
YGphdmFzY3JpcHQKc2VkKC8oXHcrKVxzKFx3KykvLCAnJDIsICQxJywgJ2Zp
bGUudHh0Jyk7CmBgYAoKQWxzbywgbGlrZSB1bml4IGBzZWRgLCBTaGVsbEpT
IGBzZWRgIHJ1bnMgcmVwbGFjZW1lbnRzIG9uIGVhY2ggbGluZSBmcm9tIHRo
ZSBpbnB1dCBmaWxlCihzcGxpdCBieSAnXG4nKSBzZXBhcmF0ZWx5LCBzbyBg
c2VhcmNoX3JlZ2V4YGVzIHRoYXQgc3BhbiBtb3JlIHRoYW4gb25lIGxpbmUg
KG9yIGlubGNsdWRlICdcbicpCndpbGwgbm90IG1hdGNoIGFueXRoaW5nIGFu
ZCBub3RoaW5nIHdpbGwgYmUgcmVwbGFjZWQuCgoKIyMjIHNldChvcHRpb25z
KQoKQXZhaWxhYmxlIG9wdGlvbnM6CgorIGArLy1lYDogZXhpdCB1cG9uIGVy
cm9yIChgY29uZmlnLmZhdGFsYCkKKyBgKy8tdmA6IHZlcmJvc2U6IHNob3cg
YWxsIGNvbW1hbmRzIChgY29uZmlnLnZlcmJvc2VgKQorIGArLy1mYDogZGlz
YWJsZSBmaWxlbmFtZSBleHBhbnNpb24gKGdsb2JiaW5nKQoKRXhhbXBsZXM6
CgpgYGBqYXZhc2NyaXB0CnNldCgnLWUnKTsgLy8gZXhpdCB1cG9uIGZpcnN0
IGVycm9yCnNldCgnK2UnKTsgLy8gdGhpcyB1bmRvZXMgYSAic2V0KCctZScp
IgpgYGAKClNldHMgZ2xvYmFsIGNvbmZpZ3VyYXRpb24gdmFyaWFibGVzLgoK
CiMjIyBzb3J0KFtvcHRpb25zLF0gZmlsZSBbLCBmaWxlIC4uLl0pCiMjIyBz
b3J0KFtvcHRpb25zLF0gZmlsZV9hcnJheSkKCkF2YWlsYWJsZSBvcHRpb25z
OgoKKyBgLXJgOiBSZXZlcnNlIHRoZSByZXN1bHRzCisgYC1uYDogQ29tcGFy
ZSBhY2NvcmRpbmcgdG8gbnVtZXJpY2FsIHZhbHVlCgpFeGFtcGxlczoKCmBg
YGphdmFzY3JpcHQKc29ydCgnZm9vLnR4dCcsICdiYXIudHh0Jyk7CnNvcnQo
Jy1yJywgJ2Zvby50eHQnKTsKYGBgCgpSZXR1cm4gdGhlIGNvbnRlbnRzIG9m
IHRoZSBgZmlsZWBzLCBzb3J0ZWQgbGluZS1ieS1saW5lIGFzIGEKW1NoZWxs
U3RyaW5nXSgjc2hlbGxzdHJpbmdzdHIpLiBTb3J0aW5nIG11bHRpcGxlIGZp
bGVzIG1peGVzIHRoZWlyIGNvbnRlbnQKKGp1c3QgYXMgdW5peCBgc29ydGAg
ZG9lcykuCgoKIyMjIHRhaWwoW3snLW4nOiBcPG51bVw+fSxdIGZpbGUgWywg
ZmlsZSAuLi5dKQojIyMgdGFpbChbeyctbic6IFw8bnVtXD59LF0gZmlsZV9h
cnJheSkKCkF2YWlsYWJsZSBvcHRpb25zOgoKKyBgLW4gPG51bT5gOiBTaG93
IHRoZSBsYXN0IGA8bnVtPmAgbGluZXMgb2YgYGZpbGVgcwoKRXhhbXBsZXM6
CgpgYGBqYXZhc2NyaXB0CnZhciBzdHIgPSB0YWlsKHsnLW4nOiAxfSwgJ2Zp
bGUqLnR4dCcpOwp2YXIgc3RyID0gdGFpbCgnZmlsZTEnLCAnZmlsZTInKTsK
dmFyIHN0ciA9IHRhaWwoWydmaWxlMScsICdmaWxlMiddKTsgLy8gc2FtZSBh
cyBhYm92ZQpgYGAKClJlYWQgdGhlIGVuZCBvZiBhIGBmaWxlYC4gUmV0dXJu
cyBhIFtTaGVsbFN0cmluZ10oI3NoZWxsc3RyaW5nc3RyKS4KCgojIyMgdGVt
cGRpcigpCgpFeGFtcGxlczoKCmBgYGphdmFzY3JpcHQKdmFyIHRtcCA9IHRl
bXBkaXIoKTsgLy8gIi90bXAiIGZvciBtb3N0ICpuaXggcGxhdGZvcm1zCmBg
YAoKU2VhcmNoZXMgYW5kIHJldHVybnMgc3RyaW5nIGNvbnRhaW5pbmcgYSB3
cml0ZWFibGUsIHBsYXRmb3JtLWRlcGVuZGVudCB0ZW1wb3JhcnkgZGlyZWN0
b3J5LgpGb2xsb3dzIFB5dGhvbidzIFt0ZW1wZmlsZSBhbGdvcml0aG1dKGh0
dHA6Ly9kb2NzLnB5dGhvbi5vcmcvbGlicmFyeS90ZW1wZmlsZS5odG1sI3Rl
bXBmaWxlLnRlbXBkaXIpLgoKCiMjIyB0ZXN0KGV4cHJlc3Npb24pCgpBdmFp
bGFibGUgZXhwcmVzc2lvbiBwcmltYXJpZXM6CgorIGAnLWInLCAncGF0aCdg
OiB0cnVlIGlmIHBhdGggaXMgYSBibG9jayBkZXZpY2UKKyBgJy1jJywgJ3Bh
dGgnYDogdHJ1ZSBpZiBwYXRoIGlzIGEgY2hhcmFjdGVyIGRldmljZQorIGAn
LWQnLCAncGF0aCdgOiB0cnVlIGlmIHBhdGggaXMgYSBkaXJlY3RvcnkKKyBg
Jy1lJywgJ3BhdGgnYDogdHJ1ZSBpZiBwYXRoIGV4aXN0cworIGAnLWYnLCAn
cGF0aCdgOiB0cnVlIGlmIHBhdGggaXMgYSByZWd1bGFyIGZpbGUKKyBgJy1M
JywgJ3BhdGgnYDogdHJ1ZSBpZiBwYXRoIGlzIGEgc3ltYm9saWMgbGluawor
IGAnLXAnLCAncGF0aCdgOiB0cnVlIGlmIHBhdGggaXMgYSBwaXBlIChGSUZP
KQorIGAnLVMnLCAncGF0aCdgOiB0cnVlIGlmIHBhdGggaXMgYSBzb2NrZXQK
CkV4YW1wbGVzOgoKYGBgamF2YXNjcmlwdAppZiAodGVzdCgnLWQnLCBwYXRo
KSkgeyAvKiBkbyBzb21ldGhpbmcgd2l0aCBkaXIgKi8gfTsKaWYgKCF0ZXN0
KCctZicsIHBhdGgpKSBjb250aW51ZTsgLy8gc2tpcCBpZiBpdCdzIGEgcmVn
dWxhciBmaWxlCmBgYAoKRXZhbHVhdGVzIGBleHByZXNzaW9uYCB1c2luZyB0
aGUgYXZhaWxhYmxlIHByaW1hcmllcyBhbmQgcmV0dXJucwpjb3JyZXNwb25k
aW5nIGJvb2xlYW4gdmFsdWUuCgoKIyMjIFNoZWxsU3RyaW5nLnByb3RvdHlw
ZS50byhmaWxlKQoKRXhhbXBsZXM6CgpgYGBqYXZhc2NyaXB0CmNhdCgnaW5w
dXQudHh0JykudG8oJ291dHB1dC50eHQnKTsKYGBgCgpBbmFsb2dvdXMgdG8g
dGhlIHJlZGlyZWN0aW9uIG9wZXJhdG9yIGA+YCBpbiBVbml4LCBidXQgd29y
a3Mgd2l0aApgU2hlbGxTdHJpbmdzYCAoc3VjaCBhcyB0aG9zZSByZXR1cm5l
ZCBieSBgY2F0YCwgYGdyZXBgLCBldGMuKS4gX0xpa2UgVW5peApyZWRpcmVj
dGlvbnMsIGB0bygpYCB3aWxsIG92ZXJ3cml0ZSBhbnkgZXhpc3RpbmcgZmls
ZSFfIFJldHVybnMgdGhlIHNhbWUKW1NoZWxsU3RyaW5nXSgjc2hlbGxzdHJp
bmdzdHIpIHRoaXMgb3BlcmF0ZWQgb24sIHRvIHN1cHBvcnQgY2hhaW5pbmcu
CgoKIyMjIFNoZWxsU3RyaW5nLnByb3RvdHlwZS50b0VuZChmaWxlKQoKRXhh
bXBsZXM6CgpgYGBqYXZhc2NyaXB0CmNhdCgnaW5wdXQudHh0JykudG9FbmQo
J291dHB1dC50eHQnKTsKYGBgCgpBbmFsb2dvdXMgdG8gdGhlIHJlZGlyZWN0
LWFuZC1hcHBlbmQgb3BlcmF0b3IgYD4+YCBpbiBVbml4LCBidXQgd29ya3Mg
d2l0aApgU2hlbGxTdHJpbmdzYCAoc3VjaCBhcyB0aG9zZSByZXR1cm5lZCBi
eSBgY2F0YCwgYGdyZXBgLCBldGMuKS4gUmV0dXJucyB0aGUKc2FtZSBbU2hl
bGxTdHJpbmddKCNzaGVsbHN0cmluZ3N0cikgdGhpcyBvcGVyYXRlZCBvbiwg
dG8gc3VwcG9ydCBjaGFpbmluZy4KCgojIyMgdG91Y2goW29wdGlvbnMsXSBm
aWxlIFssIGZpbGUgLi4uXSkKIyMjIHRvdWNoKFtvcHRpb25zLF0gZmlsZV9h
cnJheSkKCkF2YWlsYWJsZSBvcHRpb25zOgoKKyBgLWFgOiBDaGFuZ2Ugb25s
eSB0aGUgYWNjZXNzIHRpbWUKKyBgLWNgOiBEbyBub3QgY3JlYXRlIGFueSBm
aWxlcworIGAtbWA6IENoYW5nZSBvbmx5IHRoZSBtb2RpZmljYXRpb24gdGlt
ZQorIGB7Jy1kJzogc29tZURhdGV9YCwgYHtkYXRlOiBzb21lRGF0ZX1gOiBV
c2UgYHNvbWVEYXRlYCAoaW5zdGFuY2Ugb2YKICBgRGF0ZWApIGluc3RlYWQg
b2YgY3VycmVudCB0aW1lCisgYHsnLXInOiBmaWxlfWAsIGB7cmVmZXJlbmNl
OiBmaWxlfWA6IFVzZSBgZmlsZWAncyB0aW1lcyBpbnN0ZWFkIG9mIGN1cnJl
bnQKICAgdGltZQoKRXhhbXBsZXM6CgpgYGBqYXZhc2NyaXB0CnRvdWNoKCdz
b3VyY2UuanMnKTsKdG91Y2goJy1jJywgJ3BhdGgvdG8vZmlsZS5qcycpOwp0
b3VjaCh7ICctcic6ICdyZWZlcmVuY2VGaWxlLnR4dCcgfSwgJ3BhdGgvdG8v
ZmlsZS5qcycpOwp0b3VjaCh7IGRhdGU6IG5ldyBEYXRlKCdEZWNlbWJlciAx
NywgMTk5NSAwMzoyNDowMCcpIH0sICdwYXRoL3RvL2ZpbGUuanMnKTsKYGBg
CgpVcGRhdGUgdGhlIGFjY2VzcyBhbmQgbW9kaWZpY2F0aW9uIHRpbWVzIG9m
IGVhY2ggZmlsZSB0byB0aGUgY3VycmVudCB0aW1lLgpBIGZpbGUgYXJndW1l
bnQgdGhhdCBkb2VzIG5vdCBleGlzdCBpcyBjcmVhdGVkIGVtcHR5LCB1bmxl
c3MgYC1jYCBpcyBzdXBwbGllZC4KVGhpcyBpcyBhIHBhcnRpYWwgaW1wbGVt
ZW50YXRpb24gb2YKW2B0b3VjaCgxKWBdKGh0dHA6Ly9saW51eC5kaWUubmV0
L21hbi8xL3RvdWNoKS4gUmV0dXJucyBhCltTaGVsbFN0cmluZ10oI3NoZWxs
c3RyaW5nc3RyKSBpbmRpY2F0aW5nIHN1Y2Nlc3Mgb3IgZmFpbHVyZS4KCgoj
IyMgdW5pcShbb3B0aW9ucyxdIFtpbnB1dCwgW291dHB1dF1dKQoKQXZhaWxh
YmxlIG9wdGlvbnM6CgorIGAtaWA6IElnbm9yZSBjYXNlIHdoaWxlIGNvbXBh
cmluZworIGAtY2A6IFByZWZpeCBsaW5lcyBieSB0aGUgbnVtYmVyIG9mIG9j
Y3VycmVuY2VzCisgYC1kYDogT25seSBwcmludCBkdXBsaWNhdGUgbGluZXMs
IG9uZSBmb3IgZWFjaCBncm91cCBvZiBpZGVudGljYWwgbGluZXMKCkV4YW1w
bGVzOgoKYGBgamF2YXNjcmlwdAp1bmlxKCdmb28udHh0Jyk7CnVuaXEoJy1p
JywgJ2Zvby50eHQnKTsKdW5pcSgnLWNkJywgJ2Zvby50eHQnLCAnYmFyLnR4
dCcpOwpgYGAKCkZpbHRlciBhZGphY2VudCBtYXRjaGluZyBsaW5lcyBmcm9t
IGBpbnB1dGAuIFJldHVybnMgYQpbU2hlbGxTdHJpbmddKCNzaGVsbHN0cmlu
Z3N0cikuCgoKIyMjIHdoaWNoKGNvbW1hbmQpCgpFeGFtcGxlczoKCmBgYGph
dmFzY3JpcHQKdmFyIG5vZGVFeGVjID0gd2hpY2goJ25vZGUnKTsKYGBgCgpT
ZWFyY2hlcyBmb3IgYGNvbW1hbmRgIGluIHRoZSBzeXN0ZW0ncyBgUEFUSGAu
IE9uIFdpbmRvd3MsIHRoaXMgdXNlcyB0aGUKYFBBVEhFWFRgIHZhcmlhYmxl
IHRvIGFwcGVuZCB0aGUgZXh0ZW5zaW9uIGlmIGl0J3Mgbm90IGFscmVhZHkg
ZXhlY3V0YWJsZS4KUmV0dXJucyBhIFtTaGVsbFN0cmluZ10oI3NoZWxsc3Ry
aW5nc3RyKSBjb250YWluaW5nIHRoZSBhYnNvbHV0ZSBwYXRoIHRvCmBjb21t
YW5kYC4KCgojIyMgZXhpdChjb2RlKQoKRXhpdHMgdGhlIGN1cnJlbnQgcHJv
Y2VzcyB3aXRoIHRoZSBnaXZlbiBleGl0IGBjb2RlYC4KCiMjIyBlcnJvcigp
CgpUZXN0cyBpZiBlcnJvciBvY2N1cnJlZCBpbiB0aGUgbGFzdCBjb21tYW5k
LiBSZXR1cm5zIGEgdHJ1dGh5IHZhbHVlIGlmIGFuCmVycm9yIHJldHVybmVk
LCBvciBhIGZhbHN5IHZhbHVlIG90aGVyd2lzZS4KCioqTm90ZSoqOiBkbyBu
b3QgcmVseSBvbiB0aGUKcmV0dXJuIHZhbHVlIHRvIGJlIGFuIGVycm9yIG1l
c3NhZ2UuIElmIHlvdSBuZWVkIHRoZSBsYXN0IGVycm9yIG1lc3NhZ2UsIHVz
ZQp0aGUgYC5zdGRlcnJgIGF0dHJpYnV0ZSBmcm9tIHRoZSBsYXN0IGNvbW1h
bmQncyByZXR1cm4gdmFsdWUgaW5zdGVhZC4KCgojIyMgU2hlbGxTdHJpbmco
c3RyKQoKRXhhbXBsZXM6CgpgYGBqYXZhc2NyaXB0CnZhciBmb28gPSBuZXcg
U2hlbGxTdHJpbmcoJ2hlbGxvIHdvcmxkJyk7CmBgYAoKVGhpcyBpcyBhIGRl
ZGljYXRlZCB0eXBlIHJldHVybmVkIGJ5IG1vc3QgU2hlbGxKUyBtZXRob2Rz
LCB3aGljaCB3cmFwcyBhCnN0cmluZyAob3IgYXJyYXkpIHZhbHVlLiBUaGlz
IGhhcyBhbGwgdGhlIHN0cmluZyAob3IgYXJyYXkpIG1ldGhvZHMsIGJ1dAph
bHNvIGV4cG9zZXMgZXh0cmEgbWV0aG9kczogW2AudG8oKWBdKCNzaGVsbHN0
cmluZ3Byb3RvdHlwZXRvZmlsZSksCltgLnRvRW5kKClgXSgjc2hlbGxzdHJp
bmdwcm90b3R5cGV0b2VuZGZpbGUpLCBhbmQgYWxsIHRoZSBwaXBlLWFibGUg
bWV0aG9kcwooZXguIGAuY2F0KClgLCBgLmdyZXAoKWAsIGV0Yy4pLiBUaGlz
IGNhbiBiZSBlYXNpbHkgY29udmVydGVkIGludG8gYSBzdHJpbmcKYnkgY2Fs
bGluZyBgLnRvU3RyaW5nKClgLgoKVGhpcyB0eXBlIGFsc28gZXhwb3NlcyB0
aGUgY29ycmVzcG9uZGluZyBjb21tYW5kJ3Mgc3Rkb3V0LCBzdGRlcnIsIGFu
ZApyZXR1cm4gc3RhdHVzIGNvZGUgdmlhIHRoZSBgLnN0ZG91dGAgKHN0cmlu
ZyksIGAuc3RkZXJyYCAoc3RyaW5nKSwgYW5kCmAuY29kZWAgKG51bWJlcikg
cHJvcGVydGllcyByZXNwZWN0aXZlbHkuCgoKIyMjIGVudlsnVkFSX05BTUUn
XQoKT2JqZWN0IGNvbnRhaW5pbmcgZW52aXJvbm1lbnQgdmFyaWFibGVzIChi
b3RoIGdldHRlciBhbmQgc2V0dGVyKS4gU2hvcnRjdXQKdG8gYHByb2Nlc3Mu
ZW52YC4KCiMjIyBQaXBlcwoKRXhhbXBsZXM6CgpgYGBqYXZhc2NyaXB0Cmdy
ZXAoJ2ZvbycsICdmaWxlMS50eHQnLCAnZmlsZTIudHh0Jykuc2VkKC9vL2cs
ICdhJykudG8oJ291dHB1dC50eHQnKTsKZWNobygnZmlsZXMgd2l0aCBvXCdz
IGluIHRoZSBuYW1lOlxuJyArIGxzKCkuZ3JlcCgnbycpKTsKY2F0KCd0ZXN0
LmpzJykuZXhlYygnbm9kZScpOyAvLyBwaXBlIHRvIGV4ZWMoKSBjYWxsCmBg
YAoKQ29tbWFuZHMgY2FuIHNlbmQgdGhlaXIgb3V0cHV0IHRvIGFub3RoZXIg
Y29tbWFuZCBpbiBhIHBpcGUtbGlrZSBmYXNoaW9uLgpgc2VkYCwgYGdyZXBg
LCBgY2F0YCwgYGV4ZWNgLCBgdG9gLCBhbmQgYHRvRW5kYCBjYW4gYXBwZWFy
IG9uIHRoZSByaWdodC1oYW5kCnNpZGUgb2YgYSBwaXBlLiBQaXBlcyBjYW4g
YmUgY2hhaW5lZC4KCiMjIENvbmZpZ3VyYXRpb24KCgojIyMgY29uZmlnLnNp
bGVudAoKRXhhbXBsZToKCmBgYGphdmFzY3JpcHQKdmFyIHNoID0gcmVxdWly
ZSgnc2hlbGxqcycpOwp2YXIgc2lsZW50U3RhdGUgPSBzaC5jb25maWcuc2ls
ZW50OyAvLyBzYXZlIG9sZCBzaWxlbnQgc3RhdGUKc2guY29uZmlnLnNpbGVu
dCA9IHRydWU7Ci8qIC4uLiAqLwpzaC5jb25maWcuc2lsZW50ID0gc2lsZW50
U3RhdGU7IC8vIHJlc3RvcmUgb2xkIHNpbGVudCBzdGF0ZQpgYGAKClN1cHBy
ZXNzZXMgYWxsIGNvbW1hbmQgb3V0cHV0IGlmIGB0cnVlYCwgZXhjZXB0IGZv
ciBgZWNobygpYCBjYWxscy4KRGVmYXVsdCBpcyBgZmFsc2VgLgoKIyMjIGNv
bmZpZy5mYXRhbAoKRXhhbXBsZToKCmBgYGphdmFzY3JpcHQKcmVxdWlyZSgn
c2hlbGxqcy9nbG9iYWwnKTsKY29uZmlnLmZhdGFsID0gdHJ1ZTsgLy8gb3Ig
c2V0KCctZScpOwpjcCgndGhpc19maWxlX2RvZXNfbm90X2V4aXN0JywgJy9k
ZXYvbnVsbCcpOyAvLyB0aHJvd3MgRXJyb3IgaGVyZQovKiBtb3JlIGNvbW1h
bmRzLi4uICovCmBgYAoKSWYgYHRydWVgLCB0aGUgc2NyaXB0IHdpbGwgdGhy
b3cgYSBKYXZhc2NyaXB0IGVycm9yIHdoZW4gYW55IHNoZWxsLmpzCmNvbW1h
bmQgZW5jb3VudGVycyBhbiBlcnJvci4gRGVmYXVsdCBpcyBgZmFsc2VgLiBU
aGlzIGlzIGFuYWxvZ291cyB0bwpCYXNoJ3MgYHNldCAtZWAuCgojIyMgY29u
ZmlnLnZlcmJvc2UKCkV4YW1wbGU6CgpgYGBqYXZhc2NyaXB0CmNvbmZpZy52
ZXJib3NlID0gdHJ1ZTsgLy8gb3Igc2V0KCctdicpOwpjZCgnZGlyLycpOwpy
bSgnLXJmJywgJ2Zvby50eHQnLCAnYmFyLnR4dCcpOwpleGVjKCdlY2hvIGhl
bGxvJyk7CmBgYAoKV2lsbCBwcmludCBlYWNoIGNvbW1hbmQgYXMgZm9sbG93
czoKCmBgYApjZCBkaXIvCnJtIC1yZiBmb28udHh0IGJhci50eHQKZXhlYyBl
Y2hvIGhlbGxvCmBgYAoKIyMjIGNvbmZpZy5nbG9iT3B0aW9ucwoKRXhhbXBs
ZToKCmBgYGphdmFzY3JpcHQKY29uZmlnLmdsb2JPcHRpb25zID0ge25vZGly
OiB0cnVlfTsKYGBgCgpVc2UgdGhpcyB2YWx1ZSBmb3IgY2FsbHMgdG8gYGds
b2Iuc3luYygpYCBpbnN0ZWFkIG9mIHRoZSBkZWZhdWx0IG9wdGlvbnMuCgoj
IyMgY29uZmlnLnJlc2V0KCkKCkV4YW1wbGU6CgpgYGBqYXZhc2NyaXB0CnZh
ciBzaGVsbCA9IHJlcXVpcmUoJ3NoZWxsanMnKTsKLy8gTWFrZSBjaGFuZ2Vz
IHRvIHNoZWxsLmNvbmZpZywgYW5kIGRvIHN0dWZmLi4uCi8qIC4uLiAqLwpz
aGVsbC5jb25maWcucmVzZXQoKTsgLy8gcmVzZXQgdG8gb3JpZ2luYWwgc3Rh
dGUKLy8gRG8gbW9yZSBzdHVmZiwgYnV0IHdpdGggb3JpZ2luYWwgc2V0dGlu
Z3MKLyogLi4uICovCmBgYAoKUmVzZXQgYHNoZWxsLmNvbmZpZ2AgdG8gdGhl
IGRlZmF1bHRzOgoKYGBgamF2YXNjcmlwdAp7CiAgZmF0YWw6IGZhbHNlLAog
IGdsb2JPcHRpb25zOiB7fSwKICBtYXhkZXB0aDogMjU1LAogIG5vZ2xvYjog
ZmFsc2UsCiAgc2lsZW50OiBmYWxzZSwKICB2ZXJib3NlOiBmYWxzZSwKfQpg
YGAKCiMjIFRlYW0KCnwgWyFbTmF0ZSBGaXNjaGVyXShodHRwczovL2F2YXRh
cnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvNTgwMTUyMT9zPTEzMCldKGh0
dHBzOi8vZ2l0aHViLmNvbS9uZmlzY2hlcikgfCBbIVtCcmFuZG9uIEZyZWl0
YWddKGh0dHBzOi8vYXZhdGFyczEuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3Uv
NTk4ODA1NT92PTMmcz0xMzApXShodHRwOi8vZ2l0aHViLmNvbS9mcmVpdGFn
YnIpIHwKfDotLS06fDotLS06fAp8IFtOYXRlIEZpc2NoZXJdKGh0dHBzOi8v
Z2l0aHViLmNvbS9uZmlzY2hlcikgfCBbQnJhbmRvbiBGcmVpdGFnXShodHRw
Oi8vZ2l0aHViLmNvbS9mcmVpdGFnYnIpIHwK
",,"bGFuZ3VhZ2U6IG5vZGVfanMKc3VkbzogZmFsc2UKbm9kZV9qczoKICAtIDYK
ICAtIDcKICAtIDgKICAtIDkKICAtIDEwCiAgLSAxMQogIC0gMTIKICAtIDEz
CgpvczoKICAtIGxpbnV4CiAgLSBvc3gKc2NyaXB0OgogIC0gbnBtIHJ1biB0
ZXN0LXdpdGgtY292ZXJhZ2UKICAtIG5wbSBydW4gbGludAogICMgbWFrZSBz
dXJlIHdoZW4gdGhlIGRvY3MgYXJlIGdlbmVyYXRlZCBub3RoaW5nIGNoYW5n
ZXMgKGEuay5hLiB0aGUgZG9jcyBoYXZlIGFscmVhZHkgYmVlbiBnZW5lcmF0
ZWQpCiAgLSBucG0gcnVuIGdlbmRvY3MKICAtIG5wbSBydW4gY2hlY2stbm9k
ZS1zdXBwb3J0CiAgLSBucG0gcnVuIGFmdGVyLXRyYXZpcyAiTWFrZSBzdXJl
IHRvIGdlbmVyYXRlIGRvY3MhIgphZnRlcl9zdWNjZXNzOgogIC0gbnBtIHJ1
biBjb2RlY292IC0tIC1mIGNvdmVyYWdlL2xjb3YuaW5mbwoKbm90aWZpY2F0
aW9uczoKICBlbWFpbDogZmFsc2UK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'requests-html',122775780,b'Pythonic HTML Parsing for Humans\xe2\x84\xa2',b'Python',86,10418,,10418,False,b'https://api.github.com/repos/psf/requests-html/forks',"UmVxdWVzdHMtSFRNTDogSFRNTCBQYXJzaW5nIGZvciBIdW1hbnPihKIKPT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CgouLiBpbWFn
ZTo6IGh0dHBzOi8vZmFybTUuc3RhdGljZmxpY2tyLmNvbS80Njk1LzM5MTUy
NzcwOTE0X2EzYWI4YWY0MGRfa19kLmpwZwoKLi4gaW1hZ2U6OiBodHRwczov
L3RyYXZpcy1jaS5jb20vcHNmL3JlcXVlc3RzLWh0bWwuc3ZnP2JyYW5jaD1t
YXN0ZXIKICAgIDp0YXJnZXQ6IGh0dHBzOi8vdHJhdmlzLWNpLmNvbS9wc2Yv
cmVxdWVzdHMtaHRtbAoKVGhpcyBsaWJyYXJ5IGludGVuZHMgdG8gbWFrZSBw
YXJzaW5nIEhUTUwgKGUuZy4gc2NyYXBpbmcgdGhlIHdlYikgYXMKc2ltcGxl
IGFuZCBpbnR1aXRpdmUgYXMgcG9zc2libGUuCgpXaGVuIHVzaW5nIHRoaXMg
bGlicmFyeSB5b3UgYXV0b21hdGljYWxseSBnZXQ6CgotICoqRnVsbCBKYXZh
U2NyaXB0IHN1cHBvcnQqKiEKLSAqQ1NTIFNlbGVjdG9ycyogKGEuay5hIGpR
dWVyeS1zdHlsZSwgdGhhbmtzIHRvIFB5UXVlcnkpLgotICpYUGF0aCBTZWxl
Y3RvcnMqLCBmb3IgdGhlIGZhaW50IG9mIGhlYXJ0LgotIE1vY2tlZCB1c2Vy
LWFnZW50IChsaWtlIGEgcmVhbCB3ZWIgYnJvd3NlcikuCi0gQXV0b21hdGlj
IGZvbGxvd2luZyBvZiByZWRpcmVjdHMuCi0gQ29ubmVjdGlvbuKAk3Bvb2xp
bmcgYW5kIGNvb2tpZSBwZXJzaXN0ZW5jZS4KLSBUaGUgUmVxdWVzdHMgZXhw
ZXJpZW5jZSB5b3Uga25vdyBhbmQgbG92ZSwgd2l0aCBtYWdpY2FsIHBhcnNp
bmcgYWJpbGl0aWVzLgotICoqQXN5bmMgU3VwcG9ydCoqCgouLiBPdGhlciBu
aWNlIGZlYXR1cmVzIGluY2x1ZGU6CgogICAgLSBNYXJrZG93biBleHBvcnQg
b2YgcGFnZXMgYW5kIGVsZW1lbnRzLgoKClR1dG9yaWFsICYgVXNhZ2UKPT09
PT09PT09PT09PT09PQoKTWFrZSBhIEdFVCByZXF1ZXN0IHRvICdweXRob24u
b3JnJywgdXNpbmcgUmVxdWVzdHM6CgouLiBjb2RlLWJsb2NrOjogcHljb24K
CiAgICA+Pj4gZnJvbSByZXF1ZXN0c19odG1sIGltcG9ydCBIVE1MU2Vzc2lv
bgogICAgPj4+IHNlc3Npb24gPSBIVE1MU2Vzc2lvbigpCiAgICA+Pj4gciA9
IHNlc3Npb24uZ2V0KCdodHRwczovL3B5dGhvbi5vcmcvJykKClRyeSBhc3lu
YyBhbmQgZ2V0IHNvbWUgc2l0ZXMgYXQgdGhlIHNhbWUgdGltZToKCi4uIGNv
ZGUtYmxvY2s6OiBweWNvbgoKICAgID4+PiBmcm9tIHJlcXVlc3RzX2h0bWwg
aW1wb3J0IEFzeW5jSFRNTFNlc3Npb24KICAgID4+PiBhc2Vzc2lvbiA9IEFz
eW5jSFRNTFNlc3Npb24oKQogICAgPj4+IGFzeW5jIGRlZiBnZXRfcHl0aG9u
b3JnKCk6CiAgICAuLi4gICAgIHIgPSBhd2FpdCBhc2Vzc2lvbi5nZXQoJ2h0
dHBzOi8vcHl0aG9uLm9yZy8nKQogICAgLi4uICAgICByZXR1cm4gcgogICAg
Li4uCiAgICA+Pj4gYXN5bmMgZGVmIGdldF9yZWRkaXQoKToKICAgIC4uLiAg
ICByID0gYXdhaXQgYXNlc3Npb24uZ2V0KCdodHRwczovL3JlZGRpdC5jb20v
JykKICAgIC4uLiAgICByZXR1cm4gcgogICAgLi4uCiAgICA+Pj4gYXN5bmMg
ZGVmIGdldF9nb29nbGUoKToKICAgIC4uLiAgICByID0gYXdhaXQgYXNlc3Np
b24uZ2V0KCdodHRwczovL2dvb2dsZS5jb20vJykKICAgIC4uLiAgICByZXR1
cm4gcgogICAgLi4uCiAgICA+Pj4gcmVzdWx0cyA9IGFzZXNzaW9uLnJ1bihn
ZXRfcHl0aG9ub3JnLCBnZXRfcmVkZGl0LCBnZXRfZ29vZ2xlKQogICAgPj4+
IHJlc3VsdHMgIyBjaGVjayB0aGUgcmVxdWVzdHMgYWxsIHJldHVybmVkIGEg
MjAwIChzdWNjZXNzKSBjb2RlCiAgICBbPFJlc3BvbnNlIFsyMDBdPiwgPFJl
c3BvbnNlIFsyMDBdPiwgPFJlc3BvbnNlIFsyMDBdPl0KICAgID4+PiAjIEVh
Y2ggaXRlbSBpbiB0aGUgcmVzdWx0cyBsaXN0IGlzIGEgcmVzcG9uc2Ugb2Jq
ZWN0IGFuZCBjYW4gYmUgaW50ZXJhY3RlZCB3aXRoIGFzIHN1Y2gKICAgID4+
PiBmb3IgcmVzdWx0IGluIHJlc3VsdHM6IAogICAgLi4uICAgICBwcmludChy
ZXN1bHQuaHRtbC51cmwpCiAgICAuLi4gCiAgICBodHRwczovL3d3dy5weXRo
b24ub3JnLwogICAgaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS8KICAgIGh0dHBz
Oi8vd3d3LnJlZGRpdC5jb20vCgpOb3RlIHRoYXQgdGhlIG9yZGVyIG9mIHRo
ZSBvYmplY3RzIGluIHRoZSByZXN1bHRzIGxpc3QgcmVwcmVzZW50cyB0aGUg
b3JkZXIgdGhleSB3ZXJlIHJldHVybmVkIGluLCBub3QgdGhlIG9yZGVyIHRo
YXQgdGhlIGNvcm91dGluZXMgYXJlIHBhc3NlZCB0byB0aGUgYGBydW5gYCBt
ZXRob2QsIHdoaWNoIGlzIHNob3duIGluIHRoZSBleGFtcGx5IGJ5IHRoZSBv
cmRlciBiZWluZyBkaWZmZXJlbnQuIAoKR3JhYiBhIGxpc3Qgb2YgYWxsIGxp
bmtzIG9uIHRoZSBwYWdlLCBhc+KAk2lzIChhbmNob3JzIGV4Y2x1ZGVkKToK
Ci4uIGNvZGUtYmxvY2s6OiBweWNvbgoKICAgID4+PiByLmh0bWwubGlua3MK
ICAgIHsnLy9kb2NzLnB5dGhvbi5vcmcvMy90dXRvcmlhbC8nLCAnL2Fib3V0
L2FwcHMvJywgJ2h0dHBzOi8vZ2l0aHViLmNvbS9weXRob24vcHl0aG9uZG90
b3JnL2lzc3VlcycsICcvYWNjb3VudHMvbG9naW4vJywgJy9kZXYvcGVwcy8n
LCAnL2Fib3V0L2xlZ2FsLycsICcvL2RvY3MucHl0aG9uLm9yZy8zL3R1dG9y
aWFsL2ludHJvZHVjdGlvbi5odG1sI2xpc3RzJywgJy9kb3dubG9hZC9hbHRl
cm5hdGl2ZXMnLCAnaHR0cDovL2ZlZWRwcm94eS5nb29nbGUuY29tL35yL1B5
dGhvbkluc2lkZXIvfjMva2loZDJEVzk4WVkvcHl0aG9uLTM3MGE0LWlzLWF2
YWlsYWJsZS1mb3ItdGVzdGluZy5odG1sJywgJy9kb3dubG9hZC9vdGhlci8n
LCAnL2Rvd25sb2Fkcy93aW5kb3dzLycsICdodHRwczovL21haWwucHl0aG9u
Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL3B5dGhvbi1kZXYnLCAnL2RvYy9hdics
ICdodHRwczovL2Rldmd1aWRlLnB5dGhvbi5vcmcvJywgJy9hYm91dC9zdWNj
ZXNzLyNlbmdpbmVlcmluZycsICdodHRwczovL3dpa2kucHl0aG9uLm9yZy9t
b2luL1B5dGhvbkV2ZW50c0NhbGVuZGFyI1N1Ym1pdHRpbmdfYW5fRXZlbnQn
LCAnaHR0cHM6Ly93d3cub3BlbnN0YWNrLm9yZycsICcvYWJvdXQvZ2V0dGlu
Z3N0YXJ0ZWQvJywgJ2h0dHA6Ly9mZWVkcHJveHkuZ29vZ2xlLmNvbS9+ci9Q
eXRob25JbnNpZGVyL34zL0FNb0JlbDhiOE1jL3B5dGhvbi0zLmh0bWwnLCAn
L3N1Y2Nlc3Mtc3Rvcmllcy9pbmR1c3RyaWFsLWxpZ2h0LW1hZ2ljLXJ1bnMt
cHl0aG9uLycsICdodHRwOi8vZG9jcy5weXRob24ub3JnLzMvdHV0b3JpYWwv
aW50cm9kdWN0aW9uLmh0bWwjdXNpbmctcHl0aG9uLWFzLWEtY2FsY3VsYXRv
cicsICcvJywgJ2h0dHA6Ly9weWZvdW5kLmJsb2dzcG90LmNvbS8nLCAnL2V2
ZW50cy9weXRob24tZXZlbnRzL3Bhc3QvJywgJy9kb3dubG9hZHMvcmVsZWFz
ZS9weXRob24tMjcxNC8nLCAnaHR0cHM6Ly93aWtpLnB5dGhvbi5vcmcvbW9p
bi9QeXRob25Cb29rcycsICdodHRwOi8vcGx1cy5nb29nbGUuY29tLytQeXRo
b24nLCAnaHR0cHM6Ly93aWtpLnB5dGhvbi5vcmcvbW9pbi8nLCAnaHR0cHM6
Ly9zdGF0dXMucHl0aG9uLm9yZy8nLCAnL2NvbW11bml0eS93b3Jrc2hvcHMv
JywgJy9jb21tdW5pdHkvbGlzdHMvJywgJ2h0dHA6Ly9idWlsZGJvdC5uZXQv
JywgJy9jb21tdW5pdHkvYXdhcmRzJywgJ2h0dHA6Ly90d2l0dGVyLmNvbS9U
aGVQU0YnLCAnaHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy9saWNlbnNlLmh0
bWwnLCAnL3BzZi9kb25hdGlvbnMvJywgJ2h0dHA6Ly93aWtpLnB5dGhvbi5v
cmcvbW9pbi9MYW5ndWFnZXMnLCAnL2Rldi8nLCAnL2V2ZW50cy9weXRob24t
dXNlci1ncm91cC8nLCAnaHR0cHM6Ly93aWtpLnF0LmlvL1B5U2lkZScsICcv
Y29tbXVuaXR5L3NpZ3MvJywgJ2h0dHBzOi8vd2lraS5nbm9tZS5vcmcvUHJv
amVjdHMvUHlHT2JqZWN0JywgJ2h0dHA6Ly93d3cuYW5zaWJsZS5jb20nLCAn
aHR0cDovL3d3dy5zYWx0c3RhY2suY29tJywgJ2h0dHA6Ly9wbGFuZXRweXRo
b24ub3JnLycsICcvZXZlbnRzL3B5dGhvbi1ldmVudHMnLCAnL2Fib3V0L2hl
bHAvJywgJy9ldmVudHMvcHl0aG9uLXVzZXItZ3JvdXAvcGFzdC8nLCAnL2Fi
b3V0L3N1Y2Nlc3MvJywgJy9wc2YtbGFuZGluZy8nLCAnL2Fib3V0L2FwcHMn
LCAnL2Fib3V0LycsICdodHRwOi8vd3d3Lnd4cHl0aG9uLm9yZy8nLCAnL2V2
ZW50cy9weXRob24tdXNlci1ncm91cC82NjUvJywgJ2h0dHBzOi8vd3d3LnB5
dGhvbi5vcmcvcHNmL2NvZGVvZmNvbmR1Y3QvJywgJy9kZXYvcGVwcy9wZXBz
LnJzcycsICcvZG93bmxvYWRzL3NvdXJjZS8nLCAnL3BzZi9zcG9uc29yc2hp
cC9zcG9uc29ycy8nLCAnaHR0cDovL2JvdHRsZXB5Lm9yZycsICdodHRwOi8v
cm91bmR1cC5zb3VyY2Vmb3JnZS5uZXQvJywgJ2h0dHA6Ly9wYW5kYXMucHlk
YXRhLm9yZy8nLCAnaHR0cDovL2Jyb2NodXJlLmdldHB5dGhvbi5pbmZvLycs
ICdodHRwczovL2J1Z3MucHl0aG9uLm9yZy8nLCAnL2NvbW11bml0eS9tZXJj
aGFuZGlzZS8nLCAnaHR0cDovL3Rvcm5hZG93ZWIub3JnJywgJy9ldmVudHMv
cHl0aG9uLXVzZXItZ3JvdXAvNjUwLycsICdodHRwOi8vZmxhc2sucG9jb28u
b3JnLycsICcvZG93bmxvYWRzL3JlbGVhc2UvcHl0aG9uLTM2NC8nLCAnL2V2
ZW50cy9weXRob24tdXNlci1ncm91cC82NjAvJywgJy9ldmVudHMvcHl0aG9u
LXVzZXItZ3JvdXAvNjM4LycsICcvcHNmLycsICcvZG9jLycsICdodHRwOi8v
YmxvZy5weXRob24ub3JnJywgJy9ldmVudHMvcHl0aG9uLWV2ZW50cy82MDQv
JywgJy9hYm91dC9zdWNjZXNzLyNnb3Zlcm5tZW50JywgJ2h0dHA6Ly9weXRo
b24ub3JnL2Rldi9wZXBzLycsICdodHRwczovL2RvY3MucHl0aG9uLm9yZycs
ICdodHRwOi8vZmVlZHByb3h5Lmdvb2dsZS5jb20vfnIvUHl0aG9uSW5zaWRl
ci9+My96VkM4MHNxOXMwMC9weXRob24tMzY0LWlzLW5vdy1hdmFpbGFibGUu
aHRtbCcsICcvdXNlcnMvbWVtYmVyc2hpcC8nLCAnL2Fib3V0L3N1Y2Nlc3Mv
I2FydHMnLCAnaHR0cHM6Ly93aWtpLnB5dGhvbi5vcmcvbW9pbi9QeXRob24y
b3JQeXRob24zJywgJy9kb3dubG9hZHMvJywgJy9qb2JzLycsICdodHRwOi8v
dHJhYy5lZGdld2FsbC5vcmcvJywgJ2h0dHA6Ly9mZWVkcHJveHkuZ29vZ2xl
LmNvbS9+ci9QeXRob25JbnNpZGVyL34zL3doNzNfMUEtTjdRL3B5dGhvbi0z
NTVyYzEtYW5kLXB5dGhvbi0zNDhyYzEtYXJlLW5vdy5odG1sJywgJy9wcml2
YWN5LycsICdodHRwczovL3B5cGkucHl0aG9uLm9yZy8nLCAnaHR0cDovL3d3
dy5yaXZlcmJhbmtjb21wdXRpbmcuY28udWsvc29mdHdhcmUvcHlxdC9pbnRy
bycsICdodHRwOi8vd3d3LnNjaXB5Lm9yZycsICcvY29tbXVuaXR5L2ZvcnVt
cy8nLCAnL2Fib3V0L3N1Y2Nlc3MvI3NjaWVudGlmaWMnLCAnL2Fib3V0L3N1
Y2Nlc3MvI3NvZnR3YXJlLWRldmVsb3BtZW50JywgJy9zaGVsbC8nLCAnL2Fj
Y291bnRzL3NpZ251cC8nLCAnaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcHl0
aG9ubGFuZz9mcmVmPXRzJywgJy9jb21tdW5pdHkvJywgJ2h0dHBzOi8va2l2
eS5vcmcvJywgJy9hYm91dC9xdW90ZXMvJywgJ2h0dHA6Ly93d3cud2ViMnB5
LmNvbS8nLCAnL2NvbW11bml0eS9sb2dvcy8nLCAnL2NvbW11bml0eS9kaXZl
cnNpdHkvJywgJy9ldmVudHMvY2FsZW5kYXJzLycsICdodHRwczovL3dpa2ku
cHl0aG9uLm9yZy9tb2luL0JlZ2lubmVyc0d1aWRlJywgJy9zdWNjZXNzLXN0
b3JpZXMvJywgJy9kb2MvZXNzYXlzLycsICcvZGV2L2NvcmUtbWVudG9yc2hp
cC8nLCAnaHR0cDovL2lweXRob24ub3JnJywgJy9ldmVudHMvJywgJy8vZG9j
cy5weXRob24ub3JnLzMvdHV0b3JpYWwvY29udHJvbGZsb3cuaHRtbCcsICcv
YWJvdXQvc3VjY2Vzcy8jZWR1Y2F0aW9uJywgJy9ibG9ncy8nLCAnL2NvbW11
bml0eS9pcmMvJywgJ2h0dHA6Ly9weWNvbi5ibG9nc3BvdC5jb20vJywgJy8v
am9icy5weXRob24ub3JnJywgJ2h0dHA6Ly93d3cucHlsb25zcHJvamVjdC5v
cmcvJywgJ2h0dHA6Ly93d3cuZGphbmdvcHJvamVjdC5jb20vJywgJy9kb3du
bG9hZHMvbWFjLW9zeC8nLCAnL2Fib3V0L3N1Y2Nlc3MvI2J1c2luZXNzJywg
J2h0dHA6Ly9mZWVkcHJveHkuZ29vZ2xlLmNvbS9+ci9QeXRob25JbnNpZGVy
L34zL3hfYzlEMFMtNEM0L3B5dGhvbi0zNzBiMS1pcy1ub3ctYXZhaWxhYmxl
LWZvci5odG1sJywgJ2h0dHA6Ly93aWtpLnB5dGhvbi5vcmcvbW9pbi9Ua0lu
dGVyJywgJ2h0dHBzOi8vZG9jcy5weXRob24ub3JnL2ZhcS8nLCAnLy9kb2Nz
LnB5dGhvbi5vcmcvMy90dXRvcmlhbC9jb250cm9sZmxvdy5odG1sI2RlZmlu
aW5nLWZ1bmN0aW9ucyd9CgpHcmFiIGEgbGlzdCBvZiBhbGwgbGlua3Mgb24g
dGhlIHBhZ2UsIGluIGFic29sdXRlIGZvcm0gKGFuY2hvcnMgZXhjbHVkZWQp
OgoKLi4gY29kZS1ibG9jazo6IHB5Y29uCgogICAgPj4+IHIuaHRtbC5hYnNv
bHV0ZV9saW5rcwogICAgeydodHRwczovL2dpdGh1Yi5jb20vcHl0aG9uL3B5
dGhvbmRvdG9yZy9pc3N1ZXMnLCAnaHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcv
My90dXRvcmlhbC8nLCAnaHR0cHM6Ly93d3cucHl0aG9uLm9yZy9hYm91dC9z
dWNjZXNzLycsICdodHRwOi8vZmVlZHByb3h5Lmdvb2dsZS5jb20vfnIvUHl0
aG9uSW5zaWRlci9+My9raWhkMkRXOThZWS9weXRob24tMzcwYTQtaXMtYXZh
aWxhYmxlLWZvci10ZXN0aW5nLmh0bWwnLCAnaHR0cHM6Ly93d3cucHl0aG9u
Lm9yZy9kZXYvcGVwcy8nLCAnaHR0cHM6Ly9tYWlsLnB5dGhvbi5vcmcvbWFp
bG1hbi9saXN0aW5mby9weXRob24tZGV2JywgJ2h0dHBzOi8vd3d3LnB5dGhv
bi5vcmcvZG9jLycsICdodHRwczovL3d3dy5weXRob24ub3JnLycsICdodHRw
czovL3d3dy5weXRob24ub3JnL2Fib3V0LycsICdodHRwczovL3d3dy5weXRo
b24ub3JnL2V2ZW50cy9weXRob24tZXZlbnRzL3Bhc3QvJywgJ2h0dHBzOi8v
ZGV2Z3VpZGUucHl0aG9uLm9yZy8nLCAnaHR0cHM6Ly93aWtpLnB5dGhvbi5v
cmcvbW9pbi9QeXRob25FdmVudHNDYWxlbmRhciNTdWJtaXR0aW5nX2FuX0V2
ZW50JywgJ2h0dHBzOi8vd3d3Lm9wZW5zdGFjay5vcmcnLCAnaHR0cDovL2Zl
ZWRwcm94eS5nb29nbGUuY29tL35yL1B5dGhvbkluc2lkZXIvfjMvQU1vQmVs
OGI4TWMvcHl0aG9uLTMuaHRtbCcsICdodHRwczovL2RvY3MucHl0aG9uLm9y
Zy8zL3R1dG9yaWFsL2ludHJvZHVjdGlvbi5odG1sI2xpc3RzJywgJ2h0dHA6
Ly9kb2NzLnB5dGhvbi5vcmcvMy90dXRvcmlhbC9pbnRyb2R1Y3Rpb24uaHRt
bCN1c2luZy1weXRob24tYXMtYS1jYWxjdWxhdG9yJywgJ2h0dHA6Ly9weWZv
dW5kLmJsb2dzcG90LmNvbS8nLCAnaHR0cHM6Ly93aWtpLnB5dGhvbi5vcmcv
bW9pbi9QeXRob25Cb29rcycsICdodHRwOi8vcGx1cy5nb29nbGUuY29tLytQ
eXRob24nLCAnaHR0cHM6Ly93aWtpLnB5dGhvbi5vcmcvbW9pbi8nLCAnaHR0
cHM6Ly93d3cucHl0aG9uLm9yZy9ldmVudHMvcHl0aG9uLWV2ZW50cycsICdo
dHRwczovL3N0YXR1cy5weXRob24ub3JnLycsICdodHRwczovL3d3dy5weXRo
b24ub3JnL2Fib3V0L2FwcHMnLCAnaHR0cHM6Ly93d3cucHl0aG9uLm9yZy9k
b3dubG9hZHMvcmVsZWFzZS9weXRob24tMjcxNC8nLCAnaHR0cHM6Ly93d3cu
cHl0aG9uLm9yZy9wc2YvZG9uYXRpb25zLycsICdodHRwOi8vYnVpbGRib3Qu
bmV0LycsICdodHRwOi8vdHdpdHRlci5jb20vVGhlUFNGJywgJ2h0dHBzOi8v
ZG9jcy5weXRob24ub3JnLzMvbGljZW5zZS5odG1sJywgJ2h0dHA6Ly93aWtp
LnB5dGhvbi5vcmcvbW9pbi9MYW5ndWFnZXMnLCAnaHR0cHM6Ly9kb2NzLnB5
dGhvbi5vcmcvZmFxLycsICdodHRwczovL2pvYnMucHl0aG9uLm9yZycsICdo
dHRwczovL3d3dy5weXRob24ub3JnL2Fib3V0L3N1Y2Nlc3MvI3NvZnR3YXJl
LWRldmVsb3BtZW50JywgJ2h0dHBzOi8vd3d3LnB5dGhvbi5vcmcvYWJvdXQv
c3VjY2Vzcy8jZWR1Y2F0aW9uJywgJ2h0dHBzOi8vd3d3LnB5dGhvbi5vcmcv
Y29tbXVuaXR5L2xvZ29zLycsICdodHRwczovL3d3dy5weXRob24ub3JnL2Rv
Yy9hdicsICdodHRwczovL3dpa2kucXQuaW8vUHlTaWRlJywgJ2h0dHBzOi8v
d3d3LnB5dGhvbi5vcmcvZXZlbnRzL3B5dGhvbi11c2VyLWdyb3VwLzY2MC8n
LCAnaHR0cHM6Ly93aWtpLmdub21lLm9yZy9Qcm9qZWN0cy9QeUdPYmplY3Qn
LCAnaHR0cDovL3d3dy5hbnNpYmxlLmNvbScsICdodHRwOi8vd3d3LnNhbHRz
dGFjay5jb20nLCAnaHR0cHM6Ly93d3cucHl0aG9uLm9yZy9kZXYvcGVwcy9w
ZXBzLnJzcycsICdodHRwOi8vcGxhbmV0cHl0aG9uLm9yZy8nLCAnaHR0cHM6
Ly93d3cucHl0aG9uLm9yZy9ldmVudHMvcHl0aG9uLXVzZXItZ3JvdXAvcGFz
dC8nLCAnaHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy90dXRvcmlhbC9jb250
cm9sZmxvdy5odG1sI2RlZmluaW5nLWZ1bmN0aW9ucycsICdodHRwczovL3d3
dy5weXRob24ub3JnL2NvbW11bml0eS9kaXZlcnNpdHkvJywgJ2h0dHBzOi8v
ZG9jcy5weXRob24ub3JnLzMvdHV0b3JpYWwvY29udHJvbGZsb3cuaHRtbCcs
ICdodHRwczovL3d3dy5weXRob24ub3JnL2NvbW11bml0eS9hd2FyZHMnLCAn
aHR0cHM6Ly93d3cucHl0aG9uLm9yZy9ldmVudHMvcHl0aG9uLXVzZXItZ3Jv
dXAvNjM4LycsICdodHRwczovL3d3dy5weXRob24ub3JnL2Fib3V0L2xlZ2Fs
LycsICdodHRwczovL3d3dy5weXRob24ub3JnL2Rldi8nLCAnaHR0cHM6Ly93
d3cucHl0aG9uLm9yZy9kb3dubG9hZC9hbHRlcm5hdGl2ZXMnLCAnaHR0cHM6
Ly93d3cucHl0aG9uLm9yZy9kb3dubG9hZHMvJywgJ2h0dHBzOi8vd3d3LnB5
dGhvbi5vcmcvY29tbXVuaXR5L2xpc3RzLycsICdodHRwOi8vd3d3Lnd4cHl0
aG9uLm9yZy8nLCAnaHR0cHM6Ly93d3cucHl0aG9uLm9yZy9hYm91dC9zdWNj
ZXNzLyNnb3Zlcm5tZW50JywgJ2h0dHBzOi8vd3d3LnB5dGhvbi5vcmcvcHNm
LycsICdodHRwczovL3d3dy5weXRob24ub3JnL3BzZi9jb2Rlb2Zjb25kdWN0
LycsICdodHRwOi8vYm90dGxlcHkub3JnJywgJ2h0dHA6Ly9yb3VuZHVwLnNv
dXJjZWZvcmdlLm5ldC8nLCAnaHR0cDovL3BhbmRhcy5weWRhdGEub3JnLycs
ICdodHRwOi8vYnJvY2h1cmUuZ2V0cHl0aG9uLmluZm8vJywgJ2h0dHBzOi8v
d3d3LnB5dGhvbi5vcmcvZG93bmxvYWRzL3NvdXJjZS8nLCAnaHR0cHM6Ly9i
dWdzLnB5dGhvbi5vcmcvJywgJ2h0dHBzOi8vd3d3LnB5dGhvbi5vcmcvZG93
bmxvYWRzL21hYy1vc3gvJywgJ2h0dHBzOi8vd3d3LnB5dGhvbi5vcmcvYWJv
dXQvaGVscC8nLCAnaHR0cDovL3Rvcm5hZG93ZWIub3JnJywgJ2h0dHA6Ly9m
bGFzay5wb2Nvby5vcmcvJywgJ2h0dHBzOi8vd3d3LnB5dGhvbi5vcmcvdXNl
cnMvbWVtYmVyc2hpcC8nLCAnaHR0cDovL2Jsb2cucHl0aG9uLm9yZycsICdo
dHRwczovL3d3dy5weXRob24ub3JnL3ByaXZhY3kvJywgJ2h0dHBzOi8vd3d3
LnB5dGhvbi5vcmcvYWJvdXQvZ2V0dGluZ3N0YXJ0ZWQvJywgJ2h0dHA6Ly9w
eXRob24ub3JnL2Rldi9wZXBzLycsICdodHRwczovL3d3dy5weXRob24ub3Jn
L2Fib3V0L2FwcHMvJywgJ2h0dHBzOi8vZG9jcy5weXRob24ub3JnJywgJ2h0
dHBzOi8vd3d3LnB5dGhvbi5vcmcvc3VjY2Vzcy1zdG9yaWVzLycsICdodHRw
czovL3d3dy5weXRob24ub3JnL2NvbW11bml0eS9mb3J1bXMvJywgJ2h0dHA6
Ly9mZWVkcHJveHkuZ29vZ2xlLmNvbS9+ci9QeXRob25JbnNpZGVyL34zL3pW
Qzgwc3E5czAwL3B5dGhvbi0zNjQtaXMtbm93LWF2YWlsYWJsZS5odG1sJywg
J2h0dHBzOi8vd3d3LnB5dGhvbi5vcmcvY29tbXVuaXR5L21lcmNoYW5kaXNl
LycsICdodHRwczovL3d3dy5weXRob24ub3JnL2Fib3V0L3N1Y2Nlc3MvI2Fy
dHMnLCAnaHR0cHM6Ly93aWtpLnB5dGhvbi5vcmcvbW9pbi9QeXRob24yb3JQ
eXRob24zJywgJ2h0dHA6Ly90cmFjLmVkZ2V3YWxsLm9yZy8nLCAnaHR0cDov
L2ZlZWRwcm94eS5nb29nbGUuY29tL35yL1B5dGhvbkluc2lkZXIvfjMvd2g3
M18xQS1ON1EvcHl0aG9uLTM1NXJjMS1hbmQtcHl0aG9uLTM0OHJjMS1hcmUt
bm93Lmh0bWwnLCAnaHR0cHM6Ly9weXBpLnB5dGhvbi5vcmcvJywgJ2h0dHBz
Oi8vd3d3LnB5dGhvbi5vcmcvZXZlbnRzL3B5dGhvbi11c2VyLWdyb3VwLzY1
MC8nLCAnaHR0cDovL3d3dy5yaXZlcmJhbmtjb21wdXRpbmcuY28udWsvc29m
dHdhcmUvcHlxdC9pbnRybycsICdodHRwczovL3d3dy5weXRob24ub3JnL2Fi
b3V0L3F1b3Rlcy8nLCAnaHR0cHM6Ly93d3cucHl0aG9uLm9yZy9kb3dubG9h
ZHMvd2luZG93cy8nLCAnaHR0cHM6Ly93d3cucHl0aG9uLm9yZy9ldmVudHMv
Y2FsZW5kYXJzLycsICdodHRwOi8vd3d3LnNjaXB5Lm9yZycsICdodHRwczov
L3d3dy5weXRob24ub3JnL2NvbW11bml0eS93b3Jrc2hvcHMvJywgJ2h0dHBz
Oi8vd3d3LnB5dGhvbi5vcmcvYmxvZ3MvJywgJ2h0dHBzOi8vd3d3LnB5dGhv
bi5vcmcvYWNjb3VudHMvc2lnbnVwLycsICdodHRwczovL3d3dy5weXRob24u
b3JnL2V2ZW50cy8nLCAnaHR0cHM6Ly9raXZ5Lm9yZy8nLCAnaHR0cDovL3d3
dy5mYWNlYm9vay5jb20vcHl0aG9ubGFuZz9mcmVmPXRzJywgJ2h0dHA6Ly93
d3cud2ViMnB5LmNvbS8nLCAnaHR0cHM6Ly93d3cucHl0aG9uLm9yZy9wc2Yv
c3BvbnNvcnNoaXAvc3BvbnNvcnMvJywgJ2h0dHBzOi8vd3d3LnB5dGhvbi5v
cmcvY29tbXVuaXR5LycsICdodHRwczovL3d3dy5weXRob24ub3JnL2Rvd25s
b2FkL290aGVyLycsICdodHRwczovL3d3dy5weXRob24ub3JnL3BzZi1sYW5k
aW5nLycsICdodHRwczovL3d3dy5weXRob24ub3JnL2V2ZW50cy9weXRob24t
dXNlci1ncm91cC82NjUvJywgJ2h0dHBzOi8vd2lraS5weXRob24ub3JnL21v
aW4vQmVnaW5uZXJzR3VpZGUnLCAnaHR0cHM6Ly93d3cucHl0aG9uLm9yZy9h
Y2NvdW50cy9sb2dpbi8nLCAnaHR0cHM6Ly93d3cucHl0aG9uLm9yZy9kb3du
bG9hZHMvcmVsZWFzZS9weXRob24tMzY0LycsICdodHRwczovL3d3dy5weXRo
b24ub3JnL2Rldi9jb3JlLW1lbnRvcnNoaXAvJywgJ2h0dHBzOi8vd3d3LnB5
dGhvbi5vcmcvYWJvdXQvc3VjY2Vzcy8jYnVzaW5lc3MnLCAnaHR0cHM6Ly93
d3cucHl0aG9uLm9yZy9jb21tdW5pdHkvc2lncy8nLCAnaHR0cHM6Ly93d3cu
cHl0aG9uLm9yZy9ldmVudHMvcHl0aG9uLXVzZXItZ3JvdXAvJywgJ2h0dHA6
Ly9pcHl0aG9uLm9yZycsICdodHRwczovL3d3dy5weXRob24ub3JnL3NoZWxs
LycsICdodHRwczovL3d3dy5weXRob24ub3JnL2NvbW11bml0eS9pcmMvJywg
J2h0dHBzOi8vd3d3LnB5dGhvbi5vcmcvYWJvdXQvc3VjY2Vzcy8jZW5naW5l
ZXJpbmcnLCAnaHR0cDovL3d3dy5weWxvbnNwcm9qZWN0Lm9yZy8nLCAnaHR0
cDovL3B5Y29uLmJsb2dzcG90LmNvbS8nLCAnaHR0cHM6Ly93d3cucHl0aG9u
Lm9yZy9hYm91dC9zdWNjZXNzLyNzY2llbnRpZmljJywgJ2h0dHBzOi8vd3d3
LnB5dGhvbi5vcmcvZG9jL2Vzc2F5cy8nLCAnaHR0cDovL3d3dy5kamFuZ29w
cm9qZWN0LmNvbS8nLCAnaHR0cHM6Ly93d3cucHl0aG9uLm9yZy9zdWNjZXNz
LXN0b3JpZXMvaW5kdXN0cmlhbC1saWdodC1tYWdpYy1ydW5zLXB5dGhvbi8n
LCAnaHR0cDovL2ZlZWRwcm94eS5nb29nbGUuY29tL35yL1B5dGhvbkluc2lk
ZXIvfjMveF9jOUQwUy00QzQvcHl0aG9uLTM3MGIxLWlzLW5vdy1hdmFpbGFi
bGUtZm9yLmh0bWwnLCAnaHR0cDovL3dpa2kucHl0aG9uLm9yZy9tb2luL1Rr
SW50ZXInLCAnaHR0cHM6Ly93d3cucHl0aG9uLm9yZy9qb2JzLycsICdodHRw
czovL3d3dy5weXRob24ub3JnL2V2ZW50cy9weXRob24tZXZlbnRzLzYwNC8n
fQoKU2VsZWN0IGFuIGVsZW1lbnQgd2l0aCBhIENTUyBTZWxlY3RvcjoKCi4u
IGNvZGUtYmxvY2s6OiBweWNvbgoKICAgID4+PiBhYm91dCA9IHIuaHRtbC5m
aW5kKCcjYWJvdXQnLCBmaXJzdD1UcnVlKQoKR3JhYiBhbiBlbGVtZW50J3Mg
dGV4dCBjb250ZW50czoKCi4uIGNvZGUtYmxvY2s6OiBweWNvbgoKICAgID4+
PiBwcmludChhYm91dC50ZXh0KQogICAgQWJvdXQKICAgIEFwcGxpY2F0aW9u
cwogICAgUXVvdGVzCiAgICBHZXR0aW5nIFN0YXJ0ZWQKICAgIEhlbHAKICAg
IFB5dGhvbiBCcm9jaHVyZQoKSW50cm9zcGVjdCBhbiBFbGVtZW50J3MgYXR0
cmlidXRlczoKCi4uIGNvZGUtYmxvY2s6OiBweWNvbgoKICAgID4+PiBhYm91
dC5hdHRycwogICAgeydpZCc6ICdhYm91dCcsICdjbGFzcyc6ICgndGllci0x
JywgJ2VsZW1lbnQtMScpLCAnYXJpYS1oYXNwb3B1cCc6ICd0cnVlJ30KClJl
bmRlciBvdXQgYW4gRWxlbWVudCdzIEhUTUw6CgouLiBjb2RlLWJsb2NrOjog
cHljb24KCiAgICA+Pj4gYWJvdXQuaHRtbAogICAgJzxsaSBhcmlhLWhhc3Bv
cHVwPSJ0cnVlIiBjbGFzcz0idGllci0xIGVsZW1lbnQtMSAiIGlkPSJhYm91
dCI+XG48YSBjbGFzcz0iIiBocmVmPSIvYWJvdXQvIiB0aXRsZT0iIj5BYm91
dDwvYT5cbjx1bCBhcmlhLWhpZGRlbj0idHJ1ZSIgY2xhc3M9InN1Ym5hdiBt
ZW51IiByb2xlPSJtZW51Ij5cbjxsaSBjbGFzcz0idGllci0yIGVsZW1lbnQt
MSIgcm9sZT0idHJlZWl0ZW0iPjxhIGhyZWY9Ii9hYm91dC9hcHBzLyIgdGl0
bGU9IiI+QXBwbGljYXRpb25zPC9hPjwvbGk+XG48bGkgY2xhc3M9InRpZXIt
MiBlbGVtZW50LTIiIHJvbGU9InRyZWVpdGVtIj48YSBocmVmPSIvYWJvdXQv
cXVvdGVzLyIgdGl0bGU9IiI+UXVvdGVzPC9hPjwvbGk+XG48bGkgY2xhc3M9
InRpZXItMiBlbGVtZW50LTMiIHJvbGU9InRyZWVpdGVtIj48YSBocmVmPSIv
YWJvdXQvZ2V0dGluZ3N0YXJ0ZWQvIiB0aXRsZT0iIj5HZXR0aW5nIFN0YXJ0
ZWQ8L2E+PC9saT5cbjxsaSBjbGFzcz0idGllci0yIGVsZW1lbnQtNCIgcm9s
ZT0idHJlZWl0ZW0iPjxhIGhyZWY9Ii9hYm91dC9oZWxwLyIgdGl0bGU9IiI+
SGVscDwvYT48L2xpPlxuPGxpIGNsYXNzPSJ0aWVyLTIgZWxlbWVudC01IiBy
b2xlPSJ0cmVlaXRlbSI+PGEgaHJlZj0iaHR0cDovL2Jyb2NodXJlLmdldHB5
dGhvbi5pbmZvLyIgdGl0bGU9IiI+UHl0aG9uIEJyb2NodXJlPC9hPjwvbGk+
XG48L3VsPlxuPC9saT4nCgoKClNlbGVjdCBFbGVtZW50cyB3aXRoaW4gRWxl
bWVudHM6CgouLiBjb2RlLWJsb2NrOjogcHljb24KCiAgICA+Pj4gYWJvdXQu
ZmluZCgnYScpCiAgICBbPEVsZW1lbnQgJ2EnIGhyZWY9Jy9hYm91dC8nIHRp
dGxlPScnIGNsYXNzPScnPiwgPEVsZW1lbnQgJ2EnIGhyZWY9Jy9hYm91dC9h
cHBzLycgdGl0bGU9Jyc+LCA8RWxlbWVudCAnYScgaHJlZj0nL2Fib3V0L3F1
b3Rlcy8nIHRpdGxlPScnPiwgPEVsZW1lbnQgJ2EnIGhyZWY9Jy9hYm91dC9n
ZXR0aW5nc3RhcnRlZC8nIHRpdGxlPScnPiwgPEVsZW1lbnQgJ2EnIGhyZWY9
Jy9hYm91dC9oZWxwLycgdGl0bGU9Jyc+LCA8RWxlbWVudCAnYScgaHJlZj0n
aHR0cDovL2Jyb2NodXJlLmdldHB5dGhvbi5pbmZvLycgdGl0bGU9Jyc+XQoK
U2VhcmNoIGZvciBsaW5rcyB3aXRoaW4gYW4gZWxlbWVudDoKCi4uIGNvZGUt
YmxvY2s6OiBweWNvbgoKICAgID4+PiBhYm91dC5hYnNvbHV0ZV9saW5rcwog
ICAgeydodHRwOi8vYnJvY2h1cmUuZ2V0cHl0aG9uLmluZm8vJywgJ2h0dHBz
Oi8vd3d3LnB5dGhvbi5vcmcvYWJvdXQvZ2V0dGluZ3N0YXJ0ZWQvJywgJ2h0
dHBzOi8vd3d3LnB5dGhvbi5vcmcvYWJvdXQvJywgJ2h0dHBzOi8vd3d3LnB5
dGhvbi5vcmcvYWJvdXQvcXVvdGVzLycsICdodHRwczovL3d3dy5weXRob24u
b3JnL2Fib3V0L2hlbHAvJywgJ2h0dHBzOi8vd3d3LnB5dGhvbi5vcmcvYWJv
dXQvYXBwcy8nfQoKClNlYXJjaCBmb3IgdGV4dCBvbiB0aGUgcGFnZToKCi4u
IGNvZGUtYmxvY2s6OiBweWNvbgoKICAgID4+PiByLmh0bWwuc2VhcmNoKCdQ
eXRob24gaXMgYSB7fSBsYW5ndWFnZScpWzBdCiAgICBwcm9ncmFtbWluZwoK
TW9yZSBjb21wbGV4IENTUyBTZWxlY3RvciBleGFtcGxlIChjb3BpZWQgZnJv
bSBDaHJvbWUgZGV2IHRvb2xzKToKCi4uIGNvZGUtYmxvY2s6OiBweWNvbgoK
ICAgID4+PiByID0gc2Vzc2lvbi5nZXQoJ2h0dHBzOi8vZ2l0aHViLmNvbS8n
KQogICAgPj4+IHNlbCA9ICdib2R5ID4gZGl2LmFwcGxpY2F0aW9uLW1haW4g
PiBkaXYuanVtYm90cm9uLmp1bWJvdHJvbi1jb2RlbGluZXMgPiBkaXYgPiBk
aXYgPiBkaXYuY29sLW1kLTcudGV4dC1jZW50ZXIudGV4dC1tZC1sZWZ0ID4g
cCcKICAgID4+PiBwcmludChyLmh0bWwuZmluZChzZWwsIGZpcnN0PVRydWUp
LnRleHQpCiAgICBHaXRIdWIgaXMgYSBkZXZlbG9wbWVudCBwbGF0Zm9ybSBp
bnNwaXJlZCBieSB0aGUgd2F5IHlvdSB3b3JrLiBGcm9tIG9wZW4gc291cmNl
IHRvIGJ1c2luZXNzLCB5b3UgY2FuIGhvc3QgYW5kIHJldmlldyBjb2RlLCBt
YW5hZ2UgcHJvamVjdHMsIGFuZCBidWlsZCBzb2Z0d2FyZSBhbG9uZ3NpZGUg
bWlsbGlvbnMgb2Ygb3RoZXLCoGRldmVsb3BlcnMuCgpYUGF0aCBpcyBhbHNv
IHN1cHBvcnRlZDoKCi4uIGNvZGUtYmxvY2s6OiBweWNvbgoKICAgPj4+IHIu
aHRtbC54cGF0aCgnL2h0bWwvYm9keS9kaXZbMV0vYScpCiAgIFs8RWxlbWVu
dCAnYScgY2xhc3M9KCdweC0yJywgJ3B5LTQnLCAnc2hvdy1vbi1mb2N1cycs
ICdqcy1za2lwLXRvLWNvbnRlbnQnKSBocmVmPScjc3RhcnQtb2YtY29udGVu
dCcgdGFiaW5kZXg9JzEnPl0KCgpKYXZhU2NyaXB0IFN1cHBvcnQKPT09PT09
PT09PT09PT09PT09CgpMZXQncyBncmFiIHNvbWUgdGV4dCB0aGF0J3MgcmVu
ZGVyZWQgYnkgSmF2YVNjcmlwdC4gVW50aWwgMjAyMCwgdGhlIFB5dGhvbiAy
LjcgY291bnRkb3duIGNsb2NrIChodHRwczovL3B5dGhvbmNsb2NrLm9yZykg
d2lsbCBzZXJ2ZSBhcyBhIGdvb2QgdGVzdCBwYWdlOgoKLi4gY29kZS1ibG9j
azo6IHB5Y29uCgogICAgPj4+IHIgPSBzZXNzaW9uLmdldCgnaHR0cHM6Ly9w
eXRob25jbG9jay5vcmcnKQoKTGV0J3MgdHJ5IGFuZCBzZWUgdGhlIGR5bmFt
aWNhbGx5IHJlbmRlcmVkIGNvZGUgKFRoZSBjb3VudGRvd24gY2xvY2spLiBU
byBkbyB0aGF0IHF1aWNrbHkgYXQgZmlyc3QsIHdlJ2xsIHNlYXJjaCBiZXR3
ZWVuIHRoZSBsYXN0IHRleHQgd2Ugc2VlIGJlZm9yZSBpdCAoJ1B5dGhvbiAy
Ljcgd2lsbCByZXRpcmUgaW4uLi4nKSBhbmQgdGhlIGZpcnN0IHRleHQgd2Ug
c2VlIGFmdGVyIGl0ICgnRW5hYmxlIEd1aWRvIE1vZGUnKS4KCi4uIGNvZGUt
YmxvY2s6OiBweWNvbgoKCT4+PiByLmh0bWwuc2VhcmNoKCdQeXRob24gMi43
IHdpbGwgcmV0aXJlIGluLi4ue31FbmFibGUgR3VpZG8gTW9kZScpWzBdCgkn
PC9oMT5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9InB5
dGhvbi0yNy1jbG9jayI+PC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9ImNl
bnRlciI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJndWlkby1idXR0b24t
YmxvY2siPlxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImpzLWd1
aWRvLW1vZGUgZ3VpZG8tYnV0dG9uIj4nCgpOb3RpY2UgdGhlIGNsb2NrIGlz
IG1pc3NpbmcuIFRoZSBgYHJlbmRlcigpYGAgbWV0aG9kIHRha2VzIHRoZSBy
ZXNwb25zZSBhbmQgcmVuZGVycyB0aGUgZHluYW1pYyBjb250ZW50IGp1c3Qg
bGlrZSBhIHdlYiBicm93c2VyIHdvdWxkLgoKLi4gY29kZS1ibG9jazo6IHB5
Y29uCgogICAgPj4+IHIuaHRtbC5yZW5kZXIoKQogICAgPj4+IHIuaHRtbC5z
ZWFyY2goJ1B5dGhvbiAyLjcgd2lsbCByZXRpcmUgaW4uLi57fUVuYWJsZSBH
dWlkbyBNb2RlJylbMF0KICAgICc8L2gxPlxuICAgICAgICA8L2Rpdj5cbiAg
ICAgICAgPGRpdiBjbGFzcz0icHl0aG9uLTI3LWNsb2NrIGlzLWNvdW50ZG93
biI+PHNwYW4gY2xhc3M9ImNvdW50ZG93bi1yb3cgY291bnRkb3duLXNob3c2
Ij48c3BhbiBjbGFzcz0iY291bnRkb3duLXNlY3Rpb24iPjxzcGFuIGNsYXNz
PSJjb3VudGRvd24tYW1vdW50Ij4xPC9zcGFuPjxzcGFuIGNsYXNzPSJjb3Vu
dGRvd24tcGVyaW9kIj5ZZWFyPC9zcGFuPjwvc3Bhbj48c3BhbiBjbGFzcz0i
Y291bnRkb3duLXNlY3Rpb24iPjxzcGFuIGNsYXNzPSJjb3VudGRvd24tYW1v
dW50Ij4yPC9zcGFuPjxzcGFuIGNsYXNzPSJjb3VudGRvd24tcGVyaW9kIj5N
b250aHM8L3NwYW4+PC9zcGFuPjxzcGFuIGNsYXNzPSJjb3VudGRvd24tc2Vj
dGlvbiI+PHNwYW4gY2xhc3M9ImNvdW50ZG93bi1hbW91bnQiPjI4PC9zcGFu
PjxzcGFuIGNsYXNzPSJjb3VudGRvd24tcGVyaW9kIj5EYXlzPC9zcGFuPjwv
c3Bhbj48c3BhbiBjbGFzcz0iY291bnRkb3duLXNlY3Rpb24iPjxzcGFuIGNs
YXNzPSJjb3VudGRvd24tYW1vdW50Ij4xNjwvc3Bhbj48c3BhbiBjbGFzcz0i
Y291bnRkb3duLXBlcmlvZCI+SG91cnM8L3NwYW4+PC9zcGFuPjxzcGFuIGNs
YXNzPSJjb3VudGRvd24tc2VjdGlvbiI+PHNwYW4gY2xhc3M9ImNvdW50ZG93
bi1hbW91bnQiPjUyPC9zcGFuPjxzcGFuIGNsYXNzPSJjb3VudGRvd24tcGVy
aW9kIj5NaW51dGVzPC9zcGFuPjwvc3Bhbj48c3BhbiBjbGFzcz0iY291bnRk
b3duLXNlY3Rpb24iPjxzcGFuIGNsYXNzPSJjb3VudGRvd24tYW1vdW50Ij40
Njwvc3Bhbj48c3BhbiBjbGFzcz0iY291bnRkb3duLXBlcmlvZCI+U2Vjb25k
czwvc3Bhbj48L3NwYW4+PC9zcGFuPjwvZGl2PlxuICAgICAgICA8ZGl2IGNs
YXNzPSJjZW50ZXIiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ3VpZG8t
YnV0dG9uLWJsb2NrIj5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNz
PSJqcy1ndWlkby1tb2RlIGd1aWRvLWJ1dHRvbiI+JwoKTGV0J3MgY2xlYW4g
aXQgdXAgYSBiaXQuIFRoaXMgc3RlcCBpcyBub3QgbmVlZGVkLCBpdCBqdXN0
IG1ha2VzIGl0IGEgYml0IGVhc2llciB0byB2aXN1YWxpc2UgdGhlIHJldHVy
bmVkIGh0bWwgdG8gc2VlIHdoYXQgd2UgbmVlZCB0byB0YXJnZXQgdG8gZXh0
cmFjdCBvdXIgcmVxdWlyZWQgaW5mb3JtYXRpb24uIAoKLi4gY29kZS1ibG9j
azo6IHB5Y29uCgoJPj4+IGZyb20gcHByaW50IGltcG9ydCBwcHJpbnQKCT4+
PiBwcHJpbnQoci5odG1sLnNlYXJjaCgnUHl0aG9uIDIuNyB3aWxsIHJldGly
ZSBpbi4uLnt9RW5hYmxlJylbMF0pCgkoJzwvaDE+XG4nCiAnICAgICAgICA8
L2Rpdj5cbicKICcgICAgICAgIDxkaXYgY2xhc3M9InB5dGhvbi0yNy1jbG9j
ayBpcy1jb3VudGRvd24iPjxzcGFuIGNsYXNzPSJjb3VudGRvd24tcm93ICcK
ICdjb3VudGRvd24tc2hvdzYiPjxzcGFuIGNsYXNzPSJjb3VudGRvd24tc2Vj
dGlvbiI+PHNwYW4gJwogJ2NsYXNzPSJjb3VudGRvd24tYW1vdW50Ij4xPC9z
cGFuPjxzcGFuICcKICdjbGFzcz0iY291bnRkb3duLXBlcmlvZCI+WWVhcjwv
c3Bhbj48L3NwYW4+PHNwYW4gJwogJ2NsYXNzPSJjb3VudGRvd24tc2VjdGlv
biI+PHNwYW4gY2xhc3M9ImNvdW50ZG93bi1hbW91bnQiPjI8L3NwYW4+PHNw
YW4gJwogJ2NsYXNzPSJjb3VudGRvd24tcGVyaW9kIj5Nb250aHM8L3NwYW4+
PC9zcGFuPjxzcGFuICcKICdjbGFzcz0iY291bnRkb3duLXNlY3Rpb24iPjxz
cGFuIGNsYXNzPSJjb3VudGRvd24tYW1vdW50Ij4yODwvc3Bhbj48c3BhbiAn
CiAnY2xhc3M9ImNvdW50ZG93bi1wZXJpb2QiPkRheXM8L3NwYW4+PC9zcGFu
PjxzcGFuICcKICdjbGFzcz0iY291bnRkb3duLXNlY3Rpb24iPjxzcGFuIGNs
YXNzPSJjb3VudGRvd24tYW1vdW50Ij4xNjwvc3Bhbj48c3BhbiAnCiAnY2xh
c3M9ImNvdW50ZG93bi1wZXJpb2QiPkhvdXJzPC9zcGFuPjwvc3Bhbj48c3Bh
biAnCiAnY2xhc3M9ImNvdW50ZG93bi1zZWN0aW9uIj48c3BhbiBjbGFzcz0i
Y291bnRkb3duLWFtb3VudCI+NTI8L3NwYW4+PHNwYW4gJwogJ2NsYXNzPSJj
b3VudGRvd24tcGVyaW9kIj5NaW51dGVzPC9zcGFuPjwvc3Bhbj48c3BhbiAn
CiAnY2xhc3M9ImNvdW50ZG93bi1zZWN0aW9uIj48c3BhbiBjbGFzcz0iY291
bnRkb3duLWFtb3VudCI+NDY8L3NwYW4+PHNwYW4gJwogJ2NsYXNzPSJjb3Vu
dGRvd24tcGVyaW9kIj5TZWNvbmRzPC9zcGFuPjwvc3Bhbj48L3NwYW4+PC9k
aXY+XG4nCiAnICAgICAgICA8ZGl2IGNsYXNzPSJjZW50ZXIiPlxuJwogJyAg
ICAgICAgICAgIDxkaXYgY2xhc3M9Imd1aWRvLWJ1dHRvbi1ibG9jayI+XG4n
CiAnICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImpzLWd1aWRvLW1v
ZGUgZ3VpZG8tYnV0dG9uIj4nKQoKVGhlIHJlbmRlcmVkIGh0bWwgaGFzIGFs
bCB0aGUgc2FtZSBtZXRob2RzIGFuZCBhdHRyaWJ1dGVzIGFzIGFib3ZlLiBM
ZXQncyBleHRyYWN0IGp1c3QgdGhlIGRhdGEgdGhhdCB3ZSB3YW50IG91dCBv
ZiB0aGUgY2xvY2sgaW50byBzb21ldGhpbmcgZWFzeSB0byB1c2UgZWxzZXdo
ZXJlIGFuZCBpbnRyb3NwZWN0IGxpa2UgYSBkaWN0aW9uYXJ5LgoKLi4gY29k
ZS1ibG9jazo6IHB5Y29uCgkKCT4+PiBwZXJpb2RzID0gW2VsZW1lbnQudGV4
dCBmb3IgZWxlbWVudCBpbiByLmh0bWwuZmluZCgnLmNvdW50ZG93bi1wZXJp
b2QnKV0KCT4+PiBhbW91bnRzID0gW2VsZW1lbnQudGV4dCBmb3IgZWxlbWVu
dCBpbiByLmh0bWwuZmluZCgnLmNvdW50ZG93bi1hbW91bnQnKV0KCT4+PiBj
b3VudGRvd25fZGF0YSA9IGRpY3QoemlwKHBlcmlvZHMsIGFtb3VudHMpKQoJ
Pj4+IGNvdW50ZG93bl9kYXRhCgl7J1llYXInOiAnMScsICdNb250aHMnOiAn
MicsICdEYXlzJzogJzUnLCAnSG91cnMnOiAnMjMnLCAnTWludXRlcyc6ICcz
NCcsICdTZWNvbmRzJzogJzM3J30KCk9yIHlvdSBjYW4gZG8gdGhpcyBhc3lu
YyBhbHNvOgoKLi4gY29kZS1ibG9jazo6IHB5Y29uCgogICAgPj4+IGFzeW5j
IGRlZiBnZXRfcHljbG9jaygpOgogICAgLi4uICAgICByID0gYXdhaXQgYXNl
c3Npb24uZ2V0KCdodHRwczovL3B5dGhvbmNsb2NrLm9yZy8nKQogICAgLi4u
ICAgICBhd2FpdCByLmh0bWwuYXJlbmRlcigpCiAgICAuLi4gICAgIHJldHVy
biByCiAgICAuLi4KICAgID4+PiByZXN1bHRzID0gYXNlc3Npb24ucnVuKGdl
dF9weWNsb2NrLCBnZXRfcHljbG9jaywgZ2V0X3B5Y2xvY2spCgpUaGUgcmVz
dCBvZiB0aGUgY29kZSBvcGVyYXRlcyB0aGUgc2FtZSB3YXkgYXMgdGhlIHN5
bmNocm9ub3VzIHZlcnNpb24gZXhjZXB0IHRoYXQgYGByZXN1bHRzYGAgaXMg
YSBsaXN0IGNvbnRhaW5pbmcgbXVsdGlwbGUgcmVzcG9uc2Ugb2JqZWN0cyBo
b3dldmVyIHRoZSBzYW1lIGJhc2ljIHByb2Nlc3NlcyBjYW4gYmUgYXBwbGll
ZCBhcyBhYm92ZSB0byBleHRyYWN0IHRoZSBkYXRhIHlvdSB3YW50LiAKCk5v
dGUsIHRoZSBmaXJzdCB0aW1lIHlvdSBldmVyIHJ1biB0aGUgYGByZW5kZXIo
KWBgIG1ldGhvZCwgaXQgd2lsbCBkb3dubG9hZApDaHJvbWl1bSBpbnRvIHlv
dXIgaG9tZSBkaXJlY3RvcnkgKGUuZy4gYGB+Ly5weXBwZXRlZXIvYGApLiBU
aGlzIG9ubHkgaGFwcGVucwpvbmNlLgoKVXNpbmcgd2l0aG91dCBSZXF1ZXN0
cwo9PT09PT09PT09PT09PT09PT09PT09CgpZb3UgY2FuIGFsc28gdXNlIHRo
aXMgbGlicmFyeSB3aXRob3V0IFJlcXVlc3RzOgoKLi4gY29kZS1ibG9jazo6
IHB5Y29uCgogICAgPj4+IGZyb20gcmVxdWVzdHNfaHRtbCBpbXBvcnQgSFRN
TAogICAgPj4+IGRvYyA9ICIiIjxhIGhyZWY9J2h0dHBzOi8vaHR0cGJpbi5v
cmcnPiIiIgogICAgPj4+IGh0bWwgPSBIVE1MKGh0bWw9ZG9jKQogICAgPj4+
IGh0bWwubGlua3MKICAgIHsnaHR0cHM6Ly9odHRwYmluLm9yZyd9CgoKSW5z
dGFsbGF0aW9uCj09PT09PT09PT09PQoKLi4gY29kZS1ibG9jazo6IHNoZWxs
CgogICAgJCBwaXBlbnYgaW5zdGFsbCByZXF1ZXN0cy1odG1sCiAgICDinKjw
n42w4pyoCgpPbmx5ICoqUHl0aG9uIDMuNioqIGlzIHN1cHBvcnRlZC4K
",,"bGFuZ3VhZ2U6IHB5dGhvbgpweXRob246CiAgLSAiMy42IgoKIyBjb21tYW5k
IHRvIGluc3RhbGwgZGVwZW5kZW5jaWVzCmluc3RhbGw6CiAgLSAicGlwIGlu
c3RhbGwgcGlwZW52IC0tdXBncmFkZS1zdHJhdGVneT1vbmx5LWlmLW5lZWRl
ZCIKICAtICJwaXBlbnYgaW5zdGFsbCAtLWRldiIKCiMgY29tbWFuZCB0byBy
dW4gdGhlIGRlcGVuZGVuY2llcwpzY3JpcHQ6CiAgLSAicGlwZW52IHJ1biB0
ZXN0cyIKCiMgY29tbWFuZCB0byBydW4gdGVzdHMKIyBqb2JzOgogICMgaW5j
bHVkZToKICAgICMgLSBzdGFnZTogIuKcqCBGbGFrZTggTml04oCTUGlja2lu
ZyDinKgiCiAgICAgICMgcHl0aG9uOiAiMy42IgogICAgICAjIHNjcmlwdDog
InBpcGVudiBydW4gZmxha2U4Igo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'android-training-course-in-chinese',20799673,b'Android\xe5\xae\x98\xe6\x96\xb9\xe5\x9f\xb9\xe8\xae\xad\xe8\xaf\xbe\xe7\xa8\x8b\xe4\xb8\xad\xe6\x96\x87\xe7\x89\x88',b'JavaScript',10,10414,,10414,False,b'https://api.github.com/repos/kesenhoo/android-training-course-in-chinese/forks',"IyBBbmRyb2lk5a6Y5pa55Z+56K6t6K++56iL5Lit5paH54mIKHYwLjkuNykK
CiFbQW5kcm9pZCBUcmFpbmluZ10oYW5kcm9pZF90cmFpbmluZy5qcGcpCgpH
b29nbGUgQW5kcm9pZOWboumYn+WcqDIwMTLlubTnmoTml7blgJnlvIDorr7k
uoYqKkFuZHJvaWQgVHJhaW5pbmcqKuadv+WdlyAtIDxodHRwOi8vZGV2ZWxv
cGVyLmFuZHJvaWQuY29tL3RyYWluaW5nL2luZGV4Lmh0bWw+77yM6L+Z5Lqb
6K++56iL5piv5a2m5LmgQW5kcm9pZOW6lOeUqOW8gOWPkeeahOe7neS9s+i1
hOaWmeOAguaIkeS7rOmAmui/h0dpdGh1YuWPkei1t+W8gOa6kOWNj+S9nOe/
u+ivkeeahOmhueebru+8jOWujOaIkOS4reaWh+eJiOeahOi+k+WHuu+8jOas
oui/juWkp+WutuS8oOmYheWtpuS5oO+8gQrmlofnq6DkuK3pmr7lhY3kvJrm
nInlvojlpJrlhpnnmoTkuI3lr7nkuI3lpb3nmoTlnLDmlrnvvIzmrKLov47o
r7vogIXliqDlhaXmraTljY/kvZzpobnnm67vvIzov5vooYznuqDplJnvvIzk
uLrlrozlloTov5nku73mlZnnqIvotKHnjK7kuIDngrnlipvph48hCgojIyBH
aXRodWLmiZjnrqHkuLvpobUKCioqPGh0dHBzOi8vZ2l0aHViLmNvbS9rZXNl
bmhvby9hbmRyb2lkLXRyYWluaW5nLWNvdXJzZS1pbi1jaGluZXNlPioqCgro
r7for7vogIXngrnlh7tTdGFy6L+b6KGM5YWz5rOo5bm25pSv5oyB77yBCgoj
IyDlnKjnur/pmIXor7sKCioqPGh0dHA6Ly9odWthaS5tZS9hbmRyb2lkLXRy
YWluaW5nLWNvdXJzZS1pbi1jaGluZXNlL2luZGV4Lmh0bWw+KioKCiMjIyDm
m7TmlrDorrDlvZUKKiB2MC45LjcgLSAyMDE2LzExLzA0CiogdjAuOS42IC0g
MjAxNi8wNS8yMgoqIHYwLjkuNSAtIDIwMTUvMTIvMTUKKiB2MC45LjQgLSAy
MDE1LzA2LzExCiogdjAuOS4zIC0gMjAxNS8wNS8xOAoqIHYwLjkuMiAtIDIw
MTUvMDMvMzAKKiB2MC45LjEgLSAyMDE1LzAzLzE0CiogdjAuOS4wIC0gMjAx
NS8wMy8wOQoqIHYwLjguMCAtIDIwMTUvMDIvMTIKKiB2MC43LjAgLSAyMDE0
LzExLzMwCiogdjAuNi4wIC0gMjAxNC8xMS8wMgoqIHYwLjUuMCAtIDIwMTQv
MTAvMTgKKiB2MC40LjAgLSAyMDE0LzA5LzExCiogdjAuMy4wIC0gMjAxNC8w
OC8zMQoqIHYwLjIuMCAtIDIwMTQvMDgvMTQKKiB2MC4xLjAgLSAyMDE0LzA4
LzA1CgojIyDlj4LkuI7mlrnlvI8KCuS9oOWPr+S7pemAieaLqeS7peS4i+ea
hOaWueW8j+W4ruW/meS/ruaUuee6oOato+i/meS7veaVmeeoi++8iOaOqOiN
kOS9v+eUqOaWueazlTHvvInvvJoKCjEuIOmAmui/h1vlnKjnur/pmIXor7td
KGh0dHA6Ly9odWthaS5tZS9hbmRyb2lkLXRyYWluaW5nLWNvdXJzZS1pbi1j
aGluZXNlL2luZGV4Lmh0bWwp6K++56iL55qE6aG16Z2i77yM5om+5YiwW0dp
dGh1YuS7k+W6k10oaHR0cHM6Ly9naXRodWIuY29tL2tlc2VuaG9vL2FuZHJv
aWQtdHJhaW5pbmctY291cnNlLWluLWNoaW5lc2Up5a+55bqU55qE56ug6IqC
5paH5Lu277yM55u05o6l5Zyo57q/57yW6L6R5L+u5pS55o+Q5Lqk5Y2z5Y+v
44CCCjIuIOWcqOe6v+mYheivu+eahOaWh+eroOW6lemDqOeVmeiogO+8jOaP
kOWHuumXrumimOS4juS/ruaUueaEj+inge+8jOaIkeS8muaKveaXtumXtOWP
iuaXtuWkhOeQhuOAggozLiDlhpnpgq7ku7bnu5nlj5HotbfkurrvvJoqKlvo
g6Hlh69dKGh0dHA6Ly9odWthaS5tZSkqKu+8jOmCrueuseaYr2tlc2VuaG9v
IGF0IGdtYWlsLmNvbe+8jOmCruS7tuWGheWuueazqOaYjumcgOimgee6oOat
o+eahOeroOiKguauteiQveS9jee9ru+8jOW5tue7meWHuue6oOato+eahOW7
uuiuruOAggoKIyMg6Ie06LCiCuWPkei1t+i/meS4qumhueebruS5i+WQju+8
jOW+l+WIsOW+iOWkmuS6uueahOaUr+aMge+8jOaciee7j+mqjOS4sOWvjOea
hEFuZHJvaWTlvIDlj5HogIXvvIzkuZ/mnInliJrmjqXop6ZBbmRyb2lk55qE
54ix5aW96ICF44CC5LuW5Lus5pyJ5Lqb5bey57uP5LiK54+t77yM5pyJ5Lqb
6L+Y5piv5a2m55Sf77yM5pyJ5Lqb5Zyo5Zu95YaF77yM6L+Y5pyJ55qE5Zyo
5Zu95aSW77yB5oSf6LCi5omA5pyJ5Y+C5LiO5oiW6ICF5YWz5rOo6L+Z5Liq
6aG555uu55qE5bCP5LyZ5Ly0IQoK5LiL6Z2i5piv5Y+C5LiO57+76K+R55qE
5bCP5LyZ5Ly0KEdpdGh1YiBJROaMieeFp+ivvueoi+e7k+aehOaOkuW6jynv
vJoKCgp8IDAgfCAxIHwgMiB8CnwgLS0tIHwgLS0tIHwgLS0tIHwKfCBAW3l1
YW5mZW50aWFuazc4OV0oaHR0cHM6Ly9naXRodWIuY29tL3l1YW5mZW50aWFu
azc4OSkgfCBAW3ZpbmNlbnQ0al0oaHR0cHM6Ly9naXRodWIuY29tL3ZpbmNl
bnQ0aikgfCBAW0xpbi1IXShodHRwczovL2dpdGh1Yi5jb20vTGluLUgpIHwK
fCBAW2tlc2VuaG9vXShodHRwczovL2dpdGh1Yi5jb20va2VzZW5ob28pIHwg
QFtmYXN0Y29tZTE5ODVdKGh0dHBzOi8vZ2l0aHViLmNvbS9mYXN0Y29tZTE5
ODUpIHwgQFtqZG5lb10oaHR0cHM6Ly9naXRodWIuY29tL2pkbmVvKSB8Cnwg
QFtYaXpoaVh1XShodHRwczovL2dpdGh1Yi5jb20vWGl6aGlYdSkgfCBAW25h
aXpoZW5ndGFuXShodHRwczovL2dpdGh1Yi5jb20vbmFpemhlbmd0YW4pIHwg
QFtzcGVuY2VyMTk4NzExXShodHRwczovL2dpdGh1Yi5jb20vc3BlbmNlcjE5
ODcxMSkgfAp8IEBbcGVua3pob3VdKGh0dHBzOi8vZ2l0aHViLmNvbS9wZW5r
emhvdSkgfCBAW3dhbmd5YWNoZW5dKGh0dHBzOi8vZ2l0aHViLmNvbS93YW5n
eWFjaGVuKSB8IEBbd2x5MjAxNF0oaHR0cHM6Ly9naXRodWIuY29tL3dseTIw
MTQpIHwKfCBAW2Zhc3Rjb21lMTk4NV0oaHR0cHM6Ly9naXRodWIuY29tL2Zh
c3Rjb21lMTk4NSkgfCBAW3JpdmVyZmVuZ10oaHR0cHM6Ly9naXRodWIuY29t
L3JpdmVyZmVuZykgfCBAW3hyYXl6aF0oaHR0cHM6Ly9naXRodWIuY29tL3hy
YXl6aCkgfAp8IEBbSzBTVF0oaHR0cHM6Ly9naXRodWIuY29tL0swU1QpIHwg
QFtBbmRyd3l3XShodHRwczovL2dpdGh1Yi5jb20vQW5kcnd5dykgfCBAW3po
YW9jaHVucWldKGh0dHBzOi8vZ2l0aHViLmNvbS96aGFvY2h1bnFpKSB8Cnwg
QFtsbHRvd3FdKGh0dHBzOi8vZ2l0aHViLmNvbS9sbHRvd3EpIHwgQFthbGxl
bmxzeV0oaHR0cHM6Ly9naXRodWIuY29tL2FsbGVubHN5KSB8IEBbQWxsZW5a
aGVuZzE5OTFdKGh0dHBzOi8vZ2l0aHViLmNvbS9BbGxlblpoZW5nMTk5MSkg
fAp8IEBbcGVkYW50XShodHRwczovL2dpdGh1Yi5jb20vcGVkYW50KSB8IEBb
Y3JhZnRzbWFuQmFpXShodHRwczovL2dpdGh1Yi5jb20vY3JhZnRzbWFuQmFp
KSB8IEBbaHVhbmdsaXpodW9dKGh0dHBzOi8vZ2l0aHViLmNvbS9odWFuZ2xp
emh1bykgfAp8IEBbUm95YV0oaHR0cHM6Ly9naXRodWIuY29tL1JveWFBb2tp
KSB8IEBbYXdvbmcxOTAwXShodHRwczovL2dpdGh1Yi5jb20vYXdvbmcxOTAw
KSB8IEBbZHVwZW5nd2VpXShodHRwczovL2dpdGh1Yi5jb20vZHVwZW5nd2Vp
KSB8CnwgMDoxMCB8IDE6MTAgfCAyOjEwIHwKCgpA5Y+R6LW35Lq6Olvog6Hl
h69dKDxodHRwOi8vaHVrYWkubWU+Ke+8jOWNmuWuou+8mjxodHRwOi8vaHVr
YWkubWU+77yMR2l0aHVi77yaPGh0dHBzOi8vZ2l0aHViLmNvbS9rZXNlbmhv
bz7vvIzlvq7ljZrvvJo8aHR0cDovL3dlaWJvLmNvbS9rZXNlbmhvbz4KCui/
mOacieS8l+WkmuWPguS4jue6oOmUmeagoeato+eahOWQjOWtpuWQjeWtl+Ww
seS4jeS4gOS4gOWIl+S4vuS6hu+8jOiwouiwouaJgOacieWFs+azqOi/meS4
qumhueebrueahOWwj+S8meS8tO+8geeJueWIq+aEn+iwolvlronljZPlt7Tl
o6vnpL7ljLpdKGh0dHA6Ly93d3cuYXBrYnVzLmNvbSnvvIxb54ix5byA5Y+R
56S+5Yy6XShodHRwOi8vYWthaWZhLmNvbSnvvIxb56CB5Yac5ZGo5YiKXSho
dHRwOi8vd2Vla2x5Lm1hbm9uZy5pbynlr7npobnnm67nmoTlrqPkvKDvvIEK
CiMjIExpY2Vuc2UK5pys56uZ5L2c5ZOB55SxPGh0dHBzOi8vZ2l0aHViLmNv
bS9rZXNlbmhvby9hbmRyb2lkLXRyYWluaW5nLWNvdXJzZS1pbi1jaGluZXNl
PuWIm+S9nO+8jOmHh+eUqFvnn6Xor4blhbHkuqsg572y5ZCNLemdnuWVhuS4
muaAp+S9v+eUqC3nm7jlkIzmlrnlvI/lhbHkuqsgNC4wIOWbvemZhSDorrjl
j69dKGh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5j
LXNhLzQuMC8p5Y2P6K6u6L+b6KGM6K645Y+v44CCCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'salt',1390248,b'Software to automate the management and configuration of any infrastructure or application at scale. Get access to the Salt software package repository here: ',b'Python',3143,10406,,10406,False,b'https://api.github.com/repos/saltstack/salt/forks',"PT09PT09PT09PT09PT09PT09CldoYXQgaXMgU2FsdFN0YWNrPwo9PT09PT09
PT09PT09PT09PT0KClNhbHRTdGFjayBtYWtlcyBzb2Z0d2FyZSBmb3IgY29t
cGxleCBzeXN0ZW1zIG1hbmFnZW1lbnQgYXQgc2NhbGUuClNhbHRTdGFjayBp
cyB0aGUgY29tcGFueSB0aGF0IGNyZWF0ZWQgYW5kIG1haW50YWlucyB0aGUg
U2FsdCBPcGVuCnByb2plY3QgYW5kIGRldmVsb3BzIGFuZCBzZWxscyBTYWx0
U3RhY2sgRW50ZXJwcmlzZSBzb2Z0d2FyZSwgc2VydmljZXMKYW5kIHN1cHBv
cnQuIEVhc3kgZW5vdWdoIHRvIGdldCBydW5uaW5nIGluIG1pbnV0ZXMsIHNj
YWxhYmxlIGVub3VnaCB0bwptYW5hZ2UgdGVucyBvZiB0aG91c2FuZHMgb2Yg
c2VydmVycywgYW5kIGZhc3QgZW5vdWdoIHRvIGNvbW11bmljYXRlIHdpdGgK
dGhlbSBpbiAqc2Vjb25kcyouCgpTYWx0IGlzIGEgbmV3IGFwcHJvYWNoIHRv
IGluZnJhc3RydWN0dXJlIG1hbmFnZW1lbnQgYnVpbHQgb24gYSBkeW5hbWlj
CmNvbW11bmljYXRpb24gYnVzLiBTYWx0IGNhbiBiZSB1c2VkIGZvciBkYXRh
LWRyaXZlbiBvcmNoZXN0cmF0aW9uLApyZW1vdGUgZXhlY3V0aW9uIGZvciBh
bnkgaW5mcmFzdHJ1Y3R1cmUsIGNvbmZpZ3VyYXRpb24gbWFuYWdlbWVudCBm
b3IKYW55IGFwcCBzdGFjaywgYW5kIG11Y2ggbW9yZS4KCkRvd25sb2FkIFNh
bHQgT3Blbgo9PT09PT09PT09PT09PT09PT0KClNhbHQgT3BlbiBpcyB0ZXN0
ZWQgYW5kIHBhY2thZ2VkIHRvIHJ1biBvbiBDZW50T1MsIERlYmlhbiwgUkhF
TCwgVWJ1bnR1LApXaW5kb3dzLiBEb3dubG9hZCBTYWx0IE9wZW4gYW5kIGdl
dCBzdGFydGVkIG5vdy4KCmA8aHR0cHM6Ly9yZXBvLnNhbHRzdGFjay5jb20v
PmBfCgpgSW5zdGFsbGF0aW9uIEluc3RydWN0aW9ucyA8aHR0cHM6Ly9kb2Nz
LnNhbHRzdGFjay5jb20vZW4vbGF0ZXN0L3RvcGljcy9pbnN0YWxsYXRpb24v
aW5kZXguaHRtbD5gXwoKU2FsdFN0YWNrIERvY3VtZW50YXRpb24KPT09PT09
PT09PT09PT09PT09PT09PT0KCkluc3RhbGxhdGlvbiBpbnN0cnVjdGlvbnMs
IGdldHRpbmcgc3RhcnRlZCBndWlkZXMsIGFuZCBpbi1kZXB0aCBBUEkKZG9j
dW1lbnRhdGlvbi4KCmA8aHR0cHM6Ly9kb2NzLnNhbHRzdGFjay5jb20vZW4v
Z2V0c3RhcnRlZC8+YF8KCmA8aHR0cHM6Ly9kb2NzLnNhbHRzdGFjay5jb20v
ZW4vbGF0ZXN0Lz5gXwoKRW5nYWdlIFNhbHRTdGFjawo9PT09PT09PT09PT09
PT09CgpgU2FsdENvbmZgXywgKipVc2VyIEdyb3VwcyBhbmQgTWVldHVwcyoq
IC0gU2FsdFN0YWNrIGhhcyBhIHZpYnJhbnQgYW5kIGBnbG9iYWwKY29tbXVu
aXR5YF8gb2YgY3VzdG9tZXJzLCB1c2VycywgZGV2ZWxvcGVycyBhbmQgZW50
aHVzaWFzdHMuIENvbm5lY3Qgd2l0aCBvdGhlcgpTYWx0ZWQgZm9sa3MgaW4g
eW91ciBhcmVhIG9mIHRoZSB3b3JsZCwgb3Igam9pbiBgU2FsdENvbmZgXywg
dGhlIFNhbHRTdGFjawphbm51YWwgdXNlciBjb25mZXJlbmNlIGhlbGQgaW4g
U2FsdCBMYWtlIENpdHkuIFBsZWFzZSB2aXNpdCB0aGUgYFNhbHRDb25mYF8g
c2l0ZQpmb3IgZGV0YWlscyBvZiBvdXIgbmV4dCBjb25mZXJlbmNlLiBBbHNv
LCBwbGVhc2UgbGV0IHVzIGtub3cgaWYgeW91IHdvdWxkIGxpa2UKdG8gc3Rh
cnQgYSB1c2VyIGdyb3VwIG9yIGlmIHdlIHNob3VsZCBhZGQgeW91ciBleGlz
dGluZyBTYWx0U3RhY2sgdXNlciBncm91cCB0bwp0aGlzIGxpc3QgYnkgZW1h
aWxpbmc6IGluZm9Ac2FsdHN0YWNrLmNvbQoKKipTYWx0U3RhY2sgVHJhaW5p
bmcqKiAtIEdldCBhY2Nlc3MgdG8gcHJvcHJpZXRhcnkgYFNhbHRTdGFjayBl
ZHVjYXRpb24Kb2ZmZXJpbmdzYF8gdGhyb3VnaCBpbnN0cnVjdG9yLWxlZCB0
cmFpbmluZyBvZmZlcmVkIG9uLXNpdGUsIHZpcnR1YWxseSBvciBhdApTYWx0
U3RhY2sgaGVhZHF1YXJ0ZXJzIGluIFNhbHQgTGFrZSBDaXR5LiBTYWx0U3Rh
Y2sgRW50ZXJwcmlzZSB0cmFpbmluZyBoZWxwcwppbmNyZWFzZSB0aGUgdmFs
dWUgYW5kIGVmZmVjdGl2ZW5lc3Mgb2YgU2FsdFN0YWNrIHNvZnR3YXJlIGZv
ciBhbnkgY3VzdG9tZXIgYW5kCmlzIGEgcHJlcmVxdWlzaXRlIGZvciBjb3Zl
dGVkIGBTYWx0U3RhY2sgQ2VydGlmaWVkIEVuZ2luZWVyIChTU0NFKWBfIHN0
YXR1cy4KU2FsdFN0YWNrIHRyYWluaW5nIGlzIGFsc28gYXZhaWxhYmxlIHRo
cm91Z2ggc2V2ZXJhbCBgU2FsdFN0YWNrIHByb2Zlc3Npb25hbApzZXJ2aWNl
c2BfIG9mZmVyaW5ncy4KCioqRm9sbG93IFNhbHRTdGFjayBvbiAtKioKCiog
WW91VHViZSAtIGA8aHR0cDovL3d3dy55b3V0dWJlLmNvbS9zYWx0c3RhY2s+
YF8KKiBUd2l0dGVyIC0gYDxodHRwOi8vd3d3LnR3aXR0ZXIuY29tL3NhbHRz
dGFjaz5gXwoqIEZhY2Vib29rIC0gYDxodHRwczovL3d3dy5mYWNlYm9vay5j
b20vU2FsdFN0YWNrLz5gXwoqIExpbmtlZEluIC0gYDxodHRwczovL3d3dy5s
aW5rZWRpbi5jb20vY29tcGFueS9zYWx0LXN0YWNrLWluYz5gXwoqIExpbmtl
ZEluIEdyb3VwIC0gYDxodHRwczovL3d3dy5saW5rZWRpbi5jb20vZ3JvdXBz
LzQ4NzcxNjA+YF8KCi4uIF9nbG9iYWwgY29tbXVuaXR5OiBodHRwOi8vd3d3
Lm1lZXR1cC5jb20vcHJvL3NhbHRzdGFjay8KLi4gX1NhbHRDb25mOiBodHRw
Oi8vc2FsdGNvbmYuY29tLwouLiBfU2FsdFN0YWNrIGVkdWNhdGlvbiBvZmZl
cmluZ3M6IGh0dHA6Ly9zYWx0c3RhY2suY29tL3RyYWluaW5nLwouLiBfU2Fs
dFN0YWNrIENlcnRpZmllZCBFbmdpbmVlciAoU1NDRSk6IGh0dHA6Ly9zYWx0
c3RhY2suY29tL2NlcnRpZmljYXRpb24vCi4uIF9TYWx0U3RhY2sgcHJvZmVz
c2lvbmFsIHNlcnZpY2VzOiBodHRwOi8vc2FsdHN0YWNrLmNvbS9zZXJ2aWNl
cy8K
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'Matisse',88111990,b':fireworks: A well-designed local image and video selector for Android',b'Java',321,10404,,10404,False,b'https://api.github.com/repos/zhihu/Matisse/forks',"IVtJbWFnZV0oL2ltYWdlL2Jhbm5lci5wbmcpCgojIE1hdGlzc2UKWyFbQnVp
bGQgU3RhdHVzXShodHRwczovL3RyYXZpcy1jaS5vcmcvemhpaHUvTWF0aXNz
ZS5zdmcpXShodHRwczovL3RyYXZpcy1jaS5vcmcvemhpaHUvTWF0aXNzZSkg
WyAhW0Rvd25sb2FkXShodHRwczovL2FwaS5iaW50cmF5LmNvbS9wYWNrYWdl
cy96aGlodS9tYXZlbi9tYXRpc3NlL2ltYWdlcy9kb3dubG9hZC5zdmcpIF0o
aHR0cHM6Ly9iaW50cmF5LmNvbS96aGlodS9tYXZlbi9tYXRpc3NlL19sYXRl
c3RWZXJzaW9uKQoKTWF0aXNzZSBpcyBhIHdlbGwtZGVzaWduZWQgbG9jYWwg
aW1hZ2UgYW5kIHZpZGVvIHNlbGVjdG9yIGZvciBBbmRyb2lkLiBZb3UgY2Fu
ICAKLSBVc2UgaXQgaW4gQWN0aXZpdHkgb3IgRnJhZ21lbnQKLSBTZWxlY3Qg
aW1hZ2VzIGluY2x1ZGluZyBKUEVHLCBQTkcsIEdJRiBhbmQgdmlkZW9zIGlu
Y2x1ZGluZyBNUEVHLCBNUDQgCi0gQXBwbHkgZGlmZmVyZW50IHRoZW1lcywg
aW5jbHVkaW5nIHR3byBidWlsdC1pbiB0aGVtZXMgYW5kIGN1c3RvbSB0aGVt
ZXMKLSBEaWZmZXJlbnQgaW1hZ2UgbG9hZGVycwotIERlZmluZSBjdXN0b20g
ZmlsdGVyIHJ1bGVzCi0gTW9yZSB0byBmaW5kIG91dCB5b3Vyc2VsZgoKfCBa
aGlodSBTdHlsZSAgICAgICAgICAgICAgICAgICAgfCBEcmFjdWxhIFN0eWxl
ICAgICAgICAgICAgICAgICAgICAgfCBQcmV2aWV3ICAgICAgICAgICAgICAg
ICAgICAgICAgICB8Cnw6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
Onw6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tOnw6LS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS06fAp8IVtdKGltYWdlL3NjcmVl
bnNob3RfemhpaHUucG5nKSB8ICFbXShpbWFnZS9zY3JlZW5zaG90X2RyYWN1
bGEucG5nKSB8ICFbXShpbWFnZS9zY3JlZW5zaG90X3ByZXZpZXcucG5nKXwK
CiMjIERvd25sb2FkCkdyYWRsZToKCmBgYGdyb292eQpyZXBvc2l0b3JpZXMg
ewogICAgamNlbnRlcigpCn0KCmRlcGVuZGVuY2llcyB7CiAgICBpbXBsZW1l
bnRhdGlvbiAnY29tLnpoaWh1LmFuZHJvaWQ6bWF0aXNzZTokbGF0ZXN0X3Zl
cnNpb24nCn0KYGBgCgpDaGVjayBvdXQgW01hdGlzc2UgcmVsZWFzZXNdKGh0
dHBzOi8vZ2l0aHViLmNvbS96aGlodS9NYXRpc3NlL3JlbGVhc2VzKSB0byBz
ZWUgbW9yZSB1bnN0YWJsZSB2ZXJzaW9ucy4KCiMjIFByb0d1YXJkCklmIHlv
dSB1c2UgW0dsaWRlXShodHRwczovL2dpdGh1Yi5jb20vYnVtcHRlY2gvZ2xp
ZGUpIGFzIHlvdXIgaW1hZ2UgZW5naW5lLCBhZGQgcnVsZXMgYXMgR2xpZGUn
cyBSRUFETUUgc2F5cy4gIApBbmQgYWRkIGV4dHJhIHJ1bGU6CmBgYHBybwot
ZG9udHdhcm4gY29tLnNxdWFyZXVwLnBpY2Fzc28uKioKYGBgCgpJZiB5b3Ug
dXNlIFtQaWNhc3NvXShodHRwczovL2dpdGh1Yi5jb20vc3F1YXJlL3BpY2Fz
c28pIGFzIHlvdXIgaW1hZ2UgZW5naW5lLCBhZGQgcnVsZXMgYXMgUGljYXNz
bydzIFJFQURNRSBzYXlzLiAgCkFuZCBhZGQgZXh0cmEgcnVsZToKYGBgcHJv
Ci1kb250d2FybiBjb20uYnVtcHRlY2guZ2xpZGUuKioKYGBgCioqQXR0ZW50
aW9uKio6IFRoZSBhYm92ZSBwcm9ndXJhZCBydWxlcyBhcmUgY29ycmVjdC4K
CiMjIEhvdyBkbyBJIHVzZSBNYXRpc3NlPwojIyMjIFBlcm1pc3Npb24KVGhl
IGxpYnJhcnkgcmVxdWlyZXMgdHdvIHBlcm1pc3Npb25zOgotIGBhbmRyb2lk
LnBlcm1pc3Npb24uUkVBRF9FWFRFUk5BTF9TVE9SQUdFYAotIGBhbmRyb2lk
LnBlcm1pc3Npb24uV1JJVEVfRVhURVJOQUxfU1RPUkFHRWAKClNvIGlmIHlv
dSBhcmUgdGFyZ2V0aW5nIEFuZHJvaWQgNi4wKywgeW91IG5lZWQgdG8gaGFu
ZGxlIHJ1bnRpbWUgcGVybWlzc2lvbiByZXF1ZXN0IGJlZm9yZSBuZXh0IHN0
ZXAuCgojIyMjIFNpbXBsZSB1c2FnZSBzbmlwcGV0Ci0tLS0tLQpTdGFydCBg
TWF0aXNzZUFjdGl2aXR5YCBmcm9tIGN1cnJlbnQgYEFjdGl2aXR5YCBvciBg
RnJhZ21lbnRgOgoKYGBgamF2YQpNYXRpc3NlLmZyb20oTWFpbkFjdGl2aXR5
LnRoaXMpCiAgICAgICAgLmNob29zZShNaW1lVHlwZS5hbGxPZigpKQogICAg
ICAgIC5jb3VudGFibGUodHJ1ZSkKICAgICAgICAubWF4U2VsZWN0YWJsZSg5
KQogICAgICAgIC5hZGRGaWx0ZXIobmV3IEdpZlNpemVGaWx0ZXIoMzIwLCAz
MjAsIDUgKiBGaWx0ZXIuSyAqIEZpbHRlci5LKSkKICAgICAgICAuZ3JpZEV4
cGVjdGVkU2l6ZShnZXRSZXNvdXJjZXMoKS5nZXREaW1lbnNpb25QaXhlbFNp
emUoUi5kaW1lbi5ncmlkX2V4cGVjdGVkX3NpemUpKQogICAgICAgIC5yZXN0
cmljdE9yaWVudGF0aW9uKEFjdGl2aXR5SW5mby5TQ1JFRU5fT1JJRU5UQVRJ
T05fVU5TUEVDSUZJRUQpCiAgICAgICAgLnRodW1ibmFpbFNjYWxlKDAuODVm
KQogICAgICAgIC5pbWFnZUVuZ2luZShuZXcgR2xpZGVFbmdpbmUoKSkKICAg
ICAgICAuc2hvd1ByZXZpZXcoZmFsc2UpIC8vIERlZmF1bHQgaXMgYHRydWVg
CiAgICAgICAgLmZvclJlc3VsdChSRVFVRVNUX0NPREVfQ0hPT1NFKTsKYGBg
CiAKIyMjIyBUaGVtZXMKVGhlcmUgYXJlIHR3byBidWlsdC1pbiB0aGVtZXMg
eW91IGNhbiB1c2UgdG8gc3RhcnQgYE1hdGlzc2VBY3Rpdml0eWA6Ci0gYFIu
c3R5bGUuTWF0aXNzZV9aaGlodWAgKGxpZ2h0IG1vZGUpCi0gYFIuc3R5bGUu
TWF0aXNzZV9EcmFjdWxhYCAoZGFyayBtb2RlKSAgCgpBbmQgQWxzbyB5b3Ug
Y2FuIGRlZmluZSB5b3VyIG93biB0aGVtZSBhcyB5b3Ugd2lzaC4KCiMjIyMg
UmVjZWl2ZSBSZXN1bHQKSW4gYG9uQWN0aXZpdHlSZXN1bHQoKWAgY2FsbGJh
Y2sgb2YgdGhlIHN0YXJ0aW5nIGBBY3Rpdml0eWAgb3IgYEZyYWdtZW50YDoK
CmBgYGphdmEKTGlzdDxVcmk+IG1TZWxlY3RlZDsKCkBPdmVycmlkZQpwcm90
ZWN0ZWQgdm9pZCBvbkFjdGl2aXR5UmVzdWx0KGludCByZXF1ZXN0Q29kZSwg
aW50IHJlc3VsdENvZGUsIEludGVudCBkYXRhKSB7CiAgICBzdXBlci5vbkFj
dGl2aXR5UmVzdWx0KHJlcXVlc3RDb2RlLCByZXN1bHRDb2RlLCBkYXRhKTsK
ICAgIGlmIChyZXF1ZXN0Q29kZSA9PSBSRVFVRVNUX0NPREVfQ0hPT1NFICYm
IHJlc3VsdENvZGUgPT0gUkVTVUxUX09LKSB7CiAgICAgICAgbVNlbGVjdGVk
ID0gTWF0aXNzZS5vYnRhaW5SZXN1bHQoZGF0YSk7CiAgICAgICAgTG9nLmQo
Ik1hdGlzc2UiLCAibVNlbGVjdGVkOiAiICsgbVNlbGVjdGVkKTsKICAgIH0K
fQpgYGAKCiMjIyMgTW9yZQpGaW5kIG1vcmUgZGV0YWlscyBhYm91dCBNYXRp
c3NlIGluIFt3aWtpXShodHRwczovL2dpdGh1Yi5jb20vemhpaHUvTWF0aXNz
ZS93aWtpKS4KCiMjIENvbnRyaWJ1dGluZwpbTWF0aXNzZSBpcyBhbiBPcGVu
IFNvdXJjZSBQcm9qZWN0XShodHRwczovL2dpdGh1Yi5jb20vemhpaHUvTWF0
aXNzZS9ibG9iL21hc3Rlci9DT05UUklCVVRJTkcubWQpCgojIyBUaGFua3MK
VGhpcyBsaWJyYXJ5IGlzIGluc3BpcmVkIGJ5IFtMYWV2YXRlaW5dKGh0dHBz
Oi8vZ2l0aHViLmNvbS9ub2hhbmEvTGFldmF0ZWluKSBhbmQgdXNlcyBzb21l
IG9mIGl0cyBzb3VyY2UgY29kZS4KCiMjIExpY2Vuc2UKCiAgICBDb3B5cmln
aHQgMjAxNyBaaGlodSBJbmMuCgogICAgTGljZW5zZWQgdW5kZXIgdGhlIEFw
YWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7CiAg
ICB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlh
bmNlIHdpdGggdGhlIExpY2Vuc2UuCiAgICBZb3UgbWF5IG9idGFpbiBhIGNv
cHkgb2YgdGhlIExpY2Vuc2UgYXQKCiAgICAgICBodHRwOi8vd3d3LmFwYWNo
ZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKCiAgICBVbmxlc3MgcmVxdWly
ZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcs
IHNvZnR3YXJlCiAgICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBp
cyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAogICAgV0lUSE9V
VCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhl
ciBleHByZXNzIG9yIGltcGxpZWQuCiAgICBTZWUgdGhlIExpY2Vuc2UgZm9y
IHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMg
YW5kCiAgICBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCgo=
",,"bGFuZ3VhZ2U6IGFuZHJvaWQKCmFuZHJvaWQ6CiAgY29tcG9uZW50czoKICAg
IC0gdG9vbHMKICAgIC0gcGxhdGZvcm0tdG9vbHMKICAgIC0gYnVpbGQtdG9v
bHMtMjguMC4zCiAgICAtIGFuZHJvaWQtMjgKICAgIC0gZXh0cmEtYW5kcm9p
ZC1tMnJlcG9zaXRvcnkKCmpkazoKICAtIG9yYWNsZWpkazgKCm5vdGlmaWNh
dGlvbnM6CiAgZW1haWw6IGZhbHNlCgpiZWZvcmVfaW5zdGFsbDoKICAtIGNo
bW9kICt4IGdyYWRsZXcKICAtIG1rZGlyICIkQU5EUk9JRF9IT01FL2xpY2Vu
c2VzIiB8fCB0cnVlCiAgLSBlY2hvIC1lICJcZDU2ZjUxODc0Nzk0NTFlYWJm
MDFmYjc4YWY2ZGZjYjEzMWE2NDgxZSIgIlxuMjQzMzNmOGE2M2I2ODI1ZWE5
YzU1MTRmODNjMjgyOWIwMDRkMWZlZSI+ICIkQU5EUk9JRF9IT01FL2xpY2Vu
c2VzL2FuZHJvaWQtc2RrLWxpY2Vuc2UiCiAgLSBlY2hvIC1lICJcODQ4MzFi
OTQwOTY0NmE5MThlMzA1NzNiYWI0YzljOTEzNDZkOGFiZCIgPiAiJEFORFJP
SURfSE9NRS9saWNlbnNlcy9hbmRyb2lkLXNkay1wcmV2aWV3LWxpY2Vuc2Ui
CgpzY3JpcHQ6CiAgLSAuL2dyYWRsZXcgYXNzZW1ibGUgY2hlY2sKICAtIC4v
Z3JhZGxldyBjaGVja3N0eWxlCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'virtual-dom',16179237,b'A Virtual DOM and diffing algorithm',b'JavaScript',160,10402,,10402,False,b'https://api.github.com/repos/Matt-Esch/virtual-dom/forks',"IyB2aXJ0dWFsLWRvbQoKQSBKYXZhU2NyaXB0IFtET00gbW9kZWxdKCNkb20t
bW9kZWwpIHN1cHBvcnRpbmcgW2VsZW1lbnQgY3JlYXRpb25dKCNlbGVtZW50
LWNyZWF0aW9uKSwgW2RpZmYgY29tcHV0YXRpb25dKCNkaWZmLWNvbXB1dGF0
aW9uKSBhbmQgW3BhdGNoIG9wZXJhdGlvbnNdKCNwYXRjaC1vcGVyYXRpb25z
KSBmb3IgZWZmaWNpZW50IHJlLXJlbmRlcmluZwoKWyFbYnVpbGQgc3RhdHVz
XVsxXV1bMl0KWyFbTlBNIHZlcnNpb25dWzNdXVs0XQpbIVtDb3ZlcmFnZSBT
dGF0dXNdWzVdXVs2XQpbIVtEYXZpcyBEZXBlbmRlbmN5IHN0YXR1c11bN11d
WzhdClshW2V4cGVyaW1lbnRhbF0oaHR0cDovL2h1Z2hzay5naXRodWIuaW8v
c3RhYmlsaXR5LWJhZGdlcy9kaXN0L2V4cGVyaW1lbnRhbC5zdmcpXShodHRw
Oi8vZ2l0aHViLmNvbS9odWdoc2svc3RhYmlsaXR5LWJhZGdlcykKWyFbSm9p
biB0aGUgY2hhdCBhdCBodHRwczovL2dpdHRlci5pbS9NYXR0LUVzY2gvdmly
dHVhbC1kb21dKGh0dHBzOi8vYmFkZ2VzLmdpdHRlci5pbS9Kb2luJTIwQ2hh
dC5zdmcpXShodHRwczovL2dpdHRlci5pbS9NYXR0LUVzY2gvdmlydHVhbC1k
b20/dXRtX3NvdXJjZT1iYWRnZSZ1dG1fbWVkaXVtPWJhZGdlJnV0bV9jYW1w
YWlnbj1wci1iYWRnZSZ1dG1fY29udGVudD1iYWRnZSkKClshW1NhdWNlIFRl
c3QgU3RhdHVzXShodHRwczovL3NhdWNlbGFicy5jb20vYnJvd3Nlci1tYXRy
aXgvbWF0dGVzY2guc3ZnKV0oaHR0cHM6Ly9zYXVjZWxhYnMuY29tL3UvbWF0
dGVzY2gpCgojIyBNb3RpdmF0aW9uCgpNYW51YWwgRE9NIG1hbmlwdWxhdGlv
biBpcyBtZXNzeSBhbmQga2VlcGluZyB0cmFjayBvZiB0aGUgcHJldmlvdXMg
RE9NIHN0YXRlIGlzIGhhcmQuIEEgc29sdXRpb24gdG8gdGhpcyBwcm9ibGVt
IGlzIHRvIHdyaXRlIHlvdXIgY29kZSBhcyBpZiB5b3Ugd2VyZSByZWNyZWF0
aW5nIHRoZSBlbnRpcmUgRE9NIHdoZW5ldmVyIHN0YXRlIGNoYW5nZXMuIE9m
IGNvdXJzZSwgaWYgeW91IGFjdHVhbGx5IHJlY3JlYXRlZCB0aGUgZW50aXJl
IERPTSBldmVyeSB0aW1lIHlvdXIgYXBwbGljYXRpb24gc3RhdGUgY2hhbmdl
ZCwgeW91ciBhcHAgd291bGQgYmUgdmVyeSBzbG93IGFuZCB5b3VyIGlucHV0
IGZpZWxkcyB3b3VsZCBsb3NlIGZvY3VzLgoKYHZpcnR1YWwtZG9tYCBpcyBh
IGNvbGxlY3Rpb24gb2YgbW9kdWxlcyBkZXNpZ25lZCB0byBwcm92aWRlIGEg
ZGVjbGFyYXRpdmUgd2F5IG9mIHJlcHJlc2VudGluZyB0aGUgRE9NIGZvciB5
b3VyIGFwcC4gU28gaW5zdGVhZCBvZiB1cGRhdGluZyB0aGUgRE9NIHdoZW4g
eW91ciBhcHBsaWNhdGlvbiBzdGF0ZSBjaGFuZ2VzLCB5b3Ugc2ltcGx5IGNy
ZWF0ZSBhIHZpcnR1YWwgdHJlZSBvciBgVlRyZWVgLCB3aGljaCBsb29rcyBs
aWtlIHRoZSBET00gc3RhdGUgdGhhdCB5b3Ugd2FudC4gYHZpcnR1YWwtZG9t
YCB3aWxsIHRoZW4gZmlndXJlIG91dCBob3cgdG8gbWFrZSB0aGUgRE9NIGxv
b2sgbGlrZSB0aGlzIGVmZmljaWVudGx5IHdpdGhvdXQgcmVjcmVhdGluZyBh
bGwgb2YgdGhlIERPTSBub2Rlcy4KCmB2aXJ0dWFsLWRvbWAgYWxsb3dzIHlv
dSB0byB1cGRhdGUgYSB2aWV3IHdoZW5ldmVyIHN0YXRlIGNoYW5nZXMgYnkg
Y3JlYXRpbmcgYSBmdWxsIGBWVHJlZWAgb2YgdGhlIHZpZXcgYW5kIHRoZW4g
cGF0Y2hpbmcgdGhlIERPTSBlZmZpY2llbnRseSB0byBsb29rIGV4YWN0bHkg
YXMgeW91IGRlc2NyaWJlZCBpdC4gVGhpcyByZXN1bHRzIGluIGtlZXBpbmcg
bWFudWFsIERPTSBtYW5pcHVsYXRpb24gYW5kIHByZXZpb3VzIHN0YXRlIHRy
YWNraW5nIG91dCBvZiB5b3VyIGFwcGxpY2F0aW9uIGNvZGUsIHByb21vdGlu
ZyBjbGVhbiBhbmQgbWFpbnRhaW5hYmxlIHJlbmRlcmluZyBsb2dpYyBmb3Ig
d2ViIGFwcGxpY2F0aW9ucy4KCiMjIEV4YW1wbGUKCmBgYGphdmFzY3JpcHQK
dmFyIGggPSByZXF1aXJlKCd2aXJ0dWFsLWRvbS9oJyk7CnZhciBkaWZmID0g
cmVxdWlyZSgndmlydHVhbC1kb20vZGlmZicpOwp2YXIgcGF0Y2ggPSByZXF1
aXJlKCd2aXJ0dWFsLWRvbS9wYXRjaCcpOwp2YXIgY3JlYXRlRWxlbWVudCA9
IHJlcXVpcmUoJ3ZpcnR1YWwtZG9tL2NyZWF0ZS1lbGVtZW50Jyk7CgovLyAx
OiBDcmVhdGUgYSBmdW5jdGlvbiB0aGF0IGRlY2xhcmVzIHdoYXQgdGhlIERP
TSBzaG91bGQgbG9vayBsaWtlCmZ1bmN0aW9uIHJlbmRlcihjb3VudCkgIHsK
ICAgIHJldHVybiBoKCdkaXYnLCB7CiAgICAgICAgc3R5bGU6IHsKICAgICAg
ICAgICAgdGV4dEFsaWduOiAnY2VudGVyJywKICAgICAgICAgICAgbGluZUhl
aWdodDogKDEwMCArIGNvdW50KSArICdweCcsCiAgICAgICAgICAgIGJvcmRl
cjogJzFweCBzb2xpZCByZWQnLAogICAgICAgICAgICB3aWR0aDogKDEwMCAr
IGNvdW50KSArICdweCcsCiAgICAgICAgICAgIGhlaWdodDogKDEwMCArIGNv
dW50KSArICdweCcKICAgICAgICB9CiAgICB9LCBbU3RyaW5nKGNvdW50KV0p
Owp9CgovLyAyOiBJbml0aWFsaXNlIHRoZSBkb2N1bWVudAp2YXIgY291bnQg
PSAwOyAgICAgIC8vIFdlIG5lZWQgc29tZSBhcHAgZGF0YS4gSGVyZSB3ZSBq
dXN0IHN0b3JlIGEgY291bnQuCgp2YXIgdHJlZSA9IHJlbmRlcihjb3VudCk7
ICAgICAgICAgICAgICAgLy8gV2UgbmVlZCBhbiBpbml0aWFsIHRyZWUKdmFy
IHJvb3ROb2RlID0gY3JlYXRlRWxlbWVudCh0cmVlKTsgICAgIC8vIENyZWF0
ZSBhbiBpbml0aWFsIHJvb3QgRE9NIG5vZGUgLi4uCmRvY3VtZW50LmJvZHku
YXBwZW5kQ2hpbGQocm9vdE5vZGUpOyAgICAvLyAuLi4gYW5kIGl0IHNob3Vs
ZCBiZSBpbiB0aGUgZG9jdW1lbnQKCi8vIDM6IFdpcmUgdXAgdGhlIHVwZGF0
ZSBsb2dpYwpzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgIGNvdW50
Kys7CgogICAgICB2YXIgbmV3VHJlZSA9IHJlbmRlcihjb3VudCk7CiAgICAg
IHZhciBwYXRjaGVzID0gZGlmZih0cmVlLCBuZXdUcmVlKTsKICAgICAgcm9v
dE5vZGUgPSBwYXRjaChyb290Tm9kZSwgcGF0Y2hlcyk7CiAgICAgIHRyZWUg
PSBuZXdUcmVlOwp9LCAxMDAwKTsKYGBgCltWaWV3IG9uIFJlcXVpcmVCaW5d
KGh0dHA6Ly9yZXF1aXJlYmluLmNvbS8/Z2lzdD01NDkyODQ3YjlhOTAyNWU2
NGJhYikKCiMjIERvY3VtZW50YXRpb24KCllvdSBjYW4gZmluZCB0aGUgZG9j
dW1lbnRhdGlvbiBmb3IgdGhlIHNlcGVyYXRlIGNvbXBvbmVudHMKICBpbiB0
aGVpciBSRUFETUVzCgogLSBGb3IgYGNyZWF0ZS1lbGVtZW50LmpzYCBzZWUg
dGhlIFt2ZG9tIFJFQURNRV0odmRvbS9SRUFETUUubWQpCiAtIEZvciBgZGlm
Zi5qc2Agc2VlIHRoZSBbdnRyZWUgUkVBRE1FXSh2dHJlZS9SRUFETUUubWQp
CiAtIEZvciBgaC5qc2Agc2VlIHRoZSBbdmlydHVhbC1oeXBlcnNjcmlwdCBS
RUFETUVdKHZpcnR1YWwtaHlwZXJzY3JpcHQvUkVBRE1FLm1kKQogLSBGb3Ig
YHBhdGNoLmpzYCBzZWUgdGhlIFt2ZG9tIFJFQURNRV0odmRvbS9SRUFETUUu
bWQpCgpGb3IgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHR5cGUgc2lnbmF0dXJl
cyBvZiB0aGVzZSBtb2R1bGVzIGZlZWwKICBmcmVlIHRvIHJlYWQgdGhlIFtq
YXZhc2NyaXB0IHNpZ25hdHVyZSBkZWZpbml0aW9uXShkb2NzLmpzaWcpCgoj
IyBET00gbW9kZWwKCmB2aXJ0dWFsLWRvbWAgZXhwb3NlcyBhIHNldCBvZiBv
YmplY3RzIGRlc2lnbmVkIGZvciByZXByZXNlbnRpbmcgRE9NIG5vZGVzLiBB
ICJEb2N1bWVudCBPYmplY3QgTW9kZWwgTW9kZWwiIG1pZ2h0IHNlZW0gbGlr
ZSBhIHN0cmFuZ2UgdGVybSwgYnV0IGl0IGlzIGV4YWN0bHkgdGhhdC4gSXQn
cyBhIG5hdGl2ZSBKYXZhU2NyaXB0IHRyZWUgc3RydWN0dXJlIHRoYXQgcmVw
cmVzZW50cyBhIG5hdGl2ZSBET00gbm9kZSB0cmVlLiBXZSBjYWxsIHRoaXMg
YSAqKlZUcmVlKioKCldlIGNhbiBjcmVhdGUgYSBWVHJlZSB1c2luZyB0aGUg
b2JqZWN0cyBkaXJlY3RseSBpbiBhIHZlcmJvc2UgbWFubmVyLCBvciB3ZSBj
YW4gdXNlIHRoZSBtb3JlIHRlcnNlIHZpcnR1YWwtaHlwZXJzY3JpcHQuCgoj
IyMgRXhhbXBsZSAtIGNyZWF0aW5nIGEgVlRyZWUgdXNpbmcgdGhlIG9iamVj
dHMgZGlyZWN0bHkKCmBgYGphdmFzY3JpcHQKdmFyIFZOb2RlID0gcmVxdWly
ZSgndmlydHVhbC1kb20vdm5vZGUvdm5vZGUnKTsKdmFyIFZUZXh0ID0gcmVx
dWlyZSgndmlydHVhbC1kb20vdm5vZGUvdnRleHQnKTsKCmZ1bmN0aW9uIHJl
bmRlcihkYXRhKSB7CiAgICByZXR1cm4gbmV3IFZOb2RlKCdkaXYnLCB7CiAg
ICAgICAgY2xhc3NOYW1lOiAiZ3JlZXRpbmciCiAgICB9LCBbCiAgICAgICAg
bmV3IFZUZXh0KCJIZWxsbyAiICsgU3RyaW5nKGRhdGEubmFtZSkpCiAgICBd
KTsKfQoKbW9kdWxlLmV4cG9ydHMgPSByZW5kZXI7CmBgYAoKIyMjIEV4YW1w
bGUgLSBjcmVhdGluZyBhIFZUcmVlIHVzaW5nIHZpcnR1YWwtaHlwZXJzY3Jp
cHQKCmBgYGphdmFzY3JpcHQKdmFyIGggPSByZXF1aXJlKCd2aXJ0dWFsLWRv
bS9oJyk7CgpmdW5jdGlvbiByZW5kZXIoZGF0YSkgewogICAgcmV0dXJuIGgo
Jy5ncmVldGluZycsIFsnSGVsbG8gJyArIGRhdGEubmFtZV0pOwp9Cgptb2R1
bGUuZXhwb3J0cyA9IHJlbmRlcjsKYGBgCgpUaGUgRE9NIG1vZGVsIGlzIGRl
c2lnbmVkIHRvIGJlIGVmZmljaWVudCB0byBjcmVhdGUgYW5kIHJlYWQgZnJv
bS4gVGhlIHJlYXNvbiB3aHkgd2UgZG9uJ3QganVzdCBjcmVhdGUgYSByZWFs
IERPTSB0cmVlIGlzIHRoYXQgY3JlYXRpbmcgRE9NIG5vZGVzIGFuZCByZWFk
aW5nIHRoZSBub2RlIHByb3BlcnRpZXMgaXMgYW4gZXhwZW5zaXZlIG9wZXJh
dGlvbiB3aGljaCBpcyB3aGF0IHdlIGFyZSB0cnlpbmcgdG8gYXZvaWQuIFJl
YWRpbmcgc29tZSBET00gbm9kZSBwcm9wZXJ0aWVzIGV2ZW4gY2F1c2VzIHNp
ZGUgZWZmZWN0cywgc28gcmVjcmVhdGluZyB0aGUgZW50aXJlIERPTSBzdHJ1
Y3R1cmUgd2l0aCByZWFsIERPTSBub2RlcyBzaW1wbHkgaXNuJ3Qgc3VpdGFi
bGUgZm9yIGhpZ2ggcGVyZm9ybWFuY2UgcmVuZGVyaW5nIGFuZCBpdCBpcyBu
b3QgZWFzeSB0byByZWFzb24gYWJvdXQgZWl0aGVyLgoKQSBgVlRyZWVgIGlz
IGRlc2lnbmVkIHRvIGJlIGVxdWl2YWxlbnQgdG8gYW4gaW1tdXRhYmxlIGRh
dGEgc3RydWN0dXJlLiBXaGlsZSBpdCdzIG5vdCBhY3R1YWxseSBpbW11dGFi
bGUsIHlvdSBjYW4gcmV1c2UgdGhlIG5vZGVzIGluIG11bHRpcGxlIHBsYWNl
cyBhbmQgdGhlIGZ1bmN0aW9ucyB3ZSBoYXZlIGV4cG9zZWQgdGhhdCB0YWtl
IFZUcmVlcyBhcyBhcmd1bWVudHMgbmV2ZXIgbXV0YXRlIHRoZSB0cmVlcy4g
V2UgY291bGQgZnJlZXplIHRoZSBvYmplY3RzIGluIHRoZSBtb2RlbCBidXQg
ZG9uJ3QgZm9yIGVmZmljaWVuY3kuIChUaGUgYmVuZWZpdHMgb2YgYW4gaW1t
dXRhYmxlLWVxdWl2YWxlbnQgZGF0YSBzdHJ1Y3R1cmUgd2lsbCBiZSBkb2N1
bWVudGVkIGluIHZ0cmVlIG9yIGJsb2cgcG9zdCBhdCBzb21lIHBvaW50KQoK
CgojIyBFbGVtZW50IGNyZWF0aW9uCgpgYGBoYXNrZWxsCmNyZWF0ZUVsZW1l
bnQodHJlZTpWVHJlZSkgLT4gRE9NTm9kZQpgYGAKCkdpdmVuIHRoYXQgd2Ug
aGF2ZSBjcmVhdGVkIGEgYFZUcmVlYCwgd2UgbmVlZCBzb21lIHdheSB0byB0
cmFuc2xhdGUgdGhpcyBpbnRvIGEgcmVhbCBET00gdHJlZSBvZiBzb21lIHNv
cnQuIFRoaXMgaXMgcHJvdmlkZWQgYnkgYGNyZWF0ZS1lbGVtZW50LmpzYC4g
V2hlbiByZW5kZXJpbmcgZm9yIHRoZSBmaXJzdCB0aW1lIHdlIHdvdWxkIHBh
c3MgYSBjb21wbGV0ZSBgVlRyZWVgIHRvIGNyZWF0ZS1lbGVtZW50IGZ1bmN0
aW9uIHRvIGNyZWF0ZSB0aGUgZXF1aXZhbGVudCBET00gbm9kZS4KCiMjIERp
ZmYgY29tcHV0YXRpb24KCmBgYGhhc2tlbGwKZGlmZihwcmV2aW91czpWVHJl
ZSwgY3VycmVudDpWVHJlZSkgLT4gUGF0Y2hPYmplY3QKYGBgCgpUaGUgcHJp
bWFyeSBtb3RpdmF0aW9uIGJlaGluZCB2aXJ0dWFsLWRvbSBpcyB0byBhbGxv
dyB1cyB0byB3cml0ZSBjb2RlIGluZGVwZW5kZW50IG9mIHByZXZpb3VzIHN0
YXRlLiBTbyB3aGVuIG91ciBhcHBsaWNhdGlvbiBzdGF0ZSBjaGFuZ2VzIHdl
IHdpbGwgZ2VuZXJhdGUgYSBuZXcgYFZUcmVlYC4gVGhlIGBkaWZmYCBmdW5j
dGlvbiBjcmVhdGVzIGEgc2V0IG9mIERPTSBwYXRjaGVzIHRoYXQsIGJhc2Vk
IG9uIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIHByZXZpb3VzIGBWVHJl
ZWAgYW5kIHRoZSBjdXJyZW50IGBWVHJlZWAsIHdpbGwgdXBkYXRlIHRoZSBw
cmV2aW91cyBET00gdHJlZSB0byBtYXRjaCB0aGUgbmV3IGBWVHJlZWAuCgoj
IyBQYXRjaCBvcGVyYXRpb25zCgpgYGBoYXNrZWxsCnBhdGNoKHJvb3ROb2Rl
OkRPTU5vZGUsIHBhdGNoZXM6UGF0Y2hPYmplY3QpIC0+IERPTU5vZGUgbmV3
Um9vdE5vZGUKYGBgCgpPbmNlIHdlIGhhdmUgY29tcHV0ZWQgdGhlIHNldCBv
ZiBwYXRjaGVzIHJlcXVpcmVkIHRvIGFwcGx5IHRvIHRoZSBET00sIHdlIG5l
ZWQgYSBmdW5jdGlvbiB0aGF0IGNhbiBhcHBseSB0aG9zZSBwYXRjaGVzLiBU
aGlzIGlzIHByb3ZpZGVkIGJ5IHRoZSBgcGF0Y2hgIGZ1bmN0aW9uLiBHaXZl
biBhIERPTSByb290IG5vZGUgYW5kIGEgc2V0IG9mIERPTSBwYXRjaGVzLCB0
aGUgYHBhdGNoYCBmdW5jdGlvbiB3aWxsIHVwZGF0ZSB0aGUgRE9NLiBBZnRl
ciBhcHBseWluZyB0aGUgcGF0Y2hlcyB0byB0aGUgRE9NLCB0aGUgRE9NIHNo
b3VsZCBsb29rIGxpa2UgdGhlIG5ldyBgVlRyZWVgLgoKCiMjIE9yaWdpbmFs
IG1vdGl2YXRpb24KCnZpcnR1YWwtZG9tIGlzIGhlYXZpbHkgaW5zcGlyZWQg
YnkgdGhlIGlubmVyIHdvcmtpbmdzIG9mIFJlYWN0IGJ5IGZhY2Vib29rLiBU
aGlzIHByb2plY3Qgb3JpZ2luYXRlZCBhcyBhIGdpc3Qgb2YgaWRlYXMsIHdo
aWNoIFt3ZSBoYXZlIGxpbmtlZCB0byBwcm92aWRlIHNvbWUgYmFja2dyb3Vu
ZCBjb250ZXh0XShodHRwczovL2dpc3QuZ2l0aHViLmNvbS9SYXlub3MvODQx
NDg0NikuCgojIyBUb29scwoKKiBbaHRtbDJoc2NyaXB0XShodHRwczovL2dp
dGh1Yi5jb20vdHdpbHNvbjYzL2h0bWwyaHNjcmlwdCkgLSBQYXJzZSBIVE1M
IGludG8gaHlwZXJzY3JpcHQKKiBbaHRtbDJoc2NyaXB0Lmhlcm9rdWFwcC5j
b21dKGh0dHA6Ly9odG1sMmhzY3JpcHQuaGVyb2t1YXBwLmNvbS8pIC0gT25s
aW5lIFRvb2wgdGhhdCBjb252ZXJ0cyBodG1sIHNuaXBwZXRzIHRvIGh5cGVy
c2NyaXB0CiogW2h0bWwyaHlwZXJzY3JpcHRdKGh0dHBzOi8vZ2l0aHViLmNv
bS91bmZyYW1ld29yay9odG1sMmh5cGVyc2NyaXB0KSAtIE9yaWdpbmFsIGNv
bW1hbmRsaW5lIHV0aWxpdHkgdG8gY29udmVydCBsZWdhY3kgSFRNTCBtYXJr
dXAgaW50byBoeXBlcnNjcmlwdAoKClsxXTogaHR0cHM6Ly9zZWN1cmUudHJh
dmlzLWNpLm9yZy9NYXR0LUVzY2gvdmlydHVhbC1kb20uc3ZnClsyXTogaHR0
cHM6Ly90cmF2aXMtY2kub3JnL01hdHQtRXNjaC92aXJ0dWFsLWRvbQpbM106
IGh0dHBzOi8vYmFkZ2UuZnVyeS5pby9qcy92aXJ0dWFsLWRvbS5zdmcKWzRd
OiBodHRwczovL2JhZGdlLmZ1cnkuaW8vanMvdmlydHVhbC1kb20KWzVdOiBo
dHRwOi8vaW1nLnNoaWVsZHMuaW8vY292ZXJhbGxzL01hdHQtRXNjaC92aXJ0
dWFsLWRvbS5zdmcKWzZdOiBodHRwczovL2NvdmVyYWxscy5pby9yL01hdHQt
RXNjaC92aXJ0dWFsLWRvbQpbN106IGh0dHBzOi8vZGF2aWQtZG0ub3JnL01h
dHQtRXNjaC92aXJ0dWFsLWRvbS5zdmcKWzhdOiBodHRwczovL2RhdmlkLWRt
Lm9yZy9NYXR0LUVzY2gvdmlydHVhbC1kb20K
",,"bGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczoKLSAnMC4xMCcKLSAnMC4xMicK
YmVmb3JlX2luc3RhbGw6Ci0gbnBtIGluc3RhbGwgbnBtIC1nCmJlZm9yZV9z
Y3JpcHQ6Ci0gbnBtIGluc3RhbGwKLSBucG0gaW5zdGFsbCBpc3RhbmJ1bCBj
b3ZlcmFsbHMKc2NyaXB0OiBucG0gcnVuIHRyYXZpcy10ZXN0CmVudjoKICBn
bG9iYWw6CiAgLSBzZWN1cmU6IEpUcWp5ZUFvUW1LTFZIOVN6U2VJV3kwMkRj
WTlXQWtmSVUvdzhZb3R4SXNFTFdiUHlaNnNlWUJFaEhpQitKWUo5VWV1VWd5
WWhaMTQ0U1BtNks4bzV3K21lck1EN3pNZ2xyOTVhLzhDSm5qTUJkUEsyLzBS
amNrejlPY0FOYW81aytRbStRQkJ1M2tlbzZkUnRLWDI1ZzZXckt3T1l1OE9M
ejVjcmFkemhMcz0KICAtIHNlY3VyZTogT0JDdFpaZk01TFp5VCtmVDg0S2I3
TjBQUDFKZFRRUTNTeW1aRDVBYytKWUszMGdDRzZVTy9vNzEzUWpsSTV5Vkc3
cXdkRmxQUU9ZRjJWVmY3eXc2ZFV2ZjZwS2o1MTQyN2I5bk9pcjhIYjlYalds
cG8vNzcwZEt4bHZyTnh0UTNra3lnQUpUVThGZTdKYmszMHpKZWYvQmUxN0Mw
N3ZpaUNaczRzSHNpWkM4PQo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
