name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'python-guide',1481305,"b'Python best practices guidebook, written for humans. '",b'Batchfile',91,19636,,1356,False,b'https://api.github.com/repos/realpython/python-guide/forks',"SGl0Y2hoaWtlcidzIEd1aWRlIHRvIFB5dGhvbgo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09CgoqKlB5dGhvbiBCZXN0IFByYWN0aWNlcyBHdWlkZWJv
b2sqKgoK4oaSIFJlYWQgdGhlIGZyZWUgZ3VpZGUgYXQ6IGBkb2NzLnB5dGhv
bi1ndWlkZS5vcmcgPGh0dHBzOi8vZG9jcy5weXRob24tZ3VpZGUub3JnPmBf
CgouLiBpbWFnZTo6IGh0dHBzOi8vZmFybTEuc3RhdGljZmxpY2tyLmNvbS82
MjgvMzMxNzM4MjQ5MzJfNThhZGQzNDU4MV9rX2QuanBnCgotLS0tLS0tLS0t
LQoKKipXb3JrIGluIHByb2dyZXNzLiBJZiB5b3UnZCBsaWtlIHRvIGhlbHAs
IHBsZWFzZSBkby4gVGhlcmUncyBhIGxvdCBvZiB3b3JrIHRvCmJlIGRvbmUu
KioKClRoaXMgZ3VpZGUgaXMgY3VycmVudGx5IHVuZGVyIGhlYXZ5IGRldmVs
b3BtZW50LiBUaGlzIG9waW5pb25hdGVkIGd1aWRlCmV4aXN0cyB0byBwcm92
aWRlIGJvdGggbm92aWNlIGFuZCBleHBlcnQgUHl0aG9uIGRldmVsb3BlcnMg
YSBiZXN0IHByYWN0aWNlCmhhbmRib29rIHRvIHRoZSBpbnN0YWxsYXRpb24s
IGNvbmZpZ3VyYXRpb24sIGFuZCB1c2FnZSBvZiBQeXRob24gb24gYSBkYWls
eQpiYXNpcy4KCgpUb3BpY3MgaW5jbHVkZToKCi0gUGxhdGZvcm0gYW5kIHZl
cnNpb24tc3BlY2lmaWMgaW5zdGFsbGF0aW9ucwotIFB5MmFwcCwgUHkyZXhl
LCBiYmZyZWV6ZSwgcHlJbnN0YWxsZXIKLSBQaXAKLSBOdW1weSwgc2NpcHks
IHN0YXRweSwgcHlwbG90LCBtYXRwbG90bGliCi0gVmlydHVhbGVudgotIEZh
YnJpYwotIEV4aGF1c3RpdmUgbW9kdWxlIHJlY29tbWVuZGF0aW9ucywgZ3Jv
dXBlZCBieSB0b3BpYy9wdXJwb3NlCi0gV2hpY2ggbGlicmFyaWVzIHRvIHVz
ZSBmb3Igd2hhdAotIFNlcnZlciBjb25maWd1cmF0aW9ucyAmIHRvb2xzIGZv
ciB2YXJpb3VzIHdlYiBmcmFtZXdvcmtzCi0gRG9jdW1lbnRhdGlvbjogd3Jp
dGluZyBpdAotIFRlc3Rpbmc6IEplbmtpbnMgJiB0b3ggZ3VpZGVzCi0gSG93
IHRvIGVhc2lseSBpbnRlcmZhY2UgYGBoZ2BgIGZyb20gYGBnaXRgYAoKSWYg
eW91IGFyZW4ndCBmb25kIG9mIHJlYWRpbmcgcmVTdHJ1Y3R1cmVkVGV4dCwg
dGhlcmUgaXMgYW4KYWxtb3N0IHVwLXRvLWRhdGUgYEhUTUwgdmVyc2lvbiBh
dCBkb2NzLnB5dGhvbi1ndWlkZS5vcmcKPGh0dHBzOi8vZG9jcy5weXRob24t
Z3VpZGUub3JnPmBfLgo=
",,19636,"c3VkbzogZmFsc2UKbGFuZ3VhZ2U6IHB5dGhvbgpweXRob246CiAgLSAiMy42
IgppbnN0YWxsOiBwaXAgaW5zdGFsbCBzcGhpbngKc2NyaXB0OgogIC0gbWFr
ZSBkb2N0ZXN0CiAgLSBtYWtlIGh0bWwK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'Probabilistic-Programming-and-Bayesian-Methods-for-Hackers',7607075,"b'aka ""Bayesian Methods for Hackers"": An introduction to Bayesian methods + probabilistic programming with a computation/understanding-first, mathematics-second point of view. All in pure Python ;)  '",b'Jupyter Notebook',154,19633,,1409,False,b'https://api.github.com/repos/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/forks',"IyBbQmF5ZXNpYW4gTWV0aG9kcyBmb3IgSGFja2Vyc10oaHR0cDovL2NhbWRh
dmlkc29ucGlsb24uZ2l0aHViLmlvL1Byb2JhYmlsaXN0aWMtUHJvZ3JhbW1p
bmctYW5kLUJheWVzaWFuLU1ldGhvZHMtZm9yLUhhY2tlcnMvKQojIyMjICpV
c2luZyBQeXRob24gYW5kIFB5TUMqCgoKVGhlIEJheWVzaWFuIG1ldGhvZCBp
cyB0aGUgbmF0dXJhbCBhcHByb2FjaCB0byBpbmZlcmVuY2UsIHlldCBpdCBp
cyBoaWRkZW4gZnJvbSByZWFkZXJzIGJlaGluZCBjaGFwdGVycyBvZiBzbG93
LCBtYXRoZW1hdGljYWwgYW5hbHlzaXMuIFRoZSB0eXBpY2FsIHRleHQgb24g
QmF5ZXNpYW4gaW5mZXJlbmNlIGludm9sdmVzIHR3byB0byB0aHJlZSBjaGFw
dGVycyBvbiBwcm9iYWJpbGl0eSB0aGVvcnksIHRoZW4gZW50ZXJzIHdoYXQg
QmF5ZXNpYW4gaW5mZXJlbmNlIGlzLiBVbmZvcnR1bmF0ZWx5LCBkdWUgdG8g
bWF0aGVtYXRpY2FsIGludHJhY3RhYmlsaXR5IG9mIG1vc3QgQmF5ZXNpYW4g
bW9kZWxzLCB0aGUgcmVhZGVyIGlzIG9ubHkgc2hvd24gc2ltcGxlLCBhcnRp
ZmljaWFsIGV4YW1wbGVzLiBUaGlzIGNhbiBsZWF2ZSB0aGUgdXNlciB3aXRo
IGEgKnNvLXdoYXQqIGZlZWxpbmcgYWJvdXQgQmF5ZXNpYW4gaW5mZXJlbmNl
LiBJbiBmYWN0LCB0aGlzIHdhcyB0aGUgYXV0aG9yJ3Mgb3duIHByaW9yIG9w
aW5pb24uCgpBZnRlciBzb21lIHJlY2VudCBzdWNjZXNzIG9mIEJheWVzaWFu
IG1ldGhvZHMgaW4gbWFjaGluZS1sZWFybmluZyBjb21wZXRpdGlvbnMsIEkg
ZGVjaWRlZCB0byBpbnZlc3RpZ2F0ZSB0aGUgc3ViamVjdCBhZ2Fpbi4gRXZl
biB3aXRoIG15IG1hdGhlbWF0aWNhbCBiYWNrZ3JvdW5kLCBpdCB0b29rIG1l
IHRocmVlIHN0cmFpZ2h0LWRheXMgb2YgcmVhZGluZyBleGFtcGxlcyBhbmQg
dHJ5aW5nIHRvIHB1dCB0aGUgcGllY2VzIHRvZ2V0aGVyIHRvIHVuZGVyc3Rh
bmQgdGhlIG1ldGhvZHMuIFRoZXJlIHdhcyBzaW1wbHkgbm90IGVub3VnaCBs
aXRlcmF0dXJlIGJyaWRnaW5nIHRoZW9yeSB0byBwcmFjdGljZS4gVGhlIHBy
b2JsZW0gd2l0aCBteSBtaXN1bmRlcnN0YW5kaW5nIHdhcyB0aGUgZGlzY29u
bmVjdCBiZXR3ZWVuIEJheWVzaWFuIG1hdGhlbWF0aWNzIGFuZCBwcm9iYWJp
bGlzdGljIHByb2dyYW1taW5nLiBUaGF0IGJlaW5nIHNhaWQsIEkgc3VmZmVy
ZWQgdGhlbiBzbyB0aGUgcmVhZGVyIHdvdWxkIG5vdCBoYXZlIHRvIG5vdy4g
VGhpcyBib29rIGF0dGVtcHRzIHRvIGJyaWRnZSB0aGUgZ2FwLgoKSWYgQmF5
ZXNpYW4gaW5mZXJlbmNlIGlzIHRoZSBkZXN0aW5hdGlvbiwgdGhlbiBtYXRo
ZW1hdGljYWwgYW5hbHlzaXMgaXMgYSBwYXJ0aWN1bGFyIHBhdGggdG93YXJk
cyBpdC4gT24gdGhlIG90aGVyIGhhbmQsIGNvbXB1dGluZyBwb3dlciBpcyBj
aGVhcCBlbm91Z2ggdGhhdCB3ZSBjYW4gYWZmb3JkIHRvIHRha2UgYW4gYWx0
ZXJuYXRlIHJvdXRlIHZpYSBwcm9iYWJpbGlzdGljIHByb2dyYW1taW5nLiBU
aGUgbGF0dGVyIHBhdGggaXMgbXVjaCBtb3JlIHVzZWZ1bCwgYXMgaXQgZGVu
aWVzIHRoZSBuZWNlc3NpdHkgb2YgbWF0aGVtYXRpY2FsIGludGVydmVudGlv
biBhdCBlYWNoIHN0ZXAsIHRoYXQgaXMsIHdlIHJlbW92ZSBvZnRlbi1pbnRy
YWN0YWJsZSBtYXRoZW1hdGljYWwgYW5hbHlzaXMgYXMgYSBwcmVyZXF1aXNp
dGUgdG8gQmF5ZXNpYW4gaW5mZXJlbmNlLiBTaW1wbHkgcHV0LCB0aGlzIGxh
dHRlciBjb21wdXRhdGlvbmFsIHBhdGggcHJvY2VlZHMgdmlhIHNtYWxsIGlu
dGVybWVkaWF0ZSBqdW1wcyBmcm9tIGJlZ2lubmluZyB0byBlbmQsIHdoZXJl
IGFzIHRoZSBmaXJzdCBwYXRoIHByb2NlZWRzIGJ5IGVub3Jtb3VzIGxlYXBz
LCBvZnRlbiBsYW5kaW5nIGZhciBhd2F5IGZyb20gb3VyIHRhcmdldC4gRnVy
dGhlcm1vcmUsIHdpdGhvdXQgYSBzdHJvbmcgbWF0aGVtYXRpY2FsIGJhY2tn
cm91bmQsIHRoZSBhbmFseXNpcyByZXF1aXJlZCBieSB0aGUgZmlyc3QgcGF0
aCBjYW5ub3QgZXZlbiB0YWtlIHBsYWNlLgoKKkJheWVzaWFuIE1ldGhvZHMg
Zm9yIEhhY2tlcnMqIGlzIGRlc2lnbmVkIGFzIGFuIGludHJvZHVjdGlvbiB0
byBCYXllc2lhbiBpbmZlcmVuY2UgZnJvbSBhIGNvbXB1dGF0aW9uYWwvdW5k
ZXJzdGFuZGluZy1maXJzdCwgYW5kIG1hdGhlbWF0aWNzLXNlY29uZCwgcG9p
bnQgb2Ygdmlldy4gT2YgY291cnNlIGFzIGFuIGludHJvZHVjdG9yeSBib29r
LCB3ZSBjYW4gb25seSBsZWF2ZSBpdCBhdCB0aGF0OiBhbiBpbnRyb2R1Y3Rv
cnkgYm9vay4gRm9yIHRoZSBtYXRoZW1hdGljYWxseSB0cmFpbmVkLCB0aGV5
IG1heSBjdXJlIHRoZSBjdXJpb3NpdHkgdGhpcyB0ZXh0IGdlbmVyYXRlcyB3
aXRoIG90aGVyIHRleHRzIGRlc2lnbmVkIHdpdGggbWF0aGVtYXRpY2FsIGFu
YWx5c2lzIGluIG1pbmQuIEZvciB0aGUgZW50aHVzaWFzdCB3aXRoIGxlc3Mg
bWF0aGVtYXRpY2FsIGJhY2tncm91bmQsIG9yIG9uZSB3aG8gaXMgbm90IGlu
dGVyZXN0ZWQgaW4gdGhlIG1hdGhlbWF0aWNzIGJ1dCBzaW1wbHkgdGhlIHBy
YWN0aWNlIG9mIEJheWVzaWFuIG1ldGhvZHMsIHRoaXMgdGV4dCBzaG91bGQg
YmUgc3VmZmljaWVudCBhbmQgZW50ZXJ0YWluaW5nLgoKVGhlIGNob2ljZSBv
ZiBQeU1DIGFzIHRoZSBwcm9iYWJpbGlzdGljIHByb2dyYW1taW5nIGxhbmd1
YWdlIGlzIHR3by1mb2xkLiBBcyBvZiB0aGlzIHdyaXRpbmcsIHRoZXJlIGlz
IGN1cnJlbnRseSBubyBjZW50cmFsIHJlc291cmNlIGZvciBleGFtcGxlcyBh
bmQgZXhwbGFuYXRpb25zIGluIHRoZSBQeU1DIHVuaXZlcnNlLiBUaGUgb2Zm
aWNpYWwgZG9jdW1lbnRhdGlvbiBhc3N1bWVzIHByaW9yIGtub3dsZWRnZSBv
ZiBCYXllc2lhbiBpbmZlcmVuY2UgYW5kIHByb2JhYmlsaXN0aWMgcHJvZ3Jh
bW1pbmcuIFdlIGhvcGUgdGhpcyBib29rIGVuY291cmFnZXMgdXNlcnMgYXQg
ZXZlcnkgbGV2ZWwgdG8gbG9vayBhdCBQeU1DLiBTZWNvbmRseSwgd2l0aCBy
ZWNlbnQgY29yZSBkZXZlbG9wbWVudHMgYW5kIHBvcHVsYXJpdHkgb2YgdGhl
IHNjaWVudGlmaWMgc3RhY2sgaW4gUHl0aG9uLCBQeU1DIGlzIGxpa2VseSB0
byBiZWNvbWUgYSBjb3JlIGNvbXBvbmVudCBzb29uIGVub3VnaC4KClB5TUMg
ZG9lcyBoYXZlIGRlcGVuZGVuY2llcyB0byBydW4sIG5hbWVseSBOdW1QeSBh
bmQgKG9wdGlvbmFsbHkpIFNjaVB5LiBUbyBub3QgbGltaXQgdGhlIHVzZXIs
IHRoZSBleGFtcGxlcyBpbiB0aGlzIGJvb2sgd2lsbCByZWx5IG9ubHkgb24g
UHlNQywgTnVtUHksIFNjaVB5IGFuZCBNYXRwbG90bGliLgoKClByaW50ZWQg
VmVyc2lvbiBieSBBZGRpc29uLVdlc2xleQotLS0tLS0KPGRpdiBzdHlsZT0i
ZmxvYXQ6IHJpZ2h0OyBtYXJnaW4tbGVmdDogMzBweDsiPjxpbWcgdGl0bGU9
IkJheWVzaWFuIE1ldGhvZHMgZm9yIEhhY2tlcnNnInN0eWxlPSJmbG9hdDog
cmlnaHQ7bWFyZ2luLWxlZnQ6IDMwcHg7IiBzcmM9Imh0dHA6Ly93d3ctZnAu
cGVhcnNvbmhpZ2hlcmVkLmNvbS9hc3NldHMvaGlwL2ltYWdlcy9iaWdjb3Zl
cnMvMDEzMzkwMjgzOC5qcGciIGFsaWduPXJpZ2h0IGhlaWdodCA9IDIwMCAv
PjwvZGl2PgoKKipCYXllc2lhbiBNZXRob2RzIGZvciBIYWNrZXJzIGlzIG5v
dyBhdmFpbGFibGUgYXMgYSBwcmludGVkIGJvb2shKiogWW91IGNhbiBwaWNr
IHVwIGEgY29weSBvbiBbQW1hem9uXShodHRwOi8vd3d3LmFtYXpvbi5jb20v
QmF5ZXNpYW4tTWV0aG9kcy1IYWNrZXJzLVByb2JhYmlsaXN0aWMtQWRkaXNv
bi1XZXNsZXkvZHAvMDEzMzkwMjgzOCkuIFdoYXQgYXJlIHRoZSBkaWZmZXJl
bmNlcyBiZXR3ZWVuIHRoZSBvbmxpbmUgdmVyc2lvbiBhbmQgdGhlIHByaW50
ZWQgdmVyc2lvbj8KCiAtIEFkZGl0aW9uYWwgQ2hhcHRlciBvbiBCYXllc2lh
biBBL0IgdGVzdGluZwogLSBVcGRhdGVkIGV4YW1wbGVzCiAtIEFuc3dlcnMg
dG8gdGhlIGVuZCBvZiBjaGFwdGVyIHF1ZXN0aW9ucwogLSBBZGRpdGlvbmFs
IGV4cGxhbmF0aW9uLCBhbmQgcmV3cml0dGVuIHNlY3Rpb25zIHRvIGFpZCB0
aGUgcmVhZGVyLiAKCgpDb250ZW50cwotLS0tLS0KClNlZSB0aGUgcHJvamVj
dCBob21lcGFnZSBbaGVyZV0oaHR0cDovL2NhbWRhdmlkc29ucGlsb24uZ2l0
aHViLmlvL1Byb2JhYmlsaXN0aWMtUHJvZ3JhbW1pbmctYW5kLUJheWVzaWFu
LU1ldGhvZHMtZm9yLUhhY2tlcnMvKSBmb3IgZXhhbXBsZXMsIHRvby4KCgpU
aGUgYmVsb3cgY2hhcHRlcnMgYXJlIHJlbmRlcmVkIHZpYSB0aGUgKm5idmll
d2VyKiBhdApbbmJ2aWV3ZXIuanVweXRlci5vcmcvXShodHRwOi8vbmJ2aWV3
ZXIuanVweXRlci5vcmcvKSwgYW5kIGlzIHJlYWQtb25seSBhbmQgcmVuZGVy
ZWQgaW4gcmVhbC10aW1lLgpJbnRlcmFjdGl2ZSBub3RlYm9va3MgKyBleGFt
cGxlcyBjYW4gYmUgZG93bmxvYWRlZCBieSBjbG9uaW5nISAKCiMjIyBQeU1D
MgoKKiBbKipQcm9sb2d1ZToqKl0oaHR0cDovL25idmlld2VyLmp1cHl0ZXIu
b3JnL3VybHMvcmF3LmdpdGh1Yi5jb20vQ2FtRGF2aWRzb25QaWxvbi9Qcm9i
YWJpbGlzdGljLVByb2dyYW1taW5nLWFuZC1CYXllc2lhbi1NZXRob2RzLWZv
ci1IYWNrZXJzL21hc3Rlci9Qcm9sb2d1ZS9Qcm9sb2d1ZS5pcHluYikgV2h5
IHdlIGRvIGl0LgoKKiBbKipDaGFwdGVyIDE6IEludHJvZHVjdGlvbiB0byBC
YXllc2lhbiBNZXRob2RzKipdKGh0dHA6Ly9uYnZpZXdlci5qdXB5dGVyLm9y
Zy91cmxzL3Jhdy5naXRodWIuY29tL0NhbURhdmlkc29uUGlsb24vUHJvYmFi
aWxpc3RpYy1Qcm9ncmFtbWluZy1hbmQtQmF5ZXNpYW4tTWV0aG9kcy1mb3It
SGFja2Vycy9tYXN0ZXIvQ2hhcHRlcjFfSW50cm9kdWN0aW9uL0NoMV9JbnRy
b2R1Y3Rpb25fUHlNQzIuaXB5bmIpCiAgICBJbnRyb2R1Y3Rpb24gdG8gdGhl
IHBoaWxvc29waHkgYW5kIHByYWN0aWNlIG9mIEJheWVzaWFuIG1ldGhvZHMg
YW5kIGFuc3dlcmluZyB0aGUgcXVlc3Rpb24sICJXaGF0IGlzIHByb2JhYmls
aXN0aWMgcHJvZ3JhbW1pbmc/IiBFeGFtcGxlcyBpbmNsdWRlOgogICAgLSBJ
bmZlcnJpbmcgaHVtYW4gYmVoYXZpb3VyIGNoYW5nZXMgZnJvbSB0ZXh0IG1l
c3NhZ2UgcmF0ZXMKICAgIAoqIFsqKkNoYXB0ZXIgMjogQSBsaXR0bGUgbW9y
ZSBvbiBQeU1DKipdKGh0dHA6Ly9uYnZpZXdlci5qdXB5dGVyLm9yZy91cmxz
L3Jhdy5naXRodWIuY29tL0NhbURhdmlkc29uUGlsb24vUHJvYmFiaWxpc3Rp
Yy1Qcm9ncmFtbWluZy1hbmQtQmF5ZXNpYW4tTWV0aG9kcy1mb3ItSGFja2Vy
cy9tYXN0ZXIvQ2hhcHRlcjJfTW9yZVB5TUMvQ2gyX01vcmVQeU1DX1B5TUMy
LmlweW5iKQogICAgV2UgZXhwbG9yZSBtb2RlbGluZyBCYXllc2lhbiBwcm9i
bGVtcyB1c2luZyBQeXRob24ncyBQeU1DIGxpYnJhcnkgdGhyb3VnaCBleGFt
cGxlcy4gSG93IGRvIHdlIGNyZWF0ZSBCYXllc2lhbiBtb2RlbHM/IEV4YW1w
bGVzIGluY2x1ZGU6CiAgICAtIERldGVjdGluZyB0aGUgZnJlcXVlbmN5IG9m
IGNoZWF0aW5nIHN0dWRlbnRzLCB3aGlsZSBhdm9pZGluZyBsaWFycwogICAg
LSBDYWxjdWxhdGluZyBwcm9iYWJpbGl0aWVzIG9mIHRoZSBDaGFsbGVuZ2Vy
IHNwYWNlLXNodXR0bGUgZGlzYXN0ZXIKICAgIAoqIFsqKkNoYXB0ZXIgMzog
T3BlbmluZyB0aGUgQmxhY2sgQm94IG9mIE1DTUMqKl0oaHR0cDovL25idmll
d2VyLmp1cHl0ZXIub3JnL3VybHMvcmF3LmdpdGh1Yi5jb20vQ2FtRGF2aWRz
b25QaWxvbi9Qcm9iYWJpbGlzdGljLVByb2dyYW1taW5nLWFuZC1CYXllc2lh
bi1NZXRob2RzLWZvci1IYWNrZXJzL21hc3Rlci9DaGFwdGVyM19NQ01DL0No
M19JbnRyb01DTUNfUHlNQzIuaXB5bmIpCiAgICBXZSBkaXNjdXNzIGhvdyBN
Q01DIG9wZXJhdGVzIGFuZCBkaWFnbm9zdGljIHRvb2xzLiBFeGFtcGxlcyBp
bmNsdWRlOgogICAgLSBCYXllc2lhbiBjbHVzdGVyaW5nIHdpdGggbWl4dHVy
ZSBtb2RlbHMKICAgIAoqIFsqKkNoYXB0ZXIgNDogVGhlIEdyZWF0ZXN0IFRo
ZW9yZW0gTmV2ZXIgVG9sZCoqXShodHRwOi8vbmJ2aWV3ZXIuanVweXRlci5v
cmcvdXJscy9yYXcuZ2l0aHViLmNvbS9DYW1EYXZpZHNvblBpbG9uL1Byb2Jh
YmlsaXN0aWMtUHJvZ3JhbW1pbmctYW5kLUJheWVzaWFuLU1ldGhvZHMtZm9y
LUhhY2tlcnMvbWFzdGVyL0NoYXB0ZXI0X1RoZUdyZWF0ZXN0VGhlb3JlbU5l
dmVyVG9sZC9DaDRfTGF3T2ZMYXJnZU51bWJlcnNfUHlNQzIuaXB5bmIpCiAg
ICBXZSBleHBsb3JlIGFuIGluY3JlZGlibHkgdXNlZnVsLCBhbmQgZGFuZ2Vy
b3VzLCB0aGVvcmVtOiBUaGUgTGF3IG9mIExhcmdlIE51bWJlcnMuIEV4YW1w
bGVzIGluY2x1ZGU6CiAgICAtIEV4cGxvcmluZyBhIEthZ2dsZSBkYXRhc2V0
IGFuZCB0aGUgcGl0ZmFsbHMgb2YgbmFpdmUgYW5hbHlzaXMKICAgIC0gSG93
IHRvIHNvcnQgUmVkZGl0IGNvbW1lbnRzIGZyb20gYmVzdCB0byB3b3JzdCAo
bm90IGFzIGVhc3kgYXMgeW91IHRoaW5rKQogICAgCiogWyoqQ2hhcHRlciA1
OiBXb3VsZCB5b3UgcmF0aGVyIGxvc2UgYW4gYXJtIG9yIGEgbGVnPyoqXSho
dHRwOi8vbmJ2aWV3ZXIuanVweXRlci5vcmcvdXJscy9yYXcuZ2l0aHViLmNv
bS9DYW1EYXZpZHNvblBpbG9uL1Byb2JhYmlsaXN0aWMtUHJvZ3JhbW1pbmct
YW5kLUJheWVzaWFuLU1ldGhvZHMtZm9yLUhhY2tlcnMvbWFzdGVyL0NoYXB0
ZXI1X0xvc3NGdW5jdGlvbnMvQ2g1X0xvc3NGdW5jdGlvbnNfUHlNQzIuaXB5
bmIpCiAgICBUaGUgaW50cm9kdWN0aW9uIG9mIGxvc3MgZnVuY3Rpb25zIGFu
ZCB0aGVpciAoYXdlc29tZSkgdXNlIGluIEJheWVzaWFuIG1ldGhvZHMuICBF
eGFtcGxlcyBpbmNsdWRlOgogICAgLSBTb2x2aW5nIHRoZSAqUHJpY2UgaXMg
UmlnaHQqJ3MgU2hvd2Rvd24KICAgIC0gT3B0aW1pemluZyBmaW5hbmNpYWwg
cHJlZGljdGlvbnMKICAgIC0gV2lubmluZyBzb2x1dGlvbiB0byB0aGUgS2Fn
Z2xlIERhcmsgV29ybGQncyBjb21wZXRpdGlvbgogICAgCiogWyoqQ2hhcHRl
ciA2OiBHZXR0aW5nIG91ciAqcHJpb3IqLWl0aWVzIHN0cmFpZ2h0KipdKGh0
dHA6Ly9uYnZpZXdlci5qdXB5dGVyLm9yZy91cmxzL3Jhdy5naXRodWIuY29t
L0NhbURhdmlkc29uUGlsb24vUHJvYmFiaWxpc3RpYy1Qcm9ncmFtbWluZy1h
bmQtQmF5ZXNpYW4tTWV0aG9kcy1mb3ItSGFja2Vycy9tYXN0ZXIvQ2hhcHRl
cjZfUHJpb3JpdGllcy9DaDZfUHJpb3JzX1B5TUMyLmlweW5iKQogICAgUHJv
YmFibHkgdGhlIG1vc3QgaW1wb3J0YW50IGNoYXB0ZXIuIFdlIGRyYXcgb24g
ZXhwZXJ0IG9waW5pb25zIHRvIGFuc3dlciBxdWVzdGlvbnMuIEV4YW1wbGVz
IGluY2x1ZGU6CiAgICAtIE11bHRpLUFybWVkIEJhbmRpdHMgYW5kIHRoZSBC
YXllc2lhbiBCYW5kaXQgc29sdXRpb24uCiAgICAtIFdoYXQgaXMgdGhlIHJl
bGF0aW9uc2hpcCBiZXR3ZWVuIGRhdGEgc2FtcGxlIHNpemUgYW5kIHByaW9y
PwogICAgLSBFc3RpbWF0aW5nIGZpbmFuY2lhbCB1bmtub3ducyB1c2luZyBl
eHBlcnQgcHJpb3JzCiAgICAKICAgIFdlIGV4cGxvcmUgdXNlZnVsIHRpcHMg
dG8gYmUgb2JqZWN0aXZlIGluIGFuYWx5c2lzIGFzIHdlbGwgYXMgY29tbW9u
IHBpdGZhbGxzIG9mIHByaW9ycy4gCgojIyMgUHlNQzMKCiogWyoqUHJvbG9n
dWU6KipdKGh0dHA6Ly9uYnZpZXdlci5qdXB5dGVyLm9yZy91cmxzL3Jhdy5n
aXRodWIuY29tL0NhbURhdmlkc29uUGlsb24vUHJvYmFiaWxpc3RpYy1Qcm9n
cmFtbWluZy1hbmQtQmF5ZXNpYW4tTWV0aG9kcy1mb3ItSGFja2Vycy9tYXN0
ZXIvUHJvbG9ndWUvUHJvbG9ndWUuaXB5bmIpIFdoeSB3ZSBkbyBpdC4KCiog
WyoqQ2hhcHRlciAxOiBJbnRyb2R1Y3Rpb24gdG8gQmF5ZXNpYW4gTWV0aG9k
cyoqXShodHRwOi8vbmJ2aWV3ZXIuanVweXRlci5vcmcvdXJscy9yYXcuZ2l0
aHViLmNvbS9DYW1EYXZpZHNvblBpbG9uL1Byb2JhYmlsaXN0aWMtUHJvZ3Jh
bW1pbmctYW5kLUJheWVzaWFuLU1ldGhvZHMtZm9yLUhhY2tlcnMvbWFzdGVy
L0NoYXB0ZXIxX0ludHJvZHVjdGlvbi9DaDFfSW50cm9kdWN0aW9uX1B5TUMz
LmlweW5iKQogICAgSW50cm9kdWN0aW9uIHRvIHRoZSBwaGlsb3NvcGh5IGFu
ZCBwcmFjdGljZSBvZiBCYXllc2lhbiBtZXRob2RzIGFuZCBhbnN3ZXJpbmcg
dGhlIHF1ZXN0aW9uLCAiV2hhdCBpcyBwcm9iYWJpbGlzdGljIHByb2dyYW1t
aW5nPyIgRXhhbXBsZXMgaW5jbHVkZToKICAgIC0gSW5mZXJyaW5nIGh1bWFu
IGJlaGF2aW91ciBjaGFuZ2VzIGZyb20gdGV4dCBtZXNzYWdlIHJhdGVzCiAg
ICAKKiBbKipDaGFwdGVyIDI6IEEgbGl0dGxlIG1vcmUgb24gUHlNQyoqXSho
dHRwOi8vbmJ2aWV3ZXIuanVweXRlci5vcmcvdXJscy9yYXcuZ2l0aHViLmNv
bS9DYW1EYXZpZHNvblBpbG9uL1Byb2JhYmlsaXN0aWMtUHJvZ3JhbW1pbmct
YW5kLUJheWVzaWFuLU1ldGhvZHMtZm9yLUhhY2tlcnMvbWFzdGVyL0NoYXB0
ZXIyX01vcmVQeU1DL0NoMl9Nb3JlUHlNQ19QeU1DMy5pcHluYikKICAgIFdl
IGV4cGxvcmUgbW9kZWxpbmcgQmF5ZXNpYW4gcHJvYmxlbXMgdXNpbmcgUHl0
aG9uJ3MgUHlNQyBsaWJyYXJ5IHRocm91Z2ggZXhhbXBsZXMuIEhvdyBkbyB3
ZSBjcmVhdGUgQmF5ZXNpYW4gbW9kZWxzPyBFeGFtcGxlcyBpbmNsdWRlOgog
ICAgLSBEZXRlY3RpbmcgdGhlIGZyZXF1ZW5jeSBvZiBjaGVhdGluZyBzdHVk
ZW50cywgd2hpbGUgYXZvaWRpbmcgbGlhcnMKICAgIC0gQ2FsY3VsYXRpbmcg
cHJvYmFiaWxpdGllcyBvZiB0aGUgQ2hhbGxlbmdlciBzcGFjZS1zaHV0dGxl
IGRpc2FzdGVyCiAgICAKKiBbKipDaGFwdGVyIDM6IE9wZW5pbmcgdGhlIEJs
YWNrIEJveCBvZiBNQ01DKipdKGh0dHA6Ly9uYnZpZXdlci5qdXB5dGVyLm9y
Zy91cmxzL3Jhdy5naXRodWIuY29tL0NhbURhdmlkc29uUGlsb24vUHJvYmFi
aWxpc3RpYy1Qcm9ncmFtbWluZy1hbmQtQmF5ZXNpYW4tTWV0aG9kcy1mb3It
SGFja2Vycy9tYXN0ZXIvQ2hhcHRlcjNfTUNNQy9DaDNfSW50cm9NQ01DX1B5
TUMzLmlweW5iKQogICAgV2UgZGlzY3VzcyBob3cgTUNNQyBvcGVyYXRlcyBh
bmQgZGlhZ25vc3RpYyB0b29scy4gRXhhbXBsZXMgaW5jbHVkZToKICAgIC0g
QmF5ZXNpYW4gY2x1c3RlcmluZyB3aXRoIG1peHR1cmUgbW9kZWxzCiAgICAK
KiBbKipDaGFwdGVyIDQ6IFRoZSBHcmVhdGVzdCBUaGVvcmVtIE5ldmVyIFRv
bGQqKl0oaHR0cDovL25idmlld2VyLmp1cHl0ZXIub3JnL3VybHMvcmF3Lmdp
dGh1Yi5jb20vQ2FtRGF2aWRzb25QaWxvbi9Qcm9iYWJpbGlzdGljLVByb2dy
YW1taW5nLWFuZC1CYXllc2lhbi1NZXRob2RzLWZvci1IYWNrZXJzL21hc3Rl
ci9DaGFwdGVyNF9UaGVHcmVhdGVzdFRoZW9yZW1OZXZlclRvbGQvQ2g0X0xh
d09mTGFyZ2VOdW1iZXJzX1B5TUMzLmlweW5iKQogICAgV2UgZXhwbG9yZSBh
biBpbmNyZWRpYmx5IHVzZWZ1bCwgYW5kIGRhbmdlcm91cywgdGhlb3JlbTog
VGhlIExhdyBvZiBMYXJnZSBOdW1iZXJzLiBFeGFtcGxlcyBpbmNsdWRlOgog
ICAgLSBFeHBsb3JpbmcgYSBLYWdnbGUgZGF0YXNldCBhbmQgdGhlIHBpdGZh
bGxzIG9mIG5haXZlIGFuYWx5c2lzCiAgICAtIEhvdyB0byBzb3J0IFJlZGRp
dCBjb21tZW50cyBmcm9tIGJlc3QgdG8gd29yc3QgKG5vdCBhcyBlYXN5IGFz
IHlvdSB0aGluaykKICAgIAoqIFsqKkNoYXB0ZXIgNTogV291bGQgeW91IHJh
dGhlciBsb3NlIGFuIGFybSBvciBhIGxlZz8qKl0oaHR0cDovL25idmlld2Vy
Lmp1cHl0ZXIub3JnL3VybHMvcmF3LmdpdGh1Yi5jb20vQ2FtRGF2aWRzb25Q
aWxvbi9Qcm9iYWJpbGlzdGljLVByb2dyYW1taW5nLWFuZC1CYXllc2lhbi1N
ZXRob2RzLWZvci1IYWNrZXJzL21hc3Rlci9DaGFwdGVyNV9Mb3NzRnVuY3Rp
b25zL0NoNV9Mb3NzRnVuY3Rpb25zX1B5TUMzLmlweW5iKQogICAgVGhlIGlu
dHJvZHVjdGlvbiBvZiBsb3NzIGZ1bmN0aW9ucyBhbmQgdGhlaXIgKGF3ZXNv
bWUpIHVzZSBpbiBCYXllc2lhbiBtZXRob2RzLiAgRXhhbXBsZXMgaW5jbHVk
ZToKICAgIC0gU29sdmluZyB0aGUgKlByaWNlIGlzIFJpZ2h0KidzIFNob3dk
b3duCiAgICAtIE9wdGltaXppbmcgZmluYW5jaWFsIHByZWRpY3Rpb25zCiAg
ICAtIFdpbm5pbmcgc29sdXRpb24gdG8gdGhlIEthZ2dsZSBEYXJrIFdvcmxk
J3MgY29tcGV0aXRpb24KICAgIAoqIFsqKkNoYXB0ZXIgNjogR2V0dGluZyBv
dXIgKnByaW9yKi1pdGllcyBzdHJhaWdodCoqXShodHRwOi8vbmJ2aWV3ZXIu
anVweXRlci5vcmcvdXJscy9yYXcuZ2l0aHViLmNvbS9DYW1EYXZpZHNvblBp
bG9uL1Byb2JhYmlsaXN0aWMtUHJvZ3JhbW1pbmctYW5kLUJheWVzaWFuLU1l
dGhvZHMtZm9yLUhhY2tlcnMvbWFzdGVyL0NoYXB0ZXI2X1ByaW9yaXRpZXMv
Q2g2X1ByaW9yc19QeU1DMy5pcHluYikKICAgIFByb2JhYmx5IHRoZSBtb3N0
IGltcG9ydGFudCBjaGFwdGVyLiBXZSBkcmF3IG9uIGV4cGVydCBvcGluaW9u
cyB0byBhbnN3ZXIgcXVlc3Rpb25zLiBFeGFtcGxlcyBpbmNsdWRlOgogICAg
LSBNdWx0aS1Bcm1lZCBCYW5kaXRzIGFuZCB0aGUgQmF5ZXNpYW4gQmFuZGl0
IHNvbHV0aW9uLgogICAgLSBXaGF0IGlzIHRoZSByZWxhdGlvbnNoaXAgYmV0
d2VlbiBkYXRhIHNhbXBsZSBzaXplIGFuZCBwcmlvcj8KICAgIC0gRXN0aW1h
dGluZyBmaW5hbmNpYWwgdW5rbm93bnMgdXNpbmcgZXhwZXJ0IHByaW9ycwog
ICAgCiAgICBXZSBleHBsb3JlIHVzZWZ1bCB0aXBzIHRvIGJlIG9iamVjdGl2
ZSBpbiBhbmFseXNpcyBhcyB3ZWxsIGFzIGNvbW1vbiBwaXRmYWxscyBvZiBw
cmlvcnMuIAoKCgogICAgCioqTW9yZSBxdWVzdGlvbnMgYWJvdXQgUHlNQz8q
KgpQbGVhc2UgcG9zdCB5b3VyIG1vZGVsaW5nLCBjb252ZXJnZW5jZSwgb3Ig
YW55IG90aGVyIFB5TUMgcXVlc3Rpb24gb24gW2Nyb3NzLXZhbGlkYXRlZF0o
aHR0cDovL3N0YXRzLnN0YWNrZXhjaGFuZ2UuY29tLyksIHRoZSBzdGF0aXN0
aWNzIHN0YWNrLWV4Y2hhbmdlLgogICAgCiAgICAKVXNpbmcgdGhlIGJvb2sK
LS0tLS0tLQoKVGhlIGJvb2sgY2FuIGJlIHJlYWQgaW4gdGhyZWUgZGlmZmVy
ZW50IHdheXMsIHN0YXJ0aW5nIGZyb20gbW9zdCByZWNvbW1lbmRlZCB0byBs
ZWFzdCByZWNvbW1lbmRlZDogCgoxLiBUaGUgbW9zdCByZWNvbW1lbmRlZCBv
cHRpb24gaXMgdG8gY2xvbmUgdGhlIHJlcG9zaXRvcnkgdG8gZG93bmxvYWQg
dGhlIC5pcHluYiBmaWxlcyB0byB5b3VyIGxvY2FsIG1hY2hpbmUuIElmIHlv
dSBoYXZlIEp1cHl0ZXIgaW5zdGFsbGVkLCB5b3UgY2FuIHZpZXcgdGhlIApj
aGFwdGVycyBpbiB5b3VyIGJyb3dzZXIgKnBsdXMqIGVkaXQgYW5kIHJ1biB0
aGUgY29kZSBwcm92aWRlZCAoYW5kIHRyeSBzb21lIHByYWN0aWNlIHF1ZXN0
aW9ucykuIFRoaXMgaXMgdGhlIHByZWZlcnJlZCBvcHRpb24gdG8gcmVhZAp0
aGlzIGJvb2ssIHRob3VnaCBpdCBjb21lcyB3aXRoIHNvbWUgZGVwZW5kZW5j
aWVzLiAKICAgIC0gIEp1cHl0ZXIgaXMgYSByZXF1aXJlbWVudCB0byB2aWV3
IHRoZSBpcHluYiBmaWxlcy4gSXQgY2FuIGJlIGRvd25sb2FkZWQgW2hlcmVd
KGh0dHA6Ly9qdXB5dGVyLm9yZy8pLiBKdXB5dGVyIG5vdGVib29rcyBjYW4g
YmUgcnVuIGJ5IGAoeW91ci12aXJ0dWFsZW52KSB+L3BhdGgvdG8vdGhlL2Jv
b2svQ2hhcHRlcjFfSW50cm9kdWN0aW9uICQganVweXRlciBub3RlYm9va2AK
ICAgIC0gIEZvciBMaW51eCB1c2VycywgeW91IHNob3VsZCBub3QgaGF2ZSBh
IHByb2JsZW0gaW5zdGFsbGluZyBOdW1QeSwgU2NpUHksIE1hdHBsb3RsaWIg
YW5kIFB5TUMuIEZvciBXaW5kb3dzIHVzZXJzLCBjaGVjayBvdXQgW3ByZS1j
b21waWxlZCB2ZXJzaW9uc10oaHR0cDovL3d3dy5sZmQudWNpLmVkdS9+Z29o
bGtlL3B5dGhvbmxpYnMvKSBpZiB5b3UgaGF2ZSBkaWZmaWN1bHR5LiAKICAg
IC0gIEluIHRoZSBzdHlsZXMvIGRpcmVjdG9yeSBhcmUgYSBudW1iZXIgb2Yg
ZmlsZXMgKC5tYXRwbG90bGlyYykgdGhhdCB1c2VkIHRvIG1ha2UgdGhpbmdz
IHByZXR0eS4gVGhlc2UgYXJlIG5vdCBvbmx5IGRlc2lnbmVkIGZvciB0aGUg
Ym9vaywgYnV0IHRoZXkgb2ZmZXIgbWFueSBpbXByb3ZlbWVudHMgb3ZlciB0
aGUgZGVmYXVsdCBzZXR0aW5ncyBvZiBtYXRwbG90bGliLgoyLiBUaGUgc2Vj
b25kLCBwcmVmZXJyZWQsIG9wdGlvbiBpcyB0byB1c2UgdGhlIG5idmlld2Vy
Lmp1cHl0ZXIub3JnIHNpdGUsIHdoaWNoIGRpc3BsYXkgSnVweXRlciBub3Rl
Ym9va3MgaW4gdGhlIGJyb3dzZXIgKFtleGFtcGxlXShodHRwOi8vbmJ2aWV3
ZXIuanVweXRlci5vcmcvdXJscy9yYXcuZ2l0aHViLmNvbS9DYW1EYXZpZHNv
blBpbG9uL1Byb2JhYmlsaXN0aWMtUHJvZ3JhbW1pbmctYW5kLUJheWVzaWFu
LU1ldGhvZHMtZm9yLUhhY2tlcnMvbWFzdGVyL0NoYXB0ZXIxX0ludHJvZHVj
dGlvbi9DaDFfSW50cm9kdWN0aW9uX1B5TUMyLmlweW5iKSkuClRoZSBjb250
ZW50cyBhcmUgdXBkYXRlZCBzeW5jaHJvbm91c2x5IGFzIGNvbW1pdHMgYXJl
IG1hZGUgdG8gdGhlIGJvb2suIFlvdSBjYW4gdXNlIHRoZSBDb250ZW50cyBz
ZWN0aW9uIGFib3ZlIHRvIGxpbmsgdG8gdGhlIGNoYXB0ZXJzLgogCjMuIFBE
RnMgYXJlIHRoZSBsZWFzdC1wcmVmZXJyZWQgbWV0aG9kIHRvIHJlYWQgdGhl
IGJvb2ssIGFzIFBERnMgYXJlIHN0YXRpYyBhbmQgbm9uLWludGVyYWN0aXZl
LiBJZiBQREZzIGFyZSBkZXNpcmVkLCB0aGV5IGNhbiBiZSBjcmVhdGVkIGR5
bmFtaWNhbGx5IHVzaW5nIHRoZSBbbmJjb252ZXJ0XShodHRwczovL2dpdGh1
Yi5jb20vanVweXRlci9uYmNvbnZlcnQpIHV0aWxpdHkuCiAKCkluc3RhbGxh
dGlvbiBhbmQgY29uZmlndXJhdGlvbgotLS0tLS0KCgpJZiB5b3Ugd291bGQg
bGlrZSB0byBydW4gdGhlIEp1cHl0ZXIgbm90ZWJvb2tzIGxvY2FsbHksIChv
cHRpb24gMS4gYWJvdmUpLCB5b3UnbGwgbmVlZCB0byBpbnN0YWxsIHRoZSBm
b2xsb3dpbmc6CgotICBKdXB5dGVyIGlzIGEgcmVxdWlyZW1lbnQgdG8gdmll
dyB0aGUgaXB5bmIgZmlsZXMuIEl0IGNhbiBiZSBkb3dubG9hZGVkIFtoZXJl
XShodHRwOi8vanVweXRlci5vcmcvaW5zdGFsbC5odG1sKSAKLSBOZWNlc3Nh
cnkgcGFja2FnZXMgYXJlIFB5TUMsIE51bVB5LCBTY2lQeSBhbmQgTWF0cGxv
dGxpYi4gICAKICAgLSAgRm9yIExpbnV4L09TWCB1c2VycywgeW91IHNob3Vs
ZCBub3QgaGF2ZSBhIHByb2JsZW0gaW5zdGFsbGluZyB0aGUgYWJvdmUsIFsq
ZXhjZXB0IGZvciBNYXRwbG90bGliIG9uIE9TWCpdKGh0dHA6Ly93d3cucGVu
YW5kcGFudHMuY29tLzIwMTIvMDIvMjQvaW5zdGFsbC1weXRob24vKS4KICAg
LSAgRm9yIFdpbmRvd3MgdXNlcnMsIGNoZWNrIG91dCBbcHJlLWNvbXBpbGVk
IHZlcnNpb25zXShodHRwOi8vd3d3LmxmZC51Y2kuZWR1L35nb2hsa2UvcHl0
aG9ubGlicy8pIGlmIHlvdSBoYXZlIGRpZmZpY3VsdHkuIAogICAtIGFsc28g
cmVjb21tZW5kZWQsIGZvciBkYXRhLW1pbmluZyBleGVyY2lzZXMsIGFyZSBb
UFJBV10oaHR0cHM6Ly9naXRodWIuY29tL3ByYXctZGV2L3ByYXcpIGFuZCBb
cmVxdWVzdHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9rZW5uZXRocmVpdHovcmVx
dWVzdHMpLiAKLSBOZXcgdG8gUHl0aG9uIG9yIEp1cHl0ZXIsIGFuZCBoZWxw
IHdpdGggdGhlIG5hbWVzcGFjZXM/IENoZWNrIG91dCBbdGhpcyBhbnN3ZXJd
KGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMTI5ODc2MjQv
Y29uZnVzaW9uLWJldHdlZW4tbnVtcHktc2NpcHktbWF0cGxvdGxpYi1hbmQt
cHlsYWIpLiAKCi0gIEluIHRoZSBzdHlsZXMvIGRpcmVjdG9yeSBhcmUgYSBu
dW1iZXIgb2YgZmlsZXMgdGhhdCBhcmUgY3VzdG9taXplZCBmb3IgdGhlIG5v
dGVib29rLiAKVGhlc2UgYXJlIG5vdCBvbmx5IGRlc2lnbmVkIGZvciB0aGUg
Ym9vaywgYnV0IHRoZXkgb2ZmZXIgbWFueSBpbXByb3ZlbWVudHMgb3ZlciB0
aGUgCmRlZmF1bHQgc2V0dGluZ3Mgb2YgbWF0cGxvdGxpYiBhbmQgdGhlIEp1
cHl0ZXIgbm90ZWJvb2suIFRoZSBpbiBub3RlYm9vayBzdHlsZSBoYXMgbm90
IGJlZW4gZmluYWxpemVkIHlldC4KCgoKRGV2ZWxvcG1lbnQKLS0tLS0tCgpU
aGlzIGJvb2sgaGFzIGFuIHVudXN1YWwgZGV2ZWxvcG1lbnQgZGVzaWduLiBU
aGUgY29udGVudCBpcyBvcGVuLXNvdXJjZWQsIG1lYW5pbmcgYW55b25lIGNh
biBiZSBhbiBhdXRob3IuIApBdXRob3JzIHN1Ym1pdCBjb250ZW50IG9yIHJl
dmlzaW9ucyB1c2luZyB0aGUgR2l0SHViIGludGVyZmFjZS4gCgojIyMgSG93
IHRvIGNvbnRyaWJ1dGUKCiMjIyMgV2hhdCB0byBjb250cmlidXRlPwoKLSAg
VGhlIGN1cnJlbnQgY2hhcHRlciBsaXN0IGlzIG5vdCBmaW5hbGl6ZWQuIElm
IHlvdSBzZWUgc29tZXRoaW5nIHRoYXQgaXMgbWlzc2luZyAoTUNNQywgTUFQ
LCBCYXllc2lhbiBuZXR3b3JrcywgZ29vZCBwcmlvciBjaG9pY2VzLCBQb3Rl
bnRpYWwgY2xhc3NlcyBldGMuKSwKZmVlbCBmcmVlIHRvIHN0YXJ0IHRoZXJl
LiAKLSAgQ2xlYW5pbmcgdXAgUHl0aG9uIGNvZGUgYW5kIG1ha2luZyBjb2Rl
IG1vcmUgUHlNQy1lc3F1ZQotICBHaXZpbmcgYmV0dGVyIGV4cGxhbmF0aW9u
cwotICBTcGVsbGluZy9ncmFtbWFyIG1pc3Rha2VzCi0gIFN1Z2dlc3Rpb25z
Ci0gIENvbnRyaWJ1dGluZyB0byB0aGUgSnVweXRlciBub3RlYm9vayBzdHls
ZXMKCgojIyMjIENvbW1pdGluZwoKLSAgQWxsIGNvbW1pdHMgYXJlIHdlbGNv
bWUsIGV2ZW4gaWYgdGhleSBhcmUgbWlub3IgOykKLSAgSWYgeW91IGFyZSB1
bmZhbWlsaWFyIHdpdGggR2l0aHViLCB5b3UgY2FuIGVtYWlsIG1lIGNvbnRy
aWJ1dGlvbnMgdG8gdGhlIGVtYWlsIGJlbG93LgoKUmV2aWV3cwotLS0tLS0K
KnRoZXNlIGFyZSBzYXRpcmljYWwsIGJ1dCByZWFsKgoKIk5vLCBidXQgaXQg
bG9va3MgZ29vZCIgLSBbSm9obiBELiBDb29rXShodHRwczovL3R3aXR0ZXIu
Y29tL0pvaG5EQ29vay9zdGF0dXMvMzU5NjcyMTMzNjk1MTg0ODk2KQoKIkkg
Li4uIHJlYWQgdGhpcyBib29rIC4uLiBJIGxpa2UgaXQhIiAtIFtBbmRyZXcg
R2VsbWFuXShodHRwOi8vd3d3LmFuZHJld2dlbG1hbi5jb20vMjAxMy8wNy8y
MS9iYXllcy1yZWxhdGVkKQoKIlRoaXMgYm9vayBpcyBhIGdvZHNlbmQsIGFu
ZCBhIGRpcmVjdCByZWZ1dGF0aW9uIHRvIHRoYXQgJ2htcGghIHlvdSBkb24n
dCBrbm93IG1hdGhzLCBwaXNzIG9mZiEnIHNjaG9vbCBvZiB0aG91Z2h0Li4u
ClRoZSBwdWJsaXNoaW5nIG1vZGVsIGlzIHNvIHVudXN1YWwuIE5vdCBvbmx5
IGlzIGl0IG9wZW4gc291cmNlIGJ1dCBpdCByZWxpZXMgb24gcHVsbCByZXF1
ZXN0cyBmcm9tIGFueW9uZSBpbiBvcmRlciB0byBwcm9ncmVzcyB0aGUgYm9v
ay4gVGhpcyBpcyBpbmdlbmlvdXMgYW5kIGhlYXJ0ZW5pbmciIC0gW2V4Y2l0
ZWQgUmVkZGl0IHVzZXJdKGh0dHA6Ly93d3cucmVkZGl0LmNvbS9yL1B5dGhv
bi9jb21tZW50cy8xYWxuYWwvcHJvYmFiaWxpc3RpY19wcm9ncmFtbWluZ19h
bmRfYmF5ZXNpYW5fbWV0aG9kcy8pCgoKCkNvbnRyaWJ1dGlvbnMgYW5kIFRo
YW5rcwotLS0tLQoKClRoYW5rcyB0byBhbGwgb3VyIGNvbnRyaWJ1dGluZyBh
dXRob3JzLCBpbmNsdWRpbmcgKGluIGNocm9ub2xvZ2ljYWwgb3JkZXIpOgoK
QXV0aG9ycyB8IHwgfCB8Ci0tLSB8IC0tLSB8IC0tLSB8IC0tLQpbQ2FtZXJv
biBEYXZpZHNvbi1QaWxvbl0oaHR0cDovL3d3dy5jYW1kcC5jb20pIHwgIFtT
dGVmIEdpYnNvbl0oaHR0cDovL3N0ZWZnaWJzb24uY29tKSB8IFtWaW5jZW50
IE9ocHJlY2lvXShodHRwOi8vYmlnc25hcmYud29yZHByZXNzLmNvbS8pIHxb
TGFycyBCdWl0aW5ja10oaHR0cHM6Ly9naXRodWIuY29tL2xhcnNtYW4pCltQ
YXVsIE1hZ3dlbmVdKGh0dHA6Ly9naXRodWIuY29tL3BtYWd3ZW5lKSB8ICBb
TWF0dGhpYXMgQnVzc29ubmllcl0oaHR0cHM6Ly9naXRodWIuY29tL0NhcnJl
YXUpIHwgW0plbnMgUmFudGlsXShodHRwczovL2dpdGh1Yi5jb20vSmVuc1Jh
bnRpbCkgfCAgW3ktcF0oaHR0cHM6Ly9naXRodWIuY29tL3ktcCkKW0V0aGFu
IEJyb3duXShodHRwOi8vd3d3LmV0YW5vLm5ldC8pIHwgIFtKb25hdGhhbiBX
aGl0bW9yZV0oaHR0cDovL2pvbmF0aGFud2hpdG1vcmUuY29tLykgfCBbTWF0
dGlhIFJpZ290dGldKGh0dHBzOi8vZ2l0aHViLmNvbS9tYXRyaWcpIHwgIFtD
b2xieSBMZW1vbl0oaHR0cHM6Ly9naXRodWIuY29tL2NvbGliaXVzKQpbR3Vz
dGF2IFcgRGVsaXVzXShodHRwczovL2dpdGh1Yi5jb20vZ3VzdGF2ZGVsaXVz
KSB8ICBbTWF0dGhldyBDb25sZW5dKGh0dHA6Ly93d3cubWF0aGlzb25pYW4u
Y29tLykgIHwgW0ppbSBSYWRmb3JkXShodHRwczovL2dpdGh1Yi5jb20vcmFk
Zm9yZCkgfCAgW1Zhbm5lc3NhIFNhYmlub10oaHR0cDovL2Jhbml2ZXJzby5j
b20vKQpbVGhvbWFzIEJyYXR0XShodHRwczovL2dpdGh1Yi5jb20vdGhvbWFz
YnJhdHQpIHwgIFtOaXNhbiBIYXJhbWF0aV0oaHR0cHM6Ly9naXRodWIuY29t
L25pc2FuaGFyYW1hdGkpIHwgIFtSb2JlcnQgR3JhbnRdKGh0dHBzOi8vZ2l0
aHViLmNvbS9iZ3JhbnQpIHwgW01hdHRoZXcgV2FtcGxlci1Eb3R5XShodHRw
czovL2dpdGh1Yi5jb20veGN0aHVsaHUpCltZYXJvc2xhdiBIYWxjaGVua29d
KGh0dHBzOi8vZ2l0aHViLmNvbS95YXJpa29wdGljKSB8ICBbQWxleCBHYXJl
bF0oaHR0cHM6Ly9naXRodWIuY29tL2FsZXhnYXJlbCkgfCBbT2xla3NhbmRy
IEx5c2Vua29dKGh0dHBzOi8vdHdpdHRlci5jb20vc2FzaF9rbykgfCAgW2xp
b3JpXShodHRwczovL2dpdGh1Yi5jb20vbGlvcmkpCltkdWNreTQyN10oaHR0
cHM6Ly9naXRodWIuY29tL2R1Y2t5NDI3KSB8ICBbUGFibG8gZGUgT2xpdmVp
cmEgQ2FzdHJvXShodHRwczovL2dpdGh1Yi5jb20vcGFibG9vbGl2ZWlyYSkg
fCBbc2VyZ2V5Zm9nZWxzb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9zZXJnZXlm
b2dlbHNvbikgfCAgW01hdHRpYSBSaWdvdHRpXShodHRwOi8vbmV1cm90aGVv
cnkuY29sdW1iaWEuZWR1L35tcmlnb3R0aS8pCltNYXR0IEJhdW1hbl0oaHR0
cHM6Ly9naXRodWIuY29tL21iYXVtYW4pIHwgW0FuZHJldyBEdWJlcnN0ZWlu
XShodHRwOi8vd3d3LmFuZHJld2R1YmVyc3RlaW4uY29tLykgfCBbQ2Fyc3Rl
biBCcmFuZHRdKGh0dHA6Ly9jZWJlLmNjLykgfCAgW0JvYiBKYW5zZW5dKGh0
dHA6Ly93ZWIyZG9jeC5jb20pCiBbdWd1cnRoZW1hc3Rlcl0oaHR0cHM6Ly9n
aXRodWIuY29tL3VndXJ0aGVtYXN0ZXIpICAgfCBbV2lsbGlhbSBTY290dF0o
aHR0cHM6Ly9naXRodWIuY29tL3dpbGxpYW1zY290dCkgICB8ICBbTWluIFJL
XShodHRwOi8vdHdpdHRlci5jb20vbWlucmspICB8ICBbQnVsd2Vyc2F0b3Jd
KGh0dHBzOi8vZ2l0aHViLmNvbS9CdWx3ZXJzYXRvcikKICBbZWxwcmVzXSho
dHRwczovL2dpdGh1Yi5jb20vZWxwcmVzKSAgfCAgW0F1Z3VzdG8gSGFja10o
aHR0cHM6Ly9naXRodWIuY29tL2hhY2thdWd1c3RvKSAgfCBbTWljaGFlbCBG
ZWxkbWFubl0oaHR0cHM6Ly9naXRodWIuY29tL21pY2hhZikgICB8IFtZb3Vr
aV0oaHR0cHM6Ly9naXRodWIuY29tL1lvdWtpKQogICBbSmVucyBSYW50aWxd
KGh0dHA6Ly9qZW5zcmFudGlsLmdpdGh1Yi5pbykgfCAgW0t5bGUgTWV5ZXJd
KGh0dHA6Ly9reWxlYW0uY29tKSAgfCAgW0VyaWMgTWFydGluXShodHRwOi8v
ZXJpY21hcnQuaW4pICB8IFtJbmNvbmRpdHVzXShodHRwczovL2dpdGh1Yi5j
b20vSW5jb25kaXR1cykKIFtLbGVwdGluZV0oaHR0cHM6Ly9naXRodWIuY29t
L0tsZXB0aW5lKSAgIHwgIFtTdHVhcnQgTGF5dG9uXShodHRwczovL2dpdGh1
Yi5jb20vc2xheXRvbikgIHwgIFtBbnRvbmlubyBJbmdhcmdpb2xhXShodHRw
czovL2dpdGh1Yi5jb20vdHJpdGVtaW8pICB8ICBbdnNsOV0oaHR0cHM6Ly9n
aXRodWIuY29tL3ZzbDkpCiAgW1RvbSBDaHJpc3RpZV0oaHR0cHM6Ly9naXRo
dWIuY29tL3RvbS1jaHJpc3RpZSkgIHwgIFtiY2xvd10oaHR0cHM6Ly9naXRo
dWIuY29tL2JjbG93KSAgfCAgW1NpbW9uIFBvdHRlcl0oaHR0cDovL3NqcC5j
by5uei8pICB8IFtHYXJ0aCBTbnlkZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9H
YXJ0aFNueWRlcikKIFtEYW5pZWwgQmVhdWNoYW1wXShodHRwOi8vdHdpdHRl
ci5jb20vcHVzaG1hdHJpeCkgIHwgIFtQaGlsaXBwIFNpbmdlcl0oaHR0cDov
L3d3dy5waGlsaXBwc2luZ2VyLmluZm8pICB8IFtnYmVubWFydGluXShodHRw
czovL2dpdGh1Yi5jb20vZ2Jlbm1hcnRpbikgfCBbUGVhZGFyIENveWxlXSho
dHRwczovL3R3aXR0ZXIuY29tL1NwcmluZ2NvaWwpCgpXZSB3b3VsZCBsaWtl
IHRvIHRoYW5rIHRoZSBQeXRob24gY29tbXVuaXR5IGZvciBidWlsZGluZyBh
biBhbWF6aW5nIGFyY2hpdGVjdHVyZS4gV2Ugd291bGQgbGlrZSB0byB0aGFu
ayB0aGUgCnN0YXRpc3RpY3MgY29tbXVuaXR5IGZvciBidWlsZGluZyBhbiBh
bWF6aW5nIGFyY2hpdGVjdHVyZS4gCgpTaW1pbGFybHksIHRoZSBib29rIGlz
IG9ubHkgcG9zc2libGUgYmVjYXVzZSBvZiB0aGUgW1B5TUNdKGh0dHA6Ly9n
aXRodWIuY29tL3B5bWMtZGV2cy9weW1jKSBsaWJyYXJ5LiBBIGJpZyB0aGFu
a3MgdG8gdGhlIGNvcmUgZGV2cyBvZiBQeU1DOiBDaHJpcyBGb25uZXNiZWNr
LCBBbmFuZCBQYXRpbCwgRGF2aWQgSHVhcmQgYW5kIEpvaG4gU2FsdmF0aWVy
LgoKT25lIGZpbmFsIHRoYW5rcy4gVGhpcyBib29rIHdhcyBnZW5lcmF0ZWQg
YnkgSnVweXRlciBOb3RlYm9vaywgYSB3b25kZXJmdWwgdG9vbCBmb3IgZGV2
ZWxvcGluZyBpbiBQeXRob24uIFdlIHRoYW5rIHRoZSBJUHl0aG9uL0p1cHl0
ZXIgCmNvbW11bml0eSBmb3IgZGV2ZWxvcGluZyB0aGUgTm90ZWJvb2sgaW50
ZXJmYWNlLiBBbGwgSnVweXRlciBub3RlYm9vayBmaWxlcyBhcmUgYXZhaWxh
YmxlIGZvciBkb3dubG9hZCBvbiB0aGUgR2l0SHViIHJlcG9zaXRvcnkuIAoK
CgojIyMjIENvbnRhY3QKQ29udGFjdCB0aGUgbWFpbiBhdXRob3IsIENhbSBE
YXZpZHNvbi1QaWxvbiBhdCBjYW0uZGF2aWRzb24ucGlsb25AZ21haWwuY29t
IG9yIFtAY21ybmRwXShodHRwczovL3R3aXR0ZXIuY29tL2Ntcm5fZHApCgoK
IVtJbWd1cl0oaHR0cDovL2kuaW1ndXIuY29tL1piNzlRWmIucG5nKQo=
",,19633,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
