name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,github0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'cakephp',656494,b'CakePHP: The Rapid Development Framework for PHP - Official Repository',b'PHP',101,8028,,639,False,b'https://api.github.com/repos/cakephp/cakephp/forks',"PHAgYWxpZ249ImNlbnRlciI+CiAgPGEgaHJlZj0iaHR0cHM6Ly9jYWtlcGhw
Lm9yZy8iIHRhcmdldD0iX2JsYW5rIiA+CiAgICA8aW1nIGFsdD0iQ2FrZVBI
UCIgc3JjPSJodHRwczovL2Nha2VwaHAub3JnL3YyL2ltZy9sb2dvcy9DYWtl
UEhQX0xvZ28uc3ZnIiB3aWR0aD0iNDAwIiAvPgogIDwvYT4KPC9wPgo8cCBh
bGlnbj0iY2VudGVyIj4KICAgIDxhIGhyZWY9IkxJQ0VOU0UiIHRhcmdldD0i
X2JsYW5rIj4KICAgICAgICA8aW1nIGFsdD0iU29mdHdhcmUgTGljZW5zZSIg
c3JjPSJodHRwczovL2ltZy5zaGllbGRzLmlvL2JhZGdlL2xpY2Vuc2UtTUlU
LWJyaWdodGdyZWVuLnN2Zz9zdHlsZT1mbGF0LXNxdWFyZSI+CiAgICA8L2E+
CiAgICA8YSBocmVmPSJodHRwczovL3RyYXZpcy1jaS5vcmcvY2FrZXBocC9j
YWtlcGhwIiB0YXJnZXQ9Il9ibGFuayI+CiAgICAgICAgPGltZyBhbHQ9IkJ1
aWxkIFN0YXR1cyIgc3JjPSJodHRwczovL2ltZy5zaGllbGRzLmlvL3RyYXZp
cy9jYWtlcGhwL2Nha2VwaHAvbWFzdGVyLnN2Zz9zdHlsZT1mbGF0LXNxdWFy
ZSI+CiAgICA8L2E+CiAgICA8YSBocmVmPSJodHRwczovL2NvZGVjb3YuaW8v
Z2l0aHViL2Nha2VwaHAvY2FrZXBocCIgdGFyZ2V0PSJfYmxhbmsiPgogICAg
ICAgIDxpbWcgYWx0PSJDb3ZlcmFnZSBTdGF0dXMiIHNyYz0iaHR0cHM6Ly9p
bWcuc2hpZWxkcy5pby9jb2RlY292L2MvZ2l0aHViL2Nha2VwaHAvY2FrZXBo
cC5zdmc/c3R5bGU9ZmxhdC1zcXVhcmUiPgogICAgPC9hPgogICAgPGEgaHJl
Zj0iaHR0cHM6Ly9zcXVpemxhYnMuZ2l0aHViLmlvL1BIUF9Db2RlU25pZmZl
ci9hbmFseXNpcy9jYWtlcGhwL2Nha2VwaHAvIiB0YXJnZXQ9Il9ibGFuayI+
CiAgICAgICAgPGltZyBhbHQ9IkNvZGUgQ29uc2lzdGVuY3kiIHNyYz0iaHR0
cHM6Ly9zcXVpemxhYnMuZ2l0aHViLmlvL1BIUF9Db2RlU25pZmZlci9hbmFs
eXNpcy9jYWtlcGhwL2Nha2VwaHAvZ3JhZGUuc3ZnIj4KICAgIDwvYT4KICAg
IDxhIGhyZWY9Imh0dHBzOi8vcGFja2FnaXN0Lm9yZy9wYWNrYWdlcy9jYWtl
cGhwL2Nha2VwaHAiIHRhcmdldD0iX2JsYW5rIj4KICAgICAgICA8aW1nIGFs
dD0iVG90YWwgRG93bmxvYWRzIiBzcmM9Imh0dHBzOi8vaW1nLnNoaWVsZHMu
aW8vcGFja2FnaXN0L2R0L2Nha2VwaHAvY2FrZXBocC5zdmc/c3R5bGU9Zmxh
dC1zcXVhcmUiPgogICAgPC9hPgogICAgPGEgaHJlZj0iaHR0cHM6Ly9wYWNr
YWdpc3Qub3JnL3BhY2thZ2VzL2Nha2VwaHAvY2FrZXBocCIgdGFyZ2V0PSJf
YmxhbmsiPgogICAgICAgIDxpbWcgYWx0PSJMYXRlc3QgU3RhYmxlIFZlcnNp
b24iIHNyYz0iaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9wYWNrYWdpc3Qvdi9j
YWtlcGhwL2Nha2VwaHAuc3ZnP3N0eWxlPWZsYXQtc3F1YXJlJmxhYmVsPXN0
YWJsZSI+CiAgICA8L2E+CjwvcD4KCltDYWtlUEhQXShodHRwczovL2Nha2Vw
aHAub3JnKSBpcyBhIHJhcGlkIGRldmVsb3BtZW50IGZyYW1ld29yayBmb3Ig
UEhQIHdoaWNoCnVzZXMgY29tbW9ubHkga25vd24gZGVzaWduIHBhdHRlcm5z
IGxpa2UgQXNzb2NpYXRpdmUgRGF0YQpNYXBwaW5nLCBGcm9udCBDb250cm9s
bGVyLCBhbmQgTVZDLiAgT3VyIHByaW1hcnkgZ29hbCBpcyB0byBwcm92aWRl
IGEgc3RydWN0dXJlZApmcmFtZXdvcmsgdGhhdCBlbmFibGVzIFBIUCB1c2Vy
cyBhdCBhbGwgbGV2ZWxzIHRvIHJhcGlkbHkgZGV2ZWxvcCByb2J1c3Qgd2Vi
CmFwcGxpY2F0aW9ucywgd2l0aG91dCBhbnkgbG9zcyB0byBmbGV4aWJpbGl0
eS4KCiMjIEluc3RhbGxpbmcgQ2FrZVBIUCB2aWEgQ29tcG9zZXIKCllvdSBj
YW4gaW5zdGFsbCBDYWtlUEhQIGludG8geW91ciBwcm9qZWN0IHVzaW5nCltD
b21wb3Nlcl0oaHR0cHM6Ly9nZXRjb21wb3Nlci5vcmcpLiAgSWYgeW91J3Jl
IHN0YXJ0aW5nIGEgbmV3IHByb2plY3QsIHdlCnJlY29tbWVuZCB1c2luZyB0
aGUgW2FwcCBza2VsZXRvbl0oaHR0cHM6Ly9naXRodWIuY29tL2Nha2VwaHAv
YXBwKSBhcwphIHN0YXJ0aW5nIHBvaW50LiBGb3IgZXhpc3RpbmcgYXBwbGlj
YXRpb25zIHlvdSBjYW4gcnVuIHRoZSBmb2xsb3dpbmc6CgpgYGAgYmFzaAok
IGNvbXBvc2VyIHJlcXVpcmUgY2FrZXBocC9jYWtlcGhwCmBgYAoKIyMgUnVu
bmluZyBUZXN0cwoKQXNzdW1pbmcgeW91IGhhdmUgUEhQVW5pdCBpbnN0YWxs
ZWQgc3lzdGVtIHdpZGUgdXNpbmcgb25lIG9mIHRoZSBtZXRob2RzIHN0YXRl
ZApbaGVyZV0oaHR0cHM6Ly9waHB1bml0LmRlL21hbnVhbC9jdXJyZW50L2Vu
L2luc3RhbGxhdGlvbi5odG1sKSwgeW91IGNhbiBydW4gdGhlCnRlc3RzIGZv
ciBDYWtlUEhQIGJ5IGRvaW5nIHRoZSBmb2xsb3dpbmc6CgoxLiBDb3B5IGBw
aHB1bml0LnhtbC5kaXN0YCB0byBgcGhwdW5pdC54bWxgLgoyLiBBZGQgdGhl
IHJlbGV2YW50IGRhdGFiYXNlIGNyZWRlbnRpYWxzIHRvIHlvdXIgYHBocHVu
aXQueG1sYCBpZiB5b3Ugd2FudCB0byBydW4gdGVzdHMgYWdhaW5zdAogICBh
IG5vbi1TUUxpdGUgZGF0YXNvdXJjZS4KMy4gUnVuIGBwaHB1bml0YC4KCiMj
IFNvbWUgSGFuZHkgTGlua3MKCiogW0Nha2VQSFBdKGh0dHBzOi8vY2FrZXBo
cC5vcmcpIC0gVGhlIHJhcGlkIGRldmVsb3BtZW50IFBIUCBmcmFtZXdvcmsu
CiogW0Nvb2tCb29rXShodHRwczovL2Jvb2suY2FrZXBocC5vcmcpIC0gVGhl
IENha2VQSFAgdXNlciBkb2N1bWVudGF0aW9uOyBzdGFydCBsZWFybmluZyBo
ZXJlIQoqIFtBUEldKGh0dHBzOi8vYXBpLmNha2VwaHAub3JnKSAtIEEgcmVm
ZXJlbmNlIHRvIENha2VQSFAncyBjbGFzc2VzLgoqIFtBd2Vzb21lIENha2VQ
SFBdKGh0dHBzOi8vZ2l0aHViLmNvbS9GcmllbmRzT2ZDYWtlL2F3ZXNvbWUt
Y2FrZXBocCkgLSBBIGxpc3Qgb2YgZmVhdHVyZWQgcmVzb3VyY2VzIGFyb3Vu
ZCB0aGUgZnJhbWV3b3JrLgoqIFtQbHVnaW5zXShodHRwczovL3BsdWdpbnMu
Y2FrZXBocC5vcmcpIC0gQSByZXBvc2l0b3J5IG9mIGV4dGVuc2lvbnMgdG8g
dGhlIGZyYW1ld29yay4KKiBbVGhlIEJha2VyeV0oaHR0cHM6Ly9iYWtlcnku
Y2FrZXBocC5vcmcpIC0gVGlwcywgdHV0b3JpYWxzIGFuZCBhcnRpY2xlcy4K
KiBbQ29tbXVuaXR5IENlbnRlcl0oaHR0cHM6Ly9jb21tdW5pdHkuY2FrZXBo
cC5vcmcpIC0gQSBzb3VyY2UgZm9yIGV2ZXJ5dGhpbmcgY29tbXVuaXR5IHJl
bGF0ZWQuCiogW1RyYWluaW5nXShodHRwczovL3RyYWluaW5nLmNha2VwaHAu
b3JnKSAtIEpvaW4gYSBsaXZlIHNlc3Npb24gYW5kIGdldCBza2lsbGVkIHdp
dGggdGhlIGZyYW1ld29yay4KKiBbQ2FrZUZlc3RdKGh0dHBzOi8vY2FrZWZl
c3Qub3JnKSAtIERvbid0IG1pc3Mgb3VyIGFubnVhbCBDYWtlUEhQIGNvbmZl
cmVuY2UuCiogW0Nha2UgU29mdHdhcmUgRm91bmRhdGlvbl0oaHR0cHM6Ly9j
YWtlZm91bmRhdGlvbi5vcmcpIC0gUHJvbW90aW5nIGRldmVsb3BtZW50IHJl
bGF0ZWQgdG8gQ2FrZVBIUC4KCiMjIEdldCBTdXBwb3J0IQoKKiBbU2xhY2td
KGh0dHBzOi8vY2FrZXNmLmhlcm9rdWFwcC5jb20vKSAtIEpvaW4gdXMgb24g
U2xhY2suCiogWyNjYWtlcGhwXShodHRwczovL3dlYmNoYXQuZnJlZW5vZGUu
bmV0Lz9jaGFubmVscz0jY2FrZXBocCkgb24gaXJjLmZyZWVub2RlLm5ldCAt
IENvbWUgY2hhdCB3aXRoIHVzLCB3ZSBoYXZlIGNha2UuCiogW0ZvcnVtXSho
dHRwczovL2Rpc2NvdXJzZS5jYWtlcGhwLm9yZy8pIC0gT2ZmaWNpYWwgQ2Fr
ZVBIUCBmb3J1bS4KKiBbR2l0SHViIElzc3Vlc10oaHR0cHM6Ly9naXRodWIu
Y29tL2Nha2VwaHAvY2FrZXBocC9pc3N1ZXMpIC0gR290IGlzc3Vlcz8gUGxl
YXNlIHRlbGwgdXMhCiogW1JvYWRtYXBzXShodHRwczovL2dpdGh1Yi5jb20v
Y2FrZXBocC9jYWtlcGhwL3dpa2kjcm9hZG1hcHMpIC0gV2FudCB0byBjb250
cmlidXRlPyBHZXQgaW52b2x2ZWQhCgojIyBDb250cmlidXRpbmcKCiogW0NP
TlRSSUJVVElORy5tZF0oLmdpdGh1Yi9DT05UUklCVVRJTkcubWQpIC0gUXVp
Y2sgcG9pbnRlcnMgZm9yIGNvbnRyaWJ1dGluZyB0byB0aGUgQ2FrZVBIUCBw
cm9qZWN0LgoqIFtDb29rQm9vayAiQ29udHJpYnV0aW5nIiBTZWN0aW9uXSho
dHRwczovL2Jvb2suY2FrZXBocC5vcmcvMy9lbi9jb250cmlidXRpbmcuaHRt
bCkgLSBEZXRhaWxzIGFib3V0IGNvbnRyaWJ1dGluZyB0byB0aGUgcHJvamVj
dC4KCiMgU2VjdXJpdHkKCklmIHlvdeKAmXZlIGZvdW5kIGEgc2VjdXJpdHkg
aXNzdWUgaW4gQ2FrZVBIUCwgcGxlYXNlIHVzZSB0aGUgZm9sbG93aW5nIHBy
b2NlZHVyZSBpbnN0ZWFkIG9mIHRoZSBub3JtYWwgYnVnIHJlcG9ydGluZyBz
eXN0ZW0uIEluc3RlYWQgb2YgdXNpbmcgdGhlIGJ1ZyB0cmFja2VyLCBtYWls
aW5nIGxpc3Qgb3IgSVJDIHBsZWFzZSBzZW5kIGFuIGVtYWlsIHRvIHNlY3Vy
aXR5IFthdF0gY2FrZXBocC5vcmcuIEVtYWlscyBzZW50IHRvIHRoaXMgYWRk
cmVzcyBnbyB0byB0aGUgQ2FrZVBIUCBjb3JlIHRlYW0gb24gYSBwcml2YXRl
IG1haWxpbmcgbGlzdC4KCkZvciBlYWNoIHJlcG9ydCwgd2UgdHJ5IHRvIGZp
cnN0IGNvbmZpcm0gdGhlIHZ1bG5lcmFiaWxpdHkuIE9uY2UgY29uZmlybWVk
LCB0aGUgQ2FrZVBIUCB0ZWFtIHdpbGwgdGFrZSB0aGUgZm9sbG93aW5nIGFj
dGlvbnM6CgotIEFja25vd2xlZGdlIHRvIHRoZSByZXBvcnRlciB0aGF0IHdl
4oCZdmUgcmVjZWl2ZWQgdGhlIGlzc3VlLCBhbmQgYXJlIHdvcmtpbmcgb24g
YSBmaXguIFdlIGFzayB0aGF0IHRoZSByZXBvcnRlciBrZWVwIHRoZSBpc3N1
ZSBjb25maWRlbnRpYWwgdW50aWwgd2UgYW5ub3VuY2UgaXQuCi0gR2V0IGEg
Zml4L3BhdGNoIHByZXBhcmVkLgotIFByZXBhcmUgYSBwb3N0IGRlc2NyaWJp
bmcgdGhlIHZ1bG5lcmFiaWxpdHksIGFuZCB0aGUgcG9zc2libGUgZXhwbG9p
dHMuCi0gUmVsZWFzZSBuZXcgdmVyc2lvbnMgb2YgYWxsIGFmZmVjdGVkIHZl
cnNpb25zLgotIFByb21pbmVudGx5IGZlYXR1cmUgdGhlIHByb2JsZW0gaW4g
dGhlIHJlbGVhc2UgYW5ub3VuY2VtZW50Lgo=
",,8028,"bGFuZ3VhZ2U6IHBocAoKZGlzdDogeGVuaWFsCgpwaHA6CiAgLSA3LjAKICAt
IDUuNgogIC0gNy4yCiAgLSA3LjMKICAtICc3LjRzbmFwc2hvdCcKCmVudjoK
ICBtYXRyaXg6CiAgICAtIERCPXNxbGl0ZSBkYl9kc249J3NxbGl0ZTovLy86
bWVtb3J5OicKICAgIC0gREI9bXlzcWwgZGJfZHNuPSdteXNxbDovL3Jvb3RA
MTI3LjAuMC4xL2Nha2VwaHBfdGVzdD9pbml0W109U0VUIHNxbF9tb2RlID0g
IlNUUklDVF9UUkFOU19UQUJMRVMsTk9fWkVST19JTl9EQVRFLE5PX1pFUk9f
REFURSxFUlJPUl9GT1JfRElWSVNJT05fQllfWkVSTyxOT19BVVRPX0NSRUFU
RV9VU0VSLE5PX0VOR0lORV9TVUJTVElUVVRJT04iJwogICAgLSBEQj1wZ3Nx
bCBkYl9kc249J3Bvc3RncmVzOi8vcG9zdGdyZXNAMTI3LjAuMC4xL2Nha2Vw
aHBfdGVzdCcKICBnbG9iYWw6CiAgICAtIERFRkFVTFQ9MQogICAgLSBDT0RF
Q09WRVJBR0U9MAogICAgLSBDSEVDS1M9MAoKc2VydmljZXM6CiAgLSBtZW1j
YWNoZWQKICAtIHJlZGlzLXNlcnZlcgogIC0gcG9zdGdyZXNxbAogIC0gbXlz
cWwKCmNhY2hlOgogIGRpcmVjdG9yaWVzOgogICAgLSB2ZW5kb3IKICAgIC0g
JEhPTUUvLmNvbXBvc2VyL2NhY2hlCgptYXRyaXg6CiAgZmFzdF9maW5pc2g6
IHRydWUKCiAgaW5jbHVkZToKICAgIC0gcGhwOiA1LjYKICAgICAgZW52OiBQ
UkVGRVJfTE9XRVNUPTEKCiAgICAtIHBocDogNy4zCiAgICAgIGVudjogQ0hF
Q0tTPTEgREVGQVVMVD0wCgogICAgLSBwaHA6IDcuMwogICAgICBlbnY6IENP
REVDT1ZFUkFHRT0xIERFRkFVTFQ9MAoKICBhbGxvd19mYWlsdXJlczoKICAg
IC0gcGhwOiAnNy40c25hcHNob3QnCgpiZWZvcmVfaW5zdGFsbDoKICAtIGVj
aG8gY2FrZXBocCB2ZXJzaW9uICYmIHRhaWwgLTEgVkVSU0lPTi50eHQKICAt
IHwKICAgICAgaWYgW1sgJHtUUkFWSVNfUEhQX1ZFUlNJT059ICE9ICI3LjRz
bmFwc2hvdCIgXV07IHRoZW4KICAgICAgICBwaHBlbnYgY29uZmlnLXJtIHhk
ZWJ1Zy5pbmkKICAgICAgZmkKCiAgLSBpZiBbICREQiA9ICdteXNxbCcgXTsg
dGhlbiBteXNxbCAtdSByb290IC1lICdDUkVBVEUgREFUQUJBU0UgY2FrZXBo
cF90ZXN0Oyc7IGZpCiAgLSBpZiBbICREQiA9ICdteXNxbCcgXTsgdGhlbiBt
eXNxbCAtdSByb290IC1lICdDUkVBVEUgREFUQUJBU0UgY2FrZXBocF90ZXN0
MjsnOyBmaQogIC0gaWYgWyAkREIgPSAnbXlzcWwnIF07IHRoZW4gbXlzcWwg
LXUgcm9vdCAtZSAnQ1JFQVRFIERBVEFCQVNFIGNha2VwaHBfdGVzdDM7Jzsg
ZmkKCiAgLSBpZiBbICREQiA9ICdwZ3NxbCcgXTsgdGhlbiBwc3FsIC1jICdD
UkVBVEUgREFUQUJBU0UgY2FrZXBocF90ZXN0OycgLVUgcG9zdGdyZXM7IGZp
CiAgLSBpZiBbICREQiA9ICdwZ3NxbCcgXTsgdGhlbiBwc3FsIC1jICdDUkVB
VEUgU0NIRU1BIHRlc3QyOycgLVUgcG9zdGdyZXMgLWQgY2FrZXBocF90ZXN0
OyBmaQogIC0gaWYgWyAkREIgPSAncGdzcWwnIF07IHRoZW4gcHNxbCAtYyAn
Q1JFQVRFIFNDSEVNQSB0ZXN0MzsnIC1VIHBvc3RncmVzIC1kIGNha2VwaHBf
dGVzdDsgZmkKCiAgLSBwZWNsIGNoYW5uZWwtdXBkYXRlIHBlY2wucGhwLm5l
dAogIC0gaWYgW1sgJENPREVDT1ZFUkFHRSA9PSAxIF1dOyB0aGVuIHBlY2wg
aW5zdGFsbCBwY292OyBmaQogIC0gfAogICAgICBpZiBbWyAke1RSQVZJU19Q
SFBfVkVSU0lPTn0gIT0gIjUuNiIgXV07IHRoZW4KICAgICAgICBlY2hvICdl
eHRlbnNpb24gPSBtZW1jYWNoZWQuc28nID4+IH4vLnBocGVudi92ZXJzaW9u
cy8kKHBocGVudiB2ZXJzaW9uLW5hbWUpL2V0Yy9waHAuaW5pOwogICAgICBm
aQogIC0gZWNobyAnZXh0ZW5zaW9uID0gcmVkaXMuc28nID4+IH4vLnBocGVu
di92ZXJzaW9ucy8kKHBocGVudiB2ZXJzaW9uLW5hbWUpL2V0Yy9waHAuaW5p
CiAgLSBlY2hvICdleHRlbnNpb24gPSBhcGN1LnNvJyA+PiB+Ly5waHBlbnYv
dmVyc2lvbnMvJChwaHBlbnYgdmVyc2lvbi1uYW1lKS9ldGMvcGhwLmluaQog
IC0gZWNobyAnYXBjLmVuYWJsZV9jbGkgPSAxJyA+PiB+Ly5waHBlbnYvdmVy
c2lvbnMvJChwaHBlbnYgdmVyc2lvbi1uYW1lKS9ldGMvcGhwLmluaQoKICAt
IGlmIFtbICR7VFJBVklTX1BIUF9WRVJTSU9OOjA6MX0gPT0gIjciIF1dIDsg
dGhlbiBlY2hvICJ5ZXMiIHwgcGVjbCBpbnN0YWxsIGNoYW5uZWw6Ly9wZWNs
LnBocC5uZXQvYXBjdS01LjEuMTcgfHwgdHJ1ZTsgZmkKICAtIGlmIFtbICR7
VFJBVklTX1BIUF9WRVJTSU9OOjA6MX0gPT0gIjUiIF1dIDsgdGhlbiBlY2hv
ICJ5ZXMiIHwgcGVjbCBpbnN0YWxsIGFwY3UtNC4wLjExIHx8IHRydWU7IGZp
CiAgLSB8CiAgICAgIGlmIFtbICR7VFJBVklTX1BIUF9WRVJTSU9OOjA6MX0g
PT0gIjUiICYmICREQiA9ICdteXNxbCcgXV07IHRoZW4KICAgICAgICB3Z2V0
IGh0dHA6Ly94Y2FjaGUubGlnaHR0cGQubmV0L3B1Yi9SZWxlYXNlcy8zLjIu
MC94Y2FjaGUtMy4yLjAudGFyLmd6CiAgICAgICAgdGFyIHhmIHhjYWNoZS0z
LjIuMC50YXIuZ3oKICAgICAgICBwdXNoZCB4Y2FjaGUtMy4yLjAKICAgICAg
ICBwaHBpemU7IC4vY29uZmlndXJlCiAgICAgICAgbWFrZQogICAgICAgIE5P
X0lOVEVSQUNUSU9OPTEgbWFrZSB0ZXN0CiAgICAgICAgbWFrZSBpbnN0YWxs
CiAgICAgICAgcG9wZAogICAgICAgIHByaW50ZiAiZXh0ZW5zaW9uPXhjYWNo
ZS5zb1xueGNhY2hlLnNpemU9NjRNXG54Y2FjaGUudmFyX3NpemU9MTZNXG54
Y2FjaGUudGVzdD1PbiIgPiB+Ly5waHBlbnYvdmVyc2lvbnMvJChwaHBlbnYg
dmVyc2lvbi1uYW1lKS9ldGMvcGhwLmluaQogICAgICBmaQogIC0gc3VkbyBs
b2NhbGUtZ2VuIGRhX0RLCiAgLSBzdWRvIGxvY2FsZS1nZW4gZGVfREUKCmJl
Zm9yZV9zY3JpcHQ6CiAgLSBpZiBbWyAkQ09ERUNPVkVSQUdFID09IDEgXV07
IHRoZW4gY29tcG9zZXIgcmVxdWlyZSAtLWRldiBwY292L2Nsb2JiZXI7IGZp
CiAgLSBpZiBbWyAkQ09ERUNPVkVSQUdFID09IDAgJiYgJFBSRUZFUl9MT1dF
U1QgIT0gMSBdXTsgdGhlbiBjb21wb3NlciBpbnN0YWxsIC0tbm8taW50ZXJh
Y3Rpb247IGZpCiAgLSBpZiBbWyAkUFJFRkVSX0xPV0VTVCA9PSAxIF1dOyB0
aGVuIGNvbXBvc2VyIHVwZGF0ZSAtLXByZWZlci1sb3dlc3QgLS1wcmVmZXIt
c3RhYmxlIC0tcHJlZmVyLWRpc3QgLS1uby1pbnRlcmFjdGlvbjsgZmkKICAt
IGlmIFtbICRQUkVGRVJfTE9XRVNUID09IDEgXV07IHRoZW4gY29tcG9zZXIg
cmVxdWlyZSAtLWRldiBkZXJldXJvbWFyay9jb21wb3Nlci1wcmVmZXItbG93
ZXN0OyBmaQoKc2NyaXB0OgogIC0gaWYgW1sgJERFRkFVTFQgPT0gMSBdXTsg
dGhlbiB2ZW5kb3IvYmluL3BocHVuaXQ7IGZpCiAgLSBpZiBbWyAkUFJFRkVS
X0xPV0VTVCA9PSAxIF1dOyB0aGVuIHZlbmRvci9iaW4vdmFsaWRhdGUtcHJl
ZmVyLWxvd2VzdDsgZmkKCiAgLSBpZiBbWyAkQ09ERUNPVkVSQUdFID09IDEg
XV07IHRoZW4gdmVuZG9yL2Jpbi9wY292IGNsb2JiZXI7IHZlbmRvci9iaW4v
cGhwdW5pdCAtLWNvdmVyYWdlLWNsb3Zlcj1jbG92ZXIueG1sOyBmaQoKICAt
IGlmIFtbICRDSEVDS1MgPT0gMSBdXTsgdGhlbiBjb21wb3NlciBwaHBzdGFu
LXNldHVwICYmIGNvbXBvc2VyIHBocHN0YW47IGZpCiAgLSBpZiBbWyAkQ0hF
Q0tTID09IDEgXV07IHRoZW4gY29tcG9zZXIgY3MtY2hlY2s7IGZpCgphZnRl
cl9zdWNjZXNzOgogIC0gaWYgW1sgJENPREVDT1ZFUkFHRSA9PSAxIF1dOyB0
aGVuIGJhc2ggPChjdXJsIC1zIGh0dHBzOi8vY29kZWNvdi5pby9iYXNoKTsg
ZmkKCm5vdGlmaWNhdGlvbnM6CiAgZW1haWw6IGZhbHNlCg==
","bmFtZTogTWFyayBzdGFsZSBpc3N1ZXMgYW5kIHB1bGwgcmVxdWVzdHMKCm9u
OgogIHNjaGVkdWxlOgogIC0gY3JvbjogIjAgMCAqICogKiIKCmpvYnM6CiAg
c3RhbGU6CgogICAgcnVucy1vbjogdWJ1bnR1LWxhdGVzdAogICAgCiAgICBz
dGVwczoKICAgIC0gdXNlczogYWN0aW9ucy9zdGFsZUB2MQogICAgICB3aXRo
OgogICAgICAgIHJlcG8tdG9rZW46ICR7eyBzZWNyZXRzLkdJVEhVQl9UT0tF
TiB9fQogICAgICAgIHN0YWxlLWlzc3VlLW1lc3NhZ2U6ICdUaGlzIGlzc3Vl
IGlzIHN0YWxlIGJlY2F1c2UgaXQgaGFzIGJlZW4gb3BlbiBmb3IgMTIwIGRh
eXMgd2l0aCBubyBhY3Rpdml0eS4gUmVtb3ZlIHRoZSBgc3RhbGVgIGxhYmVs
IG9yIGNvbW1lbnQgb3IgdGhpcyB3aWxsIGJlIGNsb3NlZCBpbiAxNSBkYXlz
JwogICAgICAgIHN0YWxlLXByLW1lc3NhZ2U6ICdUaGlzIHB1bGwgcmVxdWVz
dCBpcyBzdGFsZSBiZWNhdXNlIGl0IGhhcyBiZWVuIG9wZW4gMzAgZGF5cyB3
aXRoIG5vIGFjdGl2aXR5LiBSZW1vdmUgdGhlIGBzdGFsZWAgbGFiZWwgb3Ig
Y29tbWVudCBvbiB0aGlzIGlzc3VlLCBvciBpdCB3aWxsIGJlIGNsb3NlZCBp
biAxNSBkYXlzJwogICAgICAgIHN0YWxlLWlzc3VlLWxhYmVsOiAnc3RhbGUn
CiAgICAgICAgc3RhbGUtcHItbGFiZWw6ICdzdGFsZScKICAgICAgICBkYXlz
LWJlZm9yZS1zdGFsZTogMTIwCiAgICAgICAgZGF5cy1iZWZvcmUtY2xvc2U6
IDE1CiAgICAgICAgZXhlbXB0LWlzc3VlLWxhYmVsOiAncGlubmVkJwogICAg
ICAgIGV4ZW1wdC1wci1sYWJlbDogJ3Bpbm5lZCcK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'loki',129717717,"b'Like Prometheus, but for logs.'",b'Go',117,8027,,184,False,b'https://api.github.com/repos/grafana/loki/forks',"PHAgYWxpZ249ImNlbnRlciI+PGltZyBzcmM9ImRvY3MvbG9nb19hbmRfbmFt
ZS5wbmciIGFsdD0iTG9raSBMb2dvIj48L3A+Cgo8YSBocmVmPSJodHRwczov
L2Nsb3VkLmRyb25lLmlvL2dyYWZhbmEvbG9raSI+PGltZyBzcmM9Imh0dHBz
Oi8vY2xvdWQuZHJvbmUuaW8vYXBpL2JhZGdlcy9ncmFmYW5hL2xva2kvc3Rh
dHVzLnN2ZyIgYWx0PSJEcm9uZSBDSSIgLz48L2E+CjxhIGhyZWY9Imh0dHBz
Oi8vY2lyY2xlY2kuY29tL2doL2dyYWZhbmEvbG9raS90cmVlL21hc3RlciI+
PGltZyBzcmM9Imh0dHBzOi8vY2lyY2xlY2kuY29tL2doL2dyYWZhbmEvbG9r
aS5zdmc/c3R5bGU9c2hpZWxkJmNpcmNsZS10b2tlbj02MTgxOTNlNTc4N2Iy
OTUxYzFlYTMzNTJhZDVmMjU0ZjRmNTIzMTNkIiBhbHQ9IkNpcmNsZUNJIiAv
PjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly9nb3JlcG9ydGNhcmQuY29tL3JlcG9y
dC9naXRodWIuY29tL2dyYWZhbmEvbG9raSI+PGltZyBzcmM9Imh0dHBzOi8v
Z29yZXBvcnRjYXJkLmNvbS9iYWRnZS9naXRodWIuY29tL2dyYWZhbmEvbG9r
aSIgYWx0PSJHbyBSZXBvcnQgQ2FyZCIgLz48L2E+CjxhIGhyZWY9Imh0dHA6
Ly9zbGFjay5yYWludGFuay5pby8iPjxpbWcgc3JjPSJodHRwczovL2ltZy5z
aGllbGRzLmlvL2JhZGdlL2pvaW4lMjBzbGFjay0lMjNsb2tpLWJyaWdodGdy
ZWVuLnN2ZyIgYWx0PSJTbGFjayIgLz48L2E+CgojIExva2k6IGxpa2UgUHJv
bWV0aGV1cywgYnV0IGZvciBsb2dzLgoKTG9raSBpcyBhIGhvcml6b250YWxs
eS1zY2FsYWJsZSwgaGlnaGx5LWF2YWlsYWJsZSwgbXVsdGktdGVuYW50IGxv
ZyBhZ2dyZWdhdGlvbiBzeXN0ZW0gaW5zcGlyZWQgYnkgW1Byb21ldGhldXNd
KGh0dHBzOi8vcHJvbWV0aGV1cy5pby8pLgpJdCBpcyBkZXNpZ25lZCB0byBi
ZSB2ZXJ5IGNvc3QgZWZmZWN0aXZlIGFuZCBlYXN5IHRvIG9wZXJhdGUuCkl0
IGRvZXMgbm90IGluZGV4IHRoZSBjb250ZW50cyBvZiB0aGUgbG9ncywgYnV0
IHJhdGhlciBhIHNldCBvZiBsYWJlbHMgZm9yIGVhY2ggbG9nIHN0cmVhbS4K
CkNvbXBhcmVkIHRvIG90aGVyIGxvZyBhZ2dyZWdhdGlvbiBzeXN0ZW1zLCBM
b2tpOgoKLSBkb2VzIG5vdCBkbyBmdWxsIHRleHQgaW5kZXhpbmcgb24gbG9n
cy4gQnkgc3RvcmluZyBjb21wcmVzc2VkLCB1bnN0cnVjdHVyZWQgbG9ncyBh
bmQgb25seSBpbmRleGluZyBtZXRhZGF0YSwgTG9raSBpcyBzaW1wbGVyIHRv
IG9wZXJhdGUgYW5kIGNoZWFwZXIgdG8gcnVuLgotIGluZGV4ZXMgYW5kIGdy
b3VwcyBsb2cgc3RyZWFtcyB1c2luZyB0aGUgc2FtZSBsYWJlbHMgeW914oCZ
cmUgYWxyZWFkeSB1c2luZyB3aXRoIFByb21ldGhldXMsIGVuYWJsaW5nIHlv
dSB0byBzZWFtbGVzc2x5IHN3aXRjaCBiZXR3ZWVuIG1ldHJpY3MgYW5kIGxv
Z3MgdXNpbmcgdGhlIHNhbWUgbGFiZWxzIHRoYXQgeW914oCZcmUgYWxyZWFk
eSB1c2luZyB3aXRoIFByb21ldGhldXMuCi0gaXMgYW4gZXNwZWNpYWxseSBn
b29kIGZpdCBmb3Igc3RvcmluZyBbS3ViZXJuZXRlc10oaHR0cHM6Ly9rdWJl
cm5ldGVzLmlvLykgUG9kIGxvZ3MuIE1ldGFkYXRhIHN1Y2ggYXMgUG9kIGxh
YmVscyBpcyBhdXRvbWF0aWNhbGx5IHNjcmFwZWQgYW5kIGluZGV4ZWQuCi0g
aGFzIG5hdGl2ZSBzdXBwb3J0IGluIEdyYWZhbmEgKG5lZWRzIEdyYWZhbmEg
djYuMCkuCgpBIExva2ktYmFzZWQgbG9nZ2luZyBzdGFjayBjb25zaXN0cyBv
ZiAzIGNvbXBvbmVudHM6CgotIGBwcm9tdGFpbGAgaXMgdGhlIGFnZW50LCBy
ZXNwb25zaWJsZSBmb3IgZ2F0aGVyaW5nIGxvZ3MgYW5kIHNlbmRpbmcgdGhl
bSB0byBMb2tpLgotIGBsb2tpYCBpcyB0aGUgbWFpbiBzZXJ2ZXIsIHJlc3Bv
bnNpYmxlIGZvciBzdG9yaW5nIGxvZ3MgYW5kIHByb2Nlc3NpbmcgcXVlcmll
cy4KLSBbR3JhZmFuYV0oaHR0cHM6Ly9naXRodWIuY29tL2dyYWZhbmEvZ3Jh
ZmFuYSkgZm9yIHF1ZXJ5aW5nIGFuZCBkaXNwbGF5aW5nIHRoZSBsb2dzLgoK
TG9raSBpcyBsaWtlIFByb21ldGhldXMsIGJ1dCBmb3IgbG9nczogd2UgcHJl
ZmVyIGEgbXVsdGlkaW1lbnNpb25hbCBsYWJlbC1iYXNlZCBhcHByb2FjaCB0
byBpbmRleGluZywgYW5kIHdhbnQgYSBzaW5nbGUtYmluYXJ5LCBlYXN5IHRv
IG9wZXJhdGUgc3lzdGVtIHdpdGggbm8gZGVwZW5kZW5jaWVzLgpMb2tpIGRp
ZmZlcnMgZnJvbSBQcm9tZXRoZXVzIGJ5IGZvY3Vzc2luZyBvbiBsb2dzIGlu
c3RlYWQgb2YgbWV0cmljcywgYW5kIGRlbGl2ZXJpbmcgbG9ncyB2aWEgcHVz
aCwgaW5zdGVhZCBvZiBwdWxsLgoKIyMgR2V0dGluZyBzdGFydGVkCgpUaGUg
W0luc3RhbGxhdGlvbiBkb2NzXSguL2RvY3MvaW5zdGFsbGF0aW9uL1JFQURN
RS5tZCkgaGF2ZSBpbnN0cnVjdGlvbnMgb24gaG93CnRvIGluc3RhbGwgTG9r
aSB2aWEgRG9ja2VyIGltYWdlcywgSGVsbSBjaGFydHMsIEpzb25uZXQsIG9y
IGZyb20gc291cmNlLgoKWW91IG1heSBhbHNvIGJlIGludGVyZXN0ZWQgaW4g
W2luc3RhbGxpbmcKUHJvbXRhaWxdKC4vZG9jcy9jbGllbnRzL3Byb210YWls
L2luc3RhbGxhdGlvbi5tZCkgdG8gc2VuZCBsb2dzIHRvIExva2kuCgpPbmNl
IHlvdSBoYXZlIFByb210YWlsLCBMb2tpLCBhbmQgR3JhZmFuYSBydW5uaW5n
LCBjb250aW51ZSB3aXRoIG91ciBbR2V0dGluZwpTdGFydGVkIEd1aWRlXSgu
L2RvY3MvZ2V0dGluZy1zdGFydGVkL1JFQURNRS5tZCkgdG8gZ2V0IHVwIGFu
ZCBydW5uaW5nIHdpdGgKcXVlcnlpbmcgbG9ncy4KCiMjIyBEb2N1bWVudGF0
aW9uCgpUaGUgZG9jdW1lbnRhdGlvbiB3aXRoIGEgVGFibGUgb2YgQ29udGVu
dHMgY2FuIGJlIGZvdW5kIGluCltgZG9jcy9gXSguL2RvY3MvUkVBRE1FLm1k
KS4KClNvbWUga2V5IGRvY3VtZW50cyB0byByZWFkOgoKLSBbQVBJIGRvY3Vt
ZW50YXRpb25dKC4vZG9jcy9hcGkubWQpIGZvciBhbHRlcm5hdGl2ZSB3YXlz
IG9mIGdldHRpbmcgbG9ncyBpbnRvIExva2kuCi0gW09wZXJhdGlvbnNdKC4v
ZG9jcy9vcGVyYXRpb25zKSBmb3IgaW1wb3J0YW50IGFzcGVjdHMgb2YgcnVu
bmluZyBMb2tpLgotIFtQcm9tdGFpbF0oLi9kb2NzL2NsaWVudHMvcHJvbXRh
aWwpIGlzIGFuIGFnZW50IHdoaWNoIGNhbiB0YWlsIHlvdXIgbG9nIGZpbGVz
IGFuZCBwdXNoIHRoZW0gdG8gTG9raS4KLSBbUGlwZWxpbmVzXSguL2RvY3Mv
Y2xpZW50cy9wcm9tdGFpbC9waXBlbGluZXMubWQpIGZvciBkZXRhaWxlZCBs
b2cgcHJvY2Vzc2luZyBwaXBlbGluZSBkb2N1bWVudGF0aW9uCi0gW0RvY2tl
ciBMb2dnaW5nIERyaXZlcl0oLi9kb2NzL2NsaWVudHMvZG9ja2VyLWRyaXZl
cikgaXMgYSBkb2NrZXIgcGx1Z2luIHRvIHNlbmQgbG9ncyBkaXJlY3RseSB0
byBMb2tpIGZyb20gRG9ja2VyIGNvbnRhaW5lcnMuCi0gW0xvZ0NMSV0oLi9k
b2NzL2dldHRpbmctc3RhcnRlZC9sb2djbGkubWQpIG9uIGhvdyB0byBxdWVy
eSB5b3VyIGxvZ3Mgd2l0aG91dCBHcmFmYW5hLgotIFtMb2tpIENhbmFyeV0o
Li9kb2NzL29wZXJhdGlvbnMvbG9raS1jYW5hcnkubWQpIGZvciBtb25pdG9y
aW5nIHlvdXIgTG9raSBpbnN0YWxsYXRpb24gZm9yIG1pc3NpbmcgbG9ncy4K
LSBbVHJvdWJsZXNob290aW5nXSguL2RvY3MvZ2V0dGluZy1zdGFydGVkL3Ry
b3VibGVzaG9vdGluZy5tZCkgZm9yIGhlbHAgYXJvdW5kIGZyZXF1ZW50IGVy
cm9yIG1lc3NhZ2VzLgotIFtMb2tpIGluIEdyYWZhbmFdKC4vZG9jcy9nZXR0
aW5nLXN0YXJ0ZWQvZ3JhZmFuYS5tZCkgZm9yIGhvdyB0byBzZXQgdXAgYSBM
b2tpIGRhdGFzb3VyY2UgaW4gR3JhZmFuYSBhbmQgcXVlcnkgeW91ciBsb2dz
LgoKIyMgR2V0dGluZyBIZWxwCgpJZiB5b3UgaGF2ZSBhbnkgcXVlc3Rpb25z
IG9yIGZlZWRiYWNrIHJlZ2FyZGluZyBMb2tpOgoKLSBBc2sgYSBxdWVzdGlv
biBvbiB0aGUgTG9raSBTbGFjayBjaGFubmVsLiBUbyBpbnZpdGUgeW91cnNl
bGYgdG8gdGhlIEdyYWZhbmEgU2xhY2ssIHZpc2l0IFtodHRwOi8vc2xhY2su
cmFpbnRhbmsuaW8vXShodHRwOi8vc2xhY2sucmFpbnRhbmsuaW8vKSBhbmQg
am9pbiB0aGUgI2xva2kgY2hhbm5lbC4KLSBbRmlsZSBhbiBpc3N1ZV0oaHR0
cHM6Ly9naXRodWIuY29tL2dyYWZhbmEvbG9raS9pc3N1ZXMvbmV3KSBmb3Ig
YnVncywgaXNzdWVzIGFuZCBmZWF0dXJlIHN1Z2dlc3Rpb25zLgotIFNlbmQg
YW4gZW1haWwgdG8gW2xva2lwcm9qZWN0QGdvb2dsZWdyb3Vwcy5jb21dKG1h
aWx0bzpsb2tpcHJvamVjdEBnb29nbGVncm91cHMuY29tKSwgb3IgdXNlIHRo
ZSBbd2ViIGludGVyZmFjZV0oaHR0cHM6Ly9ncm91cHMuZ29vZ2xlLmNvbS9m
b3J1bS8jIWZvcnVtL2xva2lwcm9qZWN0KS4KLSBVSSBpc3N1ZXMgc2hvdWxk
IGJlIGZpbGVkIGRpcmVjdGx5IGluIFtHcmFmYW5hXShodHRwczovL2dpdGh1
Yi5jb20vZ3JhZmFuYS9ncmFmYW5hL2lzc3Vlcy9uZXcpLgoKWW91ciBmZWVk
YmFjayBpcyBhbHdheXMgd2VsY29tZS4KCiMjIEZ1cnRoZXIgUmVhZGluZwoK
LSBUaGUgb3JpZ2luYWwgW2Rlc2lnbiBkb2NdKGh0dHBzOi8vZG9jcy5nb29n
bGUuY29tL2RvY3VtZW50L2QvMTF0aktfbHZwMS1TVnNGWmpnT1RyMXZWMy1x
NnZCQXNaWUlRNVplWUJreU0vdmlldykgZm9yIExva2kgaXMgYSBnb29kIHNv
dXJjZSBmb3IgZGlzY3Vzc2lvbiBvZiB0aGUgbW90aXZhdGlvbiBhbmQgZGVz
aWduIGRlY2lzaW9ucy4KLSBDYWxsdW0gU3R5YW4ncyBNYXJjaCAyMDE5IERl
dk9wc0RheXMgVmFuY291dmVyIHRhbGsgIltHcmFmYW5hIExva2k6IExvZyBB
Z2dyZWdhdGlvbiBmb3IgSW5jaWRlbnQgSW52ZXN0aWdhdGlvbnNdW2Rldm9w
c2RheXMxOS10YWxrXSIuCi0gR3JhZmFuYSBMYWJzIGJsb2cgcG9zdCAiW0hv
dyBXZSBEZXNpZ25lZCBMb2tpIHRvIFdvcmsgRWFzaWx5IEJvdGggYXMgTWlj
cm9zZXJ2aWNlcyBhbmQgYXMgTW9ub2xpdGhzXVthcmNoaXRlY3R1cmUtYmxv
Z10iLgotIEp1bGllbiBHYXJjaWEgR29uemFsZXonIE1hcmNoIDIwMTkgYmxv
ZyBwb3N0ICJbR3JhZmFuYSBMb2dnaW5nIHVzaW5nIExva2ldW2dpYW50LXN3
YXJtLWJsb2ddIi4KLSBUb20gV2lsa2llJ3MgZWFybHktMjAxOSBDTkNGIFBh
cmlzL0ZPU0RFTSB0YWxrICJbR3JhZmFuYSBMb2tpOiBsaWtlIFByb21ldGhl
dXMsIGJ1dCBmb3IgbG9nc11bZm9zZGVtMTktdGFsa10iIChbc2xpZGVzXVtm
b3NkZW0xOS1zbGlkZXNdLCBbdmlkZW9dW2Zvc2RlbTE5LXZpZGVvXSkuCi0g
RGF2aWQgS2FsdHNjaG1pZHQncyBLdWJlQ29uIDIwMTggdGFsayAiW09uIHRo
ZSBPU1MgUGF0aCB0byBGdWxsIE9ic2VydmFiaWxpdHkgd2l0aCBHcmFmYW5h
XVtrY2NuYTE4LWV2ZW50XSIgKFtzbGlkZXNdW2tjY25hMTgtc2xpZGVzXSwg
W3ZpZGVvXVtrY2NuYTE4LXZpZGVvXSkgb24gaG93IExva2kgZml0cyBpbnRv
IGEgY2xvdWQtbmF0aXZlIGVudmlyb25tZW50LgotIEdvdXRoYW0gVmVlcmFt
YWNoYW5lbmkncyBibG9nIHBvc3QgIltMb2tpOiBQcm9tZXRoZXVzLWluc3Bp
cmVkLCBvcGVuIHNvdXJjZSBsb2dnaW5nIGZvciBjbG91ZCBuYXRpdmVzXSho
dHRwczovL2dyYWZhbmEuY29tL2Jsb2cvMjAxOC8xMi8xMi9sb2tpLXByb21l
dGhldXMtaW5zcGlyZWQtb3Blbi1zb3VyY2UtbG9nZ2luZy1mb3ItY2xvdWQt
bmF0aXZlcy8pIiBvbiBkZXRhaWxzIG9mIHRoZSBMb2tpIGFyY2hpdGVjdHVy
ZS4KLSBEYXZpZCBLYWx0c2NobWlkdCdzIGJsb2cgcG9zdCAiW0Nsb3NlciBs
b29rIGF0IEdyYWZhbmEncyB1c2VyIGludGVyZmFjZSBmb3IgTG9raV0oaHR0
cHM6Ly9ncmFmYW5hLmNvbS9ibG9nLzIwMTkvMDEvMDIvY2xvc2VyLWxvb2st
YXQtZ3JhZmFuYXMtdXNlci1pbnRlcmZhY2UtZm9yLWxva2kvKSIgb24gdGhl
IGlkZWFzIHRoYXQgd2VudCBpbnRvIHRoZSBsb2dnaW5nIHVzZXIgaW50ZXJm
YWNlLgoKW2Rldm9wc2RheXMxOS10YWxrXTogaHR0cHM6Ly9ncmFmYW5hLmNv
bS9ibG9nLzIwMTkvMDUvMDYvaG93LWxva2ktY29ycmVsYXRlcy1tZXRyaWNz
LWFuZC1sb2dzLWFuZC1zYXZlcy15b3UtbW9uZXkvClthcmNoaXRlY3R1cmUt
YmxvZ106IGh0dHBzOi8vZ3JhZmFuYS5jb20vYmxvZy8yMDE5LzA0LzE1L2hv
dy13ZS1kZXNpZ25lZC1sb2tpLXRvLXdvcmstZWFzaWx5LWJvdGgtYXMtbWlj
cm9zZXJ2aWNlcy1hbmQtYXMtbW9ub2xpdGhzLwpbZ2lhbnQtc3dhcm0tYmxv
Z106IGh0dHBzOi8vYmxvZy5naWFudHN3YXJtLmlvL2dyYWZhbmEtbG9nZ2lu
Zy11c2luZy1sb2tpCltmb3NkZW0xOS10YWxrXTogaHR0cHM6Ly9mb3NkZW0u
b3JnLzIwMTkvc2NoZWR1bGUvZXZlbnQvbG9raV9wcm9tZXRoZXVzX2Zvcl9s
b2dzLwpbZm9zZGVtMTktc2xpZGVzXTogaHR0cHM6Ly9zcGVha2VyZGVjay5j
b20vZ3JhZmFuYS9ncmFmYW5hLWxva2ktbGlrZS1wcm9tZXRoZXVzLWJ1dC1m
b3ItbG9ncwpbZm9zZGVtMTktdmlkZW9dOiBodHRwczovL21pcnJvci5hczM1
NzAxLm5ldC92aWRlby5mb3NkZW0ub3JnLzIwMTkvVUIyLjI1MkEvbG9raV9w
cm9tZXRoZXVzX2Zvcl9sb2dzLm1wNApba2NjbmExOC1ldmVudF06IGh0dHBz
Oi8va2NjbmExOC5zY2hlZC5jb20vZXZlbnQvR3JYQy9vbi10aGUtb3NzLXBh
dGgtdG8tZnVsbC1vYnNlcnZhYmlsaXR5LXdpdGgtZ3JhZmFuYS1kYXZpZC1r
YWx0c2NobWlkdC1ncmFmYW5hLWxhYnMKW2tjY25hMTgtc2xpZGVzXTogaHR0
cHM6Ly9zcGVha2VyZGVjay5jb20vZGF2a2FsL29uLXRoZS1wYXRoLXRvLWZ1
bGwtb2JzZXJ2YWJpbGl0eS13aXRoLW9zcy1hbmQtbGF1bmNoLW9mLWxva2kK
W2tjY25hMTgtdmlkZW9dOiBodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRj
aD92PVU3QzVTcFJ0Szc0Jmxpc3Q9UExqNmg3OHl6WU0yUFpmOWVBN2JoV25J
aF9tSzF2eU9mVSZpbmRleD0zNDYKCiMjIENvbnRyaWJ1dGluZwoKUmVmZXIg
dG8gW0NPTlRSSUJVVElORy5tZF0oQ09OVFJJQlVUSU5HLm1kKQoKIyMgTGlj
ZW5zZQoKQXBhY2hlIExpY2Vuc2UgMi4wLCBzZWUgW0xJQ0VOU0VdKExJQ0VO
U0UpLgo=
",,8027,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"dmVyc2lvbjogMgoKLnRhZ3M6ICZ0YWdzICMgdGFncyBuZWVkIHRvIGJlIGV4
cGxpY2l0ZWx5IGRlZmluZWQgKHdoaXRlbGlzdCkKICB0YWdzOiB7b25seTog
Ii8uKi8ifQoKLm9ubHktdGFnczogJm9ubHktdGFncwogIDw8OiAqdGFncwog
IGJyYW5jaGVzOiB7IGlnbm9yZTogIi8uKi8iIH0KCi50YWctb3ItbWFzdGVy
OiAmdGFnLW9yLW1hc3RlcgogIGJyYW5jaGVzOiB7IG9ubHk6IG1hc3RlciB9
CiAgPDw6ICp0YWdzCgoubm8tbWFzdGVyOiAmbm8tbWFzdGVyICMgY29udHJh
cnkgdG8gdGFncywgdGhlIGJyYW5jaGVzIG11c3QgYmUgZXhjbHVkZWQgKGJs
YWNrbGlzdCkKICBicmFuY2hlczogeyBpZ25vcmU6IG1hc3RlciB9Cgp3b3Jr
Zmxvd3M6CiAgdmVyc2lvbjogMgogIGRlZmF1bHQ6CiAgICBqb2JzOgogICAg
ICAjIHB1Ymxpc2ggam9icyBkZXBlbmQgb24gdGhpcyBhcyB3ZWxsLAogICAg
ICAjIHRodXMgdGFncyBuZWVkIHRvIGJlIGFsbG93ZWQgZm9yIHRoZXNlCiAg
ICAgIC0gdGVzdDoge2ZpbHRlcnM6IHs8PDogKnRhZ3N9fQoKICAgICAgLSBi
dWlsZC9wcm9tdGFpbC13aW5kb3dzOgogICAgICAgICAgcmVxdWlyZXM6IFsg
dGVzdCBdCgogICAgICAtIGJ1aWxkL2RvY2tlci1kcml2ZXI6CiAgICAgICAg
ICByZXF1aXJlczogWyB0ZXN0IF0KICAgICAgICAgIGZpbHRlcnM6IHs8PDog
Km5vLW1hc3Rlcn0KICAgICAgLSBwdWJsaXNoL2RvY2tlci1kcml2ZXI6CiAg
ICAgICAgICByZXF1aXJlczogWyB0ZXN0IF0KICAgICAgICAgIGZpbHRlcnM6
IHsgPDw6ICp0YWctb3ItbWFzdGVyIH0KCiAgICAgIC0gcHVibGlzaC9iaW5h
cmllczoKICAgICAgICAgIHJlcXVpcmVzOiBbIHRlc3QgXQogICAgICAgICAg
ZmlsdGVyczogeyA8PDogKm9ubHktdGFncyB9CgogICAgICAtIHRlc3QtaGVs
bToKICAgICAgICAgIHJlcXVpcmVzOiBbIHRlc3QgXQogICAgICAgICAgZmls
dGVyczogezw8OiAqdGFnc30KICAgICAgLSBwdWJsaXNoLWhlbG06CiAgICAg
ICAgICByZXF1aXJlczogWyB0ZXN0LWhlbG0gXQogICAgICAgICAgZmlsdGVy
czogezw8OiAqdGFnLW9yLW1hc3Rlcn0KCgojIGh0dHBzOi8vY2lyY2xlY2ku
Y29tL2Jsb2cvY2lyY2xlY2ktaGFja3MtcmV1c2UteWFtbC1pbi15b3VyLWNp
cmNsZWNpLWNvbmZpZy13aXRoLXlhbWwvCi5kZWZhdWx0czogJmRlZmF1bHRz
CiAgZG9ja2VyOgogICAgLSBpbWFnZTogZ3JhZmFuYS9sb2tpLWJ1aWxkLWlt
YWdlOjAuNy40CiAgd29ya2luZ19kaXJlY3Rvcnk6IC9zcmMvbG9raQoKam9i
czoKICB0ZXN0OgogICAgPDw6ICpkZWZhdWx0cwogICAgc3RlcHM6CiAgICAg
IC0gY2hlY2tvdXQKICAgICAgLSBydW46CiAgICAgICAgICBuYW1lOiBVbml0
IFRlc3RzCiAgICAgICAgICBjb21tYW5kOiBtYWtlIEJVSUxEX0lOX0NPTlRB
SU5FUj1mYWxzZSB0ZXN0CgogICMgUHJvbXRhaWwKICBidWlsZC9wcm9tdGFp
bC13aW5kb3dzOgogICAgPDw6ICpkZWZhdWx0cwogICAgc3RlcHM6CiAgICAg
IC0gY2hlY2tvdXQKICAgICAgLSBydW46CiAgICAgICAgICBuYW1lOiBidWls
ZAogICAgICAgICAgY29tbWFuZDogbWFrZSBHT09TPXdpbmRvd3MgR09HQz0x
MCBwcm9tdGFpbAoKICAjIERvY2tlciBkcml2ZXIKICBidWlsZC9kb2NrZXIt
ZHJpdmVyOgogICAgPDw6ICpkZWZhdWx0cwogICAgc3RlcHM6CiAgICAgIC0g
Y2hlY2tvdXQKICAgICAgLSBzZXR1cF9yZW1vdGVfZG9ja2VyCiAgICAgIC0g
cnVuOgogICAgICAgICAgbmFtZTogZG9ja2VyLWRyaXZlcgogICAgICAgICAg
Y29tbWFuZDogbWFrZSBkb2NrZXItZHJpdmVyCgogIHB1Ymxpc2gvZG9ja2Vy
LWRyaXZlcjoKICAgIDw8OiAqZGVmYXVsdHMKICAgIHN0ZXBzOgogICAgICAt
IGNoZWNrb3V0CiAgICAgIC0gc2V0dXBfcmVtb3RlX2RvY2tlcgogICAgICAt
IHJ1bjoKICAgICAgICAgIG5hbWU6IGxvZ2luCiAgICAgICAgICBjb21tYW5k
OiBkb2NrZXIgbG9naW4gLXUgIiRET0NLRVJfVVNFUiIgLXAgIiRET0NLRVJf
UEFTUyIKICAgICAgLSBydW46CiAgICAgICAgICBuYW1lOiBkb2NrZXItZHJp
dmVyCiAgICAgICAgICBjb21tYW5kOiBtYWtlIGRvY2tlci1kcml2ZXItcHVz
aAoKICBwdWJsaXNoL2JpbmFyaWVzOgogICAgPDw6ICpkZWZhdWx0cwogICAg
c3RlcHM6CiAgICAgIC0gY2hlY2tvdXQKICAgICAgLSBydW46CiAgICAgICAg
ICBuYW1lOiBnaXRodWIgcmVsZWFzZQogICAgICAgICAgY29tbWFuZDogbWFr
ZSBCVUlMRF9JTl9DT05UQUlORVI9ZmFsc2UgcHVibGlzaAoKICB0ZXN0LWhl
bG06CiAgICBlbnZpcm9ubWVudDoKICAgICAgQ1RfVkVSU0lPTjogMi4zLjMK
ICAgIG1hY2hpbmU6CiAgICAgIGltYWdlOiB1YnVudHUtMTYwNDoyMDE5MDMt
MDEKICAgIHN0ZXBzOgogICAgICAtIGNoZWNrb3V0CiAgICAgIC0gcnVuOgog
ICAgICAgICAgbmFtZTogSW5zdGFsbCBrM3MKICAgICAgICAgIGNvbW1hbmQ6
IHwKICAgICAgICAgICAgY3VybCAtc2ZMIGh0dHBzOi8vZ2V0Lmszcy5pbyB8
IHNoIC0KICAgICAgICAgICAgc3VkbyBjaG1vZCA3NTUgL2V0Yy9yYW5jaGVy
L2szcy9rM3MueWFtbAogICAgICAgICAgICBta2RpciAtcCB+Ly5rdWJlCiAg
ICAgICAgICAgIGNwIC9ldGMvcmFuY2hlci9rM3MvazNzLnlhbWwgfi8ua3Vi
ZS9jb25maWcKICAgICAgLSBydW46CiAgICAgICAgICBuYW1lOiBJbnN0YWxs
IEhlbG0KICAgICAgICAgIGNvbW1hbmQ6IHwKICAgICAgICAgICAgY3VybCAt
TCBodHRwczovL2dpdC5pby9nZXRfaGVsbS5zaCB8IGJhc2gKICAgICAgICAg
ICAga3ViZWN0bCBhcHBseSAtZiB0b29scy9oZWxtLnlhbWwKICAgICAgICAg
ICAgaGVsbSBpbml0IC0tc2VydmljZS1hY2NvdW50IGhlbG0gLS13YWl0CiAg
ICAgIC0gcnVuOgogICAgICAgICAgbmFtZTogSW5zdGFsbCBDaGFydCBUZXN0
aW5nIHRvb2wKICAgICAgICAgIGNvbW1hbmQ6IHwKICAgICAgICAgICAgcGlw
IGluc3RhbGwgeWFtYWxlIHlhbWxsaW50CiAgICAgICAgICAgIGN1cmwgLUxv
IGN0LnRneiBodHRwczovL2dpdGh1Yi5jb20vaGVsbS9jaGFydC10ZXN0aW5n
L3JlbGVhc2VzL2Rvd25sb2FkL3Yke0NUX1ZFUlNJT059L2NoYXJ0LXRlc3Rp
bmdfJHtDVF9WRVJTSU9OfV9saW51eF9hbWQ2NC50YXIuZ3oKICAgICAgICAg
ICAgc3VkbyB0YXIgLUMgL3Vzci9sb2NhbC9iaW4gLXh2ZiBjdC50Z3oKICAg
ICAgICAgICAgc3VkbyBtdiAvdXNyL2xvY2FsL2Jpbi9ldGMgL2V0Yy9jdC8K
ICAgICAgLSBydW46CiAgICAgICAgICBuYW1lOiBSdW4gQ2hhcnQgVGVzdHMK
ICAgICAgICAgIGNvbW1hbmQ6IHwKICAgICAgICAgICAgY3QgbGludCAtLWNo
YXJ0LWRpcnM9cHJvZHVjdGlvbi9oZWxtIC0tY2hlY2stdmVyc2lvbi1pbmNy
ZW1lbnQ9ZmFsc2UgLS12YWxpZGF0ZS1tYWludGFpbmVycz1mYWxzZQogICAg
ICAgICAgICBjdCBpbnN0YWxsIC0tYnVpbGQtaWQ9JHtDSVJDTEVfQlVJTERf
TlVNfSAtLWNoYXJ0cyBwcm9kdWN0aW9uL2hlbG0vbG9raS1zdGFjawoKICBw
dWJsaXNoLWhlbG06CiAgICA8PDogKmRlZmF1bHRzCiAgICBzdGVwczoKICAg
ICAgLSBhZGRfc3NoX2tleXM6CiAgICAgICAgICBmaW5nZXJwcmludHM6CiAg
ICAgICAgICAgIC0gIjVhOmQzOjA4OjVlOmY3OjUzOmEwOmM0OmU5OjVkOjgz
OmM2OjAyOjZhOmQ5OmJkIgogICAgICAtIGNoZWNrb3V0CiAgICAgIC0gcnVu
OiBtYWtlIGhlbG0tcHVibGlzaAo=
",,,,,,,,,,,,,,,,,,,,,,,
b'the-practical-linux-hardening-guide',151885034,"b'This guide details creating a secure Linux production system. OpenSCAP (C2S/CIS, STIG).'",,2,8025,,291,False,b'https://api.github.com/repos/trimstray/the-practical-linux-hardening-guide/forks',"PGgyIGFsaWduPSJjZW50ZXIiPjxjb2RlPlRoZSBQcmFjdGljYWwgTGludXgg
SGFyZGVuaW5nIEd1aWRlPC9jb2RlPjwvaDI+Cgo8YnI+Cgo8cCBhbGlnbj0i
Y2VudGVyIj4KICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vdHJpbXN0
cmF5L3RoZS1wcmFjdGljYWwtbGludXgtaGFyZGVuaW5nLWd1aWRlIj4KICAg
IDxpbWcgc3JjPSJodHRwczovL2dpdGh1Yi5jb20vdHJpbXN0cmF5L3RoZS1w
cmFjdGljYWwtbGludXgtaGFyZGVuaW5nLWd1aWRlL2Jsb2IvbWFzdGVyL3N0
YXRpYy9pbWcvbWFpbl9wcmV2aWV3LmpwZyIgYWx0PSJNYXN0ZXIiPgogIDwv
YT4KPC9wPgoKPGJyPgoKPHAgYWxpZ249ImNlbnRlciI+IjxpPkRpZCB5b3Ug
a25vdyBhbGwgeW91ciBkb29ycyB3ZXJlIGxvY2tlZD88L2k+IiAtIFJpZGRp
Y2sgKFRoZSBDaHJvbmljbGVzIG9mIFJpZGRpY2spPC9wPgoKPGJyPgoKPHAg
YWxpZ249ImNlbnRlciI+CiAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29t
L3RyaW1zdHJheS90aGUtcHJhY3RpY2FsLWxpbnV4LWhhcmRlbmluZy1ndWlk
ZS9wdWxscyI+CiAgICA8aW1nIHNyYz0iaHR0cHM6Ly9pbWcuc2hpZWxkcy5p
by9iYWRnZS9QUnMtd2VsY29tZS1icmlnaHRncmVlbi5zdmc/bG9uZ0NhY2hl
PXRydWUiIGFsdD0iUHVsbCBSZXF1ZXN0cyI+CiAgPC9hPgogIDxhIGhyZWY9
Imh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8iPgogICAgPGltZyBzcmM9
Imh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvTGljZW5zZS1HTlUtYmx1
ZS5zdmc/bG9uZ0NhY2hlPXRydWUiIGFsdD0iTGljZW5zZSI+CiAgPC9hPgo8
L3A+Cgo8ZGl2IGFsaWduPSJjZW50ZXIiPgogIDxzdWI+Q3JlYXRlZCBieQog
IDxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vdHJpbXN0cmF5Ij50cmlt
c3RyYXk8L2E+IGFuZAogIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS90
cmltc3RyYXkvdGhlLXByYWN0aWNhbC1saW51eC1oYXJkZW5pbmctZ3VpZGUv
Z3JhcGhzL2NvbnRyaWJ1dG9ycyI+Y29udHJpYnV0b3JzPC9hPgo8L2Rpdj4K
Cjxicj4KCioqKioKCiMgVGFibGUgb2YgQ29udGVudHMKCi0gKipbSW50cm9k
dWN0aW9uXSgjaW50cm9kdWN0aW9uKSoqCiAgLSBbUHJvbG9ndWVdKCNwcm9s
b2d1ZSkKICAtIFtUaGUgSW1wb3J0YW5jZSBvZiBIYXJkZW5pbmcgTGludXhd
KCN0aGUtaW1wb3J0YW5jZS1vZi1oYXJkZW5pbmctbGludXgpCiAgLSBbSG93
IHRvIEhhcmRlbiBMaW51eF0oI2hvdy10by1oYXJkZW4tbGludXgpCiAgLSBb
V2hpY2ggRGlzdHJpYnV0aW9uIFNob3VsZCBiZSBVc2VkXSgjd2hpY2gtZGlz
dHJpYnV0aW9uLXNob3VsZC1iZS11c2VkKQogIC0gW0hvdyB0byBSZWFkIFRo
aXMgR3VpZGVdKCNob3ctdG8tcmVhZC10aGlzLWd1aWRlKQogIC0gW09rYXku
IExldCdzIHN0YXJ0LCAzLCAyLCAxLi4uIFNUT1AhXSgjb2theS1sZXRzLXN0
YXJ0LTMtMi0xLXN0b3ApCi0gKipbUG9saWN5IENvbXBsaWFuY2VdKCNwb2xp
Y3ktY29tcGxpYW5jZSkqKgogIC0gW0NlbnRlciBvZiBJbnRlcm5ldCBTZWN1
cml0eSAoQ0lTKV0oI2NlbnRlci1vZi1pbnRlcm5ldC1zZWN1cml0eS1jaXMp
CiAgLSBbU2VjdXJpdHkgVGVjaG5pY2FsIEltcGxlbWVudGF0aW9uIEd1aWRl
IChTVElHKV0oI3NlY3VyaXR5LXRlY2huaWNhbC1pbXBsZW1lbnRhdGlvbi1n
dWlkZS1zdGlnKQogIC0gW05hdGlvbmFsIEluc3RpdHV0ZSBvZiBTdGFuZGFy
ZHMgYW5kIFRlY2hub2xvZ3kgKE5JU1QpXSgjbmF0aW9uYWwtaW5zdGl0dXRl
LW9mLXN0YW5kYXJkcy1hbmQtdGVjaG5vbG9neS1uaXN0KQogIC0gW1BheW1l
bnQgQ2FyZCBJbmR1c3RyeSBEYXRhIFNlY3VyaXR5IFN0YW5kYXJkIChQQ0kt
RFNTKV0oI3BheW1lbnQtY2FyZC1pbmR1c3RyeS1kYXRhLXNlY3VyaXR5LXN0
YW5kYXJkLXBjaS1kc3MpCi0gKipbU2VjdXJpdHkgQ29udGVudCBBdXRvbWF0
aW9uIFByb3RvY29sIChTQ0FQKV0oI3NlY3VyaXR5LWNvbnRlbnQtYXV0b21h
dGlvbi1wcm90b2NvbC1zY2FwKSoqCiAgLSBbU0NBUCBTZWN1cml0eSBHdWlk
ZV0oI3NjYXAtc2VjdXJpdHktZ3VpZGUpCiAgLSBbT3BlblNDQVAgQmFzZV0o
I29wZW5zY2FwLWJhc2UpCiAgLSBbU0NBUCBXb3JrYmVuY2hdKCNzY2FwLXdv
cmtiZW5jaCkKLSAqKltEZXZTZWMgSGFyZGVuaW5nIEZyYW1ld29ya10oI2Rl
dnNlYy1oYXJkZW5pbmctZnJhbWV3b3JrKSoqCi0gKipbQ29udHJpYnV0aW5n
ICYgU3VwcG9ydF0oI2NvbnRyaWJ1dGluZy0tc3VwcG9ydCkqKgotICoqW0xp
Y2Vuc2VdKCNsaWNlbnNlKSoqCgojIyBJbnRyb2R1Y3Rpb24KCiMjIyBQcm9s
b2d1ZQoKKipbVGhlIFByYWN0aWNhbCBMaW51eCBIYXJkZW5pbmcgR3VpZGVd
KGh0dHBzOi8vdHJpbXN0cmF5LmdpdGh1Yi5pby90aGUtcHJhY3RpY2FsLWxp
bnV4LWhhcmRlbmluZy1ndWlkZS8pKiogcHJvdmlkZXMgYSBoaWdoLWxldmVs
IG92ZXJ2aWV3IG9mIGhhcmRlbmluZyBHTlUvTGludXggc3lzdGVtcy4gSXQg
aXMgbm90IGFuIG9mZmljaWFsIHN0YW5kYXJkIG9yIGhhbmRib29rIGJ1dCBp
dCBfdG91Y2hlc18gYW5kIF91c2VzXyBpbmR1c3RyeSBzdGFuZGFyZHMuCgpU
aGlzIGd1aWRlIGFsc28gcHJvdmlkZXMgeW91IHdpdGggX3ByYWN0aWNhbCBz
dGVwLWJ5LXN0ZXAgaW5zdHJ1Y3Rpb25zXyBmb3IgYnVpbGRpbmcgeW91ciBv
d24gaGFyZGVuZWQgc3lzdGVtcyBhbmQgc2VydmljZXMuIE9uZSBvZiB0aGUg
bWFpbiBnb2FscyBpcyB0byBjcmVhdGUgYSBzaW5nbGUgZG9jdW1lbnQgY292
ZXJpbmcgX2ludGVybmFsXyBhbmQgX2V4dGVybmFsXyB0aHJlYXRzLgoKQSBm
ZXcgcnVsZXMgZm9yIHRoaXMgcHJvamVjdDoKCi0gdXNlZnVsLCBzaW1wbGUs
IGFuZCBub3QgdGlyaW5nCi0gaW5jbHVkZSBhIGxvdCBvZiBzZWN1cml0eSB0
aXBzIGZyb20gdGhlIEMyUy9DSVMKLSBjb250YWlucyBhbHNvIG5vbi1yZWxh
dGVkIHJ1bGVzIHdpdGggQzJTL0NJUwotIGJhc2VkIG9uIGEgbWluaW1hbCBb
UkhFTDddKGh0dHBzOi8vd3d3LnJlZGhhdC5jb20vZW4vdGVjaG5vbG9naWVz
L2xpbnV4LXBsYXRmb3Jtcy9lbnRlcnByaXNlLWxpbnV4KSBhbmQgW0NlbnRP
UyA3XShodHRwczovL3d3dy5jZW50b3Mub3JnLykgaW5zdGFsbGF0aW9ucwot
IGl0J3Mgbm90IGV4aGF1c3RpdmUgYWJvdXQgTGludXggaGFyZGVuaW5nCi0g
c29tZSBoYXJkZW5pbmcgcnVsZXMvZGVzY3JpcHRpb25zIGNhbiBiZSBkb25l
IGJldHRlcgotIHlvdSBjYW4gdGhpbmsgb2YgaXQgYXMgYSBjaGVja2xpc3QK
ClRoZSBQcmFjdGljYWwgTGludXggSGFyZGVuaW5nIEd1aWRlIHVzZSBmb2xs
b3dpbmcgW09wZW5TQ0FQXShodHRwczovL3d3dy5vcGVuLXNjYXAub3JnLykg
Y29uZmlndXJhdGlvbnM6CgotIFtVLlMuIEdvdmVybm1lbnQgQ29tbWVyY2lh
bCBDbG91ZCBTZXJ2aWNlcyAoQzJTKSBiYXNlbGluZSBpbnNwaXJlZCBieSBD
SVMgdjIuMS4xXShodHRwczovL3N0YXRpYy5vcGVuLXNjYXAub3JnL3NzZy1n
dWlkZXMvc3NnLXJoZWw3LWd1aWRlLUMyUy5odG1sKQoKICA+IEMyUyBmb3Ig
UmVkIEhhdCBFbnRlcnByaXNlIExpbnV4IDcgdjAuMS40My4KCi0gW1JlZCBI
YXQgRW50ZXJwcmlzZSBMaW51eCA3IFNlY3VyaXR5IFRlY2huaWNhbCBJbXBs
ZW1lbnRhdGlvbiBHdWlkZSAoU1RJRyldKGh0dHBzOi8vd3d3LnN0aWd2aWV3
ZXIuY29tL3N0aWcvcmVkX2hhdF9lbnRlcnByaXNlX2xpbnV4XzcvKQoKICA+
IFRoZSByZXF1aXJlbWVudHMgYXJlIGRlcml2ZWQgZnJvbSB0aGUgKE5JU1Qp
IDgwMC01MyBhbmQgcmVsYXRlZCBkb2N1bWVudHMuCgpQbGVhc2UgYWxzbyBy
ZW1lbWJlcjoKCiAgPiBUaGlzIGd1aWRlIGNvbnRhaW5zIG15IGNvbW1lbnRz
IHRoYXQgbWF5IGRpZmZlciBmcm9tIGNlcnRhaW4gaW5kdXN0cnkgcHJpbmNp
cGxlcy4gSWYgeW91IGFyZSBub3Qgc3VyZSB3aGF0IHRvIGRvIHBsZWFzZSBz
ZWUgKipbUG9saWN5IENvbXBsaWFuY2VdKCNwb2xpY3ktY29tcGxpYW5jZSkq
Ki4KCiMjIyBUaGUgSW1wb3J0YW5jZSBvZiBIYXJkZW5pbmcgTGludXgKClNp
bXBseSBzcGVha2luZywgaGFyZGVuaW5nIGlzIHRoZSBwcm9jZXNzIG9mIG1h
a2luZyBhIHN5c3RlbSBtb3JlIHNlY3VyZS4gT3V0IG9mIHRoZSBib3gsIExp
bnV4IHNlcnZlcnMgZG9u4oCZdCBjb21lICJoYXJkZW5lZCIgKGUuZy4gd2l0
aCB0aGUgYXR0YWNrIHN1cmZhY2UgbWluaW1pemVkKS4gSXTigJlzIHVwIHRv
IHlvdSB0byBwcmVwYXJlIGZvciBlYWNoIGV2ZW50dWFsaXR5IGFuZCBzZXQg
dXAgc3lzdGVtcyB0byBub3RpZnkgeW91IG9mIGFueSBzdXNwaWNpb3VzIGFj
dGl2aXR5IGluIHRoZSBmdXR1cmUuCgpUaGUgcHJvY2VzcyBvZiBoYXJkZW5p
bmcgc2VydmVycyBpbnZvbHZlcyBib3RoIElUIG9wcy4gYW5kIHNlY3VyaXR5
IHRlYW1zIGFuZCByZXF1aXJlIGNoYW5nZXMgdG8gdGhlIGRlZmF1bHQgY29u
ZmlndXJhdGlvbiBhY2NvcmRpbmcgdG8gaW5kdXN0cnkgYmVuY2htYXJrcy4K
CkFsc28gZm9yIG1lLCBoYXJkZW5pbmcgaXMgdGhlIGZpbmUgYXJ0IG9mIGRv
aW5nIHRoZSByaWdodCB0aGluZ3MsIGV2ZW4gaWYgdGhleSBkb24ndCBhbHdh
eXMgbG9vayB0byBoYXZlIGEgYmlnIGltcGFjdC4gSXQncyBhbHdheXMgYSBi
YWxhbmNlIGJldHdlZW4gZWFzZSBvZiB1c2UgYW5kIHByb3RlY3Rpb24uCgpZ
b3UgbmVlZCB0byBoYXJkZW4geW91ciBzeXN0ZW0gdG8gcHJvdGVjdCB5b3Vy
IGFzc2V0cyBhcyBtdWNoIGFzIHBvc3NpYmxlLiBXaHkgaXMgaXQgaW1wb3J0
YW50PyBQbGVhc2UgcmVhZCBhIGdyZWF0LCBzaG9ydCBhcnRpY2xlIHRoYXQg
W2V4cGxhaW5zIHRoZSBoYXJkZW5pbmcgcHJvY2Vzc10oaHR0cHM6Ly9saW51
eC1hdWRpdC5jb20vbGludXgtc2VydmVyLWhhcmRlbmluZy1tb3N0LWltcG9y
dGFudC1zdGVwcy10by1zZWN1cmUtc3lzdGVtcy8pIHN0ZXAgYnkgc3RlcCBi
eSBbTWljaGFlbCBCb2VsZW5dKGh0dHBzOi8vbWljaGFlbGJvZWxlbi5jb20v
KS4KCiMjIyBIb3cgdG8gSGFyZGVuIExpbnV4CgpJbiBteSBvcGluaW9uLCB5
b3Ugc2hvdWxkIGRyb3AgYWxsIG5vbi1pbmR1c3RyeSBwb2xpY2llcywgYXJ0
aWNsZXMsIG1hbnVhbHMsIGFuZCBvdGhlcnMgZXNwZWNpYWxseSBvbiBwcm9k
dWN0aW9uIGVudmlyb25tZW50cyBhbmQgc3RhbmRhbG9uZSBob21lIHNlcnZl
cnMuIFRoZXNlIGxpc3RzIGV4aXN0IHRvIGdpdmUgYSBmYWxzZSBzZW5zZSBv
ZiBzZWN1cml0eSBhbmQgYXJlbid0IGJhc2VkIG9uIGF1dGhvcml0eSBzdGFu
ZGFyZHMuCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8YSBocmVmPSJodHRwczov
L2dpdGh1Yi5jb20vdHJpbXN0cmF5L3RoZS1wcmFjdGljYWwtbGludXgtaGFy
ZGVuaW5nLWd1aWRlIj4KICAgIDxpbWcgc3JjPSJodHRwczovL2dpdGh1Yi5j
b20vdHJpbXN0cmF5L3RoZS1wcmFjdGljYWwtbGludXgtaGFyZGVuaW5nLWd1
aWRlL2Jsb2IvbWFzdGVyL3N0YXRpYy9pbWcvbWVtZV8wMS5wbmciIGFsdD0i
TWFzdGVyIj4KICA8L2E+CjwvcD4KClRoZXJlIGFyZSBhIGxvdCBvZiBncmVh
dCBHTlUvTGludXggaGFyZGVuaW5nIHBvbGljaWVzIGF2YWlsYWJsZSB0byBw
cm92aWRlIHNhZmVyIG9wZXJhdGluZyBzeXN0ZW1zIGNvbXBhdGlibGUgd2l0
aCBzZWN1cml0eSBwcm90b2NvbHMuIEZvciBtZSwgQ0lTIGFuZCB0aGUgU1RJ
R3MgY29tcGxpYW5jZXMgYXJlIGFib3V0IHRoZSBiZXN0IHByZXNjcmlwdGl2
ZSBndWlkZXMgLSBidXQgb2YgY291cnNlIHlvdSBjYW4gY2hvb3NlIGEgZGlm
ZmVyZW50IG9uZSAoZS5nLiBQQ0ktRFNTLCBESVNBKS4KCiAgPiBNb3N0IG9m
IGFsbCB5b3Ugc2hvdWxkIHVzZSBbU2VjdXJpdHkgQmVuY2htYXJrcy9Qb2xp
Y2llc10oI3BvbGljeS1jb21wbGlhbmNlKSB3aGljaCBkZXNjcmliZSBjb25z
ZW5zdXMgYmVzdCBwcmFjdGljZXMgZm9yIHRoZSBzZWN1cmUgY29uZmlndXJh
dGlvbiBvZiB0YXJnZXQgc3lzdGVtcy4KCkNvbmZpZ3VyaW5nIHlvdXIgc3lz
dGVtcyBpbiBjb21wbGlhbmNlIGVsaW1pbmF0ZXMgdGhlIG1vc3QgY29tbW9u
IHZ1bG5lcmFiaWxpdGllcy4gRm9yIGV4YW1wbGUsIENJUyBoYXMgYmVlbiBz
aG93biB0byBlbGltaW5hdGUgODAtOTUlIG9mIGtub3duIHZ1bG5lcmFiaWxp
dGllcy4KCk9uIHRoZSBvdGhlciBoYW5kLCB0aGVzZSBzdGFuZGFyZHMgYXJl
IGNvbXBsaWNhdGVkIGNoZWNrbGlzdHMgKG9mdGVuIGZvciBuZXdiaWVzLCBk
aWZmaWN1bHQgdG8gaW1wbGVtZW50KS4gSW4gbXkgb3BpbmlvbiwgaWRlYWxs
eSwgcmVhbCB3b3JsZCBpbXBsZW1lbnRhdGlvbiBpcyBhdXRvbWF0ZWQgdmlh
IHNvbWV0aGluZyBsaWtlIE9wZW5TQ0FQLgoKICA+IFlvdSBzaG91bGQgdXNl
IGEgcmF0aW9uYWwgYXBwcm9hY2ggYmVjYXVzZSBtb3JlIGlzIG5vdCBiZXR0
ZXIuIEVhY2ggZW52aXJvbm1lbnQgaXMgZGlmZmVyZW50LCBzbyBldmVuIHRo
b3VnaCBzZWN1cml0eSBydWxlcyBzaG91bGQgYWxsIHdvcmsgaW4gdGhlb3J5
LCBzb21ldGltZXMgdGhpbmdzIHdpbGwgbm90IHdvcmsgYXMgZXhwZWN0ZWQu
CgpIYXJkZW5pbmcgaXMgbm90IGEgc2ltcGxlIHByb2Nlc3MuIEhlcmUgYXJl
IGdlbmVyYWwgcnVsZXMgZm9sbG93aW5nIGNvbW1vbiBiZXN0IHByYWN0aWNl
czoKCi0gbmV2ZXIgdXNlIHJvb3QgYWNjb3VudCBmb3IgYW55dGhpbmcgdGhh
dCBkb2VzIG5vdCByZXF1aXJlIGl0Ci0gb25seSBgc3Vkb2AgaW5kaXZpZHVh
bCBjb21tYW5kcwotIG5ldmVyIHNldCBhIHNlcnZlciB0byBydW4gYXMgcm9v
dCAoZXhjZXB0IGZvciBpbml0aWFsaXphdGlvbiB0aW1lKSBhbmQgZW5zdXJl
IHRoYXQgaXQgZXhpdHMgYWxsIHVubmVjZXNzYXJ5IHByaXZpbGVnZXMgYmVm
b3JlIGFjY2VwdGluZyByZXF1ZXN0cwotIHNlY3VyZSB5b3VyIGZpcmV3YWxs
IHRoZSBiZXN0IHlvdSBjYW4gYW5kIGZvcmJpZCBhbGwgdW5uZWNlc3Nhcnkg
YWNjZXNzCi0gZG8gbm90IGluc3RhbGwgdW5uZWNlc3Nhcnkgb3IgdW5zdGFi
bGUgc29mdHdhcmUKCiMjIyBXaGljaCBEaXN0cmlidXRpb24gU2hvdWxkIGJl
IFVzZWQKClRoaXMgZ3VpZGUgaXMgdGVzdGVkIG9uICoqUmVkIEhhdCBFbnRl
cnByaXNlIExpbnV4IDcqKiBhbmQgKipDZW50T1MgNyoqIGRpc3RyaWJ1dGlv
bnMgYmVjYXVzZSB0aGVzZSBhcmU6CgotIGZyZWUgKENlbnRPUykgYW5kIG9w
ZW4gc291cmNlCi0gZW50ZXJwcmlzZS1jbGFzcwotIHN0YWJsZSBhbmQgcmVs
aWFibGUKLSB3aXRoIGdyZWF0IGNvbW11bml0eSBzdXBwb3J0Ci0gYnVpbHQg
b24gY29oZXJlbnQgc25hcHNob3RzIG9mIG9sZCBwYWNrYWdlcwoKQm90aCBk
aXN0cmlidXRpb25zIGFsbG93IHRoZSB1c2Ugb2YgKipbY2VydGlmaWVkIHRv
b2xzXSgjc2NhcC1zZWN1cml0eS1ndWlkZSkqKiB3aGljaCBjYW4gcGFyc2Ug
YW5kIGV2YWx1YXRlIGVhY2ggY29tcG9uZW50IG9mIHRoZSBTQ0FQIHN0YW5k
YXJkLgoKSWYgeW91IHVzZSBhbm90aGVyIGRpc3RyaWJ1dGlvbiAtIG5vIHBy
b2JsZW0sIHRoaXMgZ3VpZGUgaXMgYWxzbyBmb3IgeW91LgoKIyMjIEhvdyB0
byBSZWFkIFRoaXMgR3VpZGUKCkhlcmUgaXMgdGhlIHN0cnVjdHVyZSBvZiB0
aGUgY2hhcHRlcnM6CgpgYGAKIENoYXB0ZXIgLSBlLmcuIENvcmUgTGF5ZXIK
ICAgIHwKICAgIHwtLSBTdWJzZWN0aW9uIC0gZS5nLiBNYWludGFpbmluZyBT
b2Z0d2FyZQogICAgfCAgICAgICBcCiAgICB8ICAgICAgICB8LS0gUmF0aW9u
YWxlCiAgICB8ICAgICAgICB8LS0gU29sdXRpb24gKCsgcG9saWNpZXMpCiAg
ICB8ICAgICAgICB8LS0gQ29tbWVudHMKICAgIHwgICAgICAgIHwtLSBVc2Vm
dWwgcmVzb3VyY2VzCiAgICB8CiAgICB8LS0gU3Vic2VjdGlvbiAtIGUuZy4g
QWNjb3VudHMgYW5kIEFjY2VzcwogICAgfCAgICAgICBcCiAgICB8ICAgICAg
ICB8LS0gUmF0aW9uYWxlCiAgICB8ICAgICAgICB8LS0gU29sdXRpb24gKCsg
cG9saWNpZXMpCiAgICB8ICAgICAgICB8LS0gQ29tbWVudHMKICAgIHwgICAg
ICAgIHwtLSBVc2VmdWwgcmVzb3VyY2VzCmBgYAoKTGV2ZWxzIG9mIHVuZGVy
c3RhbmRpbmc6CgotIF9DaGFwdGVyXyBhbmQgX3N1YnNlY3Rpb25fIG9mZmVy
cyBhIGdlbmVyYWwgb3ZlcnZpZXcKLSBfUmF0aW9uYWxlXyB0ZWxscyB5b3Ug
dGhlIHJlYXNvbmluZyBiZWhpbmQgdGhlIGNoYW5nZXMKLSBfU29sdXRpb25f
IGFuZCBfcG9saWNpZXNfIGFyZSBhbHdheXMgY29tcGxpYW50IHdpdGggdGhl
IHN0YW5kYXJkIGFuZCBvbiB0aGlzIGJhc2lzLCBtYWtlIGNoYW5nZXMKLSBf
Q29tbWVudHNfIGhlbHBzIHlvdSBmaWd1cmUgb3V0IHdoYXQgeW91IGNhbiBj
aGFuZ2Ugb3IgYWRkIHRvIHRoZSBfc29sdXRpb25fCi0gX1VzZWZ1bCByZXNv
dXJjZXNfIHByb3ZpZGUgZGVlcGVyIHVuZGVyc3RhbmRpbmcKCiMjIyBPa2F5
LiBMZXQncyBzdGFydCwgMywgMiwgMS4uLiBTVE9QIQoKTWFraW5nIG1ham9y
IGNoYW5nZXMgdG8geW91ciBzeXN0ZW1zIGNhbiBiZSByaXNreS4KClRoZSBt
b3N0IGltcG9ydGFudCBydWxlIG9mIHN5c3RlbSBoYXJkZW5pbmcgdGhhdCBy
ZWFzb25hYmxlIGFkbWlucyBmb2xsb3cgaXM6CgogID4gKipgQSBwcm9kdWN0
aW9uIGVudmlyb25tZW50IGlzIHRoZSByZWFsIGluc3RhbmNlIG9mIHRoZSBh
cHAgc28gbWFrZSB5b3VyIGNoYW5nZXMgb24gdGhlIGRldi90ZXN0IWAqKgoK
VGhlIHNlY29uZCBtb3N0IGltcG9ydGFudCBydWxlIGlzOgoKICA+ICoqYERv
buKAmXQgZG8gYW55dGhpbmcgdGhhdCB3aWxsIGFmZmVjdCB0aGUgYXZhaWxh
YmlsaXR5IG9mIHRoZSBzZXJ2aWNlIG9yIHlvdXIgc3lzdGVtLmAqKgoKVGhl
IHRoaXJkIHJ1bGUgaXM6CgogID4gKipgTWFrZSBiYWNrdXBzIG9mIHRoZSBl
bnRpcmUgdmlydHVhbCBtYWNoaW5lIGFuZCBpbXBvcnRhbnQgY29tcG9uZW50
cy5gKioKCkFuZCB0aGUgbGFzdCBydWxlIGlzOgoKICA+ICoqYFRoaW5rIGFi
b3V0IHdoYXQgeW91IGFjdHVhbGx5IGRvIHdpdGggeW91ciBzZXJ2ZXIuYCoq
CgojIyBQb2xpY3kgQ29tcGxpYW5jZQoKIyMjIENlbnRlciBvZiBJbnRlcm5l
dCBTZWN1cml0eSAoQ0lTKQoKVGhlIENlbnRlciBvZiBJbnRlcm5ldCBTZWN1
cml0eSAoQ0lTKSBpcyBhIG5vbnByb2ZpdCBvcmdhbml6YXRpb24gZm9jdXNl
ZCBvbiBpbXByb3ZpbmcgcHVibGljIGFuZCBwcml2YXRlIHNlY3RvciBjeWJl
cnNlY3VyaXR5IHJlYWRpbmVzcyBhbmQgcmVzcG9uc2UuCgpQbGVhc2Ugc2Vl
ICoqW0NJUyBCZW5jaG1hcmtzXShodHRwczovL3d3dy5jaXNlY3VyaXR5Lm9y
Zy9jaXMtYmVuY2htYXJrcy8pKiouCgojIyMgU2VjdXJpdHkgVGVjaG5pY2Fs
IEltcGxlbWVudGF0aW9uIEd1aWRlIChTVElHKQoKQSBTZWN1cml0eSBUZWNo
bmljYWwgSW1wbGVtZW50YXRpb24gR3VpZGUgKFNUSUcpIGlzIGEgY3liZXJz
ZWN1cml0eSBtZXRob2RvbG9neSBmb3Igc3RhbmRhcmRpemluZyBzZWN1cml0
eSBwcm90b2NvbHMgd2l0aGluIG5ldHdvcmtzLCBzZXJ2ZXJzLCBjb21wdXRl
cnMsIGFuZCBsb2dpY2FsIGRlc2lnbnMgdG8gZW5oYW5jZSBvdmVyYWxsIHNl
Y3VyaXR5LgoKUGxlYXNlIHNlZSAqKltTdGlndmlld2VyXShodHRwczovL3d3
dy5zdGlndmlld2VyLmNvbS9zdGlncykqKiB0byBleHBsb3JlIGFsbCBzdGln
cy4KCiMjIyBOYXRpb25hbCBJbnN0aXR1dGUgb2YgU3RhbmRhcmRzIGFuZCBU
ZWNobm9sb2d5IChOSVNUKQoKVGhlIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBT
dGFuZGFyZHMgYW5kIFRlY2hub2xvZ3kgKE5JU1QpIGlzIGEgcGh5c2ljYWwg
c2NpZW5jZXMgbGFib3JhdG9yeSBhbmQgYSBub24tcmVndWxhdG9yeSBhZ2Vu
Y3kgb2YgdGhlIFVuaXRlZCBTdGF0ZXMgRGVwYXJ0bWVudCBvZiBDb21tZXJj
ZS4KClBsZWFzZSBzZWUgKipbTmF0aW9uYWwgQ2hlY2tsaXN0IFByb2dyYW0g
KE5DUCldKGh0dHBzOi8vbnZkLm5pc3QuZ292L25jcC9yZXBvc2l0b3J5KSoq
LgoKIyMjIFBheW1lbnQgQ2FyZCBJbmR1c3RyeSBEYXRhIFNlY3VyaXR5IFN0
YW5kYXJkIChQQ0ktRFNTKQoKUGF5bWVudCBDYXJkIEluZHVzdHJ5IERhdGEg
U2VjdXJpdHkgU3RhbmRhcmQgKFBDSS1EU1MpIGNvbXBsaWFuY2UgaXMgYSBy
ZXF1aXJlbWVudCBmb3IgYW55IGJ1c2luZXNzIHRoYXQgc3RvcmVzLCBwcm9j
ZXNzZXMsIG9yIHRyYW5zbWl0cyBjYXJkaG9sZGVyIGRhdGEuCgpJbiBhY2Nv
cmRhbmNlIHdpdGggUENJLURTUyByZXF1aXJlbWVudHMsIGVzdGFibGlzaCBh
IGZvcm1hbCBwb2xpY3kgYW5kIHN1cHBvcnRpbmcgcHJvY2VkdXJlcyBmb3Ig
ZGV2ZWxvcGluZyBjb25maWd1cmF0aW9uIHN0YW5kYXJkcyBmb3Igc3lzdGVt
IGNvbXBvbmVudHMgdGhhdCBhcmUgY29uc2lzdGVudCB3aXRoIGluZHVzdHJ5
LWFjY2VwdGVkIGhhcmRlbmluZyBzdGFuZGFyZHMgbGlrZToKCi0gQ2VudGVy
IG9mIEludGVybmV0IFNlY3VyaXR5IChDSVMpCi0gSW50ZXJuYXRpb25hbCBP
cmdhbml6YXRpb24gZm9yIFN0YW5kYXJkaXphdGlvbiAoSVNPKQotIFN5c0Fk
bWluLCBBdWRpdCwgTmV0d29yaywgYW5kIFNlY3VyaXR5IChTQU5TKSBJbnN0
aXR1dGUKLSBOYXRpb25hbCBJbnN0aXR1dGUgb2YgU3RhbmRhcmRzIGFuZCBU
ZWNobm9sb2d5IChOSVNUKQoKIyMgU2VjdXJpdHkgQ29udGVudCBBdXRvbWF0
aW9uIFByb3RvY29sIChTQ0FQKQoKU2VjdXJpdHkgQ29udGVudCBBdXRvbWF0
aW9uIFByb3RvY29sIChTQ0FQKSBwcm92aWRlcyBhIG1lY2hhbmlzbSB0byBj
aGVjayBjb25maWd1cmF0aW9ucywgdnVsbmVyYWJpbGl0eSBtYW5hZ2VtZW50
IGFuZCBldmFsdWF0ZSBwb2xpY3kgY29tcGxpYW5jZSBmb3IgYSB2YXJpZXR5
IG9mIHN5c3RlbXMuCgpPbmUgb2YgdGhlIG1vc3QgcG9wdWxhciBpbXBsZW1l
bnRhdGlvbnMgb2YgU0NBUCBpcyBPcGVuU0NBUCBhbmQgaXQgaXMgdmVyeSBo
ZWxwZnVsIGZvciB2dWxuZXJhYmlsaXR5IGFzc2Vzc21lbnQgYW5kIGFzIGEg
aGFyZGVuaW5nIGhlbHBlci4gT3BlblNDQVAgY2FuIGVhc2lseSBoYW5kbGUg
dGhlIFNDQVAgc3RhbmRhcmRzIGFuZCBnZW5lcmF0ZSBuZWF0LCBIVE1MLWJh
c2VkIHJlcG9ydHMuCgpQbGVhc2Ugc2VlICoqW1NDQVAgU2VjdXJpdHkgUG9s
aWNpZXNdKGh0dHBzOi8vd3d3Lm9wZW4tc2NhcC5vcmcvc2VjdXJpdHktcG9s
aWNpZXMvKSoqLCAqKltPcGVuU0NBUCBVc2VyIE1hbnVhbF0oaHR0cHM6Ly9z
dGF0aWMub3Blbi1zY2FwLm9yZy9vcGVuc2NhcC0xLjIvb3NjYXBfdXNlcl9t
YW51YWwuaHRtbCkqKiwgYW5kICoqW09wZW5TQ0FQIFN0YXRpY10oaHR0cHM6
Ly9zdGF0aWMub3Blbi1zY2FwLm9yZy8pKiouCgojIyMgU0NBUCBTZWN1cml0
eSBHdWlkZQoKVGhlIGF1ZGl0aW5nIHN5c3RlbSBzZXR0aW5ncyB3aXRoIFND
QVAgU2VjdXJpdHkgR3VpZGUgcHJvamVjdCBjb250YWlucyBndWlkYW5jZSBm
b3Igc2V0dGluZ3MgZm9yIFJlZCBIYXQvQ2VudE9TIGFuZCBpdCdzIHZhbGlk
YXRlZCBieSBOSVNULgoKWW91IHNob3VsZCBpbnNwZWN0IHRoZSBzZWN1cml0
eSBjb250ZW50IG9mIHlvdXIgc3lzdGVtIHdpdGggYG9zY2FwIGluZm9gIG1v
ZHVsZToKCmBgYGJhc2gKIyBGb3IgUkhFTDoKb3NjYXAgaW5mbyAvdXNyL3No
YXJlL3htbC9zY2FwL3NzZy9jb250ZW50L3NzZy1yaGVsNy1kcy54bWwKCiMg
Rm9yIENlbnRPUzoKb3NjYXAgaW5mbyAvdXNyL3NoYXJlL3htbC9zY2FwL3Nz
Zy9jb250ZW50L3NzZy1jZW50b3M3LWRzLnhtbApgYGAKCiMjIyBPcGVuU0NB
UCBCYXNlCgpUaGUgT3BlblNDQVAgc2Nhbm5lciB3aWxsIG9ubHkgcHJvdmlk
ZSBtZWFuaW5nZnVsIHJlc3VsdHMgaWYgdGhlIGNvbnRlbnQgeW91IHdhbnQg
aXQgdG8gcHJvY2VzcyBpcyBjb3JyZWN0IGFuZCB1cCB0byBkYXRlLiBUaGUg
YG9zY2FwYCB0b29sIHNjYW5zIHlvdXIgc3lzdGVtLCB2YWxpZGF0ZXMgc2Vj
dXJpdHkgY29tcGxpYW5jZSBjb250ZW50LCBhbmQgZ2VuZXJhdGVzIHJlcG9y
dHMgYW5kIGd1aWRlcyBiYXNlZCBvbiB0aGVzZSBzY2Fucy4KCk9mZmljaWFs
IFtPcGVuU0NBUCBCYXNlXShodHRwczovL3d3dy5vcGVuLXNjYXAub3JnL3Rv
b2xzL29wZW5zY2FwLWJhc2UvKSBkb2N1bWVudGF0aW9uIHNheXM6CgogID4g
X1RoZSBjb21tYW5kLWxpbmUgdG9vbCwgY2FsbGVkIGBvc2NhcGAsIG9mZmVy
cyBhIG11bHRpLXB1cnBvc2UgdG9vbCBkZXNpZ25lZCB0byBmb3JtYXQgY29u
dGVudCBpbnRvIGRvY3VtZW50cyBvciBzY2FuIHRoZSBzeXN0ZW0gYmFzZWQg
b24gdGhpcyBjb250ZW50LiBXaGV0aGVyIHlvdSB3YW50IHRvIGV2YWx1YXRl
IERJU0EgU1RJR3MsIE5JU1TigJhzIFVTR0NCLCBvciBSZWQgSGF04oCZcyBT
ZWN1cml0eSBSZXNwb25zZSBUZWFt4oCZcyBjb250ZW50LCBhbGwgYXJlIHN1
cHBvcnRlZCBieSBPcGVuU0NBUC5fCgpCZWZvcmUgdXNlLCBwbGVhc2UgcmVh
ZCAqKltVc2luZyBPU0NBUF0oaHR0cHM6Ly9hY2Nlc3MucmVkaGF0LmNvbS9k
b2N1bWVudGF0aW9uL2VuLXVzL3JlZF9oYXRfZW50ZXJwcmlzZV9saW51eC83
L2h0bWwvc2VjdXJpdHlfZ3VpZGUvc2VjdC11c2luZ19vc2NhcCkqKiBkb2N1
bWVudGF0aW9uLgoKYGBgYmFzaAojIEluc3RhbGxhdGlvbjoKeXVtIGluc3Rh
bGwgb3BlbnNjYXAtc2Nhbm5lcgoKIyBNYWtlIGEgUkhFTDcgbWFjaGluZSBl
LmcuIFBDSS1EU1MgY29tcGxpYW50Ogpvc2NhcCB4Y2NkZiBldmFsIC0tcmVw
b3J0IHJlcG9ydC5odG1sIC0tcHJvZmlsZSB4Y2NkZl9vcmcuc3NncHJvamVj
dC5jb250ZW50X3Byb2ZpbGVfcGNpLWRzcyAvdXNyL3NoYXJlL3htbC9zY2Fw
L3NzZy9jb250ZW50L3NzZy1yaGVsNy1kcy54bWwKCiMgTWFrZSBhIENlbnRP
UyBtYWNoaW5lIGUuZy4gUENJLURTUyBjb21wbGlhbnQ6Cm9zY2FwIHhjY2Rm
IGV2YWwgLS1yZXBvcnQgcmVwb3J0Lmh0bWwgLS1wcm9maWxlIHhjY2RmX29y
Zy5zc2dwcm9qZWN0LmNvbnRlbnRfcHJvZmlsZV9wY2ktZHNzIC91c3Ivc2hh
cmUveG1sL3NjYXAvc3NnL2NvbnRlbnQvc3NnLWNlbnRvczctZHMueG1sCmBg
YAoKIyMjIFNDQVAgV29ya2JlbmNoCgpTQ0FQIFdvcmtiZW5jaCBpcyBhIHV0
aWxpdHkgdGhhdCBvZmZlcnMgYW4gZWFzeSB3YXkgdG8gcGVyZm9ybSBjb21t
b24gYG9zY2FwYCB0YXNrcyBvbiBsb2NhbCBvciByZW1vdGUgc3lzdGVtcy4K
CkJlZm9yZSB1c2UsIHBsZWFzZSByZWFkICoqW1VzaW5nIFNDQVAgV29ya2Jl
bmNoXShodHRwczovL2FjY2Vzcy5yZWRoYXQuY29tL2RvY3VtZW50YXRpb24v
ZW4tdXMvcmVkX2hhdF9lbnRlcnByaXNlX2xpbnV4LzcvaHRtbC9zZWN1cml0
eV9ndWlkZS9zZWN0LXVzaW5nX3NjYXBfd29ya2JlbmNoKSoqIGRvY3VtZW50
YXRpb24uCgpgYGBiYXNoCiMgSW5zdGFsbGF0aW9uOgp5dW0gaW5zdGFsbCBz
Y2FwLXNlY3VyaXR5LWd1aWRlIHNjYXAtd29ya2JlbmNoCmBgYAoKIyMgRGV2
U2VjIEhhcmRlbmluZyBGcmFtZXdvcmsKCiAgPiBfU2VjdXJpdHkgKyBEZXZP
cHM6IEF1dG9tYXRpYyBTZXJ2ZXIgSGFyZGVuaW5nLl8KClRoaXMgcHJvamVj
dCBjb3ZlcnMgc29tZSBvZiB0aGUgdGhpbmdzIGluIHRoaXMgZ3VpZGUgd2hp
Y2ggY2FuIGJlIGF1dG9tYXRlZCAoZS5nLiBzZXR0aW5nIG9mIGdydWIgcGFz
c3dvcmQgb3IgZW5mb3JjaW5nIHRoZSBwZXJtaXNzaW9ucyBvZiB0aGUgY29t
bW9uIGRpcmVjdG9yaWVzKS4gSXRzIGEgZ29vZCBzdGFydCBpZiB5b3Ugd2Fu
dCB0byBtYWtlIGNoYW5nZXMgYW5kIHNlZSBob3cgaXQgd29ya3MgZnJvbSB0
aGUgbGV2ZWwgb2YgYXV0b21hdGlvbiB0b29scy4KClByb2plY3Q6ICoqW0Rl
dlNlYyBIYXJkZW5pbmcgRnJhbWV3b3JrXShodHRwczovL2Rldi1zZWMuaW8p
KiogYW5kIDpvY3RvY2F0OiBHaXRIdWIgcmVwb3NpdG9yeTogKipbZGV2LXNl
Y10oaHR0cHM6Ly9naXRodWIuY29tL2Rldi1zZWMvKSoqLgoKVGhhbmtzIFtA
YXJ0ZW0tc2lkb3JlbmtvXShodHRwczovL2dpdGh1Yi5jb20vYXJ0ZW0tc2lk
b3JlbmtvKSEKCiMjIENvbnRyaWJ1dGluZyAmIFN1cHBvcnQKCklmIHlvdSBm
aW5kIHNvbWV0aGluZyB3aGljaCBkb2Vzbid0IG1ha2Ugc2Vuc2UsIG9yIHNv
bWV0aGluZyBkb2Vzbid0IHNlZW0gcmlnaHQsIHBsZWFzZSBtYWtlIGEgcHVs
bCByZXF1ZXN0IGFuZCBwbGVhc2UgYWRkIHZhbGlkIGFuZCB3ZWxsLXJlYXNv
bmVkIGV4cGxhbmF0aW9ucyBhYm91dCB5b3VyIGNoYW5nZXMgb3IgY29tbWVu
dHMuCgpCZWZvcmUgYWRkaW5nIGEgcHVsbCByZXF1ZXN0LCBwbGVhc2Ugc2Vl
IHRoZSAqKltjb250cmlidXRpbmcgZ3VpZGVsaW5lc10oLmdpdGh1Yi9DT05U
UklCVVRJTkcubWQpKiouCgpJZiB0aGlzIHByb2plY3QgaXMgdXNlZnVsIGFu
ZCBpbXBvcnRhbnQgZm9yIHlvdSBvciBpZiB5b3UgcmVhbGx5IGxpa2UgX1Ro
ZSBQcmFjdGljYWwgTGludXggSGFyZGVuaW5nIEd1aWRlXywgeW91IGNhbiBi
cmluZyAqKnBvc2l0aXZlIGVuZXJneSoqIGJ5IGdpdmluZyBzb21lICoqZ29v
ZCB3b3JkcyoqIG9yICoqc3VwcG9ydGluZyB0aGlzIHByb2plY3QqKi4gVGhh
bmsgeW91IQoKIyMgTGljZW5zZQoKRm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24s
IHBsZWFzZSBzZWUgW0xJQ0VOU0VdKGh0dHBzOi8vZ2l0aHViLmNvbS90cmlt
c3RyYXkvdGhlLXByYWN0aWNhbC1saW51eC1oYXJkZW5pbmctZ3VpZGUvYmxv
Yi9tYXN0ZXIvTElDRU5TRS5tZCkuCgotLS0KCjxoND48cCBhbGlnbj0iY2Vu
dGVyIj46YmVnaW5uZXI6IFRvIHN0YXJ0IHBsZWFzZSBnbyB0byB0aGUgPGEg
aHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3RyaW1zdHJheS90aGUtcHJhY3Rp
Y2FsLWxpbnV4LWhhcmRlbmluZy1ndWlkZS93aWtpIj5XaWtpPC9hPi48L3A+
PC9oND4K
",,8025,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'ng-file-upload',11621778,b'Lightweight Angular directive to upload files with optional FileAPI shim for cross browser support',b'JavaScript',320,8023,,289,False,b'https://api.github.com/repos/danialfarid/ng-file-upload/forks',"WyFbbnBtIHZlcnNpb25dKGh0dHBzOi8vYmFkZ2UuZnVyeS5pby9qcy9uZy1m
aWxlLXVwbG9hZC5zdmcpXShodHRwOi8vYmFkZ2UuZnVyeS5pby9qcy9uZy1m
aWxlLXVwbG9hZCkKWyFbRG93bmxvYWRzXShodHRwOi8vaW1nLnNoaWVsZHMu
aW8vbnBtL2RtL25nLWZpbGUtdXBsb2FkLnN2ZyldKGh0dHBzOi8vbnBtanMu
b3JnL3BhY2thZ2UvbmctZmlsZS11cGxvYWQpClshW0lzc3VlIFN0YXRzXSho
dHRwOi8vaXNzdWVzdGF0cy5jb20vZ2l0aHViL2RhbmlhbGZhcmlkL25nLWZp
bGUtdXBsb2FkL2JhZGdlL3ByKV0oaHR0cDovL2lzc3Vlc3RhdHMuY29tL2dp
dGh1Yi9kYW5pYWxmYXJpZC9uZy1maWxlLXVwbG9hZCkKWyFbSXNzdWUgU3Rh
dHNdKGh0dHA6Ly9pc3N1ZXN0YXRzLmNvbS9naXRodWIvZGFuaWFsZmFyaWQv
bmctZmlsZS11cGxvYWQvYmFkZ2UvaXNzdWUpXShodHRwOi8vaXNzdWVzdGF0
cy5jb20vZ2l0aHViL2RhbmlhbGZhcmlkL25nLWZpbGUtdXBsb2FkKTxici8+
ClshW1BheVBheWwgZG9uYXRlIGJ1dHRvbl0oaHR0cHM6Ly9pbWcuc2hpZWxk
cy5pby9iYWRnZS9wYXlwYWwtZG9uYXRlLXllbGxvdy5zdmcpXShodHRwczov
L3d3dy5wYXlwYWwuY29tL2NnaS1iaW4vd2Vic2NyP2NtZD1fZG9uYXRpb25z
JmJ1c2luZXNzPWRhbmlhbCUyZWZhcmlkJTQwZ21haWwlMmVjb20mbGM9Q0Em
aXRlbV9uYW1lPW5nJTJkZmlsZSUyZHVwbG9hZCZpdGVtX251bWJlcj1uZyUy
ZGZpbGUlMmR1cGxvYWQmY3VycmVuY3lfY29kZT1VU0QmYm49UFAlMmREb25h
dGlvbnNCRiUzYWJ0bl9kb25hdGVDQ19MRyUyZWdpZiUzYU5vbkhvc3RlZCkK
WyFbR3JhdGlwYXkgZG9uYXRlIGJ1dHRvbl0oaHR0cHM6Ly9pbWcuc2hpZWxk
cy5pby9ncmF0aXBheS9kYW5pYWxmYXJpZC5zdmc/bGFiZWw9ZG9uYXRlKV0o
aHR0cHM6Ly9ncmF0aXBheS5jb20vbmctZmlsZS11cGxvYWQvKQoKbmctZmls
ZS11cGxvYWQKPT09PT09PT09PT09PT09PT09PQoKTGlnaHR3ZWlnaHQgQW5n
dWxhciBkaXJlY3RpdmUgdG8gdXBsb2FkIGZpbGVzLgoKKipTZWUgdGhlIDxh
IGhyZWY9Imh0dHBzOi8vYW5ndWxhci1maWxlLXVwbG9hZC5hcHBzcG90LmNv
bS8iIHRhcmdldD0iX2JsYW5rIj5ERU1PPC9hPiBwYWdlLioqIFJlZmVyZW5j
ZSBkb2NzIFtoZXJlXShodHRwczovL2dpdGh1Yi5jb20vZGFuaWFsZmFyaWQv
bmctZmlsZS11cGxvYWQvYmxvYi9tYXN0ZXIvUkVBRE1FLm1kI2Z1bGwtcmVm
ZXJlbmNlKQoKKipNaWdyYXRpb24gbm90ZXMqKjogW3ZlcnNpb24gMy4wLnhd
KGh0dHBzOi8vZ2l0aHViLmNvbS9kYW5pYWxmYXJpZC9uZy1maWxlLXVwbG9h
ZC9yZWxlYXNlcy90YWcvMy4wLjApIFt2ZXJzaW9uIDMuMS54XShodHRwczov
L2dpdGh1Yi5jb20vZGFuaWFsZmFyaWQvbmctZmlsZS11cGxvYWQvcmVsZWFz
ZXMvdGFnLzMuMS4wKSBbdmVyc2lvbiAzLjIueF0oaHR0cHM6Ly9naXRodWIu
Y29tL2RhbmlhbGZhcmlkL25nLWZpbGUtdXBsb2FkL3JlbGVhc2VzL3RhZy8z
LjIuMykgW3ZlcnNpb24gNC54LnhdKGh0dHBzOi8vZ2l0aHViLmNvbS9kYW5p
YWxmYXJpZC9uZy1maWxlLXVwbG9hZC9yZWxlYXNlcy90YWcvNC4wLjApIFt2
ZXJzaW9uIDUueC54XShodHRwczovL2dpdGh1Yi5jb20vZGFuaWFsZmFyaWQv
bmctZmlsZS11cGxvYWQvcmVsZWFzZXMvdGFnLzUuMC4wKSBbdmVyc2lvbiA2
LngueF0oaHR0cHM6Ly9naXRodWIuY29tL2RhbmlhbGZhcmlkL25nLWZpbGUt
dXBsb2FkL3JlbGVhc2VzL3RhZy82LjAuMCkgW3ZlcnNpb24gNi4yLnhdKGh0
dHBzOi8vZ2l0aHViLmNvbS9kYW5pYWxmYXJpZC9uZy1maWxlLXVwbG9hZC9y
ZWxlYXNlcy90YWcvNi4yLjApIFt2ZXJzaW9uIDcuMC54XShodHRwczovL2dp
dGh1Yi5jb20vZGFuaWFsZmFyaWQvbmctZmlsZS11cGxvYWQvcmVsZWFzZXMv
dGFnLzcuMC4wKSBbdmVyc2lvbiA3LjIueF0oaHR0cHM6Ly9naXRodWIuY29t
L2RhbmlhbGZhcmlkL25nLWZpbGUtdXBsb2FkL3JlbGVhc2VzL3RhZy83LjIu
MCkgW3ZlcnNpb24gOC4wLnhdKGh0dHBzOi8vZ2l0aHViLmNvbS9kYW5pYWxm
YXJpZC9uZy1maWxlLXVwbG9hZC9yZWxlYXNlcy90YWcvOC4wLjEpIFt2ZXJz
aW9uIDkuMC54XShodHRwczovL2dpdGh1Yi5jb20vZGFuaWFsZmFyaWQvbmct
ZmlsZS11cGxvYWQvcmVsZWFzZXMvdGFnLzkuMC4wKSBbdmVyc2lvbiAxMC4w
LnhdKGh0dHBzOi8vZ2l0aHViLmNvbS9kYW5pYWxmYXJpZC9uZy1maWxlLXVw
bG9hZC9yZWxlYXNlcy90YWcvMTAuMC4wKSBbdmVyc2lvbiAxMS4wLnhdKGh0
dHBzOi8vZ2l0aHViLmNvbS9kYW5pYWxmYXJpZC9uZy1maWxlLXVwbG9hZC9y
ZWxlYXNlcy90YWcvMTEuMC4wKSBbdmVyc2lvbiAxMi4wLnhdKGh0dHBzOi8v
Z2l0aHViLmNvbS9kYW5pYWxmYXJpZC9uZy1maWxlLXVwbG9hZC9yZWxlYXNl
cy90YWcvMTIuMC4wKSBbdmVyc2lvbiAxMi4xLnhdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9kYW5pYWxmYXJpZC9uZy1maWxlLXVwbG9hZC9yZWxlYXNlcy90YWcv
MTIuMS4wKSBbdmVyc2lvbiAxMi4yLnhdKGh0dHBzOi8vZ2l0aHViLmNvbS9k
YW5pYWxmYXJpZC9uZy1maWxlLXVwbG9hZC9yZWxlYXNlcy90YWcvMTIuMi4z
KQoKCgpBc2sgcXVlc3Rpb25zIG9uIFtTdGFja092ZXJmbG93XShodHRwOi8v
c3RhY2tvdmVyZmxvdy5jb20vKSB1bmRlciB0aGUgW25nLWZpbGUtdXBsb2Fk
XShodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vdGFncy9uZy1maWxlLXVwbG9h
ZC8pIHRhZy48YnIvPgpGb3IgYnVnIHJlcG9ydCBvciBmZWF0dXJlIHJlcXVl
c3QgcGxlYXNlIHNlYXJjaCB0aHJvdWdoIGV4aXN0aW5nIFtpc3N1ZXNdKGh0
dHBzOi8vZ2l0aHViLmNvbS9kYW5pYWxmYXJpZC9uZy1maWxlLXVwbG9hZC9p
c3N1ZXMpIGZpcnN0IHRoZW4gb3BlbiBhIG5ldyBvbmUgIFtoZXJlXShodHRw
czovL2dpdGh1Yi5jb20vZGFuaWFsZmFyaWQvbmctZmlsZS11cGxvYWQvaXNz
dWVzL25ldykuIEZvciBmYXN0ZXIgcmVzcG9uc2UgcHJvdmlkZSBzdGVwcyB0
byByZXByb2R1Y2UvdmVyc2lvbnMgd2l0aCBhIGpzZmlkZGxlIGxpbmsuIElm
IHlvdSBuZWVkIHN1cHBvcnQgZm9yIHlvdXIgY29tcGFueSBjb250YWN0IFtt
ZV0obWFpbHRvOmRhbmlhbC5mYXJpZEBnbWFpbC5jb20pLjxici8+CklmIHlv
dSBsaWtlIHRoaXMgcGx1Z2luIGdpdmUgaXQgYSB0aHVtYnMgdXAgYXQgW25n
bW9kdWxlc10oaHR0cDovL25nbW9kdWxlcy5vcmcvbW9kdWxlcy9uZy1maWxl
LXVwbG9hZCkgb3IgZ2V0IG1lIGEgPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9
Imh0dHBzOi8vd3d3LnBheXBhbC5jb20vY2dpLWJpbi93ZWJzY3I/Y21kPV9k
b25hdGlvbnMmYnVzaW5lc3M9ZGFuaWFsJTJlZmFyaWQlNDBnbWFpbCUyZWNv
bSZsYz1DQSZpdGVtX25hbWU9bmclMmRmaWxlJTJkdXBsb2FkJml0ZW1fbnVt
YmVyPW5nJTJkZmlsZSUyZHVwbG9hZCZjdXJyZW5jeV9jb2RlPVVTRCZibj1Q
UCUyZERvbmF0aW9uc0JGJTNhYnRuX2RvbmF0ZUNDX0xHJTJlZ2lmJTNhTm9u
SG9zdGVkIj5jdXAgb2YgdGVhIDxpbWcgc3JjPSJodHRwczovL2FuZ3VsYXIt
ZmlsZS11cGxvYWQuYXBwc3BvdC5jb20vaW1nL3RlYS5wbmciIHdpZHRoPSI0
MCIgaGVpZ2h0PSIyNCIgdGl0bGU9Ikljb24gbWFkZSBieSBGcmVlcGlrLmNv
bSI+PC9hPi4gQ29udHJpYnV0aW9ucyBhcmUgd2VsY29tZWQuCgoKVGFibGUg
b2YgQ29udGVudDoKKiBbRmVhdHVyZXNdKCNmZWF0dXJlcykKKiBbSW5zdGFs
bF0oI2luc3RhbGwpIChbTWFudWFsXSgjbWFudWFsKSwgW0Jvd2VyXSgjYm93
ZXIpLCBbTnVHZXRdKCNudWdldCksIFtOUE1dKCNucG0pKQoqIFtVc2FnZV0o
I3VzYWdlKQoqIFtPbGQgQnJvd3NlcnNdKCNvbGRfYnJvd3NlcnMpCiogW1Nl
cnZlciBTaWRlXSgjc2VydmVyKQogICogW1NhbXBsZXNdKCNzZXJ2ZXIpIChb
SmF2YV0oI2phdmEpLCBbU3ByaW5nXSgjc3ByaW5nKSwgW05vZGUuanNdKCNu
b2RlKSwgW1JhaWxzXSgjcmFpbHMpLCBbUEhQXSgjcGhwKSwgWy5OZXRdKCNu
ZXQpKQogICogW0NPUlNdKCNjb3JzKQogICogW0FtYXpvbiBTMyBVcGxvYWRd
KCNzMykKCiMjIDxhIG5hbWU9ImZlYXR1cmVzIj48L2E+IEZlYXR1cmVzCiog
ZmlsZSB1cGxvYWQgcHJvZ3Jlc3MsIGNhbmNlbC9hYm9ydAoqIGZpbGUgZHJh
ZyBhbmQgZHJvcCAoaHRtbDUgb25seSkKKiBpbWFnZSBwYXN0ZSBmcm9tIGNs
aXBib2FyZCBhbmQgZHJhZyBhbmQgZHJvcCBmcm9tIGJyb3dzZXIgcGFnZXMg
KGh0bWw1IG9ubHkpLgoqIGltYWdlIHJlc2l6ZSBhbmQgY2VudGVyIGNyb3Ag
KG5hdGl2ZSkgYW5kIHVzZXIgY29udHJvbGxlZCBjcm9wIHRocm91Z2ggW25n
SW1nQ3JvcF0oaHR0cHM6Ly9naXRodWIuY29tL2FsZXhrMTExL25nSW1nQ3Jv
cCkuIFNlZSBbY3JvcCBzYW1wbGVdKGh0dHA6Ly9qc2ZpZGRsZS5uZXQvZGFu
aWFsZmFyaWQveHhvM3NrNDEvNTkwLykgKGh0bWw1IG9ubHkpCiogb3JpZW50
YXRpb24gZml4IGZvciBqcGVnIGltYWdlIGZpbGVzIHdpdGggZXhpZiBvcmll
bnRhdGlvbiBkYXRhCiogcmVzdW1hYmxlIHVwbG9hZHM6IHBhdXNlL3Jlc3Vt
ZSB1cGxvYWQgKGh0bWw1IG9ubHkpCiogbmF0aXZlIHZhbGlkYXRpb24gc3Vw
cG9ydCBmb3IgZmlsZSB0eXBlL3NpemUsIGltYWdlIHdpZHRoL2hlaWdodC9h
c3BlY3QgcmF0aW8sIHZpZGVvL2F1ZGlvIGR1cmF0aW9uLCBhbmQgYG5nLXJl
cXVpcmVkYCB3aXRoIHBsdWdnYWJsZSBjdXN0b20gc3luYyBvciBhc3luYyB2
YWxpZGF0aW9ucy4KKiBzaG93IHRodW1ibmFpbCBvciBwcmV2aWV3IG9mIHNl
bGVjdGVkIGltYWdlcy9hdWRpby92aWRlb3MKKiBzdXBwb3J0cyBDT1JTIGFu
ZCBkaXJlY3QgdXBsb2FkIG9mIGZpbGUncyBiaW5hcnkgZGF0YSB1c2luZyBg
VXBsb2FkLiRodHRwKClgCiogcGxlbnR5IG9mIHNhbXBsZSBzZXJ2ZXIgc2lk
ZSBjb2RlLCBhdmFpbGFibGUgb24gbnVnZXQKKiBvbiBkZW1hbmQgZmxhc2gg
W0ZpbGVBUEldKGh0dHBzOi8vZ2l0aHViLmNvbS9tYWlscnUvRmlsZUFQSSkg
c2hpbSBsb2FkaW5nIG5vIGV4dHJhIGxvYWQgZm9yIGh0bWw1IGJyb3dzZXJz
LgoqIEhUTUw1IEZpbGVSZWFkZXIucmVhZEFzRGF0YVVSTCBzaGltIGZvciBJ
RTgtOQoqIGF2YWlsYWJsZSBvbiBbbnBtXShodHRwczovL3d3dy5ucG1qcy5j
b20vcGFja2FnZS9uZy1maWxlLXVwbG9hZCksIFtib3dlcl0oaHR0cHM6Ly9s
aWJyYXJpZXMuaW8vYm93ZXIvbmctZmlsZS11cGxvYWQpLCBbbWV0ZW9yXSho
dHRwczovL2F0bW9zcGhlcmVqcy5jb20vZGFuaWFsZi9uZy1maWxlLXVwbG9h
ZCksIFtudWdldF0oaHR0cHM6Ly93d3cubnVnZXQub3JnL3BhY2thZ2VzL2Fu
Z3VsYXItZmlsZS11cGxvYWQpCgojIyA8YSBuYW1lPSJpbnN0YWxsIj48L2E+
IEluc3RhbGwKCiogPGEgbmFtZT0ibWFudWFsIj48L2E+KipNYW51YWwqKjog
ZG93bmxvYWQgbGF0ZXN0IGZyb20gW2hlcmVdKGh0dHBzOi8vZ2l0aHViLmNv
bS9kYW5pYWxmYXJpZC9uZy1maWxlLXVwbG9hZC1ib3dlci9yZWxlYXNlcy9s
YXRlc3QpCiogPGEgbmFtZT0iYm93ZXIiPjwvYT4qKkJvd2VyKio6CiAgKiBg
Ym93ZXIgaW5zdGFsbCBuZy1maWxlLXVwbG9hZC1zaGltIC0tc2F2ZWAoZm9y
IG5vbiBodG1sNSBzdXBwcG9ydCkKICAqIGBib3dlciBpbnN0YWxsIG5nLWZp
bGUtdXBsb2FkIC0tc2F2ZWAKKiA8YSBuYW1lPSJudWdldCI+PC9hPioqTnVH
ZXQqKjogYFBNPiBJbnN0YWxsLVBhY2thZ2UgYW5ndWxhci1maWxlLXVwbG9h
ZGAgKHRoYW5rcyB0byBbR2Vvcmdpb3MgRGlhbWFudG9wb3Vsb3NdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9nZW9yZ2lvc2QpKQoqIDxhIG5hbWU9Im5wbSI+PC9h
PioqTlBNKio6IGBucG0gaW5zdGFsbCBuZy1maWxlLXVwbG9hZGAKYGBgaHRt
bAo8c2NyaXB0IHNyYz0iYW5ndWxhcigubWluKS5qcyI+PC9zY3JpcHQ+Cjxz
Y3JpcHQgc3JjPSJuZy1maWxlLXVwbG9hZC1zaGltKC5taW4pLmpzIj48L3Nj
cmlwdD4gPCEtLSBmb3Igbm8gaHRtbDUgYnJvd3NlcnMgc3VwcG9ydCAtLT4K
PHNjcmlwdCBzcmM9Im5nLWZpbGUtdXBsb2FkKC5taW4pLmpzIj48L3Njcmlw
dD4KYGBgCgojIyA8YSBuYW1lPSJ1c2FnZSI+PC9hPiBVc2FnZQoKIyMjIFNh
bXBsZXM6CiogVXBsb2FkIHdpdGggZm9ybSBzdWJtaXQgYW5kIHZhbGlkYXRp
b25zOiBbaHR0cDovL2pzZmlkZGxlLm5ldC9kYW5pYWxmYXJpZC9tYXFienYx
NS8xMTE4L10oaHR0cDovL2pzZmlkZGxlLm5ldC9kYW5pYWxmYXJpZC9tYXFi
enYxNS8xMTE4LykKKiBVcGxvYWQgbXVsdGlwbGUgZmlsZXMgb25lIGJ5IG9u
ZSBvbiBmaWxlIHNlbGVjdDoKW2h0dHA6Ly9qc2ZpZGRsZS5uZXQvZGFuaWFs
ZmFyaWQvMnZxODhyZnMvMTM2L10oaHR0cDovL2pzZmlkZGxlLm5ldC9kYW5p
YWxmYXJpZC8ydnE4OHJmcy8xMzYvKQoqIFVwbG9hZCBtdWx0aXBsZSBmaWxl
cyBpbiBvbmUgcmVxdWVzdCBvbiBmaWxlIHNlbGVjdCAoaHRtbDUgb25seSk6
CltodHRwOi8vanNmaWRkbGUubmV0L2RhbmlhbGZhcmlkL2h1aGpvOWptLzUv
XShodHRwOi8vanNmaWRkbGUubmV0L2RhbmlhbGZhcmlkL2h1aGpvOWptLzUv
KQoqIFVwbG9hZCBzaW5nbGUgZmlsZSBvbiBmaWxlIHNlbGVjdDoKW2h0dHA6
Ly9qc2ZpZGRsZS5uZXQvZGFuaWFsZmFyaWQvMG16NmZmOW8vMTM1L10oaHR0
cDovL2pzZmlkZGxlLm5ldC9kYW5pYWxmYXJpZC8wbXo2ZmY5by8xMzUvKQoq
IERyb3AgYW5kIHVwbG9hZCB3aXRoICR3YXRjaDoKW2h0dHA6Ly9qc2ZpZGRs
ZS5uZXQvZGFuaWFsZmFyaWQvczhrYzd3ZzAvNDAwL10oaHR0cDovL2pzZmlk
ZGxlLm5ldC9kYW5pYWxmYXJpZC9zOGtjN3dnMC80MDAvKQoqIEltYWdlIENy
b3AgYW5kIFVwbG9hZApbaHR0cDovL2pzZmlkZGxlLm5ldC9kYW5pYWxmYXJp
ZC94eG8zc2s0MS81OTAvXShodHRwOi8vanNmaWRkbGUubmV0L2RhbmlhbGZh
cmlkL3h4bzNzazQxLzU5MC8pCmBgYGh0bWwKPHNjcmlwdCBzcmM9ImFuZ3Vs
YXIubWluLmpzIj48L3NjcmlwdD4KPCEtLSBzaGltIGlzIG5lZWRlZCB0byBz
dXBwb3J0IG5vbi1IVE1MNSBGb3JtRGF0YSBicm93c2VycyAoSUU4LTkpLS0+
CjxzY3JpcHQgc3JjPSJuZy1maWxlLXVwbG9hZC1zaGltLm1pbi5qcyI+PC9z
Y3JpcHQ+CjxzY3JpcHQgc3JjPSJuZy1maWxlLXVwbG9hZC5taW4uanMiPjwv
c2NyaXB0PgoKVXBsb2FkIG9uIGZvcm0gc3VibWl0IG9yIGJ1dHRvbiBjbGlj
awo8Zm9ybSBuZy1hcHA9ImZpbGVVcGxvYWQiIG5nLWNvbnRyb2xsZXI9Ik15
Q3RybCIgbmFtZT0iZm9ybSI+CiAgU2luZ2xlIEltYWdlIHdpdGggdmFsaWRh
dGlvbnMKICA8ZGl2IGNsYXNzPSJidXR0b24iIG5nZi1zZWxlY3QgbmctbW9k
ZWw9ImZpbGUiIG5hbWU9ImZpbGUiIG5nZi1wYXR0ZXJuPSInaW1hZ2UvKici
CiAgICBuZ2YtYWNjZXB0PSInaW1hZ2UvKiciIG5nZi1tYXgtc2l6ZT0iMjBN
QiIgbmdmLW1pbi1oZWlnaHQ9IjEwMCIKICAgIG5nZi1yZXNpemU9Int3aWR0
aDogMTAwLCBoZWlnaHQ6IDEwMH0iPlNlbGVjdDwvZGl2PgogIE11bHRpcGxl
IGZpbGVzCiAgPGRpdiBjbGFzcz0iYnV0dG9uIiBuZ2Ytc2VsZWN0IG5nLW1v
ZGVsPSJmaWxlcyIgbmdmLW11bHRpcGxlPSJ0cnVlIj5TZWxlY3Q8L2Rpdj4K
ICBEcm9wIGZpbGVzOiA8ZGl2IG5nZi1kcm9wIG5nLW1vZGVsPSJmaWxlcyIg
Y2xhc3M9ImRyb3AtYm94Ij5Ecm9wPC9kaXY+CiAgPGJ1dHRvbiB0eXBlPSJz
dWJtaXQiIG5nLWNsaWNrPSJzdWJtaXQoKSI+c3VibWl0PC9idXR0b24+Cjwv
Zm9ybT4KClVwbG9hZCByaWdodCBhd2F5IGFmdGVyIGZpbGUgc2VsZWN0aW9u
Ogo8ZGl2IGNsYXNzPSJidXR0b24iIG5nZi1zZWxlY3Q9InVwbG9hZCgkZmls
ZSkiPlVwbG9hZCBvbiBmaWxlIHNlbGVjdDwvZGl2Pgo8ZGl2IGNsYXNzPSJi
dXR0b24iIG5nZi1zZWxlY3Q9InVwbG9hZEZpbGVzKCRmaWxlcykiIG11bHRp
cGxlPSJtdWx0aXBsZSI+VXBsb2FkIG9uIGZpbGUgc2VsZWN0PC9kaXY+CiAg
RHJvcCBGaWxlOgo8ZGl2IG5nZi1kcm9wPSJ1cGxvYWRGaWxlcygkZmlsZXMp
IiBjbGFzcz0iZHJvcC1ib3giCiAgbmdmLWRyYWctb3Zlci1jbGFzcz0iJ2Ry
YWdvdmVyJyIgbmdmLW11bHRpcGxlPSJ0cnVlIgogIG5nZi1wYXR0ZXJuPSIn
aW1hZ2UvKixhcHBsaWNhdGlvbi9wZGYnIj5Ecm9wIEltYWdlcyBvciBQREZz
IGZpbGVzIGhlcmU8L2Rpdj4KPGRpdiBuZ2Ytbm8tZmlsZS1kcm9wPkZpbGUg
RHJhZy9Ecm9wIGlzIG5vdCBzdXBwb3J0ZWQgZm9yIHRoaXMgYnJvd3Nlcjwv
ZGl2PgoKSW1hZ2UgdGh1bWJuYWlsOiA8aW1nIG5nZi10aHVtYm5haWw9ImZp
bGUgfHwgJy90aHVtYi5qcGcnIj4KQXVkaW8gcHJldmlldzogPGF1ZGlvIGNv
bnRyb2xzIG5nZi1zcmM9ImZpbGUiPjwvYXVkaW8+ClZpZGVvIHByZXZpZXc6
IDx2aWRlbyBjb250cm9scyBuZ2Ytc3JjPSJmaWxlIj48L3ZpZGVvPgpgYGAK
SmF2YXNjcmlwdCBjb2RlOgpgYGBqcwovL2luamVjdCBkaXJlY3RpdmVzIGFu
ZCBzZXJ2aWNlcy4KdmFyIGFwcCA9IGFuZ3VsYXIubW9kdWxlKCdmaWxlVXBs
b2FkJywgWyduZ0ZpbGVVcGxvYWQnXSk7CgphcHAuY29udHJvbGxlcignTXlD
dHJsJywgWyckc2NvcGUnLCAnVXBsb2FkJywgZnVuY3Rpb24gKCRzY29wZSwg
VXBsb2FkKSB7CiAgICAvLyB1cGxvYWQgbGF0ZXIgb24gZm9ybSBzdWJtaXQg
b3Igc29tZXRoaW5nIHNpbWlsYXIKICAgICRzY29wZS5zdWJtaXQgPSBmdW5j
dGlvbigpIHsKICAgICAgaWYgKCRzY29wZS5mb3JtLmZpbGUuJHZhbGlkICYm
ICRzY29wZS5maWxlKSB7CiAgICAgICAgJHNjb3BlLnVwbG9hZCgkc2NvcGUu
ZmlsZSk7CiAgICAgIH0KICAgIH07CgogICAgLy8gdXBsb2FkIG9uIGZpbGUg
c2VsZWN0IG9yIGRyb3AKICAgICRzY29wZS51cGxvYWQgPSBmdW5jdGlvbiAo
ZmlsZSkgewogICAgICAgIFVwbG9hZC51cGxvYWQoewogICAgICAgICAgICB1
cmw6ICd1cGxvYWQvdXJsJywKICAgICAgICAgICAgZGF0YToge2ZpbGU6IGZp
bGUsICd1c2VybmFtZSc6ICRzY29wZS51c2VybmFtZX0KICAgICAgICB9KS50
aGVuKGZ1bmN0aW9uIChyZXNwKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9n
KCdTdWNjZXNzICcgKyByZXNwLmNvbmZpZy5kYXRhLmZpbGUubmFtZSArICd1
cGxvYWRlZC4gUmVzcG9uc2U6ICcgKyByZXNwLmRhdGEpOwogICAgICAgIH0s
IGZ1bmN0aW9uIChyZXNwKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdF
cnJvciBzdGF0dXM6ICcgKyByZXNwLnN0YXR1cyk7CiAgICAgICAgfSwgZnVu
Y3Rpb24gKGV2dCkgewogICAgICAgICAgICB2YXIgcHJvZ3Jlc3NQZXJjZW50
YWdlID0gcGFyc2VJbnQoMTAwLjAgKiBldnQubG9hZGVkIC8gZXZ0LnRvdGFs
KTsKICAgICAgICAgICAgY29uc29sZS5sb2coJ3Byb2dyZXNzOiAnICsgcHJv
Z3Jlc3NQZXJjZW50YWdlICsgJyUgJyArIGV2dC5jb25maWcuZGF0YS5maWxl
Lm5hbWUpOwogICAgICAgIH0pOwogICAgfTsKICAgIC8vIGZvciBtdWx0aXBs
ZSBmaWxlczoKICAgICRzY29wZS51cGxvYWRGaWxlcyA9IGZ1bmN0aW9uIChm
aWxlcykgewogICAgICBpZiAoZmlsZXMgJiYgZmlsZXMubGVuZ3RoKSB7CiAg
ICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBmaWxlcy5sZW5ndGg7IGkrKykg
ewogICAgICAgICAgVXBsb2FkLnVwbG9hZCh7Li4uLCBkYXRhOiB7ZmlsZTog
ZmlsZXNbaV19LCAuLi59KS4uLjsKICAgICAgICB9CiAgICAgICAgLy8gb3Ig
c2VuZCB0aGVtIGFsbCB0b2dldGhlciBmb3IgSFRNTDUgYnJvd3NlcnM6CiAg
ICAgICAgVXBsb2FkLnVwbG9hZCh7Li4uLCBkYXRhOiB7ZmlsZTogZmlsZXN9
LCAuLi59KS4uLjsKICAgICAgfQogICAgfQp9XSk7CmBgYAoKIyMjIEZ1bGwg
cmVmZXJlbmNlCgojIyMjIEZpbGUgc2VsZWN0IGFuZCBkcm9wCgpBdCBsZWFz
dCBvbmUgb2YgdGhlIGBuZ2Ytc2VsZWN0YCBvciBgbmdmLWRyb3BgIGFyZSBt
YW5kYXRvcnkgZm9yIHRoZSBwbHVnaW4gdG8gbGluayB0byB0aGUgZWxlbWVu
dC4KYG5nZi1zZWxlY3RgIG9ubHkgYXR0cmlidXRlcyBhcmUgbWFya2VkIHdp
dGggKiBhbmQgYG5nZi1kcm9wYCBvbmx5IGF0dHJpYnV0ZXMgYXJlIG1hcmtl
ZCB3aXRoICsuCgpgYGBodG1sCjxkaXZ8YnV0dG9ufGlucHV0IHR5cGU9ImZp
bGUifG5nZi1zZWxlY3R8bmdmLWRyb3AuLi4KICBuZ2Ytc2VsZWN0PSIiIG9y
ICJ1cGxvYWQoJGZpbGVzLCAuLi4pIiAgPCEtLSBjYWxsZWQgd2hlbiBmaWxl
cyBhcmUgc2VsZWN0ZWQgb3IgY2xlYXJlZCAtLT4KICBuZ2YtZHJvcD0iIiBv
ciAidXBsb2FkKCRmaWxlcywgLi4uKSIgPCEtLSAgY2FsbGVkIHdoZW4gZmls
ZXMgYmVpbmcgZHJvcHBlZAogICAgWW91IGNhbiB1c2UgbmctbW9kZWwgb3Ig
bmdmLWNoYW5nZSBpbnN0ZWFkIG9mIHNwZWNpZnlpbmcgZnVuY3Rpb24gZm9y
IG5nZi1kcm9wIGFuZCBuZ2Ytc2VsZWN0CiAgICBmdW5jdGlvbiBwYXJhbWV0
ZXJzIGFyZSB0aGUgc2FtZSBhcyBuZ2YtY2hhbmdlIC0tPgogIG5nZi1jaGFu
Z2U9InVwbG9hZCgkZmlsZXMsICRmaWxlLCAkbmV3RmlsZXMsICRkdXBsaWNh
dGVGaWxlcywgJGludmFsaWRGaWxlcywgJGV2ZW50KSIKICAgIDwhLS0gIGNh
bGxlZCB3aGVuIGZpbGVzIGFyZSBzZWxlY3RlZCwgZHJvcHBlZCwgb3IgY2xl
YXJlZCAtLT4KICBuZy1tb2RlbD0ibXlGaWxlcyIgPCEtLSAgYmluZHMgdGhl
IHZhbGlkIHNlbGVjdGVkL2Ryb3BwZWQgZmlsZSBvciBmaWxlcyB0byB0aGUg
c2NvcGUgbW9kZWwKICAgIGNvdWxkIGJlIGFuIGFycmF5IG9yIHNpbmdsZSBm
aWxlIGRlcGVuZGluZyBvbiBuZ2YtbXVsdGlwbGUgYW5kIG5nZi1rZWVwIHZh
bHVlcy4gLS0+CiAgbmdmLW1vZGVsLW9wdGlvbnM9Int1cGRhdGVPbjogJ2No
YW5nZSBjbGljayBkcm9wIGRyb3BVcmwgcGFzdGUnLCBhbGxvd0ludmFsaWQ6
IGZhbHNlLCBkZWJvdW5jZTogMH0iCiAgICA8IS0tICB1cGRhdGVPbiBjb3Vs
ZCBiZSB1c2VkIHRvIGRpc2FibGUgcmVzZXR0aW5nIG9uIGNsaWNrLCBvciB1
cGRhdGluZyBvbiBwYXN0ZSwgYnJvd3NlciAKICAgIGltYWdlIGRyb3AsIGV0
Yy4gYWxsb3dJbnZhbGlkIGRlZmF1bHQgaXMgZmFsc2UgY291bGQgYWxsb3cg
aW52YWxpZCBmaWxlcyBpbiB0aGUgbW9kZWwKICAgIGRlYm91bmNpbmcgd2ls
bCBwb3N0cG9uZSBtb2RlbCB1cGRhdGUgKG1pbGlzZWNvbmRzKS4gU2VlIGFu
Z3VsYXIgbmctbW9kZWwtb3B0aW9ucyBmb3IgbW9yZSBkZXRhaWxzLiAtLT4K
ICBuZ2YtbW9kZWwtaW52YWxpZD0iaW52YWxpZEZpbGUocykiIDwhLS0gIGJp
bmRzIHRoZSBpbnZhbGlkIHNlbGVjdGVkL2Ryb3BwZWQgZmlsZSBvciBmaWxl
cyB0byB0aGlzIG1vZGVsLiAtLT4KICBuZ2YtYmVmb3JlLW1vZGVsLWNoYW5n
ZT0iYmVmb3JlQ2hhbmdlKCRmaWxlcywgLi4uKSIgPCEtLSAgY2FsbGVkIGFm
dGVyIGZpbGUgc2VsZWN0L2Ryb3AgYW5kIGJlZm9yZQogICAgbW9kZWwgY2hh
bmdlLCB2YWxpZGF0aW9uIGFuZCByZXNpemUgaXMgcHJvY2Vzc2VkIC0tPgog
IG5nLWRpc2FibGVkPSJib29sZWFuIiA8IS0tICBkaXNhYmxlcyB0aGlzIGVs
ZW1lbnQgLS0+CiAgbmdmLXNlbGVjdC1kaXNhYmxlZD0iYm9vbGVhbiIgPCEt
LSAgZGVmYXVsdCBmYWxzZSwgZGlzYWJsZXMgZmlsZSBzZWxlY3Qgb24gdGhp
cyBlbGVtZW50IC0tPgogIG5nZi1kcm9wLWRpc2FibGVkPSJib29sZWFuIiA8
IS0tICBkZWZhdWx0IGZhbHNlLCBkaXNhYmxlcyBmaWxlIGRyb3Agb24gdGhp
cyBlbGVtZW50IC0tPgogIG5nZi1tdWx0aXBsZT0iYm9vbGVhbiIgPCEtLSAg
ZGVmYXVsdCBmYWxzZSwgYWxsb3dzIHNlbGVjdGluZyBtdWx0aXBsZSBmaWxl
cyAtLT4KICBuZ2Yta2VlcD0idHJ1ZXxmYWxzZXwnZGlzdGluY3QnIiA8IS0t
ICBkZWZhdWx0IGZhbHNlLCBrZWVwIHRoZSBwcmV2aW91cyBuZy1tb2RlbCBm
aWxlcyBhbmQgCiAgICBhcHBlbmQgdGhlIG5ldyBmaWxlcy4gIidkaXN0aW5j
dCciIHJlbW92ZXMgZHVwbGljYXRlIGZpbGVzCiAgICAkbmV3RmlsZXMgYW5k
ICRkdXBsaWNhdGVGaWxlcyBhcmUgc2V0IGluIG5nZi1jaGFuZ2Uvc2VsZWN0
L2Ryb3AgZnVuY3Rpb25zLiAtLT4KICBuZ2YtZml4LW9yaWVudGF0aW9uPSJi
b29sZWFuIiA8IS0tIGRlZmF1bHQgZmFsc2UsIHdvdWxkIHJvdGF0ZSB0aGUg
anBlZyBpbWFnZSBmaWxlcyB0aGF0IGhhdmUKICAgIGV4aWYgb3JpZW50YXRp
b24gZGF0YS4gU2VlICM3NDUuIENvdWxkIGJlIGEgYm9vbGVhbiBmdW5jdGlv
biBsaWtlIHNob3VsZEZpeE9yaWVudGF0aW9uKCRmaWxlKQogICAgdG8gZGVj
aWRlIHdldGhlcmUgdG8gZml4IHRoYXQgZmlsZSBvciBub3QuIC0tPgoKICAq
bmdmLWNhcHR1cmU9IidjYW1lcmEnIiBvciAiJ290aGVyJyIgPCEtLSAgYWxs
b3dzIG1vYmlsZSBkZXZpY2VzIHRvIGNhcHR1cmUgdXNpbmcgY2FtZXJhIC0t
PgogICpuZ2YtYWNjZXB0PSInaW1hZ2UvKiciIDwhLS0gIHN0YW5kYXJkIEhU
TUwgYWNjZXB0IGF0dHIsIGJyb3dzZXIgc3BlY2lmaWMgc2VsZWN0IHBvcHVw
IHdpbmRvdyAtLT4KCiAgK25nZi1hbGxvdy1kaXI9ImJvb2xlYW4iIDwhLS0g
IGRlZmF1bHQgdHJ1ZSwgYWxsb3cgZHJvcHBpbmcgZmlsZXMgb25seSBmb3Ig
Q2hyb21lIHdlYmtpdCBicm93c2VyIC0tPgogICtuZ2YtaW5jbHVkZS1kaXI9
ImJvb2xlYW4iIDwhLS0gZGVmYXVsdCBmYWxzZSwgaW5jbHVkZSBkaXJlY3Rv
cmllcyBpbiB0aGUgZHJvcHBlZCBmaWxlIGFycmF5LgogICAgWW91IGNhbiBk
ZXRlY3QgaWYgdGhleSBhcmUgZGlyZWN0b3J5IG9yIG5vdCBieSBjaGVja2lu
ZyB0aGUgdHlwZSA9PT0gJ2RpcmVjdG9yeScuIC0tPgogICtuZ2YtZHJhZy1v
dmVyLWNsYXNzPSJ7cGF0dGVybjogJ2ltYWdlLyonLCBhY2NlcHQ6J2FjY2Vw
dENsYXNzJywgcmVqZWN0OidyZWplY3RDbGFzcycsIGRlbGF5OjEwMH0iCiAg
ICAgICAgICAgICAgICAgICAgb3IgIidteURyYWdPdmVyQ2xhc3MnIiBvciAi
Y2FsY0RyYWdPdmVyQ2xhc3MoJGV2ZW50KSIKICAgIDwhLS0gIGRlZmF1bHQg
ImRyYWdvdmVyIi4gZHJhZyBvdmVyIGNzcyBjbGFzcyBiZWhhdmlvdXIuIGNv
dWxkIGJlIGEgc3RyaW5nLCBhIGZ1bmN0aW9uCiAgICByZXR1cm5pbmcgY2xh
c3MgbmFtZSBvciBhIGpzb24gb2JqZWN0LgogICAgYWNjZXB0L3JlamVjdCBj
bGFzcyBvbmx5IHdvcmtzIGluIENocm9tZSwgdmFsaWRhdGluZyBvbmx5IHRo
ZSBmaWxlIG1pbWUgdHlwZS4KICAgIGlmIHBhdHRlcm4gaXMgbm90IHNwZWNp
ZmllZCBuZ2YtcGF0dGVybiB3aWxsIGJlIHVzZWQuIFNlZSBmb2xsb3dpbmcg
ZG9jcyBmb3IgbW9yZSBpbmZvLiAtLT4KICArbmdmLWRyYWc9ImRyYWcoJGlz
RHJhZ2dpbmcsICRjbGFzcywgJGV2ZW50KSIgPCEtLSAgZnVuY3Rpb24gY2Fs
bGVkIG9uIGRyYWcgb3Zlci9sZWF2ZSBldmVudHMuCiAgICAkaXNEcmFnZ2lu
ZzogYm9vbGVhbiB0cnVlIGlmIGlzIGRyYWdnaW5nIG92ZXIoZHJhZ292ZXIp
LCBmYWxzZSBpZiBkcmFnIGhhcyBsZWZ0IChkcmFnbGVhdmUpCiAgICAkY2xh
c3MgaXMgdGhlIGNsYXNzIHRoYXQgaXMgYmVpbmcgc2V0IGZvciB0aGUgZWxl
bWVudCBjYWxjdWxhdGVkIGJ5IG5nZi1kcmFnLW92ZXItY2xhc3MgLS0+CiAg
K25nZi1kcm9wLWF2YWlsYWJsZT0iZHJvcFN1cHBvcnRlZCIgPCEtLSAgc2V0
IHRoZSB2YWx1ZSBvZiBzY29wZSBtb2RlbCB0byB0cnVlIG9yIGZhbHNlIAog
ICAgYmFzZWQgb24gZmlsZSBkcmFnJmRyb3Agc3VwcG9ydCBmb3IgdGhpcyBi
cm93c2VyIC0tPgogICtuZ2Ytc3RvcC1wcm9wYWdhdGlvbj0iYm9vbGVhbiIg
PCEtLSAgZGVmYXVsdCBmYWxzZSwgd2hldGhlciB0byBwcm9wYWdhdGUgZHJh
Zy9kcm9wIGV2ZW50cy4gLS0+CiAgK25nZi1oaWRlLW9uLWRyb3Atbm90LWF2
YWlsYWJsZT0iYm9vbGVhbiIgPCEtLSAgZGVmYXVsdCBmYWxzZSwgaGlkZXMg
ZWxlbWVudCBpZiBmaWxlIGRyYWcmZHJvcCBpcyBub3QgLS0+CiAgK25nZi1l
bmFibGUtZmlyZWZveC1wYXN0ZT0iYm9vbGVhbiIgPCEtLSAgKmV4cGVyaW1l
bnRhbCogZGVmYXVsdCBmYWxzZSwgZW5hYmxlIGZpcmVmb3ggaW1hZ2UgcGFz
dGUgCiAgICBieSBtYWtpbmcgZWxlbWVudCBjb250ZW50ZWRpdGFibGUgLS0+
CgogIG5nZi1yZXNpemU9Int3aWR0aDogMTAwLCBoZWlnaHQ6IDEwMCwgcXVh
bGl0eTogLjgsIHR5cGU6ICdpbWFnZS9qcGVnJywKICAgICAgICAgICAgICAg
cmF0aW86ICcxOjInLCBjZW50ZXJDcm9wOiB0cnVlLCBwYXR0ZXJuPScuanBn
JywgcmVzdG9yZUV4aWY6IGZhbHNlfSIKICAgICAgICAgICAgICAgb3IgcmVz
aXplT3B0aW9ucygpIDwhLS0gIGEgZnVuY3Rpb24gcmV0dXJuaW5nIGEgcHJv
bWlzZSB3aGljaCByZXNvbHZlcyBpbnRvIHRoZSBvcHRpb25zLgogICAgcmVz
aXplcyB0aGUgaW1hZ2UgdG8gdGhlIGdpdmVuIHdpZHRoL2hlaWdodCBvciBy
YXRpby4gUXVhbGl0eSBpcyBvcHRpb25hbCBiZXR3ZWVuIDAuMSBhbmQgMS4w
KSwKICAgIHR5cGUgaXMgb3B0aW9uYWwgY29udmVydCBpdCB0byB0aGUgZ2l2
ZW4gaW1hZ2UgdHlwZSBmb3JtYXQuCiAgICBjZW50ZXJDcm9wIHRydWUgd2ls
bCBjZW50ZXIgY3JvcCB0aGUgaW1hZ2UgaWYgaXQgZG9lcyBub3QgZml0IHdp
dGhpbiB0aGUgZ2l2ZW4gd2lkdGgvaGVpZ2h0IG9yIHJhdGlvLgogICAgY2Vu
dGVyQ3JvcCBmYWxzZSAoZGVmYXVsdCkgd2lsbCBub3QgY3JvcCB0aGUgaW1h
Z2UgYW5kIHdpbGwgZml0IGl0IHdpdGhpbiB0aGUgZ2l2ZW4gd2lkdGgvaGVp
Z2h0IG9yIHJhdGlvCiAgICBzbyB0aGUgcmVzdWx0aW5nIGltYWdlIHdpZHRo
IChvciBoZWlnaHQpIGNvdWxkIGJlIGxlc3MgdGhhbiBnaXZlbiB3aWR0aCAo
b3IgaGVpZ2h0KS4KICAgIHBhdHRlcm4gaXMgdG8gcmVzaXplIG9ubHkgdGhl
IGZpbGVzIHRoYXQgdGhlaXIgbmFtZSBvciB0eXBlIG1hdGNoZXMgdGhlIHBh
dHRlcm4gc2ltaWxhciB0byBuZ2YtcGF0dGVybi4KICAgIHJlc3RvcmVFeGlm
IGJvb2xlYW4gZGVmYXVsdCB0cnVlLCB3aWxsIHJlc3RvcmUgZXhpZiBpbmZv
IG9uIHRoZSByZXNpemVkIGltYWdlLiAtLT4KICBuZ2YtcmVzaXplLWlmPSIk
d2lkdGggPiAxMDAwIHx8ICRoZWlnaHQgPiAxMDAwIiBvciAicmVzaXplQ29u
ZGl0aW9uKCRmaWxlLCAkd2lkdGgsICRoZWlnaHQpIgogICAgPCEtLSAgYXBw
bHkgbmdmLXJlc2l6ZSBvbmx5IGlmIHRoaXMgZnVuY3Rpb24gcmV0dXJucyB0
cnVlLiBUbyBmaWx0ZXIgc3BlY2lmaWMgaW1hZ2VzIHRvIGJlIHJlc2l6ZWQu
IC0tPgogIG5nZi12YWxpZGF0ZS1hZnRlci1yZXNpemU9ImJvb2xlYW4iIDwh
LS0gIGRlZmF1bHQgZmFsc2UsIGlmIHRydWUgYWxsIHZhbGlkYXRpb24gd2ls
bCBiZSBydW4gYWZ0ZXIKICAgIHRoZSBpbWFnZXMgYXJlIGJlaW5nIHJlc2l6
ZWQsIHNvIGFueSB2YWxpZGF0aW9uIGVycm9yIGJlZm9yZSByZXNpemUgd2ls
bCBiZSBpZ25vcmVkLiAtLT4KCiAgPCEtLSB2YWxpZGF0aW9uczogLS0+CiAg
bmdmLW1heC1maWxlcz0iMTAiIDwhLS0gIG1heGltdW0gbnVtYmVyIG9mIGZp
bGVzIGFsbG93ZWQgdG8gYmUgc2VsZWN0ZWQgb3IgZHJvcHBlZCwgdmFsaWRh
dGUgZXJyb3IgbmFtZTogbWF4RmlsZXMgLS0+CiAgbmdmLXBhdHRlcm49Iicu
cGRmLC5qcGcsdmlkZW8vKiwhLmpvZyciIDwhLS0gIGNvbW1hIHNlcGFyYXRl
ZCB3aWxkY2FyZCB0byBmaWx0ZXIgZmlsZSBuYW1lcyBhbmQgCiAgICB0eXBl
cyBhbGxvd2VkIHlvdSBjYW4gZXhjbHVkZSBzcGVjaWZpYyBmaWxlcyBieSAh
IGF0IHRoZSBiZWdpbm5pbmcuIHZhbGlkYXRlIGVycm9yIG5hbWU6IHBhdHRl
cm4gLS0+CiAgbmdmLW1pbi1zaXplLCBuZ2YtbWF4LXNpemUsIG5nZi1tYXgt
dG90YWwtc2l6ZT0iMTAwIiBpbiBieXRlcyBvciAiJzEwS0InIiBvciAiJzEw
TUInIiBvciAiJzEwR0InIgogICAgPCEtLSAgdmFsaWRhdGUgYXMgZm9ybS5m
aWxlLiRlcnJvci5tYXhTaXplPXRydWUgYW5kIGZpbGUuJGVycm9yPSdtYXhT
aXplJwogICAgbmdmLW1heC10b3RhbC1zaXplIGlzIGZvciBtdWx0aXBsZSBm
aWxlIHNlbGVjdCBhbmQgdmFsaWRhdGluZyB0aGUgdG90YWwgc2l6ZSBvZiBh
bGwgZmlsZXMuIC0tPgogIG5nZi1taW4taGVpZ2h0LCBuZ2YtbWF4LWhlaWdo
dCwgbmdmLW1pbi13aWR0aCwgbmdmLW1heC13aWR0aD0iMTAwMCIgaW4gcGl4
ZWxzIG9ubHkgaW1hZ2VzCiAgICA8IS0tICB2YWxpZGF0ZSBlcnJvciBuYW1l
czogbWluSGVpZ2h0LCBtYXhIZWlnaHQsIG1pbldpZHRoLCBtYXhXaWR0aCAt
LT4KICBuZ2YtcmF0aW89Ijg6MTAsMS42IiA8IS0tICBsaXN0IG9mIGNvbW1h
IHNlcGFyYXRlZCB2YWxpZCBhc3BlY3QgcmF0aW8gb2YgaW1hZ2VzIGluIGZs
b2F0IG9yIDI6MyBmb3JtYXQKICAgIHZhbGlkYXRlIGVycm9yIG5hbWU6IHJh
dGlvIC0tPgogIG5nZi1taW4tcmF0aW8sIG5nZi1tYXgtcmF0aW89Ijg6MTAi
IDwhLS0gIG1pbiBvciBtYXggYWxsb3dlZCBhc3BlY3QgcmF0aW8gZm9yIHRo
ZSBpbWFnZS4gLS0+CiAgbmdmLWRpbWVuc2lvbnM9IiR3aWR0aCA+IDEwMDAg
fHwgJGhlaWdodCA+IDEwMDAiIG9yICJ2YWxpZGF0ZURpbWVuc2lvbigkZmls
ZSwgJHdpZHRoLCAkaGVpZ2h0KSIKICAgIDwhLS0gIHZhbGlkYXRlIHRoZSBp
bWFnZSBkaW1lbnNpb25zLCB2YWxpZGF0ZSBlcnJvciBuYW1lOiBkaW1lbnNp
b25zIC0tPgogIG5nZi1taW4tZHVyYXRpb24sIG5nZi1tYXgtZHVyYXRpb249
IjEwMC41IiBpbiBzZWNvbmRzIG9yICInMTBzJyIgb3IgIicxMG0nIiBvciAi
JzEwaCciIG9ubHkgYXVkaW8sIHZpZGVvCiAgICA8IS0tICB2YWxpZGF0ZSBl
cnJvciBuYW1lOiBtYXhEdXJhdGlvbiAtLT4KICBuZ2YtZHVyYXRpb249IiRk
dXJhdGlvbiA+IDEwMDAiIG9yICJ2YWxpZGF0ZUR1cmF0aW9uKCRmaWxlLCAk
ZHVyYXRpb24pIgogICAgPCEtLSAgdmFsaWRhdGUgdGhlIG1lZGlhIGR1cmF0
aW9uLCB2YWxpZGF0ZSBlcnJvciBuYW1lOiBkdXJhdGlvbiAtLT4KCiAgbmdm
LXZhbGlkYXRlPSJ7c2l6ZToge21pbjogMTAsIG1heDogJzIwTUInfSwgd2lk
dGg6IHttaW46IDEwMCwgbWF4OjEwMDAwfSwgaGVpZ2h0OiB7bWluOiAxMDAs
IG1heDogMzAwfQogICAgICAgICAgICAgICAgcmF0aW86ICcyeDEnLCBkdXJh
dGlvbjoge21pbjogJzEwcycsIG1heDogJzVtJ30sIHBhdHRlcm46ICcuanBn
J30iCiAgICA8IS0tIHNob3J0aGFuZCBmb3JtIGZvciBhYm92ZSB2YWxpZGF0
aW9ucyBpbiBvbmUgcGxhY2UuIC0tPgogIG5nZi12YWxpZGF0ZS1mbj0idmFs
aWRhdGUoJGZpbGUpIiA8IS0tICBjdXN0b20gdmFsaWRhdGlvbiBmdW5jdGlv
biwgcmV0dXJuIGJvb2xlYW4gb3Igc3RyaW5nIAogICAgY29udGFpbmluZyB0
aGUgZXJyb3IuIHZhbGlkYXRlIGVycm9yIG5hbWU6IHZhbGlkYXRlRm4gLS0+
CiAgbmdmLXZhbGlkYXRlLWFzeW5jLWZuPSJ2YWxpZGF0ZSgkZmlsZSkiIDwh
LS0gIGN1c3RvbSB2YWxpZGF0aW9uIGZ1bmN0aW9uLCByZXR1cm4gYSBwcm9t
aXNlIHRoYXQgCiAgICByZXNvbHZlIHRvIGJvb2xlYW4gb3Igc3RyaW5nIGNv
bnRhaW5pbmcgdGhlIGVycm9yLiB2YWxpZGF0ZSBlcnJvciBuYW1lOiB2YWxp
ZGF0ZUFzeW5jRm4gLS0+CiAgbmdmLXZhbGlkYXRlLWZvcmNlPSJib29sZWFu
IiA8IS0tICBkZWZhdWx0IGZhbHNlLCBpZiB0cnVlIGZpbGUuJGVycm9yIHdp
bGwgYmUgc2V0IGlmIAogICAgdGhlIGRpbWVuc2lvbiBvciBkdXJhdGlvbiB2
YWx1ZXMgZm9yIHZhbGlkYXRpb25zIGNhbm5vdCBiZSBjYWxjdWxhdGVkIGZv
ciBleGFtcGxlIAogICAgaW1hZ2UgbG9hZCBlcnJvciBvciB1bnN1cHBvcnRl
ZCB2aWRlbyBieSB0aGUgYnJvd3Nlci4gYnkgZGVmYXVsdCBpdCB3b3VsZCBh
c3N1bWUgdGhlIGZpbGUgCiAgICBpcyB2YWxpZCBpZiB0aGUgZHVyYXRpb24g
b3IgZGltZW5zaW9uIGNhbm5vdCBiZSBjYWxjdWxhdGVkIGJ5IHRoZSBicm93
c2VyLiAtLT4KICBuZ2YtaWdub3JlLWludmFsaWQ9IidwYXR0ZXJuIG1heFNp
emUnIiA8IS0tICBpZ25vcmUgdGhlIGZpbGVzIHRoYXQgZmFpbCB0aGUgc3Bl
Y2lmaWVkIHZhbGlkYXRpb25zLiAKICAgIFRoZXkgd2lsbCBqdXN0IGJlIGln
bm9yZWQgYW5kIHdpbGwgbm90IHNob3cgdXAgaW4gbmdmLW1vZGVsLWludmFs
aWQgb3IgbWFrZSB0aGUgZm9ybSBpbnZhbGlkLgogICAgc3BhY2Ugc2VwYXJh
dGVkIGxpc3Qgb2YgdmFsaWRhdGUgZXJyb3IgbmFtZXMuIC0tPgogIG5nZi1y
dW4tYWxsLXZhbGlkYXRpb25zPSJib29sZWFuIiA8IS0tICBkZWZhdWx0IGZh
bHNlLiBSdW5zIGFsbCB0aGUgc3BlY2lmaWVkIHZhbGlkYXRlIGRpcmVjdGl2
ZXMuIAogICAgQnkgZGVmYXVsdCBvbmNlIGEgdmFsaWRhdGlvbiBmYWlscyBm
b3IgYSBmaWxlIGl0IHdvdWxkIHN0b3AgcnVubmluZyBvdGhlciB2YWxpZGF0
aW9ucyBmb3IgdGhhdCBmaWxlLiAtLT4KCj5VcGxvYWQvRHJvcDwvZGl2PgoK
PGRpdnwuLi4gbmdmLW5vLWZpbGUtZHJvcD5GaWxlIERyYWcvZHJvcCBpcyBu
b3Qgc3VwcG9ydGVkPC9kaXY+Cgo8IS0tICBmaWx0ZXIgdG8gY29udmVydCB0
aGUgZmlsZSB0byBiYXNlNjQgZGF0YSB1cmwuIC0tPgo8YSBocmVmPSJmaWxl
IHwgbmdmRGF0YVVybCI+aW1hZ2U8L2E+CmBgYAoKIyMjIyBGaWxlIHByZXZp
ZXcKYGBgaHRtbAo8aW1nfGF1ZGlvfHZpZGVvfGRpdgogICpuZ2Ytc3JjPSJm
aWxlIiA8IS0tIFRvIHByZXZpZXcgdGhlIHNlbGVjdGVkIGZpbGUsIHNldHMg
c3JjIGF0dHJpYnV0ZSB0byB0aGUgZmlsZSBkYXRhIHVybC4gLS0+CiAgKm5n
Zi1iYWNrZ3JvdW5kPSJmaWxlIiA8IS0tIHNldHMgYmFja2dyb3VuZC1pbWFn
ZSBzdHlsZSB0byB0aGUgZmlsZSBkYXRhIHVybC4gLS0+CiAgbmdmLXJlc2l6
ZT0ie3dpZHRoOiAyMCwgaGVpZ2h0OiAyMCwgcXVhbGl0eTogMC45fSIgPCEt
LSAgb25seSBmb3IgaW1hZ2UgcmVzaXplcyB0aGUgaW1hZ2UgCiAgICBiZWZv
cmUgc2V0dGluZyBpdCBhcyBzcmMgb3IgYmFja2dyb3VuZCBpbWFnZS4gcXVh
bGl0eSBpcyBvcHRpb25hbC4gLS0+CiAgbmdmLW5vLW9iamVjdC11cmw9InRy
dWUgb3IgZmFsc2UiIDwhLS0gIHNlZSAjODg3IHRvIGZvcmNlIGJhc2U2NCB1
cmwgZ2VuZXJhdGlvbiBpbnN0ZWFkIG9mIAogICAgb2JqZWN0IHVybC4gRGVm
YXVsdCBmYWxzZSAtLT4KPgoKPGRpdnxzcGFufC4uLgogKm5nZi10aHVtYm5h
aWw9ImZpbGUiIDwhLS0gR2VuZXJhdGVzIGEgdGh1bWJuYWlsIHZlcnNpb24g
b2YgdGhlIGltYWdlIGZpbGUgLS0+CiBuZ2Ytc2l6ZT0ie3dpZHRoOiAyMCwg
aGVpZ2h0OiAyMCwgcXVhbGl0eTogMC45fSIgdGhlIGltYWdlIHdpbGwgYmUg
cmVzaXplZCB0byB0aGlzIHNpemUKICAgICAgICA8IS0tICBpZiBub3Qgc3Bl
Y2lmaWVkIHdpbGwgYmUgcmVzaXplZCB0byB0aGlzIGVsZW1lbnRgcyBjbGll
bnQgd2lkdGggYW5kIGhlaWdodC4gLS0+CiBuZ2YtYXMtYmFja2dyb3VuZD0i
Ym9vbGVhbiIgPCEtLSBpZiB0cnVlIGl0IHdpbGwgc2V0IHRoZSBiYWNrZ3Jv
dW5kIGltYWdlIHN0eWxlIGluc3RlYWQgb2Ygc3JjIGF0dHJpYnV0ZS4gLS0+
Cj4KYGBgCgojIyMjIFVwbG9hZCBzZXJ2aWNlOgpgYGBqcwp2YXIgdXBsb2Fk
ID0gVXBsb2FkLnVwbG9hZCh7CiAgKnVybDogJ3NlcnZlci91cGxvYWQvdXJs
JywgLy8gdXBsb2FkLnBocCBzY3JpcHQsIG5vZGUuanMgcm91dGUsIG9yIHNl
cnZsZXQgdXJsCiAgLyoKICBTcGVjaWZ5IHRoZSBmaWxlIGFuZCBvcHRpb25h
bCBkYXRhIHRvIGJlIHNlbnQgdG8gdGhlIHNlcnZlci4KICBFYWNoIGZpZWxk
IGluY2x1ZGluZyBuZXN0ZWQgb2JqZWN0cyB3aWxsIGJlIHNlbnQgYXMgYSBm
b3JtIGRhdGEgbXVsdGlwYXJ0LgogIFNhbXBsZXM6IHtwaWM6IGZpbGUsIHVz
ZXJuYW1lOiB1c2VybmFtZX0KICAgIHtmaWxlczogZmlsZXMsIG90aGVySW5m
bzoge2lkOiBpZCwgcGVyc29uOiBwZXJzb24sLi4ufX0gbXVsdGlwbGUgZmls
ZXMgKGh0bWw1KQogICAge3Byb2ZpbGVzOiB7W3twaWM6IGZpbGUxLCB1c2Vy
bmFtZTogdXNlcm5hbWUxfSwge3BpYzogZmlsZTIsIHVzZXJuYW1lOiB1c2Vy
bmFtZTJ9XX0gbmVzdGVkIGFycmF5IG11bHRpcGxlIGZpbGVzIChodG1sNSkK
ICAgIHtmaWxlOiBmaWxlLCBpbmZvOiBVcGxvYWQuanNvbih7aWQ6IGlkLCBu
YW1lOiBuYW1lLCAuLi59KX0gc2VuZCBmaWVsZHMgYXMganNvbiBzdHJpbmcK
ICAgIHtmaWxlOiBmaWxlLCBpbmZvOiBVcGxvYWQuanNvbkJsb2Ioe2lkOiBp
ZCwgbmFtZTogbmFtZSwgLi4ufSl9IHNlbmQgZmllbGRzIGFzIGpzb24gYmxv
YiwgJ2FwcGxpY2F0aW9uL2pzb24nIGNvbnRlbnRfdHlwZQogICAge3BpY0Zp
bGU6IFVwbG9hZC5yZW5hbWUoZmlsZSwgJ3Byb2ZpbGUuanBnJyksIHRpdGxl
OiB0aXRsZX0gc2VuZCBmaWxlIHdpdGggcGljRmlsZSBrZXkgYW5kIHByb2Zp
bGUuanBnIGZpbGUgbmFtZSovCiAgKmRhdGE6IHtrZXk6IGZpbGUsIG90aGVy
SW5mbzogdXBsb2FkSW5mb30sCiAgLyoKICBUaGlzIGlzIHRvIGFjY29tbW9k
YXRlIHNlcnZlciBpbXBsZW1lbnRhdGlvbnMgZXhwZWN0aW5nIG5lc3RlZCBk
YXRhIG9iamVjdCBrZXlzIGluIC5rZXkgb3IgW2tleV0gZm9ybWF0LgogIEV4
YW1wbGU6IGRhdGE6IHtyZWM6IHtuYW1lOiAnTicsIHBpYzogZmlsZX19IHNl
bnQgYXM6IHJlY1tuYW1lXSAtPiBOLCByZWNbcGljXSAtPiBmaWxlCiAgICAg
ZGF0YToge3JlYzoge25hbWU6ICdOJywgcGljOiBmaWxlfX0sIG9iamVjdEtl
eTogJy5rJyBzZW50IGFzOiByZWMubmFtZSAtPiBOLCByZWMucGljIC0+IGZp
bGUgKi8KICBvYmplY3RLZXk6ICdba10nIG9yICcuaycgLy8gZGVmYXVsdCBp
cyAnW2tdJwogIC8qCiAgVGhpcyBpcyB0byBhY2NvbW1vZGF0ZSBzZXJ2ZXIg
aW1wbGVtZW50YXRpb25zIGV4cGVjdGluZyBhcnJheSBkYXRhIG9iamVjdCBr
ZXlzIGluICdbaV0nIG9yICdbXScgb3IKICAnJyhtdWx0aXBsZSBlbnRyaWVz
IHdpdGggc2FtZSBrZXkpIGZvcm1hdC4KICBFeGFtcGxlOiBkYXRhOiB7cmVj
OiBbZmlsZVswXSwgZmlsZVsxXSwgLi4uXX0gc2VudCBhczogcmVjWzBdIC0+
IGZpbGVbMF0sIHJlY1sxXSAtPiBmaWxlWzFdLC4uLgogICAgZGF0YToge3Jl
Yzoge3JlYzogW2ZbMF0sIGZbMV0sIC4uLl0sIGFycmF5S2V5OiAnW10nfSBz
ZW50IGFzOiByZWNbXSAtPiBmWzBdLCByZWNbXSAtPiBmWzFdLC4uLiovCiAg
YXJyYXlLZXk6ICdbaV0nIG9yICdbXScgb3IgJy5pJyBvciAnJyAvL2RlZmF1
bHQgaXMgJ1tpXScKICBtZXRob2Q6ICdQT1NUJyBvciAnUFVUJyhodG1sNSks
IGRlZmF1bHQgUE9TVCwKICBoZWFkZXJzOiB7J0F1dGhvcml6YXRpb24nOiAn
eHh4J30sIC8vIG9ubHkgZm9yIGh0bWw1CiAgd2l0aENyZWRlbnRpYWxzOiBi
b29sZWFuLAogIC8qCiAgU2VlIHJlc3VtYWJsZSB1cGxvYWQgZ3VpZGUgYmVs
b3cgdGhlIGNvZGUgZm9yIG1vcmUgZGV0YWlscyAoaHRtbDUgb25seSkgKi8K
ICByZXN1bWVTaXplVXJsOiAnL3VwbG9hZGVkL3NpemUvdXJsP2ZpbGU9JyAr
IGZpbGUubmFtZSAvLyB1cGxvYWRlZCBmaWxlIHNpemUgc28gZmFyIG9uIHRo
ZSBzZXJ2ZXIuCiAgcmVzdW1lU2l6ZVJlc3BvbnNlUmVhZGVyOiBmdW5jdGlv
bihkYXRhKSB7cmV0dXJuIGRhdGEuc2l6ZTt9IC8vIHJlYWRzIHRoZSB1cGxv
YWRlZCBmaWxlIHNpemUgZnJvbSByZXN1bWVTaXplVXJsIEdFVCByZXNwb25z
ZQogIHJlc3VtZVNpemU6IGZ1bmN0aW9uKCkge3JldHVybiBwcm9taXNlO30g
Ly8gZnVuY3Rpb24gdGhhdCByZXR1cm5zIGEgcHJvbW1pc2Ugd2hpY2ggd2ls
bCBiZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIC8vIHJlc29sdmVkIHRvIHRoZSB1cGxvYWQgZmlsZSBzaXplIG9uIHRo
ZSBzZXJ2ZXIuCiAgcmVzdW1lQ2h1bmtTaXplOiAxMDAwMCBvciAnMTBLQicg
b3IgJzEwTUInIC8vIHVwbG9hZCBpbiBjaHVua3Mgb2Ygc3BlY2lmaWVkIHNp
emUKICBkaXNhYmxlUHJvZ3Jlc3M6IGJvb2xlYW4gLy8gZGVmYXVsdCBmYWxz
ZSwgZXhwZXJpbWVudGFsIGFzIGhvdGZpeCBmb3IgcG90ZW50aWFsIGxpYnJh
cnkgY29uZmxpY3RzIHdpdGggb3RoZXIgcGx1Z2lucwogIC4uLiBhbmQgYWxs
IG90aGVyIGFuZ3VsYXIgJGh0dHAoKSBvcHRpb25zIGNvdWxkIGJlIHVzZWQg
aGVyZS4KfSkKCi8vIHJldHVybnMgYSBwcm9taXNlCnVwbG9hZC50aGVuKGZ1
bmN0aW9uKHJlc3ApIHsKICAvLyBmaWxlIGlzIHVwbG9hZGVkIHN1Y2Nlc3Nm
dWxseQogIGNvbnNvbGUubG9nKCdmaWxlICcgKyByZXNwLmNvbmZpZy5kYXRh
LmZpbGUubmFtZSArICdpcyB1cGxvYWRlZCBzdWNjZXNzZnVsbHkuIFJlc3Bv
bnNlOiAnICsgcmVzcC5kYXRhKTsKfSwgZnVuY3Rpb24ocmVzcCkgewogIC8v
IGhhbmRsZSBlcnJvcgp9LCBmdW5jdGlvbihldnQpIHsKICAvLyBwcm9ncmVz
cyBub3RpZnkKICBjb25zb2xlLmxvZygncHJvZ3Jlc3M6ICcgKyBwYXJzZUlu
dCgxMDAuMCAqIGV2dC5sb2FkZWQgLyBldnQudG90YWwpICsgJyUgZmlsZSA6
JysgZXZ0LmNvbmZpZy5kYXRhLmZpbGUubmFtZSk7Cn0pOwp1cGxvYWQuY2F0
Y2goZXJyb3JDYWxsYmFjayk7CnVwbG9hZC5maW5hbGx5KGNhbGxiYWNrLCBu
b3RpZnlDYWxsYmFjayk7CgovKiBhY2Nlc3Mgb3IgYXR0YWNoIGV2ZW50IGxp
c3RlbmVycyB0byB0aGUgdW5kZXJseWluZyBYTUxIdHRwUmVxdWVzdCAqLwp1
cGxvYWQueGhyKGZ1bmN0aW9uKHhocil7CiAgeGhyLnVwbG9hZC5hZGRFdmVu
dExpc3RlbmVyKC4uLikKfSk7CgovKiBjYW5jZWwvYWJvcnQgdGhlIHVwbG9h
ZCBpbiBwcm9ncmVzcy4gKi8KdXBsb2FkLmFib3J0KCk7CgovKgphbHRlcm5h
dGl2ZSB3YXkgb2YgdXBsb2FkaW5nLCBzZW5kIHRoZSBmaWxlIGJpbmFyeSB3
aXRoIHRoZSBmaWxlJ3MgY29udGVudC10eXBlLgpDb3VsZCBiZSB1c2VkIHRv
IHVwbG9hZCBmaWxlcyB0byBDb3VjaERCLCBpbWd1ciwgZXRjLi4uIGh0bWw1
IEZpbGVSZWFkZXIgaXMgbmVlZGVkLgpUaGlzIGlzIGVxdWl2YWxlbnQgdG8g
YW5ndWxhciAkaHR0cCgpIGJ1dCBhbGxvdyB5b3UgdG8gbGlzdGVuIHRvIHRo
ZSBwcm9ncmVzcyBldmVudCBmb3IgSFRNTDUgYnJvd3NlcnMuKi8KVXBsb2Fk
Lmh0dHAoewogIHVybDogJy9zZXJ2ZXIvdXBsb2FkL3VybCcsCiAgaGVhZGVy
cyA6IHsKICAgICdDb250ZW50LVR5cGUnOiBmaWxlLnR5cGUKICB9LAogIGRh
dGE6IGZpbGUKfSkKCi8qIFNldCB0aGUgZGVmYXVsdCB2YWx1ZXMgZm9yIG5n
Zi1zZWxlY3QgYW5kIG5nZi1kcm9wIGRpcmVjdGl2ZXMqLwpVcGxvYWQuc2V0
RGVmYXVsdHMoe25nZk1pblNpemU6IDIwMDAwLCBuZ2ZNYXhTaXplOjIwMDAw
MDAwLCAuLi59KQoKLy8gVGhlc2UgdHdvIGRlZmF1bHRzIGNvdWxkIGJlIGRl
Y3JlYXNlZCBpZiB5b3UgZXhwZXJpZW5jZSBvdXQgb2YgbWVtb3J5IGlzc3Vl
cwovLyBvciBjb3VsZCBiZSBpbmNyZWFzZWQgaWYgeW91ciBhcHAgbmVlZHMg
dG8gc2hvdyBtYW55IGltYWdlcyBvbiB0aGUgcGFnZS4KLy8gRWFjaCBpbWFn
ZSBpbiBuZ2Ytc3JjLCBuZ2YtYmFja2dyb3VuZCBvciBuZ2YtdGh1bWJuYWls
IGlzIHN0b3JlZCBhbmQgcmVmZXJlbmNlZCBhcyBhIGJsb2IgdXJsCi8vIGFu
ZCB3aWxsIG9ubHkgYmUgcmVsZWFzZWQgaWYgdGhlIG1heCB2YWx1ZSBvZiB0
aGUgZm9sbG93aW5ncyBpcyByZWFjaGVkLgpVcGxvYWQuZGVmYXVsdHMuYmxv
YlVybHNNYXhNZW1vcnkgPSAyNjg0MzU0NTYgLy8gZGVmYXVsdCBtYXggdG90
YWwgc2l6ZSBvZiBmaWxlcyBzdG9yZWQgaW4gYmxvYiB1cmxzLgpVcGxvYWQu
ZGVmYXVsdHMuYmxvYlVybHNNYXhRdWV1ZVNpemUgPSAyMDAgLy8gZGVmYXVs
dCBtYXggbnVtYmVyIG9mIGJsb2IgdXJscyBzdG9yZWQgYnkgdGhpcyBhcHBs
aWNhdGlvbi4KCi8qIENvbnZlcnQgYSBzaW5nbGUgZmlsZSBvciBhcnJheSBv
ZiBmaWxlcyB0byBhIHNpbmdsZSBvciBhcnJheSBvZgpiYXNlNjQgZGF0YSB1
cmwgcmVwcmVzZW50YXRpb24gb2YgdGhlIGZpbGUocykuCkNvdWxkIGJlIHVz
ZWQgdG8gc2VuZCBmaWxlIGluIGJhc2U2NCBmb3JtYXQgaW5zaWRlIGpzb24g
dG8gdGhlIGRhdGFiYXNlcyAqLwpVcGxvYWQuYmFzZTY0RGF0YVVybChmaWxl
cykudGhlbihmdW5jdGlvbih1cmxzKXsuLi59KTsKCi8qIENvbnZlcnQgdGhl
IGZpbGUgdG8gYmxvYiB1cmwgb2JqZWN0IG9yIGJhc2U2NCBkYXRhIHVybCBi
YXNlZCBvbiBib29sZWFuIGRpc2FsbG93T2JqZWN0VXJsIHZhbHVlICovClVw
bG9hZC5kYXRhVXJsKGZpbGUsIGJvb2xlYW4pLnRoZW4oZnVuY3Rpb24odXJs
KXsuLi59KTsKCi8qIEdldCBpbWFnZSBmaWxlIGRpbWVuc2lvbnMqLwpVcGxv
YWQuaW1hZ2VEaW1lbnNpb25zKGZpbGUpLnRoZW4oZnVuY3Rpb24oZGltZW5z
aW9ucyl7Y29uc29sZS5sb2coZGltZW5zaW9ucy53aWR0aCwgZGltZW5zaW9u
cy5oZWlnaHQpO30pOwoKLyogR2V0IGF1ZGlvL3ZpZGVvIGR1cmF0aW9uKi8K
VXBsb2FkLm1lZGlhRHVyYXRpb24oZmlsZSkudGhlbihmdW5jdGlvbihkdXJh
dGlvbkluU2Vjb25kcyl7Li4ufSk7CgovKiBSZXNpemVzIGFuIGltYWdlLiBS
ZXR1cm5zIGEgcHJvbWlzZSAqLwovLyBvcHRpb25zOiB3aWR0aCwgaGVpZ2h0
LCBxdWFsaXR5LCB0eXBlLCByYXRpbywgY2VudGVyQ3JvcCwgcmVzaXplSWYs
IHJlc3RvcmVFeGlmCi8vcmVzaXplSWYod2lkdGgsIGhlaWdodCkgcmV0dXJu
cyBib29sZWFuLiBTZWUgbmdmLXJlc2l6ZSBkaXJlY3RpdmUgZm9yIG1vcmUg
ZGV0YWlscyBvZiBvcHRpb25zLgpVcGxvYWQucmVzaXplKGZpbGUsIG9wdGlv
bnMpLnRoZW4oZnVuY3Rpb24ocmVzaXplZEZpbGUpey4uLn0pOwoKLyogcmV0
dXJucyBib29sZWFuIHNob3dpbmcgaWYgaW1hZ2UgcmVzaXplIGlzIHN1cHBv
cnRlZCBieSB0aGlzIGJyb3dzZXIqLwpVcGxvYWQuaXNSZXNpemVTdXBwb3J0
ZWQoKQovKiByZXR1cm5zIGJvb2xlYW4gc2hvd2luZyBpZiByZXN1bWFibGUg
dXBsb2FkIGlzIHN1cHBvcnRlZCBieSB0aGlzIGJyb3dzZXIqLwpVcGxvYWQu
aXNSZXN1bWVTdXBwb3J0ZWQoKQoKLyogcmV0dXJucyBhIGZpbGUgd2hpY2gg
d2lsbCBiZSB1cGxvYWRlZCB3aXRoIHRoZSBuZXdOYW1lIGluc3RlYWQgb2Yg
b3JpZ2luYWwgZmlsZSBuYW1lICovClVwbG9hZC5yZW5hbWUoZmlsZSwgbmV3
TmFtZSkKLyogY29udmVydHMgdGhlIG9iamVjdCB0byBhIEJsb2Igb2JqZWN0
IHdpdGggYXBwbGljYXRpb24vanNvbiBjb250ZW50IHR5cGUKZm9yIGpzb2Ig
Ynl0ZSBzdHJlYW1pbmcgc3VwcG9ydCAjMzU5IChodG1sNSBvbmx5KSovClVw
bG9hZC5qc29uQmxvYihvYmopCi8qIGNvbnZlcnRzIHRoZSB2YWx1ZSB0byBq
c29uIHRvIHNlbmQgZGF0YSBhcyBqc29uIHN0cmluZy4gU2FtZSBhcyBhbmd1
bGFyLnRvSnNvbihvYmopICovClVwbG9hZC5qc29uKG9iaikKLyogY29udmVy
dHMgYSBkYXRhVXJsIHRvIEJsb2Igb2JqZWN0LiovCnZhciBibG9iID0gdXBs
b2FkLmRhdGFVcmx0b0Jsb2IoZGF0YXVybCwgbmFtZSk7Ci8qIHJldHVybnMg
dHJ1ZSBpZiB0aGVyZSBpcyBhbiB1cGxvYWQgaW4gcHJvZ3Jlc3MuIENhbiBi
ZSB1c2VkIHRvIHByb21wdCB1c2VyIGJlZm9yZSBjbG9zaW5nIGJyb3dzZXIg
dGFiICovClVwbG9hZC5pc1VwbG9hZEluUHJvZ3Jlc3MoKSBib29sZWFuCi8q
IGRvd25sb2FkcyBhbmQgY29udmVydHMgYSBnaXZlbiB1cmwgdG8gQmxvYiBv
YmplY3Qgd2hpY2ggY291bGQgYmUgYWRkZWQgdG8gZmlsZXMgbW9kZWwgKi8K
VXBsb2FkLnVybFRvQmxvYih1cmwpLnRoZW4oZnVuY3Rpb24oYmxvYikgey4u
Ln0pOwovKiByZXR1cm5zIGJvb2xlYW4gdG8gY2hlY2sgaWYgdGhlIG9iamVj
dCBpcyBmaWxlIGFuZCBjb3VsZCBiZSB1c2VkIGFzIGZpbGUgaW4gVXBsb2Fk
LnVwbG9hZCgpL2h0dHAoKSAqLwpVcGxvYWQuaXNGaWxlKG9iaik7Ci8qIGZp
eGVzIHRoZSBleGlmIG9yaWVudGF0aW9uIG9mIHRoZSBqcGVnIGltYWdlIGZp
bGUqLwpVcGxvYWQuYXBwbHlFeGlmUm90YXRpb24oZmlsZSkudGhlbiguLi4p
CmBgYAoqKm5nLW1vZGVsKioKVGhlIG1vZGVsIHZhbHVlIHdpbGwgYmUgYSBz
aW5nbGUgZmlsZSBpbnN0ZWFkIG9mIGFuIGFycmF5IGlmIGFsbCBvZiB0aGUg
Zm9sbG93aW5ncyBhcmUgdHJ1ZToKICAqIGBuZ2YtbXVsdGlwbGVgIGlzIG5v
dCBzZXQgb3IgaXMgcmVzb2x2ZWQgdG8gZmFsc2UuCiAgKiBgbXVsdGlwbGVg
IGF0dHJpYnV0ZSBpcyBub3Qgc2V0IG9uIHRoZSBlbGVtZW50CiAgKiBgbmdm
LWtlZXBgIGlzIG5vdCBzZXQgb3IgaXMgcmVzb2x2ZWQgdG8gZmFsc2UuCgoq
KnZhbGlkYXRpb24qKgpXaGVuIGFueSBvZiB0aGUgdmFsaWRhdGlvbiBkaXJl
Y3RpdmVzIHNwZWNpZmllZCB0aGUgZm9ybSB2YWxpZGF0aW9uIHdpbGwgdGFr
ZSBwbGFjZSBhbmQKeW91IGNhbiBhY2Nlc3MgdGhlIHZhbHVlIG9mIHRoZSB2
YWxpZGF0aW9uIHVzaW5nIGBteUZvcm0ubXlGaWxlSW5wdXROYW1lLiRlcnJv
ci48dmFsaWRhdGUgZXJyb3IgbmFtZT5gCmZvciBleGFtcGxlIGBmb3JtLmZp
bGUuJGVycm9yLnBhdHRlcm5gLgpJZiBtdWx0aXBsZSBmaWxlIHNlbGVjdGlv
biBpcyBhbGxvd2VkIHlvdSBjYW4gc3BlY2lmeSBgbmdmLW1vZGVsLWludmFs
aWQ9ImludmFsaWRGaWxlcyJgIHRvIGFzc2luZyB0aGUgaW52YWxpZCBmaWxl
cyB0bwphIG1vZGVsIGFuZCBmaW5kIHRoZSBlcnJvciBvZiBlYWNoIGluZGl2
aWR1YWwgZmlsZSB3aXRoIGBmaWxlLiRlcnJvcmAgYW5kIGRlc2NyaXB0aW9u
IG9mIGl0IHdpdGggYGZpbGUuJGVycm9yUGFyYW1gLgpZb3UgY2FuIHVzZSBh
bmd1bGFyIG5nZi1tb2RlbC1vcHRpb25zIHRvIGFsbG93IGludmFsaWQgZmls
ZXMgdG8gYmUgc2V0IHRvIHRoZSBuZy1tb2RlbCAgYG5nZi1tb2RlbC1vcHRp
b25zPSJ7YWxsb3dJbnZhbGlkOiB0cnVlfSJgLgoKKipVcGxvYWQgbXVsdGlw
bGUgZmlsZXMqKjogT25seSBmb3IgSFRNTDUgRm9ybURhdGEgYnJvd3NlcnMg
KG5vdCBJRTgtOSkgeW91IGhhdmUgYW4gYXJyYXkgb2YgZmlsZXMgb3IgbW9y
ZSB0aGFuIG9uZSBmaWxlIGluIHlvdXIgYGRhdGFgIHRvCnNlbmQgdGhlbSBh
bGwgaW4gb25lIHJlcXVlc3QgLiBOb24taHRtbDUgYnJvd3NlcnMgZHVlIHRv
IGZsYXNoIGxpbWl0YXRpb24gd2lsbCB1cGxvYWQgZWFjaCBmaWxlIG9uZSBi
eSBvbmUgaW4gYSBzZXBhcmF0ZSByZXF1ZXN0LgpZb3Ugc2hvdWxkIGl0ZXJh
dGUgb3ZlciB0aGUgZmlsZXMgYW5kIHNlbmQgdGhlbSBvbmUgYnkgb25lIGZv
ciBhIGNyb3NzIGJyb3dzZXIgc29sdXRpb24uCgoqKmRyYWcgYW5kIGRyb3Ag
c3R5bGluZyoqOiBGb3IgZmlsZSBkcmFnIGFuZCBkcm9wLCBgbmdmLWRyYWct
b3Zlci1jbGFzc2AgY291bGQgYmUgdXNlZCB0byBzdHlsZSB0aGUgZHJvcCB6
b25lLgpJdCBjYW4gYmUgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYSBjbGFz
cyBuYW1lIGJhc2VkIG9uIHRoZSAkZXZlbnQuIERlZmF1bHQgaXMgImRyYWdv
dmVyIiBzdHJpbmcuCk9ubHkgaW4gY2hyb21lIEl0IGNvdWxkIGJlIGEganNv
biBvYmplY3QgYHthY2NlcHQ6ICdhJywgJ3JlamVjdCc6ICdyJywgcGF0dGVy
bjogJ2ltYWdlLyonLCBkZWxheTogMTB9YCB0aGF0IHNwZWNpZnkgdGhlCmNs
YXNzIG5hbWUgZm9yIHRoZSBhY2NlcHRlZCBvciByZWplY3RlZCBkcmFnIG92
ZXJzLiBUaGUgYHBhdHRlcm5gIHNwZWNpZmllZCBvciBgbmdmLXBhdHRlcm5g
IHdpbGwgYmUgdXNlZCB0byB2YWxpZGF0ZSB0aGUgZmlsZSdzIGBtaW1lLXR5
cGVgCnNpbmNlIHRoYXQgaXMgdGhlIG9ubHkgcHJvcGVydHkgb2YgdGhlIGZp
bGUgdGhhdCBpcyByZXBvcnRlZCBieSB0aGUgYnJvd3NlciBvbiBkcmFnLiBT
byB5b3UgY2Fubm90IHZhbGlkYXRlCnRoZSBmaWxlIG5hbWUvZXh0ZW5zaW9u
LCBzaXplIG9yIG90aGVyIHZhbGlkYXRpb25zIG9uIGRyYWcuIFRoZXJlIGlz
IGFsc28gc29tZSBsaW1pdGF0aW9uIG9uIHNvbWUgZmlsZSB0eXBlcyB3aGlj
aCBhcmUgbm90IHJlcG9ydGVkIGJ5IENocm9tZS4KYGRlbGF5YCBkZWZhdWx0
IGlzIDEwMCwgYW5kIGlzIHVzZWQgdG8gZml4IGNzczMgdHJhbnNpdGlvbiBp
c3N1ZXMgZnJvbSBkcmFnZ2luZyBvdmVyL291dC9vdmVyIFsjMjc3XShodHRw
czovL2dpdGh1Yi5jb20vZGFuaWFsZmFyaWQvYW5ndWxhci1maWxlLXVwbG9h
ZC9pc3N1ZXMvMjc3KS4KCioqVXBsb2FkLnNldERlZmF1bHRzKCkqKjoKSWYg
eW91IGhhdmUgbWFueSBmaWxlIHNlbGVjdHMgb3IgZHJvcHMgeW91IGNhbiBz
ZXQgdGhlIGRlZmF1bHQgdmFsdWVzIGZvciB0aGUgZGlyZWN0aXZlcyBieSBj
YWxsaW5nIGBVcGxvYWQuc2V0RGVmYXVsdHMob3B0aW9ucylgLiBgb3B0aW9u
c2Agd291bGQgYmUgYSBqc29uIG9iamVjdCB3aXRoIGRpcmVjdGl2ZSBuYW1l
cyBpbiBjYW1lbGNhc2UgYW5kIHRoZWlyIGRlZmF1bHQgdmFsdWVzLgoKKipS
ZXN1bWFibGUgVXBsb2FkczoqKgpUaGUgcGx1Z2luIHN1cHBvcnRzIHJlc3Vt
YWJsZSB1cGxvYWRzIGZvciBsYXJnZSBmaWxlcy4KT24geW91ciBzZXJ2ZXIg
eW91IG5lZWQgdG8ga2VlcCB0cmFjayBvZiB3aGF0IGZpbGVzIGFyZSBiZWlu
ZyB1cGxvYWRlZCBhbmQgaG93IG11Y2ggb2YgdGhlIGZpbGUgaXMgdXBsb2Fk
ZWQuCiAqIGB1cmxgIHVwbG9hZCBlbmRwb2ludCBuZWVkIHRvIHJlYXNzZW1i
bGUgdGhlIGZpbGUgY2h1bmtzIGJ5IGFwcGVuZGluZyB1cGxvYWRpbmcgY29u
dGVudCB0byB0aGUgZW5kIG9mIHRoZSBmaWxlIG9yIGNvcnJlY3QgY2h1bmsg
cG9zaXRpb24gaWYgaXQgYWxyZWFkeSBleGlzdHMuCiAqIGByZXN1bWVTaXpl
VXJsYCBzZXJ2ZXIgZW5kcG9pbnQgdG8gcmV0dXJuIHVwbG9hZGVkIGZpbGUg
c2l6ZSBzbyBmYXIgb24gdGhlIHNlcnZlciB0byBiZSBhYmxlIHRvIHJlc3Vt
ZSB0aGUgdXBsb2FkIGZyb20KIHdoZXJlIGl0IGlzIGVuZGVkLiBJdCBzaG91
bGQgcmV0dXJuIHplcm8gaWYgdGhlIGZpbGUgaGFzIG5vdCBiZWVuIHVwbG9h
ZGVkIHlldC4gPGJyLz5BIEdFVCByZXF1ZXN0IHdpbGwgYmUgbWFkZSB0byB0
aGF0CiB1cmwgZm9yIGVhY2ggdXBsb2FkIHRvIGRldGVybWluZSBpZiBwYXJ0
IG9mIHRoZSBmaWxlIGlzIGFscmVhZHkgdXBsb2FkZWQgb3Igbm90LiBZb3Ug
bmVlZCBhIHVuaXF1ZSB3YXkgb2YgaWRlbnRpZnlpbmcgdGhlIGZpbGUKICBv
biB0aGUgc2VydmVyIHNvIHlvdSBjYW4gcGFzcyB0aGUgZmlsZSBuYW1lIG9y
IGdlbmVyYXRlZCBpZCBmb3IgdGhlIGZpbGUgYXMgYSByZXF1ZXN0IHBhcmFt
ZXRlci48YnIvPgogQnkgZGVmYXVsdCBpdCB3aWxsIGFzc3VtZSB0aGF0IHRo
ZSByZXNwb25zZQogY29udGVudCBpcyBhbiBpbnRlZ2VyIG9yIGEganNvbiBv
YmplY3Qgd2l0aCBgc2l6ZWAgaW50ZWdlciBwcm9wZXJ0eS4gSWYgeW91IHJl
dHVybiBvdGhlciBmb3JtYXRzIGZyb20gdGhlIGVuZHBvaW50IHlvdSBjYW4g
c3BlY2lmeQogYHJlc3VtZVNpemVSZXNwb25zZVJlYWRlcmAgZnVuY3Rpb24g
dG8gcmV0dXJuIHRoZSBzaXplIHZhbHVlIGZyb20gdGhlIHJlc3BvbnNlLiBB
bHRlcm5hdGl2ZWx5IGluc3RlYWQgb2YgYHJlc3VtZVNpemVVcmxgIHlvdSBj
YW4gdXNlCiBgcmVzdW1lU2l6ZWAgZnVuY3Rpb24gd2hpY2ggcmV0dXJucyBh
IHByb21pc2UgdGhhdCByZXNvbHZlcyB0byB0aGUgc2l6ZSBvZiB0aGUgdXBs
b2FkZWQgZmlsZSBzbyBmYXIuCiBNYWtlIHN1cmUgd2hlbiB0aGUgZmlsZSBp
cyBmdWxseSB1cGxvYWRlZCB3aXRob3V0IGFueSBlcnJvci9hYm9ydCB0aGlz
IGVuZHBvaW50IHJldHVybnMgemVybyBmb3IgdGhlIGZpbGUgc2l6ZQogaWYg
eW91IHdhbnQgdG8gbGV0IHRoZSB1c2VyIHRvIHVwbG9hZCB0aGUgc2FtZSBm
aWxlIGFnYWluLiBPciBvcHRpb25hbGx5IHlvdSBjb3VsZCBoYXZlIGEgcmVz
dGFydCBlbmRwb2ludCB0bwogc2V0IHRoYXQgYmFjayB0byB6ZXJvIHRvIGFs
bG93IHJlLXVwbG9hZGluZyB0aGUgc2FtZSBmaWxlLgogKiBgcmVzdW1lQ2h1
bmtTaXplYCBvcHRpb25hbGx5IHlvdSBjYW4gc3BlY2lmeSB0aGlzIHRvIHVw
bG9hZCB0aGUgZmlsZSBpbiBjaHVua3MgdG8gdGhlIHNlcnZlci4gVGhpcyB3
aWxsIGFsbG93IHVwbG9hZGluZyB0byBHQUUgb3Igb3RoZXIgc2VydmVycyB0
aGF0IGhhdmUKIGZpbGUgc2l6ZSBsaW1pdGF0aW9uIGFuZCB0cnlpbmcgdG8g
dXBsb2FkIHRoZSB3aG9sZSByZXF1ZXN0IGJlZm9yZSBwYXNzaW5nIGl0IGZv
ciBpbnRlcm5hbCBwcm9jZXNzaW5nLjxici8+CiBJZiB0aGlzIG9wdGlvbiBp
cyBzZXQgdGhlIHJlcXVlc3RzIHdpbGwgaGF2ZSB0aGUgZm9sbG93aW5nIGV4
dHJhIGZpZWxkczoKIGBfY2h1bmtTaXplYCwgYF9jdXJyZW50Q2h1bmtTaXpl
YCwgYF9jaHVua051bWJlcmAgKHplcm8gc3RhcnRpbmcpLCBhbmQgYF90b3Rh
bFNpemVgIHRvIGhlbHAgdGhlIHNlcnZlciB0byB3cml0ZSB0aGUgdXBsb2Fk
ZWQgY2h1bmsgdG8KIHRoZSBjb3JyZWN0IHBvc2l0aW9uLgogVXBsb2FkaW5n
IGluIGNodW5rcyBjb3VsZCBzbG93IGRvd24gdGhlIG92ZXJhbGwgdXBsb2Fk
IHRpbWUgc3BlY2lhbGx5IGlmIHRoZSBjaHVuayBzaXplIGlzIHRvbyBzbWFs
bC4KIFdoZW4geW91IHByb3ZpZGUgYHJlc3VtZUNodW5rU2l6ZWAgb3B0aW9u
IG9uZSBvZiB0aGUgYHJlc3VtZVNpemVVcmxgIG9yIGByZXN1bWVTaXplYCBp
cyBtYW5kYXRvcnkgdG8ga25vdyBob3cgbXVjaCBvZiB0aGUgZmlsZSBpcyB1
cGxvYWRlZCBzbyBmYXIuCgoKCgojIyA8YSBuYW1lPSJvbGRfYnJvd3NlcnMi
PjwvYT4gT2xkIGJyb3dzZXJzCgpGb3IgYnJvd3NlcnMgbm90IHN1cHBvcnRp
bmcgSFRNTDUgRm9ybURhdGEgKElFOCwgSUU5LCAuLi4pIFtGaWxlQVBJXSho
dHRwczovL2dpdGh1Yi5jb20vbWFpbHJ1L0ZpbGVBUEkpIG1vZHVsZSBpcyB1
c2VkLgoqKk5vdGUqKjogWW91IG5lZWQgRmxhc2ggaW5zdGFsbGVkIG9uIHlv
dXIgYnJvd3NlciBzaW5jZSBgRmlsZUFQSWAgdXNlcyBGbGFzaCB0byB1cGxv
YWQgZmlsZXMuCgpUaGVzZSB0d28gZmlsZXMgICoqYEZpbGVBUEkubWluLmpz
YCwgYEZpbGVBUEkuZmxhc2guc3dmYCoqIHdpbGwgYmUgbG9hZGVkIGJ5IHRo
ZSBtb2R1bGUgb24gZGVtYW5kIChubyBuZWVkIHRvIGJlIGluY2x1ZGVkIGlu
IHRoZSBodG1sKSBpZiB0aGUgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0cyBI
VE1MNSBGb3JtRGF0YSB0byBhdm9pZCBleHRyYSBsb2FkIGZvciBIVE1MNSBi
cm93c2Vycy4KWW91IGNhbiBwbGFjZSB0aGVzZSB0d28gZmlsZXMgYmVzaWRl
IGBhbmd1bGFyLWZpbGUtdXBsb2FkLXNoaW0oLm1pbikuanNgIG9uIHlvdXIg
c2VydmVyIHRvIGJlIGxvYWRlZCBhdXRvbWF0aWNhbGx5IGZyb20gdGhlIHNh
bWUgcGF0aCBvciB5b3UgY2FuIHNwZWNpZnkgdGhlIHBhdGggdG8gdGhvc2Ug
ZmlsZXMgaWYgdGhleSBhcmUgaW4gYSBkaWZmZXJlbnQgcGF0aCB1c2luZyB0
aGUgZm9sbG93aW5nIHNjcmlwdDoKYGBgaHRtbAo8c2NyaXB0PgogICAgLy9v
cHRpb25hbCBuZWVkIHRvIGJlIGxvYWRlZCBiZWZvcmUgYW5ndWxhci1maWxl
LXVwbG9hZC1zaGltKC5taW4pLmpzCiAgICBGaWxlQVBJID0gewogICAgICAg
IC8vb25seSBvbmUgb2YganNQYXRoIG9yIGpzVXJsLgogICAgICAgIGpzUGF0
aDogJy9qcy9GaWxlQVBJLm1pbi5qcy9mb2xkZXIvJywKICAgICAgICBqc1Vy
bDogJ3lvdXJjZG4uY29tL2pzL0ZpbGVBUEkubWluLmpzJywKCiAgICAgICAg
Ly9vbmx5IG9uZSBvZiBzdGF0aWNQYXRoIG9yIGZsYXNoVXJsLgogICAgICAg
IHN0YXRpY1BhdGg6ICcvZmxhc2gvRmlsZUFQSS5mbGFzaC5zd2YvZm9sZGVy
LycsCiAgICAgICAgZmxhc2hVcmw6ICd5b3VyY2RuLmNvbS9qcy9GaWxlQVBJ
LmZsYXNoLnN3ZicsCgogICAgICAgIC8vZm9yY2VMb2FkOiB0cnVlLCBodG1s
NTogZmFsc2UgLy90byBkZWJ1ZyBmbGFzaCBpbiBIVE1MNSBicm93c2Vycwog
ICAgICAgIC8vbm9Db250ZW50VGltZW91dDogMTAwMDAgKHNlZSAjNTI4KQog
ICAgfQo8L3NjcmlwdD4KPHNjcmlwdCBzcmM9ImFuZ3VsYXItZmlsZS11cGxv
YWQtc2hpbS5taW4uanMiPjwvc2NyaXB0Pi4uLgpgYGAKKipPbGQgYnJvd3Nl
cnMga25vd24gaXNzdWVzKio6CiogQmVjYXVzZSBvZiBhIEZsYXNoIGxpbWl0
YXRpb24vYnVnIGlmIHRoZSBzZXJ2ZXIgZG9lc24ndCBzZW5kIGFueSByZXNw
b25zZSBib2R5IHRoZSBzdGF0dXMgY29kZSBvZiB0aGUgcmVzcG9uc2Ugd2ls
bCBiZSBhbHdheXMgYDIwNCAnTm8gQ29udGVudCdgLiBTbyBpZiB5b3UgaGF2
ZSBhY2Nlc3MgdG8geW91ciBzZXJ2ZXIgdXBsb2FkIGNvZGUgYXQgbGVhc3Qg
cmV0dXJuIGEgY2hhcmFjdGVyIGluIHRoZSByZXNwb25zZSBmb3IgdGhlIHN0
YXR1cyBjb2RlIHRvIHdvcmsgcHJvcGVybHkuCiogQ3VzdG9tIGhlYWRlcnMg
d2lsbCBub3Qgd29yayBkdWUgdG8gYSBGbGFzaCBsaW1pdGF0aW9uIFsjMTEx
XShodHRwczovL2dpdGh1Yi5jb20vZGFuaWFsZmFyaWQvbmctZmlsZS11cGxv
YWQvaXNzdWVzLzExMSkgWyMyMjRdKGh0dHBzOi8vZ2l0aHViLmNvbS9kYW5p
YWxmYXJpZC9uZy1maWxlLXVwbG9hZC9pc3N1ZXMvMjI0KSBbIzEyOV0oaHR0
cHM6Ly9naXRodWIuY29tL2RhbmlhbGZhcmlkL25nLWZpbGUtdXBsb2FkL2lz
c3Vlcy8xMjkpCiogRHVlIHRvIEZsYXNoIGJ1ZyBbIzkyXShodHRwczovL2dp
dGh1Yi5jb20vZGFuaWFsZmFyaWQvbmctZmlsZS11cGxvYWQvaXNzdWVzLzky
KSBTZXJ2ZXIgSFRUUCBlcnJvciBjb2RlIDQwMCB3aWxsIGJlIHJldHVybmVk
IGFzIDIwMCB0byB0aGUgY2xpZW50LiBTbyBhdm9pZCByZXR1cm5pbmcgNDAw
IG9uIHlvdXIgc2VydmVyIHNpZGUgZm9yIHVwbG9hZCByZXNwb25zZSBvdGhl
cndpc2UgaXQgd2lsbCBiZSB0cmVhdGVkIGFzIGEgc3VjY2VzcyByZXNwb25z
ZSBvbiB0aGUgY2xpZW50IHNpZGUuCiogSW4gY2FzZSBvZiBhbiBlcnJvciBy
ZXNwb25zZSAoaHR0cCBjb2RlID49IDQwMCkgdGhlIGN1c3RvbSBlcnJvciBt
ZXNzYWdlIHJldHVybmVkIGZyb20gdGhlIHNlcnZlciBtYXkgbm90IGJlIGF2
YWlsYWJsZS4gRm9yIHNvbWUgZXJyb3IgY29kZXMgZmxhc2gganVzdCBwcm92
aWRlIGEgZ2VuZXJpYyBlcnJvciBtZXNzYWdlIGFuZCBpZ25vcmVzIHRoZSBy
ZXNwb25zZSB0ZXh0LiBbIzMxMF0oaHR0cHM6Ly9naXRodWIuY29tL2Rhbmlh
bGZhcmlkL25nLWZpbGUtdXBsb2FkL2lzc3Vlcy8zMTApCiogT2xkZXIgYnJv
d3NlcnMgd29uJ3QgYWxsb3cgYFBVVGAgcmVxdWVzdHMuIFsjMjYxXShodHRw
czovL2dpdGh1Yi5jb20vZGFuaWFsZmFyaWQvbmctZmlsZS11cGxvYWQvaXNz
dWVzLzI2MSkKCiMjIDxhIG5hbWU9InNlcnZlciI+PC9hPlNlcnZlciBTaWRl
CgoqIDxhIG5hbWU9ImphdmEiPjwvYT4qKkphdmEqKgpZb3UgY2FuIGZpbmQg
dGhlIHNhbXBsZSBzZXJ2ZXIgY29kZSBpbiBKYXZhL0dBRSBbaGVyZV0oaHR0
cHM6Ly9naXRodWIuY29tL2RhbmlhbGZhcmlkL25nLWZpbGUtdXBsb2FkL2Js
b2IvbWFzdGVyL2RlbW8vc3JjL21haW4vamF2YS9jb20vZGYvYW5ndWxhcmZp
bGV1cGxvYWQvKQoqIDxhIG5hbWU9InNwcmluZyI+PC9hPioqU3ByaW5nIE1W
QyoqCltXaWtpIFNhbXBsZV0oaHR0cHM6Ly9naXRodWIuY29tL2RhbmlhbGZh
cmlkL25nLWZpbGUtdXBsb2FkL3dpa2kvc3ByaW5nLW12Yy1leGFtcGxlKSBw
cm92aWRlZCBieSBbem91cm90b10oaHR0cHM6Ly9naXRodWIuY29tL3pvdXJv
dG8pCiogPGEgbmFtZT0ibm9kZSI+PC9hPioqTm9kZS5qcyoqCltXaWtpIFNh
bXBsZV0oaHR0cHM6Ly9naXRodWIuY29tL2RhbmlhbGZhcmlkL25nLWZpbGUt
dXBsb2FkL3dpa2kvbm9kZS5qcy1leGFtcGxlKSBwcm92aWRlZCBieSBbY2hv
dnldKGh0dHBzOi8vZ2l0aHViLmNvbS9jaG92eSkuCltBbm90aGVyIHdpa2ld
KGh0dHBzOi8vZ2l0aHViLmNvbS9kYW5pYWxmYXJpZC9uZy1maWxlLXVwbG9h
ZC93aWtpL05vZGUtZXhhbXBsZSkgdXNpbmcgRXhwcmVzcyA0LjAgYW5kIHRo
ZSBNdWx0aXBhcnR5IHByb3ZpZGVkIGJ5IFtKb25hdGhhbiBXaGl0ZV0oaHR0
cHM6Ly9naXRodWIuY29tL0pvbmF0aGFuWldoaXRlKQoqIDxhIG5hbWU9InJh
aWxzIj48L2E+KipSYWlscyoqCiAgKiBbV2lraSBTYW1wbGVdKGh0dHBzOi8v
Z2l0aHViLmNvbS9kYW5pYWxmYXJpZC9uZy1maWxlLXVwbG9hZC93aWtpL1Jh
aWxzLUV4YW1wbGUpIHByb3ZpZGVkIGJ5IFtndXB0YXByaXlhbmtdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9ndXB0YXByaXlhbmspLgogICogW0Jsb2cgcG9zdF0o
aHR0cDovL3d3dy5jb3NoeC5jb20vYmxvZy8yMDE1LzA3LzEwL2ZpbGUtYXR0
YWNobWVudHMtaW4tYW5ndWxhci8pCnByb3ZpZGVkIGJ5IFtDb3NoeCBMYWJz
XShodHRwOi8vd3d3LmNvc2h4LmNvbS8pLgogICogKipSYWlscyBwcm9ncmVz
cyBldmVudCoqOiBJZiB5b3VyIHNlcnZlciBpcyBSYWlscyBhbmQgQXBhY2hl
IHlvdSBtYXkgbmVlZCB0byBtb2RpZnkgc2VydmVyIGNvbmZpZ3VyYXRpb25z
IGZvciB0aGUgc2VydmVyIHRvIHN1cHBvcnQgdXBsb2FkIHByb2dyZXNzLiBT
ZWUgWyMyMDddKGh0dHBzOi8vZ2l0aHViLmNvbS9kYW5pYWxmYXJpZC9uZy1m
aWxlLXVwbG9hZC9pc3N1ZXMvMjA3KQoqIDxhIG5hbWU9InBocCI+PC9hPioq
UEhQKioKW1dpa2kgU2FtcGxlXShodHRwczovL2dpdGh1Yi5jb20vZGFuaWFs
ZmFyaWQvbmctZmlsZS11cGxvYWQvd2lraS9QSFAtRXhhbXBsZSkgYW5kIHJl
bGF0ZWQgaXNzdWUgW29ubHkgb25lIGZpbGUgaW4gJF9GSUxFUyB3aGVuIHVw
bG9hZGluZyBtdWx0aXBsZSBmaWxlc10oaHR0cHM6Ly9naXRodWIuY29tL2Rh
bmlhbGZhcmlkL25nLWZpbGUtdXBsb2FkL2lzc3Vlcy80NzUpCiogPGEgbmFt
ZT0ibmV0Ij48L2E+KiouTmV0KioKICAqIFtEZW1vXShodHRwczovL2dpdGh1
Yi5jb20vc3Rld2FydG04My9hbmd1bGFyLWZpbGV1cGxvYWQtc2FtcGxlKSBz
aG93aW5nIGhvdyB0byB1c2UgbmctZmlsZS11cGxvYWQgd2l0aCBBc3AuTmV0
IFdlYiBBcGkuCiAgKiBTYW1wbGUgY2xpZW50IGFuZCBzZXJ2ZXIgY29kZSBb
ZGVtby9DI10oaHR0cHM6Ly9naXRodWIuY29tL2RhbmlhbGZhcmlkL25nLWZp
bGUtdXBsb2FkL3RyZWUvbWFzdGVyL2RlbW8vQyUyMykgcHJvdmlkZWQgYnkg
W0F0b21TdGFyXShodHRwczovL2dpdGh1Yi5jb20vQXRvbVN0YXIpCgojIyA8
YSBuYW1lPSJjb3JzIj48L2E+Q09SUwpUbyBzdXBwb3J0IENPUlMgdXBsb2Fk
IHlvdXIgc2VydmVyIG5lZWRzIHRvIGFsbG93IGNyb3NzIGRvbWFpbiByZXF1
ZXN0cy4gWW91IGNhbiBhY2hpZXZlIHRoYXQgYnkgaGF2aW5nIGEgZmlsdGVy
IG9yIGludGVyY2VwdG9yIG9uIHlvdXIgdXBsb2FkIGZpbGUgc2VydmVyIHRv
IGFkZCBDT1JTIGhlYWRlcnMgdG8gdGhlIHJlc3BvbnNlIHNpbWlsYXIgdG8g
dGhpczoKKFtzYW1wbGUgamF2YSBjb2RlXShodHRwczovL2dpdGh1Yi5jb20v
ZGFuaWFsZmFyaWQvbmctZmlsZS11cGxvYWQvYmxvYi9tYXN0ZXIvZGVtby9z
cmMvbWFpbi9qYXZhL2NvbS9kZi9hbmd1bGFyZmlsZXVwbG9hZC9DT1JTRmls
dGVyLmphdmEpKQpgYGBqYXZhCmh0dHBSZXNwLnNldEhlYWRlcigiQWNjZXNz
LUNvbnRyb2wtQWxsb3ctTWV0aG9kcyIsICJQT1NULCBQVVQsIE9QVElPTlMi
KTsKaHR0cFJlc3Auc2V0SGVhZGVyKCJBY2Nlc3MtQ29udHJvbC1BbGxvdy1P
cmlnaW4iLCAieW91ci5vdGhlci5zZXJ2ZXIuY29tIik7Cmh0dHBSZXNwLnNl
dEhlYWRlcigiQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVycyIsICJDb250
ZW50LVR5cGUiKSk7CmBgYApGb3Igbm9uLUhUTUw1IElFOC05IGJyb3dzZXJz
IHlvdSB3b3VsZCBhbHNvIG5lZWQgYSBgY3Jvc3Nkb21haW4ueG1sYCBmaWxl
IGF0IHRoZSByb290IG9mIHlvdXIgc2VydmVyIHRvIGFsbG93IENPUlMgZm9y
IGZsYXNoOgo8YSBuYW1lPSJjcm9zc2RvbWFpbiI+PC9hPihbc2FtcGxlIHht
bF0oaHR0cHM6Ly9hbmd1bGFyLWZpbGUtdXBsb2FkLmFwcHNwb3QuY29tL2Ny
b3NzZG9tYWluLnhtbCkpCmBgYHhtbAo8Y3Jvc3MtZG9tYWluLXBvbGljeT4K
ICA8c2l0ZS1jb250cm9sIHBlcm1pdHRlZC1jcm9zcy1kb21haW4tcG9saWNp
ZXM9ImFsbCIvPgogIDxhbGxvdy1hY2Nlc3MtZnJvbSBkb21haW49ImFuZ3Vs
YXItZmlsZS11cGxvYWQuYXBwc3BvdC5jb20iLz4KICA8YWxsb3ctaHR0cC1y
ZXF1ZXN0LWhlYWRlcnMtZnJvbSBkb21haW49IioiIGhlYWRlcnM9IioiIHNl
Y3VyZT0iZmFsc2UiLz4KPC9jcm9zcy1kb21haW4tcG9saWN5PgpgYGAKCiMj
IyMgPGEgbmFtZT0iczMiPjwvYT5BbWF6b24gQVdTIFMzIFVwbG9hZApGb3Ig
QW1hem9uIGF1dGhlbnRpY2F0aW9uIHZlcnNpb24gNCBbc2VlIHRoaXMgY29t
bWVudF0oaHR0cHM6Ly9naXRodWIuY29tL2RhbmlhbGZhcmlkL25nLWZpbGUt
dXBsb2FkL2lzc3Vlcy8xMTI4I2lzc3VlY29tbWVudC0xOTYyMDMyNjgpCgpU
aGUgPGEgaHJlZj0iaHR0cHM6Ly9hbmd1bGFyLWZpbGUtdXBsb2FkLmFwcHNw
b3QuY29tLyIgdGFyZ2V0PSJfYmxhbmsiPmRlbW88L2E+IHBhZ2UgaGFzIGFu
IG9wdGlvbiB0byB1cGxvYWQgdG8gUzMuCkhlcmUgaXMgYSBzYW1wbGUgY29u
ZmlnIG9wdGlvbnM6CmBgYGpzClVwbG9hZC51cGxvYWQoewogICAgdXJsOiAn
aHR0cHM6Ly9hbmd1bGFyLWZpbGUtdXBsb2FkLnMzLmFtYXpvbmF3cy5jb20v
JywgLy9TMyB1cGxvYWQgdXJsIGluY2x1ZGluZyBidWNrZXQgbmFtZQogICAg
bWV0aG9kOiAnUE9TVCcsCiAgICBkYXRhOiB7CiAgICAgICAga2V5OiBmaWxl
Lm5hbWUsIC8vIHRoZSBrZXkgdG8gc3RvcmUgdGhlIGZpbGUgb24gUzMsIGNv
dWxkIGJlIGZpbGUgbmFtZSBvciBjdXN0b21pemVkCiAgICAgICAgQVdTQWNj
ZXNzS2V5SWQ6IDxZT1VSIEFXUyBBY2Nlc3NLZXkgSWQ+LAogICAgICAgIGFj
bDogJ3ByaXZhdGUnLCAvLyBzZXRzIHRoZSBhY2Nlc3MgdG8gdGhlIHVwbG9h
ZGVkIGZpbGUgaW4gdGhlIGJ1Y2tldDogcHJpdmF0ZSwgcHVibGljLXJlYWQs
IC4uLgogICAgICAgIHBvbGljeTogJHNjb3BlLnBvbGljeSwgLy8gYmFzZTY0
LWVuY29kZWQganNvbiBwb2xpY3kgKHNlZSBhcnRpY2xlIGJlbG93KQogICAg
ICAgIHNpZ25hdHVyZTogJHNjb3BlLnNpZ25hdHVyZSwgLy8gYmFzZTY0LWVu
Y29kZWQgc2lnbmF0dXJlIGJhc2VkIG9uIHBvbGljeSBzdHJpbmcgKHNlZSBh
cnRpY2xlIGJlbG93KQogICAgICAgICJDb250ZW50LVR5cGUiOiBmaWxlLnR5
cGUgIT0gJycgPyBmaWxlLnR5cGUgOiAnYXBwbGljYXRpb24vb2N0ZXQtc3Ry
ZWFtJywgLy8gY29udGVudCB0eXBlIG9mIHRoZSBmaWxlIChOb3RFbXB0eSkK
ICAgICAgICBmaWxlbmFtZTogZmlsZS5uYW1lLCAvLyB0aGlzIGlzIG5lZWRl
ZCBmb3IgRmxhc2ggcG9seWZpbGwgSUU4LTkKICAgICAgICBmaWxlOiBmaWxl
CiAgICB9Cn0pOwpgYGAKW1RoaXMgYXJ0aWNsZV0oaHR0cDovL2F3cy5hbWF6
b24uY29tL2FydGljbGVzLzE0MzQvKSBleHBsYWlucyBtb3JlIGFib3V0IHRo
ZXNlIGZpZWxkcyBhbmQgcHJvdmlkZXMgaW5zdHJ1Y3Rpb25zIG9uIGhvdyB0
byBnZW5lcmF0ZSB0aGUgcG9saWN5IGFuZCBzaWduYXR1cmUgdXNpbmcgYSBz
ZXJ2ZXIgc2lkZSB0b29sLgpUaGVzZSB0d28gdmFsdWVzIGFyZSBnZW5lcmF0
ZWQgZnJvbSB0aGUganNvbiBwb2xpY3kgZG9jdW1lbnQgd2hpY2ggbG9va3Mg
bGlrZSB0aGlzOgpgYGBqcwp7CiAgICAiZXhwaXJhdGlvbiI6ICIyMDIwLTAx
LTAxVDAwOjAwOjAwWiIsCiAgICAiY29uZGl0aW9ucyI6IFsKICAgICAgICB7
ImJ1Y2tldCI6ICJhbmd1bGFyLWZpbGUtdXBsb2FkIn0sCiAgICAgICAgWyJz
dGFydHMtd2l0aCIsICIka2V5IiwgIiJdLAogICAgICAgIHsiYWNsIjogInBy
aXZhdGUifSwKICAgICAgICBbInN0YXJ0cy13aXRoIiwgIiRDb250ZW50LVR5
cGUiLCAiIl0sCiAgICAgICAgWyJzdGFydHMtd2l0aCIsICIkZmlsZW5hbWUi
LCAiIl0sCiAgICAgICAgWyJjb250ZW50LWxlbmd0aC1yYW5nZSIsIDAsIDUy
NDI4ODAwMF0KICAgIF0KfQpgYGAKVGhlIFtkZW1vXShodHRwczovL2FuZ3Vs
YXItZmlsZS11cGxvYWQuYXBwc3BvdC5jb20vKSBwYWdlIHByb3ZpZGUgYSBo
ZWxwZXIgdG9vbCB0byBnZW5lcmF0ZSB0aGUgcG9saWN5IGFuZCBzaWduYXR1
cmUgZnJvbSB5b3UgZnJvbSB0aGUganNvbiBwb2xpY3kgZG9jdW1lbnQuICoq
Tm90ZSoqOiBQbGVhc2UgdXNlIGh0dHBzIHByb3RvY29sIHRvIGFjY2VzcyBk
ZW1vIHBhZ2UgaWYgeW91IGFyZSB1c2luZyB0aGlzIHRvb2wgdG8gZ2VuZXJh
dGUgc2lnbmF0dXJlIGFuZCBwb2xpY3kgdG8gcHJvdGVjdCB5b3VyIGF3cyBz
ZWNyZXQga2V5IHdoaWNoIHNob3VsZCBuZXZlciBiZSBzaGFyZWQuCgpNYWtl
IHN1cmUgdGhhdCB5b3UgcHJvdmlkZSB1cGxvYWQgYW5kIENPUlMgcG9zdCB0
byB5b3VyIGJ1Y2tldCBhdCBBV1MgLT4gUzMgLT4gYnVja2V0IG5hbWUgLT4g
UHJvcGVydGllcyAtPiBFZGl0IGJ1Y2tldCBwb2xpY3kgYW5kIEVkaXQgQ09S
UyBDb25maWd1cmF0aW9uLiBTYW1wbGVzIG9mIHRoZXNlIHR3byBmaWxlczoK
YGBganMKewogICJWZXJzaW9uIjogIjIwMTItMTAtMTciLAogICJTdGF0ZW1l
bnQiOiBbCiAgICB7CiAgICAgICJTaWQiOiAiVXBsb2FkRmlsZSIsCiAgICAg
ICJFZmZlY3QiOiAiQWxsb3ciLAogICAgICAiUHJpbmNpcGFsIjogewogICAg
ICAgICJBV1MiOiAiYXJuOmF3czppYW06Onh4eHg6dXNlci94eHgiCiAgICAg
IH0sCiAgICAgICJBY3Rpb24iOiBbCiAgICAgICAgInMzOkdldE9iamVjdCIs
CiAgICAgICAgInMzOlB1dE9iamVjdCIKICAgICAgXSwKICAgICAgIlJlc291
cmNlIjogImFybjphd3M6czM6Ojphbmd1bGFyLWZpbGUtdXBsb2FkLyoiCiAg
ICB9LAogICAgewogICAgICAiU2lkIjogImNyb3NzZG9tYWluQWNjZXNzIiwK
ICAgICAgIkVmZmVjdCI6ICJBbGxvdyIsCiAgICAgICJQcmluY2lwYWwiOiAi
KiIsCiAgICAgICJBY3Rpb24iOiAiczM6R2V0T2JqZWN0IiwKICAgICAgIlJl
c291cmNlIjogImFybjphd3M6czM6Ojphbmd1bGFyLWZpbGUtdXBsb2FkL2Ny
b3NzZG9tYWluLnhtbCIKICAgIH0KICBdCn0KYGBgCmBgYHhtbAo8P3htbCB2
ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJVVEYtOCI/Pgo8Q09SU0NvbmZpZ3Vy
YXRpb24geG1sbnM9Imh0dHA6Ly9zMy5hbWF6b25hd3MuY29tL2RvYy8yMDA2
LTAzLTAxLyI+CiAgICA8Q09SU1J1bGU+CiAgICAgICAgPEFsbG93ZWRPcmln
aW4+aHR0cDovL2FuZ3VsYXItZmlsZS11cGxvYWQuYXBwc3BvdC5jb208L0Fs
bG93ZWRPcmlnaW4+CiAgICAgICAgPEFsbG93ZWRNZXRob2Q+UE9TVDwvQWxs
b3dlZE1ldGhvZD4KICAgICAgICA8QWxsb3dlZE1ldGhvZD5HRVQ8L0FsbG93
ZWRNZXRob2Q+CiAgICAgICAgPEFsbG93ZWRNZXRob2Q+SEVBRDwvQWxsb3dl
ZE1ldGhvZD4KICAgICAgICA8TWF4QWdlU2Vjb25kcz4zMDAwPC9NYXhBZ2VT
ZWNvbmRzPgogICAgICAgIDxBbGxvd2VkSGVhZGVyPio8L0FsbG93ZWRIZWFk
ZXI+CiAgICA8L0NPUlNSdWxlPgo8L0NPUlNDb25maWd1cmF0aW9uPgpgYGAK
CkZvciBJRTgtOSBmbGFzaCBwb2x5ZmlsbCB5b3UgbmVlZCB0byBoYXZlIGEg
PGEgaHJlZj0nI2Nyb3NzZG9tYWluJz5jcm9zc2RvbWFpbi54bWw8L2E+IGZp
bGUgYXQgdGhlIHJvb3Qgb2YgeW91IFMzIGJ1Y2tldC4gTWFrZSBzdXJlIHRo
ZSBjb250ZW50LXR5cGUgb2YgY3Jvc3Nkb21haW4ueG1sIGlzIHRleHQveG1s
IGFuZCB5b3UgcHJvdmlkZSByZWFkIGFjY2VzcyB0byB0aGlzIGZpbGUgaW4g
eW91ciBidWNrZXQgcG9saWN5LgoKCllvdSBjYW4gYWxzbyBoYXZlIGEgbG9v
ayBhdCBbaHR0cHM6Ly9naXRodWIuY29tL251a3VsYi9zMy1hbmd1bGFyLWZp
bGUtdXBsb2FkXShodHRwczovL2dpdGh1Yi5jb20vbnVrdWxiL3MzLWFuZ3Vs
YXItZmlsZS11cGxvYWQpIGZvciBhbm90aGVyIGV4YW1wbGUgd2l0aCBbdGhp
c10oaHR0cHM6Ly9naXRodWIuY29tL2RhbmlhbGZhcmlkL25nLWZpbGUtdXBs
b2FkL2lzc3Vlcy84MTQjaXNzdWVjb21tZW50LTExMjE5ODQyNikgZml4LgoK
CgoK
",,8023,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'macdown',21089071,b'Open source Markdown editor for macOS.',b'Rich Text Format',409,8023,,229,False,b'https://api.github.com/repos/MacDownApp/macdown/forks',"IyBNYWNEb3duCgpbIVtdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vZ2l0aHVi
L3JlbGVhc2UvTWFjRG93bkFwcC9tYWNkb3duLnN2ZyldKGh0dHA6Ly9tYWNk
b3duLnVyYW51c2pyLmNvbS9kb3dubG9hZC9sYXRlc3QvKQohW1RvdGFsIGRv
d25sb2Fkc10oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9naXRodWIvZG93bmxv
YWRzL01hY0Rvd25BcHAvbWFjZG93bi9sYXRlc3QvdG90YWwuc3ZnKQpbIVtC
dWlsZCBTdGF0dXNdKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9NYWNEb3duQXBw
L21hY2Rvd24uc3ZnP2JyYW5jaD1tYXN0ZXIpXShodHRwczovL3RyYXZpcy1j
aS5vcmcvTWFjRG93bkFwcC9tYWNkb3duKQpbIVtTYXkgVGhhbmtzIV0oaHR0
cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS9TYXlUaGFua3MuaW8tJUUyJTk4
JUJDLTFFQUVEQi5zdmcpXShodHRwczovL3NheXRoYW5rcy5pby90by9tYWNk
b3duKQoKCk1hY0Rvd24gaXMgYW4gb3BlbiBzb3VyY2UgTWFya2Rvd24gZWRp
dG9yIGZvciBPUyBYLCByZWxlYXNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2Uu
IFRoZSBhdXRob3Igc3RvbGUgdGhlIGlkZWEgZnJvbSBbQ2hlbiBMdW9dKGh0
dHBzOi8vdHdpdHRlci5jb20vY2hlbmx1b2lzKeKAmXMgW01vdV0oaHR0cDov
L21vdWFwcC5jb20pIHNvIHRoYXQgcGVvcGxlIGNhbiBtYWtlIGNyYXBweSBj
bG9uZXMuCgpWaXNpdCB0aGUgW3Byb2plY3Qgc2l0ZV0oaHR0cDovL21hY2Rv
d24udXJhbnVzanIuY29tLykgZm9yIG1vcmUgaW5mb3JtYXRpb24sIG9yIGRv
d25sb2FkIFtNYWNEb3duLmFwcC56aXBdKGh0dHA6Ly9tYWNkb3duLnVyYW51
c2pyLmNvbS9kb3dubG9hZC9sYXRlc3QvKSBkaXJlY3RseSBmcm9tIHRoZSBb
bGF0ZXN0IHJlbGVhc2VzXShodHRwczovL2dpdGh1Yi5jb20vTWFjRG93bkFw
cC9tYWNkb3duL3JlbGVhc2VzL2xhdGVzdCkgcGFnZS4KCiMjIEluc3RhbGwK
CltEb3dubG9hZF0oaHR0cDovL21hY2Rvd24udXJhbnVzanIuY29tL2Rvd25s
b2FkL2xhdGVzdC8pLCB1bnppcCwgYW5kIGRyYWcgdGhlIGFwcCB0byBBcHBs
aWNhdGlvbnMgZm9sZGVyLiBNYWNEb3duIGlzIGFsc28gYXZhaWxhYmxlIHRo
cm91Z2ggW0hvbWVicmV3IENhc2tdKGh0dHBzOi8vY2Fza3Jvb20uZ2l0aHVi
LmlvLyk6CgogICAgYnJldyBjYXNrIGluc3RhbGwgbWFjZG93bgoKIyMgU2Ny
ZWVuc2hvdAoKIVtzY3JlZW5zaG90XShhc3NldHMvc2NyZWVuc2hvdC5wbmcp
CgojIyBMaWNlbnNlCgpNYWNEb3duIGlzIHJlbGVhc2VkIHVuZGVyIHRoZSB0
ZXJtcyBvZiBNSVQgTGljZW5zZS4gWW91IG1heSBmaW5kIHRoZSBjb250ZW50
IG9mIHRoZSBsaWNlbnNlIFtoZXJlXShodHRwOi8vb3BlbnNvdXJjZS5vcmcv
bGljZW5zZXMvTUlUKSwgb3IgaW5zaWRlIHRoZSBgTElDRU5TRWAgZGlyZWN0
b3J5LgoKWW91IG1heSBmaW5kIGZ1bGwgdGV4dCBvZiBsaWNlbnNlcyBhYm91
dCB0aGlyZC1wYXJ0eSBjb21wb25lbnRzIGluIHRoZSBgTElDRU5TRWAgZGly
ZWN0b3J5LCBvciB0aGUgKipBYm91dCBNYWNEb3duKiogcGFuZWwgaW4gdGhl
IGFwcGxpY2F0aW9uLgoKVGhlIGZvbGxvd2luZyBlZGl0b3IgdGhlbWVzIGFu
ZCBDU1MgZmlsZXMgYXJlIGV4dHJhY3RlZCBmcm9tIFtNb3VdKGh0dHA6Ly9t
b3VhcHAuY29tKSwgY291cnRlc3kgb2YgQ2hlbiBMdW86CgoqIE1vdSBGcmVz
aCBBaXIKKiBNb3UgRnJlc2ggQWlyKwoqIE1vdSBOaWdodAoqIE1vdSBOaWdo
dCsKKiBNb3UgUGFwZXIKKiBNb3UgUGFwZXIrCiogVG9tb3Jyb3cKKiBUb21v
cnJvdyBCbHVlCiogVG9tb3Jyb3crCiogV3JpdGVyCiogV3JpdGVyKwoqIENs
ZWFybmVzcwoqIENsZWFybmVzcyBEYXJrCiogR2l0SHViCiogR2l0SHViMgoK
IyMgRGV2ZWxvcG1lbnQKCiMjIyBSZXF1aXJlbWVudHMKCklmIHlvdSB3aXNo
IHRvIGJ1aWxkIE1hY0Rvd24geW91cnNlbGYsIHlvdSB3aWxsIG5lZWQgdGhl
IGZvbGxvd2luZyBjb21wb25lbnRzL3Rvb2xzOgoKKiBPUyBYIFNESyAoMTAu
OCBvciBsYXRlcikKKiBHaXQKKiBbQnVuZGxlcl0oaHR0cDovL2J1bmRsZXIu
aW8pCgpZb3UgbWF5IGFsc28gbmVlZCB0byBpbnN0YWxsIFhjb2Rl4oCZcyBj
b21tYW5kIGxpbmUgdG9vbHMgd2l0aCB0aGUgZm9sbG93aW5nIGNvbW1hbmQ6
CgogICAgeGNvZGUtc2VsZWN0IC0taW5zdGFsbAoKPiBOb3RlOiBEdWUgdG8g
bXVsdGlwbGUgdXBzdHJlYW0gYnVncywgWGNvZGUgbWF5IGZhaWwgdG8gYnVp
bGQgY2VydGFpbiBkZXBlbmRlbmNpZXMgaWYgeW91IHVzZSB0aGUgQ29jb2FQ
b2RzIHdpdGggdmVyc2lvbnMgbG93ZXIgdGhhbiAwLjM5LiBQbGVhc2UgdXBn
cmFkZSBDb2NvYVBvZHMsIG9yIHVzZSBCdW5kbGVyIHRvIGV4ZWN1dGUgYSBs
b2NhbCB2ZXJzaW9uIChhcyBzdWdnZXN0ZWQgYWJvdmUpIGluc3RlYWQuCgpB
biBhcHByb3ByaWF0ZSBTREsgc2hvdWxkIGJlIGJ1bmRsZWQgd2l0aCBYY29k
ZSA1IG9yIGxhdGVyIHZlcnNpb25zLgoKIyMjIEVudmlyb25tZW50IFNldHVw
CgpBZnRlciBjbG9uaW5nIHRoZSByZXBvc2l0b3J5LCBydW4gdGhlIGZvbGxv
d2luZyBjb21tYW5kcyBpbnNpZGUgdGhlIHJlcG9zaXRvcnkgcm9vdCAoZGly
ZWN0b3J5IGNvbnRhaW5pbmcgdGhpcyBgUkVBRE1FLm1kYCBmaWxlKToKCiAg
ICBnaXQgc3VibW9kdWxlIGluaXQKICAgIGdpdCBzdWJtb2R1bGUgdXBkYXRl
CiAgICBidW5kbGUgaW5zdGFsbAogICAgYnVuZGxlIGV4ZWMgcG9kIGluc3Rh
bGwKCmFuZCBvcGVuIGBNYWNEb3duLnhjd29ya3NwYWNlYCBpbiBYY29kZS4g
VGhlIGZpcnN0IGNvbW1hbmQgaW5pdGlhbGlzZXMgdGhlIGRlcGVuZGVuY3kg
c3VibW9kdWxlKHMpIHVzZWQgaW4gTWFjRG93bjsgdGhlIHNlY29uZCBvbmUg
aW5zdGFsbHMgZGVwZW5kZW5jaWVzIG1hbmFnZWQgYnkgQ29jb2FQb2RzLgoK
UmVmZXIgdG8gdGhlIG9mZmljaWFsIGd1aWRlcyBvZiBHaXQgYW5kIENvY29h
UG9kcyBpZiB5b3UgbmVlZCBtb3JlIGluc3RydWN0aW9ucy4gSWYgeW91IHJ1
biBpbnRvIGJ1aWxkIGlzc3VlcyBsYXRlciBvbiwgdHJ5IHJ1bm5pbmcgdGhl
IGZvbGxvd2luZyBjb21tYW5kcyB0byB1cGRhdGUgZGVwZW5kZW5jaWVzOgoK
ICAgIGdpdCBzdWJtb2R1bGUgdXBkYXRlCiAgICBidW5kbGUgZXhlYyBwb2Qg
aW5zdGFsbAoKIyMjIFRyYW5zbGF0aW9uCgpQbGVhc2UgaGVscCB0cmFuc2xh
dGlvbiBvbiBbVHJhbnNpZmV4XShodHRwczovL3d3dy50cmFuc2lmZXguY29t
L21hY2Rvd24vbWFjZG93bi8pLgoKIVtUcmFuc2lmZXggdHJhbnNsYXRpb24g
cGVyY2VudGFnZV0oaHR0cHM6Ly93d3cudHJhbnNpZmV4LmNvbS9wcm9qZWN0
cy9wL21hY2Rvd24vcmVzb3VyY2UvbWFjZG93bnhsaWZmL2NoYXJ0L2ltYWdl
X3BuZy8pCgojIyBEaXNjdXNzaW9uCgpbIVtHaXR0ZXJdKGh0dHBzOi8vYmFk
Z2VzLmdpdHRlci5pbS9Kb2luJTIwQ2hhdC5zdmcpXShodHRwczovL2dpdHRl
ci5pbS9NYWNEb3duQXBwL21hY2Rvd24pCgpKb2luIG91ciBbR2l0dGVyIGNo
YW5uZWxdKGh0dHBzOi8vZ2l0dGVyLmltL01hY0Rvd25BcHAvbWFjZG93bikg
aWYgeW91IGhhdmUgYW55IHByb2JsZW1zIHdpdGggTWFjRG93bi4gQW55IHN1
Z2dlc3Rpb25zIGFyZSB3ZWxjb21lZCwgdG9vIQoKWW91IGNhbiBhbHNvIFtm
aWxlIGFuIGlzc3VlIGRpcmVjdGx5XShodHRwczovL2dpdGh1Yi5jb20vTWFj
RG93bkFwcC9tYWNkb3duL2lzc3Vlcy9uZXcpIG9uIEdpdEh1YiBpZiB5b3Ug
cHJlZmVyIHNvLiBCdXQgcGxlYXNlLCAqKnNlYXJjaCBmaXJzdCB0byBtYWtl
IHN1cmUgbm8tb25lIGhhcyByZXBvcnRlZCB0aGUgc2FtZSBpc3N1ZSBhbHJl
YWR5KiogYmVmb3JlIG9wZW5pbmcgb25lIHlvdXJzZWxmLiBNYWNEb3duIGRv
ZXMgbm90IHVwZGF0ZSBpbiB5b3VyIGNvbXB1dGVyIGltbWVkaWF0ZWx5IHdo
ZW4gd2UgbWFrZSBjaGFuZ2VzLCBzbyBzb21ldGhpbmcgeW91IGV4cGVyaWVu
Y2VkIG1pZ2h0IGJlIGtub3duLCBvciBldmVuIGZpeGVkIGluIHRoZSBkZXZl
bG9wbWVudCB2ZXJzaW9uLgoKTWFjRG93biBkZXBlbmRzIGEgbG90IG9uIG90
aGVyIG9wZW4gc291cmNlIHByb2plY3RzLCBzdWNoIGFzIFtIb2Vkb3duXSho
dHRwczovL2dpdGh1Yi5jb20vaG9lZG93bi9ob2Vkb3duKSBmb3IgTWFya2Rv
d24tdG8tSFRNTCByZW5kZXJpbmcsIFtQcmlzbV0oaHR0cDovL3ByaXNtanMu
Y29tKSBmb3Igc3ludGF4IGhpZ2hsaWdodGluZyAoaW4gY29kZSBibG9ja3Mp
LCBhbmQgW1BFRyBNYXJrZG93biBIaWdobGlnaHRdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9hbGktcmFudGFrYXJpL3BlZy1tYXJrZG93bi1oaWdobGlnaHQpIGZv
ciBlZGl0b3IgaGlnaGxpZ2h0aW5nLiBJZiB5b3UgZmluZCBwcm9ibGVtcyB3
aGVuIHVzaW5nIHRob3NlIHBhcnRpY3VsYXIgZmVhdHVyZXMsIHlvdSBjYW4g
YWxzbyBjb25zaWRlciByZXBvcnRpbmcgdGhlbSBkaXJlY3RseSB0byB1cHN0
cmVhbSBwcm9qZWN0cyBhcyB3ZWxsIGFzIHRvIE1hY0Rvd27igJlzIGlzc3Vl
IHRyYWNrZXIuIEkgd2lsbCBkbyB3aGF0IEkgY2FuIGlmIHlvdSByZXBvcnQg
aXQgaGVyZSwgYnV0IHNvbWV0aW1lcyBpdCBjYW4gYmUgbW9yZSBiZW5lZmlj
aWFsIHRvIGludGVyYWN0IHdpdGggdGhlbSBkaXJlY3RseS4KCiMjIFRpcHBp
bmcKCklmIHlvdSBmaW5kIE1hY0Rvd24gc3VpdGFibGUgZm9yIHlvdXIgbmVl
ZHMsIHBsZWFzZSBjb25zaWRlciBbZ2l2aW5nIG1lIGEgdGlwIHRocm91Z2gg
UGF5UGFsXShodHRwOi8vbWFjZG93bi51cmFudXNqci5jb20vZmFxLyNkb25h
dGlvbikuIE9yLCBpZiB5b3UgcHJlZmVyIHRvIGJ1eSBtZSBhIGRyaW5rICpw
ZXJzb25hbGx5KiBpbnN0ZWFkLCBqdXN0IFtzZW5kIG1lIGEgdHdlZXRdKGh0
dHBzOi8vdHdpdHRlci5jb20vdXJhbnVzanIpIHdoZW4geW91IHZpc2l0IFtU
YWlwZWksIFRhaXdhbl0oaHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9U
YWlwZWkpLCB3aGVyZSBJIGxpdmUuIEkgbG9vayBmb3J3YXJkIHRvIG1lZXRp
bmcgeW91IQoK
",,8023,"b3N4X2ltYWdlOiB4Y29kZTkuMwpsYW5ndWFnZTogb2JqZWN0aXZlLWMKY2Fj
aGU6Ci0gYnVuZGxlcgotIGNvY29hcG9kcwplbnY6CiAgZ2xvYmFsOgogICAg
LSBMT0NBTElaQVRJT05fT1VUPUJ1aWxkL0xvY2FsaXphdGlvbnMKICAgIC0g
c2VjdXJlOiBWeWFyNVlZUDNuNUNYUVdpR3h4VDJRR1lDY1pnclNFQ21NYjBC
eGVhRzYwS3JLZkR1WElvajYrckwvVnFTSW1JbGFGN3FpVkhraEhRYmE4R2Y5
UUhoa3RVdGZLNFBRTGZFMER6b2dvRlZwOElYYVRWRWc5d0JEbkhBaXFkYWRN
bVkzVnQyYmxuSUlCTGlWNStsRld4dVNZbFgyN1RUbHIxaWVldjlaK2ZNQzA9
Cmluc3RhbGw6Ci0gYnVuZGxlIGluc3RhbGwKLSB0cmF2aXNfd2FpdCBidW5k
bGUgZXhlYyBwb2QgaW5zdGFsbAotIHB5dGhvbiAtbSBwaXAgaW5zdGFsbCAt
LXVzZXIgdHJhbnNpZmV4LWNsaWVudApiZWZvcmVfc2NyaXB0OgotIHNldCAt
byBwaXBlZmFpbApzY3JpcHQ6Ci0geGNvZGVidWlsZCAtd29ya3NwYWNlIE1h
Y0Rvd24ueGN3b3Jrc3BhY2UgLXNjaGVtZSBNYWNEb3duIHRlc3QgfCB4Y3By
ZXR0eQotIHhjb2RlYnVpbGQgLWV4cG9ydExvY2FsaXphdGlvbnMgLWxvY2Fs
aXphdGlvblBhdGggIiRMT0NBTElaQVRJT05fT1VUIgphZnRlcl9zdWNjZXNz
OgotIHB5dGhvbiBUb29scy90cmF2aXNfcHVzaF90cmFuc2lmZXgucHkK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'google-api-nodejs-client',8608480,"b""Google's officially supported Node.js client library for accessing Google APIs. Support for authorization and authentication with OAuth 2.0, API Keys and JWT (Service Tokens) is included. """,b'TypeScript',95,8020,,345,False,b'https://api.github.com/repos/googleapis/google-api-nodejs-client/forks',"PGltZyBzcmM9Imh0dHBzOi8vYXZhdGFyczAuZ2l0aHVidXNlcmNvbnRlbnQu
Y29tL3UvMTM0MjAwND92PTMmcz05NiIgYWx0PSJHb29nbGUgSW5jLiBsb2dv
IiB0aXRsZT0iR29vZ2xlIiBhbGlnbj0icmlnaHQiIGhlaWdodD0iOTYiIHdp
ZHRoPSI5NiIvPgoKIyBHb29nbGUgQVBJcyBOb2RlLmpzIENsaWVudAoKWyFb
UmVsZWFzZSBMZXZlbF1bcmVsZWFzZWxldmVsaW1nXV1bcmVsZWFzZWxldmVs
XQpbIVtucG0gdmVyc2lvbl1bbnBtaW1nXV1bbnBtXQpbIVtDb2RlIENvdmVy
YWdlXVtjb2RlY292aW1nXV1bY29kZWNvdl0KWyFbRG93bmxvYWRzXVtkb3du
bG9hZHNpbWddXVtkb3dubG9hZHNdClshW0RlcGVuZGVuY3kgU3RhdHVzXVtk
YXZpZC1pbWFnZV1dW2RhdmlkLXVybF0KWyFbS25vd24gVnVsbmVyYWJpbGl0
aWVzXVtzbnlrLWltYWdlXV1bc255ay11cmxdCgpbTm9kZS5qc11bbm9kZV0g
Y2xpZW50IGxpYnJhcnkgZm9yIHVzaW5nIEdvb2dsZSBBUElzLiBTdXBwb3J0
IGZvciBhdXRob3JpemF0aW9uIGFuZCBhdXRoZW50aWNhdGlvbiB3aXRoIE9B
dXRoIDIuMCwgQVBJIEtleXMgYW5kIEpXVCB0b2tlbnMgaXMgaW5jbHVkZWQu
CgoqIFtHb29nbGUgQVBJc10oI2dvb2dsZS1hcGlzKQoqIFtHZXR0aW5nIHN0
YXJ0ZWRdKCNnZXR0aW5nLXN0YXJ0ZWQpCiAgKiBbSW5zdGFsbGF0aW9uXSgj
aW5zdGFsbGF0aW9uKQogICogW0ZpcnN0IGV4YW1wbGVdKCNmaXJzdC1leGFt
cGxlKQogICogW1NhbXBsZXNdKCNzYW1wbGVzKQogICogW0FQSSBSZWZlcmVu
Y2VdKCNhcGktcmVmZXJlbmNlKQoqIFtBdXRoZW50aWNhdGlvbiBhbmQgYXV0
aG9yaXphdGlvbl0oI2F1dGhlbnRpY2F0aW9uLWFuZC1hdXRob3JpemF0aW9u
KQogICogW09BdXRoMiBjbGllbnRdKCNvYXV0aDItY2xpZW50KQogICogW1Vz
aW5nIEFQSSBrZXlzXSgjdXNpbmctYXBpLWtleXMpCiAgKiBbU2VydmljZSA8
LS0+IFNlcnZpY2UgYXV0aGVudGljYXRpb25dKCNzZXJ2aWNlLXRvLXNlcnZp
Y2UtYXV0aGVudGljYXRpb24pCiAgKiBbU2V0dGluZyBnbG9iYWwgb3Igc2Vy
dmljZS1sZXZlbCBhdXRoXSgjc2V0dGluZy1nbG9iYWwtb3Itc2VydmljZS1s
ZXZlbC1hdXRoKQoqIFtVc2FnZV0oI3VzYWdlKQogICogW1NwZWNpZnlpbmcg
cmVxdWVzdCBib2R5XSgjc3BlY2lmeWluZy1yZXF1ZXN0LWJvZHkpCiAgKiBb
TWVkaWEgdXBsb2Fkc10oI21lZGlhLXVwbG9hZHMpCiAgKiBbUmVxdWVzdCBP
cHRpb25zXSgjcmVxdWVzdC1vcHRpb25zKQogICogW1VzaW5nIGEgUHJveHld
KCN1c2luZy1hLXByb3h5KQogICogW1N1cHBvcnRlZCBBUElzXSgjZ2V0dGlu
Zy1zdXBwb3J0ZWQtYXBpcykKICAqIFtUeXBlU2NyaXB0XSgjdHlwZXNjcmlw
dCkKKiBbTGljZW5zZV0oI2xpY2Vuc2UpCiogW0NvbnRyaWJ1dGluZ10oI2Nv
bnRyaWJ1dGluZykKKiBbUXVlc3Rpb25zL3Byb2JsZW1zP10oI3F1ZXN0aW9u
c3Byb2JsZW1zKQoKIyMgR29vZ2xlIEFQSXMKVGhlIGZ1bGwgbGlzdCBvZiBz
dXBwb3J0ZWQgQVBJcyBjYW4gYmUgZm91bmQgb24gdGhlIFtHb29nbGUgQVBJ
cyBFeHBsb3Jlcl1bYXBpZXhwbG9yZXJdLiBUaGUgQVBJIGVuZHBvaW50cyBh
cmUgYXV0b21hdGljYWxseSBnZW5lcmF0ZWQsIHNvIGlmIHRoZSBBUEkgaXMg
bm90IGluIHRoZSBsaXN0LCBpdCBpcyBjdXJyZW50bHkgbm90IHN1cHBvcnRl
ZCBieSB0aGlzIEFQSSBjbGllbnQgbGlicmFyeS4KCiMjIyBXb3JraW5nIHdp
dGggR29vZ2xlIENsb3VkIFBsYXRmb3JtIEFQSXM/CklmIHlvdSdyZSB3b3Jr
aW5nIHdpdGggW0dvb2dsZSBDbG91ZCBQbGF0Zm9ybV1bY2xvdWRwbGF0Zm9y
bV0gQVBJcyBzdWNoIGFzIERhdGFzdG9yZSwgQ2xvdWQgU3RvcmFnZSBvciBQ
dWIvU3ViLCBjb25zaWRlciB1c2luZyB0aGUgW2BAZ29vZ2xlLWNsb3VkYF1b
Z29vZ2xlY2xvdWRdIGNsaWVudCBsaWJyYXJpZXM6IHNpbmdsZSBwdXJwb3Nl
IGlkaW9tYXRpYyBOb2RlLmpzIGNsaWVudHMgZm9yIEdvb2dsZSBDbG91ZCBQ
bGF0Zm9ybSBzZXJ2aWNlcy4KCiMjIyBTdXBwb3J0IGFuZCBtYWludGVuYW5j
ZQpUaGVzZSBjbGllbnQgbGlicmFyaWVzIGFyZSBvZmZpY2lhbGx5IHN1cHBv
cnRlZCBieSBHb29nbGUuIEhvd2V2ZXIsIHRoZXNlIGxpYnJhcmllcyBhcmUg
Y29uc2lkZXJlZCBjb21wbGV0ZSBhbmQgYXJlIGluIG1haW50ZW5hbmNlIG1v
ZGUuIFRoaXMgbWVhbnMgdGhhdCB3ZSB3aWxsIGFkZHJlc3MgY3JpdGljYWwg
YnVncyBhbmQgc2VjdXJpdHkgaXNzdWVzIGJ1dCB3aWxsIG5vdCBhZGQgYW55
IG5ldyBmZWF0dXJlcy4gRm9yIEdvb2dsZSBDbG91ZCBQbGF0Zm9ybSBBUElz
LCB3ZSByZWNvbW1lbmQgdXNpbmcgW2dvb2dsZS1jbG91ZC1ub2RlXShodHRw
czovL2dpdGh1Yi5jb20vR29vZ2xlQ2xvdWRQbGF0Zm9ybS9nb29nbGUtY2xv
dWQtbm9kZSkgd2hpY2ggaXMgdW5kZXIgYWN0aXZlIGRldmVsb3BtZW50LgoK
VGhpcyBsaWJyYXJ5IHN1cHBvcnRzIHRoZSBtYWludGVuYW5jZSBMVFMsIGFj
dGl2ZSBMVFMsIGFuZCBjdXJyZW50IHJlbGVhc2Ugb2Ygbm9kZS5qcy4gIFNl
ZSB0aGUgW25vZGUuanMgcmVsZWFzZSBzY2hlZHVsZV0oaHR0cHM6Ly9naXRo
dWIuY29tL25vZGVqcy9SZWxlYXNlKSBmb3IgbW9yZSBpbmZvcm1hdGlvbi4K
CiMjIEdldHRpbmcgc3RhcnRlZAoKIyMjIEluc3RhbGxhdGlvbgpUaGlzIGxp
YnJhcnkgaXMgZGlzdHJpYnV0ZWQgb24gYG5wbWAuIEluIG9yZGVyIHRvIGFk
ZCBpdCBhcyBhIGRlcGVuZGVuY3ksIHJ1biB0aGUgZm9sbG93aW5nIGNvbW1h
bmQ6CgpgYGAgc2gKJCBucG0gaW5zdGFsbCBnb29nbGVhcGlzCmBgYAoKIyMj
IEZpcnN0IGV4YW1wbGUKVGhpcyBpcyBhIHZlcnkgc2ltcGxlIGV4YW1wbGUu
IFRoaXMgY3JlYXRlcyBhIEJsb2dnZXIgY2xpZW50IGFuZCByZXRyaWV2ZXMg
dGhlIGRldGFpbHMgb2YgYSBibG9nIGdpdmVuIHRoZSBibG9nIElkOgoKYGBg
IGpzCmNvbnN0IHtnb29nbGV9ID0gcmVxdWlyZSgnZ29vZ2xlYXBpcycpOwoK
Ly8gRWFjaCBBUEkgbWF5IHN1cHBvcnQgbXVsdGlwbGUgdmVyc2lvbi4gV2l0
aCB0aGlzIHNhbXBsZSwgd2UncmUgZ2V0dGluZwovLyB2MyBvZiB0aGUgYmxv
Z2dlciBBUEksIGFuZCB1c2luZyBhbiBBUEkga2V5IHRvIGF1dGhlbnRpY2F0
ZS4KY29uc3QgYmxvZ2dlciA9IGdvb2dsZS5ibG9nZ2VyKHsKICB2ZXJzaW9u
OiAndjMnLAogIGF1dGg6ICdZT1VSIEFQSSBLRVknCn0pOwoKY29uc3QgcGFy
YW1zID0gewogIGJsb2dJZDogMzIxMzkwMAp9OwoKLy8gZ2V0IHRoZSBibG9n
IGRldGFpbHMKYmxvZ2dlci5ibG9ncy5nZXQocGFyYW1zLCAoZXJyLCByZXMp
ID0+IHsKICBpZiAoZXJyKSB7CiAgICBjb25zb2xlLmVycm9yKGVycik7CiAg
ICB0aHJvdyBlcnI7CiAgfQogIGNvbnNvbGUubG9nKGBUaGUgYmxvZyB1cmwg
aXMgJHtyZXMuZGF0YS51cmx9YCk7Cn0pOwpgYGAKCkluc3RlYWQgb2YgdXNp
bmcgY2FsbGJhY2tzIHlvdSBjYW4gYWxzbyB1c2UgcHJvbWlzZXMhCgpgYGAg
anMKYmxvZ2dlci5ibG9ncy5nZXQocGFyYW1zKQogIC50aGVuKHJlcyA9PiB7
CiAgICBjb25zb2xlLmxvZyhgVGhlIGJsb2cgdXJsIGlzICR7cmVzLmRhdGEu
dXJsfWApOwogIH0pCiAgLmNhdGNoKGVycm9yID0+IHsKICAgIGNvbnNvbGUu
ZXJyb3IoZXJyb3IpOwogIH0pOwpgYGAKCk9yIGFzeW5jL2F3YWl0OgoKYGBg
IGpzCmFzeW5jIGZ1bmN0aW9uIHJ1blNhbXBsZSgpIHsKICBjb25zdCByZXMg
PSBhd2FpdCBibG9nZ2VyLmJsb2dzLmdldChwYXJhbXMpOwogIGNvbnNvbGUu
bG9nKGBUaGUgYmxvZyB1cmwgaXMgJHtyZXMuZGF0YS51cmx9YCk7Cn0KcnVu
U2FtcGxlKCkuY2F0Y2goY29uc29sZS5lcnJvcik7CmBgYAoKIyMjIFNhbXBs
ZXMKVGhlcmUgYXJlIGEgbG90IG9mIFtzYW1wbGVzXShodHRwczovL2dpdGh1
Yi5jb20vZ29vZ2xlYXBpcy9nb29nbGUtYXBpLW5vZGVqcy1jbGllbnQvdHJl
ZS9tYXN0ZXIvc2FtcGxlcykg8J+klyAgSWYgeW91J3JlIHRyeWluZyB0byBm
aWd1cmUgb3V0IGhvdyB0byB1c2UgYW4gQVBJIC4uLiBsb29rIHRoZXJlIGZp
cnN0ISBJZiB0aGVyZSdzIGEgc2FtcGxlIHlvdSBuZWVkIG1pc3NpbmcsIGZl
ZWwgZnJlZSB0byBmaWxlIGFuIFtpc3N1ZV1bYnVnc10uCgojIyMgQVBJIFJl
ZmVyZW5jZQpUaGlzIGxpYnJhcnkgaGFzIGEgZnVsbCBzZXQgb2YgW0FQSSBS
ZWZlcmVuY2UgRG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9nb29nbGVhcGlzLmRl
di9ub2RlanMvZ29vZ2xlYXBpcy9sYXRlc3QpLiBUaGlzIGRvY3VtZW50YXRp
b24gaXMgYXV0by1nZW5lcmF0ZWQsIGFuZCB0aGUgbG9jYXRpb24gbWF5IGNo
YW5nZS4KCiMjIEF1dGhlbnRpY2F0aW9uIGFuZCBhdXRob3JpemF0aW9uClRo
ZXJlIGFyZSB0aHJlZSBwcmltYXJ5IHdheXMgdG8gYXV0aGVudGljYXRlIHRv
IEdvb2dsZSBBUElzLiBTb21lIHNlcnZpY2Ugc3VwcG9ydCBhbGwgYXV0aGVu
dGljYXRpb24gbWV0aG9kcywgb3RoZXIgbWF5IG9ubHkgc3VwcG9ydCBvbmUg
b3IgdHdvLgoKLSAqKk9BdXRoMioqIC0gVGhpcyBhbGxvd3MgeW91IHRvIG1h
a2UgQVBJIGNhbGxzIG9uIGJlaGFsZiBvZiBhIGdpdmVuIHVzZXIuICBJbiB0
aGlzIG1vZGVsLCB0aGUgdXNlciB2aXNpdHMgeW91ciBhcHBsaWNhdGlvbiwg
c2lnbnMgaW4gd2l0aCB0aGVpciBHb29nbGUgYWNjb3VudCwgYW5kIHByb3Zp
ZGVzIHlvdXIgYXBwbGljYXRpb24gd2l0aCBhdXRob3JpemF0aW9uIGFnYWlu
c3QgYSBzZXQgb2Ygc2NvcGVzLiAgW0xlYXJuIG1vcmVdKCNvYXV0aDItY2xp
ZW50KS4KCi0gKipTZXJ2aWNlIDwtLT4gU2VydmljZSoqIC0gSW4gdGhpcyBt
b2RlbCwgeW91ciBhcHBsaWNhdGlvbiB0YWxrcyBkaXJlY3RseSB0byBHb29n
bGUgQVBJcyB1c2luZyBhIFNlcnZpY2UgQWNjb3VudC4gIEl0J3MgdXNlZnVs
IHdoZW4geW91IGhhdmUgYSBiYWNrZW5kIGFwcGxpY2F0aW9uIHRoYXQgd2ls
bCB0YWxrIGRpcmVjdGx5IHRvIEdvb2dsZSBBUElzIGZyb20gdGhlIGJhY2tl
bmQuIFtMZWFybiBtb3JlXSgjc2VydmljZS10by1zZXJ2aWNlLWF1dGhlbnRp
Y2F0aW9uKS4KCi0gKipBUEkgS2V5KiogLSBXaXRoIGFuIEFQSSBrZXksIHlv
dSBjYW4gYWNjZXNzIHlvdXIgc2VydmljZSBmcm9tIGEgY2xpZW50IG9yIHRo
ZSBzZXJ2ZXIuICBUeXBpY2FsbHkgbGVzcyBzZWN1cmUsIHRoaXMgaXMgb25s
eSBhdmFpbGFibGUgb24gYSBzbWFsbCBzdWJzZXQgb2Ygc2VydmljZXMgd2l0
aCBsaW1pdGVkIHNjb3Blcy4gIFtMZWFybiBtb3JlXSgjdXNpbmctYXBpLWtl
eXMpLgoKVG8gbGVhcm4gbW9yZSBhYm91dCB0aGUgYXV0aGVudGljYXRpb24g
Y2xpZW50LCBzZWUgdGhlIFtHb29nbGUgQXV0aCBMaWJyYXJ5XShodHRwczov
L2dpdGh1Yi5jb20vZ29vZ2xlYXBpcy9nb29nbGUtYXV0aC1saWJyYXJ5LW5v
ZGVqcykuCgojIyMgT0F1dGgyIGNsaWVudApUaGlzIGNsaWVudCBjb21lcyB3
aXRoIGFuIFtPQXV0aDJdW29hdXRoXSBjbGllbnQgdGhhdCBhbGxvd3MgeW91
IHRvIHJldHJpZXZlIGFuIGFjY2VzcyB0b2tlbiwgcmVmcmVzaCBpdCwgYW5k
IHJldHJ5IHRoZSByZXF1ZXN0IHNlYW1sZXNzbHkuIFRoZSBiYXNpY3Mgb2Yg
R29vZ2xlJ3MgT0F1dGgyIGltcGxlbWVudGF0aW9uIGlzIGV4cGxhaW5lZCBv
biBbR29vZ2xlIEF1dGhvcml6YXRpb24gYW5kIEF1dGhlbnRpY2F0aW9uIGRv
Y3VtZW50YXRpb25dW2F1dGhkb2NzXS4KCkluIHRoZSBmb2xsb3dpbmcgZXhh
bXBsZXMsIHlvdSBtYXkgbmVlZCBhIGBDTElFTlRfSURgLCBgQ0xJRU5UX1NF
Q1JFVGAgYW5kIGBSRURJUkVDVF9VUkxgLiBZb3UgY2FuIGZpbmQgdGhlc2Ug
cGllY2VzIG9mIGluZm9ybWF0aW9uIGJ5IGdvaW5nIHRvIHRoZSBbRGV2ZWxv
cGVyIENvbnNvbGVdW2RldmNvbnNvbGVdLCBjbGlja2luZyB5b3VyIHByb2pl
Y3QgLS0+IEFQSXMgJiBhdXRoIC0tPiBjcmVkZW50aWFscy4KCkZvciBtb3Jl
IGluZm9ybWF0aW9uIGFib3V0IE9BdXRoMiBhbmQgaG93IGl0IHdvcmtzLCBb
c2VlIGhlcmVdW29hdXRoXS4KCkEgY29tcGxldGUgc2FtcGxlIGFwcGxpY2F0
aW9uIHRoYXQgYXV0aG9yaXplcyBhbmQgYXV0aGVudGljYXRlcyB3aXRoIHRo
ZSBPQXV0aDIgY2xpZW50IGlzIGF2YWlsYWJsZSBhdCBbYHNhbXBsZXMvb2F1
dGgyLmpzYF1bb2F1dGhleGFtcGxlXS4KCiMjIyMgR2VuZXJhdGluZyBhbiBh
dXRoZW50aWNhdGlvbiBVUkwKClRvIGFzayBmb3IgcGVybWlzc2lvbnMgZnJv
bSBhIHVzZXIgdG8gcmV0cmlldmUgYW4gYWNjZXNzIHRva2VuLCB5b3UgcmVk
aXJlY3QgdGhlbSB0byBhIGNvbnNlbnQgcGFnZS4gVG8gY3JlYXRlIGEgY29u
c2VudCBwYWdlIFVSTDoKCmBgYCBqcwpjb25zdCB7Z29vZ2xlfSA9IHJlcXVp
cmUoJ2dvb2dsZWFwaXMnKTsKCmNvbnN0IG9hdXRoMkNsaWVudCA9IG5ldyBn
b29nbGUuYXV0aC5PQXV0aDIoCiAgWU9VUl9DTElFTlRfSUQsCiAgWU9VUl9D
TElFTlRfU0VDUkVULAogIFlPVVJfUkVESVJFQ1RfVVJMCik7CgovLyBnZW5l
cmF0ZSBhIHVybCB0aGF0IGFza3MgcGVybWlzc2lvbnMgZm9yIEJsb2dnZXIg
YW5kIEdvb2dsZSBDYWxlbmRhciBzY29wZXMKY29uc3Qgc2NvcGVzID0gWwog
ICdodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Jsb2dnZXInLAog
ICdodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2NhbGVuZGFyJwpd
OwoKY29uc3QgdXJsID0gb2F1dGgyQ2xpZW50LmdlbmVyYXRlQXV0aFVybCh7
CiAgLy8gJ29ubGluZScgKGRlZmF1bHQpIG9yICdvZmZsaW5lJyAoZ2V0cyBy
ZWZyZXNoX3Rva2VuKQogIGFjY2Vzc190eXBlOiAnb2ZmbGluZScsCgogIC8v
IElmIHlvdSBvbmx5IG5lZWQgb25lIHNjb3BlIHlvdSBjYW4gcGFzcyBpdCBh
cyBhIHN0cmluZwogIHNjb3BlOiBzY29wZXMKfSk7CmBgYAoKKipJTVBPUlRB
TlQgTk9URSoqIC0gVGhlIGByZWZyZXNoX3Rva2VuYCBpcyBvbmx5IHJldHVy
bmVkIG9uIHRoZSBmaXJzdCBhdXRob3JpemF0aW9uLiBNb3JlIGRldGFpbHMg
W2hlcmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9nb29nbGVhcGlzL2dvb2dsZS1h
cGktbm9kZWpzLWNsaWVudC9pc3N1ZXMvNzUwI2lzc3VlY29tbWVudC0zMDQ1
MjE0NTApLgoKIyMjIyBSZXRyaWV2ZSBhdXRob3JpemF0aW9uIGNvZGUKCk9u
Y2UgYSB1c2VyIGhhcyBnaXZlbiBwZXJtaXNzaW9ucyBvbiB0aGUgY29uc2Vu
dCBwYWdlLCBHb29nbGUgd2lsbCByZWRpcmVjdCB0aGUgcGFnZSB0byB0aGUg
cmVkaXJlY3QgVVJMIHlvdSBoYXZlIHByb3ZpZGVkIHdpdGggYSBjb2RlIHF1
ZXJ5IHBhcmFtZXRlci4KCiAgICBHRVQgL29hdXRoY2FsbGJhY2s/Y29kZT17
YXV0aG9yaXphdGlvbkNvZGV9CgojIyMjIFJldHJpZXZlIGFjY2VzcyB0b2tl
bgoKV2l0aCB0aGUgY29kZSByZXR1cm5lZCwgeW91IGNhbiBhc2sgZm9yIGFu
IGFjY2VzcyB0b2tlbiBhcyBzaG93biBiZWxvdzoKCmBgYCBqcwovLyBUaGlz
IHdpbGwgcHJvdmlkZSBhbiBvYmplY3Qgd2l0aCB0aGUgYWNjZXNzX3Rva2Vu
IGFuZCByZWZyZXNoX3Rva2VuLgovLyBTYXZlIHRoZXNlIHNvbWV3aGVyZSBz
YWZlIHNvIHRoZXkgY2FuIGJlIHVzZWQgYXQgYSBsYXRlciB0aW1lLgpjb25z
dCB7dG9rZW5zfSA9IGF3YWl0IG9hdXRoMkNsaWVudC5nZXRUb2tlbihjb2Rl
KQpvYXV0aDJDbGllbnQuc2V0Q3JlZGVudGlhbHModG9rZW5zKTsKYGBgCgpX
aXRoIHRoZSBjcmVkZW50aWFscyBzZXQgb24geW91ciBPQXV0aDIgY2xpZW50
IC0geW91J3JlIHJlYWR5IHRvIGdvIQoKIyMjIyBIYW5kbGluZyByZWZyZXNo
IHRva2VucwpBY2Nlc3MgdG9rZW5zIGV4cGlyZS4gVGhpcyBsaWJyYXJ5IHdp
bGwgYXV0b21hdGljYWxseSB1c2UgYSByZWZyZXNoIHRva2VuIHRvIG9idGFp
biBhIG5ldyBhY2Nlc3MgdG9rZW4gaWYgaXQgaXMgYWJvdXQgdG8gZXhwaXJl
LiBBbiBlYXN5IHdheSB0byBtYWtlIHN1cmUgeW91IGFsd2F5cyBzdG9yZSB0
aGUgbW9zdCByZWNlbnQgdG9rZW5zIGlzIHRvIHVzZSB0aGUgYHRva2Vuc2Ag
ZXZlbnQ6CgpgYGBqcwpvYXV0aDJDbGllbnQub24oJ3Rva2VucycsICh0b2tl
bnMpID0+IHsKICBpZiAodG9rZW5zLnJlZnJlc2hfdG9rZW4pIHsKICAgIC8v
IHN0b3JlIHRoZSByZWZyZXNoX3Rva2VuIGluIG15IGRhdGFiYXNlIQogICAg
Y29uc29sZS5sb2codG9rZW5zLnJlZnJlc2hfdG9rZW4pOwogIH0KICBjb25z
b2xlLmxvZyh0b2tlbnMuYWNjZXNzX3Rva2VuKTsKfSk7CmBgYAoKVG8gc2V0
IHRoZSBgcmVmcmVzaF90b2tlbmAgYXQgYSBsYXRlciB0aW1lLCB5b3UgY2Fu
IHVzZSB0aGUgYHNldENyZWRlbnRpYWxzYCBtZXRob2Q6CgpgYGBqcwpvYXV0
aDJDbGllbnQuc2V0Q3JlZGVudGlhbHMoewogIHJlZnJlc2hfdG9rZW46IGBT
VE9SRURfUkVGUkVTSF9UT0tFTmAKfSk7CmBgYAoKT25jZSB0aGUgY2xpZW50
IGhhcyBhIHJlZnJlc2ggdG9rZW4sIGFjY2VzcyB0b2tlbnMgd2lsbCBiZSBh
Y3F1aXJlZCBhbmQgcmVmcmVzaGVkIGF1dG9tYXRpY2FsbHkgaW4gdGhlIG5l
eHQgY2FsbCB0byB0aGUgQVBJLgoKIyMjIFVzaW5nIEFQSSBrZXlzCllvdSBt
YXkgbmVlZCB0byBzZW5kIGFuIEFQSSBrZXkgd2l0aCB0aGUgcmVxdWVzdCB5
b3UgYXJlIGdvaW5nIHRvIG1ha2UuIFRoZSBmb2xsb3dpbmcgdXNlcyBhbiBB
UEkga2V5IHRvIG1ha2UgYSByZXF1ZXN0IHRvIHRoZSBCbG9nZ2VyIEFQSSBz
ZXJ2aWNlIHRvIHJldHJpZXZlIGEgYmxvZydzIG5hbWUsIHVybCwgYW5kIGl0
cyB0b3RhbCBhbW91bnQgb2YgcG9zdHM6CgpgYGAganMKY29uc3Qge2dvb2ds
ZX0gPSByZXF1aXJlKCdnb29nbGVhcGlzJyk7CmNvbnN0IGJsb2dnZXIgPSBn
b29nbGUuYmxvZ2dlcl92Myh7CiAgdmVyc2lvbjogJ3YzJywKICBhdXRoOiAn
WU9VUl9BUElfS0VZJyAvLyBzcGVjaWZ5IHlvdXIgQVBJIGtleSBoZXJlCn0p
OwoKY29uc3QgcGFyYW1zID0gewogIGJsb2dJZDogMzIxMzkwMAp9OwoKYXN5
bmMgZnVuY3Rpb24gbWFpbihwYXJhbXMpIHsKICBjb25zdCByZXMgPSBhd2Fp
dCBibG9nZ2VyLmJsb2dzLmdldCh7YmxvZ0lkOiBwYXJhbXMuYmxvZ0lkfSk7
CiAgY29uc29sZS5sb2coYCR7cmVzLmRhdGEubmFtZX0gaGFzICR7cmVzLmRh
dGEucG9zdHMudG90YWxJdGVtc30gcG9zdHMhIFRoZSBibG9nIHVybCBpcyAk
e3Jlcy5kYXRhLnVybH1gKQp9OwoKbWFpbigpLmNhdGNoKGNvbnNvbGUuZXJy
b3IpOwpgYGAKClRvIGxlYXJuIG1vcmUgYWJvdXQgQVBJIGtleXMsIHBsZWFz
ZSBzZWUgdGhlIFtkb2N1bWVudGF0aW9uXVt1c2luZ2tleXNdLgoKIyMjIyBT
ZXJ2aWNlIHRvIFNlcnZpY2UgQXV0aGVudGljYXRpb24KClJhdGhlciB0aGFu
IG1hbnVhbGx5IGNyZWF0aW5nIGFuIE9BdXRoMiBjbGllbnQsIEpXVCBjbGll
bnQsIG9yIENvbXB1dGUgY2xpZW50LCB0aGUgYXV0aCBsaWJyYXJ5IGNhbiBj
cmVhdGUgdGhlIGNvcnJlY3QgY3JlZGVudGlhbCB0eXBlIGZvciB5b3UsIGRl
cGVuZGluZyB1cG9uIHRoZSBlbnZpcm9ubWVudCB5b3VyIGNvZGUgaXMgcnVu
bmluZyB1bmRlci4KCkZvciBleGFtcGxlLCBhIEpXVCBhdXRoIGNsaWVudCB3
aWxsIGJlIGNyZWF0ZWQgd2hlbiB5b3VyIGNvZGUgaXMgcnVubmluZyBvbiB5
b3VyIGxvY2FsIGRldmVsb3BlciBtYWNoaW5lLCBhbmQgYSBDb21wdXRlIGNs
aWVudCB3aWxsIGJlIGNyZWF0ZWQgd2hlbiB0aGUgc2FtZSBjb2RlIGlzIHJ1
bm5pbmcgb24gYSBjb25maWd1cmVkIGluc3RhbmNlIG9mIEdvb2dsZSBDb21w
dXRlIEVuZ2luZS4KClRoZSBjb2RlIGJlbG93IHNob3dzIGhvdyB0byByZXRy
aWV2ZSBhIGRlZmF1bHQgY3JlZGVudGlhbCB0eXBlLCBkZXBlbmRpbmcgdXBv
biB0aGUgcnVudGltZSBlbnZpcm9ubWVudC4gVGhlIGNyZWF0ZVNjb3BlZFJl
cXVpcmVkIG11c3QgYmUgY2FsbGVkIHRvIGRldGVybWluZSB3aGVuIHlvdSBu
ZWVkIHRvIHBhc3MgaW4gdGhlIHNjb3BlcyBtYW51YWxseSwgYW5kIHdoZW4g
dGhleSBoYXZlIGJlZW4gc2V0IGZvciB5b3UgYXV0b21hdGljYWxseSBiYXNl
ZCBvbiB0aGUgY29uZmlndXJlZCBydW50aW1lIGVudmlyb25tZW50LgoKYGBg
anMKY29uc3Qge2dvb2dsZX0gPSByZXF1aXJlKCdnb29nbGVhcGlzJyk7CmNv
bnN0IGNvbXB1dGUgPSBnb29nbGUuY29tcHV0ZSgndjEnKTsKCmFzeW5jIGZ1
bmN0aW9uIG1haW4gKCkgewogIC8vIFRoaXMgbWV0aG9kIGxvb2tzIGZvciB0
aGUgR0NMT1VEX1BST0pFQ1QgYW5kIEdPT0dMRV9BUFBMSUNBVElPTl9DUkVE
RU5USUFMUwogIC8vIGVudmlyb25tZW50IHZhcmlhYmxlcy4KICBjb25zdCBh
dXRoID0gbmV3IGdvb2dsZS5hdXRoLkdvb2dsZUF1dGgoewogICAgLy8gU2Nv
cGVzIGNhbiBiZSBzcGVjaWZpZWQgZWl0aGVyIGFzIGFuIGFycmF5IG9yIGFz
IGEgc2luZ2xlLCBzcGFjZS1kZWxpbWl0ZWQgc3RyaW5nLgogICAgc2NvcGVz
OiBbJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY29tcHV0ZSdd
CiAgfSk7CiAgY29uc3QgYXV0aENsaWVudCA9IGF3YWl0IGF1dGguZ2V0Q2xp
ZW50KCk7CgogIC8vIG9idGFpbiB0aGUgY3VycmVudCBwcm9qZWN0IElkCiAg
Y29uc3QgcHJvamVjdCA9IGF3YWl0IGF1dGguZ2V0UHJvamVjdElkKCk7Cgog
IC8vIEZldGNoIHRoZSBsaXN0IG9mIEdDRSB6b25lcyB3aXRoaW4gYSBwcm9q
ZWN0LgogIGNvbnN0IHJlcyA9IGF3YWl0IGNvbXB1dGUuem9uZXMubGlzdCh7
IHByb2plY3QsIGF1dGg6IGF1dGhDbGllbnQgfSk7CiAgY29uc29sZS5sb2co
cmVzLmRhdGEpOwp9CgptYWluKCkuY2F0Y2goY29uc29sZS5lcnJvcik7CmBg
YAoKIyMjIFNldHRpbmcgZ2xvYmFsIG9yIHNlcnZpY2UtbGV2ZWwgYXV0aAoK
WW91IGNhbiBzZXQgdGhlIGBhdXRoYCBhcyBhIGdsb2JhbCBvciBzZXJ2aWNl
LWxldmVsIG9wdGlvbiBzbyB5b3UgZG9uJ3QgbmVlZCB0byBzcGVjaWZ5IGl0
IGV2ZXJ5IHJlcXVlc3QuIEZvciBleGFtcGxlLCB5b3UgY2FuIHNldCBgYXV0
aGAgYXMgYSBnbG9iYWwgb3B0aW9uOgoKYGBgIGpzCmNvbnN0IHtnb29nbGV9
ID0gcmVxdWlyZSgnZ29vZ2xlYXBpcycpOwoKY29uc3Qgb2F1dGgyQ2xpZW50
ID0gbmV3IGdvb2dsZS5hdXRoLk9BdXRoMigKICBZT1VSX0NMSUVOVF9JRCwK
ICBZT1VSX0NMSUVOVF9TRUNSRVQsCiAgWU9VUl9SRURJUkVDVF9VUkwKKTsK
Ci8vIHNldCBhdXRoIGFzIGEgZ2xvYmFsIGRlZmF1bHQKZ29vZ2xlLm9wdGlv
bnMoewogIGF1dGg6IG9hdXRoMkNsaWVudAp9KTsKYGBgCgpJbnN0ZWFkIG9m
IHNldHRpbmcgdGhlIG9wdGlvbiBnbG9iYWxseSwgeW91IGNhbiBhbHNvIHNl
dCB0aGUgYXV0aGVudGljYXRpb24gY2xpZW50IGF0IHRoZSBzZXJ2aWNlLWxl
dmVsOgoKYGBgIGpzCmNvbnN0IHtnb29nbGV9ID0gcmVxdWlyZSgnZ29vZ2xl
YXBpcycpOwpjb25zdCBvYXV0aDJDbGllbnQgPSBuZXcgZ29vZ2xlLmF1dGgu
T0F1dGgyKAogIFlPVVJfQ0xJRU5UX0lELAogIFlPVVJfQ0xJRU5UX1NFQ1JF
VCwKICBZT1VSX1JFRElSRUNUX1VSTAopOwoKY29uc3QgZHJpdmUgPSBnb29n
bGUuZHJpdmUoewogIHZlcnNpb246ICd2MicsCiAgYXV0aDogb2F1dGgyQ2xp
ZW50Cn0pOwpgYGAKClNlZSB0aGUgW09wdGlvbnMgc2VjdGlvbl0oI3JlcXVl
c3Qtb3B0aW9ucykgZm9yIG1vcmUgaW5mb3JtYXRpb24uCgojIyBVc2FnZQoK
IyMjIFNwZWNpZnlpbmcgcmVxdWVzdCBib2R5CgpUaGUgYm9keSBvZiB0aGUg
cmVxdWVzdCBpcyBzcGVjaWZpZWQgaW4gdGhlIGByZXF1ZXN0Qm9keWAgcGFy
YW1ldGVyIG9iamVjdCBvZiB0aGUgcmVxdWVzdC4gVGhlIGJvZHkgaXMgc3Bl
Y2lmaWVkIGFzIGEgSmF2YVNjcmlwdCBvYmplY3Qgd2l0aCBrZXkvdmFsdWUg
cGFpcnMuIEZvciBleGFtcGxlLCB0aGlzIHNhbXBsZSBjcmVhdGVzIGEgd2F0
Y2hlciB0aGF0IHBvc3RzIG5vdGlmaWNhdGlvbnMgdG8gYSBHb29nbGUgQ2xv
dWQgUHViL1N1YiB0b3BpYyB3aGVuIGVtYWlscyBhcmUgc2VudCB0byBhIGdt
YWlsIGFjY291bnQ6CgpgYGBqcwpjb25zdCByZXMgPSBhd2FpdCBnbWFpbC51
c2Vycy53YXRjaCh7CiAgdXNlcklkOiAnbWUnLAogIHJlcXVlc3RCb2R5OiB7
CiAgICAvLyBSZXBsYWNlIHdpdGggYHByb2plY3RzLyR7UFJPSkVDVF9JRH0v
dG9waWNzLyR7VE9QSUNfTkFNRX1gCiAgICB0b3BpY05hbWU6IGBwcm9qZWN0
cy9lbC1nYXRvL3RvcGljcy9nbWFpbGAKICB9Cn0pOwpjb25zb2xlLmxvZyhy
ZXMuZGF0YSk7CmBgYAoKIyMjIE1lZGlhIHVwbG9hZHMKVGhpcyBjbGllbnQg
c3VwcG9ydHMgbXVsdGlwYXJ0IG1lZGlhIHVwbG9hZHMuIFRoZSByZXNvdXJj
ZSBwYXJhbWV0ZXJzIGFyZSBzcGVjaWZpZWQgaW4gdGhlIGByZXF1ZXN0Qm9k
eWAgcGFyYW1ldGVyIG9iamVjdCwgYW5kIHRoZSBtZWRpYSBpdHNlbGYgaXMg
c3BlY2lmaWVkIGluIHRoZSBgbWVkaWEuYm9keWAgcGFyYW1ldGVyIHdpdGgg
bWltZS10eXBlIHNwZWNpZmllZCBpbiBgbWVkaWEubWltZVR5cGVgLgoKVGhp
cyBleGFtcGxlIHVwbG9hZHMgYSBwbGFpbiB0ZXh0IGZpbGUgdG8gR29vZ2xl
IERyaXZlIHdpdGggdGhlIHRpdGxlICJUZXN0IiBhbmQgY29udGVudHMgIkhl
bGxvIFdvcmxkIi4KCmBgYCBqcwpjb25zdCBkcml2ZSA9IGdvb2dsZS5kcml2
ZSh7CiAgdmVyc2lvbjogJ3YzJywKICBhdXRoOiBvYXV0aDJDbGllbnQKfSk7
Cgpjb25zdCByZXMgPSBhd2FpdCBkcml2ZS5maWxlcy5jcmVhdGUoewogIHJl
cXVlc3RCb2R5OiB7CiAgICBuYW1lOiAnVGVzdCcsCiAgICBtaW1lVHlwZTog
J3RleHQvcGxhaW4nCiAgfSwKICBtZWRpYTogewogICAgbWltZVR5cGU6ICd0
ZXh0L3BsYWluJywKICAgIGJvZHk6ICdIZWxsbyBXb3JsZCcKICB9Cn0pOwpg
YGAKCllvdSBjYW4gYWxzbyB1cGxvYWQgbWVkaWEgYnkgc3BlY2lmeWluZyBg
bWVkaWEuYm9keWAgYXMgYSBbUmVhZGFibGUgc3RyZWFtXVtzdHJlYW1dLiBU
aGlzIGNhbiBhbGxvdyB5b3UgdG8gdXBsb2FkIHZlcnkgbGFyZ2UgZmlsZXMg
dGhhdCBjYW5ub3QgZml0IGludG8gbWVtb3J5LgoKYGBganMKY29uc3QgZnMg
PSByZXF1aXJlKCdmcycpOwoKY29uc3QgZHJpdmUgPSBnb29nbGUuZHJpdmUo
ewogIHZlcnNpb246ICd2MycsCiAgYXV0aDogb2F1dGgyQ2xpZW50Cn0pOwoK
YXN5bmMgZnVuY3Rpb24gbWFpbigpIHsKICBjb25zdCByZXMgPSBhd2FpdCBk
cml2ZS5maWxlcy5jcmVhdGUoewogICAgcmVxdWVzdEJvZHk6IHsKICAgICAg
bmFtZTogJ3Rlc3RpbWFnZS5wbmcnLAogICAgICBtaW1lVHlwZTogJ2ltYWdl
L3BuZycKICAgIH0sCiAgICBtZWRpYTogewogICAgICBtaW1lVHlwZTogJ2lt
YWdlL3BuZycsCiAgICAgIGJvZHk6IGZzLmNyZWF0ZVJlYWRTdHJlYW0oJ2F3
ZXNvbWUucG5nJykKICAgIH0KICB9KTsKICBjb25zb2xlLmxvZyhyZXMuZGF0
YSk7Cn0KCm1haW4oKS5jYXRjaChjb25zb2xlLmVycm9yKTsKYGBgCgpGb3Ig
bW9yZSBleGFtcGxlcyBvZiBjcmVhdGlvbiBhbmQgbW9kaWZpY2F0aW9uIHJl
cXVlc3RzIHdpdGggbWVkaWEgYXR0YWNobWVudHMsIHRha2UgYSBsb29rIGF0
IHRoZSBgc2FtcGxlcy9kcml2ZS91cGxvYWQuanNgIHNhbXBsZS4KCiMjIyBS
ZXF1ZXN0IE9wdGlvbnMKRm9yIG1vcmUgZmluZS10dW5lZCBjb250cm9sIG92
ZXIgaG93IHlvdXIgQVBJIGNhbGxzIGFyZSBtYWRlLCB3ZSBwcm92aWRlIHlv
dSB3aXRoIHRoZSBhYmlsaXR5IHRvIHNwZWNpZnkgYWRkaXRpb25hbCBvcHRp
b25zIHRoYXQgY2FuIGJlIGFwcGxpZWQgZGlyZWN0bHkgdG8gdGhlIFsnZ2F4
aW9zJ11bZ2F4aW9zXSBvYmplY3QgdXNlZCBpbiB0aGlzIGxpYnJhcnkgdG8g
bWFrZSBuZXR3b3JrIGNhbGxzIHRvIHRoZSBBUEkuCgpZb3UgbWF5IHNwZWNp
ZnkgYWRkaXRpb25hbCBvcHRpb25zIGVpdGhlciBpbiB0aGUgZ2xvYmFsIGBn
b29nbGVgIG9iamVjdCBvciBvbiBhIHNlcnZpY2UgY2xpZW50IGJhc2lzLiAg
VGhlIG9wdGlvbnMgeW91IHNwZWNpZnkgYXJlIGF0dGFjaGVkIHRvIHRoZSBg
Z2F4aW9zYCBvYmplY3Qgc28gd2hhdGV2ZXIgYGdheGlvc2Agc3VwcG9ydHMs
IHRoaXMgbGlicmFyeSBzdXBwb3J0cy4gWW91IG1heSBhbHNvIHNwZWNpZnkg
Z2xvYmFsIG9yIHBlci1zZXJ2aWNlIHJlcXVlc3QgcGFyYW1ldGVycyB0aGF0
IHdpbGwgYmUgYXR0YWNoZWQgdG8gYWxsIEFQSSBjYWxscyB5b3UgbWFrZS4K
CkEgZnVsbCBsaXN0IG9mIHN1cHBvcnRlZCBvcHRpb25zIGNhbiBiZSBbZm91
bmQgaGVyZV1bcmVxdWVzdG9wdHNdLgoKIyMjIyBHbG9iYWwgb3B0aW9ucwpZ
b3UgY2FuIGNob29zZSBkZWZhdWx0IG9wdGlvbnMgdGhhdCB3aWxsIGJlIHNl
bnQgd2l0aCBlYWNoIHJlcXVlc3QuIFRoZXNlIG9wdGlvbnMgd2lsbCBiZSB1
c2VkIGZvciBldmVyeSBzZXJ2aWNlIGluc3RhbnRpYXRlZCBieSB0aGUgZ29v
Z2xlIGNsaWVudC4gSW4gdGhpcyBleGFtcGxlLCB0aGUgYHRpbWVvdXRgIHBy
b3BlcnR5IG9mIGBHYXhpb3NPcHRpb25zYCB3aWxsIGJlIHNldCBmb3IgZXZl
cnkgcmVxdWVzdDoKCmBgYGpzCmNvbnN0IHtnb29nbGV9ID0gcmVxdWlyZSgn
Z29vZ2xlYXBpcycpOwpnb29nbGUub3B0aW9ucyh7CiAgLy8gQWxsIHJlcXVl
c3RzIG1hZGUgd2l0aCB0aGlzIG9iamVjdCB3aWxsIHVzZSB0aGVzZSBzZXR0
aW5ncyB1bmxlc3Mgb3ZlcnJpZGRlbi4KICB0aW1lb3V0OiAxMDAwLAogIGF1
dGg6IGF1dGgKfSk7CmBgYAoKWW91IGNhbiBhbHNvIG1vZGlmeSB0aGUgcGFy
YW1ldGVycyBzZW50IHdpdGggZWFjaCByZXF1ZXN0OgoKYGBganMKY29uc3Qg
e2dvb2dsZX0gPSByZXF1aXJlKCdnb29nbGVhcGlzJyk7Cmdvb2dsZS5vcHRp
b25zKHsKICAvLyBBbGwgcmVxdWVzdHMgZnJvbSBhbGwgc2VydmljZXMgd2ls
bCBjb250YWluIHRoZSBhYm92ZSBxdWVyeSBwYXJhbWV0ZXIKICAvLyB1bmxl
c3Mgb3ZlcnJpZGRlbiBlaXRoZXIgaW4gYSBzZXJ2aWNlIGNsaWVudCBvciBp
biBpbmRpdmlkdWFsIEFQSSBjYWxscy4KICBwYXJhbXM6IHsKICAgIHF1b3Rh
VXNlcjogJ3VzZXIxMjNAZXhhbXBsZS5jb20nCiAgfQp9KTsKYGBgCgojIyMj
IFNlcnZpY2UtY2xpZW50IG9wdGlvbnMKCllvdSBjYW4gYWxzbyBzcGVjaWZ5
IG9wdGlvbnMgd2hlbiBjcmVhdGluZyBhIHNlcnZpY2UgY2xpZW50LgoKYGBg
anMKY29uc3QgYmxvZ2dlciA9IGdvb2dsZS5ibG9nZ2VyKHsKICB2ZXJzaW9u
OiAndjMnLAogIC8vIEFsbCByZXF1ZXN0cyBtYWRlIHdpdGggdGhpcyBvYmpl
Y3Qgd2lsbCB1c2UgdGhlIHNwZWNpZmllZCBhdXRoLgogIGF1dGg6ICdBUEkg
S0VZJzsKfSk7CmBgYAoKQnkgZG9pbmcgdGhpcywgZXZlcnkgQVBJIGNhbGwg
bWFkZSB3aXRoIHRoaXMgc2VydmljZSBjbGllbnQgd2lsbCB1c2UgYCdBUEkg
S0VZJ2AgdG8gYXV0aGVudGljYXRlLgoKKipOb3RlOioqIENyZWF0ZWQgY2xp
ZW50cyBhcmUgKippbW11dGFibGUqKiBzbyB5b3UgbXVzdCBjcmVhdGUgYSBu
ZXcgb25lIGlmIHlvdSB3YW50IHRvIHNwZWNpZnkgZGlmZmVyZW50IG9wdGlv
bnMuCgpTaW1pbGFyIHRvIHRoZSBleGFtcGxlcyBhYm92ZSwgeW91IGNhbiBh
bHNvIG1vZGlmeSB0aGUgcGFyYW1ldGVycyB1c2VkIGZvciBldmVyeSBjYWxs
IG9mIGEgZ2l2ZW4gc2VydmljZToKCmBgYGpzCmNvbnN0IGJsb2dnZXIgPSBn
b29nbGUuYmxvZ2dlcih7CiAgdmVyc2lvbjogJ3YzJywKICAvLyBBbGwgcmVx
dWVzdHMgbWFkZSB3aXRoIHRoaXMgc2VydmljZSBjbGllbnQgd2lsbCBjb250
YWluIHRoZQogIC8vIGJsb2dJZCBxdWVyeSBwYXJhbWV0ZXIgdW5sZXNzIG92
ZXJyaWRkZW4gaW4gaW5kaXZpZHVhbCBBUEkgY2FsbHMuCiAgcGFyYW1zOiB7
CiAgICBibG9nSWQ6IDMyMTM5MDAKICB9Cn0pOwoKLy8gQ2FsbHMgd2l0aCB0
aGlzIGRyaXZlIGNsaWVudCB3aWxsIE5PVCBjb250YWluIHRoZSBibG9nSWQg
cXVlcnkgcGFyYW1ldGVyLgpjb25zdCBkcml2ZSA9IGdvb2dsZS5kcml2ZSgn
djMnKTsKLi4uCgpgYGAKCiMjIyMgUmVxdWVzdC1sZXZlbCBvcHRpb25zCllv
dSBjYW4gc3BlY2lmeSBhbiBgYXV0aGAgb2JqZWN0IHRvIGJlIHVzZWQgcGVy
IHJlcXVlc3QuIEVhY2ggcmVxdWVzdCBhbHNvIGluaGVyaXRzIHRoZSBvcHRp
b25zIHNwZWNpZmllZCBhdCB0aGUgc2VydmljZSBsZXZlbCBhbmQgZ2xvYmFs
IGxldmVsLgoKRm9yIGV4YW1wbGU6CgpgYGBqcwpjb25zdCB7Z29vZ2xlfSA9
IHJlcXVpcmUoJ2dvb2dsZWFwaXMnKTsKY29uc3QgYmlncXVlcnkgPSBnb29n
bGUuYmlncXVlcnkoJ3YyJyk7Cgphc3luYyBmdW5jdGlvbiBtYWluKCkgewoK
ICAvLyBUaGlzIG1ldGhvZCBsb29rcyBmb3IgdGhlIEdDTE9VRF9QUk9KRUNU
IGFuZCBHT09HTEVfQVBQTElDQVRJT05fQ1JFREVOVElBTFMKICAvLyBlbnZp
cm9ubWVudCB2YXJpYWJsZXMuCiAgY29uc3QgYXV0aCA9IG5ldyBnb29nbGUu
YXV0aC5Hb29nbGVBdXRoKHsKICAgIHNjb3BlczogWydodHRwczovL3d3dy5n
b29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3JtJ10KICB9KTsKICBj
b25zdCBhdXRoQ2xpZW50ID0gYXdhaXQgYXV0aC5nZXRDbGllbnQoKTsKCiAg
Y29uc3QgcHJvamVjdElkID0gYXdhaXQgYXV0aC5nZXRQcm9qZWN0SWQoKTsK
CiAgY29uc3QgcmVxdWVzdCA9IHsKICAgIHByb2plY3RJZCwKICAgIGRhdGFz
ZXRJZDogJzxZT1VSX0RBVEFTRVRfSUQ+JywKCiAgICAvLyBUaGlzIGlzIGEg
InJlcXVlc3QtbGV2ZWwiIG9wdGlvbgogICAgYXV0aDogYXV0aENsaWVudAog
IH07CgogIGNvbnN0IHJlcyA9IGF3YWl0IGJpZ3F1ZXJ5LmRhdGFzZXRzLmRl
bGV0ZShyZXF1ZXN0KTsKICBjb25zb2xlLmxvZyhyZXMuZGF0YSk7Cgp9Cgpt
YWluKCkuY2F0Y2goY29uc29sZS5lcnJvcik7CmBgYAoKWW91IGNhbiBhbHNv
IG92ZXJyaWRlICpnYXhpb3MqIG9wdGlvbnMgcGVyIHJlcXVlc3QsIHN1Y2gg
YXMgYHVybGAsIGBtZXRob2RgLCBhbmQgYHJlc3BvbnNlVHlwZWAuCgpGb3Ig
ZXhhbXBsZToKCmBgYGpzCmNvbnN0IHJlcyA9IGF3YWl0IGRyaXZlLmZpbGVz
LmV4cG9ydCh7CiAgZmlsZUlkOiAnYXN4S0pvZDlzNzknLCAvLyBBIEdvb2ds
ZSBEb2MKICBtaW1lVHlwZTogJ2FwcGxpY2F0aW9uL3BkZicKfSwgewogIC8v
IE1ha2Ugc3VyZSB3ZSBnZXQgdGhlIGJpbmFyeSBkYXRhCiAgcmVzcG9uc2VU
eXBlOiAnc3RyZWFtJwp9KTsKYGBgCgojIyMgVXNpbmcgYSBQcm94eQpZb3Ug
Y2FuIHVzZSB0aGUgZm9sbG93aW5nIGVudmlyb25tZW50IHZhcmlhYmxlcyB0
byBwcm94eSBIVFRQIGFuZCBIVFRQUyByZXF1ZXN0czoKCi0gYEhUVFBfUFJP
WFlgIC8gYGh0dHBfcHJveHlgCi0gYEhUVFBTX1BST1hZYCAvIGBodHRwc19w
cm94eWAKCldoZW4gSFRUUF9QUk9YWSAvIGh0dHBfcHJveHkgYXJlIHNldCwg
dGhleSB3aWxsIGJlIHVzZWQgdG8gcHJveHkgbm9uLVNTTCByZXF1ZXN0cyB0
aGF0IGRvIG5vdCBoYXZlIGFuIGV4cGxpY2l0IHByb3h5IGNvbmZpZ3VyYXRp
b24gb3B0aW9uIHByZXNlbnQuIFNpbWlsYXJseSwgSFRUUFNfUFJPWFkgLyBo
dHRwc19wcm94eSB3aWxsIGJlIHJlc3BlY3RlZCBmb3IgU1NMIHJlcXVlc3Rz
IHRoYXQgZG8gbm90IGhhdmUgYW4gZXhwbGljaXQgcHJveHkgY29uZmlndXJh
dGlvbiBvcHRpb24uIEl0IGlzIHZhbGlkIHRvIGRlZmluZSBhIHByb3h5IGlu
IG9uZSBvZiB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGVzLCBidXQgdGhlbiBv
dmVycmlkZSBpdCBmb3IgYSBzcGVjaWZpYyByZXF1ZXN0LCB1c2luZyB0aGUg
cHJveHkgY29uZmlndXJhdGlvbiBvcHRpb24uCgojIyMgR2V0dGluZyBTdXBw
b3J0ZWQgQVBJcwpZb3UgY2FuIHByb2dyYW1hdGljYWxseSBvYnRhaW4gdGhl
IGxpc3Qgb2Ygc3VwcG9ydGVkIEFQSXMsIGFuZCBhbGwgYXZhaWxhYmxlIHZl
cnNpb25zOgoKYGBganMKY29uc3Qge2dvb2dsZX0gPSByZXF1aXJlKCdnb29n
bGVhcGlzJyk7CmNvbnN0IGFwaXMgPSBnb29nbGUuZ2V0U3VwcG9ydGVkQVBJ
cygpOwpgYGAKClRoaXMgd2lsbCByZXR1cm4gYW4gb2JqZWN0IHdpdGggdGhl
IEFQSSBuYW1lIGFzIG9iamVjdCBwcm9wZXJ0eSBuYW1lcywgYW5kIGFuIGFy
cmF5IG9mIHZlcnNpb24gc3RyaW5ncyBhcyB0aGUgb2JqZWN0IHZhbHVlczsK
CiMjIyBUeXBlU2NyaXB0ClRoaXMgbGlicmFyeSBpcyB3cml0dGVuIGluIFR5
cGVTY3JpcHQsIGFuZCBwcm92aWRlcyB0eXBlcyBvdXQgb2YgdGhlIGJveC4g
QWxsIGNsYXNzZXMgYW5kIGludGVyZmFjZXMgZ2VuZXJhdGVkIGZvciBlYWNo
IEFQSSBhcmUgZXhwb3J0ZWQgdW5kZXIgdGhlIGAke2FwaU5hbWV9XyR7dmVy
c2lvbn1gIG5hbWVzcGFjZS4gIEZvciBleGFtcGxlLCB0aGUgRHJpdmUgdjMg
QVBJIHR5cGVzIGFyZSBhbGwgYXZhaWxhYmxlIGZyb20gdGhlIGBkcml2ZV92
M2AgbmFtZXNwYWNlOgoKYGBgdHMKaW1wb3J0IHsgZHJpdmVfdjMgfSBmcm9t
ICdnb29nbGVhcGlzJzsKYGBgCgojIyBSZWxlYXNlIE5vdGVzICYgQnJlYWtp
bmcgQ2hhbmdlcwpZb3UgY2FuIGZpbmQgYSBkZXRhaWxlZCBsaXN0IG9mIGJy
ZWFraW5nIGNoYW5nZXMgYW5kIG5ldyBmZWF0dXJlcyBpbiBvdXIgW1JlbGVh
c2UgTm90ZXNdW3JlbGVhc2Vub3Rlc10uIElmIHlvdSd2ZSB1c2VkIHRoaXMg
bGlicmFyeSBiZWZvcmUgYDI1LnhgLCBzZWUgb3VyIFtSZWxlYXNlIE5vdGVz
XVtyZWxlYXNlbm90ZXNdIHRvIGxlYXJuIGFib3V0IG1pZ3JhdGluZyB5b3Vy
IGNvZGUgZnJvbSBgMjQueC54YCB0byBgMjUueC54YC4gSXQncyBwcmV0dHkg
ZWFzeSA6KQoKIyMgTGljZW5zZQpUaGlzIGxpYnJhcnkgaXMgbGljZW5zZWQg
dW5kZXIgQXBhY2hlIDIuMC4gRnVsbCBsaWNlbnNlIHRleHQgaXMgYXZhaWxh
YmxlIGluIFtMSUNFTlNFXVtsaWNlbnNlXS4KCiMjIENvbnRyaWJ1dGluZwpX
ZSBsb3ZlIGNvbnRyaWJ1dGlvbnMhIEJlZm9yZSBzdWJtaXR0aW5nIGEgUHVs
bCBSZXF1ZXN0LCBpdCdzIGFsd2F5cyBnb29kIHRvIHN0YXJ0IHdpdGggYSBu
ZXcgaXNzdWUgZmlyc3QuIFRvIGxlYXJuIG1vcmUsIHNlZSBbQ09OVFJJQlVU
SU5HXVtjb250cmlidXRpbmddLgoKIyMgUXVlc3Rpb25zL3Byb2JsZW1zPwoq
IEFzayB5b3VyIGRldmVsb3BtZW50IHJlbGF0ZWQgcXVlc3Rpb25zIG9uIFtT
dGFja292ZXJmbG93XVtzdGFja292ZXJmbG93XS4KKiBJZiB5b3UndmUgZm91
bmQgYW4gYnVnL2lzc3VlLCBwbGVhc2UgW2ZpbGUgaXQgb24gR2l0SHViXVti
dWdzXS4KCgpbc255ay1pbWFnZV06IGh0dHBzOi8vc255ay5pby90ZXN0L2dp
dGh1Yi9nb29nbGVhcGlzL2dvb2dsZS1hcGktbm9kZWpzLWNsaWVudC9iYWRn
ZS5zdmcKW3NueWstdXJsXTogaHR0cHM6Ly9zbnlrLmlvL3Rlc3QvZ2l0aHVi
L2dvb2dsZWFwaXMvZ29vZ2xlLWFwaS1ub2RlanMtY2xpZW50CltkYXZpZC1p
bWFnZV06IGh0dHBzOi8vZGF2aWQtZG0ub3JnL2dvb2dsZWFwaXMvZ29vZ2xl
LWFwaS1ub2RlanMtY2xpZW50LnN2ZwpbZGF2aWQtdXJsXTogaHR0cHM6Ly9k
YXZpZC1kbS5vcmcvZ29vZ2xlYXBpcy9nb29nbGUtYXBpLW5vZGVqcy1jbGll
bnQKW25wbWltZ106IGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vbnBtL3YvZ29v
Z2xlYXBpcy5zdmcKW25wbV06IGh0dHBzOi8vd3d3Lm5wbWpzLm9yZy9wYWNr
YWdlL2dvb2dsZWFwaXMKW2NpcmNsZV06IGh0dHBzOi8vY2lyY2xlY2kuY29t
L2doL2dvb2dsZWFwaXMvZ29vZ2xlLWFwaS1ub2RlanMtY2xpZW50CltjaXJj
bGVpbWddOiBodHRwczovL2NpcmNsZWNpLmNvbS9naC9nb29nbGVhcGlzL2dv
b2dsZS1hcGktbm9kZWpzLWNsaWVudC5zdmc/c3R5bGU9c2hpZWxkCltyZWxl
YXNlbGV2ZWxdOiBodHRwczovL2Nsb3VkLmdvb2dsZS5jb20vdGVybXMvbGF1
bmNoLXN0YWdlcwpbcmVsZWFzZWxldmVsaW1nXTogaHR0cHM6Ly9pbWcuc2hp
ZWxkcy5pby9iYWRnZS9SZWxlYXNlJTIwTGV2ZWwtQWxwaGEtZmY2OWI0LnN2
ZwpbYnVnc106IGh0dHBzOi8vZ2l0aHViLmNvbS9nb29nbGVhcGlzL2dvb2ds
ZS1hcGktbm9kZWpzLWNsaWVudC9pc3N1ZXMKW25vZGVdOiBodHRwOi8vbm9k
ZWpzLm9yZy8KW3N0YWNrb3ZlcmZsb3ddOiBodHRwOi8vc3RhY2tvdmVyZmxv
dy5jb20vcXVlc3Rpb25zL3RhZ2dlZC9nb29nbGUtYXBpLW5vZGVqcy1jbGll
bnQKW2FwaWV4cGxvcmVyXTogaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5j
b20vYXBpcy1leHBsb3JlcgpbdXNpbmdrZXlzXTogaHR0cHM6Ly9zdXBwb3J0
Lmdvb2dsZS5jb20vY2xvdWQvYW5zd2VyLzYxNTg4NjI/aGw9ZW4KW2NvbnRy
aWJ1dGluZ106IGh0dHBzOi8vZ2l0aHViLmNvbS9nb29nbGVhcGlzL2dvb2ds
ZS1hcGktbm9kZWpzLWNsaWVudC9ibG9iL21hc3Rlci9DT05UUklCVVRJTkcu
bWQKW2xpY2Vuc2VdOiBodHRwczovL2dpdGh1Yi5jb20vZ29vZ2xlYXBpcy9n
b29nbGUtYXBpLW5vZGVqcy1jbGllbnQvdHJlZS9tYXN0ZXIvTElDRU5TRQpb
YXV0aGRvY3NdOiBodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS9pZGVu
dGl0eS9wcm90b2NvbHMvT3BlbklEQ29ubmVjdApbZ2F4aW9zXTogaHR0cHM6
Ly9naXRodWIuY29tL0p1c3RpbkJlY2t3aXRoL2dheGlvcwpbc3RyZWFtXTog
aHR0cDovL25vZGVqcy5vcmcvYXBpL3N0cmVhbS5odG1sI3N0cmVhbV9jbGFz
c19zdHJlYW1fcmVhZGFibGUKW3JlbGVhc2Vub3Rlc106IGh0dHBzOi8vZ2l0
aHViLmNvbS9nb29nbGVhcGlzL2dvb2dsZS1hcGktbm9kZWpzLWNsaWVudC9y
ZWxlYXNlcwpbZGV2Y29uc29sZV06IGh0dHBzOi8vY29uc29sZS5jbG91ZC5n
b29nbGUuY29tL2FwaXMvY3JlZGVudGlhbHMKW29hdXRoXTogaHR0cHM6Ly9k
ZXZlbG9wZXJzLmdvb2dsZS5jb20vaWRlbnRpdHkvcHJvdG9jb2xzL09BdXRo
Mgpbb2F1dGhleGFtcGxlXTogaHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZWFw
aXMvZ29vZ2xlLWFwaS1ub2RlanMtY2xpZW50L3RyZWUvbWFzdGVyL3NhbXBs
ZXMvb2F1dGgyLmpzCltvcHRpb25zXTogaHR0cHM6Ly9naXRodWIuY29tL2dv
b2dsZWFwaXMvZ29vZ2xlLWFwaS1ub2RlanMtY2xpZW50L3RyZWUvbWFzdGVy
I29wdGlvbnMKW2dvb2dsZWNsb3VkXTogaHR0cHM6Ly9jbG91ZC5nb29nbGUu
Y29tL25vZGVqcy9kb2NzL3JlZmVyZW5jZS9saWJyYXJpZXMKW2dvb2dsZWNs
b3VkYXBpc106IGh0dHBzOi8vY2xvdWQuZ29vZ2xlLmNvbS9ub2RlanMvZG9j
cy9yZWZlcmVuY2UvYXBpcwpbY2xvdWRwbGF0Zm9ybV06IGh0dHBzOi8vY2xv
dWQuZ29vZ2xlLmNvbS9kb2NzLwpbY29kZWNvdmltZ106IGh0dHBzOi8vY29k
ZWNvdi5pby9naXRodWIvZ29vZ2xlYXBpcy9nb29nbGUtYXBpLW5vZGVqcy1j
bGllbnQvY292ZXJhZ2Uuc3ZnP2JyYW5jaD1tYXN0ZXIKW2NvZGVjb3ZdOiBo
dHRwczovL2NvZGVjb3YuaW8vZ2l0aHViL2dvb2dsZWFwaXMvZ29vZ2xlLWFw
aS1ub2RlanMtY2xpZW50P2JyYW5jaD1tYXN0ZXIKW2Rvd25sb2Fkc2ltZ106
IGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vbnBtL2RtL2dvb2dsZWFwaXMuc3Zn
Cltkb3dubG9hZHNdOiBodHRwczovL25vZGVpLmNvL25wbS9nb29nbGVhcGlz
Lwo=
",,8020,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
