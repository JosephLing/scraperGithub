name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'mysql',805461,b'A pure node.js JavaScript Client implementing the MySQL protocol.',b'JavaScript',144,14790,,503,False,b'https://api.github.com/repos/mysqljs/mysql/forks',"IyBteXNxbAoKWyFbTlBNIFZlcnNpb25dW25wbS12ZXJzaW9uLWltYWdlXV1b
bnBtLXVybF0KWyFbTlBNIERvd25sb2Fkc11bbnBtLWRvd25sb2Fkcy1pbWFn
ZV1dW25wbS11cmxdClshW05vZGUuanMgVmVyc2lvbl1bbm9kZS1pbWFnZV1d
W25vZGUtdXJsXQpbIVtMaW51eCBCdWlsZF1bdHJhdmlzLWltYWdlXV1bdHJh
dmlzLXVybF0KWyFbV2luZG93cyBCdWlsZF1bYXBwdmV5b3ItaW1hZ2VdXVth
cHB2ZXlvci11cmxdClshW1Rlc3QgQ292ZXJhZ2VdW2NvdmVyYWxscy1pbWFn
ZV1dW2NvdmVyYWxscy11cmxdCgojIyBUYWJsZSBvZiBDb250ZW50cwoKLSBb
SW5zdGFsbF0oI2luc3RhbGwpCi0gW0ludHJvZHVjdGlvbl0oI2ludHJvZHVj
dGlvbikKLSBbQ29udHJpYnV0b3JzXSgjY29udHJpYnV0b3JzKQotIFtTcG9u
c29yc10oI3Nwb25zb3JzKQotIFtDb21tdW5pdHldKCNjb21tdW5pdHkpCi0g
W0VzdGFibGlzaGluZyBjb25uZWN0aW9uc10oI2VzdGFibGlzaGluZy1jb25u
ZWN0aW9ucykKLSBbQ29ubmVjdGlvbiBvcHRpb25zXSgjY29ubmVjdGlvbi1v
cHRpb25zKQogIC0gW1NTTCBvcHRpb25zXSgjc3NsLW9wdGlvbnMpCiAgLSBb
Q29ubmVjdGlvbiBmbGFnc10oI2Nvbm5lY3Rpb24tZmxhZ3MpCi0gW1Rlcm1p
bmF0aW5nIGNvbm5lY3Rpb25zXSgjdGVybWluYXRpbmctY29ubmVjdGlvbnMp
Ci0gW1Bvb2xpbmcgY29ubmVjdGlvbnNdKCNwb29saW5nLWNvbm5lY3Rpb25z
KQotIFtQb29sIG9wdGlvbnNdKCNwb29sLW9wdGlvbnMpCi0gW1Bvb2wgZXZl
bnRzXSgjcG9vbC1ldmVudHMpCiAgLSBbYWNxdWlyZV0oI2FjcXVpcmUpCiAg
LSBbY29ubmVjdGlvbl0oI2Nvbm5lY3Rpb24pCiAgLSBbZW5xdWV1ZV0oI2Vu
cXVldWUpCiAgLSBbcmVsZWFzZV0oI3JlbGVhc2UpCi0gW0Nsb3NpbmcgYWxs
IHRoZSBjb25uZWN0aW9ucyBpbiBhIHBvb2xdKCNjbG9zaW5nLWFsbC10aGUt
Y29ubmVjdGlvbnMtaW4tYS1wb29sKQotIFtQb29sQ2x1c3Rlcl0oI3Bvb2xj
bHVzdGVyKQogIC0gW1Bvb2xDbHVzdGVyIG9wdGlvbnNdKCNwb29sY2x1c3Rl
ci1vcHRpb25zKQotIFtTd2l0Y2hpbmcgdXNlcnMgYW5kIGFsdGVyaW5nIGNv
bm5lY3Rpb24gc3RhdGVdKCNzd2l0Y2hpbmctdXNlcnMtYW5kLWFsdGVyaW5n
LWNvbm5lY3Rpb24tc3RhdGUpCi0gW1NlcnZlciBkaXNjb25uZWN0c10oI3Nl
cnZlci1kaXNjb25uZWN0cykKLSBbUGVyZm9ybWluZyBxdWVyaWVzXSgjcGVy
Zm9ybWluZy1xdWVyaWVzKQotIFtFc2NhcGluZyBxdWVyeSB2YWx1ZXNdKCNl
c2NhcGluZy1xdWVyeS12YWx1ZXMpCi0gW0VzY2FwaW5nIHF1ZXJ5IGlkZW50
aWZpZXJzXSgjZXNjYXBpbmctcXVlcnktaWRlbnRpZmllcnMpCiAgLSBbUHJl
cGFyaW5nIFF1ZXJpZXNdKCNwcmVwYXJpbmctcXVlcmllcykKICAtIFtDdXN0
b20gZm9ybWF0XSgjY3VzdG9tLWZvcm1hdCkKLSBbR2V0dGluZyB0aGUgaWQg
b2YgYW4gaW5zZXJ0ZWQgcm93XSgjZ2V0dGluZy10aGUtaWQtb2YtYW4taW5z
ZXJ0ZWQtcm93KQotIFtHZXR0aW5nIHRoZSBudW1iZXIgb2YgYWZmZWN0ZWQg
cm93c10oI2dldHRpbmctdGhlLW51bWJlci1vZi1hZmZlY3RlZC1yb3dzKQot
IFtHZXR0aW5nIHRoZSBudW1iZXIgb2YgY2hhbmdlZCByb3dzXSgjZ2V0dGlu
Zy10aGUtbnVtYmVyLW9mLWNoYW5nZWQtcm93cykKLSBbR2V0dGluZyB0aGUg
Y29ubmVjdGlvbiBJRF0oI2dldHRpbmctdGhlLWNvbm5lY3Rpb24taWQpCi0g
W0V4ZWN1dGluZyBxdWVyaWVzIGluIHBhcmFsbGVsXSgjZXhlY3V0aW5nLXF1
ZXJpZXMtaW4tcGFyYWxsZWwpCi0gW1N0cmVhbWluZyBxdWVyeSByb3dzXSgj
c3RyZWFtaW5nLXF1ZXJ5LXJvd3MpCiAgLSBbUGlwaW5nIHJlc3VsdHMgd2l0
aCBTdHJlYW1zXSgjcGlwaW5nLXJlc3VsdHMtd2l0aC1zdHJlYW1zKQotIFtN
dWx0aXBsZSBzdGF0ZW1lbnQgcXVlcmllc10oI211bHRpcGxlLXN0YXRlbWVu
dC1xdWVyaWVzKQotIFtTdG9yZWQgcHJvY2VkdXJlc10oI3N0b3JlZC1wcm9j
ZWR1cmVzKQotIFtKb2lucyB3aXRoIG92ZXJsYXBwaW5nIGNvbHVtbiBuYW1l
c10oI2pvaW5zLXdpdGgtb3ZlcmxhcHBpbmctY29sdW1uLW5hbWVzKQotIFtU
cmFuc2FjdGlvbnNdKCN0cmFuc2FjdGlvbnMpCi0gW1BpbmddKCNwaW5nKQot
IFtUaW1lb3V0c10oI3RpbWVvdXRzKQotIFtFcnJvciBoYW5kbGluZ10oI2Vy
cm9yLWhhbmRsaW5nKQotIFtFeGNlcHRpb24gU2FmZXR5XSgjZXhjZXB0aW9u
LXNhZmV0eSkKLSBbVHlwZSBjYXN0aW5nXSgjdHlwZS1jYXN0aW5nKQogIC0g
W051bWJlcl0oI251bWJlcikKICAtIFtEYXRlXSgjZGF0ZSkKICAtIFtCdWZm
ZXJdKCNidWZmZXIpCiAgLSBbU3RyaW5nXSgjc3RyaW5nKQogIC0gW0N1c3Rv
bSB0eXBlIGNhc3RpbmddKCNjdXN0b20tdHlwZS1jYXN0aW5nKQotIFtEZWJ1
Z2dpbmcgYW5kIHJlcG9ydGluZyBwcm9ibGVtc10oI2RlYnVnZ2luZy1hbmQt
cmVwb3J0aW5nLXByb2JsZW1zKQotIFtTZWN1cml0eSBpc3N1ZXNdKCNzZWN1
cml0eS1pc3N1ZXMpCi0gW0NvbnRyaWJ1dGluZ10oI2NvbnRyaWJ1dGluZykK
LSBbUnVubmluZyB0ZXN0c10oI3J1bm5pbmctdGVzdHMpCiAgLSBbUnVubmlu
ZyB1bml0IHRlc3RzXSgjcnVubmluZy11bml0LXRlc3RzKQogIC0gW1J1bm5p
bmcgaW50ZWdyYXRpb24gdGVzdHNdKCNydW5uaW5nLWludGVncmF0aW9uLXRl
c3RzKQotIFtUb2RvXSgjdG9kbykKCiMjIEluc3RhbGwKClRoaXMgaXMgYSBb
Tm9kZS5qc10oaHR0cHM6Ly9ub2RlanMub3JnL2VuLykgbW9kdWxlIGF2YWls
YWJsZSB0aHJvdWdoIHRoZQpbbnBtIHJlZ2lzdHJ5XShodHRwczovL3d3dy5u
cG1qcy5jb20vKS4KCkJlZm9yZSBpbnN0YWxsaW5nLCBbZG93bmxvYWQgYW5k
IGluc3RhbGwgTm9kZS5qc10oaHR0cHM6Ly9ub2RlanMub3JnL2VuL2Rvd25s
b2FkLykuCk5vZGUuanMgMC42IG9yIGhpZ2hlciBpcyByZXF1aXJlZC4KCklu
c3RhbGxhdGlvbiBpcyBkb25lIHVzaW5nIHRoZQpbYG5wbSBpbnN0YWxsYCBj
b21tYW5kXShodHRwczovL2RvY3MubnBtanMuY29tL2dldHRpbmctc3RhcnRl
ZC9pbnN0YWxsaW5nLW5wbS1wYWNrYWdlcy1sb2NhbGx5KToKCmBgYHNoCiQg
bnBtIGluc3RhbGwgbXlzcWwKYGBgCgpGb3IgaW5mb3JtYXRpb24gYWJvdXQg
dGhlIHByZXZpb3VzIDAuOS54IHJlbGVhc2VzLCB2aXNpdCB0aGUgW3YwLjkg
YnJhbmNoXVtdLgoKU29tZXRpbWVzIEkgbWF5IGFsc28gYXNrIHlvdSB0byBp
bnN0YWxsIHRoZSBsYXRlc3QgdmVyc2lvbiBmcm9tIEdpdGh1YiB0byBjaGVj
awppZiBhIGJ1Z2ZpeCBpcyB3b3JraW5nLiBJbiB0aGlzIGNhc2UsIHBsZWFz
ZSBkbzoKCmBgYHNoCiQgbnBtIGluc3RhbGwgbXlzcWxqcy9teXNxbApgYGAK
Clt2MC45IGJyYW5jaF06IGh0dHBzOi8vZ2l0aHViLmNvbS9teXNxbGpzL215
c3FsL3RyZWUvdjAuOQoKIyMgSW50cm9kdWN0aW9uCgpUaGlzIGlzIGEgbm9k
ZS5qcyBkcml2ZXIgZm9yIG15c3FsLiBJdCBpcyB3cml0dGVuIGluIEphdmFT
Y3JpcHQsIGRvZXMgbm90CnJlcXVpcmUgY29tcGlsaW5nLCBhbmQgaXMgMTAw
JSBNSVQgbGljZW5zZWQuCgpIZXJlIGlzIGFuIGV4YW1wbGUgb24gaG93IHRv
IHVzZSBpdDoKCmBgYGpzCnZhciBteXNxbCAgICAgID0gcmVxdWlyZSgnbXlz
cWwnKTsKdmFyIGNvbm5lY3Rpb24gPSBteXNxbC5jcmVhdGVDb25uZWN0aW9u
KHsKICBob3N0ICAgICA6ICdsb2NhbGhvc3QnLAogIHVzZXIgICAgIDogJ21l
JywKICBwYXNzd29yZCA6ICdzZWNyZXQnLAogIGRhdGFiYXNlIDogJ215X2Ri
Jwp9KTsKCmNvbm5lY3Rpb24uY29ubmVjdCgpOwoKY29ubmVjdGlvbi5xdWVy
eSgnU0VMRUNUIDEgKyAxIEFTIHNvbHV0aW9uJywgZnVuY3Rpb24gKGVycm9y
LCByZXN1bHRzLCBmaWVsZHMpIHsKICBpZiAoZXJyb3IpIHRocm93IGVycm9y
OwogIGNvbnNvbGUubG9nKCdUaGUgc29sdXRpb24gaXM6ICcsIHJlc3VsdHNb
MF0uc29sdXRpb24pOwp9KTsKCmNvbm5lY3Rpb24uZW5kKCk7CmBgYAoKRnJv
bSB0aGlzIGV4YW1wbGUsIHlvdSBjYW4gbGVhcm4gdGhlIGZvbGxvd2luZzoK
CiogRXZlcnkgbWV0aG9kIHlvdSBpbnZva2Ugb24gYSBjb25uZWN0aW9uIGlz
IHF1ZXVlZCBhbmQgZXhlY3V0ZWQgaW4gc2VxdWVuY2UuCiogQ2xvc2luZyB0
aGUgY29ubmVjdGlvbiBpcyBkb25lIHVzaW5nIGBlbmQoKWAgd2hpY2ggbWFr
ZXMgc3VyZSBhbGwgcmVtYWluaW5nCiAgcXVlcmllcyBhcmUgZXhlY3V0ZWQg
YmVmb3JlIHNlbmRpbmcgYSBxdWl0IHBhY2tldCB0byB0aGUgbXlzcWwgc2Vy
dmVyLgoKIyMgQ29udHJpYnV0b3JzCgpUaGFua3MgZ29lcyB0byB0aGUgcGVv
cGxlIHdobyBoYXZlIGNvbnRyaWJ1dGVkIGNvZGUgdG8gdGhpcyBtb2R1bGUs
IHNlZSB0aGUKW0dpdEh1YiBDb250cmlidXRvcnMgcGFnZV1bXS4KCltHaXRI
dWIgQ29udHJpYnV0b3JzIHBhZ2VdOiBodHRwczovL2dpdGh1Yi5jb20vbXlz
cWxqcy9teXNxbC9ncmFwaHMvY29udHJpYnV0b3JzCgpBZGRpdGlvbmFsbHkg
SSdkIGxpa2UgdG8gdGhhbmsgdGhlIGZvbGxvd2luZyBwZW9wbGU6CgoqIFtB
bmRyZXkgSHJpc3Rvdl1bXSAoT3JhY2xlKSAtIGZvciBoZWxwaW5nIG1lIHdp
dGggcHJvdG9jb2wgcXVlc3Rpb25zLgoqIFtVbGYgV2VuZGVsXVtdIChPcmFj
bGUpIC0gZm9yIGhlbHBpbmcgbWUgd2l0aCBwcm90b2NvbCBxdWVzdGlvbnMu
CgpbVWxmIFdlbmRlbF06IGh0dHA6Ly9ibG9nLnVsZi13ZW5kZWwuZGUvCltB
bmRyZXkgSHJpc3Rvdl06IGh0dHA6Ly9hbmRyZXkuaHJpc3Rvdi5jb20vCgoj
IyBTcG9uc29ycwoKVGhlIGZvbGxvd2luZyBjb21wYW5pZXMgaGF2ZSBzdXBw
b3J0ZWQgdGhpcyBwcm9qZWN0IGZpbmFuY2lhbGx5LCBhbGxvd2luZyBtZSB0
bwpzcGVuZCBtb3JlIHRpbWUgb24gaXQgKG9yZGVyZWQgYnkgdGltZSBvZiBj
b250cmlidXRpb24pOgoKKiBbVHJhbnNsb2FkaXRdKGh0dHA6Ly90cmFuc2xv
YWRpdC5jb20pIChteSBzdGFydHVwLCB3ZSBkbyBmaWxlIHVwbG9hZGluZyAm
CiAgdmlkZW8gZW5jb2RpbmcgYXMgYSBzZXJ2aWNlLCBjaGVjayBpdCBvdXQp
CiogW0pveWVudF0oaHR0cDovL3d3dy5qb3llbnQuY29tLykKKiBbcGlua2Jp
a2UuY29tXShodHRwOi8vcGlua2Jpa2UuY29tLykKKiBbSG9saWRheSBFeHRy
YXNdKGh0dHA6Ly93d3cuaG9saWRheWV4dHJhcy5jby51ay8pICh0aGV5IGFy
ZSBbaGlyaW5nXShodHRwOi8vam9pbi5ob2xpZGF5ZXh0cmFzLmNvLnVrLykp
CiogW05ld3Njb3BlXShodHRwOi8vbmV3c2NvcGUuY29tLykgKHRoZXkgYXJl
IFtoaXJpbmddKGh0dHBzOi8vbmV3c2NvcGUuY29tL3VudGVybmVobWVuL2pv
YnMvKSkKCiMjIENvbW11bml0eQoKSWYgeW91J2QgbGlrZSB0byBkaXNjdXNz
IHRoaXMgbW9kdWxlLCBvciBhc2sgcXVlc3Rpb25zIGFib3V0IGl0LCBwbGVh
c2UgdXNlIG9uZQpvZiB0aGUgZm9sbG93aW5nOgoKKiAqKk1haWxpbmcgbGlz
dCoqOiBodHRwczovL2dyb3Vwcy5nb29nbGUuY29tL2ZvcnVtLyMhZm9ydW0v
bm9kZS1teXNxbAoqICoqSVJDIENoYW5uZWwqKjogI25vZGUuanMgKG9uIGZy
ZWVub2RlLm5ldCwgSSBwYXkgYXR0ZW50aW9uIHRvIGFueSBtZXNzYWdlCiAg
aW5jbHVkaW5nIHRoZSB0ZXJtIGBteXNxbGApCgojIyBFc3RhYmxpc2hpbmcg
Y29ubmVjdGlvbnMKClRoZSByZWNvbW1lbmRlZCB3YXkgdG8gZXN0YWJsaXNo
IGEgY29ubmVjdGlvbiBpcyB0aGlzOgoKYGBganMKdmFyIG15c3FsICAgICAg
PSByZXF1aXJlKCdteXNxbCcpOwp2YXIgY29ubmVjdGlvbiA9IG15c3FsLmNy
ZWF0ZUNvbm5lY3Rpb24oewogIGhvc3QgICAgIDogJ2V4YW1wbGUub3JnJywK
ICB1c2VyICAgICA6ICdib2InLAogIHBhc3N3b3JkIDogJ3NlY3JldCcKfSk7
Cgpjb25uZWN0aW9uLmNvbm5lY3QoZnVuY3Rpb24oZXJyKSB7CiAgaWYgKGVy
cikgewogICAgY29uc29sZS5lcnJvcignZXJyb3IgY29ubmVjdGluZzogJyAr
IGVyci5zdGFjayk7CiAgICByZXR1cm47CiAgfQoKICBjb25zb2xlLmxvZygn
Y29ubmVjdGVkIGFzIGlkICcgKyBjb25uZWN0aW9uLnRocmVhZElkKTsKfSk7
CmBgYAoKSG93ZXZlciwgYSBjb25uZWN0aW9uIGNhbiBhbHNvIGJlIGltcGxp
Y2l0bHkgZXN0YWJsaXNoZWQgYnkgaW52b2tpbmcgYSBxdWVyeToKCmBgYGpz
CnZhciBteXNxbCAgICAgID0gcmVxdWlyZSgnbXlzcWwnKTsKdmFyIGNvbm5l
Y3Rpb24gPSBteXNxbC5jcmVhdGVDb25uZWN0aW9uKC4uLik7Cgpjb25uZWN0
aW9uLnF1ZXJ5KCdTRUxFQ1QgMScsIGZ1bmN0aW9uIChlcnJvciwgcmVzdWx0
cywgZmllbGRzKSB7CiAgaWYgKGVycm9yKSB0aHJvdyBlcnJvcjsKICAvLyBj
b25uZWN0ZWQhCn0pOwpgYGAKCkRlcGVuZGluZyBvbiBob3cgeW91IGxpa2Ug
dG8gaGFuZGxlIHlvdXIgZXJyb3JzLCBlaXRoZXIgbWV0aG9kIG1heSBiZQph
cHByb3ByaWF0ZS4gQW55IHR5cGUgb2YgY29ubmVjdGlvbiBlcnJvciAoaGFu
ZHNoYWtlIG9yIG5ldHdvcmspIGlzIGNvbnNpZGVyZWQKYSBmYXRhbCBlcnJv
ciwgc2VlIHRoZSBbRXJyb3IgSGFuZGxpbmddKCNlcnJvci1oYW5kbGluZykg
c2VjdGlvbiBmb3IgbW9yZQppbmZvcm1hdGlvbi4KCiMjIENvbm5lY3Rpb24g
b3B0aW9ucwoKV2hlbiBlc3RhYmxpc2hpbmcgYSBjb25uZWN0aW9uLCB5b3Ug
Y2FuIHNldCB0aGUgZm9sbG93aW5nIG9wdGlvbnM6CgoqIGBob3N0YDogVGhl
IGhvc3RuYW1lIG9mIHRoZSBkYXRhYmFzZSB5b3UgYXJlIGNvbm5lY3Rpbmcg
dG8uIChEZWZhdWx0OgogIGBsb2NhbGhvc3RgKQoqIGBwb3J0YDogVGhlIHBv
cnQgbnVtYmVyIHRvIGNvbm5lY3QgdG8uIChEZWZhdWx0OiBgMzMwNmApCiog
YGxvY2FsQWRkcmVzc2A6IFRoZSBzb3VyY2UgSVAgYWRkcmVzcyB0byB1c2Ug
Zm9yIFRDUCBjb25uZWN0aW9uLiAoT3B0aW9uYWwpCiogYHNvY2tldFBhdGhg
OiBUaGUgcGF0aCB0byBhIHVuaXggZG9tYWluIHNvY2tldCB0byBjb25uZWN0
IHRvLiBXaGVuIHVzZWQgYGhvc3RgCiAgYW5kIGBwb3J0YCBhcmUgaWdub3Jl
ZC4KKiBgdXNlcmA6IFRoZSBNeVNRTCB1c2VyIHRvIGF1dGhlbnRpY2F0ZSBh
cy4KKiBgcGFzc3dvcmRgOiBUaGUgcGFzc3dvcmQgb2YgdGhhdCBNeVNRTCB1
c2VyLgoqIGBkYXRhYmFzZWA6IE5hbWUgb2YgdGhlIGRhdGFiYXNlIHRvIHVz
ZSBmb3IgdGhpcyBjb25uZWN0aW9uIChPcHRpb25hbCkuCiogYGNoYXJzZXRg
OiBUaGUgY2hhcnNldCBmb3IgdGhlIGNvbm5lY3Rpb24uIFRoaXMgaXMgY2Fs
bGVkICJjb2xsYXRpb24iIGluIHRoZSBTUUwtbGV2ZWwKICBvZiBNeVNRTCAo
bGlrZSBgdXRmOF9nZW5lcmFsX2NpYCkuIElmIGEgU1FMLWxldmVsIGNoYXJz
ZXQgaXMgc3BlY2lmaWVkIChsaWtlIGB1dGY4bWI0YCkKICB0aGVuIHRoZSBk
ZWZhdWx0IGNvbGxhdGlvbiBmb3IgdGhhdCBjaGFyc2V0IGlzIHVzZWQuIChE
ZWZhdWx0OiBgJ1VURjhfR0VORVJBTF9DSSdgKQoqIGB0aW1lem9uZWA6IFRo
ZSB0aW1lem9uZSBjb25maWd1cmVkIG9uIHRoZSBNeVNRTCBzZXJ2ZXIuIFRo
aXMgaXMgdXNlZCB0byB0eXBlIGNhc3Qgc2VydmVyIGRhdGUvdGltZSB2YWx1
ZXMgdG8gSmF2YVNjcmlwdCBgRGF0ZWAgb2JqZWN0IGFuZCB2aWNlIHZlcnNh
LiBUaGlzIGNhbiBiZSBgJ2xvY2FsJ2AsIGAnWidgLCBvciBhbiBvZmZzZXQg
aW4gdGhlIGZvcm0gYCtISDpNTWAgb3IgYC1ISDpNTWAuIChEZWZhdWx0OiBg
J2xvY2FsJ2ApCiogYGNvbm5lY3RUaW1lb3V0YDogVGhlIG1pbGxpc2Vjb25k
cyBiZWZvcmUgYSB0aW1lb3V0IG9jY3VycyBkdXJpbmcgdGhlIGluaXRpYWwg
Y29ubmVjdGlvbgogIHRvIHRoZSBNeVNRTCBzZXJ2ZXIuIChEZWZhdWx0OiBg
MTAwMDBgKQoqIGBzdHJpbmdpZnlPYmplY3RzYDogU3RyaW5naWZ5IG9iamVj
dHMgaW5zdGVhZCBvZiBjb252ZXJ0aW5nIHRvIHZhbHVlcy4gU2VlCmlzc3Vl
IFsjNTAxXShodHRwczovL2dpdGh1Yi5jb20vbXlzcWxqcy9teXNxbC9pc3N1
ZXMvNTAxKS4gKERlZmF1bHQ6IGBmYWxzZWApCiogYGluc2VjdXJlQXV0aGA6
IEFsbG93IGNvbm5lY3RpbmcgdG8gTXlTUUwgaW5zdGFuY2VzIHRoYXQgYXNr
IGZvciB0aGUgb2xkCiAgKGluc2VjdXJlKSBhdXRoZW50aWNhdGlvbiBtZXRo
b2QuIChEZWZhdWx0OiBgZmFsc2VgKQoqIGB0eXBlQ2FzdGA6IERldGVybWlu
ZXMgaWYgY29sdW1uIHZhbHVlcyBzaG91bGQgYmUgY29udmVydGVkIHRvIG5h
dGl2ZQogICBKYXZhU2NyaXB0IHR5cGVzLiAoRGVmYXVsdDogYHRydWVgKQoq
IGBxdWVyeUZvcm1hdGA6IEEgY3VzdG9tIHF1ZXJ5IGZvcm1hdCBmdW5jdGlv
bi4gU2VlIFtDdXN0b20gZm9ybWF0XSgjY3VzdG9tLWZvcm1hdCkuCiogYHN1
cHBvcnRCaWdOdW1iZXJzYDogV2hlbiBkZWFsaW5nIHdpdGggYmlnIG51bWJl
cnMgKEJJR0lOVCBhbmQgREVDSU1BTCBjb2x1bW5zKSBpbiB0aGUgZGF0YWJh
c2UsCiAgeW91IHNob3VsZCBlbmFibGUgdGhpcyBvcHRpb24gKERlZmF1bHQ6
IGBmYWxzZWApLgoqIGBiaWdOdW1iZXJTdHJpbmdzYDogRW5hYmxpbmcgYm90
aCBgc3VwcG9ydEJpZ051bWJlcnNgIGFuZCBgYmlnTnVtYmVyU3RyaW5nc2Ag
Zm9yY2VzIGJpZyBudW1iZXJzCiAgKEJJR0lOVCBhbmQgREVDSU1BTCBjb2x1
bW5zKSB0byBiZSBhbHdheXMgcmV0dXJuZWQgYXMgSmF2YVNjcmlwdCBTdHJp
bmcgb2JqZWN0cyAoRGVmYXVsdDogYGZhbHNlYCkuCiAgRW5hYmxpbmcgYHN1
cHBvcnRCaWdOdW1iZXJzYCBidXQgbGVhdmluZyBgYmlnTnVtYmVyU3RyaW5n
c2AgZGlzYWJsZWQgd2lsbCByZXR1cm4gYmlnIG51bWJlcnMgYXMgU3RyaW5n
CiAgb2JqZWN0cyBvbmx5IHdoZW4gdGhleSBjYW5ub3QgYmUgYWNjdXJhdGVs
eSByZXByZXNlbnRlZCB3aXRoIFtKYXZhU2NyaXB0IE51bWJlciBvYmplY3Rz
XSAoaHR0cDovL2VjbWEyNjItNS5jb20vRUxTNV9IVE1MLmh0bSNTZWN0aW9u
XzguNSkKICAod2hpY2ggaGFwcGVucyB3aGVuIHRoZXkgZXhjZWVkIHRoZSBb
LTJeNTMsICsyXjUzXSByYW5nZSksIG90aGVyd2lzZSB0aGV5IHdpbGwgYmUg
cmV0dXJuZWQgYXMKICBOdW1iZXIgb2JqZWN0cy4gVGhpcyBvcHRpb24gaXMg
aWdub3JlZCBpZiBgc3VwcG9ydEJpZ051bWJlcnNgIGlzIGRpc2FibGVkLgoq
IGBkYXRlU3RyaW5nc2A6IEZvcmNlIGRhdGUgdHlwZXMgKFRJTUVTVEFNUCwg
REFURVRJTUUsIERBVEUpIHRvIGJlIHJldHVybmVkIGFzIHN0cmluZ3MgcmF0
aGVyIHRoYW4KICAgaW5mbGF0ZWQgaW50byBKYXZhU2NyaXB0IERhdGUgb2Jq
ZWN0cy4gQ2FuIGJlIGB0cnVlYC9gZmFsc2VgIG9yIGFuIGFycmF5IG9mIHR5
cGUgbmFtZXMgdG8ga2VlcCBhcwogICBzdHJpbmdzLiAoRGVmYXVsdDogYGZh
bHNlYCkKKiBgZGVidWdgOiBQcmludHMgcHJvdG9jb2wgZGV0YWlscyB0byBz
dGRvdXQuIENhbiBiZSBgdHJ1ZWAvYGZhbHNlYCBvciBhbiBhcnJheSBvZiBw
YWNrZXQgdHlwZSBuYW1lcwogICB0aGF0IHNob3VsZCBiZSBwcmludGVkLiAo
RGVmYXVsdDogYGZhbHNlYCkKKiBgdHJhY2VgOiBHZW5lcmF0ZXMgc3RhY2sg
dHJhY2VzIG9uIGBFcnJvcmAgdG8gaW5jbHVkZSBjYWxsIHNpdGUgb2YgbGli
cmFyeQogICBlbnRyYW5jZSAoImxvbmcgc3RhY2sgdHJhY2VzIikuIFNsaWdo
dCBwZXJmb3JtYW5jZSBwZW5hbHR5IGZvciBtb3N0IGNhbGxzLgogICAoRGVm
YXVsdDogYHRydWVgKQoqIGBtdWx0aXBsZVN0YXRlbWVudHNgOiBBbGxvdyBt
dWx0aXBsZSBteXNxbCBzdGF0ZW1lbnRzIHBlciBxdWVyeS4gQmUgY2FyZWZ1
bAogIHdpdGggdGhpcywgaXQgY291bGQgaW5jcmVhc2UgdGhlIHNjb3BlIG9m
IFNRTCBpbmplY3Rpb24gYXR0YWNrcy4gKERlZmF1bHQ6IGBmYWxzZWApCiog
YGZsYWdzYDogTGlzdCBvZiBjb25uZWN0aW9uIGZsYWdzIHRvIHVzZSBvdGhl
ciB0aGFuIHRoZSBkZWZhdWx0IG9uZXMuIEl0IGlzCiAgYWxzbyBwb3NzaWJs
ZSB0byBibGFja2xpc3QgZGVmYXVsdCBvbmVzLiBGb3IgbW9yZSBpbmZvcm1h
dGlvbiwgY2hlY2sKICBbQ29ubmVjdGlvbiBGbGFnc10oI2Nvbm5lY3Rpb24t
ZmxhZ3MpLgoqIGBzc2xgOiBvYmplY3Qgd2l0aCBzc2wgcGFyYW1ldGVycyBv
ciBhIHN0cmluZyBjb250YWluaW5nIG5hbWUgb2Ygc3NsIHByb2ZpbGUuIFNl
ZSBbU1NMIG9wdGlvbnNdKCNzc2wtb3B0aW9ucykuCgoKSW4gYWRkaXRpb24g
dG8gcGFzc2luZyB0aGVzZSBvcHRpb25zIGFzIGFuIG9iamVjdCwgeW91IGNh
biBhbHNvIHVzZSBhIHVybApzdHJpbmcuIEZvciBleGFtcGxlOgoKYGBganMK
dmFyIGNvbm5lY3Rpb24gPSBteXNxbC5jcmVhdGVDb25uZWN0aW9uKCdteXNx
bDovL3VzZXI6cGFzc0Bob3N0L2RiP2RlYnVnPXRydWUmY2hhcnNldD1CSUc1
X0NISU5FU0VfQ0kmdGltZXpvbmU9LTA3MDAnKTsKYGBgCgpOb3RlOiBUaGUg
cXVlcnkgdmFsdWVzIGFyZSBmaXJzdCBhdHRlbXB0ZWQgdG8gYmUgcGFyc2Vk
IGFzIEpTT04sIGFuZCBpZiB0aGF0CmZhaWxzIGFzc3VtZWQgdG8gYmUgcGxh
aW50ZXh0IHN0cmluZ3MuCgojIyMgU1NMIG9wdGlvbnMKClRoZSBgc3NsYCBv
cHRpb24gaW4gdGhlIGNvbm5lY3Rpb24gb3B0aW9ucyB0YWtlcyBhIHN0cmlu
ZyBvciBhbiBvYmplY3QuIFdoZW4gZ2l2ZW4gYSBzdHJpbmcsCml0IHVzZXMg
b25lIG9mIHRoZSBwcmVkZWZpbmVkIFNTTCBwcm9maWxlcyBpbmNsdWRlZC4g
VGhlIGZvbGxvd2luZyBwcm9maWxlcyBhcmUgaW5jbHVkZWQ6CgoqIGAiQW1h
em9uIFJEUyJgOiB0aGlzIHByb2ZpbGUgaXMgZm9yIGNvbm5lY3RpbmcgdG8g
YW4gQW1hem9uIFJEUyBzZXJ2ZXIgYW5kIGNvbnRhaW5zIHRoZQogIGNlcnRp
ZmljYXRlcyBmcm9tIGh0dHBzOi8vcmRzLmFtYXpvbmF3cy5jb20vZG9jL3Jk
cy1zc2wtY2EtY2VydC5wZW0gYW5kCiAgaHR0cHM6Ly9zMy5hbWF6b25hd3Mu
Y29tL3Jkcy1kb3dubG9hZHMvcmRzLWNvbWJpbmVkLWNhLWJ1bmRsZS5wZW0K
CldoZW4gY29ubmVjdGluZyB0byBvdGhlciBzZXJ2ZXJzLCB5b3Ugd2lsbCBu
ZWVkIHRvIHByb3ZpZGUgYW4gb2JqZWN0IG9mIG9wdGlvbnMsIGluIHRoZQpz
YW1lIGZvcm1hdCBhcyBbdGxzLmNyZWF0ZVNlY3VyZUNvbnRleHRdKGh0dHBz
Oi8vbm9kZWpzLm9yZy9hcGkvdGxzLmh0bWwjdGxzX3Rsc19jcmVhdGVzZWN1
cmVjb250ZXh0X29wdGlvbnMpLgpQbGVhc2Ugbm90ZSB0aGUgYXJndW1lbnRz
IGV4cGVjdCBhIHN0cmluZyBvZiB0aGUgY2VydGlmaWNhdGUsIG5vdCBhIGZp
bGUgbmFtZSB0byB0aGUKY2VydGlmaWNhdGUuIEhlcmUgaXMgYSBzaW1wbGUg
ZXhhbXBsZToKCmBgYGpzCnZhciBjb25uZWN0aW9uID0gbXlzcWwuY3JlYXRl
Q29ubmVjdGlvbih7CiAgaG9zdCA6ICdsb2NhbGhvc3QnLAogIHNzbCAgOiB7
CiAgICBjYSA6IGZzLnJlYWRGaWxlU3luYyhfX2Rpcm5hbWUgKyAnL215c3Fs
LWNhLmNydCcpCiAgfQp9KTsKYGBgCgpZb3UgY2FuIGFsc28gY29ubmVjdCB0
byBhIE15U1FMIHNlcnZlciB3aXRob3V0IHByb3Blcmx5IHByb3ZpZGluZyB0
aGUgYXBwcm9wcmlhdGUKQ0EgdG8gdHJ1c3QuIF9Zb3Ugc2hvdWxkIG5vdCBk
byB0aGlzXy4KCmBgYGpzCnZhciBjb25uZWN0aW9uID0gbXlzcWwuY3JlYXRl
Q29ubmVjdGlvbih7CiAgaG9zdCA6ICdsb2NhbGhvc3QnLAogIHNzbCAgOiB7
CiAgICAvLyBETyBOT1QgRE8gVEhJUwogICAgLy8gc2V0IHVwIHlvdXIgY2Eg
Y29ycmVjdGx5IHRvIHRydXN0IHRoZSBjb25uZWN0aW9uCiAgICByZWplY3RV
bmF1dGhvcml6ZWQ6IGZhbHNlCiAgfQp9KTsKYGBgCgojIyMgQ29ubmVjdGlv
biBmbGFncwoKSWYsIGZvciBhbnkgcmVhc29uLCB5b3Ugd291bGQgbGlrZSB0
byBjaGFuZ2UgdGhlIGRlZmF1bHQgY29ubmVjdGlvbiBmbGFncywgeW91CmNh
biB1c2UgdGhlIGNvbm5lY3Rpb24gb3B0aW9uIGBmbGFnc2AuIFBhc3MgYSBz
dHJpbmcgd2l0aCBhIGNvbW1hIHNlcGFyYXRlZCBsaXN0Cm9mIGl0ZW1zIHRv
IGFkZCB0byB0aGUgZGVmYXVsdCBmbGFncy4gSWYgeW91IGRvbid0IHdhbnQg
YSBkZWZhdWx0IGZsYWcgdG8gYmUgdXNlZApwcmVwZW5kIHRoZSBmbGFnIHdp
dGggYSBtaW51cyBzaWduLiBUbyBhZGQgYSBmbGFnIHRoYXQgaXMgbm90IGlu
IHRoZSBkZWZhdWx0IGxpc3QsCmp1c3Qgd3JpdGUgdGhlIGZsYWcgbmFtZSwg
b3IgcHJlZml4IGl0IHdpdGggYSBwbHVzIChjYXNlIGluc2Vuc2l0aXZlKS4K
CmBgYGpzCnZhciBjb25uZWN0aW9uID0gbXlzcWwuY3JlYXRlQ29ubmVjdGlv
bih7CiAgLy8gZGlzYWJsZSBGT1VORF9ST1dTIGZsYWcsIGVuYWJsZSBJR05P
UkVfU1BBQ0UgZmxhZwogIGZsYWdzOiAnLUZPVU5EX1JPV1MsSUdOT1JFX1NQ
QUNFJwp9KTsKYGBgCgpUaGUgZm9sbG93aW5nIGZsYWdzIGFyZSBhdmFpbGFi
bGU6CgotIGBDT01QUkVTU2AgLSBFbmFibGUgcHJvdG9jb2wgY29tcHJlc3Np
b24uIFRoaXMgZmVhdHVyZSBpcyBub3QgY3VycmVudGx5IHN1cHBvcnRlZAog
IGJ5IHRoZSBOb2RlLmpzIGltcGxlbWVudGF0aW9uIHNvIGNhbm5vdCBiZSB0
dXJuZWQgb24uIChEZWZhdWx0IG9mZikKLSBgQ09OTkVDVF9XSVRIX0RCYCAt
IEFiaWxpdHkgdG8gc3BlY2lmeSB0aGUgZGF0YWJhc2Ugb24gY29ubmVjdGlv
bi4gKERlZmF1bHQgb24pCi0gYEZPVU5EX1JPV1NgIC0gU2VuZCB0aGUgZm91
bmQgcm93cyBpbnN0ZWFkIG9mIHRoZSBhZmZlY3RlZCByb3dzIGFzIGBhZmZl
Y3RlZFJvd3NgLgogIChEZWZhdWx0IG9uKQotIGBJR05PUkVfU0lHUElQRWAg
LSBEb24ndCBpc3N1ZSBTSUdQSVBFIGlmIG5ldHdvcmsgZmFpbHVyZXMuIFRo
aXMgZmxhZyBoYXMgbm8gZWZmZWN0CiAgb24gdGhpcyBOb2RlLmpzIGltcGxl
bWVudGF0aW9uLiAoRGVmYXVsdCBvbikKLSBgSUdOT1JFX1NQQUNFYCAtIExl
dCB0aGUgcGFyc2VyIGlnbm9yZSBzcGFjZXMgYmVmb3JlIHRoZSBgKGAgaW4g
cXVlcmllcy4gKERlZmF1bHQgb24pCi0gYElOVEVSQUNUSVZFYCAtIEluZGlj
YXRlcyB0byB0aGUgTXlTUUwgc2VydmVyIHRoaXMgaXMgYW4gImludGVyYWN0
aXZlIiBjbGllbnQuIFRoaXMKICB3aWxsIHVzZSB0aGUgaW50ZXJhY3RpdmUg
dGltZW91dHMgb24gdGhlIE15U1FMIHNlcnZlciBhbmQgcmVwb3J0IGFzIGlu
dGVyYWN0aXZlIGluCiAgdGhlIHByb2Nlc3MgbGlzdC4gKERlZmF1bHQgb2Zm
KQotIGBMT0NBTF9GSUxFU2AgLSBDYW4gdXNlIGBMT0FEIERBVEEgTE9DQUxg
LiAoRGVmYXVsdCBvbikKLSBgTE9OR19GTEFHYCAtIExvbmdlciBmbGFncyBp
biBQcm90b2NvbDo6Q29sdW1uRGVmaW5pdGlvbjMyMC4gKERlZmF1bHQgb24p
Ci0gYExPTkdfUEFTU1dPUkRgIC0gVXNlIHRoZSBpbXByb3ZlZCB2ZXJzaW9u
IG9mIE9sZCBQYXNzd29yZCBBdXRoZW50aWNhdGlvbi4KICAoRGVmYXVsdCBv
bikKLSBgTVVMVElfUkVTVUxUU2AgLSBDYW4gaGFuZGxlIG11bHRpcGxlIHJl
c3VsdHNldHMgZm9yIHF1ZXJpZXMuIChEZWZhdWx0IG9uKQotIGBNVUxUSV9T
VEFURU1FTlRTYCAtIFRoZSBjbGllbnQgbWF5IHNlbmQgbXVsdGlwbGUgc3Rh
dGVtZW50IHBlciBxdWVyeSBvcgogIHN0YXRlbWVudCBwcmVwYXJlIChzZXBh
cmF0ZWQgYnkgYDtgKS4gVGhpcyBmbGFnIGlzIGNvbnRyb2xsZWQgYnkgdGhl
IGNvbm5lY3Rpb24KICBvcHRpb24gYG11bHRpcGxlU3RhdGVtZW50c2AuIChE
ZWZhdWx0IG9mZikKLSBgTk9fU0NIRU1BYAotIGBPREJDYCBTcGVjaWFsIGhh
bmRsaW5nIG9mIE9EQkMgYmVoYXZpb3VyLiBUaGlzIGZsYWcgaGFzIG5vIGVm
ZmVjdCBvbiB0aGlzIE5vZGUuanMKICBpbXBsZW1lbnRhdGlvbi4gKERlZmF1
bHQgb24pCi0gYFBMVUdJTl9BVVRIYCAtIFVzZXMgdGhlIHBsdWdpbiBhdXRo
ZW50aWNhdGlvbiBtZWNoYW5pc20gd2hlbiBjb25uZWN0aW5nIHRvIHRoZQog
IE15U1FMIHNlcnZlci4gVGhpcyBmZWF0dXJlIGlzIG5vdCBjdXJyZW50bHkg
c3VwcG9ydGVkIGJ5IHRoZSBOb2RlLmpzIGltcGxlbWVudGF0aW9uCiAgc28g
Y2Fubm90IGJlIHR1cm5lZCBvbi4gKERlZmF1bHQgb2ZmKQotIGBQUk9UT0NP
TF80MWAgLSBVc2VzIHRoZSA0LjEgcHJvdG9jb2wuIChEZWZhdWx0IG9uKQot
IGBQU19NVUxUSV9SRVNVTFRTYCAtIENhbiBoYW5kbGUgbXVsdGlwbGUgcmVz
dWx0c2V0cyBmb3IgZXhlY3V0ZS4gKERlZmF1bHQgb24pCi0gYFJFTUVNQkVS
X09QVElPTlNgIC0gVGhpcyBpcyBzcGVjaWZpYyB0byB0aGUgQyBjbGllbnQs
IGFuZCBoYXMgbm8gZWZmZWN0IG9uIHRoaXMKICBOb2RlLmpzIGltcGxlbWVu
dGF0aW9uLiAoRGVmYXVsdCBvZmYpCi0gYFJFU0VSVkVEYCAtIE9sZCBmbGFn
IGZvciB0aGUgNC4xIHByb3RvY29sLiAoRGVmYXVsdCBvbikKLSBgU0VDVVJF
X0NPTk5FQ1RJT05gIC0gU3VwcG9ydCBuYXRpdmUgNC4xIGF1dGhlbnRpY2F0
aW9uLiAoRGVmYXVsdCBvbikKLSBgU1NMYCAtIFVzZSBTU0wgYWZ0ZXIgaGFu
ZHNoYWtlIHRvIGVuY3J5cHQgZGF0YSBpbiB0cmFuc3BvcnQuIFRoaXMgZmVh
dHVyZSBpcwogIGNvbnRyb2xsZWQgdGhvdWdoIHRoZSBgc3NsYCBjb25uZWN0
aW9uIG9wdGlvbiwgc28gdGhlIGZsYWcgaGFzIG5vIGVmZmVjdC4KICAoRGVm
YXVsdCBvZmYpCi0gYFNTTF9WRVJJRllfU0VSVkVSX0NFUlRgIC0gVmVyaWZ5
IHRoZSBzZXJ2ZXIgY2VydGlmaWNhdGUgZHVyaW5nIFNTTCBzZXQgdXAuIFRo
aXMKICBmZWF0dXJlIGlzIGNvbnRyb2xsZWQgdGhvdWdoIHRoZSBgc3NsLnJl
amVjdFVuYXV0aG9yaXplZGAgY29ubmVjdGlvbiBvcHRpb24sIHNvCiAgdGhl
IGZsYWcgaGFzIG5vIGVmZmVjdC4gKERlZmF1bHQgb2ZmKQotIGBUUkFOU0FD
VElPTlNgIC0gQXNrcyBmb3IgdGhlIHRyYW5zYWN0aW9uIHN0YXR1cyBmbGFn
cy4gKERlZmF1bHQgb24pCgojIyBUZXJtaW5hdGluZyBjb25uZWN0aW9ucwoK
VGhlcmUgYXJlIHR3byB3YXlzIHRvIGVuZCBhIGNvbm5lY3Rpb24uIFRlcm1p
bmF0aW5nIGEgY29ubmVjdGlvbiBncmFjZWZ1bGx5IGlzCmRvbmUgYnkgY2Fs
bGluZyB0aGUgYGVuZCgpYCBtZXRob2Q6CgpgYGBqcwpjb25uZWN0aW9uLmVu
ZChmdW5jdGlvbihlcnIpIHsKICAvLyBUaGUgY29ubmVjdGlvbiBpcyB0ZXJt
aW5hdGVkIG5vdwp9KTsKYGBgCgpUaGlzIHdpbGwgbWFrZSBzdXJlIGFsbCBw
cmV2aW91c2x5IGVucXVldWVkIHF1ZXJpZXMgYXJlIHN0aWxsIGJlZm9yZSBz
ZW5kaW5nIGEKYENPTV9RVUlUYCBwYWNrZXQgdG8gdGhlIE15U1FMIHNlcnZl
ci4gSWYgYSBmYXRhbCBlcnJvciBvY2N1cnMgYmVmb3JlIHRoZQpgQ09NX1FV
SVRgIHBhY2tldCBjYW4gYmUgc2VudCwgYW4gYGVycmAgYXJndW1lbnQgd2ls
bCBiZSBwcm92aWRlZCB0byB0aGUKY2FsbGJhY2ssIGJ1dCB0aGUgY29ubmVj
dGlvbiB3aWxsIGJlIHRlcm1pbmF0ZWQgcmVnYXJkbGVzcyBvZiB0aGF0LgoK
QW4gYWx0ZXJuYXRpdmUgd2F5IHRvIGVuZCB0aGUgY29ubmVjdGlvbiBpcyB0
byBjYWxsIHRoZSBgZGVzdHJveSgpYCBtZXRob2QuClRoaXMgd2lsbCBjYXVz
ZSBhbiBpbW1lZGlhdGUgdGVybWluYXRpb24gb2YgdGhlIHVuZGVybHlpbmcg
c29ja2V0LgpBZGRpdGlvbmFsbHkgYGRlc3Ryb3koKWAgZ3VhcmFudGVlcyB0
aGF0IG5vIG1vcmUgZXZlbnRzIG9yIGNhbGxiYWNrcyB3aWxsIGJlCnRyaWdn
ZXJlZCBmb3IgdGhlIGNvbm5lY3Rpb24uCgpgYGBqcwpjb25uZWN0aW9uLmRl
c3Ryb3koKTsKYGBgCgpVbmxpa2UgYGVuZCgpYCB0aGUgYGRlc3Ryb3koKWAg
bWV0aG9kIGRvZXMgbm90IHRha2UgYSBjYWxsYmFjayBhcmd1bWVudC4KCiMj
IFBvb2xpbmcgY29ubmVjdGlvbnMKClJhdGhlciB0aGFuIGNyZWF0aW5nIGFu
ZCBtYW5hZ2luZyBjb25uZWN0aW9ucyBvbmUtYnktb25lLCB0aGlzIG1vZHVs
ZSBhbHNvCnByb3ZpZGVzIGJ1aWx0LWluIGNvbm5lY3Rpb24gcG9vbGluZyB1
c2luZyBgbXlzcWwuY3JlYXRlUG9vbChjb25maWcpYC4KW1JlYWQgbW9yZSBh
Ym91dCBjb25uZWN0aW9uIHBvb2xpbmddKGh0dHBzOi8vZW4ud2lraXBlZGlh
Lm9yZy93aWtpL0Nvbm5lY3Rpb25fcG9vbCkuCgpDcmVhdGUgYSBwb29sIGFu
ZCB1c2UgaXQgZGlyZWN0bHk6CgpgYGBqcwp2YXIgbXlzcWwgPSByZXF1aXJl
KCdteXNxbCcpOwp2YXIgcG9vbCAgPSBteXNxbC5jcmVhdGVQb29sKHsKICBj
b25uZWN0aW9uTGltaXQgOiAxMCwKICBob3N0ICAgICAgICAgICAgOiAnZXhh
bXBsZS5vcmcnLAogIHVzZXIgICAgICAgICAgICA6ICdib2InLAogIHBhc3N3
b3JkICAgICAgICA6ICdzZWNyZXQnLAogIGRhdGFiYXNlICAgICAgICA6ICdt
eV9kYicKfSk7Cgpwb29sLnF1ZXJ5KCdTRUxFQ1QgMSArIDEgQVMgc29sdXRp
b24nLCBmdW5jdGlvbiAoZXJyb3IsIHJlc3VsdHMsIGZpZWxkcykgewogIGlm
IChlcnJvcikgdGhyb3cgZXJyb3I7CiAgY29uc29sZS5sb2coJ1RoZSBzb2x1
dGlvbiBpczogJywgcmVzdWx0c1swXS5zb2x1dGlvbik7Cn0pOwpgYGAKClRo
aXMgaXMgYSBzaG9ydGN1dCBmb3IgdGhlIGBwb29sLmdldENvbm5lY3Rpb24o
KWAgLT4gYGNvbm5lY3Rpb24ucXVlcnkoKWAgLT4KYGNvbm5lY3Rpb24ucmVs
ZWFzZSgpYCBjb2RlIGZsb3cuIFVzaW5nIGBwb29sLmdldENvbm5lY3Rpb24o
KWAgaXMgdXNlZnVsIHRvCnNoYXJlIGNvbm5lY3Rpb24gc3RhdGUgZm9yIHN1
YnNlcXVlbnQgcXVlcmllcy4gVGhpcyBpcyBiZWNhdXNlIHR3byBjYWxscyB0
bwpgcG9vbC5xdWVyeSgpYCBtYXkgdXNlIHR3byBkaWZmZXJlbnQgY29ubmVj
dGlvbnMgYW5kIHJ1biBpbiBwYXJhbGxlbC4gVGhpcyBpcwp0aGUgYmFzaWMg
c3RydWN0dXJlOgoKYGBganMKdmFyIG15c3FsID0gcmVxdWlyZSgnbXlzcWwn
KTsKdmFyIHBvb2wgID0gbXlzcWwuY3JlYXRlUG9vbCguLi4pOwoKcG9vbC5n
ZXRDb25uZWN0aW9uKGZ1bmN0aW9uKGVyciwgY29ubmVjdGlvbikgewogIGlm
IChlcnIpIHRocm93IGVycjsgLy8gbm90IGNvbm5lY3RlZCEKCiAgLy8gVXNl
IHRoZSBjb25uZWN0aW9uCiAgY29ubmVjdGlvbi5xdWVyeSgnU0VMRUNUIHNv
bWV0aGluZyBGUk9NIHNvbWV0YWJsZScsIGZ1bmN0aW9uIChlcnJvciwgcmVz
dWx0cywgZmllbGRzKSB7CiAgICAvLyBXaGVuIGRvbmUgd2l0aCB0aGUgY29u
bmVjdGlvbiwgcmVsZWFzZSBpdC4KICAgIGNvbm5lY3Rpb24ucmVsZWFzZSgp
OwoKICAgIC8vIEhhbmRsZSBlcnJvciBhZnRlciB0aGUgcmVsZWFzZS4KICAg
IGlmIChlcnJvcikgdGhyb3cgZXJyb3I7CgogICAgLy8gRG9uJ3QgdXNlIHRo
ZSBjb25uZWN0aW9uIGhlcmUsIGl0IGhhcyBiZWVuIHJldHVybmVkIHRvIHRo
ZSBwb29sLgogIH0pOwp9KTsKYGBgCgpJZiB5b3Ugd291bGQgbGlrZSB0byBj
bG9zZSB0aGUgY29ubmVjdGlvbiBhbmQgcmVtb3ZlIGl0IGZyb20gdGhlIHBv
b2wsIHVzZQpgY29ubmVjdGlvbi5kZXN0cm95KClgIGluc3RlYWQuIFRoZSBw
b29sIHdpbGwgY3JlYXRlIGEgbmV3IGNvbm5lY3Rpb24gdGhlIG5leHQKdGlt
ZSBvbmUgaXMgbmVlZGVkLgoKQ29ubmVjdGlvbnMgYXJlIGxhemlseSBjcmVh
dGVkIGJ5IHRoZSBwb29sLiBJZiB5b3UgY29uZmlndXJlIHRoZSBwb29sIHRv
IGFsbG93CnVwIHRvIDEwMCBjb25uZWN0aW9ucywgYnV0IG9ubHkgZXZlciB1
c2UgNSBzaW11bHRhbmVvdXNseSwgb25seSA1IGNvbm5lY3Rpb25zCndpbGwg
YmUgbWFkZS4gQ29ubmVjdGlvbnMgYXJlIGFsc28gY3ljbGVkIHJvdW5kLXJv
YmluIHN0eWxlLCB3aXRoIGNvbm5lY3Rpb25zCmJlaW5nIHRha2VuIGZyb20g
dGhlIHRvcCBvZiB0aGUgcG9vbCBhbmQgcmV0dXJuaW5nIHRvIHRoZSBib3R0
b20uCgpXaGVuIGEgcHJldmlvdXMgY29ubmVjdGlvbiBpcyByZXRyaWV2ZWQg
ZnJvbSB0aGUgcG9vbCwgYSBwaW5nIHBhY2tldCBpcyBzZW50CnRvIHRoZSBz
ZXJ2ZXIgdG8gY2hlY2sgaWYgdGhlIGNvbm5lY3Rpb24gaXMgc3RpbGwgZ29v
ZC4KCiMjIFBvb2wgb3B0aW9ucwoKUG9vbHMgYWNjZXB0IGFsbCB0aGUgc2Ft
ZSBbb3B0aW9ucyBhcyBhIGNvbm5lY3Rpb25dKCNjb25uZWN0aW9uLW9wdGlv
bnMpLgpXaGVuIGNyZWF0aW5nIGEgbmV3IGNvbm5lY3Rpb24sIHRoZSBvcHRp
b25zIGFyZSBzaW1wbHkgcGFzc2VkIHRvIHRoZSBjb25uZWN0aW9uCmNvbnN0
cnVjdG9yLiBJbiBhZGRpdGlvbiB0byB0aG9zZSBvcHRpb25zIHBvb2xzIGFj
Y2VwdCBhIGZldyBleHRyYXM6CgoqIGBhY3F1aXJlVGltZW91dGA6IFRoZSBt
aWxsaXNlY29uZHMgYmVmb3JlIGEgdGltZW91dCBvY2N1cnMgZHVyaW5nIHRo
ZSBjb25uZWN0aW9uCiAgYWNxdWlzaXRpb24uIFRoaXMgaXMgc2xpZ2h0bHkg
ZGlmZmVyZW50IGZyb20gYGNvbm5lY3RUaW1lb3V0YCwgYmVjYXVzZSBhY3F1
aXJpbmcKICBhIHBvb2wgY29ubmVjdGlvbiBkb2VzIG5vdCBhbHdheXMgaW52
b2x2ZSBtYWtpbmcgYSBjb25uZWN0aW9uLiBJZiBhIGNvbm5lY3Rpb24KICBy
ZXF1ZXN0IGlzIHF1ZXVlZCwgdGhlIHRpbWUgdGhlIHJlcXVlc3Qgc3BlbmRz
IGluIHRoZSBxdWV1ZSBkb2VzIG5vdCBjb3VudAogIHRvd2FyZHMgdGhpcyB0
aW1lb3V0LiAoRGVmYXVsdDogYDEwMDAwYCkKKiBgd2FpdEZvckNvbm5lY3Rp
b25zYDogRGV0ZXJtaW5lcyB0aGUgcG9vbCdzIGFjdGlvbiB3aGVuIG5vIGNv
bm5lY3Rpb25zIGFyZQogIGF2YWlsYWJsZSBhbmQgdGhlIGxpbWl0IGhhcyBi
ZWVuIHJlYWNoZWQuIElmIGB0cnVlYCwgdGhlIHBvb2wgd2lsbCBxdWV1ZSB0
aGUKICBjb25uZWN0aW9uIHJlcXVlc3QgYW5kIGNhbGwgaXQgd2hlbiBvbmUg
YmVjb21lcyBhdmFpbGFibGUuIElmIGBmYWxzZWAsIHRoZQogIHBvb2wgd2ls
bCBpbW1lZGlhdGVseSBjYWxsIGJhY2sgd2l0aCBhbiBlcnJvci4gKERlZmF1
bHQ6IGB0cnVlYCkKKiBgY29ubmVjdGlvbkxpbWl0YDogVGhlIG1heGltdW0g
bnVtYmVyIG9mIGNvbm5lY3Rpb25zIHRvIGNyZWF0ZSBhdCBvbmNlLgogIChE
ZWZhdWx0OiBgMTBgKQoqIGBxdWV1ZUxpbWl0YDogVGhlIG1heGltdW0gbnVt
YmVyIG9mIGNvbm5lY3Rpb24gcmVxdWVzdHMgdGhlIHBvb2wgd2lsbCBxdWV1
ZQogIGJlZm9yZSByZXR1cm5pbmcgYW4gZXJyb3IgZnJvbSBgZ2V0Q29ubmVj
dGlvbmAuIElmIHNldCB0byBgMGAsIHRoZXJlIGlzIG5vCiAgbGltaXQgdG8g
dGhlIG51bWJlciBvZiBxdWV1ZWQgY29ubmVjdGlvbiByZXF1ZXN0cy4gKERl
ZmF1bHQ6IGAwYCkKCiMjIFBvb2wgZXZlbnRzCgojIyMgYWNxdWlyZQoKVGhl
IHBvb2wgd2lsbCBlbWl0IGFuIGBhY3F1aXJlYCBldmVudCB3aGVuIGEgY29u
bmVjdGlvbiBpcyBhY3F1aXJlZCBmcm9tIHRoZSBwb29sLgpUaGlzIGlzIGNh
bGxlZCBhZnRlciBhbGwgYWNxdWlyaW5nIGFjdGl2aXR5IGhhcyBiZWVuIHBl
cmZvcm1lZCBvbiB0aGUgY29ubmVjdGlvbiwKcmlnaHQgYmVmb3JlIHRoZSBj
b25uZWN0aW9uIGlzIGhhbmRlZCB0byB0aGUgY2FsbGJhY2sgb2YgdGhlIGFj
cXVpcmluZyBjb2RlLgoKYGBganMKcG9vbC5vbignYWNxdWlyZScsIGZ1bmN0
aW9uIChjb25uZWN0aW9uKSB7CiAgY29uc29sZS5sb2coJ0Nvbm5lY3Rpb24g
JWQgYWNxdWlyZWQnLCBjb25uZWN0aW9uLnRocmVhZElkKTsKfSk7CmBgYAoK
IyMjIGNvbm5lY3Rpb24KClRoZSBwb29sIHdpbGwgZW1pdCBhIGBjb25uZWN0
aW9uYCBldmVudCB3aGVuIGEgbmV3IGNvbm5lY3Rpb24gaXMgbWFkZSB3aXRo
aW4gdGhlIHBvb2wuCklmIHlvdSBuZWVkIHRvIHNldCBzZXNzaW9uIHZhcmlh
YmxlcyBvbiB0aGUgY29ubmVjdGlvbiBiZWZvcmUgaXQgZ2V0cyB1c2VkLCB5
b3UgY2FuCmxpc3RlbiB0byB0aGUgYGNvbm5lY3Rpb25gIGV2ZW50LgoKYGBg
anMKcG9vbC5vbignY29ubmVjdGlvbicsIGZ1bmN0aW9uIChjb25uZWN0aW9u
KSB7CiAgY29ubmVjdGlvbi5xdWVyeSgnU0VUIFNFU1NJT04gYXV0b19pbmNy
ZW1lbnRfaW5jcmVtZW50PTEnKQp9KTsKYGBgCgojIyMgZW5xdWV1ZQoKVGhl
IHBvb2wgd2lsbCBlbWl0IGFuIGBlbnF1ZXVlYCBldmVudCB3aGVuIGEgY2Fs
bGJhY2sgaGFzIGJlZW4gcXVldWVkIHRvIHdhaXQgZm9yCmFuIGF2YWlsYWJs
ZSBjb25uZWN0aW9uLgoKYGBganMKcG9vbC5vbignZW5xdWV1ZScsIGZ1bmN0
aW9uICgpIHsKICBjb25zb2xlLmxvZygnV2FpdGluZyBmb3IgYXZhaWxhYmxl
IGNvbm5lY3Rpb24gc2xvdCcpOwp9KTsKYGBgCgojIyMgcmVsZWFzZQoKVGhl
IHBvb2wgd2lsbCBlbWl0IGEgYHJlbGVhc2VgIGV2ZW50IHdoZW4gYSBjb25u
ZWN0aW9uIGlzIHJlbGVhc2VkIGJhY2sgdG8gdGhlCnBvb2wuIFRoaXMgaXMg
Y2FsbGVkIGFmdGVyIGFsbCByZWxlYXNlIGFjdGl2aXR5IGhhcyBiZWVuIHBl
cmZvcm1lZCBvbiB0aGUgY29ubmVjdGlvbiwKc28gdGhlIGNvbm5lY3Rpb24g
d2lsbCBiZSBsaXN0ZWQgYXMgZnJlZSBhdCB0aGUgdGltZSBvZiB0aGUgZXZl
bnQuCgpgYGBqcwpwb29sLm9uKCdyZWxlYXNlJywgZnVuY3Rpb24gKGNvbm5l
Y3Rpb24pIHsKICBjb25zb2xlLmxvZygnQ29ubmVjdGlvbiAlZCByZWxlYXNl
ZCcsIGNvbm5lY3Rpb24udGhyZWFkSWQpOwp9KTsKYGBgCgojIyBDbG9zaW5n
IGFsbCB0aGUgY29ubmVjdGlvbnMgaW4gYSBwb29sCgpXaGVuIHlvdSBhcmUg
ZG9uZSB1c2luZyB0aGUgcG9vbCwgeW91IGhhdmUgdG8gZW5kIGFsbCB0aGUg
Y29ubmVjdGlvbnMgb3IgdGhlCk5vZGUuanMgZXZlbnQgbG9vcCB3aWxsIHN0
YXkgYWN0aXZlIHVudGlsIHRoZSBjb25uZWN0aW9ucyBhcmUgY2xvc2VkIGJ5
IHRoZQpNeVNRTCBzZXJ2ZXIuIFRoaXMgaXMgdHlwaWNhbGx5IGRvbmUgaWYg
dGhlIHBvb2wgaXMgdXNlZCBpbiBhIHNjcmlwdCBvciB3aGVuCnRyeWluZyB0
byBncmFjZWZ1bGx5IHNodXRkb3duIGEgc2VydmVyLiBUbyBlbmQgYWxsIHRo
ZSBjb25uZWN0aW9ucyBpbiB0aGUKcG9vbCwgdXNlIHRoZSBgZW5kYCBtZXRo
b2Qgb24gdGhlIHBvb2w6CgpgYGBqcwpwb29sLmVuZChmdW5jdGlvbiAoZXJy
KSB7CiAgLy8gYWxsIGNvbm5lY3Rpb25zIGluIHRoZSBwb29sIGhhdmUgZW5k
ZWQKfSk7CmBgYAoKVGhlIGBlbmRgIG1ldGhvZCB0YWtlcyBhbiBfb3B0aW9u
YWxfIGNhbGxiYWNrIHRoYXQgeW91IGNhbiB1c2UgdG8ga25vdyB3aGVuCmFs
bCB0aGUgY29ubmVjdGlvbnMgYXJlIGVuZGVkLgoKKipPbmNlIGBwb29sLmVu
ZGAgaXMgY2FsbGVkLCBgcG9vbC5nZXRDb25uZWN0aW9uYCBhbmQgb3RoZXIg
b3BlcmF0aW9ucwpjYW4gbm8gbG9uZ2VyIGJlIHBlcmZvcm1lZC4qKiBXYWl0
IHVudGlsIGFsbCBjb25uZWN0aW9ucyBpbiB0aGUgcG9vbCBhcmUKcmVsZWFz
ZWQgYmVmb3JlIGNhbGxpbmcgYHBvb2wuZW5kYC4gSWYgeW91IHVzZSB0aGUg
c2hvcnRjdXQgbWV0aG9kCmBwb29sLnF1ZXJ5YCwgaW4gcGxhY2Ugb2YgYHBv
b2wuZ2V0Q29ubmVjdGlvbmAg4oaSIGBjb25uZWN0aW9uLnF1ZXJ5YCDihpIK
YGNvbm5lY3Rpb24ucmVsZWFzZWAsIHdhaXQgdW50aWwgaXQgY29tcGxldGVz
LgoKYHBvb2wuZW5kYCBjYWxscyBgY29ubmVjdGlvbi5lbmRgIG9uIGV2ZXJ5
IGFjdGl2ZSBjb25uZWN0aW9uIGluIHRoZSBwb29sLgpUaGlzIHF1ZXVlcyBh
IGBRVUlUYCBwYWNrZXQgb24gdGhlIGNvbm5lY3Rpb24gYW5kIHNldHMgYSBm
bGFnIHRvIHByZXZlbnQKYHBvb2wuZ2V0Q29ubmVjdGlvbmAgZnJvbSBjcmVh
dGluZyBuZXcgY29ubmVjdGlvbnMuIEFsbCBjb21tYW5kcyAvIHF1ZXJpZXMK
YWxyZWFkeSBpbiBwcm9ncmVzcyB3aWxsIGNvbXBsZXRlLCBidXQgbmV3IGNv
bW1hbmRzIHdvbid0IGV4ZWN1dGUuCgojIyBQb29sQ2x1c3RlcgoKUG9vbENs
dXN0ZXIgcHJvdmlkZXMgbXVsdGlwbGUgaG9zdHMgY29ubmVjdGlvbi4gKGdy
b3VwICYgcmV0cnkgJiBzZWxlY3RvcikKCmBgYGpzCi8vIGNyZWF0ZQp2YXIg
cG9vbENsdXN0ZXIgPSBteXNxbC5jcmVhdGVQb29sQ2x1c3RlcigpOwoKLy8g
YWRkIGNvbmZpZ3VyYXRpb25zICh0aGUgY29uZmlnIGlzIGEgcG9vbCBjb25m
aWcgb2JqZWN0KQpwb29sQ2x1c3Rlci5hZGQoY29uZmlnKTsgLy8gYWRkIGNv
bmZpZ3VyYXRpb24gd2l0aCBhdXRvbWF0aWMgbmFtZQpwb29sQ2x1c3Rlci5h
ZGQoJ01BU1RFUicsIG1hc3RlckNvbmZpZyk7IC8vIGFkZCBhIG5hbWVkIGNv
bmZpZ3VyYXRpb24KcG9vbENsdXN0ZXIuYWRkKCdTTEFWRTEnLCBzbGF2ZTFD
b25maWcpOwpwb29sQ2x1c3Rlci5hZGQoJ1NMQVZFMicsIHNsYXZlMkNvbmZp
Zyk7CgovLyByZW1vdmUgY29uZmlndXJhdGlvbnMKcG9vbENsdXN0ZXIucmVt
b3ZlKCdTTEFWRTInKTsgLy8gQnkgbm9kZUlkCnBvb2xDbHVzdGVyLnJlbW92
ZSgnU0xBVkUqJyk7IC8vIEJ5IHRhcmdldCBncm91cCA6IFNMQVZFMS0yCgov
LyBUYXJnZXQgR3JvdXAgOiBBTEwoYW5vbnltb3VzLCBNQVNURVIsIFNMQVZF
MS0yKSwgU2VsZWN0b3IgOiByb3VuZC1yb2JpbihkZWZhdWx0KQpwb29sQ2x1
c3Rlci5nZXRDb25uZWN0aW9uKGZ1bmN0aW9uIChlcnIsIGNvbm5lY3Rpb24p
IHt9KTsKCi8vIFRhcmdldCBHcm91cCA6IE1BU1RFUiwgU2VsZWN0b3IgOiBy
b3VuZC1yb2Jpbgpwb29sQ2x1c3Rlci5nZXRDb25uZWN0aW9uKCdNQVNURVIn
LCBmdW5jdGlvbiAoZXJyLCBjb25uZWN0aW9uKSB7fSk7CgovLyBUYXJnZXQg
R3JvdXAgOiBTTEFWRTEtMiwgU2VsZWN0b3IgOiBvcmRlcgovLyBJZiBjYW4n
dCBjb25uZWN0IHRvIFNMQVZFMSwgcmV0dXJuIFNMQVZFMi4gKHJlbW92ZSBT
TEFWRTEgaW4gdGhlIGNsdXN0ZXIpCnBvb2xDbHVzdGVyLm9uKCdyZW1vdmUn
LCBmdW5jdGlvbiAobm9kZUlkKSB7CiAgY29uc29sZS5sb2coJ1JFTU9WRUQg
Tk9ERSA6ICcgKyBub2RlSWQpOyAvLyBub2RlSWQgPSBTTEFWRTEKfSk7Cgov
LyBBIHBhdHRlcm4gY2FuIGJlIHBhc3NlZCB3aXRoICogIGFzIHdpbGRjYXJk
CnBvb2xDbHVzdGVyLmdldENvbm5lY3Rpb24oJ1NMQVZFKicsICdPUkRFUics
IGZ1bmN0aW9uIChlcnIsIGNvbm5lY3Rpb24pIHt9KTsKCi8vIFRoZSBwYXR0
ZXJuIGNhbiBhbHNvIGJlIGEgcmVndWxhciBleHByZXNzaW9uCnBvb2xDbHVz
dGVyLmdldENvbm5lY3Rpb24oL15TTEFWRVsxMl0kLywgZnVuY3Rpb24gKGVy
ciwgY29ubmVjdGlvbikge30pOwoKLy8gb2YgbmFtZXNwYWNlIDogb2YocGF0
dGVybiwgc2VsZWN0b3IpCnBvb2xDbHVzdGVyLm9mKCcqJykuZ2V0Q29ubmVj
dGlvbihmdW5jdGlvbiAoZXJyLCBjb25uZWN0aW9uKSB7fSk7Cgp2YXIgcG9v
bCA9IHBvb2xDbHVzdGVyLm9mKCdTTEFWRSonLCAnUkFORE9NJyk7CnBvb2wu
Z2V0Q29ubmVjdGlvbihmdW5jdGlvbiAoZXJyLCBjb25uZWN0aW9uKSB7fSk7
CnBvb2wuZ2V0Q29ubmVjdGlvbihmdW5jdGlvbiAoZXJyLCBjb25uZWN0aW9u
KSB7fSk7CnBvb2wucXVlcnkoZnVuY3Rpb24gKGVycm9yLCByZXN1bHRzLCBm
aWVsZHMpIHt9KTsKCi8vIGNsb3NlIGFsbCBjb25uZWN0aW9ucwpwb29sQ2x1
c3Rlci5lbmQoZnVuY3Rpb24gKGVycikgewogIC8vIGFsbCBjb25uZWN0aW9u
cyBpbiB0aGUgcG9vbCBjbHVzdGVyIGhhdmUgZW5kZWQKfSk7CmBgYAoKIyMj
IFBvb2xDbHVzdGVyIG9wdGlvbnMKCiogYGNhblJldHJ5YDogSWYgYHRydWVg
LCBgUG9vbENsdXN0ZXJgIHdpbGwgYXR0ZW1wdCB0byByZWNvbm5lY3Qgd2hl
biBjb25uZWN0aW9uIGZhaWxzLiAoRGVmYXVsdDogYHRydWVgKQoqIGByZW1v
dmVOb2RlRXJyb3JDb3VudGA6IElmIGNvbm5lY3Rpb24gZmFpbHMsIG5vZGUn
cyBgZXJyb3JDb3VudGAgaW5jcmVhc2VzLgogIFdoZW4gYGVycm9yQ291bnRg
IGlzIGdyZWF0ZXIgdGhhbiBgcmVtb3ZlTm9kZUVycm9yQ291bnRgLCByZW1v
dmUgYSBub2RlIGluIHRoZSBgUG9vbENsdXN0ZXJgLiAoRGVmYXVsdDogYDVg
KQoqIGByZXN0b3JlTm9kZVRpbWVvdXRgOiBJZiBjb25uZWN0aW9uIGZhaWxz
LCBzcGVjaWZpZXMgdGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMKICBiZWZv
cmUgYW5vdGhlciBjb25uZWN0aW9uIGF0dGVtcHQgd2lsbCBiZSBtYWRlLiBJ
ZiBzZXQgdG8gYDBgLCB0aGVuIG5vZGUgd2lsbCBiZQogIHJlbW92ZWQgaW5z
dGVhZCBhbmQgbmV2ZXIgcmUtdXNlZC4gKERlZmF1bHQ6IGAwYCkKKiBgZGVm
YXVsdFNlbGVjdG9yYDogVGhlIGRlZmF1bHQgc2VsZWN0b3IuIChEZWZhdWx0
OiBgUlJgKQogICogYFJSYDogU2VsZWN0IG9uZSBhbHRlcm5hdGVseS4gKFJv
dW5kLVJvYmluKQogICogYFJBTkRPTWA6IFNlbGVjdCB0aGUgbm9kZSBieSBy
YW5kb20gZnVuY3Rpb24uCiAgKiBgT1JERVJgOiBTZWxlY3QgdGhlIGZpcnN0
IG5vZGUgYXZhaWxhYmxlIHVuY29uZGl0aW9uYWxseS4KCmBgYGpzCnZhciBj
bHVzdGVyQ29uZmlnID0gewogIHJlbW92ZU5vZGVFcnJvckNvdW50OiAxLCAv
LyBSZW1vdmUgdGhlIG5vZGUgaW1tZWRpYXRlbHkgd2hlbiBjb25uZWN0aW9u
IGZhaWxzLgogIGRlZmF1bHRTZWxlY3RvcjogJ09SREVSJwp9OwoKdmFyIHBv
b2xDbHVzdGVyID0gbXlzcWwuY3JlYXRlUG9vbENsdXN0ZXIoY2x1c3RlckNv
bmZpZyk7CmBgYAoKIyMgU3dpdGNoaW5nIHVzZXJzIGFuZCBhbHRlcmluZyBj
b25uZWN0aW9uIHN0YXRlCgpNeVNRTCBvZmZlcnMgYSBjaGFuZ2VVc2VyIGNv
bW1hbmQgdGhhdCBhbGxvd3MgeW91IHRvIGFsdGVyIHRoZSBjdXJyZW50IHVz
ZXIgYW5kCm90aGVyIGFzcGVjdHMgb2YgdGhlIGNvbm5lY3Rpb24gd2l0aG91
dCBzaHV0dGluZyBkb3duIHRoZSB1bmRlcmx5aW5nIHNvY2tldDoKCmBgYGpz
CmNvbm5lY3Rpb24uY2hhbmdlVXNlcih7dXNlciA6ICdqb2huJ30sIGZ1bmN0
aW9uKGVycikgewogIGlmIChlcnIpIHRocm93IGVycjsKfSk7CmBgYAoKVGhl
IGF2YWlsYWJsZSBvcHRpb25zIGZvciB0aGlzIGZlYXR1cmUgYXJlOgoKKiBg
dXNlcmA6IFRoZSBuYW1lIG9mIHRoZSBuZXcgdXNlciAoZGVmYXVsdHMgdG8g
dGhlIHByZXZpb3VzIG9uZSkuCiogYHBhc3N3b3JkYDogVGhlIHBhc3N3b3Jk
IG9mIHRoZSBuZXcgdXNlciAoZGVmYXVsdHMgdG8gdGhlIHByZXZpb3VzIG9u
ZSkuCiogYGNoYXJzZXRgOiBUaGUgbmV3IGNoYXJzZXQgKGRlZmF1bHRzIHRv
IHRoZSBwcmV2aW91cyBvbmUpLgoqIGBkYXRhYmFzZWA6IFRoZSBuZXcgZGF0
YWJhc2UgKGRlZmF1bHRzIHRvIHRoZSBwcmV2aW91cyBvbmUpLgoKQSBzb21l
dGltZXMgdXNlZnVsIHNpZGUgZWZmZWN0IG9mIHRoaXMgZnVuY3Rpb25hbGl0
eSBpcyB0aGF0IHRoaXMgZnVuY3Rpb24gYWxzbwpyZXNldHMgYW55IGNvbm5l
Y3Rpb24gc3RhdGUgKHZhcmlhYmxlcywgdHJhbnNhY3Rpb25zLCBldGMuKS4K
CkVycm9ycyBlbmNvdW50ZXJlZCBkdXJpbmcgdGhpcyBvcGVyYXRpb24gYXJl
IHRyZWF0ZWQgYXMgZmF0YWwgY29ubmVjdGlvbiBlcnJvcnMKYnkgdGhpcyBt
b2R1bGUuCgojIyBTZXJ2ZXIgZGlzY29ubmVjdHMKCllvdSBtYXkgbG9zZSB0
aGUgY29ubmVjdGlvbiB0byBhIE15U1FMIHNlcnZlciBkdWUgdG8gbmV0d29y
ayBwcm9ibGVtcywgdGhlCnNlcnZlciB0aW1pbmcgeW91IG91dCwgdGhlIHNl
cnZlciBiZWluZyByZXN0YXJ0ZWQsIG9yIGNyYXNoaW5nLiBBbGwgb2YgdGhl
c2UKZXZlbnRzIGFyZSBjb25zaWRlcmVkIGZhdGFsIGVycm9ycywgYW5kIHdp
bGwgaGF2ZSB0aGUgYGVyci5jb2RlID0KJ1BST1RPQ09MX0NPTk5FQ1RJT05f
TE9TVCdgLiAgU2VlIHRoZSBbRXJyb3IgSGFuZGxpbmddKCNlcnJvci1oYW5k
bGluZykgc2VjdGlvbgpmb3IgbW9yZSBpbmZvcm1hdGlvbi4KClJlLWNvbm5l
Y3RpbmcgYSBjb25uZWN0aW9uIGlzIGRvbmUgYnkgZXN0YWJsaXNoaW5nIGEg
bmV3IGNvbm5lY3Rpb24uIE9uY2UKdGVybWluYXRlZCwgYW4gZXhpc3Rpbmcg
Y29ubmVjdGlvbiBvYmplY3QgY2Fubm90IGJlIHJlLWNvbm5lY3RlZCBieSBk
ZXNpZ24uCgpXaXRoIFBvb2wsIGRpc2Nvbm5lY3RlZCBjb25uZWN0aW9ucyB3
aWxsIGJlIHJlbW92ZWQgZnJvbSB0aGUgcG9vbCBmcmVlaW5nIHVwCnNwYWNl
IGZvciBhIG5ldyBjb25uZWN0aW9uIHRvIGJlIGNyZWF0ZWQgb24gdGhlIG5l
eHQgZ2V0Q29ubmVjdGlvbiBjYWxsLgoKIyMgUGVyZm9ybWluZyBxdWVyaWVz
CgpUaGUgbW9zdCBiYXNpYyB3YXkgdG8gcGVyZm9ybSBhIHF1ZXJ5IGlzIHRv
IGNhbGwgdGhlIGAucXVlcnkoKWAgbWV0aG9kIG9uIGFuIG9iamVjdAoobGlr
ZSBhIGBDb25uZWN0aW9uYCwgYFBvb2xgLCBvciBgUG9vbE5hbWVzcGFjZWAg
aW5zdGFuY2UpLgoKVGhlIHNpbXBsZXN0IGZvcm0gb2YgLmBxdWVyeSgpYCBp
cyBgLnF1ZXJ5KHNxbFN0cmluZywgY2FsbGJhY2spYCwgd2hlcmUgYSBTUUwg
c3RyaW5nCmlzIHRoZSBmaXJzdCBhcmd1bWVudCBhbmQgdGhlIHNlY29uZCBp
cyBhIGNhbGxiYWNrOgoKYGBganMKY29ubmVjdGlvbi5xdWVyeSgnU0VMRUNU
ICogRlJPTSBgYm9va3NgIFdIRVJFIGBhdXRob3JgID0gIkRhdmlkIicsIGZ1
bmN0aW9uIChlcnJvciwgcmVzdWx0cywgZmllbGRzKSB7CiAgLy8gZXJyb3Ig
d2lsbCBiZSBhbiBFcnJvciBpZiBvbmUgb2NjdXJyZWQgZHVyaW5nIHRoZSBx
dWVyeQogIC8vIHJlc3VsdHMgd2lsbCBjb250YWluIHRoZSByZXN1bHRzIG9m
IHRoZSBxdWVyeQogIC8vIGZpZWxkcyB3aWxsIGNvbnRhaW4gaW5mb3JtYXRp
b24gYWJvdXQgdGhlIHJldHVybmVkIHJlc3VsdHMgZmllbGRzIChpZiBhbnkp
Cn0pOwpgYGAKClRoZSBzZWNvbmQgZm9ybSBgLnF1ZXJ5KHNxbFN0cmluZywg
dmFsdWVzLCBjYWxsYmFjaylgIGNvbWVzIHdoZW4gdXNpbmcKcGxhY2Vob2xk
ZXIgdmFsdWVzIChzZWUgW2VzY2FwaW5nIHF1ZXJ5IHZhbHVlc10oI2VzY2Fw
aW5nLXF1ZXJ5LXZhbHVlcykpOgoKYGBganMKY29ubmVjdGlvbi5xdWVyeSgn
U0VMRUNUICogRlJPTSBgYm9va3NgIFdIRVJFIGBhdXRob3JgID0gPycsIFsn
RGF2aWQnXSwgZnVuY3Rpb24gKGVycm9yLCByZXN1bHRzLCBmaWVsZHMpIHsK
ICAvLyBlcnJvciB3aWxsIGJlIGFuIEVycm9yIGlmIG9uZSBvY2N1cnJlZCBk
dXJpbmcgdGhlIHF1ZXJ5CiAgLy8gcmVzdWx0cyB3aWxsIGNvbnRhaW4gdGhl
IHJlc3VsdHMgb2YgdGhlIHF1ZXJ5CiAgLy8gZmllbGRzIHdpbGwgY29udGFp
biBpbmZvcm1hdGlvbiBhYm91dCB0aGUgcmV0dXJuZWQgcmVzdWx0cyBmaWVs
ZHMgKGlmIGFueSkKfSk7CmBgYAoKVGhlIHRoaXJkIGZvcm0gYC5xdWVyeShv
cHRpb25zLCBjYWxsYmFjaylgIGNvbWVzIHdoZW4gdXNpbmcgdmFyaW91cyBh
ZHZhbmNlZApvcHRpb25zIG9uIHRoZSBxdWVyeSwgbGlrZSBbZXNjYXBpbmcg
cXVlcnkgdmFsdWVzXSgjZXNjYXBpbmctcXVlcnktdmFsdWVzKSwKW2pvaW5z
IHdpdGggb3ZlcmxhcHBpbmcgY29sdW1uIG5hbWVzXSgjam9pbnMtd2l0aC1v
dmVybGFwcGluZy1jb2x1bW4tbmFtZXMpLApbdGltZW91dHNdKCN0aW1lb3V0
KSwgYW5kIFt0eXBlIGNhc3RpbmddKCN0eXBlLWNhc3RpbmcpLgoKYGBganMK
Y29ubmVjdGlvbi5xdWVyeSh7CiAgc3FsOiAnU0VMRUNUICogRlJPTSBgYm9v
a3NgIFdIRVJFIGBhdXRob3JgID0gPycsCiAgdGltZW91dDogNDAwMDAsIC8v
IDQwcwogIHZhbHVlczogWydEYXZpZCddCn0sIGZ1bmN0aW9uIChlcnJvciwg
cmVzdWx0cywgZmllbGRzKSB7CiAgLy8gZXJyb3Igd2lsbCBiZSBhbiBFcnJv
ciBpZiBvbmUgb2NjdXJyZWQgZHVyaW5nIHRoZSBxdWVyeQogIC8vIHJlc3Vs
dHMgd2lsbCBjb250YWluIHRoZSByZXN1bHRzIG9mIHRoZSBxdWVyeQogIC8v
IGZpZWxkcyB3aWxsIGNvbnRhaW4gaW5mb3JtYXRpb24gYWJvdXQgdGhlIHJl
dHVybmVkIHJlc3VsdHMgZmllbGRzIChpZiBhbnkpCn0pOwpgYGAKCk5vdGUg
dGhhdCBhIGNvbWJpbmF0aW9uIG9mIHRoZSBzZWNvbmQgYW5kIHRoaXJkIGZv
cm1zIGNhbiBiZSB1c2VkIHdoZXJlIHRoZQpwbGFjZWhvbGRlciB2YWx1ZXMg
YXJlIHBhc3NlZCBhcyBhbiBhcmd1bWVudCBhbmQgbm90IGluIHRoZSBvcHRp
b25zIG9iamVjdC4KVGhlIGB2YWx1ZXNgIGFyZ3VtZW50IHdpbGwgb3ZlcnJp
ZGUgdGhlIGB2YWx1ZXNgIGluIHRoZSBvcHRpb24gb2JqZWN0LgoKYGBganMK
Y29ubmVjdGlvbi5xdWVyeSh7CiAgICBzcWw6ICdTRUxFQ1QgKiBGUk9NIGBi
b29rc2AgV0hFUkUgYGF1dGhvcmAgPSA/JywKICAgIHRpbWVvdXQ6IDQwMDAw
LCAvLyA0MHMKICB9LAogIFsnRGF2aWQnXSwKICBmdW5jdGlvbiAoZXJyb3Is
IHJlc3VsdHMsIGZpZWxkcykgewogICAgLy8gZXJyb3Igd2lsbCBiZSBhbiBF
cnJvciBpZiBvbmUgb2NjdXJyZWQgZHVyaW5nIHRoZSBxdWVyeQogICAgLy8g
cmVzdWx0cyB3aWxsIGNvbnRhaW4gdGhlIHJlc3VsdHMgb2YgdGhlIHF1ZXJ5
CiAgICAvLyBmaWVsZHMgd2lsbCBjb250YWluIGluZm9ybWF0aW9uIGFib3V0
IHRoZSByZXR1cm5lZCByZXN1bHRzIGZpZWxkcyAoaWYgYW55KQogIH0KKTsK
YGBgCgpJZiB0aGUgcXVlcnkgb25seSBoYXMgYSBzaW5nbGUgcmVwbGFjZW1l
bnQgY2hhcmFjdGVyIChgP2ApLCBhbmQgdGhlIHZhbHVlIGlzCm5vdCBgbnVs
bGAsIGB1bmRlZmluZWRgLCBvciBhbiBhcnJheSwgaXQgY2FuIGJlIHBhc3Nl
ZCBkaXJlY3RseSBhcyB0aGUgc2Vjb25kCmFyZ3VtZW50IHRvIGAucXVlcnlg
OgoKYGBganMKY29ubmVjdGlvbi5xdWVyeSgKICAnU0VMRUNUICogRlJPTSBg
Ym9va3NgIFdIRVJFIGBhdXRob3JgID0gPycsCiAgJ0RhdmlkJywKICBmdW5j
dGlvbiAoZXJyb3IsIHJlc3VsdHMsIGZpZWxkcykgewogICAgLy8gZXJyb3Ig
d2lsbCBiZSBhbiBFcnJvciBpZiBvbmUgb2NjdXJyZWQgZHVyaW5nIHRoZSBx
dWVyeQogICAgLy8gcmVzdWx0cyB3aWxsIGNvbnRhaW4gdGhlIHJlc3VsdHMg
b2YgdGhlIHF1ZXJ5CiAgICAvLyBmaWVsZHMgd2lsbCBjb250YWluIGluZm9y
bWF0aW9uIGFib3V0IHRoZSByZXR1cm5lZCByZXN1bHRzIGZpZWxkcyAoaWYg
YW55KQogIH0KKTsKYGBgCgojIyBFc2NhcGluZyBxdWVyeSB2YWx1ZXMKCioq
Q2F1dGlvbioqIFRoZXNlIG1ldGhvZHMgb2YgZXNjYXBpbmcgdmFsdWVzIG9u
bHkgd29ya3Mgd2hlbiB0aGUKW05PX0JBQ0tTTEFTSF9FU0NBUEVTXShodHRw
czovL2Rldi5teXNxbC5jb20vZG9jL3JlZm1hbi81LjcvZW4vc3FsLW1vZGUu
aHRtbCNzcWxtb2RlX25vX2JhY2tzbGFzaF9lc2NhcGVzKQpTUUwgbW9kZSBp
cyBkaXNhYmxlZCAod2hpY2ggaXMgdGhlIGRlZmF1bHQgc3RhdGUgZm9yIE15
U1FMIHNlcnZlcnMpLgoKSW4gb3JkZXIgdG8gYXZvaWQgU1FMIEluamVjdGlv
biBhdHRhY2tzLCB5b3Ugc2hvdWxkIGFsd2F5cyBlc2NhcGUgYW55IHVzZXIK
cHJvdmlkZWQgZGF0YSBiZWZvcmUgdXNpbmcgaXQgaW5zaWRlIGEgU1FMIHF1
ZXJ5LiBZb3UgY2FuIGRvIHNvIHVzaW5nIHRoZQpgbXlzcWwuZXNjYXBlKClg
LCBgY29ubmVjdGlvbi5lc2NhcGUoKWAgb3IgYHBvb2wuZXNjYXBlKClgIG1l
dGhvZHM6CgpgYGBqcwp2YXIgdXNlcklkID0gJ3NvbWUgdXNlciBwcm92aWRl
ZCB2YWx1ZSc7CnZhciBzcWwgICAgPSAnU0VMRUNUICogRlJPTSB1c2VycyBX
SEVSRSBpZCA9ICcgKyBjb25uZWN0aW9uLmVzY2FwZSh1c2VySWQpOwpjb25u
ZWN0aW9uLnF1ZXJ5KHNxbCwgZnVuY3Rpb24gKGVycm9yLCByZXN1bHRzLCBm
aWVsZHMpIHsKICBpZiAoZXJyb3IpIHRocm93IGVycm9yOwogIC8vIC4uLgp9
KTsKYGBgCgpBbHRlcm5hdGl2ZWx5LCB5b3UgY2FuIHVzZSBgP2AgY2hhcmFj
dGVycyBhcyBwbGFjZWhvbGRlcnMgZm9yIHZhbHVlcyB5b3Ugd291bGQKbGlr
ZSB0byBoYXZlIGVzY2FwZWQgbGlrZSB0aGlzOgoKYGBganMKY29ubmVjdGlv
bi5xdWVyeSgnU0VMRUNUICogRlJPTSB1c2VycyBXSEVSRSBpZCA9ID8nLCBb
dXNlcklkXSwgZnVuY3Rpb24gKGVycm9yLCByZXN1bHRzLCBmaWVsZHMpIHsK
ICBpZiAoZXJyb3IpIHRocm93IGVycm9yOwogIC8vIC4uLgp9KTsKYGBgCgpN
dWx0aXBsZSBwbGFjZWhvbGRlcnMgYXJlIG1hcHBlZCB0byB2YWx1ZXMgaW4g
dGhlIHNhbWUgb3JkZXIgYXMgcGFzc2VkLiBGb3IgZXhhbXBsZSwKaW4gdGhl
IGZvbGxvd2luZyBxdWVyeSBgZm9vYCBlcXVhbHMgYGFgLCBgYmFyYCBlcXVh
bHMgYGJgLCBgYmF6YCBlcXVhbHMgYGNgLCBhbmQKYGlkYCB3aWxsIGJlIGB1
c2VySWRgOgoKYGBganMKY29ubmVjdGlvbi5xdWVyeSgnVVBEQVRFIHVzZXJz
IFNFVCBmb28gPSA/LCBiYXIgPSA/LCBiYXogPSA/IFdIRVJFIGlkID0gPycs
IFsnYScsICdiJywgJ2MnLCB1c2VySWRdLCBmdW5jdGlvbiAoZXJyb3IsIHJl
c3VsdHMsIGZpZWxkcykgewogIGlmIChlcnJvcikgdGhyb3cgZXJyb3I7CiAg
Ly8gLi4uCn0pOwpgYGAKClRoaXMgbG9va3Mgc2ltaWxhciB0byBwcmVwYXJl
ZCBzdGF0ZW1lbnRzIGluIE15U1FMLCBob3dldmVyIGl0IHJlYWxseSBqdXN0
IHVzZXMKdGhlIHNhbWUgYGNvbm5lY3Rpb24uZXNjYXBlKClgIG1ldGhvZCBp
bnRlcm5hbGx5LgoKKipDYXV0aW9uKiogVGhpcyBhbHNvIGRpZmZlcnMgZnJv
bSBwcmVwYXJlZCBzdGF0ZW1lbnRzIGluIHRoYXQgYWxsIGA/YCBhcmUKcmVw
bGFjZWQsIGV2ZW4gdGhvc2UgY29udGFpbmVkIGluIGNvbW1lbnRzIGFuZCBz
dHJpbmdzLgoKRGlmZmVyZW50IHZhbHVlIHR5cGVzIGFyZSBlc2NhcGVkIGRp
ZmZlcmVudGx5LCBoZXJlIGlzIGhvdzoKCiogTnVtYmVycyBhcmUgbGVmdCB1
bnRvdWNoZWQKKiBCb29sZWFucyBhcmUgY29udmVydGVkIHRvIGB0cnVlYCAv
IGBmYWxzZWAKKiBEYXRlIG9iamVjdHMgYXJlIGNvbnZlcnRlZCB0byBgJ1lZ
WVktbW0tZGQgSEg6aWk6c3MnYCBzdHJpbmdzCiogQnVmZmVycyBhcmUgY29u
dmVydGVkIHRvIGhleCBzdHJpbmdzLCBlLmcuIGBYJzBmYTUnYAoqIFN0cmlu
Z3MgYXJlIHNhZmVseSBlc2NhcGVkCiogQXJyYXlzIGFyZSB0dXJuZWQgaW50
byBsaXN0LCBlLmcuIGBbJ2EnLCAnYiddYCB0dXJucyBpbnRvIGAnYScsICdi
J2AKKiBOZXN0ZWQgYXJyYXlzIGFyZSB0dXJuZWQgaW50byBncm91cGVkIGxp
c3RzIChmb3IgYnVsayBpbnNlcnRzKSwgZS5nLiBgW1snYScsCiAgJ2InXSwg
WydjJywgJ2QnXV1gIHR1cm5zIGludG8gYCgnYScsICdiJyksICgnYycsICdk
JylgCiogT2JqZWN0cyB0aGF0IGhhdmUgYSBgdG9TcWxTdHJpbmdgIG1ldGhv
ZCB3aWxsIGhhdmUgYC50b1NxbFN0cmluZygpYCBjYWxsZWQKICBhbmQgdGhl
IHJldHVybmVkIHZhbHVlIGlzIHVzZWQgYXMgdGhlIHJhdyBTUUwuCiogT2Jq
ZWN0cyBhcmUgdHVybmVkIGludG8gYGtleSA9ICd2YWwnYCBwYWlycyBmb3Ig
ZWFjaCBlbnVtZXJhYmxlIHByb3BlcnR5IG9uCiAgdGhlIG9iamVjdC4gSWYg
dGhlIHByb3BlcnR5J3MgdmFsdWUgaXMgYSBmdW5jdGlvbiwgaXQgaXMgc2tp
cHBlZDsgaWYgdGhlCiAgcHJvcGVydHkncyB2YWx1ZSBpcyBhbiBvYmplY3Qs
IHRvU3RyaW5nKCkgaXMgY2FsbGVkIG9uIGl0IGFuZCB0aGUgcmV0dXJuZWQK
ICB2YWx1ZSBpcyB1c2VkLgoqIGB1bmRlZmluZWRgIC8gYG51bGxgIGFyZSBj
b252ZXJ0ZWQgdG8gYE5VTExgCiogYE5hTmAgLyBgSW5maW5pdHlgIGFyZSBs
ZWZ0IGFzLWlzLiBNeVNRTCBkb2VzIG5vdCBzdXBwb3J0IHRoZXNlLCBhbmQg
dHJ5aW5nCiAgdG8gaW5zZXJ0IHRoZW0gYXMgdmFsdWVzIHdpbGwgdHJpZ2dl
ciBNeVNRTCBlcnJvcnMgdW50aWwgdGhleSBpbXBsZW1lbnQKICBzdXBwb3J0
LgoKVGhpcyBlc2NhcGluZyBhbGxvd3MgeW91IHRvIGRvIG5lYXQgdGhpbmdz
IGxpa2UgdGhpczoKCmBgYGpzCnZhciBwb3N0ICA9IHtpZDogMSwgdGl0bGU6
ICdIZWxsbyBNeVNRTCd9Owp2YXIgcXVlcnkgPSBjb25uZWN0aW9uLnF1ZXJ5
KCdJTlNFUlQgSU5UTyBwb3N0cyBTRVQgPycsIHBvc3QsIGZ1bmN0aW9uIChl
cnJvciwgcmVzdWx0cywgZmllbGRzKSB7CiAgaWYgKGVycm9yKSB0aHJvdyBl
cnJvcjsKICAvLyBOZWF0IQp9KTsKY29uc29sZS5sb2cocXVlcnkuc3FsKTsg
Ly8gSU5TRVJUIElOVE8gcG9zdHMgU0VUIGBpZGAgPSAxLCBgdGl0bGVgID0g
J0hlbGxvIE15U1FMJwpgYGAKCkFuZCB0aGUgYHRvU3FsU3RyaW5nYCBtZXRo
b2QgYWxsb3dzIHlvdSB0byBmb3JtIGNvbXBsZXggcXVlcmllcyB3aXRoIGZ1
bmN0aW9uczoKCmBgYGpzCnZhciBDVVJSRU5UX1RJTUVTVEFNUCA9IHsgdG9T
cWxTdHJpbmc6IGZ1bmN0aW9uKCkgeyByZXR1cm4gJ0NVUlJFTlRfVElNRVNU
QU1QKCknOyB9IH07CnZhciBzcWwgPSBteXNxbC5mb3JtYXQoJ1VQREFURSBw
b3N0cyBTRVQgbW9kaWZpZWQgPSA/IFdIRVJFIGlkID0gPycsIFtDVVJSRU5U
X1RJTUVTVEFNUCwgNDJdKTsKY29uc29sZS5sb2coc3FsKTsgLy8gVVBEQVRF
IHBvc3RzIFNFVCBtb2RpZmllZCA9IENVUlJFTlRfVElNRVNUQU1QKCkgV0hF
UkUgaWQgPSA0MgpgYGAKClRvIGdlbmVyYXRlIG9iamVjdHMgd2l0aCBhIGB0
b1NxbFN0cmluZ2AgbWV0aG9kLCB0aGUgYG15c3FsLnJhdygpYCBtZXRob2Qg
Y2FuCmJlIHVzZWQuIFRoaXMgY3JlYXRlcyBhbiBvYmplY3QgdGhhdCB3aWxs
IGJlIGxlZnQgdW4tdG91Y2hlZCB3aGVuIHVzaW5nIGluIGEgYD9gCnBsYWNl
aG9sZGVyLCB1c2VmdWwgZm9yIHVzaW5nIGZ1bmN0aW9ucyBhcyBkeW5hbWlj
IHZhbHVlczoKCioqQ2F1dGlvbioqIFRoZSBzdHJpbmcgcHJvdmlkZWQgdG8g
YG15c3FsLnJhdygpYCB3aWxsIHNraXAgYWxsIGVzY2FwaW5nCmZ1bmN0aW9u
cyB3aGVuIHVzZWQsIHNvIGJlIGNhcmVmdWwgd2hlbiBwYXNzaW5nIGluIHVu
dmFsaWRhdGVkIGlucHV0LgoKYGBganMKdmFyIENVUlJFTlRfVElNRVNUQU1Q
ID0gbXlzcWwucmF3KCdDVVJSRU5UX1RJTUVTVEFNUCgpJyk7CnZhciBzcWwg
PSBteXNxbC5mb3JtYXQoJ1VQREFURSBwb3N0cyBTRVQgbW9kaWZpZWQgPSA/
IFdIRVJFIGlkID0gPycsIFtDVVJSRU5UX1RJTUVTVEFNUCwgNDJdKTsKY29u
c29sZS5sb2coc3FsKTsgLy8gVVBEQVRFIHBvc3RzIFNFVCBtb2RpZmllZCA9
IENVUlJFTlRfVElNRVNUQU1QKCkgV0hFUkUgaWQgPSA0MgpgYGAKCklmIHlv
dSBmZWVsIHRoZSBuZWVkIHRvIGVzY2FwZSBxdWVyaWVzIGJ5IHlvdXJzZWxm
LCB5b3UgY2FuIGFsc28gdXNlIHRoZSBlc2NhcGluZwpmdW5jdGlvbiBkaXJl
Y3RseToKCmBgYGpzCnZhciBxdWVyeSA9ICJTRUxFQ1QgKiBGUk9NIHBvc3Rz
IFdIRVJFIHRpdGxlPSIgKyBteXNxbC5lc2NhcGUoIkhlbGxvIE15U1FMIik7
Cgpjb25zb2xlLmxvZyhxdWVyeSk7IC8vIFNFTEVDVCAqIEZST00gcG9zdHMg
V0hFUkUgdGl0bGU9J0hlbGxvIE15U1FMJwpgYGAKCiMjIEVzY2FwaW5nIHF1
ZXJ5IGlkZW50aWZpZXJzCgpJZiB5b3UgY2FuJ3QgdHJ1c3QgYW4gU1FMIGlk
ZW50aWZpZXIgKGRhdGFiYXNlIC8gdGFibGUgLyBjb2x1bW4gbmFtZSkgYmVj
YXVzZSBpdCBpcwpwcm92aWRlZCBieSBhIHVzZXIsIHlvdSBzaG91bGQgZXNj
YXBlIGl0IHdpdGggYG15c3FsLmVzY2FwZUlkKGlkZW50aWZpZXIpYCwKYGNv
bm5lY3Rpb24uZXNjYXBlSWQoaWRlbnRpZmllcilgIG9yIGBwb29sLmVzY2Fw
ZUlkKGlkZW50aWZpZXIpYCBsaWtlIHRoaXM6CgpgYGBqcwp2YXIgc29ydGVy
ID0gJ2RhdGUnOwp2YXIgc3FsICAgID0gJ1NFTEVDVCAqIEZST00gcG9zdHMg
T1JERVIgQlkgJyArIGNvbm5lY3Rpb24uZXNjYXBlSWQoc29ydGVyKTsKY29u
bmVjdGlvbi5xdWVyeShzcWwsIGZ1bmN0aW9uIChlcnJvciwgcmVzdWx0cywg
ZmllbGRzKSB7CiAgaWYgKGVycm9yKSB0aHJvdyBlcnJvcjsKICAvLyAuLi4K
fSk7CmBgYAoKSXQgYWxzbyBzdXBwb3J0cyBhZGRpbmcgcXVhbGlmaWVkIGlk
ZW50aWZpZXJzLiBJdCB3aWxsIGVzY2FwZSBib3RoIHBhcnRzLgoKYGBganMK
dmFyIHNvcnRlciA9ICdkYXRlJzsKdmFyIHNxbCAgICA9ICdTRUxFQ1QgKiBG
Uk9NIHBvc3RzIE9SREVSIEJZICcgKyBjb25uZWN0aW9uLmVzY2FwZUlkKCdw
b3N0cy4nICsgc29ydGVyKTsKLy8gLT4gU0VMRUNUICogRlJPTSBwb3N0cyBP
UkRFUiBCWSBgcG9zdHNgLmBkYXRlYApgYGAKCklmIHlvdSBkbyBub3Qgd2Fu
dCB0byB0cmVhdCBgLmAgYXMgcXVhbGlmaWVkIGlkZW50aWZpZXJzLCB5b3Ug
Y2FuIHNldCB0aGUgc2Vjb25kCmFyZ3VtZW50IHRvIGB0cnVlYCBpbiBvcmRl
ciB0byBrZWVwIHRoZSBzdHJpbmcgYXMgYSBsaXRlcmFsIGlkZW50aWZpZXI6
CgpgYGBqcwp2YXIgc29ydGVyID0gJ2RhdGUuMic7CnZhciBzcWwgICAgPSAn
U0VMRUNUICogRlJPTSBwb3N0cyBPUkRFUiBCWSAnICsgY29ubmVjdGlvbi5l
c2NhcGVJZChzb3J0ZXIsIHRydWUpOwovLyAtPiBTRUxFQ1QgKiBGUk9NIHBv
c3RzIE9SREVSIEJZIGBkYXRlLjJgCmBgYAoKQWx0ZXJuYXRpdmVseSwgeW91
IGNhbiB1c2UgYD8/YCBjaGFyYWN0ZXJzIGFzIHBsYWNlaG9sZGVycyBmb3Ig
aWRlbnRpZmllcnMgeW91IHdvdWxkCmxpa2UgdG8gaGF2ZSBlc2NhcGVkIGxp
a2UgdGhpczoKCmBgYGpzCnZhciB1c2VySWQgPSAxOwp2YXIgY29sdW1ucyA9
IFsndXNlcm5hbWUnLCAnZW1haWwnXTsKdmFyIHF1ZXJ5ID0gY29ubmVjdGlv
bi5xdWVyeSgnU0VMRUNUID8/IEZST00gPz8gV0hFUkUgaWQgPSA/JywgW2Nv
bHVtbnMsICd1c2VycycsIHVzZXJJZF0sIGZ1bmN0aW9uIChlcnJvciwgcmVz
dWx0cywgZmllbGRzKSB7CiAgaWYgKGVycm9yKSB0aHJvdyBlcnJvcjsKICAv
LyAuLi4KfSk7Cgpjb25zb2xlLmxvZyhxdWVyeS5zcWwpOyAvLyBTRUxFQ1Qg
YHVzZXJuYW1lYCwgYGVtYWlsYCBGUk9NIGB1c2Vyc2AgV0hFUkUgaWQgPSAx
CmBgYAoqKlBsZWFzZSBub3RlIHRoYXQgdGhpcyBsYXN0IGNoYXJhY3RlciBz
ZXF1ZW5jZSBpcyBleHBlcmltZW50YWwgYW5kIHN5bnRheCBtaWdodCBjaGFu
Z2UqKgoKV2hlbiB5b3UgcGFzcyBhbiBPYmplY3QgdG8gYC5lc2NhcGUoKWAg
b3IgYC5xdWVyeSgpYCwgYC5lc2NhcGVJZCgpYCBpcyB1c2VkIHRvIGF2b2lk
IFNRTCBpbmplY3Rpb24gaW4gb2JqZWN0IGtleXMuCgojIyMgUHJlcGFyaW5n
IFF1ZXJpZXMKCllvdSBjYW4gdXNlIG15c3FsLmZvcm1hdCB0byBwcmVwYXJl
IGEgcXVlcnkgd2l0aCBtdWx0aXBsZSBpbnNlcnRpb24gcG9pbnRzLCB1dGls
aXppbmcgdGhlIHByb3BlciBlc2NhcGluZyBmb3IgaWRzIGFuZCB2YWx1ZXMu
IEEgc2ltcGxlIGV4YW1wbGUgb2YgdGhpcyBmb2xsb3dzOgoKYGBganMKdmFy
IHNxbCA9ICJTRUxFQ1QgKiBGUk9NID8/IFdIRVJFID8/ID0gPyI7CnZhciBp
bnNlcnRzID0gWyd1c2VycycsICdpZCcsIHVzZXJJZF07CnNxbCA9IG15c3Fs
LmZvcm1hdChzcWwsIGluc2VydHMpOwpgYGAKCkZvbGxvd2luZyB0aGlzIHlv
dSB0aGVuIGhhdmUgYSB2YWxpZCwgZXNjYXBlZCBxdWVyeSB0aGF0IHlvdSBj
YW4gdGhlbiBzZW5kIHRvIHRoZSBkYXRhYmFzZSBzYWZlbHkuIFRoaXMgaXMg
dXNlZnVsIGlmIHlvdSBhcmUgbG9va2luZyB0byBwcmVwYXJlIHRoZSBxdWVy
eSBiZWZvcmUgYWN0dWFsbHkgc2VuZGluZyBpdCB0byB0aGUgZGF0YWJhc2Uu
IEFzIG15c3FsLmZvcm1hdCBpcyBleHBvc2VkIGZyb20gU3FsU3RyaW5nLmZv
cm1hdCB5b3UgYWxzbyBoYXZlIHRoZSBvcHRpb24gKGJ1dCBhcmUgbm90IHJl
cXVpcmVkKSB0byBwYXNzIGluIHN0cmluZ2lmeU9iamVjdCBhbmQgdGltZXpv
bmUsIGFsbG93aW5nIHlvdSBwcm92aWRlIGEgY3VzdG9tIG1lYW5zIG9mIHR1
cm5pbmcgb2JqZWN0cyBpbnRvIHN0cmluZ3MsIGFzIHdlbGwgYXMgYSBsb2Nh
dGlvbi1zcGVjaWZpYy90aW1lem9uZS1hd2FyZSBEYXRlLgoKIyMjIEN1c3Rv
bSBmb3JtYXQKCklmIHlvdSBwcmVmZXIgdG8gaGF2ZSBhbm90aGVyIHR5cGUg
b2YgcXVlcnkgZXNjYXBlIGZvcm1hdCwgdGhlcmUncyBhIGNvbm5lY3Rpb24g
Y29uZmlndXJhdGlvbiBvcHRpb24geW91IGNhbiB1c2UgdG8gZGVmaW5lIGEg
Y3VzdG9tIGZvcm1hdCBmdW5jdGlvbi4gWW91IGNhbiBhY2Nlc3MgdGhlIGNv
bm5lY3Rpb24gb2JqZWN0IGlmIHlvdSB3YW50IHRvIHVzZSB0aGUgYnVpbHQt
aW4gYC5lc2NhcGUoKWAgb3IgYW55IG90aGVyIGNvbm5lY3Rpb24gZnVuY3Rp
b24uCgpIZXJlJ3MgYW4gZXhhbXBsZSBvZiBob3cgdG8gaW1wbGVtZW50IGFu
b3RoZXIgZm9ybWF0OgoKYGBganMKY29ubmVjdGlvbi5jb25maWcucXVlcnlG
b3JtYXQgPSBmdW5jdGlvbiAocXVlcnksIHZhbHVlcykgewogIGlmICghdmFs
dWVzKSByZXR1cm4gcXVlcnk7CiAgcmV0dXJuIHF1ZXJ5LnJlcGxhY2UoL1w6
KFx3KykvZywgZnVuY3Rpb24gKHR4dCwga2V5KSB7CiAgICBpZiAodmFsdWVz
Lmhhc093blByb3BlcnR5KGtleSkpIHsKICAgICAgcmV0dXJuIHRoaXMuZXNj
YXBlKHZhbHVlc1trZXldKTsKICAgIH0KICAgIHJldHVybiB0eHQ7CiAgfS5i
aW5kKHRoaXMpKTsKfTsKCmNvbm5lY3Rpb24ucXVlcnkoIlVQREFURSBwb3N0
cyBTRVQgdGl0bGUgPSA6dGl0bGUiLCB7IHRpdGxlOiAiSGVsbG8gTXlTUUwi
IH0pOwpgYGAKCiMjIEdldHRpbmcgdGhlIGlkIG9mIGFuIGluc2VydGVkIHJv
dwoKSWYgeW91IGFyZSBpbnNlcnRpbmcgYSByb3cgaW50byBhIHRhYmxlIHdp
dGggYW4gYXV0byBpbmNyZW1lbnQgcHJpbWFyeSBrZXksIHlvdQpjYW4gcmV0
cmlldmUgdGhlIGluc2VydCBpZCBsaWtlIHRoaXM6CgpgYGBqcwpjb25uZWN0
aW9uLnF1ZXJ5KCdJTlNFUlQgSU5UTyBwb3N0cyBTRVQgPycsIHt0aXRsZTog
J3Rlc3QnfSwgZnVuY3Rpb24gKGVycm9yLCByZXN1bHRzLCBmaWVsZHMpIHsK
ICBpZiAoZXJyb3IpIHRocm93IGVycm9yOwogIGNvbnNvbGUubG9nKHJlc3Vs
dHMuaW5zZXJ0SWQpOwp9KTsKYGBgCgpXaGVuIGRlYWxpbmcgd2l0aCBiaWcg
bnVtYmVycyAoYWJvdmUgSmF2YVNjcmlwdCBOdW1iZXIgcHJlY2lzaW9uIGxp
bWl0KSwgeW91IHNob3VsZApjb25zaWRlciBlbmFibGluZyBgc3VwcG9ydEJp
Z051bWJlcnNgIG9wdGlvbiB0byBiZSBhYmxlIHRvIHJlYWQgdGhlIGluc2Vy
dCBpZCBhcyBhCnN0cmluZywgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYW4g
ZXJyb3IuCgpUaGlzIG9wdGlvbiBpcyBhbHNvIHJlcXVpcmVkIHdoZW4gZmV0
Y2hpbmcgYmlnIG51bWJlcnMgZnJvbSB0aGUgZGF0YWJhc2UsIG90aGVyd2lz
ZQp5b3Ugd2lsbCBnZXQgdmFsdWVzIHJvdW5kZWQgdG8gaHVuZHJlZHMgb3Ig
dGhvdXNhbmRzIGR1ZSB0byB0aGUgcHJlY2lzaW9uIGxpbWl0LgoKIyMgR2V0
dGluZyB0aGUgbnVtYmVyIG9mIGFmZmVjdGVkIHJvd3MKCllvdSBjYW4gZ2V0
IHRoZSBudW1iZXIgb2YgYWZmZWN0ZWQgcm93cyBmcm9tIGFuIGluc2VydCwg
dXBkYXRlIG9yIGRlbGV0ZSBzdGF0ZW1lbnQuCgpgYGBqcwpjb25uZWN0aW9u
LnF1ZXJ5KCdERUxFVEUgRlJPTSBwb3N0cyBXSEVSRSB0aXRsZSA9ICJ3cm9u
ZyInLCBmdW5jdGlvbiAoZXJyb3IsIHJlc3VsdHMsIGZpZWxkcykgewogIGlm
IChlcnJvcikgdGhyb3cgZXJyb3I7CiAgY29uc29sZS5sb2coJ2RlbGV0ZWQg
JyArIHJlc3VsdHMuYWZmZWN0ZWRSb3dzICsgJyByb3dzJyk7Cn0pCmBgYAoK
IyMgR2V0dGluZyB0aGUgbnVtYmVyIG9mIGNoYW5nZWQgcm93cwoKWW91IGNh
biBnZXQgdGhlIG51bWJlciBvZiBjaGFuZ2VkIHJvd3MgZnJvbSBhbiB1cGRh
dGUgc3RhdGVtZW50LgoKImNoYW5nZWRSb3dzIiBkaWZmZXJzIGZyb20gImFm
ZmVjdGVkUm93cyIgaW4gdGhhdCBpdCBkb2VzIG5vdCBjb3VudCB1cGRhdGVk
IHJvd3MKd2hvc2UgdmFsdWVzIHdlcmUgbm90IGNoYW5nZWQuCgpgYGBqcwpj
b25uZWN0aW9uLnF1ZXJ5KCdVUERBVEUgcG9zdHMgU0VUIC4uLicsIGZ1bmN0
aW9uIChlcnJvciwgcmVzdWx0cywgZmllbGRzKSB7CiAgaWYgKGVycm9yKSB0
aHJvdyBlcnJvcjsKICBjb25zb2xlLmxvZygnY2hhbmdlZCAnICsgcmVzdWx0
cy5jaGFuZ2VkUm93cyArICcgcm93cycpOwp9KQpgYGAKCiMjIEdldHRpbmcg
dGhlIGNvbm5lY3Rpb24gSUQKCllvdSBjYW4gZ2V0IHRoZSBNeVNRTCBjb25u
ZWN0aW9uIElEICgidGhyZWFkIElEIikgb2YgYSBnaXZlbiBjb25uZWN0aW9u
IHVzaW5nIHRoZSBgdGhyZWFkSWRgCnByb3BlcnR5LgoKYGBganMKY29ubmVj
dGlvbi5jb25uZWN0KGZ1bmN0aW9uKGVycikgewogIGlmIChlcnIpIHRocm93
IGVycjsKICBjb25zb2xlLmxvZygnY29ubmVjdGVkIGFzIGlkICcgKyBjb25u
ZWN0aW9uLnRocmVhZElkKTsKfSk7CmBgYAoKIyMgRXhlY3V0aW5nIHF1ZXJp
ZXMgaW4gcGFyYWxsZWwKClRoZSBNeVNRTCBwcm90b2NvbCBpcyBzZXF1ZW50
aWFsLCB0aGlzIG1lYW5zIHRoYXQgeW91IG5lZWQgbXVsdGlwbGUgY29ubmVj
dGlvbnMKdG8gZXhlY3V0ZSBxdWVyaWVzIGluIHBhcmFsbGVsLiBZb3UgY2Fu
IHVzZSBhIFBvb2wgdG8gbWFuYWdlIGNvbm5lY3Rpb25zLCBvbmUKc2ltcGxl
IGFwcHJvYWNoIGlzIHRvIGNyZWF0ZSBvbmUgY29ubmVjdGlvbiBwZXIgaW5j
b21pbmcgaHR0cCByZXF1ZXN0LgoKIyMgU3RyZWFtaW5nIHF1ZXJ5IHJvd3MK
ClNvbWV0aW1lcyB5b3UgbWF5IHdhbnQgdG8gc2VsZWN0IGxhcmdlIHF1YW50
aXRpZXMgb2Ygcm93cyBhbmQgcHJvY2VzcyBlYWNoIG9mCnRoZW0gYXMgdGhl
eSBhcmUgcmVjZWl2ZWQuIFRoaXMgY2FuIGJlIGRvbmUgbGlrZSB0aGlzOgoK
YGBganMKdmFyIHF1ZXJ5ID0gY29ubmVjdGlvbi5xdWVyeSgnU0VMRUNUICog
RlJPTSBwb3N0cycpOwpxdWVyeQogIC5vbignZXJyb3InLCBmdW5jdGlvbihl
cnIpIHsKICAgIC8vIEhhbmRsZSBlcnJvciwgYW4gJ2VuZCcgZXZlbnQgd2ls
bCBiZSBlbWl0dGVkIGFmdGVyIHRoaXMgYXMgd2VsbAogIH0pCiAgLm9uKCdm
aWVsZHMnLCBmdW5jdGlvbihmaWVsZHMpIHsKICAgIC8vIHRoZSBmaWVsZCBw
YWNrZXRzIGZvciB0aGUgcm93cyB0byBmb2xsb3cKICB9KQogIC5vbigncmVz
dWx0JywgZnVuY3Rpb24ocm93KSB7CiAgICAvLyBQYXVzaW5nIHRoZSBjb25u
bmVjdGlvbiBpcyB1c2VmdWwgaWYgeW91ciBwcm9jZXNzaW5nIGludm9sdmVz
IEkvTwogICAgY29ubmVjdGlvbi5wYXVzZSgpOwoKICAgIHByb2Nlc3NSb3co
cm93LCBmdW5jdGlvbigpIHsKICAgICAgY29ubmVjdGlvbi5yZXN1bWUoKTsK
ICAgIH0pOwogIH0pCiAgLm9uKCdlbmQnLCBmdW5jdGlvbigpIHsKICAgIC8v
IGFsbCByb3dzIGhhdmUgYmVlbiByZWNlaXZlZAogIH0pOwpgYGAKClBsZWFz
ZSBub3RlIGEgZmV3IHRoaW5ncyBhYm91dCB0aGUgZXhhbXBsZSBhYm92ZToK
CiogVXN1YWxseSB5b3Ugd2lsbCB3YW50IHRvIHJlY2VpdmUgYSBjZXJ0YWlu
IGFtb3VudCBvZiByb3dzIGJlZm9yZSBzdGFydGluZyB0bwogIHRocm90dGxl
IHRoZSBjb25uZWN0aW9uIHVzaW5nIGBwYXVzZSgpYC4gVGhpcyBudW1iZXIg
d2lsbCBkZXBlbmQgb24gdGhlCiAgYW1vdW50IGFuZCBzaXplIG9mIHlvdXIg
cm93cy4KKiBgcGF1c2UoKWAgLyBgcmVzdW1lKClgIG9wZXJhdGUgb24gdGhl
IHVuZGVybHlpbmcgc29ja2V0IGFuZCBwYXJzZXIuIFlvdSBhcmUKICBndWFy
YW50ZWVkIHRoYXQgbm8gbW9yZSBgJ3Jlc3VsdCdgIGV2ZW50cyB3aWxsIGZp
cmUgYWZ0ZXIgY2FsbGluZyBgcGF1c2UoKWAuCiogWW91IE1VU1QgTk9UIHBy
b3ZpZGUgYSBjYWxsYmFjayB0byB0aGUgYHF1ZXJ5KClgIG1ldGhvZCB3aGVu
IHN0cmVhbWluZyByb3dzLgoqIFRoZSBgJ3Jlc3VsdCdgIGV2ZW50IHdpbGwg
ZmlyZSBmb3IgYm90aCByb3dzIGFzIHdlbGwgYXMgT0sgcGFja2V0cwogIGNv
bmZpcm1pbmcgdGhlIHN1Y2Nlc3Mgb2YgYSBJTlNFUlQvVVBEQVRFIHF1ZXJ5
LgoqIEl0IGlzIHZlcnkgaW1wb3J0YW50IG5vdCB0byBsZWF2ZSB0aGUgcmVz
dWx0IHBhdXNlZCB0b28gbG9uZywgb3IgeW91IG1heQogIGVuY291bnRlciBg
RXJyb3I6IENvbm5lY3Rpb24gbG9zdDogVGhlIHNlcnZlciBjbG9zZWQgdGhl
IGNvbm5lY3Rpb24uYAogIFRoZSB0aW1lIGxpbWl0IGZvciB0aGlzIGlzIGRl
dGVybWluZWQgYnkgdGhlCiAgW25ldF93cml0ZV90aW1lb3V0IHNldHRpbmdd
KGh0dHBzOi8vZGV2Lm15c3FsLmNvbS9kb2MvcmVmbWFuLzUuNS9lbi9zZXJ2
ZXItc3lzdGVtLXZhcmlhYmxlcy5odG1sI3N5c3Zhcl9uZXRfd3JpdGVfdGlt
ZW91dCkKICBvbiB5b3VyIE15U1FMIHNlcnZlci4KCkFkZGl0aW9uYWxseSB5
b3UgbWF5IGJlIGludGVyZXN0ZWQgdG8ga25vdyB0aGF0IGl0IGlzIGN1cnJl
bnRseSBub3QgcG9zc2libGUgdG8Kc3RyZWFtIGluZGl2aWR1YWwgcm93IGNv
bHVtbnMsIHRoZXkgd2lsbCBhbHdheXMgYmUgYnVmZmVyZWQgdXAgZW50aXJl
bHkuIElmIHlvdQpoYXZlIGEgZ29vZCB1c2UgY2FzZSBmb3Igc3RyZWFtaW5n
IGxhcmdlIGZpZWxkcyB0byBhbmQgZnJvbSBNeVNRTCwgSSdkIGxvdmUgdG8K
Z2V0IHlvdXIgdGhvdWdodHMgYW5kIGNvbnRyaWJ1dGlvbnMgb24gdGhpcy4K
CiMjIyBQaXBpbmcgcmVzdWx0cyB3aXRoIFN0cmVhbXMKClRoZSBxdWVyeSBv
YmplY3QgcHJvdmlkZXMgYSBjb252ZW5pZW5jZSBtZXRob2QgYC5zdHJlYW0o
W29wdGlvbnNdKWAgdGhhdCB3cmFwcwpxdWVyeSBldmVudHMgaW50byBhIFtS
ZWFkYWJsZSBTdHJlYW1dKGh0dHA6Ly9ub2RlanMub3JnL2FwaS9zdHJlYW0u
aHRtbCNzdHJlYW1fY2xhc3Nfc3RyZWFtX3JlYWRhYmxlKQpvYmplY3QuIFRo
aXMgc3RyZWFtIGNhbiBlYXNpbHkgYmUgcGlwZWQgZG93bnN0cmVhbSBhbmQg
cHJvdmlkZXMgYXV0b21hdGljCnBhdXNlL3Jlc3VtZSwgYmFzZWQgb24gZG93
bnN0cmVhbSBjb25nZXN0aW9uIGFuZCB0aGUgb3B0aW9uYWwgYGhpZ2hXYXRl
ck1hcmtgLgpUaGUgYG9iamVjdE1vZGVgIHBhcmFtZXRlciBvZiB0aGUgc3Ry
ZWFtIGlzIHNldCB0byBgdHJ1ZWAgYW5kIGNhbm5vdCBiZSBjaGFuZ2VkCihp
ZiB5b3UgbmVlZCBhIGJ5dGUgc3RyZWFtLCB5b3Ugd2lsbCBuZWVkIHRvIHVz
ZSBhIHRyYW5zZm9ybSBzdHJlYW0sIGxpa2UKW29ianN0cmVhbV0oaHR0cHM6
Ly93d3cubnBtanMuY29tL3BhY2thZ2Uvb2Jqc3RyZWFtKSBmb3IgZXhhbXBs
ZSkuCgpGb3IgZXhhbXBsZSwgcGlwaW5nIHF1ZXJ5IHJlc3VsdHMgaW50byBh
bm90aGVyIHN0cmVhbSAod2l0aCBhIG1heCBidWZmZXIgb2YgNQpvYmplY3Rz
KSBpcyBzaW1wbHk6CgpgYGBqcwpjb25uZWN0aW9uLnF1ZXJ5KCdTRUxFQ1Qg
KiBGUk9NIHBvc3RzJykKICAuc3RyZWFtKHtoaWdoV2F0ZXJNYXJrOiA1fSkK
ICAucGlwZSguLi4pOwpgYGAKCiMjIE11bHRpcGxlIHN0YXRlbWVudCBxdWVy
aWVzCgpTdXBwb3J0IGZvciBtdWx0aXBsZSBzdGF0ZW1lbnRzIGlzIGRpc2Fi
bGVkIGZvciBzZWN1cml0eSByZWFzb25zIChpdCBhbGxvd3MgZm9yClNRTCBp
bmplY3Rpb24gYXR0YWNrcyBpZiB2YWx1ZXMgYXJlIG5vdCBwcm9wZXJseSBl
c2NhcGVkKS4gVG8gdXNlIHRoaXMgZmVhdHVyZQp5b3UgaGF2ZSB0byBlbmFi
bGUgaXQgZm9yIHlvdXIgY29ubmVjdGlvbjoKCmBgYGpzCnZhciBjb25uZWN0
aW9uID0gbXlzcWwuY3JlYXRlQ29ubmVjdGlvbih7bXVsdGlwbGVTdGF0ZW1l
bnRzOiB0cnVlfSk7CmBgYAoKT25jZSBlbmFibGVkLCB5b3UgY2FuIGV4ZWN1
dGUgbXVsdGlwbGUgc3RhdGVtZW50IHF1ZXJpZXMgbGlrZSBhbnkgb3RoZXIg
cXVlcnk6CgpgYGBqcwpjb25uZWN0aW9uLnF1ZXJ5KCdTRUxFQ1QgMTsgU0VM
RUNUIDInLCBmdW5jdGlvbiAoZXJyb3IsIHJlc3VsdHMsIGZpZWxkcykgewog
IGlmIChlcnJvcikgdGhyb3cgZXJyb3I7CiAgLy8gYHJlc3VsdHNgIGlzIGFu
IGFycmF5IHdpdGggb25lIGVsZW1lbnQgZm9yIGV2ZXJ5IHN0YXRlbWVudCBp
biB0aGUgcXVlcnk6CiAgY29uc29sZS5sb2cocmVzdWx0c1swXSk7IC8vIFt7
MTogMX1dCiAgY29uc29sZS5sb2cocmVzdWx0c1sxXSk7IC8vIFt7MjogMn1d
Cn0pOwpgYGAKCkFkZGl0aW9uYWxseSB5b3UgY2FuIGFsc28gc3RyZWFtIHRo
ZSByZXN1bHRzIG9mIG11bHRpcGxlIHN0YXRlbWVudCBxdWVyaWVzOgoKYGBg
anMKdmFyIHF1ZXJ5ID0gY29ubmVjdGlvbi5xdWVyeSgnU0VMRUNUIDE7IFNF
TEVDVCAyJyk7CgpxdWVyeQogIC5vbignZmllbGRzJywgZnVuY3Rpb24oZmll
bGRzLCBpbmRleCkgewogICAgLy8gdGhlIGZpZWxkcyBmb3IgdGhlIHJlc3Vs
dCByb3dzIHRoYXQgZm9sbG93CiAgfSkKICAub24oJ3Jlc3VsdCcsIGZ1bmN0
aW9uKHJvdywgaW5kZXgpIHsKICAgIC8vIGluZGV4IHJlZmVycyB0byB0aGUg
c3RhdGVtZW50IHRoaXMgcmVzdWx0IGJlbG9uZ3MgdG8gKHN0YXJ0cyBhdCAw
KQogIH0pOwpgYGAKCklmIG9uZSBvZiB0aGUgc3RhdGVtZW50cyBpbiB5b3Vy
IHF1ZXJ5IGNhdXNlcyBhbiBlcnJvciwgdGhlIHJlc3VsdGluZyBFcnJvcgpv
YmplY3QgY29udGFpbnMgYSBgZXJyLmluZGV4YCBwcm9wZXJ0eSB3aGljaCB0
ZWxscyB5b3Ugd2hpY2ggc3RhdGVtZW50IGNhdXNlZAppdC4gTXlTUUwgd2ls
bCBhbHNvIHN0b3AgZXhlY3V0aW5nIGFueSByZW1haW5pbmcgc3RhdGVtZW50
cyB3aGVuIGFuIGVycm9yCm9jY3Vycy4KClBsZWFzZSBub3RlIHRoYXQgdGhl
IGludGVyZmFjZSBmb3Igc3RyZWFtaW5nIG11bHRpcGxlIHN0YXRlbWVudCBx
dWVyaWVzIGlzCmV4cGVyaW1lbnRhbCBhbmQgSSBhbSBsb29raW5nIGZvcndh
cmQgdG8gZmVlZGJhY2sgb24gaXQuCgojIyBTdG9yZWQgcHJvY2VkdXJlcwoK
WW91IGNhbiBjYWxsIHN0b3JlZCBwcm9jZWR1cmVzIGZyb20geW91ciBxdWVy
aWVzIGFzIHdpdGggYW55IG90aGVyIG15c3FsIGRyaXZlci4KSWYgdGhlIHN0
b3JlZCBwcm9jZWR1cmUgcHJvZHVjZXMgc2V2ZXJhbCByZXN1bHQgc2V0cywg
dGhleSBhcmUgZXhwb3NlZCB0byB5b3UKdGhlIHNhbWUgd2F5IGFzIHRoZSBy
ZXN1bHRzIGZvciBtdWx0aXBsZSBzdGF0ZW1lbnQgcXVlcmllcy4KCiMjIEpv
aW5zIHdpdGggb3ZlcmxhcHBpbmcgY29sdW1uIG5hbWVzCgpXaGVuIGV4ZWN1
dGluZyBqb2lucywgeW91IGFyZSBsaWtlbHkgdG8gZ2V0IHJlc3VsdCBzZXRz
IHdpdGggb3ZlcmxhcHBpbmcgY29sdW1uCm5hbWVzLgoKQnkgZGVmYXVsdCwg
bm9kZS1teXNxbCB3aWxsIG92ZXJ3cml0ZSBjb2xsaWRpbmcgY29sdW1uIG5h
bWVzIGluIHRoZQpvcmRlciB0aGUgY29sdW1ucyBhcmUgcmVjZWl2ZWQgZnJv
bSBNeVNRTCwgY2F1c2luZyBzb21lIG9mIHRoZSByZWNlaXZlZCB2YWx1ZXMK
dG8gYmUgdW5hdmFpbGFibGUuCgpIb3dldmVyLCB5b3UgY2FuIGFsc28gc3Bl
Y2lmeSB0aGF0IHlvdSB3YW50IHlvdXIgY29sdW1ucyB0byBiZSBuZXN0ZWQg
YmVsb3cKdGhlIHRhYmxlIG5hbWUgbGlrZSB0aGlzOgoKYGBganMKdmFyIG9w
dGlvbnMgPSB7c3FsOiAnLi4uJywgbmVzdFRhYmxlczogdHJ1ZX07CmNvbm5l
Y3Rpb24ucXVlcnkob3B0aW9ucywgZnVuY3Rpb24gKGVycm9yLCByZXN1bHRz
LCBmaWVsZHMpIHsKICBpZiAoZXJyb3IpIHRocm93IGVycm9yOwogIC8qIHJl
c3VsdHMgd2lsbCBiZSBhbiBhcnJheSBsaWtlIHRoaXMgbm93OgogIFt7CiAg
ICB0YWJsZTE6IHsKICAgICAgZmllbGRBOiAnLi4uJywKICAgICAgZmllbGRC
OiAnLi4uJywKICAgIH0sCiAgICB0YWJsZTI6IHsKICAgICAgZmllbGRBOiAn
Li4uJywKICAgICAgZmllbGRCOiAnLi4uJywKICAgIH0sCiAgfSwgLi4uXQog
ICovCn0pOwpgYGAKCk9yIHVzZSBhIHN0cmluZyBzZXBhcmF0b3IgdG8gaGF2
ZSB5b3VyIHJlc3VsdHMgbWVyZ2VkLgoKYGBganMKdmFyIG9wdGlvbnMgPSB7
c3FsOiAnLi4uJywgbmVzdFRhYmxlczogJ18nfTsKY29ubmVjdGlvbi5xdWVy
eShvcHRpb25zLCBmdW5jdGlvbiAoZXJyb3IsIHJlc3VsdHMsIGZpZWxkcykg
ewogIGlmIChlcnJvcikgdGhyb3cgZXJyb3I7CiAgLyogcmVzdWx0cyB3aWxs
IGJlIGFuIGFycmF5IGxpa2UgdGhpcyBub3c6CiAgW3sKICAgIHRhYmxlMV9m
aWVsZEE6ICcuLi4nLAogICAgdGFibGUxX2ZpZWxkQjogJy4uLicsCiAgICB0
YWJsZTJfZmllbGRBOiAnLi4uJywKICAgIHRhYmxlMl9maWVsZEI6ICcuLi4n
LAogIH0sIC4uLl0KICAqLwp9KTsKYGBgCgojIyBUcmFuc2FjdGlvbnMKClNp
bXBsZSB0cmFuc2FjdGlvbiBzdXBwb3J0IGlzIGF2YWlsYWJsZSBhdCB0aGUg
Y29ubmVjdGlvbiBsZXZlbDoKCmBgYGpzCmNvbm5lY3Rpb24uYmVnaW5UcmFu
c2FjdGlvbihmdW5jdGlvbihlcnIpIHsKICBpZiAoZXJyKSB7IHRocm93IGVy
cjsgfQogIGNvbm5lY3Rpb24ucXVlcnkoJ0lOU0VSVCBJTlRPIHBvc3RzIFNF
VCB0aXRsZT0/JywgdGl0bGUsIGZ1bmN0aW9uIChlcnJvciwgcmVzdWx0cywg
ZmllbGRzKSB7CiAgICBpZiAoZXJyb3IpIHsKICAgICAgcmV0dXJuIGNvbm5l
Y3Rpb24ucm9sbGJhY2soZnVuY3Rpb24oKSB7CiAgICAgICAgdGhyb3cgZXJy
b3I7CiAgICAgIH0pOwogICAgfQoKICAgIHZhciBsb2cgPSAnUG9zdCAnICsg
cmVzdWx0cy5pbnNlcnRJZCArICcgYWRkZWQnOwoKICAgIGNvbm5lY3Rpb24u
cXVlcnkoJ0lOU0VSVCBJTlRPIGxvZyBTRVQgZGF0YT0/JywgbG9nLCBmdW5j
dGlvbiAoZXJyb3IsIHJlc3VsdHMsIGZpZWxkcykgewogICAgICBpZiAoZXJy
b3IpIHsKICAgICAgICByZXR1cm4gY29ubmVjdGlvbi5yb2xsYmFjayhmdW5j
dGlvbigpIHsKICAgICAgICAgIHRocm93IGVycm9yOwogICAgICAgIH0pOwog
ICAgICB9CiAgICAgIGNvbm5lY3Rpb24uY29tbWl0KGZ1bmN0aW9uKGVycikg
ewogICAgICAgIGlmIChlcnIpIHsKICAgICAgICAgIHJldHVybiBjb25uZWN0
aW9uLnJvbGxiYWNrKGZ1bmN0aW9uKCkgewogICAgICAgICAgICB0aHJvdyBl
cnI7CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgICAgY29uc29sZS5s
b2coJ3N1Y2Nlc3MhJyk7CiAgICAgIH0pOwogICAgfSk7CiAgfSk7Cn0pOwpg
YGAKUGxlYXNlIG5vdGUgdGhhdCBiZWdpblRyYW5zYWN0aW9uKCksIGNvbW1p
dCgpIGFuZCByb2xsYmFjaygpIGFyZSBzaW1wbHkgY29udmVuaWVuY2UKZnVu
Y3Rpb25zIHRoYXQgZXhlY3V0ZSB0aGUgU1RBUlQgVFJBTlNBQ1RJT04sIENP
TU1JVCwgYW5kIFJPTExCQUNLIGNvbW1hbmRzIHJlc3BlY3RpdmVseS4KSXQg
aXMgaW1wb3J0YW50IHRvIHVuZGVyc3RhbmQgdGhhdCBtYW55IGNvbW1hbmRz
IGluIE15U1FMIGNhbiBjYXVzZSBhbiBpbXBsaWNpdCBjb21taXQsCmFzIGRl
c2NyaWJlZCBbaW4gdGhlIE15U1FMIGRvY3VtZW50YXRpb25dKGh0dHA6Ly9k
ZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vNS41L2VuL2ltcGxpY2l0LWNvbW1p
dC5odG1sKQoKIyMgUGluZwoKQSBwaW5nIHBhY2tldCBjYW4gYmUgc2VudCBv
dmVyIGEgY29ubmVjdGlvbiB1c2luZyB0aGUgYGNvbm5lY3Rpb24ucGluZ2Ag
bWV0aG9kLiBUaGlzCm1ldGhvZCB3aWxsIHNlbmQgYSBwaW5nIHBhY2tldCB0
byB0aGUgc2VydmVyIGFuZCB3aGVuIHRoZSBzZXJ2ZXIgcmVzcG9uZHMsIHRo
ZSBjYWxsYmFjawp3aWxsIGZpcmUuIElmIGFuIGVycm9yIG9jY3VycmVkLCB0
aGUgY2FsbGJhY2sgd2lsbCBmaXJlIHdpdGggYW4gZXJyb3IgYXJndW1lbnQu
CgpgYGBqcwpjb25uZWN0aW9uLnBpbmcoZnVuY3Rpb24gKGVycikgewogIGlm
IChlcnIpIHRocm93IGVycjsKICBjb25zb2xlLmxvZygnU2VydmVyIHJlc3Bv
bmRlZCB0byBwaW5nJyk7Cn0pCmBgYAoKIyMgVGltZW91dHMKCkV2ZXJ5IG9w
ZXJhdGlvbiB0YWtlcyBhbiBvcHRpb25hbCBpbmFjdGl2aXR5IHRpbWVvdXQg
b3B0aW9uLiBUaGlzIGFsbG93cyB5b3UgdG8Kc3BlY2lmeSBhcHByb3ByaWF0
ZSB0aW1lb3V0cyBmb3Igb3BlcmF0aW9ucy4gSXQgaXMgaW1wb3J0YW50IHRv
IG5vdGUgdGhhdCB0aGVzZQp0aW1lb3V0cyBhcmUgbm90IHBhcnQgb2YgdGhl
IE15U1FMIHByb3RvY29sLCBhbmQgcmF0aGVyIHRpbWVvdXQgb3BlcmF0aW9u
cyB0aHJvdWdoCnRoZSBjbGllbnQuIFRoaXMgbWVhbnMgdGhhdCB3aGVuIGEg
dGltZW91dCBpcyByZWFjaGVkLCB0aGUgY29ubmVjdGlvbiBpdCBvY2N1cnJl
ZApvbiB3aWxsIGJlIGRlc3Ryb3llZCBhbmQgbm8gZnVydGhlciBvcGVyYXRp
b25zIGNhbiBiZSBwZXJmb3JtZWQuCgpgYGBqcwovLyBLaWxsIHF1ZXJ5IGFm
dGVyIDYwcwpjb25uZWN0aW9uLnF1ZXJ5KHtzcWw6ICdTRUxFQ1QgQ09VTlQo
KikgQVMgY291bnQgRlJPTSBiaWdfdGFibGUnLCB0aW1lb3V0OiA2MDAwMH0s
IGZ1bmN0aW9uIChlcnJvciwgcmVzdWx0cywgZmllbGRzKSB7CiAgaWYgKGVy
cm9yICYmIGVycm9yLmNvZGUgPT09ICdQUk9UT0NPTF9TRVFVRU5DRV9USU1F
T1VUJykgewogICAgdGhyb3cgbmV3IEVycm9yKCd0b28gbG9uZyB0byBjb3Vu
dCB0YWJsZSByb3dzIScpOwogIH0KCiAgaWYgKGVycm9yKSB7CiAgICB0aHJv
dyBlcnJvcjsKICB9CgogIGNvbnNvbGUubG9nKHJlc3VsdHNbMF0uY291bnQg
KyAnIHJvd3MnKTsKfSk7CmBgYAoKIyMgRXJyb3IgaGFuZGxpbmcKClRoaXMg
bW9kdWxlIGNvbWVzIHdpdGggYSBjb25zaXN0ZW50IGFwcHJvYWNoIHRvIGVy
cm9yIGhhbmRsaW5nIHRoYXQgeW91IHNob3VsZApyZXZpZXcgY2FyZWZ1bGx5
IGluIG9yZGVyIHRvIHdyaXRlIHNvbGlkIGFwcGxpY2F0aW9ucy4KCk1vc3Qg
ZXJyb3JzIGNyZWF0ZWQgYnkgdGhpcyBtb2R1bGUgYXJlIGluc3RhbmNlcyBv
ZiB0aGUgSmF2YVNjcmlwdCBbRXJyb3JdW10Kb2JqZWN0LiBBZGRpdGlvbmFs
bHkgdGhleSB0eXBpY2FsbHkgY29tZSB3aXRoIHR3byBleHRyYSBwcm9wZXJ0
aWVzOgoKKiBgZXJyLmNvZGVgOiBTdHJpbmcsIGNvbnRhaW5zIHRoZSBNeVNR
TCBzZXJ2ZXIgZXJyb3Igc3ltYm9sIGlmIHRoZSBlcnJvciBpcwogIGEgW015
U1FMIHNlcnZlciBlcnJvcl1bXSAoZS5nLiBgJ0VSX0FDQ0VTU19ERU5JRURf
RVJST1InYCksIGEgTm9kZS5qcyBlcnJvcgogIGNvZGUgaWYgaXQgaXMgYSBO
b2RlLmpzIGVycm9yIChlLmcuIGAnRUNPTk5SRUZVU0VEJ2ApLCBvciBhbiBp
bnRlcm5hbCBlcnJvcgogIGNvZGUgKGUuZy4gYCdQUk9UT0NPTF9DT05ORUNU
SU9OX0xPU1QnYCkuCiogYGVyci5lcnJub2A6IE51bWJlciwgY29udGFpbnMg
dGhlIE15U1FMIHNlcnZlciBlcnJvciBudW1iZXIuIE9ubHkgcG9wdWxhdGVk
CiAgZnJvbSBbTXlTUUwgc2VydmVyIGVycm9yXVtdLgoqIGBlcnIuZmF0YWxg
OiBCb29sZWFuLCBpbmRpY2F0aW5nIGlmIHRoaXMgZXJyb3IgaXMgdGVybWlu
YWwgdG8gdGhlIGNvbm5lY3Rpb24KICBvYmplY3QuIElmIHRoZSBlcnJvciBp
cyBub3QgZnJvbSBhIE15U1FMIHByb3RvY29sIG9wZXJhdGlvbiwgdGhpcyBw
cm9wZXJ0eQogIHdpbGwgbm90IGJlIGRlZmluZWQuCiogYGVyci5zcWxgOiBT
dHJpbmcsIGNvbnRhaW5zIHRoZSBmdWxsIFNRTCBvZiB0aGUgZmFpbGVkIHF1
ZXJ5LiBUaGlzIGNhbiBiZQogIHVzZWZ1bCB3aGVuIHVzaW5nIGEgaGlnaGVy
IGxldmVsIGludGVyZmFjZSBsaWtlIGFuIE9STSB0aGF0IGlzIGdlbmVyYXRp
bmcKICB0aGUgcXVlcmllcy4KKiBgZXJyLnNxbFN0YXRlYDogU3RyaW5nLCBj
b250YWlucyB0aGUgZml2ZS1jaGFyYWN0ZXIgU1FMU1RBVEUgdmFsdWUuIE9u
bHkgcG9wdWxhdGVkIGZyb20gW015U1FMIHNlcnZlciBlcnJvcl1bXS4KKiBg
ZXJyLnNxbE1lc3NhZ2VgOiBTdHJpbmcsIGNvbnRhaW5zIHRoZSBtZXNzYWdl
IHN0cmluZyB0aGF0IHByb3ZpZGVzIGEKICB0ZXh0dWFsIGRlc2NyaXB0aW9u
IG9mIHRoZSBlcnJvci4gT25seSBwb3B1bGF0ZWQgZnJvbSBbTXlTUUwgc2Vy
dmVyIGVycm9yXVtdLgoKW0Vycm9yXTogaHR0cHM6Ly9kZXZlbG9wZXIubW96
aWxsYS5vcmcvZW4vSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVj
dHMvRXJyb3IKW015U1FMIHNlcnZlciBlcnJvcl06IGh0dHBzOi8vZGV2Lm15
c3FsLmNvbS9kb2MvcmVmbWFuLzUuNS9lbi9zZXJ2ZXItZXJyb3ItcmVmZXJl
bmNlLmh0bWwKCkZhdGFsIGVycm9ycyBhcmUgcHJvcGFnYXRlZCB0byAqYWxs
KiBwZW5kaW5nIGNhbGxiYWNrcy4gSW4gdGhlIGV4YW1wbGUgYmVsb3csIGEK
ZmF0YWwgZXJyb3IgaXMgdHJpZ2dlcmVkIGJ5IHRyeWluZyB0byBjb25uZWN0
IHRvIGFuIGludmFsaWQgcG9ydC4gVGhlcmVmb3JlIHRoZQplcnJvciBvYmpl
Y3QgaXMgcHJvcGFnYXRlZCB0byBib3RoIHBlbmRpbmcgY2FsbGJhY2tzOgoK
YGBganMKdmFyIGNvbm5lY3Rpb24gPSByZXF1aXJlKCdteXNxbCcpLmNyZWF0
ZUNvbm5lY3Rpb24oewogIHBvcnQ6IDg0OTQzLCAvLyBXUk9ORyBQT1JUCn0p
OwoKY29ubmVjdGlvbi5jb25uZWN0KGZ1bmN0aW9uKGVycikgewogIGNvbnNv
bGUubG9nKGVyci5jb2RlKTsgLy8gJ0VDT05OUkVGVVNFRCcKICBjb25zb2xl
LmxvZyhlcnIuZmF0YWwpOyAvLyB0cnVlCn0pOwoKY29ubmVjdGlvbi5xdWVy
eSgnU0VMRUNUIDEnLCBmdW5jdGlvbiAoZXJyb3IsIHJlc3VsdHMsIGZpZWxk
cykgewogIGNvbnNvbGUubG9nKGVycm9yLmNvZGUpOyAvLyAnRUNPTk5SRUZV
U0VEJwogIGNvbnNvbGUubG9nKGVycm9yLmZhdGFsKTsgLy8gdHJ1ZQp9KTsK
YGBgCgpOb3JtYWwgZXJyb3JzIGhvd2V2ZXIgYXJlIG9ubHkgZGVsZWdhdGVk
IHRvIHRoZSBjYWxsYmFjayB0aGV5IGJlbG9uZyB0by4gIFNvIGluCnRoZSBl
eGFtcGxlIGJlbG93LCBvbmx5IHRoZSBmaXJzdCBjYWxsYmFjayByZWNlaXZl
cyBhbiBlcnJvciwgdGhlIHNlY29uZCBxdWVyeQp3b3JrcyBhcyBleHBlY3Rl
ZDoKCmBgYGpzCmNvbm5lY3Rpb24ucXVlcnkoJ1VTRSBuYW1lX29mX2RiX3Ro
YXRfZG9lc19ub3RfZXhpc3QnLCBmdW5jdGlvbiAoZXJyb3IsIHJlc3VsdHMs
IGZpZWxkcykgewogIGNvbnNvbGUubG9nKGVycm9yLmNvZGUpOyAvLyAnRVJf
QkFEX0RCX0VSUk9SJwp9KTsKCmNvbm5lY3Rpb24ucXVlcnkoJ1NFTEVDVCAx
JywgZnVuY3Rpb24gKGVycm9yLCByZXN1bHRzLCBmaWVsZHMpIHsKICBjb25z
b2xlLmxvZyhlcnJvcik7IC8vIG51bGwKICBjb25zb2xlLmxvZyhyZXN1bHRz
Lmxlbmd0aCk7IC8vIDEKfSk7CmBgYAoKTGFzdCBidXQgbm90IGxlYXN0OiBJ
ZiBhIGZhdGFsIGVycm9ycyBvY2N1cnMgYW5kIHRoZXJlIGFyZSBubyBwZW5k
aW5nCmNhbGxiYWNrcywgb3IgYSBub3JtYWwgZXJyb3Igb2NjdXJzIHdoaWNo
IGhhcyBubyBjYWxsYmFjayBiZWxvbmdpbmcgdG8gaXQsIHRoZQplcnJvciBp
cyBlbWl0dGVkIGFzIGFuIGAnZXJyb3InYCBldmVudCBvbiB0aGUgY29ubmVj
dGlvbiBvYmplY3QuIFRoaXMgaXMKZGVtb25zdHJhdGVkIGluIHRoZSBleGFt
cGxlIGJlbG93OgoKYGBganMKY29ubmVjdGlvbi5vbignZXJyb3InLCBmdW5j
dGlvbihlcnIpIHsKICBjb25zb2xlLmxvZyhlcnIuY29kZSk7IC8vICdFUl9C
QURfREJfRVJST1InCn0pOwoKY29ubmVjdGlvbi5xdWVyeSgnVVNFIG5hbWVf
b2ZfZGJfdGhhdF9kb2VzX25vdF9leGlzdCcpOwpgYGAKCk5vdGU6IGAnZXJy
b3InYCBldmVudHMgYXJlIHNwZWNpYWwgaW4gbm9kZS4gSWYgdGhleSBvY2N1
ciB3aXRob3V0IGFuIGF0dGFjaGVkCmxpc3RlbmVyLCBhIHN0YWNrIHRyYWNl
IGlzIHByaW50ZWQgYW5kIHlvdXIgcHJvY2VzcyBpcyBraWxsZWQuCgoqKnRs
O2RyOioqIFRoaXMgbW9kdWxlIGRvZXMgbm90IHdhbnQgeW91IHRvIGRlYWwg
d2l0aCBzaWxlbnQgZmFpbHVyZXMuIFlvdQpzaG91bGQgYWx3YXlzIHByb3Zp
ZGUgY2FsbGJhY2tzIHRvIHlvdXIgbWV0aG9kIGNhbGxzLiBJZiB5b3Ugd2Fu
dCB0byBpZ25vcmUKdGhpcyBhZHZpY2UgYW5kIHN1cHByZXNzIHVuaGFuZGxl
ZCBlcnJvcnMsIHlvdSBjYW4gZG8gdGhpczoKCmBgYGpzCi8vIEkgYW0gQ2h1
Y2sgTm9ycmlzOgpjb25uZWN0aW9uLm9uKCdlcnJvcicsIGZ1bmN0aW9uKCkg
e30pOwpgYGAKCiMjIEV4Y2VwdGlvbiBTYWZldHkKClRoaXMgbW9kdWxlIGlz
IGV4Y2VwdGlvbiBzYWZlLiBUaGF0IG1lYW5zIHlvdSBjYW4gY29udGludWUg
dG8gdXNlIGl0LCBldmVuIGlmCm9uZSBvZiB5b3VyIGNhbGxiYWNrIGZ1bmN0
aW9ucyB0aHJvd3MgYW4gZXJyb3Igd2hpY2ggeW91J3JlIGNhdGNoaW5nIHVz
aW5nCid1bmNhdWdodEV4Y2VwdGlvbicgb3IgYSBkb21haW4uCgojIyBUeXBl
IGNhc3RpbmcKCkZvciB5b3VyIGNvbnZlbmllbmNlLCB0aGlzIGRyaXZlciB3
aWxsIGNhc3QgbXlzcWwgdHlwZXMgaW50byBuYXRpdmUgSmF2YVNjcmlwdAp0
eXBlcyBieSBkZWZhdWx0LiBUaGUgZm9sbG93aW5nIG1hcHBpbmdzIGV4aXN0
OgoKIyMjIE51bWJlcgoKKiBUSU5ZSU5UCiogU01BTExJTlQKKiBJTlQKKiBN
RURJVU1JTlQKKiBZRUFSCiogRkxPQVQKKiBET1VCTEUKCiMjIyBEYXRlCgoq
IFRJTUVTVEFNUAoqIERBVEUKKiBEQVRFVElNRQoKIyMjIEJ1ZmZlcgoKKiBU
SU5ZQkxPQgoqIE1FRElVTUJMT0IKKiBMT05HQkxPQgoqIEJMT0IKKiBCSU5B
UlkKKiBWQVJCSU5BUlkKKiBCSVQgKGxhc3QgYnl0ZSB3aWxsIGJlIGZpbGxl
ZCB3aXRoIDAgYml0cyBhcyBuZWNlc3NhcnkpCgojIyMgU3RyaW5nCgoqKk5v
dGUqKiB0ZXh0IGluIHRoZSBiaW5hcnkgY2hhcmFjdGVyIHNldCBpcyByZXR1
cm5lZCBhcyBgQnVmZmVyYCwgcmF0aGVyCnRoYW4gYSBzdHJpbmcuCgoqIENI
QVIKKiBWQVJDSEFSCiogVElOWVRFWFQKKiBNRURJVU1URVhUCiogTE9OR1RF
WFQKKiBURVhUCiogRU5VTQoqIFNFVAoqIERFQ0lNQUwgKG1heSBleGNlZWQg
ZmxvYXQgcHJlY2lzaW9uKQoqIEJJR0lOVCAobWF5IGV4Y2VlZCBmbG9hdCBw
cmVjaXNpb24pCiogVElNRSAoY291bGQgYmUgbWFwcGVkIHRvIERhdGUsIGJ1
dCB3aGF0IGRhdGUgd291bGQgYmUgc2V0PykKKiBHRU9NRVRSWSAobmV2ZXIg
dXNlZCB0aG9zZSwgZ2V0IGluIHRvdWNoIGlmIHlvdSBkbykKCkl0IGlzIG5v
dCByZWNvbW1lbmRlZCAoYW5kIG1heSBnbyBhd2F5IC8gY2hhbmdlIGluIHRo
ZSBmdXR1cmUpIHRvIGRpc2FibGUgdHlwZQpjYXN0aW5nLCBidXQgeW91IGNh
biBjdXJyZW50bHkgZG8gc28gb24gZWl0aGVyIHRoZSBjb25uZWN0aW9uOgoK
YGBganMKdmFyIGNvbm5lY3Rpb24gPSByZXF1aXJlKCdteXNxbCcpLmNyZWF0
ZUNvbm5lY3Rpb24oe3R5cGVDYXN0OiBmYWxzZX0pOwpgYGAKCk9yIG9uIHRo
ZSBxdWVyeSBsZXZlbDoKCmBgYGpzCnZhciBvcHRpb25zID0ge3NxbDogJy4u
LicsIHR5cGVDYXN0OiBmYWxzZX07CnZhciBxdWVyeSA9IGNvbm5lY3Rpb24u
cXVlcnkob3B0aW9ucywgZnVuY3Rpb24gKGVycm9yLCByZXN1bHRzLCBmaWVs
ZHMpIHsKICBpZiAoZXJyb3IpIHRocm93IGVycm9yOwogIC8vIC4uLgp9KTsK
YGBgCgojIyMgQ3VzdG9tIHR5cGUgY2FzdGluZwoKWW91IGNhbiBhbHNvIHBh
c3MgYSBmdW5jdGlvbiBhbmQgaGFuZGxlIHR5cGUgY2FzdGluZyB5b3Vyc2Vs
Zi4gWW91J3JlIGdpdmVuIHNvbWUKY29sdW1uIGluZm9ybWF0aW9uIGxpa2Ug
ZGF0YWJhc2UsIHRhYmxlIGFuZCBuYW1lIGFuZCBhbHNvIHR5cGUgYW5kIGxl
bmd0aC4gSWYgeW91Cmp1c3Qgd2FudCB0byBhcHBseSBhIGN1c3RvbSB0eXBl
IGNhc3RpbmcgdG8gYSBzcGVjaWZpYyB0eXBlIHlvdSBjYW4gZG8gaXQgYW5k
IHRoZW4KZmFsbGJhY2sgdG8gdGhlIGRlZmF1bHQuCgpUaGUgZnVuY3Rpb24g
aXMgcHJvdmlkZWQgdHdvIGFyZ3VtZW50cyBgZmllbGRgIGFuZCBgbmV4dGAg
YW5kIGlzIGV4cGVjdGVkIHRvCnJldHVybiB0aGUgdmFsdWUgZm9yIHRoZSBn
aXZlbiBmaWVsZCBieSBpbnZva2luZyB0aGUgcGFyc2VyIGZ1bmN0aW9ucyB0
aHJvdWdoCnRoZSBgZmllbGRgIG9iamVjdC4KClRoZSBgZmllbGRgIGFyZ3Vt
ZW50IGlzIGEgYEZpZWxkYCBvYmplY3QgYW5kIGNvbnRhaW5zIGRhdGEgYWJv
dXQgdGhlIGZpZWxkIHRoYXQKbmVlZCB0byBiZSBwYXJzZWQuIFRoZSBmb2xs
b3dpbmcgYXJlIHNvbWUgb2YgdGhlIHByb3BlcnRpZXMgb24gYSBgRmllbGRg
IG9iamVjdDoKCiAgKiBgZGJgIC0gYSBzdHJpbmcgb2YgdGhlIGRhdGFiYXNl
IHRoZSBmaWVsZCBjYW1lIGZyb20uCiAgKiBgdGFibGVgIC0gYSBzdHJpbmcg
b2YgdGhlIHRhYmxlIHRoZSBmaWVsZCBjYW1lIGZyb20uCiAgKiBgbmFtZWAg
LSBhIHN0cmluZyBvZiB0aGUgZmllbGQgbmFtZS4KICAqIGB0eXBlYCAtIGEg
c3RyaW5nIG9mIHRoZSBmaWVsZCB0eXBlIGluIGFsbCBjYXBzLgogICogYGxl
bmd0aGAgLSBhIG51bWJlciBvZiB0aGUgZmllbGQgbGVuZ3RoLCBhcyBnaXZl
biBieSB0aGUgZGF0YWJhc2UuCgpUaGUgYG5leHRgIGFyZ3VtZW50IGlzIGEg
YGZ1bmN0aW9uYCB0aGF0LCB3aGVuIGNhbGxlZCwgd2lsbCByZXR1cm4gdGhl
IGRlZmF1bHQKdHlwZSBjb252ZXJzaW9uIGZvciB0aGUgZ2l2ZW4gZmllbGQu
CgpXaGVuIGdldHRpbmcgdGhlIGZpZWxkIGRhdGEsIHRoZSBmb2xsb3dpbmcg
aGVscGVyIG1ldGhvZHMgYXJlIHByZXNlbnQgb24gdGhlCmBmaWVsZGAgb2Jq
ZWN0OgoKICAqIGAuc3RyaW5nKClgIC0gcGFyc2UgdGhlIGZpZWxkIGludG8g
YSBzdHJpbmcuCiAgKiBgLmJ1ZmZlcigpYCAtIHBhcnNlIHRoZSBmaWVsZCBp
bnRvIGEgYEJ1ZmZlcmAuCiAgKiBgLmdlb21ldHJ5KClgIC0gcGFyc2UgdGhl
IGZpZWxkIGFzIGEgZ2VvbWV0cnkgdmFsdWUuCgpUaGUgTXlTUUwgcHJvdG9j
b2wgaXMgYSB0ZXh0LWJhc2VkIHByb3RvY29sLiBUaGlzIG1lYW5zIHRoYXQg
b3ZlciB0aGUgd2lyZSwgYWxsCmZpZWxkIHR5cGVzIGFyZSByZXByZXNlbnRl
ZCBhcyBhIHN0cmluZywgd2hpY2ggaXMgd2h5IG9ubHkgc3RyaW5nLWxpa2Ug
ZnVuY3Rpb25zCmFyZSBhdmFpbGFibGUgb24gdGhlIGBmaWVsZGAgb2JqZWN0
LiBCYXNlZCBvbiB0aGUgdHlwZSBpbmZvcm1hdGlvbiAobGlrZSBgSU5UYCks
CnRoZSB0eXBlIGNhc3Qgc2hvdWxkIGNvbnZlcnQgdGhlIHN0cmluZyBmaWVs
ZCBpbnRvIGEgZGlmZmVyZW50IEphdmFTY3JpcHQgdHlwZQoobGlrZSBhIGBu
dW1iZXJgKS4KCkhlcmUncyBhbiBleGFtcGxlIG9mIGNvbnZlcnRpbmcgYFRJ
TllJTlQoMSlgIHRvIGJvb2xlYW46CgpgYGBqcwpjb25uZWN0aW9uID0gbXlz
cWwuY3JlYXRlQ29ubmVjdGlvbih7CiAgdHlwZUNhc3Q6IGZ1bmN0aW9uIChm
aWVsZCwgbmV4dCkgewogICAgaWYgKGZpZWxkLnR5cGUgPT09ICdUSU5ZJyAm
JiBmaWVsZC5sZW5ndGggPT09IDEpIHsKICAgICAgcmV0dXJuIChmaWVsZC5z
dHJpbmcoKSA9PT0gJzEnKTsgLy8gMSA9IHRydWUsIDAgPSBmYWxzZQogICAg
fSBlbHNlIHsKICAgICAgcmV0dXJuIG5leHQoKTsKICAgIH0KICB9Cn0pOwpg
YGAKCl9fV0FSTklORzogWU9VIE1VU1QgSU5WT0tFIHRoZSBwYXJzZXIgdXNp
bmcgb25lIG9mIHRoZXNlIHRocmVlIGZpZWxkIGZ1bmN0aW9ucwppbiB5b3Vy
IGN1c3RvbSB0eXBlQ2FzdCBjYWxsYmFjay4gVGhleSBjYW4gb25seSBiZSBj
YWxsZWQgb25jZS5fXwoKIyMgRGVidWdnaW5nIGFuZCByZXBvcnRpbmcgcHJv
YmxlbXMKCklmIHlvdSBhcmUgcnVubmluZyBpbnRvIHByb2JsZW1zLCBvbmUg
dGhpbmcgdGhhdCBtYXkgaGVscCBpcyBlbmFibGluZyB0aGUKYGRlYnVnYCBt
b2RlIGZvciB0aGUgY29ubmVjdGlvbjoKCmBgYGpzCnZhciBjb25uZWN0aW9u
ID0gbXlzcWwuY3JlYXRlQ29ubmVjdGlvbih7ZGVidWc6IHRydWV9KTsKYGBg
CgpUaGlzIHdpbGwgcHJpbnQgYWxsIGluY29taW5nIGFuZCBvdXRnb2luZyBw
YWNrZXRzIG9uIHN0ZG91dC4gWW91IGNhbiBhbHNvIHJlc3RyaWN0IGRlYnVn
Z2luZyB0bwpwYWNrZXQgdHlwZXMgYnkgcGFzc2luZyBhbiBhcnJheSBvZiB0
eXBlcyB0byBkZWJ1ZzoKCmBgYGpzCnZhciBjb25uZWN0aW9uID0gbXlzcWwu
Y3JlYXRlQ29ubmVjdGlvbih7ZGVidWc6IFsnQ29tUXVlcnlQYWNrZXQnLCAn
Um93RGF0YVBhY2tldCddfSk7CmBgYAoKdG8gcmVzdHJpY3QgZGVidWdnaW5n
IHRvIHRoZSBxdWVyeSBhbmQgZGF0YSBwYWNrZXRzLgoKSWYgdGhhdCBkb2Vz
IG5vdCBoZWxwLCBmZWVsIGZyZWUgdG8gb3BlbiBhIEdpdEh1YiBpc3N1ZS4g
QSBnb29kIEdpdEh1YiBpc3N1ZQp3aWxsIGhhdmU6CgoqIFRoZSBtaW5pbWFs
IGFtb3VudCBvZiBjb2RlIHJlcXVpcmVkIHRvIHJlcHJvZHVjZSB0aGUgcHJv
YmxlbSAoaWYgcG9zc2libGUpCiogQXMgbXVjaCBkZWJ1Z2dpbmcgb3V0cHV0
IGFuZCBpbmZvcm1hdGlvbiBhYm91dCB5b3VyIGVudmlyb25tZW50IChteXNx
bAogIHZlcnNpb24sIG5vZGUgdmVyc2lvbiwgb3MsIGV0Yy4pIGFzIHlvdSBj
YW4gZ2F0aGVyLgoKIyMgU2VjdXJpdHkgaXNzdWVzCgpTZWN1cml0eSBpc3N1
ZXMgc2hvdWxkIG5vdCBiZSBmaXJzdCByZXBvcnRlZCB0aHJvdWdoIEdpdEh1
YiBvciBhbm90aGVyIHB1YmxpYwpmb3J1bSwgYnV0IGtlcHQgcHJpdmF0ZSBp
biBvcmRlciBmb3IgdGhlIGNvbGxhYm9yYXRvcnMgdG8gYXNzZXNzIHRoZSBy
ZXBvcnQKYW5kIGVpdGhlciAoYSkgZGV2aXNlIGEgZml4IGFuZCBwbGFuIGEg
cmVsZWFzZSBkYXRlIG9yIChiKSBhc3NlcnQgdGhhdCBpdCBpcwpub3QgYSBz
ZWN1cml0eSBpc3N1ZSAoaW4gd2hpY2ggY2FzZSBpdCBjYW4gYmUgcG9zdGVk
IGluIGEgcHVibGljIGZvcnVtLCBsaWtlCmEgR2l0SHViIGlzc3VlKS4KClRo
ZSBwcmltYXJ5IHByaXZhdGUgZm9ydW0gaXMgZW1haWwsIGVpdGhlciBieSBl
bWFpbGluZyB0aGUgbW9kdWxlJ3MgYXV0aG9yIG9yCm9wZW5pbmcgYSBHaXRI
dWIgaXNzdWUgc2ltcGx5IGFza2luZyB0byB3aG9tIGEgc2VjdXJpdHkgaXNz
dWVzIHNob3VsZCBiZQphZGRyZXNzZWQgdG8gd2l0aG91dCBkaXNjbG9zaW5n
IHRoZSBpc3N1ZSBvciB0eXBlIG9mIGlzc3VlLgoKQW4gaWRlYWwgcmVwb3J0
IHdvdWxkIGluY2x1ZGUgYSBjbGVhciBpbmRpY2F0aW9uIG9mIHdoYXQgdGhl
IHNlY3VyaXR5IGlzc3VlIGlzCmFuZCBob3cgaXQgd291bGQgYmUgZXhwbG9p
dGVkLCBpZGVhbGx5IHdpdGggYW4gYWNjb21wYW55aW5nIHByb29mIG9mIGNv
bmNlcHQKKCJQb0MiKSBmb3IgY29sbGFib3JhdG9ycyB0byB3b3JrIGFnYWlu
c3QgYW5kIHZhbGlkYXRlIHBvdGVudGlvbmFsIGZpeGVzIGFnYWluc3QuCgoj
IyBDb250cmlidXRpbmcKClRoaXMgcHJvamVjdCB3ZWxjb21lcyBjb250cmli
dXRpb25zIGZyb20gdGhlIGNvbW11bml0eS4gQ29udHJpYnV0aW9ucyBhcmUK
YWNjZXB0ZWQgdXNpbmcgR2l0SHViIHB1bGwgcmVxdWVzdHMuIElmIHlvdSdy
ZSBub3QgZmFtaWxpYXIgd2l0aCBtYWtpbmcKR2l0SHViIHB1bGwgcmVxdWVz
dHMsIHBsZWFzZSByZWZlciB0byB0aGUKW0dpdEh1YiBkb2N1bWVudGF0aW9u
ICJDcmVhdGluZyBhIHB1bGwgcmVxdWVzdCJdKGh0dHBzOi8vaGVscC5naXRo
dWIuY29tL2FydGljbGVzL2NyZWF0aW5nLWEtcHVsbC1yZXF1ZXN0LykuCgpG
b3IgYSBnb29kIHB1bGwgcmVxdWVzdCwgd2UgYXNrIHlvdSBwcm92aWRlIHRo
ZSBmb2xsb3dpbmc6CgoxLiBUcnkgdG8gaW5jbHVkZSBhIGNsZWFyIGRlc2Ny
aXB0aW9uIG9mIHlvdXIgcHVsbCByZXF1ZXN0IGluIHRoZSBkZXNjcmlwdGlv
bi4KICAgSXQgc2hvdWxkIGluY2x1ZGUgdGhlIGJhc2ljICJ3aGF0IiBhbmQg
IndoeSJzIGZvciB0aGUgcmVxdWVzdC4KMi4gVGhlIHRlc3RzIHNob3VsZCBw
YXNzIGFzIGJlc3QgYXMgeW91IGNhbi4gU2VlIHRoZSBbUnVubmluZyB0ZXN0
c10oI3J1bm5pbmctdGVzdHMpCiAgIHNlY3Rpb24gb24gaG93IHRvIHJ1biB0
aGUgZGlmZmVyZW50IHRlc3RzLiBHaXRIdWIgd2lsbCBhdXRvbWF0aWNhbGx5
IHJ1bgogICB0aGUgdGVzdHMgYXMgd2VsbCwgdG8gYWN0IGFzIGEgc2FmZXR5
IG5ldC4KMy4gVGhlIHB1bGwgcmVxdWVzdCBzaG91bGQgaW5jbHVkZSB0ZXN0
cyBmb3IgdGhlIGNoYW5nZS4gQSBuZXcgZmVhdHVyZSBzaG91bGQKICAgaGF2
ZSB0ZXN0cyBmb3IgdGhlIG5ldyBmZWF0dXJlIGFuZCBidWcgZml4ZXMgc2hv
dWxkIGluY2x1ZGUgYSB0ZXN0IHRoYXQgZmFpbHMKICAgd2l0aG91dCB0aGUg
Y29ycmVzcG9uZGluZyBjb2RlIGNoYW5nZSBhbmQgcGFzc2VzIGFmdGVyIHRo
ZXkgYXJlIGFwcGxpZWQuCiAgIFRoZSBjb21tYW5kIGBucG0gcnVuIHRlc3Qt
Y292YCB3aWxsIGdlbmVyYXRlIGEgYGNvdmVyYWdlL2AgZm9sZGVyIHRoYXQK
ICAgY29udGFpbnMgSFRNTCBwYWdlcyBvZiB0aGUgY29kZSBjb3ZlcmFnZSwg
dG8gYmV0dGVyIHVuZGVyc3RhbmQgaWYgZXZlcnl0aGluZwogICB5b3UncmUg
YWRkaW5nIGlzIGJlaW5nIHRlc3RlZC4KNC4gSWYgdGhlIHB1bGwgcmVxdWVz
dCBpcyBhIG5ldyBmZWF0dXJlLCBwbGVhc2UgYmUgc3VyZSB0byBpbmNsdWRl
IGFsbAogICBhcHByb3ByaWF0ZSBkb2N1bWVudGF0aW9uIGFkZGl0aW9ucyBp
biB0aGUgYFJlYWRtZS5tZGAgZmlsZSBhcyB3ZWxsLgo1LiBUbyBoZWxwIGVu
c3VyZSB0aGF0IHlvdXIgY29kZSBpcyBzaW1pbGFyIGluIHN0eWxlIHRvIHRo
ZSBleGlzdGluZyBjb2RlLAogICBydW4gdGhlIGNvbW1hbmQgYG5wbSBydW4g
bGludGAgYW5kIGZpeCBhbnkgZGlzcGxheWVkIGlzc3Vlcy4KCiMjIFJ1bm5p
bmcgdGVzdHMKClRoZSB0ZXN0IHN1aXRlIGlzIHNwbGl0IGludG8gdHdvIHBh
cnRzOiB1bml0IHRlc3RzIGFuZCBpbnRlZ3JhdGlvbiB0ZXN0cy4KVGhlIHVu
aXQgdGVzdHMgcnVuIG9uIGFueSBtYWNoaW5lIHdoaWxlIHRoZSBpbnRlZ3Jh
dGlvbiB0ZXN0cyByZXF1aXJlIGEKTXlTUUwgc2VydmVyIGluc3RhbmNlIHRv
IGJlIHNldHVwLgoKIyMjIFJ1bm5pbmcgdW5pdCB0ZXN0cwoKYGBgc2gKJCBG
SUxURVI9dW5pdCBucG0gdGVzdApgYGAKCiMjIyBSdW5uaW5nIGludGVncmF0
aW9uIHRlc3RzCgpTZXQgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlcyBgTVlT
UUxfREFUQUJBU0VgLCBgTVlTUUxfSE9TVGAsIGBNWVNRTF9QT1JUYCwKYE1Z
U1FMX1VTRVJgIGFuZCBgTVlTUUxfUEFTU1dPUkRgLiBgTVlTUUxfU09DS0VU
YCBjYW4gYWxzbyBiZSB1c2VkIGluIHBsYWNlCm9mIGBNWVNRTF9IT1NUYCBh
bmQgYE1ZU1FMX1BPUlRgIHRvIGNvbm5lY3Qgb3ZlciBhIFVOSVggc29ja2V0
LiBUaGVuIHJ1bgpgbnBtIHRlc3RgLgoKRm9yIGV4YW1wbGUsIGlmIHlvdSBo
YXZlIGFuIGluc3RhbGxhdGlvbiBvZiBteXNxbCBydW5uaW5nIG9uIGxvY2Fs
aG9zdDozMzA2CmFuZCBubyBwYXNzd29yZCBzZXQgZm9yIHRoZSBgcm9vdGAg
dXNlciwgcnVuOgoKYGBgc2gKJCBteXNxbCAtdSByb290IC1lICJDUkVBVEUg
REFUQUJBU0UgSUYgTk9UIEVYSVNUUyBub2RlX215c3FsX3Rlc3QiCiQgTVlT
UUxfSE9TVD1sb2NhbGhvc3QgTVlTUUxfUE9SVD0zMzA2IE1ZU1FMX0RBVEFC
QVNFPW5vZGVfbXlzcWxfdGVzdCBNWVNRTF9VU0VSPXJvb3QgTVlTUUxfUEFT
U1dPUkQ9IEZJTFRFUj1pbnRlZ3JhdGlvbiBucG0gdGVzdApgYGAKCiMjIFRv
ZG8KCiogUHJlcGFyZWQgc3RhdGVtZW50cwoqIFN1cHBvcnQgZm9yIGVuY29k
aW5ncyBvdGhlciB0aGFuIFVURi04IC8gQVNDSUkKClthcHB2ZXlvci1pbWFn
ZV06IGh0dHBzOi8vYmFkZ2VuLm5ldC9hcHB2ZXlvci9jaS9kb3Vnd2lsc29u
L25vZGUtbXlzcWwvbWFzdGVyP2xhYmVsPXdpbmRvd3MKW2FwcHZleW9yLXVy
bF06IGh0dHBzOi8vY2kuYXBwdmV5b3IuY29tL3Byb2plY3QvZG91Z3dpbHNv
bi9ub2RlLW15c3FsCltjb3ZlcmFsbHMtaW1hZ2VdOiBodHRwczovL2JhZGdl
bi5uZXQvY292ZXJhbGxzL2MvZ2l0aHViL215c3FsanMvbXlzcWwvbWFzdGVy
Cltjb3ZlcmFsbHMtdXJsXTogaHR0cHM6Ly9jb3ZlcmFsbHMuaW8vci9teXNx
bGpzL215c3FsP2JyYW5jaD1tYXN0ZXIKW25vZGUtaW1hZ2VdOiBodHRwczov
L2JhZGdlbi5uZXQvbnBtL25vZGUvbXlzcWwKW25vZGUtdXJsXTogaHR0cHM6
Ly9ub2RlanMub3JnL2VuL2Rvd25sb2FkCltucG0tZG93bmxvYWRzLWltYWdl
XTogaHR0cHM6Ly9iYWRnZW4ubmV0L25wbS9kbS9teXNxbApbbnBtLXVybF06
IGh0dHBzOi8vbnBtanMub3JnL3BhY2thZ2UvbXlzcWwKW25wbS12ZXJzaW9u
LWltYWdlXTogaHR0cHM6Ly9iYWRnZW4ubmV0L25wbS92L215c3FsClt0cmF2
aXMtaW1hZ2VdOiBodHRwczovL2JhZGdlbi5uZXQvdHJhdmlzL215c3FsanMv
bXlzcWwvbWFzdGVyClt0cmF2aXMtdXJsXTogaHR0cHM6Ly90cmF2aXMtY2ku
b3JnL215c3FsanMvbXlzcWwK
",,14790,"bGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczoKICAtICIwLjYiCiAgLSAiMC44
IgogIC0gIjAuMTAiCiAgLSAiMC4xMiIKICAtICIxLjgiCiAgLSAiMi41Igog
IC0gIjMuMyIKICAtICI0LjIuMCIgIyBUZXN0IHRpbWVycyByZWdyZXNzaW9u
CiAgLSAiNC45IgogIC0gIjUuMTIiCiAgLSAiNi4xNyIKICAtICI3LjEwIgog
IC0gIjguMTYiCiAgLSAiOS4xMSIKICAtICZsdHMgIjEwLjE2IgogIC0gIjEx
LjE1IgogIC0gIjEyLjEwIgplbnY6CiAgZ2xvYmFsOgogICAgIyBOZWNlc3Nh
cnkgdG8gYnVpbGQgTm9kZS5qcyAwLjYgb24gVHJhdmlzIENJIGltYWdlcwog
ICAgLSAiQ0M9Z2NjLTQuNiBDWFg9ZysrLTQuNiIKICBtYXRyaXg6CiAgICAt
ICJET0NLRVJfTVlTUUxfVFlQRT1teXNxbCBET0NLRVJfTVlTUUxfVkVSU0lP
Tj01LjciCm1hdHJpeDoKICBpbmNsdWRlOgogICAgLSBub2RlX2pzOiAqbHRz
CiAgICAgIGVudjogIkRPQ0tFUl9NWVNRTF9UWVBFPW15c3FsIERPQ0tFUl9N
WVNRTF9WRVJTSU9OPTUuNSIKICAgIC0gbm9kZV9qczogKmx0cwogICAgICBl
bnY6ICJET0NLRVJfTVlTUUxfVFlQRT1teXNxbCBET0NLRVJfTVlTUUxfVkVS
U0lPTj01LjYiCiAgICAtIG5vZGVfanM6ICpsdHMKICAgICAgZW52OiAiRE9D
S0VSX01ZU1FMX1RZUEU9bWFyaWFkYiBET0NLRVJfTVlTUUxfVkVSU0lPTj01
LjUiCiAgICAtIG5vZGVfanM6ICpsdHMKICAgICAgZW52OiAiRE9DS0VSX01Z
U1FMX1RZUEU9bWFyaWFkYiBET0NLRVJfTVlTUUxfVkVSU0lPTj0xMC4wIgog
ICAgLSBub2RlX2pzOiAqbHRzCiAgICAgIGVudjogIkRPQ0tFUl9NWVNRTF9U
WVBFPW1hcmlhZGIgRE9DS0VSX01ZU1FMX1ZFUlNJT049MTAuMSIKICAgIC0g
bm9kZV9qczogKmx0cwogICAgICBlbnY6ICJET0NLRVJfTVlTUUxfVFlQRT1t
YXJpYWRiIERPQ0tFUl9NWVNRTF9WRVJTSU9OPTEwLjIiCiAgICAtIG5vZGVf
anM6ICpsdHMKICAgICAgZW52OiAiRE9DS0VSX01ZU1FMX1RZUEU9bWFyaWFk
YiBET0NLRVJfTVlTUUxfVkVSU0lPTj0xMC4zIgoKZGlzdDogdHJ1c3R5CmFk
ZG9uczoKICBhcHQ6CiAgICBwYWNrYWdlczoKICAgICAgLSBnKystNC42CnN1
ZG86IHJlcXVpcmVkCnNlcnZpY2VzOgogIC0gZG9ja2VyCgpjYWNoZToKICBk
aXJlY3RvcmllczoKICAgIC0gbm9kZV9tb2R1bGVzCgpiZWZvcmVfaW5zdGFs
bDoKICAjIFNraXAgdXBkYXRpbmcgc2hyaW5rd3JhcCAvIGxvY2sKICAtICJu
cG0gY29uZmlnIHNldCBzaHJpbmt3cmFwIGZhbHNlIgoKICAjIFNldHVwIE5v
ZGUuanMgdmVyc2lvbi1zcGVjaWZpYyBkZXBlbmRlbmNpZXMKICAtICJub2Rl
IHRvb2wvaW5zdGFsbC1ueWMuanMgLS1ueWMtb3B0aW9uYWwiCiAgLSAidGVz
dCAkKGVjaG8gJFRSQVZJU19OT0RFX1ZFUlNJT04gfCBjdXQgLWQuIC1mMSkg
LWdlIDYgfHwgbnBtIHJtIC0tc2F2ZS1kZXYgZXNsaW50IgoKICAjIFVwZGF0
ZSBOb2RlLmpzIG1vZHVsZXMKICAtICJ0ZXN0ICEgLWQgbm9kZV9tb2R1bGVz
IHx8IG5wbSBwcnVuZSIKICAtICJ0ZXN0ICEgLWQgbm9kZV9tb2R1bGVzIHx8
IG5wbSByZWJ1aWxkIgoKICAjIFNldHVwIGVudmlyb25tZW50CiAgLSAiZXhw
b3J0IE1ZU1FMX0RBVEFCQVNFPW5vZGVfbXlzcWwiCiAgLSAiZXhwb3J0IE1Z
U1FMX0hPU1Q9bG9jYWxob3N0IgogIC0gImV4cG9ydCBNWVNRTF9QT1JUPSQo
bm9kZSB0b29sL2ZyZWUtcG9ydC5qcykiCiAgLSAiZXhwb3J0IE1ZU1FMX1VT
RVI9cm9vdCIKCmluc3RhbGw6CiAgLSAiZG9ja2VyIHJ1biAtZCAtLW5hbWUg
bXlzcWwgLWUgTVlTUUxfQUxMT1dfRU1QVFlfUEFTU1dPUkQ9eWVzIC1lIE1Z
U1FMX0RBVEFCQVNFPSRNWVNRTF9EQVRBQkFTRSAtcCAkTVlTUUxfUE9SVDoz
MzA2ICRET0NLRVJfTVlTUUxfVFlQRTokRE9DS0VSX01ZU1FMX1ZFUlNJT04i
CiAgLSAibnBtIGluc3RhbGwiCiAgLSAibm9kZSB0b29sL3dhaXQtbXlzcWwu
anMgJE1ZU1FMX1BPUlQgJE1ZU1FMX0hPU1QiCgpiZWZvcmVfc2NyaXB0Ogog
IC0gImRvY2tlciAtLXZlcnNpb24iCiAgLSAibm9kZSB0b29sL215c3FsLXZl
cnNpb24uanMiCgpzY3JpcHQ6CiAgIyBSdW4gdGVzdCBzY3JpcHQKICAtICJu
cG0gcnVuLXNjcmlwdCB0ZXN0LWNpIgogIC0gInRlc3QgLXogJChucG0gLXBz
IGxzIGVzbGludCkgfHwgbnBtIHJ1bi1zY3JpcHQgbGludCIKCmFmdGVyX3Nj
cmlwdDoKICAtICJ0ZXN0IC1kIC5ueWNfb3V0cHV0ICYmIG5wbSBpbnN0YWxs
IGNvdmVyYWxsc0AyICYmIG55YyByZXBvcnQgLS1yZXBvcnRlcj10ZXh0LWxj
b3YgfCBjb3ZlcmFsbHMiCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
