name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'modern-js-cheatsheet',103953059,b'Cheatsheet for the JavaScript knowledge you will frequently encounter in modern projects.',,7,19358,,593,False,b'https://api.github.com/repos/mbeaudru/modern-js-cheatsheet/forks',"IyBNb2Rlcm4gSmF2YVNjcmlwdCBDaGVhdHNoZWV0CgohW01vZGVybiBKYXZh
U2NyaXB0IGNoZWF0c2hlZXRdKGh0dHBzOi8vaS5pbWd1ci5jb20vYWV4UHhN
Yi5wbmcpCjxzdWI+SW1hZ2UgQ3JlZGl0czogW0FobWFkIEF3YWlzIOKaoe+4
j10oaHR0cHM6Ly9naXRodWIuY29tL2FobWFkYXdhaXMpPC9zdWI+Cgo+IElm
IHlvdSBsaWtlIHRoaXMgY29udGVudCwgeW91IGNhbiBwaW5nIG1lIG9yIGZv
bGxvdyBtZSBvbiBUd2l0dGVyIDorMToKClshW1R3ZWV0IGZvciBoZWxwXSho
dHRwczovL2ltZy5zaGllbGRzLmlvL3R3aXR0ZXIvZm9sbG93L21iZWF1ZHJ1
P2xhYmVsPVR3ZWV0JTIwJTQwbWJlYXVkcnUmc3R5bGU9c29jaWFsKV0oaHR0
cHM6Ly90d2l0dGVyLmNvbS9tYmVhdWRydS8pCgojIyBJbnRyb2R1Y3Rpb24K
CiMjIyBNb3RpdmF0aW9uCgpUaGlzIGRvY3VtZW50IGlzIGEgY2hlYXRzaGVl
dCBmb3IgSmF2YVNjcmlwdCB5b3Ugd2lsbCBmcmVxdWVudGx5IGVuY291bnRl
ciBpbiBtb2Rlcm4gcHJvamVjdHMgYW5kIG1vc3QgY29udGVtcG9yYXJ5IHNh
bXBsZSBjb2RlLgoKVGhpcyBndWlkZSBpcyBub3QgaW50ZW5kZWQgdG8gdGVh
Y2ggeW91IEphdmFTY3JpcHQgZnJvbSB0aGUgZ3JvdW5kIHVwLCBidXQgdG8g
aGVscCBkZXZlbG9wZXJzIHdpdGggYmFzaWMga25vd2xlZGdlIHdobyBtYXkg
c3RydWdnbGUgdG8gZ2V0IGZhbWlsaWFyIHdpdGggbW9kZXJuIGNvZGViYXNl
cyAob3IgbGV0J3Mgc2F5IHRvIGxlYXJuIFJlYWN0IGZvciBpbnN0YW5jZSkg
YmVjYXVzZSBvZiB0aGUgSmF2YVNjcmlwdCBjb25jZXB0cyB1c2VkLgoKQmVz
aWRlcywgSSB3aWxsIHNvbWV0aW1lcyBwcm92aWRlIHBlcnNvbmFsIHRpcHMg
dGhhdCBtYXkgYmUgZGViYXRhYmxlIGJ1dCB3aWxsIHRha2UgY2FyZSB0byBt
ZW50aW9uIHRoYXQgaXQncyBhIHBlcnNvbmFsIHJlY29tbWVuZGF0aW9uIHdo
ZW4gSSBkbyBzby4KCj4gKipOb3RlOioqIE1vc3Qgb2YgdGhlIGNvbmNlcHRz
IGludHJvZHVjZWQgaGVyZSBhcmUgY29taW5nIGZyb20gYSBKYXZhU2NyaXB0
IGxhbmd1YWdlIHVwZGF0ZSAoRVMyMDE1LCBvZnRlbiBjYWxsZWQgRVM2KS4g
WW91IGNhbiBmaW5kIG5ldyBmZWF0dXJlcyBhZGRlZCBieSB0aGlzIHVwZGF0
ZSBbaGVyZV0oaHR0cDovL2VzNi1mZWF0dXJlcy5vcmcpOyBpdCdzIHZlcnkg
d2VsbCBkb25lLgoKIyMjIENvbXBsZW1lbnRhcnkgUmVzb3VyY2VzCgpXaGVu
IHlvdSBzdHJ1Z2dsZSB0byB1bmRlcnN0YW5kIGEgbm90aW9uLCBJIHN1Z2dl
c3QgeW91IGxvb2sgZm9yIGFuc3dlcnMgb24gdGhlIGZvbGxvd2luZyByZXNv
dXJjZXM6CgotIFtNRE4gKE1vemlsbGEgRGV2ZWxvcGVyIE5ldHdvcmspXSho
dHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9zZWFyY2g/cT0p
Ci0gW1lvdSBkb24ndCBrbm93IEpTIChib29rKV0oaHR0cHM6Ly9naXRodWIu
Y29tL2dldGlmeS9Zb3UtRG9udC1Lbm93LUpTKQotIFtFUzYgRmVhdHVyZXMg
d2l0aCBleGFtcGxlc10oaHR0cDovL2VzNi1mZWF0dXJlcy5vcmcpCi0gW1dl
cyBCb3MgYmxvZyAoRVM2KV0oaHR0cDovL3dlc2Jvcy5jb20vY2F0ZWdvcnkv
ZXM2LykKLSBbSmF2YXNjcmlwdCBCYXNpY3MgZm9yIEJlZ2lubmVyc10oaHR0
cHM6Ly93d3cudWRhY2l0eS5jb20vY291cnNlL2phdmFzY3JpcHQtYmFzaWNz
LS11ZDgwNCkgLSBhIGZyZWUgVWRhY2l0eSBjb3Vyc2UKLSBbUmVkZGl0IChK
YXZhU2NyaXB0KV0oaHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL2phdmFzY3Jp
cHQvKQotIFtHb29nbGVdKGh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vKSB0byBm
aW5kIHNwZWNpZmljIGJsb2cgYW5kIHJlc291cmNlcwotIFtTdGFja092ZXJm
bG93XShodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy90YWdn
ZWQvamF2YXNjcmlwdCkKCiMjIFRhYmxlIG9mIENvbnRlbnRzCgotIFtNb2Rl
cm4gSmF2YVNjcmlwdCBjaGVhdHNoZWV0XSgjbW9kZXJuLWphdmFzY3JpcHQt
Y2hlYXRzaGVldCkKICAqIFtJbnRyb2R1Y3Rpb25dKCNpbnRyb2R1Y3Rpb24p
CiAgICArIFtNb3RpdmF0aW9uXSgjbW90aXZhdGlvbikKICAgICsgW0NvbXBs
ZW1lbnRhcnkgcmVzb3VyY2VzXSgjY29tcGxlbWVudGFyeS1yZXNvdXJjZXMp
CiAgKiBbVGFibGUgb2YgY29udGVudHNdKCN0YWJsZS1vZi1jb250ZW50cykK
ICAqIFtOb3Rpb25zXSgjbm90aW9ucykKICAgICsgW1ZhcmlhYmxlIGRlY2xh
cmF0aW9uOiB2YXIsIGNvbnN0LCBsZXRdKCN2YXJpYWJsZS1kZWNsYXJhdGlv
bi12YXItY29uc3QtbGV0KQogICAgICAtIFtTaG9ydCBleHBsYW5hdGlvbl0o
I3Nob3J0LWV4cGxhbmF0aW9uKQogICAgICAtIFtTYW1wbGUgY29kZV0oI3Nh
bXBsZS1jb2RlKQogICAgICAtIFtEZXRhaWxlZCBleHBsYW5hdGlvbl0oI2Rl
dGFpbGVkLWV4cGxhbmF0aW9uKQogICAgICAtIFtFeHRlcm5hbCByZXNvdXJj
ZV0oI2V4dGVybmFsLXJlc291cmNlKQogICAgKyBbQXJyb3cgZnVuY3Rpb25d
KCMtYXJyb3ctZnVuY3Rpb24pCiAgICAgIC0gW1NhbXBsZSBjb2RlXSgjc2Ft
cGxlLWNvZGUtMSkKICAgICAgLSBbRGV0YWlsZWQgZXhwbGFuYXRpb25dKCNk
ZXRhaWxlZC1leHBsYW5hdGlvbi0xKQogICAgICAgICogW0NvbmNpc2lvbl0o
I2NvbmNpc2lvbikKICAgICAgICAqIFsqdGhpcyogcmVmZXJlbmNlXSgjdGhp
cy1yZWZlcmVuY2UpCiAgICAgIC0gW1VzZWZ1bCByZXNvdXJjZXNdKCN1c2Vm
dWwtcmVzb3VyY2VzKQogICAgKyBbRnVuY3Rpb24gZGVmYXVsdCBwYXJhbWV0
ZXIgdmFsdWVdKCNmdW5jdGlvbi1kZWZhdWx0LXBhcmFtZXRlci12YWx1ZSkK
ICAgICAgLSBbRXh0ZXJuYWwgcmVzb3VyY2VdKCNleHRlcm5hbC1yZXNvdXJj
ZS0xKQogICAgKyBbRGVzdHJ1Y3R1cmluZyBvYmplY3RzIGFuZCBhcnJheXNd
KCNkZXN0cnVjdHVyaW5nLW9iamVjdHMtYW5kLWFycmF5cykKICAgICAgLSBb
RXhwbGFuYXRpb24gd2l0aCBzYW1wbGUgY29kZV0oI2V4cGxhbmF0aW9uLXdp
dGgtc2FtcGxlLWNvZGUpCiAgICAgIC0gW1VzZWZ1bCByZXNvdXJjZXNdKCN1
c2VmdWwtcmVzb3VyY2VzLTEpCiAgICArIFtBcnJheSBtZXRob2RzIC0gbWFw
IC8gZmlsdGVyIC8gcmVkdWNlXSgjYXJyYXktbWV0aG9kcy0tLW1hcC0tZmls
dGVyLS1yZWR1Y2UpCiAgICAgIC0gW1NhbXBsZSBjb2RlXSgjc2FtcGxlLWNv
ZGUtMikKICAgICAgLSBbRXhwbGFuYXRpb25dKCNleHBsYW5hdGlvbikKICAg
ICAgICAqIFtBcnJheS5wcm90b3R5cGUubWFwKCldKCNhcnJheXByb3RvdHlw
ZW1hcCkKICAgICAgICAqIFtBcnJheS5wcm90b3R5cGUuZmlsdGVyKCldKCNh
cnJheXByb3RvdHlwZWZpbHRlcikKICAgICAgICAqIFtBcnJheS5wcm90b3R5
cGUucmVkdWNlKCldKCNhcnJheXByb3RvdHlwZXJlZHVjZSkKICAgICAgICAq
IFtBcnJheS5wcm90b3R5cGUuZmluZCgpXSgjYXJyYXlwcm90b3R5cGVmaW5k
KQogICAgICAtIFtFeHRlcm5hbCBSZXNvdXJjZV0oI2V4dGVybmFsLXJlc291
cmNlLTIpCiAgICArIFtTcHJlYWQgb3BlcmF0b3IgIi4uLiJdKCNzcHJlYWQt
b3BlcmF0b3ItKQogICAgICAtIFtTYW1wbGUgY29kZV0oI3NhbXBsZS1jb2Rl
LTMpCiAgICAgIC0gW0V4cGxhbmF0aW9uXSgjZXhwbGFuYXRpb24tMSkKICAg
ICAgICAqIFtJbiBpdGVyYWJsZXMgKGxpa2UgYXJyYXlzKV0oI2luLWl0ZXJh
Ymxlcy1saWtlLWFycmF5cykKICAgICAgICAqIFtGdW5jdGlvbiByZXN0IHBh
cmFtZXRlcl0oI2Z1bmN0aW9uLXJlc3QtcGFyYW1ldGVyKQogICAgICAgICog
W09iamVjdCBwcm9wZXJ0aWVzIHNwcmVhZGluZ10oI29iamVjdC1wcm9wZXJ0
aWVzLXNwcmVhZGluZykKICAgICAgLSBbRXh0ZXJuYWwgcmVzb3VyY2VzXSgj
ZXh0ZXJuYWwtcmVzb3VyY2VzKQogICAgKyBbT2JqZWN0IHByb3BlcnR5IHNo
b3J0aGFuZF0oI29iamVjdC1wcm9wZXJ0eS1zaG9ydGhhbmQpCiAgICAgIC0g
W0V4cGxhbmF0aW9uXSgjZXhwbGFuYXRpb24tMikKICAgICAgLSBbRXh0ZXJu
YWwgcmVzb3VyY2VzXSgjZXh0ZXJuYWwtcmVzb3VyY2VzLTEpCiAgICArIFtQ
cm9taXNlc10oI3Byb21pc2VzKQogICAgICAtIFtTYW1wbGUgY29kZV0oI3Nh
bXBsZS1jb2RlLTQpCiAgICAgIC0gW0V4cGxhbmF0aW9uXSgjZXhwbGFuYXRp
b24tMykKICAgICAgICAqIFtDcmVhdGUgdGhlIHByb21pc2VdKCNjcmVhdGUt
dGhlLXByb21pc2UpCiAgICAgICAgKiBbUHJvbWlzZSBoYW5kbGVycyB1c2Fn
ZV0oI3Byb21pc2UtaGFuZGxlcnMtdXNhZ2UpCiAgICAgIC0gW0V4dGVybmFs
IFJlc291cmNlc10oI2V4dGVybmFsLXJlc291cmNlcy0yKQogICAgKyBbVGVt
cGxhdGUgbGl0ZXJhbHNdKCN0ZW1wbGF0ZS1saXRlcmFscykKICAgICAgLSBb
U2FtcGxlIGNvZGVdKCNzYW1wbGUtY29kZS01KQogICAgICAtIFtFeHRlcm5h
bCByZXNvdXJjZXNdKCNleHRlcm5hbC1yZXNvdXJjZXMtMykKICAgICsgW1Rh
Z2dlZCBUZW1wbGF0ZSBMaXRlcmFsc10oI3RhZ2dlZC10ZW1wbGF0ZS1saXRl
cmFscykKICAgICAgLSBbRXh0ZXJuYWwgcmVzb3VyY2VzXSgjZXh0ZXJuYWwt
cmVzb3VyY2VzLTQpCiAgICArIFtJbXBvcnRzIC8gRXhwb3J0c10oI2ltcG9y
dHMtLWV4cG9ydHMpCiAgICAgIC0gW0V4cGxhbmF0aW9uIHdpdGggc2FtcGxl
IGNvZGVdKCNleHBsYW5hdGlvbi13aXRoLXNhbXBsZS1jb2RlLTEpCiAgICAg
ICAgKiBbTmFtZWQgZXhwb3J0c10oI25hbWVkLWV4cG9ydHMpCiAgICAgICAg
KiBbRGVmYXVsdCBpbXBvcnQgLyBleHBvcnRdKCNkZWZhdWx0LWltcG9ydC0t
ZXhwb3J0KQogICAgICAtIFtFeHRlcm5hbCByZXNvdXJjZXNdKCNleHRlcm5h
bC1yZXNvdXJjZXMtNSkKICAgICsgW0phdmFTY3JpcHQgKnRoaXMqXSgjLWph
dmFzY3JpcHQtdGhpcykKICAgICAgLSBbRXh0ZXJuYWwgcmVzb3VyY2VzXSgj
ZXh0ZXJuYWwtcmVzb3VyY2VzLTYpCiAgICArIFtDbGFzc10oI2NsYXNzKQog
ICAgICAtIFtTYW1wbGVzXSgjc2FtcGxlcykKICAgICAgLSBbRXh0ZXJuYWwg
cmVzb3VyY2VzXSgjZXh0ZXJuYWwtcmVzb3VyY2VzLTcpCiAgICArIFtFeHRl
bmRzIGFuZCBzdXBlciBrZXl3b3Jkc10oI2V4dGVuZHMtYW5kLXN1cGVyLWtl
eXdvcmRzKQogICAgICAtIFtTYW1wbGUgQ29kZV0oI3NhbXBsZS1jb2RlLTYp
CiAgICAgIC0gW0V4dGVybmFsIFJlc291cmNlc10oI2V4dGVybmFsLXJlc291
cmNlcy04KQogICAgKyBbQXN5bmMgQXdhaXRdKCNhc3luYy1hd2FpdCkKICAg
ICAgLSBbU2FtcGxlIGNvZGVdKCNzYW1wbGUtY29kZS03KQogICAgICAtIFtF
eHBsYW5hdGlvbiB3aXRoIHNhbXBsZSBjb2RlXSgjZXhwbGFuYXRpb24td2l0
aC1zYW1wbGUtY29kZS0yKQogICAgICAtIFtFcnJvciBoYW5kbGluZ10oI2Vy
cm9yLWhhbmRsaW5nKQogICAgICAtIFtFeHRlcm5hbCByZXNvdXJjZXNdKCNl
eHRlcm5hbC1yZXNvdXJjZXMtOSkKICAgICsgW1RydXRoeSAvIEZhbHN5XSgj
dHJ1dGh5LS1mYWxzeSkKICAgICAgLSBbRXh0ZXJuYWwgcmVzb3VyY2VzXSgj
ZXh0ZXJuYWwtcmVzb3VyY2VzLTEwKQogICAgKyBbQW5hbW9ycGhpc21zIC8g
Q2F0YW1wb3JwaGlzbXNdKCNhbmFtb3JwaGlzbXMtYW5kLWNhdGFtb3JwaGlz
bXMpCiAgICAgIC0gW0FuYW1vcnBoaXNtc10oI2FuYW1vcnBoaXNtcykKICAg
ICAgLSBbQ2F0YW1vcnBoaXNtc10oI2NhdGFtb3JwaGlzbXMpCiAgICAgIC0g
W0V4dGVybmFsIHJlc291cmNlc10oI2V4dGVybmFsLXJlc291cmNlcy0xMSkK
ICAgICsgW0dlbmVyYXRvcnNdKCNnZW5lcmF0b3JzKQogICAgICAtIFtFeHRl
cm5hbCByZXNvdXJjZXNdKCNleHRlcm5hbC1yZXNvdXJjZXMtMTIpCiAgICAr
IFtTdGF0aWMgTWV0aG9kc10oI3N0YXRpYy1tZXRob2RzKQogICAgICAtIFtT
aG9ydCBFeHBsYW5hdGlvbl0oI3Nob3J0LWV4cGxhbmF0aW9uLTEpCiAgICAg
IC0gW1NhbXBsZSBDb2RlXSgjc2FtcGxlLWNvZGUtOCkKICAgICAgLSBbRGV0
YWlsZWQgRXhwbGFuYXRpb25dKCNkZXRhaWxlZC1leHBsYW5hdGlvbi0yKQog
ICAgICAgICogW0NhbGxpbmcgb3RoZXIgc3RhdGljIG1ldGhvZHMgZnJvbSBh
IHN0YXRpYyBtZXRob2RdKCNjYWxsaW5nLW90aGVyLXN0YXRpYy1tZXRob2Rz
LWZyb20tYS1zdGF0aWMtbWV0aG9kKQogICAgICAgICogW0NhbGxpbmcgc3Rh
dGljIG1ldGhvZHMgZnJvbSBub24tc3RhdGljIG1ldGhvZHNdKCNjYWxsaW5n
LXN0YXRpYy1tZXRob2RzLWZyb20tbm9uLXN0YXRpYy1tZXRob2RzKQogICAg
ICAtIFtFeHRlcm5hbCByZXNvdXJjZXNdKCNleHRlcm5hbC1yZXNvdXJjZXMt
MTMpCiAgKiBbR2xvc3NhcnldKCNnbG9zc2FyeSkKICAgICsgW1Njb3BlXSgj
LXNjb3BlKQogICAgKyBbVmFyaWFibGUgbXV0YXRpb25dKCMtdmFyaWFibGUt
bXV0YXRpb24pCgojIyBOb3Rpb25zCgojIyMgVmFyaWFibGUgZGVjbGFyYXRp
b246IHZhciwgY29uc3QsIGxldAoKSW4gSmF2YVNjcmlwdCwgdGhlcmUgYXJl
IHRocmVlIGtleXdvcmRzIGF2YWlsYWJsZSB0byBkZWNsYXJlIGEgdmFyaWFi
bGUsIGFuZCBlYWNoIGhhcyBpdHMgZGlmZmVyZW5jZXMuIFRob3NlIGFyZSBg
YGB2YXJgYGAsIGBgYGxldGBgYCBhbmQgYGBgY29uc3RgYGAuCgojIyMjIFNo
b3J0IGV4cGxhbmF0aW9uCgpWYXJpYWJsZXMgZGVjbGFyZWQgd2l0aCBgYGBj
b25zdGBgYCBrZXl3b3JkIGNhbid0IGJlIHJlYXNzaWduZWQsIHdoaWxlIGBg
YGxldGBgYCBhbmQgYGBgdmFyYGBgIGNhbi4KCkkgcmVjb21tZW5kIGFsd2F5
cyBkZWNsYXJpbmcgeW91ciB2YXJpYWJsZXMgd2l0aCBgYGBjb25zdGBgYCBi
eSBkZWZhdWx0LCBidXQgd2l0aCBgYGBsZXRgYGAgaWYgaXQgaXMgYSB2YXJp
YWJsZSB0aGF0IHlvdSBuZWVkIHRvICptdXRhdGUqIG9yIHJlYXNzaWduIGxh
dGVyLgoKPHRhYmxlPgogIDx0cj4KICAgIDx0aD48L3RoPgogICAgPHRoPlNj
b3BlPC90aD4KICAgIDx0aD5SZWFzc2lnbmFibGU8L3RoPgogICAgPHRoPk11
dGFibGU8L3RoPgogICA8dGg+PGEgaHJlZj0iI3Rkel9zYW1wbGUiPlRlbXBv
cmFsIERlYWQgWm9uZTwvYT48L3RoPgogIDwvdHI+CiAgPHRyPgogICAgPHRo
PmNvbnN0PC90aD4KICAgIDx0ZD5CbG9jazwvdGQ+CiAgICA8dGQ+Tm88L3Rk
PgogICAgPHRkPjxhIGhyZWY9IiNjb25zdF9tdXRhYmxlX3NhbXBsZSI+WWVz
PC9hPjwvdGQ+CiAgICA8dGQ+WWVzPC90ZD4KICA8L3RyPgogIDx0cj4KICAg
IDx0aD5sZXQ8L3RoPgogICAgPHRkPkJsb2NrPC90ZD4KICAgIDx0ZD5ZZXM8
L3RkPgogICAgPHRkPlllczwvdGQ+CiAgICA8dGQ+WWVzPC90ZD4KICA8L3Ry
PgogICA8dHI+CiAgICA8dGg+dmFyPC90aD4KICAgIDx0ZD5GdW5jdGlvbjwv
dGQ+CiAgICA8dGQ+WWVzPC90ZD4KICAgIDx0ZD5ZZXM8L3RkPgogICAgPHRk
Pk5vPC90ZD4KICA8L3RyPgo8L3RhYmxlPgoKIyMjIyBTYW1wbGUgY29kZQoK
YGBgamF2YXNjcmlwdApjb25zdCBwZXJzb24gPSAiTmljayI7CnBlcnNvbiA9
ICJKb2huIiAvLyBXaWxsIHJhaXNlIGFuIGVycm9yLCBwZXJzb24gY2FuJ3Qg
YmUgcmVhc3NpZ25lZApgYGAKCmBgYGphdmFzY3JpcHQKbGV0IHBlcnNvbiA9
ICJOaWNrIjsKcGVyc29uID0gIkpvaG4iOwpjb25zb2xlLmxvZyhwZXJzb24p
IC8vICJKb2huIiwgcmVhc3NpZ25tZW50IGlzIGFsbG93ZWQgd2l0aCBsZXQK
YGBgCgojIyMjIERldGFpbGVkIGV4cGxhbmF0aW9uCgpUaGUgWypzY29wZSpd
KCNzY29wZV9kZWYpIG9mIGEgdmFyaWFibGUgcm91Z2hseSBtZWFucyAid2hl
cmUgaXMgdGhpcyB2YXJpYWJsZSBhdmFpbGFibGUgaW4gdGhlIGNvZGUiLgoK
IyMjIyMgdmFyCgpgYGB2YXJgYGAgZGVjbGFyZWQgdmFyaWFibGVzIGFyZSAq
ZnVuY3Rpb24gc2NvcGVkKiwgbWVhbmluZyB0aGF0IHdoZW4gYSB2YXJpYWJs
ZSBpcyBjcmVhdGVkIGluIGEgZnVuY3Rpb24sIGV2ZXJ5dGhpbmcgaW4gdGhh
dCBmdW5jdGlvbiBjYW4gYWNjZXNzIHRoYXQgdmFyaWFibGUuIEJlc2lkZXMs
IGEgKmZ1bmN0aW9uIHNjb3BlZCogdmFyaWFibGUgY3JlYXRlZCBpbiBhIGZ1
bmN0aW9uIGNhbid0IGJlIGFjY2Vzc2VkIG91dHNpZGUgdGhpcyBmdW5jdGlv
bi4KCkkgcmVjb21tZW5kIHlvdSB0byBwaWN0dXJlIGl0IGFzIGlmIGFuICpY
IHNjb3BlZCogdmFyaWFibGUgbWVhbnQgdGhhdCB0aGlzIHZhcmlhYmxlIHdh
cyBhIHByb3BlcnR5IG9mIFguCgpgYGBqYXZhc2NyaXB0CmZ1bmN0aW9uIG15
RnVuY3Rpb24oKSB7CiAgdmFyIG15VmFyID0gIk5pY2siOwogIGNvbnNvbGUu
bG9nKG15VmFyKTsgLy8gIk5pY2siIC0gbXlWYXIgaXMgYWNjZXNzaWJsZSBp
bnNpZGUgdGhlIGZ1bmN0aW9uCn0KY29uc29sZS5sb2cobXlWYXIpOyAvLyBU
aHJvd3MgYSBSZWZlcmVuY2VFcnJvciwgbXlWYXIgaXMgbm90IGFjY2Vzc2li
bGUgb3V0c2lkZSB0aGUgZnVuY3Rpb24uCmBgYAoKU3RpbGwgZm9jdXNpbmcg
b24gdGhlIHZhcmlhYmxlIHNjb3BlLCBoZXJlIGlzIGEgbW9yZSBzdWJ0bGUg
ZXhhbXBsZToKCmBgYGphdmFzY3JpcHQKZnVuY3Rpb24gbXlGdW5jdGlvbigp
IHsKICB2YXIgbXlWYXIgPSAiTmljayI7CiAgaWYgKHRydWUpIHsKICAgIHZh
ciBteVZhciA9ICJKb2huIjsKICAgIGNvbnNvbGUubG9nKG15VmFyKTsgLy8g
IkpvaG4iCiAgICAvLyBhY3R1YWxseSwgbXlWYXIgYmVpbmcgZnVuY3Rpb24g
c2NvcGVkLCB3ZSBqdXN0IGVyYXNlZCB0aGUgcHJldmlvdXMgbXlWYXIgdmFs
dWUgIk5pY2siIGZvciAiSm9obiIKICB9CiAgY29uc29sZS5sb2cobXlWYXIp
OyAvLyAiSm9obiIgLSBzZWUgaG93IHRoZSBpbnN0cnVjdGlvbnMgaW4gdGhl
IGlmIGJsb2NrIGFmZmVjdGVkIHRoaXMgdmFsdWUKfQpjb25zb2xlLmxvZyht
eVZhcik7IC8vIFRocm93cyBhIFJlZmVyZW5jZUVycm9yLCBteVZhciBpcyBu
b3QgYWNjZXNzaWJsZSBvdXRzaWRlIHRoZSBmdW5jdGlvbi4KYGBgCgpCZXNp
ZGVzLCAqdmFyKiBkZWNsYXJlZCB2YXJpYWJsZXMgYXJlIG1vdmVkIHRvIHRo
ZSB0b3Agb2YgdGhlIHNjb3BlIGF0IGV4ZWN1dGlvbi4gVGhpcyBpcyB3aGF0
IHdlIGNhbGwgW3ZhciBob2lzdGluZ10oaHR0cHM6Ly9kZXZlbG9wZXIubW96
aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2Uv
U3RhdGVtZW50cy92YXIjdmFyX2hvaXN0aW5nKS4KClRoaXMgcG9ydGlvbiBv
ZiBjb2RlOgoKYGBganMKY29uc29sZS5sb2cobXlWYXIpIC8vIHVuZGVmaW5l
ZCAtLSBubyBlcnJvciByYWlzZWQKdmFyIG15VmFyID0gMjsKYGBgCgppcyB1
bmRlcnN0b29kIGF0IGV4ZWN1dGlvbiBsaWtlOgoKYGBganMKdmFyIG15VmFy
Owpjb25zb2xlLmxvZyhteVZhcikgLy8gdW5kZWZpbmVkIC0tIG5vIGVycm9y
IHJhaXNlZApteVZhciA9IDI7CmBgYAoKIyMjIyMgbGV0CgpgYGB2YXJgYGAg
YW5kIGBgYGxldCBgYGAgYXJlIGFib3V0IHRoZSBzYW1lLCBidXQgYGBgbGV0
YGBgIGRlY2xhcmVkIHZhcmlhYmxlcwoKLSBhcmUgKmJsb2NrIHNjb3BlZCoK
LSBhcmUgKipub3QqKiBhY2Nlc3NpYmxlIGJlZm9yZSB0aGV5IGFyZSBhc3Np
Z25lZAotIGNhbid0IGJlIHJlLWRlY2xhcmVkIGluIHRoZSBzYW1lIHNjb3Bl
CgpMZXQncyBzZWUgdGhlIGltcGFjdCBvZiBibG9jay1zY29waW5nIHRha2lu
ZyBvdXIgcHJldmlvdXMgZXhhbXBsZToKCmBgYGphdmFzY3JpcHQKZnVuY3Rp
b24gbXlGdW5jdGlvbigpIHsKICBsZXQgbXlWYXIgPSAiTmljayI7CiAgaWYg
KHRydWUpIHsKICAgIGxldCBteVZhciA9ICJKb2huIjsKICAgIGNvbnNvbGUu
bG9nKG15VmFyKTsgLy8gIkpvaG4iCiAgICAvLyBhY3R1YWxseSwgbXlWYXIg
YmVpbmcgYmxvY2sgc2NvcGVkLCB3ZSBqdXN0IGNyZWF0ZWQgYSBuZXcgdmFy
aWFibGUgbXlWYXIuCiAgICAvLyB0aGlzIHZhcmlhYmxlIGlzIG5vdCBhY2Nl
c3NpYmxlIG91dHNpZGUgdGhpcyBibG9jayBhbmQgdG90YWxseSBpbmRlcGVu
ZGVudAogICAgLy8gZnJvbSB0aGUgZmlyc3QgbXlWYXIgY3JlYXRlZCAhCiAg
fQogIGNvbnNvbGUubG9nKG15VmFyKTsgLy8gIk5pY2siLCBzZWUgaG93IHRo
ZSBpbnN0cnVjdGlvbnMgaW4gdGhlIGlmIGJsb2NrIERJRCBOT1QgYWZmZWN0
IHRoaXMgdmFsdWUKfQpjb25zb2xlLmxvZyhteVZhcik7IC8vIFRocm93cyBh
IFJlZmVyZW5jZUVycm9yLCBteVZhciBpcyBub3QgYWNjZXNzaWJsZSBvdXRz
aWRlIHRoZSBmdW5jdGlvbi4KYGBgCgo8YSBuYW1lPSJ0ZHpfc2FtcGxlIj48
L2E+IE5vdywgd2hhdCBpdCBtZWFucyBmb3IgKmxldCogKGFuZCAqY29uc3Qq
KSB2YXJpYWJsZXMgZm9yIG5vdCBiZWluZyBhY2Nlc3NpYmxlIGJlZm9yZSBi
ZWluZyBhc3NpZ25lZDoKCmBgYGpzCmNvbnNvbGUubG9nKG15VmFyKSAvLyBy
YWlzZXMgYSBSZWZlcmVuY2VFcnJvciAhCmxldCBteVZhciA9IDI7CmBgYAoK
QnkgY29udHJhc3Qgd2l0aCAqdmFyKiB2YXJpYWJsZXMsIGlmIHlvdSB0cnkg
dG8gcmVhZCBvciB3cml0ZSBvbiBhICpsZXQqIG9yICpjb25zdCogdmFyaWFi
bGUgYmVmb3JlIHRoZXkgYXJlIGFzc2lnbmVkIGFuIGVycm9yIHdpbGwgYmUg
cmFpc2VkLiBUaGlzIHBoZW5vbWVub24gaXMgb2Z0ZW4gY2FsbGVkIFsqVGVt
cG9yYWwgZGVhZCB6b25lKl0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5v
cmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvU3RhdGVt
ZW50cy9sZXQjVGVtcG9yYWxfRGVhZF9ab25lX2FuZF9lcnJvcnNfd2l0aF9s
ZXQpIG9yICpURFoqLgoKPiAqKk5vdGU6KiogVGVjaG5pY2FsbHksICpsZXQq
IGFuZCAqY29uc3QqIHZhcmlhYmxlcyBkZWNsYXJhdGlvbnMgYXJlIGJlaW5n
IGhvaXN0ZWQgdG9vLCBidXQgbm90IHRoZWlyIGFzc2lnbmF0aW9uLiBTaW5j
ZSB0aGV5J3JlIG1hZGUgc28gdGhhdCB0aGV5IGNhbid0IGJlIHVzZWQgYmVm
b3JlIGFzc2lnbmF0aW9uLCBpdCBpbnR1aXRpdmVseSBmZWVscyBsaWtlIHRo
ZXJlIGlzIG5vIGhvaXN0aW5nLCBidXQgdGhlcmUgaXMuIEZpbmQgb3V0IG1v
cmUgb24gdGhpcyBbdmVyeSBkZXRhaWxlZCBleHBsYW5hdGlvbiBoZXJlXSho
dHRwOi8vanNyb2Nrcy5vcmcvMjAxNS8wMS90ZW1wb3JhbC1kZWFkLXpvbmUt
dGR6LWRlbXlzdGlmaWVkKSBpZiB5b3Ugd2FudCB0byBrbm93IG1vcmUuCgpJ
biBhZGRpdGlvbiwgeW91IGNhbid0IHJlLWRlY2xhcmUgYSAqbGV0KiB2YXJp
YWJsZToKCmBgYGpzCmxldCBteVZhciA9IDI7CmxldCBteVZhciA9IDM7IC8v
IFJhaXNlcyBhIFN5bnRheEVycm9yCmBgYAoKIyMjIyMgY29uc3QKCmBgYGNv
bnN0YGBgIGRlY2xhcmVkIHZhcmlhYmxlcyBiZWhhdmUgbGlrZSAqbGV0KiB2
YXJpYWJsZXMsIGJ1dCBhbHNvIHRoZXkgY2FuJ3QgYmUgcmVhc3NpZ25lZC4K
ClRvIHN1bSBpdCB1cCwgKmNvbnN0KiB2YXJpYWJsZXM6CgotIGFyZSAqYmxv
Y2sgc2NvcGVkKgotIGFyZSBub3QgYWNjZXNzaWJsZSBiZWZvcmUgYmVpbmcg
YXNzaWduZWQKLSBjYW4ndCBiZSByZS1kZWNsYXJlZCBpbiB0aGUgc2FtZSBz
Y29wZQotIGNhbid0IGJlIHJlYXNzaWduZWQKCmBgYGpzCmNvbnN0IG15VmFy
ID0gIk5pY2siOwpteVZhciA9ICJKb2huIiAvLyByYWlzZXMgYW4gZXJyb3Is
IHJlYXNzaWdubWVudCBpcyBub3QgYWxsb3dlZApgYGAKCmBgYGpzCmNvbnN0
IG15VmFyID0gIk5pY2siOwpjb25zdCBteVZhciA9ICJKb2huIiAvLyByYWlz
ZXMgYW4gZXJyb3IsIHJlLWRlY2xhcmF0aW9uIGlzIG5vdCBhbGxvd2VkCmBg
YAoKPGEgbmFtZT0iY29uc3RfbXV0YWJsZV9zYW1wbGUiPjwvYT4gQnV0IHRo
ZXJlIGlzIGEgc3VidGxldHkgOiBgYGBjb25zdGBgYCB2YXJpYWJsZXMgYXJl
IG5vdCBbKippbW11dGFibGUqKl0oI211dGF0aW9uX2RlZikgISBDb25jcmV0
ZWx5LCBpdCBtZWFucyB0aGF0ICpvYmplY3QqIGFuZCAqYXJyYXkqIGBgYGNv
bnN0YGBgIGRlY2xhcmVkIHZhcmlhYmxlcyAqKmNhbioqIGJlIG11dGF0ZWQu
CgpGb3Igb2JqZWN0czoKYGBganMKY29uc3QgcGVyc29uID0gewogIG5hbWU6
ICdOaWNrJwp9OwpwZXJzb24ubmFtZSA9ICdKb2huJyAvLyB0aGlzIHdpbGwg
d29yayAhIHBlcnNvbiB2YXJpYWJsZSBpcyBub3QgY29tcGxldGVseSByZWFz
c2lnbmVkLCBidXQgbXV0YXRlZApjb25zb2xlLmxvZyhwZXJzb24ubmFtZSkg
Ly8gIkpvaG4iCnBlcnNvbiA9ICJTYW5kcmEiIC8vIHJhaXNlcyBhbiBlcnJv
ciwgYmVjYXVzZSByZWFzc2lnbm1lbnQgaXMgbm90IGFsbG93ZWQgd2l0aCBj
b25zdCBkZWNsYXJlZCB2YXJpYWJsZXMKYGBgCgpGb3IgYXJyYXlzOgpgYGBq
cwpjb25zdCBwZXJzb24gPSBbXTsKcGVyc29uLnB1c2goJ0pvaG4nKTsgLy8g
dGhpcyB3aWxsIHdvcmsgISBwZXJzb24gdmFyaWFibGUgaXMgbm90IGNvbXBs
ZXRlbHkgcmVhc3NpZ25lZCwgYnV0IG11dGF0ZWQKY29uc29sZS5sb2cocGVy
c29uWzBdKSAvLyAiSm9obiIKcGVyc29uID0gWyJOaWNrIl0gLy8gcmFpc2Vz
IGFuIGVycm9yLCBiZWNhdXNlIHJlYXNzaWdubWVudCBpcyBub3QgYWxsb3dl
ZCB3aXRoIGNvbnN0IGRlY2xhcmVkIHZhcmlhYmxlcwpgYGAKCiMjIyMgRXh0
ZXJuYWwgcmVzb3VyY2UKCi0gW0hvdyBsZXQgYW5kIGNvbnN0IGFyZSBzY29w
ZWQgaW4gSmF2YVNjcmlwdCAtIFdlc0Jvc10oaHR0cDovL3dlc2Jvcy5jb20v
amF2YXNjcmlwdC1zY29waW5nLykKLSBbVGVtcG9yYWwgRGVhZCBab25lIChU
RFopIERlbXlzdGlmaWVkXShodHRwOi8vanNyb2Nrcy5vcmcvMjAxNS8wMS90
ZW1wb3JhbC1kZWFkLXpvbmUtdGR6LWRlbXlzdGlmaWVkKQoKIyMjIDxhIG5h
bWU9ImFycm93X2Z1bmNfY29uY2VwdCI+PC9hPiBBcnJvdyBmdW5jdGlvbgoK
VGhlIEVTNiBKYXZhU2NyaXB0IHVwZGF0ZSBoYXMgaW50cm9kdWNlZCAqYXJy
b3cgZnVuY3Rpb25zKiwgd2hpY2ggaXMgYW5vdGhlciB3YXkgdG8gZGVjbGFy
ZSBhbmQgdXNlIGZ1bmN0aW9ucy4gSGVyZSBhcmUgdGhlIGJlbmVmaXRzIHRo
ZXkgYnJpbmc6CgotIE1vcmUgY29uY2lzZQotICp0aGlzKiBpcyBwaWNrZWQg
dXAgZnJvbSBzdXJyb3VuZGluZ3MKLSBpbXBsaWNpdCByZXR1cm4KCiMjIyMg
U2FtcGxlIGNvZGUKCi0gQ29uY2lzaW9uIGFuZCBpbXBsaWNpdCByZXR1cm4K
CmBgYGpzCmZ1bmN0aW9uIGRvdWJsZSh4KSB7IHJldHVybiB4ICogMjsgfSAv
LyBUcmFkaXRpb25hbCB3YXkKY29uc29sZS5sb2coZG91YmxlKDIpKSAvLyA0
CmBgYAoKYGBganMKY29uc3QgZG91YmxlID0geCA9PiB4ICogMjsgLy8gU2Ft
ZSBmdW5jdGlvbiB3cml0dGVuIGFzIGFuIGFycm93IGZ1bmN0aW9uIHdpdGgg
aW1wbGljaXQgcmV0dXJuCmNvbnNvbGUubG9nKGRvdWJsZSgyKSkgLy8gNApg
YGAKCi0gKnRoaXMqIHJlZmVyZW5jZQoKSW4gYW4gYXJyb3cgZnVuY3Rpb24s
ICp0aGlzKiBpcyBlcXVhbCB0byB0aGUgKnRoaXMqIHZhbHVlIG9mIHRoZSBl
bmNsb3NpbmcgZXhlY3V0aW9uIGNvbnRleHQuIEJhc2ljYWxseSwgd2l0aCBh
cnJvdyBmdW5jdGlvbnMsIHlvdSBkb24ndCBoYXZlIHRvIGRvIHRoZSAidGhh
dCA9IHRoaXMiIHRyaWNrIGJlZm9yZSBjYWxsaW5nIGEgZnVuY3Rpb24gaW5z
aWRlIGEgZnVuY3Rpb24gYW55bW9yZS4KCmBgYGpzCmZ1bmN0aW9uIG15RnVu
YygpIHsKICB0aGlzLm15VmFyID0gMDsKICBzZXRUaW1lb3V0KCgpID0+IHsK
ICAgIHRoaXMubXlWYXIrKzsKICAgIGNvbnNvbGUubG9nKHRoaXMubXlWYXIp
IC8vIDEKICB9LCAwKTsKfQpgYGAKCiMjIyMgRGV0YWlsZWQgZXhwbGFuYXRp
b24KCiMjIyMjIENvbmNpc2lvbgoKQXJyb3cgZnVuY3Rpb25zIGFyZSBtb3Jl
IGNvbmNpc2UgdGhhbiB0cmFkaXRpb25hbCBmdW5jdGlvbnMgaW4gbWFueSB3
YXlzLiBMZXQncyByZXZpZXcgYWxsIHRoZSBwb3NzaWJsZSBjYXNlczoKCi0g
SW1wbGljaXQgVlMgRXhwbGljaXQgcmV0dXJuCgpBbiAqKmV4cGxpY2l0IHJl
dHVybioqIGlzIGEgZnVuY3Rpb24gd2hlcmUgdGhlICpyZXR1cm4qIGtleXdv
cmQgaXMgdXNlZCBpbiBpdHMgYm9keS4KCmBgYGpzCiAgZnVuY3Rpb24gZG91
YmxlKHgpIHsKICAgIHJldHVybiB4ICogMjsgLy8gdGhpcyBmdW5jdGlvbiBl
eHBsaWNpdGx5IHJldHVybnMgeCAqIDIsICpyZXR1cm4qIGtleXdvcmQgaXMg
dXNlZAogIH0KYGBgCgpJbiB0aGUgdHJhZGl0aW9uYWwgd2F5IG9mIHdyaXRp
bmcgZnVuY3Rpb25zLCB0aGUgcmV0dXJuIHdhcyBhbHdheXMgZXhwbGljaXQu
IEJ1dCB3aXRoIGFycm93IGZ1bmN0aW9ucywgeW91IGNhbiBkbyAqaW1wbGlj
aXQgcmV0dXJuKiB3aGljaCBtZWFucyB0aGF0IHlvdSBkb24ndCBuZWVkIHRv
IHVzZSB0aGUga2V5d29yZCAqcmV0dXJuKiB0byByZXR1cm4gYSB2YWx1ZS4K
CmBgYGpzCiAgY29uc3QgZG91YmxlID0gKHgpID0+IHsKICAgIHJldHVybiB4
ICogMjsgLy8gRXhwbGljaXQgcmV0dXJuIGhlcmUKICB9CmBgYAoKU2luY2Ug
dGhpcyBmdW5jdGlvbiBvbmx5IHJldHVybnMgc29tZXRoaW5nIChubyBpbnN0
cnVjdGlvbnMgYmVmb3JlIHRoZSAqcmV0dXJuKiBrZXl3b3JkKSB3ZSBjYW4g
ZG8gYW4gaW1wbGljaXQgcmV0dXJuLgoKYGBganMKICBjb25zdCBkb3VibGUg
PSAoeCkgPT4geCAqIDI7IC8vIENvcnJlY3QsIHJldHVybnMgeCoyCmBgYAoK
VG8gZG8gc28sIHdlIG9ubHkgbmVlZCB0byAqKnJlbW92ZSB0aGUgYnJhY2tl
dHMqKiBhbmQgdGhlICoqcmV0dXJuKioga2V5d29yZC4gVGhhdCdzIHdoeSBp
dCdzIGNhbGxlZCBhbiAqaW1wbGljaXQqIHJldHVybiwgdGhlICpyZXR1cm4q
IGtleXdvcmQgaXMgbm90IHRoZXJlLCBidXQgdGhpcyBmdW5jdGlvbiB3aWxs
IGluZGVlZCByZXR1cm4gYGBgeCAqIDJgYGAuCgo+ICoqTm90ZToqKiBJZiB5
b3VyIGZ1bmN0aW9uIGRvZXMgbm90IHJldHVybiBhIHZhbHVlICh3aXRoICpz
aWRlIGVmZmVjdHMqKSwgaXQgZG9lc24ndCBkbyBhbiBleHBsaWNpdCBub3Ig
YW4gaW1wbGljaXQgcmV0dXJuLgoKQmVzaWRlcywgaWYgeW91IHdhbnQgdG8g
aW1wbGljaXRseSByZXR1cm4gYW4gKm9iamVjdCogeW91ICoqbXVzdCBoYXZl
IHBhcmVudGhlc2VzIGFyb3VuZCBpdCoqIHNpbmNlIGl0IHdpbGwgY29uZmxp
Y3Qgd2l0aCB0aGUgYmxvY2sgYnJhY2VzOgoKYGBganMKY29uc3QgZ2V0UGVy
c29uID0gKCkgPT4gKHsgbmFtZTogIk5pY2siLCBhZ2U6IDI0IH0pCmNvbnNv
bGUubG9nKGdldFBlcnNvbigpKSAvLyB7IG5hbWU6ICJOaWNrIiwgYWdlOiAy
NCB9IC0tIG9iamVjdCBpbXBsaWNpdGx5IHJldHVybmVkIGJ5IGFycm93IGZ1
bmN0aW9uCmBgYAoKLSBPbmx5IG9uZSBhcmd1bWVudAoKSWYgeW91ciBmdW5j
dGlvbiBvbmx5IHRha2VzIG9uZSBwYXJhbWV0ZXIsIHlvdSBjYW4gb21pdCB0
aGUgcGFyZW50aGVzZXMgYXJvdW5kIGl0LiBJZiB3ZSB0YWtlIGJhY2sgdGhl
IGFib3ZlICpkb3VibGUqIGNvZGU6CgpgYGBqcwogIGNvbnN0IGRvdWJsZSA9
ICh4KSA9PiB4ICogMjsgLy8gdGhpcyBhcnJvdyBmdW5jdGlvbiBvbmx5IHRh
a2VzIG9uZSBwYXJhbWV0ZXIKYGBgCgpQYXJlbnRoZXNlcyBhcm91bmQgdGhl
IHBhcmFtZXRlciBjYW4gYmUgYXZvaWRlZDoKCmBgYGpzCiAgY29uc3QgZG91
YmxlID0geCA9PiB4ICogMjsgLy8gdGhpcyBhcnJvdyBmdW5jdGlvbiBvbmx5
IHRha2VzIG9uZSBwYXJhbWV0ZXIKYGBgCgotIE5vIGFyZ3VtZW50cwoKV2hl
biB0aGVyZSBpcyBubyBhcmd1bWVudCBwcm92aWRlZCB0byBhbiBhcnJvdyBm
dW5jdGlvbiwgeW91IG5lZWQgdG8gcHJvdmlkZSBwYXJlbnRoZXNlcywgb3Ig
aXQgd29uJ3QgYmUgdmFsaWQgc3ludGF4LgoKYGBganMKICAoKSA9PiB7IC8v
IHBhcmVudGhlc2VzIGFyZSBwcm92aWRlZCwgZXZlcnl0aGluZyBpcyBmaW5l
CiAgICBjb25zdCB4ID0gMjsKICAgIHJldHVybiB4OwogIH0KYGBgCgpgYGBq
cwogID0+IHsgLy8gTm8gcGFyZW50aGVzZXMsIHRoaXMgd29uJ3Qgd29yayEK
ICAgIGNvbnN0IHggPSAyOwogICAgcmV0dXJuIHg7CiAgfQpgYGAKCiMjIyMj
ICp0aGlzKiByZWZlcmVuY2UKClRvIHVuZGVyc3RhbmQgdGhpcyBzdWJ0bGV0
eSBpbnRyb2R1Y2VkIHdpdGggYXJyb3cgZnVuY3Rpb25zLCB5b3UgbXVzdCBr
bm93IGhvdyBbdGhpc10oI3RoaXNfZGVmKSBiZWhhdmVzIGluIEphdmFTY3Jp
cHQuCgpJbiBhbiBhcnJvdyBmdW5jdGlvbiwgKnRoaXMqIGlzIGVxdWFsIHRv
IHRoZSAqdGhpcyogdmFsdWUgb2YgdGhlIGVuY2xvc2luZyBleGVjdXRpb24g
Y29udGV4dC4gV2hhdCBpdCBtZWFucyBpcyB0aGF0IGFuIGFycm93IGZ1bmN0
aW9uIGRvZXNuJ3QgY3JlYXRlIGEgbmV3ICp0aGlzKiwgaXQgZ3JhYnMgaXQg
ZnJvbSBpdHMgc3Vycm91bmRpbmcgaW5zdGVhZC4KCldpdGhvdXQgYXJyb3cg
ZnVuY3Rpb24sIGlmIHlvdSB3YW50ZWQgdG8gYWNjZXNzIGEgdmFyaWFibGUg
ZnJvbSAqdGhpcyogaW4gYSBmdW5jdGlvbiBpbnNpZGUgYSBmdW5jdGlvbiwg
eW91IGhhZCB0byB1c2UgdGhlICp0aGF0ID0gdGhpcyogb3IgKnNlbGYgPSB0
aGlzKiB0cmljay4KCkZvciBpbnN0YW5jZSwgdXNpbmcgc2V0VGltZW91dCBm
dW5jdGlvbiBpbnNpZGUgbXlGdW5jOgoKYGBganMKZnVuY3Rpb24gbXlGdW5j
KCkgewogIHRoaXMubXlWYXIgPSAwOwogIHZhciB0aGF0ID0gdGhpczsgLy8g
dGhhdCA9IHRoaXMgdHJpY2sKICBzZXRUaW1lb3V0KAogICAgZnVuY3Rpb24o
KSB7IC8vIEEgbmV3ICp0aGlzKiBpcyBjcmVhdGVkIGluIHRoaXMgZnVuY3Rp
b24gc2NvcGUKICAgICAgdGhhdC5teVZhcisrOwogICAgICBjb25zb2xlLmxv
Zyh0aGF0Lm15VmFyKSAvLyAxCgogICAgICBjb25zb2xlLmxvZyh0aGlzLm15
VmFyKSAvLyB1bmRlZmluZWQgLS0gc2VlIGZ1bmN0aW9uIGRlY2xhcmF0aW9u
IGFib3ZlCiAgICB9LAogICAgMAogICk7Cn0KYGBgCgpCdXQgd2l0aCBhcnJv
dyBmdW5jdGlvbiwgKnRoaXMqIGlzIHRha2VuIGZyb20gaXRzIHN1cnJvdW5k
aW5nOgoKYGBganMKZnVuY3Rpb24gbXlGdW5jKCkgewogIHRoaXMubXlWYXIg
PSAwOwogIHNldFRpbWVvdXQoCiAgICAoKSA9PiB7IC8vIHRoaXMgdGFrZW4g
ZnJvbSBzdXJyb3VuZGluZywgbWVhbmluZyBteUZ1bmMgaGVyZQogICAgICB0
aGlzLm15VmFyKys7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMubXlWYXIpIC8v
IDEKICAgIH0sCiAgICAwCiAgKTsKfQpgYGAKCiMjIyMgVXNlZnVsIHJlc291
cmNlcwoKLSBbQXJyb3cgZnVuY3Rpb25zIGludHJvZHVjdGlvbiAtIFdlc0Jv
c10oaHR0cDovL3dlc2Jvcy5jb20vYXJyb3ctZnVuY3Rpb25zLykKLSBbSmF2
YVNjcmlwdCBhcnJvdyBmdW5jdGlvbiAtIE1ETl0oaHR0cHM6Ly9kZXZlbG9w
ZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZl
cmVuY2UvRnVuY3Rpb25zL0Fycm93X2Z1bmN0aW9ucykKLSBbQXJyb3cgZnVu
Y3Rpb24gYW5kIGxleGljYWwgKnRoaXMqXShodHRwczovL2hhY2tlcm5vb24u
Y29tL2phdmFzY3JpcHQtZXM2LWFycm93LWZ1bmN0aW9ucy1hbmQtbGV4aWNh
bC10aGlzLWYyYTNlMmE1ZThjNCkKCiMjIyBGdW5jdGlvbiBkZWZhdWx0IHBh
cmFtZXRlciB2YWx1ZQoKU3RhcnRpbmcgZnJvbSBFUzIwMTUgSmF2YVNjcmlw
dCB1cGRhdGUsIHlvdSBjYW4gc2V0IGRlZmF1bHQgdmFsdWUgdG8geW91ciBm
dW5jdGlvbiBwYXJhbWV0ZXJzIHVzaW5nIHRoZSBmb2xsb3dpbmcgc3ludGF4
OgoKYGBganMKZnVuY3Rpb24gbXlGdW5jKHggPSAxMCkgewogIHJldHVybiB4
Owp9CmNvbnNvbGUubG9nKG15RnVuYygpKSAvLyAxMCAtLSBubyB2YWx1ZSBp
cyBwcm92aWRlZCBzbyB4IGRlZmF1bHQgdmFsdWUgMTAgaXMgYXNzaWduZWQg
dG8geCBpbiBteUZ1bmMKY29uc29sZS5sb2cobXlGdW5jKDUpKSAvLyA1IC0t
IGEgdmFsdWUgaXMgcHJvdmlkZWQgc28geCBpcyBlcXVhbCB0byA1IGluIG15
RnVuYwoKY29uc29sZS5sb2cobXlGdW5jKHVuZGVmaW5lZCkpIC8vIDEwIC0t
IHVuZGVmaW5lZCB2YWx1ZSBpcyBwcm92aWRlZCBzbyBkZWZhdWx0IHZhbHVl
IGlzIGFzc2lnbmVkIHRvIHgKY29uc29sZS5sb2cobXlGdW5jKG51bGwpKSAv
LyBudWxsIC0tIGEgdmFsdWUgKG51bGwpIGlzIHByb3ZpZGVkLCBzZWUgYmVs
b3cgZm9yIG1vcmUgZGV0YWlscwpgYGAKClRoZSBkZWZhdWx0IHBhcmFtZXRl
ciBpcyBhcHBsaWVkIGluIHR3byBhbmQgb25seSB0d28gc2l0dWF0aW9uczoK
Ci0gTm8gcGFyYW1ldGVyIHByb3ZpZGVkCi0gKnVuZGVmaW5lZCogcGFyYW1l
dGVyIHByb3ZpZGVkCgpJbiBvdGhlciB3b3JkcywgaWYgeW91IHBhc3MgaW4g
Km51bGwqIHRoZSBkZWZhdWx0IHBhcmFtZXRlciAqKndvbid0IGJlIGFwcGxp
ZWQqKi4KCj4gKipOb3RlOioqIERlZmF1bHQgdmFsdWUgYXNzaWdubWVudCBj
YW4gYmUgdXNlZCB3aXRoIGRlc3RydWN0dXJlZCBwYXJhbWV0ZXJzIGFzIHdl
bGwgKHNlZSBuZXh0IG5vdGlvbiB0byBzZWUgYW4gZXhhbXBsZSkKCiMjIyMg
RXh0ZXJuYWwgcmVzb3VyY2UKCi0gW0RlZmF1bHQgcGFyYW1ldGVyIHZhbHVl
IC0gRVM2IEZlYXR1cmVzXShodHRwOi8vZXM2LWZlYXR1cmVzLm9yZy8jRGVm
YXVsdFBhcmFtZXRlclZhbHVlcykKLSBbRGVmYXVsdCBwYXJhbWV0ZXJzIC0g
TUROXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2Nz
L1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9GdW5jdGlvbnMvRGVmYXVsdF9w
YXJhbWV0ZXJzKQoKIyMjIERlc3RydWN0dXJpbmcgb2JqZWN0cyBhbmQgYXJy
YXlzCgoqRGVzdHJ1Y3R1cmluZyogaXMgYSBjb252ZW5pZW50IHdheSBvZiBj
cmVhdGluZyBuZXcgdmFyaWFibGVzIGJ5IGV4dHJhY3Rpbmcgc29tZSB2YWx1
ZXMgZnJvbSBkYXRhIHN0b3JlZCBpbiBvYmplY3RzIG9yIGFycmF5cy4KClRv
IG5hbWUgYSBmZXcgdXNlIGNhc2VzLCAqZGVzdHJ1Y3R1cmluZyogY2FuIGJl
IHVzZWQgdG8gZGVzdHJ1Y3R1cmUgZnVuY3Rpb24gcGFyYW1ldGVycyBvciAq
dGhpcy5wcm9wcyogaW4gUmVhY3QgcHJvamVjdHMgZm9yIGluc3RhbmNlLgoK
IyMjIyBFeHBsYW5hdGlvbiB3aXRoIHNhbXBsZSBjb2RlCgotIE9iamVjdAoK
TGV0J3MgY29uc2lkZXIgdGhlIGZvbGxvd2luZyBvYmplY3QgZm9yIGFsbCB0
aGUgc2FtcGxlczoKCmBgYGpzCmNvbnN0IHBlcnNvbiA9IHsKICBmaXJzdE5h
bWU6ICJOaWNrIiwKICBsYXN0TmFtZTogIkFuZGVyc29uIiwKICBhZ2U6IDM1
LAogIHNleDogIk0iCn0KYGBgCgpXaXRob3V0IGRlc3RydWN0dXJpbmcKCmBg
YGpzCmNvbnN0IGZpcnN0ID0gcGVyc29uLmZpcnN0TmFtZTsKY29uc3QgYWdl
ID0gcGVyc29uLmFnZTsKY29uc3QgY2l0eSA9IHBlcnNvbi5jaXR5IHx8ICJQ
YXJpcyI7CmBgYAoKV2l0aCBkZXN0cnVjdHVyaW5nLCBhbGwgaW4gb25lIGxp
bmU6CgpgYGBqcwpjb25zdCB7IGZpcnN0TmFtZTogZmlyc3QsIGFnZSwgY2l0
eSA9ICJQYXJpcyIgfSA9IHBlcnNvbjsgLy8gVGhhdCdzIGl0ICEKCmNvbnNv
bGUubG9nKGFnZSkgLy8gMzUgLS0gQSBuZXcgdmFyaWFibGUgYWdlIGlzIGNy
ZWF0ZWQgYW5kIGlzIGVxdWFsIHRvIHBlcnNvbi5hZ2UKY29uc29sZS5sb2co
Zmlyc3QpIC8vICJOaWNrIiAtLSBBIG5ldyB2YXJpYWJsZSBmaXJzdCBpcyBj
cmVhdGVkIGFuZCBpcyBlcXVhbCB0byBwZXJzb24uZmlyc3ROYW1lCmNvbnNv
bGUubG9nKGZpcnN0TmFtZSkgLy8gUmVmZXJlbmNlRXJyb3IgLS0gcGVyc29u
LmZpcnN0TmFtZSBleGlzdHMgQlVUIHRoZSBuZXcgdmFyaWFibGUgY3JlYXRl
ZCBpcyBuYW1lZCBmaXJzdApjb25zb2xlLmxvZyhjaXR5KSAvLyAiUGFyaXMi
IC0tIEEgbmV3IHZhcmlhYmxlIGNpdHkgaXMgY3JlYXRlZCBhbmQgc2luY2Ug
cGVyc29uLmNpdHkgaXMgdW5kZWZpbmVkLCBjaXR5IGlzIGVxdWFsIHRvIHRo
ZSBkZWZhdWx0IHZhbHVlIHByb3ZpZGVkICJQYXJpcyIuCmBgYAoKKipOb3Rl
IDoqKiBJbiBgYGBjb25zdCB7IGFnZSB9ID0gcGVyc29uO2BgYCwgdGhlIGJy
YWNrZXRzIGFmdGVyICpjb25zdCoga2V5d29yZCBhcmUgbm90IHVzZWQgdG8g
ZGVjbGFyZSBhbiBvYmplY3Qgbm9yIGEgYmxvY2sgYnV0IGlzIHRoZSAqZGVz
dHJ1Y3R1cmluZyogc3ludGF4LgoKLSBGdW5jdGlvbiBwYXJhbWV0ZXJzCgoq
RGVzdHJ1Y3R1cmluZyogaXMgb2Z0ZW4gdXNlZCB0byBkZXN0cnVjdHVyZSBv
YmplY3RzIHBhcmFtZXRlcnMgaW4gZnVuY3Rpb25zLgoKV2l0aG91dCBkZXN0
cnVjdHVyaW5nCgpgYGBqcwpmdW5jdGlvbiBqb2luRmlyc3RMYXN0TmFtZShw
ZXJzb24pIHsKICBjb25zdCBmaXJzdE5hbWUgPSBwZXJzb24uZmlyc3ROYW1l
OwogIGNvbnN0IGxhc3ROYW1lID0gcGVyc29uLmxhc3ROYW1lOwogIHJldHVy
biBmaXJzdE5hbWUgKyAnLScgKyBsYXN0TmFtZTsKfQoKam9pbkZpcnN0TGFz
dE5hbWUocGVyc29uKTsgLy8gIk5pY2stQW5kZXJzb24iCmBgYAoKSW4gZGVz
dHJ1Y3R1cmluZyB0aGUgb2JqZWN0IHBhcmFtZXRlciAqcGVyc29uKiwgd2Ug
Z2V0IGEgbW9yZSBjb25jaXNlIGZ1bmN0aW9uOgoKYGBganMKZnVuY3Rpb24g
am9pbkZpcnN0TGFzdE5hbWUoeyBmaXJzdE5hbWUsIGxhc3ROYW1lIH0pIHsg
Ly8gd2UgY3JlYXRlIGZpcnN0TmFtZSBhbmQgbGFzdE5hbWUgdmFyaWFibGVz
IGJ5IGRlc3RydWN0dXJpbmcgcGVyc29uIHBhcmFtZXRlcgogIHJldHVybiBm
aXJzdE5hbWUgKyAnLScgKyBsYXN0TmFtZTsKfQoKam9pbkZpcnN0TGFzdE5h
bWUocGVyc29uKTsgLy8gIk5pY2stQW5kZXJzb24iCmBgYAoKRGVzdHJ1Y3R1
cmluZyBpcyBldmVuIG1vcmUgcGxlYXNhbnQgdG8gdXNlIHdpdGggW2Fycm93
IGZ1bmN0aW9uc10oI2Fycm93X2Z1bmNfY29uY2VwdCk6CgpgYGBqcwpjb25z
dCBqb2luRmlyc3RMYXN0TmFtZSA9ICh7IGZpcnN0TmFtZSwgbGFzdE5hbWUg
fSkgPT4gZmlyc3ROYW1lICsgJy0nICsgbGFzdE5hbWU7Cgpqb2luRmlyc3RM
YXN0TmFtZShwZXJzb24pOyAvLyAiTmljay1BbmRlcnNvbiIKYGBgCgotIEFy
cmF5CgpMZXQncyBjb25zaWRlciB0aGUgZm9sbG93aW5nIGFycmF5OgoKYGBg
anMKY29uc3QgbXlBcnJheSA9IFsiYSIsICJiIiwgImMiXTsKYGBgCgpXaXRo
b3V0IGRlc3RydWN0dXJpbmcKCmBgYGpzCmNvbnN0IHggPSBteUFycmF5WzBd
Owpjb25zdCB5ID0gbXlBcnJheVsxXTsKYGBgCgpXaXRoIGRlc3RydWN0dXJp
bmcKCmBgYGpzCmNvbnN0IFt4LCB5XSA9IG15QXJyYXk7IC8vIFRoYXQncyBp
dCAhCgpjb25zb2xlLmxvZyh4KSAvLyAiYSIKY29uc29sZS5sb2coeSkgLy8g
ImIiCmBgYAoKIyMjIyBVc2VmdWwgcmVzb3VyY2VzCgotIFtFUzYgRmVhdHVy
ZXMgLSBEZXN0cnVjdHVyaW5nIEFzc2lnbm1lbnRdKGh0dHA6Ly9lczYtZmVh
dHVyZXMub3JnLyNBcnJheU1hdGNoaW5nKQotIFtEZXN0cnVjdHVyaW5nIE9i
amVjdHMgLSBXZXNCb3NdKGh0dHA6Ly93ZXNib3MuY29tL2Rlc3RydWN0dXJp
bmctb2JqZWN0cy8pCi0gW0V4cGxvcmluZ0pTIC0gRGVzdHJ1Y3R1cmluZ10o
aHR0cDovL2V4cGxvcmluZ2pzLmNvbS9lczYvY2hfZGVzdHJ1Y3R1cmluZy5o
dG1sKQoKIyMjIEFycmF5IG1ldGhvZHMgLSBtYXAgLyBmaWx0ZXIgLyByZWR1
Y2UgLyBmaW5kCgoqTWFwKiwgKmZpbHRlciosICpyZWR1Y2UqIGFuZCAqZmlu
ZCogYXJlIGFycmF5IG1ldGhvZHMgdGhhdCBhcmUgY29taW5nIGZyb20gYSBw
cm9ncmFtbWluZyBwYXJhZGlnbSBuYW1lZCBbKmZ1bmN0aW9uYWwgcHJvZ3Jh
bW1pbmcqXShodHRwczovL21lZGl1bS5jb20vamF2YXNjcmlwdC1zY2VuZS9t
YXN0ZXItdGhlLWphdmFzY3JpcHQtaW50ZXJ2aWV3LXdoYXQtaXMtZnVuY3Rp
b25hbC1wcm9ncmFtbWluZy03ZjIxOGM2OGIzYTApLgoKVG8gc3VtIGl0IHVw
OgoKLSAqKkFycmF5LnByb3RvdHlwZS5tYXAoKSoqIHRha2VzIGFuIGFycmF5
LCBkb2VzIHNvbWV0aGluZyBvbiBpdHMgZWxlbWVudHMgYW5kIHJldHVybnMg
YW4gYXJyYXkgd2l0aCB0aGUgdHJhbnNmb3JtZWQgZWxlbWVudHMuCi0gKipB
cnJheS5wcm90b3R5cGUuZmlsdGVyKCkqKiB0YWtlcyBhbiBhcnJheSwgZGVj
aWRlcyBlbGVtZW50IGJ5IGVsZW1lbnQgaWYgaXQgc2hvdWxkIGtlZXAgaXQg
b3Igbm90IGFuZCByZXR1cm5zIGFuIGFycmF5IHdpdGggdGhlIGtlcHQgZWxl
bWVudHMgb25seQotICoqQXJyYXkucHJvdG90eXBlLnJlZHVjZSgpKiogdGFr
ZXMgYW4gYXJyYXkgYW5kIGFnZ3JlZ2F0ZXMgdGhlIGVsZW1lbnRzIGludG8g
YSBzaW5nbGUgdmFsdWUgKHdoaWNoIGlzIHJldHVybmVkKQotICoqQXJyYXku
cHJvdG90eXBlLmZpbmQoKSoqIHRha2VzIGFuIGFycmF5LCBhbmQgcmV0dXJu
cyB0aGUgZmlyc3QgZWxlbWVudCB0aGF0IHNhdGlzZmllcyB0aGUgcHJvdmlk
ZWQgY29uZGl0aW9uLgoKSSByZWNvbW1lbmQgdG8gdXNlIHRoZW0gYXMgbXVj
aCBhcyBwb3NzaWJsZSBpbiBmb2xsb3dpbmcgdGhlIHByaW5jaXBsZXMgb2Yg
ZnVuY3Rpb25hbCBwcm9ncmFtbWluZyBiZWNhdXNlIHRoZXkgYXJlIGNvbXBv
c2FibGUsIGNvbmNpc2UgYW5kIGVsZWdhbnQuCgpXaXRoIHRob3NlIGZvdXIg
bWV0aG9kcywgeW91IGNhbiBhdm9pZCB0aGUgdXNlIG9mICpmb3IqIGFuZCAq
Zm9yRWFjaCogbG9vcHMgaW4gbW9zdCBzaXR1YXRpb25zLiBXaGVuIHlvdSBh
cmUgdGVtcHRlZCB0byBkbyBhICpmb3IqIGxvb3AsIHRyeSB0byBkbyBpdCB3
aXRoICptYXAqLCAqZmlsdGVyKiwgKnJlZHVjZSogYW5kICpmaW5kKiBjb21w
b3NlZC4gWW91IG1pZ2h0IHN0cnVnZ2xlIHRvIGRvIGl0IGF0IGZpcnN0IGJl
Y2F1c2UgaXQgcmVxdWlyZXMgeW91IHRvIGxlYXJuIGEgbmV3IHdheSBvZiB0
aGlua2luZywgYnV0IG9uY2UgeW91J3ZlIGdvdCBpdCB0aGluZ3MgZ2V0IGVh
c2llci4KCiMjIyMgU2FtcGxlIGNvZGUKCmBgYGpzCmNvbnN0IG51bWJlcnMg
PSBbMCwgMSwgMiwgMywgNCwgNSwgNl07CmNvbnN0IGRvdWJsZWROdW1iZXJz
ID0gbnVtYmVycy5tYXAobiA9PiBuICogMik7IC8vIFswLCAyLCA0LCA2LCA4
LCAxMCwgMTJdCmNvbnN0IGV2ZW5OdW1iZXJzID0gbnVtYmVycy5maWx0ZXIo
biA9PiBuICUgMiA9PT0gMCk7IC8vIFswLCAyLCA0LCA2XQpjb25zdCBzdW0g
PSBudW1iZXJzLnJlZHVjZSgocHJldiwgbmV4dCkgPT4gcHJldiArIG5leHQs
IDApOyAvLyAyMQpjb25zdCBncmVhdGVyVGhhbkZvdXIgPSBudW1iZXJzLmZp
bmQoKG4pID0+IG4+NCk7IC8vIDUKYGBgCgpDb21wdXRlIHRvdGFsIGdyYWRl
IHN1bSBmb3Igc3R1ZGVudHMgd2l0aCBncmFkZXMgMTAgb3IgYWJvdmUgYnkg
Y29tcG9zaW5nIG1hcCwgZmlsdGVyIGFuZCByZWR1Y2U6CgpgYGBqcwpjb25z
dCBzdHVkZW50cyA9IFsKICB7IG5hbWU6ICJOaWNrIiwgZ3JhZGU6IDEwIH0s
CiAgeyBuYW1lOiAiSm9obiIsIGdyYWRlOiAxNSB9LAogIHsgbmFtZTogIkp1
bGlhIiwgZ3JhZGU6IDE5IH0sCiAgeyBuYW1lOiAiTmF0aGFsaWUiLCBncmFk
ZTogOSB9LApdOwoKY29uc3QgYWJvdmVUZW5TdW0gPSBzdHVkZW50cwogIC5t
YXAoc3R1ZGVudCA9PiBzdHVkZW50LmdyYWRlKSAvLyB3ZSBtYXAgdGhlIHN0
dWRlbnRzIGFycmF5IHRvIGFuIGFycmF5IG9mIHRoZWlyIGdyYWRlcwogIC5m
aWx0ZXIoZ3JhZGUgPT4gZ3JhZGUgPj0gMTApIC8vIHdlIGZpbHRlciB0aGUg
Z3JhZGVzIGFycmF5IHRvIGtlZXAgdGhvc2UgMTAgb3IgYWJvdmUKICAucmVk
dWNlKChwcmV2LCBuZXh0KSA9PiBwcmV2ICsgbmV4dCwgMCk7IC8vIHdlIHN1
bSBhbGwgdGhlIGdyYWRlcyAxMCBvciBhYm92ZSBvbmUgYnkgb25lCgpjb25z
b2xlLmxvZyhhYm92ZVRlblN1bSkgLy8gNDQgLS0gMTAgKE5pY2spICsgMTUg
KEpvaG4pICsgMTkgKEp1bGlhKSwgTmF0aGFsaWUgYmVsb3cgMTAgaXMgaWdu
b3JlZApgYGAKCiMjIyMgRXhwbGFuYXRpb24KCkxldCdzIGNvbnNpZGVyIHRo
ZSBmb2xsb3dpbmcgYXJyYXkgb2YgbnVtYmVycyBmb3Igb3VyIGV4YW1wbGVz
OgoKYGBganMKY29uc3QgbnVtYmVycyA9IFswLCAxLCAyLCAzLCA0LCA1LCA2
XTsKYGBgCgojIyMjIyBBcnJheS5wcm90b3R5cGUubWFwKCkKCmBgYGpzCmNv
bnN0IGRvdWJsZWROdW1iZXJzID0gbnVtYmVycy5tYXAoZnVuY3Rpb24obikg
ewogIHJldHVybiBuICogMjsKfSk7CmNvbnNvbGUubG9nKGRvdWJsZWROdW1i
ZXJzKTsgLy8gWzAsIDIsIDQsIDYsIDgsIDEwLCAxMl0KYGBgCgpXaGF0J3Mg
aGFwcGVuaW5nIGhlcmU/IFdlIGFyZSB1c2luZyAubWFwIG9uIHRoZSAqbnVt
YmVycyogYXJyYXksIHRoZSBtYXAgaXMgaXRlcmF0aW5nIG9uIGVhY2ggZWxl
bWVudCBvZiB0aGUgYXJyYXkgYW5kIHBhc3NlcyBpdCB0byBvdXIgZnVuY3Rp
b24uIFRoZSBnb2FsIG9mIHRoZSBmdW5jdGlvbiBpcyB0byBwcm9kdWNlIGFu
ZCByZXR1cm4gYSBuZXcgdmFsdWUgZnJvbSB0aGUgb25lIHBhc3NlZCBzbyB0
aGF0IG1hcCBjYW4gcmVwbGFjZSBpdC4KCkxldCdzIGV4dHJhY3QgdGhpcyBm
dW5jdGlvbiB0byBtYWtlIGl0IG1vcmUgY2xlYXIsIGp1c3QgZm9yIHRoaXMg
b25jZToKCmBgYGpzCmNvbnN0IGRvdWJsZU4gPSBmdW5jdGlvbihuKSB7IHJl
dHVybiBuICogMjsgfTsKY29uc3QgZG91YmxlZE51bWJlcnMgPSBudW1iZXJz
Lm1hcChkb3VibGVOKTsKY29uc29sZS5sb2coZG91YmxlZE51bWJlcnMpOyAv
LyBbMCwgMiwgNCwgNiwgOCwgMTAsIDEyXQpgYGAKCioqTm90ZSoqIDogWW91
IHdpbGwgZnJlcXVlbnRseSBlbmNvdW50ZXIgdGhpcyBtZXRob2QgdXNlZCBp
biBjb21iaW5hdGlvbiB3aXRoIFthcnJvdyBmdW5jdGlvbnNdKCMtYXJyb3ct
ZnVuY3Rpb24pCgpgYGBqcwpjb25zdCBkb3VibGVkTnVtYmVycyA9IG51bWJl
cnMubWFwKG4gPT4gbiAqIDIpOwpjb25zb2xlLmxvZyhkb3VibGVkTnVtYmVy
cyk7IC8vIFswLCAyLCA0LCA2LCA4LCAxMCwgMTJdCmBgYAoKYGBgbnVtYmVy
cy5tYXAoZG91YmxlTilgYGAgcHJvZHVjZXMgYGBgW2RvdWJsZU4oMCksIGRv
dWJsZU4oMSksIGRvdWJsZU4oMiksIGRvdWJsZU4oMyksIGRvdWJsZU4oNCks
IGRvdWJsZU4oNSksIGRvdWJsZU4oNildYGBgIHdoaWNoIGlzIGVxdWFsIHRv
IGBgYFswLCAyLCA0LCA2LCA4LCAxMCwgMTJdYGBgLgoKPiAqKk5vdGU6Kiog
SWYgeW91IGRvIG5vdCBuZWVkIHRvIHJldHVybiBhIG5ldyBhcnJheSBhbmQg
anVzdCB3YW50IHRvIGRvIGEgbG9vcCB0aGF0IGhhcyBzaWRlIGVmZmVjdHMs
IHlvdSBtaWdodCBqdXN0IHdhbnQgdG8gdXNlIGEgZm9yIC8gZm9yRWFjaCBs
b29wIGluc3RlYWQgb2YgYSBtYXAuCgojIyMjIyBBcnJheS5wcm90b3R5cGUu
ZmlsdGVyKCkKCmBgYGpzCmNvbnN0IGV2ZW5OdW1iZXJzID0gbnVtYmVycy5m
aWx0ZXIoZnVuY3Rpb24obikgewogIHJldHVybiBuICUgMiA9PT0gMDsgLy8g
dHJ1ZSBpZiAibiIgaXMgcGFyLCBmYWxzZSBpZiAibiIgaXNuJ3QKfSk7CmNv
bnNvbGUubG9nKGV2ZW5OdW1iZXJzKTsgLy8gWzAsIDIsIDQsIDZdCmBgYAoK
KipOb3RlKiogOiBZb3Ugd2lsbCBmcmVxdWVudGx5IGVuY291bnRlciB0aGlz
IG1ldGhvZCB1c2VkIGluIGNvbWJpbmF0aW9uIHdpdGggW2Fycm93IGZ1bmN0
aW9uc10oIy1hcnJvdy1mdW5jdGlvbikKCmBgYGpzCmNvbnN0IGV2ZW5OdW1i
ZXJzID0gbnVtYmVycy5maWx0ZXIobiA9PiBuICUgMiA9PT0gMCk7CmNvbnNv
bGUubG9nKGV2ZW5OdW1iZXJzKTsgLy8gWzAsIDIsIDQsIDZdCmBgYAoKV2Ug
YXJlIHVzaW5nIC5maWx0ZXIgb24gdGhlICpudW1iZXJzKiBhcnJheSwgZmls
dGVyIGlzIGl0ZXJhdGluZyBvbiBlYWNoIGVsZW1lbnQgb2YgdGhlIGFycmF5
IGFuZCBwYXNzZXMgaXQgdG8gb3VyIGZ1bmN0aW9uLiBUaGUgZ29hbCBvZiB0
aGUgZnVuY3Rpb24gaXMgdG8gcmV0dXJuIGEgYm9vbGVhbiB0aGF0IHdpbGwg
ZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIGN1cnJlbnQgdmFsdWUgd2lsbCBiZSBr
ZXB0IG9yIG5vdC4gRmlsdGVyIHRoZW4gcmV0dXJucyB0aGUgYXJyYXkgd2l0
aCBvbmx5IHRoZSBrZXB0IHZhbHVlcy4KCiMjIyMjIEFycmF5LnByb3RvdHlw
ZS5yZWR1Y2UoKQoKVGhlIHJlZHVjZSBtZXRob2QgZ29hbCBpcyB0byAqcmVk
dWNlKiBhbGwgZWxlbWVudHMgb2YgdGhlIGFycmF5IGl0IGl0ZXJhdGVzIG9u
IGludG8gYSBzaW5nbGUgdmFsdWUuIEhvdyBpdCBhZ2dyZWdhdGVzIHRob3Nl
IGVsZW1lbnRzIGlzIHVwIHRvIHlvdS4KCmBgYGpzCmNvbnN0IHN1bSA9IG51
bWJlcnMucmVkdWNlKAogIGZ1bmN0aW9uKGFjYywgbikgewogICAgcmV0dXJu
IGFjYyArIG47CiAgfSwKICAwIC8vIGFjY3VtdWxhdG9yIHZhcmlhYmxlIHZh
bHVlIGF0IGZpcnN0IGl0ZXJhdGlvbiBzdGVwCik7Cgpjb25zb2xlLmxvZyhz
dW0pIC8vIDIxCmBgYAoKKipOb3RlKiogOiBZb3Ugd2lsbCBmcmVxdWVudGx5
IGVuY291bnRlciB0aGlzIG1ldGhvZCB1c2VkIGluIGNvbWJpbmF0aW9uIHdp
dGggW2Fycm93IGZ1bmN0aW9uc10oIy1hcnJvdy1mdW5jdGlvbikKCmBgYGpz
CmNvbnN0IHN1bSA9IG51bWJlcnMucmVkdWNlKChhY2MsIG4pID0+IGFjYyAr
IG4sIDApOwpjb25zb2xlLmxvZyhzdW0pIC8vIDIxCmBgYAoKSnVzdCBsaWtl
IGZvciAubWFwIGFuZCAuZmlsdGVyIG1ldGhvZHMsIC5yZWR1Y2UgaXMgYXBw
bGllZCBvbiBhbiBhcnJheSBhbmQgdGFrZXMgYSBmdW5jdGlvbiBhcyB0aGUg
Zmlyc3QgcGFyYW1ldGVyLgoKVGhpcyB0aW1lIHRob3VnaCwgdGhlcmUgYXJl
IGNoYW5nZXM6CgotIC5yZWR1Y2UgdGFrZXMgdHdvIHBhcmFtZXRlcnMKClRo
ZSBmaXJzdCBwYXJhbWV0ZXIgaXMgYSBmdW5jdGlvbiB0aGF0IHdpbGwgYmUg
Y2FsbGVkIGF0IGVhY2ggaXRlcmF0aW9uIHN0ZXAuCgpUaGUgc2Vjb25kIHBh
cmFtZXRlciBpcyB0aGUgdmFsdWUgb2YgdGhlIGFjY3VtdWxhdG9yIHZhcmlh
YmxlICgqYWNjKiBoZXJlKSBhdCB0aGUgZmlyc3QgaXRlcmF0aW9uIHN0ZXAg
KHJlYWQgbmV4dCBwb2ludCB0byB1bmRlcnN0YW5kKS4KCi0gRnVuY3Rpb24g
cGFyYW1ldGVycwoKVGhlIGZ1bmN0aW9uIHlvdSBwYXNzIGFzIHRoZSBmaXJz
dCBwYXJhbWV0ZXIgb2YgLnJlZHVjZSB0YWtlcyB0d28gcGFyYW1ldGVycy4g
VGhlIGZpcnN0IG9uZSAoKmFjYyogaGVyZSkgaXMgdGhlIGFjY3VtdWxhdG9y
IHZhcmlhYmxlLCB3aGVyZWFzIHRoZSBzZWNvbmQgcGFyYW1ldGVyICgqbiop
IGlzIHRoZSBjdXJyZW50IGVsZW1lbnQuCgpUaGUgYWNjdW11bGF0b3IgdmFy
aWFibGUgaXMgZXF1YWwgdG8gdGhlIHJldHVybiB2YWx1ZSBvZiB5b3VyIGZ1
bmN0aW9uIGF0IHRoZSAqKnByZXZpb3VzKiogaXRlcmF0aW9uIHN0ZXAuIEF0
IHRoZSBmaXJzdCBzdGVwIG9mIHRoZSBpdGVyYXRpb24sICphY2MqIGlzIGVx
dWFsIHRvIHRoZSB2YWx1ZSB5b3UgcGFzc2VkIGFzIC5yZWR1Y2Ugc2Vjb25k
IHBhcmFtZXRlci4KCiMjIyMjIyBBdCBmaXJzdCBpdGVyYXRpb24gc3RlcAoK
YGBgYWNjID0gMGBgYCBiZWNhdXNlIHdlIHBhc3NlZCBpbiAwIGFzIHRoZSBz
ZWNvbmQgcGFyYW1ldGVyIGZvciByZWR1Y2UKCmBgYG4gPSAwYGBgIGZpcnN0
IGVsZW1lbnQgb2YgdGhlICpudW1iZXIqIGFycmF5CgpGdW5jdGlvbiByZXR1
cm5zICphY2MqICsgKm4qIC0tPiAwICsgMCAtLT4gMAoKIyMjIyMjIEF0IHNl
Y29uZCBpdGVyYXRpb24gc3RlcAoKYGBgYWNjID0gMGBgYCBiZWNhdXNlIGl0
J3MgdGhlIHZhbHVlIHRoZSBmdW5jdGlvbiByZXR1cm5lZCBhdCB0aGUgcHJl
dmlvdXMgaXRlcmF0aW9uIHN0ZXAKCmBgYG4gPSAxYGBgIHNlY29uZCBlbGVt
ZW50IG9mIHRoZSAqbnVtYmVyKiBhcnJheQoKRnVuY3Rpb24gcmV0dXJucyAq
YWNjKiArICpuKiAtLT4gMCArIDEgLS0+IDEKCiMjIyMjIyBBdCB0aGlyZCBp
dGVyYXRpb24gc3RlcAoKYGBgYWNjID0gMWBgYCBiZWNhdXNlIGl0J3MgdGhl
IHZhbHVlIHRoZSBmdW5jdGlvbiByZXR1cm5lZCBhdCB0aGUgcHJldmlvdXMg
aXRlcmF0aW9uIHN0ZXAKCmBgYG4gPSAyYGBgIHRoaXJkIGVsZW1lbnQgb2Yg
dGhlICpudW1iZXIqIGFycmF5CgpGdW5jdGlvbiByZXR1cm5zICphY2MqICsg
Km4qIC0tPiAxICsgMiAtLT4gMwoKIyMjIyMjIEF0IGZvdXJ0aCBpdGVyYXRp
b24gc3RlcAoKYGBgYWNjID0gM2BgYCBiZWNhdXNlIGl0J3MgdGhlIHZhbHVl
IHRoZSBmdW5jdGlvbiByZXR1cm5lZCBhdCB0aGUgcHJldmlvdXMgaXRlcmF0
aW9uIHN0ZXAKCmBgYG4gPSAzYGBgIGZvdXJ0aCBlbGVtZW50IG9mIHRoZSAq
bnVtYmVyKiBhcnJheQoKRnVuY3Rpb24gcmV0dXJucyAqYWNjKiArICpuKiAt
LT4gMyArIDMgLS0+IDYKCiMjIyMjIyBbLi4uXSBBdCBsYXN0IGl0ZXJhdGlv
biBzdGVwCgpgYGBhY2MgPSAxNWBgYCBiZWNhdXNlIGl0J3MgdGhlIHZhbHVl
IHRoZSBmdW5jdGlvbiByZXR1cm5lZCBhdCB0aGUgcHJldmlvdXMgaXRlcmF0
aW9uIHN0ZXAKCmBgYG4gPSA2YGBgIGxhc3QgZWxlbWVudCBvZiB0aGUgKm51
bWJlciogYXJyYXkKCkZ1bmN0aW9uIHJldHVybnMgKmFjYyogKyAqbiogLS0+
IDE1ICsgNiAtLT4gMjEKCkFzIGl0IGlzIHRoZSBsYXN0IGl0ZXJhdGlvbiBz
dGVwLCAqKi5yZWR1Y2UqKiByZXR1cm5zIDIxLgoKIyMjIyMgQXJyYXkucHJv
dG90eXBlLmZpbmQoKQoKYGBganMKY29uc3QgZ3JlYXRlclRoYW5aZXJvID0g
bnVtYmVycy5maW5kKGZ1bmN0aW9uKG4pIHsKICByZXR1cm4gbiA+IDA7IC8v
IHJldHVybiBudW1iZXIganVzdCBncmVhdGVyIHRoYW4gMCBpcyBwcmVzZW50
Cn0pOwpjb25zb2xlLmxvZyhncmVhdGVyVGhhblplcm8pOyAvLyAxCmBgYAoK
KipOb3RlKiogOiBZb3Ugd2lsbCBmcmVxdWVudGx5IGVuY291bnRlciB0aGlz
IG1ldGhvZCB1c2VkIGluIGNvbWJpbmF0aW9uIHdpdGggW2Fycm93IGZ1bmN0
aW9uc10oIy1hcnJvdy1mdW5jdGlvbikKCldlIGFyZSB1c2luZyAuZmluZCBv
biB0aGUgKm51bWJlcnMqIGFycmF5LCAuZmluZCBpcyBpdGVyYXRpbmcgb24g
ZWFjaCBlbGVtZW50IG9mIHRoZSBhcnJheSBhbmQgcGFzc2VzIGl0IHRvIG91
ciBmdW5jdGlvbiwgdW50aWwgdGhlIGNvbmRpdGlvbiBpcyBtZXQuIFRoZSBn
b2FsIG9mIHRoZSBmdW5jdGlvbiBpcyB0byByZXR1cm4gdGhlIGVsZW1lbnQg
dGhhdCBzYXRpc2ZpZXMgdGhlIGN1cnJlbnQgdGVzdGluZyBmdW5jdGlvbi4g
VGhlIC5maW5kIG1ldGhvZCBleGVjdXRlcyB0aGUgY2FsbGJhY2sgZnVuY3Rp
b24gb25jZSBmb3IgZWFjaCBpbmRleCBvZiB0aGUgYXJyYXkgdW50aWwgdGhl
IGNhbGxiYWNrIHJldHVybnMgYSB0cnV0aHkgdmFsdWUuCgoqKk5vdGUqKiA6
IEl0IGltbWVkaWF0ZWx5IHJldHVybnMgdGhlIHZhbHVlIG9mIHRoYXQgZWxl
bWVudCAodGhhdCBzYXRpc2ZpZXMgdGhlIGNvbmRpdGlvbikgaWYgZm91bmQu
IE90aGVyd2lzZSwgcmV0dXJucyB1bmRlZmluZWQuCgojIyMjIEV4dGVybmFs
IFJlc291cmNlCgotIFtVbmRlcnN0YW5kaW5nIG1hcCAvIGZpbHRlciAvIHJl
ZHVjZSBpbiBKU10oaHR0cHM6Ly9oYWNrZXJub29uLmNvbS91bmRlcnN0YW5k
aW5nLW1hcC1maWx0ZXItYW5kLXJlZHVjZS1pbi1qYXZhc2NyaXB0LTVkZjFj
N2VlZTQ2NCkKCiMjIyBTcHJlYWQgb3BlcmF0b3IgIi4uLiIKClRoZSBzcHJl
YWQgb3BlcmF0b3IgYGBgLi4uYGBgIGhhcyBiZWVuIGludHJvZHVjZWQgd2l0
aCBFUzIwMTUgYW5kIGlzIHVzZWQgdG8gZXhwYW5kIGVsZW1lbnRzIG9mIGFu
IGl0ZXJhYmxlIChsaWtlIGFuIGFycmF5KSBpbnRvIHBsYWNlcyB3aGVyZSBt
dWx0aXBsZSBlbGVtZW50cyBjYW4gZml0LgoKIyMjIyBTYW1wbGUgY29kZQoK
YGBganMKY29uc3QgYXJyMSA9IFsiYSIsICJiIiwgImMiXTsKY29uc3QgYXJy
MiA9IFsuLi5hcnIxLCAiZCIsICJlIiwgImYiXTsgLy8gWyJhIiwgImIiLCAi
YyIsICJkIiwgImUiLCAiZiJdCmBgYAoKYGBganMKZnVuY3Rpb24gbXlGdW5j
KHgsIHksIC4uLnBhcmFtcykgewogIGNvbnNvbGUubG9nKHgpOwogIGNvbnNv
bGUubG9nKHkpOwogIGNvbnNvbGUubG9nKHBhcmFtcykKfQoKbXlGdW5jKCJh
IiwgImIiLCAiYyIsICJkIiwgImUiLCAiZiIpCi8vICJhIgovLyAiYiIKLy8g
WyJjIiwgImQiLCAiZSIsICJmIl0KYGBgCgpgYGBqcwpjb25zdCB7IHgsIHks
IC4uLnogfSA9IHsgeDogMSwgeTogMiwgYTogMywgYjogNCB9Owpjb25zb2xl
LmxvZyh4KTsgLy8gMQpjb25zb2xlLmxvZyh5KTsgLy8gMgpjb25zb2xlLmxv
Zyh6KTsgLy8geyBhOiAzLCBiOiA0IH0KCmNvbnN0IG4gPSB7IHgsIHksIC4u
LnogfTsKY29uc29sZS5sb2cobik7IC8vIHsgeDogMSwgeTogMiwgYTogMywg
YjogNCB9CmBgYAoKIyMjIyBFeHBsYW5hdGlvbgoKIyMjIyMgSW4gaXRlcmFi
bGVzIChsaWtlIGFycmF5cykKCklmIHdlIGhhdmUgdGhlIHR3byBmb2xsb3dp
bmcgYXJyYXlzOgoKYGBganMKY29uc3QgYXJyMSA9IFsiYSIsICJiIiwgImMi
XTsKY29uc3QgYXJyMiA9IFthcnIxLCAiZCIsICJlIiwgImYiXTsgLy8gW1si
YSIsICJiIiwgImMiXSwgImQiLCAiZSIsICJmIl0KYGBgCgoqYXJyMiogdGhl
IGZpcnN0IGVsZW1lbnQgaXMgYW4gYXJyYXkgYmVjYXVzZSAqYXJyMSogaXMg
aW5qZWN0ZWQgYXMgaXMgaW50byAqYXJyMiouIEJ1dCB3aGF0IHdlIHdhbnQg
aXMgKmFycjIqIHRvIGJlIGFuIGFycmF5IG9mIGxldHRlcnMuIFRvIGRvIHNv
LCB3ZSBjYW4gKnNwcmVhZCogdGhlIGVsZW1lbnRzIG9mICphcnIxKiBpbnRv
ICphcnIyKi4KCldpdGggc3ByZWFkIG9wZXJhdG9yCgpgYGBqcwpjb25zdCBh
cnIxID0gWyJhIiwgImIiLCAiYyJdOwpjb25zdCBhcnIyID0gWy4uLmFycjEs
ICJkIiwgImUiLCAiZiJdOyAvLyBbImEiLCAiYiIsICJjIiwgImQiLCAiZSIs
ICJmIl0KYGBgCgojIyMjIyBGdW5jdGlvbiByZXN0IHBhcmFtZXRlcgoKSW4g
ZnVuY3Rpb24gcGFyYW1ldGVycywgd2UgY2FuIHVzZSB0aGUgcmVzdCBvcGVy
YXRvciB0byBpbmplY3QgcGFyYW1ldGVycyBpbnRvIGFuIGFycmF5IHdlIGNh
biBsb29wIGluLiBUaGVyZSBpcyBhbHJlYWR5IGFuICoqYXJndW1lbnRzKiog
b2JqZWN0IGJvdW5kIHRvIGV2ZXJ5IGZ1bmN0aW9uIHRoYXQgaXMgZXF1YWwg
dG8gYW4gYXJyYXkgb2YgYWxsIHRoZSBwYXJhbWV0ZXJzIHBhc3NlZCBpbnRv
IHRoZSBmdW5jdGlvbi4KCmBgYGpzCmZ1bmN0aW9uIG15RnVuYygpIHsKICBm
b3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgewog
ICAgY29uc29sZS5sb2coYXJndW1lbnRzW2ldKTsKICB9Cn0KCm15RnVuYygi
TmljayIsICJBbmRlcnNvbiIsIDEwLCAxMiwgNik7Ci8vICJOaWNrIgovLyAi
QW5kZXJzb24iCi8vIDEwCi8vIDEyCi8vIDYKYGBgCgpCdXQgbGV0J3Mgc2F5
IHRoYXQgd2Ugd2FudCB0aGlzIGZ1bmN0aW9uIHRvIGNyZWF0ZSBhIG5ldyBz
dHVkZW50IHdpdGggaXRzIGdyYWRlcyBhbmQgd2l0aCBpdHMgYXZlcmFnZSBn
cmFkZS4gV291bGRuJ3QgaXQgYmUgbW9yZSBjb252ZW5pZW50IHRvIGV4dHJh
Y3QgdGhlIGZpcnN0IHR3byBwYXJhbWV0ZXJzIGludG8gdHdvIHNlcGFyYXRl
IHZhcmlhYmxlcywgYW5kIHRoZW4gaGF2ZSBhbGwgdGhlIGdyYWRlcyBpbiBh
biBhcnJheSB3ZSBjYW4gaXRlcmF0ZSBvdmVyPwoKVGhhdCdzIGV4YWN0bHkg
d2hhdCB0aGUgcmVzdCBvcGVyYXRvciBhbGxvd3MgdXMgdG8gZG8hCgpgYGBq
cwpmdW5jdGlvbiBjcmVhdGVTdHVkZW50KGZpcnN0TmFtZSwgbGFzdE5hbWUs
IC4uLmdyYWRlcykgewogIC8vIGZpcnN0TmFtZSA9ICJOaWNrIgogIC8vIGxh
c3ROYW1lID0gIkFuZGVyc29uIgogIC8vIFsxMCwgMTIsIDZdIC0tICIuLi4i
IHRha2VzIGFsbCBvdGhlciBwYXJhbWV0ZXJzIHBhc3NlZCBhbmQgY3JlYXRl
cyBhICJncmFkZXMiIGFycmF5IHZhcmlhYmxlIHRoYXQgY29udGFpbnMgdGhl
bQoKICBjb25zdCBhdmdHcmFkZSA9IGdyYWRlcy5yZWR1Y2UoKGFjYywgY3Vy
cikgPT4gYWNjICsgY3VyciwgMCkgLyBncmFkZXMubGVuZ3RoOyAvLyBjb21w
dXRlcyBhdmVyYWdlIGdyYWRlIGZyb20gZ3JhZGVzCgogIHJldHVybiB7CiAg
ICBmaXJzdE5hbWU6IGZpcnN0TmFtZSwKICAgIGxhc3ROYW1lOiBsYXN0TmFt
ZSwKICAgIGdyYWRlczogZ3JhZGVzLAogICAgYXZnR3JhZGU6IGF2Z0dyYWRl
CiAgfQp9Cgpjb25zdCBzdHVkZW50ID0gY3JlYXRlU3R1ZGVudCgiTmljayIs
ICJBbmRlcnNvbiIsIDEwLCAxMiwgNik7CmNvbnNvbGUubG9nKHN0dWRlbnQp
OwovLyB7Ci8vICAgZmlyc3ROYW1lOiAiTmljayIsCi8vICAgbGFzdE5hbWU6
ICJBbmRlcnNvbiIsCi8vICAgZ3JhZGVzOiBbMTAsIDEyLCA2XSwKLy8gICBh
dmdHcmFkZTogOSwzMwovLyB9CmBgYAoKPiAqKk5vdGU6KiogY3JlYXRlU3R1
ZGVudCBmdW5jdGlvbiBpcyBiYWQgYmVjYXVzZSB3ZSBkb24ndCBjaGVjayBp
ZiBncmFkZXMubGVuZ3RoIGV4aXN0cyBvciBpcyBkaWZmZXJlbnQgZnJvbSAw
LiBCdXQgaXQncyBlYXNpZXIgdG8gcmVhZCB0aGlzIHdheSwgc28gSSBkaWRu
J3QgaGFuZGxlIHRoaXMgY2FzZS4KCiMjIyMjIE9iamVjdCBwcm9wZXJ0aWVz
IHNwcmVhZGluZwoKRm9yIHRoaXMgb25lLCBJIHJlY29tbWVuZCB5b3UgcmVh
ZCBwcmV2aW91cyBleHBsYW5hdGlvbnMgYWJvdXQgdGhlIHJlc3Qgb3BlcmF0
b3Igb24gaXRlcmFibGVzIGFuZCBmdW5jdGlvbiBwYXJhbWV0ZXJzLgoKYGBg
anMKY29uc3QgbXlPYmogPSB7IHg6IDEsIHk6IDIsIGE6IDMsIGI6IDQgfTsK
Y29uc3QgeyB4LCB5LCAuLi56IH0gPSBteU9iajsgLy8gb2JqZWN0IGRlc3Ry
dWN0dXJpbmcgaGVyZQpjb25zb2xlLmxvZyh4KTsgLy8gMQpjb25zb2xlLmxv
Zyh5KTsgLy8gMgpjb25zb2xlLmxvZyh6KTsgLy8geyBhOiAzLCBiOiA0IH0K
Ci8vIHogaXMgdGhlIHJlc3Qgb2YgdGhlIG9iamVjdCBkZXN0cnVjdHVyZWQ6
IG15T2JqIG9iamVjdCBtaW51cyB4IGFuZCB5IHByb3BlcnRpZXMgZGVzdHJ1
Y3R1cmVkCgpjb25zdCBuID0geyB4LCB5LCAuLi56IH07CmNvbnNvbGUubG9n
KG4pOyAvLyB7IHg6IDEsIHk6IDIsIGE6IDMsIGI6IDQgfQoKLy8gSGVyZSB6
IG9iamVjdCBwcm9wZXJ0aWVzIGFyZSBzcHJlYWQgaW50byBuCmBgYAoKIyMj
IyBFeHRlcm5hbCByZXNvdXJjZXMKCi0gW1RDMzkgLSBPYmplY3QgcmVzdC9z
cHJlYWRdKGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLW9iamVj
dC1yZXN0LXNwcmVhZCkKLSBbU3ByZWFkIG9wZXJhdG9yIGludHJvZHVjdGlv
biAtIFdlc0Jvc10oaHR0cHM6Ly9naXRodWIuY29tL3dlc2Jvcy9lczYtYXJ0
aWNsZXMvYmxvYi9tYXN0ZXIvMjglMjAtJTIwU3ByZWFkJTIwT3BlcmF0b3Il
MjBJbnRyb2R1Y3Rpb24ubWQpCi0gW0phdmFTY3JpcHQgJiB0aGUgc3ByZWFk
IG9wZXJhdG9yXShodHRwczovL2NvZGVidXJzdC5pby9qYXZhc2NyaXB0LXRo
ZS1zcHJlYWQtb3BlcmF0b3ItYTg2N2E3MTY2OGNhKQotIFs2IEdyZWF0IHVz
ZXMgb2YgdGhlIHNwcmVhZCBvcGVyYXRvcl0oaHR0cHM6Ly9kYXZpZHdhbHNo
Lm5hbWUvc3ByZWFkLW9wZXJhdG9yKQoKIyMjIE9iamVjdCBwcm9wZXJ0eSBz
aG9ydGhhbmQKCldoZW4gYXNzaWduaW5nIGEgdmFyaWFibGUgdG8gYW4gb2Jq
ZWN0IHByb3BlcnR5LCBpZiB0aGUgdmFyaWFibGUgbmFtZSBpcyBlcXVhbCB0
byB0aGUgcHJvcGVydHkgbmFtZSwgeW91IGNhbiBkbyB0aGUgZm9sbG93aW5n
OgoKYGBganMKY29uc3QgeCA9IDEwOwpjb25zdCBteU9iaiA9IHsgeCB9Owpj
b25zb2xlLmxvZyhteU9iai54KSAvLyAxMApgYGAKCiMjIyMgRXhwbGFuYXRp
b24KClVzdWFsbHkgKHByZS1FUzIwMTUpIHdoZW4geW91IGRlY2xhcmUgYSBu
ZXcgKm9iamVjdCBsaXRlcmFsKiBhbmQgd2FudCB0byB1c2UgdmFyaWFibGVz
IGFzIG9iamVjdCBwcm9wZXJ0aWVzIHZhbHVlcywgeW91IHdvdWxkIHdyaXRl
IHRoaXMga2luZCBvZiBjb2RlOgoKYGBganMKY29uc3QgeCA9IDEwOwpjb25z
dCB5ID0gMjA7Cgpjb25zdCBteU9iaiA9IHsKICB4OiB4LCAvLyBhc3NpZ25p
bmcgeCB2YXJpYWJsZSB2YWx1ZSB0byBteU9iai54CiAgeTogeSAvLyBhc3Np
Z25pbmcgeSB2YXJpYWJsZSB2YWx1ZSB0byBteU9iai55Cn07Cgpjb25zb2xl
LmxvZyhteU9iai54KSAvLyAxMApjb25zb2xlLmxvZyhteU9iai55KSAvLyAy
MApgYGAKCkFzIHlvdSBjYW4gc2VlLCB0aGlzIGlzIHF1aXRlIHJlcGV0aXRp
dmUgYmVjYXVzZSB0aGUgcHJvcGVydGllcyBuYW1lIG9mIG15T2JqIGFyZSB0
aGUgc2FtZSBhcyB0aGUgdmFyaWFibGUgbmFtZXMgeW91IHdhbnQgdG8gYXNz
aWduIHRvIHRob3NlIHByb3BlcnRpZXMuCgpXaXRoIEVTMjAxNSwgd2hlbiB0
aGUgdmFyaWFibGUgbmFtZSBpcyB0aGUgc2FtZSBhcyB0aGUgcHJvcGVydHkg
bmFtZSwgeW91IGNhbiBkbyB0aGlzIHNob3J0aGFuZDoKCmBgYGpzCmNvbnN0
IHggPSAxMDsKY29uc3QgeSA9IDIwOwoKY29uc3QgbXlPYmogPSB7CiAgeCwK
ICB5Cn07Cgpjb25zb2xlLmxvZyhteU9iai54KSAvLyAxMApjb25zb2xlLmxv
ZyhteU9iai55KSAvLyAyMApgYGAKCiMjIyMgRXh0ZXJuYWwgcmVzb3VyY2Vz
CgotIFtQcm9wZXJ0eSBzaG9ydGhhbmQgLSBFUzYgRmVhdHVyZXNdKGh0dHA6
Ly9lczYtZmVhdHVyZXMub3JnLyNQcm9wZXJ0eVNob3J0aGFuZCkKCiMjIyBQ
cm9taXNlcwoKQSBwcm9taXNlIGlzIGFuIG9iamVjdCB3aGljaCBjYW4gYmUg
cmV0dXJuZWQgc3luY2hyb25vdXNseSBmcm9tIGFuIGFzeW5jaHJvbm91cyBm
dW5jdGlvbiAoW3JlZl0oaHR0cHM6Ly9tZWRpdW0uY29tL2phdmFzY3JpcHQt
c2NlbmUvbWFzdGVyLXRoZS1qYXZhc2NyaXB0LWludGVydmlldy13aGF0LWlz
LWEtcHJvbWlzZS0yN2ZjNzFlNzcyNjEjM2NkMCkpLgoKUHJvbWlzZXMgY2Fu
IGJlIHVzZWQgdG8gYXZvaWQgW2NhbGxiYWNrIGhlbGxdKGh0dHA6Ly9jYWxs
YmFja2hlbGwuY29tLyksIGFuZCB0aGV5IGFyZSBtb3JlIGFuZCBtb3JlIGZy
ZXF1ZW50bHkgZW5jb3VudGVyZWQgaW4gbW9kZXJuIEphdmFTY3JpcHQgcHJv
amVjdHMuCgojIyMjIFNhbXBsZSBjb2RlCgpgYGBqcwpjb25zdCBmZXRjaGlu
Z1Bvc3RzID0gbmV3IFByb21pc2UoKHJlcywgcmVqKSA9PiB7CiAgJC5nZXQo
Ii9wb3N0cyIpCiAgICAuZG9uZShwb3N0cyA9PiByZXMocG9zdHMpKQogICAg
LmZhaWwoZXJyID0+IHJlaihlcnIpKTsKfSk7CgpmZXRjaGluZ1Bvc3RzCiAg
LnRoZW4ocG9zdHMgPT4gY29uc29sZS5sb2cocG9zdHMpKQogIC5jYXRjaChl
cnIgPT4gY29uc29sZS5sb2coZXJyKSk7CmBgYAoKIyMjIyBFeHBsYW5hdGlv
bgoKV2hlbiB5b3UgZG8gYW4gKkFqYXggcmVxdWVzdCogdGhlIHJlc3BvbnNl
IGlzIG5vdCBzeW5jaHJvbm91cyBiZWNhdXNlIHlvdSB3YW50IGEgcmVzb3Vy
Y2UgdGhhdCB0YWtlcyBzb21lIHRpbWUgdG8gY29tZS4gSXQgZXZlbiBtYXkg
bmV2ZXIgY29tZSBpZiB0aGUgcmVzb3VyY2UgeW91IGhhdmUgcmVxdWVzdGVk
IGlzIHVuYXZhaWxhYmxlIGZvciBzb21lIHJlYXNvbiAoNDA0KS4KClRvIGhh
bmRsZSB0aGF0IGtpbmQgb2Ygc2l0dWF0aW9uLCBFUzIwMTUgaGFzIGdpdmVu
IHVzICpwcm9taXNlcyouIFByb21pc2VzIGNhbiBoYXZlIHRocmVlIGRpZmZl
cmVudCBzdGF0ZXM6CgotIFBlbmRpbmcKLSBGdWxmaWxsZWQKLSBSZWplY3Rl
ZAoKTGV0J3Mgc2F5IHdlIHdhbnQgdG8gdXNlIHByb21pc2VzIHRvIGhhbmRs
ZSBhbiBBamF4IHJlcXVlc3QgdG8gZmV0Y2ggdGhlIHJlc291cmNlIFguCgoj
IyMjIyBDcmVhdGUgdGhlIHByb21pc2UKCldlIGZpcnN0bHkgYXJlIGdvaW5n
IHRvIGNyZWF0ZSBhIHByb21pc2UuIFdlIHdpbGwgdXNlIHRoZSBqUXVlcnkg
Z2V0IG1ldGhvZCB0byBkbyBvdXIgQWpheCByZXF1ZXN0IHRvIFguCgpgYGBq
cwpjb25zdCB4RmV0Y2hlclByb21pc2UgPSBuZXcgUHJvbWlzZSggLy8gQ3Jl
YXRlIHByb21pc2UgdXNpbmcgIm5ldyIga2V5d29yZCBhbmQgc3RvcmUgaXQg
aW50byBhIHZhcmlhYmxlCiAgZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7
IC8vIFByb21pc2UgY29uc3RydWN0b3IgdGFrZXMgYSBmdW5jdGlvbiBwYXJh
bWV0ZXIgd2hpY2ggaGFzIHJlc29sdmUgYW5kIHJlamVjdCBwYXJhbWV0ZXJz
IGl0c2VsZgogICAgJC5nZXQoIlgiKSAvLyBMYXVuY2ggdGhlIEFqYXggcmVx
dWVzdAogICAgICAuZG9uZShmdW5jdGlvbihYKSB7IC8vIE9uY2UgdGhlIHJl
cXVlc3QgaXMgZG9uZS4uLgogICAgICAgIHJlc29sdmUoWCk7IC8vIC4uLiBy
ZXNvbHZlIHRoZSBwcm9taXNlIHdpdGggdGhlIFggdmFsdWUgYXMgcGFyYW1l
dGVyCiAgICAgIH0pCiAgICAgIC5mYWlsKGZ1bmN0aW9uKGVycm9yKSB7IC8v
IElmIHRoZSByZXF1ZXN0IGhhcyBmYWlsZWQuLi4KICAgICAgICByZWplY3Qo
ZXJyb3IpOyAvLyAuLi4gcmVqZWN0IHRoZSBwcm9taXNlIHdpdGggdGhlIGVy
cm9yIGFzIHBhcmFtZXRlcgogICAgICB9KTsKICB9CikKYGBgCgpBcyBzZWVu
IGluIHRoZSBhYm92ZSBzYW1wbGUsIHRoZSBQcm9taXNlIG9iamVjdCB0YWtl
cyBhbiAqZXhlY3V0b3IqIGZ1bmN0aW9uIHdoaWNoIHRha2VzIHR3byBwYXJh
bWV0ZXJzICoqcmVzb2x2ZSoqIGFuZCAqKnJlamVjdCoqLiBUaG9zZSBwYXJh
bWV0ZXJzIGFyZSBmdW5jdGlvbnMgd2hpY2ggd2hlbiBjYWxsZWQgYXJlIGdv
aW5nIHRvIG1vdmUgdGhlIHByb21pc2UgKnBlbmRpbmcqIHN0YXRlIHRvIHJl
c3BlY3RpdmVseSBhICpmdWxmaWxsZWQqIGFuZCAqcmVqZWN0ZWQqIHN0YXRl
LgoKVGhlIHByb21pc2UgaXMgaW4gcGVuZGluZyBzdGF0ZSBhZnRlciBpbnN0
YW5jZSBjcmVhdGlvbiBhbmQgaXRzICpleGVjdXRvciogZnVuY3Rpb24gaXMg
ZXhlY3V0ZWQgaW1tZWRpYXRlbHkuIE9uY2Ugb25lIG9mIHRoZSBmdW5jdGlv
biAqcmVzb2x2ZSogb3IgKnJlamVjdCogaXMgY2FsbGVkIGluIHRoZSAqZXhl
Y3V0b3IqIGZ1bmN0aW9uLCB0aGUgcHJvbWlzZSB3aWxsIGNhbGwgaXRzIGFz
c29jaWF0ZWQgaGFuZGxlcnMuCgojIyMjIyBQcm9taXNlIGhhbmRsZXJzIHVz
YWdlCgpUbyBnZXQgdGhlIHByb21pc2UgcmVzdWx0IChvciBlcnJvciksIHdl
IG11c3QgYXR0YWNoIHRvIGl0IGhhbmRsZXJzIGJ5IGRvaW5nIHRoZSBmb2xs
b3dpbmc6CgpgYGBqcwp4RmV0Y2hlclByb21pc2UKICAudGhlbihmdW5jdGlv
bihYKSB7CiAgICBjb25zb2xlLmxvZyhYKTsKICB9KQogIC5jYXRjaChmdW5j
dGlvbihlcnIpIHsKICAgIGNvbnNvbGUubG9nKGVycikKICB9KQpgYGAKCklm
IHRoZSBwcm9taXNlIHN1Y2NlZWRzLCAqcmVzb2x2ZSogaXMgZXhlY3V0ZWQg
YW5kIHRoZSBmdW5jdGlvbiBwYXNzZWQgYXMgYGBgLnRoZW5gYGAgcGFyYW1l
dGVyIGlzIGV4ZWN1dGVkLgoKSWYgaXQgZmFpbHMsICpyZWplY3QqIGlzIGV4
ZWN1dGVkIGFuZCB0aGUgZnVuY3Rpb24gcGFzc2VkIGFzIGBgYC5jYXRjaGBg
YCBwYXJhbWV0ZXIgaXMgZXhlY3V0ZWQuCgo+ICoqTm90ZSA6KiogSWYgdGhl
IHByb21pc2UgaGFzIGFscmVhZHkgYmVlbiBmdWxmaWxsZWQgb3IgcmVqZWN0
ZWQgd2hlbiBhIGNvcnJlc3BvbmRpbmcgaGFuZGxlciBpcyBhdHRhY2hlZCwg
dGhlIGhhbmRsZXIgd2lsbCBiZSBjYWxsZWQsIHNvIHRoZXJlIGlzIG5vIHJh
Y2UgY29uZGl0aW9uIGJldHdlZW4gYW4gYXN5bmNocm9ub3VzIG9wZXJhdGlv
biBjb21wbGV0aW5nIGFuZCBpdHMgaGFuZGxlcnMgYmVpbmcgYXR0YWNoZWQu
IFsoUmVmOiBNRE4pXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9l
bi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2Jq
ZWN0cy9Qcm9taXNlI0Rlc2NyaXB0aW9uKQoKIyMjIyBFeHRlcm5hbCBSZXNv
dXJjZXMKCi0gW0phdmFTY3JpcHQgUHJvbWlzZXMgZm9yIGR1bW1pZXMgLSBK
ZWNlbHluIFllZW5dKGh0dHBzOi8vc2NvdGNoLmlvL3R1dG9yaWFscy9qYXZh
c2NyaXB0LXByb21pc2VzLWZvci1kdW1taWVzKQotIFtKYXZhU2NyaXB0IFBy
b21pc2UgQVBJIC0gRGF2aWQgV2Fsc2hdKGh0dHBzOi8vZGF2aWR3YWxzaC5u
YW1lL3Byb21pc2VzKQotIFtVc2luZyBwcm9taXNlcyAtIE1ETl0oaHR0cHM6
Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNj
cmlwdC9HdWlkZS9Vc2luZ19wcm9taXNlcykKLSBbV2hhdCBpcyBhIHByb21p
c2UgLSBFcmljIEVsbGlvdHRdKGh0dHBzOi8vbWVkaXVtLmNvbS9qYXZhc2Ny
aXB0LXNjZW5lL21hc3Rlci10aGUtamF2YXNjcmlwdC1pbnRlcnZpZXctd2hh
dC1pcy1hLXByb21pc2UtMjdmYzcxZTc3MjYxKQotIFtKYXZhU2NyaXB0IFBy
b21pc2VzOiBhbiBJbnRyb2R1Y3Rpb24gLSBKYWtlIEFyY2hpYmFsZF0oaHR0
cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vd2ViL2Z1bmRhbWVudGFscy9n
ZXR0aW5nLXN0YXJ0ZWQvcHJpbWVycy9wcm9taXNlcykKLSBbUHJvbWlzZSBk
b2N1bWVudGF0aW9uIC0gTUROXShodHRwczovL2RldmVsb3Blci5tb3ppbGxh
Lm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9i
YWxfT2JqZWN0cy9Qcm9taXNlKQoKIyMjIFRlbXBsYXRlIGxpdGVyYWxzCgpU
ZW1wbGF0ZSBsaXRlcmFscyBpcyBhbiBbKmV4cHJlc3Npb24gaW50ZXJwb2xh
dGlvbipdKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1N0cmluZ19p
bnRlcnBvbGF0aW9uKSBmb3Igc2luZ2xlIGFuZCBtdWx0aXBsZS1saW5lIHN0
cmluZ3MuCgpJbiBvdGhlciB3b3JkcywgaXQgaXMgYSBuZXcgc3RyaW5nIHN5
bnRheCBpbiB3aGljaCB5b3UgY2FuIGNvbnZlbmllbnRseSB1c2UgYW55IEph
dmFTY3JpcHQgZXhwcmVzc2lvbnMgKHZhcmlhYmxlcyBmb3IgaW5zdGFuY2Up
LgoKIyMjIyBTYW1wbGUgY29kZQoKYGBganMKY29uc3QgbmFtZSA9ICJOaWNr
IjsKYEhlbGxvICR7bmFtZX0sIHRoZSBmb2xsb3dpbmcgZXhwcmVzc2lvbiBp
cyBlcXVhbCB0byBmb3VyIDogJHsyKzJ9YDsKCi8vIEhlbGxvIE5pY2ssIHRo
ZSBmb2xsb3dpbmcgZXhwcmVzc2lvbiBpcyBlcXVhbCB0byBmb3VyOiA0CmBg
YAoKIyMjIyBFeHRlcm5hbCByZXNvdXJjZXMKCi0gW1N0cmluZyBpbnRlcnBv
bGF0aW9uIC0gRVM2IEZlYXR1cmVzXShodHRwOi8vZXM2LWZlYXR1cmVzLm9y
Zy8jU3RyaW5nSW50ZXJwb2xhdGlvbikKLSBbRVM2IFRlbXBsYXRlIFN0cmlu
Z3MgLSBBZGR5IE9zbWFuaV0oaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5j
b20vd2ViL3VwZGF0ZXMvMjAxNS8wMS9FUzYtVGVtcGxhdGUtU3RyaW5ncykK
CiMjIyBUYWdnZWQgdGVtcGxhdGUgbGl0ZXJhbHMKClRlbXBsYXRlIHRhZ3Mg
YXJlICpmdW5jdGlvbnMgdGhhdCBjYW4gYmUgcHJlZml4ZWQgdG8gYSBbdGVt
cGxhdGUgbGl0ZXJhbF0oI3RlbXBsYXRlLWxpdGVyYWxzKSouIFdoZW4gYSBm
dW5jdGlvbiBpcyBjYWxsZWQgdGhpcyB3YXksIHRoZSBmaXJzdCBwYXJhbWV0
ZXIgaXMgYW4gYXJyYXkgb2YgdGhlICpzdHJpbmdzKiB0aGF0IGFwcGVhciBi
ZXR3ZWVuIHRoZSB0ZW1wbGF0ZSdzIGludGVycG9sYXRlZCB2YXJpYWJsZXMs
IGFuZCB0aGUgc3Vic2VxdWVudCBwYXJhbWV0ZXJzIGFyZSB0aGUgaW50ZXJw
b2xhdGVkIHZhbHVlcy4gVXNlIGEgc3ByZWFkIG9wZXJhdG9yIGAuLi5gIHRv
IGNhcHR1cmUgYWxsIG9mIHRoZW0uIFsoUmVmOiBNRE4pXShodHRwczovL2Rl
dmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0
L1JlZmVyZW5jZS9UZW1wbGF0ZV9saXRlcmFscyNUYWdnZWRfdGVtcGxhdGVf
bGl0ZXJhbHMpLgoKPiAqKk5vdGUgOioqIEEgZmFtb3VzIGxpYnJhcnkgbmFt
ZWQgW3N0eWxlZC1jb21wb25lbnRzXShodHRwczovL3d3dy5zdHlsZWQtY29t
cG9uZW50cy5jb20vKSBoZWF2aWx5IHJlbGllcyBvbiB0aGlzIGZlYXR1cmUu
CgpCZWxvdyBpcyBhIHRveSBleGFtcGxlIG9uIGhvdyB0aGV5IHdvcmsuCmBg
YGpzCmZ1bmN0aW9uIGhpZ2hsaWdodChzdHJpbmdzLCAuLi52YWx1ZXMpIHsK
ICBjb25zdCBpbnRlcnBvbGF0aW9uID0gc3RyaW5ncy5yZWR1Y2UoKHByZXYs
IGN1cnJlbnQpID0+IHsKICAgIHJldHVybiBwcmV2ICsgY3VycmVudCArICh2
YWx1ZXMubGVuZ3RoID8gIjxtYXJrPiIgKyB2YWx1ZXMuc2hpZnQoKSArICI8
L21hcms+IiA6ICIiKTsKICB9LCAiIik7CgogIHJldHVybiBpbnRlcnBvbGF0
aW9uOwp9Cgpjb25zdCBjb25kaW1lbnQgPSAiamFtIjsKY29uc3QgbWVhbCA9
ICJ0b2FzdCI7CgpoaWdobGlnaHRgSSBsaWtlICR7Y29uZGltZW50fSBvbiAk
e21lYWx9LmA7Ci8vICJJIGxpa2UgPG1hcms+amFtPC9tYXJrPiBvbiA8bWFy
az50b2FzdDwvbWFyaz4uIgpgYGAKCkEgbW9yZSBpbnRlcmVzdGluZyBleGFt
cGxlOgpgYGBqcwpmdW5jdGlvbiBjb21tYShzdHJpbmdzLCAuLi52YWx1ZXMp
IHsKICByZXR1cm4gc3RyaW5ncy5yZWR1Y2UoKHByZXYsIG5leHQpID0+IHsK
ICAgIGxldCB2YWx1ZSA9IHZhbHVlcy5zaGlmdCgpIHx8IFtdOwogICAgdmFs
dWUgPSB2YWx1ZS5qb2luKCIsICIpOwogICAgcmV0dXJuIHByZXYgKyBuZXh0
ICsgdmFsdWU7CiAgfSwgIiIpOwp9Cgpjb25zdCBzbmFja3MgPSBbJ2FwcGxl
cycsICdiYW5hbmFzJywgJ2NoZXJyaWVzJ107CmNvbW1hYEkgbGlrZSAke3Nu
YWNrc30gdG8gc25hY2sgb24uYDsKLy8gIkkgbGlrZSBhcHBsZXMsIGJhbmFu
YXMsIGNoZXJyaWVzIHRvIHNuYWNrIG9uLiIKYGBgCgojIyMjIEV4dGVybmFs
IHJlc291cmNlcwotIFtXZXMgQm9zIG9uIFRhZ2dlZCBUZW1wbGF0ZSBMaXRl
cmFsc10oaHR0cDovL3dlc2Jvcy5jb20vdGFnZ2VkLXRlbXBsYXRlLWxpdGVy
YWxzLykKLSBbTGlicmFyeSBvZiBjb21tb24gdGVtcGxhdGUgdGFnc10oaHR0
cHM6Ly9naXRodWIuY29tL2RlY2xhbmRld2V0L2NvbW1vbi10YWdzKQoKIyMj
IEltcG9ydHMgLyBFeHBvcnRzCgpFUzYgbW9kdWxlcyBhcmUgdXNlZCB0byBh
Y2Nlc3MgdmFyaWFibGVzIG9yIGZ1bmN0aW9ucyBpbiBhIG1vZHVsZSBleHBs
aWNpdGx5IGV4cG9ydGVkIGJ5IHRoZSBtb2R1bGVzIGl0IGltcG9ydHMuCgpJ
IGhpZ2hseSByZWNvbW1lbmQgdG8gdGFrZSBhIGxvb2sgYXQgTUROIHJlc291
cmNlcyBvbiBpbXBvcnQvZXhwb3J0IChzZWUgZXh0ZXJuYWwgcmVzb3VyY2Vz
IGJlbG93KSwgaXQgaXMgYm90aCBzdHJhaWdodGZvcndhcmQgYW5kIGNvbXBs
ZXRlLgoKIyMjIyBFeHBsYW5hdGlvbiB3aXRoIHNhbXBsZSBjb2RlCgojIyMj
IyBOYW1lZCBleHBvcnRzCgpOYW1lZCBleHBvcnRzIGFyZSB1c2VkIHRvIGV4
cG9ydCBzZXZlcmFsIHZhbHVlcyBmcm9tIGEgbW9kdWxlLgoKPiAqKk5vdGUg
OioqIFlvdSBjYW4gb25seSBuYW1lLWV4cG9ydCBbZmlyc3QtY2xhc3MgY2l0
aXplbnNdKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0ZpcnN0LWNs
YXNzX2NpdGl6ZW4pIHRoYXQgaGF2ZSBhIG5hbWUuCgpgYGBqcwovLyBtYXRo
Q29uc3RhbnRzLmpzCmV4cG9ydCBjb25zdCBwaSA9IDMuMTQ7CmV4cG9ydCBj
b25zdCBleHAgPSAyLjc7CmV4cG9ydCBjb25zdCBhbHBoYSA9IDAuMzU7Cgov
LyAtLS0tLS0tLS0tLS0tCgovLyBteUZpbGUuanMKaW1wb3J0IHsgcGksIGV4
cCB9IGZyb20gJy4vbWF0aENvbnN0YW50cy5qcyc7IC8vIE5hbWVkIGltcG9y
dCAtLSBkZXN0cnVjdHVyaW5nLWxpa2Ugc3ludGF4CmNvbnNvbGUubG9nKHBp
KSAvLyAzLjE0CmNvbnNvbGUubG9nKGV4cCkgLy8gMi43CgovLyAtLS0tLS0t
LS0tLS0tCgovLyBteVNlY29uZEZpbGUuanMKaW1wb3J0ICogYXMgY29uc3Rh
bnRzIGZyb20gJy4vbWF0aENvbnN0YW50cy5qcyc7IC8vIEluamVjdCBhbGwg
ZXhwb3J0ZWQgdmFsdWVzIGludG8gY29uc3RhbnRzIHZhcmlhYmxlCmNvbnNv
bGUubG9nKGNvbnN0YW50cy5waSkgLy8gMy4xNApjb25zb2xlLmxvZyhjb25z
dGFudHMuZXhwKSAvLyAyLjcKYGBgCgpXaGlsZSBuYW1lZCBpbXBvcnRzIGxv
b2tzIGxpa2UgKmRlc3RydWN0dXJpbmcqLCB0aGV5IGhhdmUgYSBkaWZmZXJl
bnQgc3ludGF4IGFuZCBhcmUgbm90IHRoZSBzYW1lLiBUaGV5IGRvbid0IHN1
cHBvcnQgZGVmYXVsdCB2YWx1ZXMgbm9yICpkZWVwKiBkZXN0cnVjdHVyaW5n
LgoKQmVzaWRlcywgeW91IGNhbiBkbyBhbGlhc2VzIGJ1dCB0aGUgc3ludGF4
IGlzIGRpZmZlcmVudCBmcm9tIHRoZSBvbmUgdXNlZCBpbiBkZXN0cnVjdHVy
aW5nOgoKYGBganMKaW1wb3J0IHsgZm9vIGFzIGJhciB9IGZyb20gJ215Rmls
ZS5qcyc7IC8vIGZvbyBpcyBpbXBvcnRlZCBhbmQgaW5qZWN0ZWQgaW50byBh
IG5ldyBiYXIgdmFyaWFibGUKYGBgCgojIyMjIyBEZWZhdWx0IGltcG9ydCAv
IGV4cG9ydAoKQ29uY2VybmluZyB0aGUgZGVmYXVsdCBleHBvcnQsIHRoZXJl
IGlzIG9ubHkgYSBzaW5nbGUgZGVmYXVsdCBleHBvcnQgcGVyIG1vZHVsZS4g
QSBkZWZhdWx0IGV4cG9ydCBjYW4gYmUgYSBmdW5jdGlvbiwgYSBjbGFzcywg
YW4gb2JqZWN0IG9yIGFueXRoaW5nIGVsc2UuIFRoaXMgdmFsdWUgaXMgY29u
c2lkZXJlZCB0aGUgIm1haW4iIGV4cG9ydGVkIHZhbHVlIHNpbmNlIGl0IHdp
bGwgYmUgdGhlIHNpbXBsZXN0IHRvIGltcG9ydC4gW1JlZjogTUROXShodHRw
czovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZh
U2NyaXB0L1JlZmVyZW5jZS9TdGF0ZW1lbnRzL2V4cG9ydCNEZXNjcmlwdGlv
bikKCmBgYGpzCi8vIGNvb2xOdW1iZXIuanMKY29uc3QgdWx0aW1hdGVOdW1i
ZXIgPSA0MjsKZXhwb3J0IGRlZmF1bHQgdWx0aW1hdGVOdW1iZXI7CgovLyAt
LS0tLS0tLS0tLS0KCi8vIG15RmlsZS5qcwppbXBvcnQgbnVtYmVyIGZyb20g
Jy4vY29vbE51bWJlci5qcyc7Ci8vIERlZmF1bHQgZXhwb3J0LCBpbmRlcGVu
ZGVudGx5IGZyb20gaXRzIG5hbWUsIGlzIGF1dG9tYXRpY2FsbHkgaW5qZWN0
ZWQgaW50byBudW1iZXIgdmFyaWFibGU7CmNvbnNvbGUubG9nKG51bWJlcikg
Ly8gNDIKYGBgCgpGdW5jdGlvbiBleHBvcnRpbmc6CgpgYGBqcwovLyBzdW0u
anMKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3VtKHgsIHkpIHsKICByZXR1
cm4geCArIHk7Cn0KLy8gLS0tLS0tLS0tLS0tLQoKLy8gbXlGaWxlLmpzCmlt
cG9ydCBzdW0gZnJvbSAnLi9zdW0uanMnOwpjb25zdCByZXN1bHQgPSBzdW0o
MSwgMik7CmNvbnNvbGUubG9nKHJlc3VsdCkgLy8gMwpgYGAKCiMjIyMgRXh0
ZXJuYWwgcmVzb3VyY2VzCgotIFtFUzYgTW9kdWxlcyBpbiBidWxsZXRwb2lu
dHNdKGh0dHBzOi8vcG9ueWZvby5jb20vYXJ0aWNsZXMvZXM2I21vZHVsZXMp
Ci0gW0V4cG9ydCAtIE1ETl0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5v
cmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvU3RhdGVt
ZW50cy9leHBvcnQpCi0gW0ltcG9ydCAtIE1ETl0oaHR0cHM6Ly9kZXZlbG9w
ZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZl
cmVuY2UvU3RhdGVtZW50cy9pbXBvcnQpCi0gW1VuZGVyc3RhbmRpbmcgRVM2
IE1vZHVsZXNdKGh0dHBzOi8vd3d3LnNpdGVwb2ludC5jb20vdW5kZXJzdGFu
ZGluZy1lczYtbW9kdWxlcy8pCi0gW0Rlc3RydWN0dXJpbmcgc3BlY2lhbCBj
YXNlIC0gaW1wb3J0IHN0YXRlbWVudHNdKGh0dHBzOi8vcG9ueWZvby5jb20v
YXJ0aWNsZXMvZXM2LWRlc3RydWN0dXJpbmctaW4tZGVwdGgjc3BlY2lhbC1j
YXNlLWltcG9ydC1zdGF0ZW1lbnRzKQotIFtNaXN1bmRlcnN0YW5kaW5nIEVT
NiBNb2R1bGVzIC0gS2VudCBDLiBEb2Rkc10oaHR0cHM6Ly9tZWRpdW0uY29t
L0BrZW50Y2RvZGRzL21pc3VuZGVyc3RhbmRpbmctZXM2LW1vZHVsZXMtdXBn
cmFkaW5nLWJhYmVsLXRlYXJzLWFuZC1hLXNvbHV0aW9uLWFkMmQ1YWI5M2Nl
MCkKLSBbTW9kdWxlcyBpbiBKYXZhU2NyaXB0XShodHRwOi8vZXhwbG9yaW5n
anMuY29tL2VzNi9jaF9tb2R1bGVzLmh0bWwjc2VjX21vZHVsZXMtaW4tamF2
YXNjcmlwdCkKCiMjIyA8YSBuYW1lPSJ0aGlzX2RlZiI+PC9hPiBKYXZhU2Ny
aXB0ICp0aGlzKgoKKnRoaXMqIG9wZXJhdG9yIGJlaGF2ZXMgZGlmZmVyZW50
bHkgdGhhbiBpbiBvdGhlciBsYW5ndWFnZXMgYW5kIGlzIGluIG1vc3QgY2Fz
ZXMgZGV0ZXJtaW5lZCBieSBob3cgYSBmdW5jdGlvbiBpcyBjYWxsZWQuIChb
UmVmOiBNRE5dKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVT
L2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL09wZXJhdG9ycy90aGlz
KSkuCgpUaGlzIG5vdGlvbiBpcyBoYXZpbmcgbWFueSBzdWJ0bGV0aWVzIGFu
ZCBiZWluZyBxdWl0ZSBoYXJkLCBJIGhpZ2hseSBzdWdnZXN0IHlvdSB0byBk
ZWVwIGRpdmUgaW4gdGhlIGV4dGVybmFsIHJlc291cmNlcyBiZWxvdy4gVGh1
cywgSSB3aWxsIHByb3ZpZGUgd2hhdCBJIHBlcnNvbmFsbHkgaGF2ZSBpbiBt
aW5kIHRvIGRldGVybWluZSB3aGF0ICp0aGlzKiBpcyBlcXVhbCB0by4gSSBo
YXZlIGxlYXJuZWQgdGhpcyB0aXAgZnJvbSBbdGhpcyBhcnRpY2xlIHdyaXR0
ZW4gYnkgWWVodWRhIEthdHpdKGh0dHA6Ly95ZWh1ZGFrYXR6LmNvbS8yMDEx
LzA4LzExL3VuZGVyc3RhbmRpbmctamF2YXNjcmlwdC1mdW5jdGlvbi1pbnZv
Y2F0aW9uLWFuZC10aGlzLykuCgpgYGBqcwpmdW5jdGlvbiBteUZ1bmMoKSB7
CiAgLi4uCn0KCi8vIEFmdGVyIGVhY2ggc3RhdGVtZW50LCB5b3UgZmluZCB0
aGUgdmFsdWUgb2YgKnRoaXMqIGluIG15RnVuYwoKbXlGdW5jLmNhbGwoIm15
U3RyaW5nIiwgImhlbGxvIikgLy8gIm15U3RyaW5nIiAtLSBmaXJzdCAuY2Fs
bCBwYXJhbWV0ZXIgdmFsdWUgaXMgaW5qZWN0ZWQgaW50byAqdGhpcyoKCi8v
IEluIG5vbi1zdHJpY3QtbW9kZQpteUZ1bmMoImhlbGxvIikgLy8gd2luZG93
IC0tIG15RnVuYygpIGlzIHN5bnRheCBzdWdhciBmb3IgbXlGdW5jLmNhbGwo
d2luZG93LCAiaGVsbG8iKQoKLy8gSW4gc3RyaWN0LW1vZGUKbXlGdW5jKCJo
ZWxsbyIpIC8vIHVuZGVmaW5lZCAtLSBteUZ1bmMoKSBpcyBzeW50YXggc3Vn
YXIgZm9yIG15RnVuYy5jYWxsKHVuZGVmaW5lZCwgImhlbGxvIikKYGBgCgpg
YGBqcwp2YXIgcGVyc29uID0gewogIG15RnVuYzogZnVuY3Rpb24oKSB7IC4u
LiB9Cn0KCnBlcnNvbi5teUZ1bmMuY2FsbChwZXJzb24sICJ0ZXN0IikgLy8g
cGVyc29uIE9iamVjdCAtLSBmaXJzdCBjYWxsIHBhcmFtZXRlciBpcyBpbmpl
Y3RlZCBpbnRvICp0aGlzKgpwZXJzb24ubXlGdW5jKCJ0ZXN0IikgLy8gcGVy
c29uIE9iamVjdCAtLSBwZXJzb24ubXlGdW5jKCkgaXMgc3ludGF4IHN1Z2Fy
IGZvciBwZXJzb24ubXlGdW5jLmNhbGwocGVyc29uLCAidGVzdCIpCgp2YXIg
bXlCb3VuZEZ1bmMgPSBwZXJzb24ubXlGdW5jLmJpbmQoImhlbGxvIikgLy8g
Q3JlYXRlcyBhIG5ldyBmdW5jdGlvbiBpbiB3aGljaCB3ZSBpbmplY3QgImhl
bGxvIiBpbiAqdGhpcyogdmFsdWUKcGVyc29uLm15RnVuYygidGVzdCIpIC8v
IHBlcnNvbiBPYmplY3QgLS0gVGhlIGJpbmQgbWV0aG9kIGhhcyBubyBlZmZl
Y3Qgb24gdGhlIG9yaWdpbmFsIG1ldGhvZApteUJvdW5kRnVuYygidGVzdCIp
IC8vICJoZWxsbyIgLS0gbXlCb3VuZEZ1bmMgaXMgcGVyc29uLm15RnVuYyB3
aXRoICJoZWxsbyIgYm91bmQgdG8gKnRoaXMqCmBgYAoKIyMjIyBFeHRlcm5h
bCByZXNvdXJjZXMKCi0gW1VuZGVyc3RhbmRpbmcgSmF2YVNjcmlwdCBGdW5j
dGlvbiBJbnZvY2F0aW9uIGFuZCAidGhpcyIgLSBZZWh1ZGEgS2F0el0oaHR0
cDovL3llaHVkYWthdHouY29tLzIwMTEvMDgvMTEvdW5kZXJzdGFuZGluZy1q
YXZhc2NyaXB0LWZ1bmN0aW9uLWludm9jYXRpb24tYW5kLXRoaXMvKQotIFtK
YXZhU2NyaXB0IHRoaXMgLSBNRE5dKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemls
bGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL09w
ZXJhdG9ycy90aGlzKQoKIyMjIENsYXNzCgpKYXZhU2NyaXB0IGlzIGEgW3By
b3RvdHlwZS1iYXNlZF0oaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kv
UHJvdG90eXBlLWJhc2VkX3Byb2dyYW1taW5nKSBsYW5ndWFnZSAod2hlcmVh
cyBKYXZhIGlzIFtjbGFzcy1iYXNlZF0oaHR0cHM6Ly9lbi53aWtpcGVkaWEu
b3JnL3dpa2kvQ2xhc3MtYmFzZWRfcHJvZ3JhbW1pbmcpIGxhbmd1YWdlLCBm
b3IgaW5zdGFuY2UpLiBFUzYgaGFzIGludHJvZHVjZWQgSmF2YVNjcmlwdCBj
bGFzc2VzIHdoaWNoIGFyZSBtZWFudCB0byBiZSBhIHN5bnRhY3RpYyBzdWdh
ciBmb3IgcHJvdG90eXBlLWJhc2VkIGluaGVyaXRhbmNlIGFuZCAqKm5vdCoq
IGEgbmV3IGNsYXNzLWJhc2VkIGluaGVyaXRhbmNlIG1vZGVsIChbcmVmXSho
dHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9K
YXZhU2NyaXB0L1JlZmVyZW5jZS9DbGFzc2VzKSkuCgpUaGUgd29yZCAqY2xh
c3MqIGlzIGluZGVlZCBlcnJvciBwcm9uZSBpZiB5b3UgYXJlIGZhbWlsaWFy
IHdpdGggY2xhc3NlcyBpbiBvdGhlciBsYW5ndWFnZXMuIElmIHlvdSBkbywg
YXZvaWQgYXNzdW1pbmcgaG93IEphdmFTY3JpcHQgY2xhc3NlcyB3b3JrIG9u
IHRoaXMgYmFzaXMgYW5kIGNvbnNpZGVyIGl0IGFuIGVudGlyZWx5IGRpZmZl
cmVudCBub3Rpb24uCgpTaW5jZSB0aGlzIGRvY3VtZW50IGlzIG5vdCBhbiBh
dHRlbXB0IHRvIHRlYWNoIHlvdSB0aGUgbGFuZ3VhZ2UgZnJvbSB0aGUgZ3Jv
dW5kIHVwLCBJIHdpbGwgYXNzdW1lIHlvdSBrbm93IHdoYXQgcHJvdG90eXBl
cyBhcmUgYW5kIGhvdyB0aGV5IGJlaGF2ZS4gSWYgeW91IGRvIG5vdCwgc2Vl
IHRoZSBleHRlcm5hbCByZXNvdXJjZXMgbGlzdGVkIGJlbG93IHRoZSBzYW1w
bGUgY29kZS4KCiMjIyMgU2FtcGxlcwoKQmVmb3JlIEVTNiwgcHJvdG90eXBl
IHN5bnRheDoKCmBgYGpzCnZhciBQZXJzb24gPSBmdW5jdGlvbihuYW1lLCBh
Z2UpIHsKICB0aGlzLm5hbWUgPSBuYW1lOwogIHRoaXMuYWdlID0gYWdlOwp9
ClBlcnNvbi5wcm90b3R5cGUuc3RyaW5nU2VudGVuY2UgPSBmdW5jdGlvbigp
IHsKICByZXR1cm4gIkhlbGxvLCBteSBuYW1lIGlzICIgKyB0aGlzLm5hbWUg
KyAiIGFuZCBJJ20gIiArIHRoaXMuYWdlOwp9CmBgYAoKV2l0aCBFUzYgY2xh
c3Mgc3ludGF4OgoKYGBganMKY2xhc3MgUGVyc29uIHsKICBjb25zdHJ1Y3Rv
cihuYW1lLCBhZ2UpIHsKICAgIHRoaXMubmFtZSA9IG5hbWU7CiAgICB0aGlz
LmFnZSA9IGFnZTsKICB9CgogIHN0cmluZ1NlbnRlbmNlKCkgewogICAgcmV0
dXJuIGBIZWxsbywgbXkgbmFtZSBpcyAke3RoaXMubmFtZX0gYW5kIEkgYW0g
JHt0aGlzLmFnZX1gOwogIH0KfQoKY29uc3QgbXlQZXJzb24gPSBuZXcgUGVy
c29uKCJNYW51IiwgMjMpOwpjb25zb2xlLmxvZyhteVBlcnNvbi5hZ2UpIC8v
IDIzCmNvbnNvbGUubG9nKG15UGVyc29uLnN0cmluZ1NlbnRlbmNlKCkpIC8v
ICJIZWxsbywgbXkgbmFtZSBpcyBNYW51IGFuZCBJJ20gMjMKYGBgCgojIyMj
IEV4dGVybmFsIHJlc291cmNlcwoKRm9yIHByb3RvdHlwZSB1bmRlcnN0YW5k
aW5nOgoKLSBbVW5kZXJzdGFuZGluZyBQcm90b3R5cGVzIGluIEpTIC0gWWVo
dWRhIEthdHpdKGh0dHA6Ly95ZWh1ZGFrYXR6LmNvbS8yMDExLzA4LzEyL3Vu
ZGVyc3RhbmRpbmctcHJvdG90eXBlcy1pbi1qYXZhc2NyaXB0LykKLSBbQSBw
bGFpbiBFbmdsaXNoIGd1aWRlIHRvIEpTIHByb3RvdHlwZXMgLSBTZWJhc3Rp
YW4gUG9ydG9dKGh0dHA6Ly9zcG9ydG8uZ2l0aHViLmlvL2Jsb2cvMjAxMy8w
Mi8yMi9hLXBsYWluLWVuZ2xpc2gtZ3VpZGUtdG8tamF2YXNjcmlwdC1wcm90
b3R5cGVzLykKLSBbSW5oZXJpdGFuY2UgYW5kIHRoZSBwcm90b3R5cGUgY2hh
aW4gLSBNRE5dKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVT
L2RvY3MvV2ViL0phdmFTY3JpcHQvSW5oZXJpdGFuY2VfYW5kX3RoZV9wcm90
b3R5cGVfY2hhaW4pCgpGb3IgY2xhc3NlcyB1bmRlcnN0YW5kaW5nOgoKLSBb
RVM2IENsYXNzZXMgaW4gRGVwdGggLSBOaWNvbGFzIEJldmFjcXVhXShodHRw
czovL3Bvbnlmb28uY29tL2FydGljbGVzL2VzNi1jbGFzc2VzLWluLWRlcHRo
KQotIFtFUzYgRmVhdHVyZXMgLSBDbGFzc2VzXShodHRwOi8vZXM2LWZlYXR1
cmVzLm9yZy8jQ2xhc3NEZWZpbml0aW9uKQotIFtKYXZhU2NyaXB0IENsYXNz
ZXMgLSBNRE5dKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVT
L2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0NsYXNzZXMpCgojIyMg
YEV4dGVuZHNgIGFuZCBgc3VwZXJgIGtleXdvcmRzCgpUaGUgYGV4dGVuZHNg
IGtleXdvcmQgaXMgdXNlZCBpbiBjbGFzcyBkZWNsYXJhdGlvbnMgb3IgY2xh
c3MgZXhwcmVzc2lvbnMgdG8gY3JlYXRlIGEgY2xhc3Mgd2hpY2ggaXMgYSBj
aGlsZCBvZiBhbm90aGVyIGNsYXNzIChbUmVmOiBNRE5dKGh0dHBzOi8vZGV2
ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQv
UmVmZXJlbmNlL0NsYXNzZXMvZXh0ZW5kcykpLiBUaGUgc3ViY2xhc3MgaW5o
ZXJpdHMgYWxsIHRoZSBwcm9wZXJ0aWVzIG9mIHRoZSBzdXBlcmNsYXNzIGFu
ZCBhZGRpdGlvbmFsbHkgY2FuIGFkZCBuZXcgcHJvcGVydGllcyBvciBtb2Rp
ZnkgdGhlIGluaGVyaXRlZCBvbmVzLgoKVGhlIGBzdXBlcmAga2V5d29yZCBp
cyB1c2VkIHRvIGNhbGwgZnVuY3Rpb25zIG9uIGFuIG9iamVjdCdzIHBhcmVu
dCwgaW5jbHVkaW5nIGl0cyBjb25zdHJ1Y3Rvci4KCi0gYHN1cGVyYCBrZXl3
b3JkIG11c3QgYmUgdXNlZCBiZWZvcmUgdGhlIGB0aGlzYCBrZXl3b3JkIGlz
IHVzZWQgaW4gY29uc3RydWN0b3IKLSBJbnZva2luZyBgc3VwZXIoKWAgY2Fs
bHMgdGhlIHBhcmVudCBjbGFzcyBjb25zdHJ1Y3Rvci4gSWYgeW91IHdhbnQg
dG8gcGFzcyBzb21lIGFyZ3VtZW50cyBpbiBhIGNsYXNzJ3MgY29uc3RydWN0
b3IgdG8gaXRzIHBhcmVudCdzIGNvbnN0cnVjdG9yLCB5b3UgY2FsbCBpdCB3
aXRoIGBzdXBlcihhcmd1bWVudHMpYC4KLSBJZiB0aGUgcGFyZW50IGNsYXNz
IGhhdmUgYSBtZXRob2QgKGV2ZW4gc3RhdGljKSBjYWxsZWQgYFhgLCB5b3Ug
Y2FuIHVzZSBgc3VwZXIuWCgpYCB0byBjYWxsIGl0IGluIGEgY2hpbGQgY2xh
c3MuCgojIyMjIFNhbXBsZSBDb2RlCgpgYGBqcwpjbGFzcyBQb2x5Z29uIHsK
ICBjb25zdHJ1Y3RvcihoZWlnaHQsIHdpZHRoKSB7CiAgICB0aGlzLm5hbWUg
PSAnUG9seWdvbic7CiAgICB0aGlzLmhlaWdodCA9IGhlaWdodDsKICAgIHRo
aXMud2lkdGggPSB3aWR0aDsKICB9CgogIGdldEhlbGxvUGhyYXNlKCkgewog
ICAgcmV0dXJuIGBIaSwgSSBhbSBhICR7dGhpcy5uYW1lfWA7CiAgfQp9Cgpj
bGFzcyBTcXVhcmUgZXh0ZW5kcyBQb2x5Z29uIHsKICBjb25zdHJ1Y3Rvcihs
ZW5ndGgpIHsKICAgIC8vIEhlcmUsIGl0IGNhbGxzIHRoZSBwYXJlbnQgY2xh
c3MnIGNvbnN0cnVjdG9yIHdpdGggbGVuZ3RocwogICAgLy8gcHJvdmlkZWQg
Zm9yIHRoZSBQb2x5Z29uJ3Mgd2lkdGggYW5kIGhlaWdodAogICAgc3VwZXIo
bGVuZ3RoLCBsZW5ndGgpOwogICAgLy8gTm90ZTogSW4gZGVyaXZlZCBjbGFz
c2VzLCBzdXBlcigpIG11c3QgYmUgY2FsbGVkIGJlZm9yZSB5b3UKICAgIC8v
IGNhbiB1c2UgJ3RoaXMnLiBMZWF2aW5nIHRoaXMgb3V0IHdpbGwgY2F1c2Ug
YSByZWZlcmVuY2UgZXJyb3IuCiAgICB0aGlzLm5hbWUgPSAnU3F1YXJlJzsK
ICAgIHRoaXMubGVuZ3RoID0gbGVuZ3RoOwogIH0KCiAgZ2V0Q3VzdG9tSGVs
bG9QaHJhc2UoKSB7CiAgICBjb25zdCBwb2x5Z29uUGhyYXNlID0gc3VwZXIu
Z2V0SGVsbG9QaHJhc2UoKTsgLy8gYWNjZXNzaW5nIHBhcmVudCBtZXRob2Qg
d2l0aCBzdXBlci5YKCkgc3ludGF4CiAgICByZXR1cm4gYCR7cG9seWdvblBo
cmFzZX0gd2l0aCBhIGxlbmd0aCBvZiAke3RoaXMubGVuZ3RofWA7CiAgfQoK
ICBnZXQgYXJlYSgpIHsKICAgIHJldHVybiB0aGlzLmhlaWdodCAqIHRoaXMu
d2lkdGg7CiAgfQp9Cgpjb25zdCBteVNxdWFyZSA9IG5ldyBTcXVhcmUoMTAp
Owpjb25zb2xlLmxvZyhteVNxdWFyZS5hcmVhKSAvLyAxMDAKY29uc29sZS5s
b2cobXlTcXVhcmUuZ2V0SGVsbG9QaHJhc2UoKSkgLy8gJ0hpLCBJIGFtIGEg
U3F1YXJlJyAtLSBTcXVhcmUgaW5oZXJpdHMgZnJvbSBQb2x5Z29uIGFuZCBo
YXMgYWNjZXNzIHRvIGl0cyBtZXRob2RzCmNvbnNvbGUubG9nKG15U3F1YXJl
LmdldEN1c3RvbUhlbGxvUGhyYXNlKCkpIC8vICdIaSwgSSBhbSBhIFNxdWFy
ZSB3aXRoIGEgbGVuZ3RoIG9mIDEwJwpgYGAKCioqTm90ZSA6KiogSWYgd2Ug
aGFkIHRyaWVkIHRvIHVzZSBgdGhpc2AgYmVmb3JlIGNhbGxpbmcgYHN1cGVy
KClgIGluIFNxdWFyZSBjbGFzcywgYSBSZWZlcmVuY2VFcnJvciB3b3VsZCBo
YXZlIGJlZW4gcmFpc2VkOgoKYGBganMKY2xhc3MgU3F1YXJlIGV4dGVuZHMg
UG9seWdvbiB7CiAgY29uc3RydWN0b3IobGVuZ3RoKSB7CiAgICB0aGlzLmhl
aWdodDsgLy8gUmVmZXJlbmNlRXJyb3IsIHN1cGVyIG5lZWRzIHRvIGJlIGNh
bGxlZCBmaXJzdCEKCiAgICAvLyBIZXJlLCBpdCBjYWxscyB0aGUgcGFyZW50
IGNsYXNzJyBjb25zdHJ1Y3RvciB3aXRoIGxlbmd0aHMKICAgIC8vIHByb3Zp
ZGVkIGZvciB0aGUgUG9seWdvbidzIHdpZHRoIGFuZCBoZWlnaHQKICAgIHN1
cGVyKGxlbmd0aCwgbGVuZ3RoKTsKCiAgICAvLyBOb3RlOiBJbiBkZXJpdmVk
IGNsYXNzZXMsIHN1cGVyKCkgbXVzdCBiZSBjYWxsZWQgYmVmb3JlIHlvdQog
ICAgLy8gY2FuIHVzZSAndGhpcycuIExlYXZpbmcgdGhpcyBvdXQgd2lsbCBj
YXVzZSBhIHJlZmVyZW5jZSBlcnJvci4KICAgIHRoaXMubmFtZSA9ICdTcXVh
cmUnOwogIH0KfQpgYGAKCiMjIyMgRXh0ZXJuYWwgUmVzb3VyY2VzCgotIFtF
eHRlbmRzIC0gTUROXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9l
bi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9DbGFzc2VzL2V4
dGVuZHMpCi0gW1N1cGVyIG9wZXJhdG9yIC0gTUROXShodHRwczovL2RldmVs
b3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1Jl
ZmVyZW5jZS9PcGVyYXRvcnMvc3VwZXIpCi0gW0luaGVyaXRhbmNlIC0gTURO
XShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL0xl
YXJuL0phdmFTY3JpcHQvT2JqZWN0cy9Jbmhlcml0YW5jZSkKCiMjIyBBc3lu
YyBBd2FpdAoKSW4gYWRkaXRpb24gdG8gW1Byb21pc2VzXSgjcHJvbWlzZXMp
LCB0aGVyZSBpcyBhIG5ldyBzeW50YXggeW91IG1pZ2h0IGVuY291bnRlciB0
byBoYW5kbGUgYXN5bmNocm9ub3VzIGNvZGUgbmFtZWQgKmFzeW5jIC8gYXdh
aXQqLgoKVGhlIHB1cnBvc2Ugb2YgYXN5bmMvYXdhaXQgZnVuY3Rpb25zIGlz
IHRvIHNpbXBsaWZ5IHRoZSBiZWhhdmlvciBvZiB1c2luZyBwcm9taXNlcyBz
eW5jaHJvbm91c2x5IGFuZCB0byBwZXJmb3JtIHNvbWUgYmVoYXZpb3Igb24g
YSBncm91cCBvZiBQcm9taXNlcy4gSnVzdCBhcyBQcm9taXNlcyBhcmUgc2lt
aWxhciB0byBzdHJ1Y3R1cmVkIGNhbGxiYWNrcywgYXN5bmMvYXdhaXQgaXMg
c2ltaWxhciB0byBjb21iaW5pbmcgZ2VuZXJhdG9ycyBhbmQgcHJvbWlzZXMu
IEFzeW5jIGZ1bmN0aW9ucyAqYWx3YXlzKiByZXR1cm4gYSBQcm9taXNlLiAo
W1JlZjogTUROXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1V
Uy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9TdGF0ZW1lbnRzL2Fz
eW5jX2Z1bmN0aW9uKSkKCj4gKipOb3RlIDoqKiBZb3UgbXVzdCB1bmRlcnN0
YW5kIHdoYXQgcHJvbWlzZXMgYXJlIGFuZCBob3cgdGhleSB3b3JrIGJlZm9y
ZSB0cnlpbmcgdG8gdW5kZXJzdGFuZCBhc3luYyAvIGF3YWl0IHNpbmNlIHRo
ZXkgcmVseSBvbiBpdC4KCj4gKipOb3RlIDI6KiogWyphd2FpdCogbXVzdCBi
ZSB1c2VkIGluIGFuICphc3luYyogZnVuY3Rpb25dKGh0dHBzOi8vaGFja2Vy
bm9vbi5jb20vNi1yZWFzb25zLXdoeS1qYXZhc2NyaXB0cy1hc3luYy1hd2Fp
dC1ibG93cy1wcm9taXNlcy1hd2F5LXR1dG9yaWFsLWM3ZWMxMDUxOGRkOSNm
M2YwKSwgd2hpY2ggbWVhbnMgdGhhdCB5b3UgY2FuJ3QgdXNlIGF3YWl0IGlu
IHRoZSB0b3AgbGV2ZWwgb2Ygb3VyIGNvZGUgc2luY2UgdGhhdCBpcyBub3Qg
aW5zaWRlIGFuIGFzeW5jIGZ1bmN0aW9uLgoKIyMjIyBTYW1wbGUgY29kZQoK
YGBganMKYXN5bmMgZnVuY3Rpb24gZ2V0R2l0aHViVXNlcih1c2VybmFtZSkg
eyAvLyBhc3luYyBrZXl3b3JkIGFsbG93cyB1c2FnZSBvZiBhd2FpdCBpbiB0
aGUgZnVuY3Rpb24gYW5kIG1lYW5zIGZ1bmN0aW9uIHJldHVybnMgYSBwcm9t
aXNlCiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9h
cGkuZ2l0aHViLmNvbS91c2Vycy8ke3VzZXJuYW1lfWApOyAvLyBFeGVjdXRp
b24gaXMgcGF1c2VkIGhlcmUgdW50aWwgdGhlIFByb21pc2UgcmV0dXJuZWQg
YnkgZmV0Y2ggaXMgcmVzb2x2ZWQKICByZXR1cm4gcmVzcG9uc2UuanNvbigp
Owp9CgpnZXRHaXRodWJVc2VyKCdtYmVhdWRydScpCiAgLnRoZW4odXNlciA9
PiBjb25zb2xlLmxvZyh1c2VyKSkgLy8gbG9nZ2luZyB1c2VyIHJlc3BvbnNl
IC0gY2Fubm90IHVzZSBhd2FpdCBzeW50YXggc2luY2UgdGhpcyBjb2RlIGlz
bid0IGluIGFzeW5jIGZ1bmN0aW9uCiAgLmNhdGNoKGVyciA9PiBjb25zb2xl
LmxvZyhlcnIpKTsgLy8gaWYgYW4gZXJyb3IgaXMgdGhyb3duIGluIG91ciBh
c3luYyBmdW5jdGlvbiwgd2Ugd2lsbCBjYXRjaCBpdCBoZXJlCmBgYAoKIyMj
IyBFeHBsYW5hdGlvbiB3aXRoIHNhbXBsZSBjb2RlCgoqQXN5bmMgLyBBd2Fp
dCogaXMgYnVpbHQgb24gcHJvbWlzZXMgYnV0IHRoZXkgYWxsb3cgYSBtb3Jl
IGltcGVyYXRpdmUgc3R5bGUgb2YgY29kZS4KClRoZSAqYXN5bmMqIG9wZXJh
dG9yIG1hcmtzIGEgZnVuY3Rpb24gYXMgYXN5bmNocm9ub3VzIGFuZCB3aWxs
IGFsd2F5cyByZXR1cm4gYSAqUHJvbWlzZSouIFlvdSBjYW4gdXNlIHRoZSAq
YXdhaXQqIG9wZXJhdG9yIGluIGFuICphc3luYyogZnVuY3Rpb24gdG8gcGF1
c2UgZXhlY3V0aW9uIG9uIHRoYXQgbGluZSB1bnRpbCB0aGUgcmV0dXJuZWQg
UHJvbWlzZSBmcm9tIHRoZSBleHByZXNzaW9uIGVpdGhlciByZXNvbHZlcyBv
ciByZWplY3RzLgoKYGBganMKYXN5bmMgZnVuY3Rpb24gbXlGdW5jKCkgewog
IC8vIHdlIGNhbiB1c2UgYXdhaXQgb3BlcmF0b3IgYmVjYXVzZSB0aGlzIGZ1
bmN0aW9uIGlzIGFzeW5jCiAgcmV0dXJuICJoZWxsbyB3b3JsZCI7Cn0KCm15
RnVuYygpLnRoZW4obXNnID0+IGNvbnNvbGUubG9nKG1zZykpIC8vICJoZWxs
byB3b3JsZCIgLS0gbXlGdW5jJ3MgcmV0dXJuIHZhbHVlIGlzIHR1cm5lZCBp
bnRvIGEgcHJvbWlzZSBiZWNhdXNlIG9mIGFzeW5jIG9wZXJhdG9yCmBgYAoK
V2hlbiB0aGUgKnJldHVybiogc3RhdGVtZW50IG9mIGFuIGFzeW5jIGZ1bmN0
aW9uIGlzIHJlYWNoZWQsIHRoZSBQcm9taXNlIGlzIGZ1bGZpbGxlZCB3aXRo
IHRoZSB2YWx1ZSByZXR1cm5lZC4gSWYgYW4gZXJyb3IgaXMgdGhyb3duIGlu
c2lkZSBhbiBhc3luYyBmdW5jdGlvbiwgdGhlIFByb21pc2Ugc3RhdGUgd2ls
bCB0dXJuIHRvICpyZWplY3RlZCouIElmIG5vIHZhbHVlIGlzIHJldHVybmVk
IGZyb20gYW4gYXN5bmMgZnVuY3Rpb24sIGEgUHJvbWlzZSBpcyBzdGlsbCBy
ZXR1cm5lZCBhbmQgcmVzb2x2ZXMgd2l0aCBubyB2YWx1ZSB3aGVuIGV4ZWN1
dGlvbiBvZiB0aGUgYXN5bmMgZnVuY3Rpb24gaXMgY29tcGxldGUuCgoqYXdh
aXQqIG9wZXJhdG9yIGlzIHVzZWQgdG8gd2FpdCBmb3IgYSAqUHJvbWlzZSog
dG8gYmUgZnVsZmlsbGVkIGFuZCBjYW4gb25seSBiZSB1c2VkIGluc2lkZSBh
biAqYXN5bmMqIGZ1bmN0aW9uIGJvZHkuIFdoZW4gZW5jb3VudGVyZWQsIHRo
ZSBjb2RlIGV4ZWN1dGlvbiBpcyBwYXVzZWQgdW50aWwgdGhlIHByb21pc2Ug
aXMgZnVsZmlsbGVkLgoKPiAqKk5vdGUgOioqICpmZXRjaCogaXMgYSBmdW5j
dGlvbiB0aGF0IHJldHVybnMgYSBQcm9taXNlIHRoYXQgYWxsb3dzIHRvIGRv
IGFuIEFKQVggcmVxdWVzdAoKTGV0J3Mgc2VlIGhvdyB3ZSBjb3VsZCBmZXRj
aCBhIGdpdGh1YiB1c2VyIHdpdGggcHJvbWlzZXMgZmlyc3Q6CgpgYGBqcwpm
dW5jdGlvbiBnZXRHaXRodWJVc2VyKHVzZXJuYW1lKSB7CiAgcmV0dXJuIGZl
dGNoKGBodHRwczovL2FwaS5naXRodWIuY29tL3VzZXJzLyR7dXNlcm5hbWV9
YCkudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5qc29uKCkpOwp9CgpnZXRH
aXRodWJVc2VyKCdtYmVhdWRydScpCiAgLnRoZW4odXNlciA9PiBjb25zb2xl
LmxvZyh1c2VyKSkKICAuY2F0Y2goZXJyID0+IGNvbnNvbGUubG9nKGVycikp
OwpgYGAKCkhlcmUncyB0aGUgKmFzeW5jIC8gYXdhaXQqIGVxdWl2YWxlbnQ6
CgpgYGBqcwphc3luYyBmdW5jdGlvbiBnZXRHaXRodWJVc2VyKHVzZXJuYW1l
KSB7IC8vIHByb21pc2UgKyBhd2FpdCBrZXl3b3JkIHVzYWdlIGFsbG93ZWQK
ICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGBodHRwczovL2FwaS5n
aXRodWIuY29tL3VzZXJzLyR7dXNlcm5hbWV9YCk7IC8vIEV4ZWN1dGlvbiBz
dG9wcyBoZXJlIHVudGlsIGZldGNoIHByb21pc2UgaXMgZnVsZmlsbGVkCiAg
cmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKfQoKZ2V0R2l0aHViVXNlcignbWJl
YXVkcnUnKQogIC50aGVuKHVzZXIgPT4gY29uc29sZS5sb2codXNlcikpCiAg
LmNhdGNoKGVyciA9PiBjb25zb2xlLmxvZyhlcnIpKTsKYGBgCgoqYXN5bmMg
LyBhd2FpdCogc3ludGF4IGlzIHBhcnRpY3VsYXJseSBjb252ZW5pZW50IHdo
ZW4geW91IG5lZWQgdG8gY2hhaW4gcHJvbWlzZXMgdGhhdCBhcmUgaW50ZXJk
ZXBlbmRlbnQuCgpGb3IgaW5zdGFuY2UsIGlmIHlvdSBuZWVkIHRvIGdldCBh
IHRva2VuIGluIG9yZGVyIHRvIGJlIGFibGUgdG8gZmV0Y2ggYSBibG9nIHBv
c3Qgb24gYSBkYXRhYmFzZSBhbmQgdGhlbiB0aGUgYXV0aG9yIGluZm9ybWF0
aW9uczoKCj4gKipOb3RlIDoqKiAqYXdhaXQqIGV4cHJlc3Npb25zIG5lZWRz
IHRvIGJlIHdyYXBwZWQgaW4gcGFyZW50aGVzZXMgdG8gY2FsbCBpdHMgcmVz
b2x2ZWQgdmFsdWUncyBtZXRob2RzIGFuZCBwcm9wZXJ0aWVzIG9uIHRoZSBz
YW1lIGxpbmUuCgpgYGBqcwphc3luYyBmdW5jdGlvbiBmZXRjaFBvc3RCeUlk
KHBvc3RJZCkgewogIGNvbnN0IHRva2VuID0gKGF3YWl0IGZldGNoKCd0b2tl
bl91cmwnKSkuanNvbigpLnRva2VuOwogIGNvbnN0IHBvc3QgPSAoYXdhaXQg
ZmV0Y2goYC9wb3N0cy8ke3Bvc3RJZH0/dG9rZW49JHt0b2tlbn1gKSkuanNv
bigpOwogIGNvbnN0IGF1dGhvciA9IChhd2FpdCBmZXRjaChgL3VzZXJzLyR7
cG9zdC5hdXRob3JJZH1gKSkuanNvbigpOwoKICBwb3N0LmF1dGhvciA9IGF1
dGhvcjsKICByZXR1cm4gcG9zdDsKfQoKZmV0Y2hQb3N0QnlJZCgnZ3pJcnpl
bzY0JykKICAudGhlbihwb3N0ID0+IGNvbnNvbGUubG9nKHBvc3QpKQogIC5j
YXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSk7CmBgYAoKIyMjIyMgRXJy
b3IgaGFuZGxpbmcKClVubGVzcyB3ZSBhZGQgKnRyeSAvIGNhdGNoKiBibG9j
a3MgYXJvdW5kICphd2FpdCogZXhwcmVzc2lvbnMsIHVuY2F1Z2h0IGV4Y2Vw
dGlvbnMg4oCTIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciB0aGV5IHdlcmUgdGhy
b3duIGluIHRoZSBib2R5IG9mIHlvdXIgKmFzeW5jKiBmdW5jdGlvbiBvciB3
aGlsZSBpdOKAmXMgc3VzcGVuZGVkIGR1cmluZyAqYXdhaXQqIOKAkyB3aWxs
IHJlamVjdCB0aGUgcHJvbWlzZSByZXR1cm5lZCBieSB0aGUgKmFzeW5jKiBm
dW5jdGlvbi4gVXNpbmcgdGhlIGB0aHJvd2Agc3RhdGVtZW50IGluIGFuIGFz
eW5jIGZ1bmN0aW9uIGlzIHRoZSBzYW1lIGFzIHJldHVybmluZyBhIFByb21p
c2UgdGhhdCByZWplY3RzLiBbKFJlZjogUG9ueUZvbyldKGh0dHBzOi8vcG9u
eWZvby5jb20vYXJ0aWNsZXMvdW5kZXJzdGFuZGluZy1qYXZhc2NyaXB0LWFz
eW5jLWF3YWl0I2Vycm9yLWhhbmRsaW5nKS4KCj4gKipOb3RlIDoqKiBQcm9t
aXNlcyBiZWhhdmUgdGhlIHNhbWUhCgpXaXRoIHByb21pc2VzLCBoZXJlIGlz
IGhvdyB5b3Ugd291bGQgaGFuZGxlIHRoZSBlcnJvciBjaGFpbjoKCmBgYGpz
CmZ1bmN0aW9uIGdldFVzZXIoKSB7IC8vIFRoaXMgcHJvbWlzZSB3aWxsIGJl
IHJlamVjdGVkIQogIHJldHVybiBuZXcgUHJvbWlzZSgocmVzLCByZWopID0+
IHJlaigiVXNlciBub3QgZm91bmQgISIpKTsKfQoKZnVuY3Rpb24gZ2V0QXZh
dGFyQnlVc2VybmFtZSh1c2VySWQpIHsKICByZXR1cm4gZ2V0VXNlcih1c2Vy
SWQpLnRoZW4odXNlciA9PiB1c2VyLmF2YXRhcik7Cn0KCmZ1bmN0aW9uIGdl
dFVzZXJBdmF0YXIodXNlcm5hbWUpIHsKICByZXR1cm4gZ2V0QXZhdGFyQnlV
c2VybmFtZSh1c2VybmFtZSkudGhlbihhdmF0YXIgPT4gKHsgdXNlcm5hbWUs
IGF2YXRhciB9KSk7Cn0KCmdldFVzZXJBdmF0YXIoJ21iZWF1ZHJ1JykKICAu
dGhlbihyZXMgPT4gY29uc29sZS5sb2cocmVzKSkKICAuY2F0Y2goZXJyID0+
IGNvbnNvbGUubG9nKGVycikpOyAvLyAiVXNlciBub3QgZm91bmQgISIKYGBg
CgpUaGUgZXF1aXZhbGVudCB3aXRoICphc3luYyAvIGF3YWl0KjoKCmBgYGpz
CmFzeW5jIGZ1bmN0aW9uIGdldFVzZXIoKSB7IC8vIFRoZSByZXR1cm5lZCBw
cm9taXNlIHdpbGwgYmUgcmVqZWN0ZWQhCiAgdGhyb3cgIlVzZXIgbm90IGZv
dW5kICEiOwp9Cgphc3luYyBmdW5jdGlvbiBnZXRBdmF0YXJCeVVzZXJuYW1l
KHVzZXJJZCkgPT4gewogIGNvbnN0IHVzZXIgPSBhd2FpdCBnZXRVc2VyKHVz
ZXJJZCk7CiAgcmV0dXJuIHVzZXIuYXZhdGFyOwp9Cgphc3luYyBmdW5jdGlv
biBnZXRVc2VyQXZhdGFyKHVzZXJuYW1lKSB7CiAgdmFyIGF2YXRhciA9IGF3
YWl0IGdldEF2YXRhckJ5VXNlcm5hbWUodXNlcm5hbWUpOwogIHJldHVybiB7
IHVzZXJuYW1lLCBhdmF0YXIgfTsKfQoKZ2V0VXNlckF2YXRhcignbWJlYXVk
cnUnKQogIC50aGVuKHJlcyA9PiBjb25zb2xlLmxvZyhyZXMpKQogIC5jYXRj
aChlcnIgPT4gY29uc29sZS5sb2coZXJyKSk7IC8vICJVc2VyIG5vdCBmb3Vu
ZCAhIgpgYGAKCiMjIyMgRXh0ZXJuYWwgcmVzb3VyY2VzCgotIFtBc3luYy9B
d2FpdCAtIEphdmFTY3JpcHQuSW5mb10oaHR0cHM6Ly9qYXZhc2NyaXB0Lmlu
Zm8vYXN5bmMtYXdhaXQpCi0gW0VTNyBBc3luYy9Bd2FpdF0oaHR0cDovL3Jv
c3Nib3VjaGVyLmNvbS9hd2FpdC8jLykKLSBbNiBSZWFzb25zIFdoeSBKYXZh
U2NyaXB04oCZcyBBc3luYy9Bd2FpdCBCbG93cyBQcm9taXNlcyBBd2F5XSho
dHRwczovL2hhY2tlcm5vb24uY29tLzYtcmVhc29ucy13aHktamF2YXNjcmlw
dHMtYXN5bmMtYXdhaXQtYmxvd3MtcHJvbWlzZXMtYXdheS10dXRvcmlhbC1j
N2VjMTA1MThkZDkpCi0gW0phdmFTY3JpcHQgYXdhaXRzXShodHRwczovL2Rl
di50by9rYXlpcy9qYXZhc2NyaXB0LWF3YWl0cykKLSBbVXNpbmcgQXN5bmMg
QXdhaXQgaW4gRXhwcmVzcyB3aXRoIE5vZGUgOF0oaHR0cHM6Ly9tZWRpdW0u
Y29tL0BBYmF6aGVub3YvdXNpbmctYXN5bmMtYXdhaXQtaW4tZXhwcmVzcy13
aXRoLW5vZGUtOC1iOGFmODcyYzAwMTYpCi0gW0FzeW5jIEZ1bmN0aW9uXSho
dHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9K
YXZhU2NyaXB0L1JlZmVyZW5jZS9TdGF0ZW1lbnRzL2FzeW5jX2Z1bmN0aW9u
KQotIFtBd2FpdF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4t
VVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvT3BlcmF0b3JzL2F3
YWl0KQotIFtVc2luZyBhc3luYyAvIGF3YWl0IGluIGV4cHJlc3Mgd2l0aCBu
b2RlIDhdKGh0dHBzOi8vbWVkaXVtLmNvbS9AQWJhemhlbm92L3VzaW5nLWFz
eW5jLWF3YWl0LWluLWV4cHJlc3Mtd2l0aC1ub2RlLTgtYjhhZjg3MmMwMDE2
KQoKIyMjIFRydXRoeSAvIEZhbHN5CgpJbiBKYXZhU2NyaXB0LCBhIHRydXRo
eSBvciBmYWxzeSB2YWx1ZSBpcyBhIHZhbHVlIHRoYXQgaXMgYmVpbmcgY2Fz
dGVkIGludG8gYSBib29sZWFuIHdoZW4gZXZhbHVhdGVkIGluIGEgYm9vbGVh
biBjb250ZXh0LiBBbiBleGFtcGxlIG9mIGJvb2xlYW4gY29udGV4dCB3b3Vs
ZCBiZSB0aGUgZXZhbHVhdGlvbiBvZiBhbiBgYGBpZmBgYCBjb25kaXRpb246
CgpFdmVyeSB2YWx1ZSB3aWxsIGJlIGNhc3RlZCB0byBgYGB0cnVlYGBgIHVu
bGVzcyB0aGV5IGFyZSBlcXVhbCB0bzoKCi0gYGBgZmFsc2VgYGAKLSBgYGAw
YGBgCi0gYGBgIiJgYGAgKGVtcHR5IHN0cmluZykKLSBgYGBudWxsYGBgCi0g
YGBgdW5kZWZpbmVkYGBgCi0gYGBgTmFOYGBgCgpIZXJlIGFyZSBleGFtcGxl
cyBvZiAqYm9vbGVhbiBjb250ZXh0KjoKCi0gYGBgaWZgYGAgY29uZGl0aW9u
IGV2YWx1YXRpb24KCmBgYGpzCmlmIChteVZhcikge30KYGBgCgpgYGBteVZh
cmBgYCBjYW4gYmUgYW55IFtmaXJzdC1jbGFzcyBjaXRpemVuXShodHRwczov
L2VuLndpa2lwZWRpYS5vcmcvd2lraS9GaXJzdC1jbGFzc19jaXRpemVuKSAo
dmFyaWFibGUsIGZ1bmN0aW9uLCBib29sZWFuKSBidXQgaXQgd2lsbCBiZSBj
YXN0ZWQgaW50byBhIGJvb2xlYW4gYmVjYXVzZSBpdCdzIGV2YWx1YXRlZCBp
biBhIGJvb2xlYW4gY29udGV4dC4KCi0gQWZ0ZXIgbG9naWNhbCAqKk5PVCoq
IGBgYCFgYGAgb3BlcmF0b3IKClRoaXMgb3BlcmF0b3IgcmV0dXJucyBmYWxz
ZSBpZiBpdHMgc2luZ2xlIG9wZXJhbmQgY2FuIGJlIGNvbnZlcnRlZCB0byB0
cnVlOyBvdGhlcndpc2UsIHJldHVybnMgdHJ1ZS4KCmBgYGpzCiEwIC8vIHRy
dWUgLS0gMCBpcyBmYWxzeSBzbyBpdCByZXR1cm5zIHRydWUKISEwIC8vIGZh
bHNlIC0tIDAgaXMgZmFsc3kgc28gITAgcmV0dXJucyB0cnVlIHNvICEoITAp
IHJldHVybnMgZmFsc2UKISEiIiAvLyBmYWxzZSAtLSBlbXB0eSBzdHJpbmcg
aXMgZmFsc3kgc28gTk9UIChOT1QgZmFsc2UpIGVxdWFscyBmYWxzZQpgYGAK
Ci0gV2l0aCB0aGUgKkJvb2xlYW4qIG9iamVjdCBjb25zdHJ1Y3RvcgoKYGBg
anMKbmV3IEJvb2xlYW4oMCkgLy8gZmFsc2UKbmV3IEJvb2xlYW4oMSkgLy8g
dHJ1ZQpgYGAKCi0gSW4gYSB0ZXJuYXJ5IGV2YWx1YXRpb24KCmBgYGpzCm15
VmFyID8gInRydXRoeSIgOiAiZmFsc3kiCmBgYAoKbXlWYXIgaXMgZXZhbHVh
dGVkIGluIGEgYm9vbGVhbiBjb250ZXh0LgoKQmUgY2FyZWZ1bCB3aGVuIGNv
bXBhcmluZyAyIHZhbHVlcy4gVGhlIG9iamVjdCB2YWx1ZXMgKHRoYXQgc2hv
dWxkIGJlIGNhc3QgdG8gdHJ1ZSkgaXMgKipub3QqKiBiZWluZyBjYXN0ZWQg
dG8gQm9vbGVhbiBidXQgaXQgZm9yY2VkIHRvIGNvbnZlcnQgaW50byBhIHBy
aW1pdGl2ZSB2YWx1ZSBvbmUgdXNpbmcgW1RvUHJpbWl0aXZlcyBzcGVjaWZp
Y2F0aW9uXShodHRwOi8vamF2YXNjcmlwdC5pbmZvL29iamVjdC10b3ByaW1p
dGl2ZSkuIEludGVybmFsbHksIHdoZW4gYW4gb2JqZWN0IGlzIGNvbXBhcmVk
IHRvIEJvb2xlYW4gdmFsdWUgbGlrZSBgW10gPT0gdHJ1ZWAsIGl0IGRvZXMg
YFtdLnRvU3RyaW5nKCkgPT0gdHJ1ZWAgc28uLi4KCmBgYGpzCmxldCBhID0g
W10gPT0gdHJ1ZSAvLyBhIGlzIGZhbHNlIHNpbmNlIFtdLnRvU3RyaW5nKCkg
Z2l2ZSAiIiBiYWNrLgpsZXQgYiA9IFsxXSA9PSB0cnVlIC8vIGIgaXMgdHJ1
ZSBzaW5jZSBbMV0udG9TdHJpbmcoKSBnaXZlICIxIiBiYWNrLgpsZXQgYyA9
IFsyXSA9PSB0cnVlIC8vIGMgaXMgZmFsc2Ugc2luY2UgWzJdLnRvU3RyaW5n
KCkgZ2l2ZSAiMiIgYmFjay4KYGBgCgojIyMjIEV4dGVybmFsIHJlc291cmNl
cwoKLSBbVHJ1dGh5IChNRE4pXShodHRwczovL2RldmVsb3Blci5tb3ppbGxh
Lm9yZy9lbi1VUy9kb2NzL0dsb3NzYXJ5L1RydXRoeSkKLSBbRmFsc3kgKE1E
TildKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3Mv
R2xvc3NhcnkvRmFsc3kpCi0gW1RydXRoeSBhbmQgRmFsc3kgdmFsdWVzIGlu
IEpTIC0gSm9zaCBDbGFudG9uXShodHRwOi8vYWRyaXBvZmphdmFzY3JpcHQu
Y29tL2Jsb2cvZHJpcHMvdHJ1dGh5LWFuZC1mYWxzeS12YWx1ZXMtaW4tamF2
YXNjcmlwdC5odG1sKQoKIyMjIEFuYW1vcnBoaXNtcyBhbmQgQ2F0YW1vcnBo
aXNtcwoKIyMjIyBBbmFtb3JwaGlzbXMKCkFuYW1vcnBoaXNtcyBhcmUgZnVu
Y3Rpb25zIHRoYXQgbWFwIGZyb20gc29tZSBvYmplY3QgdG8gYSBtb3JlIGNv
bXBsZXggc3RydWN0dXJlIGNvbnRhaW5pbmcgdGhlIHR5cGUgb2YgdGhlIG9i
amVjdC4gSXQgaXMgdGhlIHByb2Nlc3Mgb2YgKnVuZm9sZGluZyogYSBzaW1w
bGUgc3RydWN0dXJlIGludG8gYSBtb3JlIGNvbXBsZXggb25lLiBDb25zaWRl
ciB1bmZvbGRpbmcgYW4gaW50ZWdlciB0byBhIGxpc3Qgb2YgaW50ZWdlcnMu
IFRoZSBpbnRlZ2VyIGlzIG91ciBpbml0aWFsIG9iamVjdCBhbmQgdGhlIGxp
c3Qgb2YgaW50ZWdlcnMgaXMgdGhlIG1vcmUgY29tcGxleCBzdHJ1Y3R1cmUu
CgoqKlNhbXBsZSBjb2RlKioKCmBgYGpzCmZ1bmN0aW9uIGRvd25Ub09uZShu
KSB7CiAgY29uc3QgbGlzdCA9IFtdOwoKICBmb3IgKGxldCBpID0gbjsgaSA+
IDA7IC0taSkgewogICAgbGlzdC5wdXNoKGkpOwogIH0KCiAgcmV0dXJuIGxp
c3Q7Cn0KCmRvd25Ub09uZSg1KQogIC8vPT4gWyA1LCA0LCAzLCAyLCAxIF0K
YGBgCgojIyMjIENhdGFtb3JwaGlzbXMKCkNhdGFtb3JwaGlzbXMgYXJlIHRo
ZSBvcHBvc2l0ZSBvZiBBbmFtb3JwaGlzbXMsIGluIHRoYXQgdGhleSB0YWtl
IG9iamVjdHMgb2YgbW9yZSBjb21wbGV4IHN0cnVjdHVyZSBhbmQgKmZvbGQq
IHRoZW0gaW50byBzaW1wbGVyIHN0cnVjdHVyZXMuIFRha2UgdGhlIGZvbGxv
d2luZyBleGFtcGxlIGBwcm9kdWN0YCB3aGljaCB0YWtlIGEgbGlzdCBvZiBp
bnRlZ2VycyBhbmQgcmV0dXJucyBhIHNpbmdsZSBpbnRlZ2VyLgoKKipTYW1w
bGUgY29kZSoqCgpgYGBqcwpmdW5jdGlvbiBwcm9kdWN0KGxpc3QpIHsKICBs
ZXQgcHJvZHVjdCA9IDE7CgogIGZvciAoY29uc3QgbiBvZiBsaXN0KSB7CiAg
ICBwcm9kdWN0ID0gcHJvZHVjdCAqIG47CiAgfQoKICByZXR1cm4gcHJvZHVj
dDsKfQoKcHJvZHVjdChkb3duVG9PbmUoNSkpIC8vIDEyMApgYGAKCiMjIyMg
RXh0ZXJuYWwgcmVzb3VyY2VzCgoqIFtBbmFtb3JwaGlzbXMgaW4gSmF2YVNj
cmlwdF0oaHR0cDovL3JhZ2Fud2FsZC5jb20vMjAxNi8xMS8zMC9hbmFtb3Jw
aGlzbXMtaW4tamF2YXNjcmlwdC5odG1sKQoqIFtBbmFtb3JwaGlzbV0oaHR0
cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQW5hbW9ycGhpc20pCiogW0Nh
dGFtb3JwaGlzbV0oaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQ2F0
YW1vcnBoaXNtKQoKIyMjIEdlbmVyYXRvcnMKCkFub3RoZXIgd2F5IHRvIHdy
aXRlIHRoZSBgZG93blRvT25lYCBmdW5jdGlvbiBpcyB0byB1c2UgYSBHZW5l
cmF0b3IuIFRvIGluc3RhbnRpYXRlIGEgYEdlbmVyYXRvcmAgb2JqZWN0LCBv
bmUgbXVzdCB1c2UgdGhlIGBmdW5jdGlvbiAqYCBkZWNsYXJhdGlvbi4gR2Vu
ZXJhdG9ycyBhcmUgZnVuY3Rpb25zIHRoYXQgY2FuIGJlIGV4aXRlZCBhbmQg
bGF0ZXIgcmUtZW50ZXJlZCB3aXRoIGl0cyBjb250ZXh0ICh2YXJpYWJsZSBi
aW5kaW5ncykgc2F2ZWQgYWNyb3NzIHJlLWVudHJhbmNlcy4KCkZvciBleGFt
cGxlLCB0aGUgYGRvd25Ub09uZWAgZnVuY3Rpb24gYWJvdmUgY2FuIGJlIHJl
d3JpdHRlbiBhczoKCmBgYGpzCmZ1bmN0aW9uICogZG93blRvT25lKG4pIHsK
ICBmb3IgKGxldCBpID0gbjsgaSA+IDA7IC0taSkgewogICAgeWllbGQgaTsK
ICB9Cn0KClsuLi5kb3duVG9PbmUoNSldIC8vIFsgNSwgNCwgMywgMiwgMSBd
CmBgYAoKR2VuZXJhdG9ycyByZXR1cm4gYW4gaXRlcmFibGUgb2JqZWN0LiBX
aGVuIHRoZSBpdGVyYXRvcidzIGBuZXh0KClgIGZ1bmN0aW9uIGlzIGNhbGxl
ZCwgaXQgaXMgZXhlY3V0ZWQgdW50aWwgdGhlIGZpcnN0IGB5aWVsZGAgZXhw
cmVzc2lvbiwgd2hpY2ggc3BlY2lmaWVzIHRoZSB2YWx1ZSB0byBiZSByZXR1
cm5lZCBmcm9tIHRoZSBpdGVyYXRvciBvciB3aXRoIGB5aWVsZCpgLCB3aGlj
aCBkZWxlZ2F0ZXMgdG8gYW5vdGhlciBnZW5lcmF0b3IgZnVuY3Rpb24uIFdo
ZW4gYSBgcmV0dXJuYCBleHByZXNzaW9uIGlzIGNhbGxlZCBpbiB0aGUgZ2Vu
ZXJhdG9yLCBpdCB3aWxsIG1hcmsgdGhlIGdlbmVyYXRvciBhcyBkb25lIGFu
ZCBwYXNzIGJhY2sgYXMgdGhlIHJldHVybiB2YWx1ZS4gRnVydGhlciBjYWxs
cyB0byBgbmV4dCgpYCB3aWxsIG5vdCByZXR1cm4gYW55IG5ldyB2YWx1ZXMu
CgoqKlNhbXBsZSBjb2RlKioKCmBgYGpzCi8vIFlpZWxkIEV4YW1wbGUKZnVu
Y3Rpb24gKiBpZE1ha2VyKCkgewogIHZhciBpbmRleCA9IDA7CiAgd2hpbGUg
KGluZGV4IDwgMikgewogICAgeWllbGQgaW5kZXg7CiAgICBpbmRleCA9IGlu
ZGV4ICsgMTsKICB9Cn0KCnZhciBnZW4gPSBpZE1ha2VyKCk7CgpnZW4ubmV4
dCgpLnZhbHVlOyAvLyAwCmdlbi5uZXh0KCkudmFsdWU7IC8vIDEKZ2VuLm5l
eHQoKS52YWx1ZTsgLy8gdW5kZWZpbmVkCmBgYAoKVGhlIGB5aWVsZCpgIGV4
cHJlc3Npb24gZW5hYmxlcyBhIGdlbmVyYXRvciB0byBjYWxsIGFub3RoZXIg
Z2VuZXJhdG9yIGZ1bmN0aW9uIGR1cmluZyBpdGVyYXRpb24uCgpgYGBqcwov
LyBZaWVsZCAqIEV4YW1wbGUKZnVuY3Rpb24gKiBnZW5CKGkpIHsKICB5aWVs
ZCBpICsgMTsKICB5aWVsZCBpICsgMjsKICB5aWVsZCBpICsgMzsKfQoKZnVu
Y3Rpb24gKiBnZW5BKGkpIHsKICB5aWVsZCBpOwogIHlpZWxkKiBnZW5CKGkp
OwogIHlpZWxkIGkgKyAxMDsKfQoKdmFyIGdlbiA9IGdlbkEoMTApOwoKZ2Vu
Lm5leHQoKS52YWx1ZTsgLy8gMTAKZ2VuLm5leHQoKS52YWx1ZTsgLy8gMTEK
Z2VuLm5leHQoKS52YWx1ZTsgLy8gMTIKZ2VuLm5leHQoKS52YWx1ZTsgLy8g
MTMKZ2VuLm5leHQoKS52YWx1ZTsgLy8gMjAKYGBgCgpgYGBqcwovLyBHZW5l
cmF0b3IgUmV0dXJuIEV4YW1wbGUKZnVuY3Rpb24qIHlpZWxkQW5kUmV0dXJu
KCkgewogIHlpZWxkICJZIjsKICByZXR1cm4gIlIiOwogIHlpZWxkICJ1bnJl
YWNoYWJsZSI7Cn0KCnZhciBnZW4gPSB5aWVsZEFuZFJldHVybigpCmdlbi5u
ZXh0KCk7IC8vIHsgdmFsdWU6ICJZIiwgZG9uZTogZmFsc2UgfQpnZW4ubmV4
dCgpOyAvLyB7IHZhbHVlOiAiUiIsIGRvbmU6IHRydWUgfQpnZW4ubmV4dCgp
OyAvLyB7IHZhbHVlOiB1bmRlZmluZWQsIGRvbmU6IHRydWUgfQpgYGAKCiMj
IyMgRXh0ZXJuYWwgcmVzb3VyY2VzCgoqIFtNb3ppbGxhIE1ETiBXZWIgRG9j
cywgSXRlcmF0b3JzIGFuZCBHZW5lcmF0b3JzXShodHRwczovL2RldmVsb3Bl
ci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L0d1aWRl
L0l0ZXJhdG9yc19hbmRfR2VuZXJhdG9ycyNHZW5lcmF0b3JzKQoKIyMjIFN0
YXRpYyBNZXRob2RzCgojIyMjIFNob3J0IGV4cGxhbmF0aW9uCgpUaGUgYHN0
YXRpY2Aga2V5d29yZCBpcyB1c2VkIGluIGNsYXNzZXMgdG8gZGVjbGFyZSBz
dGF0aWMgbWV0aG9kcy4gU3RhdGljIG1ldGhvZHMgYXJlIGZ1bmN0aW9ucyBp
biBhIGNsYXNzIHRoYXQgYmVsb25ncyB0byB0aGUgY2xhc3Mgb2JqZWN0IGFu
ZCBhcmUgbm90IGF2YWlsYWJsZSB0byBhbnkgaW5zdGFuY2Ugb2YgdGhhdCBj
bGFzcy4KCiMjIyMgU2FtcGxlIGNvZGUKCmBgYGpzCmNsYXNzIFJlcG8gewog
IHN0YXRpYyBnZXROYW1lKCkgewogICAgcmV0dXJuICJSZXBvIG5hbWUgaXMg
bW9kZXJuLWpzLWNoZWF0c2hlZXQiCiAgfQp9CgovLyBOb3RlIHRoYXQgd2Ug
ZGlkIG5vdCBoYXZlIHRvIGNyZWF0ZSBhbiBpbnN0YW5jZSBvZiB0aGUgUmVw
byBjbGFzcwpjb25zb2xlLmxvZyhSZXBvLmdldE5hbWUoKSkgLy8gUmVwbyBu
YW1lIGlzIG1vZGVybi1qcy1jaGVhdHNoZWV0CgpsZXQgciA9IG5ldyBSZXBv
KCk7CmNvbnNvbGUubG9nKHIuZ2V0TmFtZSgpKSAvLyBVbmNhdWdodCBUeXBl
RXJyb3I6IHIuZ2V0TmFtZSBpcyBub3QgYSBmdW5jdGlvbgpgYGAKCiMjIyMg
RGV0YWlsZWQgZXhwbGFuYXRpb24KClN0YXRpYyBtZXRob2RzIGNhbiBiZSBj
YWxsZWQgd2l0aGluIGFub3RoZXIgc3RhdGljIG1ldGhvZCBieSB1c2luZyB0
aGUgYHRoaXNgIGtleXdvcmQsIHRoaXMgZG9lc24ndCB3b3JrIGZvciBub24t
c3RhdGljIG1ldGhvZHMgdGhvdWdoLiBOb24tc3RhdGljIG1ldGhvZHMgY2Fu
bm90IGRpcmVjdGx5IGFjY2VzcyBzdGF0aWMgbWV0aG9kcyB1c2luZyB0aGUg
YHRoaXNgIGtleXdvcmQuCgojIyMjIyBDYWxsaW5nIG90aGVyIHN0YXRpYyBt
ZXRob2RzIGZyb20gYSBzdGF0aWMgbWV0aG9kLgoKVG8gY2FsbCBhIHN0YXRp
YyBtZXRob2QgZnJvbSBhbm90aGVyIHN0YXRpYyBtZXRob2QsIHRoZSBgdGhp
c2Aga2V5d29yZCBjYW4gYmUgdXNlZCBsaWtlIHNvOwoKYGBganMKY2xhc3Mg
UmVwbyB7CiAgc3RhdGljIGdldE5hbWUoKSB7CiAgICByZXR1cm4gIlJlcG8g
bmFtZSBpcyBtb2Rlcm4tanMtY2hlYXRzaGVldCIKICB9CgogIHN0YXRpYyBt
b2RpZnlOYW1lKCkgewogICAgcmV0dXJuIHRoaXMuZ2V0TmFtZSgpICsgJy1h
ZGRlZC10aGlzJwogIH0KfQoKY29uc29sZS5sb2coUmVwby5tb2RpZnlOYW1l
KCkpIC8vIFJlcG8gbmFtZSBpcyBtb2Rlcm4tanMtY2hlYXRzaGVldC1hZGRl
ZC10aGlzCmBgYAoKIyMjIyMgQ2FsbGluZyBzdGF0aWMgbWV0aG9kcyBmcm9t
IG5vbi1zdGF0aWMgbWV0aG9kcy4KCk5vbi1zdGF0aWMgbWV0aG9kcyBjYW4g
Y2FsbCBzdGF0aWMgbWV0aG9kcyBpbiAyIHdheXM7CjEuICMjIyMjIyBVc2lu
ZyB0aGUgY2xhc3MgbmFtZS4KClRvIGdldCBhY2Nlc3MgdG8gYSBzdGF0aWMg
bWV0aG9kIGZyb20gYSBub24tc3RhdGljIG1ldGhvZCB3ZSB1c2UgdGhlIGNs
YXNzIG5hbWUgYW5kIGNhbGwgdGhlIHN0YXRpYyBtZXRob2QgbGlrZSBhIHBy
b3BlcnR5LiBlLmcgYENsYXNzTmFtZS5TdGF0aWNNZXRob2ROYW1lYAoKYGBg
anMKY2xhc3MgUmVwbyB7CiAgc3RhdGljIGdldE5hbWUoKSB7CiAgICByZXR1
cm4gIlJlcG8gbmFtZSBpcyBtb2Rlcm4tanMtY2hlYXRzaGVldCIKICB9Cgog
IHVzZU5hbWUoKSB7CiAgICByZXR1cm4gUmVwby5nZXROYW1lKCkgKyAnIGFu
ZCBpdCBjb250YWlucyBzb21lIHJlYWxseSBpbXBvcnRhbnQgc3R1ZmYnCiAg
fQp9CgovLyB3ZSBuZWVkIHRvIGluc3RhbnRpYXRlIHRoZSBjbGFzcyB0byB1
c2Ugbm9uLXN0YXRpYyBtZXRob2RzCmxldCByID0gbmV3IFJlcG8oKQpjb25z
b2xlLmxvZyhyLnVzZU5hbWUoKSkgLy8gUmVwbyBuYW1lIGlzIG1vZGVybi1q
cy1jaGVhdHNoZWV0IGFuZCBpdCBjb250YWlucyBzb21lIHJlYWxseSBpbXBv
cnRhbnQgc3R1ZmYKYGBgCgoyLiAjIyMjIyMgVXNpbmcgdGhlIGNvbnN0cnVj
dG9yCgpTdGF0aWMgbWV0aG9kcyBjYW4gYmUgY2FsbGVkIGFzIHByb3BlcnRp
ZXMgb24gdGhlIGNvbnN0cnVjdG9yIG9iamVjdC4KCmBgYGpzCmNsYXNzIFJl
cG8gewogIHN0YXRpYyBnZXROYW1lKCkgewogICAgcmV0dXJuICJSZXBvIG5h
bWUgaXMgbW9kZXJuLWpzLWNoZWF0c2hlZXQiCiAgfQoKICB1c2VOYW1lKCkg
ewogICAgLy8gQ2FsbHMgdGhlIHN0YXRpYyBtZXRob2QgYXMgYSBwcm9wZXJ0
eSBvZiB0aGUgY29uc3RydWN0b3IKICAgIHJldHVybiB0aGlzLmNvbnN0cnVj
dG9yLmdldE5hbWUoKSArICcgYW5kIGl0IGNvbnRhaW5zIHNvbWUgcmVhbGx5
IGltcG9ydGFudCBzdHVmZicKICB9Cn0KCi8vIHdlIG5lZWQgdG8gaW5zdGFu
dGlhdGUgdGhlIGNsYXNzIHRvIHVzZSBub24tc3RhdGljIG1ldGhvZHMKbGV0
IHIgPSBuZXcgUmVwbygpCmNvbnNvbGUubG9nKHIudXNlTmFtZSgpKSAvLyBS
ZXBvIG5hbWUgaXMgbW9kZXJuLWpzLWNoZWF0c2hlZXQgYW5kIGl0IGNvbnRh
aW5zIHNvbWUgcmVhbGx5IGltcG9ydGFudCBzdHVmZgpgYGAKCiMjIyMgRXh0
ZXJuYWwgcmVzb3VyY2VzCi0gW3N0YXRpYyBrZXl3b3JkLSBNRE5dKGh0dHBz
Oi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFT
Y3JpcHQvUmVmZXJlbmNlL0NsYXNzZXMvc3RhdGljKQotIFtTdGF0aWMgTWV0
aG9kcy0gSmF2YXNjcmlwdC5pbmZvXShodHRwczovL2phdmFzY3JpcHQuaW5m
by9jbGFzcyNzdGF0aWMtbWV0aG9kcykKLSBbU3RhdGljIE1lbWJlcnMgaW4g
RVM2LSBPZGVUb0NvZGVdKGh0dHA6Ly9vZGV0b2NvZGUuY29tL2Jsb2dzL3Nj
b3R0L2FyY2hpdmUvMjAxNS8wMi8wMi9zdGF0aWMtbWVtYmVycy1pbi1lczYu
YXNweCkKCiMjIEdsb3NzYXJ5CgojIyMgPGEgbmFtZT0ic2NvcGVfZGVmIj48
L2E+IFNjb3BlCgpUaGUgY29udGV4dCBpbiB3aGljaCB2YWx1ZXMgYW5kIGV4
cHJlc3Npb25zIGFyZSAidmlzaWJsZSwiIG9yIGNhbiBiZSByZWZlcmVuY2Vk
LiBJZiBhIHZhcmlhYmxlIG9yIG90aGVyIGV4cHJlc3Npb24gaXMgbm90ICJp
biB0aGUgY3VycmVudCBzY29wZSwiIHRoZW4gaXQgaXMgdW5hdmFpbGFibGUg
Zm9yIHVzZS4KClNvdXJjZTogW01ETl0oaHR0cHM6Ly9kZXZlbG9wZXIubW96
aWxsYS5vcmcvZW4tVVMvZG9jcy9HbG9zc2FyeS9TY29wZSkKCiMjIyA8YSBu
YW1lPSJtdXRhdGlvbl9kZWYiPjwvYT4gVmFyaWFibGUgbXV0YXRpb24KCkEg
dmFyaWFibGUgaXMgc2FpZCB0byBoYXZlIGJlZW4gbXV0YXRlZCB3aGVuIGl0
cyBpbml0aWFsIHZhbHVlIGhhcyBjaGFuZ2VkIGFmdGVyd2FyZC4KCmBgYGpz
CnZhciBteUFycmF5ID0gW107Cm15QXJyYXkucHVzaCgiZmlyc3RFbCIpIC8v
IG15QXJyYXkgaXMgYmVpbmcgbXV0YXRlZApgYGAKCkEgdmFyaWFibGUgaXMg
c2FpZCB0byBiZSAqaW1tdXRhYmxlKiBpZiBpdCBjYW4ndCBiZSBtdXRhdGVk
LgoKW0NoZWNrIE1ETiBNdXRhYmxlIGFydGljbGVdKGh0dHBzOi8vZGV2ZWxv
cGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvR2xvc3NhcnkvTXV0YWJsZSkg
Zm9yIG1vcmUgZGV0YWlscy4K
",,19358,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'formik',94367677,"b'Build forms in React, without the tears \xf0\x9f\x98\xad '",b'TypeScript',454,19356,,200,False,b'https://api.github.com/repos/jaredpalmer/formik/forks',"PHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyBzcmM9Imh0dHBzOi8vdXNlci1p
bWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzQwNjAxODcvNjEwNTc0MjYt
NGU1YTQ2MDAtYTNjMy0xMWU5LTkxMTQtNjMwNzQzZTA1ODE0LnBuZyIgd2lk
dGg9IjIxMSIgaGVpZ2h0PSIxODIiIGFsdD0iRm9ybWlrLmpzIiAvPgo8L3A+
Cgo8aDMgYWxpZ249ImNlbnRlciI+CiAgQnVpbGQgZm9ybXMgaW4gUmVhY3Qs
IHdpdGhvdXQgdGhlIHRlYXJzLgo8L2gzPgoKPGJyPgoKWyFbU3RhYmxlIFJl
bGVhc2VdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vbnBtL3YvZm9ybWlrLnN2
ZyldKGh0dHBzOi8vbnBtLmltL2Zvcm1paykKWyFbQmxhemluZyBGYXN0XSho
dHRwczovL2JhZGdlbi5ub3cuc2gvYmFkZ2Uvc3BlZWQvYmxhemluZyUyMCVG
MCU5RiU5NCVBNS9ncmVlbildKGh0dHBzOi8vbnBtLmltL2Zvcm1paykKWyFb
Z3ppcCBzaXplXShodHRwOi8vaW1nLmJhZGdlc2l6ZS5pby9odHRwczovL3Vu
cGtnLmNvbS9mb3JtaWtAbGF0ZXN0L2Rpc3QvZm9ybWlrLnVtZC5wcm9kdWN0
aW9uLm1pbi5qcz9jb21wcmVzc2lvbj1nemlwKV0oaHR0cHM6Ly91bnBrZy5j
b20vZm9ybWlrQGxhdGVzdC9kaXN0L2Zvcm1pay51bWQucHJvZHVjdGlvbi5t
aW4uanMpClshW2xpY2Vuc2VdKGh0dHBzOi8vYmFkZ2VuLm5vdy5zaC9iYWRn
ZS9saWNlbnNlL01JVCldKC4vTElDRU5TRSkKWyFbRGlzY29yZF0oaHR0cHM6
Ly9pbWcuc2hpZWxkcy5pby9kaXNjb3JkLzEwMjg2MDc4NDMyOTA1MjE2MC5z
dmc/c3R5bGU9ZmxhdC1zcXVhcmUpXShodHRwczovL2Rpc2NvcmQuZ2cvY1U2
TUN2ZSkKWyFbSm9pbiB0aGUgY29tbXVuaXR5IG9uIFNwZWN0cnVtXShodHRw
czovL3dpdGhzcGVjdHJ1bS5naXRodWIuaW8vYmFkZ2UvYmFkZ2Uuc3ZnKV0o
aHR0cHM6Ly9zcGVjdHJ1bS5jaGF0L3BhbG1lcikKCioqVmlzaXQgW2h0dHBz
Oi8vamFyZWRwYWxtZXIuY29tL2Zvcm1pa10oaHR0cHM6Ly9qYXJlZHBhbG1l
ci5jb20vZm9ybWlrKSB0byBnZXQgc3RhcnRlZCB3aXRoIEZvcm1pay4qKgoK
LS0tCgoqKlRoZSBiZWxvdyByZWFkbWUgaXMgdGhlIGRvY3VtZW50YXRpb24g
Zm9yIHRoZSBgbmV4dGAgKHByZXJlbGVhc2UpIHZlcnNpb24gb2YgRm9ybWlr
LiBUbyB2aWV3IHRoZSBkb2N1bWVudGF0aW9uIGZvciB0aGUgbGF0ZXN0IHN0
YWJsZSBGb3JtaWsgdmVyc2lvbiB2aXNpdCBbamFyZWRwYWxtZXIuY29tL2Zv
cm1pay9kb2NzXShodHRwczovL2phcmVkcGFsbWVyLmNvbS9mb3JtaWsvZG9j
cy9vdmVydmlldykqKgoKLS0tCgpMZXQncyBmYWNlIGl0LCBmb3JtcyBhcmUg
cmVhbGx5IHZlcmJvc2UgaW4KW1JlYWN0XShodHRwczovL2dpdGh1Yi5jb20v
ZmFjZWJvb2svcmVhY3QpLiBUbyBtYWtlIG1hdHRlcnMgd29yc2UsIG1vc3Qg
Zm9ybQpoZWxwZXJzIGRvIHdheXl5eSB0b28gbXVjaCBtYWdpYyBhbmQgb2Z0
ZW4gaGF2ZSBhIHNpZ25pZmljYW50IHBlcmZvcm1hbmNlIGNvc3QKYXNzb2Np
YXRlZCB3aXRoIHRoZW0uIEZvcm1payBpcyBhIHNtYWxsIGxpYnJhcnkgdGhh
dCBoZWxwcyB5b3Ugd2l0aCB0aGUgMyBtb3N0CmFubm95aW5nIHBhcnRzOgoK
MS4gIEdldHRpbmcgdmFsdWVzIGluIGFuZCBvdXQgb2YgZm9ybSBzdGF0ZQoy
LiAgVmFsaWRhdGlvbiBhbmQgZXJyb3IgbWVzc2FnZXMKMy4gIEhhbmRsaW5n
IGZvcm0gc3VibWlzc2lvbgoKQnkgY29sb2NhdGluZyBhbGwgb2YgdGhlIGFi
b3ZlIGluIG9uZSBwbGFjZSwgRm9ybWlrIHdpbGwga2VlcCB0aGluZ3MKb3Jn
YW5pemVkLS1tYWtpbmcgdGVzdGluZywgcmVmYWN0b3JpbmcsIGFuZCByZWFz
b25pbmcgYWJvdXQgeW91ciBmb3JtcyBhIGJyZWV6ZS4KCjxkaXYgaWQ9Imhh
bmRsZWJsdXItZS1hbnktLXZvaWQiPjwvZGl2Pgo8ZGl2IGlkPSJoYW5kbGVj
aGFuZ2UtZS1hbnktLXZvaWQiPjwvZGl2PgoKIyMgRG9jcwoKLSBbR2V0IFN0
YXJ0ZWRdKGh0dHBzOi8vamFyZWRwYWxtZXIuY29tL2Zvcm1pay9kb2NzL292
ZXJ2aWV3KQotIFtBUEkgUmVmZXJlbmNlXShodHRwczovL2phcmVkcGFsbWVy
LmNvbS9mb3JtaWsvZG9jcy9hcGkvZm9ybWlrKQotIFtBcnRpY2xlcyAvIFR1
dG9yaWFsc10oaHR0cHM6Ly9qYXJlZHBhbG1lci5jb20vZm9ybWlrL2RvY3Mv
cmVzb3VyY2VzKQotIFtHZXQgSGVscF0oaHR0cHM6Ly9qYXJlZHBhbG1lci5j
b20vZm9ybWlrL2hlbHApCi0gW1JlbGVhc2UgTm90ZXNdKGh0dHBzOi8vZ2l0
aHViLmNvbS9qYXJlZHBhbG1lci9mb3JtaWsvcmVsZWFzZXMpCgojIyBJbi1i
cm93c2VyIFBsYXlncm91bmRzCgpZb3UgY2FuIHBsYXkgd2l0aCBGb3JtaWsg
aW4geW91ciB3ZWIgYnJvd3NlciB3aXRoIHRoZXNlIGxpdmUgb25saW5lIHBs
YXlncm91bmRzLgoKLSBDb2RlU2FuZGJveCAoUmVhY3RET00pIGh0dHBzOi8v
Y29kZXNhbmRib3guaW8vcy96S3JLNVlMRFoKLSBFeHBvIFNuYWNrIChSZWFj
dCBOYXRpdmUpIGh0dHBzOi8vc25hY2suZXhwby5pby9AamFyZWRwYWxtZXIv
YmFzaWMtZm9ybWlrLXgtcmVhY3QtbmF0aXZlLWV4YW1wbGUKCiMjIEV4YW1w
bGVzCgotIFtCYXNpY3NdKGh0dHBzOi8vY29kZXNhbmRib3guaW8vcy96S3JL
NVlMRFopCi0gW1N5bmMgVmFsaWRhdGlvbl0oaHR0cHM6Ly9jb2Rlc2FuZGJv
eC5pby9zL3E4eVJxUU1wKQotIFtCdWlsZGluZyB5b3VyIG93biBpbnB1dCBw
cmltaXRpdmVzXShodHRwczovL2NvZGVzYW5kYm94LmlvL3MvcUpSNHlrSmsp
Ci0gV29ya2luZyB3aXRoIDNyZC1wYXJ0eSBpbnB1dHM6CiAgLSBbcmVhY3Qt
c2VsZWN0LXYxXShodHRwczovL2NvZGVzYW5kYm94LmlvL3MvalJ6RTUzcHFS
KQogIC0gW3JlYWN0LXNlbGVjdC12Ml0oaHR0cHM6Ly9jb2Rlc2FuZGJveC5p
by9zLzczamo5em9tOTYpCiAgLSBbRHJhZnQuanNdKGh0dHBzOi8vY29kZXNh
bmRib3guaW8vcy9RVzFycWpCTGwpCi0gW0FjY2Vzc2luZyBSZWFjdCBsaWZl
Y3ljbGUgZnVuY3Rpb25zXShodHRwczovL2NvZGVzYW5kYm94LmlvL3MvcGdE
NERMeXB5KQotIFtSZWFjdCBOYXRpdmVdKGh0dHBzOi8vc25hY2suZXhwby5p
by9AZmVycmFubnAvcmVhY3QtbmF0aXZlLXgtZm9ybWlrKQotIFtUeXBlU2Ny
aXB0XShodHRwczovL2NvZGVzYW5kYm94LmlvL3MvOHk1NzhvODE1MikKLSBb
SGFuZGxpbmcgQVBJIEVycm9yc10oaHR0cHM6Ly9jb2Rlc2FuZGJveC5pby9z
L253MTkzeXEzMmwpCgojIyBPcmdhbml6YXRpb25zIGFuZCBwcm9qZWN0cyB1
c2luZyBGb3JtaWsKCltMaXN0IG9mIG9yZ2FuaXphdGlvbnMgYW5kIHByb2pl
Y3RzIHVzaW5nIEZvcm1pa10oaHR0cHM6Ly9naXRodWIuY29tL2phcmVkcGFs
bWVyL2Zvcm1pay9pc3N1ZXMvODcpCgojIyBBdXRob3JzCgotIEphcmVkIFBh
bG1lciBbQGphcmVkcGFsbWVyXShodHRwczovL3R3aXR0ZXIuY29tL2phcmVk
cGFsbWVyKQotIElhbiBXaGl0ZSBbQGVvbndoaXRlXShodHRwczovL3R3aXR0
ZXIuY29tL2VvbndoaXRlKQoKIyMgQ29udHJpYnV0b3JzCgpGb3JtaWsgaXMg
bWFkZSB3aXRoIDwzIHRoYW5rcyB0byB0aGVzZSB3b25kZXJmdWwgcGVvcGxl
CihbZW1vamkga2V5XShodHRwczovL2dpdGh1Yi5jb20va2VudGNkb2Rkcy9h
bGwtY29udHJpYnV0b3JzI2Vtb2ppLWtleSkpOgoKPCEtLSBBTEwtQ09OVFJJ
QlVUT1JTLUxJU1Q6U1RBUlQgLSBEbyBub3QgcmVtb3ZlIG9yIG1vZGlmeSB0
aGlzIHNlY3Rpb24gLS0+CjwhLS0gcHJldHRpZXItaWdub3JlIC0tPgp8IFs8
aW1nIHNyYz0iaHR0cHM6Ly9hdmF0YXJzMi5naXRodWJ1c2VyY29udGVudC5j
b20vdS80MDYwMTg3P3Y9NCIgd2lkdGg9IjEwMHB4OyIvPjxiciAvPjxzdWI+
PGI+SmFyZWQgUGFsbWVyPC9iPjwvc3ViPl0oaHR0cDovL2phcmVkcGFsbWVy
LmNvbSk8YnIgLz5b8J+SrF0oI3F1ZXN0aW9uLWphcmVkcGFsbWVyICJBbnN3
ZXJpbmcgUXVlc3Rpb25zIikgW/CfkrtdKGh0dHBzOi8vZ2l0aHViLmNvbS9q
YXJlZHBhbG1lci9mb3JtaWsvY29tbWl0cz9hdXRob3I9amFyZWRwYWxtZXIg
IkNvZGUiKSBb8J+OqF0oI2Rlc2lnbi1qYXJlZHBhbG1lciAiRGVzaWduIikg
W/Cfk5ZdKGh0dHBzOi8vZ2l0aHViLmNvbS9qYXJlZHBhbG1lci9mb3JtaWsv
Y29tbWl0cz9hdXRob3I9amFyZWRwYWxtZXIgIkRvY3VtZW50YXRpb24iKSBb
8J+SoV0oI2V4YW1wbGUtamFyZWRwYWxtZXIgIkV4YW1wbGVzIikgW/CfpJRd
KCNpZGVhcy1qYXJlZHBhbG1lciAiSWRlYXMsIFBsYW5uaW5nLCAmIEZlZWRi
YWNrIikgW/CfkYBdKCNyZXZpZXctamFyZWRwYWxtZXIgIlJldmlld2VkIFB1
bGwgUmVxdWVzdHMiKSBb4pqg77iPXShodHRwczovL2dpdGh1Yi5jb20vamFy
ZWRwYWxtZXIvZm9ybWlrL2NvbW1pdHM/YXV0aG9yPWphcmVkcGFsbWVyICJU
ZXN0cyIpIHwgWzxpbWcgc3JjPSJodHRwczovL2F2YXRhcnMwLmdpdGh1YnVz
ZXJjb250ZW50LmNvbS91LzEwOTMyND92PTQiIHdpZHRoPSIxMDBweDsiLz48
YnIgLz48c3ViPjxiPklhbiBXaGl0ZTwvYj48L3N1Yj5dKGh0dHBzOi8vd3d3
LnN0YXJkb2cuaW8pPGJyIC8+W/CfkqxdKCNxdWVzdGlvbi1lb253aGl0ZSAi
QW5zd2VyaW5nIFF1ZXN0aW9ucyIpIFvwn5CbXShodHRwczovL2dpdGh1Yi5j
b20vamFyZWRwYWxtZXIvZm9ybWlrL2lzc3Vlcz9xPWF1dGhvciUzQWVvbndo
aXRlICJCdWcgcmVwb3J0cyIpIFvwn5K7XShodHRwczovL2dpdGh1Yi5jb20v
amFyZWRwYWxtZXIvZm9ybWlrL2NvbW1pdHM/YXV0aG9yPWVvbndoaXRlICJD
b2RlIikgW/Cfk5ZdKGh0dHBzOi8vZ2l0aHViLmNvbS9qYXJlZHBhbG1lci9m
b3JtaWsvY29tbWl0cz9hdXRob3I9ZW9ud2hpdGUgIkRvY3VtZW50YXRpb24i
KSBb8J+klF0oI2lkZWFzLWVvbndoaXRlICJJZGVhcywgUGxhbm5pbmcsICYg
RmVlZGJhY2siKSBb8J+RgF0oI3Jldmlldy1lb253aGl0ZSAiUmV2aWV3ZWQg
UHVsbCBSZXF1ZXN0cyIpIHwgWzxpbWcgc3JjPSJodHRwczovL2F2YXRhcnMw
LmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzgyOTk2Mz92PTQiIHdpZHRoPSIx
MDBweDsiLz48YnIgLz48c3ViPjxiPkFuZHJlaiBCYWRpbjwvYj48L3N1Yj5d
KGh0dHA6Ly9hbmRyZWpiYWRpbi5jb20pPGJyIC8+W/CfkqxdKCNxdWVzdGlv
bi1BbmRyZXljbyAiQW5zd2VyaW5nIFF1ZXN0aW9ucyIpIFvwn5CbXShodHRw
czovL2dpdGh1Yi5jb20vamFyZWRwYWxtZXIvZm9ybWlrL2lzc3Vlcz9xPWF1
dGhvciUzQUFuZHJleWNvICJCdWcgcmVwb3J0cyIpIFvwn5OWXShodHRwczov
L2dpdGh1Yi5jb20vamFyZWRwYWxtZXIvZm9ybWlrL2NvbW1pdHM/YXV0aG9y
PUFuZHJleWNvICJEb2N1bWVudGF0aW9uIikgfCBbPGltZyBzcmM9Imh0dHBz
Oi8vYXZhdGFyczIuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvOTExMTU/dj00
IiB3aWR0aD0iMTAwcHg7Ii8+PGJyIC8+PHN1Yj48Yj5BZGFtIEhvd2FyZDwv
Yj48L3N1Yj5dKGh0dHA6Ly9hZHouY28uZGUpPGJyIC8+W/CfkqxdKCNxdWVz
dGlvbi1za2F0dHlhZHogIkFuc3dlcmluZyBRdWVzdGlvbnMiKSBb8J+Qm10o
aHR0cHM6Ly9naXRodWIuY29tL2phcmVkcGFsbWVyL2Zvcm1pay9pc3N1ZXM/
cT1hdXRob3IlM0Fza2F0dHlhZHogIkJ1ZyByZXBvcnRzIikgW/CfpJRdKCNp
ZGVhcy1za2F0dHlhZHogIklkZWFzLCBQbGFubmluZywgJiBGZWVkYmFjayIp
IFvwn5GAXSgjcmV2aWV3LXNrYXR0eWFkeiAiUmV2aWV3ZWQgUHVsbCBSZXF1
ZXN0cyIpIHwgWzxpbWcgc3JjPSJodHRwczovL2F2YXRhcnMxLmdpdGh1YnVz
ZXJjb250ZW50LmNvbS91LzY3MTE4NDU/dj00IiB3aWR0aD0iMTAwcHg7Ii8+
PGJyIC8+PHN1Yj48Yj5WbGFkIFNoY2hlcmJpbjwvYj48L3N1Yj5dKGh0dHBz
Oi8vZ2l0aHViLmNvbS9WbGFkU2hjaGVyYmluKTxiciAvPlvwn5KsXSgjcXVl
c3Rpb24tVmxhZFNoY2hlcmJpbiAiQW5zd2VyaW5nIFF1ZXN0aW9ucyIpIFvw
n5CbXShodHRwczovL2dpdGh1Yi5jb20vamFyZWRwYWxtZXIvZm9ybWlrL2lz
c3Vlcz9xPWF1dGhvciUzQVZsYWRTaGNoZXJiaW4gIkJ1ZyByZXBvcnRzIikg
W/CfpJRdKCNpZGVhcy1WbGFkU2hjaGVyYmluICJJZGVhcywgUGxhbm5pbmcs
ICYgRmVlZGJhY2siKSB8IFs8aW1nIHNyYz0iaHR0cHM6Ly9hdmF0YXJzMy5n
aXRodWJ1c2VyY29udGVudC5jb20vdS8zODMyMTI/dj00IiB3aWR0aD0iMTAw
cHg7Ii8+PGJyIC8+PHN1Yj48Yj5Ccmlrb3UgQ0FSUkU8L2I+PC9zdWI+XSho
dHRwczovL2dpdGh1Yi5jb20vYnJpa291KTxiciAvPlvwn5CbXShodHRwczov
L2dpdGh1Yi5jb20vamFyZWRwYWxtZXIvZm9ybWlrL2lzc3Vlcz9xPWF1dGhv
ciUzQWJyaWtvdSAiQnVnIHJlcG9ydHMiKSBb8J+Tll0oaHR0cHM6Ly9naXRo
dWIuY29tL2phcmVkcGFsbWVyL2Zvcm1pay9jb21taXRzP2F1dGhvcj1icmlr
b3UgIkRvY3VtZW50YXRpb24iKSB8IFs8aW1nIHNyYz0iaHR0cHM6Ly9hdmF0
YXJzMC5naXRodWJ1c2VyY29udGVudC5jb20vdS81MzE0NzEzP3Y9NCIgd2lk
dGg9IjEwMHB4OyIvPjxiciAvPjxzdWI+PGI+U2FtIEt2YWxlPC9iPjwvc3Vi
Pl0oaHR0cDovL3NrdmFsZS5naXRodWIuaW8pPGJyIC8+W/CfkJtdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9qYXJlZHBhbG1lci9mb3JtaWsvaXNzdWVzP3E9YXV0
aG9yJTNBc2t2YWxlICJCdWcgcmVwb3J0cyIpIFvwn5K7XShodHRwczovL2dp
dGh1Yi5jb20vamFyZWRwYWxtZXIvZm9ybWlrL2NvbW1pdHM/YXV0aG9yPXNr
dmFsZSAiQ29kZSIpIFvimqDvuI9dKGh0dHBzOi8vZ2l0aHViLmNvbS9qYXJl
ZHBhbG1lci9mb3JtaWsvY29tbWl0cz9hdXRob3I9c2t2YWxlICJUZXN0cyIp
IHwKfCA6LS0tOiB8IDotLS06IHwgOi0tLTogfCA6LS0tOiB8IDotLS06IHwg
Oi0tLTogfCA6LS0tOiB8CnwgWzxpbWcgc3JjPSJodHRwczovL2F2YXRhcnMw
LmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzEzNzY1NTU4P3Y9NCIgd2lkdGg9
IjEwMHB4OyIvPjxiciAvPjxzdWI+PGI+Sm9uIFRhbnNleTwvYj48L3N1Yj5d
KGh0dHA6Ly9qb24udGFuc2V5LmluZm8pPGJyIC8+W/CfkJtdKGh0dHBzOi8v
Z2l0aHViLmNvbS9qYXJlZHBhbG1lci9mb3JtaWsvaXNzdWVzP3E9YXV0aG9y
JTNBam9udGFuc2V5ICJCdWcgcmVwb3J0cyIpIFvwn5K7XShodHRwczovL2dp
dGh1Yi5jb20vamFyZWRwYWxtZXIvZm9ybWlrL2NvbW1pdHM/YXV0aG9yPWpv
bnRhbnNleSAiQ29kZSIpIHwgWzxpbWcgc3JjPSJodHRwczovL2F2YXRhcnMw
LmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzY4MTkxNzE/dj00IiB3aWR0aD0i
MTAwcHg7Ii8+PGJyIC8+PHN1Yj48Yj5UeWxlciBNYXJ0aW5lejwvYj48L3N1
Yj5dKGh0dHA6Ly9zbGlnaHRseXR5bGVyLmNvbSk8YnIgLz5b8J+Qm10oaHR0
cHM6Ly9naXRodWIuY29tL2phcmVkcGFsbWVyL2Zvcm1pay9pc3N1ZXM/cT1h
dXRob3IlM0FzbGlnaHRseXR5bGVyICJCdWcgcmVwb3J0cyIpIFvwn5OWXSho
dHRwczovL2dpdGh1Yi5jb20vamFyZWRwYWxtZXIvZm9ybWlrL2NvbW1pdHM/
YXV0aG9yPXNsaWdodGx5dHlsZXIgIkRvY3VtZW50YXRpb24iKSB8IFs8aW1n
IHNyYz0iaHR0cHM6Ly9hdmF0YXJzMC5naXRodWJ1c2VyY29udGVudC5jb20v
dS8xMjg1MDMyP3Y9NCIgd2lkdGg9IjEwMHB4OyIvPjxiciAvPjxzdWI+PGI+
VG9iaWFzIExvaHNlPC9iPjwvc3ViPl0oaHR0cDovL01yTG9oLnNlKTxiciAv
Plvwn5CbXShodHRwczovL2dpdGh1Yi5jb20vamFyZWRwYWxtZXIvZm9ybWlr
L2lzc3Vlcz9xPWF1dGhvciUzQU1yTG9oICJCdWcgcmVwb3J0cyIpIFvwn5K7
XShodHRwczovL2dpdGh1Yi5jb20vamFyZWRwYWxtZXIvZm9ybWlrL2NvbW1p
dHM/YXV0aG9yPU1yTG9oICJDb2RlIikgfAoKPCEtLSBBTEwtQ09OVFJJQlVU
T1JTLUxJU1Q6RU5EIC0tPgoKVGhpcyBwcm9qZWN0IGZvbGxvd3MgdGhlClth
bGwtY29udHJpYnV0b3JzXShodHRwczovL2dpdGh1Yi5jb20va2VudGNkb2Rk
cy9hbGwtY29udHJpYnV0b3JzKQpzcGVjaWZpY2F0aW9uLiBDb250cmlidXRp
b25zIG9mIGFueSBraW5kIHdlbGNvbWUhCgojIyBSZWxhdGVkCgotIFtUU0RY
XShodHRwczovL2dpdGh1Yi5jb20vcGFsbWVyaHEvdHNkeCkgLSBaZXJvLWNv
bmZpZyBDTEkgZm9yIFR5cGVTY3JpcHQgdXNlZCBieSB0aGlzIHJlcG8uCgot
LS0KCltNSVQgTGljZW5zZS5dKGh0dHBzOi8vZ2l0aHViLmNvbS9qYXJlZHBh
bG1lci9mb3JtaWsvYmxvYi9tYXN0ZXIvTElDRU5TRSkK
",,19356,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"bmFtZTogQ0kKCm9uOiBbcHVzaF0KCmpvYnM6CiAgYnVpbGQ6CiAgICBydW5z
LW9uOiAke3sgbWF0cml4Lm9zIH19CgogICAgc3RyYXRlZ3k6CiAgICAgIG1h
dHJpeDoKICAgICAgICBub2RlOiBbJzEwLngnLCAnMTIueCddCiAgICAgICAg
b3M6IFt1YnVudHUtbGF0ZXN0LCB3aW5kb3dzLWxhdGVzdCwgbWFjT1MtbGF0
ZXN0XQoKICAgIG5hbWU6IFRlc3Qgb24gbm9kZSAke3sgbWF0cml4Lm5vZGUg
fX0gYW5kICR7eyBtYXRyaXgub3MgfX0KCiAgICBzdGVwczoKICAgICAgLSB1
c2VzOiBhY3Rpb25zL2NoZWNrb3V0QHYxCgogICAgICAtIG5hbWU6IFVzZSBO
b2RlLmpzICR7eyBtYXRyaXgubm9kZSB9fQogICAgICAgIHVzZXM6IGFjdGlv
bnMvc2V0dXAtbm9kZUB2MQogICAgICAgIHdpdGg6CiAgICAgICAgICBub2Rl
LXZlcnNpb246ICR7eyBtYXRyaXgubm9kZSB9fQoKICAgICAgLSBuYW1lOiBJ
bnN0YWxsIHlhcm4gcGFja2FnZSBtYW5hZ2VyCiAgICAgICAgcnVuOiBucG0g
aW5zdGFsbCAtZyB5YXJuCgogICAgICAtIG5hbWU6IEluc3RhbGwgZGVwcyBh
bmQgYnVpbGQKICAgICAgICBydW46IHlhcm4gaW5zdGFsbCAtLWZyb3plbi1s
b2NrZmlsZQoKICAgICAgLSBuYW1lOiBSdW4gdGVzdHMKICAgICAgICBydW46
IHlhcm4gdGVzdCAtLXJ1bkluQmFuZCAtLW5vLWNhY2hlIC0tY292ZXJhZ2UK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'alacritty',51980455,"b'A cross-platform, GPU-accelerated terminal emulator'",b'Rust',395,19354,,352,False,b'https://api.github.com/repos/jwilm/alacritty/forks',"PGgxIGFsaWduPSJjZW50ZXIiPkFsYWNyaXR0eTwvaDE+CjxwIGFsaWduPSJj
ZW50ZXIiPgogICAgPGltZyB3aWR0aD0iMjAwIiBhbHQ9IkFsYWNyaXR0eSBM
b2dvIiBzcmM9ImV4dHJhL2xvZ28vYWxhY3JpdHR5LXRlcm0rc2NhbmxpbmVz
LnN2ZyI+CjwvcD4KCkFsYWNyaXR0eSBpcyB0aGUgZmFzdGVzdCB0ZXJtaW5h
bCBlbXVsYXRvciBpbiBleGlzdGVuY2UuIFVzaW5nIHRoZSBHUFUgZm9yCnJl
bmRlcmluZyBlbmFibGVzIG9wdGltaXphdGlvbnMgdGhhdCBzaW1wbHkgYXJl
bid0IHBvc3NpYmxlIHdpdGhvdXQgaXQuCkFsYWNyaXR0eSBjdXJyZW50bHkg
c3VwcG9ydHMgbWFjT1MsIExpbnV4LCBCU0QsIGFuZCBXaW5kb3dzLgoKPHAg
YWxpZ249ImNlbnRlciI+CiAgPGltZyB3aWR0aD0iNjAwIgogICAgICAgYWx0
PSJBbGFjcml0dHkgcnVubmluZyB2aW0gaW5zaWRlIHRtdXgiCiAgICAgICBz
cmM9Imh0dHBzOi8vY2xvdWQuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2Fzc2V0
cy80Mjg1MTQ3LzIxNTg1MDA0LzJlYmQwMjg4LWQwNmMtMTFlNi05NWQzLTRh
Mjg4OWRiYmQ2Zi5wbmciPgo8L3A+CgojIyBBYm91dAoKQWxhY3JpdHR5IGlz
IGEgdGVybWluYWwgZW11bGF0b3Igd2l0aCBhIHN0cm9uZyBmb2N1cyBvbiBz
aW1wbGljaXR5IGFuZApwZXJmb3JtYW5jZS4gV2l0aCBzdWNoIGEgc3Ryb25n
IGZvY3VzIG9uIHBlcmZvcm1hbmNlLCBpbmNsdWRlZCBmZWF0dXJlcyBhcmUK
Y2FyZWZ1bGx5IGNvbnNpZGVyZWQgYW5kIHlvdSBjYW4gYWx3YXlzIGV4cGVj
dCBBbGFjcml0dHkgdG8gYmUgYmxhemluZ2x5IGZhc3QuCkJ5IG1ha2luZyBz
YW5lIGNob2ljZXMgZm9yIGRlZmF1bHRzLCBBbGFjcml0dHkgcmVxdWlyZXMg
bm8gYWRkaXRpb25hbCBzZXR1cC4KSG93ZXZlciwgaXQgZG9lcyBhbGxvdyBb
Y29uZmlndXJhdGlvbl0oI2NvbmZpZ3VyYXRpb24pIG9mIG1hbnkgYXNwZWN0
cyBvZiB0aGUKdGVybWluYWwuCgpUaGUgc29mdHdhcmUgaXMgY29uc2lkZXJl
ZCB0byBiZSBhdCBhICoqYmV0YSoqIGxldmVsIG9mIHJlYWRpbmVzcyAtLSB0
aGVyZSBhcmUKYSBmZXcgbWlzc2luZyBmZWF0dXJlcyBhbmQgYnVncyB0byBi
ZSBmaXhlZCwgYnV0IGl0IGlzIGFscmVhZHkgdXNlZCBieSBtYW55IGFzCmEg
ZGFpbHkgZHJpdmVyLgoKUHJlY29tcGlsZWQgYmluYXJpZXMgYXJlIGF2YWls
YWJsZSBmcm9tIHRoZSBbR2l0SHViIHJlbGVhc2VzIHBhZ2VdKGh0dHBzOi8v
Z2l0aHViLmNvbS9qd2lsbS9hbGFjcml0dHkvcmVsZWFzZXMpLgoKIyMgRnVy
dGhlciBpbmZvcm1hdGlvbgoKLSBbQW5ub3VuY2luZyBBbGFjcml0dHksIGEg
R1BVLUFjY2VsZXJhdGVkIFRlcm1pbmFsIEVtdWxhdG9yXShodHRwczovL2p3
aWxtLmlvL2Jsb2cvYW5ub3VuY2luZy1hbGFjcml0dHkvKSBKYW51YXJ5IDYs
IDIwMTcKLSBbQSBzaG9ydCB0YWxrIGFib3V0IEFsYWNyaXR0eSBhdCB0aGUg
UnVzdCBNZWV0dXAgSmFudWFyeSAyMDE3XShodHRwczovL2Fpci5tb3ppbGxh
Lm9yZy9ydXN0LW1lZXR1cC1qYW51YXJ5LTIwMTcvKSAoc3RhcnRzIGF0IDU3
OjAwKQotIFtBbGFjcml0dHkgTGFuZHMgU2Nyb2xsYmFjaywgUHVibGlzaGVz
IEJlbmNobWFya3NdKGh0dHBzOi8vandpbG0uaW8vYmxvZy9hbGFjcml0dHkt
bGFuZHMtc2Nyb2xsYmFjay8pIFNlcHRlbWJlciAxNywgMjAxOAotIFtWZXJz
aW9uIDAuMy4wIFJlbGVhc2UgQW5ub3VuY2VtZW50XShodHRwczovL2Jsb2cu
Y2hyaXN0aWFuZHVlcnIuY29tL2FsYWNyaXR0eV8wMzBfYW5ub3VuY2VtZW50
KSBBcHJpbCAwNywgMjAxOQoKIyMgSW5zdGFsbGF0aW9uCgpTb21lIG9wZXJh
dGluZyBzeXN0ZW1zIGFscmVhZHkgcHJvdmlkZSBiaW5hcmllcyBmb3IgQWxh
Y3JpdHR5LCBmb3IgZXZlcnlvbmUKZWxzZSB0aGUgaW5zdHJ1Y3Rpb25zIHRv
IGJ1aWxkIEFsYWNyaXR0eSBmcm9tIHNvdXJjZSBjYW4gYmUgZm91bmQgW2hl
cmVdKElOU1RBTEwubWQpLgoKIyMjIEFyY2ggTGludXgKCmBgYHNoCnBhY21h
biAtUyBhbGFjcml0dHkKYGBgCgojIyMgRmVkb3JhCgpVbm9mZmljaWFsIGJ1
aWxkcyBvZiBzdGFibGUgdGFncyBjYW4gYmUgZm91bmQgaW4gRmVkb3JhIENv
cHI6Cltwc2NoeXNrYS9hbGFjcml0dHldKGh0dHBzOi8vY29wci5mZWRvcmFp
bmZyYWNsb3VkLm9yZy9jb3Bycy9wc2NoeXNrYS9hbGFjcml0dHkvKS4KCmBg
YCBzaApkbmYgY29wciBlbmFibGUgcHNjaHlza2EvYWxhY3JpdHR5CmRuZiBp
bnN0YWxsIGFsYWNyaXR0eQpgYGAKCklmIHlvdSB3YW50IHRvIGhlbHAgdGVz
dCBwcmUtcmVsZWFzZXMsIHlvdSBjYW4gYWRkaXRpb25hbGx5IGVuYWJsZQpb
cHNjaHlza2EvYWxhY3JpdHR5LXRlc3RpbmddKGh0dHBzOi8vY29wci5mZWRv
cmFpbmZyYWNsb3VkLm9yZy9jb3Bycy9wc2NoeXNrYS9hbGFjcml0dHktdGVz
dGluZy8pLgoKIyMjIEdlbnRvbyBMaW51eAoKYGBgc2gKZW1lcmdlIHgxMS10
ZXJtcy9hbGFjcml0dHkKYGBgCgojIyMgTWFnZWlhCgpgYGBzaAp1cnBtaSBh
bGFjcml0dHkKYGBgCgojIyMgTml4T1MKCmBgYHNoCm5peC1lbnYgLWlBIG5p
eG9zLmFsYWNyaXR0eQpgYGAKCiMjIyBvcGVuU1VTRSBUdW1ibGV3ZWVkCgpg
YGBzaAp6eXBwZXIgaW4gYWxhY3JpdHR5CmBgYAoKIyMjIFBvcCFcX09TIC8g
VWJ1bnR1Cgo+IElmIHlvdSdyZSBub3QgcnVubmluZyBQb3AhX09TLCB5b3Un
bGwgaGF2ZSB0byBhZGQgYSB0aGlyZCBwYXJ0eSByZXBvc2l0b3J5IGZpcnN0
Ogo+Cj4gYGBgc2gKPiBhZGQtYXB0LXJlcG9zaXRvcnkgcHBhOm1tc3RpY2s3
Ni9hbGFjcml0dHkKPiBgYGAKCmBgYHNoCmFwdCBpbnN0YWxsIGFsYWNyaXR0
eQpgYGAKCiMjIyBTb2x1cwoKYGBgc2gKZW9wa2cgaW5zdGFsbCBhbGFjcml0
dHkKYGBgCgojIyMgVm9pZCBMaW51eAoKYGBgc2gKeGJwcy1pbnN0YWxsIGFs
YWNyaXR0eQpgYGAKCiMjIyBGcmVlQlNECgpgYGBzaApwa2cgaW5zdGFsbCBh
bGFjcml0dHkKYGBgCgojIyMgbWFjT1MKCmBgYHNoCmJyZXcgY2FzayBpbnN0
YWxsIGFsYWNyaXR0eQpgYGAKCk9uY2UgdGhlIGNhc2sgaXMgaW5zdGFsbGVk
LCBpdCBpcyByZWNvbW1lbmRlZCB0byBzZXR1cCB0aGUgW21hbnVhbCBwYWdl
XShJTlNUQUxMLm1kI21hbnVhbC1wYWdlKSwKW3NoZWxsIGNvbXBsZXRpb25z
XShJTlNUQUxMLm1kI3NoZWxsLWNvbXBsZXRpb25zKSwgYW5kIFt0ZXJtaW5m
byBkZWZpbml0aW9uc10oSU5TVEFMTC5tZCN0ZXJtaW5mbykuCgojIyMgV2lu
ZG93cwoKIyMjIyBWaWEgW0Nob2NvbGF0ZXldKGh0dHBzOi8vY2hvY29sYXRl
eS5vcmcpCgpgYGBiYXRjaApjaG9jbyBpbnN0YWxsIGFsYWNyaXR0eQpgYGAK
CiMjIyMgVmlhIFtTY29vcF0oaHR0cHM6Ly9zY29vcC5zaCkKCmBgYGJhdGNo
CnNjb29wIGJ1Y2tldCBhZGQgZXh0cmFzCnNjb29wIGluc3RhbGwgYWxhY3Jp
dHR5CmBgYAoKIyMjIE90aGVyCgpQcmVidWlsdCBiaW5hcmllcyBmb3IgTGlu
dXgsIG1hY09TLCBhbmQgV2luZG93cyBjYW4gYmUgZG93bmxvYWRlZCBmcm9t
IHRoZQpbR2l0SHViIHJlbGVhc2VzIHBhZ2VdKGh0dHBzOi8vZ2l0aHViLmNv
bS9qd2lsbS9hbGFjcml0dHkvcmVsZWFzZXMpLgoKVG8gd29yayBwcm9wZXJs
eSBvbiBXaW5kb3dzLCBBbGFjcml0dHkgcmVxdWlyZXMgd2lucHR5IHRvIGVt
dWxhdGUgVU5JWCdzIFBUWQpBUEkuIFRoZSBhZ2VudCBpcyBhIHNpbmdsZSBi
aW5hcnkgKGB3aW5wdHktYWdlbnQuZXhlYCkgd2hpY2ggKiptdXN0KiogYmUg
aW4KdGhlIHNhbWUgZGlyZWN0b3J5IGFzIHRoZSBBbGFjcml0dHkgZXhlY3V0
YWJsZSBhbmQgaXMgYXZhaWxhYmxlIHRocm91Z2ggdGhlCltHaXRIdWIgcmVs
ZWFzZXMgcGFnZV0oaHR0cHM6Ly9naXRodWIuY29tL2p3aWxtL2FsYWNyaXR0
eS9yZWxlYXNlcykuCgpPbiBXaW5kb3dzLCBBbGFjcml0dHkgYWxzbyByZXF1
aXJlcyBNaWNyb3NvZnQncyBWQysrIHJlZGlzdHJpYnV0YWJsZSB0byB3b3Jr
CnByb3Blcmx5LgoKIyMgQ29uZmlndXJhdGlvbgoKWW91IGNhbiBmaW5kIHRo
ZSBkZWZhdWx0IGNvbmZpZ3VyYXRpb24gZmlsZSB3aXRoIGRvY3VtZW50YXRp
b24gZm9yIGFsbCBhdmFpbGFibGUKZmllbGRzIG9uIHRoZSBbR2l0SHViIHJl
bGVhc2VzIHBhZ2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9qd2lsbS9hbGFjcml0
dHkvcmVsZWFzZXMpIGZvciBlYWNoIHJlbGVhc2UuCgpBbGFjcml0dHkgbG9v
a3MgZm9yIHRoZSBjb25maWd1cmF0aW9uIGZpbGUgYXQgdGhlIGZvbGxvd2lu
ZyBwYXRoczoKCjEuIGAkWERHX0NPTkZJR19IT01FL2FsYWNyaXR0eS9hbGFj
cml0dHkueW1sYAoyLiBgJFhER19DT05GSUdfSE9NRS9hbGFjcml0dHkueW1s
YAozLiBgJEhPTUUvLmNvbmZpZy9hbGFjcml0dHkvYWxhY3JpdHR5LnltbGAK
NC4gYCRIT01FLy5hbGFjcml0dHkueW1sYAoKIyMjIFdpbmRvd3MKCk9uIFdp
bmRvd3MgdGhlIGNvbmZpZyBmaWxlIGlzIGxvY2F0ZWQgYXQ6CgpgJUFQUERB
VEElXGFsYWNyaXR0eVxhbGFjcml0dHkueW1sYAoKIyMgQ29udHJpYnV0aW5n
CgpBIGZ1bGwgZ3VpZGVsaW5lIGFib3V0IGNvbnRyaWJ1dGluZyB0byBBbGFj
cml0dHkgY2FuIGJlIGZvdW5kIGluIHRoZQpbYENPTlRSSUJVVElORy5tZGBd
KENPTlRSSUJVVElORy5tZCkgZmlsZS4KCiMjIElzc3VlcyAoa25vd24sIHVu
a25vd24sIGZlYXR1cmUgcmVxdWVzdHMsIGV0Yy4pCgpJZiB5b3UgcnVuIGlu
dG8gYSBwcm9ibGVtIHdpdGggQWxhY3JpdHR5LCBwbGVhc2UgZmlsZSBhbiBp
c3N1ZS4gSWYgeW91J3ZlIGdvdCBhCmZlYXR1cmUgcmVxdWVzdCwgZmVlbCBm
cmVlIHRvIGFzayBhYm91dCBpdC4gUGxlYXNlIGp1c3Qga2VlcCBpbiBtaW5k
IEFsYWNyaXR0eQppcyBmb2N1c2VkIG9uIHNpbXBsaWNpdHkgYW5kIHBlcmZv
cm1hbmNlLCBhbmQgbm90IGFsbCBmZWF0dXJlcyBhcmUgaW4gbGluZSB3aXRo
CnRoYXQgZ29hbC4KCkJlZm9yZSBvcGVuaW5nIGEgbmV3IGlzc3VlLCBwbGVh
c2UgY2hlY2sgaWYgaXQgaGFzIGFscmVhZHkgYmVlbiByZXBvcnRlZC4KVGhl
cmUncyBhIGNoYW5jZSBzb21lb25lIGVsc2UgaGFzIGFscmVhZHkgcmVwb3J0
ZWQgaXQsIGFuZCB5b3UgY2FuIHN1YnNjcmliZSB0bwp0aGF0IGlzc3VlIHRv
IGtlZXAgdXAgb24gdGhlIGxhdGVzdCBkZXZlbG9wbWVudHMuCgojIyBGQVEK
CioqX0lzIGl0IHJlYWxseSB0aGUgZmFzdGVzdCB0ZXJtaW5hbCBlbXVsYXRv
cj9fKioKCkluIHRoZSB0ZXJtaW5hbHMgd2UndmUgW2JlbmNobWFya2VkXSho
dHRwOi8vZ2l0aHViLmNvbS9qd2lsbS92dGViZW5jaCksCkFsYWNyaXR0eSBp
cyBlaXRoZXIgZmFzdGVyIG9yICoqd2F5KiogZmFzdGVyIHRoYW4gdGhlIG90
aGVycy4gSWYgeW91J3ZlIGZvdW5kIGEKY2FzZSB3aGVyZSB0aGlzIGlzbid0
IHRydWUsIHBsZWFzZSByZXBvcnQgYSBidWcuCgoqKl9XaHkgaXNuJ3QgZmVh
dHVyZSBYIGltcGxlbWVudGVkP18qKgoKQWxhY3JpdHR5IGhhcyBtYW55IGdy
ZWF0IGZlYXR1cmVzLCBidXQgbm90IGV2ZXJ5IGZlYXR1cmUgZnJvbSBldmVy
eSBvdGhlcgp0ZXJtaW5hbC4gVGhpcyBjb3VsZCBiZSBmb3IgYSBudW1iZXIg
b2YgcmVhc29ucywgYnV0IHNvbWV0aW1lcyBpdCdzIGp1c3Qgbm90IGEKZ29v
ZCBmaXQgZm9yIEFsYWNyaXR0eS4gVGhpcyBtZWFucyB5b3Ugd29uJ3QgZmlu
ZCB0aGluZ3MgbGlrZSB0YWJzIG9yIHNwbGl0cwood2hpY2ggYXJlIGJlc3Qg
bGVmdCB0byBhIHdpbmRvdyBtYW5hZ2VyIG9yIFt0ZXJtaW5hbCBtdWx0aXBs
ZXhlcl1bdG11eF0pIG5vcgpuaWNldGllcyBsaWtlIGEgR1VJIGNvbmZpZyBl
ZGl0b3IuCgoqKl9tYWNPUyArIHRtdXggKyB2aW0gaXMgc2xvdyEgSSB0aG91
Z2h0IHRoaXMgd2FzIHN1cHBvc2VkIHRvIGJlIGZhc3QhXyoqCgpUaGlzIGFw
cGVhcnMgdG8gYmUgYW4gaXNzdWUgb3V0c2lkZSBvZiB0ZXJtaW5hbCBlbXVs
YXRvcnM7IGVpdGhlciBtYWNPUyBoYXMgYW4KSVBDIHBlcmZvcm1hbmNlIGlz
c3VlLCBvciBlaXRoZXIgdG11eCBvciB2aW0gKG9yIGJvdGgpIGhhdmUgYSBi
dWcuIFRoaXMgc2FtZQppc3N1ZSBjYW4gYmUgc2VlbiBpbiBgaVRlcm0yYCBh
bmQgYFRlcm1pbmFsLmFwcGAuIEkndmUgZm91bmQgdGhhdCBpZiB0bXV4IGlz
CnJ1bm5pbmcgb24gYW5vdGhlciBtYWNoaW5lIHdoaWNoIGlzIGNvbm5lY3Rl
ZCB0byBBbGFjcml0dHkgdmlhIFNTSCwgdGhpcyBpc3N1ZQpkaXNhcHBlYXJz
LiBBY3R1YWwgdGhyb3VnaHB1dCBhbmQgcmVuZGVyaW5nIHBlcmZvcm1hbmNl
IGFyZSBzdGlsbCBiZXR0ZXIgaW4KQWxhY3JpdHR5LgoKKipfTXkgYXJyb3cg
a2V5cyBkb24ndCB3b3JrLl8qKgoKSXQgc291bmRzIGxpa2UgeW91IGRlbGV0
ZWQgc29tZSBrZXkgYmluZGluZ3MgZnJvbSB5b3VyIGNvbmZpZyBmaWxlLiBQ
bGVhc2UKcmVmZXJlbmNlIHRoZSBkZWZhdWx0IGNvbmZpZyBmaWxlIHRvIHJl
c3RvcmUgdGhlbS4KCiMjIElSQwoKQWxhY3JpdHR5IGRpc2N1c3Npb24gY2Fu
IGJlIGZvdW5kIGluIGAjYWxhY3JpdHR5YCBvbiBmcmVlbm9kZS4KCiMjIFdh
eWxhbmQKCldheWxhbmQgaXMgdXNlZCBieSBkZWZhdWx0IG9uIHN5c3RlbXMg
dGhhdCBzdXBwb3J0IGl0LiBVc2luZyBYV2F5bGFuZCBtYXkKY2lyY3VtdmVu
dCBXYXlsYW5kIHNwZWNpZmljIGlzc3VlcyBhbmQgY2FuIGJlIGVuYWJsZWQg
dGhyb3VnaDoKCmBgYHNoCmVudiBXSU5JVF9VTklYX0JBQ0tFTkQ9eDExIGFs
YWNyaXR0eQpgYGAKCiMjIExpY2Vuc2UKCkFsYWNyaXR0eSBpcyByZWxlYXNl
ZCB1bmRlciB0aGUgW0FwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMF0uCgpb
QXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wXTogaHR0cHM6Ly9naXRodWIu
Y29tL2p3aWxtL2FsYWNyaXR0eS9ibG9iL21hc3Rlci9MSUNFTlNFLUFQQUNI
RQpbZmFxXTogaHR0cHM6Ly9naXRodWIuY29tL2p3aWxtL2FsYWNyaXR0eSNm
YXEKW3RtdXhdOiBodHRwczovL2dpdGh1Yi5jb20vdG11eC90bXV4CltXYXls
YW5kIG1ldGEgaXNzdWVdOiBodHRwczovL2dpdGh1Yi5jb20vdG9tYWthL3dp
bml0L2lzc3Vlcy8zMDYK
",,19354,"bGFuZ3VhZ2U6IHJ1c3QKCnNlcnZpY2VzOgogIC0gZG9ja2VyCgphZGRvbnM6
CiAgYXB0OgogICAgcGFja2FnZXM6CiAgICAtIGxpYnhjYi14Zml4ZXMwLWRl
dgoKZ2l0OgogIGRlcHRoOiAxCgpvczoKICAtIGxpbnV4CiAgLSBvc3gKICAt
IHdpbmRvd3MKCnJ1c3Q6CiAgLSAxLjM2LjAKICAtIHN0YWJsZQogIC0gbmln
aHRseQoKbWF0cml4OgogIGZhc3RfZmluaXNoOiB0cnVlCiAgaW5jbHVkZToK
ICAgIC0gaWY6IHRhZyBJUyBwcmVzZW50CiAgICAgIG9zOiBsaW51eAogICAg
ICBydXN0OiBzdGFibGUKICAgICAgZW52OiBBUkNIPWkzODYKICAgIC0gbmFt
ZTogIkNsaXBweSBMaW51eCIKICAgICAgb3M6IGxpbnV4CiAgICAgIGVudjog
Q0xJUFBZPXRydWUKICAgICAgcnVzdDogc3RhYmxlCiAgICAtIG5hbWU6ICJD
bGlwcHkgT1NYIgogICAgICBvczogb3N4CiAgICAgIGVudjogQ0xJUFBZPXRy
dWUKICAgICAgcnVzdDogc3RhYmxlCiAgICAtIG5hbWU6ICJDbGlwcHkgV2lu
ZG93cyIKICAgICAgb3M6IHdpbmRvd3MKICAgICAgZW52OiBDTElQUFk9dHJ1
ZQogICAgICBydXN0OiBzdGFibGUKICAgIC0gbmFtZTogIlJ1c3RmbXQiCiAg
ICAgIG9zOiBsaW51eAogICAgICBlbnY6IFJVU1RGTVQ9dHJ1ZQogICAgICBy
dXN0OiBuaWdodGx5CiAgYWxsb3dfZmFpbHVyZXM6CiAgICAtIHJ1c3Q6IG5p
Z2h0bHkKCmluc3RhbGw6IGNpL2luc3RhbGwuc2gKc2NyaXB0OiBjaS9zY3Jp
cHQuc2gKYmVmb3JlX2RlcGxveTogY2kvYmVmb3JlX2RlcGxveS5zaAoKZGVw
bG95OgogIHByb3ZpZGVyOiByZWxlYXNlcwogIGFwaV9rZXk6CiAgICBzZWN1
cmU6IEc2SlpnQzVxS1p5eEVtdXUyZU1zY0RPNDVpT2hCamlDU0t1TzhneHl3
cW0rNERiTVptN3kyT1NiUUNFbW5JRnFFZ2krRExrckgvQTdlOExEbmdRajNs
QnZSbldrSWNzekc1dWJEbThqc3Fja1hYeGpJMGN5NXE4ako3czV6WlhIMklk
WGlmWTU5S045VjRpSFB3Q0pseUVFN0FqOUpySkxGYVZodmFvd2xTWWliOUR1
RGliRFgvMnU4cVorZ1AyRC9UbnRpQmxGaThTZ2lEUGQ3R3JaV21Oc3hKUjll
ZHlZYkt4OWl6Uk9wKzRxN0tBYTBYcWFrL1p2ZzcySlpuQVJpS1BtQnhFU0Vv
WVlYRmNSZ1JaRDlWdmptUS9pbDZXY0hsR1NxcW4xVFJCdElWbDhMLzFJNS94
Qko2S01lZ1A5SmxoN3libTFKUGZYMTA4VjVkOWE5Q3lxdlJZSHJoYmtIa2Y1
b2t0aXpzZ3cyV3lBTndpQmhFbmdsaU1GdVV5VDA4MjZCRVB0a0E0VGlEN2xR
WHl2Tzc0OUlOZEpzcVVsTUxMdVFOcFU5LzdTaEJjUmFwYkdwNkFqV0g4eXhW
OWNpTk1wTmV4QWF4a3VwWWMyTmFVNkVBQy9DMzRIQXRUZGZOK2d5dnJ0bkYx
SVNyUG1tR2o4WVFSaUJVc2E0VHhnaHNOUGJQSFdBZ01mUjVsRnAzZE9OejBv
SXlkaFcvQUZncG4rN0JWdm9JVzJ6OGhYaVJ0dHNlWkh2NmFrZVNqRkM1dllP
YlIzVWRML05pdXZDalpSaVlyeUwwQmUvckk4M3VnOHhFTFZGQkJjdjRQeGNI
RXNYV1Q3RU1kM1FUaVBvQ3dOS29Tb0JMazhoUEZQQUdSWFVMaVNERkVOS29K
QWM0QTd6SnlNaVlZPQogIHNraXBfY2xlYW51cDogdHJ1ZQogIGZpbGVfZ2xv
YjogdHJ1ZQogIGZpbGU6ICIuL3RhcmdldC9kZXBsb3kvKiIKICBvbjoKICAg
IHRhZ3M6IHRydWUKICAgIHJ1c3Q6IHN0YWJsZQogICAgY29uZGl0aW9uOiAk
Q0xJUFBZICE9IHRydWUKICAgIHJlcG86IGp3aWxtL2FsYWNyaXR0eQo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'leveldb',23405758,b'LevelDB is a fast key-value storage library written at Google that provides an ordered mapping from string keys to string values.',b'C++',129,19351,,1251,False,b'https://api.github.com/repos/google/leveldb/forks',"KipMZXZlbERCIGlzIGEgZmFzdCBrZXktdmFsdWUgc3RvcmFnZSBsaWJyYXJ5
IHdyaXR0ZW4gYXQgR29vZ2xlIHRoYXQgcHJvdmlkZXMgYW4gb3JkZXJlZCBt
YXBwaW5nIGZyb20gc3RyaW5nIGtleXMgdG8gc3RyaW5nIHZhbHVlcy4qKgoK
WyFbQnVpbGQgU3RhdHVzXShodHRwczovL3RyYXZpcy1jaS5vcmcvZ29vZ2xl
L2xldmVsZGIuc3ZnP2JyYW5jaD1tYXN0ZXIpXShodHRwczovL3RyYXZpcy1j
aS5vcmcvZ29vZ2xlL2xldmVsZGIpClshW0J1aWxkIHN0YXR1c10oaHR0cHM6
Ly9jaS5hcHB2ZXlvci5jb20vYXBpL3Byb2plY3RzL3N0YXR1cy9nMmo1ajRy
ZmtkYTZleXc1L2JyYW5jaC9tYXN0ZXI/c3ZnPXRydWUpXShodHRwczovL2Np
LmFwcHZleW9yLmNvbS9wcm9qZWN0L3B3bmFsbC9sZXZlbGRiKQoKQXV0aG9y
czogU2FuamF5IEdoZW1hd2F0IChzYW5qYXlAZ29vZ2xlLmNvbSkgYW5kIEpl
ZmYgRGVhbiAoamVmZkBnb29nbGUuY29tKQoKIyBGZWF0dXJlcwoKICAqIEtl
eXMgYW5kIHZhbHVlcyBhcmUgYXJiaXRyYXJ5IGJ5dGUgYXJyYXlzLgogICog
RGF0YSBpcyBzdG9yZWQgc29ydGVkIGJ5IGtleS4KICAqIENhbGxlcnMgY2Fu
IHByb3ZpZGUgYSBjdXN0b20gY29tcGFyaXNvbiBmdW5jdGlvbiB0byBvdmVy
cmlkZSB0aGUgc29ydCBvcmRlci4KICAqIFRoZSBiYXNpYyBvcGVyYXRpb25z
IGFyZSBgUHV0KGtleSx2YWx1ZSlgLCBgR2V0KGtleSlgLCBgRGVsZXRlKGtl
eSlgLgogICogTXVsdGlwbGUgY2hhbmdlcyBjYW4gYmUgbWFkZSBpbiBvbmUg
YXRvbWljIGJhdGNoLgogICogVXNlcnMgY2FuIGNyZWF0ZSBhIHRyYW5zaWVu
dCBzbmFwc2hvdCB0byBnZXQgYSBjb25zaXN0ZW50IHZpZXcgb2YgZGF0YS4K
ICAqIEZvcndhcmQgYW5kIGJhY2t3YXJkIGl0ZXJhdGlvbiBpcyBzdXBwb3J0
ZWQgb3ZlciB0aGUgZGF0YS4KICAqIERhdGEgaXMgYXV0b21hdGljYWxseSBj
b21wcmVzc2VkIHVzaW5nIHRoZSBbU25hcHB5IGNvbXByZXNzaW9uIGxpYnJh
cnldKGh0dHA6Ly9nb29nbGUuZ2l0aHViLmlvL3NuYXBweS8pLgogICogRXh0
ZXJuYWwgYWN0aXZpdHkgKGZpbGUgc3lzdGVtIG9wZXJhdGlvbnMgZXRjLikg
aXMgcmVsYXllZCB0aHJvdWdoIGEgdmlydHVhbCBpbnRlcmZhY2Ugc28gdXNl
cnMgY2FuIGN1c3RvbWl6ZSB0aGUgb3BlcmF0aW5nIHN5c3RlbSBpbnRlcmFj
dGlvbnMuCgojIERvY3VtZW50YXRpb24KCiAgW0xldmVsREIgbGlicmFyeSBk
b2N1bWVudGF0aW9uXShodHRwczovL2dpdGh1Yi5jb20vZ29vZ2xlL2xldmVs
ZGIvYmxvYi9tYXN0ZXIvZG9jL2luZGV4Lm1kKSBpcyBvbmxpbmUgYW5kIGJ1
bmRsZWQgd2l0aCB0aGUgc291cmNlIGNvZGUuCgojIExpbWl0YXRpb25zCgog
ICogVGhpcyBpcyBub3QgYSBTUUwgZGF0YWJhc2UuICBJdCBkb2VzIG5vdCBo
YXZlIGEgcmVsYXRpb25hbCBkYXRhIG1vZGVsLCBpdCBkb2VzIG5vdCBzdXBw
b3J0IFNRTCBxdWVyaWVzLCBhbmQgaXQgaGFzIG5vIHN1cHBvcnQgZm9yIGlu
ZGV4ZXMuCiAgKiBPbmx5IGEgc2luZ2xlIHByb2Nlc3MgKHBvc3NpYmx5IG11
bHRpLXRocmVhZGVkKSBjYW4gYWNjZXNzIGEgcGFydGljdWxhciBkYXRhYmFz
ZSBhdCBhIHRpbWUuCiAgKiBUaGVyZSBpcyBubyBjbGllbnQtc2VydmVyIHN1
cHBvcnQgYnVpbHRpbiB0byB0aGUgbGlicmFyeS4gIEFuIGFwcGxpY2F0aW9u
IHRoYXQgbmVlZHMgc3VjaCBzdXBwb3J0IHdpbGwgaGF2ZSB0byB3cmFwIHRo
ZWlyIG93biBzZXJ2ZXIgYXJvdW5kIHRoZSBsaWJyYXJ5LgoKIyBHZXR0aW5n
IHRoZSBTb3VyY2UKCmBgYGJhc2gKZ2l0IGNsb25lIC0tcmVjdXJzZS1zdWJt
b2R1bGVzIGh0dHBzOi8vZ2l0aHViLmNvbS9nb29nbGUvbGV2ZWxkYi5naXQK
YGBgCgojIEJ1aWxkaW5nCgpUaGlzIHByb2plY3Qgc3VwcG9ydHMgW0NNYWtl
XShodHRwczovL2NtYWtlLm9yZy8pIG91dCBvZiB0aGUgYm94LgoKIyMjIEJ1
aWxkIGZvciBQT1NJWAoKUXVpY2sgc3RhcnQ6CgpgYGBiYXNoCm1rZGlyIC1w
IGJ1aWxkICYmIGNkIGJ1aWxkCmNtYWtlIC1EQ01BS0VfQlVJTERfVFlQRT1S
ZWxlYXNlIC4uICYmIGNtYWtlIC0tYnVpbGQgLgpgYGAKCiMjIyBCdWlsZGlu
ZyBmb3IgV2luZG93cwoKRmlyc3QgZ2VuZXJhdGUgdGhlIFZpc3VhbCBTdHVk
aW8gMjAxNyBwcm9qZWN0L3NvbHV0aW9uIGZpbGVzOgoKYGBgY21kCm1rZGly
IGJ1aWxkCmNkIGJ1aWxkCmNtYWtlIC1HICJWaXN1YWwgU3R1ZGlvIDE1IiAu
LgpgYGAKVGhlIGRlZmF1bHQgZGVmYXVsdCB3aWxsIGJ1aWxkIGZvciB4ODYu
IEZvciA2NC1iaXQgcnVuOgoKYGBgY21kCmNtYWtlIC1HICJWaXN1YWwgU3R1
ZGlvIDE1IFdpbjY0IiAuLgpgYGAKClRvIGNvbXBpbGUgdGhlIFdpbmRvd3Mg
c29sdXRpb24gZnJvbSB0aGUgY29tbWFuZC1saW5lOgoKYGBgY21kCmRldmVu
diAvYnVpbGQgRGVidWcgbGV2ZWxkYi5zbG4KYGBgCgpvciBvcGVuIGxldmVs
ZGIuc2xuIGluIFZpc3VhbCBTdHVkaW8gYW5kIGJ1aWxkIGZyb20gd2l0aGlu
LgoKUGxlYXNlIHNlZSB0aGUgQ01ha2UgZG9jdW1lbnRhdGlvbiBhbmQgYENN
YWtlTGlzdHMudHh0YCBmb3IgbW9yZSBhZHZhbmNlZCB1c2FnZS4KCiMgQ29u
dHJpYnV0aW5nIHRvIHRoZSBsZXZlbGRiIFByb2plY3QKClRoZSBsZXZlbGRi
IHByb2plY3Qgd2VsY29tZXMgY29udHJpYnV0aW9ucy4gbGV2ZWxkYidzIHBy
aW1hcnkgZ29hbCBpcyB0byBiZQphIHJlbGlhYmxlIGFuZCBmYXN0IGtleS92
YWx1ZSBzdG9yZS4gQ2hhbmdlcyB0aGF0IGFyZSBpbiBsaW5lIHdpdGggdGhl
CmZlYXR1cmVzL2xpbWl0YXRpb25zIG91dGxpbmVkIGFib3ZlLCBhbmQgbWVl
dCB0aGUgcmVxdWlyZW1lbnRzIGJlbG93LAp3aWxsIGJlIGNvbnNpZGVyZWQu
CgpDb250cmlidXRpb24gcmVxdWlyZW1lbnRzOgoKMS4gKipUZXN0ZWQgcGxh
dGZvcm1zIG9ubHkqKi4gV2UgX2dlbmVyYWxseV8gd2lsbCBvbmx5IGFjY2Vw
dCBjaGFuZ2VzIGZvcgogICBwbGF0Zm9ybXMgdGhhdCBhcmUgY29tcGlsZWQg
YW5kIHRlc3RlZC4gVGhpcyBtZWFucyBQT1NJWCAoZm9yIExpbnV4IGFuZAog
ICBtYWNPUykgb3IgV2luZG93cy4gVmVyeSBzbWFsbCBjaGFuZ2VzIHdpbGwg
c29tZXRpbWVzIGJlIGFjY2VwdGVkLCBidXQKICAgY29uc2lkZXIgdGhhdCBt
b3JlIG9mIGFuIGV4Y2VwdGlvbiB0aGFuIHRoZSBydWxlLgoKMi4gKipTdGFi
bGUgQVBJKiouIFdlIHN0cml2ZSB2ZXJ5IGhhcmQgdG8gbWFpbnRhaW4gYSBz
dGFibGUgQVBJLiBDaGFuZ2VzIHRoYXQKICAgcmVxdWlyZSBjaGFuZ2VzIGZv
ciBwcm9qZWN0cyB1c2luZyBsZXZlbGRiIF9taWdodF8gYmUgcmVqZWN0ZWQg
d2l0aG91dAogICBzdWZmaWNpZW50IGJlbmVmaXQgdG8gdGhlIHByb2plY3Qu
CgozLiAqKlRlc3RzKio6IEFsbCBjaGFuZ2VzIG11c3QgYmUgYWNjb21wYW5p
ZWQgYnkgYSBuZXcgKG9yIGNoYW5nZWQpIHRlc3QsIG9yCiAgIGEgc3VmZmlj
aWVudCBleHBsYW5hdGlvbiBhcyB0byB3aHkgYSBuZXcgKG9yIGNoYW5nZWQp
IHRlc3QgaXMgbm90IHJlcXVpcmVkLgoKNC4gKipDb25zaXN0ZW50IFN0eWxl
Kio6IFRoaXMgcHJvamVjdCBjb25mb3JtcyB0byB0aGUKICAgW0dvb2dsZSBD
KysgU3R5bGUgR3VpZGVdKGh0dHBzOi8vZ29vZ2xlLmdpdGh1Yi5pby9zdHls
ZWd1aWRlL2NwcGd1aWRlLmh0bWwpLgogICBUbyBlbnN1cmUgeW91ciBjaGFu
Z2VzIGFyZSBwcm9wZXJseSBmb3JtYXR0ZWQgcGxlYXNlIHJ1bjoKCiAgIGBg
YAogICBjbGFuZy1mb3JtYXQgLWkgLS1zdHlsZT1maWxlIDxmaWxlPgogICBg
YGAKCiMjIFN1Ym1pdHRpbmcgYSBQdWxsIFJlcXVlc3QKCkJlZm9yZSBhbnkg
cHVsbCByZXF1ZXN0IHdpbGwgYmUgYWNjZXB0ZWQgdGhlIGF1dGhvciBtdXN0
IGZpcnN0IHNpZ24gYQpDb250cmlidXRvciBMaWNlbnNlIEFncmVlbWVudCAo
Q0xBKSBhdCBodHRwczovL2NsYS5kZXZlbG9wZXJzLmdvb2dsZS5jb20vLgoK
SW4gb3JkZXIgdG8ga2VlcCB0aGUgY29tbWl0IHRpbWVsaW5lIGxpbmVhcgpb
c3F1YXNoXShodHRwczovL2dpdC1zY20uY29tL2Jvb2svZW4vdjIvR2l0LVRv
b2xzLVJld3JpdGluZy1IaXN0b3J5I1NxdWFzaGluZy1Db21taXRzKQp5b3Vy
IGNoYW5nZXMgZG93biB0byBhIHNpbmdsZSBjb21taXQgYW5kIFtyZWJhc2Vd
KGh0dHBzOi8vZ2l0LXNjbS5jb20vZG9jcy9naXQtcmViYXNlKQpvbiBnb29n
bGUvbGV2ZWxkYi9tYXN0ZXIuIFRoaXMga2VlcHMgdGhlIGNvbW1pdCB0aW1l
bGluZSBsaW5lYXIgYW5kIG1vcmUgZWFzaWx5IHN5bmMnZWQKd2l0aCB0aGUg
aW50ZXJuYWwgcmVwb3NpdG9yeSBhdCBHb29nbGUuIE1vcmUgaW5mb3JtYXRp
b24gYXQgR2l0SHViJ3MKW0Fib3V0IEdpdCByZWJhc2VdKGh0dHBzOi8vaGVs
cC5naXRodWIuY29tL2FydGljbGVzL2Fib3V0LWdpdC1yZWJhc2UvKSBwYWdl
LgoKIyBQZXJmb3JtYW5jZQoKSGVyZSBpcyBhIHBlcmZvcm1hbmNlIHJlcG9y
dCAod2l0aCBleHBsYW5hdGlvbnMpIGZyb20gdGhlIHJ1biBvZiB0aGUKaW5j
bHVkZWQgZGJfYmVuY2ggcHJvZ3JhbS4gIFRoZSByZXN1bHRzIGFyZSBzb21l
d2hhdCBub2lzeSwgYnV0IHNob3VsZApiZSBlbm91Z2ggdG8gZ2V0IGEgYmFs
bHBhcmsgcGVyZm9ybWFuY2UgZXN0aW1hdGUuCgojIyBTZXR1cAoKV2UgdXNl
IGEgZGF0YWJhc2Ugd2l0aCBhIG1pbGxpb24gZW50cmllcy4gIEVhY2ggZW50
cnkgaGFzIGEgMTYgYnl0ZQprZXksIGFuZCBhIDEwMCBieXRlIHZhbHVlLiAg
VmFsdWVzIHVzZWQgYnkgdGhlIGJlbmNobWFyayBjb21wcmVzcyB0bwphYm91
dCBoYWxmIHRoZWlyIG9yaWdpbmFsIHNpemUuCgogICAgTGV2ZWxEQjogICAg
dmVyc2lvbiAxLjEKICAgIERhdGU6ICAgICAgIFN1biBNYXkgIDEgMTI6MTE6
MjYgMjAxMQogICAgQ1BVOiAgICAgICAgNCB4IEludGVsKFIpIENvcmUoVE0p
MiBRdWFkIENQVSAgICBRNjYwMCAgQCAyLjQwR0h6CiAgICBDUFVDYWNoZTog
ICA0MDk2IEtCCiAgICBLZXlzOiAgICAgICAxNiBieXRlcyBlYWNoCiAgICBW
YWx1ZXM6ICAgICAxMDAgYnl0ZXMgZWFjaCAoNTAgYnl0ZXMgYWZ0ZXIgY29t
cHJlc3Npb24pCiAgICBFbnRyaWVzOiAgICAxMDAwMDAwCiAgICBSYXcgU2l6
ZTogICAxMTAuNiBNQiAoZXN0aW1hdGVkKQogICAgRmlsZSBTaXplOiAgNjIu
OSBNQiAoZXN0aW1hdGVkKQoKIyMgV3JpdGUgcGVyZm9ybWFuY2UKClRoZSAi
ZmlsbCIgYmVuY2htYXJrcyBjcmVhdGUgYSBicmFuZCBuZXcgZGF0YWJhc2Us
IGluIGVpdGhlcgpzZXF1ZW50aWFsLCBvciByYW5kb20gb3JkZXIuICBUaGUg
ImZpbGxzeW5jIiBiZW5jaG1hcmsgZmx1c2hlcyBkYXRhCmZyb20gdGhlIG9w
ZXJhdGluZyBzeXN0ZW0gdG8gdGhlIGRpc2sgYWZ0ZXIgZXZlcnkgb3BlcmF0
aW9uOyB0aGUgb3RoZXIKd3JpdGUgb3BlcmF0aW9ucyBsZWF2ZSB0aGUgZGF0
YSBzaXR0aW5nIGluIHRoZSBvcGVyYXRpbmcgc3lzdGVtIGJ1ZmZlcgpjYWNo
ZSBmb3IgYSB3aGlsZS4gIFRoZSAib3ZlcndyaXRlIiBiZW5jaG1hcmsgZG9l
cyByYW5kb20gd3JpdGVzIHRoYXQKdXBkYXRlIGV4aXN0aW5nIGtleXMgaW4g
dGhlIGRhdGFiYXNlLgoKICAgIGZpbGxzZXEgICAgICA6ICAgICAgIDEuNzY1
IG1pY3Jvcy9vcDsgICA2Mi43IE1CL3MKICAgIGZpbGxzeW5jICAgICA6ICAg
ICAyNjguNDA5IG1pY3Jvcy9vcDsgICAgMC40IE1CL3MgKDEwMDAwIG9wcykK
ICAgIGZpbGxyYW5kb20gICA6ICAgICAgIDIuNDYwIG1pY3Jvcy9vcDsgICA0
NS4wIE1CL3MKICAgIG92ZXJ3cml0ZSAgICA6ICAgICAgIDIuMzgwIG1pY3Jv
cy9vcDsgICA0Ni41IE1CL3MKCkVhY2ggIm9wIiBhYm92ZSBjb3JyZXNwb25k
cyB0byBhIHdyaXRlIG9mIGEgc2luZ2xlIGtleS92YWx1ZSBwYWlyLgpJLmUu
LCBhIHJhbmRvbSB3cml0ZSBiZW5jaG1hcmsgZ29lcyBhdCBhcHByb3hpbWF0
ZWx5IDQwMCwwMDAgd3JpdGVzIHBlciBzZWNvbmQuCgpFYWNoICJmaWxsc3lu
YyIgb3BlcmF0aW9uIGNvc3RzIG11Y2ggbGVzcyAoMC4zIG1pbGxpc2Vjb25k
KQp0aGFuIGEgZGlzayBzZWVrICh0eXBpY2FsbHkgMTAgbWlsbGlzZWNvbmRz
KS4gIFdlIHN1c3BlY3QgdGhhdCB0aGlzIGlzCmJlY2F1c2UgdGhlIGhhcmQg
ZGlzayBpdHNlbGYgaXMgYnVmZmVyaW5nIHRoZSB1cGRhdGUgaW4gaXRzIG1l
bW9yeSBhbmQKcmVzcG9uZGluZyBiZWZvcmUgdGhlIGRhdGEgaGFzIGJlZW4g
d3JpdHRlbiB0byB0aGUgcGxhdHRlci4gIFRoaXMgbWF5Cm9yIG1heSBub3Qg
YmUgc2FmZSBiYXNlZCBvbiB3aGV0aGVyIG9yIG5vdCB0aGUgaGFyZCBkaXNr
IGhhcyBlbm91Z2gKcG93ZXIgdG8gc2F2ZSBpdHMgbWVtb3J5IGluIHRoZSBl
dmVudCBvZiBhIHBvd2VyIGZhaWx1cmUuCgojIyBSZWFkIHBlcmZvcm1hbmNl
CgpXZSBsaXN0IHRoZSBwZXJmb3JtYW5jZSBvZiByZWFkaW5nIHNlcXVlbnRp
YWxseSBpbiBib3RoIHRoZSBmb3J3YXJkCmFuZCByZXZlcnNlIGRpcmVjdGlv
biwgYW5kIGFsc28gdGhlIHBlcmZvcm1hbmNlIG9mIGEgcmFuZG9tIGxvb2t1
cC4KTm90ZSB0aGF0IHRoZSBkYXRhYmFzZSBjcmVhdGVkIGJ5IHRoZSBiZW5j
aG1hcmsgaXMgcXVpdGUgc21hbGwuClRoZXJlZm9yZSB0aGUgcmVwb3J0IGNo
YXJhY3Rlcml6ZXMgdGhlIHBlcmZvcm1hbmNlIG9mIGxldmVsZGIgd2hlbiB0
aGUKd29ya2luZyBzZXQgZml0cyBpbiBtZW1vcnkuICBUaGUgY29zdCBvZiBy
ZWFkaW5nIGEgcGllY2Ugb2YgZGF0YSB0aGF0CmlzIG5vdCBwcmVzZW50IGlu
IHRoZSBvcGVyYXRpbmcgc3lzdGVtIGJ1ZmZlciBjYWNoZSB3aWxsIGJlIGRv
bWluYXRlZApieSB0aGUgb25lIG9yIHR3byBkaXNrIHNlZWtzIG5lZWRlZCB0
byBmZXRjaCB0aGUgZGF0YSBmcm9tIGRpc2suCldyaXRlIHBlcmZvcm1hbmNl
IHdpbGwgYmUgbW9zdGx5IHVuYWZmZWN0ZWQgYnkgd2hldGhlciBvciBub3Qg
dGhlCndvcmtpbmcgc2V0IGZpdHMgaW4gbWVtb3J5LgoKICAgIHJlYWRyYW5k
b20gIDogMTYuNjc3IG1pY3Jvcy9vcDsgIChhcHByb3hpbWF0ZWx5IDYwLDAw
MCByZWFkcyBwZXIgc2Vjb25kKQogICAgcmVhZHNlcSAgICAgOiAgMC40NzYg
bWljcm9zL29wOyAgMjMyLjMgTUIvcwogICAgcmVhZHJldmVyc2UgOiAgMC43
MjQgbWljcm9zL29wOyAgMTUyLjkgTUIvcwoKTGV2ZWxEQiBjb21wYWN0cyBp
dHMgdW5kZXJseWluZyBzdG9yYWdlIGRhdGEgaW4gdGhlIGJhY2tncm91bmQg
dG8KaW1wcm92ZSByZWFkIHBlcmZvcm1hbmNlLiAgVGhlIHJlc3VsdHMgbGlz
dGVkIGFib3ZlIHdlcmUgZG9uZQppbW1lZGlhdGVseSBhZnRlciBhIGxvdCBv
ZiByYW5kb20gd3JpdGVzLiAgVGhlIHJlc3VsdHMgYWZ0ZXIKY29tcGFjdGlv
bnMgKHdoaWNoIGFyZSB1c3VhbGx5IHRyaWdnZXJlZCBhdXRvbWF0aWNhbGx5
KSBhcmUgYmV0dGVyLgoKICAgIHJlYWRyYW5kb20gIDogMTEuNjAyIG1pY3Jv
cy9vcDsgIChhcHByb3hpbWF0ZWx5IDg1LDAwMCByZWFkcyBwZXIgc2Vjb25k
KQogICAgcmVhZHNlcSAgICAgOiAgMC40MjMgbWljcm9zL29wOyAgMjYxLjgg
TUIvcwogICAgcmVhZHJldmVyc2UgOiAgMC42NjMgbWljcm9zL29wOyAgMTY2
LjkgTUIvcwoKU29tZSBvZiB0aGUgaGlnaCBjb3N0IG9mIHJlYWRzIGNvbWVz
IGZyb20gcmVwZWF0ZWQgZGVjb21wcmVzc2lvbiBvZiBibG9ja3MKcmVhZCBm
cm9tIGRpc2suICBJZiB3ZSBzdXBwbHkgZW5vdWdoIGNhY2hlIHRvIHRoZSBs
ZXZlbGRiIHNvIGl0IGNhbiBob2xkIHRoZQp1bmNvbXByZXNzZWQgYmxvY2tz
IGluIG1lbW9yeSwgdGhlIHJlYWQgcGVyZm9ybWFuY2UgaW1wcm92ZXMgYWdh
aW46CgogICAgcmVhZHJhbmRvbSAgOiA5Ljc3NSBtaWNyb3Mvb3A7ICAoYXBw
cm94aW1hdGVseSAxMDAsMDAwIHJlYWRzIHBlciBzZWNvbmQgYmVmb3JlIGNv
bXBhY3Rpb24pCiAgICByZWFkcmFuZG9tICA6IDUuMjE1IG1pY3Jvcy9vcDsg
IChhcHByb3hpbWF0ZWx5IDE5MCwwMDAgcmVhZHMgcGVyIHNlY29uZCBhZnRl
ciBjb21wYWN0aW9uKQoKIyMgUmVwb3NpdG9yeSBjb250ZW50cwoKU2VlIFtk
b2MvaW5kZXgubWRdKGRvYy9pbmRleC5tZCkgZm9yIG1vcmUgZXhwbGFuYXRp
b24uIFNlZQpbZG9jL2ltcGwubWRdKGRvYy9pbXBsLm1kKSBmb3IgYSBicmll
ZiBvdmVydmlldyBvZiB0aGUgaW1wbGVtZW50YXRpb24uCgpUaGUgcHVibGlj
IGludGVyZmFjZSBpcyBpbiBpbmNsdWRlL2xldmVsZGIvKi5oLiAgQ2FsbGVy
cyBzaG91bGQgbm90IGluY2x1ZGUgb3IKcmVseSBvbiB0aGUgZGV0YWlscyBv
ZiBhbnkgb3RoZXIgaGVhZGVyIGZpbGVzIGluIHRoaXMgcGFja2FnZS4gIFRo
b3NlCmludGVybmFsIEFQSXMgbWF5IGJlIGNoYW5nZWQgd2l0aG91dCB3YXJu
aW5nLgoKR3VpZGUgdG8gaGVhZGVyIGZpbGVzOgoKKiAqKmluY2x1ZGUvbGV2
ZWxkYi9kYi5oKio6IE1haW4gaW50ZXJmYWNlIHRvIHRoZSBEQjogU3RhcnQg
aGVyZS4KCiogKippbmNsdWRlL2xldmVsZGIvb3B0aW9ucy5oKio6IENvbnRy
b2wgb3ZlciB0aGUgYmVoYXZpb3Igb2YgYW4gZW50aXJlIGRhdGFiYXNlLAph
bmQgYWxzbyBjb250cm9sIG92ZXIgdGhlIGJlaGF2aW9yIG9mIGluZGl2aWR1
YWwgcmVhZHMgYW5kIHdyaXRlcy4KCiogKippbmNsdWRlL2xldmVsZGIvY29t
cGFyYXRvci5oKio6IEFic3RyYWN0aW9uIGZvciB1c2VyLXNwZWNpZmllZCBj
b21wYXJpc29uIGZ1bmN0aW9uLgpJZiB5b3Ugd2FudCBqdXN0IGJ5dGV3aXNl
IGNvbXBhcmlzb24gb2Yga2V5cywgeW91IGNhbiB1c2UgdGhlIGRlZmF1bHQK
Y29tcGFyYXRvciwgYnV0IGNsaWVudHMgY2FuIHdyaXRlIHRoZWlyIG93biBj
b21wYXJhdG9yIGltcGxlbWVudGF0aW9ucyBpZiB0aGV5CndhbnQgY3VzdG9t
IG9yZGVyaW5nIChlLmcuIHRvIGhhbmRsZSBkaWZmZXJlbnQgY2hhcmFjdGVy
IGVuY29kaW5ncywgZXRjLikuCgoqICoqaW5jbHVkZS9sZXZlbGRiL2l0ZXJh
dG9yLmgqKjogSW50ZXJmYWNlIGZvciBpdGVyYXRpbmcgb3ZlciBkYXRhLiBZ
b3UgY2FuIGdldAphbiBpdGVyYXRvciBmcm9tIGEgREIgb2JqZWN0LgoKKiAq
KmluY2x1ZGUvbGV2ZWxkYi93cml0ZV9iYXRjaC5oKio6IEludGVyZmFjZSBm
b3IgYXRvbWljYWxseSBhcHBseWluZyBtdWx0aXBsZQp1cGRhdGVzIHRvIGEg
ZGF0YWJhc2UuCgoqICoqaW5jbHVkZS9sZXZlbGRiL3NsaWNlLmgqKjogQSBz
aW1wbGUgbW9kdWxlIGZvciBtYWludGFpbmluZyBhIHBvaW50ZXIgYW5kIGEK
bGVuZ3RoIGludG8gc29tZSBvdGhlciBieXRlIGFycmF5LgoKKiAqKmluY2x1
ZGUvbGV2ZWxkYi9zdGF0dXMuaCoqOiBTdGF0dXMgaXMgcmV0dXJuZWQgZnJv
bSBtYW55IG9mIHRoZSBwdWJsaWMgaW50ZXJmYWNlcwphbmQgaXMgdXNlZCB0
byByZXBvcnQgc3VjY2VzcyBhbmQgdmFyaW91cyBraW5kcyBvZiBlcnJvcnMu
CgoqICoqaW5jbHVkZS9sZXZlbGRiL2Vudi5oKio6CkFic3RyYWN0aW9uIG9m
IHRoZSBPUyBlbnZpcm9ubWVudC4gIEEgcG9zaXggaW1wbGVtZW50YXRpb24g
b2YgdGhpcyBpbnRlcmZhY2UgaXMKaW4gdXRpbC9lbnZfcG9zaXguY2MuCgoq
ICoqaW5jbHVkZS9sZXZlbGRiL3RhYmxlLmgsIGluY2x1ZGUvbGV2ZWxkYi90
YWJsZV9idWlsZGVyLmgqKjogTG93ZXItbGV2ZWwgbW9kdWxlcyB0aGF0IG1v
c3QKY2xpZW50cyBwcm9iYWJseSB3b24ndCB1c2UgZGlyZWN0bHkuCg==
",,19351,"IyBCdWlsZCBtYXRyaXggLyBlbnZpcm9ubWVudCB2YXJpYWJsZXMgYXJlIGV4
cGxhaW5lZCBvbjoKIyBodHRwOi8vYWJvdXQudHJhdmlzLWNpLm9yZy9kb2Nz
L3VzZXIvYnVpbGQtY29uZmlndXJhdGlvbi8KIyBUaGlzIGZpbGUgY2FuIGJl
IHZhbGlkYXRlZCBvbjogaHR0cDovL2xpbnQudHJhdmlzLWNpLm9yZy8KCmxh
bmd1YWdlOiBjcHAKZGlzdDogYmlvbmljCm9zeF9pbWFnZTogeGNvZGUxMC4z
Cgpjb21waWxlcjoKLSBnY2MKLSBjbGFuZwpvczoKLSBsaW51eAotIG9zeAoK
ZW52OgotIEJVSUxEX1RZUEU9RGVidWcKLSBCVUlMRF9UWVBFPVJlbFdpdGhE
ZWJJbmZvCgphZGRvbnM6CiAgYXB0OgogICAgc291cmNlczoKICAgIC0gc291
cmNlbGluZTogJ2RlYiBodHRwOi8vYXB0Lmxsdm0ub3JnL2Jpb25pYy8gbGx2
bS10b29sY2hhaW4tYmlvbmljLTkgbWFpbicKICAgICAga2V5X3VybDogJ2h0
dHBzOi8vYXB0Lmxsdm0ub3JnL2xsdm0tc25hcHNob3QuZ3BnLmtleScKICAg
IC0gc291cmNlbGluZTogJ3BwYTp1YnVudHUtdG9vbGNoYWluLXIvdGVzdCcK
ICAgIHBhY2thZ2VzOgogICAgLSBjbGFuZy05CiAgICAtIGNtYWtlCiAgICAt
IGdjYy05CiAgICAtIGcrKy05CiAgICAtIGxpYmdvb2dsZS1wZXJmdG9vbHMt
ZGV2CiAgICAtIGxpYmt5b3RvY2FiaW5ldC1kZXYKICAgIC0gbGlic25hcHB5
LWRldgogICAgLSBsaWJzcWxpdGUzLWRldgogICAgLSBuaW5qYS1idWlsZAog
IGhvbWVicmV3OgogICAgcGFja2FnZXM6CiAgICAtIGNtYWtlCiAgICAtIGNy
YzMyYwogICAgLSBnY2NAOQogICAgLSBncGVyZnRvb2xzCiAgICAtIGt5b3Rv
LWNhYmluZXQKICAgIC0gbGx2bUA5CiAgICAtIG5pbmphCiAgICAtIHNuYXBw
eQogICAgLSBzcWxpdGUzCiAgICB1cGRhdGU6IHRydWUKCmluc3RhbGw6CiMg
VGhlIGZvbGxvd2luZyBIb21lYnJldyBwYWNrYWdlcyBhcmVuJ3QgbGlua2Vk
IGJ5IGRlZmF1bHQsIGFuZCBuZWVkIHRvIGJlCiMgcHJlcGVuZGVkIHRvIHRo
ZSBwYXRoIGV4cGxpY2l0bHkuCi0gaWYgWyAiJFRSQVZJU19PU19OQU1FIiA9
ICJvc3giIF07IHRoZW4KICAgIGV4cG9ydCBQQVRIPSIkKGJyZXcgLS1wcmVm
aXggbGx2bSkvYmluOiRQQVRIIjsKICBmaQojIC91c3IvYmluL2djYyBwb2lu
dHMgdG8gYW4gb2xkZXIgY29tcGlsZXIgb24gYm90aCBMaW51eCBhbmQgbWFj
T1MuCi0gaWYgWyAiJENYWCIgPSAiZysrIiBdOyB0aGVuIGV4cG9ydCBDWFg9
ImcrKy05IiBDQz0iZ2NjLTkiOyBmaQojIC91c3IvYmluL2NsYW5nIHBvaW50
cyB0byBhbiBvbGRlciBjb21waWxlciBvbiBib3RoIExpbnV4IGFuZCBtYWNP
Uy4KIwojIEhvbWVicmV3J3MgbGx2bSBwYWNrYWdlIGRvZXNuJ3Qgc2hpcCBh
IHZlcnNpb25lZCBjbGFuZysrIGJpbmFyeSwgc28gdGhlIHZhbHVlcwojIGJl
bG93IGRvbid0IHdvcmsgb24gbWFjT1MuIEZvcnR1bmF0ZWx5LCB0aGUgcGF0
aCBjaGFuZ2UgYWJvdmUgbWFrZXMgdGhlCiMgZGVmYXVsdCB2YWx1ZXMgKGNs
YW5nIGFuZCBjbGFuZysrKSByZXNvbHZlIHRvIHRoZSBjb3JyZWN0IGNvbXBp
bGVyIG9uIG1hY09TLgotIGlmIFsgIiRUUkFWSVNfT1NfTkFNRSIgPSAibGlu
dXgiIF07IHRoZW4KICAgIGlmIFsgIiRDWFgiID0gImNsYW5nKysiIF07IHRo
ZW4gZXhwb3J0IENYWD0iY2xhbmcrKy05IiBDQz0iY2xhbmctOSI7IGZpOwog
IGZpCi0gZWNobyAke0NDfQotIGVjaG8gJHtDWFh9Ci0gJHtDWFh9IC0tdmVy
c2lvbgotIGNtYWtlIC0tdmVyc2lvbgoKYmVmb3JlX3NjcmlwdDoKLSBta2Rp
ciAtcCBidWlsZCAmJiBjZCBidWlsZAotIGNtYWtlIC4uIC1HIE5pbmphIC1E
Q01BS0VfQlVJTERfVFlQRT0kQlVJTERfVFlQRQogICAgLURDTUFLRV9JTlNU
QUxMX1BSRUZJWD0kSE9NRS8ubG9jYWwKLSBjbWFrZSAtLWJ1aWxkIC4KLSBj
ZCAuLgoKc2NyaXB0OgotIGNkIGJ1aWxkICYmIGN0ZXN0IC0tdmVyYm9zZSAm
JiBjZCAuLgotICJpZiBbIC1mIGJ1aWxkL2RiX2JlbmNoIF0gOyB0aGVuIGJ1
aWxkL2RiX2JlbmNoIDsgZmkiCi0gImlmIFsgLWYgYnVpbGQvZGJfYmVuY2hf
c3FsaXRlMyBdIDsgdGhlbiBidWlsZC9kYl9iZW5jaF9zcWxpdGUzIDsgZmki
Ci0gImlmIFsgLWYgYnVpbGQvZGJfYmVuY2hfdHJlZV9kYiBdIDsgdGhlbiBi
dWlsZC9kYl9iZW5jaF90cmVlX2RiIDsgZmkiCi0gY2QgYnVpbGQgJiYgY21h
a2UgLS1idWlsZCAuIC0tdGFyZ2V0IGluc3RhbGwK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
