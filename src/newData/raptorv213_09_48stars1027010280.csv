name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'awesome-pentest',22585805,"b'A collection of awesome penetration testing resources, tools and other shiny things'",,9,10274,,982,False,b'https://api.github.com/repos/enaqx/awesome-pentest/forks',"IyBBd2Vzb21lIFBlbmV0cmF0aW9uIFRlc3RpbmcgWyFbQXdlc29tZV0oaHR0
cHM6Ly9hd2Vzb21lLnJlL2JhZGdlLWZsYXQyLnN2ZyldKGh0dHBzOi8vYXdl
c29tZS5yZSkKCj4gQSBjb2xsZWN0aW9uIG9mIGF3ZXNvbWUgcGVuZXRyYXRp
b24gdGVzdGluZyByZXNvdXJjZXMuCgpbUGVuZXRyYXRpb24gdGVzdGluZ10o
aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvUGVuZXRyYXRpb25fdGVz
dCkgaXMgdGhlIHByYWN0aWNlIG9mIGxhdW5jaGluZyBhdXRob3JpemVkLCBz
aW11bGF0ZWQgYXR0YWNrcyBhZ2FpbnN0IGNvbXB1dGVyIHN5c3RlbXMgYW5k
IHRoZWlyIHBoeXNpY2FsIGluZnJhc3RydWN0dXJlIHRvIGV4cG9zZSBwb3Rl
bnRpYWwgc2VjdXJpdHkgd2Vha25lc3NlcyBhbmQgdnVsbmVyYWJpbGl0aWVz
LgoKWW91ciBjb250cmlidXRpb25zIGFuZCBzdWdnZXN0aW9ucyBhcmUgaGVh
cnRpbHnimaUgd2VsY29tZS4gKOKcv+KXleKAv+KXlSkuIFBsZWFzZSBjaGVj
ayB0aGUgW0NvbnRyaWJ1dGluZyBHdWlkZWxpbmVzXShDT05UUklCVVRJTkcu
bWQpIGZvciBtb3JlIGRldGFpbHMuIFRoaXMgd29yayBpcyBsaWNlbnNlZCB1
bmRlciBhIFtDcmVhdGl2ZSBDb21tb25zIEF0dHJpYnV0aW9uIDQuMCBJbnRl
cm5hdGlvbmFsIExpY2Vuc2VdKGh0dHBzOi8vY3JlYXRpdmVjb21tb25zLm9y
Zy9saWNlbnNlcy9ieS80LjAvKS4KCltUaGlzIHByb2plY3QgaXMgc3VwcG9y
dGVkIGJ5IE5ldHNwYXJrZXIgV2ViIEFwcGxpY2F0aW9uIFNlY3VyaXR5IFNj
YW5uZXJdKGh0dHBzOi8vd3d3Lm5ldHNwYXJrZXIuY29tLz91dG1fc291cmNl
PWdpdGh1Yi5jb20mdXRtX2NvbnRlbnQ9YXdlc29tZStwZW5ldHJhdGlvbit0
ZXN0aW5nJnV0bV9tZWRpdW09cmVmZXJyYWwmdXRtX2NhbXBhaWduPWdlbmVy
aWMrYWR2ZXJ0KQoKIyMgQ29udGVudHMKCiogW0Fub255bWl0eSBUb29sc10o
I2Fub255bWl0eS10b29scykKKiBbQW50aS12aXJ1cyBFdmFzaW9uIFRvb2xz
XSgjYW50aS12aXJ1cy1ldmFzaW9uLXRvb2xzKQoqIFtCb29rc10oI2Jvb2tz
KQogICogW0RlZmVuc2l2ZSBQcm9ncmFtbWluZyBCb29rc10oI2RlZmVuc2l2
ZS1wcm9ncmFtbWluZy1ib29rcykKICAqIFtIYWNrZXIncyBIYW5kYm9vayBT
ZXJpZXMgQm9va3NdKCNoYWNrZXJzLWhhbmRib29rLXNlcmllcy1ib29rcykK
ICAqIFtMb2NrIFBpY2tpbmcgQm9va3NdKCNsb2NrLXBpY2tpbmctYm9va3Mp
CiAgKiBbTWFsd2FyZSBBbmFseXNpcyBCb29rc10oI21hbHdhcmUtYW5hbHlz
aXMtYm9va3MpCiAgKiBbTmV0d29yayBBbmFseXNpcyBCb29rc10oI25ldHdv
cmstYW5hbHlzaXMtYm9va3MpCiAgKiBbUGVuZXRyYXRpb24gVGVzdGluZyBC
b29rc10oI3BlbmV0cmF0aW9uLXRlc3RpbmctYm9va3MpCiAgKiBbUmV2ZXJz
ZSBFbmdpbmVlcmluZyBCb29rc10oI3JldmVyc2UtZW5naW5lZXJpbmctYm9v
a3MpCiAgKiBbU29jaWFsIEVuZ2luZWVyaW5nIEJvb2tzXSgjc29jaWFsLWVu
Z2luZWVyaW5nLWJvb2tzKQogICogW1dpbmRvd3MgQm9va3NdKCN3aW5kb3dz
LWJvb2tzKQoqIFtDVEYgVG9vbHNdKCNjdGYtdG9vbHMpCiogW0NvbGxhYm9y
YXRpb24gVG9vbHNdKCNjb2xsYWJvcmF0aW9uLXRvb2xzKQoqIFtDb25mZXJl
bmNlcyBhbmQgRXZlbnRzXSgjY29uZmVyZW5jZXMtYW5kLWV2ZW50cykKICAq
IFtBc2lhXSgjYXNpYSkKICAqIFtFdXJvcGVdKCNldXJvcGUpCiAgKiBbTm9y
dGggQW1lcmljYV0oI25vcnRoLWFtZXJpY2EpCiAgKiBbU291dGggQW1lcmlj
YV0oI3NvdXRoLWFtZXJpY2EpCiAgKiBbWmVhbGFuZGlhXSgjemVhbGFuZGlh
KQoqIFtEb2NrZXIgQ29udGFpbmVyc10oI2RvY2tlci1jb250YWluZXJzKQog
ICogW0RvY2tlciBDb250YWluZXJzIG9mIEludGVudGlvbmFsbHkgVnVsbmVy
YWJsZSBTeXN0ZW1zXSgjZG9ja2VyLWNvbnRhaW5lcnMtb2YtaW50ZW50aW9u
YWxseS12dWxuZXJhYmxlLXN5c3RlbXMpCiAgKiBbRG9ja2VyIENvbnRhaW5l
cnMgb2YgUGVuZXRyYXRpb24gVGVzdGluZyBEaXN0cmlidXRpb25zIGFuZCBU
b29sc10oI2RvY2tlci1jb250YWluZXJzLW9mLXBlbmV0cmF0aW9uLXRlc3Rp
bmctZGlzdHJpYnV0aW9ucy1hbmQtdG9vbHMpCiogW0ZpbGUgRm9ybWF0IEFu
YWx5c2lzIFRvb2xzXSgjZmlsZS1mb3JtYXQtYW5hbHlzaXMtdG9vbHMpCiog
W0dOVS9MaW51eCBVdGlsaXRpZXNdKCNnbnVsaW51eC11dGlsaXRpZXMpCiog
W0hhc2ggQ3JhY2tpbmcgVG9vbHNdKCNoYXNoLWNyYWNraW5nLXRvb2xzKQoq
IFtIZXggRWRpdG9yc10oI2hleC1lZGl0b3JzKQoqIFtJbmR1c3RyaWFsIENv
bnRyb2wgYW5kIFNDQURBIFN5c3RlbXNdKCNpbmR1c3RyaWFsLWNvbnRyb2wt
YW5kLXNjYWRhLXN5c3RlbXMpCiogW011bHRpLXBhcmFkaWdtIEZyYW1ld29y
a3NdKCNtdWx0aS1wYXJhZGlnbS1mcmFtZXdvcmtzKQoqIFtOZXR3b3JrIFRv
b2xzXSgjbmV0d29yay10b29scykKICAqIFtERG9TIFRvb2xzXSgjZGRvcy10
b29scykKICAqIFtFeGZpbHRyYXRpb24gVG9vbHNdKCNleGZpbHRyYXRpb24t
dG9vbHMpCiAgKiBbTmV0d29yayBSZWNvbm5haXNzYW5jZSBUb29sc10oI25l
dHdvcmstcmVjb25uYWlzc2FuY2UtdG9vbHMpCiAgKiBbUHJvdG9jb2wgQW5h
bHl6ZXJzIGFuZCBTbmlmZmVyc10oI3Byb3RvY29sLWFuYWx5emVycy1hbmQt
c25pZmZlcnMpCiAgKiBbTmV0d29yayBUcmFmZmljIFJlcGxheSBhbmQgRWRp
dGluZyBUb29sc10oI25ldHdvcmstdHJhZmZpYy1yZXBsYXktYW5kLWVkaXRp
bmctdG9vbHMpCiAgKiBbUHJveGllcyBhbmQgTWFjaGluZS1pbi10aGUtTWlk
ZGxlIChNSVRNKSBUb29sc10oI3Byb3hpZXMtYW5kLW1hY2hpbmUtaW4tdGhl
LW1pZGRsZS1taXRtLXRvb2xzKQogICogW1RyYW5zcG9ydCBMYXllciBTZWN1
cml0eSBUb29sc10oI3RyYW5zcG9ydC1sYXllci1zZWN1cml0eS10b29scykK
ICAqIFtXaXJlbGVzcyBOZXR3b3JrIFRvb2xzXSgjd2lyZWxlc3MtbmV0d29y
ay10b29scykKKiBbTmV0d29yayBWdWxuZXJhYmlsaXR5IFNjYW5uZXJzXSgj
bmV0d29yay12dWxuZXJhYmlsaXR5LXNjYW5uZXJzKQogICogW1dlYiBWdWxu
ZXJhYmlsaXR5IFNjYW5uZXJzXSgjd2ViLXZ1bG5lcmFiaWxpdHktc2Nhbm5l
cnMpCiogW09TSU5UIFRvb2xzXSgjb3NpbnQtdG9vbHMpCiAgKiBbRGF0YSBi
cm9rZXIgYW5kIHNlYXJjaCBlbmdpbmUgc2VydmljZXNdKCNkYXRhLWJyb2tl
ci1hbmQtc2VhcmNoLWVuZ2luZS1zZXJ2aWNlcykKICAqIFtEb3JraW5nIHRv
b2xzXSgjZG9ya2luZy10b29scykKICAqIFtFbWFpbCBzZWFyY2ggYW5kIGFu
YWx5c2lzIHRvb2xzXSgjZW1haWwtc2VhcmNoLWFuZC1hbmFseXNpcy10b29s
cykKICAqIFtNZXRhZGF0YSBoYXJ2ZXN0aW5nIGFuZCBhbmFseXNpc10oI21l
dGFkYXRhLWhhcnZlc3RpbmctYW5kLWFuYWx5c2lzKQogICogW05ldHdvcmsg
ZGV2aWNlIGRpc2NvdmVyeSB0b29sc10oI25ldHdvcmstZGV2aWNlLWRpc2Nv
dmVyeS10b29scykKICAqIFtTb3VyY2UgY29kZSByZXBvc2l0b3J5IHNlYXJj
aGluZyB0b29sc10oI3NvdXJjZS1jb2RlLXJlcG9zaXRvcnktc2VhcmNoaW5n
LXRvb2xzKQoqIFtPbmxpbmUgUmVzb3VyY2VzXSgjb25saW5lLXJlc291cmNl
cykKICAqIFtPbmxpbmUgQ29kZSBTYW1wbGVzIGFuZCBFeGFtcGxlc10oI29u
bGluZS1jb2RlLXNhbXBsZXMtYW5kLWV4YW1wbGVzKQogICogW09ubGluZSBF
eHBsb2l0IERldmVsb3BtZW50IFJlc291cmNlc10oI29ubGluZS1leHBsb2l0
LWRldmVsb3BtZW50LXJlc291cmNlcykKICAqIFtPbmxpbmUgTG9jayBQaWNr
aW5nIFJlc291cmNlc10oI29ubGluZS1sb2NrLXBpY2tpbmctcmVzb3VyY2Vz
KQogICogW09ubGluZSBPcGVuIFNvdXJjZXMgSW50ZWxsaWdlbmNlIChPU0lO
VCkgUmVzb3VyY2VzXSgjb25saW5lLW9wZW4tc291cmNlcy1pbnRlbGxpZ2Vu
Y2Utb3NpbnQtcmVzb3VyY2VzKQogICogW09ubGluZSBPcGVyYXRpbmcgU3lz
dGVtcyBSZXNvdXJjZXNdKCNvbmxpbmUtb3BlcmF0aW5nLXN5c3RlbXMtcmVz
b3VyY2VzKQogICogW09ubGluZSBQZW5ldHJhdGlvbiBUZXN0aW5nIFJlc291
cmNlc10oI29ubGluZS1wZW5ldHJhdGlvbi10ZXN0aW5nLXJlc291cmNlcykK
ICAqIFtPbmxpbmUgU29jaWFsIEVuZ2luZWVyaW5nIFJlc291cmNlc10oI29u
bGluZS1zb2NpYWwtZW5naW5lZXJpbmctcmVzb3VyY2VzKQogICogW090aGVy
IExpc3RzIE9ubGluZV0oI290aGVyLWxpc3RzLW9ubGluZSkKICAqIFtQZW5l
dHJhdGlvbiBUZXN0aW5nIFJlcG9ydCBUZW1wbGF0ZXNdKCNwZW5ldHJhdGlv
bi10ZXN0aW5nLXJlcG9ydC10ZW1wbGF0ZXMpCiogW09wZXJhdGluZyBTeXN0
ZW0gRGlzdHJpYnV0aW9uc10oI29wZXJhdGluZy1zeXN0ZW0tZGlzdHJpYnV0
aW9ucykKKiBbUGVyaW9kaWNhbHNdKCNwZXJpb2RpY2FscykKKiBbUGh5c2lj
YWwgQWNjZXNzIFRvb2xzXSgjcGh5c2ljYWwtYWNjZXNzLXRvb2xzKQoqIFtS
ZXZlcnNlIEVuZ2luZWVyaW5nIFRvb2xzXSgjcmV2ZXJzZS1lbmdpbmVlcmlu
Zy10b29scykKKiBbU2VjdXJpdHkgRWR1Y2F0aW9uIENvdXJzZXNdKCNzZWN1
cml0eS1lZHVjYXRpb24tY291cnNlcykKKiBbU2lkZS1jaGFubmVsIFRvb2xz
XSgjc2lkZS1jaGFubmVsLXRvb2xzKQoqIFtTb2NpYWwgRW5naW5lZXJpbmcg
VG9vbHNdKCNzb2NpYWwtZW5naW5lZXJpbmctdG9vbHMpCiogW1N0YXRpYyBB
bmFseXplcnNdKCNzdGF0aWMtYW5hbHl6ZXJzKQoqIFtWdWxuZXJhYmlsaXR5
IERhdGFiYXNlc10oI3Z1bG5lcmFiaWxpdHktZGF0YWJhc2VzKQoqIFtXZWIg
RXhwbG9pdGF0aW9uXSgjd2ViLWV4cGxvaXRhdGlvbikKKiBbQW5kcm9pZCBV
dGlsaXRpZXNdKCNhbmRyb2lkLXV0aWxpdGllcykKKiBbV2luZG93cyBVdGls
aXRpZXNdKCN3aW5kb3dzLXV0aWxpdGllcykKKiBbbWFjT1MgVXRpbGl0aWVz
XSgjbWFjb3MtdXRpbGl0aWVzKQoKIyMgQW5vbnltaXR5IFRvb2xzCgoqIFtJ
MlBdKGh0dHBzOi8vZ2V0aTJwLm5ldC8pIC0gVGhlIEludmlzaWJsZSBJbnRl
cm5ldCBQcm9qZWN0LgoqIFtNZXRhZGF0YSBBbm9ueW1pemF0aW9uIFRvb2xr
aXQgKE1BVCldKGh0dHBzOi8vMHhhY2FiLm9yZy9qdm9pc2luL21hdDIpIC0g
TWV0YWRhdGEgcmVtb3ZhbCB0b29sLCBzdXBwb3J0aW5nIGEgd2lkZSByYW5n
ZSBvZiBjb21tb25seSB1c2VkIGZpbGUgZm9ybWF0cywgd3JpdHRlbiBpbiBQ
eXRob24zLgoqIFtOaXBlXShodHRwczovL2dpdGh1Yi5jb20vR291dmVhSGVp
dG9yL25pcGUpIC0gU2NyaXB0IHRvIHJlZGlyZWN0IGFsbCB0cmFmZmljIGZy
b20gdGhlIG1hY2hpbmUgdG8gdGhlIFRvciBuZXR3b3JrLgoqIFtPbmlvblNj
YW5dKGh0dHBzOi8vb25pb25zY2FuLm9yZy8pIC0gVG9vbCBmb3IgaW52ZXN0
aWdhdGluZyB0aGUgRGFyayBXZWIgYnkgZmluZGluZyBvcGVyYXRpb25hbCBz
ZWN1cml0eSBpc3N1ZXMgaW50cm9kdWNlZCBieSBUb3IgaGlkZGVuIHNlcnZp
Y2Ugb3BlcmF0b3JzLgoqIFtUYWlsc10oaHR0cHM6Ly90YWlscy5ib3VtLm9y
Zy8pIC0gTGl2ZSBvcGVyYXRpbmcgc3lzdGVtIGFpbWluZyB0byBwcmVzZXJ2
ZSB5b3VyIHByaXZhY3kgYW5kIGFub255bWl0eS4KKiBbVG9yXShodHRwczov
L3d3dy50b3Jwcm9qZWN0Lm9yZy8pIC0gRnJlZSBzb2Z0d2FyZSBhbmQgb25p
b24gcm91dGVkIG92ZXJsYXkgbmV0d29yayB0aGF0IGhlbHBzIHlvdSBkZWZl
bmQgYWdhaW5zdCB0cmFmZmljIGFuYWx5c2lzLgoqIFtXaGF0IEV2ZXJ5IEJy
b3dzZXIgS25vd3MgQWJvdXQgWW91XShodHRwOi8vd2Via2F5LnJvYmlubGlu
dXMuY29tLykgLSBDb21wcmVoZW5zaXZlIGRldGVjdGlvbiBwYWdlIHRvIHRl
c3QgeW91ciBvd24gV2ViIGJyb3dzZXIncyBjb25maWd1cmF0aW9uIGZvciBw
cml2YWN5IGFuZCBpZGVudGl0eSBsZWFrcy4KKiBbZG9zLW92ZXItdG9yXSho
dHRwczovL2dpdGh1Yi5jb20vc2tpemFwL2Rvcy1vdmVyLXRvcikgLSBQcm9v
ZiBvZiBjb25jZXB0IGRlbmlhbCBvZiBzZXJ2aWNlIG92ZXIgVG9yIHN0cmVz
cyB0ZXN0IHRvb2wuCiogW2thbGl0b3JpZnldKGh0dHBzOi8vZ2l0aHViLmNv
bS9icmFpbmZ1Y2tTZWMva2FsaXRvcmlmeSkgLSBUcmFuc3BhcmVudCBwcm94
eSB0aHJvdWdoIFRvciBmb3IgS2FsaSBMaW51eCBPUy4KCiMjIEFudGktdmly
dXMgRXZhc2lvbiBUb29scwoKKiBbQW50aVZpcnVzIEV2YXNpb24gVG9vbCAo
QVZFVCldKGh0dHBzOi8vZ2l0aHViLmNvbS9nb3ZvbHV0aW9uL2F2ZXQpIC0g
UG9zdC1wcm9jZXNzIGV4cGxvaXRzIGNvbnRhaW5pbmcgZXhlY3V0YWJsZSBm
aWxlcyB0YXJnZXRlZCBmb3IgV2luZG93cyBtYWNoaW5lcyB0byBhdm9pZCBi
ZWluZyByZWNvZ25pemVkIGJ5IGFudGl2aXJ1cyBzb2Z0d2FyZS4KKiBbQ2Fy
Ym9uQ29weV0oaHR0cHM6Ly9naXRodWIuY29tL3BhcmFub2lkbmluamEvQ2Fy
Ym9uQ29weSkgLSBUb29sIHRoYXQgY3JlYXRlcyBhIHNwb29mZWQgY2VydGlm
aWNhdGUgb2YgYW55IG9ubGluZSB3ZWJzaXRlIGFuZCBzaWducyBhbiBFeGVj
dXRhYmxlIGZvciBBViBldmFzaW9uLgoqIFtIeXBlcmlvbl0oaHR0cDovL251
bGxzZWN1cml0eS5uZXQvdG9vbHMvYmluYXJ5Lmh0bWwpIC0gUnVudGltZSBl
bmNyeXB0b3IgZm9yIDMyLWJpdCBwb3J0YWJsZSBleGVjdXRhYmxlcyAoIlBF
IGAuZXhlYHMiKS4KKiBbU2hlbGx0ZXJdKGh0dHBzOi8vd3d3LnNoZWxsdGVy
cHJvamVjdC5jb20vKSAtIER5bmFtaWMgc2hlbGxjb2RlIGluamVjdGlvbiB0
b29sLCBhbmQgdGhlIGZpcnN0IHRydWx5IGR5bmFtaWMgUEUgaW5mZWN0b3Ig
ZXZlciBjcmVhdGVkLgoqIFtVbmlCeUF2XShodHRwczovL2dpdGh1Yi5jb20v
TXItVW4xazBkM3IvVW5pQnlBdikgLSBTaW1wbGUgb2JmdXNjYXRvciB0aGF0
IHRha2VzIHJhdyBzaGVsbGNvZGUgYW5kIGdlbmVyYXRlcyBBbnRpLVZpcnVz
IGZyaWVuZGx5IGV4ZWN1dGFibGVzIGJ5IHVzaW5nIGEgYnJ1dGUtZm9yY2Fi
bGUsIDMyLWJpdCBYT1Iga2V5LgoqIFtWZWlsXShodHRwczovL3d3dy52ZWls
LWZyYW1ld29yay5jb20vKSAtIEdlbmVyYXRlIG1ldGFzcGxvaXQgcGF5bG9h
ZHMgdGhhdCBieXBhc3MgY29tbW9uIGFudGktdmlydXMgc29sdXRpb25zLgoq
IFtwZUNsb2FrLnB5XShodHRwczovL3d3dy5zZWN1cml0eXNpZnQuY29tL3Bl
Y2xvYWstcHktYW4tZXhwZXJpbWVudC1pbi1hdi1ldmFzaW9uLykgLSBBdXRv
bWF0ZXMgdGhlIHByb2Nlc3Mgb2YgaGlkaW5nIGEgbWFsaWNpb3VzIFdpbmRv
d3MgZXhlY3V0YWJsZSBmcm9tIGFudGl2aXJ1cyAoQVYpIGRldGVjdGlvbi4K
KiBbcGVDbG9ha0NhcHN0b25lXShodHRwczovL2dpdGh1Yi5jb20vdi1wLWIv
cGVDbG9ha0NhcHN0b25lKSAtIE11bHRpLXBsYXRmb3JtIGZvcmsgb2YgdGhl
IHBlQ2xvYWsucHkgYXV0b21hdGVkIG1hbHdhcmUgYW50aXZpcnVzIGV2YXNp
b24gdG9vbC4KCiMjIEJvb2tzCgpTZWUgYWxzbyBbREVGIENPTiBTdWdnZXN0
ZWQgUmVhZGluZ10oaHR0cHM6Ly93d3cuZGVmY29uLm9yZy9odG1sL2xpbmtz
L2Jvb2stbGlzdC5odG1sKS4KCiMjIyBEZWZlbnNpdmUgUHJvZ3JhbW1pbmcg
Qm9va3MKCiogW0hvbGlzdGljIEluZm8tU2VjIGZvciBXZWIgRGV2ZWxvcGVy
cyAoRmFzY2ljbGUgMCldKGh0dHBzOi8vbGVhbnB1Yi5jb20vaG9saXN0aWMt
aW5mb3NlYy1mb3Itd2ViLWRldmVsb3BlcnMpCiogW0hvbGlzdGljIEluZm8t
U2VjIGZvciBXZWIgRGV2ZWxvcGVycyAoRmFzY2ljbGUgMSldKGh0dHBzOi8v
bGVhbnB1Yi5jb20vaG9saXN0aWMtaW5mb3NlYy1mb3Itd2ViLWRldmVsb3Bl
cnMtZmFzY2ljbGUxLXZwcy1uZXR3b3JrLWNsb3VkLXdlYmFwcGxpY2F0aW9u
cykKCiMjIyBIYWNrZXIncyBIYW5kYm9vayBTZXJpZXMgQm9va3MKCiogW0Fu
ZHJvaWQgSGFja2VyJ3MgSGFuZGJvb2sgYnkgSm9zaHVhIEouIERyYWtlIGV0
IGFsLiwgMjAxNF0oaHR0cDovL3d3dy53aWxleS5jb20vV2lsZXlDREEvV2ls
ZXlUaXRsZS9wcm9kdWN0Q2QtMTExODYwODY0WC5odG1sKQoqIFtDYXIgSGFj
a2VyJ3MgSGFuZGJvb2sgYnkgQ3JhaWcgU21pdGgsIDIwMTZdKGh0dHBzOi8v
bm9zdGFyY2guY29tL2NhcmhhY2tpbmcpCiogW1RoZSBCcm93c2VyIEhhY2tl
cidzIEhhbmRib29rIGJ5IFdhZGUgQWxjb3JuIGV0IGFsLiwgMjAxNF0oaHR0
cDovL3d3dy53aWxleS5jb20vV2lsZXlDREEvV2lsZXlUaXRsZS9wcm9kdWN0
Q2QtMTExODY2MjA5MS5odG1sKQoqIFtUaGUgRGF0YWJhc2UgSGFja2VyJ3Mg
SGFuZGJvb2ssIERhdmlkIExpdGNoZmllbGQgZXQgYWwuLCAyMDA1XShodHRw
Oi8vd3d3LndpbGV5LmNvbS9XaWxleUNEQS9XaWxleVRpdGxlL3Byb2R1Y3RD
ZC0wNzY0NTc4MDE0Lmh0bWwpCiogW1RoZSBNYWMgSGFja2VyJ3MgSGFuZGJv
b2sgYnkgQ2hhcmxpZSBNaWxsZXIgJiBEaW5vIERhaSBab3ZpLCAyMDA5XSho
dHRwOi8vd3d3LndpbGV5LmNvbS9XaWxleUNEQS9XaWxleVRpdGxlL3Byb2R1
Y3RDZC0wNDcwMzk1MzYyLmh0bWwpCiogW1RoZSBNb2JpbGUgQXBwbGljYXRp
b24gSGFja2VyJ3MgSGFuZGJvb2sgYnkgRG9taW5pYyBDaGVsbCBldCBhbC4s
IDIwMTVdKGh0dHA6Ly93d3cud2lsZXkuY29tL1dpbGV5Q0RBL1dpbGV5VGl0
bGUvcHJvZHVjdENkLTExMTg5NTg1MDAuaHRtbCkKKiBbVGhlIFNoZWxsY29k
ZXIncyBIYW5kYm9vayBieSBDaHJpcyBBbmxleSBldCBhbC4sIDIwMDddKGh0
dHA6Ly93d3cud2lsZXkuY29tL1dpbGV5Q0RBL1dpbGV5VGl0bGUvcHJvZHVj
dENkLTA0NzAwODAyM1guaHRtbCkKKiBbVGhlIFdlYiBBcHBsaWNhdGlvbiBI
YWNrZXIncyBIYW5kYm9vayBieSBELiBTdHV0dGFyZCwgTS4gUGludG8sIDIw
MTFdKGh0dHA6Ly93d3cud2lsZXkuY29tL1dpbGV5Q0RBL1dpbGV5VGl0bGUv
cHJvZHVjdENkLTExMTgwMjY0NzAuaHRtbCkKKiBbaU9TIEhhY2tlcidzIEhh
bmRib29rIGJ5IENoYXJsaWUgTWlsbGVyIGV0IGFsLiwgMjAxMl0oaHR0cDov
L3d3dy53aWxleS5jb20vV2lsZXlDREEvV2lsZXlUaXRsZS9wcm9kdWN0Q2Qt
MTExODIwNDEyMy5odG1sKQoKIyMjIExvY2sgUGlja2luZyBCb29rcwoKKiBb
RWRkaWUgdGhlIFdpcmUgYm9va3NdKGh0dHBzOi8vd3d3LmRyb3Bib3guY29t
L3NoL2szejRkbTR2eXlvanAzby9BQUFJWFF1d01tTnVDY2hfU3RMUFVZbS1h
P2RsPTApCiogW0tleXMgdG8gdGhlIEtpbmdkb20gYnkgRGV2aWFudCBPbGxh
bSwgMjAxMl0oaHR0cHM6Ly93d3cuZWxzZXZpZXIuY29tL2Jvb2tzL2tleXMt
dG8tdGhlLWtpbmdkb20vb2xsYW0vOTc4LTEtNTk3NDktOTgzLTUpCiogW0xv
Y2sgUGlja2luZzogRGV0YWlsIE92ZXJraWxsIGJ5IFNvbG9tb25dKGh0dHBz
Oi8vd3d3LmRyb3Bib3guY29tL3MveTM5aXg5dTlxcHFmZmN0L0xvY2twaWNr
aW5nJTIwRGV0YWlsJTIwT3ZlcmtpbGwucGRmP2RsPTApCiogW1ByYWN0aWNh
bCBMb2NrIFBpY2tpbmcgYnkgRGV2aWFudCBPbGxhbSwgMjAxMl0oaHR0cHM6
Ly93d3cuZWxzZXZpZXIuY29tL2Jvb2tzL3ByYWN0aWNhbC1sb2NrLXBpY2tp
bmcvb2xsYW0vOTc4LTEtNTk3NDktOTg5LTcpCgojIyMgTWFsd2FyZSBBbmFs
eXNpcyBCb29rcwoKKiBbTWFsd2FyZSBBbmFseXN0J3MgQ29va2Jvb2sgYW5k
IERWRCBieSBNaWNoYWVsIEhhbGUgTGlnaCBldCBhbC4sIDIwMTBdKGh0dHA6
Ly93d3cud2lsZXkuY29tL1dpbGV5Q0RBL1dpbGV5VGl0bGUvcHJvZHVjdENk
LTA0NzA2MTMwMzMuaHRtbCkKKiBbUHJhY3RpY2FsIE1hbHdhcmUgQW5hbHlz
aXMgYnkgTWljaGFlbCBTaWtvcnNraSAmIEFuZHJldyBIb25pZywgMjAxMl0o
aHR0cHM6Ly9ub3N0YXJjaC5jb20vbWFsd2FyZSkKKiBbVGhlIEFydCBvZiBN
ZW1vcnkgRm9yZW5zaWNzIGJ5IE1pY2hhZWwgSGFsZSBMaWdoIGV0IGFsLiwg
MjAxNF0oaHR0cDovL3d3dy53aWxleS5jb20vV2lsZXlDREEvV2lsZXlUaXRs
ZS9wcm9kdWN0Q2QtMTExODgyNTA5OC5odG1sKQoKIyMjIE5ldHdvcmsgQW5h
bHlzaXMgQm9va3MKCiogW05ldHdvcmsgRm9yZW5zaWNzOiBUcmFja2luZyBI
YWNrZXJzIHRocm91Z2ggQ3liZXJzcGFjZSBieSBTaGVycmkgRGF2aWRvZmYg
JiBKb25hdGhhbiBIYW0sIDIwMTJdKGh0dHA6Ly93d3cuYW1hem9uLmNvbS9O
ZXR3b3JrLUZvcmVuc2ljcy1UcmFja2luZy1IYWNrZXJzLUN5YmVyc3BhY2Ut
ZWJvb2svZHAvQjAwOENHOENZVS8pCiogW05tYXAgTmV0d29yayBTY2Fubmlu
ZyBieSBHb3Jkb24gRnlvZG9yIEx5b24sIDIwMDldKGh0dHBzOi8vbm1hcC5v
cmcvYm9vay8pCiogW1ByYWN0aWNhbCBQYWNrZXQgQW5hbHlzaXMgYnkgQ2hy
aXMgU2FuZGVycywgMjAxMV0oaHR0cHM6Ly9ub3N0YXJjaC5jb20vcGFja2V0
Mi5odG0pCiogW1dpcmVzaGFyayBOZXR3b3JrIEFuYWx5c2lzIGJ5IGJ5IExh
dXJhIENoYXBwZWxsICYgR2VyYWxkIENvbWJzLCAyMDEyXShodHRwczovL3d3
dy5hbWF6b24uY29tL1dpcmVzaGFyay1OZXR3b3JrLUFuYWx5c2lzLVNlY29u
ZC1DZXJ0aWZpZWQvZHAvMTg5MzkzOTk0NCkKCiMjIyBQZW5ldHJhdGlvbiBU
ZXN0aW5nIEJvb2tzCgoqIFtBZHZhbmNlZCBQZW5ldHJhdGlvbiBUZXN0aW5n
IGJ5IFdpbCBBbGxzb3BwLCAyMDE3XShodHRwczovL3d3dy5hbWF6b24uY29t
L0FkdmFuY2VkLVBlbmV0cmF0aW9uLVRlc3RpbmctSGFja2luZy1OZXR3b3Jr
cy9kcC8xMTE5MzY3Njg5LykKKiBbQWR2YW5jZWQgUGVuZXRyYXRpb24gVGVz
dGluZyBmb3IgSGlnaGx5LVNlY3VyZWQgRW52aXJvbm1lbnRzIGJ5IExlZSBB
bGxlbiwgMjAxMl0oaHR0cDovL3d3dy5wYWNrdHB1Yi5jb20vbmV0d29ya2lu
Zy1hbmQtc2VydmVycy9hZHZhbmNlZC1wZW5ldHJhdGlvbi10ZXN0aW5nLWhp
Z2hseS1zZWN1cmVkLWVudmlyb25tZW50cy11bHRpbWF0ZS1zZWN1cml0eS1n
dSkKKiBbQWR2YW5jZWQgUGVyc2lzdGVudCBUaHJlYXQgSGFja2luZzogVGhl
IEFydCBhbmQgU2NpZW5jZSBvZiBIYWNraW5nIEFueSBPcmdhbml6YXRpb24g
YnkgVHlsZXIgV3JpZ2h0c29uLCAyMDE0XShodHRwOi8vd3d3LmFtYXpvbi5j
b20vQWR2YW5jZWQtUGVyc2lzdGVudC1UaHJlYXQtSGFja2luZy1Pcmdhbml6
YXRpb24vZHAvMDA3MTgyODM2MikKKiBbQmxhY2sgSGF0IFB5dGhvbjogUHl0
aG9uIFByb2dyYW1taW5nIGZvciBIYWNrZXJzIGFuZCBQZW50ZXN0ZXJzIGJ5
IEp1c3RpbiBTZWl0eiwgMjAxNF0oaHR0cDovL3d3dy5hbWF6b24uY29tL0Js
YWNrLUhhdC1QeXRob24tUHJvZ3JhbW1pbmctUGVudGVzdGVycy9kcC8xNTkz
Mjc1OTAwKQoqIFtCdGZtOiBCbHVlIFRlYW0gRmllbGQgTWFudWFsIGJ5IEFs
YW4gSiBXaGl0ZSAmIEJlbiBDbGFyaywgMjAxN10oaHR0cHM6Ly93d3cuYW1h
em9uLmRlL0JsdWUtVGVhbS1GaWVsZC1NYW51YWwtQlRGTS9kcC8xNTQxMDE2
MzZYKQoqIFtCdWcgSHVudGVyJ3MgRGlhcnkgYnkgVG9iaWFzIEtsZWluLCAy
MDExXShodHRwczovL25vc3RhcmNoLmNvbS9idWdodW50ZXIpCiogW0Z1enpp
bmc6IEJydXRlIEZvcmNlIFZ1bG5lcmFiaWxpdHkgRGlzY292ZXJ5IGJ5IE1p
Y2hhZWwgU3V0dG9uIGV0IGFsLiwgMjAwN10oaHR0cDovL3d3dy5mdXp6aW5n
Lm9yZy8pCiogW01ldGFzcGxvaXQ6IFRoZSBQZW5ldHJhdGlvbiBUZXN0ZXIn
cyBHdWlkZSBieSBEYXZpZCBLZW5uZWR5IGV0IGFsLiwgMjAxMV0oaHR0cHM6
Ly9ub3N0YXJjaC5jb20vbWV0YXNwbG9pdCkKKiBbUGVuZXRyYXRpb24gVGVz
dGluZzogQSBIYW5kcy1PbiBJbnRyb2R1Y3Rpb24gdG8gSGFja2luZyBieSBH
ZW9yZ2lhIFdlaWRtYW4sIDIwMTRdKGh0dHBzOi8vbm9zdGFyY2guY29tL3Bl
bnRlc3RpbmcpCiogW1BlbmV0cmF0aW9uIFRlc3Rpbmc6IFByb2NlZHVyZXMg
JiBNZXRob2RvbG9naWVzIGJ5IEVDLUNvdW5jaWwsIDIwMTBdKGh0dHA6Ly93
d3cuYW1hem9uLmNvbS9QZW5ldHJhdGlvbi1UZXN0aW5nLVByb2NlZHVyZXMt
TWV0aG9kb2xvZ2llcy1FQy1Db3VuY2lsL2RwLzE0MzU0ODM2NzcpCiogW1By
b2Zlc3Npb25hbCBQZW5ldHJhdGlvbiBUZXN0aW5nIGJ5IFRob21hcyBXaWxo
ZWxtLCAyMDEzXShodHRwczovL3d3dy5lbHNldmllci5jb20vYm9va3MvcHJv
ZmVzc2lvbmFsLXBlbmV0cmF0aW9uLXRlc3Rpbmcvd2lsaGVsbS85NzgtMS01
OTc0OS05OTMtNCkKKiBbUnRmbTogUmVkIFRlYW0gRmllbGQgTWFudWFsIGJ5
IEJlbiBDbGFyaywgMjAxNF0oaHR0cDovL3d3dy5hbWF6b24uY29tL1J0Zm0t
UmVkLVRlYW0tRmllbGQtTWFudWFsL2RwLzE0OTQyOTU1MDQvKQoqIFtUaGUg
QXJ0IG9mIEV4cGxvaXRhdGlvbiBieSBKb24gRXJpY2tzb24sIDIwMDhdKGh0
dHBzOi8vbm9zdGFyY2guY29tL2hhY2tpbmcyLmh0bSkKKiBbVGhlIEJhc2lj
cyBvZiBIYWNraW5nIGFuZCBQZW5ldHJhdGlvbiBUZXN0aW5nIGJ5IFBhdHJp
Y2sgRW5nZWJyZXRzb24sIDIwMTNdKGh0dHBzOi8vd3d3LmVsc2V2aWVyLmNv
bS9ib29rcy90aGUtYmFzaWNzLW9mLWhhY2tpbmctYW5kLXBlbmV0cmF0aW9u
LXRlc3RpbmcvZW5nZWJyZXRzb24vOTc4LTEtNTk3NDktNjU1LTEpCiogW1Ro
ZSBIYWNrZXIgUGxheWJvb2sgYnkgUGV0ZXIgS2ltLCAyMDE0XShodHRwOi8v
d3d3LmFtYXpvbi5jb20vVGhlLUhhY2tlci1QbGF5Ym9vay1QcmFjdGljYWwt
UGVuZXRyYXRpb24vZHAvMTQ5NDkzMjYzNi8pCiogW1VuYXV0aG9yaXNlZCBB
Y2Nlc3M6IFBoeXNpY2FsIFBlbmV0cmF0aW9uIFRlc3RpbmcgRm9yIElUIFNl
Y3VyaXR5IFRlYW1zIGJ5IFdpbCBBbGxzb3BwLCAyMDEwXShodHRwOi8vd3d3
LmFtYXpvbi5jb20vVW5hdXRob3Jpc2VkLUFjY2Vzcy1QaHlzaWNhbC1QZW5l
dHJhdGlvbi1TZWN1cml0eS1lYm9vay9kcC9CMDA1RElBUEtFKQoqIFtWaW9s
ZW50IFB5dGhvbiBieSBUSiBPJ0Nvbm5vciwgMjAxMl0oaHR0cHM6Ly93d3cu
ZWxzZXZpZXIuY29tL2Jvb2tzL3Zpb2xlbnQtcHl0aG9uL3Vua25vd24vOTc4
LTEtNTk3NDktOTU3LTYpCgojIyMgUmV2ZXJzZSBFbmdpbmVlcmluZyBCb29r
cwoKKiBbR3JheSBIYXQgSGFja2luZyBUaGUgRXRoaWNhbCBIYWNrZXIncyBI
YW5kYm9vayBieSBEYW5pZWwgUmVnYWxhZG8gZXQgYWwuLCAyMDE1XShodHRw
Oi8vd3d3LmFtYXpvbi5jb20vSGFja2luZy1FdGhpY2FsLUhhY2tlcnMtSGFu
ZGJvb2stRWRpdGlvbi9kcC8wMDcxODMyMzg2KQoqIFtIYWNraW5nIHRoZSBY
Ym94IGJ5IEFuZHJldyBIdWFuZywgMjAwM10oaHR0cHM6Ly9ub3N0YXJjaC5j
b20veGJveC5odG0pCiogW1ByYWN0aWNhbCBSZXZlcnNlIEVuZ2luZWVyaW5n
IGJ5IEJydWNlIERhbmcgZXQgYWwuLCAyMDE0XShodHRwOi8vd3d3LndpbGV5
LmNvbS9XaWxleUNEQS9XaWxleVRpdGxlL3Byb2R1Y3RDZC0xMTE4Nzg3MzE1
Lmh0bWwpCiogW1JldmVyc2UgRW5naW5lZXJpbmcgZm9yIEJlZ2lubmVycyBi
eSBEZW5uaXMgWXVyaWNoZXZdKGh0dHA6Ly9iZWdpbm5lcnMucmUvKQoqIFtU
aGUgSURBIFBybyBCb29rIGJ5IENocmlzIEVhZ2xlLCAyMDExXShodHRwczov
L25vc3RhcmNoLmNvbS9pZGFwcm8yLmh0bSkKCiMjIyBTb2NpYWwgRW5naW5l
ZXJpbmcgQm9va3MKCiogW0dob3N0IGluIHRoZSBXaXJlcyBieSBLZXZpbiBE
LiBNaXRuaWNrICYgV2lsbGlhbSBMLiBTaW1vbiwgMjAxMV0oaHR0cDovL3d3
dy5oYWNoZXR0ZWJvb2tncm91cC5jb20vdGl0bGVzL2tldmluLW1pdG5pY2sv
Z2hvc3QtaW4tdGhlLXdpcmVzLzk3ODAzMTYxMzQ0NzcvKQoqIFtObyBUZWNo
IEhhY2tpbmcgYnkgSm9obm55IExvbmcgJiBKYWNrIFdpbGVzLCAyMDA4XSho
dHRwczovL3d3dy5lbHNldmllci5jb20vYm9va3Mvbm8tdGVjaC1oYWNraW5n
L21pdG5pY2svOTc4LTEtNTk3NDktMjE1LTcpCiogW1NvY2lhbCBFbmdpbmVl
cmluZyBpbiBJVCBTZWN1cml0eTogVG9vbHMsIFRhY3RpY3MsIGFuZCBUZWNo
bmlxdWVzIGJ5IFNoYXJvbiBDb25oZWFkeSwgMjAxNF0oaHR0cHM6Ly93d3cu
bWhwcm9mZXNzaW9uYWwuY29tLzk3ODAwNzE4MTg0NjktdXNhLXNvY2lhbC1l
bmdpbmVlcmluZy1pbi1pdC1zZWN1cml0eS10b29scy10YWN0aWNzLWFuZC10
ZWNobmlxdWVzLWdyb3VwKQoqIFtUaGUgQXJ0IG9mIERlY2VwdGlvbiBieSBL
ZXZpbiBELiBNaXRuaWNrICYgV2lsbGlhbSBMLiBTaW1vbiwgMjAwMl0oaHR0
cDovL3d3dy53aWxleS5jb20vV2lsZXlDREEvV2lsZXlUaXRsZS9wcm9kdWN0
Q2QtMDQ3MTIzNzEyNC5odG1sKQoqIFtUaGUgQXJ0IG9mIEludHJ1c2lvbiBi
eSBLZXZpbiBELiBNaXRuaWNrICYgV2lsbGlhbSBMLiBTaW1vbiwgMjAwNV0o
aHR0cDovL3d3dy53aWxleS5jb20vV2lsZXlDREEvV2lsZXlUaXRsZS9wcm9k
dWN0Q2QtMDc2NDU2OTU5Ny5odG1sKQoqIFtVbm1hc2tpbmcgdGhlIFNvY2lh
bCBFbmdpbmVlcjogVGhlIEh1bWFuIEVsZW1lbnQgb2YgU2VjdXJpdHkgYnkg
Q2hyaXN0b3BoZXIgSGFkbmFneSwgMjAxNF0oaHR0cDovL3d3dy53aWxleS5j
b20vV2lsZXlDREEvV2lsZXlUaXRsZS9wcm9kdWN0Q2QtMTExODYwODU3Ny5o
dG1sKQoKIyMjIFdpbmRvd3MgQm9va3MKCiogW1Ryb3VibGVzaG9vdGluZyB3
aXRoIHRoZSBXaW5kb3dzIFN5c2ludGVybmFscyBUb29scyBieSBNYXJrIFJ1
c3Npbm92aWNoICYgQWFyb24gTWFyZ29zaXMsIDIwMTZdKGh0dHBzOi8vd3d3
LmFtYXpvbi5jb20vVHJvdWJsZXNob290aW5nLVdpbmRvd3MtU3lzaW50ZXJu
YWxzLVRvb2xzLTJuZC9kcC8wNzM1Njg0NDQ4LykKKiBbV2luZG93cyBJbnRl
cm5hbHMgYnkgTWFyayBSdXNzaW5vdmljaCBldCBhbC4sIDIwMTJdKGh0dHA6
Ly93d3cuYW1hem9uLmNvbS9XaW5kb3dzLUludGVybmFscy1QYXJ0LURldmVs
b3Blci1SZWZlcmVuY2UvZHAvMDczNTY0ODczNS8pCgojIyBDVEYgVG9vbHMK
CiogW1B3bnRvb2xzXShodHRwczovL2dpdGh1Yi5jb20vR2FsbG9wc2xlZC9w
d250b29scykgLSBSYXBpZCBleHBsb2l0IGRldmVsb3BtZW50IGZyYW1ld29y
ayBidWlsdCBmb3IgdXNlIGluIENURnMuCiogW1JzYUN0ZlRvb2xdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9zb3VyY2VrcmlzL1JzYUN0ZlRvb2wpIC0gRGVjcnlw
dCBkYXRhIGVuY2lwaGVyZWQgdXNpbmcgd2VhayBSU0Ega2V5cywgYW5kIHJl
Y292ZXIgcHJpdmF0ZSBrZXlzIGZyb20gcHVibGljIGtleXMgdXNpbmcgYSB2
YXJpZXR5IG9mIGF1dG9tYXRlZCBhdHRhY2tzLgoqIFtjdGYtdG9vbHNdKGh0
dHBzOi8vZ2l0aHViLmNvbS96YXJkdXMvY3RmLXRvb2xzKSAtIENvbGxlY3Rp
b24gb2Ygc2V0dXAgc2NyaXB0cyB0byBpbnN0YWxsIHZhcmlvdXMgc2VjdXJp
dHkgcmVzZWFyY2ggdG9vbHMgZWFzaWx5IGFuZCBxdWlja2x5IGRlcGxveWFi
bGUgdG8gbmV3IG1hY2hpbmVzLgoqIFtzaGVsbHBvcF0oaHR0cHM6Ly9naXRo
dWIuY29tLzB4MDAtMHgwMC9zaGVsbHBvcCkgLSBFYXNpbHkgZ2VuZXJhdGUg
c29waGlzdGljYXRlZCByZXZlcnNlIG9yIGJpbmQgc2hlbGwgY29tbWFuZHMg
dG8gaGVscCB5b3Ugc2F2ZSB0aW1lIGR1cmluZyBwZW5ldHJhdGlvbiB0ZXN0
cy4KCiMjIENvbGxhYm9yYXRpb24gVG9vbHMKCiogW1JlZEVMS10oaHR0cHM6
Ly9naXRodWIuY29tL291dGZsYW5rbmwvUmVkRUxLKSAtIFRyYWNrIGFuZCBh
bGFybSBhYm91dCBCbHVlIFRlYW0gYWN0aXZpdGllcyB3aGlsZSBwcm92aWRp
bmcgYmV0dGVyIHVzYWJpbGl0eSBpbiBsb25nIHRlcm0gb2ZmZW5zaXZlIG9w
ZXJhdGlvbnMuCgojIyBDb25mZXJlbmNlcyBhbmQgRXZlbnRzCgoqIFtCU2lk
ZXNdKGh0dHA6Ly93d3cuc2VjdXJpdHlic2lkZXMuY29tLykgLSBGcmFtZXdv
cmsgZm9yIG9yZ2FuaXNpbmcgYW5kIGhvbGRpbmcgc2VjdXJpdHkgY29uZmVy
ZW5jZXMuCgojIyMgQXNpYQoKKiBbSElUQl0oaHR0cHM6Ly9jb25mZXJlbmNl
LmhpdGIub3JnLykgLSBEZWVwLWtub3dsZWRnZSBzZWN1cml0eSBjb25mZXJl
bmNlIGhlbGQgaW4gTWFsYXlzaWEgYW5kIFRoZSBOZXRoZXJsYW5kcy4KKiBb
TnVsbGNvbl0oaHR0cDovL251bGxjb24ubmV0L3dlYnNpdGUvKSAtIEFubnVh
bCBjb25mZXJlbmNlIGluIERlbGhpIGFuZCBHb2EsIEluZGlhLgoqIFtTRUNV
SU5TSURFXShodHRwOi8vc2VjdWluc2lkZS5jb20pIC0gU2VjdXJpdHkgQ29u
ZmVyZW5jZSBpbiBTZW91bC4KCiMjIyBFdXJvcGUKCiogWzQ0Q29uXShodHRw
czovLzQ0Y29uLmNvbS8pIC0gQW5udWFsIFNlY3VyaXR5IENvbmZlcmVuY2Ug
aGVsZCBpbiBMb25kb24uCiogW0JhbENDb25dKGh0dHBzOi8vd3d3LmJhbGNj
b24ub3JnKSAtIEJhbGthbiBDb21wdXRlciBDb25ncmVzcywgYW5udWFsbHkg
aGVsZCBpbiBOb3ZpIFNhZCwgU2VyYmlhLgoqIFtCcnVDT05dKGh0dHA6Ly9i
cnVjb24ub3JnKSAtIEFubnVhbCBzZWN1cml0eSBjb25mZXJlbmNlIGluIEJl
bGdpdW0uCiogW0NDQ10oaHR0cHM6Ly9ldmVudHMuY2NjLmRlL2NvbmdyZXNz
LykgLSBBbm51YWwgbWVldGluZyBvZiB0aGUgaW50ZXJuYXRpb25hbCBoYWNr
ZXIgc2NlbmUgaW4gR2VybWFueS4KKiBbRGVlcFNlY10oaHR0cHM6Ly9kZWVw
c2VjLm5ldC8pIC0gU2VjdXJpdHkgQ29uZmVyZW5jZSBpbiBWaWVubmEsIEF1
c3RyaWEuCiogW0RlZkNhbXBdKGh0dHA6Ly9kZWYuY2FtcC8pIC0gTGFyZ2Vz
dCBTZWN1cml0eSBDb25mZXJlbmNlIGluIEVhc3Rlcm4gRXVyb3BlLCBoZWxk
IGFubnVhbGx5IGluIEJ1Y2hhcmVzdCwgUm9tYW5pYS4KKiBbRlNlY10oaHR0
cDovL2ZzZWMuZm9pLmhyKSAtIEZTZWMgLSBDcm9hdGlhbiBJbmZvcm1hdGlv
biBTZWN1cml0eSBHYXRoZXJpbmcgaW4gVmFyYcW+ZGluLCBDcm9hdGlhLgoq
IFtIYWNrLmx1XShodHRwczovL2hhY2subHUvKSAtIEFubnVhbCBjb25mZXJl
bmNlIGhlbGQgaW4gTHV4ZW1ib3VyZy4KKiBbSW5mb3NlY3VyaXR5IEV1cm9w
ZV0oaHR0cDovL3d3dy5pbmZvc2VjdXJpdHlldXJvcGUuY29tLykgLSBFdXJv
cGUncyBudW1iZXIgb25lIGluZm9ybWF0aW9uIHNlY3VyaXR5IGV2ZW50LCBo
ZWxkIGluIExvbmRvbiwgVUsuCiogW1N0ZWVsQ29uXShodHRwczovL3d3dy5z
dGVlbGNvbi5pbmZvLykgLSBTZWN1cml0eSBjb25mZXJlbmNlIGluIFNoZWZm
aWVsZCBVSy4KKiBbU3dpc3MgQ3liZXIgU3Rvcm1dKGh0dHBzOi8vd3d3LnN3
aXNzY3liZXJzdG9ybS5jb20vKSAtIEFubnVhbCBzZWN1cml0eSBjb25mZXJl
bmNlIGluIEx1Y2VybmUsIFN3aXR6ZXJsYW5kLgoqIFtUcm9vcGVyc10oaHR0
cHM6Ly93d3cudHJvb3BlcnMuZGUpIC0gQW5udWFsIGludGVybmF0aW9uYWwg
SVQgU2VjdXJpdHkgZXZlbnQgd2l0aCB3b3Jrc2hvcHMgaGVsZCBpbiBIZWlk
ZWxiZXJnLCBHZXJtYW55LgoqIFtIb25leUNPTl0oaHR0cHM6Ly9ob25leWNv
bi5ldS8pIC0gQW5udWFsIFNlY3VyaXR5IENvbmZlcmVuY2UgaW4gR3VhZGFs
YWphcmEsIFNwYWluLiBPcmdhbml6ZWQgYnkgdGhlIEhvbmV5U0VDIGFzc29j
aWF0aW9uLgoKIyMjIE5vcnRoIEFtZXJpY2EKCiogW0FwcFNlY1VTQV0oaHR0
cHM6Ly9hcHBzZWN1c2Eub3JnLykgLSBBbm51YWwgY29uZmVyZW5jZSBvcmdh
bml6ZWQgYnkgT1dBU1AuCiogW0JsYWNrIEhhdF0oaHR0cDovL3d3dy5ibGFj
a2hhdC5jb20vKSAtIEFubnVhbCBzZWN1cml0eSBjb25mZXJlbmNlIGluIExh
cyBWZWdhcy4KKiBbQ2Fyb2xpbmFDb25dKGh0dHBzOi8vY2Fyb2xpbmFjb24u
b3JnLykgLSBJbmZvc2VjIGNvbmZlcmVuY2UsIGhlbGQgYW5udWFsbHkgaW4g
Tm9ydGggQ2Fyb2xpbmEuCiogW0RFRiBDT05dKGh0dHBzOi8vd3d3LmRlZmNv
bi5vcmcvKSAtIEFubnVhbCBoYWNrZXIgY29udmVudGlvbiBpbiBMYXMgVmVn
YXMuCiogW0RlcmJ5Q29uXShodHRwczovL3d3dy5kZXJieWNvbi5jb20vKSAt
IEFubnVhbCBoYWNrZXIgY29uZmVyZW5jZSBiYXNlZCBpbiBMb3Vpc3ZpbGxl
LgoqIFtIYWNrZXJzIE5leHQgRG9vcl0oaHR0cHM6Ly9obmQudGVjaGxlYXJu
aW5nY29sbGVjdGl2ZS5jb20vKSAtIEN5YmVyc2VjdXJpdHkgYW5kIHNvY2lh
bCB0ZWNobm9sb2d5IGNvbmZlcmVuY2UgaGVsZCBpbiBOZXcgWW9yayBDaXR5
LgoqIFtIYWNrZXJzIE9uIFBsYW5ldCBFYXJ0aCAoSE9QRSldKGh0dHBzOi8v
aG9wZS5uZXQvKSAtIFNlbWktYW5udWFsIGNvbmZlcmVuY2UgaGVsZCBpbiBO
ZXcgWW9yayBDaXR5LgoqIFtIYWNrZmVzdF0oaHR0cHM6Ly9oYWNrZmVzdC5j
YSkgLSBMYXJnZXN0IGhhY2tpbmcgY29uZmVyZW5jZSBpbiBDYW5hZGEuCiog
W0xheWVyT25lXShodHRwOi8vd3d3LmxheWVyb25lLm9yZy8pIC0gQW5udWFs
IFVTIHNlY3VyaXR5IGNvbmZlcmVuY2UgaGVsZCBldmVyeSBzcHJpbmcgaW4g
TG9zIEFuZ2VsZXMuCiogW05hdGlvbmFsIEN5YmVyIFN1bW1pdF0oaHR0cHM6
Ly93d3cubmF0aW9uYWxjeWJlcnN1bW1pdC5jb20vKSAtIEFubnVhbCBVUyBz
ZWN1cml0eSBjb25mZXJlbmNlIGFuZCBDYXB0dXJlIHRoZSBGbGFnIGV2ZW50
LCBoZWxkIGluIEh1bnRzdmlsbGUsIEFsYWJhbWEsIFVTQS4KKiBbUGhyZWFr
TklDXShodHRwOi8vcGhyZWFrbmljLmluZm8vKSAtIFRlY2hub2xvZ3kgY29u
ZmVyZW5jZSBoZWxkIGFubnVhbGx5IGluIG1pZGRsZSBUZW5uZXNzZWUuCiog
W1JTQSBDb25mZXJlbmNlIFVTQV0oaHR0cHM6Ly93d3cucnNhY29uZmVyZW5j
ZS5jb20vKSAtIEFubnVhbCBzZWN1cml0eSBjb25mZXJlbmNlIGluIFNhbiBG
cmFuY2lzY28sIENhbGlmb3JuaWEsIFVTQS4KKiBbU2htb29Db25dKGh0dHA6
Ly9zaG1vb2Nvbi5vcmcvKSAtIEFubnVhbCBVUyBFYXN0IGNvYXN0IGhhY2tl
ciBjb252ZW50aW9uLgoqIFtTa3lEb2dDb25dKGh0dHA6Ly93d3cuc2t5ZG9n
Y29uLmNvbS8pIC0gVGVjaG5vbG9neSBjb25mZXJlbmNlIGluIE5hc2h2aWxs
ZS4KKiBbU3VtbWVyQ29uXShodHRwczovL3d3dy5zdW1tZXJjb24ub3JnLykg
LSBPbmUgb2YgdGhlIG9sZGVzdCBoYWNrZXIgY29udmVudGlvbnMgaW4gQW1l
cmljYSwgaGVsZCBkdXJpbmcgU3VtbWVyLgoqIFtUaG90Q29uXShodHRwOi8v
dGhvdGNvbi5vcmcvKSAtIEFubnVhbCBVUyBoYWNrZXIgY29uZmVyZW5jZSBo
ZWxkIGluIENoaWNhZ28uCiogW1ZpcnVzIEJ1bGxldGluIENvbmZlcmVuY2Vd
KGh0dHBzOi8vd3d3LnZpcnVzYnVsbGV0aW4uY29tL2NvbmZlcmVuY2UvaW5k
ZXgpIC0gQW5udWFsIGNvbmZlcmVuY2UgZ29pbmcgdG8gYmUgaGVsZCBpbiBE
ZW52ZXIsIFVTQSBmb3IgMjAxNi4KCiMjIyBTb3V0aCBBbWVyaWNhCgoqIFtF
a29wYXJ0eV0oaHR0cDovL3d3dy5la29wYXJ0eS5vcmcpIC0gTGFyZ2VzdCBT
ZWN1cml0eSBDb25mZXJlbmNlIGluIExhdGluIEFtZXJpY2EsIGhlbGQgYW5u
dWFsbHkgaW4gQnVlbm9zIEFpcmVzLCBBcmdlbnRpbmEuCgojIyMgWmVhbGFu
ZGlhCgoqIFtDSENvbl0oaHR0cHM6Ly9jaGNvbi5ueikgLSBDaHJpc3RjaHVy
Y2ggSGFja2VyIENvbiwgT25seSBTb3V0aCBJc2xhbmQgb2YgTmV3IFplYWxh
bmQgaGFja2VyIGNvbi4KCiMjIERvY2tlciBDb250YWluZXJzCgojIyMgRG9j
a2VyIENvbnRhaW5lcnMgb2YgSW50ZW50aW9uYWxseSBWdWxuZXJhYmxlIFN5
c3RlbXMKCiogW0RhbW4gVnVsbmVyYWJsZSBXZWIgQXBwbGljYXRpb24gKERW
V0EpXShodHRwczovL2h1Yi5kb2NrZXIuY29tL3IvY2l0aXplbnN0aWcvZHZ3
YS8pIC0gYGRvY2tlciBwdWxsIGNpdGl6ZW5zdGlnL2R2d2FgLgoqIFtPV0FT
UCBKdWljZSBTaG9wXShodHRwczovL2dpdGh1Yi5jb20vYmtpbW1pbmljaC9q
dWljZS1zaG9wI2RvY2tlci1jb250YWluZXItLSkgLSBgZG9ja2VyIHB1bGwg
YmtpbW1pbmljaC9qdWljZS1zaG9wYC4KKiBbT1dBU1AgTXV0aWxsaWRhZSBJ
SSBXZWIgUGVuLVRlc3QgUHJhY3RpY2UgQXBwbGljYXRpb25dKGh0dHBzOi8v
aHViLmRvY2tlci5jb20vci9jaXRpemVuc3RpZy9ub3dhc3AvKSAtIGBkb2Nr
ZXIgcHVsbCBjaXRpemVuc3RpZy9ub3dhc3BgLgoqIFtPV0FTUCBOb2RlR29h
dF0oaHR0cHM6Ly9naXRodWIuY29tL293YXNwL25vZGVnb2F0I29wdGlvbi0z
LS0tcnVuLW5vZGVnb2F0LW9uLWRvY2tlcikgLSBgZG9ja2VyLWNvbXBvc2Ug
YnVpbGQgJiYgZG9ja2VyLWNvbXBvc2UgdXBgLgoqIFtPV0FTUCBTZWN1cml0
eSBTaGVwaGVyZF0oaHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL2lzbWlzZXBh
dWwvc2VjdXJpdHlzaGVwaGVyZC8pIC0gYGRvY2tlciBwdWxsIGlzbWlzZXBh
dWwvc2VjdXJpdHlzaGVwaGVyZGAuCiogW09XQVNQIFdlYkdvYXQgUHJvamVj
dCA3LjEgZG9ja2VyIGltYWdlXShodHRwczovL2h1Yi5kb2NrZXIuY29tL3Iv
d2ViZ29hdC93ZWJnb2F0LTcuMS8pIC0gYGRvY2tlciBwdWxsIHdlYmdvYXQv
d2ViZ29hdC03LjFgLgoqIFtPV0FTUCBXZWJHb2F0IFByb2plY3QgOC4wIGRv
Y2tlciBpbWFnZV0oaHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL3dlYmdvYXQv
d2ViZ29hdC04LjAvKSAtIGBkb2NrZXIgcHVsbCB3ZWJnb2F0L3dlYmdvYXQt
OC4wYC4KKiBbVnVsbmVyYWJpbGl0eSBhcyBhIHNlcnZpY2U6IEhlYXJ0Ymxl
ZWRdKGh0dHBzOi8vaHViLmRvY2tlci5jb20vci9obWxpby92YWFzLWN2ZS0y
MDE0LTAxNjAvKSAtIGBkb2NrZXIgcHVsbCBobWxpby92YWFzLWN2ZS0yMDE0
LTAxNjBgLgoqIFtWdWxuZXJhYmlsaXR5IGFzIGEgc2VydmljZTogU2FtYmFD
cnldKGh0dHBzOi8vaHViLmRvY2tlci5jb20vci92dWxuZXJhYmxlcy9jdmUt
MjAxNy03NDk0LykgLSBgZG9ja2VyIHB1bGwgdnVsbmVyYWJsZXMvY3ZlLTIw
MTctNzQ5NGAuCiogW1Z1bG5lcmFiaWxpdHkgYXMgYSBzZXJ2aWNlOiBTaGVs
bHNob2NrXShodHRwczovL2h1Yi5kb2NrZXIuY29tL3IvaG1saW8vdmFhcy1j
dmUtMjAxNC02MjcxLykgLSBgZG9ja2VyIHB1bGwgaG1saW8vdmFhcy1jdmUt
MjAxNC02MjcxYC4KKiBbVnVsbmVyYWJsZSBXb3JkUHJlc3MgSW5zdGFsbGF0
aW9uXShodHRwczovL2h1Yi5kb2NrZXIuY29tL3Ivd3BzY2FudGVhbS92dWxu
ZXJhYmxld29yZHByZXNzLykgLSBgZG9ja2VyIHB1bGwgd3BzY2FudGVhbS92
dWxuZXJhYmxld29yZHByZXNzYC4KCiMjIyBEb2NrZXIgQ29udGFpbmVycyBv
ZiBQZW5ldHJhdGlvbiBUZXN0aW5nIERpc3RyaWJ1dGlvbnMgYW5kIFRvb2xz
CgoqIFtEb2NrZXIgQmVuY2ggZm9yIFNlY3VyaXR5XShodHRwczovL2h1Yi5k
b2NrZXIuY29tL3IvZGlvZ29tb25pY2EvZG9ja2VyLWJlbmNoLXNlY3VyaXR5
LykgLSBgZG9ja2VyIHB1bGwgZGlvZ29tb25pY2EvZG9ja2VyLWJlbmNoLXNl
Y3VyaXR5YC4KKiBbT2ZmaWNpYWwgS2FsaSBMaW51eF0oaHR0cHM6Ly9odWIu
ZG9ja2VyLmNvbS9yL2thbGlsaW51eC9rYWxpLWxpbnV4LWRvY2tlci8pIC0g
YGRvY2tlciBwdWxsIGthbGlsaW51eC9rYWxpLWxpbnV4LWRvY2tlcmAuCiog
W09mZmljaWFsIE9XQVNQIFpBUF0oaHR0cHM6Ly9naXRodWIuY29tL3phcHJv
eHkvemFwcm94eSkgLSBgZG9ja2VyIHB1bGwgb3dhc3AvemFwMmRvY2tlci1z
dGFibGVgLgoqIFtPZmZpY2lhbCBXUFNjYW5dKGh0dHBzOi8vaHViLmRvY2tl
ci5jb20vci93cHNjYW50ZWFtL3dwc2Nhbi8pIC0gYGRvY2tlciBwdWxsIHdw
c2NhbnRlYW0vd3BzY2FuYC4KKiBbU2VjdXJpdHkgTmluamFzXShodHRwczov
L2h1Yi5kb2NrZXIuY29tL3Ivb3BlbmRucy9zZWN1cml0eS1uaW5qYXMvKSAt
IGBkb2NrZXIgcHVsbCBvcGVuZG5zL3NlY3VyaXR5LW5pbmphc2AuCiogW2Rv
Y2tlci1tZXRhc3Bsb2l0XShodHRwczovL2h1Yi5kb2NrZXIuY29tL3IvcGhv
Y2Vhbi9tc2YvKSAtIGBkb2NrZXIgcHVsbCBwaG9jZWFuL21zZmAuCgojIyBG
aWxlIEZvcm1hdCBBbmFseXNpcyBUb29scwoKKiBbRXhpZlRvb2xdKGh0dHBz
Oi8vd3d3LnNuby5waHkucXVlZW5zdS5jYS9+cGhpbC9leGlmdG9vbC8pIC0g
UGxhdGZvcm0taW5kZXBlbmRlbnQgUGVybCBsaWJyYXJ5IHBsdXMgYSBjb21t
YW5kLWxpbmUgYXBwbGljYXRpb24gZm9yIHJlYWRpbmcsIHdyaXRpbmcgYW5k
IGVkaXRpbmcgbWV0YSBpbmZvcm1hdGlvbiBpbiBhIHdpZGUgdmFyaWV0eSBv
ZiBmaWxlcy4KKiBbSGFjaG9pcl0oaHR0cHM6Ly9oYWNob2lyLnJlYWR0aGVk
b2NzLmlvLykgLSBQeXRob24gbGlicmFyeSB0byB2aWV3IGFuZCBlZGl0IGEg
YmluYXJ5IHN0cmVhbSBhcyB0cmVlIG9mIGZpZWxkcyBhbmQgdG9vbHMgZm9y
IG1ldGFkYXRhIGV4dHJhY3Rpb24uCiogW0thaXRhaSBTdHJ1Y3RdKGh0dHA6
Ly9rYWl0YWkuaW8vKSAtIEZpbGUgZm9ybWF0cyBhbmQgbmV0d29yayBwcm90
b2NvbHMgZGlzc2VjdGlvbiBsYW5ndWFnZSBhbmQgd2ViIElERSwgZ2VuZXJh
dGluZyBwYXJzZXJzIGluIEMrKywgQyMsIEphdmEsIEphdmFTY3JpcHQsIFBl
cmwsIFBIUCwgUHl0aG9uLCBSdWJ5LgoqIFtwZWVwZGZdKGh0dHBzOi8vZXRl
cm5hbC10b2RvLmNvbS90b29scy9wZWVwZGYtcGRmLWFuYWx5c2lzLXRvb2wp
IC0gUHl0aG9uIHRvb2wgdG8gZXhwbG9yZSBQREYgZmlsZXMgaW4gb3JkZXIg
dG8gZmluZCBvdXQgaWYgdGhlIGZpbGUgY2FuIGJlIGhhcm1mdWwgb3Igbm90
LgoqIFtWZWxlc10oaHR0cHM6Ly9jb2Rpc2VjLmNvbS92ZWxlcy8pIC0gQmlu
YXJ5IGRhdGEgdmlzdWFsaXphdGlvbiBhbmQgYW5hbHlzaXMgdG9vbC4KCiMj
IEdOVS9MaW51eCBVdGlsaXRpZXMKCiogW0h3YWNoYV0oaHR0cHM6Ly9naXRo
dWIuY29tL24wMHB5L0h3YWNoYSkgLSBQb3N0LWV4cGxvaXRhdGlvbiB0b29s
IHRvIHF1aWNrbHkgZXhlY3V0ZSBwYXlsb2FkcyB2aWEgU1NIIG9uIG9uZSBv
ciBtb3JlIExpbnV4IHN5c3RlbXMgc2ltdWx0YW5lb3VzbHkuCiogW0xpbkVu
dW1dKGh0dHBzOi8vZ2l0aHViLmNvbS9yZWJvb3R1c2VyL0xpbkVudW0pIC0g
U2NyaXB0ZWQgbG9jYWwgTGludXggZW51bWVyYXRpb24gYW5kIHByaXZpbGVn
ZSBlc2NhbGF0aW9uIGNoZWNrZXIgdXNlZnVsIGZvciBhdWRpdGluZyBhIGhv
c3QgYW5kIGR1cmluZyBDVEYgZ2FtaW5nLgoqIFtMaW51eCBFeHBsb2l0IFN1
Z2dlc3Rlcl0oaHR0cHM6Ly9naXRodWIuY29tL1BlbnR1cmFMYWJzL0xpbnV4
X0V4cGxvaXRfU3VnZ2VzdGVyKSAtIEhldXJpc3RpYyByZXBvcnRpbmcgb24g
cG90ZW50aWFsbHkgdmlhYmxlIGV4cGxvaXRzIGZvciBhIGdpdmVuIEdOVS9M
aW51eCBzeXN0ZW0uCiogW0x5bmlzXShodHRwczovL2Npc29meS5jb20vbHlu
aXMvKSAtIEF1ZGl0aW5nIHRvb2wgZm9yIFVOSVgtYmFzZWQgc3lzdGVtcy4K
KiBbY2hlY2tzZWMuc2hdKGh0dHBzOi8vd3d3LnRyYXBraXQuZGUvdG9vbHMv
Y2hlY2tzZWMuaHRtbCkgLSBTaGVsbCBzY3JpcHQgZGVzaWduZWQgdG8gdGVz
dCB3aGF0IHN0YW5kYXJkIExpbnV4IE9TIGFuZCBQYVggc2VjdXJpdHkgZmVh
dHVyZXMgYXJlIGJlaW5nIHVzZWQuCiogW3VuaXgtcHJpdmVzYy1jaGVja10o
aHR0cHM6Ly9naXRodWIuY29tL3BlbnRlc3Rtb25rZXkvdW5peC1wcml2ZXNj
LWNoZWNrKSAtIFNoZWxsIHNjcmlwdCB0byBjaGVjayBmb3Igc2ltcGxlIHBy
aXZpbGVnZSBlc2NhbGF0aW9uIHZlY3RvcnMgb24gVU5JWCBzeXN0ZW1zLgoK
IyMgSGFzaCBDcmFja2luZyBUb29scwoKKiBbQnJ1dGVGb3JjZSBXYWxsZXRd
KGh0dHBzOi8vZ2l0aHViLmNvbS9nbHYyL2JydXRlZm9yY2Utd2FsbGV0KSAt
IEZpbmQgdGhlIHBhc3N3b3JkIG9mIGFuIGVuY3J5cHRlZCB3YWxsZXQgZmls
ZSAoaS5lLiBgd2FsbGV0LmRhdGApLgoqIFtDZVdMXShodHRwczovL2RpZ2ku
bmluamEvcHJvamVjdHMvY2V3bC5waHApIC0gR2VuZXJhdGVzIGN1c3RvbSB3
b3JkbGlzdHMgYnkgc3BpZGVyaW5nIGEgdGFyZ2V0J3Mgd2Vic2l0ZSBhbmQg
Y29sbGVjdGluZyB1bmlxdWUgd29yZHMuCiogW0hhc2hjYXRdKGh0dHA6Ly9o
YXNoY2F0Lm5ldC9oYXNoY2F0LykgLSBUaGUgbW9yZSBmYXN0IGhhc2ggY3Jh
Y2tlci4KKiBbaGF0ZV9jcmFja10oaHR0cHM6Ly9naXRodWIuY29tL3RydXN0
ZWRzZWMvaGF0ZV9jcmFjaykgLSBUb29sIGZvciBhdXRvbWF0aW5nIGNyYWNr
aW5nIG1ldGhvZG9sb2dpZXMgdGhyb3VnaCBIYXNoY2F0LgoqIFtKV1QgQ3Jh
Y2tlcl0oaHR0cHM6Ly9naXRodWIuY29tL2xtYW1taW5vL2p3dC1jcmFja2Vy
KSAtIFNpbXBsZSBIUzI1NiBKU09OIFdlYiBUb2tlbiAoSldUKSB0b2tlbiBi
cnV0ZSBmb3JjZSBjcmFja2VyLgoqIFtKb2huIHRoZSBSaXBwZXJdKGh0dHA6
Ly93d3cub3BlbndhbGwuY29tL2pvaG4vKSAtIEZhc3QgcGFzc3dvcmQgY3Jh
Y2tlci4KKiBbUmFyIENyYWNrXShodHRwOi8vcmFyY3JhY2suc291cmNlZm9y
Z2UubmV0KSAtIFJBUiBicnV0ZWZvcmNlIGNyYWNrZXIuCiogW1N0ZWdDcmFj
a2VyXShodHRwczovL2dpdGh1Yi5jb20vUGFyYWRveGlzL1N0ZWdDcmFja2Vy
KSAtIFN0ZWdhbm9ncmFwaHkgYnJ1dGUtZm9yY2UgdXRpbGl0eSB0byB1bmNv
dmVyIGhpZGRlbiBkYXRhIGluc2lkZSBmaWxlcy4KCiMjIEhleCBFZGl0b3Jz
CgoqIFsweEVEXShodHRwOi8vd3d3LnN1YXZldGVjaC5jb20vMHhlZC8weGVk
Lmh0bWwpIC0gTmF0aXZlIG1hY09TIGhleCBlZGl0b3IgdGhhdCBzdXBwb3J0
cyBwbHVnLWlucyB0byBkaXNwbGF5IGN1c3RvbSBkYXRhIHR5cGVzLgoqIFtC
bGVzc10oaHR0cHM6Ly9naXRodWIuY29tL2J3cnNhbmRtYW4vQmxlc3MpIC0g
SGlnaCBxdWFsaXR5LCBmdWxsIGZlYXR1cmVkLCBjcm9zcy1wbGF0Zm9ybSBn
cmFwaGljYWwgaGV4IGVkaXRvciB3cml0dGVuIGluIEd0ayMuCiogW0ZyaGVk
XShodHRwOi8vZnJoZWQuc291cmNlZm9yZ2UubmV0LykgLSBCaW5hcnkgZmls
ZSBlZGl0b3IgZm9yIFdpbmRvd3MuCiogW0hleCBGaWVuZF0oaHR0cDovL3Jp
ZGljdWxvdXNmaXNoLmNvbS9oZXhmaWVuZC8pIC0gRmFzdCwgb3BlbiBzb3Vy
Y2UsIGhleCBlZGl0b3IgZm9yIG1hY09TIHdpdGggc3VwcG9ydCBmb3Igdmll
d2luZyAgYmluYXJ5IGRpZmZzLgoqIFtIZXhFZGl0LmpzXShodHRwczovL2hl
eGVkLml0KSAtIEJyb3dzZXItYmFzZWQgaGV4IGVkaXRpbmcuCiogW0hleGlu
YXRvcl0oaHR0cHM6Ly9oZXhpbmF0b3IuY29tLykgLSBXb3JsZCdzIGZpbmVz
dCAocHJvcHJpZXRhcnksIGNvbW1lcmNpYWwpIEhleCBFZGl0b3IuCiogW2hl
eGVkaXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9waXhlbC9oZXhlZGl0KSAtIFNp
bXBsZSwgZmFzdCwgY29uc29sZS1iYXNlZCBoZXggZWRpdG9yLgoqIFt3eEhl
eEVkaXRvcl0oaHR0cDovL3d3dy53eGhleGVkaXRvci5vcmcvKSAtIEZyZWUg
R1VJIGhleCBlZGl0b3IgZm9yIEdOVS9MaW51eCwgbWFjT1MsIGFuZCBXaW5k
b3dzLgoKIyMgSW5kdXN0cmlhbCBDb250cm9sIGFuZCBTQ0FEQSBTeXN0ZW1z
CgpTZWUgYWxzbyBbYXdlc29tZS1pbmR1c3RyaWFsLWNvbnRyb2wtc3lzdGVt
LXNlY3VyaXR5XShodHRwczovL2dpdGh1Yi5jb20vaHNsYXRtYW4vYXdlc29t
ZS1pbmR1c3RyaWFsLWNvbnRyb2wtc3lzdGVtLXNlY3VyaXR5KS4KCiogW0lu
ZHVzdHJpYWwgRXhwbG9pdGF0aW9uIEZyYW1ld29yayAoSVNGKV0oaHR0cHM6
Ly9naXRodWIuY29tL2RhcmstbGJwL2lzZikgLSBNZXRhc3Bsb2l0LWxpa2Ug
ZXhwbG9pdCBmcmFtZXdvcmsgYmFzZWQgb24gcm91dGVyc3Bsb2l0IGRlc2ln
bmVkIHRvIHRhcmdldCBJbmR1c3RyaWFsIENvbnRyb2wgU3lzdGVtcyAoSUNT
KSwgU0NBREEgZGV2aWNlcywgUExDIGZpcm13YXJlLCBhbmQgbW9yZS4gCiog
W3M3c2Nhbl0oaHR0cHM6Ly9naXRodWIuY29tL2tsc2Vjc2VydmljZXMvczdz
Y2FuKSAtIFNjYW5uZXIgZm9yIGVudW1lcmF0aW5nIFNpZW1lbnMgUzcgUExD
cyBvbiBhIFRDUC9JUCBvciBMTEMgbmV0d29yay4KCiMjIE11bHRpLXBhcmFk
aWdtIEZyYW1ld29ya3MKCiogW0FybWl0YWdlXShodHRwOi8vZmFzdGFuZGVh
c3loYWNraW5nLmNvbS8pIC0gSmF2YS1iYXNlZCBHVUkgZnJvbnQtZW5kIGZv
ciB0aGUgTWV0YXNwbG9pdCBGcmFtZXdvcmsuCiogW0F1dG9TcGxvaXRdKGh0
dHBzOi8vZ2l0aHViLmNvbS9OdWxsQXJyYXkvQXV0b1NwbG9pdCkgLSBBdXRv
bWF0ZWQgbWFzcyBleHBsb2l0ZXIsIHdoaWNoIGNvbGxlY3RzIHRhcmdldCBi
eSBlbXBsb3lpbmcgdGhlIFNob2Rhbi5pbyBBUEkgYW5kIHByb2dyYW1tYXRp
Y2FsbHkgY2hvb3NlcyBNZXRhc3Bsb2l0IGV4cGxvaXQgbW9kdWxlcyBiYXNl
ZCBvbiB0aGUgU2hvZGFuIHF1ZXJ5LgoqIFtEZWNrZXJdKGh0dHBzOi8vZ2l0
aHViLmNvbS9zdGV2ZW5hbGRpbmdlci9kZWNrZXIpIC0gUGVuZXRyYXRpb24g
dGVzdGluZyBvcmNoZXN0cmF0aW9uIGFuZCBhdXRvbWF0aW9uIGZyYW1ld29y
aywgd2hpY2ggYWxsb3dzIHdyaXRpbmcgZGVjbGFyYXRpdmUsIHJldXNhYmxl
IGNvbmZpZ3VyYXRpb25zIGNhcGFibGUgb2YgaW5nZXN0aW5nIHZhcmlhYmxl
cyBhbmQgdXNpbmcgb3V0cHV0cyBvZiB0b29scyBpdCBoYXMgcnVuIGFzIGlu
cHV0cyB0byBvdGhlcnMuCiogW0ZhcmFkYXldKGh0dHBzOi8vZ2l0aHViLmNv
bS9pbmZvYnl0ZS9mYXJhZGF5KSAtIE11bHRpdXNlciBpbnRlZ3JhdGVkIHBl
bnRlc3RpbmcgZW52aXJvbm1lbnQgZm9yIHJlZCB0ZWFtcyBwZXJmb3JtaW5n
IGNvb3BlcmF0aXZlIHBlbmV0cmF0aW9uIHRlc3RzLCBzZWN1cml0eSBhdWRp
dHMsIGFuZCByaXNrIGFzc2Vzc21lbnRzLgoqIFtNZXRhc3Bsb2l0XShodHRw
czovL3d3dy5tZXRhc3Bsb2l0LmNvbS8pIC0gU29mdHdhcmUgZm9yIG9mZmVu
c2l2ZSBzZWN1cml0eSB0ZWFtcyB0byBoZWxwIHZlcmlmeSB2dWxuZXJhYmls
aXRpZXMgYW5kIG1hbmFnZSBzZWN1cml0eSBhc3Nlc3NtZW50cy4KKiBbUHVw
eV0oaHR0cHM6Ly9naXRodWIuY29tL24xbmo0c2VjL3B1cHkpIC0gQ3Jvc3Mt
cGxhdGZvcm0gKFdpbmRvd3MsIExpbnV4LCBtYWNPUywgQW5kcm9pZCkgcmVt
b3RlIGFkbWluaXN0cmF0aW9uIGFuZCBwb3N0LWV4cGxvaXRhdGlvbiB0b29s
LgoKIyMgTmV0d29yayBUb29scwoKKiBbQ3JhY2tNYXBFeGVjXShodHRwczov
L2dpdGh1Yi5jb20vYnl0M2JsMzNkM3IvQ3JhY2tNYXBFeGVjKSAtIFN3aXNz
IGFybXkga25pZmUgZm9yIHBlbnRlc3RpbmcgbmV0d29ya3MuCiogW0lLRUZv
cmNlXShodHRwczovL2dpdGh1Yi5jb20vU3BpZGVyTGFicy9pa2Vmb3JjZSkg
LSBDb21tYW5kIGxpbmUgSVBTRUMgVlBOIGJydXRlIGZvcmNpbmcgdG9vbCBm
b3IgTGludXggdGhhdCBhbGxvd3MgZ3JvdXAgbmFtZS9JRCBlbnVtZXJhdGlv
biBhbmQgWEFVVEggYnJ1dGUgZm9yY2luZyBjYXBhYmlsaXRpZXMuCiogW0lu
dGVyY2VwdGVyLU5HXShodHRwOi8vc25pZmYuc3UvKSAtIE11bHRpZnVuY3Rp
b25hbCBuZXR3b3JrIHRvb2xraXQuCiogW0xlZ2lvbl0oaHR0cHM6Ly9naXRo
dWIuY29tL0dvVmFuZ3VhcmQvbGVnaW9uKSAtIEdyYXBoaWNhbCBzZW1pLWF1
dG9tYXRlZCBkaXNjb3ZlcnkgYW5kIHJlY29ubmFpc3NhbmNlIGZyYW1ld29y
ayBiYXNlZCBvbiBQeXRob24gMyAgYW5kIGZvcmtlZCBmcm9tIFNQQVJUQS4K
KiBbTmV0d29yay1Ub29scy5jb21dKGh0dHA6Ly9uZXR3b3JrLXRvb2xzLmNv
bS8pIC0gV2Vic2l0ZSBvZmZlcmluZyBhbiBpbnRlcmZhY2UgdG8gbnVtZXJv
dXMgYmFzaWMgbmV0d29yayB1dGlsaXRpZXMgbGlrZSBgcGluZ2AsIGB0cmFj
ZXJvdXRlYCwgYHdob2lzYCwgYW5kIG1vcmUuCiogW1ByYWVkYV0oaHR0cDov
L2guZm9vZnVzLm5ldC8/cGFnZV9pZD0yMTgpIC0gQXV0b21hdGVkIG11bHRp
LWZ1bmN0aW9uIHByaW50ZXIgZGF0YSBoYXJ2ZXN0ZXIgZm9yIGdhdGhlcmlu
ZyB1c2FibGUgZGF0YSBkdXJpbmcgc2VjdXJpdHkgYXNzZXNzbWVudHMuCiog
W1ByaW50ZXIgRXhwbG9pdGF0aW9uIFRvb2xraXQgKFBSRVQpXShodHRwczov
L2dpdGh1Yi5jb20vUlVCLU5EUy9QUkVUKSAtIFRvb2wgZm9yIHByaW50ZXIg
c2VjdXJpdHkgdGVzdGluZyBjYXBhYmxlIG9mIElQIGFuZCBVU0IgY29ubmVj
dGl2aXR5LCBmdXp6aW5nLCBhbmQgZXhwbG9pdGF0aW9uIG9mIFBvc3RTY3Jp
cHQsIFBKTCwgYW5kIFBDTCBwcmludGVyIGxhbmd1YWdlIGZlYXR1cmVzLgoq
IFtTUEFSVEFdKGh0dHBzOi8vc3BhcnRhLnNlY2ZvcmNlLmNvbS8pIC0gR3Jh
cGhpY2FsIGludGVyZmFjZSBvZmZlcmluZyBzY3JpcHRhYmxlLCBjb25maWd1
cmFibGUgYWNjZXNzIHRvIGV4aXN0aW5nIG5ldHdvcmsgaW5mcmFzdHJ1Y3R1
cmUgc2Nhbm5pbmcgYW5kIGVudW1lcmF0aW9uIHRvb2xzLgoqIFtTbWFydCBJ
bnN0YWxsIEV4cGxvaXRhdGlvbiBUb29sIChTSUVUKV0oaHR0cHM6Ly9naXRo
dWIuY29tL1NhYjB0YWczZC9TSUVUKSAtIFNjcmlwdHMgZm9yIGlkZW50aWZ5
aW5nIENpc2NvIFNtYXJ0IEluc3RhbGwtZW5hYmxlZCBzd2l0Y2hlcyBvbiBh
IG5ldHdvcmsgYW5kIHRoZW4gbWFuaXB1bGF0aW5nIHRoZW0uCiogW1RIQyBI
eWRyYV0oaHR0cHM6Ly9naXRodWIuY29tL3ZhbmhhdXNlci10aGMvdGhjLWh5
ZHJhKSAtIE9ubGluZSBwYXNzd29yZCBjcmFja2luZyB0b29sIHdpdGggYnVp
bHQtaW4gc3VwcG9ydCBmb3IgbWFueSBuZXR3b3JrIHByb3RvY29scywgaW5j
bHVkaW5nIEhUVFAsIFNNQiwgRlRQLCB0ZWxuZXQsIElDUSwgTXlTUUwsIExE
QVAsIElNQVAsIFZOQywgYW5kIG1vcmUuCiogW1phcnBdKGh0dHBzOi8vZ2l0
aHViLmNvbS9oYXRSaW90L3phcnApIC0gTmV0d29yayBhdHRhY2sgdG9vbCBj
ZW50ZXJlZCBhcm91bmQgdGhlIGV4cGxvaXRhdGlvbiBvZiBsb2NhbCBuZXR3
b3Jrcy4KKiBbZG5zdHdpc3RdKGh0dHBzOi8vZ2l0aHViLmNvbS9lbGNlZWYv
ZG5zdHdpc3QpIC0gRG9tYWluIG5hbWUgcGVybXV0YXRpb24gZW5naW5lIGZv
ciBkZXRlY3RpbmcgdHlwbyBzcXVhdHRpbmcsIHBoaXNoaW5nIGFuZCBjb3Jw
b3JhdGUgZXNwaW9uYWdlLgoqIFtkc25pZmZdKGh0dHBzOi8vd3d3Lm1vbmtl
eS5vcmcvfmR1Z3NvbmcvZHNuaWZmLykgLSBDb2xsZWN0aW9uIG9mIHRvb2xz
IGZvciBuZXR3b3JrIGF1ZGl0aW5nIGFuZCBwZW50ZXN0aW5nLgoqIFtpbXBh
Y2tldF0oaHR0cHM6Ly9naXRodWIuY29tL0NvcmVTZWN1cml0eS9pbXBhY2tl
dCkgLSBDb2xsZWN0aW9uIG9mIFB5dGhvbiBjbGFzc2VzIGZvciB3b3JraW5n
IHdpdGggbmV0d29yayBwcm90b2NvbHMuCiogW3Bpdm90c3VpdGVdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9SZWRUZWFtT3BlcmF0aW9ucy9QaXZvdFN1aXRlKSAt
IFBvcnRhYmxlLCBwbGF0Zm9ybSBpbmRlcGVuZGVudCBhbmQgcG93ZXJmdWwg
bmV0d29yayBwaXZvdGluZyB0b29sa2l0LgoqIFtyb3V0ZXJzcGxvaXRdKGh0
dHBzOi8vZ2l0aHViLmNvbS9yZXZlcnNlLXNoZWxsL3JvdXRlcnNwbG9pdCkg
LSBPcGVuIHNvdXJjZSBleHBsb2l0YXRpb24gZnJhbWV3b3JrIHNpbWlsYXIg
dG8gTWV0YXNwbG9pdCBidXQgZGVkaWNhdGVkIHRvIGVtYmVkZGVkIGRldmlj
ZXMuCiogW3JzaGlqYWNrXShodHRwczovL2dpdGh1Yi5jb20va3BjeXJkL3Jz
aGlqYWNrKSAtIFRDUCBjb25uZWN0aW9uIGhpamFja2VyLCBSdXN0IHJld3Jp
dGUgb2YgYHNoaWphY2tgLgoKIyMjIEREb1MgVG9vbHMKCiogW0FuZXZpY29u
XShodHRwczovL2dpdGh1Yi5jb20vR3ltbWFzc3NvcmxhL2FuZXZpY29uKSAt
IFBvd2VyZnVsIFVEUC1iYXNlZCBsb2FkIGdlbmVyYXRvciwgd3JpdHRlbiBp
biBSdXN0LgoqIFtIT0lDXShodHRwczovL3NvdXJjZWZvcmdlLm5ldC9wcm9q
ZWN0cy9oaWdoLW9yYml0LWlvbi1jYW5ub24vKSAtIFVwZGF0ZWQgdmVyc2lv
biBvZiBMb3cgT3JiaXQgSW9uIENhbm5vbiwgaGFzICdib29zdGVycycgdG8g
Z2V0IGFyb3VuZCBjb21tb24gY291bnRlciBtZWFzdXJlcy4KKiBbSlMgTE9J
Q10oaHR0cDovL21ldGFjb3J0ZXhzZWN1cml0eS5jb20vdG9vbHMvYW5vbi9M
T0lDL0xPSUN2MS5odG1sKSAtIEphdmFTY3JpcHQgaW4tYnJvd3NlciB2ZXJz
aW9uIG9mIExPSUMuCiogW0xPSUNdKGh0dHBzOi8vZ2l0aHViLmNvbS9OZXdF
cmFDcmFja2VyL0xPSUMvKSAtIE9wZW4gc291cmNlIG5ldHdvcmsgc3RyZXNz
IHRvb2wgZm9yIFdpbmRvd3MuCiogW01lbWNyYXNoZWRdKGh0dHBzOi8vZ2l0
aHViLmNvbS82NDkvTWVtY3Jhc2hlZC1ERG9TLUV4cGxvaXQpIC0gRERvUyBh
dHRhY2sgdG9vbCBmb3Igc2VuZGluZyBmb3JnZWQgVURQIHBhY2tldHMgdG8g
dnVsbmVyYWJsZSBNZW1jYWNoZWQgc2VydmVycyBvYnRhaW5lZCB1c2luZyBT
aG9kYW4gQVBJLgoqIFtTbG93TG9yaXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9n
a2Jyay9zbG93bG9yaXMpIC0gRG9TIHRvb2wgdGhhdCB1c2VzIGxvdyBiYW5k
d2lkdGggb24gdGhlIGF0dGFja2luZyBzaWRlLgoqIFtUNTBdKGh0dHBzOi8v
Z2l0bGFiLmNvbS9mcmVkZXJpY29waXNzYXJyYS90NTAvKSAtIEZhc3RlciBu
ZXR3b3JrIHN0cmVzcyB0b29sLgoqIFtVRk9OZXRdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9lcHN5bG9uL3Vmb25ldCkgLSBBYnVzZXMgT1NJIGxheWVyIDcgSFRU
UCB0byBjcmVhdGUvbWFuYWdlICd6b21iaWVzJyBhbmQgdG8gY29uZHVjdCBk
aWZmZXJlbnQgYXR0YWNrcyB1c2luZzsgYEdFVGAvYFBPU1RgLCBtdWx0aXRo
cmVhZGluZywgcHJveGllcywgb3JpZ2luIHNwb29maW5nIG1ldGhvZHMsIGNh
Y2hlIGV2YXNpb24gdGVjaG5pcXVlcywgZXRjLgoKIyMjIEV4ZmlsdHJhdGlv
biBUb29scwoKKiBbQ2xvYWtpZnldKGh0dHBzOi8vZ2l0aHViLmNvbS9UcnlD
YXRjaEhDRi9DbG9ha2lmeSkgLSBUZXh0dWFsIHN0ZWdhbm9ncmFwaHkgdG9v
bGtpdCB0aGF0IGNvbnZlcnRzIGFueSBmaWxldHlwZSBpbnRvIGxpc3RzIG9m
IGV2ZXJ5ZGF5IHN0cmluZ3MuCiogW0RFVF0oaHR0cHM6Ly9naXRodWIuY29t
L3NlbnNlcG9zdC9ERVQpIC0gUHJvb2Ygb2YgY29uY2VwdCB0byBwZXJmb3Jt
IGRhdGEgZXhmaWx0cmF0aW9uIHVzaW5nIGVpdGhlciBzaW5nbGUgb3IgbXVs
dGlwbGUgY2hhbm5lbChzKSBhdCB0aGUgc2FtZSB0aW1lLgoqIFtJb2RpbmVd
KGh0dHBzOi8vY29kZS5rcnlvLnNlL2lvZGluZS8pIC0gVHVubmVsIElQdjQg
ZGF0YSB0aHJvdWdoIGEgRE5TIHNlcnZlcjsgdXNlZnVsIGZvciBleGZpbHRy
YXRpb24gZnJvbSBuZXR3b3JrcyB3aGVyZSBJbnRlcm5ldCBhY2Nlc3MgaXMg
ZmlyZXdhbGxlZCwgYnV0IEROUyBxdWVyaWVzIGFyZSBhbGxvd2VkLgoqIFtU
cmV2b3JDMl0oaHR0cHM6Ly9naXRodWIuY29tL3RydXN0ZWRzZWMvdHJldm9y
YzIpIC0gQ2xpZW50L3NlcnZlciB0b29sIGZvciBtYXNraW5nIGNvbW1hbmQg
YW5kIGNvbnRyb2wgYW5kIGRhdGEgZXhmaWx0cmF0aW9uIHRocm91Z2ggYSBu
b3JtYWxseSBicm93c2FibGUgd2Vic2l0ZSwgbm90IHR5cGljYWwgSFRUUCBQ
T1NUIHJlcXVlc3RzLgoqIFtkbnNjYXQyXShodHRwczovL2dpdGh1Yi5jb20v
aWFnb3g4Ni9kbnNjYXQyKSAtIFRvb2wgZGVzaWduZWQgdG8gY3JlYXRlIGFu
IGVuY3J5cHRlZCBjb21tYW5kIGFuZCBjb250cm9sIGNoYW5uZWwgb3ZlciB0
aGUgRE5TIHByb3RvY29sLCB3aGljaCBpcyBhbiBlZmZlY3RpdmUgdHVubmVs
IG91dCBvZiBhbG1vc3QgZXZlcnkgbmV0d29yay4KKiBbcHduYXRdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9zYW15ay9wd25hdCkgLSBQdW5jaGVzIGhvbGVzIGlu
IGZpcmV3YWxscyBhbmQgTkFUcy4KKiBbdGdjZF0oaHR0cDovL3RnY2Quc291
cmNlZm9yZ2UubmV0LykgLSBTaW1wbGUgVW5peCBuZXR3b3JrIHV0aWxpdHkg
dG8gZXh0ZW5kIHRoZSBhY2Nlc3NpYmlsaXR5IG9mIFRDUC9JUCBiYXNlZCBu
ZXR3b3JrIHNlcnZpY2VzIGJleW9uZCBmaXJld2FsbHMuCgojIyMgTmV0d29y
ayBSZWNvbm5haXNzYW5jZSBUb29scwoKKiBbQUNMaWdodF0oaHR0cHM6Ly9n
aXRodWIuY29tL2N5YmVyYXJrL0FDTGlnaHQpIC0gU2NyaXB0IGZvciBhZHZh
bmNlZCBkaXNjb3Zlcnkgb2Ygc2Vuc2l0aXZlIFByaXZpbGVnZWQgQWNjb3Vu
dHMgLSBpbmNsdWRlcyBTaGFkb3cgQWRtaW5zLgoqIFtDbG91ZEZhaWxdKGh0
dHBzOi8vZ2l0aHViLmNvbS9tMHJ0ZW0vQ2xvdWRGYWlsKSAtIFVubWFzayBz
ZXJ2ZXIgSVAgYWRkcmVzc2VzIGhpZGRlbiBiZWhpbmQgQ2xvdWRmbGFyZSBi
eSBzZWFyY2hpbmcgb2xkIGRhdGFiYXNlIHJlY29yZHMgYW5kIGRldGVjdGlu
ZyBtaXNjb25maWd1cmVkIEROUy4KKiBbRE5TRHVtcHN0ZXJdKGh0dHBzOi8v
ZG5zZHVtcHN0ZXIuY29tLykgLSBPbmxpbmUgRE5TIHJlY29uIGFuZCBzZWFy
Y2ggc2VydmljZS4KKiBbTWFzcyBTY2FuXShodHRwczovL2dpdGh1Yi5jb20v
cm9iZXJ0ZGF2aWRncmFoYW0vbWFzc2NhbikgLSBUQ1AgcG9ydCBzY2FubmVy
LCBzcGV3cyBTWU4gcGFja2V0cyBhc3luY2hyb25vdXNseSwgc2Nhbm5pbmcg
ZW50aXJlIEludGVybmV0IGluIHVuZGVyIDUgbWludXRlcy4KKiBbU2NhbkNh
bm5vbl0oaHR0cHM6Ly9naXRodWIuY29tL2pvaG5ueXhtYXMvU2NhbkNhbm5v
bikgLSBQeXRob24gc2NyaXB0IHRvIHF1aWNrbHkgZW51bWVyYXRlIGxhcmdl
IG5ldHdvcmtzIGJ5IGNhbGxpbmcgYG1hc3NjYW5gIHRvIHF1aWNrbHkgaWRl
bnRpZnkgb3BlbiBwb3J0cyBhbmQgdGhlbiBgbm1hcGAgdG8gZ2FpbiBkZXRh
aWxzIG9uIHRoZSBzeXN0ZW1zL3NlcnZpY2VzIG9uIHRob3NlIHBvcnRzLgoq
IFtYUmF5XShodHRwczovL2dpdGh1Yi5jb20vZXZpbHNvY2tldC94cmF5KSAt
IE5ldHdvcmsgKHN1Yilkb21haW4gZGlzY292ZXJ5IGFuZCByZWNvbm5haXNz
YW5jZSBhdXRvbWF0aW9uIHRvb2wuCiogW2Ruc2VudW1dKGh0dHBzOi8vZ2l0
aHViLmNvbS9md2FleXRlbnMvZG5zZW51bS8pIC0gUGVybCBzY3JpcHQgdGhh
dCBlbnVtZXJhdGVzIEROUyBpbmZvcm1hdGlvbiBmcm9tIGEgZG9tYWluLCBh
dHRlbXB0cyB6b25lIHRyYW5zZmVycywgcGVyZm9ybXMgYSBicnV0ZSBmb3Jj
ZSBkaWN0aW9uYXJ5IHN0eWxlIGF0dGFjaywgYW5kIHRoZW4gcGVyZm9ybXMg
cmV2ZXJzZSBsb29rLXVwcyBvbiB0aGUgcmVzdWx0cy4KKiBbZG5zbWFwXSho
dHRwczovL2dpdGh1Yi5jb20vbWFrZWZ1L2Ruc21hcC8pIC0gUGFzc2l2ZSBE
TlMgbmV0d29yayBtYXBwZXIuCiogW2Ruc3JlY29uXShodHRwczovL2dpdGh1
Yi5jb20vZGFya29wZXJhdG9yL2Ruc3JlY29uLykgLSBETlMgZW51bWVyYXRp
b24gc2NyaXB0LgoqIFtkbnN0cmFjZXJdKGh0dHA6Ly93d3cubWF2ZXRqdS5v
cmcvdW5peC9kbnN0cmFjZXIucGhwKSAtIERldGVybWluZXMgd2hlcmUgYSBn
aXZlbiBETlMgc2VydmVyIGdldHMgaXRzIGluZm9ybWF0aW9uIGZyb20sIGFu
ZCBmb2xsb3dzIHRoZSBjaGFpbiBvZiBETlMgc2VydmVycy4KKiBbZmllcmNl
XShodHRwczovL2dpdGh1Yi5jb20vbXNjaHdhZ2VyL2ZpZXJjZSkgLSBQeXRo
b24zIHBvcnQgb2YgdGhlIG9yaWdpbmFsIGBmaWVyY2UucGxgIEROUyByZWNv
bm5haXNzYW5jZSB0b29sIGZvciBsb2NhdGluZyBub24tY29udGlndW91cyBJ
UCBzcGFjZS4KKiBbbm1hcF0oaHR0cHM6Ly9ubWFwLm9yZy8pIC0gRnJlZSBz
ZWN1cml0eSBzY2FubmVyIGZvciBuZXR3b3JrIGV4cGxvcmF0aW9uICYgc2Vj
dXJpdHkgYXVkaXRzLgoqIFtwYXNzaXZlZG5zLWNsaWVudF0oaHR0cHM6Ly9n
aXRodWIuY29tL2NocmlzbGVlMzUvcGFzc2l2ZWRucy1jbGllbnQpIC0gTGli
cmFyeSBhbmQgcXVlcnkgdG9vbCBmb3IgcXVlcnlpbmcgc2V2ZXJhbCBwYXNz
aXZlIEROUyBwcm92aWRlcnMuCiogW3Bhc3NpdmVkbnNdKGh0dHBzOi8vZ2l0
aHViLmNvbS9nYW1lbGludXgvcGFzc2l2ZWRucykgLSBOZXR3b3JrIHNuaWZm
ZXIgdGhhdCBsb2dzIGFsbCBETlMgc2VydmVyIHJlcGxpZXMgZm9yIHVzZSBp
biBhIHBhc3NpdmUgRE5TIHNldHVwLgoqIFtzY2FubGVzc10oaHR0cHM6Ly9n
aXRodWIuY29tL3Zlc2NoZS9zY2FubGVzcykgLSBVdGlsaXR5IGZvciB1c2lu
ZyB3ZWJzaXRlcyB0byBwZXJmb3JtIHBvcnQgc2NhbnMgb24geW91ciBiZWhh
bGYgc28gYXMgbm90IHRvIHJldmVhbCB5b3VyIG93biBJUC4KKiBbc21ibWFw
XShodHRwczovL2dpdGh1Yi5jb20vU2hhd25ERXZhbnMvc21ibWFwKSAtIEhh
bmR5IFNNQiBlbnVtZXJhdGlvbiB0b29sLgoqIFt6bWFwXShodHRwczovL3pt
YXAuaW8vKSAtIE9wZW4gc291cmNlIG5ldHdvcmsgc2Nhbm5lciB0aGF0IGVu
YWJsZXMgcmVzZWFyY2hlcnMgdG8gZWFzaWx5IHBlcmZvcm0gSW50ZXJuZXQt
d2lkZSBuZXR3b3JrIHN0dWRpZXMuCgojIyMgUHJvdG9jb2wgQW5hbHl6ZXJz
IGFuZCBTbmlmZmVycwoKKiBbRGVib29rZWVdKGh0dHA6Ly93d3cuaXdheHgu
Y29tL2RlYm9va2VlLykgLSBTaW1wbGUgYW5kIHBvd2VyZnVsIG5ldHdvcmsg
dHJhZmZpYyBhbmFseXplciBmb3IgbWFjT1MuCiogW0RzaGVsbF0oaHR0cHM6
Ly9naXRodWIuY29tL1VTQXJteVJlc2VhcmNoTGFiL0RzaGVsbCkgLSBOZXR3
b3JrIGZvcmVuc2ljIGFuYWx5c2lzIGZyYW1ld29yay4KKiBbTmV0em9iXSho
dHRwczovL2dpdGh1Yi5jb20vbmV0em9iL25ldHpvYikgLSBSZXZlcnNlIGVu
Z2luZWVyaW5nLCB0cmFmZmljIGdlbmVyYXRpb24gYW5kIGZ1enppbmcgb2Yg
Y29tbXVuaWNhdGlvbiBwcm90b2NvbHMuCiogW1dpcmVzaGFya10oaHR0cHM6
Ly93d3cud2lyZXNoYXJrLm9yZy8pIC0gV2lkZWx5LXVzZWQgZ3JhcGhpY2Fs
LCBjcm9zcy1wbGF0Zm9ybSBuZXR3b3JrIHByb3RvY29sIGFuYWx5emVyLgoq
IFtuZXRzbmlmZi1uZ10oaHR0cHM6Ly9naXRodWIuY29tL25ldHNuaWZmLW5n
L25ldHNuaWZmLW5nKSAtIFN3aXNzIGFybXkga25pZmUgZm9yIGZvciBuZXR3
b3JrIHNuaWZmaW5nLgoqIFtzbmlmZmdsdWVdKGh0dHBzOi8vZ2l0aHViLmNv
bS9rcGN5cmQvc25pZmZnbHVlKSAtIFNlY3VyZSBtdWx0aXRocmVhZGVkIHBh
Y2tldCBzbmlmZmVyLgoqIFt0Y3BkdW1wL2xpYnBjYXBdKGh0dHA6Ly93d3cu
dGNwZHVtcC5vcmcvKSAtIENvbW1vbiBwYWNrZXQgYW5hbHl6ZXIgdGhhdCBy
dW5zIHVuZGVyIHRoZSBjb21tYW5kIGxpbmUuCgojIyMgTmV0d29yayBUcmFm
ZmljIFJlcGxheSBhbmQgRWRpdGluZyBUb29scwoKKiBbVHJhY2VXcmFuZ2xl
cl0oaHR0cHM6Ly93d3cudHJhY2V3cmFuZ2xlci5jb20vKSAtIE5ldHdvcmsg
Y2FwdHVyZSBmaWxlIHRvb2xraXQgdGhhdCBjYW4gZWRpdCBhbmQgbWVyZ2Ug
YHBjYXBgIG9yIGBwY2FwbmdgIGZpbGVzIHdpdGggYmF0Y2ggZWRpdGluZyBm
ZWF0dXJlcy4KKiBbV2lyZUVkaXRdKGh0dHBzOi8vd2lyZWVkaXQuY29tLykg
LSBGdWxsIHN0YWNrIFdZU0lXWUcgcGNhcCBlZGl0b3IgKHJlcXVpcmVzIGEg
ZnJlZSBsaWNlbnNlIHRvIGVkaXQgcGFja2V0cykuCiogW2JpdHR3aXN0XSho
dHRwOi8vYml0dHdpc3Quc291cmNlZm9yZ2UubmV0LykgLSBTaW1wbGUgeWV0
IHBvd2VyZnVsIGxpYnBjYXAtYmFzZWQgRXRoZXJuZXQgcGFja2V0IGdlbmVy
YXRvciB1c2VmdWwgaW4gc2ltdWxhdGluZyBuZXR3b3JraW5nIHRyYWZmaWMg
b3Igc2NlbmFyaW8sIHRlc3RpbmcgZmlyZXdhbGwsIElEUywgYW5kIElQUywg
YW5kIHRyb3VibGVzaG9vdGluZyB2YXJpb3VzIG5ldHdvcmsgcHJvYmxlbXMu
CiogW2hwaW5nM10oaHR0cHM6Ly9naXRodWIuY29tL2FudGlyZXovaHBpbmcp
IC0gTmV0d29yayB0b29sIGFibGUgdG8gc2VuZCBjdXN0b20gVENQL0lQIHBh
Y2tldHMuCiogW3BpZ10oaHR0cHM6Ly9naXRodWIuY29tL3JhZmFlbC1zYW50
aWFnby9waWcpIC0gR05VL0xpbnV4IHBhY2tldCBjcmFmdGluZyB0b29sLgoq
IFtzY2FweV0oaHR0cHM6Ly9naXRodWIuY29tL3NlY2Rldi9zY2FweSkgLSBQ
eXRob24tYmFzZWQgaW50ZXJhY3RpdmUgcGFja2V0IG1hbmlwdWxhdGlvbiBw
cm9ncmFtIGFuZCBsaWJyYXJ5LgoqIFt0Y3ByZXBsYXldKGh0dHBzOi8vdGNw
cmVwbGF5LmFwcG5ldGEuY29tLykgLSBTdWl0ZSBvZiBmcmVlIE9wZW4gU291
cmNlIHV0aWxpdGllcyBmb3IgZWRpdGluZyBhbmQgcmVwbGF5aW5nIHByZXZp
b3VzbHkgY2FwdHVyZWQgbmV0d29yayB0cmFmZmljLgoKIyMjIFByb3hpZXMg
YW5kIE1hY2hpbmUtaW4tdGhlLU1pZGRsZSAoTUlUTSkgVG9vbHMKCiogW0Jl
dHRlckNBUF0oaHR0cHM6Ly93d3cuYmV0dGVyY2FwLm9yZy8pIC0gTW9kdWxh
ciwgcG9ydGFibGUgYW5kIGVhc2lseSBleHRlbnNpYmxlIE1JVE0gZnJhbWV3
b3JrLgoqIFtFdHRlcmNhcF0oaHR0cDovL3d3dy5ldHRlcmNhcC1wcm9qZWN0
Lm9yZykgLSBDb21wcmVoZW5zaXZlLCBtYXR1cmUgc3VpdGUgZm9yIG1hY2hp
bmUtaW4tdGhlLW1pZGRsZSBhdHRhY2tzLgoqIFtIYWJ1XShodHRwczovL2dp
dGh1Yi5jb20vcG9ydGFudGllci9oYWJ1KSAtIFB5dGhvbiB1dGlsaXR5IGlt
cGxlbWVudGluZyBhIHZhcmlldHkgb2YgbmV0d29yayBhdHRhY2tzLCBzdWNo
IGFzIEFSUCBwb2lzb25pbmcsIERIQ1Agc3RhcnZhdGlvbiwgYW5kIG1vcmUu
CiogW0xhbWJkYS1Qcm94eV0oaHR0cHM6Ly9naXRodWIuY29tL3B1cmVzZWMv
bGFtYmRhLXByb3h5KSAtIFV0aWxpdHkgZm9yIHRlc3RpbmcgU1FMIEluamVj
dGlvbiB2dWxuZXJhYmlsaXRpZXMgb24gQVdTIExhbWJkYSBzZXJ2ZXJsZXNz
IGZ1bmN0aW9ucy4KKiBbTUlUTWZdKGh0dHBzOi8vZ2l0aHViLmNvbS9ieXQz
YmwzM2Qzci9NSVRNZikgLSBGcmFtZXdvcmsgZm9yIE1hbi1Jbi1UaGUtTWlk
ZGxlIGF0dGFja3MuCiogW01vcnBoZXVzXShodHRwczovL2dpdGh1Yi5jb20v
cjAwdC0zeHAxMGl0L21vcnBoZXVzKSAtIEF1dG9tYXRlZCBldHRlcmNhcCBU
Q1AvSVAgSGlqYWNraW5nIHRvb2wuCiogW1NTSCBNSVRNXShodHRwczovL2dp
dGh1Yi5jb20vanRlc3RhL3NzaC1taXRtKSAtIEludGVyY2VwdCBTU0ggY29u
bmVjdGlvbnMgd2l0aCBhIHByb3h5OyBhbGwgcGxhaW50ZXh0IHBhc3N3b3Jk
cyBhbmQgc2Vzc2lvbnMgYXJlIGxvZ2dlZCB0byBkaXNrLgoqIFtkbnNjaGVm
XShodHRwczovL2dpdGh1Yi5jb20vaXBoZWxpeC9kbnNjaGVmKSAtIEhpZ2hs
eSBjb25maWd1cmFibGUgRE5TIHByb3h5IGZvciBwZW50ZXN0ZXJzLgoqIFtl
dmlsZ3JhZGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9pbmZvYnl0ZS9ldmlsZ3Jh
ZGUpIC0gTW9kdWxhciBmcmFtZXdvcmsgdG8gdGFrZSBhZHZhbnRhZ2Ugb2Yg
cG9vciB1cGdyYWRlIGltcGxlbWVudGF0aW9ucyBieSBpbmplY3RpbmcgZmFr
ZSB1cGRhdGVzLgoqIFttYWxsb3J5XShodHRwczovL2dpdGh1Yi5jb20vanVz
dG1hbzk0NS9tYWxsb3J5KSAtIEhUVFAvSFRUUFMgcHJveHkgb3ZlciBTU0gu
CiogW21pdG1wcm94eV0oaHR0cHM6Ly9taXRtcHJveHkub3JnLykgLSBJbnRl
cmFjdGl2ZSBUTFMtY2FwYWJsZSBpbnRlcmNlcHRpbmcgSFRUUCBwcm94eSBm
b3IgcGVuZXRyYXRpb24gdGVzdGVycyBhbmQgc29mdHdhcmUgZGV2ZWxvcGVy
cy4KKiBbb3JlZ2Fub10oaHR0cHM6Ly9naXRodWIuY29tL25hbWV0b29sb25n
L29yZWdhbm8pIC0gUHl0aG9uIG1vZHVsZSB0aGF0IHJ1bnMgYXMgYSBtYWNo
aW5lLWluLXRoZS1taWRkbGUgKE1JVE0pIGFjY2VwdGluZyBUb3IgY2xpZW50
IHJlcXVlc3RzLgoqIFtzeWxraWVdKGh0dHBzOi8vZGxyb2JlcnRzb24uZ2l0
aHViLmlvL3N5bGtpZS8pIC0gQ29tbWFuZCBsaW5lIHRvb2wgYW5kIGxpYnJh
cnkgZm9yIHRlc3RpbmcgbmV0d29ya3MgZm9yIGNvbW1vbiBhZGRyZXNzIHNw
b29maW5nIHNlY3VyaXR5IHZ1bG5lcmFiaWxpdGllcyBpbiBJUHY2IG5ldHdv
cmtzIHVzaW5nIHRoZSBOZWlnaGJvciBEaXNjb3ZlcnkgUHJvdG9jb2wuCgoj
IyMgVHJhbnNwb3J0IExheWVyIFNlY3VyaXR5IFRvb2xzCgoqIFtTU0x5emVd
KGh0dHBzOi8vZ2l0aHViLmNvbS9uYWJsYS1jMGQzL3NzbHl6ZSkgLSBGYXN0
IGFuZCBjb21wcmVoZW5zaXZlIFRMUy9TU0wgY29uZmlndXJhdGlvbiBhbmFs
eXplciB0byBoZWxwIGlkZW50aWZ5IHNlY3VyaXR5IG1pcy1jb25maWd1cmF0
aW9ucy4KKiBbY3JhY2twa2NzMTJdKGh0dHBzOi8vZ2l0aHViLmNvbS9jcmFj
a3BrY3MxMi9jcmFja3BrY3MxMikgLSBNdWx0aXRocmVhZGVkIHByb2dyYW0g
dG8gY3JhY2sgUEtDUyMxMiBmaWxlcyAoYC5wMTJgIGFuZCBgLnBmeGAgZXh0
ZW5zaW9ucyksIHN1Y2ggYXMgVExTL1NTTCBjZXJ0aWZpY2F0ZXMuCiogW3Rl
c3Rzc2wuc2hdKGh0dHBzOi8vZ2l0aHViLmNvbS9kcndldHRlci90ZXN0c3Ns
LnNoKSAtIENvbW1hbmQgbGluZSB0b29sIHdoaWNoIGNoZWNrcyBhIHNlcnZl
cidzIHNlcnZpY2Ugb24gYW55IHBvcnQgZm9yIHRoZSBzdXBwb3J0IG9mIFRM
Uy9TU0wgY2lwaGVycywgcHJvdG9jb2xzIGFzIHdlbGwgYXMgc29tZSBjcnlw
dG9ncmFwaGljIGZsYXdzLgoqIFt0bHNfcHJvYmVyXShodHRwczovL2dpdGh1
Yi5jb20vV2VzdHBvaW50THRkL3Rsc19wcm9iZXIpIC0gRmluZ2VycHJpbnQg
YSBzZXJ2ZXIncyBTU0wvVExTIGltcGxlbWVudGF0aW9uLgoKIyMjIFdpcmVs
ZXNzIE5ldHdvcmsgVG9vbHMKCiogW0FpcmNyYWNrLW5nXShodHRwOi8vd3d3
LmFpcmNyYWNrLW5nLm9yZy8pIC0gU2V0IG9mIHRvb2xzIGZvciBhdWRpdGlu
ZyB3aXJlbGVzcyBuZXR3b3Jrcy4KKiBbQWlyZ2VkZG9uXShodHRwczovL2dp
dGh1Yi5jb20vdjFzMXQwcjFzaDNyMy9haXJnZWRkb24pIC0gTXVsdGktdXNl
IGJhc2ggc2NyaXB0IGZvciBMaW51eCBzeXN0ZW1zIHRvIGF1ZGl0IHdpcmVs
ZXNzIG5ldHdvcmtzLgoqIFtCb29wU3VpdGVdKGh0dHBzOi8vZ2l0aHViLmNv
bS9NaXN0ZXJCaWFuY28vQm9vcFN1aXRlKSAtIFN1aXRlIG9mIHRvb2xzIHdy
aXR0ZW4gaW4gUHl0aG9uIGZvciB3aXJlbGVzcyBhdWRpdGluZy4KKiBbQnVs
bHldKGh0dHA6Ly9naXQua2FsaS5vcmcvZ2l0d2ViLz9wPXBhY2thZ2VzL2J1
bGx5LmdpdDthPXN1bW1hcnkpIC0gSW1wbGVtZW50YXRpb24gb2YgdGhlIFdQ
UyBicnV0ZSBmb3JjZSBhdHRhY2ssIHdyaXR0ZW4gaW4gQy4KKiBbQ293cGF0
dHldKGh0dHBzOi8vZ2l0aHViLmNvbS9qb3N3cjFnaHQvY293cGF0dHkpIC0g
QnJ1dGUtZm9yY2UgZGljdGlvbmFyeSBhdHRhY2sgYWdhaW5zdCBXUEEtUFNL
LgoqIFtGbHV4aW9uXShodHRwczovL2dpdGh1Yi5jb20vRmx1eGlvbk5ldHdv
cmsvZmx1eGlvbikgLSBTdWl0ZSBvZiBhdXRvbWF0ZWQgc29jaWFsIGVuZ2lu
ZWVyaW5nIGJhc2VkIFdQQSBhdHRhY2tzLgoqIFtLUkFDSyBEZXRlY3Rvcl0o
aHR0cHM6Ly9naXRodWIuY29tL3NlY3VyaW5nc2FtL2tyYWNrZGV0ZWN0b3Ip
IC0gRGV0ZWN0IGFuZCBwcmV2ZW50IEtSQUNLIGF0dGFja3MgaW4geW91ciBu
ZXR3b3JrLgoqIFtLaXNtZXRdKGh0dHBzOi8va2lzbWV0d2lyZWxlc3MubmV0
LykgLSBXaXJlbGVzcyBuZXR3b3JrIGRldGVjdG9yLCBzbmlmZmVyLCBhbmQg
SURTLgoqIFtwd25hZ290Y2hpXShodHRwczovL2dpdGh1Yi5jb20vZXZpbHNv
Y2tldC9wd25hZ290Y2hpKSAtIERlZXAgcmVpbmZvcmNlbWVudCBsZWFybmlu
ZyBiYXNlZCBBSSB0aGF0IGxlYXJucyBmcm9tIHRoZSBXaS1GaSBlbnZpcm9u
bWVudCBhbmQgaW5zdHJ1bWVudHMgQmV0dGVyQ0FQIGluIG9yZGVyIHRvIG1h
eGltaXplIHRoZSBXUEEga2V5IG1hdGVyaWFsIGNhcHR1cmVkLgoqIFtSZWF2
ZXJdKGh0dHBzOi8vY29kZS5nb29nbGUuY29tL2FyY2hpdmUvcC9yZWF2ZXIt
d3BzKSAtIEJydXRlIGZvcmNlIGF0dGFjayBhZ2FpbnN0IFdpRmkgUHJvdGVj
dGVkIFNldHVwLgoqIFtXaUZpLVB1bXBraW5dKGh0dHBzOi8vZ2l0aHViLmNv
bS9QMGNMNGJzL1dpRmktUHVtcGtpbikgLSBGcmFtZXdvcmsgZm9yIHJvZ3Vl
IFdpLUZpIGFjY2VzcyBwb2ludCBhdHRhY2suCiogW1dpZml0ZV0oaHR0cHM6
Ly9naXRodWIuY29tL2RlcnY4Mi93aWZpdGUpIC0gQXV0b21hdGVkIHdpcmVs
ZXNzIGF0dGFjayB0b29sLgoqIFtpbmZlcm5hbC10d2luXShodHRwczovL2dp
dGh1Yi5jb20vZW50cm9weTEzMzcvaW5mZXJuYWwtdHdpbikgLSBBdXRvbWF0
ZWQgd2lyZWxlc3MgaGFja2luZyB0b29sLgoqIFtrcmFja2F0dGFja3Mtc2Ny
aXB0c10oaHR0cHM6Ly9naXRodWIuY29tL3ZhbmhvZWZtL2tyYWNrYXR0YWNr
cy1zY3JpcHRzKSAtIFdQQTIgS3JhY2sgYXR0YWNrIHNjcmlwdHMuCiogW3dp
ZmktYXJzZW5hbF0oaHR0cHM6Ly9naXRodWIuY29tLzB4OTAvd2lmaS1hcnNl
bmFsKSAtIFJlc291cmNlcyBmb3IgV2ktRmkgUGVudGVzdGluZy4KCiMjIE5l
dHdvcmsgVnVsbmVyYWJpbGl0eSBTY2FubmVycwoKKiBbY2VsZXJ5c3RhbGtd
KGh0dHBzOi8vZ2l0aHViLmNvbS9zZXRoc2VjL2NlbGVyeXN0YWxrKSAtIEFz
eW5jaHJvbm91cyBlbnVtZXJhdGlvbiBhbmQgdnVsbmVyYWJpbGl0eSBzY2Fu
bmVyIHRoYXQgInJ1bnMgYWxsIHRoZSB0b29scyBvbiBhbGwgdGhlIGhvc3Rz
IiBpbiBhIGNvbmZpZ3VyYWJsZSBtYW5uZXIuCiogW05lc3N1c10oaHR0cHM6
Ly93d3cudGVuYWJsZS5jb20vcHJvZHVjdHMvbmVzc3VzLXZ1bG5lcmFiaWxp
dHktc2Nhbm5lcikgLSBDb21tZXJjaWFsIHZ1bG5lcmFiaWxpdHkgbWFuYWdl
bWVudCwgY29uZmlndXJhdGlvbiwgYW5kIGNvbXBsaWFuY2UgYXNzZXNzbWVu
dCBwbGF0Zm9ybSwgc29sZCBieSBUZW5hYmxlLgoqIFtOZXRzcGFya2VyIEFw
cGxpY2F0aW9uIFNlY3VyaXR5IFNjYW5uZXJdKGh0dHBzOi8vd3d3Lm5ldHNw
YXJrZXIuY29tLykgLSBBcHBsaWNhdGlvbiBzZWN1cml0eSBzY2FubmVyIHRv
IGF1dG9tYXRpY2FsbHkgZmluZCBzZWN1cml0eSBmbGF3cy4KKiBbTmV4cG9z
ZV0oaHR0cHM6Ly93d3cucmFwaWQ3LmNvbS9wcm9kdWN0cy9uZXhwb3NlLykg
LSBDb21tZXJjaWFsIHZ1bG5lcmFiaWxpdHkgYW5kIHJpc2sgbWFuYWdlbWVu
dCBhc3Nlc3NtZW50IGVuZ2luZSB0aGF0IGludGVncmF0ZXMgd2l0aCBNZXRh
c3Bsb2l0LCBzb2xkIGJ5IFJhcGlkNy4KKiBbT3BlblZBU10oaHR0cDovL3d3
dy5vcGVudmFzLm9yZy8pIC0gRnJlZSBzb2Z0d2FyZSBpbXBsZW1lbnRhdGlv
biBvZiB0aGUgcG9wdWxhciBOZXNzdXMgdnVsbmVyYWJpbGl0eSBhc3Nlc3Nt
ZW50IHN5c3RlbS4KKiBbVnVsc10oaHR0cHM6Ly9naXRodWIuY29tL2Z1dHVy
ZS1hcmNoaXRlY3QvdnVscykgLSBBZ2VudGxlc3MgdnVsbmVyYWJpbGl0eSBz
Y2FubmVyIGZvciBHTlUvTGludXggYW5kIEZyZWVCU0QsIHdyaXR0ZW4gaW4g
R28uCgojIyMgV2ViIFZ1bG5lcmFiaWxpdHkgU2Nhbm5lcnMKCiogW0FDU1RJ
U10oaHR0cHM6Ly9naXRodWIuY29tL3Rpam1lL2FuZ3VsYXJqcy1jc3RpLXNj
YW5uZXIpIC0gQXV0b21hdGVkIGNsaWVudC1zaWRlIHRlbXBsYXRlIGluamVj
dGlvbiAoc2FuZGJveCBlc2NhcGUvYnlwYXNzKSBkZXRlY3Rpb24gZm9yIEFu
Z3VsYXJKUy4KKiBbQXJhY2huaV0oaHR0cDovL3d3dy5hcmFjaG5pLXNjYW5u
ZXIuY29tLykgLSBTY3JpcHRhYmxlIGZyYW1ld29yayBmb3IgZXZhbHVhdGlu
ZyB0aGUgc2VjdXJpdHkgb2Ygd2ViIGFwcGxpY2F0aW9ucy4KKiBbSkNTXSho
dHRwczovL2dpdGh1Yi5jb20vVGhlTTRoZDEvSkNTKSAtIEpvb21sYSBWdWxu
ZXJhYmlsaXR5IENvbXBvbmVudCBTY2FubmVyIHdpdGggYXV0b21hdGljIGRh
dGFiYXNlIHVwZGF0ZXIgZnJvbSBleHBsb2l0ZGIgYW5kIHBhY2tldHN0b3Jt
LgoqIFtOZXRzcGFya2VyIEFwcGxpY2F0aW9uIFNlY3VyaXR5IFNjYW5uZXJd
KGh0dHBzOi8vd3d3Lm5ldHNwYXJrZXIuY29tLykgLSBBcHBsaWNhdGlvbiBz
ZWN1cml0eSBzY2FubmVyIHRvIGF1dG9tYXRpY2FsbHkgZmluZCBzZWN1cml0
eSBmbGF3cy4KKiBbTmlrdG9dKGh0dHBzOi8vY2lydC5uZXQvbmlrdG8yKSAt
IE5vaXN5IGJ1dCBmYXN0IGJsYWNrIGJveCB3ZWIgc2VydmVyIGFuZCB3ZWIg
YXBwbGljYXRpb24gdnVsbmVyYWJpbGl0eSBzY2FubmVyLgoqIFtTUUxtYXRl
XShodHRwczovL2dpdGh1Yi5jb20vVWx0aW1hdGVIYWNrZXJzL3NxbG1hdGUp
IC0gRnJpZW5kIG9mIGBzcWxtYXBgIHRoYXQgaWRlbnRpZmllcyBTUUxpIHZ1
bG5lcmFiaWxpdGllcyBiYXNlZCBvbiBhIGdpdmVuIGRvcmsgYW5kIChvcHRp
b25hbCkgd2Vic2l0ZS4KKiBbU2VjQXBwc10oaHR0cHM6Ly9zZWNhcHBzLmNv
bS8pIC0gSW4tYnJvd3NlciB3ZWIgYXBwbGljYXRpb24gc2VjdXJpdHkgdGVz
dGluZyBzdWl0ZS4KKiBbV1BTY2FuXShodHRwczovL3dwc2Nhbi5vcmcvKSAt
IEJsYWNrIGJveCBXb3JkUHJlc3MgdnVsbmVyYWJpbGl0eSBzY2FubmVyLgoq
IFtXYXBpdGldKGh0dHA6Ly93YXBpdGkuc291cmNlZm9yZ2UubmV0LykgLSBC
bGFjayBib3ggd2ViIGFwcGxpY2F0aW9uIHZ1bG5lcmFiaWxpdHkgc2Nhbm5l
ciB3aXRoIGJ1aWx0LWluIGZ1enplci4KKiBbV2ViUmVhdmVyXShodHRwczov
L3d3dy53ZWJyZWF2ZXIuY29tLykgLSBDb21tZXJjaWFsLCBncmFwaGljYWwg
d2ViIGFwcGxpY2F0aW9uIHZ1bG5lcmFiaWxpdHkgc2Nhbm5lciBkZXNpZ25l
ZCBmb3IgbWFjT1MuCiogW2Ntcy1leHBsb3Jlcl0oaHR0cHM6Ly9jb2RlLmdv
b2dsZS5jb20vYXJjaGl2ZS9wL2Ntcy1leHBsb3Jlci8pIC0gUmV2ZWFsIHRo
ZSBzcGVjaWZpYyBtb2R1bGVzLCBwbHVnaW5zLCBjb21wb25lbnRzIGFuZCB0
aGVtZXMgdGhhdCB2YXJpb3VzIHdlYnNpdGVzIHBvd2VyZWQgYnkgY29udGVu
dCBtYW5hZ2VtZW50IHN5c3RlbXMgYXJlIHJ1bm5pbmcuCiogW2pvb21zY2Fu
XShodHRwczovL3d3dy5vd2FzcC5vcmcvaW5kZXgucGhwL0NhdGVnb3J5Ok9X
QVNQX0pvb21sYV9WdWxuZXJhYmlsaXR5X1NjYW5uZXJfUHJvamVjdCkgLSBK
b29tbGEgdnVsbmVyYWJpbGl0eSBzY2FubmVyLgoqIFt3M2FmXShodHRwczov
L2dpdGh1Yi5jb20vYW5kcmVzcmlhbmNoby93M2FmKSAtIFdlYiBhcHBsaWNh
dGlvbiBhdHRhY2sgYW5kIGF1ZGl0IGZyYW1ld29yay4KCiMjIE9TSU5UIFRv
b2xzCgoqIFtEYXRhU3Bsb2l0XShodHRwczovL2dpdGh1Yi5jb20vdXBnb2lu
Z3N0YXIvZGF0YXNwbG9pdCkgLSBPU0lOVCB2aXN1YWxpemVyIHV0aWxpemlu
ZyBTaG9kYW4sIENlbnN5cywgQ2xlYXJiaXQsIEVtYWlsSHVudGVyLCBGdWxs
Q29udGFjdCwgYW5kIFpvb21leWUgYmVoaW5kIHRoZSBzY2VuZXMuCiogW0d5
b2lUaG9uXShodHRwczovL2dpdGh1Yi5jb20vZ3lvaXNhbXVyYWkvR3lvaVRo
b24pIC0gR3lvaVRob24gaXMgYW4gSW50ZWxsaWdlbmNlIEdhdGhlcmluZyB0
b29sIHVzaW5nIE1hY2hpbmUgTGVhcm5pbmcuCiogW0ludHJpZ3VlXShodHRw
Oi8vaW50cmlndWUuaW8pIC0gQXV0b21hdGVkIE9TSU5UICYgQXR0YWNrIFN1
cmZhY2UgZGlzY292ZXJ5IGZyYW1ld29yayB3aXRoIHBvd2VyZnVsIEFQSSwg
VUkgYW5kIENMSS4KKiBbTWFsdGVnb10oaHR0cDovL3d3dy5wYXRlcnZhLmNv
bS93ZWI3LykgLSBQcm9wcmlldGFyeSBzb2Z0d2FyZSBmb3Igb3BlbiBzb3Vy
Y2UgaW50ZWxsaWdlbmNlIGFuZCBmb3JlbnNpY3MsIGZyb20gUGF0ZXJ2YS4K
KiBbUGFja2V0VG90YWxdKGh0dHBzOi8vcGFja2V0dG90YWwuY29tLykgLSBT
aW1wbGUsIGZyZWUsIGhpZ2gtcXVhbGl0eSBwYWNrZXQgY2FwdHVyZSBmaWxl
IGFuYWx5c2lzIGZhY2lsaXRhdGluZyB0aGUgcXVpY2sgZGV0ZWN0aW9uIG9m
IG5ldHdvcmstYm9ybmUgbWFsd2FyZSAodXNpbmcgQnJvIGFuZCBTdXJpY2F0
YSBJRFMgc2lnbmF0dXJlcyB1bmRlciB0aGUgaG9vZCkuCiogW1NraXB0cmFj
ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS94aWxsd2lsbHgvc2tpcHRyYWNlcikg
LSBPU0lOVCBzY3JhcGluZyBmcmFtZXdvcmsgdGhhdCB1dGlsaXplcyBiYXNp
YyBQeXRob24gd2Vic2NyYXBpbmcgKEJlYXV0aWZ1bFNvdXApIG9mIFBJSSBw
YXl3YWxsIHNpdGVzIHRvIGNvbXBpbGUgcGFzc2l2ZSBpbmZvcm1hdGlvbiBv
biBhIHRhcmdldCBvbiBhIHJhbWVuIG5vb2RsZSBidWRnZXQuCiogW1NuMXBl
cl0oaHR0cHM6Ly9naXRodWIuY29tLzFOMy9TbjFwZXIpIC0gQXV0b21hdGVk
IFBlbnRlc3QgUmVjb24gU2Nhbm5lci4KKiBbU3BpZGVyZm9vdF0oaHR0cDov
L3d3dy5zcGlkZXJmb290Lm5ldC8pIC0gTXVsdGktc291cmNlIE9TSU5UIGF1
dG9tYXRpb24gdG9vbCB3aXRoIGEgV2ViIFVJIGFuZCByZXBvcnQgdmlzdWFs
aXphdGlvbnMuCiogW2NyZWVweV0oaHR0cHM6Ly9naXRodWIuY29tL2lsZWt0
cm9qb2huL2NyZWVweSkgLSBHZW9sb2NhdGlvbiBPU0lOVCB0b29sLgoqIFtn
T1NJTlRdKGh0dHBzOi8vZ2l0aHViLmNvbS9OaG95YS9nT1NJTlQpIC0gT1NJ
TlQgdG9vbCB3aXRoIG11bHRpcGxlIG1vZHVsZXMgYW5kIGEgdGVsZWdyYW0g
c2NyYXBlci4KKiBbaW1hZ2UtbWF0Y2hdKGh0dHBzOi8vZ2l0aHViLmNvbS9h
c2NyaWJlL2ltYWdlLW1hdGNoKSAtIFF1aWNrbHkgc2VhcmNoIG92ZXIgYmls
bGlvbnMgb2YgaW1hZ2VzLgoqIFtyZWNvbi1uZ10oaHR0cHM6Ly9naXRodWIu
Y29tL2xhbm1hc3RlcjUzL3JlY29uLW5nKSAtIEZ1bGwtZmVhdHVyZWQgV2Vi
IFJlY29ubmFpc3NhbmNlIGZyYW1ld29yayB3cml0dGVuIGluIFB5dGhvbi4K
KiBbc24waW50XShodHRwczovL2dpdGh1Yi5jb20va3BjeXJkL3NuMGludCkg
LSBTZW1pLWF1dG9tYXRpYyBPU0lOVCBmcmFtZXdvcmsgYW5kIHBhY2thZ2Ug
bWFuYWdlci4KCiMjIyBEYXRhIGJyb2tlciBhbmQgc2VhcmNoIGVuZ2luZSBz
ZXJ2aWNlcwoKKiBbSHVudGVyLmlvXShodHRwczovL2h1bnRlci5pby8pIC0g
RGF0YSBicm9rZXIgcHJvdmlkaW5nIGEgV2ViIHNlYXJjaCBpbnRlcmZhY2Ug
Zm9yIGRpc2NvdmVyaW5nIHRoZSBlbWFpbCBhZGRyZXNzZXMgYW5kIG90aGVy
IG9yZ2FuaXphdGlvbmFsIGRldGFpbHMgb2YgYSBjb21wYW55LgoqIFtUaHJl
YXQgQ3Jvd2RdKGh0dHBzOi8vd3d3LnRocmVhdGNyb3dkLm9yZy8pIC0gU2Vh
cmNoIGVuZ2luZSBmb3IgdGhyZWF0cy4KKiBbVmlydXMgVG90YWxdKGh0dHBz
Oi8vd3d3LnZpcnVzdG90YWwuY29tLykgLSBGcmVlIHNlcnZpY2UgdGhhdCBh
bmFseXplcyBzdXNwaWNpb3VzIGZpbGVzIGFuZCBVUkxzIGFuZCBmYWNpbGl0
YXRlcyB0aGUgcXVpY2sgZGV0ZWN0aW9uIG9mIHZpcnVzZXMsIHdvcm1zLCB0
cm9qYW5zLCBhbmQgYWxsIGtpbmRzIG9mIG1hbHdhcmUuCiogW3N1cmZyYXdd
KGh0dHBzOi8vZ2l0aHViLmNvbS9raXNvbS9zdXJmcmF3KSAtIEZhc3QgVU5J
WCBjb21tYW5kIGxpbmUgaW50ZXJmYWNlIHRvIGEgdmFyaWV0eSBvZiBwb3B1
bGFyIFdXVyBzZWFyY2ggZW5naW5lcy4KCiMjIyBEb3JraW5nIHRvb2xzCgoq
IFtCaW5Hb29dKGh0dHBzOi8vZ2l0aHViLmNvbS9Ib29kM2RSb2Ixbi9CaW5H
b28pIC0gR05VL0xpbnV4IGJhc2ggYmFzZWQgQmluZyBhbmQgR29vZ2xlIERv
cmtpbmcgVG9vbC4KKiBbZG9ya2JvdF0oaHR0cHM6Ly9naXRodWIuY29tL3V0
aXNvL2Rvcmtib3QpIC0gQ29tbWFuZC1saW5lIHRvb2wgdG8gc2NhbiBHb29n
bGUgKG9yIG90aGVyKSBzZWFyY2ggcmVzdWx0cyBmb3IgdnVsbmVyYWJpbGl0
aWVzLgoqIFtnaXRodWItZG9ya3NdKGh0dHBzOi8vZ2l0aHViLmNvbS90ZWNo
Z2F1bi9naXRodWItZG9ya3MpIC0gQ0xJIHRvb2wgdG8gc2NhbiBHaXRIdWIg
cmVwb3Mvb3JnYW5pemF0aW9ucyBmb3IgcG90ZW50aWFsIHNlbnNpdGl2ZSBp
bmZvcm1hdGlvbiBsZWFrcy4KKiBbR29vRG9ya10oaHR0cHM6Ly9naXRodWIu
Y29tL2szMTcwbWFrYW4vR29vRG9yaykgLSBDb21tYW5kIGxpbmUgR29vZ2xl
IGRvcmtpbmcgdG9vbC4KKiBbR29vZ2xlIEhhY2tpbmcgRGF0YWJhc2VdKGh0
dHBzOi8vd3d3LmV4cGxvaXQtZGIuY29tL2dvb2dsZS1oYWNraW5nLWRhdGFi
YXNlLykgLSBEYXRhYmFzZSBvZiBHb29nbGUgZG9ya3M7IGNhbiBiZSB1c2Vk
IGZvciByZWNvbi4KKiBbZG9yay1jbGldKGh0dHBzOi8vZ2l0aHViLmNvbS9q
Z29yL2RvcmstY2xpKSAtIENvbW1hbmQgbGluZSBHb29nbGUgZG9yayB0b29s
LgoqIFtkb3Jrc10oaHR0cHM6Ly9naXRodWIuY29tL1VTU0NsdGQvZG9ya3Mp
IC0gR29vZ2xlIGhhY2sgZGF0YWJhc2UgYXV0b21hdGlvbiB0b29sLgoqIFtm
YXN0LXJlY29uXShodHRwczovL2dpdGh1Yi5jb20vRGFuTWNJbmVybmV5L2Zh
c3QtcmVjb24pIC0gUGVyZm9ybSBHb29nbGUgZG9ya3MgYWdhaW5zdCBhIGRv
bWFpbi4KKiBbcGFnb2RvXShodHRwczovL2dpdGh1Yi5jb20vb3BzZGlzay9w
YWdvZG8pIC0gQXV0b21hdGUgR29vZ2xlIEhhY2tpbmcgRGF0YWJhc2Ugc2Ny
YXBpbmcuCiogW3NuaXRjaF0oaHR0cHM6Ly9naXRodWIuY29tL1NtYWFzaC9z
bml0Y2gpIC0gSW5mb3JtYXRpb24gZ2F0aGVyaW5nIHZpYSBkb3Jrcy4KCiMj
IyBFbWFpbCBzZWFyY2ggYW5kIGFuYWx5c2lzIHRvb2xzCgoqIFtTaW1wbHlF
bWFpbF0oaHR0cHM6Ly9naXRodWIuY29tL1NpbXBseVNlY3VyaXR5L1NpbXBs
eUVtYWlsKSAtIEVtYWlsIHJlY29uIG1hZGUgZmFzdCBhbmQgZWFzeS4KKiBb
V2hhdEJyZWFjaF0oaHR0cHM6Ly9naXRodWIuY29tL0VrdWx0ZWsvV2hhdEJy
ZWFjaCkgLSBTZWFyY2ggZW1haWwgYWRkcmVzc2VzIGFuZCBkaXNjb3ZlciBh
bGwga25vd24gYnJlYWNoZXMgdGhhdCB0aGlzIGVtYWlsIGhhcyBiZWVuIHNl
ZW4gaW4sIGFuZCBkb3dubG9hZCB0aGUgYnJlYWNoZWQgZGF0YWJhc2UgaWYg
aXQgaXMgcHVibGljbHkgYXZhaWxhYmxlLgoKIyMjIE1ldGFkYXRhIGhhcnZl
c3RpbmcgYW5kIGFuYWx5c2lzCgoqIFtGT0NBIChGaW5nZXJwcmludGluZyBP
cmdhbml6YXRpb25zIHdpdGggQ29sbGVjdGVkIEFyY2hpdmVzKV0oaHR0cHM6
Ly93d3cuZWxldmVucGF0aHMuY29tL2xhYnN0b29scy9mb2NhLykgLSBBdXRv
bWF0ZWQgZG9jdW1lbnQgaGFydmVzdGVyIHRoYXQgc2VhcmNoZXMgR29vZ2xl
LCBCaW5nLCBhbmQgRHVja0R1Y2tHbyB0byBmaW5kIGFuZCBleHRyYXBvbGF0
ZSBpbnRlcm5hbCBjb21wYW55IG9yZ2FuaXphdGlvbmFsIHN0cnVjdHVyZXMu
CiogW21ldGFnb29maWxdKGh0dHBzOi8vZ2l0aHViLmNvbS9sYXJhbWllcy9t
ZXRhZ29vZmlsKSAtIE1ldGFkYXRhIGhhcnZlc3Rlci4KKiBbdGhlSGFydmVz
dGVyXShodHRwczovL2dpdGh1Yi5jb20vbGFyYW1pZXMvdGhlSGFydmVzdGVy
KSAtIEUtbWFpbCwgc3ViZG9tYWluIGFuZCBwZW9wbGUgbmFtZXMgaGFydmVz
dGVyLgoKIyMjIE5ldHdvcmsgZGV2aWNlIGRpc2NvdmVyeSB0b29scwoKKiBb
QVFVQVRPTkVdKGh0dHBzOi8vZ2l0aHViLmNvbS9taWNoZW5yaWtzZW4vYXF1
YXRvbmUpIC0gU3ViZG9tYWluIGRpc2NvdmVyeSB0b29sIHV0aWxpemluZyB2
YXJpb3VzIG9wZW4gc291cmNlcyBwcm9kdWNpbmcgYSByZXBvcnQgdGhhdCBj
YW4gYmUgdXNlZCBhcyBpbnB1dCB0byBvdGhlciB0b29scy4KKiBbQ2Vuc3lz
XShodHRwczovL3d3dy5jZW5zeXMuaW8vKSAtIENvbGxlY3RzIGRhdGEgb24g
aG9zdHMgYW5kIHdlYnNpdGVzIHRocm91Z2ggZGFpbHkgWk1hcCBhbmQgWkdy
YWIgc2NhbnMuCiogW09XQVNQIEFtYXNzXShodHRwczovL2dpdGh1Yi5jb20v
T1dBU1AvQW1hc3MpIC0gU3ViZG9tYWluIGVudW1lcmF0aW9uIHZpYSBzY3Jh
cGluZywgd2ViIGFyY2hpdmVzLCBicnV0ZSBmb3JjaW5nLCBwZXJtdXRhdGlv
bnMsIHJldmVyc2UgRE5TIHN3ZWVwaW5nLCBUTFMgY2VydGlmaWNhdGVzLCBw
YXNzaXZlIEROUyBkYXRhIHNvdXJjZXMsIGV0Yy4KKiBbU2hvZGFuXShodHRw
czovL3d3dy5zaG9kYW4uaW8vKSAtIFdvcmxkJ3MgZmlyc3Qgc2VhcmNoIGVu
Z2luZSBmb3IgSW50ZXJuZXQtY29ubmVjdGVkIGRldmljZXMuCiogW1pvb21F
eWVdKGh0dHBzOi8vd3d3Lnpvb21leWUub3JnLykgLSBTZWFyY2ggZW5naW5l
IGZvciBjeWJlcnNwYWNlIHRoYXQgbGV0cyB0aGUgdXNlciBmaW5kIHNwZWNp
ZmljIG5ldHdvcmsgY29tcG9uZW50cy4KCiMjIyBTb3VyY2UgY29kZSByZXBv
c2l0b3J5IHNlYXJjaGluZyB0b29scwoKKiBbdmNzbWFwXShodHRwczovL2dp
dGh1Yi5jb20vbWVsdmluc2gvdmNzbWFwKSAtIFBsdWdpbi1iYXNlZCB0b29s
IHRvIHNjYW4gcHVibGljIHZlcnNpb24gY29udHJvbCBzeXN0ZW1zIGZvciBz
ZW5zaXRpdmUgaW5mb3JtYXRpb24uCiogW1lhcl0oaHR0cHM6Ly9naXRodWIu
Y29tL0Z1cmR1aGx1dHVyL3lhcikgLSBDbG9uZSBnaXQgcmVwb3NpdG9yaWVz
IHRvIHNlYXJjaCB0aHJvdWdoIHRoZSB3aG9sZSBjb21taXQgaGlzdG9yeSBp
biBvcmRlciBvZiBjb21taXQgdGltZSBmb3Igc2VjcmV0cywgdG9rZW5zLCBv
ciBwYXNzd29yZHMuCgojIyBPbmxpbmUgUmVzb3VyY2VzCgojIyMgT25saW5l
IENvZGUgU2FtcGxlcyBhbmQgRXhhbXBsZXMKCiogW2dvSGFja1Rvb2xzXSho
dHRwczovL2dpdGh1Yi5jb20vZHJlZGRzYTVkaWVzL2dvSGFja1Rvb2xzKSAt
IEhhY2tlciB0b29scyBvbiBHbyAoR29sYW5nKS4KCiMjIyBPbmxpbmUgRXhw
bG9pdCBEZXZlbG9wbWVudCBSZXNvdXJjZXMKCiogW0V4cGxvaXQgV3JpdGlu
ZyBUdXRvcmlhbHNdKGh0dHBzOi8vd3d3LmNvcmVsYW4uYmUvaW5kZXgucGhw
LzIwMDkvMDcvMTkvZXhwbG9pdC13cml0aW5nLXR1dG9yaWFsLXBhcnQtMS1z
dGFjay1iYXNlZC1vdmVyZmxvd3MvKSAtIFR1dG9yaWFscyBvbiBob3cgdG8g
ZGV2ZWxvcCBleHBsb2l0cy4KKiBbU2hlbGxjb2RlIEV4YW1wbGVzXShodHRw
Oi8vc2hlbGwtc3Rvcm0ub3JnL3NoZWxsY29kZS8pIC0gU2hlbGxjb2RlcyBk
YXRhYmFzZS4KKiBbU2hlbGxjb2RlIFR1dG9yaWFsXShodHRwOi8vd3d3LnZp
dmlkbWFjaGluZXMuY29tL3NoZWxsY29kZS9zaGVsbGNvZGUuaHRtbCkgLSBU
dXRvcmlhbCBvbiBob3cgdG8gd3JpdGUgc2hlbGxjb2RlLgoKIyMjIE9ubGlu
ZSBMb2NrIFBpY2tpbmcgUmVzb3VyY2VzCgoqIFsvci9sb2NrcGlja2luZ10o
aHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL2xvY2twaWNraW5nKSAtIFJlc291
cmNlcyBmb3IgbGVhcm5pbmcgbG9ja3BpY2tpbmcsIGVxdWlwbWVudCByZWNv
bW1lbmRhdGlvbnMuCiogW1NjaHV5bGVyIFRvd25lIGNoYW5uZWxdKGh0dHBz
Oi8vd3d3LnlvdXR1YmUuY29tL3VzZXIvU2NodXlsZXJUb3duZS8pIC0gTG9j
a3BpY2tpbmcgdmlkZW9zIGFuZCBzZWN1cml0eSB0YWxrcy4KKiBbYm9zbmlh
bmJpbGxdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3VzZXIvYm9zbmlhbmJp
bGwpIC0gSW5zdHJ1Y3Rpb25hbCBsb2NrcGlja2luZyB2aWRlb3MgbWFkZSBi
eSBhbiBleHBlcnQuCgojIyMgT25saW5lIE9wZW4gU291cmNlcyBJbnRlbGxp
Z2VuY2UgKE9TSU5UKSBSZXNvdXJjZXMKCiogW0NlcnRHcmFwaF0oaHR0cHM6
Ly9naXRodWIuY29tL2xhbnJhdC9jZXJ0Z3JhcGgpIC0gQ3Jhd2xzIGEgZG9t
YWluJ3MgU1NML1RMUyBjZXJ0aWZpY2F0ZXMgZm9yIGl0cyBjZXJ0aWZpY2F0
ZSBhbHRlcm5hdGl2ZSBuYW1lcy4KKiBbR2hvc3RQcm9qZWN0XShodHRwczov
L2dob3N0cHJvamVjdC5mci8pIC0gU2VhcmNoYWJsZSBkYXRhYmFzZSBvZiBi
aWxsaW9ucyBvZiBjbGVhcnRleHQgcGFzc3dvcmRzLCBwYXJ0aWFsbHkgdmlz
aWJsZSBmb3IgZnJlZS4KKiBbSW50ZWwgVGVjaG5pcXVlc10oaHR0cHM6Ly9p
bnRlbHRlY2huaXF1ZXMuY29tL21lbnUuaHRtbCkgLSBDb2xsZWN0aW9uIG9m
IE9TSU5UIHRvb2xzLiBNZW51IG9uIHRoZSBsZWZ0IGNhbiBiZSB1c2VkIHRv
IG5hdmlnYXRlIHRocm91Z2ggdGhlIGNhdGVnb3JpZXMuCiogW05ldEJvb3Rj
YW1wIE9TSU5UIFRvb2xzXShodHRwOi8vbmV0Ym9vdGNhbXAub3JnL29zaW50
dG9vbHMvKSAtIENvbGxlY3Rpb24gb2YgT1NJTlQgbGlua3MgYW5kIGN1c3Rv
bSBXZWIgaW50ZXJmYWNlcyB0byBvdGhlciBzZXJ2aWNlcy4KKiBbT1NJTlQg
RnJhbWV3b3JrXShodHRwOi8vb3NpbnRmcmFtZXdvcmsuY29tLykgLSBDb2xs
ZWN0aW9uIG9mIHZhcmlvdXMgT1NJTlQgdG9vbHMgYnJva2VuIG91dCBieSBj
YXRlZ29yeS4KKiBbV2lHTEUubmV0XShodHRwczovL3dpZ2xlLm5ldC8pIC0g
SW5mb3JtYXRpb24gYWJvdXQgd2lyZWxlc3MgbmV0d29ya3Mgd29ybGQtd2lk
ZSwgd2l0aCB1c2VyLWZyaWVuZGx5IGRlc2t0b3AgYW5kIHdlYiBhcHBsaWNh
dGlvbnMuCgojIyMgT25saW5lIE9wZXJhdGluZyBTeXN0ZW1zIFJlc291cmNl
cwoKKiBbRGlzdHJvV2F0Y2guY29tJ3MgU2VjdXJpdHkgQ2F0ZWdvcnldKGh0
dHBzOi8vZGlzdHJvd2F0Y2guY29tL3NlYXJjaC5waHA/Y2F0ZWdvcnk9U2Vj
dXJpdHkpIC0gV2Vic2l0ZSBkZWRpY2F0ZWQgdG8gdGFsa2luZyBhYm91dCwg
cmV2aWV3aW5nLCBhbmQga2VlcGluZyB1cCB0byBkYXRlIHdpdGggb3BlbiBz
b3VyY2Ugb3BlcmF0aW5nIHN5c3RlbXMuCgojIyMgT25saW5lIFBlbmV0cmF0
aW9uIFRlc3RpbmcgUmVzb3VyY2VzCgoqIFtJbmZvU2VjIEluc3RpdHV0ZV0o
aHR0cHM6Ly9yZXNvdXJjZXMuaW5mb3NlY2luc3RpdHV0ZS5jb20pIC0gSVQg
YW5kIHNlY3VyaXR5IGFydGljbGVzLgoqIFtNSVRSRSdzIEFkdmVyc2FyaWFs
IFRhY3RpY3MsIFRlY2huaXF1ZXMgJiBDb21tb24gS25vd2xlZGdlIChBVFQm
Q0spXShodHRwczovL2F0dGFjay5taXRyZS5vcmcvKSAtIEN1cmF0ZWQga25v
d2xlZGdlIGJhc2UgYW5kIG1vZGVsIGZvciBjeWJlciBhZHZlcnNhcnkgYmVo
YXZpb3IuCiogW01ldGFzcGxvaXQgVW5sZWFzaGVkXShodHRwczovL3d3dy5v
ZmZlbnNpdmUtc2VjdXJpdHkuY29tL21ldGFzcGxvaXQtdW5sZWFzaGVkLykg
LSBGcmVlIE9mZmVuc2l2ZSBTZWN1cml0eSBNZXRhc3Bsb2l0IGNvdXJzZS4K
KiBbT3BlbiBXZWIgQXBwbGljYXRpb24gU2VjdXJpdHkgUHJvamVjdCAoT1dB
U1ApXShodHRwczovL3d3dy5vd2FzcC5vcmcvaW5kZXgucGhwL01haW5fUGFn
ZSkgLSBXb3JsZHdpZGUgbm90LWZvci1wcm9maXQgY2hhcml0YWJsZSBvcmdh
bml6YXRpb24gZm9jdXNlZCBvbiBpbXByb3ZpbmcgdGhlIHNlY3VyaXR5IG9m
IGVzcGVjaWFsbHkgV2ViLWJhc2VkIGFuZCBBcHBsaWNhdGlvbi1sYXllciBz
b2Z0d2FyZS4KKiBbUEVOVEVTVC1XSUtJXShodHRwczovL2dpdGh1Yi5jb20v
bml4YXdrL3BlbnRlc3Qtd2lraSkgLSBGcmVlIG9ubGluZSBzZWN1cml0eSBr
bm93bGVkZ2UgbGlicmFyeSBmb3IgcGVudGVzdGVycyBhbmQgcmVzZWFyY2hl
cnMuCiogW1BlbmV0cmF0aW9uIFRlc3RpbmcgRXhlY3V0aW9uIFN0YW5kYXJk
IChQVEVTKV0oaHR0cDovL3d3dy5wZW50ZXN0LXN0YW5kYXJkLm9yZy8pIC0g
RG9jdW1lbnRhdGlvbiBkZXNpZ25lZCB0byBwcm92aWRlIGEgY29tbW9uIGxh
bmd1YWdlIGFuZCBzY29wZSBmb3IgcGVyZm9ybWluZyBhbmQgcmVwb3J0aW5n
IHRoZSByZXN1bHRzIG9mIGEgcGVuZXRyYXRpb24gdGVzdC4KKiBbUGVuZXRy
YXRpb24gVGVzdGluZyBGcmFtZXdvcmsgKFBURildKGh0dHA6Ly93d3cudnVs
bmVyYWJpbGl0eWFzc2Vzc21lbnQuY28udWsvUGVuZXRyYXRpb24lMjBUZXN0
Lmh0bWwpIC0gT3V0bGluZSBmb3IgcGVyZm9ybWluZyBwZW5ldHJhdGlvbiB0
ZXN0cyBjb21waWxlZCBhcyBhIGdlbmVyYWwgZnJhbWV3b3JrIHVzYWJsZSBi
eSB2dWxuZXJhYmlsaXR5IGFuYWx5c3RzIGFuZCBwZW5ldHJhdGlvbiB0ZXN0
ZXJzIGFsaWtlLgoqIFtYU1MtUGF5bG9hZHNdKGh0dHA6Ly93d3cueHNzLXBh
eWxvYWRzLmNvbSkgLSBSZXNvdXJjZSBkZWRpY2F0ZWQgdG8gYWxsIHRoaW5n
cyBYU1MgKGNyb3NzLXNpdGUpLCBpbmNsdWRpbmcgcGF5bG9hZHMsIHRvb2xz
LCBnYW1lcywgYW5kIGRvY3VtZW50YXRpb24uCgojIyMgU29jaWFsIEVuZ2lu
ZWVyaW5nIFJlc291cmNlcwoKKiBbU29jaWFsIEVuZ2luZWVyaW5nIEZyYW1l
d29ya10oaHR0cDovL3d3dy5zb2NpYWwtZW5naW5lZXIub3JnL2ZyYW1ld29y
ay9nZW5lcmFsLWRpc2N1c3Npb24vKSAtIEluZm9ybWF0aW9uIHJlc291cmNl
IGZvciBzb2NpYWwgZW5naW5lZXJzLgoKIyMjIE90aGVyIExpc3RzIE9ubGlu
ZQoKKiBbLk5FVCBQcm9ncmFtbWluZ10oaHR0cHM6Ly9naXRodWIuY29tL3F1
b3pkL2F3ZXNvbWUtZG90bmV0KSAtIFNvZnR3YXJlIGZyYW1ld29yayBmb3Ig
TWljcm9zb2Z0IFdpbmRvd3MgcGxhdGZvcm0gZGV2ZWxvcG1lbnQuCiogW0lu
Zm9zZWMvaGFja2luZyB2aWRlb3MgcmVjb3JkZWQgYnkgY29vcGVyXShodHRw
czovL2FkbWluaXN0cmFpdG9yLnZpZGVvKSAtIENvbGxlY3Rpb24gb2Ygc2Vj
dXJpdHkgY29uZmVyZW5jZXMgcmVjb3JkZWQgYnkgQ29vcGVyLgoqIFtBbmRy
b2lkIEV4cGxvaXRzXShodHRwczovL2dpdGh1Yi5jb20vc3VuZGF5c2VjL0Fu
ZHJvaWQtRXhwbG9pdHMpIC0gR3VpZGUgb24gQW5kcm9pZCBFeHBsb2l0YXRp
b24gYW5kIEhhY2tzLgoqIFtBbmRyb2lkIFNlY3VyaXR5XShodHRwczovL2dp
dGh1Yi5jb20vYXNoaXNoYi9hbmRyb2lkLXNlY3VyaXR5LWF3ZXNvbWUpIC0g
Q29sbGVjdGlvbiBvZiBBbmRyb2lkIHNlY3VyaXR5IHJlbGF0ZWQgcmVzb3Vy
Y2VzLgoqIFtBcHBTZWNdKGh0dHBzOi8vZ2l0aHViLmNvbS9wYXJhZ29uaWUv
YXdlc29tZS1hcHBzZWMpIC0gUmVzb3VyY2VzIGZvciBsZWFybmluZyBhYm91
dCBhcHBsaWNhdGlvbiBzZWN1cml0eS4KKiBbQXdlc29tZSBBd2Vzb21uZXNz
XShodHRwczovL2dpdGh1Yi5jb20vYmF5YW5kaW4vYXdlc29tZS1hd2Vzb21l
bmVzcykgLSBUaGUgTGlzdCBvZiB0aGUgTGlzdHMuCiogW0F3ZXNvbWUgTG9j
a3BpY2tpbmddKGh0dHBzOi8vZ2l0aHViLmNvbS9tZWl0YXIvYXdlc29tZS1s
b2NrcGlja2luZykgLSBBd2Vzb21lIGd1aWRlcywgdG9vbHMsIGFuZCBvdGhl
ciByZXNvdXJjZXMgYWJvdXQgdGhlIHNlY3VyaXR5IGFuZCBjb21wcm9taXNl
IG9mIGxvY2tzLCBzYWZlcywgYW5kIGtleXMuCiogW0F3ZXNvbWUgU2hvZGFu
IFF1ZXJpZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9qYWtlamFydmlzL2F3ZXNv
bWUtc2hvZGFuLXF1ZXJpZXMpIC0gQXdlc29tZSBsaXN0IG9mIHVzZWZ1bCwg
ZnVubnksIGFuZCBkZXByZXNzaW5nIHNlYXJjaCBxdWVyaWVzIGZvciBTaG9k
YW4uCiogW0FXUyBUb29sIEFyc2VuYWxdKGh0dHBzOi8vZ2l0aHViLmNvbS90
b25pYmx5eC9teS1hcnNlbmFsLW9mLWF3cy1zZWN1cml0eS10b29scykgLSBM
aXN0IG9mIHRvb2xzIGZvciB0ZXN0aW5nIGFuZCBzZWN1cmluZyBBV1MgZW52
aXJvbm1lbnRzLgoqIFtCbHVlIFRlYW1dKGh0dHBzOi8vZ2l0aHViLmNvbS9t
ZWl0YXIvYXdlc29tZS1jeWJlcnNlY3VyaXR5LWJsdWV0ZWFtKSAtIEF3ZXNv
bWUgcmVzb3VyY2VzLCB0b29scywgYW5kIG90aGVyIHNoaW55IHRoaW5ncyBm
b3IgY3liZXJzZWN1cml0eSBibHVlIHRlYW1zLgoqIFtDL0MrKyBQcm9ncmFt
bWluZ10oaHR0cHM6Ly9naXRodWIuY29tL2ZmZmFyYXovYXdlc29tZS1jcHAp
IC0gT25lIG9mIHRoZSBtYWluIGxhbmd1YWdlIGZvciBvcGVuIHNvdXJjZSBz
ZWN1cml0eSB0b29scy4KKiBbQ1RGc10oaHR0cHM6Ly9naXRodWIuY29tL2Fw
c2RlaGFsL2F3ZXNvbWUtY3RmKSAtIENhcHR1cmUgVGhlIEZsYWcgZnJhbWV3
b3JrcywgbGlicmFyaWVzLCBldGMuCiogW0ZvcmVuc2ljc10oaHR0cHM6Ly9n
aXRodWIuY29tL0N1Z3UvYXdlc29tZS1mb3JlbnNpY3MpIC0gRnJlZSAobW9z
dGx5IG9wZW4gc291cmNlKSBmb3JlbnNpYyBhbmFseXNpcyB0b29scyBhbmQg
cmVzb3VyY2VzLgoqIFtIYWNraW5nXShodHRwczovL2dpdGh1Yi5jb20vY2Fy
cGVkbTIwL2F3ZXNvbWUtaGFja2luZykgLSBUdXRvcmlhbHMsIHRvb2xzLCBh
bmQgcmVzb3VyY2VzLgoqIFtIb25leXBvdHNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9wYXJhbGF4L2F3ZXNvbWUtaG9uZXlwb3RzKSAtIEhvbmV5cG90cywgdG9v
bHMsIGNvbXBvbmVudHMsIGFuZCBtb3JlLgoqIFtJbmZvU2VjIMKnIEhhY2tp
bmcgY2hhbGxlbmdlc10oaHR0cHM6Ly9naXRodWIuY29tL0FuYXJjaG9UZWNo
TllDL21ldGEvd2lraS9JbmZvU2VjI2hhY2tpbmctY2hhbGxlbmdlcykgLSBD
b21wcmVoZW5zaXZlIGRpcmVjdG9yeSBvZiBDVEZzLCB3YXJnYW1lcywgaGFj
a2luZyBjaGFsbGVuZ2Ugd2Vic2l0ZXMsIHBlbnRlc3QgcHJhY3RpY2UgbGFi
IGV4ZXJjaXNlcywgYW5kIG1vcmUuCiogW0luZm9zZWNdKGh0dHBzOi8vZ2l0
aHViLmNvbS9vbmx1cmtpbmcvYXdlc29tZS1pbmZvc2VjKSAtIEluZm9ybWF0
aW9uIHNlY3VyaXR5IHJlc291cmNlcyBmb3IgcGVudGVzdGluZywgZm9yZW5z
aWNzLCBhbmQgbW9yZS4KKiBbU2VjdXJpdHktcmVsYXRlZCBPcGVyYXRpbmcg
U3lzdGVtc10oaHR0cHM6Ly9saXN0LnJhd3NlYy5tbC9vcGVyYXRpbmdfc3lz
dGVtcy5odG1sKSAtIExpc3Qgb2Ygc2VjdXJpdHkgcmVsYXRlZCBvcGVyYXRp
bmcgc3lzdGVtcy4KKiBbSmF2YVNjcmlwdCBQcm9ncmFtbWluZ10oaHR0cHM6
Ly9naXRodWIuY29tL3NvcnJ5Y2MvYXdlc29tZS1qYXZhc2NyaXB0KSAtIElu
LWJyb3dzZXIgZGV2ZWxvcG1lbnQgYW5kIHNjcmlwdGluZy4KKiBbS2FsaSBM
aW51eCBUb29sc10oaHR0cDovL3Rvb2xzLmthbGkub3JnL3Rvb2xzLWxpc3Rp
bmcpIC0gTGlzdCBvZiB0b29scyBwcmVzZW50IGluIEthbGkgTGludXguCiog
W01hbHdhcmUgQW5hbHlzaXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9yc2hpcHAv
YXdlc29tZS1tYWx3YXJlLWFuYWx5c2lzKSAtIFRvb2xzIGFuZCByZXNvdXJj
ZXMgZm9yIGFuYWx5c3RzLgoqIFtOb2RlLmpzIFByb2dyYW1taW5nIGJ5IEBz
aW5kcmVzb3JodXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9zaW5kcmVzb3JodXMv
YXdlc29tZS1ub2RlanMpIC0gQ3VyYXRlZCBsaXN0IG9mIGRlbGlnaHRmdWwg
Tm9kZS5qcyBwYWNrYWdlcyBhbmQgcmVzb3VyY2VzLgoqIFtPU0lOVF0oaHR0
cHM6Ly9naXRodWIuY29tL2ppdm9pL2F3ZXNvbWUtb3NpbnQpIC0gQXdlc29t
ZSBPU0lOVCBsaXN0IGNvbnRhaW5pbmcgZ3JlYXQgcmVzb3VyY2VzLgoqIFtQ
Q0FQIFRvb2xzXShodHRwczovL2dpdGh1Yi5jb20vY2Flc2FyMDMwMS9hd2Vz
b21lLXBjYXB0b29scykgLSBUb29scyBmb3IgcHJvY2Vzc2luZyBuZXR3b3Jr
IHRyYWZmaWMuCiogW1BlbnRlc3QgQ2hlYXQgU2hlZXRzXShodHRwczovL2dp
dGh1Yi5jb20vY29yZWIxdC9hd2Vzb21lLXBlbnRlc3QtY2hlYXQtc2hlZXRz
KSAtIEF3ZXNvbWUgUGVudGVzdCBDaGVhdCBTaGVldHMuCiogW1B5dGhvbiBQ
cm9ncmFtbWluZyBieSBAc3Zha3NoYV0oaHR0cHM6Ly9naXRodWIuY29tL3N2
YWtzaGEvcHl0aG9uaWRhZSkgLSBHZW5lcmFsIFB5dGhvbiBwcm9ncmFtbWlu
Zy4KKiBbUHl0aG9uIFByb2dyYW1taW5nIGJ5IEB2aW50YV0oaHR0cHM6Ly9n
aXRodWIuY29tL3ZpbnRhL2F3ZXNvbWUtcHl0aG9uKSAtIEdlbmVyYWwgUHl0
aG9uIHByb2dyYW1taW5nLgoqIFtQeXRob24gdG9vbHMgZm9yIHBlbmV0cmF0
aW9uIHRlc3RlcnNdKGh0dHBzOi8vZ2l0aHViLmNvbS9kbG9zcy9weXRob24t
cGVudGVzdC10b29scykgLSBMb3RzIG9mIHBlbnRlc3RpbmcgdG9vbHMgYXJl
IHdyaXR0ZW4gaW4gUHl0aG9uLgoqIFtSdWJ5IFByb2dyYW1taW5nIGJ5IEBT
ZG9ncnV5b2xdKGh0dHBzOi8vZ2l0aHViLmNvbS9TZG9ncnV5b2wvYXdlc29t
ZS1ydWJ5KSAtIFRoZSBkZS1mYWN0byBsYW5ndWFnZSBmb3Igd3JpdGluZyBl
eHBsb2l0cy4KKiBbUnVieSBQcm9ncmFtbWluZyBieSBAZHJlaWthbnRlcl0o
aHR0cHM6Ly9naXRodWIuY29tL2RyZWlrYW50ZXIvcnVieS1ib29rbWFya3Mp
IC0gVGhlIGRlLWZhY3RvIGxhbmd1YWdlIGZvciB3cml0aW5nIGV4cGxvaXRz
LgoqIFtSdWJ5IFByb2dyYW1taW5nIGJ5IEBtYXJrZXRzXShodHRwczovL2dp
dGh1Yi5jb20vbWFya2V0cy9hd2Vzb21lLXJ1YnkpIC0gVGhlIGRlLWZhY3Rv
IGxhbmd1YWdlIGZvciB3cml0aW5nIGV4cGxvaXRzLgoqIFtTZWNMaXN0c10o
aHR0cHM6Ly9naXRodWIuY29tL2RhbmllbG1pZXNzbGVyL1NlY0xpc3RzKSAt
IENvbGxlY3Rpb24gb2YgbXVsdGlwbGUgdHlwZXMgb2YgbGlzdHMgdXNlZCBk
dXJpbmcgc2VjdXJpdHkgYXNzZXNzbWVudHMuCiogW1NlY1Rvb2xzXShodHRw
Oi8vc2VjdG9vbHMub3JnLykgLSBUb3AgMTI1IE5ldHdvcmsgU2VjdXJpdHkg
VG9vbHMuCiogW1NlY3VyaXR5IFRhbGtzXShodHRwczovL2dpdGh1Yi5jb20v
UGF1bFNlYy9hd2Vzb21lLXNlYy10YWxrcykgLSBDdXJhdGVkIGxpc3Qgb2Yg
c2VjdXJpdHkgY29uZmVyZW5jZXMuCiogW1NlY3VyaXR5XShodHRwczovL2dp
dGh1Yi5jb20vc2JpbGx5L2F3ZXNvbWUtc2VjdXJpdHkpIC0gU29mdHdhcmUs
IGxpYnJhcmllcywgZG9jdW1lbnRzLCBhbmQgb3RoZXIgcmVzb3VyY2VzLgoq
IFtTZXJ2ZXJsZXNzIFNlY3VyaXR5XShodHRwczovL2dpdGh1Yi5jb20vcHVy
ZXNlYy9hd2Vzb21lLXNlcnZlcmxlc3Mtc2VjdXJpdHkvKSAtIEN1cmF0ZWQg
bGlzdCBvZiBhd2Vzb21lIHNlcnZlcmxlc3Mgc2VjdXJpdHkgcmVzb3VyY2Vz
IHN1Y2ggYXMgKGUpYm9va3MsIGFydGljbGVzLCB3aGl0ZXBhcGVycywgYmxv
Z3MgYW5kIHJlc2VhcmNoIHBhcGVycy4KKiBbU2hlbGwgU2NyaXB0aW5nXSho
dHRwczovL2dpdGh1Yi5jb20vYWxlYmNheS9hd2Vzb21lLXNoZWxsKSAtIENv
bW1hbmQgbGluZSBmcmFtZXdvcmtzLCB0b29sa2l0cywgZ3VpZGVzIGFuZCBn
aXptb3MuCiogW1lBUkFdKGh0dHBzOi8vZ2l0aHViLmNvbS9JblF1ZXN0L2F3
ZXNvbWUteWFyYSkgLSBZQVJBIHJ1bGVzLCB0b29scywgYW5kIHBlb3BsZS4K
CiMjIyBQZW5ldHJhdGlvbiBUZXN0aW5nIFJlcG9ydCBUZW1wbGF0ZXMKCiog
W1B1YmxpYyBQZW50ZXN0aW5nIFJlcG9ydHNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9qdWxpb2Nlc2FyZm9ydC9wdWJsaWMtcGVudGVzdGluZy1yZXBvcnRzKSAt
IEN1cmF0ZWQgbGlzdCBvZiBwdWJsaWMgcGVuZXRyYXRpb24gdGVzdCByZXBv
cnRzIHJlbGVhc2VkIGJ5IHNldmVyYWwgY29uc3VsdGluZyBmaXJtcyBhbmQg
YWNhZGVtaWMgc2VjdXJpdHkgZ3JvdXBzLgoqIFtUJlZTIFBlbnRlc3Rpbmcg
UmVwb3J0IFRlbXBsYXRlXShodHRwczovL3d3dy50ZXN0YW5kdmVyaWZpY2F0
aW9uLmNvbS93cC1jb250ZW50L3VwbG9hZHMvdGVtcGxhdGUtcGVuZXRyYXRp
b24tdGVzdGluZy1yZXBvcnQtdjAzLnBkZikgLSBQZW50ZXN0IHJlcG9ydCB0
ZW1wbGF0ZSBwcm92aWRlZCBieSBUZXN0IGFuZCBWZXJpZmljYXRpb24gU2Vy
dmljZXMsIEx0ZC4KKiBbV2ViIEFwcGxpY2F0aW9uIFNlY3VyaXR5IEFzc2Vz
c21lbnQgUmVwb3J0IFRlbXBsYXRlXShodHRwOi8vbHVjaWRldXMuY29tL3Bk
Zi9zdHcucGRmKSAtIFNhbXBsZSBXZWIgYXBwbGljYXRpb24gc2VjdXJpdHkg
YXNzZXNzbWVudCByZXBvcnRpbmcgdGVtcGxhdGUgcHJvdmlkZWQgYnkgTHVj
aWRldXMuCgojIyBPcGVyYXRpbmcgU3lzdGVtIERpc3RyaWJ1dGlvbnMKCiog
W0FuZHJvaWQgVGFtZXJdKGh0dHBzOi8vYW5kcm9pZHRhbWVyLmNvbS8pIC0g
RGlzdHJpYnV0aW9uIGJ1aWx0IGZvciBBbmRyb2lkIHNlY3VyaXR5IHByb2Zl
c3Npb25hbHMgdGhhdCBpbmNsdWRlcyB0b29scyByZXF1aXJlZCBmb3IgQW5k
cm9pZCBzZWN1cml0eSB0ZXN0aW5nLgoqIFtBcmNoU3RyaWtlXShodHRwczov
L2FyY2hzdHJpa2Uub3JnLykgLSBBcmNoIEdOVS9MaW51eCByZXBvc2l0b3J5
IGZvciBzZWN1cml0eSBwcm9mZXNzaW9uYWxzIGFuZCBlbnRodXNpYXN0cy4K
KiBbQXR0aWZ5T1NdKGh0dHBzOi8vZ2l0aHViLmNvbS9hZGkweDkwL2F0dGlm
eW9zKSAtIEdOVS9MaW51eCBkaXN0cmlidXRpb24gZm9jdXNlZCBvbiB0b29s
cyB1c2VmdWwgZHVyaW5nIEludGVybmV0IG9mIFRoaW5ncyAoSW9UKSBzZWN1
cml0eSBhc3Nlc3NtZW50cy4KKiBbQmFja0JveF0oaHR0cHM6Ly9iYWNrYm94
Lm9yZy8pIC0gVWJ1bnR1LWJhc2VkIGRpc3RyaWJ1dGlvbiBmb3IgcGVuZXRy
YXRpb24gdGVzdHMgYW5kIHNlY3VyaXR5IGFzc2Vzc21lbnRzLgoqIFtCbGFj
a0FyY2hdKGh0dHBzOi8vd3d3LmJsYWNrYXJjaC5vcmcvKSAtIEFyY2ggR05V
L0xpbnV4LWJhc2VkIGRpc3RyaWJ1dGlvbiBmb3IgcGVuZXRyYXRpb24gdGVz
dGVycyBhbmQgc2VjdXJpdHkgcmVzZWFyY2hlcnMuCiogW0J1c2NhZG9yXSho
dHRwczovL2ludGVsdGVjaG5pcXVlcy5jb20vYnVzY2Fkb3IvKSAtIEdOVS9M
aW51eCB2aXJ0dWFsIG1hY2hpbmUgdGhhdCBpcyBwcmUtY29uZmlndXJlZCBm
b3Igb25saW5lIGludmVzdGlnYXRvcnMuCiogW0thbGldKGh0dHBzOi8vd3d3
LmthbGkub3JnLykgLSBSb2xsaW5nIERlYmlhbi1iYXNlZCBHTlUvTGludXgg
ZGlzdHJpYnV0aW9uIGRlc2lnbmVkIGZvciBwZW5ldHJhdGlvbiB0ZXN0aW5n
IGFuZCBkaWdpdGFsIGZvcmVuc2ljcy4KKiBbTmV0d29yayBTZWN1cml0eSBU
b29sa2l0IChOU1QpXShodHRwOi8vbmV0d29ya3NlY3VyaXR5dG9vbGtpdC5v
cmcvKSAtIEZlZG9yYS1iYXNlZCBHTlUvTGludXggYm9vdGFibGUgbGl2ZSBP
cGVyYXRpbmcgU3lzdGVtIGRlc2lnbmVkIHRvIHByb3ZpZGUgZWFzeSBhY2Nl
c3MgdG8gYmVzdC1vZi1icmVlZCBvcGVuIHNvdXJjZSBuZXR3b3JrIHNlY3Vy
aXR5IGFwcGxpY2F0aW9ucy4KKiBbUGFycm90XShodHRwczovL3d3dy5wYXJy
b3RzZWMub3JnLykgLSBEaXN0cmlidXRpb24gc2ltaWxhciB0byBLYWxpLCB3
aXRoIHN1cHBvcnQgZm9yIG11bHRpcGxlIGhhcmR3YXJlIGFyY2hpdGVjdHVy
ZXMuCiogW1BlbnRlc3RCb3hdKGh0dHBzOi8vcGVudGVzdGJveC5vcmcvKSAt
IE9wZW4gc291cmNlIHByZS1jb25maWd1cmVkIHBvcnRhYmxlIHBlbmV0cmF0
aW9uIHRlc3RpbmcgZW52aXJvbm1lbnQgZm9yIHRoZSBXaW5kb3dzIE9wZXJh
dGluZyBTeXN0ZW0uCiogW1RoZSBQZW50ZXN0ZXJzIEZyYW1ld29ya10oaHR0
cHM6Ly9naXRodWIuY29tL3RydXN0ZWRzZWMvcHRmKSAtIERpc3RybyBvcmdh
bml6ZWQgYXJvdW5kIHRoZSBQZW5ldHJhdGlvbiBUZXN0aW5nIEV4ZWN1dGlv
biBTdGFuZGFyZCAoUFRFUyksIHByb3ZpZGluZyBhIGN1cmF0ZWQgY29sbGVj
dGlvbiBvZiB1dGlsaXRpZXMgdGhhdCBvbWl0cyBsZXNzIGZyZXF1ZW50bHkg
dXNlZCB1dGlsaXRpZXMuCgojIyBQZXJpb2RpY2FscwoKKiBbMjYwMDogVGhl
IEhhY2tlciBRdWFydGVybHldKGh0dHBzOi8vd3d3LjI2MDAuY29tL01hZ2F6
aW5lL0RpZ2l0YWxFZGl0aW9ucykgLSBBbWVyaWNhbiBwdWJsaWNhdGlvbiBh
Ym91dCB0ZWNobm9sb2d5IGFuZCBjb21wdXRlciAidW5kZXJncm91bmQiIGN1
bHR1cmUuCiogW1BocmFjayBNYWdhemluZV0oaHR0cDovL3d3dy5waHJhY2su
b3JnLykgLSBCeSBmYXIgdGhlIGxvbmdlc3QgcnVubmluZyBoYWNrZXIgemlu
ZS4KCiMjIFBoeXNpY2FsIEFjY2VzcyBUb29scwoKKiBbQVQgQ29tbWFuZHNd
KGh0dHBzOi8vYXRjb21tYW5kcy5vcmcvKSAtIFVzZSBBVCBjb21tYW5kcyBv
dmVyIGFuIEFuZHJvaWQgZGV2aWNlJ3MgVVNCIHBvcnQgdG8gcmV3cml0ZSBk
ZXZpY2UgZmlybXdhcmUsIGJ5cGFzcyBzZWN1cml0eSBtZWNoYW5pc21zLCBl
eGZpbHRyYXRlIHNlbnNpdGl2ZSBpbmZvcm1hdGlvbiwgcGVyZm9ybSBzY3Jl
ZW4gdW5sb2NrcywgYW5kIGluamVjdCB0b3VjaCBldmVudHMuCiogW0Jhc2gg
QnVubnldKGh0dHBzOi8vd3d3LmhhazUub3JnL2dlYXIvYmFzaC1idW5ueSkg
LSBMb2NhbCBleHBsb2l0IGRlbGl2ZXJ5IHRvb2wgaW4gdGhlIGZvcm0gb2Yg
YSBVU0IgdGh1bWJkcml2ZSBpbiB3aGljaCB5b3Ugd3JpdGUgcGF5bG9hZHMg
aW4gYSBEU0wgY2FsbGVkIEJ1bm55U2NyaXB0LgoqIFtMQU4gVHVydGxlXSho
dHRwczovL2xhbnR1cnRsZS5jb20vKSAtIENvdmVydCAiVVNCIEV0aGVybmV0
IEFkYXB0ZXIiIHRoYXQgcHJvdmlkZXMgcmVtb3RlIGFjY2VzcywgbmV0d29y
ayBpbnRlbGxpZ2VuY2UgZ2F0aGVyaW5nLCBhbmQgTUlUTSBjYXBhYmlsaXRp
ZXMgd2hlbiBpbnN0YWxsZWQgaW4gYSBsb2NhbCBuZXR3b3JrLgoqIFtQQ0lM
ZWVjaF0oaHR0cHM6Ly9naXRodWIuY29tL3Vmcmlzay9wY2lsZWVjaCkgLSBV
c2VzIFBDSWUgaGFyZHdhcmUgZGV2aWNlcyB0byByZWFkIGFuZCB3cml0ZSBm
cm9tIHRoZSB0YXJnZXQgc3lzdGVtIG1lbW9yeSB2aWEgRGlyZWN0IE1lbW9y
eSBBY2Nlc3MgKERNQSkgb3ZlciBQQ0llLgoqIFtQYWNrZXQgU3F1aXJyZWxd
KGh0dHBzOi8vd3d3LmhhazUub3JnL2dlYXIvcGFja2V0LXNxdWlycmVsKSAt
IEV0aGVybmV0IG11bHRpLXRvb2wgZGVzaWduZWQgdG8gZW5hYmxlIGNvdmVy
dCByZW1vdGUgYWNjZXNzLCBwYWlubGVzcyBwYWNrZXQgY2FwdHVyZXMsIGFu
ZCBzZWN1cmUgVlBOIGNvbm5lY3Rpb25zIHdpdGggdGhlIGZsaXAgb2YgYSBz
d2l0Y2guCiogW1BvaXNvbnRhcF0oaHR0cHM6Ly9zYW15LnBsL3BvaXNvbnRh
cC8pIC0gU2lwaG9ucyBjb29raWVzLCBleHBvc2VzIGludGVybmFsIChMQU4t
c2lkZSkgcm91dGVyIGFuZCBpbnN0YWxscyB3ZWIgYmFja2Rvb3Igb24gbG9j
a2VkIGNvbXB1dGVycy4KKiBbUHJveG1hcmszXShodHRwczovL3Byb3htYXJr
My5jb20vKSAtIFJGSUQvTkZDIGNsb25pbmcsIHJlcGxheSwgYW5kIHNwb29m
aW5nIHRvb2xraXQgb2Z0ZW4gdXNlZCBmb3IgYW5hbHl6aW5nIGFuZCBhdHRh
Y2tpbmcgcHJveGltaXR5IGNhcmRzL3JlYWRlcnMsIHdpcmVsZXNzIGtleXMv
a2V5Zm9icywgYW5kIG1vcmUuCiogW1VTQiBSdWJiZXIgRHVja3ldKGh0dHA6
Ly91c2JydWJiZXJkdWNreS5jb20vKSAtIEN1c3RvbWl6YWJsZSBrZXlzdHJv
a2UgaW5qZWN0aW9uIGF0dGFjayBwbGF0Zm9ybSBtYXNxdWVyYWRpbmcgYXMg
YSBVU0IgdGh1bWJkcml2ZS4KKiBbV2lGaSBQaW5lYXBwbGVdKGh0dHBzOi8v
d3d3LndpZmlwaW5lYXBwbGUuY29tLykgLSBXaXJlbGVzcyBhdWRpdGluZyBh
bmQgcGVuZXRyYXRpb24gdGVzdGluZyBwbGF0Zm9ybS4KCiMjIFJldmVyc2Ug
RW5naW5lZXJpbmcgVG9vbHMKClNlZSBhbHNvIFthd2Vzb21lLXJldmVyc2lu
Z10oaHR0cHM6Ly9naXRodWIuY29tL3R5bGVyaGE5Ny9hd2Vzb21lLXJldmVy
c2luZykuCgoqIFtDYXBzdG9uZV0oaHR0cDovL3d3dy5jYXBzdG9uZS1lbmdp
bmUub3JnLykgLSBMaWdodHdlaWdodCBtdWx0aS1wbGF0Zm9ybSwgbXVsdGkt
YXJjaGl0ZWN0dXJlIGRpc2Fzc2VtYmx5IGZyYW1ld29yay4KKiBbRXZhbidz
IERlYnVnZ2VyXShodHRwOi8vd3d3LmNvZGVmMDAuY29tL3Byb2plY3RzI2Rl
YnVnZ2VyKSAtIE9sbHlEYmctbGlrZSBkZWJ1Z2dlciBmb3IgR05VL0xpbnV4
LgoqIFtGcmlkYV0oaHR0cHM6Ly93d3cuZnJpZGEucmUvKSAtIER5bmFtaWMg
aW5zdHJ1bWVudGF0aW9uIHRvb2xraXQgZm9yIGRldmVsb3BlcnMsIHJldmVy
c2UtZW5naW5lZXJzLCBhbmQgc2VjdXJpdHkgcmVzZWFyY2hlcnMuCiogW0do
aWRyYV0oaHR0cHM6Ly93d3cuZ2hpZHJhLXNyZS5vcmcvKSAtIFN1aXRlIG9m
IGZyZWUgc29mdHdhcmUgcmV2ZXJzZSBlbmdpbmVlcmluZyB0b29scyBkZXZl
bG9wZWQgYnkgTlNBJ3MgUmVzZWFyY2ggRGlyZWN0b3JhdGUgb3JpZ2luYWxs
eSBleHBvc2VkIGluIFdpa2lMZWFrcydzICJWYXVsdCA3IiBwdWJsaWNhdGlv
biBhbmQgbm93IG1haW50YWluZWQgYXMgb3BlbiBzb3VyY2Ugc29mdHdhcmUu
CiogW0ltbXVuaXR5IERlYnVnZ2VyXShodHRwczovL2ltbXVuaXR5aW5jLmNv
bS9wcm9kdWN0cy9kZWJ1Z2dlci8pIC0gUG93ZXJmdWwgd2F5IHRvIHdyaXRl
IGV4cGxvaXRzIGFuZCBhbmFseXplIG1hbHdhcmUuCiogW0ludGVyYWN0aXZl
IERpc2Fzc2VtYmxlciAoSURBIFBybyldKGh0dHBzOi8vd3d3LmhleC1yYXlz
LmNvbS9wcm9kdWN0cy9pZGEvKSAtIFByb3ByaWV0YXJ5IG11bHRpLXByb2Nl
c3NvciBkaXNhc3NlbWJsZXIgYW5kIGRlYnVnZ2VyIGZvciBXaW5kb3dzLCBH
TlUvTGludXgsIG9yIG1hY09TOyBhbHNvIGhhcyBhIGZyZWUgdmVyc2lvbiwg
W0lEQSBGcmVlXShodHRwczovL3d3dy5oZXgtcmF5cy5jb20vcHJvZHVjdHMv
aWRhL3N1cHBvcnQvZG93bmxvYWRfZnJlZXdhcmUuc2h0bWwpLgoqIFtNZWR1
c2FdKGh0dHBzOi8vZ2l0aHViLmNvbS93aXNrL21lZHVzYSkgLSBPcGVuIHNv
dXJjZSwgY3Jvc3MtcGxhdGZvcm0gaW50ZXJhY3RpdmUgZGlzYXNzZW1ibGVy
LgoqIFtPbGx5RGJnXShodHRwOi8vd3d3Lm9sbHlkYmcuZGUvKSAtIHg4NiBk
ZWJ1Z2dlciBmb3IgV2luZG93cyBiaW5hcmllcyB0aGF0IGVtcGhhc2l6ZXMg
YmluYXJ5IGNvZGUgYW5hbHlzaXMuCiogW1B5UkVCb3hdKGh0dHBzOi8vZ2l0
aHViLmNvbS9DaXNjby1UYWxvcy9weXJlYm94KSAtIFB5dGhvbiBzY3JpcHRh
YmxlIFJldmVyc2UgRW5naW5lZXJpbmcgc2FuZGJveCBieSBDaXNjby1UYWxv
cy4KKiBbUmFkYXJlMl0oaHR0cDovL3JhZGEucmUvci9pbmRleC5odG1sKSAt
IE9wZW4gc291cmNlLCBjcm9zc3BsYXRmb3JtIHJldmVyc2UgZW5naW5lZXJp
bmcgZnJhbWV3b3JrLgoqIFtVRUZJVG9vbF0oaHR0cHM6Ly9naXRodWIuY29t
L0xvbmdTb2Z0L1VFRklUb29sKSAtIFVFRkkgZmlybXdhcmUgaW1hZ2Ugdmll
d2VyIGFuZCBlZGl0b3IuCiogW1ZvbHRyb25dKGh0dHBzOi8vZ2l0aHViLmNv
bS9zbmFyZS92b2x0cm9uKSAtIEV4dGVuc2libGUgZGVidWdnZXIgVUkgdG9v
bGtpdCB3cml0dGVuIGluIFB5dGhvbi4KKiBbV0RLL1dpbkRiZ10oaHR0cHM6
Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9oYXJkd2FyZS9o
aDg1MjM2NS5hc3B4KSAtIFdpbmRvd3MgRHJpdmVyIEtpdCBhbmQgV2luRGJn
LgoqIFtiaW53YWxrXShodHRwczovL2dpdGh1Yi5jb20vZGV2dHR5czAvYmlu
d2FsaykgLSBGYXN0LCBlYXN5IHRvIHVzZSB0b29sIGZvciBhbmFseXppbmcs
IHJldmVyc2UgZW5naW5lZXJpbmcsIGFuZCBleHRyYWN0aW5nIGZpcm13YXJl
IGltYWdlcy4KKiBbYm94eHldKGh0dHBzOi8vZ2l0aHViLmNvbS9rcGN5cmQv
Ym94eHktcnMpIC0gTGlua2FibGUgc2FuZGJveCBleHBsb3Jlci4KKiBbZG5T
cHldKGh0dHBzOi8vZ2l0aHViLmNvbS8weGQ0ZC9kblNweSkgLSBUb29sIHRv
IHJldmVyc2UgZW5naW5lZXIgLk5FVCBhc3NlbWJsaWVzLgoqIFtwZWRhXSho
dHRwczovL2dpdGh1Yi5jb20vbG9uZ2xkL3BlZGEpIC0gUHl0aG9uIEV4cGxv
aXQgRGV2ZWxvcG1lbnQgQXNzaXN0YW5jZSBmb3IgR0RCLgoqIFtwbGFzbWFd
KGh0dHBzOi8vZ2l0aHViLmNvbS9qb2VscHgvcGxhc21hKSAtIEludGVyYWN0
aXZlIGRpc2Fzc2VtYmxlciBmb3IgeDg2L0FSTS9NSVBTLiBHZW5lcmF0ZXMg
aW5kZW50ZWQgcHNldWRvLWNvZGUgd2l0aCBjb2xvcmVkIHN5bnRheCBjb2Rl
LgoqIFtwd25kYmddKGh0dHBzOi8vZ2l0aHViLmNvbS9wd25kYmcvcHduZGJn
KSAtIEdEQiBwbHVnLWluIHRoYXQgZWFzZXMgZGVidWdnaW5nIHdpdGggR0RC
LCB3aXRoIGEgZm9jdXMgb24gZmVhdHVyZXMgbmVlZGVkIGJ5IGxvdy1sZXZl
bCBzb2Z0d2FyZSBkZXZlbG9wZXJzLCBoYXJkd2FyZSBoYWNrZXJzLCByZXZl
cnNlLWVuZ2luZWVycywgYW5kIGV4cGxvaXQgZGV2ZWxvcGVycy4KKiBbclZN
SV0oaHR0cHM6Ly9naXRodWIuY29tL2ZpcmVleWUvclZNSSkgLSBEZWJ1Z2dl
ciBvbiBzdGVyb2lkczsgaW5zcGVjdCB1c2Vyc3BhY2UgcHJvY2Vzc2VzLCBr
ZXJuZWwgZHJpdmVycywgYW5kIHByZWJvb3QgZW52aXJvbm1lbnRzIGluIGEg
c2luZ2xlIHRvb2wuCiogW3g2NGRiZ10oaHR0cDovL3g2NGRiZy5jb20vKSAt
IE9wZW4gc291cmNlIHg2NC94MzIgZGVidWdnZXIgZm9yIHdpbmRvd3MuCgoj
IyBTZWN1cml0eSBFZHVjYXRpb24gQ291cnNlcwoKKiBbQVJJWk9OQSBDWUJF
UiBXQVJGQVJFIFJBTkdFXShodHRwOi8vYXpjd3Iub3JnLykgLSAyNHg3IGxp
dmUgZmlyZSBleGVyY2lzZXMgZm9yIGJlZ2lubmVycyB0aHJvdWdoIHJlYWwg
d29ybGQgb3BlcmF0aW9uczsgY2FwYWJpbGl0eSBmb3IgdXB3YXJkIHByb2dy
ZXNzaW9uIGludG8gdGhlIHJlYWwgd29ybGQgb2YgY3liZXIgd2FyZmFyZS4K
KiBbQ1RGIEZpZWxkIEd1aWRlXShodHRwczovL3RyYWlsb2ZiaXRzLmdpdGh1
Yi5pby9jdGYvKSAtIEV2ZXJ5dGhpbmcgeW91IG5lZWQgdG8gd2luIHlvdXIg
bmV4dCBDVEYgY29tcGV0aXRpb24uCiogW0N5YnJhcnldKGh0dHA6Ly9jeWJy
YXJ5Lml0KSAtIEZyZWUgY291cnNlcyBpbiBldGhpY2FsIGhhY2tpbmcgYW5k
IGFkdmFuY2VkIHBlbmV0cmF0aW9uIHRlc3RpbmcuIEFkdmFuY2VkIHBlbmV0
cmF0aW9uIHRlc3RpbmcgY291cnNlcyBhcmUgYmFzZWQgb24gdGhlIGJvb2sg
J1BlbmV0cmF0aW9uIFRlc3RpbmcgZm9yIEhpZ2hseSBTZWN1cmVkIEVudmly
b25tZW50cycuCiogW0V1cm9wZWFuIFVuaW9uIEFnZW5jeSBmb3IgTmV0d29y
ayBhbmQgSW5mb3JtYXRpb24gU2VjdXJpdHldKGh0dHBzOi8vd3d3LmVuaXNh
LmV1cm9wYS5ldS90b3BpY3MvdHJhaW5pbmdzLWZvci1jeWJlcnNlY3VyaXR5
LXNwZWNpYWxpc3RzL29ubGluZS10cmFpbmluZy1tYXRlcmlhbCkgLSBFTklT
QSBDeWJlciBTZWN1cml0eSBUcmFpbmluZyBtYXRlcmlhbC4KKiBbT2ZmZW5z
aXZlIFNlY3VyaXR5IFRyYWluaW5nXShodHRwczovL3d3dy5vZmZlbnNpdmUt
c2VjdXJpdHkuY29tL2luZm9ybWF0aW9uLXNlY3VyaXR5LXRyYWluaW5nLykg
LSBUcmFpbmluZyBmcm9tIEJhY2tUcmFjay9LYWxpIGRldmVsb3BlcnMuCiog
W09wZW4gU2VjdXJpdHkgVHJhaW5pbmddKGh0dHA6Ly9vcGVuc2VjdXJpdHl0
cmFpbmluZy5pbmZvLykgLSBUcmFpbmluZyBtYXRlcmlhbCBmb3IgY29tcHV0
ZXIgc2VjdXJpdHkgY2xhc3Nlcy4KKiBbU0FOUyBTZWN1cml0eSBUcmFpbmlu
Z10oaHR0cDovL3d3dy5zYW5zLm9yZy8pIC0gQ29tcHV0ZXIgU2VjdXJpdHkg
VHJhaW5pbmcgJiBDZXJ0aWZpY2F0aW9uLgoKIyMgU2lkZS1jaGFubmVsIFRv
b2xzCgoqIFtDaGlwV2hpc3BlcmVyXShodHRwOi8vY2hpcHdoaXNwZXJlci5j
b20pIC0gQ29tcGxldGUgb3Blbi1zb3VyY2UgdG9vbGNoYWluIGZvciBzaWRl
LWNoYW5uZWwgcG93ZXIgYW5hbHlzaXMgYW5kIGdsaXRjaGluZyBhdHRhY2tz
LgoKIyMgU29jaWFsIEVuZ2luZWVyaW5nIFRvb2xzCgoqIFtCZWVsb2dnZXJd
KGh0dHBzOi8vZ2l0aHViLmNvbS80dzRrMy9CZWVMb2dnZXIpIC0gVG9vbCBm
b3IgZ2VuZXJhdGluZyBrZXlsb29nZXIuCiogW0NhdHBoaXNoXShodHRwczov
L2dpdGh1Yi5jb20vcmluZzBsYWIvY2F0cGhpc2gpIC0gVG9vbCBmb3IgcGhp
c2hpbmcgYW5kIGNvcnBvcmF0ZSBlc3Bpb25hZ2Ugd3JpdHRlbiBpbiBSdWJ5
LgoqIFtFdmlsZ2lueDJdKGh0dHBzOi8vZ2l0aHViLmNvbS9rZ3JldHpreS9l
dmlsZ2lueDIpIC0gU3RhbmRhbG9uZSBtYW4taW4tdGhlLW1pZGRsZSBhdHRh
Y2sgZnJhbWV3b3JrLgoqIFtFdmlsZ2lueF0oaHR0cHM6Ly9naXRodWIuY29t
L2tncmV0emt5L2V2aWxnaW54KSAtIE1JVE0gYXR0YWNrIGZyYW1ld29yayB1
c2VkIGZvciBwaGlzaGluZyBjcmVkZW50aWFscyBhbmQgc2Vzc2lvbiBjb29r
aWVzIGZyb20gYW55IFdlYiBzZXJ2aWNlLgoqIFtGaWVyY2VQaGlzaF0oaHR0
cHM6Ly9naXRodWIuY29tL1JhaWtpYS9GaWVyY2VQaGlzaCkgLSBGdWxsLWZs
ZWRnZWQgcGhpc2hpbmcgZnJhbWV3b3JrIHRvIG1hbmFnZSBhbGwgcGhpc2hp
bmcgZW5nYWdlbWVudHMuCiogW0dvcGhpc2hdKGh0dHBzOi8vZ2V0Z29waGlz
aC5jb20pIC0gT3Blbi1zb3VyY2UgcGhpc2hpbmcgZnJhbWV3b3JrLgoqIFtL
aW5nIFBoaXNoZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9zZWN1cmVzdGF0ZS9r
aW5nLXBoaXNoZXIpIC0gUGhpc2hpbmcgY2FtcGFpZ24gdG9vbGtpdCB1c2Vk
IGZvciBjcmVhdGluZyBhbmQgbWFuYWdpbmcgbXVsdGlwbGUgc2ltdWx0YW5l
b3VzIHBoaXNoaW5nIGF0dGFja3Mgd2l0aCBjdXN0b20gZW1haWwgYW5kIHNl
cnZlciBjb250ZW50LgoqIFtNb2RsaXNoa2FdKGh0dHBzOi8vZ2l0aHViLmNv
bS9kcmsxd2kvTW9kbGlzaGthKSAtIEZsZXhpYmxlIGFuZCBwb3dlcmZ1bCBy
ZXZlcnNlIHByb3h5IHdpdGggcmVhbC10aW1lIHR3by1mYWN0b3IgYXV0aGVu
dGljYXRpb24uCiogW1JlZWxQaGlzaF0oaHR0cHM6Ly9naXRodWIuY29tL2Zp
cmVleWUvUmVlbFBoaXNoKSAtIFJlYWwtdGltZSB0d28tZmFjdG9yIHBoaXNo
aW5nIHRvb2wuCiogW1NoZWxsUGhpc2hdKGh0dHBzOi8vZ2l0aHViLmNvbS90
aGVsaW51eGNob2ljZS9zaGVsbHBoaXNoKSAtIFNvY2lhbCBtZWRpYSBzaXRl
IGNsb25lciBhbmQgcGhpc2hpbmcgdG9vbCBidWlsdCBhdG9wIFNvY2lhbEZp
c2guCiogW1NvY2lhbCBFbmdpbmVlciBUb29sa2l0IChTRVQpXShodHRwczov
L2dpdGh1Yi5jb20vdHJ1c3RlZHNlYy9zb2NpYWwtZW5naW5lZXItdG9vbGtp
dCkgLSBPcGVuIHNvdXJjZSBwZW50ZXN0aW5nIGZyYW1ld29yayBkZXNpZ25l
ZCBmb3Igc29jaWFsIGVuZ2luZWVyaW5nIGZlYXR1cmluZyBhIG51bWJlciBv
ZiBjdXN0b20gYXR0YWNrIHZlY3RvcnMgdG8gbWFrZSBiZWxpZXZhYmxlIGF0
dGFja3MgcXVpY2tseS4KKiBbU29jaWFsRmlzaF0oaHR0cHM6Ly9naXRodWIu
Y29tL1VuZGVhZFNlYy9Tb2NpYWxGaXNoKSAtIFNvY2lhbCBtZWRpYSBwaGlz
aGluZyBmcmFtZXdvcmsgdGhhdCBjYW4gcnVuIG9uIGFuIEFuZHJvaWQgcGhv
bmUgb3IgaW4gYSBEb2NrZXIgY29udGFpbmVyLgoqIFtwaGlzaGVyeV0oaHR0
cHM6Ly9naXRodWIuY29tL3J5aGFuc29uL3BoaXNoZXJ5KSAtIFRMUy9TU0wg
ZW5hYmxlZCBCYXNpYyBBdXRoIGNyZWRlbnRpYWwgaGFydmVzdGVyLgoqIFt3
aWZpcGhpc2hlcl0oaHR0cHM6Ly9naXRodWIuY29tL3NvcGhyb24vd2lmaXBo
aXNoZXIpIC0gQXV0b21hdGVkIHBoaXNoaW5nIGF0dGFja3MgYWdhaW5zdCBX
aUZpIG5ldHdvcmtzLgoKIyMgU3RhdGljIEFuYWx5emVycwoKKiBbQnJha2Vt
YW5dKGh0dHBzOi8vZ2l0aHViLmNvbS9wcmVzaWRlbnRiZWVmL2JyYWtlbWFu
KSAtIFN0YXRpYyBhbmFseXNpcyBzZWN1cml0eSB2dWxuZXJhYmlsaXR5IHNj
YW5uZXIgZm9yIFJ1Ynkgb24gUmFpbHMgYXBwbGljYXRpb25zLgoqIFtGaW5k
QnVnc10oaHR0cDovL2ZpbmRidWdzLnNvdXJjZWZvcmdlLm5ldC8pIC0gRnJl
ZSBzb2Z0d2FyZSBzdGF0aWMgYW5hbHl6ZXIgdG8gbG9vayBmb3IgYnVncyBp
biBKYXZhIGNvZGUuCiogW1Byb2dwaWxvdF0oaHR0cHM6Ly9naXRodWIuY29t
L2Rlc2lnbnNlY3VyaXR5L3Byb2dwaWxvdCkgLSBTdGF0aWMgc2VjdXJpdHkg
YW5hbHlzaXMgdG9vbCBmb3IgUEhQIGNvZGUuCiogW1JlZ0V4LURvU10oaHR0
cHM6Ly9naXRodWIuY29tL2phZ3JhY2V5L1JlZ0V4LURvUykgLSBBbmFseXpl
cyBzb3VyY2UgY29kZSBmb3IgUmVndWxhciBFeHByZXNzaW9ucyBzdXNjZXB0
aWJsZSB0byBEZW5pYWwgb2YgU2VydmljZSBhdHRhY2tzLgoqIFtiYW5kaXRd
KGh0dHBzOi8vcHlwaS5weXRob24ub3JnL3B5cGkvYmFuZGl0LykgLSBTZWN1
cml0eSBvcmllbnRlZCBzdGF0aWMgYW5hbHlzZXIgZm9yIFB5dGhvbiBjb2Rl
LgoqIFtjcHBjaGVja10oaHR0cDovL2NwcGNoZWNrLnNvdXJjZWZvcmdlLm5l
dC8pIC0gRXh0ZW5zaWJsZSBDL0MrKyBzdGF0aWMgYW5hbHl6ZXIgZm9jdXNl
ZCBvbiBmaW5kaW5nIGJ1Z3MuCiogW3NvYmVsb3ddKGh0dHBzOi8vZ2l0aHVi
LmNvbS9uY2Nncm91cC9zb2JlbG93KSAtIFNlY3VyaXR5LWZvY3VzZWQgc3Rh
dGljIGFuYWx5c2lzIGZvciB0aGUgUGhvZW5peCBGcmFtZXdvcmsuCiogW2N3
ZV9jaGVja2VyXShodHRwczovL2dpdGh1Yi5jb20vZmtpZS1jYWQvY3dlX2No
ZWNrZXIpIC0gU3VpdGUgb2YgdG9vbHMgYnVpbHQgYXRvcCB0aGUgQmluYXJ5
IEFuYWx5c2lzIFBsYXRmb3JtIChCQVApIHRvIGhldXJpc3RpY2FsbHkgZGV0
ZWN0IENXRXMgaW4gY29tcGlsZWQgYmluYXJpZXMgYW5kIGZpcm13YXJlLgoK
IyMgVnVsbmVyYWJpbGl0eSBEYXRhYmFzZXMKCiogW0J1Z3RyYXEgKEJJRCld
KGh0dHA6Ly93d3cuc2VjdXJpdHlmb2N1cy5jb20vYmlkLykgLSBTb2Z0d2Fy
ZSBzZWN1cml0eSBidWcgaWRlbnRpZmljYXRpb24gZGF0YWJhc2UgY29tcGls
ZWQgZnJvbSBzdWJtaXNzaW9ucyB0byB0aGUgU2VjdXJpdHlGb2N1cyBtYWls
aW5nIGxpc3QgYW5kIG90aGVyIHNvdXJjZXMsIG9wZXJhdGVkIGJ5IFN5bWFu
dGVjLCBJbmMuCiogW0NYU2VjdXJpdHldKGh0dHBzOi8vY3hzZWN1cml0eS5j
b20vKSAtIEFyY2hpdmUgb2YgcHVibGlzaGVkIENWRSBhbmQgQnVndHJhcSBz
b2Z0d2FyZSB2dWxuZXJhYmlsaXRpZXMgY3Jvc3MtcmVmZXJlbmNlZCB3aXRo
IGEgR29vZ2xlIGRvcmsgZGF0YWJhc2UgZm9yIGRpc2NvdmVyaW5nIHRoZSBs
aXN0ZWQgdnVsbmVyYWJpbGl0eS4KKiBbQ2hpbmEgTmF0aW9uYWwgVnVsbmVy
YWJpbGl0eSBEYXRhYmFzZSAoQ05OVkQpXShodHRwOi8vd3d3LmNubnZkLm9y
Zy5jbi8pIC0gQ2hpbmVzZSBnb3Zlcm5tZW50LXJ1biB2dWxuZXJhYmlsaXR5
IGRhdGFiYXNlIGFuYWxvZ3VvdXMgdG8gdGhlIFVuaXRlZCBTdGF0ZXMncyBD
VkUgZGF0YWJhc2UgaG9zdGVkIGJ5IE1pdHJlIENvcnBvcmF0aW9uLgoqIFtD
b21tb24gVnVsbmVyYWJpbGl0aWVzIGFuZCBFeHBvc3VyZXMgKENWRSldKGh0
dHBzOi8vY3ZlLm1pdHJlLm9yZy8pIC0gRGljdGlvbmFyeSBvZiBjb21tb24g
bmFtZXMgKGkuZS4sIENWRSBJZGVudGlmaWVycykgZm9yIHB1YmxpY2x5IGtu
b3duIHNlY3VyaXR5IHZ1bG5lcmFiaWxpdGllcy4KKiBbRGlzdHJpYnV0ZWQg
V2Vha25lc3MgRmlsaW5nIChEV0YpXShodHRwczovL2Rpc3RyaWJ1dGVkd2Vh
a25lc3NmaWxpbmcub3JnLykgLSBGZWRlcmF0ZWQgQ05BIChDVkUgTnVtYmVy
IEF1dGhvcml0eSkgbWlycm9yaW5nIE1JVFJFJ3MgQ1ZFIGRhdGFiYXNlIGFu
ZCBvZmZlcmluZyBhZGRpdGlvbmFsIENWRS1lcXVpdmFsZW50IG51bWJlcnMg
dG8gb3RoZXJ3aXNlIG91dC1vZi1zY29wZSB2dWxuZXJhYmlsaXR5IGRpc2Ns
b3N1cmVzLgoqIFtFeHBsb2l0LURCXShodHRwczovL3d3dy5leHBsb2l0LWRi
LmNvbS8pIC0gTm9uLXByb2ZpdCBwcm9qZWN0IGhvc3RpbmcgZXhwbG9pdHMg
Zm9yIHNvZnR3YXJlIHZ1bG5lcmFiaWxpdGllcywgcHJvdmlkZWQgYXMgYSBw
dWJsaWMgc2VydmljZSBieSBPZmZlbnNpdmUgU2VjdXJpdHkuCiogW0Z1bGwt
RGlzY2xvc3VyZV0oaHR0cDovL3NlY2xpc3RzLm9yZy9mdWxsZGlzY2xvc3Vy
ZS8pIC0gUHVibGljLCB2ZW5kb3ItbmV1dHJhbCBmb3J1bSBmb3IgZGV0YWls
ZWQgZGlzY3Vzc2lvbiBvZiB2dWxuZXJhYmlsaXRpZXMsIG9mdGVuIHB1Ymxp
c2hlcyBkZXRhaWxzIGJlZm9yZSBtYW55IG90aGVyIHNvdXJjZXMuCiogW0hQ
SS1WREJdKGh0dHBzOi8vaHBpLXZkYi5kZS8pIC0gQWdncmVnYXRvciBvZiBj
cm9zcy1yZWZlcmVuY2VkIHNvZnR3YXJlIHZ1bG5lcmFiaWxpdGllcyBvZmZl
cmluZyBmcmVlLW9mLWNoYXJnZSBBUEkgYWNjZXNzLCBwcm92aWRlZCBieSB0
aGUgSGFzc28tUGxhdHRuZXIgSW5zdGl0dXRlLCBQb3RzZGFtLgoqIFtJbmoz
Y3Qwcl0oaHR0cHM6Ly93d3cuMGRheS50b2RheS8pIC0gRXhwbG9pdCBtYXJr
ZXRwbGFjZSBhbmQgdnVsbmVyYWJpbGl0eSBpbmZvcm1hdGlvbiBhZ2dyZWdh
dG9yLiAoW09uaW9uIHNlcnZpY2VdKGh0dHA6Ly9tdmZqZnVnZHdnYzV1d2hv
Lm9uaW9uLykuKQoqIFtNaWNyb3NvZnQgU2VjdXJpdHkgQWR2aXNvcmllc10o
aHR0cHM6Ly90ZWNobmV0Lm1pY3Jvc29mdC5jb20vZW4tdXMvc2VjdXJpdHkv
YWR2aXNvcmllcyNBUFVNQSkgLSBBcmNoaXZlIG9mIHNlY3VyaXR5IGFkdmlz
b3JpZXMgaW1wYWN0aW5nIE1pY3Jvc29mdCBzb2Z0d2FyZS4KKiBbTWljcm9z
b2Z0IFNlY3VyaXR5IEJ1bGxldGluc10oaHR0cHM6Ly90ZWNobmV0Lm1pY3Jv
c29mdC5jb20vZW4tdXMvc2VjdXJpdHkvYnVsbGV0aW5zI3NlY19zZWFyY2gp
IC0gQW5ub3VuY2VtZW50cyBvZiBzZWN1cml0eSBpc3N1ZXMgZGlzY292ZXJl
ZCBpbiBNaWNyb3NvZnQgc29mdHdhcmUsIHB1Ymxpc2hlZCBieSB0aGUgTWlj
cm9zb2Z0IFNlY3VyaXR5IFJlc3BvbnNlIENlbnRlciAoTVNSQykuCiogW01v
emlsbGEgRm91bmRhdGlvbiBTZWN1cml0eSBBZHZpc29yaWVzXShodHRwczov
L3d3dy5tb3ppbGxhLm9yZy9zZWN1cml0eS9hZHZpc29yaWVzLykgLSBBcmNo
aXZlIG9mIHNlY3VyaXR5IGFkdmlzb3JpZXMgaW1wYWN0aW5nIE1vemlsbGEg
c29mdHdhcmUsIGluY2x1ZGluZyB0aGUgRmlyZWZveCBXZWIgQnJvd3Nlci4K
KiBbTmF0aW9uYWwgVnVsbmVyYWJpbGl0eSBEYXRhYmFzZSAoTlZEKV0oaHR0
cHM6Ly9udmQubmlzdC5nb3YvKSAtIFVuaXRlZCBTdGF0ZXMgZ292ZXJubWVu
dCdzIE5hdGlvbmFsIFZ1bG5lcmFiaWxpdHkgRGF0YWJhc2UgcHJvdmlkZXMg
YWRkaXRpb25hbCBtZXRhLWRhdGEgKENQRSwgQ1ZTUyBzY29yaW5nKSBvZiB0
aGUgc3RhbmRhcmQgQ1ZFIExpc3QgYWxvbmcgd2l0aCBhIGZpbmUtZ3JhaW5l
ZCBzZWFyY2ggZW5naW5lLgoqIFtQYWNrZXQgU3Rvcm1dKGh0dHBzOi8vcGFj
a2V0c3Rvcm1zZWN1cml0eS5jb20vZmlsZXMvKSAtIENvbXBlbmRpdW0gb2Yg
ZXhwbG9pdHMsIGFkdmlzb3JpZXMsIHRvb2xzLCBhbmQgb3RoZXIgc2VjdXJp
dHktcmVsYXRlZCByZXNvdXJjZXMgYWdncmVnYXRlZCBmcm9tIGFjcm9zcyB0
aGUgaW5kdXN0cnkuCiogW1NlY3VyaVRlYW1dKGh0dHA6Ly93d3cuc2VjdXJp
dGVhbS5jb20vKSAtIEluZGVwZW5kZW50IHNvdXJjZSBvZiBzb2Z0d2FyZSB2
dWxuZXJhYmlsaXR5IGluZm9ybWF0aW9uLgoqIFtVUy1DRVJUIFZ1bG5lcmFi
aWxpdHkgTm90ZXMgRGF0YWJhc2VdKGh0dHBzOi8vd3d3LmtiLmNlcnQub3Jn
L3Z1bHMvKSAtIFN1bW1hcmllcywgdGVjaG5pY2FsIGRldGFpbHMsIHJlbWVk
aWF0aW9uIGluZm9ybWF0aW9uLCBhbmQgbGlzdHMgb2YgdmVuZG9ycyBhZmZl
Y3RlZCBieSBzb2Z0d2FyZSB2dWxuZXJhYmlsaXRpZXMsIGFnZ3JlZ2F0ZWQg
YnkgdGhlIFVuaXRlZCBTdGF0ZXMgQ29tcHV0ZXIgRW1lcmdlbmN5IFJlc3Bv
bnNlIFRlYW0gKFVTLUNFUlQpLgoqIFtWdWxuZXJhYmlsaXR5IExhYl0oaHR0
cHM6Ly93d3cudnVsbmVyYWJpbGl0eS1sYWIuY29tLykgLSBPcGVuIGZvcnVt
IGZvciBzZWN1cml0eSBhZHZpc29yaWVzIG9yZ2FuaXplZCBieSBjYXRlZ29y
eSBvZiBleHBsb2l0IHRhcmdldC4KKiBbVnVsbmVyc10oaHR0cHM6Ly92dWxu
ZXJzLmNvbS8pIC0gU2VjdXJpdHkgZGF0YWJhc2Ugb2Ygc29mdHdhcmUgdnVs
bmVyYWJpbGl0aWVzLgoqIFtWdWxtb25dKGh0dHBzOi8vdnVsbW9uLmNvbS8p
IC0gVnVsbmVyYWJpbGl0eSBzZWFyY2ggZW5naW5lIHdpdGggdnVsbmVyYWJp
bGl0eSBpbnRlbGxpZ2VuY2UgZmVhdHVyZXMgdGhhdCBjb25kdWN0cyBmdWxs
IHRleHQgc2VhcmNoZXMgaW4gaXRzIGRhdGFiYXNlLgoqIFtaZXJvIERheSBJ
bml0aWF0aXZlXShodHRwOi8vemVyb2RheWluaXRpYXRpdmUuY29tL2Fkdmlz
b3JpZXMvcHVibGlzaGVkLykgLSBCdWcgYm91bnR5IHByb2dyYW0gd2l0aCBw
dWJsaWNseSBhY2Nlc3NpYmxlIGFyY2hpdmUgb2YgcHVibGlzaGVkIHNlY3Vy
aXR5IGFkdmlzb3JpZXMsIG9wZXJhdGVkIGJ5IFRpcHBpbmdQb2ludC4KCiMj
IFdlYiBFeHBsb2l0YXRpb24KCiogW0JsaW5kRWxlcGhhbnRdKGh0dHA6Ly9i
bGluZGVsZXBoYW50LnNvdXJjZWZvcmdlLm5ldC8pIC0gV2ViIGFwcGxpY2F0
aW9uIGZpbmdlcnByaW50ZXIuCiogW0Jyb3dzZXIgRXhwbG9pdGF0aW9uIEZy
YW1ld29yayAoQmVFRildKGh0dHBzOi8vZ2l0aHViLmNvbS9iZWVmcHJvamVj
dC9iZWVmKSAtIENvbW1hbmQgYW5kIGNvbnRyb2wgc2VydmVyIGZvciBkZWxp
dmVyaW5nIGV4cGxvaXRzIHRvIGNvbW1hbmRlZXJlZCBXZWIgYnJvd3NlcnMu
CiogW0J1cnAgU3VpdGVdKGh0dHBzOi8vcG9ydHN3aWdnZXIubmV0L2J1cnAv
KSAtIEludGVncmF0ZWQgcGxhdGZvcm0gZm9yIHBlcmZvcm1pbmcgc2VjdXJp
dHkgdGVzdGluZyBvZiB3ZWIgYXBwbGljYXRpb25zLgoqIFtDb21taXhdKGh0
dHBzOi8vZ2l0aHViLmNvbS9jb21taXhwcm9qZWN0L2NvbW1peCkgLSBBdXRv
bWF0ZWQgYWxsLWluLW9uZSBvcGVyYXRpbmcgc3lzdGVtIGNvbW1hbmQgaW5q
ZWN0aW9uIGFuZCBleHBsb2l0YXRpb24gdG9vbC4KKiBbRFZDUyBSaXBwZXJd
KGh0dHBzOi8vZ2l0aHViLmNvbS9rb3N0L2R2Y3MtcmlwcGVyKSAtIFJpcCB3
ZWIgYWNjZXNzaWJsZSAoZGlzdHJpYnV0ZWQpIHZlcnNpb24gY29udHJvbCBz
eXN0ZW1zOiBTVk4vR0lUL0hHL0JaUi4KKiBbRXllV2l0bmVzc10oaHR0cHM6
Ly9naXRodWIuY29tL0NocmlzVHJ1bmNlci9FeWVXaXRuZXNzKSAtIFRvb2wg
dG8gdGFrZSBzY3JlZW5zaG90cyBvZiB3ZWJzaXRlcywgcHJvdmlkZSBzb21l
IHNlcnZlciBoZWFkZXIgaW5mbywgYW5kIGlkZW50aWZ5IGRlZmF1bHQgY3Jl
ZGVudGlhbHMgaWYgcG9zc2libGUuCiogW0ZpZGRsZXJdKGh0dHBzOi8vd3d3
LnRlbGVyaWsuY29tL2ZpZGRsZXIpIC0gRnJlZSBjcm9zcy1wbGF0Zm9ybSB3
ZWIgZGVidWdnaW5nIHByb3h5IHdpdGggdXNlci1mcmllbmRseSBjb21wYW5p
b24gdG9vbHMuCiogW0Z1enpEQl0oaHR0cHM6Ly9naXRodWIuY29tL2Z1enpk
Yi1wcm9qZWN0L2Z1enpkYikgLSBEaWN0aW9uYXJ5IG9mIGF0dGFjayBwYXR0
ZXJucyBhbmQgcHJpbWl0aXZlcyBmb3IgYmxhY2stYm94IGFwcGxpY2F0aW9u
IGZhdWx0IGluamVjdGlvbiBhbmQgcmVzb3VyY2UgZGlzY292ZXJ5LgoqIFtH
aXRUb29sc10oaHR0cHM6Ly9naXRodWIuY29tL2ludGVybmV0d2FjaGUvR2l0
VG9vbHMpIC0gQXV0b21hdGljYWxseSBmaW5kIGFuZCBkb3dubG9hZCBXZWIt
YWNjZXNzaWJsZSBgLmdpdGAgcmVwb3NpdG9yaWVzLgoqIFtLYWRhYnJhXSho
dHRwczovL2dpdGh1Yi5jb20vRDM1bTBuZDE0Mi9LYWRhYnJhKSAtIEF1dG9t
YXRpYyBMRkkgZXhwbG9pdGVyIGFuZCBzY2FubmVyLgoqIFtLYWRpbXVzXSho
dHRwczovL2dpdGh1Yi5jb20vUDBjTDRicy9LYWRpbXVzKSAtIExGSSBzY2Fu
IGFuZCBleHBsb2l0IHRvb2wuCiogW05vU1FMbWFwXShodHRwczovL2dpdGh1
Yi5jb20vY29kaW5nby9Ob1NRTE1hcCkgLSBBdXRvbWF0aWMgTm9TUUwgaW5q
ZWN0aW9uIGFuZCBkYXRhYmFzZSB0YWtlb3ZlciB0b29sLgoqIFtPV0FTUCBa
ZWQgQXR0YWNrIFByb3h5IChaQVApXShodHRwczovL3d3dy5vd2FzcC5vcmcv
aW5kZXgucGhwL09XQVNQX1plZF9BdHRhY2tfUHJveHlfUHJvamVjdCkgLSBG
ZWF0dXJlLXJpY2gsIHNjcmlwdGFibGUgSFRUUCBpbnRlcmNlcHRpbmcgcHJv
eHkgYW5kIGZ1enplciBmb3IgcGVuZXRyYXRpb24gdGVzdGluZyB3ZWIgYXBw
bGljYXRpb25zLgoqIFtPZmZlbnNpdmUgV2ViIFRlc3RpbmcgRnJhbWV3b3Jr
IChPV1RGKV0oaHR0cHM6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9PV0FT
UF9PV1RGKSAtIFB5dGhvbi1iYXNlZCBmcmFtZXdvcmsgZm9yIHBlbnRlc3Rp
bmcgV2ViIGFwcGxpY2F0aW9ucyBiYXNlZCBvbiB0aGUgT1dBU1AgVGVzdGlu
ZyBHdWlkZS4KKiBbUmFjY29vbl0oaHR0cHM6Ly9naXRodWIuY29tL2V2eWF0
YXJtZWdlZC9SYWNjb29uKSAtIEhpZ2ggcGVyZm9ybWFuY2Ugb2ZmZW5zaXZl
IHNlY3VyaXR5IHRvb2wgZm9yIHJlY29ubmFpc3NhbmNlIGFuZCB2dWxuZXJh
YmlsaXR5IHNjYW5uaW5nLgoqIFtTUUxtYXBdKGh0dHA6Ly9zcWxtYXAub3Jn
LykgLSBBdXRvbWF0aWMgU1FMIGluamVjdGlvbiBhbmQgZGF0YWJhc2UgdGFr
ZW92ZXIgdG9vbC4KKiBbVkhvc3RTY2FuXShodHRwczovL2dpdGh1Yi5jb20v
Y29kaW5nby9WSG9zdFNjYW4pIC0gVmlydHVhbCBob3N0IHNjYW5uZXIgdGhh
dCBwZXJmb3JtcyByZXZlcnNlIGxvb2t1cHMsIGNhbiBiZSB1c2VkIHdpdGgg
cGl2b3QgdG9vbHMsIGRldGVjdCBjYXRjaC1hbGwgc2NlbmFyaW9zLCBhbGlh
c2VzIGFuZCBkeW5hbWljIGRlZmF1bHQgcGFnZXMuCiogW1dQU3Bsb2l0XSho
dHRwczovL2dpdGh1Yi5jb20vZXNwcmV0by93cHNwbG9pdCkgLSBFeHBsb2l0
IFdvcmRQcmVzcy1wb3dlcmVkIHdlYnNpdGVzIHdpdGggTWV0YXNwbG9pdC4K
KiBbV2FwcGFseXplcl0oaHR0cHM6Ly93d3cud2FwcGFseXplci5jb20vKSAt
IFdhcHBhbHl6ZXIgdW5jb3ZlcnMgdGhlIHRlY2hub2xvZ2llcyB1c2VkIG9u
IHdlYnNpdGVzLgoqIFtXaGF0V2FmXShodHRwczovL2dpdGh1Yi5jb20vRWt1
bHRlay9XaGF0V2FmKSAtIERldGVjdCBhbmQgYnlwYXNzIHdlYiBhcHBsaWNh
dGlvbiBmaXJld2FsbHMgYW5kIHByb3RlY3Rpb24gc3lzdGVtcy4KKiBbV2hh
dFdlYl0oaHR0cHM6Ly9naXRodWIuY29tL3VyYmFuYWR2ZW50dXJlci9XaGF0
V2ViKSAtIFdlYnNpdGUgZmluZ2VycHJpbnRlci4KKiBbV29yZHByZXNzIEV4
cGxvaXQgRnJhbWV3b3JrXShodHRwczovL2dpdGh1Yi5jb20vcmFzdGF0aW5n
L3dvcmRwcmVzcy1leHBsb2l0LWZyYW1ld29yaykgLSBSdWJ5IGZyYW1ld29y
ayBmb3IgZGV2ZWxvcGluZyBhbmQgdXNpbmcgbW9kdWxlcyB3aGljaCBhaWQg
aW4gdGhlIHBlbmV0cmF0aW9uIHRlc3Rpbmcgb2YgV29yZFByZXNzIHBvd2Vy
ZWQgd2Vic2l0ZXMgYW5kIHN5c3RlbXMuCiogW2F1dG9jaHJvbWVdKGh0dHBz
Oi8vd3d3Lm5jY2dyb3VwLnRydXN0L3VzL2Fib3V0LXVzL25ld3Nyb29tLWFu
ZC1ldmVudHMvYmxvZy8yMDE3L21hcmNoL2F1dG9jaHJvbWUvKSAtIEVhc3kg
dG8gaW5zdGFsbCBhIHRlc3QgYnJvd3NlciB3aXRoIGFsbCB0aGUgYXBwcm9w
cmlhdGUgc2V0dGluZyBuZWVkZWQgZm9yIHdlYiBhcHBsaWNhdGlvbiB0ZXN0
aW5nIHdpdGggbmF0aXZlIEJ1cnAgc3VwcG9ydCwgZnJvbSBOQ0NHcm91cC4K
KiBbYmFkdG91Y2hdKGh0dHBzOi8vZ2l0aHViLmNvbS9rcGN5cmQvYmFkdG91
Y2gpIC0gU2NyaXB0YWJsZSBuZXR3b3JrIGF1dGhlbnRpY2F0aW9uIGNyYWNr
ZXIuCiogW2ZpbWFwXShodHRwczovL2dpdGh1Yi5jb20va3Vyb2JlYXRzL2Zp
bWFwKSAtIEZpbmQsIHByZXBhcmUsIGF1ZGl0LCBleHBsb2l0IGFuZCBldmVu
IEdvb2dsZSBhdXRvbWF0aWNhbGx5IGZvciBMRkkvUkZJIGJ1Z3MuCiogW2xp
ZmZ5XShodHRwczovL2dpdGh1Yi5jb20vaHZxemFvL2xpZmZ5KSAtIExGSSBl
eHBsb2l0YXRpb24gdG9vbC4KKiBbcmVjdXJzZWJ1c3Rlcl0oaHR0cHM6Ly9n
aXRodWIuY29tL2Mtc3RvL3JlY3Vyc2VidXN0ZXIpIC0gQ29udGVudCBkaXNj
b3ZlcnkgdG9vbCB0byBwZXJmb3JtIGRpcmVjdG9yeSBhbmQgZmlsZSBicnV0
ZWZvcmNpbmcuCiogW3NzbHN0cmlwMl0oaHR0cHM6Ly9naXRodWIuY29tL0xl
b25hcmRvTnZlL3NzbHN0cmlwMikgLSBTU0xTdHJpcCB2ZXJzaW9uIHRvIGRl
ZmVhdCBIU1RTLgoqIFtzc2xzdHJpcF0oaHR0cHM6Ly93d3cudGhvdWdodGNy
aW1lLm9yZy9zb2Z0d2FyZS9zc2xzdHJpcC8pIC0gRGVtb25zdHJhdGlvbiBv
ZiB0aGUgSFRUUFMgc3RyaXBwaW5nIGF0dGFja3MuCiogW3RwbG1hcF0oaHR0
cHM6Ly9naXRodWIuY29tL2VwaW5uYS90cGxtYXApIC0gQXV0b21hdGljIHNl
cnZlci1zaWRlIHRlbXBsYXRlIGluamVjdGlvbiBhbmQgV2ViIHNlcnZlciB0
YWtlb3ZlciB0b29sLgoqIFt3YWZ3MDBmXShodHRwczovL2dpdGh1Yi5jb20v
RW5hYmxlU2VjdXJpdHkvd2FmdzAwZikgLSBJZGVudGlmaWVzIGFuZCBmaW5n
ZXJwcmludHMgV2ViIEFwcGxpY2F0aW9uIEZpcmV3YWxsIChXQUYpIHByb2R1
Y3RzLgoqIFt3ZWJzY3JlZW5zaG90XShodHRwczovL2dpdGh1Yi5jb20vbWFh
YWF6L3dlYnNjcmVlbnNob3QpIC0gU2ltcGxlIHNjcmlwdCB0byB0YWtlIHNj
cmVlbnNob3RzIG9mIHdlYnNpdGVzIGZyb20gYSBsaXN0IG9mIHNpdGVzLgoq
IFt3ZWV2ZWx5M10oaHR0cHM6Ly9naXRodWIuY29tL2VwaW5uYS93ZWV2ZWx5
MykgLSBXZWFwb25pemVkIFBIUC1iYXNlZCB3ZWIgc2hlbGwuCgojIyBBbmRy
b2lkIFV0aWxpdGllcwoKKiBbQW5kcm9pZCBPcGVuIFB3biBQcm9qZWN0IChB
T1BQKV0oaHR0cHM6Ly93d3cucHduaWVleHByZXNzLmNvbS9hb3BwKSAtIFZh
cmlhbnQgb2YgdGhlIEFuZHJvaWQgT3BlbiBTb3VyY2UgUHJvamVjdCAoQU9T
UCksIGNhbGxlZCBQd25peCwgaXMgYnVpbHQgZnJvbSB0aGUgZ3JvdW5kIHVw
IGZvciBuZXR3b3JrIGhhY2tpbmcgYW5kIHBlbnRlc3RpbmcuCiogW2NTcGxv
aXRdKGh0dHBzOi8vd3d3LmNzcGxvaXQub3JnLykgLSBBZHZhbmNlZCBJVCBz
ZWN1cml0eSBwcm9mZXNzaW9uYWwgdG9vbGtpdCBvbiBBbmRyb2lkIGZlYXR1
cmluZyBhbiBpbnRlZ3JhdGVkIE1ldGFzcGxvaXQgZGFlbW9uIGFuZCBNSVRN
IGNhcGFiaWxpdGllcy4KKiBbRmluZ10oaHR0cHM6Ly93d3cuZmluZy5jb20v
cHJvZHVjdHMvZmluZy1hcHAvKSAtIE5ldHdvcmsgc2Nhbm5pbmcgYW5kIGhv
c3QgZW51bWVyYXRpb24gYXBwIHRoYXQgcGVyZm9ybXMgTmV0QklPUywgVVBu
UCwgQm9uam91ciwgU05NUCwgYW5kIHZhcmlvdXMgb3RoZXIgYWR2YW5jZWQg
ZGV2aWNlIGZpbmdlcnByaW50aW5nIHRlY2huaXF1ZXMuCgojIyBXaW5kb3dz
IFV0aWxpdGllcwoKKiBbQWN0aXZlIERpcmVjdG9yeSBhbmQgUHJpdmlsZWdl
IEVzY2FsYXRpb24gKEFEQVBFKV0oaHR0cHM6Ly9naXRodWIuY29tL2hhdXNl
Yy9BREFQRS1TY3JpcHQpIC0gVW1icmVsbGEgc2NyaXB0IHRoYXQgYXV0b21h
dGVzIG51bWVyb3VzIHVzZWZ1bCBQb3dlclNoZWxsIG1vZHVsZXMgdG8gZGlz
Y292ZXIgc2VjdXJpdHkgbWlzY29uZmlndXJhdGlvbnMgYW5kIGF0dGVtcHQg
cHJpdmlsZWdlIGVzY2FsYXRpb24gYWdhaW5zdCBBY3RpdmUgRGlyZWN0b3J5
LgoqIFtCbG9vZGhvdW5kXShodHRwczovL2dpdGh1Yi5jb20vYWRhcHRpdmV0
aHJlYXQvQmxvb2Rob3VuZC93aWtpKSAtIEdyYXBoaWNhbCBBY3RpdmUgRGly
ZWN0b3J5IHRydXN0IHJlbGF0aW9uc2hpcCBleHBsb3Jlci4KKiBbQ29tbWFu
ZG8gVk1dKGh0dHBzOi8vZ2l0aHViLmNvbS9maXJlZXllL2NvbW1hbmRvLXZt
KSAtIEF1dG9tYXRlZCBpbnN0YWxsYXRpb24gb2Ygb3ZlciAxNDAgV2luZG93
cyBzb2Z0d2FyZSBwYWNrYWdlcyBmb3IgcGVuZXRyYXRpb24gdGVzdGluZyBh
bmQgcmVkIHRlYW1pbmcuCiogW0NvdmVuYW50XShodHRwczovL2dpdGh1Yi5j
b20vY29iYnIvQ292ZW5hbnQpIC0gQVNQLk5FVCBDb3JlIGFwcGxpY2F0aW9u
IHRoYXQgc2VydmVzIGFzIGEgY29sbGFib3JhdGl2ZSBjb21tYW5kIGFuZCBj
b250cm9sIHBsYXRmb3JtIGZvciByZWQgdGVhbWVycy4KKiBbRGVhdGhTdGFy
XShodHRwczovL2dpdGh1Yi5jb20vYnl0M2JsMzNkM3IvRGVhdGhTdGFyKSAt
IFB5dGhvbiBzY3JpcHQgdGhhdCB1c2VzIEVtcGlyZSdzIFJFU1RmdWwgQVBJ
IHRvIGF1dG9tYXRlIGdhaW5pbmcgRG9tYWluIEFkbWluIHJpZ2h0cyBpbiBB
Y3RpdmUgRGlyZWN0b3J5IGVudmlyb25tZW50cy4KKiBbRW1waXJlXShodHRw
czovL3d3dy5wb3dlcnNoZWxsZW1waXJlLmNvbS8pIC0gUHVyZSBQb3dlclNo
ZWxsIHBvc3QtZXhwbG9pdGF0aW9uIGFnZW50LgoqIFtGaWJyYXR1c10oaHR0
cHM6Ly9naXRodWIuY29tL3JhYmJpdHN0YWNrL2ZpYnJhdHVzKSAtIFRvb2wg
Zm9yIGV4cGxvcmF0aW9uIGFuZCB0cmFjaW5nIG9mIHRoZSBXaW5kb3dzIGtl
cm5lbC4KKiBbTGFaYWduZV0oaHR0cHM6Ly9naXRodWIuY29tL0FsZXNzYW5k
cm9aL0xhWmFnbmUpIC0gQ3JlZGVudGlhbHMgcmVjb3ZlcnkgcHJvamVjdC4K
KiBbTWFnaWMgVW5pY29ybl0oaHR0cHM6Ly9naXRodWIuY29tL3RydXN0ZWRz
ZWMvdW5pY29ybikgLSBTaGVsbGNvZGUgZ2VuZXJhdG9yIGZvciBudW1lcm91
cyBhdHRhY2sgdmVjdG9ycywgaW5jbHVkaW5nIE1pY3Jvc29mdCBPZmZpY2Ug
bWFjcm9zLCBQb3dlclNoZWxsLCBIVE1MIGFwcGxpY2F0aW9ucyAoSFRBKSwg
b3IgYGNlcnR1dGlsYCAodXNpbmcgZmFrZSBjZXJ0aWZpY2F0ZXMpLgoqIFtN
YWlsU25pcGVyXShodHRwczovL2dpdGh1Yi5jb20vZGFmdGhhY2svTWFpbFNu
aXBlcikgLSBNb2R1bGFyIHRvb2wgZm9yIHNlYXJjaGluZyB0aHJvdWdoIGVt
YWlsIGluIGEgTWljcm9zb2Z0IEV4Y2hhbmdlIGVudmlyb25tZW50LCBnYXRo
ZXJpbmcgdGhlIEdsb2JhbCBBZGRyZXNzIExpc3QgZnJvbSBPdXRsb29rIFdl
YiBBY2Nlc3MgKE9XQSkgYW5kIEV4Y2hhbmdlIFdlYiBTZXJ2aWNlcyAoRVdT
KSwgYW5kIG1vcmUuCiogW1Bvd2VyU3Bsb2l0XShodHRwczovL2dpdGh1Yi5j
b20vUG93ZXJTaGVsbE1hZmlhL1Bvd2VyU3Bsb2l0KSAtIFBvd2VyU2hlbGwg
UG9zdC1FeHBsb2l0YXRpb24gRnJhbWV3b3JrLgoqIFtSSURfRU5VTV0oaHR0
cHM6Ly9naXRodWIuY29tL3RydXN0ZWRzZWMvcmlkZW51bSkgLSBQeXRob24g
c2NyaXB0IHRoYXQgY2FuIGVudW1lcmF0ZSBhbGwgdXNlcnMgZnJvbSBhIFdp
bmRvd3MgRG9tYWluIENvbnRyb2xsZXIgYW5kIGNyYWNrIHRob3NlIHVzZXIn
cyBwYXNzd29yZHMgdXNpbmcgYnJ1dGUtZm9yY2UuCiogW1Jlc3BvbmRlcl0o
aHR0cHM6Ly9naXRodWIuY29tL1NwaWRlckxhYnMvUmVzcG9uZGVyKSAtIExp
bmstTG9jYWwgTXVsdGljYXN0IE5hbWUgUmVzb2x1dGlvbiAoTExNTlIpLCBO
QlQtTlMsIGFuZCBtRE5TIHBvaXNvbmVyLgoqIFtSdWxlcl0oaHR0cHM6Ly9n
aXRodWIuY29tL3NlbnNlcG9zdC9ydWxlcikgLSBBYnVzZXMgY2xpZW50LXNp
ZGUgT3V0bG9vayBmZWF0dXJlcyB0byBnYWluIGEgcmVtb3RlIHNoZWxsIG9u
IGEgTWljcm9zb2Z0IEV4Y2hhbmdlIHNlcnZlci4KKiBbU0NPTURlY3J5cHRd
KGh0dHBzOi8vZ2l0aHViLmNvbS9uY2Nncm91cC9TQ09NRGVjcnlwdCkgLSBS
ZXRyaWV2ZSBhbmQgZGVjcnlwdCBSdW5BcyBjcmVkZW50aWFscyBzdG9yZWQg
d2l0aGluIE1pY3Jvc29mdCBTeXN0ZW0gQ2VudGVyIE9wZXJhdGlvbnMgTWFu
YWdlciAoU0NPTSkgZGF0YWJhc2VzLgoqIFtTeXNpbnRlcm5hbHMgU3VpdGVd
KGh0dHBzOi8vdGVjaG5ldC5taWNyb3NvZnQuY29tL2VuLXVzL3N5c2ludGVy
bmFscy9iYjg0MjA2MikgLSBUaGUgU3lzaW50ZXJuYWxzIFRyb3VibGVzaG9v
dGluZyBVdGlsaXRpZXMuCiogW1dpbmRvd3MgQ3JlZGVudGlhbHMgRWRpdG9y
XShodHRwczovL3d3dy5hbXBsaWFzZWN1cml0eS5jb20vcmVzZWFyY2gvd2lu
ZG93cy1jcmVkZW50aWFscy1lZGl0b3IvKSAtIEluc3BlY3QgbG9nb24gc2Vz
c2lvbnMgYW5kIGFkZCwgY2hhbmdlLCBsaXN0LCBhbmQgZGVsZXRlIGFzc29j
aWF0ZWQgY3JlZGVudGlhbHMsIGluY2x1ZGluZyBLZXJiZXJvcyB0aWNrZXRz
LgoqIFtXaW5kb3dzIEV4cGxvaXQgU3VnZ2VzdGVyXShodHRwczovL2dpdGh1
Yi5jb20vR0RTU2VjdXJpdHkvV2luZG93cy1FeHBsb2l0LVN1Z2dlc3Rlcikg
LSBEZXRlY3RzIHBvdGVudGlhbCBtaXNzaW5nIHBhdGNoZXMgb24gdGhlIHRh
cmdldC4KKiBbbWltaWthdHpdKGh0dHA6Ly9ibG9nLmdlbnRpbGtpd2kuY29t
L21pbWlrYXR6KSAtIENyZWRlbnRpYWxzIGV4dHJhY3Rpb24gdG9vbCBmb3Ig
V2luZG93cyBvcGVyYXRpbmcgc3lzdGVtLgoqIFtyZWRzbmFyZl0oaHR0cHM6
Ly9naXRodWIuY29tL25jY2dyb3VwL3JlZHNuYXJmKSAtIFBvc3QtZXhwbG9p
dGF0aW9uIHRvb2wgZm9yIHJldHJpZXZpbmcgcGFzc3dvcmQgaGFzaGVzIGFu
ZCBjcmVkZW50aWFscyBmcm9tIFdpbmRvd3Mgd29ya3N0YXRpb25zLCBzZXJ2
ZXJzLCBhbmQgZG9tYWluIGNvbnRyb2xsZXJzLgoqIFt3ZVBXTmlzZV0oaHR0
cHM6Ly9sYWJzLm13cmluZm9zZWN1cml0eS5jb20vdG9vbHMvd2Vwd25pc2Uv
KSAtIEdlbmVyYXRlcyBhcmNoaXRlY3R1cmUgaW5kZXBlbmRlbnQgVkJBIGNv
ZGUgdG8gYmUgdXNlZCBpbiBPZmZpY2UgZG9jdW1lbnRzIG9yIHRlbXBsYXRl
cyBhbmQgYXV0b21hdGVzIGJ5cGFzc2luZyBhcHBsaWNhdGlvbiBjb250cm9s
IGFuZCBleHBsb2l0IG1pdGlnYXRpb24gc29mdHdhcmUuCiogW1dpblB3bl0o
aHR0cHM6Ly9naXRodWIuY29tL1NlY3VyZVRoaXNTaGl0L1dpblB3bikgLSBJ
bnRlcm5hbCBwZW5ldHJhdGlvbiB0ZXN0IHNjcmlwdCB0byBwZXJmb3JtIGxv
Y2FsIGFuZCBkb21haW4gcmVjb25uYWlzc2FuY2UsIHByaXZpbGVnZSBlc2Nh
bGF0aW9uIGFuZCBleHBsb2l0YXRpb24uCgojIyBtYWNPUyBVdGlsaXRpZXMK
CiogW0JlbGxhXShodHRwczovL2dpdGh1Yi5jb20va2Rhb3VkaWVoL0JlbGxh
KSAtIFB1cmUgUHl0aG9uIHBvc3QtZXhwbG9pdGF0aW9uIGRhdGEgbWluaW5n
IGFuZCByZW1vdGUgYWRtaW5pc3RyYXRpb24gdG9vbCBmb3IgbWFjT1MuCiog
W0V2aWxPU1hdKGh0dHBzOi8vZ2l0aHViLmNvbS9NYXJ0ZW40bjYvRXZpbE9T
WCkgLSBNb2R1bGFyIFJBVCB0aGF0IHVzZXMgbnVtZXJvdXMgZXZhc2lvbiBh
bmQgZXhmaWx0cmF0aW9uIHRlY2huaXF1ZXMgb3V0LW9mLXRoZS1ib3guCgoj
IyBMaWNlbnNlCgpbIVtDQy1CWV0oaHR0cHM6Ly9taXJyb3JzLmNyZWF0aXZl
Y29tbW9ucy5vcmcvcHJlc3NraXQvYnV0dG9ucy84OHgzMS9zdmcvYnkuc3Zn
KV0oaHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQu
MC8pCgpUaGlzIHdvcmsgaXMgbGljZW5zZWQgdW5kZXIgYSBbQ3JlYXRpdmUg
Q29tbW9ucyBBdHRyaWJ1dGlvbiA0LjAgSW50ZXJuYXRpb25hbCBMaWNlbnNl
XShodHRwczovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4w
LykuCg==
",,10274,"LS0tCmxhbmd1YWdlOiBydWJ5CnN1ZG86IHJlcXVpcmVkCnJ2bToKICAtIDIu
NC4xCgppbnN0YWxsOgogIC0gc3VkbyBhcHQgdXBkYXRlIC0teWVzCiAgLSBz
dWRvIGFwdCBpbnN0YWxsIGNhLWNlcnRpZmljYXRlcwogIC0gZ2VtIGluc3Rh
bGwgYXdlc29tZV9ib3QKCnNjcmlwdDoKICAtIGF3ZXNvbWVfYm90IFJFQURN
RS5tZCAtLWFsbG93LXJlZGlyZWN0IC0td2hpdGUtbGlzdCAid3d3LjBkYXku
dG9kYXksbXZmamZ1Z2R3Z2M1dXdoby5vbmlvbixjcmVhdGl2ZWNvbW1vbnMu
b3JnLG5ldHNwYXJrZXIuY29tLHd3dy5zaG9kYW4uaW8sd3d3LnBhcnJvdHNl
Yy5vcmcsbm9zdGFyY2guY29tLHd3dy5taHByb2Zlc3Npb25hbC5jb20sZ2hv
c3Rwcm9qZWN0LmZyLHd3dy56b29tZXllLm9yZyIK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'dotenv',11205780,b'Loads environment variables from .env for nodejs projects.',b'JavaScript',7,10271,,97,False,b'https://api.github.com/repos/motdotla/dotenv/forks',"IyBkb3RlbnYKCjxpbWcgc3JjPSJodHRwczovL3Jhdy5naXRodWJ1c2VyY29u
dGVudC5jb20vbW90ZG90bGEvZG90ZW52L21hc3Rlci9kb3RlbnYucG5nIiBh
bHQ9ImRvdGVudiIgYWxpZ249InJpZ2h0IiAvPgoKRG90ZW52IGlzIGEgemVy
by1kZXBlbmRlbmN5IG1vZHVsZSB0aGF0IGxvYWRzIGVudmlyb25tZW50IHZh
cmlhYmxlcyBmcm9tIGEgYC5lbnZgIGZpbGUgaW50byBbYHByb2Nlc3MuZW52
YF0oaHR0cHM6Ly9ub2RlanMub3JnL2RvY3MvbGF0ZXN0L2FwaS9wcm9jZXNz
Lmh0bWwjcHJvY2Vzc19wcm9jZXNzX2VudikuIFN0b3JpbmcgY29uZmlndXJh
dGlvbiBpbiB0aGUgZW52aXJvbm1lbnQgc2VwYXJhdGUgZnJvbSBjb2RlIGlz
IGJhc2VkIG9uIFtUaGUgVHdlbHZlLUZhY3RvciBBcHBdKGh0dHA6Ly8xMmZh
Y3Rvci5uZXQvY29uZmlnKSBtZXRob2RvbG9neS4KClshW0J1aWxkU3RhdHVz
XShodHRwczovL2ltZy5zaGllbGRzLmlvL3RyYXZpcy9tb3Rkb3RsYS9kb3Rl
bnYvbWFzdGVyLnN2Zz9zdHlsZT1mbGF0LXNxdWFyZSldKGh0dHBzOi8vdHJh
dmlzLWNpLm9yZy9tb3Rkb3RsYS9kb3RlbnYpClshW0J1aWxkIHN0YXR1c10o
aHR0cHM6Ly9jaS5hcHB2ZXlvci5jb20vYXBpL3Byb2plY3RzL3N0YXR1cy9n
aXRodWIvbW90ZG90bGEvZG90ZW52P3N2Zz10cnVlKV0oaHR0cHM6Ly9jaS5h
cHB2ZXlvci5jb20vcHJvamVjdC9tb3Rkb3RsYS9kb3RlbnYvYnJhbmNoL21h
c3RlcikKWyFbTlBNIHZlcnNpb25dKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8v
bnBtL3YvZG90ZW52LnN2Zz9zdHlsZT1mbGF0LXNxdWFyZSldKGh0dHBzOi8v
d3d3Lm5wbWpzLmNvbS9wYWNrYWdlL2RvdGVudikKWyFbanMtc3RhbmRhcmQt
c3R5bGVdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvY29kZSUyMHN0
eWxlLXN0YW5kYXJkLWJyaWdodGdyZWVuLnN2Zz9zdHlsZT1mbGF0LXNxdWFy
ZSldKGh0dHBzOi8vZ2l0aHViLmNvbS9mZXJvc3Mvc3RhbmRhcmQpClshW0Nv
dmVyYWdlIFN0YXR1c10oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9jb3ZlcmFs
bHMvbW90ZG90bGEvZG90ZW52L21hc3Rlci5zdmc/c3R5bGU9ZmxhdC1zcXVh
cmUpXShodHRwczovL2NvdmVyYWxscy5pby9naXRodWIvbW90ZG90bGEvZG90
ZW52P2JyYW5jaD1jb3ZlcmFsbC1pbnRlcmdyYXRpb24pClshW0xJQ0VOU0Vd
KGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vZ2l0aHViL2xpY2Vuc2UvbW90ZG90
bGEvZG90ZW52LnN2ZyldKExJQ0VOU0UpClshW0NvbnZlbnRpb25hbCBDb21t
aXRzXShodHRwczovL2ltZy5zaGllbGRzLmlvL2JhZGdlL0NvbnZlbnRpb25h
bCUyMENvbW1pdHMtMS4wLjAteWVsbG93LnN2ZyldKGh0dHBzOi8vY29udmVu
dGlvbmFsY29tbWl0cy5vcmcpCgojIyBJbnN0YWxsCgpgYGBiYXNoCiMgd2l0
aCBucG0KbnBtIGluc3RhbGwgZG90ZW52CgojIG9yIHdpdGggWWFybgp5YXJu
IGFkZCBkb3RlbnYKYGBgCgojIyBVc2FnZQoKQXMgZWFybHkgYXMgcG9zc2li
bGUgaW4geW91ciBhcHBsaWNhdGlvbiwgcmVxdWlyZSBhbmQgY29uZmlndXJl
IGRvdGVudi4KCmBgYGphdmFzY3JpcHQKcmVxdWlyZSgnZG90ZW52JykuY29u
ZmlnKCkKYGBgCgpDcmVhdGUgYSBgLmVudmAgZmlsZSBpbiB0aGUgcm9vdCBk
aXJlY3Rvcnkgb2YgeW91ciBwcm9qZWN0LiBBZGQKZW52aXJvbm1lbnQtc3Bl
Y2lmaWMgdmFyaWFibGVzIG9uIG5ldyBsaW5lcyBpbiB0aGUgZm9ybSBvZiBg
TkFNRT1WQUxVRWAuCkZvciBleGFtcGxlOgoKYGBgZG9zaW5pCkRCX0hPU1Q9
bG9jYWxob3N0CkRCX1VTRVI9cm9vdApEQl9QQVNTPXMxbXBsMwpgYGAKCmBw
cm9jZXNzLmVudmAgbm93IGhhcyB0aGUga2V5cyBhbmQgdmFsdWVzIHlvdSBk
ZWZpbmVkIGluIHlvdXIgYC5lbnZgIGZpbGUuCgpgYGBqYXZhc2NyaXB0CmNv
bnN0IGRiID0gcmVxdWlyZSgnZGInKQpkYi5jb25uZWN0KHsKICBob3N0OiBw
cm9jZXNzLmVudi5EQl9IT1NULAogIHVzZXJuYW1lOiBwcm9jZXNzLmVudi5E
Ql9VU0VSLAogIHBhc3N3b3JkOiBwcm9jZXNzLmVudi5EQl9QQVNTCn0pCmBg
YAoKIyMjIFByZWxvYWQKCllvdSBjYW4gdXNlIHRoZSBgLS1yZXF1aXJlYCAo
YC1yYCkgW2NvbW1hbmQgbGluZSBvcHRpb25dKGh0dHBzOi8vbm9kZWpzLm9y
Zy9hcGkvY2xpLmh0bWwjY2xpX3JfcmVxdWlyZV9tb2R1bGUpIHRvIHByZWxv
YWQgZG90ZW52LiBCeSBkb2luZyB0aGlzLCB5b3UgZG8gbm90IG5lZWQgdG8g
cmVxdWlyZSBhbmQgbG9hZCBkb3RlbnYgaW4geW91ciBhcHBsaWNhdGlvbiBj
b2RlLiBUaGlzIGlzIHRoZSBwcmVmZXJyZWQgYXBwcm9hY2ggd2hlbiB1c2lu
ZyBgaW1wb3J0YCBpbnN0ZWFkIG9mIGByZXF1aXJlYC4KCmBgYGJhc2gKJCBu
b2RlIC1yIGRvdGVudi9jb25maWcgeW91cl9zY3JpcHQuanMKYGBgCgpUaGUg
Y29uZmlndXJhdGlvbiBvcHRpb25zIGJlbG93IGFyZSBzdXBwb3J0ZWQgYXMg
Y29tbWFuZCBsaW5lIGFyZ3VtZW50cyBpbiB0aGUgZm9ybWF0IGBkb3RlbnZf
Y29uZmlnXzxvcHRpb24+PXZhbHVlYAoKYGBgYmFzaAokIG5vZGUgLXIgZG90
ZW52L2NvbmZpZyB5b3VyX3NjcmlwdC5qcyBkb3RlbnZfY29uZmlnX3BhdGg9
L2N1c3RvbS9wYXRoL3RvL3lvdXIvZW52L3ZhcnMKYGBgCgpBZGRpdGlvbmFs
bHksIHlvdSBjYW4gdXNlIGVudmlyb25tZW50IHZhcmlhYmxlcyB0byBzZXQg
Y29uZmlndXJhdGlvbiBvcHRpb25zLiBDb21tYW5kIGxpbmUgYXJndW1lbnRz
IHdpbGwgcHJlY2VkZSB0aGVzZS4KCmBgYGJhc2gKJCBET1RFTlZfQ09ORklH
XzxPUFRJT04+PXZhbHVlIG5vZGUgLXIgZG90ZW52L2NvbmZpZyB5b3VyX3Nj
cmlwdC5qcwpgYGAKCmBgYGJhc2gKJCBET1RFTlZfQ09ORklHX0VOQ09ESU5H
PWxhdGluMSBub2RlIC1yIGRvdGVudi9jb25maWcgeW91cl9zY3JpcHQuanMg
ZG90ZW52X2NvbmZpZ19wYXRoPS9jdXN0b20vcGF0aC90by8uZW52CmBgYAoK
IyMgQ29uZmlnCgpgY29uZmlnYCB3aWxsIHJlYWQgeW91ciBgLmVudmAgZmls
ZSwgcGFyc2UgdGhlIGNvbnRlbnRzLCBhc3NpZ24gaXQgdG8KW2Bwcm9jZXNz
LmVudmBdKGh0dHBzOi8vbm9kZWpzLm9yZy9kb2NzL2xhdGVzdC9hcGkvcHJv
Y2Vzcy5odG1sI3Byb2Nlc3NfcHJvY2Vzc19lbnYpLAphbmQgcmV0dXJuIGFu
IE9iamVjdCB3aXRoIGEgYHBhcnNlZGAga2V5IGNvbnRhaW5pbmcgdGhlIGxv
YWRlZCBjb250ZW50IG9yIGFuIGBlcnJvcmAga2V5IGlmIGl0IGZhaWxlZC4K
CmBgYGpzCmNvbnN0IHJlc3VsdCA9IGRvdGVudi5jb25maWcoKQoKaWYgKHJl
c3VsdC5lcnJvcikgewogIHRocm93IHJlc3VsdC5lcnJvcgp9Cgpjb25zb2xl
LmxvZyhyZXN1bHQucGFyc2VkKQpgYGAKCllvdSBjYW4gYWRkaXRpb25hbGx5
LCBwYXNzIG9wdGlvbnMgdG8gYGNvbmZpZ2AuCgojIyMgT3B0aW9ucwoKIyMj
IyBQYXRoCgpEZWZhdWx0OiBgcGF0aC5yZXNvbHZlKHByb2Nlc3MuY3dkKCks
ICcuZW52JylgCgpZb3UgbWF5IHNwZWNpZnkgYSBjdXN0b20gcGF0aCBpZiB5
b3VyIGZpbGUgY29udGFpbmluZyBlbnZpcm9ubWVudCB2YXJpYWJsZXMgaXMg
bG9jYXRlZCBlbHNld2hlcmUuCgpgYGBqcwpyZXF1aXJlKCdkb3RlbnYnKS5j
b25maWcoeyBwYXRoOiAnL2Z1bGwvY3VzdG9tL3BhdGgvdG8veW91ci9lbnYv
dmFycycgfSkKYGBgCgojIyMjIEVuY29kaW5nCgpEZWZhdWx0OiBgdXRmOGAK
CllvdSBtYXkgc3BlY2lmeSB0aGUgZW5jb2Rpbmcgb2YgeW91ciBmaWxlIGNv
bnRhaW5pbmcgZW52aXJvbm1lbnQgdmFyaWFibGVzLgoKYGBganMKcmVxdWly
ZSgnZG90ZW52JykuY29uZmlnKHsgZW5jb2Rpbmc6ICdsYXRpbjEnIH0pCmBg
YAoKIyMjIyBEZWJ1ZwoKRGVmYXVsdDogYGZhbHNlYAoKWW91IG1heSB0dXJu
IG9uIGxvZ2dpbmcgdG8gaGVscCBkZWJ1ZyB3aHkgY2VydGFpbiBrZXlzIG9y
IHZhbHVlcyBhcmUgbm90IGJlaW5nIHNldCBhcyB5b3UgZXhwZWN0LgoKYGBg
anMKcmVxdWlyZSgnZG90ZW52JykuY29uZmlnKHsgZGVidWc6IHByb2Nlc3Mu
ZW52LkRFQlVHIH0pCmBgYAoKIyMgUGFyc2UKClRoZSBlbmdpbmUgd2hpY2gg
cGFyc2VzIHRoZSBjb250ZW50cyBvZiB5b3VyIGZpbGUgY29udGFpbmluZyBl
bnZpcm9ubWVudAp2YXJpYWJsZXMgaXMgYXZhaWxhYmxlIHRvIHVzZS4gSXQg
YWNjZXB0cyBhIFN0cmluZyBvciBCdWZmZXIgYW5kIHdpbGwgcmV0dXJuCmFu
IE9iamVjdCB3aXRoIHRoZSBwYXJzZWQga2V5cyBhbmQgdmFsdWVzLgoKYGBg
anMKY29uc3QgZG90ZW52ID0gcmVxdWlyZSgnZG90ZW52JykKY29uc3QgYnVm
ID0gQnVmZmVyLmZyb20oJ0JBU0lDPWJhc2ljJykKY29uc3QgY29uZmlnID0g
ZG90ZW52LnBhcnNlKGJ1ZikgLy8gd2lsbCByZXR1cm4gYW4gb2JqZWN0CmNv
bnNvbGUubG9nKHR5cGVvZiBjb25maWcsIGNvbmZpZykgLy8gb2JqZWN0IHsg
QkFTSUMgOiAnYmFzaWMnIH0KYGBgCgojIyMgT3B0aW9ucwoKIyMjIyBEZWJ1
ZwoKRGVmYXVsdDogYGZhbHNlYAoKWW91IG1heSB0dXJuIG9uIGxvZ2dpbmcg
dG8gaGVscCBkZWJ1ZyB3aHkgY2VydGFpbiBrZXlzIG9yIHZhbHVlcyBhcmUg
bm90IGJlaW5nIHNldCBhcyB5b3UgZXhwZWN0LgoKYGBganMKY29uc3QgZG90
ZW52ID0gcmVxdWlyZSgnZG90ZW52JykKY29uc3QgYnVmID0gQnVmZmVyLmZy
b20oJ2hlbGxvIHdvcmxkJykKY29uc3Qgb3B0ID0geyBkZWJ1ZzogdHJ1ZSB9
CmNvbnN0IGNvbmZpZyA9IGRvdGVudi5wYXJzZShidWYsIG9wdCkKLy8gZXhw
ZWN0IGEgZGVidWcgbWVzc2FnZSBiZWNhdXNlIHRoZSBidWZmZXIgaXMgbm90
IGluIEtFWT1WQUwgZm9ybQpgYGAKCiMjIyBSdWxlcwoKVGhlIHBhcnNpbmcg
ZW5naW5lIGN1cnJlbnRseSBzdXBwb3J0cyB0aGUgZm9sbG93aW5nIHJ1bGVz
OgoKLSBgQkFTSUM9YmFzaWNgIGJlY29tZXMgYHtCQVNJQzogJ2Jhc2ljJ31g
Ci0gZW1wdHkgbGluZXMgYXJlIHNraXBwZWQKLSBsaW5lcyBiZWdpbm5pbmcg
d2l0aCBgI2AgYXJlIHRyZWF0ZWQgYXMgY29tbWVudHMKLSBlbXB0eSB2YWx1
ZXMgYmVjb21lIGVtcHR5IHN0cmluZ3MgKGBFTVBUWT1gIGJlY29tZXMgYHtF
TVBUWTogJyd9YCkKLSBpbm5lciBxdW90ZXMgYXJlIG1haW50YWluZWQgKHRo
aW5rIEpTT04pIChgSlNPTj17ImZvbyI6ICJiYXIifWAgYmVjb21lcyBge0pT
T046IntcImZvb1wiOiBcImJhclwifSJgKQotIHdoaXRlc3BhY2UgaXMgcmVt
b3ZlZCBmcm9tIGJvdGggZW5kcyBvZiB1bnF1b3RlZCB2YWx1ZXMgKHNlZSBt
b3JlIG9uIFtgdHJpbWBdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3Jn
L2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9P
YmplY3RzL1N0cmluZy9UcmltKSkgKGBGT089ICBzb21lIHZhbHVlICBgIGJl
Y29tZXMgYHtGT086ICdzb21lIHZhbHVlJ31gKQotIHNpbmdsZSBhbmQgZG91
YmxlIHF1b3RlZCB2YWx1ZXMgYXJlIGVzY2FwZWQgKGBTSU5HTEVfUVVPVEU9
J3F1b3RlZCdgIGJlY29tZXMgYHtTSU5HTEVfUVVPVEU6ICJxdW90ZWQifWAp
Ci0gc2luZ2xlIGFuZCBkb3VibGUgcXVvdGVkIHZhbHVlcyBtYWludGFpbiB3
aGl0ZXNwYWNlIGZyb20gYm90aCBlbmRzIChgRk9PPSIgIHNvbWUgdmFsdWUg
ICJgIGJlY29tZXMgYHtGT086ICcgIHNvbWUgdmFsdWUgICd9YCkKLSBkb3Vi
bGUgcXVvdGVkIHZhbHVlcyBleHBhbmQgbmV3IGxpbmVzIChgTVVMVElMSU5F
PSJuZXdcbmxpbmUiYCBiZWNvbWVzCgpgYGAKe01VTFRJTElORTogJ25ldwps
aW5lJ30KYGBgCgojIyBGQVEKCiMjIyBTaG91bGQgSSBjb21taXQgbXkgYC5l
bnZgIGZpbGU/CgpOby4gV2UgKipzdHJvbmdseSoqIHJlY29tbWVuZCBhZ2Fp
bnN0IGNvbW1pdHRpbmcgeW91ciBgLmVudmAgZmlsZSB0byB2ZXJzaW9uCmNv
bnRyb2wuIEl0IHNob3VsZCBvbmx5IGluY2x1ZGUgZW52aXJvbm1lbnQtc3Bl
Y2lmaWMgdmFsdWVzIHN1Y2ggYXMgZGF0YWJhc2UKcGFzc3dvcmRzIG9yIEFQ
SSBrZXlzLiBZb3VyIHByb2R1Y3Rpb24gZGF0YWJhc2Ugc2hvdWxkIGhhdmUg
YSBkaWZmZXJlbnQKcGFzc3dvcmQgdGhhbiB5b3VyIGRldmVsb3BtZW50IGRh
dGFiYXNlLgoKIyMjIFNob3VsZCBJIGhhdmUgbXVsdGlwbGUgYC5lbnZgIGZp
bGVzPwoKTm8uIFdlICoqc3Ryb25nbHkqKiByZWNvbW1lbmQgYWdhaW5zdCBo
YXZpbmcgYSAibWFpbiIgYC5lbnZgIGZpbGUgYW5kIGFuICJlbnZpcm9ubWVu
dCIgYC5lbnZgIGZpbGUgbGlrZSBgLmVudi50ZXN0YC4gWW91ciBjb25maWcg
c2hvdWxkIHZhcnkgYmV0d2VlbiBkZXBsb3lzLCBhbmQgeW91IHNob3VsZCBu
b3QgYmUgc2hhcmluZyB2YWx1ZXMgYmV0d2VlbiBlbnZpcm9ubWVudHMuCgo+
IEluIGEgdHdlbHZlLWZhY3RvciBhcHAsIGVudiB2YXJzIGFyZSBncmFudWxh
ciBjb250cm9scywgZWFjaCBmdWxseSBvcnRob2dvbmFsIHRvIG90aGVyIGVu
diB2YXJzLiBUaGV5IGFyZSBuZXZlciBncm91cGVkIHRvZ2V0aGVyIGFzIOKA
nGVudmlyb25tZW50c+KAnSwgYnV0IGluc3RlYWQgYXJlIGluZGVwZW5kZW50
bHkgbWFuYWdlZCBmb3IgZWFjaCBkZXBsb3kuIFRoaXMgaXMgYSBtb2RlbCB0
aGF0IHNjYWxlcyB1cCBzbW9vdGhseSBhcyB0aGUgYXBwIG5hdHVyYWxseSBl
eHBhbmRzIGludG8gbW9yZSBkZXBsb3lzIG92ZXIgaXRzIGxpZmV0aW1lLgo+
Cj4g4oCTIFtUaGUgVHdlbHZlLUZhY3RvciBBcHBdKGh0dHA6Ly8xMmZhY3Rv
ci5uZXQvY29uZmlnKQoKIyMjIFdoYXQgaGFwcGVucyB0byBlbnZpcm9ubWVu
dCB2YXJpYWJsZXMgdGhhdCB3ZXJlIGFscmVhZHkgc2V0PwoKV2Ugd2lsbCBu
ZXZlciBtb2RpZnkgYW55IGVudmlyb25tZW50IHZhcmlhYmxlcyB0aGF0IGhh
dmUgYWxyZWFkeSBiZWVuIHNldC4gSW4gcGFydGljdWxhciwgaWYgdGhlcmUg
aXMgYSB2YXJpYWJsZSBpbiB5b3VyIGAuZW52YCBmaWxlIHdoaWNoIGNvbGxp
ZGVzIHdpdGggb25lIHRoYXQgYWxyZWFkeSBleGlzdHMgaW4geW91ciBlbnZp
cm9ubWVudCwgdGhlbiB0aGF0IHZhcmlhYmxlIHdpbGwgYmUgc2tpcHBlZC4g
VGhpcyBiZWhhdmlvciBhbGxvd3MgeW91IHRvIG92ZXJyaWRlIGFsbCBgLmVu
dmAgY29uZmlndXJhdGlvbnMgd2l0aCBhIG1hY2hpbmUtc3BlY2lmaWMgZW52
aXJvbm1lbnQsIGFsdGhvdWdoIGl0IGlzIG5vdCByZWNvbW1lbmRlZC4KCklm
IHlvdSB3YW50IHRvIG92ZXJyaWRlIGBwcm9jZXNzLmVudmAgeW91IGNhbiBk
byBzb21ldGhpbmcgbGlrZSB0aGlzOgoKYGBgamF2YXNjcmlwdApjb25zdCBm
cyA9IHJlcXVpcmUoJ2ZzJykKY29uc3QgZG90ZW52ID0gcmVxdWlyZSgnZG90
ZW52JykKY29uc3QgZW52Q29uZmlnID0gZG90ZW52LnBhcnNlKGZzLnJlYWRG
aWxlU3luYygnLmVudi5vdmVycmlkZScpKQpmb3IgKGNvbnN0IGsgaW4gZW52
Q29uZmlnKSB7CiAgcHJvY2Vzcy5lbnZba10gPSBlbnZDb25maWdba10KfQpg
YGAKCiMjIyBDYW4gSSBjdXN0b21pemUvd3JpdGUgcGx1Z2lucyBmb3IgZG90
ZW52PwoKRm9yIGBkb3RlbnZAMi54LnhgOiBZZXMuIGBkb3RlbnYuY29uZmln
KClgIG5vdyByZXR1cm5zIGFuIG9iamVjdCByZXByZXNlbnRpbmcKdGhlIHBh
cnNlZCBgLmVudmAgZmlsZS4gVGhpcyBnaXZlcyB5b3UgZXZlcnl0aGluZyB5
b3UgbmVlZCB0byBjb250aW51ZQpzZXR0aW5nIHZhbHVlcyBvbiBgcHJvY2Vz
cy5lbnZgLiBGb3IgZXhhbXBsZToKCmBgYGpzCmNvbnN0IGRvdGVudiA9IHJl
cXVpcmUoJ2RvdGVudicpCmNvbnN0IHZhcmlhYmxlRXhwYW5zaW9uID0gcmVx
dWlyZSgnZG90ZW52LWV4cGFuZCcpCmNvbnN0IG15RW52ID0gZG90ZW52LmNv
bmZpZygpCnZhcmlhYmxlRXhwYW5zaW9uKG15RW52KQpgYGAKCiMjIyBXaGF0
IGFib3V0IHZhcmlhYmxlIGV4cGFuc2lvbj8KClRyeSBbZG90ZW52LWV4cGFu
ZF0oaHR0cHM6Ly9naXRodWIuY29tL21vdGRvdGxhL2RvdGVudi1leHBhbmQp
CgojIyMgSG93IGRvIEkgdXNlIGRvdGVudiB3aXRoIGBpbXBvcnRgPwoKRVMy
MDE1IGFuZCBiZXlvbmQgb2ZmZXJzIG1vZHVsZXMgdGhhdCBhbGxvdyB5b3Ug
dG8gYGV4cG9ydGAgYW55IHRvcC1sZXZlbCBgZnVuY3Rpb25gLCBgY2xhc3Ng
LCBgdmFyYCwgYGxldGAsIG9yIGBjb25zdGAuCgo+IFdoZW4geW91IHJ1biBh
IG1vZHVsZSBjb250YWluaW5nIGFuIGBpbXBvcnRgIGRlY2xhcmF0aW9uLCB0
aGUgbW9kdWxlcyBpdCBpbXBvcnRzIGFyZSBsb2FkZWQgZmlyc3QsIHRoZW4g
ZWFjaCBtb2R1bGUgYm9keSBpcyBleGVjdXRlZCBpbiBhIGRlcHRoLWZpcnN0
IHRyYXZlcnNhbCBvZiB0aGUgZGVwZW5kZW5jeSBncmFwaCwgYXZvaWRpbmcg
Y3ljbGVzIGJ5IHNraXBwaW5nIGFueXRoaW5nIGFscmVhZHkgZXhlY3V0ZWQu
Cj4KPiDigJMgW0VTNiBJbiBEZXB0aDogTW9kdWxlc10oaHR0cHM6Ly9oYWNr
cy5tb3ppbGxhLm9yZy8yMDE1LzA4L2VzNi1pbi1kZXB0aC1tb2R1bGVzLykK
CllvdSBtdXN0IHJ1biBgZG90ZW52LmNvbmZpZygpYCBiZWZvcmUgcmVmZXJl
bmNpbmcgYW55IGVudmlyb25tZW50IHZhcmlhYmxlcy4gSGVyZSdzIGFuIGV4
YW1wbGUgb2YgcHJvYmxlbWF0aWMgY29kZToKCmBlcnJvclJlcG9ydGVyLmpz
YDoKCmBgYGpzCmltcG9ydCB7IENsaWVudCB9IGZyb20gJ2Jlc3QtZXJyb3It
cmVwb3J0aW5nLXNlcnZpY2UnCgpleHBvcnQgY29uc3QgY2xpZW50ID0gbmV3
IENsaWVudChwcm9jZXNzLmVudi5CRVNUX0FQSV9LRVkpCmBgYAoKYGluZGV4
LmpzYDoKCmBgYGpzCmltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52JwppbXBv
cnQgZXJyb3JSZXBvcnRlciBmcm9tICcuL2Vycm9yUmVwb3J0ZXInCgpkb3Rl
bnYuY29uZmlnKCkKZXJyb3JSZXBvcnRlci5jbGllbnQucmVwb3J0KG5ldyBF
cnJvcignZmFxIGV4YW1wbGUnKSkKYGBgCgpgY2xpZW50YCB3aWxsIG5vdCBi
ZSBjb25maWd1cmVkIGNvcnJlY3RseSBiZWNhdXNlIGl0IHdhcyBjb25zdHJ1
Y3RlZCBiZWZvcmUgYGRvdGVudi5jb25maWcoKWAgd2FzIGV4ZWN1dGVkLiBU
aGVyZSBhcmUgKGF0IGxlYXN0KSAzIHdheXMgdG8gbWFrZSB0aGlzIHdvcmsu
CgoxLiBQcmVsb2FkIGRvdGVudjogYG5vZGUgLS1yZXF1aXJlIGRvdGVudi9j
b25maWcgaW5kZXguanNgIChfTm90ZTogeW91IGRvIG5vdCBuZWVkIHRvIGBp
bXBvcnRgIGRvdGVudiB3aXRoIHRoaXMgYXBwcm9hY2hfKQoyLiBJbXBvcnQg
YGRvdGVudi9jb25maWdgIGluc3RlYWQgb2YgYGRvdGVudmAgKF9Ob3RlOiB5
b3UgZG8gbm90IG5lZWQgdG8gY2FsbCBgZG90ZW52LmNvbmZpZygpYCBhbmQg
bXVzdCBwYXNzIG9wdGlvbnMgdmlhIHRoZSBjb21tYW5kIGxpbmUgb3IgZW52
aXJvbm1lbnQgdmFyaWFibGVzIHdpdGggdGhpcyBhcHByb2FjaF8pCjMuIENy
ZWF0ZSBhIHNlcGFyYXRlIGZpbGUgdGhhdCB3aWxsIGV4ZWN1dGUgYGNvbmZp
Z2AgZmlyc3QgYXMgb3V0bGluZWQgaW4gW3RoaXMgY29tbWVudCBvbiAjMTMz
XShodHRwczovL2dpdGh1Yi5jb20vbW90ZG90bGEvZG90ZW52L2lzc3Vlcy8x
MzMjaXNzdWVjb21tZW50LTI1NTI5ODgyMikKCiMjIENvbnRyaWJ1dGluZyBH
dWlkZQoKU2VlIFtDT05UUklCVVRJTkcubWRdKENPTlRSSUJVVElORy5tZCkK
CiMjIENoYW5nZSBMb2cKClNlZSBbQ0hBTkdFTE9HLm1kXShDSEFOR0VMT0cu
bWQpCgojIyBXaG8ncyB1c2luZyBkb3RlbnY/CgpbVGhlc2UgbnBtIG1vZHVs
ZXMgZGVwZW5kIG9uIGl0Ll0oaHR0cHM6Ly93d3cubnBtanMuY29tL2Jyb3dz
ZS9kZXBlbmRlZC9kb3RlbnYpCgpQcm9qZWN0cyB0aGF0IGV4cGFuZCBpdCBv
ZnRlbiB1c2UgdGhlIFtrZXl3b3JkICJkb3RlbnYiIG9uIG5wbV0oaHR0cHM6
Ly93d3cubnBtanMuY29tL3NlYXJjaD9xPWtleXdvcmRzOmRvdGVudikuCg==
",,10271,"bGFuZ3VhZ2U6IG5vZGVfanMKCnN1ZG86IGZhbHNlCgpvczoKICAtIGxpbnV4
CiAgLSB3aW5kb3dzCgpub2RlX2pzOgogIC0gIjgiCiAgLSAiMTAiCiAgLSAi
MTIiCgpjYWNoZTogbnBtCgptYXRyaXg6CiAgZmFzdF9maW5pc2g6IHRydWUK
CmFmdGVyX3N1Y2Nlc3M6IGlmIFtbICIkVFJBVklTX09TX05BTUUiICE9ICd3
aW5kb3dzJyBdXTsgdGhlbiBucG0gcnVuIGZsb3c7IGZpCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
