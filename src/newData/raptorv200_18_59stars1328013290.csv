name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'functional-programming-jargon',31168578,b'Jargon from the functional programming world in simple terms!',,24,13289,,374,False,b'https://api.github.com/repos/hemanth/functional-programming-jargon/forks',"IyBGdW5jdGlvbmFsIFByb2dyYW1taW5nIEphcmdvbgoKRnVuY3Rpb25hbCBw
cm9ncmFtbWluZyAoRlApIHByb3ZpZGVzIG1hbnkgYWR2YW50YWdlcywgYW5k
IGl0cyBwb3B1bGFyaXR5IGhhcyBiZWVuIGluY3JlYXNpbmcgYXMgYSByZXN1
bHQuIEhvd2V2ZXIsIGVhY2ggcHJvZ3JhbW1pbmcgcGFyYWRpZ20gY29tZXMg
d2l0aCBpdHMgb3duIHVuaXF1ZSBqYXJnb24gYW5kIEZQIGlzIG5vIGV4Y2Vw
dGlvbi4gQnkgcHJvdmlkaW5nIGEgZ2xvc3NhcnksIHdlIGhvcGUgdG8gbWFr
ZSBsZWFybmluZyBGUCBlYXNpZXIuCgpFeGFtcGxlcyBhcmUgcHJlc2VudGVk
IGluIEphdmFTY3JpcHQgKEVTMjAxNSkuIFtXaHkgSmF2YVNjcmlwdD9dKGh0
dHBzOi8vZ2l0aHViLmNvbS9oZW1hbnRoL2Z1bmN0aW9uYWwtcHJvZ3JhbW1p
bmctamFyZ29uL3dpa2kvV2h5LUphdmFTY3JpcHQlM0YpCgpXaGVyZSBhcHBs
aWNhYmxlLCB0aGlzIGRvY3VtZW50IHVzZXMgdGVybXMgZGVmaW5lZCBpbiB0
aGUgW0ZhbnRhc3kgTGFuZCBzcGVjXShodHRwczovL2dpdGh1Yi5jb20vZmFu
dGFzeWxhbmQvZmFudGFzeS1sYW5kKQoKX19UcmFuc2xhdGlvbnNfXwoqIFtQ
b3J0dWd1ZXNlXShodHRwczovL2dpdGh1Yi5jb20vYWxleG1vcmVuby9qYXJn
b2VzLXByb2dyYW1hY2FvLWZ1bmNpb25hbCkKKiBbU3BhbmlzaF0oaHR0cHM6
Ly9naXRodWIuY29tL2lkY21hcmRlbHBsYXRhL2Z1bmN0aW9uYWwtcHJvZ3Jh
bW1pbmctamFyZ29uL3RyZWUvbWFzdGVyKQoqIFtDaGluZXNlXShodHRwczov
L2dpdGh1Yi5jb20vc2hmc2hhbnl1ZS9mcC1qYXJnb24temgpCiogW0JhaGFz
YSBJbmRvbmVzaWFdKGh0dHBzOi8vZ2l0aHViLmNvbS93aXNuL2phcmdvbi1w
ZW1yb2dyYW1hbi1mdW5nc2lvbmFsKQoqIFtQeXRob24gV29ybGRdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9qbWVzeW91L2Z1bmN0aW9uYWwtcHJvZ3JhbW1pbmct
amFyZ29uLnB5KQoqIFtTY2FsYSBXb3JsZF0oaHR0cHM6Ly9naXRodWIuY29t
L2lraG9vbi9mdW5jdGlvbmFsLXByb2dyYW1taW5nLWphcmdvbi5zY2FsYSkK
KiBbUnVzdCBXb3JsZF0oaHR0cHM6Ly9naXRodWIuY29tL0phc29uU2hpbi9m
dW5jdGlvbmFsLXByb2dyYW1taW5nLWphcmdvbi5ycykKKiBbS29yZWFuXSho
dHRwczovL2dpdGh1Yi5jb20vc3BoaWxlZS9mdW5jdGlvbmFsLXByb2dyYW1t
aW5nLWphcmdvbikKKiBbSGFza2VsbCBUdXJraXNoXShodHRwczovL2dpdGh1
Yi5jb20vbXJ0a3A5OTkzL2Z1bmN0aW9uYWwtcHJvZ3JhbW1pbmctamFyZ29u
KQoKX19UYWJsZSBvZiBDb250ZW50c19fCjwhLS0gUk0obm9wYXJlbnQsbm90
b3ApIC0tPgoKKiBbQXJpdHldKCNhcml0eSkKKiBbSGlnaGVyLU9yZGVyIEZ1
bmN0aW9ucyAoSE9GKV0oI2hpZ2hlci1vcmRlci1mdW5jdGlvbnMtaG9mKQoq
IFtDbG9zdXJlXSgjY2xvc3VyZSkKKiBbUGFydGlhbCBBcHBsaWNhdGlvbl0o
I3BhcnRpYWwtYXBwbGljYXRpb24pCiogW0N1cnJ5aW5nXSgjY3Vycnlpbmcp
CiogW0F1dG8gQ3VycnlpbmddKCNhdXRvLWN1cnJ5aW5nKQoqIFtGdW5jdGlv
biBDb21wb3NpdGlvbl0oI2Z1bmN0aW9uLWNvbXBvc2l0aW9uKQoqIFtDb250
aW51YXRpb25dKCNjb250aW51YXRpb24pCiogW1B1cml0eV0oI3B1cml0eSkK
KiBbU2lkZSBlZmZlY3RzXSgjc2lkZS1lZmZlY3RzKQoqIFtJZGVtcG90ZW50
XSgjaWRlbXBvdGVudCkKKiBbUG9pbnQtRnJlZSBTdHlsZV0oI3BvaW50LWZy
ZWUtc3R5bGUpCiogW1ByZWRpY2F0ZV0oI3ByZWRpY2F0ZSkKKiBbQ29udHJh
Y3RzXSgjY29udHJhY3RzKQoqIFtDYXRlZ29yeV0oI2NhdGVnb3J5KQoqIFtW
YWx1ZV0oI3ZhbHVlKQoqIFtDb25zdGFudF0oI2NvbnN0YW50KQoqIFtGdW5j
dG9yXSgjZnVuY3RvcikKKiBbUG9pbnRlZCBGdW5jdG9yXSgjcG9pbnRlZC1m
dW5jdG9yKQoqIFtMaWZ0XSgjbGlmdCkKKiBbUmVmZXJlbnRpYWwgVHJhbnNw
YXJlbmN5XSgjcmVmZXJlbnRpYWwtdHJhbnNwYXJlbmN5KQoqIFtFcXVhdGlv
bmFsIFJlYXNvbmluZ10oI2VxdWF0aW9uYWwtcmVhc29uaW5nKQoqIFtMYW1i
ZGFdKCNsYW1iZGEpCiogW0xhbWJkYSBDYWxjdWx1c10oI2xhbWJkYS1jYWxj
dWx1cykKKiBbTGF6eSBldmFsdWF0aW9uXSgjbGF6eS1ldmFsdWF0aW9uKQoq
IFtNb25vaWRdKCNtb25vaWQpCiogW01vbmFkXSgjbW9uYWQpCiogW0NvbW9u
YWRdKCNjb21vbmFkKQoqIFtBcHBsaWNhdGl2ZSBGdW5jdG9yXSgjYXBwbGlj
YXRpdmUtZnVuY3RvcikKKiBbTW9ycGhpc21dKCNtb3JwaGlzbSkKICAqIFtF
bmRvbW9ycGhpc21dKCNlbmRvbW9ycGhpc20pCiAgKiBbSXNvbW9ycGhpc21d
KCNpc29tb3JwaGlzbSkKICAqIFtIb21vbW9ycGhpc21dKCNob21vbW9ycGhp
c20pCiAgKiBbQ2F0YW1vcnBoaXNtXSgjY2F0YW1vcnBoaXNtKQogICogW0Fu
YW1vcnBoaXNtXSgjYW5hbW9ycGhpc20pCiAgKiBbSHlsb21vcnBoaXNtXSgj
aHlsb21vcnBoaXNtKQogICogW1BhcmFtb3JwaGlzbV0oI3BhcmFtb3JwaGlz
bSkKICAqIFtBcG9tb3JwaGlzbV0oI2Fwb21vcnBoaXNtKQoqIFtTZXRvaWRd
KCNzZXRvaWQpCiogW1NlbWlncm91cF0oI3NlbWlncm91cCkKKiBbRm9sZGFi
bGVdKCNmb2xkYWJsZSkKKiBbTGVuc10oI2xlbnMpCiogW1R5cGUgU2lnbmF0
dXJlc10oI3R5cGUtc2lnbmF0dXJlcykKKiBbQWxnZWJyYWljIGRhdGEgdHlw
ZV0oI2FsZ2VicmFpYy1kYXRhLXR5cGUpCiAgKiBbU3VtIHR5cGVdKCNzdW0t
dHlwZSkKICAqIFtQcm9kdWN0IHR5cGVdKCNwcm9kdWN0LXR5cGUpCiogW09w
dGlvbl0oI29wdGlvbikKKiBbRnVuY3Rpb25dKCNmdW5jdGlvbikKKiBbUGFy
dGlhbCBmdW5jdGlvbl0oI3BhcnRpYWwtZnVuY3Rpb24pCiogW0Z1bmN0aW9u
YWwgUHJvZ3JhbW1pbmcgTGlicmFyaWVzIGluIEphdmFTY3JpcHRdKCNmdW5j
dGlvbmFsLXByb2dyYW1taW5nLWxpYnJhcmllcy1pbi1qYXZhc2NyaXB0KQoK
CjwhLS0gL1JNIC0tPgoKIyMgQXJpdHkKClRoZSBudW1iZXIgb2YgYXJndW1l
bnRzIGEgZnVuY3Rpb24gdGFrZXMuIEZyb20gd29yZHMgbGlrZSB1bmFyeSwg
YmluYXJ5LCB0ZXJuYXJ5LCBldGMuIFRoaXMgd29yZCBoYXMgdGhlIGRpc3Rp
bmN0aW9uIG9mIGJlaW5nIGNvbXBvc2VkIG9mIHR3byBzdWZmaXhlcywgIi1h
cnkiIGFuZCAiLWl0eS4iIEFkZGl0aW9uLCBmb3IgZXhhbXBsZSwgdGFrZXMg
dHdvIGFyZ3VtZW50cywgYW5kIHNvIGl0IGlzIGRlZmluZWQgYXMgYSBiaW5h
cnkgZnVuY3Rpb24gb3IgYSBmdW5jdGlvbiB3aXRoIGFuIGFyaXR5IG9mIHR3
by4gU3VjaCBhIGZ1bmN0aW9uIG1heSBzb21ldGltZXMgYmUgY2FsbGVkICJk
eWFkaWMiIGJ5IHBlb3BsZSB3aG8gcHJlZmVyIEdyZWVrIHJvb3RzIHRvIExh
dGluLiBMaWtld2lzZSwgYSBmdW5jdGlvbiB0aGF0IHRha2VzIGEgdmFyaWFi
bGUgbnVtYmVyIG9mIGFyZ3VtZW50cyBpcyBjYWxsZWQgInZhcmlhZGljLCIg
d2hlcmVhcyBhIGJpbmFyeSBmdW5jdGlvbiBtdXN0IGJlIGdpdmVuIHR3byBh
bmQgb25seSB0d28gYXJndW1lbnRzLCBjdXJyeWluZyBhbmQgcGFydGlhbCBh
cHBsaWNhdGlvbiBub3R3aXRoc3RhbmRpbmcgKHNlZSBiZWxvdykuCgpgYGBq
cwpjb25zdCBzdW0gPSAoYSwgYikgPT4gYSArIGIKCmNvbnN0IGFyaXR5ID0g
c3VtLmxlbmd0aApjb25zb2xlLmxvZyhhcml0eSkgLy8gMgoKLy8gVGhlIGFy
aXR5IG9mIHN1bSBpcyAyCmBgYAoKIyMgSGlnaGVyLU9yZGVyIEZ1bmN0aW9u
cyAoSE9GKQoKQSBmdW5jdGlvbiB3aGljaCB0YWtlcyBhIGZ1bmN0aW9uIGFz
IGFuIGFyZ3VtZW50IGFuZC9vciByZXR1cm5zIGEgZnVuY3Rpb24uCgpgYGBq
cwpjb25zdCBmaWx0ZXIgPSAocHJlZGljYXRlLCB4cykgPT4geHMuZmlsdGVy
KHByZWRpY2F0ZSkKYGBgCgpgYGBqcwpjb25zdCBpcyA9ICh0eXBlKSA9PiAo
eCkgPT4gT2JqZWN0KHgpIGluc3RhbmNlb2YgdHlwZQpgYGAKCmBgYGpzCmZp
bHRlcihpcyhOdW1iZXIpLCBbMCwgJzEnLCAyLCBudWxsXSkgLy8gWzAsIDJd
CmBgYAoKIyMgQ2xvc3VyZQoKQSBjbG9zdXJlIGlzIGEgd2F5IG9mIGFjY2Vz
c2luZyBhIHZhcmlhYmxlIG91dHNpZGUgaXRzIHNjb3BlLgpGb3JtYWxseSwg
YSBjbG9zdXJlIGlzIGEgdGVjaG5pcXVlIGZvciBpbXBsZW1lbnRpbmcgbGV4
aWNhbGx5IHNjb3BlZCBuYW1lZCBiaW5kaW5nLiBJdCBpcyBhIHdheSBvZiBz
dG9yaW5nIGEgZnVuY3Rpb24gd2l0aCBhbiBlbnZpcm9ubWVudC4KCkEgY2xv
c3VyZSBpcyBhIHNjb3BlIHdoaWNoIGNhcHR1cmVzIGxvY2FsIHZhcmlhYmxl
cyBvZiBhIGZ1bmN0aW9uIGZvciBhY2Nlc3MgZXZlbiBhZnRlciB0aGUgZXhl
Y3V0aW9uIGhhcyBtb3ZlZCBvdXQgb2YgdGhlIGJsb2NrIGluIHdoaWNoIGl0
IGlzIGRlZmluZWQuCmllLiB0aGV5IGFsbG93IHJlZmVyZW5jaW5nIGEgc2Nv
cGUgYWZ0ZXIgdGhlIGJsb2NrIGluIHdoaWNoIHRoZSB2YXJpYWJsZXMgd2Vy
ZSBkZWNsYXJlZCBoYXMgZmluaXNoZWQgZXhlY3V0aW5nLgoKCmBgYGpzCmNv
bnN0IGFkZFRvID0geCA9PiB5ID0+IHggKyB5Owp2YXIgYWRkVG9GaXZlID0g
YWRkVG8oNSk7CmFkZFRvRml2ZSgzKTsgLy9yZXR1cm5zIDgKYGBgClRoZSBm
dW5jdGlvbiBgYGBhZGRUbygpYGBgIHJldHVybnMgYSBmdW5jdGlvbihpbnRl
cm5hbGx5IGNhbGxlZCBgYGBhZGQoKWBgYCksIGxldHMgc3RvcmUgaXQgaW4g
YSB2YXJpYWJsZSBjYWxsZWQgYGBgYWRkVG9GaXZlYGBgIHdpdGggYSBjdXJy
aWVkIGNhbGwgaGF2aW5nIHBhcmFtZXRlciA1LgoKSWRlYWxseSwgd2hlbiB0
aGUgZnVuY3Rpb24gYGBgYWRkVG9gYGAgZmluaXNoZXMgZXhlY3V0aW9uLCBp
dHMgc2NvcGUsIHdpdGggbG9jYWwgdmFyaWFibGVzIGFkZCwgeCwgeSBzaG91
bGQgbm90IGJlIGFjY2Vzc2libGUuIEJ1dCwgaXQgcmV0dXJucyA4IG9uIGNh
bGxpbmcgYGBgYWRkVG9GaXZlKClgYGAuIFRoaXMgbWVhbnMgdGhhdCB0aGUg
c3RhdGUgb2YgdGhlIGZ1bmN0aW9uIGBgYGFkZFRvYGBgIGlzIHNhdmVkIGV2
ZW4gYWZ0ZXIgdGhlIGJsb2NrIG9mIGNvZGUgaGFzIGZpbmlzaGVkIGV4ZWN1
dGluZywgb3RoZXJ3aXNlIHRoZXJlIGlzIG5vIHdheSBvZiBrbm93aW5nIHRo
YXQgYGBgYWRkVG9gYGAgd2FzIGNhbGxlZCBhcyBgYGBhZGRUbyg1KWBgYCBh
bmQgdGhlIHZhbHVlIG9mIHggd2FzIHNldCB0byA1LgoKTGV4aWNhbCBzY29w
aW5nIGlzIHRoZSByZWFzb24gd2h5IGl0IGlzIGFibGUgdG8gZmluZCB0aGUg
dmFsdWVzIG9mIHggYW5kIGFkZCAtIHRoZSBwcml2YXRlIHZhcmlhYmxlcyBv
ZiB0aGUgcGFyZW50IHdoaWNoIGhhcyBmaW5pc2hlZCBleGVjdXRpbmcuIFRo
aXMgdmFsdWUgaXMgY2FsbGVkIGEgQ2xvc3VyZS4KClRoZSBzdGFjayBhbG9u
ZyB3aXRoIHRoZSBsZXhpY2FsIHNjb3BlIG9mIHRoZSBmdW5jdGlvbiBpcyBz
dG9yZWQgaW4gZm9ybSBvZiByZWZlcmVuY2UgdG8gdGhlIHBhcmVudC4gVGhp
cyBwcmV2ZW50cyB0aGUgY2xvc3VyZSBhbmQgdGhlIHVuZGVybHlpbmcgdmFy
aWFibGVzIGZyb20gYmVpbmcgZ2FyYmFnZSBjb2xsZWN0ZWQoc2luY2UgdGhl
cmUgaXMgYXQgbGVhc3Qgb25lIGxpdmUgcmVmZXJlbmNlIHRvIGl0KS4KCkxh
bWJkYSBWcyBDbG9zdXJlOiBBIGxhbWJkYSBpcyBlc3NlbnRpYWxseSBhIGZ1
bmN0aW9uIHRoYXQgaXMgZGVmaW5lZCBpbmxpbmUgcmF0aGVyIHRoYW4gdGhl
IHN0YW5kYXJkIG1ldGhvZCBvZiBkZWNsYXJpbmcgZnVuY3Rpb25zLiBMYW1i
ZGFzIGNhbiBmcmVxdWVudGx5IGJlIHBhc3NlZCBhcm91bmQgYXMgb2JqZWN0
cy4KCkEgY2xvc3VyZSBpcyBhIGZ1bmN0aW9uIHRoYXQgZW5jbG9zZXMgaXRz
IHN1cnJvdW5kaW5nIHN0YXRlIGJ5IHJlZmVyZW5jaW5nIGZpZWxkcyBleHRl
cm5hbCB0byBpdHMgYm9keS4gVGhlIGVuY2xvc2VkIHN0YXRlIHJlbWFpbnMg
YWNyb3NzIGludm9jYXRpb25zIG9mIHRoZSBjbG9zdXJlLgoKX19GdXJ0aGVy
IHJlYWRpbmcvU291cmNlc19fCiogW0xhbWJkYSBWcyBDbG9zdXJlXShodHRw
Oi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzIyMDY1OC93aGF0LWlz
LXRoZS1kaWZmZXJlbmNlLWJldHdlZW4tYS1jbG9zdXJlLWFuZC1hLWxhbWJk
YSkKKiBbSmF2YVNjcmlwdCBDbG9zdXJlcyBoaWdobHkgdm90ZWQgZGlzY3Vz
c2lvbl0oaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xMTEx
MDIvaG93LWRvLWphdmFzY3JpcHQtY2xvc3VyZXMtd29yaykKCiMjIFBhcnRp
YWwgQXBwbGljYXRpb24KClBhcnRpYWxseSBhcHBseWluZyBhIGZ1bmN0aW9u
IG1lYW5zIGNyZWF0aW5nIGEgbmV3IGZ1bmN0aW9uIGJ5IHByZS1maWxsaW5n
IHNvbWUgb2YgdGhlIGFyZ3VtZW50cyB0byB0aGUgb3JpZ2luYWwgZnVuY3Rp
b24uCgoKYGBganMKLy8gSGVscGVyIHRvIGNyZWF0ZSBwYXJ0aWFsbHkgYXBw
bGllZCBmdW5jdGlvbnMKLy8gVGFrZXMgYSBmdW5jdGlvbiBhbmQgc29tZSBh
cmd1bWVudHMKY29uc3QgcGFydGlhbCA9IChmLCAuLi5hcmdzKSA9PgogIC8v
IHJldHVybnMgYSBmdW5jdGlvbiB0aGF0IHRha2VzIHRoZSByZXN0IG9mIHRo
ZSBhcmd1bWVudHMKICAoLi4ubW9yZUFyZ3MpID0+CiAgICAvLyBhbmQgY2Fs
bHMgdGhlIG9yaWdpbmFsIGZ1bmN0aW9uIHdpdGggYWxsIG9mIHRoZW0KICAg
IGYoLi4uYXJncywgLi4ubW9yZUFyZ3MpCgovLyBTb21ldGhpbmcgdG8gYXBw
bHkKY29uc3QgYWRkMyA9IChhLCBiLCBjKSA9PiBhICsgYiArIGMKCi8vIFBh
cnRpYWxseSBhcHBseWluZyBgMmAgYW5kIGAzYCB0byBgYWRkM2AgZ2l2ZXMg
eW91IGEgb25lLWFyZ3VtZW50IGZ1bmN0aW9uCmNvbnN0IGZpdmVQbHVzID0g
cGFydGlhbChhZGQzLCAyLCAzKSAvLyAoYykgPT4gMiArIDMgKyBjCgpmaXZl
UGx1cyg0KSAvLyA5CmBgYAoKWW91IGNhbiBhbHNvIHVzZSBgRnVuY3Rpb24u
cHJvdG90eXBlLmJpbmRgIHRvIHBhcnRpYWxseSBhcHBseSBhIGZ1bmN0aW9u
IGluIEpTOgoKYGBganMKY29uc3QgYWRkMU1vcmUgPSBhZGQzLmJpbmQobnVs
bCwgMiwgMykgLy8gKGMpID0+IDIgKyAzICsgYwpgYGAKClBhcnRpYWwgYXBw
bGljYXRpb24gaGVscHMgY3JlYXRlIHNpbXBsZXIgZnVuY3Rpb25zIGZyb20g
bW9yZSBjb21wbGV4IG9uZXMgYnkgYmFraW5nIGluIGRhdGEgd2hlbiB5b3Ug
aGF2ZSBpdC4gW0N1cnJpZWRdKCNjdXJyeWluZykgZnVuY3Rpb25zIGFyZSBh
dXRvbWF0aWNhbGx5IHBhcnRpYWxseSBhcHBsaWVkLgoKCiMjIEN1cnJ5aW5n
CgpUaGUgcHJvY2VzcyBvZiBjb252ZXJ0aW5nIGEgZnVuY3Rpb24gdGhhdCB0
YWtlcyBtdWx0aXBsZSBhcmd1bWVudHMgaW50byBhIGZ1bmN0aW9uIHRoYXQg
dGFrZXMgdGhlbSBvbmUgYXQgYSB0aW1lLgoKRWFjaCB0aW1lIHRoZSBmdW5j
dGlvbiBpcyBjYWxsZWQgaXQgb25seSBhY2NlcHRzIG9uZSBhcmd1bWVudCBh
bmQgcmV0dXJucyBhIGZ1bmN0aW9uIHRoYXQgdGFrZXMgb25lIGFyZ3VtZW50
IHVudGlsIGFsbCBhcmd1bWVudHMgYXJlIHBhc3NlZC4KCmBgYGpzCmNvbnN0
IHN1bSA9IChhLCBiKSA9PiBhICsgYgoKY29uc3QgY3VycmllZFN1bSA9IChh
KSA9PiAoYikgPT4gYSArIGIKCmN1cnJpZWRTdW0oNDApKDIpIC8vIDQyLgoK
Y29uc3QgYWRkMiA9IGN1cnJpZWRTdW0oMikgLy8gKGIpID0+IDIgKyBiCgph
ZGQyKDEwKSAvLyAxMgoKYGBgCgojIyBBdXRvIEN1cnJ5aW5nClRyYW5zZm9y
bWluZyBhIGZ1bmN0aW9uIHRoYXQgdGFrZXMgbXVsdGlwbGUgYXJndW1lbnRz
IGludG8gb25lIHRoYXQgaWYgZ2l2ZW4gbGVzcyB0aGFuIGl0cyBjb3JyZWN0
IG51bWJlciBvZiBhcmd1bWVudHMgcmV0dXJucyBhIGZ1bmN0aW9uIHRoYXQg
dGFrZXMgdGhlIHJlc3QuIFdoZW4gdGhlIGZ1bmN0aW9uIGdldHMgdGhlIGNv
cnJlY3QgbnVtYmVyIG9mIGFyZ3VtZW50cyBpdCBpcyB0aGVuIGV2YWx1YXRl
ZC4KCmxvZGFzaCAmIFJhbWRhIGhhdmUgYSBgY3VycnlgIGZ1bmN0aW9uIHRo
YXQgd29ya3MgdGhpcyB3YXkuCgpgYGBqcwpjb25zdCBhZGQgPSAoeCwgeSkg
PT4geCArIHkKCmNvbnN0IGN1cnJpZWRBZGQgPSBfLmN1cnJ5KGFkZCkKY3Vy
cmllZEFkZCgxLCAyKSAvLyAzCmN1cnJpZWRBZGQoMSkgLy8gKHkpID0+IDEg
KyB5CmN1cnJpZWRBZGQoMSkoMikgLy8gMwpgYGAKCl9fRnVydGhlciByZWFk
aW5nX18KKiBbRmF2b3JpbmcgQ3VycnldKGh0dHA6Ly9mci51bWlvLnVzL2Zh
dm9yaW5nLWN1cnJ5LykKKiBbSGV5IFVuZGVyc2NvcmUsIFlvdSdyZSBEb2lu
ZyBJdCBXcm9uZyFdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9
bTNzdktPZFppakEpCgojIyBGdW5jdGlvbiBDb21wb3NpdGlvbgoKVGhlIGFj
dCBvZiBwdXR0aW5nIHR3byBmdW5jdGlvbnMgdG9nZXRoZXIgdG8gZm9ybSBh
IHRoaXJkIGZ1bmN0aW9uIHdoZXJlIHRoZSBvdXRwdXQgb2Ygb25lIGZ1bmN0
aW9uIGlzIHRoZSBpbnB1dCBvZiB0aGUgb3RoZXIuCgpgYGBqcwpjb25zdCBj
b21wb3NlID0gKGYsIGcpID0+IChhKSA9PiBmKGcoYSkpIC8vIERlZmluaXRp
b24KY29uc3QgZmxvb3JBbmRUb1N0cmluZyA9IGNvbXBvc2UoKHZhbCkgPT4g
dmFsLnRvU3RyaW5nKCksIE1hdGguZmxvb3IpIC8vIFVzYWdlCmZsb29yQW5k
VG9TdHJpbmcoMTIxLjIxMjEyMSkgLy8gJzEyMScKYGBgCgojIyBDb250aW51
YXRpb24KCkF0IGFueSBnaXZlbiBwb2ludCBpbiBhIHByb2dyYW0sIHRoZSBw
YXJ0IG9mIHRoZSBjb2RlIHRoYXQncyB5ZXQgdG8gYmUgZXhlY3V0ZWQgaXMg
a25vd24gYXMgYSBjb250aW51YXRpb24uCgpgYGBqcwpjb25zdCBwcmludEFz
U3RyaW5nID0gKG51bSkgPT4gY29uc29sZS5sb2coYEdpdmVuICR7bnVtfWAp
Cgpjb25zdCBhZGRPbmVBbmRDb250aW51ZSA9IChudW0sIGNjKSA9PiB7CiAg
Y29uc3QgcmVzdWx0ID0gbnVtICsgMQogIGNjKHJlc3VsdCkKfQoKYWRkT25l
QW5kQ29udGludWUoMiwgcHJpbnRBc1N0cmluZykgLy8gJ0dpdmVuIDMnCmBg
YAoKQ29udGludWF0aW9ucyBhcmUgb2Z0ZW4gc2VlbiBpbiBhc3luY2hyb25v
dXMgcHJvZ3JhbW1pbmcgd2hlbiB0aGUgcHJvZ3JhbSBuZWVkcyB0byB3YWl0
IHRvIHJlY2VpdmUgZGF0YSBiZWZvcmUgaXQgY2FuIGNvbnRpbnVlLiBUaGUg
cmVzcG9uc2UgaXMgb2Z0ZW4gcGFzc2VkIG9mZiB0byB0aGUgcmVzdCBvZiB0
aGUgcHJvZ3JhbSwgd2hpY2ggaXMgdGhlIGNvbnRpbnVhdGlvbiwgb25jZSBp
dCdzIGJlZW4gcmVjZWl2ZWQuCgpgYGBqcwpjb25zdCBjb250aW51ZVByb2dy
YW1XaXRoID0gKGRhdGEpID0+IHsKICAvLyBDb250aW51ZXMgcHJvZ3JhbSB3
aXRoIGRhdGEKfQoKcmVhZEZpbGVBc3luYygncGF0aC90by9maWxlJywgKGVy
ciwgcmVzcG9uc2UpID0+IHsKICBpZiAoZXJyKSB7CiAgICAvLyBoYW5kbGUg
ZXJyb3IKICAgIHJldHVybgogIH0KICBjb250aW51ZVByb2dyYW1XaXRoKHJl
c3BvbnNlKQp9KQpgYGAKCiMjIFB1cml0eQoKQSBmdW5jdGlvbiBpcyBwdXJl
IGlmIHRoZSByZXR1cm4gdmFsdWUgaXMgb25seSBkZXRlcm1pbmVkIGJ5IGl0
cwppbnB1dCB2YWx1ZXMsIGFuZCBkb2VzIG5vdCBwcm9kdWNlIHNpZGUgZWZm
ZWN0cy4KCmBgYGpzCmNvbnN0IGdyZWV0ID0gKG5hbWUpID0+IGBIaSwgJHtu
YW1lfWAKCmdyZWV0KCdCcmlhbm5lJykgLy8gJ0hpLCBCcmlhbm5lJwpgYGAK
CkFzIG9wcG9zZWQgdG8gZWFjaCBvZiB0aGUgZm9sbG93aW5nOgoKYGBganMK
d2luZG93Lm5hbWUgPSAnQnJpYW5uZScKCmNvbnN0IGdyZWV0ID0gKCkgPT4g
YEhpLCAke3dpbmRvdy5uYW1lfWAKCmdyZWV0KCkgLy8gIkhpLCBCcmlhbm5l
IgpgYGAKClRoZSBhYm92ZSBleGFtcGxlJ3Mgb3V0cHV0IGlzIGJhc2VkIG9u
IGRhdGEgc3RvcmVkIG91dHNpZGUgb2YgdGhlIGZ1bmN0aW9uLi4uCgpgYGBq
cwpsZXQgZ3JlZXRpbmcKCmNvbnN0IGdyZWV0ID0gKG5hbWUpID0+IHsKICBn
cmVldGluZyA9IGBIaSwgJHtuYW1lfWAKfQoKZ3JlZXQoJ0JyaWFubmUnKQpn
cmVldGluZyAvLyAiSGksIEJyaWFubmUiCmBgYAoKLi4uIGFuZCB0aGlzIG9u
ZSBtb2RpZmllcyBzdGF0ZSBvdXRzaWRlIG9mIHRoZSBmdW5jdGlvbi4KCiMj
IFNpZGUgZWZmZWN0cwoKQSBmdW5jdGlvbiBvciBleHByZXNzaW9uIGlzIHNh
aWQgdG8gaGF2ZSBhIHNpZGUgZWZmZWN0IGlmIGFwYXJ0IGZyb20gcmV0dXJu
aW5nIGEgdmFsdWUsIGl0IGludGVyYWN0cyB3aXRoIChyZWFkcyBmcm9tIG9y
IHdyaXRlcyB0bykgZXh0ZXJuYWwgbXV0YWJsZSBzdGF0ZS4KCmBgYGpzCmNv
bnN0IGRpZmZlcmVudEV2ZXJ5VGltZSA9IG5ldyBEYXRlKCkKYGBgCgpgYGBq
cwpjb25zb2xlLmxvZygnSU8gaXMgYSBzaWRlIGVmZmVjdCEnKQpgYGAKCiMj
IElkZW1wb3RlbnQKCkEgZnVuY3Rpb24gaXMgaWRlbXBvdGVudCBpZiByZWFw
cGx5aW5nIGl0IHRvIGl0cyByZXN1bHQgZG9lcyBub3QgcHJvZHVjZSBhIGRp
ZmZlcmVudCByZXN1bHQuCgpgYGAKZihmKHgpKSDiiY0gZih4KQpgYGAKCmBg
YGpzCk1hdGguYWJzKE1hdGguYWJzKDEwKSkKYGBgCgpgYGBqcwpzb3J0KHNv
cnQoc29ydChbMiwgMV0pKSkKYGBgCgojIyBQb2ludC1GcmVlIFN0eWxlCgpX
cml0aW5nIGZ1bmN0aW9ucyB3aGVyZSB0aGUgZGVmaW5pdGlvbiBkb2VzIG5v
dCBleHBsaWNpdGx5IGlkZW50aWZ5IHRoZSBhcmd1bWVudHMgdXNlZC4gVGhp
cyBzdHlsZSB1c3VhbGx5IHJlcXVpcmVzIFtjdXJyeWluZ10oI2N1cnJ5aW5n
KSBvciBvdGhlciBbSGlnaGVyLU9yZGVyIGZ1bmN0aW9uc10oI2hpZ2hlci1v
cmRlci1mdW5jdGlvbnMtaG9mKS4gQS5LLkEgVGFjaXQgcHJvZ3JhbW1pbmcu
CgpgYGBqcwovLyBHaXZlbgpjb25zdCBtYXAgPSAoZm4pID0+IChsaXN0KSA9
PiBsaXN0Lm1hcChmbikKY29uc3QgYWRkID0gKGEpID0+IChiKSA9PiBhICsg
YgoKLy8gVGhlbgoKLy8gTm90IHBvaW50cy1mcmVlIC0gYG51bWJlcnNgIGlz
IGFuIGV4cGxpY2l0IGFyZ3VtZW50CmNvbnN0IGluY3JlbWVudEFsbCA9IChu
dW1iZXJzKSA9PiBtYXAoYWRkKDEpKShudW1iZXJzKQoKLy8gUG9pbnRzLWZy
ZWUgLSBUaGUgbGlzdCBpcyBhbiBpbXBsaWNpdCBhcmd1bWVudApjb25zdCBp
bmNyZW1lbnRBbGwyID0gbWFwKGFkZCgxKSkKYGBgCgpgaW5jcmVtZW50QWxs
YCBpZGVudGlmaWVzIGFuZCB1c2VzIHRoZSBwYXJhbWV0ZXIgYG51bWJlcnNg
LCBzbyBpdCBpcyBub3QgcG9pbnRzLWZyZWUuICBgaW5jcmVtZW50QWxsMmAg
aXMgd3JpdHRlbiBqdXN0IGJ5IGNvbWJpbmluZyBmdW5jdGlvbnMgYW5kIHZh
bHVlcywgbWFraW5nIG5vIG1lbnRpb24gb2YgaXRzIGFyZ3VtZW50cy4gIEl0
IF9faXNfXyBwb2ludHMtZnJlZS4KClBvaW50cy1mcmVlIGZ1bmN0aW9uIGRl
ZmluaXRpb25zIGxvb2sganVzdCBsaWtlIG5vcm1hbCBhc3NpZ25tZW50cyB3
aXRob3V0IGBmdW5jdGlvbmAgb3IgYD0+YC4KCiMjIFByZWRpY2F0ZQpBIHBy
ZWRpY2F0ZSBpcyBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyB0cnVlIG9yIGZh
bHNlIGZvciBhIGdpdmVuIHZhbHVlLiBBIGNvbW1vbiB1c2Ugb2YgYSBwcmVk
aWNhdGUgaXMgYXMgdGhlIGNhbGxiYWNrIGZvciBhcnJheSBmaWx0ZXIuCgpg
YGBqcwpjb25zdCBwcmVkaWNhdGUgPSAoYSkgPT4gYSA+IDIKCjtbMSwgMiwg
MywgNF0uZmlsdGVyKHByZWRpY2F0ZSkgLy8gWzMsIDRdCmBgYAoKIyMgQ29u
dHJhY3RzCgpBIGNvbnRyYWN0IHNwZWNpZmllcyB0aGUgb2JsaWdhdGlvbnMg
YW5kIGd1YXJhbnRlZXMgb2YgdGhlIGJlaGF2aW9yIGZyb20gYSBmdW5jdGlv
biBvciBleHByZXNzaW9uIGF0IHJ1bnRpbWUuIFRoaXMgYWN0cyBhcyBhIHNl
dCBvZiBydWxlcyB0aGF0IGFyZSBleHBlY3RlZCBmcm9tIHRoZSBpbnB1dCBh
bmQgb3V0cHV0IG9mIGEgZnVuY3Rpb24gb3IgZXhwcmVzc2lvbiwgYW5kIGVy
cm9ycyBhcmUgZ2VuZXJhbGx5IHJlcG9ydGVkIHdoZW5ldmVyIGEgY29udHJh
Y3QgaXMgdmlvbGF0ZWQuCgpgYGBqcwovLyBEZWZpbmUgb3VyIGNvbnRyYWN0
IDogaW50IC0+IGJvb2xlYW4KY29uc3QgY29udHJhY3QgPSAoaW5wdXQpID0+
IHsKICBpZiAodHlwZW9mIGlucHV0ID09PSAnbnVtYmVyJykgcmV0dXJuIHRy
dWUKICB0aHJvdyBuZXcgRXJyb3IoJ0NvbnRyYWN0IHZpb2xhdGVkOiBleHBl
Y3RlZCBpbnQgLT4gYm9vbGVhbicpCn0KCmNvbnN0IGFkZE9uZSA9IChudW0p
ID0+IGNvbnRyYWN0KG51bSkgJiYgbnVtICsgMQoKYWRkT25lKDIpIC8vIDMK
YWRkT25lKCdzb21lIHN0cmluZycpIC8vIENvbnRyYWN0IHZpb2xhdGVkOiBl
eHBlY3RlZCBpbnQgLT4gYm9vbGVhbgpgYGAKCiMjIENhdGVnb3J5CgpBIGNh
dGVnb3J5IGluIGNhdGVnb3J5IHRoZW9yeSBpcyBhIGNvbGxlY3Rpb24gb2Yg
b2JqZWN0cyBhbmQgbW9ycGhpc21zIGJldHdlZW4gdGhlbS4gSW4gcHJvZ3Jh
bW1pbmcsIHR5cGljYWxseSB0eXBlcwphY3QgYXMgdGhlIG9iamVjdHMgYW5k
IGZ1bmN0aW9ucyBhcyBtb3JwaGlzbXMuCgpUbyBiZSBhIHZhbGlkIGNhdGVn
b3J5IDMgcnVsZXMgbXVzdCBiZSBtZXQ6CgoxLiBUaGVyZSBtdXN0IGJlIGFu
IGlkZW50aXR5IG1vcnBoaXNtIHRoYXQgbWFwcyBhbiBvYmplY3QgdG8gaXRz
ZWxmLgogICAgV2hlcmUgYGFgIGlzIGFuIG9iamVjdCBpbiBzb21lIGNhdGVn
b3J5LAogICAgdGhlcmUgbXVzdCBiZSBhIGZ1bmN0aW9uIGZyb20gYGEgLT4g
YWAuCjIuIE1vcnBoaXNtcyBtdXN0IGNvbXBvc2UuCiAgICBXaGVyZSBgYWAs
IGBiYCwgYW5kIGBjYCBhcmUgb2JqZWN0cyBpbiBzb21lIGNhdGVnb3J5LAog
ICAgYW5kIGBmYCBpcyBhIG1vcnBoaXNtIGZyb20gYGEgLT4gYmAsIGFuZCBg
Z2AgaXMgYSBtb3JwaGlzbSBmcm9tIGBiIC0+IGNgOwogICAgYGcoZih4KSlg
IG11c3QgYmUgZXF1aXZhbGVudCB0byBgKGcg4oCiIGYpKHgpYC4KMy4gQ29t
cG9zaXRpb24gbXVzdCBiZSBhc3NvY2lhdGl2ZQogICAgYGYg4oCiIChnIOKA
oiBoKWAgaXMgdGhlIHNhbWUgYXMgYChmIOKAoiBnKSDigKIgaGAKClNpbmNl
IHRoZXNlIHJ1bGVzIGdvdmVybiBjb21wb3NpdGlvbiBhdCB2ZXJ5IGFic3Ry
YWN0IGxldmVsLCBjYXRlZ29yeSB0aGVvcnkgaXMgZ3JlYXQgYXQgdW5jb3Zl
cmluZyBuZXcgd2F5cyBvZiBjb21wb3NpbmcgdGhpbmdzLgoKX19GdXJ0aGVy
IHJlYWRpbmdfXwoKKiBbQ2F0ZWdvcnkgVGhlb3J5IGZvciBQcm9ncmFtbWVy
c10oaHR0cHM6Ly9iYXJ0b3N6bWlsZXdza2kuY29tLzIwMTQvMTAvMjgvY2F0
ZWdvcnktdGhlb3J5LWZvci1wcm9ncmFtbWVycy10aGUtcHJlZmFjZS8pCgoj
IyBWYWx1ZQoKQW55dGhpbmcgdGhhdCBjYW4gYmUgYXNzaWduZWQgdG8gYSB2
YXJpYWJsZS4KCmBgYGpzCjUKT2JqZWN0LmZyZWV6ZSh7bmFtZTogJ0pvaG4n
LCBhZ2U6IDMwfSkgLy8gVGhlIGBmcmVlemVgIGZ1bmN0aW9uIGVuZm9yY2Vz
IGltbXV0YWJpbGl0eS4KOyhhKSA9PiBhCjtbMV0KdW5kZWZpbmVkCmBgYAoK
IyMgQ29uc3RhbnQKCkEgdmFyaWFibGUgdGhhdCBjYW5ub3QgYmUgcmVhc3Np
Z25lZCBvbmNlIGRlZmluZWQuCgpgYGBqcwpjb25zdCBmaXZlID0gNQpjb25z
dCBqb2huID0gT2JqZWN0LmZyZWV6ZSh7bmFtZTogJ0pvaG4nLCBhZ2U6IDMw
fSkKYGBgCgpDb25zdGFudHMgYXJlIFtyZWZlcmVudGlhbGx5IHRyYW5zcGFy
ZW50XSgjcmVmZXJlbnRpYWwtdHJhbnNwYXJlbmN5KS4gVGhhdCBpcywgdGhl
eSBjYW4gYmUgcmVwbGFjZWQgd2l0aCB0aGUgdmFsdWVzIHRoYXQgdGhleSBy
ZXByZXNlbnQgd2l0aG91dCBhZmZlY3RpbmcgdGhlIHJlc3VsdC4KCldpdGgg
dGhlIGFib3ZlIHR3byBjb25zdGFudHMgdGhlIGZvbGxvd2luZyBleHByZXNz
aW9uIHdpbGwgYWx3YXlzIHJldHVybiBgdHJ1ZWAuCgpgYGBqcwpqb2huLmFn
ZSArIGZpdmUgPT09ICh7bmFtZTogJ0pvaG4nLCBhZ2U6IDMwfSkuYWdlICsg
KDUpCmBgYAoKIyMgRnVuY3RvcgoKQW4gb2JqZWN0IHRoYXQgaW1wbGVtZW50
cyBhIGBtYXBgIGZ1bmN0aW9uIHdoaWNoLCB3aGlsZSBydW5uaW5nIG92ZXIg
ZWFjaCB2YWx1ZSBpbiB0aGUgb2JqZWN0IHRvIHByb2R1Y2UgYSBuZXcgb2Jq
ZWN0LCBhZGhlcmVzIHRvIHR3byBydWxlczoKCl9fUHJlc2VydmVzIGlkZW50
aXR5X18KYGBgCm9iamVjdC5tYXAoeCA9PiB4KSDiiY0gb2JqZWN0CmBgYAoK
X19Db21wb3NhYmxlX18KCmBgYApvYmplY3QubWFwKGNvbXBvc2UoZiwgZykp
IOKJjSBvYmplY3QubWFwKGcpLm1hcChmKQpgYGAKCihgZmAsIGBnYCBhcmUg
YXJiaXRyYXJ5IGZ1bmN0aW9ucykKCkEgY29tbW9uIGZ1bmN0b3IgaW4gSmF2
YVNjcmlwdCBpcyBgQXJyYXlgIHNpbmNlIGl0IGFiaWRlcyB0byB0aGUgdHdv
IGZ1bmN0b3IgcnVsZXM6CgpgYGBqcwo7WzEsIDIsIDNdLm1hcCh4ID0+IHgp
IC8vID0gWzEsIDIsIDNdCmBgYAoKYW5kCgpgYGBqcwpjb25zdCBmID0geCA9
PiB4ICsgMQpjb25zdCBnID0geCA9PiB4ICogMgoKO1sxLCAyLCAzXS5tYXAo
eCA9PiBmKGcoeCkpKSAvLyA9IFszLCA1LCA3XQo7WzEsIDIsIDNdLm1hcChn
KS5tYXAoZikgICAgIC8vID0gWzMsIDUsIDddCmBgYAoKIyMgUG9pbnRlZCBG
dW5jdG9yCkFuIG9iamVjdCB3aXRoIGFuIGBvZmAgZnVuY3Rpb24gdGhhdCBw
dXRzIF9hbnlfIHNpbmdsZSB2YWx1ZSBpbnRvIGl0LgoKRVMyMDE1IGFkZHMg
YEFycmF5Lm9mYCBtYWtpbmcgYXJyYXlzIGEgcG9pbnRlZCBmdW5jdG9yLgoK
YGBganMKQXJyYXkub2YoMSkgLy8gWzFdCmBgYAoKIyMgTGlmdAoKTGlmdGlu
ZyBpcyB3aGVuIHlvdSB0YWtlIGEgdmFsdWUgYW5kIHB1dCBpdCBpbnRvIGFu
IG9iamVjdCBsaWtlIGEgW2Z1bmN0b3JdKCNwb2ludGVkLWZ1bmN0b3IpLiBJ
ZiB5b3UgbGlmdCBhIGZ1bmN0aW9uIGludG8gYW4gW0FwcGxpY2F0aXZlIEZ1
bmN0b3JdKCNhcHBsaWNhdGl2ZS1mdW5jdG9yKSB0aGVuIHlvdSBjYW4gbWFr
ZSBpdCB3b3JrIG9uIHZhbHVlcyB0aGF0IGFyZSBhbHNvIGluIHRoYXQgZnVu
Y3Rvci4KClNvbWUgaW1wbGVtZW50YXRpb25zIGhhdmUgYSBmdW5jdGlvbiBj
YWxsZWQgYGxpZnRgLCBvciBgbGlmdEEyYCB0byBtYWtlIGl0IGVhc2llciB0
byBydW4gZnVuY3Rpb25zIG9uIGZ1bmN0b3JzLgoKYGBganMKY29uc3QgbGlm
dEEyID0gKGYpID0+IChhLCBiKSA9PiBhLm1hcChmKS5hcChiKSAvLyBub3Rl
IGl0J3MgYGFwYCBhbmQgbm90IGBtYXBgLgoKY29uc3QgbXVsdCA9IGEgPT4g
YiA9PiBhICogYgoKY29uc3QgbGlmdGVkTXVsdCA9IGxpZnRBMihtdWx0KSAv
LyB0aGlzIGZ1bmN0aW9uIG5vdyB3b3JrcyBvbiBmdW5jdG9ycyBsaWtlIGFy
cmF5CgpsaWZ0ZWRNdWx0KFsxLCAyXSwgWzNdKSAvLyBbMywgNl0KbGlmdEEy
KGEgPT4gYiA9PiBhICsgYikoWzEsIDJdLCBbMywgNF0pIC8vIFs0LCA1LCA1
LCA2XQpgYGAKCkxpZnRpbmcgYSBvbmUtYXJndW1lbnQgZnVuY3Rpb24gYW5k
IGFwcGx5aW5nIGl0IGRvZXMgdGhlIHNhbWUgdGhpbmcgYXMgYG1hcGAuCgpg
YGBqcwpjb25zdCBpbmNyZW1lbnQgPSAoeCkgPT4geCArIDEKCmxpZnQoaW5j
cmVtZW50KShbMl0pIC8vIFszXQo7WzJdLm1hcChpbmNyZW1lbnQpIC8vIFsz
XQpgYGAKCgojIyBSZWZlcmVudGlhbCBUcmFuc3BhcmVuY3kKCkFuIGV4cHJl
c3Npb24gdGhhdCBjYW4gYmUgcmVwbGFjZWQgd2l0aCBpdHMgdmFsdWUgd2l0
aG91dCBjaGFuZ2luZyB0aGUKYmVoYXZpb3Igb2YgdGhlIHByb2dyYW0gaXMg
c2FpZCB0byBiZSByZWZlcmVudGlhbGx5IHRyYW5zcGFyZW50LgoKU2F5IHdl
IGhhdmUgZnVuY3Rpb24gZ3JlZXQ6CgpgYGBqcwpjb25zdCBncmVldCA9ICgp
ID0+ICdIZWxsbyBXb3JsZCEnCmBgYAoKQW55IGludm9jYXRpb24gb2YgYGdy
ZWV0KClgIGNhbiBiZSByZXBsYWNlZCB3aXRoIGBIZWxsbyBXb3JsZCFgIGhl
bmNlIGdyZWV0IGlzCnJlZmVyZW50aWFsbHkgdHJhbnNwYXJlbnQuCgojIyAg
RXF1YXRpb25hbCBSZWFzb25pbmcKCldoZW4gYW4gYXBwbGljYXRpb24gaXMg
Y29tcG9zZWQgb2YgZXhwcmVzc2lvbnMgYW5kIGRldm9pZCBvZiBzaWRlIGVm
ZmVjdHMsIHRydXRocyBhYm91dCB0aGUgc3lzdGVtIGNhbiBiZSBkZXJpdmVk
IGZyb20gdGhlIHBhcnRzLgoKIyMgTGFtYmRhCgpBbiBhbm9ueW1vdXMgZnVu
Y3Rpb24gdGhhdCBjYW4gYmUgdHJlYXRlZCBsaWtlIGEgdmFsdWUuCgpgYGBq
cwo7KGZ1bmN0aW9uIChhKSB7CiAgcmV0dXJuIGEgKyAxCn0pCgo7KGEpID0+
IGEgKyAxCmBgYApMYW1iZGFzIGFyZSBvZnRlbiBwYXNzZWQgYXMgYXJndW1l
bnRzIHRvIEhpZ2hlci1PcmRlciBmdW5jdGlvbnMuCgpgYGBqcwo7WzEsIDJd
Lm1hcCgoYSkgPT4gYSArIDEpIC8vIFsyLCAzXQpgYGAKCllvdSBjYW4gYXNz
aWduIGEgbGFtYmRhIHRvIGEgdmFyaWFibGUuCgpgYGBqcwpjb25zdCBhZGQx
ID0gKGEpID0+IGEgKyAxCmBgYAoKIyMgTGFtYmRhIENhbGN1bHVzCkEgYnJh
bmNoIG9mIG1hdGhlbWF0aWNzIHRoYXQgdXNlcyBmdW5jdGlvbnMgdG8gY3Jl
YXRlIGEgW3VuaXZlcnNhbCBtb2RlbCBvZiBjb21wdXRhdGlvbl0oaHR0cHM6
Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTGFtYmRhX2NhbGN1bHVzKS4KCiMj
IExhenkgZXZhbHVhdGlvbgoKTGF6eSBldmFsdWF0aW9uIGlzIGEgY2FsbC1i
eS1uZWVkIGV2YWx1YXRpb24gbWVjaGFuaXNtIHRoYXQgZGVsYXlzIHRoZSBl
dmFsdWF0aW9uIG9mIGFuIGV4cHJlc3Npb24gdW50aWwgaXRzIHZhbHVlIGlz
IG5lZWRlZC4gSW4gZnVuY3Rpb25hbCBsYW5ndWFnZXMsIHRoaXMgYWxsb3dz
IGZvciBzdHJ1Y3R1cmVzIGxpa2UgaW5maW5pdGUgbGlzdHMsIHdoaWNoIHdv
dWxkIG5vdCBub3JtYWxseSBiZSBhdmFpbGFibGUgaW4gYW4gaW1wZXJhdGl2
ZSBsYW5ndWFnZSB3aGVyZSB0aGUgc2VxdWVuY2luZyBvZiBjb21tYW5kcyBp
cyBzaWduaWZpY2FudC4KCmBgYGpzCmNvbnN0IHJhbmQgPSBmdW5jdGlvbioo
KSB7CiAgd2hpbGUgKDEgPCAyKSB7CiAgICB5aWVsZCBNYXRoLnJhbmRvbSgp
CiAgfQp9CmBgYAoKYGBganMKY29uc3QgcmFuZEl0ZXIgPSByYW5kKCkKcmFu
ZEl0ZXIubmV4dCgpIC8vIEVhY2ggZXhlY3V0aW9uIGdpdmVzIGEgcmFuZG9t
IHZhbHVlLCBleHByZXNzaW9uIGlzIGV2YWx1YXRlZCBvbiBuZWVkLgpgYGAK
CiMjIE1vbm9pZAoKQW4gb2JqZWN0IHdpdGggYSBmdW5jdGlvbiB0aGF0ICJj
b21iaW5lcyIgdGhhdCBvYmplY3Qgd2l0aCBhbm90aGVyIG9mIHRoZSBzYW1l
IHR5cGUuCgpPbmUgc2ltcGxlIG1vbm9pZCBpcyB0aGUgYWRkaXRpb24gb2Yg
bnVtYmVyczoKCmBgYGpzCjEgKyAxIC8vIDIKYGBgCkluIHRoaXMgY2FzZSBu
dW1iZXIgaXMgdGhlIG9iamVjdCBhbmQgYCtgIGlzIHRoZSBmdW5jdGlvbi4K
CkFuICJpZGVudGl0eSIgdmFsdWUgbXVzdCBhbHNvIGV4aXN0IHRoYXQgd2hl
biBjb21iaW5lZCB3aXRoIGEgdmFsdWUgZG9lc24ndCBjaGFuZ2UgaXQuCgpU
aGUgaWRlbnRpdHkgdmFsdWUgZm9yIGFkZGl0aW9uIGlzIGAwYC4KYGBganMK
MSArIDAgLy8gMQpgYGAKCkl0J3MgYWxzbyByZXF1aXJlZCB0aGF0IHRoZSBn
cm91cGluZyBvZiBvcGVyYXRpb25zIHdpbGwgbm90IGFmZmVjdCB0aGUgcmVz
dWx0IChhc3NvY2lhdGl2aXR5KToKCmBgYGpzCjEgKyAoMiArIDMpID09PSAo
MSArIDIpICsgMyAvLyB0cnVlCmBgYAoKQXJyYXkgY29uY2F0ZW5hdGlvbiBh
bHNvIGZvcm1zIGEgbW9ub2lkOgoKYGBganMKO1sxLCAyXS5jb25jYXQoWzMs
IDRdKSAvLyBbMSwgMiwgMywgNF0KYGBgCgpUaGUgaWRlbnRpdHkgdmFsdWUg
aXMgZW1wdHkgYXJyYXkgYFtdYAoKYGBganMKO1sxLCAyXS5jb25jYXQoW10p
IC8vIFsxLCAyXQpgYGAKCklmIGlkZW50aXR5IGFuZCBjb21wb3NlIGZ1bmN0
aW9ucyBhcmUgcHJvdmlkZWQsIGZ1bmN0aW9ucyB0aGVtc2VsdmVzIGZvcm0g
YSBtb25vaWQ6CgpgYGBqcwpjb25zdCBpZGVudGl0eSA9IChhKSA9PiBhCmNv
bnN0IGNvbXBvc2UgPSAoZiwgZykgPT4gKHgpID0+IGYoZyh4KSkKYGBgCmBm
b29gIGlzIGFueSBmdW5jdGlvbiB0aGF0IHRha2VzIG9uZSBhcmd1bWVudC4K
YGBgCmNvbXBvc2UoZm9vLCBpZGVudGl0eSkg4omNIGNvbXBvc2UoaWRlbnRp
dHksIGZvbykg4omNIGZvbwpgYGAKCiMjIE1vbmFkCgpBIG1vbmFkIGlzIGFu
IG9iamVjdCB3aXRoIFtgb2ZgXSgjcG9pbnRlZC1mdW5jdG9yKSBhbmQgYGNo
YWluYCBmdW5jdGlvbnMuIGBjaGFpbmAgaXMgbGlrZSBbYG1hcGBdKCNmdW5j
dG9yKSBleGNlcHQgaXQgdW4tbmVzdHMgdGhlIHJlc3VsdGluZyBuZXN0ZWQg
b2JqZWN0LgoKYGBganMKLy8gSW1wbGVtZW50YXRpb24KQXJyYXkucHJvdG90
eXBlLmNoYWluID0gZnVuY3Rpb24gKGYpIHsKICByZXR1cm4gdGhpcy5yZWR1
Y2UoKGFjYywgaXQpID0+IGFjYy5jb25jYXQoZihpdCkpLCBbXSkKfQoKLy8g
VXNhZ2UKQXJyYXkub2YoJ2NhdCxkb2cnLCAnZmlzaCxiaXJkJykuY2hhaW4o
KGEpID0+IGEuc3BsaXQoJywnKSkgLy8gWydjYXQnLCAnZG9nJywgJ2Zpc2gn
LCAnYmlyZCddCgovLyBDb250cmFzdCB0byBtYXAKQXJyYXkub2YoJ2NhdCxk
b2cnLCAnZmlzaCxiaXJkJykubWFwKChhKSA9PiBhLnNwbGl0KCcsJykpIC8v
IFtbJ2NhdCcsICdkb2cnXSwgWydmaXNoJywgJ2JpcmQnXV0KYGBgCgpgb2Zg
IGlzIGFsc28ga25vd24gYXMgYHJldHVybmAgaW4gb3RoZXIgZnVuY3Rpb25h
bCBsYW5ndWFnZXMuCmBjaGFpbmAgaXMgYWxzbyBrbm93biBhcyBgZmxhdG1h
cGAgYW5kIGBiaW5kYCBpbiBvdGhlciBsYW5ndWFnZXMuCgojIyBDb21vbmFk
CgpBbiBvYmplY3QgdGhhdCBoYXMgYGV4dHJhY3RgIGFuZCBgZXh0ZW5kYCBm
dW5jdGlvbnMuCgpgYGBqcwpjb25zdCBDb0lkZW50aXR5ID0gKHYpID0+ICh7
CiAgdmFsOiB2LAogIGV4dHJhY3QgKCkgewogICAgcmV0dXJuIHRoaXMudmFs
CiAgfSwKICBleHRlbmQgKGYpIHsKICAgIHJldHVybiBDb0lkZW50aXR5KGYo
dGhpcykpCiAgfQp9KQpgYGAKCkV4dHJhY3QgdGFrZXMgYSB2YWx1ZSBvdXQg
b2YgYSBmdW5jdG9yLgoKYGBganMKQ29JZGVudGl0eSgxKS5leHRyYWN0KCkg
Ly8gMQpgYGAKCkV4dGVuZCBydW5zIGEgZnVuY3Rpb24gb24gdGhlIGNvbW9u
YWQuIFRoZSBmdW5jdGlvbiBzaG91bGQgcmV0dXJuIHRoZSBzYW1lIHR5cGUg
YXMgdGhlIGNvbW9uYWQuCgpgYGBqcwpDb0lkZW50aXR5KDEpLmV4dGVuZCgo
Y28pID0+IGNvLmV4dHJhY3QoKSArIDEpIC8vIENvSWRlbnRpdHkoMikKYGBg
CgojIyBBcHBsaWNhdGl2ZSBGdW5jdG9yCgpBbiBhcHBsaWNhdGl2ZSBmdW5j
dG9yIGlzIGFuIG9iamVjdCB3aXRoIGFuIGBhcGAgZnVuY3Rpb24uIGBhcGAg
YXBwbGllcyBhIGZ1bmN0aW9uIGluIHRoZSBvYmplY3QgdG8gYSB2YWx1ZSBp
biBhbm90aGVyIG9iamVjdCBvZiB0aGUgc2FtZSB0eXBlLgoKYGBganMKLy8g
SW1wbGVtZW50YXRpb24KQXJyYXkucHJvdG90eXBlLmFwID0gZnVuY3Rpb24g
KHhzKSB7CiAgcmV0dXJuIHRoaXMucmVkdWNlKChhY2MsIGYpID0+IGFjYy5j
b25jYXQoeHMubWFwKGYpKSwgW10pCn0KCi8vIEV4YW1wbGUgdXNhZ2UKO1so
YSkgPT4gYSArIDFdLmFwKFsxXSkgLy8gWzJdCmBgYAoKVGhpcyBpcyB1c2Vm
dWwgaWYgeW91IGhhdmUgdHdvIG9iamVjdHMgYW5kIHlvdSB3YW50IHRvIGFw
cGx5IGEgYmluYXJ5IGZ1bmN0aW9uIHRvIHRoZWlyIGNvbnRlbnRzLgoKYGBg
anMKLy8gQXJyYXlzIHRoYXQgeW91IHdhbnQgdG8gY29tYmluZQpjb25zdCBh
cmcxID0gWzEsIDNdCmNvbnN0IGFyZzIgPSBbNCwgNV0KCi8vIGNvbWJpbmlu
ZyBmdW5jdGlvbiAtIG11c3QgYmUgY3VycmllZCBmb3IgdGhpcyB0byB3b3Jr
CmNvbnN0IGFkZCA9ICh4KSA9PiAoeSkgPT4geCArIHkKCmNvbnN0IHBhcnRp
YWxseUFwcGxpZWRBZGRzID0gW2FkZF0uYXAoYXJnMSkgLy8gWyh5KSA9PiAx
ICsgeSwgKHkpID0+IDMgKyB5XQpgYGAKClRoaXMgZ2l2ZXMgeW91IGFuIGFy
cmF5IG9mIGZ1bmN0aW9ucyB0aGF0IHlvdSBjYW4gY2FsbCBgYXBgIG9uIHRv
IGdldCB0aGUgcmVzdWx0OgoKYGBganMKcGFydGlhbGx5QXBwbGllZEFkZHMu
YXAoYXJnMikgLy8gWzUsIDYsIDcsIDhdCmBgYAoKIyMgTW9ycGhpc20KCkEg
dHJhbnNmb3JtYXRpb24gZnVuY3Rpb24uCgojIyMgRW5kb21vcnBoaXNtCgpB
IGZ1bmN0aW9uIHdoZXJlIHRoZSBpbnB1dCB0eXBlIGlzIHRoZSBzYW1lIGFz
IHRoZSBvdXRwdXQuCgpgYGBqcwovLyB1cHBlcmNhc2UgOjogU3RyaW5nIC0+
IFN0cmluZwpjb25zdCB1cHBlcmNhc2UgPSAoc3RyKSA9PiBzdHIudG9VcHBl
ckNhc2UoKQoKLy8gZGVjcmVtZW50IDo6IE51bWJlciAtPiBOdW1iZXIKY29u
c3QgZGVjcmVtZW50ID0gKHgpID0+IHggLSAxCmBgYAoKIyMjIElzb21vcnBo
aXNtCgpBIHBhaXIgb2YgdHJhbnNmb3JtYXRpb25zIGJldHdlZW4gMiB0eXBl
cyBvZiBvYmplY3RzIHRoYXQgaXMgc3RydWN0dXJhbCBpbiBuYXR1cmUgYW5k
IG5vIGRhdGEgaXMgbG9zdC4KCkZvciBleGFtcGxlLCAyRCBjb29yZGluYXRl
cyBjb3VsZCBiZSBzdG9yZWQgYXMgYW4gYXJyYXkgYFsyLDNdYCBvciBvYmpl
Y3QgYHt4OiAyLCB5OiAzfWAuCgpgYGBqcwovLyBQcm92aWRpbmcgZnVuY3Rp
b25zIHRvIGNvbnZlcnQgaW4gYm90aCBkaXJlY3Rpb25zIG1ha2VzIHRoZW0g
aXNvbW9ycGhpYy4KY29uc3QgcGFpclRvQ29vcmRzID0gKHBhaXIpID0+ICh7
eDogcGFpclswXSwgeTogcGFpclsxXX0pCgpjb25zdCBjb29yZHNUb1BhaXIg
PSAoY29vcmRzKSA9PiBbY29vcmRzLngsIGNvb3Jkcy55XQoKY29vcmRzVG9Q
YWlyKHBhaXJUb0Nvb3JkcyhbMSwgMl0pKSAvLyBbMSwgMl0KCnBhaXJUb0Nv
b3Jkcyhjb29yZHNUb1BhaXIoe3g6IDEsIHk6IDJ9KSkgLy8ge3g6IDEsIHk6
IDJ9CmBgYAoKIyMjIEhvbW9tb3JwaGlzbQoKQSBob21vbW9ycGhpc20gaXMg
anVzdCBhIHN0cnVjdHVyZSBwcmVzZXJ2aW5nIG1hcC4gSW4gZmFjdCwgYSBm
dW5jdG9yIGlzIGp1c3QgYSBob21vbW9ycGhpc20gYmV0d2VlbiBjYXRlZ29y
aWVzIGFzIGl0IHByZXNlcnZlcyB0aGUgb3JpZ2luYWwgY2F0ZWdvcnkncyBz
dHJ1Y3R1cmUgdW5kZXIgdGhlIG1hcHBpbmcuCgpgYGBqcwpBLm9mKGYpLmFw
KEEub2YoeCkpID09IEEub2YoZih4KSkKCkVpdGhlci5vZihfLnRvVXBwZXIp
LmFwKEVpdGhlci5vZigib3Jlb3MiKSkgPT0gRWl0aGVyLm9mKF8udG9VcHBl
cigib3Jlb3MiKSkKYGBgCgojIyMgQ2F0YW1vcnBoaXNtCgpBIGByZWR1Y2VS
aWdodGAgZnVuY3Rpb24gdGhhdCBhcHBsaWVzIGEgZnVuY3Rpb24gYWdhaW5z
dCBhbiBhY2N1bXVsYXRvciBhbmQgZWFjaCB2YWx1ZSBvZiB0aGUgYXJyYXkg
KGZyb20gcmlnaHQtdG8tbGVmdCkgdG8gcmVkdWNlIGl0IHRvIGEgc2luZ2xl
IHZhbHVlLgoKYGBganMKY29uc3Qgc3VtID0geHMgPT4geHMucmVkdWNlUmln
aHQoKGFjYywgeCkgPT4gYWNjICsgeCwgMCkKCnN1bShbMSwgMiwgMywgNCwg
NV0pIC8vIDE1CmBgYAoKIyMjIEFuYW1vcnBoaXNtCgpBbiBgdW5mb2xkYCBm
dW5jdGlvbi4gQW4gYHVuZm9sZGAgaXMgdGhlIG9wcG9zaXRlIG9mIGBmb2xk
YCAoYHJlZHVjZWApLiBJdCBnZW5lcmF0ZXMgYSBsaXN0IGZyb20gYSBzaW5n
bGUgdmFsdWUuCgpgYGBqcwpjb25zdCB1bmZvbGQgPSAoZiwgc2VlZCkgPT4g
ewogIGZ1bmN0aW9uIGdvKGYsIHNlZWQsIGFjYykgewogICAgY29uc3QgcmVz
ID0gZihzZWVkKTsKICAgIHJldHVybiByZXMgPyBnbyhmLCByZXNbMV0sIGFj
Yy5jb25jYXQoW3Jlc1swXV0pKSA6IGFjYzsKICB9CiAgcmV0dXJuIGdvKGYs
IHNlZWQsIFtdKQp9CmBgYAoKYGBganMKY29uc3QgY291bnREb3duID0gbiA9
PiB1bmZvbGQoKG4pID0+IHsKICByZXR1cm4gbiA8PSAwID8gdW5kZWZpbmVk
IDogW24sIG4gLSAxXQp9LCBuKQoKY291bnREb3duKDUpIC8vIFs1LCA0LCAz
LCAyLCAxXQpgYGAKCiMjIyBIeWxvbW9ycGhpc20KClRoZSBjb21iaW5hdGlv
biBvZiBhbmFtb3JwaGlzbSBhbmQgY2F0YW1vcnBoaXNtLgoKIyMjIFBhcmFt
b3JwaGlzbQoKQSBmdW5jdGlvbiBqdXN0IGxpa2UgYHJlZHVjZVJpZ2h0YC4g
SG93ZXZlciwgdGhlcmUncyBhIGRpZmZlcmVuY2U6CgpJbiBwYXJhbW9ycGhp
c20sIHlvdXIgcmVkdWNlcidzIGFyZ3VtZW50cyBhcmUgdGhlIGN1cnJlbnQg
dmFsdWUsIHRoZSByZWR1Y3Rpb24gb2YgYWxsIHByZXZpb3VzIHZhbHVlcywg
YW5kIHRoZSBsaXN0IG9mIHZhbHVlcyB0aGF0IGZvcm1lZCB0aGF0IHJlZHVj
dGlvbi4KCmBgYGpzCi8vIE9idmlvdXNseSBub3Qgc2FmZSBmb3IgbGlzdHMg
Y29udGFpbmluZyBgdW5kZWZpbmVkYCwKLy8gYnV0IGdvb2QgZW5vdWdoIHRv
IG1ha2UgdGhlIHBvaW50Lgpjb25zdCBwYXJhID0gKHJlZHVjZXIsIGFjY3Vt
dWxhdG9yLCBlbGVtZW50cykgPT4gewogIGlmIChlbGVtZW50cy5sZW5ndGgg
PT09IDApCiAgICByZXR1cm4gYWNjdW11bGF0b3IKCiAgY29uc3QgaGVhZCA9
IGVsZW1lbnRzWzBdCiAgY29uc3QgdGFpbCA9IGVsZW1lbnRzLnNsaWNlKDEp
CgogIHJldHVybiByZWR1Y2VyKGhlYWQsIHRhaWwsIHBhcmEocmVkdWNlciwg
YWNjdW11bGF0b3IsIHRhaWwpKQp9Cgpjb25zdCBzdWZmaXhlcyA9IGxpc3Qg
PT4gcGFyYSgKICAoeCwgeHMsIHN1ZmZ4cykgPT4gW3hzLCAuLi4gc3VmZnhz
XSwKICBbXSwKICBsaXN0CikKCnN1ZmZpeGVzKFsxLCAyLCAzLCA0LCA1XSkg
Ly8gW1syLCAzLCA0LCA1XSwgWzMsIDQsIDVdLCBbNCwgNV0sIFs1XSwgW11d
CmBgYAoKVGhlIHRoaXJkIHBhcmFtZXRlciBpbiB0aGUgcmVkdWNlciAoaW4g
dGhlIGFib3ZlIGV4YW1wbGUsIGBbeCwgLi4uIHhzXWApIGlzIGtpbmQgb2Yg
bGlrZSBoYXZpbmcgYSBoaXN0b3J5IG9mIHdoYXQgZ290IHlvdSB0byB5b3Vy
IGN1cnJlbnQgYWNjIHZhbHVlLgoKIyMjIEFwb21vcnBoaXNtCgppdCdzIHRo
ZSBvcHBvc2l0ZSBvZiBwYXJhbW9ycGhpc20sIGp1c3QgYXMgYW5hbW9ycGhp
c20gaXMgdGhlIG9wcG9zaXRlIG9mIGNhdGFtb3JwaGlzbS4gV2hlcmVhcyB3
aXRoIHBhcmFtb3JwaGlzbSwgeW91IGNvbWJpbmUgd2l0aCBhY2Nlc3MgdG8g
dGhlIGFjY3VtdWxhdG9yIGFuZCB3aGF0IGhhcyBiZWVuIGFjY3VtdWxhdGVk
LCBhcG9tb3JwaGlzbSBsZXRzIHlvdSBgdW5mb2xkYCB3aXRoIHRoZSBwb3Rl
bnRpYWwgdG8gcmV0dXJuIGVhcmx5LgoKIyMgU2V0b2lkCgpBbiBvYmplY3Qg
dGhhdCBoYXMgYW4gYGVxdWFsc2AgZnVuY3Rpb24gd2hpY2ggY2FuIGJlIHVz
ZWQgdG8gY29tcGFyZSBvdGhlciBvYmplY3RzIG9mIHRoZSBzYW1lIHR5cGUu
CgpNYWtlIGFycmF5IGEgc2V0b2lkOgoKYGBganMKQXJyYXkucHJvdG90eXBl
LmVxdWFscyA9IGZ1bmN0aW9uIChhcnIpIHsKICBjb25zdCBsZW4gPSB0aGlz
Lmxlbmd0aAogIGlmIChsZW4gIT09IGFyci5sZW5ndGgpIHsKICAgIHJldHVy
biBmYWxzZQogIH0KICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgaSsrKSB7
CiAgICBpZiAodGhpc1tpXSAhPT0gYXJyW2ldKSB7CiAgICAgIHJldHVybiBm
YWxzZQogICAgfQogIH0KICByZXR1cm4gdHJ1ZQp9Cgo7WzEsIDJdLmVxdWFs
cyhbMSwgMl0pIC8vIHRydWUKO1sxLCAyXS5lcXVhbHMoWzBdKSAvLyBmYWxz
ZQpgYGAKCiMjIFNlbWlncm91cAoKQW4gb2JqZWN0IHRoYXQgaGFzIGEgYGNv
bmNhdGAgZnVuY3Rpb24gdGhhdCBjb21iaW5lcyBpdCB3aXRoIGFub3RoZXIg
b2JqZWN0IG9mIHRoZSBzYW1lIHR5cGUuCgpgYGBqcwo7WzFdLmNvbmNhdChb
Ml0pIC8vIFsxLCAyXQpgYGAKCiMjIEZvbGRhYmxlCgpBbiBvYmplY3QgdGhh
dCBoYXMgYSBgcmVkdWNlYCBmdW5jdGlvbiB0aGF0IGFwcGxpZXMgYSBmdW5j
dGlvbiBhZ2FpbnN0IGFuIGFjY3VtdWxhdG9yIGFuZCBlYWNoIGVsZW1lbnQg
aW4gdGhlIGFycmF5IChmcm9tIGxlZnQgdG8gcmlnaHQpIHRvIHJlZHVjZSBp
dCB0byBhIHNpbmdsZSB2YWx1ZS4KCmBgYGpzCmNvbnN0IHN1bSA9IChsaXN0
KSA9PiBsaXN0LnJlZHVjZSgoYWNjLCB2YWwpID0+IGFjYyArIHZhbCwgMCkK
c3VtKFsxLCAyLCAzXSkgLy8gNgpgYGAKCiMjIExlbnMgIyMKQSBsZW5zIGlz
IGEgc3RydWN0dXJlIChvZnRlbiBhbiBvYmplY3Qgb3IgZnVuY3Rpb24pIHRo
YXQgcGFpcnMgYSBnZXR0ZXIgYW5kIGEgbm9uLW11dGF0aW5nIHNldHRlciBm
b3Igc29tZSBvdGhlciBkYXRhCnN0cnVjdHVyZS4KCmBgYGpzCi8vIFVzaW5n
IFtSYW1kYSdzIGxlbnNdKGh0dHA6Ly9yYW1kYWpzLmNvbS9kb2NzLyNsZW5z
KQpjb25zdCBuYW1lTGVucyA9IFIubGVucygKICAvLyBnZXR0ZXIgZm9yIG5h
bWUgcHJvcGVydHkgb24gYW4gb2JqZWN0CiAgKG9iaikgPT4gb2JqLm5hbWUs
CiAgLy8gc2V0dGVyIGZvciBuYW1lIHByb3BlcnR5CiAgKHZhbCwgb2JqKSA9
PiBPYmplY3QuYXNzaWduKHt9LCBvYmosIHtuYW1lOiB2YWx9KQopCmBgYAoK
SGF2aW5nIHRoZSBwYWlyIG9mIGdldCBhbmQgc2V0IGZvciBhIGdpdmVuIGRh
dGEgc3RydWN0dXJlIGVuYWJsZXMgYSBmZXcga2V5IGZlYXR1cmVzLgoKYGBg
anMKY29uc3QgcGVyc29uID0ge25hbWU6ICdHZXJ0cnVkZSBCbGFuY2gnfQoK
Ly8gaW52b2tlIHRoZSBnZXR0ZXIKUi52aWV3KG5hbWVMZW5zLCBwZXJzb24p
IC8vICdHZXJ0cnVkZSBCbGFuY2gnCgovLyBpbnZva2UgdGhlIHNldHRlcgpS
LnNldChuYW1lTGVucywgJ1NoYWZpIEdvbGR3YXNzZXInLCBwZXJzb24pIC8v
IHtuYW1lOiAnU2hhZmkgR29sZHdhc3Nlcid9CgovLyBydW4gYSBmdW5jdGlv
biBvbiB0aGUgdmFsdWUgaW4gdGhlIHN0cnVjdHVyZQpSLm92ZXIobmFtZUxl
bnMsIHVwcGVyY2FzZSwgcGVyc29uKSAvLyB7bmFtZTogJ0dFUlRSVURFIEJM
QU5DSCd9CmBgYAoKTGVuc2VzIGFyZSBhbHNvIGNvbXBvc2FibGUuIFRoaXMg
YWxsb3dzIGVhc3kgaW1tdXRhYmxlIHVwZGF0ZXMgdG8gZGVlcGx5IG5lc3Rl
ZCBkYXRhLgoKYGBganMKLy8gVGhpcyBsZW5zIGZvY3VzZXMgb24gdGhlIGZp
cnN0IGl0ZW0gaW4gYSBub24tZW1wdHkgYXJyYXkKY29uc3QgZmlyc3RMZW5z
ID0gUi5sZW5zKAogIC8vIGdldCBmaXJzdCBpdGVtIGluIGFycmF5CiAgeHMg
PT4geHNbMF0sCiAgLy8gbm9uLW11dGF0aW5nIHNldHRlciBmb3IgZmlyc3Qg
aXRlbSBpbiBhcnJheQogICh2YWwsIFtfXywgLi4ueHNdKSA9PiBbdmFsLCAu
Li54c10KKQoKY29uc3QgcGVvcGxlID0gW3tuYW1lOiAnR2VydHJ1ZGUgQmxh
bmNoJ30sIHtuYW1lOiAnU2hhZmkgR29sZHdhc3Nlcid9XQoKLy8gRGVzcGl0
ZSB3aGF0IHlvdSBtYXkgYXNzdW1lLCBsZW5zZXMgY29tcG9zZSBsZWZ0LXRv
LXJpZ2h0LgpSLm92ZXIoY29tcG9zZShmaXJzdExlbnMsIG5hbWVMZW5zKSwg
dXBwZXJjYXNlLCBwZW9wbGUpIC8vIFt7J25hbWUnOiAnR0VSVFJVREUgQkxB
TkNIJ30sIHsnbmFtZSc6ICdTaGFmaSBHb2xkd2Fzc2VyJ31dCmBgYAoKT3Ro
ZXIgaW1wbGVtZW50YXRpb25zOgoqIFtwYXJ0aWFsLmxlbnNlc10oaHR0cHM6
Ly9naXRodWIuY29tL2NhbG1tLWpzL3BhcnRpYWwubGVuc2VzKSAtIFRhc3R5
IHN5bnRheCBzdWdhciBhbmQgYSBsb3Qgb2YgcG93ZXJmdWwgZmVhdHVyZXMK
KiBbbmFub3Njb3BlXShodHRwOi8vd3d3LmtvdmFjaC5tZS9uYW5vc2NvcGUv
KSAtIEZsdWVudC1pbnRlcmZhY2UKCiMjIFR5cGUgU2lnbmF0dXJlcwoKT2Z0
ZW4gZnVuY3Rpb25zIGluIEphdmFTY3JpcHQgd2lsbCBpbmNsdWRlIGNvbW1l
bnRzIHRoYXQgaW5kaWNhdGUgdGhlIHR5cGVzIG9mIHRoZWlyIGFyZ3VtZW50
cyBhbmQgcmV0dXJuIHZhbHVlcy4KClRoZXJlJ3MgcXVpdGUgYSBiaXQgb2Yg
dmFyaWFuY2UgYWNyb3NzIHRoZSBjb21tdW5pdHkgYnV0IHRoZXkgb2Z0ZW4g
Zm9sbG93IHRoZSBmb2xsb3dpbmcgcGF0dGVybnM6CgpgYGBqcwovLyBmdW5j
dGlvbk5hbWUgOjogZmlyc3RBcmdUeXBlIC0+IHNlY29uZEFyZ1R5cGUgLT4g
cmV0dXJuVHlwZQoKLy8gYWRkIDo6IE51bWJlciAtPiBOdW1iZXIgLT4gTnVt
YmVyCmNvbnN0IGFkZCA9ICh4KSA9PiAoeSkgPT4geCArIHkKCi8vIGluY3Jl
bWVudCA6OiBOdW1iZXIgLT4gTnVtYmVyCmNvbnN0IGluY3JlbWVudCA9ICh4
KSA9PiB4ICsgMQpgYGAKCklmIGEgZnVuY3Rpb24gYWNjZXB0cyBhbm90aGVy
IGZ1bmN0aW9uIGFzIGFuIGFyZ3VtZW50IGl0IGlzIHdyYXBwZWQgaW4gcGFy
ZW50aGVzZXMuCgpgYGBqcwovLyBjYWxsIDo6IChhIC0+IGIpIC0+IGEgLT4g
Ygpjb25zdCBjYWxsID0gKGYpID0+ICh4KSA9PiBmKHgpCmBgYAoKVGhlIGxl
dHRlcnMgYGFgLCBgYmAsIGBjYCwgYGRgIGFyZSB1c2VkIHRvIHNpZ25pZnkg
dGhhdCB0aGUgYXJndW1lbnQgY2FuIGJlIG9mIGFueSB0eXBlLiBUaGUgZm9s
bG93aW5nIHZlcnNpb24gb2YgYG1hcGAgdGFrZXMgYSBmdW5jdGlvbiB0aGF0
IHRyYW5zZm9ybXMgYSB2YWx1ZSBvZiBzb21lIHR5cGUgYGFgIGludG8gYW5v
dGhlciB0eXBlIGBiYCwgYW4gYXJyYXkgb2YgdmFsdWVzIG9mIHR5cGUgYGFg
LCBhbmQgcmV0dXJucyBhbiBhcnJheSBvZiB2YWx1ZXMgb2YgdHlwZSBgYmAu
CgpgYGBqcwovLyBtYXAgOjogKGEgLT4gYikgLT4gW2FdIC0+IFtiXQpjb25z
dCBtYXAgPSAoZikgPT4gKGxpc3QpID0+IGxpc3QubWFwKGYpCmBgYAoKX19G
dXJ0aGVyIHJlYWRpbmdfXwoqIFtSYW1kYSdzIHR5cGUgc2lnbmF0dXJlc10o
aHR0cHM6Ly9naXRodWIuY29tL3JhbWRhL3JhbWRhL3dpa2kvVHlwZS1TaWdu
YXR1cmVzKQoqIFtNb3N0bHkgQWRlcXVhdGUgR3VpZGVdKGh0dHBzOi8vZHJi
b29sZWFuLmdpdGJvb2tzLmlvL21vc3RseS1hZGVxdWF0ZS1ndWlkZS9jb250
ZW50L2NoNy5odG1sI3doYXRzLXlvdXItdHlwZSkKKiBbV2hhdCBpcyBIaW5k
bGV5LU1pbG5lcj9dKGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzM5OTM5
Mi8yMjQyNSkgb24gU3RhY2sgT3ZlcmZsb3cKCiMjIEFsZ2VicmFpYyBkYXRh
IHR5cGUKQSBjb21wb3NpdGUgdHlwZSBtYWRlIGZyb20gcHV0dGluZyBvdGhl
ciB0eXBlcyB0b2dldGhlci4gVHdvIGNvbW1vbiBjbGFzc2VzIG9mIGFsZ2Vi
cmFpYyB0eXBlcyBhcmUgW3N1bV0oI3N1bS10eXBlKSBhbmQgW3Byb2R1Y3Rd
KCNwcm9kdWN0LXR5cGUpLgoKIyMjIFN1bSB0eXBlCkEgU3VtIHR5cGUgaXMg
dGhlIGNvbWJpbmF0aW9uIG9mIHR3byB0eXBlcyB0b2dldGhlciBpbnRvIGFu
b3RoZXIgb25lLiBJdCBpcyBjYWxsZWQgc3VtIGJlY2F1c2UgdGhlIG51bWJl
ciBvZiBwb3NzaWJsZSB2YWx1ZXMgaW4gdGhlIHJlc3VsdCB0eXBlIGlzIHRo
ZSBzdW0gb2YgdGhlIGlucHV0IHR5cGVzLgoKSmF2YVNjcmlwdCBkb2Vzbid0
IGhhdmUgdHlwZXMgbGlrZSB0aGlzIGJ1dCB3ZSBjYW4gdXNlIGBTZXRgcyB0
byBwcmV0ZW5kOgpgYGBqcwovLyBpbWFnaW5lIHRoYXQgcmF0aGVyIHRoYW4g
c2V0cyBoZXJlIHdlIGhhdmUgdHlwZXMgdGhhdCBjYW4gb25seSBoYXZlIHRo
ZXNlIHZhbHVlcwpjb25zdCBib29scyA9IG5ldyBTZXQoW3RydWUsIGZhbHNl
XSkKY29uc3QgaGFsZlRydWUgPSBuZXcgU2V0KFsnaGFsZi10cnVlJ10pCgov
LyBUaGUgd2Vha0xvZ2ljIHR5cGUgY29udGFpbnMgdGhlIHN1bSBvZiB0aGUg
dmFsdWVzIGZyb20gYm9vbHMgYW5kIGhhbGZUcnVlCmNvbnN0IHdlYWtMb2dp
Y1ZhbHVlcyA9IG5ldyBTZXQoWy4uLmJvb2xzLCAuLi5oYWxmVHJ1ZV0pCmBg
YAoKU3VtIHR5cGVzIGFyZSBzb21ldGltZXMgY2FsbGVkIHVuaW9uIHR5cGVz
LCBkaXNjcmltaW5hdGVkIHVuaW9ucywgb3IgdGFnZ2VkIHVuaW9ucy4KClRo
ZXJlJ3MgYSBbY291cGxlXShodHRwczovL2dpdGh1Yi5jb20vcGFsZGVwaW5k
L3VuaW9uLXR5cGUpIFtsaWJyYXJpZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9w
dWZmbmZyZXNoL2RhZ2d5KSBpbiBKUyB3aGljaCBoZWxwIHdpdGggZGVmaW5p
bmcgYW5kIHVzaW5nIHVuaW9uIHR5cGVzLgoKRmxvdyBpbmNsdWRlcyBbdW5p
b24gdHlwZXNdKGh0dHBzOi8vZmxvdy5vcmcvZW4vZG9jcy90eXBlcy91bmlv
bnMvKSBhbmQgVHlwZVNjcmlwdCBoYXMgW0VudW1zXShodHRwczovL3d3dy50
eXBlc2NyaXB0bGFuZy5vcmcvZG9jcy9oYW5kYm9vay9lbnVtcy5odG1sKSB0
byBzZXJ2ZSB0aGUgc2FtZSByb2xlLgoKIyMjIFByb2R1Y3QgdHlwZQoKQSAq
KnByb2R1Y3QqKiB0eXBlIGNvbWJpbmVzIHR5cGVzIHRvZ2V0aGVyIGluIGEg
d2F5IHlvdSdyZSBwcm9iYWJseSBtb3JlIGZhbWlsaWFyIHdpdGg6CgpgYGBq
cwovLyBwb2ludCA6OiAoTnVtYmVyLCBOdW1iZXIpIC0+IHt4OiBOdW1iZXIs
IHk6IE51bWJlcn0KY29uc3QgcG9pbnQgPSAoeCwgeSkgPT4gKHsgeCwgeSB9
KQpgYGAKSXQncyBjYWxsZWQgYSBwcm9kdWN0IGJlY2F1c2UgdGhlIHRvdGFs
IHBvc3NpYmxlIHZhbHVlcyBvZiB0aGUgZGF0YSBzdHJ1Y3R1cmUgaXMgdGhl
IHByb2R1Y3Qgb2YgdGhlIGRpZmZlcmVudCB2YWx1ZXMuIE1hbnkgbGFuZ3Vh
Z2VzIGhhdmUgYSB0dXBsZSB0eXBlIHdoaWNoIGlzIHRoZSBzaW1wbGVzdCBm
b3JtdWxhdGlvbiBvZiBhIHByb2R1Y3QgdHlwZS4KClNlZSBhbHNvIFtTZXQg
dGhlb3J5XShodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9TZXRfdGhl
b3J5KS4KCiMjIE9wdGlvbgpPcHRpb24gaXMgYSBbc3VtIHR5cGVdKCNzdW0t
dHlwZSkgd2l0aCB0d28gY2FzZXMgb2Z0ZW4gY2FsbGVkIGBTb21lYCBhbmQg
YE5vbmVgLgoKT3B0aW9uIGlzIHVzZWZ1bCBmb3IgY29tcG9zaW5nIGZ1bmN0
aW9ucyB0aGF0IG1pZ2h0IG5vdCByZXR1cm4gYSB2YWx1ZS4KCmBgYGpzCi8v
IE5haXZlIGRlZmluaXRpb24KCmNvbnN0IFNvbWUgPSAodikgPT4gKHsKICB2
YWw6IHYsCiAgbWFwIChmKSB7CiAgICByZXR1cm4gU29tZShmKHRoaXMudmFs
KSkKICB9LAogIGNoYWluIChmKSB7CiAgICByZXR1cm4gZih0aGlzLnZhbCkK
ICB9Cn0pCgpjb25zdCBOb25lID0gKCkgPT4gKHsKICBtYXAgKGYpIHsKICAg
IHJldHVybiB0aGlzCiAgfSwKICBjaGFpbiAoZikgewogICAgcmV0dXJuIHRo
aXMKICB9Cn0pCgovLyBtYXliZVByb3AgOjogKFN0cmluZywge2F9KSAtPiBP
cHRpb24gYQpjb25zdCBtYXliZVByb3AgPSAoa2V5LCBvYmopID0+IHR5cGVv
ZiBvYmpba2V5XSA9PT0gJ3VuZGVmaW5lZCcgPyBOb25lKCkgOiBTb21lKG9i
altrZXldKQpgYGAKVXNlIGBjaGFpbmAgdG8gc2VxdWVuY2UgZnVuY3Rpb25z
IHRoYXQgcmV0dXJuIGBPcHRpb25gcwpgYGBqcwoKLy8gZ2V0SXRlbSA6OiBD
YXJ0IC0+IE9wdGlvbiBDYXJ0SXRlbQpjb25zdCBnZXRJdGVtID0gKGNhcnQp
ID0+IG1heWJlUHJvcCgnaXRlbScsIGNhcnQpCgovLyBnZXRQcmljZSA6OiBJ
dGVtIC0+IE9wdGlvbiBOdW1iZXIKY29uc3QgZ2V0UHJpY2UgPSAoaXRlbSkg
PT4gbWF5YmVQcm9wKCdwcmljZScsIGl0ZW0pCgovLyBnZXROZXN0ZWRQcmlj
ZSA6OiBjYXJ0IC0+IE9wdGlvbiBhCmNvbnN0IGdldE5lc3RlZFByaWNlID0g
KGNhcnQpID0+IGdldEl0ZW0oY2FydCkuY2hhaW4oZ2V0UHJpY2UpCgpnZXRO
ZXN0ZWRQcmljZSh7fSkgLy8gTm9uZSgpCmdldE5lc3RlZFByaWNlKHtpdGVt
OiB7Zm9vOiAxfX0pIC8vIE5vbmUoKQpnZXROZXN0ZWRQcmljZSh7aXRlbTog
e3ByaWNlOiA5Ljk5fX0pIC8vIFNvbWUoOS45OSkKYGBgCgpgT3B0aW9uYCBp
cyBhbHNvIGtub3duIGFzIGBNYXliZWAuIGBTb21lYCBpcyBzb21ldGltZXMg
Y2FsbGVkIGBKdXN0YC4gYE5vbmVgIGlzIHNvbWV0aW1lcyBjYWxsZWQgYE5v
dGhpbmdgLgoKIyMgRnVuY3Rpb24KQSAqKmZ1bmN0aW9uKiogYGYgOjogQSA9
PiBCYCBpcyBhbiBleHByZXNzaW9uIC0gb2Z0ZW4gY2FsbGVkIGFycm93IG9y
IGxhbWJkYSBleHByZXNzaW9uIC0gd2l0aCAqKmV4YWN0bHkgb25lIChpbW11
dGFibGUpKiogcGFyYW1ldGVyIG9mIHR5cGUgYEFgIGFuZCAqKmV4YWN0bHkg
b25lKiogcmV0dXJuIHZhbHVlIG9mIHR5cGUgYEJgLiBUaGF0IHZhbHVlIGRl
cGVuZHMgZW50aXJlbHkgb24gdGhlIGFyZ3VtZW50LCBtYWtpbmcgZnVuY3Rp
b25zIGNvbnRleHQtaW5kZXBlbmRhbnQsIG9yIFtyZWZlcmVudGlhbGx5IHRy
YW5zcGFyZW50XSgjcmVmZXJlbnRpYWwtdHJhbnNwYXJlbmN5KS4gV2hhdCBp
cyBpbXBsaWVkIGhlcmUgaXMgdGhhdCBhIGZ1bmN0aW9uIG11c3Qgbm90IHBy
b2R1Y2UgYW55IGhpZGRlbiBbc2lkZSBlZmZlY3RzXSgjc2lkZS1lZmZlY3Rz
KSAtIGEgZnVuY3Rpb24gaXMgYWx3YXlzIFtwdXJlXSgjcHVyaXR5KSwgYnkg
ZGVmaW5pdGlvbi4gVGhlc2UgcHJvcGVydGllcyBtYWtlIGZ1bmN0aW9ucyBw
bGVhc2FudCB0byB3b3JrIHdpdGg6IHRoZXkgYXJlIGVudGlyZWx5IGRldGVy
bWluaXN0aWMgYW5kIHRoZXJlZm9yZSBwcmVkaWN0YWJsZS4gRnVuY3Rpb25z
IGVuYWJsZSB3b3JraW5nIHdpdGggY29kZSBhcyBkYXRhLCBhYnN0cmFjdGlu
ZyBvdmVyIGJlaGF2aW91cjoKCmBgYGpzCi8vIHRpbWVzMiA6OiBOdW1iZXIg
LT4gTnVtYmVyCmNvbnN0IHRpbWVzMiA9IG4gPT4gbiAqIDIKClsxLCAyLCAz
XS5tYXAodGltZXMyKSAvLyBbMiwgNCwgNl0KYGBgCgojIyBQYXJ0aWFsIGZ1
bmN0aW9uCkEgcGFydGlhbCBmdW5jdGlvbiBpcyBhIFtmdW5jdGlvbl0oI2Z1
bmN0aW9uKSB3aGljaCBpcyBub3QgZGVmaW5lZCBmb3IgYWxsIGFyZ3VtZW50
cyAtIGl0IG1pZ2h0IHJldHVybiBhbiB1bmV4cGVjdGVkIHJlc3VsdCBvciBt
YXkgbmV2ZXIgdGVybWluYXRlLiBQYXJ0aWFsIGZ1bmN0aW9ucyBhZGQgY29n
bml0aXZlIG92ZXJoZWFkLCB0aGV5IGFyZSBoYXJkZXIgdG8gcmVhc29uIGFi
b3V0IGFuZCBjYW4gbGVhZCB0byBydW50aW1lIGVycm9ycy4gU29tZSBleGFt
cGxlczoKYGBganMKLy8gZXhhbXBsZSAxOiBzdW0gb2YgdGhlIGxpc3QKLy8g
c3VtIDo6IFtOdW1iZXJdIC0+IE51bWJlcgpjb25zdCBzdW0gPSBhcnIgPT4g
YXJyLnJlZHVjZSgoYSwgYikgPT4gYSArIGIpCnN1bShbMSwgMiwgM10pIC8v
IDYKc3VtKFtdKSAvLyBUeXBlRXJyb3I6IFJlZHVjZSBvZiBlbXB0eSBhcnJh
eSB3aXRoIG5vIGluaXRpYWwgdmFsdWUKCi8vIGV4YW1wbGUgMjogZ2V0IHRo
ZSBmaXJzdCBpdGVtIGluIGxpc3QKLy8gZmlyc3QgOjogW0FdIC0+IEEKY29u
c3QgZmlyc3QgPSBhID0+IGFbMF0KZmlyc3QoWzQyXSkgLy8gNDIKZmlyc3Qo
W10pIC8vIHVuZGVmaW5lZAovL29yIGV2ZW4gd29yc2U6CmZpcnN0KFtbNDJd
XSlbMF0gLy8gNDIKZmlyc3QoW10pWzBdIC8vIFVuY2F1Z2h0IFR5cGVFcnJv
cjogQ2Fubm90IHJlYWQgcHJvcGVydHkgJzAnIG9mIHVuZGVmaW5lZAoKLy8g
ZXhhbXBsZSAzOiByZXBlYXQgZnVuY3Rpb24gTiB0aW1lcwovLyB0aW1lcyA6
OiBOdW1iZXIgLT4gKE51bWJlciAtPiBOdW1iZXIpIC0+IE51bWJlcgpjb25z
dCB0aW1lcyA9IG4gPT4gZm4gPT4gbiAmJiAoZm4obiksIHRpbWVzKG4gLSAx
KShmbikpCnRpbWVzKDMpKGNvbnNvbGUubG9nKQovLyAzCi8vIDIKLy8gMQp0
aW1lcygtMSkoY29uc29sZS5sb2cpCi8vIFJhbmdlRXJyb3I6IE1heGltdW0g
Y2FsbCBzdGFjayBzaXplIGV4Y2VlZGVkCmBgYAoKIyMjIERlYWxpbmcgd2l0
aCBwYXJ0aWFsIGZ1bmN0aW9ucwpQYXJ0aWFsIGZ1bmN0aW9ucyBhcmUgZGFu
Z2Vyb3VzIGFzIHRoZXkgbmVlZCB0byBiZSB0cmVhdGVkIHdpdGggZ3JlYXQg
Y2F1dGlvbi4gWW91IG1pZ2h0IGdldCBhbiB1bmV4cGVjdGVkICh3cm9uZykg
cmVzdWx0IG9yIHJ1biBpbnRvIHJ1bnRpbWUgZXJyb3JzLiBTb21ldGltZXMg
YSBwYXJ0aWFsIGZ1bmN0aW9uIG1pZ2h0IG5vdCByZXR1cm4gYXQgYWxsLiBC
ZWluZyBhd2FyZSBvZiBhbmQgdHJlYXRpbmcgYWxsIHRoZXNlIGVkZ2UgY2Fz
ZXMgYWNjb3JkaW5nbHkgY2FuIGJlY29tZSB2ZXJ5IHRlZGlvdXMuCkZvcnR1
bmF0ZWx5IGEgcGFydGlhbCBmdW5jdGlvbiBjYW4gYmUgY29udmVydGVkIHRv
IGEgcmVndWxhciAob3IgdG90YWwpIG9uZS4gV2UgY2FuIHByb3ZpZGUgZGVm
YXVsdCB2YWx1ZXMgb3IgdXNlIGd1YXJkcyB0byBkZWFsIHdpdGggaW5wdXRz
IGZvciB3aGljaCB0aGUgKHByZXZpb3VzbHkpIHBhcnRpYWwgZnVuY3Rpb24g
aXMgdW5kZWZpbmVkLiBVdGlsaXppbmcgdGhlIFtgT3B0aW9uYF0oI09wdGlv
bikgdHlwZSwgd2UgY2FuIHlpZWxkIGVpdGhlciBgU29tZSh2YWx1ZSlgIG9y
IGBOb25lYCB3aGVyZSB3ZSB3b3VsZCBvdGhlcndpc2UgaGF2ZSBiZWhhdmVk
IHVuZXhwZWN0ZWRseToKYGBganMKLy8gZXhhbXBsZSAxOiBzdW0gb2YgdGhl
IGxpc3QKLy8gd2UgY2FuIHByb3ZpZGUgZGVmYXVsdCB2YWx1ZSBzbyBpdCB3
aWxsIGFsd2F5cyByZXR1cm4gcmVzdWx0Ci8vIHN1bSA6OiBbTnVtYmVyXSAt
PiBOdW1iZXIKY29uc3Qgc3VtID0gYXJyID0+IGFyci5yZWR1Y2UoKGEsIGIp
ID0+IGEgKyBiLCAwKQpzdW0oWzEsIDIsIDNdKSAvLyA2CnN1bShbXSkgLy8g
MAoKLy8gZXhhbXBsZSAyOiBnZXQgdGhlIGZpcnN0IGl0ZW0gaW4gbGlzdAov
LyBjaGFuZ2UgcmVzdWx0IHRvIE9wdGlvbgovLyBmaXJzdCA6OiBbQV0gLT4g
T3B0aW9uIEEKY29uc3QgZmlyc3QgPSBhID0+IGEubGVuZ3RoID8gU29tZShh
WzBdKSA6IE5vbmUoKQpmaXJzdChbNDJdKS5tYXAoYSA9PiBjb25zb2xlLmxv
ZyhhKSkgLy8gNDIKZmlyc3QoW10pLm1hcChhID0+IGNvbnNvbGUubG9nKGEp
KSAvLyBjb25zb2xlLmxvZyB3b24ndCBleGVjdXRlIGF0IGFsbAovL291ciBw
cmV2aW91cyB3b3JzdCBjYXNlCmZpcnN0KFtbNDJdXSkubWFwKGEgPT4gY29u
c29sZS5sb2coYVswXSkpIC8vIDQyCmZpcnN0KFtdKS5tYXAoYSA9PiBjb25z
b2xlLmxvZyhhWzBdKSkgLy8gd29uJ3QgZXhlY3RlLCBzbyB3ZSB3b24ndCBo
YXZlIGVycm9yIGhlcmUKLy8gbW9yZSBvZiB0aGF0LCB5b3Ugd2lsbCBrbm93
IGJ5IGZ1bmN0aW9uIHJldHVybiB0eXBlIChPcHRpb24pCi8vIHRoYXQgeW91
IHNob3VsZCB1c2UgYC5tYXBgIG1ldGhvZCB0byBhY2Nlc3MgdGhlIGRhdGEg
YW5kIHlvdSB3aWxsIG5ldmVyIGZvcmdldAovLyB0byBjaGVjayB5b3VyIGlu
cHV0IGJlY2F1c2Ugc3VjaCBjaGVjayBiZWNvbWUgYnVpbHQtaW4gaW50byB0
aGUgZnVuY3Rpb24KCi8vIGV4YW1wbGUgMzogcmVwZWF0IGZ1bmN0aW9uIE4g
dGltZXMKLy8gd2Ugc2hvdWxkIG1ha2UgZnVuY3Rpb24gYWx3YXlzIHRlcm1p
bmF0ZSBieSBjaGFuZ2luZyBjb25kaXRpb25zOgovLyB0aW1lcyA6OiBOdW1i
ZXIgLT4gKE51bWJlciAtPiBOdW1iZXIpIC0+IE51bWJlcgpjb25zdCB0aW1l
cyA9IG4gPT4gZm4gPT4gbiA+IDAgJiYgKGZuKG4pLCB0aW1lcyhuIC0gMSko
Zm4pKQp0aW1lcygzKShjb25zb2xlLmxvZykKLy8gMwovLyAyCi8vIDEKdGlt
ZXMoLTEpKGNvbnNvbGUubG9nKQovLyB3b24ndCBleGVjdXRlIGFueXRoaW5n
CmBgYApNYWtpbmcgeW91ciBwYXJ0aWFsIGZ1bmN0aW9ucyB0b3RhbCBvbmVz
LCB0aGVzZSBraW5kcyBvZiBydW50aW1lIGVycm9ycyBjYW4gYmUgcHJldmVu
dGVkLiBBbHdheXMgcmV0dXJuaW5nIGEgdmFsdWUgd2lsbCBhbHNvIG1ha2Ug
Zm9yIGNvZGUgdGhhdCBpcyBib3RoIGVhc2llciB0byBtYWludGFpbiBhcyB3
ZWxsIGFzIHRvIHJlYXNvbiBhYm91dC4KCiMjIEZ1bmN0aW9uYWwgUHJvZ3Jh
bW1pbmcgTGlicmFyaWVzIGluIEphdmFTY3JpcHQKCiogW21vcmldKGh0dHBz
Oi8vZ2l0aHViLmNvbS9zd2Fubm9kZXR0ZS9tb3JpKQoqIFtJbW11dGFibGVd
KGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9pbW11dGFibGUtanMvKQoq
IFtJbW1lcl0oaHR0cHM6Ly9naXRodWIuY29tL213ZXN0c3RyYXRlL2ltbWVy
KQoqIFtSYW1kYV0oaHR0cHM6Ly9naXRodWIuY29tL3JhbWRhL3JhbWRhKQoq
IFtyYW1kYS1hZGp1bmN0XShodHRwczovL2dpdGh1Yi5jb20vY2hhcjBuL3Jh
bWRhLWFkanVuY3QpCiogW0ZvbGt0YWxlXShodHRwOi8vZm9sa3RhbGUub3Jp
Z2FtaXRvd2VyLmNvbS8pCiogW21vbmV0LmpzXShodHRwczovL2N3bXllcnMu
Z2l0aHViLmlvL21vbmV0LmpzLykKKiBbbG9kYXNoXShodHRwczovL2dpdGh1
Yi5jb20vbG9kYXNoL2xvZGFzaCkKKiBbVW5kZXJzY29yZS5qc10oaHR0cHM6
Ly9naXRodWIuY29tL2phc2hrZW5hcy91bmRlcnNjb3JlKQoqIFtMYXp5Lmpz
XShodHRwczovL2dpdGh1Yi5jb20vZHRhby9sYXp5LmpzKQoqIFttYXJ5YW15
cmlhbWVsaWFtdXJwaGllcy5qc10oaHR0cHM6Ly9naXRodWIuY29tL3Nqc3ly
ZWsvbWFyeWFteXJpYW1lbGlhbXVycGhpZXMuanMpCiogW0hhc2tlbGwgaW4g
RVM2XShodHRwczovL2dpdGh1Yi5jb20vY2FzdWFsamF2YXNjcmlwdC9oYXNr
ZWxsLWluLWVzNikKKiBbU2FuY3R1YXJ5XShodHRwczovL2dpdGh1Yi5jb20v
c2FuY3R1YXJ5LWpzL3NhbmN0dWFyeSkKKiBbQ3JvY2tzXShodHRwczovL2dp
dGh1Yi5jb20vZXZpbHNvZnQvY3JvY2tzKQoqIFtGbHV0dXJlXShodHRwczov
L2dpdGh1Yi5jb20vZmx1dHVyZS1qcy9GbHV0dXJlKQoqIFtmcC10c10oaHR0
cHM6Ly9naXRodWIuY29tL2djYW50aS9mcC10cykKCi0tLQoKX19QLlM6X18g
VGhpcyByZXBvIGlzIHN1Y2Nlc3NmdWwgZHVlIHRvIHRoZSB3b25kZXJmdWwg
W2NvbnRyaWJ1dGlvbnNdKGh0dHBzOi8vZ2l0aHViLmNvbS9oZW1hbnRoL2Z1
bmN0aW9uYWwtcHJvZ3JhbW1pbmctamFyZ29uL2dyYXBocy9jb250cmlidXRv
cnMpIQo=
",,13289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'svgo',5508088,b':tiger: Node.js tool for optimizing SVG files',b'JavaScript',270,13284,,253,False,b'https://api.github.com/repos/svg/svgo/forks',"KiplbmdsaXNoKiogfCBb0YDRg9GB0YHQutC40LldKGh0dHBzOi8vZ2l0aHVi
LmNvbS9zdmcvc3Znby9ibG9iL21hc3Rlci9SRUFETUUucnUubWQpCi0gLSAt
Cgo8aW1nIHNyYz0iaHR0cHM6Ly9zdmcuZ2l0aHViLmlvL3N2Z28tbG9nby5z
dmciIHdpZHRoPSIyMDAiIGhlaWdodD0iMjAwIiBhbHQ9ImxvZ28iLz4KCiMj
IFNWR08gWyFbTlBNIHZlcnNpb25dKGh0dHBzOi8vYmFkZ2UuZnVyeS5pby9q
cy9zdmdvLnN2ZyldKGh0dHBzOi8vbnBtanMub3JnL3BhY2thZ2Uvc3Znbykg
WyFbQnVpbGQgU3RhdHVzXShodHRwczovL3NlY3VyZS50cmF2aXMtY2kub3Jn
L3N2Zy9zdmdvLnN2ZyldKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9zdmcvc3Zn
bykgWyFbQ292ZXJhZ2UgU3RhdHVzXShodHRwczovL2ltZy5zaGllbGRzLmlv
L2NvdmVyYWxscy9zdmcvc3Znby5zdmcpXShodHRwczovL2NvdmVyYWxscy5p
by9yL3N2Zy9zdmdvP2JyYW5jaD1tYXN0ZXIpCgoqKlNWRyBPKipwdGltaXpl
ciBpcyBhIE5vZGVqcy1iYXNlZCB0b29sIGZvciBvcHRpbWl6aW5nIFNWRyB2
ZWN0b3IgZ3JhcGhpY3MgZmlsZXMuCiFbXShodHRwczovL21jLnlhbmRleC5y
dS93YXRjaC8xODQzMTMyNikKCiMjIFdoeT8KClNWRyBmaWxlcywgZXNwZWNp
YWxseSB0aG9zZSBleHBvcnRlZCBmcm9tIHZhcmlvdXMgZWRpdG9ycywgdXN1
YWxseSBjb250YWluIGEgbG90IG9mIHJlZHVuZGFudCBhbmQgdXNlbGVzcyBp
bmZvcm1hdGlvbi4gVGhpcyBjYW4gaW5jbHVkZSBlZGl0b3IgbWV0YWRhdGEs
IGNvbW1lbnRzLCBoaWRkZW4gZWxlbWVudHMsIGRlZmF1bHQgb3Igbm9uLW9w
dGltYWwgdmFsdWVzIGFuZCBvdGhlciBzdHVmZiB0aGF0IGNhbiBiZSBzYWZl
bHkgcmVtb3ZlZCBvciBjb252ZXJ0ZWQgd2l0aG91dCBhZmZlY3RpbmcgdGhl
IFNWRyByZW5kZXJpbmcgcmVzdWx0LgoKIyMgV2hhdCBpdCBjYW4gZG8KClNW
R08gaGFzIGEgcGx1Z2luLWJhc2VkIGFyY2hpdGVjdHVyZSwgc28gYWxtb3N0
IGV2ZXJ5IG9wdGltaXphdGlvbiBpcyBhIHNlcGFyYXRlIHBsdWdpbi4KClRv
ZGF5IHdlIGhhdmU6Cgp8IFBsdWdpbiB8IERlc2NyaXB0aW9uIHwgRGVmYXVs
dCB8CnwgLS0tLS0tIHwgLS0tLS0tLS0tLS0gfCAtLS0tLS0tIHwKfCBbY2xl
YW51cEF0dHJzXShodHRwczovL2dpdGh1Yi5jb20vc3ZnL3N2Z28vYmxvYi9t
YXN0ZXIvcGx1Z2lucy9jbGVhbnVwQXR0cnMuanMpIHwgY2xlYW51cCBhdHRy
aWJ1dGVzIGZyb20gbmV3bGluZXMsIHRyYWlsaW5nLCBhbmQgcmVwZWF0aW5n
IHNwYWNlcyB8IGBlbmFibGVkYCB8CnwgW2lubGluZVN0eWxlc10oaHR0cHM6
Ly9naXRodWIuY29tL3N2Zy9zdmdvL2Jsb2IvbWFzdGVyL3BsdWdpbnMvaW5s
aW5lU3R5bGVzLmpzKSB8IG1vdmUgYW5kIG1lcmdlIHN0eWxlcyBmcm9tIGA8
c3R5bGU+YCBlbGVtZW50cyB0byBlbGVtZW50IGBzdHlsZWAgYXR0cmlidXRl
cyB8IGBlbmFibGVkYCB8CnwgW3JlbW92ZURvY3R5cGVdKGh0dHBzOi8vZ2l0
aHViLmNvbS9zdmcvc3Znby9ibG9iL21hc3Rlci9wbHVnaW5zL3JlbW92ZURv
Y3R5cGUuanMpIHwgcmVtb3ZlIGRvY3R5cGUgZGVjbGFyYXRpb24gfCBgZW5h
YmxlZGAgfAp8IFtyZW1vdmVYTUxQcm9jSW5zdF0oaHR0cHM6Ly9naXRodWIu
Y29tL3N2Zy9zdmdvL2Jsb2IvbWFzdGVyL3BsdWdpbnMvcmVtb3ZlWE1MUHJv
Y0luc3QuanMpIHwgcmVtb3ZlIFhNTCBwcm9jZXNzaW5nIGluc3RydWN0aW9u
cyB8IGBlbmFibGVkYCB8CnwgW3JlbW92ZUNvbW1lbnRzXShodHRwczovL2dp
dGh1Yi5jb20vc3ZnL3N2Z28vYmxvYi9tYXN0ZXIvcGx1Z2lucy9yZW1vdmVD
b21tZW50cy5qcykgfCByZW1vdmUgY29tbWVudHMgfCBgZW5hYmxlZGAgfAp8
IFtyZW1vdmVNZXRhZGF0YV0oaHR0cHM6Ly9naXRodWIuY29tL3N2Zy9zdmdv
L2Jsb2IvbWFzdGVyL3BsdWdpbnMvcmVtb3ZlTWV0YWRhdGEuanMpIHwgcmVt
b3ZlIGA8bWV0YWRhdGE+YCB8IGBlbmFibGVkYCB8CnwgW3JlbW92ZVRpdGxl
XShodHRwczovL2dpdGh1Yi5jb20vc3ZnL3N2Z28vYmxvYi9tYXN0ZXIvcGx1
Z2lucy9yZW1vdmVUaXRsZS5qcykgfCByZW1vdmUgYDx0aXRsZT5gIHwgYGVu
YWJsZWRgIHwKfCBbcmVtb3ZlRGVzY10oaHR0cHM6Ly9naXRodWIuY29tL3N2
Zy9zdmdvL2Jsb2IvbWFzdGVyL3BsdWdpbnMvcmVtb3ZlRGVzYy5qcykgfCBy
ZW1vdmUgYDxkZXNjPmAgfCBgZW5hYmxlZGAgfAp8IFtyZW1vdmVVc2VsZXNz
RGVmc10oaHR0cHM6Ly9naXRodWIuY29tL3N2Zy9zdmdvL2Jsb2IvbWFzdGVy
L3BsdWdpbnMvcmVtb3ZlVXNlbGVzc0RlZnMuanMpIHwgcmVtb3ZlIGVsZW1l
bnRzIG9mIGA8ZGVmcz5gIHdpdGhvdXQgYGlkYCB8IGBlbmFibGVkYCB8Cnwg
W3JlbW92ZVhNTE5TXShodHRwczovL2dpdGh1Yi5jb20vc3ZnL3N2Z28vYmxv
Yi9tYXN0ZXIvcGx1Z2lucy9yZW1vdmVYTUxOUy5qcykgfCByZW1vdmVzIGB4
bWxuc2AgYXR0cmlidXRlIChmb3IgaW5saW5lIHN2ZykgfCBgZGlzYWJsZWRg
IHwKfCBbcmVtb3ZlRWRpdG9yc05TRGF0YV0oaHR0cHM6Ly9naXRodWIuY29t
L3N2Zy9zdmdvL2Jsb2IvbWFzdGVyL3BsdWdpbnMvcmVtb3ZlRWRpdG9yc05T
RGF0YS5qcykgfCByZW1vdmUgZWRpdG9ycyBuYW1lc3BhY2VzLCBlbGVtZW50
cywgYW5kIGF0dHJpYnV0ZXMgfCBgZW5hYmxlZGAgfAp8IFtyZW1vdmVFbXB0
eUF0dHJzXShodHRwczovL2dpdGh1Yi5jb20vc3ZnL3N2Z28vYmxvYi9tYXN0
ZXIvcGx1Z2lucy9yZW1vdmVFbXB0eUF0dHJzLmpzKSB8IHJlbW92ZSBlbXB0
eSBhdHRyaWJ1dGVzIHwgYGVuYWJsZWRgIHwKfCBbcmVtb3ZlSGlkZGVuRWxl
bXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9zdmcvc3Znby9ibG9iL21hc3Rlci9w
bHVnaW5zL3JlbW92ZUhpZGRlbkVsZW1zLmpzKSB8IHJlbW92ZSBoaWRkZW4g
ZWxlbWVudHMgfCBgZW5hYmxlZGAgfAp8IFtyZW1vdmVFbXB0eVRleHRdKGh0
dHBzOi8vZ2l0aHViLmNvbS9zdmcvc3Znby9ibG9iL21hc3Rlci9wbHVnaW5z
L3JlbW92ZUVtcHR5VGV4dC5qcykgfCByZW1vdmUgZW1wdHkgVGV4dCBlbGVt
ZW50cyB8IGBlbmFibGVkYCB8CnwgW3JlbW92ZUVtcHR5Q29udGFpbmVyc10o
aHR0cHM6Ly9naXRodWIuY29tL3N2Zy9zdmdvL2Jsb2IvbWFzdGVyL3BsdWdp
bnMvcmVtb3ZlRW1wdHlDb250YWluZXJzLmpzKSB8IHJlbW92ZSBlbXB0eSBD
b250YWluZXIgZWxlbWVudHMgfCBgZW5hYmxlZGAgfAp8IFtyZW1vdmVWaWV3
Qm94XShodHRwczovL2dpdGh1Yi5jb20vc3ZnL3N2Z28vYmxvYi9tYXN0ZXIv
cGx1Z2lucy9yZW1vdmVWaWV3Qm94LmpzKSB8IHJlbW92ZSBgdmlld0JveGAg
YXR0cmlidXRlIHdoZW4gcG9zc2libGUgfCBgZW5hYmxlZGAgfAp8IFtjbGVh
bnVwRW5hYmxlQmFja2dyb3VuZF0oaHR0cHM6Ly9naXRodWIuY29tL3N2Zy9z
dmdvL2Jsb2IvbWFzdGVyL3BsdWdpbnMvY2xlYW51cEVuYWJsZUJhY2tncm91
bmQuanMpIHwgcmVtb3ZlIG9yIGNsZWFudXAgYGVuYWJsZS1iYWNrZ3JvdW5k
YCBhdHRyaWJ1dGUgd2hlbiBwb3NzaWJsZSB8IGBlbmFibGVkYCB8CnwgW21p
bmlmeVN0eWxlc10oaHR0cHM6Ly9naXRodWIuY29tL3N2Zy9zdmdvL2Jsb2Iv
bWFzdGVyL3BsdWdpbnMvbWluaWZ5U3R5bGVzLmpzKSB8IG1pbmlmeSBgPHN0
eWxlPmAgZWxlbWVudHMgY29udGVudCB3aXRoIFtDU1NPXShodHRwczovL2dp
dGh1Yi5jb20vY3NzL2Nzc28pIHwgYGVuYWJsZWRgIHwKfCBbY29udmVydFN0
eWxlVG9BdHRyc10oaHR0cHM6Ly9naXRodWIuY29tL3N2Zy9zdmdvL2Jsb2Iv
bWFzdGVyL3BsdWdpbnMvY29udmVydFN0eWxlVG9BdHRycy5qcykgfCBjb252
ZXJ0IHN0eWxlcyBpbnRvIGF0dHJpYnV0ZXMgfCBgZW5hYmxlZGAgfAp8IFtj
b252ZXJ0Q29sb3JzXShodHRwczovL2dpdGh1Yi5jb20vc3ZnL3N2Z28vYmxv
Yi9tYXN0ZXIvcGx1Z2lucy9jb252ZXJ0Q29sb3JzLmpzKSB8IGNvbnZlcnQg
Y29sb3JzIChmcm9tIGByZ2IoKWAgdG8gYCNycmdnYmJgLCBmcm9tIGAjcnJn
Z2JiYCB0byBgI3JnYmApIHwgYGVuYWJsZWRgIHwKfCBbY29udmVydFBhdGhE
YXRhXShodHRwczovL2dpdGh1Yi5jb20vc3ZnL3N2Z28vYmxvYi9tYXN0ZXIv
cGx1Z2lucy9jb252ZXJ0UGF0aERhdGEuanMpIHwgY29udmVydCBQYXRoIGRh
dGEgdG8gcmVsYXRpdmUgb3IgYWJzb2x1dGUgKHdoaWNoZXZlciBpcyBzaG9y
dGVyKSwgY29udmVydCBvbmUgc2VnbWVudCB0byBhbm90aGVyLCB0cmltIHVz
ZWxlc3MgZGVsaW1pdGVycywgc21hcnQgcm91bmRpbmcsIGFuZCBtdWNoIG1v
cmUgfCBgZW5hYmxlZGAgfAp8IFtjb252ZXJ0VHJhbnNmb3JtXShodHRwczov
L2dpdGh1Yi5jb20vc3ZnL3N2Z28vYmxvYi9tYXN0ZXIvcGx1Z2lucy9jb252
ZXJ0VHJhbnNmb3JtLmpzKSB8IGNvbGxhcHNlIG11bHRpcGxlIHRyYW5zZm9y
bXMgaW50byBvbmUsIGNvbnZlcnQgbWF0cmljZXMgdG8gdGhlIHNob3J0IGFs
aWFzZXMsIGFuZCBtdWNoIG1vcmUgfCBgZW5hYmxlZGAgfAp8IFtyZW1vdmVV
bmtub3duc0FuZERlZmF1bHRzXShodHRwczovL2dpdGh1Yi5jb20vc3ZnL3N2
Z28vYmxvYi9tYXN0ZXIvcGx1Z2lucy9yZW1vdmVVbmtub3duc0FuZERlZmF1
bHRzLmpzKSB8IHJlbW92ZSB1bmtub3duIGVsZW1lbnRzIGNvbnRlbnQgYW5k
IGF0dHJpYnV0ZXMsIHJlbW92ZSBhdHRycyB3aXRoIGRlZmF1bHQgdmFsdWVz
IHwgYGVuYWJsZWRgIHwKfCBbcmVtb3ZlTm9uSW5oZXJpdGFibGVHcm91cEF0
dHJzXShodHRwczovL2dpdGh1Yi5jb20vc3ZnL3N2Z28vYmxvYi9tYXN0ZXIv
cGx1Z2lucy9yZW1vdmVOb25Jbmhlcml0YWJsZUdyb3VwQXR0cnMuanMpIHwg
cmVtb3ZlIG5vbi1pbmhlcml0YWJsZSBncm91cCdzICJwcmVzZW50YXRpb24i
IGF0dHJpYnV0ZXMgfCBgZW5hYmxlZGAgfAp8IFtyZW1vdmVVc2VsZXNzU3Ry
b2tlQW5kRmlsbF0oaHR0cHM6Ly9naXRodWIuY29tL3N2Zy9zdmdvL2Jsb2Iv
bWFzdGVyL3BsdWdpbnMvcmVtb3ZlVXNlbGVzc1N0cm9rZUFuZEZpbGwuanMp
IHwgcmVtb3ZlIHVzZWxlc3MgYHN0cm9rZWAgYW5kIGBmaWxsYCBhdHRycyB8
IGBlbmFibGVkYCB8CnwgW3JlbW92ZVVudXNlZE5TXShodHRwczovL2dpdGh1
Yi5jb20vc3ZnL3N2Z28vYmxvYi9tYXN0ZXIvcGx1Z2lucy9yZW1vdmVVbnVz
ZWROUy5qcykgfCByZW1vdmUgdW51c2VkIG5hbWVzcGFjZXMgZGVjbGFyYXRp
b24gfCBgZW5hYmxlZGAgfAp8IFtwcmVmaXhJZHNdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9zdmcvc3Znby9ibG9iL21hc3Rlci9wbHVnaW5zL3ByZWZpeElkcy5q
cykgfCBwcmVmaXggSURzIGFuZCBjbGFzc2VzIHdpdGggdGhlIFNWRyBmaWxl
bmFtZSBvciBhbiBhcmJpdHJhcnkgc3RyaW5nIHwgYGRpc2FibGVkYCB8Cnwg
W2NsZWFudXBJRHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9zdmcvc3Znby9ibG9i
L21hc3Rlci9wbHVnaW5zL2NsZWFudXBJRHMuanMpIHwgcmVtb3ZlIHVudXNl
ZCBhbmQgbWluaWZ5IHVzZWQgSURzIHwgYGVuYWJsZWRgIHwKfCBbY2xlYW51
cE51bWVyaWNWYWx1ZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9zdmcvc3Znby9i
bG9iL21hc3Rlci9wbHVnaW5zL2NsZWFudXBOdW1lcmljVmFsdWVzLmpzKSB8
IHJvdW5kIG51bWVyaWMgdmFsdWVzIHRvIHRoZSBmaXhlZCBwcmVjaXNpb24s
IHJlbW92ZSBkZWZhdWx0IGBweGAgdW5pdHMgfCBgZW5hYmxlZGAgfAp8IFtj
bGVhbnVwTGlzdE9mVmFsdWVzXShodHRwczovL2dpdGh1Yi5jb20vc3ZnL3N2
Z28vYmxvYi9tYXN0ZXIvcGx1Z2lucy9jbGVhbnVwTGlzdE9mVmFsdWVzLmpz
KSB8IHJvdW5kIG51bWVyaWMgdmFsdWVzIGluIGF0dHJpYnV0ZXMgdGhhdCB0
YWtlIGEgbGlzdCBvZiBudW1iZXJzIChsaWtlIGB2aWV3Qm94YCBvciBgZW5h
YmxlLWJhY2tncm91bmRgKSB8IGBkaXNhYmxlZGAgfAp8IFttb3ZlRWxlbXNB
dHRyc1RvR3JvdXBdKGh0dHBzOi8vZ2l0aHViLmNvbS9zdmcvc3Znby9ibG9i
L21hc3Rlci9wbHVnaW5zL21vdmVFbGVtc0F0dHJzVG9Hcm91cC5qcykgfCBt
b3ZlIGVsZW1lbnRzJyBhdHRyaWJ1dGVzIHRvIHRoZWlyIGVuY2xvc2luZyBn
cm91cCB8IGBlbmFibGVkYCB8CnwgW21vdmVHcm91cEF0dHJzVG9FbGVtc10o
aHR0cHM6Ly9naXRodWIuY29tL3N2Zy9zdmdvL2Jsb2IvbWFzdGVyL3BsdWdp
bnMvbW92ZUdyb3VwQXR0cnNUb0VsZW1zLmpzKSB8IG1vdmUgc29tZSBncm91
cCBhdHRyaWJ1dGVzIHRvIHRoZSBjb250YWluZWQgZWxlbWVudHMgfCBgZW5h
YmxlZGAgfAp8IFtjb2xsYXBzZUdyb3Vwc10oaHR0cHM6Ly9naXRodWIuY29t
L3N2Zy9zdmdvL2Jsb2IvbWFzdGVyL3BsdWdpbnMvY29sbGFwc2VHcm91cHMu
anMpIHwgY29sbGFwc2UgdXNlbGVzcyBncm91cHMgfCBgZW5hYmxlZGAgfAp8
IFtyZW1vdmVSYXN0ZXJJbWFnZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9zdmcv
c3Znby9ibG9iL21hc3Rlci9wbHVnaW5zL3JlbW92ZVJhc3RlckltYWdlcy5q
cykgfCByZW1vdmUgcmFzdGVyIGltYWdlcyB8IGBkaXNhYmxlZGAgfAp8IFtt
ZXJnZVBhdGhzXShodHRwczovL2dpdGh1Yi5jb20vc3ZnL3N2Z28vYmxvYi9t
YXN0ZXIvcGx1Z2lucy9tZXJnZVBhdGhzLmpzKSB8IG1lcmdlIG11bHRpcGxl
IFBhdGhzIGludG8gb25lIHwgYGVuYWJsZWRgIHwKfCBbY29udmVydFNoYXBl
VG9QYXRoXShodHRwczovL2dpdGh1Yi5jb20vc3ZnL3N2Z28vYmxvYi9tYXN0
ZXIvcGx1Z2lucy9jb252ZXJ0U2hhcGVUb1BhdGguanMpIHwgY29udmVydCBz
b21lIGJhc2ljIHNoYXBlcyB0byBgPHBhdGg+YCB8IGBlbmFibGVkYCB8Cnwg
W2NvbnZlcnRFbGxpcHNlVG9DaXJjbGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9z
dmcvc3Znby9ibG9iL21hc3Rlci9wbHVnaW5zL2NvbnZlcnRFbGxpcHNlVG9D
aXJjbGUuanMpIHwgY29udmVydCBub24tZWNjZW50cmljIGA8ZWxsaXBzZT5g
IHRvIGA8Y2lyY2xlPmAgfCBgZW5hYmxlZGAgfAp8IFtzb3J0QXR0cnNdKGh0
dHBzOi8vZ2l0aHViLmNvbS9zdmcvc3Znby9ibG9iL21hc3Rlci9wbHVnaW5z
L3NvcnRBdHRycy5qcykgfCBzb3J0IGVsZW1lbnQgYXR0cmlidXRlcyBmb3Ig
ZXBpYyByZWFkYWJpbGl0eSB8IGBkaXNhYmxlZGAgfAp8IFtzb3J0RGVmc0No
aWxkcmVuXShodHRwczovL2dpdGh1Yi5jb20vc3ZnL3N2Z28vYmxvYi9tYXN0
ZXIvcGx1Z2lucy9zb3J0RGVmc0NoaWxkcmVuLmpzKSB8IHNvcnQgY2hpbGRy
ZW4gb2YgYDxkZWZzPmAgaW4gb3JkZXIgdG8gaW1wcm92ZSBjb21wcmVzc2lv
biB8IGBlbmFibGVkYCB8CnwgW3JlbW92ZURpbWVuc2lvbnNdKGh0dHBzOi8v
Z2l0aHViLmNvbS9zdmcvc3Znby9ibG9iL21hc3Rlci9wbHVnaW5zL3JlbW92
ZURpbWVuc2lvbnMuanMpIHwgcmVtb3ZlIGB3aWR0aGAvYGhlaWdodGAgYW5k
IGFkZCBgdmlld0JveGAgaWYgaXQncyBtaXNzaW5nIChvcHBvc2l0ZSB0byBy
ZW1vdmVWaWV3Qm94LCBkaXNhYmxlIGl0IGZpcnN0KSB8IGBkaXNhYmxlZGAg
fAp8IFtyZW1vdmVBdHRyc10oaHR0cHM6Ly9naXRodWIuY29tL3N2Zy9zdmdv
L2Jsb2IvbWFzdGVyL3BsdWdpbnMvcmVtb3ZlQXR0cnMuanMpIHwgcmVtb3Zl
IGF0dHJpYnV0ZXMgYnkgcGF0dGVybiB8IGBkaXNhYmxlZGAgfAp8IFtyZW1v
dmVBdHRyaWJ1dGVzQnlTZWxlY3Rvcl0oaHR0cHM6Ly9naXRodWIuY29tL3N2
Zy9zdmdvL2Jsb2IvbWFzdGVyL3BsdWdpbnMvcmVtb3ZlQXR0cmlidXRlc0J5
U2VsZWN0b3IuanMpIHwgcmVtb3ZlcyBhdHRyaWJ1dGVzIG9mIGVsZW1lbnRz
IHRoYXQgbWF0Y2ggYSBjc3Mgc2VsZWN0b3IgfCBgZGlzYWJsZWRgIHwKfCBb
cmVtb3ZlRWxlbWVudHNCeUF0dHJdKGh0dHBzOi8vZ2l0aHViLmNvbS9zdmcv
c3Znby9ibG9iL21hc3Rlci9wbHVnaW5zL3JlbW92ZUVsZW1lbnRzQnlBdHRy
LmpzKSB8IHJlbW92ZSBhcmJpdHJhcnkgZWxlbWVudHMgYnkgSUQgb3IgY2xh
c3NOYW1lIHwgYGRpc2FibGVkYCB8CnwgW2FkZENsYXNzZXNUb1NWR0VsZW1l
bnRdKGh0dHBzOi8vZ2l0aHViLmNvbS9zdmcvc3Znby9ibG9iL21hc3Rlci9w
bHVnaW5zL2FkZENsYXNzZXNUb1NWR0VsZW1lbnQuanMpIHwgYWRkIGNsYXNz
bmFtZXMgdG/CoGFuwqBvdXRlciBgPHN2Zz5gIGVsZW1lbnQgfCBgZGlzYWJs
ZWRgIHwKfCBbYWRkQXR0cmlidXRlc1RvU1ZHRWxlbWVudF0oaHR0cHM6Ly9n
aXRodWIuY29tL3N2Zy9zdmdvL2Jsb2IvbWFzdGVyL3BsdWdpbnMvYWRkQXR0
cmlidXRlc1RvU1ZHRWxlbWVudC5qcykgfCBhZGRzIGF0dHJpYnV0ZXMgdG8g
YW4gb3V0ZXIgYDxzdmc+YCBlbGVtZW50IHwgYGRpc2FibGVkYCB8CnwgW3Jl
bW92ZU9mZkNhbnZhc1BhdGhzXShodHRwczovL2dpdGh1Yi5jb20vc3ZnL3N2
Z28vYmxvYi9tYXN0ZXIvcGx1Z2lucy9yZW1vdmVPZmZDYW52YXNQYXRocy5q
cykgfCByZW1vdmVzIGVsZW1lbnRzIHRoYXQgYXJlIGRyYXduIG91dHNpZGUg
b2YgdGhlIHZpZXdib3ggfCBgZGlzYWJsZWRgIHwKfCBbcmVtb3ZlU3R5bGVF
bGVtZW50XShodHRwczovL2dpdGh1Yi5jb20vc3ZnL3N2Z28vYmxvYi9tYXN0
ZXIvcGx1Z2lucy9yZW1vdmVTdHlsZUVsZW1lbnQuanMpIHwgcmVtb3ZlIGA8
c3R5bGU+YCBlbGVtZW50cyB8IGBkaXNhYmxlZGAgfAp8IFtyZW1vdmVTY3Jp
cHRFbGVtZW50XShodHRwczovL2dpdGh1Yi5jb20vc3ZnL3N2Z28vYmxvYi9t
YXN0ZXIvcGx1Z2lucy9yZW1vdmVTY3JpcHRFbGVtZW50LmpzKSB8IHJlbW92
ZSBgPHNjcmlwdD5gIGVsZW1lbnRzIHwgYGRpc2FibGVkYCB8CnwgW3JldXNl
UGF0aHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9zdmcvc3Znby9ibG9iL21hc3Rl
ci9wbHVnaW5zL3JldXNlUGF0aHMuanMpIHwgRmluZCBkdXBsaWNhdGVkIDxw
YXRoPiBlbGVtZW50cyBhbmQgcmVwbGFjZSB0aGVtIHdpdGggPHVzZT4gbGlu
a3MgfCBgZGlzYWJsZWRgIHwKCldhbnQgdG8ga25vdyBob3cgaXQgd29ya3Mg
YW5kIGhvdyB0byB3cml0ZSB5b3VyIG93biBwbHVnaW4/IFtPZiBjb3Vyc2Ug
eW91IHdhbnQgdG9dKGh0dHBzOi8vZ2l0aHViLmNvbS9zdmcvc3Znby9ibG9i
L21hc3Rlci9kb2NzL2hvdy1pdC13b3Jrcy9lbi5tZCkuIChb64+Z7J6R67Cp
67KVXShodHRwczovL2dpdGh1Yi5jb20vc3ZnL3N2Z28vYmxvYi9tYXN0ZXIv
ZG9jcy9ob3ctaXQtd29ya3Mva28ubWQpKQoKCiMjIEluc3RhbGxhdGlvbgoK
YGBgc2gKJCBbc3Vkb10gbnBtIGluc3RhbGwgLWcgc3ZnbwpgYGAKCiMjIFVz
YWdlCgojIyMgPGFiYnIgdGl0bGU9IkNvbW1hbmQgTGluZSBJbnRlcmZhY2Ui
PkNMSTwvYWJicj4KCmBgYApVc2FnZToKICBzdmdvIFtPUFRJT05TXSBbQVJH
U10KCk9wdGlvbnM6CiAgLWgsIC0taGVscCA6IEhlbHAKICAtdiwgLS12ZXJz
aW9uIDogVmVyc2lvbgogIC1pIElOUFVULCAtLWlucHV0PUlOUFVUIDogSW5w
dXQgZmlsZSwgIi0iIGZvciBTVERJTgogIC1zIFNUUklORywgLS1zdHJpbmc9
U1RSSU5HIDogSW5wdXQgU1ZHIGRhdGEgc3RyaW5nCiAgLWYgRk9MREVSLCAt
LWZvbGRlcj1GT0xERVIgOiBJbnB1dCBmb2xkZXIsIG9wdGltaXplIGFuZCBy
ZXdyaXRlIGFsbCAqLnN2ZyBmaWxlcwogIC1vIE9VVFBVVCwgLS1vdXRwdXQ9
T1VUUFVUIDogT3V0cHV0IGZpbGUgb3IgZm9sZGVyIChieSBkZWZhdWx0IHRo
ZSBzYW1lIGFzIHRoZSBpbnB1dCksICItIiBmb3IgU1RET1VUCiAgLXAgUFJF
Q0lTSU9OLCAtLXByZWNpc2lvbj1QUkVDSVNJT04gOiBTZXQgbnVtYmVyIG9m
IGRpZ2l0cyBpbiB0aGUgZnJhY3Rpb25hbCBwYXJ0LCBvdmVycmlkZXMgcGx1
Z2lucyBwYXJhbXMKICAtLWNvbmZpZz1DT05GSUcgOiBDb25maWcgZmlsZSBv
ciBKU09OIHN0cmluZyB0byBleHRlbmQgb3IgcmVwbGFjZSBkZWZhdWx0CiAg
LS1kaXNhYmxlPVBMVUdJTiA6IERpc2FibGUgcGx1Z2luIGJ5IG5hbWUsICIt
LWRpc2FibGU9UExVR0lOMSxQTFVHSU4yIiBmb3IgbXVsdGlwbGUgcGx1Z2lu
cwogIC0tZW5hYmxlPVBMVUdJTiA6IEVuYWJsZSBwbHVnaW4gYnkgbmFtZSwg
Ii0tZW5hYmxlPVBMVUdJTjMsUExVR0lONCIgZm9yIG11bHRpcGxlIHBsdWdp
bnMKICAtLWRhdGF1cmk9REFUQVVSSSA6IE91dHB1dCBhcyBEYXRhIFVSSSBz
dHJpbmcgKGJhc2U2NCwgVVJJIGVuY29kZWQgb3IgdW5lbmNvZGVkKQogIC0t
bXVsdGlwYXNzIDogUGFzcyBvdmVyIFNWR3MgbXVsdGlwbGUgdGltZXMgdG8g
ZW5zdXJlIGFsbCBvcHRpbWl6YXRpb25zIGFyZSBhcHBsaWVkCiAgLS1wcmV0
dHkgOiBNYWtlIFNWRyBwcmV0dHkgcHJpbnRlZAogIC0taW5kZW50PUlOREVO
VCA6IEluZGVudCBudW1iZXIgd2hlbiBwcmV0dHkgcHJpbnRpbmcgU1ZHcwog
IC1yLCAtLXJlY3Vyc2l2ZSA6IFVzZSB3aXRoICctZicuIE9wdGltaXplcyAq
LnN2ZyBmaWxlcyBpbiBmb2xkZXJzIHJlY3Vyc2l2ZWx5LgogIC1xLCAtLXF1
aWV0IDogT25seSBvdXRwdXQgZXJyb3IgbWVzc2FnZXMsIG5vdCByZWd1bGFy
IHN0YXR1cyBtZXNzYWdlcwogIC0tc2hvdy1wbHVnaW5zIDogU2hvdyBhdmFp
bGFibGUgcGx1Z2lucyBhbmQgZXhpdAoKQXJndW1lbnRzOgogIElOUFVUIDog
QWxpYXMgdG8gLS1pbnB1dApgYGAKCiogd2l0aCBmaWxlczoKCiAgICBgYGBz
aAogICAgJCBzdmdvIHRlc3Quc3ZnCiAgICBgYGAKCiAgICBvcjoKCiAgICBg
YGBzaAogICAgJCBzdmdvICouc3ZnCiAgICBgYGAKCiAgICBgYGBzaAogICAg
JCBzdmdvIHRlc3Quc3ZnIC1vIHRlc3QubWluLnN2ZwogICAgYGBgCgogICAg
YGBgc2gKICAgICQgc3ZnbyB0ZXN0LnN2ZyBvdGhlci5zdmcgdGhpcmQuc3Zn
CiAgICBgYGAKCiAgICBgYGBzaAogICAgJCBzdmdvIHRlc3Quc3ZnIG90aGVy
LnN2ZyB0aGlyZC5zdmcgLW8gdGVzdC5taW4uc3ZnIC1vIG90aGVyLm1pbi5z
dmcgLW8gdGhpcmQubWluLnN2ZwogICAgYGBgCgoqIHdpdGggU1RESU4gLyBT
VERPVVQ6CgogICAgYGBgc2gKICAgICQgY2F0IHRlc3Quc3ZnIHwgc3ZnbyAt
aSAtIC1vIC0gPiB0ZXN0Lm1pbi5zdmcKICAgIGBgYAoKKiB3aXRoIGZvbGRl
cgoKICAgIGBgYHNoCiAgICAkIHN2Z28gLWYgLi4vcGF0aC90by9mb2xkZXIv
d2l0aC9zdmcvZmlsZXMKICAgIGBgYAoKICAgIG9yOgoKICAgIGBgYHNoCiAg
ICAkIHN2Z28gLWYgLi4vcGF0aC90by9mb2xkZXIvd2l0aC9zdmcvZmlsZXMg
LW8gLi4vcGF0aC90by9mb2xkZXIvd2l0aC9zdmcvb3V0cHV0CiAgICBgYGAK
CiAgICBgYGBzaAogICAgJCBzdmdvICouc3ZnIC1vIC4uL3BhdGgvdG8vZm9s
ZGVyL3dpdGgvc3ZnL291dHB1dAogICAgYGBgCgoqIHdpdGggc3RyaW5nczoK
CiAgICBgYGBzaAogICAgJCBzdmdvIC1zICc8c3ZnIHZlcnNpb249IjEuMSI+
dGVzdDwvc3ZnPicgLW8gdGVzdC5taW4uc3ZnCiAgICBgYGAKCiAgICBvciBl
dmVuIHdpdGggRGF0YSBVUkkgYmFzZTY0OgoKICAgIGBgYHNoCiAgICAkIHN2
Z28gLXMgJ2RhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsLi4uJyAtbyB0ZXN0
Lm1pbi5zdmcKICAgIGBgYAoKKiB3aXRoIFNWR1o6CgogICAgZnJvbSBgLnN2
Z3pgIHRvIGAuc3ZnYDoKCiAgICBgYGBzaAogICAgJCBndW56aXAgLWMgdGVz
dC5zdmd6IHwgc3ZnbyAtaSAtIC1vIHRlc3QubWluLnN2ZwogICAgYGBgCgog
ICAgZnJvbSBgLnN2Z2AgdG8gYC5zdmd6YDoKCiAgICBgYGBzaAogICAgJCBz
dmdvIHRlc3Quc3ZnIC1vIC0gfCBnemlwIC1jZnE5ID4gdGVzdC5zdmd6CiAg
ICBgYGAKCiMjIyBPdGhlciBXYXlzIHRvIFVzZSBTVkdPCgoqIGFzIGEgd2Vi
IGFwcCDigJMgW1NWR09NR10oaHR0cHM6Ly9qYWtlYXJjaGliYWxkLmdpdGh1
Yi5pby9zdmdvbWcvKQoqIGFzIGEgTm9kZWpzIG1vZHVsZSDigJMgW2V4YW1w
bGVzXShodHRwczovL2dpdGh1Yi5jb20vc3ZnL3N2Z28vdHJlZS9tYXN0ZXIv
ZXhhbXBsZXMpCiogYXMgYSBHcnVudCB0YXNrIOKAkyBbZ3J1bnQtc3ZnbWlu
XShodHRwczovL2dpdGh1Yi5jb20vc2luZHJlc29yaHVzL2dydW50LXN2Z21p
bikKKiBhcyBhIEd1bHAgdGFzayDigJMgW2d1bHAtc3ZnbWluXShodHRwczov
L2dpdGh1Yi5jb20vYmVuLWViL2d1bHAtc3ZnbWluKQoqIGFzIGEgTWltb3Nh
IG1vZHVsZSDigJMgW21pbW9zYS1taW5pZnktc3ZnXShodHRwczovL2dpdGh1
Yi5jb20vZGJhc2hmb3JkL21pbW9zYS1taW5pZnktc3ZnKQoqIGFzIGFuIE9T
WCBGb2xkZXIgQWN0aW9uIOKAkyBbc3Znby1vc3gtZm9sZGVyLWFjdGlvbl0o
aHR0cHM6Ly9naXRodWIuY29tL3N2Zy9zdmdvLW9zeC1mb2xkZXItYWN0aW9u
KQoqIGFzIGEgd2VicGFjayBsb2FkZXIg4oCTIFtpbWFnZS13ZWJwYWNrLWxv
YWRlcl0oaHR0cHM6Ly9naXRodWIuY29tL3Rjb29wbWFuL2ltYWdlLXdlYnBh
Y2stbG9hZGVyKQoqIGFzIGEgVGVsZWdyYW0gQm90IOKAkyBbc3Znb19ib3Rd
KGh0dHBzOi8vZ2l0aHViLmNvbS9tYWtzdWdyL3N2Z29fYm90KQoqIGFzIGEg
UG9zdENTUyBwbHVnaW4g4oCTIFtwb3N0Y3NzLXN2Z29dKGh0dHBzOi8vZ2l0
aHViLmNvbS9iZW4tZWIvcG9zdGNzcy1zdmdvKQoqIGFzIGFuIElua3NjYXBl
IHBsdWdpbiDigJMgW2lua3NjYXBlLXN2Z29dKGh0dHBzOi8vZ2l0aHViLmNv
bS9rb25zdW1lci9pbmtzY2FwZS1zdmdvKQoqIGFzIGEgU2tldGNoIHBsdWdp
biAtIFtzdmdvLWNvbXByZXNzb3JdKGh0dHBzOi8vZ2l0aHViLmNvbS9Cb2hl
bWlhbkNvZGluZy9zdmdvLWNvbXByZXNzb3IpCiogYXMgbWFjT1MgYXBwIC0g
W0ltYWdlIFNocmlua2VyXShodHRwczovL2ltYWdlLXNocmlua2VyLmNvbSkK
KiBhcyBhIFJvbGx1cCBwbHVnaW4gLSBbcm9sbHVwLXBsdWdpbi1zdmdvXSho
dHRwczovL2dpdGh1Yi5jb20vcG9yc2FnZXIvcm9sbHVwLXBsdWdpbi1zdmdv
KQoKIyMgQmFja2VycwoKfCBbPGltZyBzcmM9Imh0dHBzOi8vc2hlZXRqcy5j
b20vc2tldGNoMTI4LnBuZyIgd2lkdGg9IjgwIj5dKGh0dHBzOi8vc2hlZXRq
cy5jb20vKSB8IFs8aW1nIHNyYz0iaHR0cHM6Ly9yYXdnaXRodWIuY29tL2Zv
bnRlbGxvL2ZvbnRlbGxvL21hc3Rlci9mb250ZWxsby1pbWFnZS5zdmciIHdp
ZHRoPSI4MCI+XShodHRwOi8vZm9udGVsbG8uY29tLykgfAp8Oi06fDotOnwK
fCBbU2hlZXRKUyBMTENdKGh0dHBzOi8vc2hlZXRqcy5jb20vKSB8IFtGb250
ZWxsb10oaHR0cDovL2ZvbnRlbGxvLmNvbS8pIHwKCiMjIERvbmF0aW9ucwoK
LSBQYXlQYWw6IGh0dHBzOi8vd3d3LnBheXBhbC5tZS9kZWVwc3dlZXQKCiMj
IExpY2Vuc2UgYW5kIENvcHlyaWdodAoKVGhpcyBzb2Z0d2FyZSBpcyByZWxl
YXNlZCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIFtNSVQgbGljZW5zZV0oaHR0
cHM6Ly9naXRodWIuY29tL3N2Zy9zdmdvL2Jsb2IvbWFzdGVyL0xJQ0VOU0Up
LgoKTG9nbyBieSBbWWVnb3IgQm9sc2hha292XShodHRwOi8veGl6enp5LnJ1
LykuCg==
",,13284,"bGFuZ3VhZ2U6IG5vZGVfanMKCm5vZGVfanM6CiAgLSA2CiAgLSA4CiAgLSAx
MAogIC0gMTIKCmJyYW5jaGVzOgogIG9ubHk6CiAgICAtIG1hc3RlcgoKYmVm
b3JlX2luc3RhbGw6CiAgLSBucG0gaW5zdGFsbCAtZyBqc2hpbnQKCnNjcmlw
dDogbWFrZSB0cmF2aXMK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'amphtml',41766002,b'The AMP web component framework.',b'JavaScript',1754,13281,,702,False,b'https://api.github.com/repos/ampproject/amphtml/forks',"IyBBTVAg4pqhCgpbIVtCdWlsZCBTdGF0dXNdKGh0dHBzOi8vaW1nLnNoaWVs
ZHMuaW8vdHJhdmlzL2FtcHByb2plY3QvYW1waHRtbC9tYXN0ZXIuc3ZnP2xv
Z289VHJhdmlzJTIwQ0kmbG9nb0NvbG9yPXdoaXRlJnN0eWxlPWZsYXQtc3F1
YXJlICdCdWlsZCBTdGF0dXMnKV0oaHR0cHM6Ly90cmF2aXMtY2kub3JnL2Ft
cHByb2plY3QvYW1waHRtbC9idWlsZHMpClshW0dpdEh1YiBSZWxlYXNlXSho
dHRwczovL2ltZy5zaGllbGRzLmlvL2dpdGh1Yi9yZWxlYXNlL2FtcHByb2pl
Y3QvYW1waHRtbC5zdmc/bG9nbz1HaXRIdWImc3R5bGU9ZmxhdC1zcXVhcmUg
J0dpdEh1YiBSZWxlYXNlJyldKGh0dHBzOi8vZ2l0aHViLmNvbS9hbXBwcm9q
ZWN0L2FtcGh0bWwvcmVsZWFzZXMvbGF0ZXN0KQpbIVtDb250cmlidXRvcnNd
KGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vZ2l0aHViL2NvbnRyaWJ1dG9ycy1h
bm9uL2FtcHByb2plY3QvYW1waHRtbC5zdmc/bG9nbz1HaXRIdWImc3R5bGU9
ZmxhdC1zcXVhcmUgJ0NvbnRyaWJ1dG9ycycpXShodHRwczovL2dpdGh1Yi5j
b20vYW1wcHJvamVjdC9hbXBodG1sL2dyYXBocy9jb250cmlidXRvcnMpClsh
W0NvbW1pdHNdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vZ2l0aHViL2NvbW1p
dC1hY3Rpdml0eS9tL2FtcHByb2plY3QvYW1waHRtbC5zdmc/bG9nbz1HaXRI
dWImc3R5bGU9ZmxhdC1zcXVhcmUgJ0NvbW1pdHMnKV0oaHR0cHM6Ly9naXRo
dWIuY29tL2FtcHByb2plY3QvYW1waHRtbC9wdWxzZS9tb250aGx5KQpbIVtC
YWRnZXNdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvYmFkZ2VzLTE2
LWJyaWdodGdyZWVuP2xvZ289R2l0SHViJnN0eWxlPWZsYXQtc3F1YXJlKV0o
IykKCjxkZXRhaWxzPgo8c3VtbWFyeT4KTWV0cmljcwogIAo8L3N1bW1hcnk+
CgpbIVtBYnNvbHV0ZSBDb2RlIENvdmVyYWdlXShodHRwczovL2ltZy5zaGll
bGRzLmlvL2VuZHBvaW50LnN2Zz9sb2dvPUNvZGVjb3YmbG9nb0NvbG9yPXdo
aXRlJnN0eWxlPWZsYXQtc3F1YXJlJnVybD1odHRwcyUzQSUyRiUyRmFtcC1w
cm9qZWN0LW1ldHJpY3MuYXBwc3BvdC5jb20lMkZhcGklMkZiYWRnZSUyRkFi
c29sdXRlQ292ZXJhZ2VNZXRyaWMgJ1Rlc3QgY292ZXJhZ2UgZm9yIHRoZSBy
ZXBvc2l0b3J5IGFzIGNvbXB1dGVkIGJ5IENvZGVDb3YnKV0oaHR0cHM6Ly9j
b2RlY292LmlvL2doL2FtcHByb2plY3QvYW1waHRtbC8pClshW1ByZXN1Ym1p
dCBMYXRlbmN5XShodHRwczovL2ltZy5zaGllbGRzLmlvL2VuZHBvaW50LnN2
Zz9sb2dvPVRyYXZpcyUyMENJJmxvZ29Db2xvcj13aGl0ZSZzdHlsZT1mbGF0
LXNxdWFyZSZ1cmw9aHR0cHMlM0ElMkYlMkZhbXAtcHJvamVjdC1tZXRyaWNz
LmFwcHNwb3QuY29tJTJGYXBpJTJGYmFkZ2UlMkZQcmVzdWJtaXRMYXRlbmN5
TWV0cmljICdBdmVyYWdlIFRyYXZpcyBidWlsZCB0aW1lIG92ZXIgdGhlIGxh
c3QgOTAgZGF5cycpXShodHRwczovL3RyYXZpcy1jaS5vcmcvYW1wcHJvamVj
dC9hbXBodG1sL2J1aWxkcykKWyFbUmVsZWFzZSBDaGVycnlwaWNrIENvdW50
XShodHRwczovL2ltZy5zaGllbGRzLmlvL2VuZHBvaW50LnN2Zz9sb2dvPUdp
dEh1YiZsb2dvQ29sb3I9d2hpdGUmc3R5bGU9ZmxhdC1zcXVhcmUmdXJsPWh0
dHBzJTNBJTJGJTJGYW1wLXByb2plY3QtbWV0cmljcy5hcHBzcG90LmNvbSUy
RmFwaSUyRmJhZGdlJTJGUmVsZWFzZUNoZXJyeXBpY2tDb3VudE1ldHJpYyAn
TnVtYmVyIG9mIGNoZXJyeS1waWNrcyBpbiByZWxlYXNlcyBvdmVyIHRoZSBs
YXN0IDkwIGRheXMnKV0oaHR0cHM6Ly9naXRodWIuY29tL2FtcHByb2plY3Qv
YW1waHRtbC9pc3N1ZXM/dXRmOD0lRTIlOUMlOTMmcT1pcyUzQWlzc3VlK3Rp
dGxlJTNBKyUyMkNoZXJyeS1waWNrJTIyKQpbIVtSZWxlYXNlIEdyYW51bGFy
aXR5XShodHRwczovL2ltZy5zaGllbGRzLmlvL2VuZHBvaW50LnN2Zz9sb2dv
PUdpdEh1YiZsb2dvQ29sb3I9d2hpdGUmc3R5bGU9ZmxhdC1zcXVhcmUmdXJs
PWh0dHBzJTNBJTJGJTJGYW1wLXByb2plY3QtbWV0cmljcy5hcHBzcG90LmNv
bSUyRmFwaSUyRmJhZGdlJTJGUmVsZWFzZUdyYW51bGFyaXR5TWV0cmljICdB
dmVyYWdlIGNvbW1pdHMgcGVyIHJlbGVhc2Ugb3ZlciB0aGUgbGFzdCA5MCBk
YXlzJyldKGh0dHBzOi8vZ2l0aHViLmNvbS9hbXBwcm9qZWN0L2FtcGh0bWwv
cmVsZWFzZXMpClshW1RyYXZpcyBHcmVlbm5lc3NdKGh0dHBzOi8vaW1nLnNo
aWVsZHMuaW8vZW5kcG9pbnQuc3ZnP2xvZ289VHJhdmlzJTIwQ0kmbG9nb0Nv
bG9yPXdoaXRlJnN0eWxlPWZsYXQtc3F1YXJlJnVybD1odHRwcyUzQSUyRiUy
RmFtcC1wcm9qZWN0LW1ldHJpY3MuYXBwc3BvdC5jb20lMkZhcGklMkZiYWRn
ZSUyRlRyYXZpc0dyZWVubmVzc01ldHJpYyAnUGVyY2VudGFnZSBvZiBncmVl
biBUcmF2aXMgYnVpbGRzIG92ZXIgdGhlIGxhc3QgOTAgZGF5cycpXShodHRw
czovL3RyYXZpcy1jaS5vcmcvYW1wcHJvamVjdC9hbXBodG1sL2J1aWxkcykK
WyFbVHJhdmlzIEZsYWtpbmVzc10oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9l
bmRwb2ludC5zdmc/bG9nbz1UcmF2aXMlMjBDSSZsb2dvQ29sb3I9d2hpdGUm
c3R5bGU9ZmxhdC1zcXVhcmUmdXJsPWh0dHBzJTNBJTJGJTJGYW1wLXByb2pl
Y3QtbWV0cmljcy5hcHBzcG90LmNvbSUyRmFwaSUyRmJhZGdlJTJGVHJhdmlz
Rmxha2luZXNzTWV0cmljICdQZXJjZW50YWdlIG9mIGZsYWt5IFRyYXZpcyBi
dWlsZHMgb3ZlciB0aGUgbGFzdCA5MCBkYXlzJyldKGh0dHBzOi8vdHJhdmlz
LWNpLm9yZy9hbXBwcm9qZWN0L2FtcGh0bWwvYnVpbGRzKQoKPC9kZXRhaWxz
PgoKPGRldGFpbHM+CjxzdW1tYXJ5PgpUb29saW5nCgo8L3N1bW1hcnk+Cgpb
IVtQZXJjeV0oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS8lRjAlOUYl
QTYlOTQlMjB2aXN1YWwlMjB0ZXN0aW5nLVBlcmN5LXZpb2xldC5zdmc/c3R5
bGU9ZmxhdC1zcXVhcmUgJ1BlcmN5JyldKGh0dHBzOi8vcGVyY3kuaW8vYW1w
cHJvamVjdC9hbXBodG1sKQpbIVtQcmV0dGllcl0oaHR0cHM6Ly9pbWcuc2hp
ZWxkcy5pby9iYWRnZS9jb2RlX3N0eWxlLVByZXR0aWVyLWZmNjliNC5zdmc/
bG9nbz1QcmV0dGllciZsb2dvQ29sb3I9d2hpdGUmc3R5bGU9ZmxhdC1zcXVh
cmUgJ1ByZXR0aWVyJyldKGh0dHBzOi8vZ2l0aHViLmNvbS9wcmV0dGllci9w
cmV0dGllcikKWyFbQ29kZWNvdl0oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9i
YWRnZS90ZXN0X2NvdmVyYWdlLUNvZGVDb3YtZjAxZjdhLnN2Zz9sb2dvPUNv
ZGVjb3YmbG9nb0NvbG9yPXdoaXRlJnN0eWxlPWZsYXQtc3F1YXJlICdDb2Rl
Y292JyldKGh0dHBzOi8vY29kZWNvdi5pby9naC9hbXBwcm9qZWN0L2FtcGh0
bWwvKQpbIVtMR1RNXShodHRwczovL2ltZy5zaGllbGRzLmlvL2xndG0vYWxl
cnRzL2dpdGh1Yi9hbXBwcm9qZWN0L2FtcGh0bWwuc3ZnP2xvZ289bGd0bSZz
dHlsZT1mbGF0LXNxdWFyZSAnTEdUTScpXShodHRwczovL2xndG0uY29tL3By
b2plY3RzL2cvYW1wcHJvamVjdC9hbXBodG1sLykKWyFbUmVub3ZhdGVdKGh0
dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvcmVub3ZhdGUtZW5hYmxlZC1i
cmlnaHRncmVlbi5zdmc/bG9nbz1kZXBlbmRhYm90JnN0eWxlPWZsYXQtc3F1
YXJlICdSZW5vdmF0ZScpXShodHRwczovL3Jlbm92YXRlYXBwLmNvbS8pCgo8
L2RldGFpbHM+CgpbQU1QXShodHRwczovL2FtcC5kZXYpIGlzIGEgd2ViIGNv
bXBvbmVudCBmcmFtZXdvcmsgZm9yIGVhc2lseSBjcmVhdGluZyB1c2VyLWZp
cnN0IHdlYnNpdGVzLCBzdG9yaWVzLCBhZHMsIGVtYWlscyBhbmQgbW9yZS4K
CkFNUCBpcyBhbiBvcGVuIHNvdXJjZSBwcm9qZWN0LCBhbmQgd2UnZCBsb3Zl
IHlvdXIgaGVscCBtYWtpbmcgaXQgYmV0dGVyIQoKIyMgV2FudCB0byBrbm93
IG1vcmUgYWJvdXQgQU1QPwoKLSBbYW1wLmRldl0oaHR0cHM6Ly9hbXAuZGV2
KSBpcyB0aGUgYmVzdCBwbGFjZSB0byBsZWFybiBtb3JlIGFib3V0IEFNUC0t
YW5kIG9mIGNvdXJzZSB0aGUgc2l0ZSBpcyBtYWRlIHVzaW5nIEFNUCEKLSBG
b3IgZGV2ZWxvcGVycyB1c2luZyBBTVAsIGFtcC5kZXYgaW5jbHVkZXMKICAt
IFtndWlkZXMgYW5kIHR1dG9yaWFsc10oaHR0cHM6Ly9hbXAuZGV2L2RvY3Vt
ZW50YXRpb24vZ3VpZGVzLWFuZC10dXRvcmlhbHMvKQogIC0gW2V4YW1wbGVz
XShodHRwczovL2FtcC5kZXYvZG9jdW1lbnRhdGlvbi9leGFtcGxlcy8pCiAg
LSBbcmVmZXJlbmNlIGRvY3NdKGh0dHBzOi8vYW1wLmRldi9kb2N1bWVudGF0
aW9uL2NvbXBvbmVudHMvP2Zvcm1hdD13ZWJzaXRlcykKICAtIFtleGFtcGxl
IHRlbXBsYXRlc10oaHR0cHM6Ly9hbXAuZGV2L2RvY3VtZW50YXRpb24vdGVt
cGxhdGVzLykKICAtIFt0b29scyB0byBtYWtlIHVzaW5nIEFNUCBlYXNpZXJd
KGh0dHBzOi8vYW1wLmRldi9kb2N1bWVudGF0aW9uL3Rvb2xzKQoKIyMgSGF2
aW5nIGEgcHJvYmxlbSB1c2luZyBBTVA/CgotIFRoZSBbYW1wLmRldiBTdXBw
b3J0IHBhZ2VdKGh0dHBzOi8vYW1wLmRldi9zdXBwb3J0LykgaGFzIHJlc291
cmNlcyBmb3IgZ2V0dGluZyBoZWxwLgotIFVzZSBbU3RhY2sgT3ZlcmZsb3dd
KGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvdGFnZ2VkL2Ft
cC1odG1sKSB0byBhc2sgcXVlc3Rpb25zIGFib3V0IHVzaW5nIEFNUCBhbmQg
ZmluZCBhbnN3ZXJzIHRvIHF1ZXN0aW9ucyBvdGhlcnMgaGF2ZSBhc2tlZC4K
LSBbTGV0IHVzIGtub3cgYWJvdXQgYnVnc10oaHR0cHM6Ly9naXRodWIuY29t
L2FtcHByb2plY3QvYW1waHRtbC9ibG9iL21hc3Rlci9DT05UUklCVVRJTkcu
bWQjcmVwb3J0LWEtYnVnKSwgYW5kIFtmaWxlIGZlYXR1cmUgcmVxdWVzdHNd
KGh0dHBzOi8vZ2l0aHViLmNvbS9hbXBwcm9qZWN0L2FtcGh0bWwvYmxvYi9t
YXN0ZXIvQ09OVFJJQlVUSU5HLm1kI21ha2UtYS1zdWdnZXN0aW9uKSB0byBz
dWdnZXN0IGltcHJvdmVtZW50cy4KLSBBTVAgYWNjZXB0cyByZXNwb25zaWJs
ZSBzZWN1cml0eSBkaXNjbG9zdXJlcyB0aHJvdWdoIHRoZSBbR29vZ2xlIEFw
cGxpY2F0aW9uIFNlY3VyaXR5IHByb2dyYW1dKGh0dHBzOi8vd3d3Lmdvb2ds
ZS5jb20vYWJvdXQvYXBwc2VjdXJpdHkvKS4KCiMjIFdhbnQgdG8gaGVscCBt
YWtlIEFNUCBiZXR0ZXI/CgotIFtDT05UUklCVVRJTkcubWRdKGh0dHBzOi8v
Z2l0aHViLmNvbS9hbXBwcm9qZWN0L2FtcGh0bWwvYmxvYi9tYXN0ZXIvQ09O
VFJJQlVUSU5HLm1kKSBoYXMgaW5mb3JtYXRpb24gb24gaG93IHlvdSBjYW4g
aGVscCBpbXByb3ZlIEFNUCwgaW5jbHVkaW5nIFtvbmdvaW5nIHBhcnRpY2lw
YXRpb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9hbXBwcm9qZWN0L2FtcGh0bWwv
YmxvYi9tYXN0ZXIvQ09OVFJJQlVUSU5HLm1kI29uZ29pbmctcGFydGljaXBh
dGlvbikgdGhyb3VnaCBTbGFjaywgd2Vla2x5IGRlc2lnbiByZXZpZXdzLCBl
dGMuCi0gV2Ugc3Ryb25nbHkgZW5jb3VyYWdlIFtjb2RlIGNvbnRyaWJ1dGlv
bnNdKGh0dHBzOi8vZ2l0aHViLmNvbS9hbXBwcm9qZWN0L2FtcGh0bWwvYmxv
Yi9tYXN0ZXIvY29udHJpYnV0aW5nL2NvbnRyaWJ1dGluZy1jb2RlLm1kKSEK
LSAqKldlIGVudGh1c2lhc3RpY2FsbHkgd2VsY29tZSBuZXcgY29udHJpYnV0
b3JzIHRvIEFNUCBfZXZlbiBpZiB5b3UgaGF2ZSBubyBleHBlcmllbmNlIGJl
aW5nIHBhcnQgb2YgYW4gb3BlbiBzb3VyY2UgcHJvamVjdF8qKi4gV2UndmUg
bWFkZSBpdCBlYXN5IHRvIFtnZXQgc3RhcnRlZCBjb250cmlidXRpbmddKGh0
dHBzOi8vZ2l0aHViLmNvbS9hbXBwcm9qZWN0L2FtcGh0bWwvYmxvYi9tYXN0
ZXIvQ09OVFJJQlVUSU5HLm1kI2dldC1zdGFydGVkLXdpdGgtb3Blbi1zb3Vy
Y2UpLgotIENvbnNpZGVyIGpvaW5pbmcgb25lIG9mIEFNUCdzIFtXb3JraW5n
IEdyb3Vwc10oaHR0cHM6Ly9naXRodWIuY29tL2FtcHByb2plY3QvbWV0YS90
cmVlL21hc3Rlci93b3JraW5nLWdyb3VwcyksIHdoZXJlIG1vc3Qgb2YgdGhl
IGRheS10by1kYXkgd29yayBpbiBBTVAgZ2V0cyBkb25lLgoKIyMgT3RoZXIg
dXNlZnVsIGluZm9ybWF0aW9uCgotIFtBTVAncyByZWxlYXNlIGRvY3VtZW50
YXRpb25dKGNvbnRyaWJ1dGluZy9yZWxlYXNlLXNjaGVkdWxlLm1kKSBwcm92
aWRlcyBkZXRhaWxzIG9uIGhvdyBhbmQgd2hlbiBBTVAgcmVsZWFzZXMgbmV3
IHZlcnNpb25zLCBpbmNsdWRpbmcgW2hvdyB0byBrbm93IHdoZW4gYSBjaGFu
Z2UgaXMgbGl2ZSBpbiBwcm9kdWN0aW9uXShodHRwczovL2dpdGh1Yi5jb20v
YW1wcHJvamVjdC9hbXBodG1sL2Jsb2IvbWFzdGVyL2NvbnRyaWJ1dGluZy9y
ZWxlYXNlLXNjaGVkdWxlLm1kI2RldGVybWluaW5nLWlmLXlvdXItY2hhbmdl
LWlzLWluLXByb2R1Y3Rpb24pLgotIFtBTVAncyByb2FkbWFwXShodHRwczov
L2FtcC5kZXYvY29tbXVuaXR5L3JvYWRtYXApIHByb3ZpZGVzIGRldGFpbHMg
b24gc29tZSBvZiB0aGUgc2lnbmlmaWNhbnQgcHJvamVjdHMgd2UgYXJlIHdv
cmtpbmcgb24uCi0gVGhlIFtBTVAgbWV0YSByZXBvc2l0b3J5XShodHRwczov
L2dpdGh1Yi5jb20vYW1wcHJvamVjdC9tZXRhKSBoYXMgaW5mb3JtYXRpb24g
X2Fib3V0XyB0aGUgQU1QIG9wZW4gc291cmNlIHByb2plY3QsIGluY2x1ZGlu
ZyBBTVAncyBbZ292ZXJuYW5jZV0oaHR0cHM6Ly9naXRodWIuY29tL2FtcHBy
b2plY3QvbWV0YS9ibG9iL21hc3Rlci9HT1ZFUk5BTkNFLm1kKS4KLSBbQU1Q
J3MgY29kZSBvZiBjb25kdWN0XShodHRwczovL2dpdGh1Yi5jb20vYW1wcHJv
amVjdC9tZXRhL2Jsb2IvbWFzdGVyL0NPREVfT0ZfQ09ORFVDVC5tZCkgZG9j
dW1lbnRzIGhvdyBhbGwgbWVtYmVycywgY29tbWl0dGVycyBhbmQgdm9sdW50
ZWVycyBpbiB0aGUgY29tbXVuaXR5IGFyZSByZXF1aXJlZCB0byBhY3QuIEFN
UCBzdHJpdmVzIGZvciBhIHBvc2l0aXZlIGFuZCBncm93aW5nIHByb2plY3Qg
Y29tbXVuaXR5IHRoYXQgcHJvdmlkZXMgYSBzYWZlIGVudmlyb25tZW50IGZv
ciBldmVyeW9uZS4K
",,13281,"bGFuZ3VhZ2U6IG5vZGVfanMKZGlzdDogeGVuaWFsCm5vZGVfanM6CiAgLSAn
bHRzLyonCnB5dGhvbjoKICAtICcyLjcnCm5vdGlmaWNhdGlvbnM6CiAgZW1h
aWw6CiAgICByZWNpcGllbnRzOgogICAgICAtIGFtcC1idWlsZC1jb3BAZ3Jv
dGF0aW9ucy5hcHBzcG90bWFpbC5jb20KICAgIG9uX3N1Y2Nlc3M6IGNoYW5n
ZQogICAgb25fZmFpbHVyZTogY2hhbmdlCmJlZm9yZV9pbnN0YWxsOgogICMg
T3ZlcnJpZGUgWGVuaWFsJ3MgZGVmYXVsdCBKYXZhIHZlcnNpb24gKGdpdGh1
Yi5jb20vdHJhdmlzLWNpL3RyYXZpcy1jaS9pc3N1ZXMvMTAyOTApCiAgLSBl
eHBvcnQgUEFUSD0kKGVjaG8gIiRQQVRIIiB8IHNlZCAtZSAncy86XC91c3Jc
L2xvY2FsXC9saWJcL2p2bVwvb3BlbmpkazExXC9iaW4vLycpCiAgLSBleHBv
cnQgSkFWQV9IT01FPS91c3IvbGliL2p2bS9qYXZhLTEuOC4wLW9wZW5qZGst
YW1kNjQKICAtIHBpcCBpbnN0YWxsIC0tdXNlciBwcm90b2J1ZgpicmFuY2hl
czoKICBvbmx5OgogICAgLSBtYXN0ZXIKICAgIC0gcmVsZWFzZQogICAgLSBj
YW5hcnkKICAgIC0gL15hbXAtcmVsZWFzZS0uKiQvCmFkZG9uczoKICBhcHQ6
CiAgICBwYWNrYWdlczoKICAgICAgIyBVc2UgdW5idWZmZXIgKGZyb20gZXhw
ZWN0LWRldikgZm9yIGxvZyBjb2xvcmluZyAoZ2l0aHViLmNvbS90cmF2aXMt
Y2kvdHJhdmlzLWNpL2lzc3Vlcy83OTY3KQogICAgICAtIGV4cGVjdC1kZXYK
ICAgICAgLSBnb29nbGUtY2xvdWQtc2RrCiAgICAgIC0gb3BlbnNzbAogICAg
ICAtIHByb3RvYnVmLWNvbXBpbGVyCiAgY2hyb21lOiBzdGFibGUKICBob3N0
czoKICAgIC0gYWRzLmxvY2FsaG9zdAogICAgLSBpZnJhbWUubG9jYWxob3N0
CiAgICAjIENVUkxzIGFtcCBzdWJkb21haW4gZm9yIHRoZSBhbXAtcmVjYXB0
Y2hhLWlucHV0IGludGVncmF0aW9uIHRlc3QuIFRoZSBoYXNoCiAgICAjIGlz
IHRoZSBDVVJMUyBzdWJkb21haW4gZm9yIGxvY2FsaG9zdDo5ODc2CiAgICAt
IGpnbGEzem1pYjJnZ3E1YnVjNGh3aTV0YWxvaDZqbHZ6dWtkZGZyNHpsdHoz
dmF5NXM1cnEucmVjYXB0Y2hhLmxvY2FsaG9zdAogICAgIyBSZXF1ZXN0ZWQg
Ynkgc29tZSB0ZXN0cyBiZWNhdXNlIHRoZXkgbmVlZCBhIHZhbGlkIGZvbnQg
aG9zdCwKICAgICMgYnV0IHNob3VsZCBub3QgcmVzb2x2ZSBpbiB0ZXN0cy4K
ICAgIC0gZm9udHMuZ29vZ2xlYXBpcy5jb20Kc3RhZ2VzOgogIC0gbmFtZTog
YnVpbGQKICAtIG5hbWU6IHRlc3QKICAtIG5hbWU6IGV4cGVyaW1lbnQKICAg
IGlmOiB0eXBlID0gcHVzaApqb2JzOgogIGluY2x1ZGU6CiAgICAtIHN0YWdl
OiBidWlsZAogICAgICBuYW1lOiAnQnVpbGQnCiAgICAgIHNjcmlwdDoKICAg
ICAgICAtIHVuYnVmZmVyIG5vZGUgYnVpbGQtc3lzdGVtL3ByLWNoZWNrL2J1
aWxkLmpzCiAgICAtIHN0YWdlOiBidWlsZAogICAgICBuYW1lOiAnQ2hlY2tz
JwogICAgICBzY3JpcHQ6CiAgICAgICAgLSB1bmJ1ZmZlciBub2RlIGJ1aWxk
LXN5c3RlbS9wci1jaGVjay9jaGVja3MuanMKICAgIC0gc3RhZ2U6IGJ1aWxk
CiAgICAgIG5hbWU6ICdWYWxpZGF0b3IgVGVzdHMnCiAgICAgIHNjcmlwdDoK
ICAgICAgICAtIHVuYnVmZmVyIG5vZGUgYnVpbGQtc3lzdGVtL3ByLWNoZWNr
L3ZhbGlkYXRvci10ZXN0cy5qcwogICAgLSBzdGFnZTogYnVpbGQKICAgICAg
bmFtZTogJ0Rpc3QsIEJ1bmRsZSBTaXplJwogICAgICBzY3JpcHQ6CiAgICAg
ICAgLSB1bmJ1ZmZlciBub2RlIGJ1aWxkLXN5c3RlbS9wci1jaGVjay9kaXN0
LWJ1bmRsZS1zaXplLmpzCiAgICAtIHN0YWdlOiB0ZXN0CiAgICAgIG5hbWU6
ICdTaW5nbGUgUGFzcyBUZXN0cycKICAgICAgc2NyaXB0OgogICAgICAgIC0g
dW5idWZmZXIgbm9kZSBidWlsZC1zeXN0ZW0vcHItY2hlY2svc2luZ2xlLXBh
c3MtdGVzdHMuanMKICAgIC0gc3RhZ2U6IHRlc3QKICAgICAgbmFtZTogJ1Zp
c3VhbCBEaWZmIFRlc3RzJwogICAgICBzY3JpcHQ6CiAgICAgICAgLSB1bmJ1
ZmZlciBub2RlIGJ1aWxkLXN5c3RlbS9wci1jaGVjay92aXN1YWwtZGlmZi10
ZXN0cy5qcwogICAgICBlbnY6CiAgICAgICAgLSBDQUNIRV9OQU1FPVZJU1VB
TERJRkZKT0IKICAgIC0gc3RhZ2U6IHRlc3QKICAgICAgbmFtZTogJ0xvY2Fs
IFRlc3RzJwogICAgICBzY3JpcHQ6CiAgICAgICAgLSB1bmJ1ZmZlciBub2Rl
IGJ1aWxkLXN5c3RlbS9wci1jaGVjay9sb2NhbC10ZXN0cy5qcwogICAgLSBz
dGFnZTogdGVzdAogICAgICBuYW1lOiAnUmVtb3RlIChTYXVjZSBMYWJzKSBU
ZXN0cycKICAgICAgc2NyaXB0OgogICAgICAgIC0gdW5idWZmZXIgbm9kZSBi
dWlsZC1zeXN0ZW0vcHItY2hlY2svcmVtb3RlLXRlc3RzLmpzCiAgICAgIGFm
dGVyX3NjcmlwdDoKICAgICAgICAtIGJ1aWxkLXN5c3RlbS9zYXVjZV9jb25u
ZWN0L3N0b3Bfc2F1Y2VfY29ubmVjdC5zaAogICAgICAgIC0gcHMgLWVmCiAg
ICAtIHN0YWdlOiB0ZXN0CiAgICAgIG5hbWU6ICdFbmQgdG8gRW5kIFRlc3Rz
JwogICAgICBzY3JpcHQ6CiAgICAgICAgLSB1bmJ1ZmZlciBub2RlIGJ1aWxk
LXN5c3RlbS9wci1jaGVjay9lMmUtdGVzdHMuanMKICAgICAgZW52OgogICAg
ICAgIC0gQ0FDSEVfTkFNRT1FMkVKT0IKICAgIC0gc3RhZ2U6IGV4cGVyaW1l
bnQKICAgICAgbmFtZTogJ0V4cGVyaW1lbnQgQSBUZXN0cycKICAgICAgc2Ny
aXB0OgogICAgICAgIC0gdW5idWZmZXIgbm9kZSBidWlsZC1zeXN0ZW0vcHIt
Y2hlY2svZXhwZXJpbWVudC10ZXN0cy5qcyAtLWV4cGVyaW1lbnQ9ZXhwZXJp
bWVudEEKICAgIC0gc3RhZ2U6IGV4cGVyaW1lbnQKICAgICAgbmFtZTogJ0V4
cGVyaW1lbnQgQiBUZXN0cycKICAgICAgc2NyaXB0OgogICAgICAgIC0gdW5i
dWZmZXIgbm9kZSBidWlsZC1zeXN0ZW0vcHItY2hlY2svZXhwZXJpbWVudC10
ZXN0cy5qcyAtLWV4cGVyaW1lbnQ9ZXhwZXJpbWVudEIKICAgIC0gc3RhZ2U6
IGV4cGVyaW1lbnQKICAgICAgbmFtZTogJ0V4cGVyaW1lbnQgQyBUZXN0cycK
ICAgICAgc2NyaXB0OgogICAgICAgIC0gdW5idWZmZXIgbm9kZSBidWlsZC1z
eXN0ZW0vcHItY2hlY2svZXhwZXJpbWVudC10ZXN0cy5qcyAtLWV4cGVyaW1l
bnQ9ZXhwZXJpbWVudEMKYmVmb3JlX2NhY2hlOgogICMgZG8gbm90IHN0b3Jl
IGNhY2hlIGZvciBwciBidWlsZHMKICAtIGlmIFtbICRUUkFWSVNfRVZFTlRf
VFlQRSA9PSBwdWxsX3JlcXVlc3QgXV07IHRoZW4gZXhpdCAkVFJBVklTX1RF
U1RfUkVTVUxUIDsgZmkKY2FjaGU6CiAgZGlyZWN0b3JpZXM6CiAgICAtIG5v
ZGVfbW9kdWxlcwogICAgLSBidWlsZC1zeXN0ZW0vdGFza3MvZTJlL25vZGVf
bW9kdWxlcwogICAgLSBidWlsZC1zeXN0ZW0vdGFza3MvdmlzdWFsLWRpZmYv
bm9kZV9tb2R1bGVzCiAgICAtIHNhdWNlX2Nvbm5lY3QKICAgIC0gdmFsaWRh
dG9yL25vZGVfbW9kdWxlcwogICAgLSB2YWxpZGF0b3Ivbm9kZWpzL25vZGVf
bW9kdWxlcwogICAgLSB2YWxpZGF0b3Ivd2VidWkvbm9kZV9tb2R1bGVzCiAg
eWFybjogdHJ1ZQo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
