name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'awesome-deep-learning-papers',60325062,b'The most cited deep learning papers',b'TeX',32,20115,,2017,False,b'https://api.github.com/repos/terryum/awesome-deep-learning-papers/forks',"IyBBd2Vzb21lIC0gTW9zdCBDaXRlZCBEZWVwIExlYXJuaW5nIFBhcGVycwoK
WyFbQXdlc29tZV0oaHR0cHM6Ly9jZG4ucmF3Z2l0LmNvbS9zaW5kcmVzb3Jo
dXMvYXdlc29tZS9kNzMwNWYzOGQyOWZlZDc4ZmE4NTY1MmUzYTYzZTE1NGRk
OGU4ODI5L21lZGlhL2JhZGdlLnN2ZyldKGh0dHBzOi8vZ2l0aHViLmNvbS9z
aW5kcmVzb3JodXMvYXdlc29tZSkKCltOb3RpY2VdIFRoaXMgbGlzdCBpcyBu
b3QgYmVpbmcgbWFpbnRhaW5lZCBhbnltb3JlIGJlY2F1c2Ugb2YgdGhlIG92
ZXJ3aGVsbWluZyBhbW91bnQgb2YgZGVlcCBsZWFybmluZyBwYXBlcnMgcHVi
bGlzaGVkIGV2ZXJ5IGRheSBzaW5jZSAyMDE3LgoKQSBjdXJhdGVkIGxpc3Qg
b2YgdGhlIG1vc3QgY2l0ZWQgZGVlcCBsZWFybmluZyBwYXBlcnMgKDIwMTIt
MjAxNikKCldlIGJlbGlldmUgdGhhdCB0aGVyZSBleGlzdCAqY2xhc3NpYyog
ZGVlcCBsZWFybmluZyBwYXBlcnMgd2hpY2ggYXJlIHdvcnRoIHJlYWRpbmcg
cmVnYXJkbGVzcyBvZiB0aGVpciBhcHBsaWNhdGlvbiBkb21haW4uIFJhdGhl
ciB0aGFuIHByb3ZpZGluZyBvdmVyd2hlbG1pbmcgYW1vdW50IG9mIHBhcGVy
cywgV2Ugd291bGQgbGlrZSB0byBwcm92aWRlIGEgKmN1cmF0ZWQgbGlzdCog
b2YgdGhlIGF3ZXNvbWUgZGVlcCBsZWFybmluZyBwYXBlcnMgd2hpY2ggYXJl
IGNvbnNpZGVyZWQgYXMgKm11c3QtcmVhZHMqIGluIGNlcnRhaW4gcmVzZWFy
Y2ggZG9tYWlucy4KCiMjIEJhY2tncm91bmQKCkJlZm9yZSB0aGlzIGxpc3Qs
IHRoZXJlIGV4aXN0IG90aGVyICphd2Vzb21lIGRlZXAgbGVhcm5pbmcgbGlz
dHMqLCBmb3IgZXhhbXBsZSwgW0RlZXAgVmlzaW9uXShodHRwczovL2dpdGh1
Yi5jb20va2p3MDYxMi9hd2Vzb21lLWRlZXAtdmlzaW9uKSBhbmQgW0F3ZXNv
bWUgUmVjdXJyZW50IE5ldXJhbCBOZXR3b3Jrc10oaHR0cHM6Ly9naXRodWIu
Y29tL2tqdzA2MTIvYXdlc29tZS1ybm4pLiBBbHNvLCBhZnRlciB0aGlzIGxp
c3QgY29tZXMgb3V0LCBhbm90aGVyIGF3ZXNvbWUgbGlzdCBmb3IgZGVlcCBs
ZWFybmluZyBiZWdpbm5lcnMsIGNhbGxlZCBbRGVlcCBMZWFybmluZyBQYXBl
cnMgUmVhZGluZyBSb2FkbWFwXShodHRwczovL2dpdGh1Yi5jb20vc29uZ3Jv
dGVrL0RlZXAtTGVhcm5pbmctUGFwZXJzLVJlYWRpbmctUm9hZG1hcCksIGhh
cyBiZWVuIGNyZWF0ZWQgYW5kIGxvdmVkIGJ5IG1hbnkgZGVlcCBsZWFybmlu
ZyByZXNlYXJjaGVycy4KCkFsdGhvdWdoIHRoZSAqUm9hZG1hcCBMaXN0KiBp
bmNsdWRlcyBsb3RzIG9mIGltcG9ydGFudCBkZWVwIGxlYXJuaW5nIHBhcGVy
cywgaXQgZmVlbHMgb3ZlcndoZWxtaW5nIGZvciBtZSB0byByZWFkIHRoZW0g
YWxsLiBBcyBJIG1lbnRpb25lZCBpbiB0aGUgaW50cm9kdWN0aW9uLCBJIGJl
bGlldmUgdGhhdCBzZW1pbmFsIHdvcmtzIGNhbiBnaXZlIHVzIGxlc3NvbnMg
cmVnYXJkbGVzcyBvZiB0aGVpciBhcHBsaWNhdGlvbiBkb21haW4uIFRodXMs
IEkgd291bGQgbGlrZSB0byBpbnRyb2R1Y2UgKip0b3AgMTAwIGRlZXAgbGVh
cm5pbmcgcGFwZXJzKiogaGVyZSBhcyBhIGdvb2Qgc3RhcnRpbmcgcG9pbnQg
b2Ygb3ZlcnZpZXdpbmcgZGVlcCBsZWFybmluZyByZXNlYXJjaGVzLgoKVG8g
Z2V0IHRoZSBuZXdzIGZvciBuZXdseSByZWxlYXNlZCBwYXBlcnMgZXZlcnlk
YXksIGZvbGxvdyBteSBbdHdpdHRlcl0oaHR0cHM6Ly90d2l0dGVyLmNvbS9U
ZXJyeVVtX01MKSBvciBbZmFjZWJvb2sgcGFnZV0oaHR0cHM6Ly93d3cuZmFj
ZWJvb2suY29tL3RlcnJ5dW0uaW8vKSEgCgojIyBBd2Vzb21lIGxpc3QgY3Jp
dGVyaWEKCjEuIEEgbGlzdCBvZiAqKnRvcCAxMDAgZGVlcCBsZWFybmluZyBw
YXBlcnMqKiBwdWJsaXNoZWQgZnJvbSAyMDEyIHRvIDIwMTYgaXMgc3VnZ2Vz
dGVkLgoyLiBJZiBhIHBhcGVyIGlzIGFkZGVkIHRvIHRoZSBsaXN0LCBhbm90
aGVyIHBhcGVyICh1c3VhbGx5IGZyb20gKk1vcmUgUGFwZXJzIGZyb20gMjAx
NiIgc2VjdGlvbikgc2hvdWxkIGJlIHJlbW92ZWQgdG8ga2VlcCB0b3AgMTAw
IHBhcGVycy4gKFRodXMsIHJlbW92aW5nIHBhcGVycyBpcyBhbHNvIGltcG9y
dGFudCBjb250cmlidXRpb25zIGFzIHdlbGwgYXMgYWRkaW5nIHBhcGVycykK
My4gUGFwZXJzIHRoYXQgYXJlIGltcG9ydGFudCwgYnV0IGZhaWxlZCB0byBi
ZSBpbmNsdWRlZCBpbiB0aGUgbGlzdCwgd2lsbCBiZSBsaXN0ZWQgaW4gKk1v
cmUgdGhhbiBUb3AgMTAwKiBzZWN0aW9uLgo0LiBQbGVhc2UgcmVmZXIgdG8g
Kk5ldyBQYXBlcnMqIGFuZCAqT2xkIFBhcGVycyogc2VjdGlvbnMgZm9yIHRo
ZSBwYXBlcnMgcHVibGlzaGVkIGluIHJlY2VudCA2IG1vbnRocyBvciBiZWZv
cmUgMjAxMi4KCiooQ2l0YXRpb24gY3JpdGVyaWEpKgotICoqPCA2IG1vbnRo
cyoqIDogKk5ldyBQYXBlcnMqIChieSBkaXNjdXNzaW9uKQotICoqMjAxNioq
IDogICs2MCBjaXRhdGlvbnMgb3IgIk1vcmUgUGFwZXJzIGZyb20gMjAxNiIK
LSAqKjIwMTUqKiA6ICArMjAwIGNpdGF0aW9ucwotICoqMjAxNCoqIDogICs0
MDAgY2l0YXRpb25zCi0gKioyMDEzKiogOiAgKzYwMCBjaXRhdGlvbnMKLSAq
KjIwMTIqKiA6ICArODAwIGNpdGF0aW9ucwotICoqfjIwMTIqKiA6ICpPbGQg
UGFwZXJzKiAoYnkgZGlzY3Vzc2lvbikKClBsZWFzZSBub3RlIHRoYXQgd2Ug
cHJlZmVyIHNlbWluYWwgZGVlcCBsZWFybmluZyBwYXBlcnMgdGhhdCBjYW4g
YmUgYXBwbGllZCB0byB2YXJpb3VzIHJlc2VhcmNoZXMgcmF0aGVyIHRoYW4g
YXBwbGljYXRpb24gcGFwZXJzLiBGb3IgdGhhdCByZWFzb24sIHNvbWUgcGFw
ZXJzIHRoYXQgbWVldCB0aGUgY3JpdGVyaWEgbWF5IG5vdCBiZSBhY2NlcHRl
ZCB3aGlsZSBvdGhlcnMgY2FuIGJlLiBJdCBkZXBlbmRzIG9uIHRoZSBpbXBh
Y3Qgb2YgdGhlIHBhcGVyLCBhcHBsaWNhYmlsaXR5IHRvIG90aGVyIHJlc2Vh
cmNoZXMgc2NhcmNpdHkgb2YgdGhlIHJlc2VhcmNoIGRvbWFpbiwgYW5kIHNv
IG9uLgoKKipXZSBuZWVkIHlvdXIgY29udHJpYnV0aW9ucyEqKgoKSWYgeW91
IGhhdmUgYW55IHN1Z2dlc3Rpb25zIChtaXNzaW5nIHBhcGVycywgbmV3IHBh
cGVycywga2V5IHJlc2VhcmNoZXJzIG9yIHR5cG9zKSwgcGxlYXNlIGZlZWwg
ZnJlZSB0byBlZGl0IGFuZCBwdWxsIGEgcmVxdWVzdC4KKFBsZWFzZSByZWFk
IHRoZSBbY29udHJpYnV0aW5nIGd1aWRlXShodHRwczovL2dpdGh1Yi5jb20v
dGVycnl1bS9hd2Vzb21lLWRlZXAtbGVhcm5pbmctcGFwZXJzL2Jsb2IvbWFz
dGVyL0NvbnRyaWJ1dGluZy5tZCkgZm9yIGZ1cnRoZXIgaW5zdHJ1Y3Rpb25z
LCB0aG91Z2gganVzdCBsZXR0aW5nIG1lIGtub3cgdGhlIHRpdGxlIG9mIHBh
cGVycyBjYW4gYWxzbyBiZSBhIGJpZyBjb250cmlidXRpb24gdG8gdXMuKQoK
KFVwZGF0ZSkgWW91IGNhbiBkb3dubG9hZCBhbGwgdG9wLTEwMCBwYXBlcnMg
d2l0aCBbdGhpc10oaHR0cHM6Ly9naXRodWIuY29tL3RlcnJ5dW0vYXdlc29t
ZS1kZWVwLWxlYXJuaW5nLXBhcGVycy9ibG9iL21hc3Rlci9mZXRjaF9wYXBl
cnMucHkpIGFuZCBjb2xsZWN0IGFsbCBhdXRob3JzJyBuYW1lcyB3aXRoIFt0
aGlzXShodHRwczovL2dpdGh1Yi5jb20vdGVycnl1bS9hd2Vzb21lLWRlZXAt
bGVhcm5pbmctcGFwZXJzL2Jsb2IvbWFzdGVyL2dldF9hdXRob3JzLnB5KS4g
QWxzbywgW2JpYiBmaWxlXShodHRwczovL2dpdGh1Yi5jb20vdGVycnl1bS9h
d2Vzb21lLWRlZXAtbGVhcm5pbmctcGFwZXJzL2Jsb2IvbWFzdGVyL3RvcDEw
MHBhcGVycy5iaWIpIGZvciBhbGwgdG9wLTEwMCBwYXBlcnMgYXJlIGF2YWls
YWJsZS4gVGhhbmtzLCBkb29kaHdhbGEsIFtTdmVuXShodHRwczovL2dpdGh1
Yi5jb20vc3Vuc2hpbmVteXNvbikgYW5kIFtncmVwaW5zaWdodF0oaHR0cHM6
Ly9naXRodWIuY29tL2dyZXBpbnNpZ2h0KSEKCisgQ2FuIGFueW9uZSBjb250
cmlidXRlIHRoZSBjb2RlIGZvciBvYnRhaW5pbmcgdGhlIHN0YXRpc3RpY3Mg
b2YgdGhlIGF1dGhvcnMgb2YgVG9wLTEwMCBwYXBlcnM/CgoKIyMgQ29udGVu
dHMKCiogW1VuZGVyc3RhbmRpbmcgLyBHZW5lcmFsaXphdGlvbiAvIFRyYW5z
ZmVyXSgjdW5kZXJzdGFuZGluZy0tZ2VuZXJhbGl6YXRpb24tLXRyYW5zZmVy
KQoqIFtPcHRpbWl6YXRpb24gLyBUcmFpbmluZyBUZWNobmlxdWVzXSgjb3B0
aW1pemF0aW9uLS10cmFpbmluZy10ZWNobmlxdWVzKQoqIFtVbnN1cGVydmlz
ZWQgLyBHZW5lcmF0aXZlIE1vZGVsc10oI3Vuc3VwZXJ2aXNlZC0tZ2VuZXJh
dGl2ZS1tb2RlbHMpCiogW0NvbnZvbHV0aW9uYWwgTmV0d29yayBNb2RlbHNd
KCNjb252b2x1dGlvbmFsLW5ldXJhbC1uZXR3b3JrLW1vZGVscykKKiBbSW1h
Z2UgU2VnbWVudGF0aW9uIC8gT2JqZWN0IERldGVjdGlvbl0oI2ltYWdlLXNl
Z21lbnRhdGlvbi0tb2JqZWN0LWRldGVjdGlvbikKKiBbSW1hZ2UgLyBWaWRl
byAvIEV0Y10oI2ltYWdlLS12aWRlby0tZXRjKQoqIFtOYXR1cmFsIExhbmd1
YWdlIFByb2Nlc3NpbmcgLyBSTk5zXSgjbmF0dXJhbC1sYW5ndWFnZS1wcm9j
ZXNzaW5nLS1ybm5zKQoqIFtTcGVlY2ggLyBPdGhlciBEb21haW5dKCNzcGVl
Y2gtLW90aGVyLWRvbWFpbikKKiBbUmVpbmZvcmNlbWVudCBMZWFybmluZyAv
IFJvYm90aWNzXSgjcmVpbmZvcmNlbWVudC1sZWFybmluZy0tcm9ib3RpY3Mp
CiogW01vcmUgUGFwZXJzIGZyb20gMjAxNl0oI21vcmUtcGFwZXJzLWZyb20t
MjAxNikKCiooTW9yZSB0aGFuIFRvcCAxMDApKgoKKiBbTmV3IFBhcGVyc10o
I25ldy1wYXBlcnMpIDogTGVzcyB0aGFuIDYgbW9udGhzCiogW09sZCBQYXBl
cnNdKCNvbGQtcGFwZXJzKSA6IEJlZm9yZSAyMDEyCiogW0hXIC8gU1cgLyBE
YXRhc2V0XSgjaHctLXN3LS1kYXRhc2V0KSA6IFRlY2huaWNhbCByZXBvcnRz
CiogW0Jvb2sgLyBTdXJ2ZXkgLyBSZXZpZXddKCNib29rLS1zdXJ2ZXktLXJl
dmlldykKKiBbVmlkZW8gTGVjdHVyZXMgLyBUdXRvcmlhbHMgLyBCbG9nc10o
I3ZpZGVvLWxlY3R1cmVzLS10dXRvcmlhbHMtLWJsb2dzKQoqIFtBcHBlbmRp
eDogTW9yZSB0aGFuIFRvcCAxMDBdKCNhcHBlbmRpeC1tb3JlLXRoYW4tdG9w
LTEwMCkgOiBNb3JlIHBhcGVycyBub3QgaW4gdGhlIGxpc3QKCiogKiAqCgoj
IyMgVW5kZXJzdGFuZGluZyAvIEdlbmVyYWxpemF0aW9uIC8gVHJhbnNmZXIK
LSAqKkRpc3RpbGxpbmcgdGhlIGtub3dsZWRnZSBpbiBhIG5ldXJhbCBuZXR3
b3JrKiogKDIwMTUpLCBHLiBIaW50b24gZXQgYWwuIFtbcGRmXV0oaHR0cDov
L2FyeGl2Lm9yZy9wZGYvMTUwMy4wMjUzMSkKLSAqKkRlZXAgbmV1cmFsIG5l
dHdvcmtzIGFyZSBlYXNpbHkgZm9vbGVkOiBIaWdoIGNvbmZpZGVuY2UgcHJl
ZGljdGlvbnMgZm9yIHVucmVjb2duaXphYmxlIGltYWdlcyoqICgyMDE1KSwg
QS4gTmd1eWVuIGV0IGFsLiBbW3BkZl1dKGh0dHA6Ly9hcnhpdi5vcmcvcGRm
LzE0MTIuMTg5NykKLSAqKkhvdyB0cmFuc2ZlcmFibGUgYXJlIGZlYXR1cmVz
IGluIGRlZXAgbmV1cmFsIG5ldHdvcmtzPyoqICgyMDE0KSwgSi4gWW9zaW5z
a2kgZXQgYWwuIFtbcGRmXV0oaHR0cDovL3BhcGVycy5uaXBzLmNjL3BhcGVy
LzUzNDctaG93LXRyYW5zZmVyYWJsZS1hcmUtZmVhdHVyZXMtaW4tZGVlcC1u
ZXVyYWwtbmV0d29ya3MucGRmKQotICoqQ05OIGZlYXR1cmVzIG9mZi10aGUt
U2hlbGY6IEFuIGFzdG91bmRpbmcgYmFzZWxpbmUgZm9yIHJlY29nbml0aW9u
KiogKDIwMTQpLCBBLiBSYXphdmlhbiBldCBhbC4gW1twZGZdXShodHRwOi8v
d3d3LmN2LWZvdW5kYXRpb24ub3JnLy9vcGVuYWNjZXNzL2NvbnRlbnRfY3Zw
cl93b3Jrc2hvcHNfMjAxNC9XMTUvcGFwZXJzL1JhemF2aWFuX0NOTl9GZWF0
dXJlc19PZmYtdGhlLVNoZWxmXzIwMTRfQ1ZQUl9wYXBlci5wZGYpCi0gKipM
ZWFybmluZyBhbmQgdHJhbnNmZXJyaW5nIG1pZC1MZXZlbCBpbWFnZSByZXBy
ZXNlbnRhdGlvbnMgdXNpbmcgY29udm9sdXRpb25hbCBuZXVyYWwgbmV0d29y
a3MqKiAoMjAxNCksIE0uIE9xdWFiIGV0IGFsLiBbW3BkZl1dKGh0dHA6Ly93
d3cuY3YtZm91bmRhdGlvbi5vcmcvb3BlbmFjY2Vzcy9jb250ZW50X2N2cHJf
MjAxNC9wYXBlcnMvT3F1YWJfTGVhcm5pbmdfYW5kX1RyYW5zZmVycmluZ18y
MDE0X0NWUFJfcGFwZXIucGRmKQotICoqVmlzdWFsaXppbmcgYW5kIHVuZGVy
c3RhbmRpbmcgY29udm9sdXRpb25hbCBuZXR3b3JrcyoqICgyMDE0KSwgTS4g
WmVpbGVyIGFuZCBSLiBGZXJndXMgW1twZGZdXShodHRwOi8vYXJ4aXYub3Jn
L3BkZi8xMzExLjI5MDEpCi0gKipEZWNhZjogQSBkZWVwIGNvbnZvbHV0aW9u
YWwgYWN0aXZhdGlvbiBmZWF0dXJlIGZvciBnZW5lcmljIHZpc3VhbCByZWNv
Z25pdGlvbioqICgyMDE0KSwgSi4gRG9uYWh1ZSBldCBhbC4gW1twZGZdXSho
dHRwOi8vYXJ4aXYub3JnL3BkZi8xMzEwLjE1MzEpCgo8IS0tLVtLZXkgcmVz
ZWFyY2hlcnNdICBbR2VvZmZyZXkgSGludG9uXShodHRwczovL3NjaG9sYXIu
Z29vZ2xlLmNhL2NpdGF0aW9ucz91c2VyPUppY1lQZEFBQUFBSiksIFtZb3No
dWEgQmVuZ2lvXShodHRwczovL3NjaG9sYXIuZ29vZ2xlLmNhL2NpdGF0aW9u
cz91c2VyPWt1a0EwTGNBQUFBSiksIFtKYXNvbiBZb3NpbnNraV0oaHR0cHM6
Ly9zY2hvbGFyLmdvb2dsZS5jYS9jaXRhdGlvbnM/aGw9ZW4mdXNlcj1neEwx
cWo4QUFBQUopIC0tPgoKIyMjIE9wdGltaXphdGlvbiAvIFRyYWluaW5nIFRl
Y2huaXF1ZXMKLSAqKlRyYWluaW5nIHZlcnkgZGVlcCBuZXR3b3JrcyoqICgy
MDE1KSwgUi4gU3JpdmFzdGF2YSBldCBhbC4gW1twZGZdXShodHRwOi8vcGFw
ZXJzLm5pcHMuY2MvcGFwZXIvNTg1MC10cmFpbmluZy12ZXJ5LWRlZXAtbmV0
d29ya3MucGRmKQotICoqQmF0Y2ggbm9ybWFsaXphdGlvbjogQWNjZWxlcmF0
aW5nIGRlZXAgbmV0d29yayB0cmFpbmluZyBieSByZWR1Y2luZyBpbnRlcm5h
bCBjb3ZhcmlhdGUgc2hpZnQqKiAoMjAxNSksIFMuIExvZmZlIGFuZCBDLiBT
emVnZWR5IFtbcGRmXV0oaHR0cDovL2FyeGl2Lm9yZy9wZGYvMTUwMi4wMzE2
NykKLSAqKkRlbHZpbmcgZGVlcCBpbnRvIHJlY3RpZmllcnM6IFN1cnBhc3Np
bmcgaHVtYW4tbGV2ZWwgcGVyZm9ybWFuY2Ugb24gaW1hZ2VuZXQgY2xhc3Np
ZmljYXRpb24qKiAoMjAxNSksIEsuIEhlIGV0IGFsLiBbW3BkZl1dKGh0dHA6
Ly93d3cuY3YtZm91bmRhdGlvbi5vcmcvb3BlbmFjY2Vzcy9jb250ZW50X2lj
Y3ZfMjAxNS9wYXBlcnMvSGVfRGVsdmluZ19EZWVwX2ludG9fSUNDVl8yMDE1
X3BhcGVyLnBkZikKLSAqKkRyb3BvdXQ6IEEgc2ltcGxlIHdheSB0byBwcmV2
ZW50IG5ldXJhbCBuZXR3b3JrcyBmcm9tIG92ZXJmaXR0aW5nKiogKDIwMTQp
LCBOLiBTcml2YXN0YXZhIGV0IGFsLiBbW3BkZl1dKGh0dHA6Ly9qbWxyLm9y
Zy9wYXBlcnMvdm9sdW1lMTUvc3JpdmFzdGF2YTE0YS9zcml2YXN0YXZhMTRh
LnBkZikKLSAqKkFkYW06IEEgbWV0aG9kIGZvciBzdG9jaGFzdGljIG9wdGlt
aXphdGlvbioqICgyMDE0KSwgRC4gS2luZ21hIGFuZCBKLiBCYSBbW3BkZl1d
KGh0dHA6Ly9hcnhpdi5vcmcvcGRmLzE0MTIuNjk4MCkKLSAqKkltcHJvdmlu
ZyBuZXVyYWwgbmV0d29ya3MgYnkgcHJldmVudGluZyBjby1hZGFwdGF0aW9u
IG9mIGZlYXR1cmUgZGV0ZWN0b3JzKiogKDIwMTIpLCBHLiBIaW50b24gZXQg
YWwuIFtbcGRmXV0oaHR0cDovL2FyeGl2Lm9yZy9wZGYvMTIwNy4wNTgwLnBk
ZikKLSAqKlJhbmRvbSBzZWFyY2ggZm9yIGh5cGVyLXBhcmFtZXRlciBvcHRp
bWl6YXRpb24qKiAoMjAxMikgSi4gQmVyZ3N0cmEgYW5kIFkuIEJlbmdpbyBb
W3BkZl1dKGh0dHA6Ly93d3cuam1sci5vcmcvcGFwZXJzL3ZvbHVtZTEzL2Jl
cmdzdHJhMTJhL2JlcmdzdHJhMTJhKQoKPCEtLS1bS2V5IHJlc2VhcmNoZXJz
XSBbR2VvZmZyZXkgSGludG9uXShodHRwczovL3NjaG9sYXIuZ29vZ2xlLmNh
L2NpdGF0aW9ucz91c2VyPUppY1lQZEFBQUFBSiksIFtZb3NodWEgQmVuZ2lv
XShodHRwczovL3NjaG9sYXIuZ29vZ2xlLmNhL2NpdGF0aW9ucz91c2VyPWt1
a0EwTGNBQUFBSiksIFtDaHJpc3RpYW4gU3plZ2VkeV0oaHR0cHM6Ly9zY2hv
bGFyLmdvb2dsZS5jYS9jaXRhdGlvbnM/aGw9ZW4mdXNlcj0zUWVGN21BQUFB
QUopLCBbU2VyZ2V5IElvZmZlXShodHRwczovL3NjaG9sYXIuZ29vZ2xlLmNh
L2NpdGF0aW9ucz91c2VyPVM1ek95SWtBQUFBSiksIFtLYW1pbmcgSGVdKGh0
dHBzOi8vc2Nob2xhci5nb29nbGUuY2EvY2l0YXRpb25zP2hsPWVuJnVzZXI9
RGh0QUZrd0FBQUFKKSwgW0RpZWRlcmlrIFAuIEtpbmdtYV0oaHR0cHM6Ly9z
Y2hvbGFyLmdvb2dsZS5jYS9jaXRhdGlvbnM/aGw9ZW4mdXNlcj15eUlvUXU0
QUFBQUopLS0+CgojIyMgVW5zdXBlcnZpc2VkIC8gR2VuZXJhdGl2ZSBNb2Rl
bHMKLSAqKlBpeGVsIHJlY3VycmVudCBuZXVyYWwgbmV0d29ya3MqKiAoMjAx
NiksIEEuIE9vcmQgZXQgYWwuIFtbcGRmXV0oaHR0cDovL2FyeGl2Lm9yZy9w
ZGYvMTYwMS4wNjc1OXYyLnBkZikKLSAqKkltcHJvdmVkIHRlY2huaXF1ZXMg
Zm9yIHRyYWluaW5nIEdBTnMqKiAoMjAxNiksIFQuIFNhbGltYW5zIGV0IGFs
LiBbW3BkZl1dKGh0dHA6Ly9wYXBlcnMubmlwcy5jYy9wYXBlci82MTI1LWlt
cHJvdmVkLXRlY2huaXF1ZXMtZm9yLXRyYWluaW5nLWdhbnMucGRmKQotICoq
VW5zdXBlcnZpc2VkIHJlcHJlc2VudGF0aW9uIGxlYXJuaW5nIHdpdGggZGVl
cCBjb252b2x1dGlvbmFsIGdlbmVyYXRpdmUgYWR2ZXJzYXJpYWwgbmV0d29y
a3MqKiAoMjAxNSksIEEuIFJhZGZvcmQgZXQgYWwuIFtbcGRmXV0oaHR0cHM6
Ly9hcnhpdi5vcmcvcGRmLzE1MTEuMDY0MzR2MikKLSAqKkRSQVc6IEEgcmVj
dXJyZW50IG5ldXJhbCBuZXR3b3JrIGZvciBpbWFnZSBnZW5lcmF0aW9uKiog
KDIwMTUpLCBLLiBHcmVnb3IgZXQgYWwuIFtbcGRmXV0oaHR0cDovL2FyeGl2
Lm9yZy9wZGYvMTUwMi4wNDYyMykKLSAqKkdlbmVyYXRpdmUgYWR2ZXJzYXJp
YWwgbmV0cyoqICgyMDE0KSwgSS4gR29vZGZlbGxvdyBldCBhbC4gW1twZGZd
XShodHRwOi8vcGFwZXJzLm5pcHMuY2MvcGFwZXIvNTQyMy1nZW5lcmF0aXZl
LWFkdmVyc2FyaWFsLW5ldHMucGRmKQotICoqQXV0by1lbmNvZGluZyB2YXJp
YXRpb25hbCBCYXllcyoqICgyMDEzKSwgRC4gS2luZ21hIGFuZCBNLiBXZWxs
aW5nIFtbcGRmXV0oaHR0cDovL2FyeGl2Lm9yZy9wZGYvMTMxMi42MTE0KQot
ICoqQnVpbGRpbmcgaGlnaC1sZXZlbCBmZWF0dXJlcyB1c2luZyBsYXJnZSBz
Y2FsZSB1bnN1cGVydmlzZWQgbGVhcm5pbmcqKiAoMjAxMyksIFEuIExlIGV0
IGFsLiBbW3BkZl1dKGh0dHA6Ly9hcnhpdi5vcmcvcGRmLzExMTIuNjIwOSkK
CjwhLS0tW0tleSByZXNlYXJjaGVyc10gW1lvc2h1YSBCZW5naW9dKGh0dHBz
Oi8vc2Nob2xhci5nb29nbGUuY2EvY2l0YXRpb25zP3VzZXI9a3VrQTBMY0FB
QUFKKSwgW0lhbiBHb29kZmVsbG93XShodHRwczovL3NjaG9sYXIuZ29vZ2xl
LmNhL2NpdGF0aW9ucz91c2VyPWlZTjg2S0VBQUFBSiksIFtBbGV4IEdyYXZl
c10oaHR0cHM6Ly9zY2hvbGFyLmdvb2dsZS5jYS9jaXRhdGlvbnM/dXNlcj1E
YUZIeW53QUFBQUopLS0+CiMjIyBDb252b2x1dGlvbmFsIE5ldXJhbCBOZXR3
b3JrIE1vZGVscwotICoqUmV0aGlua2luZyB0aGUgaW5jZXB0aW9uIGFyY2hp
dGVjdHVyZSBmb3IgY29tcHV0ZXIgdmlzaW9uKiogKDIwMTYpLCBDLiBTemVn
ZWR5IGV0IGFsLiBbW3BkZl1dKGh0dHA6Ly93d3cuY3YtZm91bmRhdGlvbi5v
cmcvb3BlbmFjY2Vzcy9jb250ZW50X2N2cHJfMjAxNi9wYXBlcnMvU3plZ2Vk
eV9SZXRoaW5raW5nX3RoZV9JbmNlcHRpb25fQ1ZQUl8yMDE2X3BhcGVyLnBk
ZikKLSAqKkluY2VwdGlvbi12NCwgaW5jZXB0aW9uLXJlc25ldCBhbmQgdGhl
IGltcGFjdCBvZiByZXNpZHVhbCBjb25uZWN0aW9ucyBvbiBsZWFybmluZyoq
ICgyMDE2KSwgQy4gU3plZ2VkeSBldCBhbC4gW1twZGZdXShodHRwOi8vYXJ4
aXYub3JnL3BkZi8xNjAyLjA3MjYxKQotICoqSWRlbnRpdHkgTWFwcGluZ3Mg
aW4gRGVlcCBSZXNpZHVhbCBOZXR3b3JrcyoqICgyMDE2KSwgSy4gSGUgZXQg
YWwuIFtbcGRmXV0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzE2MDMuMDUwMjd2
Mi5wZGYpCi0gKipEZWVwIHJlc2lkdWFsIGxlYXJuaW5nIGZvciBpbWFnZSBy
ZWNvZ25pdGlvbioqICgyMDE2KSwgSy4gSGUgZXQgYWwuIFtbcGRmXV0oaHR0
cDovL2FyeGl2Lm9yZy9wZGYvMTUxMi4wMzM4NSkKLSAqKlNwYXRpYWwgdHJh
bnNmb3JtZXIgbmV0d29yayoqICgyMDE1KSwgTS4gSmFkZXJiZXJnIGV0IGFs
LiwgW1twZGZdXShodHRwOi8vcGFwZXJzLm5pcHMuY2MvcGFwZXIvNTg1NC1z
cGF0aWFsLXRyYW5zZm9ybWVyLW5ldHdvcmtzLnBkZikKLSAqKkdvaW5nIGRl
ZXBlciB3aXRoIGNvbnZvbHV0aW9ucyoqICgyMDE1KSwgQy4gU3plZ2VkeSBl
dCBhbC4gIFtbcGRmXV0oaHR0cDovL3d3dy5jdi1mb3VuZGF0aW9uLm9yZy9v
cGVuYWNjZXNzL2NvbnRlbnRfY3Zwcl8yMDE1L3BhcGVycy9TemVnZWR5X0dv
aW5nX0RlZXBlcl9XaXRoXzIwMTVfQ1ZQUl9wYXBlci5wZGYpCi0gKipWZXJ5
IGRlZXAgY29udm9sdXRpb25hbCBuZXR3b3JrcyBmb3IgbGFyZ2Utc2NhbGUg
aW1hZ2UgcmVjb2duaXRpb24qKiAoMjAxNCksIEsuIFNpbW9ueWFuIGFuZCBB
LiBaaXNzZXJtYW4gW1twZGZdXShodHRwOi8vYXJ4aXYub3JnL3BkZi8xNDA5
LjE1NTYpCi0gKipSZXR1cm4gb2YgdGhlIGRldmlsIGluIHRoZSBkZXRhaWxz
OiBkZWx2aW5nIGRlZXAgaW50byBjb252b2x1dGlvbmFsIG5ldHMqKiAoMjAx
NCksIEsuIENoYXRmaWVsZCBldCBhbC4gW1twZGZdXShodHRwOi8vYXJ4aXYu
b3JnL3BkZi8xNDA1LjM1MzEpCi0gKipPdmVyRmVhdDogSW50ZWdyYXRlZCBy
ZWNvZ25pdGlvbiwgbG9jYWxpemF0aW9uIGFuZCBkZXRlY3Rpb24gdXNpbmcg
Y29udm9sdXRpb25hbCBuZXR3b3JrcyoqICgyMDEzKSwgUC4gU2VybWFuZXQg
ZXQgYWwuIFtbcGRmXV0oaHR0cDovL2FyeGl2Lm9yZy9wZGYvMTMxMi42MjI5
KQotICoqTWF4b3V0IG5ldHdvcmtzKiogKDIwMTMpLCBJLiBHb29kZmVsbG93
IGV0IGFsLiBbW3BkZl1dKGh0dHA6Ly9hcnhpdi5vcmcvcGRmLzEzMDIuNDM4
OXY0KQotICoqTmV0d29yayBpbiBuZXR3b3JrKiogKDIwMTMpLCBNLiBMaW4g
ZXQgYWwuIFtbcGRmXV0oaHR0cDovL2FyeGl2Lm9yZy9wZGYvMTMxMi40NDAw
KQotICoqSW1hZ2VOZXQgY2xhc3NpZmljYXRpb24gd2l0aCBkZWVwIGNvbnZv
bHV0aW9uYWwgbmV1cmFsIG5ldHdvcmtzKiogKDIwMTIpLCBBLiBLcml6aGV2
c2t5IGV0IGFsLiBbW3BkZl1dKGh0dHA6Ly9wYXBlcnMubmlwcy5jYy9wYXBl
ci80ODI0LWltYWdlbmV0LWNsYXNzaWZpY2F0aW9uLXdpdGgtZGVlcC1jb252
b2x1dGlvbmFsLW5ldXJhbC1uZXR3b3Jrcy5wZGYpCgo8IS0tLVtLZXkgcmVz
ZWFyY2hlcnNdICBbQ2hyaXN0aWFuIFN6ZWdlZHldKGh0dHBzOi8vc2Nob2xh
ci5nb29nbGUuY2EvY2l0YXRpb25zP2hsPWVuJnVzZXI9M1FlRjdtQUFBQUFK
KSwgW0thbWluZyBIZV0oaHR0cHM6Ly9zY2hvbGFyLmdvb2dsZS5jYS9jaXRh
dGlvbnM/aGw9ZW4mdXNlcj1EaHRBRmt3QUFBQUopLCBbU2hhb3FpbmcgUmVu
XShodHRwczovL3NjaG9sYXIuZ29vZ2xlLmNhL2NpdGF0aW9ucz9obD1lbiZ1
c2VyPUFVaGo0MzhBQUFBSiksIFtKaWFuIFN1bl0oaHR0cHM6Ly9zY2hvbGFy
Lmdvb2dsZS5jYS9jaXRhdGlvbnM/aGw9ZW4mdXNlcj1BTFZTWkFZQUFBQUop
LCBbR2VvZmZyZXkgSGludG9uXShodHRwczovL3NjaG9sYXIuZ29vZ2xlLmNh
L2NpdGF0aW9ucz91c2VyPUppY1lQZEFBQUFBSiksIFtZb3NodWEgQmVuZ2lv
XShodHRwczovL3NjaG9sYXIuZ29vZ2xlLmNhL2NpdGF0aW9ucz91c2VyPWt1
a0EwTGNBQUFBSiksIFtZYW5uIExlQ3VuXShodHRwczovL3NjaG9sYXIuZ29v
Z2xlLmNhL2NpdGF0aW9ucz9obD1lbiZ1c2VyPVdMTjNRckFBQUFBSiktLT4K
CiMjIyBJbWFnZTogU2VnbWVudGF0aW9uIC8gT2JqZWN0IERldGVjdGlvbgot
ICoqWW91IG9ubHkgbG9vayBvbmNlOiBVbmlmaWVkLCByZWFsLXRpbWUgb2Jq
ZWN0IGRldGVjdGlvbioqICgyMDE2KSwgSi4gUmVkbW9uIGV0IGFsLiBbW3Bk
Zl1dKGh0dHA6Ly93d3cuY3YtZm91bmRhdGlvbi5vcmcvb3BlbmFjY2Vzcy9j
b250ZW50X2N2cHJfMjAxNi9wYXBlcnMvUmVkbW9uX1lvdV9Pbmx5X0xvb2tf
Q1ZQUl8yMDE2X3BhcGVyLnBkZikKLSAqKkZ1bGx5IGNvbnZvbHV0aW9uYWwg
bmV0d29ya3MgZm9yIHNlbWFudGljIHNlZ21lbnRhdGlvbioqICgyMDE1KSwg
Si4gTG9uZyBldCBhbC4gW1twZGZdXShodHRwOi8vd3d3LmN2LWZvdW5kYXRp
b24ub3JnL29wZW5hY2Nlc3MvY29udGVudF9jdnByXzIwMTUvcGFwZXJzL0xv
bmdfRnVsbHlfQ29udm9sdXRpb25hbF9OZXR3b3Jrc18yMDE1X0NWUFJfcGFw
ZXIucGRmKQotICoqRmFzdGVyIFItQ05OOiBUb3dhcmRzIFJlYWwtVGltZSBP
YmplY3QgRGV0ZWN0aW9uIHdpdGggUmVnaW9uIFByb3Bvc2FsIE5ldHdvcmtz
KiogKDIwMTUpLCBTLiBSZW4gZXQgYWwuIFtbcGRmXV0oaHR0cDovL3BhcGVy
cy5uaXBzLmNjL3BhcGVyLzU2MzgtZmFzdGVyLXItY25uLXRvd2FyZHMtcmVh
bC10aW1lLW9iamVjdC1kZXRlY3Rpb24td2l0aC1yZWdpb24tcHJvcG9zYWwt
bmV0d29ya3MucGRmKQotICoqRmFzdCBSLUNOTioqICgyMDE1KSwgUi4gR2ly
c2hpY2sgW1twZGZdXShodHRwOi8vd3d3LmN2LWZvdW5kYXRpb24ub3JnL29w
ZW5hY2Nlc3MvY29udGVudF9pY2N2XzIwMTUvcGFwZXJzL0dpcnNoaWNrX0Zh
c3RfUi1DTk5fSUNDVl8yMDE1X3BhcGVyLnBkZikKLSAqKlJpY2ggZmVhdHVy
ZSBoaWVyYXJjaGllcyBmb3IgYWNjdXJhdGUgb2JqZWN0IGRldGVjdGlvbiBh
bmQgc2VtYW50aWMgc2VnbWVudGF0aW9uKiogKDIwMTQpLCBSLiBHaXJzaGlj
ayBldCBhbC4gW1twZGZdXShodHRwOi8vd3d3LmN2LWZvdW5kYXRpb24ub3Jn
L29wZW5hY2Nlc3MvY29udGVudF9jdnByXzIwMTQvcGFwZXJzL0dpcnNoaWNr
X1JpY2hfRmVhdHVyZV9IaWVyYXJjaGllc18yMDE0X0NWUFJfcGFwZXIucGRm
KQotICoqU3BhdGlhbCBweXJhbWlkIHBvb2xpbmcgaW4gZGVlcCBjb252b2x1
dGlvbmFsIG5ldHdvcmtzIGZvciB2aXN1YWwgcmVjb2duaXRpb24qKiAoMjAx
NCksIEsuIEhlIGV0IGFsLiBbW3BkZl1dKGh0dHA6Ly9hcnhpdi5vcmcvcGRm
LzE0MDYuNDcyOSkKLSAqKlNlbWFudGljIGltYWdlIHNlZ21lbnRhdGlvbiB3
aXRoIGRlZXAgY29udm9sdXRpb25hbCBuZXRzIGFuZCBmdWxseSBjb25uZWN0
ZWQgQ1JGcyoqLCBMLiBDaGVuIGV0IGFsLiBbW3BkZl1dKGh0dHBzOi8vYXJ4
aXYub3JnL3BkZi8xNDEyLjcwNjIpCi0gKipMZWFybmluZyBoaWVyYXJjaGlj
YWwgZmVhdHVyZXMgZm9yIHNjZW5lIGxhYmVsaW5nKiogKDIwMTMpLCBDLiBG
YXJhYmV0IGV0IGFsLiBbW3BkZl1dKGh0dHBzOi8vaGFsLWVucGMuYXJjaGl2
ZXMtb3V2ZXJ0ZXMuZnIvZG9jcy8wMC83NC8yMC83Ny9QREYvZmFyYWJldC1w
YW1pLTEzLnBkZikKCjwhLS0tW0tleSByZXNlYXJjaGVyc10gIFtSb3NzIEdp
cnNoaWNrXShodHRwczovL3NjaG9sYXIuZ29vZ2xlLmNhL2NpdGF0aW9ucz9o
bD1lbiZ1c2VyPVc4VklFWmdBQUFBSiksIFtKZWZmIERvbmFodWVdKGh0dHBz
Oi8vc2Nob2xhci5nb29nbGUuY2EvY2l0YXRpb25zP2hsPWVuJnVzZXI9VWZi
dURIOEFBQUFKKSwgW1RyZXZvciBEYXJyZWxsXShodHRwczovL3NjaG9sYXIu
Z29vZ2xlLmNhL2NpdGF0aW9ucz9obD1lbiZ1c2VyPWJoLXVSRk1BQUFBSikt
LT4KCiMjIyBJbWFnZSAvIFZpZGVvIC8gRXRjCi0gKipJbWFnZSBTdXBlci1S
ZXNvbHV0aW9uIFVzaW5nIERlZXAgQ29udm9sdXRpb25hbCBOZXR3b3Jrcyoq
ICgyMDE2KSwgQy4gRG9uZyBldCBhbC4gW1twZGZdXShodHRwczovL2FyeGl2
Lm9yZy9wZGYvMTUwMS4wMDA5MnYzLnBkZikKLSAqKkEgbmV1cmFsIGFsZ29y
aXRobSBvZiBhcnRpc3RpYyBzdHlsZSoqICgyMDE1KSwgTC4gR2F0eXMgZXQg
YWwuIFtbcGRmXV0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzE1MDguMDY1NzYp
Ci0gKipEZWVwIHZpc3VhbC1zZW1hbnRpYyBhbGlnbm1lbnRzIGZvciBnZW5l
cmF0aW5nIGltYWdlIGRlc2NyaXB0aW9ucyoqICgyMDE1KSwgQS4gS2FycGF0
aHkgYW5kIEwuIEZlaS1GZWkgW1twZGZdXShodHRwOi8vd3d3LmN2LWZvdW5k
YXRpb24ub3JnL29wZW5hY2Nlc3MvY29udGVudF9jdnByXzIwMTUvcGFwZXJz
L0thcnBhdGh5X0RlZXBfVmlzdWFsLVNlbWFudGljX0FsaWdubWVudHNfMjAx
NV9DVlBSX3BhcGVyLnBkZikKLSAqKlNob3csIGF0dGVuZCBhbmQgdGVsbDog
TmV1cmFsIGltYWdlIGNhcHRpb24gZ2VuZXJhdGlvbiB3aXRoIHZpc3VhbCBh
dHRlbnRpb24qKiAoMjAxNSksIEsuIFh1IGV0IGFsLiBbW3BkZl1dKGh0dHA6
Ly9hcnhpdi5vcmcvcGRmLzE1MDIuMDMwNDQpCi0gKipTaG93IGFuZCB0ZWxs
OiBBIG5ldXJhbCBpbWFnZSBjYXB0aW9uIGdlbmVyYXRvcioqICgyMDE1KSwg
Ty4gVmlueWFscyBldCBhbC4gW1twZGZdXShodHRwOi8vd3d3LmN2LWZvdW5k
YXRpb24ub3JnL29wZW5hY2Nlc3MvY29udGVudF9jdnByXzIwMTUvcGFwZXJz
L1ZpbnlhbHNfU2hvd19hbmRfVGVsbF8yMDE1X0NWUFJfcGFwZXIucGRmKQot
ICoqTG9uZy10ZXJtIHJlY3VycmVudCBjb252b2x1dGlvbmFsIG5ldHdvcmtz
IGZvciB2aXN1YWwgcmVjb2duaXRpb24gYW5kIGRlc2NyaXB0aW9uKiogKDIw
MTUpLCBKLiBEb25haHVlIGV0IGFsLiBbW3BkZl1dKGh0dHA6Ly93d3cuY3Yt
Zm91bmRhdGlvbi5vcmcvb3BlbmFjY2Vzcy9jb250ZW50X2N2cHJfMjAxNS9w
YXBlcnMvRG9uYWh1ZV9Mb25nLVRlcm1fUmVjdXJyZW50X0NvbnZvbHV0aW9u
YWxfMjAxNV9DVlBSX3BhcGVyLnBkZikKLSAqKlZRQTogVmlzdWFsIHF1ZXN0
aW9uIGFuc3dlcmluZyoqICgyMDE1KSwgUy4gQW50b2wgZXQgYWwuIFtbcGRm
XV0oaHR0cDovL3d3dy5jdi1mb3VuZGF0aW9uLm9yZy9vcGVuYWNjZXNzL2Nv
bnRlbnRfaWNjdl8yMDE1L3BhcGVycy9BbnRvbF9WUUFfVmlzdWFsX1F1ZXN0
aW9uX0lDQ1ZfMjAxNV9wYXBlci5wZGYpCi0gKipEZWVwRmFjZTogQ2xvc2lu
ZyB0aGUgZ2FwIHRvIGh1bWFuLWxldmVsIHBlcmZvcm1hbmNlIGluIGZhY2Ug
dmVyaWZpY2F0aW9uKiogKDIwMTQpLCBZLiBUYWlnbWFuIGV0IGFsLiBbW3Bk
Zl1dKGh0dHA6Ly93d3cuY3YtZm91bmRhdGlvbi5vcmcvb3BlbmFjY2Vzcy9j
b250ZW50X2N2cHJfMjAxNC9wYXBlcnMvVGFpZ21hbl9EZWVwRmFjZV9DbG9z
aW5nX3RoZV8yMDE0X0NWUFJfcGFwZXIucGRmKToKLSAqKkxhcmdlLXNjYWxl
IHZpZGVvIGNsYXNzaWZpY2F0aW9uIHdpdGggY29udm9sdXRpb25hbCBuZXVy
YWwgbmV0d29ya3MqKiAoMjAxNCksIEEuIEthcnBhdGh5IGV0IGFsLiBbW3Bk
Zl1dKGh0dHA6Ly92aXNpb24uc3RhbmZvcmQuZWR1L3BkZi9rYXJwYXRoeTE0
LnBkZikKLSAqKlR3by1zdHJlYW0gY29udm9sdXRpb25hbCBuZXR3b3JrcyBm
b3IgYWN0aW9uIHJlY29nbml0aW9uIGluIHZpZGVvcyoqICgyMDE0KSwgSy4g
U2ltb255YW4gZXQgYWwuIFtbcGRmXV0oaHR0cDovL3BhcGVycy5uaXBzLmNj
L3BhcGVyLzUzNTMtdHdvLXN0cmVhbS1jb252b2x1dGlvbmFsLW5ldHdvcmtz
LWZvci1hY3Rpb24tcmVjb2duaXRpb24taW4tdmlkZW9zLnBkZikKLSAqKjNE
IGNvbnZvbHV0aW9uYWwgbmV1cmFsIG5ldHdvcmtzIGZvciBodW1hbiBhY3Rp
b24gcmVjb2duaXRpb24qKiAoMjAxMyksIFMuIEppIGV0IGFsLiBbW3BkZl1d
KGh0dHA6Ly9tYWNoaW5lbGVhcm5pbmcud3VzdGwuZWR1L21scGFwZXJzL3Bh
cGVyX2ZpbGVzL2ljbWwyMDEwX0ppWFlZMTAucGRmKQoKPCEtLS1bS2V5IHJl
c2VhcmNoZXJzXSAgW09yaW9sIFZpbnlhbHNdKGh0dHBzOi8vc2Nob2xhci5n
b29nbGUuY2EvY2l0YXRpb25zP3VzZXI9Tmt6eUN2VUFBQUFKKSwgW0FuZHJl
aiBLYXJwYXRoeV0oaHR0cHM6Ly9zY2hvbGFyLmdvb2dsZS5jYS9jaXRhdGlv
bnM/dXNlcj1sOFd1UUpnQUFBQUopLS0+Cgo8IS0tLVtLZXkgcmVzZWFyY2hl
cnNdICBbQWxleCBHcmF2ZXNdKGh0dHBzOi8vc2Nob2xhci5nb29nbGUuY2Ev
Y2l0YXRpb25zP3VzZXI9RGFGSHlud0FBQUFKKS0tPgoKIyMjIE5hdHVyYWwg
TGFuZ3VhZ2UgUHJvY2Vzc2luZyAvIFJOTnMKLSAqKk5ldXJhbCBBcmNoaXRl
Y3R1cmVzIGZvciBOYW1lZCBFbnRpdHkgUmVjb2duaXRpb24qKiAoMjAxNiks
IEcuIExhbXBsZSBldCBhbC4gW1twZGZdXShodHRwOi8vYWNsd2ViLm9yZy9h
bnRob2xvZ3kvTi9OMTYvTjE2LTEwMzAucGRmKQotICoqRXhwbG9yaW5nIHRo
ZSBsaW1pdHMgb2YgbGFuZ3VhZ2UgbW9kZWxpbmcqKiAoMjAxNiksIFIuIEpv
emVmb3dpY3ogZXQgYWwuIFtbcGRmXV0oaHR0cDovL2FyeGl2Lm9yZy9wZGYv
MTYwMi4wMjQxMCkKLSAqKlRlYWNoaW5nIG1hY2hpbmVzIHRvIHJlYWQgYW5k
IGNvbXByZWhlbmQqKiAoMjAxNSksIEsuIEhlcm1hbm4gZXQgYWwuIFtbcGRm
XV0oaHR0cDovL3BhcGVycy5uaXBzLmNjL3BhcGVyLzU5NDUtdGVhY2hpbmct
bWFjaGluZXMtdG8tcmVhZC1hbmQtY29tcHJlaGVuZC5wZGYpCi0gKipFZmZl
Y3RpdmUgYXBwcm9hY2hlcyB0byBhdHRlbnRpb24tYmFzZWQgbmV1cmFsIG1h
Y2hpbmUgdHJhbnNsYXRpb24qKiAoMjAxNSksIE0uIEx1b25nIGV0IGFsLiBb
W3BkZl1dKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8xNTA4LjA0MDI1KQotICoq
Q29uZGl0aW9uYWwgcmFuZG9tIGZpZWxkcyBhcyByZWN1cnJlbnQgbmV1cmFs
IG5ldHdvcmtzKiogKDIwMTUpLCBTLiBaaGVuZyBhbmQgUy4gSmF5YXN1bWFu
YS4gW1twZGZdXShodHRwOi8vd3d3LmN2LWZvdW5kYXRpb24ub3JnL29wZW5h
Y2Nlc3MvY29udGVudF9pY2N2XzIwMTUvcGFwZXJzL1poZW5nX0NvbmRpdGlv
bmFsX1JhbmRvbV9GaWVsZHNfSUNDVl8yMDE1X3BhcGVyLnBkZikKLSAqKk1l
bW9yeSBuZXR3b3JrcyoqICgyMDE0KSwgSi4gV2VzdG9uIGV0IGFsLiBbW3Bk
Zl1dKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8xNDEwLjM5MTYpCi0gKipOZXVy
YWwgdHVyaW5nIG1hY2hpbmVzKiogKDIwMTQpLCBBLiBHcmF2ZXMgZXQgYWwu
IFtbcGRmXV0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzE0MTAuNTQwMSkKLSAq
Kk5ldXJhbCBtYWNoaW5lIHRyYW5zbGF0aW9uIGJ5IGpvaW50bHkgbGVhcm5p
bmcgdG8gYWxpZ24gYW5kIHRyYW5zbGF0ZSoqICgyMDE0KSwgRC4gQmFoZGFu
YXUgZXQgYWwuIFtbcGRmXV0oaHR0cDovL2FyeGl2Lm9yZy9wZGYvMTQwOS4w
NDczKQotICoqU2VxdWVuY2UgdG8gc2VxdWVuY2UgbGVhcm5pbmcgd2l0aCBu
ZXVyYWwgbmV0d29ya3MqKiAoMjAxNCksIEkuIFN1dHNrZXZlciBldCBhbC4g
W1twZGZdXShodHRwOi8vcGFwZXJzLm5pcHMuY2MvcGFwZXIvNTM0Ni1zZXF1
ZW5jZS10by1zZXF1ZW5jZS1sZWFybmluZy13aXRoLW5ldXJhbC1uZXR3b3Jr
cy5wZGYpCi0gKipMZWFybmluZyBwaHJhc2UgcmVwcmVzZW50YXRpb25zIHVz
aW5nIFJOTiBlbmNvZGVyLWRlY29kZXIgZm9yIHN0YXRpc3RpY2FsIG1hY2hp
bmUgdHJhbnNsYXRpb24qKiAoMjAxNCksIEsuIENobyBldCBhbC4gW1twZGZd
XShodHRwOi8vYXJ4aXYub3JnL3BkZi8xNDA2LjEwNzgpCi0gKipBIGNvbnZv
bHV0aW9uYWwgbmV1cmFsIG5ldHdvcmsgZm9yIG1vZGVsaW5nIHNlbnRlbmNl
cyoqICgyMDE0KSwgTi4gS2FsY2hicmVubmVyIGV0IGFsLiBbW3BkZl1dKGh0
dHA6Ly9hcnhpdi5vcmcvcGRmLzE0MDQuMjE4OHYxKQotICoqQ29udm9sdXRp
b25hbCBuZXVyYWwgbmV0d29ya3MgZm9yIHNlbnRlbmNlIGNsYXNzaWZpY2F0
aW9uKiogKDIwMTQpLCBZLiBLaW0gW1twZGZdXShodHRwOi8vYXJ4aXYub3Jn
L3BkZi8xNDA4LjU4ODIpCi0gKipHbG92ZTogR2xvYmFsIHZlY3RvcnMgZm9y
IHdvcmQgcmVwcmVzZW50YXRpb24qKiAoMjAxNCksIEouIFBlbm5pbmd0b24g
ZXQgYWwuIFtbcGRmXV0oaHR0cDovL2FudGhvbG9neS5hY2x3ZWIub3JnL0Qv
RDE0L0QxNC0xMTYyLnBkZikKLSAqKkRpc3RyaWJ1dGVkIHJlcHJlc2VudGF0
aW9ucyBvZiBzZW50ZW5jZXMgYW5kIGRvY3VtZW50cyoqICgyMDE0KSwgUS4g
TGUgYW5kIFQuIE1pa29sb3YgW1twZGZdXShodHRwOi8vYXJ4aXYub3JnL3Bk
Zi8xNDA1LjQwNTMpCi0gKipEaXN0cmlidXRlZCByZXByZXNlbnRhdGlvbnMg
b2Ygd29yZHMgYW5kIHBocmFzZXMgYW5kIHRoZWlyIGNvbXBvc2l0aW9uYWxp
dHkqKiAoMjAxMyksIFQuIE1pa29sb3YgZXQgYWwuIFtbcGRmXV0oaHR0cDov
L3BhcGVycy5uaXBzLmNjL3BhcGVyLzUwMjEtZGlzdHJpYnV0ZWQtcmVwcmVz
ZW50YXRpb25zLW9mLXdvcmRzLWFuZC1waHJhc2VzLWFuZC10aGVpci1jb21w
b3NpdGlvbmFsaXR5LnBkZikKLSAqKkVmZmljaWVudCBlc3RpbWF0aW9uIG9m
IHdvcmQgcmVwcmVzZW50YXRpb25zIGluIHZlY3RvciBzcGFjZSoqICgyMDEz
KSwgVC4gTWlrb2xvdiBldCBhbC4gIFtbcGRmXV0oaHR0cDovL2FyeGl2Lm9y
Zy9wZGYvMTMwMS4zNzgxKQotICoqUmVjdXJzaXZlIGRlZXAgbW9kZWxzIGZv
ciBzZW1hbnRpYyBjb21wb3NpdGlvbmFsaXR5IG92ZXIgYSBzZW50aW1lbnQg
dHJlZWJhbmsqKiAoMjAxMyksIFIuIFNvY2hlciBldCBhbC4gW1twZGZdXSho
dHRwOi8vY2l0ZXNlZXJ4LmlzdC5wc3UuZWR1L3ZpZXdkb2MvZG93bmxvYWQ/
ZG9pPTEwLjEuMS4zODMuMTMyNyZyZXA9cmVwMSZ0eXBlPXBkZikKLSAqKkdl
bmVyYXRpbmcgc2VxdWVuY2VzIHdpdGggcmVjdXJyZW50IG5ldXJhbCBuZXR3
b3JrcyoqICgyMDEzKSwgQS4gR3JhdmVzLiBbW3BkZl1dKGh0dHBzOi8vYXJ4
aXYub3JnL3BkZi8xMzA4LjA4NTApCgo8IS0tLVtLZXkgcmVzZWFyY2hlcnNd
ICBbS3l1bmdoeXVuIENob10oaHR0cHM6Ly9zY2hvbGFyLmdvb2dsZS5jYS9j
aXRhdGlvbnM/dXNlcj0wUkFtbUlBQUFBQUopLCBbT3Jpb2wgVmlueWFsc10o
aHR0cHM6Ly9zY2hvbGFyLmdvb2dsZS5jYS9jaXRhdGlvbnM/dXNlcj1Oa3p5
Q3ZVQUFBQUopLCBbUmljaGFyZCBTb2NoZXJdKGh0dHBzOi8vc2Nob2xhci5n
b29nbGUuY2EvY2l0YXRpb25zP2hsPWVuJnVzZXI9RmFPY3lmTUFBQUFKKSwg
W1RvbWFzIE1pa29sb3ZdKGh0dHBzOi8vc2Nob2xhci5nb29nbGUuY2EvY2l0
YXRpb25zP3VzZXI9b0J1OGtNTUFBQUFKKSwgW0NocmlzdG9waGVyIEQuIE1h
bm5pbmddKGh0dHBzOi8vc2Nob2xhci5nb29nbGUuY2EvY2l0YXRpb25zP3Vz
ZXI9MXptRE9kd0FBQUFKKSwgW1lvc2h1YSBCZW5naW9dKGh0dHBzOi8vc2No
b2xhci5nb29nbGUuY2EvY2l0YXRpb25zP3VzZXI9a3VrQTBMY0FBQUFKKS0t
PgoKIyMjIFNwZWVjaCAvIE90aGVyIERvbWFpbgotICoqRW5kLXRvLWVuZCBh
dHRlbnRpb24tYmFzZWQgbGFyZ2Ugdm9jYWJ1bGFyeSBzcGVlY2ggcmVjb2du
aXRpb24qKiAoMjAxNiksIEQuIEJhaGRhbmF1IGV0IGFsLiBbW3BkZl1dKGh0
dHBzOi8vYXJ4aXYub3JnL3BkZi8xNTA4LjA0Mzk1KQotICoqRGVlcCBzcGVl
Y2ggMjogRW5kLXRvLWVuZCBzcGVlY2ggcmVjb2duaXRpb24gaW4gRW5nbGlz
aCBhbmQgTWFuZGFyaW4qKiAoMjAxNSksIEQuIEFtb2RlaSBldCBhbC4gW1tw
ZGZdXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMTUxMi4wMjU5NSkKLSAqKlNw
ZWVjaCByZWNvZ25pdGlvbiB3aXRoIGRlZXAgcmVjdXJyZW50IG5ldXJhbCBu
ZXR3b3JrcyoqICgyMDEzKSwgQS4gR3JhdmVzIFtbcGRmXV0oaHR0cDovL2Fy
eGl2Lm9yZy9wZGYvMTMwMy41Nzc4LnBkZikKLSAqKkRlZXAgbmV1cmFsIG5l
dHdvcmtzIGZvciBhY291c3RpYyBtb2RlbGluZyBpbiBzcGVlY2ggcmVjb2du
aXRpb246IFRoZSBzaGFyZWQgdmlld3Mgb2YgZm91ciByZXNlYXJjaCBncm91
cHMqKiAoMjAxMiksIEcuIEhpbnRvbiBldCBhbC4gW1twZGZdXShodHRwOi8v
d3d3LmNzLnRvcm9udG8uZWR1L35hc2FtaXIvcGFwZXJzL1NQTV9ETk5fMTIu
cGRmKQotICoqQ29udGV4dC1kZXBlbmRlbnQgcHJlLXRyYWluZWQgZGVlcCBu
ZXVyYWwgbmV0d29ya3MgZm9yIGxhcmdlLXZvY2FidWxhcnkgc3BlZWNoIHJl
Y29nbml0aW9uKiogKDIwMTIpIEcuIERhaGwgZXQgYWwuIFtbcGRmXV0oaHR0
cDovL2NpdGVzZWVyeC5pc3QucHN1LmVkdS92aWV3ZG9jL2Rvd25sb2FkP2Rv
aT0xMC4xLjEuMzM3Ljc1NDgmcmVwPXJlcDEmdHlwZT1wZGYpCi0gKipBY291
c3RpYyBtb2RlbGluZyB1c2luZyBkZWVwIGJlbGllZiBuZXR3b3JrcyoqICgy
MDEyKSwgQS4gTW9oYW1lZCBldCBhbC4gW1twZGZdXShodHRwOi8vd3d3LmNz
LnRvcm9udG8uZWR1L35hc2FtaXIvcGFwZXJzL3NwZWVjaERCTl9qcm5sLnBk
ZikKCjwhLS0tW0tleSByZXNlYXJjaGVyc10gIFtBbGV4IEdyYXZlc10oaHR0
cHM6Ly9zY2hvbGFyLmdvb2dsZS5jYS9jaXRhdGlvbnM/dXNlcj1EYUZIeW53
QUFBQUopLCBbR2VvZmZyZXkgSGludG9uXShodHRwczovL3NjaG9sYXIuZ29v
Z2xlLmNhL2NpdGF0aW9ucz91c2VyPUppY1lQZEFBQUFBSiksIFtEb25nIFl1
XShodHRwczovL3NjaG9sYXIuZ29vZ2xlLmNhL2NpdGF0aW9ucz9obD1lbiZ1
c2VyPXRNWTMxX2dBQUFBSiktLT4KCiMjIyBSZWluZm9yY2VtZW50IExlYXJu
aW5nIC8gUm9ib3RpY3MKLSAqKkVuZC10by1lbmQgdHJhaW5pbmcgb2YgZGVl
cCB2aXN1b21vdG9yIHBvbGljaWVzKiogKDIwMTYpLCBTLiBMZXZpbmUgZXQg
YWwuIFtbcGRmXV0oaHR0cDovL3d3dy5qbWxyLm9yZy9wYXBlcnMvdm9sdW1l
MTcvMTUtNTIyL3NvdXJjZS8xNS01MjIucGRmKQotICoqTGVhcm5pbmcgSGFu
ZC1FeWUgQ29vcmRpbmF0aW9uIGZvciBSb2JvdGljIEdyYXNwaW5nIHdpdGgg
RGVlcCBMZWFybmluZyBhbmQgTGFyZ2UtU2NhbGUgRGF0YSBDb2xsZWN0aW9u
KiogKDIwMTYpLCBTLiBMZXZpbmUgZXQgYWwuIFtbcGRmXV0oaHR0cHM6Ly9h
cnhpdi5vcmcvcGRmLzE2MDMuMDIxOTkpCi0gKipBc3luY2hyb25vdXMgbWV0
aG9kcyBmb3IgZGVlcCByZWluZm9yY2VtZW50IGxlYXJuaW5nKiogKDIwMTYp
LCBWLiBNbmloIGV0IGFsLiBbW3BkZl1dKGh0dHA6Ly93d3cuam1sci5vcmcv
cHJvY2VlZGluZ3MvcGFwZXJzL3Y0OC9tbmloYTE2LnBkZikKLSAqKkRlZXAg
UmVpbmZvcmNlbWVudCBMZWFybmluZyB3aXRoIERvdWJsZSBRLUxlYXJuaW5n
KiogKDIwMTYpLCBILiBIYXNzZWx0IGV0IGFsLiBbW3BkZl1dKGh0dHBzOi8v
YXJ4aXYub3JnL3BkZi8xNTA5LjA2NDYxLnBkZiApCi0gKipNYXN0ZXJpbmcg
dGhlIGdhbWUgb2YgR28gd2l0aCBkZWVwIG5ldXJhbCBuZXR3b3JrcyBhbmQg
dHJlZSBzZWFyY2gqKiAoMjAxNiksIEQuIFNpbHZlciBldCBhbC4gW1twZGZd
XShodHRwOi8vd3d3Lm5hdHVyZS5jb20vbmF0dXJlL2pvdXJuYWwvdjUyOS9u
NzU4Ny9mdWxsL25hdHVyZTE2OTYxLmh0bWwpCi0gKipDb250aW51b3VzIGNv
bnRyb2wgd2l0aCBkZWVwIHJlaW5mb3JjZW1lbnQgbGVhcm5pbmcqKiAoMjAx
NSksIFQuIExpbGxpY3JhcCBldCBhbC4gW1twZGZdXShodHRwczovL2FyeGl2
Lm9yZy9wZGYvMTUwOS4wMjk3MSkKLSAqKkh1bWFuLWxldmVsIGNvbnRyb2wg
dGhyb3VnaCBkZWVwIHJlaW5mb3JjZW1lbnQgbGVhcm5pbmcqKiAoMjAxNSks
IFYuIE1uaWggZXQgYWwuIFtbcGRmXV0oaHR0cDovL3d3dy5kYXZpZHFpdS5j
b206ODg4OC9yZXNlYXJjaC9uYXR1cmUxNDIzNi5wZGYpCi0gKipEZWVwIGxl
YXJuaW5nIGZvciBkZXRlY3Rpbmcgcm9ib3RpYyBncmFzcHMqKiAoMjAxNSks
IEkuIExlbnogZXQgYWwuIFtbcGRmXV0oaHR0cDovL3d3dy5jcy5jb3JuZWxs
LmVkdS9+YXNheGVuYS9wYXBlcnMvbGVuel9sZWVfc2F4ZW5hX2RlZXBfbGVh
cm5pbmdfZ3Jhc3BpbmdfaWpycjIwMTQucGRmKQotICoqUGxheWluZyBhdGFy
aSB3aXRoIGRlZXAgcmVpbmZvcmNlbWVudCBsZWFybmluZyoqICgyMDEzKSwg
Vi4gTW5paCBldCBhbC4gW1twZGZdXShodHRwOi8vYXJ4aXYub3JnL3BkZi8x
MzEyLjU2MDIucGRmKSkKCjwhLS0tW0tleSByZXNlYXJjaGVyc10gIFtTZXJn
ZXkgTGV2aW5lXShodHRwczovL3NjaG9sYXIuZ29vZ2xlLmNhL2NpdGF0aW9u
cz91c2VyPThSMzVyQ3dBQUFBSiksIFtWb2xvZHlteXIgTW5paF0oaHR0cHM6
Ly9zY2hvbGFyLmdvb2dsZS5jYS9jaXRhdGlvbnM/aGw9ZW4mdXNlcj1yTGRm
SjFnQUFBQUopLCBbRGF2aWQgU2lsdmVyXShodHRwczovL3NjaG9sYXIuZ29v
Z2xlLmNhL2NpdGF0aW9ucz91c2VyPS04RE5FNFVBQUFBSiktLT4KCiMjIyBN
b3JlIFBhcGVycyBmcm9tIDIwMTYKLSAqKkxheWVyIE5vcm1hbGl6YXRpb24q
KiAoMjAxNiksIEouIEJhIGV0IGFsLiBbW3BkZl1dKGh0dHBzOi8vYXJ4aXYu
b3JnL3BkZi8xNjA3LjA2NDUwdjEucGRmKQotICoqTGVhcm5pbmcgdG8gbGVh
cm4gYnkgZ3JhZGllbnQgZGVzY2VudCBieSBncmFkaWVudCBkZXNjZW50Kiog
KDIwMTYpLCBNLiBBbmRyeWNob3dpY3ogZXQgYWwuIFtbcGRmXV0oaHR0cDov
L2FyeGl2Lm9yZy9wZGYvMTYwNi4wNDQ3NHYxKQotICoqRG9tYWluLWFkdmVy
c2FyaWFsIHRyYWluaW5nIG9mIG5ldXJhbCBuZXR3b3JrcyoqICgyMDE2KSwg
WS4gR2FuaW4gZXQgYWwuIFtbcGRmXV0oaHR0cDovL3d3dy5qbWxyLm9yZy9w
YXBlcnMvdm9sdW1lMTcvMTUtMjM5L3NvdXJjZS8xNS0yMzkucGRmKQotICoq
V2F2ZU5ldDogQSBHZW5lcmF0aXZlIE1vZGVsIGZvciBSYXcgQXVkaW8qKiAo
MjAxNiksIEEuIE9vcmQgZXQgYWwuIFtbcGRmXV0oaHR0cHM6Ly9hcnhpdi5v
cmcvcGRmLzE2MDkuMDM0OTl2MikgW1t3ZWJdXShodHRwczovL2RlZXBtaW5k
LmNvbS9ibG9nL3dhdmVuZXQtZ2VuZXJhdGl2ZS1tb2RlbC1yYXctYXVkaW8v
KQotICoqQ29sb3JmdWwgaW1hZ2UgY29sb3JpemF0aW9uKiogKDIwMTYpLCBS
LiBaaGFuZyBldCBhbC4gW1twZGZdXShodHRwczovL2FyeGl2Lm9yZy9wZGYv
MTYwMy4wODUxMSkKLSAqKkdlbmVyYXRpdmUgdmlzdWFsIG1hbmlwdWxhdGlv
biBvbiB0aGUgbmF0dXJhbCBpbWFnZSBtYW5pZm9sZCoqICgyMDE2KSwgSi4g
Wmh1IGV0IGFsLiBbW3BkZl1dKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8xNjA5
LjAzNTUyKQotICoqVGV4dHVyZSBuZXR3b3JrczogRmVlZC1mb3J3YXJkIHN5
bnRoZXNpcyBvZiB0ZXh0dXJlcyBhbmQgc3R5bGl6ZWQgaW1hZ2VzKiogKDIw
MTYpLCBEIFVseWFub3YgZXQgYWwuIFtbcGRmXV0oaHR0cDovL3d3dy5qbWxy
Lm9yZy9wcm9jZWVkaW5ncy9wYXBlcnMvdjQ4L3VseWFub3YxNi5wZGYpCi0g
KipTU0Q6IFNpbmdsZSBzaG90IG11bHRpYm94IGRldGVjdG9yKiogKDIwMTYp
LCBXLiBMaXUgZXQgYWwuIFtbcGRmXV0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRm
LzE1MTIuMDIzMjUpCi0gKipTcXVlZXplTmV0OiBBbGV4TmV0LWxldmVsIGFj
Y3VyYWN5IHdpdGggNTB4IGZld2VyIHBhcmFtZXRlcnMgYW5kPCAxTUIgbW9k
ZWwgc2l6ZSoqICgyMDE2KSwgRi4gSWFuZG9sYSBldCBhbC4gW1twZGZdXSho
dHRwOi8vYXJ4aXYub3JnL3BkZi8xNjAyLjA3MzYwKQotICoqRWllOiBFZmZp
Y2llbnQgaW5mZXJlbmNlIGVuZ2luZSBvbiBjb21wcmVzc2VkIGRlZXAgbmV1
cmFsIG5ldHdvcmsqKiAoMjAxNiksIFMuIEhhbiBldCBhbC4gW1twZGZdXSho
dHRwOi8vYXJ4aXYub3JnL3BkZi8xNjAyLjAxNTI4KQotICoqQmluYXJpemVk
IG5ldXJhbCBuZXR3b3JrczogVHJhaW5pbmcgZGVlcCBuZXVyYWwgbmV0d29y
a3Mgd2l0aCB3ZWlnaHRzIGFuZCBhY3RpdmF0aW9ucyBjb25zdHJhaW5lZCB0
bysgMSBvci0xKiogKDIwMTYpLCBNLiBDb3VyYmFyaWF1eCBldCBhbC4gW1tw
ZGZdXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMTYwMi4wMjgzMCkKLSAqKkR5
bmFtaWMgbWVtb3J5IG5ldHdvcmtzIGZvciB2aXN1YWwgYW5kIHRleHR1YWwg
cXVlc3Rpb24gYW5zd2VyaW5nKiogKDIwMTYpLCBDLiBYaW9uZyBldCBhbC4g
W1twZGZdXShodHRwOi8vd3d3LmptbHIub3JnL3Byb2NlZWRpbmdzL3BhcGVy
cy92NDgveGlvbmcxNi5wZGYpCi0gKipTdGFja2VkIGF0dGVudGlvbiBuZXR3
b3JrcyBmb3IgaW1hZ2UgcXVlc3Rpb24gYW5zd2VyaW5nKiogKDIwMTYpLCBa
LiBZYW5nIGV0IGFsLiBbW3BkZl1dKGh0dHA6Ly93d3cuY3YtZm91bmRhdGlv
bi5vcmcvb3BlbmFjY2Vzcy9jb250ZW50X2N2cHJfMjAxNi9wYXBlcnMvWWFu
Z19TdGFja2VkX0F0dGVudGlvbl9OZXR3b3Jrc19DVlBSXzIwMTZfcGFwZXIu
cGRmKQotICoqSHlicmlkIGNvbXB1dGluZyB1c2luZyBhIG5ldXJhbCBuZXR3
b3JrIHdpdGggZHluYW1pYyBleHRlcm5hbCBtZW1vcnkqKiAoMjAxNiksIEEu
IEdyYXZlcyBldCBhbC4gW1twZGZdXShodHRwczovL3d3dy5nd2Vybi5uZXQv
ZG9jcy8yMDE2LWdyYXZlcy5wZGYpCi0gKipHb29nbGUncyBuZXVyYWwgbWFj
aGluZSB0cmFuc2xhdGlvbiBzeXN0ZW06IEJyaWRnaW5nIHRoZSBnYXAgYmV0
d2VlbiBodW1hbiBhbmQgbWFjaGluZSB0cmFuc2xhdGlvbioqICgyMDE2KSwg
WS4gV3UgZXQgYWwuIFtbcGRmXV0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzE2
MDkuMDgxNDQpCgoqICogKgoKCiMjIyBOZXcgcGFwZXJzCipOZXdseSBwdWJs
aXNoZWQgcGFwZXJzICg8IDYgbW9udGhzKSB3aGljaCBhcmUgd29ydGggcmVh
ZGluZyoKLSBNb2JpbGVOZXRzOiBFZmZpY2llbnQgQ29udm9sdXRpb25hbCBO
ZXVyYWwgTmV0d29ya3MgZm9yIE1vYmlsZSBWaXNpb24gQXBwbGljYXRpb25z
ICgyMDE3KSwgQW5kcmV3IEcuIEhvd2FyZCBldCBhbC4gW1twZGZdXShodHRw
czovL2FyeGl2Lm9yZy9wZGYvMTcwNC4wNDg2MS5wZGYpCi0gQ29udm9sdXRp
b25hbCBTZXF1ZW5jZSB0byBTZXF1ZW5jZSBMZWFybmluZyAoMjAxNyksIEpv
bmFzIEdlaHJpbmcgZXQgYWwuIFtbcGRmXV0oaHR0cHM6Ly9hcnhpdi5vcmcv
cGRmLzE3MDUuMDMxMjIpCi0gQSBLbm93bGVkZ2UtR3JvdW5kZWQgTmV1cmFs
IENvbnZlcnNhdGlvbiBNb2RlbCAoMjAxNyksIE1hcmphbiBHaGF6dmluaW5l
amFkIGV0IGFsLiBbW3BkZl1dKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8xNzAy
LjAxOTMyKQotIEFjY3VyYXRlLCBMYXJnZSBNaW5pYmF0Y2ggU0dEOlRyYWlu
aW5nIEltYWdlTmV0IGluIDEgSG91ciAoMjAxNyksIFByaXlhIEdveWFsIGV0
IGFsLiBbW3BkZl1dKGh0dHBzOi8vcmVzZWFyY2guZmIuY29tL3dwLWNvbnRl
bnQvdXBsb2Fkcy8yMDE3LzA2L2ltYWdlbmV0MWtpbjFoMy5wZGYpCi0gVEFD
T1RST046IFRvd2FyZHMgZW5kLXRvLWVuZCBzcGVlY2ggc3ludGhlc2lzICgy
MDE3KSwgWS4gV2FuZyBldCBhbC4gW1twZGZdXShodHRwczovL2FyeGl2Lm9y
Zy9wZGYvMTcwMy4xMDEzNS5wZGYpCi0gRGVlcCBQaG90byBTdHlsZSBUcmFu
c2ZlciAoMjAxNyksIEYuIEx1YW4gZXQgYWwuIFtbcGRmXV0oaHR0cDovL2Fy
eGl2Lm9yZy9wZGYvMTcwMy4wNzUxMXYxLnBkZikKLSBFdm9sdXRpb24gU3Ry
YXRlZ2llcyBhcyBhIFNjYWxhYmxlIEFsdGVybmF0aXZlIHRvIFJlaW5mb3Jj
ZW1lbnQgTGVhcm5pbmcgKDIwMTcpLCBULiBTYWxpbWFucyBldCBhbC4gW1tw
ZGZdXShodHRwOi8vYXJ4aXYub3JnL3BkZi8xNzAzLjAzODY0djEucGRmKQot
IERlZm9ybWFibGUgQ29udm9sdXRpb25hbCBOZXR3b3JrcyAoMjAxNyksIEou
IERhaSBldCBhbC4gW1twZGZdXShodHRwOi8vYXJ4aXYub3JnL3BkZi8xNzAz
LjA2MjExdjIucGRmKQotIE1hc2sgUi1DTk4gKDIwMTcpLCBLLiBIZSBldCBh
bC4gW1twZGZdXShodHRwczovLzEyOC44NC4yMS4xOTkvcGRmLzE3MDMuMDY4
NzApCi0gTGVhcm5pbmcgdG8gZGlzY292ZXIgY3Jvc3MtZG9tYWluIHJlbGF0
aW9ucyB3aXRoIGdlbmVyYXRpdmUgYWR2ZXJzYXJpYWwgbmV0d29ya3MgKDIw
MTcpLCBULiBLaW0gZXQgYWwuIFtbcGRmXV0oaHR0cDovL2FyeGl2Lm9yZy9w
ZGYvMTcwMy4wNTE5MnYxLnBkZikgCi0gRGVlcCB2b2ljZTogUmVhbC10aW1l
IG5ldXJhbCB0ZXh0LXRvLXNwZWVjaCAoMjAxNyksIFMuIEFyaWsgZXQgYWwu
LCBbW3BkZl1dKGh0dHA6Ly9hcnhpdi5vcmcvcGRmLzE3MDIuMDc4MjV2Mi5w
ZGYpCi0gUGl4ZWxOZXQ6IFJlcHJlc2VudGF0aW9uIG9mIHRoZSBwaXhlbHMs
IGJ5IHRoZSBwaXhlbHMsIGFuZCBmb3IgdGhlIHBpeGVscyAoMjAxNyksIEEu
IEJhbnNhbCBldCBhbC4gW1twZGZdXShodHRwOi8vYXJ4aXYub3JnL3BkZi8x
NzAyLjA2NTA2djEucGRmKQotIEJhdGNoIHJlbm9ybWFsaXphdGlvbjogVG93
YXJkcyByZWR1Y2luZyBtaW5pYmF0Y2ggZGVwZW5kZW5jZSBpbiBiYXRjaC1u
b3JtYWxpemVkIG1vZGVscyAoMjAxNyksIFMuIElvZmZlLiBbW3BkZl1dKGh0
dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzAyLjAzMjc1KQotIFdhc3NlcnN0ZWlu
IEdBTiAoMjAxNyksIE0uIEFyam92c2t5IGV0IGFsLiBbW3BkZl1dKGh0dHBz
Oi8vYXJ4aXYub3JnL3BkZi8xNzAxLjA3ODc1djEpCi0gVW5kZXJzdGFuZGlu
ZyBkZWVwIGxlYXJuaW5nIHJlcXVpcmVzIHJldGhpbmtpbmcgZ2VuZXJhbGl6
YXRpb24gKDIwMTcpLCBDLiBaaGFuZyBldCBhbC4gW1twZGZdXShodHRwczov
L2FyeGl2Lm9yZy9wZGYvMTYxMS4wMzUzMCkKLSBMZWFzdCBzcXVhcmVzIGdl
bmVyYXRpdmUgYWR2ZXJzYXJpYWwgbmV0d29ya3MgKDIwMTYpLCBYLiBNYW8g
ZXQgYWwuIFtbcGRmXV0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE2MTEuMDQw
NzZ2MikKCgojIyMgT2xkIFBhcGVycwoqQ2xhc3NpYyBwYXBlcnMgcHVibGlz
aGVkIGJlZm9yZSAyMDEyKgotIEFuIGFuYWx5c2lzIG9mIHNpbmdsZS1sYXll
ciBuZXR3b3JrcyBpbiB1bnN1cGVydmlzZWQgZmVhdHVyZSBsZWFybmluZyAo
MjAxMSksIEEuIENvYXRlcyBldCBhbC4gW1twZGZdXShodHRwOi8vbWFjaGlu
ZWxlYXJuaW5nLnd1c3RsLmVkdS9tbHBhcGVycy9wYXBlcl9maWxlcy9BSVNU
QVRTMjAxMV9Db2F0ZXNOTDExLnBkZikKLSBEZWVwIHNwYXJzZSByZWN0aWZp
ZXIgbmV1cmFsIG5ldHdvcmtzICgyMDExKSwgWC4gR2xvcm90IGV0IGFsLiBb
W3BkZl1dKGh0dHA6Ly9tYWNoaW5lbGVhcm5pbmcud3VzdGwuZWR1L21scGFw
ZXJzL3BhcGVyX2ZpbGVzL0FJU1RBVFMyMDExX0dsb3JvdEJCMTEucGRmKQot
IE5hdHVyYWwgbGFuZ3VhZ2UgcHJvY2Vzc2luZyAoYWxtb3N0KSBmcm9tIHNj
cmF0Y2ggKDIwMTEpLCBSLiBDb2xsb2JlcnQgZXQgYWwuIFtbcGRmXV0oaHR0
cDovL2FyeGl2Lm9yZy9wZGYvMTEwMy4wMzk4KQotIFJlY3VycmVudCBuZXVy
YWwgbmV0d29yayBiYXNlZCBsYW5ndWFnZSBtb2RlbCAoMjAxMCksIFQuIE1p
a29sb3YgZXQgYWwuIFtbcGRmXV0oaHR0cDovL3d3dy5maXQudnV0YnIuY3ov
cmVzZWFyY2gvZ3JvdXBzL3NwZWVjaC9zZXJ2aXRlLzIwMTAvcm5ubG1fbWlr
b2xvdi5wZGYpCi0gU3RhY2tlZCBkZW5vaXNpbmcgYXV0b2VuY29kZXJzOiBM
ZWFybmluZyB1c2VmdWwgcmVwcmVzZW50YXRpb25zIGluIGEgZGVlcCBuZXR3
b3JrIHdpdGggYSBsb2NhbCBkZW5vaXNpbmcgY3JpdGVyaW9uICgyMDEwKSwg
UC4gVmluY2VudCBldCBhbC4gW1twZGZdXShodHRwOi8vY2l0ZXNlZXJ4Lmlz
dC5wc3UuZWR1L3ZpZXdkb2MvZG93bmxvYWQ/ZG9pPTEwLjEuMS4yOTcuMzQ4
NCZyZXA9cmVwMSZ0eXBlPXBkZikKLSBMZWFybmluZyBtaWQtbGV2ZWwgZmVh
dHVyZXMgZm9yIHJlY29nbml0aW9uICgyMDEwKSwgWS4gQm91cmVhdSBbW3Bk
Zl1dKGh0dHA6Ly9lY2UuZHVrZS5lZHUvfmxjYXJpbi9ib3VyZWF1LWN2cHIt
MTAucGRmKQotIEEgcHJhY3RpY2FsIGd1aWRlIHRvIHRyYWluaW5nIHJlc3Ry
aWN0ZWQgYm9sdHptYW5uIG1hY2hpbmVzICgyMDEwKSwgRy4gSGludG9uIFtb
cGRmXV0oaHR0cDovL3d3dy5jc3JpLnV0b3JvbnRvLmNhL35oaW50b24vYWJz
cHMvZ3VpZGVUUi5wZGYpCi0gVW5kZXJzdGFuZGluZyB0aGUgZGlmZmljdWx0
eSBvZiB0cmFpbmluZyBkZWVwIGZlZWRmb3J3YXJkIG5ldXJhbCBuZXR3b3Jr
cyAoMjAxMCksIFguIEdsb3JvdCBhbmQgWS4gQmVuZ2lvIFtbcGRmXV0oaHR0
cDovL21hY2hpbmVsZWFybmluZy53dXN0bC5lZHUvbWxwYXBlcnMvcGFwZXJf
ZmlsZXMvQUlTVEFUUzIwMTBfR2xvcm90QjEwLnBkZikKLSBXaHkgZG9lcyB1
bnN1cGVydmlzZWQgcHJlLXRyYWluaW5nIGhlbHAgZGVlcCBsZWFybmluZyAo
MjAxMCksIEQuIEVyaGFuIGV0IGFsLiBbW3BkZl1dKGh0dHA6Ly9tYWNoaW5l
bGVhcm5pbmcud3VzdGwuZWR1L21scGFwZXJzL3BhcGVyX2ZpbGVzL0FJU1RB
VFMyMDEwX0VyaGFuQ0JWMTAucGRmKQotIExlYXJuaW5nIGRlZXAgYXJjaGl0
ZWN0dXJlcyBmb3IgQUkgKDIwMDkpLCBZLiBCZW5naW8uIFtbcGRmXV0oaHR0
cDovL3Nhbmdodi5jb20vZG93bmxvYWQvc29mdC9tYWNoaW5lJTIwbGVhcm5p
bmcsJTIwYXJ0aWZpY2lhbCUyMGludGVsbGlnZW5jZSwlMjBtYXRoZW1hdGlj
cyUyMGVib29rcy9NTC9sZWFybmluZyUyMGRlZXAlMjBhcmNoaXRlY3R1cmVz
JTIwZm9yJTIwQUklMjAoMjAwOSkucGRmKQotIENvbnZvbHV0aW9uYWwgZGVl
cCBiZWxpZWYgbmV0d29ya3MgZm9yIHNjYWxhYmxlIHVuc3VwZXJ2aXNlZCBs
ZWFybmluZyBvZiBoaWVyYXJjaGljYWwgcmVwcmVzZW50YXRpb25zICgyMDA5
KSwgSC4gTGVlIGV0IGFsLiBbW3BkZl1dKGh0dHA6Ly9jaXRlc2VlcnguaXN0
LnBzdS5lZHUvdmlld2RvYy9kb3dubG9hZD9kb2k9MTAuMS4xLjE0OS44MDIm
cmVwPXJlcDEmdHlwZT1wZGYpCi0gR3JlZWR5IGxheWVyLXdpc2UgdHJhaW5p
bmcgb2YgZGVlcCBuZXR3b3JrcyAoMjAwNyksIFkuIEJlbmdpbyBldCBhbC4g
W1twZGZdXShodHRwOi8vbWFjaGluZWxlYXJuaW5nLnd1c3RsLmVkdS9tbHBh
cGVycy9wYXBlcl9maWxlcy9OSVBTMjAwNl83MzkucGRmKQotIFJlZHVjaW5n
IHRoZSBkaW1lbnNpb25hbGl0eSBvZiBkYXRhIHdpdGggbmV1cmFsIG5ldHdv
cmtzLCBHLiBIaW50b24gYW5kIFIuIFNhbGFraHV0ZGlub3YuIFtbcGRmXV0o
aHR0cDovL2hvbWVzLm1waW1mLWhlaWRlbGJlcmcubXBnLmRlL35taGVsbXN0
YS9wZGYvMjAwNiUyMEhpbnRvbiUyMFNhbGFraHVkdGtpbm92JTIwU2NpZW5j
ZS5wZGYpCi0gQSBmYXN0IGxlYXJuaW5nIGFsZ29yaXRobSBmb3IgZGVlcCBi
ZWxpZWYgbmV0cyAoMjAwNiksIEcuIEhpbnRvbiBldCBhbC4gW1twZGZdXSho
dHRwOi8vbnV5b28udXRtLm14L35qamYvcm5hL0E4JTIwQSUyMGZhc3QlMjBs
ZWFybmluZyUyMGFsZ29yaXRobSUyMGZvciUyMGRlZXAlMjBiZWxpZWYlMjBu
ZXRzLnBkZikKLSBHcmFkaWVudC1iYXNlZCBsZWFybmluZyBhcHBsaWVkIHRv
IGRvY3VtZW50IHJlY29nbml0aW9uICgxOTk4KSwgWS4gTGVDdW4gZXQgYWwu
IFtbcGRmXV0oaHR0cDovL3lhbm4ubGVjdW4uY29tL2V4ZGIvcHVibGlzL3Bk
Zi9sZWN1bi0wMWEucGRmKQotIExvbmcgc2hvcnQtdGVybSBtZW1vcnkgKDE5
OTcpLCBTLiBIb2NocmVpdGVyIGFuZCBKLiBTY2htaWRodWJlci4gW1twZGZd
XShodHRwOi8vd3d3Lm1pdHByZXNzam91cm5hbHMub3JnL2RvaS9wZGZwbHVz
LzEwLjExNjIvbmVjby4xOTk3LjkuOC4xNzM1KQoKCiMjIyBIVyAvIFNXIC8g
RGF0YXNldAotICBTUXVBRDogMTAwLDAwMCsgUXVlc3Rpb25zIGZvciBNYWNo
aW5lIENvbXByZWhlbnNpb24gb2YgVGV4dCAoMjAxNiksIFJhanB1cmthciBl
dCBhbC4gW1twZGZdXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMTYwNi4wNTI1
MC5wZGYpCi0gT3BlbkFJIGd5bSAoMjAxNiksIEcuIEJyb2NrbWFuIGV0IGFs
LiBbW3BkZl1dKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8xNjA2LjAxNTQwKQot
IFRlbnNvckZsb3c6IExhcmdlLXNjYWxlIG1hY2hpbmUgbGVhcm5pbmcgb24g
aGV0ZXJvZ2VuZW91cyBkaXN0cmlidXRlZCBzeXN0ZW1zICgyMDE2KSwgTS4g
QWJhZGkgZXQgYWwuIFtbcGRmXV0oaHR0cDovL2FyeGl2Lm9yZy9wZGYvMTYw
My4wNDQ2NykKLSBUaGVhbm86IEEgUHl0aG9uIGZyYW1ld29yayBmb3IgZmFz
dCBjb21wdXRhdGlvbiBvZiBtYXRoZW1hdGljYWwgZXhwcmVzc2lvbnMsIFIu
IEFsLVJmb3UgZXQgYWwuCi0gVG9yY2g3OiBBIG1hdGxhYi1saWtlIGVudmly
b25tZW50IGZvciBtYWNoaW5lIGxlYXJuaW5nLCBSLiBDb2xsb2JlcnQgZXQg
YWwuIFtbcGRmXV0oaHR0cHM6Ly9yb25hbi5jb2xsb2JlcnQuY29tL3B1Yi9t
YXRvcy8yMDExX3RvcmNoN19uaXBzdy5wZGYpCi0gTWF0Q29udk5ldDogQ29u
dm9sdXRpb25hbCBuZXVyYWwgbmV0d29ya3MgZm9yIG1hdGxhYiAoMjAxNSks
IEEuIFZlZGFsZGkgYW5kIEsuIExlbmMgW1twZGZdXShodHRwOi8vYXJ4aXYu
b3JnL3BkZi8xNDEyLjQ1NjQpCi0gSW1hZ2VuZXQgbGFyZ2Ugc2NhbGUgdmlz
dWFsIHJlY29nbml0aW9uIGNoYWxsZW5nZSAoMjAxNSksIE8uIFJ1c3Nha292
c2t5IGV0IGFsLiBbW3BkZl1dKGh0dHA6Ly9hcnhpdi5vcmcvcGRmLzE0MDku
MDU3NSkKLSBDYWZmZTogQ29udm9sdXRpb25hbCBhcmNoaXRlY3R1cmUgZm9y
IGZhc3QgZmVhdHVyZSBlbWJlZGRpbmcgKDIwMTQpLCBZLiBKaWEgZXQgYWwu
IFtbcGRmXV0oaHR0cDovL2FyeGl2Lm9yZy9wZGYvMTQwOC41MDkzKQoKCiMj
IyBCb29rIC8gU3VydmV5IC8gUmV2aWV3Ci0gT24gdGhlIE9yaWdpbiBvZiBE
ZWVwIExlYXJuaW5nICgyMDE3KSwgSC4gV2FuZyBhbmQgQmhpa3NoYSBSYWou
IFtbcGRmXV0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzE3MDIuMDc4MDApCi0g
RGVlcCBSZWluZm9yY2VtZW50IExlYXJuaW5nOiBBbiBPdmVydmlldyAoMjAx
NyksIFkuIExpLCBbW3BkZl1dKGh0dHA6Ly9hcnhpdi5vcmcvcGRmLzE3MDEu
MDcyNzR2Mi5wZGYpCi0gTmV1cmFsIE1hY2hpbmUgVHJhbnNsYXRpb24gYW5k
IFNlcXVlbmNlLXRvLXNlcXVlbmNlIE1vZGVscygyMDE3KTogQSBUdXRvcmlh
bCwgRy4gTmV1YmlnLiBbW3BkZl1dKGh0dHA6Ly9hcnhpdi5vcmcvcGRmLzE3
MDMuMDE2MTl2MS5wZGYpCi0gTmV1cmFsIE5ldHdvcmsgYW5kIERlZXAgTGVh
cm5pbmcgKEJvb2ssIEphbiAyMDE3KSwgTWljaGFlbCBOaWVsc2VuLiBbW2h0
bWxdXShodHRwOi8vbmV1cmFsbmV0d29ya3NhbmRkZWVwbGVhcm5pbmcuY29t
L2luZGV4Lmh0bWwpCi0gRGVlcCBsZWFybmluZyAoQm9vaywgMjAxNiksIEdv
b2RmZWxsb3cgZXQgYWwuIFtbaHRtbF1dKGh0dHA6Ly93d3cuZGVlcGxlYXJu
aW5nYm9vay5vcmcvKQotIExTVE06IEEgc2VhcmNoIHNwYWNlIG9keXNzZXkg
KDIwMTYpLCBLLiBHcmVmZiBldCBhbC4gW1twZGZdXShodHRwczovL2FyeGl2
Lm9yZy9wZGYvMTUwMy4wNDA2OS5wZGY/dXRtX2NvbnRlbnQ9YnVmZmVyZWRk
YzUmdXRtX21lZGl1bT1zb2NpYWwmdXRtX3NvdXJjZT1wbHVzLmdvb2dsZS5j
b20mdXRtX2NhbXBhaWduPWJ1ZmZlcikKLSBUdXRvcmlhbCBvbiBWYXJpYXRp
b25hbCBBdXRvZW5jb2RlcnMgKDIwMTYpLCBDLiBEb2Vyc2NoLiBbW3BkZl1d
KGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8xNjA2LjA1OTA4KQotIERlZXAgbGVh
cm5pbmcgKDIwMTUpLCBZLiBMZUN1biwgWS4gQmVuZ2lvIGFuZCBHLiBIaW50
b24gW1twZGZdXShodHRwczovL3d3dy5jcy50b3JvbnRvLmVkdS9+aGludG9u
L2Fic3BzL05hdHVyZURlZXBSZXZpZXcucGRmKQotIERlZXAgbGVhcm5pbmcg
aW4gbmV1cmFsIG5ldHdvcmtzOiBBbiBvdmVydmlldyAoMjAxNSksIEouIFNj
aG1pZGh1YmVyIFtbcGRmXV0oaHR0cDovL2FyeGl2Lm9yZy9wZGYvMTQwNC43
ODI4KQotIFJlcHJlc2VudGF0aW9uIGxlYXJuaW5nOiBBIHJldmlldyBhbmQg
bmV3IHBlcnNwZWN0aXZlcyAoMjAxMyksIFkuIEJlbmdpbyBldCBhbC4gW1tw
ZGZdXShodHRwOi8vYXJ4aXYub3JnL3BkZi8xMjA2LjU1MzgpCgojIyMgVmlk
ZW8gTGVjdHVyZXMgLyBUdXRvcmlhbHMgLyBCbG9ncwoKKihMZWN0dXJlcykq
Ci0gQ1MyMzFuLCBDb252b2x1dGlvbmFsIE5ldXJhbCBOZXR3b3JrcyBmb3Ig
VmlzdWFsIFJlY29nbml0aW9uLCBTdGFuZm9yZCBVbml2ZXJzaXR5IFtbd2Vi
XV0oaHR0cDovL2NzMjMxbi5zdGFuZm9yZC5lZHUvKQotIENTMjI0ZCwgRGVl
cCBMZWFybmluZyBmb3IgTmF0dXJhbCBMYW5ndWFnZSBQcm9jZXNzaW5nLCBT
dGFuZm9yZCBVbml2ZXJzaXR5IFtbd2ViXV0oaHR0cDovL2NzMjI0ZC5zdGFu
Zm9yZC5lZHUvKQotIE94Zm9yZCBEZWVwIE5MUCAyMDE3LCBEZWVwIExlYXJu
aW5nIGZvciBOYXR1cmFsIExhbmd1YWdlIFByb2Nlc3NpbmcsIFVuaXZlcnNp
dHkgb2YgT3hmb3JkIFtbd2ViXV0oaHR0cHM6Ly9naXRodWIuY29tL294Zm9y
ZC1jcy1kZWVwbmxwLTIwMTcvbGVjdHVyZXMpCgoqKFR1dG9yaWFscykqCi0g
TklQUyAyMDE2IFR1dG9yaWFscywgTG9uZyBCZWFjaCBbW3dlYl1dKGh0dHBz
Oi8vbmlwcy5jYy9Db25mZXJlbmNlcy8yMDE2L1NjaGVkdWxlP3R5cGU9VHV0
b3JpYWwpCi0gSUNNTCAyMDE2IFR1dG9yaWFscywgTmV3IFlvcmsgQ2l0eSBb
W3dlYl1dKGh0dHA6Ly90ZWNodGFsa3MudHYvaWNtbC8yMDE2L3R1dG9yaWFs
cy8pCi0gSUNMUiAyMDE2IFZpZGVvcywgU2FuIEp1YW4gW1t3ZWJdXShodHRw
Oi8vdmlkZW9sZWN0dXJlcy5uZXQvaWNscjIwMTZfc2FuX2p1YW4vKQotIERl
ZXAgTGVhcm5pbmcgU3VtbWVyIFNjaG9vbCAyMDE2LCBNb250cmVhbCBbW3dl
Yl1dKGh0dHA6Ly92aWRlb2xlY3R1cmVzLm5ldC9kZWVwbGVhcm5pbmcyMDE2
X21vbnRyZWFsLykKLSBCYXkgQXJlYSBEZWVwIExlYXJuaW5nIFNjaG9vbCAy
MDE2LCBTdGFuZm9yZCBbW3dlYl1dKGh0dHBzOi8vd3d3LmJheWFyZWFkbHNj
aG9vbC5vcmcvKQoKKihCbG9ncykqCi0gT3BlbkFJIFtbd2ViXV0oaHR0cHM6
Ly93d3cub3BlbmFpLmNvbS8pCi0gRGlzdGlsbCBbW3dlYl1dKGh0dHA6Ly9k
aXN0aWxsLnB1Yi8pCi0gQW5kcmVqIEthcnBhdGh5IEJsb2cgW1t3ZWJdXSho
dHRwOi8va2FycGF0aHkuZ2l0aHViLmlvLykKLSBDb2xhaCdzIEJsb2cgW1tX
ZWJdXShodHRwOi8vY29sYWguZ2l0aHViLmlvLykKLSBXaWxkTUwgW1tXZWJd
XShodHRwOi8vd3d3LndpbGRtbC5jb20vKQotIEZhc3RNTCBbW3dlYl1dKGh0
dHA6Ly93d3cuZmFzdG1sLmNvbS8pCi0gVGhlTW9ybmluZ1BhcGVyIFtbd2Vi
XV0oaHR0cHM6Ly9ibG9nLmFjb2x5ZXIub3JnKQoKIyMjIEFwcGVuZGl4OiBN
b3JlIHRoYW4gVG9wIDEwMAoqKDIwMTYpKgotIEEgY2hhcmFjdGVyLWxldmVs
IGRlY29kZXIgd2l0aG91dCBleHBsaWNpdCBzZWdtZW50YXRpb24gZm9yIG5l
dXJhbCBtYWNoaW5lIHRyYW5zbGF0aW9uICgyMDE2KSwgSi4gQ2h1bmcgZXQg
YWwuIFtbcGRmXV0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzE2MDMuMDYxNDcp
Ci0gRGVybWF0b2xvZ2lzdC1sZXZlbCBjbGFzc2lmaWNhdGlvbiBvZiBza2lu
IGNhbmNlciB3aXRoIGRlZXAgbmV1cmFsIG5ldHdvcmtzICgyMDE3KSwgQS4g
RXN0ZXZhIGV0IGFsLiBbW2h0bWxdXShodHRwOi8vd3d3Lm5hdHVyZS5jb20v
bmF0dXJlL2pvdXJuYWwvdjU0Mi9uNzYzOS9mdWxsL25hdHVyZTIxMDU2Lmh0
bWwpCi0gV2Vha2x5IHN1cGVydmlzZWQgb2JqZWN0IGxvY2FsaXphdGlvbiB3
aXRoIG11bHRpLWZvbGQgbXVsdGlwbGUgaW5zdGFuY2UgbGVhcm5pbmcgKDIw
MTcpLCBSLiBHb2tiZXJrIGV0IGFsLiBbW3BkZl1dKGh0dHBzOi8vYXJ4aXYu
b3JnL3BkZi8xNTAzLjAwOTQ5KQotIEJyYWluIHR1bW9yIHNlZ21lbnRhdGlv
biB3aXRoIGRlZXAgbmV1cmFsIG5ldHdvcmtzICgyMDE3KSwgTS4gSGF2YWVp
IGV0IGFsLiBbW3BkZl1dKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8xNTA1LjAz
NTQwKQotIFByb2Zlc3NvciBGb3JjaW5nOiBBIE5ldyBBbGdvcml0aG0gZm9y
IFRyYWluaW5nIFJlY3VycmVudCBOZXR3b3JrcyAoMjAxNiksIEEuIExhbWIg
ZXQgYWwuIFtbcGRmXV0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzE2MTAuMDkw
MzgpCi0gQWR2ZXJzYXJpYWxseSBsZWFybmVkIGluZmVyZW5jZSAoMjAxNiks
IFYuIER1bW91bGluIGV0IGFsLiBbW3dlYl1dKGh0dHBzOi8vaXNobWFlbGJl
bGdoYXppLmdpdGh1Yi5pby9BTEkvKVtbcGRmXV0oaHR0cHM6Ly9hcnhpdi5v
cmcvcGRmLzE2MDYuMDA3MDR2MSkKLSBVbmRlcnN0YW5kaW5nIGNvbnZvbHV0
aW9uYWwgbmV1cmFsIG5ldHdvcmtzICgyMDE2KSwgSi4gS291c2hpayBbW3Bk
Zl1dKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8xNjA1LjA5MDgxdjEpCi0gVGFr
aW5nIHRoZSBodW1hbiBvdXQgb2YgdGhlIGxvb3A6IEEgcmV2aWV3IG9mIGJh
eWVzaWFuIG9wdGltaXphdGlvbiAoMjAxNiksIEIuIFNoYWhyaWFyaSBldCBh
bC4gW1twZGZdXShodHRwczovL3d3dy5jcy5veC5hYy51ay9wZW9wbGUvbmFu
ZG8uZGVmcmVpdGFzL3B1YmxpY2F0aW9ucy9CYXllc09wdExvb3AucGRmKQot
IEFkYXB0aXZlIGNvbXB1dGF0aW9uIHRpbWUgZm9yIHJlY3VycmVudCBuZXVy
YWwgbmV0d29ya3MgKDIwMTYpLCBBLiBHcmF2ZXMgW1twZGZdXShodHRwOi8v
YXJ4aXYub3JnL3BkZi8xNjAzLjA4OTgzKQotIERlbnNlbHkgY29ubmVjdGVk
IGNvbnZvbHV0aW9uYWwgbmV0d29ya3MgKDIwMTYpLCBHLiBIdWFuZyBldCBh
bC4gW1twZGZdXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMTYwOC4wNjk5M3Yx
KQotIFJlZ2lvbi1iYXNlZCBjb252b2x1dGlvbmFsIG5ldHdvcmtzIGZvciBh
Y2N1cmF0ZSBvYmplY3QgZGV0ZWN0aW9uIGFuZCBzZWdtZW50YXRpb24gKDIw
MTYpLCBSLiBHaXJzaGljayBldCBhbC4gCi0gQ29udGludW91cyBkZWVwIHEt
bGVhcm5pbmcgd2l0aCBtb2RlbC1iYXNlZCBhY2NlbGVyYXRpb24gKDIwMTYp
LCBTLiBHdSBldCBhbC4gW1twZGZdXShodHRwOi8vd3d3LmptbHIub3JnL3By
b2NlZWRpbmdzL3BhcGVycy92NDgvZ3UxNi5wZGYpCi0gQSB0aG9yb3VnaCBl
eGFtaW5hdGlvbiBvZiB0aGUgY25uL2RhaWx5IG1haWwgcmVhZGluZyBjb21w
cmVoZW5zaW9uIHRhc2sgKDIwMTYpLCBELiBDaGVuIGV0IGFsLiBbW3BkZl1d
KGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8xNjA2LjAyODU4KQotIEFjaGlldmlu
ZyBvcGVuIHZvY2FidWxhcnkgbmV1cmFsIG1hY2hpbmUgdHJhbnNsYXRpb24g
d2l0aCBoeWJyaWQgd29yZC1jaGFyYWN0ZXIgbW9kZWxzLCBNLiBMdW9uZyBh
bmQgQy4gTWFubmluZy4gW1twZGZdXShodHRwczovL2FyeGl2Lm9yZy9wZGYv
MTYwNC4wMDc4OCkKLSBWZXJ5IERlZXAgQ29udm9sdXRpb25hbCBOZXR3b3Jr
cyBmb3IgTmF0dXJhbCBMYW5ndWFnZSBQcm9jZXNzaW5nICgyMDE2KSwgQS4g
Q29ubmVhdSBldCBhbC4gW1twZGZdXShodHRwczovL2FyeGl2Lm9yZy9wZGYv
MTYwNi4wMTc4MSkKLSBCYWcgb2YgdHJpY2tzIGZvciBlZmZpY2llbnQgdGV4
dCBjbGFzc2lmaWNhdGlvbiAoMjAxNiksIEEuIEpvdWxpbiBldCBhbC4gW1tw
ZGZdXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMTYwNy4wMTc1OSkKLSBFZmZp
Y2llbnQgcGllY2V3aXNlIHRyYWluaW5nIG9mIGRlZXAgc3RydWN0dXJlZCBt
b2RlbHMgZm9yIHNlbWFudGljIHNlZ21lbnRhdGlvbiAoMjAxNiksIEcuIExp
biBldCBhbC4gW1twZGZdXShodHRwOi8vd3d3LmN2LWZvdW5kYXRpb24ub3Jn
L29wZW5hY2Nlc3MvY29udGVudF9jdnByXzIwMTYvcGFwZXJzL0xpbl9FZmZp
Y2llbnRfUGllY2V3aXNlX1RyYWluaW5nX0NWUFJfMjAxNl9wYXBlci5wZGYp
Ci0gTGVhcm5pbmcgdG8gY29tcG9zZSBuZXVyYWwgbmV0d29ya3MgZm9yIHF1
ZXN0aW9uIGFuc3dlcmluZyAoMjAxNiksIEouIEFuZHJlYXMgZXQgYWwuIFtb
cGRmXV0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzE2MDEuMDE3MDUpCi0gUGVy
Y2VwdHVhbCBsb3NzZXMgZm9yIHJlYWwtdGltZSBzdHlsZSB0cmFuc2ZlciBh
bmQgc3VwZXItcmVzb2x1dGlvbiAoMjAxNiksIEouIEpvaG5zb24gZXQgYWwu
IFtbcGRmXV0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzE2MDMuMDgxNTUpCi0g
UmVhZGluZyB0ZXh0IGluIHRoZSB3aWxkIHdpdGggY29udm9sdXRpb25hbCBu
ZXVyYWwgbmV0d29ya3MgKDIwMTYpLCBNLiBKYWRlcmJlcmcgZXQgYWwuIFtb
cGRmXV0oaHR0cDovL2FyeGl2Lm9yZy9wZGYvMTQxMi4xODQyKQotIFdoYXQg
bWFrZXMgZm9yIGVmZmVjdGl2ZSBkZXRlY3Rpb24gcHJvcG9zYWxzPyAoMjAx
NiksIEouIEhvc2FuZyBldCBhbC4gW1twZGZdXShodHRwczovL2FyeGl2Lm9y
Zy9wZGYvMTUwMi4wNTA4MikKLSBJbnNpZGUtb3V0c2lkZSBuZXQ6IERldGVj
dGluZyBvYmplY3RzIGluIGNvbnRleHQgd2l0aCBza2lwIHBvb2xpbmcgYW5k
IHJlY3VycmVudCBuZXVyYWwgbmV0d29ya3MgKDIwMTYpLCBTLiBCZWxsIGV0
IGFsLiBbW3BkZl1dKGh0dHA6Ly93d3cuY3YtZm91bmRhdGlvbi5vcmcvb3Bl
bmFjY2Vzcy9jb250ZW50X2N2cHJfMjAxNi9wYXBlcnMvQmVsbF9JbnNpZGUt
T3V0c2lkZV9OZXRfRGV0ZWN0aW5nX0NWUFJfMjAxNl9wYXBlci5wZGYpLgot
IEluc3RhbmNlLWF3YXJlIHNlbWFudGljIHNlZ21lbnRhdGlvbiB2aWEgbXVs
dGktdGFzayBuZXR3b3JrIGNhc2NhZGVzICgyMDE2KSwgSi4gRGFpIGV0IGFs
LiBbW3BkZl1dKGh0dHA6Ly93d3cuY3YtZm91bmRhdGlvbi5vcmcvb3BlbmFj
Y2Vzcy9jb250ZW50X2N2cHJfMjAxNi9wYXBlcnMvRGFpX0luc3RhbmNlLUF3
YXJlX1NlbWFudGljX1NlZ21lbnRhdGlvbl9DVlBSXzIwMTZfcGFwZXIucGRm
KQotIENvbmRpdGlvbmFsIGltYWdlIGdlbmVyYXRpb24gd2l0aCBwaXhlbGNu
biBkZWNvZGVycyAoMjAxNiksIEEuIHZhbiBkZW4gT29yZCBldCBhbC4gW1tw
ZGZdXShodHRwOi8vcGFwZXJzLm5pcHMuY2MvcGFwZXIvNjUyNy10cmVlLXN0
cnVjdHVyZWQtcmVpbmZvcmNlbWVudC1sZWFybmluZy1mb3Itc2VxdWVudGlh
bC1vYmplY3QtbG9jYWxpemF0aW9uLnBkZikKLSBEZWVwIG5ldHdvcmtzIHdp
dGggc3RvY2hhc3RpYyBkZXB0aCAoMjAxNiksIEcuIEh1YW5nIGV0IGFsLiwg
W1twZGZdXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMTYwMy4wOTM4MikKLSBD
b25zaXN0ZW5jeSBhbmQgRmx1Y3R1YXRpb25zIEZvciBTdG9jaGFzdGljIEdy
YWRpZW50IExhbmdldmluIER5bmFtaWNzICgyMDE2KSwgWWVlIFdoeWUgVGVo
IGV0IGFsLiBbW3BkZl1dKGh0dHA6Ly93d3cuam1sci5vcmcvcGFwZXJzL3Zv
bHVtZTE3L3RlaDE2YS90ZWgxNmEucGRmKQoKKigyMDE1KSoKLSBBc2sgeW91
ciBuZXVyb25zOiBBIG5ldXJhbC1iYXNlZCBhcHByb2FjaCB0byBhbnN3ZXJp
bmcgcXVlc3Rpb25zIGFib3V0IGltYWdlcyAoMjAxNSksIE0uIE1hbGlub3dz
a2kgZXQgYWwuIFtbcGRmXV0oaHR0cDovL3d3dy5jdi1mb3VuZGF0aW9uLm9y
Zy9vcGVuYWNjZXNzL2NvbnRlbnRfaWNjdl8yMDE1L3BhcGVycy9NYWxpbm93
c2tpX0Fza19Zb3VyX05ldXJvbnNfSUNDVl8yMDE1X3BhcGVyLnBkZikKLSBF
eHBsb3JpbmcgbW9kZWxzIGFuZCBkYXRhIGZvciBpbWFnZSBxdWVzdGlvbiBh
bnN3ZXJpbmcgKDIwMTUpLCBNLiBSZW4gZXQgYWwuIFtbcGRmXV0oaHR0cDov
L3BhcGVycy5uaXBzLmNjL3BhcGVyLzU2NDAtc3RvY2hhc3RpYy12YXJpYXRp
b25hbC1pbmZlcmVuY2UtZm9yLWhpZGRlbi1tYXJrb3YtbW9kZWxzLnBkZikK
LSBBcmUgeW91IHRhbGtpbmcgdG8gYSBtYWNoaW5lPyBkYXRhc2V0IGFuZCBt
ZXRob2RzIGZvciBtdWx0aWxpbmd1YWwgaW1hZ2UgcXVlc3Rpb24gKDIwMTUp
LCBILiBHYW8gZXQgYWwuIFtbcGRmXV0oaHR0cDovL3BhcGVycy5uaXBzLmNj
L3BhcGVyLzU2NDEtYXJlLXlvdS10YWxraW5nLXRvLWEtbWFjaGluZS1kYXRh
c2V0LWFuZC1tZXRob2RzLWZvci1tdWx0aWxpbmd1YWwtaW1hZ2UtcXVlc3Rp
b24ucGRmKQotIE1pbmQncyBleWU6IEEgcmVjdXJyZW50IHZpc3VhbCByZXBy
ZXNlbnRhdGlvbiBmb3IgaW1hZ2UgY2FwdGlvbiBnZW5lcmF0aW9uICgyMDE1
KSwgWC4gQ2hlbiBhbmQgQy4gWml0bmljay4gW1twZGZdXShodHRwOi8vd3d3
LmN2LWZvdW5kYXRpb24ub3JnL29wZW5hY2Nlc3MvY29udGVudF9jdnByXzIw
MTUvcGFwZXJzL0NoZW5fTWluZHNfRXllX0FfMjAxNV9DVlBSX3BhcGVyLnBk
ZikKLSBGcm9tIGNhcHRpb25zIHRvIHZpc3VhbCBjb25jZXB0cyBhbmQgYmFj
ayAoMjAxNSksIEguIEZhbmcgZXQgYWwuIFtbcGRmXV0oaHR0cDovL3d3dy5j
di1mb3VuZGF0aW9uLm9yZy9vcGVuYWNjZXNzL2NvbnRlbnRfY3Zwcl8yMDE1
L3BhcGVycy9GYW5nX0Zyb21fQ2FwdGlvbnNfdG9fMjAxNV9DVlBSX3BhcGVy
LnBkZikuCi0gVG93YXJkcyBBSS1jb21wbGV0ZSBxdWVzdGlvbiBhbnN3ZXJp
bmc6IEEgc2V0IG9mIHByZXJlcXVpc2l0ZSB0b3kgdGFza3MgKDIwMTUpLCBK
LiBXZXN0b24gZXQgYWwuIFtbcGRmXV0oaHR0cDovL2FyeGl2Lm9yZy9wZGYv
MTUwMi4wNTY5OCkKLSBBc2sgbWUgYW55dGhpbmc6IER5bmFtaWMgbWVtb3J5
IG5ldHdvcmtzIGZvciBuYXR1cmFsIGxhbmd1YWdlIHByb2Nlc3NpbmcgKDIw
MTUpLCBBLiBLdW1hciBldCBhbC4gW1twZGZdXShodHRwOi8vYXJ4aXYub3Jn
L3BkZi8xNTA2LjA3Mjg1KQotIFVuc3VwZXJ2aXNlZCBsZWFybmluZyBvZiB2
aWRlbyByZXByZXNlbnRhdGlvbnMgdXNpbmcgTFNUTXMgKDIwMTUpLCBOLiBT
cml2YXN0YXZhIGV0IGFsLiBbW3BkZl1dKGh0dHA6Ly93d3cuam1sci5vcmcv
cHJvY2VlZGluZ3MvcGFwZXJzL3YzNy9zcml2YXN0YXZhMTUucGRmKQotIERl
ZXAgY29tcHJlc3Npb246IENvbXByZXNzaW5nIGRlZXAgbmV1cmFsIG5ldHdv
cmtzIHdpdGggcHJ1bmluZywgdHJhaW5lZCBxdWFudGl6YXRpb24gYW5kIGh1
ZmZtYW4gY29kaW5nICgyMDE1KSwgUy4gSGFuIGV0IGFsLiBbW3BkZl1dKGh0
dHBzOi8vYXJ4aXYub3JnL3BkZi8xNTEwLjAwMTQ5KQotIEltcHJvdmVkIHNl
bWFudGljIHJlcHJlc2VudGF0aW9ucyBmcm9tIHRyZWUtc3RydWN0dXJlZCBs
b25nIHNob3J0LXRlcm0gbWVtb3J5IG5ldHdvcmtzICgyMDE1KSwgSy4gVGFp
IGV0IGFsLiBbW3BkZl1dKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8xNTAzLjAw
MDc1KQotIENoYXJhY3Rlci1hd2FyZSBuZXVyYWwgbGFuZ3VhZ2UgbW9kZWxz
ICgyMDE1KSwgWS4gS2ltIGV0IGFsLiBbW3BkZl1dKGh0dHBzOi8vYXJ4aXYu
b3JnL3BkZi8xNTA4LjA2NjE1KQotIEdyYW1tYXIgYXMgYSBmb3JlaWduIGxh
bmd1YWdlICgyMDE1KSwgTy4gVmlueWFscyBldCBhbC4gW1twZGZdXShodHRw
Oi8vcGFwZXJzLm5pcHMuY2MvcGFwZXIvNTYzNS1ncmFtbWFyLWFzLWEtZm9y
ZWlnbi1sYW5ndWFnZS5wZGYpCi0gVHJ1c3QgUmVnaW9uIFBvbGljeSBPcHRp
bWl6YXRpb24gKDIwMTUpLCBKLiBTY2h1bG1hbiBldCBhbC4gW1twZGZdXSho
dHRwOi8vd3d3LmptbHIub3JnL3Byb2NlZWRpbmdzL3BhcGVycy92Mzcvc2No
dWxtYW4xNS5wZGYpCi0gQmV5b25kIHNob3J0IHNuaXBwZW50czogRGVlcCBu
ZXR3b3JrcyBmb3IgdmlkZW8gY2xhc3NpZmljYXRpb24gKDIwMTUpIFtbcGRm
XV0oaHR0cDovL3d3dy5jdi1mb3VuZGF0aW9uLm9yZy9vcGVuYWNjZXNzL2Nv
bnRlbnRfY3Zwcl8yMDE1L3BhcGVycy9OZ19CZXlvbmRfU2hvcnRfU25pcHBl
dHNfMjAxNV9DVlBSX3BhcGVyLnBkZikKLSBMZWFybmluZyBEZWNvbnZvbHV0
aW9uIE5ldHdvcmsgZm9yIFNlbWFudGljIFNlZ21lbnRhdGlvbiAoMjAxNSks
IEguIE5vaCBldCBhbC4gW1twZGZdXShodHRwczovL2FyeGl2Lm9yZy9wZGYv
MTUwNS4wNDM2NnYxKQotIExlYXJuaW5nIHNwYXRpb3RlbXBvcmFsIGZlYXR1
cmVzIHdpdGggM2QgY29udm9sdXRpb25hbCBuZXR3b3JrcyAoMjAxNSksIEQu
IFRyYW4gZXQgYWwuIFtbcGRmXV0oaHR0cDovL3d3dy5jdi1mb3VuZGF0aW9u
Lm9yZy9vcGVuYWNjZXNzL2NvbnRlbnRfaWNjdl8yMDE1L3BhcGVycy9UcmFu
X0xlYXJuaW5nX1NwYXRpb3RlbXBvcmFsX0ZlYXR1cmVzX0lDQ1ZfMjAxNV9w
YXBlci5wZGYpCi0gVW5kZXJzdGFuZGluZyBuZXVyYWwgbmV0d29ya3MgdGhy
b3VnaCBkZWVwIHZpc3VhbGl6YXRpb24gKDIwMTUpLCBKLiBZb3NpbnNraSBl
dCBhbC4gW1twZGZdXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMTUwNi4wNjU3
OSkKLSBBbiBFbXBpcmljYWwgRXhwbG9yYXRpb24gb2YgUmVjdXJyZW50IE5l
dHdvcmsgQXJjaGl0ZWN0dXJlcyAoMjAxNSksIFIuIEpvemVmb3dpY3ogZXQg
YWwuICBbW3BkZl1dKGh0dHA6Ly93d3cuam1sci5vcmcvcHJvY2VlZGluZ3Mv
cGFwZXJzL3YzNy9qb3plZm93aWN6MTUucGRmKQotIERlZXAgZ2VuZXJhdGl2
ZSBpbWFnZSBtb2RlbHMgdXNpbmcgYe+/vCBsYXBsYWNpYW4gcHlyYW1pZCBv
ZiBhZHZlcnNhcmlhbCBuZXR3b3JrcyAoMjAxNSksIEUuRGVudG9uIGV0IGFs
LiBbW3BkZl1dKGh0dHA6Ly9wYXBlcnMubmlwcy5jYy9wYXBlci81NzczLWRl
ZXAtZ2VuZXJhdGl2ZS1pbWFnZS1tb2RlbHMtdXNpbmctYS1sYXBsYWNpYW4t
cHlyYW1pZC1vZi1hZHZlcnNhcmlhbC1uZXR3b3Jrcy5wZGYpCi0gR2F0ZWQg
RmVlZGJhY2sgUmVjdXJyZW50IE5ldXJhbCBOZXR3b3JrcyAoMjAxNSksIEou
IENodW5nIGV0IGFsLiBbW3BkZl1dKGh0dHA6Ly93d3cuam1sci5vcmcvcHJv
Y2VlZGluZ3MvcGFwZXJzL3YzNy9jaHVuZzE1LnBkZikKLSBGYXN0IGFuZCBh
Y2N1cmF0ZSBkZWVwIG5ldHdvcmsgbGVhcm5pbmcgYnkgZXhwb25lbnRpYWwg
bGluZWFyIHVuaXRzIChFTFVTKSAoMjAxNSksIEQuIENsZXZlcnQgZXQgYWwu
IFtbcGRmXV0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzE1MTEuMDcyODkucGRm
JTVDbmh0dHA6Ly9hcnhpdi5vcmcvYWJzLzE1MTEuMDcyODklNUNuaHR0cDov
L2FyeGl2Lm9yZy9hYnMvMTUxMS4wNzI4OSkKLSBQb2ludGVyIG5ldHdvcmtz
ICgyMDE1KSwgTy4gVmlueWFscyBldCBhbC4gW1twZGZdXShodHRwOi8vcGFw
ZXJzLm5pcHMuY2MvcGFwZXIvNTg2Ni1wb2ludGVyLW5ldHdvcmtzLnBkZikK
LSBWaXN1YWxpemluZyBhbmQgVW5kZXJzdGFuZGluZyBSZWN1cnJlbnQgTmV0
d29ya3MgKDIwMTUpLCBBLiBLYXJwYXRoeSBldCBhbC4gW1twZGZdXShodHRw
czovL2FyeGl2Lm9yZy9wZGYvMTUwNi4wMjA3OCkKLSBBdHRlbnRpb24tYmFz
ZWQgbW9kZWxzIGZvciBzcGVlY2ggcmVjb2duaXRpb24gKDIwMTUpLCBKLiBD
aG9yb3dza2kgZXQgYWwuIFtbcGRmXV0oaHR0cDovL3BhcGVycy5uaXBzLmNj
L3BhcGVyLzU4NDctYXR0ZW50aW9uLWJhc2VkLW1vZGVscy1mb3Itc3BlZWNo
LXJlY29nbml0aW9uLnBkZikKLSBFbmQtdG8tZW5kIG1lbW9yeSBuZXR3b3Jr
cyAoMjAxNSksIFMuIFN1a2JhYXRhciBldCBhbC4gW1twZGZdXShodHRwOi8v
cGFwZXJzLm5pcHMuY2MvcGFwZXIvNTg0Ni1lbmQtdG8tZW5kLW1lbW9yeS1u
ZXR3b3Jrcy5wZGYpCi0gRGVzY3JpYmluZyB2aWRlb3MgYnkgZXhwbG9pdGlu
ZyB0ZW1wb3JhbCBzdHJ1Y3R1cmUgKDIwMTUpLCBMLiBZYW8gZXQgYWwuIFtb
cGRmXV0oaHR0cDovL3d3dy5jdi1mb3VuZGF0aW9uLm9yZy9vcGVuYWNjZXNz
L2NvbnRlbnRfaWNjdl8yMDE1L3BhcGVycy9ZYW9fRGVzY3JpYmluZ19WaWRl
b3NfYnlfSUNDVl8yMDE1X3BhcGVyLnBkZikKLSBBIG5ldXJhbCBjb252ZXJz
YXRpb25hbCBtb2RlbCAoMjAxNSksIE8uIFZpbnlhbHMgYW5kIFEuIExlLiBb
W3BkZl1dKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8xNTA2LjA1ODY5LnBkZikK
LSBJbXByb3ZpbmcgZGlzdHJpYnV0aW9uYWwgc2ltaWxhcml0eSB3aXRoIGxl
c3NvbnMgbGVhcm5lZCBmcm9tIHdvcmQgZW1iZWRkaW5ncywgTy4gTGV2eSBl
dCBhbC4gW1twZGZdXSAoaHR0cHM6Ly93d3cudHJhbnNhY2wub3JnL29qcy9p
bmRleC5waHAvdGFjbC9hcnRpY2xlL2Rvd25sb2FkLzU3MC8xMjQpCi0gVHJh
bnNpdGlvbi1CYXNlZCBEZXBlbmRlbmN5IFBhcnNpbmcgd2l0aCBTdGFjayBM
b25nIFNob3J0LVRlcm0gTWVtb3J5ICgyMDE1KSwgQy4gRHllciBldCBhbC4g
W1twZGZdXShodHRwOi8vYWNsd2ViLm9yZy9hbnRob2xvZ3kvUC9QMTUvUDE1
LTEwMzMucGRmKQotIEltcHJvdmVkIFRyYW5zaXRpb24tQmFzZWQgUGFyc2lu
ZyBieSBNb2RlbGluZyBDaGFyYWN0ZXJzIGluc3RlYWQgb2YgV29yZHMgd2l0
aCBMU1RNcyAoMjAxNSksIE0uIEJhbGxlc3Rlcm9zIGV0IGFsLiBbW3BkZl1d
KGh0dHA6Ly9hY2x3ZWIub3JnL2FudGhvbG9neS9EL0QxNS9EMTUtMTA0MS5w
ZGYpCi0gRmluZGluZyBmdW5jdGlvbiBpbiBmb3JtOiBDb21wb3NpdGlvbmFs
IGNoYXJhY3RlciBtb2RlbHMgZm9yIG9wZW4gdm9jYWJ1bGFyeSB3b3JkIHJl
cHJlc2VudGF0aW9uICgyMDE1KSwgVy4gTGluZyBldCBhbC4gW1twZGZdXSho
dHRwOi8vYWNsd2ViLm9yZy9hbnRob2xvZ3kvRC9EMTUvRDE1LTExNzYucGRm
KQoKCioofjIwMTQpKgotIERlZXBQb3NlOiBIdW1hbiBwb3NlIGVzdGltYXRp
b24gdmlhIGRlZXAgbmV1cmFsIG5ldHdvcmtzICgyMDE0KSwgQS4gVG9zaGV2
IGFuZCBDLiBTemVnZWR5IFtbcGRmXV0oaHR0cDovL3d3dy5jdi1mb3VuZGF0
aW9uLm9yZy9vcGVuYWNjZXNzL2NvbnRlbnRfY3Zwcl8yMDE0L3BhcGVycy9U
b3NoZXZfRGVlcFBvc2VfSHVtYW5fUG9zZV8yMDE0X0NWUFJfcGFwZXIucGRm
KQotIExlYXJuaW5nIGEgRGVlcCBDb252b2x1dGlvbmFsIE5ldHdvcmsgZm9y
IEltYWdlIFN1cGVyLVJlc29sdXRpb24gKDIwMTQsIEMuIERvbmcgZXQgYWwu
IFtbcGRmXV0oaHR0cHM6Ly93d3cucmVzZWFyY2hnYXRlLm5ldC9wcm9maWxl
L0NoZW5fQ2hhbmdlX0xveS9wdWJsaWNhdGlvbi8yNjQ1NTI0MTZfTGVjdHVy
ZV9Ob3Rlc19pbl9Db21wdXRlcl9TY2llbmNlL2xpbmtzLzUzZTU4M2U1MGNm
MjVkNjc0ZTljMjgwZS5wZGYpCi0gUmVjdXJyZW50IG1vZGVscyBvZiB2aXN1
YWwgYXR0ZW50aW9uICgyMDE0KSwgVi4gTW5paCBldCBhbC4gW1twZGZdXSho
dHRwOi8vYXJ4aXYub3JnL3BkZi8xNDA2LjYyNDcucGRmKQotIEVtcGlyaWNh
bCBldmFsdWF0aW9uIG9mIGdhdGVkIHJlY3VycmVudCBuZXVyYWwgbmV0d29y
a3Mgb24gc2VxdWVuY2UgbW9kZWxpbmcgKDIwMTQpLCBKLiBDaHVuZyBldCBh
bC4gW1twZGZdXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMTQxMi4zNTU1KQot
IEFkZHJlc3NpbmcgdGhlIHJhcmUgd29yZCBwcm9ibGVtIGluIG5ldXJhbCBt
YWNoaW5lIHRyYW5zbGF0aW9uICgyMDE0KSwgTS4gTHVvbmcgZXQgYWwuIFtb
cGRmXV0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzE0MTAuODIwNikKLSBPbiB0
aGUgcHJvcGVydGllcyBvZiBuZXVyYWwgbWFjaGluZSB0cmFuc2xhdGlvbjog
RW5jb2Rlci1kZWNvZGVyIGFwcHJvYWNoZXMgKDIwMTQpLCBLLiBDaG8gZXQu
IGFsLgotIFJlY3VycmVudCBuZXVyYWwgbmV0d29yayByZWd1bGFyaXphdGlv
biAoMjAxNCksIFcuIFphcmVtYmEgZXQgYWwuIFtbcGRmXV0oaHR0cDovL2Fy
eGl2Lm9yZy9wZGYvMTQwOS4yMzI5KQotIEludHJpZ3VpbmcgcHJvcGVydGll
cyBvZiBuZXVyYWwgbmV0d29ya3MgKDIwMTQpLCBDLiBTemVnZWR5IGV0IGFs
LiBbW3BkZl1dKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8xMzEyLjYxOTkucGRm
KQotIFRvd2FyZHMgZW5kLXRvLWVuZCBzcGVlY2ggcmVjb2duaXRpb24gd2l0
aCByZWN1cnJlbnQgbmV1cmFsIG5ldHdvcmtzICgyMDE0KSwgQS4gR3JhdmVz
IGFuZCBOLiBKYWl0bHkuIFtbcGRmXV0oaHR0cDovL3d3dy5qbWxyLm9yZy9w
cm9jZWVkaW5ncy9wYXBlcnMvdjMyL2dyYXZlczE0LnBkZikKLSBTY2FsYWJs
ZSBvYmplY3QgZGV0ZWN0aW9uIHVzaW5nIGRlZXAgbmV1cmFsIG5ldHdvcmtz
ICgyMDE0KSwgRC4gRXJoYW4gZXQgYWwuIFtbcGRmXV0oaHR0cDovL3d3dy5j
di1mb3VuZGF0aW9uLm9yZy9vcGVuYWNjZXNzL2NvbnRlbnRfY3Zwcl8yMDE0
L3BhcGVycy9Fcmhhbl9TY2FsYWJsZV9PYmplY3RfRGV0ZWN0aW9uXzIwMTRf
Q1ZQUl9wYXBlci5wZGYpCi0gT24gdGhlIGltcG9ydGFuY2Ugb2YgaW5pdGlh
bGl6YXRpb24gYW5kIG1vbWVudHVtIGluIGRlZXAgbGVhcm5pbmcgKDIwMTMp
LCBJLiBTdXRza2V2ZXIgZXQgYWwuIFtbcGRmXV0oaHR0cDovL21hY2hpbmVs
ZWFybmluZy53dXN0bC5lZHUvbWxwYXBlcnMvcGFwZXJfZmlsZXMvaWNtbDIw
MTNfc3V0c2tldmVyMTMucGRmKQotIFJlZ3VsYXJpemF0aW9uIG9mIG5ldXJh
bCBuZXR3b3JrcyB1c2luZyBkcm9wY29ubmVjdCAoMjAxMyksIEwuIFdhbiBl
dCBhbC4gW1twZGZdXShodHRwOi8vbWFjaGluZWxlYXJuaW5nLnd1c3RsLmVk
dS9tbHBhcGVycy9wYXBlcl9maWxlcy9pY21sMjAxM193YW4xMy5wZGYpCi0g
TGVhcm5pbmcgSGllcmFyY2hpY2FsIEZlYXR1cmVzIGZvciBTY2VuZSBMYWJl
bGluZyAoMjAxMyksIEMuIEZhcmFiZXQgZXQgYWwuIFtbcGRmXV0oaHR0cHM6
Ly9oYWwtZW5wYy5hcmNoaXZlcy1vdXZlcnRlcy5mci9kb2NzLzAwLzc0LzIw
Lzc3L1BERi9mYXJhYmV0LXBhbWktMTMucGRmKQotIExpbmd1aXN0aWMgUmVn
dWxhcml0aWVzIGluIENvbnRpbnVvdXMgU3BhY2UgV29yZCBSZXByZXNlbnRh
dGlvbnMgKDIwMTMpLCBULiBNaWtvbG92IGV0IGFsLiBbW3BkZl1dKGh0dHA6
Ly93d3cuYWNsd2ViLm9yZy9hbnRob2xvZ3kvTjEzLTEjcGFnZT03ODQpCi0g
TGFyZ2Ugc2NhbGUgZGlzdHJpYnV0ZWQgZGVlcCBuZXR3b3JrcyAoMjAxMiks
IEouIERlYW4gZXQgYWwuIFtbcGRmXV0oaHR0cDovL3BhcGVycy5uaXBzLmNj
L3BhcGVyLzQ2ODctbGFyZ2Utc2NhbGUtZGlzdHJpYnV0ZWQtZGVlcC1uZXR3
b3Jrcy5wZGYpCi0gQSBGYXN0IGFuZCBBY2N1cmF0ZSBEZXBlbmRlbmN5IFBh
cnNlciB1c2luZyBOZXVyYWwgTmV0d29ya3MuIENoZW4gYW5kIE1hbm5pbmcu
IFtbcGRmXV0oaHR0cDovL2NzLnN0YW5mb3JkLmVkdS9wZW9wbGUvZGFucWkv
cGFwZXJzL2VtbmxwMjAxNC5wZGYpCgoKCiMjIEFja25vd2xlZGdlbWVudAoK
VGhhbmsgeW91IGZvciBhbGwgeW91ciBjb250cmlidXRpb25zLiBQbGVhc2Ug
bWFrZSBzdXJlIHRvIHJlYWQgdGhlIFtjb250cmlidXRpbmcgZ3VpZGVdKGh0
dHBzOi8vZ2l0aHViLmNvbS90ZXJyeXVtL2F3ZXNvbWUtZGVlcC1sZWFybmlu
Zy1wYXBlcnMvYmxvYi9tYXN0ZXIvQ29udHJpYnV0aW5nLm1kKSBiZWZvcmUg
eW91IG1ha2UgYSBwdWxsIHJlcXVlc3QuCgojIyBMaWNlbnNlClshW0NDMF0o
aHR0cDovL21pcnJvcnMuY3JlYXRpdmVjb21tb25zLm9yZy9wcmVzc2tpdC9i
dXR0b25zLzg4eDMxL3N2Zy9jYy16ZXJvLnN2ZyldKGh0dHBzOi8vY3JlYXRp
dmVjb21tb25zLm9yZy9wdWJsaWNkb21haW4vemVyby8xLjAvKQoKVG8gdGhl
IGV4dGVudCBwb3NzaWJsZSB1bmRlciBsYXcsIFtUZXJyeSBULiBVbV0oaHR0
cHM6Ly93d3cuZmFjZWJvb2suY29tL3RlcnJ5dW0uaW8vKSBoYXMgd2FpdmVk
IGFsbCBjb3B5cmlnaHQgYW5kIHJlbGF0ZWQgb3IgbmVpZ2hib3Jpbmcgcmln
aHRzIHRvIHRoaXMgd29yay4K
",,20115,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
