name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'reveal.js',1861458,b'The HTML Presentation Framework',b'JavaScript',543,49334,,1559,False,b'https://api.github.com/repos/hakimel/reveal.js/forks',"IyByZXZlYWwuanMgWyFbQnVpbGQgU3RhdHVzXShodHRwczovL3RyYXZpcy1j
aS5vcmcvaGFraW1lbC9yZXZlYWwuanMuc3ZnP2JyYW5jaD1tYXN0ZXIpXSho
dHRwczovL3RyYXZpcy1jaS5vcmcvaGFraW1lbC9yZXZlYWwuanMpIDxhIGhy
ZWY9Imh0dHBzOi8vc2xpZGVzLmNvbT9yZWY9Z2l0aHViIj48aW1nIHNyYz0i
aHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL3N0YXRpYy5zbGlkLmVzL2ltYWdl
cy9zbGlkZXMtZ2l0aHViLWJhbm5lci0zMjB4NDAucG5nPzEiIGFsdD0iU2xp
ZGVzIiB3aWR0aD0iMTYwIiBoZWlnaHQ9IjIwIj48L2E+CgpBIGZyYW1ld29y
ayBmb3IgZWFzaWx5IGNyZWF0aW5nIGJlYXV0aWZ1bCBwcmVzZW50YXRpb25z
IHVzaW5nIEhUTUwuIFtDaGVjayBvdXQgdGhlIGxpdmUgZGVtb10oaHR0cDov
L3JldmVhbGpzLmNvbS8pLgoKcmV2ZWFsLmpzIGNvbWVzIHdpdGggYSBicm9h
ZCByYW5nZSBvZiBmZWF0dXJlcyBpbmNsdWRpbmcgW25lc3RlZCBzbGlkZXNd
KGh0dHBzOi8vZ2l0aHViLmNvbS9oYWtpbWVsL3JldmVhbC5qcyNtYXJrdXAp
LCBbTWFya2Rvd24gY29udGVudHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9oYWtp
bWVsL3JldmVhbC5qcyNtYXJrZG93biksIFtQREYgZXhwb3J0XShodHRwczov
L2dpdGh1Yi5jb20vaGFraW1lbC9yZXZlYWwuanMjcGRmLWV4cG9ydCksIFtz
cGVha2VyIG5vdGVzXShodHRwczovL2dpdGh1Yi5jb20vaGFraW1lbC9yZXZl
YWwuanMjc3BlYWtlci1ub3RlcykgYW5kIGEgW0phdmFTY3JpcHQgQVBJXSho
dHRwczovL2dpdGh1Yi5jb20vaGFraW1lbC9yZXZlYWwuanMjYXBpKS4gVGhl
cmUncyBhbHNvIGEgZnVsbHkgZmVhdHVyZWQgdmlzdWFsIGVkaXRvciBhbmQg
cGxhdGZvcm0gZm9yIHNoYXJpbmcgcmV2ZWFsLmpzIHByZXNlbnRhdGlvbnMg
YXQgW3NsaWRlcy5jb21dKGh0dHBzOi8vc2xpZGVzLmNvbT9yZWY9Z2l0aHVi
KS4KCgojIyBUYWJsZSBvZiBjb250ZW50cwoKLSBbT25saW5lIEVkaXRvcl0o
I29ubGluZS1lZGl0b3IpCi0gW0luc3RhbGxhdGlvbl0oI2luc3RhbGxhdGlv
bikKICAtIFtCYXNpYyBzZXR1cF0oI2Jhc2ljLXNldHVwKQogIC0gW0Z1bGwg
c2V0dXBdKCNmdWxsLXNldHVwKQogIC0gW0ZvbGRlciBTdHJ1Y3R1cmVdKCNm
b2xkZXItc3RydWN0dXJlKQotIFtJbnN0cnVjdGlvbnNdKCNpbnN0cnVjdGlv
bnMpCiAgLSBbTWFya3VwXSgjbWFya3VwKQogIC0gW01hcmtkb3duXSgjbWFy
a2Rvd24pCiAgLSBbRWxlbWVudCBBdHRyaWJ1dGVzXSgjZWxlbWVudC1hdHRy
aWJ1dGVzKQogIC0gW1NsaWRlIEF0dHJpYnV0ZXNdKCNzbGlkZS1hdHRyaWJ1
dGVzKQotIFtDb25maWd1cmF0aW9uXSgjY29uZmlndXJhdGlvbikKLSBbUHJl
c2VudGF0aW9uIFNpemVdKCNwcmVzZW50YXRpb24tc2l6ZSkKLSBbRGVwZW5k
ZW5jaWVzXSgjZGVwZW5kZW5jaWVzKQotIFtSZWFkeSBFdmVudF0oI3JlYWR5
LWV2ZW50KQotIFtBdXRvLXNsaWRpbmddKCNhdXRvLXNsaWRpbmcpCi0gW0tl
eWJvYXJkIEJpbmRpbmdzXSgja2V5Ym9hcmQtYmluZGluZ3MpCi0gW1ZlcnRp
Y2FsIFNsaWRlIE5hdmlnYXRpb25dKCN2ZXJ0aWNhbC1zbGlkZS1uYXZpZ2F0
aW9uKQotIFtUb3VjaCBOYXZpZ2F0aW9uXSgjdG91Y2gtbmF2aWdhdGlvbikK
LSBbTGF6eSBMb2FkaW5nXSgjbGF6eS1sb2FkaW5nKQotIFtBUEldKCNhcGkp
CiAgLSBbU2xpZGUgQ2hhbmdlZCBFdmVudF0oI3NsaWRlLWNoYW5nZWQtZXZl
bnQpCiAgLSBbUHJlc2VudGF0aW9uIFN0YXRlXSgjcHJlc2VudGF0aW9uLXN0
YXRlKQogIC0gW1NsaWRlIFN0YXRlc10oI3NsaWRlLXN0YXRlcykKICAtIFtT
bGlkZSBCYWNrZ3JvdW5kc10oI3NsaWRlLWJhY2tncm91bmRzKQogIC0gW1Bh
cmFsbGF4IEJhY2tncm91bmRdKCNwYXJhbGxheC1iYWNrZ3JvdW5kKQogIC0g
W1NsaWRlIFRyYW5zaXRpb25zXSgjc2xpZGUtdHJhbnNpdGlvbnMpCiAgLSBb
SW50ZXJuYWwgbGlua3NdKCNpbnRlcm5hbC1saW5rcykKICAtIFtGcmFnbWVu
dHNdKCNmcmFnbWVudHMpCiAgLSBbRnJhZ21lbnQgZXZlbnRzXSgjZnJhZ21l
bnQtZXZlbnRzKQogIC0gW0NvZGUgc3ludGF4IGhpZ2hsaWdodGluZ10oI2Nv
ZGUtc3ludGF4LWhpZ2hsaWdodGluZykKICAtIFtTbGlkZSBudW1iZXJdKCNz
bGlkZS1udW1iZXIpCiAgLSBbT3ZlcnZpZXcgbW9kZV0oI292ZXJ2aWV3LW1v
ZGUpCiAgLSBbRnVsbHNjcmVlbiBtb2RlXSgjZnVsbHNjcmVlbi1tb2RlKQog
IC0gW0VtYmVkZGVkIG1lZGlhXSgjZW1iZWRkZWQtbWVkaWEpCiAgLSBbU3Ry
ZXRjaGluZyBlbGVtZW50c10oI3N0cmV0Y2hpbmctZWxlbWVudHMpCiAgLSBb
UmVzaXplIEV2ZW50XSgjcmVzaXplLWV2ZW50KQogIC0gW3Bvc3RNZXNzYWdl
IEFQSV0oI3Bvc3RtZXNzYWdlLWFwaSkKLSBbUERGIEV4cG9ydF0oI3BkZi1l
eHBvcnQpCi0gW1RoZW1pbmddKCN0aGVtaW5nKQotIFtTcGVha2VyIE5vdGVz
XSgjc3BlYWtlci1ub3RlcykKICAtIFtTaGFyZSBhbmQgUHJpbnQgU3BlYWtl
ciBOb3Rlc10oI3NoYXJlLWFuZC1wcmludC1zcGVha2VyLW5vdGVzKQogIC0g
W1NlcnZlciBTaWRlIFNwZWFrZXIgTm90ZXNdKCNzZXJ2ZXItc2lkZS1zcGVh
a2VyLW5vdGVzKQotIFtQbHVnaW5zXSgjcGx1Z2lucykKLSBbTXVsdGlwbGV4
aW5nXSgjbXVsdGlwbGV4aW5nKQogIC0gW01hc3RlciBwcmVzZW50YXRpb25d
KCNtYXN0ZXItcHJlc2VudGF0aW9uKQogIC0gW0NsaWVudCBwcmVzZW50YXRp
b25dKCNjbGllbnQtcHJlc2VudGF0aW9uKQogIC0gW1NvY2tldC5pbyBzZXJ2
ZXJdKCNzb2NrZXRpby1zZXJ2ZXIpCi0gW01hdGhKYXhdKCNtYXRoamF4KQot
IFtMaWNlbnNlXSgjbGljZW5zZSkKCiMjIyMgTW9yZSByZWFkaW5nCgotIFtD
aGFuZ2Vsb2ddKGh0dHBzOi8vZ2l0aHViLmNvbS9oYWtpbWVsL3JldmVhbC5q
cy9yZWxlYXNlcyk6IFVwLXRvLWRhdGUgdmVyc2lvbiBoaXN0b3J5LgotIFtF
eGFtcGxlc10oaHR0cHM6Ly9naXRodWIuY29tL2hha2ltZWwvcmV2ZWFsLmpz
L3dpa2kvRXhhbXBsZS1QcmVzZW50YXRpb25zKTogUHJlc2VudGF0aW9ucyBj
cmVhdGVkIHdpdGggcmV2ZWFsLmpzLCBhZGQgeW91ciBvd24hCi0gW0Jyb3dz
ZXIgU3VwcG9ydF0oaHR0cHM6Ly9naXRodWIuY29tL2hha2ltZWwvcmV2ZWFs
LmpzL3dpa2kvQnJvd3Nlci1TdXBwb3J0KTogRXhwbGFuYXRpb24gb2YgYnJv
d3NlciBzdXBwb3J0IGFuZCBmYWxsYmFja3MuCi0gW1BsdWdpbnNdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9oYWtpbWVsL3JldmVhbC5qcy93aWtpL1BsdWdpbnMs
LVRvb2xzLWFuZC1IYXJkd2FyZSk6IEEgbGlzdCBvZiBwbHVnaW5zIHRoYXQg
Y2FuIGJlIHVzZWQgdG8gZXh0ZW5kIHJldmVhbC5qcy4KCgojIyBPbmxpbmUg
RWRpdG9yCgpQcmVzZW50YXRpb25zIGFyZSB3cml0dGVuIHVzaW5nIEhUTUwg
b3IgTWFya2Rvd24gYnV0IHRoZXJlJ3MgYWxzbyBhbiBvbmxpbmUgZWRpdG9y
IGZvciB0aG9zZSBvZiB5b3Ugd2hvIHByZWZlciBhIGdyYXBoaWNhbCBpbnRl
cmZhY2UuIEdpdmUgaXQgYSB0cnkgYXQgW2h0dHBzOi8vc2xpZGVzLmNvbV0o
aHR0cHM6Ly9zbGlkZXMuY29tP3JlZj1naXRodWIpLgoKCiMjIEluc3RhbGxh
dGlvbgoKVGhlICoqYmFzaWMgc2V0dXAqKiBpcyBmb3IgYXV0aG9yaW5nIHBy
ZXNlbnRhdGlvbnMgb25seS4gVGhlICoqZnVsbCBzZXR1cCoqIGdpdmVzIHlv
dSBhY2Nlc3MgdG8gYWxsIHJldmVhbC5qcyBmZWF0dXJlcyBhbmQgcGx1Z2lu
cyBzdWNoIGFzIHNwZWFrZXIgbm90ZXMgYXMgd2VsbCBhcyB0aGUgZGV2ZWxv
cG1lbnQgdGFza3MgbmVlZGVkIHRvIG1ha2UgY2hhbmdlcyB0byB0aGUgc291
cmNlLgoKIyMjIEJhc2ljIHNldHVwCgpUaGUgY29yZSBvZiByZXZlYWwuanMg
aXMgdmVyeSBlYXN5IHRvIGluc3RhbGwuIFlvdSdsbCBzaW1wbHkgbmVlZCB0
byBkb3dubG9hZCBhIGNvcHkgb2YgdGhpcyByZXBvc2l0b3J5IGFuZCBvcGVu
IHRoZSBpbmRleC5odG1sIGZpbGUgZGlyZWN0bHkgaW4geW91ciBicm93c2Vy
LgoKMS4gRG93bmxvYWQgdGhlIGxhdGVzdCB2ZXJzaW9uIG9mIHJldmVhbC5q
cyBmcm9tIDxodHRwczovL2dpdGh1Yi5jb20vaGFraW1lbC9yZXZlYWwuanMv
cmVsZWFzZXM+CjIuIFVuemlwIGFuZCByZXBsYWNlIHRoZSBleGFtcGxlIGNv
bnRlbnRzIGluIGluZGV4Lmh0bWwgd2l0aCB5b3VyIG93bgozLiBPcGVuIGlu
ZGV4Lmh0bWwgaW4gYSBicm93c2VyIHRvIHZpZXcgaXQKCiMjIyBGdWxsIHNl
dHVwCgpTb21lIHJldmVhbC5qcyBmZWF0dXJlcywgbGlrZSBleHRlcm5hbCBN
YXJrZG93biBhbmQgc3BlYWtlciBub3RlcywgcmVxdWlyZSB0aGF0IHByZXNl
bnRhdGlvbnMgcnVuIGZyb20gYSBsb2NhbCB3ZWIgc2VydmVyLiBUaGUgZm9s
bG93aW5nIGluc3RydWN0aW9ucyB3aWxsIHNldCB1cCBzdWNoIGEgc2VydmVy
IGFzIHdlbGwgYXMgYWxsIG9mIHRoZSBkZXZlbG9wbWVudCB0YXNrcyBuZWVk
ZWQgdG8gbWFrZSBlZGl0cyB0byB0aGUgcmV2ZWFsLmpzIHNvdXJjZSBjb2Rl
LgoKMS4gSW5zdGFsbCBbTm9kZS5qc10oaHR0cDovL25vZGVqcy5vcmcvKSAo
NC4wLjAgb3IgbGF0ZXIpCgoxLiBDbG9uZSB0aGUgcmV2ZWFsLmpzIHJlcG9z
aXRvcnkKICAgYGBgc2gKICAgJCBnaXQgY2xvbmUgaHR0cHM6Ly9naXRodWIu
Y29tL2hha2ltZWwvcmV2ZWFsLmpzLmdpdAogICBgYGAKCjEuIE5hdmlnYXRl
IHRvIHRoZSByZXZlYWwuanMgZm9sZGVyCiAgIGBgYHNoCiAgICQgY2QgcmV2
ZWFsLmpzCiAgIGBgYAoKMS4gSW5zdGFsbCBkZXBlbmRlbmNpZXMKICAgYGBg
c2gKICAgJCBucG0gaW5zdGFsbAogICBgYGAKCjEuIFNlcnZlIHRoZSBwcmVz
ZW50YXRpb24gYW5kIG1vbml0b3Igc291cmNlIGZpbGVzIGZvciBjaGFuZ2Vz
CiAgIGBgYHNoCiAgICQgbnBtIHN0YXJ0CiAgIGBgYAoKMS4gT3BlbiA8aHR0
cDovL2xvY2FsaG9zdDo4MDAwPiB0byB2aWV3IHlvdXIgcHJlc2VudGF0aW9u
CgogICBZb3UgY2FuIGNoYW5nZSB0aGUgcG9ydCBieSB1c2luZyBgbnBtIHN0
YXJ0IC0tIC0tcG9ydD04MDAxYC4KCiMjIyBGb2xkZXIgU3RydWN0dXJlCgot
ICoqY3NzLyoqIENvcmUgc3R5bGVzIHdpdGhvdXQgd2hpY2ggdGhlIHByb2pl
Y3QgZG9lcyBub3QgZnVuY3Rpb24KLSAqKmpzLyoqIExpa2UgYWJvdmUgYnV0
IGZvciBKYXZhU2NyaXB0Ci0gKipwbHVnaW4vKiogQ29tcG9uZW50cyB0aGF0
IGhhdmUgYmVlbiBkZXZlbG9wZWQgYXMgZXh0ZW5zaW9ucyB0byByZXZlYWwu
anMKLSAqKmxpYi8qKiBBbGwgb3RoZXIgdGhpcmQgcGFydHkgYXNzZXRzIChK
YXZhU2NyaXB0LCBDU1MsIGZvbnRzKQoKCiMjIEluc3RydWN0aW9ucwoKIyMj
IE1hcmt1cAoKSGVyZSdzIGEgYmFyZWJvbmVzIGV4YW1wbGUgb2YgYSBmdWxs
eSB3b3JraW5nIHJldmVhbC5qcyBwcmVzZW50YXRpb246CmBgYGh0bWwKPGh0
bWw+Cgk8aGVhZD4KCQk8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9ImNz
cy9yZXZlYWwuY3NzIj4KCQk8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9
ImNzcy90aGVtZS93aGl0ZS5jc3MiPgoJPC9oZWFkPgoJPGJvZHk+CgkJPGRp
diBjbGFzcz0icmV2ZWFsIj4KCQkJPGRpdiBjbGFzcz0ic2xpZGVzIj4KCQkJ
CTxzZWN0aW9uPlNsaWRlIDE8L3NlY3Rpb24+CgkJCQk8c2VjdGlvbj5TbGlk
ZSAyPC9zZWN0aW9uPgoJCQk8L2Rpdj4KCQk8L2Rpdj4KCQk8c2NyaXB0IHNy
Yz0ianMvcmV2ZWFsLmpzIj48L3NjcmlwdD4KCQk8c2NyaXB0PgoJCQlSZXZl
YWwuaW5pdGlhbGl6ZSgpOwoJCTwvc2NyaXB0PgoJPC9ib2R5Pgo8L2h0bWw+
CmBgYAoKVGhlIHByZXNlbnRhdGlvbiBtYXJrdXAgaGllcmFyY2h5IG5lZWRz
IHRvIGJlIGAucmV2ZWFsID4gLnNsaWRlcyA+IHNlY3Rpb25gIHdoZXJlIHRo
ZSBgc2VjdGlvbmAgcmVwcmVzZW50cyBvbmUgc2xpZGUgYW5kIGNhbiBiZSBy
ZXBlYXRlZCBpbmRlZmluaXRlbHkuIElmIHlvdSBwbGFjZSBtdWx0aXBsZSBg
c2VjdGlvbmAgZWxlbWVudHMgaW5zaWRlIG9mIGFub3RoZXIgYHNlY3Rpb25g
IHRoZXkgd2lsbCBiZSBzaG93biBhcyB2ZXJ0aWNhbCBzbGlkZXMuIFRoZSBm
aXJzdCBvZiB0aGUgdmVydGljYWwgc2xpZGVzIGlzIHRoZSAicm9vdCIgb2Yg
dGhlIG90aGVycyAoYXQgdGhlIHRvcCksIGFuZCB3aWxsIGJlIGluY2x1ZGVk
IGluIHRoZSBob3Jpem9udGFsIHNlcXVlbmNlLiBGb3IgZXhhbXBsZToKCmBg
YGh0bWwKPGRpdiBjbGFzcz0icmV2ZWFsIj4KCTxkaXYgY2xhc3M9InNsaWRl
cyI+CgkJPHNlY3Rpb24+U2luZ2xlIEhvcml6b250YWwgU2xpZGU8L3NlY3Rp
b24+CgkJPHNlY3Rpb24+CgkJCTxzZWN0aW9uPlZlcnRpY2FsIFNsaWRlIDE8
L3NlY3Rpb24+CgkJCTxzZWN0aW9uPlZlcnRpY2FsIFNsaWRlIDI8L3NlY3Rp
b24+CgkJPC9zZWN0aW9uPgoJPC9kaXY+CjwvZGl2PgpgYGAKCiMjIyBNYXJr
ZG93bgoKSXQncyBwb3NzaWJsZSB0byB3cml0ZSB5b3VyIHNsaWRlcyB1c2lu
ZyBNYXJrZG93bi4gVG8gZW5hYmxlIE1hcmtkb3duLCBhZGQgdGhlIGBkYXRh
LW1hcmtkb3duYCBhdHRyaWJ1dGUgdG8geW91ciBgPHNlY3Rpb24+YCBlbGVt
ZW50cyBhbmQgd3JhcCB0aGUgY29udGVudHMgaW4gYSBgPHRleHRhcmVhIGRh
dGEtdGVtcGxhdGU+YCBsaWtlIHRoZSBleGFtcGxlIGJlbG93LiBZb3UnbGwg
YWxzbyBuZWVkIHRvIGFkZCB0aGUgYHBsdWdpbi9tYXJrZG93bi9tYXJrZWQu
anNgIGFuZCBgcGx1Z2luL21hcmtkb3duL21hcmtkb3duLmpzYCBzY3JpcHRz
IChpbiB0aGF0IG9yZGVyKSB0byB5b3VyIEhUTUwgZmlsZS4KClRoaXMgaXMg
YmFzZWQgb24gW2RhdGEtbWFya2Rvd25dKGh0dHBzOi8vZ2lzdC5naXRodWIu
Y29tLzEzNDM1MTgpIGZyb20gW1BhdWwgSXJpc2hdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9wYXVsaXJpc2gpIG1vZGlmaWVkIHRvIHVzZSBbbWFya2VkXShodHRw
czovL2dpdGh1Yi5jb20vY2hqai9tYXJrZWQpIHRvIHN1cHBvcnQgW0dpdEh1
YiBGbGF2b3JlZCBNYXJrZG93bl0oaHR0cHM6Ly9oZWxwLmdpdGh1Yi5jb20v
YXJ0aWNsZXMvZ2l0aHViLWZsYXZvcmVkLW1hcmtkb3duKS4gU2Vuc2l0aXZl
IHRvIGluZGVudGF0aW9uIChhdm9pZCBtaXhpbmcgdGFicyBhbmQgc3BhY2Vz
KSBhbmQgbGluZSBicmVha3MgKGF2b2lkIGNvbnNlY3V0aXZlIGJyZWFrcyku
CgpgYGBodG1sCjxzZWN0aW9uIGRhdGEtbWFya2Rvd24+Cgk8dGV4dGFyZWEg
ZGF0YS10ZW1wbGF0ZT4KCQkjIyBQYWdlIHRpdGxlCgoJCUEgcGFyYWdyYXBo
IHdpdGggc29tZSB0ZXh0IGFuZCBhIFtsaW5rXShodHRwOi8vaGFraW0uc2Up
LgoJPC90ZXh0YXJlYT4KPC9zZWN0aW9uPgpgYGAKCiMjIyMgRXh0ZXJuYWwg
TWFya2Rvd24KCllvdSBjYW4gd3JpdGUgeW91ciBjb250ZW50IGFzIGEgc2Vw
YXJhdGUgZmlsZSBhbmQgaGF2ZSByZXZlYWwuanMgbG9hZCBpdCBhdCBydW50
aW1lLiBOb3RlIHRoZSBzZXBhcmF0b3IgYXJndW1lbnRzIHdoaWNoIGRldGVy
bWluZSBob3cgc2xpZGVzIGFyZSBkZWxpbWl0ZWQgaW4gdGhlIGV4dGVybmFs
IGZpbGU6IHRoZSBgZGF0YS1zZXBhcmF0b3JgIGF0dHJpYnV0ZSBkZWZpbmVz
IGEgcmVndWxhciBleHByZXNzaW9uIGZvciBob3Jpem9udGFsIHNsaWRlcyAo
ZGVmYXVsdHMgdG8gYF5ccj9cbi0tLVxyP1xuJGAsIGEgbmV3bGluZS1ib3Vu
ZGVkIGhvcml6b250YWwgcnVsZSkgIGFuZCBgZGF0YS1zZXBhcmF0b3ItdmVy
dGljYWxgIGRlZmluZXMgdmVydGljYWwgc2xpZGVzIChkaXNhYmxlZCBieSBk
ZWZhdWx0KS4gVGhlIGBkYXRhLXNlcGFyYXRvci1ub3Rlc2AgYXR0cmlidXRl
IGlzIGEgcmVndWxhciBleHByZXNzaW9uIGZvciBzcGVjaWZ5aW5nIHRoZSBi
ZWdpbm5pbmcgb2YgdGhlIGN1cnJlbnQgc2xpZGUncyBzcGVha2VyIG5vdGVz
IChkZWZhdWx0cyB0byBgbm90ZXM/OmAsIHNvIGl0IHdpbGwgbWF0Y2ggYm90
aCAibm90ZToiIGFuZCAibm90ZXM6IikuIFRoZSBgZGF0YS1jaGFyc2V0YCBh
dHRyaWJ1dGUgaXMgb3B0aW9uYWwgYW5kIHNwZWNpZmllcyB3aGljaCBjaGFy
c2V0IHRvIHVzZSB3aGVuIGxvYWRpbmcgdGhlIGV4dGVybmFsIGZpbGUuCgpX
aGVuIHVzZWQgbG9jYWxseSwgdGhpcyBmZWF0dXJlIHJlcXVpcmVzIHRoYXQg
cmV2ZWFsLmpzIFtydW5zIGZyb20gYSBsb2NhbCB3ZWIgc2VydmVyXSgjZnVs
bC1zZXR1cCkuICBUaGUgZm9sbG93aW5nIGV4YW1wbGUgY3VzdG9taXNlcyBh
bGwgYXZhaWxhYmxlIG9wdGlvbnM6CgpgYGBodG1sCjxzZWN0aW9uIGRhdGEt
bWFya2Rvd249ImV4YW1wbGUubWQiCiAgICAgICAgIGRhdGEtc2VwYXJhdG9y
PSJeXG5cblxuIgogICAgICAgICBkYXRhLXNlcGFyYXRvci12ZXJ0aWNhbD0i
XlxuXG4iCiAgICAgICAgIGRhdGEtc2VwYXJhdG9yLW5vdGVzPSJeTm90ZToi
CiAgICAgICAgIGRhdGEtY2hhcnNldD0iaXNvLTg4NTktMTUiPgogICAgPCEt
LQogICAgICAgIE5vdGUgdGhhdCBXaW5kb3dzIHVzZXMgYFxyXG5gIGluc3Rl
YWQgb2YgYFxuYCBhcyBpdHMgbGluZWZlZWQgY2hhcmFjdGVyLgogICAgICAg
IEZvciBhIHJlZ2V4IHRoYXQgc3VwcG9ydHMgYWxsIG9wZXJhdGluZyBzeXN0
ZW1zLCB1c2UgYFxyP1xuYCBpbnN0ZWFkIG9mIGBcbmAuCiAgICAtLT4KPC9z
ZWN0aW9uPgpgYGAKCiMjIyMgRWxlbWVudCBBdHRyaWJ1dGVzCgpTcGVjaWFs
IHN5bnRheCAodGhyb3VnaCBIVE1MIGNvbW1lbnRzKSBpcyBhdmFpbGFibGUg
Zm9yIGFkZGluZyBhdHRyaWJ1dGVzIHRvIE1hcmtkb3duIGVsZW1lbnRzLiBU
aGlzIGlzIHVzZWZ1bCBmb3IgZnJhZ21lbnRzLCBhbW9uZ3N0IG90aGVyIHRo
aW5ncy4KCmBgYGh0bWwKPHNlY3Rpb24gZGF0YS1tYXJrZG93bj4KCTxzY3Jp
cHQgdHlwZT0idGV4dC90ZW1wbGF0ZSI+CgkJLSBJdGVtIDEgPCEtLSAuZWxl
bWVudDogY2xhc3M9ImZyYWdtZW50IiBkYXRhLWZyYWdtZW50LWluZGV4PSIy
IiAtLT4KCQktIEl0ZW0gMiA8IS0tIC5lbGVtZW50OiBjbGFzcz0iZnJhZ21l
bnQiIGRhdGEtZnJhZ21lbnQtaW5kZXg9IjEiIC0tPgoJPC9zY3JpcHQ+Cjwv
c2VjdGlvbj4KYGBgCgojIyMjIFNsaWRlIEF0dHJpYnV0ZXMKClNwZWNpYWwg
c3ludGF4ICh0aHJvdWdoIEhUTUwgY29tbWVudHMpIGlzIGF2YWlsYWJsZSBm
b3IgYWRkaW5nIGF0dHJpYnV0ZXMgdG8gdGhlIHNsaWRlIGA8c2VjdGlvbj5g
IGVsZW1lbnRzIGdlbmVyYXRlZCBieSB5b3VyIE1hcmtkb3duLgoKYGBgaHRt
bAo8c2VjdGlvbiBkYXRhLW1hcmtkb3duPgoJPHNjcmlwdCB0eXBlPSJ0ZXh0
L3RlbXBsYXRlIj4KCTwhLS0gLnNsaWRlOiBkYXRhLWJhY2tncm91bmQ9IiNm
ZjAwMDAiIC0tPgoJCU1hcmtkb3duIGNvbnRlbnQKCTwvc2NyaXB0Pgo8L3Nl
Y3Rpb24+CmBgYAoKIyMjIyBDb25maWd1cmluZyAqbWFya2VkKgoKV2UgdXNl
IFttYXJrZWRdKGh0dHBzOi8vZ2l0aHViLmNvbS9jaGpqL21hcmtlZCkgdG8g
cGFyc2UgTWFya2Rvd24uIFRvIGN1c3RvbWlzZSBtYXJrZWQncyByZW5kZXJp
bmcsIHlvdSBjYW4gcGFzcyBpbiBvcHRpb25zIHdoZW4gW2NvbmZpZ3VyaW5n
IFJldmVhbF0oI2NvbmZpZ3VyYXRpb24pOgoKYGBgamF2YXNjcmlwdApSZXZl
YWwuaW5pdGlhbGl6ZSh7CgkvLyBPcHRpb25zIHdoaWNoIGFyZSBwYXNzZWQg
aW50byBtYXJrZWQKCS8vIFNlZSBodHRwczovL21hcmtlZC5qcy5vcmcvIy9V
U0lOR19BRFZBTkNFRC5tZCNvcHRpb25zCgltYXJrZG93bjogewoJCXNtYXJ0
eXBhbnRzOiB0cnVlCgl9Cn0pOwpgYGAKCiMjIyBDb25maWd1cmF0aW9uCgpB
dCB0aGUgZW5kIG9mIHlvdXIgcGFnZSB5b3UgbmVlZCB0byBpbml0aWFsaXpl
IHJldmVhbCBieSBydW5uaW5nIHRoZSBmb2xsb3dpbmcgY29kZS4gTm90ZSB0
aGF0IGFsbCBjb25maWd1cmF0aW9uIHZhbHVlcyBhcmUgb3B0aW9uYWwgYW5k
IHdpbGwgZGVmYXVsdCB0byB0aGUgdmFsdWVzIHNwZWNpZmllZCBiZWxvdy4K
CmBgYGphdmFzY3JpcHQKUmV2ZWFsLmluaXRpYWxpemUoewoKCS8vIERpc3Bs
YXkgcHJlc2VudGF0aW9uIGNvbnRyb2wgYXJyb3dzCgljb250cm9sczogdHJ1
ZSwKCgkvLyBIZWxwIHRoZSB1c2VyIGxlYXJuIHRoZSBjb250cm9scyBieSBw
cm92aWRpbmcgaGludHMsIGZvciBleGFtcGxlIGJ5CgkvLyBib3VuY2luZyB0
aGUgZG93biBhcnJvdyB3aGVuIHRoZXkgZmlyc3QgZW5jb3VudGVyIGEgdmVy
dGljYWwgc2xpZGUKCWNvbnRyb2xzVHV0b3JpYWw6IHRydWUsCgoJLy8gRGV0
ZXJtaW5lcyB3aGVyZSBjb250cm9scyBhcHBlYXIsICJlZGdlcyIgb3IgImJv
dHRvbS1yaWdodCIKCWNvbnRyb2xzTGF5b3V0OiAnYm90dG9tLXJpZ2h0JywK
CgkvLyBWaXNpYmlsaXR5IHJ1bGUgZm9yIGJhY2t3YXJkcyBuYXZpZ2F0aW9u
IGFycm93czsgImZhZGVkIiwgImhpZGRlbiIKCS8vIG9yICJ2aXNpYmxlIgoJ
Y29udHJvbHNCYWNrQXJyb3dzOiAnZmFkZWQnLAoKCS8vIERpc3BsYXkgYSBw
cmVzZW50YXRpb24gcHJvZ3Jlc3MgYmFyCglwcm9ncmVzczogdHJ1ZSwKCgkv
LyBEaXNwbGF5IHRoZSBwYWdlIG51bWJlciBvZiB0aGUgY3VycmVudCBzbGlk
ZQoJc2xpZGVOdW1iZXI6IGZhbHNlLAoKCS8vIEFkZCB0aGUgY3VycmVudCBz
bGlkZSBudW1iZXIgdG8gdGhlIFVSTCBoYXNoIHNvIHRoYXQgcmVsb2FkaW5n
IHRoZQoJLy8gcGFnZS9jb3B5aW5nIHRoZSBVUkwgd2lsbCByZXR1cm4geW91
IHRvIHRoZSBzYW1lIHNsaWRlCgloYXNoOiBmYWxzZSwKCgkvLyBQdXNoIGVh
Y2ggc2xpZGUgY2hhbmdlIHRvIHRoZSBicm93c2VyIGhpc3RvcnkuIEltcGxp
ZXMgYGhhc2g6IHRydWVgCgloaXN0b3J5OiBmYWxzZSwKCgkvLyBFbmFibGUg
a2V5Ym9hcmQgc2hvcnRjdXRzIGZvciBuYXZpZ2F0aW9uCglrZXlib2FyZDog
dHJ1ZSwKCgkvLyBFbmFibGUgdGhlIHNsaWRlIG92ZXJ2aWV3IG1vZGUKCW92
ZXJ2aWV3OiB0cnVlLAoKCS8vIFZlcnRpY2FsIGNlbnRlcmluZyBvZiBzbGlk
ZXMKCWNlbnRlcjogdHJ1ZSwKCgkvLyBFbmFibGVzIHRvdWNoIG5hdmlnYXRp
b24gb24gZGV2aWNlcyB3aXRoIHRvdWNoIGlucHV0Cgl0b3VjaDogdHJ1ZSwK
CgkvLyBMb29wIHRoZSBwcmVzZW50YXRpb24KCWxvb3A6IGZhbHNlLAoKCS8v
IENoYW5nZSB0aGUgcHJlc2VudGF0aW9uIGRpcmVjdGlvbiB0byBiZSBSVEwK
CXJ0bDogZmFsc2UsCgoJLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9oYWtp
bWVsL3JldmVhbC5qcy8jbmF2aWdhdGlvbi1tb2RlCgluYXZpZ2F0aW9uTW9k
ZTogJ2RlZmF1bHQnLAoKCS8vIFJhbmRvbWl6ZXMgdGhlIG9yZGVyIG9mIHNs
aWRlcyBlYWNoIHRpbWUgdGhlIHByZXNlbnRhdGlvbiBsb2FkcwoJc2h1ZmZs
ZTogZmFsc2UsCgoJLy8gVHVybnMgZnJhZ21lbnRzIG9uIGFuZCBvZmYgZ2xv
YmFsbHkKCWZyYWdtZW50czogdHJ1ZSwKCgkvLyBGbGFncyB3aGV0aGVyIHRv
IGluY2x1ZGUgdGhlIGN1cnJlbnQgZnJhZ21lbnQgaW4gdGhlIFVSTCwKCS8v
IHNvIHRoYXQgcmVsb2FkaW5nIGJyaW5ncyB5b3UgdG8gdGhlIHNhbWUgZnJh
Z21lbnQgcG9zaXRpb24KCWZyYWdtZW50SW5VUkw6IGZhbHNlLAoKCS8vIEZs
YWdzIGlmIHRoZSBwcmVzZW50YXRpb24gaXMgcnVubmluZyBpbiBhbiBlbWJl
ZGRlZCBtb2RlLAoJLy8gaS5lLiBjb250YWluZWQgd2l0aGluIGEgbGltaXRl
ZCBwb3J0aW9uIG9mIHRoZSBzY3JlZW4KCWVtYmVkZGVkOiBmYWxzZSwKCgkv
LyBGbGFncyBpZiB3ZSBzaG91bGQgc2hvdyBhIGhlbHAgb3ZlcmxheSB3aGVu
IHRoZSBxdWVzdGlvbm1hcmsKCS8vIGtleSBpcyBwcmVzc2VkCgloZWxwOiB0
cnVlLAoKCS8vIEZsYWdzIGlmIHNwZWFrZXIgbm90ZXMgc2hvdWxkIGJlIHZp
c2libGUgdG8gYWxsIHZpZXdlcnMKCXNob3dOb3RlczogZmFsc2UsCgoJLy8g
R2xvYmFsIG92ZXJyaWRlIGZvciBhdXRvcGxheWluZyBlbWJlZGRlZCBtZWRp
YSAodmlkZW8vYXVkaW8vaWZyYW1lKQoJLy8gLSBudWxsOiBNZWRpYSB3aWxs
IG9ubHkgYXV0b3BsYXkgaWYgZGF0YS1hdXRvcGxheSBpcyBwcmVzZW50Cgkv
LyAtIHRydWU6IEFsbCBtZWRpYSB3aWxsIGF1dG9wbGF5LCByZWdhcmRsZXNz
IG9mIGluZGl2aWR1YWwgc2V0dGluZwoJLy8gLSBmYWxzZTogTm8gbWVkaWEg
d2lsbCBhdXRvcGxheSwgcmVnYXJkbGVzcyBvZiBpbmRpdmlkdWFsIHNldHRp
bmcKCWF1dG9QbGF5TWVkaWE6IG51bGwsCgoJLy8gR2xvYmFsIG92ZXJyaWRl
IGZvciBwcmVsb2FkaW5nIGxhenktbG9hZGVkIGlmcmFtZXMKCS8vIC0gbnVs
bDogSWZyYW1lcyB3aXRoIGRhdGEtc3JjIEFORCBkYXRhLXByZWxvYWQgd2ls
bCBiZSBsb2FkZWQgd2hlbiB3aXRoaW4KCS8vICAgdGhlIHZpZXdEaXN0YW5j
ZSwgaWZyYW1lcyB3aXRoIG9ubHkgZGF0YS1zcmMgd2lsbCBiZSBsb2FkZWQg
d2hlbiB2aXNpYmxlCgkvLyAtIHRydWU6IEFsbCBpZnJhbWVzIHdpdGggZGF0
YS1zcmMgd2lsbCBiZSBsb2FkZWQgd2hlbiB3aXRoaW4gdGhlIHZpZXdEaXN0
YW5jZQoJLy8gLSBmYWxzZTogQWxsIGlmcmFtZXMgd2l0aCBkYXRhLXNyYyB3
aWxsIGJlIGxvYWRlZCBvbmx5IHdoZW4gdmlzaWJsZQoJcHJlbG9hZElmcmFt
ZXM6IG51bGwsCgoJLy8gTnVtYmVyIG9mIG1pbGxpc2Vjb25kcyBiZXR3ZWVu
IGF1dG9tYXRpY2FsbHkgcHJvY2VlZGluZyB0byB0aGUKCS8vIG5leHQgc2xp
ZGUsIGRpc2FibGVkIHdoZW4gc2V0IHRvIDAsIHRoaXMgdmFsdWUgY2FuIGJl
IG92ZXJ3cml0dGVuCgkvLyBieSB1c2luZyBhIGRhdGEtYXV0b3NsaWRlIGF0
dHJpYnV0ZSBvbiB5b3VyIHNsaWRlcwoJYXV0b1NsaWRlOiAwLAoKCS8vIFN0
b3AgYXV0by1zbGlkaW5nIGFmdGVyIHVzZXIgaW5wdXQKCWF1dG9TbGlkZVN0
b3BwYWJsZTogdHJ1ZSwKCgkvLyBVc2UgdGhpcyBtZXRob2QgZm9yIG5hdmln
YXRpb24gd2hlbiBhdXRvLXNsaWRpbmcKCWF1dG9TbGlkZU1ldGhvZDogUmV2
ZWFsLm5hdmlnYXRlTmV4dCwKCgkvLyBTcGVjaWZ5IHRoZSBhdmVyYWdlIHRp
bWUgaW4gc2Vjb25kcyB0aGF0IHlvdSB0aGluayB5b3Ugd2lsbCBzcGVuZAoJ
Ly8gcHJlc2VudGluZyBlYWNoIHNsaWRlLiBUaGlzIGlzIHVzZWQgdG8gc2hv
dyBhIHBhY2luZyB0aW1lciBpbiB0aGUKCS8vIHNwZWFrZXIgdmlldwoJZGVm
YXVsdFRpbWluZzogMTIwLAoKCS8vIEVuYWJsZSBzbGlkZSBuYXZpZ2F0aW9u
IHZpYSBtb3VzZSB3aGVlbAoJbW91c2VXaGVlbDogZmFsc2UsCgoJLy8gSGlk
ZSBjdXJzb3IgaWYgaW5hY3RpdmUKCWhpZGVJbmFjdGl2ZUN1cnNvcjogdHJ1
ZSwKCgkvLyBUaW1lIGJlZm9yZSB0aGUgY3Vyc29yIGlzIGhpZGRlbiAoaW4g
bXMpCgloaWRlQ3Vyc29yVGltZTogNTAwMCwKCgkvLyBIaWRlcyB0aGUgYWRk
cmVzcyBiYXIgb24gbW9iaWxlIGRldmljZXMKCWhpZGVBZGRyZXNzQmFyOiB0
cnVlLAoKCS8vIE9wZW5zIGxpbmtzIGluIGFuIGlmcmFtZSBwcmV2aWV3IG92
ZXJsYXkKCS8vIEFkZCBgZGF0YS1wcmV2aWV3LWxpbmtgIGFuZCBgZGF0YS1w
cmV2aWV3LWxpbms9ImZhbHNlImAgdG8gY3VzdG9taXNlIGVhY2ggbGluawoJ
Ly8gaW5kaXZpZHVhbGx5CglwcmV2aWV3TGlua3M6IGZhbHNlLAoKCS8vIFRy
YW5zaXRpb24gc3R5bGUKCXRyYW5zaXRpb246ICdzbGlkZScsIC8vIG5vbmUv
ZmFkZS9zbGlkZS9jb252ZXgvY29uY2F2ZS96b29tCgoJLy8gVHJhbnNpdGlv
biBzcGVlZAoJdHJhbnNpdGlvblNwZWVkOiAnZGVmYXVsdCcsIC8vIGRlZmF1
bHQvZmFzdC9zbG93CgoJLy8gVHJhbnNpdGlvbiBzdHlsZSBmb3IgZnVsbCBw
YWdlIHNsaWRlIGJhY2tncm91bmRzCgliYWNrZ3JvdW5kVHJhbnNpdGlvbjog
J2ZhZGUnLCAvLyBub25lL2ZhZGUvc2xpZGUvY29udmV4L2NvbmNhdmUvem9v
bQoKCS8vIE51bWJlciBvZiBzbGlkZXMgYXdheSBmcm9tIHRoZSBjdXJyZW50
IHRoYXQgYXJlIHZpc2libGUKCXZpZXdEaXN0YW5jZTogMywKCgkvLyBQYXJh
bGxheCBiYWNrZ3JvdW5kIGltYWdlCglwYXJhbGxheEJhY2tncm91bmRJbWFn
ZTogJycsIC8vIGUuZy4gIidodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGFr
aW0tc3RhdGljL3JldmVhbC1qcy9yZXZlYWwtcGFyYWxsYXgtMS5qcGcnIgoK
CS8vIFBhcmFsbGF4IGJhY2tncm91bmQgc2l6ZQoJcGFyYWxsYXhCYWNrZ3Jv
dW5kU2l6ZTogJycsIC8vIENTUyBzeW50YXgsIGUuZy4gIjIxMDBweCA5MDBw
eCIKCgkvLyBOdW1iZXIgb2YgcGl4ZWxzIHRvIG1vdmUgdGhlIHBhcmFsbGF4
IGJhY2tncm91bmQgcGVyIHNsaWRlCgkvLyAtIENhbGN1bGF0ZWQgYXV0b21h
dGljYWxseSB1bmxlc3Mgc3BlY2lmaWVkCgkvLyAtIFNldCB0byAwIHRvIGRp
c2FibGUgbW92ZW1lbnQgYWxvbmcgYW4gYXhpcwoJcGFyYWxsYXhCYWNrZ3Jv
dW5kSG9yaXpvbnRhbDogbnVsbCwKCXBhcmFsbGF4QmFja2dyb3VuZFZlcnRp
Y2FsOiBudWxsLAoKCS8vIFRoZSBkaXNwbGF5IG1vZGUgdGhhdCB3aWxsIGJl
IHVzZWQgdG8gc2hvdyBzbGlkZXMKCWRpc3BsYXk6ICdibG9jaycKCn0pOwpg
YGAKClRoZSBjb25maWd1cmF0aW9uIGNhbiBiZSB1cGRhdGVkIGFmdGVyIGlu
aXRpYWxpemF0aW9uIHVzaW5nIHRoZSBgY29uZmlndXJlYCBtZXRob2Q6Cgpg
YGBqYXZhc2NyaXB0Ci8vIFR1cm4gYXV0b1NsaWRlIG9mZgpSZXZlYWwuY29u
ZmlndXJlKHsgYXV0b1NsaWRlOiAwIH0pOwoKLy8gU3RhcnQgYXV0by1zbGlk
aW5nIGV2ZXJ5IDVzClJldmVhbC5jb25maWd1cmUoeyBhdXRvU2xpZGU6IDUw
MDAgfSk7CmBgYAoKIyMjIFByZXNlbnRhdGlvbiBTaXplCgpBbGwgcHJlc2Vu
dGF0aW9ucyBoYXZlIGEgbm9ybWFsIHNpemUsIHRoYXQgaXMsIHRoZSByZXNv
bHV0aW9uIGF0IHdoaWNoIHRoZXkgYXJlIGF1dGhvcmVkLiBUaGUgZnJhbWV3
b3JrIHdpbGwgYXV0b21hdGljYWxseSBzY2FsZSBwcmVzZW50YXRpb25zIHVu
aWZvcm1seSBiYXNlZCBvbiB0aGlzIHNpemUgdG8gZW5zdXJlIHRoYXQgZXZl
cnl0aGluZyBmaXRzIG9uIGFueSBnaXZlbiBkaXNwbGF5IG9yIHZpZXdwb3J0
LgoKU2VlIGJlbG93IGZvciBhIGxpc3Qgb2YgY29uZmlndXJhdGlvbiBvcHRp
b25zIHJlbGF0ZWQgdG8gc2l6aW5nLCBpbmNsdWRpbmcgZGVmYXVsdCB2YWx1
ZXM6CgpgYGBqYXZhc2NyaXB0ClJldmVhbC5pbml0aWFsaXplKHsKCgkvLyAu
Li4KCgkvLyBUaGUgIm5vcm1hbCIgc2l6ZSBvZiB0aGUgcHJlc2VudGF0aW9u
LCBhc3BlY3QgcmF0aW8gd2lsbCBiZSBwcmVzZXJ2ZWQKCS8vIHdoZW4gdGhl
IHByZXNlbnRhdGlvbiBpcyBzY2FsZWQgdG8gZml0IGRpZmZlcmVudCByZXNv
bHV0aW9ucy4gQ2FuIGJlCgkvLyBzcGVjaWZpZWQgdXNpbmcgcGVyY2VudGFn
ZSB1bml0cy4KCXdpZHRoOiA5NjAsCgloZWlnaHQ6IDcwMCwKCgkvLyBGYWN0
b3Igb2YgdGhlIGRpc3BsYXkgc2l6ZSB0aGF0IHNob3VsZCByZW1haW4gZW1w
dHkgYXJvdW5kIHRoZSBjb250ZW50CgltYXJnaW46IDAuMSwKCgkvLyBCb3Vu
ZHMgZm9yIHNtYWxsZXN0L2xhcmdlc3QgcG9zc2libGUgc2NhbGUgdG8gYXBw
bHkgdG8gY29udGVudAoJbWluU2NhbGU6IDAuMiwKCW1heFNjYWxlOiAxLjUK
Cn0pOwpgYGAKCklmIHlvdSB3aXNoIHRvIGRpc2FibGUgdGhpcyBiZWhhdmlv
ciBhbmQgZG8geW91ciBvd24gc2NhbGluZyAoZS5nLiB1c2luZyBtZWRpYSBx
dWVyaWVzKSwgdHJ5IHRoZXNlIHNldHRpbmdzOgoKYGBgamF2YXNjcmlwdApS
ZXZlYWwuaW5pdGlhbGl6ZSh7CgoJLy8gLi4uCgoJd2lkdGg6ICIxMDAlIiwK
CWhlaWdodDogIjEwMCUiLAoJbWFyZ2luOiAwLAoJbWluU2NhbGU6IDEsCglt
YXhTY2FsZTogMQp9KTsKYGBgCgojIyMgRGVwZW5kZW5jaWVzCgpSZXZlYWwu
anMgZG9lc24ndCBfcmVseV8gb24gYW55IHRoaXJkIHBhcnR5IHNjcmlwdHMg
dG8gd29yayBidXQgYSBmZXcgb3B0aW9uYWwgbGlicmFyaWVzIGFyZSBpbmNs
dWRlZCBieSBkZWZhdWx0LiBUaGVzZSBsaWJyYXJpZXMgYXJlIGxvYWRlZCBh
cyBkZXBlbmRlbmNpZXMgaW4gdGhlIG9yZGVyIHRoZXkgYXBwZWFyLCBmb3Ig
ZXhhbXBsZToKCmBgYGphdmFzY3JpcHQKUmV2ZWFsLmluaXRpYWxpemUoewoJ
ZGVwZW5kZW5jaWVzOiBbCgkJLy8gSW50ZXJwcmV0IE1hcmtkb3duIGluIDxz
ZWN0aW9uPiBlbGVtZW50cwoJCXsgc3JjOiAncGx1Z2luL21hcmtkb3duL21h
cmtlZC5qcycsIGNvbmRpdGlvbjogZnVuY3Rpb24oKSB7IHJldHVybiAhIWRv
Y3VtZW50LnF1ZXJ5U2VsZWN0b3IoICdbZGF0YS1tYXJrZG93bl0nICk7IH0g
fSwKCQl7IHNyYzogJ3BsdWdpbi9tYXJrZG93bi9tYXJrZG93bi5qcycsIGNv
bmRpdGlvbjogZnVuY3Rpb24oKSB7IHJldHVybiAhIWRvY3VtZW50LnF1ZXJ5
U2VsZWN0b3IoICdbZGF0YS1tYXJrZG93bl0nICk7IH0gfSwKCgkJLy8gU3lu
dGF4IGhpZ2hsaWdodCBmb3IgPGNvZGU+IGVsZW1lbnRzCgkJeyBzcmM6ICdw
bHVnaW4vaGlnaGxpZ2h0L2hpZ2hsaWdodC5qcycsIGFzeW5jOiB0cnVlIH0s
CgoJCS8vIFpvb20gaW4gYW5kIG91dCB3aXRoIEFsdCtjbGljawoJCXsgc3Jj
OiAncGx1Z2luL3pvb20tanMvem9vbS5qcycsIGFzeW5jOiB0cnVlIH0sCgoJ
CS8vIFNwZWFrZXIgbm90ZXMKCQl7IHNyYzogJ3BsdWdpbi9ub3Rlcy9ub3Rl
cy5qcycsIGFzeW5jOiB0cnVlIH0sCgoJCS8vIE1hdGhKYXgKCQl7IHNyYzog
J3BsdWdpbi9tYXRoL21hdGguanMnLCBhc3luYzogdHJ1ZSB9CgldCn0pOwpg
YGAKCllvdSBjYW4gYWRkIHlvdXIgb3duIGV4dGVuc2lvbnMgdXNpbmcgdGhl
IHNhbWUgc3ludGF4LiBUaGUgZm9sbG93aW5nIHByb3BlcnRpZXMgYXJlIGF2
YWlsYWJsZSBmb3IgZWFjaCBkZXBlbmRlbmN5IG9iamVjdDoKLSAqKnNyYyoq
OiBQYXRoIHRvIHRoZSBzY3JpcHQgdG8gbG9hZAotICoqYXN5bmMqKjogW29w
dGlvbmFsXSBGbGFncyBpZiB0aGUgc2NyaXB0IHNob3VsZCBsb2FkIGFmdGVy
IHJldmVhbC5qcyBoYXMgc3RhcnRlZCwgZGVmYXVsdHMgdG8gZmFsc2UKLSAq
KmNhbGxiYWNrKio6IFtvcHRpb25hbF0gRnVuY3Rpb24gdG8gZXhlY3V0ZSB3
aGVuIHRoZSBzY3JpcHQgaGFzIGxvYWRlZAotICoqY29uZGl0aW9uKio6IFtv
cHRpb25hbF0gRnVuY3Rpb24gd2hpY2ggbXVzdCByZXR1cm4gdHJ1ZSBmb3Ig
dGhlIHNjcmlwdCB0byBiZSBsb2FkZWQKCiMjIyBSZWFkeSBFdmVudAoKQSBg
cmVhZHlgIGV2ZW50IGlzIGZpcmVkIHdoZW4gcmV2ZWFsLmpzIGhhcyBsb2Fk
ZWQgYWxsIG5vbi1hc3luYyBkZXBlbmRlbmNpZXMgYW5kIGlzIHJlYWR5IHRv
IHN0YXJ0IG5hdmlnYXRpbmcuIFRvIGNoZWNrIGlmIHJldmVhbC5qcyBpcyBh
bHJlYWR5ICdyZWFkeScgeW91IGNhbiBjYWxsIGBSZXZlYWwuaXNSZWFkeSgp
YC4KCmBgYGphdmFzY3JpcHQKUmV2ZWFsLmFkZEV2ZW50TGlzdGVuZXIoICdy
ZWFkeScsIGZ1bmN0aW9uKCBldmVudCApIHsKCS8vIGV2ZW50LmN1cnJlbnRT
bGlkZSwgZXZlbnQuaW5kZXhoLCBldmVudC5pbmRleHYKfSApOwpgYGAKCk5v
dGUgdGhhdCB3ZSBhbHNvIGFkZCBhIGAucmVhZHlgIGNsYXNzIHRvIHRoZSBg
LnJldmVhbGAgZWxlbWVudCBzbyB0aGF0IHlvdSBjYW4gaG9vayBpbnRvIHRo
aXMgd2l0aCBDU1MuCgojIyMgQXV0by1zbGlkaW5nCgpQcmVzZW50YXRpb25z
IGNhbiBiZSBjb25maWd1cmVkIHRvIHByb2dyZXNzIHRocm91Z2ggc2xpZGVz
IGF1dG9tYXRpY2FsbHksIHdpdGhvdXQgYW55IHVzZXIgaW5wdXQuIFRvIGVu
YWJsZSB0aGlzIHlvdSB3aWxsIG5lZWQgdG8gdGVsbCB0aGUgZnJhbWV3b3Jr
IGhvdyBtYW55IG1pbGxpc2Vjb25kcyBpdCBzaG91bGQgd2FpdCBiZXR3ZWVu
IHNsaWRlczoKCmBgYGphdmFzY3JpcHQKLy8gU2xpZGUgZXZlcnkgZml2ZSBz
ZWNvbmRzClJldmVhbC5jb25maWd1cmUoewogIGF1dG9TbGlkZTogNTAwMAp9
KTsKYGBgCgpXaGVuIHRoaXMgaXMgdHVybmVkIG9uIGEgY29udHJvbCBlbGVt
ZW50IHdpbGwgYXBwZWFyIHRoYXQgZW5hYmxlcyB1c2VycyB0byBwYXVzZSBh
bmQgcmVzdW1lIGF1dG8tc2xpZGluZy4gQWx0ZXJuYXRpdmVseSwgc2xpZGlu
ZyBjYW4gYmUgcGF1c2VkIG9yIHJlc3VtZWQgYnkgcHJlc3NpbmcgwrtBwqsg
b24gdGhlIGtleWJvYXJkLiBTbGlkaW5nIGlzIHBhdXNlZCBhdXRvbWF0aWNh
bGx5IGFzIHNvb24gYXMgdGhlIHVzZXIgc3RhcnRzIG5hdmlnYXRpbmcuIFlv
dSBjYW4gZGlzYWJsZSB0aGVzZSBjb250cm9scyBieSBzcGVjaWZ5aW5nIGBh
dXRvU2xpZGVTdG9wcGFibGU6IGZhbHNlYCBpbiB5b3VyIHJldmVhbC5qcyBj
b25maWcuCgpZb3UgY2FuIGFsc28gb3ZlcnJpZGUgdGhlIHNsaWRlIGR1cmF0
aW9uIGZvciBpbmRpdmlkdWFsIHNsaWRlcyBhbmQgZnJhZ21lbnRzIGJ5IHVz
aW5nIHRoZSBgZGF0YS1hdXRvc2xpZGVgIGF0dHJpYnV0ZToKCmBgYGh0bWwK
PHNlY3Rpb24gZGF0YS1hdXRvc2xpZGU9IjIwMDAiPgoJPHA+QWZ0ZXIgMiBz
ZWNvbmRzIHRoZSBmaXJzdCBmcmFnbWVudCB3aWxsIGJlIHNob3duLjwvcD4K
CTxwIGNsYXNzPSJmcmFnbWVudCIgZGF0YS1hdXRvc2xpZGU9IjEwMDAwIj5B
ZnRlciAxMCBzZWNvbmRzIHRoZSBuZXh0IGZyYWdtZW50IHdpbGwgYmUgc2hv
d24uPC9wPgoJPHAgY2xhc3M9ImZyYWdtZW50Ij5Ob3csIHRoZSBmcmFnbWVu
dCBpcyBkaXNwbGF5ZWQgZm9yIDIgc2Vjb25kcyBiZWZvcmUgdGhlIG5leHQg
c2xpZGUgaXMgc2hvd24uPC9wPgo8L3NlY3Rpb24+CmBgYAoKVG8gb3ZlcnJp
ZGUgdGhlIG1ldGhvZCB1c2VkIGZvciBuYXZpZ2F0aW9uIHdoZW4gYXV0by1z
bGlkaW5nLCB5b3UgY2FuIHNwZWNpZnkgdGhlIGBhdXRvU2xpZGVNZXRob2Rg
IHNldHRpbmcuIFRvIG9ubHkgbmF2aWdhdGUgYWxvbmcgdGhlIHRvcCBsYXll
ciBhbmQgaWdub3JlIHZlcnRpY2FsIHNsaWRlcywgc2V0IHRoaXMgdG8gYFJl
dmVhbC5uYXZpZ2F0ZVJpZ2h0YC4KCldoZW5ldmVyIHRoZSBhdXRvLXNsaWRl
IG1vZGUgaXMgcmVzdW1lZCBvciBwYXVzZWQgdGhlIGBhdXRvc2xpZGVyZXN1
bWVkYCBhbmQgYGF1dG9zbGlkZXBhdXNlZGAgZXZlbnRzIGFyZSBmaXJlZC4K
CiMjIyBLZXlib2FyZCBCaW5kaW5ncwoKSWYgeW91J3JlIHVuaGFwcHkgd2l0
aCBhbnkgb2YgdGhlIGRlZmF1bHQga2V5Ym9hcmQgYmluZGluZ3MgeW91IGNh
biBvdmVycmlkZSB0aGVtIHVzaW5nIHRoZSBga2V5Ym9hcmRgIGNvbmZpZyBv
cHRpb246CgpgYGBqYXZhc2NyaXB0ClJldmVhbC5jb25maWd1cmUoewogIGtl
eWJvYXJkOiB7CiAgICAxMzogJ25leHQnLCAvLyBnbyB0byB0aGUgbmV4dCBz
bGlkZSB3aGVuIHRoZSBFTlRFUiBrZXkgaXMgcHJlc3NlZAogICAgMjc6IGZ1
bmN0aW9uKCkge30sIC8vIGRvIHNvbWV0aGluZyBjdXN0b20gd2hlbiBFU0Mg
aXMgcHJlc3NlZAogICAgMzI6IG51bGwgLy8gZG9uJ3QgZG8gYW55dGhpbmcg
d2hlbiBTUEFDRSBpcyBwcmVzc2VkIChpLmUuIGRpc2FibGUgYSByZXZlYWwu
anMgZGVmYXVsdCBiaW5kaW5nKQogIH0KfSk7CmBgYAoKIyMjIFZlcnRpY2Fs
IFNsaWRlIE5hdmlnYXRpb24KClNsaWRlcyBjYW4gYmUgbmVzdGVkIHdpdGhp
biBvdGhlciBzbGlkZXMgdG8gY3JlYXRlIHZlcnRpY2FsIHN0YWNrcyAoc2Vl
IFtNYXJrdXBdKCNtYXJrdXApKS4gV2hlbiBwcmVzZW50aW5nLCB5b3UgdXNl
IHRoZSBsZWZ0L3JpZ2h0IGFycm93cyB0byBzdGVwIHRocm91Z2ggdGhlIG1h
aW4gKGhvcml6b250YWwpIHNsaWRlcy4gV2hlbiB5b3UgYXJyaXZlIGF0IGEg
dmVydGljYWwgc3RhY2sgeW91IGNhbiBvcHRpb25hbGx5IHByZXNzIHRoZSB1
cC9kb3duIGFycm93cyB0byB2aWV3IHRoZSB2ZXJ0aWNhbCBzbGlkZXMgb3Ig
c2tpcCBwYXN0IHRoZW0gYnkgcHJlc3NpbmcgdGhlIHJpZ2h0IGFycm93LiBI
ZXJlJ3MgYW4gZXhhbXBsZSBzaG93aW5nIGEgYmlyZCdzLWV5ZSB2aWV3IG9m
IHdoYXQgdGhpcyBsb29rcyBsaWtlIGluIGFjdGlvbjoKCjxpbWcgc3JjPSJo
dHRwczovL3N0YXRpYy5zbGlkLmVzL3N1cHBvcnQvcmV2ZWFsLmpzLXZlcnRp
Y2FsLXNsaWRlcy5naWYiIHdpZHRoPSI0NTAiPgoKIyMjIyBOYXZpZ2F0aW9u
IE1vZGUKWW91IGNhbiBmaW5ldHVuZSB0aGUgcmV2ZWFsLmpzIG5hdmlnYXRp
b24gYmVoYXZpb3IgYnkgdXNpbmcgdGhlIGBuYXZpZ2F0aW9uTW9kZWAgY29u
ZmlnIG9wdGlvbi4gTm90ZSB0aGF0IHRoZXNlIG9wdGlvbnMgYXJlIG9ubHkg
dXNlZnVsIGZvciBwcmVzbmV0YXRpb25zIHRoYXQgdXNlIGEgbWl4IG9mIGhv
cml6b250YWwgYW5kIHZlcnRpY2FsIHNsaWRlcy4gVGhlIGZvbGxvd2luZyBu
YXZpZ2F0aW9uIG1vZGVzIGFyZSBhdmFpbGFibGU6Cgp8IFZhbHVlICAgICAg
ICAgICAgICAgICAgICAgICAgIHwgRGVzY3JpcHRpb24gfAp8IDotLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0gIHwgOi0tLS0tLS0tLS0gfAp8IGRlZmF1
bHQgICAgICAgICAgICAgICAgICAgICAgIHwgTGVmdC9yaWdodCBhcnJvdyBr
ZXlzIHN0ZXAgYmV0d2VlbiBob3Jpem9udGFsIHNsaWRlcy4gVXAvZG93biBh
cnJvdyBrZXlzIHN0ZXAgYmV0d2VlbiB2ZXJ0aWNhbCBzbGlkZXMuIFNwYWNl
IGtleSBzdGVwcyB0aHJvdWdoIGFsbCBzbGlkZXMgKGJvdGggaG9yaXpvbnRh
bCBhbmQgdmVydGljYWwpLiB8CnwgbGluZWFyICAgICAgICAgICAgICAgICAg
ICAgICAgfCBSZW1vdmVzIHRoZSB1cC9kb3duIGFycm93cy4gTGVmdC9yaWdo
dCBhcnJvd3Mgc3RlcCB0aHJvdWdoIGFsbCBzbGlkZXMgKGJvdGggaG9yaXpv
bnRhbCBhbmQgdmVydGljYWwpLiB8CnwgZ3JpZCAgICAgICAgICAgICAgICAg
ICAgICAgICAgfCBXaGVuIHRoaXMgaXMgZW5hYmxlZCwgc3RlcHBpbmcgbGVm
dC9yaWdodCBmcm9tIGEgdmVydGljYWwgc3RhY2sgdG8gYW4gYWRqYWNlbnQg
dmVydGljYWwgc3RhY2sgd2lsbCBsYW5kIHlvdSBhdCB0aGUgc2FtZSB2ZXJ0
aWNhbCBpbmRleC48YnI+PGJyPkNvbnNpZGVyIGEgZGVjayB3aXRoIHNpeCBz
bGlkZXMgb3JkZXJlZCBpbiB0d28gdmVydGljYWwgc3RhY2tzOjxicj5gMS4x
YCZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwO2AyLjFgPGJyPmAxLjJgJm5ic3A7
Jm5ic3A7Jm5ic3A7Jm5ic3A7YDIuMmA8YnI+YDEuM2AmbmJzcDsmbmJzcDsm
bmJzcDsmbmJzcDtgMi4zYDxicj48YnI+SWYgeW91J3JlIG9uIHNsaWRlIDEu
MyBhbmQgbmF2aWdhdGUgcmlnaHQsIHlvdSB3aWxsIG5vcm1hbGx5IG1vdmUg
ZnJvbSAxLjMgLT4gMi4xLiBXaXRoIG5hdmlnYXRpb25Nb2RlIHNldCB0byAi
Z3JpZCIgdGhlIHNhbWUgbmF2aWdhdGlvbiB0YWtlcyB5b3UgZnJvbSAxLjMg
LT4gMi4zLiB8CgojIyMgVG91Y2ggTmF2aWdhdGlvbgoKWW91IGNhbiBzd2lw
ZSB0byBuYXZpZ2F0ZSB0aHJvdWdoIGEgcHJlc2VudGF0aW9uIG9uIGFueSB0
b3VjaC1lbmFibGVkIGRldmljZS4gSG9yaXpvbnRhbCBzd2lwZXMgY2hhbmdl
IGJldHdlZW4gaG9yaXpvbnRhbCBzbGlkZXMsIHZlcnRpY2FsIHN3aXBlcyBj
aGFuZ2UgYmV0d2VlbiB2ZXJ0aWNhbCBzbGlkZXMuIElmIHlvdSB3aXNoIHRv
IGRpc2FibGUgdGhpcyB5b3UgY2FuIHNldCB0aGUgYHRvdWNoYCBjb25maWcg
b3B0aW9uIHRvIGZhbHNlIHdoZW4gaW5pdGlhbGl6aW5nIHJldmVhbC5qcy4K
CklmIHRoZXJlJ3Mgc29tZSBwYXJ0IG9mIHlvdXIgY29udGVudCB0aGF0IG5l
ZWRzIHRvIHJlbWFpbiBhY2Nlc3NpYmxlIHRvIHRvdWNoIGV2ZW50cyB5b3Un
bGwgbmVlZCB0byBoaWdobGlnaHQgdGhpcyBieSBhZGRpbmcgYSBgZGF0YS1w
cmV2ZW50LXN3aXBlYCBhdHRyaWJ1dGUgdG8gdGhlIGVsZW1lbnQuIE9uZSBj
b21tb24gZXhhbXBsZSB3aGVyZSB0aGlzIGlzIHVzZWZ1bCBpcyBlbGVtZW50
cyB0aGF0IG5lZWQgdG8gYmUgc2Nyb2xsZWQuCgojIyMgTGF6eSBMb2FkaW5n
CgpXaGVuIHdvcmtpbmcgb24gcHJlc2VudGF0aW9uIHdpdGggYSBsb3Qgb2Yg
bWVkaWEgb3IgaWZyYW1lIGNvbnRlbnQgaXQncyBpbXBvcnRhbnQgdG8gbG9h
ZCBsYXppbHkuIExhenkgbG9hZGluZyBtZWFucyB0aGF0IHJldmVhbC5qcyB3
aWxsIG9ubHkgbG9hZCBjb250ZW50IGZvciB0aGUgZmV3IHNsaWRlcyBuZWFy
ZXN0IHRvIHRoZSBjdXJyZW50IHNsaWRlLiBUaGUgbnVtYmVyIG9mIHNsaWRl
cyB0aGF0IGFyZSBwcmVsb2FkZWQgaXMgZGV0ZXJtaW5lZCBieSB0aGUgYHZp
ZXdEaXN0YW5jZWAgY29uZmlndXJhdGlvbiBvcHRpb24uCgpUbyBlbmFibGUg
bGF6eSBsb2FkaW5nIGFsbCB5b3UgbmVlZCB0byBkbyBpcyBjaGFuZ2UgeW91
ciBgc3JjYCBhdHRyaWJ1dGVzIHRvIGBkYXRhLXNyY2AgYXMgc2hvd24gYmVs
b3cuIFRoaXMgaXMgc3VwcG9ydGVkIGZvciBpbWFnZSwgdmlkZW8sIGF1ZGlv
IGFuZCBpZnJhbWUgZWxlbWVudHMuCgpgYGBodG1sCjxzZWN0aW9uPgogIDxp
bWcgZGF0YS1zcmM9ImltYWdlLnBuZyI+CiAgPGlmcmFtZSBkYXRhLXNyYz0i
aHR0cDovL2hha2ltLnNlIj48L2lmcmFtZT4KICA8dmlkZW8+CiAgICA8c291
cmNlIGRhdGEtc3JjPSJ2aWRlby53ZWJtIiB0eXBlPSJ2aWRlby93ZWJtIiAv
PgogICAgPHNvdXJjZSBkYXRhLXNyYz0idmlkZW8ubXA0IiB0eXBlPSJ2aWRl
by9tcDQiIC8+CiAgPC92aWRlbz4KPC9zZWN0aW9uPgpgYGAKCiMjIyMgTGF6
eSBMb2FkaW5nIElmcmFtZXMKCk5vdGUgdGhhdCBsYXp5IGxvYWRlZCBpZnJh
bWVzIGlnbm9yZSB0aGUgYHZpZXdEaXN0YW5jZWAgY29uZmlndXJhdGlvbiBh
bmQgd2lsbCBvbmx5IGxvYWQgd2hlbiB0aGVpciBjb250YWluaW5nIHNsaWRl
IGJlY29tZXMgdmlzaWJsZS4gSWZyYW1lcyBhcmUgYWxzbyB1bmxvYWRlZCBh
cyBzb29uIGFzIHRoZSBzbGlkZSBpcyBoaWRkZW4uCgpXaGVuIHdlIGxhenkg
bG9hZCBhIHZpZGVvIG9yIGF1ZGlvIGVsZW1lbnQsIHJldmVhbC5qcyB3b24n
dCBzdGFydCBwbGF5aW5nIHRoYXQgY29udGVudCB1bnRpbCB0aGUgc2xpZGUg
YmVjb21lcyB2aXNpYmxlLiBIb3dldmVyIHRoZXJlIGlzIG5vIHdheSB0byBj
b250cm9sIHRoaXMgZm9yIGFuIGlmcmFtZSBzaW5jZSB0aGF0IGNvdWxkIGNv
bnRhaW4gYW55IGtpbmQgb2YgY29udGVudC4gVGhhdCBtZWFucyBpZiB3ZSBs
b2FkZWQgYW4gaWZyYW1lIGJlZm9yZSB0aGUgc2xpZGUgaXMgdmlzaWJsZSBv
biBzY3JlZW4gaXQgY291bGQgYmVnaW4gcGxheWluZyBtZWRpYSBhbmQgc291
bmQgaW4gdGhlIGJhY2tncm91bmQuCgpZb3UgY2FuIG92ZXJyaWRlIHRoaXMg
YmVoYXZpb3Igd2l0aCB0aGUgYGRhdGEtcHJlbG9hZGAgYXR0cmlidXRlLiBU
aGUgaWZyYW1lIGJlbG93IHdpbGwgYmUgbG9hZGVkCmFjY29yZGluZyB0byB0
aGUgYHZpZXdEaXN0YW5jZWAuCgpgYGBodG1sCjxzZWN0aW9uPgoJPGlmcmFt
ZSBkYXRhLXNyYz0iaHR0cDovL2hha2ltLnNlIiBkYXRhLXByZWxvYWQ+PC9p
ZnJhbWU+Cjwvc2VjdGlvbj4KYGBgCgpZb3UgY2FuIGFsc28gY2hhbmdlIHRo
ZSBkZWZhdWx0IGdsb2JhbGx5IHdpdGggdGhlIGBwcmVsb2FkSWZyYW1lc2Ag
Y29uZmlndXJhdGlvbiBvcHRpb24uIElmIHNldCB0bwpgdHJ1ZWAgQUxMIGlm
cmFtZXMgd2l0aCBhIGBkYXRhLXNyY2AgYXR0cmlidXRlIHdpbGwgYmUgcHJl
bG9hZGVkIHdoZW4gd2l0aGluIHRoZSBgdmlld0Rpc3RhbmNlYApyZWdhcmRs
ZXNzIG9mIGluZGl2aWR1YWwgYGRhdGEtcHJlbG9hZGAgYXR0cmlidXRlcy4g
SWYgc2V0IHRvIGBmYWxzZWAsIGFsbCBpZnJhbWVzIHdpbGwgb25seSBiZQps
b2FkZWQgd2hlbiB0aGV5IGJlY29tZSB2aXNpYmxlLgoKIyMjIEFQSQoKVGhl
IGBSZXZlYWxgIG9iamVjdCBleHBvc2VzIGEgSmF2YVNjcmlwdCBBUEkgZm9y
IGNvbnRyb2xsaW5nIG5hdmlnYXRpb24gYW5kIHJlYWRpbmcgc3RhdGU6Cgpg
YGBqYXZhc2NyaXB0Ci8vIE5hdmlnYXRpb24KUmV2ZWFsLnNsaWRlKCBpbmRl
eGgsIGluZGV4diwgaW5kZXhmICk7ClJldmVhbC5sZWZ0KCk7ClJldmVhbC5y
aWdodCgpOwpSZXZlYWwudXAoKTsKUmV2ZWFsLmRvd24oKTsKUmV2ZWFsLnBy
ZXYoKTsKUmV2ZWFsLm5leHQoKTsKUmV2ZWFsLnByZXZGcmFnbWVudCgpOwpS
ZXZlYWwubmV4dEZyYWdtZW50KCk7CgovLyBSYW5kb21pemUgdGhlIG9yZGVy
IG9mIHNsaWRlcwpSZXZlYWwuc2h1ZmZsZSgpOwoKLy8gVG9nZ2xlIHByZXNl
bnRhdGlvbiBzdGF0ZXMsIG9wdGlvbmFsbHkgcGFzcyB0cnVlL2ZhbHNlIHRv
IGZvcmNlIG9uL29mZgpSZXZlYWwudG9nZ2xlT3ZlcnZpZXcoKTsKUmV2ZWFs
LnRvZ2dsZVBhdXNlKCk7ClJldmVhbC50b2dnbGVBdXRvU2xpZGUoKTsKCi8v
IFNob3dzIGEgaGVscCBvdmVybGF5IHdpdGgga2V5Ym9hcmQgc2hvcnRjdXRz
LCBvcHRpb25hbGx5IHBhc3MgdHJ1ZS9mYWxzZQovLyB0byBmb3JjZSBvbi9v
ZmYKUmV2ZWFsLnRvZ2dsZUhlbHAoKTsKCi8vIENoYW5nZSBhIGNvbmZpZyB2
YWx1ZSBhdCBydW50aW1lClJldmVhbC5jb25maWd1cmUoeyBjb250cm9sczog
dHJ1ZSB9KTsKCi8vIFJldHVybnMgdGhlIHByZXNlbnQgY29uZmlndXJhdGlv
biBvcHRpb25zClJldmVhbC5nZXRDb25maWcoKTsKCi8vIEZldGNoIHRoZSBj
dXJyZW50IHNjYWxlIG9mIHRoZSBwcmVzZW50YXRpb24KUmV2ZWFsLmdldFNj
YWxlKCk7CgovLyBSZXRyaWV2ZXMgdGhlIHByZXZpb3VzIGFuZCBjdXJyZW50
IHNsaWRlIGVsZW1lbnRzClJldmVhbC5nZXRQcmV2aW91c1NsaWRlKCk7ClJl
dmVhbC5nZXRDdXJyZW50U2xpZGUoKTsKClJldmVhbC5nZXRJbmRpY2VzKCk7
ICAgICAgICAvLyB7IGg6IDAsIHY6IDAsIGY6IDAgfQpSZXZlYWwuZ2V0U2xp
ZGVQYXN0Q291bnQoKTsKUmV2ZWFsLmdldFByb2dyZXNzKCk7ICAgICAgIC8v
ICgwID09IGZpcnN0IHNsaWRlLCAxID09IGxhc3Qgc2xpZGUpClJldmVhbC5n
ZXRTbGlkZXMoKTsgICAgICAgICAvLyBBcnJheSBvZiBhbGwgc2xpZGVzClJl
dmVhbC5nZXRUb3RhbFNsaWRlcygpOyAgICAvLyBUb3RhbCBudW1iZXIgb2Yg
c2xpZGVzCgovLyBSZXR1cm5zIHRoZSBzcGVha2VyIG5vdGVzIGZvciB0aGUg
Y3VycmVudCBzbGlkZQpSZXZlYWwuZ2V0U2xpZGVOb3RlcygpOwoKLy8gU3Rh
dGUgY2hlY2tzClJldmVhbC5pc0ZpcnN0U2xpZGUoKTsKUmV2ZWFsLmlzTGFz
dFNsaWRlKCk7ClJldmVhbC5pc092ZXJ2aWV3KCk7ClJldmVhbC5pc1BhdXNl
ZCgpOwpSZXZlYWwuaXNBdXRvU2xpZGluZygpOwoKLy8gUmV0dXJucyB0aGUg
dG9wLWxldmVsIERPTSBlbGVtZW50CmdldFJldmVhbEVsZW1lbnQoKTsgLy8g
PGRpdiBjbGFzcz0icmV2ZWFsIj4uLi48L2Rpdj4KYGBgCgojIyMgQ3VzdG9t
IEtleSBCaW5kaW5ncwoKQ3VzdG9tIGtleSBiaW5kaW5ncyBjYW4gYmUgYWRk
ZWQgYW5kIHJlbW92ZWQgdXNpbmcgdGhlIGZvbGxvd2luZyBKYXZhc2NyaXB0
IEFQSS4gQ3VzdG9tIGtleSBiaW5kaW5ncyB3aWxsIG92ZXJyaWRlIHRoZSBk
ZWZhdWx0IGtleWJvYXJkIGJpbmRpbmdzLCBidXQgd2lsbCBpbiB0dXJuIGJl
IG92ZXJyaWRkZW4gYnkgdGhlIHVzZXIgZGVmaW5lZCBiaW5kaW5ncyBpbiB0
aGUgYGBrZXlib2FyZGBgIGNvbmZpZyBvcHRpb24uCgpgYGBqYXZhc2NyaXB0
ClJldmVhbC5hZGRLZXlCaW5kaW5nKCBiaW5kaW5nLCBjYWxsYmFjayApOwpS
ZXZlYWwucmVtb3ZlS2V5QmluZGluZygga2V5Q29kZSApOwpgYGAKCkZvciBl
eGFtcGxlCgpgYGBqYXZhc2NyaXB0Ci8vIFRoZSBiaW5kaW5nIHBhcmFtZXRl
ciBwcm92aWRlcyB0aGUgZm9sbG93aW5nIHByb3BlcnRpZXMKLy8gICAgICBr
ZXlDb2RlOiB0aGUga2V5Y29kZSBmb3IgYmluZGluZyB0byB0aGUgY2FsbGJh
Y2sKLy8gICAgICAgICAga2V5OiB0aGUga2V5IGxhYmVsIHRvIHNob3cgaW4g
dGhlIGhlbHAgb3ZlcmxheQovLyAgZGVzY3JpcHRpb246IHRoZSBkZXNjcmlw
dGlvbiBvZiB0aGUgYWN0aW9uIHRvIHNob3cgaW4gdGhlIGhlbHAgb3Zlcmxh
eQpSZXZlYWwuYWRkS2V5QmluZGluZyggeyBrZXlDb2RlOiA4NCwga2V5OiAn
VCcsIGRlc2NyaXB0aW9uOiAnU3RhcnQgdGltZXInIH0sIGZ1bmN0aW9uKCkg
ewoJLy8gc3RhcnQgdGltZXIKfSApCgovLyBUaGUgYmluZGluZyBwYXJhbWV0
ZXIgY2FuIGFsc28gYmUgYSBkaXJlY3Qga2V5Y29kZSB3aXRob3V0IHByb3Zp
ZGluZyB0aGUgaGVscCBkZXNjcmlwdGlvbgpSZXZlYWwuYWRkS2V5QmluZGlu
ZyggODIsIGZ1bmN0aW9uKCkgewoJLy8gcmVzZXQgdGltZXIKfSApCmBgYAoK
VGhpcyBhbGxvd3MgcGx1Z2lucyB0byBhZGQga2V5IGJpbmRpbmdzIGRpcmVj
dGx5IHRvIFJldmVhbCBzbyB0aGV5IGNhbgoKKiBtYWtlIHVzZSBvZiBSZXZl
YWwncyBwcmUtcHJvY2Vzc2luZyBsb2dpYyBmb3Iga2V5IGhhbmRsaW5nIChm
b3IgZXhhbXBsZSwgaWdub3Jpbmcga2V5IHByZXNzZXMgd2hlbiBwYXVzZWQp
OyBhbmQKKiBiZSBpbmNsdWRlZCBpbiB0aGUgaGVscCBvdmVybGF5IChvcHRp
b25hbCkKCiMjIyBTbGlkZSBDaGFuZ2VkIEV2ZW50CgpBIGBzbGlkZWNoYW5n
ZWRgIGV2ZW50IGlzIGZpcmVkIGVhY2ggdGltZSB0aGUgc2xpZGUgaXMgY2hh
bmdlZCAocmVnYXJkbGVzcyBvZiBzdGF0ZSkuIFRoZSBldmVudCBvYmplY3Qg
aG9sZHMgdGhlIGluZGV4IHZhbHVlcyBvZiB0aGUgY3VycmVudCBzbGlkZSBh
cyB3ZWxsIGFzIGEgcmVmZXJlbmNlIHRvIHRoZSBwcmV2aW91cyBhbmQgY3Vy
cmVudCBzbGlkZSBIVE1MIG5vZGVzLgoKU29tZSBsaWJyYXJpZXMsIGxpa2Ug
TWF0aEpheCAoc2VlIFsjMjI2XShodHRwczovL2dpdGh1Yi5jb20vaGFraW1l
bC9yZXZlYWwuanMvaXNzdWVzLzIyNiNpc3N1ZWNvbW1lbnQtMTAyNjE2MDkp
KSwgZ2V0IGNvbmZ1c2VkIGJ5IHRoZSB0cmFuc2Zvcm1zIGFuZCBkaXNwbGF5
IHN0YXRlcyBvZiBzbGlkZXMuIE9mdGVuIHRpbWVzLCB0aGlzIGNhbiBiZSBm
aXhlZCBieSBjYWxsaW5nIHRoZWlyIHVwZGF0ZSBvciByZW5kZXIgZnVuY3Rp
b24gZnJvbSB0aGlzIGNhbGxiYWNrLgoKYGBgamF2YXNjcmlwdApSZXZlYWwu
YWRkRXZlbnRMaXN0ZW5lciggJ3NsaWRlY2hhbmdlZCcsIGZ1bmN0aW9uKCBl
dmVudCApIHsKCS8vIGV2ZW50LnByZXZpb3VzU2xpZGUsIGV2ZW50LmN1cnJl
bnRTbGlkZSwgZXZlbnQuaW5kZXhoLCBldmVudC5pbmRleHYKfSApOwpgYGAK
CiMjIyBQcmVzZW50YXRpb24gU3RhdGUKClRoZSBwcmVzZW50YXRpb24ncyBj
dXJyZW50IHN0YXRlIGNhbiBiZSBmZXRjaGVkIGJ5IHVzaW5nIHRoZSBgZ2V0
U3RhdGVgIG1ldGhvZC4gQSBzdGF0ZSBvYmplY3QgY29udGFpbnMgYWxsIG9m
IHRoZSBpbmZvcm1hdGlvbiByZXF1aXJlZCB0byBwdXQgdGhlIHByZXNlbnRh
dGlvbiBiYWNrIGFzIGl0IHdhcyB3aGVuIGBnZXRTdGF0ZWAgd2FzIGZpcnN0
IGNhbGxlZC4gU29ydCBvZiBsaWtlIGEgc25hcHNob3QuIEl0J3MgYSBzaW1w
bGUgb2JqZWN0IHRoYXQgY2FuIGVhc2lseSBiZSBzdHJpbmdpZmllZCBhbmQg
cGVyc2lzdGVkIG9yIHNlbnQgb3ZlciB0aGUgd2lyZS4KCmBgYGphdmFzY3Jp
cHQKUmV2ZWFsLnNsaWRlKCAxICk7Ci8vIHdlJ3JlIG9uIHNsaWRlIDEKCnZh
ciBzdGF0ZSA9IFJldmVhbC5nZXRTdGF0ZSgpOwoKUmV2ZWFsLnNsaWRlKCAz
ICk7Ci8vIHdlJ3JlIG9uIHNsaWRlIDMKClJldmVhbC5zZXRTdGF0ZSggc3Rh
dGUgKTsKLy8gd2UncmUgYmFjayBvbiBzbGlkZSAxCmBgYAoKIyMjIFNsaWRl
IFN0YXRlcwoKSWYgeW91IHNldCBgZGF0YS1zdGF0ZT0ic29tZXN0YXRlImAg
b24gYSBzbGlkZSBgPHNlY3Rpb24+YCwgInNvbWVzdGF0ZSIgd2lsbCBiZSBh
cHBsaWVkIGFzIGEgY2xhc3Mgb24gdGhlIGRvY3VtZW50IGVsZW1lbnQgd2hl
biB0aGF0IHNsaWRlIGlzIG9wZW5lZC4gVGhpcyBhbGxvd3MgeW91IHRvIGFw
cGx5IGJyb2FkIHN0eWxlIGNoYW5nZXMgdG8gdGhlIHBhZ2UgYmFzZWQgb24g
dGhlIGFjdGl2ZSBzbGlkZS4KCkZ1cnRoZXJtb3JlIHlvdSBjYW4gYWxzbyBs
aXN0ZW4gdG8gdGhlc2UgY2hhbmdlcyBpbiBzdGF0ZSB2aWEgSmF2YVNjcmlw
dDoKCmBgYGphdmFzY3JpcHQKUmV2ZWFsLmFkZEV2ZW50TGlzdGVuZXIoICdz
b21lc3RhdGUnLCBmdW5jdGlvbigpIHsKCS8vIFRPRE86IFNwcmlua2xlIG1h
Z2ljCn0sIGZhbHNlICk7CmBgYAoKIyMjIFNsaWRlIEJhY2tncm91bmRzCgpT
bGlkZXMgYXJlIGNvbnRhaW5lZCB3aXRoaW4gYSBsaW1pdGVkIHBvcnRpb24g
b2YgdGhlIHNjcmVlbiBieSBkZWZhdWx0IHRvIGFsbG93IHRoZW0gdG8gZml0
IGFueSBkaXNwbGF5IGFuZCBzY2FsZSB1bmlmb3JtbHkuIFlvdSBjYW4gYXBw
bHkgZnVsbCBwYWdlIGJhY2tncm91bmRzIG91dHNpZGUgb2YgdGhlIHNsaWRl
IGFyZWEgYnkgYWRkaW5nIGEgYGRhdGEtYmFja2dyb3VuZGAgYXR0cmlidXRl
IHRvIHlvdXIgYDxzZWN0aW9uPmAgZWxlbWVudHMuIEZvdXIgZGlmZmVyZW50
IHR5cGVzIG9mIGJhY2tncm91bmRzIGFyZSBzdXBwb3J0ZWQ6IGNvbG9yLCBp
bWFnZSwgdmlkZW8gYW5kIGlmcmFtZS4KCiMjIyMgQ29sb3IgQmFja2dyb3Vu
ZHMKCkFsbCBDU1MgY29sb3IgZm9ybWF0cyBhcmUgc3VwcG9ydGVkLCBpbmNs
dWRpbmcgaGV4IHZhbHVlcywga2V5d29yZHMsIGByZ2JhKClgIG9yIGBoc2wo
KWAuCgpgYGBodG1sCjxzZWN0aW9uIGRhdGEtYmFja2dyb3VuZC1jb2xvcj0i
I2ZmMDAwMCI+Cgk8aDI+Q29sb3I8L2gyPgo8L3NlY3Rpb24+CmBgYAoKIyMj
IyBJbWFnZSBCYWNrZ3JvdW5kcwoKQnkgZGVmYXVsdCwgYmFja2dyb3VuZCBp
bWFnZXMgYXJlIHJlc2l6ZWQgdG8gY292ZXIgdGhlIGZ1bGwgcGFnZS4gQXZh
aWxhYmxlIG9wdGlvbnM6Cgp8IEF0dHJpYnV0ZSAgICAgICAgICAgICAgICAg
ICAgICAgIHwgRGVmYXVsdCAgICB8IERlc2NyaXB0aW9uIHwKfCA6LS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8IDotLS0tLS0tLS0gfCA6LS0t
LS0tLS0tLSB8CnwgZGF0YS1iYWNrZ3JvdW5kLWltYWdlICAgICAgICAgICAg
fCAgICAgICAgICAgIHwgVVJMIG9mIHRoZSBpbWFnZSB0byBzaG93LiBHSUZz
IHJlc3RhcnQgd2hlbiB0aGUgc2xpZGUgb3BlbnMuIHwKfCBkYXRhLWJhY2tn
cm91bmQtc2l6ZSAgICAgICAgICAgICB8IGNvdmVyICAgICAgfCBTZWUgW2Jh
Y2tncm91bmQtc2l6ZV0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcv
ZG9jcy9XZWIvQ1NTL2JhY2tncm91bmQtc2l6ZSkgb24gTUROLiAgfAp8IGRh
dGEtYmFja2dyb3VuZC1wb3NpdGlvbiAgICAgICAgIHwgY2VudGVyICAgICB8
IFNlZSBbYmFja2dyb3VuZC1wb3NpdGlvbl0oaHR0cHM6Ly9kZXZlbG9wZXIu
bW96aWxsYS5vcmcvZG9jcy9XZWIvQ1NTL2JhY2tncm91bmQtcG9zaXRpb24p
IG9uIE1ETi4gfAp8IGRhdGEtYmFja2dyb3VuZC1yZXBlYXQgICAgICAgICAg
IHwgbm8tcmVwZWF0ICB8IFNlZSBbYmFja2dyb3VuZC1yZXBlYXRdKGh0dHBz
Oi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0NTUy9iYWNrZ3Jv
dW5kLXJlcGVhdCkgb24gTUROLiB8CnwgZGF0YS1iYWNrZ3JvdW5kLW9wYWNp
dHkgICAgICAgICAgfCAxICAgICAgICAgIHwgT3BhY2l0eSBvZiB0aGUgYmFj
a2dyb3VuZCBpbWFnZSBvbiBhIDAtMSBzY2FsZS4gMCBpcyB0cmFuc3BhcmVu
dCBhbmQgMSBpcyBmdWxseSBvcGFxdWUuIHwKCmBgYGh0bWwKPHNlY3Rpb24g
ZGF0YS1iYWNrZ3JvdW5kLWltYWdlPSJodHRwOi8vZXhhbXBsZS5jb20vaW1h
Z2UucG5nIj4KCTxoMj5JbWFnZTwvaDI+Cjwvc2VjdGlvbj4KPHNlY3Rpb24g
ZGF0YS1iYWNrZ3JvdW5kLWltYWdlPSJodHRwOi8vZXhhbXBsZS5jb20vaW1h
Z2UucG5nIiBkYXRhLWJhY2tncm91bmQtc2l6ZT0iMTAwcHgiIGRhdGEtYmFj
a2dyb3VuZC1yZXBlYXQ9InJlcGVhdCI+Cgk8aDI+VGhpcyBiYWNrZ3JvdW5k
IGltYWdlIHdpbGwgYmUgc2l6ZWQgdG8gMTAwcHggYW5kIHJlcGVhdGVkPC9o
Mj4KPC9zZWN0aW9uPgpgYGAKCiMjIyMgVmlkZW8gQmFja2dyb3VuZHMKCkF1
dG9tYXRpY2FsbHkgcGxheXMgYSBmdWxsIHNpemUgdmlkZW8gYmVoaW5kIHRo
ZSBzbGlkZS4KCnwgQXR0cmlidXRlICAgICAgICAgICAgICAgICAgICAgICAg
fCBEZWZhdWx0IHwgRGVzY3JpcHRpb24gfAp8IDotLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0gICAgIHwgOi0tLS0tLSB8IDotLS0tLS0tLS0tIHwKfCBk
YXRhLWJhY2tncm91bmQtdmlkZW8gICAgICAgICAgICB8ICAgICAgICAgfCBB
IHNpbmdsZSB2aWRlbyBzb3VyY2UsIG9yIGEgY29tbWEgc2VwYXJhdGVkIGxp
c3Qgb2YgdmlkZW8gc291cmNlcy4gfAp8IGRhdGEtYmFja2dyb3VuZC12aWRl
by1sb29wICAgICAgIHwgZmFsc2UgICB8IEZsYWdzIGlmIHRoZSB2aWRlbyBz
aG91bGQgcGxheSByZXBlYXRlZGx5LiB8CnwgZGF0YS1iYWNrZ3JvdW5kLXZp
ZGVvLW11dGVkICAgICAgfCBmYWxzZSAgIHwgRmxhZ3MgaWYgdGhlIGF1ZGlv
IHNob3VsZCBiZSBtdXRlZC4gfAp8IGRhdGEtYmFja2dyb3VuZC1zaXplICAg
ICAgICAgICAgIHwgY292ZXIgICB8IFVzZSBgY292ZXJgIGZvciBmdWxsIHNj
cmVlbiBhbmQgc29tZSBjcm9wcGluZyBvciBgY29udGFpbmAgZm9yIGxldHRl
cmJveGluZy4gfAp8IGRhdGEtYmFja2dyb3VuZC1vcGFjaXR5ICAgICAgICAg
IHwgMSAgICAgICB8IE9wYWNpdHkgb2YgdGhlIGJhY2tncm91bmQgdmlkZW8g
b24gYSAwLTEgc2NhbGUuIDAgaXMgdHJhbnNwYXJlbnQgYW5kIDEgaXMgZnVs
bHkgb3BhcXVlLiB8CgpgYGBodG1sCjxzZWN0aW9uIGRhdGEtYmFja2dyb3Vu
ZC12aWRlbz0iaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL3N0YXRpYy5zbGlk
LmVzL3NpdGUvaG9tZXBhZ2UvdjEvaG9tZXBhZ2UtdmlkZW8tZWRpdG9yLm1w
NCxodHRwczovL3MzLmFtYXpvbmF3cy5jb20vc3RhdGljLnNsaWQuZXMvc2l0
ZS9ob21lcGFnZS92MS9ob21lcGFnZS12aWRlby1lZGl0b3Iud2VibSIgZGF0
YS1iYWNrZ3JvdW5kLXZpZGVvLWxvb3AgZGF0YS1iYWNrZ3JvdW5kLXZpZGVv
LW11dGVkPgoJPGgyPlZpZGVvPC9oMj4KPC9zZWN0aW9uPgpgYGAKCiMjIyMg
SWZyYW1lIEJhY2tncm91bmRzCgpFbWJlZHMgYSB3ZWIgcGFnZSBhcyBhIHNs
aWRlIGJhY2tncm91bmQgdGhhdCBjb3ZlcnMgMTAwJSBvZiB0aGUgcmV2ZWFs
LmpzIHdpZHRoIGFuZCBoZWlnaHQuIFRoZSBpZnJhbWUgaXMgaW4gdGhlIGJh
Y2tncm91bmQgbGF5ZXIsIGJlaGluZCB5b3VyIHNsaWRlcywgYW5kIGFzIHN1
Y2ggaXQncyBub3QgcG9zc2libGUgdG8gaW50ZXJhY3Qgd2l0aCBpdCBieSBk
ZWZhdWx0LiBUbyBtYWtlIHlvdXIgYmFja2dyb3VuZCBpbnRlcmFjdGl2ZSwg
eW91IGNhbiBhZGQgdGhlIGBkYXRhLWJhY2tncm91bmQtaW50ZXJhY3RpdmVg
IGF0dHJpYnV0ZS4KCmBgYGh0bWwKPHNlY3Rpb24gZGF0YS1iYWNrZ3JvdW5k
LWlmcmFtZT0iaHR0cHM6Ly9zbGlkZXMuY29tIiBkYXRhLWJhY2tncm91bmQt
aW50ZXJhY3RpdmU+Cgk8aDI+SWZyYW1lPC9oMj4KPC9zZWN0aW9uPgpgYGAK
CiMjIyMgQmFja2dyb3VuZCBUcmFuc2l0aW9ucwoKQmFja2dyb3VuZHMgdHJh
bnNpdGlvbiB1c2luZyBhIGZhZGUgYW5pbWF0aW9uIGJ5IGRlZmF1bHQuIFRo
aXMgY2FuIGJlIGNoYW5nZWQgdG8gYSBsaW5lYXIgc2xpZGluZyB0cmFuc2l0
aW9uIGJ5IHBhc3NpbmcgYGJhY2tncm91bmRUcmFuc2l0aW9uOiAnc2xpZGUn
YCB0byB0aGUgYFJldmVhbC5pbml0aWFsaXplKClgIGNhbGwuIEFsdGVybmF0
aXZlbHkgeW91IGNhbiBzZXQgYGRhdGEtYmFja2dyb3VuZC10cmFuc2l0aW9u
YCBvbiBhbnkgc2VjdGlvbiB3aXRoIGEgYmFja2dyb3VuZCB0byBvdmVycmlk
ZSB0aGF0IHNwZWNpZmljIHRyYW5zaXRpb24uCgoKIyMjIFBhcmFsbGF4IEJh
Y2tncm91bmQKCklmIHlvdSB3YW50IHRvIHVzZSBhIHBhcmFsbGF4IHNjcm9s
bGluZyBiYWNrZ3JvdW5kLCBzZXQgdGhlIGZpcnN0IHR3byBwcm9wZXJ0aWVz
IGJlbG93IHdoZW4gaW5pdGlhbGl6aW5nIHJldmVhbC5qcyAodGhlIG90aGVy
IHR3byBhcmUgb3B0aW9uYWwpLgoKYGBgamF2YXNjcmlwdApSZXZlYWwuaW5p
dGlhbGl6ZSh7CgoJLy8gUGFyYWxsYXggYmFja2dyb3VuZCBpbWFnZQoJcGFy
YWxsYXhCYWNrZ3JvdW5kSW1hZ2U6ICcnLCAvLyBlLmcuICJodHRwczovL3Mz
LmFtYXpvbmF3cy5jb20vaGFraW0tc3RhdGljL3JldmVhbC1qcy9yZXZlYWwt
cGFyYWxsYXgtMS5qcGciCgoJLy8gUGFyYWxsYXggYmFja2dyb3VuZCBzaXpl
CglwYXJhbGxheEJhY2tncm91bmRTaXplOiAnJywgLy8gQ1NTIHN5bnRheCwg
ZS5nLiAiMjEwMHB4IDkwMHB4IiAtIGN1cnJlbnRseSBvbmx5IHBpeGVscyBh
cmUgc3VwcG9ydGVkIChkb24ndCB1c2UgJSBvciBhdXRvKQoKCS8vIE51bWJl
ciBvZiBwaXhlbHMgdG8gbW92ZSB0aGUgcGFyYWxsYXggYmFja2dyb3VuZCBw
ZXIgc2xpZGUKCS8vIC0gQ2FsY3VsYXRlZCBhdXRvbWF0aWNhbGx5IHVubGVz
cyBzcGVjaWZpZWQKCS8vIC0gU2V0IHRvIDAgdG8gZGlzYWJsZSBtb3ZlbWVu
dCBhbG9uZyBhbiBheGlzCglwYXJhbGxheEJhY2tncm91bmRIb3Jpem9udGFs
OiAyMDAsCglwYXJhbGxheEJhY2tncm91bmRWZXJ0aWNhbDogNTAKCn0pOwpg
YGAKCk1ha2Ugc3VyZSB0aGF0IHRoZSBiYWNrZ3JvdW5kIHNpemUgaXMgbXVj
aCBiaWdnZXIgdGhhbiBzY3JlZW4gc2l6ZSB0byBhbGxvdyBmb3Igc29tZSBz
Y3JvbGxpbmcuIFtWaWV3IGV4YW1wbGVdKGh0dHA6Ly9yZXZlYWxqcy5jb20v
P3BhcmFsbGF4QmFja2dyb3VuZEltYWdlPWh0dHBzJTNBJTJGJTJGczMuYW1h
em9uYXdzLmNvbSUyRmhha2ltLXN0YXRpYyUyRnJldmVhbC1qcyUyRnJldmVh
bC1wYXJhbGxheC0xLmpwZyZwYXJhbGxheEJhY2tncm91bmRTaXplPTIxMDBw
eCUyMDkwMHB4KS4KCiMjIyBTbGlkZSBUcmFuc2l0aW9ucwoKVGhlIGdsb2Jh
bCBwcmVzZW50YXRpb24gdHJhbnNpdGlvbiBpcyBzZXQgdXNpbmcgdGhlIGB0
cmFuc2l0aW9uYCBjb25maWcgdmFsdWUuIFlvdSBjYW4gb3ZlcnJpZGUgdGhl
IGdsb2JhbCB0cmFuc2l0aW9uIGZvciBhIHNwZWNpZmljIHNsaWRlIGJ5IHVz
aW5nIHRoZSBgZGF0YS10cmFuc2l0aW9uYCBhdHRyaWJ1dGU6CgpgYGBodG1s
CjxzZWN0aW9uIGRhdGEtdHJhbnNpdGlvbj0iem9vbSI+Cgk8aDI+VGhpcyBz
bGlkZSB3aWxsIG92ZXJyaWRlIHRoZSBwcmVzZW50YXRpb24gdHJhbnNpdGlv
biBhbmQgem9vbSE8L2gyPgo8L3NlY3Rpb24+Cgo8c2VjdGlvbiBkYXRhLXRy
YW5zaXRpb24tc3BlZWQ9ImZhc3QiPgoJPGgyPkNob29zZSBmcm9tIHRocmVl
IHRyYW5zaXRpb24gc3BlZWRzOiBkZWZhdWx0LCBmYXN0IG9yIHNsb3chPC9o
Mj4KPC9zZWN0aW9uPgpgYGAKCllvdSBjYW4gYWxzbyB1c2UgZGlmZmVyZW50
IGluIGFuZCBvdXQgdHJhbnNpdGlvbnMgZm9yIHRoZSBzYW1lIHNsaWRlOgoK
YGBgaHRtbAo8c2VjdGlvbiBkYXRhLXRyYW5zaXRpb249InNsaWRlIj4KICAg
IFRoZSB0cmFpbiBnb2VzIG9uIOKApgo8L3NlY3Rpb24+CjxzZWN0aW9uIGRh
dGEtdHJhbnNpdGlvbj0ic2xpZGUiPgogICAgYW5kIG9uIOKApgo8L3NlY3Rp
b24+CjxzZWN0aW9uIGRhdGEtdHJhbnNpdGlvbj0ic2xpZGUtaW4gZmFkZS1v
dXQiPgogICAgYW5kIHN0b3BzLgo8L3NlY3Rpb24+CjxzZWN0aW9uIGRhdGEt
dHJhbnNpdGlvbj0iZmFkZS1pbiBzbGlkZS1vdXQiPgogICAgKFBhc3Nlbmdl
cnMgZW50ZXJpbmcgYW5kIGxlYXZpbmcpCjwvc2VjdGlvbj4KPHNlY3Rpb24g
ZGF0YS10cmFuc2l0aW9uPSJzbGlkZSI+CiAgICBBbmQgaXQgc3RhcnRzIGFn
YWluLgo8L3NlY3Rpb24+CmBgYApZb3UgY2FuIGNob29zZSBmcm9tIGBub25l
YCwgYGZhZGVgLCBgc2xpZGVgLCBgY29udmV4YCwgYGNvbmNhdmVgIGFuZCBg
em9vbWAuCiMjIyBJbnRlcm5hbCBsaW5rcwoKSXQncyBlYXN5IHRvIGxpbmsg
YmV0d2VlbiBzbGlkZXMuIFRoZSBmaXJzdCBleGFtcGxlIGJlbG93IHRhcmdl
dHMgdGhlIGluZGV4IG9mIGFub3RoZXIgc2xpZGUgd2hlcmVhcyB0aGUgc2Vj
b25kIHRhcmdldHMgYSBzbGlkZSB3aXRoIGFuIElEIGF0dHJpYnV0ZSAoYDxz
ZWN0aW9uIGlkPSJzb21lLXNsaWRlIj5gKToKCmBgYGh0bWwKPGEgaHJlZj0i
Iy8yLzIiPkxpbms8L2E+CjxhIGhyZWY9IiMvc29tZS1zbGlkZSI+TGluazwv
YT4KYGBgCgpZb3UgY2FuIGFsc28gYWRkIHJlbGF0aXZlIG5hdmlnYXRpb24g
bGlua3MsIHNpbWlsYXIgdG8gdGhlIGJ1aWx0IGluIHJldmVhbC5qcyBjb250
cm9scywgYnkgYXBwZW5kaW5nIG9uZSBvZiB0aGUgZm9sbG93aW5nIGNsYXNz
ZXMgb24gYW55IGVsZW1lbnQuIE5vdGUgdGhhdCBlYWNoIGVsZW1lbnQgaXMg
YXV0b21hdGljYWxseSBnaXZlbiBhbiBgZW5hYmxlZGAgY2xhc3Mgd2hlbiBp
dCdzIGEgdmFsaWQgbmF2aWdhdGlvbiByb3V0ZSBiYXNlZCBvbiB0aGUgY3Vy
cmVudCBzbGlkZS4KCmBgYGh0bWwKPGEgaHJlZj0iIyIgY2xhc3M9Im5hdmln
YXRlLWxlZnQiPgo8YSBocmVmPSIjIiBjbGFzcz0ibmF2aWdhdGUtcmlnaHQi
Pgo8YSBocmVmPSIjIiBjbGFzcz0ibmF2aWdhdGUtdXAiPgo8YSBocmVmPSIj
IiBjbGFzcz0ibmF2aWdhdGUtZG93biI+CjxhIGhyZWY9IiMiIGNsYXNzPSJu
YXZpZ2F0ZS1wcmV2Ij4gPCEtLSBQcmV2aW91cyB2ZXJ0aWNhbCBvciBob3Jp
em9udGFsIHNsaWRlIC0tPgo8YSBocmVmPSIjIiBjbGFzcz0ibmF2aWdhdGUt
bmV4dCI+IDwhLS0gTmV4dCB2ZXJ0aWNhbCBvciBob3Jpem9udGFsIHNsaWRl
IC0tPgpgYGAKCiMjIyBGcmFnbWVudHMKCkZyYWdtZW50cyBhcmUgdXNlZCB0
byBoaWdobGlnaHQgaW5kaXZpZHVhbCBlbGVtZW50cyBvbiBhIHNsaWRlLiBF
dmVyeSBlbGVtZW50IHdpdGggdGhlIGNsYXNzIGBmcmFnbWVudGAgd2lsbCBi
ZSBzdGVwcGVkIHRocm91Z2ggYmVmb3JlIG1vdmluZyBvbiB0byB0aGUgbmV4
dCBzbGlkZS4gSGVyZSdzIGFuIGV4YW1wbGU6IGh0dHA6Ly9yZXZlYWxqcy5j
b20vIy9mcmFnbWVudHMKClRoZSBkZWZhdWx0IGZyYWdtZW50IHN0eWxlIGlz
IHRvIHN0YXJ0IG91dCBpbnZpc2libGUgYW5kIGZhZGUgaW4uIFRoaXMgc3R5
bGUgY2FuIGJlIGNoYW5nZWQgYnkgYXBwZW5kaW5nIGEgZGlmZmVyZW50IGNs
YXNzIHRvIHRoZSBmcmFnbWVudDoKCmBgYGh0bWwKPHNlY3Rpb24+Cgk8cCBj
bGFzcz0iZnJhZ21lbnQgZ3JvdyI+Z3JvdzwvcD4KCTxwIGNsYXNzPSJmcmFn
bWVudCBzaHJpbmsiPnNocmluazwvcD4KCTxwIGNsYXNzPSJmcmFnbWVudCBm
YWRlLW91dCI+ZmFkZS1vdXQ8L3A+Cgk8cCBjbGFzcz0iZnJhZ21lbnQgZmFk
ZS11cCI+ZmFkZS11cCAoYWxzbyBkb3duLCBsZWZ0IGFuZCByaWdodCEpPC9w
PgoJPHAgY2xhc3M9ImZyYWdtZW50IGZhZGUtaW4tdGhlbi1vdXQiPmZhZGVz
IGluLCB0aGVuIG91dCB3aGVuIHdlIG1vdmUgdG8gdGhlIG5leHQgc3RlcDwv
cD4KCTxwIGNsYXNzPSJmcmFnbWVudCBmYWRlLWluLXRoZW4tc2VtaS1vdXQi
PmZhZGVzIGluLCB0aGVuIG9iZnVzY2F0ZSB3aGVuIHdlIG1vdmUgdG8gdGhl
IG5leHQgc3RlcDwvcD4KCTxwIGNsYXNzPSJmcmFnbWVudCBoaWdobGlnaHQt
Y3VycmVudC1ibHVlIj5ibHVlIG9ubHkgb25jZTwvcD4KCTxwIGNsYXNzPSJm
cmFnbWVudCBoaWdobGlnaHQtcmVkIj5oaWdobGlnaHQtcmVkPC9wPgoJPHAg
Y2xhc3M9ImZyYWdtZW50IGhpZ2hsaWdodC1ncmVlbiI+aGlnaGxpZ2h0LWdy
ZWVuPC9wPgoJPHAgY2xhc3M9ImZyYWdtZW50IGhpZ2hsaWdodC1ibHVlIj5o
aWdobGlnaHQtYmx1ZTwvcD4KPC9zZWN0aW9uPgpgYGAKCk11bHRpcGxlIGZy
YWdtZW50cyBjYW4gYmUgYXBwbGllZCB0byB0aGUgc2FtZSBlbGVtZW50IHNl
cXVlbnRpYWxseSBieSB3cmFwcGluZyBpdCwgdGhpcyB3aWxsIGZhZGUgaW4g
dGhlIHRleHQgb24gdGhlIGZpcnN0IHN0ZXAgYW5kIGZhZGUgaXQgYmFjayBv
dXQgb24gdGhlIHNlY29uZC4KCmBgYGh0bWwKPHNlY3Rpb24+Cgk8c3BhbiBj
bGFzcz0iZnJhZ21lbnQgZmFkZS1pbiI+CgkJPHNwYW4gY2xhc3M9ImZyYWdt
ZW50IGZhZGUtb3V0Ij5JJ2xsIGZhZGUgaW4sIHRoZW4gb3V0PC9zcGFuPgoJ
PC9zcGFuPgo8L3NlY3Rpb24+CmBgYAoKVGhlIGRpc3BsYXkgb3JkZXIgb2Yg
ZnJhZ21lbnRzIGNhbiBiZSBjb250cm9sbGVkIHVzaW5nIHRoZSBgZGF0YS1m
cmFnbWVudC1pbmRleGAgYXR0cmlidXRlLgoKYGBgaHRtbAo8c2VjdGlvbj4K
CTxwIGNsYXNzPSJmcmFnbWVudCIgZGF0YS1mcmFnbWVudC1pbmRleD0iMyI+
QXBwZWFycyBsYXN0PC9wPgoJPHAgY2xhc3M9ImZyYWdtZW50IiBkYXRhLWZy
YWdtZW50LWluZGV4PSIxIj5BcHBlYXJzIGZpcnN0PC9wPgoJPHAgY2xhc3M9
ImZyYWdtZW50IiBkYXRhLWZyYWdtZW50LWluZGV4PSIyIj5BcHBlYXJzIHNl
Y29uZDwvcD4KPC9zZWN0aW9uPgpgYGAKCiMjIyBGcmFnbWVudCBldmVudHMK
CldoZW4gYSBzbGlkZSBmcmFnbWVudCBpcyBlaXRoZXIgc2hvd24gb3IgaGlk
ZGVuIHJldmVhbC5qcyB3aWxsIGRpc3BhdGNoIGFuIGV2ZW50LgoKU29tZSBs
aWJyYXJpZXMsIGxpa2UgTWF0aEpheCAoc2VlICM1MDUpLCBnZXQgY29uZnVz
ZWQgYnkgdGhlIGluaXRpYWxseSBoaWRkZW4gZnJhZ21lbnQgZWxlbWVudHMu
IE9mdGVuIHRpbWVzIHRoaXMgY2FuIGJlIGZpeGVkIGJ5IGNhbGxpbmcgdGhl
aXIgdXBkYXRlIG9yIHJlbmRlciBmdW5jdGlvbiBmcm9tIHRoaXMgY2FsbGJh
Y2suCgpgYGBqYXZhc2NyaXB0ClJldmVhbC5hZGRFdmVudExpc3RlbmVyKCAn
ZnJhZ21lbnRzaG93bicsIGZ1bmN0aW9uKCBldmVudCApIHsKCS8vIGV2ZW50
LmZyYWdtZW50ID0gdGhlIGZyYWdtZW50IERPTSBlbGVtZW50Cn0gKTsKUmV2
ZWFsLmFkZEV2ZW50TGlzdGVuZXIoICdmcmFnbWVudGhpZGRlbicsIGZ1bmN0
aW9uKCBldmVudCApIHsKCS8vIGV2ZW50LmZyYWdtZW50ID0gdGhlIGZyYWdt
ZW50IERPTSBlbGVtZW50Cn0gKTsKYGBgCgojIyMgQ29kZSBTeW50YXggSGln
aGxpZ2h0aW5nCgpCeSBkZWZhdWx0LCBSZXZlYWwgaXMgY29uZmlndXJlZCB3
aXRoIFtoaWdobGlnaHQuanNdKGh0dHBzOi8vaGlnaGxpZ2h0anMub3JnLykg
Zm9yIGNvZGUgc3ludGF4IGhpZ2hsaWdodGluZy4gVG8gZW5hYmxlIHN5bnRh
eCBoaWdobGlnaHRpbmcsIHlvdSdsbCBoYXZlIHRvIGxvYWQgdGhlIGhpZ2hs
aWdodCBwbHVnaW4gKFtwbHVnaW4vaGlnaGxpZ2h0L2hpZ2hsaWdodC5qc10o
cGx1Z2luL2hpZ2hsaWdodC9oaWdobGlnaHQuanMpKSBhbmQgYSBoaWdobGln
aHQuanMgQ1NTIHRoZW1lIChSZXZlYWwgY29tZXMgcGFja2FnZWQgd2l0aCB0
aGUgTW9ub2thaSB0aGVtZXM6IFtsaWIvY3NzL21vbm9rYWkuY3NzXShsaWIv
Y3NzL21vbm9rYWkuY3NzKSkuCgpgYGBqYXZhc2NyaXB0ClJldmVhbC5pbml0
aWFsaXplKHsKCS8vIE1vcmUgaW5mbyBodHRwczovL2dpdGh1Yi5jb20vaGFr
aW1lbC9yZXZlYWwuanMjZGVwZW5kZW5jaWVzCglkZXBlbmRlbmNpZXM6IFsK
CQl7IHNyYzogJ3BsdWdpbi9oaWdobGlnaHQvaGlnaGxpZ2h0LmpzJywgYXN5
bmM6IHRydWUgfSwKCV0KfSk7CmBgYAoKQmVsb3cgaXMgYW4gZXhhbXBsZSB3
aXRoIGNsb2p1cmUgY29kZSB0aGF0IHdpbGwgYmUgc3ludGF4IGhpZ2hsaWdo
dGVkLiBXaGVuIHRoZSBgZGF0YS10cmltYCBhdHRyaWJ1dGUgaXMgcHJlc2Vu
dCwgc3Vycm91bmRpbmcgd2hpdGVzcGFjZSBpcyBhdXRvbWF0aWNhbGx5IHJl
bW92ZWQuICBIVE1MIHdpbGwgYmUgZXNjYXBlZCBieSBkZWZhdWx0LiBUbyBh
dm9pZCB0aGlzLCBmb3IgZXhhbXBsZSBpZiB5b3UgYXJlIHVzaW5nIGA8bWFy
az5gIHRvIGNhbGwgb3V0IGEgbGluZSBvZiBjb2RlLCBhZGQgdGhlIGBkYXRh
LW5vZXNjYXBlYCBhdHRyaWJ1dGUgdG8gdGhlIGA8Y29kZT5gIGVsZW1lbnQu
CgpgYGBodG1sCjxzZWN0aW9uPgoJPHByZT48Y29kZSBkYXRhLXRyaW0gZGF0
YS1ub2VzY2FwZT4KKGRlZiBsYXp5LWZpYgogIChjb25jYXQKICAgWzAgMV0K
ICAgPG1hcms+KChmbiByZmliIFthIGJdPC9tYXJrPgogICAgICAgIChsYXp5
LWNvbnMgKCsgYSBiKSAocmZpYiBiICgrIGEgYikpKSkgMCAxKSkpCgk8L2Nv
ZGU+PC9wcmU+Cjwvc2VjdGlvbj4KYGBgCgojIyMjIExpbmUgTnVtYmVycyAm
IEhpZ2hsaWdodHMKClRvIGVuYWJsZSBsaW5lIG51bWJlcnMsIGFkZCBgZGF0
YS1saW5lLW51bWJlcnNgIHRvIHlvdXIgYDxjb2RlPmAgdGFncy4gSWYgeW91
IHdhbnQgdG8gaGlnaGxpZ2h0IHNwZWNpZmljIGxpbmVzIHlvdSBjYW4gcHJv
dmlkZSBhIGNvbW1hIHNlcGFyYXRlZCBsaXN0IG9mIGxpbmUgbnVtYmVycyB1
c2luZyB0aGUgc2FtZSBhdHRyaWJ1dGUuIEZvciBleGFtcGxlLCBpbiB0aGUg
Zm9sbG93aW5nIGV4YW1wbGUgbGluZXMgNCBhbmQgOC0xMSBhcmUgaGlnaGxp
Z2h0ZWQ6CgpgYGBodG1sCjxwcmU+PGNvZGUgY2xhc3M9ImhsanMiIGRhdGEt
bGluZS1udW1iZXJzPSI0LDgtMTEiPgppbXBvcnQgUmVhY3QsIHsgdXNlU3Rh
dGUgfSBmcm9tICdyZWFjdCc7CiAKZnVuY3Rpb24gRXhhbXBsZSgpIHsKICBj
b25zdCBbY291bnQsIHNldENvdW50XSA9IHVzZVN0YXRlKDApOwogCiAgcmV0
dXJuICgKICAgIDxkaXY+CiAgICAgIDxwPllvdSBjbGlja2VkIHtjb3VudH0g
dGltZXM8L3A+CiAgICAgIDxidXR0b24gb25DbGljaz17KCkgPT4gc2V0Q291
bnQoY291bnQgKyAxKX0+CiAgICAgICAgQ2xpY2sgbWUKICAgICAgPC9idXR0
b24+CiAgICA8L2Rpdj4KICApOwp9CjwvY29kZT48L3ByZT4KYGBgCgo8aW1n
IHdpZHRoPSIzMDAiIGFsdD0ibGluZS1udW1iZXJzIiBzcmM9Imh0dHBzOi8v
dXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzYyOTQyOS81NTMz
MjA3Ny1lYjNjNDc4MC01NDk0LTExZTktODg1NC1iYTMzY2QwZmE3NDAucG5n
Ij4KCgoKIyMjIFNsaWRlIG51bWJlcgoKSWYgeW91IHdvdWxkIGxpa2UgdG8g
ZGlzcGxheSB0aGUgcGFnZSBudW1iZXIgb2YgdGhlIGN1cnJlbnQgc2xpZGUg
eW91IGNhbiBkbyBzbyB1c2luZyB0aGUgYHNsaWRlTnVtYmVyYCBhbmQgYHNo
b3dTbGlkZU51bWJlcmAgY29uZmlndXJhdGlvbiB2YWx1ZXMuCgpgYGBqYXZh
c2NyaXB0Ci8vIFNob3dzIHRoZSBzbGlkZSBudW1iZXIgdXNpbmcgZGVmYXVs
dCBmb3JtYXR0aW5nClJldmVhbC5jb25maWd1cmUoeyBzbGlkZU51bWJlcjog
dHJ1ZSB9KTsKCi8vIFNsaWRlIG51bWJlciBmb3JtYXR0aW5nIGNhbiBiZSBj
b25maWd1cmVkIHVzaW5nIHRoZXNlIHZhcmlhYmxlczoKLy8gICJoLnYiOiAJ
aG9yaXpvbnRhbCAuIHZlcnRpY2FsIHNsaWRlIG51bWJlciAoZGVmYXVsdCkK
Ly8gICJoL3YiOiAJaG9yaXpvbnRhbCAvIHZlcnRpY2FsIHNsaWRlIG51bWJl
cgovLyAgICAiYyI6IAlmbGF0dGVuZWQgc2xpZGUgbnVtYmVyCi8vICAiYy90
IjogCWZsYXR0ZW5lZCBzbGlkZSBudW1iZXIgLyB0b3RhbCBzbGlkZXMKUmV2
ZWFsLmNvbmZpZ3VyZSh7IHNsaWRlTnVtYmVyOiAnYy90JyB9KTsKCi8vIFlv
dSBjYW4gcHJvdmlkZSBhIGZ1bmN0aW9uIHRvIGZ1bGx5IGN1c3RvbWl6ZSB0
aGUgbnVtYmVyOgpSZXZlYWwuY29uZmlndXJlKHsgc2xpZGVOdW1iZXI6IGZ1
bmN0aW9uKCkgewogICAgLy8gSWdub3JlIG51bWJlcmluZyBvZiB2ZXJ0aWNh
bCBzbGlkZXMKICAgIHJldHVybiBbIFJldmVhbC5nZXRJbmRpY2VzKCkuaCBd
Owp9fSk7CgovLyBDb250cm9sIHdoaWNoIHZpZXdzIHRoZSBzbGlkZSBudW1i
ZXIgZGlzcGxheXMgb24gdXNpbmcgdGhlICJzaG93U2xpZGVOdW1iZXIiIHZh
bHVlOgovLyAgICAgImFsbCI6IHNob3cgb24gYWxsIHZpZXdzIChkZWZhdWx0
KQovLyAic3BlYWtlciI6IG9ubHkgc2hvdyBzbGlkZSBudW1iZXJzIG9uIHNw
ZWFrZXIgbm90ZXMgdmlldwovLyAgICJwcmludCI6IG9ubHkgc2hvdyBzbGlk
ZSBudW1iZXJzIHdoZW4gcHJpbnRpbmcgdG8gUERGClJldmVhbC5jb25maWd1
cmUoeyBzaG93U2xpZGVOdW1iZXI6ICdzcGVha2VyJyB9KTsKYGBgCgojIyMg
T3ZlcnZpZXcgbW9kZQoKUHJlc3MgwrtFU0PCqyBvciDCu0/CqyBrZXlzIHRv
IHRvZ2dsZSB0aGUgb3ZlcnZpZXcgbW9kZSBvbiBhbmQgb2ZmLiBXaGlsZSB5
b3UncmUgaW4gdGhpcyBtb2RlLCB5b3UgY2FuIHN0aWxsIG5hdmlnYXRlIGJl
dHdlZW4gc2xpZGVzLAphcyBpZiB5b3Ugd2VyZSBhdCAxLDAwMCBmZWV0IGFi
b3ZlIHlvdXIgcHJlc2VudGF0aW9uLiBUaGUgb3ZlcnZpZXcgbW9kZSBjb21l
cyB3aXRoIGEgZmV3IEFQSSBob29rczoKCmBgYGphdmFzY3JpcHQKUmV2ZWFs
LmFkZEV2ZW50TGlzdGVuZXIoICdvdmVydmlld3Nob3duJywgZnVuY3Rpb24o
IGV2ZW50ICkgeyAvKiAuLi4gKi8gfSApOwpSZXZlYWwuYWRkRXZlbnRMaXN0
ZW5lciggJ292ZXJ2aWV3aGlkZGVuJywgZnVuY3Rpb24oIGV2ZW50ICkgeyAv
KiAuLi4gKi8gfSApOwoKLy8gVG9nZ2xlIHRoZSBvdmVydmlldyBtb2RlIHBy
b2dyYW1tYXRpY2FsbHkKUmV2ZWFsLnRvZ2dsZU92ZXJ2aWV3KCk7CmBgYAoK
IyMjIEZ1bGxzY3JlZW4gbW9kZQoKSnVzdCBwcmVzcyDCu0bCqyBvbiB5b3Vy
IGtleWJvYXJkIHRvIHNob3cgeW91ciBwcmVzZW50YXRpb24gaW4gZnVsbHNj
cmVlbiBtb2RlLiBQcmVzcyB0aGUgwrtFU0PCqyBrZXkgdG8gZXhpdCBmdWxs
c2NyZWVuIG1vZGUuCgojIyMgRW1iZWRkZWQgbWVkaWEKCkFkZCBgZGF0YS1h
dXRvcGxheWAgdG8geW91ciBtZWRpYSBlbGVtZW50IGlmIHlvdSB3YW50IGl0
IHRvIGF1dG9tYXRpY2FsbHkgc3RhcnQgcGxheWluZyB3aGVuIHRoZSBzbGlk
ZSBpcyBzaG93bjoKCmBgYGh0bWwKPHZpZGVvIGRhdGEtYXV0b3BsYXkgc3Jj
PSJodHRwOi8vY2xpcHMudm9yd2FlcnRzLWdtYmguZGUvYmlnX2J1Y2tfYnVu
bnkubXA0Ij48L3ZpZGVvPgpgYGAKCklmIHlvdSB3YW50IHRvIGVuYWJsZSBv
ciBkaXNhYmxlIGF1dG9wbGF5IGdsb2JhbGx5LCBmb3IgYWxsIGVtYmVkZGVk
IG1lZGlhLCB5b3UgY2FuIHVzZSB0aGUgYGF1dG9QbGF5TWVkaWFgIGNvbmZp
Z3VyYXRpb24gb3B0aW9uLiBJZiB5b3Ugc2V0IHRoaXMgdG8gYHRydWVgIEFM
TCBtZWRpYSB3aWxsIGF1dG9wbGF5IHJlZ2FyZGxlc3Mgb2YgaW5kaXZpZHVh
bCBgZGF0YS1hdXRvcGxheWAgYXR0cmlidXRlcy4gSWYgeW91IGluaXRpYWxp
emUgd2l0aCBgYXV0b1BsYXlNZWRpYTogZmFsc2VgIE5PIG1lZGlhIHdpbGwg
YXV0b3BsYXkuCgpOb3RlIHRoYXQgZW1iZWRkZWQgSFRNTDUgYDx2aWRlbz5g
L2A8YXVkaW8+YCBhbmQgWW91VHViZS9WaW1lbyBpZnJhbWVzIGFyZSBhdXRv
bWF0aWNhbGx5IHBhdXNlZCB3aGVuIHlvdSBuYXZpZ2F0ZSBhd2F5IGZyb20g
YSBzbGlkZS4gVGhpcyBjYW4gYmUgZGlzYWJsZWQgYnkgZGVjb3JhdGluZyB5
b3VyIGVsZW1lbnQgd2l0aCBhIGBkYXRhLWlnbm9yZWAgYXR0cmlidXRlLgoK
IyMjIEVtYmVkZGVkIGlmcmFtZXMKCnJldmVhbC5qcyBhdXRvbWF0aWNhbGx5
IHB1c2hlcyB0d28gW3Bvc3QgbWVzc2FnZXNdKGh0dHBzOi8vZGV2ZWxvcGVy
Lm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9XaW5kb3cucG9zdE1l
c3NhZ2UpIHRvIGVtYmVkZGVkIGlmcmFtZXMuIGBzbGlkZTpzdGFydGAgd2hl
biB0aGUgc2xpZGUgY29udGFpbmluZyB0aGUgaWZyYW1lIGlzIG1hZGUgdmlz
aWJsZSBhbmQgYHNsaWRlOnN0b3BgIHdoZW4gaXQgaXMgaGlkZGVuLgoKIyMj
IFN0cmV0Y2hpbmcgZWxlbWVudHMKClNvbWV0aW1lcyBpdCdzIGRlc2lyYWJs
ZSB0byBoYXZlIGFuIGVsZW1lbnQsIGxpa2UgYW4gaW1hZ2Ugb3IgdmlkZW8s
IHN0cmV0Y2ggdG8gY29uc3VtZSBhcyBtdWNoIHNwYWNlIGFzIHBvc3NpYmxl
IHdpdGhpbiBhIGdpdmVuIHNsaWRlLiBUaGlzIGNhbiBiZSBkb25lIGJ5IGFk
ZGluZyB0aGUgYC5zdHJldGNoYCBjbGFzcyB0byBhbiBlbGVtZW50IGFzIHNl
ZW4gYmVsb3c6CgpgYGBodG1sCjxzZWN0aW9uPgoJPGgyPlRoaXMgdmlkZW8g
d2lsbCB1c2UgdXAgdGhlIHJlbWFpbmluZyBzcGFjZSBvbiB0aGUgc2xpZGU8
L2gyPgogICAgPHZpZGVvIGNsYXNzPSJzdHJldGNoIiBzcmM9Imh0dHA6Ly9j
bGlwcy52b3J3YWVydHMtZ21iaC5kZS9iaWdfYnVja19idW5ueS5tcDQiPjwv
dmlkZW8+Cjwvc2VjdGlvbj4KYGBgCgpMaW1pdGF0aW9uczoKLSBPbmx5IGRp
cmVjdCBkZXNjZW5kYW50cyBvZiBhIHNsaWRlIHNlY3Rpb24gY2FuIGJlIHN0
cmV0Y2hlZAotIE9ubHkgb25lIGRlc2NlbmRhbnQgcGVyIHNsaWRlIHNlY3Rp
b24gY2FuIGJlIHN0cmV0Y2hlZAoKIyMjIFJlc2l6ZSBFdmVudAoKV2hlbiBy
ZXZlYWwuanMgY2hhbmdlcyB0aGUgc2NhbGUgb2YgdGhlIHNsaWRlcyBpdCBm
aXJlcyBhIHJlc2l6ZSBldmVudC4gWW91IGNhbiBzdWJzY3JpYmUgdG8gdGhl
IGV2ZW50IHRvIHJlc2l6ZSB5b3VyIGVsZW1lbnRzIGFjY29yZGluZ2x5LgoK
YGBgamF2YXNjcmlwdApSZXZlYWwuYWRkRXZlbnRMaXN0ZW5lciggJ3Jlc2l6
ZScsIGZ1bmN0aW9uKCBldmVudCApIHsKCS8vIGV2ZW50LnNjYWxlLCBldmVu
dC5vbGRTY2FsZSwgZXZlbnQuc2l6ZQp9ICk7CmBgYAoKIyMjIHBvc3RNZXNz
YWdlIEFQSQoKVGhlIGZyYW1ld29yayBoYXMgYSBidWlsdC1pbiBwb3N0TWVz
c2FnZSBBUEkgdGhhdCBjYW4gYmUgdXNlZCB3aGVuIGNvbW11bmljYXRpbmcg
d2l0aCBhIHByZXNlbnRhdGlvbiBpbnNpZGUgb2YgYW5vdGhlciB3aW5kb3cu
IEhlcmUncyBhbiBleGFtcGxlIHNob3dpbmcgaG93IHlvdSdkIG1ha2UgYSBy
ZXZlYWwuanMgaW5zdGFuY2UgaW4gdGhlIGdpdmVuIHdpbmRvdyBwcm9jZWVk
IHRvIHNsaWRlIDI6CgpgYGBqYXZhc2NyaXB0Cjx3aW5kb3c+LnBvc3RNZXNz
YWdlKCBKU09OLnN0cmluZ2lmeSh7IG1ldGhvZDogJ3NsaWRlJywgYXJnczog
WyAyIF0gfSksICcqJyApOwpgYGAKCldoZW4gcmV2ZWFsLmpzIHJ1bnMgaW5z
aWRlIG9mIGFuIGlmcmFtZSBpdCBjYW4gb3B0aW9uYWxseSBidWJibGUgYWxs
IG9mIGl0cyBldmVudHMgdG8gdGhlIHBhcmVudC4gQnViYmxlZCBldmVudHMg
YXJlIHN0cmluZ2lmaWVkIEpTT04gd2l0aCB0aHJlZSBmaWVsZHM6IG5hbWVz
cGFjZSwgZXZlbnROYW1lIGFuZCBzdGF0ZS4gSGVyZSdzIGhvdyB5b3Ugc3Vi
c2NyaWJlIHRvIHRoZW0gZnJvbSB0aGUgcGFyZW50IHdpbmRvdzoKCmBgYGph
dmFzY3JpcHQKd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoICdtZXNzYWdlJywg
ZnVuY3Rpb24oIGV2ZW50ICkgewoJdmFyIGRhdGEgPSBKU09OLnBhcnNlKCBl
dmVudC5kYXRhICk7CglpZiggZGF0YS5uYW1lc3BhY2UgPT09ICdyZXZlYWwn
ICYmIGRhdGEuZXZlbnROYW1lID09PSdzbGlkZWNoYW5nZWQnICkgewoJCS8v
IFNsaWRlIGNoYW5nZWQsIHNlZSBkYXRhLnN0YXRlIGZvciBzbGlkZSBudW1i
ZXIKCX0KfSApOwpgYGAKClRoaXMgY3Jvc3Mtd2luZG93IG1lc3NhZ2luZyBj
YW4gYmUgdG9nZ2xlZCBvbiBvciBvZmYgdXNpbmcgY29uZmlndXJhdGlvbiBm
bGFncy4KCmBgYGphdmFzY3JpcHQKUmV2ZWFsLmluaXRpYWxpemUoewoJLy8g
Li4uCgoJLy8gRXhwb3NlcyB0aGUgcmV2ZWFsLmpzIEFQSSB0aHJvdWdoIHdp
bmRvdy5wb3N0TWVzc2FnZQoJcG9zdE1lc3NhZ2U6IHRydWUsCgoJLy8gRGlz
cGF0Y2hlcyBhbGwgcmV2ZWFsLmpzIGV2ZW50cyB0byB0aGUgcGFyZW50IHdp
bmRvdyB0aHJvdWdoIHBvc3RNZXNzYWdlCglwb3N0TWVzc2FnZUV2ZW50czog
ZmFsc2UKfSk7CmBgYAoKCiMjIFBERiBFeHBvcnQKClByZXNlbnRhdGlvbnMg
Y2FuIGJlIGV4cG9ydGVkIHRvIFBERiB2aWEgYSBzcGVjaWFsIHByaW50IHN0
eWxlc2hlZXQuIFRoaXMgZmVhdHVyZSByZXF1aXJlcyB0aGF0IHlvdSB1c2Ug
W0dvb2dsZSBDaHJvbWVdKGh0dHA6Ly9nb29nbGUuY29tL2Nocm9tZSkgb3Ig
W0Nocm9taXVtXShodHRwczovL3d3dy5jaHJvbWl1bS5vcmcvSG9tZSkgYW5k
IHRvIGJlIHNlcnZpbmcgdGhlIHByZXNlbnRhdGlvbiBmcm9tIGEgd2ViIHNl
cnZlci4KSGVyZSdzIGFuIGV4YW1wbGUgb2YgYW4gZXhwb3J0ZWQgcHJlc2Vu
dGF0aW9uIHRoYXQncyBiZWVuIHVwbG9hZGVkIHRvIFNsaWRlU2hhcmU6IGh0
dHA6Ly93d3cuc2xpZGVzaGFyZS5uZXQvaGFraW1lbC9yZXZlYWxqcy0zMDAu
CgojIyMgU2VwYXJhdGUgcGFnZXMgZm9yIGZyYWdtZW50cwpbRnJhZ21lbnRz
XSgjZnJhZ21lbnRzKSBhcmUgcHJpbnRlZCBvbiBzZXBhcmF0ZSBzbGlkZXMg
YnkgZGVmYXVsdC4gTWVhbmluZyBpZiB5b3UgaGF2ZSBhIHNsaWRlIHdpdGgg
dGhyZWUgZnJhZ21lbnQgc3RlcHMsIGl0IHdpbGwgZ2VuZXJhdGUgdGhyZWUg
c2VwYXJhdGUgc2xpZGVzIHdoZXJlIHRoZSBmcmFnbWVudHMgYXBwZWFyIGlu
Y3JlbWVudGFsbHkuCgpJZiB5b3UgcHJlZmVyIHByaW50aW5nIGFsbCBmcmFn
bWVudHMgaW4gdGhlaXIgdmlzaWJsZSBzdGF0ZXMgb24gdGhlIHNhbWUgc2xp
ZGUgeW91IGNhbiBzZXQgdGhlIGBwZGZTZXBhcmF0ZUZyYWdtZW50c2AgY29u
ZmlnIG9wdGlvbiB0byBmYWxzZS4KCiMjIyBQYWdlIHNpemUKCkV4cG9ydCBk
aW1lbnNpb25zIGFyZSBpbmZlcnJlZCBmcm9tIHRoZSBjb25maWd1cmVkIFtw
cmVzZW50YXRpb24gc2l6ZV0oI3ByZXNlbnRhdGlvbi1zaXplKS4gU2xpZGVz
IHRoYXQgYXJlIHRvbyB0YWxsIHRvIGZpdCB3aXRoaW4gYSBzaW5nbGUgcGFn
ZSB3aWxsIGV4cGFuZCBvbnRvIG11bHRpcGxlIHBhZ2VzLiBZb3UgY2FuIGxp
bWl0IGhvdyBtYW55IHBhZ2VzIGEgc2xpZGUgbWF5IGV4cGFuZCBvbnRvIHVz
aW5nIHRoZSBgcGRmTWF4UGFnZXNQZXJTbGlkZWAgY29uZmlnIG9wdGlvbiwg
Zm9yIGV4YW1wbGUgYFJldmVhbC5jb25maWd1cmUoeyBwZGZNYXhQYWdlc1Bl
clNsaWRlOiAxIH0pYCBlbnN1cmVzIHRoYXQgbm8gc2xpZGUgZXZlciBncm93
cyB0byBtb3JlIHRoYW4gb25lIHByaW50ZWQgcGFnZS4KCiMjIyBQcmludCBz
dHlsZXNoZWV0CgpUbyBlbmFibGUgdGhlIFBERiBwcmludCBjYXBhYmlsaXR5
IGluIHlvdXIgcHJlc2VudGF0aW9uLCB0aGUgc3BlY2lhbCBwcmludCBzdHls
ZXNoZWV0IGF0IFsvY3NzL3ByaW50L3BkZi5jc3NdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9oYWtpbWVsL3JldmVhbC5qcy9ibG9iL21hc3Rlci9jc3MvcHJpbnQv
cGRmLmNzcykgbXVzdCBiZSBsb2FkZWQuIFRoZSBkZWZhdWx0IGluZGV4Lmh0
bWwgZmlsZSBoYW5kbGVzIHRoaXMgZm9yIHlvdSB3aGVuIGBwcmludC1wZGZg
IGlzIGluY2x1ZGVkIGluIHRoZSBxdWVyeSBzdHJpbmcuIElmIHlvdSdyZSB1
c2luZyBhIGRpZmZlcmVudCBIVE1MIHRlbXBsYXRlLCB5b3UgY2FuIGFkZCB0
aGlzIHRvIHlvdXIgSEVBRDoKCmBgYGh0bWwKPHNjcmlwdD4KCXZhciBsaW5r
ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggJ2xpbmsnICk7CglsaW5rLnJl
bCA9ICdzdHlsZXNoZWV0JzsKCWxpbmsudHlwZSA9ICd0ZXh0L2Nzcyc7Cgls
aW5rLmhyZWYgPSB3aW5kb3cubG9jYXRpb24uc2VhcmNoLm1hdGNoKCAvcHJp
bnQtcGRmL2dpICkgPyAnY3NzL3ByaW50L3BkZi5jc3MnIDogJ2Nzcy9wcmlu
dC9wYXBlci5jc3MnOwoJZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUo
ICdoZWFkJyApWzBdLmFwcGVuZENoaWxkKCBsaW5rICk7Cjwvc2NyaXB0Pgpg
YGAKCiMjIyBJbnN0cnVjdGlvbnMKCjEuIE9wZW4geW91ciBwcmVzZW50YXRp
b24gd2l0aCBgcHJpbnQtcGRmYCBpbmNsdWRlZCBpbiB0aGUgcXVlcnkgc3Ry
aW5nIGkuZS4gaHR0cDovL2xvY2FsaG9zdDo4MDAwLz9wcmludC1wZGYuIFlv
dSBjYW4gdGVzdCB0aGlzIHdpdGggW3JldmVhbGpzLmNvbT9wcmludC1wZGZd
KGh0dHA6Ly9yZXZlYWxqcy5jb20/cHJpbnQtcGRmKS4KICAqIElmIHlvdSB3
YW50IHRvIGluY2x1ZGUgW3NwZWFrZXIgbm90ZXNdKCNzcGVha2VyLW5vdGVz
KSBpbiB5b3VyIGV4cG9ydCwgeW91IGNhbiBhcHBlbmQgYHNob3dOb3Rlcz10
cnVlYCB0byB0aGUgcXVlcnkgc3RyaW5nOiBodHRwOi8vbG9jYWxob3N0Ojgw
MDAvP3ByaW50LXBkZiZzaG93Tm90ZXM9dHJ1ZQoxLiBPcGVuIHRoZSBpbi1i
cm93c2VyIHByaW50IGRpYWxvZyAoQ1RSTC9DTUQrUCkuCjEuIENoYW5nZSB0
aGUgKipEZXN0aW5hdGlvbioqIHNldHRpbmcgdG8gKipTYXZlIGFzIFBERioq
LgoxLiBDaGFuZ2UgdGhlICoqTGF5b3V0KiogdG8gKipMYW5kc2NhcGUqKi4K
MS4gQ2hhbmdlIHRoZSAqKk1hcmdpbnMqKiB0byAqKk5vbmUqKi4KMS4gRW5h
YmxlIHRoZSAqKkJhY2tncm91bmQgZ3JhcGhpY3MqKiBvcHRpb24uCjEuIENs
aWNrICoqU2F2ZSoqLgoKIVtDaHJvbWUgUHJpbnQgU2V0dGluZ3NdKGh0dHBz
Oi8vczMuYW1hem9uYXdzLmNvbS9oYWtpbS1zdGF0aWMvcmV2ZWFsLWpzL3Bk
Zi1wcmludC1zZXR0aW5ncy0yLnBuZykKCkFsdGVybmF0aXZlbHkgeW91IGNh
biB1c2UgdGhlIFtkZWNrdGFwZV0oaHR0cHM6Ly9naXRodWIuY29tL2FzdGVm
YW51dHRpL2RlY2t0YXBlKSBwcm9qZWN0LgoKCiMjIFRoZW1pbmcKClRoZSBm
cmFtZXdvcmsgY29tZXMgd2l0aCBhIGZldyBkaWZmZXJlbnQgdGhlbWVzIGlu
Y2x1ZGVkOgoKLSBibGFjazogQmxhY2sgYmFja2dyb3VuZCwgd2hpdGUgdGV4
dCwgYmx1ZSBsaW5rcyAoZGVmYXVsdCB0aGVtZSkKLSB3aGl0ZTogV2hpdGUg
YmFja2dyb3VuZCwgYmxhY2sgdGV4dCwgYmx1ZSBsaW5rcwotIGxlYWd1ZTog
R3JheSBiYWNrZ3JvdW5kLCB3aGl0ZSB0ZXh0LCBibHVlIGxpbmtzIChkZWZh
dWx0IHRoZW1lIGZvciByZXZlYWwuanMgPCAzLjAuMCkKLSBiZWlnZTogQmVp
Z2UgYmFja2dyb3VuZCwgZGFyayB0ZXh0LCBicm93biBsaW5rcwotIHNreTog
Qmx1ZSBiYWNrZ3JvdW5kLCB0aGluIGRhcmsgdGV4dCwgYmx1ZSBsaW5rcwot
IG5pZ2h0OiBCbGFjayBiYWNrZ3JvdW5kLCB0aGljayB3aGl0ZSB0ZXh0LCBv
cmFuZ2UgbGlua3MKLSBzZXJpZjogQ2FwcHVjY2lubyBiYWNrZ3JvdW5kLCBn
cmF5IHRleHQsIGJyb3duIGxpbmtzCi0gc2ltcGxlOiBXaGl0ZSBiYWNrZ3Jv
dW5kLCBibGFjayB0ZXh0LCBibHVlIGxpbmtzCi0gc29sYXJpemVkOiBDcmVh
bS1jb2xvcmVkIGJhY2tncm91bmQsIGRhcmsgZ3JlZW4gdGV4dCwgYmx1ZSBs
aW5rcwoKRWFjaCB0aGVtZSBpcyBhdmFpbGFibGUgYXMgYSBzZXBhcmF0ZSBz
dHlsZXNoZWV0LiBUbyBjaGFuZ2UgdGhlbWUgeW91IHdpbGwgbmVlZCB0byBy
ZXBsYWNlICoqYmxhY2sqKiBiZWxvdyB3aXRoIHlvdXIgZGVzaXJlZCB0aGVt
ZSBuYW1lIGluIGluZGV4Lmh0bWw6CgpgYGBodG1sCjxsaW5rIHJlbD0ic3R5
bGVzaGVldCIgaHJlZj0iY3NzL3RoZW1lL2JsYWNrLmNzcyIgaWQ9InRoZW1l
Ij4KYGBgCgpJZiB5b3Ugd2FudCB0byBhZGQgYSB0aGVtZSBvZiB5b3VyIG93
biBzZWUgdGhlIGluc3RydWN0aW9ucyBoZXJlOiBbL2Nzcy90aGVtZS9SRUFE
TUUubWRdKGh0dHBzOi8vZ2l0aHViLmNvbS9oYWtpbWVsL3JldmVhbC5qcy9i
bG9iL21hc3Rlci9jc3MvdGhlbWUvUkVBRE1FLm1kKS4KCgojIyBTcGVha2Vy
IE5vdGVzCgpyZXZlYWwuanMgY29tZXMgd2l0aCBhIHNwZWFrZXIgbm90ZXMg
cGx1Z2luIHdoaWNoIGNhbiBiZSB1c2VkIHRvIHByZXNlbnQgcGVyLXNsaWRl
IG5vdGVzIGluIGEgc2VwYXJhdGUgYnJvd3NlciB3aW5kb3cuIFRoZSBub3Rl
cyB3aW5kb3cgYWxzbyBnaXZlcyB5b3UgYSBwcmV2aWV3IG9mIHRoZSBuZXh0
IHVwY29taW5nIHNsaWRlIHNvIGl0IG1heSBiZSBoZWxwZnVsIGV2ZW4gaWYg
eW91IGhhdmVuJ3Qgd3JpdHRlbiBhbnkgbm90ZXMuIFByZXNzIHRoZSDCu1PC
qyBrZXkgb24geW91ciBrZXlib2FyZCB0byBvcGVuIHRoZSBub3RlcyB3aW5k
b3cuCgpBIHNwZWFrZXIgdGltZXIgc3RhcnRzIGFzIHNvb24gYXMgdGhlIHNw
ZWFrZXIgdmlldyBpcyBvcGVuZWQuIFlvdSBjYW4gcmVzZXQgaXQgdG8gMDA6
MDA6MDAgYXQgYW55IHRpbWUgYnkgc2ltcGx5IGNsaWNraW5nL3RhcHBpbmcg
b24gaXQuCgpOb3RlcyBhcmUgZGVmaW5lZCBieSBhcHBlbmRpbmcgYW4gYDxh
c2lkZT5gIGVsZW1lbnQgdG8gYSBzbGlkZSBhcyBzZWVuIGJlbG93LiBZb3Ug
Y2FuIGFkZCB0aGUgYGRhdGEtbWFya2Rvd25gIGF0dHJpYnV0ZSB0byB0aGUg
YXNpZGUgZWxlbWVudCBpZiB5b3UgcHJlZmVyIHdyaXRpbmcgbm90ZXMgdXNp
bmcgTWFya2Rvd24uCgpBbHRlcm5hdGl2ZWx5IHlvdSBjYW4gYWRkIHlvdXIg
bm90ZXMgaW4gYSBgZGF0YS1ub3Rlc2AgYXR0cmlidXRlIG9uIHRoZSBzbGlk
ZS4gTGlrZSBgPHNlY3Rpb24gZGF0YS1ub3Rlcz0iU29tZXRoaW5nIGltcG9y
dGFudCI+PC9zZWN0aW9uPmAuCgpXaGVuIHVzZWQgbG9jYWxseSwgdGhpcyBm
ZWF0dXJlIHJlcXVpcmVzIHRoYXQgcmV2ZWFsLmpzIFtydW5zIGZyb20gYSBs
b2NhbCB3ZWIgc2VydmVyXSgjZnVsbC1zZXR1cCkuCgpgYGBodG1sCjxzZWN0
aW9uPgoJPGgyPlNvbWUgU2xpZGU8L2gyPgoKCTxhc2lkZSBjbGFzcz0ibm90
ZXMiPgoJCU9oIGhleSwgdGhlc2UgYXJlIHNvbWUgbm90ZXMuIFRoZXknbGwg
YmUgaGlkZGVuIGluIHlvdXIgcHJlc2VudGF0aW9uLCBidXQgeW91IGNhbiBz
ZWUgdGhlbSBpZiB5b3Ugb3BlbiB0aGUgc3BlYWtlciBub3RlcyB3aW5kb3cg
KGhpdCDCu1PCqyBvbiB5b3VyIGtleWJvYXJkKS4KCTwvYXNpZGU+Cjwvc2Vj
dGlvbj4KYGBgCgpJZiB5b3UncmUgdXNpbmcgdGhlIGV4dGVybmFsIE1hcmtk
b3duIHBsdWdpbiwgeW91IGNhbiBhZGQgbm90ZXMgd2l0aCB0aGUgaGVscCBv
ZiBhIHNwZWNpYWwgZGVsaW1pdGVyOgoKYGBgaHRtbAo8c2VjdGlvbiBkYXRh
LW1hcmtkb3duPSJleGFtcGxlLm1kIiBkYXRhLXNlcGFyYXRvcj0iXlxuXG5c
biIgZGF0YS1zZXBhcmF0b3ItdmVydGljYWw9Il5cblxuIiBkYXRhLXNlcGFy
YXRvci1ub3Rlcz0iXk5vdGU6Ij48L3NlY3Rpb24+CgojIFRpdGxlCiMjIFN1
Yi10aXRsZQoKSGVyZSBpcyBzb21lIGNvbnRlbnQuLi4KCk5vdGU6ClRoaXMg
d2lsbCBvbmx5IGRpc3BsYXkgaW4gdGhlIG5vdGVzIHdpbmRvdy4KYGBgCgoj
IyMjIFNoYXJlIGFuZCBQcmludCBTcGVha2VyIE5vdGVzCgpOb3RlcyBhcmUg
b25seSB2aXNpYmxlIHRvIHRoZSBzcGVha2VyIGluc2lkZSBvZiB0aGUgc3Bl
YWtlciB2aWV3LiBJZiB5b3Ugd2lzaCB0byBzaGFyZSB5b3VyIG5vdGVzIHdp
dGggb3RoZXJzIHlvdSBjYW4gaW5pdGlhbGl6ZSByZXZlYWwuanMgd2l0aCB0
aGUgYHNob3dOb3Rlc2AgY29uZmlndXJhdGlvbiB2YWx1ZSBzZXQgdG8gYHRy
dWVgLiBOb3RlcyB3aWxsIGFwcGVhciBhbG9uZyB0aGUgYm90dG9tIG9mIHRo
ZSBwcmVzZW50YXRpb25zLgoKV2hlbiBgc2hvd05vdGVzYCBpcyBlbmFibGVk
IG5vdGVzIGFyZSBhbHNvIGluY2x1ZGVkIHdoZW4geW91IFtleHBvcnQgdG8g
UERGXShodHRwczovL2dpdGh1Yi5jb20vaGFraW1lbC9yZXZlYWwuanMjcGRm
LWV4cG9ydCkuIEJ5IGRlZmF1bHQsIG5vdGVzIGFyZSBwcmludGVkIGluIGEg
Ym94IG9uIHRvcCBvZiB0aGUgc2xpZGUuIElmIHlvdSdkIHJhdGhlciBwcmlu
dCB0aGVtIG9uIGEgc2VwYXJhdGUgcGFnZSwgYWZ0ZXIgdGhlIHNsaWRlLCBz
ZXQgYHNob3dOb3RlczogInNlcGFyYXRlLXBhZ2UiYC4KCiMjIyMgU3BlYWtl
ciBub3RlcyBjbG9jayBhbmQgdGltZXJzCgpUaGUgc3BlYWtlciBub3RlcyB3
aW5kb3cgd2lsbCBhbHNvIHNob3c6CgotIFRpbWUgZWxhcHNlZCBzaW5jZSB0
aGUgYmVnaW5uaW5nIG9mIHRoZSBwcmVzZW50YXRpb24uICBJZiB5b3UgaG92
ZXIgdGhlIG1vdXNlIGFib3ZlIHRoaXMgc2VjdGlvbiwgYSB0aW1lciByZXNl
dCBidXR0b24gd2lsbCBhcHBlYXIuCi0gQ3VycmVudCB3YWxsLWNsb2NrIHRp
bWUKLSAoT3B0aW9uYWxseSkgYSBwYWNpbmcgdGltZXIgd2hpY2ggaW5kaWNh
dGVzIHdoZXRoZXIgdGhlIGN1cnJlbnQgcGFjZSBvZiB0aGUgcHJlc2VudGF0
aW9uIGlzIG9uIHRyYWNrIGZvciB0aGUgcmlnaHQgdGltaW5nIChzaG93biBp
biBncmVlbiksIGFuZCBpZiBub3QsIHdoZXRoZXIgdGhlIHByZXNlbnRlciBz
aG91bGQgc3BlZWQgdXAgKHNob3duIGluIHJlZCkgb3IgaGFzIHRoZSBsdXh1
cnkgb2Ygc2xvd2luZyBkb3duIChibHVlKS4KClRoZSBwYWNpbmcgdGltZXIg
Y2FuIGJlIGVuYWJsZWQgYnkgY29uZmlndXJpbmcgYnkgdGhlIGBkZWZhdWx0
VGltaW5nYCBwYXJhbWV0ZXIgaW4gdGhlIGBSZXZlYWxgIGNvbmZpZ3VyYXRp
b24gYmxvY2ssIHdoaWNoIHNwZWNpZmllcyB0aGUgbnVtYmVyIG9mIHNlY29u
ZHMgcGVyIHNsaWRlLiAgMTIwIGNhbiBiZSBhIHJlYXNvbmFibGUgcnVsZSBv
ZiB0aHVtYi4gIFRpbWluZ3MgY2FuIGFsc28gYmUgZ2l2ZW4gcGVyIHNsaWRl
IGA8c2VjdGlvbj5gIGJ5IHNldHRpbmcgdGhlIGBkYXRhLXRpbWluZ2AgYXR0
cmlidXRlLiAgQm90aCB2YWx1ZXMgYXJlIGluIG51bWJlcnMgb2Ygc2Vjb25k
cy4KCgojIyBTZXJ2ZXIgU2lkZSBTcGVha2VyIE5vdGVzCgpJbiBzb21lIGNh
c2VzIGl0IGNhbiBiZSBkZXNpcmFibGUgdG8gcnVuIG5vdGVzIG9uIGEgc2Vw
YXJhdGUgZGV2aWNlIGZyb20gdGhlIG9uZSB5b3UncmUgcHJlc2VudGluZyBv
bi4gVGhlIE5vZGUuanMtYmFzZWQgbm90ZXMgcGx1Z2luIGxldHMgeW91IGRv
IHRoaXMgdXNpbmcgdGhlIHNhbWUgbm90ZSBkZWZpbml0aW9ucyBhcyBpdHMg
Y2xpZW50IHNpZGUgY291bnRlcnBhcnQuIEluY2x1ZGUgdGhlIHJlcXVpcmVk
IHNjcmlwdHMgYnkgYWRkaW5nIHRoZSBmb2xsb3dpbmcgZGVwZW5kZW5jaWVz
OgoKYGBgamF2YXNjcmlwdApSZXZlYWwuaW5pdGlhbGl6ZSh7CgkvLyAuLi4K
CglkZXBlbmRlbmNpZXM6IFsKCQl7IHNyYzogJ3NvY2tldC5pby9zb2NrZXQu
aW8uanMnLCBhc3luYzogdHJ1ZSB9LAoJCXsgc3JjOiAncGx1Z2luL25vdGVz
LXNlcnZlci9jbGllbnQuanMnLCBhc3luYzogdHJ1ZSB9CgldCn0pOwpgYGAK
ClRoZW46CgoxLiBJbnN0YWxsIFtOb2RlLmpzXShodHRwOi8vbm9kZWpzLm9y
Zy8pICg0LjAuMCBvciBsYXRlcikKMi4gUnVuIGBucG0gaW5zdGFsbGAKMy4g
UnVuIGBub2RlIHBsdWdpbi9ub3Rlcy1zZXJ2ZXJgCgoKIyMgUGx1Z2lucwoK
UGx1Z2lucyBzaG91bGQgcmVnaXN0ZXIgdGhlbXNlbHZlcyB3aXRoIHJldmVh
bC5qcyBieSBjYWxsaW5nIGBSZXZlYWwucmVnaXN0ZXJQbHVnaW4oICdteVBs
dWdpbklEJywgTXlQbHVnaW4gKWAuIFJlZ2lzdGVyZWQgcGx1Z2luIGluc3Rh
bmNlcyBjYW4gb3B0aW9uYWxseSBleHBvc2UgYW4gImluaXQiIGZ1bmN0aW9u
IHRoYXQgcmV2ZWFsLmpzIHdpbGwgY2FsbCB0byBpbml0aWFsaXplIHRoZW0u
CgpXaGVuIHJldmVhbC5qcyBpcyBib290ZWQgdXAgdmlhIGBSZXZlYWwuaW5p
dGlhbGl6ZSgpYCwgaXQgd2lsbCBnbyB0aHJvdWdoIGFsbCByZWdpc3RlcmVk
IHBsdWdpbnMgYW5kIGludm9rZSB0aGVpciAiaW5pdCIgbWV0aG9kcy4gSWYg
dGhlICJpbml0IiBtZXRob2QgcmV0dXJucyBhIFByb21pc2UsIHJldmVhbC5q
cyB3aWxsIHdhaXQgZm9yIHRoYXQgcHJvbWlzZSB0byBiZSBmdWxsZmlsbGVk
IGJlZm9yZSBmaW5zaGluZyB0aGUgc3RhcnR1cCBzZXF1ZW5jZSBhbmQgZmly
aW5nIHRoZSBbcmVhZHldKCNyZWFkeS1ldmVudCkgZXZlbnQuIEhlcmUncyBh
biBleGFtcGxlIG9mIGEgcGx1Z2luIHRoYXQgZG9lcyBzb21lIGFzeW5jaHJv
bm91cyB3b3JrIGJlZm9yZSByZXZlYWwuanMgY2FuIHByb2NlZWQ6CgpgYGBq
YXZhc2NyaXB0CmxldCBNeVBsdWdpbiA9IHsKCWluaXQ6ICgpID0+ICBuZXcg
UHJvbWlzZSggcmVzb2x2ZSA9PiBzZXRUaW1lb3V0KCByZXNvbHZlLCAzMDAw
ICkgKQp9OwpSZXZlYWwucmVnaXN0ZXJQbHVnaW4oICdteVBsdWdpbicsIE15
UGx1Z2luICk7ClJldmVhbC5hZGRFdmVudExpc3RlbmVyKCAncmVhZHknLCAo
KSA9PiBjb25zb2xlLmxvZyggJ1RocmVlIHNlY29uZHMgbGF0ZXIuLi4nICkg
KTsKUmV2ZWFsLmluaXRpYWxpemUoKTsKYGBgCgpJZiB0aGUgaW5pdCBtZXRo
b2QgZG9lcyBfbm90XyByZXR1cm4gYSBQcm9taXNlLCB0aGUgcGx1Z2luIGlz
IGNvbnNpZGVyZWQgcmVhZHkgcmlnaHQgYXdheSBhbmQgd2lsbCBub3QgaG9s
ZCB1cCB0aGUgcmV2ZWFsLmpzIHN0YXJ0dXAgc2VxdWVuY2UuCgojIyMgUmV0
cmlldmluZyBQbHVnaW5zCgpJZiB5b3Ugd2FudCB0byBjaGVjayBpZiBhIHNw
ZWNpZmljIHBsdWdpbiBpcyByZWdpc3RlcmVkIHlvdSBjYW4gdXNlIHRoZSBg
UmV2ZWFsLmhhc1BsdWdpbmAgbWV0aG9kIGFuZCBwYXNzIGluIGEgcGx1Z2lu
IElELCBmb3IgZXhhbXBsZTogYFJldmVhbC5oYXNQbHVnaW4oICdteVBsdWdp
bicgKWAuIElmIHlvdSB3YW50IHRvIHJldHJpZXZlIGEgcGx1Z2luIGluc3Rh
bmNlIHlvdSBjYW4gdXNlIGBSZXZlYWwuZ2V0UGx1Z2luKCAnbXlQbHVnaW4n
IClgLgoKCiMjIE11bHRpcGxleGluZwoKVGhlIG11bHRpcGxleCBwbHVnaW4g
YWxsb3dzIHlvdXIgYXVkaWVuY2UgdG8gdmlldyB0aGUgc2xpZGVzIG9mIHRo
ZSBwcmVzZW50YXRpb24geW91IGFyZSBjb250cm9sbGluZyBvbiB0aGVpciBv
d24gcGhvbmUsIHRhYmxldCBvciBsYXB0b3AuIEFzIHRoZSBtYXN0ZXIgcHJl
c2VudGF0aW9uIG5hdmlnYXRlcyB0aGUgc2xpZGVzLCBhbGwgY2xpZW50IHBy
ZXNlbnRhdGlvbnMgd2lsbCB1cGRhdGUgaW4gcmVhbCB0aW1lLiBTZWUgYSBk
ZW1vIGF0IFtodHRwczovL3JldmVhbC1qcy1tdWx0aXBsZXgtY2NqYmVnbWFp
aS5ub3cuc2gvXShodHRwczovL3JldmVhbC1qcy1tdWx0aXBsZXgtY2NqYmVn
bWFpaS5ub3cuc2gvKS4KClRoZSBtdWx0aXBsZXggcGx1Z2luIG5lZWRzIHRo
ZSBmb2xsb3dpbmcgMyB0aGluZ3MgdG8gb3BlcmF0ZToKCjEuIE1hc3RlciBw
cmVzZW50YXRpb24gdGhhdCBoYXMgY29udHJvbAoyLiBDbGllbnQgcHJlc2Vu
dGF0aW9ucyB0aGF0IGZvbGxvdyB0aGUgbWFzdGVyCjMuIFNvY2tldC5pbyBz
ZXJ2ZXIgdG8gYnJvYWRjYXN0IGV2ZW50cyBmcm9tIHRoZSBtYXN0ZXIgdG8g
dGhlIGNsaWVudHMKCiMjIyMgTWFzdGVyIHByZXNlbnRhdGlvbgoKU2VydmVk
IGZyb20gYSBzdGF0aWMgZmlsZSBzZXJ2ZXIgYWNjZXNzaWJsZSAocHJlZmVy
YWJseSkgb25seSB0byB0aGUgcHJlc2VudGVyLiBUaGlzIG5lZWQgb25seSBi
ZSBvbiB5b3VyICh0aGUgcHJlc2VudGVyJ3MpIGNvbXB1dGVyLiAoSXQncyBz
YWZlciB0byBydW4gdGhlIG1hc3RlciBwcmVzZW50YXRpb24gZnJvbSB5b3Vy
IG93biBjb21wdXRlciwgc28gaWYgdGhlIHZlbnVlJ3MgSW50ZXJuZXQgZ29l
cyBkb3duIGl0IGRvZXNuJ3Qgc3RvcCB0aGUgc2hvdy4pIEFuIGV4YW1wbGUg
d291bGQgYmUgdG8gZXhlY3V0ZSB0aGUgZm9sbG93aW5nIGNvbW1hbmRzIGlu
IHRoZSBkaXJlY3Rvcnkgb2YgeW91ciBtYXN0ZXIgcHJlc2VudGF0aW9uOgoK
MS4gYG5wbSBpbnN0YWxsIG5vZGUtc3RhdGljYAoyLiBgc3RhdGljYAoKSWYg
eW91IHdhbnQgdG8gdXNlIHRoZSBzcGVha2VyIG5vdGVzIHBsdWdpbiB3aXRo
IHlvdXIgbWFzdGVyIHByZXNlbnRhdGlvbiB0aGVuIG1ha2Ugc3VyZSB5b3Ug
aGF2ZSB0aGUgc3BlYWtlciBub3RlcyBwbHVnaW4gY29uZmlndXJlZCBjb3Jy
ZWN0bHkgYWxvbmcgd2l0aCB0aGUgY29uZmlndXJhdGlvbiBzaG93biBiZWxv
dywgdGhlbiBleGVjdXRlIGBub2RlIHBsdWdpbi9ub3Rlcy1zZXJ2ZXJgIGlu
IHRoZSBkaXJlY3Rvcnkgb2YgeW91ciBtYXN0ZXIgcHJlc2VudGF0aW9uLiBU
aGUgY29uZmlndXJhdGlvbiBiZWxvdyB3aWxsIGNhdXNlIGl0IHRvIGNvbm5l
Y3QgdG8gdGhlIHNvY2tldC5pbyBzZXJ2ZXIgYXMgYSBtYXN0ZXIsIGFzIHdl
bGwgYXMgbGF1bmNoIHlvdXIgc3BlYWtlci1ub3Rlcy9zdGF0aWMtZmlsZSBz
ZXJ2ZXIuCgpZb3UgY2FuIHRoZW4gYWNjZXNzIHlvdXIgbWFzdGVyIHByZXNl
bnRhdGlvbiBhdCBgaHR0cDovL2xvY2FsaG9zdDoxOTQ3YAoKRXhhbXBsZSBj
b25maWd1cmF0aW9uOgoKYGBgamF2YXNjcmlwdApSZXZlYWwuaW5pdGlhbGl6
ZSh7CgkvLyBvdGhlciBvcHRpb25zLi4uCgoJbXVsdGlwbGV4OiB7CgkJLy8g
RXhhbXBsZSB2YWx1ZXMuIFRvIGdlbmVyYXRlIHlvdXIgb3duLCBzZWUgdGhl
IHNvY2tldC5pbyBzZXJ2ZXIgaW5zdHJ1Y3Rpb25zLgoJCXNlY3JldDogJzEz
NjUyODA1MzIwNzk0MjcyMDg0JywgLy8gT2J0YWluZWQgZnJvbSB0aGUgc29j
a2V0LmlvIHNlcnZlci4gR2l2ZXMgdGhpcyAodGhlIG1hc3RlcikgY29udHJv
bCBvZiB0aGUgcHJlc2VudGF0aW9uCgkJaWQ6ICcxZWE4NzU2NzRiMTdjYTc2
JywgLy8gT2J0YWluZWQgZnJvbSBzb2NrZXQuaW8gc2VydmVyCgkJdXJsOiAn
aHR0cHM6Ly9yZXZlYWwtanMtbXVsdGlwbGV4LWNjamJlZ21haWkubm93LnNo
JyAvLyBMb2NhdGlvbiBvZiBzb2NrZXQuaW8gc2VydmVyCgl9LAoKCS8vIERv
bid0IGZvcmdldCB0byBhZGQgdGhlIGRlcGVuZGVuY2llcwoJZGVwZW5kZW5j
aWVzOiBbCgkJeyBzcmM6ICcvL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgv
bGlicy9zb2NrZXQuaW8vMi4yLjAvc29ja2V0LmlvLmpzJywgYXN5bmM6IHRy
dWUgfSwKCQl7IHNyYzogJ3BsdWdpbi9tdWx0aXBsZXgvbWFzdGVyLmpzJywg
YXN5bmM6IHRydWUgfSwKCgkJLy8gYW5kIGlmIHlvdSB3YW50IHNwZWFrZXIg
bm90ZXMKCQl7IHNyYzogJ3BsdWdpbi9ub3Rlcy1zZXJ2ZXIvY2xpZW50Lmpz
JywgYXN5bmM6IHRydWUgfQoKCQkvLyBvdGhlciBkZXBlbmRlbmNpZXMuLi4K
CV0KfSk7CmBgYAoKIyMjIyBDbGllbnQgcHJlc2VudGF0aW9uCgpTZXJ2ZWQg
ZnJvbSBhIHB1YmxpY2x5IGFjY2Vzc2libGUgc3RhdGljIGZpbGUgc2VydmVy
LiBFeGFtcGxlcyBpbmNsdWRlOiBHaXRIdWIgUGFnZXMsIEFtYXpvbiBTMywg
RHJlYW1ob3N0LCBBa2FtYWksIGV0Yy4gVGhlIG1vcmUgcmVsaWFibGUsIHRo
ZSBiZXR0ZXIuIFlvdXIgYXVkaWVuY2UgY2FuIHRoZW4gYWNjZXNzIHRoZSBj
bGllbnQgcHJlc2VudGF0aW9uIHZpYSBgaHR0cDovL2V4YW1wbGUuY29tL3Bh
dGgvdG8vcHJlc2VudGF0aW9uL2NsaWVudC9pbmRleC5odG1sYCwgd2l0aCB0
aGUgY29uZmlndXJhdGlvbiBiZWxvdyBjYXVzaW5nIHRoZW0gdG8gY29ubmVj
dCB0byB0aGUgc29ja2V0LmlvIHNlcnZlciBhcyBjbGllbnRzLgoKRXhhbXBs
ZSBjb25maWd1cmF0aW9uOgoKYGBgamF2YXNjcmlwdApSZXZlYWwuaW5pdGlh
bGl6ZSh7CgkvLyBvdGhlciBvcHRpb25zLi4uCgoJbXVsdGlwbGV4OiB7CgkJ
Ly8gRXhhbXBsZSB2YWx1ZXMuIFRvIGdlbmVyYXRlIHlvdXIgb3duLCBzZWUg
dGhlIHNvY2tldC5pbyBzZXJ2ZXIgaW5zdHJ1Y3Rpb25zLgoJCXNlY3JldDog
bnVsbCwgLy8gbnVsbCBzbyB0aGUgY2xpZW50cyBkbyBub3QgaGF2ZSBjb250
cm9sIG9mIHRoZSBtYXN0ZXIgcHJlc2VudGF0aW9uCgkJaWQ6ICcxZWE4NzU2
NzRiMTdjYTc2JywgLy8gaWQsIG9idGFpbmVkIGZyb20gc29ja2V0LmlvIHNl
cnZlcgoJCXVybDogJ2h0dHBzOi8vcmV2ZWFsLWpzLW11bHRpcGxleC1jY2pi
ZWdtYWlpLm5vdy5zaCcgLy8gTG9jYXRpb24gb2Ygc29ja2V0LmlvIHNlcnZl
cgoJfSwKCgkvLyBEb24ndCBmb3JnZXQgdG8gYWRkIHRoZSBkZXBlbmRlbmNp
ZXMKCWRlcGVuZGVuY2llczogWwoJCXsgc3JjOiAnLy9jZG5qcy5jbG91ZGZs
YXJlLmNvbS9hamF4L2xpYnMvc29ja2V0LmlvLzIuMi4wL3NvY2tldC5pby5q
cycsIGFzeW5jOiB0cnVlIH0sCgkJeyBzcmM6ICdwbHVnaW4vbXVsdGlwbGV4
L2NsaWVudC5qcycsIGFzeW5jOiB0cnVlIH0KCgkJLy8gb3RoZXIgZGVwZW5k
ZW5jaWVzLi4uCgldCn0pOwpgYGAKCiMjIyMgU29ja2V0LmlvIHNlcnZlcgoK
U2VydmVyIHRoYXQgcmVjZWl2ZXMgdGhlIGBzbGlkZUNoYW5nZWRgIGV2ZW50
cyBmcm9tIHRoZSBtYXN0ZXIgcHJlc2VudGF0aW9uIGFuZCBicm9hZGNhc3Rz
IHRoZW0gb3V0IHRvIHRoZSBjb25uZWN0ZWQgY2xpZW50IHByZXNlbnRhdGlv
bnMuIFRoaXMgbmVlZHMgdG8gYmUgcHVibGljbHkgYWNjZXNzaWJsZS4gWW91
IGNhbiBydW4geW91ciBvd24gc29ja2V0LmlvIHNlcnZlciB3aXRoIHRoZSBj
b21tYW5kczoKCjEuIGBucG0gaW5zdGFsbGAKMi4gYG5vZGUgcGx1Z2luL211
bHRpcGxleGAKCk9yIHlvdSBjYW4gdXNlIHRoZSBzb2NrZXQuaW8gc2VydmVy
IGF0IFtodHRwczovL3JldmVhbC1qcy1tdWx0aXBsZXgtY2NqYmVnbWFpaS5u
b3cuc2gvXShodHRwczovL3JldmVhbC1qcy1tdWx0aXBsZXgtY2NqYmVnbWFp
aS5ub3cuc2gvKS4KCllvdSdsbCBuZWVkIHRvIGdlbmVyYXRlIGEgdW5pcXVl
IHNlY3JldCBhbmQgdG9rZW4gcGFpciBmb3IgeW91ciBtYXN0ZXIgYW5kIGNs
aWVudCBwcmVzZW50YXRpb25zLiBUbyBkbyBzbywgdmlzaXQgYGh0dHA6Ly9l
eGFtcGxlLmNvbS90b2tlbmAsIHdoZXJlIGBodHRwOi8vZXhhbXBsZS5jb21g
IGlzIHRoZSBsb2NhdGlvbiBvZiB5b3VyIHNvY2tldC5pbyBzZXJ2ZXIuIE9y
IGlmIHlvdSdyZSBnb2luZyB0byB1c2UgdGhlIHNvY2tldC5pbyBzZXJ2ZXIg
YXQgW2h0dHBzOi8vcmV2ZWFsLWpzLW11bHRpcGxleC1jY2piZWdtYWlpLm5v
dy5zaC9dKGh0dHBzOi8vcmV2ZWFsLWpzLW11bHRpcGxleC1jY2piZWdtYWlp
Lm5vdy5zaC8pLCB2aXNpdCBbaHR0cHM6Ly9yZXZlYWwtanMtbXVsdGlwbGV4
LWNjamJlZ21haWkubm93LnNoL3Rva2VuXShodHRwczovL3JldmVhbC1qcy1t
dWx0aXBsZXgtY2NqYmVnbWFpaS5ub3cuc2gvdG9rZW4pLgoKWW91IGFyZSB2
ZXJ5IHdlbGNvbWUgdG8gcG9pbnQgeW91ciBwcmVzZW50YXRpb25zIGF0IHRo
ZSBTb2NrZXQuaW8gc2VydmVyIHJ1bm5pbmcgYXQgW2h0dHBzOi8vcmV2ZWFs
LWpzLW11bHRpcGxleC1jY2piZWdtYWlpLm5vdy5zaC9dKGh0dHBzOi8vcmV2
ZWFsLWpzLW11bHRpcGxleC1jY2piZWdtYWlpLm5vdy5zaC8pLCBidXQgYXZh
aWxhYmlsaXR5IGFuZCBzdGFiaWxpdHkgYXJlIG5vdCBndWFyYW50ZWVkLgoK
Rm9yIGFueXRoaW5nIG1pc3Npb24gY3JpdGljYWwgSSByZWNvbW1lbmQgeW91
IHJ1biB5b3VyIG93biBzZXJ2ZXIuIFRoZSBlYXNpZXN0IHdheSB0byBkbyB0
aGlzIGlzIGJ5IGluc3RhbGxpbmcgW25vd10oaHR0cHM6Ly96ZWl0LmNvL25v
dykuIFdpdGggdGhhdCBpbnN0YWxsZWQsIGRlcGxveWluZyB5b3VyIG93biBN
dWx0aXBsZXggc2VydmVyIGlzIGFzIGVhc3kgcnVubmluZyB0aGUgZm9sbG93
aW5nIGNvbW1hbmQgZnJvbSB0aGUgcmV2ZWFsLmpzIGZvbGRlcjogYG5vdyBw
bHVnaW4vbXVsdGlwbGV4YC4KCiMjIyMjIHNvY2tldC5pbyBzZXJ2ZXIgYXMg
ZmlsZSBzdGF0aWMgc2VydmVyCgpUaGUgc29ja2V0LmlvIHNlcnZlciBjYW4g
cGxheSB0aGUgcm9sZSBvZiBzdGF0aWMgZmlsZSBzZXJ2ZXIgZm9yIHlvdXIg
Y2xpZW50IHByZXNlbnRhdGlvbiwgYXMgaW4gdGhlIGV4YW1wbGUgYXQgW2h0
dHBzOi8vcmV2ZWFsLWpzLW11bHRpcGxleC1jY2piZWdtYWlpLm5vdy5zaC9d
KGh0dHBzOi8vcmV2ZWFsLWpzLW11bHRpcGxleC1jY2piZWdtYWlpLm5vdy5z
aC8pLiAoT3BlbiBbaHR0cHM6Ly9yZXZlYWwtanMtbXVsdGlwbGV4LWNjamJl
Z21haWkubm93LnNoL10oaHR0cHM6Ly9yZXZlYWwtanMtbXVsdGlwbGV4LWNj
amJlZ21haWkubm93LnNoLykgaW4gdHdvIGJyb3dzZXJzLiBOYXZpZ2F0ZSB0
aHJvdWdoIHRoZSBzbGlkZXMgb24gb25lLCBhbmQgdGhlIG90aGVyIHdpbGwg
dXBkYXRlIHRvIG1hdGNoLikKCkV4YW1wbGUgY29uZmlndXJhdGlvbjoKCmBg
YGphdmFzY3JpcHQKUmV2ZWFsLmluaXRpYWxpemUoewoJLy8gb3RoZXIgb3B0
aW9ucy4uLgoKCW11bHRpcGxleDogewoJCS8vIEV4YW1wbGUgdmFsdWVzLiBU
byBnZW5lcmF0ZSB5b3VyIG93biwgc2VlIHRoZSBzb2NrZXQuaW8gc2VydmVy
IGluc3RydWN0aW9ucy4KCQlzZWNyZXQ6IG51bGwsIC8vIG51bGwgc28gdGhl
IGNsaWVudHMgZG8gbm90IGhhdmUgY29udHJvbCBvZiB0aGUgbWFzdGVyIHBy
ZXNlbnRhdGlvbgoJCWlkOiAnMWVhODc1Njc0YjE3Y2E3NicsIC8vIGlkLCBv
YnRhaW5lZCBmcm9tIHNvY2tldC5pbyBzZXJ2ZXIKCQl1cmw6ICdleGFtcGxl
LmNvbTo4MCcgLy8gTG9jYXRpb24gb2YgeW91ciBzb2NrZXQuaW8gc2VydmVy
Cgl9LAoKCS8vIERvbid0IGZvcmdldCB0byBhZGQgdGhlIGRlcGVuZGVuY2ll
cwoJZGVwZW5kZW5jaWVzOiBbCgkJeyBzcmM6ICcvL2NkbmpzLmNsb3VkZmxh
cmUuY29tL2FqYXgvbGlicy9zb2NrZXQuaW8vMi4yLjAvc29ja2V0LmlvLmpz
JywgYXN5bmM6IHRydWUgfSwKCQl7IHNyYzogJ3BsdWdpbi9tdWx0aXBsZXgv
Y2xpZW50LmpzJywgYXN5bmM6IHRydWUgfQoKCQkvLyBvdGhlciBkZXBlbmRl
bmNpZXMuLi4KCV0KYGBgCgpJdCBjYW4gYWxzbyBwbGF5IHRoZSByb2xlIG9m
IHN0YXRpYyBmaWxlIHNlcnZlciBmb3IgeW91ciBtYXN0ZXIgcHJlc2VudGF0
aW9uIGFuZCBjbGllbnQgcHJlc2VudGF0aW9ucyBhdCB0aGUgc2FtZSB0aW1l
IChhcyBsb25nIGFzIHlvdSBkb24ndCB3YW50IHRvIHVzZSBzcGVha2VyIG5v
dGVzKS4gKE9wZW4gW2h0dHBzOi8vcmV2ZWFsLWpzLW11bHRpcGxleC1jY2pi
ZWdtYWlpLm5vdy5zaC9dKGh0dHBzOi8vcmV2ZWFsLWpzLW11bHRpcGxleC1j
Y2piZWdtYWlpLm5vdy5zaC8pIGluIHR3byBicm93c2Vycy4gTmF2aWdhdGUg
dGhyb3VnaCB0aGUgc2xpZGVzIG9uIG9uZSwgYW5kIHRoZSBvdGhlciB3aWxs
IHVwZGF0ZSB0byBtYXRjaC4gTmF2aWdhdGUgdGhyb3VnaCB0aGUgc2xpZGVz
IG9uIHRoZSBzZWNvbmQsIGFuZCB0aGUgZmlyc3Qgd2lsbCB1cGRhdGUgdG8g
bWF0Y2guKSBUaGlzIGlzIHByb2JhYmx5IG5vdCBkZXNpcmFibGUsIGJlY2F1
c2UgeW91IGRvbid0IHdhbnQgeW91ciBhdWRpZW5jZSB0byBtZXNzIHdpdGgg
eW91ciBzbGlkZXMgd2hpbGUgeW91J3JlIHByZXNlbnRpbmcuIDspCgpFeGFt
cGxlIGNvbmZpZ3VyYXRpb246CgpgYGBqYXZhc2NyaXB0ClJldmVhbC5pbml0
aWFsaXplKHsKCS8vIG90aGVyIG9wdGlvbnMuLi4KCgltdWx0aXBsZXg6IHsK
CQkvLyBFeGFtcGxlIHZhbHVlcy4gVG8gZ2VuZXJhdGUgeW91ciBvd24sIHNl
ZSB0aGUgc29ja2V0LmlvIHNlcnZlciBpbnN0cnVjdGlvbnMuCgkJc2VjcmV0
OiAnMTM2NTI4MDUzMjA3OTQyNzIwODQnLCAvLyBPYnRhaW5lZCBmcm9tIHRo
ZSBzb2NrZXQuaW8gc2VydmVyLiBHaXZlcyB0aGlzICh0aGUgbWFzdGVyKSBj
b250cm9sIG9mIHRoZSBwcmVzZW50YXRpb24KCQlpZDogJzFlYTg3NTY3NGIx
N2NhNzYnLCAvLyBPYnRhaW5lZCBmcm9tIHNvY2tldC5pbyBzZXJ2ZXIKCQl1
cmw6ICdleGFtcGxlLmNvbTo4MCcgLy8gTG9jYXRpb24gb2YgeW91ciBzb2Nr
ZXQuaW8gc2VydmVyCgl9LAoKCS8vIERvbid0IGZvcmdldCB0byBhZGQgdGhl
IGRlcGVuZGVuY2llcwoJZGVwZW5kZW5jaWVzOiBbCgkJeyBzcmM6ICcvL2Nk
bmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9zb2NrZXQuaW8vMi4yLjAv
c29ja2V0LmlvLmpzJywgYXN5bmM6IHRydWUgfSwKCQl7IHNyYzogJ3BsdWdp
bi9tdWx0aXBsZXgvbWFzdGVyLmpzJywgYXN5bmM6IHRydWUgfSwKCQl7IHNy
YzogJ3BsdWdpbi9tdWx0aXBsZXgvY2xpZW50LmpzJywgYXN5bmM6IHRydWUg
fQoKCQkvLyBvdGhlciBkZXBlbmRlbmNpZXMuLi4KCV0KfSk7CmBgYAoKCiMj
IE1hdGhKYXgKCklmIHlvdSB3YW50IHRvIGRpc3BsYXkgbWF0aCBlcXVhdGlv
bnMgaW4geW91ciBwcmVzZW50YXRpb24geW91IGNhbiBlYXNpbHkgZG8gc28g
YnkgaW5jbHVkaW5nIHRoaXMgcGx1Z2luLiBUaGUgcGx1Z2luIGlzIGEgdmVy
eSB0aGluIHdyYXBwZXIgYXJvdW5kIHRoZSBbTWF0aEpheF0oaHR0cDovL3d3
dy5tYXRoamF4Lm9yZy8pIGxpYnJhcnkuIFRvIHVzZSBpdCB5b3UnbGwgbmVl
ZCB0byBpbmNsdWRlIGl0IGFzIGEgcmV2ZWFsLmpzIGRlcGVuZGVuY3ksIFtm
aW5kIG91ciBtb3JlIGFib3V0IGRlcGVuZGVuY2llcyBoZXJlXSgjZGVwZW5k
ZW5jaWVzKS4KClRoZSBwbHVnaW4gZGVmYXVsdHMgdG8gdXNpbmcgW0xhVGVY
XShodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0xhVGVYKSBidXQgdGhh
dCBjYW4gYmUgYWRqdXN0ZWQgdGhyb3VnaCB0aGUgYG1hdGhgIGNvbmZpZ3Vy
YXRpb24gb2JqZWN0LiBOb3RlIHRoYXQgTWF0aEpheCBpcyBsb2FkZWQgZnJv
bSBhIHJlbW90ZSBzZXJ2ZXIuIElmIHlvdSB3YW50IHRvIHVzZSBpdCBvZmZs
aW5lIHlvdSdsbCBuZWVkIHRvIGRvd25sb2FkIGEgY29weSBvZiB0aGUgbGli
cmFyeSBhbmQgYWRqdXN0IHRoZSBgbWF0aGpheGAgY29uZmlndXJhdGlvbiB2
YWx1ZS4KCkJlbG93IGlzIGFuIGV4YW1wbGUgb2YgaG93IHRoZSBwbHVnaW4g
Y2FuIGJlIGNvbmZpZ3VyZWQuIElmIHlvdSBkb24ndCBpbnRlbmQgdG8gY2hh
bmdlIHRoZXNlIHZhbHVlcyB5b3UgZG8gbm90IG5lZWQgdG8gaW5jbHVkZSB0
aGUgYG1hdGhgIGNvbmZpZyBvYmplY3QgYXQgYWxsLgoKYGBganMKUmV2ZWFs
LmluaXRpYWxpemUoewoJLy8gb3RoZXIgb3B0aW9ucyAuLi4KCgltYXRoOiB7
CgkJbWF0aGpheDogJ2h0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWph
eC9saWJzL21hdGhqYXgvMi43LjAvTWF0aEpheC5qcycsCgkJY29uZmlnOiAn
VGVYLUFNU19IVE1MLWZ1bGwnICAvLyBTZWUgaHR0cDovL2RvY3MubWF0aGph
eC5vcmcvZW4vbGF0ZXN0L2NvbmZpZy1maWxlcy5odG1sCgkJLy8gcGFzcyBv
dGhlciBvcHRpb25zIGludG8gYE1hdGhKYXguSHViLkNvbmZpZygpYAoJCVRl
WDogeyBNYWNyb3M6IG1hY3JvcyB9Cgl9LAoKCWRlcGVuZGVuY2llczogWwoJ
CXsgc3JjOiAncGx1Z2luL21hdGgvbWF0aC5qcycsIGFzeW5jOiB0cnVlIH0K
CV0KfSk7CmBgYAoKUmVhZCBNYXRoSmF4J3MgZG9jdW1lbnRhdGlvbiBpZiB5
b3UgbmVlZCBbSFRUUFMgZGVsaXZlcnldKGh0dHA6Ly9kb2NzLm1hdGhqYXgu
b3JnL2VuL2xhdGVzdC9zdGFydC5odG1sI3NlY3VyZS1hY2Nlc3MtdG8tdGhl
LWNkbikgb3Igc2VydmluZyBvZiBbc3BlY2lmaWMgdmVyc2lvbnNdKGh0dHA6
Ly9kb2NzLm1hdGhqYXgub3JnL2VuL2xhdGVzdC9jb25maWd1cmF0aW9uLmh0
bWwjbG9hZGluZy1tYXRoamF4LWZyb20tdGhlLWNkbikgZm9yIHN0YWJpbGl0
eS4KCiMjIyMgTWF0aEpheCBpbiBNYXJrZG93bgpJZiB5b3Ugd2FudCB0byBp
bmNsdWRlIG1hdGggaW5zaWRlIG9mIGEgcHJlc2VudGF0aW9uIHdyaXR0ZW4g
aW4gTWFya2Rvd24geW91IG5lZWQgdG8gd3JhcCB0aGUgZm9ybXVsYSBpbiBi
YWNrdGlja3MuIFRoaXMgcHJldmVudHMgc3ludGF4IGNvbmZsaWN0cyBiZXR3
ZWVuIExhVGVYIGFuZCBNYXJrZG93bi4gRm9yIGV4YW1wbGU6CgpgYGAKYCQk
IEooXHRoZXRhXzAsXHRoZXRhXzEpID0gXHN1bV97aT0wfSAkJGAKYGBgCgoj
IyBMaWNlbnNlCgpNSVQgbGljZW5zZWQKCkNvcHlyaWdodCAoQykgMjAxOSBI
YWtpbSBFbCBIYXR0YWIsIGh0dHA6Ly9oYWtpbS5zZQo=
",,49334,"bGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczoKICAtIDExCmFmdGVyX3Njcmlw
dDoKICAtIG5wbSBydW4gYnVpbGQgLS0gcmV0aXJlCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
