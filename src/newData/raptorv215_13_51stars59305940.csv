name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'android-classyshark',44109745,b'Analyze any Android/Java based app or game',b'Java',20,5940,,318,False,b'https://api.github.com/repos/google/android-classyshark/forks',"IyBDbGFzc3lTaGFyawoKIyMjIEludHJvZHVjdGlvbgoKRm9sbG93IHRoZSBz
aGFyayBvbiB0d2l0dGVyIFtASXRzQ2xhc3N5c2hhcmtdKGh0dHBzOi8vdHdp
dHRlci5jb20vSXRzQ2xhc3N5c2hhcmspCgohW2FsdCB0ZXh0XShodHRwczov
L2dpdGh1Yi5jb20vYm9yaXNmL2NsYXNzeXNoYXJrLXVzZXItZ3VpZGUvYmxv
Yi9tYXN0ZXIvaW1hZ2VzLzUlMjBDbGFzc2VzRGV4RGF0YS5wbmcpCgpDbGFz
c3lTaGFyayBpcyBhIHN0YW5kYWxvbmUgYmluYXJ5IGluc3BlY3Rpb24gdG9v
bCBmb3IgQW5kcm9pZCBkZXZlbG9wZXJzLiBJdCBjYW4gcmVsaWFibHkgYnJv
d3NlIGFueSBBbmRyb2lkIGV4ZWN1dGFibGUgYW5kIHNob3cgaW1wb3J0YW50
IGluZm8gc3VjaCBhcyBjbGFzcyBpbnRlcmZhY2VzIGFuZCBtZW1iZXJzLCBk
ZXggY291bnRzIGFuZCBkZXBlbmRlbmNpZXMuIENsYXNzeVNoYXJrIHN1cHBv
cnRzIG11bHRpcGxlIGZvcm1hdHMgaW5jbHVkaW5nIGxpYnJhcmllcyAoLmRl
eCwgLmFhciwgLnNvKSwgZXhlY3V0YWJsZXMgKC5hcGssIC5qYXIsIC5jbGFz
cykgYW5kIGFsbCBBbmRyb2lkIGJpbmFyeSBYTUxzOiBBbmRyb2lkTWFuaWZl
c3QsIHJlc291cmNlcywgbGF5b3V0cyBldGMuCgojIyMgVXNlZnVsIGxpbmtz
CiogW1VzZXIgZ3VpZGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9ib3Jpc2YvY2xh
c3N5c2hhcmstdXNlci1ndWlkZSkKKiBbQ29tbWFuZC1saW5lIHJlZmVyZW5j
ZV0oaHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS9hbmRyb2lkLWNsYXNzeXNo
YXJrL2Jsb2IvbWFzdGVyL0NvbW1hbmRMaW5lLnBkZikKKiBHcmFkbGUgW3Nh
bXBsZV0oaHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS9hbmRyb2lkLWNsYXNz
eXNoYXJrL3RyZWUvbWFzdGVyL1NhbXBsZXMvU2FtcGxlR3JhZGxlKQoqIFtW
aXNpb24gYW5kIFN0cmF0ZWd5XShodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9k
b2N1bWVudC9kLzFzS19XTnpIbl82UTFWX2RvaHhydGsxdGxzUFhzaTljRVZu
SXVZdVZpZzBNL2VkaXQ/dXNwPXNoYXJpbmcpCgojIyMgRG93bmxvYWQKVG8g
cnVuLCBncmFiIHRoZSBbbGF0ZXN0IEpBUl0oaHR0cHM6Ly9naXRodWIuY29t
L2dvb2dsZS9hbmRyb2lkLWNsYXNzeXNoYXJrL3JlbGVhc2VzKQphbmQgcnVu
IGBqYXZhIC1qYXIgQ2xhc3N5U2hhcmsuamFyYC4KCiMjIyBFeHBvcnQgZGF0
YSBpbiB0ZXh0IGZvcm1hdAoqIFtFeHBvcnRlcl0oaHR0cHM6Ly9tZWRpdW0u
Y29tL0BCb3Jpc0ZhcmJlci9leHBvcnRpbmctZGF0YS1mcm9tLWNsYXNzeXNo
YXJrLWUzY2YzZmUzZmFiOCMuZGVlYzRueWpxKQoqIEFQSSBmaW5kZXIgOmNv
bnN0cnVjdGlvbjogd29yayBpbiBwcm9ncmVzcwoKIyMjIERldmVsb3AKMS4g
Q2xvbmUgdGhlIHJlcG8KMi4gT3BlbiBpbiB5b3VyIGZhdm9yaXRlIElERS9l
ZGl0b3IKMy4gQnVpbGQgb3B0aW9uczoKICAgICAqIEludGVsbGlKIC0gYnVp
bGRzIGF1dG9tYXRpY2FsbHkgd2hlbiBleHBvcnRpbmcgdGhlIHByb2plY3Qg
CiAgICAgKiBbR3JhZGxlIHNjcmlwdF0oaHR0cHM6Ly9naXRodWIuY29tL2dv
b2dsZS9hbmRyb2lkLWNsYXNzeXNoYXJrL2Jsb2IvbWFzdGVyL0NsYXNzeVNo
YXJrV1MvYnVpbGQuZ3JhZGxlKQogICAgICogW1JldHJvQnVpbGRdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9ib3Jpc2YvUmV0cm9CdWlsZCkKCiMjIyBBcmNoIExp
bnV4CgpJZiB5b3UncmUgcnVubmluZyBBcmNoIExpbnV4IHlvdSBjYW4gaW5z
dGFsbCB0aGUgbGF0ZXN0IFtwcmVidWlsdCBqYXIgZnJvbSB0aGUgQVVSXSho
dHRwczovL2F1ci5hcmNobGludXgub3JnL3BhY2thZ2VzL2NsYXNzeXNoYXJr
LykuCgojIyMgRGVwZW5kZW5jaWVzCiogW2RleGxpYjJdKGh0dHBzOi8vZ2l0
aHViLmNvbS9KZXN1c0ZyZWtlL3NtYWxpL3RyZWUvbWFzdGVyL2RleGxpYjIp
IGJ5IGplc3VzZnJla2UKKiBbZ3VhdmFdKGh0dHBzOi8vZ2l0aHViLmNvbS9n
b29nbGUvZ3VhdmEpIGJ5IEdvb2dsZQoqIFtBU01dKGh0dHA6Ly9hc20ub3cy
Lm9yZy8pIGJ5IE9XMgoqIFtBU01ERVhdKGh0dHA6Ly9hc20ub3cyLm9yZy9h
c21kZXgtaW5kZXguaHRtbCkgYnkgT1cyCiogW2phdmEtYmludXRpbHNdKGh0
dHBzOi8vZ2l0aHViLmNvbS9qYXdpL2phdmEtYmludXRpbHMpIGJ5IGphd2kK
KiBbQkNFTF0oaHR0cHM6Ly9jb21tb25zLmFwYWNoZS5vcmcvcHJvcGVyL2Nv
bW1vbnMtYmNlbCkgYnkgQXBhY2hlCgojIyMgU3VwcG9ydApJZiB5b3UndmUg
Zm91bmQgYW4gZXJyb3IsIHBsZWFzZSBmaWxlIGFuIGlzc3VlOgoKaHR0cHM6
Ly9naXRodWIuY29tL2dvb2dsZS9hbmRyb2lkLWNsYXNzeXNoYXJrL2lzc3Vl
cwoKUGF0Y2hlcyBhcmUgZW5jb3VyYWdlZCwgYW5kIG1heSBiZSBzdWJtaXR0
ZWQgYnkgZm9ya2luZyB0aGlzIHByb2plY3QgYW5kCnN1Ym1pdHRpbmcgYSBw
dWxsIHJlcXVlc3QgdGhyb3VnaCBHaXRIdWIuCgpMaWNlbnNlCj09PT09PT0K
CiAgICBDb3B5cmlnaHQgMjAxNyBHb29nbGUsIEluYy4KCiAgICBMaWNlbnNl
ZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUg
IkxpY2Vuc2UiKTsKICAgIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhj
ZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICAgIFlvdSBt
YXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAoKICAgICAgIGh0
dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAoKICAg
IFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQg
dG8gaW4gd3JpdGluZywgc29mdHdhcmUKICAgIGRpc3RyaWJ1dGVkIHVuZGVy
IHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFT
SVMsCiAgICBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBB
TlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KICAgIFNlZSB0
aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmlu
ZyBwZXJtaXNzaW9ucyBhbmQKICAgIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBM
aWNlbnNlLgoKCgo=
",,5940,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'dask',28782747,b'Parallel computing with task scheduling',b'Python',467,5936,,211,False,b'https://api.github.com/repos/dask/dask/forks',"RGFzawo9PT09Cgp8QnVpbGQgU3RhdHVzfCB8Q292ZXJhZ2V8IHxEb2MgU3Rh
dHVzfCB8R2l0dGVyfCB8VmVyc2lvbiBTdGF0dXN8IHxOdW1GT0NVU3wKCkRh
c2sgaXMgYSBmbGV4aWJsZSBwYXJhbGxlbCBjb21wdXRpbmcgbGlicmFyeSBm
b3IgYW5hbHl0aWNzLiAgU2VlCmRvY3VtZW50YXRpb25fIGZvciBtb3JlIGlu
Zm9ybWF0aW9uLgoKCkxJQ0VOU0UKLS0tLS0tLQoKTmV3IEJTRC4gU2VlIGBM
aWNlbnNlIEZpbGUgPGh0dHBzOi8vZ2l0aHViLmNvbS9kYXNrL2Rhc2svYmxv
Yi9tYXN0ZXIvTElDRU5TRS50eHQ+YF9fLgoKLi4gX2RvY3VtZW50YXRpb246
IGh0dHBzOi8vZGFzay5vcmcKLi4gfEJ1aWxkIFN0YXR1c3wgaW1hZ2U6OiBo
dHRwczovL3RyYXZpcy1jaS5vcmcvZGFzay9kYXNrLnN2Zz9icmFuY2g9bWFz
dGVyCiAgIDp0YXJnZXQ6IGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9kYXNrL2Rh
c2sKLi4gfENvdmVyYWdlfCBpbWFnZTo6IGh0dHBzOi8vY292ZXJhbGxzLmlv
L3JlcG9zL2Rhc2svZGFzay9iYWRnZS5zdmcKICAgOnRhcmdldDogaHR0cHM6
Ly9jb3ZlcmFsbHMuaW8vci9kYXNrL2Rhc2sKICAgOmFsdDogQ292ZXJhZ2Ug
c3RhdHVzCi4uIHxEb2MgU3RhdHVzfCBpbWFnZTo6IGh0dHBzOi8vcmVhZHRo
ZWRvY3Mub3JnL3Byb2plY3RzL2Rhc2svYmFkZ2UvP3ZlcnNpb249bGF0ZXN0
CiAgIDp0YXJnZXQ6IGh0dHBzOi8vZGFzay5vcmcKICAgOmFsdDogRG9jdW1l
bnRhdGlvbiBTdGF0dXMKLi4gfEdpdHRlcnwgaW1hZ2U6OiBodHRwczovL2Jh
ZGdlcy5naXR0ZXIuaW0vSm9pbiUyMENoYXQuc3ZnCiAgIDphbHQ6IEpvaW4g
dGhlIGNoYXQgYXQgaHR0cHM6Ly9naXR0ZXIuaW0vZGFzay9kYXNrCiAgIDp0
YXJnZXQ6IGh0dHBzOi8vZ2l0dGVyLmltL2Rhc2svZGFzaz91dG1fc291cmNl
PWJhZGdlJnV0bV9tZWRpdW09YmFkZ2UmdXRtX2NhbXBhaWduPXByLWJhZGdl
JnV0bV9jb250ZW50PWJhZGdlCi4uIHxWZXJzaW9uIFN0YXR1c3wgaW1hZ2U6
OiBodHRwczovL2ltZy5zaGllbGRzLmlvL3B5cGkvdi9kYXNrLnN2ZwogICA6
dGFyZ2V0OiBodHRwczovL3B5cGkucHl0aG9uLm9yZy9weXBpL2Rhc2svCi4u
IHxOdW1GT0NVU3wgaW1hZ2U6OiBodHRwczovL2ltZy5zaGllbGRzLmlvL2Jh
ZGdlL3Bvd2VyZWQlMjBieS1OdW1GT0NVUy1vcmFuZ2Uuc3ZnP3N0eWxlPWZs
YXQmY29sb3JBPUUxNTIzRCZjb2xvckI9MDA3RDhBCiAgIDp0YXJnZXQ6IGh0
dHBzOi8vd3d3Lm51bWZvY3VzLm9yZy8K
",,5936,"bGFuZ3VhZ2U6IGdlbmVyaWMKc3VkbzogZmFsc2UKZGlzdDogdHJ1c3R5Cm9z
OiBsaW51eAoKX2Jhc2VfZW52czoKICAtICZ0ZXN0IFRFU1Q9J3RydWUnCiAg
LSAmdGVzdF9hbmRfbGludCBURVNUPSd0cnVlJyBMSU5UPSd0cnVlJwogIC0g
JmNvdmVyYWdlIENPVkVSQUdFPSd0cnVlJyBQQVJBTExFTD0nZmFsc2UnCiAg
LSAmbm9fY292ZXJhZ2UgQ09WRVJBR0U9J2ZhbHNlJyBQQVJBTExFTD0ndHJ1
ZScKICAtICZvcHRpbWl6ZSBQWVRIT05PUFRJTUlaRT0yIFhUUkFURVNUQVJH
Uz0nLS1pZ25vcmU9ZGFzay9kaWFnbm9zdGljcyAtLWlnbm9yZT1kYXNrL2Fy
cmF5L3Rlc3RzL3Rlc3RfaW1hZ2UucHkgLS1pZ25vcmU9ZGFzay9hcnJheS90
ZXN0cy90ZXN0X3N0YXRzLnB5IC0taWdub3JlPWRhc2svYnl0ZXMvdGVzdHMv
dGVzdF9zMy5weScKICAtICZub19vcHRpbWl6ZSBYVFJBVEVTVEFSR1M9CiAg
LSAmaW1wb3J0cyBURVNUX0lNUE9SVFM9J3RydWUnCiAgLSAmbm9faW1wb3J0
cyBURVNUX0lNUE9SVFM9J2ZhbHNlJwogIC0gJmFycmF5X2Z1bmN0aW9uIE5V
TVBZX0VYUEVSSU1FTlRBTF9BUlJBWV9GVU5DVElPTj0nMScKCmpvYnM6CiAg
ZmFzdF9maW5pc2g6IHRydWUKICBpbmNsdWRlOgogICAgLSBlbnY6ICZweTM2
X2VudgogICAgICAtIFBZVEhPTl9WRVJTSU9OPTMuNgogICAgICAtIEVOVl9G
SUxFPWNvbnRpbnVvdXNfaW50ZWdyYXRpb24vdHJhdmlzL3RyYXZpcy0zNi55
YW1sCiAgICAgIC0gKnRlc3RfYW5kX2xpbnQKICAgICAgLSAqbm9fY292ZXJh
Z2UKICAgICAgLSAqbm9fb3B0aW1pemUKICAgICAgLSAqaW1wb3J0cwoKICAg
IC0gZW52OiAmcHkzN19lbnYKICAgICAgLSBQWVRIT05fVkVSU0lPTj0zLjcK
ICAgICAgLSBFTlZfRklMRT1jb250aW51b3VzX2ludGVncmF0aW9uL3RyYXZp
cy90cmF2aXMtMzcueWFtbAogICAgICAtICp0ZXN0X2FuZF9saW50CiAgICAg
IC0gKmNvdmVyYWdlCiAgICAgIC0gKm5vX29wdGltaXplCiAgICAgIC0gKmlt
cG9ydHMKICAgICAgLSAqYXJyYXlfZnVuY3Rpb24KCiAgICAtIGVudjogJnB5
MzdfZGV2CiAgICAgIC0gVVBTVFJFQU1fREVWPTEgICMgSW5zdGFsbCBuaWdo
dGx5IHZlcnNpb25zIG9mIE51bVB5LCBwYW5kYXMsIHB5YXJyb3cKICAgICAg
LSBFTlZfRklMRT1jb250aW51b3VzX2ludGVncmF0aW9uL3RyYXZpcy90cmF2
aXMtMzctZGV2LnlhbWwKICAgICAgLSAqdGVzdF9hbmRfbGludAogICAgICAt
ICpub19jb3ZlcmFnZQogICAgICAtICpub19vcHRpbWl6ZQogICAgICAtICpu
b19pbXBvcnRzCiAgICAgIC0gKmFycmF5X2Z1bmN0aW9uCiAgICAgIGlmOiB0
eXBlID09IGNyb24gT1IgY29tbWl0X21lc3NhZ2UgPX4gdGVzdC11cHN0cmVh
bSAgIyBSdW4gb24gY3JvbiBqb2JzIG9yIGFueSBidWlsZHMgd2hlcmUgY29t
bWl0IG1lc3NhZ2UgY29udGFpbnMgInRlc3QtdXBzdHJlYW0iCgogICAgLSBl
bnY6ICpweTM2X2VudgogICAgICBpZjogdHlwZSAhPSBwdWxsX3JlcXVlc3QK
ICAgICAgb3M6IG9zeAoKICAgIC0gZW52OgogICAgICAtIEVOVl9GSUxFPWNv
bnRpbnVvdXNfaW50ZWdyYXRpb24vdHJhdmlzL3RyYXZpcy1taW5kZXBzLWFy
cmF5LWRhdGFmcmFtZS55YW1sCiAgICAgIC0gKnRlc3QKICAgICAgLSAqbm9f
Y292ZXJhZ2UKICAgICAgLSAqbm9fb3B0aW1pemUKICAgICAgLSAqbm9faW1w
b3J0cwogICAgICBpZjogdHlwZSAhPSBwdWxsX3JlcXVlc3QgT1IgY29tbWl0
X21lc3NhZ2UgPX4gdGVzdC1taW5kZXBzICAjIFNraXAgb24gUFJTIHVubGVz
cyB0aGUgY29tbWl0IG1lc3NhZ2UgY29udGFpbnMgInRlc3QtbWluZGVwcyIK
CiAgICAtIGVudjoKICAgICAgLSBFTlZfRklMRT1jb250aW51b3VzX2ludGVn
cmF0aW9uL3RyYXZpcy90cmF2aXMtbWluZGVwcy1iYWctZGVsYXllZC55YW1s
CiAgICAgIC0gKnRlc3QKICAgICAgLSAqbm9fY292ZXJhZ2UKICAgICAgLSAq
bm9fb3B0aW1pemUKICAgICAgLSAqbm9faW1wb3J0cwogICAgICBpZjogdHlw
ZSAhPSBwdWxsX3JlcXVlc3QgT1IgY29tbWl0X21lc3NhZ2UgPX4gdGVzdC1t
aW5kZXBzICAjIFNraXAgb24gUFJTIHVubGVzcyB0aGUgY29tbWl0IG1lc3Nh
Z2UgY29udGFpbnMgInRlc3QtbWluZGVwcyIKCiAgICAtIGVudjoKICAgICAg
LSBURVNUX0hERlM9J3RydWUnCiAgICAgIGlmOiB0eXBlICE9IHB1bGxfcmVx
dWVzdCBPUiBjb21taXRfbWVzc2FnZSA9fiB0ZXN0LWhkZnMgICMgU2tpcCBv
biBQUlMgdW5sZXNzIHRoZSBjb21taXQgbWVzc2FnZSBjb250YWlucyAidGVz
dC1oZGZzIgogICAgICBzdWRvOiB0cnVlCiAgICAgIHNlcnZpY2VzOgogICAg
ICAgIC0gZG9ja2VyCiAgICAgIGJlZm9yZV9pbnN0YWxsOgogICAgICAgIC0g
c291cmNlIGNvbnRpbnVvdXNfaW50ZWdyYXRpb24vaGRmcy9zdGFydHVwX2hk
ZnMuc2gKCiAgYWxsb3dfZmFpbHVyZXM6CiAgICAtIGVudjogKnB5MzdfZGV2
CiAgICAtIG9zOiBvc3gKCgppbnN0YWxsOgogIC0gaWYgW1sgJFRFU1RfSERG
UyA9PSAndHJ1ZScgXV07IHRoZW4gc291cmNlIGNvbnRpbnVvdXNfaW50ZWdy
YXRpb24vaGRmcy9pbnN0YWxsLnNoOyBmaQogIC0gaWYgW1sgJFRFU1QgPT0g
J3RydWUnIF1dOyB0aGVuIHNvdXJjZSBjb250aW51b3VzX2ludGVncmF0aW9u
L3RyYXZpcy9pbnN0YWxsLnNoOyBmaQoKc2NyaXB0OgogIC0gaWYgW1sgJFRF
U1RfSERGUyA9PSAndHJ1ZScgXV07IHRoZW4gc291cmNlIGNvbnRpbnVvdXNf
aW50ZWdyYXRpb24vaGRmcy9ydW5fdGVzdHMuc2g7IGZpCiAgLSBpZiBbWyAk
VEVTVCA9PSAndHJ1ZScgXV07IHRoZW4gc291cmNlIGNvbnRpbnVvdXNfaW50
ZWdyYXRpb24vdHJhdmlzL3J1bl90ZXN0cy5zaDsgZmkKICAtIGlmIFtbICRM
SU5UID09ICd0cnVlJyBdXTsgdGhlbiBwaXAgaW5zdGFsbCBmbGFrZTggOyBm
bGFrZTggZGFzazsgZmkKICAtIGlmIFtbICRMSU5UID09ICd0cnVlJyBdXTsg
dGhlbiBwaXAgaW5zdGFsbCBnaXQraHR0cHM6Ly9naXRodWIuY29tL3BzZi9i
bGFja0A3M2JkNzAzOGZiZWZkYjFjNmE2MWZhMWVkZjE2ZmY2MTYxMzA1MGE1
OyBibGFjayBkYXNrIC0tY2hlY2s7IGZpCiAgLSBpZiBbWyAkVEVTVF9JTVBP
UlRTID09ICd0cnVlJyBdXTsgdGhlbiBiYXNoIGNvbnRpbnVvdXNfaW50ZWdy
YXRpb24vdHJhdmlzL3Rlc3RfaW1wb3J0cy5zaDsgZmkKCmFmdGVyX3N1Y2Nl
c3M6CiAgLSBjb2RlY292CiAgLSBzb3VyY2UgY29udGludW91c19pbnRlZ3Jh
dGlvbi90cmF2aXMvYWZ0ZXJfc3VjY2Vzcy5zaAoKbm90aWZpY2F0aW9uczoK
ICBlbWFpbDogZmFsc2UK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"bmFtZTogQ0kKCm9uOgogIHB1c2g6CiAgICBicmFuY2hlczogbWFzdGVyCiAg
cHVsbF9yZXF1ZXN0OgogICAgYnJhbmNoZXM6IG1hc3RlcgoKam9iczoKICBj
aGVja3M6CiAgICBuYW1lOiBEb2N1bWVudGF0aW9uIGJ1aWxkCiAgICBydW5z
LW9uOiB1YnVudHUtbGF0ZXN0CiAgICBzdGVwczoKCiAgICAtIG5hbWU6IENo
ZWNrb3V0CiAgICAgIHVzZXM6IGFjdGlvbnMvY2hlY2tvdXRAdjEKCiAgICAt
IG5hbWU6IFNldCB1cCBQeXRob24gMy43CiAgICAgIHVzZXM6IGFjdGlvbnMv
c2V0dXAtcHl0aG9uQHYxCiAgICAgIHdpdGg6CiAgICAgICAgcHl0aG9uLXZl
cnNpb246IDMuNwoKICAgIC0gbmFtZTogSW5zdGFsbCBEYXNrCiAgICAgIHJ1
bjogfAogICAgICAgIHB5dGhvbiAtbSBwaXAgaW5zdGFsbCAtLXVwZ3JhZGUg
cGlwCiAgICAgICAgcGlwIGluc3RhbGwgLWUgLgoKICAgIC0gbmFtZTogSW5z
dGFsbCBkb2MgZGVwZW5kZW5jaWVzCiAgICAgIHJ1bjogcGlwIGluc3RhbGwg
LXIgZG9jcy9yZXF1aXJlbWVudHMtZG9jcy50eHQKCiAgICAtIG5hbWU6IEJ1
aWxkIGRvY3MKICAgICAgcnVuOiB8CiAgICAgICAgY2QgZG9jcwogICAgICAg
IG1ha2UgaHRtbAo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'css-selector',1398634,b'The CssSelector component converts CSS selectors to XPath expressions.',b'PHP',0,5939,,12,False,b'https://api.github.com/repos/symfony/css-selector/forks',"Q3NzU2VsZWN0b3IgQ29tcG9uZW50Cj09PT09PT09PT09PT09PT09PT09PQoK
VGhlIENzc1NlbGVjdG9yIGNvbXBvbmVudCBjb252ZXJ0cyBDU1Mgc2VsZWN0
b3JzIHRvIFhQYXRoIGV4cHJlc3Npb25zLgoKUmVzb3VyY2VzCi0tLS0tLS0t
LQoKICAqIFtEb2N1bWVudGF0aW9uXShodHRwczovL3N5bWZvbnkuY29tL2Rv
Yy9jdXJyZW50L2NvbXBvbmVudHMvY3NzX3NlbGVjdG9yLmh0bWwpCiAgKiBb
Q29udHJpYnV0aW5nXShodHRwczovL3N5bWZvbnkuY29tL2RvYy9jdXJyZW50
L2NvbnRyaWJ1dGluZy9pbmRleC5odG1sKQogICogW1JlcG9ydCBpc3N1ZXNd
KGh0dHBzOi8vZ2l0aHViLmNvbS9zeW1mb255L3N5bWZvbnkvaXNzdWVzKSBh
bmQKICAgIFtzZW5kIFB1bGwgUmVxdWVzdHNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9zeW1mb255L3N5bWZvbnkvcHVsbHMpCiAgICBpbiB0aGUgW21haW4gU3lt
Zm9ueSByZXBvc2l0b3J5XShodHRwczovL2dpdGh1Yi5jb20vc3ltZm9ueS9z
eW1mb255KQoKQ3JlZGl0cwotLS0tLS0tCgpUaGlzIGNvbXBvbmVudCBpcyBh
IHBvcnQgb2YgdGhlIFB5dGhvbiBjc3NzZWxlY3QgbGlicmFyeQpbdjAuNy4x
XShodHRwczovL2dpdGh1Yi5jb20vU2ltb25TYXBpbi9jc3NzZWxlY3QvcmVs
ZWFzZXMvdGFnL3YwLjcuMSksCndoaWNoIGlzIGRpc3RyaWJ1dGVkIHVuZGVy
IHRoZSBCU0QgbGljZW5zZS4K
",,5939,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'vnote',70038437,b'A note-taking application that knows programmers and Markdown better.',b'C++',403,5934,,228,False,b'https://api.github.com/repos/tamlok/vnote/forks',"IyBWTm90ZQpb5Lit5paHIENoaW5lc2VdKC4vUkVBRE1FX3poLm1kKSB8IFvm
l6XmnKzoqp4gSmFwYW5lc2VdKC4vUkVBRE1FX2phLm1kKQoKKipWTm90ZSBp
cyBhIG5vdGUtdGFraW5nIGFwcGxpY2F0aW9uIHRoYXQga25vd3MgcHJvZ3Jh
bW1lcnMgYW5kIE1hcmtkb3duIGJldHRlci4qKgoKRm9yIG1vcmUgaW5mb3Jt
YXRpb24sIHBsZWFzZSB2aXNpdCBbKipWTm90ZSdzIEhvbWVwYWdlKipdKGh0
dHBzOi8vdGFtbG9rLmdpdGh1Yi5pby92bm90ZSkuCgohW1ZOb3RlXShzY3Jl
ZW5zaG90cy92bm90ZS5wbmcpCgojIERvd25sb2FkcwpVc2VycyBmcm9tIENo
aW5hIGNhbiBkb3dubG9hZCB0aGUgbGF0ZXN0IHJlbGVhc2Ugb2YgVk5vdGUg
ZnJvbSBbQmFpZHUgTmV0ZGlza10oaHR0cDovL3Bhbi5iYWlkdS5jb20vcy8x
akk1SFJPcSkuCgojIyBXaW5kb3dzCiMjIyBPZmZpY2lhbCBaaXAKIVtXaW5k
b3dzIEJ1aWxkIFN0YXR1c10oaHR0cHM6Ly9jaS5hcHB2ZXlvci5jb20vYXBp
L3Byb2plY3RzL3N0YXR1cy9naXRodWIvdGFtbG9rL3Zub3RlP3N2Zz10cnVl
KQoKLSBbR2l0aHViIHJlbGVhc2VzXShodHRwczovL2dpdGh1Yi5jb20vdGFt
bG9rL3Zub3RlL3JlbGVhc2VzKQotIExhdGVzdCBidWlsZHMgb24gbWFzdGVy
OiBbICFbRG93bmxvYWRdKGh0dHBzOi8vYXBpLmJpbnRyYXkuY29tL3BhY2th
Z2VzL3RhbWxvay92bm90ZS92bm90ZS9pbWFnZXMvZG93bmxvYWQuc3ZnKSBd
KGh0dHBzOi8vYmludHJheS5jb20vdGFtbG9rL3Zub3RlL3Zub3RlL19sYXRl
c3RWZXJzaW9uKQoKKipOT1QqKiBzdXBwb3J0ZWQgaW4gWFAgc2luY2UgUXRX
ZWJFbmdpbmVQcm9jZXNzIHVzZWQgYnkgVk5vdGUgY291bGQgbm90IHdvcmsg
aW4gWFAuCgojIyMgU2Nvb3AKVk5vdGUgY2FuIGJlIGluc3RhbGxlZCBmcm9t
IGBleHRyYXNgIGJ1Y2tldCBvZiBTY29vcC4KCmBgYHNoZWxsCnNjb29wIGJ1
Y2tldCBhZGQgZXh0cmFzCnNjb29wIGluc3RhbGwgdm5vdGUKc2Nvb3AgdXBk
YXRlIHZub3RlCmBgYAoKIyMgTGludXgKIyMjIEFwcEltYWdlClshW0J1aWxk
IFN0YXR1c10oaHR0cHM6Ly90cmF2aXMtY2kub3JnL3RhbWxvay92bm90ZS5z
dmc/YnJhbmNoPW1hc3RlcildKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy90YW1s
b2svdm5vdGUpCgpUaGVyZSBpcyBhbiBBcHBJbWFnZSBmb3JtYXQgc3RhbmRh
bG9uZSBleGVjdXRhYmxlIG9mIFZOb3RlIGZvciBtYWpvciBMaW51eCBkaXN0
cmlidXRpb25zLiAqKkFueSBoZWxwIGZvciBwYWNrYWdpbmcgYW5kIGRpc3Ry
aWJ1dGlvbiBvbiBMaW51eCBpcyBhcHByZWNpYXRlZCEqKgoKLSBbR2l0aHVi
IHJlbGVhc2VzXShodHRwczovL2dpdGh1Yi5jb20vdGFtbG9rL3Zub3RlL3Jl
bGVhc2VzKQotIExhdGVzdCBidWlsZHMgb24gbWFzdGVyOiBbICFbRG93bmxv
YWRdKGh0dHBzOi8vYXBpLmJpbnRyYXkuY29tL3BhY2thZ2VzL3RhbWxvay92
bm90ZS92bm90ZS9pbWFnZXMvZG93bmxvYWQuc3ZnKSBdKGh0dHBzOi8vYmlu
dHJheS5jb20vdGFtbG9rL3Zub3RlL3Zub3RlL19sYXRlc3RWZXJzaW9uKQoK
IyMjIG9wZW5TVVNFCkN1cnJlbnRseSBgdm5vdGVgIG9uIG9wZW5TVVNFIFR1
bWJsZXdlZWQgY2FuIGJlIGluc3RhbGxlZCBmcm9tIGBob21lOm9wZW5zdXNl
X3poYCBwcm9qZWN0IG9uIE9CUy4gWW91IGNhbiBleGVjdXRlIHRoZSBmb2xs
b3dpbmcgY29tbWFuZCBkaXJlY3RseToKCmBgYHNoZWxsCnN1ZG8genlwcGVy
IGFyIGh0dHBzOi8vZG93bmxvYWQub3BlbnN1c2Uub3JnL3JlcG9zaXRvcmll
cy9ob21lOi9vcGVuc3VzZV96aC9vcGVuU1VTRV9UdW1ibGV3ZWVkLyBob21l
Om9wZW5zdXNlX3poCnN1ZG8genlwcGVyIHJlZgpzdWRvIHp5cHBlciBpbiB2
bm90ZQpgYGAKCkZvciBvdGhlciBhcmNoaXRlY3R1cmVzLCBwbGVhc2Ugc2Vh
cmNoIGZvciBgdm5vdGVgIGF0IFtzb2Z0d2FyZS5vcGVuc3VzZS5vcmddKGh0
dHBzOi8vc29mdHdhcmUub3BlbnN1c2Uub3JnKS4KCldlIGRvbid0IHN1cHBv
cnQgTGVhcCA0MiBhbmQgYmVsb3cgZHVlIHRvIHRoZSBRdCB2ZXJzaW9uLiBQ
bGVhc2UgdXNlIEFwcEltYWdlIG9yIGJ1aWxkIGl0IHlvdXJzZWxmLgoKIyMj
IEFyY2ggTGludXgKVk5vdGUgb24gQXJjaCBMaW51eCBjYW4gYmUgaW5zdGFs
bGVkIGZyb20gdGhlIEFVUiBhcyBbdm5vdGVdKGh0dHBzOi8vYXVyLmFyY2hs
aW51eC5vcmcvcGFja2FnZXMvdm5vdGUtYmluLyk6CgpgYGBzaGVsbApnaXQg
Y2xvbmUgaHR0cHM6Ly9hdXIuYXJjaGxpbnV4Lm9yZy92bm90ZS1iaW4uZ2l0
CmNkIHZub3RlLWJpbgptYWtlcGtnIC1zaWMKYGBgCgpUaGVyZSBpcyBhbHNv
IGEgZGV2ZWxvcG1lbnQgdmVyc2lvbiB0aGF0IHRyYWNrcyB0aGUgbGF0ZXN0
IG1hc3RlciBbdm5vdGUtZ2l0XShodHRwczovL2F1ci5hcmNobGludXgub3Jn
L3BhY2thZ2VzL3Zub3RlLWdpdC8pLgoKIyMjIE5peE9TClRoYW5rIEBrdXpu
ZXJvIGZvciBwYWNrYWdpbmcgVk5vdGUgaW4gTml4T1MuIEl0IHNob3VsZCBi
ZSBhdmFpbGFibGUgaW4gYHVuc3RhYmxlYCBhbmQgYHVuc3RhYmxlLXNtYWxs
YCBjaGFubmVscy4KCiMjIE1hY09TClshW0J1aWxkIFN0YXR1c10oaHR0cHM6
Ly90cmF2aXMtY2kub3JnL3RhbWxvay92bm90ZS5zdmc/YnJhbmNoPW1hc3Rl
cildKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy90YW1sb2svdm5vdGUpCgotIFtH
aXRodWIgcmVsZWFzZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS90YW1sb2svdm5v
dGUvcmVsZWFzZXMpCi0gTGF0ZXN0IGJ1aWxkcyBvbiBtYXN0ZXI6IFsgIVtE
b3dubG9hZF0oaHR0cHM6Ly9hcGkuYmludHJheS5jb20vcGFja2FnZXMvdGFt
bG9rL3Zub3RlL3Zub3RlL2ltYWdlcy9kb3dubG9hZC5zdmcpIF0oaHR0cHM6
Ly9iaW50cmF5LmNvbS90YW1sb2svdm5vdGUvdm5vdGUvX2xhdGVzdFZlcnNp
b24pCgpZb3UgY2FuIGFsc28gaW5zdGFsbCBWTm90ZSB1c2luZyBob21lYnJl
dywgdGhyb3VnaCB0aGUgY2FzayB0YXA6CgpgYGBzaGVsbApicmV3IGNhc2sg
aW5zdGFsbCB2bm90ZQpgYGAKCiMgRGVzY3JpcHRpb24KKipWTm90ZSoqIGlz
IGEgUXQtYmFzZWQsIGZyZWUgYW5kIG9wZW4gc291cmNlIG5vdGUtdGFraW5n
IGFwcGxpY2F0aW9uLCBmb2N1c2luZyBvbiBNYXJrZG93bi4gVk5vdGUgaXMg
ZGVzaWduZWQgdG8gcHJvdmlkZSBhIGNvbWZvcnRhYmxlIGVkaXRpbmcgZXhw
ZXJpZW5jZSwgZXNwZWNpYWxseSBmb3IgcHJvZ3JhbW1lcnMuCgpWTm90ZSBp
cyAqKk5PVCoqIGp1c3QgYSBzaW1wbGUgZWRpdG9yIGZvciBNYXJrZG93bi4g
QnkgcHJvdmlkaW5nIG5vdGVzIG1hbmFnZW1lbnQsIFZOb3RlIG1ha2VzIHRh
a2luZyBub3RlcyBpbiBNYXJrZG93biBzaW1wbGVyIGFuZCBtb3JlIHBsZWFz
YW50LgoKVXRpbGl6aW5nIFF0LCBWTm90ZSBjb3VsZCBydW4gb24gKipMaW51
eCoqLCAqKldpbmRvd3MqKiwgYW5kICoqbWFjT1MqKi4KCiFbVk5vdGUgTWFp
biBJbnRlcmZhY2VdKHNjcmVlbnNob3RzL192bm90ZW1haW5pXzE1MjUxNTQ0
NTZfMTU2MTI5NTg0MS5wbmcpCgojIFN1cHBvcnRzCi0gW0dpdGh1YiBpc3N1
ZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS90YW1sb2svdm5vdGUvaXNzdWVzKTsK
LSBFbWFpbDogYHRhbWxva3ZlZXIgYXQgZ21haWwuY29tYDsKLSBbU2xhY2td
KGh0dHBzOi8vam9pbi5zbGFjay5jb20vdC92bm90ZS9zaGFyZWRfaW52aXRl
L2VuUXRORGcyTXpZME5EZzNOekk0TFRRMVl6azFZakE1TWpBeVlUVTBNakpr
TVRVeE5tUmlZV1EyWWpsa09XVTBaR1psTVRGbFpUQXhOemcwWkdVeU56STBa
R1kyTkRnNE1tVTFNMkZrTURnKTsKLSBXZUNoYXQgUHVibGljIEFjY291bnQ6
IFZOb3Rl56yU6K6wICh2bm90ZV9tZCk7ICAKIVtWTm90ZSBXZUNoYXRdKHNj
cmVlbnNob3RzL3Zub3RlX21kLmpwZykKCiMgSGlnaGxpZ2h0cwotIFBvd2Vy
ZnVsICoqZnVsbC10ZXh0IHNlYXJjaCoqOwotICoqVW5pdmVyc2FsIEVudHJ5
KiogdG8gcmVhY2ggYW55dGhpbmcganVzdCBieSB0eXBpbmc7Ci0gSW5zZXJ0
aW5nIGltYWdlcyBkaXJlY3RseSBmcm9tIGNsaXBib2FyZDsKLSBTeW50YXgg
aGlnaGxpZ2h0cyBvZiBmZW5jZWQgY29kZSBibG9ja3MgaW4gYm90aCAqKmVk
aXQqKiBhbmQgKipyZWFkKiogbW9kZTsKLSBQb3dlcmZ1bCAqKkluLVBsYWNl
IFByZXZpZXcqKiBmb3IgaW1hZ2VzLCBkaWFncmFtcywgYW5kIGZvcm11bGFz
OwotIFNpZGUtYnktc2lkZSBsaXZlIHByZXZpZXcgZm9yIGRpYWdyYW1zOwot
IE91dGxpbmUgaW4gYm90aCBlZGl0IGFuZCByZWFkIG1vZGU7Ci0gQ3VzdG9t
IHN0eWxlcyBpbiBib3RoIGVkaXQgYW5kIHJlYWQgbW9kZTsKLSAqKlZpbSoq
IG1vZGUgYW5kIGEgc2V0IG9mIHBvd2VyZnVsIHNob3J0Y3V0czsKLSBJbmZp
bml0ZSBsZXZlbHMgb2YgZm9sZGVyczsKLSBNdWx0aXBsZSB0YWJzIGFuZCBz
cGxpdHRpbmcgd2luZG93czsKLSBbTWVybWFpZF0oaHR0cDovL2tuc3YuZ2l0
aHViLmlvL21lcm1haWQvKSwgW0Zsb3djaGFydC5qc10oaHR0cDovL2Zsb3dj
aGFydC5qcy5vcmcvKSwgW01hdGhKYXhdKGh0dHBzOi8vd3d3Lm1hdGhqYXgu
b3JnLyksIFtQbGFudFVNTF0oaHR0cDovL3BsYW50dW1sLmNvbS8pLCBhbmQg
W0dyYXBodml6XShodHRwOi8vd3d3LmdyYXBodml6Lm9yZy8pOwotIFN1cHBv
cnRzIEhpRFBJOwotIEF0dGFjaG1lbnRzIG9mIG5vdGVzOwotIFRoZW1lcyBh
bmQgZGFyayBtb2RlOwotIFJpY2ggYW5kIGV4dGVuc2libGUgZXhwb3J0LCBz
dWNoIGFzIEhUTUwsIFBERiwgUERGIChBbGwgSW4gT25lKSwgYW5kIGltYWdl
czsKLSBHaXRIdWIgYW5kIFdlQ2hhdCBpbWFnZSBob3N0aW5nOwoKIyBEb25h
dGUKWW91IGNvdWxkIGhlbHAgVk5vdGUncyBkZXZlbG9wbWVudCBpbiBtYW55
IHdheXMuCgotIEtlZXAgbW9uaXRvcmluZyBWTm90ZSBhbmQgc2VuZGluZyBm
ZWVkYmFjayBmb3IgaW1wcm92ZW1lbnQuCi0gU3ByZWFkIGFuZCBwcm9tb3Rl
IFZOb3RlIHRvIHlvdXIgZnJpZW5kcy4gUG9wdWxhcml0eSBpcyBhIHN0cm9u
ZyBwb3dlciB0byBkcml2ZSBkZXZlbG9wZXJzLgotIFBhcnRpY2lwYXRlIGlu
IHRoZSBkZXZlbG9wbWVudCBvZiBWTm90ZSBhbmQgc2VuZCBQdWxsUmVxdWVz
dCB0byBtYWtlIFZOb3RlIHBlcmZlY3QuCi0gTGFzdCwgcmVhbGx5IGFwcHJl
Y2lhdGUgeW91ciBkb25hdGUgdG8gVk5vdGUgaWYgeW91IHRoaW5rIFZOb3Rl
IHJlYWxseSBoZWxwcyB5b3UgYW5kIHlvdSB3YW50IHRvIGhlbHAgVk5vdGUu
CgoqKlBheVBhbCoqOiBbUGF5UGFsLk1lL3Zub3RlbWRdKGh0dHBzOi8vd3d3
LnBheXBhbC5tZS92bm90ZW1kKQoKKipBbGlwYXkqKjogYHRhbWxva3ZlZXJA
Z21haWwuY29tYAoKPGltZyBzcmM9InNjcmVlbnNob3RzL2FsaXBheS5wbmci
IHdpZHRoPSIyNTZweCIgaGVpZ2h0PSIyNTZweCIgLz4KCioqV2VDaGF0KioK
CjxpbWcgc3JjPSJzY3JlZW5zaG90cy93ZWNoYXRfcGF5LnBuZyIgd2lkdGg9
IjI1NnB4IiBoZWlnaHQ9IjI1NnB4IiAvPgoKVGhhbmsgW3VzZXJzIHdobyBk
b25hdGVkIHRvIFZOb3RlXShodHRwczovL2dpdGh1Yi5jb20vdGFtbG9rL3Zu
b3RlL3dpa2kvRG9uYXRlLUxpc3QpIQoKIyBXaHkgVk5vdGUKIyMgTWFya2Rv
d24gRWRpdG9yICYgTm90ZXMgTWFuYWdlbWVudApWTm90ZSB0cmllcyB0byBi
ZSBhIHBvd2VyZnVsIE1hcmtkb3duIGVkaXRvciB3aXRoIG5vdGVzIG1hbmFn
ZW1lbnQsIG9yIGEgbm90ZS10YWtpbmcgYXBwbGljYXRpb24gd2l0aCBwbGVh
c2FudCBNYXJrZG93biBzdXBwb3J0LiBJZiB5b3UgYXJlIGEgZmFuIG9mIE1h
cmtkb3duIGFuZCBlbmpveSB3cml0aW5nIE1hcmtkb3duIG5vdGVzIGZvciBz
dHVkeSwgd29yaywgYW5kIGxpZmUsIFZOb3RlIGlzIHRoZSByaWdodCB0b29s
IGZvciB5b3UuCgojIyBQbGVhc2FudCBNYXJrZG93biBFeHBlcmllbmNlCiMj
IyBJbnNpZ2h0cyBBYm91dCBNYXJrZG93bgpNYXJrZG93biwgYXMgYSBzaW1w
bGUgbWFyayBsYW5ndWFnZSwgdW5saWtlIHJpY2ggdGV4dCwgd2FzIGJvcm4g
d2l0aCBhICoqZ2FwIGJldHdlZW4gZWRpdCBhbmQgcmVhZCoqLiBUaGVyZSBh
cmUgYWJvdXQgdGhyZWUgd2F5cyB0byBoYW5kbGUgdGhpcyBnYXA6CgoxLiBB
cyBvbmUgZXh0cmVtZSwgc29tZSBlZGl0b3JzIGp1c3QgdHJlYXQgTWFya2Rv
d24gYXMgKipwbGFpbiB0ZXh0KiouIFVzZXJzIG1heSBsb3NlIHRoZW1zZWx2
ZXMgaW4gdGhlIG1lc3N5IGJsYWNrIGNoYXJhY3RlcnMuIEl0IGlzIGhhcmQg
dG8ga2VlcCB0cmFjayBvZiB0aGUgaW5mb3JtYXRpb24gb2YgdGhlIG5vdGUu
CjIuIE1vc3QgTWFya2Rvd24gZWRpdG9ycyB1c2UgdHdvIHBhbmVscyB0byAq
KmVkaXQgYW5kIHByZXZpZXcgTWFya2Rvd24gbm90ZXMgc2ltdWx0YW5lb3Vz
bHkqKi4gSXQgbWFrZXMgdGhpbmdzIGVhc2llciBzaW5jZSB1c2VycyBjb3Vs
ZCBzZWUgYSBwbGVhc2FudCB0eXBlc2V0dGluZyBhbmQgbGF5b3V0IHdoaWxl
IGVkaXRpbmcgdGhlIHRleHQuIEhvd2V2ZXIsIHR3byBwYW5lbHMgbWF5IG9j
Y3VweSB0aGUgd2hvbGUgc2NyZWVuIGFuZCB1c2VycyBrZWVwIG1vdmluZyBl
eWVzIGxlZnQgYW5kIHJpZ2h0IHdoaWNoIHdpbGwgYmUgYSBiaWcgZGlzdHJh
Y3Rpb24uCjMuIEFzIGFub3RoZXIgZXh0cmVtZSwgc29tZSBlZGl0b3JzIGNv
bnZlcnQgdGhlIE1hcmtkb3duIGVsZW1lbnRzIGluIHBsYWNlIGltbWVkaWF0
ZWx5IGFmdGVyIHRoZSB0eXBpbmcsIHdoaWNoIG1ha2VzIGVkaXRpbmcgTWFy
a2Rvd24ganVzdCBsaWtlIGVkaXRpbmcgcmljaCB0ZXh0IGRvY3VtZW50IGlu
IFdvcmQuCgpTaW5jZSBtb3N0IGVkaXRvcnMgY2hvb3NlIHRoZSBzZWNvbmQg
d2F5IHRvIGhhbmRsZSB0aGUgZ2FwLCBwZW9wbGUgYWx3YXlzIHRoaW5rIG9m
IHByZXZpZXcgd2hlbiBpdCBjb21lcyB0byBNYXJrZG93bi4gSXQgbWF5IGJl
IGEgbWlzdW5kZXJzdGFuZGluZyBhYm91dCBNYXJrZG93bi4gRGVzaWduZWQg
YXMgYSBzaW1wbGUgbWFyayBsYW5ndWFnZSwgTWFya2Rvd24gaXMgaW50ZW5k
ZWQgdG8gaGVscCB0byBrZWVwIHRyYWNrIG9mIHRoZSBpbmZvcm1hdGlvbiBv
ZiB0aGUgdGV4dCB3aGVuIGVkaXRpbmcgYW5kIHByb3ZpZGUgYSBiZWF1dGlm
dWwgdHlwZXNldHRpbmcgd2hlbiByZWFkaW5nIGFmdGVyIGJlaW5nIGNvbnZl
cnRlZCB0byBIVE1MLgoKIyMjIFRyYWRlb2ZmOiBWTm90ZSdzIFdheQpWTm90
ZSB0cmllcyB0byBtaW5pbWl6ZSB0aGUgZ2FwIGFuZCBwcm92aWRlIHRoZSBi
ZXN0LWVmZm9ydCAqV1lTSVdZRyogZm9yIE1hcmtkb3duIHZpYSB0dW5lZCAq
KnN5bnRheCBoaWdobGlnaHRzKiogYW5kIHNvbWUgb3RoZXIgZmVhdHVyZXMu
IEJ5IGhlbHBpbmcgdG8ga2VlcCB0cmFjayBvZiB0aGUgY29udGVudCwgdGhl
cmUgaXMgbm8gbmVlZCB0byBwcmV2aWV3IG9yIGFsdGVyIHRoZSB0ZXh0IGlt
bWVkaWF0ZWx5IGFmdGVyIGJlaW5nIHR5cGVkLgoKIyBGZWF0dXJlcwojIyBO
b3RlYm9vay1CYXNlZCBOb3RlcyBNYW5hZ2VtZW50ClZOb3RlIHVzZXMgKipu
b3RlYm9va3MqKiB0byBob2xkIHlvdXIgbm90ZXMuIExpa2UgT25lTm90ZSwg
YSBub3RlYm9vayBjYW4gYmUgaG9zdGVkIG9uIGFueSBsb2NhdGlvbiBvbiB5
b3VyIHN5c3RlbS4gQSBub3RlYm9vayBpcyBkZXNpZ25lZCB0byByZXByZXNl
bnQgb25lIGFjY291bnQuIEZvciBleGFtcGxlLCB5b3UgY291bGQgaGF2ZSBv
bmUgbm90ZWJvb2sgaG9zdGVkIG9uIGxvY2FsIGZpbGUgc3lzdGVtIGFuZCBh
bm90aGVyIG5vdGVib29rIGhvc3RlZCBvbiBhbiBPd25DbG91ZCBzZXJ2ZXIu
IFRoaXMgaXMgcmVhbGx5IHVzZWZ1bCB3aGVuIG5vdGVzIHJlcXVpcmUgZGlm
ZmVyZW50IGxldmVscyBvZiBzZWN1cml0eS4KCkEgbm90ZWJvb2sgY29ycmVz
cG9uZHMgdG8gYSBzZWxmLWNvbnRhaW5lZCBmb2xkZXIgKGNhbGxlZCB0aGUg
KlJvb3QgRm9sZGVyKiBvZiB0aGUgbm90ZWJvb2spIGluIHRoZSBmaWxlIHN5
c3RlbS4gWW91IGNvdWxkIGNvcHkgdGhlIGZvbGRlciB0byBhbm90aGVyIGxv
Y2F0aW9uIChvciBvbiBhbm90aGVyIGNvbXB1dGVyKSBhbmQgaW1wb3J0IGl0
IGludG8gVk5vdGUuCgpBIG5vdGVib29rIGNvdWxkIGhhdmUgaW5maW5pdGUg
bGV2ZWxzIG9mIGZvbGRlcnMuIFZOb3RlIHN1cHBvcnRzIGNvcHlpbmcgb3Ig
bW92aW5nIGZvbGRlcnMgb3Igbm90ZXMgd2l0aGluIG9yIGJldHdlZW4gbm90
ZWJvb2tzLgoKIyMgU2ltcGxlIE5vdGVzIE1hbmFnZW1lbnQKQWxsIHlvdXIg
bm90ZXMgYXJlIG1hbmFnZWQgYnkgc29tZSBwbGFpbnRleHQgY29uZmlndXJh
dGlvbiBmaWxlcyBhbmQgc3RvcmVkIGFzIHBsYWludGV4dCBmaWxlcy4gWW91
IGNvdWxkIGFjY2VzcyB5b3VyIG5vdGVzIHdpdGhvdXQgVk5vdGUuIFlvdSBj
b3VsZCB1c2UgZXh0ZXJuYWwgZmlsZSBzeW5jaHJvbml6YXRpb24gc2Vydmlj
ZXMgdG8gc3luY2hyb25pemUgeW91ciBub3RlcyBhbmQgaW1wb3J0IHRoZW0g
b24gYW5vdGhlciBtYWNoaW5lLgoKVk5vdGUgc3VwcG9ydHMgYm90aCBNYXJr
ZG93biAoc3VmZml4IGBtZGApIGFuZCByaWNoIHRleHQgbm90ZXMuCgojIyBT
eW50YXggSGlnaGxpZ2h0ClZOb3RlIHN1cHBvcnRzIGFjY3VyYXRlIHN5bnRh
eCBoaWdobGlnaHQgZm9yIE1hcmtkb3duLiBUdW5pbmcgdGhlIHN0eWxlIG9m
IHRoZSBoaWdobGlnaHQsIFZOb3RlIGVuYWJsZXMgeW91IHRvIGtlZXAgdHJh
Y2sgb2YgeW91ciBkb2N1bWVudCBlYXNpbHkuCgpWTm90ZSBhbHNvIHN1cHBv
cnRzICoqc3ludGF4IGhpZ2hsaWdodCBmb3IgZmVuY2VkIGNvZGUgYmxvY2tz
KiogaW4gZWRpdCBtb2RlIGluIE1hcmtkb3duLCB3aGljaCBpcyAqKnN1cGVy
aW9yKiogdGhhbiBhbG1vc3QgYWxsIGN1cnJlbnQgTWFya2Rvd24gZWRpdG9y
cy4KCiFbU3ludGF4IEhpZ2hsaWdodF0oc2NyZWVuc2hvdHMvXzE1MTM0ODUy
NjZfMTYxNjAzNzUxNy5wbmcpCgojIyBJbi1QbGFjZSBQcmV2aWV3ClZOb3Rl
IHN1cHBvcnRzIHBvd2VyZnVsICoqaW4tcGxhY2UgcHJldmlldyoqIGZvciBp
bWFnZXMsIGRpYWdyYW1zLCBhbmQgZm9ybXVsYXMgaW4gZWRpdCBtb2RlLgoK
IVtJbi1QbGFjZSBQcmV2aWV3XShzY3JlZW5zaG90cy9faW5wbGFjZXByZV8x
NTI1MTU1MjQ4XzQwNTYxNTgyMC5wbmcpCgojIyBQbGVhc2FudCBJbWFnZSBF
eHBlcmllbmNlCkp1c3QgcGFzdGUgeW91ciBpbWFnZSBpbnRvIHRoZSBNYXJr
ZG93biBub3RlLCBWTm90ZSB3aWxsIG1hbmFnZSBhbGwgb3RoZXIgc3R1ZmZz
LiBWTm90ZSBzdG9yZXMgaW1hZ2VzIGluIGEgc3BlY2lmaWVkIGZvbGRlciBp
biB0aGUgc2FtZSBmb2xkZXIgd2l0aCB0aGUgbm90ZS4gVk5vdGUgd2lsbCBw
b3AgdXAgYSB3aW5kb3cgdG8gcHJldmlldyB0aGUgaW1hZ2Ugd2hlbiB5b3Ug
aW5zZXJ0IGFuIGltYWdlLiBGdXJ0aGVybW9yZSwgVk5vdGUgd2lsbCBkZWxl
dGUgdGhlIHVzZWxlc3MgaW1hZ2UgZmlsZXMgYXV0b21hdGljYWxseSBhZnRl
ciB5b3UgcmVtb3ZlIHRoZSBpbWFnZSBsaW5rcy4KCiMjIFVuaXZlcnNhbCBF
bnRyeSAmIEZ1bGwtVGV4dCBTZWFyY2gKVk5vdGUgaGFzIHBvd2VyZnVsIGJ1
aWx0LWluIGZ1bGwtdGV4dCBzZWFyY2ggd2l0aCAqKlJlZ3VsYXIgRXhwcmVz
c2lvbioqIGFuZCAqKkZ1enp5IFNlYXJjaCoqIHN1cHBvcnQuIFRoZSBzZWFy
Y2ggY291bGQgYmUgZXhlY3V0ZWQgd2l0aGluIGFsbCBub3RlYm9va3MsIGN1
cnJlbnQgbm90ZWJvb2ssIG9yIGN1cnJlbnQgZm9sZGVyLCB0YXJnZXRlZCBh
dCBuYW1lIG9yIGNvbnRlbnQuCgpMaWtlIHRoZSBgQ3RybFBgIGluIFZpbSwg
Vk5vdGUgc3VwcG9ydHMgKipVbml2ZXJzYWwgRW50cnkqKiB0byByZWFjaCBh
bnl0aGluZyBieSB0eXBpbmcgaW4gYSBzaW1wbGUgaW5wdXQuCgohW1VuaXZl
cnNhbCBFbnRyeV0oc2NyZWVuc2hvdHMvX3VuaXZlcnNhbGVfMTUyMjg5NDgy
MV80NjU3NzI2NjkucG5nKQoKIyMgSW50ZXJhY3RpdmUgT3V0bGluZSBWaWV3
ZXIgSW4gUmVhZCAmIEVkaXQgTW9kZQpWTm90ZSBwcm92aWRlcyBhIHVzZXIt
ZnJpZW5kbHkgb3V0bGluZSB2aWV3ZXIgZm9yIGJvdGggZWRpdCBhbmQgdmll
dyBtb2RlLiBUaGUgb3V0bGluZSB2aWV3ZXIgaXMgYSByZXNwb25zaXZlIGl0
ZW0gdHJlZSBpbnN0ZWFkIG9mIGEgc2VnbWVudCBvZiBIVE1MLgoKIyMgUG93
ZXJmdWwgU2hvcnRjdXRzClZOb3RlIHN1cHBvcnRzIG1hbnkgcGxlYXNhbnQg
YW5kIHBvd2VyZnVsIHNob3J0Y3V0cyB3aGljaCBmYWNpbGl0YXRlIHlvdXIg
ZWRpdGluZywgaW5jbHVkaW5nICoqVmltIE1vZGUqKiwgKipDYXB0YWluIE1v
ZGUqKiwgYW5kICoqTmF2aWdhdGlvbiBNb2RlKiogd2hpY2ggZW5hYmxlIHlv
dSB0byB3b3JrIHdpdGhvdXQgdGhlIG1vdXNlLgoKUGxlYXNlIHJlZmVyIHRv
IHRoZSBbc2hvcnRjdXRzIGhlbHBdKHNyYy9yZXNvdXJjZXMvZG9jcy9zaG9y
dGN1dHNfZW4ubWQpIGluIHRoZSBoZWxwIG1lbnUgZm9yIG1vcmUgZGV0YWls
cy4KCiMjIEhpZ2hseSBDb25maWd1cmFibGUKSW4gVk5vdGUsIGFsbW9zdCBl
dmVyeXRoaW5nIGlzIGNvbmZpZ3VyYWJsZSwgc3VjaCBhcyBiYWNrZ3JvdW5k
IGNvbG9yLCBmb250LCBhbmQgTWFya2Rvd24gc3R5bGUuIFZOb3RlIHVzZXMg
YSBwbGFpbnRleHQgZmlsZSB0byByZWNvcmQgYWxsIHlvdXIgY29uZmlndXJh
dGlvbiwgc28geW91IGNvdWxkIGp1c3QgY29weSB0aGF0IGZpbGUgdG8gaW5p
dGlhbGl6ZSBhIG5ldyBWTm90ZSBvbiBhbm90aGVyIGNvbXB1dGVyLgoKIyBE
ZXBlbmRlbmNpZXMKLSBbUXQgNS45XShodHRwOi8vcXQtcHJvamVjdC5vcmcp
IChMLUdQTCB2MykKLSBbUEVHIE1hcmtkb3duIEhpZ2hsaWdodF0oaHR0cDov
L2hhc3NlZy5vcmcvcGVnLW1hcmtkb3duLWhpZ2hsaWdodC8pIChNSVQgTGlj
ZW5zZSkKLSBbSG9lZG93biAzLjAuN10oaHR0cHM6Ly9naXRodWIuY29tL2hv
ZWRvd24vaG9lZG93bi8pIChJU0MgTGljZW5zZSkKLSBbTWFya2VkIDAuNS4x
XShodHRwczovL2dpdGh1Yi5jb20vbWFya2VkanMvbWFya2VkKSAoTUlUIExp
Y2Vuc2UpCi0gW0hpZ2hsaWdodC5qc10oaHR0cHM6Ly9naXRodWIuY29tL2lz
YWdhbGFldi9oaWdobGlnaHQuanMvKSAoQlNEIExpY2Vuc2UpCi0gW0lvbmlj
b25zIDIuMC4xXShodHRwczovL2dpdGh1Yi5jb20vZHJpZnR5Y28vaW9uaWNv
bnMvKSAoTUlUIExpY2Vuc2UpCi0gW21hcmtkb3duLWl0IDguMy4xXShodHRw
czovL2dpdGh1Yi5jb20vbWFya2Rvd24taXQvbWFya2Rvd24taXQpIChNSVQg
TGljZW5zZSkKLSBbbWFya2Rvd24taXQtaGVhZGluZ2FuY2hvciAxLjMuMF0o
aHR0cHM6Ly9naXRodWIuY29tL2FkYW0tcC9tYXJrZG93bi1pdC1oZWFkaW5n
YW5jaG9yKSAoTUlUIExpY2Vuc2UpCi0gW21hcmtkb3duLWl0LXRhc2stbGlz
dHMgMS40LjBdKGh0dHBzOi8vZ2l0aHViLmNvbS9yZXZpbi9tYXJrZG93bi1p
dC10YXNrLWxpc3RzKSAoSVNDIExpY2Vuc2UpCi0gW21hcmtkb3duLWl0LWZv
b3Rub3RlXShodHRwczovL2dpdGh1Yi5jb20vbWFya2Rvd24taXQvbWFya2Rv
d24taXQtZm9vdG5vdGUpIChNSVQgTGljZW5zZSkKLSBbbWFya2Rvd24taXQt
c3ViXShodHRwczovL2dpdGh1Yi5jb20vbWFya2Rvd24taXQvbWFya2Rvd24t
aXQtc3ViKSAoTUlUIExpY2Vuc2UpCi0gW21hcmtkb3duLWl0LXN1cF0oaHR0
cHM6Ly9naXRodWIuY29tL21hcmtkb3duLWl0L21hcmtkb3duLWl0LXN1cCkg
KE1JVCBMaWNlbnNlKQotIFttYXJrZG93bi1pdC1mcm9udC1tYXR0ZXJdKGh0
dHBzOi8vZ2l0aHViLmNvbS9jcmFpZ2RtY2tlbm5hL21hcmtkb3duLWl0LWZy
b250LW1hdHRlcikgKE1JVCBMaWNlbnNlKQotIFttYXJrZG93bi1pdC1pbXNp
emVdKGh0dHBzOi8vZ2l0aHViLmNvbS90YXRzeS9tYXJrZG93bi1pdC1pbXNp
emUpIChVbmtub3duKSAoVGhhbmtzIEBLaW5rYSBmb3IgaGVscCkKLSBbbWFy
a2Rvd24taXQtZW1vamldKGh0dHBzOi8vZ2l0aHViLmNvbS9tYXJrZG93bi1p
dC9tYXJrZG93bi1pdC1lbW9qaSkgKE1JVCBMaWNlbnNlKQotIFttYXJrZG93
bi1pdC10ZXhtYXRoXShodHRwczovL2dpdGh1Yi5jb20vZ29lc3NuZXIvbWFy
a2Rvd24taXQtdGV4bWF0aCkgKE1JVCBMaWNlbnNlKQotIFttYXJrZG93bi1p
dC1jb250YWluZXIgMi4wLjBdKGh0dHBzOi8vZ2l0aHViLmNvbS9tYXJrZG93
bi1pdC9tYXJrZG93bi1pdC1jb250YWluZXIpIChNSVQgTGljZW5zZSkKLSBb
bWVybWFpZCA3LjAuMF0oaHR0cHM6Ly9naXRodWIuY29tL2tuc3YvbWVybWFp
ZCkgKE1JVCBMaWNlbnNlKQotIFtNYXRoSmF4XShodHRwczovL3d3dy5tYXRo
amF4Lm9yZy8pIChBcGFjaGUtMi4wKQotIFtzaG93ZG93bl0oaHR0cHM6Ly9n
aXRodWIuY29tL3Nob3dkb3duanMvc2hvd2Rvd24pIChVbmtub3duKQotIFtm
bG93Y2hhcnQuanNdKGh0dHBzOi8vZ2l0aHViLmNvbS9hZHJhaS9mbG93Y2hh
cnQuanMpIChNSVQgTGljZW5zZSkKLSBbUGxhbnRVTUxdKGh0dHA6Ly9wbGFu
dHVtbC5jb20vKSAoTUlUIExpY2Vuc2UpCi0gW2RvbS10by1pbWFnZV0oaHR0
cHM6Ly9naXRodWIuY29tL3RzYXllbi9kb20tdG8taW1hZ2UpIChNSVQgTGlj
ZW5zZSkKLSBbdHVybmRvd25dKGh0dHBzOi8vZ2l0aHViLmNvbS9kb21jaHJp
c3RpZS90dXJuZG93bikgKE1JVCBMaWNlbnNlKQoKIyBMaWNlbnNlClZOb3Rl
IGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBbTUlUIGxpY2Vuc2VdKGh0dHA6Ly9v
cGVuc291cmNlLm9yZy9saWNlbnNlcy9NSVQpLgo=
",,5934,"ZGlzdDogdHJ1c3R5CnN1ZG86IHJlcXVpcmVkCmdpdDoKICBkZXB0aDogMQps
YW5ndWFnZTogY3BwCgptYXRyaXg6CiAgaW5jbHVkZToKICAgIC0gb3M6IG9z
eAogICAgICBjb21waWxlcjogY2xhbmcKICAgICAgb3N4X2ltYWdlOiB4Y29k
ZTkuNAogICAgLSBvczogbGludXgKICAgICAgY29tcGlsZXI6IGcrKwoKYnJh
bmNoZXM6CiAgb25seToKICAgIC0gbWFzdGVyCgpiZWZvcmVfaW5zdGFsbDoK
LSBpZiBbWyAiJHtUUkFWSVNfT1NfTkFNRX0iID09ICJsaW51eCIgXV07IHRo
ZW4gc3VkbyBhZGQtYXB0LXJlcG9zaXRvcnkgLXkgcHBhOnVidW50dS10b29s
Y2hhaW4tci90ZXN0OyBmaQotIGlmIFtbICIke1RSQVZJU19PU19OQU1FfSIg
PT0gImxpbnV4IiBdXTsgdGhlbiBzdWRvIGFwdC1nZXQgLXFxIHVwZGF0ZSA7
IGZpCi0gZXhwb3J0IHZlcnNpb249IjIuNy4yIgoKaW5zdGFsbDoKLSBpZiBb
WyAiJHtUUkFWSVNfT1NfTkFNRX0iID09ICJsaW51eCIgXV07IHRoZW4gc3Vk
byAtRSBhcHQtZ2V0IC15cSAtLW5vLWluc3RhbGwtc3VnZ2VzdHMgLS1uby1p
bnN0YWxsLXJlY29tbWVuZHMgLS1mb3JjZS15ZXMgaW5zdGFsbCBwN3ppcC1m
dWxsIDsgZmkKLSBpZiBbWyAiJHtUUkFWSVNfT1NfTkFNRX0iID09ICJsaW51
eCIgXV07IHRoZW4gc3VkbyAtRSBhcHQtZ2V0IC15cSAtLW5vLWluc3RhbGwt
c3VnZ2VzdHMgLS1uby1pbnN0YWxsLXJlY29tbWVuZHMgLS1mb3JjZS15ZXMg
aW5zdGFsbCBjaHJwYXRoIDsgZmkKLSBpZiBbWyAiJHtUUkFWSVNfT1NfTkFN
RX0iID09ICJsaW51eCIgXV07IHRoZW4gc3VkbyAtRSBhcHQtZ2V0IC15cSAt
LW5vLWluc3RhbGwtc3VnZ2VzdHMgLS1uby1pbnN0YWxsLXJlY29tbWVuZHMg
LS1mb3JjZS15ZXMgaW5zdGFsbCBvcGVuc3NsIGxpYnNzbC1kZXYgOyBmaQot
IGlmIFtbICIke1RSQVZJU19PU19OQU1FfSIgPT0gImxpbnV4IiBdXTsgdGhl
biBzdWRvIC1FIGFwdC1nZXQgLXlxIC0tbm8taW5zdGFsbC1zdWdnZXN0cyAt
LW5vLWluc3RhbGwtcmVjb21tZW5kcyAtLWZvcmNlLXllcyBpbnN0YWxsIGxp
YmdsMS1tZXNhLWRldiA7IGZpCi0gaWYgW1sgIiR7VFJBVklTX09TX05BTUV9
IiA9PSAibGludXgiIF1dOyB0aGVuIHN1ZG8gLUUgYXB0LWdldCAteXEgLS1u
by1pbnN0YWxsLXN1Z2dlc3RzIC0tbm8taW5zdGFsbC1yZWNvbW1lbmRzIC0t
Zm9yY2UteWVzIGluc3RhbGwgdHJlZSA7IGZpCi0gaWYgW1sgIiR7VFJBVklT
X09TX05BTUV9IiA9PSAibGludXgiIF1dOyB0aGVuIHN1ZG8gYXB0LWdldCBp
bnN0YWxsIC1xcSBnY2MtNjsgc3VkbyB1cGRhdGUtYWx0ZXJuYXRpdmVzIC0t
aW5zdGFsbCAvdXNyL2Jpbi9nY2MgZ2NjIC91c3IvYmluL2djYy02IDEwMCA7
IGZpCi0gaWYgW1sgIiR7VFJBVklTX09TX05BTUV9IiA9PSAibGludXgiIF1d
OyB0aGVuIHN1ZG8gYXB0LWdldCBpbnN0YWxsIC1xcSBnKystNjsgc3VkbyB1
cGRhdGUtYWx0ZXJuYXRpdmVzIC0taW5zdGFsbCAvdXNyL2Jpbi9nKysgZysr
IC91c3IvYmluL2crKy02IDEwMCA7IGZpCgpiZWZvcmVfc2NyaXB0OgotIGlm
IFtbICIke1RSQVZJU19PU19OQU1FfSIgPT0gImxpbnV4IiBdXTsgdGhlbiBj
aG1vZCAreCAudHJhdmlzX2xpbnV4LnNoIDsgZmkKLSBpZiBbWyAiJHtUUkFW
SVNfT1NfTkFNRX0iID09ICJvc3giIF1dOyB0aGVuIGNobW9kICt4IC50cmF2
aXNfbWFjb3Muc2ggOyBmaQoKc2NyaXB0OgotIGlmIFtbICIke1RSQVZJU19P
U19OQU1FfSIgPT0gImxpbnV4IiBdXTsgdGhlbiBDWFg9ImcrKy02IiBDQz0i
Z2NjLTYiIC4vLnRyYXZpc19saW51eC5zaCA7IGZpCi0gaWYgW1sgIiR7VFJB
VklTX09TX05BTUV9IiA9PSAib3N4IiBdXTsgdGhlbiAuLy50cmF2aXNfbWFj
b3Muc2ggOyBmaQoKZGVwbG95OgogIC0gcHJvdmlkZXI6IGJpbnRyYXkKICAg
IHNraXBfY2xlYW51cDogdHJ1ZQogICAgZmlsZTogIi4vLmxpbnV4X2JpbnRy
YXkuanNvbiIKICAgIHVzZXI6IHRhbWxvawogICAga2V5OgogICAgICBzZWN1
cmU6IHZBRGxyWVN1c0FSbkh4SzNOVFQzcjFyNkkvbHJ4eUV1RktMT083M0tY
bDZydkR5d3JyRERpNllzRmVrTDE0L28zY2xaS0xPQzhMYnZBKzRCS1BWU29H
VE80RHB4L2k1MWZYcGhmK21NRkIzUVhTR25icUhtNCsyWm5oQ2w2MnZmVmxG
ZU9QQkxETzBLVUJJOERDUDBJK1FvZ09VaWNrWHYzell4Njl6NkF1ZFN4Z2pZ
N25Qb041akdTUGd5SWQ0cjNvOFNocmoxRmsxV3RONnFjaUt5UG5lNTd2K2pt
dlJsSlRrb0VmWWt2d1RSTk1CbG1hS3k4VmovQ1NvSXZCOFRIOGJ2M3JoSExy
TjRvMVFDd2VQZGFYOUc3eGxJbVNwWHFnUmd6UVZVM1NSRk4yYllUajVEWmMx
YUZ5QTdpTk9obXdnQ0xBTjZPcnFYeXlKQ2J5eXdOaHlsZmdhZDJyUUFOY2ZY
aVp3OXl3b29LRVlhZkxEUnVpSzJHNlBrOG0rUjZEZWQ5SkJvWDlNU3ovWkR4
eGZrNE5tTE85OTF3UzdJSzVhRlRRZkhaejVXOFRtaDFyQ3BoRndsREkvUnhz
N0V4Ylh1N0lOQThJaG9McE9TbUxJQTVsZmRDNGZEOHJ2OG1qeTVnZnBNa1ds
UDhYQVRmaTJlTUg5dUdqODlhSmE2eHA3QmMybWZXM003MVlIdFlQL3B5RS83
Qms1dlZvblA4Q3E5cks2T3J1TUlVWXRObVhvSm5wdGUyMGVjU1hqOXl3N29U
UjI3ZGhTeDNYdUFLT1hpTnBJYXUwQ1B4dFhBNWNTbTVYME9TMUx0OFJXcm1z
MGpwOUNoMmRneGxOTXByMHNvRjlEbXdla2hmSG5Wb09MeUZCV0JNRHd2a3g1
VFdpajlGTkFBSmI0PQogICAgZHJ5LXJ1bjogZmFsc2UKICAgIG9uOgogICAg
ICBjb25kaXRpb246ICRUUkFWSVNfT1NfTkFNRSA9IGxpbnV4CiAgICAgIGJy
YW5jaDogbWFzdGVyCiAgLSBwcm92aWRlcjogYmludHJheQogICAgc2tpcF9j
bGVhbnVwOiB0cnVlCiAgICBmaWxlOiAiLi8ubWFjb3NfYmludHJheS5qc29u
IgogICAgdXNlcjogdGFtbG9rCiAgICBrZXk6CiAgICAgIHNlY3VyZTogdkFE
bHJZU3VzQVJuSHhLM05UVDNyMXI2SS9scnh5RXVGS0xPTzczS1hsNnJ2RHl3
cnJERGk2WXNGZWtMMTQvbzNjbFpLTE9DOExidkErNEJLUFZTb0dUTzREcHgv
aTUxZlhwaGYrbU1GQjNRWFNHbmJxSG00KzJabmhDbDYydmZWbEZlT1BCTERP
MEtVQkk4RENQMEkrUW9nT1VpY2tYdjN6WXg2OXo2QXVkU3hnalk3blBvTjVq
R1NQZ3lJZDRyM284U2hyajFGazFXdE42cWNpS3lQbmU1N3Yram12UmxKVGtv
RWZZa3Z3VFJOTUJsbWFLeThWai9DU29JdkI4VEg4YnYzcmhITHJONG8xUUN3
ZVBkYVg5Rzd4bEltU3BYcWdSZ3pRVlUzU1JGTjJiWVRqNURaYzFhRnlBN2lO
T2htd2dDTEFONk9ycVh5eUpDYnl5d05oeWxmZ2FkMnJRQU5jZlhpWnc5eXdv
b0tFWWFmTERSdWlLMkc2UGs4bStSNkRlZDlKQm9YOU1Tei9aRHh4Zms0Tm1M
Tzk5MXdTN0lLNWFGVFFmSFp6NVc4VG1oMXJDcGhGd2xESS9SeHM3RXhiWHU3
SU5BOElob0xwT1NtTElBNWxmZEM0ZkQ4cnY4bWp5NWdmcE1rV2xQOFhBVGZp
MmVNSDl1R2o4OWFKYTZ4cDdCYzJtZlczTTcxWUh0WVAvcHlFLzdCazV2Vm9u
UDhDcTlySzZPcnVNSVVZdE5tWG9KbnB0ZTIwZWNTWGo5eXc3b1RSMjdkaFN4
M1h1QUtPWGlOcElhdTBDUHh0WEE1Y1NtNVgwT1MxTHQ4UldybXMwanA5Q2gy
ZGd4bE5NcHIwc29GOURtd2VraGZIblZvT0x5RkJXQk1Ed3ZreDVUV2lqOUZO
QUFKYjQ9CiAgICBkcnktcnVuOiBmYWxzZQogICAgb246CiAgICAgIGNvbmRp
dGlvbjogJFRSQVZJU19PU19OQU1FID0gb3N4CiAgICAgIGJyYW5jaDogbWFz
dGVyCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'TeamTalk',32512065,b'TeamTalk is a solution for enterprise IM',b'Objective-C',135,5933,,629,False,b'https://api.github.com/repos/meili/TeamTalk/forks',"IyBUZWFtVGFsawoJVGVhbVRhbGsgaXMgYSBzb2x1dGlvbiBmb3IgZW50ZXJw
cmlzZSBJTQoJCgnlhbfkvZPmlofmoaPop4Fkb2Pnm67lvZXkuIss5a6J6KOF
5LmL5YmN6K+35LuU57uG6ZiF6K+755u45YWz5paH5qGj44CCCgkKIyDkuqTm
tYEKCQnlu7rorq7lpKflrrblnKjlvIDlj5Hov4fnqIvkuK3pgYfliLDpl67p
opgs5o+Q5LqkaXNzdWVz5YiwaHR0cHM6Ly9naXRodWIuY29tL21vZ3VqaWUv
VGVhbVRhbGsvaXNzdWVzICAKCQkKCQnmiJHku6znmoTlrpjmlrnnu7TmiqTk
urrlkZjkvJrmir3ml7bpl7Top6PnrZQs6LCi6LCi5aSn5a6255qE55CG6Kej
LgoJCSogcXHnvqQ6MzQxMjczMjE4Cg==
",,5933,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'facets',96544175,b'Visualizations for machine learning datasets',b'Jupyter Notebook',57,5932,,280,False,b'https://api.github.com/repos/PAIR-code/facets/forks',"IyBJbnRyb2R1Y3Rpb24KClRoZSBmYWNldHMgcHJvamVjdCBjb250YWlucyB0
d28gdmlzdWFsaXphdGlvbnMgZm9yIHVuZGVyc3RhbmRpbmcgYW5kIGFuYWx5
emluZyBtYWNoaW5lIGxlYXJuaW5nIGRhdGFzZXRzOiBGYWNldHMgT3ZlcnZp
ZXcgYW5kIEZhY2V0cyBEaXZlLgoKVGhlIHZpc3VhbGl6YXRpb25zIGFyZSBp
bXBsZW1lbnRlZCBhcyBbUG9seW1lcl0oaHR0cHM6Ly93d3cucG9seW1lci1w
cm9qZWN0Lm9yZykgd2ViIGNvbXBvbmVudHMsIGJhY2tlZCBieSBbVHlwZXNj
cmlwdF0oaHR0cHM6Ly93d3cudHlwZXNjcmlwdGxhbmcub3JnKSBjb2RlIGFu
ZCBjYW4gYmUgZWFzaWx5IGVtYmVkZGVkIGludG8gSnVweXRlciBub3RlYm9v
a3Mgb3Igd2VicGFnZXMuCgpMaXZlIGRlbW9zIG9mIHRoZSB2aXN1YWxpemF0
aW9ucyBjYW4gYmUgZm91bmQgb24gdGhlIFtGYWNldHMgcHJvamVjdCBkZXNj
cmlwdGlvbiBwYWdlXShodHRwczovL3BhaXItY29kZS5naXRodWIuaW8vZmFj
ZXRzLykuCgojIyBGYWNldHMgT3ZlcnZpZXcKCiFbT3ZlcnZpZXcgdmlzdWFs
aXphdGlvbiBvZiBVQ0kgY2Vuc3VzIGRhdGFdKC9pbWcvb3ZlcnZpZXctY2Vu
c3VzLnBuZyAiT3ZlcnZpZXcgdmlzdWFsaXphdGlvbiBvZiBVQ0kgY2Vuc3Vz
IGRhdGEgLSAgTGljaG1hbiwgTS4gKDIwMTMpLiBVQ0kgTWFjaGluZSBMZWFy
bmluZyBSZXBvc2l0b3J5IFtodHRwOi8vYXJjaGl2ZS5pY3MudWNpLmVkdS9t
bC9kYXRhc2V0cy9DZW5zdXMrSW5jb21lXS4gSXJ2aW5lLCBDQTogVW5pdmVy
c2l0eSBvZiBDYWxpZm9ybmlhLCBTY2hvb2wgb2YgSW5mb3JtYXRpb24gYW5k
IENvbXB1dGVyIFNjaWVuY2UiKQoKT3ZlcnZpZXcgZ2l2ZXMgYSBoaWdoLWxl
dmVsIHZpZXcgb2Ygb25lIG9yIG1vcmUgZGF0YSBzZXRzLiBJdCBwcm9kdWNl
cyBhIHZpc3VhbCBmZWF0dXJlLWJ5LWZlYXR1cmUgc3RhdGlzdGljYWwgYW5h
bHlzaXMsIGFuZCBjYW4gYWxzbyBiZSB1c2VkIHRvIGNvbXBhcmUgc3RhdGlz
dGljcyBhY3Jvc3MgdHdvIG9yIG1vcmUgZGF0YSBzZXRzLiBUaGUgdG9vbCBj
YW4gcHJvY2VzcyBib3RoIG51bWVyaWMgYW5kIHN0cmluZyBmZWF0dXJlcywg
aW5jbHVkaW5nIG11bHRpcGxlIGluc3RhbmNlcyBvZiBhIG51bWJlciBvciBz
dHJpbmcgcGVyIGZlYXR1cmUuCgpPdmVydmlldyBjYW4gaGVscCB1bmNvdmVy
IGlzc3VlcyB3aXRoIGRhdGFzZXRzLCBpbmNsdWRpbmcgdGhlIGZvbGxvd2lu
ZzoKCiogVW5leHBlY3RlZCBmZWF0dXJlIHZhbHVlcwoqIE1pc3NpbmcgZmVh
dHVyZSB2YWx1ZXMgZm9yIGEgbGFyZ2UgbnVtYmVyIG9mIGV4YW1wbGVzCiog
VHJhaW5pbmcvc2VydmluZyBza2V3CiogVHJhaW5pbmcvdGVzdC92YWxpZGF0
aW9uIHNldCBza2V3CgpLZXkgYXNwZWN0cyBvZiB0aGUgdmlzdWFsaXphdGlv
biBhcmUgb3V0bGllciBkZXRlY3Rpb24gYW5kIGRpc3RyaWJ1dGlvbiBjb21w
YXJpc29uIGFjcm9zcyBtdWx0aXBsZSBkYXRhc2V0cy4KSW50ZXJlc3Rpbmcg
dmFsdWVzIChzdWNoIGFzIGEgaGlnaCBwcm9wb3J0aW9uIG9mIG1pc3Npbmcg
ZGF0YSwgb3IgdmVyeSBkaWZmZXJlbnQgZGlzdHJpYnV0aW9ucyBvZiBhIGZl
YXR1cmUgYWNyb3NzIG11bHRpcGxlIGRhdGFzZXRzKSBhcmUgaGlnaGxpZ2h0
ZWQgaW4gcmVkLgpGZWF0dXJlcyBjYW4gYmUgc29ydGVkIGJ5IHZhbHVlcyBv
ZiBpbnRlcmVzdCBzdWNoIGFzIHRoZSBudW1iZXIgb2YgbWlzc2luZyB2YWx1
ZXMgb3IgdGhlIHNrZXcgYmV0d2VlbiB0aGUgZGlmZmVyZW50IGRhdGFzZXRz
LgoKVGhlIHB5dGhvbiBjb2RlIHRvIGdlbmVyYXRlIHRoZSBzdGF0aXN0aWNz
IGZvciB2aXN1YWxpemF0aW9uIGNhbiBiZSBpbnN0YWxsZWQgdGhyb3VnaCBg
cGlwIGluc3RhbGwgZmFjZXRzLW92ZXJ2aWV3YC4KCkRldGFpbHMgYWJvdXQg
T3ZlcnZpZXcgdXNhZ2UgY2FuIGJlIGZvdW5kIGluIGl0cyBbUkVBRE1FXSgu
L2ZhY2V0c19vdmVydmlldy9SRUFETUUubWQpLgoKIyMgRmFjZXRzIERpdmUK
CiFbRGl2ZSB2aXN1YWxpemF0aW9uIG9mIFVDSSBjZW5zdXMgZGF0YV0oL2lt
Zy9kaXZlLWNlbnN1cy5wbmcgIkRpdmUgdmlzdWFsaXphdGlvbiBvZiBVQ0kg
Y2Vuc3VzIGRhdGEgLSAgTGljaG1hbiwgTS4gKDIwMTMpLiBVQ0kgTWFjaGlu
ZSBMZWFybmluZyBSZXBvc2l0b3J5IFtodHRwOi8vYXJjaGl2ZS5pY3MudWNp
LmVkdS9tbC9kYXRhc2V0cy9DZW5zdXMrSW5jb21lXS4gSXJ2aW5lLCBDQTog
VW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhLCBTY2hvb2wgb2YgSW5mb3JtYXRp
b24gYW5kIENvbXB1dGVyIFNjaWVuY2UiKQoKRGl2ZSBpcyBhIHRvb2wgZm9y
IGludGVyYWN0aXZlbHkgZXhwbG9yaW5nIHVwIHRvIHRlbnMgb2YgdGhvdXNh
bmRzIG9mIG11bHRpZGltZW5zaW9uYWwgZGF0YSBwb2ludHMsIGFsbG93aW5n
IHVzZXJzIHRvIHNlYW1sZXNzbHkgc3dpdGNoIGJldHdlZW4gYSBoaWdoLWxl
dmVsIG92ZXJ2aWV3IGFuZCBsb3ctbGV2ZWwgZGV0YWlscy4KRWFjaCBleGFt
cGxlIGlzIGEgcmVwcmVzZW50ZWQgYXMgc2luZ2xlIGl0ZW0gaW4gdGhlIHZp
c3VhbGl6YXRpb24gYW5kIHRoZSBwb2ludHMgY2FuIGJlIHBvc2l0aW9uZWQg
YnkgZmFjZXRpbmcvYnVja2V0aW5nIGluIG11bHRpcGxlIGRpbWVuc2lvbnMg
YnkgdGhlaXIgZmVhdHVyZSB2YWx1ZXMuIENvbWJpbmluZyBzbW9vdGggYW5p
bWF0aW9uIGFuZCB6b29taW5nIHdpdGggZmFjZXRpbmcgYW5kIGZpbHRlcmlu
ZywgRGl2ZSBtYWtlcyBpdCBlYXN5IHRvIHNwb3QgcGF0dGVybnMgYW5kIG91
dGxpZXJzIGluIGNvbXBsZXggZGF0YSBzZXRzLgoKRGV0YWlscyBhYm91dCBE
aXZlIHVzYWdlIGNhbiBiZSBmb3VuZCBpbiBpdHMgW1JFQURNRV0oLi9mYWNl
dHNfZGl2ZS9SRUFETUUubWQpLgoKIyBTZXR1cAoKIyMgVXNhZ2UgaW4gR29v
Z2xlIENvbGFicmF0b3J5L0p1cHl0ZXIgTm90ZWJvb2tzCgpVc2luZyBGYWNl
dHMgaW4gW0dvb2dsZSBDb2xhYnJhdG9yeV0oaHR0cHM6Ly9jb2xhYi5yZXNl
YXJjaC5nb29nbGUuY29tKSBhbmQgW0p1cHl0ZXJdKGh0dHA6Ly9qdXB5dGVy
Lm9yZykgbm90ZWJvb2tzIGNhbiBiZSBzZWVuCltpbiB0aGlzIG5vdGVib29r
XShodHRwczovL2NvbGFiLnJlc2VhcmNoLmdvb2dsZS5jb20vZ2l0aHViL1BB
SVItY29kZS9mYWNldHMvYmxvYi9tYXN0ZXIvY29sYWJfZmFjZXRzLmlweW5i
KS4gVGhlc2Ugbm90ZWJvb2tzIHdvcmsgd2l0aG91dCB0aGUgbmVlZCB0byBm
aXJzdCBkb3dubG9hZC9pbnN0YWxsIHRoaXMgcmVwb3NpdG9yeS4KCk5vdGUg
dGhhdCBmb3IgdXNpbmcgRmFjZXRzIE92ZXJ2aWV3IGluIGEgSnVweXRlciBu
b3RlYm9vaywgdGhlcmUgYXJlIHR3byBjb25zaWRlcmF0aW9uczoKMS4gSW4g
dGhlIG5vdGVib29rLCB5b3Ugd2lsbCBuZWVkIHRvIGNoYW5nZSB0aGUgcGF0
aCB0aGF0IHRoZSBGYWNldHMgT3ZlcnZpZXcgcHl0aG9uIGNvZGUgaXMgbG9h
ZGVkIGZyb20gdG8gdGhlIGNvcnJlY3QgcGF0aCBnaXZlbiB3aGVyZSB5b3Vy
IG5vdGVib29rIGtlcm5lbCBpcyBydW4gZnJvbS4KMi4gWW91IG11c3QgYWxz
byBoYXZlIHRoZSBQcm90b2NvbCBCdWZmZXJzIHB5dGhvbiBydW50aW1lIGxp
YnJhcnkgaW5zdGFsbGVkOiBodHRwczovL2dpdGh1Yi5jb20vZ29vZ2xlL3By
b3RvYnVmL3RyZWUvbWFzdGVyL3B5dGhvbi4gSWYgeW91IHVzZWQgcGlwIG9y
IGFuYWNvbmRhIHRvIGluc3RhbGwgSnVweXRlciwgeW91IGNhbiB1c2UgdGhl
IHNhbWUgdG9vbCB0byBpbnN0YWxsIHRoZSBydW50aW1lIGxpYnJhcnkuCgpX
aGVuIHZpc3VhbGl6aW5nIGEgbGFyZ2UgYW1vdW50IG9mIGRhdGEgaW4gRGl2
ZSBpbiBhIEp1eXB0ZXIgbm90ZWJvb2ssIGFzIGlzIGRvbmUgaW4gdGhlIFtE
aXZlIGRlbW8gSnVweXRlciBub3RlYm9va10oLi9mYWNldHNfZGl2ZS9EaXZl
X2RlbW8uaXB5bmIpLCB5b3Ugd2lsbCBuZWVkIHRvIHN0YXJ0IHRoZSBub3Rl
Ym9vayBzZXJ2ZXIgd2l0aCBhbiBpbmNyZWFzZWQgSU9QdWIgZGF0YSByYXRl
LgpUaGlzIGNhbiBiZSBkb25lIHdpdGggdGhlIGNvbW1hbmQgYGBganVweXRl
ciBub3RlYm9vayAtLU5vdGVib29rQXBwLmlvcHViX2RhdGFfcmF0ZV9saW1p
dD0xMDAwMDAwMGBgYC4KCiMjIENvZGUgSW5zdGFsbGF0aW9uCmBgYApnaXQg
Y2xvbmUgaHR0cHM6Ly9naXRodWIuY29tL1BBSVItY29kZS9mYWNldHMKY2Qg
ZmFjZXRzCmBgYAoKIyMgQnVpbGRpbmcgdGhlIFZpc3VhbGl6YXRpb25zCgpJ
ZiB5b3UgbWFrZSBjb2RlIGNoYW5nZXMgdG8gdGhlIHZpc3VhbGl6YXRpb24g
YW5kIHdvdWxkIGxpa2UgdG8gcmVidWlsZCB0aGVtLCBmb2xsb3cgdGhlc2Ug
ZGlyZWN0aW9uczoKCjEuIEluc3RhbGwgYmF6ZWw6IGh0dHBzOi8vYmF6ZWwu
YnVpbGQvCjIuIEJ1aWxkIHRoZSB2aXN1YWxpemF0aW9uczogYGBgYmF6ZWwg
YnVpbGQgZmFjZXRzOmZhY2V0c19qdXB5dGVyYGBgIChydW4gZnJvbSB0aGUg
ZmFjZXRzIHRvcC1sZXZlbCBkaXJlY3RvcnkpCgojIyBVc2luZyB0aGUgcmVi
dWlsdCBWaXN1YWxpemF0aW9ucyBpbiBhIEp1cHl0ZXIgbm90ZWJvb2sKCklm
IHlvdSB3YW50IHRvIHVzZSB0aGUgdmlzdWFsaXphdGlvbnMgeW91IGJ1aWx0
IGxvY2FsbHkgaW4gYSBKdXB5dGVyIG5vdGVib29rLCBmb2xsb3cgdGhlc2Ug
ZGlyZWN0aW9uczoKCjEuIE1vdmUgdGhlIHJlc3VsdGluZyB2dWxjYW5pemVk
IGh0bWwgZmlsZSBmcm9tIHRoZSBidWlsZCBzdGVwIGludG8gdGhlIGZhY2V0
cy1kaXN0IGRpcmVjdG9yeS4KMi4gSW5zdGFsbCB0aGUgdmlzdWFsaXphdGlv
bnMgaW50byBKdXB5dGVyIGFzIGFuIG5iZXh0ZW5zaW9uLgogICogSWYganVw
eXRlciB3YXMgaW5zdGFsbGVkIHdpdGggcGlwLCB5b3UgY2FuIHVzZSBgYGBq
dXB5dGVyIG5iZXh0ZW5zaW9uIGluc3RhbGwgZmFjZXRzLWRpc3QvIGBgYCBp
ZiBqdXB5dGVyIHdhcyBpbnN0YWxsZWQgc3lzdGVtLXdpZGUgb3IgYGBganVw
eXRlciBuYmV4dGVuc2lvbiBpbnN0YWxsIGZhY2V0cy1kaXN0LyAtLXVzZXJg
YGAgaWYgaW5zdGFsbGVkIHBlci11c2VyIChydW4gZnJvbSB0aGUgZmFjZXRz
IHRvcC1sZXZlbCBkaXJlY3RvcnkpLiBZb3UgZG8gbm90IG5lZWQgdG8gcnVu
IGFueSBmb2xsb3ctdXAgYGBganVweXRlciBuYmV4dGVuc2lvbiBlbmFibGVg
YGAgY29tbWFuZCBmb3IgdGhpcyBleHRlbnNpb24uCiAgKiBBbHRlcm5hdGl2
ZWx5LCB5b3UgY2FuIG1hbnVhbGx5IGluc3RhbGwgdGhlIG5iZXh0ZW5zaW9u
IGJ5IGZpbmRpbmcgeW91ciBqdXB5dGVyIGluc3RhbGxhdGlvbidzIGBgYHNo
YXJlL2p1cHl0ZXIvbmJleHRlbnNpb25zYGBgIGZvbGRlciBhbmQgY29weWlu
ZyB0aGUgZmFjZXRzLWRpc3QgZGlyZWN0b3J5IGludG8gaXQuCjMuIEluIHRo
ZSBub3RlYm9vayBjZWxsJ3MgSFRNTCBsaW5rIHRhZyB0aGF0IGxvYWRzIHRo
ZSBidWlsdCBmYWNldHMgaHRtbCwgbG9hZCBmcm9tIGBgYC9uYmV4dGVuc2lv
bnMvZmFjZXRzLWRpc3QvZmFjZXRzLWp1cHl0ZXIuaHRtbGBgYCwgd2hpY2gg
aXMgdGhlIGxvY2FsbHkgaW5zdGFsbGVkIGZhY2V0cyBkaXN0cmlidXRpb24u
IGZyb20gdGhlIHByZXZpb3VzIHN0ZXAuCgojIyBLbm93biBJc3N1ZXMKCiog
VGhlIEZhY2V0cyB2aXN1YWxpemF0aW9ucyBjdXJyZW50bHkgd29yayBvbmx5
IGluIENocm9tZSAtIFtJc3N1ZSA5XSguLi8uLi9pc3N1ZXMvOSkuCgoqKkRp
c2NsYWltZXI6IFRoaXMgaXMgbm90IGFuIG9mZmljaWFsIEdvb2dsZSBwcm9k
dWN0KioK
",,5932,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'ktor',40136600,b'Framework for quickly creating connected applications in Kotlin with minimal effort',b'Kotlin',447,5932,,156,False,b'https://api.github.com/repos/ktorio/ktor/forks',"PGltZyBzcmM9Imh0dHA6Ly9rdG9yLmlvL2Fzc2V0cy9pbWFnZXMva3Rvcl9s
b2dvLnBuZyIgYWx0PSJLdG9yIiB3aWR0aD0iNjAwIiBzdHlsZT0ibWF4LXdp
ZHRoOjEwMCU7Ij4KClshW09mZmljaWFsIEpldEJyYWlucyBwcm9qZWN0XSho
dHRwOi8vamIuZ2cvYmFkZ2VzL29mZmljaWFsLnN2ZyldKGh0dHBzOi8vY29u
Zmx1ZW5jZS5qZXRicmFpbnMuY29tL2Rpc3BsYXkvQUxML0pldEJyYWlucytv
bitHaXRIdWIpClshW0Rvd25sb2FkXShodHRwczovL2FwaS5iaW50cmF5LmNv
bS9wYWNrYWdlcy9rb3RsaW4va3Rvci9rdG9yL2ltYWdlcy9kb3dubG9hZC5z
dmcpIF0oaHR0cHM6Ly9iaW50cmF5LmNvbS9rb3RsaW4va3Rvci9rdG9yL19s
YXRlc3RWZXJzaW9uKQpbIVtUZWFtQ2l0eSBCdWlsZF0oaHR0cHM6Ly9pbWcu
c2hpZWxkcy5pby90ZWFtY2l0eS9odHRwL3RlYW1jaXR5LmpldGJyYWlucy5j
b20vcy9Lb3RsaW5Ub29sc19LdG9yX0J1aWxkR3JhZGxlLnN2ZyldKGh0dHBz
Oi8vdGVhbWNpdHkuamV0YnJhaW5zLmNvbS92aWV3VHlwZS5odG1sP2J1aWxk
VHlwZUlkPUtvdGxpblRvb2xzX0t0b3JfQnVpbGRHcmFkbGUmYnJhbmNoX0tv
dGxpblRvb2xzX0t0b3I9JTNDZGVmYXVsdCUzRSZ0YWI9YnVpbGRUeXBlU3Rh
dHVzRGl2KQpbIVtHaXRIdWIgTGljZW5zZV0oaHR0cHM6Ly9pbWcuc2hpZWxk
cy5pby9iYWRnZS9saWNlbnNlLUFwYWNoZSUyMExpY2Vuc2UlMjAyLjAtYmx1
ZS5zdmc/c3R5bGU9ZmxhdCldKGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNl
bnNlcy9MSUNFTlNFLTIuMCkKCkt0b3IgaXMgYSBmcmFtZXdvcmsgZm9yIHF1
aWNrbHkgY3JlYXRpbmcgd2ViIGFwcGxpY2F0aW9ucyBpbiBLb3RsaW4gd2l0
aCBtaW5pbWFsIGVmZm9ydC4KCmBgYGtvdGxpbgppbXBvcnQgaW8ua3Rvci5z
ZXJ2ZXIubmV0dHkuKgppbXBvcnQgaW8ua3Rvci5yb3V0aW5nLioKaW1wb3J0
IGlvLmt0b3IuYXBwbGljYXRpb24uKgppbXBvcnQgaW8ua3Rvci5odHRwLioK
aW1wb3J0IGlvLmt0b3IucmVzcG9uc2UuKgppbXBvcnQgaW8ua3Rvci5zZXJ2
ZXIuZW5naW5lLioKCmZ1biBtYWluKGFyZ3M6IEFycmF5PFN0cmluZz4pIHsK
ICAgIGVtYmVkZGVkU2VydmVyKE5ldHR5LCA4MDgwKSB7CiAgICAgICAgcm91
dGluZyB7CiAgICAgICAgICAgIGdldCgiLyIpIHsKICAgICAgICAgICAgICAg
IGNhbGwucmVzcG9uZFRleHQoIkhlbGxvLCB3b3JsZCEiLCBDb250ZW50VHlw
ZS5UZXh0Lkh0bWwpCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LnN0
YXJ0KHdhaXQgPSB0cnVlKQp9CmBgYAoKKiBSdW5zIGVtYmVkZGVkIHdlYiBz
ZXJ2ZXIgb24gYGxvY2FsaG9zdDo4MDgwYAoqIEluc3RhbGxzIHJvdXRpbmcg
YW5kIHJlc3BvbmRzIHdpdGggYEhlbGxvLCB3b3JsZCFgIHdoZW4gcmVjZWl2
aW5nIEdFVCBodHRwIHJlcXVlc3QgZm9yIHJvb3QgcGF0aAoKIyMgUHJpbmNp
cGxlcwoKIyMjIyBVbm9waW5pb25hdGVkCgpLdG9yIEZyYW1ld29yayBkb2Vz
bid0IGltcG9zZSBhIGxvdCBvZiBjb25zdHJhaW50cyBvbiB3aGF0IHRlY2hu
b2xvZ3kgYSBwcm9qZWN0IGlzIGdvaW5nIHRvIHVzZSDigJMgbG9nZ2luZywg
CnRlbXBsYXRpbmcsIG1lc3NhZ2luZywgcGVyc2lzdGVudCwgc2VyaWFsaXpp
bmcsIGRlcGVuZGVuY3kgaW5qZWN0aW9uLCBldGMuIApTb21ldGltZXMgaXQg
bWF5IGJlIHJlcXVpcmVkIHRvIGltcGxlbWVudCBhIHNpbXBsZSBpbnRlcmZh
Y2UsIGJ1dCB1c3VhbGx5IGl0IGlzIGEgbWF0dGVyIG9mIHdyaXRpbmcgYSAK
dHJhbnNmb3JtaW5nIG9yIGludGVyY2VwdGluZyBmdW5jdGlvbi4gRmVhdHVy
ZXMgYXJlIGluc3RhbGxlZCBpbnRvIGFwcGxpY2F0aW9uIHVzaW5nIHVuaWZp
ZWQgKmludGVyY2VwdGlvbiogbWVjaGFuaXNtCndoaWNoIGFsbG93cyBidWls
ZGluZyBhcmJpdHJhcnkgcGlwZWxpbmVzLiAKCkt0b3IgQXBwbGljYXRpb24g
Y2FuIGJlIGhvc3RlZCBpbiBhbnkgc2VydmxldCBjb250YWluZXIgd2l0aCBT
ZXJ2bGV0IDMuMCsgQVBJIHN1cHBvcnQgc3VjaCBhcyBUb21jYXQsIG9yIApz
dGFuZGFsb25lIHVzaW5nIE5ldHR5IG9yIEpldHR5LiBTdXBwb3J0IGZvciBv
dGhlciBob3N0cyBjYW4gYmUgYWRkZWQgdGhyb3VnaCB0aGUgdW5pZmllZCBo
b3N0aW5nIEFQSS4KCkt0b3IgQVBJcyBhcmUgbW9zdGx5IGZ1bmN0aW9ucyBj
YWxscyB3aXRoIGxhbWJkYXMuIFRoYW5rcyB0byBLb3RsaW4gRFNMIGNhcGFi
aWxpdGllcywgY29kZSBsb29rcyBkZWNsYXJhdGl2ZS4gCkFwcGxpY2F0aW9u
IGNvbXBvc2l0aW9uIGlzIGVudGlyZWx5IGRldmVsb3BlcidzIGNob2ljZSDi
gJMgd2l0aCBmdW5jdGlvbnMgb3IgY2xhc3NlcywgdXNpbmcgZGVwZW5kZW5j
eSBpbmplY3Rpb24gCmZyYW1ld29yayBvciBkb2luZyBpdCBhbGwgbWFudWFs
bHkgaW4gbWFpbiBmdW5jdGlvbi4gCgojIyMjIEFzeW5jaHJvbm91cwoKS3Rv
ciBwaXBlbGluZSBtYWNoaW5lcnkgYW5kIEFQSSBpcyB1dGlsaXNpbmcgS290
bGluIGNvcm91dGluZXMgdG8gcHJvdmlkZSBlYXN5LXRvLXVzZSBhc3luY2hy
b25vdXMgCnByb2dyYW1taW5nIG1vZGVsIHdpdGhvdXQgbWFraW5nIGl0IHRv
byBjdW1iZXJzb21lLiBBbGwgaG9zdCBpbXBsZW1lbnRhdGlvbnMgYXJlIHVz
aW5nIGFzeW5jaHJvbm91cyBJL08gZmFjaWxpdGllcwp0byBhdm9pZCB0aHJl
YWQgYmxvY2tpbmcuIAoKIyMjIyBUZXN0YWJsZQoKS3RvciBhcHBsaWNhdGlv
biBjYW4gYmUgaG9zdGVkIGluIGEgc3BlY2lhbCB0ZXN0IGVudmlyb25tZW50
LCB3aGljaCBlbXVsYXRlcyB0byBzb21lIApleHRlbnQgd2ViIHNlcnZlciB3
aXRob3V0IGFjdHVhbGx5IGRvaW5nIGFueSBuZXR3b3JraW5nLiBJdCBwcm92
aWRlcyBlYXN5IHdheSB0byB0ZXN0IGFuIGFwcGxpY2F0aW9uIHdpdGhvdXQg
bW9ja2luZyAKdG9vIG11Y2ggc3R1ZmYsIGFuZCBzdGlsbCBhY2hpZXZlIGdv
b2QgcGVyZm9ybWFuY2Ugd2hpbGUgdmFsaWRhdGluZyBhcHBsaWNhdGlvbiBj
YWxscy4gSW50ZWdyYXRpb24gdGVzdHMgd2l0aCByZWFsIAplbWJlZGRlZCB3
ZWIgc2VydmVyIGFyZSBvZiBjb3Vyc2UgcG9zc2libGUsIHRvby4KCiMjIERv
Y3VtZW50YXRpb24KClBsZWFzZSB2aXNpdCBba3Rvci5pb10oaHR0cDovL2t0
b3IuaW8pIGZvciBRdWljayBTdGFydCBhbmQgZGV0YWlsZWQgZXhwbGFuYXRp
b25zIG9mIGZlYXR1cmVzLCB1c2FnZSBhbmQgbWFjaGluZXJ5LgoKKiBHZXR0
aW5nIHN0YXJ0ZWQgd2l0aCBbR3JhZGxlXShodHRwOi8va3Rvci5pby9xdWlj
a3N0YXJ0L2dyYWRsZS5odG1sKSAKKiBHZXR0aW5nIHN0YXJ0ZWQgd2l0aCBb
TWF2ZW5dKGh0dHA6Ly9rdG9yLmlvL3F1aWNrc3RhcnQvbWF2ZW4uaHRtbCkg
CiogR2V0dGluZyBzdGFydGVkIHdpdGggW0lERUFdKGh0dHA6Ly9rdG9yLmlv
L3F1aWNrc3RhcnQvaW50ZWxsaWotaWRlYS5odG1sKSAKCiMjIEluc3BpcmF0
aW9ucwoKS290bGluIHdlYiBmcmFtZXdvcmtzIHN1Y2ggYXMgV2FzYWJpIGFu
ZCBLYXJhLCB3aGljaCBhcmUgY3VycmVudGx5IGRlcHJlY2F0ZWQuCgojIyBS
ZXBvcnRpbmcgU2VjdXJpdHkgVnVsbmVyYWJpbGl0aWVzCgpJZiB5b3UgZmlu
ZCBhIHNlY3VyaXR5IHZ1bG5lcmFiaWxpdHkgaW4gS3Rvciwgd2Uga2luZGx5
IHJlcXVlc3QgdGhhdCBpbnN0ZWFkIG9mIHVzaW5nIG91ciBwdWJsaWMgaXNz
dWUgdHJhY2tlciwgeW91IGluc3RlYWQgcmVhY2ggb3V0IHRvIHRoZSBKZXRC
cmFpbnMgc2VjdXJpdHkgdGVhbSB2aWEgb3VyIFtyZXNwb25zaWJsZSBkaXNj
bG9zdXJlIHByb2Nlc3NdKGh0dHBzOi8vd3d3LmpldGJyYWlucy5jb20vbGVn
YWwvdGVybXMvcmVzcG9uc2libGUtZGlzY2xvc3VyZS5odG1sKS4KCiMjIENv
bnRyaWJ1dGluZwoKUGxlYXNlIHNlZSBbdGhlIGNvbnRyaWJ1dGlvbiBndWlk
ZV0oQ09OVFJJQlVUSU5HLm1kKSBiZWZvcmUgY29udGlyYnV0aW5nIGFuZCBb
Q29kZSBvZiBjb25kdWN0XShDT0RFX09GX0NPTkRVQ1QubWQpLgo=
",,5932,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'url-to-pdf-api',105162117,"b'Web page PDF/PNG rendering done right. Self-hosted service for rendering receipts, invoices, or any content.'",b'HTML',18,5932,,124,False,b'https://api.github.com/repos/alvarcarto/url-to-pdf-api/forks',"WyFbRGVwbG95XShodHRwczovL3d3dy5oZXJva3VjZG4uY29tL2RlcGxveS9i
dXR0b24uc3ZnKV0oaHR0cHM6Ly9oZXJva3UuY29tL2RlcGxveT90ZW1wbGF0
ZT1odHRwczovL2dpdGh1Yi5jb20vYWx2YXJjYXJ0by91cmwtdG8tcGRmLWFw
aSkKClshW0J1aWxkIFN0YXR1c10oaHR0cHM6Ly90cmF2aXMtY2kub3JnL2Fs
dmFyY2FydG8vdXJsLXRvLXBkZi1hcGkuc3ZnP2JyYW5jaD1tYXN0ZXIpXSho
dHRwczovL3RyYXZpcy1jaS5vcmcvYWx2YXJjYXJ0by91cmwtdG8tcGRmLWFw
aSkKCiMgVVJMIHRvIFBERiBNaWNyb3NlcnZpY2UKCj4gV2ViIHBhZ2UgUERG
IHJlbmRlcmluZyBkb25lIHJpZ2h0LiBNaWNyb3NlcnZpY2UgZm9yIHJlbmRl
cmluZyByZWNlaXB0cywgaW52b2ljZXMsIG9yIGFueSBjb250ZW50LiBQYWNr
YWdlZCB0byBhbiBlYXN5IEFQSS4KCiFbTG9nb10oZG9jcy9sb2dvLnBuZykK
Cioq4pqg77iPIFdBUk5JTkcg4pqg77iPKiogKkRvbid0IHNlcnZlIHRoaXMg
QVBJIHB1YmxpY2x5IHRvIHRoZSBpbnRlcm5ldCB1bmxlc3MgeW91IGFyZSBh
d2FyZSBvZiB0aGUKcmlza3MuIEl0IGFsbG93cyBBUEkgdXNlcnMgdG8gcnVu
IGFueSBKYXZhU2NyaXB0IGNvZGUgaW5zaWRlIGEgQ2hyb21lIHNlc3Npb24g
b24gdGhlIHNlcnZlci4KSXQncyBmYWlybHkgZWFzeSB0byBleHBvc2UgdGhl
IGNvbnRlbnRzIG9mIGZpbGVzIG9uIHRoZSBzZXJ2ZXIuIFlvdSBoYXZlIGJl
ZW4gd2FybmVkIS4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9hbHZhcmNhcnRv
L3VybC10by1wZGYtYXBpL2lzc3Vlcy8xMiBmb3IgYmFja2dyb3VuZC4qCgoq
KuKtkO+4jyBGZWF0dXJlczoqKgoKKiBDb252ZXJ0cyBhbnkgVVJMIG9yIEhU
TUwgY29udGVudCB0byBhIFBERiBmaWxlIG9yIGFuIGltYWdlIChQTkcvSlBF
RykKKiBSZW5kZXJlZCB3aXRoIEhlYWRsZXNzIENocm9tZSwgdXNpbmcgW1B1
cHBldGVlcl0oaHR0cHM6Ly9naXRodWIuY29tL0dvb2dsZUNocm9tZS9wdXBw
ZXRlZXIpLiBUaGUgUERGcyBzaG91bGQgbWF0Y2ggdG8gdGhlIG9uZXMgZ2Vu
ZXJhdGVkIHdpdGggYSBkZXNrdG9wIENocm9tZS4KKiBTZW5zaWJsZSBkZWZh
dWx0cyBidXQgZXZlcnl0aGluZyBpcyBjb25maWd1cmFibGUuCiogU2luZ2xl
LXBhZ2UgYXBwIChTUEEpIHN1cHBvcnQuIFdhaXRzIHVudGlsIGFsbCBuZXR3
b3JrIHJlcXVlc3RzIGFyZSBmaW5pc2hlZCBiZWZvcmUgcmVuZGVyaW5nLgoq
IEVhc3kgZGVwbG95bWVudCB0byBIZXJva3UuIFdlIGxvdmUgTGFtYmRhIGJ1
dC4uLkRlcGxveSB0byBIZXJva3UgYnV0dG9uLgoqIFJlbmRlcnMgbGF6eSBs
b2FkZWQgZWxlbWVudHMuICooc2Nyb2xsUGFnZSBvcHRpb24pKgoqIFN1cHBv
cnRzIG9wdGlvbmFsIGB4LWFwaS1rZXlgIGF1dGhlbnRpY2F0aW9uLiAqKGBB
UElfVE9LRU5TYCBlbnYgdmFyKSoKClVzYWdlIGlzIGFzIHNpbXBsZSBhcyBo
dHRwczovL3VybC10by1wZGYtYXBpLmhlcm9rdWFwcC5jb20vYXBpL3JlbmRl
cj91cmw9aHR0cDovL2dvb2dsZS5jb20uIFRoZXJlJ3MgYWxzbyBhIGBQT1NU
IC9hcGkvcmVuZGVyYCBpZiB5b3UgcHJlZmVyIHRvIHNlbmQgb3B0aW9ucyBp
biB0aGUgYm9keS4KCioq8J+UjSBXaHk/KioKClRoaXMgbWljcm9zZXJ2aWNl
IGlzIHVzZWZ1bCB3aGVuIHlvdSBuZWVkIHRvIGF1dG9tYXRpY2FsbHkgcHJv
ZHVjZSBQREYgZmlsZXMKZm9yIHdoYXRldmVyIHJlYXNvbi4gVGhlIGZpbGVz
IGNvdWxkIGJlIHJlY2VpcHRzLCB3ZWVrbHkgcmVwb3J0cywgaW52b2ljZXMs
Cm9yIGFueSBjb250ZW50LgoKUERGcyBjYW4gYmUgZ2VuZXJhdGVkIGluIG1h
bnkgd2F5cywgYnV0IG9uZSBvZiB0aGVtIGlzIHRvIGNvbnZlcnQgSFRNTCtD
U1MKY29udGVudCB0byBhIFBERi4gVGhpcyBBUEkgZG9lcyBqdXN0IHRoYXQu
CgoqKvCfmoAgU2hvcnRjdXRzOioqCgoqIFtFeGFtcGxlc10oI2V4YW1wbGVz
KQoqIFtBUEldKCNhcGkpCiogW0kgd2FudCB0byBydW4gdGhpcyBteXNlbGZd
KCNkZXZlbG9wbWVudCkKCiMjIEhvdyBpdCB3b3JrcwoKIVtdKGRvY3MvaGVy
b2t1LnBuZykKCkxvY2FsIHNldHVwIGlzIGlkZW50aWNhbCBleGNlcHQgRXhw
cmVzcyBBUEkgaXMgcnVubmluZyBvbiB5b3VyIG1hY2hpbmUKYW5kIHJlcXVl
c3RzIGFyZSBkaXJlY3QgY29ubmVjdGlvbnMgdG8gaXQuCgojIyMgR29vZCB0
byBrbm93CgoqICoqQnkgZGVmYXVsdCwgcGFnZSdzIGBAbWVkaWEgcHJpbnRg
IENTUyBydWxlcyBhcmUgaWdub3JlZCoqLiBXZSBzZXQgQ2hyb21lIHRvIGVt
dWxhdGUgYEBtZWRpYSBzY3JlZW5gIHRvIG1ha2UgdGhlIGRlZmF1bHQgUERG
cyBsb29rIG1vcmUgbGlrZSBhY3R1YWwgc2l0ZXMuIFRvIGdldCByZXN1bHRz
IGNsb3NlciB0byBkZXNrdG9wIENocm9tZSwgYWRkIGAmZW11bGF0ZVNjcmVl
bk1lZGlhPWZhbHNlYCBxdWVyeSBwYXJhbWV0ZXIuIFNlZSBtb3JlIGF0IFtQ
dXBwZXRlZXIgQVBJIGRvY3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9Hb29nbGVD
aHJvbWUvcHVwcGV0ZWVyL2Jsb2IvbWFzdGVyL2RvY3MvYXBpLm1kI3BhZ2Vw
ZGZvcHRpb25zKS4KCiogQ2hyb21lIGlzIGxhdW5jaGVkIHdpdGggYC0tbm8t
c2FuZGJveCAtLWRpc2FibGUtc2V0dWlkLXNhbmRib3hgIGZsYWdzIHRvIGZp
eCB1c2FnZSBpbiBIZXJva3UuIFNlZSBbdGhpcyBpc3N1ZV0oaHR0cHM6Ly9n
aXRodWIuY29tL0dvb2dsZUNocm9tZS9wdXBwZXRlZXIvaXNzdWVzLzI5MCku
CgoqIEhlYXZ5IHBhZ2VzIG1heSBjYXVzZSBDaHJvbWUgdG8gY3Jhc2ggaWYg
dGhlIHNlcnZlciBkb2Vzbid0IGhhdmUgZW5vdWdoIFJBTS4KCiogRG9ja2Vy
IGltYWdlIGZvciB0aGlzIGNhbiBiZSBmb3VuZCBoZXJlOiBodHRwczovL2dp
dGh1Yi5jb20vcmVzdG9yZWNvbW1lcmNlL3BkZi1yZW5kZXJpbmctc3J2CgoK
IyMgRXhhbXBsZXMKCipOb3RlOiB0aGUgZGVtbyBIZXJva3UgYXBwIHJ1bnMg
b24gYSBmcmVlIGR5bm8gd2hpY2ggc2xlZXAgYWZ0ZXIgaWRsZS4KQSByZXF1
ZXN0IHRvIHNsZWVwaW5nIGR5bm8gbWF5IHRha2UgZXZlbiAzMCBzZWNvbmRz
LioKCioqVGhlIG1vc3QgbWluaW1hbCBleGFtcGxlLCByZW5kZXIgZ29vZ2xl
LmNvbSoqCgpodHRwczovL3VybC10by1wZGYtYXBpLmhlcm9rdWFwcC5jb20v
YXBpL3JlbmRlcj91cmw9aHR0cDovL2dvb2dsZS5jb20KCioqVGhlIG1vc3Qg
bWluaW1hbCBleGFtcGxlLCByZW5kZXIgZ29vZ2xlLmNvbSBhcyBQTkcgaW1h
Z2UqKgoKaHR0cHM6Ly91cmwtdG8tcGRmLWFwaS5oZXJva3VhcHAuY29tL2Fw
aS9yZW5kZXI/b3V0cHV0PXNjcmVlbnNob3QmdXJsPWh0dHA6Ly9nb29nbGUu
Y29tCgoKKipVc2UgdGhlIGRlZmF1bHQgQG1lZGlhIHByaW50IGluc3RlYWQg
b2YgQG1lZGlhIHNjcmVlbi4qKgoKaHR0cHM6Ly91cmwtdG8tcGRmLWFwaS5o
ZXJva3VhcHAuY29tL2FwaS9yZW5kZXI/dXJsPWh0dHA6Ly9nb29nbGUuY29t
JmVtdWxhdGVTY3JlZW5NZWRpYT1mYWxzZQoKKipVc2Ugc2Nyb2xsUGFnZT10
cnVlIHdoaWNoIHRyaWVzIHRvIHJldmVhbCBhbGwgbGF6eSBsb2FkZWQgZWxl
bWVudHMuIE5vdCBwZXJmZWN0IGJ1dCBiZXR0ZXIgdGhhbiB3aXRob3V0Lioq
CgpodHRwczovL3VybC10by1wZGYtYXBpLmhlcm9rdWFwcC5jb20vYXBpL3Jl
bmRlcj91cmw9aHR0cDovL3d3dy5hbmRyZWF2ZXJsaWNjaGkuZXUvbGF6eWxv
YWQvZGVtb3MvbGF6aWx5X2xvYWRfbGF6eUxvYWQuaHRtbCZzY3JvbGxQYWdl
PXRydWUKCioqUmVuZGVyIG9ubHkgdGhlIGZpcnN0IHBhZ2UuKioKCmh0dHBz
Oi8vdXJsLXRvLXBkZi1hcGkuaGVyb2t1YXBwLmNvbS9hcGkvcmVuZGVyP3Vy
bD1odHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Qb3J0YWJsZV9Eb2N1
bWVudF9Gb3JtYXQmcGRmLnBhZ2VSYW5nZXM9MQoKKipSZW5kZXIgQTUtc2l6
ZWQgUERGIGluIGxhbmRzY2FwZS4qKgoKaHR0cHM6Ly91cmwtdG8tcGRmLWFw
aS5oZXJva3VhcHAuY29tL2FwaS9yZW5kZXI/dXJsPWh0dHA6Ly9nb29nbGUu
Y29tJnBkZi5mb3JtYXQ9QTUmcGRmLmxhbmRzY2FwZT10cnVlCgoqKkFkZCAy
Y20gbWFyZ2lucyB0byB0aGUgUERGLioqCgpodHRwczovL3VybC10by1wZGYt
YXBpLmhlcm9rdWFwcC5jb20vYXBpL3JlbmRlcj91cmw9aHR0cDovL2dvb2ds
ZS5jb20mcGRmLm1hcmdpbi50b3A9MmNtJnBkZi5tYXJnaW4ucmlnaHQ9MmNt
JnBkZi5tYXJnaW4uYm90dG9tPTJjbSZwZGYubWFyZ2luLmxlZnQ9MmNtCgoq
KldhaXQgZm9yIGV4dHJhIDEwMDBtcyBiZWZvcmUgcmVuZGVyLioqCgpodHRw
czovL3VybC10by1wZGYtYXBpLmhlcm9rdWFwcC5jb20vYXBpL3JlbmRlcj91
cmw9aHR0cDovL2dvb2dsZS5jb20md2FpdEZvcj0xMDAwCgoKKipEb3dubG9h
ZCB0aGUgUERGIHdpdGggYSBnaXZlbiBhdHRhY2htZW50IG5hbWUqKgoKaHR0
cHM6Ly91cmwtdG8tcGRmLWFwaS5oZXJva3VhcHAuY29tL2FwaS9yZW5kZXI/
dXJsPWh0dHA6Ly9nb29nbGUuY29tJmF0dGFjaG1lbnROYW1lPWdvb2dsZS5w
ZGYKCioqV2FpdCBmb3IgYW4gZWxlbWVudCBtYXRjaGluZyB0aGUgc2VsZWN0
b3IgYGlucHV0YCBhcHBlYXJzLioqCgpodHRwczovL3VybC10by1wZGYtYXBp
Lmhlcm9rdWFwcC5jb20vYXBpL3JlbmRlcj91cmw9aHR0cDovL2dvb2dsZS5j
b20md2FpdEZvcj1pbnB1dAoKKipSZW5kZXIgSFRNTCBzZW50IGluIEpTT04g
Ym9keSoqCgpgYGBiYXNoCmN1cmwgLW8gaHRtbC5wZGYgLVhQT1NUIC1kJ3si
aHRtbCI6ICI8Ym9keT50ZXN0PC9ib2R5PiJ9JyAtSCJjb250ZW50LXR5cGU6
IGFwcGxpY2F0aW9uL2pzb24iIGh0dHBzOi8vdXJsLXRvLXBkZi1hcGkuaGVy
b2t1YXBwLmNvbS9hcGkvcmVuZGVyCmBgYAoKKipSZW5kZXIgSFRNTCBzZW50
IGFzIHRleHQgYm9keSoqCgpgYGBiYXNoCmN1cmwgLW8gaHRtbC5wZGYgLVhQ
T1NUIC1kQHBhZ2UuaHRtbCAtSCJjb250ZW50LXR5cGU6IHRleHQvaHRtbCIg
aHR0cHM6Ly91cmwtdG8tcGRmLWFwaS5oZXJva3VhcHAuY29tL2FwaS9yZW5k
ZXIKYGBgCgojIyBBUEkKClRvIHVuZGVyc3RhbmQgdGhlIEFQSSBvcHRpb25z
LCBpdCdzIHVzZWZ1bCB0byBrbm93IGhvdyBbUHVwcGV0ZWVyXShodHRwczov
L2dpdGh1Yi5jb20vR29vZ2xlQ2hyb21lL3B1cHBldGVlci9ibG9iL21hc3Rl
ci9kb2NzL2FwaS5tZCkKaXMgaW50ZXJuYWxseSB1c2VkIGJ5IHRoaXMgQVBJ
LiBUaGUgW3JlbmRlciBjb2RlXShodHRwczovL2dpdGh1Yi5jb20vYWx2YXJj
YXJ0by91cmwtdG8tcGRmLWFwaS9ibG9iL21hc3Rlci9zcmMvY29yZS9yZW5k
ZXItY29yZS5qcykKaXMgcXVpdGUgc2ltcGxlLCBjaGVjayBpdCBvdXQuIFJl
bmRlciBmbG93OgoKMS4gKipgcGFnZS5zZXRWaWV3cG9ydChvcHRpb25zKWAq
KiB3aGVyZSBvcHRpb25zIG1hdGNoZXMgYHZpZXdwb3J0LipgLgoyLiAqUG9z
c2libHkqICoqYHBhZ2UuZW11bGF0ZU1lZGlhKCdzY3JlZW4nKWAqKiBpZiBg
ZW11bGF0ZVNjcmVlbk1lZGlhPXRydWVgIGlzIHNldC4KMy4gUmVuZGVyIHVy
bCAqKm9yKiogaHRtbC4KCiAgICBJZiBgdXJsYCBpcyBkZWZpbmVkLCAqKmBw
YWdlLmdvdG8odXJsLCBvcHRpb25zKWAqKiBpcyBjYWxsZWQgYW5kIG9wdGlv
bnMgbWF0Y2ggYGdvdG8uKmAuCiAgICBPdGhlcndpc2UgKipgcGFnZS5zZXRD
b250ZW50KGh0bWwsIG9wdGlvbnMpYCoqIGlzIGNhbGxlZCB3aGVyZSBodG1s
IGlzIHRha2VuIGZyb20gcmVxdWVzdCBib2R5LCBhbmQgb3B0aW9ucyBtYXRj
aCBgZ290by4qYC4KCjQuICpQb3NzaWJseSogKipgcGFnZS53YWl0Rm9yKG51
bU9yU3RyKWAqKiBpZiBlLmcuIGB3YWl0Rm9yPTEwMDBgIGlzIHNldC4KNS4g
KlBvc3NpYmx5KiAqKlNjcm9sbCB0aGUgd2hvbGUgcGFnZSoqIHRvIHRoZSBl
bmQgYmVmb3JlIHJlbmRlcmluZyBpZiBlLmcuIGBzY3JvbGxQYWdlPXRydWVg
IGlzIHNldC4KCiAgICBVc2VmdWwgaWYgeW91IHdhbnQgdG8gcmVuZGVyIGEg
cGFnZSB3aGljaCBsYXp5IGxvYWRzIGVsZW1lbnRzLgoKNi4gUmVuZGVyIHRo
ZSBvdXRwdXQKCiAgKiBJZiBvdXRwdXQgaXMgYHBkZmAgcmVuZGVyaW5nIGlz
IGRvbmUgd2l0aCAqKmBwYWdlLnBkZihvcHRpb25zKWAqKiB3aGVyZSBvcHRp
b25zIG1hdGNoZXMgYHBkZi4qYC4KICAqIEVsc2UgaWYgb3V0cHV0IGlzIGBz
Y3JlZW5zaG90YCByZW5kZXJpbmcgaXMgZG9uZSB3aXRoICoqYHBhZ2Uuc2Ny
ZWVuc2hvdChvcHRpb25zKWAqKiB3aGVyZSBvcHRpb25zIG1hdGNoZXMgYHNj
cmVlbnNob3QuKmAuCgoKIyMjIEdFVCAvYXBpL3JlbmRlcgoKQWxsIG9wdGlv
bnMgYXJlIHBhc3NlZCBhcyBxdWVyeSBwYXJhbWV0ZXJzLgpQYXJhbWV0ZXIg
bmFtZXMgbWF0Y2ggW1B1cHBldGVlciBvcHRpb25zXShodHRwczovL2dpdGh1
Yi5jb20vR29vZ2xlQ2hyb21lL3B1cHBldGVlci9ibG9iL21hc3Rlci9kb2Nz
L2FwaS5tZCkuCgpUaGVzZSBvcHRpb25zIGFyZSBleGFjdGx5IHRoZSBzYW1l
IGFzIGl0cyBgUE9TVGAgY291bnRlcnBhcnQsIGJ1dCBvcHRpb25zIGFyZQpl
eHByZXNzZWQgd2l0aCB0aGUgZG90IG5vdGF0aW9uLiBFLmcuIGA/cGRmLnNj
YWxlPTJgIGluc3RlYWQgb2YgYHsgcGRmOiB7IHNjYWxlOiAyIH19YC4KClRo
ZSBvbmx5IHJlcXVpcmVkIHBhcmFtZXRlciBpcyBgdXJsYC4KClBhcmFtZXRl
ciB8IFR5cGUgfCBEZWZhdWx0IHwgRGVzY3JpcHRpb24KLS0tLS0tLS0tLXwt
LS0tLS18LS0tLS0tLS0tfC0tLS0tLS0tLS0tLQp1cmwgfCBzdHJpbmcgfCAt
IHwgVVJMIHRvIHJlbmRlciBhcyBQREYuIChyZXF1aXJlZCkKb3V0cHV0IHwg
c3RyaW5nIHwgcGRmIHwgU3BlY2lmeSB0aGUgb3V0cHV0IGZvcm1hdC4gUG9z
c2libGUgdmFsdWVzOiBgcGRmYCBvciBgc2NyZWVuc2hvdGAuCmVtdWxhdGVT
Y3JlZW5NZWRpYSB8IGJvb2xlYW4gfCBgdHJ1ZWAgfCBFbXVsYXRlcyBgQG1l
ZGlhIHNjcmVlbmAgd2hlbiByZW5kZXJpbmcgdGhlIFBERi4KaWdub3JlSHR0
cHNFcnJvcnMgfCBib29sZWFuIHwgYGZhbHNlYCB8IElnbm9yZXMgcG9zc2li
bGUgSFRUUFMgZXJyb3JzIHdoZW4gbmF2aWdhdGluZyB0byBhIHBhZ2UuCnNj
cm9sbFBhZ2UgfCBib29sZWFuIHwgYGZhbHNlYCB8IFNjcm9sbCBwYWdlIGRv
d24gYmVmb3JlIHJlbmRlcmluZyB0byB0cmlnZ2VyIGxhenkgbG9hZGluZyBl
bGVtZW50cy4Kd2FpdEZvciB8IG51bWJlciBvciBzdHJpbmcgfCAtIHwgTnVt
YmVyIGluIG1zIHRvIHdhaXQgYmVmb3JlIHJlbmRlciBvciBzZWxlY3RvciBl
bGVtZW50IHRvIHdhaXQgYmVmb3JlIHJlbmRlci4KYXR0YWNobWVudE5hbWUg
fCBzdHJpbmcgfCAtIHwgV2hlbiBzZXQsIHRoZSBgY29udGVudC1kaXNwb3Np
dGlvbmAgaGVhZGVycyBhcmUgc2V0IGFuZCBicm93c2VyIHdpbGwgZG93bmxv
YWQgdGhlIFBERiBpbnN0ZWFkIG9mIHNob3dpbmcgaW5saW5lLiBUaGUgZ2l2
ZW4gc3RyaW5nIHdpbGwgYmUgdXNlZCBhcyB0aGUgbmFtZSBmb3IgdGhlIGZp
bGUuCnZpZXdwb3J0LndpZHRoIHwgbnVtYmVyIHwgYDE2MDBgIHwgVmlld3Bv
cnQgd2lkdGguCnZpZXdwb3J0LmhlaWdodCB8IG51bWJlciB8IGAxMjAwYCB8
IFZpZXdwb3J0IGhlaWdodC4Kdmlld3BvcnQuZGV2aWNlU2NhbGVGYWN0b3Ig
fCBudW1iZXIgfCBgMWAgfCBEZXZpY2Ugc2NhbGUgZmFjdG9yIChjb3VsZCBi
ZSB0aG91Z2h0IG9mIGFzIGRwcikuCnZpZXdwb3J0LmlzTW9iaWxlIHwgYm9v
bGVhbiB8IGBmYWxzZWAgfCBXaGV0aGVyIHRoZSBtZXRhIHZpZXdwb3J0IHRh
ZyBpcyB0YWtlbiBpbnRvIGFjY291bnQuCnZpZXdwb3J0Lmhhc1RvdWNoIHwg
Ym9vbGVhbiB8IGBmYWxzZWAgfCBTcGVjaWZpZXMgaWYgdmlld3BvcnQgc3Vw
cG9ydHMgdG91Y2ggZXZlbnRzLgp2aWV3cG9ydC5pc0xhbmRzY2FwZSB8IGJv
b2xlYW4gfCBgZmFsc2VgIHwgU3BlY2lmaWVzIGlmIHZpZXdwb3J0IGlzIGlu
IGxhbmRzY2FwZSBtb2RlLgpjb29raWVzWzBdW25hbWVdIHwgc3RyaW5nIHwg
LSB8IENvb2tpZSBuYW1lIChyZXF1aXJlZCkKY29va2llc1swXVt2YWx1ZV0g
fCBzdHJpbmcgfCAtIHwgQ29va2llIHZhbHVlIChyZXF1aXJlZCkKY29va2ll
c1swXVt1cmxdIHwgc3RyaW5nIHwgLSB8IENvb2tpZSB1cmwKY29va2llc1sw
XVtkb21haW5dIHwgc3RyaW5nIHwgLSB8IENvb2tpZSBkb21haW4KY29va2ll
c1swXVtwYXRoXSB8IHN0cmluZyB8IC0gfCBDb29raWUgcGF0aApjb29raWVz
WzBdW2V4cGlyZXNdIHwgbnVtYmVyIHwgLSB8IENvb2tpZSBleHBpcnkgaW4g
dW5peCB0aW1lCmNvb2tpZXNbMF1baHR0cE9ubHldIHwgYm9vbGVhbiB8IC0g
fCBDb29raWUgaHR0cE9ubHkKY29va2llc1swXVtzZWN1cmVdIHwgYm9vbGVh
biB8IC0gfCBDb29raWUgc2VjdXJlCmNvb2tpZXNbMF1bc2FtZVNpdGVdIHwg
c3RyaW5nIHwgLSB8IGBTdHJpY3RgIG9yIGBMYXhgCmdvdG8udGltZW91dCB8
IG51bWJlciB8IGAzMDAwMGAgfCAgTWF4aW11bSBuYXZpZ2F0aW9uIHRpbWUg
aW4gbWlsbGlzZWNvbmRzLCBkZWZhdWx0cyB0byAzMCBzZWNvbmRzLCBwYXNz
IDAgdG8gZGlzYWJsZSB0aW1lb3V0Lgpnb3RvLndhaXRVbnRpbCB8IHN0cmlu
ZyB8IGBuZXR3b3JraWRsZWAgfCBXaGVuIHRvIGNvbnNpZGVyIG5hdmlnYXRp
b24gc3VjY2VlZGVkLiBPcHRpb25zOiBgbG9hZGAsIGBuZXR3b3JraWRsZWAu
IGBsb2FkYCA9IGNvbnNpZGVyIG5hdmlnYXRpb24gdG8gYmUgZmluaXNoZWQg
d2hlbiB0aGUgbG9hZCBldmVudCBpcyBmaXJlZC4gYG5ldHdvcmtpZGxlYCA9
IGNvbnNpZGVyIG5hdmlnYXRpb24gdG8gYmUgZmluaXNoZWQgd2hlbiB0aGUg
bmV0d29yayBhY3Rpdml0eSBzdGF5cyAiaWRsZSIgZm9yIGF0IGxlYXN0IGBn
b3RvLm5ldHdvcmtJZGxlVGltZW91dGAgbXMuCmdvdG8ubmV0d29ya0lkbGVJ
bmZsaWdodCB8IG51bWJlciB8IGAyYCB8IE1heGltdW0gYW1vdW50IG9mIGlu
ZmxpZ2h0IHJlcXVlc3RzIHdoaWNoIGFyZSBjb25zaWRlcmVkICJpZGxlIi4g
VGFrZXMgZWZmZWN0IG9ubHkgd2l0aCBgZ290by53YWl0VW50aWxgOiAnbmV0
d29ya2lkbGUnIHBhcmFtZXRlci4KZ290by5uZXR3b3JrSWRsZVRpbWVvdXQg
fCBudW1iZXIgfCBgMjAwMGAgfCBBIHRpbWVvdXQgdG8gd2FpdCBiZWZvcmUg
Y29tcGxldGluZyBuYXZpZ2F0aW9uLiBUYWtlcyBlZmZlY3Qgb25seSB3aXRo
IHdhaXRVbnRpbDogJ25ldHdvcmtpZGxlJyBwYXJhbWV0ZXIuCnBkZi5zY2Fs
ZSB8IG51bWJlciB8IGAxYCB8IFNjYWxlIG9mIHRoZSB3ZWJwYWdlIHJlbmRl
cmluZy4KcGRmLnByaW50QmFja2dyb3VuZCB8IGJvb2xlYW4gfCBgZmFsc2Vg
fCBQcmludCBiYWNrZ3JvdW5kIGdyYXBoaWNzLgpwZGYuZGlzcGxheUhlYWRl
ckZvb3RlciB8IGJvb2xlYW4gfCBgZmFsc2VgIHwgRGlzcGxheSBoZWFkZXIg
YW5kIGZvb3Rlci4KcGRmLmhlYWRlclRlbXBsYXRlIHwgc3RyaW5nIHwgLSB8
IEhUTUwgdGVtcGxhdGUgdG8gdXNlIGFzIHRoZSBoZWFkZXIgb2YgZWFjaCBw
YWdlIGluIHRoZSBQREYuICoqQ3VycmVudGx5IFB1cHBldGVlciBiYXNpY2Fs
bHkgb25seSBzdXBwb3J0cyBhIHNpbmdsZSBsaW5lIG9mIHRleHQgYW5kIHlv
dSBtdXN0IHVzZSBwZGYubWFyZ2lucytDU1MgdG8gbWFrZSB0aGUgaGVhZGVy
IGFwcGVhciEqKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2FsdmFyY2FydG8v
dXJsLXRvLXBkZi1hcGkvaXNzdWVzLzc3LgpwZGYuZm9vdGVyVGVtcGxhdGUg
fCBzdHJpbmcgfCAtIHwgSFRNTCB0ZW1wbGF0ZSB0byB1c2UgYXMgdGhlIGZv
b3RlciBvZiBlYWNoIHBhZ2UgaW4gdGhlIFBERi4gKipDdXJyZW50bHkgUHVw
cGV0ZWVyIGJhc2ljYWxseSBvbmx5IHN1cHBvcnRzIGEgc2luZ2xlIGxpbmUg
b2YgdGV4dCBhbmQgeW91IG11c3QgdXNlIHBkZi5tYXJnaW5zK0NTUyB0byBt
YWtlIHRoZSBmb290ZXIgYXBwZWFyISoqIFNlZSBodHRwczovL2dpdGh1Yi5j
b20vYWx2YXJjYXJ0by91cmwtdG8tcGRmLWFwaS9pc3N1ZXMvNzcuCnBkZi5s
YW5kc2NhcGUgfCBib29sZWFuIHwgYGZhbHNlYCB8IFBhcGVyIG9yaWVudGF0
aW9uLgpwZGYucGFnZVJhbmdlcyB8IHN0cmluZyB8IC0gfCBQYXBlciByYW5n
ZXMgdG8gcHJpbnQsIGUuZy4sICcxLTUsIDgsIDExLTEzJy4gRGVmYXVsdHMg
dG8gdGhlIGVtcHR5IHN0cmluZywgd2hpY2ggbWVhbnMgcHJpbnQgYWxsIHBh
Z2VzLgpwZGYuZm9ybWF0IHwgc3RyaW5nIHwgYEE0YCB8IFBhcGVyIGZvcm1h
dC4gSWYgc2V0LCB0YWtlcyBwcmlvcml0eSBvdmVyIHdpZHRoIG9yIGhlaWdo
dCBvcHRpb25zLgpwZGYud2lkdGggfCBzdHJpbmcgfCAtIHwgUGFwZXIgd2lk
dGgsIGFjY2VwdHMgdmFsdWVzIGxhYmVsZWQgd2l0aCB1bml0cy4KcGRmLmhl
aWdodCB8IHN0cmluZyB8IC0gfCBQYXBlciBoZWlnaHQsIGFjY2VwdHMgdmFs
dWVzIGxhYmVsZWQgd2l0aCB1bml0cy4KcGRmLm1hcmdpbi50b3AgfCBzdHJp
bmcgfCAtIHwgVG9wIG1hcmdpbiwgYWNjZXB0cyB2YWx1ZXMgbGFiZWxlZCB3
aXRoIHVuaXRzLgpwZGYubWFyZ2luLnJpZ2h0IHwgc3RyaW5nIHwgLSB8IFJp
Z2h0IG1hcmdpbiwgYWNjZXB0cyB2YWx1ZXMgbGFiZWxlZCB3aXRoIHVuaXRz
LgpwZGYubWFyZ2luLmJvdHRvbSB8IHN0cmluZyB8IC0gfCBCb3R0b20gbWFy
Z2luLCBhY2NlcHRzIHZhbHVlcyBsYWJlbGVkIHdpdGggdW5pdHMuCnBkZi5t
YXJnaW4ubGVmdCB8IHN0cmluZyB8IC0gfCBMZWZ0IG1hcmdpbiwgYWNjZXB0
cyB2YWx1ZXMgbGFiZWxlZCB3aXRoIHVuaXRzLgpzY3JlZW5zaG90LmZ1bGxQ
YWdlIHwgYm9vbGVhbiB8IGB0cnVlYCB8IFdoZW4gdHJ1ZSwgdGFrZXMgYSBz
Y3JlZW5zaG90IG9mIHRoZSBmdWxsIHNjcm9sbGFibGUgcGFnZS4Kc2NyZWVu
c2hvdC50eXBlIHwgc3RyaW5nIHwgYHBuZ2AgfCBTY3JlZW5zaG90IGltYWdl
IHR5cGUuIFBvc3NpYmxlIHZhbHVlczogYHBuZ2AsIGBqcGVnYApzY3JlZW5z
aG90LnF1YWxpdHkgfCBudW1iZXIgfCAtIHwgVGhlIHF1YWxpdHkgb2YgdGhl
IEpQRUcgaW1hZ2UsIGJldHdlZW4gMC0xMDAuIE9ubHkgYXBwbGllcyB3aGVu
IGBzY3JlZW5zaG90LnR5cGVgIGlzIGBqcGVnYC4Kc2NyZWVuc2hvdC5vbWl0
QmFja2dyb3VuZCB8IGJvb2xlYW4gfCBgZmFsc2VgIHwgSGlkZXMgZGVmYXVs
dCB3aGl0ZSBiYWNrZ3JvdW5kIGFuZCBhbGxvd3MgY2FwdHVyaW5nIHNjcmVl
bnNob3RzIHdpdGggdHJhbnNwYXJlbmN5LgpzY3JlZW5zaG90LmNsaXAueCB8
IG51bWJlciB8IC0gfCBTcGVjaWZpZXMgeC1jb29yZGluYXRlIG9mIHRvcC1s
ZWZ0IGNvcm5lciBvZiBjbGlwcGluZyByZWdpb24gb2YgdGhlIHBhZ2UuCnNj
cmVlbnNob3QuY2xpcC55IHwgbnVtYmVyIHwgLSB8IFNwZWNpZmllcyB5LWNv
b3JkaW5hdGUgb2YgdG9wLWxlZnQgY29ybmVyIG9mIGNsaXBwaW5nIHJlZ2lv
biBvZiB0aGUgcGFnZS4Kc2NyZWVuc2hvdC5jbGlwLndpZHRoIHwgbnVtYmVy
IHwgLSB8IFNwZWNpZmllcyB3aWR0aCBvZiBjbGlwcGluZyByZWdpb24gb2Yg
dGhlIHBhZ2UuCnNjcmVlbnNob3QuY2xpcC5oZWlnaHQgfCBudW1iZXIgfCAt
IHwgU3BlY2lmaWVzIGhlaWdodCBvZiBjbGlwcGluZyByZWdpb24gb2YgdGhl
IHBhZ2UuCgoKKipFeGFtcGxlOioqCgpgYGBiYXNoCmN1cmwgLW8gZ29vZ2xl
LnBkZiBodHRwczovL3VybC10by1wZGYtYXBpLmhlcm9rdWFwcC5jb20vYXBp
L3JlbmRlcj91cmw9aHR0cDovL2dvb2dsZS5jb20KYGBgCgoKIyMjIFBPU1Qg
L2FwaS9yZW5kZXIgLSAoSlNPTikKCkFsbCBvcHRpb25zIGFyZSBwYXNzZWQg
aW4gYSBKU09OIGJvZHkgb2JqZWN0LgpQYXJhbWV0ZXIgbmFtZXMgbWF0Y2gg
W1B1cHBldGVlciBvcHRpb25zXShodHRwczovL2dpdGh1Yi5jb20vR29vZ2xl
Q2hyb21lL3B1cHBldGVlci9ibG9iL21hc3Rlci9kb2NzL2FwaS5tZCkuCgpU
aGVzZSBvcHRpb25zIGFyZSBleGFjdGx5IHRoZSBzYW1lIGFzIGl0cyBgR0VU
YCBjb3VudGVycGFydC4KCioqQm9keSoqCgpUaGUgb25seSByZXF1aXJlZCBw
YXJhbWV0ZXIgaXMgYHVybGAuCgpgYGBqcwp7CiAgLy8gVXJsIHRvIHJlbmRl
ci4gRWl0aGVyIHVybCBvciBodG1sIGlzIHJlcXVpcmVkCiAgdXJsOiAiaHR0
cHM6Ly9nb29nbGUuY29tIiwKCiAgLy8gRWl0aGVyICJwZGYiIG9yICJzY3Jl
ZW5zaG90IgogIG91dHB1dDogInBkZiIsCgogIC8vIEhUTUwgY29udGVudCB0
byByZW5kZXIuIEVpdGhlciB1cmwgb3IgaHRtbCBpcyByZXF1aXJlZAogIGh0
bWw6ICI8aHRtbD48aGVhZD48L2hlYWQ+PGJvZHk+WW91ciBjb250ZW50PC9i
b2R5PjwvaHRtbD4iLAoKICAvLyBJZiB3ZSBzaG91bGQgZW11bGF0ZSBAbWVk
aWEgc2NyZWVuIGluc3RlYWQgb2YgcHJpbnQKICBlbXVsYXRlU2NyZWVuTWVk
aWE6IHRydWUsCgogIC8vIElmIHdlIHNob3VsZCBpZ25vcmUgSFRUUFMgZXJy
b3JzCiAgaWdub3JlSHR0cHNFcnJvcnM6IGZhbHNlLAoKICAvLyBJZiB0cnVl
LCBwYWdlIGlzIHNjcm9sbGVkIHRvIHRoZSBlbmQgYmVmb3JlIHJlbmRlcmlu
ZwogIC8vIE5vdGU6IHRoaXMgbWFrZXMgcmVuZGVyaW5nIGEgYml0IHNsb3dl
cgogIHNjcm9sbFBhZ2U6IGZhbHNlLAoKICAvLyBQYXNzZWQgdG8gUHVwcGV0
ZWVyIHBhZ2Uud2FpdEZvcigpCiAgd2FpdEZvcjogbnVsbCwKCiAgLy8gUGFz
c3NlZCB0byBQdXBwZXRlZXIgcGFnZS5zZXRDb29raWVzKCkKICBjb29raWVz
OiBbeyAuLi4gfV0KCiAgLy8gUGFzc2VkIHRvIFB1cHBldGVlciBwYWdlLnNl
dFZpZXdwb3J0KCkKICB2aWV3cG9ydDogeyAuLi4gfSwKCiAgLy8gUGFzc2Vk
IHRvIFB1cHBldGVlciBwYWdlLmdvdG8oKSBhcyB0aGUgc2Vjb25kIGFyZ3Vt
ZW50IGFmdGVyIHVybAogIGdvdG86IHsgLi4uIH0sCgogIC8vIFBhc3NlZCB0
byBQdXBwZXRlZXIgcGFnZS5wZGYoKQogIHBkZjogeyAuLi4gfSwKCiAgLy8g
UGFzc2VkIHRvIFB1cHBldGVlciBwYWdlLnNjcmVlbnNob3QoKQogIHNjcmVl
bnNob3Q6IHsgLi4uIH0sCn0KYGBgCgoqKkV4YW1wbGU6KioKCmBgYGJhc2gK
Y3VybCAtbyBnb29nbGUucGRmIC1YUE9TVCAtZCd7InVybCI6ICJodHRwOi8v
Z29vZ2xlLmNvbSJ9JyAtSCJjb250ZW50LXR5cGU6IGFwcGxpY2F0aW9uL2pz
b24iIGh0dHBzOi8vdXJsLXRvLXBkZi1hcGkuaGVyb2t1YXBwLmNvbS9hcGkv
cmVuZGVyCmBgYAoKYGBgYmFzaApjdXJsIC1vIGh0bWwucGRmIC1YUE9TVCAt
ZCd7Imh0bWwiOiAiPGJvZHk+dGVzdDwvYm9keT4ifScgLUgiY29udGVudC10
eXBlOiBhcHBsaWNhdGlvbi9qc29uIiBodHRwczovL3VybC10by1wZGYtYXBp
Lmhlcm9rdWFwcC5jb20vYXBpL3JlbmRlcgpgYGAKCiMjIyBQT1NUIC9hcGkv
cmVuZGVyIC0gKEhUTUwpCgpIVE1MIHRvIHJlbmRlciBpcyBzZW50IGluIGJv
ZHkuIEFsbCBvcHRpb25zIGFyZSBwYXNzZWQgaW4gcXVlcnkgcGFyYW1ldGVy
cy4KU3VwcG9ydHMgZXhhY3RseSB0aGUgc2FtZSBxdWVyeSBwYXJhbWV0ZXJz
IGFzIGBHRVQgL2FwaS9yZW5kZXJgLCBleGNlcHQgYHVybGAKcGFyZW1ldGVy
LgoKKlJlbWVtYmVyIHRoYXQgcmVsYXRpdmUgbGlua3MgZG8gbm90IHdvcmsu
KgoKKipFeGFtcGxlOioqCgpgYGBiYXNoCmN1cmwgLW8gcmVjZWlwdC5odG1s
IGh0dHBzOi8vcmF3Z2l0LmNvbS93aWxkYml0L3Bvc3RtYXJrLXRlbXBsYXRl
cy9tYXN0ZXIvdGVtcGxhdGVzX2lubGluZWQvcmVjZWlwdC5odG1sCmN1cmwg
LW8gaHRtbC5wZGYgLVhQT1NUIC1kQHJlY2VpcHQuaHRtbCAtSCJjb250ZW50
LXR5cGU6IHRleHQvaHRtbCIgaHR0cHM6Ly91cmwtdG8tcGRmLWFwaS5oZXJv
a3VhcHAuY29tL2FwaS9yZW5kZXI/cGRmLnNjYWxlPTEKYGBgCgojIyBEZXZl
bG9wbWVudAoKVG8gZ2V0IHRoaXMgdGhpbmcgcnVubmluZywgeW91IGhhdmUg
dHdvIG9wdGlvbnM6IHJ1biBpdCBpbiBIZXJva3UsIG9yIGxvY2FsbHkuCgpU
aGUgY29kZSByZXF1aXJlcyBOb2RlIDgrIChhc3luYywgYXdhaXQpLgoKIyMj
IyAxLiBIZXJva3UgZGVwbG95bWVudAoKU2Nyb2xsIHRoaXMgcmVhZG1lIHVw
IHRvIHRoZSBEZXBsb3kgdG8gSGVyb2t1IC1idXR0b24uIENsaWNrIGl0IGFu
ZCBmb2xsb3cKaW5zdHJ1Y3Rpb25zLgoKKipXQVJOSU5HOioqICpIZXJva3Ug
ZHlub3MgaGF2ZSBhIHZlcnkgbG93IGFtb3VudCBvZiBSQU0uIFJlbmRlcmlu
ZyBoZWF2eSBwYWdlcwptYXkgY2F1c2UgQ2hyb21lIGluc3RhbmNlIHRvIGNy
YXNoIGluc2lkZSBIZXJva3UgZHluby4gNTEyTUIgc2hvdWxkIGJlCmVub3Vn
aCBmb3IgbW9zdCByZWFsLWxpZmUgdXNlIGNhc2VzIHN1Y2ggYXMgcmVjZWlw
dHMuIFNvbWUgbmV3cyBzaXRlcyBtYXkgbmVlZApldmVuIDJHQiBvZiBSQU0u
KgoKCiMjIyMgMi4gTG9jYWwgZGV2ZWxvcG1lbnQKCkZpcnN0LCBjbG9uZSB0
aGUgcmVwb3NpdG9yeSBhbmQgY2QgaW50byBpdC4KCiogYGNwIC5lbnYuc2Ft
cGxlIC5lbnZgCiogRmlsbCBpbiB0aGUgYmxhbmtzIGluIGAuZW52YAoKKiBg
bnBtIGluc3RhbGxgCiogYG5wbSBzdGFydGAgU3RhcnQgZXhwcmVzcyBzZXJ2
ZXIgbG9jYWxseQoqIFNlcnZlciBydW5zIGF0IGh0dHA6Ly9sb2NhbGhvc3Q6
OTAwMCBvciB3aGF0IGAkUE9SVGAgZW52IGRlZmluZXMKCgojIyMgVGVjaHN0
YWNrCgoqIE5vZGUgOCsgKGFzeW5jLCBhd2FpdCksIHdyaXR0ZW4gaW4gRVM3
CiogW0V4cHJlc3MuanNdKGh0dHBzOi8vZXhwcmVzc2pzLmNvbS8pIGFwcCB3
aXRoIGEgbmljZSBpbnRlcm5hbCBhcmNoaXRlY3R1cmUsIGJhc2VkIG9uIFt0
aGVzZSBjb252ZW50aW9uc10oaHR0cHM6Ly9naXRodWIuY29tL2tpbW1vYnJ1
bmZlbGR0L2V4cHJlc3MtZXhhbXBsZSkuCiogSGFwaS1zdHlsZSBKb2kgdmFs
aWRhdGlvbiB3aXRoIFtleHByZXNzLXZhbGlkYXRpb25dKGh0dHBzOi8vZ2l0
aHViLmNvbS9hbmRyZXdrZWlnL2V4cHJlc3MtdmFsaWRhdGlvbikKKiBIZXJv
a3UgKyBbUHVwcGV0ZWVyIGJ1aWxkcGFja10oaHR0cHM6Ly9naXRodWIuY29t
L2pvbnRld2tzL3B1cHBldGVlci1oZXJva3UtYnVpbGRwYWNrKQoqIFtQdXBw
ZXRlZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9Hb29nbGVDaHJvbWUvcHVwcGV0
ZWVyKSB0byBjb250cm9sIENocm9tZQo=
",,5932,"bGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczoKICAtICIxMCIKZW52OgogIC0g
QUxMT1dfSFRUUD10cnVlCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'lowlevelprogramming-university',77788381,b'How to be low-level programmer',,0,5932,,257,False,b'https://api.github.com/repos/gurugio/lowlevelprogramming-university/forks',"Tk9USUNFOiBQbGVhc2Ugbm90aWNlIHRoYXQgbG93LWxldmVsIHByb2dyYW1t
aW5nIGlzIG91dCBvZiB0cmVuZCBhbmQgY3VycmVudGx5IHRoZXJlIGFyZSBu
b3QgbWFueSBjb21wYW5pZXMgaGlyaW5nIGxvdy1sZXZlbCBkZXZlbG9wZXIu
IEl0IGlzIGdldHRpbmcgaGFyZGVyIGZvciBtZSB0byBmaW5kIGEgam9iLgpJ
ZiB5b3UgZG9lcyBub3Qgc3RhcnQgcHJvZmVzc2lvbmFsIGNhcmVlciB5ZXQs
IEkgd291bGQgbGlrZSB0byByZWNvbW1lbmQgeW91IGNvbnNpZGVyIG90aGVy
IGZpZWxkcyBjYXJlZnVsbHkuCgoKKiBbTG93LUxldmVsIFByb2dyYW1taW5n
IFVuaXZlcnNpdHldKCNMb3ctTGV2ZWwtUHJvZ3JhbW1pbmctVW5pdmVyc2l0
eSkKICAqIFtXaGF0IGlzIGl0P10oI1doYXQtaXMtaXQpCiAgKiBbV2hhdCBJ
cyB0aGUgTG93IExldmVsXSgjV2hhdC1Jcy10aGUtTG93LUxldmVsKQogICog
IFtUaGVvcnldKCNUaGVvcnkpCiAgKiAgW0xhbmd1YWdlc10oI0xhbmd1YWdl
cykKICAgICAqIFtBc3NlbWJseV0oI0Fzc2VtYmx5KQogICAgICogW0MgbGFu
Z3VhZ2VdKCNDLWxhbmd1YWdlKQogICogW0FwcGxpY2F0aW9uc10oI0FwcGxp
Y2F0aW9ucykKICAgICogW0hhcmR3YXJlICYmIEZpcm13YXJlXSgjSGFyZHdh
cmUtRmlybXdhcmUpCiAgICAqIFtMaW51eCBrZXJuZWwgYW5kIGRldmljZSBk
cml2ZXJdKCNMaW51eC1rZXJuZWwtYW5kLWRldmljZS1kcml2ZXIpCiAgICAg
ICogW0ZvbGxvdyBjYXJlZnVsbHldKCNGb2xsb3ctY2FyZWZ1bGx5KQogICAg
ICAqIFtSZWZlcmVuY2VzXSgjUmVmZXJlbmNlcykKICAgICogW090aGVyIGFw
cGxpY2F0aW9uc10oI090aGVyLWFwcGxpY2F0aW9ucykKICAqIFtGdXR1cmUg
b2YgbG93LWxldmVsIHByb2dyYW1taW5nXSgjRnV0dXJlLW9mLWxvdy1sZXZl
bC1wcm9ncmFtbWluZykKICAqIFtIb3cgdG8gc3RhcnQ/XSgjSG93LXRvLXN0
YXJ0KQoqIFtUcmFuc2xhdGlvbl0oI1RyYW5zbGF0aW9uKQoqIFtXaG8gYW0g
ST9dKCN3aG8tYW0taSkKCiMgTG93LUxldmVsIFByb2dyYW1taW5nIFVuaXZl
cnNpdHkKCiMjIDxhIG5hbWU9IldoYXQtaXMtaXQiPjwvYT5XaGF0IGlzIGl0
PwoKSSdtIGluc3BpcmVkIGJ5IFtnb29nbGUtaW50ZXJ2aWV3LXVuaXZlcnNp
dHldKGh0dHBzOi8vZ2l0aHViLmNvbS9qd2FzaGFtL2NvZGluZy1pbnRlcnZp
ZXctdW5pdmVyc2l0eSkuIEknZCBsaWtlIHRvIHNoYXJlIG15IGV4cGVyaWVu
Y2UgYW5kIHNob3cgYSByb2FkbWFwIHRvIGJlY29taW5nIGEgbG93LWxldmVs
IHByb2dyYW1tZXIgYmVjYXVzZSBJIGhhdmUgZm91bmQgdGhhdCB0aGVzZSBz
a2lsbHMgYXJlIG5vdCBhcyBjb21tb24gYXMgdGhleSBvbmNlIHdlcmUuIElu
IGFkZGl0aW9uLCBtYW55IHN0dWRlbnRzIGFuZCBiZWdpbm5lcnMgYXNrIG1l
IGhvdyB0aGV5IGNvdWxkIGJlY29tZSBsb3ctbGV2ZWwgcHJvZ3JhbW1lcnMg
YW5kIExpbnV4IGtlcm5lbCBlbmdpbmVlcnMuCgpUaGlzIHBhZ2UgY2Fubm90
IGluY2x1ZGUgZXZlcnkgbGluay9ib29rL2NvdXJzZS4gRm9yIGV4YW1wbGUs
IHRoaXMgcGFnZSBpbnRyb2R1Y2VzIEFyZHVpbm8gYnV0IHRoZXJlIGlzIG5v
dCBkZXRhaWxlZCBpbmZvcm1hdGlvbiBhYm91dCBBcmR1aW5vIGFuZCBlbWJl
ZGRlZCBzeXN0ZW1zLiBZb3Ugc2hvdWxkIGdvIGZ1cnRoZXIgeW91cnNlbGYu
IFlvdSBoYXZlIHRoZSBrZXl3b3JkICJBcmR1aW5vIiB3aXRoIHdoaWNoIHlv
dSBjYW4gc3RhcnQuIFNvIHlvdXIgbmV4dCBzdGVwIGlzIHByb2JhYmx5IGdv
b2dsaW5nIEFyZHVpbm8sIGJ1eWluZyBhIGtpdCwgYW5kIGRvaW5nIHNvbWV0
aGluZyBmb3IgeW91cnNlbGYsIG5vdCBjb2xsZWN0aW5nIGxpbmtzIG9yIGZy
ZWUgYm9va3MuIFBsZWFzZSByZW1lbWJlciB0aGlzIHBhZ2UgaXMganVzdCBh
IHJvYWRtYXAgZm9yIGJlZ2lubmVycy4KCkxvdy1sZXZlbCBwcm9ncmFtbWlu
ZyBpcyBhIHBhcnQgb2YgY29tcHV0ZXIgc2NpZW5jZS4KQWJzb2x1dGVseSBp
dCB3b3VsZCBiZSBtdWNoIGJldHRlciB0byBnZXQgZWR1Y2F0aW9uIGZvciBj
b21wdXRlciBzY2llbmNlIGZpcnN0LgoqIFtQYXRoIHRvIGEgZnJlZSBzZWxm
LXRhdWdodCBlZHVjYXRpb24gaW4gQ29tcHV0ZXIgU2NpZW5jZSFdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9vc3N1L2NvbXB1dGVyLXNjaWVuY2UpCgoKIyMgPGEg
bmFtZT0iV2hhdC1Jcy10aGUtTG93LUxldmVsIj48L2E+V2hhdCBJcyB0aGUg
TG93LUxldmVsPwoKSSBjbGFzc2lmeSBsb3ctbGV2ZWwgcHJvZ3JhbW1pbmcg
YXMgcHJvZ3JhbW1pbmcgdGhhdCBpcyB2ZXJ5IGNsb3NlIHRvIHRoZSBtYWNo
aW5lLCB1c2luZyBhIGxvd2VyIGxldmVsIHByb2dyYW1taW5nIGxhbmd1YWdl
IGxpa2UgQyBvciBhc3NlbWJseS4gVGhpcyBpcyBpbiBjb250cmFzdCB0byBo
aWdoZXItbGV2ZWwgcHJvZ3JhbW1pbmcsIHR5cGljYWwgb2YgdXNlci1zcGFj
ZSBhcHBsaWNhdGlvbnMsIHVzaW5nIGhpZ2ggbGV2ZWwgbGFuZ3VhZ2VzIChl
LmcuIFB5dGhvbiwgSmF2YSkuCiogW1dpa2lwZWRpYTogTG93LWxldmVsIHBy
b2dyYW1taW5nIGxhbmd1YWdlXShodHRwczovL2VuLndpa2lwZWRpYS5vcmcv
d2lraS9Mb3ctbGV2ZWxfcHJvZ3JhbW1pbmdfbGFuZ3VhZ2UpCgpZZXMsIHN5
c3RlbXMgcHJvZ3JhbW1pbmcgaXMgYSB2ZXJ5IGNsb3NlIGNvbmNlcHQgdG8g
bG93LWxldmVsIHByb2dyYW1taW5nLiBUaGlzIHBhZ2UgaW5jbHVkZXMgdGhl
IGhhcmR3YXJlIGRlc2lnbiBhbmQgZmlybXdhcmUgZGV2ZWxvcG1lbnQgdGhh
dCBpcyBub3QgaW5jbHVkZWQgaW4gc3lzdGVtcyBwcm9ncmFtbWluZy4KKiBb
V2lraXBlZGlhOiBTeXN0ZW0gcHJvZ3JhbW1pbmddKGh0dHBzOi8vZW4ud2lr
aXBlZGlhLm9yZy93aWtpL1N5c3RlbV9wcm9ncmFtbWluZykKCkZpbmFsbHks
IHRoaXMgcGFnZSBpbmNsdWRlcyB0b3BpY3MgcmFuZ2luZyBmcm9tIGhhcmR3
YXJlIGNvbXBvbmVudHMgdG8gdGhlIExpbnV4IGtlcm5lbC4gVGhhdCBpcyBh
IGh1Z2UgcmFuZ2Ugb2YgbGF5ZXJzLiBBIG9uZSBwYWdlIGRvY3VtZW50IGNh
biBuZXZlciBjb3ZlciB0aGUgZGV0YWlscyBvZiBhbGwgdGhlIGxheWVycywg
c28gdGhlIGFpbSBvZiB0aGlzIGRvY3VtZW50IGlzIHRvIHNlcnZlIGFzIGEg
c3RhcnRpbmcgcG9pbnQgZm9yIGxvdy1sZXZlbCBwcm9ncmFtbWluZy4KCiMj
ICA8YSBuYW1lPSJUaGVvcnkiPjwvYT5UaGVvcnkKClRoZXJlIGFyZSB0d28g
YmFja2dyb3VuZCB0aGVvcmllcyB0byBsb3ctbGV2ZWwgcHJvZ3JhbW1pbmc6
CiogQ29tcHV0ZXIgQXJjaGl0ZWN0dXJlCiogT3BlcmF0aW5nIFN5c3RlbXMK
CkkgdGhpbmsgdGhlIGJlc3Qgd2F5IHRvIGxlYXJuIHRoZW9yeSBpcyBieSB0
YWtpbmcgYSBjb3Vyc2UuIFJlYWRpbmcgYm9va3MgaXMgbm90IGJhZCBidXQg
dGFrZXMgdG9vIG11Y2ggdGltZSBhbmQgZWZmb3J0LiBZb3UgY2FuIGZpbmQg
bWFueSBnb29kIGNsYXNzZXMgb24gb25saW5lIHVuaXZlcnNpdGllcywgZm9y
IGluc3RhbmNlLCBDb3Vyc2VyYS5vcmcgYW5kIGVkeC5vcmcuClRoZW9yeSBp
cyB0aGVvcnkuIEkgZG9uJ3QgdGhpbmsgeW91IG5lZWQgdG8gZ2V0IGFuIEEr
IGluIHRoZSBjbGFzcywganVzdCB1bmRlcnN0YW5kIHRoZSBiaWcgcGljdHVy
ZS4KWW91J2xsIGdldCBiZXR0ZXIgYW5kIGJldHRlciB3aXRoIGV4cGVyaWVu
Y2UuCgpMZXQgbWUgaW50cm9kdWNlIHNldmVyYWwgYm9va3MgdGhhdCBJJ3Zl
IHJlYWQuIFRoZXkgYXJlIGNvbW1vbmx5IHVzZWQgYXMgdGV4dGJvb2tzIGlu
IHVuaXZlcnNpdGllcy4gSWYgdGhlcmUgaXMgbm8gY2xhc3Mgd2l0aCB0aGVz
ZSBib29rcyBpbiB5b3VyIHVuaXZlcnNpdHksIGl0J3Mgd29ydGggc3BlbmRp
bmcgc29tZSB0aW1lIHJlYWRpbmcgdGhlbS4KKiBDb21wdXRlciBBcmNoaXRl
Y3R1cmUKICAqIENvbXB1dGVyIEFyY2hpdGVjdHVyZSwgRmlmdGggRWRpdGlv
bjogQSBRdWFudGl0YXRpdmUgQXBwcm9hY2gKICAqIENvbXB1dGVyIFN5c3Rl
bXM6IEEgUHJvZ3JhbW1lcidzIFBlcnNwZWN0aXZlCiAgKiBDb21wdXRlciBP
cmdhbml6YXRpb24gYW5kIERlc2lnbiwgRm91cnRoIEVkaXRpb246IFRoZSBI
YXJkd2FyZS9Tb2Z0d2FyZSBJbnRlcmZhY2UKKiBPcGVyYXRpbmcgU3lzdGVt
cwogICogVGhlIE1hZ2ljIEdhcmRlbiBFeHBsYWluZWQ6IFRoZSBJbnRlcm5h
bHMgb2YgVU5JWCBTeXN0ZW0gViBSZWxlYXNlIDQgYW4gT3BlbiBTeXN0ZW1z
IERlc2lnbgogICogVGhlIERlc2lnbiBvZiB0aGUgVU5JWCBPcGVyYXRpbmcg
U3lzdGVtCiAgKiBPcGVyYXRpbmcgU3lzdGVtczogSW50ZXJuYWxzIGFuZCBE
ZXNpZ24gUHJpbmNpcGxlcyBieSBXaWxsaWFtIFN0YWxsaW5ncwoqIFJlY29t
bWVuZGVkIENvdXJzZXMKICAgKiBbQ1M0MDE6IE9wZXJhdGluZyBTeXN0ZW1z
IGZyb20gc2F5bG9yLm9yZ10oaHR0cHM6Ly9sZWFybi5zYXlsb3Iub3JnL2Nv
dXJzZS92aWV3LnBocD9pZD05NCkKClRoZXJlIGlzIGFuIGluZmluaXRlIGxp
c3Qgb2YgZ29vZCBib29rcy4gSSBkb24ndCB3YW50IHRvIHNheSB0aGF0IHlv
dSBzaG91bGQgcmVhZCBtYW55IGJvb2tzLiBKdXN0IHJlYWQgb25lIGJvb2sg
Y2FyZWZ1bGx5LiBXaGVuZXZlciB5b3UgbGVhcm4gYSB0aGVvcnksIGltcGxl
bWVudCBzaW11bGF0aW9uIGNvZGUgb2YgaXQuICoqSW1wbGVtZW50aW5nIG9u
ZSB0aGluZyBpcyBiZXR0ZXIgdGhhbiBrbm93aW5nIG9uZSBodW5kcmVkIHRo
ZW9yaWVzLioqCgojIyAgPGEgbmFtZT0iTGFuZ3VhZ2VzIj48L2E+TGFuZ3Vh
Z2VzCgojIyMgPGEgbmFtZT0iQXNzZW1ibHkiPjwvYT5Bc3NlbWJseQoKQ2hv
b3NlIG9uZSBiZXR3ZWVuIHg4NiBvciBBUk0uIE5vIG5lZWQgdG8ga25vdyBi
b3RoLiBJdCBkb2Vzbid0IG1hdHRlciB0byBrbm93IGFzc2VtYmx5IGxhbmd1
YWdlLiBUaGUgZXNzZW50aWFsIHRoaW5nIGlzIHVuZGVyc3RhbmRpbmcgdGhl
IGludGVybmFscyBvZiBhIENQVSBhbmQgY29tcHV0ZXIuIFNvIHlvdSBkb24n
dCBuZWVkIHRvIHByYWN0aWNlIHRoZSBhc3NlbWJseSBvZiB0aGUgbGF0ZXN0
IENQVS4gU2VsZWN0IDgwODYgb3IgQ29yZXgtTS4KCiogWzgwODYgYXNzZW1i
bHkgcHJvZ3JhbW1pbmcgd2l0aCBlbXU4MDg2XShodHRwczovL2dpdGh1Yi5j
b20vZ3VydWdpby9ib29rX2Fzc2VtYmx5XzgwODYpCiAgKiBiYXNpYyBjb25j
ZXB0cyBvZiBDUFUgYW5kIGNvbXB1dGVyIGFyY2hpdGVjdHVyZQogICogYmFz
aWMgY29uY2VwdHMgb2YgQyBwcm9ncmFtbWluZyBsYW5ndWFnZQoqIFs2NGJp
dCBhc3NlbWJseSBwcm9ncmFtbWluZyh0cmFuc2xhdGlvbiBpbiBwcm9ncmVz
cyldKGh0dHBzOi8vZ2l0aHViLmNvbS9ndXJ1Z2lvL2Jvb2tfYXNzZW1ibHlf
NjRiaXQpCiAgKiBiYXNpYyBjb25jZXB0cyBvZiBtb2Rlcm4gQ1BVIGFuZCBj
b21wdXRlciBhcmNoaXRlY3R1cmUKICAqIGJhc2ljIGNvbmNlcHRzIG9mIGRp
c2Fzc2VtYmxpbmcgYW5kIGRlYnVnZ2luZyBvZiBDIGNvZGUKICAqIF9uZWVk
IGhlbHAgZm9yIHRyYW5zbGF0aW9uXwoqIFtMZWFybmluZyBhc3NlbWJseSBm
b3IgbGludXgteDY0XShodHRwczovL2dpdGh1Yi5jb20vMHhBWC9hc20pCiAg
KiBwdXJlIDY0LWJpdCBhc3NlbWJseSBwcm9ncmFtbWluZyB3aXRoIE5BU00g
YW5kIGlubGluZSBhc3NlbWJseSB3aXRoIEdDQwoqIFtBUk0gQXJjaGl0ZWN0
dXJlIFJlZmVyZW5jZSBNYW51YWwsIDJuZCBFZGl0aW9uXShodHRwOi8vd3d3
Lm15cGVhcnNvbnN0b3JlLmNhL2Jvb2tzdG9yZS9hcm0tYXJjaGl0ZWN0dXJl
LXJlZmVyZW5jZS1tYW51YWwtOTc4MDIwMTczNzE5NikKICAqIENvbXBsZXRl
IHJlZmVyZW5jZSBvbiBBUk0gcHJvZ3JhbW1pbmcKKiBDb21wdXRlciBPcmdh
bml6YXRpb24gYW5kIERlc2lnbgogICogW01JUFMgRWRpdGlvbl0oaHR0cHM6
Ly93d3cuYW1hem9uLmNhL0NvbXB1dGVyLU9yZ2FuaXphdGlvbi1EZXNpZ24t
TUlQUy1JbnRlcmZhY2UvZHAvMDEyNDA3NzI2OS8pCiAgKiBbQVJNIEVkaXRp
b25dKGh0dHBzOi8vd3d3LmFtYXpvbi5jYS9Db21wdXRlci1Pcmdhbml6YXRp
b24tRGVzaWduLUFSTS1JbnRlcmZhY2UvZHAvMDEyODAxNzMzMy8pCiAgKiBb
UklTQy1WIEVkaXRpb25dKGh0dHBzOi8vd3d3LmFtYXpvbi5jb20vQ29tcHV0
ZXItT3JnYW5pemF0aW9uLURlc2lnbi1SSVNDLVYtQXJjaGl0ZWN0dXJlL2Rw
LzAxMjgxMjI3NTcpCiAgKiBBY2FkZW1pYyBib29rcyB0aGF0IGV4cGxhaW4g
aG93IGV2ZXJ5IGNvbXBvbmVudCBvZiBhIGNvbXB1dGVyIHdvcmsgZnJvbSB0
aGUgZ3JvdW5kIHVwLgogICogRXhwbGFpbnMgaW4gZGV0YWlsIHRoZSBkaWZm
ZXJlbnQgY29uY2VwdHMgdGhhdCBtYWtlIHVwIGNvbXB1dGVyIGFyY2hpdGVj
dHVyZS4KICAqIFRoZXkgYXJlIG5vdCB0YXJnZXRlZCBhdCByZWFkZXJzIHdo
byB3aXNoIHRvIGJlY29tZSBwcm9maWNpZW50IGluIGEgc3BlY2lmaWMgYXNz
ZW1ibHkgbGFuZ3VhZ2UuCiAgKiBUaGUgTUlQUyBhbmQgQVJNIGVkaXRpb24g
Y292ZXIgdGhlIHNhbWUgdG9waWNzIGJ1dCBieSBkaXNzZWN0aW5nIGEgZGlm
ZmVyZW50IGFyY2hpdGVjdHVyZS4KICAqIEJvdGggZWRpdGlvbnMgY29udGFp
biBleGFtcGxlcyBpbiB0aGUgeDg2IHdvcmxkCgojIyMgPGEgbmFtZT0iQy1s
YW5ndWFnZSI+PC9hPkMgbGFuZ3VhZ2UKClRoZXJlIGlzIG5vIHNob3J0Y3V0
LiBKdXN0IHJlYWQgdGhlIGVudGlyZSBib29rIGFuZCBzb2x2ZSBhbGwgdGhl
IGV4ZXJjaXNlcy4KCiogW0MgUHJvZ3JhbW1pbmc6IEEgTW9kZXJuIEFwcHJv
YWNoLCAybmQgRWRpdGlvbl0oaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9DLVBy
b2dyYW1taW5nLU1vZGVybi1BcHByb2FjaC0ybmQvZHAvMDM5Mzk3OTUwNCkK
KiBbVGhlIEMgUHJvZ3JhbW1pbmcgTGFuZ3VhZ2UgMm5kIEVkaXRpb25dKGh0
dHBzOi8vd3d3LmFtYXpvbi5jb20vUHJvZ3JhbW1pbmctTGFuZ3VhZ2UtQnJp
YW4tVy1LZXJuaWdoYW4vZHAvMDEzMTEwMzYyOC9yZWY9cGRfc2JzXzE0X3Rf
MD9fZW5jb2Rpbmc9VVRGOCZwc2M9MSZyZWZSSUQ9NjBSMUQyQ0hCQThESFlU
NkpOTU4pCiogW01vZGVybiBDXShodHRwOi8vaWN1YmUtaWNwcy51bmlzdHJh
LmZyL2ltZ19hdXRoLnBocC9kL2RiL01vZGVybkMucGRmKQogICogRm9yIG5l
dyBzdGFuZGFyZCBvZiBDCiogW0lzIFBhcmFsbGVsIFByb2dyYW1taW5nIEhh
cmQsIEFuZCwgSWYgU28sIFdoYXQgQ2FuIFlvdSBEbyBBYm91dCBJdD9dKGh0
dHBzOi8vd3d3Lmtlcm5lbC5vcmcvcHViL2xpbnV4L2tlcm5lbC9wZW9wbGUv
cGF1bG1jay9wZXJmYm9vay9wZXJmYm9vay5odG1sKQogICogcmF3IGltcGxl
bWVudGF0aW9uIG9mIHN5bmNocm9uaXphdGlvbiB3aXRoIEMKICAqIEVzc2Vu
dGlhbCBmb3IgbGFyZ2Ugc2NhbGUgQyBwcm9ncmFtbWluZyAoZXNwZWNpYWxs
eSBmb3Iga2VybmVsIHByb2dyYW1taW5nKQoqIFtDIFByb2plY3QgQmFzZWQg
VHV0b3JpYWxzP10oaHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL0NfUHJvZ3Jh
bW1pbmcvY29tbWVudHMvODcycmx0L2NfcHJvamVjdF9iYXNlZF90dXRvcmlh
bHMvKQogICogSWYgeW91IGZpbmlzaCByZWFkaW5nIG9uZSBvciB0d28gQyBw
cm9ncmFtbWluZyBib29rcywgdGhlbiB5b3UgTVVTVCBtYWtlIHNvbWV0aGlu
Zy4KICAqIENob29zZSB3aGF0ZXZlciB5b3UgbGlrZS4KICAqIEZpcnN0IG1h
a2Ugb24geW91ciBvd24gYW5kIHRoZW4gY29tcGFyZSB3aXRoIHNvbWVvbmUg
ZWxzZSdzIHNvdXJjZSBjb2RlLiBJdCBpcyB2ZXJ5IGltcG9ydGFudCB0byBj
b21wYXJlIHlvdXIgc291cmNlIGFuZCBvdGhlcnMuIFlvdSBjYW4gaW1wcm92
ZSB5b3VyIHNraWxsIG9ubHkgd2hlbiB5b3UgcmVhZCB0aGUgb3RoZXIncyBz
b3VyY2UgYW5kIGxlYXJuIGJldHRlciBtZXRob2RzLiBCb29rcyBhcmUgZGVh
ZCBhbmQgc291cmNlIGlzIGxpdmUuCiogW0MgYW5kIG90aGVyIGxhbmd1YWdl
cyBiYXNlZCBwcm9qZWN0c10oaHR0cHM6Ly9naXRodWIuY29tL2RhbmlzdGVm
YW5vdmljL2J1aWxkLXlvdXItb3duLXgpCiAgKiBmaW5kIG1vcmUgaW50ZXJl
c3RpbmcgcHJvamVjdHMKKiBbTWljaGFlbCBBYnJhc2jigJlzIEdyYXBoaWNz
IFByb2dyYW1taW5nIEJsYWNrIEJvb2ssIFNwZWNpYWwgRWRpdGlvbl0oaHR0
cDovL3d3dy5qYWdyZWdvcnkuY29tL2FicmFzaC1ibGFjay1ib29rLykKICAq
IFJlZmVyZW5jZSBvbiBvcHRpbWl6YXRpb24gdXNpbmcgQyBhbmQgYSBiaXQg
b2YgeDg2IGFzc2VtYmx5CiAgKiBTdGFydHMgZnJvbSB0aGUgODA4OCB1cCB0
byB0b2RheQogICogU3BlY2lhbCBmb2N1cyBvbiBsb3ctbGV2ZWwgZ3JhcGhp
Y3Mgb3B0aW1pemF0aW9uCiogW0ZyYW1ld29yayBhbmQgcGx1Z2luIGRlc2ln
biBpbiBDXShodHRwczovL2dpdGh1Yi5jb20vZ3VydWdpby9ib29rX2Nwcm9n
cmFtbWluZykKICAqIEhvdyB0byBkZXZlbG9wIGZyYW1ld29yayBhbmQgcGx1
Z2luIGluIEMgZm9yIGxhcmdlIHNjYWxlIHNvZnR3YXJlCiAgKiBWZXJ5IGJh
c2ljIHByb2dyYW1taW5nIHRpcHMgZm9yIExpbnV4IGtlcm5lbCBzb3VyY2Ug
cmVhZGluZwoKSWYgeW91IHdhbnQgdG8gYmUgZXhwZXJ0IG9mIEMgcHJvZ3Jh
bW1pbmcsIHZpc2l0IGh0dHBzOi8vbGVldGNvZGUuY29tLy4gR29vZCBsdWNr
IQoKIyMgPGEgbmFtZT0iQXBwbGljYXRpb25zIj48L2E+QXBwbGljYXRpb25z
CgojIyMgPGEgbmFtZT0iSGFyZHdhcmUtRmlybXdhcmUiPjwvYT5IYXJkd2Fy
ZSAmJiBGaXJtd2FyZQoKSWYgeW91IHdhbnQgdG8gYmUgYW4gZW1iZWRkZWQg
c3lzdGVtcyBlbmdpbmVlciwgaXQgd291bGQgYmUgYmVzdCB0byBzdGFydCBm
cm9tIGEgc2ltcGxlIGhhcmR3YXJlIGtpdCwgcmF0aGVyIHRoYW4gc3RhcnRp
bmcgd2l0aCB0aGUgbGF0ZXN0IEFSTSBjaGlwc2V0LgoKKiBbQXJkdWlubyBT
dGFydCBLaXRdKGh0dHBzOi8vd3d3LmFyZHVpbm8uY2MvKQogICogVGhlcmUg
YXJlIG1hbnkgc2VyaWVzIG9mIEFyZHVpbm9zIGJ1dCAiQXJkdWlubyBTdGFy
dCBLaXQiIGhhcyB0aGUgbW9zdCBzaW1wbGUgcHJvY2Vzc29yKEF0bWVnYTMy
OFApIGFuZCBndWlkZSBib29rCiAgKiBBdG1lZ2EzMjhQIGhhcyBhbiA4LWJp
dCBjb3JlIHdoaWNoIGlzIGEgZ29vZCBwbGFjZSB0byBzdGFydCBkaWdpdGFs
IGNpcmN1aXQgZGVzaWduIGFuZCBmaXJtd2FyZSBkZXZlbG9wbWVudC4KICAq
IFlvdSBkb24ndCBuZWVkIHRvIGtub3cgaG93IHRvIGRyYXcgc2NoZW1hdGlj
cyBhbmQgbGF5b3V0cyBhbmQgYXNzZW1ibGUgdGhlIGNoaXBzLgogICogQnV0
IHlvdSBkbyBuZWVkIHRvIGtub3cgaG93IHRvIHJlYWQgc2NoZW1hdGljcyBh
bmQgdW5kZXJzdGFuZCBob3cgdGhlIGNoaXBzIGFyZSBjb25uZWN0ZWQuCiAg
KiBGaXJtd2FyZSBkZXZlbG9wZXJzIHNob3VsZCBiZSBhYmxlIHRvIHJlYWQg
dGhlIHNjaGVtYXRpY3MgYW5kIGZpZ3VyZSBvdXQgaG93IHRvIHNlbmQgZGF0
YSB0byB0aGUgdGFyZ2V0IGRldmljZS4KICAqIEZvbGxvdyB0aGUgZ3VpZGUg
Ym9vayEKKiBbODA4NiBtYW51YWxdKGh0dHBzOi8vZWRnZS5lZHgub3JnL2M0
eC9CSVRTUGlsYW5pL0VFRTIzMS9hc3NldC84MDg2X2ZhbWlseV9Vc2Vyc19N
YW51YWxfMV8ucGRmKQogICogSWYgeW91J3JlIGEgYmVnaW5uZXIgdG8geDg2
IGFyY2hpdGVjdHVyZSwgODA4NiBpcyBhbHNvIHZlcnkgZ29vZCBndWlkZSBm
b3IgcHJvY2Vzc29yIGFyY2hpdGVjdHVyZSBhbmQgODB4ODYgYXNzZW1ibHkK
KiBbODAzODYgbWFudWFsXShodHRwOi8vY3NzLmNzYWlsLm1pdC5lZHUvNi44
NTgvMjAxNS9yZWFkaW5ncy9pMzg2LnBkZikKICAqIEJlc3QgZ3VpZGUgZm9y
IHByb3RlY3RlZCBtb2RlIGFuZCBwYWdpbmcgbWVjaGFuaXNtIG9mIDgweDg2
IHByb2Nlc3NvcgogICogV2ViIHZlcnNpb246IGh0dHBzOi8vcGRvcy5jc2Fp
bC5taXQuZWR1LzYuODI4LzIwMTEvcmVhZGluZ3MvaTM4Ni90b2MuaHRtCgpB
dCB0aGlzIHBvaW50LCB5b3Ugc2hvdWxkIGJlIGdvb2QgdG8gc3RhcnQgdGhl
IGxhdGVzdCBBUk0gb3IgeDg2IHByb2Nlc3Nvci4KKiBodHRwczovL3d3dy5y
YXNwYmVycnlwaS5vcmcvCiogaHR0cHM6Ly9iZWFnbGVib2FyZC5vcmcvCiog
aHR0cHM6Ly93d3cuYXJkdWluby5jYy9lbi9BcmR1aW5vQ2VydGlmaWVkL0lu
dGVsRWRpc29uCgpGb3IgZXhhbXBsZSwgdGhlIFJhc3BiZXJyeSBQaSBib2Fy
ZCBoYXMgYSBDb3J0ZXgtQTUzIFByb2Nlc3NvciB0aGF0IHN1cHBvcnRzIGEg
NjQtYml0IGluc3RydWN0aW9uIHNldC4KVGhpcyBhbGxvd3MgeW91IHRvIGV4
cGVyaWVuY2UgYSBtb2Rlcm4gcHJvY2Vzc29yIGFyY2hpdGVjdHVyZSB3aXRo
IHJQaS4KWWVzLCB5b3UgY2FuIGJ1eSBpdC4uLiBidXQuLi4gd2hhdCBhcmUg
eW91IGdvaW5nIHRvIGRvIHdpdGggaXQ/CklmIHlvdSBoYXZlIG5vIHRhcmdl
dCBwcm9qZWN0LCB5b3Ugd291bGQgYmUgbGlrZWx5IHRvIHRocm93IHRoZSBi
b2FyZCBpbnRvIGEgZHJhd2VyIGFuZCBmb3JnZXQgaXQgbGlrZSBvdGhlciBn
YWRnZXRzIHlvdSBtYXkgaGF2ZSBib3VnaHQgYmVmb3JlLgoKU28sIEkgcmVj
b21tZW5kIG9uZSBwcm9qZWN0IGZvciB5b3UuCiogW01ha2luZyB5b3VyIG93
biBrZXJuZWxdKGh0dHA6Ly93aWtpLm9zZGV2Lm9yZy9HZXR0aW5nX1N0YXJ0
ZWQpCiAgKiBHb29kIHJlZmVyZW5jZXM6IGh0dHBzOi8vd3d3LnJlZGRpdC5j
b20vci9vc2Rldi8KKiBbTGVhcm5pbmcgb3BlcmF0aW5nIHN5c3RlbSBkZXZl
bG9wbWVudCB1c2luZyBMaW51eCBrZXJuZWwgYW5kIFJhc3BiZXJyeSBQaV0o
aHR0cHM6Ly9naXRodWIuY29tL3MtbWF0eXVrZXZpY2gvcmFzcGJlcnJ5LXBp
LW9zKQogICogKGRlc2NyaXB0aW9uIG9mIHRoZSBwcm9qZWN0KSBUaGlzIHJl
cG9zaXRvcnkgY29udGFpbnMgYSBzdGVwLWJ5LXN0ZXAgZ3VpZGUgdGhhdCB0
ZWFjaGVzIGhvdyB0byBjcmVhdGUgYSBzaW1wbGUgb3BlcmF0aW5nIHN5c3Rl
bSAoT1MpIGtlcm5lbCBmcm9tIHNjcmF0Y2guLi4oc2tpcCkuLi5FYWNoIGxl
c3NvbiBpcyBkZXNpZ25lZCBpbiBzdWNoIGEgd2F5IHRoYXQgaXQgZmlyc3Qg
ZXhwbGFpbnMgaG93IHNvbWUga2VybmVsIGZlYXR1cmUgaXMgaW1wbGVtZW50
ZWQgaW4gdGhlIFJQaSBPUywgYW5kIHRoZW4gaXQgdHJpZXMgdG8gZGVtb25z
dHJhdGUgaG93IHRoZSBzYW1lIGZ1bmN0aW9uYWxpdHkgd29ya3MgaW4gdGhl
IExpbnV4IGtlcm5lbC4KCkkndmUgbWFkZSBbYSB0b3kga2VybmVsXShodHRw
czovL2dpdGh1Yi5jb20vZ3VydWdpby9jYW9zKSB0aGF0IHN1cHBvcnRzIDY0
LWJpdCBsb25nIG1vZGUsIHBhZ2luZyBhbmQgdmVyeSBzaW1wbGUgY29udGV4
dCBzd2l0Y2hpbmcuIE1ha2luZyBhIHRveSBrZXJuZWwgaXMgZ29vZCB3YXkg
dG8gdW5kZXJzdGFuZCBtb2Rlcm4gY29tcHV0ZXIgYXJjaGl0ZWN0dXJlIGFu
ZCBoYXJkd2FyZSBjb250cm9sLgoKSW4gZmFjdCwgeW91IGhhdmUgYWxyZWFk
eSB0aGUgbGF0ZXN0IHByb2Nlc3NvciBhbmQgdGhlIGxhdGVzdCBoYXJkd2Fy
ZSBkZXZpY2VzLgpZb3VyIGxhcHRvcCEgWW91ciBkZXNrdG9wISBZb3UgYWxy
ZWFkeSBoYXZlIGFsbCB0aGF0IHlvdSBuZWVkIGluIG9yZGVyIHRvIHN0YXJ0
IQpZb3UgZG9uJ3QgbmVlZCB0byBidXkgYW55dGhpbmcuClRoZSBxZW11IGVt
dWxhdG9yIGNhbiBlbXVsYXRlIHRoZSBsYXRlc3QgQVJNIHByb2Nlc3NvcnMg
YW5kIEludGVsIHByb2Nlc3NvcnMuClNvIGV2ZXJ5dGhpbmcgeW91IG5lZWQg
aXMgYWxyZWFkeSBvbiBoYW5kLgpUaGVyZSBhcmUgbWFueSB0b3kga2VybmVs
cyBhbmQgZG9jdW1lbnRzIHlvdSBjYW4gcmVmZXIgdG8uCkp1c3QgaW5zdGFs
bCBxZW11IGVtdWxhdG9yIGFuZCBtYWtlIGEgdGlueSBrZXJuZWwgdGhhdCBq
dXN0IGJvb3RzLCB0dXJucyBvbiBwYWdpbmcsIGFuZCBwcmludHMgc29tZSBt
ZXNzYWdlcy4KCk90aGVyIHRveSBrZXJuZWxzOgoqIGh0dHBzOi8vbGl0dGxl
b3Nib29rLmdpdGh1Yi5pby8KKiBodHRwczovL3R1aGRvLmdpdGh1Yi5pby9v
czAxLwoKIyMjIDxhIG5hbWU9IkxpbnV4LWtlcm5lbC1hbmQtZGV2aWNlLWRy
aXZlciI+PC9hPkxpbnV4IGtlcm5lbCBhbmQgZGV2aWNlIGRyaXZlcgoKWW91
IGRvbid0IG5lZWQgdG8gbWFrZSBhIGNvbXBsZXRlIG9wZXJhdGluZyBzeXN0
ZW0uCkpvaW4gdGhlIExpbnV4IGNvbW11bml0eSBhbmQgcGFydGljaXBhdGUg
aW4gZGV2ZWxvcG1lbnQuCgojIyMjIDxhIG5hbWU9IkZvbGxvdy1jYXJlZnVs
bHkiPjwvYT5Gb2xsb3cgY2FyZWZ1bGx5CgoqIEJvb2tzOiBSZWFkIHRoZSBm
b2xsb3dpbmcgaW4gb3JkZXIKICAqIFtUaGUgRGVzaWduIG9mIHRoZSBVbml4
IE9wZXJhdGluZyBTeXN0ZW1dKGh0dHBzOi8vd3d3LmFtYXpvbi5jb20vRGVz
aWduLVVOSVgtT3BlcmF0aW5nLVN5c3RlbS9kcC8wMTMyMDE3OTk3KQogICAg
KiBUaGUgYmFzaWMgY29uY2VwdHMgb2YgVW5peCBhcmUgYXBwbGllZCBpbnRv
IGFsbCBvcGVyYXRpbmcgc3lzdGVtcy4KICAgICogVGhpcyBib29rIGlzIGEg
dmVyeSBnb29kIHBsYWNlIHRvIGxlYXJuIHRoZSBjb3JlIGNvbmNlcHRzIG9m
IG9wZXJhdGluZyBzeXN0ZW1zLgogICogW0xpbnV4IERldmljZSBEcml2ZXJz
XShodHRwczovL3d3dy5hbWF6b24uY29tL0xpbnV4LURldmljZS1Ecml2ZXJz
LUpvbmF0aGFuLUNvcmJldC9kcC8wNTk2MDA1OTAzL3JlZj1zcl8xXzQ/aWU9
VVRGOCZxaWQ9MTQ4MzY1MDcxMiZzcj04LTQma2V5d29yZHM9dW5kZXJzdGFu
ZGluZytsaW51eCtrZXJuZWwpCiAgICAqIE1ha2UgYWxsIGV4YW1wbGVzIGZv
ciB5b3Vyc2VsZgogICogW0xpbnV4IEtlcm5lbCBEZXZlbG9wbWVudF0oaHR0
cHM6Ly93d3cuYW1hem9uLmNvbS9MaW51eC1LZXJuZWwtRGV2ZWxvcG1lbnQt
Um9iZXJ0LUxvdmUvZHAvMDY3MjMyOTQ2OC9yZWY9c3JfMV8yP2llPVVURjgm
cWlkPTE0ODM2NTA3MTImc3I9OC0yJmtleXdvcmRzPXVuZGVyc3RhbmRpbmcr
bGludXgra2VybmVsKQogICAgKiBVbmRlcnN0YW5kIHRoZSBkZXNpZ24gb2Yg
dGhlIExpbnV4IEtlcm5lbAogICogW1VuZGVyc3RhbmRpbmcgdGhlIExpbnV4
IEtlcm5lbF0oaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9VbmRlcnN0YW5kaW5n
LUxpbnV4LUtlcm5lbC1UaGlyZC1EYW5pZWwvZHAvMDU5NjAwNTY1Mi9yZWY9
c3JfMV8xP2llPVVURjgmcWlkPTE0ODM2NTA3MTImc3I9OC0xJmtleXdvcmRz
PXVuZGVyc3RhbmRpbmcrbGludXgra2VybmVsKQogICAgKiBSZWFkIHRoaXMg
Ym9vayBhbmQgdGhlIGtlcm5lbCBzb3VyY2UgdjIuNiBhdCB0aGUgc2FtZSB0
aW1lCiAgICAqIE5ldmVyIHN0YXJ0IHdpdGggdGhlIGxhdGVzdCB2ZXJzaW9u
LCB2Mi42IGlzIGVub3VnaCEKICAgICogVXNlIHFlbXUgYW5kIGdkYiB0byBy
dW4gdGhlIGtlcm5lbCBzb3VyY2UgbGluZSBieSBsaW5lCiAgICAgICogaHR0
cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xMTQwODA0MS9ob3ct
dG8tZGVidWctdGhlLWxpbnV4LWtlcm5lbC13aXRoLWdkYi1hbmQtcWVtdQog
ICAgICAqIGh0dHBzOi8vZ2l0aHViLmNvbS9ndXJ1Z2lvL2xpbnV4ZGV2ZWxv
cHRpcC9ibG9iL21hc3Rlci9xZW11LWdkYi1rZHVtcC5tZAogICAgKiBVc2Ug
YnVzeWJveCB0byBtYWtlIHRoZSBzaW1wbGVzdCBmaWxlc3lzdGVtIHRoYXQg
dGFrZXMgb25seSBvbmUgc2Vjb25kIHRvIGJvb3QKICAgICAgKiBodHRwczov
L2dpdGh1Yi5jb20vZ3VydWdpby9saW51eGRldmVsb3B0aXAvYmxvYi9tYXN0
ZXIvbWluaWtlcm5lbHdpdGhidXN5Ym94Lm1kCiogT3RoZXIgcmVzb3VyY2Vz
OiBGcmVlIHJlc291cmNlcyBJIHJlY29tbWVuZAogICogW0xpbnV4IGRldmlj
ZSBkcml2ZXIgbGFic10oaHR0cHM6Ly9saW51eC1rZXJuZWwtbGFicy5naXRo
dWIuaW8vKQogICAgKiBQcmFjdGljYWwgZ3VpZGUgYW5kIGV4Y2VsbGVudCBl
eGVyY2lzZXMgbWFraW5nIExpbnV4IGRldmljZSBkcml2ZXJzIHdpdGggZXNz
ZW50aWFsIGtlcm5lbCBBUElzCiAgICAqIEkgdGhpbmsgdGhpcyBkb2N1bWVu
dCBpbnRyb2R1Y2VzIGFsbW9zdCBhbGwgZXNzZW50aWFsIGtlcm5lbCBBUElz
LgogICogW1RoZSBFdWR5cHR1bGEgQ2hhbGxlbmdlXShodHRwOi8vZXVkeXB0
dWxhLWNoYWxsZW5nZS5vcmcvKQogICAgKiBfU2FkbHksIHRoaXMgY2hhbGxl
bmdlIGRvZXMgbm90IGFjY2VwdCBuZXcgY2hhbGxlbmdlcnMgYmVjYXVzZSB0
aGVyZSBpcyBubyBjaGFsbGVuZ2UgYW55bW9yZS5fIFRoZSBtYWludGFpbmVy
IHNhaWQgaGUvc2hlIGlzIHBsYW5uaW5nIGEgbmV3IGZvcm1hdC4gSSBob3Bl
IGl0IGNvbWVzIGJhY2sgQVNBUC4KICAgICAgKiBCdXQgeW91IGNhbiBmaW5k
IHRoZSBxdWVzdGlvbnMgb2YgdGhlIGNoYWxsZW5nZSB3aXRoIEdvb2dsZS4g
U29tZSBwZW9wbGUgYWxyZWFkeSB1cGxvYWRlZCB3aGF0IHRoZXkgZGlkLiBG
aW5kIHRoZSBxdWVzdGlvbnMgYW5kIHRyeSB0byBzb2x2ZSB0aGVtIG9uIHlv
dXIgb3duLCBhbmQgY29tcGFyZSB5b3VyIHNvbHV0aW9uIHdpdGggb3RoZXJz
LgogICAgKiBUaGlzIGlzIGxpa2UgYW4gYXdlc29tZSBwcml2YXRlIHRlYWNo
ZXIgd2hvIGd1aWRlcyB5b3Ugb24gd2hhdCB0byBkby4KICAgICogSWYgeW91
IGRvbid0IGtub3cgd2hhdCB0byBkbywganVzdCBzdGFydCB0aGlzLgogICog
IFtMZWFybmluZyBvcGVyYXRpbmcgc3lzdGVtIGRldmVsb3BtZW50IHVzaW5n
IExpbnV4IGtlcm5lbCBhbmQgUmFzcGJlcnJ5IFBpXShodHRwczovL2dpdGh1
Yi5jb20vcy1tYXR5dWtldmljaC9yYXNwYmVycnktcGktb3MpCiAgICAgKiBU
aGlzIHByb2plY3QgaXMgbm90IGNvbXBsZXRlZCB5ZXQuCiAgICAgKiBJIGFs
d2F5cyB0aGluayBtYWtpbmcgYSBrZXJuZWwgc2ltaWxhciB0byB0aGUgTGlu
dXgga2VybmVsIGlzIHRoZSBiZXN0IHdheSB0byB1bmRlcnN0YW5kIHRoZSBM
aW51eCBrZXJuZWwuCiAgKiBbQmxvY2sgbGF5ZXIgYW5kIGRldmljZSBkcml2
ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9ndXJ1Z2lvL2Jvb2tfbGludXhrZXJu
ZWxfYmxvY2tkcnYpCiAgICAqIHN0YXJ0IGZyb20gYSBzaW1wbGUgYmxvY2sg
ZGV2aWNlIGRyaXZlciBleGFtcGxlIChSYW1kaXNrKSB3aXRoIG11bHRpLXF1
ZXVlIG1vZGUKICAgICogZ28gZm9yd2FyZCB0byBibG9jayBsYXllcgogICAg
KiBJIGNvbXBsZXRlZCB0cmFuc2xhdGlvbiBpbnRvIEVuZ2xpc2guIFBsZWFz
ZSBzZW5kIG1lIHlvdXIgZmVlZGJhY2suCiAgKiBbbWQgZHJpdmVyIG9mIExp
bnV4IGtlcm5lbChLb3JlYW4pXShodHRwczovL2dpdGh1Yi5jb20vZ3VydWdp
by9ib29rX2xpbnV4a2VybmVsX21kKQogICAgKiBob3cgbWRhZG0gdG9vbCB3
b3JrcyBhbmQgaG93IGl0IGNhbGxzIG1kIGRyaXZlcgogICAgKiBob3cgbWQg
ZHJpdmVyIHdvcmtzCgojIyMjIDxhIG5hbWU9IlJlZmVyZW5jZXMiPjwvYT5S
ZWZlcmVuY2VzCgpDaGVjayB3aGVuIHlvdSBuZWVkIHNvbWV0aGluZwoKKiBb
RnJlZS1lbGVjdHJvbnMgaG9tZXBhZ2VdKGh0dHA6Ly9mcmVlLWVsZWN0cm9u
cy5jb20vZG9jcy8pCiAgKiBtYW55IHNsaWRlIGZpbGVzIGludHJvZHVjaW5n
IGdvb2QgdG9waWNzLCBzcGVjaWFsbHkgQVJNLWxpbnV4CiogW0p1bGlhIEV2
YW5zJ3MgcG9zdGluZzogWW91IGNhbiBiZSBhIGtlcm5lbCBoYWNrZXIhXSho
dHRwOi8vanZucy5jYS9ibG9nLzIwMTQvMDkvMTgveW91LWNhbi1iZS1hLWtl
cm5lbC1oYWNrZXIvKQogICogZ3VpZGUgdG8gc3RhcnQga2VybmVsIHByb2dy
YW1taW5nCgojIyMgPGEgbmFtZT0iT3RoZXItYXBwbGljYXRpb25zIj48L2E+
T3RoZXIgYXBwbGljYXRpb24KClllcywgeW91IG1pZ2h0IG5vdCBiZSBpbnRl
cmVzdGVkIGluIExpbnV4IG9yIGZpcm13YXJlLiBJZiBzbywgeW91IGNhbiBm
aW5kIG90aGVyIGFwcGxpY2F0aW9uczoKKiBXaW5kb3dzIHN5c3RlbXMgcHJv
Z3JhbW1pbmcgJiBkZXZpY2UgZHJpdmVycwoqIFNlY3VyaXR5CiogUmV2ZXJz
ZSBlbmdpbmVlcmluZwoKSSBkb24ndCBoYXZlIGFueSBrbm93bGVkZ2UgYWJv
dXQgdGhvc2UgYXBwbGljYXRpb25zLiBQbGVhc2Ugc2VuZCBtZSBhbnkgaW5m
b3JtYXRpb24gZm9yIGJlZ2lubmVycy4KCioqS2VybmVscyBhbmQgZHJpdmVy
cyBhcmUgbm90IGFsbCBvZiBsb3ctbGV2ZWwgcHJvZ3JhbW1pbmcuKiogT25l
IG1vcmUgaW1wb3J0YW50IGFwcGxpY2F0aW9uIG9mIGxvdy1sZXZlbCBwcm9n
cmFtbWluZyBpcyB0aGUgc29mdHdhcmUtZGVmaW5lZCBzdG9yYWdlIG9yIGRp
c3RyaWJ1dGVkIGZpbGVzeXN0ZW0uIERldGFpbGVkIGRlc2NyaXB0aW9ucyBv
ZiB0aGVtIGlzIGJleW9uZCB0aGUgc2NvcGUgb2YgdGhpcyBkb2N1bWVudCBi
dXQgdGhlcmUgaXMgYW4gZXhjZWxsZW50IGNvdXJzZSB3aGVyZSB5b3UgY2Fu
IHRyeSBhIHNpbXBsZSBkaXN0cmlidXRlZCBmaWxlc3lzdGVtLgoqIENvdXJz
ZTogaHR0cHM6Ly9wZG9zLmNzYWlsLm1pdC5lZHUvYXJjaGl2ZS82LjgyNC0y
MDEyLwoqIHJlZmVyZW5jZSBTb3VyY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9z
cm5lZC95ZnMKCiMjIDxhIG5hbWU9IkZ1dHVyZS1vZi1sb3ctbGV2ZWwtcHJv
Z3JhbW1pbmciPjwvYT5GdXR1cmUgb2YgbG93LWxldmVsIHByb2dyYW1taW5n
CgpJIGRvIG5vdCBrbm93IHRoZSBmdXR1cmUsIGJ1dCBJIGtlZXAgbXkgZXll
IG9uIFJVU1QuCiogaHR0cHM6Ly9oYWNrcy5tb3ppbGxhLm9yZy8yMDE2LzEx
L3J1c3QtYW5kLXRoZS1mdXR1cmUtb2Ytc3lzdGVtcy1wcm9ncmFtbWluZy8K
CklmIEkgY291bGQgaGF2ZSBvbmUgd2VlayBmcmVlIGFuZCBhbG9uZSwgSSB3
b3VsZCBsZWFybiBSVVNULgpUaGF0IGlzIGJlY2F1c2UgUlVTVCBpcyB0aGUg
bGF0ZXN0IGxhbmd1YWdlIHdpdGggd2hpY2ggSSBjYW4gZGV2ZWxvcCBMaW51
eCBkZXZpY2UgZHJpdmVycy4KKiBodHRwczovL2dpdGh1Yi5jb20vdHNnYXRl
cy9ydXN0LmtvCgpJb1QgaXMgbmV3IHRyZW5kLCBzbyBpdCdzIHdvcnRoIHRv
IGNoZWNrIHdoYXQgT1NzIGFyZSBmb3IgSW9ULgpBUk0sIFNhbXN1bmcgYW5k
IHNvbWUgY29tcGFuaWVzIGhhcyB0aGVpciBvd24gcmVhbHRpbWUgT1MgYnV0
IHNhZGx5IG1hbnkgb2YgdGhlbSBhcmUgY2xvc2VkIHNvdXJjZS4KQnV0IExp
bnV4IEZvdW5kYXRpb24gYWxzbyBoYXMgYSBzb2x1dGlvbjogWmVwaHlyCiog
aHR0cHM6Ly93d3cuemVwaHlycHJvamVjdC5vcmcvCgpUeXBpY2FsIGNsb3Vk
IHNlcnZlcnMgaGF2ZSBtYW55IGxheWVyczsgZm9yIGluc3RhbmNlLCBob3N0
IE9TLCBrdm0gZHJpdmVyLCBxZW11IHByb2Nlc3MsIGd1ZXN0IE9TIGFuZCBz
ZXJ2aWNlIGFwcGxpY2F0aW9uLiBBIGNvbnRhaW5lciBoYXMgYmVlbiBkZXZl
bG9wZWQgdG8gcHJvdmlkZSBsaWdodCB2aXJ0dWFsaXphdGlvbi4gSW4gdGhl
IG5lYXIgZnV0dXJlLCBhIG5ldyBjb25jZXB0IG9mIE9TLCBhIHNvLWNhbGxl
ZCBsaWJyYXJ5IE9TIG9yIFVuaWtlcm5lbCwgd291bGQgcmVwbGFjZSB0aGUg
dHlwaWNhbCBzdGFjayBvZiBTVyBmb3IgdmlydHVhbGl6YXRpb24uCiogaHR0
cDovL3VuaWtlcm5lbC5vcmcvCgpCaWcgZGF0YSBhbmQgY2xvdWQgY29tcHV0
aW5nIHJlcXVpcmUgYmlnZ2VyIGFuZCBiaWdnZXIgc3RvcmFnZS4gU29tZSBk
aXNrcyBkaXJlY3RseSBhdHRhY2hlZCB0byBzZXJ2ZXIgbWFjaGluZXMgY2Fu
bm90IHNhdGlzZnkgdGhlIHJlcXVpcmVkIGNhcGFjaXR5LCBzdGFiaWxpdHkg
YW5kIHBlcmZvcm1hbmNlLiBUaGVyZWZvcmUgdGhlcmUgaGFzIGJlZW4gcmVz
ZWFyY2ggdG8gbWFrZSBodWdlIHN0b3JhZ2Ugc3lzdGVtcyB3aXRoIG1hbnkg
c3RvcmFnZSBtYWNoaW5lcyBjb25uZWN0ZWQgYnkgYSBoaWdoIHNwZWVkIG5l
dHdvcmsuIEl0IHVzZWQgdG8gYmUgZm9jdXNlZCBvbiBtYWtpbmcgb25lIGh1
Z2Ugc3RvcmFnZSB2b2x1bWUuIEJ1dCBjdXJyZW50bHkgdGhleSBhcmUgcHJv
dmlkaW5nIG1hbnkgdm9sdW1lcyBkZWRpY2F0ZWQgZm9yIG1hbnkgdmlydHVh
bCBtYWNoaW5lcy4KKiBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9T
b2Z0d2FyZS1kZWZpbmVkX3N0b3JhZ2UKKiBodHRwczovL2VuLndpa2lwZWRp
YS5vcmcvd2lraS9DbHVzdGVyZWRfZmlsZV9zeXN0ZW0KKiBodHRwczovL2Vu
Lndpa2lwZWRpYS5vcmcvd2lraS9DZXBoXyhzb2Z0d2FyZSkKCiMjIDxhIG5h
bWU9Ikhvdy10by1zdGFydCI+PC9hPkhvdyB0byBzdGFydD8KCkkgcmVjZWl2
ZWQgYW4gZW1haWwgdG8gYXNrIGhvdyB0byBzdGFydC4gVGhlcmUgYXJlIG1h
bnkgaW5mb3JtYXRpb24gYWJvdXQgYm9va3MsIGNvdXJzZXMgYW5kIHByb2pl
Y3RzIGluIHRoaXMgcGFnZS4gSXQgaXMgbXkgbWlzdGFrZSB0byBmb3JnZXQg
dG8gd3JpdGUgaG93IHRvIHN0YXJ0LiBVbmZvcnR1bmF0ZWx5IHRoZXJlIGlz
IG5vIEtpbmcncyBSb2FkIHRvIFtLaW5nJ3MgTGFuZGluZ10oaHR0cHM6Ly9n
YW1lb2Z0aHJvbmVzLmZhbmRvbS5jb20vd2lraS9LaW5nJTI3c19MYW5kaW5n
KS4gSSB3aWxsIGp1c3Qgd3JpdGUgd2hhdCBJIGRpZCBpbiBvcmRlci4gSWYg
eW91IGhhdmUgYWxyZWFkeSBkb25lIHNvbWV0aGluZywgcGxlYXNlIHNraXAg
aXQuIEFHQUlOLCB0aGlzIGlzIGp1c3QgYW4gZXhhbXBsZSB0aGF0IHlvdSBj
b3VsZCBkbyBpbiBvcmRlciwganVzdCBpbiBjYXNlIGlmIHlvdSBkbyBub3Qg
a25vdyBob3cgdG8gc3RhcnQgb3Igd2hhdCB0byBkby4KCiogUmVhZGluZyBP
UyB0aGVvcnkgYm9va3M6IGF0IGxlYXN0ICJUaGUgRGVzaWduIG9mIHRoZSBV
TklYIE9wZXJhdGluZyBTeXN0ZW0gYnkgTWF1cmljZSBKLiBCYWNoIgoqIExl
YXJuIGFzc2VtYmx5IGFuZCBDCiAgKiBbODA4NiBhc3NlbWJseSBwcm9ncmFt
bWluZyB3aXRoIGVtdTgwODZdKGh0dHBzOi8vZ2l0aHViLmNvbS9ndXJ1Z2lv
L2Jvb2tfYXNzZW1ibHlfODA4NikKICAgICogSXQgaXMgZW5vdWdoIGlmIHlv
dSB1bmRlcnN0YW5kIHRoZSBjb25jZXB0IG9mIGFzc2VtYmx5IHByb2dyYW1t
aW5nLiBZb3UgZG8gbm90IG5lZWQgdG8gZG8gc29tZXRoaW5nIHByYWN0aWNh
bC4KICAqIFtUaGUgQyBQcm9ncmFtbWluZyBMYW5ndWFnZSAybmQgRWRpdGlv
bl0oaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9Qcm9ncmFtbWluZy1MYW5ndWFn
ZS1Ccmlhbi1XLUtlcm5pZ2hhbi9kcC8wMTMxMTAzNjI4L3JlZj1wZF9zYnNf
MTRfdF8wP19lbmNvZGluZz1VVEY4JnBzYz0xJnJlZlJJRD02MFIxRDJDSEJB
OERIWVQ2Sk5NTikKICAgICogRE8gWU9VUiBCRVNUIFRPIHNvbHZlIGV2ZXJ5
IHNpbmdsZSBleGVyY2lzZXMhCiAgKiBbQyBQcm9ncmFtbWluZzogQSBNb2Rl
cm4gQXBwcm9hY2gsIDJuZCBFZGl0aW9uXShodHRwczovL3d3dy5hbWF6b24u
Y29tL0MtUHJvZ3JhbW1pbmctTW9kZXJuLUFwcHJvYWNoLTJuZC9kcC8wMzkz
OTc5NTA0KQoqIERvIHNvbWV0aGluZyBwcmFjdGljYWwgd2l0aCBDCiAgKiBb
QyBQcm9qZWN0IEJhc2VkIFR1dG9yaWFscz9dKGh0dHBzOi8vd3d3LnJlZGRp
dC5jb20vci9DX1Byb2dyYW1taW5nL2NvbW1lbnRzLzg3MnJsdC9jX3Byb2pl
Y3RfYmFzZWRfdHV0b3JpYWxzLyk6IEZpbmQgb25lIG9yIHR3byBpbnRlcmVz
dGluZyBwcm9qZWN0cyBhbmQgbWFrZSB5b3VyIG93biBwcm9qZWN0LgogICog
W2xlZXRjb2RlLmNvbV0oaHR0cHM6Ly9sZWV0Y29kZS5jb20vKTogSWYgeW91
IGNhbm5vdCBmaW5kIGFuIGludGVyZXN0aW5nIHByb2plY3QsIGl0IHdvdWxk
IGJlIGFsc28gZ29vZCB0byBmb2N1cyBvbiBkYXRhLXN0cnVjdHVyZSBhbmQg
YWxnb3JpdGhtLgoqIERvIGEgaGFyZHdhcmUgcHJvamVjdAogICogUmFzcGJl
cnJ5cGkgb3IgQXJkdWlubyBkb2VzIG5vdCBtYXR0ZXIuIFlvdSBuZWVkIGEg
ZXhwZXJpZW5jZSB0byBjb250cm9sIGEgaGFyZHdhcmUgZGlyZWN0bHkgd2l0
aCBvbmx5IEMuIE9OTFkgQyEKICAqIEkgcmVjb21tZW5kIHRvIGJ1eSBhIEF0
bWVnYTEyOCBraXQgYW5kIG1ha2UgYSBmaXJtd2FyZSB0byB0dXJuIG9uL29m
ZiBMRURzLCBkZXRlY3Qgc3dpdGNoIGlucHV0IGFuZCBkaXNwbGF5IG1lc3Nh
Z2Ugb24gdGhlIHRleHQgTENELiBNb3RvciBjb250cm9sIHByb2dyYW0gaXMg
YWxzbyBhIHZlcnkgZ29vZCBwcm9qZWN0OiBmb3IgaW5zdGFuY2UsIHRoZSBs
aW5lIHRyYWNlci4KICAqIERPIE5PVCB1c2UgYW55IGxpYnJhcnkuIFlvdSBz
aG91bGQgbWFrZSBldmVyeXRoaW5nIG9uIHlvdXIgb3duLCBleGNlcHQgcHJv
Z3JhbSBkb3dubG9hZGVyLgoqIEJhc2ljIG9mIHRoZSBMaW51eCBrZXJuZWwK
ICAqIExvdy1sZXZlbCBwcm9ncmFtbWluZyBpcyB2ZXJ5IGNsb3NlIHRvIHRo
ZSBvcGVyYXRpbmcgc3lzdGVtLiBZb3Ugc2hvdWxkIGtub3cgaW5zaWRlIG9m
IHRoZSBPUy4KICAqIFN0YXJ0IHdpdGggZHJpdmVycwogICAgKiBSZWFkIFtM
aW51eCBEZXZpY2UgRHJpdmVyc10oaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9M
aW51eC1EZXZpY2UtRHJpdmVycy1Kb25hdGhhbi1Db3JiZXQvZHAvMDU5NjAw
NTkwMy9yZWY9c3JfMV80P2llPVVURjgmcWlkPTE0ODM2NTA3MTImc3I9OC00
JmtleXdvcmRzPXVuZGVyc3RhbmRpbmcrbGludXgra2VybmVsKQogICAgKiBb
TGludXggZGV2aWNlIGRyaXZlciBsYWJzXShodHRwczovL2xpbnV4LWtlcm5l
bC1sYWJzLmdpdGh1Yi5pby8pCiAgICAqIFtUaGUgRXVkeXB0dWxhIENoYWxs
ZW5nZV0oaHR0cDovL2V1ZHlwdHVsYS1jaGFsbGVuZ2Uub3JnLykKICAqIFJl
YWQgW0xpbnV4IEtlcm5lbCBEZXZlbG9wbWVudF0oaHR0cHM6Ly93d3cuYW1h
em9uLmNvbS9MaW51eC1LZXJuZWwtRGV2ZWxvcG1lbnQtUm9iZXJ0LUxvdmUv
ZHAvMDY3MjMyOTQ2OC9yZWY9c3JfMV8yP2llPVVURjgmcWlkPTE0ODM2NTA3
MTImc3I9OC0yJmtleXdvcmRzPXVuZGVyc3RhbmRpbmcrbGludXgra2VybmVs
KSB0byB1bmRlcnN0YW5kIHRoZSBpbnRlcm5hbCBvZiBMaW51eCBrZXJuZWwu
CiogR28gdG8gdGhlIHByb2Zlc3Npb25hbCBmaWVsZAogICogSWYgeW91IHdh
bnQgdG8gYmUgcHJvZmVzc2lvbmFsIExpbnV4IEtlcm5lbCBEZXZlbG9wZXIK
ICAgICogbXVzdCByZWFkIFtVbmRlcnN0YW5kaW5nIHRoZSBMaW51eCBLZXJu
ZWxdKGh0dHBzOi8vd3d3LmFtYXpvbi5jb20vVW5kZXJzdGFuZGluZy1MaW51
eC1LZXJuZWwtVGhpcmQtRGFuaWVsL2RwLzA1OTYwMDU2NTIvcmVmPXNyXzFf
MT9pZT1VVEY4JnFpZD0xNDgzNjUwNzEyJnNyPTgtMSZrZXl3b3Jkcz11bmRl
cnN0YW5kaW5nK2xpbnV4K2tlcm5lbCkKICAgICAgKiBUaGVuIHRyeSB0byBt
YWtlIGEgdG95IGtlcm5lbAogICAgICAqIFtMZWFybmluZyBvcGVyYXRpbmcg
c3lzdGVtIGRldmVsb3BtZW50IHVzaW5nIExpbnV4IGtlcm5lbCBhbmQgUmFz
cGJlcnJ5IFBpXShodHRwczovL2dpdGh1Yi5jb20vcy1tYXR5dWtldmljaC9y
YXNwYmVycnktcGktb3MpCiAgICAgICogW01ha2luZyB5b3VyIG93biBrZXJu
ZWxdKGh0dHA6Ly93aWtpLm9zZGV2Lm9yZy9HZXR0aW5nX1N0YXJ0ZWQpCiAg
ICAqIENoZWNrIHRoZSBsYXRlc3QgaXNzdWVzIGF0IGh0dHBzOi8vbHduLm5l
dC8gYW5kIGpvaW4gaXQuCiAgKiBPciBmaW5kIGFub3RoZXIgdG9waWNzCgoj
IDxhIG5hbWU9IlRyYW5zbGF0aW9uIj48L2E+VHJhbnNsYXRpb24KClBsZWFz
ZSBzZW5kIG1lIHRoZSBwdWxsIHJlcXVlc3QgaWYgeW91J2QgbGlrZSB0byB0
cmFuc2xhdGUgdGhpcyBwYWdlLiBJJ2xsIGxpc3QgaXQgaGVyZS4KCiogW0No
aW5lc2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9ndXJ1Z2lvL2xvd2xldmVscHJv
Z3JhbW1pbmctdW5pdmVyc2l0eS9ibG9iL21hc3Rlci9SRUFETUVfY24ubWQp
CiogW1BvcnR1Z3Vlc2UgKEJyYXppbGlhbildKGh0dHBzOi8vZ2l0aHViLmNv
bS9ndXJ1Z2lvL2xvd2xldmVscHJvZ3JhbW1pbmctdW5pdmVyc2l0eS9ibG9i
L21hc3Rlci9SRUFETUVfcHQubWQpCiogW0l0YWxpYW5dKGh0dHBzOi8vZ2l0
aHViLmNvbS9ndXJ1Z2lvL2xvd2xldmVscHJvZ3JhbW1pbmctdW5pdmVyc2l0
eS9ibG9iL21hc3Rlci9SRUFETUVfaXQubWQpCiogW0N6ZWNoXShodHRwczov
L2dpdGh1Yi5jb20vZ3VydWdpby9sb3dsZXZlbHByb2dyYW1taW5nLXVuaXZl
cnNpdHkvYmxvYi9tYXN0ZXIvUkVBRE1FX2N6Lm1kKQoqIFtSdXNzaWFuXSho
dHRwczovL2dpdGh1Yi5jb20vZ3VydWdpby9sb3dsZXZlbHByb2dyYW1taW5n
LXVuaXZlcnNpdHkvYmxvYi9tYXN0ZXIvUkVBRE1FX3J1Lm1kKQoKIyA8YSBu
YW1lPSJ3aG8tYW0taSI+PC9hPldobyBhbSBJPwoKSSdtIGluc3BpcmVkIGJ5
IFtnb29nbGUtaW50ZXJ2aWV3LXVuaXZlcnNpdHldKGh0dHBzOi8vZ2l0aHVi
LmNvbS9qd2FzaGFtL2dvb2dsZS1pbnRlcnZpZXctdW5pdmVyc2l0eSkuIEkn
ZCBsaWtlIHRvIHNoYXJlIG15IGV4cGVyaWVuY2UgYW5kIHNob3cgYSByb2Fk
bWFwIHRvIGJlY29taW5nIGEgbG93LWxldmVsIHByb2dyYW1tZXIgYmVjYXVz
ZSBJIGhhdmUgZm91bmQgdGhhdCB0aGVzZSBza2lsbHMgYXJlIG5vdCBhcyBj
b21tb24gYXMgdGhleSBvbmNlIHdlcmUuIEluIGFkZGl0aW9uLCBtYW55IHN0
dWRlbnRzIGFuZCBiZWdpbm5lcnMgYXNrIG1lIGhvdyB0aGV5IGNvdWxkIGJl
Y29tZSBsb3ctbGV2ZWwgcHJvZ3JhbW1lcnMgYW5kIExpbnV4IGtlcm5lbCBl
bmdpbmVlcnMuCgpGWUksIEkgaGF2ZSBvdmVyIDEwIHllYXJzIG9mIGV4cGVy
aWVuY2UgYXMgYSBsb3ctbGV2ZWwgcHJvZ3JhbW1lcjoKKiA4MHg4NiBBc3Nl
bWJseSBwcm9ncmFtbWluZwoqIEhhcmR3YXJlIGRldmljZSB3aXRoIEF0bWVs
IGNoaXAgYW5kIGZpcm13YXJlCiogQyBsYW5ndWFnZSBzeXN0ZW0gcHJvZ3Jh
bW1pbmcgZm9yIFVuaXgKKiBEZXZpY2UgZHJpdmVyIGluIExpbnV4CiogTGlu
dXgga2VybmVsOiBwYWdlIGFsbG9jYXRpb24KKiBMaW51eCBrZXJuZWw6IGJs
b2NrIGRldmljZSBkcml2ZXIgYW5kIG1kIG1vZHVsZQo=
",,5932,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
