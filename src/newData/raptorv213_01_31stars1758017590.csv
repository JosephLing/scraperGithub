name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'RxSwift',33569135,b'Reactive Programming in Swift',b'Swift',58,17583,,547,False,b'https://api.github.com/repos/ReactiveX/RxSwift/forks',"PGltZyBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9S
ZWFjdGl2ZVgvUnhTd2lmdC9tYXN0ZXIvYXNzZXRzL1J4X0xvZ29fTS5wbmci
IGFsdD0iTWlzcyBFbGVjdHJpYyBFZWwgMjAxNiIgd2lkdGg9IjM2IiBoZWln
aHQ9IjM2Ij4gUnhTd2lmdDogUmVhY3RpdmVYIGZvciBTd2lmdAo9PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoKWyFbVHJhdmlzIENJ
XShodHRwczovL3RyYXZpcy1jaS5vcmcvUmVhY3RpdmVYL1J4U3dpZnQuc3Zn
P2JyYW5jaD1tYXN0ZXIpXShodHRwczovL3RyYXZpcy1jaS5vcmcvUmVhY3Rp
dmVYL1J4U3dpZnQpICFbcGxhdGZvcm1zXShodHRwczovL2ltZy5zaGllbGRz
LmlvL2JhZGdlL3BsYXRmb3Jtcy1pT1MlMjAlN0MlMjBtYWNPUyUyMCU3QyUy
MHR2T1MlMjAlN0MlMjB3YXRjaE9TJTIwJTdDJTIwTGludXgtMzMzMzMzLnN2
ZykgWyFbcG9kXShodHRwczovL2ltZy5zaGllbGRzLmlvL2NvY29hcG9kcy92
L1J4U3dpZnQuc3ZnKV0oaHR0cHM6Ly9jb2NvYXBvZHMub3JnL3BvZHMvUnhT
d2lmdCkgWyFbQ2FydGhhZ2UgY29tcGF0aWJsZV0oaHR0cHM6Ly9pbWcuc2hp
ZWxkcy5pby9iYWRnZS9DYXJ0aGFnZS1jb21wYXRpYmxlLTRCQzUxRC5zdmc/
c3R5bGU9ZmxhdCldKGh0dHBzOi8vZ2l0aHViLmNvbS9DYXJ0aGFnZS9DYXJ0
aGFnZSkgWyFbU3dpZnQgUGFja2FnZSBNYW5hZ2VyIGNvbXBhdGlibGVdKGh0
dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvU3dpZnQlMjBQYWNrYWdlJTIw
TWFuYWdlci1jb21wYXRpYmxlLWJyaWdodGdyZWVuLnN2ZyldKGh0dHBzOi8v
Z2l0aHViLmNvbS9hcHBsZS9zd2lmdC1wYWNrYWdlLW1hbmFnZXIpCgpSeCBp
cyBhIFtnZW5lcmljIGFic3RyYWN0aW9uIG9mIGNvbXB1dGF0aW9uXShodHRw
czovL3lvdXR1LmJlL2xvb0pjYWVib0JZKSBleHByZXNzZWQgdGhyb3VnaCBg
T2JzZXJ2YWJsZTxFbGVtZW50PmAgaW50ZXJmYWNlLgoKVGhpcyBpcyBhIFN3
aWZ0IHZlcnNpb24gb2YgW1J4XShodHRwczovL2dpdGh1Yi5jb20vUmVhY3Rp
dmUtRXh0ZW5zaW9ucy9SeC5ORVQpLgoKSXQgdHJpZXMgdG8gcG9ydCBhcyBt
YW55IGNvbmNlcHRzIGZyb20gdGhlIG9yaWdpbmFsIHZlcnNpb24gYXMgcG9z
c2libGUsIGJ1dCBzb21lIGNvbmNlcHRzIHdlcmUgYWRhcHRlZCBmb3IgbW9y
ZSBwbGVhc2FudCBhbmQgcGVyZm9ybWFudCBpbnRlZ3JhdGlvbiB3aXRoIGlP
Uy9tYWNPUyBlbnZpcm9ubWVudC4KCkNyb3NzIHBsYXRmb3JtIGRvY3VtZW50
YXRpb24gY2FuIGJlIGZvdW5kIG9uIFtSZWFjdGl2ZVguaW9dKGh0dHA6Ly9y
ZWFjdGl2ZXguaW8vKS4KCkxpa2UgdGhlIG9yaWdpbmFsIFJ4LCBpdHMgaW50
ZW50aW9uIGlzIHRvIGVuYWJsZSBlYXN5IGNvbXBvc2l0aW9uIG9mIGFzeW5j
aHJvbm91cyBvcGVyYXRpb25zIGFuZCBldmVudC9kYXRhIHN0cmVhbXMuCgpL
Vk8gb2JzZXJ2aW5nLCBhc3luYyBvcGVyYXRpb25zIGFuZCBzdHJlYW1zIGFy
ZSBhbGwgdW5pZmllZCB1bmRlciBbYWJzdHJhY3Rpb24gb2Ygc2VxdWVuY2Vd
KERvY3VtZW50YXRpb24vR2V0dGluZ1N0YXJ0ZWQubWQjb2JzZXJ2YWJsZXMt
YWthLXNlcXVlbmNlcykuIFRoaXMgaXMgdGhlIHJlYXNvbiB3aHkgUnggaXMg
c28gc2ltcGxlLCBlbGVnYW50IGFuZCBwb3dlcmZ1bC4KCiMjIEkgY2FtZSBo
ZXJlIGJlY2F1c2UgSSB3YW50IHRvIC4uLgoKIyMjIyMjIC4uLiB1bmRlcnN0
YW5kCgoqIFt3aHkgdXNlIHJ4P10oRG9jdW1lbnRhdGlvbi9XaHkubWQpCiog
W3RoZSBiYXNpY3MsIGdldHRpbmcgc3RhcnRlZCB3aXRoIFJ4U3dpZnRdKERv
Y3VtZW50YXRpb24vR2V0dGluZ1N0YXJ0ZWQubWQpCiogW3RyYWl0c10oRG9j
dW1lbnRhdGlvbi9UcmFpdHMubWQpIC0gd2hhdCBhcmUgYFNpbmdsZWAsIGBD
b21wbGV0YWJsZWAsIGBNYXliZWAsIGBEcml2ZXJgLCBhbmQgYENvbnRyb2xQ
cm9wZXJ0eWAgLi4uIGFuZCB3aHkgZG8gdGhleSBleGlzdD8KKiBbdGVzdGlu
Z10oRG9jdW1lbnRhdGlvbi9Vbml0VGVzdHMubWQpCiogW3RpcHMgYW5kIGNv
bW1vbiBlcnJvcnNdKERvY3VtZW50YXRpb24vVGlwcy5tZCkKKiBbZGVidWdn
aW5nXShEb2N1bWVudGF0aW9uL0dldHRpbmdTdGFydGVkLm1kI2RlYnVnZ2lu
ZykKKiBbdGhlIG1hdGggYmVoaW5kIFJ4XShEb2N1bWVudGF0aW9uL01hdGhC
ZWhpbmRSeC5tZCkKKiBbd2hhdCBhcmUgaG90IGFuZCBjb2xkIG9ic2VydmFi
bGUgc2VxdWVuY2VzP10oRG9jdW1lbnRhdGlvbi9Ib3RBbmRDb2xkT2JzZXJ2
YWJsZXMubWQpCgojIyMjIyMgLi4uIGluc3RhbGwKCiogSW50ZWdyYXRlIFJ4
U3dpZnQvUnhDb2NvYSB3aXRoIG15IGFwcC4gW0luc3RhbGxhdGlvbiBHdWlk
ZV0oI2luc3RhbGxhdGlvbikKCiMjIyMjIyAuLi4gaGFjayBhcm91bmQKCiog
d2l0aCB0aGUgZXhhbXBsZSBhcHAuIFtSdW5uaW5nIEV4YW1wbGUgQXBwXShE
b2N1bWVudGF0aW9uL0V4YW1wbGVBcHAubWQpCiogd2l0aCBvcGVyYXRvcnMg
aW4gcGxheWdyb3VuZHMuIFtQbGF5Z3JvdW5kc10oRG9jdW1lbnRhdGlvbi9Q
bGF5Z3JvdW5kcy5tZCkKCiMjIyMjIyAuLi4gaW50ZXJhY3QKCiogQWxsIG9m
IHRoaXMgaXMgZ3JlYXQsIGJ1dCBpdCB3b3VsZCBiZSBuaWNlIHRvIHRhbGsg
d2l0aCBvdGhlciBwZW9wbGUgdXNpbmcgUnhTd2lmdCBhbmQgZXhjaGFuZ2Ug
ZXhwZXJpZW5jZXMuIDxiciAvPltKb2luIFNsYWNrIENoYW5uZWxdKGh0dHA6
Ly9zbGFjay5yeHN3aWZ0Lm9yZykKKiBSZXBvcnQgYSBwcm9ibGVtIHVzaW5n
IHRoZSBsaWJyYXJ5LiBbT3BlbiBhbiBJc3N1ZSBXaXRoIEJ1ZyBUZW1wbGF0
ZV0oLmdpdGh1Yi9JU1NVRV9URU1QTEFURS5tZCkKKiBSZXF1ZXN0IGEgbmV3
IGZlYXR1cmUuIFtPcGVuIGFuIElzc3VlIFdpdGggRmVhdHVyZSBSZXF1ZXN0
IFRlbXBsYXRlXShEb2N1bWVudGF0aW9uL05ld0ZlYXR1cmVSZXF1ZXN0VGVt
cGxhdGUubWQpCiogSGVscCBvdXQgW0NoZWNrIG91dCBjb250cmlidXRpb24g
Z3VpZGVdKENPTlRSSUJVVElORy5tZCkKCiMjIyMjIyAuLi4gY29tcGFyZQoK
KiBbd2l0aCBvdGhlciBsaWJyYXJpZXNdKERvY3VtZW50YXRpb24vQ29tcGFy
aXNvbldpdGhPdGhlckxpYnJhcmllcy5tZCkuCgojIyMjIyMgLi4uIHVuZGVy
c3RhbmQgdGhlIHN0cnVjdHVyZQoKUnhTd2lmdCBjb21wcmlzZXMgZml2ZSBz
ZXBhcmF0ZSBjb21wb25lbnRzIGRlcGVuZGluZyBvbiBlYWNob3RoZXIgaW4g
dGhlIGZvbGxvd2luZyB3YXk6CgpgYGBub25lCuKUjOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUkCAgICDilIzilIDilIDi
lIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilJAK4pSCICAg
UnhDb2NvYSAgICDilJzilIDilIDilIDilIDilrYgICBSeFJlbGF5ICAgIOKU
ggrilJTilIDilIDilIDilIDilIDilIDilIDilKzilIDilIDilIDilIDilIDi
lIDilJggICAg4pSU4pSA4pSA4pSA4pSA4pSA4pSA4pSs4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSYCiAgICAgICAg4pSCICAgICAgICAgICAgICAgICAg4pSC
ICAgICAgICAK4pSM4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pa84pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pa84pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSQCuKUgiAgICAgICAgICAgICBS
eFN3aWZ0ICAgICAgICAgICAgICDilIIK4pSU4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pay4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pay4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSYCiAg
ICAgICAg4pSCICAgICAgICAgICAgICAgICAg4pSCICAgICAgICAK4pSM4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pS04pSA4pSA4pSA4pSA4pSA4pSA4pSQICAg
IOKUjOKUgOKUgOKUgOKUgOKUgOKUgOKUtOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUkArilIIgICAgUnhUZXN0ICAgIOKUgiAgICDilIIgIFJ4QmxvY2tpbmcg
IOKUggrilJTilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDi
lIDilIDilJggICAg4pSU4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSYCmBgYAoKKiAqKlJ4U3dpZnQqKjogVGhlIGNvcmUg
b2YgUnhTd2lmdCwgcHJvdmlkaW5nIHRoZSBSeCBzdGFuZGFyZCBhcyAobW9z
dGx5KSBkZWZpbmVkIGJ5IFtSZWFjdGl2ZVhdKGh0dHBzOi8vcmVhY3RpdmV4
LmlvKS4gSXQgaGFzIG5vIG90aGVyIGRlcGVuZGVuY2llcy4KKiAqKlJ4Q29j
b2EqKjogUHJvdmlkZXMgQ29jb2Etc3BlY2lmaWMgY2FwYWJpbGl0aWVzIGZv
ciBnZW5lcmFsIGlPUy9tYWNPUy93YXRjaE9TICYgdHZPUyBhcHAgZGV2ZWxv
cG1lbnQsIHN1Y2ggYXMgQmluZGVycywgVHJhaXRzLCBhbmQgbXVjaCBtb3Jl
LiBJdCBkZXBlbmRzIG9uIGJvdGggYFJ4U3dpZnRgIGFuZCBgUnhSZWxheWAu
CiogKipSeFJlbGF5Kio6IFByb3ZpZGVzIGBQdWJsaXNoUmVsYXlgIGFuZCBg
QmVoYXZpb3JSZWxheWAsIHR3byBbc2ltcGxlIHdyYXBwZXJzIGFyb3VuZCBT
dWJqZWN0c10oaHR0cHM6Ly9naXRodWIuY29tL1JlYWN0aXZlWC9SeFN3aWZ0
L2Jsb2IvbWFzdGVyL0RvY3VtZW50YXRpb24vU3ViamVjdHMubWQjcmVsYXlz
KS4gSXQgZGVwZW5kcyBvbiBgUnhTd2lmdGAuIAoqICoqUnhUZXN0KiogYW5k
ICoqUnhCbG9ja2luZyoqOiBQcm92aWRlcyB0ZXN0aW5nIGNhcGFiaWxpdGll
cyBmb3IgUngtYmFzZWQgc3lzdGVtcy4gSXQgZGVwZW5kcyBvbiBgUnhTd2lm
dGAuCgojIyMjIyMgLi4uIGZpbmQgY29tcGF0aWJsZQoKKiBsaWJyYXJpZXMg
ZnJvbSBbUnhTd2lmdENvbW11bml0eV0oaHR0cHM6Ly9naXRodWIuY29tL1J4
U3dpZnRDb21tdW5pdHkpLgoqIFtQb2RzIHVzaW5nIFJ4U3dpZnRdKGh0dHBz
Oi8vY29jb2Fwb2RzLm9yZy8/cT11c2VzJTNBcnhzd2lmdCkuCgojIyMjIyMg
Li4uIHNlZSB0aGUgYnJvYWRlciB2aXNpb24KCiogRG9lcyB0aGlzIGV4aXN0
IGZvciBBbmRyb2lkPyBbUnhKYXZhXShodHRwczovL2dpdGh1Yi5jb20vUmVh
Y3RpdmVYL1J4SmF2YSkKKiBXaGVyZSBpcyBhbGwgb2YgdGhpcyBnb2luZywg
d2hhdCBpcyB0aGUgZnV0dXJlLCB3aGF0IGFib3V0IHJlYWN0aXZlIGFyY2hp
dGVjdHVyZXMsIGhvdyBkbyB5b3UgZGVzaWduIGVudGlyZSBhcHBzIHRoaXMg
d2F5PyBbQ3ljbGUuanNdKGh0dHBzOi8vZ2l0aHViLmNvbS9jeWNsZWpzL2N5
Y2xlLWNvcmUpIC0gdGhpcyBpcyBqYXZhc2NyaXB0LCBidXQgW1J4SlNdKGh0
dHBzOi8vZ2l0aHViLmNvbS9SZWFjdGl2ZS1FeHRlbnNpb25zL1J4SlMpIGlz
IGphdmFzY3JpcHQgdmVyc2lvbiBvZiBSeC4KCiMjIFVzYWdlCgo8dGFibGU+
CiAgPHRyPgogICAgPHRoIHdpZHRoPSIzMCUiPkhlcmUncyBhbiBleGFtcGxl
PC90aD4KICAgIDx0aCB3aWR0aD0iMzAlIj5JbiBBY3Rpb248L3RoPgogIDwv
dHI+CiAgPHRyPgogICAgPHRkPkRlZmluZSBzZWFyY2ggZm9yIEdpdEh1YiBy
ZXBvc2l0b3JpZXMgLi4uPC90ZD4KICAgIDx0aCByb3dzcGFuPSI5Ij48aW1n
IHNyYz0iaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2t6YWhl
ci9yeHN3aWZ0Y29udGVudC9tYXN0ZXIvR2l0aHViU2VhcmNoLmdpZiI+PC90
aD4KICA8L3RyPgogIDx0cj4KICAgIDx0ZD48ZGl2IGNsYXNzPSJoaWdobGln
aHQgaGlnaGxpZ2h0LXNvdXJjZS1zd2lmdCI+PHByZT4KbGV0IHNlYXJjaFJl
c3VsdHMgPSBzZWFyY2hCYXIucngudGV4dC5vckVtcHR5CiAgICAudGhyb3R0
bGUoLm1pbGxpc2Vjb25kcygzMDApLCBzY2hlZHVsZXI6IE1haW5TY2hlZHVs
ZXIuaW5zdGFuY2UpCiAgICAuZGlzdGluY3RVbnRpbENoYW5nZWQoKQogICAg
LmZsYXRNYXBMYXRlc3QgeyBxdWVyeSAtPiBPYnNlcnZhYmxlJmx0O1tSZXBv
c2l0b3J5XSZndDsgaW4KICAgICAgICBpZiBxdWVyeS5pc0VtcHR5IHsKICAg
ICAgICAgICAgcmV0dXJuIC5qdXN0KFtdKQogICAgICAgIH0KICAgICAgICBy
ZXR1cm4gc2VhcmNoR2l0SHViKHF1ZXJ5KQogICAgICAgICAgICAuY2F0Y2hF
cnJvckp1c3RSZXR1cm4oW10pCiAgICB9CiAgICAub2JzZXJ2ZU9uKE1haW5T
Y2hlZHVsZXIuaW5zdGFuY2UpPC9wcmU+PC9kaXY+PC90ZD4KICA8L3RyPgog
IDx0cj4KICAgIDx0ZD4uLi4gdGhlbiBiaW5kIHRoZSByZXN1bHRzIHRvIHlv
dXIgdGFibGV2aWV3PC90ZD4KICA8L3RyPgogIDx0cj4KICAgIDx0ZCB3aWR0
aD0iMzAlIj48ZGl2IGNsYXNzPSJoaWdobGlnaHQgaGlnaGxpZ2h0LXNvdXJj
ZS1zd2lmdCI+PHByZT4Kc2VhcmNoUmVzdWx0cwogICAgLmJpbmQodG86IHRh
YmxlVmlldy5yeC5pdGVtcyhjZWxsSWRlbnRpZmllcjogIkNlbGwiKSkgewog
ICAgICAgIChpbmRleCwgcmVwb3NpdG9yeTogUmVwb3NpdG9yeSwgY2VsbCkg
aW4KICAgICAgICBjZWxsLnRleHRMYWJlbD8udGV4dCA9IHJlcG9zaXRvcnku
bmFtZQogICAgICAgIGNlbGwuZGV0YWlsVGV4dExhYmVsPy50ZXh0ID0gcmVw
b3NpdG9yeS51cmwKICAgIH0KICAgIC5kaXNwb3NlZChieTogZGlzcG9zZUJh
Zyk8L3ByZT48L2Rpdj48L3RkPgogIDwvdHI+CjwvdGFibGU+CgoKIyMgUmVx
dWlyZW1lbnRzCgoqIFhjb2RlIDEwLjIKKiBTd2lmdCA1LjAKCkZvciBYY29k
ZSAxMC4xIGFuZCBiZWxvdywgW3VzZSBSeFN3aWZ0IDQuNV0oaHR0cHM6Ly9n
aXRodWIuY29tL1JlYWN0aXZlWC9SeFN3aWZ0L3JlbGVhc2VzL3RhZy80LjUu
MCkuCgojIyBJbnN0YWxsYXRpb24KClJ4IGRvZXNuJ3QgY29udGFpbiBhbnkg
ZXh0ZXJuYWwgZGVwZW5kZW5jaWVzLgoKVGhlc2UgYXJlIGN1cnJlbnRseSB0
aGUgc3VwcG9ydGVkIG9wdGlvbnM6CgojIyMgTWFudWFsCgpPcGVuIFJ4Lnhj
d29ya3NwYWNlLCBjaG9vc2UgYFJ4RXhhbXBsZWAgYW5kIGhpdCBydW4uIFRo
aXMgbWV0aG9kIHdpbGwgYnVpbGQgZXZlcnl0aGluZyBhbmQgcnVuIHRoZSBz
YW1wbGUgYXBwCgojIyMgW0NvY29hUG9kc10oaHR0cHM6Ly9ndWlkZXMuY29j
b2Fwb2RzLm9yZy91c2luZy91c2luZy1jb2NvYXBvZHMuaHRtbCkKCmBgYHJ1
YnkKIyBQb2RmaWxlCnVzZV9mcmFtZXdvcmtzIQoKdGFyZ2V0ICdZT1VSX1RB
UkdFVF9OQU1FJyBkbwogICAgcG9kICdSeFN3aWZ0JywgJ34+IDUnCiAgICBw
b2QgJ1J4Q29jb2EnLCAnfj4gNScKZW5kCgojIFJ4VGVzdCBhbmQgUnhCbG9j
a2luZyBtYWtlIHRoZSBtb3N0IHNlbnNlIGluIHRoZSBjb250ZXh0IG9mIHVu
aXQvaW50ZWdyYXRpb24gdGVzdHMKdGFyZ2V0ICdZT1VSX1RFU1RJTkdfVEFS
R0VUJyBkbwogICAgcG9kICdSeEJsb2NraW5nJywgJ34+IDUnCiAgICBwb2Qg
J1J4VGVzdCcsICd+PiA1JwplbmQKYGBgCgpSZXBsYWNlIGBZT1VSX1RBUkdF
VF9OQU1FYCBhbmQgdGhlbiwgaW4gdGhlIGBQb2RmaWxlYCBkaXJlY3Rvcnks
IHR5cGU6CgpgYGBiYXNoCiQgcG9kIGluc3RhbGwKYGBgCgojIyMgW0NhcnRo
YWdlXShodHRwczovL2dpdGh1Yi5jb20vQ2FydGhhZ2UvQ2FydGhhZ2UpCgpP
ZmZpY2lhbGx5IHN1cHBvcnRlZDogQ2FydGhhZ2UgMC4zMyBhbmQgdXAuCgpB
ZGQgdGhpcyB0byBgQ2FydGZpbGVgCgpgYGAKZ2l0aHViICJSZWFjdGl2ZVgv
UnhTd2lmdCIgfj4gNS4wCmBgYAoKYGBgYmFzaAokIGNhcnRoYWdlIHVwZGF0
ZQpgYGAKCiMjIyMgQ2FydGhhZ2UgYXMgYSBTdGF0aWMgTGlicmFyeQoKQ2Fy
dGhhZ2UgZGVmYXVsdHMgdG8gYnVpbGRpbmcgUnhTd2lmdCBhcyBhIER5bmFt
aWMgTGlicmFyeS4gCgpJZiB5b3Ugd2lzaCB0byBidWlsZCBSeFN3aWZ0IGFz
IGEgU3RhdGljIExpYnJhcnkgdXNpbmcgQ2FydGhhZ2UgeW91IG1heSB1c2Ug
dGhlIHNjcmlwdCBiZWxvdyB0byBtYW51YWxseSBtb2RpZnkgdGhlIGZyYW1l
d29yayB0eXBlIGJlZm9yZSBidWlsZGluZyB3aXRoIENhcnRoYWdlOgoKYGBg
YmFzaApjYXJ0aGFnZSB1cGRhdGUgUnhTd2lmdCAtLXBsYXRmb3JtIGlPUyAt
LW5vLWJ1aWxkCnNlZCAtaSAtZSAncy9NQUNIX09fVFlQRSA9IG1oX2R5bGli
L01BQ0hfT19UWVBFID0gc3RhdGljbGliL2cnIENhcnRoYWdlL0NoZWNrb3V0
cy9SeFN3aWZ0L1J4Lnhjb2RlcHJvai9wcm9qZWN0LnBieHByb2oKY2FydGhh
Z2UgYnVpbGQgUnhTd2lmdCAtLXBsYXRmb3JtIGlPUwpgYGAKCiMjIyBbU3dp
ZnQgUGFja2FnZSBNYW5hZ2VyXShodHRwczovL2dpdGh1Yi5jb20vYXBwbGUv
c3dpZnQtcGFja2FnZS1tYW5hZ2VyKQoKQ3JlYXRlIGEgYFBhY2thZ2Uuc3dp
ZnRgIGZpbGUuCgpgYGBzd2lmdAovLyBzd2lmdC10b29scy12ZXJzaW9uOjUu
MAoKaW1wb3J0IFBhY2thZ2VEZXNjcmlwdGlvbgoKbGV0IHBhY2thZ2UgPSBQ
YWNrYWdlKAogIG5hbWU6ICJSeFRlc3RQcm9qZWN0IiwKICBkZXBlbmRlbmNp
ZXM6IFsKICAgIC5wYWNrYWdlKHVybDogImh0dHBzOi8vZ2l0aHViLmNvbS9S
ZWFjdGl2ZVgvUnhTd2lmdC5naXQiLCBmcm9tOiAiNS4wLjAiKQogIF0sCiAg
dGFyZ2V0czogWwogICAgLnRhcmdldChuYW1lOiAiUnhUZXN0UHJvamVjdCIs
IGRlcGVuZGVuY2llczogWyJSeFN3aWZ0IiwgIlJ4Q29jb2EiXSkKICBdCikK
YGBgCgpgYGBiYXNoCiQgc3dpZnQgYnVpbGQKYGBgCgpUbyBidWlsZCBvciB0
ZXN0IGEgbW9kdWxlIHdpdGggUnhUZXN0IGRlcGVuZGVuY3ksIHNldCBgVEVT
VD0xYC4KCmBgYGJhc2gKJCBURVNUPTEgc3dpZnQgdGVzdApgYGAKCiMjIyBN
YW51YWxseSB1c2luZyBnaXQgc3VibW9kdWxlcwoKKiBBZGQgUnhTd2lmdCBh
cyBhIHN1Ym1vZHVsZQoKYGBgYmFzaAokIGdpdCBzdWJtb2R1bGUgYWRkIGdp
dEBnaXRodWIuY29tOlJlYWN0aXZlWC9SeFN3aWZ0LmdpdApgYGAKCiogRHJh
ZyBgUngueGNvZGVwcm9qYCBpbnRvIFByb2plY3QgTmF2aWdhdG9yCiogR28g
dG8gYFByb2plY3QgPiBUYXJnZXRzID4gQnVpbGQgUGhhc2VzID4gTGluayBC
aW5hcnkgV2l0aCBMaWJyYXJpZXNgLCBjbGljayBgK2AgYW5kIHNlbGVjdCBg
UnhTd2lmdC1bUGxhdGZvcm1dYCBhbmQgYFJ4Q29jb2EtW1BsYXRmb3JtXWAg
dGFyZ2V0cwoKIyMgUmVmZXJlbmNlcwoKKiBbaHR0cDovL3JlYWN0aXZleC5p
by9dKGh0dHA6Ly9yZWFjdGl2ZXguaW8vKQoqIFtSZWFjdGl2ZSBFeHRlbnNp
b25zIEdpdEh1YiAoR2l0SHViKV0oaHR0cHM6Ly9naXRodWIuY29tL1JlYWN0
aXZlLUV4dGVuc2lvbnMpCiogW1J4U3dpZnQgUmF5V2VuZGVybGljaC5jb20g
Qm9va10oaHR0cHM6Ly9zdG9yZS5yYXl3ZW5kZXJsaWNoLmNvbS9wcm9kdWN0
cy9yeHN3aWZ0LXJlYWN0aXZlLXByb2dyYW1taW5nLXdpdGgtc3dpZnQpCiog
W0JveHVlLmlvIFJ4U3dpZnQgT25saW5lIENvdXJzZV0oaHR0cHM6Ly9ib3h1
ZWlvLmNvbS9zZXJpZXMvcnhzd2lmdC0xMDEpIChDaGluZXNlIPCfh6jwn4ez
KQoqIFtFcmlrIE1laWplciAoV2lraXBlZGlhKV0oaHR0cDovL2VuLndpa2lw
ZWRpYS5vcmcvd2lraS9FcmlrX01laWplcl8lMjhjb21wdXRlcl9zY2llbnRp
c3QlMjkpCiogW0V4cGVydCB0byBFeHBlcnQ6IEJyaWFuIEJlY2ttYW4gYW5k
IEVyaWsgTWVpamVyIC0gSW5zaWRlIHRoZSAuTkVUIFJlYWN0aXZlIEZyYW1l
d29yayAoUngpICh2aWRlbyldKGh0dHBzOi8veW91dHUuYmUvbG9vSmNhZWJv
QlkpCiogW1JlYWN0aXZlIFByb2dyYW1taW5nIE92ZXJ2aWV3IChKYWZhciBI
dXNhaW4gZnJvbSBOZXRmbGl4KV0oaHR0cHM6Ly93d3cueW91dHViZS5jb20v
d2F0Y2g/dj1kd1AxVE5YRTZmYykKKiBbU3ViamVjdC9PYnNlcnZlciBpcyBE
dWFsIHRvIEl0ZXJhdG9yIChwYXBlcildKGh0dHA6Ly9jc2wuc3RhbmZvcmQu
ZWR1L35jaHJpc3Rvcy9wbGRpMjAxMC5maXQvbWVpamVyLmR1YWxpdHkucGRm
KQoqIFtSeCBzdGFuZGFyZCBzZXF1ZW5jZSBvcGVyYXRvcnMgdmlzdWFsaXpl
ZCAodmlzdWFsaXphdGlvbiB0b29sKV0oaHR0cDovL3J4bWFyYmxlcy5jb20v
KQoqIFtIYXNrZWxsXShodHRwczovL3d3dy5oYXNrZWxsLm9yZy8pCg==
",,17583,"bGFuZ3VhZ2U6IG9iamVjdGl2ZS1jCgpvczoKICAgIC0gb3N4Cmxhbmd1YWdl
OiBnZW5lcmljCnN1ZG86IHJlcXVpcmVkCmRpc3Q6IHhlbmlhbApvc3hfaW1h
Z2U6IHhjb2RlMTAuMgoKZW52OgogIC0gREFOR0VSPTEKICAtIFRFU1Q9aU9T
CiAgLSBURVNUPVVuaXgKICAtIFRFU1Q9d2F0Y2hPUwogIC0gVEVTVD10dk9T
CiAgLSBURVNUPWlPUy1FeGFtcGxlCiAgLSBURVNUPVNQTQogIC0gQlVJTEQ9
IlRBUkdFVD1SeFN3aWZ0IFNXSUZUX1ZFUlNJT049NS4wIC4vc2NyaXB0cy92
YWxpZGF0ZS1wb2RzcGVjLnNoIgogIC0gQlVJTEQ9IlRBUkdFVD1SeENvY29h
IFNXSUZUX1ZFUlNJT049NS4wIC4vc2NyaXB0cy92YWxpZGF0ZS1wb2RzcGVj
LnNoIgogIC0gQlVJTEQ9IlRBUkdFVD1SeFJlbGF5IFNXSUZUX1ZFUlNJT049
NS4wIC4vc2NyaXB0cy92YWxpZGF0ZS1wb2RzcGVjLnNoIgogIC0gQlVJTEQ9
IlRBUkdFVD1SeEJsb2NraW5nIFNXSUZUX1ZFUlNJT049NS4wIC4vc2NyaXB0
cy92YWxpZGF0ZS1wb2RzcGVjLnNoIgogIC0gQlVJTEQ9IlRBUkdFVD1SeFRl
c3QgU1dJRlRfVkVSU0lPTj01LjAgLi9zY3JpcHRzL3ZhbGlkYXRlLXBvZHNw
ZWMuc2giCgptYXRyaXg6CiAgICBleGNsdWRlOgogICAgICAtIG9zOiBvc3gK
ICAgICAgICBlbnY6IERBTkdFUj0xCgogICAgaW5jbHVkZToJCiAgICAgIC0g
b3N4X2ltYWdlOgkKICAgICAgICBvczogbGludXgJCiAgICAgICAgZW52OiBU
RVNUPVVuaXggc3dpZnQ9NS4wCgpub3RpZmljYXRpb25zOgogIHNsYWNrOiBy
eHN3aWZ0OjN5a3QyWjYxZjhHa2R2aENaVFlQZHVPTAogIGVtYWlsOiBmYWxz
ZQoKaW5zdGFsbDoKICAtIGlmIFtbIGB1bmFtZWAgPT0gIkxpbnV4IiBdXSA7
IHRoZW4KICAgICAgY3VybCAiaHR0cHM6Ly9zd2lmdC5vcmcvYnVpbGRzL3N3
aWZ0LSR7c3dpZnR9LXJlbGVhc2UvdWJ1bnR1MTYwNC9zd2lmdC0ke3N3aWZ0
fS1SRUxFQVNFL3N3aWZ0LSR7c3dpZnR9LVJFTEVBU0UtdWJ1bnR1MTYuMDQu
dGFyLmd6IiA+IC90bXAvc3dpZnQudGFyLmd6OwogICAgICB0YXIgLXh6ZiAv
dG1wL3N3aWZ0LnRhci5neiAtQyAvdG1wOwogICAgICBleHBvcnQgUEFUSD0i
JHtQQVRIfTovdG1wL3N3aWZ0LSR7c3dpZnR9LVJFTEVBU0UtdWJ1bnR1MTYu
MDQvdXNyL2JpbiI7CiAgICAgIHN3aWZ0IC12ZXJzaW9uOwogICAgZmkKCnNj
cmlwdDoKICAtIGlmIFtbIGB1bmFtZWAgPT0gIlVuaXgiIF1dIDsgdGhlbgog
ICAgICAgIGJyZXcgaW5zdGFsbCBzd2lmdGxpbnQgfHwgdHJ1ZTsKICAgIGZp
CiAgLQogICAgaWYgW1sgISAteiAiJHtCVUlMRH0iIF1dIDsgdGhlbgogICAg
ICBldmFsICJUUkFWSVM9MSAke0JVSUxEfSI7CiAgICBlbHNlCiAgICAgIGlm
IFtbICIke0RBTkdFUn0iIC1lcSAxIF1dIDsgdGhlbgogICAgICAgIGJ1bmRs
ZSBpbnN0YWxsIC0tcGF0aCB2ZW5kb3IvYnVuZGxlOwogICAgICAgIGJ1bmRs
ZSBleGVjIGRhbmdlciAtLXZlcmJvc2U7CiAgICAgIGVsc2UKICAgICAgICBp
ZiBbWyBgdW5hbWVgID09ICJEYXJ3aW4iIF1dIDsgdGhlbgogICAgICAgICAg
eGNvZGVidWlsZCAtdmVyc2lvbjsKICAgICAgICAgIHhjb2RlYnVpbGQgLXNo
b3dzZGtzOwogICAgICAgIGZpOwogICAgICAgIHN3aWZ0IC0tdmVyc2lvbjsK
ICAgICAgICBUUkFWSVM9MSAuL3NjcmlwdHMvYWxsLXRlc3RzLnNoICIke1RF
U1R9IjsKICAgICAgZmk7CiAgICBmaTsKCmFmdGVyX3N1Y2Nlc3M6CiAgLSBz
bGVlcCA1ICMgd29ya2Fyb3VuZCBodHRwczovL2dpdGh1Yi5jb20vdHJhdmlz
LWNpL3RyYXZpcy1jaS9pc3N1ZXMvNDcyNQo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'Masonry',11570469,"b'Harness the power of AutoLayout NSLayoutConstraints with a simplified, chainable and expressive syntax. Supports iOS and OSX Auto Layout'",b'Objective-C',126,17581,,758,False,b'https://api.github.com/repos/SnapKit/Masonry/forks',"IyBNYXNvbnJ5IFshW0J1aWxkIFN0YXR1c10oaHR0cHM6Ly90cmF2aXMtY2ku
b3JnL1NuYXBLaXQvTWFzb25yeS5zdmc/YnJhbmNoPW1hc3RlcildKGh0dHBz
Oi8vdHJhdmlzLWNpLm9yZy9TbmFwS2l0L01hc29ucnkpIFshW0NvdmVyYWdl
IFN0YXR1c10oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9jb3ZlcmFsbHMvU25h
cEtpdC9NYXNvbnJ5LnN2Zz9zdHlsZT1mbGF0LXNxdWFyZSldKGh0dHBzOi8v
Y292ZXJhbGxzLmlvL3IvU25hcEtpdC9NYXNvbnJ5KSBbIVtDYXJ0aGFnZSBj
b21wYXRpYmxlXShodHRwczovL2ltZy5zaGllbGRzLmlvL2JhZGdlL0NhcnRo
YWdlLWNvbXBhdGlibGUtNEJDNTFELnN2Zz9zdHlsZT1mbGF0KV0oaHR0cHM6
Ly9naXRodWIuY29tL0NhcnRoYWdlL0NhcnRoYWdlKSAhW1BvZCBWZXJzaW9u
XShodHRwczovL2ltZy5zaGllbGRzLmlvL2NvY29hcG9kcy92L01hc29ucnku
c3ZnP3N0eWxlPWZsYXQpCgoqKk1hc29ucnkgaXMgc3RpbGwgYWN0aXZlbHkg
bWFpbnRhaW5lZCwgd2UgYXJlIGNvbW1pdHRlZCB0byBmaXhpbmcgYnVncyBh
bmQgbWVyZ2luZyBnb29kIHF1YWxpdHkgUFJzIGZyb20gdGhlIHdpZGVyIGNv
bW11bml0eS4gSG93ZXZlciBpZiB5b3UncmUgdXNpbmcgU3dpZnQgaW4geW91
ciBwcm9qZWN0LCB3ZSByZWNvbW1lbmQgdXNpbmcgW1NuYXBLaXRdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9TbmFwS2l0L1NuYXBLaXQpIGFzIGl0IHByb3ZpZGVz
IGJldHRlciB0eXBlIHNhZmV0eSB3aXRoIGEgc2ltcGxlciBBUEkuKioKCk1h
c29ucnkgaXMgYSBsaWdodC13ZWlnaHQgbGF5b3V0IGZyYW1ld29yayB3aGlj
aCB3cmFwcyBBdXRvTGF5b3V0IHdpdGggYSBuaWNlciBzeW50YXguIE1hc29u
cnkgaGFzIGl0cyBvd24gbGF5b3V0IERTTCB3aGljaCBwcm92aWRlcyBhIGNo
YWluYWJsZSB3YXkgb2YgZGVzY3JpYmluZyB5b3VyIE5TTGF5b3V0Q29uc3Ry
YWludHMgd2hpY2ggcmVzdWx0cyBpbiBsYXlvdXQgY29kZSB0aGF0IGlzIG1v
cmUgY29uY2lzZSBhbmQgcmVhZGFibGUuCk1hc29ucnkgc3VwcG9ydHMgaU9T
IGFuZCBNYWMgT1MgWC4KCkZvciBleGFtcGxlcyB0YWtlIGEgbG9vayBhdCB0
aGUgKipNYXNvbnJ5IGlPUyBFeGFtcGxlcyoqIHByb2plY3QgaW4gdGhlIE1h
c29ucnkgd29ya3NwYWNlLiBZb3Ugd2lsbCBuZWVkIHRvIHJ1biBgcG9kIGlu
c3RhbGxgIGFmdGVyIGRvd25sb2FkaW5nLgoKIyMgV2hhdCdzIHdyb25nIHdp
dGggTlNMYXlvdXRDb25zdHJhaW50cz8KClVuZGVyIHRoZSBob29kIEF1dG8g
TGF5b3V0IGlzIGEgcG93ZXJmdWwgYW5kIGZsZXhpYmxlIHdheSBvZiBvcmdh
bmlzaW5nIGFuZCBsYXlpbmcgb3V0IHlvdXIgdmlld3MuIEhvd2V2ZXIgY3Jl
YXRpbmcgY29uc3RyYWludHMgZnJvbSBjb2RlIGlzIHZlcmJvc2UgYW5kIG5v
dCB2ZXJ5IGRlc2NyaXB0aXZlLgpJbWFnaW5lIGEgc2ltcGxlIGV4YW1wbGUg
aW4gd2hpY2ggeW91IHdhbnQgdG8gaGF2ZSBhIHZpZXcgZmlsbCBpdHMgc3Vw
ZXJ2aWV3IGJ1dCBpbnNldCBieSAxMCBwaXhlbHMgb24gZXZlcnkgc2lkZQpg
YGBvYmotYwpVSVZpZXcgKnN1cGVydmlldyA9IHNlbGYudmlldzsKClVJVmll
dyAqdmlldzEgPSBbW1VJVmlldyBhbGxvY10gaW5pdF07CnZpZXcxLnRyYW5z
bGF0ZXNBdXRvcmVzaXppbmdNYXNrSW50b0NvbnN0cmFpbnRzID0gTk87CnZp
ZXcxLmJhY2tncm91bmRDb2xvciA9IFtVSUNvbG9yIGdyZWVuQ29sb3JdOwpb
c3VwZXJ2aWV3IGFkZFN1YnZpZXc6dmlldzFdOwoKVUlFZGdlSW5zZXRzIHBh
ZGRpbmcgPSBVSUVkZ2VJbnNldHNNYWtlKDEwLCAxMCwgMTAsIDEwKTsKCltz
dXBlcnZpZXcgYWRkQ29uc3RyYWludHM6QFsKCiAgICAvL3ZpZXcxIGNvbnN0
cmFpbnRzCiAgICBbTlNMYXlvdXRDb25zdHJhaW50IGNvbnN0cmFpbnRXaXRo
SXRlbTp2aWV3MQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBh
dHRyaWJ1dGU6TlNMYXlvdXRBdHRyaWJ1dGVUb3AKICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgcmVsYXRlZEJ5Ok5TTGF5b3V0UmVsYXRpb25F
cXVhbAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b0l0
ZW06c3VwZXJ2aWV3CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IGF0dHJpYnV0ZTpOU0xheW91dEF0dHJpYnV0ZVRvcAogICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIG11bHRpcGxpZXI6MS4wCiAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICBjb25zdGFudDpwYWRkaW5nLnRvcF0s
CgogICAgW05TTGF5b3V0Q29uc3RyYWludCBjb25zdHJhaW50V2l0aEl0ZW06
dmlldzEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cmli
dXRlOk5TTGF5b3V0QXR0cmlidXRlTGVmdAogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICByZWxhdGVkQnk6TlNMYXlvdXRSZWxhdGlvbkVxdWFs
CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvSXRlbTpz
dXBlcnZpZXcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0
cmlidXRlOk5TTGF5b3V0QXR0cmlidXRlTGVmdAogICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIG11bHRpcGxpZXI6MS4wCiAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICBjb25zdGFudDpwYWRkaW5nLmxlZnRdLAoK
ICAgIFtOU0xheW91dENvbnN0cmFpbnQgY29uc3RyYWludFdpdGhJdGVtOnZp
ZXcxCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0
ZTpOU0xheW91dEF0dHJpYnV0ZUJvdHRvbQogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICByZWxhdGVkQnk6TlNMYXlvdXRSZWxhdGlvbkVxdWFs
CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvSXRlbTpz
dXBlcnZpZXcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0
cmlidXRlOk5TTGF5b3V0QXR0cmlidXRlQm90dG9tCiAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgbXVsdGlwbGllcjoxLjAKICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIGNvbnN0YW50Oi1wYWRkaW5nLmJvdHRv
bV0sCgogICAgW05TTGF5b3V0Q29uc3RyYWludCBjb25zdHJhaW50V2l0aEl0
ZW06dmlldzEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0
cmlidXRlOk5TTGF5b3V0QXR0cmlidXRlUmlnaHQKICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgcmVsYXRlZEJ5Ok5TTGF5b3V0UmVsYXRpb25F
cXVhbAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b0l0
ZW06c3VwZXJ2aWV3CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IGF0dHJpYnV0ZTpOU0xheW91dEF0dHJpYnV0ZVJpZ2h0CiAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgbXVsdGlwbGllcjoxCiAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICBjb25zdGFudDotcGFkZGluZy5yaWdo
dF0sCgogXV07CmBgYApFdmVuIHdpdGggc3VjaCBhIHNpbXBsZSBleGFtcGxl
IHRoZSBjb2RlIG5lZWRlZCBpcyBxdWl0ZSB2ZXJib3NlIGFuZCBxdWlja2x5
IGJlY29tZXMgdW5yZWFkYWJsZSB3aGVuIHlvdSBoYXZlIG1vcmUgdGhhbiAy
IG9yIDMgdmlld3MuCkFub3RoZXIgb3B0aW9uIGlzIHRvIHVzZSBWaXN1YWwg
Rm9ybWF0IExhbmd1YWdlIChWRkwpLCB3aGljaCBpcyBhIGJpdCBsZXNzIGxv
bmcgd2luZGVkLgpIb3dldmVyIHRoZSBBU0NJSSB0eXBlIHN5bnRheCBoYXMg
aXRzIG93biBwaXRmYWxscyBhbmQgaXRzIGFsc28gYSBiaXQgaGFyZGVyIHRv
IGFuaW1hdGUgYXMgYE5TTGF5b3V0Q29uc3RyYWludCBjb25zdHJhaW50c1dp
dGhWaXN1YWxGb3JtYXQ6YCByZXR1cm5zIGFuIGFycmF5LgoKIyMgUHJlcGFy
ZSB0byBtZWV0IHlvdXIgTWFrZXIhCgpIZXJlcyB0aGUgc2FtZSBjb25zdHJh
aW50cyBjcmVhdGVkIHVzaW5nIE1BU0NvbnN0cmFpbnRNYWtlcgoKYGBgb2Jq
LWMKVUlFZGdlSW5zZXRzIHBhZGRpbmcgPSBVSUVkZ2VJbnNldHNNYWtlKDEw
LCAxMCwgMTAsIDEwKTsKClt2aWV3MSBtYXNfbWFrZUNvbnN0cmFpbnRzOl4o
TUFTQ29uc3RyYWludE1ha2VyICptYWtlKSB7CiAgICBtYWtlLnRvcC5lcXVh
bFRvKHN1cGVydmlldy5tYXNfdG9wKS53aXRoLm9mZnNldChwYWRkaW5nLnRv
cCk7IC8vd2l0aCBpcyBhbiBvcHRpb25hbCBzZW1hbnRpYyBmaWxsZXIKICAg
IG1ha2UubGVmdC5lcXVhbFRvKHN1cGVydmlldy5tYXNfbGVmdCkud2l0aC5v
ZmZzZXQocGFkZGluZy5sZWZ0KTsKICAgIG1ha2UuYm90dG9tLmVxdWFsVG8o
c3VwZXJ2aWV3Lm1hc19ib3R0b20pLndpdGgub2Zmc2V0KC1wYWRkaW5nLmJv
dHRvbSk7CiAgICBtYWtlLnJpZ2h0LmVxdWFsVG8oc3VwZXJ2aWV3Lm1hc19y
aWdodCkud2l0aC5vZmZzZXQoLXBhZGRpbmcucmlnaHQpOwp9XTsKYGBgCk9y
IGV2ZW4gc2hvcnRlcgoKYGBgb2JqLWMKW3ZpZXcxIG1hc19tYWtlQ29uc3Ry
YWludHM6XihNQVNDb25zdHJhaW50TWFrZXIgKm1ha2UpIHsKICAgIG1ha2Uu
ZWRnZXMuZXF1YWxUbyhzdXBlcnZpZXcpLndpdGguaW5zZXRzKHBhZGRpbmcp
Owp9XTsKYGBgCgpBbHNvIG5vdGUgaW4gdGhlIGZpcnN0IGV4YW1wbGUgd2Ug
aGFkIHRvIGFkZCB0aGUgY29uc3RyYWludHMgdG8gdGhlIHN1cGVydmlldyBg
W3N1cGVydmlldyBhZGRDb25zdHJhaW50czouLi5gLgpNYXNvbnJ5IGhvd2V2
ZXIgd2lsbCBhdXRvbWFnaWNhbGx5IGFkZCBjb25zdHJhaW50cyB0byB0aGUg
YXBwcm9wcmlhdGUgdmlldy4KCk1hc29ucnkgd2lsbCBhbHNvIGNhbGwgYHZp
ZXcxLnRyYW5zbGF0ZXNBdXRvcmVzaXppbmdNYXNrSW50b0NvbnN0cmFpbnRz
ID0gTk87YCBmb3IgeW91LgoKIyMgTm90IGFsbCB0aGluZ3MgYXJlIGNyZWF0
ZWQgZXF1YWwKCj4gYC5lcXVhbFRvYCBlcXVpdmFsZW50IHRvICoqTlNMYXlv
dXRSZWxhdGlvbkVxdWFsKioKCj4gYC5sZXNzVGhhbk9yRXF1YWxUb2AgZXF1
aXZhbGVudCB0byAqKk5TTGF5b3V0UmVsYXRpb25MZXNzVGhhbk9yRXF1YWwq
KgoKPiBgLmdyZWF0ZXJUaGFuT3JFcXVhbFRvYCBlcXVpdmFsZW50IHRvICoq
TlNMYXlvdXRSZWxhdGlvbkdyZWF0ZXJUaGFuT3JFcXVhbCoqCgpUaGVzZSB0
aHJlZSBlcXVhbGl0eSBjb25zdHJhaW50cyBhY2NlcHQgb25lIGFyZ3VtZW50
IHdoaWNoIGNhbiBiZSBhbnkgb2YgdGhlIGZvbGxvd2luZzoKCiMjIyMgMS4g
TUFTVmlld0F0dHJpYnV0ZQoKYGBgb2JqLWMKbWFrZS5jZW50ZXJYLmxlc3NU
aGFuT3JFcXVhbFRvKHZpZXcyLm1hc19sZWZ0KTsKYGBgCgpNQVNWaWV3QXR0
cmlidXRlICAgICAgICAgICB8ICBOU0xheW91dEF0dHJpYnV0ZQotLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tICB8ICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLQp2aWV3Lm1hc19sZWZ0ICAgICAgICAgICAgICB8ICBOU0xheW91dEF0
dHJpYnV0ZUxlZnQKdmlldy5tYXNfcmlnaHQgICAgICAgICAgICAgfCAgTlNM
YXlvdXRBdHRyaWJ1dGVSaWdodAp2aWV3Lm1hc190b3AgICAgICAgICAgICAg
ICB8ICBOU0xheW91dEF0dHJpYnV0ZVRvcAp2aWV3Lm1hc19ib3R0b20gICAg
ICAgICAgICB8ICBOU0xheW91dEF0dHJpYnV0ZUJvdHRvbQp2aWV3Lm1hc19s
ZWFkaW5nICAgICAgICAgICB8ICBOU0xheW91dEF0dHJpYnV0ZUxlYWRpbmcK
dmlldy5tYXNfdHJhaWxpbmcgICAgICAgICAgfCAgTlNMYXlvdXRBdHRyaWJ1
dGVUcmFpbGluZwp2aWV3Lm1hc193aWR0aCAgICAgICAgICAgICB8ICBOU0xh
eW91dEF0dHJpYnV0ZVdpZHRoCnZpZXcubWFzX2hlaWdodCAgICAgICAgICAg
IHwgIE5TTGF5b3V0QXR0cmlidXRlSGVpZ2h0CnZpZXcubWFzX2NlbnRlclgg
ICAgICAgICAgIHwgIE5TTGF5b3V0QXR0cmlidXRlQ2VudGVyWAp2aWV3Lm1h
c19jZW50ZXJZICAgICAgICAgICB8ICBOU0xheW91dEF0dHJpYnV0ZUNlbnRl
clkKdmlldy5tYXNfYmFzZWxpbmUgICAgICAgICAgfCAgTlNMYXlvdXRBdHRy
aWJ1dGVCYXNlbGluZQoKIyMjIyAyLiBVSVZpZXcvTlNWaWV3CgppZiB5b3Ug
d2FudCB2aWV3LmxlZnQgdG8gYmUgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRv
IGxhYmVsLmxlZnQgOgpgYGBvYmotYwovL3RoZXNlIHR3byBjb25zdHJhaW50
cyBhcmUgZXhhY3RseSB0aGUgc2FtZQptYWtlLmxlZnQuZ3JlYXRlclRoYW5P
ckVxdWFsVG8obGFiZWwpOwptYWtlLmxlZnQuZ3JlYXRlclRoYW5PckVxdWFs
VG8obGFiZWwubWFzX2xlZnQpOwpgYGAKCiMjIyMgMy4gTlNOdW1iZXIKCkF1
dG8gTGF5b3V0IGFsbG93cyB3aWR0aCBhbmQgaGVpZ2h0IHRvIGJlIHNldCB0
byBjb25zdGFudCB2YWx1ZXMuCmlmIHlvdSB3YW50IHRvIHNldCB2aWV3IHRv
IGhhdmUgYSBtaW5pbXVtIGFuZCBtYXhpbXVtIHdpZHRoIHlvdSBjb3VsZCBw
YXNzIGEgbnVtYmVyIHRvIHRoZSBlcXVhbGl0eSBibG9ja3M6CmBgYG9iai1j
Ci8vd2lkdGggPj0gMjAwICYmIHdpZHRoIDw9IDQwMAptYWtlLndpZHRoLmdy
ZWF0ZXJUaGFuT3JFcXVhbFRvKEAyMDApOwptYWtlLndpZHRoLmxlc3NUaGFu
T3JFcXVhbFRvKEA0MDApCmBgYAoKSG93ZXZlciBBdXRvIExheW91dCBkb2Vz
IG5vdCBhbGxvdyBhbGlnbm1lbnQgYXR0cmlidXRlcyBzdWNoIGFzIGxlZnQs
IHJpZ2h0LCBjZW50ZXJZIGV0YyB0byBiZSBzZXQgdG8gY29uc3RhbnQgdmFs
dWVzLgpTbyBpZiB5b3UgcGFzcyBhIE5TTnVtYmVyIGZvciB0aGVzZSBhdHRy
aWJ1dGVzIE1hc29ucnkgd2lsbCB0dXJuIHRoZXNlIGludG8gY29uc3RyYWlu
dHMgcmVsYXRpdmUgdG8gdGhlIHZpZXcmcnNxdW87cyBzdXBlcnZpZXcgaWU6
CmBgYG9iai1jCi8vY3JlYXRlcyB2aWV3LmxlZnQgPSB2aWV3LnN1cGVydmll
dy5sZWZ0ICsgMTAKbWFrZS5sZWZ0Lmxlc3NUaGFuT3JFcXVhbFRvKEAxMCkK
YGBgCgpJbnN0ZWFkIG9mIHVzaW5nIE5TTnVtYmVyLCB5b3UgY2FuIHVzZSBw
cmltaXRpdmVzIGFuZCBzdHJ1Y3RzIHRvIGJ1aWxkIHlvdXIgY29uc3RyYWlu
dHMsIGxpa2Ugc286CmBgYG9iai1jCm1ha2UudG9wLm1hc19lcXVhbFRvKDQy
KTsKbWFrZS5oZWlnaHQubWFzX2VxdWFsVG8oMjApOwptYWtlLnNpemUubWFz
X2VxdWFsVG8oQ0dTaXplTWFrZSg1MCwgMTAwKSk7Cm1ha2UuZWRnZXMubWFz
X2VxdWFsVG8oVUlFZGdlSW5zZXRzTWFrZSgxMCwgMCwgMTAsIDApKTsKbWFr
ZS5sZWZ0Lm1hc19lcXVhbFRvKHZpZXcpLm1hc19vZmZzZXQoVUlFZGdlSW5z
ZXRzTWFrZSgxMCwgMCwgMTAsIDApKTsKYGBgCgpCeSBkZWZhdWx0LCBtYWNy
b3Mgd2hpY2ggc3VwcG9ydCBbYXV0b2JveGluZ10oaHR0cHM6Ly9lbi53aWtp
cGVkaWEub3JnL3dpa2kvQXV0b2JveGluZyNBdXRvYm94aW5nKSBhcmUgcHJl
Zml4ZWQgd2l0aCBgbWFzX2AuIFVucHJlZml4ZWQgdmVyc2lvbnMgYXJlIGF2
YWlsYWJsZSBieSBkZWZpbmluZyBgTUFTX1NIT1JUSEFORF9HTE9CQUxTYCBi
ZWZvcmUgaW1wb3J0aW5nIE1hc29ucnkuCgojIyMjIDQuIE5TQXJyYXkKCkFu
IGFycmF5IG9mIGEgbWl4dHVyZSBvZiBhbnkgb2YgdGhlIHByZXZpb3VzIHR5
cGVzCmBgYG9iai1jCm1ha2UuaGVpZ2h0LmVxdWFsVG8oQFt2aWV3MS5tYXNf
aGVpZ2h0LCB2aWV3Mi5tYXNfaGVpZ2h0XSk7Cm1ha2UuaGVpZ2h0LmVxdWFs
VG8oQFt2aWV3MSwgdmlldzJdKTsKbWFrZS5sZWZ0LmVxdWFsVG8oQFt2aWV3
MSwgQDEwMCwgdmlldzMucmlnaHRdKTsKYGBgYAoKIyMgTGVhcm4gdG8gcHJp
b3JpdGl6ZQoKPiBgLnByaW9yaXR5YCBhbGxvd3MgeW91IHRvIHNwZWNpZnkg
YW4gZXhhY3QgcHJpb3JpdHkKCj4gYC5wcmlvcml0eUhpZ2hgIGVxdWl2YWxl
bnQgdG8gKipVSUxheW91dFByaW9yaXR5RGVmYXVsdEhpZ2gqKgoKPiBgLnBy
aW9yaXR5TWVkaXVtYCBpcyBoYWxmIHdheSBiZXR3ZWVuIGhpZ2ggYW5kIGxv
dwoKPiBgLnByaW9yaXR5TG93YCBlcXVpdmFsZW50IHRvICoqVUlMYXlvdXRQ
cmlvcml0eURlZmF1bHRMb3cqKgoKUHJpb3JpdGllcyBhcmUgY2FuIGJlIHRh
Y2tlZCBvbiB0byB0aGUgZW5kIG9mIGEgY29uc3RyYWludCBjaGFpbiBsaWtl
IHNvOgpgYGBvYmotYwptYWtlLmxlZnQuZ3JlYXRlclRoYW5PckVxdWFsVG8o
bGFiZWwubWFzX2xlZnQpLndpdGgucHJpb3JpdHlMb3coKTsKCm1ha2UudG9w
LmVxdWFsVG8obGFiZWwubWFzX3RvcCkud2l0aC5wcmlvcml0eSg2MDApOwpg
YGAKCiMjIENvbXBvc2l0aW9uLCBjb21wb3NpdGlvbiwgY29tcG9zaXRpb24K
Ck1hc29ucnkgYWxzbyBnaXZlcyB5b3UgYSBmZXcgY29udmVuaWVuY2UgbWV0
aG9kcyB3aGljaCBjcmVhdGUgbXVsdGlwbGUgY29uc3RyYWludHMgYXQgdGhl
IHNhbWUgdGltZS4gVGhlc2UgYXJlIGNhbGxlZCBNQVNDb21wb3NpdGVDb25z
dHJhaW50cwoKIyMjIyBlZGdlcwoKYGBgb2JqLWMKLy8gbWFrZSB0b3AsIGxl
ZnQsIGJvdHRvbSwgcmlnaHQgZXF1YWwgdmlldzIKbWFrZS5lZGdlcy5lcXVh
bFRvKHZpZXcyKTsKCi8vIG1ha2UgdG9wID0gc3VwZXJ2aWV3LnRvcCArIDUs
IGxlZnQgPSBzdXBlcnZpZXcubGVmdCArIDEwLAovLyAgICAgIGJvdHRvbSA9
IHN1cGVydmlldy5ib3R0b20gLSAxNSwgcmlnaHQgPSBzdXBlcnZpZXcucmln
aHQgLSAyMAptYWtlLmVkZ2VzLmVxdWFsVG8oc3VwZXJ2aWV3KS5pbnNldHMo
VUlFZGdlSW5zZXRzTWFrZSg1LCAxMCwgMTUsIDIwKSkKYGBgCgojIyMjIHNp
emUKCmBgYG9iai1jCi8vIG1ha2Ugd2lkdGggYW5kIGhlaWdodCBncmVhdGVy
IHRoYW4gb3IgZXF1YWwgdG8gdGl0bGVMYWJlbAptYWtlLnNpemUuZ3JlYXRl
clRoYW5PckVxdWFsVG8odGl0bGVMYWJlbCkKCi8vIG1ha2Ugd2lkdGggPSBz
dXBlcnZpZXcud2lkdGggKyAxMDAsIGhlaWdodCA9IHN1cGVydmlldy5oZWln
aHQgLSA1MAptYWtlLnNpemUuZXF1YWxUbyhzdXBlcnZpZXcpLnNpemVPZmZz
ZXQoQ0dTaXplTWFrZSgxMDAsIC01MCkpCmBgYAoKIyMjIyBjZW50ZXIKYGBg
b2JqLWMKLy8gbWFrZSBjZW50ZXJYIGFuZCBjZW50ZXJZID0gYnV0dG9uMQpt
YWtlLmNlbnRlci5lcXVhbFRvKGJ1dHRvbjEpCgovLyBtYWtlIGNlbnRlclgg
PSBzdXBlcnZpZXcuY2VudGVyWCAtIDUsIGNlbnRlclkgPSBzdXBlcnZpZXcu
Y2VudGVyWSArIDEwCm1ha2UuY2VudGVyLmVxdWFsVG8oc3VwZXJ2aWV3KS5j
ZW50ZXJPZmZzZXQoQ0dQb2ludE1ha2UoLTUsIDEwKSkKYGBgCgpZb3UgY2Fu
IGNoYWluIHZpZXcgYXR0cmlidXRlcyBmb3IgaW5jcmVhc2VkIHJlYWRhYmls
aXR5OgoKYGBgb2JqLWMKLy8gQWxsIGVkZ2VzIGJ1dCB0aGUgdG9wIHNob3Vs
ZCBlcXVhbCB0aG9zZSBvZiB0aGUgc3VwZXJ2aWV3Cm1ha2UubGVmdC5yaWdo
dC5hbmQuYm90dG9tLmVxdWFsVG8oc3VwZXJ2aWV3KTsKbWFrZS50b3AuZXF1
YWxUbyhvdGhlclZpZXcpOwpgYGAKCiMjIEhvbGQgb24gZm9yIGRlYXIgbGlm
ZQoKU29tZXRpbWVzIHlvdSBuZWVkIG1vZGlmeSBleGlzdGluZyBjb25zdHJh
aW50cyBpbiBvcmRlciB0byBhbmltYXRlIG9yIHJlbW92ZS9yZXBsYWNlIGNv
bnN0cmFpbnRzLgpJbiBNYXNvbnJ5IHRoZXJlIGFyZSBhIGZldyBkaWZmZXJl
bnQgYXBwcm9hY2hlcyB0byB1cGRhdGluZyBjb25zdHJhaW50cy4KCiMjIyMg
MS4gUmVmZXJlbmNlcwpZb3UgY2FuIGhvbGQgb24gdG8gYSByZWZlcmVuY2Ug
b2YgYSBwYXJ0aWN1bGFyIGNvbnN0cmFpbnQgYnkgYXNzaWduaW5nIHRoZSBy
ZXN1bHQgb2YgYSBjb25zdHJhaW50IG1ha2UgZXhwcmVzc2lvbiB0byBhIGxv
Y2FsIHZhcmlhYmxlIG9yIGEgY2xhc3MgcHJvcGVydHkuCllvdSBjb3VsZCBh
bHNvIHJlZmVyZW5jZSBtdWx0aXBsZSBjb25zdHJhaW50cyBieSBzdG9yaW5n
IHRoZW0gYXdheSBpbiBhbiBhcnJheS4KCmBgYG9iai1jCi8vIGluIHB1Ymxp
Yy9wcml2YXRlIGludGVyZmFjZQpAcHJvcGVydHkgKG5vbmF0b21pYywgc3Ry
b25nKSBNQVNDb25zdHJhaW50ICp0b3BDb25zdHJhaW50OwoKLi4uCgovLyB3
aGVuIG1ha2luZyBjb25zdHJhaW50cwpbdmlldzEgbWFzX21ha2VDb25zdHJh
aW50czpeKE1BU0NvbnN0cmFpbnRNYWtlciAqbWFrZSkgewogICAgc2VsZi50
b3BDb25zdHJhaW50ID0gbWFrZS50b3AuZXF1YWxUbyhzdXBlcnZpZXcubWFz
X3RvcCkud2l0aC5vZmZzZXQocGFkZGluZy50b3ApOwogICAgbWFrZS5sZWZ0
LmVxdWFsVG8oc3VwZXJ2aWV3Lm1hc19sZWZ0KS53aXRoLm9mZnNldChwYWRk
aW5nLmxlZnQpOwp9XTsKCi4uLgovLyB0aGVuIGxhdGVyIHlvdSBjYW4gY2Fs
bApbc2VsZi50b3BDb25zdHJhaW50IHVuaW5zdGFsbF07CmBgYAoKIyMjIyAy
LiBtYXNfdXBkYXRlQ29uc3RyYWludHMKQWx0ZXJuYXRpdmVseSBpZiB5b3Ug
YXJlIG9ubHkgdXBkYXRpbmcgdGhlIGNvbnN0YW50IHZhbHVlIG9mIHRoZSBj
b25zdHJhaW50IHlvdSBjYW4gdXNlIHRoZSBjb252aWVuY2UgbWV0aG9kIGBt
YXNfdXBkYXRlQ29uc3RyYWludHNgIGluc3RlYWQgb2YgYG1hc19tYWtlQ29u
c3RyYWludHNgCgpgYGBvYmotYwovLyB0aGlzIGlzIEFwcGxlJ3MgcmVjb21t
ZW5kZWQgcGxhY2UgZm9yIGFkZGluZy91cGRhdGluZyBjb25zdHJhaW50cwov
LyB0aGlzIG1ldGhvZCBjYW4gZ2V0IGNhbGxlZCBtdWx0aXBsZSB0aW1lcyBp
biByZXNwb25zZSB0byBzZXROZWVkc1VwZGF0ZUNvbnN0cmFpbnRzCi8vIHdo
aWNoIGNhbiBiZSBjYWxsZWQgYnkgVUlLaXQgaW50ZXJuYWxseSBvciBpbiB5
b3VyIGNvZGUgaWYgeW91IG5lZWQgdG8gdHJpZ2dlciBhbiB1cGRhdGUgdG8g
eW91ciBjb25zdHJhaW50cwotICh2b2lkKXVwZGF0ZUNvbnN0cmFpbnRzIHsK
ICAgIFtzZWxmLmdyb3dpbmdCdXR0b24gbWFzX3VwZGF0ZUNvbnN0cmFpbnRz
Ol4oTUFTQ29uc3RyYWludE1ha2VyICptYWtlKSB7CiAgICAgICAgbWFrZS5j
ZW50ZXIuZXF1YWxUbyhzZWxmKTsKICAgICAgICBtYWtlLndpZHRoLmVxdWFs
VG8oQChzZWxmLmJ1dHRvblNpemUud2lkdGgpKS5wcmlvcml0eUxvdygpOwog
ICAgICAgIG1ha2UuaGVpZ2h0LmVxdWFsVG8oQChzZWxmLmJ1dHRvblNpemUu
aGVpZ2h0KSkucHJpb3JpdHlMb3coKTsKICAgICAgICBtYWtlLndpZHRoLmxl
c3NUaGFuT3JFcXVhbFRvKHNlbGYpOwogICAgICAgIG1ha2UuaGVpZ2h0Lmxl
c3NUaGFuT3JFcXVhbFRvKHNlbGYpOwogICAgfV07CgogICAgLy9hY2NvcmRp
bmcgdG8gYXBwbGUgc3VwZXIgc2hvdWxkIGJlIGNhbGxlZCBhdCBlbmQgb2Yg
bWV0aG9kCiAgICBbc3VwZXIgdXBkYXRlQ29uc3RyYWludHNdOwp9CmBgYAoK
IyMjIDMuIG1hc19yZW1ha2VDb25zdHJhaW50cwpgbWFzX3VwZGF0ZUNvbnN0
cmFpbnRzYCBpcyB1c2VmdWwgZm9yIHVwZGF0aW5nIGEgc2V0IG9mIGNvbnN0
cmFpbnRzLCBidXQgZG9pbmcgYW55dGhpbmcgYmV5b25kIHVwZGF0aW5nIGNv
bnN0YW50IHZhbHVlcyBjYW4gZ2V0IGV4aGF1c3RpbmcuIFRoYXQncyB3aGVy
ZSBgbWFzX3JlbWFrZUNvbnN0cmFpbnRzYCBjb21lcyBpbi4KCmBtYXNfcmVt
YWtlQ29uc3RyYWludHNgIGlzIHNpbWlsYXIgdG8gYG1hc191cGRhdGVDb25z
dHJhaW50c2AsIGJ1dCBpbnN0ZWFkIG9mIHVwZGF0aW5nIGNvbnN0YW50IHZh
bHVlcywgaXQgd2lsbCByZW1vdmUgYWxsIG9mIGl0cyBjb25zdHJhaW50cyBi
ZWZvcmUgaW5zdGFsbGluZyB0aGVtIGFnYWluLiBUaGlzIGxldHMgeW91IHBy
b3ZpZGUgZGlmZmVyZW50IGNvbnN0cmFpbnRzIHdpdGhvdXQgaGF2aW5nIHRv
IGtlZXAgYXJvdW5kIHJlZmVyZW5jZXMgdG8gb25lcyB3aGljaCB5b3Ugd2Fu
dCB0byByZW1vdmUuCgpgYGBvYmotYwotICh2b2lkKWNoYW5nZUJ1dHRvblBv
c2l0aW9uIHsKICAgIFtzZWxmLmJ1dHRvbiBtYXNfcmVtYWtlQ29uc3RyYWlu
dHM6XihNQVNDb25zdHJhaW50TWFrZXIgKm1ha2UpIHsKICAgICAgICBtYWtl
LnNpemUuZXF1YWxUbyhzZWxmLmJ1dHRvblNpemUpOwoKICAgICAgICBpZiAo
dG9wTGVmdCkgewogICAgICAgIAltYWtlLnRvcC5hbmQubGVmdC5vZmZzZXQo
MTApOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgCW1ha2UuYm90dG9tLmFu
ZC5yaWdodC5vZmZzZXQoLTEwKTsKICAgICAgICB9CiAgICB9XTsKfQpgYGAK
CllvdSBjYW4gZmluZCBtb3JlIGRldGFpbGVkIGV4YW1wbGVzIG9mIGFsbCB0
aHJlZSBhcHByb2FjaGVzIGluIHRoZSAqKk1hc29ucnkgaU9TIEV4YW1wbGVz
KiogcHJvamVjdC4KCiMjIFdoZW4gdGhlIF4mKiFAIGhpdHMgdGhlIGZhbiEK
CkxheWluZyBvdXQgeW91ciB2aWV3cyBkb2Vzbid0IGFsd2F5cyBnb3RvIHBs
YW4uIFNvIHdoZW4gdGhpbmdzIGxpdGVyYWxseSBnbyBwZWFyIHNoYXBlZCwg
eW91IGRvbid0IHdhbnQgdG8gYmUgbG9va2luZyBhdCBjb25zb2xlIG91dHB1
dCBsaWtlIHRoaXM6CgpgYGBvYmotYwpVbmFibGUgdG8gc2ltdWx0YW5lb3Vz
bHkgc2F0aXNmeSBjb25zdHJhaW50cy4uLi4uYmxhaCBibGFoIGJsYWguLi4u
CigKICAgICI8TlNMYXlvdXRDb25zdHJhaW50OjB4NzE4OWFjMCBWOltVSUxh
YmVsOjB4NzE4Njk4MCg+PTUwMDApXT4iLAogICAgIjxOU0F1dG9yZXNpemlu
Z01hc2tMYXlvdXRDb25zdHJhaW50OjB4ODM5ZWEyMCBoPS0tJiB2PS0tJiBW
OltNQVNFeGFtcGxlRGVidWdnaW5nVmlldzoweDcxODY1NjAoNDE2KV0+IiwK
ICAgICI8TlNMYXlvdXRDb25zdHJhaW50OjB4NzE4OWM3MCBVSUxhYmVsOjB4
NzE4Njk4MC5ib3R0b20gPT0gTUFTRXhhbXBsZURlYnVnZ2luZ1ZpZXc6MHg3
MTg2NTYwLmJvdHRvbSAtIDEwPiIsCiAgICAiPE5TTGF5b3V0Q29uc3RyYWlu
dDoweDcxODk1NjAgVjp8LSgxKS1bVUlMYWJlbDoweDcxODY5ODBdICAgKE5h
bWVzOiAnfCc6TUFTRXhhbXBsZURlYnVnZ2luZ1ZpZXc6MHg3MTg2NTYwICk+
IgopCgpXaWxsIGF0dGVtcHQgdG8gcmVjb3ZlciBieSBicmVha2luZyBjb25z
dHJhaW50CjxOU0xheW91dENvbnN0cmFpbnQ6MHg3MTg5YWMwIFY6W1VJTGFi
ZWw6MHg3MTg2OTgwKD49NTAwMCldPgpgYGAKCk1hc29ucnkgYWRkcyBhIGNh
dGVnb3J5IHRvIE5TTGF5b3V0Q29uc3RyYWludCB3aGljaCBvdmVycmlkZXMg
dGhlIGRlZmF1bHQgaW1wbGVtZW50YXRpb24gb2YgYC0gKE5TU3RyaW5nICop
ZGVzY3JpcHRpb25gLgpOb3cgeW91IGNhbiBnaXZlIG1lYW5pbmdmdWwgbmFt
ZXMgdG8gdmlld3MgYW5kIGNvbnN0cmFpbnRzLCBhbmQgYWxzbyBlYXNpbHkg
cGljayBvdXQgdGhlIGNvbnN0cmFpbnRzIGNyZWF0ZWQgYnkgTWFzb25yeS4K
CndoaWNoIG1lYW5zIHlvdXIgY29uc29sZSBvdXRwdXQgY2FuIG5vdyBsb29r
IGxpa2UgdGhpczoKCmBgYG9iai1jClVuYWJsZSB0byBzaW11bHRhbmVvdXNs
eSBzYXRpc2Z5IGNvbnN0cmFpbnRzLi4uLi4uYmxhaCBibGFoIGJsYWguLi4u
CigKICAgICI8TlNBdXRvcmVzaXppbmdNYXNrTGF5b3V0Q29uc3RyYWludDow
eDg4ODc3NDAgTUFTRXhhbXBsZURlYnVnZ2luZ1ZpZXc6c3VwZXJ2aWV3Lmhl
aWdodCA9PSA0MTY+IiwKICAgICI8TUFTTGF5b3V0Q29uc3RyYWludDpDb25z
dGFudENvbnN0cmFpbnQgVUlMYWJlbDptZXNzYWdlTGFiZWwuaGVpZ2h0ID49
IDUwMDA+IiwKICAgICI8TUFTTGF5b3V0Q29uc3RyYWludDpCb3R0b21Db25z
dHJhaW50IFVJTGFiZWw6bWVzc2FnZUxhYmVsLmJvdHRvbSA9PSBNQVNFeGFt
cGxlRGVidWdnaW5nVmlldzpzdXBlcnZpZXcuYm90dG9tIC0gMTA+IiwKICAg
ICI8TUFTTGF5b3V0Q29uc3RyYWludDpDb25mbGljdGluZ0NvbnN0cmFpbnRb
MF0gVUlMYWJlbDptZXNzYWdlTGFiZWwudG9wID09IE1BU0V4YW1wbGVEZWJ1
Z2dpbmdWaWV3OnN1cGVydmlldy50b3AgKyAxPiIKKQoKV2lsbCBhdHRlbXB0
IHRvIHJlY292ZXIgYnkgYnJlYWtpbmcgY29uc3RyYWludAo8TUFTTGF5b3V0
Q29uc3RyYWludDpDb25zdGFudENvbnN0cmFpbnQgVUlMYWJlbDptZXNzYWdl
TGFiZWwuaGVpZ2h0ID49IDUwMDA+CmBgYAoKRm9yIGFuIGV4YW1wbGUgb2Yg
aG93IHRvIHNldCB0aGlzIHVwIHRha2UgYSBsb29rIGF0IHRoZSAqKk1hc29u
cnkgaU9TIEV4YW1wbGVzKiogcHJvamVjdCBpbiB0aGUgTWFzb25yeSB3b3Jr
c3BhY2UuCgojIyBXaGVyZSBzaG91bGQgSSBjcmVhdGUgbXkgY29uc3RyYWlu
dHM/CgpgYGBvYmpjCkBpbXBsZW1lbnRhdGlvbiBESVlDdXN0b21WaWV3Cgot
IChpZClpbml0IHsKICAgIHNlbGYgPSBbc3VwZXIgaW5pdF07CiAgICBpZiAo
IXNlbGYpIHJldHVybiBuaWw7CgogICAgLy8gLS0tIENyZWF0ZSB5b3VyIHZp
ZXdzIGhlcmUgLS0tCiAgICBzZWxmLmJ1dHRvbiA9IFtbVUlCdXR0b24gYWxs
b2NdIGluaXRdOwoKICAgIHJldHVybiBzZWxmOwp9CgovLyB0ZWxsIFVJS2l0
IHRoYXQgeW91IGFyZSB1c2luZyBBdXRvTGF5b3V0CisgKEJPT0wpcmVxdWly
ZXNDb25zdHJhaW50QmFzZWRMYXlvdXQgewogICAgcmV0dXJuIFlFUzsKfQoK
Ly8gdGhpcyBpcyBBcHBsZSdzIHJlY29tbWVuZGVkIHBsYWNlIGZvciBhZGRp
bmcvdXBkYXRpbmcgY29uc3RyYWludHMKLSAodm9pZCl1cGRhdGVDb25zdHJh
aW50cyB7CgogICAgLy8gLS0tIHJlbWFrZS91cGRhdGUgY29uc3RyYWludHMg
aGVyZQogICAgW3NlbGYuYnV0dG9uIHJlbWFrZUNvbnN0cmFpbnRzOl4oTUFT
Q29uc3RyYWludE1ha2VyICptYWtlKSB7CiAgICAgICAgbWFrZS53aWR0aC5l
cXVhbFRvKEAoc2VsZi5idXR0b25TaXplLndpZHRoKSk7CiAgICAgICAgbWFr
ZS5oZWlnaHQuZXF1YWxUbyhAKHNlbGYuYnV0dG9uU2l6ZS5oZWlnaHQpKTsK
ICAgIH1dOwogICAgCiAgICAvL2FjY29yZGluZyB0byBhcHBsZSBzdXBlciBz
aG91bGQgYmUgY2FsbGVkIGF0IGVuZCBvZiBtZXRob2QKICAgIFtzdXBlciB1
cGRhdGVDb25zdHJhaW50c107Cn0KCi0gKHZvaWQpZGlkVGFwQnV0dG9uOihV
SUJ1dHRvbiAqKWJ1dHRvbiB7CiAgICAvLyAtLS0gRG8geW91ciBjaGFuZ2Vz
IGllIGNoYW5nZSB2YXJpYWJsZXMgdGhhdCBhZmZlY3QgeW91ciBsYXlvdXQg
ZXRjIC0tLQogICAgc2VsZi5idXR0b25TaXplID0gQ0dTaXplKDIwMCwgMjAw
KTsKCiAgICAvLyB0ZWxsIGNvbnN0cmFpbnRzIHRoZXkgbmVlZCB1cGRhdGlu
ZwogICAgW3NlbGYgc2V0TmVlZHNVcGRhdGVDb25zdHJhaW50c107Cn0KCkBl
bmQKYGBgCgojIyBJbnN0YWxsYXRpb24KVXNlIHRoZSBbb3Jzb21lXShodHRw
Oi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9WWFJWkY4dVVUdGspIFtDb2Nv
YVBvZHNdKGh0dHA6Ly9naXRodWIuY29tL0NvY29hUG9kcy9Db2NvYVBvZHMp
LgoKSW4geW91ciBQb2RmaWxlCj5gcG9kICdNYXNvbnJ5J2AKCklmIHlvdSB3
YW50IHRvIHVzZSBtYXNvbnJ5IHdpdGhvdXQgYWxsIHRob3NlIHBlc2t5ICdt
YXNfJyBwcmVmaXhlcy4gQWRkICNkZWZpbmUgTUFTX1NIT1JUSEFORCB0byB5
b3VyIHByZWZpeC5wY2ggYmVmb3JlIGltcG9ydGluZyBNYXNvbnJ5Cj5gI2Rl
ZmluZSBNQVNfU0hPUlRIQU5EYAoKR2V0IGJ1c3kgTWFzb25pbmcKPmAjaW1w
b3J0ICJNYXNvbnJ5LmgiYAoKIyMgQ29kZSBTbmlwcGV0cwoKQ29weSB0aGUg
aW5jbHVkZWQgY29kZSBzbmlwcGV0cyB0byBgYH4vTGlicmFyeS9EZXZlbG9w
ZXIvWGNvZGUvVXNlckRhdGEvQ29kZVNuaXBwZXRzYGAgdG8gd3JpdGUgeW91
ciBtYXNvbnJ5IGJsb2NrcyBhdCBsaWdodG5pbmcgc3BlZWQhCgpgbWFzX21h
a2VgIC0+IGAgWzwjdmlldyM+IG1hc19tYWtlQ29uc3RyYWludHM6XihNQVND
b25zdHJhaW50TWFrZXIgKm1ha2UpIHsKICAgICA8I2NvZGUjPgogfV07YAoK
YG1hc191cGRhdGVgIC0+IGAgWzwjdmlldyM+IG1hc191cGRhdGVDb25zdHJh
aW50czpeKE1BU0NvbnN0cmFpbnRNYWtlciAqbWFrZSkgewogICAgIDwjY29k
ZSM+CiB9XTtgCgpgbWFzX3JlbWFrZWAgLT4gYCBbPCN2aWV3Iz4gbWFzX3Jl
bWFrZUNvbnN0cmFpbnRzOl4oTUFTQ29uc3RyYWludE1ha2VyICptYWtlKSB7
CiAgICAgPCNjb2RlIz4KIH1dO2AKCiMjIEZlYXR1cmVzCiogTm90IGxpbWl0
ZWQgdG8gc3Vic2V0IG9mIEF1dG8gTGF5b3V0LiBBbnl0aGluZyBOU0xheW91
dENvbnN0cmFpbnQgY2FuIGRvLCBNYXNvbnJ5IGNhbiBkbyB0b28hCiogR3Jl
YXQgZGVidWcgc3VwcG9ydCwgZ2l2ZSB5b3VyIHZpZXdzIGFuZCBjb25zdHJh
aW50cyBtZWFuaW5nZnVsIG5hbWVzLgoqIENvbnN0cmFpbnRzIHJlYWQgbGlr
ZSBzZW50ZW5jZXMuCiogTm8gY3JhenkgbWFjcm8gbWFnaWMuIE1hc29ucnkg
d29uJ3QgcG9sbHV0ZSB0aGUgZ2xvYmFsIG5hbWVzcGFjZSB3aXRoIG1hY3Jv
cy4KKiBOb3Qgc3RyaW5nIG9yIGRpY3Rpb25hcnkgYmFzZWQgYW5kIGhlbmNl
IHlvdSBnZXQgY29tcGlsZSB0aW1lIGNoZWNraW5nLgoKIyMgVE9ETwoqIEV5
ZSBjYW5keQoqIE1hYyBleGFtcGxlIHByb2plY3QKKiBNb3JlIHRlc3RzIGFu
ZCBleGFtcGxlcwoK
",,17581,"LS0tCmxhbmd1YWdlOiBvYmplY3RpdmUtYwpvc3hfaW1hZ2U6IHhjb2RlOQpi
ZWZvcmVfaW5zdGFsbDoKICAtIHN1ZG8gZWFzeV9pbnN0YWxsIGNwcC1jb3Zl
cmFsbHMKICAtIGdlbSBpbnN0YWxsIHhjcHJldHR5IC1OCiAgLSBleHBvcnQg
TEFORz1lbl9VUy5VVEYtOAoKc2NyaXB0OgogIC0gc2V0IC1vIHBpcGVmYWls
CiAgLSB4Y29kZWJ1aWxkIC13b3Jrc3BhY2UgJ01hc29ucnkueGN3b3Jrc3Bh
Y2UnIC1zY2hlbWUgJ01hc29ucnkgaU9TIFRlc3RzJyAtY29uZmlndXJhdGlv
biBEZWJ1ZyAtc2RrIGlwaG9uZXNpbXVsYXRvciAtZGVzdGluYXRpb24gJ3Bs
YXRmb3JtPWlPUyBTaW11bGF0b3IsbmFtZT1pUGhvbmUgNyxPUz0xMC4wJyBj
bGVhbiB0ZXN0IEFSQ0hTPWkzODYgVkFMSURfQVJDSFM9aTM4NiBPTkxZX0FD
VElWRV9BUkNIPU5PIEdDQ19JTlNUUlVNRU5UX1BST0dSQU1fRkxPV19BUkNT
PVlFUyBHQ0NfR0VORVJBVEVfVEVTVF9DT1ZFUkFHRV9GSUxFUz1ZRVMgfCB4
Y3ByZXR0eSAtYwogIC0geGNvZGVidWlsZCAtd29ya3NwYWNlICdNYXNvbnJ5
Lnhjd29ya3NwYWNlJyAtc2NoZW1lICdNYXNvbnJ5IGlPUycgLWNvbmZpZ3Vy
YXRpb24gRGVidWcgLXNkayBpcGhvbmVzaW11bGF0b3IgY2xlYW4gYnVpbGQg
QVJDSFM9aTM4NiBWQUxJRF9BUkNIUz1pMzg2IE9OTFlfQUNUSVZFX0FSQ0g9
Tk8gfCB4Y3ByZXR0eSAtYwogIC0geGNvZGVidWlsZCAtd29ya3NwYWNlICdN
YXNvbnJ5Lnhjd29ya3NwYWNlJyAtc2NoZW1lICdNYXNvbnJ5IE9TWCcgLWNv
bmZpZ3VyYXRpb24gRGVidWcgY2xlYW4gYnVpbGQgfCB4Y3ByZXR0eSAtYwoK
YWZ0ZXJfc3VjY2VzczoKICAtIC4vc2NyaXB0L2NvdmVyYWxscy5zaAo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
