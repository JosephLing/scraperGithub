name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'google-api-nodejs-client',8608480,"b""Google's officially supported Node.js client library for accessing Google APIs. Support for authorization and authentication with OAuth 2.0, API Keys and JWT (Service Tokens) is included. """,b'TypeScript',95,8020,,345,False,b'https://api.github.com/repos/googleapis/google-api-nodejs-client/forks',"PGltZyBzcmM9Imh0dHBzOi8vYXZhdGFyczAuZ2l0aHVidXNlcmNvbnRlbnQu
Y29tL3UvMTM0MjAwND92PTMmcz05NiIgYWx0PSJHb29nbGUgSW5jLiBsb2dv
IiB0aXRsZT0iR29vZ2xlIiBhbGlnbj0icmlnaHQiIGhlaWdodD0iOTYiIHdp
ZHRoPSI5NiIvPgoKIyBHb29nbGUgQVBJcyBOb2RlLmpzIENsaWVudAoKWyFb
UmVsZWFzZSBMZXZlbF1bcmVsZWFzZWxldmVsaW1nXV1bcmVsZWFzZWxldmVs
XQpbIVtucG0gdmVyc2lvbl1bbnBtaW1nXV1bbnBtXQpbIVtDb2RlIENvdmVy
YWdlXVtjb2RlY292aW1nXV1bY29kZWNvdl0KWyFbRG93bmxvYWRzXVtkb3du
bG9hZHNpbWddXVtkb3dubG9hZHNdClshW0RlcGVuZGVuY3kgU3RhdHVzXVtk
YXZpZC1pbWFnZV1dW2RhdmlkLXVybF0KWyFbS25vd24gVnVsbmVyYWJpbGl0
aWVzXVtzbnlrLWltYWdlXV1bc255ay11cmxdCgpbTm9kZS5qc11bbm9kZV0g
Y2xpZW50IGxpYnJhcnkgZm9yIHVzaW5nIEdvb2dsZSBBUElzLiBTdXBwb3J0
IGZvciBhdXRob3JpemF0aW9uIGFuZCBhdXRoZW50aWNhdGlvbiB3aXRoIE9B
dXRoIDIuMCwgQVBJIEtleXMgYW5kIEpXVCB0b2tlbnMgaXMgaW5jbHVkZWQu
CgoqIFtHb29nbGUgQVBJc10oI2dvb2dsZS1hcGlzKQoqIFtHZXR0aW5nIHN0
YXJ0ZWRdKCNnZXR0aW5nLXN0YXJ0ZWQpCiAgKiBbSW5zdGFsbGF0aW9uXSgj
aW5zdGFsbGF0aW9uKQogICogW0ZpcnN0IGV4YW1wbGVdKCNmaXJzdC1leGFt
cGxlKQogICogW1NhbXBsZXNdKCNzYW1wbGVzKQogICogW0FQSSBSZWZlcmVu
Y2VdKCNhcGktcmVmZXJlbmNlKQoqIFtBdXRoZW50aWNhdGlvbiBhbmQgYXV0
aG9yaXphdGlvbl0oI2F1dGhlbnRpY2F0aW9uLWFuZC1hdXRob3JpemF0aW9u
KQogICogW09BdXRoMiBjbGllbnRdKCNvYXV0aDItY2xpZW50KQogICogW1Vz
aW5nIEFQSSBrZXlzXSgjdXNpbmctYXBpLWtleXMpCiAgKiBbU2VydmljZSA8
LS0+IFNlcnZpY2UgYXV0aGVudGljYXRpb25dKCNzZXJ2aWNlLXRvLXNlcnZp
Y2UtYXV0aGVudGljYXRpb24pCiAgKiBbU2V0dGluZyBnbG9iYWwgb3Igc2Vy
dmljZS1sZXZlbCBhdXRoXSgjc2V0dGluZy1nbG9iYWwtb3Itc2VydmljZS1s
ZXZlbC1hdXRoKQoqIFtVc2FnZV0oI3VzYWdlKQogICogW1NwZWNpZnlpbmcg
cmVxdWVzdCBib2R5XSgjc3BlY2lmeWluZy1yZXF1ZXN0LWJvZHkpCiAgKiBb
TWVkaWEgdXBsb2Fkc10oI21lZGlhLXVwbG9hZHMpCiAgKiBbUmVxdWVzdCBP
cHRpb25zXSgjcmVxdWVzdC1vcHRpb25zKQogICogW1VzaW5nIGEgUHJveHld
KCN1c2luZy1hLXByb3h5KQogICogW1N1cHBvcnRlZCBBUElzXSgjZ2V0dGlu
Zy1zdXBwb3J0ZWQtYXBpcykKICAqIFtUeXBlU2NyaXB0XSgjdHlwZXNjcmlw
dCkKKiBbTGljZW5zZV0oI2xpY2Vuc2UpCiogW0NvbnRyaWJ1dGluZ10oI2Nv
bnRyaWJ1dGluZykKKiBbUXVlc3Rpb25zL3Byb2JsZW1zP10oI3F1ZXN0aW9u
c3Byb2JsZW1zKQoKIyMgR29vZ2xlIEFQSXMKVGhlIGZ1bGwgbGlzdCBvZiBz
dXBwb3J0ZWQgQVBJcyBjYW4gYmUgZm91bmQgb24gdGhlIFtHb29nbGUgQVBJ
cyBFeHBsb3Jlcl1bYXBpZXhwbG9yZXJdLiBUaGUgQVBJIGVuZHBvaW50cyBh
cmUgYXV0b21hdGljYWxseSBnZW5lcmF0ZWQsIHNvIGlmIHRoZSBBUEkgaXMg
bm90IGluIHRoZSBsaXN0LCBpdCBpcyBjdXJyZW50bHkgbm90IHN1cHBvcnRl
ZCBieSB0aGlzIEFQSSBjbGllbnQgbGlicmFyeS4KCiMjIyBXb3JraW5nIHdp
dGggR29vZ2xlIENsb3VkIFBsYXRmb3JtIEFQSXM/CklmIHlvdSdyZSB3b3Jr
aW5nIHdpdGggW0dvb2dsZSBDbG91ZCBQbGF0Zm9ybV1bY2xvdWRwbGF0Zm9y
bV0gQVBJcyBzdWNoIGFzIERhdGFzdG9yZSwgQ2xvdWQgU3RvcmFnZSBvciBQ
dWIvU3ViLCBjb25zaWRlciB1c2luZyB0aGUgW2BAZ29vZ2xlLWNsb3VkYF1b
Z29vZ2xlY2xvdWRdIGNsaWVudCBsaWJyYXJpZXM6IHNpbmdsZSBwdXJwb3Nl
IGlkaW9tYXRpYyBOb2RlLmpzIGNsaWVudHMgZm9yIEdvb2dsZSBDbG91ZCBQ
bGF0Zm9ybSBzZXJ2aWNlcy4KCiMjIyBTdXBwb3J0IGFuZCBtYWludGVuYW5j
ZQpUaGVzZSBjbGllbnQgbGlicmFyaWVzIGFyZSBvZmZpY2lhbGx5IHN1cHBv
cnRlZCBieSBHb29nbGUuIEhvd2V2ZXIsIHRoZXNlIGxpYnJhcmllcyBhcmUg
Y29uc2lkZXJlZCBjb21wbGV0ZSBhbmQgYXJlIGluIG1haW50ZW5hbmNlIG1v
ZGUuIFRoaXMgbWVhbnMgdGhhdCB3ZSB3aWxsIGFkZHJlc3MgY3JpdGljYWwg
YnVncyBhbmQgc2VjdXJpdHkgaXNzdWVzIGJ1dCB3aWxsIG5vdCBhZGQgYW55
IG5ldyBmZWF0dXJlcy4gRm9yIEdvb2dsZSBDbG91ZCBQbGF0Zm9ybSBBUElz
LCB3ZSByZWNvbW1lbmQgdXNpbmcgW2dvb2dsZS1jbG91ZC1ub2RlXShodHRw
czovL2dpdGh1Yi5jb20vR29vZ2xlQ2xvdWRQbGF0Zm9ybS9nb29nbGUtY2xv
dWQtbm9kZSkgd2hpY2ggaXMgdW5kZXIgYWN0aXZlIGRldmVsb3BtZW50LgoK
VGhpcyBsaWJyYXJ5IHN1cHBvcnRzIHRoZSBtYWludGVuYW5jZSBMVFMsIGFj
dGl2ZSBMVFMsIGFuZCBjdXJyZW50IHJlbGVhc2Ugb2Ygbm9kZS5qcy4gIFNl
ZSB0aGUgW25vZGUuanMgcmVsZWFzZSBzY2hlZHVsZV0oaHR0cHM6Ly9naXRo
dWIuY29tL25vZGVqcy9SZWxlYXNlKSBmb3IgbW9yZSBpbmZvcm1hdGlvbi4K
CiMjIEdldHRpbmcgc3RhcnRlZAoKIyMjIEluc3RhbGxhdGlvbgpUaGlzIGxp
YnJhcnkgaXMgZGlzdHJpYnV0ZWQgb24gYG5wbWAuIEluIG9yZGVyIHRvIGFk
ZCBpdCBhcyBhIGRlcGVuZGVuY3ksIHJ1biB0aGUgZm9sbG93aW5nIGNvbW1h
bmQ6CgpgYGAgc2gKJCBucG0gaW5zdGFsbCBnb29nbGVhcGlzCmBgYAoKIyMj
IEZpcnN0IGV4YW1wbGUKVGhpcyBpcyBhIHZlcnkgc2ltcGxlIGV4YW1wbGUu
IFRoaXMgY3JlYXRlcyBhIEJsb2dnZXIgY2xpZW50IGFuZCByZXRyaWV2ZXMg
dGhlIGRldGFpbHMgb2YgYSBibG9nIGdpdmVuIHRoZSBibG9nIElkOgoKYGBg
IGpzCmNvbnN0IHtnb29nbGV9ID0gcmVxdWlyZSgnZ29vZ2xlYXBpcycpOwoK
Ly8gRWFjaCBBUEkgbWF5IHN1cHBvcnQgbXVsdGlwbGUgdmVyc2lvbi4gV2l0
aCB0aGlzIHNhbXBsZSwgd2UncmUgZ2V0dGluZwovLyB2MyBvZiB0aGUgYmxv
Z2dlciBBUEksIGFuZCB1c2luZyBhbiBBUEkga2V5IHRvIGF1dGhlbnRpY2F0
ZS4KY29uc3QgYmxvZ2dlciA9IGdvb2dsZS5ibG9nZ2VyKHsKICB2ZXJzaW9u
OiAndjMnLAogIGF1dGg6ICdZT1VSIEFQSSBLRVknCn0pOwoKY29uc3QgcGFy
YW1zID0gewogIGJsb2dJZDogMzIxMzkwMAp9OwoKLy8gZ2V0IHRoZSBibG9n
IGRldGFpbHMKYmxvZ2dlci5ibG9ncy5nZXQocGFyYW1zLCAoZXJyLCByZXMp
ID0+IHsKICBpZiAoZXJyKSB7CiAgICBjb25zb2xlLmVycm9yKGVycik7CiAg
ICB0aHJvdyBlcnI7CiAgfQogIGNvbnNvbGUubG9nKGBUaGUgYmxvZyB1cmwg
aXMgJHtyZXMuZGF0YS51cmx9YCk7Cn0pOwpgYGAKCkluc3RlYWQgb2YgdXNp
bmcgY2FsbGJhY2tzIHlvdSBjYW4gYWxzbyB1c2UgcHJvbWlzZXMhCgpgYGAg
anMKYmxvZ2dlci5ibG9ncy5nZXQocGFyYW1zKQogIC50aGVuKHJlcyA9PiB7
CiAgICBjb25zb2xlLmxvZyhgVGhlIGJsb2cgdXJsIGlzICR7cmVzLmRhdGEu
dXJsfWApOwogIH0pCiAgLmNhdGNoKGVycm9yID0+IHsKICAgIGNvbnNvbGUu
ZXJyb3IoZXJyb3IpOwogIH0pOwpgYGAKCk9yIGFzeW5jL2F3YWl0OgoKYGBg
IGpzCmFzeW5jIGZ1bmN0aW9uIHJ1blNhbXBsZSgpIHsKICBjb25zdCByZXMg
PSBhd2FpdCBibG9nZ2VyLmJsb2dzLmdldChwYXJhbXMpOwogIGNvbnNvbGUu
bG9nKGBUaGUgYmxvZyB1cmwgaXMgJHtyZXMuZGF0YS51cmx9YCk7Cn0KcnVu
U2FtcGxlKCkuY2F0Y2goY29uc29sZS5lcnJvcik7CmBgYAoKIyMjIFNhbXBs
ZXMKVGhlcmUgYXJlIGEgbG90IG9mIFtzYW1wbGVzXShodHRwczovL2dpdGh1
Yi5jb20vZ29vZ2xlYXBpcy9nb29nbGUtYXBpLW5vZGVqcy1jbGllbnQvdHJl
ZS9tYXN0ZXIvc2FtcGxlcykg8J+klyAgSWYgeW91J3JlIHRyeWluZyB0byBm
aWd1cmUgb3V0IGhvdyB0byB1c2UgYW4gQVBJIC4uLiBsb29rIHRoZXJlIGZp
cnN0ISBJZiB0aGVyZSdzIGEgc2FtcGxlIHlvdSBuZWVkIG1pc3NpbmcsIGZl
ZWwgZnJlZSB0byBmaWxlIGFuIFtpc3N1ZV1bYnVnc10uCgojIyMgQVBJIFJl
ZmVyZW5jZQpUaGlzIGxpYnJhcnkgaGFzIGEgZnVsbCBzZXQgb2YgW0FQSSBS
ZWZlcmVuY2UgRG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9nb29nbGVhcGlzLmRl
di9ub2RlanMvZ29vZ2xlYXBpcy9sYXRlc3QpLiBUaGlzIGRvY3VtZW50YXRp
b24gaXMgYXV0by1nZW5lcmF0ZWQsIGFuZCB0aGUgbG9jYXRpb24gbWF5IGNo
YW5nZS4KCiMjIEF1dGhlbnRpY2F0aW9uIGFuZCBhdXRob3JpemF0aW9uClRo
ZXJlIGFyZSB0aHJlZSBwcmltYXJ5IHdheXMgdG8gYXV0aGVudGljYXRlIHRv
IEdvb2dsZSBBUElzLiBTb21lIHNlcnZpY2Ugc3VwcG9ydCBhbGwgYXV0aGVu
dGljYXRpb24gbWV0aG9kcywgb3RoZXIgbWF5IG9ubHkgc3VwcG9ydCBvbmUg
b3IgdHdvLgoKLSAqKk9BdXRoMioqIC0gVGhpcyBhbGxvd3MgeW91IHRvIG1h
a2UgQVBJIGNhbGxzIG9uIGJlaGFsZiBvZiBhIGdpdmVuIHVzZXIuICBJbiB0
aGlzIG1vZGVsLCB0aGUgdXNlciB2aXNpdHMgeW91ciBhcHBsaWNhdGlvbiwg
c2lnbnMgaW4gd2l0aCB0aGVpciBHb29nbGUgYWNjb3VudCwgYW5kIHByb3Zp
ZGVzIHlvdXIgYXBwbGljYXRpb24gd2l0aCBhdXRob3JpemF0aW9uIGFnYWlu
c3QgYSBzZXQgb2Ygc2NvcGVzLiAgW0xlYXJuIG1vcmVdKCNvYXV0aDItY2xp
ZW50KS4KCi0gKipTZXJ2aWNlIDwtLT4gU2VydmljZSoqIC0gSW4gdGhpcyBt
b2RlbCwgeW91ciBhcHBsaWNhdGlvbiB0YWxrcyBkaXJlY3RseSB0byBHb29n
bGUgQVBJcyB1c2luZyBhIFNlcnZpY2UgQWNjb3VudC4gIEl0J3MgdXNlZnVs
IHdoZW4geW91IGhhdmUgYSBiYWNrZW5kIGFwcGxpY2F0aW9uIHRoYXQgd2ls
bCB0YWxrIGRpcmVjdGx5IHRvIEdvb2dsZSBBUElzIGZyb20gdGhlIGJhY2tl
bmQuIFtMZWFybiBtb3JlXSgjc2VydmljZS10by1zZXJ2aWNlLWF1dGhlbnRp
Y2F0aW9uKS4KCi0gKipBUEkgS2V5KiogLSBXaXRoIGFuIEFQSSBrZXksIHlv
dSBjYW4gYWNjZXNzIHlvdXIgc2VydmljZSBmcm9tIGEgY2xpZW50IG9yIHRo
ZSBzZXJ2ZXIuICBUeXBpY2FsbHkgbGVzcyBzZWN1cmUsIHRoaXMgaXMgb25s
eSBhdmFpbGFibGUgb24gYSBzbWFsbCBzdWJzZXQgb2Ygc2VydmljZXMgd2l0
aCBsaW1pdGVkIHNjb3Blcy4gIFtMZWFybiBtb3JlXSgjdXNpbmctYXBpLWtl
eXMpLgoKVG8gbGVhcm4gbW9yZSBhYm91dCB0aGUgYXV0aGVudGljYXRpb24g
Y2xpZW50LCBzZWUgdGhlIFtHb29nbGUgQXV0aCBMaWJyYXJ5XShodHRwczov
L2dpdGh1Yi5jb20vZ29vZ2xlYXBpcy9nb29nbGUtYXV0aC1saWJyYXJ5LW5v
ZGVqcykuCgojIyMgT0F1dGgyIGNsaWVudApUaGlzIGNsaWVudCBjb21lcyB3
aXRoIGFuIFtPQXV0aDJdW29hdXRoXSBjbGllbnQgdGhhdCBhbGxvd3MgeW91
IHRvIHJldHJpZXZlIGFuIGFjY2VzcyB0b2tlbiwgcmVmcmVzaCBpdCwgYW5k
IHJldHJ5IHRoZSByZXF1ZXN0IHNlYW1sZXNzbHkuIFRoZSBiYXNpY3Mgb2Yg
R29vZ2xlJ3MgT0F1dGgyIGltcGxlbWVudGF0aW9uIGlzIGV4cGxhaW5lZCBv
biBbR29vZ2xlIEF1dGhvcml6YXRpb24gYW5kIEF1dGhlbnRpY2F0aW9uIGRv
Y3VtZW50YXRpb25dW2F1dGhkb2NzXS4KCkluIHRoZSBmb2xsb3dpbmcgZXhh
bXBsZXMsIHlvdSBtYXkgbmVlZCBhIGBDTElFTlRfSURgLCBgQ0xJRU5UX1NF
Q1JFVGAgYW5kIGBSRURJUkVDVF9VUkxgLiBZb3UgY2FuIGZpbmQgdGhlc2Ug
cGllY2VzIG9mIGluZm9ybWF0aW9uIGJ5IGdvaW5nIHRvIHRoZSBbRGV2ZWxv
cGVyIENvbnNvbGVdW2RldmNvbnNvbGVdLCBjbGlja2luZyB5b3VyIHByb2pl
Y3QgLS0+IEFQSXMgJiBhdXRoIC0tPiBjcmVkZW50aWFscy4KCkZvciBtb3Jl
IGluZm9ybWF0aW9uIGFib3V0IE9BdXRoMiBhbmQgaG93IGl0IHdvcmtzLCBb
c2VlIGhlcmVdW29hdXRoXS4KCkEgY29tcGxldGUgc2FtcGxlIGFwcGxpY2F0
aW9uIHRoYXQgYXV0aG9yaXplcyBhbmQgYXV0aGVudGljYXRlcyB3aXRoIHRo
ZSBPQXV0aDIgY2xpZW50IGlzIGF2YWlsYWJsZSBhdCBbYHNhbXBsZXMvb2F1
dGgyLmpzYF1bb2F1dGhleGFtcGxlXS4KCiMjIyMgR2VuZXJhdGluZyBhbiBh
dXRoZW50aWNhdGlvbiBVUkwKClRvIGFzayBmb3IgcGVybWlzc2lvbnMgZnJv
bSBhIHVzZXIgdG8gcmV0cmlldmUgYW4gYWNjZXNzIHRva2VuLCB5b3UgcmVk
aXJlY3QgdGhlbSB0byBhIGNvbnNlbnQgcGFnZS4gVG8gY3JlYXRlIGEgY29u
c2VudCBwYWdlIFVSTDoKCmBgYCBqcwpjb25zdCB7Z29vZ2xlfSA9IHJlcXVp
cmUoJ2dvb2dsZWFwaXMnKTsKCmNvbnN0IG9hdXRoMkNsaWVudCA9IG5ldyBn
b29nbGUuYXV0aC5PQXV0aDIoCiAgWU9VUl9DTElFTlRfSUQsCiAgWU9VUl9D
TElFTlRfU0VDUkVULAogIFlPVVJfUkVESVJFQ1RfVVJMCik7CgovLyBnZW5l
cmF0ZSBhIHVybCB0aGF0IGFza3MgcGVybWlzc2lvbnMgZm9yIEJsb2dnZXIg
YW5kIEdvb2dsZSBDYWxlbmRhciBzY29wZXMKY29uc3Qgc2NvcGVzID0gWwog
ICdodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Jsb2dnZXInLAog
ICdodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2NhbGVuZGFyJwpd
OwoKY29uc3QgdXJsID0gb2F1dGgyQ2xpZW50LmdlbmVyYXRlQXV0aFVybCh7
CiAgLy8gJ29ubGluZScgKGRlZmF1bHQpIG9yICdvZmZsaW5lJyAoZ2V0cyBy
ZWZyZXNoX3Rva2VuKQogIGFjY2Vzc190eXBlOiAnb2ZmbGluZScsCgogIC8v
IElmIHlvdSBvbmx5IG5lZWQgb25lIHNjb3BlIHlvdSBjYW4gcGFzcyBpdCBh
cyBhIHN0cmluZwogIHNjb3BlOiBzY29wZXMKfSk7CmBgYAoKKipJTVBPUlRB
TlQgTk9URSoqIC0gVGhlIGByZWZyZXNoX3Rva2VuYCBpcyBvbmx5IHJldHVy
bmVkIG9uIHRoZSBmaXJzdCBhdXRob3JpemF0aW9uLiBNb3JlIGRldGFpbHMg
W2hlcmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9nb29nbGVhcGlzL2dvb2dsZS1h
cGktbm9kZWpzLWNsaWVudC9pc3N1ZXMvNzUwI2lzc3VlY29tbWVudC0zMDQ1
MjE0NTApLgoKIyMjIyBSZXRyaWV2ZSBhdXRob3JpemF0aW9uIGNvZGUKCk9u
Y2UgYSB1c2VyIGhhcyBnaXZlbiBwZXJtaXNzaW9ucyBvbiB0aGUgY29uc2Vu
dCBwYWdlLCBHb29nbGUgd2lsbCByZWRpcmVjdCB0aGUgcGFnZSB0byB0aGUg
cmVkaXJlY3QgVVJMIHlvdSBoYXZlIHByb3ZpZGVkIHdpdGggYSBjb2RlIHF1
ZXJ5IHBhcmFtZXRlci4KCiAgICBHRVQgL29hdXRoY2FsbGJhY2s/Y29kZT17
YXV0aG9yaXphdGlvbkNvZGV9CgojIyMjIFJldHJpZXZlIGFjY2VzcyB0b2tl
bgoKV2l0aCB0aGUgY29kZSByZXR1cm5lZCwgeW91IGNhbiBhc2sgZm9yIGFu
IGFjY2VzcyB0b2tlbiBhcyBzaG93biBiZWxvdzoKCmBgYCBqcwovLyBUaGlz
IHdpbGwgcHJvdmlkZSBhbiBvYmplY3Qgd2l0aCB0aGUgYWNjZXNzX3Rva2Vu
IGFuZCByZWZyZXNoX3Rva2VuLgovLyBTYXZlIHRoZXNlIHNvbWV3aGVyZSBz
YWZlIHNvIHRoZXkgY2FuIGJlIHVzZWQgYXQgYSBsYXRlciB0aW1lLgpjb25z
dCB7dG9rZW5zfSA9IGF3YWl0IG9hdXRoMkNsaWVudC5nZXRUb2tlbihjb2Rl
KQpvYXV0aDJDbGllbnQuc2V0Q3JlZGVudGlhbHModG9rZW5zKTsKYGBgCgpX
aXRoIHRoZSBjcmVkZW50aWFscyBzZXQgb24geW91ciBPQXV0aDIgY2xpZW50
IC0geW91J3JlIHJlYWR5IHRvIGdvIQoKIyMjIyBIYW5kbGluZyByZWZyZXNo
IHRva2VucwpBY2Nlc3MgdG9rZW5zIGV4cGlyZS4gVGhpcyBsaWJyYXJ5IHdp
bGwgYXV0b21hdGljYWxseSB1c2UgYSByZWZyZXNoIHRva2VuIHRvIG9idGFp
biBhIG5ldyBhY2Nlc3MgdG9rZW4gaWYgaXQgaXMgYWJvdXQgdG8gZXhwaXJl
LiBBbiBlYXN5IHdheSB0byBtYWtlIHN1cmUgeW91IGFsd2F5cyBzdG9yZSB0
aGUgbW9zdCByZWNlbnQgdG9rZW5zIGlzIHRvIHVzZSB0aGUgYHRva2Vuc2Ag
ZXZlbnQ6CgpgYGBqcwpvYXV0aDJDbGllbnQub24oJ3Rva2VucycsICh0b2tl
bnMpID0+IHsKICBpZiAodG9rZW5zLnJlZnJlc2hfdG9rZW4pIHsKICAgIC8v
IHN0b3JlIHRoZSByZWZyZXNoX3Rva2VuIGluIG15IGRhdGFiYXNlIQogICAg
Y29uc29sZS5sb2codG9rZW5zLnJlZnJlc2hfdG9rZW4pOwogIH0KICBjb25z
b2xlLmxvZyh0b2tlbnMuYWNjZXNzX3Rva2VuKTsKfSk7CmBgYAoKVG8gc2V0
IHRoZSBgcmVmcmVzaF90b2tlbmAgYXQgYSBsYXRlciB0aW1lLCB5b3UgY2Fu
IHVzZSB0aGUgYHNldENyZWRlbnRpYWxzYCBtZXRob2Q6CgpgYGBqcwpvYXV0
aDJDbGllbnQuc2V0Q3JlZGVudGlhbHMoewogIHJlZnJlc2hfdG9rZW46IGBT
VE9SRURfUkVGUkVTSF9UT0tFTmAKfSk7CmBgYAoKT25jZSB0aGUgY2xpZW50
IGhhcyBhIHJlZnJlc2ggdG9rZW4sIGFjY2VzcyB0b2tlbnMgd2lsbCBiZSBh
Y3F1aXJlZCBhbmQgcmVmcmVzaGVkIGF1dG9tYXRpY2FsbHkgaW4gdGhlIG5l
eHQgY2FsbCB0byB0aGUgQVBJLgoKIyMjIFVzaW5nIEFQSSBrZXlzCllvdSBt
YXkgbmVlZCB0byBzZW5kIGFuIEFQSSBrZXkgd2l0aCB0aGUgcmVxdWVzdCB5
b3UgYXJlIGdvaW5nIHRvIG1ha2UuIFRoZSBmb2xsb3dpbmcgdXNlcyBhbiBB
UEkga2V5IHRvIG1ha2UgYSByZXF1ZXN0IHRvIHRoZSBCbG9nZ2VyIEFQSSBz
ZXJ2aWNlIHRvIHJldHJpZXZlIGEgYmxvZydzIG5hbWUsIHVybCwgYW5kIGl0
cyB0b3RhbCBhbW91bnQgb2YgcG9zdHM6CgpgYGAganMKY29uc3Qge2dvb2ds
ZX0gPSByZXF1aXJlKCdnb29nbGVhcGlzJyk7CmNvbnN0IGJsb2dnZXIgPSBn
b29nbGUuYmxvZ2dlcl92Myh7CiAgdmVyc2lvbjogJ3YzJywKICBhdXRoOiAn
WU9VUl9BUElfS0VZJyAvLyBzcGVjaWZ5IHlvdXIgQVBJIGtleSBoZXJlCn0p
OwoKY29uc3QgcGFyYW1zID0gewogIGJsb2dJZDogMzIxMzkwMAp9OwoKYXN5
bmMgZnVuY3Rpb24gbWFpbihwYXJhbXMpIHsKICBjb25zdCByZXMgPSBhd2Fp
dCBibG9nZ2VyLmJsb2dzLmdldCh7YmxvZ0lkOiBwYXJhbXMuYmxvZ0lkfSk7
CiAgY29uc29sZS5sb2coYCR7cmVzLmRhdGEubmFtZX0gaGFzICR7cmVzLmRh
dGEucG9zdHMudG90YWxJdGVtc30gcG9zdHMhIFRoZSBibG9nIHVybCBpcyAk
e3Jlcy5kYXRhLnVybH1gKQp9OwoKbWFpbigpLmNhdGNoKGNvbnNvbGUuZXJy
b3IpOwpgYGAKClRvIGxlYXJuIG1vcmUgYWJvdXQgQVBJIGtleXMsIHBsZWFz
ZSBzZWUgdGhlIFtkb2N1bWVudGF0aW9uXVt1c2luZ2tleXNdLgoKIyMjIyBT
ZXJ2aWNlIHRvIFNlcnZpY2UgQXV0aGVudGljYXRpb24KClJhdGhlciB0aGFu
IG1hbnVhbGx5IGNyZWF0aW5nIGFuIE9BdXRoMiBjbGllbnQsIEpXVCBjbGll
bnQsIG9yIENvbXB1dGUgY2xpZW50LCB0aGUgYXV0aCBsaWJyYXJ5IGNhbiBj
cmVhdGUgdGhlIGNvcnJlY3QgY3JlZGVudGlhbCB0eXBlIGZvciB5b3UsIGRl
cGVuZGluZyB1cG9uIHRoZSBlbnZpcm9ubWVudCB5b3VyIGNvZGUgaXMgcnVu
bmluZyB1bmRlci4KCkZvciBleGFtcGxlLCBhIEpXVCBhdXRoIGNsaWVudCB3
aWxsIGJlIGNyZWF0ZWQgd2hlbiB5b3VyIGNvZGUgaXMgcnVubmluZyBvbiB5
b3VyIGxvY2FsIGRldmVsb3BlciBtYWNoaW5lLCBhbmQgYSBDb21wdXRlIGNs
aWVudCB3aWxsIGJlIGNyZWF0ZWQgd2hlbiB0aGUgc2FtZSBjb2RlIGlzIHJ1
bm5pbmcgb24gYSBjb25maWd1cmVkIGluc3RhbmNlIG9mIEdvb2dsZSBDb21w
dXRlIEVuZ2luZS4KClRoZSBjb2RlIGJlbG93IHNob3dzIGhvdyB0byByZXRy
aWV2ZSBhIGRlZmF1bHQgY3JlZGVudGlhbCB0eXBlLCBkZXBlbmRpbmcgdXBv
biB0aGUgcnVudGltZSBlbnZpcm9ubWVudC4gVGhlIGNyZWF0ZVNjb3BlZFJl
cXVpcmVkIG11c3QgYmUgY2FsbGVkIHRvIGRldGVybWluZSB3aGVuIHlvdSBu
ZWVkIHRvIHBhc3MgaW4gdGhlIHNjb3BlcyBtYW51YWxseSwgYW5kIHdoZW4g
dGhleSBoYXZlIGJlZW4gc2V0IGZvciB5b3UgYXV0b21hdGljYWxseSBiYXNl
ZCBvbiB0aGUgY29uZmlndXJlZCBydW50aW1lIGVudmlyb25tZW50LgoKYGBg
anMKY29uc3Qge2dvb2dsZX0gPSByZXF1aXJlKCdnb29nbGVhcGlzJyk7CmNv
bnN0IGNvbXB1dGUgPSBnb29nbGUuY29tcHV0ZSgndjEnKTsKCmFzeW5jIGZ1
bmN0aW9uIG1haW4gKCkgewogIC8vIFRoaXMgbWV0aG9kIGxvb2tzIGZvciB0
aGUgR0NMT1VEX1BST0pFQ1QgYW5kIEdPT0dMRV9BUFBMSUNBVElPTl9DUkVE
RU5USUFMUwogIC8vIGVudmlyb25tZW50IHZhcmlhYmxlcy4KICBjb25zdCBh
dXRoID0gbmV3IGdvb2dsZS5hdXRoLkdvb2dsZUF1dGgoewogICAgLy8gU2Nv
cGVzIGNhbiBiZSBzcGVjaWZpZWQgZWl0aGVyIGFzIGFuIGFycmF5IG9yIGFz
IGEgc2luZ2xlLCBzcGFjZS1kZWxpbWl0ZWQgc3RyaW5nLgogICAgc2NvcGVz
OiBbJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY29tcHV0ZSdd
CiAgfSk7CiAgY29uc3QgYXV0aENsaWVudCA9IGF3YWl0IGF1dGguZ2V0Q2xp
ZW50KCk7CgogIC8vIG9idGFpbiB0aGUgY3VycmVudCBwcm9qZWN0IElkCiAg
Y29uc3QgcHJvamVjdCA9IGF3YWl0IGF1dGguZ2V0UHJvamVjdElkKCk7Cgog
IC8vIEZldGNoIHRoZSBsaXN0IG9mIEdDRSB6b25lcyB3aXRoaW4gYSBwcm9q
ZWN0LgogIGNvbnN0IHJlcyA9IGF3YWl0IGNvbXB1dGUuem9uZXMubGlzdCh7
IHByb2plY3QsIGF1dGg6IGF1dGhDbGllbnQgfSk7CiAgY29uc29sZS5sb2co
cmVzLmRhdGEpOwp9CgptYWluKCkuY2F0Y2goY29uc29sZS5lcnJvcik7CmBg
YAoKIyMjIFNldHRpbmcgZ2xvYmFsIG9yIHNlcnZpY2UtbGV2ZWwgYXV0aAoK
WW91IGNhbiBzZXQgdGhlIGBhdXRoYCBhcyBhIGdsb2JhbCBvciBzZXJ2aWNl
LWxldmVsIG9wdGlvbiBzbyB5b3UgZG9uJ3QgbmVlZCB0byBzcGVjaWZ5IGl0
IGV2ZXJ5IHJlcXVlc3QuIEZvciBleGFtcGxlLCB5b3UgY2FuIHNldCBgYXV0
aGAgYXMgYSBnbG9iYWwgb3B0aW9uOgoKYGBgIGpzCmNvbnN0IHtnb29nbGV9
ID0gcmVxdWlyZSgnZ29vZ2xlYXBpcycpOwoKY29uc3Qgb2F1dGgyQ2xpZW50
ID0gbmV3IGdvb2dsZS5hdXRoLk9BdXRoMigKICBZT1VSX0NMSUVOVF9JRCwK
ICBZT1VSX0NMSUVOVF9TRUNSRVQsCiAgWU9VUl9SRURJUkVDVF9VUkwKKTsK
Ci8vIHNldCBhdXRoIGFzIGEgZ2xvYmFsIGRlZmF1bHQKZ29vZ2xlLm9wdGlv
bnMoewogIGF1dGg6IG9hdXRoMkNsaWVudAp9KTsKYGBgCgpJbnN0ZWFkIG9m
IHNldHRpbmcgdGhlIG9wdGlvbiBnbG9iYWxseSwgeW91IGNhbiBhbHNvIHNl
dCB0aGUgYXV0aGVudGljYXRpb24gY2xpZW50IGF0IHRoZSBzZXJ2aWNlLWxl
dmVsOgoKYGBgIGpzCmNvbnN0IHtnb29nbGV9ID0gcmVxdWlyZSgnZ29vZ2xl
YXBpcycpOwpjb25zdCBvYXV0aDJDbGllbnQgPSBuZXcgZ29vZ2xlLmF1dGgu
T0F1dGgyKAogIFlPVVJfQ0xJRU5UX0lELAogIFlPVVJfQ0xJRU5UX1NFQ1JF
VCwKICBZT1VSX1JFRElSRUNUX1VSTAopOwoKY29uc3QgZHJpdmUgPSBnb29n
bGUuZHJpdmUoewogIHZlcnNpb246ICd2MicsCiAgYXV0aDogb2F1dGgyQ2xp
ZW50Cn0pOwpgYGAKClNlZSB0aGUgW09wdGlvbnMgc2VjdGlvbl0oI3JlcXVl
c3Qtb3B0aW9ucykgZm9yIG1vcmUgaW5mb3JtYXRpb24uCgojIyBVc2FnZQoK
IyMjIFNwZWNpZnlpbmcgcmVxdWVzdCBib2R5CgpUaGUgYm9keSBvZiB0aGUg
cmVxdWVzdCBpcyBzcGVjaWZpZWQgaW4gdGhlIGByZXF1ZXN0Qm9keWAgcGFy
YW1ldGVyIG9iamVjdCBvZiB0aGUgcmVxdWVzdC4gVGhlIGJvZHkgaXMgc3Bl
Y2lmaWVkIGFzIGEgSmF2YVNjcmlwdCBvYmplY3Qgd2l0aCBrZXkvdmFsdWUg
cGFpcnMuIEZvciBleGFtcGxlLCB0aGlzIHNhbXBsZSBjcmVhdGVzIGEgd2F0
Y2hlciB0aGF0IHBvc3RzIG5vdGlmaWNhdGlvbnMgdG8gYSBHb29nbGUgQ2xv
dWQgUHViL1N1YiB0b3BpYyB3aGVuIGVtYWlscyBhcmUgc2VudCB0byBhIGdt
YWlsIGFjY291bnQ6CgpgYGBqcwpjb25zdCByZXMgPSBhd2FpdCBnbWFpbC51
c2Vycy53YXRjaCh7CiAgdXNlcklkOiAnbWUnLAogIHJlcXVlc3RCb2R5OiB7
CiAgICAvLyBSZXBsYWNlIHdpdGggYHByb2plY3RzLyR7UFJPSkVDVF9JRH0v
dG9waWNzLyR7VE9QSUNfTkFNRX1gCiAgICB0b3BpY05hbWU6IGBwcm9qZWN0
cy9lbC1nYXRvL3RvcGljcy9nbWFpbGAKICB9Cn0pOwpjb25zb2xlLmxvZyhy
ZXMuZGF0YSk7CmBgYAoKIyMjIE1lZGlhIHVwbG9hZHMKVGhpcyBjbGllbnQg
c3VwcG9ydHMgbXVsdGlwYXJ0IG1lZGlhIHVwbG9hZHMuIFRoZSByZXNvdXJj
ZSBwYXJhbWV0ZXJzIGFyZSBzcGVjaWZpZWQgaW4gdGhlIGByZXF1ZXN0Qm9k
eWAgcGFyYW1ldGVyIG9iamVjdCwgYW5kIHRoZSBtZWRpYSBpdHNlbGYgaXMg
c3BlY2lmaWVkIGluIHRoZSBgbWVkaWEuYm9keWAgcGFyYW1ldGVyIHdpdGgg
bWltZS10eXBlIHNwZWNpZmllZCBpbiBgbWVkaWEubWltZVR5cGVgLgoKVGhp
cyBleGFtcGxlIHVwbG9hZHMgYSBwbGFpbiB0ZXh0IGZpbGUgdG8gR29vZ2xl
IERyaXZlIHdpdGggdGhlIHRpdGxlICJUZXN0IiBhbmQgY29udGVudHMgIkhl
bGxvIFdvcmxkIi4KCmBgYCBqcwpjb25zdCBkcml2ZSA9IGdvb2dsZS5kcml2
ZSh7CiAgdmVyc2lvbjogJ3YzJywKICBhdXRoOiBvYXV0aDJDbGllbnQKfSk7
Cgpjb25zdCByZXMgPSBhd2FpdCBkcml2ZS5maWxlcy5jcmVhdGUoewogIHJl
cXVlc3RCb2R5OiB7CiAgICBuYW1lOiAnVGVzdCcsCiAgICBtaW1lVHlwZTog
J3RleHQvcGxhaW4nCiAgfSwKICBtZWRpYTogewogICAgbWltZVR5cGU6ICd0
ZXh0L3BsYWluJywKICAgIGJvZHk6ICdIZWxsbyBXb3JsZCcKICB9Cn0pOwpg
YGAKCllvdSBjYW4gYWxzbyB1cGxvYWQgbWVkaWEgYnkgc3BlY2lmeWluZyBg
bWVkaWEuYm9keWAgYXMgYSBbUmVhZGFibGUgc3RyZWFtXVtzdHJlYW1dLiBU
aGlzIGNhbiBhbGxvdyB5b3UgdG8gdXBsb2FkIHZlcnkgbGFyZ2UgZmlsZXMg
dGhhdCBjYW5ub3QgZml0IGludG8gbWVtb3J5LgoKYGBganMKY29uc3QgZnMg
PSByZXF1aXJlKCdmcycpOwoKY29uc3QgZHJpdmUgPSBnb29nbGUuZHJpdmUo
ewogIHZlcnNpb246ICd2MycsCiAgYXV0aDogb2F1dGgyQ2xpZW50Cn0pOwoK
YXN5bmMgZnVuY3Rpb24gbWFpbigpIHsKICBjb25zdCByZXMgPSBhd2FpdCBk
cml2ZS5maWxlcy5jcmVhdGUoewogICAgcmVxdWVzdEJvZHk6IHsKICAgICAg
bmFtZTogJ3Rlc3RpbWFnZS5wbmcnLAogICAgICBtaW1lVHlwZTogJ2ltYWdl
L3BuZycKICAgIH0sCiAgICBtZWRpYTogewogICAgICBtaW1lVHlwZTogJ2lt
YWdlL3BuZycsCiAgICAgIGJvZHk6IGZzLmNyZWF0ZVJlYWRTdHJlYW0oJ2F3
ZXNvbWUucG5nJykKICAgIH0KICB9KTsKICBjb25zb2xlLmxvZyhyZXMuZGF0
YSk7Cn0KCm1haW4oKS5jYXRjaChjb25zb2xlLmVycm9yKTsKYGBgCgpGb3Ig
bW9yZSBleGFtcGxlcyBvZiBjcmVhdGlvbiBhbmQgbW9kaWZpY2F0aW9uIHJl
cXVlc3RzIHdpdGggbWVkaWEgYXR0YWNobWVudHMsIHRha2UgYSBsb29rIGF0
IHRoZSBgc2FtcGxlcy9kcml2ZS91cGxvYWQuanNgIHNhbXBsZS4KCiMjIyBS
ZXF1ZXN0IE9wdGlvbnMKRm9yIG1vcmUgZmluZS10dW5lZCBjb250cm9sIG92
ZXIgaG93IHlvdXIgQVBJIGNhbGxzIGFyZSBtYWRlLCB3ZSBwcm92aWRlIHlv
dSB3aXRoIHRoZSBhYmlsaXR5IHRvIHNwZWNpZnkgYWRkaXRpb25hbCBvcHRp
b25zIHRoYXQgY2FuIGJlIGFwcGxpZWQgZGlyZWN0bHkgdG8gdGhlIFsnZ2F4
aW9zJ11bZ2F4aW9zXSBvYmplY3QgdXNlZCBpbiB0aGlzIGxpYnJhcnkgdG8g
bWFrZSBuZXR3b3JrIGNhbGxzIHRvIHRoZSBBUEkuCgpZb3UgbWF5IHNwZWNp
ZnkgYWRkaXRpb25hbCBvcHRpb25zIGVpdGhlciBpbiB0aGUgZ2xvYmFsIGBn
b29nbGVgIG9iamVjdCBvciBvbiBhIHNlcnZpY2UgY2xpZW50IGJhc2lzLiAg
VGhlIG9wdGlvbnMgeW91IHNwZWNpZnkgYXJlIGF0dGFjaGVkIHRvIHRoZSBg
Z2F4aW9zYCBvYmplY3Qgc28gd2hhdGV2ZXIgYGdheGlvc2Agc3VwcG9ydHMs
IHRoaXMgbGlicmFyeSBzdXBwb3J0cy4gWW91IG1heSBhbHNvIHNwZWNpZnkg
Z2xvYmFsIG9yIHBlci1zZXJ2aWNlIHJlcXVlc3QgcGFyYW1ldGVycyB0aGF0
IHdpbGwgYmUgYXR0YWNoZWQgdG8gYWxsIEFQSSBjYWxscyB5b3UgbWFrZS4K
CkEgZnVsbCBsaXN0IG9mIHN1cHBvcnRlZCBvcHRpb25zIGNhbiBiZSBbZm91
bmQgaGVyZV1bcmVxdWVzdG9wdHNdLgoKIyMjIyBHbG9iYWwgb3B0aW9ucwpZ
b3UgY2FuIGNob29zZSBkZWZhdWx0IG9wdGlvbnMgdGhhdCB3aWxsIGJlIHNl
bnQgd2l0aCBlYWNoIHJlcXVlc3QuIFRoZXNlIG9wdGlvbnMgd2lsbCBiZSB1
c2VkIGZvciBldmVyeSBzZXJ2aWNlIGluc3RhbnRpYXRlZCBieSB0aGUgZ29v
Z2xlIGNsaWVudC4gSW4gdGhpcyBleGFtcGxlLCB0aGUgYHRpbWVvdXRgIHBy
b3BlcnR5IG9mIGBHYXhpb3NPcHRpb25zYCB3aWxsIGJlIHNldCBmb3IgZXZl
cnkgcmVxdWVzdDoKCmBgYGpzCmNvbnN0IHtnb29nbGV9ID0gcmVxdWlyZSgn
Z29vZ2xlYXBpcycpOwpnb29nbGUub3B0aW9ucyh7CiAgLy8gQWxsIHJlcXVl
c3RzIG1hZGUgd2l0aCB0aGlzIG9iamVjdCB3aWxsIHVzZSB0aGVzZSBzZXR0
aW5ncyB1bmxlc3Mgb3ZlcnJpZGRlbi4KICB0aW1lb3V0OiAxMDAwLAogIGF1
dGg6IGF1dGgKfSk7CmBgYAoKWW91IGNhbiBhbHNvIG1vZGlmeSB0aGUgcGFy
YW1ldGVycyBzZW50IHdpdGggZWFjaCByZXF1ZXN0OgoKYGBganMKY29uc3Qg
e2dvb2dsZX0gPSByZXF1aXJlKCdnb29nbGVhcGlzJyk7Cmdvb2dsZS5vcHRp
b25zKHsKICAvLyBBbGwgcmVxdWVzdHMgZnJvbSBhbGwgc2VydmljZXMgd2ls
bCBjb250YWluIHRoZSBhYm92ZSBxdWVyeSBwYXJhbWV0ZXIKICAvLyB1bmxl
c3Mgb3ZlcnJpZGRlbiBlaXRoZXIgaW4gYSBzZXJ2aWNlIGNsaWVudCBvciBp
biBpbmRpdmlkdWFsIEFQSSBjYWxscy4KICBwYXJhbXM6IHsKICAgIHF1b3Rh
VXNlcjogJ3VzZXIxMjNAZXhhbXBsZS5jb20nCiAgfQp9KTsKYGBgCgojIyMj
IFNlcnZpY2UtY2xpZW50IG9wdGlvbnMKCllvdSBjYW4gYWxzbyBzcGVjaWZ5
IG9wdGlvbnMgd2hlbiBjcmVhdGluZyBhIHNlcnZpY2UgY2xpZW50LgoKYGBg
anMKY29uc3QgYmxvZ2dlciA9IGdvb2dsZS5ibG9nZ2VyKHsKICB2ZXJzaW9u
OiAndjMnLAogIC8vIEFsbCByZXF1ZXN0cyBtYWRlIHdpdGggdGhpcyBvYmpl
Y3Qgd2lsbCB1c2UgdGhlIHNwZWNpZmllZCBhdXRoLgogIGF1dGg6ICdBUEkg
S0VZJzsKfSk7CmBgYAoKQnkgZG9pbmcgdGhpcywgZXZlcnkgQVBJIGNhbGwg
bWFkZSB3aXRoIHRoaXMgc2VydmljZSBjbGllbnQgd2lsbCB1c2UgYCdBUEkg
S0VZJ2AgdG8gYXV0aGVudGljYXRlLgoKKipOb3RlOioqIENyZWF0ZWQgY2xp
ZW50cyBhcmUgKippbW11dGFibGUqKiBzbyB5b3UgbXVzdCBjcmVhdGUgYSBu
ZXcgb25lIGlmIHlvdSB3YW50IHRvIHNwZWNpZnkgZGlmZmVyZW50IG9wdGlv
bnMuCgpTaW1pbGFyIHRvIHRoZSBleGFtcGxlcyBhYm92ZSwgeW91IGNhbiBh
bHNvIG1vZGlmeSB0aGUgcGFyYW1ldGVycyB1c2VkIGZvciBldmVyeSBjYWxs
IG9mIGEgZ2l2ZW4gc2VydmljZToKCmBgYGpzCmNvbnN0IGJsb2dnZXIgPSBn
b29nbGUuYmxvZ2dlcih7CiAgdmVyc2lvbjogJ3YzJywKICAvLyBBbGwgcmVx
dWVzdHMgbWFkZSB3aXRoIHRoaXMgc2VydmljZSBjbGllbnQgd2lsbCBjb250
YWluIHRoZQogIC8vIGJsb2dJZCBxdWVyeSBwYXJhbWV0ZXIgdW5sZXNzIG92
ZXJyaWRkZW4gaW4gaW5kaXZpZHVhbCBBUEkgY2FsbHMuCiAgcGFyYW1zOiB7
CiAgICBibG9nSWQ6IDMyMTM5MDAKICB9Cn0pOwoKLy8gQ2FsbHMgd2l0aCB0
aGlzIGRyaXZlIGNsaWVudCB3aWxsIE5PVCBjb250YWluIHRoZSBibG9nSWQg
cXVlcnkgcGFyYW1ldGVyLgpjb25zdCBkcml2ZSA9IGdvb2dsZS5kcml2ZSgn
djMnKTsKLi4uCgpgYGAKCiMjIyMgUmVxdWVzdC1sZXZlbCBvcHRpb25zCllv
dSBjYW4gc3BlY2lmeSBhbiBgYXV0aGAgb2JqZWN0IHRvIGJlIHVzZWQgcGVy
IHJlcXVlc3QuIEVhY2ggcmVxdWVzdCBhbHNvIGluaGVyaXRzIHRoZSBvcHRp
b25zIHNwZWNpZmllZCBhdCB0aGUgc2VydmljZSBsZXZlbCBhbmQgZ2xvYmFs
IGxldmVsLgoKRm9yIGV4YW1wbGU6CgpgYGBqcwpjb25zdCB7Z29vZ2xlfSA9
IHJlcXVpcmUoJ2dvb2dsZWFwaXMnKTsKY29uc3QgYmlncXVlcnkgPSBnb29n
bGUuYmlncXVlcnkoJ3YyJyk7Cgphc3luYyBmdW5jdGlvbiBtYWluKCkgewoK
ICAvLyBUaGlzIG1ldGhvZCBsb29rcyBmb3IgdGhlIEdDTE9VRF9QUk9KRUNU
IGFuZCBHT09HTEVfQVBQTElDQVRJT05fQ1JFREVOVElBTFMKICAvLyBlbnZp
cm9ubWVudCB2YXJpYWJsZXMuCiAgY29uc3QgYXV0aCA9IG5ldyBnb29nbGUu
YXV0aC5Hb29nbGVBdXRoKHsKICAgIHNjb3BlczogWydodHRwczovL3d3dy5n
b29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3JtJ10KICB9KTsKICBj
b25zdCBhdXRoQ2xpZW50ID0gYXdhaXQgYXV0aC5nZXRDbGllbnQoKTsKCiAg
Y29uc3QgcHJvamVjdElkID0gYXdhaXQgYXV0aC5nZXRQcm9qZWN0SWQoKTsK
CiAgY29uc3QgcmVxdWVzdCA9IHsKICAgIHByb2plY3RJZCwKICAgIGRhdGFz
ZXRJZDogJzxZT1VSX0RBVEFTRVRfSUQ+JywKCiAgICAvLyBUaGlzIGlzIGEg
InJlcXVlc3QtbGV2ZWwiIG9wdGlvbgogICAgYXV0aDogYXV0aENsaWVudAog
IH07CgogIGNvbnN0IHJlcyA9IGF3YWl0IGJpZ3F1ZXJ5LmRhdGFzZXRzLmRl
bGV0ZShyZXF1ZXN0KTsKICBjb25zb2xlLmxvZyhyZXMuZGF0YSk7Cgp9Cgpt
YWluKCkuY2F0Y2goY29uc29sZS5lcnJvcik7CmBgYAoKWW91IGNhbiBhbHNv
IG92ZXJyaWRlICpnYXhpb3MqIG9wdGlvbnMgcGVyIHJlcXVlc3QsIHN1Y2gg
YXMgYHVybGAsIGBtZXRob2RgLCBhbmQgYHJlc3BvbnNlVHlwZWAuCgpGb3Ig
ZXhhbXBsZToKCmBgYGpzCmNvbnN0IHJlcyA9IGF3YWl0IGRyaXZlLmZpbGVz
LmV4cG9ydCh7CiAgZmlsZUlkOiAnYXN4S0pvZDlzNzknLCAvLyBBIEdvb2ds
ZSBEb2MKICBtaW1lVHlwZTogJ2FwcGxpY2F0aW9uL3BkZicKfSwgewogIC8v
IE1ha2Ugc3VyZSB3ZSBnZXQgdGhlIGJpbmFyeSBkYXRhCiAgcmVzcG9uc2VU
eXBlOiAnc3RyZWFtJwp9KTsKYGBgCgojIyMgVXNpbmcgYSBQcm94eQpZb3Ug
Y2FuIHVzZSB0aGUgZm9sbG93aW5nIGVudmlyb25tZW50IHZhcmlhYmxlcyB0
byBwcm94eSBIVFRQIGFuZCBIVFRQUyByZXF1ZXN0czoKCi0gYEhUVFBfUFJP
WFlgIC8gYGh0dHBfcHJveHlgCi0gYEhUVFBTX1BST1hZYCAvIGBodHRwc19w
cm94eWAKCldoZW4gSFRUUF9QUk9YWSAvIGh0dHBfcHJveHkgYXJlIHNldCwg
dGhleSB3aWxsIGJlIHVzZWQgdG8gcHJveHkgbm9uLVNTTCByZXF1ZXN0cyB0
aGF0IGRvIG5vdCBoYXZlIGFuIGV4cGxpY2l0IHByb3h5IGNvbmZpZ3VyYXRp
b24gb3B0aW9uIHByZXNlbnQuIFNpbWlsYXJseSwgSFRUUFNfUFJPWFkgLyBo
dHRwc19wcm94eSB3aWxsIGJlIHJlc3BlY3RlZCBmb3IgU1NMIHJlcXVlc3Rz
IHRoYXQgZG8gbm90IGhhdmUgYW4gZXhwbGljaXQgcHJveHkgY29uZmlndXJh
dGlvbiBvcHRpb24uIEl0IGlzIHZhbGlkIHRvIGRlZmluZSBhIHByb3h5IGlu
IG9uZSBvZiB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGVzLCBidXQgdGhlbiBv
dmVycmlkZSBpdCBmb3IgYSBzcGVjaWZpYyByZXF1ZXN0LCB1c2luZyB0aGUg
cHJveHkgY29uZmlndXJhdGlvbiBvcHRpb24uCgojIyMgR2V0dGluZyBTdXBw
b3J0ZWQgQVBJcwpZb3UgY2FuIHByb2dyYW1hdGljYWxseSBvYnRhaW4gdGhl
IGxpc3Qgb2Ygc3VwcG9ydGVkIEFQSXMsIGFuZCBhbGwgYXZhaWxhYmxlIHZl
cnNpb25zOgoKYGBganMKY29uc3Qge2dvb2dsZX0gPSByZXF1aXJlKCdnb29n
bGVhcGlzJyk7CmNvbnN0IGFwaXMgPSBnb29nbGUuZ2V0U3VwcG9ydGVkQVBJ
cygpOwpgYGAKClRoaXMgd2lsbCByZXR1cm4gYW4gb2JqZWN0IHdpdGggdGhl
IEFQSSBuYW1lIGFzIG9iamVjdCBwcm9wZXJ0eSBuYW1lcywgYW5kIGFuIGFy
cmF5IG9mIHZlcnNpb24gc3RyaW5ncyBhcyB0aGUgb2JqZWN0IHZhbHVlczsK
CiMjIyBUeXBlU2NyaXB0ClRoaXMgbGlicmFyeSBpcyB3cml0dGVuIGluIFR5
cGVTY3JpcHQsIGFuZCBwcm92aWRlcyB0eXBlcyBvdXQgb2YgdGhlIGJveC4g
QWxsIGNsYXNzZXMgYW5kIGludGVyZmFjZXMgZ2VuZXJhdGVkIGZvciBlYWNo
IEFQSSBhcmUgZXhwb3J0ZWQgdW5kZXIgdGhlIGAke2FwaU5hbWV9XyR7dmVy
c2lvbn1gIG5hbWVzcGFjZS4gIEZvciBleGFtcGxlLCB0aGUgRHJpdmUgdjMg
QVBJIHR5cGVzIGFyZSBhbGwgYXZhaWxhYmxlIGZyb20gdGhlIGBkcml2ZV92
M2AgbmFtZXNwYWNlOgoKYGBgdHMKaW1wb3J0IHsgZHJpdmVfdjMgfSBmcm9t
ICdnb29nbGVhcGlzJzsKYGBgCgojIyBSZWxlYXNlIE5vdGVzICYgQnJlYWtp
bmcgQ2hhbmdlcwpZb3UgY2FuIGZpbmQgYSBkZXRhaWxlZCBsaXN0IG9mIGJy
ZWFraW5nIGNoYW5nZXMgYW5kIG5ldyBmZWF0dXJlcyBpbiBvdXIgW1JlbGVh
c2UgTm90ZXNdW3JlbGVhc2Vub3Rlc10uIElmIHlvdSd2ZSB1c2VkIHRoaXMg
bGlicmFyeSBiZWZvcmUgYDI1LnhgLCBzZWUgb3VyIFtSZWxlYXNlIE5vdGVz
XVtyZWxlYXNlbm90ZXNdIHRvIGxlYXJuIGFib3V0IG1pZ3JhdGluZyB5b3Vy
IGNvZGUgZnJvbSBgMjQueC54YCB0byBgMjUueC54YC4gSXQncyBwcmV0dHkg
ZWFzeSA6KQoKIyMgTGljZW5zZQpUaGlzIGxpYnJhcnkgaXMgbGljZW5zZWQg
dW5kZXIgQXBhY2hlIDIuMC4gRnVsbCBsaWNlbnNlIHRleHQgaXMgYXZhaWxh
YmxlIGluIFtMSUNFTlNFXVtsaWNlbnNlXS4KCiMjIENvbnRyaWJ1dGluZwpX
ZSBsb3ZlIGNvbnRyaWJ1dGlvbnMhIEJlZm9yZSBzdWJtaXR0aW5nIGEgUHVs
bCBSZXF1ZXN0LCBpdCdzIGFsd2F5cyBnb29kIHRvIHN0YXJ0IHdpdGggYSBu
ZXcgaXNzdWUgZmlyc3QuIFRvIGxlYXJuIG1vcmUsIHNlZSBbQ09OVFJJQlVU
SU5HXVtjb250cmlidXRpbmddLgoKIyMgUXVlc3Rpb25zL3Byb2JsZW1zPwoq
IEFzayB5b3VyIGRldmVsb3BtZW50IHJlbGF0ZWQgcXVlc3Rpb25zIG9uIFtT
dGFja292ZXJmbG93XVtzdGFja292ZXJmbG93XS4KKiBJZiB5b3UndmUgZm91
bmQgYW4gYnVnL2lzc3VlLCBwbGVhc2UgW2ZpbGUgaXQgb24gR2l0SHViXVti
dWdzXS4KCgpbc255ay1pbWFnZV06IGh0dHBzOi8vc255ay5pby90ZXN0L2dp
dGh1Yi9nb29nbGVhcGlzL2dvb2dsZS1hcGktbm9kZWpzLWNsaWVudC9iYWRn
ZS5zdmcKW3NueWstdXJsXTogaHR0cHM6Ly9zbnlrLmlvL3Rlc3QvZ2l0aHVi
L2dvb2dsZWFwaXMvZ29vZ2xlLWFwaS1ub2RlanMtY2xpZW50CltkYXZpZC1p
bWFnZV06IGh0dHBzOi8vZGF2aWQtZG0ub3JnL2dvb2dsZWFwaXMvZ29vZ2xl
LWFwaS1ub2RlanMtY2xpZW50LnN2ZwpbZGF2aWQtdXJsXTogaHR0cHM6Ly9k
YXZpZC1kbS5vcmcvZ29vZ2xlYXBpcy9nb29nbGUtYXBpLW5vZGVqcy1jbGll
bnQKW25wbWltZ106IGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vbnBtL3YvZ29v
Z2xlYXBpcy5zdmcKW25wbV06IGh0dHBzOi8vd3d3Lm5wbWpzLm9yZy9wYWNr
YWdlL2dvb2dsZWFwaXMKW2NpcmNsZV06IGh0dHBzOi8vY2lyY2xlY2kuY29t
L2doL2dvb2dsZWFwaXMvZ29vZ2xlLWFwaS1ub2RlanMtY2xpZW50CltjaXJj
bGVpbWddOiBodHRwczovL2NpcmNsZWNpLmNvbS9naC9nb29nbGVhcGlzL2dv
b2dsZS1hcGktbm9kZWpzLWNsaWVudC5zdmc/c3R5bGU9c2hpZWxkCltyZWxl
YXNlbGV2ZWxdOiBodHRwczovL2Nsb3VkLmdvb2dsZS5jb20vdGVybXMvbGF1
bmNoLXN0YWdlcwpbcmVsZWFzZWxldmVsaW1nXTogaHR0cHM6Ly9pbWcuc2hp
ZWxkcy5pby9iYWRnZS9SZWxlYXNlJTIwTGV2ZWwtQWxwaGEtZmY2OWI0LnN2
ZwpbYnVnc106IGh0dHBzOi8vZ2l0aHViLmNvbS9nb29nbGVhcGlzL2dvb2ds
ZS1hcGktbm9kZWpzLWNsaWVudC9pc3N1ZXMKW25vZGVdOiBodHRwOi8vbm9k
ZWpzLm9yZy8KW3N0YWNrb3ZlcmZsb3ddOiBodHRwOi8vc3RhY2tvdmVyZmxv
dy5jb20vcXVlc3Rpb25zL3RhZ2dlZC9nb29nbGUtYXBpLW5vZGVqcy1jbGll
bnQKW2FwaWV4cGxvcmVyXTogaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5j
b20vYXBpcy1leHBsb3JlcgpbdXNpbmdrZXlzXTogaHR0cHM6Ly9zdXBwb3J0
Lmdvb2dsZS5jb20vY2xvdWQvYW5zd2VyLzYxNTg4NjI/aGw9ZW4KW2NvbnRy
aWJ1dGluZ106IGh0dHBzOi8vZ2l0aHViLmNvbS9nb29nbGVhcGlzL2dvb2ds
ZS1hcGktbm9kZWpzLWNsaWVudC9ibG9iL21hc3Rlci9DT05UUklCVVRJTkcu
bWQKW2xpY2Vuc2VdOiBodHRwczovL2dpdGh1Yi5jb20vZ29vZ2xlYXBpcy9n
b29nbGUtYXBpLW5vZGVqcy1jbGllbnQvdHJlZS9tYXN0ZXIvTElDRU5TRQpb
YXV0aGRvY3NdOiBodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS9pZGVu
dGl0eS9wcm90b2NvbHMvT3BlbklEQ29ubmVjdApbZ2F4aW9zXTogaHR0cHM6
Ly9naXRodWIuY29tL0p1c3RpbkJlY2t3aXRoL2dheGlvcwpbc3RyZWFtXTog
aHR0cDovL25vZGVqcy5vcmcvYXBpL3N0cmVhbS5odG1sI3N0cmVhbV9jbGFz
c19zdHJlYW1fcmVhZGFibGUKW3JlbGVhc2Vub3Rlc106IGh0dHBzOi8vZ2l0
aHViLmNvbS9nb29nbGVhcGlzL2dvb2dsZS1hcGktbm9kZWpzLWNsaWVudC9y
ZWxlYXNlcwpbZGV2Y29uc29sZV06IGh0dHBzOi8vY29uc29sZS5jbG91ZC5n
b29nbGUuY29tL2FwaXMvY3JlZGVudGlhbHMKW29hdXRoXTogaHR0cHM6Ly9k
ZXZlbG9wZXJzLmdvb2dsZS5jb20vaWRlbnRpdHkvcHJvdG9jb2xzL09BdXRo
Mgpbb2F1dGhleGFtcGxlXTogaHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZWFw
aXMvZ29vZ2xlLWFwaS1ub2RlanMtY2xpZW50L3RyZWUvbWFzdGVyL3NhbXBs
ZXMvb2F1dGgyLmpzCltvcHRpb25zXTogaHR0cHM6Ly9naXRodWIuY29tL2dv
b2dsZWFwaXMvZ29vZ2xlLWFwaS1ub2RlanMtY2xpZW50L3RyZWUvbWFzdGVy
I29wdGlvbnMKW2dvb2dsZWNsb3VkXTogaHR0cHM6Ly9jbG91ZC5nb29nbGUu
Y29tL25vZGVqcy9kb2NzL3JlZmVyZW5jZS9saWJyYXJpZXMKW2dvb2dsZWNs
b3VkYXBpc106IGh0dHBzOi8vY2xvdWQuZ29vZ2xlLmNvbS9ub2RlanMvZG9j
cy9yZWZlcmVuY2UvYXBpcwpbY2xvdWRwbGF0Zm9ybV06IGh0dHBzOi8vY2xv
dWQuZ29vZ2xlLmNvbS9kb2NzLwpbY29kZWNvdmltZ106IGh0dHBzOi8vY29k
ZWNvdi5pby9naXRodWIvZ29vZ2xlYXBpcy9nb29nbGUtYXBpLW5vZGVqcy1j
bGllbnQvY292ZXJhZ2Uuc3ZnP2JyYW5jaD1tYXN0ZXIKW2NvZGVjb3ZdOiBo
dHRwczovL2NvZGVjb3YuaW8vZ2l0aHViL2dvb2dsZWFwaXMvZ29vZ2xlLWFw
aS1ub2RlanMtY2xpZW50P2JyYW5jaD1tYXN0ZXIKW2Rvd25sb2Fkc2ltZ106
IGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vbnBtL2RtL2dvb2dsZWFwaXMuc3Zn
Cltkb3dubG9hZHNdOiBodHRwczovL25vZGVpLmNvL25wbS9nb29nbGVhcGlz
Lwo=
",,8020,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'groupcache',11593442,"b'groupcache is a caching and cache-filling library, intended as a replacement for memcached in many cases.'",b'Go',24,8018,,458,False,b'https://api.github.com/repos/golang/groupcache/forks',"IyBncm91cGNhY2hlCgojIyBTdW1tYXJ5Cgpncm91cGNhY2hlIGlzIGEgZGlz
dHJpYnV0ZWQgY2FjaGluZyBhbmQgY2FjaGUtZmlsbGluZyBsaWJyYXJ5LCBp
bnRlbmRlZCBhcyBhCnJlcGxhY2VtZW50IGZvciBhIHBvb2wgb2YgbWVtY2Fj
aGVkIG5vZGVzIGluIG1hbnkgY2FzZXMuCgpGb3IgQVBJIGRvY3MgYW5kIGV4
YW1wbGVzLCBzZWUgaHR0cDovL2dvZG9jLm9yZy9naXRodWIuY29tL2dvbGFu
Zy9ncm91cGNhY2hlCgojIyBDb21wYXJpc29uIHRvIG1lbWNhY2hlZAoKIyMj
ICoqTGlrZSBtZW1jYWNoZWQqKiwgZ3JvdXBjYWNoZToKCiAqIHNoYXJkcyBi
eSBrZXkgdG8gc2VsZWN0IHdoaWNoIHBlZXIgaXMgcmVzcG9uc2libGUgZm9y
IHRoYXQga2V5CgojIyMgKipVbmxpa2UgbWVtY2FjaGVkKiosIGdyb3VwY2Fj
aGU6CgogKiBkb2VzIG5vdCByZXF1aXJlIHJ1bm5pbmcgYSBzZXBhcmF0ZSBz
ZXQgb2Ygc2VydmVycywgdGh1cyBtYXNzaXZlbHkKICAgcmVkdWNpbmcgZGVw
bG95bWVudC9jb25maWd1cmF0aW9uIHBhaW4uICBncm91cGNhY2hlIGlzIGEg
Y2xpZW50CiAgIGxpYnJhcnkgYXMgd2VsbCBhcyBhIHNlcnZlci4gIEl0IGNv
bm5lY3RzIHRvIGl0cyBvd24gcGVlcnMsIGZvcm1pbmcKICAgYSBkaXN0cmli
dXRlZCBjYWNoZS4KCiAqIGNvbWVzIHdpdGggYSBjYWNoZSBmaWxsaW5nIG1l
Y2hhbmlzbS4gIFdoZXJlYXMgbWVtY2FjaGVkIGp1c3Qgc2F5cwogICAiU29y
cnksIGNhY2hlIG1pc3MiLCBvZnRlbiByZXN1bHRpbmcgaW4gYSB0aHVuZGVy
aW5nIGhlcmQgb2YKICAgZGF0YWJhc2UgKG9yIHdoYXRldmVyKSBsb2FkcyBm
cm9tIGFuIHVuYm91bmRlZCBudW1iZXIgb2YgY2xpZW50cwogICAod2hpY2gg
aGFzIHJlc3VsdGVkIGluIHNldmVyYWwgZnVuIG91dGFnZXMpLCBncm91cGNh
Y2hlIGNvb3JkaW5hdGVzCiAgIGNhY2hlIGZpbGxzIHN1Y2ggdGhhdCBvbmx5
IG9uZSBsb2FkIGluIG9uZSBwcm9jZXNzIG9mIGFuIGVudGlyZQogICByZXBs
aWNhdGVkIHNldCBvZiBwcm9jZXNzZXMgcG9wdWxhdGVzIHRoZSBjYWNoZSwg
dGhlbiBtdWx0aXBsZXhlcwogICB0aGUgbG9hZGVkIHZhbHVlIHRvIGFsbCBj
YWxsZXJzLgoKICogZG9lcyBub3Qgc3VwcG9ydCB2ZXJzaW9uZWQgdmFsdWVz
LiAgSWYga2V5ICJmb28iIGlzIHZhbHVlICJiYXIiLAogICBrZXkgImZvbyIg
bXVzdCBhbHdheXMgYmUgImJhciIuICBUaGVyZSBhcmUgbmVpdGhlciBjYWNo
ZSBleHBpcmF0aW9uCiAgIHRpbWVzLCBub3IgZXhwbGljaXQgY2FjaGUgZXZp
Y3Rpb25zLiAgVGh1cyB0aGVyZSBpcyBhbHNvIG5vIENBUywKICAgbm9yIElu
Y3JlbWVudC9EZWNyZW1lbnQuICBUaGlzIGFsc28gbWVhbnMgdGhhdCBncm91
cGNhY2hlLi4uLgoKICogLi4uIHN1cHBvcnRzIGF1dG9tYXRpYyBtaXJyb3Jp
bmcgb2Ygc3VwZXItaG90IGl0ZW1zIHRvIG11bHRpcGxlCiAgIHByb2Nlc3Nl
cy4gIFRoaXMgcHJldmVudHMgbWVtY2FjaGVkIGhvdCBzcG90dGluZyB3aGVy
ZSBhIG1hY2hpbmUncwogICBDUFUgYW5kL29yIE5JQyBhcmUgb3ZlcmxvYWRl
ZCBieSB2ZXJ5IHBvcHVsYXIga2V5cy92YWx1ZXMuCgogKiBpcyBjdXJyZW50
bHkgb25seSBhdmFpbGFibGUgZm9yIEdvLiAgSXQncyB2ZXJ5IHVubGlrZWx5
IHRoYXQgSQogICAoYnJhZGZpdHpAKSB3aWxsIHBvcnQgdGhlIGNvZGUgdG8g
YW55IG90aGVyIGxhbmd1YWdlLgoKIyMgTG9hZGluZyBwcm9jZXNzCgpJbiBh
IG51dHNoZWxsLCBhIGdyb3VwY2FjaGUgbG9va3VwIG9mICoqR2V0KCJmb28i
KSoqIGxvb2tzIGxpa2U6CgooT24gbWFjaGluZSAjNSBvZiBhIHNldCBvZiBO
IG1hY2hpbmVzIHJ1bm5pbmcgdGhlIHNhbWUgY29kZSkKCiAxLiBJcyB0aGUg
dmFsdWUgb2YgImZvbyIgaW4gbG9jYWwgbWVtb3J5IGJlY2F1c2UgaXQncyBz
dXBlciBob3Q/ICBJZiBzbywgdXNlIGl0LgoKIDIuIElzIHRoZSB2YWx1ZSBv
ZiAiZm9vIiBpbiBsb2NhbCBtZW1vcnkgYmVjYXVzZSBwZWVyICM1ICh0aGUg
Y3VycmVudAogICAgcGVlcikgaXMgdGhlIG93bmVyIG9mIGl0PyAgSWYgc28s
IHVzZSBpdC4KCiAzLiBBbW9uZ3N0IGFsbCB0aGUgcGVlcnMgaW4gbXkgc2V0
IG9mIE4sIGFtIEkgdGhlIG93bmVyIG9mIHRoZSBrZXkKICAgICJmb28iPyAg
KGUuZy4gZG9lcyBpdCBjb25zaXN0ZW50IGhhc2ggdG8gNT8pICBJZiBzbywg
bG9hZCBpdC4gIElmCiAgICBvdGhlciBjYWxsZXJzIGNvbWUgaW4sIHZpYSB0
aGUgc2FtZSBwcm9jZXNzIG9yIHZpYSBSUEMgcmVxdWVzdHMKICAgIGZyb20g
cGVlcnMsIHRoZXkgYmxvY2sgd2FpdGluZyBmb3IgdGhlIGxvYWQgdG8gZmlu
aXNoIGFuZCBnZXQgdGhlCiAgICBzYW1lIGFuc3dlci4gIElmIG5vdCwgUlBD
IHRvIHRoZSBwZWVyIHRoYXQncyB0aGUgb3duZXIgYW5kIGdldAogICAgdGhl
IGFuc3dlci4gIElmIHRoZSBSUEMgZmFpbHMsIGp1c3QgbG9hZCBpdCBsb2Nh
bGx5IChzdGlsbCB3aXRoCiAgICBsb2NhbCBkdXAgc3VwcHJlc3Npb24pLgoK
IyMgVXNlcnMKCmdyb3VwY2FjaGUgaXMgaW4gcHJvZHVjdGlvbiB1c2UgYnkg
ZGwuZ29vZ2xlLmNvbSAoaXRzIG9yaWdpbmFsIHVzZXIpLApwYXJ0cyBvZiBC
bG9nZ2VyLCBwYXJ0cyBvZiBHb29nbGUgQ29kZSwgcGFydHMgb2YgR29vZ2xl
IEZpYmVyLCBwYXJ0cwpvZiBHb29nbGUgcHJvZHVjdGlvbiBtb25pdG9yaW5n
IHN5c3RlbXMsIGV0Yy4KCiMjIFByZXNlbnRhdGlvbnMKClNlZSBodHRwOi8v
dGFsa3MuZ29sYW5nLm9yZy8yMDEzL29zY29uLWRsLnNsaWRlCgojIyBIZWxw
CgpVc2UgdGhlIGdvbGFuZy1udXRzIG1haWxpbmcgbGlzdCBmb3IgYW55IGRp
c2N1c3Npb24gb3IgcXVlc3Rpb25zLgo=
",,8018,"bGFuZ3VhZ2U6IGdvCmdvX2ltcG9ydF9wYXRoOiBnaXRodWIuY29tL2dvbGFu
Zy9ncm91cGNhY2hlCgpvczogbGludXgKZGlzdDogdHJ1c3R5CnN1ZG86IGZh
bHNlCgpzY3JpcHQ6CiAgLSBnbyB0ZXN0IC4vLi4uCgpnbzoKICAtIDEuOS54
CiAgLSAxLjEwLngKICAtIDEuMTEueAogIC0gbWFzdGVyCgpjYWNoZToKICBk
aXJlY3RvcmllczoKICAgIC0gJEdPUEFUSC9wa2cK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'jib',118497841,b'\xf0\x9f\x8f\x97 Build container images for your Java applications.',b'Java',101,8011,,307,False,b'https://api.github.com/repos/GoogleContainerTools/jib/forks',"IVtzdGFibGVdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2Uvc3RhYmls
aXR5LXN0YWJsZS1icmlnaHRncmVlbi5zdmcpClshW01hdmVuIENlbnRyYWxd
KGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vbWF2ZW4tbWV0YWRhdGEvdi9odHRw
L2NlbnRyYWwubWF2ZW4ub3JnL21hdmVuMi9jb20vZ29vZ2xlL2Nsb3VkL3Rv
b2xzL2ppYi1tYXZlbi1wbHVnaW4vbWF2ZW4tbWV0YWRhdGEueG1sLnN2Zz9j
b2xvckI9MDA3ZWM2KV0oaHR0cHM6Ly9tYXZlbi1iYWRnZXMuaGVyb2t1YXBw
LmNvbS9tYXZlbi1jZW50cmFsL2NvbS5nb29nbGUuY2xvdWQudG9vbHMvamli
LW1hdmVuLXBsdWdpbikKWyFbR3JhZGxlIFBsdWdpbiBQb3J0YWxdKGh0dHBz
Oi8vaW1nLnNoaWVsZHMuaW8vbWF2ZW4tbWV0YWRhdGEvdi9odHRwcy9wbHVn
aW5zLmdyYWRsZS5vcmcvbTIvY29tL2dvb2dsZS9jbG91ZC90b29scy9qaWIv
Y29tLmdvb2dsZS5jbG91ZC50b29scy5qaWIuZ3JhZGxlLnBsdWdpbi9tYXZl
bi1tZXRhZGF0YS54bWwuc3ZnP2NvbG9yQj0wMDdlYzYmbGFiZWw9Z3JhZGxl
KV0oaHR0cHM6Ly9wbHVnaW5zLmdyYWRsZS5vcmcvcGx1Z2luL2NvbS5nb29n
bGUuY2xvdWQudG9vbHMuamliKQohW0J1aWxkIFN0YXR1c10oaHR0cHM6Ly9z
dG9yYWdlLmdvb2dsZWFwaXMuY29tL2Nsb3VkLXRvb2xzLWZvci1qYXZhLWtv
a29yby1idWlsZC1iYWRnZXMvamliLXVidW50dS1tYXN0ZXItb3JiLnN2ZykK
IVtCdWlsZCBTdGF0dXNdKGh0dHBzOi8vc3RvcmFnZS5nb29nbGVhcGlzLmNv
bS9jbG91ZC10b29scy1mb3ItamF2YS1rb2tvcm8tYnVpbGQtYmFkZ2VzL2pp
Yi13aW5kb3dzLW1hc3Rlci1vcmIuc3ZnKQohW0J1aWxkIFN0YXR1c10oaHR0
cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL2Nsb3VkLXRvb2xzLWZvci1q
YXZhLWtva29yby1idWlsZC1iYWRnZXMvamliLW1hY29zLW1hc3Rlci1vcmIu
c3ZnKQpbIVtHaXR0ZXIgdmVyc2lvbl0oaHR0cHM6Ly9pbWcuc2hpZWxkcy5p
by9naXR0ZXIvcm9vbS9naXR0ZXJIUS9naXR0ZXIuc3ZnKV0oaHR0cHM6Ly9n
aXR0ZXIuaW0vZ29vZ2xlL2ppYikKCiMgSmliCgo8aW1hZ2Ugc3JjPSJodHRw
czovL2dpdGh1Yi5jb20vR29vZ2xlQ29udGFpbmVyVG9vbHMvamliL3Jhdy9t
YXN0ZXIvbG9nby9qaWItYnVpbGQtZG9ja2VyLWphdmEtY29udGFpbmVyLWlt
YWdlLnBuZyIgYWx0PSJKaWIgLSBDb250YWluZXJpemUgeW91ciBKYXZhIGFw
cGxpY2F0aW9ucy4iIHdpZHRoPSI2NTBweCIgLz4KCgp8IOKYke+4jyAgSmli
IFVzZXIgU3VydmV5IHwKfCA6LS0tLS0gfAp8IFdoYXQgZG8geW91IGxpa2Ug
YmVzdCBhYm91dCBKaWI/IFdoYXQgbmVlZHMgdG8gYmUgaW1wcm92ZWQ/IFBs
ZWFzZSB0ZWxsIHVzIGJ5IHRha2luZyBhIFtvbmUtbWludXRlIHN1cnZleV0o
aHR0cHM6Ly9mb3Jtcy5nbGUvWVJGZWFtR2o1MXhtZ254MjgpLiBZb3VyIHJl
c3BvbnNlcyB3aWxsIGhlbHAgdXMgdW5kZXJzdGFuZCBKaWIgdXNhZ2UgYW5k
IGFsbG93IHVzIHRvIHNlcnZlIG91ciBjdXN0b21lcnMgKHlvdSEpIGJldHRl
ci4gfAoKIyMgV2hhdCBpcyBKaWI/CgpKaWIgYnVpbGRzIG9wdGltaXplZCBE
b2NrZXIgYW5kIFtPQ0ldKGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVuY29udGFp
bmVycy9pbWFnZS1zcGVjKSBpbWFnZXMgZm9yIHlvdXIgSmF2YSBhcHBsaWNh
dGlvbnMgd2l0aG91dCBhIERvY2tlciBkYWVtb24gLSBhbmQgd2l0aG91dCBk
ZWVwIG1hc3Rlcnkgb2YgRG9ja2VyIGJlc3QtcHJhY3RpY2VzLiBJdCBpcyBh
dmFpbGFibGUgYXMgcGx1Z2lucyBmb3IgW01hdmVuXShqaWItbWF2ZW4tcGx1
Z2luKSBhbmQgW0dyYWRsZV0oamliLWdyYWRsZS1wbHVnaW4pIGFuZCBhcyBh
IEphdmEgbGlicmFyeS4KCltNYXZlbl0oaHR0cHM6Ly9tYXZlbi5hcGFjaGUu
b3JnLyk6IFNlZSBkb2N1bWVudGF0aW9uIGZvciBbamliLW1hdmVuLXBsdWdp
bl0oamliLW1hdmVuLXBsdWdpbikuXApbR3JhZGxlXShodHRwczovL2dyYWRs
ZS5vcmcvKTogU2VlIGRvY3VtZW50YXRpb24gZm9yIFtqaWItZ3JhZGxlLXBs
dWdpbl0oamliLWdyYWRsZS1wbHVnaW4pLlwKW0ppYiBDb3JlXShqaWItY29y
ZSk6IEEgZ2VuZXJhbC1wdXJwb3NlIGNvbnRhaW5lci1idWlsZGluZyBsaWJy
YXJ5IGZvciBKYXZhLgoKRm9yIG1vcmUgaW5mb3JtYXRpb24sIGNoZWNrIG91
dCB0aGUgW29mZmljaWFsIGJsb2cgcG9zdF0oaHR0cHM6Ly9jbG91ZHBsYXRm
b3JtLmdvb2dsZWJsb2cuY29tLzIwMTgvMDcvaW50cm9kdWNpbmctamliLWJ1
aWxkLWphdmEtZG9ja2VyLWltYWdlcy1iZXR0ZXIuaHRtbCkgb3Igd2F0Y2gg
W3RoaXMgdGFsa10oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1I
NmdSX0N2NHlXSSkgKFtzbGlkZXNdKGh0dHBzOi8vc3BlYWtlcmRlY2suY29t
L2Nvb2xsb2cvYnVpbGQtY29udGFpbmVycy1mYXN0ZXItd2l0aC1qaWItYS1n
b29nbGUtaW1hZ2UtYnVpbGQtdG9vbC1mb3ItamF2YS1hcHBsaWNhdGlvbnMp
KS4KCiMjIEdvYWxzCgoqICoqRmFzdCoqIC0gRGVwbG95IHlvdXIgY2hhbmdl
cyBmYXN0LiBKaWIgc2VwYXJhdGVzIHlvdXIgYXBwbGljYXRpb24gaW50byBt
dWx0aXBsZSBsYXllcnMsIHNwbGl0dGluZyBkZXBlbmRlbmNpZXMgZnJvbSBj
bGFzc2VzLiBOb3cgeW91IGRvbuKAmXQgaGF2ZSB0byB3YWl0IGZvciBEb2Nr
ZXIgdG8gcmVidWlsZCB5b3VyIGVudGlyZSBKYXZhIGFwcGxpY2F0aW9uIC0g
anVzdCBkZXBsb3kgdGhlIGxheWVycyB0aGF0IGNoYW5nZWQuCgoqICoqUmVw
cm9kdWNpYmxlKiogLSBSZWJ1aWxkaW5nIHlvdXIgY29udGFpbmVyIGltYWdl
IHdpdGggdGhlIHNhbWUgY29udGVudHMgYWx3YXlzIGdlbmVyYXRlcyB0aGUg
c2FtZSBpbWFnZS4gTmV2ZXIgdHJpZ2dlciBhbiB1bm5lY2Vzc2FyeSB1cGRh
dGUgYWdhaW4uCgoqICoqRGFlbW9ubGVzcyoqIC0gUmVkdWNlIHlvdXIgQ0xJ
IGRlcGVuZGVuY2llcy4gQnVpbGQgeW91ciBEb2NrZXIgaW1hZ2UgZnJvbSB3
aXRoaW4gTWF2ZW4gb3IgR3JhZGxlIGFuZCBwdXNoIHRvIGFueSByZWdpc3Ry
eSBvZiB5b3VyIGNob2ljZS4gKk5vIG1vcmUgd3JpdGluZyBEb2NrZXJmaWxl
cyBhbmQgY2FsbGluZyBkb2NrZXIgYnVpbGQvcHVzaC4qCgojIyBRdWlja3N0
YXJ0CgoqICoqTWF2ZW4qKiAtIFNlZSB0aGUgamliLW1hdmVuLXBsdWdpbiBb
UXVpY2tzdGFydF0oamliLW1hdmVuLXBsdWdpbiNxdWlja3N0YXJ0KS4KCiog
KipHcmFkbGUqKiAtIFNlZSB0aGUgamliLWdyYWRsZS1wbHVnaW4gW1F1aWNr
c3RhcnRdKGppYi1ncmFkbGUtcGx1Z2luI3F1aWNrc3RhcnQpLgoKKiAqKkpp
YiBDb3JlKiogLSBTZWUgdGhlIEppYiBDb3JlIFtRdWlja3N0YXJ0XShqaWIt
Y29yZSNhZGRpbmctamliLWNvcmUtdG8teW91ci1idWlsZCkuCgojIyBFeGFt
cGxlcwoKVGhlIFtleGFtcGxlc10oZXhhbXBsZXMpIGRpcmVjdG9yeSBpbmNs
dWRlcyB0aGUgZm9sbG93aW5nIGV4YW1wbGVzIChhbmQgbW9yZSkuCiAgICog
W2hlbGxvd29ybGRdKGV4YW1wbGVzL2hlbGxvd29ybGQpCiAgICogW1Nwcmlu
ZyBCb290XShleGFtcGxlcy9zcHJpbmctYm9vdCkKICAgKiBbTWljcm9uYXV0
XShleGFtcGxlcy9taWNyb25hdXQpCiAgICogW011bHRpLW1vZHVsZSBwcm9q
ZWN0XShleGFtcGxlcy9tdWx0aS1tb2R1bGUpCiAgICogW1NwYXJrIEphdmEg
dXNpbmcgSmF2YSBBZ2VudF0oZXhhbXBsZXMvamF2YS1hZ2VudCkKCiMjIEhv
dyBKaWIgV29ya3MKCldoZXJlYXMgdHJhZGl0aW9uYWxseSBhIEphdmEgYXBw
bGljYXRpb24gaXMgYnVpbHQgYXMgYSBzaW5nbGUgaW1hZ2UgbGF5ZXIgd2l0
aCB0aGUgYXBwbGljYXRpb24gSkFSLCBKaWIncyBidWlsZCBzdHJhdGVneSBz
ZXBhcmF0ZXMgdGhlIEphdmEgYXBwbGljYXRpb24gaW50byBtdWx0aXBsZSBs
YXllcnMgZm9yIG1vcmUgZ3JhbnVsYXIgaW5jcmVtZW50YWwgYnVpbGRzLiBX
aGVuIHlvdSBjaGFuZ2UgeW91ciBjb2RlLCBvbmx5IHlvdXIgY2hhbmdlcyBh
cmUgcmVidWlsdCwgbm90IHlvdXIgZW50aXJlIGFwcGxpY2F0aW9uLiBUaGVz
ZSBsYXllcnMsIGJ5IGRlZmF1bHQsIGFyZSBsYXllcmVkIG9uIHRvcCBvZiBh
IFtkaXN0cm9sZXNzXShodHRwczovL2dpdGh1Yi5jb20vR29vZ2xlQ2xvdWRQ
bGF0Zm9ybS9kaXN0cm9sZXNzKSBiYXNlIGltYWdlLiBGb3IgbW9yZSBpbmZv
cm1hdGlvbiwgY2hlY2sgb3V0IHRoZSBbb2ZmaWNpYWwgYmxvZyBwb3N0XSho
dHRwczovL2Nsb3VkcGxhdGZvcm0uZ29vZ2xlYmxvZy5jb20vMjAxOC8wNy9p
bnRyb2R1Y2luZy1qaWItYnVpbGQtamF2YS1kb2NrZXItaW1hZ2VzLWJldHRl
ci5odG1sKSBvciB3YXRjaCBbdGhpcyB0YWxrXShodHRwczovL3d3dy55b3V0
dWJlLmNvbS93YXRjaD92PUg2Z1JfQ3Y0eVdJKSAoW3NsaWRlc10oaHR0cHM6
Ly9zcGVha2VyZGVjay5jb20vY29vbGxvZy9idWlsZC1jb250YWluZXJzLWZh
c3Rlci13aXRoLWppYi1hLWdvb2dsZS1pbWFnZS1idWlsZC10b29sLWZvci1q
YXZhLWFwcGxpY2F0aW9ucykpLgoKU2VlIGFsc28gW3J1bGVzX2RvY2tlcl0o
aHR0cHM6Ly9naXRodWIuY29tL2JhemVsYnVpbGQvcnVsZXNfZG9ja2VyKSBm
b3IgYSBzaW1pbGFyIGV4aXN0aW5nIGNvbnRhaW5lciBpbWFnZSBidWlsZCB0
b29sIGZvciB0aGUgW0JhemVsIGJ1aWxkIHN5c3RlbV0oaHR0cHM6Ly9naXRo
dWIuY29tL2JhemVsYnVpbGQvYmF6ZWwpLgoKIyMgRnJlcXVlbnRseSBBc2tl
ZCBRdWVzdGlvbnMgKEZBUSkKClNlZSB0aGUgW0ZyZXF1ZW50bHkgQXNrZWQg
UXVlc3Rpb25zIChGQVEpIHBhZ2VdKGRvY3MvZmFxLm1kKS4KCiMjIEdldCBp
bnZvbHZlZCB3aXRoIHRoZSBjb21tdW5pdHkKCldlIHdlbGNvbWUgY29udHJp
YnV0aW9ucyEgSGVyZSdzIGhvdyB5b3UgY2FuIGNvbnRyaWJ1dGU6CgoqIFtC
cm93c2UgaXNzdWVzXShodHRwczovL2dpdGh1Yi5jb20vR29vZ2xlQ29udGFp
bmVyVG9vbHMvamliL2lzc3Vlcykgb3IgW2ZpbGUgYW4gaXNzdWVdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9Hb29nbGVDb250YWluZXJUb29scy9qaWIvaXNzdWVz
L25ldykKKiBDaGF0IHdpdGggdXMgb24gW2dpdHRlcl0oaHR0cHM6Ly9naXR0
ZXIuaW0vZ29vZ2xlL2ppYikKKiBKb2luIHRoZSBbamliLXVzZXJzIG1haWxp
bmcgbGlzdF0oaHR0cHM6Ly9ncm91cHMuZ29vZ2xlLmNvbS9mb3J1bS8jIWZv
cnVtL2ppYi11c2VycykKKiBDb250cmlidXRlOgogICogKlJlYWQgdGhlIFtj
b250cmlidXRpbmcgZ3VpZGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9Hb29nbGVD
b250YWluZXJUb29scy9qaWIvYmxvYi9tYXN0ZXIvQ09OVFJJQlVUSU5HLm1k
KSBiZWZvcmUgc3RhcnRpbmcgd29yayBvbiBhbiBpc3N1ZSoKICAqIFRyeSB0
byBmaXggW2dvb2QgZmlyc3QgaXNzdWVzXShodHRwczovL2dpdGh1Yi5jb20v
R29vZ2xlQ29udGFpbmVyVG9vbHMvamliL2xhYmVscy9nb29kJTIwZmlyc3Ql
MjBpc3N1ZSkKICAqIEhlbHAgb3V0IG9uIFtpc3N1ZXMgdGhhdCBuZWVkIGhl
bHBdKGh0dHBzOi8vZ2l0aHViLmNvbS9Hb29nbGVDb250YWluZXJUb29scy9q
aWIvbGFiZWxzL2hlbHAlMjB3YW50ZWQpCiAgKiBKb2luIGluIG9uIFtkaXNj
dXNzaW9uIGlzc3Vlc10oaHR0cHM6Ly9naXRodWIuY29tL0dvb2dsZUNvbnRh
aW5lclRvb2xzL2ppYi9sYWJlbHMvZGlzY3VzcykKPCEtLSAgKiBSZWFkIHRo
ZSBbc3R5bGUgZ3VpZGVdIC0tPgoqTWFrZSBzdXJlIHRvIGZvbGxvdyB0aGUg
W0NvZGUgb2YgQ29uZHVjdF0oaHR0cHM6Ly9naXRodWIuY29tL0dvb2dsZUNv
bnRhaW5lclRvb2xzL2ppYi9ibG9iL21hc3Rlci9DT0RFX09GX0NPTkRVQ1Qu
bWQpIHdoZW4gY29udHJpYnV0aW5nIHNvIHdlIGNhbiBmb3N0ZXIgYW4gb3Bl
biBhbmQgd2VsY29taW5nIGNvbW11bml0eS4qCg==
",,8011,"c3VkbzogZmFsc2UKZ2l0OgogIGRlcHRoOiAzCmxhbmd1YWdlOiBqYXZhCm1h
dHJpeDoKICBpbmNsdWRlOgogICAgLSBuYW1lOiBPcmFjbGUgSkRLIDggb24g
VHJ1c3R5CiAgICAgICMgdXNpbmcgYG9wZW5qZGs4YCBsZWFkcyB0byBqYXZh
ZG9jIGVycm9ycwogICAgICBqZGs6IG9yYWNsZWpkazgKICAgICAgZGlzdDog
dHJ1c3R5ICMgb3JhY2xlamRrOCBhYnNlbnQgaW4gWGVuaWFsCiAgICAtIG5h
bWU6IE9wZW5KREsgMTEKICAgICAgamRrOiBvcGVuamRrMTEKZW52OgogIGds
b2JhbDoKICAtIFRFUk09ZHVtYiAgICAgICAgICMgZm9yIGdyYWRsZQoKaW5z
dGFsbDogdHJ1ZQpzY3JpcHQ6Ci0gLi9ncmFkbGV3IGNsZWFuIGJ1aWxkIC0t
c3RhY2t0cmFjZQoKIyBjb2JibGVkIHRvZ2V0aGVyIGZyb20KIyAgIGh0dHBz
Oi8vZG9jcy50cmF2aXMtY2kuY29tL3VzZXIvbGFuZ3VhZ2VzL2phdmEvI3By
b2plY3RzLXVzaW5nLWdyYWRsZQojICAgaHR0cHM6Ly9naXRodWIuY29tL2Js
b3gvYmxveC9wdWxsLzMzOCNpc3N1ZWNvbW1lbnQtMzU4NTU2MTM3CmJlZm9y
ZV9jYWNoZToKICAtIHJtIC1mICAkSE9NRS8uZ3JhZGxlL2NhY2hlcy9tb2R1
bGVzLTIvbW9kdWxlcy0yLmxvY2sKICAtIHJtIC1mciAkSE9NRS8uZ3JhZGxl
L2NhY2hlcy8qL3BsdWdpbi1yZXNvbHV0aW9uLwogIC0gcm0gLWZyICRIT01F
Ly5ncmFkbGUvY2FjaGVzLyovZmlsZUhhc2hlcy8KICAtIHJtIC1mciAkSE9N
RS8uZ3JhZGxlL2NhY2hlcy9qYXJzLTMvCmNhY2hlOgogIGRpcmVjdG9yaWVz
OgogIC0gJEhPTUUvLm0yCiAgLSAkSE9NRS8uZ3JhZGxlL2NhY2hlcy8KICAt
ICRIT01FLy5ncmFkbGUvd3JhcHBlci8K
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
