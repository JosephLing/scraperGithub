name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'MGSwipeTableCell',22787208,b'An easy to use UITableViewCell subclass that allows to display swippable buttons with a variety of transitions.',b'Objective-C',120,6716,,214,False,b'https://api.github.com/repos/MortimerGoro/MGSwipeTableCell/forks',"TUdTd2lwZVRhYmxlQ2VsbAo9PT09PT09PT09PT09PT09CgpbIVtDYXJ0aGFn
ZSBjb21wYXRpYmxlXShodHRwczovL2ltZy5zaGllbGRzLmlvL2JhZGdlL0Nh
cnRoYWdlLWNvbXBhdGlibGUtNEJDNTFELnN2Zz9zdHlsZT1mbGF0KV0oaHR0
cHM6Ly9naXRodWIuY29tL0NhcnRoYWdlL0NhcnRoYWdlKQoKTUdTd2lwZVRh
YmxlQ2VsbCBpcyBhbiBlYXN5IHRvIHVzZSBVSVRhYmxlVmlld0NlbGwgc3Vi
Y2xhc3MgdGhhdCBhbGxvd3MgdG8gZGlzcGxheSBzd2lwZWFibGUgYnV0dG9u
cyB3aXRoIGEgdmFyaWV0eSBvZiB0cmFuc2l0aW9ucy4KClRoaXMgbGlicmFy
eSBpcyBjb21wYXRpYmxlIHdpdGggYWxsIHRoZSBkaWZmZXJlbnQgd2F5cyB0
byBjcmVhdGUgYSBVSVRhYmxlVmlld0NlbGw6IHN5c3RlbSBwcmVkZWZpbmVk
IHN0eWxlcywgcHJvZ3JhbW1hdGljYWxseSBjcmVhdGVkIGNlbGxzLCBjZWxs
cyBsb2FkZWQgZnJvbSBhIHhpYiBhbmQgcHJvdG90eXBlIGNlbGxzIHdpdGhp
biBhIHN0b3J5Ym9hcmQuIFlvdSBjYW4gdXNlIGF1dG9sYXlvdXQgaWYgeW91
IHdhbnQuCgpXb3JrcyBvbiBpT1MgPj0gNS4wLiBUZXN0ZWQgb24gYWxsIGlP
UyB2ZXJzaW9ucyBvbiBpUGhvbmUgYW5kIGlQYWQ6IGlPUyA3LCBpT1MgOCwg
aU9TIDksIGlPUyAxMCwgaU9TIDExLCBpT1MgMTIsIGlPUyAxMwoKIyMgVHJh
bnNpdGlvbnMgZGVtbwoKIyMjIEJvcmRlciB0cmFuc2l0aW9uCgo8cCBhbGln
bj0iY2VudGVyIj48aW1nIHNyYz0iaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNv
bnRlbnQuY29tL01vcnRpbWVyR29yby9NR1N3aXBlVGFibGVDZWxsL21hc3Rl
ci9yZWFkbWUtYXNzZXRzL2JvcmRlci5naWYiIC8+PC9wPgoKIyMjIENsaXAg
dHJhbnNpdGlvbgoKPHAgYWxpZ249ImNlbnRlciI+PGltZyBzcmM9Imh0dHBz
Oi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Nb3J0aW1lckdvcm8vTUdT
d2lwZVRhYmxlQ2VsbC9tYXN0ZXIvcmVhZG1lLWFzc2V0cy9jbGlwLmdpZiIg
Lz48L3A+CgojIyMgM0QgdHJhbnNpdGlvbgoKPHAgYWxpZ249ImNlbnRlciI+
PGltZyBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9N
b3J0aW1lckdvcm8vTUdTd2lwZVRhYmxlQ2VsbC9tYXN0ZXIvcmVhZG1lLWFz
c2V0cy8zZC5naWYiIC8+PC9wPgoKIyMjIFN0YXRpYyB0cmFuc2l0aW9uCgo8
cCBhbGlnbj0iY2VudGVyIj48aW1nIHNyYz0iaHR0cHM6Ly9yYXcuZ2l0aHVi
dXNlcmNvbnRlbnQuY29tL01vcnRpbWVyR29yby9NR1N3aXBlVGFibGVDZWxs
L21hc3Rlci9yZWFkbWUtYXNzZXRzL3N0YXRpYy5naWYiIC8+PC9wPgoKIyMj
IERyYWcgdHJhbnNpdGlvbgoKPHAgYWxpZ249ImNlbnRlciI+PGltZyBzcmM9
Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Nb3J0aW1lckdv
cm8vTUdTd2lwZVRhYmxlQ2VsbC9tYXN0ZXIvcmVhZG1lLWFzc2V0cy9kcmFn
LmdpZiIgLz48L3A+CgojIyBBUEkgUmVmZXJlbmNlClNlZSBbYE1HU3dpcGVU
YWJsZUNlbGwuaGBdKE1HU3dpcGVUYWJsZUNlbGwvTUdTd2lwZVRhYmxlQ2Vs
bC5oKSBoZWFkZXIgZmlsZSBmb3IgYSBjb21wbGV0ZSBvdmVydmlldyBvZiB0
aGUgY2FwYWJpbGl0aWVzIG9mIHRoZSBjbGFzcy4KClNlZSBbYE1haWxBcHBE
ZW1vYF0oZGVtby9NYWlsQXBwRGVtbykgZm9yIGEgY29tcGxldGUgcHJvamVj
dCB3aGljaCBtaW1pY3MgQXBwbGUncyBNYWlsIEFwcCAod3JpdHRlbiBpbiBP
YmplY3RpdmUtQykKClNlZSBbYE1haWxBcHBEZW1vU3dpZnRgXShkZW1vL01h
aWxBcHBEZW1vU3dpZnQpIGZvciBhIGNvbXBsZXRlIHByb2plY3Qgd2hpY2gg
bWltaWNzIEFwcGxlJ3MgTWFpbCBBcHAgKFdyaXR0ZW4gaW4gU3dpZnQpCgpT
ZWUgW2BTcG90aWZ5RGVtb2BdKGRlbW8vU3BvdGlmeURlbW8pIGZvciBhIGNv
bXBsZXRlIHByb2plY3Qgd2hpY2ggbWltaWNzIFNwb3RpZnkgQXBwIHN3aXBl
IHN0eWxlCgpTZWUgW2BNR1N3aXBlRGVtb2BdKGRlbW8vTUdTd2lwZURlbW8p
IGZvciBhIGNvbXBsZXRlIHByb2plY3Qgd2hlcmUgeW91IGNhbiB0ZXN0IHRo
ZSB2YXJpZXR5IG9mIHRyYW5zaXRpb25zIG9uIGEgcmVhbCBkZXZpY2Uvc2lt
dWxhdG9yLgoKIyNTZXR1cCB5b3VyIHByb2plY3QKCllvdSBjYW4gdXNlIENv
Y29hUG9kcyB0byBpbmNsdWRlIE1HU3dpcGVUYWJsZUNlbGwgaW50byB5b3Ug
cHJvamVjdDoKCiAgICBwb2QgJ01HU3dpcGVUYWJsZUNlbGwnCiAgICAKWW91
IGNhbiB1c2UgQ2FydGhhZ2UgdG8gaW5jbHVkZSBNR1N3aXBlVGFibGVDZWxs
IGludG8geW91ciBwcm9qZWN0LiBKdXN0IGFkZCB0aGlzIGRlcGVuZGVuY3kg
dG8geW91ciBDYXJ0ZmlsZToKICAgIAogICAgZ2l0aHViICJNb3J0aW1lckdv
cm8vTUdTd2lwZVRhYmxlQ2VsbCIKCiMjIFVzYWdlCgojIyMgQmFzaWMKSW50
ZWdyYXRpbmcgTUdTd2lwZVRhYmxlQ2VsbCBpbiB5b3VyIHByb2plY3QgaXMg
dmVyeSBlYXN5LiBCYXNpY2FsbHksIHlvdSBvbmx5IGhhdmUgdG8gaW5oZXJp
dCBmcm9tIE1HU3dpcGVUYWJsZUNlbGwgaW5zdGVhZCBvZiBVSVRhYmxlVmll
d0NlbGwsIG9yIGRpcmVjdGx5IGluc3RhbnRpYXRlIE1HU3dpcGVUYWJsZUNl
bGwgaW5zdGFuY2VzIHdpdGggaU9TIHByZWRlZmluZWQgY2VsbCBzdHlsZXMu
IFlvdSBjYW4gbGF5b3V0IHlvdXIgY2VsbCBjb250ZW50IGFzIHlvdSBhcmUg
dXNlZCB0byBkbywgTUdTd2lwZVRhYmxlQ2VsbCBkb2Vzbid0IGZvcmNlIHlv
dSB0byBjaGFuZ2UgbGF5b3V0cy4KCkhlcmUgaXMgYSBleGFtcGxlIG9mIGEg
TUdTd2lwZVRhYmxlQ2VsbCB1c2luZyBpT1MgcHJlZGVmaW5lZCBzdHlsZXMu
IFlvdSBjYW4gc2V0IGFuIGFycmF5IG9mIGJ1dHRvbnMgdG8gY2VsbC5sZWZ0
QnV0dG9ucyBhbmQvb3IgY2VsbC5yaWdodEJ1dHRvbnMgcHJvcGVydGllcy4g
TUdTd2lwZUJ1dHRvbiBpcyBhIGNvbnZlbmllbmNlIGNsYXNzLCB5b3UgYXJl
IG5vdCBmb3JjZWQgdG8gdXNlIGl0LiBZb3UgY2FuIHVzZSB5b3VyIG93biBV
SUJ1dHRvbnMgb3IgVUlWaWV3cy4gWW91IGNhbiBjb25maWd1cmUgdHJhbnNp
dGlvbnMgKGFuZCBzd2lwZSB0aHJlc2hvbGRzKSB3aXRoIHRoZSBsZWZ0U3dp
cGVTZXR0aW5ncyBhbmQvb3IgcmlnaHRTd2lwZVNldHRpbmdzIHByb3BlcnRp
ZXMKCiMjIyMjIE9iamVjdGl2ZS1DCmBgYG9iamMKLSAoVUlUYWJsZVZpZXdD
ZWxsICopdGFibGVWaWV3OihVSVRhYmxlVmlldyAqKXRhYmxlVmlldyBjZWxs
Rm9yUm93QXRJbmRleFBhdGg6KE5TSW5kZXhQYXRoICopaW5kZXhQYXRoCnsK
ICAgIHN0YXRpYyBOU1N0cmluZyAqIHJldXNlSWRlbnRpZmllciA9IEAicHJv
Z3JhbW1hdGljQ2VsbCI7CiAgICBNR1N3aXBlVGFibGVDZWxsICogY2VsbCA9
IFtzZWxmLnRhYmxlVmlldyBkZXF1ZXVlUmV1c2FibGVDZWxsV2l0aElkZW50
aWZpZXI6cmV1c2VJZGVudGlmaWVyXTsKICAgIGlmICghY2VsbCkgewogICAg
ICAgIGNlbGwgPSBbW01HU3dpcGVUYWJsZUNlbGwgYWxsb2NdIGluaXRXaXRo
U3R5bGU6VUlUYWJsZVZpZXdDZWxsU3R5bGVTdWJ0aXRsZSByZXVzZUlkZW50
aWZpZXI6cmV1c2VJZGVudGlmaWVyXTsKICAgIH0KCiAgICBjZWxsLnRleHRM
YWJlbC50ZXh0ID0gQCJUaXRsZSI7CiAgICBjZWxsLmRldGFpbFRleHRMYWJl
bC50ZXh0ID0gQCJEZXRhaWwgdGV4dCI7CiAgICBjZWxsLmRlbGVnYXRlID0g
c2VsZjsgLy9vcHRpb25hbAoKCiAgICAvL2NvbmZpZ3VyZSBsZWZ0IGJ1dHRv
bnMKICAgIGNlbGwubGVmdEJ1dHRvbnMgPSBAW1tNR1N3aXBlQnV0dG9uIGJ1
dHRvbldpdGhUaXRsZTpAIiIgaWNvbjpbVUlJbWFnZSBpbWFnZU5hbWVkOkAi
Y2hlY2sucG5nIl0gYmFja2dyb3VuZENvbG9yOltVSUNvbG9yIGdyZWVuQ29s
b3JdXSwKICAgICAgICAgICAgICAgICAgICAgICAgICBbTUdTd2lwZUJ1dHRv
biBidXR0b25XaXRoVGl0bGU6QCIiIGljb246W1VJSW1hZ2UgaW1hZ2VOYW1l
ZDpAImZhdi5wbmciXSBiYWNrZ3JvdW5kQ29sb3I6W1VJQ29sb3IgYmx1ZUNv
bG9yXV1dOwogICAgY2VsbC5sZWZ0U3dpcGVTZXR0aW5ncy50cmFuc2l0aW9u
ID0gTUdTd2lwZVRyYW5zaXRpb24zRDsKCiAgICAvL2NvbmZpZ3VyZSByaWdo
dCBidXR0b25zCiAgICBjZWxsLnJpZ2h0QnV0dG9ucyA9IEBbW01HU3dpcGVC
dXR0b24gYnV0dG9uV2l0aFRpdGxlOkAiRGVsZXRlIiBiYWNrZ3JvdW5kQ29s
b3I6W1VJQ29sb3IgcmVkQ29sb3JdXSwKICAgICAgICAgICAgICAgICAgICAg
ICAgICAgW01HU3dpcGVCdXR0b24gYnV0dG9uV2l0aFRpdGxlOkAiTW9yZSIg
YmFja2dyb3VuZENvbG9yOltVSUNvbG9yIGxpZ2h0R3JheUNvbG9yXV1dOwog
ICAgY2VsbC5yaWdodFN3aXBlU2V0dGluZ3MudHJhbnNpdGlvbiA9IE1HU3dp
cGVUcmFuc2l0aW9uM0Q7CiAgICByZXR1cm4gY2VsbDsKfQpgYGAKIyMjIyMg
U3dpZnQKYGBgc3dpZnQKZnVuYyB0YWJsZVZpZXcoXyB0YWJsZVZpZXc6IFVJ
VGFibGVWaWV3LCBjZWxsRm9yUm93QXQgaW5kZXhQYXRoOiBJbmRleFBhdGgp
IC0+IFVJVGFibGVWaWV3Q2VsbAp7CiAgICBsZXQgcmV1c2VJZGVudGlmaWVy
ID0gInByb2dyYW1tYXRpY0NlbGwiCiAgICB2YXIgY2VsbCA9IHRhYmxlVmll
dy5kZXF1ZXVlUmV1c2FibGVDZWxsKHdpdGhJZGVudGlmaWVyOiByZXVzZUlk
ZW50aWZpZXIsIGZvcjogaW5kZXhQYXRoKSBhcyEgTUdTd2lwZVRhYmxlQ2Vs
bAoKICAgIGNlbGwudGV4dExhYmVsIS50ZXh0ID0gIlRpdGxlIgogICAgY2Vs
bC5kZXRhaWxUZXh0TGFiZWwhLnRleHQgPSAiRGV0YWlsIHRleHQiCiAgICBj
ZWxsLmRlbGVnYXRlID0gc2VsZiAvL29wdGlvbmFsCgogICAgLy9jb25maWd1
cmUgbGVmdCBidXR0b25zCiAgICBjZWxsLmxlZnRCdXR0b25zID0gW01HU3dp
cGVCdXR0b24odGl0bGU6ICIiLCBpY29uOiBVSUltYWdlKG5hbWVkOiJjaGVj
ay5wbmciKSwgYmFja2dyb3VuZENvbG9yOiAuZ3JlZW4pLAogICAgICAgICAg
ICAgICAgICAgICAgICBNR1N3aXBlQnV0dG9uKHRpdGxlOiAiIiwgaWNvbjog
VUlJbWFnZShuYW1lZDoiZmF2LnBuZyIpLCBiYWNrZ3JvdW5kQ29sb3I6IC5i
bHVlKV0KICAgIGNlbGwubGVmdFN3aXBlU2V0dGluZ3MudHJhbnNpdGlvbiA9
IC5yb3RhdGUzRAoKICAgIC8vY29uZmlndXJlIHJpZ2h0IGJ1dHRvbnMKICAg
IGNlbGwucmlnaHRCdXR0b25zID0gW01HU3dpcGVCdXR0b24odGl0bGU6ICJE
ZWxldGUiLCBiYWNrZ3JvdW5kQ29sb3I6IC5yZWQpLAogICAgICAgICAgICAg
ICAgICAgICAgICAgTUdTd2lwZUJ1dHRvbih0aXRsZTogIk1vcmUiLGJhY2tn
cm91bmRDb2xvcjogLmxpZ2h0R3JheSldCiAgICBjZWxsLnJpZ2h0U3dpcGVT
ZXR0aW5ncy50cmFuc2l0aW9uID0gLnJvdGF0ZTNECgogICAgcmV0dXJuIGNl
bGwKfQpgYGAKCkluIG9yZGVyIHRvIGxpc3RlbiBmb3IgYnV0dG9uIGNsaWNr
IGV2ZW50cyB5b3UgY2FuIGltcGxlbWVudCB0aGUgb3B0aW9uYWwgTUdTd2lw
ZVRhYmxlQ2VsbERlbGVnYXRlLCBvciBpZiB5b3UgYXJlIHRvbyBsYXp5IHRv
IGRvIHRoYXQsIHRoZSBNR1N3aXBlQnV0dG9uIGNsYXNzIGNvbWVzIHdpdGgg
YSBjb252ZW5pZW5jZSBibG9jayBjYWxsYmFjayA7KQoKIyMjIyMgT2JqZWN0
aXZlLWMKYGBgb2JqYwpbTUdTd2lwZUJ1dHRvbiBidXR0b25XaXRoVGl0bGU6
QCJNb3JlIiBiYWNrZ3JvdW5kQ29sb3I6W1VJQ29sb3IgbGlnaHRHcmF5Q29s
b3JdIGNhbGxiYWNrOl5CT09MKE1HU3dpcGVUYWJsZUNlbGwgKnNlbmRlcikg
ewogICAgICBOU0xvZyhAIkNvbnZlbmllbmNlIGNhbGxiYWNrIGZvciBzd2lw
ZSBidXR0b25zISIpOwp9XQpgYGAKIyMjIyMgU3dpZnQKYGBgc3dpZnQKTUdT
d2lwZUJ1dHRvbih0aXRsZTogIkRlbGV0ZSIsIGJhY2tncm91bmRDb2xvcjog
LnJlZCkgewogICAgICAoc2VuZGVyOiBNR1N3aXBlVGFibGVDZWxsISkgLT4g
Qm9vbCBpbgogICAgICBwcmludCgiQ29udmVuaWVuY2UgY2FsbGJhY2sgZm9y
IHN3aXBlIGJ1dHRvbnMhIikKICAgICAgcmV0dXJuIHRydWUKICAgIH0KYGBg
CgojIyMgRGVsZWdhdGUKCk1HU3dpcGVUYWJsZUNlbGxEZWxlZ2F0ZSBpcyBh
biBvcHRpb25hbCBkZWxlZ2F0ZSB0byBjb25maWd1cmUgc3dpcGUgYnV0dG9u
cyBvciB0byByZWNlaXZlIHRyaWdnZXJlZCBhY3Rpb25zIG9yIGFub3RoZXIg
ZXZlbnRzLiBCdXR0b25zIGNhbiBiZSBjb25maWd1cmVkIGlubGluZSB3aGVu
IHRoZSBjZWxsIGlzIGNyZWF0ZWQgaW5zdGVhZCBvZiB1c2luZyB0aGlzIGRl
bGVnYXRlLCBidXQgdXNpbmcgdGhlIGRlbGVnYXRlIGltcHJvdmVzIG1lbW9y
eSB1c2FnZSBzaW5jZSBidXR0b25zIGFyZSBvbmx5IGNyZWF0ZWQgb24gZGVt
YW5kLgoKYGBgb2JqYwpAcHJvdG9jb2wgTUdTd2lwZVRhYmxlQ2VsbERlbGVn
YXRlIDxOU09iamVjdD4KCkBvcHRpb25hbAovKioKICogRGVsZWdhdGUgbWV0
aG9kIHRvIGVuYWJsZS9kaXNhYmxlIHN3aXBlIGdlc3R1cmVzCiAqIEByZXR1
cm4gWUVTIGlmIHN3aXBlIGlzIGFsbG93ZWQKICoqLwotKEJPT0wpIHN3aXBl
VGFibGVDZWxsOihNR1N3aXBlVGFibGVDZWxsKikgY2VsbCBjYW5Td2lwZToo
TUdTd2lwZURpcmVjdGlvbikgZGlyZWN0aW9uOwovKioKICogRGVsZWdhdGUg
bWV0aG9kIGludm9rZWQgd2hlbiB0aGUgY3VycmVudCBzd2lwZSBzdGF0ZSBj
aGFuZ2VzCiBAcGFyYW0gc3RhdGUgdGhlIGN1cnJlbnQgU3dpcGUgU3RhdGUK
IEBwYXJhbSBnZXN0dXJlSXNBY3RpdmUgWUVTIGlmIHRoZSB1c2VyIHN3aXBl
IGdlc3R1cmUgaXMgYWN0aXZlLiBObyBpZiB0aGUgdXNlcyBoYXMgYWxyZWFk
eSBlbmRlZCB0aGUgZ2VzdHVyZQogKiovCi0odm9pZCkgc3dpcGVUYWJsZUNl
bGw6KE1HU3dpcGVUYWJsZUNlbGwqKSBjZWxsIGRpZENoYW5nZVN3aXBlU3Rh
dGU6KE1HU3dpcGVTdGF0ZSkgc3RhdGUgZ2VzdHVyZUlzQWN0aXZlOihCT09M
KSBnZXN0dXJlSXNBY3RpdmU7Ci8qKgogKiBDYWxsZWQgd2hlbiB0aGUgdXNl
ciBjbGlja3MgYSBzd2lwZSBidXR0b24gb3Igd2hlbiBhIGV4cGFuZGFibGUg
YnV0dG9uIGlzIGF1dG9tYXRpY2FsbHkgdHJpZ2dlcmVkCiAqIEByZXR1cm4g
WUVTIHRvIGF1dG9oaWRlIHRoZSBjdXJyZW50IHN3aXBlIGJ1dHRvbnMKICoq
LwotKEJPT0wpIHN3aXBlVGFibGVDZWxsOihNR1N3aXBlVGFibGVDZWxsKikg
Y2VsbCB0YXBwZWRCdXR0b25BdEluZGV4OihOU0ludGVnZXIpIGluZGV4IGRp
cmVjdGlvbjooTUdTd2lwZURpcmVjdGlvbilkaXJlY3Rpb24gZnJvbUV4cGFu
c2lvbjooQk9PTCkgZnJvbUV4cGFuc2lvbjsKLyoqCiAqIERlbGVnYXRlIG1l
dGhvZCB0byBzZXR1cCB0aGUgc3dpcGUgYnV0dG9ucyBhbmQgc3dpcGUvZXhw
YW5zaW9uIHNldHRpbmdzCiAqIEJ1dHRvbnMgY2FuIGJlIGFueSBraW5kIG9m
IFVJVmlldyBidXQgaXQncyByZWNvbW1lbmRlZCB0byB1c2UgdGhlIGNvbnZl
bmllbmNlIE1HU3dpcGVCdXR0b24gY2xhc3MKICogU2V0dGluZyB1cCBidXR0
b25zIHdpdGggdGhpcyBkZWxlZ2F0ZSBpbnN0ZWFkIG9mIHVzaW5nIGNlbGwg
cHJvcGVydGllcyBpbXByb3ZlcyBtZW1vcnkgdXNhZ2UgYmVjYXVzZSBidXR0
b25zIGFyZSBvbmx5IGNyZWF0ZWQgaW4gZGVtYW5kCiAqIEBwYXJhbSBzd2lw
ZVRhYmxlQ2VsbCB0aGUgVUlUYWJsZVZpZXdDZWxsIHRvIGNvbmZpZ3VyZS4g
WW91IGNhbiBnZXQgdGhlIGluZGV4UGF0aCB1c2luZyBbdGFibGVWaWV3IGlu
ZGV4UGF0aEZvckNlbGw6Y2VsbF0KICogQHBhcmFtIGRpcmVjdGlvbiBUaGUg
c3dpcGUgZGlyZWN0aW9uIChsZWZ0IHRvIHJpZ2h0IG9yIHJpZ2h0IHRvIGxl
ZnQpCiAqIEBwYXJhbSBzd2lwZVNldHRpbmdzIGluc3RhbmNlIHRvIGNvbmZp
Z3VyZSB0aGUgc3dpcGUgdHJhbnNpdGlvbiBhbmQgc2V0dGluZyAob3B0aW9u
YWwpCiAqIEBwYXJhbSBleHBhbnNpb25TZXR0aW5ncyBpbnN0YW5jZSB0byBj
b25maWd1cmUgYnV0dG9uIGV4cGFuc2lvbnMgKG9wdGlvbmFsKQogKiBAcmV0
dXJuIEJ1dHRvbnMgYXJyYXkKICoqLwotKE5TQXJyYXkqKSBzd2lwZVRhYmxl
Q2VsbDooTUdTd2lwZVRhYmxlQ2VsbCopIGNlbGwgc3dpcGVCdXR0b25zRm9y
RGlyZWN0aW9uOihNR1N3aXBlRGlyZWN0aW9uKWRpcmVjdGlvbgogICAgICAg
ICAgICAgc3dpcGVTZXR0aW5nczooTUdTd2lwZVNldHRpbmdzKikgc3dpcGVT
ZXR0aW5ncyBleHBhbnNpb25TZXR0aW5nczooTUdTd2lwZUV4cGFuc2lvblNl
dHRpbmdzKikgZXhwYW5zaW9uU2V0dGluZ3M7CgpAZW5kCmBgYAoKIyMjIEV4
cGFuZGFibGUgYnV0dG9ucwoKQnV0dG9ucyBhcmUgbm90IGV4cGFuZGFibGUg
YnkgZGVmYXVsdC4gWW91IGNhbiBzZXQgdXAgZXhwYW5kYWJsZSBidXR0b25z
IHVzaW5nIGNlbGwubGVmdEV4cGFuc2lvbiBhbmQgY2VsbC5yaWdodEV4cGFu
c2lvbiBwcm9wZXJ0aWVzCgpFeHBhbmRhYmxlIGJ1dHRvbiBldmVudHMgYXJl
IHRyaWdnZXJlZCBhdXRvbWF0aWNhbGx5IHdoZW4gdGhlIHVzZXIgZW5kcyB0
aGUgc3dpcGUgZ2VzdHVyZSBhbmQgdGhlIGV4cGFuc2lvbiBpcyBhY3RpdmUg
KGNvbmZpZ3VyYWJsZSB2aWEgdGhyZXNob2xkIHZhbHVlKS4gVHJpZ2dlcmVk
IGV4cGFuZGFibGUgYnV0dG9ucyBjYW4gYm91bmNlIGJhY2sgdG8gdGhlaXIg
aW5pdGlhbCBwb3NpdGlvbiBvciBmaWxsIHRoZSBlbnRpcmUgVUlUYWJsZVZp
ZXdDZWxsLCB5b3UgY2FuIHNlbGVjdCB0aGUgZGVzaXJlZCBhbmltYXRpb24g
dXNpbmcgZmlsbE9uVHJpZ2dlciBwcm9wZXJ0eS4KCmBgYG9iamMKQGludGVy
ZmFjZSBNR1N3aXBlRXhwYW5zaW9uU2V0dGluZ3M6IE5TT2JqZWN0Ci8qKiBp
bmRleCBvZiB0aGUgZXhwYW5kYWJsZSBidXR0b24gKGluIHRoZSBsZWZ0IG9y
IHJpZ2h0IGJ1dHRvbnMgYXJyYXlzKSAqLwpAcHJvcGVydHkgKG5vbmF0b21p
YywgYXNzaWduKSBOU0ludGVnZXIgYnV0dG9uSW5kZXg7Ci8qKiBpZiB0cnVl
IHRoZSBidXR0b24gZmlsbHMgdGhlIGNlbGwgb24gdHJpZ2dlciwgZWxzZSBp
dCBib3VuY2VzIGJhY2sgdG8gaXRzIGluaXRpYWwgcG9zaXRpb24gKi8KQHBy
b3BlcnR5IChub25hdG9taWMsIGFzc2lnbikgQk9PTCBmaWxsT25UcmlnZ2Vy
OwovKiogU2l6ZSBwcm9wb3J0aW9uYWwgdGhyZXNob2xkIHRvIHRyaWdnZXIg
dGhlIGV4cGFuc2lvbiBidXR0b24uIERlZmF1bHQgdmFsdWUgMS41ICovCkBw
cm9wZXJ0eSAobm9uYXRvbWljLCBhc3NpZ24pIENHRmxvYXQgdGhyZXNob2xk
OwpAZW5kCmBgYAojIyMgUm91bmRlZCBjb3JuZXJzIGFuZCBzd2lwZSBidXR0
b25zCk1HU3dpcGVUYWJsZUNlbGwgc3VwcG9ydHMgcm91bmRlZCBjb3JuZXJz
LiBFeGFtcGxlOiAKCmBgYG9iamMKY2VsbC5sYXllci5jb3JuZXJSYWRpdXMg
PSA1MApjZWxsLmJhY2tncm91bmRDb2xvciA9IFVJQ29sb3IuZ3JheQpjZWxs
LmNsaXBzVG9Cb3VuZHMgPSB0cnVlCmNlbGwuc3dpcGVCYWNrZ3JvdW5kQ29s
b3IgPSBVSUNvbG9yLmdyYXkKYGBgCjxwIGFsaWduPSJjZW50ZXIiPjxpbWcg
c3JjPSJodHRwczovL2dpdGh1Yi5jb20vTW9ydGltZXJHb3JvL01HU3dpcGVU
YWJsZUNlbGwvYmxvYi9tYXN0ZXIvcmVhZG1lLWFzc2V0cy9Sb3VuZFRhYmxl
Vmlld0NlbGwucG5nIiB3aWR0aD0iMzAlIiAvPjwvcD4KCgojIyBMaWNlbnNl
CgpUaGUgTUlUIExpY2Vuc2UgKE1JVCkKCkNvcHlyaWdodCAoYykgMjAxNCBJ
bWFub2wgRmVybmFuZGV6IEBNb3J0aW1lckdvcm8KClBlcm1pc3Npb24gaXMg
aGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29u
IG9idGFpbmluZyBhIGNvcHkKb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2Np
YXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNvZnR3YXJlIiksIHRv
IGRlYWwKaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGlu
Y2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cwp0byB1c2Us
IGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1
YmxpY2Vuc2UsIGFuZC9vciBzZWxsCmNvcGllcyBvZiB0aGUgU29mdHdhcmUs
IGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBp
cwpmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2lu
ZyBjb25kaXRpb25zOgoKVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5k
IHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4g
YWxsCmNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29m
dHdhcmUuCgpUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgIkFTIElTIiwgV0lU
SE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUgpJTVBMSUVE
LCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVT
IE9GIE1FUkNIQU5UQUJJTElUWSwKRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFS
IFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hB
TEwgVEhFCkFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxF
IEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIKTElBQklMSVRZLCBX
SEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhF
UldJU0UsIEFSSVNJTkcgRlJPTSwKT1VUIE9GIE9SIElOIENPTk5FQ1RJT04g
V0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5H
UyBJTiBUSEUKU09GVFdBUkUuCg==
",,6716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'vue-native-core',122614397,b'Vue Native is a framework to build cross platform native mobile apps using JavaScript',b'JavaScript',20,6713,,174,False,b'https://api.github.com/repos/GeekyAnts/vue-native-core/forks',"IyBWdWUgTmF0aXZlCgpbIVtCYWNrZXJzIG9uIE9wZW4gQ29sbGVjdGl2ZV0o
aHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20vdnVlLW5hdGl2ZS1jb3JlL2Jh
Y2tlcnMvYmFkZ2Uuc3ZnKV0oI2JhY2tlcnMpCiBbIVtTcG9uc29ycyBvbiBP
cGVuIENvbGxlY3RpdmVdKGh0dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL3Z1
ZS1uYXRpdmUtY29yZS9zcG9uc29ycy9iYWRnZS5zdmcpXSgjc3BvbnNvcnMp
IAoKVmlzaXQgb3VyIHdlYnNpdGUgYXQgW3Z1ZS1uYXRpdmUuaW9dKGh0dHBz
Oi8vdnVlLW5hdGl2ZS5pbykgb3IgcmVhZCB0aGUgb2ZmaWNpYWwgZG9jdW1l
bnRhdGlvbiBbaGVyZV0oaHR0cHM6Ly92dWUtbmF0aXZlLmlvL2RvY3MvaW5z
dGFsbGF0aW9uLmh0bWwpLgoKIyMgQnVpbGQgbmF0aXZlIG1vYmlsZSBhcHBz
IHVzaW5nIFZ1ZQoKVnVlIE5hdGl2ZSBpcyBhIGZyYW1ld29yayB0byBidWls
ZCBjcm9zcyBwbGF0Zm9ybSBuYXRpdmUgbW9iaWxlIGFwcHMgdXNpbmcgSmF2
YVNjcmlwdC4gSXQgaXMgYSB3cmFwcGVyIGFyb3VuZCB0aGUgQVBJcyBvZiBS
ZWFjdCBOYXRpdmUuIFNvLCB3aXRoIFZ1ZSBOYXRpdmUsIHlvdSBjYW4gZG8g
ZXZlcnl0aGluZyB0aGF0IHlvdSBjYW4gZG8gd2l0aCBSZWFjdCBOYXRpdmUu
IFdpdGggVnVlIE5hdGl2ZSwgeW91IGdldAoKLSAqKlRoZSBzaW1wbGljaXR5
IG9mIFZ1ZS5qcy4qKiBJbmNyZW1lbnRhbGx5IGJ1aWxkIHVzZXIgaW50ZXJm
YWNlcyB3aXRoIHRoZSBmYW1pbGlhciBzeW50YXggb2YgSFRNTCBhbmQgQ1NT
IGluIHNpbmdsZSBmaWxlIGNvbXBvbmVudHMuCi0gKipTZWFtbGVzcyBpbnRl
cm9wIHdpdGggUmVhY3QgTmF0aXZlLioqIFVzZSBjb3JlIFJlYWN0IE5hdGl2
ZSBjb21wb25lbnRzIHdpdGggVnVlLmpzIHN5bnRheCBvdXQgb2YgdGhlIGJv
eCB0byBkZXZlbG9wIG1vYmlsZSBhcHBzIG9uIGJvdGggaU9TIGFuZCBBbmRy
b2lkLgoKIyMgQ29udGVudHMKLSBbRG9jdW1lbnRhdGlvbl0oI2RvY3VtZW50
YXRpb24pCi0gW0luc3RhbGxhdGlvbl0oI2luc3RhbGxhdGlvbikKLSBbUHJv
amVjdCBzZXR1cCB3aXRoIFZ1ZSBOYXRpdmUgQ0xJXSgjcHJvamVjdC1zZXR1
cC13aXRoLXZ1ZS1uYXRpdmUtY2xpKQotIFtVc2luZyBWdWUgTmF0aXZlIHdp
dGggYSBwcmUtZXhpc3RpbmcgUmVhY3QgTmF0aXZlIG9yIEV4cG8gcHJvamVj
dF0oI3VzaW5nLXZ1ZS1uYXRpdmUtaW4tYS1yZWFjdC1uYXRpdmUtcHJvamVj
dCkKLSBbRGVwcmVjYXRlZCBSZWFjdCBOYXRpdmUgbW9kdWxlc10oI3JlYWN0
LW5hdGl2ZS1jb21wb25lbnRzLXRoYXQtY2FudC1iZS11c2VkLW91dC1vZi10
aGUtYm94KQotIFtDb250cmlidXRvcnNdKCNjb250cmlidXRvcnMpCi0gW0Jh
Y2tlcnNdKCNiYWNrZXJzKQotIFtTcG9uc29yc10oI3Nwb25zb3JzKQotIFtM
aWNlbnNlXSgjbGljZW5zZSkKLSBbU3BlY2lhbCB0aGFua3NdKCNjcmVkaXRz
LXRvLXJlYWN0LXZ1ZSkKCiMjIERvY3VtZW50YXRpb24KCllvdSBjYW4gZmlu
ZCB0aGUgZnVsbCBkb2N1bWVudGF0aW9uIGZvciBWdWUgTmF0aXZlIFtvbiB0
aGlzIHdlYnNpdGVdKGh0dHBzOi8vdnVlLW5hdGl2ZS5pby9kb2NzL2luc3Rh
bGxhdGlvbi5odG1sKS4gSXQgY292ZXJzIGluc3RhbGxhdGlvbiBhbmQgc2V0
dXAsIGNvbXBvbmVudCBiYXNpY3MsIHJvdXRpbmcsIHRlc3RpbmcsIHRoZSBp
bnRlcm5hbCBBUEkgYW5kIG1vcmUuCgpUaGUgc291cmNlIGZvciB0aGUgVnVl
IE5hdGl2ZSBkb2N1bWVudGF0aW9uIGFuZCB3ZWJzaXRlIGlzIGhvc3RlZCBv
biBhIHNlcGFyYXRlIHJlcG8sIFtoZXJlXShodHRwczovL2dpdGh1Yi5jb20v
R2Vla3lBbnRzL3Z1ZS1uYXRpdmUtd2Vic2l0ZSkKCiMjIEluc3RhbGxhdGlv
bgoKVG8gaW5zdGFsbCBWdWUgTmF0aXZlJ3Mgb2ZmaWNpYWwgQ0xJLCBydW4K
YGBgCiQgbnBtIGluc3RhbGwgdnVlLW5hdGl2ZS1jbGkgLWcKYGBgCgpUbyB1
c2UgdGhlIENMSSwgeW91IG11c3QgaGF2ZSBlaXRoZXIgW2V4cG8tY2xpXSho
dHRwczovL2dpdGh1Yi5jb20vZXhwby9leHBvLWNsaSkgb3IgW3JlYWN0LW5h
dGl2ZS1jbGldKGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdC1uYXRpdmUtY29t
bXVuaXR5L2NsaSkgaW5zdGFsbGVkIGdsb2JhbGx5LgoKIyMgUHJvamVjdCBz
ZXR1cCB3aXRoIFZ1ZSBOYXRpdmUgQ0xJCgpUaGUgVnVlIE5hdGl2ZSBDTEkg
Y2FuIGJlIHVzZWQgdG8gZWFzaWx5IGdlbmVyYXRlIGEgZnVsbHkgY29uZmln
dXJlZCBWdWUgTmF0aXZlIGFwcC4gSXQgd3JhcHMgYGV4cG8tY2xpYCBhbmQg
YHJlYWN0LW5hdGl2ZS1jbGlgIHRvIGdlbmVyYXRlIGEgc2ltcGxlIHNpbmds
ZSBwYWdlIGFwcGxpY2F0aW9uIChTUEEpIGFmdGVyIGluc3RhbGxpbmcgYW5k
IGNvbmZpZ3VyaW5nIGRlcGVuZGVuY2llcyBmcm9tIFt2dWUtbmF0aXZlLWNv
cmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9HZWVreUFudHMvdnVlLW5hdGl2ZS1j
b3JlKS4KCllvdSBzaG91bGQgaGF2ZSBlaXRoZXIgZXhwby1jbGkgb3IgcmVh
Y3QtbmF0aXZlLWNsaSBpbnN0YWxsZWQgYXMgYSBnbG9iYWwgZGVwZW5kZW5j
eS4gUmVmZXIgdG8gdGhlIFtpbnN0YWxsYXRpb24gZ3VpZGVdKGh0dHBzOi8v
dnVlLW5hdGl2ZS5pby9kb2NzL2luc3RhbGxhdGlvbi5odG1sKSBmb3IgZGV0
YWlscyBvbiBwcm9qZWN0IHNldHVwLiBUaGUgR2l0SHViIHJlcG9zaXRvcnkg
Zm9yIFZ1ZSBOYXRpdmUgQ0xJIGlzIGhvc3RlZCBbaGVyZV0oaHR0cHM6Ly9n
aXRodWIuY29tL0dlZWt5QW50cy92dWUtbmF0aXZlLWNsaSkuCgpXaXRoIHRo
ZSBDTEksIGdlbmVyYXRpbmcgYSBWdWUgTmF0aXZlIHByb2plY3QgaXMgYXMg
ZWFzeSBhcyBydW5uaW5nIHRoZSBjb21tYW5kCmBgYAokIHZ1ZS1uYXRpdmUg
aW5pdCA8cHJvamVjdE5hbWU+CmBgYAoKIyMgVXNpbmcgVnVlIE5hdGl2ZSBp
biBhIFJlYWN0IE5hdGl2ZSBwcm9qZWN0CgpJdCBpcyBwb3NzaWJsZSB0byBp
bnRlZ3JhdGUgVnVlIE5hdGl2ZSBpbnRvIGEgcHJlLWV4aXN0aW5nIFJlYWN0
IE5hdGl2ZSBwcm9qZWN0LiBZb3UgY2FuIGZpbmQgaW5zdHJ1Y3Rpb25zIHRv
IGRvIHRoaXMgW2hlcmVdKGNvbnZlcnRpbmctcmVhY3QtbmF0aXZlLXByb2pl
Y3QubWQpLgoKVGhlc2UgaW5zdHJ1Y3Rpb25zIGNhbiBhbHNvIGJlIHVzZWQg
dG8gc2V0IHVwIGEgVnVlIE5hdGl2ZSBwcm9qZWN0IGZyb20gc2NyYXRjaC4K
CiMjIFJlYWN0IE5hdGl2ZSBjb21wb25lbnRzIHRoYXQgY2FuJ3QgYmUgdXNl
ZCBvdXQgb2YgdGhlIGJveAoKVGhlIGZvbGxvd2luZyBtb2R1bGVzIGFyZSBz
ZXQgdG8gYmUgcmVtb3ZlZCBmcm9tIFJlYWN0IE5hdGl2ZSBpbiB0aGUgZnV0
dXJlLgpIZW5jZSB0aGVzZSBtb2R1bGVzIGFyZSBubyBsb25nZXIgbWFkZSBh
dmFpbGFibGUgd2l0aCBWdWUgTmF0aXZlLgotIEFsZXJ0SU9TCi0gQXN5bmNT
dG9yYWdlCi0gSW1hZ2VTdG9yZQotIExpc3RWaWV3Ci0gTWFza2VkVmlld0lP
UwotIE5ldEluZm8KLSBTbGlkZXIKLSBTd2lwZWFibGVMaXN0VmlldwotIFZp
ZXdQYWdlckFuZHJvaWQKLSBXZWJWaWV3CgpJZiB5b3Ugc3RpbGwgd2lzaCB0
byB1c2UgdGhlbSwgeW91IGNhbiBpbXBvcnQgdGhlbSBleHBsaWNpdGx5IGZy
b20gYHJlYWN0LW5hdGl2ZWAgKHVudGlsIHRoZXkgYXJlIHJlbW92ZWQpIG9y
IGZyb20gdGhlaXIgaW5kaXZpZHVhbCBmb3JrZWQgcGFja2FnZXMuCkZvciBt
b3JlIGluZm9ybWF0aW9uLCByZWZlciB0byBbdGhpcyBwYWdlXShodHRwczov
L2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC1uYXRpdmUvYmxvZy8yMDE5LzAz
LzEyL3JlbGVhc2luZy1yZWFjdC1uYXRpdmUtMDU5I2xlYW4tY29yZS1pcy11
bmRlcndheSkuCgojIyBDb250cmlidXRvcnMKClRoaXMgcHJvamVjdCBleGlz
dHMgdGhhbmtzIHRvIGFsbCB0aGUgcGVvcGxlIHdobyBjb250cmlidXRlLiAK
PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0dlZWt5QW50cy92dWUtbmF0
aXZlLWNvcmUvY29udHJpYnV0b3JzIj48aW1nIHNyYz0iaHR0cHM6Ly9vcGVu
Y29sbGVjdGl2ZS5jb20vdnVlLW5hdGl2ZS1jb3JlL2NvbnRyaWJ1dG9ycy5z
dmc/d2lkdGg9ODkwJmJ1dHRvbj1mYWxzZSIgLz48L2E+CgoKIyMgQmFja2Vy
cwoKVGhhbmsgeW91IHRvIGFsbCBvdXIgYmFja2VycyEg8J+ZjyBbW0JlY29t
ZSBhIGJhY2tlcl0oaHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20vdnVlLW5h
dGl2ZS1jb3JlI2JhY2tlcildCgo8YSBocmVmPSJodHRwczovL29wZW5jb2xs
ZWN0aXZlLmNvbS92dWUtbmF0aXZlLWNvcmUjYmFja2VycyIgdGFyZ2V0PSJf
YmxhbmsiPjxpbWcgc3JjPSJodHRwczovL29wZW5jb2xsZWN0aXZlLmNvbS92
dWUtbmF0aXZlLWNvcmUvYmFja2Vycy5zdmc/d2lkdGg9ODkwIj48L2E+CgoK
IyMgU3BvbnNvcnMKClN1cHBvcnQgdGhpcyBwcm9qZWN0IGJ5IGJlY29taW5n
IGEgc3BvbnNvci4gWW91ciBsb2dvIHdpbGwgc2hvdyB1cCBoZXJlIHdpdGgg
YSBsaW5rIHRvIHlvdXIgd2Vic2l0ZS4gW1tCZWNvbWUgYSBzcG9uc29yXSho
dHRwczovL29wZW5jb2xsZWN0aXZlLmNvbS92dWUtbmF0aXZlLWNvcmUjc3Bv
bnNvcildCgo8YSBocmVmPSJodHRwczovL29wZW5jb2xsZWN0aXZlLmNvbS92
dWUtbmF0aXZlLWNvcmUvc3BvbnNvci8wL3dlYnNpdGUiIHRhcmdldD0iX2Js
YW5rIj48aW1nIHNyYz0iaHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20vdnVl
LW5hdGl2ZS1jb3JlL3Nwb25zb3IvMC9hdmF0YXIuc3ZnIj48L2E+CjxhIGhy
ZWY9Imh0dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL3Z1ZS1uYXRpdmUtY29y
ZS9zcG9uc29yLzEvd2Vic2l0ZSIgdGFyZ2V0PSJfYmxhbmsiPjxpbWcgc3Jj
PSJodHRwczovL29wZW5jb2xsZWN0aXZlLmNvbS92dWUtbmF0aXZlLWNvcmUv
c3BvbnNvci8xL2F2YXRhci5zdmciPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly9v
cGVuY29sbGVjdGl2ZS5jb20vdnVlLW5hdGl2ZS1jb3JlL3Nwb25zb3IvMi93
ZWJzaXRlIiB0YXJnZXQ9Il9ibGFuayI+PGltZyBzcmM9Imh0dHBzOi8vb3Bl
bmNvbGxlY3RpdmUuY29tL3Z1ZS1uYXRpdmUtY29yZS9zcG9uc29yLzIvYXZh
dGFyLnN2ZyI+PC9hPgo8YSBocmVmPSJodHRwczovL29wZW5jb2xsZWN0aXZl
LmNvbS92dWUtbmF0aXZlLWNvcmUvc3BvbnNvci8zL3dlYnNpdGUiIHRhcmdl
dD0iX2JsYW5rIj48aW1nIHNyYz0iaHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5j
b20vdnVlLW5hdGl2ZS1jb3JlL3Nwb25zb3IvMy9hdmF0YXIuc3ZnIj48L2E+
CjxhIGhyZWY9Imh0dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL3Z1ZS1uYXRp
dmUtY29yZS9zcG9uc29yLzQvd2Vic2l0ZSIgdGFyZ2V0PSJfYmxhbmsiPjxp
bWcgc3JjPSJodHRwczovL29wZW5jb2xsZWN0aXZlLmNvbS92dWUtbmF0aXZl
LWNvcmUvc3BvbnNvci80L2F2YXRhci5zdmciPjwvYT4KPGEgaHJlZj0iaHR0
cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20vdnVlLW5hdGl2ZS1jb3JlL3Nwb25z
b3IvNS93ZWJzaXRlIiB0YXJnZXQ9Il9ibGFuayI+PGltZyBzcmM9Imh0dHBz
Oi8vb3BlbmNvbGxlY3RpdmUuY29tL3Z1ZS1uYXRpdmUtY29yZS9zcG9uc29y
LzUvYXZhdGFyLnN2ZyI+PC9hPgo8YSBocmVmPSJodHRwczovL29wZW5jb2xs
ZWN0aXZlLmNvbS92dWUtbmF0aXZlLWNvcmUvc3BvbnNvci82L3dlYnNpdGUi
IHRhcmdldD0iX2JsYW5rIj48aW1nIHNyYz0iaHR0cHM6Ly9vcGVuY29sbGVj
dGl2ZS5jb20vdnVlLW5hdGl2ZS1jb3JlL3Nwb25zb3IvNi9hdmF0YXIuc3Zn
Ij48L2E+CjxhIGhyZWY9Imh0dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL3Z1
ZS1uYXRpdmUtY29yZS9zcG9uc29yLzcvd2Vic2l0ZSIgdGFyZ2V0PSJfYmxh
bmsiPjxpbWcgc3JjPSJodHRwczovL29wZW5jb2xsZWN0aXZlLmNvbS92dWUt
bmF0aXZlLWNvcmUvc3BvbnNvci83L2F2YXRhci5zdmciPjwvYT4KPGEgaHJl
Zj0iaHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20vdnVlLW5hdGl2ZS1jb3Jl
L3Nwb25zb3IvOC93ZWJzaXRlIiB0YXJnZXQ9Il9ibGFuayI+PGltZyBzcmM9
Imh0dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL3Z1ZS1uYXRpdmUtY29yZS9z
cG9uc29yLzgvYXZhdGFyLnN2ZyI+PC9hPgo8YSBocmVmPSJodHRwczovL29w
ZW5jb2xsZWN0aXZlLmNvbS92dWUtbmF0aXZlLWNvcmUvc3BvbnNvci85L3dl
YnNpdGUiIHRhcmdldD0iX2JsYW5rIj48aW1nIHNyYz0iaHR0cHM6Ly9vcGVu
Y29sbGVjdGl2ZS5jb20vdnVlLW5hdGl2ZS1jb3JlL3Nwb25zb3IvOS9hdmF0
YXIuc3ZnIj48L2E+CgoKCiMjIExpY2Vuc2UKCltNSVRdKGh0dHA6Ly9vcGVu
c291cmNlLm9yZy9saWNlbnNlcy9NSVQpCgojIyBDcmVkaXRzIHRvIFtyZWFj
dC12dWVdKGh0dHBzOi8vZ2l0aHViLmNvbS9TbWFsbENvbWZvcnQvcmVhY3Qt
dnVlKQoKQSBodWdlIHRoYW5rcyB0byB0aGUgYXV0aG9yIG9mIHJlYWN0LXZ1
ZSBmb3IgbW9zdCBvZiB0aGUgd29yayBvbiBWdWUgTmF0aXZlLgo=
",,6713,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'pundit',6529205,b'Minimal authorization through OO design and pure Ruby classes',b'Ruby',16,6711,,117,False,b'https://api.github.com/repos/varvet/pundit/forks',"IyBQdW5kaXQKClshW0J1aWxkIFN0YXR1c10oaHR0cHM6Ly9zZWN1cmUudHJh
dmlzLWNpLm9yZy92YXJ2ZXQvcHVuZGl0LnN2Zz9icmFuY2g9bWFzdGVyKV0o
aHR0cHM6Ly90cmF2aXMtY2kub3JnL3ZhcnZldC9wdW5kaXQpClshW0NvZGUg
Q2xpbWF0ZV0oaHR0cHM6Ly9jb2RlY2xpbWF0ZS5jb20vZ2l0aHViL3ZhcnZl
dC9wdW5kaXQuc3ZnKV0oaHR0cHM6Ly9jb2RlY2xpbWF0ZS5jb20vZ2l0aHVi
L3ZhcnZldC9wdW5kaXQpClshW0lubGluZSBkb2NzXShodHRwOi8vaW5jaC1j
aS5vcmcvZ2l0aHViL3ZhcnZldC9wdW5kaXQuc3ZnP2JyYW5jaD1tYXN0ZXIp
XShodHRwOi8vaW5jaC1jaS5vcmcvZ2l0aHViL3ZhcnZldC9wdW5kaXQpClsh
W0dlbSBWZXJzaW9uXShodHRwczovL2JhZGdlLmZ1cnkuaW8vcmIvcHVuZGl0
LnN2ZyldKGh0dHA6Ly9iYWRnZS5mdXJ5LmlvL3JiL3B1bmRpdCkKClB1bmRp
dCBwcm92aWRlcyBhIHNldCBvZiBoZWxwZXJzIHdoaWNoIGd1aWRlIHlvdSBp
biBsZXZlcmFnaW5nIHJlZ3VsYXIgUnVieQpjbGFzc2VzIGFuZCBvYmplY3Qg
b3JpZW50ZWQgZGVzaWduIHBhdHRlcm5zIHRvIGJ1aWxkIGEgc2ltcGxlLCBy
b2J1c3QgYW5kCnNjYWxhYmxlIGF1dGhvcml6YXRpb24gc3lzdGVtLgoKTGlu
a3M6CgotIFtBUEkgZG9jdW1lbnRhdGlvbl0oaHR0cDovL3d3dy5ydWJ5ZG9j
LmluZm8vZ2Vtcy9wdW5kaXQpCi0gW1NvdXJjZSBDb2RlXShodHRwczovL2dp
dGh1Yi5jb20vdmFydmV0L3B1bmRpdCkKLSBbQ29udHJpYnV0aW5nXShodHRw
czovL2dpdGh1Yi5jb20vdmFydmV0L3B1bmRpdC9ibG9iL21hc3Rlci9DT05U
UklCVVRJTkcubWQpCi0gW0NvZGUgb2YgQ29uZHVjdF0oaHR0cHM6Ly9naXRo
dWIuY29tL3ZhcnZldC9wdW5kaXQvYmxvYi9tYXN0ZXIvQ09ERV9PRl9DT05E
VUNULm1kKQoKU3BvbnNvcmVkIGJ5OgoKWzxpbWcgc3JjPSJodHRwczovL3d3
dy52YXJ2ZXQuY29tL2ltYWdlcy93b3JkbWFyay1yZWQuc3ZnIiBhbHQ9IlZh
cnZldCIgaGVpZ2h0PSI1MHB4Ii8+XShodHRwczovL3d3dy52YXJ2ZXQuY29t
KQoKIyMgSW5zdGFsbGF0aW9uCgpgYGAgcnVieQpnZW0gInB1bmRpdCIKYGBg
CgpJbmNsdWRlIFB1bmRpdCBpbiB5b3VyIGFwcGxpY2F0aW9uIGNvbnRyb2xs
ZXI6CgpgYGAgcnVieQpjbGFzcyBBcHBsaWNhdGlvbkNvbnRyb2xsZXIgPCBB
Y3Rpb25Db250cm9sbGVyOjpCYXNlCiAgaW5jbHVkZSBQdW5kaXQKICBwcm90
ZWN0X2Zyb21fZm9yZ2VyeQplbmQKYGBgCgpPcHRpb25hbGx5LCB5b3UgY2Fu
IHJ1biB0aGUgZ2VuZXJhdG9yLCB3aGljaCB3aWxsIHNldCB1cCBhbiBhcHBs
aWNhdGlvbiBwb2xpY3kKd2l0aCBzb21lIHVzZWZ1bCBkZWZhdWx0cyBmb3Ig
eW91OgoKYGBgIHNoCnJhaWxzIGcgcHVuZGl0Omluc3RhbGwKYGBgCgpBZnRl
ciBnZW5lcmF0aW5nIHlvdXIgYXBwbGljYXRpb24gcG9saWN5LCByZXN0YXJ0
IHRoZSBSYWlscyBzZXJ2ZXIgc28gdGhhdCBSYWlscwpjYW4gcGljayB1cCBh
bnkgY2xhc3NlcyBpbiB0aGUgbmV3IGBhcHAvcG9saWNpZXMvYCBkaXJlY3Rv
cnkuCgojIyBQb2xpY2llcwoKUHVuZGl0IGlzIGZvY3VzZWQgYXJvdW5kIHRo
ZSBub3Rpb24gb2YgcG9saWN5IGNsYXNzZXMuIFdlIHN1Z2dlc3QgdGhhdCB5
b3UgcHV0CnRoZXNlIGNsYXNzZXMgaW4gYGFwcC9wb2xpY2llc2AuIFRoaXMg
aXMgYSBzaW1wbGUgZXhhbXBsZSB0aGF0IGFsbG93cyB1cGRhdGluZwphIHBv
c3QgaWYgdGhlIHVzZXIgaXMgYW4gYWRtaW4sIG9yIGlmIHRoZSBwb3N0IGlz
IHVucHVibGlzaGVkOgoKYGBgIHJ1YnkKY2xhc3MgUG9zdFBvbGljeQogIGF0
dHJfcmVhZGVyIDp1c2VyLCA6cG9zdAoKICBkZWYgaW5pdGlhbGl6ZSh1c2Vy
LCBwb3N0KQogICAgQHVzZXIgPSB1c2VyCiAgICBAcG9zdCA9IHBvc3QKICBl
bmQKCiAgZGVmIHVwZGF0ZT8KICAgIHVzZXIuYWRtaW4/IG9yIG5vdCBwb3N0
LnB1Ymxpc2hlZD8KICBlbmQKZW5kCmBgYAoKQXMgeW91IGNhbiBzZWUsIHRo
aXMgaXMganVzdCBhIHBsYWluIFJ1YnkgY2xhc3MuIFB1bmRpdCBtYWtlcyB0
aGUgZm9sbG93aW5nCmFzc3VtcHRpb25zIGFib3V0IHRoaXMgY2xhc3M6Cgot
IFRoZSBjbGFzcyBoYXMgdGhlIHNhbWUgbmFtZSBhcyBzb21lIGtpbmQgb2Yg
bW9kZWwgY2xhc3MsIG9ubHkgc3VmZml4ZWQKICB3aXRoIHRoZSB3b3JkICJQ
b2xpY3kiLgotIFRoZSBmaXJzdCBhcmd1bWVudCBpcyBhIHVzZXIuIEluIHlv
dXIgY29udHJvbGxlciwgUHVuZGl0IHdpbGwgY2FsbCB0aGUKICBgY3VycmVu
dF91c2VyYCBtZXRob2QgdG8gcmV0cmlldmUgd2hhdCB0byBzZW5kIGludG8g
dGhpcyBhcmd1bWVudAotIFRoZSBzZWNvbmQgYXJndW1lbnQgaXMgc29tZSBr
aW5kIG9mIG1vZGVsIG9iamVjdCwgd2hvc2UgYXV0aG9yaXphdGlvbgogIHlv
dSB3YW50IHRvIGNoZWNrLiBUaGlzIGRvZXMgbm90IG5lZWQgdG8gYmUgYW4g
QWN0aXZlUmVjb3JkIG9yIGV2ZW4KICBhbiBBY3RpdmVNb2RlbCBvYmplY3Qs
IGl0IGNhbiBiZSBhbnl0aGluZyByZWFsbHkuCi0gVGhlIGNsYXNzIGltcGxl
bWVudHMgc29tZSBraW5kIG9mIHF1ZXJ5IG1ldGhvZCwgaW4gdGhpcyBjYXNl
IGB1cGRhdGU/YC4KICBVc3VhbGx5LCB0aGlzIHdpbGwgbWFwIHRvIHRoZSBu
YW1lIG9mIGEgcGFydGljdWxhciBjb250cm9sbGVyIGFjdGlvbi4KClRoYXQn
cyBpdCByZWFsbHkuCgpVc3VhbGx5IHlvdSdsbCB3YW50IHRvIGluaGVyaXQg
ZnJvbSB0aGUgYXBwbGljYXRpb24gcG9saWN5IGNyZWF0ZWQgYnkgdGhlCmdl
bmVyYXRvciwgb3Igc2V0IHVwIHlvdXIgb3duIGJhc2UgY2xhc3MgdG8gaW5o
ZXJpdCBmcm9tOgoKYGBgIHJ1YnkKY2xhc3MgUG9zdFBvbGljeSA8IEFwcGxp
Y2F0aW9uUG9saWN5CiAgZGVmIHVwZGF0ZT8KICAgIHVzZXIuYWRtaW4/IG9y
IG5vdCByZWNvcmQucHVibGlzaGVkPwogIGVuZAplbmQKYGBgCgpJbiB0aGUg
Z2VuZXJhdGVkIGBBcHBsaWNhdGlvblBvbGljeWAsIHRoZSBtb2RlbCBvYmpl
Y3QgaXMgY2FsbGVkIGByZWNvcmRgLgoKU3VwcG9zaW5nIHRoYXQgeW91IGhh
dmUgYW4gaW5zdGFuY2Ugb2YgY2xhc3MgYFBvc3RgLCBQdW5kaXQgbm93IGxl
dHMgeW91IGRvCnRoaXMgaW4geW91ciBjb250cm9sbGVyOgoKYGBgIHJ1YnkK
ZGVmIHVwZGF0ZQogIEBwb3N0ID0gUG9zdC5maW5kKHBhcmFtc1s6aWRdKQog
IGF1dGhvcml6ZSBAcG9zdAogIGlmIEBwb3N0LnVwZGF0ZShwb3N0X3BhcmFt
cykKICAgIHJlZGlyZWN0X3RvIEBwb3N0CiAgZWxzZQogICAgcmVuZGVyIDpl
ZGl0CiAgZW5kCmVuZApgYGAKClRoZSBhdXRob3JpemUgbWV0aG9kIGF1dG9t
YXRpY2FsbHkgaW5mZXJzIHRoYXQgYFBvc3RgIHdpbGwgaGF2ZSBhIG1hdGNo
aW5nCmBQb3N0UG9saWN5YCBjbGFzcywgYW5kIGluc3RhbnRpYXRlcyB0aGlz
IGNsYXNzLCBoYW5kaW5nIGluIHRoZSBjdXJyZW50IHVzZXIKYW5kIHRoZSBn
aXZlbiByZWNvcmQuIEl0IHRoZW4gaW5mZXJzIGZyb20gdGhlIGFjdGlvbiBu
YW1lLCB0aGF0IGl0IHNob3VsZCBjYWxsCmB1cGRhdGU/YCBvbiB0aGlzIGlu
c3RhbmNlIG9mIHRoZSBwb2xpY3kuIEluIHRoaXMgY2FzZSwgeW91IGNhbiBp
bWFnaW5lIHRoYXQKYGF1dGhvcml6ZWAgd291bGQgaGF2ZSBkb25lIHNvbWV0
aGluZyBsaWtlIHRoaXM6CgpgYGAgcnVieQp1bmxlc3MgUG9zdFBvbGljeS5u
ZXcoY3VycmVudF91c2VyLCBAcG9zdCkudXBkYXRlPwogIHJhaXNlIFB1bmRp
dDo6Tm90QXV0aG9yaXplZEVycm9yLCAibm90IGFsbG93ZWQgdG8gdXBkYXRl
PyB0aGlzICN7QHBvc3QuaW5zcGVjdH0iCmVuZApgYGAKCllvdSBjYW4gcGFz
cyBhIHNlY29uZCBhcmd1bWVudCB0byBgYXV0aG9yaXplYCBpZiB0aGUgbmFt
ZSBvZiB0aGUgcGVybWlzc2lvbiB5b3UKd2FudCB0byBjaGVjayBkb2Vzbid0
IG1hdGNoIHRoZSBhY3Rpb24gbmFtZS4gRm9yIGV4YW1wbGU6CgpgYGAgcnVi
eQpkZWYgcHVibGlzaAogIEBwb3N0ID0gUG9zdC5maW5kKHBhcmFtc1s6aWRd
KQogIGF1dGhvcml6ZSBAcG9zdCwgOnVwZGF0ZT8KICBAcG9zdC5wdWJsaXNo
IQogIHJlZGlyZWN0X3RvIEBwb3N0CmVuZApgYGAKCllvdSBjYW4gcGFzcyBh
biBhcmd1bWVudCB0byBvdmVycmlkZSB0aGUgcG9saWN5IGNsYXNzIGlmIG5l
Y2Vzc2FyeS4gRm9yIGV4YW1wbGU6CgpgYGBydWJ5CmRlZiBjcmVhdGUKICBA
cHVibGljYXRpb24gPSBmaW5kX3B1YmxpY2F0aW9uICMgYXNzdW1lIHRoaXMg
bWV0aG9kIHJldHVybnMgYW55IG1vZGVsIHRoYXQgYmVoYXZlcyBsaWtlIGEg
cHVibGljYXRpb24KICAjIEBwdWJsaWNhdGlvbi5jbGFzcyA9PiBQb3N0CiAg
YXV0aG9yaXplIEBwdWJsaWNhdGlvbiwgcG9saWN5X2NsYXNzOiBQdWJsaWNh
dGlvblBvbGljeQogIEBwdWJsaWNhdGlvbi5wdWJsaXNoIQogIHJlZGlyZWN0
X3RvIEBwdWJsaWNhdGlvbgplbmQKYGBgCgpJZiB5b3UgZG9uJ3QgaGF2ZSBh
biBpbnN0YW5jZSBmb3IgdGhlIGZpcnN0IGFyZ3VtZW50IHRvIGBhdXRob3Jp
emVgLCB0aGVuIHlvdSBjYW4gcGFzcwp0aGUgY2xhc3MuIEZvciBleGFtcGxl
OgoKUG9saWN5OgpgYGBydWJ5CmNsYXNzIFBvc3RQb2xpY3kgPCBBcHBsaWNh
dGlvblBvbGljeQogIGRlZiBhZG1pbl9saXN0PwogICAgdXNlci5hZG1pbj8K
ICBlbmQKZW5kCmBgYAoKQ29udHJvbGxlcjoKYGBgcnVieQpkZWYgYWRtaW5f
bGlzdAogIGF1dGhvcml6ZSBQb3N0ICMgd2UgZG9uJ3QgaGF2ZSBhIHBhcnRp
Y3VsYXIgcG9zdCB0byBhdXRob3JpemUKICAjIFJlc3Qgb2YgY29udHJvbGxl
ciBhY3Rpb24KZW5kCmBgYAoKYGF1dGhvcml6ZWAgcmV0dXJucyB0aGUgb2Jq
ZWN0IHBhc3NlZCB0byBpdCwgc28geW91IGNhbiBjaGFpbiBpdCBsaWtlIHRo
aXM6CgpDb250cm9sbGVyOgpgYGBydWJ5CmRlZiBzaG93CiAgQHVzZXIgPSBh
dXRob3JpemUgVXNlci5maW5kKHBhcmFtc1s6aWRdKQplbmQKYGBgCgpZb3Ug
Y2FuIGVhc2lseSBnZXQgYSBob2xkIG9mIGFuIGluc3RhbmNlIG9mIHRoZSBw
b2xpY3kgdGhyb3VnaCB0aGUgYHBvbGljeWAKbWV0aG9kIGluIGJvdGggdGhl
IHZpZXcgYW5kIGNvbnRyb2xsZXIuIFRoaXMgaXMgZXNwZWNpYWxseSB1c2Vm
dWwgZm9yCmNvbmRpdGlvbmFsbHkgc2hvd2luZyBsaW5rcyBvciBidXR0b25z
IGluIHRoZSB2aWV3OgoKYGBgIGVyYgo8JSBpZiBwb2xpY3koQHBvc3QpLnVw
ZGF0ZT8gJT4KICA8JT0gbGlua190byAiRWRpdCBwb3N0IiwgZWRpdF9wb3N0
X3BhdGgoQHBvc3QpICU+CjwlIGVuZCAlPgpgYGAKIyMgSGVhZGxlc3MgcG9s
aWNpZXMKCkdpdmVuIHRoZXJlIGlzIGEgcG9saWN5IHdpdGhvdXQgYSBjb3Jy
ZXNwb25kaW5nIG1vZGVsIC8gcnVieSBjbGFzcywKeW91IGNhbiByZXRyaWV2
ZSBpdCBieSBwYXNzaW5nIGEgc3ltYm9sLgoKYGBgcnVieQojIGFwcC9wb2xp
Y2llcy9kYXNoYm9hcmRfcG9saWN5LnJiCmNsYXNzIERhc2hib2FyZFBvbGlj
eSA8IFN0cnVjdC5uZXcoOnVzZXIsIDpkYXNoYm9hcmQpCiAgIyAuLi4KZW5k
CmBgYAoKTm90ZSB0aGF0IHRoZSBoZWFkbGVzcyBwb2xpY3kgc3RpbGwgbmVl
ZHMgdG8gYWNjZXB0IHR3byBhcmd1bWVudHMuIFRoZQpzZWNvbmQgYXJndW1l
bnQgd2lsbCBqdXN0IGJlIHRoZSBzeW1ib2wgYDpkYXNoYm9hcmRgIGluIHRo
aXMgY2FzZSB3aGljaAppcyB3aGF0IGlzIHBhc3NlZCBhcyB0aGUgcmVjb3Jk
IHRvIGBhdXRob3JpemVgIGJlbG93LgoKYGBgcnVieQojIEluIGNvbnRyb2xs
ZXJzCmF1dGhvcml6ZSA6ZGFzaGJvYXJkLCA6c2hvdz8KYGBgCgpgYGBlcmIK
IyBJbiB2aWV3cwo8JSBpZiBwb2xpY3koOmRhc2hib2FyZCkuc2hvdz8gJT4K
ICA8JT0gbGlua190byAnRGFzaGJvYXJkJywgZGFzaGJvYXJkX3BhdGggJT4K
PCUgZW5kICU+CmBgYAoKIyMgU2NvcGVzCgpPZnRlbiwgeW91IHdpbGwgd2Fu
dCB0byBoYXZlIHNvbWUga2luZCBvZiB2aWV3IGxpc3RpbmcgcmVjb3JkcyB3
aGljaCBhCnBhcnRpY3VsYXIgdXNlciBoYXMgYWNjZXNzIHRvLiBXaGVuIHVz
aW5nIFB1bmRpdCwgeW91IGFyZSBleHBlY3RlZCB0bwpkZWZpbmUgYSBjbGFz
cyBjYWxsZWQgYSBwb2xpY3kgc2NvcGUuIEl0IGNhbiBsb29rIHNvbWV0aGlu
ZyBsaWtlIHRoaXM6CgpgYGAgcnVieQpjbGFzcyBQb3N0UG9saWN5IDwgQXBw
bGljYXRpb25Qb2xpY3kKICBjbGFzcyBTY29wZQogICAgZGVmIGluaXRpYWxp
emUodXNlciwgc2NvcGUpCiAgICAgIEB1c2VyICA9IHVzZXIKICAgICAgQHNj
b3BlID0gc2NvcGUKICAgIGVuZAoKICAgIGRlZiByZXNvbHZlCiAgICAgIGlm
IHVzZXIuYWRtaW4/CiAgICAgICAgc2NvcGUuYWxsCiAgICAgIGVsc2UKICAg
ICAgICBzY29wZS53aGVyZShwdWJsaXNoZWQ6IHRydWUpCiAgICAgIGVuZAog
ICAgZW5kCgogICAgcHJpdmF0ZQoKICAgIGF0dHJfcmVhZGVyIDp1c2VyLCA6
c2NvcGUKICBlbmQKCiAgZGVmIHVwZGF0ZT8KICAgIHVzZXIuYWRtaW4/IG9y
IG5vdCByZWNvcmQucHVibGlzaGVkPwogIGVuZAplbmQKYGBgCgpQdW5kaXQg
bWFrZXMgdGhlIGZvbGxvd2luZyBhc3N1bXB0aW9ucyBhYm91dCB0aGlzIGNs
YXNzOgoKLSBUaGUgY2xhc3MgaGFzIHRoZSBuYW1lIGBTY29wZWAgYW5kIGlz
IG5lc3RlZCB1bmRlciB0aGUgcG9saWN5IGNsYXNzLgotIFRoZSBmaXJzdCBh
cmd1bWVudCBpcyBhIHVzZXIuIEluIHlvdXIgY29udHJvbGxlciwgUHVuZGl0
IHdpbGwgY2FsbCB0aGUKICBgY3VycmVudF91c2VyYCBtZXRob2QgdG8gcmV0
cmlldmUgd2hhdCB0byBzZW5kIGludG8gdGhpcyBhcmd1bWVudC4KLSBUaGUg
c2Vjb25kIGFyZ3VtZW50IGlzIGEgc2NvcGUgb2Ygc29tZSBraW5kIG9uIHdo
aWNoIHRvIHBlcmZvcm0gc29tZSBraW5kIG9mCiAgcXVlcnkuIEl0IHdpbGwg
dXN1YWxseSBiZSBhbiBBY3RpdmVSZWNvcmQgY2xhc3Mgb3IgYQogIGBBY3Rp
dmVSZWNvcmQ6OlJlbGF0aW9uYCwgYnV0IGl0IGNvdWxkIGJlIHNvbWV0aGlu
ZyBlbHNlIGVudGlyZWx5LgotIEluc3RhbmNlcyBvZiB0aGlzIGNsYXNzIHJl
c3BvbmQgdG8gdGhlIG1ldGhvZCBgcmVzb2x2ZWAsIHdoaWNoIHNob3VsZCBy
ZXR1cm4KICBzb21lIGtpbmQgb2YgcmVzdWx0IHdoaWNoIGNhbiBiZSBpdGVy
YXRlZCBvdmVyLiBGb3IgQWN0aXZlUmVjb3JkIGNsYXNzZXMsCiAgdGhpcyB3
b3VsZCB1c3VhbGx5IGJlIGFuIGBBY3RpdmVSZWNvcmQ6OlJlbGF0aW9uYC4K
CllvdSdsbCBwcm9iYWJseSB3YW50IHRvIGluaGVyaXQgZnJvbSB0aGUgYXBw
bGljYXRpb24gcG9saWN5IHNjb3BlIGdlbmVyYXRlZCBieSB0aGUKZ2VuZXJh
dG9yLCBvciBjcmVhdGUgeW91ciBvd24gYmFzZSBjbGFzcyB0byBpbmhlcml0
IGZyb206CgpgYGAgcnVieQpjbGFzcyBQb3N0UG9saWN5IDwgQXBwbGljYXRp
b25Qb2xpY3kKICBjbGFzcyBTY29wZSA8IFNjb3BlCiAgICBkZWYgcmVzb2x2
ZQogICAgICBpZiB1c2VyLmFkbWluPwogICAgICAgIHNjb3BlLmFsbAogICAg
ICBlbHNlCiAgICAgICAgc2NvcGUud2hlcmUocHVibGlzaGVkOiB0cnVlKQog
ICAgICBlbmQKICAgIGVuZAogIGVuZAoKICBkZWYgdXBkYXRlPwogICAgdXNl
ci5hZG1pbj8gb3Igbm90IHJlY29yZC5wdWJsaXNoZWQ/CiAgZW5kCmVuZApg
YGAKCllvdSBjYW4gbm93IHVzZSB0aGlzIGNsYXNzIGZyb20geW91ciBjb250
cm9sbGVyIHZpYSB0aGUgYHBvbGljeV9zY29wZWAgbWV0aG9kOgoKYGBgIHJ1
YnkKZGVmIGluZGV4CiAgQHBvc3RzID0gcG9saWN5X3Njb3BlKFBvc3QpCmVu
ZAoKZGVmIHNob3cKICBAcG9zdCA9IHBvbGljeV9zY29wZShQb3N0KS5maW5k
KHBhcmFtc1s6aWRdKQplbmQKYGBgCgpMaWtlIHdpdGggdGhlIGF1dGhvcml6
ZSBtZXRob2QsIHlvdSBjYW4gYWxzbyBvdmVycmlkZSB0aGUgcG9saWN5IHNj
b3BlIGNsYXNzOgoKYGBgIHJ1YnkKZGVmIGluZGV4CiAgIyBwdWJsaWNhdGlv
bl9jbGFzcyA9PiBQb3N0CiAgQHB1YmxpY2F0aW9ucyA9IHBvbGljeV9zY29w
ZShwdWJsaWNhdGlvbl9jbGFzcywgcG9saWN5X3Njb3BlX2NsYXNzOiBQdWJs
aWNhdGlvblBvbGljeTo6U2NvcGUpCmVuZApgYGAKCkp1c3QgYXMgd2l0aCB5
b3VyIHBvbGljeSwgdGhpcyB3aWxsIGF1dG9tYXRpY2FsbHkgaW5mZXIgdGhh
dCB5b3Ugd2FudCB0byB1c2UKdGhlIGBQb3N0UG9saWN5OjpTY29wZWAgY2xh
c3MsIGl0IHdpbGwgaW5zdGFudGlhdGUgdGhpcyBjbGFzcyBhbmQgY2FsbApg
cmVzb2x2ZWAgb24gdGhlIGluc3RhbmNlLiBJbiB0aGlzIGNhc2UgaXQgaXMg
YSBzaG9ydGN1dCBmb3IgZG9pbmc6CgpgYGAgcnVieQpkZWYgaW5kZXgKICBA
cG9zdHMgPSBQb3N0UG9saWN5OjpTY29wZS5uZXcoY3VycmVudF91c2VyLCBQ
b3N0KS5yZXNvbHZlCmVuZApgYGAKCllvdSBjYW4sIGFuZCBhcmUgZW5jb3Vy
YWdlZCB0bywgdXNlIHRoaXMgbWV0aG9kIGluIHZpZXdzOgoKYGBgIGVyYgo8
JSBwb2xpY3lfc2NvcGUoQHVzZXIucG9zdHMpLmVhY2ggZG8gfHBvc3R8ICU+
CiAgPHA+PCU9IGxpbmtfdG8gcG9zdC50aXRsZSwgcG9zdF9wYXRoKHBvc3Qp
ICU+PC9wPgo8JSBlbmQgJT4KYGBgCgojIyBFbnN1cmluZyBwb2xpY2llcyBh
bmQgc2NvcGVzIGFyZSB1c2VkCgpXaGVuIHlvdSBhcmUgZGV2ZWxvcGluZyBh
biBhcHBsaWNhdGlvbiB3aXRoIFB1bmRpdCBpdCBjYW4gYmUgZWFzeSB0byBm
b3JnZXQgdG8KYXV0aG9yaXplIHNvbWUgYWN0aW9uLiBQZW9wbGUgYXJlIGZv
cmdldGZ1bCBhZnRlciBhbGwuIFNpbmNlIFB1bmRpdCBlbmNvdXJhZ2VzCnlv
dSB0byBhZGQgdGhlIGBhdXRob3JpemVgIGNhbGwgbWFudWFsbHkgdG8gZWFj
aCBjb250cm9sbGVyIGFjdGlvbiwgaXQncyByZWFsbHkKZWFzeSB0byBtaXNz
IG9uZS4KClRoYW5rZnVsbHksIFB1bmRpdCBoYXMgYSBoYW5keSBmZWF0dXJl
IHdoaWNoIHJlbWluZHMgeW91IGluIGNhc2UgeW91IGZvcmdldC4KUHVuZGl0
IHRyYWNrcyB3aGV0aGVyIHlvdSBoYXZlIGNhbGxlZCBgYXV0aG9yaXplYCBh
bnl3aGVyZSBpbiB5b3VyIGNvbnRyb2xsZXIKYWN0aW9uLiBQdW5kaXQgYWxz
byBhZGRzIGEgbWV0aG9kIHRvIHlvdXIgY29udHJvbGxlcnMgY2FsbGVkCmB2
ZXJpZnlfYXV0aG9yaXplZGAuIFRoaXMgbWV0aG9kIHdpbGwgcmFpc2UgYW4g
ZXhjZXB0aW9uIGlmIGBhdXRob3JpemVgIGhhcyBub3QKeWV0IGJlZW4gY2Fs
bGVkLiBZb3Ugc2hvdWxkIHJ1biB0aGlzIG1ldGhvZCBpbiBhbiBgYWZ0ZXJf
YWN0aW9uYCBob29rIHRvIGVuc3VyZQp0aGF0IHlvdSBoYXZlbid0IGZvcmdv
dHRlbiB0byBhdXRob3JpemUgdGhlIGFjdGlvbi4gRm9yIGV4YW1wbGU6Cgpg
YGAgcnVieQpjbGFzcyBBcHBsaWNhdGlvbkNvbnRyb2xsZXIgPCBBY3Rpb25D
b250cm9sbGVyOjpCYXNlCiAgaW5jbHVkZSBQdW5kaXQKICBhZnRlcl9hY3Rp
b24gOnZlcmlmeV9hdXRob3JpemVkCmVuZApgYGAKCkxpa2V3aXNlLCBQdW5k
aXQgYWxzbyBhZGRzIGB2ZXJpZnlfcG9saWN5X3Njb3BlZGAgdG8geW91ciBj
b250cm9sbGVyLiBUaGlzCndpbGwgcmFpc2UgYW4gZXhjZXB0aW9uIHNpbWls
YXIgdG8gYHZlcmlmeV9hdXRob3JpemVkYC4gSG93ZXZlciwgaXQgdHJhY2tz
CmlmIGBwb2xpY3lfc2NvcGVgIGlzIHVzZWQgaW5zdGVhZCBvZiBgYXV0aG9y
aXplYC4gVGhpcyBpcyBtb3N0bHkgdXNlZnVsIGZvcgpjb250cm9sbGVyIGFj
dGlvbnMgbGlrZSBgaW5kZXhgIHdoaWNoIGZpbmQgY29sbGVjdGlvbnMgd2l0
aCBhIHNjb3BlIGFuZCBkb24ndAphdXRob3JpemUgaW5kaXZpZHVhbCBpbnN0
YW5jZXMuCgpgYGAgcnVieQpjbGFzcyBBcHBsaWNhdGlvbkNvbnRyb2xsZXIg
PCBBY3Rpb25Db250cm9sbGVyOjpCYXNlCiAgaW5jbHVkZSBQdW5kaXQKICBh
ZnRlcl9hY3Rpb24gOnZlcmlmeV9hdXRob3JpemVkLCBleGNlcHQ6IDppbmRl
eAogIGFmdGVyX2FjdGlvbiA6dmVyaWZ5X3BvbGljeV9zY29wZWQsIG9ubHk6
IDppbmRleAplbmQKYGBgCgoqKlRoaXMgdmVyaWZpY2F0aW9uIG1lY2hhbmlz
bSBvbmx5IGV4aXN0cyB0byBhaWQgeW91IHdoaWxlIGRldmVsb3BpbmcgeW91
cgphcHBsaWNhdGlvbiwgc28geW91IGRvbid0IGZvcmdldCB0byBjYWxsIGBh
dXRob3JpemVgLiBJdCBpcyBub3Qgc29tZSBraW5kIG9mCmZhaWxzYWZlIG1l
Y2hhbmlzbSBvciBhdXRob3JpemF0aW9uIG1lY2hhbmlzbS4gWW91IHNob3Vs
ZCBiZSBhYmxlIHRvIHJlbW92ZQp0aGVzZSBmaWx0ZXJzIHdpdGhvdXQgYWZm
ZWN0aW5nIGhvdyB5b3VyIGFwcCB3b3JrcyBpbiBhbnkgd2F5LioqCgpTb21l
IHBlb3BsZSBoYXZlIGZvdW5kIHRoaXMgZmVhdHVyZSBjb25mdXNpbmcsIHdo
aWxlIG1hbnkgb3RoZXJzCmZpbmQgaXQgZXh0cmVtZWx5IGhlbHBmdWwuIElm
IHlvdSBmYWxsIGludG8gdGhlIGNhdGVnb3J5IG9mIHBlb3BsZSB3aG8gZmlu
ZCBpdApjb25mdXNpbmcgdGhlbiB5b3UgZG8gbm90IG5lZWQgdG8gdXNlIGl0
LiBQdW5kaXQgd2lsbCB3b3JrIGp1c3QgZmluZSB3aXRob3V0CnVzaW5nIGB2
ZXJpZnlfYXV0aG9yaXplZGAgYW5kIGB2ZXJpZnlfcG9saWN5X3Njb3BlZGAu
CgojIyMgQ29uZGl0aW9uYWwgdmVyaWZpY2F0aW9uCgpJZiB5b3UncmUgdXNp
bmcgYHZlcmlmeV9hdXRob3JpemVkYCBpbiB5b3VyIGNvbnRyb2xsZXJzIGJ1
dCBuZWVkIHRvCmNvbmRpdGlvbmFsbHkgYnlwYXNzIHZlcmlmaWNhdGlvbiwg
eW91IGNhbiB1c2UgYHNraXBfYXV0aG9yaXphdGlvbmAuIEZvcgpieXBhc3Np
bmcgYHZlcmlmeV9wb2xpY3lfc2NvcGVkYCwgdXNlIGBza2lwX3BvbGljeV9z
Y29wZWAuIFRoZXNlIGFyZSB1c2VmdWwKaW4gY2lyY3Vtc3RhbmNlcyB3aGVy
ZSB5b3UgZG9uJ3Qgd2FudCB0byBkaXNhYmxlIHZlcmlmaWNhdGlvbiBmb3Ig
dGhlCmVudGlyZSBhY3Rpb24sIGJ1dCBoYXZlIHNvbWUgY2FzZXMgd2hlcmUg
eW91IGludGVuZCB0byBub3QgYXV0aG9yaXplLgoKYGBgcnVieQpkZWYgc2hv
dwogIHJlY29yZCA9IFJlY29yZC5maW5kX2J5KGF0dHJpYnV0ZTogInZhbHVl
IikKICBpZiByZWNvcmQucHJlc2VudD8KICAgIGF1dGhvcml6ZSByZWNvcmQK
ICBlbHNlCiAgICBza2lwX2F1dGhvcml6YXRpb24KICBlbmQKZW5kCmBgYAoK
IyMgTWFudWFsbHkgc3BlY2lmeWluZyBwb2xpY3kgY2xhc3NlcwoKU29tZXRp
bWVzIHlvdSBtaWdodCB3YW50IHRvIGV4cGxpY2l0bHkgZGVjbGFyZSB3aGlj
aCBwb2xpY3kgdG8gdXNlIGZvciBhIGdpdmVuCmNsYXNzLCBpbnN0ZWFkIG9m
IGxldHRpbmcgUHVuZGl0IGluZmVyIGl0LiBUaGlzIGNhbiBiZSBkb25lIGxp
a2Ugc286CgpgYGAgcnVieQpjbGFzcyBQb3N0CiAgZGVmIHNlbGYucG9saWN5
X2NsYXNzCiAgICBQb3N0YWJsZVBvbGljeQogIGVuZAplbmQKYGBgCgojIyBK
dXN0IHBsYWluIG9sZCBSdWJ5CgpBcyB5b3UgY2FuIHNlZSwgUHVuZGl0IGRv
ZXNuJ3QgZG8gYW55dGhpbmcgeW91IGNvdWxkbid0IGhhdmUgZWFzaWx5IGRv
bmUKeW91cnNlbGYuICBJdCdzIGEgdmVyeSBzbWFsbCBsaWJyYXJ5LCBpdCBq
dXN0IHByb3ZpZGVzIGEgZmV3IG5lYXQgaGVscGVycy4KVG9nZXRoZXIgdGhl
c2UgZ2l2ZSB5b3UgdGhlIHBvd2VyIG9mIGJ1aWxkaW5nIGEgd2VsbCBzdHJ1
Y3R1cmVkLCBmdWxseSB3b3JraW5nCmF1dGhvcml6YXRpb24gc3lzdGVtIHdp
dGhvdXQgdXNpbmcgYW55IHNwZWNpYWwgRFNMcyBvciBmdW5reSBzeW50YXgg
b3IKYW55dGhpbmcuCgpSZW1lbWJlciB0aGF0IGFsbCBvZiB0aGUgcG9saWN5
IGFuZCBzY29wZSBjbGFzc2VzIGFyZSBqdXN0IHBsYWluIFJ1YnkgY2xhc3Nl
cywKd2hpY2ggbWVhbnMgeW91IGNhbiB1c2UgdGhlIHNhbWUgbWVjaGFuaXNt
cyB5b3UgYWx3YXlzIHVzZSB0byBEUlkgdGhpbmdzIHVwLgpFbmNhcHN1bGF0
ZSBhIHNldCBvZiBwZXJtaXNzaW9ucyBpbnRvIGEgbW9kdWxlIGFuZCBpbmNs
dWRlIHRoZW0gaW4gbXVsdGlwbGUKcG9saWNpZXMuIFVzZSBgYWxpYXNfbWV0
aG9kYCB0byBtYWtlIHNvbWUgcGVybWlzc2lvbnMgYmVoYXZlIHRoZSBzYW1l
IGFzCm90aGVycy4gSW5oZXJpdCBmcm9tIGEgYmFzZSBzZXQgb2YgcGVybWlz
c2lvbnMuIFVzZSBtZXRhcHJvZ3JhbW1pbmcgaWYgeW91CnJlYWxseSBoYXZl
IHRvLgoKIyMgR2VuZXJhdG9yCgpVc2UgdGhlIHN1cHBsaWVkIGdlbmVyYXRv
ciB0byBnZW5lcmF0ZSBwb2xpY2llczoKCmBgYCBzaApyYWlscyBnIHB1bmRp
dDpwb2xpY3kgcG9zdApgYGAKCiMjIENsb3NlZCBzeXN0ZW1zCgpJbiBtYW55
IGFwcGxpY2F0aW9ucywgb25seSBsb2dnZWQgaW4gdXNlcnMgYXJlIHJlYWxs
eSBhYmxlIHRvIGRvIGFueXRoaW5nLiBJZgp5b3UncmUgYnVpbGRpbmcgc3Vj
aCBhIHN5c3RlbSwgaXQgY2FuIGJlIGtpbmQgb2YgY3VtYmVyc29tZSB0byBj
aGVjayB0aGF0IHRoZQp1c2VyIGluIGEgcG9saWN5IGlzbid0IGBuaWxgIGZv
ciBldmVyeSBzaW5nbGUgcGVybWlzc2lvbi4gQXNpZGUgZnJvbSBwb2xpY2ll
cywKeW91IGNhbiBhZGQgdGhpcyBjaGVjayB0byB0aGUgYmFzZSBjbGFzcyBm
b3Igc2NvcGVzLgoKV2Ugc3VnZ2VzdCB0aGF0IHlvdSBkZWZpbmUgYSBmaWx0
ZXIgdGhhdCByZWRpcmVjdHMgdW5hdXRoZW50aWNhdGVkIHVzZXJzIHRvIHRo
ZQpsb2dpbiBwYWdlLiBBcyBhIHNlY29uZGFyeSBkZWZlbmNlLCBpZiB5b3Un
dmUgZGVmaW5lZCBhbiBBcHBsaWNhdGlvblBvbGljeSwgaXQKbWlnaHQgYmUg
YSBnb29kIGlkZWEgdG8gcmFpc2UgYW4gZXhjZXB0aW9uIGlmIHNvbWVob3cg
YW4gdW5hdXRoZW50aWNhdGVkIHVzZXIKZ290IHRocm91Z2guIFRoaXMgd2F5
IHlvdSBjYW4gZmFpbCBtb3JlIGdyYWNlZnVsbHkuCgpgYGAgcnVieQpjbGFz
cyBBcHBsaWNhdGlvblBvbGljeQogIGRlZiBpbml0aWFsaXplKHVzZXIsIHJl
Y29yZCkKICAgIHJhaXNlIFB1bmRpdDo6Tm90QXV0aG9yaXplZEVycm9yLCAi
bXVzdCBiZSBsb2dnZWQgaW4iIHVubGVzcyB1c2VyCiAgICBAdXNlciAgID0g
dXNlcgogICAgQHJlY29yZCA9IHJlY29yZAogIGVuZAoKICBjbGFzcyBTY29w
ZQogICAgYXR0cl9yZWFkZXIgOnVzZXIsIDpzY29wZQoKICAgIGRlZiBpbml0
aWFsaXplKHVzZXIsIHNjb3BlKQogICAgICByYWlzZSBQdW5kaXQ6Ok5vdEF1
dGhvcml6ZWRFcnJvciwgIm11c3QgYmUgbG9nZ2VkIGluIiB1bmxlc3MgdXNl
cgogICAgICBAdXNlciA9IHVzZXIKICAgICAgQHNjb3BlID0gc2NvcGUKICAg
IGVuZAogIGVuZAplbmQKYGBgCgojIyBOaWxDbGFzc1BvbGljeQoKVG8gc3Vw
cG9ydCBhIFtudWxsIG9iamVjdCBwYXR0ZXJuXShodHRwczovL2VuLndpa2lw
ZWRpYS5vcmcvd2lraS9OdWxsX09iamVjdF9wYXR0ZXJuKQp5b3UgbWF5IGZp
bmQgdGhhdCB5b3Ugd2FudCB0byBpbXBsZW1lbnQgYSBgTmlsQ2xhc3NQb2xp
Y3lgLiBUaGlzIG1pZ2h0IGJlIHVzZWZ1bAp3aGVyZSB5b3Ugd2FudCB0byBl
eHRlbmQgeW91ciBBcHBsaWNhdGlvblBvbGljeSB0byBhbGxvdyBzb21lIHRv
bGVyYW5jZSBvZiwgZm9yCmV4YW1wbGUsIGFzc29jaWF0aW9ucyB3aGljaCBt
aWdodCBiZSBgbmlsYC4KCmBgYHJ1YnkKY2xhc3MgTmlsQ2xhc3NQb2xpY3kg
PCBBcHBsaWNhdGlvblBvbGljeQogIGNsYXNzIFNjb3BlIDwgU2NvcGUKICAg
IGRlZiByZXNvbHZlCiAgICAgIHJhaXNlIFB1bmRpdDo6Tm90RGVmaW5lZEVy
cm9yLCAiQ2Fubm90IHNjb3BlIE5pbENsYXNzIgogICAgZW5kCiAgZW5kCgog
IGRlZiBzaG93PwogICAgZmFsc2UgIyBOb2JvZHkgY2FuIHNlZSBub3RoaW5n
CiAgZW5kCmVuZApgYGAKCiMjIFJlc2N1aW5nIGEgZGVuaWVkIEF1dGhvcml6
YXRpb24gaW4gUmFpbHMKClB1bmRpdCByYWlzZXMgYSBgUHVuZGl0OjpOb3RB
dXRob3JpemVkRXJyb3JgIHlvdSBjYW4KW3Jlc2N1ZV9mcm9tXShodHRwOi8v
Z3VpZGVzLnJ1YnlvbnJhaWxzLm9yZy9hY3Rpb25fY29udHJvbGxlcl9vdmVy
dmlldy5odG1sI3Jlc2N1ZS1mcm9tKQppbiB5b3VyIGBBcHBsaWNhdGlvbkNv
bnRyb2xsZXJgLiBZb3UgY2FuIGN1c3RvbWl6ZSB0aGUgYHVzZXJfbm90X2F1
dGhvcml6ZWRgCm1ldGhvZCBpbiBldmVyeSBjb250cm9sbGVyLgoKYGBgcnVi
eQpjbGFzcyBBcHBsaWNhdGlvbkNvbnRyb2xsZXIgPCBBY3Rpb25Db250cm9s
bGVyOjpCYXNlCiAgcHJvdGVjdF9mcm9tX2ZvcmdlcnkKICBpbmNsdWRlIFB1
bmRpdAoKICByZXNjdWVfZnJvbSBQdW5kaXQ6Ok5vdEF1dGhvcml6ZWRFcnJv
ciwgd2l0aDogOnVzZXJfbm90X2F1dGhvcml6ZWQKCiAgcHJpdmF0ZQoKICBk
ZWYgdXNlcl9ub3RfYXV0aG9yaXplZAogICAgZmxhc2hbOmFsZXJ0XSA9ICJZ
b3UgYXJlIG5vdCBhdXRob3JpemVkIHRvIHBlcmZvcm0gdGhpcyBhY3Rpb24u
IgogICAgcmVkaXJlY3RfdG8ocmVxdWVzdC5yZWZlcnJlciB8fCByb290X3Bh
dGgpCiAgZW5kCmVuZApgYGAKCkFsdGVybmF0aXZlbHksIHlvdSBjYW4gZ2xv
YmFsbHkgaGFuZGxlIFB1bmRpdDo6Tm90QXV0aG9yaXplZEVycm9yJ3MgYnkg
aGF2aW5nIHJhaWxzIGhhbmRsZSB0aGVtIGFzIGEgNDAzIGVycm9yIGFuZCBz
ZXJ2aW5nIGEgNDAzIGVycm9yIHBhZ2UuIEFkZCB0aGUgZm9sbG93aW5nIHRv
IGFwcGxpY2F0aW9uLnJiOgoKYGBgY29uZmlnLmFjdGlvbl9kaXNwYXRjaC5y
ZXNjdWVfcmVzcG9uc2VzWyJQdW5kaXQ6Ok5vdEF1dGhvcml6ZWRFcnJvciJd
ID0gOmZvcmJpZGRlbmBgYAoKIyMgQ3JlYXRpbmcgY3VzdG9tIGVycm9yIG1l
c3NhZ2VzCgpgTm90QXV0aG9yaXplZEVycm9yYHMgcHJvdmlkZSBpbmZvcm1h
dGlvbiBvbiB3aGF0IHF1ZXJ5IChlLmcuIGA6Y3JlYXRlP2ApLCB3aGF0CnJl
Y29yZCAoZS5nLiBhbiBpbnN0YW5jZSBvZiBgUG9zdGApLCBhbmQgd2hhdCBw
b2xpY3kgKGUuZy4gYW4gaW5zdGFuY2Ugb2YKYFBvc3RQb2xpY3lgKSBjYXVz
ZWQgdGhlIGVycm9yIHRvIGJlIHJhaXNlZC4KCk9uZSB3YXkgdG8gdXNlIHRo
ZXNlIGBxdWVyeWAsIGByZWNvcmRgLCBhbmQgYHBvbGljeWAgcHJvcGVydGll
cyBpcyB0byBjb25uZWN0CnRoZW0gd2l0aCBgSTE4bmAgdG8gZ2VuZXJhdGUg
ZXJyb3IgbWVzc2FnZXMuIEhlcmUncyBob3cgeW91IG1pZ2h0IGdvIGFib3V0
IGRvaW5nCnRoYXQuCgpgYGBydWJ5CmNsYXNzIEFwcGxpY2F0aW9uQ29udHJv
bGxlciA8IEFjdGlvbkNvbnRyb2xsZXI6OkJhc2UKIHJlc2N1ZV9mcm9tIFB1
bmRpdDo6Tm90QXV0aG9yaXplZEVycm9yLCB3aXRoOiA6dXNlcl9ub3RfYXV0
aG9yaXplZAoKIHByaXZhdGUKCiBkZWYgdXNlcl9ub3RfYXV0aG9yaXplZChl
eGNlcHRpb24pCiAgIHBvbGljeV9uYW1lID0gZXhjZXB0aW9uLnBvbGljeS5j
bGFzcy50b19zLnVuZGVyc2NvcmUKCiAgIGZsYXNoWzplcnJvcl0gPSB0ICIj
e3BvbGljeV9uYW1lfS4je2V4Y2VwdGlvbi5xdWVyeX0iLCBzY29wZTogInB1
bmRpdCIsIGRlZmF1bHQ6IDpkZWZhdWx0CiAgIHJlZGlyZWN0X3RvKHJlcXVl
c3QucmVmZXJyZXIgfHwgcm9vdF9wYXRoKQogZW5kCmVuZApgYGAKCmBgYHlh
bWwKZW46CiBwdW5kaXQ6CiAgIGRlZmF1bHQ6ICdZb3UgY2Fubm90IHBlcmZv
cm0gdGhpcyBhY3Rpb24uJwogICBwb3N0X3BvbGljeToKICAgICB1cGRhdGU/
OiAnWW91IGNhbm5vdCBlZGl0IHRoaXMgcG9zdCEnCiAgICAgY3JlYXRlPzog
J1lvdSBjYW5ub3QgY3JlYXRlIHBvc3RzIScKYGBgCgpPZiBjb3Vyc2UsIHRo
aXMgaXMganVzdCBhbiBleGFtcGxlLiBQdW5kaXQgaXMgYWdub3N0aWMgYXMg
dG8gaG93IHlvdSBpbXBsZW1lbnQKeW91ciBlcnJvciBtZXNzYWdpbmcuCgoj
IyBNYW51YWxseSByZXRyaWV2aW5nIHBvbGljaWVzIGFuZCBzY29wZXMKClNv
bWV0aW1lcyB5b3Ugd2FudCB0byByZXRyaWV2ZSBhIHBvbGljeSBmb3IgYSBy
ZWNvcmQgb3V0c2lkZSB0aGUgY29udHJvbGxlciBvcgp2aWV3LiBGb3IgZXhh
bXBsZSB3aGVuIHlvdSBkZWxlZ2F0ZSBwZXJtaXNzaW9ucyBmcm9tIG9uZSBw
b2xpY3kgdG8gYW5vdGhlci4KCllvdSBjYW4gZWFzaWx5IHJldHJpZXZlIHBv
bGljaWVzIGFuZCBzY29wZXMgbGlrZSB0aGlzOgoKYGBgIHJ1YnkKUHVuZGl0
LnBvbGljeSEodXNlciwgcG9zdCkKUHVuZGl0LnBvbGljeSh1c2VyLCBwb3N0
KQoKUHVuZGl0LnBvbGljeV9zY29wZSEodXNlciwgUG9zdCkKUHVuZGl0LnBv
bGljeV9zY29wZSh1c2VyLCBQb3N0KQpgYGAKClRoZSBiYW5nIG1ldGhvZHMg
d2lsbCByYWlzZSBhbiBleGNlcHRpb24gaWYgdGhlIHBvbGljeSBkb2VzIG5v
dCBleGlzdCwgd2hlcmVhcwp0aG9zZSB3aXRob3V0IHRoZSBiYW5nIHdpbGwg
cmV0dXJuIG5pbC4KCiMjIEN1c3RvbWl6ZSBQdW5kaXQgdXNlcgoKSW4gc29t
ZSBjYXNlcyB5b3VyIGNvbnRyb2xsZXIgbWlnaHQgbm90IGhhdmUgYWNjZXNz
IHRvIGBjdXJyZW50X3VzZXJgLCBvciB5b3VyCmBjdXJyZW50X3VzZXJgIGlz
IG5vdCB0aGUgbWV0aG9kIHRoYXQgc2hvdWxkIGJlIGludm9rZWQgYnkgUHVu
ZGl0LiBTaW1wbHkKZGVmaW5lIGEgbWV0aG9kIGluIHlvdXIgY29udHJvbGxl
ciBjYWxsZWQgYHB1bmRpdF91c2VyYC4KCmBgYHJ1YnkKZGVmIHB1bmRpdF91
c2VyCiAgVXNlci5maW5kX2J5X290aGVyX21lYW5zCmVuZApgYGAKCiMjIFBv
bGljeSBOYW1lc3BhY2luZwpJbiBzb21lIGNhc2VzIGl0IG1pZ2h0IGJlIGhl
bHBmdWwgdG8gaGF2ZSBtdWx0aXBsZSBwb2xpY2llcyB0aGF0IHNlcnZlIGRp
ZmZlcmVudCBjb250ZXh0cyBmb3IgYQpyZXNvdXJjZS4gQSBwcmltZSBleGFt
cGxlIG9mIHRoaXMgaXMgdGhlIGNhc2Ugd2hlcmUgVXNlciBwb2xpY2llcyBk
aWZmZXIgZnJvbSBBZG1pbiBwb2xpY2llcy4gVG8KYXV0aG9yaXplIHdpdGgg
YSBuYW1lc3BhY2VkIHBvbGljeSwgcGFzcyB0aGUgbmFtZXNwYWNlIGludG8g
dGhlIGBhdXRob3JpemVgIGhlbHBlciBpbiBhbiBhcnJheToKCmBgYHJ1YnkK
YXV0aG9yaXplKHBvc3QpICAgICAgICAgICAgICAgICAgICMgPT4gd2lsbCBs
b29rIGZvciBhIFBvc3RQb2xpY3kKYXV0aG9yaXplKFs6YWRtaW4sIHBvc3Rd
KSAgICAgICAgICMgPT4gd2lsbCBsb29rIGZvciBhbiBBZG1pbjo6UG9zdFBv
bGljeQphdXRob3JpemUoWzpmb28sIDpiYXIsIHBvc3RdKSAgICAgIyA9PiB3
aWxsIGxvb2sgZm9yIGEgRm9vOjpCYXI6OlBvc3RQb2xpY3kKCnBvbGljeV9z
Y29wZShQb3N0KSAgICAgICAgICAgICAgICAjID0+IHdpbGwgbG9vayBmb3Ig
YSBQb3N0UG9saWN5OjpTY29wZQpwb2xpY3lfc2NvcGUoWzphZG1pbiwgUG9z
dF0pICAgICAgIyA9PiB3aWxsIGxvb2sgZm9yIGFuIEFkbWluOjpQb3N0UG9s
aWN5OjpTY29wZQpwb2xpY3lfc2NvcGUoWzpmb28sIDpiYXIsIFBvc3RdKSAg
IyA9PiB3aWxsIGxvb2sgZm9yIGEgRm9vOjpCYXI6OlBvc3RQb2xpY3k6OlNj
b3BlCmBgYAoKSWYgeW91IGFyZSB1c2luZyBuYW1lc3BhY2VkIHBvbGljaWVz
IGZvciBzb21ldGhpbmcgbGlrZSBBZG1pbiB2aWV3cywgaXQgY2FuIGJlIHVz
ZWZ1bCB0bwpvdmVycmlkZSB0aGUgYHBvbGljeV9zY29wZWAgYW5kIGBhdXRo
b3JpemVgIGhlbHBlcnMgaW4geW91ciBgQWRtaW5Db250cm9sbGVyYCB0byBh
dXRvbWF0aWNhbGx5CmFwcGx5IHRoZSBuYW1lc3BhY2luZzoKCmBgYHJ1YnkK
Y2xhc3MgQWRtaW5Db250cm9sbGVyIDwgQXBwbGljYXRpb25Db250cm9sbGVy
CiAgZGVmIHBvbGljeV9zY29wZShzY29wZSkKICAgIHN1cGVyKFs6YWRtaW4s
IHNjb3BlXSkKICBlbmQKCiAgZGVmIGF1dGhvcml6ZShyZWNvcmQsIHF1ZXJ5
ID0gbmlsKQogICAgc3VwZXIoWzphZG1pbiwgcmVjb3JkXSwgcXVlcnkpCiAg
ZW5kCmVuZAoKY2xhc3MgQWRtaW46OlBvc3RDb250cm9sbGVyIDwgQWRtaW5D
b250cm9sbGVyCiAgZGVmIGluZGV4CiAgICBwb2xpY3lfc2NvcGUoUG9zdCkK
ICBlbmQKCiAgZGVmIHNob3cKICAgIHBvc3QgPSBQb3N0LmZpbmQocGFyYW1z
WzppZF0pCiAgICBhdXRob3JpemUocG9zdCkKICBlbmQKZW5kCmBgYAoKIyMg
QWRkaXRpb25hbCBjb250ZXh0CgpQdW5kaXQgc3Ryb25nbHkgZW5jb3VyYWdl
cyB5b3UgdG8gbW9kZWwgeW91ciBhcHBsaWNhdGlvbiBpbiBzdWNoIGEgd2F5
IHRoYXQgdGhlCm9ubHkgY29udGV4dCB5b3UgbmVlZCBmb3IgYXV0aG9yaXph
dGlvbiBpcyBhIHVzZXIgb2JqZWN0IGFuZCBhIGRvbWFpbiBtb2RlbCB0aGF0
CnlvdSB3YW50IHRvIGNoZWNrIGF1dGhvcml6YXRpb24gZm9yLiBJZiB5b3Ug
ZmluZCB5b3Vyc2VsZiBuZWVkaW5nIG1vcmUgY29udGV4dCB0aGFuCnRoYXQs
IGNvbnNpZGVyIHdoZXRoZXIgeW91IGFyZSBhdXRob3JpemluZyB0aGUgcmln
aHQgZG9tYWluIG1vZGVsLCBtYXliZSBhbm90aGVyCmRvbWFpbiBtb2RlbCAo
b3IgYSB3cmFwcGVyIGFyb3VuZCBtdWx0aXBsZSBkb21haW4gbW9kZWxzKSBj
YW4gcHJvdmlkZSB0aGUgY29udGV4dAp5b3UgbmVlZC4KClB1bmRpdCBkb2Vz
IG5vdCBhbGxvdyB5b3UgdG8gcGFzcyBhZGRpdGlvbmFsIGFyZ3VtZW50cyB0
byBwb2xpY2llcyBmb3IgcHJlY2lzZWx5CnRoaXMgcmVhc29uLgoKSG93ZXZl
ciwgaW4gdmVyeSByYXJlIGNhc2VzLCB5b3UgbWlnaHQgbmVlZCB0byBhdXRo
b3JpemUgYmFzZWQgb24gbW9yZSBjb250ZXh0IHRoYW4ganVzdAp0aGUgY3Vy
cmVudGx5IGF1dGhlbnRpY2F0ZWQgdXNlci4gU3VwcG9zZSBmb3IgZXhhbXBs
ZSB0aGF0IGF1dGhvcml6YXRpb24gaXMgZGVwZW5kZW50Cm9uIElQIGFkZHJl
c3MgaW4gYWRkaXRpb24gdG8gdGhlIGF1dGhlbnRpY2F0ZWQgdXNlci4gSW4g
dGhhdCBjYXNlLCBvbmUgb3B0aW9uIGlzIHRvCmNyZWF0ZSBhIHNwZWNpYWwg
Y2xhc3Mgd2hpY2ggd3JhcHMgdXAgYm90aCB1c2VyIGFuZCBJUCBhbmQgcGFz
c2VzIGl0IHRvIHRoZSBwb2xpY3kuCgpgYGAgcnVieQpjbGFzcyBVc2VyQ29u
dGV4dAogIGF0dHJfcmVhZGVyIDp1c2VyLCA6aXAKCiAgZGVmIGluaXRpYWxp
emUodXNlciwgaXApCiAgICBAdXNlciA9IHVzZXIKICAgIEBpcCAgID0gaXAK
ICBlbmQKZW5kCgpjbGFzcyBBcHBsaWNhdGlvbkNvbnRyb2xsZXIKICBpbmNs
dWRlIFB1bmRpdAoKICBkZWYgcHVuZGl0X3VzZXIKICAgIFVzZXJDb250ZXh0
Lm5ldyhjdXJyZW50X3VzZXIsIHJlcXVlc3QuaXApCiAgZW5kCmVuZApgYGAK
CiMjIFN0cm9uZyBwYXJhbWV0ZXJzCgpJbiBSYWlscyA0IChvciBSYWlscyAz
LjIgd2l0aCB0aGUKW3N0cm9uZ19wYXJhbWV0ZXJzXShodHRwczovL2dpdGh1
Yi5jb20vcmFpbHMvc3Ryb25nX3BhcmFtZXRlcnMpIGdlbSksCm1hc3MtYXNz
aWdubWVudCBwcm90ZWN0aW9uIGlzIGhhbmRsZWQgaW4gdGhlIGNvbnRyb2xs
ZXIuICBXaXRoIFB1bmRpdCB5b3UgY2FuCmNvbnRyb2wgd2hpY2ggYXR0cmli
dXRlcyBhIHVzZXIgaGFzIGFjY2VzcyB0byB1cGRhdGUgdmlhIHlvdXIgcG9s
aWNpZXMuIFlvdSBjYW4Kc2V0IHVwIGEgYHBlcm1pdHRlZF9hdHRyaWJ1dGVz
YCBtZXRob2QgaW4geW91ciBwb2xpY3kgbGlrZSB0aGlzOgoKYGBgcnVieQoj
IGFwcC9wb2xpY2llcy9wb3N0X3BvbGljeS5yYgpjbGFzcyBQb3N0UG9saWN5
IDwgQXBwbGljYXRpb25Qb2xpY3kKICBkZWYgcGVybWl0dGVkX2F0dHJpYnV0
ZXMKICAgIGlmIHVzZXIuYWRtaW4/IHx8IHVzZXIub3duZXJfb2Y/KHBvc3Qp
CiAgICAgIFs6dGl0bGUsIDpib2R5LCA6dGFnX2xpc3RdCiAgICBlbHNlCiAg
ICAgIFs6dGFnX2xpc3RdCiAgICBlbmQKICBlbmQKZW5kCmBgYAoKWW91IGNh
biBub3cgcmV0cmlldmUgdGhlc2UgYXR0cmlidXRlcyBmcm9tIHRoZSBwb2xp
Y3k6CgpgYGBydWJ5CiMgYXBwL2NvbnRyb2xsZXJzL3Bvc3RzX2NvbnRyb2xs
ZXIucmIKY2xhc3MgUG9zdHNDb250cm9sbGVyIDwgQXBwbGljYXRpb25Db250
cm9sbGVyCiAgZGVmIHVwZGF0ZQogICAgQHBvc3QgPSBQb3N0LmZpbmQocGFy
YW1zWzppZF0pCiAgICBpZiBAcG9zdC51cGRhdGVfYXR0cmlidXRlcyhwb3N0
X3BhcmFtcykKICAgICAgcmVkaXJlY3RfdG8gQHBvc3QKICAgIGVsc2UKICAg
ICAgcmVuZGVyIDplZGl0CiAgICBlbmQKICBlbmQKCiAgcHJpdmF0ZQoKICBk
ZWYgcG9zdF9wYXJhbXMKICAgIHBhcmFtcy5yZXF1aXJlKDpwb3N0KS5wZXJt
aXQocG9saWN5KEBwb3N0KS5wZXJtaXR0ZWRfYXR0cmlidXRlcykKICBlbmQK
ZW5kCmBgYAoKSG93ZXZlciwgdGhpcyBpcyBhIGJpdCBjdW1iZXJzb21lLCBz
byBQdW5kaXQgcHJvdmlkZXMgYSBjb252ZW5pZW50IGhlbHBlciBtZXRob2Q6
CgpgYGBydWJ5CiMgYXBwL2NvbnRyb2xsZXJzL3Bvc3RzX2NvbnRyb2xsZXIu
cmIKY2xhc3MgUG9zdHNDb250cm9sbGVyIDwgQXBwbGljYXRpb25Db250cm9s
bGVyCiAgZGVmIHVwZGF0ZQogICAgQHBvc3QgPSBQb3N0LmZpbmQocGFyYW1z
WzppZF0pCiAgICBpZiBAcG9zdC51cGRhdGVfYXR0cmlidXRlcyhwZXJtaXR0
ZWRfYXR0cmlidXRlcyhAcG9zdCkpCiAgICAgIHJlZGlyZWN0X3RvIEBwb3N0
CiAgICBlbHNlCiAgICAgIHJlbmRlciA6ZWRpdAogICAgZW5kCiAgZW5kCmVu
ZApgYGAKCklmIHlvdSB3YW50IHRvIHBlcm1pdCBkaWZmZXJlbnQgYXR0cmli
dXRlcyBiYXNlZCBvbiB0aGUgY3VycmVudCBhY3Rpb24sIHlvdSBjYW4gZGVm
aW5lIGEgYHBlcm1pdHRlZF9hdHRyaWJ1dGVzX2Zvcl8je2FjdGlvbn1gIG1l
dGhvZCBvbiB5b3VyIHBvbGljeToKCmBgYHJ1YnkKIyBhcHAvcG9saWNpZXMv
cG9zdF9wb2xpY3kucmIKY2xhc3MgUG9zdFBvbGljeSA8IEFwcGxpY2F0aW9u
UG9saWN5CiAgZGVmIHBlcm1pdHRlZF9hdHRyaWJ1dGVzX2Zvcl9jcmVhdGUK
ICAgIFs6dGl0bGUsIDpib2R5XQogIGVuZAoKICBkZWYgcGVybWl0dGVkX2F0
dHJpYnV0ZXNfZm9yX2VkaXQKICAgIFs6Ym9keV0KICBlbmQKZW5kCmBgYAoK
SWYgeW91IGhhdmUgZGVmaW5lZCBhbiBhY3Rpb24tc3BlY2lmaWMgbWV0aG9k
IG9uIHlvdXIgcG9saWN5IGZvciB0aGUgY3VycmVudCBhY3Rpb24sIHRoZSBg
cGVybWl0dGVkX2F0dHJpYnV0ZXNgIGhlbHBlciB3aWxsIGNhbGwgaXQgaW5z
dGVhZCBvZiBjYWxsaW5nIGBwZXJtaXR0ZWRfYXR0cmlidXRlc2Agb24geW91
ciBjb250cm9sbGVyLgoKSWYgeW91IG5lZWQgdG8gZmV0Y2ggcGFyYW1ldGVy
cyBiYXNlZCBvbiBuYW1lc3BhY2VzIGRpZmZlcmVudCBmcm9tIHRoZSBzdWdn
ZXN0ZWQgb25lLCBvdmVycmlkZSB0aGUgYmVsb3cgbWV0aG9kLCBpbiB5b3Vy
IGNvbnRyb2xsZXIsIGFuZCByZXR1cm4gYW4gaW5zdGFuY2Ugb2YgYEFjdGlv
bkNvbnRyb2xsZXI6OlBhcmFtZXRlcnNgLgoKYGBgcnVieQpkZWYgcHVuZGl0
X3BhcmFtc19mb3IocmVjb3JkKQogIHBhcmFtcy5yZXF1aXJlKFBvbGljeUZp
bmRlci5uZXcocmVjb3JkKS5wYXJhbV9rZXkpCmVuZApgYGAKCkZvciBleGFt
cGxlOgoKYGBgcnVieQojIElmIHlvdSBkb24ndCB3YW50IHRvIHVzZSByZXF1
aXJlCmRlZiBwdW5kaXRfcGFyYW1zX2ZvcihyZWNvcmQpCiAgcGFyYW1zLmZl
dGNoKFBvbGljeUZpbmRlci5uZXcocmVjb3JkKS5wYXJhbV9rZXksIHt9KQpl
bmQKCiMgSWYgeW91IGFyZSB1c2luZyBzb21ldGhpbmcgbGlrZSB0aGUgSlNP
TiBBUEkgc3BlYwpkZWYgcHVuZGl0X3BhcmFtc19mb3IoX3JlY29yZCkKICBw
YXJhbXMuZmV0Y2goOmRhdGEsIHt9KS5mZXRjaCg6YXR0cmlidXRlcywge30p
CmVuZApgYGAKCiMjIFJTcGVjCgojIyMgUG9saWN5IFNwZWNzCgpQdW5kaXQg
aW5jbHVkZXMgYSBtaW5pLURTTCBmb3Igd3JpdGluZyBleHByZXNzaXZlIHRl
c3RzIGZvciB5b3VyIHBvbGljaWVzIGluIFJTcGVjLgpSZXF1aXJlIGBwdW5k
aXQvcnNwZWNgIGluIHlvdXIgYHNwZWNfaGVscGVyLnJiYDoKCmBgYCBydWJ5
CnJlcXVpcmUgInB1bmRpdC9yc3BlYyIKYGBgCgpUaGVuIHB1dCB5b3VyIHBv
bGljeSBzcGVjcyBpbiBgc3BlYy9wb2xpY2llc2AsIGFuZCBtYWtlIHRoZW0g
bG9vayBzb21ld2hhdCBsaWtlIHRoaXM6CgpgYGAgcnVieQpkZXNjcmliZSBQ
b3N0UG9saWN5IGRvCiAgc3ViamVjdCB7IGRlc2NyaWJlZF9jbGFzcyB9Cgog
IHBlcm1pc3Npb25zIDp1cGRhdGU/LCA6ZWRpdD8gZG8KICAgIGl0ICJkZW5p
ZXMgYWNjZXNzIGlmIHBvc3QgaXMgcHVibGlzaGVkIiBkbwogICAgICBleHBl
Y3Qoc3ViamVjdCkubm90X3RvIHBlcm1pdChVc2VyLm5ldyhhZG1pbjogZmFs
c2UpLCBQb3N0Lm5ldyhwdWJsaXNoZWQ6IHRydWUpKQogICAgZW5kCgogICAg
aXQgImdyYW50cyBhY2Nlc3MgaWYgcG9zdCBpcyBwdWJsaXNoZWQgYW5kIHVz
ZXIgaXMgYW4gYWRtaW4iIGRvCiAgICAgIGV4cGVjdChzdWJqZWN0KS50byBw
ZXJtaXQoVXNlci5uZXcoYWRtaW46IHRydWUpLCBQb3N0Lm5ldyhwdWJsaXNo
ZWQ6IHRydWUpKQogICAgZW5kCgogICAgaXQgImdyYW50cyBhY2Nlc3MgaWYg
cG9zdCBpcyB1bnB1Ymxpc2hlZCIgZG8KICAgICAgZXhwZWN0KHN1YmplY3Qp
LnRvIHBlcm1pdChVc2VyLm5ldyhhZG1pbjogZmFsc2UpLCBQb3N0Lm5ldyhw
dWJsaXNoZWQ6IGZhbHNlKSkKICAgIGVuZAogIGVuZAplbmQKYGBgCgpBbiBh
bHRlcm5hdGl2ZSBhcHByb2FjaCB0byBQdW5kaXQgcG9saWN5IHNwZWNzIGlz
IHNjb3BpbmcgdGhlbSB0byBhIHVzZXIgY29udGV4dCBhcyBvdXRsaW5lZCBp
biB0aGlzCltleGNlbGxlbnQgcG9zdF0oaHR0cDovL3RodW5kZXJib2x0bGFi
cy5jb20vYmxvZy8yMDEzLzAzLzI3L3Rlc3RpbmctcHVuZGl0LXBvbGljaWVz
LXdpdGgtcnNwZWMvKSBhbmQgaW1wbGVtZW50ZWQgaW4gdGhlIHRoaXJkIHBh
cnR5IFtwdW5kaXQtbWF0Y2hlcnNdKGh0dHBzOi8vZ2l0aHViLmNvbS9jaHJp
c2FsbGV5L3B1bmRpdC1tYXRjaGVycykgZ2VtLgoKIyMjIFNjb3BlIFNwZWNz
CgpQdW5kaXQgZG9lcyBub3QgcHJvdmlkZSBhIERTTCBmb3IgdGVzdGluZyBz
Y29wZXMuIEp1c3QgdGVzdCBpdCBsaWtlIGEgcmVndWxhciBSdWJ5IGNsYXNz
IQoKIyBFeHRlcm5hbCBSZXNvdXJjZXMKCi0gW1JhaWxzQXBwcyBFeGFtcGxl
IEFwcGxpY2F0aW9uOiBQdW5kaXQgYW5kIERldmlzZV0oaHR0cHM6Ly9naXRo
dWIuY29tL1JhaWxzQXBwcy9yYWlscy1kZXZpc2UtcHVuZGl0KQotIFtNaWdy
YXRpbmcgdG8gUHVuZGl0IGZyb20gQ2FuQ2FuXShodHRwOi8vYmxvZy5jYXJi
b25maXZlLmNvbS8yMDEzLzEwLzIxL21pZ3JhdGluZy10by1wdW5kaXQtZnJv
bS1jYW5jYW4vKQotIFtUZXN0aW5nIFB1bmRpdCBQb2xpY2llcyB3aXRoIFJT
cGVjXShodHRwOi8vdGh1bmRlcmJvbHRsYWJzLmNvbS9ibG9nLzIwMTMvMDMv
MjcvdGVzdGluZy1wdW5kaXQtcG9saWNpZXMtd2l0aC1yc3BlYy8pCi0gW1Vz
aW5nIFB1bmRpdCBvdXRzaWRlIG9mIGEgUmFpbHMgY29udHJvbGxlcl0oaHR0
cHM6Ly9naXRodWIuY29tL3ZhcnZldC9wdW5kaXQvcHVsbC8xMzYpCi0gW1N0
cmFpZ2h0Zm9yd2FyZCBSYWlscyBBdXRob3JpemF0aW9uIHdpdGggUHVuZGl0
XShodHRwOi8vd3d3LnNpdGVwb2ludC5jb20vc3RyYWlnaHRmb3J3YXJkLXJh
aWxzLWF1dGhvcml6YXRpb24td2l0aC1wdW5kaXQvKQoKIyMgT3RoZXIgaW1w
bGVtZW50YXRpb25zCgotIFtGbGFzay1QdW5kaXRdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9hbnVyYWc5MHgvZmxhc2stcHVuZGl0KSAoUHl0aG9uKSBpcyBhIFtG
bGFza10oaHR0cDovL2ZsYXNrLnBvY29vLm9yZy8pIGV4dGVuc2lvbiAiaGVh
dmlseSBpbnNwaXJlZCBieSIgUHVuZGl0CgojIExpY2Vuc2UKCkxpY2Vuc2Vk
IHVuZGVyIHRoZSBNSVQgbGljZW5zZSwgc2VlIHRoZSBzZXBhcmF0ZSBMSUNF
TlNFLnR4dCBmaWxlLgo=
",,6711,"bGFuZ3VhZ2U6IHJ1YnkKCm1hdHJpeDoKICBpbmNsdWRlOgogICAgLSBuYW1l
OiAiUnVib0NvcCBsaW50IG9uIHByZS1pbnN0YWxsZWQgUnVieSB2ZXJzaW9u
IgogICAgICBydm06IDIuNS4zICMgUHJlLWluc3RhbGxlZCBSdWJ5IHZlcnNp
b24KICAgICAgYmVmb3JlX2luc3RhbGw6CiAgICAgICAgLSBnZW0gaW5zdGFs
bCBidW5kbGVyCiAgICAgIHNjcmlwdDogYnVuZGxlIGV4ZWMgcmFrZSBydWJv
Y29wICMgT05MWSBsaW50IG9uY2UsIGZpcnN0CiAgICAtIHJ2bTogMi4zLjUK
ICAgICAgYmVmb3JlX3NjcmlwdDoKICAgICAgICAtIGN1cmwgLUwgaHR0cHM6
Ly9jb2RlY2xpbWF0ZS5jb20vZG93bmxvYWRzL3Rlc3QtcmVwb3J0ZXIvdGVz
dC1yZXBvcnRlci1sYXRlc3QtbGludXgtYW1kNjQgPiAuL2NjLXRlc3QtcmVw
b3J0ZXIKICAgICAgICAtIGNobW9kICt4IC4vY2MtdGVzdC1yZXBvcnRlcgog
ICAgICAgIC0gLi9jYy10ZXN0LXJlcG9ydGVyIGJlZm9yZS1idWlsZAogICAg
ICBhZnRlcl9zY3JpcHQ6CiAgICAgICAgLSAuL2NjLXRlc3QtcmVwb3J0ZXIg
YWZ0ZXItYnVpbGQgLS1leGl0LWNvZGUgJFRSQVZJU19URVNUX1JFU1VMVAog
ICAgLSBydm06IDIuNC42CiAgICAtIHJ2bTogMi41LjUKICAgIC0gcnZtOiAy
LjYuMwogICAgLSBuYW1lOiAianJ1YnktOS4xLjguMCBvbiBPcGVuSkRLIDgi
CiAgICAgIHJ2bToganJ1YnktOS4xLjguMAogICAgICBlbnY6CiAgICAgICAg
LSBKUlVCWV9PUFRTPSItLWRlYnVnIgogICAgICBqZGs6IG9wZW5qZGs4CiAg
ICAtIHJ2bToganJ1YnktOS4yLjguMAogICAgICBlbnY6CiAgICAgICAgLSBK
UlVCWV9PUFRTPSItLWRlYnVnIgoK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
