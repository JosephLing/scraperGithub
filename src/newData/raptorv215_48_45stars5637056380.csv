name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,cirrus0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'puppeteer',90796663,b'Headless Chrome Node.js API',b'JavaScript',691,56376,,1209,False,b'https://api.github.com/repos/puppeteer/puppeteer/forks',"IyBQdXBwZXRlZXIKCjwhLS0gW1NUQVJUIGJhZGdlc10gLS0+ClshW0xpbnV4
IEJ1aWxkIFN0YXR1c10oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby90cmF2aXMv
Y29tL3B1cHBldGVlci9wdXBwZXRlZXIvbWFzdGVyLnN2ZyldKGh0dHBzOi8v
dHJhdmlzLWNpLmNvbS9wdXBwZXRlZXIvcHVwcGV0ZWVyKSBbIVtXaW5kb3dz
IEJ1aWxkIFN0YXR1c10oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9hcHB2ZXlv
ci9jaS9tYXRoaWFzYnluZW5zL3B1cHBldGVlci9tYXN0ZXIuc3ZnP2xvZ289
YXBwdmV5b3IpXShodHRwczovL2NpLmFwcHZleW9yLmNvbS9wcm9qZWN0L21h
dGhpYXNieW5lbnMvcHVwcGV0ZWVyL2JyYW5jaC9tYXN0ZXIpIFshW0J1aWxk
IFN0YXR1c10oaHR0cHM6Ly9hcGkuY2lycnVzLWNpLmNvbS9naXRodWIvcHVw
cGV0ZWVyL3B1cHBldGVlci5zdmcpXShodHRwczovL2NpcnJ1cy1jaS5jb20v
Z2l0aHViL3B1cHBldGVlci9wdXBwZXRlZXIpIFshW25wbSBwdXBwZXRlZXIg
cGFja2FnZV0oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9ucG0vdi9wdXBwZXRl
ZXIuc3ZnKV0oaHR0cHM6Ly9ucG1qcy5vcmcvcGFja2FnZS9wdXBwZXRlZXIp
IFshW0lzc3VlIHJlc29sdXRpb24gc3RhdHVzXShodHRwczovL2lzaXRtYWlu
dGFpbmVkLmNvbS9iYWRnZS9yZXNvbHV0aW9uL3B1cHBldGVlci9wdXBwZXRl
ZXIuc3ZnKV0oaHR0cHM6Ly9naXRodWIuY29tL3B1cHBldGVlci9wdXBwZXRl
ZXIvaXNzdWVzKQo8IS0tIFtFTkQgYmFkZ2VzXSAtLT4KCjxpbWcgc3JjPSJo
dHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMDM3
OTYwMS8yOTQ0NjQ4Mi0wNGY3MDM2YS04NDFmLTExZTctOTg3Mi05MWQxZmMy
ZWE2ODMucG5nIiBoZWlnaHQ9IjIwMCIgYWxpZ249InJpZ2h0Ij4KCiMjIyMj
IyBbQVBJXShodHRwczovL2dpdGh1Yi5jb20vcHVwcGV0ZWVyL3B1cHBldGVl
ci9ibG9iL3YyLjAuMC9kb2NzL2FwaS5tZCkgfCBbRkFRXSgjZmFxKSB8IFtD
b250cmlidXRpbmddKGh0dHBzOi8vZ2l0aHViLmNvbS9wdXBwZXRlZXIvcHVw
cGV0ZWVyL2Jsb2IvbWFzdGVyL0NPTlRSSUJVVElORy5tZCkgfCBbVHJvdWJs
ZXNob290aW5nXShodHRwczovL2dpdGh1Yi5jb20vcHVwcGV0ZWVyL3B1cHBl
dGVlci9ibG9iL21hc3Rlci9kb2NzL3Ryb3VibGVzaG9vdGluZy5tZCkKCj4g
UHVwcGV0ZWVyIGlzIGEgTm9kZSBsaWJyYXJ5IHdoaWNoIHByb3ZpZGVzIGEg
aGlnaC1sZXZlbCBBUEkgdG8gY29udHJvbCBDaHJvbWUgb3IgQ2hyb21pdW0g
b3ZlciB0aGUgW0RldlRvb2xzIFByb3RvY29sXShodHRwczovL2Nocm9tZWRl
dnRvb2xzLmdpdGh1Yi5pby9kZXZ0b29scy1wcm90b2NvbC8pLiBQdXBwZXRl
ZXIgcnVucyBbaGVhZGxlc3NdKGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUu
Y29tL3dlYi91cGRhdGVzLzIwMTcvMDQvaGVhZGxlc3MtY2hyb21lKSBieSBk
ZWZhdWx0LCBidXQgY2FuIGJlIGNvbmZpZ3VyZWQgdG8gcnVuIGZ1bGwgKG5v
bi1oZWFkbGVzcykgQ2hyb21lIG9yIENocm9taXVtLgoKPCEtLSBbU1RBUlQg
dXNlY2FzZXNdIC0tPgojIyMjIyMgV2hhdCBjYW4gSSBkbz8KCk1vc3QgdGhp
bmdzIHRoYXQgeW91IGNhbiBkbyBtYW51YWxseSBpbiB0aGUgYnJvd3NlciBj
YW4gYmUgZG9uZSB1c2luZyBQdXBwZXRlZXIhIEhlcmUgYXJlIGEgZmV3IGV4
YW1wbGVzIHRvIGdldCB5b3Ugc3RhcnRlZDoKCiogR2VuZXJhdGUgc2NyZWVu
c2hvdHMgYW5kIFBERnMgb2YgcGFnZXMuCiogQ3Jhd2wgYSBTUEEgKFNpbmds
ZS1QYWdlIEFwcGxpY2F0aW9uKSBhbmQgZ2VuZXJhdGUgcHJlLXJlbmRlcmVk
IGNvbnRlbnQgKGkuZS4gIlNTUiIgKFNlcnZlci1TaWRlIFJlbmRlcmluZykp
LgoqIEF1dG9tYXRlIGZvcm0gc3VibWlzc2lvbiwgVUkgdGVzdGluZywga2V5
Ym9hcmQgaW5wdXQsIGV0Yy4KKiBDcmVhdGUgYW4gdXAtdG8tZGF0ZSwgYXV0
b21hdGVkIHRlc3RpbmcgZW52aXJvbm1lbnQuIFJ1biB5b3VyIHRlc3RzIGRp
cmVjdGx5IGluIHRoZSBsYXRlc3QgdmVyc2lvbiBvZiBDaHJvbWUgdXNpbmcg
dGhlIGxhdGVzdCBKYXZhU2NyaXB0IGFuZCBicm93c2VyIGZlYXR1cmVzLgoq
IENhcHR1cmUgYSBbdGltZWxpbmUgdHJhY2VdKGh0dHBzOi8vZGV2ZWxvcGVy
cy5nb29nbGUuY29tL3dlYi90b29scy9jaHJvbWUtZGV2dG9vbHMvZXZhbHVh
dGUtcGVyZm9ybWFuY2UvcmVmZXJlbmNlKSBvZiB5b3VyIHNpdGUgdG8gaGVs
cCBkaWFnbm9zZSBwZXJmb3JtYW5jZSBpc3N1ZXMuCiogVGVzdCBDaHJvbWUg
RXh0ZW5zaW9ucy4KPCEtLSBbRU5EIHVzZWNhc2VzXSAtLT4KCkdpdmUgaXQg
YSBzcGluOiBodHRwczovL3RyeS1wdXBwZXRlZXIuYXBwc3BvdC5jb20vCgo8
IS0tIFtTVEFSVCBnZXRzdGFydGVkXSAtLT4KIyMgR2V0dGluZyBTdGFydGVk
CgojIyMgSW5zdGFsbGF0aW9uCgpUbyB1c2UgUHVwcGV0ZWVyIGluIHlvdXIg
cHJvamVjdCwgcnVuOgoKYGBgYmFzaApucG0gaSBwdXBwZXRlZXIKIyBvciAi
eWFybiBhZGQgcHVwcGV0ZWVyIgpgYGAKCk5vdGU6IFdoZW4geW91IGluc3Rh
bGwgUHVwcGV0ZWVyLCBpdCBkb3dubG9hZHMgYSByZWNlbnQgdmVyc2lvbiBv
ZiBDaHJvbWl1bSAofjE3ME1CIE1hYywgfjI4Mk1CIExpbnV4LCB+MjgwTUIg
V2luKSB0aGF0IGlzIGd1YXJhbnRlZWQgdG8gd29yayB3aXRoIHRoZSBBUEku
IFRvIHNraXAgdGhlIGRvd25sb2FkLCBzZWUgW0Vudmlyb25tZW50IHZhcmlh
Ymxlc10oaHR0cHM6Ly9naXRodWIuY29tL3B1cHBldGVlci9wdXBwZXRlZXIv
YmxvYi92Mi4wLjAvZG9jcy9hcGkubWQjZW52aXJvbm1lbnQtdmFyaWFibGVz
KS4KCgojIyMgcHVwcGV0ZWVyLWNvcmUKClNpbmNlIHZlcnNpb24gMS43LjAg
d2UgcHVibGlzaCB0aGUgW2BwdXBwZXRlZXItY29yZWBdKGh0dHBzOi8vd3d3
Lm5wbWpzLmNvbS9wYWNrYWdlL3B1cHBldGVlci1jb3JlKSBwYWNrYWdlLAph
IHZlcnNpb24gb2YgUHVwcGV0ZWVyIHRoYXQgZG9lc24ndCBkb3dubG9hZCBD
aHJvbWl1bSBieSBkZWZhdWx0LgoKYGBgYmFzaApucG0gaSBwdXBwZXRlZXIt
Y29yZQojIG9yICJ5YXJuIGFkZCBwdXBwZXRlZXItY29yZSIKYGBgCgpgcHVw
cGV0ZWVyLWNvcmVgIGlzIGludGVuZGVkIHRvIGJlIGEgbGlnaHR3ZWlnaHQg
dmVyc2lvbiBvZiBQdXBwZXRlZXIgZm9yIGxhdW5jaGluZyBhbiBleGlzdGlu
ZyBicm93c2VyIGluc3RhbGxhdGlvbiBvciBmb3IgY29ubmVjdGluZyB0byBh
IHJlbW90ZSBvbmUuIEJlIHN1cmUgdGhhdCB0aGUgdmVyc2lvbiBvZiBwdXBw
ZXRlZXItY29yZSB5b3UgaW5zdGFsbCBpcyBjb21wYXRpYmxlIHdpdGggdGhl
CmJyb3dzZXIgeW91IGludGVuZCB0byBjb25uZWN0IHRvLgoKU2VlIFtwdXBw
ZXRlZXIgdnMgcHVwcGV0ZWVyLWNvcmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9w
dXBwZXRlZXIvcHVwcGV0ZWVyL2Jsb2IvbWFzdGVyL2RvY3MvYXBpLm1kI3B1
cHBldGVlci12cy1wdXBwZXRlZXItY29yZSkuCgojIyMgVXNhZ2UKClB1cHBl
dGVlciBmb2xsb3dzIHRoZSBsYXRlc3QgW21haW50ZW5hbmNlIExUU10oaHR0
cHM6Ly9naXRodWIuY29tL25vZGVqcy9SZWxlYXNlI3JlbGVhc2Utc2NoZWR1
bGUpIHZlcnNpb24gb2YgTm9kZS4KCk5vdGU6IFByaW9yIHRvIHYxLjE4LjEs
IFB1cHBldGVlciByZXF1aXJlZCBhdCBsZWFzdCBOb2RlIHY2LjQuMC4gQWxs
IHN1YnNlcXVlbnQgdmVyc2lvbnMgcmVseSBvbgpOb2RlIDguOS4wKy4gQWxs
IGV4YW1wbGVzIGJlbG93IHVzZSBhc3luYy9hd2FpdCB3aGljaCBpcyBvbmx5
IHN1cHBvcnRlZCBpbiBOb2RlIHY3LjYuMCBvciBncmVhdGVyLgoKUHVwcGV0
ZWVyIHdpbGwgYmUgZmFtaWxpYXIgdG8gcGVvcGxlIHVzaW5nIG90aGVyIGJy
b3dzZXIgdGVzdGluZyBmcmFtZXdvcmtzLiBZb3UgY3JlYXRlIGFuIGluc3Rh
bmNlCm9mIGBCcm93c2VyYCwgb3BlbiBwYWdlcywgYW5kIHRoZW4gbWFuaXB1
bGF0ZSB0aGVtIHdpdGggW1B1cHBldGVlcidzIEFQSV0oaHR0cHM6Ly9naXRo
dWIuY29tL3B1cHBldGVlci9wdXBwZXRlZXIvYmxvYi92Mi4wLjAvZG9jcy9h
cGkubWQjKS4KCioqRXhhbXBsZSoqIC0gbmF2aWdhdGluZyB0byBodHRwczov
L2V4YW1wbGUuY29tIGFuZCBzYXZpbmcgYSBzY3JlZW5zaG90IGFzICpleGFt
cGxlLnBuZyo6CgpTYXZlIGZpbGUgYXMgKipleGFtcGxlLmpzKioKCmBgYGpz
CmNvbnN0IHB1cHBldGVlciA9IHJlcXVpcmUoJ3B1cHBldGVlcicpOwoKKGFz
eW5jICgpID0+IHsKICBjb25zdCBicm93c2VyID0gYXdhaXQgcHVwcGV0ZWVy
LmxhdW5jaCgpOwogIGNvbnN0IHBhZ2UgPSBhd2FpdCBicm93c2VyLm5ld1Bh
Z2UoKTsKICBhd2FpdCBwYWdlLmdvdG8oJ2h0dHBzOi8vZXhhbXBsZS5jb20n
KTsKICBhd2FpdCBwYWdlLnNjcmVlbnNob3Qoe3BhdGg6ICdleGFtcGxlLnBu
Zyd9KTsKCiAgYXdhaXQgYnJvd3Nlci5jbG9zZSgpOwp9KSgpOwpgYGAKCkV4
ZWN1dGUgc2NyaXB0IG9uIHRoZSBjb21tYW5kIGxpbmUKCmBgYGJhc2gKbm9k
ZSBleGFtcGxlLmpzCmBgYAoKUHVwcGV0ZWVyIHNldHMgYW4gaW5pdGlhbCBw
YWdlIHNpemUgdG8gODAww5c2MDBweCwgd2hpY2ggZGVmaW5lcyB0aGUgc2Ny
ZWVuc2hvdCBzaXplLiBUaGUgcGFnZSBzaXplIGNhbiBiZSBjdXN0b21pemVk
ICB3aXRoIFtgUGFnZS5zZXRWaWV3cG9ydCgpYF0oaHR0cHM6Ly9naXRodWIu
Y29tL3B1cHBldGVlci9wdXBwZXRlZXIvYmxvYi92Mi4wLjAvZG9jcy9hcGku
bWQjcGFnZXNldHZpZXdwb3J0dmlld3BvcnQpLgoKKipFeGFtcGxlKiogLSBj
cmVhdGUgYSBQREYuCgpTYXZlIGZpbGUgYXMgKipobi5qcyoqCgpgYGBqcwpj
b25zdCBwdXBwZXRlZXIgPSByZXF1aXJlKCdwdXBwZXRlZXInKTsKCihhc3lu
YyAoKSA9PiB7CiAgY29uc3QgYnJvd3NlciA9IGF3YWl0IHB1cHBldGVlci5s
YXVuY2goKTsKICBjb25zdCBwYWdlID0gYXdhaXQgYnJvd3Nlci5uZXdQYWdl
KCk7CiAgYXdhaXQgcGFnZS5nb3RvKCdodHRwczovL25ld3MueWNvbWJpbmF0
b3IuY29tJywge3dhaXRVbnRpbDogJ25ldHdvcmtpZGxlMid9KTsKICBhd2Fp
dCBwYWdlLnBkZih7cGF0aDogJ2huLnBkZicsIGZvcm1hdDogJ0E0J30pOwoK
ICBhd2FpdCBicm93c2VyLmNsb3NlKCk7Cn0pKCk7CmBgYAoKRXhlY3V0ZSBz
Y3JpcHQgb24gdGhlIGNvbW1hbmQgbGluZQoKYGBgYmFzaApub2RlIGhuLmpz
CmBgYAoKU2VlIFtgUGFnZS5wZGYoKWBdKGh0dHBzOi8vZ2l0aHViLmNvbS9w
dXBwZXRlZXIvcHVwcGV0ZWVyL2Jsb2IvdjIuMC4wL2RvY3MvYXBpLm1kI3Bh
Z2VwZGZvcHRpb25zKSBmb3IgbW9yZSBpbmZvcm1hdGlvbiBhYm91dCBjcmVh
dGluZyBwZGZzLgoKKipFeGFtcGxlKiogLSBldmFsdWF0ZSBzY3JpcHQgaW4g
dGhlIGNvbnRleHQgb2YgdGhlIHBhZ2UKClNhdmUgZmlsZSBhcyAqKmdldC1k
aW1lbnNpb25zLmpzKioKCmBgYGpzCmNvbnN0IHB1cHBldGVlciA9IHJlcXVp
cmUoJ3B1cHBldGVlcicpOwoKKGFzeW5jICgpID0+IHsKICBjb25zdCBicm93
c2VyID0gYXdhaXQgcHVwcGV0ZWVyLmxhdW5jaCgpOwogIGNvbnN0IHBhZ2Ug
PSBhd2FpdCBicm93c2VyLm5ld1BhZ2UoKTsKICBhd2FpdCBwYWdlLmdvdG8o
J2h0dHBzOi8vZXhhbXBsZS5jb20nKTsKCiAgLy8gR2V0IHRoZSAidmlld3Bv
cnQiIG9mIHRoZSBwYWdlLCBhcyByZXBvcnRlZCBieSB0aGUgcGFnZS4KICBj
b25zdCBkaW1lbnNpb25zID0gYXdhaXQgcGFnZS5ldmFsdWF0ZSgoKSA9PiB7
CiAgICByZXR1cm4gewogICAgICB3aWR0aDogZG9jdW1lbnQuZG9jdW1lbnRF
bGVtZW50LmNsaWVudFdpZHRoLAogICAgICBoZWlnaHQ6IGRvY3VtZW50LmRv
Y3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQsCiAgICAgIGRldmljZVNjYWxl
RmFjdG9yOiB3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbwogICAgfTsKICB9KTsK
CiAgY29uc29sZS5sb2coJ0RpbWVuc2lvbnM6JywgZGltZW5zaW9ucyk7Cgog
IGF3YWl0IGJyb3dzZXIuY2xvc2UoKTsKfSkoKTsKYGBgCgpFeGVjdXRlIHNj
cmlwdCBvbiB0aGUgY29tbWFuZCBsaW5lCgpgYGBiYXNoCm5vZGUgZ2V0LWRp
bWVuc2lvbnMuanMKYGBgCgpTZWUgW2BQYWdlLmV2YWx1YXRlKClgXShodHRw
czovL2dpdGh1Yi5jb20vcHVwcGV0ZWVyL3B1cHBldGVlci9ibG9iL3YyLjAu
MC9kb2NzL2FwaS5tZCNwYWdlZXZhbHVhdGVwYWdlZnVuY3Rpb24tYXJncykg
Zm9yIG1vcmUgaW5mb3JtYXRpb24gb24gYGV2YWx1YXRlYCBhbmQgcmVsYXRl
ZCBtZXRob2RzIGxpa2UgYGV2YWx1YXRlT25OZXdEb2N1bWVudGAgYW5kIGBl
eHBvc2VGdW5jdGlvbmAuCgo8IS0tIFtFTkQgZ2V0c3RhcnRlZF0gLS0+Cgo8
IS0tIFtTVEFSVCBydW50aW1lc2V0dGluZ3NdIC0tPgojIyBEZWZhdWx0IHJ1
bnRpbWUgc2V0dGluZ3MKCioqMS4gVXNlcyBIZWFkbGVzcyBtb2RlKioKClB1
cHBldGVlciBsYXVuY2hlcyBDaHJvbWl1bSBpbiBbaGVhZGxlc3MgbW9kZV0o
aHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vd2ViL3VwZGF0ZXMvMjAx
Ny8wNC9oZWFkbGVzcy1jaHJvbWUpLiBUbyBsYXVuY2ggYSBmdWxsIHZlcnNp
b24gb2YgQ2hyb21pdW0sIHNldCB0aGUgW2BoZWFkbGVzc2Agb3B0aW9uXSho
dHRwczovL2dpdGh1Yi5jb20vcHVwcGV0ZWVyL3B1cHBldGVlci9ibG9iL3Yy
LjAuMC9kb2NzL2FwaS5tZCNwdXBwZXRlZXJsYXVuY2hvcHRpb25zKSB3aGVu
IGxhdW5jaGluZyBhIGJyb3dzZXI6CgpgYGBqcwpjb25zdCBicm93c2VyID0g
YXdhaXQgcHVwcGV0ZWVyLmxhdW5jaCh7aGVhZGxlc3M6IGZhbHNlfSk7IC8v
IGRlZmF1bHQgaXMgdHJ1ZQpgYGAKCioqMi4gUnVucyBhIGJ1bmRsZWQgdmVy
c2lvbiBvZiBDaHJvbWl1bSoqCgpCeSBkZWZhdWx0LCBQdXBwZXRlZXIgZG93
bmxvYWRzIGFuZCB1c2VzIGEgc3BlY2lmaWMgdmVyc2lvbiBvZiBDaHJvbWl1
bSBzbyBpdHMgQVBJCmlzIGd1YXJhbnRlZWQgdG8gd29yayBvdXQgb2YgdGhl
IGJveC4gVG8gdXNlIFB1cHBldGVlciB3aXRoIGEgZGlmZmVyZW50IHZlcnNp
b24gb2YgQ2hyb21lIG9yIENocm9taXVtLApwYXNzIGluIHRoZSBleGVjdXRh
YmxlJ3MgcGF0aCB3aGVuIGNyZWF0aW5nIGEgYEJyb3dzZXJgIGluc3RhbmNl
OgoKYGBganMKY29uc3QgYnJvd3NlciA9IGF3YWl0IHB1cHBldGVlci5sYXVu
Y2goe2V4ZWN1dGFibGVQYXRoOiAnL3BhdGgvdG8vQ2hyb21lJ30pOwpgYGAK
ClNlZSBbYFB1cHBldGVlci5sYXVuY2goKWBdKGh0dHBzOi8vZ2l0aHViLmNv
bS9wdXBwZXRlZXIvcHVwcGV0ZWVyL2Jsb2IvdjIuMC4wL2RvY3MvYXBpLm1k
I3B1cHBldGVlcmxhdW5jaG9wdGlvbnMpIGZvciBtb3JlIGluZm9ybWF0aW9u
LgoKU2VlIFtgdGhpcyBhcnRpY2xlYF0oaHR0cHM6Ly93d3cuaG93dG9nZWVr
LmNvbS8yMDI4MjUvd2hhdCVFMiU4MCU5OXMtdGhlLWRpZmZlcmVuY2UtYmV0
d2Vlbi1jaHJvbWl1bS1hbmQtY2hyb21lLykgZm9yIGEgZGVzY3JpcHRpb24g
b2YgdGhlIGRpZmZlcmVuY2VzIGJldHdlZW4gQ2hyb21pdW0gYW5kIENocm9t
ZS4gW2BUaGlzIGFydGljbGVgXShodHRwczovL2Nocm9taXVtLmdvb2dsZXNv
dXJjZS5jb20vY2hyb21pdW0vc3JjLysvbWFzdGVyL2RvY3MvY2hyb21pdW1f
YnJvd3Nlcl92c19nb29nbGVfY2hyb21lLm1kKSBkZXNjcmliZXMgc29tZSBk
aWZmZXJlbmNlcyBmb3IgTGludXggdXNlcnMuCgoqKjMuIENyZWF0ZXMgYSBm
cmVzaCB1c2VyIHByb2ZpbGUqKgoKUHVwcGV0ZWVyIGNyZWF0ZXMgaXRzIG93
biBDaHJvbWl1bSB1c2VyIHByb2ZpbGUgd2hpY2ggaXQgKipjbGVhbnMgdXAg
b24gZXZlcnkgcnVuKiouCgo8IS0tIFtFTkQgcnVudGltZXNldHRpbmdzXSAt
LT4KCiMjIFJlc291cmNlcwoKLSBbQVBJIERvY3VtZW50YXRpb25dKGh0dHBz
Oi8vZ2l0aHViLmNvbS9wdXBwZXRlZXIvcHVwcGV0ZWVyL2Jsb2IvdjIuMC4w
L2RvY3MvYXBpLm1kKQotIFtFeGFtcGxlc10oaHR0cHM6Ly9naXRodWIuY29t
L3B1cHBldGVlci9wdXBwZXRlZXIvdHJlZS9tYXN0ZXIvZXhhbXBsZXMvKQot
IFtDb21tdW5pdHkgbGlzdCBvZiBQdXBwZXRlZXIgcmVzb3VyY2VzXShodHRw
czovL2dpdGh1Yi5jb20vdHJhbnNpdGl2ZS1idWxsc2hpdC9hd2Vzb21lLXB1
cHBldGVlcikKCgo8IS0tIFtTVEFSVCBkZWJ1Z2dpbmddIC0tPgoKIyMgRGVi
dWdnaW5nIHRpcHMKCjEuIFR1cm4gb2ZmIGhlYWRsZXNzIG1vZGUgLSBzb21l
dGltZXMgaXQncyB1c2VmdWwgdG8gc2VlIHdoYXQgdGhlIGJyb3dzZXIgaXMK
ICAgZGlzcGxheWluZy4gSW5zdGVhZCBvZiBsYXVuY2hpbmcgaW4gaGVhZGxl
c3MgbW9kZSwgbGF1bmNoIGEgZnVsbCB2ZXJzaW9uIG9mCiAgIHRoZSBicm93
c2VyIHVzaW5nICBgaGVhZGxlc3M6IGZhbHNlYDoKCiAgICAgICAgY29uc3Qg
YnJvd3NlciA9IGF3YWl0IHB1cHBldGVlci5sYXVuY2goe2hlYWRsZXNzOiBm
YWxzZX0pOwoKMi4gU2xvdyBpdCBkb3duIC0gdGhlIGBzbG93TW9gIG9wdGlv
biBzbG93cyBkb3duIFB1cHBldGVlciBvcGVyYXRpb25zIGJ5IHRoZQogICBz
cGVjaWZpZWQgYW1vdW50IG9mIG1pbGxpc2Vjb25kcy4gSXQncyBhbm90aGVy
IHdheSB0byBoZWxwIHNlZSB3aGF0J3MgZ29pbmcgb24uCgogICAgICAgIGNv
bnN0IGJyb3dzZXIgPSBhd2FpdCBwdXBwZXRlZXIubGF1bmNoKHsKICAgICAg
ICAgIGhlYWRsZXNzOiBmYWxzZSwKICAgICAgICAgIHNsb3dNbzogMjUwIC8v
IHNsb3cgZG93biBieSAyNTBtcwogICAgICAgIH0pOwoKMy4gQ2FwdHVyZSBj
b25zb2xlIG91dHB1dCAtIFlvdSBjYW4gbGlzdGVuIGZvciB0aGUgYGNvbnNv
bGVgIGV2ZW50LgogICBUaGlzIGlzIGFsc28gaGFuZHkgd2hlbiBkZWJ1Z2dp
bmcgY29kZSBpbiBgcGFnZS5ldmFsdWF0ZSgpYDoKCiAgICAgICAgcGFnZS5v
bignY29uc29sZScsIG1zZyA9PiBjb25zb2xlLmxvZygnUEFHRSBMT0c6Jywg
bXNnLnRleHQoKSkpOwoKICAgICAgICBhd2FpdCBwYWdlLmV2YWx1YXRlKCgp
ID0+IGNvbnNvbGUubG9nKGB1cmwgaXMgJHtsb2NhdGlvbi5ocmVmfWApKTsK
CjQuIFVzZSBkZWJ1Z2dlciBpbiBhcHBsaWNhdGlvbiBjb2RlIGJyb3dzZXIK
CiAgICBUaGVyZSBhcmUgdHdvIGV4ZWN1dGlvbiBjb250ZXh0OiBub2RlLmpz
IHRoYXQgaXMgcnVubmluZyB0ZXN0IGNvZGUsIGFuZCB0aGUgYnJvd3Nlcgog
ICAgcnVubmluZyBhcHBsaWNhdGlvbiBjb2RlIGJlaW5nIHRlc3RlZC4gVGhp
cyBsZXRzIHlvdSBkZWJ1ZyBjb2RlIGluIHRoZQogICAgYXBwbGljYXRpb24g
Y29kZSBicm93c2VyOyBpZSBjb2RlIGluc2lkZSBgZXZhbHVhdGUoKWAuCgog
ICAgLSBVc2UgYHtkZXZ0b29sczogdHJ1ZX1gIHdoZW4gbGF1bmNoaW5nIFB1
cHBldGVlcjoKCiAgICAgICAgYGNvbnN0IGJyb3dzZXIgPSBhd2FpdCBwdXBw
ZXRlZXIubGF1bmNoKHtkZXZ0b29sczogdHJ1ZX0pO2AKCiAgICAtIENoYW5n
ZSBkZWZhdWx0IHRlc3QgdGltZW91dDoKCiAgICAgICAgamVzdDogYGplc3Qu
c2V0VGltZW91dCgxMDAwMDApO2AKCiAgICAgICAgamFzbWluZTogYGphc21p
bmUuREVGQVVMVF9USU1FT1VUX0lOVEVSVkFMID0gMTAwMDAwO2AKCiAgICAg
ICAgbW9jaGE6IGB0aGlzLnRpbWVvdXQoMTAwMDAwKTtgIChkb24ndCBmb3Jn
ZXQgdG8gY2hhbmdlIHRlc3QgdG8gdXNlIFtmdW5jdGlvbiBhbmQgbm90ICc9
PiddKGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8yMzQ5MjQ0MikpCgog
ICAgLSBBZGQgYW4gZXZhbHVhdGUgc3RhdGVtZW50IHdpdGggYGRlYnVnZ2Vy
YCBpbnNpZGUgLyBhZGQgIGBkZWJ1Z2dlcmAgdG8gYW4gZXhpc3RpbmcgZXZh
bHVhdGUgc3RhdGVtZW50OgoKICAgICAgYGF3YWl0IHBhZ2UuZXZhbHVhdGUo
KCkgPT4ge2RlYnVnZ2VyO30pO2AKCiAgICAgICBUaGUgdGVzdCB3aWxsIG5v
dyBzdG9wIGV4ZWN1dGluZyBpbiB0aGUgYWJvdmUgZXZhbHVhdGUgc3RhdGVt
ZW50LCBhbmQgY2hyb21pdW0gd2lsbCBzdG9wIGluIGRlYnVnIG1vZGUuCgo1
LiBVc2UgZGVidWdnZXIgaW4gbm9kZS5qcwoKICAgIFRoaXMgd2lsbCBsZXQg
eW91IGRlYnVnIHRlc3QgY29kZS4gRm9yIGV4YW1wbGUsIHlvdSBjYW4gc3Rl
cCBvdmVyIGBhd2FpdCBwYWdlLmNsaWNrKClgIGluIHRoZSBub2RlLmpzIHNj
cmlwdCBhbmQgc2VlIHRoZSBjbGljayBoYXBwZW4gaW4gdGhlIGFwcGxpY2F0
aW9uIGNvZGUgYnJvd3Nlci4KCiAgICBOb3RlIHRoYXQgeW91IHdvbid0IGJl
IGFibGUgdG8gcnVuIGBhd2FpdCBwYWdlLmNsaWNrKClgIGluCiAgICBEZXZU
b29scyBjb25zb2xlIGR1ZSB0byB0aGlzIFtDaHJvbWl1bSBidWddKGh0dHBz
Oi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWls
P2lkPTgzMzkyOCkuIFNvIGlmCiAgICB5b3Ugd2FudCB0byB0cnkgc29tZXRo
aW5nIG91dCwgeW91IGhhdmUgdG8gYWRkIGl0IHRvIHlvdXIgdGVzdCBmaWxl
LgoKICAgIC0gQWRkIGBkZWJ1Z2dlcjtgIHRvIHlvdXIgdGVzdCwgZWc6CiAg
ICAgIGBgYAogICAgICBkZWJ1Z2dlcjsKICAgICAgYXdhaXQgcGFnZS5jbGlj
aygnYVt0YXJnZXQ9X2JsYW5rXScpOwogICAgICBgYGAKICAgIC0gU2V0IGBo
ZWFkbGVzc2AgdG8gYGZhbHNlYAogICAgLSBSdW4gYG5vZGUgLS1pbnNwZWN0
LWJya2AsIGVnIGBub2RlIC0taW5zcGVjdC1icmsgbm9kZV9tb2R1bGVzLy5i
aW4vamVzdCB0ZXN0c2AKICAgIC0gSW4gQ2hyb21lIG9wZW4gYGNocm9tZTov
L2luc3BlY3QvI2RldmljZXNgIGFuZCBjbGljayBgaW5zcGVjdGAKICAgIC0g
SW4gdGhlIG5ld2x5IG9wZW5lZCB0ZXN0IGJyb3dzZXIsIHR5cGUgYEY4YCB0
byByZXN1bWUgdGVzdCBleGVjdXRpb24KICAgIC0gTm93IHlvdXIgYGRlYnVn
Z2VyYCB3aWxsIGJlIGhpdCBhbmQgeW91IGNhbiBkZWJ1ZyBpbiB0aGUgdGVz
dCBicm93c2VyCgoKNi4gRW5hYmxlIHZlcmJvc2UgbG9nZ2luZyAtIGludGVy
bmFsIERldlRvb2xzIHByb3RvY29sIHRyYWZmaWMKICAgd2lsbCBiZSBsb2dn
ZWQgdmlhIHRoZSBbYGRlYnVnYF0oaHR0cHM6Ly9naXRodWIuY29tL3Zpc2lv
bm1lZGlhL2RlYnVnKSBtb2R1bGUgdW5kZXIgdGhlIGBwdXBwZXRlZXJgIG5h
bWVzcGFjZS4KCiAgICAgICAgIyBCYXNpYyB2ZXJib3NlIGxvZ2dpbmcKICAg
ICAgICBlbnYgREVCVUc9InB1cHBldGVlcjoqIiBub2RlIHNjcmlwdC5qcwoK
ICAgICAgICAjIFByb3RvY29sIHRyYWZmaWMgY2FuIGJlIHJhdGhlciBub2lz
eS4gVGhpcyBleGFtcGxlIGZpbHRlcnMgb3V0IGFsbCBOZXR3b3JrIGRvbWFp
biBtZXNzYWdlcwogICAgICAgIGVudiBERUJVRz0icHVwcGV0ZWVyOioiIGVu
diBERUJVR19DT0xPUlM9dHJ1ZSBub2RlIHNjcmlwdC5qcyAyPiYxIHwgZ3Jl
cCAtdiAnIk5ldHdvcmsnCgo3LiBEZWJ1ZyB5b3VyIFB1cHBldGVlciAobm9k
ZSkgY29kZSBlYXNpbHksIHVzaW5nIFtuZGJdKGh0dHBzOi8vZ2l0aHViLmNv
bS9wdXBwZXRlZXJMYWJzL25kYikKCiAgLSBgbnBtIGluc3RhbGwgLWcgbmRi
YCAob3IgZXZlbiBiZXR0ZXIsIHVzZSBbbnB4XShodHRwczovL2dpdGh1Yi5j
b20vemthdC9ucHgpISkKCiAgLSBhZGQgYSBgZGVidWdnZXJgIHRvIHlvdXIg
UHVwcGV0ZWVyIChub2RlKSBjb2RlCgogIC0gYWRkIGBuZGJgIChvciBgbnB4
IG5kYmApIGJlZm9yZSB5b3VyIHRlc3QgY29tbWFuZC4gRm9yIGV4YW1wbGU6
CgogICAgYG5kYiBqZXN0YCBvciBgbmRiIG1vY2hhYCAob3IgYG5weCBuZGIg
amVzdGAgLyBgbnB4IG5kYiBtb2NoYWApCgogIC0gZGVidWcgeW91ciB0ZXN0
IGluc2lkZSBjaHJvbWl1bSBsaWtlIGEgYm9zcyEKCgo8IS0tIFtFTkQgZGVi
dWdnaW5nXSAtLT4KCiMjIENvbnRyaWJ1dGluZyB0byBQdXBwZXRlZXIKCkNo
ZWNrIG91dCBbY29udHJpYnV0aW5nIGd1aWRlXShodHRwczovL2dpdGh1Yi5j
b20vcHVwcGV0ZWVyL3B1cHBldGVlci9ibG9iL21hc3Rlci9DT05UUklCVVRJ
TkcubWQpIHRvIGdldCBhbiBvdmVydmlldyBvZiBQdXBwZXRlZXIgZGV2ZWxv
cG1lbnQuCgo8IS0tIFtTVEFSVCBmYXFdIC0tPgoKIyBGQVEKCiMjIyMgUTog
V2hvIG1haW50YWlucyBQdXBwZXRlZXI/CgpUaGUgQ2hyb21lIERldlRvb2xz
IHRlYW0gbWFpbnRhaW5zIHRoZSBsaWJyYXJ5LCBidXQgd2UnZCBsb3ZlIHlv
dXIgaGVscCBhbmQgZXhwZXJ0aXNlIG9uIHRoZSBwcm9qZWN0IQpTZWUgW0Nv
bnRyaWJ1dGluZ10oaHR0cHM6Ly9naXRodWIuY29tL3B1cHBldGVlci9wdXBw
ZXRlZXIvYmxvYi9tYXN0ZXIvQ09OVFJJQlVUSU5HLm1kKS4KCiMjIyMgUTog
V2hhdCBhcmUgUHVwcGV0ZWVy4oCZcyBnb2FscyBhbmQgcHJpbmNpcGxlcz8K
ClRoZSBnb2FscyBvZiB0aGUgcHJvamVjdCBhcmU6CgotIFByb3ZpZGUgYSBz
bGltLCBjYW5vbmljYWwgbGlicmFyeSB0aGF0IGhpZ2hsaWdodHMgdGhlIGNh
cGFiaWxpdGllcyBvZiB0aGUgW0RldlRvb2xzIFByb3RvY29sXShodHRwczov
L2Nocm9tZWRldnRvb2xzLmdpdGh1Yi5pby9kZXZ0b29scy1wcm90b2NvbC8p
LgotIFByb3ZpZGUgYSByZWZlcmVuY2UgaW1wbGVtZW50YXRpb24gZm9yIHNp
bWlsYXIgdGVzdGluZyBsaWJyYXJpZXMuIEV2ZW50dWFsbHksIHRoZXNlIG90
aGVyIGZyYW1ld29ya3MgY291bGQgYWRvcHQgUHVwcGV0ZWVyIGFzIHRoZWly
IGZvdW5kYXRpb25hbCBsYXllci4KLSBHcm93IHRoZSBhZG9wdGlvbiBvZiBo
ZWFkbGVzcy9hdXRvbWF0ZWQgYnJvd3NlciB0ZXN0aW5nLgotIEhlbHAgZG9n
Zm9vZCBuZXcgRGV2VG9vbHMgUHJvdG9jb2wgZmVhdHVyZXMuLi5hbmQgY2F0
Y2ggYnVncyEKLSBMZWFybiBtb3JlIGFib3V0IHRoZSBwYWluIHBvaW50cyBv
ZiBhdXRvbWF0ZWQgYnJvd3NlciB0ZXN0aW5nIGFuZCBoZWxwIGZpbGwgdGhv
c2UgZ2Fwcy4KCldlIGFkYXB0IFtDaHJvbWl1bSBwcmluY2lwbGVzXShodHRw
czovL3d3dy5jaHJvbWl1bS5vcmcvZGV2ZWxvcGVycy9jb3JlLXByaW5jaXBs
ZXMpIHRvIGhlbHAgdXMgZHJpdmUgcHJvZHVjdCBkZWNpc2lvbnM6Ci0gKipT
cGVlZCoqOiBQdXBwZXRlZXIgaGFzIGFsbW9zdCB6ZXJvIHBlcmZvcm1hbmNl
IG92ZXJoZWFkIG92ZXIgYW4gYXV0b21hdGVkIHBhZ2UuCi0gKipTZWN1cml0
eSoqOiBQdXBwZXRlZXIgb3BlcmF0ZXMgb2ZmLXByb2Nlc3Mgd2l0aCByZXNw
ZWN0IHRvIENocm9taXVtLCBtYWtpbmcgaXQgc2FmZSB0byBhdXRvbWF0ZSBw
b3RlbnRpYWxseSBtYWxpY2lvdXMgcGFnZXMuCi0gKipTdGFiaWxpdHkqKjog
UHVwcGV0ZWVyIHNob3VsZCBub3QgYmUgZmxha3kgYW5kIHNob3VsZCBub3Qg
bGVhayBtZW1vcnkuCi0gKipTaW1wbGljaXR5Kio6IFB1cHBldGVlciBwcm92
aWRlcyBhIGhpZ2gtbGV2ZWwgQVBJIHRoYXTigJlzIGVhc3kgdG8gdXNlLCB1
bmRlcnN0YW5kLCBhbmQgZGVidWcuCgojIyMjIFE6IElzIFB1cHBldGVlciBy
ZXBsYWNpbmcgU2VsZW5pdW0vV2ViRHJpdmVyPwoKKipObyoqLiBCb3RoIHBy
b2plY3RzIGFyZSB2YWx1YWJsZSBmb3IgdmVyeSBkaWZmZXJlbnQgcmVhc29u
czoKLSBTZWxlbml1bS9XZWJEcml2ZXIgZm9jdXNlcyBvbiBjcm9zcy1icm93
c2VyIGF1dG9tYXRpb247IGl0cyB2YWx1ZSBwcm9wb3NpdGlvbiBpcyBhIHNp
bmdsZSBzdGFuZGFyZCBBUEkgdGhhdCB3b3JrcyBhY3Jvc3MgYWxsIG1ham9y
IGJyb3dzZXJzLgotIFB1cHBldGVlciBmb2N1c2VzIG9uIENocm9taXVtOyBp
dHMgdmFsdWUgcHJvcG9zaXRpb24gaXMgcmljaGVyIGZ1bmN0aW9uYWxpdHkg
YW5kIGhpZ2hlciByZWxpYWJpbGl0eS4KClRoYXQgc2FpZCwgeW91ICoqY2Fu
KiogdXNlIFB1cHBldGVlciB0byBydW4gdGVzdHMgYWdhaW5zdCBDaHJvbWl1
bSwgZS5nLiB1c2luZyB0aGUgY29tbXVuaXR5LWRyaXZlbiBbamVzdC1wdXBw
ZXRlZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9zbW9vdGgtY29kZS9qZXN0LXB1
cHBldGVlcikuIFdoaWxlIHRoaXMgcHJvYmFibHkgc2hvdWxkbuKAmXQgYmUg
eW91ciBvbmx5IHRlc3Rpbmcgc29sdXRpb24sIGl0IGRvZXMgaGF2ZSBhIGZl
dyBnb29kIHBvaW50cyBjb21wYXJlZCB0byBXZWJEcml2ZXI6CgotIFB1cHBl
dGVlciByZXF1aXJlcyB6ZXJvIHNldHVwIGFuZCBjb21lcyBidW5kbGVkIHdp
dGggdGhlIENocm9taXVtIHZlcnNpb24gaXQgd29ya3MgYmVzdCB3aXRoLCBt
YWtpbmcgaXQgW3ZlcnkgZWFzeSB0byBzdGFydCB3aXRoXShodHRwczovL2dp
dGh1Yi5jb20vcHVwcGV0ZWVyL3B1cHBldGVlci8jZ2V0dGluZy1zdGFydGVk
KS4gQXQgdGhlIGVuZCBvZiB0aGUgZGF5LCBpdOKAmXMgYmV0dGVyIHRvIGhh
dmUgYSBmZXcgdGVzdHMgcnVubmluZyBjaHJvbWl1bS1vbmx5LCB0aGFuIG5v
IHRlc3RzIGF0IGFsbC4KLSBQdXBwZXRlZXIgaGFzIGV2ZW50LWRyaXZlbiBh
cmNoaXRlY3R1cmUsIHdoaWNoIHJlbW92ZXMgYSBsb3Qgb2YgcG90ZW50aWFs
IGZsYWtpbmVzcy4gVGhlcmXigJlzIG5vIG5lZWQgZm9yIGV2aWwg4oCcc2xl
ZXAoMTAwMCnigJ0gY2FsbHMgaW4gcHVwcGV0ZWVyIHNjcmlwdHMuCi0gUHVw
cGV0ZWVyIHJ1bnMgaGVhZGxlc3MgYnkgZGVmYXVsdCwgd2hpY2ggbWFrZXMg
aXQgZmFzdCB0byBydW4uIFB1cHBldGVlciB2MS41LjAgYWxzbyBleHBvc2Vz
IGJyb3dzZXIgY29udGV4dHMsIG1ha2luZyBpdCBwb3NzaWJsZSB0byBlZmZp
Y2llbnRseSBwYXJhbGxlbGl6ZSB0ZXN0IGV4ZWN1dGlvbi4KLSBQdXBwZXRl
ZXIgc2hpbmVzIHdoZW4gaXQgY29tZXMgdG8gZGVidWdnaW5nOiBmbGlwIHRo
ZSDigJxoZWFkbGVzc+KAnSBiaXQgdG8gZmFsc2UsIGFkZCDigJxzbG93TW/i
gJ0sIGFuZCB5b3XigJlsbCBzZWUgd2hhdCB0aGUgYnJvd3NlciBpcyBkb2lu
Zy4gWW91IGNhbiBldmVuIG9wZW4gQ2hyb21lIERldlRvb2xzIHRvIGluc3Bl
Y3QgdGhlIHRlc3QgZW52aXJvbm1lbnQuCgojIyMjIFE6IFdoeSBkb2VzbuKA
mXQgUHVwcGV0ZWVyIHYuWFhYIHdvcmsgd2l0aCBDaHJvbWl1bSB2LllZWT8K
CldlIHNlZSBQdXBwZXRlZXIgYXMgYW4gKippbmRpdmlzaWJsZSBlbnRpdHkq
KiB3aXRoIENocm9taXVtLiBFYWNoIHZlcnNpb24gb2YgUHVwcGV0ZWVyIGJ1
bmRsZXMgYSBzcGVjaWZpYyB2ZXJzaW9uIG9mIENocm9taXVtIOKAkyAqKnRo
ZSBvbmx5KiogdmVyc2lvbiBpdCBpcyBndWFyYW50ZWVkIHRvIHdvcmsgd2l0
aC4KClRoaXMgaXMgbm90IGFuIGFydGlmaWNpYWwgY29uc3RyYWludDogQSBs
b3Qgb2Ygd29yayBvbiBQdXBwZXRlZXIgaXMgYWN0dWFsbHkgdGFraW5nIHBs
YWNlIGluIHRoZSBDaHJvbWl1bSByZXBvc2l0b3J5LiBIZXJl4oCZcyBhIHR5
cGljYWwgc3Rvcnk6Ci0gQSBQdXBwZXRlZXIgYnVnIGlzIHJlcG9ydGVkOiBo
dHRwczovL2dpdGh1Yi5jb20vcHVwcGV0ZWVyL3B1cHBldGVlci9pc3N1ZXMv
MjcwOQotIEl0IHR1cm5lZCBvdXQgdGhpcyBpcyBhbiBpc3N1ZSB3aXRoIHRo
ZSBEZXZUb29scyBwcm90b2NvbCwgc28gd2XigJlyZSBmaXhpbmcgaXQgaW4g
Q2hyb21pdW06IGh0dHBzOi8vY2hyb21pdW0tcmV2aWV3Lmdvb2dsZXNvdXJj
ZS5jb20vYy9jaHJvbWl1bS9zcmMvKy8xMTAyMTU0Ci0gT25jZSB0aGUgdXBz
dHJlYW0gZml4IGlzIGxhbmRlZCwgd2Ugcm9sbCB1cGRhdGVkIENocm9taXVt
IGludG8gUHVwcGV0ZWVyOiBodHRwczovL2dpdGh1Yi5jb20vcHVwcGV0ZWVy
L3B1cHBldGVlci9wdWxsLzI3NjkKCkhvd2V2ZXIsIG9mdGVudGltZXMgaXQg
aXMgZGVzaXJhYmxlIHRvIHVzZSBQdXBwZXRlZXIgd2l0aCB0aGUgb2ZmaWNp
YWwgR29vZ2xlIENocm9tZSByYXRoZXIgdGhhbiBDaHJvbWl1bS4gRm9yIHRo
aXMgdG8gd29yaywgeW91IHNob3VsZCBpbnN0YWxsIGEgYHB1cHBldGVlci1j
b3JlYCB2ZXJzaW9uIHRoYXQgY29ycmVzcG9uZHMgdG8gdGhlIENocm9tZSB2
ZXJzaW9uLgoKRm9yIGV4YW1wbGUsIGluIG9yZGVyIHRvIGRyaXZlIENocm9t
ZSA3MSB3aXRoIHB1cHBldGVlci1jb3JlLCB1c2UgYGNocm9tZS03MWAgbnBt
IHRhZzoKYGBgYmFzaApucG0gaW5zdGFsbCBwdXBwZXRlZXItY29yZUBjaHJv
bWUtNzEKYGBgCgojIyMjIFE6IFdoaWNoIENocm9taXVtIHZlcnNpb24gZG9l
cyBQdXBwZXRlZXIgdXNlPwoKTG9vayBmb3IgYGNocm9taXVtX3JldmlzaW9u
YCBpbiBbcGFja2FnZS5qc29uXShodHRwczovL2dpdGh1Yi5jb20vcHVwcGV0
ZWVyL3B1cHBldGVlci9ibG9iL21hc3Rlci9wYWNrYWdlLmpzb24pLiBUbyBm
aW5kIHRoZSBjb3JyZXNwb25kaW5nIENocm9taXVtIGNvbW1pdCBhbmQgdmVy
c2lvbiBudW1iZXIsIHNlYXJjaCBmb3IgdGhlIHJldmlzaW9uIHByZWZpeGVk
IGJ5IGFuIGByYCBpbiBbT21haGFQcm94eV0oaHR0cHM6Ly9vbWFoYXByb3h5
LmFwcHNwb3QuY29tLykncyAiRmluZCBSZWxlYXNlcyIgc2VjdGlvbi4KCiMj
IyMgUTogV2hhdOKAmXMgY29uc2lkZXJlZCBhIOKAnE5hdmlnYXRpb27igJ0/
CgpGcm9tIFB1cHBldGVlcuKAmXMgc3RhbmRwb2ludCwgKirigJxuYXZpZ2F0
aW9u4oCdIGlzIGFueXRoaW5nIHRoYXQgY2hhbmdlcyBhIHBhZ2XigJlzIFVS
TCoqLgpBc2lkZSBmcm9tIHJlZ3VsYXIgbmF2aWdhdGlvbiB3aGVyZSB0aGUg
YnJvd3NlciBoaXRzIHRoZSBuZXR3b3JrIHRvIGZldGNoIGEgbmV3IGRvY3Vt
ZW50IGZyb20gdGhlIHdlYiBzZXJ2ZXIsIHRoaXMgaW5jbHVkZXMgW2FuY2hv
ciBuYXZpZ2F0aW9uc10oaHR0cHM6Ly93d3cudzMub3JnL1RSL2h0bWw1L3Np
bmdsZS1wYWdlLmh0bWwjc2Nyb2xsLXRvLWZyYWdpZCkgYW5kIFtIaXN0b3J5
IEFQSV0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9j
cy9XZWIvQVBJL0hpc3RvcnlfQVBJKSB1c2FnZS4KCldpdGggdGhpcyBkZWZp
bml0aW9uIG9mIOKAnG5hdmlnYXRpb24s4oCdICoqUHVwcGV0ZWVyIHdvcmtz
IHNlYW1sZXNzbHkgd2l0aCBzaW5nbGUtcGFnZSBhcHBsaWNhdGlvbnMuKioK
CiMjIyMgUTogV2hhdOKAmXMgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBhIOKA
nHRydXN0ZWQiIGFuZCAidW50cnVzdGVkIiBpbnB1dCBldmVudD8KCkluIGJy
b3dzZXJzLCBpbnB1dCBldmVudHMgY291bGQgYmUgZGl2aWRlZCBpbnRvIHR3
byBiaWcgZ3JvdXBzOiB0cnVzdGVkIHZzLiB1bnRydXN0ZWQuCgotICoqVHJ1
c3RlZCBldmVudHMqKjogZXZlbnRzIGdlbmVyYXRlZCBieSB1c2VycyBpbnRl
cmFjdGluZyB3aXRoIHRoZSBwYWdlLCBlLmcuIHVzaW5nIGEgbW91c2Ugb3Ig
a2V5Ym9hcmQuCi0gKipVbnRydXN0ZWQgZXZlbnQqKjogZXZlbnRzIGdlbmVy
YXRlZCBieSBXZWIgQVBJcywgZS5nLiBgZG9jdW1lbnQuY3JlYXRlRXZlbnRg
IG9yIGBlbGVtZW50LmNsaWNrKClgIG1ldGhvZHMuCgpXZWJzaXRlcyBjYW4g
ZGlzdGluZ3Vpc2ggYmV0d2VlbiB0aGVzZSB0d28gZ3JvdXBzOgotIHVzaW5n
IGFuIFtgRXZlbnQuaXNUcnVzdGVkYF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96
aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0V2ZW50L2lzVHJ1c3RlZCkg
ZXZlbnQgZmxhZwotIHNuaWZmaW5nIGZvciBhY2NvbXBhbnlpbmcgZXZlbnRz
LiBGb3IgZXhhbXBsZSwgZXZlcnkgdHJ1c3RlZCBgJ2NsaWNrJ2AgZXZlbnQg
aXMgcHJlY2VkZWQgYnkgYCdtb3VzZWRvd24nYCBhbmQgYCdtb3VzZXVwJ2Ag
ZXZlbnRzLgoKRm9yIGF1dG9tYXRpb24gcHVycG9zZXMgaXTigJlzIGltcG9y
dGFudCB0byBnZW5lcmF0ZSB0cnVzdGVkIGV2ZW50cy4gKipBbGwgaW5wdXQg
ZXZlbnRzIGdlbmVyYXRlZCB3aXRoIFB1cHBldGVlciBhcmUgdHJ1c3RlZCBh
bmQgZmlyZSBwcm9wZXIgYWNjb21wYW55aW5nIGV2ZW50cy4qKiBJZiwgZm9y
IHNvbWUgcmVhc29uLCBvbmUgbmVlZHMgYW4gdW50cnVzdGVkIGV2ZW50LCBp
dOKAmXMgYWx3YXlzIHBvc3NpYmxlIHRvIGhvcCBpbnRvIGEgcGFnZSBjb250
ZXh0IHdpdGggYHBhZ2UuZXZhbHVhdGVgIGFuZCBnZW5lcmF0ZSBhIGZha2Ug
ZXZlbnQ6CgpgYGBqcwphd2FpdCBwYWdlLmV2YWx1YXRlKCgpID0+IHsKICBk
b2N1bWVudC5xdWVyeVNlbGVjdG9yKCdidXR0b25bdHlwZT1zdWJtaXRdJyku
Y2xpY2soKTsKfSk7CmBgYAoKIyMjIyBROiBXaGF0IGZlYXR1cmVzIGRvZXMg
UHVwcGV0ZWVyIG5vdCBzdXBwb3J0PwoKWW91IG1heSBmaW5kIHRoYXQgUHVw
cGV0ZWVyIGRvZXMgbm90IGJlaGF2ZSBhcyBleHBlY3RlZCB3aGVuIGNvbnRy
b2xsaW5nIHBhZ2VzIHRoYXQgaW5jb3Jwb3JhdGUgYXVkaW8gYW5kIHZpZGVv
LiAoRm9yIGV4YW1wbGUsIFt2aWRlbyBwbGF5YmFjay9zY3JlZW5zaG90cyBp
cyBsaWtlbHkgdG8gZmFpbF0oaHR0cHM6Ly9naXRodWIuY29tL3B1cHBldGVl
ci9wdXBwZXRlZXIvaXNzdWVzLzI5MSkuKSBUaGVyZSBhcmUgdHdvIHJlYXNv
bnMgZm9yIHRoaXM6CgoqIFB1cHBldGVlciBpcyBidW5kbGVkIHdpdGggQ2hy
b21pdW0g4oCUIG5vdCBDaHJvbWUg4oCUIGFuZCBzbyBieSBkZWZhdWx0LCBp
dCBpbmhlcml0cyBhbGwgb2YgW0Nocm9taXVtJ3MgbWVkaWEtcmVsYXRlZCBs
aW1pdGF0aW9uc10oaHR0cHM6Ly93d3cuY2hyb21pdW0ub3JnL2F1ZGlvLXZp
ZGVvKS4gVGhpcyBtZWFucyB0aGF0IFB1cHBldGVlciBkb2VzIG5vdCBzdXBw
b3J0IGxpY2Vuc2VkIGZvcm1hdHMgc3VjaCBhcyBBQUMgb3IgSC4yNjQuIChI
b3dldmVyLCBpdCBpcyBwb3NzaWJsZSB0byBmb3JjZSBQdXBwZXRlZXIgdG8g
dXNlIGEgc2VwYXJhdGVseS1pbnN0YWxsZWQgdmVyc2lvbiBDaHJvbWUgaW5z
dGVhZCBvZiBDaHJvbWl1bSB2aWEgdGhlIFtgZXhlY3V0YWJsZVBhdGhgIG9w
dGlvbiB0byBgcHVwcGV0ZWVyLmxhdW5jaGBdKGh0dHBzOi8vZ2l0aHViLmNv
bS9wdXBwZXRlZXIvcHVwcGV0ZWVyL2Jsb2IvdjIuMC4wL2RvY3MvYXBpLm1k
I3B1cHBldGVlcmxhdW5jaG9wdGlvbnMpLiBZb3Ugc2hvdWxkIG9ubHkgdXNl
IHRoaXMgY29uZmlndXJhdGlvbiBpZiB5b3UgbmVlZCBhbiBvZmZpY2lhbCBy
ZWxlYXNlIG9mIENocm9tZSB0aGF0IHN1cHBvcnRzIHRoZXNlIG1lZGlhIGZv
cm1hdHMuKQoqIFNpbmNlIFB1cHBldGVlciAoaW4gYWxsIGNvbmZpZ3VyYXRp
b25zKSBjb250cm9scyBhIGRlc2t0b3AgdmVyc2lvbiBvZiBDaHJvbWl1bS9D
aHJvbWUsIGZlYXR1cmVzIHRoYXQgYXJlIG9ubHkgc3VwcG9ydGVkIGJ5IHRo
ZSBtb2JpbGUgdmVyc2lvbiBvZiBDaHJvbWUgYXJlIG5vdCBzdXBwb3J0ZWQu
IFRoaXMgbWVhbnMgdGhhdCBQdXBwZXRlZXIgW2RvZXMgbm90IHN1cHBvcnQg
SFRUUCBMaXZlIFN0cmVhbWluZyAoSExTKV0oaHR0cHM6Ly9jYW5pdXNlLmNv
bS8jZmVhdD1odHRwLWxpdmUtc3RyZWFtaW5nKS4KCiMjIyMgUTogSSBhbSBo
YXZpbmcgdHJvdWJsZSBpbnN0YWxsaW5nIC8gcnVubmluZyBQdXBwZXRlZXIg
aW4gbXkgdGVzdCBlbnZpcm9ubWVudC4gV2hlcmUgc2hvdWxkIEkgbG9vayBm
b3IgaGVscD8KV2UgaGF2ZSBhIFt0cm91Ymxlc2hvb3RpbmddKGh0dHBzOi8v
Z2l0aHViLmNvbS9wdXBwZXRlZXIvcHVwcGV0ZWVyL2Jsb2IvbWFzdGVyL2Rv
Y3MvdHJvdWJsZXNob290aW5nLm1kKSBndWlkZSBmb3IgdmFyaW91cyBvcGVy
YXRpbmcgc3lzdGVtcyB0aGF0IGxpc3RzIHRoZSByZXF1aXJlZCBkZXBlbmRl
bmNpZXMuCgojIyMjIFE6IEhvdyBkbyBJIHRyeS90ZXN0IGEgcHJlcmVsZWFz
ZSB2ZXJzaW9uIG9mIFB1cHBldGVlcj8KCllvdSBjYW4gY2hlY2sgb3V0IHRo
aXMgcmVwbyBvciBpbnN0YWxsIHRoZSBsYXRlc3QgcHJlcmVsZWFzZSBmcm9t
IG5wbToKCmBgYGJhc2gKbnBtIGkgLS1zYXZlIHB1cHBldGVlckBuZXh0CmBg
YAoKUGxlYXNlIG5vdGUgdGhhdCBwcmVyZWxlYXNlIG1heSBiZSB1bnN0YWJs
ZSBhbmQgY29udGFpbiBidWdzLgoKIyMjIyBROiBJIGhhdmUgbW9yZSBxdWVz
dGlvbnMhIFdoZXJlIGRvIEkgYXNrPwoKVGhlcmUgYXJlIG1hbnkgd2F5cyB0
byBnZXQgaGVscCBvbiBQdXBwZXRlZXI6Ci0gW2J1Z3RyYWNrZXJdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9wdXBwZXRlZXIvcHVwcGV0ZWVyL2lzc3VlcykKLSBb
U3RhY2sgT3ZlcmZsb3ddKGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVl
c3Rpb25zL3RhZ2dlZC9wdXBwZXRlZXIpCi0gW3NsYWNrIGNoYW5uZWxdKGh0
dHBzOi8vam9pbi5zbGFjay5jb20vdC9wdXBwZXRlZXIvc2hhcmVkX2ludml0
ZS9lblF0TXpVNE1qSXlNREE1TlRNNExXSTBZVEUwTWpNME5XUXpZbUUyTVRS
bU5qTTFaVEJrTjJNeE5tSm1OVEl3TlRKak1tRmhPV0ZqTUdFeE1EVmlZamsy
WWpVMlptWXpNbUUxTm1FeFl6YykKCk1ha2Ugc3VyZSB0byBzZWFyY2ggdGhl
c2UgY2hhbm5lbHMgYmVmb3JlIHBvc3RpbmcgeW91ciBxdWVzdGlvbi4KCgo8
IS0tIFtFTkQgZmFxXSAtLT4K
",,56376,"bGFuZ3VhZ2U6IG5vZGVfanMKZGlzdDogdHJ1c3R5CmFkZG9uczoKICBhcHQ6
CiAgICBwYWNrYWdlczoKICAgICAgIyBUaGlzIGlzIHJlcXVpcmVkIHRvIHJ1
biBuZXcgY2hyb21lIG9uIG9sZCB0cnVzdHkKICAgICAgLSBsaWJuc3MzCm5v
dGlmaWNhdGlvbnM6CiAgZW1haWw6IGZhbHNlCmNhY2hlOgogIGRpcmVjdG9y
aWVzOgogICAgLSBub2RlX21vZHVsZXMKIyBhbGxvdyBoZWFkZnVsIHRlc3Rz
CmJlZm9yZV9pbnN0YWxsOgogIC0gInN5c2N0bCBrZXJuZWwudW5wcml2aWxl
Z2VkX3VzZXJuc19jbG9uZT0xIgogIC0gImV4cG9ydCBESVNQTEFZPTo5OS4w
IgogIC0gInNoIC1lIC9ldGMvaW5pdC5kL3h2ZmIgc3RhcnQiCnNjcmlwdDoK
ICAtICdpZiBbICIkTk9ERTgiID0gInRydWUiIF07IHRoZW4gbnBtIHJ1biBs
aW50OyBmaScKICAtICdpZiBbICIkTk9ERTgiID0gInRydWUiIF07IHRoZW4g
bnBtIHJ1biBjb3ZlcmFnZTsgZmknCiAgLSAnaWYgWyAiJEZJUkVGT1giID0g
InRydWUiIF07IHRoZW4gY2QgZXhwZXJpbWVudGFsL3B1cHBldGVlci1maXJl
Zm94ICYmIG5wbSBpICYmIGNkIC4uLy4uOyBmaScKICAtICdpZiBbICIkRklS
RUZPWCIgPSAidHJ1ZSIgXTsgdGhlbiBucG0gcnVuIGZqdW5pdDsgZmknCiAg
LSAnaWYgWyAiJE5PREU4IiA9ICJ0cnVlIiBdOyB0aGVuIG5wbSBydW4gdGVz
dC1kb2NsaW50OyBmaScKICAtICdpZiBbICIkTk9ERTgiID0gInRydWUiIF07
IHRoZW4gbnBtIHJ1biB0ZXN0LXR5cGVzOyBmaScKICAtICdpZiBbICIkTk9E
RTgiID0gInRydWUiIF07IHRoZW4gbnBtIHJ1biBidW5kbGU7IGZpJwogIC0g
J2lmIFsgIiROT0RFOCIgPSAidHJ1ZSIgXTsgdGhlbiBucG0gcnVuIHVuaXQt
YnVuZGxlOyBmaScKam9iczoKICBpbmNsdWRlOgogICAgLSBub2RlX2pzOiAi
OC4xNi4wIgogICAgICBlbnY6CiAgICAgICAgLSBOT0RFOD10cnVlCiAgICAg
ICAgLSBGTEFLSU5FU1NfREFTSEJPQVJEX05BTUU9IlRyYXZpcyBDaHJvbWl1
bSAobm9kZTggKyBsaW51eCkiCiAgICAgICAgLSBGTEFLSU5FU1NfREFTSEJP
QVJEX0JVSUxEX1VSTD0iJHtUUkFWSVNfSk9CX1dFQl9VUkx9IgogICAgLSBu
b2RlX2pzOiAiOC4xNi4wIgogICAgICBlbnY6CiAgICAgICAgLSBGSVJFRk9Y
PXRydWUKICAgICAgICAtIEZMQUtJTkVTU19EQVNIQk9BUkRfTkFNRT0iVHJh
dmlzIEZpcmVmb3ggKG5vZGU4ICsgbGludXgpIgogICAgICAgIC0gRkxBS0lO
RVNTX0RBU0hCT0FSRF9CVUlMRF9VUkw9IiR7VFJBVklTX0pPQl9XRUJfVVJM
fSIKYmVmb3JlX2RlcGxveTogIm5wbSBydW4gYXBwbHktbmV4dC12ZXJzaW9u
IgpkZXBsb3k6CiAgcHJvdmlkZXI6IG5wbQogIGVtYWlsOiBhc2x1c2huaWtv
dkBnbWFpbC5jb20KICBhcGlfa2V5OgogICAgc2VjdXJlOiBOZzhvMkt3SmY5
MFhDQk5nVUtLM2pSWm53dGRCU0phdGpZTm1aQkVSSkVxQldGVGFkRkFwMU5k
aHhaYXFqbnVHOGFGWWFINWJSSmRMK0VRQllVa3NWQ2Jydi9nY2FYZUVGa3dz
ZlBmVlgxUVhHcXU3Tm5abXRtZTJoYnhwcExRN2RFSjhoejJaOUs0dmVocVZP
eG1MYWJ4dm91cE91bXhFUU1MQ3BoVkhoMkZPbXNtL1M1SnJSWnFaNFY5azc2
ZUljMC9QaXlmWE5NZHg1V1RaakhiSVJESUhSeTlucU9YakZwMlJ4M1BNYTN1
VTJmUzhtVHNoWUVZczE1MVRBNmU2VmRIanFtQndFUUMvTTV0WGJEbExDTU5V
cjRKQnRMVGNMNE9pcE5Zanprd0QxTjJ4WWxiU1JxdHZxcUY0aWZkdkZob0k2
NWEzMUdpbmxNQzdaL1NIMVp5K2QrL3ozTW83RDYzZVljc0pWbnNnOU9ZeFRG
eTJwaVVudHIwSnFUQkh0UW9lL0N2R3hKbWtjVnQrSDZZU2tjQmliU0c5czl0
RzNxcEFENXdCQ0ZxcU9ZbmZDbFgrWVp6aUVkK0huZ2Q5aW54QWY4N3FkdmdW
SVo1dFBEMmR5Z3RFK3RlMi9xb0VIdHZjY3YvSHVTOE14Tmo1aUt3bFA3SmFC
UE02dUFrYXpZcVpQMlI5OUkycGg5Z05PRVZ1UUx0ayszK09JZGI4SFdyRUtV
ckpCZ0toZEtZMWR2Y0tZRWxJK0Q4TlJseXpycjZCblpmdWRBQ3VBdDJFdGZL
cGZKM21MK2lSTUZkQkozbnRMdDkzeEJyQitqNHozcEQwaVdaY2cxZzNJNzQy
UEZ6UUVIenlkL0REVFAxeVJUVW9KZVFXd29RUkp5Tk8xbTZRazR3eDc3Yz0K
ICBvbjoKICAgIGJyYW5jaDogbWFzdGVyCiAgICBjb25kaXRpb246ICIkTk9E
RTggPSB0cnVlIgogIHNraXBfY2xlYW51cDogdHJ1ZQogIHRhZzogbmV4dAo=
","ZW52OgogIERJU1BMQVk6IDo5OS4wCiAgRkxBS0lORVNTX0RBU0hCT0FSRF9Q
QVNTV09SRDogRU5DUllQVEVEW2IzZTIwN2RiNWQxNTNiNTQzZjIxOWQzYzNi
OTEyM2Q4MzIxODM0Yjc4M2I5ZTQ1YWM3ZDM4MGUwMjZhYjNhNTYzOThiZGU1
MWI1MjFhYzU4NTllN2U0NWNiOTVkMDk5Ml0KICBGTEFLSU5FU1NfREFTSEJP
QVJEX05BTUU6IENpcnJ1cyAke0NJUlJVU19UQVNLX05BTUV9CiAgRkxBS0lO
RVNTX0RBU0hCT0FSRF9CVUlMRF9VUkw6IGh0dHBzOi8vY2lycnVzLWNpLmNv
bS90YXNrLyR7Q0lSUlVTX1RBU0tfSUR9Cgp0YXNrOgogIG1hdHJpeDoKICAg
IC0gbmFtZTogQ2hyb21pdW0gKG5vZGU4ICsgbGludXgpCiAgICAgIGNvbnRh
aW5lcjoKICAgICAgICBkb2NrZXJmaWxlOiAuY2kvbm9kZTgvRG9ja2VyZmls
ZS5saW51eAogICAgLSBuYW1lOiBDaHJvbWl1bSAobm9kZTEwICsgbGludXgp
CiAgICAgIGNvbnRhaW5lcjoKICAgICAgICBkb2NrZXJmaWxlOiAuY2kvbm9k
ZTEwL0RvY2tlcmZpbGUubGludXgKICAgIC0gbmFtZTogQ2hyb21pdW0gKG5v
ZGUxMiArIGxpbnV4KQogICAgICBjb250YWluZXI6CiAgICAgICAgZG9ja2Vy
ZmlsZTogLmNpL25vZGUxMi9Eb2NrZXJmaWxlLmxpbnV4CiAgeHZmYl9zdGFy
dF9iYWNrZ3JvdW5kX3NjcmlwdDogWHZmYiA6OTkgLWFjIC1zY3JlZW4gMCAx
MDI0eDc2OHgyNAogIGluc3RhbGxfc2NyaXB0OiBucG0gaW5zdGFsbCAtLXVu
c2FmZS1wZXJtCiAgbGludF9zY3JpcHQ6IG5wbSBydW4gbGludAogIGNvdmVy
YWdlX3NjcmlwdDogbnBtIHJ1biBjb3ZlcmFnZQogIHRlc3RfZG9jbGludF9z
Y3JpcHQ6IG5wbSBydW4gdGVzdC1kb2NsaW50CiAgdGVzdF90eXBlc19zY3Jp
cHQ6IG5wbSBydW4gdGVzdC10eXBlcwoKdGFzazoKICBtYXRyaXg6CiAgICAt
IG5hbWU6IEZpcmVmb3ggSnVnZ2xlciAobm9kZTggKyBsaW51eCkKICAgICAg
Y29udGFpbmVyOgogICAgICAgIGRvY2tlcmZpbGU6IC5jaS9ub2RlOC9Eb2Nr
ZXJmaWxlLmxpbnV4CiAgICAgIHh2ZmJfc3RhcnRfYmFja2dyb3VuZF9zY3Jp
cHQ6IFh2ZmIgOjk5IC1hYyAtc2NyZWVuIDAgMTAyNHg3Njh4MjQKICBpbnN0
YWxsX3NjcmlwdDogbnBtIGluc3RhbGwgLS11bnNhZmUtcGVybSAmJiBjZCBl
eHBlcmltZW50YWwvcHVwcGV0ZWVyLWZpcmVmb3ggJiYgbnBtIGluc3RhbGwg
LS11bnNhZmUtcGVybQogIHRlc3Rfc2NyaXB0OiBucG0gcnVuIGZqdW5pdAoK
dGFzazoKICBvc3hfaW5zdGFuY2U6CiAgICBpbWFnZTogaGlnaC1zaWVycmEt
YmFzZQogIG5hbWU6IENocm9taXVtIChub2RlOCArIG1hY09TKQogIGVudjoK
ICAgIEhPTUVCUkVXX05PX0FVVE9fVVBEQVRFOiAxCiAgbm9kZV9pbnN0YWxs
X3NjcmlwdDoKICAgIC0gYnJldyBpbnN0YWxsIG5vZGVAOAogICAgLSBicmV3
IGxpbmsgLS1mb3JjZSBub2RlQDgKICBpbnN0YWxsX3NjcmlwdDogbnBtIGlu
c3RhbGwgLS11bnNhZmUtcGVybQogIGxpbnRfc2NyaXB0OiBucG0gcnVuIGxp
bnQKICBjb3ZlcmFnZV9zY3JpcHQ6IG5wbSBydW4gY292ZXJhZ2UKICB0ZXN0
X2RvY2xpbnRfc2NyaXB0OiBucG0gcnVuIHRlc3QtZG9jbGludAogIHRlc3Rf
dHlwZXNfc2NyaXB0OiBucG0gcnVuIHRlc3QtdHlwZXMK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
