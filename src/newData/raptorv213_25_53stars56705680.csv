name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'comparator',14127912,b'Provides the functionality to compare PHP values for equality.',b'PHP',7,5685,,7,False,b'https://api.github.com/repos/sebastianbergmann/comparator/forks',"WyFbQnVpbGQgU3RhdHVzXShodHRwczovL3RyYXZpcy1jaS5vcmcvc2ViYXN0
aWFuYmVyZ21hbm4vY29tcGFyYXRvci5zdmc/YnJhbmNoPW1hc3RlcildKGh0
dHBzOi8vdHJhdmlzLWNpLm9yZy9zZWJhc3RpYW5iZXJnbWFubi9jb21wYXJh
dG9yKQoKIyBDb21wYXJhdG9yCgpUaGlzIGNvbXBvbmVudCBwcm92aWRlcyB0
aGUgZnVuY3Rpb25hbGl0eSB0byBjb21wYXJlIFBIUCB2YWx1ZXMgZm9yIGVx
dWFsaXR5LgoKIyMgSW5zdGFsbGF0aW9uCgpZb3UgY2FuIGFkZCB0aGlzIGxp
YnJhcnkgYXMgYSBsb2NhbCwgcGVyLXByb2plY3QgZGVwZW5kZW5jeSB0byB5
b3VyIHByb2plY3QgdXNpbmcgW0NvbXBvc2VyXShodHRwczovL2dldGNvbXBv
c2VyLm9yZy8pOgoKICAgIGNvbXBvc2VyIHJlcXVpcmUgc2ViYXN0aWFuL2Nv
bXBhcmF0b3IKCklmIHlvdSBvbmx5IG5lZWQgdGhpcyBsaWJyYXJ5IGR1cmlu
ZyBkZXZlbG9wbWVudCwgZm9yIGluc3RhbmNlIHRvIHJ1biB5b3VyIHByb2pl
Y3QncyB0ZXN0IHN1aXRlLCB0aGVuIHlvdSBzaG91bGQgYWRkIGl0IGFzIGEg
ZGV2ZWxvcG1lbnQtdGltZSBkZXBlbmRlbmN5OgoKICAgIGNvbXBvc2VyIHJl
cXVpcmUgLS1kZXYgc2ViYXN0aWFuL2NvbXBhcmF0b3IKCiMjIFVzYWdlCgpg
YGBwaHAKPD9waHAKdXNlIFNlYmFzdGlhbkJlcmdtYW5uXENvbXBhcmF0b3Jc
RmFjdG9yeTsKdXNlIFNlYmFzdGlhbkJlcmdtYW5uXENvbXBhcmF0b3JcQ29t
cGFyaXNvbkZhaWx1cmU7CgokZGF0ZTEgPSBuZXcgRGF0ZVRpbWUoJzIwMTMt
MDMtMjkgMDQ6MTM6MzUnLCBuZXcgRGF0ZVRpbWVab25lKCdBbWVyaWNhL05l
d19Zb3JrJykpOwokZGF0ZTIgPSBuZXcgRGF0ZVRpbWUoJzIwMTMtMDMtMjkg
MDM6MTM6MzUnLCBuZXcgRGF0ZVRpbWVab25lKCdBbWVyaWNhL0NoaWNhZ28n
KSk7CgokZmFjdG9yeSA9IG5ldyBGYWN0b3J5OwokY29tcGFyYXRvciA9ICRm
YWN0b3J5LT5nZXRDb21wYXJhdG9yRm9yKCRkYXRlMSwgJGRhdGUyKTsKCnRy
eSB7CiAgICAkY29tcGFyYXRvci0+YXNzZXJ0RXF1YWxzKCRkYXRlMSwgJGRh
dGUyKTsKICAgIHByaW50ICJEYXRlcyBtYXRjaCI7Cn0gY2F0Y2ggKENvbXBh
cmlzb25GYWlsdXJlICRmYWlsdXJlKSB7CiAgICBwcmludCAiRGF0ZXMgZG9u
J3QgbWF0Y2giOwp9CmBgYAoK
",,5685,"bGFuZ3VhZ2U6IHBocAoKcGhwOgogIC0gNy4xCiAgLSA3LjIKICAtIDcuMwog
IC0gNy40c25hcHNob3QKCmVudjoKICBtYXRyaXg6CiAgICAtIERFUEVOREVO
Q0lFUz0iaGlnaCIKICAgIC0gREVQRU5ERU5DSUVTPSJsb3ciCiAgZ2xvYmFs
OgogICAgLSBERUZBVUxUX0NPTVBPU0VSX0ZMQUdTPSItLW5vLWludGVyYWN0
aW9uIC0tbm8tYW5zaSAtLW5vLXByb2dyZXNzIC0tbm8tc3VnZ2VzdCIKCmJl
Zm9yZV9pbnN0YWxsOgogIC0gY29tcG9zZXIgc2VsZi11cGRhdGUKICAtIGNv
bXBvc2VyIGNsZWFyLWNhY2hlCgppbnN0YWxsOgogIC0gaWYgW1sgIiRERVBF
TkRFTkNJRVMiID0gJ2hpZ2gnIF1dOyB0aGVuIHRyYXZpc19yZXRyeSBjb21w
b3NlciB1cGRhdGUgJERFRkFVTFRfQ09NUE9TRVJfRkxBR1M7IGZpCiAgLSBp
ZiBbWyAiJERFUEVOREVOQ0lFUyIgPSAnbG93JyBdXTsgdGhlbiB0cmF2aXNf
cmV0cnkgY29tcG9zZXIgdXBkYXRlICRERUZBVUxUX0NPTVBPU0VSX0ZMQUdT
IC0tcHJlZmVyLWxvd2VzdDsgZmkKCnNjcmlwdDoKICAtIC4vdmVuZG9yL2Jp
bi9waHB1bml0IC0tY292ZXJhZ2UtY2xvdmVyPWNvdmVyYWdlLnhtbAoKYWZ0
ZXJfc3VjY2VzczoKICAtIGJhc2ggPChjdXJsIC1zIGh0dHBzOi8vY29kZWNv
di5pby9iYXNoKQoKbm90aWZpY2F0aW9uczoKICBlbWFpbDogZmFsc2UKCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'jjwt',23982180,b'Java JWT: JSON Web Token for Java and Android',b'Java',49,5678,,271,False,b'https://api.github.com/repos/jwtk/jjwt/forks',"WyFbQnVpbGQgU3RhdHVzXShodHRwczovL3RyYXZpcy1jaS5vcmcvand0ay9q
and0LnN2Zz9icmFuY2g9bWFzdGVyKV0oaHR0cHM6Ly90cmF2aXMtY2kub3Jn
L2p3dGsvamp3dCkKWyFbQ292ZXJhZ2UgU3RhdHVzXShodHRwczovL2NvdmVy
YWxscy5pby9yZXBvcy9naXRodWIvand0ay9qand0L2JhZGdlLnN2Zz9icmFu
Y2g9bWFzdGVyKV0oaHR0cHM6Ly9jb3ZlcmFsbHMuaW8vZ2l0aHViL2p3dGsv
amp3dD9icmFuY2g9bWFzdGVyKQpbIVtHaXR0ZXJdKGh0dHBzOi8vYmFkZ2Vz
LmdpdHRlci5pbS9qd3RrL2pqd3Quc3ZnKV0oaHR0cHM6Ly9naXR0ZXIuaW0v
and0ay9qand0P3V0bV9zb3VyY2U9YmFkZ2UmdXRtX21lZGl1bT1iYWRnZSZ1
dG1fY2FtcGFpZ249cHItYmFkZ2UpCgojIyBKYXZhIEpXVDogSlNPTiBXZWIg
VG9rZW4gZm9yIEphdmEgYW5kIEFuZHJvaWQKCkpKV1QgYWltcyB0byBiZSB0
aGUgZWFzaWVzdCB0byB1c2UgYW5kIHVuZGVyc3RhbmQgbGlicmFyeSBmb3Ig
Y3JlYXRpbmcgYW5kIHZlcmlmeWluZyBKU09OIFdlYiBUb2tlbnMgKEpXVHMp
IG9uIHRoZSBKVk0KYW5kIEFuZHJvaWQuCgpKSldUIGlzIGEgcHVyZSBKYXZh
IGltcGxlbWVudGF0aW9uIGJhc2VkIApleGNsdXNpdmVseSBvbiB0aGUgW0pX
VF0oaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzc1MTkpLCAKW0pX
U10oaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzc1MTUpLCBbSldF
XShodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNzUxNiksIApbSldL
XShodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNzUxNykgYW5kIFtK
V0FdKGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM3NTE4KSBSRkMg
c3BlY2lmaWNhdGlvbnMgYW5kIApvcGVuIHNvdXJjZSB1bmRlciB0aGUgdGVy
bXMgb2YgdGhlIFtBcGFjaGUgMi4wIExpY2Vuc2VdKGh0dHA6Ly93d3cuYXBh
Y2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMCkuCgpUaGUgbGlicmFyeSB3
YXMgY3JlYXRlZCBieSBbT2t0YSdzXShodHRwOi8vd3d3Lm9rdGEuY29tKSBT
ZW5pb3IgQXJjaGl0ZWN0LCBbTGVzIEhhemxld29vZF0oaHR0cHM6Ly9naXRo
dWIuY29tL2xoYXpsZXdvb2QpCmFuZCBpcyBzdXBwb3J0ZWQgYW5kIG1haW50
YWluZWQgYnkgYSBbY29tbXVuaXR5XShodHRwczovL2dpdGh1Yi5jb20vand0
ay9qand0L2dyYXBocy9jb250cmlidXRvcnMpIG9mIGNvbnRyaWJ1dG9ycy4K
CltPa3RhXShodHRwczovL2RldmVsb3Blci5va3RhLmNvbS8pIGlzIGEgY29t
cGxldGUgYXV0aGVudGljYXRpb24gYW5kIHVzZXIgbWFuYWdlbWVudCBBUEkg
Zm9yIGRldmVsb3BlcnMuCgpXZSd2ZSBhbHNvIGFkZGVkIHNvbWUgY29udmVu
aWVuY2UgZXh0ZW5zaW9ucyB0aGF0IGFyZSBub3QgcGFydCBvZiB0aGUgc3Bl
Y2lmaWNhdGlvbiwgc3VjaCBhcyBKV1MgY29tcHJlc3Npb24gYW5kIGNsYWlt
IAplbmZvcmNlbWVudC4KCiMjIFRhYmxlIG9mIENvbnRlbnRzCgoqIFtGZWF0
dXJlc10oI2ZlYXR1cmVzKQogICogW0N1cnJlbnRseSBVbnN1cHBvcnRlZCBG
ZWF0dXJlc10oI2ZlYXR1cmVzLXVuc3VwcG9ydGVkKQoqIFtDb21tdW5pdHld
KCNjb21tdW5pdHkpCiAgKiBbR2V0dGluZyBIZWxwXSgjaGVscCkKICAgICog
W1F1ZXN0aW9uc10oI2hlbHAtcXVlc3Rpb25zKQogICAgKiBbQnVncyBhbmQg
RmVhdHVyZSBSZXF1ZXN0c10oI2hlbHAtaXNzdWVzKQogICogW0NvbnRyaWJ1
dGluZ10oI2NvbnRyaWJ1dGluZykKICAgICogW1B1bGwgUmVxdWVzdHNdKCNj
b250cmlidXRpbmctcHVsbC1yZXF1ZXN0cykKICAgICogW0hlbHAgV2FudGVk
XSgjY29udHJpYnV0aW5nLWhlbHAtd2FudGVkKQoqIFtXaGF0IGlzIGEgSlNP
TiBXZWIgVG9rZW4/XSgjb3ZlcnZpZXcpCiogW0luc3RhbGxhdGlvbl0oI2lu
c3RhbGwpCiAgKiBbSkRLIFByb2plY3RzXSgjaW5zdGFsbC1qZGspCiAgICAq
IFtNYXZlbl0oI2luc3RhbGwtamRrLW1hdmVuKQogICAgKiBbR3JhZGxlXSgj
aW5zdGFsbC1qZGstZ3JhZGxlKQogICogW0FuZHJvaWQgUHJvamVjdHNdKCNp
bnN0YWxsLWFuZHJvaWQpCiAgICAqIFtEZXBlbmRlbmNpZXNdKCNpbnN0YWxs
LWFuZHJvaWQtZGVwZW5kZW5jaWVzKQogICAgKiBbUHJvZ3VhcmQgRXhjbHVz
aW9uc10oI2luc3RhbGwtYW5kcm9pZC1wcm9ndWFyZCkKICAqIFtVbmRlcnN0
YW5kaW5nIEpKV1QgRGVwZW5kZW5jaWVzXSgjaW5zdGFsbC11bmRlcnN0YW5k
aW5nZGVwZW5kZW5jaWVzKQoqIFtRdWlja3N0YXJ0XSgjcXVpY2tzdGFydCkK
KiBbU2lnbmVkIEpXVHNdKCNqd3MpCiAgKiBbU2lnbmF0dXJlIEFsZ29yaXRo
bSBLZXlzXSgjandzLWtleSkKICAgICogW0hNQUMtU0hBXSgjandzLWtleS1o
bWFjc2hhKQogICAgKiBbUlNBXSgjandzLWtleS1yc2EpCiAgICAqIFtFbGxp
cHRpYyBDdXJ2ZV0oI2p3cy1rZXktZWNkc2EpCiAgICAqIFtDcmVhdGluZyBT
YWZlIEtleXNdKCNqd3Mta2V5LWNyZWF0ZSkKICAgICAgKiBbU2VjcmV0IEtl
eXNdKCNqd3Mta2V5LWNyZWF0ZS1zZWNyZXQpCiAgICAgICogW0FzeW1ldHJp
YyBLZXlzXSgjandzLWtleS1jcmVhdGUtYXN5bSkKICAqIFtDcmVhdGUgYSBK
V1NdKCNqd3MtY3JlYXRlKQogICAgKiBbSGVhZGVyXSgjandzLWNyZWF0ZS1o
ZWFkZXIpCiAgICAgICogW0luc3RhbmNlXSgjandzLWNyZWF0ZS1oZWFkZXIt
aW5zdGFuY2UpCiAgICAgICogW01hcF0oI2p3cy1jcmVhdGUtaGVhZGVyLW1h
cCkKICAgICogW0NsYWltc10oI2p3cy1jcmVhdGUtY2xhaW1zKQogICAgICAq
IFtTdGFuZGFyZCBDbGFpbXNdKCNqd3MtY3JlYXRlLWNsYWltcy1zdGFuZGFy
ZCkKICAgICAgKiBbQ3VzdG9tIENsYWltc10oI2p3cy1jcmVhdGUtY2xhaW1z
LWN1c3RvbSkKICAgICAgKiBbQ2xhaW1zIEluc3RhbmNlXSgjandzLWNyZWF0
ZS1jbGFpbXMtaW5zdGFuY2UpCiAgICAgICogW0NsYWltcyBNYXBdKCNqd3Mt
Y3JlYXRlLWNsYWltcy1tYXApCiAgICAqIFtTaWduaW5nIEtleV0oI2p3cy1j
cmVhdGUta2V5KQogICAgICAqIFtTaWduYXR1cmUgQWxnb3JpdGhtIE92ZXJy
aWRlXSgjandzLWNyZWF0ZS1rZXktYWxnb3ZlcnJpZGUpCiAgICAqIFtDb21w
cmVzc2lvbl0oI2p3cy1jcmVhdGUtY29tcHJlc3Npb24pCiAgKiBbUmVhZCBh
IEpXU10oI2p3cy1yZWFkKQogICAgKiBbVmVyaWZpY2F0aW9uIEtleV0oI2p3
cy1yZWFkLWtleSkKICAgICAgKiBbRmluZCB0aGUgVmVyaWZpY2F0aW9uIEtl
eSBhdCBSdW50aW1lXSgjandzLXJlYWQta2V5LXJlc29sdmVyKQogICAgKiBb
Q2xhaW1zIEFzc2VydGlvbnNdKCNqd3MtcmVhZC1jbGFpbXMpCiAgICAqIFtB
Y2NvdW50aW5nIGZvciBDbG9jayBTa2V3XSgjandzLXJlYWQtY2xvY2spCiAg
ICAgICogW0N1c3RvbSBDbG9ja10oI2p3cy1yZWFkLWNsb2NrLWN1c3RvbSkK
ICAgICogW0RlY29tcHJlc3Npb25dKCNqd3MtcmVhZC1kZWNvbXByZXNzaW9u
KQogICAgPCEtLSAqIFtFcnJvciBIYW5kbGluZ10oI2p3cy1yZWFkLWVycm9y
cykgLS0+CiogW0NvbXByZXNzaW9uXSgjY29tcHJlc3Npb24pCiAgKiBbQ3Vz
dG9tIENvbXByZXNzaW9uIENvZGVjXSgjY29tcHJlc3Npb24tY3VzdG9tKQoq
IFtKU09OIFByb2Nlc3Nvcl0oI2pzb24pCiAgKiBbQ3VzdG9tIEpTT04gUHJv
Y2Vzc29yXSgjanNvbi1jdXN0b20pCiAgKiBbSmFja3NvbiBPYmplY3RNYXBw
ZXJdKCNqc29uLWphY2tzb24pCiogW0Jhc2U2NCBDb2RlY10oI2Jhc2U2NCkK
ICAqIFtDdXN0b20gQmFzZTY0IENvZGVjXSgjYmFzZTY0LWN1c3RvbSkKCjxh
IG5hbWU9ImZlYXR1cmVzIj48L2E+CiMjIEZlYXR1cmVzCgogKiBGdWxseSBm
dW5jdGlvbmFsIG9uIGFsbCBKREtzIGFuZCBBbmRyb2lkCiAqIEF1dG9tYXRp
YyBzZWN1cml0eSBiZXN0IHByYWN0aWNlcyBhbmQgYXNzZXJ0aW9ucwogKiBF
YXN5IHRvIGxlYXJuIGFuZCByZWFkIEFQSQogKiBDb252ZW5pZW50IGFuZCBy
ZWFkYWJsZSBbZmx1ZW50XShodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtp
L0ZsdWVudF9pbnRlcmZhY2UpIGludGVyZmFjZXMsIGdyZWF0IGZvciBJREUg
YXV0by1jb21wbGV0aW9uIHRvIHdyaXRlIGNvZGUgcXVpY2tseQogKiBGdWxs
eSBSRkMgc3BlY2lmaWNhdGlvbiBjb21wbGlhbnQgb24gYWxsIGltcGxlbWVu
dGVkIGZ1bmN0aW9uYWxpdHksIHRlc3RlZCBhZ2FpbnN0IFJGQy1zcGVjaWZp
ZWQgdGVzdCB2ZWN0b3JzCiAqIFN0YWJsZSBpbXBsZW1lbnRhdGlvbiB3aXRo
IGVuZm9yY2VkIDEwMCUgdGVzdCBjb2RlIGNvdmVyYWdlLiAgTGl0ZXJhbGx5
IGV2ZXJ5IHNpbmdsZSBtZXRob2QsIHN0YXRlbWVudCBhbmQgCiAgIGNvbmRp
dGlvbmFsIGJyYW5jaCB2YXJpYW50IGluIHRoZSBlbnRpcmUgY29kZWJhc2Ug
aXMgdGVzdGVkIGFuZCByZXF1aXJlZCB0byBwYXNzIG9uIGV2ZXJ5IGJ1aWxk
LgogKiBDcmVhdGluZywgcGFyc2luZyBhbmQgdmVyaWZ5aW5nIGRpZ2l0YWxs
eSBzaWduZWQgY29tcGFjdCBKV1RzIChha2EgSldTcykgd2l0aCBhbGwgc3Rh
bmRhcmQgSldTIGFsZ29yaXRobXM6CiAgICAqIEhTMjU2OiBITUFDIHVzaW5n
IFNIQS0yNTYKICAgICogSFMzODQ6IEhNQUMgdXNpbmcgU0hBLTM4NAogICAg
KiBIUzUxMjogSE1BQyB1c2luZyBTSEEtNTEyCiAgICAqIEVTMjU2OiBFQ0RT
QSB1c2luZyBQLTI1NiBhbmQgU0hBLTI1NgogICAgKiBFUzM4NDogRUNEU0Eg
dXNpbmcgUC0zODQgYW5kIFNIQS0zODQKICAgICogRVM1MTI6IEVDRFNBIHVz
aW5nIFAtNTIxIGFuZCBTSEEtNTEyCiAgICAqIFJTMjU2OiBSU0FTU0EtUEtD
Uy12MV81IHVzaW5nIFNIQS0yNTYKICAgICogUlMzODQ6IFJTQVNTQS1QS0NT
LXYxXzUgdXNpbmcgU0hBLTM4NAogICAgKiBSUzUxMjogUlNBU1NBLVBLQ1Mt
djFfNSB1c2luZyBTSEEtNTEyCiAgICAqIFBTMjU2OiBSU0FTU0EtUFNTIHVz
aW5nIFNIQS0yNTYgYW5kIE1HRjEgd2l0aCBTSEEtMjU2PHN1cD4xPC9zdXA+
CiAgICAqIFBTMzg0OiBSU0FTU0EtUFNTIHVzaW5nIFNIQS0zODQgYW5kIE1H
RjEgd2l0aCBTSEEtMzg0PHN1cD4xPC9zdXA+CiAgICAqIFBTNTEyOiBSU0FT
U0EtUFNTIHVzaW5nIFNIQS01MTIgYW5kIE1HRjEgd2l0aCBTSEEtNTEyPHN1
cD4xPC9zdXA+CiAgICAKICAgICA8c3VwPjEuIFJlcXVpcmVzIEpESyAxMSBv
ciBhIGNvbXBhdGlibGUgSkNBIFByb3ZpZGVyIChsaWtlIEJvdW5jeUNhc3Rs
ZSkgaW4gdGhlIHJ1bnRpbWUgY2xhc3NwYXRoLjwvc3VwPgogKiBDb252ZW5p
ZW5jZSBlbmhhbmNlbWVudHMgYmV5b25kIHRoZSBzcGVjaWZpY2F0aW9uIHN1
Y2ggYXMKICAgICogQm9keSBjb21wcmVzc2lvbiBmb3IgYW55IGxhcmdlIEpX
VCwgbm90IGp1c3QgSldFcwogICAgKiBDbGFpbXMgYXNzZXJ0aW9ucyAocmVx
dWlyaW5nIHNwZWNpZmljIHZhbHVlcykKICAgICogQ2xhaW0gUE9KTyBtYXJz
aGFsaW5nIGFuZCB1bm1hcnNoYWxpbmcgd2hlbiB1c2luZyBhIGNvbXBhdGli
bGUgSlNPTiBwYXJzZXIgKGUuZy4gSmFja3NvbikgCiAgICAqIFNlY3VyZSBL
ZXkgZ2VuZXJhdGlvbiBiYXNlZCBvbiBkZXNpcmVkIEpXQSBhbGdvcml0aG1z
CiAgICAqIGFuZCBtb3JlLi4uCiAgICAKPGEgbmFtZT0iZmVhdHVyZXMtdW5z
dXBwb3J0ZWQiPjwvYT4KIyMjIEN1cnJlbnRseSBVbnN1cHBvcnRlZCBGZWF0
dXJlcwoKKiBbTm9uLWNvbXBhY3RdKGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcv
aHRtbC9yZmM3NTE1I3NlY3Rpb24tNy4yKSBzZXJpYWxpemF0aW9uIGFuZCBw
YXJzaW5nLgoqIEpXRSAoRW5jcnlwdGlvbiBmb3IgSldUKQoKVGhlc2UgZmVh
dHVyZXMgd2lsbCBiZSBpbXBsZW1lbnRlZCBpbiBhIGZ1dHVyZSByZWxlYXNl
LiAgQ29tbXVuaXR5IGNvbnRyaWJ1dGlvbnMgYXJlIHdlbGNvbWUhCgo8YSBu
YW1lPSJjb21tdW5pdHkiPjwvYT4KIyMgQ29tbXVuaXR5Cgo8YSBuYW1lPSJo
ZWxwIj48L2E+CiMjIyBHZXR0aW5nIEhlbHAKCklmIHlvdSBoYXZlIHRyb3Vi
bGUgdXNpbmcgSkpXVCwgcGxlYXNlIGZpcnN0IHJlYWQgdGhlIGRvY3VtZW50
YXRpb24gb24gdGhpcyBwYWdlIGJlZm9yZSBhc2tpbmcgcXVlc3Rpb25zLiAg
V2UgdHJ5IAp2ZXJ5IGhhcmQgdG8gZW5zdXJlIEpKV1QncyBkb2N1bWVudGF0
aW9uIGlzIHJvYnVzdCwgY2F0ZWdvcml6ZWQgd2l0aCBhIHRhYmxlIG9mIGNv
bnRlbnRzLCBhbmQgdXAgdG8gZGF0ZSBmb3IgZWFjaCByZWxlYXNlLgoKPGEg
bmFtZT0iaGVscC1xdWVzdGlvbnMiPjwvYT4KIyMjIyBRdWVzdGlvbnMKCklm
IHRoZSBkb2N1bWVudGF0aW9uIG9yIHRoZSBBUEkgSmF2YURvYyBpc24ndCBz
dWZmaWNpZW50LCBhbmQgeW91IGVpdGhlciBoYXZlIHVzYWJpbGl0eSBxdWVz
dGlvbnMgb3IgYXJlIGNvbmZ1c2VkCmFib3V0IHNvbWV0aGluZywgcGxlYXNl
IFthc2sgeW91ciBxdWVzdGlvbiBoZXJlXShodHRwczovL3N0YWNrb3ZlcmZs
b3cuY29tL3F1ZXN0aW9ucy9hc2s/dGFncz1qand0Jmd1aWRlZD1mYWxzZSku
CgpBZnRlciBhc2tpbmcgeW91ciBxdWVzdGlvbiwgeW91IG1heSB3aXNoIHRv
IGpvaW4gb3VyIFtTbGFja10oaHR0cHM6Ly9qd3RrLnNsYWNrLmNvbS9tZXNz
YWdlcy9DQk5BQ1ROM0EpIG9yCltHaXR0cl0oaHR0cHM6Ly9naXR0ZXIuaW0v
and0ay9qand0KSBjaGF0IHJvb21zLCBidXQgbm90ZSB0aGF0IHRoZXkgbWF5
IG5vdCBhbHdheXMgYmUgYXR0ZW5kZWQuIFlvdSB3aWxsIHVzdWFsbHkKaGF2
ZSBhIGJldHRlciBjaGFuY2Ugb2YgaGF2aW5nIHlvdXIgcXVlc3Rpb24gYW5z
d2VyZWQgYnkgClthc2tpbmcgeW91ciBxdWVzdGlvbiBoZXJlXShodHRwczov
L3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy9hc2s/dGFncz1qand0Jmd1
aWRlZD1mYWxzZSkuCiAgIApJZiB5b3UgYmVsaWV2ZSB5b3UgaGF2ZSBmb3Vu
ZCBhIGJ1ZyBvciB3b3VsZCBsaWtlIHRvIHN1Z2dlc3QgYSBmZWF0dXJlIGVu
aGFuY2VtZW50LCBwbGVhc2UgY3JlYXRlIGEgbmV3IEdpdEh1YiBpc3N1ZSwg
Cmhvd2V2ZXI6CgoqKlBsZWFzZSBkbyBub3QgY3JlYXRlIGEgR2l0SHViIGlz
c3VlIHRvIGFzayBhIHF1ZXN0aW9uLioqICAKCldlIHVzZSBHaXRIdWIgSXNz
dWVzIHRvIHRyYWNrIGFjdGlvbmFibGUgd29yayB0aGF0IHJlcXVpcmVzIGNo
YW5nZXMgdG8gSkpXVCdzIGRlc2lnbiBhbmQvb3IgY29kZWJhc2UuICBJZiB5
b3UgaGF2ZSBhIAp1c2FiaWxpdHkgcXVlc3Rpb24sIGluc3RlYWQgcGxlYXNl
IApbYXNrIHlvdXIgcXVlc3Rpb24gaGVyZV0oaHR0cHM6Ly9zdGFja292ZXJm
bG93LmNvbS9xdWVzdGlvbnMvYXNrP3RhZ3M9amp3dCZndWlkZWQ9ZmFsc2Up
LCBvciB0cnkgU2xhY2sgb3IgR2l0dHIgYXMgCmRlc2NyaWJlZCBhYm92ZS4K
CioqSWYgYSBHaXRIdWIgSXNzdWUgaXMgY3JlYXRlZCB0aGF0IGRvZXMgbm90
IHJlcHJlc2VudCBhY3Rpb25hYmxlIHdvcmsgZm9yIEpKV1QncyBjb2RlYmFz
ZSwgaXQgd2lsbCBiZSBwcm9tcHRseSBjbG9zZWQuKioKCjxhIG5hbWU9Imhl
bHAtaXNzdWVzIj48L2E+CiMjIyMgQnVncyBhbmQgRmVhdHVyZSBSZXF1ZXN0
cwoKSWYgeW91IGRvIG5vdCBoYXZlIGEgdXNhYmlsaXR5IHF1ZXN0aW9uIGFu
ZCBiZWxpZXZlIHlvdSBoYXZlIGEgbGVnaXRpbWF0ZSBidWcgb3IgZmVhdHVy
ZSByZXF1ZXN0LCAKcGxlYXNlIGRvIFtjcmVhdGUgYSBuZXcgSkpXVCBpc3N1
ZV0oaHR0cHM6Ly9naXRodWIuY29tL2p3dGsvamp3dC9pc3N1ZXMvbmV3KS4K
CklmIHlvdSBmZWVsIGxpa2UgeW91J2QgbGlrZSB0byBoZWxwIGZpeCBhIGJ1
ZyBvciBpbXBsZW1lbnQgdGhlIG5ldyBmZWF0dXJlIHlvdXJzZWxmLCBwbGVh
c2UgcmVhZCB0aGUgQ29udHJpYnV0aW5nIApzZWN0aW9uIG5leHQgYmVmb3Jl
IHN0YXJ0aW5nIGFueSB3b3JrLgoKPGEgbmFtZT0iY29udHJpYnV0aW5nIj48
L2E+CiMjIyBDb250cmlidXRpbmcKCjxhIG5hbWU9ImNvbnRyaWJ1dGluZy1w
dWxsLXJlcXVlc3RzIj48L2E+CiMjIyMgUHVsbCBSZXF1ZXN0cwoKU2ltcGxl
IFB1bGwgUmVxdWVzdHMgdGhhdCBmaXggYW55dGhpbmcgb3RoZXIgdGhhbiBK
SldUIGNvcmUgY29kZSAoZG9jdW1lbnRhdGlvbiwgSmF2YURvYywgdHlwb3Ms
IHRlc3QgY2FzZXMsIGV0YykgYXJlIAphbHdheXMgYXBwcmVjaWF0ZWQgYW5k
IGhhdmUgYSBoaWdoIGxpa2VsaWhvb2Qgb2YgYmVpbmcgbWVyZ2VkIHF1aWNr
bHkuIFBsZWFzZSBzZW5kIHRoZW0hCgpIb3dldmVyLCBpZiB5b3Ugd2FudCBv
ciBmZWVsIHRoZSBuZWVkIHRvIGNoYW5nZSBKSldUJ3MgZnVuY3Rpb25hbGl0
eSBvciBjb3JlIGNvZGUsIHBsZWFzZSBkbyBub3QgaXNzdWUgYSBwdWxsIHJl
cXVlc3QgCndpdGhvdXQgW2NyZWF0aW5nIGEgbmV3IEpKV1QgaXNzdWVdKGh0
dHBzOi8vZ2l0aHViLmNvbS9qd3RrL2pqd3QvaXNzdWVzL25ldykgYW5kIGRp
c2N1c3NpbmcgeW91ciBkZXNpcmVkIApjaGFuZ2VzICoqZmlyc3QqKiwgX2Jl
Zm9yZSB5b3Ugc3RhcnQgd29ya2luZyBvbiBpdF8uCgpJdCB3b3VsZCBiZSBh
IHNoYW1lIHRvIHJlamVjdCB5b3VyIGVhcm5lc3QgYW5kIGdlbnVpbmVseSBh
cHByZWNpYXRlZCBwdWxsIHJlcXVlc3QgaWYgaXQgbWlnaHQgbm90IG5vdCBh
bGlnbiB3aXRoIHRoZSAKcHJvamVjdCdzIGdvYWxzLCBkZXNpZ24gZXhwZWN0
YXRpb25zIG9yIHBsYW5uZWQgZnVuY3Rpb25hbGl0eS4gIFdlJ3ZlIHNhZGx5
IGhhZCB0byByZWplY3QgbGFyZ2UgUFJzIGluIHRoZSBwYXN0IGJlY2F1c2UK
dGhleSB3ZXJlIG91dCBvZiBzeW5jIHdpdGggcHJvamVjdCBvciBkZXNpZ24g
ZXhwZWN0YXRpb25zIC0gYWxsIGJlY2F1c2UgdGhlIFBSIGF1dGhvciBkaWRu
J3QgZmlyc3QgY2hlY2sgaW4gd2l0aCAKdGhlIHRlYW0gZmlyc3QgYmVmb3Jl
IHdvcmtpbmcgb24gYSBzb2x1dGlvbi4KClNvLCBwbGVhc2UgW2NyZWF0ZSBh
IG5ldyBKSldUIGlzc3VlXShodHRwczovL2dpdGh1Yi5jb20vand0ay9qand0
L2lzc3Vlcy9uZXcpIGZpcnN0IHRvIGRpc2N1c3MsIGFuZCB0aGVuIHdlIGNh
biBzZWUgaWYKKG9yIGhvdykgYSBQUiBpcyB3YXJyYW50ZWQuICBUaGFuayB5
b3UhCgo8YSBuYW1lPSJjb250cmlidXRpbmctaGVscC13YW50ZWQiPjwvYT4K
IyMjIyBIZWxwIFdhbnRlZAoKSWYgeW91IHdvdWxkIGxpa2UgdG8gaGVscCwg
YnV0IGRvbid0IGtub3cgd2hlcmUgdG8gc3RhcnQsIHBsZWFzZSB2aXNpdCB0
aGUgCltIZWxwIFdhbnRlZCBJc3N1ZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9q
d3RrL2pqd3QvbGFiZWxzL2hlbHAlMjB3YW50ZWQpIHBhZ2UgYW5kIHBpY2sg
YW55IG9mIHRoZSAKb25lcyB0aGVyZSwgYW5kIHdlJ2xsIGJlIGhhcHB5IHRv
IGRpc2N1c3MgYW5kIGFuc3dlciBxdWVzdGlvbnMgaW4gdGhlIGlzc3VlIGNv
bW1lbnRzLgoKSWYgYW55IG9mIHRob3NlIGRvbid0IGFwcGVhbCB0byB5b3Us
IG5vIHdvcnJpZXMhIEFueSBoZWxwIHlvdSB3b3VsZCBsaWtlIHRvIG9mZmVy
IHdvdWxkIGJlIAphcHByZWNpYXRlZCBiYXNlZCBvbiB0aGUgYWJvdmUgY2F2
ZWF0cyBjb25jZXJuaW5nIFtjb250cmlidXRpbmcgcHVsbCByZXFldWVzdHNd
KCNjb250cmlidXRpbmctcHVsbC1yZXF1ZXN0cykuIEZlZWwgZnJlZQp0byBk
aXNjdXNzIG9yIGFzayBxdWVzdGlvbnMgZmlyc3QgaWYgeW91J3JlIG5vdCBz
dXJlLiA6KQoKPGEgbmFtZT0ib3ZlcnZpZXciPjwvYT4KIyMgV2hhdCBpcyBh
IEpTT04gV2ViIFRva2VuPwoKRG9uJ3Qga25vdyB3aGF0IGEgSlNPTiBXZWIg
VG9rZW4gaXM/IFJlYWQgb24uIE90aGVyd2lzZSwganVtcCBvbiBkb3duIHRv
IHRoZSBbSW5zdGFsbGF0aW9uXSgjSW5zdGFsbGF0aW9uKSBzZWN0aW9uLgoK
SldUIGlzIGEgbWVhbnMgb2YgdHJhbnNtaXR0aW5nIGluZm9ybWF0aW9uIGJl
dHdlZW4gdHdvIHBhcnRpZXMgaW4gYSBjb21wYWN0LCB2ZXJpZmlhYmxlIGZv
cm0uCgpUaGUgYml0cyBvZiBpbmZvcm1hdGlvbiBlbmNvZGVkIGluIHRoZSBi
b2R5IG9mIGEgSldUIGFyZSBjYWxsZWQgYGNsYWltc2AuIFRoZSBleHBhbmRl
ZCBmb3JtIG9mIHRoZSBKV1QgaXMgaW4gYSBKU09OIGZvcm1hdCwgc28gZWFj
aCBgY2xhaW1gIGlzIGEga2V5IGluIHRoZSBKU09OIG9iamVjdC4KIApKV1Rz
IGNhbiBiZSBjcnlwdG9ncmFwaGljYWxseSBzaWduZWQgKG1ha2luZyBpdCBh
IFtKV1NdKGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM3NTE1KSkg
b3IgZW5jcnlwdGVkIChtYWtpbmcgaXQgYSBbSldFXShodHRwczovL3Rvb2xz
LmlldGYub3JnL2h0bWwvcmZjNzUxNikpLgoKVGhpcyBhZGRzIGEgcG93ZXJm
dWwgbGF5ZXIgb2YgdmVyaWZpYWJpbGl0eSB0byB0aGUgdXNlciBvZiBKV1Rz
LiBUaGUgcmVjZWl2ZXIgaGFzIGEgaGlnaCBkZWdyZWUgb2YgY29uZmlkZW5j
ZSB0aGF0IHRoZSBKV1QgaGFzIG5vdCBiZWVuIHRhbXBlcmVkIHdpdGggYnkg
dmVyaWZ5aW5nIHRoZSBzaWduYXR1cmUsIGZvciBpbnN0YW5jZS4KClRoZSBj
b21wYWN0IHJlcHJlc2VudGF0aW9uIG9mIGEgc2lnbmVkIEpXVCBpcyBhIHN0
cmluZyB0aGF0IGhhcyB0aHJlZSBwYXJ0cywgZWFjaCBzZXBhcmF0ZWQgYnkg
YSBgLmA6CgpgYGAKZXlKaGJHY2lPaUpJVXpJMU5pSjkuZXlKemRXSWlPaUpL
YjJVaWZRLmlwZXZSTnVSUDZIZmxHOGNGS25tVVB0eXBydVJDNGZiMURXdG9M
TDYyU1kKYGBgCgpFYWNoIHBhcnQgaXMgW0Jhc2U2NFVSTF0oaHR0cHM6Ly9l
bi53aWtpcGVkaWEub3JnL3dpa2kvQmFzZTY0KS1lbmNvZGVkLiBUaGUgZmly
c3QgcGFydCBpcyB0aGUgaGVhZGVyLCB3aGljaCBhdCBhIAptaW5pbXVtIG5l
ZWRzIHRvIHNwZWNpZnkgdGhlIGFsZ29yaXRobSB1c2VkIHRvIHNpZ24gdGhl
IEpXVC4gVGhlIHNlY29uZCBwYXJ0IGlzIHRoZSBib2R5LiBUaGlzIHBhcnQg
aGFzIGFsbCAKdGhlIGNsYWltcyBvZiB0aGlzIEpXVCBlbmNvZGVkIGluIGl0
LiBUaGUgZmluYWwgcGFydCBpcyB0aGUgc2lnbmF0dXJlLiBJdCdzIGNvbXB1
dGVkIGJ5IHBhc3NpbmcgYSBjb21iaW5hdGlvbiBvZiAKdGhlIGhlYWRlciBh
bmQgYm9keSB0aHJvdWdoIHRoZSBhbGdvcml0aG0gc3BlY2lmaWVkIGluIHRo
ZSBoZWFkZXIuCiAKSWYgeW91IHBhc3MgdGhlIGZpcnN0IHR3byBwYXJ0cyB0
aHJvdWdoIGEgYmFzZSA2NCB1cmwgZGVjb2RlciwgeW91J2xsIGdldCB0aGUg
Zm9sbG93aW5nIChmb3JtYXR0aW5nIGFkZGVkIGZvciAKY2xhcml0eSk6Cgpg
aGVhZGVyYApgYGAKewogICJhbGciOiAiSFMyNTYiCn0KYGBgCgpgYm9keWAK
YGBgCnsKICAic3ViIjogIkpvZSIKfQpgYGAKCkluIHRoaXMgY2FzZSwgdGhl
IGluZm9ybWF0aW9uIHdlIGhhdmUgaXMgdGhhdCB0aGUgSE1BQyB1c2luZyBT
SEEtMjU2IGFsZ29yaXRobSB3YXMgdXNlZCB0byBzaWduIHRoZSBKV1QuIEFu
ZCwgdGhlIApib2R5IGhhcyBhIHNpbmdsZSBjbGFpbSwgYHN1YmAgd2l0aCB2
YWx1ZSBgSm9lYC4KClRoZXJlIGFyZSBhIG51bWJlciBvZiBzdGFuZGFyZCBj
bGFpbXMsIGNhbGxlZCBbUmVnaXN0ZXJlZCBDbGFpbXNdKGh0dHBzOi8vdG9v
bHMuaWV0Zi5vcmcvaHRtbC9yZmM3NTE5I3NlY3Rpb24tNC4xKSwgCmluIHRo
ZSBzcGVjaWZpY2F0aW9uIGFuZCBgc3ViYCAoZm9yIHN1YmplY3QpIGlzIG9u
ZSBvZiB0aGVtLgoKVG8gY29tcHV0ZSB0aGUgc2lnbmF0dXJlLCB5b3UgbmVl
ZCBhIHNlY3JldCBrZXkgdG8gc2lnbiBpdC4gV2UnbGwgY292ZXIga2V5cyBh
bmQgYWxnb3JpdGhtcyBsYXRlci4KCjxhIG5hbWU9Imluc3RhbGwiPjwvYT4K
IyMgSW5zdGFsbGF0aW9uCgpVc2UgeW91ciBmYXZvcml0ZSBNYXZlbi1jb21w
YXRpYmxlIGJ1aWxkIHRvb2wgdG8gcHVsbCB0aGUgZGVwZW5kZW5jaWVzIGZy
b20gTWF2ZW4gQ2VudHJhbC4KClRoZSBkZXBlbmRlbmNpZXMgY291bGQgZGlm
ZmVyIHNsaWdodGx5IGlmIHlvdSBhcmUgd29ya2luZyB3aXRoIGEgW0pESyBw
cm9qZWN0XSgjaW5zdGFsbC1qZGspIG9yIGFuIApbQW5kcm9pZCBwcm9qZWN0
XSgjaW5zdGFsbC1hbmRyb2lkKS4KCjxhIG5hbWU9Imluc3RhbGwtamRrIj48
L2E+CiMjIyBKREsgUHJvamVjdHMKCklmIHlvdSdyZSBidWlsZGluZyBhIChu
b24tQW5kcm9pZCkgSkRLIHByb2plY3QsIHlvdSB3aWxsIHdhbnQgdG8gZGVm
aW5lIHRoZSBmb2xsb3dpbmcgZGVwZW5kZW5jaWVzOgoKPGEgbmFtZT0iaW5z
dGFsbC1qZGstbWF2ZW4iPjwvYT4KIyMjIyBNYXZlbgoKYGBgeG1sCjxkZXBl
bmRlbmN5PgogICAgPGdyb3VwSWQ+aW8uanNvbndlYnRva2VuPC9ncm91cElk
PgogICAgPGFydGlmYWN0SWQ+amp3dC1hcGk8L2FydGlmYWN0SWQ+CiAgICA8
dmVyc2lvbj4wLjEwLjc8L3ZlcnNpb24+CjwvZGVwZW5kZW5jeT4KPGRlcGVu
ZGVuY3k+CiAgICA8Z3JvdXBJZD5pby5qc29ud2VidG9rZW48L2dyb3VwSWQ+
CiAgICA8YXJ0aWZhY3RJZD5qand0LWltcGw8L2FydGlmYWN0SWQ+CiAgICA8
dmVyc2lvbj4wLjEwLjc8L3ZlcnNpb24+CiAgICA8c2NvcGU+cnVudGltZTwv
c2NvcGU+CjwvZGVwZW5kZW5jeT4KPGRlcGVuZGVuY3k+CiAgICA8Z3JvdXBJ
ZD5pby5qc29ud2VidG9rZW48L2dyb3VwSWQ+CiAgICA8YXJ0aWZhY3RJZD5q
and0LWphY2tzb248L2FydGlmYWN0SWQ+CiAgICA8dmVyc2lvbj4wLjEwLjc8
L3ZlcnNpb24+CiAgICA8c2NvcGU+cnVudGltZTwvc2NvcGU+CjwvZGVwZW5k
ZW5jeT4KPCEtLSBVbmNvbW1lbnQgdGhpcyBuZXh0IGRlcGVuZGVuY3kgaWYg
eW91IHdhbnQgdG8gdXNlIFJTQVNTQS1QU1MgKFBTMjU2LCBQUzM4NCwgUFM1
MTIpIGFsZ29yaXRobXM6CjxkZXBlbmRlbmN5PgogICAgPGdyb3VwSWQ+b3Jn
LmJvdW5jeWNhc3RsZTwvZ3JvdXBJZD4KICAgIDxhcnRpZmFjdElkPmJjcHJv
di1qZGsxNW9uPC9hcnRpZmFjdElkPgogICAgPHZlcnNpb24+MS42MDwvdmVy
c2lvbj4KICAgIDxzY29wZT5ydW50aW1lPC9zY29wZT4KPC9kZXBlbmRlbmN5
PgotLT4KCmBgYAoKPGEgbmFtZT0iaW5zdGFsbC1qZGstZ3JhZGxlIj48L2E+
CiMjIyMgR3JhZGxlCgpgYGBncm9vdnkKZGVwZW5kZW5jaWVzIHsKICAgIGNv
bXBpbGUgJ2lvLmpzb253ZWJ0b2tlbjpqand0LWFwaTowLjEwLjcnCiAgICBy
dW50aW1lICdpby5qc29ud2VidG9rZW46amp3dC1pbXBsOjAuMTAuNycsCiAg
ICAgICAgICAgIC8vIFVuY29tbWVudCB0aGUgbmV4dCBsaW5lIGlmIHlvdSB3
YW50IHRvIHVzZSBSU0FTU0EtUFNTIChQUzI1NiwgUFMzODQsIFBTNTEyKSBh
bGdvcml0aG1zOgogICAgICAgICAgICAvLydvcmcuYm91bmN5Y2FzdGxlOmJj
cHJvdi1qZGsxNW9uOjEuNjAnLAogICAgICAgICAgICAnaW8uanNvbndlYnRv
a2VuOmpqd3QtamFja3NvbjowLjEwLjcnCn0KYGBgCgo8YSBuYW1lPSJpbnN0
YWxsLWFuZHJvaWQiPjwvYT4KIyMjIEFuZHJvaWQgUHJvamVjdHMKCkFuZHJv
aWQgcHJvamVjdHMgd2lsbCB3YW50IHRvIGRlZmluZSB0aGUgZm9sbG93aW5n
IGRlcGVuZGVuY2llcyBhbmQgUHJvZ3VhcmQgZXhjbHVzaW9uczoKCjxhIG5h
bWU9Imluc3RhbGwtYW5kcm9pZC1kZXBlbmRlbmNpZXMiPjwvYT4KIyMjIyBE
ZXBlbmRlbmNpZXMKCkFkZCB0aGUgZGVwZW5kZW5jaWVzIHRvIHlvdXIgcHJv
amVjdDoKCmBgYGdyb292eQpkZXBlbmRlbmNpZXMgewogICAgYXBpICdpby5q
c29ud2VidG9rZW46amp3dC1hcGk6MC4xMC43JwogICAgcnVudGltZU9ubHkg
J2lvLmpzb253ZWJ0b2tlbjpqand0LWltcGw6MC4xMC43JyAKICAgIHJ1bnRp
bWVPbmx5KCdpby5qc29ud2VidG9rZW46amp3dC1vcmdqc29uOjAuMTAuNycp
IHsKICAgICAgICBleGNsdWRlIGdyb3VwOiAnb3JnLmpzb24nLCBtb2R1bGU6
ICdqc29uJyAvL3Byb3ZpZGVkIGJ5IEFuZHJvaWQgbmF0aXZlbHkKICAgIH0K
ICAgIC8vIFVuY29tbWVudCB0aGUgbmV4dCBsaW5lIGlmIHlvdSB3YW50IHRv
IHVzZSBSU0FTU0EtUFNTIChQUzI1NiwgUFMzODQsIFBTNTEyKSBhbGdvcml0
aG1zOgogICAgLy9ydW50aW1lT25seSAnb3JnLmJvdW5jeWNhc3RsZTpiY3By
b3YtamRrMTVvbjoxLjYwJwp9CmBgYAoKPGEgbmFtZT0iaW5zdGFsbC1hbmRy
b2lkLXByb2d1YXJkIj48L2E+CiMjIyMgUHJvZ3VhcmQKCllvdSBjYW4gdXNl
IHRoZSBmb2xsb3dpbmcgW0FuZHJvaWQgUHJvZ3VhcmRdKGh0dHBzOi8vZGV2
ZWxvcGVyLmFuZHJvaWQuY29tL3N0dWRpby9idWlsZC9zaHJpbmstY29kZSkg
ZXhjbHVzaW9uIHJ1bGVzOiAKCmBgYAota2VlcGF0dHJpYnV0ZXMgSW5uZXJD
bGFzc2VzCgota2VlcCBjbGFzcyBpby5qc29ud2VidG9rZW4uKiogeyAqOyB9
Ci1rZWVwbmFtZXMgY2xhc3MgaW8uanNvbndlYnRva2VuLiogeyAqOyB9Ci1r
ZWVwbmFtZXMgaW50ZXJmYWNlIGlvLmpzb253ZWJ0b2tlbi4qIHsgKjsgfQoK
LWtlZXAgY2xhc3Mgb3JnLmJvdW5jeWNhc3RsZS4qKiB7ICo7IH0KLWtlZXBu
YW1lcyBjbGFzcyBvcmcuYm91bmN5Y2FzdGxlLioqIHsgKjsgfQotZG9udHdh
cm4gb3JnLmJvdW5jeWNhc3RsZS4qKgpgYGAKCjxhIG5hbWU9Imluc3RhbGwt
dW5kZXJzdGFuZGluZ2RlcGVuZGVuY2llcyI+PC9hPgojIyMgVW5kZXJzdGFu
ZGluZyBKSldUIERlcGVuZGVuY2llcwoKTm90aWNlIHRoZSBhYm92ZSBkZXBl
bmRlbmN5IGRlY2xhcmF0aW9ucyBhbGwgaGF2ZSBvbmx5IG9uZSBjb21waWxl
LXRpbWUgZGVwZW5kZW5jeSBhbmQgdGhlIHJlc3QgYXJlIGRlY2xhcmVkIGFz
IApfcnVudGltZV8gZGVwZW5kZW5jaWVzLgoKVGhpcyBpcyBiZWNhdXNlIEpK
V1QgaXMgZGVzaWduZWQgc28geW91IG9ubHkgZGVwZW5kIG9uIHRoZSBBUElz
IHRoYXQgYXJlIGV4cGxpY2l0bHkgZGVzaWduZWQgZm9yIHlvdSB0byB1c2Ug
aW4KeW91ciBhcHBsaWNhdGlvbnMgYW5kIGFsbCBvdGhlciBpbnRlcm5hbCBp
bXBsZW1lbnRhdGlvbiBkZXRhaWxzIC0gdGhhdCBjYW4gY2hhbmdlIHdpdGhv
dXQgd2FybmluZyAtIGFyZSByZWxlZ2F0ZWQgdG8KcnVudGltZS1vbmx5IGRl
cGVuZGVuY2llcy4gIFRoaXMgaXMgYW4gZXh0cmVtZWx5IGltcG9ydGFudCBw
b2ludCBpZiB5b3Ugd2FudCB0byBlbnN1cmUgc3RhYmxlIEpKV1QgdXNhZ2Ug
YW5kCnVwZ3JhZGVzIG92ZXIgdGltZToKCioqSkpXVCBndWFyYW50ZWVzIHNl
bWFudGljIHZlcnNpb25pbmcgY29tcGF0aWJpbGl0eSBmb3IgYWxsIG9mIGl0
cyBhcnRpZmFjdHMgX2V4Y2VwdF8gdGhlIGBqand0LWltcGxgIC5qYXIuICBO
byBzdWNoIApndWFyYW50ZWUgaXMgbWFkZSBmb3IgdGhlIGBqand0LWltcGxg
IC5qYXIgYW5kIGludGVybmFsIGNoYW5nZXMgaW4gdGhhdCAuamFyIGNhbiBo
YXBwZW4gYXQgYW55IHRpbWUuICBOZXZlciBhZGQgdGhlIApgamp3dC1pbXBs
YCAuamFyIHRvIHlvdXIgcHJvamVjdCB3aXRoIGBjb21waWxlYCBzY29wZSAt
IGFsd2F5cyBkZWNsYXJlIGl0IHdpdGggYHJ1bnRpbWVgIHNjb3BlLioqCgpU
aGlzIGlzIGRvbmUgdG8gYmVuZWZpdCB5b3U6IGdyZWF0IGNhcmUgZ29lcyBp
bnRvIGN1cmF0aW5nIHRoZSBgamp3dC1hcGlgIC5qYXIgYW5kIGVuc3VyaW5n
IGl0IGNvbnRhaW5zIHdoYXQgeW91IG5lZWQKYW5kIHJlbWFpbnMgYmFja3dh
cmRzIGNvbXBhdGlibGUgYXMgbXVjaCBhcyBpcyBwb3NzaWJsZSBzbyB5b3Ug
Y2FuIGRlcGVuZCBvbiB0aGF0IHNhZmVseSB3aXRoIGNvbXBpbGUgc2NvcGUu
ICBUaGUgCnJ1bnRpbWUgYGpqd3QtaW1wbGAgLmphciBzdHJhdGVneSBhZmZv
cmRzIHRoZSBKSldUIGRldmVsb3BlcnMgdGhlIGZsZXhpYmlsaXR5IHRvIGNo
YW5nZSB0aGUgaW50ZXJuYWwgcGFja2FnZXMgYW5kIAppbXBsZW1lbnRhdGlv
bnMgd2hlbmV2ZXIgYW5kIGhvd2V2ZXIgbmVjZXNzYXJ5LiAgVGhpcyBoZWxw
cyB1cyBpbXBsZW1lbnQgZmVhdHVyZXMsIGZpeCBidWdzLCBhbmQgc2hpcCBu
ZXcgcmVsZWFzZXMgdG8gCnlvdSBtb3JlIHF1aWNrbHkgYW5kIGVmZmljaWVu
dGx5LgoKPGEgbmFtZT0icXVpY2tzdGFydCI+PC9hPgojIyBRdWlja3N0YXJ0
CgpNb3N0IGNvbXBsZXhpdHkgaXMgaGlkZGVuIGJlaGluZCBhIGNvbnZlbmll
bnQgYW5kIHJlYWRhYmxlIGJ1aWxkZXItYmFzZWQgW2ZsdWVudCBpbnRlcmZh
Y2VdKGh0dHA6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvRmx1ZW50X2ludGVy
ZmFjZSksIGdyZWF0IGZvciByZWx5aW5nIG9uIElERSBhdXRvLWNvbXBsZXRp
b24gdG8gd3JpdGUgY29kZSBxdWlja2x5LiAgSGVyZSdzIGFuIGV4YW1wbGU6
CgpgYGBqYXZhCmltcG9ydCBpby5qc29ud2VidG9rZW4uSnd0czsKaW1wb3J0
IGlvLmpzb253ZWJ0b2tlbi5TaWduYXR1cmVBbGdvcml0aG07CmltcG9ydCBp
by5qc29ud2VidG9rZW4uc2VjdXJpdHkuS2V5czsKaW1wb3J0IGphdmEuc2Vj
dXJpdHkuS2V5OwoKLy8gV2UgbmVlZCBhIHNpZ25pbmcga2V5LCBzbyB3ZSds
bCBjcmVhdGUgb25lIGp1c3QgZm9yIHRoaXMgZXhhbXBsZS4gVXN1YWxseQov
LyB0aGUga2V5IHdvdWxkIGJlIHJlYWQgZnJvbSB5b3VyIGFwcGxpY2F0aW9u
IGNvbmZpZ3VyYXRpb24gaW5zdGVhZC4KS2V5IGtleSA9IEtleXMuc2VjcmV0
S2V5Rm9yKFNpZ25hdHVyZUFsZ29yaXRobS5IUzI1Nik7CgpTdHJpbmcgandz
ID0gSnd0cy5idWlsZGVyKCkuc2V0U3ViamVjdCgiSm9lIikuc2lnbldpdGgo
a2V5KS5jb21wYWN0KCk7CmBgYAoKSG93IGVhc3kgd2FzIHRoYXQhPwoKSW4g
dGhpcyBjYXNlLCB3ZSBhcmU6CiAKIDEuICpidWlsZGluZyogYSBKV1QgdGhh
dCB3aWxsIGhhdmUgdGhlIApbcmVnaXN0ZXJlZCBjbGFpbV0oaHR0cHM6Ly90
b29scy5pZXRmLm9yZy9odG1sL3JmYzc1MTkjc2VjdGlvbi00LjEpIGBzdWJg
IChzdWJqZWN0KSBzZXQgdG8gYEpvZWAuIFdlIGFyZSB0aGVuCiAyLiAqc2ln
bmluZyogdGhlIEpXVCB1c2luZyBhIGtleSBzdWl0YWJsZSBmb3IgdGhlIEhN
QUMtU0hBLTI1NiBhbGdvcml0aG0uICBGaW5hbGx5LCB3ZSBhcmUKIDMuICpj
b21wYWN0aW5nKiBpdCBpbnRvIGl0cyBmaW5hbCBgU3RyaW5nYCBmb3JtLiAg
QSBzaWduZWQgSldUIGlzIGNhbGxlZCBhICdKV1MnLgoKVGhlIHJlc3VsdGFu
dCBgandzYCBTdHJpbmcgbG9va3MgbGlrZSB0aGlzOgoKYGBgCmV5SmhiR2Np
T2lKSVV6STFOaUo5LmV5SnpkV0lpT2lKS2IyVWlmUS4xS1AwU3N2RU5pN1V6
MW9RYzA3YVhUTDdrcFFHNWpCTkl5YnFyNjBBbEQ0CmBgYAoKTm93IGxldCdz
IHZlcmlmeSB0aGUgSldUICh5b3Ugc2hvdWxkIGFsd2F5cyBkaXNjYXJkIEpX
VHMgdGhhdCBkb24ndCBtYXRjaCBhbiBleHBlY3RlZCBzaWduYXR1cmUpOgoK
YGBgamF2YQphc3NlcnQgSnd0cy5wYXJzZXIoKS5zZXRTaWduaW5nS2V5KGtl
eSkucGFyc2VDbGFpbXNKd3MoandzKS5nZXRCb2R5KCkuZ2V0U3ViamVjdCgp
LmVxdWFscygiSm9lIik7CmBgYAoKKipOT1RFOiBFbnN1cmUgeW91IGNhbGwg
dGhlIGBwYXJzZUNsYWltc0p3c2AgbWV0aG9kKiogKHNpbmNlIHRoZXJlIGFy
ZSBtYW55IHNpbWlsYXIgbWV0aG9kcyBhdmFpbGFibGUpLiBZb3Ugd2lsbCBn
ZXQgYW4gYFVuc3VwcG9ydGVkSnd0RXhjZXB0aW9uYCBpZiB5b3UgcGFyc2Ug
eW91ciBKV1Qgd2l0aCB3cm9uZyBtZXRob2QuCgpUaGVyZSBhcmUgdHdvIHRo
aW5ncyBnb2luZyBvbiBoZXJlLiBUaGUgYGtleWAgZnJvbSBiZWZvcmUgaXMg
YmVpbmcgdXNlZCB0byB2YWxpZGF0ZSB0aGUgc2lnbmF0dXJlIG9mIHRoZSBK
V1QuIElmIGl0IApmYWlscyB0byB2ZXJpZnkgdGhlIEpXVCwgYSBgU2lnbmF0
dXJlRXhjZXB0aW9uYCAod2hpY2ggZXh0ZW5kcyBmcm9tIGBKd3RFeGNlcHRp
b25gKSBpcyB0aHJvd24uIEFzc3VtaW5nIHRoZSBKV1QgaXMgCnZhbGlkYXRl
ZCwgd2UgcGFyc2Ugb3V0IHRoZSBjbGFpbXMgYW5kIGFzc2VydCB0aGF0IHRo
YXQgc3ViamVjdCBpcyBzZXQgdG8gYEpvZWAuCgpZb3UgaGF2ZSB0byBsb3Zl
IGNvZGUgb25lLWxpbmVycyB0aGF0IHBhY2sgYSBwdW5jaCEKCkJ1dCB3aGF0
IGlmIHBhcnNpbmcgb3Igc2lnbmF0dXJlIHZhbGlkYXRpb24gZmFpbGVkPyAg
WW91IGNhbiBjYXRjaCBgSnd0RXhjZXB0aW9uYCBhbmQgcmVhY3QgYWNjb3Jk
aW5nbHk6CgpgYGBqYXZhCnRyeSB7CgogICAgSnd0cy5wYXJzZXIoKS5zZXRT
aWduaW5nS2V5KGtleSkucGFyc2VDbGFpbXNKd3MoY29tcGFjdEp3cyk7Cgog
ICAgLy9PSywgd2UgY2FuIHRydXN0IHRoaXMgSldUCgp9IGNhdGNoIChKd3RF
eGNlcHRpb24gZSkgewoKICAgIC8vZG9uJ3QgdHJ1c3QgdGhlIEpXVCEKfQpg
YGAKCjxhIG5hbWU9Imp3cyI+PC9hPgojIyBTaWduZWQgSldUcwoKVGhlIEpX
VCBzcGVjaWZpY2F0aW9uIHByb3ZpZGVzIGZvciB0aGUgYWJpbGl0eSB0byAK
W2NyeXB0b2dyYXBoaWNhbGx5IF9zaWduX10oaHR0cHM6Ly9lbi53aWtpcGVk
aWEub3JnL3dpa2kvRGlnaXRhbF9zaWduYXR1cmUpIGEgSldULiAgU2lnbmlu
ZyBhIEpXVDoKIAoxLiBndWFyYW50ZWVzIHRoZSBKV1Qgd2FzIGNyZWF0ZWQg
Ynkgc29tZW9uZSB3ZSBrbm93IChpdCBpcyBhdXRoZW50aWMpIGFzIHdlbGwg
YXMKMi4gZ3VhcmFudGVlcyB0aGF0IG5vLW9uZSBoYXMgbWFuaXB1bGF0ZWQg
b3IgY2hhbmdlZCB0aGUgSldUIGFmdGVyIGl0IHdhcyBjcmVhdGVkIChpdHMg
aW50ZWdyaXR5IGlzIG1haW50YWluZWQpLgoKVGhlc2UgdHdvIHByb3BlcnRp
ZXMgLSBhdXRoZW50aWNpdHkgYW5kIGludGVncml0eSAtIGFzc3VyZSB1cyB0
aGF0IGEgSldUIGNvbnRhaW5zIGluZm9ybWF0aW9uIHdlIGNhbiB0cnVzdC4g
IElmIGEgCkpXVCBmYWlscyBhdXRoZW50aWNpdHkgb3IgaW50ZWdyaXR5IGNo
ZWNrcywgd2Ugc2hvdWxkIGFsd2F5cyByZWplY3QgdGhhdCBKV1QgYmVjYXVz
ZSB3ZSBjYW4ndCB0cnVzdCBpdC4KClNvIGhvdyBpcyBhIEpXVCBzaWduZWQ/
ICBMZXQncyB3YWxrIHRocm91Z2ggaXQgd2l0aCBzb21lIGVhc3ktdG8tcmVh
ZCBwc2V1ZG9jb2RlOgoKMS4gQXNzdW1lIHdlIGhhdmUgYSBKV1Qgd2l0aCBh
IEpTT04gaGVhZGVyIGFuZCBib2R5IChha2EgJ0NsYWltcycpIGFzIGZvbGxv
d3M6CiAgCiAgICoqaGVhZGVyKioKICAgYGBgCiAgIHsKICAgICAiYWxnIjog
IkhTMjU2IgogICB9CiAgIGBgYAogICAKICAgKipib2R5KioKICAgYGBgCiAg
IHsKICAgICAic3ViIjogIkpvZSIKICAgfQogICBgYGAKICAgCjIuIFJlbW92
ZSBhbGwgdW5uZWNlc3Nhcnkgd2hpdGVzcGFjZSBpbiB0aGUgSlNPTjoKICAg
CiAgIGBgYGdyb292eQogICBTdHJpbmcgaGVhZGVyID0gJ3siYWxnIjoiSFMy
NTYifScKICAgU3RyaW5nIGNsYWltcyA9ICd7InN1YiI6IkpvZSJ9JwogICBg
YGAKICAgCjMuIEdldCB0aGUgVVRGLTggYnl0ZXMgYW5kIEJhc2U2NFVSTC1l
bmNvZGUgZWFjaDoKICAgCiAgIGBgYGdyb292eQogICBTdHJpbmcgZW5jb2Rl
ZEhlYWRlciA9IGJhc2U2NFVSTEVuY29kZSggaGVhZGVyLmdldEJ5dGVzKCJV
VEYtOCIpICkKICAgU3RyaW5nIGVuY29kZWRDbGFpbXMgPSBiYXNlNjRVUkxF
bmNvZGUoIGNsYWltcy5nZXRCeXRlcygiVVRGLTgiKSApCiAgIGBgYAogICAK
NC4gQ29uY2F0ZW5hdGUgdGhlIGVuY29kZWQgaGVhZGVyIGFuZCBjbGFpbXMg
d2l0aCBhIHBlcmlvZCBjaGFyYWN0ZXIgYmV0d2VlbiB0aGVtOgoKICAgYGBg
Z3Jvb3Z5CiAgIFN0cmluZyBjb25jYXRlbmF0ZWQgPSBlbmNvZGVkSGVhZGVy
ICsgJy4nICsgZW5jb2RlZENsYWltcwogICBgYGAKICAgCjUuICBVc2UgYSBz
dWZmaWNpZW50bHktc3Ryb25nIGNyeXB0b2dyYXBoaWMgc2VjcmV0IG9yIHBy
aXZhdGUga2V5LCBhbG9uZyB3aXRoIGEgc2lnbmluZyBhbGdvcml0aG0gb2Yg
eW91ciBjaG9pY2UKICAgICh3ZSdsbCB1c2UgSE1BQy1TSEEtMjU2IGhlcmUp
LCBhbmQgc2lnbiB0aGUgY29uY2F0ZW5hdGVkIHN0cmluZzoKICAgIAogICAg
YGBgZ3Jvb3Z5CiAgICBLZXkga2V5ID0gZ2V0TXlTZWNyZXRLZXkoKQogICAg
Ynl0ZVtdIHNpZ25hdHVyZSA9IGhtYWNTaGEyNTYoIGNvbmNhdGVuYXRlZCwg
a2V5ICkKICAgIGBgYAogICAgCjYuIEJlY2F1c2Ugc2lnbmF0dXJlcyBhcmUg
YWx3YXlzIGJ5dGUgYXJyYXlzLCBCYXNlNjRVUkwtZW5jb2RlIHRoZSBzaWdu
YXR1cmUgYW5kIGFwcGVuZCBhIHBlcmlvZCBjaGFyYWN0ZXIgJy4nIGFuZCBp
dCAKICAgdG8gdGhlIGNvbmNhdGVuYXRlZCBzdHJpbmc6CiAgIAogICBgYGBn
cm9vdnkKICAgU3RyaW5nIGp3cyA9IGNvbmNhdGVuYXRlZCArICcuJyArIGJh
c2U2NFVSTEVuY29kZSggc2lnbmF0dXJlICkKICAgYGBgCiAKIApBbmQgdGhl
cmUgeW91IGhhdmUgaXQsIHRoZSBmaW5hbCBgandzYCBTdHJpbmcgbG9va3Mg
bGlrZSB0aGlzOgogCmBgYApleUpoYkdjaU9pSklVekkxTmlKOS5leUp6ZFdJ
aU9pSktiMlVpZlEuMUtQMFNzdkVOaTdVejFvUWMwN2FYVEw3a3BRRzVqQk5J
eWJxcjYwQWxENApgYGAKClRoaXMgaXMgY2FsbGVkIGEgJ0pXUycgLSBzaG9y
dCBmb3IgX3NpZ25lZF8gSldULgoKT2YgY291cnNlLCBubyBvbmUgd291bGQg
d2FudCB0byBkbyB0aGlzIG1hbnVhbGx5IGluIGNvZGUsIGFuZCB3b3JzZSwg
aWYgeW91IGdldCBhbnl0aGluZyB3cm9uZywgeW91IGNvdWxkIGNhdXNlIApz
ZWN1cml0eSBwcm9ibGVtcyBvciB3ZWFrbmVzc2VzLiAgQXMgYSByZXN1bHQs
IEpKV1Qgd2FzIGNyZWF0ZWQgdG8gaGFuZGxlIGFsbCBvZiB0aGlzIGZvciB5
b3U6IEpKV1QgY29tcGxldGVseSAKYXV0b21hdGVzIGJvdGggdGhlIGNyZWF0
aW9uIG9mIEpXU3MgYXMgd2VsbCBhcyB0aGUgcGFyc2luZyBhbmQgdmVyaWZp
Y2F0aW9uIG9mIEpXU3MgZm9yIHlvdS4KCkJ1dCBiZWZvcmUgd2UgZGlnIGlu
IHRvIHNob3dpbmcgeW91IGhvdyB0byBjcmVhdGUgYSBKV1MgdXNpbmcgSkpX
VCwgbGV0J3MgYnJpZWZseSBkaXNjdXNzIFNpZ25hdHVyZSBBbGdvcml0aG1z
IGFuZCAKS2V5cywgc3BlY2lmaWNhbGx5IGFzIHRoZXkgcmVsYXRlIHRvIHRo
ZSBKV1Qgc3BlY2lmaWNhdGlvbnMuICBVbmRlcnN0YW5kaW5nIHRoZW0gaXMg
Y3JpdGljYWwgdG8gYmVpbmcgYWJsZSB0byBjcmVhdGUgYSAKSldTIHByb3Bl
cmx5LgoKPGEgbmFtZT0iandzLWtleSI+PC9hPgojIyMgU2lnbmF0dXJlIEFs
Z29yaXRobXMgS2V5cwoKVGhlIEpXVCBzcGVjaWZpY2F0aW9uIGlkZW50aWZp
ZXMgMTIgc3RhbmRhcmQgc2lnbmF0dXJlIGFsZ29yaXRobXMgLSAzIHNlY3Jl
dCBrZXkgYWxnb3JpdGhtcyBhbmQgOSBhc3ltbWV0cmljIAprZXkgYWxnb3Jp
dGhtcyAtIGlkZW50aWZpZWQgYnkgdGhlIGZvbGxvd2luZyBuYW1lczoKCiog
YEhTMjU2YDogSE1BQyB1c2luZyBTSEEtMjU2CiogYEhTMzg0YDogSE1BQyB1
c2luZyBTSEEtMzg0CiogYEhTNTEyYDogSE1BQyB1c2luZyBTSEEtNTEyCiog
YEVTMjU2YDogRUNEU0EgdXNpbmcgUC0yNTYgYW5kIFNIQS0yNTYKKiBgRVMz
ODRgOiBFQ0RTQSB1c2luZyBQLTM4NCBhbmQgU0hBLTM4NAoqIGBFUzUxMmA6
IEVDRFNBIHVzaW5nIFAtNTIxIGFuZCBTSEEtNTEyCiogYFJTMjU2YDogUlNB
U1NBLVBLQ1MtdjFfNSB1c2luZyBTSEEtMjU2CiogYFJTMzg0YDogUlNBU1NB
LVBLQ1MtdjFfNSB1c2luZyBTSEEtMzg0CiogYFJTNTEyYDogUlNBU1NBLVBL
Q1MtdjFfNSB1c2luZyBTSEEtNTEyCiogYFBTMjU2YDogUlNBU1NBLVBTUyB1
c2luZyBTSEEtMjU2IGFuZCBNR0YxIHdpdGggU0hBLTI1NgoqIGBQUzM4NGA6
IFJTQVNTQS1QU1MgdXNpbmcgU0hBLTM4NCBhbmQgTUdGMSB3aXRoIFNIQS0z
ODQKKiBgUFM1MTJgOiBSU0FTU0EtUFNTIHVzaW5nIFNIQS01MTIgYW5kIE1H
RjEgd2l0aCBTSEEtNTEyCgpUaGVzZSBhcmUgYWxsIHJlcHJlc2VudGVkIGlu
IHRoZSBgaW8uanNvbndlYnRva2VuLlNpZ25hdHVyZUFsZ29yaXRobWAgZW51
bS4KCldoYXQncyByZWFsbHkgaW1wb3J0YW50IGFib3V0IHRoZXNlIGFsZ29y
aXRobXMgLSBvdGhlciB0aGFuIHRoZWlyIHNlY3VyaXR5IHByb3BlcnRpZXMg
LSBpcyB0aGF0IHRoZSBKV1Qgc3BlY2lmaWNhdGlvbgpbUkZDIDc1MTgsIFNl
Y3Rpb25zIDMuMiB0aHJvdWdoIDMuNV0oaHR0cHM6Ly90b29scy5pZXRmLm9y
Zy9odG1sL3JmYzc1MTgjc2VjdGlvbi0zKQpfcmVxdWlyZXNfIChtYW5kYXRl
cykgdGhhdCB5b3UgTVVTVCB1c2Uga2V5cyB0aGF0IGFyZSBzdWZmaWNpZW50
bHkgc3Ryb25nIGZvciBhIGNob3NlbiBhbGdvcml0aG0uCgpUaGlzIG1lYW5z
IHRoYXQgSkpXVCAtIGEgc3BlY2lmaWNhdGlvbi1jb21wbGlhbnQgbGlicmFy
eSAtIHdpbGwgYWxzbyBlbmZvcmNlIHRoYXQgeW91IHVzZSBzdWZmaWNpZW50
bHkgc3Ryb25nIGtleXMKZm9yIHRoZSBhbGdvcml0aG1zIHlvdSBjaG9vc2Uu
ICBJZiB5b3UgcHJvdmlkZSBhIHdlYWsga2V5IGZvciBhIGdpdmVuIGFsZ29y
aXRobSwgSkpXVCB3aWxsIHJlamVjdCBpdCBhbmQgdGhyb3cgYW4KZXhjZXB0
aW9uLgoKVGhpcyBpcyBub3QgYmVjYXVzZSB3ZSB3YW50IHRvIG1ha2UgeW91
ciBsaWZlIGRpZmZpY3VsdCwgd2UgcHJvbWlzZSEgVGhlIHJlYXNvbiB3aHkg
dGhlIEpXVCBzcGVjaWZpY2F0aW9uLCBhbmQgCmNvbnNlcXVlbnRseSBKSldU
LCBtYW5kYXRlcyBrZXkgbGVuZ3RocyBpcyB0aGF0IHRoZSBzZWN1cml0eSBt
b2RlbCBvZiBhIHBhcnRpY3VsYXIgYWxnb3JpdGhtIGNhbiBjb21wbGV0ZWx5
IGJyZWFrIApkb3duIGlmIHlvdSBkb24ndCBhZGhlcmUgdG8gdGhlIG1hbmRh
dG9yeSBrZXkgcHJvcGVydGllcyBvZiB0aGUgYWxnb3JpdGhtLCBlZmZlY3Rp
dmVseSBoYXZpbmcgbm8gc2VjdXJpdHkgYXQgYWxsLiAgTm8gCm9uZSB3YW50
cyBjb21wbGV0ZWx5IGluc2VjdXJlIEpXVHMsIHJpZ2h0PyAgTmVpdGhlciB3
b3VsZCB3ZS4KClNvIHdoYXQgYXJlIHRoZSByZXF1aXJlbWVudHM/Cgo8YSBu
YW1lPSJqd3Mta2V5LWhtYWNzaGEiPjwvYT4KIyMjIyBITUFDLVNIQQoKSldU
IEhNQUMtU0hBIHNpZ25hdHVyZSBhbGdvcml0aG1zIGBIUzI1NmAsIGBIUzM4
NGAsIGFuZCBgSFM1MTJgIHJlcXVpcmUgYSBzZWNyZXQga2V5IHRoYXQgaXMg
X2F0IGxlYXN0XyBhcyBtYW55IGJpdHMgYXMKdGhlIGFsZ29yaXRobSdzIHNp
Z25hdHVyZSAoZGlnZXN0KSBsZW5ndGggcGVyIFtSRkMgNzUxMiBTZWN0aW9u
IDMuMl0oaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzc1MTgjc2Vj
dGlvbi0zLjIpLiAKVGhpcyBtZWFuczoKCiogYEhTMjU2YCBpcyBITUFDLVNI
QS0yNTYsIGFuZCB0aGF0IHByb2R1Y2VzIGRpZ2VzdHMgdGhhdCBhcmUgMjU2
IGJpdHMgKDMyIGJ5dGVzKSBsb25nLCBzbyBgSFMyNTZgIF9yZXF1aXJlc18g
dGhhdCB5b3UKICB1c2UgYSBzZWNyZXQga2V5IHRoYXQgaXMgYXQgbGVhc3Qg
MzIgYnl0ZXMgbG9uZy4KICAKKiBgSFMzODRgIGlzIEhNQUMtU0hBLTM4NCwg
YW5kIHRoYXQgcHJvZHVjZXMgZGlnZXN0cyB0aGF0IGFyZSAzODQgYml0cyAo
NDggYnl0ZXMpIGxvbmcsIHNvIGBIUzM4NGAgX3JlcXVpcmVzXyB0aGF0IHlv
dQogIHVzZSBhIHNlY3JldCBrZXkgdGhhdCBpcyBhdCBsZWFzdCA0OCBieXRl
cyBsb25nLiAKCiogYEhTNTEyYCBpcyBITUFDLVNIQS01MTIsIGFuZCB0aGF0
IHByb2R1Y2VzIGRpZ2VzdHMgdGhhdCBhcmUgNTEyIGJpdHMgKDY0IGJ5dGVz
KSBsb25nLCBzbyBgSFM1MTJgIF9yZXF1aXJlc18gdGhhdCB5b3UKICB1c2Ug
YSBzZWNyZXQga2V5IHRoYXQgaXMgYXQgbGVhc3QgNjQgYnl0ZXMgbG9uZy4g
CiAgCjxhIG5hbWU9Imp3cy1rZXktcnNhIj48L2E+CiMjIyMgUlNBCgpKV1Qg
UlNBIHNpZ25hdHVyZSBhbGdvcml0aG1zIGBSUzI1NmAsIGBSUzM4NGAsIGBS
UzUxMmAsIGBQUzI1NmAsIGBQUzM4NGAgYW5kIGBQUzUxMmAgYWxsIHJlcXVp
cmUgYSBtaW5pbXVtIGtleSBsZW5ndGgKKGFrYSBhbiBSU0EgbW9kdWx1cyBi
aXQgbGVuZ3RoKSBvZiBgMjA0OGAgYml0cyBwZXIgUkZDIDc1MTIgU2VjdGlv
bnMgClszLjNdKGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM3NTE4
I3NlY3Rpb24tMy4zKSBhbmQgWzMuNV0oaHR0cHM6Ly90b29scy5pZXRmLm9y
Zy9odG1sL3JmYzc1MTgjc2VjdGlvbi0zLjUpLiAKQW55dGhpbmcgc21hbGxl
ciB0aGFuIHRoaXMgKHN1Y2ggYXMgMTAyNCBiaXRzKSB3aWxsIGJlIHJlamVj
dGVkIHdpdGggYW4gYEludmFsaWRLZXlFeGNlcHRpb25gLgoKVGhhdCBzYWlk
LCBpbiBrZWVwaW5nIHdpdGggYmVzdCBwcmFjdGljZXMgYW5kIGluY3JlYXNp
bmcga2V5IGxlbmd0aHMgZm9yIHNlY3VyaXR5IGxvbmdldml0eSwgSkpXVCAK
cmVjb29tbWVuZHMgdGhhdCB5b3UgdXNlOgoKKiBhdCBsZWFzdCAyMDQ4IGJp
dCBrZXlzIHdpdGggYFJTMjU2YCBhbmQgYFBTMjU2YAoqIGF0IGxlYXN0IDMw
NzIgYml0IGtleXMgd2l0aCBgUlMzODRgIGFuZCBgUFMzODRgCiogYXQgbGVh
c3QgNDA5NiBiaXQga2V5cyB3aXRoIGBSUzUxMmAgYW5kIGBQUzUxMmAKClRo
ZXNlIGFyZSBvbmx5IEpKV1Qgc3VnZ2VzdGlvbnMgYW5kIG5vdCByZXF1aXJl
bWVudHMuIEpKV1Qgb25seSBlbmZvcmNlcyBKV1Qgc3BlY2lmaWNhdGlvbiBy
ZXF1aXJlbWVudHMgYW5kCmZvciBhbnkgUlNBIGtleSwgdGhlIHJlcXVpcmVt
ZW50IGlzIHRoZSBSU0Ega2V5IChtb2R1bHVzKSBsZW5ndGggaW4gYml0cyBN
VVNUIGJlID49IDIwNDggYml0cy4KCjxhIG5hbWU9Imp3cy1rZXktZWNkc2Ei
PjwvYT4KIyMjIyBFbGxpcHRpYyBDdXJ2ZQoKSldUIEVsbGlwdGljIEN1cnZl
IHNpZ25hdHVyZSBhbGdvcml0aG1zIGBFUzI1NmAsIGBFUzM4NGAsIGFuZCBg
RVM1MTJgIGFsbCByZXF1aXJlIGEgbWluaW11bSBrZXkgbGVuZ3RoCihha2Eg
YW4gRWxsaXB0aWMgQ3VydmUgb3JkZXIgYml0IGxlbmd0aCkgdGhhdCBpcyBf
YXQgbGVhc3RfIGFzIG1hbnkgYml0cyBhcyB0aGUgYWxnb3JpdGhtIHNpZ25h
dHVyZSdzIGluZGl2aWR1YWwgCmBSYCBhbmQgYFNgIGNvbXBvbmVudHMgcGVy
IFtSRkMgNzUxMiBTZWN0aW9uIDMuNF0oaHR0cHM6Ly90b29scy5pZXRmLm9y
Zy9odG1sL3JmYzc1MTgjc2VjdGlvbi0zLjQpLiAgVGhpcyBtZWFuczoKCiog
YEVTMjU2YCByZXF1aXJlcyB0aGF0IHlvdSB1c2UgYSBwcml2YXRlIGtleSB0
aGF0IGlzIGF0IGxlYXN0IDI1NiBiaXRzICgzMiBieXRlcykgbG9uZy4KICAK
KiBgRVMzODRgIHJlcXVpcmVzIHRoYXQgeW91IHVzZSBhIHByaXZhdGUga2V5
IHRoYXQgaXMgYXQgbGVhc3QgMzg0IGJpdHMgKDQ4IGJ5dGVzKSBsb25nLgoK
KiBgRVM1MTJgIHJlcXVpcmVzIHRoYXQgeW91IHVzZSBhIHByaXZhdGUga2V5
IHRoYXQgaXMgYXQgbGVhc3QgNTEyIGJpdHMgKDY0IGJ5dGVzKSBsb25nLgoK
PGEgbmFtZT0iandzLWtleS1jcmVhdGUiPjwvYT4KIyMjIyBDcmVhdGluZyBT
YWZlIEtleXMKCklmIHlvdSBkb24ndCB3YW50IHRvIHRoaW5rIGFib3V0IGJp
dCBsZW5ndGggcmVxdWlyZW1lbnRzIG9yIGp1c3Qgd2FudCB0byBtYWtlIHlv
dXIgbGlmZSBlYXNpZXIsIEpKV1QgaGFzCnByb3ZpZGVkIHRoZSBgaW8uanNv
bndlYnRva2VuLnNlY3VyaXR5LktleXNgIHV0aWxpdHkgY2xhc3MgdGhhdCBj
YW4gZ2VuZXJhdGUgc3VmZmljaWVudGx5IHNlY3VyZSBrZXlzIGZvciBhbnkg
Z2l2ZW4KSldUIHNpZ25hdHVyZSBhbGdvcml0aG0geW91IG1pZ2h0IHdhbnQg
dG8gdXNlLgoKPGEgbmFtZT0iandzLWtleS1jcmVhdGUtc2VjcmV0Ij48L2E+
CiMjIyMjIFNlY3JldCBLZXlzCgpJZiB5b3Ugd2FudCB0byBnZW5lcmF0ZSBh
IHN1ZmZpY2llbnRseSBzdHJvbmcgYFNlY3JldEtleWAgZm9yIHVzZSB3aXRo
IHRoZSBKV1QgSE1BQy1TSEEgYWxnb3JpdGhtcywgdXNlIHRoZSAKYEtleXMu
c2VjcmV0S2V5Rm9yKFNpZ25hdHVyZUFsZ29yaXRobSlgIGhlbHBlciBtZXRo
b2Q6CgpgYGBqYXZhClNlY3JldEtleSBrZXkgPSBLZXlzLnNlY3JldEtleUZv
cihTaWduYXR1cmVBbGdvcml0aG0uSFMyNTYpOyAvL29yIEhTMzg0IG9yIEhT
NTEyCmBgYAoKVW5kZXIgdGhlIGhvb2QsIEpKV1QgdXNlcyB0aGUgSkNBIHBy
b3ZpZGVyJ3MgYEtleUdlbmVyYXRvcmAgdG8gY3JlYXRlIGEgc2VjdXJlLXJh
bmRvbSBrZXkgd2l0aCB0aGUgY29ycmVjdCBtaW5pbXVtCmxlbmd0aCBmb3Ig
dGhlIGdpdmVuIGFsZ29yaXRobS4KCklmIHlvdSBoYXZlIGFuIGV4aXN0aW5n
IEhNQUMgU0hBIGBTZWNyZXRLZXlgJ3MgCltlbmNvZGVkIGJ5dGUgYXJyYXld
KGh0dHBzOi8vZG9jcy5vcmFjbGUuY29tL2phdmFzZS84L2RvY3MvYXBpL2ph
dmEvc2VjdXJpdHkvS2V5Lmh0bWwjZ2V0RW5jb2RlZC0tKSwgeW91IGNhbiB1
c2UgCnRoZSBgS2V5cy5obWFjU2hhS2V5Rm9yYCBoZWxwZXIgbWV0aG9kLiAg
Rm9yIGV4YW1wbGU6CgpgYGBqYXZhCmJ5dGVbXSBrZXlCeXRlcyA9IGdldFNp
Z25pbmdLZXlGcm9tQXBwbGljYXRpb25Db25maWd1cmF0aW9uKCk7ClNlY3Jl
dEtleSBrZXkgPSBLZXlzLmhtYWNTaGFLZXlGb3Ioa2V5Qnl0ZXMpOwpgYGAK
CjxhIG5hbWU9Imp3cy1rZXktY3JlYXRlLWFzeW0iPjwvYT4KIyMjIyMgQXN5
bW1ldHJpYyBLZXlzCgpJZiB5b3Ugd2FudCB0byBnZW5lcmF0ZSBzdWZmaWNp
ZW50bHkgc3Ryb25nIEVsbGlwdGljIEN1cnZlIG9yIFJTQSBhc3ltbWV0cmlj
IGtleSBwYWlycyBmb3IgdXNlIHdpdGggSldUIEVDRFNBIG9yIFJTQQphbGdv
cml0aG1zLCB1c2UgdGhlIGBLZXlzLmtleVBhaXJGb3IoU2lnbmF0dXJlQWxn
b3JpdGhtKWAgaGVscGVyIG1ldGhvZDoKCmBgYGphdmEKS2V5UGFpciBrZXlQ
YWlyID0gS2V5cy5rZXlQYWlyRm9yKFNpZ25hdHVyZUFsZ29yaXRobS5SUzI1
Nik7IC8vb3IgUlMzODQsIFJTNTEyLCBQUzI1NiwgUFMzODQsIFBTNTEyLCBF
UzI1NiwgRVMzODQsIEVTNTEyCmBgYAoKWW91IHVzZSB0aGUgcHJpdmF0ZSBr
ZXkgKGBrZXlQYWlyLmdldFByaXZhdGUoKWApIHRvIGNyZWF0ZSBhIEpXUyBh
bmQgdGhlIHB1YmxpYyBrZXkgKGBrZXlQYWlyLmdldFB1YmxpYygpYCkgdG8g
CnBhcnNlL3ZlcmlmeSBhIEpXUy4KCioqTk9URTogVGhlIGBQUzI1NmAsIGBQ
UzM4NGAsIGFuZCBgUFM1MTJgIGFsZ29yaXRobXMgcmVxdWlyZSBKREsgMTEg
b3IgYSBjb21wYXRpYmxlIEpDQSBQcm92aWRlciAKKGxpa2UgQm91bmN5Q2Fz
dGxlKSBpbiB0aGUgcnVudGltZSBjbGFzc3BhdGguKiogIElmIHlvdSBhcmUg
dXNpbmcgSkRLIDEwIG9yIGVhcmxpZXIgYW5kIHlvdSB3YW50IHRvIHVzZSB0
aGVtLCBzZWUgCnRoZSBbSW5zdGFsbGF0aW9uXSgjSW5zdGFsbGF0aW9uKSBz
ZWN0aW9uIHRvIHNlZSBob3cgdG8gZW5hYmxlIEJvdW5jeUNhc3RsZS4gIEFs
bCBvdGhlciBhbGdvcml0aG1zIGFyZSBuYXRpdmVseSAKc3VwcG9ydGVkIGJ5
IHRoZSBKREsuCgo8YSBuYW1lPSJqd3MtY3JlYXRlIj48L2E+CiMjIyBDcmVh
dGluZyBhIEpXUwoKWW91IGNyZWF0ZSBhIEpXUyBhcyBmb2xsb3dzOgoKMS4g
VXNlIHRoZSBgSnd0cy5idWlsZGVyKClgIG1ldGhvZCB0byBjcmVhdGUgYSBg
Snd0QnVpbGRlcmAgaW5zdGFuY2UuICAKMi4gQ2FsbCBgSnd0QnVpbGRlcmAg
bWV0aG9kcyB0byBhZGQgaGVhZGVyIHBhcmFtZXRlcnMgYW5kIGNsYWltcyBh
cyBkZXNpcmVkLgozLiBTcGVjaWZ5IHRoZSBgU2VjcmV0S2V5YCBvciBhc3lt
bWV0cmljIGBQcml2YXRlS2V5YCB5b3Ugd2FudCB0byB1c2UgdG8gc2lnbiB0
aGUgSldULgo0LiBGaW5hbGx5LCBjYWxsIHRoZSBgY29tcGFjdCgpYCBtZXRo
b2QgdG8gY29tcGFjdCBhbmQgc2lnbiwgcHJvZHVjaW5nIHRoZSBmaW5hbCBq
d3MuCgpGb3IgZXhhbXBsZToKCmBgYGphdmEKU3RyaW5nIGp3cyA9IEp3dHMu
YnVpbGRlcigpIC8vICgxKQoKICAgIC5zZXRTdWJqZWN0KCJCb2IiKSAgICAg
IC8vICgyKSAKCiAgICAuc2lnbldpdGgoa2V5KSAgICAgICAgICAvLyAoMykK
ICAgICAKICAgIC5jb21wYWN0KCk7ICAgICAgICAgICAgIC8vICg0KQpgYGAK
CjxhIG5hbWU9Imp3cy1jcmVhdGUtaGVhZGVyIj48L2E+CiMjIyMgSGVhZGVy
IFBhcmFtZXRlcnMKCkEgSldUIEhlYWRlciBwcm92aWRlcyBtZXRhZGF0YSBh
Ym91dCB0aGUgY29udGVudHMsIGZvcm1hdCBhbmQgY3J5cHRvZ3JhcGhpYyBv
cGVyYXRpb25zIHJlbGV2YW50IHRvIHRoZSBKV1QncyBDbGFpbXMuCgpJZiB5
b3UgbmVlZCB0byBzZXQgb25lIG9yIG1vcmUgSldUIGhlYWRlciBwYXJhbWV0
ZXJzLCBzdWNoIGFzIHRoZSBga2lkYCAKWyhLZXkgSUQpIGhlYWRlciBwYXJh
bWV0ZXJdKGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM3NTE1I3Nl
Y3Rpb24tNC4xLjQpLCB5b3UgY2FuIHNpbXBseSBjYWxsCmBKd3RCdWlsZGVy
YCBgc2V0SGVhZGVyUGFyYW1gIG9uZSBvciBtb3JlIHRpbWVzIGFzIG5lZWRl
ZDoKCmBgYGphdmEKU3RyaW5nIGp3cyA9IEp3dHMuYnVpbGRlcigpCgogICAg
LnNldEhlYWRlclBhcmFtKCJraWQiLCAibXlLZXlJZCIpCiAgICAKICAgIC8v
IC4uLiBldGMgLi4uCgpgYGAKCkVhY2ggdGltZSBgc2V0SGVhZGVyUGFyYW1g
IGlzIGNhbGxlZCwgaXQgc2ltcGx5IGFwcGVuZHMgdGhlIGtleS12YWx1ZSBw
YWlyIHRvIGFuIGludGVybmFsIGBIZWFkZXJgIGluc3RhbmNlLCAKcG90ZW50
aWFsbHkgb3ZlcndyaXRpbmcgYW55IGV4aXN0aW5nIGlkZW50aWNhbGx5LW5h
bWVkIGtleS92YWx1ZSBwYWlyLgoKKipOT1RFKio6IFlvdSBkbyBub3QgbmVl
ZCB0byBzZXQgdGhlIGBhbGdgIG9yIGB6aXBgIGhlYWRlciBwYXJhbWV0ZXJz
IGFzIEpKV1Qgd2lsbCBzZXQgdGhlbSBhdXRvbWF0aWNhbGx5CmRlcGVuZGlu
ZyBvbiB0aGUgc2lnbmF0dXJlIGFsZ29yaXRobSBvciBjb21wcmVzc2lvbiBh
bGdvcml0aG0gdXNlZC4KCjxhIG5hbWU9Imp3cy1jcmVhdGUtaGVhZGVyLWlu
c3RhbmNlIj48L2E+CiMjIyMjIEhlYWRlciBJbnN0YW5jZQoKSWYgeW91IHdh
bnQgdG8gc3BlY2lmeSB0aGUgZW50aXJlIGhlYWRlciBhdCBvbmNlLCB5b3Ug
Y2FuIHVzZSB0aGUgYEp3dHMuaGVhZGVyKClgIG1ldGhvZCBhbmQgYnVpbGQg
dXAgdGhlIGhlYWRlcgpwYXJhbXRlcnMgd2l0aCBpdDoKCmBgYGphdmEKCkhl
YWRlciBoZWFkZXIgPSBKd3RzLmhlYWRlcigpOwoKcG9wdWxhdGUoaGVhZGVy
KTsgLy9pbXBsZW1lbnQgbWUKClN0cmluZyBqd3MgPSBKd3RzLmJ1aWxkZXIo
KQoKICAgIC5zZXRIZWFkZXIoaGVhZGVyKQogICAgCiAgICAvLyAuLi4gZXRj
IC4uLgoKYGBgCgoqKk5PVEUqKjogQ2FsbGluZyBgc2V0SGVhZGVyYCB3aWxs
IG92ZXJ3cml0ZSBhbnkgZXhpc3RpbmcgaGVhZGVyIG5hbWUvdmFsdWUgcGFp
cnMgd2l0aCB0aGUgc2FtZSBuYW1lcyB0aGF0IG1pZ2h0IGhhdmUgCmFscmVh
ZHkgYmVlbiBzZXQuIEluIGFsbCBjYXNlcyBob3dldmVyLCBKSldUIHdpbGwg
c3RpbGwgc2V0IChhbmQgb3ZlcndyaXRlKSBhbnkgYGFsZ2AgYW5kIGB6aXBg
IGhlYWRlcnMgcmVnYXJkbGVzcyAKaWYgdGhvc2UgYXJlIGluIHRoZSBzcGVj
aWZpZWQgYGhlYWRlcmAgb2JqZWN0IG9yIG5vdC4KCjxhIG5hbWU9Imp3cy1j
cmVhdGUtaGVhZGVyLW1hcCI+PC9hPgojIyMjIyBIZWFkZXIgTWFwCgpJZiB5
b3Ugd2FudCB0byBzcGVjaWZ5IHRoZSBlbnRpcmUgaGVhZGVyIGF0IG9uY2Ug
YW5kIHlvdSBkb24ndCB3YW50IHRvIHVzZSBgSnd0cy5oZWFkZXIoKWAsIHlv
dSBjYW4gdXNlIGBKd3RCdWlsZGVyYCAKYHNldEhlYWRlcihNYXApYCBtZXRo
b2QgaW5zdGVhZDoKCmBgYGphdmEKCk1hcDxTdHJpbmcsT2JqZWN0PiBoZWFk
ZXIgPSBnZXRNeUhlYWRlck1hcCgpOyAvL2ltcGxlbWVudCBtZQoKU3RyaW5n
IGp3cyA9IEp3dHMuYnVpbGRlcigpCgogICAgLnNldEhlYWRlcihoZWFkZXIp
CiAgICAKICAgIC8vIC4uLiBldGMgLi4uCgpgYGAKCgoqKk5PVEUqKjogQ2Fs
bGluZyBgc2V0SGVhZGVyYCB3aWxsIG92ZXJ3cml0ZSBhbnkgZXhpc3Rpbmcg
aGVhZGVyIG5hbWUvdmFsdWUgcGFpcnMgd2l0aCB0aGUgc2FtZSBuYW1lcyB0
aGF0IG1pZ2h0IGhhdmUgCmFscmVhZHkgYmVlbiBzZXQuIEluIGFsbCBjYXNl
cyBob3dldmVyLCBKSldUIHdpbGwgc3RpbGwgc2V0IChhbmQgb3ZlcndyaXRl
KSBhbnkgYGFsZ2AgYW5kIGB6aXBgIGhlYWRlcnMgcmVnYXJkbGVzcyAKaWYg
dGhvc2UgYXJlIGluIHRoZSBzcGVjaWZpZWQgYGhlYWRlcmAgb2JqZWN0IG9y
IG5vdC4KCjxhIG5hbWU9Imp3cy1jcmVhdGUtY2xhaW1zIj48L2E+CiMjIyMg
Q2xhaW1zCgpDbGFpbXMgYXJlIGEgSldUJ3MgJ2JvZHknIGFuZCBjb250YWlu
IHRoZSBpbmZvcm1hdGlvbiB0aGF0IHRoZSBKV1QgY3JlYXRvciB3aXNoZXMg
dG8gcHJlc2VudCB0byB0aGUgSldUIHJlY2lwaWVudChzKS4KCjxhIG5hbWU9
Imp3cy1jcmVhdGUtY2xhaW1zLXN0YW5kYXJkIj48L2E+CiMjIyMjIFN0YW5k
YXJkIENsYWltcwoKVGhlIGBKd3RCdWlsZGVyYCBwcm92aWRlcyBjb252ZW5p
ZW50IHNldHRlciBtZXRob2RzIGZvciBzdGFuZGFyZCByZWdpc3RlcmVkIENs
YWltIG5hbWVzIGRlZmluZWQgaW4gdGhlIEpXVCAKc3BlY2lmaWNhdGlvbi4g
IFRoZXkgYXJlOgoKKiBgc2V0SXNzdWVyYDogc2V0cyB0aGUgW2Bpc3NgIChJ
c3N1ZXIpIENsYWltXShodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZj
NzUxOSNzZWN0aW9uLTQuMS4xKQoqIGBzZXRTdWJqZWN0YDogc2V0cyB0aGUg
W2BzdWJgIChTdWJqZWN0KSBDbGFpbV0oaHR0cHM6Ly90b29scy5pZXRmLm9y
Zy9odG1sL3JmYzc1MTkjc2VjdGlvbi00LjEuMikKKiBgc2V0QXVkaWVuY2Vg
OiBzZXRzIHRoZSBbYGF1ZGAgKEF1ZGllbmNlKSBDbGFpbV0oaHR0cHM6Ly90
b29scy5pZXRmLm9yZy9odG1sL3JmYzc1MTkjc2VjdGlvbi00LjEuMykKKiBg
c2V0RXhwaXJhdGlvbmA6IHNldHMgdGhlIFtgZXhwYCAoRXhwaXJhdGlvbiBU
aW1lKSBDbGFpbV0oaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzc1
MTkjc2VjdGlvbi00LjEuNCkKKiBgc2V0Tm90QmVmb3JlYDogc2V0cyB0aGUg
W2BuYmZgIChOb3QgQmVmb3JlKSBDbGFpbV0oaHR0cHM6Ly90b29scy5pZXRm
Lm9yZy9odG1sL3JmYzc1MTkjc2VjdGlvbi00LjEuNSkKKiBgc2V0SXNzdWVk
QXRgOiBzZXRzIHRoZSBbYGlhdGAgKElzc3VlZCBBdCkgQ2xhaW1dKGh0dHBz
Oi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM3NTE5I3NlY3Rpb24tNC4xLjYp
CiogYHNldElkYDogc2V0cyB0aGUgW2BqdGlgIChKV1QgSUQpIENsYWltXSho
dHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNzUxOSNzZWN0aW9uLTQu
MS43KQoKRm9yIGV4YW1wbGU6CgpgYGBqYXZhCgpTdHJpbmcgandzID0gSnd0
cy5idWlsZGVyKCkKCiAgICAuc2V0SXNzdWVyKCJtZSIpCiAgICAuc2V0U3Vi
amVjdCgiQm9iIikKICAgIC5zZXRBdWRpZW5jZSgieW91IikKICAgIC5zZXRF
eHBpcmF0aW9uKGV4cGlyYXRpb24pIC8vYSBqYXZhLnV0aWwuRGF0ZQogICAg
LnNldE5vdEJlZm9yZShub3RCZWZvcmUpIC8vYSBqYXZhLnV0aWwuRGF0ZSAK
ICAgIC5zZXRJc3N1ZWRBdChuZXcgRGF0ZSgpKSAvLyBmb3IgZXhhbXBsZSwg
bm93CiAgICAuc2V0SWQoVVVJRC5yYW5kb21VVUlEKCkpIC8vanVzdCBhbiBl
eGFtcGxlIGlkCiAgICAKICAgIC8vLyAuLi4gZXRjIC4uLgpgYGAKCjxhIG5h
bWU9Imp3cy1jcmVhdGUtY2xhaW1zLWN1c3RvbSI+PC9hPgojIyMjIyBDdXN0
b20gQ2xhaW1zCgpJZiB5b3UgbmVlZCB0byBzZXQgb25lIG9yIG1vcmUgY3Vz
dG9tIGNsYWltcyB0aGF0IGRvbid0IG1hdGNoIHRoZSBzdGFuZGFyZCBzZXR0
ZXIgbWV0aG9kIGNsYWltcyBzaG93biBhYm92ZSwgeW91CmNhbiBzaW1wbHkg
Y2FsbCBgSnd0QnVpbGRlcmAgYGNsYWltYCBvbmUgb3IgbW9yZSB0aW1lcyBh
cyBuZWVkZWQ6CgpgYGBqYXZhClN0cmluZyBqd3MgPSBKd3RzLmJ1aWxkZXIo
KQoKICAgIC5jbGFpbSgiaGVsbG8iLCAid29ybGQiKQogICAgCiAgICAvLyAu
Li4gZXRjIC4uLgoKYGBgCgpFYWNoIHRpbWUgYGNsYWltYCBpcyBjYWxsZWQs
IGl0IHNpbXBseSBhcHBlbmRzIHRoZSBrZXktdmFsdWUgcGFpciB0byBhbiBp
bnRlcm5hbCBgQ2xhaW1zYCBpbnN0YW5jZSwgcG90ZW50aWFsbHkgCm92ZXJ3
cml0aW5nIGFueSBleGlzdGluZyBpZGVudGljYWxseS1uYW1lZCBrZXkvdmFs
dWUgcGFpci4KCk9idmlvdXNseSwgeW91IGRvIG5vdCBuZWVkIHRvIGNhbGwg
YGNsYWltYCBmb3IgYW55IFtzdGFuZGFyZCBjbGFpbSBuYW1lXSgjandzLWNy
ZWF0ZS1jbGFpbXMtc3RhbmRhcmQpIGFuZCBpdCBpcyAKcmVjb21tZW5kZWQg
aW5zdGVhZCB0byBjYWxsIHRoZSBzdGFuZGFyZCByZXNwZWN0aXZlIHNldHRl
ciBtZXRob2QgYXMgdGhpcyBlbmhhbmNlcyByZWFkYWJpbGl0eS4KCjxhIG5h
bWU9Imp3cy1jcmVhdGUtY2xhaW1zLWluc3RhbmNlIj48L2E+CiMjIyMjIyBD
bGFpbXMgSW5zdGFuY2UKCklmIHlvdSB3YW50IHRvIHNwZWNpZnkgYWxsIGNs
YWltcyBhdCBvbmNlLCB5b3UgY2FuIHVzZSB0aGUgYEp3dHMuY2xhaW1zKClg
IG1ldGhvZCBhbmQgYnVpbGQgdXAgdGhlIGNsYWltcwp3aXRoIGl0OgoKYGBg
amF2YQoKQ2xhaW1zIGNsYWltcyA9IEp3dHMuY2xhaW1zKCk7Cgpwb3B1bGF0
ZShjbGFpbXMpOyAvL2ltcGxlbWVudCBtZQoKU3RyaW5nIGp3cyA9IEp3dHMu
YnVpbGRlcigpCgogICAgLnNldENsYWltcyhjbGFpbXMpCiAgICAKICAgIC8v
IC4uLiBldGMgLi4uCgpgYGAKCioqTk9URSoqOiBDYWxsaW5nIGBzZXRDbGFp
bXNgIHdpbGwgb3ZlcndyaXRlIGFueSBleGlzdGluZyBjbGFpbSBuYW1lL3Zh
bHVlIHBhaXJzIHdpdGggdGhlIHNhbWUgbmFtZXMgdGhhdCBtaWdodCBoYXZl
IAphbHJlYWR5IGJlZW4gc2V0LgoKPGEgbmFtZT0iandzLWNyZWF0ZS1jbGFp
bXMtbWFwIj48L2E+CiMjIyMjIyBDbGFpbXMgTWFwCgpJZiB5b3Ugd2FudCB0
byBzcGVjaWZ5IGFsbCBjbGFpbXMgYXQgb25jZSBhbmQgeW91IGRvbid0IHdh
bnQgdG8gdXNlIGBKd3RzLmNsYWltcygpYCwgeW91IGNhbiB1c2UgYEp3dEJ1
aWxkZXJgIApgc2V0Q2xhaW1zKE1hcClgIG1ldGhvZCBpbnN0ZWFkOgoKYGBg
amF2YQoKTWFwPFN0cmluZyxPYmplY3Q+IGNsYWltcyA9IGdldE15Q2xhaW1z
TWFwKCk7IC8vaW1wbGVtZW50IG1lCgpTdHJpbmcgandzID0gSnd0cy5idWls
ZGVyKCkKCiAgICAuc2V0Q2xhaW1zKGNsYWltcykKICAgIAogICAgLy8gLi4u
IGV0YyAuLi4KCmBgYAoKKipOT1RFKio6IENhbGxpbmcgYHNldENsYWltc2Ag
d2lsbCBvdmVyd3JpdGUgYW55IGV4aXN0aW5nIGNsYWltIG5hbWUvdmFsdWUg
cGFpcnMgd2l0aCB0aGUgc2FtZSBuYW1lcyB0aGF0IG1pZ2h0IGhhdmUgCmFs
cmVhZHkgYmVlbiBzZXQuCgo8YSBuYW1lPSJqd3MtY3JlYXRlLWtleSI+PC9h
PgojIyMjIFNpZ25pbmcgS2V5CgpJdCBpcyByZWNvbW1lbmRlZCB0aGF0IHlv
dSBzcGVjaWZ5IHRoZSBzaWduaW5nIGtleSBieSBjYWxsaW5nIGNhbGwgdGhl
IGBKd3RCdWlsZGVyYCdzIGBzaWduV2l0aGAgbWV0aG9kIGFuZCBsZXQgSkpX
VApkZXRlcm1pbmUgdGhlIG1vc3Qgc2VjdXJlIGFsZ29yaXRobSBhbGxvd2Vk
IGZvciB0aGUgc3BlY2lmaWVkIGtleS46CgpgYGBqYXZhClN0cmluZyBqd3Mg
PSBKd3RzLmJ1aWxkZXIoKQoKICAgLy8gLi4uIGV0YyAuLi4KICAgCiAgIC5z
aWduV2l0aChrZXkpIC8vIDwtLS0KICAgCiAgIC5jb21wYWN0KCk7CmBgYAoK
Rm9yIGV4YW1wbGUsIGlmIHlvdSBjYWxsIGBzaWduV2l0aGAgd2l0aCBhIGBT
ZWNyZXRLZXlgIHRoYXQgaXMgMjU2IGJpdHMgKDMyIGJ5dGVzKSBsb25nLCBp
dCBpcyBub3Qgc3Ryb25nIGVub3VnaCBmb3IKYEhTMzg0YCBvciBgSFM1MTJg
LCBzbyBKSldUIHdpbGwgYXV0b21hdGljYWxseSBzaWduIHRoZSBKV1QgdXNp
bmcgYEhTMjU2YC4KCldoZW4gdXNpbmcgYHNpZ25XaXRoYCBKSldUIHdpbGwg
YWxzbyBhdXRvbWF0aWNhbGx5IHNldCB0aGUgcmVxdWlyZWQgYGFsZ2AgaGVh
ZGVyIHdpdGggdGhlIGFzc29jaWF0ZWQgYWxnb3JpdGhtIAppZGVudGlmaWVy
LgoKU2ltaWxhcmx5LCBpZiB5b3UgY2FsbGVkIGBzaWduV2l0aGAgd2l0aCBh
biBSU0EgYFByaXZhdGVLZXlgIHRoYXQgd2FzIDQwOTYgYml0cyBsb25nLCBK
SldUIHdpbGwgdXNlIHRoZSBgUlM1MTJgCmFsZ29yaXRobSBhbmQgYXV0b21h
dGljYWxseSBzZXQgdGhlIGBhbGdgIGhlYWRlciB0byBgUlM1MTJgLgoKVGhl
IHNhbWUgc2VsZWN0aW9uIGxvZ2ljIGFwcGxpZXMgZm9yIEVsbGlwdGljIEN1
cnZlIGBQcml2YXRlS2V5YHMuCgoqKk5PVEU6IFlvdSBjYW5ub3Qgc2lnbiBK
V1RzIHdpdGggYFB1YmxpY0tleWBzIGFzIHRoaXMgaXMgYWx3YXlzIGluc2Vj
dXJlLioqIEpKV1Qgd2lsbCByZWplY3QgYW55IHNwZWNpZmllZApgUHVibGlj
S2V5YCBmb3Igc2lnbmluZyB3aXRoIGFuIGBJbnZhbGlkS2V5RXhjZXB0aW9u
YC4gCgo8YSBuYW1lPSJqd3MtY3JlYXRlLWtleS1hbGdvdmVycmlkZSI+PC9h
PgojIyMjIyBTaWduYXR1cmVBbGdvcml0aG0gT3ZlcnJpZGUKCkluIHNvbWUg
c3BlY2lmaWMgY2FzZXMsIHlvdSBtaWdodCB3YW50IHRvIG92ZXJyaWRlIEpK
V1QncyBkZWZhdWx0IHNlbGVjdGVkIGFsZ29yaXRobSBmb3IgYSBnaXZlbiBr
ZXkuCgpGb3IgZXhhbXBsZSwgaWYgeW91IGhhdmUgYW4gUlNBIGBQcml2YXRl
S2V5YCB0aGF0IGlzIDIwNDggYml0cywgSkpXVCB3b3VsZCBhdXRvbWF0aWNh
bGx5IGNob29zZSB0aGUgYFJTMjU2YCBhbGdvcml0aG0uCklmIHlvdSB3YW50
ZWQgdG8gdXNlIGBSUzM4NGAgb3IgYFJTNTEyYCBpbnN0ZWFkLCB5b3UgY291
bGQgbWFudWFsbHkgc3BlY2lmeSBpdCB3aXRoIHRoZSBvdmVybG9hZGVkIGBz
aWduV2l0aGAgbWV0aG9kCnRoYXQgYWNjZXB0cyB0aGUgYFNpZ25hdHVyZUFs
Z29yaXRobWAgYXMgYW4gYWRkaXRpb25hbCBwYXJhbWV0ZXI6CgpgYGBqYXZh
CgogICAuc2lnbldpdGgocHJpdmF0ZUtleSwgU2lnbmF0dXJlQWxnb3JpdGht
LlJTNTEyKSAvLyA8LS0tCiAgIAogICAuY29tcGFjdCgpOwoKYGBgCgpUaGlz
IGlzIGFsbG93ZWQgYmVjYXVzZSB0aGUgSldUIHNwZWNpZmljYXRpb24gYWxs
b3dzIGFueSBSU0EgYWxnb3JpdGhtIHN0cmVuZ3RoIGZvciBhbnkgUlNBIGtl
eSA+PSAyMDQ4IGJpdHMuICBKSldUIGp1c3QKcHJlZmVycyBgUlM1MTJgIGZv
ciBrZXlzID49IDQwOTYgYml0cywgZm9sbG93ZWQgYnkgYFJTMzg0YCBmb3Ig
a2V5cyA+PSAzMDcyIGJpdHMgYW5kIGZpbmFsbHkgYFJTMjU2YCBmb3Iga2V5
cyA+PSAyMDQ4CmJpdHMuCgoqKkluIGFsbCBjYXNlcyBob3dldmVyLCByZWdh
cmRsZXNzIG9mIHlvdXIgY2hvc2VuIGFsZ29yaXRobXMsIEpKV1Qgd2lsbCBh
c3NlcnQgdGhhdCB0aGUgc3BlY2lmaWVkIGtleSBpcyBhbGxvd2VkIHRvIGJl
IAp1c2VkIGZvciB0aGF0IGFsZ29yaXRobSBhY2NvcmRpbmcgdG8gdGhlIEpX
VCBzcGVjaWZpY2F0aW9uIHJlcXVpcmVtZW50cy4qKgoKPGEgbmFtZT0iandz
LWNyZWF0ZS1jb21wcmVzc2lvbiI+PC9hPgojIyMjIEpXUyBDb21wcmVzc2lv
bgoKSWYgeW91ciBKV1QgY2xhaW1zIHNldCBpcyBsYXJnZSAoY29udGFpbnMg
YSBsb3Qgb2YgZGF0YSksIGFuZCB5b3UgYXJlIGNlcnRhaW4gdGhhdCBKSldU
IHdpbGwgYWxzbyBiZSB0aGUgc2FtZSBsaWJyYXJ5IAp0aGF0IHJlYWRzL3Bh
cnNlcyB5b3VyIEpXUywgeW91IG1pZ2h0IHdhbnQgdG8gY29tcHJlc3MgdGhl
IEpXUyB0byByZWR1Y2UgaXRzIHNpemUuICBOb3RlIHRoYXQgdGhpcyBpcwoq
bm90KiBhIHN0YW5kYXJkIGZlYXR1cmUgZm9yIEpXUyBhbmQgaXMgbm90IGxp
a2VseSB0byBiZSBzdXBwb3J0ZWQgYnkgb3RoZXIgSldUIGxpYnJhcmllcy4K
ClBsZWFzZSBzZWUgdGhlIG1haW4gW0NvbXByZXNzaW9uXSgjY29tcHJlc3Np
b24pIHNlY3Rpb24gdG8gc2VlIGhvdyB0byBjb21wcmVzcyBhbmQgZGVjb21w
cmVzcyBKV1RzLgoKPGEgbmFtZT0iandzLXJlYWQiPjwvYT4KIyMjIFJlYWRp
bmcgYSBKV1MKCllvdSByZWFkIChwYXJzZSkgYSBKV1MgYXMgZm9sbG93czoK
CjEuIFVzZSB0aGUgYEp3dHMucGFyc2VyKClgIG1ldGhvZCB0byBjcmVhdGUg
YSBgSnd0UGFyc2VyYCBpbnN0YW5jZS4gIAoyLiBTcGVjaWZ5IHRoZSBgU2Vj
cmV0S2V5YCBvciBhc3ltbWV0cmljIGBQdWJsaWNLZXlgIHlvdSB3YW50IHRv
IHVzZSB0byB2ZXJpZnkgdGhlIEpXUyBzaWduYXR1cmUuPHN1cD4xPC9zdXA+
CjMuIEZpbmFsbHksIGNhbGwgdGhlIGBwYXJzZUNsYWltc0p3cyhTdHJpbmcp
YCBtZXRob2Qgd2l0aCB5b3VyIGp3cyBgU3RyaW5nYCwgcHJvZHVjaW5nIHRo
ZSBvcmlnaW5hbCBKV1MuCjQuIFRoZSBlbnRpcmUgY2FsbCBpcyB3cmFwcGVk
IGluIGEgdHJ5L2NhdGNoIGJsb2NrIGluIGNhc2UgcGFyc2luZyBvciBzaWdu
YXR1cmUgdmFsaWRhdGlvbiBmYWlscy4gIFdlJ2xsIGNvdmVyCiAgIGV4Y2Vw
dGlvbnMgYW5kIGNhdXNlcyBmb3IgZmFpbHVyZSBsYXRlci4KCjxzdXA+MS4g
SWYgeW91IGRvbid0IGtub3cgd2hpY2gga2V5IHRvIHVzZSBhdCB0aGUgdGlt
ZSBvZiBwYXJzaW5nLCB5b3UgY2FuIGxvb2sgdXAgdGhlIGtleSB1c2luZyBh
IGBTaWduaW5nS2V5UmVzb2x2ZXJgIAp3aGljaCBbd2UnbGwgY292ZXIgbGF0
ZXJdKCNqd3MtcmVhZC1rZXktcmVzb2x2ZXIpLjwvc3VwPgoKRm9yIGV4YW1w
bGU6CgpgYGBqYXZhCkp3czxDbGFpbXM+IGp3czsKCnRyeSB7CiAgICBqd3Mg
PSBKd3RzLnBhcnNlcigpICAgICAgICAgLy8gKDEpCiAgICAuc2V0U2lnbmlu
Z0tleShrZXkpICAgICAgICAgLy8gKDIpCiAgICAucGFyc2VDbGFpbXNKd3Mo
andzU3RyaW5nKTsgLy8gKDMpCiAgICAKICAgIC8vIHdlIGNhbiBzYWZlbHkg
dHJ1c3QgdGhlIEpXVAogICAgIAp9IGNhdGNoIChKd3RFeGNlcHRpb24gZXgp
IHsgICAgIC8vICg0KQogICAgCiAgICAvLyB3ZSAqY2Fubm90KiB1c2UgdGhl
IEpXVCBhcyBpbnRlbmRlZCBieSBpdHMgY3JlYXRvcgp9CmBgYAoKKipOT1RF
OiBJZiB5b3UgZXhwZWN0aW5nIGEgSldTLCBhbHdheXMgY2FsbCBgSnd0UGFy
c2VyYCdzIGBwYXJzZUNsYWltc0p3c2AgbWV0aG9kKiogKGFuZCBub3Qgb25l
IG9mIHRoZSBvdGhlciBzaW1pbGFyIG1ldGhvZHMgCmF2YWlsYWJsZSkgYXMg
dGhpcyBndWFyYW50ZWVzIHRoZSBjb3JyZWN0IHNlY3VyaXR5IG1vZGVsIGZv
ciBwYXJzaW5nIHNpZ25lZCBKV1RzLgoKPGEgbmFtZT0iandzLXJlYWQta2V5
Ij48L2E+CiMjIyMgVmVyaWZpY2F0aW9uIEtleQoKVGhlIG1vc3QgaW1wb3J0
YW50IHRoaW5nIHRvIGRvIHdoZW4gcmVhZGluZyBhIEpXUyBpcyB0byBzcGVj
aWZ5IHRoZSBrZXkgdG8gdXNlIHRvIHZlcmlmeSB0aGUgSldTJ3MKY3J5cHRv
Z3JhcGhpYyBzaWduYXR1cmUuICBJZiBzaWduYXR1cmUgdmVyaWZpY2F0aW9u
IGZhaWxzLCB0aGUgSldUIGNhbm5vdCBiZSBzYWZlbHkgdHJ1c3RlZCBhbmQg
c2hvdWxkIGJlIApkaXNjYXJkZWQuCgpTbyB3aGljaCBrZXkgZG8gd2UgdXNl
IGZvciB2ZXJpZmljYXRpb24/CgoqIElmIHRoZSBqd3Mgd2FzIHNpZ25lZCB3
aXRoIGEgYFNlY3JldEtleWAsIHRoZSBzYW1lIGBTZWNyZXRLZXlgIHNob3Vs
ZCBiZSBzcGVjaWZpZWQgb24gdGhlIGBKd3RQYXJzZXJgLiAgRm9yIGV4YW1w
bGU6CgogIGBgYGphdmEKICBKd3RzLnBhcnNlcigpCiAgICAgIAogICAgLnNl
dFNpZ25pbmdLZXkoc2VjcmV0S2V5KSAvLyA8LS0tLQogICAgCiAgICAucGFy
c2VDbGFpbXNKd3MoandzU3RyaW5nKTsKICBgYGAKKiBJZiB0aGUgandzIHdh
cyBzaWduZWQgd2l0aCBhIGBQcml2YXRlS2V5YCwgdGhhdCBrZXkncyBjb3Jy
ZXNwb25kaW5nIGBQdWJsaWNLZXlgIChub3QgdGhlIGBQcml2YXRlS2V5YCkg
c2hvdWxkIGJlIAogIHNwZWNpZmllZCBvbiB0aGUgYEp3dFBhcnNlcmAuICBG
b3IgZXhhbXBsZToKCiAgYGBgamF2YQogIEp3dHMucGFyc2VyKCkKICAgICAg
CiAgICAuc2V0U2lnbmluZ0tleShwdWJsaWNLZXkpIC8vIDwtLS0tIHB1Ymxp
Y0tleSwgbm90IHByaXZhdGVLZXkKICAgIAogICAgLnBhcnNlQ2xhaW1zSndz
KGp3c1N0cmluZyk7CiAgYGBgCiAgCkJ1dCB5b3UgbWlnaHQgaGF2ZSBub3Rp
Y2VkIHNvbWV0aGluZyAtIHdoYXQgaWYgeW91ciBhcHBsaWNhdGlvbiBkb2Vz
bid0IHVzZSBqdXN0IGEgc2luZ2xlIFNlY3JldEtleSBvciBLZXlQYWlyPyBX
aGF0CmlmIEpXU3MgY2FuIGJlIGNyZWF0ZWQgd2l0aCBkaWZmZXJlbnQgYFNl
Y3JldEtleWBzIG9yIHB1YmxpYy9wcml2YXRlIGtleXMsIG9yIGEgY29tYmlu
YXRpb24gb2YgYm90aD8gIEhvdyBkbyB5b3UKa25vdyB3aGljaCBrZXkgdG8g
c3BlY2lmeSBpZiB5b3UgY2FuJ3QgaW5zcGVjdCB0aGUgSldUIGZpcnN0PwoK
SW4gdGhlc2UgY2FzZXMsIHlvdSBjYW4ndCBjYWxsIHRoZSBgSnd0UGFyc2Vy
YCdzIGBzZXRTaWduaW5nS2V5YCBtZXRob2Qgd2l0aCBhIHNpbmdsZSBrZXkg
LSBpbnN0ZWFkLCB5b3UnbGwgbmVlZAp0byB1c2UgYSBgU2lnbmluZ0tleVJl
c29sdmVyYCwgY292ZXJlZCBuZXh0LgoKPGEgbmFtZT0iandzLXJlYWQta2V5
LXJlc29sdmVyIj48L2E+CiMjIyMjIFNpZ25pbmcgS2V5IFJlc29sdmVyCgpJ
ZiB5b3VyIGFwcGxpY2F0aW9uIGV4cGVjdHMgSldTcyB0aGF0IGNhbiBiZSBz
aWduZWQgd2l0aCBkaWZmZXJlbnQga2V5cywgeW91IHdvbid0IGNhbGwgdGhl
IGBzZXRTaWduaW5nS2V5YCBtZXRob2QuCkluc3RlYWQsIHlvdSdsbCBuZWVk
IHRvIGltcGxlbWVudCB0aGUgCmBTaWduaW5nS2V5UmVzb2x2ZXJgIGludGVy
ZmFjZSBhbmQgc3BlY2lmeSBhbiBpbnN0YW5jZSBvbiB0aGUgYEp3dFBhcnNl
cmAgdmlhIHRoZSBgc2V0U2lnbmluZ0tleVJlc29sdmVyYCBtZXRob2QuICAK
Rm9yIGV4YW1wbGU6CgpgYGBqYXZhClNpZ25pbmdLZXlSZXNvbHZlciBzaWdu
aW5nS2V5UmVzb2x2ZXIgPSBnZXRNeVNpZ25pbmdLZXlSZXNvbHZlcigpOwoK
Snd0cy5wYXJzZXIoKQoKICAgIC5zZXRTaWduaW5nS2V5UmVzb2x2ZXIoc2ln
bmluZ0tleVJlc29sdmVyKSAvLyA8LS0tLQogICAgCiAgICAucGFyc2VDbGFp
bXNKd3MoandzU3RyaW5nKTsKYGBgCgpZb3UgY2FuIHNpbXBsaWZ5IHRoaW5n
cyBhIGxpdHRsZSBieSBleHRlbmRpbmcgZnJvbSB0aGUgYFNpZ25pbmdLZXlS
ZXNvbHZlckFkYXB0ZXJgIGFuZCBpbXBsZW1lbnRpbmcgdGhlIApgcmVzb2x2
ZVNpZ25pbmdLZXkoSndzSGVhZGVyLCBDbGFpbXMpYCBtZXRob2QuICBGb3Ig
ZXhhbXBsZToKCmBgYGphdmEKcHVibGljIGNsYXNzIE15U2lnbmluZ0tleVJl
c29sdmVyIGV4dGVuZHMgU2lnbmluZ0tleVJlc29sdmVyQWRhcHRlciB7CiAg
ICAKICAgIEBPdmVycmlkZQogICAgcHVibGljIEtleSByZXNvbHZlU2lnbmlu
Z0tleShKd3NIZWFkZXIgandzSGVhZGVyLCBDbGFpbXMgY2xhaW1zKSB7CiAg
ICAgICAgLy8gaW1wbGVtZW50IG1lCiAgICB9Cn0KYGBgCgpUaGUgYEp3dFBh
cnNlcmAgd2lsbCBpbnZva2UgdGhlIGByZXNvbHZlU2lnbmluZ0tleWAgbWV0
aG9kIGFmdGVyIHBhcnNpbmcgdGhlIEpXUyBKU09OLCBidXQgX2JlZm9yZSB2
ZXJpZnlpbmcgdGhlCmp3cyBzaWduYXR1cmVfLiAgVGhpcyBhbGxvd3MgeW91
IHRvIGluc3BlY3QgdGhlIGBKd3NIZWFkZXJgIGFuZCBgQ2xhaW1zYCBhcmd1
bWVudHMgZm9yIGFueSBpbmZvcm1hdGlvbiB0aGF0IGNhbgpoZWxwIHlvdSBs
b29rIHVwIHRoZSBgS2V5YCB0byB1c2UgZm9yIHZlcmlmeWluZyBfdGhhdCBz
cGVjaWZpYyBqd3NfLiAgVGhpcyBpcyB2ZXJ5IHBvd2VyZnVsIGZvciBhcHBs
aWNhdGlvbnMKd2l0aCBtb3JlIGNvbXBsZXggc2VjdXJpdHkgbW9kZWxzIHRo
YXQgbWlnaHQgdXNlIGRpZmZlcmVudCBrZXlzIGF0IGRpZmZlcmVudCB0aW1l
cyBvciBmb3IgZGlmZmVyZW50IHVzZXJzIG9yIGN1c3RvbWVycy4KCldoaWNo
IGRhdGEgbWlnaHQgeW91IGluc3BlY3Q/CgpUaGUgSldUIHNwZWNpZmljYXRp
b24ncyBzdXBwb3J0ZWQgd2F5IHRvIGRvIHRoaXMgaXMgdG8gc2V0IGEgYGtp
ZGAgKEtleSBJRCkgZmllbGQgaW4gdGhlIEpXUyBoZWFkZXIgd2hlbiB0aGUg
SldTIGlzIApiZWluZyBjcmVhdGVkLCBmb3IgZXhhbXBsZToKCmBgYGphdmEK
CktleSBzaWduaW5nS2V5ID0gZ2V0U2lnbmluZ0tleSgpOwoKU3RyaW5nIGtl
eUlkID0gZ2V0S2V5SWQoc2lnbmluZ0tleSk7IC8vYW55IG1lY2hhbmlzbSB5
b3UgaGF2ZSB0byBhc3NvY2lhdGUgYSBrZXkgd2l0aCBhbiBJRCBpcyBmaW5l
CgpTdHJpbmcgandzID0gSnd0cy5idWlsZGVyKCkKICAgIAogICAgLnNldEhl
YWRlclBhcmFtKEp3c0hlYWRlci5LRVlfSUQsIGtleUlkKSAvLyAxCiAgICAK
ICAgIC5zaWduV2l0aChzaWduaW5nS2V5KSAgICAgICAgICAgICAgICAgICAg
Ly8gMgogICAgCiAgICAuY29tcGFjdCgpOwpgYGAKClRoZW4gZHVyaW5nIHBh
cnNpbmcsIHlvdXIgYFNpZ25pbmdLZXlSZXNvbHZlcmAgY2FuIGluc3BlY3Qg
dGhlIGBKd3NIZWFkZXJgIHRvIGdldCB0aGUgYGtpZGAgYW5kIHRoZW4gdXNl
IHRoYXQgdmFsdWUKdG8gbG9vayB1cCB0aGUga2V5IGZyb20gc29tZXdoZXJl
LCBsaWtlIGEgZGF0YWJhc2UuICBGb3IgZXhhbXBsZToKCmBgYGphdmEKcHVi
bGljIGNsYXNzIE15U2lnbmluZ0tleVJlc29sdmVyIGV4dGVuZHMgU2lnbmlu
Z0tleVJlc29sdmVyQWRhcHRlciB7CiAgICAKICAgIEBPdmVycmlkZQogICAg
cHVibGljIEtleSByZXNvbHZlU2lnbmluZ0tleShKd3NIZWFkZXIgandzSGVh
ZGVyLCBDbGFpbXMgY2xhaW1zKSB7CiAgICAgICAgCiAgICAgICAgLy9pbnNw
ZWN0IHRoZSBoZWFkZXIgb3IgY2xhaW1zLCBsb29rdXAgYW5kIHJldHVybiB0
aGUgc2lnbmluZyBrZXkKICAgICAgICAKICAgICAgICBTdHJpbmcga2V5SWQg
PSBqd3NIZWFkZXIuZ2V0S2V5SWQoKTsgLy9vciBhbnkgb3RoZXIgZmllbGQg
dGhhdCB5b3UgbmVlZCB0byBpbnNwZWN0CiAgICAgICAgCiAgICAgICAgS2V5
IGtleSA9IGxvb2t1cFZlcmlmaWNhdGlvbktleShrZXlJZCk7IC8vaW1wbGVt
ZW50IG1lCiAgICAgICAgCiAgICAgICAgcmV0dXJuIGtleTsKICAgIH0KfQpg
YGAKCk5vdGUgdGhhdCBpbnNwZWN0aW5nIHRoZSBgandzSGVhZGVyLmdldEtl
eUlkKClgIGlzIGp1c3QgdGhlIG1vc3QgY29tbW9uIGFwcHJvYWNoIHRvIGxv
b2sgdXAgYSBrZXkgLSB5b3UgY291bGQgCmluc3BlY3QgYW55IG51bWJlciBv
ZiBoZWFkZXIgZmllbGRzIG9yIGNsYWltcyB0byBkZXRlcm1pbmUgaG93IHRv
IGxvb2t1cCB0aGUgdmVyaWZpY2F0aW9uIGtleS4gIEl0IGlzIGFsbCBiYXNl
ZCBvbiAKaG93IHRoZSBKV1Mgd2FzIGNyZWF0ZWQuCgpGaW5hbGx5IHJlbWVt
YmVyIHRoYXQgZm9yIEhNQUMgYWxnb3JpdGhtcywgdGhlIHJldHVybmVkIHZl
cmlmaWNhdGlvbiBrZXkgc2hvdWxkIGJlIGEgYFNlY3JldEtleWAsIGFuZCBm
b3IgYXN5bW1ldHJpYyAKYWxnb3JpdGhtcywgdGhlIGtleSByZXR1cm5lZCBz
aG91bGQgYmUgYSBgUHVibGljS2V5YCAobm90IGEgYFByaXZhdGVLZXlgKS4K
CjxhIG5hbWU9Imp3cy1yZWFkLWNsYWltcyI+PC9hPgojIyMjIENsYWltIEFz
c2VydGlvbnMKCllvdSBjYW4gZW5mb3JjZSB0aGF0IHRoZSBKV1MgeW91IGFy
ZSBwYXJzaW5nIGNvbmZvcm1zIHRvIGV4cGVjdGF0aW9ucyB0aGF0IHlvdSBy
ZXF1aXJlIGFuZCBhcmUgaW1wb3J0YW50IGZvciB5b3VyIAphcHBsaWNhdGlv
bi4KCkZvciBleGFtcGxlLCBsZXQncyBzYXkgdGhhdCB5b3UgcmVxdWlyZSB0
aGF0IHRoZSBKV1MgeW91IGFyZSBwYXJzaW5nIGhhcyBhIHNwZWNpZmljIGBz
dWJgIChzdWJqZWN0KSB2YWx1ZSwKb3RoZXJ3aXNlIHlvdSBtYXkgbm90IHRy
dXN0IHRoZSB0b2tlbi4gIFlvdSBjYW4gZG8gdGhhdCBieSB1c2luZyBvbmUg
b2YgdGhlIHZhcmlvdXMgYHJlcXVpcmVgKiBtZXRob2RzIG9uIHRoZSAKYEp3
dFBhcnNlcmA6CgpgYGBqYXZhCnRyeSB7CiAgICBKd3RzLnBhcnNlcigpLnJl
cXVpcmVTdWJqZWN0KCJqc21pdGgiKS5zZXRTaWduaW5nS2V5KGtleSkucGFy
c2VDbGFpbXNKd3Mocyk7Cn0gY2F0Y2goSW52YWxpZENsYWltRXhjZXB0aW9u
IGljZSkgewogICAgLy8gdGhlIHN1YiBmaWVsZCB3YXMgbWlzc2luZyBvciBk
aWQgbm90IGhhdmUgYSAnanNtaXRoJyB2YWx1ZQp9CmBgYAoKSWYgaXQgaXMg
aW1wb3J0YW50IHRvIHJlYWN0IHRvIGEgbWlzc2luZyB2cyBhbiBpbmNvcnJl
Y3QgdmFsdWUsIGluc3RlYWQgb2YgY2F0Y2hpbmcgYEludmFsaWRDbGFpbUV4
Y2VwdGlvbmAsIAp5b3UgY2FuIGNhdGNoIGVpdGhlciBgTWlzc2luZ0NsYWlt
RXhjZXB0aW9uYCBvciBgSW5jb3JyZWN0Q2xhaW1FeGNlcHRpb25gOgoKYGBg
amF2YQp0cnkgewogICAgSnd0cy5wYXJzZXIoKS5yZXF1aXJlU3ViamVjdCgi
anNtaXRoIikuc2V0U2lnbmluZ0tleShrZXkpLnBhcnNlQ2xhaW1zSndzKHMp
Owp9IGNhdGNoKE1pc3NpbmdDbGFpbUV4Y2VwdGlvbiBtY2UpIHsKICAgIC8v
IHRoZSBwYXJzZWQgSldUIGRpZCBub3QgaGF2ZSB0aGUgc3ViIGZpZWxkCn0g
Y2F0Y2goSW5jb3JyZWN0Q2xhaW1FeGNlcHRpb24gaWNlKSB7CiAgICAvLyB0
aGUgcGFyc2VkIEpXVCBoYWQgYSBzdWIgZmllbGQsIGJ1dCBpdHMgdmFsdWUg
d2FzIG5vdCBlcXVhbCB0byAnanNtaXRoJwp9CmBgYAoKWW91IGNhbiBhbHNv
IHJlcXVpcmUgY3VzdG9tIGZpZWxkcyBieSB1c2luZyB0aGUgYHJlcXVpcmUo
ZmllbGROYW1lLCByZXF1aXJlZEZpZWxkVmFsdWUpYCBtZXRob2QgLSBmb3Ig
ZXhhbXBsZToKCmBgYGphdmEKdHJ5IHsKICAgIEp3dHMucGFyc2VyKCkucmVx
dWlyZSgibXlmaWVsZCIsICJteVJlcXVpcmVkVmFsdWUiKS5zZXRTaWduaW5n
S2V5KGtleSkucGFyc2VDbGFpbXNKd3Mocyk7Cn0gY2F0Y2goSW52YWxpZENs
YWltRXhjZXB0aW9uIGljZSkgewogICAgLy8gdGhlICdteWZpZWxkJyBmaWVs
ZCB3YXMgbWlzc2luZyBvciBkaWQgbm90IGhhdmUgYSAnbXlSZXF1aXJlZFZh
bHVlJyB2YWx1ZQp9CmBgYAoob3IsIGFnYWluLCB5b3UgY291bGQgY2F0Y2gg
ZWl0aGVyIGBNaXNzaW5nQ2xhaW1FeGNlcHRpb25gIG9yIGBJbmNvcnJlY3RD
bGFpbUV4Y2VwdGlvbmAgaW5zdGVhZCkuCgpQbGVhc2Ugc2VlIHRoZSBgSnd0
UGFyc2VyYCBjbGFzcyBhbmQvb3IgSmF2YURvYyBmb3IgYSBmdWxsIGxpc3Qg
b2YgdGhlIHZhcmlvdXMgYHJlcXVpcmVgKiBtZXRob2RzIHlvdSBtYXkgdXNl
IGZvciBjbGFpbXMKYXNzZXJ0aW9ucy4KCjxhIG5hbWU9Imp3cy1yZWFkLWNs
b2NrIj48L2E+CiMjIyMgQWNjb3VudGluZyBmb3IgQ2xvY2sgU2tldwoKV2hl
biBwYXJzaW5nIGEgSldULCB5b3UgbWlnaHQgZmluZCB0aGF0IGBleHBgIG9y
IGBuYmZgIGNsYWltIGFzc2VydGlvbnMgZmFpbCAodGhyb3cgZXhjZXB0aW9u
cykgYmVjYXVzZSB0aGUgY2xvY2sgb24gCnRoZSBwYXJzaW5nIG1hY2hpbmUg
aXMgbm90IHBlcmZlY3RseSBpbiBzeW5jIHdpdGggdGhlIGNsb2NrIG9uIHRo
ZSBtYWNoaW5lIHRoYXQgY3JlYXRlZCB0aGUgSldULiAgVGhpcyBjYW4gY2F1
c2UgCm9idmlvdXMgcHJvYmxlbXMgc2luY2UgYGV4cGAgYW5kIGBuYmZgIGFy
ZSB0aW1lLWJhc2VkIGFzc2VydGlvbnMsIGFuZCBjbG9jayB0aW1lcyBuZWVk
IHRvIGJlIHJlbGlhYmx5IGluIHN5bmMgZm9yIHNoYXJlZAphc3NlcnRpb25z
LgoKWW91IGNhbiBhY2NvdW50IGZvciB0aGVzZSBkaWZmZXJlbmNlcyAodXN1
YWxseSBubyBtb3JlIHRoYW4gYSBmZXcgbWludXRlcykgd2hlbiBwYXJzaW5n
IHVzaW5nIHRoZSBgSnd0UGFyc2VyYCdzCiBgc2V0QWxsb3dlZENsb2NrU2tl
d1NlY29uZHNgLiBGb3IgZXhhbXBsZToKCmBgYGphdmEKbG9uZyBzZWNvbmRz
ID0gMyAqIDYwOyAvLzMgbWludXRlcwoKSnd0cy5wYXJzZXIoKQogICAgCiAg
ICAuc2V0QWxsb3dlZENsb2NrU2tld1NlY29uZHMoc2Vjb25kcykgLy8gPC0t
LS0KICAgIAogICAgLy8gLi4uIGV0YyAuLi4KICAgIC5wYXJzZUNsYWltc0p3
cyhqd3QpOwpgYGAKVGhpcyBlbnN1cmVzIHRoYXQgY2xvY2sgZGlmZmVyZW5j
ZXMgYmV0d2VlbiB0aGUgbWFjaGluZXMgY2FuIGJlIGlnbm9yZWQuIFR3byBv
ciB0aHJlZSBtaW51dGVzIHNob3VsZCBiZSBtb3JlIHRoYW4gCmVub3VnaDsg
aXQgd291bGQgYmUgZmFpcmx5IHN0cmFuZ2UgaWYgYSBwcm9kdWN0aW9uIG1h
Y2hpbmUncyBjbG9jayB3YXMgbW9yZSB0aGFuIDUgbWludXRlcyBkaWZmZXJl
bmNlIGZyb20gbW9zdCAKYXRvbWljIGNsb2NrcyBhcm91bmQgdGhlIHdvcmxk
LgoKPGEgbmFtZT0iandzLXJlYWQtY2xvY2stY3VzdG9tIj48L2E+CiMjIyMj
IEN1c3RvbSBDbG9jayBTdXBwb3J0CgpJZiB0aGUgYWJvdmUgYHNldEFsbG93
ZWRDbG9ja1NrZXdTZWNvbmRzYCBpc24ndCBzdWZmaWNpZW50IGZvciB5b3Vy
IG5lZWRzLCB0aGUgdGltZXN0YW1wcyBjcmVhdGVkCmR1cmluZyBwYXJzaW5n
IGZvciB0aW1lc3RhbXAgY29tcGFyaXNvbnMgY2FuIGJlIG9idGFpbmVkIHZp
YSBhIGN1c3RvbSB0aW1lIHNvdXJjZS4gIENhbGwgdGhlIGBKd3RQYXJzZXJg
J3MgYHNldENsb2NrYAogbWV0aG9kIHdpdGggYW4gaW1wbGVtZW50YXRpb24g
b2YgdGhlIGBpby5qc29ud2VidG9rZW4uQ2xvY2tgIGludGVyZmFjZS4gIEZv
ciBleGFtcGxlOgogCiBgYGBqYXZhCkNsb2NrIGNsb2NrID0gbmV3IE15Q2xv
Y2soKTsKCkp3dHMucGFyc2VyKCkuc2V0Q2xvY2sobXlDbG9jaykgLy8uLi4g
ZXRjIC4uLgpgYGAgCgpUaGUgYEp3dFBhcnNlcmAncyBkZWZhdWx0IGBDbG9j
a2AgaW1wbGVtZW50YXRpb24gc2ltcGx5IHJldHVybnMgYG5ldyBEYXRlKClg
IHRvIHJlZmxlY3QgdGhlIHRpbWUgd2hlbiBwYXJzaW5nIG9jY3VycywgCmFz
IG1vc3Qgd291bGQgZXhwZWN0LiAgSG93ZXZlciwgc3VwcGx5aW5nIHlvdXIg
b3duIGNsb2NrIGNvdWxkIGJlIHVzZWZ1bCwgZXNwZWNpYWxseSB3aGVuIHdy
aXRpbmcgdGVzdCBjYXNlcyB0byAKZ3VhcmFudGVlIGRldGVybWluaXN0aWMg
YmVoYXZpb3IuCgo8YSBuYW1lPSJqd3MtcmVhZC1kZWNvbXByZXNzaW9uIj48
L2E+CiMjIyMgSldTIERlY29tcHJlc3Npb24KCklmIHlvdSB1c2VkIEpKV1Qg
dG8gY29tcHJlc3MgYSBKV1MgYW5kIHlvdSB1c2VkIGEgY3VzdG9tIGNvbXBy
ZXNzaW9uIGFsZ29yaXRobSwgeW91IHdpbGwgbmVlZCB0byB0ZWxsIHRoZSBg
Snd0UGFyc2VyYApob3cgdG8gcmVzb2x2ZSB5b3VyIGBDb21wcmVzc2lvbkNv
ZGVjYCB0byBkZWNvbXByZXNzIHRoZSBKV1QuCgpQbGVhc2Ugc2VlIHRoZSBb
Q29tcHJlc3Npb25dKCNjb21wcmVzc2lvbikgc2VjdGlvbiBiZWxvdyB0byBz
ZWUgaG93IHRvIGRlY29tcHJlc3MgSldUcyBkdXJpbmcgcGFyc2luZy4KCjwh
LS0gVE9ETzogIyMgRW5jcnlwdGVkIEpXVHMgLS0+Cgo8YSBuYW1lPSJjb21w
cmVzc2lvbiI+PC9hPgojIyBDb21wcmVzc2lvbgoKKipUaGUgSldUIHNwZWNp
ZmljYXRpb24gb25seSBzdGFuZGFyZGl6ZXMgdGhpcyBmZWF0dXJlIGZvciBK
V0VzIChFbmNyeXB0ZWQgSldUcykgYW5kIG5vdCBKV1NzIChTaWduZWQgSldU
cyksIGhvd2V2ZXIKSkpXVCBzdXBwb3J0cyBib3RoKiouICBJZiB5b3UgYXJl
IHBvc2l0aXZlIHRoYXQgYSBKV1MgeW91IGNyZWF0ZSB3aXRoIEpKV1Qgd2ls
bCBfYWxzb18gYmUgcGFyc2VkIHdpdGggSkpXVCwgeW91IApjYW4gdXNlIHRo
aXMgZmVhdHVyZSB3aXRoIEpXU3MsIG90aGVyd2lzZSBpdCBpcyBiZXN0IHRv
IG9ubHkgdXNlIGl0IGZvciBKV0VzLiAgCgpJZiBhIEpXVCdzIENsYWltcyBz
ZXQgaXMgc3VmZmljaWVudGx5IGxhcmdlIC0gdGhhdCBpcywgaXQgY29udGFp
bnMgYSBsb3Qgb2YgbmFtZS92YWx1ZSBwYWlycywgb3IgaW5kaXZpZHVhbCB2
YWx1ZXMgYXJlIAp2ZXJ5IGxhcmdlIG9yIHZlcmJvc2UgLSB5b3UgY2FuIHJl
ZHVjZSB0aGUgc2l6ZSBvZiB0aGUgY3JlYXRlZCBKV1MgYnkgY29tcHJlc3Np
bmcgdGhlIGNsYWltcyBib2R5LgoKVGhpcyBtaWdodCBiZSBpbXBvcnRhbnQg
dG8geW91IGlmIHRoZSByZXN1bHRpbmcgSldTIGlzIHVzZWQgaW4gYSBVUkwg
Zm9yIGV4YW1wbGUsIHNpbmNlIFVSTHMgYXJlIGJlc3Qga2VwdCB1bmRlciAK
NDA5NiBjaGFyYWN0ZXJzIGR1ZSB0byBicm93c2VyLCB1c2VyIG1haWwgYWdl
bnQsIG9yIEhUVFAgZ2F0ZXdheSBjb21wYXRpYmlsaXR5IGlzc3Vlcy4gIFNt
YWxsZXIgSldUcyBhbHNvIGhlbHAgcmVkdWNlIApiYW5kd2lkdGggdXRpbGl6
YXRpb24sIHdoaWNoIG1heSBvciBtYXkgbm90IGJlIGltcG9ydGFudCBkZXBl
bmRpbmcgb24geW91ciBhcHBsaWNhdGlvbidzIHZvbHVtZSBvciBuZWVkcy4K
CklmIHlvdSB3YW50IHRvIGNvbXByZXNzIHlvdXIgSldULCB5b3UgY2FuIHVz
ZSB0aGUgYEp3dEJ1aWxkZXJgJ3MgIGBjb21wcmVzc1dpdGgoQ29tcHJlc3Np
b25BbGdvcml0aG0pYCBtZXRob2QuICBGb3IgCmV4YW1wbGU6CgpgYGBqYXZh
CiAgIEp3dHMuYnVpbGRlcigpCiAgIAogICAuY29tcHJlc3NXaXRoKENvbXBy
ZXNzaW9uQ29kZWNzLkRFRkxBVEUpIC8vIG9yIENvbXByZXNzaW9uQ29kZWNz
LkdaSVAKICAgCiAgIC8vIC4uIGV0YyAuLi4KYGBgCgpJZiB5b3UgdXNlIHRo
ZSBgREVGTEFURWAgb3IgYEdaSVBgIENvbXByZXNzaW9uIENvZGVjcyAtIHRo
YXQncyBpdCwgeW91J3JlIGRvbmUuICBZb3UgZG9uJ3QgaGF2ZSB0byBkbyBh
bnl0aGluZyBkdXJpbmcgCnBhcnNpbmcgb3IgY29uZmlndXJlIHRoZSBgSnd0
UGFyc2VyYCBmb3IgY29tcHJlc3Npb24gLSBKSldUIHdpbGwgYXV0b21hdGlj
YWxseSBkZWNvbXByZXNzIHRoZSBib2R5IGFzIGV4cGVjdGVkLgoKPGEgbmFt
ZT0iY29tcHJlc3Npb24tY3VzdG9tIj48L2E+CiMjIyBDdXN0b20gQ29tcHJl
c3Npb24gQ29kZWMKCklmIGhvd2V2ZXIsIHlvdSB1c2VkIHlvdXIgb3duIGN1
c3RvbSBjb21wcmVzc2lvbiBjb2RlYyB3aGVuIGNyZWF0aW5nIHRoZSBKV1Qg
KHZpYSBgSnd0QnVpbGRlcmAgYGNvbXByZXNzV2l0aGApLCB0aGVuCnlvdSBu
ZWVkIHRvIHN1cHBseSB0aGUgY29kZWMgdG8gdGhlIGBKd3RQYXJzZXJgIHVz
aW5nIHRoZSBgc2V0Q29tcHJlc3Npb25Db2RlY1Jlc29sdmVyYCBtZXRob2Qu
ICBGb3IgZXhhbXBsZToKCmBgYGphdmEKQ29tcHJlc3Npb25Db2RlY1Jlc29s
dmVyIGNjciA9IG5ldyBNeUNvbXByZXNzaW9uQ29kZWNSZXNvbHZlcigpOwoK
Snd0cy5wYXJzZXIoKQoKICAgIC5zZXRDb21wcmVzc2lvbkNvZGVjUmVzb2x2
ZXIoY2NyKSAvLyA8LS0tLQogICAgCiAgICAvLyAuLiBldGMgLi4uCmBgYAoK
VHlwaWNhbGx5IGEgYENvbXByZXNzaW9uQ29kZWNSZXNvbHZlcmAgaW1wbGVt
ZW50YXRpb24gd2lsbCBpbnNwZWN0IHRoZSBgemlwYCBoZWFkZXIgdG8gZmlu
ZCBvdXQgd2hhdCBhbGdvcml0aG0gd2FzCnVzZWQgYW5kIHRoZW4gcmV0dXJu
IGEgY29kZWMgaW5zdGFuY2UgdGhhdCBzdXBwb3J0cyB0aGF0IGFsZ29yaXRo
bS4gIEZvciBleGFtcGxlOgoKYGBgamF2YQpwdWJsaWMgY2xhc3MgTXlDb21w
cmVzc2lvbkNvZGVjUmVzb2x2ZXIgaW1wbGVtZW50cyBDb21wcmVzc2lvbkNv
ZGVjUmVzb2x2ZXIgewogICAgICAgIAogICAgQE92ZXJyaWRlCiAgICBwdWJs
aWMgQ29tcHJlc3Npb25Db2RlYyByZXNvbHZlQ29tcHJlc3Npb25Db2RlYyhI
ZWFkZXIgaGVhZGVyKSB0aHJvd3MgQ29tcHJlc3Npb25FeGNlcHRpb24gewog
ICAgICAgIAogICAgICAgIFN0cmluZyBhbGcgPSBoZWFkZXIuZ2V0Q29tcHJl
c3Npb25BbGdvcml0aG0oKTsKICAgICAgICAgICAgCiAgICAgICAgQ29tcHJl
c3Npb25Db2RlYyBjb2RlYyA9IGdldENvbXByZXNzaW9uQ29kZWMoYWxnKTsg
Ly9pbXBsZW1lbnQgbWUKICAgICAgICAgICAgCiAgICAgICAgcmV0dXJuIGNv
ZGVjOwogICAgfQp9CmBgYAoKPGEgbmFtZT0ianNvbiI+PC9hPgojIyBKU09O
IFN1cHBvcnQKCkEgYEp3dEJ1aWxkZXJgIHdpbGwgc2VyaWFsaXplIHRoZSBg
SGVhZGVyYCBhbmQgYENsYWltc2AgbWFwcyAoYW5kIHBvdGVudGlhbGx5IGFu
eSBKYXZhIG9iamVjdHMgdGhleSAKY29udGFpbikgdG8gSlNPTiB3aXRoIGEg
YFNlcmlhbGl6ZXI8TWFwPFN0cmluZywgPz4+YCBpbnN0YW5jZS4gIFNpbWls
YXJseSwgYSBgSnd0UGFyc2VyYCB3aWxsIApkZXNlcmlhbGl6ZSBKU09OIGlu
dG8gdGhlIGBIZWFkZXJgIGFuZCBgQ2xhaW1zYCB1c2luZyBhIGBEZXNlcmlh
bGl6ZXI8TWFwPFN0cmluZywgPz4+YCBpbnN0YW5jZS4KCklmIHlvdSBkb24n
dCBleHBsaWNpdGx5IGNvbmZpZ3VyZSBhIGBKd3RCdWlsZGVyYCdzIGBTZXJp
YWxpemVyYCBvciBhIGBKd3RQYXJzZXJgJ3MgYERlc2VyaWFsaXplcmAsIEpK
V1Qgd2lsbCAKYXV0b21hdGljYWxseSBhdHRlbXB0IHRvIGRpc2NvdmVyIGFu
ZCB1c2UgdGhlIGZvbGxvd2luZyBKU09OIGltcGxlbWVudGF0aW9ucyBpZiBm
b3VuZCBpbiB0aGUgcnVudGltZSBjbGFzc3BhdGguICAKVGhleSBhcmUgY2hl
Y2tlZCBpbiBvcmRlciwgYW5kIHRoZSBmaXJzdCBvbmUgZm91bmQgaXMgdXNl
ZDoKCjEuIEphY2tzb246IFRoaXMgd2lsbCBhdXRvbWF0aWNhbGx5IGJlIHVz
ZWQgaWYgeW91IHNwZWNpZnkgYGlvLmpzb253ZWJ0b2tlbjpqand0LWphY2tz
b25gIGFzIGEgcHJvamVjdCBydW50aW1lIAogICBkZXBlbmRlbmN5LiAgSmFj
a3NvbiBzdXBwb3J0cyBQT0pPcyBhcyBjbGFpbXMgd2l0aCBmdWxsIG1hcnNo
YWxpbmcvdW5tYXJzaGFsaW5nIGFzIG5lY2Vzc2FyeS4KICAgCjIuIEpTT04t
SmF2YSAoYG9yZy5qc29uYCk6IFRoaXMgd2lsbCBiZSB1c2VkIGF1dG9tYXRp
Y2FsbHkgaWYgeW91IHNwZWNpZnkgYGlvLmpzb253ZWJ0b2tlbjpqand0LW9y
Z2pzb25gIGFzIGEgCiAgIHByb2plY3QgcnVudGltZSBkZXBlbmRlbmN5Lgog
ICAKICAgKipOT1RFOioqIGBvcmcuanNvbmAgQVBJcyBhcmUgbmF0aXZlbHkg
ZW5hYmxlZCBpbiBBbmRyb2lkIGVudmlyb25tZW50cyBzbyB0aGlzIGlzIHRo
ZSByZWNvbW1lbmRlZCBKU09OIHByb2Nlc3NvciBmb3IgCiAgIEFuZHJvaWQg
YXBwbGljYXRpb25zIF91bmxlc3NfIHlvdSB3YW50IHRvIHVzZSBQT0pPcyBh
cyBjbGFpbXMuICBUaGUgYG9yZy5qc29uYCBsaWJyYXJ5IHN1cHBvcnRzIHNp
bXBsZSAKICAgT2JqZWN0LXRvLUpTT04gbWFyc2hhbGluZywgYnV0IGl0ICpk
b2VzIG5vdCogc3VwcG9ydCBKU09OLXRvLU9iamVjdCB1bm1hcnNoYWxsaW5n
LgoKKipJZiB5b3Ugd2FudCB0byB1c2UgUE9KT3MgYXMgY2xhaW0gdmFsdWVz
LCB1c2UgdGhlIGBpby5qc29ud2VidG9rZW46amp3dC1qYWNrc29uYCBkZXBl
bmRlbmN5KiogKG9yIGltcGxlbWVudCB5b3VyIG93bgpTZXJpYWxpemVyIGFu
ZCBEZXNlcmlhbGl6ZXIgaWYgZGVzaXJlZCkuICAqKkJ1dCBiZXdhcmUqKiwg
SmFja3NvbiB3aWxsIGZvcmNlIGEgc2l6YWJsZSAoPiAxIE1CKSBkZXBlbmRl
bmN5IHRvIGFuIApBbmRyb2lkIGFwcGxpY2F0aW9uIHRodXMgaW5jcmVhc2lu
ZyB0aGUgYXBwIGRvd25sb2FkIHNpemUgZm9yIG1vYmlsZSB1c2Vycy4KCjxh
IG5hbWU9Impzb24tY3VzdG9tIj48L2E+CiMjIyBDdXN0b20gSlNPTiBQcm9j
ZXNzb3IKCklmIHlvdSBkb24ndCB3YW50IHRvIHVzZSBKSldUJ3MgcnVudGlt
ZSBkZXBlbmRlbmN5IGFwcHJvYWNoLCBvciBqdXN0IHdhbnQgdG8gY3VzdG9t
aXplIGhvdyBKU09OIHNlcmlhbGl6YXRpb24gYW5kIApkZXNlcmlhbGl6YXRp
b24gd29ya3MsIHlvdSBjYW4gaW1wbGVtZW50IHRoZSBgU2VyaWFsaXplcmAg
YW5kIGBEZXNlcmlhbGl6ZXJgIGludGVyZmFjZXMgYW5kIHNwZWNpZnkgaW5z
dGFuY2VzIG9mCnRoZW0gb24gdGhlIGBKd3RCdWlsZGVyYCBhbmQgYEp3dFBh
cnNlcmAgcmVzcGVjdGl2ZWx5LiAgRm9yIGV4YW1wbGU6CgpXaGVuIGNyZWF0
aW5nIGEgSldUOgoKYGBgamF2YQpTZXJpYWxpemVyPE1hcDxTdHJpbmcsPz4+
IHNlcmlhbGl6ZXIgPSBnZXRNeVNlcmlhbGl6ZXIoKTsgLy9pbXBsZW1lbnQg
bWUKCkp3dHMuYnVpbGRlcigpCgogICAgLnNlcmlhbGl6ZVRvSnNvbldpdGgo
c2VyaWFsaXplcikKICAgIAogICAgLy8gLi4uIGV0YyAuLi4KYGBgCgpXaGVu
IHJlYWRpbmcgYSBKV1Q6CgpgYGBqYXZhCkRlc2VyaWFsaXplcjxNYXA8U3Ry
aW5nLD8+PiBkZXNlcmlhbGl6ZXIgPSBnZXRNeURlc2VyaWFsaXplcigpOyAv
L2ltcGxlbWVudCBtZQoKSnd0cy5wYXJzZXIoKQoKICAgIC5kZXNlcmlhbGl6
ZUpzb25XaXRoKGRlc2VyaWFsaXplcikKICAgIAogICAgLy8gLi4uIGV0YyAu
Li4KYGBgCgo8YSBuYW1lPSJqc29uLWphY2tzb24iPjwvYT4KIyMjIEphY2tz
b24gSlNPTiBQcm9jZXNzb3IKCklmIHlvdSBoYXZlIGFuIGFwcGxpY2F0aW9u
LXdpZGUgSmFja3NvbiBgT2JqZWN0TWFwcGVyYCAoYXMgaXMgdHlwaWNhbGx5
IHJlY29tbWVuZGVkIGZvciBtb3N0IGFwcGxpY2F0aW9ucyksIHlvdSBjYW4g
CmVsaW1pbmF0ZSB0aGUgb3ZlcmhlYWQgb2YgSkpXVCBjb25zdHJ1Y3Rpbmcg
aXRzIG93biBgT2JqZWN0TWFwcGVyYCBieSB1c2luZyB5b3VycyBpbnN0ZWFk
LgoKWW91IGRvIHRoaXMgYnkgZGVjbGFyaW5nIHRoZSBgaW8uanNvbndlYnRv
a2VuOmpqd3QtamFja3NvbmAgZGVwZW5kZW5jeSB3aXRoICoqY29tcGlsZSoq
IHNjb3BlIChub3QgcnVudGltZSAKc2NvcGUgd2hpY2ggaXMgdGhlIHR5cGlj
YWwgSkpXVCBkZWZhdWx0KS4gIFRoYXQgaXM6CgoqKk1hdmVuKioKCmBgYHht
bAo8ZGVwZW5kZW5jeT4KICAgIDxncm91cElkPmlvLmpzb253ZWJ0b2tlbjwv
Z3JvdXBJZD4KICAgIDxhcnRpZmFjdElkPmpqd3QtamFja3NvbjwvYXJ0aWZh
Y3RJZD4KICAgIDx2ZXJzaW9uPjAuMTAuNzwvdmVyc2lvbj4KICAgIDxzY29w
ZT5jb21waWxlPC9zY29wZT4gPCEtLSBOb3QgcnVudGltZSAtLT4KPC9kZXBl
bmRlbmN5PgpgYGAKCioqR3JhZGxlIG9yIEFuZHJvaWQqKgoKYGBgZ3Jvb3Z5
CmRlcGVuZGVuY2llcyB7CiAgICBjb21waWxlICdpby5qc29ud2VidG9rZW46
amp3dC1qYWNrc29uOjAuMTAuNycKfQpgYGAKCkFuZCB0aGVuIHlvdSBjYW4g
c3BlY2lmeSB0aGUgYEphY2tzb25TZXJpYWxpemVyYCB1c2luZyB5b3VyIG93
biBgT2JqZWN0TWFwcGVyYCBvbiB0aGUgYEp3dEJ1aWxkZXJgOgoKYGBgamF2
YQpPYmplY3RNYXBwZXIgb2JqZWN0TWFwcGVyID0gZ2V0TXlPYmplY3RNYXBw
ZXIoKTsgLy9pbXBsZW1lbnQgbWUKClN0cmluZyBqd3MgPSBKd3RzLmJ1aWxk
ZXIoKQoKICAgIC5zZXJpYWxpemVUb0pzb25XaXRoKG5ldyBKYWNrc29uU2Vy
aWFsaXplcihvYmplY3RNYXBwZXIpKQogICAgCiAgICAvLyAuLi4gZXRjIC4u
LgpgYGAKCmFuZCB0aGUgYEphY2tzb25EZXNlcmlhbGl6ZXJgIHVzaW5nIHlv
dXIgYE9iamVjdE1hcHBlcmAgb24gdGhlIGBKd3RQYXJzZXJgOgoKYGBgamF2
YQpPYmplY3RNYXBwZXIgb2JqZWN0TWFwcGVyID0gZ2V0TXlPYmplY3RNYXBw
ZXIoKTsgLy9pbXBsZW1lbnQgbWUKCkp3dHMucGFyc2VyKCkKCiAgICAuZGVz
ZXJpYWxpemVKc29uV2l0aChuZXcgSmFja3NvbkRlc2VyaWFsaXplcihvYmpl
Y3RNYXBwZXIpKQogICAgCiAgICAvLyAuLi4gZXRjIC4uLgpgYGAKCjxhIG5h
bWU9ImJhc2U2NCI+PC9hPgojIyBCYXNlNjQgU3VwcG9ydAoKSkpXVCB1c2Vz
IGEgdmVyeSBmYXN0IHB1cmUtSmF2YSBbQmFzZTY0XShodHRwczovL3Rvb2xz
LmlldGYub3JnL2h0bWwvcmZjNDY0OCkgY29kZWMgZm9yIEJhc2U2NCBhbmQg
CkJhc2U2NFVybCBlbmNvZGluZyBhbmQgZGVjb2RpbmcgdGhhdCBpcyBndWFy
YW50ZWVkIHRvIHdvcmsgZGV0ZXJtaW5pc3RpY2FsbHkgaW4gYWxsIEpESyBh
bmQgQW5kcm9pZCBlbnZpcm9ubWVudHMuCgpZb3UgY2FuIGFjY2VzcyBKSldU
J3MgZW5jb2RlcnMgYW5kIGRlY29kZXJzIHVzaW5nIHRoZSBgaW8uanNvbndl
YnRva2VuLmlvLkVuY29kZXJzYCBhbmQgYGlvLmpzb253ZWJ0b2tlbi5pby5E
ZWNvZGVyc2AgCnV0aWxpdHkgY2xhc3Nlcy4KCmBpby5qc29ud2VidG9rZW4u
aW8uRW5jb2RlcnNgOgoKKiBgQkFTRTY0YCBpcyBhbiBSRkMgNDY0OCBbQmFz
ZTY0XShodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNDY0OCNzZWN0
aW9uLTQpIGVuY29kZXIKKiBgQkFTRTY0VVJMYCBpcyBhbiBSRkMgNDY0OCBb
QmFzZTY0VVJMXShodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNDY0
OCNzZWN0aW9uLTUpIGVuY29kZXIKCmBpby5qc29ud2VidG9rZW4uaW8uRGVj
b2RlcnNgOgoKKiBgQkFTRTY0YCBpcyBhbiBSRkMgNDY0OCBbQmFzZTY0XSho
dHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNDY0OCNzZWN0aW9uLTQp
IGRlY29kZXIKKiBgQkFTRTY0VVJMYCBpcyBhbiBSRkMgNDY0OCBbQmFzZTY0
VVJMXShodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNDY0OCNzZWN0
aW9uLTUpIGRlY29kZXIgIAoKPGEgbmFtZT0iYmFzZTY0LWN1c3RvbSI+PC9h
PgojIyMgQ3VzdG9tIEJhc2U2NAoKSWYgZm9yIHNvbWUgcmVhc29uIHlvdSB3
YW50IHRvIHNwZWNpZnkgeW91ciBvd24gQmFzZTY0VXJsIGVuY29kZXIgYW5k
IGRlY29kZXIsIHlvdSBjYW4gdXNlIHRoZSBgSnd0QnVpbGRlcmAKYGJhc2U2
NFVybEVuY29kZVdpdGhgIG1ldGhvZCB0byBzZXQgdGhlIGVuY29kZXI6Cgpg
YGBqYXZhCkVuY29kZXI8Ynl0ZVtdLCBTdHJpbmc+IGJhc2U2NFVybEVuY29k
ZXIgPSBnZXRNeUJhc2U2NFVybEVuY29kZXIoKTsgLy9pbXBsZW1lbnQgbWUK
ClN0cmluZyBqd3MgPSBKd3RzLmJ1aWxkZXIoKQoKICAgIC5iYXNlNjRVcmxF
bmNvZGVXaXRoKGJhc2U2NFVybEVuY29kZXIpCiAgICAKICAgIC8vIC4uLiBl
dGMgLi4uCmBgYAoKYW5kIHRoZSBgSnd0UGFyc2VyYCdzIGBiYXNlNjRVcmxE
ZWNvZGVXaXRoYCBtZXRob2QgdG8gc2V0IHRoZSBkZWNvZGVyOgoKYGBgamF2
YQpEZWNvZGVyPFN0cmluZywgYnl0ZVtdPiBiYXNlNjRVcmxEZWNvZGVyID0g
Z2V0TXlCYXNlNjRVcmxEZWNvZGVyKCk7IC8vaW1wbGVtZW50IG1lCgpKd3Rz
LnBhcnNlcigpCgogICAgLmJhc2U2NFVybERlY29kZVdpdGgoYmFzZTY0VXJs
RW5jb2RlcikKICAgIAogICAgLy8gLi4uIGV0YyAuLi4KYGBgCgojIyBMZWFy
biBNb3JlCgotIFtKU09OIFdlYiBUb2tlbiBmb3IgSmF2YSBhbmQgQW5kcm9p
ZF0oaHR0cHM6Ly9zdG9ybXBhdGguY29tL2Jsb2cvamp3dC1ob3ctaXQtd29y
a3Mtd2h5LykKLSBbSG93IHRvIENyZWF0ZSBhbmQgVmVyaWZ5IEpXVHMgaW4g
SmF2YV0oaHR0cHM6Ly9zdG9ybXBhdGguY29tL2Jsb2cvand0LWphdmEtY3Jl
YXRlLXZlcmlmeS8pCi0gW1doZXJlIHRvIFN0b3JlIFlvdXIgSldUcyAtIENv
b2tpZXMgdnMgSFRNTDUgV2ViIFN0b3JhZ2VdKGh0dHBzOi8vc3Rvcm1wYXRo
LmNvbS9ibG9nL3doZXJlLXRvLXN0b3JlLXlvdXItand0cy1jb29raWVzLXZz
LWh0bWw1LXdlYi1zdG9yYWdlLykKLSBbVXNlIEpXVCB0aGUgUmlnaHQgV2F5
IV0oaHR0cHM6Ly9zdG9ybXBhdGguY29tL2Jsb2cvand0LXRoZS1yaWdodC13
YXkvKQotIFtUb2tlbiBBdXRoZW50aWNhdGlvbiBmb3IgSmF2YSBBcHBsaWNh
dGlvbnNdKGh0dHBzOi8vc3Rvcm1wYXRoLmNvbS9ibG9nL3Rva2VuLWF1dGgt
Zm9yLWphdmEvKQotIFtKSldUIENoYW5nZWxvZ10oQ0hBTkdFTE9HLm1kKQoK
IyMgQXV0aG9yCgpNYWludGFpbmVkIGJ5IExlcyBIYXpsZXdvb2QgJmFtcDsg
W09rdGFdKGh0dHBzOi8vb2t0YS5jb20vKQoKPGEgbmFtZT0ibGljZW5zZSI+
PC9hPgojIyBMaWNlbnNlCgpUaGlzIHByb2plY3QgaXMgb3Blbi1zb3VyY2Ug
dmlhIHRoZSBbQXBhY2hlIDIuMCBMaWNlbnNlXShodHRwOi8vd3d3LmFwYWNo
ZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjApLgo=
",,5678,"IyBodHRwczovL3RyYXZpcy1jaS5vcmcvand0ay9qand0Cgojc3VkbzogcmVx
dWlyZWQKZGlzdDogdHJ1c3R5Cmxhbmd1YWdlOiBqYXZhCmpkazoKICAtIG9w
ZW5qZGs3ICMgbm90IHJlYWxseSBvcGVuamRrNyAtIHdlJ3JlIGp1c3QgdXNp
bmcgdGhpcyB0cmF2aXMgcGxhY2Vob2xkZXIgZm9yIG91ciBvd24gT3JhY2xl
IEpESyA3IGluc3RhbGxhdGlvbgogIC0gb3JhY2xlamRrOAogIC0gb3JhY2xl
amRrOQogIC0gb3BlbmpkazEwCiAgLSBvcGVuamRrMTEKICAKY2FjaGU6CiAg
ZGlyZWN0b3JpZXM6CiAgICAtICRIT01FLy5tMgoKYmVmb3JlX2luc3RhbGw6
CiAgLSBlY2hvICJUUkFWSVNfSkRLX1ZFUlNJT04gaXMgJHtUUkFWSVNfSkRL
X1ZFUlNJT059IgogIC0gZXhwb3J0IE1WTl9DTUQ9Ii4vbXZudyAtLW5vLXRy
YW5zZmVyLXByb2dyZXNzIiAjIGhpZGUgdmVyYm9zZSBkb3dubG9hZCBtZXNz
YWdlcyAobG9nIHNwYW0pCiAgLSB8CiAgICBpZiBbWyAiJHtUUkFWSVNfSkRL
X1ZFUlNJT059IiA9PSAib3BlbmpkazciIF1dOyB0aGVuCiAgICAgIAogICAg
ICBleHBvcnQgTUFWRU5fT1BUUz0iLURodHRwcy5wcm90b2NvbHM9VExTdjEu
MiAtWG14NTEybSAtWFg6TWF4UGVybVNpemU9MTI4bSIKICAgICAgZXhwb3J0
IEpBVkFfSE9NRT0iL3Vzci9saWIvanZtL2phdmEtNy1vcmFjbGUiICMgU2V0
IEpBVkFfSE9NRSB0byB3aGVyZSB3ZSB3YW50IHRvIGluc3RhbGwgT3JhY2xl
IEpESyA3CiAgICAgIGV4cG9ydCBQQVRIPSIke0pBVkFfSE9NRX0vYmluOiR7
UEFUSH0iCiAgICAgIAogICAgICBpZiBbWyAhIC1kICIke0pBVkFfSE9NRX0i
IF1dOyB0aGVuCiAgICAgICAgIyBEb3dubG9hZCBhbmQgaW5zdGFsbCBPcmFj
bGUgSkRLIDc6CiAgICAgICAgd2dldCBodHRwczovL3MzLmFtYXpvbmF3cy5j
b20vZDJmYmVlMTktNWZlMi00MjVmLWFlMTEtY2QyNWIzNWRjOTlhL2pkay03
dTgwLWxpbnV4LXg2NC50YXIuZ3ogLU8gL3RtcC9qZGstN3U4MC1saW51eC14
NjQudGFyLmd6CiAgICAgICAgdGFyIHh2ZnogL3RtcC9qZGstN3U4MC1saW51
eC14NjQudGFyLmd6IC1DIC90bXAKICAgICAgICBzdWRvIG12IC90bXAvamRr
MS43LjBfODAgIiR7SkFWQV9IT01FfSIKICAgICAgZmkKICAgICAgCiAgICAg
ICMgRG93bmxvYWQgYW5kIGluc3RhbGwgSkNFIFVubGltaXRlZCBTdHJlbmd0
aCBDcnlwdG8gcG9saWNpZXMgZm9yIE9yYWNsZSBKREsgNzoKICAgICAgY3Vy
bCAtcSAtTCAtQyAtIGh0dHBzOi8vMjM4ZGozMjgyYXMwM2szNjkuczMtdXMt
d2VzdC0xLmFtYXpvbmF3cy5jb20vVW5saW1pdGVkSkNFUG9saWN5SkRLNy56
aXAgLW8gL3RtcC9VbmxpbWl0ZWRKQ0VQb2xpY3lKREs3LnppcAogICAgICBz
dWRvIHVuemlwIC1vaiAtZCAiJEpBVkFfSE9NRS9qcmUvbGliL3NlY3VyaXR5
IiAvdG1wL1VubGltaXRlZEpDRVBvbGljeUpESzcuemlwIFwqL1wqLmphcgog
ICAgICBybSAvdG1wL1VubGltaXRlZEpDRVBvbGljeUpESzcuemlwCiAgICBm
aQogICMgSWYgb24gSkRLIDgsIGVuc3VyZSBidWlsZCBjb3ZlcmFnZSBhc3Nl
cnRpb25zIGFyZSBydW4gKHdlIG9ubHkgbmVlZCB0byBydW4gdGhpcyBvbiBv
bmUgSkRLIHRvIHJlZHVjZSBvdmVyYWxsIGJ1aWxkIHRpbWVzKToKICAtIGV4
cG9ydCBCVUlMRF9DT1ZFUkFHRT0iJChbICRUUkFWSVNfSkRLX1ZFUlNJT04g
PT0gJ29yYWNsZWpkazgnIF0gJiYgZWNobyAndHJ1ZScpIgoKIyBwcmludHMg
dGhlIE1hdmVuLCBKYXZhLCBhbmQgT1MgaW5mby92ZXJzaW9uCmluc3RhbGw6
ICRNVk5fQ01EIC0tdmVyc2lvbgoKc2NyaXB0OgogIC0gJE1WTl9DTUQgaW5z
dGFsbAogIC0gdGVzdCAteiAiJEJVSUxEX0NPVkVSQUdFIiB8fCB7ICRNVk5f
Q01EIGNsZWFuIGNsb3ZlcjpzZXR1cCB0ZXN0ICYmICRNVk5fQ01EIC1wbCAu
IGNsb3ZlcjpjbG92ZXIgY2xvdmVyOmNoZWNrIGNvdmVyYWxsczpyZXBvcnQ7
IH0K
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'jax',154739597,"b'Composable transformations of Python+NumPy programs: differentiate, vectorize, JIT to GPU/TPU, and more'",b'Python',288,5676,,144,False,b'https://api.github.com/repos/google/jax/forks',"PGRpdiBhbGlnbj0iY2VudGVyIj4KPGltZyBzcmM9Imh0dHBzOi8vcmF3Lmdp
dGh1YnVzZXJjb250ZW50LmNvbS9nb29nbGUvamF4L21hc3Rlci9pbWFnZXMv
amF4X2xvZ29fMjUwcHgucG5nIiBhbHQ9ImxvZ28iPjwvaW1nPgo8L2Rpdj4K
CiMgSkFYOiBBdXRvZ3JhZCBhbmQgWExBIFshW1Rlc3Qgc3RhdHVzXShodHRw
czovL3RyYXZpcy1jaS5vcmcvZ29vZ2xlL2pheC5zdmc/YnJhbmNoPW1hc3Rl
cildKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9nb29nbGUvamF4KQoKWyoqUmVm
ZXJlbmNlIGRvY3MqKl0oaHR0cHM6Ly9qYXgucmVhZHRoZWRvY3MuaW8vZW4v
bGF0ZXN0LykKfCBbKipJbnN0YWxsIGd1aWRlKipdKCNpbnN0YWxsYXRpb24p
CnwgWyoqUXVpY2tzdGFydCoqXSgjcXVpY2tzdGFydC1jb2xhYi1pbi10aGUt
Y2xvdWQpCgpKQVggaXMgW0F1dG9ncmFkXShodHRwczovL2dpdGh1Yi5jb20v
aGlwcy9hdXRvZ3JhZCkgYW5kCltYTEFdKGh0dHBzOi8vd3d3LnRlbnNvcmZs
b3cub3JnL3hsYSksCmJyb3VnaHQgdG9nZXRoZXIgZm9yIGhpZ2gtcGVyZm9y
bWFuY2UgbWFjaGluZSBsZWFybmluZyByZXNlYXJjaC4KCldpdGggaXRzIHVw
ZGF0ZWQgdmVyc2lvbiBvZiBbQXV0b2dyYWRdKGh0dHBzOi8vZ2l0aHViLmNv
bS9oaXBzL2F1dG9ncmFkKSwKSkFYIGNhbiBhdXRvbWF0aWNhbGx5IGRpZmZl
cmVudGlhdGUgbmF0aXZlClB5dGhvbiBhbmQgTnVtUHkgZnVuY3Rpb25zLiBJ
dCBjYW4gZGlmZmVyZW50aWF0ZSB0aHJvdWdoIGxvb3BzLCBicmFuY2hlcywK
cmVjdXJzaW9uLCBhbmQgY2xvc3VyZXMsIGFuZCBpdCBjYW4gdGFrZSBkZXJp
dmF0aXZlcyBvZiBkZXJpdmF0aXZlcyBvZgpkZXJpdmF0aXZlcy4gSXQgc3Vw
cG9ydHMgcmV2ZXJzZS1tb2RlIGRpZmZlcmVudGlhdGlvbiAoYS5rLmEuIGJh
Y2twcm9wYWdhdGlvbikKdmlhIFtgZ3JhZGBdKCNhdXRvbWF0aWMtZGlmZmVy
ZW50aWF0aW9uLXdpdGgtZ3JhZCkgYXMgd2VsbCBhcyBmb3J3YXJkLW1vZGUg
ZGlmZmVyZW50aWF0aW9uLAphbmQgdGhlIHR3byBjYW4gYmUgY29tcG9zZWQg
YXJiaXRyYXJpbHkgdG8gYW55IG9yZGVyLgoKV2hhdOKAmXMgbmV3IGlzIHRo
YXQgSkFYIHVzZXMKW1hMQV0oaHR0cHM6Ly93d3cudGVuc29yZmxvdy5vcmcv
eGxhKQp0byBjb21waWxlIGFuZCBydW4geW91ciBOdW1QeSBwcm9ncmFtcyBv
biBHUFVzIGFuZCBUUFVzLiBDb21waWxhdGlvbiBoYXBwZW5zCnVuZGVyIHRo
ZSBob29kIGJ5IGRlZmF1bHQsIHdpdGggbGlicmFyeSBjYWxscyBnZXR0aW5n
IGp1c3QtaW4tdGltZSBjb21waWxlZCBhbmQKZXhlY3V0ZWQuIEJ1dCBKQVgg
YWxzbyBsZXRzIHlvdSBqdXN0LWluLXRpbWUgY29tcGlsZSB5b3VyIG93biBQ
eXRob24gZnVuY3Rpb25zCmludG8gWExBLW9wdGltaXplZCBrZXJuZWxzIHVz
aW5nIGEgb25lLWZ1bmN0aW9uIEFQSSwKW2BqaXRgXSgjY29tcGlsYXRpb24t
d2l0aC1qaXQpLiBDb21waWxhdGlvbiBhbmQgYXV0b21hdGljIGRpZmZlcmVu
dGlhdGlvbiBjYW4gYmUKY29tcG9zZWQgYXJiaXRyYXJpbHksIHNvIHlvdSBj
YW4gZXhwcmVzcyBzb3BoaXN0aWNhdGVkIGFsZ29yaXRobXMgYW5kIGdldApt
YXhpbWFsIHBlcmZvcm1hbmNlIHdpdGhvdXQgbGVhdmluZyBQeXRob24uCgpE
aWcgYSBsaXR0bGUgZGVlcGVyLCBhbmQgeW91J2xsIHNlZSB0aGF0IEpBWCBp
cyByZWFsbHkgYW4gZXh0ZW5zaWJsZSBzeXN0ZW0gZm9yCltjb21wb3NhYmxl
IGZ1bmN0aW9uIHRyYW5zZm9ybWF0aW9uc10oI3RyYW5zZm9ybWF0aW9ucyku
IEJvdGgKW2BncmFkYF0oI2F1dG9tYXRpYy1kaWZmZXJlbnRpYXRpb24td2l0
aC1ncmFkKSBhbmQgW2BqaXRgXSgjY29tcGlsYXRpb24td2l0aC1qaXQpCmFy
ZSBpbnN0YW5jZXMgb2Ygc3VjaCB0cmFuc2Zvcm1hdGlvbnMuIEFub3RoZXIg
aXMgW2B2bWFwYF0oI2F1dG8tdmVjdG9yaXphdGlvbi13aXRoLXZtYXApCmZv
ciBhdXRvbWF0aWMgdmVjdG9yaXphdGlvbiwgd2l0aCBtb3JlIHRvIGNvbWUu
CgpUaGlzIGlzIGEgcmVzZWFyY2ggcHJvamVjdCwgbm90IGFuIG9mZmljaWFs
IEdvb2dsZSBwcm9kdWN0LiBFeHBlY3QgYnVncyBhbmQKW3NoYXJwIGVkZ2Vz
XShodHRwczovL2pheC5yZWFkdGhlZG9jcy5pby9lbi9sYXRlc3Qvbm90ZWJv
b2tzL0NvbW1vbl9Hb3RjaGFzX2luX0pBWC5odG1sKS4KUGxlYXNlIGhlbHAg
YnkgdHJ5aW5nIGl0IG91dCwgW3JlcG9ydGluZwpidWdzXShodHRwczovL2dp
dGh1Yi5jb20vZ29vZ2xlL2pheC9pc3N1ZXMpLCBhbmQgbGV0dGluZyB1cyBr
bm93IHdoYXQgeW91CnRoaW5rIQoKYGBgcHl0aG9uCmltcG9ydCBqYXgubnVt
cHkgYXMgbnAKZnJvbSBqYXggaW1wb3J0IGdyYWQsIGppdCwgdm1hcAoKZGVm
IHByZWRpY3QocGFyYW1zLCBpbnB1dHMpOgogIGZvciBXLCBiIGluIHBhcmFt
czoKICAgIG91dHB1dHMgPSBucC5kb3QoaW5wdXRzLCBXKSArIGIKICAgIGlu
cHV0cyA9IG5wLnRhbmgob3V0cHV0cykKICByZXR1cm4gb3V0cHV0cwoKZGVm
IGxvZ3Byb2JfZnVuKHBhcmFtcywgaW5wdXRzLCB0YXJnZXRzKToKICBwcmVk
cyA9IHByZWRpY3QocGFyYW1zLCBpbnB1dHMpCiAgcmV0dXJuIG5wLnN1bSgo
cHJlZHMgLSB0YXJnZXRzKSoqMikKCmdyYWRfZnVuID0gaml0KGdyYWQobG9n
cHJvYl9mdW4pKSAgIyBjb21waWxlZCBncmFkaWVudCBldmFsdWF0aW9uIGZ1
bmN0aW9uCnBlcmV4X2dyYWRzID0gaml0KHZtYXAoZ3JhZF9mdW4sIGluX2F4
ZXM9KE5vbmUsIDAsIDApKSkgICMgZmFzdCBwZXItZXhhbXBsZSBncmFkcwpg
YGAKCkpBWCBzdGFydGVkIGFzIGEgcmVzZWFyY2ggcHJvamVjdCBieSBbTWF0
dCBKb2huc29uXShodHRwczovL2dpdGh1Yi5jb20vbWF0dGpqKSwKW1JveSBG
cm9zdGlnXShodHRwczovL2dpdGh1Yi5jb20vZnJveXN0aWcpLCBbRG91Z2Fs
Ck1hY2xhdXJpbl0oaHR0cHM6Ly9naXRodWIuY29tL2RvdWdhbG0pLCBhbmQg
W0NocmlzCkxlYXJ5XShodHRwczovL2dpdGh1Yi5jb20vbGVhcnlnKSwgYW5k
IGlzIG5vdyBkZXZlbG9wZWQgW2luIHRoZQpvcGVuXShodHRwczovL2dpdGh1
Yi5jb20vZ29vZ2xlL2pheCkgYnkgYSBncm93aW5nIG51bWJlciBvZgpbY29u
dHJpYnV0b3JzXSgjY29udHJpYnV0b3JzKS4KCiMjIyBDb250ZW50cwoqIFtR
dWlja3N0YXJ0OiBDb2xhYiBpbiB0aGUgQ2xvdWRdKCNxdWlja3N0YXJ0LWNv
bGFiLWluLXRoZS1jbG91ZCkKKiBbSW5zdGFsbGF0aW9uXSgjaW5zdGFsbGF0
aW9uKQoqIFtSZWZlcmVuY2UgZG9jdW1lbnRhdGlvbl0oI3JlZmVyZW5jZS1k
b2N1bWVudGF0aW9uKQoqIFtBIGJyaWVmIHRvdXJdKCNhLWJyaWVmLXRvdXIp
CiogW1doYXQncyBzdXBwb3J0ZWRdKCN3aGF0cy1zdXBwb3J0ZWQpCiogW1Ry
YW5zZm9ybWF0aW9uc10oI3RyYW5zZm9ybWF0aW9ucykKKiBbUmFuZG9tIG51
bWJlcnMgYXJlIGRpZmZlcmVudF0oI3JhbmRvbS1udW1iZXJzLWFyZS1kaWZm
ZXJlbnQpCiogW01pbmktbGlicmFyaWVzXSgjbWluaS1saWJyYXJpZXMpCiog
W0hvdyBpdCB3b3Jrc10oI2hvdy1pdC13b3JrcykKKiBbQ3VycmVudCBnb3Rj
aGFzXSgjY3VycmVudC1nb3RjaGFzKQoqIFtDaXRpbmcgSkFYXSgjY2l0aW5n
LWpheCkKCiMjIFF1aWNrc3RhcnQ6IENvbGFiIGluIHRoZSBDbG91ZApKdW1w
IHJpZ2h0IGluIHVzaW5nIGEgbm90ZWJvb2sgaW4geW91ciBicm93c2VyLCBj
b25uZWN0ZWQgdG8gYSBHb29nbGUgQ2xvdWQgR1BVLiBIZXJlIGFyZSBzb21l
IHN0YXJ0ZXIgbm90ZWJvb2tzOgotIFtUaGUgYmFzaWNzOiBOdW1QeSBvbiBh
Y2NlbGVyYXRvcnMsIGBncmFkYCBmb3IgZGlmZmVyZW50aWF0aW9uLCBgaml0
YCBmb3IgY29tcGlsYXRpb24sIGFuZCBgdm1hcGAgZm9yIHZlY3Rvcml6YXRp
b25dKGh0dHBzOi8vamF4LnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9ub3Rl
Ym9va3MvcXVpY2tzdGFydC5odG1sKQotIFtUcmFpbmluZyBhIFNpbXBsZSBO
ZXVyYWwgTmV0d29yaywgd2l0aCBQeVRvcmNoIERhdGEgTG9hZGluZ10oaHR0
cHM6Ly9jb2xhYi5yZXNlYXJjaC5nb29nbGUuY29tL2dpdGh1Yi9nb29nbGUv
amF4L2Jsb2IvbWFzdGVyL2RvY3Mvbm90ZWJvb2tzL05ldXJhbF9OZXR3b3Jr
X2FuZF9EYXRhX0xvYWRpbmcuaXB5bmIpCi0gW1RyYWluaW5nIGEgU2ltcGxl
IE5ldXJhbCBOZXR3b3JrLCB3aXRoIFRlbnNvckZsb3cgRGF0YXNldCBEYXRh
IExvYWRpbmddKGh0dHBzOi8vY29sYWIucmVzZWFyY2guZ29vZ2xlLmNvbS9n
aXRodWIvZ29vZ2xlL2pheC9ibG9iL21hc3Rlci9kb2NzL25vdGVib29rcy9u
ZXVyYWxfbmV0d29ya193aXRoX3RmZHNfZGF0YS5pcHluYikKCkFuZCBmb3Ig
YSBkZWVwZXIgZGl2ZSBpbnRvIEpBWDoKLSBbQ29tbW9uIGdvdGNoYXMgYW5k
IHNoYXJwIGVkZ2VzXShodHRwczovL2pheC5yZWFkdGhlZG9jcy5pby9lbi9s
YXRlc3Qvbm90ZWJvb2tzL0NvbW1vbl9Hb3RjaGFzX2luX0pBWC5odG1sKQot
IFtUaGUgQXV0b2RpZmYgQ29va2Jvb2ssIFBhcnQgMTogZWFzeSBhbmQgcG93
ZXJmdWwgYXV0b21hdGljIGRpZmZlcmVudGlhdGlvbiBpbiBKQVhdKGh0dHBz
Oi8vamF4LnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9ub3RlYm9va3MvYXV0
b2RpZmZfY29va2Jvb2suaHRtbCkKLSBbRGlyZWN0bHkgdXNpbmcgWExBIGlu
IFB5dGhvbl0oaHR0cHM6Ly9qYXgucmVhZHRoZWRvY3MuaW8vZW4vbGF0ZXN0
L25vdGVib29rcy9YTEFfaW5fUHl0aG9uLmh0bWwpCi0gW0hvdyBKQVggcHJp
bWl0aXZlcyB3b3JrXShodHRwczovL2pheC5yZWFkdGhlZG9jcy5pby9lbi9s
YXRlc3Qvbm90ZWJvb2tzL0hvd19KQVhfcHJpbWl0aXZlc193b3JrLmh0bWwp
Ci0gW01BTUwgVHV0b3JpYWwgd2l0aCBKQVhdKGh0dHBzOi8vamF4LnJlYWR0
aGVkb2NzLmlvL2VuL2xhdGVzdC9ub3RlYm9va3MvbWFtbC5odG1sKQotIFtH
ZW5lcmF0aXZlIE1vZGVsaW5nIGJ5IEVzdGltYXRpbmcgR3JhZGllbnRzIG9m
IERhdGEgRGlzdHJpYnV0aW9uIGluIEpBWF0oaHR0cHM6Ly9qYXgucmVhZHRo
ZWRvY3MuaW8vZW4vbGF0ZXN0L25vdGVib29rcy9zY29yZV9tYXRjaGluZy5o
dG1sKS4KCgojIyBJbnN0YWxsYXRpb24KSkFYIGlzIHdyaXR0ZW4gaW4gcHVy
ZSBQeXRob24sIGJ1dCBpdCBkZXBlbmRzIG9uIFhMQSwgd2hpY2ggbmVlZHMg
dG8gYmUgY29tcGlsZWQKYW5kIGluc3RhbGxlZCBhcyB0aGUgYGpheGxpYmAg
cGFja2FnZS4gVXNlIHRoZSBmb2xsb3dpbmcgaW5zdHJ1Y3Rpb25zIHRvCmlu
c3RhbGwgYSBiaW5hcnkgcGFja2FnZSB3aXRoIGBwaXBgLCBvciB0byBidWls
ZCBKQVggZnJvbSBzb3VyY2UuCgpXZSBzdXBwb3J0IGluc3RhbGxpbmcgb3Ig
YnVpbGRpbmcgYGpheGxpYmAgb24gTGludXggKFVidW50dSAxNi4wNCBvciBs
YXRlcikgYW5kCm1hY09TICgxMC4xMiBvciBsYXRlcikgcGxhdGZvcm1zLCBi
dXQgbm90IHlldCBXaW5kb3dzLiBXZSdyZSBub3QgY3VycmVudGx5Cndvcmtp
bmcgb24gV2luZG93cyBzdXBwb3J0LCBidXQgY29udHJpYnV0aW9ucyBhcmUg
d2VsY29tZQooc2VlIFsjNDM4XShodHRwczovL2dpdGh1Yi5jb20vZ29vZ2xl
L2pheC9pc3N1ZXMvNDM4KSkuIFNvbWUgdXNlcnMgaGF2ZSByZXBvcnRlZApz
dWNjZXNzIHdpdGggYnVpbGRpbmcgYSBDUFUtb25seSBgamF4bGliYCBmcm9t
IHNvdXJjZSB1c2luZyB0aGUgV2luZG93cyBTdWJzeXRlbQpmb3IgTGludXgu
CgojIyMgcGlwIGluc3RhbGxhdGlvbgoKVG8gaW5zdGFsbCBhIENQVS1vbmx5
IHZlcnNpb24sIHdoaWNoIG1pZ2h0IGJlIHVzZWZ1bCBmb3IgZG9pbmcgbG9j
YWwKZGV2ZWxvcG1lbnQgb24gYSBsYXB0b3AsIHlvdSBjYW4gcnVuCgpgYGBi
YXNoCnBpcCBpbnN0YWxsIC0tdXBncmFkZSBwaXAKcGlwIGluc3RhbGwgLS11
cGdyYWRlIGpheCBqYXhsaWIgICMgQ1BVLW9ubHkgdmVyc2lvbgpgYGAKCk9u
IExpbnV4LCBpdCBpcyBvZnRlbiBuZWNlc3NhcnkgdG8gZmlyc3QgdXBkYXRl
IGBwaXBgIHRvIGEgdmVyc2lvbiB0aGF0IHN1cHBvcnRzCmBtYW55bGludXgy
MDEwYCB3aGVlbHMuCgpJZiB5b3Ugd2FudCB0byBpbnN0YWxsIEpBWCB3aXRo
IGJvdGggQ1BVIGFuZCBHUFUgc3VwcG9ydCwgdXNpbmcgZXhpc3RpbmcgQ1VE
QQphbmQgQ1VETk43IGluc3RhbGxhdGlvbnMgb24geW91ciBtYWNoaW5lIChm
b3IgZXhhbXBsZSwgcHJlaW5zdGFsbGVkIG9uIHlvdXIKY2xvdWQgVk0pLCB5
b3UgY2FuIHJ1bgoKYGBgYmFzaAojIGluc3RhbGwgamF4bGliClBZVEhPTl9W
RVJTSU9OPWNwMzcgICMgYWx0ZXJuYXRpdmVzOiBjcDI3LCBjcDM1LCBjcDM2
LCBjcDM3CkNVREFfVkVSU0lPTj1jdWRhOTIgICMgYWx0ZXJuYXRpdmVzOiBj
dWRhOTAsIGN1ZGE5MiwgY3VkYTEwMCwgY3VkYTEwMQpQTEFURk9STT1saW51
eF94ODZfNjQgICMgYWx0ZXJuYXRpdmVzOiBsaW51eF94ODZfNjQKQkFTRV9V
Ukw9J2h0dHBzOi8vc3RvcmFnZS5nb29nbGVhcGlzLmNvbS9qYXgtcmVsZWFz
ZXMnCnBpcCBpbnN0YWxsIC0tdXBncmFkZSAkQkFTRV9VUkwvJENVREFfVkVS
U0lPTi9qYXhsaWItMC4xLjM2LSRQWVRIT05fVkVSU0lPTi1ub25lLSRQTEFU
Rk9STS53aGwKCnBpcCBpbnN0YWxsIC0tdXBncmFkZSBqYXggICMgaW5zdGFs
bCBqYXgKYGBgCgpUaGUgbGlicmFyeSBwYWNrYWdlIG5hbWUgbXVzdCBjb3Jy
ZXNwb25kIHRvIHRoZSB2ZXJzaW9uIG9mIHRoZSBleGlzdGluZyBDVURBCmlu
c3RhbGxhdGlvbiB5b3Ugd2FudCB0byB1c2UsIHdpdGggYGN1ZGExMDFgIGZv
ciBDVURBIDEwLjEsIGBjdWRhMTAwYCBmb3IgQ1VEQQoxMC4wLCBgY3VkYTky
YCBmb3IgQ1VEQSA5LjIsIGFuZCBgY3VkYTkwYCBmb3IgQ1VEQSA5LjAuIFRv
IGZpbmQgeW91ciBDVURBIGFuZApDVUROTiB2ZXJzaW9ucywgeW91IGNhbiBy
dW4gY29tbWFuZHMgbGlrZSB0aGVzZSwgZGVwZW5kaW5nIG9uIHlvdXIgQ1VE
Tk4gaW5zdGFsbApwYXRoOgoKYGBgYmFzaApudmNjIC0tdmVyc2lvbgpncmVw
IENVRE5OX01BSk9SIC1BIDIgL3Vzci9sb2NhbC9jdWRhL2luY2x1ZGUvY3Vk
bm4uaCAgIyBtaWdodCBuZWVkIGRpZmZlcmVudCBwYXRoCmBgYAoKVGhlIFB5
dGhvbiB2ZXJzaW9uIG11c3QgbWF0Y2ggeW91ciBQeXRob24gaW50ZXJwcmV0
ZXIuIFRoZXJlIGFyZSBwcmVidWlsdCB3aGVlbHMKZm9yIFB5dGhvbiAyLjcs
IDMuNSwgMy42LCBhbmQgMy43OyBmb3IgYW55dGhpbmcgZWxzZSwgeW91IG11
c3QgYnVpbGQgZnJvbQpzb3VyY2UuCgpQbGVhc2UgbGV0IHVzIGtub3cgb24g
W3RoZSBpc3N1ZSB0cmFja2VyXShodHRwczovL2dpdGh1Yi5jb20vZ29vZ2xl
L2pheC9pc3N1ZXMpCmlmIHlvdSBydW4gaW50byBhbnkgZXJyb3JzIG9yIHBy
b2JsZW1zIHdpdGggdGhlIHByZWJ1aWx0IHdoZWVscy4KCiMjIyBCdWlsZGlu
ZyBKQVggZnJvbSBzb3VyY2UKU2VlIFtCdWlsZGluZyBKQVggZnJvbSBzb3Vy
Y2VdKGh0dHBzOi8vamF4LnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9kZXZl
bG9wZXIuaHRtbCNidWlsZGluZy1mcm9tLXNvdXJjZSkuCgoKIyMgUmVmZXJl
bmNlIGRvY3VtZW50YXRpb24KCkZvciBkZXRhaWxzIGFib3V0IHRoZSBKQVgg
QVBJLCBzZWUgdGhlCltyZWZlcmVuY2UgZG9jdW1lbnRhdGlvbl0oaHR0cHM6
Ly9qYXgucmVhZHRoZWRvY3MuaW8vKS4KCiMjIERldmVsb3BlciBkb2N1bWVu
dGF0aW9uCgpGb3IgZ2V0dGluZyBzdGFydGVkIGFzIGEgSkFYIGRldmVsb3Bl
ciwgc2VlIHRoZQpbZGV2ZWxvcGVyIGRvY3VtZW50YXRpb25dKGh0dHBzOi8v
amF4LnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9kZXZlbG9wZXIuaHRtbCku
CgojIyBBIGJyaWVmIHRvdXIKCmBgYHB5dGhvbgpJbiBbMV06IGltcG9ydCBq
YXgubnVtcHkgYXMgbnAKCkluIFsyXTogZnJvbSBqYXggaW1wb3J0IHJhbmRv
bQoKSW4gWzNdOiBrZXkgPSByYW5kb20uUFJOR0tleSgwKQoKSW4gWzRdOiB4
ID0gcmFuZG9tLm5vcm1hbChrZXksICg1MDAwLCA1MDAwKSkKCkluIFs1XTog
cHJpbnQobnAuZG90KHgsIHguVCkgLyAyKSAgIyBmYXN0IQpbWyAgMi41Mjcy
NzA1MWUrMDMgICA4LjE1ODk1NTU3ZSswMCAgLTguNTMyNzYxMzRlLTAxIC4u
LiwgICMgLi4uCgpJbiBbNl06IHByaW50KG5wLmRvdCh4LCB4LlQpIC8gMikg
ICMgZXZlbiBmYXN0ZXIhCiMgSklULWNvbXBpbGVkIGNvZGUgaXMgY2FjaGVk
IGFuZCByZXVzZWQgaW4gdGhlIDJuZCBjYWxsCltbICAyLjUyNzI3MDUxZSsw
MyAgIDguMTU4OTU1NTdlKzAwICAtOC41MzI3NjEzNGUtMDEgLi4uLCAgIyAu
Li4KYGBgCgpXaGF04oCZcyBoYXBwZW5pbmcgYmVoaW5kLXRoZS1zY2VuZXMg
aXMgdGhhdCBKQVggaXMgdXNpbmcgWExBIHRvIGp1c3QtaW4tdGltZQooSklU
KSBjb21waWxlIGFuZCBleGVjdXRlIHRoZXNlIGluZGl2aWR1YWwgb3BlcmF0
aW9ucyBvbiB0aGUgR1BVLiBGaXJzdCB0aGUKYHJhbmRvbS5ub3JtYWxgIGNh
bGwgaXMgY29tcGlsZWQgYW5kIHRoZSBhcnJheSByZWZlcnJlZCB0byBieSBg
eGAgaXMgZ2VuZXJhdGVkCm9uIHRoZSBHUFUuIE5leHQsIGVhY2ggZnVuY3Rp
b24gY2FsbGVkIG9uIGB4YCAobmFtZWx5IGB0cmFuc3Bvc2VgLCBgZG90YCwg
YW5kCmBkaXZpZGVgKSBpcyBpbmRpdmlkdWFsbHkgSklULWNvbXBpbGVkIGFu
ZCBleGVjdXRlZCwgZWFjaCBrZWVwaW5nIGl0cyByZXN1bHRzIG9uCnRoZSBk
ZXZpY2UuCkl04oCZcyBvbmx5IHdoZW4gYSB2YWx1ZSBuZWVkcyB0byBiZSBw
cmludGVkLCBwbG90dGVkLCBzYXZlZCwgb3IgcGFzc2VkIGludG8gYSByYXcK
TnVtUHkgZnVuY3Rpb24gdGhhdCBhIHJlYWQtb25seSBjb3B5IG9mIHRoZSB2
YWx1ZSBpcyBicm91Z2h0IGJhY2sgdG8gdGhlIGhvc3QgYXMKYW4gbmRhcnJh
eSBhbmQgY2FjaGVkLiBUaGUgc2Vjb25kIGNhbGwgdG8gYGRvdGAgaXMgZmFz
dGVyIGJlY2F1c2UgdGhlCkpJVC1jb21waWxlZCBjb2RlIGlzIGNhY2hlZCBh
bmQgcmV1c2VkLCBzYXZpbmcgdGhlIGNvbXBpbGF0aW9uIHRpbWUuCgpUaGUg
ZnVuIHJlYWxseSBzdGFydHMgd2hlbiB5b3UgdXNlIGBncmFkYCBmb3IgYXV0
b21hdGljIGRpZmZlcmVudGlhdGlvbiBhbmQKYGppdGAgdG8gY29tcGlsZSB5
b3VyIG93biBmdW5jdGlvbnMgZW5kLXRvLWVuZC4gSGVyZeKAmXMgYSBtb3Jl
IGNvbXBsZXRlIHRveQpleGFtcGxlOgoKYGBgcHl0aG9uCmZyb20gamF4IGlt
cG9ydCBncmFkLCBqaXQKaW1wb3J0IGpheC5udW1weSBhcyBucAoKZGVmIHNp
Z21vaWQoeCk6CiAgICByZXR1cm4gMC41ICogKG5wLnRhbmgoeCAvIDIuKSAr
IDEpCgojIE91dHB1dHMgcHJvYmFiaWxpdHkgb2YgYSBsYWJlbCBiZWluZyB0
cnVlIGFjY29yZGluZyB0byBsb2dpc3RpYyBtb2RlbC4KZGVmIGxvZ2lzdGlj
X3ByZWRpY3Rpb25zKHdlaWdodHMsIGlucHV0cyk6CiAgICByZXR1cm4gc2ln
bW9pZChucC5kb3QoaW5wdXRzLCB3ZWlnaHRzKSkKCiMgVHJhaW5pbmcgbG9z
cyBpcyB0aGUgbmVnYXRpdmUgbG9nLWxpa2VsaWhvb2Qgb2YgdGhlIHRyYWlu
aW5nIGxhYmVscy4KZGVmIGxvc3Mod2VpZ2h0cywgaW5wdXRzLCB0YXJnZXRz
KToKICAgIHByZWRzID0gbG9naXN0aWNfcHJlZGljdGlvbnMod2VpZ2h0cywg
aW5wdXRzKQogICAgbGFiZWxfbG9ncHJvYnMgPSBucC5sb2cocHJlZHMpICog
dGFyZ2V0cyArIG5wLmxvZygxIC0gcHJlZHMpICogKDEgLSB0YXJnZXRzKQog
ICAgcmV0dXJuIC1ucC5zdW0obGFiZWxfbG9ncHJvYnMpCgojIEJ1aWxkIGEg
dG95IGRhdGFzZXQuCmlucHV0cyA9IG5wLmFycmF5KFtbMC41MiwgMS4xMiwg
IDAuNzddLAogICAgICAgICAgICAgICAgICAgWzAuODgsIC0xLjA4LCAwLjE1
XSwKICAgICAgICAgICAgICAgICAgIFswLjUyLCAwLjA2LCAtMS4zMF0sCiAg
ICAgICAgICAgICAgICAgICBbMC43NCwgLTIuNDksIDEuMzldXSkKdGFyZ2V0
cyA9IG5wLmFycmF5KFtUcnVlLCBUcnVlLCBGYWxzZSwgVHJ1ZV0pCgojIERl
ZmluZSBhIGNvbXBpbGVkIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBncmFkaWVu
dHMgb2YgdGhlIHRyYWluaW5nIGxvc3MKdHJhaW5pbmdfZ3JhZGllbnRfZnVu
ID0gaml0KGdyYWQobG9zcykpCgojIE9wdGltaXplIHdlaWdodHMgdXNpbmcg
Z3JhZGllbnQgZGVzY2VudC4Kd2VpZ2h0cyA9IG5wLmFycmF5KFswLjAsIDAu
MCwgMC4wXSkKcHJpbnQoIkluaXRpYWwgbG9zczogezowLjJmfSIuZm9ybWF0
KGxvc3Mod2VpZ2h0cywgaW5wdXRzLCB0YXJnZXRzKSkpCmZvciBpIGluIHJh
bmdlKDEwMCk6CiAgICB3ZWlnaHRzIC09IDAuMSAqIHRyYWluaW5nX2dyYWRp
ZW50X2Z1bih3ZWlnaHRzLCBpbnB1dHMsIHRhcmdldHMpCgpwcmludCgiVHJh
aW5lZCBsb3NzOiB7OjAuMmZ9Ii5mb3JtYXQobG9zcyh3ZWlnaHRzLCBpbnB1
dHMsIHRhcmdldHMpKSkKYGBgCgpUbyBzZWUgbW9yZSwgY2hlY2sgb3V0IHRo
ZSBbcXVpY2tzdGFydApub3RlYm9va10oaHR0cHM6Ly9qYXgucmVhZHRoZWRv
Y3MuaW8vZW4vbGF0ZXN0L25vdGVib29rcy9xdWlja3N0YXJ0Lmh0bWwpLAph
IFtzaW1wbGUgTU5JU1QgY2xhc3NpZmllcgpleGFtcGxlXShodHRwczovL2dp
dGh1Yi5jb20vZ29vZ2xlL2pheC9ibG9iL21hc3Rlci9leGFtcGxlcy9tbmlz
dF9jbGFzc2lmaWVyLnB5KQphbmQgdGhlIHJlc3Qgb2YgdGhlIFtKQVgKZXhh
bXBsZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9nb29nbGUvamF4L2Jsb2IvbWFz
dGVyL2V4YW1wbGVzLykuCgojIyBXaGF0J3Mgc3VwcG9ydGVkCgpJZiB5b3Xi
gJlyZSB1c2luZyBKQVgganVzdCBhcyBhbiBhY2NlbGVyYXRvci1iYWNrZWQg
TnVtUHksIHdpdGhvdXQgdXNpbmcgYGdyYWRgIG9yCmBqaXRgIGluIHlvdXIg
Y29kZSwgdGhlbiBpbiBwcmluY2lwbGUgdGhlcmUgYXJlIG5vIGNvbnN0cmFp
bnRzLCB0aG91Z2ggc29tZQpOdW1QeSBmdW5jdGlvbnMgaGF2ZW7igJl0IGJl
ZW4gaW1wbGVtZW50ZWQgeWV0LiBBIGxpc3Qgb2Ygc3VwcG9ydGVkIGZ1bmN0
aW9ucyBjYW4KYmUgZm91bmQgaW4gdGhlIFtyZWZlcmVuY2UgZG9jdW1lbnRh
dGlvbl0oaHR0cHM6Ly9qYXgucmVhZHRoZWRvY3MuaW8vKS4KCkdlbmVyYWxs
eSB1c2luZyBgbnAuZG90KEEsIEIpYCBpcwpiZXR0ZXIgdGhhbiBgQS5kb3Qo
QilgIGJlY2F1c2UgdGhlIGZvcm1lciBnaXZlcyB1cyBtb3JlIG9wcG9ydHVu
aXRpZXMgdG8gcnVuIHRoZQpjb21wdXRhdGlvbiBvbiB0aGUgZGV2aWNlLiBO
dW1QeSBhbHNvIGRvZXMgYSBsb3Qgb2Ygd29yayB0byBjYXN0IGFueSBhcnJh
eS1saWtlCmZ1bmN0aW9uIGFyZ3VtZW50cyB0byBhcnJheXMsIGFzIGluIGBu
cC5zdW0oW3gsIHldKWAsIHdoaWxlIGBqYXgubnVtcHlgCnR5cGljYWxseSBy
ZXF1aXJlcyBleHBsaWNpdCBjYXN0aW5nIG9mIGFycmF5IGFyZ3VtZW50cywg
bGlrZQpgbnAuc3VtKG5wLmFycmF5KFt4LCB5XSkpYC4KCkZvciBhdXRvbWF0
aWMgZGlmZmVyZW50aWF0aW9uIHdpdGggYGdyYWRgLCBKQVggaGFzIHRoZSBz
YW1lIHJlc3RyaWN0aW9ucwphcyBbQXV0b2dyYWRdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9oaXBzL2F1dG9ncmFkKS4gU3BlY2lmaWNhbGx5LCBkaWZmZXJlbnRp
YXRpb24Kd29ya3Mgd2l0aCBpbmRleGluZyAoYHggPSBBW2ksIGosIDpdYCkg
YnV0IG5vdCBpbmRleGVkIGFzc2lnbm1lbnQgKGBBW2ksIGpdID0KeGApIG9y
IGluZGV4ZWQgaW4tcGxhY2UgdXBkYXRpbmcgKGBBW2ldICs9IGJgKSAodXNl
CltgamF4Lm9wcy5pbmRleF91cGRhdGVgXShodHRwczovL2pheC5yZWFkdGhl
ZG9jcy5pby9lbi9sYXRlc3QvX2F1dG9zdW1tYXJ5L2pheC5vcHMuaW5kZXhf
dXBkYXRlLmh0bWwjamF4Lm9wcy5pbmRleF91cGRhdGUpCm9yCltgamF4Lm9w
cy5pbmRleF9hZGRgXShodHRwczovL2pheC5yZWFkdGhlZG9jcy5pby9lbi9s
YXRlc3QvX2F1dG9zdW1tYXJ5L2pheC5vcHMuaW5kZXhfYWRkLmh0bWwjamF4
Lm9wcy5pbmRleF9hZGQpCmluc3RlYWQpLiBZb3UgY2FuIHVzZSBsaXN0cywg
dHVwbGVzLCBhbmQKZGljdHMgZnJlZWx5OiBKQVggZG9lc24ndCBldmVuIHNl
ZSB0aGVtLiBVc2luZyBgbnAuZG90KEEsIEIpYCByYXRoZXIgdGhhbgpgQS5k
b3QoQilgIGlzIHJlcXVpcmVkIGZvciBhdXRvbWF0aWMgZGlmZmVyZW50aWF0
aW9uIHdoZW4gYEFgIGlzIGEgcmF3IG5kYXJyYXkuCgpGb3IgY29tcGlsaW5n
IHlvdXIgb3duIGZ1bmN0aW9ucyB3aXRoIGBqaXRgIHRoZXJlIGFyZSBhIGZl
dyBtb3JlIHJlcXVpcmVtZW50cy4KQmVjYXVzZSBgaml0YCBhaW1zIHRvIHNw
ZWNpYWxpemUgUHl0aG9uIGZ1bmN0aW9ucyBvbmx5IG9uIHNoYXBlcyBhbmQg
ZHR5cGVzCmR1cmluZyB0cmFjaW5nLCByYXRoZXIgdGhhbiBvbiBjb25jcmV0
ZSB2YWx1ZXMsIFB5dGhvbiBjb250cm9sIGZsb3cgdGhhdCBkZXBlbmRzCm9u
IGNvbmNyZXRlIHZhbHVlcyB3b27igJl0IGJlIGFibGUgdG8gZXhlY3V0ZSBh
bmQgd2lsbCBpbnN0ZWFkIHJhaXNlIGFuIGVycm9yLiBJZgp5b3Ugd2FudCBj
b21waWxlZCBjb250cm9sIGZsb3csIHVzZSBzdHJ1Y3R1cmVkIGNvbnRyb2wg
ZmxvdyBwcmltaXRpdmVzIGxpa2UKYGxheC5jb25kYCBhbmQgYGxheC53aGls
ZV9sb29wYC4gU29tZSBpbmRleGluZyBmZWF0dXJlcywgbGlrZSBzbGljZS1i
YXNlZAppbmRleGluZywgZS5nLiBgQVtpOmkrNV1gIGZvciBhcmd1bWVudC1k
ZXBlbmRlbnQgYGlgLCBvciBib29sZWFuLWJhc2VkIGluZGV4aW5nLAplLmcu
IGBBW2Jvb2xfaW5kXWAgZm9yIGFyZ3VtZW50LWRlcGVuZGVudCBgYm9vbF9p
bmRgLCBwcm9kdWNlIGFic3RyYWN0IHZhbHVlcyBvZgp1bmtub3duIHNoYXBl
IGFuZCBhcmUgdGh1cyB1bnN1cHBvcnRlZCBpbiBgaml0YCBmdW5jdGlvbnMu
CgpJbiBnZW5lcmFsLCBKQVggaXMgaW50ZW5kZWQgdG8gYmUgdXNlZCB3aXRo
IGEgZnVuY3Rpb25hbCBzdHlsZSBvZiBQeXRob24KcHJvZ3JhbW1pbmcuIEZ1
bmN0aW9ucyBwYXNzZWQgdG8gdHJhbnNmb3JtYXRpb25zIGxpa2UgYGdyYWRg
IGFuZCBgaml0YCBhcmUKZXhwZWN0ZWQgdG8gYmUgZnJlZSBvZiBzaWRlLWVm
ZmVjdHMuIFlvdSBjYW4gd3JpdGUgcHJpbnQgc3RhdGVtZW50cyBmb3IKZGVi
dWdnaW5nIGJ1dCB0aGV5IG1heSBvbmx5IGJlIGV4ZWN1dGVkIG9uY2UgaWYg
dGhleSdyZSB1bmRlciBhIGBqaXRgIGRlY29yYXRvci4KCj4gVExEUiAqKkRv
IHVzZSoqCj4KPiAqICAgRnVuY3Rpb25hbCBwcm9ncmFtbWluZwo+ICogICBb
TWFueV0oaHR0cHM6Ly9qYXgucmVhZHRoZWRvY3MuaW8vZW4vbGF0ZXN0L2ph
eC5udW1weS5odG1sKSBvZiBOdW1QeeKAmXMKPiAgICAgZnVuY3Rpb25zICho
ZWxwIHVzIGFkZCBtb3JlISkKPiAqICAgW1NvbWVdKGh0dHBzOi8vamF4LnJl
YWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9qYXguc2NpcHkuaHRtbCkgU2NpUHkg
ZnVuY3Rpb25zCj4gKiAgIEluZGV4aW5nIGFuZCBzbGljaW5nIG9mIGFycmF5
cyBsaWtlIGB4ID0gQVtbNSwgMSwgN10sIDosIDI6NF1gCj4gKiAgIEV4cGxp
Y2l0IGFycmF5IGNyZWF0aW9uIGZyb20gbGlzdHMgbGlrZSBgQSA9IG5wLmFy
cmF5KFt4LCB5XSlgCj4KPiAqKkRvbuKAmXQgdXNlKioKPgo+ICogICBBc3Np
Z25tZW50IGludG8gYXJyYXlzIGxpa2UgYEFbMCwgMF0gPSB4YCAodXNlCj4g
ICAgIFtgamF4Lm9wcy5pbmRleF91cGRhdGVgXShodHRwczovL2pheC5yZWFk
dGhlZG9jcy5pby9lbi9sYXRlc3QvX2F1dG9zdW1tYXJ5L2pheC5vcHMuaW5k
ZXhfdXBkYXRlLmh0bWwjamF4Lm9wcy5pbmRleF91cGRhdGUpCj4gICAgIGlu
c3RlYWQpCj4gKiAgIEltcGxpY2l0IGNhc3RpbmcgdG8gYXJyYXlzIGxpa2Ug
YG5wLnN1bShbeCwgeV0pYCAodXNlIGBucC5zdW0obnAuYXJyYXkoW3gsCj4g
ICAgIHldKWAgaW5zdGVhZCkKPiAqICAgYEEuZG90KEIpYCBtZXRob2Qgc3lu
dGF4IGZvciBmdW5jdGlvbnMgb2YgbW9yZSB0aGFuIG9uZSBhcmd1bWVudCAo
dXNlCj4gICAgIGBucC5kb3QoQSwgQilgIGluc3RlYWQpCj4gKiAgIFNpZGUt
ZWZmZWN0cyBsaWtlIG11dGF0aW9uIG9mIGFyZ3VtZW50cyBvciBtdXRhdGlv
biBvZiBnbG9iYWwgdmFyaWFibGVzCj4gKiAgIFRoZSBgb3V0YCBhcmd1bWVu
dCBvZiBOdW1QeSBmdW5jdGlvbnMKPiAqICAgRHR5cGUgY2FzdGluZyBsaWtl
IGBucC5mbG9hdDY0KHgpYCAodXNlIGB4LmFzdHlwZSgnZmxvYXQ2NCcpYCBv
cgo+ICAgICBgeC5hc3R5cGUobnAuZmxvYXQ2NClgIGluc3RlYWQpLgo+Cj4g
KipGb3Igaml0IGZ1bmN0aW9ucywgYWxzbyBkb27igJl0IHVzZSoqCj4KPiAq
ICAgQ29udHJvbCBmbG93IGJhc2VkIG9uIGR5bmFtaWMgdmFsdWVzIGBpZiB4
ID4gMDogLi4uYC4gQ29udHJvbCBmbG93IGJhc2VkCj4gICAgIG9uIHNoYXBl
cyBpcyBmaW5lOiBgaWYgeC5zaGFwZVswXSA+IDI6IC4uLmAgYW5kIGBmb3Ig
c3ViYXJyIGluIGFycmF5YC4KPiAqICAgU2xpY2luZyBgQVtpOmkrNV1gIGZv
ciBkeW5hbWljIGluZGV4IGBpYCAodXNlIGBsYXguZHluYW1pY19zbGljZWAg
aW5zdGVhZCkKPiAgICAgb3IgYm9vbGVhbiBpbmRleGluZyBgQVtib29sX2lu
ZF1gIGZvciB0cmFjZWQgdmFsdWVzIGBib29sX2luZGAuCgpZb3Ugc2hvdWxk
IGdldCBsb3VkIGVycm9ycyBpZiB5b3VyIGNvZGUgdmlvbGF0ZXMgYW55IG9m
IHRoZXNlLgoKIyMgVHJhbnNmb3JtYXRpb25zCgpBdCBpdHMgY29yZSwgSkFY
IGlzIGFuIGV4dGVuc2libGUgc3lzdGVtIGZvciB0cmFuc2Zvcm1pbmcgbnVt
ZXJpY2FsIGZ1bmN0aW9ucy4KV2UgY3VycmVudGx5IGV4cG9zZSB0aHJlZSBp
bXBvcnRhbnQgdHJhbnNmb3JtYXRpb25zOiBgZ3JhZGAsIGBqaXRgLCBhbmQg
YHZtYXBgLgoKIyMjIEF1dG9tYXRpYyBkaWZmZXJlbnRpYXRpb24gd2l0aCBn
cmFkCgpKQVggaGFzIHJvdWdobHkgdGhlIHNhbWUgQVBJIGFzIFtBdXRvZ3Jh
ZF0oaHR0cHM6Ly9naXRodWIuY29tL2hpcHMvYXV0b2dyYWQpLgpUaGUgbW9z
dCBwb3B1bGFyIGZ1bmN0aW9uIGlzIGBncmFkYCBmb3IgcmV2ZXJzZS1tb2Rl
IGdyYWRpZW50czoKCmBgYHB5dGhvbgpmcm9tIGpheCBpbXBvcnQgZ3JhZApp
bXBvcnQgamF4Lm51bXB5IGFzIG5wCgpkZWYgdGFuaCh4KTogICMgRGVmaW5l
IGEgZnVuY3Rpb24KICB5ID0gbnAuZXhwKC0yLjAgKiB4KQogIHJldHVybiAo
MS4wIC0geSkgLyAoMS4wICsgeSkKCmdyYWRfdGFuaCA9IGdyYWQodGFuaCkg
ICMgT2J0YWluIGl0cyBncmFkaWVudCBmdW5jdGlvbgpwcmludChncmFkX3Rh
bmgoMS4wKSkgICAjIEV2YWx1YXRlIGl0IGF0IHggPSAxLjAKIyBwcmludHMg
MC40MTk5NzQzNDE2MTQwMjYwMwpgYGAKCllvdSBjYW4gZGlmZmVyZW50aWF0
ZSB0byBhbnkgb3JkZXIgd2l0aCBgZ3JhZGAuCgpGb3IgbW9yZSBhZHZhbmNl
ZCBhdXRvZGlmZiwgeW91IGNhbiB1c2UgYGpheC52anBgIGZvciByZXZlcnNl
LW1vZGUKdmVjdG9yLUphY29iaWFuIHByb2R1Y3RzIGFuZCBgamF4Lmp2cGAg
Zm9yIGZvcndhcmQtbW9kZSBKYWNvYmlhbi12ZWN0b3IKcHJvZHVjdHMuIFRo
ZSB0d28gY2FuIGJlIGNvbXBvc2VkIGFyYml0cmFyaWx5IHdpdGggb25lIGFu
b3RoZXIsIGFuZCB3aXRoIG90aGVyCkpBWCB0cmFuc2Zvcm1hdGlvbnMuIEhl
cmUncyBvbmUgd2F5IHRvIGNvbXBvc2UKdGhvc2UgdG8gbWFrZSBhIGZ1bmN0
aW9uIHRoYXQgZWZmaWNpZW50bHkgY29tcHV0ZXMgZnVsbCBIZXNzaWFuIG1h
dHJpY2VzOgoKYGBgcHl0aG9uCmZyb20gamF4IGltcG9ydCBqaXQsIGphY2Z3
ZCwgamFjcmV2CmRlZiBoZXNzaWFuKGZ1bik6CiAgcmV0dXJuIGppdChqYWNm
d2QoamFjcmV2KGZ1bikpKQpgYGAKCkFzIHdpdGggQXV0b2dyYWQsIHlvdSdy
ZSBmcmVlIHRvIHVzZSBkaWZmZXJlbnRpYXRpb24gd2l0aCBQeXRob24gY29u
dHJvbApzdHJ1Y3R1cmVzOgoKYGBgcHl0aG9uCmRlZiBhYnNfdmFsKHgpOgog
IGlmIHggPiAwOgogICAgcmV0dXJuIHgKICBlbHNlOgogICAgcmV0dXJuIC14
CgphYnNfdmFsX2dyYWQgPSBncmFkKGFic192YWwpCnByaW50KGFic192YWxf
Z3JhZCgxLjApKSAgICMgcHJpbnRzIDEuMApwcmludChhYnNfdmFsX2dyYWQo
LTEuMCkpICAjIHByaW50cyAtMS4wIChhYnNfdmFsIGlzIHJlLWV2YWx1YXRl
ZCkKYGBgCgojIyMgQ29tcGlsYXRpb24gd2l0aCBqaXQKCllvdSBjYW4gdXNl
IFhMQSB0byBjb21waWxlIHlvdXIgZnVuY3Rpb25zIGVuZC10by1lbmQgd2l0
aCBgaml0YCwgdXNlZCBlaXRoZXIgYXMKYW4gYEBqaXRgIGRlY29yYXRvciBv
ciBhcyBhIGhpZ2hlci1vcmRlciBmdW5jdGlvbi4KCmBgYHB5dGhvbgppbXBv
cnQgamF4Lm51bXB5IGFzIG5wCmZyb20gamF4IGltcG9ydCBqaXQKCmRlZiBz
bG93X2YoeCk6CiAgIyBFbGVtZW50LXdpc2Ugb3BzIHNlZSBhIGxhcmdlIGJl
bmVmaXQgZnJvbSBmdXNpb24KICByZXR1cm4geCAqIHggKyB4ICogMi4wCgp4
ID0gbnAub25lcygoNTAwMCwgNTAwMCkpCmZhc3RfZiA9IGppdChzbG93X2Yp
CiV0aW1laXQgLW4xMCAtcjMgZmFzdF9mKHgpICAjIH4gNC41IG1zIC8gbG9v
cCBvbiBUaXRhbiBYCiV0aW1laXQgLW4xMCAtcjMgc2xvd19mKHgpICAjIH4g
MTQuNSBtcyAvIGxvb3AgKGFsc28gb24gR1BVIHZpYSBKQVgpCmBgYAoKWW91
IGNhbiBtaXggYGppdGAgYW5kIGBncmFkYCBhbmQgYW55IG90aGVyIEpBWCB0
cmFuc2Zvcm1hdGlvbiBob3dldmVyIHlvdSBsaWtlLgoKIyMjIEF1dG8tdmVj
dG9yaXphdGlvbiB3aXRoIHZtYXAKCmB2bWFwYCBpcyB0aGUgdmVjdG9yaXpp
bmcgbWFwLgpJdCBoYXMgdGhlIGZhbWlsaWFyIHNlbWFudGljcyBvZiBtYXBw
aW5nIGEgZnVuY3Rpb24gYWxvbmcgYXJyYXkgYXhlcywgYnV0Cmluc3RlYWQg
b2Yga2VlcGluZyB0aGUgbG9vcCBvbiB0aGUgb3V0c2lkZSwgaXQgcHVzaGVz
IHRoZSBsb29wIGRvd24gaW50byBhCmZ1bmN0aW9u4oCZcyBwcmltaXRpdmUg
b3BlcmF0aW9ucyBmb3IgYmV0dGVyIHBlcmZvcm1hbmNlLgoKVXNpbmcgYHZt
YXBgIGNhbiBzYXZlIHlvdSBmcm9tIGhhdmluZyB0byBjYXJyeSBhcm91bmQg
YmF0Y2ggZGltZW5zaW9ucyBpbiB5b3VyCmNvZGUuIEZvciBleGFtcGxlLCBj
b25zaWRlciB0aGlzIHNpbXBsZSAqdW5iYXRjaGVkKiBuZXVyYWwgbmV0d29y
ayBwcmVkaWN0aW9uCmZ1bmN0aW9uOgoKYGBgcHl0aG9uCmRlZiBwcmVkaWN0
KHBhcmFtcywgaW5wdXRfdmVjKToKICBhc3NlcnQgaW5wdXRfdmVjLm5kaW0g
PT0gMQogIGZvciBXLCBiIGluIHBhcmFtczoKICAgIG91dHB1dF92ZWMgPSBu
cC5kb3QoVywgaW5wdXRfdmVjKSArIGIgICMgYGlucHV0X3ZlY2Agb24gdGhl
IHJpZ2h0LWhhbmQgc2lkZSEKICAgIGlucHV0X3ZlYyA9IG5wLnRhbmgob3V0
cHV0X3ZlYykKICByZXR1cm4gb3V0cHV0X3ZlYwpgYGAKCldlIG9mdGVuIGlu
c3RlYWQgd3JpdGUgYG5wLmRvdChpbnB1dHMsIFcpYCB0byBhbGxvdyBmb3Ig
YSBiYXRjaCBkaW1lbnNpb24gb24gdGhlCmxlZnQgc2lkZSBvZiBgaW5wdXRz
YCwgYnV0IHdl4oCZdmUgd3JpdHRlbiB0aGlzIHBhcnRpY3VsYXIgcHJlZGlj
dGlvbiBmdW5jdGlvbiB0bwphcHBseSBvbmx5IHRvIHNpbmdsZSBpbnB1dCB2
ZWN0b3JzLiBJZiB3ZSB3YW50ZWQgdG8gYXBwbHkgdGhpcyBmdW5jdGlvbiB0
byBhCmJhdGNoIG9mIGlucHV0cyBhdCBvbmNlLCBzZW1hbnRpY2FsbHkgd2Ug
Y291bGQganVzdCB3cml0ZQoKYGBgcHl0aG9uCmZyb20gZnVuY3Rvb2xzIGlt
cG9ydCBwYXJ0aWFsCnByZWRpY3Rpb25zID0gbnAuc3RhY2sobGlzdChtYXAo
cGFydGlhbChwcmVkaWN0LCBwYXJhbXMpLCBpbnB1dF9iYXRjaCkpKQpgYGAK
CkJ1dCBwdXNoaW5nIG9uZSBleGFtcGxlIHRocm91Z2ggdGhlIG5ldHdvcmsg
YXQgYSB0aW1lIHdvdWxkIGJlIHNsb3chIEl04oCZcyBiZXR0ZXIKdG8gdmVj
dG9yaXplIHRoZSBjb21wdXRhdGlvbiwgc28gdGhhdCBhdCBldmVyeSBsYXll
ciB3ZeKAmXJlIGRvaW5nIG1hdHJpeC1tYXRyaXgKbXVsdGlwbGllcyByYXRo
ZXIgdGhhbiBtYXRyaXgtdmVjdG9yIG11bHRpcGxpZXMuCgpUaGUgYHZtYXBg
IGZ1bmN0aW9uIGRvZXMgdGhhdCB0cmFuc2Zvcm1hdGlvbiBmb3IgdXMuIFRo
YXQgaXMsIGlmIHdlIHdyaXRlCgpgYGBweXRob24KZnJvbSBqYXggaW1wb3J0
IHZtYXAKcHJlZGljdGlvbnMgPSB2bWFwKHBhcnRpYWwocHJlZGljdCwgcGFy
YW1zKSkoaW5wdXRfYmF0Y2gpCiMgb3IsIGFsdGVybmF0aXZlbHkKcHJlZGlj
dGlvbnMgPSB2bWFwKHByZWRpY3QsIGluX2F4ZXM9KE5vbmUsIDApKShwYXJh
bXMsIGlucHV0X2JhdGNoKQpgYGAKCnRoZW4gdGhlIGB2bWFwYCBmdW5jdGlv
biB3aWxsIHB1c2ggdGhlIG91dGVyIGxvb3AgaW5zaWRlIHRoZSBmdW5jdGlv
biwgYW5kIG91cgptYWNoaW5lIHdpbGwgZW5kIHVwIGV4ZWN1dGluZyBtYXRy
aXgtbWF0cml4IG11bHRpcGxpY2F0aW9ucyBleGFjdGx5IGFzIGlmIHdl4oCZ
ZApkb25lIHRoZSBiYXRjaGluZyBieSBoYW5kLgoKSXTigJlzIGVhc3kgZW5v
dWdoIHRvIG1hbnVhbGx5IGJhdGNoIGEgc2ltcGxlIG5ldXJhbCBuZXR3b3Jr
IHdpdGhvdXQgYHZtYXBgLCBidXQKaW4gb3RoZXIgY2FzZXMgbWFudWFsIHZl
Y3Rvcml6YXRpb24gY2FuIGJlIGltcHJhY3RpY2FsIG9yIGltcG9zc2libGUu
IFRha2UgdGhlCnByb2JsZW0gb2YgZWZmaWNpZW50bHkgY29tcHV0aW5nIHBl
ci1leGFtcGxlIGdyYWRpZW50czogdGhhdCBpcywgZm9yIGEgZml4ZWQgc2V0
Cm9mIHBhcmFtZXRlcnMsIHdlIHdhbnQgdG8gY29tcHV0ZSB0aGUgZ3JhZGll
bnQgb2Ygb3VyIGxvc3MgZnVuY3Rpb24gZXZhbHVhdGVkCnNlcGFyYXRlbHkg
YXQgZWFjaCBleGFtcGxlIGluIGEgYmF0Y2guIFdpdGggYHZtYXBgLCBpdOKA
mXMgZWFzeToKCmBgYHB5dGhvbgpwZXJfZXhhbXBsZV9ncmFkaWVudHMgPSB2
bWFwKHBhcnRpYWwoZ3JhZChsb3NzKSwgcGFyYW1zKSkoaW5wdXRzLCB0YXJn
ZXRzKQpgYGAKCk9mIGNvdXJzZSwgYHZtYXBgIGNhbiBiZSBhcmJpdHJhcmls
eSBjb21wb3NlZCB3aXRoIGBqaXRgLCBgZ3JhZGAsIGFuZCBhbnkgb3RoZXIK
SkFYIHRyYW5zZm9ybWF0aW9uISBXZSB1c2UgYHZtYXBgIHdpdGggYm90aCBm
b3J3YXJkLSBhbmQgcmV2ZXJzZS1tb2RlIGF1dG9tYXRpYwpkaWZmZXJlbnRp
YXRpb24gZm9yIGZhc3QgSmFjb2JpYW4gYW5kIEhlc3NpYW4gbWF0cml4IGNh
bGN1bGF0aW9ucyBpbgpgamF4LmphY2Z3ZGAsIGBqYXguamFjcmV2YCwgYW5k
IGBqYXguaGVzc2lhbmAuCgoKIyMgUmFuZG9tIG51bWJlcnMgYXJlIGRpZmZl
cmVudAoKSkFYIG5lZWRzIGEgW2Z1bmN0aW9uYWwgcHNldWRvLXJhbmRvbSBu
dW1iZXIgZ2VuZXJhdG9yIChQUk5HKSBzeXN0ZW1dKGRlc2lnbl9ub3Rlcy9w
cm5nLm1kKSB0byBwcm92aWRlCnJlcHJvZHVjaWJsZSByZXN1bHRzIGludmFy
aWFudCB0byBjb21waWxhdGlvbiBib3VuZGFyaWVzIGFuZCBiYWNrZW5kcywg
d2hpbGUKYWxzbyBtYXhpbWl6aW5nIHBlcmZvcm1hbmNlIGJ5IGVuYWJsaW5n
IHZlY3Rvcml6ZWQgZ2VuZXJhdGlvbiBhbmQKcGFyYWxsZWxpemF0aW9uIGFj
cm9zcyByYW5kb20gY2FsbHMuIFRoZSBgbnVtcHkucmFuZG9tYCBsaWJyYXJ5
IGRvZXNu4oCZdCBoYXZlCnRob3NlIHByb3BlcnRpZXMuIFRoZSBgamF4LnJh
bmRvbWAgbGlicmFyeSBtZWV0cyB0aG9zZSBuZWVkczogaXTigJlzIGZ1bmN0
aW9uYWxseQpwdXJlLCBidXQgaXQgZG9lc27igJl0IHJlcXVpcmUgeW91IHRv
IHBhc3Mgc3RhdGVmdWwgcmFuZG9tIG9iamVjdHMgYmFjayBvdXQgb2YKZXZl
cnkgZnVuY3Rpb24uCgpUaGUgYGpheC5yYW5kb21gIGxpYnJhcnkgdXNlcwpb
Y291bnQtYmFzZWQgUFJOR3NdKGh0dHA6Ly93d3cudGhlc2FsbW9ucy5vcmcv
am9obi9yYW5kb20xMjMvcGFwZXJzL3JhbmRvbTEyM3NjMTEucGRmKQphbmQg
YSBmdW5jdGlvbmFsIGFycmF5LW9yaWVudGVkCltzcGxpdHRpbmcgbW9kZWxd
KGh0dHA6Ly9wdWJsaWNhdGlvbnMubGliLmNoYWxtZXJzLnNlL3JlY29yZHMv
ZnVsbHRleHQvMTgzMzQ4L2xvY2FsXzE4MzM0OC5wZGYpLgpUbyBnZW5lcmF0
ZSByYW5kb20gdmFsdWVzLCB5b3UgY2FsbCBhIGZ1bmN0aW9uIGxpa2UgYGph
eC5yYW5kb20ubm9ybWFsYCBhbmQgZ2l2ZQppdCBhIFBSTkcga2V5OgoKYGBg
cHl0aG9uCmltcG9ydCBqYXgucmFuZG9tIGFzIHJhbmRvbQoKa2V5ID0gcmFu
ZG9tLlBSTkdLZXkoMCkKcHJpbnQocmFuZG9tLm5vcm1hbChrZXksIHNoYXBl
PSgzLCkpKSAgIyBbIDEuODE2MDg1OTMgLTAuNDgyNjIzMjUgIDAuMzM5ODg5
MDJdCmBgYAoKSWYgd2UgbWFrZSB0aGUgc2FtZSBjYWxsIGFnYWluIHdpdGgg
dGhlIHNhbWUga2V5LCB3ZSBnZXQgdGhlIHNhbWUgdmFsdWVzOgoKYGBgcHl0
aG9uCnByaW50KHJhbmRvbS5ub3JtYWwoa2V5LCBzaGFwZT0oMywpKSkgICMg
WyAxLjgxNjA4NTkzIC0wLjQ4MjYyMzI1ICAwLjMzOTg4OTAyXQpgYGAKClRo
ZSBrZXkgbmV2ZXIgZ2V0cyB1cGRhdGVkLiBTbyBob3cgZG8gd2UgZ2V0IGZy
ZXNoIHJhbmRvbSB2YWx1ZXM/IFdlIHVzZQpgamF4LnJhbmRvbS5zcGxpdGAg
dG8gY3JlYXRlIG5ldyBrZXlzIGZyb20gZXhpc3Rpbmcgb25lcy4gQSBjb21t
b24gcGF0dGVybiBpcyB0bwpzcGxpdCBvZmYgYSBuZXcga2V5IGZvciBldmVy
eSBmdW5jdGlvbiBjYWxsIHRoYXQgbmVlZHMgcmFuZG9tIHZhbHVlczoKCmBg
YHB5dGhvbgprZXkgPSByYW5kb20uUFJOR0tleSgwKQoKa2V5LCBzdWJrZXkg
PSByYW5kb20uc3BsaXQoa2V5KQpwcmludChyYW5kb20ubm9ybWFsKHN1Ymtl
eSwgc2hhcGU9KDMsKSkpICAjIFsgMS4xMzc4NzgzICAtMS4yMjA5NTQ3OCAt
MC41OTE1MzY0Nl0KCmtleSwgc3Via2V5ID0gcmFuZG9tLnNwbGl0KGtleSkK
cHJpbnQocmFuZG9tLm5vcm1hbChzdWJrZXksIHNoYXBlPSgzLCkpKSAgIyBb
LTAuMDY2MDcyNjUgIDAuMTY2NzY1NjYgIDEuMTc4MDAzNDNdCmBgYAoKQnkg
c3BsaXR0aW5nIHRoZSBQUk5HIGtleSwgbm90IG9ubHkgZG8gd2UgYXZvaWQg
aGF2aW5nIHRvIHRocmVhZCByYW5kb20gc3RhdGVzCmJhY2sgb3V0IG9mIGV2
ZXJ5IGZ1bmN0aW9uIGNhbGwsIGJ1dCBhbHNvIHdlIGNhbiBnZW5lcmF0ZSBt
dWx0aXBsZSByYW5kb20gYXJyYXlzCmluIHBhcmFsbGVsIGJlY2F1c2Ugd2Ug
Y2FuIGF2b2lkIHVubmVjZXNzYXJ5IHNlcXVlbnRpYWwgZGVwZW5kZW5jaWVz
LgoKVGhlcmUncyBhIGdvdGNoYSBoZXJlLCB3aGljaCBpcyB0aGF0IGl0J3Mg
ZWFzeSB0byB1bmludGVudGlvbmFsbHkgcmV1c2UgYSBrZXkKd2l0aG91dCBz
cGxpdHRpbmcuIFdlIGludGVuZCB0byBhZGQgYSBjaGVjayBmb3IgdGhpcyAo
YSBzb3J0IG9mIGR5bmFtaWMgbGluZWFyCnR5cGluZykgYnV0IGZvciBub3cg
aXQncyBzb21ldGhpbmcgdG8gYmUgY2FyZWZ1bCBhYm91dC4KCkZvciBtb3Jl
IGRldGFpbGVkIGluZm9ybWF0aW9uIG9uIHRoZSBkZXNpZ24gYW5kIHRoZSBy
ZWFzb25pbmcgYmVoaW5kIGl0LCBzZWUgdGhlCltQUk5HIGRlc2lnbiBkb2Nd
KGRlc2lnbl9ub3Rlcy9wcm5nLm1kKS4KCgojIyBNaW5pLWxpYnJhcmllcwoK
SkFYIHByb3ZpZGVzIHNvbWUgc21hbGwsIGV4cGVyaW1lbnRhbCBsaWJyYXJp
ZXMgZm9yIG1hY2hpbmUgbGVhcm5pbmcuIFRoZXNlCmxpYnJhcmllcyBhcmUg
aW4gcGFydCBhYm91dCBwcm92aWRpbmcgdG9vbHMgYW5kIGluIHBhcnQgYWJv
dXQgc2VydmluZyBhcwpleGFtcGxlcyBmb3IgaG93IHRvIGJ1aWxkIHN1Y2gg
bGlicmFyaWVzIHVzaW5nIEpBWC4gRWFjaCBvbmUgaXMgb25seSBhIGZldwpo
dW5kcmVkIGxpbmVzIG9mIGNvZGUsIHNvIHRha2UgYSBsb29rIGluc2lkZSBh
bmQgYWRhcHQgdGhlbSBhcyB5b3UgbmVlZCEKCiMjIyBOZXVyYWwtbmV0IGJ1
aWxkaW5nIHdpdGggU3RheAoKKipTdGF4KiogaXMgYSBmdW5jdGlvbmFsIG5l
dXJhbCBuZXR3b3JrIGJ1aWxkaW5nIGxpYnJhcnkuIFRoZSBiYXNpYyBpZGVh
IGlzIHRoYXQKYSBzaW5nbGUgbGF5ZXIgb3IgYW4gZW50aXJlIG5ldHdvcmsg
Y2FuIGJlIG1vZGVsZWQgYXMgYW4gYChpbml0X2Z1biwgYXBwbHlfZnVuKWAK
cGFpci4gVGhlIGBpbml0X2Z1bmAgaXMgdXNlZCB0byBpbml0aWFsaXplIG5l
dHdvcmsgcGFyYW1ldGVycyBhbmQgdGhlCmBhcHBseV9mdW5gIHRha2VzIHBh
cmFtZXRlcnMgYW5kIGlucHV0cyB0byBwcm9kdWNlIG91dHB1dHMuIFRoZXJl
IGFyZQpjb25zdHJ1Y3RvciBmdW5jdGlvbnMgZm9yIGNvbW1vbiBiYXNpYyBw
YWlycywgbGlrZSBgQ29udmAgYW5kIGBSZWx1YCwgYW5kIHRoZXNlCnBhaXJz
IGNhbiBiZSBjb21wb3NlZCBpbiBzZXJpZXMgdXNpbmcgYHN0YXguc2VyaWFs
YCBvciBpbiBwYXJhbGxlbCB1c2luZwpgc3RheC5wYXJhbGxlbGAuCgpIZXJl
4oCZcyBhbiBleGFtcGxlOgoKYGBgcHl0aG9uCmltcG9ydCBqYXgubnVtcHkg
YXMgbnAKZnJvbSBqYXggaW1wb3J0IHJhbmRvbQpmcm9tIGpheC5leHBlcmlt
ZW50YWwgaW1wb3J0IHN0YXgKZnJvbSBqYXguZXhwZXJpbWVudGFsLnN0YXgg
aW1wb3J0IENvbnYsIERlbnNlLCBNYXhQb29sLCBSZWx1LCBGbGF0dGVuLCBM
b2dTb2Z0bWF4CgojIFVzZSBzdGF4IHRvIHNldCB1cCBuZXR3b3JrIGluaXRp
YWxpemF0aW9uIGFuZCBldmFsdWF0aW9uIGZ1bmN0aW9ucwpuZXRfaW5pdCwg
bmV0X2FwcGx5ID0gc3RheC5zZXJpYWwoCiAgICBDb252KDMyLCAoMywgMyks
IHBhZGRpbmc9J1NBTUUnKSwgUmVsdSwKICAgIENvbnYoNjQsICgzLCAzKSwg
cGFkZGluZz0nU0FNRScpLCBSZWx1LAogICAgTWF4UG9vbCgoMiwgMikpLCBG
bGF0dGVuLAogICAgRGVuc2UoMTI4KSwgUmVsdSwKICAgIERlbnNlKDEwKSwg
TG9nU29mdG1heCwKKQoKIyBJbml0aWFsaXplIHBhcmFtZXRlcnMsIG5vdCBj
b21taXR0aW5nIHRvIGEgYmF0Y2ggc2hhcGUKcm5nID0gcmFuZG9tLlBSTkdL
ZXkoMCkKaW5fc2hhcGUgPSAoLTEsIDI4LCAyOCwgMSkKb3V0X3NoYXBlLCBu
ZXRfcGFyYW1zID0gbmV0X2luaXQocm5nLCBpbl9zaGFwZSkKCiMgQXBwbHkg
bmV0d29yayB0byBkdW1teSBpbnB1dHMKaW5wdXRzID0gbnAuemVyb3MoKDEy
OCwgMjgsIDI4LCAxKSkKcHJlZGljdGlvbnMgPSBuZXRfYXBwbHkobmV0X3Bh
cmFtcywgaW5wdXRzKQpgYGAKCiMjIyBGaXJzdC1vcmRlciBvcHRpbWl6YXRp
b24KCkpBWCBoYXMgYSBtaW5pbWFsIG9wdGltaXphdGlvbiBsaWJyYXJ5IGZv
Y3VzZWQgb24gc3RvY2hhc3RpYyBmaXJzdC1vcmRlcgpvcHRpbWl6ZXJzLiBF
dmVyeSBvcHRpbWl6ZXIgaXMgbW9kZWxlZCBhcyBhbiBgKGluaXRfZnVuLCB1
cGRhdGVfZnVuLApnZXRfcGFyYW1zKWAgdHJpcGxlIG9mIGZ1bmN0aW9ucy4g
VGhlIGBpbml0X2Z1bmAgaXMgdXNlZCB0byBpbml0aWFsaXplIHRoZQpvcHRp
bWl6ZXIgc3RhdGUsIHdoaWNoIGNvdWxkIGluY2x1ZGUgdGhpbmdzIGxpa2Ug
bW9tZW50dW0gdmFyaWFibGVzLCBhbmQgdGhlCmB1cGRhdGVfZnVuYCBhY2Nl
cHRzIGEgZ3JhZGllbnQgYW5kIGFuIG9wdGltaXplciBzdGF0ZSB0byBwcm9k
dWNlIGEgbmV3Cm9wdGltaXplciBzdGF0ZS4gVGhlIGBnZXRfcGFyYW1zYCBm
dW5jdGlvbiBleHRyYWN0cyB0aGUgY3VycmVudCBpdGVyYXRlIChpLmUuCnRo
ZSBjdXJyZW50IHBhcmFtZXRlcnMpIGZyb20gdGhlIG9wdGltaXplciBzdGF0
ZS4gVGhlIHBhcmFtZXRlcnMgYmVpbmcgb3B0aW1pemVkCmNhbiBiZSBuZGFy
cmF5cyBvciBhcmJpdHJhcmlseS1uZXN0ZWQgbGlzdC90dXBsZS9kaWN0IHN0
cnVjdHVyZXMsIHNvIHlvdSBjYW4Kc3RvcmUgeW91ciBwYXJhbWV0ZXJzIGhv
d2V2ZXIgeW914oCZZCBsaWtlLgoKSGVyZeKAmXMgYW4gZXhhbXBsZSwgdXNp
bmcgYGppdGAgdG8gY29tcGlsZSB0aGUgd2hvbGUgdXBkYXRlIGVuZC10by1l
bmQ6CgpgYGBweXRob24KZnJvbSBqYXguZXhwZXJpbWVudGFsIGltcG9ydCBv
cHRpbWl6ZXJzCmZyb20gamF4IGltcG9ydCBqaXQsIGdyYWQKCiMgRGVmaW5l
IGEgc2ltcGxlIHNxdWFyZWQtZXJyb3IgbG9zcwpkZWYgbG9zcyhwYXJhbXMs
IGJhdGNoKToKICBpbnB1dHMsIHRhcmdldHMgPSBiYXRjaAogIHByZWRpY3Rp
b25zID0gbmV0X2FwcGx5KHBhcmFtcywgaW5wdXRzKQogIHJldHVybiBucC5z
dW0oKHByZWRpY3Rpb25zIC0gdGFyZ2V0cykqKjIpCgojIFVzZSBvcHRpbWl6
ZXJzIHRvIHNldCBvcHRpbWl6ZXIgaW5pdGlhbGl6YXRpb24gYW5kIHVwZGF0
ZSBmdW5jdGlvbnMKb3B0X2luaXQsIG9wdF91cGRhdGUsIGdldF9wYXJhbXMg
PSBvcHRpbWl6ZXJzLm1vbWVudHVtKHN0ZXBfc2l6ZT0xZS0zLCBtYXNzPTAu
OSkKCiMgRGVmaW5lIGEgY29tcGlsZWQgdXBkYXRlIHN0ZXAKQGppdApkZWYg
c3RlcChpLCBvcHRfc3RhdGUsIGJhdGNoKToKICBwYXJhbXMgPSBnZXRfcGFy
YW1zKG9wdF9zdGF0ZSkKICBnID0gZ3JhZChsb3NzKShwYXJhbXMsIGJhdGNo
KQogIHJldHVybiBvcHRfdXBkYXRlKGksIGcsIG9wdF9zdGF0ZSkKCiMgRHVt
bXkgaW5wdXQgZGF0YSBzdHJlYW0KZGF0YV9nZW5lcmF0b3IgPSAoKG5wLnpl
cm9zKCgxMjgsIDI4LCAyOCwgMSkpLCBucC56ZXJvcygoMTI4LCAxMCkpKQog
ICAgICAgICAgICAgICAgICBmb3IgXyBpbiByYW5nZSgxMCkpCgojIE9wdGlt
aXplIHBhcmFtZXRlcnMgaW4gYSBsb29wCm9wdF9zdGF0ZSA9IG9wdF9pbml0
KG5ldF9wYXJhbXMpCmZvciBpIGluIHJhbmdlKDEwKToKICBvcHRfc3RhdGUg
PSBzdGVwKGksIG9wdF9zdGF0ZSwgbmV4dChkYXRhX2dlbmVyYXRvcikpCm5l
dF9wYXJhbXMgPSBnZXRfcGFyYW1zKG9wdF9zdGF0ZSkKYGBgCgojIyBIb3cg
aXQgd29ya3MKClByb2dyYW1taW5nIGluIG1hY2hpbmUgbGVhcm5pbmcgaXMg
YWJvdXQgZXhwcmVzc2luZyBhbmQgdHJhbnNmb3JtaW5nIGZ1bmN0aW9ucy4K
VHJhbnNmb3JtYXRpb25zIGluY2x1ZGUgYXV0b21hdGljIGRpZmZlcmVudGlh
dGlvbiwgY29tcGlsYXRpb24gZm9yIGFjY2VsZXJhdG9ycywKYW5kIGF1dG9t
YXRpYyBiYXRjaGluZy4gSGlnaC1sZXZlbCBsYW5ndWFnZXMgbGlrZSBQeXRo
b24gYXJlIGdyZWF0IGZvcgpleHByZXNzaW5nIGZ1bmN0aW9ucywgYnV0IHVz
dWFsbHkgYWxsIHdlIGNhbiBkbyB3aXRoIHRoZW0gaXMgYXBwbHkgdGhlbS4g
V2UgbG9zZQphY2Nlc3MgdG8gdGhlaXIgaW50ZXJuYWwgc3RydWN0dXJlIHdo
aWNoIHdvdWxkIGxldCB1cyBwZXJmb3JtIHRyYW5zZm9ybWF0aW9ucy4KCkpB
WCBpcyBhIHRvb2wgZm9yIHNwZWNpYWxpemluZyBhbmQgdHJhbnNsYXRpbmcg
aGlnaC1sZXZlbCBQeXRob24rTnVtUHkgZnVuY3Rpb25zCmludG8gYSByZXBy
ZXNlbnRhdGlvbiB0aGF0IGNhbiBiZSB0cmFuc2Zvcm1lZCBhbmQgdGhlbiBs
aWZ0ZWQgYmFjayBpbnRvIGEgUHl0aG9uCmZ1bmN0aW9uLgoKIVtzaW1wbGlm
aWVkLWxpZmVjeWNsZV0oaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQu
Y29tL2dvb2dsZS9qYXgvbWFzdGVyL2ltYWdlcy9saWZlY3ljbGUucG5nKQoK
SkFYIHNwZWNpYWxpemVzIFB5dGhvbiBmdW5jdGlvbnMgYnkgdHJhY2luZy4g
VHJhY2luZyBhIGZ1bmN0aW9uIG1lYW5zIG1vbml0b3JpbmcKYWxsIHRoZSBi
YXNpYyBvcGVyYXRpb25zIHRoYXQgYXJlIGFwcGxpZWQgdG8gaXRzIGlucHV0
IHRvIHByb2R1Y2UgaXRzIG91dHB1dCwKYW5kIHJlY29yZGluZyB0aGVzZSBv
cGVyYXRpb25zIGFuZCB0aGUgZGF0YS1mbG93IGJldHdlZW4gdGhlbSBpbiBh
IGRpcmVjdGVkCmFjeWNsaWMgZ3JhcGggKERBRykuIFRvIHBlcmZvcm0gdHJh
Y2luZywgSkFYIHdyYXBzIHByaW1pdGl2ZSBvcGVyYXRpb25zLCBsaWtlCmJh
c2ljIG51bWVyaWNhbCBrZXJuZWxzLCBzbyB0aGF0IHdoZW4gdGhleeKAmXJl
IGNhbGxlZCB0aGV5IGFkZCB0aGVtc2VsdmVzIHRvIGEKbGlzdCBvZiBvcGVy
YXRpb25zIHBlcmZvcm1lZCBhbG9uZyB3aXRoIHRoZWlyIGlucHV0cyBhbmQg
b3V0cHV0cy4gVG8ga2VlcCB0cmFjawpvZiBob3cgZGF0YSBmbG93cyBiZXR3
ZWVuIHRoZXNlIHByaW1pdGl2ZXMsIHZhbHVlcyBiZWluZyB0cmFja2VkIGFy
ZSB3cmFwcGVkIGluCmluc3RhbmNlcyBvZiB0aGUgYFRyYWNlcmAgY2xhc3Mu
CgpXaGVuIGEgUHl0aG9uIGZ1bmN0aW9uIGlzIHByb3ZpZGVkIHRvIGBncmFk
YCBvciBgaml0YCwgaXTigJlzIHdyYXBwZWQgZm9yIHRyYWNpbmcKYW5kIHJl
dHVybmVkLiBXaGVuIHRoZSB3cmFwcGVkIGZ1bmN0aW9uIGlzIGNhbGxlZCwg
d2UgYWJzdHJhY3QgdGhlIGNvbmNyZXRlCmFyZ3VtZW50cyBwcm92aWRlZCBp
bnRvIGluc3RhbmNlcyBvZiB0aGUgYEFic3RyYWN0VmFsdWVgIGNsYXNzLCBi
b3ggdGhlbSBmb3IKdHJhY2luZyBpbiBpbnN0YW5jZXMgb2YgdGhlIGBUcmFj
ZXJgIGNsYXNzLCBhbmQgY2FsbCB0aGUgZnVuY3Rpb24gb24gdGhlbS4KQWJz
dHJhY3QgYXJndW1lbnRzIHJlcHJlc2VudCBzZXRzIG9mIHBvc3NpYmxlIHZh
bHVlcyByYXRoZXIgdGhhbiBzcGVjaWZpYwp2YWx1ZXM6IGZvciBleGFtcGxl
LCBgaml0YCBhYnN0cmFjdHMgbmRhcnJheSBhcmd1bWVudHMgdG8gYWJzdHJh
Y3QgdmFsdWVzIHRoYXQKcmVwcmVzZW50IGFsbCBuZGFycmF5cyB3aXRoIHRo
ZSBzYW1lIHNoYXBlIGFuZCBkdHlwZS4gSW4gY29udHJhc3QsIGBncmFkYAph
YnN0cmFjdHMgbmRhcnJheSBhcmd1bWVudHMgdG8gcmVwcmVzZW50IGFuIGlu
ZmluaXRlc2ltYWwgbmVpZ2hib3Job29kIG9mIHRoZQp1bmRlcmx5aW5nCnZh
bHVlLiBCeSB0cmFjaW5nIHRoZSBQeXRob24gZnVuY3Rpb24gb24gdGhlc2Ug
YWJzdHJhY3QgdmFsdWVzLCB3ZSBlbnN1cmUgdGhhdAppdOKAmXMgc3BlY2lh
bGl6ZWQgZW5vdWdoIHNvIHRoYXQgaXTigJlzIHRyYWN0YWJsZSB0byB0cmFu
c2Zvcm0sIGFuZCB0aGF0IGl04oCZcyBzdGlsbApnZW5lcmFsIGVub3VnaCBz
byB0aGF0IHRoZSB0cmFuc2Zvcm1lZCByZXN1bHQgaXMgdXNlZnVsLCBhbmQg
cG9zc2libHkgcmV1c2FibGUuClRoZXNlIHRyYW5zZm9ybWVkIGZ1bmN0aW9u
cyBhcmUgdGhlbiBsaWZ0ZWQgYmFjayBpbnRvIFB5dGhvbiBjYWxsYWJsZXMg
aW4gYSB3YXkKdGhhdCBhbGxvd3MgdGhlbSB0byBiZSB0cmFjZWQgYW5kIHRy
YW5zZm9ybWVkIGFnYWluIGFzIG5lZWRlZC4KClRoZSBwcmltaXRpdmUgZnVu
Y3Rpb25zIHRoYXQgSkFYIHRyYWNlcyBhcmUgbW9zdGx5IGluIDE6MSBjb3Jy
ZXNwb25kZW5jZSB3aXRoCltYTEEgSExPXShodHRwczovL3d3dy50ZW5zb3Jm
bG93Lm9yZy94bGEvb3BlcmF0aW9uX3NlbWFudGljcykgYW5kIGFyZSBkZWZp
bmVkCmluIFtsYXgucHldKGh0dHBzOi8vZ2l0aHViLmNvbS9nb29nbGUvamF4
L2Jsb2IvbWFzdGVyL2pheC9sYXgvbGF4LnB5KS4gVGhpcyAxOjEKY29ycmVz
cG9uZGVuY2UgbWFrZXMgbW9zdCBvZiB0aGUgdHJhbnNsYXRpb25zIHRvIFhM
QSBlc3NlbnRpYWxseSB0cml2aWFsLCBhbmQKZW5zdXJlcyB3ZSBvbmx5IGhh
dmUgYSBzbWFsbCBzZXQgb2YgcHJpbWl0aXZlcyB0byBjb3ZlciBmb3Igb3Ro
ZXIKdHJhbnNmb3JtYXRpb25zIGxpa2UgYXV0b21hdGljIGRpZmZlcmVudGlh
dGlvbi4gVGhlIFtgamF4Lm51bXB5YApsYXllcl0oaHR0cHM6Ly9naXRodWIu
Y29tL2dvb2dsZS9qYXgvYmxvYi9tYXN0ZXIvamF4L251bXB5LykgaXMgd3Jp
dHRlbiBpbiBwdXJlClB5dGhvbiBzaW1wbHkgYnkgZXhwcmVzc2luZyBOdW1Q
eSBmdW5jdGlvbnMgaW4gdGVybXMgb2YgdGhlIExBWCBmdW5jdGlvbnMgKGFu
ZApvdGhlciBOdW1QeSBmdW5jdGlvbnMgd2XigJl2ZSBhbHJlYWR5IHdyaXR0
ZW4pLiBUaGF0IG1ha2VzIGBqYXgubnVtcHlgIGVhc3kgdG8KZXh0ZW5kLgoK
V2hlbiB5b3UgdXNlIGBqYXgubnVtcHlgLCB0aGUgdW5kZXJseWluZyBMQVgg
cHJpbWl0aXZlcyBhcmUgYGppdGAtY29tcGlsZWQKYmVoaW5kIHRoZSBzY2Vu
ZXMsIGFsbG93aW5nIHlvdSB0byB3cml0ZSB1bnJlc3RyaWN0ZWQgUHl0aG9u
K051bXB5IGNvZGUgd2hpbGUKc3RpbGwgZXhlY3V0aW5nIGVhY2ggcHJpbWl0
aXZlIG9wZXJhdGlvbiBvbiBhbiBhY2NlbGVyYXRvci4KCkJ1dCBKQVggY2Fu
IGRvIG1vcmU6IGluc3RlYWQgb2YganVzdCBjb21waWxpbmcgYW5kIGRpc3Bh
dGNoaW5nIHRvIGEgZml4ZWQgc2V0IG9mCmluZGl2aWR1YWwgcHJpbWl0aXZl
cywgeW91IGNhbiB1c2UgYGppdGAgb24gbGFyZ2VyIGFuZCBsYXJnZXIgZnVu
Y3Rpb25zIHRvIGJlCmVuZC10by1lbmQgY29tcGlsZWQgYW5kIG9wdGltaXpl
ZC4gRm9yIGV4YW1wbGUsIGluc3RlYWQgb2YganVzdCBjb21waWxpbmcgYW5k
CmRpc3BhdGNoaW5nIGEgY29udm9sdXRpb24gb3AsIHlvdSBjYW4gY29tcGls
ZSBhIHdob2xlIG5ldHdvcmssIG9yIGEgd2hvbGUKZ3JhZGllbnQgZXZhbHVh
dGlvbiBhbmQgb3B0aW1pemVyIHVwZGF0ZSBzdGVwLgoKVGhlIHRyYWRlb2Zm
IGlzIHRoYXQgYGppdGAgZnVuY3Rpb25zIGhhdmUgdG8gc2F0aXNmeSBzb21l
IGFkZGl0aW9uYWwKc3BlY2lhbGl6YXRpb24gcmVxdWlyZW1lbnRzOiBzaW5j
ZSB3ZSB3YW50IHRvIGNvbXBpbGUgdHJhY2VzIHRoYXQgYXJlCnNwZWNpYWxp
emVkIG9uIHNoYXBlcyBhbmQgZHR5cGVzLCBidXQgbm90IHNwZWNpYWxpemVk
IGFsbCB0aGUgd2F5IHRvIGNvbmNyZXRlCnZhbHVlcywgdGhlIFB5dGhvbiBj
b2RlIHVuZGVyIGEgYGppdGAgZGVjb3JhdG9yIG11c3QgYmUgYXBwbGljYWJs
ZSB0byBhYnN0cmFjdAp2YWx1ZXMuIElmIHdlIHRyeSB0byBldmFsdWF0ZSBg
eCA+IDBgIG9uIGFuIGFic3RyYWN0IGB4YCwgdGhlIHJlc3VsdCBpcyBhbgph
YnN0cmFjdCB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIHNldCBge1RydWUsIEZh
bHNlfWAsIGFuZCBzbyBhIFB5dGhvbiBicmFuY2ggbGlrZQpgaWYgeCA+IDBg
IHdpbGwgcmFpc2UgYW4gZXJyb3I6IGl0IGRvZXNu4oCZdCBrbm93IHdoaWNo
IHdheSB0byBnbyEKU2VlIFtXaGF04oCZcyBzdXBwb3J0ZWRdKCN3aGF0cy1z
dXBwb3J0ZWQpIGZvciBtb3JlCmluZm9ybWF0aW9uIGFib3V0IGBqaXRgIHJl
cXVpcmVtZW50cy4KClRoZSBnb29kIG5ld3MgYWJvdXQgdGhpcyB0cmFkZW9m
ZiBpcyB0aGF0IGBqaXRgIGlzIG9wdC1pbjogSkFYIGxpYnJhcmllcyB1c2UK
YGppdGAgb24gaW5kaXZpZHVhbCBvcGVyYXRpb25zIGFuZCBmdW5jdGlvbnMg
YmVoaW5kIHRoZSBzY2VuZXMsIGFsbG93aW5nIHlvdSB0bwp3cml0ZSB1bnJl
c3RyaWN0ZWQgUHl0aG9uK051bXB5IGFuZCBzdGlsbCBtYWtlIHVzZSBvZiBh
IGhhcmR3YXJlIGFjY2VsZXJhdG9yLgpCdXQgd2hlbiB5b3Ugd2FudCB0byBt
YXhpbWl6ZSBwZXJmb3JtYW5jZSwgeW91IGNhbiBvZnRlbiB1c2UgYGppdGAg
aW4geW91ciBvd24KY29kZSB0byBjb21waWxlIGFuZCBlbmQtdG8tZW5kIG9w
dGltaXplIG11Y2ggYmlnZ2VyIGZ1bmN0aW9ucy4KCiMjIEN1cnJlbnQgZ290
Y2hhcwoKRm9yIGEgc3VydmV5IG9mIGN1cnJlbnQgZ290Y2hhcywgd2l0aCBl
eGFtcGxlcyBhbmQgZXhwbGFuYXRpb25zLCB3ZSBoaWdobHkKcmVjb21tZW5k
IHJlYWRpbmcgdGhlIFtHb3RjaGFzIE5vdGVib29rXShodHRwczovL2pheC5y
ZWFkdGhlZG9jcy5pby9lbi9sYXRlc3Qvbm90ZWJvb2tzL0NvbW1vbl9Hb3Rj
aGFzX2luX0pBWC5odG1sKS4KClNvbWUgc3RhbmQtb3V0IGdvdGNoYXMgdGhh
dCBtaWdodCBzdXJwcmlzZSBOdW1QeSB1c2VyczoKMS4gSkFYIGVuZm9yY2Vz
IHNpbmdsZS1wcmVjaXNpb24gKDMyLWJpdCwgZS5nLiBgZmxvYXQzMmApIHZh
bHVlcyBieSBkZWZhdWx0LCBhbmQKICAgdG8gZW5hYmxlIGRvdWJsZS1wcmVj
aXNpb24gKDY0LWJpdCwgZS5nLiBgZmxvYXQ2NGApIG9uZSBuZWVkcyB0byBz
ZXQgdGhlCiAgIGBqYXhfZW5hYmxlX3g2NGAgdmFyaWFibGUgKiphdCBzdGFy
dHVwKiogKG9yIHNldCB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGUKICAgYEpB
WF9FTkFCTEVfWDY0PVRydWVgLCBzZWUgW3RoZSBHb3RjaGFzIE5vdGVib29r
XShodHRwczovL2pheC5yZWFkdGhlZG9jcy5pby9lbi9sYXRlc3Qvbm90ZWJv
b2tzL0NvbW1vbl9Hb3RjaGFzX2luX0pBWC5odG1sI3Njcm9sbFRvPURvdWJs
ZS0oNjRiaXQpLXByZWNpc2lvbikpCjIuIFNvbWUgb2YgTnVtUHkncyBkdHlw
ZSBwcm9tb3Rpb24gc2VtYW50aWNzIGludm9sdmluZyBhIG1peCBvZiBQeXRo
b24gc2NhbGFycwogICBhbmQgTnVtUHkgdHlwZXMgYXJlbid0IHByZXNlcnZl
ZCwgbmFtZWx5IGBucC5hZGQoMSwgbnAuYXJyYXkoWzJdLAogICBucC5mbG9h
dDMyKSkuZHR5cGVgIGlzIGBmbG9hdDY0YCByYXRoZXIgdGhhbiBgZmxvYXQz
MmAuCjMuIEluLXBsYWNlIG11dGF0aW9uIG9mIGFycmF5cyBpc24ndCBzdXBw
b3J0ZWQsIHRob3VnaCBbdGhlcmUgaXMgYW4KICAgYWx0ZXJuYXRpdmVdKGh0
dHBzOi8vamF4LnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9qYXgub3BzLmh0
bWwpLiBHZW5lcmFsbHkKICAgSkFYIHJlcXVpcmVzIGZ1bmN0aW9uYWwgY29k
ZS4KNC4gUFJOR3MgYXJlIGRpZmZlcmVudCBhbmQgY2FuIGJlIGF3a3dhcmQs
IHRob3VnaCBmb3IgW2dvb2QKICAgcmVhc29uc10oaHR0cHM6Ly9naXRodWIu
Y29tL2dvb2dsZS9qYXgvYmxvYi9tYXN0ZXIvZGVzaWduX25vdGVzL3Bybmcu
bWQpLCBhbmQKICAgbm9uLXJldXNlIChsaW5lYXJpdHkpIGlzIG5vdCB5ZXQg
Y2hlY2tlZC4KClNlZSBbdGhlIG5vdGVib29rXShodHRwczovL2pheC5yZWFk
dGhlZG9jcy5pby9lbi9sYXRlc3Qvbm90ZWJvb2tzL0NvbW1vbl9Hb3RjaGFz
X2luX0pBWC5odG1sKSBmb3IgbXVjaCBtb3JlIGluZm9ybWF0aW9uLgoKIyMg
Q2l0aW5nIEpBWAoKVG8gY2l0ZSB0aGlzIHJlcG9zaXRvcnk6CgpgYGAKQHNv
ZnR3YXJle2pheDIwMThnaXRodWIsCiAgYXV0aG9yID0ge0phbWVzIEJyYWRi
dXJ5IGFuZCBSb3kgRnJvc3RpZyBhbmQgUGV0ZXIgSGF3a2lucyBhbmQgTWF0
dGhldyBKYW1lcyBKb2huc29uIGFuZCBDaHJpcyBMZWFyeSBhbmQgRG91Z2Fs
IE1hY2xhdXJpbiBhbmQgU2t5ZSBXYW5kZXJtYW4tTWlsbmV9LAogIHRpdGxl
ID0ge3tKQVh9OiBjb21wb3NhYmxlIHRyYW5zZm9ybWF0aW9ucyBvZiB7UH15
dGhvbit7Tn11bXtQfXkgcHJvZ3JhbXN9LAogIHVybCA9IHtodHRwOi8vZ2l0
aHViLmNvbS9nb29nbGUvamF4fSwKICB2ZXJzaW9uID0gezAuMS40Nn0sCiAg
eWVhciA9IHsyMDE4fSwKfQpgYGAKCkluIHRoZSBhYm92ZSBiaWJ0ZXggZW50
cnksIG5hbWVzIGFyZSBpbiBhbHBoYWJldGljYWwgb3JkZXIsIHRoZSB2ZXJz
aW9uIG51bWJlcgppcyBpbnRlbmRlZCB0byBiZSB0aGF0IGZyb20gW2pheC92
ZXJzaW9uLnB5XSguLi9ibG9iL21hc3Rlci9qYXgvdmVyc2lvbi5weSksIGFu
ZAp0aGUgeWVhciBjb3JyZXNwb25kcyB0byB0aGUgcHJvamVjdCdzIG9wZW4t
c291cmNlIHJlbGVhc2UuCgpBIG5hc2NlbnQgdmVyc2lvbiBvZiBKQVgsIHN1
cHBvcnRpbmcgb25seSBhdXRvbWF0aWMgZGlmZmVyZW50aWF0aW9uIGFuZApj
b21waWxhdGlvbiB0byBYTEEsIHdhcyBkZXNjcmliZWQgaW4gYSBbcGFwZXIg
dGhhdCBhcHBlYXJlZCBhdCBTeXNNTAoyMDE4XShodHRwczovL3d3dy5zeXNt
bC5jYy9kb2MvMjAxOC8xNDYucGRmKS4gV2UncmUgY3VycmVudGx5IHdvcmtp
bmcgb24KY292ZXJpbmcgSkFYJ3MgaWRlYXMgYW5kIGNhcGFiaWxpdGllcyBp
biBhIG1vcmUgY29tcHJlaGVuc2l2ZSBhbmQgdXAtdG8tZGF0ZQpwYXBlci4K
CiMjIENvbnRyaWJ1dG9ycwoKU28gZmFyLCBKQVggaW5jbHVkZXMgbG90cyBv
ZiBoZWxwIGFuZCBbY29udHJpYnV0aW9uc10oaHR0cHM6Ly9naXRodWIuY29t
L2dvb2dsZS9qYXgvZ3JhcGhzL2NvbnRyaWJ1dG9ycykuIEluIGFkZGl0aW9u
IHRvIHRoZSBjb2RlIGNvbnRyaWJ1dGlvbnMgcmVmbGVjdGVkIG9uIEdpdEh1
YiwgSkFYIGhhcyBiZW5lZml0dGVkIHN1YnN0YW50aWFsbHkgZnJvbSB0aGUg
YWR2aWNlIG9mCltKYW1pZSBUb3duc2VuZF0oaHR0cHM6Ly9naXRodWIuY29t
L2otdG93bnMpLApbUGV0ZXIgSGF3a2luc10oaHR0cHM6Ly9naXRodWIuY29t
L2hhd2tpbnNwKSwKW0pvbmF0aGFuIFJhZ2FuLUtlbGxleV0oaHR0cHM6Ly9w
ZW9wbGUuZWVjcy5iZXJrZWxleS5lZHUvfmpyay8pLApbQWxleCBXaWx0c2No
a29dKGh0dHA6Ly9naXRodWIuY29tL2FsZXhidyksCkdlb3JnZSBEYWhsLApb
U3RlcGhhbiBIb3llcl0oaHR0cDovL3N0ZXBoYW5ob3llci5jb20vKSwKU2Ft
IFNjaG9lbmhvbHosCltFbGkgQmVuZGVyc2t5XShodHRwczovL2dpdGh1Yi5j
b20vZWxpYmVuKSwKWmFrIFN0b25lLApbQWxleGV5IFJhZHVsXShodHRwczov
L2dpdGh1Yi5jb20vYXhjaCksCk1pY2hhZWwgSXNhcmQsClNreWUgV2FuZGVy
bWFuLU1pbG5lLAphbmQgbWFueSBvdGhlcnMuCg==
",,5676,"c3VkbzogZmFsc2UKbm90aWZpY2F0aW9uczoKICBlbWFpbDogZmFsc2UKZGlz
dDogeGVuaWFsCmxhbmd1YWdlOiBweXRob24KcHl0aG9uOgogIC0gIjIuNyIK
ICAtICIzLjYiCmVudjoKICAtIEpBWF9FTkFCTEVfWDY0PTAgSkFYX05VTV9H
RU5FUkFURURfQ0FTRVM9MjUKICAtIEpBWF9FTkFCTEVfWDY0PTEgSkFYX05V
TV9HRU5FUkFURURfQ0FTRVM9MjUKbWF0cml4OgogIGluY2x1ZGU6CiAgICAt
IHB5dGhvbjogIjMuNyIKICAgICAgZW52OiBKQVhfRU5BQkxFX1g2ND0xIEpB
WF9PTkxZX0RPQ1VNRU5UQVRJT049dHJ1ZQoKYmVmb3JlX2luc3RhbGw6CiAg
LSBpZiBbWyAiJFRSQVZJU19QWVRIT05fVkVSU0lPTiIgPT0gIjIuNyIgXV07
IHRoZW4KICAgICAgd2dldCBodHRwczovL3JlcG8uY29udGludXVtLmlvL21p
bmljb25kYS9NaW5pY29uZGEyLWxhdGVzdC1MaW51eC14ODZfNjQuc2ggLU8g
bWluaWNvbmRhLnNoOwogICAgZWxzZQogICAgICB3Z2V0IGh0dHBzOi8vcmVw
by5jb250aW51dW0uaW8vbWluaWNvbmRhL01pbmljb25kYTMtbGF0ZXN0LUxp
bnV4LXg4Nl82NC5zaCAtTyBtaW5pY29uZGEuc2g7CiAgICBmaQogIC0gYmFz
aCBtaW5pY29uZGEuc2ggLWIgLXAgJEhPTUUvbWluaWNvbmRhCiAgLSBleHBv
cnQgUEFUSD0iJEhPTUUvbWluaWNvbmRhL2JpbjokUEFUSCIKICAtIGNvbmRh
IGNvbmZpZyAtLXNldCBhbHdheXNfeWVzIHllcyAtLXNldCBjaGFuZ2VwczEg
bm8gLS1zZXQgc2hvd19jaGFubmVsX3VybHMgeWVzCiAgLSBjb25kYSBjb25m
aWcgLS1zZXQgY2hhbm5lbF9wcmlvcml0eSBzdHJpY3QKICAtIGNvbmRhIGNv
bmZpZyAtLXNldCBhZGRfcGlwX2FzX3B5dGhvbl9kZXBlbmRlbmN5IHllcwog
IC0gY29uZGEgY29uZmlnIC0tcmVtb3ZlIGNoYW5uZWxzIGRlZmF1bHRzCiAg
LSBjb25kYSBjb25maWcgLS1hZGQgY2hhbm5lbHMgY29uZGEtZm9yZ2UKICAt
IGNvbmRhIHVwZGF0ZSAtcSBjb25kYQppbnN0YWxsOgogIC0gY29uZGEgaW5z
dGFsbCAtLXllcyBweXRob249JFRSQVZJU19QWVRIT05fVkVSU0lPTiBwaXAg
c2l4IHByb3RvYnVmPj0zLjYuMCBhYnNsLXB5IG9wdF9laW5zdW0gbnVtcHkg
c2NpcHkgcHl0ZXN0LXhkaXN0IGZhc3RjYWNoZQogIC0gcGlwIGluc3RhbGwg
amF4bGliCiAgLSBwaXAgaW5zdGFsbCAtdiAuCiAgIyBUaGUgZm9sbG93aW5n
IGFyZSBuZWVkZWQgdG8gdGVzdCB0aGUgQ29sYWIgbm90ZWJvb2tzIGFuZCB0
aGUgZG9jdW1lbnRhdGlvbiBidWlsZGluZwogIC0gaWYgW1sgIiRKQVhfT05M
WV9ET0NVTUVOVEFUSU9OIiAhPSAiIiBdXTsgdGhlbgogICAgICBjb25kYSBp
bnN0YWxsIC0teWVzIC1jIGNvbmRhLWZvcmdlIHBhbmRvYyBpcHlrZXJuZWw7
CiAgICAgIGNvbmRhIGluc3RhbGwgLS15ZXMgc3BoaW54IHNwaGlueF9ydGRf
dGhlbWUgbmJzcGhpbngganVweXRlcl9jbGllbnQgbWF0cGxvdGxpYjsKICAg
ICAgcGlwIGluc3RhbGwgc2tsZWFybjsKICAgIGZpCnNjcmlwdDoKICAtIGlm
IFtbICIkSkFYX09OTFlfRE9DVU1FTlRBVElPTiIgPT0gIiIgXV07IHRoZW4K
ICAgICAgcHl0ZXN0IC1uIDEgdGVzdHMgZXhhbXBsZXMgLVcgaWdub3JlIDsK
ICAgIGVsc2UKICAgICAgc3BoaW54LWJ1aWxkIC1iIGh0bWwgLUQgbmJzcGhp
bnhfZXhlY3V0ZT1hbHdheXMgZG9jcyBkb2NzL2J1aWxkL2h0bWw7CiAgICBm
aQo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'go-internals',121953616,b'A book about the internals of the Go programming language.',b'Go',7,5676,,440,False,b'https://api.github.com/repos/teh-cmc/go-internals/forks',"IyBgZ28taW50ZXJuYWxzYAoKYGdvLWludGVybmFsc2AgaXMgYSB3b3JrLWlu
LXByb2dyZXNzIGJvb2sgYWJvdXQgdGhlIGludGVybmFscyBvZiB0aGUgR28g
KDEuMTArKSBwcm9ncmFtbWluZyBsYW5ndWFnZS4KCi0tLQoKIyMgVGFibGUg
b2YgQ29udGVudHMKCi0gW0NoYXB0ZXIgSTogQSBQcmltZXIgb24gR28gQXNz
ZW1ibHldKC4vY2hhcHRlcjFfYXNzZW1ibHlfcHJpbWVyL1JFQURNRS5tZCkK
LSBbQ2hhcHRlciBJSTogSW50ZXJmYWNlc10oLi9jaGFwdGVyMl9pbnRlcmZh
Y2VzL1JFQURNRS5tZCkKLSBbQ2hhcHRlciBJSUkgKHNvb24hKTogVGhlIEdh
cmJhZ2UgQ29sbGVjdG9yXSguL2NoYXB0ZXIzX2dhcmJhZ2VfY29sbGVjdG9y
L1JFQURNRS5tZCkKCi0tLQoKKkNsaWNrIFtoZXJlXShodHRwczovL2NtYy5n
aXRib29rLmlvL2dvLWludGVybmFscy8pIGZvciB0aGUgR2l0Qm9vayB2ZXJz
aW9uLioKCiMjIEdvYWxzCgotICoqQ29uY2lzZSoqOiBUaGUgYm9vayBhaW1z
IHRvIGJlIGFzIGNvbmNpc2UgYXMgcG9zc2libGUsIGVuY291cmFnaW5nIGNv
ZGUgYW5kIGRpYWdyYW1zIG92ZXIgbGVuZ3RoeSBwcm9zZS4KLSAqKkNvbW11
bml0eS1lZmZvcnQqKjogSSBteXNlbGYgYW0gbGVhcm5pbmcgYXMgSSBnbyB0
aHJvdWdoIHRoZSB3cml0aW5nIG9mIHRoaXMgYm9vay4gSSAqd2lsbCogbWFr
ZSBtaXN0YWtlcyBhbG9uZyB0aGUgd2F5LiBIb3BlZnVsbHkgdGhlIGNvbW11
bml0eSBjYW4gaGVscCBpbiBwb2ludGluZyBvdXQgYW5kIGNvcnJlY3Rpbmcg
dGhlc2UgbWlzdGFrZXMuCi0gKipCZXlvbmQgdGhlIHRoZW9yeSoqOiBUaGUg
Ym9vayB3aWxsIG5vdCBqdXN0IGNvdmVyIHRoZSB0aGVvcnksIGJ1dCB0aGUg
YWN0dWFsIGltcGxlbWVudGF0aW9uIHRvby4gQXNzdW1wdGlvbnMgd2lsbCBi
ZSBwcm92ZW4gb3IgaW52YWxpZGF0ZWQgdmlhIGV4cGVyaW1lbnRzIGFuZCBt
ZWFzdXJlbWVudHMuCi0gKipVcC10by1EYXRlKio6IFRoZSBib29rIHdpbGwg
dHJ5IHRvIGtlZXAgdXAtdG8tZGF0ZSB3aXRoIG5ldyBHbyB2ZXJzaW9ucyBi
ZWluZyByZWxlYXNlZC4KLSAqKkV4cGVyaWVuY2VkIGF1ZGllbmNlKio6IFRo
ZSBHbyBjb21tdW5pdHkgaGFzIGNyZWF0ZWQgKmxvYWRzKiBvZiBncmVhdCBp
bnRyb2R1Y3RvcnkgbWF0ZXJpYWwgZm9yIG5ld2NvbWVycy4gVW5mb3J0dW5h
dGVseSB3ZSdyZSBzdGlsbCBsYWNraW5nIGdvb2QgcmVzb3VyY2VzIHdoZW4g
aXQgY29tZXMgdG8gdGhlIG1vcmUgYWR2YW5jZWQgc3R1ZmYuIFRoaXMgYm9v
a3MgaG9wZXMgdG8gaGVscCBzb2x2ZSB0aGlzIGlzc3VlLgoKIyMgVHJhbnNs
YXRpb25zCgotIFtDaGluZXNlXShodHRwczovL2dpdGh1Yi5jb20vZ28taW50
ZXJuYWxzLWNuL2dvLWludGVybmFscykKCiMjIENvbnRyaWJ1dGluZwoKQWxs
IGtpbmRzIG9mIGNvbnRyaWJ1dGlvbnMgYXJlIHZlcnkgbXVjaCB3ZWxjb21l
LgoKRG9uJ3QgaGVzaXRhdGUgdG8gb3BlbiBhbiBpc3N1ZSBmb3IgZS5nLi4u
OgotIHBvaW50aW5nIG91dCB0ZWNobmljYWwgb3IgZW5nbGlzaCBtaXN0YWtl
cwotIHN1Z2dlc3RpbmcgaW1wcm92ZW1lbnRzIGFuZC9vciBhZGRpdGlvbnMg
dG8gZXhpc3RpbmcgY2hhcHRlcnMKLSBzdWdnZXN0aW5nIGV4dGVybmFsIGxp
bmtzIHRoYXQgbWlnaHQgYmUgb2YgaW50ZXJlc3QKLSAuLmFuZCBwcmV0dHkg
bXVjaCBhbnl0aGluZyBlbHNlIHlvdSBjYW4gdGhpbmsgb2YsIHJlYWxseSEK
CiMjIEF1dGhvcgoKQ2xlbWVudCBSZXkgPDxjci5yZXkuY2xlbWVudEBnbWFp
bC5jb20+PiAoW0B0ZWhfY21jXShodHRwczovL3R3aXR0ZXIuY29tL3RlaF9j
bWMpKQoKIyMgTGljZW5zZQoKTGljZW5zZWQgdW5kZXIgdGhlIFtCWS1OQy1T
QSBDcmVhdGl2ZSBDb21tb25zIDQuMCBJbnRlcm5hdGlvbmFsIFB1YmxpYyBM
aWNlbnNlXShodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9i
eS1uYy1zYS80LjAvKQo=
",,5676,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'ArchiveBox',90356372,"b'\xf0\x9f\x97\x83 The open source self-hosted web archive. Takes browser history/bookmarks/Pocket/Pinboard/etc., saves HTML, JS, PDFs, media, and more...'",b'Python',72,5673,,115,False,b'https://api.github.com/repos/pirate/ArchiveBox/forks',"PGRpdiBhbGlnbj0iY2VudGVyIj4KPGltZyBzcmM9Imh0dHBzOi8vaS5pbWd1
ci5jb20vNG5rRmpkdi5wbmciIGhlaWdodD0iODBweCI+CjxoMT5BcmNoaXZl
Qm94PGJyLz48c3ViPlRoZSBvcGVuLXNvdXJjZSBzZWxmLWhvc3RlZCB3ZWIg
YXJjaGl2ZS48L3N1Yj48L2gxPgoK4pa277iPIDxhIGhyZWY9Imh0dHBzOi8v
Z2l0aHViLmNvbS9waXJhdGUvQXJjaGl2ZUJveC93aWtpL1F1aWNrc3RhcnQi
PlF1aWNrc3RhcnQ8L2E+IHwgCjxhIGhyZWY9Imh0dHBzOi8vYXJjaGl2ZS5z
d2VldGluZy5tZSI+RGVtbzwvYT4gfCAKPGEgaHJlZj0iaHR0cHM6Ly9naXRo
dWIuY29tL3BpcmF0ZS9BcmNoaXZlQm94Ij5HaXRodWI8L2E+IHwgCjxhIGhy
ZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9waXJhdGUvQXJjaGl2ZUJveC93aWtp
Ij5Eb2N1bWVudGF0aW9uPC9hPiB8IAo8YSBocmVmPSIjYmFja2dyb3VuZC0t
bW90aXZhdGlvbiI+SW5mbyAmIE1vdGl2YXRpb248L2E+IHwgCjxhIGhyZWY9
Imh0dHBzOi8vZ2l0aHViLmNvbS9waXJhdGUvQXJjaGl2ZUJveC93aWtpL1dl
Yi1BcmNoaXZpbmctQ29tbXVuaXR5Ij5Db21tdW5pdHk8L2E+IHwgCjxhIGhy
ZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9waXJhdGUvQXJjaGl2ZUJveC93aWtp
L1JvYWRtYXAiPlJvYWRtYXA8L2E+Cgo8cHJlPgoiWW91ciBvd24gcGVyc29u
YWwgaW50ZXJuZXQgYXJjaGl2ZSIgKOe9keermeWtmOahoyAvIOeIrOiZqykK
PC9wcmU+Cgo8IS0tPGEgaHJlZj0iaHR0cDovL3dlYmNoYXQuZnJlZW5vZGUu
bmV0P2NoYW5uZWxzPUFyY2hpdmVCb3gmdWlvPWQ0Ij48aW1nIHNyYz0iaHR0
cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS9Db21tdW5pdHlfY2hhdC1JUkMt
JTIzMjhBNzQ1LnN2ZyIvPjwvYT4tLT4KPGEgaHJlZj0iaHR0cHM6Ly9naXRo
dWIuY29tL3BpcmF0ZS9BcmNoaXZlQm94L2Jsb2IvbWFzdGVyL0xJQ0VOU0Ui
PjxpbWcgc3JjPSJodHRwczovL2ltZy5zaGllbGRzLmlvL2JhZGdlL09wZW5f
c291cmNlLU1JVC1ncmVlbi5zdmc/bG9nbz1naXQmbG9nb0NvbG9yPWdyZWVu
Ii8+PC9hPgo8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcGlyYXRlL0Fy
Y2hpdmVCb3gvY29tbWl0cy9kZXYiPjxpbWcgc3JjPSJodHRwczovL2ltZy5z
aGllbGRzLmlvL2dpdGh1Yi9sYXN0LWNvbW1pdC9waXJhdGUvQXJjaGl2ZUJv
eC5zdmc/bG9nbz1TdWJsaW1lK1RleHQmbG9nb0NvbG9yPWdyZWVuJmxhYmVs
PUFjdGl2ZSIvPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3Bp
cmF0ZS9BcmNoaXZlQm94Ij48aW1nIHNyYz0iaHR0cHM6Ly9pbWcuc2hpZWxk
cy5pby9naXRodWIvc3RhcnMvcGlyYXRlL0FyY2hpdmVCb3guc3ZnP2xvZ289
Z2l0aHViJmxhYmVsPVN0YXJzJmxvZ29Db2xvcj1ibHVlIi8+PC9hPgo8YSBo
cmVmPSJodHRwczovL3Rlc3QucHlwaS5vcmcvcHJvamVjdC9hcmNoaXZlYm94
LyI+PGltZyBzcmM9Imh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvUHl0
aG9uLSUzRSUzRDMuNS15ZWxsb3cuc3ZnP2xvZ289cHl0aG9uJmxvZ29Db2xv
cj15ZWxsb3ciLz48L2E+CjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9w
aXJhdGUvQXJjaGl2ZUJveC93aWtpL0luc3RhbGwjZGVwZW5kZW5jaWVzIj48
aW1nIHNyYz0iaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS9DaHJvbWl1
bS0lM0UlM0Q1OS1vcmFuZ2Uuc3ZnP2xvZ289R29vZ2xlK0Nocm9tZSZsb2dv
Q29sb3I9b3JhbmdlIi8+PC9hPgo8YSBocmVmPSJodHRwczovL2h1Yi5kb2Nr
ZXIuY29tL3IvbmlraXN3ZWV0aW5nL2FyY2hpdmVib3giPjxpbWcgc3JjPSJo
dHRwczovL2ltZy5zaGllbGRzLmlvL2JhZGdlL0RvY2tlci1hbGwlMjBwbGF0
Zm9ybXMtbGlnaHRibHVlLnN2Zz9sb2dvPWRvY2tlciZsb2dvQ29sb3I9bGln
aHRibHVlIi8+PC9hPgoKPGhyLz4KPGJyLz4KPGk+8J+SpSBBdHRlbnRpb246
IEJpZyBBUEkgY2hhbmdlcyBhcmUgY29taW5nIHNvb24gKGluY2x1ZGluZyBh
IHByb3BlciBjb25maWcgZmlsZSBmb3JtYXQgYW5kIDxjb2RlPnBpcCBpbnN0
YWxsIGFyY2hpdmVib3g8L2NvZGU+KSEgQ2hlY2sgb3V0IDxhIGhyZWY9Imh0
dHBzOi8vZ2l0aHViLmNvbS9waXJhdGUvQXJjaGl2ZUJveC9wdWxsLzIwNyI+
djAuNDwvYT4gYW5kIGhlbHAgdXMgdGVzdCBpdCEg8J+SpTwvaT4KPGJyLz48
YnIvPgo8Yj5Ob3RlOiBUaGVyZSBhcmUgc29tZSBpbXBvcnRhbnQgc2VjdXJp
dHkgZGVzaWduIGlzc3VlcyB0aGF0IG5lZWQgdG8gYmUgZml4ZWQgYmVmb3Jl
IHYwLjQgY2FuIGJlIHB1c2hlZCwgYWxsIGhlbHAgaXMgYXBwcmVjaWF0ZWQh
PGJyLz4KKFRoaXMgcHJvamVjdCBpcyBub3QgYWJhbmRvbmVkLCBpdCdzIG15
IHByaW1hcnkgc2lkZS1wcm9qZWN0IGZvciB0aGUgZm9yc2VlYWJsZSBmdXR1
cmUsIG15IGRheSBqb2IgaXMgdmVyeSBidXN5IHJpZ2h0IG5vdy4pPGJyLz4K
U2VlIHRoZSA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcGlyYXRlL0Fy
Y2hpdmVCb3gvcHVsbC8yMDcjaXNzdWVjb21tZW50LTQ5NDEwNzU1MyI+djAu
NCByZWxlYXNlIFBSPC9hPiBmb3IgbW9yZSBpbmZvcm1hdGlvbi48L2I+Cjxi
ci8+Cjxoci8+Cgo8L2Rpdj4KCioqQXJjaGl2ZUJveCB0YWtlcyBhIGxpc3Qg
b2Ygd2Vic2l0ZSBVUkxzIHlvdSB3YW50IHRvIGFyY2hpdmUsIGFuZCBjcmVh
dGVzIGEgbG9jYWwsIHN0YXRpYywgYnJvd3NhYmxlIEhUTUwgY2xvbmUgb2Yg
dGhlIGNvbnRlbnQgZnJvbSB0aG9zZSB3ZWJzaXRlcyAoaXQgc2F2ZXMgSFRN
TCwgSlMsIG1lZGlhIGZpbGVzLCBQREZzLCBpbWFnZXMgYW5kIG1vcmUpLioq
IAoKWW91IGNhbiB1c2UgaXQgdG8gcHJlc2VydmUgYWNjZXNzIHRvIHdlYnNp
dGVzIHlvdSBjYXJlIGFib3V0IGJ5IHN0b3JpbmcgdGhlbSBsb2NhbGx5IG9m
ZmxpbmUuICBBcmNoaXZlQm94IGltcG9ydHMgbGlzdHMgb2YgVVJMcywgcmVu
ZGVycyB0aGUgcGFnZXMgaW4gYSBoZWFkbGVzcywgYXV0aGVudGljYXRlZCwg
dXNlci1zY3JpcHRhYmxlIGJyb3dzZXIsIGFuZCB0aGVuIGFyY2hpdmVzIHRo
ZSBjb250ZW50IGluIG11bHRpcGxlIHJlZHVuZGFudCBjb21tb24gZm9ybWF0
cyAoSFRNTCwgUERGLCBQTkcsIFdBUkMpIHRoYXQgd2lsbCBsYXN0IGxvbmcg
YWZ0ZXIgdGhlIG9yaWdpbmFscyBkaXNhcHBlYXIgb2ZmIHRoZSBpbnRlcm5l
dC4gIEl0IGF1dG9tYXRpY2FsbHkgZXh0cmFjdHMgYXNzZXRzIGFuZCBtZWRp
YSBmcm9tIHBhZ2VzIGFuZCBzYXZlcyB0aGVtIGluIGVhc2lseS1hY2Nlc3Np
YmxlIGZvbGRlcnMsIHdpdGggb3V0LW9mLXRoZS1ib3ggc3VwcG9ydCBmb3Ig
ZXh0cmFjdGluZyBnaXQgcmVwb3NpdG9yaWVzLCBhdWRpbywgdmlkZW8sIHN1
YnRpdGxlcywgaW1hZ2VzLCBQREZzLCBhbmQgbW9yZS4KCiMjIyMgSG93IGRv
ZXMgaXQgd29yaz8KCmBgYGJhc2gKZWNobyAnaHR0cDovL2V4YW1wbGUuY29t
JyB8IC4vYXJjaGl2ZQpgYGAKQWZ0ZXIgaW5zdGFsbGluZyB0aGUgZGVwZW5k
ZW5jaWVzLCBqdXN0IHBpcGUgc29tZSBuZXcgbGlua3MgaW50byB0aGUgYC4v
YXJjaGl2ZWAgY29tbWFuZCB0byBzdGFydCB5b3VyIGFyY2hpdmUuCgpBcmNo
aXZlQm94IGlzIHdyaXR0ZW4gaW4gUHl0aG9uIDMuNSBhbmQgdXNlcyB3Z2V0
LCBDaHJvbWUgaGVhZGxlc3MsIHlvdXR1YmUtZGwsIHB5d2IsIGFuZCBvdGhl
ciBjb21tb24gVU5JWCB0b29scyB0byBzYXZlIGVhY2ggcGFnZSB5b3UgYWRk
IGluIG11bHRpcGxlIHJlZHVuZGFudCBmb3JtYXRzLiAgSXQgZG9lc24ndCBy
ZXF1aXJlIGEgY29uc3RhbnRseSBydW5uaW5nIHNlcnZlciBvciBiYWNrZW5k
LCBqdXN0IG9wZW4gdGhlIGdlbmVyYXRlZCBgb3V0cHV0L2luZGV4Lmh0bWxg
IGluIGEgYnJvd3NlciB0byB2aWV3IHRoZSBhcmNoaXZlLiBJdCBjYW4gaW1w
b3J0IGFuZCBleHBvcnQgbGlua3MgYXMgSlNPTiAoYW1vbmcgb3RoZXIgZm9y
bWF0cyksIHNvIGl0J3MgZWFzeSB0byBzY3JpcHQgb3IgaG9vayB1cCB0byBv
dGhlciBBUElzLiAgSWYgeW91IHJ1biBpdCBvbiBhIHNjaGVkdWxlIGFuZCBp
bXBvcnQgZnJvbSBicm93c2VyIGhpc3Rvcnkgb3IgYm9va21hcmtzIHJlZ3Vs
YXJseSwgeW91IGNhbiBzbGVlcCBzb3VuZGx5IGtub3dpbmcgdGhhdCB0aGUg
c2xpY2Ugb2YgdGhlIGludGVybmV0IHlvdSBjYXJlIGFib3V0IHdpbGwgYmUg
YXV0b21hdGljYWxseSBwcmVzZXJ2ZWQgaW4gbXVsdGlwbGUsIGR1cmFibGUg
bG9uZy10ZXJtIGZvcm1hdHMgdGhhdCB3aWxsIGJlIGFjY2Vzc2libGUgZm9y
IGRlY2FkZXMgKG9yIGxvbmdlcikuCgo8ZGl2IGFsaWduPSJjZW50ZXIiPgoK
PGltZyBzcmM9Imh0dHBzOi8vaS5pbWd1ci5jb20vM3RCTDdQVS5wbmciIHdp
ZHRoPSIzMCUiIGFsdD0iQ0xJIFNjcmVlbnNob3QiIGFsaWduPSJ0b3AiPgo8
aW1nIHNyYz0iaHR0cHM6Ly9pLmltZ3VyLmNvbS92aWtsWk5HLnBuZyIgd2lk
dGg9IjMwJSIgYWx0PSJEZXNrdG9wIGluZGV4IHNjcmVlbnNob3QiIGFsaWdu
PSJ0b3AiPgo8aW1nIHNyYz0iaHR0cHM6Ly9pLmltZ3VyLmNvbS9SZWZXc1hC
LmpwZyIgd2lkdGg9IjMwJSIgYWx0PSJEZXNrdG9wIGRldGFpbHMgcGFnZSBT
Y3JlZW5zaG90Ii8+PGJyLz4KPHN1cD48YSBocmVmPSJodHRwczovL2FyY2hp
dmUuc3dlZXRpbmcubWUvIj5EZW1vPC9hPiB8IDxhIGhyZWY9Imh0dHBzOi8v
Z2l0aHViLmNvbS9waXJhdGUvQXJjaGl2ZUJveC93aWtpL1VzYWdlIj5Vc2Fn
ZTwvYT4gfCA8YSBocmVmPSIjc2NyZWVuc2hvdHMiPlNjcmVlbnNob3RzPC9h
Pjwvc3VwPgo8YnIvPgo8c3ViPi4gLiAuIC4gLiAuIC4gLiAuIC4gLiAuIC4g
LiAuIC4gLiAuIC4gLiAuIC4gLiAuIC4gLiAuIC48L3N1Yj4KPC9kaXY+PGJy
Lz4KCiMjIFF1aWNrc3RhcnQKCkFyY2hpdmVCb3ggaGFzIFszIG1haW4gZGVw
ZW5kZW5jaWVzXShodHRwczovL2dpdGh1Yi5jb20vcGlyYXRlL0FyY2hpdmVC
b3gvd2lraS9JbnN0YWxsI2RlcGVuZGVuY2llcykgYmV5b25kIGBweXRob24z
YDogYHdnZXRgLCBgY2hyb21pdW1gLCBhbmQgYHlvdXR1YmUtZGxgLgpUbyBn
ZXQgc3RhcnRlZCwgeW91IGNhbiBbaW5zdGFsbCB0aGVtIG1hbnVhbGx5XSho
dHRwczovL2dpdGh1Yi5jb20vcGlyYXRlL0FyY2hpdmVCb3gvd2lraS9JbnN0
YWxsKSB1c2luZyB5b3VyIHN5c3RlbSdzIHBhY2thZ2UgbWFuYWdlciwgdXNl
IHRoZSBbYXV0b21hdGVkIGhlbHBlciBzY3JpcHRdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9waXJhdGUvQXJjaGl2ZUJveC93aWtpL1F1aWNrc3RhcnQpLCBvciB1
c2UgdGhlIG9mZmljaWFsIFtEb2NrZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9w
aXJhdGUvQXJjaGl2ZUJveC93aWtpL0RvY2tlcikgY29udGFpbmVyLiAgQWxs
IHRocmVlIGRlcGVuZGVuY2llcyBhcmUgb3B0aW9uYWwgaWYgW2Rpc2FibGVk
XShodHRwczovL2dpdGh1Yi5jb20vcGlyYXRlL0FyY2hpdmVCb3gvd2lraS9D
b25maWd1cmF0aW9uI2FyY2hpdmUtbWV0aG9kLXRvZ2dsZXMpIGluIHNldHRp
bmdzLgoKYGBgYmFzaAojIDEuIEluc3RhbGwgZGVwZW5kZW5jaWVzICh1c2Ug
YXB0IG9uIHVidW50dSwgYnJldyBvbiBtYWMsIG9yIHBrZyBvbiBCU0QpCmFw
dCBpbnN0YWxsIHB5dGhvbjMgcHl0aG9uMy1waXAgZ2l0IGN1cmwgd2dldCB5
b3V0dWJlLWRsIGNocm9taXVtLWJyb3dzZXIKCiMgMi4gRG93bmxvYWQgQXJj
aGl2ZUJveApnaXQgY2xvbmUgaHR0cHM6Ly9naXRodWIuY29tL3BpcmF0ZS9B
cmNoaXZlQm94LmdpdCAmJiBjZCBBcmNoaXZlQm94CgojIDMuIEFkZCB5b3Vy
IGZpcnN0IGxpbmtzIHRvIHlvdXIgYXJjaGl2ZQplY2hvICdodHRwczovL2V4
YW1wbGUuY29tJyB8IC4vYXJjaGl2ZSAgICAgICAgICAgICAgICAgICMgcGFz
cyBVUkxzIHRvIGFyY2hpdmUgdmlhIHN0ZGluCgouL2FyY2hpdmUgaHR0cHM6
Ly9nZXRwb2NrZXQuY29tL3VzZXJzL2V4YW1wbGUvZmVlZC9hbGwgICMgb3Ig
aW1wb3J0IGFuIFJTUy9KU09OL1hNTC9UWFQgZmVlZApgYGAKCk9uY2UgeW91
J3ZlIGFkZGVkIHlvdXIgZmlyc3QgbGlua3MsIG9wZW4gYG91dHB1dC9pbmRl
eC5odG1sYCBpbiBhIGJyb3dzZXIgdG8gdmlldyB0aGUgYXJjaGl2ZS4gIFtE
RU1POiBhcmNoaXZlLnN3ZWV0aW5nLm1lXShodHRwczovL2FyY2hpdmUuc3dl
ZXRpbmcubWUpICAKRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZSB0aGUgW2Z1
bGwgUXVpY2tzdGFydCBndWlkZV0oaHR0cHM6Ly9naXRodWIuY29tL3BpcmF0
ZS9BcmNoaXZlQm94L3dpa2kvUXVpY2tzdGFydCksIFtVc2FnZV0oaHR0cHM6
Ly9naXRodWIuY29tL3BpcmF0ZS9BcmNoaXZlQm94L3dpa2kvVXNhZ2UpLCBh
bmQgW0NvbmZpZ3VyYXRpb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9waXJhdGUv
QXJjaGl2ZUJveC93aWtpL0NvbmZpZ3VyYXRpb24pIGRvY3MuICAKCiooYHBp
cCBpbnN0YWxsIGFyY2hpdmVib3hgIHdpbGwgYmUgYXZhaWxhYmxlIGluIHRo
ZSBuZWFyIGZ1dHVyZSwgZm9sbG93IG91ciBbUm9hZG1hcF0oaHR0cHM6Ly9n
aXRodWIuY29tL3BpcmF0ZS9BcmNoaXZlQm94L3dpa2kvUm9hZG1hcCkgZm9y
IHByb2dyZXNzKSoKCi0tLQoKPGRpdiBhbGlnbj0iY2VudGVyIj4KPGltZyBz
cmM9Imh0dHBzOi8vaS5pbWd1ci5jb20vUFZPODhBWi5wbmciIHdpZHRoPSI4
MCUiLz4KPC9kaXY+CgojIE92ZXJ2aWV3CgpCZWNhdXNlIG1vZGVybiB3ZWJz
aXRlcyBhcmUgY29tcGxpY2F0ZWQgYW5kIG9mdGVuIHJlbHkgb24gZHluYW1p
YyBjb250ZW50LCAKQXJjaGl2ZUJveCBhcmNoaXZlcyB0aGUgc2l0ZXMgaW4g
KipzZXZlcmFsIGRpZmZlcmVudCBmb3JtYXRzKiogYmV5b25kIHdoYXQgcHVi
bGljIAphcmNoaXZpbmcgc2VydmljZXMgbGlrZSBBcmNoaXZlLm9yZyBhbmQg
QXJjaGl2ZS5pcyBhcmUgY2FwYWJsZSBvZiBzYXZpbmcuIFVzaW5nIG11bHRp
cGxlIAptZXRob2RzIGFuZCB0aGUgbWFya2V0LWRvbWluYW50IGJyb3dzZXIg
dG8gZXhlY3V0ZSBKUyBlbnN1cmVzIHdlIGNhbiBzYXZlIGV2ZW4gdGhlIG1v
c3QgCmNvbXBsZXgsIGZpbmlja3kgd2Vic2l0ZXMgaW4gYXQgbGVhc3QgYSBm
ZXcgaGlnaC1xdWFsaXR5LCBsb25nLXRlcm0gZGF0YSBmb3JtYXRzLgoKQXJj
aGl2ZUJveCBpbXBvcnRzIGEgbGlzdCBvZiBVUkxzIGZyb20gc3RkaW4sIHJl
bW90ZSBVUkwsIG9yIGZpbGUsIHRoZW4gYWRkcyB0aGUgcGFnZXMgdG8gYSBs
b2NhbCBhcmNoaXZlIGZvbGRlciB1c2luZyB3Z2V0IHRvIGNyZWF0ZSBhIGJy
b3dzYWJsZSBIVE1MIGNsb25lLCB5b3V0dWJlLWRsIHRvIGV4dHJhY3QgbWVk
aWEsIGFuZCBhIGZ1bGwgaW5zdGFuY2Ugb2YgQ2hyb21lIGhlYWRsZXNzIGZv
ciBQREYsIFNjcmVlbnNob3QsIGFuZCBET00gZHVtcHMsIGFuZCBtb3JlLi4u
CgpSdW5uaW5nIGAuL2FyY2hpdmVgIGFkZHMgb25seSBuZXcsIHVuaXF1ZSBs
aW5rcyBpbnRvIGBvdXRwdXQvYCBvbiBlYWNoIHJ1bi4gQmVjYXVzZSBpdCB3
aWxsIGlnbm9yZSBkdXBsaWNhdGVzIGFuZCBvbmx5IGFyY2hpdmUgZWFjaCBs
aW5rIHRoZSBmaXJzdCB0aW1lIHlvdSBhZGQgaXQsIHlvdSBjYW4gc2NoZWR1
bGUgaXQgdG8gW3J1biBvbiBhIHRpbWVyXShodHRwczovL2dpdGh1Yi5jb20v
cGlyYXRlL0FyY2hpdmVCb3gvd2lraS9TY2hlZHVsZWQtQXJjaGl2aW5nKSBh
bmQgcmUtaW1wb3J0IGFsbCB5b3VyIGZlZWRzIG11bHRpcGxlIHRpbWVzIGEg
ZGF5LiBJdCB3aWxsIHJ1biBxdWlja2x5IGV2ZW4gaWYgdGhlIGZlZWRzIGFy
ZSBsYXJnZSwgYmVjYXVzZSBpdCdzIG9ubHkgYXJjaGl2aW5nIHRoZSBuZXdl
c3QgbGlua3Mgc2luY2UgdGhlIGxhc3QgcnVuLiAgRm9yIGVhY2ggbGluaywg
aXQgcnVucyB0aHJvdWdoIGFsbCB0aGUgYXJjaGl2ZSBtZXRob2RzLiBNZXRo
b2RzIHRoYXQgZmFpbCB3aWxsIHNhdmUgYE5vbmVgIGFuZCBiZSBhdXRvbWF0
aWNhbGx5IHJldHJpZWQgb24gdGhlIG5leHQgcnVuLCBtZXRob2RzIHRoYXQg
c3VjY2VlZCBzYXZlIHRoZWlyIG91dHB1dCBpbnRvIHRoZSBkYXRhIGZvbGRl
ciBhbmQgYXJlIG5ldmVyIHJldHJpZWQvb3ZlcndyaXR0ZW4gYnkgc3Vic2Vx
dWVudCBydW5zLiAgU3VwcG9ydCBmb3Igc2F2aW5nIG11bHRpcGxlIHNuYXBz
aG90cyBvZiBlYWNoIHNpdGUgb3ZlciB0aW1lIHdpbGwgYmUgW2FkZGVkIHNv
b25dKGh0dHBzOi8vZ2l0aHViLmNvbS9waXJhdGUvQXJjaGl2ZUJveC9pc3N1
ZXMvMTc5KSAoYWxvbmcgd2l0aCB0aGUgYWJpbGl0eSB0byB2aWV3IGRpZmZz
IG9mIHRoZSBjaGFuZ2VzIGJldHdlZW4gcnVucykuCgpBbGwgdGhlIGFyY2hp
dmVkIGxpbmtzIGFyZSBzdG9yZWQgYnkgZGF0ZSBib29rbWFya2VkIGluIGBv
dXRwdXQvYXJjaGl2ZS88dGltZXN0YW1wPmAsIGFuZCBldmVyeXRoaW5nIGlz
IGluZGV4ZWQgbmljZWx5IHdpdGggSlNPTiAmIEhUTUwgZmlsZXMuIFRoZSBp
bnRlbnQgaXMgZm9yIGFsbCB0aGUgY29udGVudCB0byBiZSB2aWV3YWJsZSB3
aXRoIGNvbW1vbiBzb2Z0d2FyZSBpbiA1MCAtIDEwMCB5ZWFycyB3aXRob3V0
IG5lZWRpbmcgdG8gcnVuIEFyY2hpdmVCb3ggaW4gYSBWTS4KCiMjIyMgQ2Fu
IGltcG9ydCBsaW5rcyBmcm9tIG1hbnkgZm9ybWF0czoKCmBgYGJhc2gKZWNo
byAnaHR0cDovL2V4YW1wbGUuY29tJyB8IC4vYXJjaGl2ZQouL2FyY2hpdmUg
fi9Eb3dubG9hZHMvZmlyZWZveF9ib29rbWFya3NfZXhwb3J0Lmh0bWwKLi9h
cmNoaXZlIGh0dHBzOi8vZXhhbXBsZS5jb20vc29tZS9yc3MvZmVlZC54bWwK
YGBgCiAtIDxpbWcgc3JjPSJodHRwczovL25pY2tzd2VldGluZy5jb20vaW1h
Z2VzL2Jvb2ttYXJrcy5wbmciIGhlaWdodD0iMjJweCIvPiBCcm93c2VyIGhp
c3Rvcnkgb3IgYm9va21hcmtzIGV4cG9ydHMgKENocm9tZSwgRmlyZWZveCwg
U2FmYXJpLCBJRSwgT3BlcmEsIGFuZCBtb3JlKQogLSA8aW1nIHNyYz0iaHR0
cHM6Ly9uaWNrc3dlZXRpbmcuY29tL2ltYWdlcy9yc3Muc3ZnIiBoZWlnaHQ9
IjIycHgiLz4gUlNTLCBYTUwsIEpTT04sIENTViwgU1FMLCBIVE1MLCBNYXJr
ZG93biwgVFhULCBvciBhbnkgb3RoZXIgdGV4dC1iYXNlZCBmb3JtYXQKIC0g
PGltZyBzcmM9Imh0dHBzOi8vZ2V0cG9ja2V0LmNvbS9mYXZpY29uLmljbyIg
aGVpZ2h0PSIyMnB4Ii8+IFBvY2tldCwgUGluYm9hcmQsIEluc3RhcGFwZXIs
IFNoYWFybGksIERlbGljaW91cywgUmVkZGl0IFNhdmVkIFBvc3RzLCBXYWxs
YWJhZywgVW5tYXJrLml0LCBPbmVUYWIsIGFuZCBtb3JlCgpTZWUgdGhlIFtV
c2FnZTogQ0xJXShodHRwczovL2dpdGh1Yi5jb20vcGlyYXRlL0FyY2hpdmVC
b3gvd2lraS9Vc2FnZSNDTEktVXNhZ2UpIHBhZ2UgZm9yIGRvY3VtZW50YXRp
b24gYW5kIGV4YW1wbGVzLgoKIyMjIyBTYXZlcyBsb3RzIG9mIHVzZWZ1bCBz
dHVmZiBmb3IgZWFjaCBpbXBvcnRlZCBsaW5rOgoKYGBgYmFzaAogbHMgb3V0
cHV0L2FyY2hpdmUvPHRpbWVzdGFtcD4vCmBgYAoKIC0gKipJbmRleDoqKiBg
aW5kZXguaHRtbGAgJiBgaW5kZXguanNvbmAgSFRNTCBhbmQgSlNPTiBpbmRl
eCBmaWxlcyBjb250YWluaW5nIG1ldGFkYXRhIGFuZCBkZXRhaWxzCiAtICoq
VGl0bGU6KiogYHRpdGxlYCB0aXRsZSBvZiB0aGUgc2l0ZQogLSAqKkZhdmlj
b246KiogYGZhdmljb24uaWNvYCBmYXZpY29uIG9mIHRoZSBzaXRlCiAtICoq
V0dFVCBDbG9uZToqKiBgZXhhbXBsZS5jb20vcGFnZS1uYW1lLmh0bWxgIHdn
ZXQgY2xvbmUgb2YgdGhlIHNpdGUsIHdpdGggLmh0bWwgYXBwZW5kZWQgaWYg
bm90IHByZXNlbnQKIC0gKipXQVJDOioqIGB3YXJjLzx0aW1lc3RhbXA+Lmd6
YCBnemlwcGVkIFdBUkMgb2YgYWxsIHRoZSByZXNvdXJjZXMgZmV0Y2hlZCB3
aGlsZSBhcmNoaXZpbmcKIC0gKipQREY6KiogYG91dHB1dC5wZGZgIFByaW50
ZWQgUERGIG9mIHNpdGUgdXNpbmcgaGVhZGxlc3MgY2hyb21lCiAtICoqU2Ny
ZWVuc2hvdDoqKiBgc2NyZWVuc2hvdC5wbmdgIDE0NDB4OTAwIHNjcmVlbnNo
b3Qgb2Ygc2l0ZSB1c2luZyBoZWFkbGVzcyBjaHJvbWUKIC0gKipET00gRHVt
cDoqKiBgb3V0cHV0Lmh0bWxgIERPTSBEdW1wIG9mIHRoZSBIVE1MIGFmdGVy
IHJlbmRlcmluZyB1c2luZyBoZWFkbGVzcyBjaHJvbWUKIC0gKipVUkwgdG8g
QXJjaGl2ZS5vcmc6KiogYGFyY2hpdmUub3JnLnR4dGAgQSBsaW5rIHRvIHRo
ZSBzYXZlZCBzaXRlIG9uIGFyY2hpdmUub3JnCiAtICoqQXVkaW8gJiBWaWRl
bzoqKiBgbWVkaWEvYCBhbGwgYXVkaW8vdmlkZW8gZmlsZXMgKyBwbGF5bGlz
dHMsIGluY2x1ZGluZyBzdWJ0aXRsZXMgJiBtZXRhZGF0YSB3aXRoIHlvdXR1
YmUtZGwKIC0gKipTb3VyY2UgQ29kZToqKiBgZ2l0L2AgY2xvbmUgb2YgYW55
IHJlcG9zaXRvcnkgZm91bmQgb24gZ2l0aHViLCBiaXRidWNrZXQsIG9yIGdp
dGxhYiBsaW5rcwogLSAqTW9yZSBjb21pbmcgc29vbiEgU2VlIHRoZSBbUm9h
ZG1hcF0oaHR0cHM6Ly9naXRodWIuY29tL3BpcmF0ZS9BcmNoaXZlQm94L3dp
a2kvUm9hZG1hcCkuLi4qCgpJdCBkb2VzIGV2ZXJ5dGhpbmcgb3V0LW9mLXRo
ZS1ib3ggYnkgZGVmYXVsdCwgYnV0IHlvdSBjYW4gZGlzYWJsZSBvciB0d2Vh
ayBbaW5kaXZpZHVhbCBhcmNoaXZlIG1ldGhvZHNdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9waXJhdGUvQXJjaGl2ZUJveC93aWtpL0NvbmZpZ3VyYXRpb24pIHZp
YSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgb3IgY29uZmlnIGZpbGUuCgpJZiB5
b3UncmUgaW1wb3J0aW5nIFVSTHMgd2l0aCBzZWNyZXQgdG9rZW5zIGluIHRo
ZW0gKGUuZyBHb29nbGUgRG9jcywgQ29kaU1EIG5vdGVwYWRzLCBldGMpLCB5
b3UgbWF5IHdhbnQgdG8gZGlzYWJsZSBzb21lIG9mIHRoZXNlIG1ldGhvZHMg
dG8gYXZvaWQgbGVha2luZyBwcml2YXRlIFVSTHMgdG8gM3JkIHBhcnR5IEFQ
SXMgZHVyaW5nIHRoZSBhcmNoaXZpbmcgcHJvY2Vzcy4gIFNlZSB0aGUgW1Nl
Y3VyaXR5IE92ZXJ2aWV3XShodHRwczovL2dpdGh1Yi5jb20vcGlyYXRlL0Fy
Y2hpdmVCb3gvd2lraS9TZWN1cml0eS1PdmVydmlldyNzdGVhbHRoLW1vZGUp
IHBhZ2UgZm9yIG1vcmUgZGV0YWlscy4KCiMjIEtleSBGZWF0dXJlcwoKIC0g
WyoqRnJlZSAmIG9wZW4gc291cmNlKipdKGh0dHBzOi8vZ2l0aHViLmNvbS9w
aXJhdGUvQXJjaGl2ZUJveC9ibG9iL21hc3Rlci9MSUNFTlNFKSwgZG9lc24n
dCByZXF1aXJlIHNpZ25pbmcgdXAgZm9yIGFueXRoaW5nLCBzdG9yZXMgYWxs
IGRhdGEgbG9jYWxseQogLSBbKipGZXcgZGVwZW5kZW5jaWVzKipdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9waXJhdGUvQXJjaGl2ZUJveC93aWtpL0luc3RhbGwj
ZGVwZW5kZW5jaWVzKSBhbmQgW3NpbXBsZSBjb21tYW5kIGxpbmUgaW50ZXJm
YWNlXShodHRwczovL2dpdGh1Yi5jb20vcGlyYXRlL0FyY2hpdmVCb3gvd2lr
aS9Vc2FnZSNDTEktVXNhZ2UpCiAtIFsqKkNvbXByZWhlbnNpdmUgZG9jdW1l
bnRhdGlvbioqXShodHRwczovL2dpdGh1Yi5jb20vcGlyYXRlL0FyY2hpdmVC
b3gvd2lraSksIFthY3RpdmUgZGV2ZWxvcG1lbnRdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9waXJhdGUvQXJjaGl2ZUJveC93aWtpL1JvYWRtYXApLCBhbmQgW3Jp
Y2ggY29tbXVuaXR5XShodHRwczovL2dpdGh1Yi5jb20vcGlyYXRlL0FyY2hp
dmVCb3gvd2lraS9XZWItQXJjaGl2aW5nLUNvbW11bml0eSkKIC0gKipEb2Vz
bid0IHJlcXVpcmUgYSBjb25zdGFudGx5LXJ1bm5pbmcgc2VydmVyKiosIHBy
b3h5LCBvciBuYXRpdmUgYXBwCiAtIEVhc3kgdG8gc2V0IHVwICoqW3NjaGVk
dWxlZCBpbXBvcnRpbmddKGh0dHBzOi8vZ2l0aHViLmNvbS9waXJhdGUvQXJj
aGl2ZUJveC93aWtpL1NjaGVkdWxlZC1BcmNoaXZpbmcpIGZyb20gbXVsdGlw
bGUgc291cmNlcyoqCiAtIFVzZXMgY29tbW9uLCAqKmR1cmFibGUsIFtsb25n
LXRlcm0gZm9ybWF0c10oI3NhdmVzLWxvdHMtb2YtdXNlZnVsLXN0dWZmLWZv
ci1lYWNoLWltcG9ydGVkLWxpbmspKiogbGlrZSBIVE1MLCBKU09OLCBQREYs
IFBORywgYW5kIFdBUkMKIC0gfn4qKlN1aXRhYmxlIGZvciBwYXl3YWxsZWQg
LyBbYXV0aGVudGljYXRlZCBjb250ZW50XShodHRwczovL2dpdGh1Yi5jb20v
cGlyYXRlL0FyY2hpdmVCb3gvd2lraS9Db25maWd1cmF0aW9uI2Nocm9tZV91
c2VyX2RhdGFfZGlyKSoqIChjYW4gdXNlIHlvdXIgY29va2llcyl+fiAoZG8g
bm90IGRvIHRoaXMgdW50aWwgdjAuNCBpcyByZWxlYXNlZCB3aXRoIHNvbWUg
c2VjdXJpdHkgZml4ZXMpCiAtIENhbiBbKipydW4gc2NyaXB0cyBkdXJpbmcg
YXJjaGl2aW5nKipdKGh0dHBzOi8vZ2l0aHViLmNvbS9waXJhdGUvQXJjaGl2
ZUJveC9pc3N1ZXMvNTEpIHRvIFtzY3JvbGwgcGFnZXNdKGh0dHBzOi8vZ2l0
aHViLmNvbS9waXJhdGUvQXJjaGl2ZUJveC9pc3N1ZXMvODApLCBbY2xvc2Ug
bW9kYWxzXShodHRwczovL2dpdGh1Yi5jb20vcGlyYXRlL0FyY2hpdmVCb3gv
aXNzdWVzLzE3NSksIGV4cGFuZCBjb21tZW50IHRocmVhZHMsIGV0Yy4KIC0g
Q2FuIGFsc28gWyoqbWlycm9yIGNvbnRlbnQgdG8gM3JkLXBhcnR5IGFyY2hp
dmluZyBzZXJ2aWNlcyoqXShodHRwczovL2dpdGh1Yi5jb20vcGlyYXRlL0Fy
Y2hpdmVCb3gvd2lraS9Db25maWd1cmF0aW9uI3N1Ym1pdF9hcmNoaXZlX2Rv
dF9vcmcpIGF1dG9tYXRpY2FsbHkgZm9yIHJlZHVuZGFuY3kKCiMjIEJhY2tn
cm91bmQgJiBNb3RpdmF0aW9uCgpWYXN0IHRyZWFzdXJlIHRyb3ZlcyBvZiBr
bm93bGVkZ2UgYXJlIGxvc3QgZXZlcnkgZGF5IG9uIHRoZSBpbnRlcm5ldCB0
byBsaW5rIHJvdC4gIEFzIGEgc29jaWV0eSwgd2UgaGF2ZSBhbiBpbXBlcmF0
aXZlIHRvIHByZXNlcnZlIHNvbWUgaW1wb3J0YW50IHBhcnRzIG9mIHRoYXQg
dHJlYXN1cmUsIGp1c3QgbGlrZSB3ZSBwcmVzZXJ2ZSBvdXIgYm9va3MsIHBh
aW50aW5ncywgYW5kIG11c2ljIGluIHBoeXNpY2FsIGxpYnJhcmllcyBsb25n
IGFmdGVyIHRoZSBvcmlnaW5hbHMgZ28gb3V0IG9mIHByaW50IG9yIGZhZGUg
aW50byBvYnNjdXJpdHkuCgpXaGV0aGVyIGl0J3MgdG8gcmVzaXN0IGNlbnNv
cnNoaXAgYnkgc2F2aW5nIGFydGljbGVzIGJlZm9yZSB0aGV5IGdldCB0YWtl
biBkb3duIG9yIGVkaXRlZCwgb3IKanVzdCB0byBzYXZlIGEgY29sbGVjdGlv
biBvZiBlYXJseSAyMDEwJ3MgZmxhc2ggZ2FtZXMgeW91IGxvdmUgdG8gcGxh
eSwgaGF2aW5nIHRoZSB0b29scyB0byAKYXJjaGl2ZSBpbnRlcm5ldCBjb250
ZW50IGVuYWJsZXMgdG8geW91IHNhdmUgdGhlIHN0dWZmIHlvdSBjYXJlIG1v
c3QgYWJvdXQgYmVmb3JlIGl0IGRpc2FwcGVhcnMuCgo8ZGl2IGFsaWduPSJj
ZW50ZXIiPgo8aW1nIHNyYz0iaHR0cHM6Ly9pLmltZ3VyLmNvbS9iQzZlWmNW
LnBuZyIgd2lkdGg9IjUwJSIvPjxici8+CiA8c3VwPjxpPkltYWdlIGZyb20g
PGEgaHJlZj0iaHR0cHM6Ly9kaWdpZGF5LmNvbS9tZWRpYS93dGYtbGluay1y
b3QvIj5XVEYgaXMgTGluayBSb3Q/PC9hPi4uLjwvaT48YnIvPjwvc3VwPgo8
L2Rpdj4KClRoZSBiYWxhbmNlIGJldHdlZW4gdGhlIHBlcm1hbmVuY2UgYW5k
IGVwaGVtZXJhbCBuYXR1cmUgb2YgY29udGVudCBvbiB0aGUgaW50ZXJuZXQg
aXMgcGFydCBvZiB3aGF0IG1ha2VzIGl0IGJlYXV0aWZ1bC4gCkkgZG9uJ3Qg
dGhpbmsgZXZlcnl0aGluZyBzaG91bGQgYmUgcHJlc2VydmVkIGluIGFuIGF1
dG9tYXRlZCBmYXNoaW9uLCBtYWtpbmcgYWxsIGNvbnRlbnQgcGVybWFuZW50
IGFuZCBuZXZlciByZW1vdmFibGUsIGJ1dCBJIGRvIHRoaW5rIHBlb3BsZSBz
aG91bGQgYmUgYWJsZSB0byBkZWNpZGUgZm9yIHRoZW1zZWx2ZXMgYW5kIGVm
ZmVjdGl2ZWx5IGFyY2hpdmUgc3BlY2lmaWMgY29udGVudCB0aGF0IHRoZXkg
Y2FyZSBhYm91dC4KCgojIyBDb21wYXJpc29uIHRvIE90aGVyIFByb2plY3Rz
CgrilrYgKipDaGVjayBvdXQgb3VyIFtjb21tdW5pdHkgcGFnZV0oaHR0cHM6
Ly9naXRodWIuY29tL3BpcmF0ZS9BcmNoaXZlQm94L3dpa2kvV2ViLUFyY2hp
dmluZy1Db21tdW5pdHkpIGZvciBhbiBpbmRleCBvZiB3ZWIgYXJjaGl2aW5n
IGluaXRpYXRpdmVzIGFuZCBwcm9qZWN0cy4qKgoKPGltZyBzcmM9Imh0dHBz
Oi8vaS5pbWd1ci5jb20vNG5rRmpkdi5wbmciIHdpZHRoPSIxMCUiIGFsaWdu
PSJsZWZ0Ii8+IFRoZSBhaW0gb2YgQXJjaGl2ZUJveCBpcyB0byBnbyBiZXlv
bmQgd2hhdCB0aGUgV2F5YmFjayBNYWNoaW5lIGFuZCBvdGhlciBwdWJsaWMg
YXJjaGl2aW5nIHNlcnZpY2VzIGNhbiBkbywgYnkgYWRkaW5nIGEgaGVhZGxl
c3MgYnJvd3NlciB0byByZXBsYXkgc2Vzc2lvbnMgYWNjdXJhdGVseSwgYW5k
IGJ5IGF1dG9tYXRpY2FsbHkgZXh0cmFjdGluZyBhbGwgdGhlIGNvbnRlbnQg
aW4gbXVsdGlwbGUgcmVkdW5kYW50IGZvcm1hdHMgdGhhdCB3aWxsIHN1cnZp
dmUgYmVpbmcgcGFzc2VkIGRvd24gdG8gaGlzdG9yaWFucyBhbmQgYXJjaGl2
aXN0cyB0aHJvdWdoIG1hbnkgZ2VuZXJhdGlvbnMuCgojIyMjIFVzZXIgSW50
ZXJmYWNlICYgSW50ZW5kZWQgUHVycG9zZQoKQXJjaGl2ZUJveCBkaWZmZXJl
bnRpYXRlcyBpdHNlbGYgZnJvbSBbc2ltaWxhciBwcm9qZWN0c10oaHR0cHM6
Ly9naXRodWIuY29tL3BpcmF0ZS9BcmNoaXZlQm94L3dpa2kvV2ViLUFyY2hp
dmluZy1Db21tdW5pdHkjV2ViLUFyY2hpdmluZy1Qcm9qZWN0cykgYnkgYmVp
bmcgYSBzaW1wbGUsIG9uZS1zaG90IENMSSBpbnRlcmZhY2UgZm9yIHVzZXJz
IHRvIGluZ2VzdCBidWxrIGZlZWRzIG9mIFVSTHMgb3ZlciBleHRlbmRlZCBw
ZXJpb2RzLCBhcyBvcHBvc2VkIHRvIGJlaW5nIGEgYmFja2VuZCBzZXJ2aWNl
IHRoYXQgaW5nZXN0cyBpbmRpdmlkdWFsLCBtYW51YWxseS1zdWJtaXR0ZWQg
VVJMcyBmcm9tIGEgd2ViIFVJLgoKQW4gYWx0ZXJuYXRpdmUgdG9vbCBbcHl3
Yl0oaHR0cHM6Ly9naXRodWIuY29tL3dlYnJlY29yZGVyL3B5d2IpIGFsbG93
cyB5b3UgdG8gcnVuIGEgYnJvd3NlciB0aHJvdWdoIGFuIGFsd2F5cy1ydW5u
aW5nIGFyY2hpdmluZyBwcm94eSB3aGljaCByZWNvcmRzIHRoZSB0cmFmZmlj
IHRvIFdBUkMgZmlsZXMuICBBcmNoaXZlQm94IGludGVuZHMgdG8gc3VwcG9y
dCB0aGlzIHN0eWxlIG9mIGxpdmUgcHJveHktYXJjaGl2aW5nIHVzaW5nIGBw
eXdiYCBpbiB0aGUgZnV0dXJlLCBidXQgZm9yIG5vdywgaXQgb25seSBpbmdl
c3RzIGxpc3RzIG9mIGxpbmtzIGF0IGEgdGltZSB2aWEgYnJvd3NlciBoaXN0
b3J5LCBib29rbWFya3MsIFJTUywgZXRjLgoKIyMjIyBQcml2YXRlIExvY2Fs
IEFyY2hpdmVzIHZzIENlbnRyYWxpemVkIFB1YmxpYyBBcmNoaXZlcwoKVW5s
aWtlIGNyYXdsZXIgc29mdHdhcmUgdGhhdCBzdGFydHMgZnJvbSBhIHNlZWQg
VVJMIGFuZCB3b3JrcyBvdXR3YXJkcywgb3IgcHVibGljIHRvb2xzIGxpa2Ug
QXJjaGl2ZS5vcmcgZGVzaWduZWQgZm9yIHVzZXJzIHRvIG1hbnVhbGx5IHN1
Ym1pdCBsaW5rcyBmcm9tIHRoZSBwdWJsaWMgaW50ZXJuZXQsIEFyY2hpdmVC
b3ggdHJpZXMgdG8gYmUgYSBzZXQtYW5kLWZvcmdldCBhcmNoaXZlciBzdWl0
YWJsZSBmb3IgYXJjaGl2aW5nIHlvdXIgZW50aXJlIGJyb3dzaW5nIGhpc3Rv
cnksIFJTUyBmZWVkcywgb3IgYm9va21hcmtzLCB+fmluY2x1ZGluZyBwcml2
YXRlL2F1dGhlbnRpY2F0ZWQgY29udGVudCB0aGF0IHlvdSB3b3VsZG4ndCBv
dGhlcndpc2Ugc2hhcmUgd2l0aCBhIGNlbnRyYWxpemVkIHNlcnZpY2V+fiAo
ZG8gbm90IGRvIHRoaXMgdW50aWwgdjAuNCBpcyByZWxlYXNlZCB3aXRoIHNv
bWUgc2VjdXJpdHkgZml4ZXMpLiAgQWxzbyBieSBoYXZpbmcgZWFjaCB1c2Vy
IHN0b3JlIHRoZWlyIG93biBjb250ZW50IGxvY2FsbHksIHdlIGNhbiBzYXZl
IG11Y2ggbGFyZ2VyIHBvcnRpb25zIG9mIGV2ZXJ5b25lJ3MgYnJvd3Npbmcg
aGlzdG9yeSB0aGFuIGEgc2hhcmVkIGNlbnRyYWxpemVkIHNlcnZpY2Ugd291
bGQgYmUgYWJsZSB0byBoYW5kbGUuCgojIyMjIFN0b3JhZ2UgUmVxdWlyZW1l
bnRzCgpCZWNhdXNlIEFyY2hpdmVCb3ggaXMgZGVzaWduZWQgdG8gaW5nZXN0
IGEgZmlyZWhvc2Ugb2YgYnJvd3NlciBoaXN0b3J5IGFuZCBib29rbWFyayBm
ZWVkcyB0byBhIGxvY2FsIGRpc2ssIGl0IGNhbiBiZSBtdWNoIG1vcmUgZGlz
ay1zcGFjZSBpbnRlbnNpdmUgdGhhbiBhIGNlbnRyYWxpemVkIHNlcnZpY2Ug
bGlrZSB0aGUgSW50ZXJuZXQgQXJjaGl2ZSBvciBBcmNoaXZlLnRvZGF5LiAg
SG93ZXZlciwgYXMgc3RvcmFnZSBzcGFjZSBnZXRzIGNoZWFwZXIgYW5kIGNv
bXByZXNzaW9uIGltcHJvdmVzLCB5b3Ugc2hvdWxkIGJlIGFibGUgdG8gdXNl
IGl0IGNvbnRpbnVvdXNseSBvdmVyIHRoZSB5ZWFycyB3aXRob3V0IGhhdmlu
ZyB0byBkZWxldGUgYW55dGhpbmcuICBJbiBteSBleHBlcmllbmNlLCBBcmNo
aXZlQm94IHVzZXMgYWJvdXQgNWdiIHBlciAxMDAwIGFydGljbGVzLCBidXQg
eW91ciBtaWxlYWdlIG1heSB2YXJ5IGRlcGVuZGluZyBvbiB3aGljaCBvcHRp
b25zIHlvdSBoYXZlIGVuYWJsZWQgYW5kIHdoYXQgdHlwZXMgb2Ygc2l0ZXMg
eW91J3JlIGFyY2hpdmluZy4gQnkgZGVmYXVsdCwgaXQgYXJjaGl2ZXMgZXZl
cnl0aGluZyBpbiBhcyBtYW55IGZvcm1hdHMgYXMgcG9zc2libGUsIG1lYW5p
bmcgaXQgdGFrZXMgbW9yZSBzcGFjZSB0aGFuIHVzaW5nIGEgc2luZ2xlIG1l
dGhvZCwgYnV0IG1vcmUgY29udGVudCBpcyBhY2N1cmF0ZWx5IHJlcGxheWFi
bGUgb3ZlciBleHRlbmRlZCBwZXJpb2RzLiBTdG9yYWdlIHJlcXVpcmVtZW50
cyBjYW4gYmUgcmVkdWNlZCBieSB1c2luZyBhIGNvbXByZXNzZWQvZGVkdXBs
aWNhdGVkIGZpbGVzeXN0ZW0gbGlrZSBaRlMvQlRSRlMsIG9yIGJ5IHNldHRp
bmcgYEZFVENIX01FRElBPUZhbHNlYCB0byBza2lwIGF1ZGlvICYgdmlkZW8g
ZmlsZXMuCgojIyBMZWFybiBtb3JlCgo8IS0t4pa2ICoqSm9pbiBvdXQgb3Vy
IFtjb21tdW5pdHkgY2hhdF0oaHR0cDovL3dlYmNoYXQuZnJlZW5vZGUubmV0
P2NoYW5uZWxzPUFyY2hpdmVCb3gmdWlvPWQ0KSBob3N0ZWQgb24gSVJDIGZy
ZWVub2RlLm5ldDpgI0FyY2hpdmVCb3hgISoqLS0+CgpXaGV0aGVyIHlvdSB3
YW50IHRvIGxlYXJuIHdoaWNoIG9yZ2FuaXphdGlvbnMgYXJlIHRoZSBiaWcg
cGxheWVycyBpbiB0aGUgd2ViIGFyY2hpdmluZyBzcGFjZSwgd2FudCB0byBm
aW5kIGEgc3BlY2lmaWMgb3Blbi1zb3VyY2UgdG9vbCBmb3IgeW91ciB3ZWIg
YXJjaGl2aW5nIG5lZWQsIG9yIGp1c3Qgd2FudCB0byBzZWUgd2hlcmUgYXJj
aGl2aXN0cyBoYW5nIG91dCBvbmxpbmUsIG91ciBDb21tdW5pdHkgV2lraSBw
YWdlIHNlcnZlcyBhcyBhbiBpbmRleCBvZiB0aGUgYnJvYWRlciB3ZWIgYXJj
aGl2aW5nIGNvbW11bml0eS4gIENoZWNrIGl0IG91dCB0byBsZWFybiBhYm91
dCBzb21lIG9mIHRoZSBjb29sZXN0IHdlYiBhcmNoaXZpbmcgcHJvamVjdHMg
YW5kIGNvbW11bml0aWVzIG9uIHRoZSB3ZWIhCgo8aW1nIHNyYz0iaHR0cHM6
Ly9pLmltZ3VyLmNvbS8wWk9tT3ZOLnBuZyIgd2lkdGg9IjE0JSIgYWxpZ249
InJpZ2h0Ii8+CgogLSBbQ29tbXVuaXR5IFdpa2ldKGh0dHBzOi8vZ2l0aHVi
LmNvbS9waXJhdGUvQXJjaGl2ZUJveC93aWtpL1dlYi1BcmNoaXZpbmctQ29t
bXVuaXR5KQogICArIFtUaGUgTWFzdGVyIExpc3RzXShodHRwczovL2dpdGh1
Yi5jb20vcGlyYXRlL0FyY2hpdmVCb3gvd2lraS9XZWItQXJjaGl2aW5nLUNv
bW11bml0eSNUaGUtTWFzdGVyLUxpc3RzKSAgCiAgICAgKkNvbW11bml0eS1t
YWludGFpbmVkIGluZGV4ZXMgb2YgYXJjaGl2aW5nIHRvb2xzIGFuZCBpbnN0
aXR1dGlvbnMuKiAKICAgKyBbV2ViIEFyY2hpdmluZyBTb2Z0d2FyZV0oaHR0
cHM6Ly9naXRodWIuY29tL3BpcmF0ZS9BcmNoaXZlQm94L3dpa2kvV2ViLUFy
Y2hpdmluZy1Db21tdW5pdHkjV2ViLUFyY2hpdmluZy1Qcm9qZWN0cykgIAog
ICAgICpPcGVuIHNvdXJjZSB0b29scyBhbmQgcHJvamVjdHMgaW4gdGhlIGlu
dGVybmV0IGFyY2hpdmluZyBzcGFjZS4qCiAgICsgW1JlYWRpbmcgTGlzdF0o
aHR0cHM6Ly9naXRodWIuY29tL3BpcmF0ZS9BcmNoaXZlQm94L3dpa2kvV2Vi
LUFyY2hpdmluZy1Db21tdW5pdHkjUmVhZGluZy1MaXN0KSAgCiAgICAgKkFy
dGljbGVzLCBwb3N0cywgYW5kIGJsb2dzIHJlbGV2YW50IHRvIEFyY2hpdmVC
b3ggYW5kIHdlYiBhcmNoaXZpbmcgaW4gZ2VuZXJhbC4qCiAgICsgW0NvbW11
bml0aWVzXShodHRwczovL2dpdGh1Yi5jb20vcGlyYXRlL0FyY2hpdmVCb3gv
d2lraS9XZWItQXJjaGl2aW5nLUNvbW11bml0eSNDb21tdW5pdGllcykgIAog
ICAgICpBIGNvbGxlY3Rpb24gb2YgdGhlIG1vc3QgYWN0aXZlIGludGVybmV0
IGFyY2hpdmluZyBjb21tdW5pdGllcyBhbmQgaW5pdGlhdGl2ZXMuKgogLSBD
aGVjayBvdXQgdGhlIEFyY2hpdmVCb3ggW1JvYWRtYXBdKGh0dHBzOi8vZ2l0
aHViLmNvbS9waXJhdGUvQXJjaGl2ZUJveC93aWtpL1JvYWRtYXApIGFuZCBb
Q2hhbmdlbG9nXShodHRwczovL2dpdGh1Yi5jb20vcGlyYXRlL0FyY2hpdmVC
b3gvd2lraS9DaGFuZ2Vsb2cpCiAtIExlYXJuIHdoeSBhcmNoaXZpbmcgdGhl
IGludGVybmV0IGlzIGltcG9ydGFudCBieSByZWFkaW5nIHRoZSAiW09uIHRo
ZSBJbXBvcnRhbmNlIG9mIFdlYiBBcmNoaXZpbmddKGh0dHBzOi8vcGFyYW1l
dGVycy5zc3JjLm9yZy8yMDE4LzA5L29uLXRoZS1pbXBvcnRhbmNlLW9mLXdl
Yi1hcmNoaXZpbmcvKSIgYmxvZyBwb3N0LgogLSBPciByZWFjaCBvdXQgdG8g
bWUgZm9yIHF1ZXN0aW9ucyBhbmQgY29tbWVudHMgdmlhIFtAdGhlU3F1YXNo
U0hdKGh0dHBzOi8vdHdpdHRlci5jb20vdGhlc3F1YXNoU0gpIG9uIFR3aXR0
ZXIuCiAKLS0tCiAKIyBEb2N1bWVudGF0aW9uCgo8aW1nIHNyYz0iaHR0cHM6
Ly9yZWFkLXRoZS1kb2NzLWd1aWRlbGluZXMucmVhZHRoZWRvY3MtaG9zdGVk
LmNvbS9faW1hZ2VzL2xvZ28tZGFyay5wbmciIHdpZHRoPSIxMyUiIGFsaWdu
PSJyaWdodCIvPgoKV2UgdXNlIHRoZSBbR2l0aHViIHdpa2kgc3lzdGVtXSho
dHRwczovL2dpdGh1Yi5jb20vcGlyYXRlL0FyY2hpdmVCb3gvd2lraSkgZm9y
IGRvY3VtZW50YXRpb24uCgpZb3UgY2FuIGFsc28gYWNjZXNzIHRoZSBkb2Nz
IGxvY2FsbHkgYnkgbG9va2luZyBpbiB0aGUgW2BBcmNoaXZlQm94L2RvY3Mv
YF0oaHR0cHM6Ly9naXRodWIuY29tL3BpcmF0ZS9BcmNoaXZlQm94L3dpa2kv
SG9tZSkgZm9sZGVyLgoKIyMgR2V0dGluZyBTdGFydGVkCgogLSBbUXVpY2tz
dGFydF0oaHR0cHM6Ly9naXRodWIuY29tL3BpcmF0ZS9BcmNoaXZlQm94L3dp
a2kvUXVpY2tzdGFydCkKIC0gW0luc3RhbGxdKGh0dHBzOi8vZ2l0aHViLmNv
bS9waXJhdGUvQXJjaGl2ZUJveC93aWtpL0luc3RhbGwpCiAtIFtEb2NrZXJd
KGh0dHBzOi8vZ2l0aHViLmNvbS9waXJhdGUvQXJjaGl2ZUJveC93aWtpL0Rv
Y2tlcikKCiMjIFJlZmVyZW5jZQoKIC0gW1VzYWdlXShodHRwczovL2dpdGh1
Yi5jb20vcGlyYXRlL0FyY2hpdmVCb3gvd2lraS9Vc2FnZSkKIC0gW0NvbmZp
Z3VyYXRpb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9waXJhdGUvQXJjaGl2ZUJv
eC93aWtpL0NvbmZpZ3VyYXRpb24pCiAtIFtTdXBwb3J0ZWQgU291cmNlc10o
aHR0cHM6Ly9naXRodWIuY29tL3BpcmF0ZS9BcmNoaXZlQm94L3dpa2kvUXVp
Y2tzdGFydCMyLWdldC15b3VyLWxpc3Qtb2YtdXJscy10by1hcmNoaXZlKQog
LSBbU3VwcG9ydGVkIE91dHB1dHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9waXJh
dGUvQXJjaGl2ZUJveC93aWtpI2Nhbi1zYXZlLXRoZXNlLXRoaW5ncy1mb3It
ZWFjaC1zaXRlKQogLSBbU2NoZWR1bGVkIEFyY2hpdmluZ10oaHR0cHM6Ly9n
aXRodWIuY29tL3BpcmF0ZS9BcmNoaXZlQm94L3dpa2kvU2NoZWR1bGVkLUFy
Y2hpdmluZykKIC0gW1B1Ymxpc2hpbmcgWW91ciBBcmNoaXZlXShodHRwczov
L2dpdGh1Yi5jb20vcGlyYXRlL0FyY2hpdmVCb3gvd2lraS9QdWJsaXNoaW5n
LVlvdXItQXJjaGl2ZSkKIC0gW0Nocm9taXVtIEluc3RhbGxdKGh0dHBzOi8v
Z2l0aHViLmNvbS9waXJhdGUvQXJjaGl2ZUJveC93aWtpL0luc3RhbGwtQ2hy
b21pdW0pCiAtIFtTZWN1cml0eSBPdmVydmlld10oaHR0cHM6Ly9naXRodWIu
Y29tL3BpcmF0ZS9BcmNoaXZlQm94L3dpa2kvU2VjdXJpdHktT3ZlcnZpZXcp
CiAtIFtUcm91Ymxlc2hvb3RpbmddKGh0dHBzOi8vZ2l0aHViLmNvbS9waXJh
dGUvQXJjaGl2ZUJveC93aWtpL1Ryb3VibGVzaG9vdGluZykKCiMjIE1vcmUg
SW5mbwoKIC0gW1JvYWRtYXBdKGh0dHBzOi8vZ2l0aHViLmNvbS9waXJhdGUv
QXJjaGl2ZUJveC93aWtpL1JvYWRtYXApCiAtIFtDaGFuZ2Vsb2ddKGh0dHBz
Oi8vZ2l0aHViLmNvbS9waXJhdGUvQXJjaGl2ZUJveC93aWtpL0NoYW5nZWxv
ZykKIC0gW0RvbmF0aW9uc10oaHR0cHM6Ly9naXRodWIuY29tL3BpcmF0ZS9B
cmNoaXZlQm94L3dpa2kvRG9uYXRpb25zKQogLSBbQmFja2dyb3VuZCAmIE1v
dGl2YXRpb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9waXJhdGUvQXJjaGl2ZUJv
eCNiYWNrZ3JvdW5kLS1tb3RpdmF0aW9uKQogLSBbV2ViIEFyY2hpdmluZyBD
b21tdW5pdHldKGh0dHBzOi8vZ2l0aHViLmNvbS9waXJhdGUvQXJjaGl2ZUJv
eC93aWtpL1dlYi1BcmNoaXZpbmctQ29tbXVuaXR5KQoKLS0tCgoKIyBTY3Jl
ZW5zaG90cwoKPGRpdiBhbGlnbj0iY2VudGVyIj4KPGltZyBzcmM9Imh0dHBz
Oi8vaS5pbWd1ci5jb20vYmlWZkZZci5wbmciIHdpZHRoPSIxOCUiIGFsdD0i
Q0xJIFNjcmVlbnNob3QiIGFsaWduPSJ0b3AiPgo8aW1nIHNyYz0iaHR0cHM6
Ly9pLmltZ3VyLmNvbS92aWtsWk5HLnBuZyIgd2lkdGg9IjQwJSIgYWx0PSJE
ZXNrdG9wIGluZGV4IHNjcmVlbnNob3QiIGFsaWduPSJ0b3AiPgo8aW1nIHNy
Yz0iaHR0cHM6Ly9pLmltZ3VyLmNvbS93bnBkQVZNLmpwZyIgd2lkdGg9IjMw
JSIgYWx0PSJEZXNrdG9wIGRldGFpbHMgcGFnZSBTY3JlZW5zaG90IiBhbGln
bj0idG9wIj4KPGltZyBzcmM9Imh0dHBzOi8vaS5pbWd1ci5jb20vbVcyZElU
Zy5wbmciIHdpZHRoPSI4JSIgYWx0PSJNb2JpbGUgZGV0YWlscyBwYWdlIHNj
cmVlbnNob3QiIGFsaWduPSJ0b3AiPgo8L2Rpdj4KCi0tLQoKPGRpdiBhbGln
bj0iY2VudGVyIj4KPGJyLz48YnIvPgo8aW1nIHNyYz0iaHR0cHM6Ly9yYXcu
Z2l0aHVidXNlcmNvbnRlbnQuY29tL01vbmFkaWNhbC1TQVMvcmVkdXgtdGlt
ZS9IRUFEL2V4YW1wbGVzL3N0YXRpYy9qZXJlbXkuanBnIiBoZWlnaHQ9IjQw
cHgiLz4KPGJyLz4KPHN1Yj48aT5UaGlzIHByb2plY3QgaXMgbWFpbnRhaW5l
ZCBtb3N0bHkgaW4gPGEgaHJlZj0iaHR0cHM6Ly9uaWNrc3dlZXRpbmcuY29t
L2Jsb2cjQWJvdXQiPm15IHNwYXJlIHRpbWU8L2E+IHdpdGggdGhlIGhlbHAg
ZnJvbSBnZW5lcm91cyBjb250cmlidXRvcnMuPC9pPjwvc3ViPgo8YnIvPjxi
ci8+CkNvbnRyaWJ1dG9yIFNwb3RsaWdodDo8YnIvPjxici8+CiAKPGEgaHJl
Zj0iaHR0cHM6Ly9zb3VyY2VyZXIuaW8vZmFtZS9waXJhdGUvcGlyYXRlL0Fy
Y2hpdmVCb3gvbGlua3MvMCI+PGltZyBzcmM9Imh0dHBzOi8vc291cmNlcmVy
LmlvL2ZhbWUvcGlyYXRlL3BpcmF0ZS9BcmNoaXZlQm94L2ltYWdlcy8wIj48
L2E+CjxhIGhyZWY9Imh0dHBzOi8vc291cmNlcmVyLmlvL2ZhbWUvcGlyYXRl
L3BpcmF0ZS9BcmNoaXZlQm94L2xpbmtzLzEiPjxpbWcgc3JjPSJodHRwczov
L3NvdXJjZXJlci5pby9mYW1lL3BpcmF0ZS9waXJhdGUvQXJjaGl2ZUJveC9p
bWFnZXMvMSI+PC9hPgo8YSBocmVmPSJodHRwczovL3NvdXJjZXJlci5pby9m
YW1lL3BpcmF0ZS9waXJhdGUvQXJjaGl2ZUJveC9saW5rcy8yIj48aW1nIHNy
Yz0iaHR0cHM6Ly9zb3VyY2VyZXIuaW8vZmFtZS9waXJhdGUvcGlyYXRlL0Fy
Y2hpdmVCb3gvaW1hZ2VzLzIiPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly9zb3Vy
Y2VyZXIuaW8vZmFtZS9waXJhdGUvcGlyYXRlL0FyY2hpdmVCb3gvbGlua3Mv
MyI+PGltZyBzcmM9Imh0dHBzOi8vc291cmNlcmVyLmlvL2ZhbWUvcGlyYXRl
L3BpcmF0ZS9BcmNoaXZlQm94L2ltYWdlcy8zIj48L2E+CjxhIGhyZWY9Imh0
dHBzOi8vc291cmNlcmVyLmlvL2ZhbWUvcGlyYXRlL3BpcmF0ZS9BcmNoaXZl
Qm94L2xpbmtzLzQiPjxpbWcgc3JjPSJodHRwczovL3NvdXJjZXJlci5pby9m
YW1lL3BpcmF0ZS9waXJhdGUvQXJjaGl2ZUJveC9pbWFnZXMvNCI+PC9hPgo8
YSBocmVmPSJodHRwczovL3NvdXJjZXJlci5pby9mYW1lL3BpcmF0ZS9waXJh
dGUvQXJjaGl2ZUJveC9saW5rcy81Ij48aW1nIHNyYz0iaHR0cHM6Ly9zb3Vy
Y2VyZXIuaW8vZmFtZS9waXJhdGUvcGlyYXRlL0FyY2hpdmVCb3gvaW1hZ2Vz
LzUiPjwvYT4KCjxici8+CjxhIGhyZWY9Imh0dHBzOi8vd3d3LnBhdHJlb24u
Y29tL3RoZVNxdWFzaFNIIj48aW1nIHNyYz0iaHR0cHM6Ly9pbWcuc2hpZWxk
cy5pby9iYWRnZS9Eb25hdGVfdG9fc3VwcG9ydF9kZXZlbG9wbWVudC12aWFf
UGF0cmVvbi0lMjNERDVENzYuc3ZnP3N0eWxlPWZsYXQiLz48L2E+Cjxici8+
Cjxici8+CjxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vdGhlc3F1YXNo
U0giPjxpbWcgc3JjPSJodHRwczovL2ltZy5zaGllbGRzLmlvL2JhZGdlL1R3
ZWV0LSU0MHRoZVNxdWFzaFNILWJsdWUuc3ZnP3N0eWxlPWZsYXQiLz48L2E+
CjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9waXJhdGUvQXJjaGl2ZUJv
eCI+PGltZyBzcmM9Imh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vZ2l0aHViL3N0
YXJzL3BpcmF0ZS9BcmNoaXZlQm94LnN2Zz9zdHlsZT1mbGF0JmxhYmVsPVN0
YXIrb24rR2l0aHViIi8+PC9hPgo8IS0tPGEgaHJlZj0iaHR0cDovL3dlYmNo
YXQuZnJlZW5vZGUubmV0P2NoYW5uZWxzPUFyY2hpdmVCb3gmdWlvPWQ0Ij48
aW1nIHNyYz0iaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS9Db21tdW5p
dHlfY2hhdC1JUkMtJTIzMjhBNzQ1LnN2ZyIvPjwvYT4tLT4KCjxici8+PGJy
Lz4KCjwvZGl2Pgo=
",,5673,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'k6',54400687,"b'A modern load testing tool, using Go and JavaScript - https://k6.io'",b'Go',251,5672,,127,False,b'https://api.github.com/repos/loadimpact/k6/forks',"PHAgYWxpZ249ImNlbnRlciI+PGEgaHJlZj0iaHR0cHM6Ly9rNi5pby8iPjxp
bWcgc3JjPSJsb2dvLnBuZyIgYWx0PSJrNiIgd2lkdGg9IjMwMCIgaGVpZ2h0
PSIyODIiPjwvYT48L3A+Cgo8aDMgYWxpZ249ImNlbnRlciI+TGlrZSB1bml0
IHRlc3RpbmcsIGZvciBwZXJmb3JtYW5jZTwvaDM+CjxwIGFsaWduPSJjZW50
ZXIiPkEgbW9kZXJuIGxvYWQgdGVzdGluZyB0b29sIGZvciBkZXZlbG9wZXJz
IGFuZCB0ZXN0ZXJzIGluIHRoZSBEZXZPcHMgZXJhLjwvcD4KCjxwIGFsaWdu
PSJjZW50ZXIiPgogIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9sb2Fk
aW1wYWN0L2s2L3JlbGVhc2VzIj48aW1nIHNyYz0iaHR0cHM6Ly9pbWcuc2hp
ZWxkcy5pby9naXRodWIvcmVsZWFzZS9sb2FkaW1wYWN0L2s2LnN2ZyIgYWx0
PSJHaXRodWIgcmVsZWFzZSI+PC9hPgogIDxhIGhyZWY9Imh0dHBzOi8vY2ly
Y2xlY2kuY29tL2doL2xvYWRpbXBhY3QvazYvdHJlZS9tYXN0ZXIiPjxpbWcg
c3JjPSJodHRwczovL2ltZy5zaGllbGRzLmlvL2NpcmNsZWNpL3Byb2plY3Qv
Z2l0aHViL2xvYWRpbXBhY3QvazYvbWFzdGVyLnN2ZyIgYWx0PSJCdWlsZCBz
dGF0dXMiPjwvYT4KICA8YSBocmVmPSJodHRwczovL2dvcmVwb3J0Y2FyZC5j
b20vcmVwb3J0L2dpdGh1Yi5jb20vbG9hZGltcGFjdC9rNiI+PGltZyBzcmM9
Imh0dHBzOi8vZ29yZXBvcnRjYXJkLmNvbS9iYWRnZS9naXRodWIuY29tL2xv
YWRpbXBhY3QvazYiIGFsdD0iR28gUmVwb3J0IENhcmQiPjwvYT4KICA8YSBo
cmVmPSJodHRwczovL2NvZGVjb3YuaW8vZ2gvbG9hZGltcGFjdC9rNiI+PGlt
ZyBzcmM9Imh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vY29kZWNvdi9jL2dpdGh1
Yi9sb2FkaW1wYWN0L2s2L21hc3Rlci5zdmciIGFsdD0iQ29kZWNvdiBicmFu
Y2giPjwvYT4KICA8YnI+CiAgPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNv
bS9rNl9pbyI+PGltZyBzcmM9Imh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFk
Z2UvdHdpdHRlci1AazZfaW8tNTVhY2VlLnN2ZyIgYWx0PSJAazZfaW8gb24g
VHdpdHRlciI+PC9hPgogIDxhIGhyZWY9Imh0dHBzOi8vazYuaW8vc2xhY2si
PjxpbWcgc3JjPSJodHRwczovL2ltZy5zaGllbGRzLmlvL2JhZGdlL1NsYWNr
LWs2LWZmNjliNC5zdmciIGFsdD0iU2xhY2sgY2hhbm5lbCI+PC9hPgo8L3A+
CjxwIGFsaWduPSJjZW50ZXIiPgogICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRo
dWIuY29tL2xvYWRpbXBhY3QvazYvcmVsZWFzZXMiPkRvd25sb2FkPC9hPiDC
twogICAgPGEgaHJlZj0iI2luc3RhbGwiPkluc3RhbGw8L2E+IMK3CiAgICA8
YSBocmVmPSJodHRwczovL2RvY3MuazYuaW8iPkRvY3VtZW50YXRpb248L2E+
IMK3CiAgICA8YSBocmVmPSJodHRwczovL2NvbW11bml0eS5rNi5pby8iPkNv
bW11bml0eTwvYT4KPC9wPgoKLS0tCgoqKms2KiogaXMgYSBtb2Rlcm4gbG9h
ZCB0ZXN0aW5nIHRvb2wsIGJ1aWxkaW5nIG9uIFtMb2FkIEltcGFjdF0oaHR0
cHM6Ly9sb2FkaW1wYWN0LmNvbS8pJ3MgeWVhcnMgb2YgZXhwZXJpZW5jZSBp
biB0aGUgbG9hZCBhbmQgcGVyZm9ybWFuY2UgdGVzdGluZyBpbmR1c3RyeS4g
SXQgcHJvdmlkZXMgYSBjbGVhbiwgYXBwcm9hY2hhYmxlIHNjcmlwdGluZyBB
UEksIFtsb2NhbF0oaHR0cHM6Ly9kb2NzLms2LmlvL2RvY3MvcnVubmluZy1r
NikgYW5kIFtjbG91ZCBleGVjdXRpb25dKGh0dHBzOi8vZG9jcy5rNi5pby9k
b2NzL2Nsb3VkLWV4ZWN1dGlvbiksIGZsZXhpYmxlIGNvbmZpZ3VyYXRpb24s
IHdpdGggY29tbWFuZCAmIGNvbnRyb2wgdGhyb3VnaCBDTEkgb3IgYSBbUkVT
VCBBUEldKGh0dHBzOi8vZG9jcy5rNi5pby9kb2NzL3Jlc3QtYXBpKS4KClRo
aXMgaXMgaG93IGxvYWQgdGVzdGluZyBzaG91bGQgbG9vayBpbiB0aGUgMjFz
dCBjZW50dXJ5LgoKPHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyB3aWR0aD0i
NjAwIiBzcmM9Imh0dHBzOi8vY2RuLnJhd2dpdC5jb20vbG9hZGltcGFjdC9r
Ni9tYXN0ZXIvZGVtby5zdmciPgo8L3A+CgpNZW51Ci0tLS0KCi0gW0ZlYXR1
cmVzXSgjZmVhdHVyZXMpCi0gW0luc3RhbGxdKCNpbnN0YWxsKQotIFtSdW5u
aW5nIGs2XSgjcnVubmluZy1rNikKLSBbT3ZlcnZpZXddKCNvdmVydmlldykK
LSBbTmVlZCBoZWxwIG9yIHdhbnQgdG8gY29udHJpYnV0ZT9dKCNuZWVkLWhl
bHAtb3Itd2FudC10by1jb250cmlidXRlKQoKRmVhdHVyZXMKLS0tLS0tLS0K
Ci0gKipTY3JpcHRpbmcgaW4gRVM2IEpTKio6IHN1cHBvcnQgZm9yIFttb2R1
bGVzXShodHRwczovL2RvY3MuazYuaW8vZG9jcy9tb2R1bGVzKSB0byBhaWQg
Y29kZSByZXVzYWJpbGl0eSBhY3Jvc3MgYW4gb3JnYW5pemF0aW9uCi0gKipF
dmVyeXRoaW5nIGFzIGNvZGUqKjogdGVzdCBsb2dpYyBhbmQgW2NvbmZpZ3Vy
YXRpb24gb3B0aW9uc10oaHR0cHM6Ly9kb2NzLms2LmlvL2RvY3Mvb3B0aW9u
cykgYXJlIGJvdGggaW4gSlMgZm9yIHZlcnNpb24gY29udHJvbCBmcmllbmRs
aW5lc3MKLSAqKkF1dG9tYXRpb24tZnJpZW5kbHkqKjogW2NoZWNrc10oaHR0
cHM6Ly9kb2NzLms2LmlvL2RvY3MvY2hlY2tzKSAobGlrZSBhc3NlcnRzKSBh
bmQgW3RocmVzaG9sZHNdKGh0dHBzOi8vZG9jcy5rNi5pby9kb2NzL3RocmVz
aG9sZHMpIGZvciBlYXN5IGFuZCBmbGV4aWJsZSBDSSBjb25maWd1cmF0aW9u
IQotIFsqKkhUVFAvMS4xKipdKGh0dHBzOi8vZG9jcy5rNi5pby9kb2NzL2h0
dHAtcmVxdWVzdHMpLCBbKipIVFRQLzIqKl0oaHR0cHM6Ly9kb2NzLms2Lmlv
L2RvY3MvaHR0cDIpIGFuZCBbKipXZWJTb2NrZXQqKl0oaHR0cHM6Ly9kb2Nz
Lms2LmlvL2RvY3Mvd2Vic29ja2V0cykgcHJvdG9jb2wgc3VwcG9ydAotICoq
VExTIGZlYXR1cmVzKio6IFtjbGllbnQgY2VydGlmaWNhdGVzXShodHRwczov
L2RvY3MuazYuaW8vZG9jcy9zc2wtdGxzLWNsaWVudC1jZXJ0aWZpY2F0ZXMp
LCBbY29uZmlndXJhYmxlIFNTTC9UTFMgdmVyc2lvbnMgYW5kIGNpcGhlcnNd
KGh0dHBzOi8vZG9jcy5rNi5pby9kb2NzL3NzbC10bHMtdmVyc2lvbi1hbmQt
Y2lwaGVyLXN1aXRlcykKLSAqKkJhdHRlcmllcyBpbmNsdWRlZCoqOiBbQ29v
a2llc10oaHR0cHM6Ly9kb2NzLms2LmlvL2RvY3MvY29va2llcyksIFtDcnlw
dG9dKGh0dHBzOi8vZG9jcy5rNi5pby9kb2NzL2s2Y3J5cHRvKSwgW0N1c3Rv
bSBtZXRyaWNzXShodHRwczovL2RvY3MuazYuaW8vZG9jcy9yZXN1bHQtbWV0
cmljcyNzZWN0aW9uLWN1c3RvbS1tZXRyaWNzKSwgW0VuY29kaW5nc10oaHR0
cHM6Ly9kb2NzLms2LmlvL2RvY3MvazZlbmNvZGluZyksIFtFbnZpcm9ubWVu
dCB2YXJpYWJsZXNdKGh0dHBzOi8vZG9jcy5rNi5pby9kb2NzL2Vudmlyb25t
ZW50LXZhcmlhYmxlcyksIEpTT04sIFtIVE1MIGZvcm1zXShodHRwczovL2Rv
Y3MuazYuaW8vZG9jcy93b3JraW5nLXdpdGgtaHRtbC1mb3JtcyksIFtmaWxl
c10oaHR0cHM6Ly9kb2NzLms2LmlvL2RvY3Mvb3Blbi1maWxlcGF0aC1tb2Rl
KSwgW2ZsZXhpYmxlIGV4ZWN1dGlvbiBjb250cm9sXShodHRwczovL2RvY3Mu
azYuaW8vZG9jcy9ydW5uaW5nLWs2I3NlY3Rpb24tc3RhZ2VzLXJhbXBpbmct
dXBkb3duLXZ1cyksIGFuZCBtb3JlLgotICoqQnVpbHQtaW4gSEFSIGNvbnZl
cnRlcioqOiByZWNvcmQgYnJvd3NlciBzZXNzaW9ucyBhcyBbYC5oYXJgIGZp
bGVzXShodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS8uaGFyKSBhbmQg
W2RpcmVjdGx5IGNvbnZlcnQgdGhlbSB0byBrNiBzY3JpcHRzXShodHRwczov
L2RvY3MuazYuaW8vZG9jcy9zZXNzaW9uLXJlY29yZGluZy1oYXItc3VwcG9y
dCkKLSAqKkZsZXhpYmxlIG1ldHJpY3Mgc3RvcmFnZSBhbmQgdmlzdWFsaXph
dGlvbioqOiBbSW5mbHV4REJdKGh0dHBzOi8vZG9jcy5rNi5pby9kb2NzL2lu
Zmx1eGRiLWdyYWZhbmEpICgrR3JhZmFuYSksIFtKU09OXShodHRwczovL2Rv
Y3MuazYuaW8vZG9jcy9yZXN1bHRzLW91dHB1dCNzZWN0aW9uLWpzb24tb3V0
cHV0KSBvciBbTG9hZCBJbXBhY3QgSW5zaWdodHNdKGh0dHBzOi8vZG9jcy5r
Ni5pby9kb2NzL2xvYWQtaW1wYWN0LWluc2lnaHRzKQotIFsqKkNsb3VkIGV4
ZWN1dGlvbioqXShodHRwczovL2RvY3MuazYuaW8vZG9jcy9jbG91ZC1leGVj
dXRpb24pIGFuZCBkaXN0cmlidXRlZCB0ZXN0cyBfKGN1cnJlbnRseSBvbmx5
IG9uIGluZnJhc3RydWN0dXJlIG1hbmFnZWQgYnkgW0xvYWQgSW1wYWN0XSho
dHRwczovL2xvYWRpbXBhY3QuY29tLyksIHdpdGggbmF0aXZlIGRpc3RyaWJ1
dGVkIGV4ZWN1dGlvbiBpbiBrNiBbcGxhbm5lZF0oaHR0cHM6Ly9naXRodWIu
Y29tL2xvYWRpbXBhY3QvazYvd2lraS9Sb2FkbWFwKSBmb3IgdGhlIG5lYXIg
ZnV0dXJlISlfCgpUaGVyZSdzIGV2ZW4gbW9yZSEgW1NlZSBhbGwgZmVhdHVy
ZXMgYXZhaWxhYmxlIGluIGs2Ll0oaHR0cHM6Ly9kb2NzLms2LmlvL2RvY3Mv
d2VsY29tZSkKCkluc3RhbGwKLS0tLS0tLQoKIyMjIE1hYwoKSW5zdGFsbCB3
aXRoIFtIb21lYnJld10oaHR0cHM6Ly9icmV3LnNoLykgYnkgcnVubmluZzoK
CmBgYGJhc2gKYnJldyBpbnN0YWxsIGs2CmBgYAoKIyMjIFdpbmRvd3MKCllv
dSBjYW4gbWFudWFsbHkgZG93bmxvYWQgYW5kIGluc3RhbGwgdGhlIFtvZmZp
Y2lhbCBgLm1zaWAgaW5zdGFsbGF0aW9uIHBhY2thZ2VdKGh0dHBzOi8vZGwu
YmludHJheS5jb20vbG9hZGltcGFjdC93aW5kb3dzL2s2LXYwLjI1LjEtYW1k
NjQubXNpKSBvciwgaWYgeW91IHVzZSB0aGUgW2Nob2NvbGF0ZXkgcGFja2Fn
ZSBtYW5hZ2VyXShodHRwczovL2Nob2NvbGF0ZXkub3JnLyksIGZvbGxvdyBb
dGhlc2UgaW5zdHJ1Y3Rpb25zXShodHRwczovL2JpbnRyYXkuY29tL3JlcG8v
YnVpbGRTZXR0aW5ncz9yZXBvUGF0aD0lMkZsb2FkaW1wYWN0JTJGY2hvY28p
IHRvIHNldCB1cCB0aGUgazYgcmVwb3NpdG9yeS4KCiMjIyBMaW51eAoKRm9y
IERlYmlhbi1iYXNlZCBMaW51eCBkaXN0cmlidXRpb25zLCB5b3UgY2FuIGlu
c3RhbGwgazYgZnJvbSB0aGUgcHJpdmF0ZSBkZWIgcmVwbyBsaWtlIHRoaXM6
CgpgYGBiYXNoCnN1ZG8gYXB0LWtleSBhZHYgLS1rZXlzZXJ2ZXIgaGtwOi8v
a2V5c2VydmVyLnVidW50dS5jb206ODAgLS1yZWN2LWtleXMgMzc5Q0UxOTJE
NDAxQUI2MQplY2hvICJkZWIgaHR0cHM6Ly9kbC5iaW50cmF5LmNvbS9sb2Fk
aW1wYWN0L2RlYiBzdGFibGUgbWFpbiIgfCBzdWRvIHRlZSAtYSAvZXRjL2Fw
dC9zb3VyY2VzLmxpc3QKc3VkbyBhcHQtZ2V0IHVwZGF0ZQpzdWRvIGFwdC1n
ZXQgaW5zdGFsbCBrNgpgYGAKCkFuZCBmb3IgcnBtLWJhc2VkIG9uZXMgbGlr
ZSBGZWRvcmEgYW5kIENlbnRPUzoKCmBgYGJhc2gKd2dldCBodHRwczovL2Jp
bnRyYXkuY29tL2xvYWRpbXBhY3QvcnBtL3JwbSAtTyBiaW50cmF5LWxvYWRp
bXBhY3QtcnBtLnJlcG8Kc3VkbyBtdiBiaW50cmF5LWxvYWRpbXBhY3QtcnBt
LnJlcG8gL2V0Yy95dW0ucmVwb3MuZC8Kc3VkbyBkbmYgaW5zdGFsbCBrNiAg
ICMgdXNlIHl1bSBpbnN0ZWFkIG9mIGRuZiBmb3Igb2xkZXIgZGlzdHJvcwpg
YGAKCiMjIyBEb2NrZXIKCmBgYGJhc2gKZG9ja2VyIHB1bGwgbG9hZGltcGFj
dC9rNgpgYGAKCiMjIyBQcmUtYnVpbHQgYmluYXJpZXMgJiBvdGhlciBwbGF0
Zm9ybXMKCklmIHRoZXJlIGlzbid0IGFuIG9mZmljaWFsIHBhY2thZ2UgZm9y
IHlvdXIgb3BlcmF0aW5nIHN5c3RlbSBvciBhcmNoaXRlY3R1cmUsIG9yIGlm
IHlvdSBkb24ndCB3YW50IHRvIGluc3RhbGwgYSBjdXN0b20gcmVwb3NpdG9y
eSwgeW91IGNhbiBlYXNpbHkgZ3JhYiBhIHByZS1idWlsdCBiaW5hcnkgZnJv
bSBbdGhlIEdpdEh1YiBSZWxlYXNlcyBwYWdlXShodHRwczovL2dpdGh1Yi5j
b20vbG9hZGltcGFjdC9rNi9yZWxlYXNlcykuIE9uY2UgeW91IGRvd25sb2Fk
IGFuZCB1bnBhY2sgdGhlIHJlbGVhc2UsIHlvdSBjYW4gb3B0aW9uYWxseSBj
b3B5IHRoZSBgazZgIGJpbmFyeSBpdCBjb250YWlucyBzb21ld2hlcmUgaW4g
eW91ciBgUEFUSGAsIHNvIHlvdSBhcmUgYWJsZSB0byBydW4gazYgZnJvbSBh
bnkgbG9jYXRpb24gb24geW91ciBzeXN0ZW0uCgojIyMgQnVpbGQgZnJvbSBz
b3VyY2UKCms2IGlzIHdyaXR0ZW4gaW4gR28sIHNvIGl0J3MganVzdCBhIHNp
bmdsZSBzdGF0aWNhbGx5LWxpbmtlZCBleGVjdXRhYmxlIGFuZCB2ZXJ5IGVh
c3kgdG8gYnVpbGQgYW5kIGRpc3RyaWJ1dGUuIFRvIGJ1aWxkIGZyb20gc291
cmNlIHlvdSBuZWVkICoqW0dpdF0oaHR0cHM6Ly9naXQtc2NtLmNvbS9kb3du
bG9hZHMpKiogYW5kICoqW0dvXShodHRwczovL2dvbGFuZy5vcmcvZG9jL2lu
c3RhbGwpKiogKDEuMTEgb3IgbmV3ZXIpLiBGb2xsb3cgdGhlc2UgaW5zdHJ1
Y3Rpb25zOgoKLSBSdW4gYGdvIGdldCBnaXRodWIuY29tL2xvYWRpbXBhY3Qv
azZgIHdoaWNoIHdpbGw6CiAgLSBnaXQgY2xvbmUgdGhlIHJlcG8gYW5kIHB1
dCB0aGUgc291cmNlIGluIGAkR09QQVRIL3NyYy9naXRodWIuY29tL2xvYWRp
bXBhY3QvazZgCiAgLSBidWlsZCBhIGBrNmAgYmluYXJ5IGFuZCBwdXQgaXQg
aW4gYCRHT1BBVEgvYmluYAotIE1ha2Ugc3VyZSB5b3UgaGF2ZSBgJEdPUEFU
SC9iaW5gIGluIHlvdXIgYFBBVEhgIChvciBjb3B5IHRoZSBgazZgIGJpbmFy
eSBzb21ld2hlcmUgaW4geW91ciBgUEFUSGApLCBzbyB5b3UgYXJlIGFibGUg
dG8gcnVuIGs2IGZyb20gYW55IGxvY2F0aW9uLgotIFRhZGEsIHlvdSBjYW4g
bm93IHJ1biBrNiB1c2luZyBgazYgcnVuIHNjcmlwdC5qc2AKClJ1bm5pbmcg
azYKLS0tLS0tLS0tLQoKazYgd29ya3Mgd2l0aCB0aGUgY29uY2VwdCBvZiAq
KnZpcnR1YWwgdXNlcnMqKiAoVlVzKSB0aGF0IGV4ZWN1dGUgc2NyaXB0cyAt
IHRoZXkncmUgZXNzZW50aWFsbHkgZ2xvcmlmaWVkLCBwYXJhbGxlbCBgd2hp
bGUodHJ1ZSlgIGxvb3BzLiBTY3JpcHRzIGFyZSB3cml0dGVuIHVzaW5nIEph
dmFTY3JpcHQsIGFzIEVTNiBtb2R1bGVzLCB3aGljaCBhbGxvd3MgeW91IHRv
IGJyZWFrIGxhcmdlciB0ZXN0cyBpbnRvIHNtYWxsZXIgYW5kIG1vcmUgcmV1
c2FibGUgcGllY2VzLCBtYWtpbmcgaXQgZWFzeSB0byBzY2FsZSB0ZXN0cyBh
Y3Jvc3MgYW4gb3JnYW5pemF0aW9uLgoKU2NyaXB0cyBtdXN0IGNvbnRhaW4s
IGF0IHRoZSB2ZXJ5IGxlYXN0LCBhbiBleHBvcnRlZCBgZGVmYXVsdGAgZnVu
Y3Rpb24gLSB0aGlzIGRlZmluZXMgdGhlIGVudHJ5IHBvaW50IGZvciB5b3Vy
IFZVcywgc2ltaWxhciB0byB0aGUgYG1haW4oKWAgZnVuY3Rpb24gaW4gbWFu
eSBsYW5ndWFnZXMuIExldCdzIGNyZWF0ZSBhIHZlcnkgc2ltcGxlIHNjcmlw
dCB0aGF0IG1ha2VzIGFuIEhUVFAgR0VUIHJlcXVlc3QgdG8gYSB0ZXN0IHdl
YnNpdGU6CgpgYGBqcwppbXBvcnQgaHR0cCBmcm9tICJrNi9odHRwIjsKCmV4
cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkgewogICAgbGV0IHJlc3BvbnNlID0g
aHR0cC5nZXQoImh0dHBzOi8vdGVzdC5sb2FkaW1wYWN0LmNvbSIpOwp9Owpg
YGAKClRoZSBzY3JpcHQgZGV0YWlscyBhbmQgaG93IHdlIGNhbiBleHRlbmQg
YW5kIGNvbmZpZ3VyZSBpdCB3aWxsIGJlIGV4cGxhaW5lZCBiZWxvdywgYnV0
IGZvciBub3cgc2ltcGx5IHNhdmUgdGhlIGFib3ZlIHNuaXBwZXQgYXMgYSBg
c2NyaXB0LmpzYCBmaWxlIHNvbWV3aGVyZSBvbiB5b3VyIHN5c3RlbS4gQXNz
dW1pbmcgdGhhdCB5b3UndmUgW2luc3RhbGxlZCBrNl0oI2luc3RhbGwpIGNv
cnJlY3RseSwgb24gTGludXggYW5kIE1hYyB5b3UgY2FuIHJ1biB0aGUgc2F2
ZWQgc2NyaXB0IGJ5IGV4ZWN1dGluZyBgazYgcnVuIHNjcmlwdC5qc2AgZnJv
bSB0aGUgc2FtZSBmb2xkZXIuIEZvciBXaW5kb3dzIHRoZSBjb21tYW5kIGlz
IGFsbW9zdCB0aGUgc2FtZSAtIGBrNi5leGUgcnVuIHNjcmlwdC5qc2AuCgpJ
ZiB5b3UgZGVjaWRlIHRvIHVzZSB0aGUgW2s2IGRvY2tlciBpbWFnZV0oaHR0
cHM6Ly9odWIuZG9ja2VyLmNvbS9yL2xvYWRpbXBhY3QvazYvKSwgdGhlIGNv
bW1hbmQgd2lsbCBiZSBzbGlnaHRseSBkaWZmZXJlbnQuIEluc3RlYWQgb2Yg
cGFzc2luZyB0aGUgc2NyaXB0IGZpbGVuYW1lIHRvIGs2LCBhIGRhc2ggaXMg
dXNlZCB0byBpbnN0cnVjdCBrNiB0byByZWFkIHRoZSBzY3JpcHQgY29udGVu
dHMgZGlyZWN0bHkgdmlhIHRoZSBzdGFuZGFyZCBpbnB1dC4gVGhpcyBhbGxv
d3MgdXMgdG8gdG8gYXZvaWQgbWVzc2luZyB3aXRoIGRvY2tlciB2b2x1bWVz
IGZvciBzdWNoIGEgc2ltcGxlIHNpbmdsZS1maWxlIHNjcmlwdCwgZ3JlYXRs
eSBzaW1wbGlmeWluZyB0aGUgZG9ja2VyIGNvbW1hbmQ6IGBkb2NrZXIgcnVu
IC1pIGxvYWRpbXBhY3QvazYgcnVuIC0gPHNjcmlwdC5qc2AuCgpJbiBzb21l
IHNpdHVhdGlvbnMgaXQgbWF5IGFsc28gYmUgdXNlZnVsIHRvIGV4ZWN1dGUg
cmVtb3RlIHNjcmlwdHMuIFlvdSBjYW4gZG8gdGhhdCB3aXRoIEhUVFAqKlMq
KiBVUkxzIGluIGs2IGJ5IFtpbXBvcnRpbmcgdGhlbV0oaHR0cHM6Ly9kb2Nz
Lms2LmlvL2RvY3MvbW9kdWxlcyNzZWN0aW9uLXJlbW90ZS1tb2R1bGVzKSBp
biB0aGUgc2NyaXB0IHZpYSB0aGVpciBVUkwgb3Igc2ltcGx5IHNwZWNpZnlp
bmcgdGhlaXIgVVJMIGluIHRoZSBDTEkgY29tbWFuZDogYGs2IHJ1biBnaXRo
dWIuY29tL2xvYWRpbXBhY3QvazYvc2FtcGxlcy9odHRwXzIuanNgIChrNiAi
a25vd3MiIGEgYml0IGFib3V0IGdpdGh1YiBhbmQgY2RuanMgVVJMcywgc28g
dGhpcyBjb21tYW5kIGlzIGFjdHVhbGx5IHNob3J0aGFuZCBmb3IgYGs2IHJ1
biByYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2xvYWRpbXBhY3QvazYvbWFz
dGVyL3NhbXBsZXMvaHR0cF8yLmpzYCkKCkZvciBtb3JlIGluZm9ybWF0aW9u
IG9uIGhvdyB0byBnZXQgc3RhcnRlZCBydW5uaW5nIGs2LCBwbGVhc2UgbG9v
ayBhdCB0aGUgW1J1bm5pbmcgazZdKGh0dHBzOi8vZG9jcy5rNi5pby9kb2Nz
L3J1bm5pbmctazYpIGRvY3VtZW50YXRpb24gcGFnZS4gSWYgeW91IHdhbnQg
dG8ga25vdyBtb3JlIGFib3V0IG1ha2luZyBhbmQgbWVhc3VyaW5nIEhUVFAg
cmVxdWVzdHMgd2l0aCBrNiwgdGFrZSBhIGxvb2sgW2hlcmVdKGh0dHBzOi8v
ZG9jcy5rNi5pby9kb2NzL2h0dHAtcmVxdWVzdHMpIGFuZCBbaGVyZV0oaHR0
cHM6Ly9kb2NzLms2LmlvL2RvY3MvazZodHRwKS4gQW5kIGZvciBpbmZvcm1h
dGlvbiBhYm91dCB0aGUgY29tbWVyY2lhbCBMb2FkIEltcGFjdCBzZXJ2aWNl
cyBsaWtlIGRpc3RyaWJ1dGVkIGNsb3VkIGV4ZWN1dGlvbiAodGhlIGBrNiBj
bG91ZGAgY29tbWFuZCkgb3IgSW5zaWdodHMgKGBrNiBydW4gLW8gY2xvdWRg
KSwgeW91IGNhbiB2aXNpdCBbbG9hZGltcGFjdC5jb21dKGh0dHBzOi8vbG9h
ZGltcGFjdC5jb20vKSBvciB2aWV3IHRoZSBbTG9hZCBJbXBhY3QgZG9jdW1l
bnRhdGlvbl0oaHR0cHM6Ly9zdXBwb3J0LmxvYWRpbXBhY3QuY29tLzQuMC8p
LgoKT3ZlcnZpZXcKLS0tLS0tLS0KCkluIHRoaXMgc2VjdGlvbiB3ZSdsbCBi
cmllZmx5IGV4cGxvcmUgc29tZSBvZiB0aGUgYmFzaWMgY29uY2VwdHMgYW5k
IHByaW5jaXBsZXMgb2YgaG93IGs2IHdvcmtzLiBJZiB5b3Ugd2FudCB0byBs
ZWFybiBtb3JlIGluLWRlcHRoIGFib3V0IHRoZSBrNiBzY3JpcHRpbmcgQVBJ
LCByZXN1bHRzIG91dHB1dCwgYW5kIGZlYXR1cmVzLCB5b3UgY2FuIHZpc2l0
IHRoZSBmdWxsIGs2IGRvY3VtZW50YXRpb24gd2Vic2l0ZSBhdCBbZG9jcy5r
Ni5pb10oaHR0cHM6Ly9kb2NzLms2LmlvKS4KCiMjIyBJbml0IGFuZCBWVSBz
dGFnZXMKCkVhcmxpZXIsIGluIHRoZSBbUnVubmluZyBrNl0oI3J1bm5pbmct
azYpIHNlY3Rpb24sIHdlIG1lbnRpb25lZCB0aGF0IHNjcmlwdHMgbXVzdCBj
b250YWluIGEgYGRlZmF1bHRgIGZ1bmN0aW9uLiAqIldoeSBub3QganVzdCBy
dW4gbXkgc2NyaXB0IG5vcm1hbGx5LCBmcm9tIHRvcCB0byBib3R0b20iKiwg
eW91IG1pZ2h0IGFzayAtIHRoZSBhbnN3ZXIgaXM6IHdlIGRvLCBidXQgY29k
ZSAqKmluc2lkZSoqIGFuZCAqKm91dHNpZGUqKiB5b3VyIGBkZWZhdWx0YCBm
dW5jdGlvbiBjYW4gZG8gZGlmZmVyZW50IHRoaW5ncy4KCkVhY2ggdmlydHVh
bCB1c2VyIChWVSkgZXhlY3V0ZXMgeW91ciBzY3JpcHQgaW4gYSBjb21wbGV0
ZWx5IHNlcGFyYXRlIEphdmFTY3JpcHQgcnVudGltZSwgcGFyYWxsZWwgdG8g
YWxsIG9mIHRoZSBvdGhlciBydW5uaW5nIFZVcy4gQ29kZSBpbnNpZGUgdGhl
IGBkZWZhdWx0YCBmdW5jdGlvbiBpcyBjYWxsZWQgX1ZVIGNvZGVfLCBhbmQg
aXMgcnVuIG92ZXIgYW5kIG92ZXIsIGZvciBhcyBsb25nIGFzIHRoZSB0ZXN0
IGlzIHJ1bm5pbmcuIENvZGUgb3V0c2lkZSBvZiB0aGUgYGRlZmF1bHRgIGZ1
bmN0aW9uIGlzIGNhbGxlZCBfaW5pdCBjb2RlXywgYW5kIGlzIHJ1biBvbmx5
IG9uY2UgcGVyIFZVLCB3aGVuIHRoYXQgVlUgaXMgaW5pdGlhbGl6ZWQuCgpW
VSBjb2RlIGNhbiBtYWtlIEhUVFAgYW5kIHdlYnNvY2tldCByZXF1ZXN0cywg
ZW1pdCBtZXRyaWNzLCBhbmQgZ2VuZXJhbGx5IGRvIGV2ZXJ5dGhpbmcgeW91
J2QgZXhwZWN0IGEgbG9hZCB0ZXN0IHRvIGRvLCB3aXRoIGEgZmV3IGltcG9y
dGFudCBleGNlcHRpb25zIC0geW91IGNhbid0IGxvYWQgYW55dGhpbmcgZnJv
bSB5b3VyIGxvY2FsIGZpbGVzeXN0ZW0sIG9yIGltcG9ydCBhbnkgb3RoZXIg
bW9kdWxlcy4gVGhpcyBhbGwgaGFzIHRvIGJlIGRvbmUgZnJvbSB0aGUgW2lu
aXQgY29kZV0oaHR0cHM6Ly9kb2NzLms2LmlvL2RvY3MvaW5pdC1jb250ZXh0
KS4KClRoZXJlIGFyZSB0d28gcmVhc29ucyBmb3IgdGhpcy4gVGhlIGZpcnN0
IGlzLCBvZiBjb3Vyc2U6IHBlcmZvcm1hbmNlLiBJZiB5b3UgcmVhZCBhIGZp
bGUgZnJvbSBkaXNrIG9uIGV2ZXJ5IHNpbmdsZSBzY3JpcHQgaXRlcmF0aW9u
LCBpdCdkIGJlIG5lZWRsZXNzbHkgc2xvdy4gRXZlbiBpZiB5b3UgY2FjaGUg
dGhlIGNvbnRlbnRzIG9mIHRoZSBmaWxlIGFuZCBhbnkgaW1wb3J0ZWQgbW9k
dWxlcywgaXQnZCBtZWFuIHRoZSAqZmlyc3QgcnVuKiBvZiB0aGUgc2NyaXB0
IHdvdWxkIGJlIG11Y2ggc2xvd2VyIHRoYW4gYWxsIHRoZSBvdGhlcnMuIFdv
cnNlIHlldCwgaWYgeW91IGhhdmUgYSBzY3JpcHQgdGhhdCBpbXBvcnRzIG9y
IGxvYWRzIHRoaW5ncyBiYXNlZCBvbiB0aGluZ3MgdGhhdCBjYW4gb25seSBi
ZSBrbm93biBhdCBydW50aW1lLCB5b3UnZCBnZXQgc2xvdyBpdGVyYXRpb25z
IHRocm93biBpbiBldmVyeSB0aW1lIHlvdSBsb2FkIHNvbWV0aGluZyBuZXcu
IFRoYXQncyBhbHNvIHRoZSByZWFzb24gd2h5IHdlIGluaXRpYWxpemUgKmFs
bCogbmVlZGVkIFZVcyBiZWZvcmUgYW55IG9mIHRoZW0gc3RhcnRzIHRoZSBh
Y3R1YWwgbG9hZCB0ZXN0IGJ5IGV4ZWN1dGluZyB0aGUgYGRlZmF1bHRgIGZ1
bmN0aW9uLgoKQnV0IHRoZXJlJ3MgYW5vdGhlciwgbW9yZSBpbnRlcmVzdGlu
ZyByZWFzb24uIEJ5IGZvcmNpbmcgYWxsIGltcG9ydHMgYW5kIGZpbGUgcmVh
ZHMgaW50byB0aGUgaW5pdCBjb250ZXh0LCB3ZSBkZXNpZ24gZm9yIGRpc3Ry
aWJ1dGVkIGV4ZWN1dGlvbi4gV2Uga25vdyB3aGljaCBmaWxlcyB3aWxsIGJl
IG5lZWRlZCwgc28gd2UgZGlzdHJpYnV0ZSBvbmx5IHRob3NlIGZpbGVzIHRv
IGVhY2ggbm9kZSBpbiB0aGUgY2x1c3Rlci4gV2Uga25vdyB3aGljaCBtb2R1
bGVzIHdpbGwgYmUgaW1wb3J0ZWQsIHNvIHdlIGNhbiBidW5kbGUgdGhlbSB1
cCBpbiBhbiBbYXJjaGl2ZV0oaHR0cHM6Ly9kb2NzLms2LmlvL2RvY3MvYXJj
aGl2ZXMtZm9yLWJ1bmRsaW5nLXNoYXJpbmctdGVzdCkgZnJvbSB0aGUgZ2V0
LWdvLiBBbmQsIHR5aW5nIGludG8gdGhlIHBlcmZvcm1hbmNlIHBvaW50IGFi
b3ZlLCB0aGUgb3RoZXIgbm9kZXMgZG9uJ3QgZXZlbiBuZWVkIHdyaXRhYmxl
IGZpbGUgc3lzdGVtcyAtIGV2ZXJ5dGhpbmcgY2FuIGJlIGtlcHQgaW4tbWVt
b3J5LgoKVGhpcyBtZWFucyB0aGF0IGlmIHlvdXIgc2NyaXB0IHdvcmtzIHdo
ZW4gaXQncyBleGVjdXRlZCB3aXRoIGBrNiBydW5gIGxvY2FsbHksIGl0IHNo
b3VsZCBhbHNvIHdvcmsgd2l0aG91dCBhbnkgbW9kaWZpY2F0aW9ucyBpbiBh
IGRpc3RyaWJ1dGVkIGV4ZWN1dGlvbiBlbnZpcm9ubWVudCBsaWtlIGBrNiBj
bG91ZGAgKHRoYXQgZXhlY3V0ZXMgaXQgaW4gdGhlIExvYWQgSW1wYWN0IGNs
b3VkIGluZnJhc3RydWN0dXJlKSBvciwgaW4gdGhlIGZ1dHVyZSwgd2l0aCB0
aGUgW3BsYW5uZWRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sb2FkaW1wYWN0L2s2
L3dpa2kvUm9hZG1hcCkgazYgbmF0aXZlIGNsdXN0ZXIgZXhlY3V0aW9uIG1v
ZGUuCgojIyMgU2NyaXB0IGV4ZWN1dGlvbgoKRm9yIHNpbXBsaWNpdHksIHVu
bGlrZSBtYW55IG90aGVyIEphdmFTY3JpcHQgcnVudGltZXMsIGEgbG90IG9m
IHRoZSBvcGVyYXRpb25zIGluIGs2IGFyZSBzeW5jaHJvbm91cy4gVGhhdCBt
ZWFucyB0aGF0LCBmb3IgZXhhbXBsZSwgdGhlIGBsZXQgcmVzcG9uc2UgPSBo
dHRwLmdldCgiaHR0cHM6Ly90ZXN0LmxvYWRpbXBhY3QuY29tIilgIGNhbGwg
ZnJvbSB0aGUgW1J1bm5pbmcgazZdKCNydW5uaW5nLWs2KSBleGFtcGxlIHNj
cmlwdCB3aWxsIGJsb2NrIHRoZSBWVSBleGVjdXRpb24gdW50aWwgdGhlIEhU
VFAgcmVxdWVzdCBpcyBjb21wbGV0ZWQsIHNhdmUgdGhlIFtyZXNwb25zZSBp
bmZvcm1hdGlvbl0oaHR0cHM6Ly9kb2NzLms2LmlvL2RvY3MvcmVzcG9uc2Ut
azZodHRwKSBpbiB0aGUgYHJlc3BvbnNlYCB2YXJpYWJsZSBhbmQgb25seSB0
aGVuIGNvbnRpbnVlIGV4ZWN1dGluZyB0aGUgcmVzdCBvZiB0aGUgc2NyaXB0
IC0gbm8gY2FsbGJhY2tzIGFuZCBwcm9taXNlcyBuZWVkZWQuCgpUaGlzIHNp
bXBsaWZpY2F0aW9uIHdvcmtzIGJlY2F1c2UgazYgaXNuJ3QganVzdCBhIHNp
bmdsZSBKYXZhU2NyaXB0IHJ1bnRpbWUuIEluc3RlYWQgZWFjaCBWVSBpbmRl
cGVuZGVudGx5IGV4ZWN1dGVzIHRoZSBzdXBwbGllZCBzY3JpcHQgaW4gaXRz
IG93biBzZXBhcmF0ZSBhbmQgc2VtaS1pc29sYXRlZCBKYXZhU2NyaXB0IHJ1
bnRpbWUsIGluIHBhcmFsbGVsIHRvIGFsbCBvZiB0aGUgb3RoZXIgcnVubmlu
ZyBWVXMuIFRoaXMgYWxsb3dzIHVzIHRvIGZ1bGx5IHV0aWxpemUgbW9kZXJu
IG11bHRpLWNvcmUgaGFyZHdhcmUsIHdoaWxlIGF0IHRoZSBzYW1lIHRpbWUg
bG93ZXJpbmcgdGhlIHNjcmlwdCBjb21wbGV4aXR5IGJ5IGhhdmluZyBtb3N0
bHkgc3luY2hyb25vdXMgZnVuY3Rpb25zLiBXaGVyZSBpdCBtYWtlcyBzZW5z
ZSwgd2UgYWxzbyBoYXZlIGluLVZVIHBhcmFsbGVsaXphdGlvbiBhcyB3ZWxs
LCBmb3IgZXhhbXBsZSB0aGUgW2BodHRwLmJhdGNoKClgXShodHRwczovL2Rv
Y3MuazYuaW8vZG9jcy9iYXRjaC1yZXF1ZXN0cykgZnVuY3Rpb24gKHdoaWNo
IGFsbG93cyBhIHNpbmdsZSBWVSB0byBtYWtlIG11bHRpcGxlIHNpbXVsdGFu
ZW91cyBIVFRQIHJlcXVlc3RzIGxpa2UgYSBicm93c2VyL3JlYWwgdXNlciB3
b3VsZCkgb3IgdGhlIFt3ZWJzb2NrZXRdKGh0dHBzOi8vZG9jcy5rNi5pby9k
b2NzL2s2LXdlYnNvY2tldC1hcGkpIHN1cHBvcnQuCgpBcyBhbiBhZGRlZCBi
b251cywgdGhlcmUncyBhbiBhY3R1YWwgW2BzbGVlcCgpYCBmdW5jdGlvbl0o
aHR0cHM6Ly9kb2NzLms2LmlvL2RvY3Mvc2xlZXAtdC0xKSEgQW5kIHlvdSBj
YW4gYWxzbyB1c2UgdGhlIFZVIHNlcGFyYXRpb24gdG8gcmV1c2UgZGF0YSBi
ZXR3ZWVuIGl0ZXJhdGlvbnMgKGkuZS4gZXhlY3V0aW9ucyBvZiB0aGUgYGRl
ZmF1bHRgIGZ1bmN0aW9uKSBpbiB0aGUgc2FtZSBWVToKYGBganMKdmFyIHZ1
TG9jYWxDb3VudGVyID0gMDsKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7
CiAgICB2dUxvY2FsQ291bnRlcisrOwp9CmBgYAoKIyMjIFNjcmlwdCBvcHRp
b25zIGFuZCBleGVjdXRpb24gY29udHJvbAoKU28gd2UndmUgbWVudGlvbmVk
IFZVcyBhbmQgaXRlcmF0aW9ucywgYnV0IGhvdyBhcmUgdGhvc2UgdGhpbmdz
IGNvbnRyb2xsZWQ/CgpCeSBkZWZhdWx0LCBpZiBub3RoaW5nIGlzIHNwZWNp
ZmllZCwgazYgcnVucyBhIHNjcmlwdCB3aXRoIG9ubHkgMSBWVSBhbmQgZm9y
IDEgaXRlcmF0aW9uIG9ubHkuIFVzZWZ1bCBmb3IgZGVidWdnaW5nLCBidXQg
dXN1YWxseSBub3QgdmVyeSB1c2VmdWwgd2hlbiBkb2luZyBsb2FkIHRlc3Rp
bmcuIEZvciBhY3R1YWwgc2NyaXB0IGV4ZWN1dGlvbiBpbiBhIGxvYWQgdGVz
dCwgazYgb2ZmZXJzIGEgbG90IG9mIGZsZXhpYmlsaXR5IC0gdGhlcmUgYXJl
IGEgZmV3IGRpZmZlcmVudCBjb25maWd1cmF0aW9uIG1lY2hhbmlzbXMgeW91
IGNhbiB1c2UgdG8gc3BlY2lmeSBzY3JpcHQgb3B0aW9ucywgYW5kIHNldmVy
YWwgZGlmZmVyZW50IG9wdGlvbnMgdG8gY29udHJvbCB0aGUgbnVtYmVyIG9m
IFZVcyBhbmQgaG93IGxvbmcgeW91ciBzY3JpcHQgd2lsbCBiZSBleGVjdXRl
ZCwgYW1vbmcgW290aGVyIHRoaW5nc10oaHR0cHM6Ly9kb2NzLms2LmlvL2Rv
Y3Mvb3B0aW9ucykuCgpMZXQncyBzYXkgdGhhdCB5b3Ugd2FudCB0byBzcGVj
aWZ5IG51bWJlciBvZiBWVXMgaW4geW91ciBzY3JpcHQuIEluIG9yZGVyIG9m
IHByZWNlZGVuY2UsIHlvdSBjYW4gdXNlIGFueSBvZiB0aGUgZm9sbG93aW5n
IGNvbmZpZ3VyYXRpb24gbWVjaGFuaXNtcyB0byBkbyBpdDoKMS4gQ29tbWFu
ZC1saW5lIGZsYWdzOiBgazYgcnVuIC0tdnVzIDEwIHNjcmlwdC5qc2AsIG9y
IHZpYSB0aGUgc2hvcnQgYC11YCBmbGFnIHN5bnRheCBpZiB3ZSB3YW50IHRv
IHNhdmUgMyBrZXlzdHJva2VzIChgazYgcnVuIC11IDEwIHNjcmlwdC5qc2Ap
LgoyLiBFbnZpcm9ubWVudCB2YXJpYWJsZXM6IHNldHRpbmcgYEs2X1ZVUz0y
MGAgYmVmb3JlIHlvdSBydW4gdGhlIHNjcmlwdCB3aXRoIGs2LiBFc3BlY2lh
bGx5IHVzZWZ1bCB3aGVuIHVzaW5nIHRoZSBbZG9ja2VyIGs2IGltYWdlXSho
dHRwczovL2h1Yi5kb2NrZXIuY29tL3IvbG9hZGltcGFjdC9rNi8pIGFuZCB3
aGVuIHJ1bm5pbmcgaW4gY29udGFpbmVyaXplZCBlbnZpcm9ubWVudHMgbGlr
ZSBLdWJlcm5ldGVzLgozLiBZb3VyIHNjcmlwdCBjYW4gYGV4cG9ydGAgYW4g
YG9wdGlvbnNgIG9iamVjdCB0aGF0IGs2IHJlYWRzIGFuZCB1c2VzIHRvIHNl
dCBhbnkgb3B0aW9ucyB5b3Ugd2FudDsgZm9yIGV4YW1wbGUsIHNldHRpbmcg
VlVzIHdvdWxkIGxvb2sgbGlrZSB0aGlzOgogICAgYGBganMKICAgIGV4cG9y
dCBsZXQgb3B0aW9ucyA9IHsKICAgICAgICB2dXM6IDMwLAogICAgfTsKICAg
IGV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkgeyAvKiAuLi4gZG8gd2hhdGV2
ZXIgLi4uICovIH0KICAgIGBgYAogICAgVGhpcyBmdW5jdGlvbmFsaXR5IGlz
IHZlcnkgdXNlZnVsLCBiZWNhdXNlIGhlcmUgeW91IGhhdmUgYWNjZXNzIHRv
IGtleS12YWx1ZSBbZW52aXJvbm1lbnQgdmFyaWFibGVzXShodHRwczovL2Rv
Y3MuazYuaW8vZG9jcy9lbnZpcm9ubWVudC12YXJpYWJsZXMpIHRoYXQgazYg
ZXhwb3NlcyB0byB0aGUgc2NyaXB0IHZpYSB0aGUgZ2xvYmFsIGBfX0VOVmAg
b2JqZWN0LCBzbyB5b3UgY2FuIHVzZSB0aGUgZnVsbCBwb3dlciBvZiBKYXZh
U2NyaXB0IHRvIGRvIHRoaW5ncyBsaWtlOgogICAgYGBganMKICAgIGlmIChf
X0VOVi5zY3JpcHRfc2NlbmFyaW8gPT0gInN0YWdpbmciKSB7CiAgICAgICAg
ZXhwb3J0IGxldCBvcHRpb25zID0geyAvKiBmaXJzdCBzZXQgb2Ygb3B0aW9u
cyAqLyB9OwogICAgfSBlbHNlIHsKICAgICAgICBleHBvcnQgbGV0IG9wdGlv
bnMgPSB7IC8qIHNlY29uZCBzZXQgb2Ygb3B0aW9ucyAqLyB9OwogICAgfQog
ICAgYGBgCiAgICBPciBhbnkgdmFyaWF0aW9uIG9mIHRoZSBhYm92ZSwgbGlr
ZSBpbXBvcnRpbmcgZGlmZmVyZW50IGNvbmZpZyBmaWxlcywgZXRjLiBBbHNv
LCBoYXZpbmcgbW9zdCBvZiB0aGUgc2NyaXB0IGNvbmZpZ3VyYXRpb24gcmln
aHQgbmV4dCB0byB0aGUgc2NyaXB0IGNvZGUgbWFrZXMgazYgc2NyaXB0cyB2
ZXJ5IGVhc2lseSB2ZXJzaW9uLWNvbnRyb2xsYWJsZS4KCjQuIEEgZ2xvYmFs
IEpTT04gY29uZmlnLiBCeSBkZWZhdWx0IGs2IGxvb2tzIGZvciBpdCBpbiB0
aGUgY29uZmlnIGhvbWUgZm9sZGVyIG9mIHRoZSBjdXJyZW50IHVzZXIgKE9T
LWRlcGVuZGVudCwgZm9yIExpbnV4L0JTRHMgazYgd2lsbCBsb29rIGZvciBg
Y29uZmlnLmpzb25gIGluc2lkZSBvZiBgJHtIT01FfS8uY29uZmlnL2xvYWRp
bXBhY3QvazZgKSwgdGhvdWdoIHRoYXQgY2FuIGJlIG1vZGlmaWVkIHdpdGgg
dGhlIGAtLWNvbmZpZ2AvYC1jYCBDTEkgZmxhZy4KSXQgdXNlcyB0aGUgc2Ft
ZSBvcHRpb24ga2V5cyBhcyB0aGUgZXhwb3J0ZWQgYG9wdGlvbnNgIGZyb20g
dGhlIHNjcmlwdCBmaWxlLCBzbyB3ZSBjYW4gc2V0IHRoZSBWVXMgYnkgaGF2
aW5nIGBjb25maWcuanNvbmAgY29udGFpbiBgeyAidnVzIjogMSB9YC4gQWx0
aG91Z2ggaXQgcmFyZWx5IG1ha2VzIHNlbnNlIHRvIHNldCB0aGUgbnVtYmVy
IG9mIFZVcyB0aGVyZSwgdGhlIGdsb2JhbCBjb25maWcgZmlsZSBpcyBtdWNo
IG1vcmUgdXNlZnVsIGZvciBzdG9yaW5nIHRoaW5ncyBsaWtlIGxvZ2luIGNy
ZWRlbnRpYWxzIGZvciB0aGUgZGlmZmVyZW50IFtvdXRwdXRzXSgjb3V0cHV0
cyksIGFzIHVzZWQgYnkgdGhlIGBrNiBsb2dpbmAgc3ViY29tbWFuZC4uLgoK
Q29uZmlndXJhdGlvbiBtZWNoYW5pc21zIGRvIGhhdmUgYW4gb3JkZXIgb2Yg
cHJlY2VkZW5jZS4gQXMgcHJlc2VudGVkLCBvcHRpb25zIGF0IHRoZSB0b3Ag
b2YgdGhlIGxpc3QgY2FuIG92ZXJyaWRlIGNvbmZpZ3VyYXRpb24gbWVjaGFu
aXNtcyB0aGF0IGFyZSBzcGVjaWZpZWQgbG93ZXIgaW4gdGhlIGxpc3QuIElm
IHdlIHVzZWQgYWxsIG9mIHRoZSBhYm92ZSBleGFtcGxlcyBmb3Igc2V0dGlu
ZyB0aGUgbnVtYmVyIG9mIFZVcywgd2Ugd291bGQgZW5kIHVwIHdpdGggMTAg
VlVzLCBzaW5jZSB0aGUgQ0xJIGZsYWdzIGhhdmUgdGhlIGhpZ2hlc3QgcHJp
b3JpdHkuIEFsc28gcGxlYXNlIG5vdGUgdGhhdCBub3QgYWxsIG9mIHRoZSBh
dmFpbGFibGUgb3B0aW9ucyBhcmUgY29uZmlndXJhYmxlIHZpYSBhbGwgZGlm
ZmVyZW50IG1lY2hhbmlzbXMgLSBzb21lIG9wdGlvbnMgbWF5IGJlIGltcHJh
Y3RpY2FsIHRvIHNwZWNpZnkgdmlhIHNpbXBsZSBzdHJpbmdzIChzbyBubyBD
TEkvZW52aXJvbm1lbnQgdmFyaWFibGVzKSwgd2hpbGUgb3RoZXIgcmFyZWx5
LXVzZWQgb25lcyBtYXkgYmUgaW50ZW50aW9uYWxseSBleGNsdWRlZCBmcm9t
IHRoZSBDTEkgZmxhZ3MgdG8gYXZvaWQgY2x1dHRlciAtIHJlZmVyIHRvIFtv
cHRpb25zIGRvY3NdKGh0dHBzOi8vZG9jcy5rNi5pby9kb2NzL29wdGlvbnMp
IGZvciBtb3JlIGluZm9ybWF0aW9uLgoKQXMgc2hvd24gYWJvdmUsIHRoZXJl
IGFyZSBzZXZlcmFsIHdheXMgdG8gY29uZmlndXJlIHRoZSBudW1iZXIgb2Yg
c2ltdWx0YW5lb3VzIHZpcnR1YWwgdXNlcnMgazYgd2lsbCBsYXVuY2guIFRo
ZXJlIGFyZSBhbHNvIGRpZmZlcmVudCB3YXlzIHRvIHNwZWNpZnkgaG93IGxv
bmcgdGhvc2UgdmlydHVhbCB1c2VycyB3aWxsIGJlIHJ1bm5pbmcuIEZvciBz
aW1wbGUgdGVzdHMgeW91IGNhbjoKLSBTZXQgdGhlIHRlc3QgZHVyYXRpb24g
YnkgdGhlIGAtLWR1cmF0aW9uYC9gLWRgIENMSSBmbGFnIChvciB0aGUgYEs2
X0RVUkFUSU9OYCBlbnZpcm9ubWVudCB2YXJpYWJsZSBhbmQgdGhlIGBkdXJh
dGlvbmAgc2NyaXB0L0pTT04gb3B0aW9uKS4gRm9yIGVhc2Ugb2YgdXNlLCBg
ZHVyYXRpb25gIGlzIHNwZWNpZmllZCB3aXRoIGh1bWFuIHJlYWRhYmxlIHZh
bHVlcyBsaWtlIGAxaDMwbTEwc2AgLSBgazYgcnVuIC0tZHVyYXRpb24gMzBz
IHNjcmlwdC5qc2AsIGBrNiBjbG91ZCAtZCAxNW0xMHMgc2NyaXB0LmpzYCwg
YGV4cG9ydCBLNl9EVVJBVElPTj0xaGAsIGV0Yy4gSWYgc2V0IHRvIGAwYCwg
azYgd291bGRuJ3Qgc3RvcCBleGVjdXRpbmcgdGhlIHNjcmlwdCB1bmxlc3Mg
dGhlIHVzZXIgbWFudWFsbHkgc3RvcHMgaXQuCi0gU2V0IHRoZSB0b3RhbCBu
dW1iZXIgb2Ygc2NyaXB0IGl0ZXJhdGlvbnMgd2l0aCB0aGUgYC0taXRlcmF0
aW9uc2AvYC1pYCBDTEkgZmxhZyAob3IgdGhlIGBLNl9JVEVSQVRJT05TYCBl
bnZpcm9ubWVudCB2YXJpYWJsZSBhbmQgdGhlIGBpdGVyYXRpb25zYCBzY3Jp
cHQvSlNPTiBvcHRpb24pLiBrNiB3aWxsIHN0b3AgZXhlY3V0aW5nIHRoZSBz
Y3JpcHQgd2hlbmV2ZXIgdGhlICoqdG90YWwqKiBudW1iZXIgb2YgaXRlcmF0
aW9ucyAoaS5lLiB0aGUgbnVtYmVyIG9mIGl0ZXJhdGlvbnMgYWNyb3NzIGFs
bCBWVXMpIHJlYWNoZXMgdGhlIHNwZWNpZmllZCBudW1iZXIuIFNvIGlmIHlv
dSBoYXZlIGBrNiBydW4gLS1pdGVyYXRpb25zIDEwIC0tdnVzIDEwIHNjcmlw
dC5qc2AsIHRoZW4gZWFjaCBWVSB3b3VsZCBtYWtlIG9ubHkgYSBzaW5nbGUg
aXRlcmF0aW9uLgoKRm9yIG1vcmUgY29tcGxleCBjYXNlcywgeW91IGNhbiBz
cGVjaWZ5IGV4ZWN1dGlvbiBzdGFnZXMuIFRoZXkgYXJlIGEgY29tYmluYXRp
b24gb2YgYGR1cmF0aW9uLHRhcmdldC1WVXNgIHBhaXJzLiBUaGVzZSBwYWly
cyBpbnN0cnVjdCBrNiB0byBsaW5lYXJseSByYW1wIHVwLCByYW1wIGRvd24s
IG9yIHN0YXkgYXQgdGhlIG51bWJlciBvZiBWVXMgc3BlY2lmaWVkIGZvciB0
aGUgcGVyaW9kIHNwZWNpZmllZC4gRXhlY3V0aW9uIHN0YWdlcyBjYW4gYmUg
c2V0IHZpYSB0aGUgYHN0YWdlc2Agc2NyaXB0L0pTT04gb3B0aW9uIGFzIGFu
IGFycmF5IG9mIGB7IGR1cmF0aW9uOiAuLi4sIHRhcmdldDogLi4uIH1gIHBh
aXJzLCBvciB3aXRoIHRoZSBgLS1zdGFnZWAvYC1zYCBDTEkgZmxhZ3MgYW5k
IHRoZSBgSzZfU1RBR0VgIGVudmlyb25tZW50IHZhcmlhYmxlIHZpYSB0aGUg
YGR1cmF0aW9uOnRhcmdldCxkdXJhdGlvbjp0YXJnZXQuLi5gIHN5bnRheC4K
CkZvciBleGFtcGxlLCB0aGUgZm9sbG93aW5nIG9wdGlvbnMgd291bGQgaGF2
ZSBrNiBsaW5lYXJseSByYW1waW5nIHVwIGZyb20gNSB0byAxMCBWVXMgb3Zl
ciB0aGUgcGVyaW9kIG9mIDMgbWludXRlcyAoazYgc3RhcnRzIHdpdGggYHZ1
c2AgbnVtYmVyIG9mIFZVcywgb3IgMSBieSBkZWZhdWx0KSwgdGhlbiBzdGF5
aW5nIGZsYXQgYXQgMTAgVlVzIGZvciA1IG1pbnV0ZXMsIHRoZW4gcmFtcGlu
ZyB1cCBmcm9tIDEwIHRvIDM1IFZVcyBvdmVyIHRoZSBuZXh0IDEwIG1pbnV0
ZXMgYmVmb3JlIGZpbmFsbHkgcmFtcGluZyBkb3duIHRvIDAgVlVzIGZvciBh
bm90aGVyIDkwIHNlY29uZHMuCgpgYGBqcwpleHBvcnQgbGV0IG9wdGlvbnMg
PSB7CiAgICB2dXM6IDUsCiAgICBzdGFnZXM6IFsKICAgICAgICB7IGR1cmF0
aW9uOiAiM20iLCB0YXJnZXQ6IDEwIH0sCiAgICAgICAgeyBkdXJhdGlvbjog
IjVtIiwgdGFyZ2V0OiAxMCB9LAogICAgICAgIHsgZHVyYXRpb246ICIxMG0i
LCB0YXJnZXQ6IDM1IH0sCiAgICAgICAgeyBkdXJhdGlvbjogIjFtMzBzIiwg
dGFyZ2V0OiAwIH0sCiAgICBdCn07CmBgYApBbHRlcm5hdGl2ZWx5LCB5b3Ug
Y2FuIHVzZSB0aGUgQ0xJIGZsYWdzIGAtLXZ1cyA1IC0tc3RhZ2UgM206MTAs
NW06MTAsMTBtOjM1LDFtMzBzOjBgIG9yIHNldCB0aGUgZW52aXJvbm1lbnQg
dmFyaWFibGVzIGBLNl9WVVM9NSBLNl9TVEFHRT0iM206MTAsNW06MTAsMTBt
OjM1LDFtMzBzOjAiYCB0byBhY2hpZXZlIHRoZSBzYW1lIHJlc3VsdHMuCgpG
b3IgYSBjb21wbGV0ZSBsaXN0IG9mIHN1cHBvcnRlZCBrNiBvcHRpb25zLCBy
ZWZlciB0byB0aGUgZG9jdW1lbnRhdGlvbiBhdCBbZG9jcy5rNi5pby9kb2Nz
L29wdGlvbnNdKGh0dHBzOi8vZG9jcy5rNi5pby9kb2NzL29wdGlvbnMpLgoK
X0hpbnQ6IGJlc2lkZXMgYWNjZXNzaW5nIHRoZSBzdXBwbGllZCBbZW52aXJv
bm1lbnQgdmFyaWFibGVzXShodHRwczovL2RvY3MuazYuaW8vZG9jcy9lbnZp
cm9ubWVudC12YXJpYWJsZXMpIHRocm91Z2ggdGhlIGBfX0VOVmAgZ2xvYmFs
IG9iamVjdCBicmllZmx5IG1lbnRpb25lZCBhYm92ZSwgeW91IGNhbiBhbHNv
IHVzZSB0aGUgW2V4ZWN1dGlvbiBjb250ZXh0IHZhcmlhYmxlc10oaHR0cHM6
Ly9kb2NzLms2LmlvL2RvY3MvZXhlY3V0aW9uLWNvbnRleHQtdmFyaWFibGVz
KSBgX19WVWAgYW5kIGBfX0lURVJgIHRvIGFjY2VzcyB0aGUgY3VycmVudCBW
VSBudW1iZXIgYW5kIHRoZSBudW1iZXIgb2YgdGhlIGN1cnJlbnQgaXRlcmF0
aW9uICoqZm9yIHRoYXQgVlUqKi4gVGhlc2UgdmFyaWFibGVzIGNhbiBiZSB2
ZXJ5IHVzZWZ1bCBpZiB5b3Ugd2FudCBWVXMgdG8gZXhlY3V0ZSBkaWZmZXJl
bnQgc2NyaXB0cy9zY2VuYXJpb3Mgb3IgdG8gYWlkIGluIGdlbmVyYXRpbmcg
ZGlmZmVyZW50IGRhdGEgcGVyIFZVLiBgYGBodHRwLnBvc3QoImh0dHBzOi8v
c29tZS5leGFtcGxlLndlYnNpdGUvc2lnbnVwIiwge3VzZXJuYW1lOiBgdGVz
dHVzZXIke19fVlV9QHRlc3RzaXRlLmNvbWAsIC8qIC4uLiAqL30pYGBgXwoK
Rm9yIGV2ZW4gbW9yZSBjb21wbGV4IHNjZW5hcmlvcywgeW91IGNhbiB1c2Ug
dGhlIGs2IFtSRVNUIEFQSV0oaHR0cHM6Ly9kb2NzLms2LmlvL2RvY3MvcmVz
dC1hcGkpIGFuZCB0aGUgYGs2IHN0YXR1c2AsIGBrNiBzY2FsZWAsIGBrNiBw
YXVzZWAsIGBrNiByZXN1bWVgIENMSSBjb21tYW5kcyB0byBtYW51YWxseSBj
b250cm9sIGEgcnVubmluZyBrNiB0ZXN0LiBGb3IgW2Nsb3VkLWJhc2VkIHRl
c3RzXShodHRwczovL2RvY3MuazYuaW8vZG9jcy9jbG91ZC1leGVjdXRpb24p
LCBleGVjdXRlZCBvbiBMb2FkIEltcGFjdCdzIG1hbmFnZWQgaW5mcmFzdHJ1
Y3R1cmUgdmlhIHRoZSBgazYgY2xvdWRgIGNvbW1hbmQsIHlvdSBjYW4gYWxz
byBzcGVjaWZ5IHRoZSBWVSBkaXN0cmlidXRpb24gcGVyY2VudGFnZXMgZm9y
IGRpZmZlcmVudCBsb2FkIHpvbmVzIHdoZW4gZXhlY3V0aW5nIGxvYWQgdGVz
dHMsIGdpdmluZyB5b3Ugc2NhbGFibGUgYW5kIGdlb2dyYXBoaWNhbGx5LWRp
c3RyaWJ1dGVkIHRlc3QgZXhlY3V0aW9uLgoKCiMjIyBTZXR1cCBhbmQgdGVh
cmRvd24KCkJleW9uZCB0aGUgaW5pdCBjb2RlIGFuZCB0aGUgcmVxdWlyZWQg
VlUgc3RhZ2UgKGkuZS4gdGhlIGBkZWZhdWx0YCBmdW5jdGlvbiksIHdoaWNo
IGlzIGNvZGUgcnVuIGZvciBlYWNoIFZVLCBrNiBhbHNvIHN1cHBvcnRzIHRl
c3Qgd2lkZSBzZXR1cCBhbmQgdGVhcmRvd24gc3RhZ2VzLCBsaWtlIG1hbnkg
b3RoZXIgdGVzdGluZyBmcmFtZXdvcmtzIGFuZCB0b29scy4gVGhlIGBzZXR1
cGAgYW5kIGB0ZWFyZG93bmAgZnVuY3Rpb25zLCBsaWtlIHRoZSBgZGVmYXVs
dGAgZnVuY3Rpb24sIG5lZWQgdG8gYmUgYGV4cG9ydGBlZC4gQnV0IHVubGlr
ZSB0aGUgYGRlZmF1bHRgIGZ1bmN0aW9uLCBgc2V0dXBgIGFuZCBgdGVhcmRv
d25gIGFyZSBvbmx5IGNhbGxlZCBvbmNlIGZvciBhIHRlc3QgLSBgc2V0dXAo
KWAgaXMgY2FsbGVkIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIHRlc3QsIGFm
dGVyIHRoZSBpbml0IHN0YWdlIGJ1dCBiZWZvcmUgdGhlIFZVIHN0YWdlIChg
ZGVmYXVsdGAgZnVuY3Rpb24pLCBhbmQgYHRlYXJkb3duKClgIGlzIGNhbGxl
ZCBhdCB0aGUgZW5kIG9mIGEgdGVzdCwgYWZ0ZXIgdGhlIGxhc3QgVlUgaXRl
cmF0aW9uIChgZGVmYXVsdGAgZnVuY3Rpb24pIGhhcyBmaW5pc2hlZCBleGVj
dXRpbmcuIFRoaXMgaXMgYWxzbyBzdXBwb3J0ZWQgaW4gdGhlIGRpc3RyaWJ1
dGVkIFtjbG91ZCBleGVjdXRpb25dKGh0dHBzOi8vZG9jcy5rNi5pby9kb2Nz
L2Nsb3VkLWV4ZWN1dGlvbikgbW9kZSB2aWEgYGs2IGNsb3VkYC4KCmBgYGpz
CmV4cG9ydCBmdW5jdGlvbiBzZXR1cCgpIHsKICAgIHJldHVybiB7djogMX07
Cn0KCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGRhdGEpIHsKICAgIGNvbnNv
bGUubG9nKEpTT04uc3RyaW5naWZ5KGRhdGEpKTsKfQoKZXhwb3J0IGZ1bmN0
aW9uIHRlYXJkb3duKGRhdGEpIHsKICAgIGlmIChkYXRhLnYgIT0gMSkgewog
ICAgICAgIHRocm93IG5ldyBFcnJvcigiaW5jb3JyZWN0IGRhdGE6ICIgKyBK
U09OLnN0cmluZ2lmeShkYXRhKSk7CiAgICB9Cn0KYGBgCgpBIGNvcHkgb2Yg
d2hhdGV2ZXIgZGF0YSBgc2V0dXAoKWAgcmV0dXJucyB3aWxsIGJlIHBhc3Nl
ZCBhcyB0aGUgZmlyc3QgYXJndW1lbnQgdG8gZWFjaCBpdGVyYXRpb24gb2Yg
dGhlIGBkZWZhdWx0YCBmdW5jdGlvbiBhbmQgdG8gYHRlYXJkb3duKClgIGF0
IHRoZSBlbmQgb2YgdGhlIHRlc3QuIEZvciBtb3JlIGluZm9ybWF0aW9uIGFu
ZCBleGFtcGxlcywgcmVmZXIgdG8gdGhlIGs2IGRvY3MgW2hlcmVdKGh0dHBz
Oi8vZG9jcy5rNi5pby9kb2NzL3Rlc3QtbGlmZS1jeWNsZSNzZWN0aW9uLXNl
dHVwLWFuZC10ZWFyZG93bi1zdGFnZXMpLgoKCiMjIyBNZXRyaWNzLCB0YWdz
IGFuZCBncm91cHMKCkJ5IGRlZmF1bHQgazYgbWVhc3VyZXMgYW5kIGNvbGxl
Y3RzIGEgbG90IG9mIG1ldHJpY3MgYWJvdXQgdGhlIHRoaW5ncyB5b3VyIHNj
cmlwdHMgZG8gLSB0aGUgZHVyYXRpb24gb2YgZGlmZmVyZW50IHNjcmlwdCBp
dGVyYXRpb25zLCBob3cgbXVjaCBkYXRhIHdhcyBzZW50IGFuZCByZWNlaXZl
ZCwgaG93IG1hbnkgSFRUUCByZXF1ZXN0cyB3ZXJlIG1hZGUsIHRoZSBkdXJh
dGlvbiBvZiB0aG9zZSBIVFRQIHJlcXVlc3RzLCBhbmQgZXZlbiBob3cgbG9u
ZyBkaWQgdGhlIFRMUyBoYW5kc2hha2Ugb2YgYSBwYXJ0aWN1bGFyIEhUVFBT
IHJlcXVlc3QgdGFrZS4gVG8gc2VlIGEgc3VtbWFyeSBvZiB0aGVzZSBidWls
dC1pbiBtZXRyaWNzIGluIHRoZSBvdXRwdXQsIHlvdSBjYW4gcnVuIGEgc2lt
cGxlIGs2IHRlc3QsIGUuZy4gYGs2IHJ1biBnaXRodWIuY29tL2xvYWRpbXBh
Y3QvazYvc2FtcGxlcy9odHRwX2dldC5qc2AuIE1vcmUgaW5mb3JtYXRpb24g
YWJvdXQgdGhlIGRpZmZlcmVudCBidWlsdC1pbiBtZXRyaWNzIGNvbGxlY3Rl
ZCBieSBrNiAoYW5kIGhvdyBzb21lIG9mIHRoZW0gY2FuIGJlIGFjY2Vzc2Vk
IGZyb20gaW5zaWRlIG9mIHRoZSBzY3JpcHRzKSBpcyBhdmFpbGFibGUgaW4g
dGhlIGRvY3MgW2hlcmVdKGh0dHBzOi8vZG9jcy5rNi5pby9kb2NzL3Jlc3Vs
dC1tZXRyaWNzKS4KCms2IGFsc28gYWxsb3dzIHRoZSBjcmVhdGlvbiBvZiB1
c2VyLWRlZmluZWQgYENvdW50ZXJgLCBgR2F1Z2VgLCBgUmF0ZWAgYW5kIGBU
cmVuZGAgbWV0cmljcy4gVGhleSBjYW4gYmUgdXNlZCB0byBtb3JlIHByZWNp
c2VseSB0cmFjayBhbmQgbWVhc3VyZSBhIGN1c3RvbSBzdWJzZXQgb2YgdGhl
IHRoaW5ncyB0aGF0IGs2IG1lYXN1cmVzIGJ5IGRlZmF1bHQsIG9yIGFueXRo
aW5nIGVsc2UgdGhlIHVzZXIgd2FudHMsIGZvciBleGFtcGxlIHRyYWNraW5n
IG5vbi10aW1pbmcgaW5mb3JtYXRpb24gdGhhdCBpcyByZXR1cm5lZCBmcm9t
IHRoZSByZW1vdGUgc3lzdGVtLiBZb3UgY2FuIGZpbmQgbW9yZSBpbmZvcm1h
dGlvbiBhYm91dCB0aGVtIFtoZXJlXShodHRwczovL2RvY3MuazYuaW8vZG9j
cy9yZXN1bHQtbWV0cmljcyNzZWN0aW9uLWN1c3RvbS1tZXRyaWNzKSBhbmQg
YSBkZXNjcmlwdGlvbiBvZiB0aGVpciBBUElzIFtoZXJlXShodHRwczovL2Rv
Y3MuazYuaW8vZG9jcy9rNm1ldHJpY3MpLgoKRXZlcnkgbWVhc3VyZW1lbnQg
bWV0cmljIGluIGs2IGNvbWVzIHdpdGggYSBzZXQgb2Yga2V5LXZhbHVlIHRh
Z3MgYXR0YWNoZWQuIFNvbWUgb2YgdGhlbSBhcmUgYXV0b21hdGljYWxseSBh
ZGRlZCBieSBrNiAtIGZvciBleGFtcGxlIGEgcGFydGljdWxhciBgaHR0cF9y
ZXFfZHVyYXRpb25gIG1ldHJpYyBtYXkgaGF2ZSB0aGUgYG1ldGhvZD1HRVRg
LCBgc3RhdHVzPTIwMGAsIGB1cmw9aHR0cHM6Ly9sb2FkaW1wYWN0LmNvbWAs
IGV0Yy4gc3lzdGVtIHRhZ3MgYXR0YWNoZWQgdG8gaXQuIE90aGVycyBjYW4g
YmUgYWRkZWQgYnkgdXNlcnMgLSBnbG9iYWxseSBmb3IgYSB0ZXN0IHJ1biB2
aWEgdGhlIGB0YWdzYCBbb3B0aW9uXShodHRwczovL2RvY3MuazYuaW8vZG9j
cy9vcHRpb25zKSwgb3IgaW5kaXZpZHVhbGx5IGFzIGEgW3BhcmFtZXRlcl0o
aHR0cHM6Ly9kb2NzLms2LmlvL2RvY3MvcGFyYW1zLWs2aHR0cCkgaW4gYSBz
cGVjaWZpYyBIVFRQIHJlcXVlc3QsIHdlYnNvY2tldCBjb25uZWN0aW9uLCBg
dXNlck1ldHJpYy5BZGQoKWAgY2FsbCwgZXRjLgoKVGhlc2UgdGFncyBkb24n
dCBzaG93IGluIHRoZSBzaW1wbGUgc3VtbWFyeSBhdCB0aGUgZW5kIG9mIGEg
azYgdGVzdCAodW5sZXNzIHlvdSByZWZlcmVuY2UgdGhlbSBpbiBhIFt0aHJl
c2hvbGRdKCNjaGVja3MtYW5kLXRocmVzaG9sZHMpKSwgYnV0IHRoZXkgYXJl
IGludmFsdWFibGUgZm9yIGZpbHRlcmluZyBhbmQgaW52ZXN0aWdhdGluZyBr
NiB0ZXN0IHJlc3VsdHMgaWYgeW91IHVzZSBhbnkgb2YgdGhlIFtvdXRwdXRz
XSgjb3V0cHV0cykgbWVudGlvbmVkIGJlbG93LiBrNiBhbHNvIHN1cHBvcnRz
IHNpbXBsZSBoaWVyYXJjaGljYWwgZ3JvdXBzIGZvciBlYXNpZXIgY29kZSBh
bmQgcmVzdWx0IG9yZ2FuaXphdGlvbi4gWW91IGNhbiBmaW5kIG1vcmUgaW5m
b3JtYXRpb24gYWJvdXQgZ3JvdXBzIGFuZCBzeXN0ZW0gYW5kIHVzZXItZGVm
aW5lZCB0YWdzIFtoZXJlXShodHRwczovL2RvY3MuazYuaW8vZG9jcy90YWdz
LWFuZC1ncm91cHMpLgoKIyMjIENoZWNrcyBhbmQgdGhyZXNob2xkcwoKQ2hl
Y2tzIGFuZCB0aHJlc2hvbGRzIGFyZSBzb21lIG9mIHRoZSBrNiBmZWF0dXJl
cyB0aGF0IG1ha2UgaXQgdmVyeSBlYXN5IHRvIHVzZSBsb2FkIHRlc3RzIGxp
a2UgdW5pdCBhbmQgZnVuY3Rpb25hbCB0ZXN0cyBhbmQgaW50ZWdyYXRlIHRo
ZW0gaW4gYSBDSSAoY29udGludW91cyBpbnRlZ3JhdGlvbikgd29ya2Zsb3cu
CgpbQ2hlY2tzXShodHRwczovL2RvY3MuazYuaW8vZG9jcy9jaGVja3MpIGFy
ZSBzaW1pbGFyIHRvIGFzc2VydHMsIGJ1dCBkaWZmZXIgaW4gdGhhdCB0aGV5
IGRvbid0IGhhbHQgZXhlY3V0aW9uLiBJbnN0ZWFkIHRoZXkganVzdCBzdG9y
ZSB0aGUgcmVzdWx0IG9mIHRoZSBjaGVjaywgcGFzcyBvciBmYWlsLCBhbmQg
bGV0IHRoZSBzY3JpcHQgZXhlY3V0aW9uIGNvbnRpbnVlLiBDaGVja3MgYXJl
IGdyZWF0IGZvciBjb2RpZnlpbmcgYXNzZXJ0aW9ucyByZWxhdGluZyB0byBI
VFRQIHJlcXVlc3RzL3Jlc3BvbnNlcy4gRm9yIGV4YW1wbGUsIG1ha2luZyBz
dXJlIGFuIEhUVFAgcmVzcG9uc2UgY29kZSBpcyAyeHguCgpbVGhyZXNob2xk
c10oaHR0cHM6Ly9kb2NzLms2LmlvL2RvY3MvdGhyZXNob2xkcykgYXJlIGds
b2JhbCBwYXNzL2ZhaWwgY3JpdGVyaWEgdGhhdCBjYW4gYmUgdXNlZCB0byB2
ZXJpZnkgaWYgYW55IHJlc3VsdCBtZXRyaWMgaXMgd2l0aGluIGEgc3BlY2lm
aWVkIHJhbmdlLiBUaGV5IGNhbiBhbHNvIHJlZmVyZW5jZSBhIHN1YnNldCBv
ZiB2YWx1ZXMgaW4gYSBnaXZlbiBtZXRyaWMsIGJhc2VkIG9uIHRoZSB1c2Vk
IG1ldHJpYyB0YWdzLiBUaHJlc2hvbGRzIGFyZSBzcGVjaWZpZWQgaW4gdGhl
IG9wdGlvbnMgc2VjdGlvbiBvZiBhIGs2IHNjcmlwdC4gSWYgdGhleSBhcmUg
ZXhjZWVkZWQgZHVyaW5nIGEgdGVzdCBydW4sIGs2IHdvdWxkIGV4aXQgd2l0
aCBhIG5vbnplcm8gY29kZSBvbiB0ZXN0IGNvbXBsZXRpb24sIGFuZCBjYW4g
YWxzbyBvcHRpb25hbGx5IGFib3J0IHRoZSB0ZXN0IGVhcmx5LiBUaGlzIG1h
a2VzIHRocmVzaG9sZHMgaWRlYWxseSBzdWl0ZWQgYXMgY2hlY2tzIGluIGEg
Q0kgd29ya2Zsb3chCgpgYGBqcwppbXBvcnQgaHR0cCBmcm9tICJrNi9odHRw
IjsKaW1wb3J0IHsgY2hlY2ssIGdyb3VwLCBzbGVlcCB9IGZyb20gIms2IjsK
aW1wb3J0IHsgUmF0ZSB9IGZyb20gIms2L21ldHJpY3MiOwoKLy8gQSBjdXN0
b20gbWV0cmljIHRvIHRyYWNrIGZhaWx1cmUgcmF0ZXMKdmFyIGZhaWx1cmVS
YXRlID0gbmV3IFJhdGUoImNoZWNrX2ZhaWx1cmVfcmF0ZSIpOwoKLy8gT3B0
aW9ucwpleHBvcnQgbGV0IG9wdGlvbnMgPSB7CiAgICBzdGFnZXM6IFsKICAg
ICAgICAvLyBMaW5lYXJseSByYW1wIHVwIGZyb20gMSB0byA1MCBWVXMgZHVy
aW5nIGZpcnN0IG1pbnV0ZQogICAgICAgIHsgdGFyZ2V0OiA1MCwgZHVyYXRp
b246ICIxbSIgfSwKICAgICAgICAvLyBIb2xkIGF0IDUwIFZVcyBmb3IgdGhl
IG5leHQgMyBtaW51dGVzIGFuZCAzMCBzZWNvbmRzCiAgICAgICAgeyB0YXJn
ZXQ6IDUwLCBkdXJhdGlvbjogIjNtMzBzIiB9LAogICAgICAgIC8vIExpbmVh
cmx5IHJhbXAgZG93biBmcm9tIDUwIHRvIDAgNTAgVlVzIG92ZXIgdGhlIGxh
c3QgMzAgc2Vjb25kcwogICAgICAgIHsgdGFyZ2V0OiAwLCBkdXJhdGlvbjog
IjMwcyIgfQogICAgICAgIC8vIFRvdGFsIGV4ZWN1dGlvbiB0aW1lIHdpbGwg
YmUgfjUgbWludXRlcwogICAgXSwKICAgIHRocmVzaG9sZHM6IHsKICAgICAg
ICAvLyBXZSB3YW50IHRoZSA5NXRoIHBlcmNlbnRpbGUgb2YgYWxsIEhUVFAg
cmVxdWVzdCBkdXJhdGlvbnMgdG8gYmUgbGVzcyB0aGFuIDUwMG1zCiAgICAg
ICAgImh0dHBfcmVxX2R1cmF0aW9uIjogWyJwKDk1KTw1MDAiXSwKICAgICAg
ICAvLyBSZXF1ZXN0cyB3aXRoIHRoZSBzdGF0aWNBc3NldCB0YWcgc2hvdWxk
IGZpbmlzaCBldmVuIGZhc3RlcgogICAgICAgICJodHRwX3JlcV9kdXJhdGlv
bntzdGF0aWNBc3NldDp5ZXN9IjogWyJwKDk5KTwyNTAiXSwKICAgICAgICAv
LyBUaHJlc2hvbGRzIGJhc2VkIG9uIHRoZSBjdXN0b20gbWV0cmljIHdlIGRl
ZmluZWQgYW5kIHVzZSB0byB0cmFjayBhcHBsaWNhdGlvbiBmYWlsdXJlcwog
ICAgICAgICJjaGVja19mYWlsdXJlX3JhdGUiOiBbCiAgICAgICAgICAgIC8v
IEdsb2JhbCBmYWlsdXJlIHJhdGUgc2hvdWxkIGJlIGxlc3MgdGhhbiAxJQog
ICAgICAgICAgICAicmF0ZTwwLjAxIiwKICAgICAgICAgICAgLy8gQWJvcnQg
dGhlIHRlc3QgZWFybHkgaWYgaXQgY2xpbWJzIG92ZXIgNSUKICAgICAgICAg
ICAgeyB0aHJlc2hvbGQ6ICJyYXRlPD0wLjA1IiwgYWJvcnRPbkZhaWw6IHRy
dWUgfSwKICAgICAgICBdLAogICAgfSwKfTsKCi8vIE1haW4gZnVuY3Rpb24K
ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKCkgewogICAgbGV0IHJlc3BvbnNl
ID0gaHR0cC5nZXQoImh0dHBzOi8vdGVzdC5sb2FkaW1wYWN0LmNvbS8iKTsK
CiAgICAvLyBjaGVjaygpIHJldHVybnMgZmFsc2UgaWYgYW55IG9mIHRoZSBz
cGVjaWZpZWQgY29uZGl0aW9ucyBmYWlsCiAgICBsZXQgY2hlY2tSZXMgPSBj
aGVjayhyZXNwb25zZSwgewogICAgICAgICJodHRwMiBpcyB1c2VkIjogKHIp
ID0+IHIucHJvdG8gPT09ICJIVFRQLzIuMCIsCiAgICAgICAgInN0YXR1cyBp
cyAyMDAiOiAocikgPT4gci5zdGF0dXMgPT09IDIwMCwKICAgICAgICAiY29u
dGVudCBpcyBwcmVzZW50IjogKHIpID0+IHIuYm9keS5pbmRleE9mKCJXZWxj
b21lIHRvIHRoZSBMb2FkSW1wYWN0LmNvbSBkZW1vIHNpdGUhIikgIT09IC0x
LAogICAgfSk7CgogICAgLy8gV2UgcmV2ZXJzZSB0aGUgY2hlY2soKSByZXN1
bHQgc2luY2Ugd2Ugd2FudCB0byBjb3VudCB0aGUgZmFpbHVyZXMKICAgIGZh
aWx1cmVSYXRlLmFkZCghY2hlY2tSZXMpOwoKICAgIC8vIExvYWQgc3RhdGlj
IGFzc2V0cywgYWxsIHJlcXVlc3RzCiAgICBncm91cCgiU3RhdGljIEFzc2V0
cyIsIGZ1bmN0aW9uICgpIHsKICAgICAgICAvLyBFeGVjdXRlIG11bHRpcGxl
IHJlcXVlc3RzIGluIHBhcmFsbGVsIGxpa2UgYSBicm93c2VyLCB0byBmZXRj
aCBzb21lIHN0YXRpYyByZXNvdXJjZXMKICAgICAgICBsZXQgcmVzcHMgPSBo
dHRwLmJhdGNoKFsKICAgICAgICAgICAgWyJHRVQiLCAiaHR0cHM6Ly90ZXN0
LmxvYWRpbXBhY3QuY29tL3N0eWxlLmNzcyIsIG51bGwsIHsgdGFnczogeyBz
dGF0aWNBc3NldDogInllcyIgfSB9XSwKICAgICAgICAgICAgWyJHRVQiLCAi
aHR0cHM6Ly90ZXN0LmxvYWRpbXBhY3QuY29tL2ltYWdlcy9sb2dvLnBuZyIs
IG51bGwsIHsgdGFnczogeyBzdGF0aWNBc3NldDogInllcyIgfSB9XQogICAg
ICAgIF0pOwogICAgICAgIC8vIENvbWJpbmUgY2hlY2soKSBjYWxsIHdpdGgg
ZmFpbHVyZSB0cmFja2luZwogICAgICAgIGZhaWx1cmVSYXRlLmFkZCghY2hl
Y2socmVzcHMsIHsKICAgICAgICAgICAgInN0YXR1cyBpcyAyMDAiOiAocikg
PT4gclswXS5zdGF0dXMgPT09IDIwMCAmJiByWzFdLnN0YXR1cyA9PT0gMjAw
LAogICAgICAgICAgICAicmV1c2VkIGNvbm5lY3Rpb24iOiAocikgPT4gclsw
XS50aW1pbmdzLmNvbm5lY3RpbmcgPT0gMCwKICAgICAgICB9KSk7CiAgICB9
KTsKCiAgICBzbGVlcChNYXRoLnJhbmRvbSgpICogMyArIDIpOyAvLyBSYW5k
b20gc2xlZXAgYmV0d2VlbiAycyBhbmQgNXMKfQpgYGAKCllvdSBjYW4gc2F2
ZSB0aGUgYWJvdmUgZXhhbXBsZSBhcyBhIGxvY2FsIGZpbGUgYW5kIHJ1biBp
dCwgb3IgeW91IGNhbiBhbHNvIHJ1biBpdCBkaXJlY3RseSBmcm9tIHRoZSBb
Z2l0aHViIGNvcHkgb2YgdGhlIGZpbGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9s
b2FkaW1wYWN0L2s2L2Jsb2IvbWFzdGVyL3NhbXBsZXMvdGhyZXNob2xkc19y
ZWFkbWVfZXhhbXBsZS5qcykgd2l0aCB0aGUgYGs2IHJ1biBnaXRodWIuY29t
L2xvYWRpbXBhY3QvazYvc2FtcGxlcy90aHJlc2hvbGRzX3JlYWRtZV9leGFt
cGxlLmpzYCBjb21tYW5kLiBZb3UgY2FuIGZpbmQgKGFuZCBjb250cmlidXRl
ISkgbW9yZSBrNiBzY3JpcHQgZXhhbXBsZXMgaGVyZTogW2h0dHBzOi8vZ2l0
aHViLmNvbS9sb2FkaW1wYWN0L2s2L3RyZWUvbWFzdGVyL3NhbXBsZXNdKGh0
dHBzOi8vZ2l0aHViLmNvbS9sb2FkaW1wYWN0L2s2L3RyZWUvbWFzdGVyL3Nh
bXBsZXMpCgojIyMgT3V0cHV0cwoKVG8gbWFrZSBmdWxsIHVzZSBvZiB5b3Vy
IHRlc3QgcmVzdWx0cyBhbmQgdG8gYmUgYWJsZSB0byBmdWxseSBleHBsb3Jl
IGFuZCB1bmRlcnN0YW5kIHRoZW0sIGs2IGNhbiBvdXRwdXQgdGhlIHJhdyBt
ZXRyaWNzIHRvIGFuIGV4dGVybmFsIHJlcG9zaXRvcnkgb2YgeW91ciBjaG9p
Y2UuCgpUaGUgc2ltcGxlc3Qgb3V0cHV0IG9wdGlvbiwgbWVhbnQgcHJpbWFy
aWx5IGZvciBkZWJ1Z2dpbmcsIGlzIHRvIHNlbmQgdGhlIEpTT04tZW5jb2Rl
ZCBtZXRyaWNzIHRvIGEgZmlsZSBvciB0byBgc3Rkb3V0YC4gT3RoZXIgb3V0
cHV0IG9wdGlvbnMgYXJlIHNlbmRpbmcgdGhlIG1ldHJpY3MgdG8gYW4gSW5m
bHV4REIgaW5zdGFuY2UsIGFuIEFwYWNoZSBLYWZrYSBxdWV1ZSwgb3IgZXZl
biB0byB0aGUgTG9hZCBJbXBhY3QgY2xvdWQuIFRoaXMgYWxsb3dzIHlvdSB0
byBydW4geW91ciBsb2FkIHRlc3RzIGxvY2FsbHkgb3IgYmVoaW5kIGEgY29t
cGFueSBmaXJld2FsbCwgZWFybHkgaW4gdGhlIGRldmVsb3BtZW50IHByb2Nl
c3Mgb3IgYXMgYSBwYXJ0IG9mIGEgQ0kgc3VpdGUsIHdoaWxlIGF0IHRoZSBz
YW1lIHRpbWUgYmVpbmcgYWJsZSBzdG9yZSB0aGVpciByZXN1bHRzIGluIHRo
ZSBMb2FkIEltcGFjdCBjbG91ZCwgd2hlcmUgeW91IGNhbiB1c2UgSW5zaWdo
dHMgZm9yIGNvbXBhcmlzb24gYW5kIGFuYWx5c2lzLiBZb3UgY2FuIGZpbmQg
bW9yZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgYXZhaWxhYmxlIG91dHB1dHMg
W2hlcmVdKGh0dHBzOi8vZG9jcy5rNi5pby9kb2NzL3Jlc3VsdHMtb3V0cHV0
KSBhbmQgYWJvdXQgTG9hZCBJbXBhY3QgSW5zaWdodHMgW2hlcmVdKGh0dHBz
Oi8vZG9jcy5rNi5pby9kb2NzL2xvYWQtaW1wYWN0LWluc2lnaHRzKSBhbmQg
W2hlcmVdKGh0dHBzOi8vbG9hZGltcGFjdC5jb20vaW5zaWdodHMvKS4KCiMj
IyBNb2R1bGVzIGFuZCBKYXZhU2NyaXB0IGNvbXBhdGliaWxpdHkKCms2IGNv
bWVzIHdpdGggc2V2ZXJhbCBidWlsdC1pbiBtb2R1bGVzIGZvciB0aGluZ3Mg
bGlrZSBtYWtpbmcgKGFuZCBtZWFzdXJpbmcpIFtIVFRQIHJlcXVlc3RzXSho
dHRwczovL2RvY3MuazYuaW8vZG9jcy9rNmh0dHApIGFuZCBbd2Vic29ja2V0
IGNvbm5lY3Rpb25zXShodHRwczovL2RvY3MuazYuaW8vZG9jcy9rNi13ZWJz
b2NrZXQtYXBpKSwgW3BhcnNpbmcgSFRNTF0oaHR0cHM6Ly9kb2NzLms2Lmlv
L2RvY3MvazZodG1sKSwgW3JlYWRpbmcgZmlsZXNdKGh0dHBzOi8vZG9jcy5r
Ni5pby9kb2NzL29wZW4tZmlsZXBhdGgtbW9kZSksIFtjYWxjdWxhdGluZyBo
YXNoZXNdKGh0dHBzOi8vZG9jcy5rNi5pby9kb2NzL2s2Y3J5cHRvKSwgc2V0
dGluZyB1cCBjaGVja3MgYW5kIHRocmVzaG9sZHMsIHRyYWNraW5nIFtjdXN0
b20gbWV0cmljc10oaHR0cHM6Ly9kb2NzLms2LmlvL2RvY3MvazZtZXRyaWNz
KSwgYW5kIG90aGVycy4KCllvdSBjYW4sIG9mIGNvdXJzZSwgYWxzbyB3cml0
ZSB5b3VyIG93biBFUzYgbW9kdWxlcyBhbmQgYGltcG9ydGAgdGhlbSBpbiB5
b3VyIHNjcmlwdHMsIHBvdGVudGlhbGx5IHJldXNpbmcgY29kZSBhY3Jvc3Mg
YW4gb3JnYW5pemF0aW9uLiBUaGUgc2l0dWF0aW9uIHdpdGggaW1wb3J0aW5n
IEphdmFTY3JpcHQgbGlicmFyaWVzIGlzIGEgYml0IG1vcmUgY29tcGxpY2F0
ZWQuIFlvdSBjYW4gcG90ZW50aWFsbHkgdXNlICoqc29tZSoqIEpTIGxpYnJh
cmllcyBpbiBrNiwgZXZlbiBvbmVzIGludGVuZGVkIGZvciBOb2RlLmpzIGlm
IHlvdSB1c2UgYnJvd3NlcmlmeSwgdGhvdWdoIGlmIHRoZXkgZGVwZW5kIG9u
IG5ldHdvcmsvT1MtcmVsYXRlZCBBUElzLCB0aGV5IGxpa2VseSB3b24ndCB3
b3JrLiBZb3UgY2FuIGZpbmQgbW9yZSBkZXRhaWxzIGFuZCBpbnN0cnVjdGlv
bnMgYWJvdXQgd3JpdGluZyBvciBpbXBvcnRpbmcgSlMgbW9kdWxlcyBbaGVy
ZV0oaHR0cHM6Ly9kb2NzLms2LmlvL2RvY3MvbW9kdWxlcykuCgoKTmVlZCBo
ZWxwIG9yIHdhbnQgdG8gY29udHJpYnV0ZT8KLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0KClR5cGVzIG9mIHF1ZXN0aW9ucyBhbmQgd2hlcmUg
dG8gYXNrOgoKLSBIb3cgZG8gST8gLS0gW1N0YWNrIE92ZXJmbG93XShodHRw
czovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy90YWdnZWQvazYpICh1
c2UgdGFnczogazYsIGphdmFzY3JpcHQsIGxvYWQtdGVzdGluZykgb3IgdGhl
IERpc2NvdXJzZSBmb3J1bSBhdCBbY29tbXVuaXR5Lms2LmlvXShodHRwczov
L2NvbW11bml0eS5rNi5pby8pCi0gSSBnb3QgdGhpcyBlcnJvciwgd2h5PyAt
LSBbU3RhY2sgT3ZlcmZsb3ddKGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20v
cXVlc3Rpb25zL3RhZ2dlZC9rNikgb3IgW2NvbW11bml0eS5rNi5pb10oaHR0
cHM6Ly9jb21tdW5pdHkuazYuaW8vKQotIEkgZ290IHRoaXMgZXJyb3IgYW5k
IEknbSBzdXJlIGl0J3MgYSBidWcgLS0gW2ZpbGUgYW4gaXNzdWVdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9sb2FkaW1wYWN0L2s2L2lzc3VlcykKLSBJIGhhdmUg
YW4gaWRlYS9yZXF1ZXN0IC0tIFtmaWxlIGFuIGlzc3VlXShodHRwczovL2dp
dGh1Yi5jb20vbG9hZGltcGFjdC9rNi9pc3N1ZXMpCi0gV2h5IGRvIHlvdT8g
LS0gW1NsYWNrXShodHRwczovL2s2LmlvL3NsYWNrKQotIFdoZW4gd2lsbCB5
b3U/IC0tIFtTbGFja10oaHR0cHM6Ly9rNi5pby9zbGFjaykKCklmIHlvdXIg
cXVlc3Rpb25zIGFyZSBhYm91dCBhbnkgb2YgdGhlIGNvbW1lcmNpYWwgTG9h
ZCBJbXBhY3Qgc2VydmljZXMgbGlrZSBtYW5hZ2VkIGNsb3VkIGV4ZWN1dGlv
biBhbmQgTG9hZCBJbXBhY3QgSW5zaWdodHMsIHlvdSBjYW4gY29udGFjdCA8
c3VwcG9ydEBsb2FkaW1wYWN0LmNvbT4gb3Igd3JpdGUgaW4gdGhlIGAjbG9h
ZGltcGFjdGAgY2hhbm5lbCBpbiBbU2xhY2tdKGh0dHBzOi8vazYuaW8vc2xh
Y2spLgoKSWYgeW91IHdhbnQgdG8gY29udHJpYnV0ZSBvciBoZWxwIHdpdGgg
dGhlIGRldmVsb3BtZW50IG9mIGs2LCBzdGFydCBieSByZWFkaW5nIFtDT05U
UklCVVRJTkcubWRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sb2FkaW1wYWN0L2s2
L2Jsb2IvbWFzdGVyL0NPTlRSSUJVVElORy5tZCkuIEJlZm9yZSB5b3Ugc3Rh
cnQgY29kaW5nLCBlc3BlY2lhbGx5IHdoZW4gaXQgY29tZXMgdG8gYmlnIGNo
YW5nZXMgYW5kIGZlYXR1cmVzLCBpdCBtaWdodCBiZSBhIGdvb2QgaWRlYSB0
byBmaXJzdCBkaXNjdXNzIHlvdXIgcGxhbnMgYW5kIGltcGxlbWVudGF0aW9u
IGRldGFpbHMgd2l0aCB0aGUgazYgbWFpbnRhaW5lcnMuIFlvdSBjYW4gZG8g
dGhpcyBlaXRoZXIgaW4gdGhlIFtnaXRodWIgaXNzdWVdKGh0dHBzOi8vZ2l0
aHViLmNvbS9sb2FkaW1wYWN0L2s2L2lzc3VlcykgZm9yIHRoZSBwcm9ibGVt
IHlvdSdyZSBzb2x2aW5nIChjcmVhdGUgb25lIGlmIGl0IGRvZXNuJ3QgZXhp
c3QpIG9yIGluIHRoZSBgI2RldmVsb3BlcnNgIGNoYW5uZWwgb24gW1NsYWNr
XShodHRwczovL2s2LmlvL3NsYWNrKS4K
",,5672,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"dmVyc2lvbjogMgpqb2JzOgogIGRlcHM6CiAgICBkb2NrZXI6CiAgICAgIC0g
aW1hZ2U6IGNpcmNsZWNpL2dvbGFuZzoxLjEzCiAgICBlbnZpcm9ubWVudDoK
ICAgICAgR09QQVRIOiAvaG9tZS9jaXJjbGVjaS8uZ29fd29ya3NwYWNlCiAg
ICB3b3JraW5nX2RpcmVjdG9yeTogL2hvbWUvY2lyY2xlY2kvLmdvX3dvcmtz
cGFjZS9zcmMvZ2l0aHViLmNvbS9sb2FkaW1wYWN0L2s2CiAgICBzdGVwczoK
ICAgICAgLSBjaGVja291dAogICAgICAtIHJ1bjoKICAgICAgICAgIG5hbWU6
IENoZWNrIGRlcGVuZGVuY2llcwogICAgICAgICAgY29tbWFuZDogfAogICAg
ICAgICAgICBnbyB2ZXJzaW9uCiAgICAgICAgICAgIGV4cG9ydCBQQVRIPSIk
R09QQVRIL2JpbjokUEFUSCIKICAgICAgICAgICAgbWtkaXIgLXAgIiRHT1BB
VEgvYmluIgogICAgICAgICAgICBjdXJsIC0tZmFpbCBodHRwczovL3Jhdy5n
aXRodWJ1c2VyY29udGVudC5jb20vZ29sYW5nL2RlcC9tYXN0ZXIvaW5zdGFs
bC5zaCB8IHNoCiAgICAgICAgICAgIGRlcCB2ZXJzaW9uCiAgICAgICAgICAg
IGRlcCBzdGF0dXMKICAgICAgICAgICAgY2FzZSAkKGRlcCBlbnN1cmUgMj4m
MSB8IGhlYWQgLW4gMSkgaW4gV2FybmluZyopIGZhbHNlIDs7IGVzYWMKICAg
ICAgICAgICAgZGVwIGNoZWNrCgoKICB0ZXN0OgogICAgZG9ja2VyOgogICAg
ICAtIGltYWdlOiBjaXJjbGVjaS9nb2xhbmc6MS4xMwogICAgZW52aXJvbm1l
bnQ6CiAgICAgIEdPUEFUSDogL2hvbWUvY2lyY2xlY2kvLmdvX3dvcmtzcGFj
ZQogICAgd29ya2luZ19kaXJlY3Rvcnk6IC9ob21lL2NpcmNsZWNpLy5nb193
b3Jrc3BhY2Uvc3JjL2dpdGh1Yi5jb20vbG9hZGltcGFjdC9rNgogICAgc3Rl
cHM6CiAgICAgIC0gY2hlY2tvdXQKICAgICAgLSBydW46CiAgICAgICAgICBu
YW1lOiBSdW4gdGVzdHMgYW5kIGNvZGUgY292ZXJhZ2UKICAgICAgICAgIGNv
bW1hbmQ6IHwKICAgICAgICAgICAgZ28gdmVyc2lvbgogICAgICAgICAgICBl
eHBvcnQgR09NQVhQUk9DUz0yCiAgICAgICAgICAgIGV4cG9ydCBQQVRIPSRH
T1BBVEgvYmluOiRQQVRICiAgICAgICAgICAgIGVjaG8gIm1vZGU6IHNldCIg
PiBjb3ZlcmFnZS50eHQKICAgICAgICAgICAgZm9yIHBrZyBpbiAkKGdvIGxp
c3QgLi8uLi4gfCBncmVwIC12IHZlbmRvcik7IGRvCiAgICAgICAgICAgICAg
ICBsaXN0PSQoZ28gbGlzdCAtdGVzdCAtZiAgJ3t7IGpvaW4gLkRlcHMgICJc
biJ9fScgJHBrZyB8IGdyZXAgZ2l0aHViLmNvbS9sb2FkaW1wYWN0L2s2IHwg
Z3JlcCAtdiB2ZW5kb3IgfHwgdHJ1ZSkKICAgICAgICAgICAgICAgIGlmIFsg
LW4gIiRsaXN0IiBdOyB0aGVuCiAgICAgICAgICAgICAgICAgICAgbGlzdD0k
KGVjaG8gIiRsaXN0IiB8IGN1dCAtZjEgLWQgJyAnIHwgc29ydCAtdSB8IHBh
c3RlIC1zZCwpCiAgICAgICAgICAgICAgICBmaQoKICAgICAgICAgICAgICAg
IGdvIHRlc3QgLXJhY2UgLXRpbWVvdXQgODAwcyAgLS1jb3ZlcnBrZz0iJGxp
c3QiIC1jb3ZlcnByb2ZpbGU9JChlY2hvICRwa2cgfCB0ciAvIC0pLmNvdmVy
YWdlICRwa2cKICAgICAgICAgICAgZG9uZQogICAgICAgICAgICBncmVwIC1o
IC12ICJebW9kZToiICouY292ZXJhZ2UgPj4gY292ZXJhZ2UudHh0CiAgICAg
ICAgICAgIHJtIC1mICouY292ZXJhZ2UKICAgICAgICAgICAgYmFzaCA8KGN1
cmwgLS1mYWlsIC1zIGh0dHBzOi8vY29kZWNvdi5pby9iYXNoKQoKCiAgdGVz
dC1wcmV2LWdvbGFuZzoKICAgIGRvY2tlcjoKICAgICAgLSBpbWFnZTogY2ly
Y2xlY2kvZ29sYW5nOjEuMTIKICAgIGVudmlyb25tZW50OgogICAgICBHT1BB
VEg6IC9ob21lL2NpcmNsZWNpLy5nb193b3Jrc3BhY2UKICAgIHdvcmtpbmdf
ZGlyZWN0b3J5OiAvaG9tZS9jaXJjbGVjaS8uZ29fd29ya3NwYWNlL3NyYy9n
aXRodWIuY29tL2xvYWRpbXBhY3QvazYKICAgIHN0ZXBzOgogICAgICAtIGNo
ZWNrb3V0CiAgICAgIC0gcnVuOgogICAgICAgICAgbmFtZTogUnVuIHRlc3Rz
IHdpdGggcHJldmlvdXMgR28gdmVyc2lvbgogICAgICAgICAgY29tbWFuZDog
fAogICAgICAgICAgICBnbyB2ZXJzaW9uCiAgICAgICAgICAgIGV4cG9ydCBH
T01BWFBST0NTPTIKICAgICAgICAgICAgZXhwb3J0IFBBVEg9JEdPUEFUSC9i
aW46JFBBVEgKICAgICAgICAgICAgZ28gdGVzdCAtcCAyIC1yYWNlIC10aW1l
b3V0IDgwMHMgLi8uLi4KCiAgYnVpbGQtZG9ja2VyLWltYWdlczoKICAgIGRv
Y2tlcjoKICAgICAgLSBpbWFnZTogY2lyY2xlY2kvZ29sYW5nOjEuMTMKICAg
IGVudmlyb25tZW50OgogICAgICBHT1BBVEg6IC9ob21lL2NpcmNsZWNpLy5n
b193b3Jrc3BhY2UKICAgIHdvcmtpbmdfZGlyZWN0b3J5OiAvaG9tZS9jaXJj
bGVjaS8uZ29fd29ya3NwYWNlL3NyYy9naXRodWIuY29tL2xvYWRpbXBhY3Qv
azYKICAgIHN0ZXBzOgogICAgICAtIGNoZWNrb3V0CiAgICAgIC0gc2V0dXBf
cmVtb3RlX2RvY2tlcjoKICAgICAgICAgIHZlcnNpb246IDE3LjExLjAtY2UK
ICAgICAgLSBydW46CiAgICAgICAgICBuYW1lOiBTZXR1cCByZXBvIGFuZCBk
b2NrZXIKICAgICAgICAgIGNvbW1hbmQ6IHwKICAgICAgICAgICAgZ2l0IHN1
Ym1vZHVsZSB1cGRhdGUgLS1pbml0CiAgICAgICAgICAgIGRvY2tlciBpbmZv
CiAgICAgICAgICAgIGVjaG8gIntcImh0dHBzOi8vaW5kZXguZG9ja2VyLmlv
L3YxL1wiOntcImF1dGhcIjpcIiRET0NLRVJfQVVUSFwiLFwiZW1haWxcIjpc
IiRET0NLRVJfRU1BSUxcIn19IiA+fi8uZG9ja2VyY2ZnCiAgICAgIC0gcnVu
OgogICAgICAgICAgbmFtZTogQnVpbGQgYXBwbGljYXRpb24gRG9ja2VyIGlt
YWdlCiAgICAgICAgICBjb21tYW5kOiB8CiAgICAgICAgICAgIGRvY2tlciBi
dWlsZCAtdCBsb2FkaW1wYWN0L2s2IC4KICAgICAgLSBydW46CiAgICAgICAg
ICBuYW1lOiBSdW4gdGVzdHMgb24gZ2VuZXJhdGVkIERvY2tlciBpbWFnZQog
ICAgICAgICAgY29tbWFuZDogfAogICAgICAgICAgICBkb2NrZXIgcnVuIGxv
YWRpbXBhY3QvazYgLS1oZWxwCiAgICAgICAgICAgIGRvY2tlciBydW4gbG9h
ZGltcGFjdC9rNiBoZWxwCiAgICAgICAgICAgIGRvY2tlciBydW4gbG9hZGlt
cGFjdC9rNiBydW4gLS1oZWxwCiAgICAgICAgICAgIGRvY2tlciBydW4gbG9h
ZGltcGFjdC9rNiBpbnNwZWN0IC0taGVscAogICAgICAgICAgICBkb2NrZXIg
cnVuIGxvYWRpbXBhY3QvazYgc3RhdHVzIC0taGVscAogICAgICAgICAgICBk
b2NrZXIgcnVuIGxvYWRpbXBhY3QvazYgc3RhdHMgLS1oZWxwCiAgICAgICAg
ICAgIGRvY2tlciBydW4gbG9hZGltcGFjdC9rNiBzY2FsZSAtLWhlbHAKICAg
ICAgICAgICAgZG9ja2VyIHJ1biBsb2FkaW1wYWN0L2s2IHBhdXNlIC0taGVs
cAogICAgICAgICAgICBkb2NrZXIgcnVuIGxvYWRpbXBhY3QvazYgcmVzdW1l
IC0taGVscAogICAgICAtIGRlcGxveToKICAgICAgICAgIG5hbWU6IFB1c2gg
YXBwbGljYXRpb24gRG9ja2VyIGltYWdlCiAgICAgICAgICBjb21tYW5kOiB8
CiAgICAgICAgICAgIGlmIFsgIiR7Q0lSQ0xFX0JSQU5DSH0iID09ICJtYXN0
ZXIiIF07IHRoZW4KICAgICAgICAgICAgICBkb2NrZXIgdGFnIGxvYWRpbXBh
Y3QvazYgbG9hZGltcGFjdC9rNjptYXN0ZXIKICAgICAgICAgICAgICBkb2Nr
ZXIgcHVzaCBsb2FkaW1wYWN0L2s2Om1hc3RlcgogICAgICAgICAgICBlbGlm
IFtbICIke0NJUkNMRV9UQUd9IiA9fiBedlswLTldKyhcLlswLTldKykqJCBd
XTsgdGhlbgogICAgICAgICAgICAgIGRvY2tlciB0YWcgbG9hZGltcGFjdC9r
NiBsb2FkaW1wYWN0L2s2OiR7Q0lSQ0xFX1RBRzoxfQogICAgICAgICAgICAg
IGRvY2tlciBwdXNoIGxvYWRpbXBhY3QvazY6bGF0ZXN0CiAgICAgICAgICAg
ICAgZG9ja2VyIHB1c2ggbG9hZGltcGFjdC9rNjoke0NJUkNMRV9UQUc6MX0K
ICAgICAgICAgICAgZmkKCiAgYnVpbGQtbGludXgtcGFja2FnZXM6CiAgICBk
b2NrZXI6CiAgICAgIC0gaW1hZ2U6IGNpcmNsZWNpL2dvbGFuZzoxLjEzCiAg
ICBlbnZpcm9ubWVudDoKICAgICAgR09QQVRIOiAvaG9tZS9jaXJjbGVjaS8u
Z29fd29ya3NwYWNlCiAgICB3b3JraW5nX2RpcmVjdG9yeTogL2hvbWUvY2ly
Y2xlY2kvLmdvX3dvcmtzcGFjZS9zcmMvZ2l0aHViLmNvbS9sb2FkaW1wYWN0
L2s2CiAgICBzdGVwczoKICAgICAgLSBjaGVja291dAogICAgICAtIHJ1bjoK
ICAgICAgICAgIG5hbWU6IEJ1aWxkIGxpbnV4IHBhY2thZ2VzCiAgICAgICAg
ICBjb21tYW5kOiB8CiAgICAgICAgICAgIGV4cG9ydCBQQVRIPSRHT1BBVEgv
YmluOiRQQVRICgogICAgICAgICAgICBnbyBnZXQgZ2l0aHViLmNvbS9NYXN0
ZXJtaW5kcy9nbGlkZQogICAgICAgICAgICBnbyBnZXQgZ2l0aHViLmNvbS9t
aC1jYm9uL2dvLWJpbi1kZWIgXAogICAgICAgICAgICAgICYmIGNkICRHT1BB
VEgvc3JjL2dpdGh1Yi5jb20vbWgtY2Jvbi9nby1iaW4tZGViIFwKICAgICAg
ICAgICAgICAmJiBnbGlkZSBpbnN0YWxsIFwKICAgICAgICAgICAgICAmJiBn
byBpbnN0YWxsCgogICAgICAgICAgICBnbyBnZXQgZ2l0aHViLmNvbS9taC1j
Ym9uL2dvLWJpbi1ycG0gXAogICAgICAgICAgICAgICYmIGNkICRHT1BBVEhz
cmMvZ2l0aHViLmNvbS9taC1jYm9uL2dvLWJpbi1ycG0gXAogICAgICAgICAg
ICAgICYmIGdsaWRlIGluc3RhbGwgXAogICAgICAgICAgICAgICYmIGdvIGlu
c3RhbGwKCiAgICAgICAgICAgIHN1ZG8gYXB0LWdldCB1cGRhdGUgLXkKICAg
ICAgICAgICAgc3VkbyBhcHQtZ2V0IGluc3RhbGwgLXkgZmFrZXJvb3QgcnBt
CgogICAgICAgICAgICBjZCAkR09QQVRIL3NyYy9naXRodWIuY29tL2xvYWRp
bXBhY3QvazYKCiAgICAgICAgICAgIGVjaG8gIkJ1aWxkaW5nIGs2Li4uIgog
ICAgICAgICAgICBDR09fRU5BQkxFRD0wIEdPQVJDSD0kQVJDSCBnbyBidWls
ZCAtYSAtdHJpbXBhdGggLWxkZmxhZ3MgJy1zIC13JyAtbyAvdG1wL2s2CiAg
ICAgICAgICAgIGVjaG8gIkRvbmUhIgoKICAgICAgICAgICAgVkVSU0lPTj0k
e0NJUkNMRV9UQUc6MX0gLi9wYWNrYWdpbmcvZ2VuLXBhY2thZ2VzLnNoCgog
ICAgICAtIGRlcGxveToKICAgICAgICAgIG5hbWU6IFB1Ymxpc2ggcGFja2Fn
ZXMgaW4gQmludHJheQogICAgICAgICAgY29tbWFuZDogfAogICAgICAgICAg
ICBleHBvcnQgVkVSU0lPTj0ke0NJUkNMRV9UQUc6MX0KICAgICAgICAgICAg
IyBQdWJsaXNoaW5nIGRlYgogICAgICAgICAgICBjdXJsIC0tZmFpbCAtSCAi
WC1HUEctUEFTU1BIUkFTRTogJEdQR19QQVNTUEhSQVNFIiAtVCBkaXN0L2s2
LXYkVkVSU0lPTi1hbWQ2NC5kZWIgImh0dHBzOi8vJEJJTlRSQVlfVVNFUjok
QklOVFJBWV9LRVlAYXBpLmJpbnRyYXkuY29tL2NvbnRlbnQvbG9hZGltcGFj
dC9kZWIvazYvJFZFUlNJT04vazYtdiRWRVJTSU9OLWFtZDY0LmRlYjtkZWJf
ZGlzdHJpYnV0aW9uPXN0YWJsZTtkZWJfY29tcG9uZW50PW1haW47ZGViX2Fy
Y2hpdGVjdHVyZT1hbWQ2NDtwdWJsaXNoPTE7b3ZlcnJpZGU9MSIKICAgICAg
ICAgICAgIyBQdWJsaXNoaW5nIHJwbQogICAgICAgICAgICBjdXJsIC0tZmFp
bCAtSCAiWC1HUEctUEFTU1BIUkFTRTogJEdQR19QQVNTUEhSQVNFIiAtVCBk
aXN0L2s2LXYkVkVSU0lPTi1hbWQ2NC5ycG0gImh0dHBzOi8vJEJJTlRSQVlf
VVNFUjokQklOVFJBWV9LRVlAYXBpLmJpbnRyYXkuY29tL2NvbnRlbnQvbG9h
ZGltcGFjdC9ycG0vazYvJFZFUlNJT04vazYtdiRWRVJTSU9OLWFtZDY0LnJw
bT9wdWJsaXNoPTEmb3ZlcnJpZGU9MSIKd29ya2Zsb3dzOgogIHZlcnNpb246
IDIKICB0ZXN0X2FuZF9idWlsZDoKICAgIGpvYnM6CiAgICAgIC0gZGVwczoK
ICAgICAgICAgIGZpbHRlcnM6CiAgICAgICAgICAgIHRhZ3M6CiAgICAgICAg
ICAgICAgb25seTogLy4qLwogICAgICAtIHRlc3Q6CiAgICAgICAgICBmaWx0
ZXJzOgogICAgICAgICAgICB0YWdzOgogICAgICAgICAgICAgIG9ubHk6IC8u
Ki8KICAgICAgLSB0ZXN0LXByZXYtZ29sYW5nOgogICAgICAgICAgZmlsdGVy
czoKICAgICAgICAgICAgdGFnczoKICAgICAgICAgICAgICBvbmx5OiAvLiov
CiAgICAgIC0gYnVpbGQtZG9ja2VyLWltYWdlczoKICAgICAgICAgIHJlcXVp
cmVzOgogICAgICAgICAgICAtIGRlcHMKICAgICAgICAgICAgLSB0ZXN0CiAg
ICAgICAgICBmaWx0ZXJzOgogICAgICAgICAgICB0YWdzOgogICAgICAgICAg
ICAgIG9ubHk6IC8uKi8KICAgICAgLSBidWlsZC1saW51eC1wYWNrYWdlczoK
ICAgICAgICAgIHJlcXVpcmVzOgogICAgICAgICAgICAtIGRlcHMKICAgICAg
ICAgICAgLSB0ZXN0CiAgICAgICAgICBmaWx0ZXJzOgogICAgICAgICAgICBi
cmFuY2hlczoKICAgICAgICAgICAgICBpZ25vcmU6IC8uKi8KICAgICAgICAg
ICAgdGFnczoKICAgICAgICAgICAgICBvbmx5OiAvXnYuKi8K
",,,,,,,,,,,,,,,,,,,,,,,
b'NumberProgressBar',19340009,"b'A beautiful, slim Android ProgressBar.'",b'Java',26,5670,,230,False,b'https://api.github.com/repos/daimajia/NumberProgressBar/forks',"IyMgQW5kcm9pZCBOdW1iZXJQcm9ncmVzc0JhciBbIVtCdWlsZCBTdGF0dXNd
KGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9kYWltYWppYS9OdW1iZXJQcm9ncmVz
c0Jhci5wbmc/YnJhbmNoPW1hc3RlcildKGh0dHBzOi8vdHJhdmlzLWNpLm9y
Zy9kYWltYWppYS9OdW1iZXJQcm9ncmVzc0JhcikKClshW0luc2lnaHQuaW9d
KGh0dHBzOi8vaW5zaWdodC5pby9yZXBvQmFkZ2UvZ2l0aHViLmNvbS9kYWlt
YWppYS9OdW1iZXJQcm9ncmVzc0JhcildKGh0dHBzOi8vaW5zaWdodC5pby9n
aXRodWIuY29tL2RhaW1hamlhL051bWJlclByb2dyZXNzQmFyKQotLS0tLQoK
VGhlIE51bWJlclByb2dyZXNzQmFyIGlzIGEgYmFyLCBzbGltIGFuZCBzZXh5
IChldmVyeSBtYW4gd2FudHMhICkuIAoKSSBkZWNpZGVkIHRvIGRvIHRoaXMg
YmVjYXVzZSBJIHdhcyByZWFsbHkgdGlyZWQgb2YgYW5kcm9pZCBvcmlnaW5h
bCBwcm9ncmVzcyBiYXIuIFNvLCBJIG1hZGUgc29tZSBjaGFuZ2UsIGFkZGVk
IG1vcmUgY29sb3Igc3R5bGUgZm9yIHRoaXMuCgpBbmQgYWxzbyB5b3UgY2Fu
IGNvbnRyaWJ1dGUgbW9yZSBjb2xvciBzdHlsZSwgb3IgbmV3IGlkZWEgdG8g
bWUuCgpCVFcuIE15IGZyaWVuZHMgYWxzbyBtYWRlIHNvbWUgb3RoZXIgcGxh
dGZvcm0ncyBOdW1iZXJQcm9ncmVzc0Jhcu+8mgoKLSBbV2ViLUZyb250XSho
dHRwczovL2dpdGh1Yi5jb20va2FsYXNvby9OdW1iZXJQcm9ncmVzc0Jhcikg
YnkgW2thbGFzb29dKGh0dHBzOi8vZ2l0aHViLmNvbS9rYWxhc29vL051bWJl
clByb2dyZXNzQmFyKQotIFtpT1NdKGh0dHBzOi8vZ2l0aHViLmNvbS9NaW5n
LVpoZS9OdW1iZXJQcm9ncmVzc0JhcikgYnkgW01pbmctWmhlXShodHRwczov
L2dpdGh1Yi5jb20vTWluZy1aaGUvTnVtYmVyUHJvZ3Jlc3NCYXIpCi0gW1dp
bmRvd3MgUGhvbmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9zMjAwM3p5L051bWJl
clByb2dyZXNzQmFyKSBieSBbczIwMDN6eV0oaHR0cHM6Ly9naXRodWIuY29t
L3MyMDAzenkpCgotLS0KCiMjIyBEZW1vCgohW051bWJlclByb2dyZXNzQmFy
XShodHRwOi8vd3czLnNpbmFpbWcuY24vbXc2OTAvNjEwZGMwMzRqdzFlZnly
ZDhuN2k3ZzIwY3owMm1xNWYuZ2lmKQoKCltEb3dubG9hZCBEZW1vXShodHRw
czovL2dpdGh1Yi5jb20vZGFpbWFqaWEvTnVtYmVyUHJvZ3Jlc3NCYXIvcmVs
ZWFzZXMvZG93bmxvYWQvdjEuMC9OdW1iZXJQcm9ncmVzc0Jhci1EZW1vLXYx
LjAuYXBrKQoKCiMjIyBVc2FnZQotLS0tCgojIyMjIEdyYWRsZQoKYGBgZ3Jv
b3Z5CmRlcGVuZGVuY2llcyB7CiAgIGNvbXBpbGUgJ2NvbS5kYWltYWppYS5u
dW1iZXJwcm9ncmVzc2JhcjpsaWJyYXJ5OjEuNEBhYXInCn0KYGBgCgojIyMj
IE1hdmVuIAoKYGBgeG1sCjxkZXBlbmRlbmN5PgogICAgPGdyb3VwSWQ+Y29t
LmRhaW1hamlhLm51bWJlcnByb2dyZXNzYmFyPC9ncm91cElkPgogICAgPGFy
dGlmYWN0SWQ+bGlicmFyeTwvYXJ0aWZhY3RJZD4KICAgIDx2ZXJzaW9uPjEu
NDwvdmVyc2lvbj4KICAgIDx0eXBlPmFwa2xpYjwvdHlwZT4KPC9kZXBlbmRl
bmN5PgpgYGAKClVzZSBpdCBpbiB5b3VyIG93biBjb2RlOgoKYGBgamF2YQoJ
PGNvbS5kYWltYWppYS5udW1iZXJwcm9ncmVzc2Jhci5OdW1iZXJQcm9ncmVz
c0JhcgoJCWFuZHJvaWQ6aWQ9IkAraWQvbnVtYmVyX3Byb2dyZXNzX2JhciIK
CQlhbmRyb2lkOmxheW91dF93aWR0aD0id3JhcF9jb250ZW50IgoJCWFuZHJv
aWQ6bGF5b3V0X2hlaWdodD0id3JhcF9jb250ZW50IgoJLz4KYGBgCQoKSSBt
YWRlIHNvbWUgcHJlZGVzaWduIHN0eWxlLiBZb3UgY2FuIHVzZSB0aGVtIHZp
YSBgc3R5bGVgIHByb3BlcnR5LgoKCiFbUHJlc2V0IGNvbG9yXShodHRwOi8v
d3cxLnNpbmFpbWcuY24vbXc2OTAvNjEwZGMwMzRqdzFlZnlzbG1uNWl0ajIw
ZjMwazA3NHIuanBnKQoKVXNlIHRoZSBwcmVzZXQgc3R5bGUganVzdCBsaWtl
IGJlbG93OgoKYGBgamF2YQoJPGNvbS5kYWltYWppYS5udW1iZXJwcm9ncmVz
c2Jhci5OdW1iZXJQcm9ncmVzc0JhcgoJCWFuZHJvaWQ6aWQ9IkAraWQvbnVt
YmVyX3Byb2dyZXNzX2JhciIKCQlzdHlsZT0iQHN0eWxlL051bWJlclByb2dy
ZXNzQmFyX0RlZmF1bHQiCgkvPgpgYGAJCgpJbiB0aGUgYWJvdmUgcGljdHVy
ZSwgdGhlIHN0eWxlIGlzIDogCgpgTnVtYmVyUHJvZ3Jlc3NCYXJfRGVmYXVs
dGAKYE51bWJlclByb2dyZXNzQmFyX1Bhc3NpbmdfR3JlZW5gCmBOdW1iZXJQ
cm9ncmVzc0Jhcl9SZWxheF9CbHVlYApgTnVtYmVyUHJvZ3Jlc3NCYXJfR3Jh
Y2VfWWVsbG93YApgTnVtYmVyUHJvZ3Jlc3NCYXJfV2FybmluZ19SZWRgCmBO
dW1iZXJQcm9ncmVzc0Jhcl9GdW5ueV9PcmFuZ2VgCmBOdW1iZXJQcm9ncmVz
c0Jhcl9CZWF1dHlfUmVkYApgTnVtYmVyUHJvZ3Jlc3NCYXJfVHdpbmtsZV9O
aWdodGAKCllvdSBjYW4gZ2V0IG1vcmUgYmVhdXRpZnVsIGNvbG9yIGZyb20g
W2t1bGFyXShodHRwczovL2t1bGVyLmFkb2JlLmNvbSksIGFuZCB5b3UgY2Fu
IGFsc28gY29udHJpYnV0ZSB5b3VyIGNvbG9yIHN0eWxlIHRvIE51bWJlclBy
b2dyZXNzQmFyISAgCgojIyMgQnVpbGQKCnJ1biBgLi9ncmFkbGV3IGFzc2Vt
YmxlRGVidWdgIChNYWMvTGludXgpCgpvcgoKcnVuIGBncmFkbGV3LmJhdCBh
c3NlbWJsZURlYnVnYCAoV2luZG93cykKCiMjIyBBdHRyaWJ1dGVzCgpUaGVy
ZSBhcmUgc2V2ZXJhbCBhdHRyaWJ1dGVzIHlvdSBjYW4gc2V0OgoKIVtdKGh0
dHA6Ly93dzIuc2luYWltZy5jbi9tdzY5MC82MTBkYzAzNGp3MWVmeXR0dWty
MXpqMjBlZzA0Ym14OS5qcGcpCgpUaGUgKipyZWFjaGVkIGFyZWEqKiBhbmQg
Kip1bnJlYWNoZWQgYXJlYSoqOgoKKiBjb2xvcgoqIGhlaWdodCAKClRoZSAq
KnRleHQgYXJlYSoqOgoKKiBjb2xvcgoqIHRleHQgc2l6ZQoqIHZpc2liaWxp
dHkKKiBkaXN0YW5jZSBiZXR3ZWVuICoqcmVhY2hlZCBhcmVhKiogYW5kICoq
dW5yZWFjaGVkIGFyZWEqKgoKVGhlICoqYmFyKio6CgoqIG1heCBwcm9ncmVz
cwoqIGN1cnJlbnQgcHJvZ3Jlc3MKCmZvciBleGFtcGxlLCB0aGUgZGVmYXVs
dCBzdHlsZToKCmBgYGphdmEKCTxjb20uZGFpbWFqaWEubnVtYmVycHJvZ3Jl
c3NiYXIuTnVtYmVyUHJvZ3Jlc3NCYXIKCSAgICAgICAgYW5kcm9pZDpsYXlv
dXRfd2lkdGg9IndyYXBfY29udGVudCIKCSAgICAgICAgYW5kcm9pZDpsYXlv
dXRfaGVpZ2h0PSJ3cmFwX2NvbnRlbnQiCgkgICAgICAgIAoJICAgICAgICBj
dXN0b206cHJvZ3Jlc3NfdW5yZWFjaGVkX2NvbG9yPSIjQ0NDQ0NDIgoJICAg
ICAgICBjdXN0b206cHJvZ3Jlc3NfcmVhY2hlZF9jb2xvcj0iIzM0OThEQiIK
CSAgICAgICAgCgkgICAgICAgIGN1c3RvbTpwcm9ncmVzc191bnJlYWNoZWRf
YmFyX2hlaWdodD0iMC43NWRwIgoJICAgICAgICBjdXN0b206cHJvZ3Jlc3Nf
cmVhY2hlZF9iYXJfaGVpZ2h0PSIxLjVkcCIKCSAgICAgICAgCgkgICAgICAg
IGN1c3RvbTpwcm9ncmVzc190ZXh0X3NpemU9IjEwc3AiCgkgICAgICAgIGN1
c3RvbTpwcm9ncmVzc190ZXh0X2NvbG9yPSIjMzQ5OERCIgoJICAgICAgICBj
dXN0b206cHJvZ3Jlc3NfdGV4dF9vZmZzZXQ9IjFkcCIKCSAgICAgICAgY3Vz
dG9tOnByb2dyZXNzX3RleHRfdmlzaWJpbGl0eT0idmlzaWJsZSIKCSAgICAg
ICAgCgkgICAgICAgIGN1c3RvbTpwcm9ncmVzc19tYXg9IjEwMCIKCSAgICAg
ICAgY3VzdG9tOnByb2dyZXNzX2N1cnJlbnQ9IjgwIgoJICAgICAgICAgLz4K
YGBgCgojIyMgQWJvdXQgbWU6CgpBIHN0dWRlbnQgaW4gQ2hpbmEgbWFpbmxh
bmQsIEkgbGlrZSBHb29nbGUsIGxpa2UgQW5kcm9pZCwgbGlrZSBvcGVuIHNv
dXJjZSwgbGlrZSBkb2luZyBzb21ldGhpbmcgaW50ZXJlc3RpbmcuIDopCgpJ
ZiB5b3UgaGF2ZSBzb21lIG5ldyBpZGVhIG9yIGludGVybnNoaXAgb3Bwb3J0
dW5pdHksIHBsZWFzZSBbZW1haWwgbWVdKG1haWx0bzpkYWltYWppYUBnbWFp
bC5jb20pICEK
",,5670,"bGFuZ3VhZ2U6IGFuZHJvaWQKYW5kcm9pZDoKICBjb21wb25lbnRzOgogIC0g
dG9vbHMKICAtIHBsYXRmb3JtLXRvb2xzCiAgLSBidWlsZC10b29scy0yNS4w
LjIKICAtIGFuZHJvaWQtMjUKICAtIGV4dHJhLWFuZHJvaWQtc3VwcG9ydAog
IC0gZXh0cmEKICAtIGV4dHJhLWFuZHJvaWQtbTJyZXBvc2l0b3J5CnNjcmlw
dDoKICAtIC4vZ3JhZGxldyBjbGVhbiBhc3NlbWJsZURlYnVnCiAgLSAuL2dy
YWRsZXcgY2xlYW4gYXNzZW1ibGVSZWxlYXNl
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'searx',13595305,b'Privacy-respecting metasearch engine',b'Python',539,5670,,253,False,b'https://api.github.com/repos/asciimoo/searx/forks',"c2VhcngKPT09PT0KCkEgcHJpdmFjeS1yZXNwZWN0aW5nLCBoYWNrYWJsZSBg
bWV0YXNlYXJjaAplbmdpbmUgPGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93
aWtpL01ldGFzZWFyY2hfZW5naW5lPmBfXy4KClByb251bmNpYXRpb246IHPJ
mcuQa3MKCkxpc3Qgb2YgYHJ1bm5pbmcKaW5zdGFuY2VzIDxodHRwczovL2dp
dGh1Yi5jb20vYXNjaWltb28vc2Vhcngvd2lraS9TZWFyeC1pbnN0YW5jZXM+
YF9fLgoKU2VlIHRoZSBgZG9jdW1lbnRhdGlvbiA8aHR0cHM6Ly9hc2NpaW1v
by5naXRodWIuaW8vc2Vhcng+YF9fIGFuZCB0aGUgYHdpa2kgPGh0dHBzOi8v
Z2l0aHViLmNvbS9hc2NpaW1vby9zZWFyeC93aWtpPmBfXyBmb3IgbW9yZSBp
bmZvcm1hdGlvbi4KCnxPcGVuQ29sbGVjdGl2ZSBzZWFyeCBiYWNrZXJzfAp8
T3BlbkNvbGxlY3RpdmUgc2Vhcnggc3BvbnNvcnN8CgpJbnN0YWxsYXRpb24K
fn5+fn5+fn5+fn5+CgpXaXRoIERvY2tlcgotLS0tLS0KR28gdG8gdGhlIGBz
ZWFyeC1kb2NrZXIgPGh0dHBzOi8vZ2l0aHViLmNvbS9zZWFyeC9zZWFyeC1k
b2NrZXI+YF9fIHByb2plY3QuCgpXaXRob3V0IERvY2tlcgotLS0tLS0KRm9y
IGFsbCB0aGUgZGV0YWlscywgZm9sbG93IHRoaXMgYHN0ZXAgYnkgc3RlcCBp
bnN0YWxsYXRpb24gPGh0dHBzOi8vYXNjaWltb28uZ2l0aHViLmlvL3NlYXJ4
L2Rldi9pbnN0YWxsL2luc3RhbGxhdGlvbi5odG1sPmBfXy4KCk5vdGU6IHRo
ZSBkb2N1bWVudGF0aW9uIG5lZWRzIHRvIGJlIHVwZGF0ZWQuCgpJZiB5b3Ug
YXJlIGluIGh1cnJ5Ci0tLS0tLQotICBjbG9uZSBzb3VyY2U6CiAgIGBgZ2l0
IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS9hc2NpaW1vby9zZWFyeC5naXQg
JiYgY2Qgc2VhcnhgYAotICBpbnN0YWxsIGRlcGVuZGVuY2llczogYGAuL21h
bmFnZS5zaCB1cGRhdGVfcGFja2FnZXNgYAotICBlZGl0IHlvdXIKICAgYHNl
dHRpbmdzLnltbCA8aHR0cHM6Ly9naXRodWIuY29tL2FzY2lpbW9vL3NlYXJ4
L2Jsb2IvbWFzdGVyL3NlYXJ4L3NldHRpbmdzLnltbD5gX18KICAgKHNldCB5
b3VyIGBgc2VjcmV0X2tleWBgISkKLSAgcnVuIGBgcHl0aG9uIHNlYXJ4L3dl
YmFwcC5weWBgIHRvIHN0YXJ0IHRoZSBhcHBsaWNhdGlvbgoKCkJ1Z3MKfn5+
fgoKQnVncyBvciBzdWdnZXN0aW9ucz8gVmlzaXQgdGhlIGBpc3N1ZQp0cmFj
a2VyIDxodHRwczovL2dpdGh1Yi5jb20vYXNjaWltb28vc2VhcngvaXNzdWVz
PmBfXy4KCmBMaWNlbnNlIDxodHRwczovL2dpdGh1Yi5jb20vYXNjaWltb28v
c2VhcngvYmxvYi9tYXN0ZXIvTElDRU5TRT5gX18Kfn5+fn5+fn5+fn5+fn5+
fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+
fn5+fn5+fgoKTW9yZSBhYm91dCBzZWFyeAp+fn5+fn5+fn5+fn5+fn5+Cgot
ICBgb3Blbmh1YiA8aHR0cHM6Ly93d3cub3Blbmh1Yi5uZXQvcC9zZWFyeC8+
YF9fCi0gIGB0d2l0dGVyIDxodHRwczovL3R3aXR0ZXIuY29tL1NlYXJ4X2Vu
Z2luZT5gX18KLSAgSVJDOiAjc2VhcnggQCBmcmVlbm9kZQoKCi4uIHxPcGVu
Q29sbGVjdGl2ZSBzZWFyeCBiYWNrZXJzfCBpbWFnZTo6IGh0dHBzOi8vb3Bl
bmNvbGxlY3RpdmUuY29tL3NlYXJ4L2JhY2tlcnMvYmFkZ2Uuc3ZnCiAgIDp0
YXJnZXQ6IGh0dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL3NlYXJ4I2JhY2tl
cgoKCi4uIHxPcGVuQ29sbGVjdGl2ZSBzZWFyeCBzcG9uc29yc3wgaW1hZ2U6
OiBodHRwczovL29wZW5jb2xsZWN0aXZlLmNvbS9zZWFyeC9zcG9uc29ycy9i
YWRnZS5zdmcKICAgOnRhcmdldDogaHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5j
b20vc2Vhcngjc3BvbnNvcgo=
",,5670,"bGFuZ3VhZ2U6IHB5dGhvbgpzdWRvOiBmYWxzZQpjYWNoZToKICAtIHBpcAog
IC0gbnBtCiAgLSBkaXJlY3RvcmllczoKICAgIC0gJEhPTUUvLmNhY2hlL3Bp
cAoKYWRkb25zOgogIGZpcmVmb3g6ICJsYXRlc3QiCgppbnN0YWxsOgogIC0g
Li9tYW5hZ2Uuc2ggaW5zdGFsbF9nZWNrb2RyaXZlciB+L2RyaXZlcnMKICAt
IGV4cG9ydCBQQVRIPX4vZHJpdmVyczokUEFUSAogIC0gLi9tYW5hZ2Uuc2gg
bnBtX3BhY2thZ2VzCiAgLSAuL21hbmFnZS5zaCB1cGRhdGVfZGV2X3BhY2th
Z2VzCiAgLSBwaXAgaW5zdGFsbCBjb2RlY292CnNjcmlwdDoKICAtIC4vbWFu
YWdlLnNoIHN0eWxlcwogIC0gLi9tYW5hZ2Uuc2ggZ3J1bnRfYnVpbGQKICAt
IC4vbWFuYWdlLnNoIHRlc3RzCmFmdGVyX3N1Y2Nlc3M6CiAgLSAuL21hbmFn
ZS5zaCBweV90ZXN0X2NvdmVyYWdlCiAgLSBjb2RlY292CgpzdGFnZXM6CiAg
LSB0ZXN0CiAgLSBuYW1lOiBkb2NrZXIKICAgIGlmOiBicmFuY2ggPSBtYXN0
ZXIgQU5EIHR5cGUgIT0gcHVsbF9yZXF1ZXN0IEFORCBlbnYoRE9DS0VSX1VT
RVJOQU1FKSBJUyBwcmVzZW50Cgpqb2JzOgogIGluY2x1ZGU6CiAgICAtIHB5
dGhvbjogIjIuNyIKICAgIC0gcHl0aG9uOiAiMy41IgogICAgLSBweXRob246
ICIzLjYiCiAgICAtIHN0YWdlOiBkb2NrZXIKICAgICAgcHl0aG9uOiAiMy42
IgogICAgICBnaXQ6CiAgICAgICAgZGVwdGg6IGZhbHNlCiAgICAgIHNlcnZp
Y2VzOgogICAgICAgIC0gZG9ja2VyCiAgICAgIGFkZG9uczogW10KICAgICAg
YmVmb3JlX2luc3RhbGw6IHRydWUKICAgICAgaW5zdGFsbDogdHJ1ZQogICAg
ICBzY3JpcHQ6CiAgICAgICAgLSBlY2hvICIkRE9DS0VSX1BBU1NXT1JEIiB8
IGRvY2tlciBsb2dpbiAtdSAiJERPQ0tFUl9VU0VSTkFNRSIgLS1wYXNzd29y
ZC1zdGRpbgogICAgICAgIC0gLi9tYW5hZ2Uuc2ggZG9ja2VyX2J1aWxkIHB1
c2gKICAgICAgYWZ0ZXJfc3VjY2VzczogdHJ1ZQoKbm90aWZpY2F0aW9uczoK
ICBpcmM6CiAgICBjaGFubmVsczoKICAgICAgLSAiaXJjLmZyZWVub2RlLm9y
ZyNzZWFyeCIKICAgIHRlbXBsYXRlOgogICAgICAtICIle3JlcG9zaXRvcnl9
LyMle2J1aWxkX251bWJlcn0vJXticmFuY2h9ICgle2F1dGhvcn0pOiAle21l
c3NhZ2V9ICV7YnVpbGRfdXJsfSIKICAgIG9uX3N1Y2Nlc3M6IGNoYW5nZQo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
