name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'recompose',43797718,b'A React utility belt for function components and higher-order components.',b'JavaScript',77,14283,,199,False,b'https://api.github.com/repos/acdlite/recompose/forks',"IyMgQSBOb3RlIGZyb20gdGhlIEF1dGhvciAoYWNkbGl0ZSwgT2N0IDI1IDIw
MTgpOgoKSGkhIEkgY3JlYXRlZCBSZWNvbXBvc2UgYWJvdXQgdGhyZWUgeWVh
cnMgYWdvLiBBYm91dCBhIHllYXIgYWZ0ZXIgdGhhdCwgSSBqb2luZWQgdGhl
IFJlYWN0IHRlYW0uIFRvZGF5LCB3ZSBhbm5vdW5jZWQgYSBwcm9wb3NhbCBm
b3IgWypIb29rcypdKGh0dHBzOi8vcmVhY3Rqcy5vcmcvaG9va3MpLiBIb29r
cyBzb2x2ZXMgYWxsIHRoZSBwcm9ibGVtcyBJIGF0dGVtcHRlZCB0byBhZGRy
ZXNzIHdpdGggUmVjb21wb3NlIHRocmVlIHllYXJzIGFnbywgYW5kIG1vcmUg
b24gdG9wIG9mIHRoYXQuIEkgd2lsbCBiZSBkaXNjb250aW51aW5nIGFjdGl2
ZSBtYWludGVuYW5jZSBvZiB0aGlzIHBhY2thZ2UgKGV4Y2x1ZGluZyBwZXJo
YXBzIGJ1Z2ZpeGVzIG9yIHBhdGNoZXMgZm9yIGNvbXBhdGliaWxpdHkgd2l0
aCBmdXR1cmUgUmVhY3QgcmVsZWFzZXMpLCBhbmQgcmVjb21tZW5kaW5nIHRo
YXQgcGVvcGxlIHVzZSBIb29rcyBpbnN0ZWFkLiAqKllvdXIgZXhpc3Rpbmcg
Y29kZSB3aXRoIFJlY29tcG9zZSB3aWxsIHN0aWxsIHdvcmsqKiwganVzdCBk
b24ndCBleHBlY3QgYW55IG5ldyBmZWF0dXJlcy4gVGhhbmsgeW91IHNvLCBz
byBtdWNoIHRvIFtAd3VjdF0oaHR0cHM6Ly9naXRodWIuY29tL3d1Y3QpIGFu
ZCBbQGlzdGFya292XShodHRwczovL2dpdGh1Yi5jb20vaXN0YXJrb3YpIGZv
ciB0aGVpciBoZXJvaWMgd29yayBtYWludGFpbmluZyBSZWNvbXBvc2Ugb3Zl
ciB0aGUgbGFzdCBmZXcgeWVhcnMuCgpSZWFkIG1vcmUgZGlzY3Vzc2lvbiBh
Ym91dCB0aGlzIGRlY2lzaW9uIFtoZXJlXShodHRwczovL2dpdGh1Yi5jb20v
YWNkbGl0ZS9yZWNvbXBvc2UvaXNzdWVzLzc1NiNpc3N1ZWNvbW1lbnQtNDM4
Njc0NTczKS4KCioqKgoKUmVjb21wb3NlCi0tLS0tCgpbIVtidWlsZCBzdGF0
dXNdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vdHJhdmlzL2FjZGxpdGUvcmVj
b21wb3NlL21hc3Rlci5zdmc/c3R5bGU9ZmxhdC1zcXVhcmUpXShodHRwczov
L3RyYXZpcy1jaS5vcmcvYWNkbGl0ZS9yZWNvbXBvc2UpClshW2NvdmVyYWdl
XShodHRwczovL2ltZy5zaGllbGRzLmlvL2NvZGVjb3YvYy9naXRodWIvYWNk
bGl0ZS9yZWNvbXBvc2Uuc3ZnP3N0eWxlPWZsYXQtc3F1YXJlKV0oaHR0cHM6
Ly9jb2RlY292LmlvL2dpdGh1Yi9hY2RsaXRlL3JlY29tcG9zZSkKWyFbY29k
ZSBjbGltYXRlXShodHRwczovL2ltZy5zaGllbGRzLmlvL2NvZGVjbGltYXRl
L2dpdGh1Yi9hY2RsaXRlL3JlY29tcG9zZS5zdmc/c3R5bGU9ZmxhdC1zcXVh
cmUpXShodHRwczovL2NvZGVjbGltYXRlLmNvbS9naXRodWIvYWNkbGl0ZS9y
ZWNvbXBvc2UpClshW25wbSB2ZXJzaW9uXShodHRwczovL2ltZy5zaGllbGRz
LmlvL25wbS92L3JlY29tcG9zZS5zdmc/c3R5bGU9ZmxhdC1zcXVhcmUpXSho
dHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9yZWNvbXBvc2UpClshW25w
bSBkb3dubG9hZHNdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vbnBtL2RtL3Jl
Y29tcG9zZS5zdmc/c3R5bGU9ZmxhdC1zcXVhcmUpXShodHRwczovL3d3dy5u
cG1qcy5jb20vcGFja2FnZS9yZWNvbXBvc2UpCgpSZWNvbXBvc2UgaXMgYSBS
ZWFjdCB1dGlsaXR5IGJlbHQgZm9yIGZ1bmN0aW9uIGNvbXBvbmVudHMgYW5k
IGhpZ2hlci1vcmRlciBjb21wb25lbnRzLiBUaGluayBvZiBpdCBsaWtlIGxv
ZGFzaCBmb3IgUmVhY3QuCgpbKipGdWxsIEFQSSBkb2N1bWVudGF0aW9uKipd
KGRvY3MvQVBJLm1kKSAtIExlYXJuIGFib3V0IGVhY2ggaGVscGVyCgpbKipS
ZWNvbXBvc2UgQmFzZSBGaWRkbGUqKl0oaHR0cHM6Ly9qc2ZpZGRsZS5uZXQv
ZXZlbmNoYW5nZTQvcDN2c21ydm8vMTU5OS8pIC0gRWFzeSB3YXkgdG8gZGl2
ZSBpbgoKYGBgCm5wbSBpbnN0YWxsIHJlY29tcG9zZSAtLXNhdmUKYGBgCgoq
KvCfk7ogV2F0Y2ggQW5kcmV3J3MgW3RhbGsgb24gUmVjb21wb3NlIGF0IFJl
YWN0IEV1cm9wZV0oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj16
RF9qdWRFLWJYaykuKioKKihOb3RlOiBQZXJmb3JtYW5jZSBvcHRpbWl6YXRp
b25zIGhlIHNwZWFrcyBhYm91dCBoYXZlIGJlZW4gcmVtb3ZlZCwgbW9yZSBp
bmZvIFtoZXJlXShodHRwczovL2dpdGh1Yi5jb20vYWNkbGl0ZS9yZWNvbXBv
c2UvcmVsZWFzZXMvdGFnL3YwLjI2LjApKSoKCiMjIyBSZWxhdGVkIG1vZHVs
ZXMKClsqKnJlY29tcG9zZS1yZWxheSoqXShzcmMvcGFja2FnZXMvcmVjb21w
b3NlLXJlbGF5KSDigJQgUmVjb21wb3NlIGhlbHBlcnMgZm9yIFJlbGF5Cgoj
IyBZb3UgY2FuIHVzZSBSZWNvbXBvc2UgdG8uLi4KCiMjIyAuLi5saWZ0IHN0
YXRlIGludG8gZnVuY3Rpb25hbCB3cmFwcGVycwoKSGVscGVycyBsaWtlIGB3
aXRoU3RhdGUoKWAgYW5kIGB3aXRoUmVkdWNlcigpYCBwcm92aWRlIGEgbmlj
ZXIgd2F5IHRvIGV4cHJlc3Mgc3RhdGUgdXBkYXRlczoKCmBgYGpzCmNvbnN0
IGVuaGFuY2UgPSB3aXRoU3RhdGUoJ2NvdW50ZXInLCAnc2V0Q291bnRlcics
IDApCmNvbnN0IENvdW50ZXIgPSBlbmhhbmNlKCh7IGNvdW50ZXIsIHNldENv
dW50ZXIgfSkgPT4KICA8ZGl2PgogICAgQ291bnQ6IHtjb3VudGVyfQogICAg
PGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBzZXRDb3VudGVyKG4gPT4gbiArIDEp
fT5JbmNyZW1lbnQ8L2J1dHRvbj4KICAgIDxidXR0b24gb25DbGljaz17KCkg
PT4gc2V0Q291bnRlcihuID0+IG4gLSAxKX0+RGVjcmVtZW50PC9idXR0b24+
CiAgPC9kaXY+CikKYGBgCgpPciB3aXRoIGEgUmVkdXgtc3R5bGUgcmVkdWNl
cjoKCmBgYGpzCmNvbnN0IGNvdW50ZXJSZWR1Y2VyID0gKGNvdW50LCBhY3Rp
b24pID0+IHsKICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7CiAgY2FzZSBJTkNS
RU1FTlQ6CiAgICByZXR1cm4gY291bnQgKyAxCiAgY2FzZSBERUNSRU1FTlQ6
CiAgICByZXR1cm4gY291bnQgLSAxCiAgZGVmYXVsdDoKICAgIHJldHVybiBj
b3VudAogIH0KfQoKY29uc3QgZW5oYW5jZSA9IHdpdGhSZWR1Y2VyKCdjb3Vu
dGVyJywgJ2Rpc3BhdGNoJywgY291bnRlclJlZHVjZXIsIDApCmNvbnN0IENv
dW50ZXIgPSBlbmhhbmNlKCh7IGNvdW50ZXIsIGRpc3BhdGNoIH0pID0+CiAg
PGRpdj4KICAgIENvdW50OiB7Y291bnRlcn0KICAgIDxidXR0b24gb25DbGlj
az17KCkgPT4gZGlzcGF0Y2goeyB0eXBlOiBJTkNSRU1FTlQgfSl9PkluY3Jl
bWVudDwvYnV0dG9uPgogICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBkaXNw
YXRjaCh7IHR5cGU6IERFQ1JFTUVOVCB9KX0+RGVjcmVtZW50PC9idXR0b24+
CiAgPC9kaXY+CikKYGBgCgojIyMgLi4ucGVyZm9ybSB0aGUgbW9zdCBjb21t
b24gUmVhY3QgcGF0dGVybnMKCkhlbHBlcnMgbGlrZSBgY29tcG9uZW50RnJv
bVByb3AoKWAgYW5kIGB3aXRoQ29udGV4dCgpYCBlbmNhcHN1bGF0ZSBjb21t
b24gUmVhY3QgcGF0dGVybnMgaW50byBhIHNpbXBsZSBmdW5jdGlvbmFsIGlu
dGVyZmFjZToKCmBgYGpzCmNvbnN0IGVuaGFuY2UgPSBkZWZhdWx0UHJvcHMo
eyBjb21wb25lbnQ6ICdidXR0b24nIH0pCmNvbnN0IEJ1dHRvbiA9IGVuaGFu
Y2UoY29tcG9uZW50RnJvbVByb3AoJ2NvbXBvbmVudCcpKQoKPEJ1dHRvbiAv
PiAvLyByZW5kZXJzIDxidXR0b24+CjxCdXR0b24gY29tcG9uZW50PXtMaW5r
fSAvPiAvLyByZW5kZXJzIDxMaW5rIC8+CmBgYAoKYGBganMKY29uc3QgcHJv
dmlkZSA9IHN0b3JlID0+IHdpdGhDb250ZXh0KAogIHsgc3RvcmU6IFByb3BU
eXBlcy5vYmplY3QgfSwKICAoKSA9PiAoeyBzdG9yZSB9KQopCgovLyBBcHBs
eSB0byBiYXNlIGNvbXBvbmVudAovLyBEZXNjZW5kYW50cyBvZiBBcHAgaGF2
ZSBhY2Nlc3MgdG8gY29udGV4dC5zdG9yZQpjb25zdCBBcHBXaXRoQ29udGV4
dCA9IHByb3ZpZGUoc3RvcmUpKEFwcCkKYGBgCgojIyMgLi4ub3B0aW1pemUg
cmVuZGVyaW5nIHBlcmZvcm1hbmNlCgpObyBuZWVkIHRvIHdyaXRlIGEgbmV3
IGNsYXNzIGp1c3QgdG8gaW1wbGVtZW50IGBzaG91bGRDb21wb25lbnRVcGRh
dGUoKWAuIFJlY29tcG9zZSBoZWxwZXJzIGxpa2UgYHB1cmUoKWAgYW5kIGBv
bmx5VXBkYXRlRm9yS2V5cygpYCBkbyB0aGlzIGZvciB5b3U6CgpgYGBqcwov
LyBBIGNvbXBvbmVudCB0aGF0IGlzIGV4cGVuc2l2ZSB0byByZW5kZXIKY29u
c3QgRXhwZW5zaXZlQ29tcG9uZW50ID0gKHsgcHJvcEEsIHByb3BCIH0pID0+
IHsuLi59CgovLyBPcHRpbWl6ZWQgdmVyc2lvbiBvZiBzYW1lIGNvbXBvbmVu
dCwgdXNpbmcgc2hhbGxvdyBjb21wYXJpc29uIG9mIHByb3BzCi8vIFNhbWUg
ZWZmZWN0IGFzIGV4dGVuZGluZyBSZWFjdC5QdXJlQ29tcG9uZW50CmNvbnN0
IE9wdGltaXplZENvbXBvbmVudCA9IHB1cmUoRXhwZW5zaXZlQ29tcG9uZW50
KQoKLy8gRXZlbiBtb3JlIG9wdGltaXplZDogb25seSB1cGRhdGVzIGlmIHNw
ZWNpZmljIHByb3Aga2V5cyBoYXZlIGNoYW5nZWQKY29uc3QgSHlwZXJPcHRp
bWl6ZWRDb21wb25lbnQgPSBvbmx5VXBkYXRlRm9yS2V5cyhbJ3Byb3BBJywg
J3Byb3BCJ10pKEV4cGVuc2l2ZUNvbXBvbmVudCkKYGBgCgojIyMgLi4uaW50
ZXJvcGVyYXRlIHdpdGggb3RoZXIgbGlicmFyaWVzCgpSZWNvbXBvc2UgaGVs
cGVycyBpbnRlZ3JhdGUgcmVhbGx5IG5pY2VseSB3aXRoIGV4dGVybmFsIGxp
YnJhcmllcyBsaWtlIFJlbGF5LCBSZWR1eCwgYW5kIFJ4SlMKCmBgYGpzCmNv
bnN0IGVuaGFuY2UgPSBjb21wb3NlKAogIC8vIFRoaXMgaXMgYSBSZWNvbXBv
c2UtZnJpZW5kbHkgdmVyc2lvbiBvZiBSZWxheS5jcmVhdGVDb250YWluZXIo
KSwgcHJvdmlkZWQgYnkgcmVjb21wb3NlLXJlbGF5CiAgY3JlYXRlQ29udGFp
bmVyKHsKICAgIGZyYWdtZW50czogewogICAgICBwb3N0OiAoKSA9PiBSZWxh
eS5RTGAKICAgICAgICBmcmFnbWVudCBvbiBQb3N0IHsKICAgICAgICAgIHRp
dGxlLAogICAgICAgICAgY29udGVudAogICAgICAgIH0KICAgICAgYAogICAg
fQogIH0pLAogIGZsYXR0ZW5Qcm9wKCdwb3N0JykKKQoKY29uc3QgUG9zdCA9
IGVuaGFuY2UoKHsgdGl0bGUsIGNvbnRlbnQgfSkgPT4KICA8YXJ0aWNsZT4K
ICAgIDxoMT57dGl0bGV9PC9oMT4KICAgIDxkaXY+e2NvbnRlbnR9PC9kaXY+
CiAgPC9hcnRpY2xlPgopCmBgYAoKIyMjIC4uLmJ1aWxkIHlvdXIgb3duIGxp
YnJhcmllcwoKTWFueSBSZWFjdCBsaWJyYXJpZXMgZW5kIHVwIGltcGxlbWVu
dGluZyB0aGUgc2FtZSB1dGlsaXRpZXMgb3ZlciBhbmQgb3ZlciBhZ2Fpbiwg
bGlrZSBgc2hhbGxvd0VxdWFsKClgIGFuZCBgZ2V0RGlzcGxheU5hbWUoKWAu
IFJlY29tcG9zZSBwcm92aWRlcyB0aGVzZSB1dGlsaXRpZXMgZm9yIHlvdS4K
CmBgYGpzCi8vIEFueSBSZWNvbXBvc2UgbW9kdWxlIGNhbiBiZSBpbXBvcnRl
ZCBpbmRpdmlkdWFsbHkKaW1wb3J0IGdldERpc3BsYXlOYW1lIGZyb20gJ3Jl
Y29tcG9zZS9nZXREaXNwbGF5TmFtZScKQ29ubmVjdGVkQ29tcG9uZW50LmRp
c3BsYXlOYW1lID0gYGNvbm5lY3QoJHtnZXREaXNwbGF5TmFtZShCYXNlQ29t
cG9uZW50KX0pYAoKLy8gT3IsIGV2ZW4gYmV0dGVyOgppbXBvcnQgd3JhcERp
c3BsYXlOYW1lIGZyb20gJ3JlY29tcG9zZS93cmFwRGlzcGxheU5hbWUnCkNv
bm5lY3RlZENvbXBvbmVudC5kaXNwbGF5TmFtZSA9IHdyYXBEaXNwbGF5TmFt
ZShCYXNlQ29tcG9uZW50LCAnY29ubmVjdCcpCgppbXBvcnQgdG9DbGFzcyBm
cm9tICdyZWNvbXBvc2UvdG9DbGFzcycKLy8gQ29udmVydHMgYSBmdW5jdGlv
biBjb21wb25lbnQgdG8gYSBjbGFzcyBjb21wb25lbnQsIGUuZy4gc28gaXQg
Y2FuIGJlIGdpdmVuCi8vIGEgcmVmLiBSZXR1cm5zIGNsYXNzIGNvbXBvbmVu
dHMgYXMgaXMuCmNvbnN0IENsYXNzQ29tcG9uZW50ID0gdG9DbGFzcyhGdW5j
dGlvbkNvbXBvbmVudCkKYGBgCgojIyMgLi4uYW5kIG1vcmUKCiMjIEFQSSBk
b2NzCgpbUmVhZCB0aGVtIGhlcmVdKGRvY3MvQVBJLm1kKQoKIyMgRmxvdyBz
dXBwb3J0CgpbUmVhZCB0aGUgZG9jc10oZG9jcy9mbG93Lm1kKQoKIyMgVHJh
bnNsYXRpb24KCltUcmFkaXRpb25hbCBDaGluZXNlXShodHRwczovL2dpdGh1
Yi5jb20vbmVpZ2hib3Job29kOTk5L3JlY29tcG9zZSkKCiMjIFdoeQoKRm9y
Z2V0IEVTNiBjbGFzc2VzIHZzLiBgY3JlYXRlQ2xhc3MoKWAuCgpBbiBpZGlv
bWF0aWMgUmVhY3QgYXBwbGljYXRpb24gY29uc2lzdHMgbW9zdGx5IG9mIGZ1
bmN0aW9uIGNvbXBvbmVudHMuCgpgYGBqcwpjb25zdCBHcmVldGluZyA9IHBy
b3BzID0+CiAgPHA+CiAgICBIZWxsbywge3Byb3BzLm5hbWV9IQogIDwvcD4K
YGBgCgpGdW5jdGlvbiBjb21wb25lbnRzIGhhdmUgc2V2ZXJhbCBrZXkgYWR2
YW50YWdlczoKCi0gVGhleSBoZWxwIHByZXZlbnQgYWJ1c2Ugb2YgdGhlIGBz
ZXRTdGF0ZSgpYCBBUEksIGZhdm9yaW5nIHByb3BzIGluc3RlYWQuCi0gVGhl
eSBlbmNvdXJhZ2UgdGhlIFsic21hcnQiIHZzLiAiZHVtYiIgY29tcG9uZW50
IHBhdHRlcm5dKGh0dHBzOi8vbWVkaXVtLmNvbS9AZGFuX2FicmFtb3Yvc21h
cnQtYW5kLWR1bWItY29tcG9uZW50cy03Y2EyZjlhN2M3ZDApLgotIFRoZXkg
ZW5jb3VyYWdlIGNvZGUgdGhhdCBpcyBtb3JlIHJldXNhYmxlIGFuZCBtb2R1
bGFyLgotIFRoZXkgZGlzY291cmFnZSBnaWFudCwgY29tcGxpY2F0ZWQgY29t
cG9uZW50cyB0aGF0IGRvIHRvbyBtYW55IHRoaW5ncy4KLSBUaGV5IGFsbG93
IFJlYWN0IHRvIG1ha2UgcGVyZm9ybWFuY2Ugb3B0aW1pemF0aW9ucyBieSBh
dm9pZGluZyB1bm5lY2Vzc2FyeSBjaGVja3MgYW5kIG1lbW9yeSBhbGxvY2F0
aW9ucy4KCihOb3RlIHRoYXQgYWx0aG91Z2ggUmVjb21wb3NlIGVuY291cmFn
ZXMgdGhlIHVzZSBvZiBmdW5jdGlvbiBjb21wb25lbnRzIHdoZW5ldmVyIHBv
c3NpYmxlLCBpdCB3b3JrcyB3aXRoIG5vcm1hbCBSZWFjdCBjb21wb25lbnRz
IGFzIHdlbGwuKQoKIyMjIEhpZ2hlci1vcmRlciBjb21wb25lbnRzIG1hZGUg
ZWFzeQoKTW9zdCBvZiB0aGUgdGltZSB3aGVuIHdlIHRhbGsgYWJvdXQgY29t
cG9zaXRpb24gaW4gUmVhY3QsIHdlJ3JlIHRhbGtpbmcgYWJvdXQgY29tcG9z
aXRpb24gb2YgY29tcG9uZW50cy4gRm9yIGV4YW1wbGUsIGEgYDxCbG9nPmAg
Y29tcG9uZW50IG1heSBiZSBjb21wb3NlZCBvZiBtYW55IGA8UG9zdD5gIGNv
bXBvbmVudHMsIHdoaWNoIGFyZSBjb21wb3NlZCBvZiBtYW55IGA8Q29tbWVu
dD5gIGNvbXBvbmVudHMuCgpSZWNvbXBvc2UgZm9jdXNlcyBvbiBhbm90aGVy
IHVuaXQgb2YgY29tcG9zaXRpb246ICoqaGlnaGVyLW9yZGVyIGNvbXBvbmVu
dHMqKiAoSG9DcykuIEhvQ3MgYXJlIGZ1bmN0aW9ucyB0aGF0IGFjY2VwdCBh
IGJhc2UgY29tcG9uZW50IGFuZCByZXR1cm4gYSBuZXcgY29tcG9uZW50IHdp
dGggYWRkaXRpb25hbCBmdW5jdGlvbmFsaXR5LiBUaGV5IGNhbiBiZSB1c2Vk
IHRvIGFic3RyYWN0IGNvbW1vbiB0YXNrcyBpbnRvIHJldXNhYmxlIHBpZWNl
cy4KClJlY29tcG9zZSBwcm92aWRlcyBhIHRvb2xraXQgb2YgaGVscGVyIGZ1
bmN0aW9ucyBmb3IgY3JlYXRpbmcgaGlnaGVyLW9yZGVyIGNvbXBvbmVudHMu
CgojIyBbU2hvdWxkIEkgdXNlIHRoaXM/IFBlcmZvcm1hbmNlIGFuZCBvdGhl
ciBjb25jZXJuc10oZG9jcy9wZXJmb3JtYW5jZS5tZCkKCiMjIFVzYWdlCgpB
bGwgZnVuY3Rpb25zIGFyZSBhdmFpbGFibGUgb24gdGhlIHRvcC1sZXZlbCBl
eHBvcnQuCgpgYGBqcwppbXBvcnQgeyBjb21wb3NlLCBtYXBQcm9wcywgd2l0
aFN0YXRlIC8qIC4uLiAqLyB9IGZyb20gJ3JlY29tcG9zZScKYGBgCgoqKk5v
dGU6KiogYHJlYWN0YCBpcyBhIF9wZWVyIGRlcGVuZGVuY3lfIG9mIFJlY29t
cG9zZS4gIElmIHlvdSdyZSB1c2luZyBgcHJlYWN0YCwgYWRkIHRoaXMgdG8g
eW91ciBgd2VicGFjay5jb25maWcuanNgOgoKYGBganMKcmVzb2x2ZTogewog
IGFsaWFzOiB7CiAgICByZWFjdDogInByZWFjdCIKICB9Cn0KYGBgCgojIyMg
Q29tcG9zaXRpb24KClJlY29tcG9zZSBoZWxwZXJzIGFyZSBkZXNpZ25lZCB0
byBiZSBjb21wb3NhYmxlOgoKYGBganMKY29uc3QgQmFzZUNvbXBvbmVudCA9
IHByb3BzID0+IHsuLi59CgovLyBUaGlzIHdpbGwgd29yaywgYnV0IGl0J3Mg
dGVkaW91cwpsZXQgRW5oYW5jZWRDb21wb25lbnQgPSBwdXJlKEJhc2VDb21w
b25lbnQpCkVuaGFuY2VkQ29tcG9uZW50ID0gbWFwUHJvcHMoLyouLi5hcmdz
Ki8pKEVuaGFuY2VkQ29tcG9uZW50KQpFbmhhbmNlZENvbXBvbmVudCA9IHdp
dGhTdGF0ZSgvKi4uLmFyZ3MqLykoRW5oYW5jZWRDb21wb25lbnQpCgovLyBE
byB0aGlzIGluc3RlYWQKLy8gTm90ZSB0aGF0IHRoZSBvcmRlciBoYXMgcmV2
ZXJzZWQg4oCUIHByb3BzIGZsb3cgZnJvbSB0b3AgdG8gYm90dG9tCmNvbnN0
IGVuaGFuY2UgPSBjb21wb3NlKAogIHdpdGhTdGF0ZSgvKi4uLmFyZ3MqLyks
CiAgbWFwUHJvcHMoLyouLi5hcmdzKi8pLAogIHB1cmUKKQpjb25zdCBFbmhh
bmNlZENvbXBvbmVudCA9IGVuaGFuY2UoQmFzZUNvbXBvbmVudCkKYGBgCgpU
ZWNobmljYWxseSwgdGhpcyBhbHNvIG1lYW5zIHlvdSBjYW4gdXNlIHRoZW0g
YXMgZGVjb3JhdG9ycyAoaWYgdGhhdCdzIHlvdXIgdGhpbmcpOgoKYGBganMK
QHdpdGhTdGF0ZSgvKi4uLmFyZ3MqLykKQG1hcFByb3BzKC8qLi4uYXJncyov
KQpAcHVyZQpjbGFzcyBDb21wb25lbnQgZXh0ZW5kcyBSZWFjdC5Db21wb25l
bnQgey4uLn0KYGBgCgojIyMgT3B0aW1pemluZyBidW5kbGUgc2l6ZQoKU2lu
Y2UgYDAuMjMuMWAgdmVyc2lvbiByZWNvbXBvc2UgZ290IHN1cHBvcnQgb2Yg
RVMyMDE1IG1vZHVsZXMuClRvIHJlZHVjZSBzaXplIGFsbCB5b3UgbmVlZCBp
cyB0byB1c2UgYnVuZGxlciB3aXRoIHRyZWUgc2hha2luZyBzdXBwb3J0Cmxp
a2UgW3dlYnBhY2sgMl0oaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2svd2Vi
cGFjaykgb3IgW1JvbGx1cF0oaHR0cHM6Ly9naXRodWIuY29tL3JvbGx1cC9y
b2xsdXApLgoKIyMjIyBVc2luZyBiYWJlbC1wbHVnaW4tbG9kYXNoCgpbYmFi
ZWwtcGx1Z2luLWxvZGFzaF0oaHR0cHM6Ly9naXRodWIuY29tL2xvZGFzaC9i
YWJlbC1wbHVnaW4tbG9kYXNoKSBpcyBub3Qgb25seSBsaW1pdGVkIHRvIFts
b2Rhc2hdKGh0dHBzOi8vZ2l0aHViLmNvbS9sb2Rhc2gvbG9kYXNoKS4gSXQg
Y2FuIGJlIHVzZWQgd2l0aCBgcmVjb21wb3NlYCBhcyB3ZWxsLgoKVGhpcyBj
YW4gYmUgZG9uZSBieSB1cGRhdGluZyBgbG9kYXNoYCBjb25maWcgaW4gYC5i
YWJlbHJjYC4KCmBgYGRpZmYKIHsKLSAgInBsdWdpbnMiOiBbImxvZGFzaCJd
CisgICJwbHVnaW5zIjogWworICAgIFsibG9kYXNoIiwgeyAiaWQiOiBbImxv
ZGFzaCIsICJyZWNvbXBvc2UiXSB9XQorICBdCiB9CmBgYAoKQWZ0ZXIgdGhh
dCwgeW91IGNhbiBkbyBpbXBvcnRzIGxpa2UgYmVsb3cgd2l0aG91dCBhY3R1
YWxseSBpbmNsdWRpbmcgdGhlIGVudGlyZSBsaWJyYXJ5IGNvbnRlbnQuCgpg
YGBqcwppbXBvcnQgeyBjb21wb3NlLCBtYXBQcm9wcywgd2l0aFN0YXRlIH0g
ZnJvbSAncmVjb21wb3NlJwpgYGAKCiMjIyBEZWJ1Z2dpbmcKCkl0IG1pZ2h0
IGJlIGhhcmQgdG8gdHJhY2UgaG93IGRvZXMgYHByb3BzYCBjaGFuZ2UgYmV0
d2VlbiBIT0NzLiBBIHVzZWZ1bCB0aXAgaXMgeW91IGNhbiBjcmVhdGUgYSBk
ZWJ1ZyBIT0MgdG8gcHJpbnQgb3V0IHRoZSBwcm9wcyBpdCBnZXRzIHdpdGhv
dXQgbW9kaWZ5aW5nIHRoZSBiYXNlIGNvbXBvbmVudC4gRm9yIGV4YW1wbGU6
CgptYWtlCgpgYGBqcwpjb25zdCBkZWJ1ZyA9IHdpdGhQcm9wcyhjb25zb2xl
LmxvZykKYGBgCgp0aGVuIHVzZSBpdCBiZXR3ZWVuIEhPQ3MKCmBgYGpzCmNv
bnN0IGVuaGFuY2UgPSBjb21wb3NlKAogIHdpdGhTdGF0ZSgvKi4uLmFyZ3Mq
LyksCiAgZGVidWcsIC8vIHByaW50IG91dCB0aGUgcHJvcHMgaGVyZQogIG1h
cFByb3BzKC8qLi4uYXJncyovKSwKICBwdXJlCikKYGBgCgoKIyMgV2hvIHVz
ZXMgUmVjb21wb3NlCklmIHlvdXIgY29tcGFueSBvciBwcm9qZWN0IHVzZXMg
UmVjb21wb3NlLCBmZWVsIGZyZWUgdG8gYWRkIGl0IHRvIFt0aGUgb2ZmaWNp
YWwgbGlzdCBvZiB1c2Vyc10oaHR0cHM6Ly9naXRodWIuY29tL2FjZGxpdGUv
cmVjb21wb3NlL3dpa2kvU2l0ZXMtVXNpbmctUmVjb21wb3NlKSBieSBbZWRp
dGluZ10oaHR0cHM6Ly9naXRodWIuY29tL2FjZGxpdGUvcmVjb21wb3NlL3dp
a2kvU2l0ZXMtVXNpbmctUmVjb21wb3NlL19lZGl0KSB0aGUgd2lraSBwYWdl
LgoKIyMgUmVjaXBlcyBmb3IgSW5zcGlyYXRpb24KV2UgaGF2ZSBhIGNvbW11
bml0eS1kcml2ZW4gUmVjaXBlcyBwYWdlLiBJdCdzIGEgcGxhY2UgdG8gc2hh
cmUgYW5kIHNlZSByZWNvbXBvc2UgcGF0dGVybnMgZm9yIGluc3BpcmF0aW9u
LiBQbGVhc2UgYWRkIHRvIGl0ISBbUmVjaXBlc10oaHR0cHM6Ly9naXRodWIu
Y29tL2FjZGxpdGUvcmVjb21wb3NlL3dpa2kvUmVjaXBlcykuCgojIyBGZWVk
YmFjayB3YW50ZWQKClByb2plY3QgaXMgc3RpbGwgaW4gdGhlIGVhcmx5IHN0
YWdlcy4gUGxlYXNlIGZpbGUgYW4gaXNzdWUgb3Igc3VibWl0IGEgUFIgaWYg
eW91IGhhdmUgc3VnZ2VzdGlvbnMhIE9yIHBpbmcgbWUgKEFuZHJldyBDbGFy
aykgb24gW1R3aXR0ZXJdKGh0dHBzOi8vdHdpdHRlci5jb20vYWNkbGl0ZSku
CgoKIyMgR2V0dGluZyBIZWxwCgoqKkZvciBzdXBwb3J0IG9yIHVzYWdlIHF1
ZXN0aW9ucyBsaWtlIOKAnGhvdyBkbyBJIGRvIFggd2l0aCBSZWNvbXBvc2Xi
gJ0gYW5kIOKAnG15IGNvZGUgZG9lc24ndCB3b3Jr4oCdLCBwbGVhc2Ugc2Vh
cmNoIGFuZCBhc2sgb24gW1N0YWNrT3ZlcmZsb3cgd2l0aCBhIFJlY29tcG9z
ZSB0YWddKGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvdGFn
Z2VkL3JlY29tcG9zZT9zb3J0PXZvdGVzJnBhZ2VTaXplPTUwKSBmaXJzdC4q
KgoKV2UgYXNrIHlvdSB0byBkbyB0aGlzIGJlY2F1c2UgU3RhY2tPdmVyZmxv
dyBoYXMgYSBtdWNoIGJldHRlciBqb2IgYXQga2VlcGluZyBwb3B1bGFyIHF1
ZXN0aW9ucyB2aXNpYmxlLiBVbmZvcnR1bmF0ZWx5IGdvb2QgYW5zd2VycyBn
ZXQgbG9zdCBhbmQgb3V0ZGF0ZWQgb24gR2l0SHViLgoKU29tZSBxdWVzdGlv
bnMgdGFrZSBhIGxvbmcgdGltZSB0byBnZXQgYW4gYW5zd2VyLiAqKklmIHlv
dXIgcXVlc3Rpb24gZ2V0cyBjbG9zZWQgb3IgeW91IGRvbid0IGdldCBhIHJl
cGx5IG9uIFN0YWNrT3ZlcmZsb3cgZm9yIGxvbmdlciB0aGFuIGEgZmV3IGRh
eXMsKiogd2UgZW5jb3VyYWdlIHlvdSB0byBwb3N0IGFuIGlzc3VlIGxpbmtp
bmcgdG8geW91ciBxdWVzdGlvbi4gV2Ugd2lsbCBjbG9zZSB5b3VyIGlzc3Vl
IGJ1dCB0aGlzIHdpbGwgZ2l2ZSBwZW9wbGUgd2F0Y2hpbmcgdGhlIHJlcG8g
YW4gb3Bwb3J0dW5pdHkgdG8gc2VlIHlvdXIgcXVlc3Rpb24gYW5kIHJlcGx5
IHRvIGl0IG9uIFN0YWNrT3ZlcmZsb3cgaWYgdGhleSBrbm93IHRoZSBhbnN3
ZXIuCgpQbGVhc2UgYmUgY29uc2lkZXJhdGUgd2hlbiBkb2luZyB0aGlzIGFz
IHRoaXMgaXMgbm90IHRoZSBwcmltYXJ5IHB1cnBvc2Ugb2YgdGhlIGlzc3Vl
IHRyYWNrZXIuCgojIyMgSGVscCBVcyBIZWxwIFlvdQoKT24gYm90aCB3ZWJz
aXRlcywgaXQgaXMgYSBnb29kIGlkZWEgdG8gc3RydWN0dXJlIHlvdXIgY29k
ZSBhbmQgcXVlc3Rpb24gaW4gYSB3YXkgdGhhdCBpcyBlYXN5IHRvIHJlYWQg
dG8gZW50aWNlIHBlb3BsZSB0byBhbnN3ZXIgaXQuIEZvciBleGFtcGxlLCB3
ZSBlbmNvdXJhZ2UgeW91IHRvIHVzZSBzeW50YXggaGlnaGxpZ2h0aW5nLCBp
bmRlbnRhdGlvbiwgYW5kIHNwbGl0IHRleHQgaW4gcGFyYWdyYXBocy4KClBs
ZWFzZSBrZWVwIGluIG1pbmQgdGhhdCBwZW9wbGUgc3BlbmQgdGhlaXIgZnJl
ZSB0aW1lIHRyeWluZyB0byBoZWxwIHlvdS4gWW91IGNhbiBtYWtlIGl0IGVh
c2llciBmb3IgdGhlbSBpZiB5b3UgcHJvdmlkZSB2ZXJzaW9ucyBvZiB0aGUg
cmVsZXZhbnQgbGlicmFyaWVzIGFuZCBhIHJ1bm5hYmxlIHNtYWxsIHByb2pl
Y3QgcmVwcm9kdWNpbmcgeW91ciBpc3N1ZS4gWW91IGNhbiBwdXQgeW91ciBj
b2RlIG9uIFtKU0Jpbl0oaHR0cDovL2pzYmluLmNvbSkgb3IsIGZvciBiaWdn
ZXIgcHJvamVjdHMsIG9uIEdpdEh1Yi4gTWFrZSBzdXJlIGFsbCB0aGUgbmVj
ZXNzYXJ5IGRlcGVuZGVuY2llcyBhcmUgZGVjbGFyZWQgaW4gYHBhY2thZ2Uu
anNvbmAgc28gYW55b25lIGNhbiBydW4gYG5wbSBpbnN0YWxsICYmIG5wbSBz
dGFydGAgYW5kIHJlcHJvZHVjZSB5b3VyIGlzc3VlLgo=
",,14283,"bGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczoKICAtICJub2RlIgppbnN0YWxs
OiAieWFybiBpbnN0YWxsIC0taWdub3JlLWVuZ2luZXMiCmJlZm9yZV9zY3Jp
cHQ6ICJucG0gaW5zdGFsbCAtZyBjb2RlY2xpbWF0ZS10ZXN0LXJlcG9ydGVy
IgpzY3JpcHQ6CiAgLSB5YXJuIHJ1biBsaW50CiAgLSB5YXJuIHRlc3QKYWZ0
ZXJfc2NyaXB0OgogIC0gIkNPREVDTElNQVRFX1JFUE9fVE9LRU49MjcxMjVk
ZjYxOTJkMzAwYmFmNjdjZDVmNWVhYjY1OTdjOTk4MjU2ZjQ4ODNiNzQ0YTEw
NTVkMGYwYzE4ZTYwOCBjb2RlY2xpbWF0ZS10ZXN0LXJlcG9ydGVyIDwgY292
ZXJhZ2UvbGNvdi5pbmZvIgogIC0gImNhdCAuL2NvdmVyYWdlL2xjb3YuaW5m
byB8ICQobnBtIGJpbikvY29kZWNvdiIK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
