name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'janus',825237,b'Vim distribution',b'Vim script',89,7755,,218,False,b'https://api.github.com/repos/carlhuda/janus/forks',"IyBKYW51czogVmltIERpc3RyaWJ1dGlvbgoKVGhpcyBpcyBhIGRpc3RyaWJ1
dGlvbiBvZiBwbHVnLWlucyBhbmQgbWFwcGluZ3MgZm9yIFZpbSwgR3ZpbSBh
bmQKTWFjVmltLgoKSXQgaXMgZGVzaWduZWQgdG8gcHJvdmlkZSBtaW5pbWFs
IHdvcmtpbmcgZW52aXJvbm1lbnQgdXNpbmcgdGhlIG1vc3QKcG9wdWxhciBw
bHVnLWlucyBhbmQgdGhlIG1vc3QgY29tbW9uIG1hcHBpbmdzLgoKVGhlIGRp
c3RyaWJ1dGlvbiBpcyBjb21wbGV0ZWx5IGN1c3RvbWlzYWJsZSB1c2luZyBh
IGB+Ly52aW1yYy5iZWZvcmVgCmFuZCBgfi8udmltcmMuYWZ0ZXJgIFZpbSBS
QyBmaWxlcy4KCiMjIFVwZGF0aW5nIHRvIHRoZSBsYXRlc3QgdmVyc2lvbgoK
VG8gdXBkYXRlIHRvIHRoZSBsYXRlc3QgdmVyc2lvbiBvZiB0aGUgZGlzdHJp
YnV0aW9uLCBqdXN0IHJ1biBgcmFrZWAKaW5zaWRlIHlvdXIgYH4vLnZpbWAg
ZGlyZWN0b3J5LgoKTk9URTogSWYgeW91IGV2ZXIgaGF2ZSBhbiBlcnJvciB1
cGRhdGluZyBKYW51cyByZWxhdGluZyB0byBhCm1pc3NpbmcgY29tbWl0IGlu
IGEgc3VibW9kdWxlLCBwbGVhc2UgdHJ5IHJ1bm5pbmcgYHJha2VgIGFnYWlu
IGJlZm9yZQpzdWJtaXR0aW5nIGFuIGlzc3VlLgoKIyMgTWFpbGluZyBsaXN0
CgpUaGUgbWFpbGluZyBsaXN0IGlzIGhvc3RlZCBhdCBbR29vZ2xlCkdyb3Vw
c10oaHR0cDovL2dyb3Vwcy5nb29nbGUuY29tL2dyb3VwL2phbnVzLXZpbWl1
cyksIHBsZWFzZSBqb2luIGl0IGZvcgpkaXNjdXNzaW9uIGFuZCBhbm5vdW5j
ZW1lbnRzLgoKIyMgUHJlLXJlcXVpc2l0ZXMKClRoZSBkaXN0cmlidXRpb24g
aXMgZGVzaWduZWQgdG8gd29yayB3aXRoIFZpbSA+PSA3LjMuCgpUaGUgZGlz
dHJpYnV0aW9uIGFsc28gcmVxdWlyZXMgYGFja2AsIGBjdGFnc2AsIGBnaXRg
LCBgcnVieWAgYW5kIGByYWtlYC4KRm9yIHRoZSBtb3N0IGNvbWZvcnRhYmxl
IGV4cGVyaWVuY2UsIHVzZSB0aGUgR1VJIHZlcnNpb24gb2YgVmltLiBMaW51
eAp1c2VycyBzaG91bGQgaW5zdGFsbCBgZ3ZpbWAsIE9TWCB1c2VycyBzaG91
bGQgaW5zdGFsbApbTWFjVmltXShodHRwOi8vY29kZS5nb29nbGUuY29tL3Av
bWFjdmltLykuIFRoZSByZWNvbW1lbmRlZCB3YXkgb2YKaW5zdGFsbGluZyBN
YWNWaW0gaXMgdXNpbmcKW0hvbWVicmV3XShodHRwOi8vbXhjbC5naXRodWIu
Y29tL2hvbWVicmV3LyksIGJ1dCBiZWZvcmUgaW5zdGFsbGluZwpNYWNWaW0g
eW91IG5lZWQgdG8gdXNlIHN5c3RlbS13aWRlIFB5dGhvbiAoSWYgeW91IGFy
ZSB1c2luZyBweXRob24gdGhhdAppcyk6CgoqIElmIHlvdSdyZSB1c2luZyAq
KnB5dGhvbmJyZXcqKjogZG8gYHB5dGhvbmJyZXcgb2ZmYAoKYGBgYmFzaAok
IGJyZXcgaW5zdGFsbCBtYWN2aW0KYGBgCgpJZiB5b3UgZG9uJ3QgdXNlIEhv
bWVicmV3LCB5b3UgY2FuIHN0aWxsIGRvd25sb2FkIE1hY1ZpbQpbaGVyZV0o
aHR0cHM6Ly9naXRodWIuY29tL2I0d2luY2tsZXIvbWFjdmltL3JlbGVhc2Vz
KS4KClRha2UgYSBsb29rIGF0IHRoZSBbUHJlLXJlcXVpc2l0ZXMgd2lraQpw
YWdlXShodHRwczovL2dpdGh1Yi5jb20vY2FybGh1ZGEvamFudXMvd2lraS9Q
cmUtcmVxdWlzaXRlcykgZm9yIG1vcmUKaW5mb3JtYXRpb24uCgoKIyMgSW5z
dGFsbGF0aW9uCgpUbyBpbnN0YWxsIEphbnVzLCBwbGVhc2UgdXNlIG91ciBb
YXV0b21hdGljCmluc3RhbGxlcl0oaHR0cHM6Ly9naXRodWIuY29tL2Nhcmxo
dWRhL2phbnVzL2Jsb2IvbWFzdGVyL2Jvb3RzdHJhcC5zaCkKLCB3aGljaCBi
YWNrcyB1cCBhbnkgVmltIGZpbGVzIGZvdW5kIGluIHlvdXIgaG9tZSBmb2xk
ZXIgYW5kIGluc3RhbGxzCkphbnVzLgoKYGBgYmFzaAokIGN1cmwgLUwgaHR0
cHM6Ly9iaXQubHkvamFudXMtYm9vdHN0cmFwIHwgYmFzaApgYGAKCiMjIEN1
c3RvbWl6YXRpb24KCllvdSBjYW4gdXNlIGB+Ly5ndmltcmMuYmVmb3JlYCBh
bmQgYH4vLnZpbXJjLmJlZm9yZWAgZm9yIHNldHRpbmdzIEphbnVzIGl0c2Vs
ZiB1c2VzLApzdWNoIGFzIHRoZSBfX2xlYWRlcl9fIHNldHRpbmcuIFlvdSBt
YXkgYWxzbyB1c2UgYH4vLmd2aW1yYy5hZnRlcmAgYW5kCmB+Ly52aW1yYy5h
ZnRlcmAgZm9yIGFueSBhZGRpdGlvbmFsIHNldHRpbmdzOyBpdCBpcyBhbHNv
IGEgZ29vZCBwbGFjZSBmb3IKb3ZlcnJpZGluZyBKYW51cyBzZXR0aW5ncywg
YXMgYm90aCBmaWxlcyB3aWxsIGJlIGxvYWRlZCBhdCB0aGUgZW5kIG9mCkph
bnVzLgoKRm9yIGV4YW1wbGUsIHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0IGNv
bG9yIHNjaGVtZXM6CgpgYGBiYXNoCiQgZWNobyAnY29sb3IgZGVzZXJ0JyAg
Pj4gfi8udmltcmMuYWZ0ZXIKJCBlY2hvICdjb2xvciBtb2xva2FpJyA+PiB+
Ly5ndmltcmMuYWZ0ZXIKYGBgCgpJZiB5b3Ugd2FudCB0byBkbyBhZGRpdGlv
bmFsIGN1c3RvbWl6YXRpb24gb3IgYWRkIG1vcmUgVmltIHBsdWdpbnMsCmNy
ZWF0ZSBhIGB+Ly5qYW51c2AgZGlyZWN0b3J5IGFuZCBhZGQgeW91ciBwbHVn
aW5zIHRoZXJlLCBlaXRoZXIgd2l0aCBhCmBnaXQgY2xvbmVgIG9yIGJ5IGFk
ZGluZyBzdWJtb2R1bGVzIHRvIHlvdXIgb3duIGdpdCByZXBvc2l0b3J5IHRo
ZXJlLgpUaGlzIGRpcmVjdG9yeSBpcyB0cmVhdGVkIGxpa2UgYSBub3JtYWwg
cGF0aG9nZW4gZGlyZWN0b3J5LiBGb3IgZXhhbXBsZToKCmBgYGJhc2gKJCBj
ZCB+Ly5qYW51cwokIGdpdCBjbG9uZSBodHRwczovL2dpdGh1Yi5jb20vdmlt
LXNjcmlwdHMvUmVuYW1lMi5naXQgcmVuYW1lMgpgYGAKCk9yLCBpZiB5b3Ug
aGF2ZSBhIGdpdCByZXBvc2l0b3J5IGluIGB+Ly5qYW51c2AsIHlvdSBjYW4g
dXNlIGEgc3VibW9kdWxlOgoKYGBgYmFzaAokIGNkIH4vLmphbnVzCiQgZ2l0
IHN1Ym1vZHVsZSBhZGQgaHR0cHM6Ly9naXRodWIuY29tL3ZpbS1zY3JpcHRz
L1JlbmFtZTIuZ2l0IHJlbmFtZTIKYGBgCgpJZiB5b3Ugd291bGQgbGlrZSB0
byBkaXNhYmxlIGFuIGluY2x1ZGVkIHBsdWctaW4sIHlvdSBjYW4gZG8gdGhh
dCB3aXRoCnRoZSBgamFudXMjZGlzYWJsZV9wbHVnaW4oKWAgZnVuY3Rpb24g
ZnJvbSBpbnNpZGUgeW91cgpgfi8udmltcmMuYmVmb3JlYC4gVGhpcyBmdW5j
dGlvbiB0YWtlcyBhIHBsdWctaW4gbmFtZSBhcyBhbiBhcmd1bWVudAp3aXRo
b3V0IHRoZSBncm91cC4gRm9yIGV4YW1wbGUsIGlmIHlvdSB3b3VsZCBsaWtl
IHRvIGRpc2FibGUgdGhlCk5FUkRDb21tZW50ZXIgcGx1Zy1pbiwgeW91IGNh
biBkbyB0aGF0IHdpdGggdGhlIGNvbW1hbmQ6CgpgYGBiYXNoCiQgZWNobyAi
Y2FsbCBqYW51cyNkaXNhYmxlX3BsdWdpbignbmVyZGNvbW1lbnRlcicpIiA+
PiB+Ly52aW1yYy5iZWZvcmUKYGBgCgoqKldBUk5JTkcqKjogV2UndmUgbm90
aWNlZCBvdmVyIGFuZCBvdmVyLCB0aGF0IHBlb3BsZSBmb3JrIEphbnVzIGp1
c3QgdG8KY3VzdG9taXplIGl0LiBUaGlzIGlzIGJhZCBwcmFjdGljZSBmb3Ig
c2V2ZXJhbCByZWFzb25zIGFuZCB5b3Ugc2hvdWxkCm5vdCBkbyB0aGF0LCBh
bmQgaGVyZSdzIHdoeToKCi0gSmFudXMgaXMgZnVsbHkgY3VzdG9taXNhYmxl
IGFuZCB0aGVyZSdzIG5vIG5lZWQgdG8gY2hhbmdlIHRoZSBjb3JlIGZvcgog
IHVzaW5nIGEgZGlmZmVyZW50IHBsdWdpbiBmb3JrIG9yIHVzaW5nIGEgZGlm
ZmVyZW50IG1hcHBpbmcuCi0gRm9ya2luZyBtZWFucyBtYWludGVuYW5jZTsg
bWFpbnRlbmFuY2UgbWVhbnMgYnVyZGVuLiBEbyBub3QgYnVyZGVuCiAgeW91
cnNlbGYgd2l0aCBtYWludGFpbmluZyBhIGZvcms7IHRoYXQncyB3aGF0IHRo
ZSBgfi8uamFudXNgIGZvbGRlcgogIGlzIGZvci4KCklmIHlvdSBmaW5kIHlv
dXJzZWxmIG5lZWRpbmcgYSBjdXN0b21pc2F0aW9uIHRoYXQgaXMgbm90IHBv
c3NpYmxlIHdpdGgKdGhlIGN1cnJlbnQgc2V0dXAsIHRoZW4gcGxlYXNlIG9w
ZW4gYW4gaXNzdWUgb3IgY29uc2lkZXIgc3VibWl0dGluZyBhCnB1bGwgcmVx
dWVzdCB0byBtYWtlIGl0IHBvc3NpYmxlIHRvIGNvbnRpbnVlIHVzaW5nL2lt
cHJvdmluZyB0aGUgb2ZmaWNpYWwgcmVwby4KCioqV0FSTklORyoqOiBBbnkg
Kip1bmNvbW1pdGVkKiogZmlsZXMgaW5zaWRlIHRoZSAqKmphbnVzKiogZm9s
ZGVyIHdpbGwgYmUKcmVtb3ZlZCB0aGUgbmV4dCB0aW1lIHlvdSBydW4gYHJh
a2VgIHNvIG1ha2Ugc3VyZSB0byBlaXRoZXIgcHV0IHRoZW0gaW4KdGhlIGN1
c3RvbSBmb2xkZXIgKGB+Ly5qYW51c2ApLCBvciBjb21taXQgdGhlbS4gV2Ug
Y2xlYW4gdGhlIGphbnVzCmZvbGRlciBpbiBjYXNlIHdlIHJlcGxhY2UgYSBt
YW51YWxseSBpbnN0YWxsZWQgcGx1Z2luICh1c2luZyByYWtlIHRhc2tzKQp3
aXRoIGEgc3VibW9kdWxlLgoKRm9yIG1vcmUgaW5mb3JtYXRpb24gb24gaG93
IHRvIGN1c3RvbWl6ZSBKYW51cywgeW91IG1pZ2h0IHdhbnQgdG8gdGFrZQph
IGxvb2sgYXQgdGhlIFtDdXN0b21pemF0aW9uIHdpa2kKcGFnZV0oaHR0cHM6
Ly9naXRodWIuY29tL2NhcmxodWRhL2phbnVzL3dpa2kvQ3VzdG9taXphdGlv
bikuCkFkZGl0aW9uYWwgeW91IGNhbiBzZWUgW0V4YW1wbGVdKGh0dHBzOi8v
Z2l0aHViLmNvbS9raHVzbmV0ZGlub3YvLmphbnVzKSBvZiBjdXN0b21pemF0
aW9uLgoKIyBJbnRybyB0byBWSU0KCkhlcmUncmUgc29tZSB0aXBzIGluIGNh
c2UgeW91J3ZlIG5ldmVyIHVzZWQgVklNIGJlZm9yZToKCiMjIFR1dG9yaWFs
cwoKKiBUeXBlIGB2aW10dXRvcmAgaW50byBhIHNoZWxsIHRvIGdvIHRocm91
Z2ggYSBicmllZiBpbnRlcmFjdGl2ZQogIHR1dG9yaWFsIGluc2lkZSBWSU0u
CiogV2F0Y2ggdGhpcyBwcmVzZW50YXRpb24gYXQgW1ZJTTogV2Fsa2luZyBX
aXRob3V0IENydXRjaGVzXShodHRwczovL3ZpbWVvLmNvbS8xNjQ1ODkzOSkg
b3IgcmVhZCB0aGUgW3NsaWRlcyBvbiBTcGVha2VyIERlY2tdKGh0dHBzOi8v
c3BlYWtlcmRlY2suY29tL25lbHN0cm9tL3ZpbS1wcmVjaXNpb24tZWRpdGlu
Zy1hdC10aGUtc3BlZWQtb2YtdGhvdWdodCkuCiogV2F0Y2ggdGhlIHNjcmVl
bmNhc3RzIGF0IFt2aW1jYXN0cy5vcmddKGh0dHA6Ly92aW1jYXN0cy5vcmcv
KQoqIFdhdGNoIERlcmVrIFd5YXR0J3MgZW5lcmdldGljIHR1dG9yaWFsIHZp
ZGVvcyBhdCBbaGlzIHNpdGVdKGh0dHA6Ly9kZXJla3d5YXR0Lm9yZy92aW0v
dHV0b3JpYWxzLykKKiBSZWFkIHd5Y2F0cycgcGVyc3BlY3RpdmUgb24gbGVh
cm5pbmcgVmltIGF0CiAgW0V2ZXJ5b25lIHdobyB0cmllZCB0byBjb252aW5j
ZSBtZSB0byB1c2UgdmltIHdhcyB3cm9uZ10oaHR0cDovL3llaHVkYWthdHou
Y29tLzIwMTAvMDcvMjkvZXZlcnlvbmUtd2hvLXRyaWVkLXRvLWNvbnZpbmNl
LW1lLXRvLXVzZS12aW0td2FzLXdyb25nLykKKiBSZWFkIHRoaXMgYW5kIG90
aGVyIGFuc3dlcnMgdG8gYSBxdWVzdGlvbiBhYm91dCB2aW0gYXQgU3RhY2tP
dmVyZmxvdzoKICBbWW91ciBwcm9ibGVtIHdpdGggVmltIGlzIHRoYXQgeW91
IGRvbid0IGdyb2sgdmldKGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVz
dGlvbnMvMTIxODM5MC93aGF0LWlzLXlvdXItbW9zdC1wcm9kdWN0aXZlLXNo
b3J0Y3V0LXdpdGgtdmltLzEyMjAxMTgjMTIyMDExOCkKKiBSZWFkIHRoZSBb
R2V0dGluZyBTdGFydGVkIHdpdGggVmltXShodHRwOi8vd3d3LnNpdGVwb2lu
dC5jb20vZ2V0dGluZy1zdGFydGVkLXZpbS8pIHR1dG9yaWFsIG9uIFNpdGVQ
b2ludAoqIFJlYWQgdGhlIFtFZmZlY3RpdmUgUmFpbHMgRGV2ZWxvcG1lbnQg
d2l0aCBWaW1dKGh0dHA6Ly93d3cuc2l0ZXBvaW50LmNvbS9lZmZlY3RpdmUt
cmFpbHMtZGV2ZWxvcG1lbnQtdmltLykgdHV0b3JpYWwgb24gU2l0ZVBvaW50
CgojIyBNb2RlcwoKKiBWSU0gaGFzIHRocmVlIG1vZGVzOgogICogaW5zZXJ0
IG1vZGUtIHN0dWZmIHlvdSB0eXBlIGlzIGFkZGVkIHRvIHRoZSBidWZmZXIK
ICAqIG5vcm1hbCBtb2RlLSBrZXlzIHlvdSBoaXQgYXJlIGludGVycHJldGVk
IGFzIGNvbW1hbmRzCiAgKiB2aXN1YWwgbW9kZS0gYWxsb3dzIHlvdSB0byBz
ZWxlY3QgYmxvY2tzIG9mIHRleHQKKiBUbyBlbnRlciBpbnNlcnQgbW9kZSwg
aGl0IGBpYAoqIFRvIGV4aXQgaW5zZXJ0IG1vZGUsIGhpdCBgPEVTQz5gCiog
VG8gZW50ZXIgdmlzdWFsIG1vZGUsIGhpdCBgdmAKKiBUbyBleGl0IHZpc3Vh
bCBtb2RlLCBoaXQgYDxFU0M+YAoKIyMgVXNlZnVsIGNvbW1hbmRzCgoqIFVz
ZSBgOnFgIHRvIGV4aXQgdmltCiogQ2VydGFpbiBjb21tYW5kcyBhcmUgcHJl
Zml4ZWQgd2l0aCBhIGA8TGVhZGVyPmAga2V5LCB3aGljaCBtYXBzIHRvIGBc
YAogIGJ5IGRlZmF1bHQuIFlvdSBjYW4sIGZvciBleGFtcGxlLCB1c2UgYGxl
dCBtYXBsZWFkZXIgPSAiLCJgIHRvIGNoYW5nZSB0aGlzIHRvIGEgY29tbWEu
IElmIHlvdSB3YW50IHRoaXMKICB0byBiZSBpbiBlZmZlY3QgZm9yIHVzZXMg
b2YgYDxMZWFkZXI+YCBpbiB0aGUgLnZpbXJjIGZpbGUsIG1ha2Ugc3VyZSB0
byBkZWZpbmUKICB0aGlzIGluIGB+Ly52aW1yYy5iZWZvcmVgCiogS2V5Ym9h
cmQgW2NoZWF0IHNoZWV0XShodHRwOi8vdmltLnJ0b3JyLmNvbS8pLgoKIyBG
ZWF0dXJlcwoKVGhpcyBWaW0gZGlzdHJpYnV0aW9uIGluY2x1ZGVzIGEgbnVt
YmVyIG9mIHBhY2thZ2VzIGJ1aWx0IGJ5IG90aGVycy4KCiMjIEJhc2UgQ3Vz
dG9taXphdGlvbnMKCkphbnVzIHNoaXBzIHdpdGggYSBudW1iZXIgb2YgYmFz
aWMgY3VzdG9taXphdGlvbnMgZm9yIHZpbToKCiogTGluZSBudW1iZXJzCiog
UnVsZXIgKGxpbmUgYW5kIGNvbHVtbiBudW1iZXJzKQoqIE5vIHdyYXAgKHR1
cm4gb2ZmIHBlci1idWZmZXIgdmlhIDpzZXQgd3JhcCkKKiBTb2Z0IDItc3Bh
Y2UgdGFicywgYW5kIGRlZmF1bHQgaGFyZCB0YWJzIHRvIDIgc3BhY2VzCiog
U2hvdyB0cmFpbGluZyB3aGl0ZXNwYWNlIGFzIGAuYAoqIE1ha2Ugc2VhcmNo
aW5nIGhpZ2hsaWdodGVkLCBpbmNyZW1lbnRhbCwgYW5kIGNhc2UgaW5zZW5z
aXRpdmUgdW5sZXNzIGEKICBjYXBpdGFsIGxldHRlciBpcyB1c2VkCiogQWx3
YXlzIHNob3cgYSBzdGF0dXMgbGluZQoqIEFsbG93IGJhY2tzcGFjaW5nIG92
ZXIgZXZlcnl0aGluZyAoaW5kZW50YXRpb25zLCBlb2wsIGFuZCBzdGFydAog
IGNoYXJhY3RlcnMpIGluIGluc2VydCBtb2RlCiogYDxDLVA+YCBpbnNlcnRz
IHRoZSBkaXJlY3Rvcnkgb2YgdGhlIGN1cnJlbnQgZmlsZSBpbnRvIGEgY29t
bWFuZAoqIEF1dG9tYXRpY2FsbHkgcmVzaXplIHNwbGl0cyB3aGVuIHJlc2l6
aW5nIHRoZSBWaW0gd2luZG93IChHVUkgb25seSkKKiBgPGxlYWRlcj5ld2Ag
ZXhwYW5kcyB0byBgOmUgKGRpcmVjdG9yeSBvZiBjdXJyZW50IGZpbGUpL2Ag
KG9wZW4gaW4gdGhlCiAgY3VycmVudCBidWZmZXIpCiogYDxsZWFkZXI+ZXNg
IGV4cGFuZHMgdG8gYDpzcCAoZGlyZWN0b3J5IG9mIGN1cnJlbnQgZmlsZSkv
YCAob3BlbiBpbiBhCiAgaG9yaXpvbnRhbCBzcGxpdCkKKiBgPGxlYWRlcj5l
dmAgZXhwYW5kcyB0byBgOnZzcCAoZGlyZWN0b3J5IG9mIGN1cnJlbnQgZmls
ZSkvYCAob3BlbiBpbgogIGEgdmVydGljYWwgc3BsaXQpCiogYDxsZWFkZXI+
ZXRgIGV4cGFuZHMgdG8gYDp0YWJlIChkaXJlY3Rvcnkgb2YgY3VycmVudCBm
aWxlKS9gIChvcGVuIGluCiAgYSBuZXcgdGFiKQoqIFdyaXRlIGEgcHJpdmls
ZWdlZCBmaWxlIHdpdGggYDpTdWRvV2Agb3IgYDpTdWRvV3JpdGVgLCBpdCB3
aWxsIHByb21wdAogIGZvciBzdWRvIHBhc3N3b3JkIHdoZW4gd3JpdGluZwoq
IGA8RjQ+YCB0b2dnbGVzIHBhc3RlIG1vZGUKKiBgPGxlYWRlcj5mZWZgIGZv
cm1hdHMgdGhlIGVudGlyZSBmaWxlCiogYDxsZWFkZXI+dWAgY29udmVydHMg
dGhlIGVudGlyZSB3b3JkIHRvIHVwcGVyY2FzZQoqIGA8bGVhZGVyPmxgIGNv
bnZlcnRzIHRoZSBlbnRpcmUgd29yZCB0byBsb3dlcmNhc2UKKiBgPGxlYWRl
cj5VYCBjb252ZXJ0cyB0aGUgZmlyc3QgY2hhciBvZiBhIHdvcmQgdG8gdXBw
ZXJjYXNlCiogYDxsZWFkZXI+TGAgY29udmVydHMgdGhlIGZpcnN0IGNoYXIg
b2YgYSB3b3JkIHRvIGxvd2VyY2FzZQoqIGA8bGVhZGVyPmNkYCBjaGFuZ2Vz
IHRoZSBwYXRoIHRvIHRoZSBhY3RpdmUgYnVmZmVyJ3MgZmlsZQoqIGA8bGVh
ZGVyPm1kYCBjcmVhdGVzIHRoZSBkaXJlY3Rvcnkgb2YgdGhlIGFjdGl2ZSBi
dWZmZXIncyBmaWxlCiAgKEZvciBleGFtcGxlLCB3aGVuIGVkaXRpbmcgYSBu
ZXcgZmlsZSBmb3Igd2hpY2ggdGhlIHBhdGggZG9lcyBub3QKZXhpc3QuKQoq
IGBnd2Agc3dhcHMgdGhlIGN1cnJlbnQgd29yZCB3aXRoIHRoZSBmb2xsb3dp
bmcgd29yZAoqIGA8bGVhZGVyPnVsYCB1bmRlcmxpbmVzIHRoZSBjdXJyZW50
IGxpbmUgd2l0aCBgPWAKKiBgPGxlYWRlcj50d2AgdG9nZ2xlcyB3cmFwCiog
YDxsZWFkZXI+ZmNgIGZpbmRzIHRoZSBuZXh0IGNvbmZsaWN0IG1hcmtlciAo
dGVzdGVkIHdpdGggR2l0CiAgY29uZmxpY3RlZCBmaWxlcykKKiBSZW1hcCBg
PERvd24+YCBhbmQgYDxVcD5gIHRvIGBnamAgYW5kIGBna2AgKFdyYXBwZWQg
dGV4dCBpcyBub3QKICBjb25zaWRlcmVkIGEgc2luZ2xlIGxvbmcgbGluZSBv
ZiB0ZXh0LikKKiBgPGxlYWRlcj5oc2AgdG9nZ2xlcyBoaWdobGlnaHQgc2Vh
cmNoCiogYDxsZWFkZXI+PWAgYWRqdXN0cyB2aWV3cG9ydHMgdG8gdGhlIHNh
bWUgc2l6ZSAoYDxDLXc+PWApCiogYDxBLVtgIChgPEQtW2Agb24gTWFjVmlt
KSBzaGlmdHMgY3VycmVudCBsaW5lIG9yIHNlbGVjdGVkIGxpbmVzCiAgcmln
aHR3YXJkcwoqIGA8QS1dYCAoYDxELV1gIG9uIE1hY1ZpbSkgc2hpZnRzIGN1
cnJlbnQgbGluZSBvciBzZWxlY3RlZCBsaW5lcwogIGxlZnR3YXJkcwoqIGA8
Qy1XPiFgIGludm9rZXMga3diZCBwbHVnaW47IGl0IGNsb3NlcyBhbGwgb3Bl
biBidWZmZXJzIGluIHRoZSBvcGVuCiAgd2luZG93cyBidXQga2VlcHMgdGhl
IHdpbmRvd3Mgb3BlbgoKIyMgW0Fjay52aW1dKGh0dHA6Ly9naXRodWIuY29t
L21pbGVzenMvYWNrLnZpbSkKCkFjay52aW0gdXNlcyBhY2sgdG8gc2VhcmNo
IGluc2lkZSB0aGUgY3VycmVudCBkaXJlY3RvcnkgZm9yIGEgcGF0dGVybi4K
WW91IGNhbiBsZWFybiBtb3JlIGFib3V0IGl0IHdpdGggOmhlbHAgQWNrLgoK
KipDdXN0b21pemF0aW9ucyoqOiBKYW51cyByZWJpbmRzIGNvbW1hbmQtc2hp
ZnQtZiAoYDxELUY+YCkgdG8gYnJpbmcgdXAKYDpBY2sgYC4KCiMjIFtDdHJs
UF0oaHR0cHM6Ly9naXRodWIuY29tL2N0cmxwdmltL2N0cmxwLnZpbSkKCkZ1
enp5IGZpbGUsIGJ1ZmZlciwgbXJ1IGFuZCB0YWcgZmluZGVyLiBSZXBsYWNl
cyBbQ29tbWFuZC1UXShodHRwczovL2dpdGh1Yi5jb20vd2luY2VudC9Db21t
YW5kLVQpCgoqKkN1c3RvbWl6YXRpb25zKio6IEZvciB1c2VycyBvZiBDb21t
YW5kLVQgSmFudXMgbWFwcyBDdHJsUCB0byBjb21tYW5kLXQgKGA8RC10PmAp
CgojIyBbTkVSRENvbW1lbnRlcl0oaHR0cDovL2dpdGh1Yi5jb20vZGRvbGxh
ci9uZXJkY29tbWVudGVyKQoKTkVSRENvbW1lbnRlciBhbGxvd3MgeW91IHRv
IHdyYW5nbGUgeW91ciBjb2RlIGNvbW1lbnRzLCByZWdhcmRsZXNzIG9mCmZp
bGV0eXBlLiBWaWV3IGA6aGVscCBORVJEQ29tbWVudGVyYCBmb3IgYWxsIHRo
ZSBkZXRhaWxzLgoKKipDdXN0b21pemF0aW9ucyoqOiBKYW51cyBiaW5kcyBj
b21tYW5kLS8gKGA8RC0vPmApIHRvIHRvZ2dsZSBjb21tZW50cy4KCiMjIFtO
RVJEVHJlZV0oaHR0cHM6Ly9naXRodWIuY29tL3Njcm9vbG9vc2UvbmVyZHRy
ZWUpCgpORVJEVHJlZSBpcyBhIGZpbGUgZXhwbG9yZXIgcGx1Z2luIHRoYXQg
cHJvdmlkZXMgInByb2plY3QgZHJhd2VyIgpmdW5jdGlvbmFsaXR5IHRvIHlv
dXIgdmltIHByb2plY3RzLiAgWW91IGNhbiBsZWFybiBtb3JlIGFib3V0IGl0
IHdpdGgKOmhlbHAgTkVSRFRyZWUuCgoqKkN1c3RvbWl6YXRpb25zKio6IEph
bnVzIGFkZHMgYSBudW1iZXIgb2YgY3VzdG9taXphdGlvbnMgdG8gdGhlIGNv
cmUKTkVSRFRyZWU6CgoqIFVzZSBgPExlYWRlcj5uYCB0byB0b2dnbGUgTkVS
RFRyZWUKKiBJZ25vcmUgY29tcGlsZWQgcnVieSwgcHl0aG9uLCBhbmQgamF2
YSBmaWxlcwoqIFdoZW4gb3BlbmluZyB2aW0gd2l0aCB2aW0gL3BhdGgsIG9w
ZW4gdGhlIGxlZnQgTkVSRFRyZWUgdG8gdGhhdAogIGRpcmVjdG9yeSwgc2V0
IHRoZSB2aW0gcHdkLCBhbmQgY2xlYXIgdGhlIHJpZ2h0IGJ1ZmZlcgoqIElu
IGdlbmVyYWwsIGFzc3VtZSB0aGF0IHRoZXJlIGlzIGEgc2luZ2xlIE5FUkRU
cmVlIGJ1ZmZlciBvbiB0aGUgbGVmdAogIGFuZCBvbmUgb3IgbW9yZSBlZGl0
aW5nIGJ1ZmZlcnMgb24gdGhlIHJpZ2h0CgojIyBbVW5pbXBhaXJlZF0oaHR0
cHM6Ly9naXRodWIuY29tL3Rwb3BlL3ZpbS11bmltcGFpcmVkKQoKVGhpcyBw
bHVnaW4gcHJvdmlkZXMgYSBsb3Qgb2YgdXNlZnVsIG1hcHBpbmdzLCBoZXJl
J3MgYSBicmllZiBleGFtcGxlIG9mCndoYXQgaXQgZG9lcyBwcm92aWRlOgoK
KiBgW2JgIHRvIGdvIHRvIHRoZSBwcmV2aW91cyBidWZmZXIKKiBgXWJgIHRv
IGdvIHRvIHRoZSBuZXh0IGJ1ZmZlcgoqIGBbbmAgdG8gZ28gdG8gdGhlIHBy
ZXZpb3VzIFNDTSBjb25mbGljdCBtYXJrZXIKKiBgXW5gIHRvIGdvIHRvIHRo
ZSBuZXh0IFNDTSBjb25mbGljdCBtYXJrZXIKClBsZWFzZSBjaGVjayBbYDpo
ZWxwCnVuaW1wYWlyZWRgXShodHRwczovL2dpdGh1Yi5jb20vdHBvcGUvdmlt
LXVuaW1wYWlyZWQvYmxvYi9tYXN0ZXIvZG9jL3VuaW1wYWlyZWQudHh0KQpm
b3IgYSBjb21wbGV0ZSBsaXN0CgojIyBbU3VwZXJUYWJdKGh0dHA6Ly9naXRo
dWIuY29tL2VydmFuZGV3L3N1cGVydGFiKQoKSW4gaW5zZXJ0IG1vZGUsIHN0
YXJ0IHR5cGluZyBzb21ldGhpbmcgYW5kIGhpdCBgPFRBQj5gIHRvIHRhYi1j
b21wbGV0ZQpiYXNlZCBvbiB0aGUgY3VycmVudCBjb250ZXh0LgoKIyMgW1N5
bnRhc3RpY10oaHR0cHM6Ly9naXRodWIuY29tL3Njcm9vbG9vc2Uvc3ludGFz
dGljLykKClN5bnRhc3RpYyBpcyBhIHN5bnRheCBjaGVja2luZyBwbHVnaW4g
dGhhdCBydW5zIGZpbGVzIHRocm91Z2ggZXh0ZXJuYWwgc3ludGF4CmNoZWNr
ZXJzIGFzIHRoZXkgYXJlIHNhdmVkIGFuZCBvcGVuZWQuIElmIHN5bnRheCBl
cnJvcnMgYXJlIGRldGVjdGVkLCB0aGUgdXNlcgppcyBub3RpZmllZCBhbmQg
aXMgaGFwcHkgYmVjYXVzZSB0aGV5IGRpZG4ndCBoYXZlIHRvIGNvbXBpbGUg
dGhlaXIgY29kZSBvcgpleGVjdXRlIHRoZWlyIHNjcmlwdCB0byBmaW5kIHRo
ZW0uCgpQbGVhc2Ugc2VlIFtgOmhlbHAKc3ludGFzdGljYF0oaHR0cHM6Ly9n
aXRodWIuY29tL3ZpbS1zeW50YXN0aWMvc3ludGFzdGljL2Jsb2IvbWFzdGVy
L2RvYy9zeW50YXN0aWMudHh0KQpmb3IgbW9yZSBpbmZvcm1hdGlvbi4KCiMj
IFtUYWdiYXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9tYWp1dHN1c2hpL3RhZ2Jh
cikKClRhZ2JhciBpcyBhIHZpbSBwbHVnaW4gZm9yIGJyb3dzaW5nIHRoZSB0
YWdzIG9mIHNvdXJjZSBjb2RlIGZpbGVzLgoKKipDdXN0b21pemF0aW9ucyoq
OiBKYW51cyBiaW5kcyBgPExlYWRlcj5ydGAgdG8gdG9nZ2xlIFRhZ2Jhci4K
CiMjIFtTbmlwTWF0ZV0oaHR0cHM6Ly9naXRodWIuY29tL2dhcmJhcy92aW0t
c25pcG1hdGUpClNuaXBNYXRlIGRlZmluZXMgdGV4dCBzbmlwcGV0cyAoYSBz
ZXJpZXMgb2YgY2hhcmFjdGVycykgdGhhdCBleHBhbmQgdG8KYSB1c2VmdWwg
cGllY2Ugb2YgY29kZSB3aGVuIHRhYiBpcyBwcmVzc2VkLiAgRm9yIGV4YW1w
bGUsIGluIGEgUnVieQpmaWxlLCBkZWZgPFRBQj5gIGV4cGFuZHMgdG86CmBg
YHJ1YnkKZGVmIG1ldGhvZF9uYW1lCgplbmQKYGBgCkFmdGVyIHR5cGluZyBp
biB0aGUgbWV0aG9kIG5hbWUsIHByZXNzIHRhYiBhZ2FpbiB0byBwdXQgdGhl
IGN1cnNvciByaWdodAp3aGVyZSB5b3Ugd2FudCBpdCBvbiB0aGUgbmV4dCBs
aW5lLiAgW1RoaXMgcmVwb3NpdG9yeV0oaHR0cHM6Ly9naXRodWIuY29tL2hv
bnphL3ZpbS1zbmlwcGV0cy90cmVlL21hc3Rlci9zbmlwcGV0cykKaGFzIGEg
ZnVsbCBsaXN0IG9mIHRoZSBTbmlwcGV0cyB0aGF0IGFyZSBhdmFpbGFibGUg
aW4gSmFudXMuCgojIyBbRWFzeU1vdGlvbl0oaHR0cHM6Ly9naXRodWIuY29t
L0xva2FsdG9nL3ZpbS1lYXN5bW90aW9uKQoKRWFzeU1vdGlvbiBwcm92aWRl
cyBhIG11Y2ggc2ltcGxlciB3YXkgdG8gdXNlIHNvbWUgbW90aW9ucyBpbiB2
aW0uIEl0CnRha2VzIHRoZSBgPG51bWJlcj5gIG91dCBvZiBgPG51bWJlcj53
YCBvciBgPG51bWJlcj5me2NoYXJ9YCBieSBoaWdobGlnaHRpbmcKYWxsIHBv
c3NpYmxlIGNob2ljZXMgYW5kIGFsbG93aW5nIHlvdSB0byBwcmVzcyBvbmUg
a2V5IHRvIGp1bXAgZGlyZWN0bHkKdG8gdGhlIHRhcmdldC4KCldoZW4gb25l
IG9mIHRoZSBhdmFpbGFibGUgbW90aW9ucyBpcyB0cmlnZ2VyZWQsIGFsbCB2
aXNpYmxlIHRleHQKcHJlY2VkaW5nIG9yIGZvbGxvd2luZyB0aGUgY3Vyc29y
IGlzIGZhZGVkLCBhbmQgbW90aW9uIHRhcmdldHMgYXJlCmhpZ2hsaWdodGVk
LgoKRWFzeU1vdGlvbiBpcyB0cmlnZ2VyZWQgYnkgb25lIG9mIHRoZSBwcm92
aWRlZCBtYXBwaW5ncy4KCmNoZWNrIEVhc3lNb3Rpb24ncyBbaG9tZQpwYWdl
XShodHRwczovL2dpdGh1Yi5jb20vTG9rYWx0b2cvdmltLWVhc3ltb3Rpb24p
IGZvciBtb3JlIGluZm9ybWF0aW9uLgoKIyMgW05ycndSZ25dKGh0dHBzOi8v
Z2l0aHViLmNvbS9jaHJpc2JyYS9OcnJ3UmduKQoKTmFycm93aW5nIG1lYW5z
IGZvY3Vzc2luZyBvbiBhIHJlZ2lvbiBhbmQgbWFraW5nIHRoZSByZXN0IGlu
YWNjZXNzaWJsZS4KWW91IHNpbXBseSBzZWxlY3QgdGhlIHJlZ2lvbiwgY2Fs
bCA6TmFycm93UmVnaW9uIGFuZCB0aGUgc2VsZWN0ZWQgcGFydAp3aWxsIG9w
ZW4gaW4gYSBuZXcgc2NyYXRjaCBidWZmZXIuIFRoZSByZXN0IG9mIHRoZSBm
aWxlIHdpbGwgYmUKcHJvdGVjdGVkLCBzbyB5b3Ugd29uJ3QgYWNjaWRlbnRh
bGx5IG1vZGlmeSB0aGF0IGJ1ZmZlci4gSW4gdGhlIG5ldwpidWZmZXIsIHlv
dSBjYW4gZG8gYSBnbG9iYWwgcmVwbGFjZSwgc2VhcmNoIG9yIGFueXRoaW5n
IGVsc2UgdG8gbW9kaWZ5CnRoYXQgcGFydC4gV2hlbiB5b3UgYXJlIGZpbmlz
aGVkLCBzaW1wbHkgd3JpdGUgdGhhdCBidWZmZXIgKGUuZy4gYnkKfDp3fCkg
YW5kIHlvdXIgbW9kaWZpY2F0aW9ucyB3aWxsIGJlIHB1dCBpbiB0aGUgb3Jp
Z2luYWwgYnVmZmVyIG1ha2luZwppdCBhY2Nlc3NpYmxlIGFnYWluLgoKIyMg
R2l0IFN1cHBvcnQgKFtGdWdpdGl2ZV0oaHR0cDovL2dpdGh1Yi5jb20vdHBv
cGUvdmltLWZ1Z2l0aXZlKSkKCkZ1Z2l0aXZlIGFkZHMgcGVydmFzaXZlIGdp
dCBzdXBwb3J0IHRvIGdpdCBkaXJlY3RvcmllcyBpbiB2aW0uIEZvciBtb3Jl
CmluZm9ybWF0aW9uLCB1c2UgYDpoZWxwIGZ1Z2l0aXZlYAoKVXNlIGA6R3N0
YXR1c2AgdG8gdmlldyBgZ2l0IHN0YXR1c2AgYW5kIHR5cGUgYC1gIG9uIGFu
eSBmaWxlIHRvIHN0YWdlIG9yCnVuc3RhZ2UgaXQuIFR5cGUgYHBgIG9uIGEg
ZmlsZSB0byBlbnRlciBgZ2l0IGFkZCAtcGAgYW5kIHN0YWdlIHNwZWNpZmlj
Cmh1bmtzIGluIHRoZSBmaWxlLgoKVXNlIGA6R2RpZmZgIG9uIGFuIG9wZW4g
ZmlsZSB0byBzZWUgd2hhdCBjaGFuZ2VzIGhhdmUgYmVlbiBtYWRlIHRvIHRo
YXQKZmlsZQoKKipjdXN0b21pemF0aW9ucyoqOgoKKiBgPGxlYWRlcj5nYmAg
bWFwcyB0byBgOkdibGFtZTxDUj5gCiogYDxsZWFkZXI+Z3NgIG1hcHMgdG8g
YDpHc3RhdHVzPENSPmAKKiBgPGxlYWRlcj5nZGAgbWFwcyB0byBgOkdkaWZm
PENSPmAKKiBgPGxlYWRlcj5nbGAgbWFwcyB0byBgOkdsb2c8Q1I+YAoqIGA8
bGVhZGVyPmdjYCBtYXBzIHRvIGA6R2NvbW1pdDxDUj5gCiogYDxsZWFkZXI+
Z3BgIG1hcHMgdG8gYDpHaXQgcHVzaDxDUj5gCgojIyBbR2l0IEd1dHRlcl0o
aHR0cDovL2dpdGh1Yi5jb20vYWlyYmxhZGUvdmltLWdpdGd1dHRlcikKCkEg
VmltIHBsdWdpbiB3aGljaCBzaG93cyBhIGdpdCBkaWZmIGluIHRoZSAnZ3V0
dGVyJyAoc2lnbiBjb2x1bW4pLiBJdApzaG93cyB3aGV0aGVyIGVhY2ggbGlu
ZSBoYXMgYmVlbiBhZGRlZCwgbW9kaWZpZWQsIGFuZCB3aGVyZSBsaW5lcyBo
YXZlCmJlZW4gcmVtb3ZlZC4gWW91IGNhbiBhbHNvIHN0YWdlIGFuZCByZXZl
cnQgaW5kaXZpZHVhbCBodW5rcy4KCiMjIFtab29tV2luXShodHRwOi8vZ2l0
aHViLmNvbS92aW0tc2NyaXB0cy9ab29tV2luKQoKV2hlbiB3b3JraW5nIHdp
dGggc3BsaXQgd2luZG93cywgWm9vbVdpbiBsZXRzIHlvdSB6b29tIGludG8g
YSB3aW5kb3cgYW5kCm91dCBhZ2FpbiB1c2luZyBgQ3RybC1XIG9gCgoqKkN1
c3RvbWl6YXRpb25zKio6IEphbnVzIGJpbmRzIGA8bGVhZGVyPnp3YCB0byBg
Olpvb21XaW5gCgojIyBbSlNPTl0oaHR0cHM6Ly9naXRodWIuY29tL2VsenIv
dmltLWpzb24pCgpCZXR0ZXIgSlNPTiBhbmQgSlNPTlAgd2l0aCBkaXN0aW5j
dCBoaWdobGlnaHRpbmcgZm9yIGtleXdvcmRzIHZlcnN1cwp2YWx1ZXMsIHN0
cmluZ3MgY29sb3JlZCBkaWZmZXJlbnRseSBmcm9tIG51bWJlcnMgYW5kIGJv
b2xlYW5zIGFuZCBkb3VibGUKcXVvdGVzIGNvbmNlYWxlZCAoZGlzYWJsZSB3
aXRoIGBsZXQgZzp2aW1fanNvbl9zeW50YXhfY29uY2VhbCA9IDBgIGluCmB+
Ly52aW1yYy5hZnRlcmAsIGZvbGRpbmcgb2Ygey4uLn0gYW5kIFsuLi5dIGJs
b2NrcyAoZW5hYmxlIHdpdGgKYDpzZXRsb2NhbCBmb2xkbWV0aG9kPXN5bnRh
eGAsIGFuZCBKU09OLXNwZWNpZmljIHdhcm5pbmdzIGhpZ2hsaWdodGVkIGlu
CnJlZC4KCiMjIFtCdWZmZXJHYXRvcl0oaHR0cHM6Ly9naXRodWIuY29tL2pl
ZXRzdWt1bWFyYW4vdmltLWJ1ZmZlcmdhdG9yKQoKQnVmZmVyZ2F0b3IgaXMg
YSBwbHVnaW4gZm9yIGxpc3RpbmcsIG5hdmlnYXRpbmcgYmV0d2VlbiwgYW5k
IHNlbGVjdGluZwpidWZmZXJzIHRvIGVkaXQuIFVwb24gaW52b2NhdGlvbiAo
dXNpbmcgdGhlIGNvbW1hbmQsIGA6QnVmZmVyZ2F0b3JPcGVuYApvciBgQnVm
ZmVyZ2F0b3JUb2dnbGVgLCBvciB0aGUgcHJvdmlkZWQga2V5IG1hcHBpbmcs
IGA8TGVhZGVyPmJgKSwgYQpgY2F0YWxvZ2Agb2YgbGlzdGVkIGJ1ZmZlcnMg
YXJlIGRpc3BsYXllZCBpbiBhIHNlcGFyYXRlIG5ldyB3aW5kb3cgc3BsaXQK
KHZlcnRpY2FsIG9yIGhvcml6b250YWwsIGJhc2VkIG9uIHVzZXIgb3B0aW9u
czsgZGVmYXVsdCA9IHZlcnRpY2FsKS4KRnJvbSB0aGlzICJidWZmZXIgY2F0
YWxvZyIsIGEgYnVmZmVyIGNhbiBiZSBzZWxlY3RlZCBhbmQgb3BlbmVkIGlu
IGFuCmV4aXN0aW5nIHdpbmRvdywgYSBuZXcgd2luZG93IHNwbGl0ICh2ZXJ0
aWNhbCBvciBob3Jpem9udGFsKSwgb3IgYSBuZXcKdGFiIHBhZ2UuCgpTZWxl
Y3RlZCBidWZmZXJzIGNhbiBiZSAicHJldmlld2VkIiwgaS5lLiBvcGVuZWQg
aW4gYSB3aW5kb3cgb3IgdGFiCnBhZ2UsIGJ1dCB3aXRoIGZvY3VzIHJlbWFp
bmluZyBpbiB0aGUgYnVmZmVyIGNhdGFsb2cuIEV2ZW4gYmV0dGVyLCB5b3UK
Y2FuICJ3YWxrIiB1cCBhbmQgZG93biB0aGUgbGlzdCBvZiBidWZmZXJzIHNo
b3duIGluIHRoZSBjYXRhbG9nIGJ5IHVzaW5nCmA8Qy1OPmAgKG9yIGA8U1BB
Q0U+YCkgLyBgPEMtUD5gIChvciBgPEMtU1BBQ0U+YCkuIFRoZXNlIGtleXMg
c2VsZWN0IHRoZQpuZXh0L3ByZXZpb3VzIGJ1ZmZlciBpbiBzdWNjZXNzaW9u
LCByZXNwZWN0aXZlbHksIG9wZW5pbmcgaXQgZm9yIHByZXZpZXcKd2l0aG91
dCBsZWF2aW5nIHRoZSBidWZmZXIgY2F0YWxvZyB2aWV3ZXIuCgojIyBbVnJv
b21dKGh0dHBzOi8vZ2l0aHViLmNvbS9za2FsbmlrL3ZpbS12cm9vbSkKClZS
b29tIGlzIGEgcGx1Z2luIGluc3BpcmVkIGJ5IFtHYXJ5IEJlcm5oYXJkdCdz
IHZpbQpjb25maWddKGh0dHBzOi8vZ2l0aHViLmNvbS9nYXJ5YmVybmhhcmR0
L2RvdGZpbGVzL2Jsb2IvNjkzMzAwNzRiN2ExNWM2N2VmYTQ1OTRhNzFmYTkx
NTkyZjFjZTRmOS8udmltcmMjTDI4Ni0zNDIpCmZvciBydW5uaW5nIHlvdXIg
cnVieSB0ZXN0cy9zcGVjcy9mZWF0dXJlcy4KCkltYWdpbmUgeW91J3JlIGhh
Y2tpbmcgb24gYSBSYWlscyBjb250cm9sbGVyLCB3aGVuIHlvdSBzd2l0Y2gg
dG8gdGhlCnRlc3Qgb3Igc3BlY3MgZm9yIHRoZSBjb250cm9sbGVyLCB5b3Ug
Y2FuIHVzZSBgPGxlYWRlcj5yYCB0byBydW4gYWxsIHRoZQpzcGVjcyBvciBg
PGxlYWRlcj5SYCB0byBydW4gdGhlIGNsb3Nlc3Qgc3BlYywgdGhlbiB5b3Ug
Y2FuIGp1bXAgYmFjayB0bwp0aGUgY29udHJvbGxlciBoYWNrIG9uIGl0IGFu
ZCB1c2UgYDxsZWFkZXI+cmAgdG8gcnVuIHRoZSBsYXN0IHNwZWMgeW91CnJh
biBsYXN0IHRpbWUsIHNvIHlvdSBkb24ndCBuZWVkIHRvIG9wZW4gdGhlIHRl
c3QgYWdhaW4uCgpUaGVuIGJlbmVmaXRzIG9mIHRoaXMgcGx1Z2luIGFyZSB0
byBjZW50cmFsaXplIHlvdXIgd29ya2Zsb3cgaW4gb25lCndpbmRvdywgb25l
IHNvZnR3YXJlIHRvIGRvIGl0IGFsbCwgd2hpY2ggaXMgYSBodWdlIHNwZWVk
dXAgb3ZlciB1c2luZwpgdG11eGAgb3IgbXVsdGlwbGUgdGVybWluYWwgdGFi
cy4KCiMjIFt2aW0tbXVsdGlwbGUtY3Vyc29yc10oaHR0cHM6Ly9naXRodWIu
Y29tL3RlcnJ5bWEvdmltLW11bHRpcGxlLWN1cnNvcnMpCk91dCBvZiB0aGUg
Ym94LCBhbGwgeW91IG5lZWQgdG8ga25vdyBpcyBhIHNpbmdsZSBrZXkgYEN0
cmwtbmAuIFByZXNzaW5nIHRoZSBrZXkKaW4gTm9ybWFsIG1vZGUgaGlnaGxp
Z2h0cyB0aGUgY3VycmVudCB3b3JkIHVuZGVyIHRoZSBjdXJzb3IgaW4gVmlz
dWFsIG1vZGUgYW5kCnBsYWNlcyBhIHZpcnR1YWwgY3Vyc29yIGF0IHRoZSBl
bmQgb2YgaXQuIFByZXNzaW5nIGl0IGFnYWluIGZpbmRzIHRoZSBuZXh0Cm9j
Y3VycmVuY2UgYW5kIHBsYWNlcyBhbm90aGVyIHZpcnR1YWwgY3Vyc29yIGF0
IHRoZSBlbmQgb2YgdGhlIHZpc3VhbCBzZWxlY3Rpb24uCklmIHlvdSBzZWxl
Y3QgbXVsdGlwbGUgbGluZXMgaW4gVmlzdWFsIG1vZGUsIHByZXNzaW5nIHRo
ZSBrZXkgcHV0cyBhIHZpcnR1YWwKY3Vyc29yIGF0IGV2ZXJ5IGxpbmUgYW5k
IGxlYXZlcyB5b3UgaW4gTm9ybWFsIG1vZGUuCgpNb3JlIGF0IFtRdWlja1N0
YXJ0XShodHRwczovL2dpdGh1Yi5jb20vdGVycnltYS92aW0tbXVsdGlwbGUt
Y3Vyc29ycy9ibG9iL21hc3Rlci9SRUFETUUubWQjcXVpY2stc3RhcnQpCgoj
IyBbdmltLXRyYWlsaW5nLXdoaXRlc3BhY2VdKGh0dHBzOi8vZ2l0aHViLmNv
bS9icm9uc29uL3ZpbS10cmFpbGluZy13aGl0ZXNwYWNlKQpUaGlzIHBsdWdp
biBjYXVzZXMgYWxsIHRyYWlsaW5nIHdoaXRlc3BhY2UgdG8gYmUgaGlnaGxp
Z2h0ZWQgaW4gcmVkLgoKVG8gZml4IHRoZSB3aGl0ZXNwYWNlIGVycm9ycywg
anVzdCBjYWxsIDpGaXhXaGl0ZXNwYWNlLiAgQnkgZGVmYXVsdCBpdApvcGVy
YXRlcyBvbiB0aGUgZW50aXJlIGZpbGUuICBQYXNzIGEgcmFuZ2UgKG9yIHVz
ZSBWIHRvIHNlbGVjdCBzb21lIGxpbmVzKQp0byByZXN0cmljdCB0aGUgcG9y
dGlvbiBvZiB0aGUgZmlsZSB0aGF0IGdldHMgZml4ZWQuCgojIyBBZGRpdGlv
bmFsIFN5bnRheGVzCgpKYW51cyBzaGlwcyB3aXRoIGEgZmV3IGFkZGl0aW9u
YWwgc3ludGF4ZXM6CgoqIE1hcmtkb3duIChib3VuZCB0byBcKi5tYXJrZG93
biwgXCoubWQsIGFuZCBcKi5taykKKiBNYXJrZG93biBhdXRvIHN0eWxpbmcg
KGRpc2FibGVkIGJ5IHNldHRpbmcKICBgZzpkaXNhYmxlX21hcmtkb3duX2F1
dG9zdHlsZWAgaW4gYH4vLnZpbXJjLmJlZm9yZWAgPT4gYGxldAogIGc6ZGlz
YWJsZV9tYXJrZG93bl9hdXRvc3R5bGUgPSAxYCkKKiBNdXN0YWNoZSAoYm91
bmQgdG8gXCoubXVzdGFjaGUpCiogSGFtbCAoYm91bmQgdG8gXCouaGFtbCkK
KiBTYXNzIChib3VuZCB0byBcKi5zYXNzKQoqIFNDU1MgKGJvdW5kIHRvIFwq
LnNjc3MpCiogQW4gaW1wcm92ZWQgSmF2YVNjcmlwdCBzeW50YXggKGJvdW5k
IHRvIFwqLmpzKQoqIEphdmFzY3JpcHQgZm9yIGFueSBmaWxlIGhhdmluZyBg
bm9kZWpzYCBpbiB0aGUgc2hlYmFuZy4KKiBNYXAgR2VtZmlsZSwgUmFrZWZp
bGUsIFZhZ3JhbnRmaWxlLCBQcm9jZmlsZSwgVGhvcmZpbGUsIGNvbmZpZy5y
dSBhbmQKICAqLnJha2UgdG8gUnVieS4KKiBHaXQgY29tbWl0cyAoc2V0IHlv
dXIgYEVESVRPUmAgdG8gYHZpbSAtZmAgb3IgIGBtdmltIC1mYCBvbiBPU1gp
CiAgYCQgZWNobyAiZXhwb3J0IEVESVRPUj0ndmltIC1mJyIgPj4gfi8uYmFz
aHJjYCwgeW91IGNhbiBhbHNvIHVzZSBHaXQKICBnbG9iYWwgY29uZmlnIHRv
IHNldCB0aGlzIGlmIHlvdSBoYXZlIEVESVRPUiBzZXQgdG8gc29tZXRoaW5n
IGVsc2UKICBgJCBnaXQgY29uZmlnIC0tZ2xvYmFsIGNvcmUuZWRpdG9yICd2
aW0gLWYnYAoKIyBMaWNlbnNlCgojIyMgVGhpcyBjb2RlIGlzIGZyZWUgdG8g
dXNlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgTUlUIGxpY2Vuc2UuCgpQZXJt
aXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8g
YW55IHBlcnNvbiBvYnRhaW5pbmcKYSBjb3B5IG9mIHRoaXMgc29mdHdhcmUg
YW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlCiJTb2Z0
d2FyZSIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3Ry
aWN0aW9uLCBpbmNsdWRpbmcKd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdo
dHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLApkaXN0
cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhl
IFNvZnR3YXJlLCBhbmQgdG8KcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUg
U29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvCnRo
ZSBmb2xsb3dpbmcgY29uZGl0aW9uczoKClRoZSBhYm92ZSBjb3B5cmlnaHQg
bm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGlu
Y2x1ZGVkCmluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMg
b2YgdGhlIFNvZnR3YXJlLgoKVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJB
UyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsCkVYUFJFU1Mg
T1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUg
V0FSUkFOVElFUyBPRgpNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEg
UEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuCklOIE5P
IEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJT
IEJFIExJQUJMRSBGT1IgQU5ZCkNMQUlNLCBEQU1BR0VTIE9SIE9USEVSIExJ
QUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsClRP
UlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBD
T05ORUNUSU9OIFdJVEggVEhFClNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RI
RVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLgo=
",,7755,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
