name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'stickUp',14054357,b'stickUp a jQuery Plugin for sticky navigation menus.',b'JavaScript',54,1580,,99,False,b'https://api.github.com/repos/LiranCohen/stickUp/forks',"c3RpY2tVcAo9PT09PT09CmEgalF1ZXJ5IHBsdWdpbgoKQSBzaW1wbGUgcGx1
Z2luIHRoYXQgInN0aWNrcyIgYW4gZWxlbWVudCB0byB0aGUgdG9wIG9mIHRo
ZSBicm93c2VyIHdpbmRvdyB3aGlsZSBzY3JvbGxpbmcgcGFzdCBpdCwgYWx3
YXlzIGtlZXBpbmcgaXQgaW4gdmlldy4gVGhpcyBwbHVnaW4gd29ya3Mgb24g
bXVsdGktcGFnZSBzaXRlcywgYnV0IGhhcyBhZGRpdGlvbmFsIGZlYXR1cmVz
IGZvciBvbmUtcGFnZXIgbGF5b3V0cy4KClBsZWFzZSBWaXNpdCB0aGUgPGEg
aHJlZj0iaHR0cDovL2xpcmFuY29oZW4uZ2l0aHViLmlvL3N0aWNrVXAiPkdp
dEh1YiBQYWdlPC9hPiBmb3IgaW5zdGFsbGF0aW9uIGluc3RydWN0aW9ucy4=
",,1580,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'PF_RING',35040096,b'High-speed packet processing framework',b'C',13,1580,,84,False,b'https://api.github.com/repos/ntop/PF_RING/forks',"IVtwZnJpbmddW3BmcmluZ19sb2dvXSAhW250b3BdW250b3BfbG9nb10KIyBQ
Rl9SSU5H4oSiCgpbIVtCdWlsZCBTdGF0dXNdKGh0dHBzOi8vdHJhdmlzLWNp
Lm9yZy9udG9wL1BGX1JJTkcucG5nP2JyYW5jaD1kZXYpXShodHRwczovL3Ry
YXZpcy1jaS5vcmcvbnRvcC9QRl9SSU5HKQoKCiMjIyBJbnRyb2R1Y3Rpb24K
ClBGX1JJTkfihKIgaXMgYSBMaW51eCBrZXJuZWwgbW9kdWxlIGFuZCB1c2Vy
LXNwYWNlIGZyYW1ld29yayB0aGF0IGFsbG93cyB5b3UgdG8gcHJvY2VzcyBw
YWNrZXRzIGF0IGhpZ2gtcmF0ZXMgd2hpbGUgcHJvdmlkaW5nIHlvdSBhIGNv
bnNpc3RlbnQgQVBJIGZvciBwYWNrZXQgcHJvY2Vzc2luZyBhcHBsaWNhdGlv
bnMuCgojIyMgV2hvIG5lZWRzIFBGX1JJTkfihKI/CkJhc2ljYWxseSBldmVy
eW9uZSB3aG8gaGFzIHRvIGhhbmRsZSBtYW55IHBhY2tldHMgcGVyIHNlY29u
ZC4gVGhlIHRlcm0g4oCYbWFueeKAmSBjaGFuZ2VzIGFjY29yZGluZyB0byB0
aGUgaGFyZHdhcmUgeW91IHVzZSBmb3IgdHJhZmZpYyBhbmFseXNpcy4gSXQg
Y2FuIHJhbmdlIGZyb20gODBrIHBrdC9zZWMgb24gYSAxLDJHSHogQVJNIHRv
IG1vcmUgdGhhbiAyME0gcGt0L3NlYyAqKnBlciBjb3JlKiogb24gYSBsb3ct
ZW5kIDIsNUdIeiBYZW9uLiBQRl9SSU5H4oSiIG5vdCBvbmx5IGVuYWJsZXMg
eW91IHRvIGNhcHR1cmUgcGFja2V0cyBmYXN0ZXIsIGl0IGFsc28gY2FwdHVy
ZXMgcGFja2V0cyBtb3JlIGVmZmljaWVudGx5IHByZXNlcnZpbmcgQ1BVIGN5
Y2xlcy4KCiMjIyBEb2N1bWVudGF0aW9uCgpJZiB5b3Ugd2FudCB0byBsZWFy
biBtb3JlIGFib3V0IFBGX1JJTkfihKIgcGxlYXNlIHZpc2l0IHRoZSBbVXNl
cidzIEd1aWRlXShodHRwczovL3d3dy5udG9wLm9yZy9ndWlkZXMvcGZfcmlu
ZykgYW5kIHRoZSBbQVBJIERvY3VtZW50YXRpb25dKGh0dHA6Ly93d3cubnRv
cC5vcmcvZ3VpZGVzL3BmX3JpbmdfYXBpL2ZpbGVzLmh0bWwpLgoKIyMjIERl
dGFpbHMKRm9yIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgUEZfUklOR+KEoiBh
bmQgb3RoZXIgbnRvcCB0ZWNobm9sb2dpZXMsIHBsZWFzZSB2aXNpdCBbaHR0
cDovL250b3Aub3JnXShodHRwOi8vd3d3Lm50b3Aub3JnL3Byb2R1Y3RzL3Bh
Y2tldC1jYXB0dXJlL3BmX3JpbmcvKQoKIyMgTGljZW5zZQpQRl9SSU5H4oSi
IGtlcm5lbCBtb2R1bGUgYW5kIGRyaXZlcnMgYXJlIGRpc3RyaWJ1dGVkIHVu
ZGVyIHRoZSBHTlUgR1BMdjIgbGljZW5zZSwgTEdQTHYyLjEgZm9yIHRoZSB1
c2VyLXNwYWNlIFBGX1JJTkcgbGlicmFyeSwgYW5kIGFyZSBhdmFpbGFibGUg
aW4gc291cmNlIGNvZGUgZm9ybWF0LgoKW3BmcmluZ19sb2dvXTogaHR0cDov
L3d3dy5udG9wLm9yZy93cC1jb250ZW50L3VwbG9hZHMvMjAxNS8wNS9wZl9y
aW5nLWxvZ28tMTUweDE1MC5wbmcKW250b3BfbG9nb106IGh0dHBzOi8vY2Ft
by5naXRodWJ1c2VyY29udGVudC5jb20vNThlMmExZWNmZmY2MmQ4ZWNjOWQ3
NDYzM2JkMTAxM2YyNmUwNmNiYS82ODc0NzQ3MDNhMmYyZjc3Nzc3NzJlNmU3
NDZmNzAyZTZmNzI2NzJmNzc3MDJkNjM2ZjZlNzQ2NTZlNzQyZjc1NzA2YzZm
NjE2NDczMmYzMjMwMzEzNTJmMzAzNTJmNmU3NDZmNzAyZTcwNmU2Nwo=
",,1580,"bGFuZ3VhZ2U6IGMKCmNvbXBpbGVyOgogIC0gY2xhbmcKICAtIGdjYwoKaW5z
dGFsbDogCiAgLSBzdWRvIGFwdC1nZXQgdXBkYXRlIHx8IHRydWUKICAtIHN1
ZG8gYXB0LWdldCBpbnN0YWxsIGJ1aWxkLWVzc2VudGlhbCBsaWJudW1hLWRl
dgoKc2NyaXB0OgogIC0gY2QgdXNlcmxhbmQ7IG1ha2UKCm5vdGlmaWNhdGlv
bnM6CiAgZW1haWw6CiAgICByZWNpcGllbnRzOgogICAgICAtIHBhY2thZ2Vy
QG50b3Aub3JnCiAgICBvbl9zdWNjZXNzOiBuZXZlcgogICAgb25fZmFpbHVy
ZTogYWx3YXlzCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'XcodeSwiftSnippets',28772627,b'Swift 4 code snippets for Xcode ',b'Python',3,1580,,79,False,b'https://api.github.com/repos/burczyk/XcodeSwiftSnippets/forks',"IyBYY29kZSBTd2lmdCBDb2RlIFNuaXBwZXRzCgpJIHdhbnQgdG8gcHJlc2Vu
dCBzb21lIGNvbnZlbmllbnQgY29kZSBzbmlwcGV0cyBJIGdhdGhlcmVkIGZv
ciBbU3dpZnRdKGh0dHBzOi8vZGV2ZWxvcGVyLmFwcGxlLmNvbS9zd2lmdC8p
LgoKIyMjIEFsbCBzbmlwcGV0cyBhcmUgdXBkYXRlZCB0byAqKlN3aWZ0IDQq
KiDinaTvuI8KCiMjIEluc3BpcmF0aW9uCkkgd2FzIGluc3BpcmVkIGJ5IE1h
dHQgVGhvbXBzb24ncyBbWGNvZGUtU25pcHBldHNdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9tYXR0dC9YY29kZS1TbmlwcGV0cykgYXJ0aWNsZSBhbmQgR2l0SHVi
IHJlcG8gYnV0IEkgaGF2ZW4ndCBmb3VuZCBhbnl0aGluZyBzaW1pbGFyIGZv
ciBTd2lmdC4KCkkgYWxzbyB1c2VkIFt0aGF0IHRoaW5nIGluIHN3aWZ0XSho
dHRwczovL3RoYXR0aGluZ2luc3dpZnQuY29tKSBhbmQgW1N3aWZ0U2luZ2xl
dG9uXShodHRwczovL2dpdGh1Yi5jb20vaHBpcXVlL1N3aWZ0U2luZ2xldG9u
KSBhcyBhIHNhbXBsZSBpbXBsZW1lbnRhdGlvbnMuCgojIyBIb3cgdG8gaW1w
b3J0IGFsbCBjb2RlIHNuaXBwZXRzIHRvIFhjb2RlCkFsbCBYY29kZSBjb2Rl
IHNuaXBwZXRzIGV4aXN0IGFzIGEgYC5wbGlzdGAgZmlsZXMgaW4gYH4vTGli
cmFyeS9EZXZlbG9wZXIvWGNvZGUvVXNlckRhdGEvQ29kZVNuaXBwZXRzL2AK
WW91IGNhbiBzaW1wbHkgY29weSBhbGwgY29kZSBzbmlwcGV0cyAoYC5jb2Rl
c25pcHBldGApIGludG8gdGhpcyBmb2xkZXIsIHJlc3RhcnQgWGNvZGUgYW5k
IHlvdSBzaG91bGQgaGF2ZSBhbGwgb2YgdGhlbSByZWFkeSB0byB1c2UuCgpO
b3RlOiBDcmVhdGUgdGhlIGZvbGRlciBpZiBpdCBkb2Vzbid0IGV4aXN0IGFs
cmVhZHkuIEl0IGlzIGNyZWF0ZWQgYnkgWGNvZGUgd2hlbiB1c2VyIGFkZHMg
aGlzIGZpcnN0IGN1c3RvbSBzbmlwcGV0LgoKIyMgVXNhZ2UKSSBuYW1lZCBh
bGwgc25pcHBldHMgdXNpbmcgc2NoZW1lIGBTd2lmdCAuLi5gIGFuZCBzZXQg
YWxsIENvbXBsZXRpb24gU2hvcnRjdXRzIHRvIGBzd2lmdC0uLi5gIHNvIGVh
Y2ggdGltZSB5b3UgdHlwZSBgc3dpZnRgIGluIGNvZGUgZWRpdG9yIHlvdSBz
aG91bGQgc2VlIGFsbCBzbmlwcGV0cyB5b3UgY2FuIHVzZSBpbiB0aGF0IHBs
YWNlLgoKIVtYY29kZSB1c2UgU3dpZnQgY29kZSBzbmlwcGV0c10oaHR0cHM6
Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2J1cmN6eWsvWGNvZGVTd2lm
dFNuaXBwZXRzL21hc3Rlci9hc3NldHMvdXNlLmdpZikKCiMjIEhvdyB0byBj
cmVhdGUgeW91ciBvd24gc25pcHBldHMKVG8gYWRkIGNvZGUgc25pcHBldCB0
byBYY29kZSBleHBhbmQgKipVdGlsaXRpZXMqKiByaWdodCBwYW5lbCBhbmQg
cHJlc3MgYHt9YCBidXR0b24gKCpTaG93IHRoZSBDb2RlIFNuaXBwZXQgbGli
cmFyeSopIGluIGxvd2VyIHBhbmVsLgpUaGVuIHNlbGVjdCBhIGNvZGUgeW91
IHdvdWxkIGxpa2UgdG8gdHJlYXQgYXMgYSBzbmlwcGV0LCBwcmVzcyBhbmQg
aG9sZCBhIGxlZnQgbW91c2UgYnV0dG9uIGZvciBhIHdoaWxlIGFuZCBkcmFn
IHdob2xlIHNlbGVjdGlvbiB0byB0aGUgcmlnaHQgcGFuZWwgKGlmIHlvdSBk
cmFnIHRvbyBlYXJseSB5b3UnbGwgcHJvYmFibHkgb25seSBkZXNlbGVjdCB0
ZXh0OyB5b3UgY2FuIGFsc28gdHJ5IGRyYWdnaW5nIGZyb20gYSB3aGl0ZXNw
YWNlIGluc3RlYWQgb2YgdGhlIGxldHRlcikuCgohW1hjb2RlIGNyZWF0ZSBj
b2RlIHNuaXBwZXRdKGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNv
bS9idXJjenlrL1hjb2RlU3dpZnRTbmlwcGV0cy9tYXN0ZXIvYXNzZXRzL2Ny
ZWF0ZS5naWYpCgojIyMgUGxhY2Vob2xkZXIgdG9rZW5zCklmIHlvdSB3YW50
IHRvIGFkZCB0aGlzIG5pY2UgcGxhY2Vob2xkZXIgaW4gcm91bmRlZCBibHVl
IHJlY3Qgc2ltcGx5IHB1dCBpdCBiZXR3ZWVuIGA8I2AgYW5kIGAjPmAgYW5k
IGl0IHdpbGwgYmUgdHJhbnNmb3JtZWQgaW4gYm90aCBlZGl0b3IgYW5kIGZp
bmFsIHNuaXBwZXQuCgojIyBTbmlwcGV0cwpDdXJyZW50bHkgZXhpc3Rpbmcg
c25pcHBldHMgKEkgaG9wZSB0aGV5IHdpbGwgYmUgdXBkYXRlZCBvbiBhIHJl
Z3VsYXIgYmFzaXMgd2l0aCB5b3VyIGhlbHAgOikgKToKCmBgYApzd2lmdC1k
b2N1bWVudGRpcmVjdG9yeSAgICAgICAgICAgICAgRG9jdW1lbnQgZGlyZWN0
b3J5IHBhdGggc25pcHBldCBmb3IgU3dpZnQKc3dpZnQtZGlzcGF0Y2hhZnRl
ciAgICAgICAgICAgICAgICAgIEdDRCBkaXNwYXRjaF9hZnRlciBzbmlwcGV0
IGZvciBTd2lmdAoKc3dpZnQtZGlzcGF0Y2hhc3luYyAgICAgICAgICAgICAg
ICAgIEdDRCBkaXNwYXRjaF9hc3luYyBzbmlwcGV0IGZvciBTd2lmdApzd2lm
dC1uc2xvY2FsaXplZHN0cmluZyAgICAgICAgICAgICAgTlNMb2NhbGl6ZWRT
dHJpbmcgZnVuY3Rpb24gc25pcHBldCBmb3IgU3dpZnQKc3dpZnQtZGlzcGF0
Y2htYWluICAgICAgICAgICAgICAgICAgIEdDRCBkaXNwYXRjaF9hc3luYyBv
biBtYWluIHF1ZXVlIHNuaXBwZXQgZm9yIFN3aWZ0CnN3aWZ0LWNsb3N1cmV0
eXBlYWxpYXMgICAgICAgICAgICAgICBDbG9zdXJlIHR5cGVhbGlhcyB3aXRo
IGFyZ3VtZW50cyBhbmQgcmV0dXJuIHZhbHVlIHNuaXBwZXQgZm9yIFN3aWZ0
CnN3aWZ0LXdlYWsgICAgICAgICAgICAgICAgICAgICAgICAgICB3ZWFraWZ5
IHNlbGYgaW4gY2xvc3VyZQpzd2lmdC11aXRhYmxldmlld2RlbGVnYXRlICAg
ICAgICAgICAgVUlUYWJsZVZpZXdEZWxlZ2F0ZSBzbmlwcGV0IGZvciBTd2lm
dApzd2lmdC1mb3JpbiAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yLWlu
IGxvb3AgdGhhdCBjYXN0cyBvYmplY3RzIGlubGluZQpzd2lmdC1pYm8gICAg
ICAgICAgICAgICAgICAgICAgICAgICAgU3R1YiBvdXQgSUJPdXRsZXQKc3dp
ZnQtc29ydGFycmF5b2ZzdHJpbmdzICAgICAgICAgICAgIFN3aWZ0IFN0cmlu
ZyBBcnJheSBsb2NhbGUtYXdhcmUgc29ydGluZwpzd2lmdC1wcm9wICAgICAg
ICAgICAgICAgICAgICAgICAgICAgQXV0by1DcmVhdGUgcHJvcGVydHkgc3R1
Ygpzd2lmdC1jbG9zdXJlb3B0aW9uYWx0eXBlYWxpYXMgICAgICAgT3B0aW9u
YWwgY2xvc3VyZSB0eXBlYWxpYXN0IHdpdGggYXJndW1lbnRzIGFuZCByZXR1
cm4gdmFsdWUgc25pcHBldCBmb3IgU3dpZnQKc3dpZnQtdXJsc2Vzc2lvbi1k
ZWxlZ2F0ZSAgICAgICAgICAgIFN3aWZ0IEhUVFAgUmVxdWVzdCBXaXRoIERl
bGVnYXRlIHNldApzd2lmdC1tZXNzYWdlICAgICAgICAgICAgICAgICAgICAg
ICAgTUZNZXNzYWdlQ29tcG9zZVZpZXdDb250cm9sbGVyIHNuaXBwZXQgZm9y
IFN3aWZ0CnN3aWZ0LXVpdmlld2NvbnRyb2xsZXJsaWZlY3ljbGUgICAgICBV
SVZpZXdDb250cm9sbGVyIGxpZmVjeWNsZSBzbmlwcGV0IGZvciBTd2lmdApz
d2lmdC11aWNvbGxlY3Rpb252aWV3ZGVsZWdhdGUgICAgICAgVUlDb2xsZWN0
aW9uVmlld0RlbGVnYXRlIHNuaXBwZXQgZm9yIFN3aWZ0CnN3aWZ0LXVpcmVt
b3Rlbm90aWZpY2F0aW9uICAgICAgICAgICBVSVJlbW90ZU5vdGlmaWNhdGlv
biByZWdpc3RyYXRpb24gYW5kIGhhbmRsaW5nIHNuaXBwZXQgZm9yIFN3aWZ0
CnN3aWZ0LW1hcmsgICAgICAgICAgICAgICAgICAgICAgICAgICBEaXZpZGVy
IGxhYmVsIGZvciBzZXBhcmF0aW5nIGNvZGUgaW50byBzZWN0aW9ucwpzd2lm
dC1kaWRiZWNvbWVhY3RpdmUgICAgICAgICAgICAgICAgVUlBcHBsaWNhdGlv
bkRpZEJlY29tZUFjdGl2ZU5vdGlmaWNhdGlvbiBvYnNlcnZlciBzbmlwcGV0
IGZvciBTd2lmdApzd2lmdC11cmxzZXNzaW9uLWRhdGF0YXNrICAgICAgICAg
ICAgU3dpZnQgU2ltcGxlIEhUVFAgUmVxdWVzdApzd2lmdC1tYWlsICAgICAg
ICAgICAgICAgICAgICAgICAgICAgTUZNYWlsQ29tcG9zZVZpZXdDb250cm9s
bGVyIHNuaXBwZXQgZm9yIFN3aWZ0CnN3aWZ0LWliYSAgICAgICAgICAgICAg
ICAgICAgICAgICAgICBDcmVhdGUgSUJBY3Rpb24gbWV0aG9kIHN0dWIKc3dp
ZnQtdWljb2xsZWN0aW9udmlld2RhdGFzb3VyY2UgICAgIFVJQ29sbGVjdGlv
blZpZXdEYXRhU291cmNlIHNuaXBwZXQgZm9yIFN3aWZ0CnN3aWZ0LXNpbmds
ZXRvbiAgICAgICAgICAgICAgICAgICAgICBTaW5nbGV0b24gcGF0dGVybiBm
b3IgU3dpZnQKc3dpZnQtdWl0YWJsZXZpZXdkYXRhc291cmNlICAgICAgICAg
IFVJVGFibGVWaWV3RGF0YVNvdXJjZSBzbmlwcGV0IGZvciBTd2lmdApzd2lm
dC11aWFwcGxpY2F0aW9uZGVsZWdhdGUgICAgICAgICAgQ29tbW9ubHkgdXNl
ZCBhcHAgbGlmZSBjeWNsZSBtZXRob2RzCnN3aWZ0LWVsZWdhbnRtYXJrICAg
ICAgICAgICAgICAgICAgICBEZWNvcmF0ZXMgbWFyayBzdGF0ZW1lbnRzIGFu
ZCBtYWtlcyBpdCBuZWF0IHdoZW4gbG9va2luZyB0aHJvdWdoIGl0ZW1zIGlu
IEZpbGUgSnVtcCBCYXIKYGBgCgoKIyMgTW9yZSBzbmlwcGV0cz8KVGhpcyBp
cyBhIGdvb2Qgc3RhcnQgYnV0IEkgZW5jb3VyYWdlIHlvdSB0byBjcmVhdGUg
eW91ciBvd24gc25pcHBldHMgb3IgY29ycmVjdCBleGlzdGluZyBvbmVzIGFu
ZCBjcmVhdGUgUHVsbCBSZXF1ZXN0cy4gUGxlYXNlIHByb3ZpZGUgcGxhaW4g
c25pcHBldHMgYXMgYC5wbGlzdGAgZmlsZXMgc28gdGhleSBjYW4gYmUgZWFz
aWx5IGltcG9ydGVkLgpZb3UgY2FuIHVzZSBgcGxpc3QvZ2VuZXJhdGVfbGlz
dC5weWAgc2NyaXB0IHRvIGdlbmVyYXRlIHNuaXBwZXRzIGxpc3QgYnkgcnVu
bmluZzogYHB5dGhvbiBnZW5lcmF0ZV9saXN0LnB5YC4KCiMjIERvIHlvdSBs
aWtlIGl0PwpEbyB5b3UgbGlrZSB0aGlzIHJlcG8/IFNoYXJlIGl0IG9uIFR3
aXR0ZXIsIEZhY2Vib29rLCBHb29nbGUrIG9yIGFueXdoZXJlIHlvdSBsaWtl
IHNvIHRoYXQgbW9yZSBvZiB1cyBjYW4gdXNlIGl0IGFuZCBoZWxwLiBUaGFu
a3MhCg==
",,1580,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'LexikJWTAuthenticationBundle',18628501,b'JWT authentication for your Symfony REST API',b'PHP',78,1580,,59,False,b'https://api.github.com/repos/lexik/LexikJWTAuthenticationBundle/forks',"TGV4aWtKV1RBdXRoZW50aWNhdGlvbkJ1bmRsZQo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09CgpbIVtCdWlsZCBTdGF0dXNdKGh0dHBzOi8vdHJhdmlz
LWNpLm9yZy9sZXhpay9MZXhpa0pXVEF1dGhlbnRpY2F0aW9uQnVuZGxlLnN2
Zz9icmFuY2g9bWFzdGVyKV0oaHR0cHM6Ly90cmF2aXMtY2kub3JnL2xleGlr
L0xleGlrSldUQXV0aGVudGljYXRpb25CdW5kbGUpClshW1N0eWxlQ0ldKGh0
dHBzOi8vc3R5bGVjaS5pby9yZXBvcy8xODYyODUwMS9zaGllbGQ/YnJhbmNo
PW1hc3RlcildKGh0dHBzOi8vc3R5bGVjaS5pby9yZXBvcy8xODYyODUwMT9i
cmFuY2g9bWFzdGVyKQpbIVtTY3J1dGluaXplciBDb2RlIFF1YWxpdHldKGh0
dHBzOi8vc2NydXRpbml6ZXItY2kuY29tL2cvbGV4aWsvTGV4aWtKV1RBdXRo
ZW50aWNhdGlvbkJ1bmRsZS9iYWRnZXMvcXVhbGl0eS1zY29yZS5wbmc/Yj1t
YXN0ZXIpXShodHRwczovL3NjcnV0aW5pemVyLWNpLmNvbS9nL2xleGlrL0xl
eGlrSldUQXV0aGVudGljYXRpb25CdW5kbGUvP2JyYW5jaD1tYXN0ZXIpClsh
W1NlbnNpb0xhYnNJbnNpZ2h0XShodHRwczovL2luc2lnaHQuc2Vuc2lvbGFi
cy5jb20vcHJvamVjdHMvNjc1NzNiNmYtZTE4Mi00Mzk0LWIyNmEtNjQ5YzMy
Mzc4NGY2L21pbmkucG5nKV0oaHR0cHM6Ly9pbnNpZ2h0LnNlbnNpb2xhYnMu
Y29tL3Byb2plY3RzLzY3NTczYjZmLWUxODItNDM5NC1iMjZhLTY0OWMzMjM3
ODRmNikKWyFbTGF0ZXN0IFN0YWJsZSBWZXJzaW9uXShodHRwczovL3Bvc2Vy
LnB1Z3gub3JnL2xleGlrL2p3dC1hdXRoZW50aWNhdGlvbi1idW5kbGUvdi9z
dGFibGUuc3ZnKV0oaHR0cHM6Ly9wYWNrYWdpc3Qub3JnL3BhY2thZ2VzL2xl
eGlrL2p3dC1hdXRoZW50aWNhdGlvbi1idW5kbGUpCgpUaGlzIGJ1bmRsZSBw
cm92aWRlcyBKV1QgKEpzb24gV2ViIFRva2VuKSBhdXRoZW50aWNhdGlvbiBm
b3IgeW91ciBTeW1mb255IEFQSS4KCkl0IGlzIGNvbXBhdGlibGUgYW5kIHRl
c3RlZCB3aXRoIFBIUCA1LjUsIDcuMiwgNy4zLCBvbiBTeW1mb255IDMuNCBh
bmQgNC4yLgoKRG9jdW1lbnRhdGlvbgotLS0tLS0tLS0tLS0tCgpUaGUgYnVs
ayBvZiB0aGUgZG9jdW1lbnRhdGlvbiBpcyBzdG9yZWQgaW4gdGhlIFtgUmVz
b3VyY2VzL2RvY2BdKFJlc291cmNlcy9kb2MvaW5kZXgubWQpIGRpcmVjdG9y
eSBvZiB0aGlzIGJ1bmRsZToKCiogW0dldHRpbmcgc3RhcnRlZF0oUmVzb3Vy
Y2VzL2RvYy9pbmRleC5tZCNnZXR0aW5nLXN0YXJ0ZWQpCiAgKiBbUHJlcmVx
dWlzaXRlc10oUmVzb3VyY2VzL2RvYy9pbmRleC5tZCNwcmVyZXF1aXNpdGVz
KQogICogW0luc3RhbGxhdGlvbl0oUmVzb3VyY2VzL2RvYy9pbmRleC5tZCNp
bnN0YWxsYXRpb24pCiAgKiBbQ29uZmlndXJhdGlvbl0oUmVzb3VyY2VzL2Rv
Yy9pbmRleC5tZCNjb25maWd1cmF0aW9uKQogICogW1VzYWdlXShSZXNvdXJj
ZXMvZG9jL2luZGV4Lm1kI3VzYWdlKQogICogW05vdGVzXShSZXNvdXJjZXMv
ZG9jL2luZGV4Lm1kI25vdGVzKQoqIFtGdXJ0aGVyIGRvY3VtZW50YXRpb25d
KFJlc291cmNlcy9kb2MvaW5kZXgubWQjZnVydGhlci1kb2N1bWVudGF0aW9u
KQogICogW0NvbmZpZ3VyYXRpb24gcmVmZXJlbmNlXShSZXNvdXJjZXMvZG9j
LzEtY29uZmlndXJhdGlvbi1yZWZlcmVuY2UubWQpCiAgKiBbRGF0YSBjdXN0
b21pemF0aW9uIGFuZCB2YWxpZGF0aW9uXShSZXNvdXJjZXMvZG9jLzItZGF0
YS1jdXN0b21pemF0aW9uLm1kKQogICogW0Z1bmN0aW9uYWwgdGVzdGluZ10o
UmVzb3VyY2VzL2RvYy8zLWZ1bmN0aW9uYWwtdGVzdGluZy5tZCkKICAqIFtX
b3JraW5nIHdpdGggQ09SUyByZXF1ZXN0c10oUmVzb3VyY2VzL2RvYy80LWNv
cnMtcmVxdWVzdHMubWQpCiAgKiBbSldUIGVuY29kZXIgc2VydmljZSBjdXN0
b21pemF0aW9uXShSZXNvdXJjZXMvZG9jLzUtZW5jb2Rlci1zZXJ2aWNlLm1k
KQogICogW0V4dGVuZGluZyBKV1RUb2tlbkF1dGhlbnRpY2F0b3JdKFJlc291
cmNlcy9kb2MvNi1leHRlbmRpbmctand0LWF1dGhlbnRpY2F0b3IubWQpCiAg
KiBbQ3JlYXRpbmcgSldUIHRva2VucyBwcm9ncmFtbWF0aWNhbGx5XShSZXNv
dXJjZXMvZG9jLzctbWFudWFsLXRva2VuLWNyZWF0aW9uLm1kKQogICogW0Eg
ZGF0YWJhc2UtbGVzcyB1c2VyIHByb3ZpZGVyXShSZXNvdXJjZXMvZG9jLzgt
and0LXVzZXItcHJvdmlkZXIubWQpCgpDb21tdW5pdHkgU3VwcG9ydAotLS0t
LS0tLS0tLS0tLS0tLQoKUGxlYXNlIGNvbnNpZGVyIFtvcGVuaW5nIGEgcXVl
c3Rpb24gb24gU3RhY2tPdmVyZmxvd10oaHR0cDovL3N0YWNrb3ZlcmZsb3cu
Y29tL3F1ZXN0aW9ucy9hc2spIHVzaW5nIHRoZSBbYGxleGlrand0YXV0aGJ1
bmRsZWAgdGFnXShodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25z
L3RhZ2dlZC9sZXhpa2p3dGF1dGhidW5kbGUpLCAgaXQgaXMgdGhlIG9mZmlj
aWFsIHN1cHBvcnQgcGxhdGZvcm0gZm9yIHRoaXMgYnVuZGxlLgogIApHaXRo
dWIgSXNzdWVzIGFyZSBkZWRpY2F0ZWQgdG8gYnVnIHJlcG9ydHMgYW5kIGZl
YXR1cmUgcmVxdWVzdHMuCgpDb250cmlidXRpbmcKLS0tLS0tLS0tLS0tCgpT
ZWUgdGhlIFtDT05UUklCVVRJTkddKENPTlRSSUJVVElORy5tZCkgZmlsZS4K
ClVwZ3JhZGluZyBmcm9tIDEueAotLS0tLS0tLS0tLS0tLS0tLS0tCgpQbGVh
c2Ugc2VlIHRoZSBbVVBHUkFERV0oVVBHUkFERS0yLjAubWQpIGZpbGUuCgpD
cmVkaXRzCi0tLS0tLS0KCiogTGV4aWsgPGRldkBsZXhpay5mcj4KKiBbQWxs
IGNvbnRyaWJ1dG9yc10oaHR0cHM6Ly9naXRodWIuY29tL2xleGlrL0xleGlr
SldUQXV0aGVudGljYXRpb25CdW5kbGUvZ3JhcGhzL2NvbnRyaWJ1dG9ycykK
CkxpY2Vuc2UKLS0tLS0tLQoKVGhpcyBidW5kbGUgaXMgdW5kZXIgdGhlIE1J
VCBsaWNlbnNlLiAgCkZvciB0aGUgd2hvbGUgY29weXJpZ2h0LCBzZWUgdGhl
IFtMSUNFTlNFXShMSUNFTlNFKSBmaWxlIGRpc3RyaWJ1dGVkIHdpdGggdGhp
cyBzb3VyY2UgY29kZS4K
",,1580,"bGFuZ3VhZ2U6IHBocAoKZGlzdDogdHJ1c3R5CgptYXRyaXg6CiAgZmFzdF9m
aW5pc2g6IHRydWUKICBpbmNsdWRlOgogICAgLSBwaHA6IDUuNQogICAgICBl
bnY6IFNZTUZPTllfVkVSU0lPTj0zLjQuKgogICAgLSBwaHA6IDcuMwogICAg
ICBlbnY6IFNZTUZPTllfVkVSU0lPTj00LjMuKgogICAgLSBwaHA6IDcuMwog
ICAgICBlbnY6IFNZTUZPTllfVkVSU0lPTj00LjQuKgogICAgLSBwaHA6IDcu
MwogICAgICBlbnY6IFNZTUZPTllfVkVSU0lPTj01LjAuKgoKY2FjaGU6CiAg
ZGlyZWN0b3JpZXM6CiAgICAtICRIT01FLy5jb21wb3Nlci9jYWNoZQoKYmVm
b3JlX2luc3RhbGw6CiAgLSBwaHBlbnYgY29uZmlnLXJtIHhkZWJ1Zy5pbmkg
fHwgdHJ1ZQogIC0gaWYgWyAiJERFUEVOREVOQ0lFUyIgPSAiZGV2IiBdOyB0
aGVuIHBlcmwgLXBpIC1lICdzL159JC8sIm1pbmltdW0tc3RhYmlsaXR5Ijoi
ZGV2In0vJyBjb21wb3Nlci5qc29uOyBmaTsKICAtIGlmIFsgIiRTWU1GT05Z
X1ZFUlNJT04iICE9ICIiIF07IHRoZW4gY29tcG9zZXIgcmVxdWlyZSAic3lt
Zm9ueS9zeW1mb255OiR7U1lNRk9OWV9WRVJTSU9OfSIgLS1uby11cGRhdGU7
IGZpOwoKaW5zdGFsbDogY29tcG9zZXIgdXBkYXRlIC0tbm8taW50ZXJhY3Rp
b24KCnNjcmlwdDogY29tcG9zZXIgdGVzdAo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'awesome-resty',30886767,"b'A List of Quality OpenResty Libraries, and Resources.'",,2,1580,,167,False,b'https://api.github.com/repos/bungle/awesome-resty/forks',"IyBhd2Vzb21lLXJlc3R5CgpBIExpc3Qgb2YgT3BlblJlc3R5IC8gTmdpbngg
bW9kdWxlcywgTHVhIGxpYnJhcmllcywgYW5kIHJlbGF0ZWQgcmVzb3VyY2Vz
LgoKIyMgV2hhdCBpcyBPcGVuUmVzdHkKCiFbT3BlblJlc3R5IExvZ29dKGh0
dHBzOi8vZ2l0aHViLmNvbS9idW5nbGUvYXdlc29tZS1yZXN0eS9yYXcvbWFz
dGVyL2ltYWdlcy9sb2dvLnBuZykKCk9wZW5SZXN0eSBpcyBhIGZ1bGwtZmxl
ZGdlZCB3ZWIgcGxhdGZvcm0gYnkgaW50ZWdyYXRpbmcgdGhlIHN0YW5kYXJk
IE5naW54IGNvcmUsIEx1YUpJVCwgbWFueSBjYXJlZnVsbHkgd3JpdHRlbiBM
dWEgbGlicmFyaWVzLCBsb3RzIG9mIGhpZ2ggcXVhbGl0eSAzcmQtcGFydHkg
TmdpbnggbW9kdWxlcywgYW5kIG1vc3Qgb2YgdGhlaXIgZXh0ZXJuYWwgZGVw
ZW5kZW5jaWVzLiBJdCBpcyBkZXNpZ25lZCB0byBoZWxwIGRldmVsb3BlcnMg
ZWFzaWx5IGJ1aWxkIHNjYWxhYmxlIHdlYiBhcHBsaWNhdGlvbnMsIHdlYiBz
ZXJ2aWNlcywgYW5kIGR5bmFtaWMgd2ViIGdhdGV3YXlzLgoKQnkgdGFraW5n
IGFkdmFudGFnZSBvZiB2YXJpb3VzIHdlbGwtZGVzaWduZWQgTmdpbnggbW9k
dWxlcyAobW9zdCBvZiB3aGljaCBhcmUgZGV2ZWxvcGVkIGJ5IHRoZSBPcGVu
UmVzdHkgdGVhbSB0aGVtc2VsdmVzKSwgT3BlblJlc3R5IGVmZmVjdGl2ZWx5
IHR1cm5zIHRoZSBuZ2lueCBzZXJ2ZXIgaW50byBhIHBvd2VyZnVsIHdlYiBh
cHAgc2VydmVyLCBpbiB3aGljaCB0aGUgd2ViIGRldmVsb3BlcnMgY2FuIHVz
ZSB0aGUgTHVhIHByb2dyYW1taW5nIGxhbmd1YWdlIHRvIHNjcmlwdCB2YXJp
b3VzIGV4aXN0aW5nIG5naW54IEMgbW9kdWxlcyBhbmQgTHVhIG1vZHVsZXMg
YW5kIGNvbnN0cnVjdCBleHRyZW1lbHkgaGlnaC1wZXJmb3JtYW5jZSB3ZWIg
YXBwbGljYXRpb25zIHRoYXQgYXJlIGNhcGFibGUgdG8gaGFuZGxlIDEwSyB+
IDEwMDBLKyBjb25uZWN0aW9ucyBpbiBhIHNpbmdsZSBib3guCgpPcGVuUmVz
dHkgYWltcyB0byBydW4geW91ciBzZXJ2ZXItc2lkZSB3ZWIgYXBwIGNvbXBs
ZXRlbHkgaW4gdGhlIE5naW54IHNlcnZlciwgbGV2ZXJhZ2luZyBOZ2lueCdz
IGV2ZW50IG1vZGVsIHRvIGRvIG5vbi1ibG9ja2luZyBJL08gbm90IG9ubHkg
d2l0aCB0aGUgSFRUUCBjbGllbnRzLCBidXQgYWxzbyB3aXRoIHJlbW90ZSBi
YWNrZW5kcyBsaWtlIE15U1FMLCBQb3N0Z3JlU1FMLCBNZW1jYWNoZWQsIGFu
ZCBSZWRpcy4KClJlYWwtd29ybGQgYXBwbGljYXRpb25zIG9mIE9wZW5SZXN0
eSByYW5nZSBmcm9tIGR5bmFtaWMgd2ViIHBvcnRhbHMgYW5kIHdlYiBnYXRl
d2F5cywgd2ViIGFwcGxpY2F0aW9uIGZpcmV3YWxscywgd2ViIHNlcnZpY2Ug
cGxhdGZvcm1zIGZvciBtb2JpbGUgYXBwcy9hZHZlcnRpc2luZy9kaXN0cmli
dXRlZCBzdG9yYWdlL2RhdGEgYW5hbHl0aWNzLCB0byBmdWxsLWZsZWRnZWQg
ZHluYW1pYyB3ZWIgYXBwbGljYXRpb25zIGFuZCB3ZWIgc2l0ZXMuIFRoZSBo
YXJkd2FyZSB1c2VkIHRvIHJ1biBPcGVuUmVzdHkgYWxzbyByYW5nZXMgZnJv
bSB2ZXJ5IGJpZyBtZXRhbHMgdG8gZW1iZWRkZWQgZGV2aWNlcyB3aXRoIHZl
cnkgbGltaXRlZCByZXNvdXJjZXMuIEl0IGlzIG5vdCB1bmNvbW1vbiBmb3Ig
b3VyIHByb2R1Y3Rpb24gdXNlcnMgdG8gc2VydmUgYmlsbGlvbnMgb2YgcmVx
dWVzdHMgZGFpbHkgZm9yIG1pbGxpb25zIG9mIGFjdGl2ZSB1c2VycyB3aXRo
IGp1c3QgYSBoYW5kZnVsIG9mIG1hY2hpbmVzLgoKT3BlblJlc3R5IGlzIG5v
dCBhbiBOZ2lueCBmb3JrLiBJdCBpcyBqdXN0IGEgc29mdHdhcmUgYnVuZGxl
LiBNb3N0IG9mIHRoZSBwYXRjaGVzIGFwcGxpZWQgdG8gdGhlIE5naW54IGNv
cmUgaW4gT3BlblJlc3R5IGhhdmUgYWxyZWFkeSBiZWVuIHN1Ym1pdHRlZCB0
byB0aGUgb2ZmaWNpYWwgTmdpbnggdGVhbSBhbmQgbW9zdCBvZiB0aGUgcGF0
Y2hlcyBzdWJtaXR0ZWQgaGF2ZSBhbHNvIGJlZW4gYWNjZXB0ZWQuIFdlIGFy
ZSB0cnlpbmcgaGFyZCBub3QgdG8gZm9yayBOZ2lueCBhbmQgYWx3YXlzIHRv
IHVzZSB0aGUgbGF0ZXN0IGJlc3QgTmdpbnggY29yZSBmcm9tIHRoZSBvZmZp
Y2lhbCBOZ2lueCB0ZWFtLgoKIyMgT2ZmaWNpYWwgQ2hhbm5lbHMKCiogV2Vi
IFNpdGU6IGh0dHA6Ly9vcGVucmVzdHkub3JnLwoqIE1haWxpbmcgTGlzdDog
aHR0cHM6Ly9ncm91cHMuZ29vZ2xlLmNvbS9mb3J1bS8jIWZvcnVtL29wZW5y
ZXN0eS1lbiAoW0NoaW5lc2UgTGlzdF0oaHR0cHM6Ly9ncm91cHMuZ29vZ2xl
LmNvbS9mb3J1bS8jIWZvcnVtL29wZW5yZXN0eSkpCiogR2l0aHViIE9yZ2Fu
aXphdGlvbjogaHR0cHM6Ly9naXRodWIuY29tL29wZW5yZXN0eQoqIExlYWQg
RGV2ZWxvcGVyOiBbQGFnZW50emhdKGh0dHBzOi8vZ2l0aHViLmNvbS9hZ2Vu
dHpoKQoqIE9wZW5SZXN0eSBQYWNrYWdlIE1hbmFnZXIgKGBvcG1gKTogW3Bh
Y2thZ2UgcmVwb3NpdG9yeV0oaHR0cHM6Ly9vcG0ub3BlbnJlc3R5Lm9yZy8p
LCBbb3BtIHNvdXJjZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVucmVzdHkv
b3BtKQoKIyMgSG93IHRvIENvbnRyaWJ1dGUgb24gdGhpcyBMaXN0PwoKVGhl
cmUgYXJlIGF0IGxlYXN0IHRocmVlIGRpZmZlcmVudCB3YXlzIHRvIGNvbnRy
aWJ1dGU6CgoxLiBbQ3JlYXRlIGEgTmV3IElzc3VlXShodHRwczovL2dpdGh1
Yi5jb20vYnVuZ2xlL2F3ZXNvbWUtcmVzdHkvaXNzdWVzL25ldykgd2hlcmUg
eW91IGRlc2NyaWJlIHRoZSBuZWVkZWQgYWRkaXRpb25zLCBkZWxldGlvbnMg
b3IgY2hhbmdlcy4KMi4gW0ZvcmsgdGhpcyByZXBvc2l0b3J5XShodHRwczov
L2dpdGh1Yi5jb20vYnVuZ2xlL2F3ZXNvbWUtcmVzdHkvZm9yaykgYW5kIG1h
a2UgdGhlIGNoYW5nZXMsIGFuZCBjcmVhdGUgYSBwdWxsIHJlcXVlc3QuCjMu
IFtQb3N0IGEgcmVwbHldKGh0dHBzOi8vZ3JvdXBzLmdvb2dsZS5jb20vZm9y
dW0vIyF0b3BpYy9vcGVucmVzdHktZW4vVlNqNF84R05PUkkpIGluIHRoZSBh
d2Vzb21lLXJlc3R5IHRocmVhZCBpbiBvcGVucmVzdHktZW4gbWFpbGluZyBs
aXN0LgoKIyMgQ29udGVudHMKCiogW01vZHVsZXNdKCNtb2R1bGVzKQogICog
W0NvcmUgTW9kdWxlc10oI2NvcmUtbW9kdWxlcykKICAqIFtDb3JlIE5naW54
IE1vZHVsZXNdKCNjb3JlLW5naW54LW1vZHVsZXMpCiAgKiBbVGhpcmQtcGFy
dHkgTmdpbnggTW9kdWxlc10oI3RoaXJkLXBhcnR5LW5naW54LW1vZHVsZXMp
CiogW0xpYnJhcmllc10oI2xpYnJhcmllcykKICAqIFtDb3JlIExpYnJhcmll
c10oI2NvcmUtbGlicmFyaWVzKQogICogW1dlYiBGcmFtZXdvcmtzXSgjd2Vi
LWZyYW1ld29ya3MpCiAgKiBbV2ViIERldmVsb3BtZW50IEVzc2VudGlhbHNd
KCN3ZWItZGV2ZWxvcG1lbnQtZXNzZW50aWFscykKICAqIFtSb3V0aW5nIExp
YnJhcmllc10oI3JvdXRpbmctbGlicmFyaWVzKQogICogW1JlcXVlc3QgQXJn
bWVudHMgUGFyc2Vyc10oI3JlcXVlc3QtYXJnbWVudHMtcGFyc2VycykKICAq
IFtNaWRkbGV3YXJlIGFuZCBBUEkgVG9vbHNdKCNtaWRkbGV3YXJlLWFuZC1h
cGktdG9vbHMpCiAgKiBbVGVtcGxhdGluZ10oI3RlbXBsYXRpbmcpCiAgKiBb
VmFsaWRhdGlvbl0oI3ZhbGlkYXRpb24pCiAgKiBbQXV0aGVudGljYXRpb24g
YW5kIEF1dGhvcml6YXRpb25dKCNhdXRoZW50aWNhdGlvbi1hbmQtYXV0aG9y
aXphdGlvbikKICAqIFtDcnlwdG9ncmFwaHldKCNjcnlwdG9ncmFwaHkpCiAg
KiBbTmV0d29ya2luZ10oI25ldHdvcmtpbmcpCiAgKiBbRGF0YWJhc2VzIGFu
ZCBTdG9yYWdlc10oI2RhdGFiYXNlcy1hbmQtc3RvcmFnZXMpCiAgKiBbVGVz
dGluZyBhbmQgUHJvZmlsaW5nXSgjdGVzdGluZy1hbmQtcHJvZmlsaW5nKQog
ICogW01lc3NhZ2UgUXVldWluZyBhbmQgVGFzayBNYW5hZ2VtZW50XSgjbWVz
c2FnZS1xdWV1aW5nLWFuZC10YXNrLW1hbmFnZW1lbnQpCiAgKiBbQmFyIENv
ZGVzIGFuZCBRUiBDb2Rlc10oI2Jhci1jb2Rlcy1hbmQtcXItY29kZXMpCiAg
KiBbVXRpbGl0aWVzXSgjdXRpbGl0aWVzKQogICogW0RhdGUgYW5kIFRpbWVd
KCNkYXRlLWFuZC10aW1lKQogICogW0NvbXByZXNzaW9uXSgjY29tcHJlc3Np
b24pCiAgKiBbVGV4dCBGb3JtYXRzXSgjdGV4dC1mb3JtYXRzKQogICogW0Jp
bmFyeSBGb3JtYXRzXSgjYmluYXJ5LWZvcm1hdHMpCiAgKiBbRG9jdW1lbnQg
Rm9ybWF0c10oI2RvY3VtZW50LWZvcm1hdHMpCiAgKiBbSW1hZ2UgRm9ybWF0
c10oI2ltYWdlLWZvcm1hdHMpCiAgKiBbTG9jYWxpemF0aW9uXSgjbG9jYWxp
emF0aW9uKQogICogW0NhY2hpbmddKCNjYWNoaW5nKQogICogW01ldHJpY3Mg
YW5kIFN0YXRpc3RpY3NdKCNtZXRyaWNzLWFuZC1zdGF0aXN0aWNzKQogICog
W0xvZ2dpbmddKCNsb2dnaW5nKQogICogW0Z1bmN0aW9uYWwgUHJvZ3JhbW1p
bmddKCNmdW5jdGlvbmFsLXByb2dyYW1taW5nKQogICogW1dlYiBBUElzXSgj
d2ViLWFwaXMpCiAgKiBbU2VjdXJpdHldKCNzZWN1cml0eSkKICAqIFtPdGhl
ciBTb3VyY2VzIGZvciBMaWJyYXJpZXNdKCNvdGhlci1zb3VyY2VzLWZvci1s
aWJyYXJpZXMpCiogW0Jvb2tzIGFuZCBUdXRvcmlhbHNdKCNib29rcy1hbmQt
dHV0b3JpYWxzKQogICogW0Jvb2tzXSgjYm9va3MpCiAgKiBbVHV0b3JpYWxz
IGFuZCBHdWlkZXNdKCN0dXRvcmlhbHMtYW5kLWd1aWRlcykKKiBbVmlkZW9z
XSgjdmlkZW9zKQoqIFtDb25mZXJlbmNlcywgV29ya3Nob3BzIGFuZCBFdmVu
dHNdKCNjb25mZXJlbmNlcy13b3Jrc2hvcHMtYW5kLWV2ZW50cykKKiBbRGVt
byBBcHBsaWNhdGlvbnNdKCNkZW1vLWFwcGxpY2F0aW9ucykKKiBbU2VlIEFs
c29dKCNzZWUtYWxzbykKKiBbTGljZW5zZV0oI2xpY2Vuc2UpCgojIyBNb2R1
bGVzCgojIyMjIENvcmUgTW9kdWxlcwoKQ29yZSBtb2R1bGVzIGNvbWUgYnVu
ZGxlZCBpbiBPcGVuUmVzdHkgcGFja2FnZS4KCiogW25neF9vcGVucmVzdHld
KGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVucmVzdHkvb3BlbnJlc3R5KSDigJQg
VHVybmluZyBOZ2lueCBpbnRvIGEgZnVsbC1mbGVkZ2VkIFdlYiBBcHAgU2Vy
dmVyIC0gU291cmNlcyBmb3IgT3BlblJlc3R5IEJ1bmRsZSBHZW5lcmF0aW9u
CiogW2x1YS1uZ2lueC1tb2R1bGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVu
cmVzdHkvbHVhLW5naW54LW1vZHVsZSkg4oCUIEVtYmVkIHRoZSBwb3dlciBv
ZiBMdWEgaW50byBOZ2lueAoqIFtzdHJlYW0tbHVhLW5naW54LW1vZHVsZV0o
aHR0cHM6Ly9naXRodWIuY29tL29wZW5yZXN0eS9zdHJlYW0tbHVhLW5naW54
LW1vZHVsZSkg4oCUIEVtYmVkIHRoZSBwb3dlciBvZiBMdWEgaW50byBOZ2lu
eCBzdHJlYW0vVENQIFNlcnZlcnMKKiBbZWNoby1uZ2lueC1tb2R1bGVdKGh0
dHBzOi8vZ2l0aHViLmNvbS9vcGVucmVzdHkvZWNoby1uZ2lueC1tb2R1bGUp
IOKAlCBBbiBOZ2lueCBtb2R1bGUgZm9yIGJyaW5naW5nIHRoZSBwb3dlciBv
ZiAiZWNobyIsICJzbGVlcCIsICJ0aW1lIiBhbmQgbW9yZSB0byBOZ2lueCdz
IGNvbmZpZyBmaWxlCiogW3hzcy1uZ2lueC1tb2R1bGVdKGh0dHBzOi8vZ2l0
aHViLmNvbS9vcGVucmVzdHkveHNzLW5naW54LW1vZHVsZSkg4oCUIE5hdGl2
ZSBzdXBwb3J0IGZvciBjcm9zcy1zaXRlIHNjcmlwdGluZyAoWFNTKSBpbiBh
biBuZ2lueAoqIFtzZXQtbWlzYy1uZ2lueC1tb2R1bGVdKGh0dHBzOi8vZ2l0
aHViLmNvbS9vcGVucmVzdHkvc2V0LW1pc2MtbmdpbngtbW9kdWxlKSDigJQg
VmFyaW91cyBzZXRfeHh4IGRpcmVjdGl2ZXMgYWRkZWQgdG8gbmdpbngncyBy
ZXdyaXRlIG1vZHVsZSAobWQ1L3NoYTEsIHNxbC9qc29uIHF1b3RpbmcsIGFu
ZCBtYW55IG1vcmUpCiogW2VuY3J5cHRlZC1zZXNzaW9uLW5naW54LW1vZHVs
ZV0oaHR0cHM6Ly9naXRodWIuY29tL29wZW5yZXN0eS9lbmNyeXB0ZWQtc2Vz
c2lvbi1uZ2lueC1tb2R1bGUpIOKAlCBFbmNyeXB0IGFuZCBkZWNyeXB0IE5n
aW54IHZhcmlhYmxlIHZhbHVlcwoqIFtzcmNhY2hlLW5naW54LW1vZHVsZV0o
aHR0cHM6Ly9naXRodWIuY29tL29wZW5yZXN0eS9zcmNhY2hlLW5naW54LW1v
ZHVsZSkg4oCUIFRyYW5zcGFyZW50IHN1YnJlcXVlc3QtYmFzZWQgY2FjaGlu
ZyBsYXlvdXQgZm9yIGFyYml0cmFyeSBuZ2lueCBsb2NhdGlvbnMKKiBbbHVh
LXVwc3RyZWFtLW5naW54LW1vZHVsZV0oaHR0cHM6Ly9naXRodWIuY29tL29w
ZW5yZXN0eS9sdWEtdXBzdHJlYW0tbmdpbngtbW9kdWxlKSDigJQgTmdpbngg
QyBtb2R1bGUgdG8gZXhwb3NlIEx1YSBBUEkgdG8gbmd4X2x1YSBmb3IgTmdp
bnggdXBzdHJlYW1zCiogW2hlYWRlcnMtbW9yZS1uZ2lueC1tb2R1bGVdKGh0
dHBzOi8vZ2l0aHViLmNvbS9vcGVucmVzdHkvaGVhZGVycy1tb3JlLW5naW54
LW1vZHVsZSkg4oCUIFNldCBhbmQgY2xlYXIgaW5wdXQgYW5kIG91dHB1dCBo
ZWFkZXJzLi4ubW9yZSB0aGFuICJhZGQiIQoqIFthcnJheS12YXItbmdpbngt
bW9kdWxlXShodHRwczovL2dpdGh1Yi5jb20vb3BlbnJlc3R5L2FycmF5LXZh
ci1uZ2lueC1tb2R1bGUpIOKAlCBBZGQgc3VwcG9ydCBmb3IgYXJyYXkgdmFy
aWFibGVzIHRvIG5naW54IGNvbmZpZyBmaWxlcwoqIFttZW1jLW5naW54LW1v
ZHVsZV0oaHR0cHM6Ly9naXRodWIuY29tL29wZW5yZXN0eS9tZW1jLW5naW54
LW1vZHVsZSkg4oCUIEFuIGV4dGVuZGVkIHZlcnNpb24gb2YgdGhlIHN0YW5k
YXJkIG1lbWNhY2hlZCBtb2R1bGUgdGhhdCBzdXBwb3J0cyBzZXQsIGFkZCwg
ZGVsZXRlLCBhbmQgbWFueSBtb3JlIG1lbWNhY2hlZCBjb21tYW5kcwoqIFty
ZWRpczItbmdpbngtbW9kdWxlXShodHRwczovL2dpdGh1Yi5jb20vb3BlbnJl
c3R5L3JlZGlzMi1uZ2lueC1tb2R1bGUpIOKAlCBOZ2lueCB1cHN0cmVhbSBt
b2R1bGUgZm9yIHRoZSBSZWRpcyAyLjAgcHJvdG9jb2wKKiBbcmRzLWpzb24t
bmdpbngtbW9kdWxlXShodHRwczovL2dpdGh1Yi5jb20vb3BlbnJlc3R5L3Jk
cy1qc29uLW5naW54LW1vZHVsZSkg4oCUIEFuIG5naW54IG91dHB1dCBmaWx0
ZXIgdGhhdCBmb3JtYXRzIFJlc3R5IERCRCBTdHJlYW1zIGdlbmVyYXRlZCBi
eSBuZ3hfZHJpenpsZSBhbmQgb3RoZXJzIHRvIEpTT04KKiBbcmRzLWNzdi1u
Z2lueC1tb2R1bGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVucmVzdHkvcmRz
LWNzdi1uZ2lueC1tb2R1bGUpIOKAlCBOZ2lueCBvdXRwdXQgZmlsdGVyIG1v
ZHVsZSB0byBjb252ZXJ0IFJlc3R5LURCRC1TdHJlYW1zIChSRFMpIHRvIENv
bW1hLVNlcGFyYXRlZCBWYWx1ZXMgKENTVikKKiBbZHJpenpsZS1uZ2lueC1t
b2R1bGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVucmVzdHkvZHJpenpsZS1u
Z2lueC1tb2R1bGUpIOKAlCBBbiBOZ2lueCB1cHN0cmVhbSBtb2R1bGUgdGhh
dCB0YWxrcyB0byBteXNxbCBhbmQgZHJpenpsZSBieSBsaWJkcml6emxlCiog
W25neF9wb3N0Z3Jlc10oaHR0cHM6Ly9naXRodWIuY29tL0ZSaUNLTEUvbmd4
X3Bvc3RncmVzKSDigJQgVXBzdHJlYW0gbW9kdWxlIHRoYXQgYWxsb3dzIE5n
aW54IHRvIGNvbW11bmljYXRlIGRpcmVjdGx5IHdpdGggUG9zdGdyZVNRTCBk
YXRhYmFzZQoqIFtmb3JtLWlucHV0LW5naW54LW1vZHVsZV0oaHR0cHM6Ly9n
aXRodWIuY29tL2NhbGlvL2Zvcm0taW5wdXQtbmdpbngtbW9kdWxlKSDigJQg
VGhpcyBpcyBhIG5naW54IG1vZHVsZSB0aGF0IHJlYWRzIEhUVFAgUE9TVCBh
bmQgUFVUIHJlcXVlc3QgYm9keSBlbmNvZGVkIGluICJhcHBsaWNhdGlvbi94
LXd3dy1mb3JtLXVybGVuY29kZWQiLCBhbmQgcGFyc2UgdGhlIGFyZ3VtZW50
cyBpbiByZXF1ZXN0IGJvZHkgaW50byBuZ2lueCB2YXJpYWJsZXMuCiogW25n
eF9jb29sa2l0XShodHRwczovL2dpdGh1Yi5jb20vRlJpQ0tMRS9uZ3hfY29v
bGtpdCkg4oCUIENvbGxlY3Rpb24gb2Ygc21hbGwgYW5kIHVzZWZ1bCBuZ2lu
eCBhZGQtb25zCiogW25neF9kZXZlbF9raXRdKGh0dHBzOi8vZ2l0aHViLmNv
bS9zaW1wbC9uZ3hfZGV2ZWxfa2l0KSDigJQgYW4gTmdpbnggbW9kdWxlIHRo
YXQgYWRkcyBhZGRpdGlvbmFsIGdlbmVyaWMgdG9vbHMgdGhhdCBtb2R1bGUg
ZGV2ZWxvcGVycyBjYW4gdXNlIGluIHRoZWlyIG93biBtb2R1bGVzCgpQbGVh
c2UgYWxzbyBub3RlIHRoYXQgdGhlcmUgaXMgKipgcmVzdHlgKiogY29tbWFu
ZCBsaW5lIGNsaWVudCBpbmNsdWRlZCBpbiBPcGVuUmVzdHkgYnVuZGxlLiBU
aGUgW2NvbW1hbmQgbGluZSBjbGllbnQgc291cmNlc10oaHR0cHM6Ly9naXRo
dWIuY29tL29wZW5yZXN0eS9yZXN0eS1jbGkpIGNhbiBiZSBmb3VuZCBvbiBH
aXRodWIuCgojIyMjIENvcmUgTmdpbnggTW9kdWxlcwoKVG8gbGVhcm4gbW9y
ZSBhYm91dCBOZ2lueCBDb3JlIE1vZHVsZXMsIHBsZWFzZSByZWZlciBbTmdp
bnggRG9jdW1lbnRhdGlvbl0oaHR0cDovL25naW54Lm9yZy9lbi9kb2NzLyku
IFNvbWUgbW9kdWxlcyB0aGF0IGNvbWUgd2l0aCBOZ2lueCBhcmUgKG5vdCBh
bGwgb2YgdGhlbSBhcmUgYnVpbGQgYnkgZGVmYXVsdCk6CgoqIFtuZ3hfaHR0
cF9jb3JlX21vZHVsZV0oaHR0cDovL25naW54Lm9yZy9lbi9kb2NzL2h0dHAv
bmd4X2h0dHBfY29yZV9tb2R1bGUuaHRtbCkKKiBbbmd4X2h0dHBfc3NsX21v
ZHVsZV0oaHR0cDovL25naW54Lm9yZy9lbi9kb2NzL2h0dHAvbmd4X2h0dHBf
c3NsX21vZHVsZS5odG1sKSDigJQgVGhlIG5neF9odHRwX3NzbF9tb2R1bGUg
bW9kdWxlIHByb3ZpZGVzIHRoZSBuZWNlc3Nhcnkgc3VwcG9ydCBmb3IgSFRU
UFMKKiBbbmd4X2h0dHBfdjJfbW9kdWxlXShodHRwczovL25naW54Lm9yZy9l
bi9kb2NzL2h0dHAvbmd4X2h0dHBfdjJfbW9kdWxlLmh0bWwpIOKAlCBUaGUg
bmd4X2h0dHBfdjJfbW9kdWxlIG1vZHVsZSBwcm92aWRlcyBzdXBwb3J0IGZv
ciBIVFRQLzIKKiBbbmd4X2h0dHBfcmVhbGlwX21vZHVsZV0oaHR0cDovL25n
aW54Lm9yZy9lbi9kb2NzL2h0dHAvbmd4X2h0dHBfcmVhbGlwX21vZHVsZS5o
dG1sKSDigJQgVGhlIG5neF9odHRwX3JlYWxpcF9tb2R1bGUgbW9kdWxlIGlz
IHVzZWQgdG8gY2hhbmdlIHRoZSBjbGllbnQgYWRkcmVzcyBhbmQgb3B0aW9u
YWwgcG9ydCB0byB0aGUgb25lIHNlbnQgaW4gdGhlIHNwZWNpZmllZCBoZWFk
ZXIgZmllbGRzCiogW25neF9odHRwX2FkZGl0aW9uX21vZHVsZV0oaHR0cDov
L25naW54Lm9yZy9lbi9kb2NzL2h0dHAvbmd4X2h0dHBfYWRkaXRpb25fbW9k
dWxlLmh0bWwpIOKAlCBUaGUgbmd4X2h0dHBfYWRkaXRpb25fbW9kdWxlIG1v
ZHVsZSBpcyBhIGZpbHRlciB0aGF0IGFkZHMgdGV4dCBiZWZvcmUgYW5kIGFm
dGVyIGEgcmVzcG9uc2UKKiBbbmd4X2h0dHBfeHNsdF9tb2R1bGVdKGh0dHA6
Ly9uZ2lueC5vcmcvZW4vZG9jcy9odHRwL25neF9odHRwX3hzbHRfbW9kdWxl
Lmh0bWwpIOKAlCBUaGUgbmd4X2h0dHBfeHNsdF9tb2R1bGUgaXMgYSBmaWx0
ZXIgdGhhdCB0cmFuc2Zvcm1zIFhNTCByZXNwb25zZXMgdXNpbmcgb25lIG9y
IG1vcmUgWFNMVCBzdHlsZXNoZWV0CiogW25neF9odHRwX2ltYWdlX2ZpbHRl
cl9tb2R1bGVdKGh0dHA6Ly9uZ2lueC5vcmcvZW4vZG9jcy9odHRwL25neF9o
dHRwX2ltYWdlX2ZpbHRlcl9tb2R1bGUuaHRtbCkg4oCUIFRoZSBuZ3hfaHR0
cF9pbWFnZV9maWx0ZXJfbW9kdWxlIG1vZHVsZSBpcyBhIGZpbHRlciB0aGF0
IHRyYW5zZm9ybXMgaW1hZ2VzIGluIEpQRUcsIEdJRiwgYW5kIFBORyBmb3Jt
YXRzCiogW25neF9odHRwX2dlb2lwX21vZHVsZV0oaHR0cDovL25naW54Lm9y
Zy9lbi9kb2NzL2h0dHAvbmd4X2h0dHBfZ2VvaXBfbW9kdWxlLmh0bWwpIOKA
lCBUaGUgbmd4X2h0dHBfZ2VvaXBfbW9kdWxlIG1vZHVsZSBjcmVhdGVzIHZh
cmlhYmxlcyB3aXRoIHZhbHVlcyBkZXBlbmRpbmcgb24gdGhlIGNsaWVudCBJ
UCBhZGRyZXNzLCB1c2luZyB0aGUgcHJlY29tcGlsZWQgTWF4TWluZCBkYXRh
YmFzZXMKKiBbbmd4X2h0dHBfc3ViX21vZHVsZV0oaHR0cDovL25naW54Lm9y
Zy9lbi9kb2NzL2h0dHAvbmd4X2h0dHBfc3ViX21vZHVsZS5odG1sKSDigJQg
VGhlIG5neF9odHRwX3N1Yl9tb2R1bGUgbW9kdWxlIGlzIGEgZmlsdGVyIHRo
YXQgbW9kaWZpZXMgYSByZXNwb25zZSBieSByZXBsYWNpbmcgb25lIHNwZWNp
ZmllZCBzdHJpbmcgYnkgYW5vdGhlcgoqIFtuZ3hfaHR0cF9kYXZfbW9kdWxl
XShodHRwOi8vbmdpbngub3JnL2VuL2RvY3MvaHR0cC9uZ3hfaHR0cF9kYXZf
bW9kdWxlLmh0bWwpIOKAlCBUaGUgbmd4X2h0dHBfZGF2X21vZHVsZSBtb2R1
bGUgaXMgaW50ZW5kZWQgZm9yIGZpbGUgbWFuYWdlbWVudCBhdXRvbWF0aW9u
IHZpYSB0aGUgV2ViREFWIHByb3RvY29sLiBUaGUgbW9kdWxlIHByb2Nlc3Nl
cyBIVFRQIGFuZCBXZWJEQVYgbWV0aG9kcyBQVVQsIERFTEVURSwgTUtDT0ws
IENPUFksIGFuZCBNT1ZFCiogW25neF9odHRwX2Zsdl9tb2R1bGVdKGh0dHA6
Ly9uZ2lueC5vcmcvZW4vZG9jcy9odHRwL25neF9odHRwX2Zsdl9tb2R1bGUu
aHRtbCkg4oCUIFRoZSBuZ3hfaHR0cF9mbHZfbW9kdWxlIG1vZHVsZSBwcm92
aWRlcyBwc2V1ZG8tc3RyZWFtaW5nIHNlcnZlci1zaWRlIHN1cHBvcnQgZm9y
IEZsYXNoIFZpZGVvIChGTFYpIGZpbGVzCiogW25neF9odHRwX21wNF9tb2R1
bGVdKGh0dHA6Ly9uZ2lueC5vcmcvZW4vZG9jcy9odHRwL25neF9odHRwX21w
NF9tb2R1bGUuaHRtbCkg4oCUIFRoZSBuZ3hfaHR0cF9tcDRfbW9kdWxlIG1v
ZHVsZSBwcm92aWRlcyBwc2V1ZG8tc3RyZWFtaW5nIHNlcnZlci1zaWRlIHN1
cHBvcnQgZm9yIE1QNCBmaWxlcy4gU3VjaCBmaWxlcyB0eXBpY2FsbHkgaGF2
ZSB0aGUgLm1wNCwgLm00diwgb3IgLm00YSBmaWxlbmFtZSBleHRlbnNpb25z
CiogW25neF9odHRwX2d1bnppcF9tb2R1bGVdKGh0dHA6Ly9uZ2lueC5vcmcv
ZW4vZG9jcy9odHRwL25neF9odHRwX2d1bnppcF9tb2R1bGUuaHRtbCkg4oCU
IFRoZSBuZ3hfaHR0cF9ndW56aXBfbW9kdWxlIG1vZHVsZSBpcyBhIGZpbHRl
ciB0aGF0IGRlY29tcHJlc3NlcyByZXNwb25zZXMgd2l0aCDigJxDb250ZW50
LUVuY29kaW5nOiBnemlw4oCdIGZvciBjbGllbnRzIHRoYXQgZG8gbm90IHN1
cHBvcnQg4oCcZ3ppcOKAnSBlbmNvZGluZyBtZXRob2QuIFRoZSBtb2R1bGUg
d2lsbCBiZSB1c2VmdWwgd2hlbiBpdCBpcyBkZXNpcmFibGUgdG8gc3RvcmUg
ZGF0YSBjb21wcmVzc2VkIHRvIHNhdmUgc3BhY2UgYW5kIHJlZHVjZSBJL08g
Y29zdHMKKiBbbmd4X2h0dHBfZ3ppcF9zdGF0aWNfbW9kdWxlXShodHRwOi8v
bmdpbngub3JnL2VuL2RvY3MvaHR0cC9uZ3hfaHR0cF9nemlwX3N0YXRpY19t
b2R1bGUuaHRtbCkg4oCUIFRoZSBuZ3hfaHR0cF9nemlwX3N0YXRpY19tb2R1
bGUgbW9kdWxlIGFsbG93cyBzZW5kaW5nIHByZWNvbXByZXNzZWQgZmlsZXMg
d2l0aCB0aGUg4oCcLmd64oCdIGZpbGVuYW1lIGV4dGVuc2lvbiBpbnN0ZWFk
IG9mIHJlZ3VsYXIgZmlsZXMKKiBbbmd4X2h0dHBfYXV0aF9yZXF1ZXN0X21v
ZHVsZV0oaHR0cDovL25naW54Lm9yZy9lbi9kb2NzL2h0dHAvbmd4X2h0dHBf
YXV0aF9yZXF1ZXN0X21vZHVsZS5odG1sKSDigJQgVGhlIG5neF9odHRwX2F1
dGhfcmVxdWVzdF9tb2R1bGUgbW9kdWxlIGltcGxlbWVudHMgY2xpZW50IGF1
dGhvcml6YXRpb24gYmFzZWQgb24gdGhlIHJlc3VsdCBvZiBhIHN1YnJlcXVl
c3QKKiBbbmd4X2h0dHBfcmFuZG9tX2luZGV4X21vZHVsZV0oaHR0cDovL25n
aW54Lm9yZy9lbi9kb2NzL2h0dHAvbmd4X2h0dHBfcmFuZG9tX2luZGV4X21v
ZHVsZS5odG1sKSDigJQgVGhlIG5neF9odHRwX3JhbmRvbV9pbmRleF9tb2R1
bGUgbW9kdWxlIHByb2Nlc3NlcyByZXF1ZXN0cyBlbmRpbmcgd2l0aCB0aGUg
c2xhc2ggY2hhcmFjdGVyICjigJgv4oCZKSBhbmQgcGlja3MgYSByYW5kb20g
ZmlsZSBpbiBhIGRpcmVjdG9yeSB0byBzZXJ2ZSBhcyBhbiBpbmRleCBmaWxl
CiogW25neF9odHRwX3NlY3VyZV9saW5rX21vZHVsZV0oaHR0cDovL25naW54
Lm9yZy9lbi9kb2NzL2h0dHAvbmd4X2h0dHBfc2VjdXJlX2xpbmtfbW9kdWxl
Lmh0bWwpIOKAlCBUaGUgbmd4X2h0dHBfc2VjdXJlX2xpbmtfbW9kdWxlIG1v
ZHVsZSAoMC43LjE4KSBpcyB1c2VkIHRvIGNoZWNrIGF1dGhlbnRpY2l0eSBv
ZiByZXF1ZXN0ZWQgbGlua3MsIHByb3RlY3QgcmVzb3VyY2VzIGZyb20gdW5h
dXRob3JpemVkIGFjY2VzcywgYW5kIGxpbWl0IGxpbmsgbGlmZXRpbWUKKiBb
bmd4X2h0dHBfc2xpY2VfbW9kdWxlXShodHRwczovL25naW54Lm9yZy9lbi9k
b2NzL2h0dHAvbmd4X2h0dHBfc2xpY2VfbW9kdWxlLmh0bWwpIOKAlCBUaGUg
bmd4X2h0dHBfc2xpY2VfbW9kdWxlIG1vZHVsZSBpcyBhIGZpbHRlciB0aGF0
IHNwbGl0cyBhIHJlcXVlc3QgaW50byBzdWJyZXF1ZXN0cywgZWFjaCByZXR1
cm5pbmcgYSBjZXJ0YWluIHJhbmdlIG9mIHJlc3BvbnNlCiogW25neF9odHRw
X3N0dWJfc3RhdHVzX21vZHVsZV0oaHR0cHM6Ly9uZ2lueC5vcmcvZW4vZG9j
cy9odHRwL25neF9odHRwX3N0dWJfc3RhdHVzX21vZHVsZS5odG1sKSDigJQg
VGhlIG5neF9odHRwX3N0dWJfc3RhdHVzX21vZHVsZSBtb2R1bGUgcHJvdmlk
ZXMgYWNjZXNzIHRvIGJhc2ljIHN0YXR1cyBpbmZvcm1hdGlvbgoqIFtuZ3hf
aHR0cF9jaGFyc2V0X21vZHVsZV0oaHR0cDovL25naW54Lm9yZy9lbi9kb2Nz
L2h0dHAvbmd4X2h0dHBfY2hhcnNldF9tb2R1bGUuaHRtbCkg4oCUIFRoZSBu
Z3hfaHR0cF9jaGFyc2V0X21vZHVsZSBtb2R1bGUgYWRkcyB0aGUgc3BlY2lm
aWVkIGNoYXJzZXQgdG8gdGhlIOKAnENvbnRlbnQtVHlwZeKAnSByZXNwb25z
ZSBoZWFkZXIgZmllbGQKKiBbbmd4X2h0dHBfZ3ppcF9tb2R1bGVdKGh0dHA6
Ly9uZ2lueC5vcmcvZW4vZG9jcy9odHRwL25neF9odHRwX2d6aXBfbW9kdWxl
Lmh0bWwpIOKAlCBUaGUgbmd4X2h0dHBfZ3ppcF9tb2R1bGUgbW9kdWxlIGlz
IGEgZmlsdGVyIHRoYXQgY29tcHJlc3NlcyByZXNwb25zZXMgdXNpbmcgdGhl
IOKAnGd6aXDigJ0gbWV0aG9kCiogW25neF9odHRwX3NzaV9tb2R1bGVdKGh0
dHA6Ly9uZ2lueC5vcmcvZW4vZG9jcy9odHRwL25neF9odHRwX3NzaV9tb2R1
bGUuaHRtbCkg4oCUIFRoZSBuZ3hfaHR0cF9zc2lfbW9kdWxlIG1vZHVsZSBp
cyBhIGZpbHRlciB0aGF0IHByb2Nlc3NlcyBTU0kgKFNlcnZlciBTaWRlIElu
Y2x1ZGVzKSBjb21tYW5kcyBpbiByZXNwb25zZXMgcGFzc2luZyB0aHJvdWdo
IGl0CiogW25neF9odHRwX3VzZXJpZF9tb2R1bGVdKGh0dHA6Ly9uZ2lueC5v
cmcvZW4vZG9jcy9odHRwL25neF9odHRwX3VzZXJpZF9tb2R1bGUuaHRtbCkg
4oCUIFRoZSBuZ3hfaHR0cF91c2VyaWRfbW9kdWxlIG1vZHVsZSBzZXRzIGNv
b2tpZXMgc3VpdGFibGUgZm9yIGNsaWVudCBpZGVudGlmaWNhdGlvbgoqIFtu
Z3hfaHR0cF9hY2Nlc3NfbW9kdWxlXShodHRwOi8vbmdpbngub3JnL2VuL2Rv
Y3MvaHR0cC9uZ3hfaHR0cF9hY2Nlc3NfbW9kdWxlLmh0bWwpIOKAlCBUaGUg
bmd4X2h0dHBfYWNjZXNzX21vZHVsZSBtb2R1bGUgYWxsb3dzIGxpbWl0aW5n
IGFjY2VzcyB0byBjZXJ0YWluIGNsaWVudCBhZGRyZXNzZXMKKiBbbmd4X2h0
dHBfYXV0aF9iYXNpY19tb2R1bGVdKGh0dHA6Ly9uZ2lueC5vcmcvZW4vZG9j
cy9odHRwL25neF9odHRwX2F1dGhfYmFzaWNfbW9kdWxlLmh0bWwpIOKAlCBU
aGUgbmd4X2h0dHBfYXV0aF9iYXNpY19tb2R1bGUgbW9kdWxlIGFsbG93cyBs
aW1pdGluZyBhY2Nlc3MgdG8gcmVzb3VyY2VzIGJ5IHZhbGlkYXRpbmcgdGhl
IHVzZXIgbmFtZSBhbmQgcGFzc3dvcmQgdXNpbmcgdGhlIOKAnEhUVFAgQmFz
aWMgQXV0aGVudGljYXRpb27igJ0gcHJvdG9jb2wKKiBbbmd4X2h0dHBfYXV0
b2luZGV4X21vZHVsZV0oaHR0cDovL25naW54Lm9yZy9lbi9kb2NzL2h0dHAv
bmd4X2h0dHBfYXV0b2luZGV4X21vZHVsZS5odG1sKSDigJQgVGhlIG5neF9o
dHRwX2F1dG9pbmRleF9tb2R1bGUgbW9kdWxlIHByb2Nlc3NlcyByZXF1ZXN0
cyBlbmRpbmcgd2l0aCB0aGUgc2xhc2ggY2hhcmFjdGVyICjigJgv4oCZKSBh
bmQgcHJvZHVjZXMgYSBkaXJlY3RvcnkgbGlzdGluZwoqIFtuZ3hfaHR0cF9n
ZW9fbW9kdWxlXShodHRwOi8vbmdpbngub3JnL2VuL2RvY3MvaHR0cC9uZ3hf
aHR0cF9nZW9fbW9kdWxlLmh0bWwpIOKAlCBUaGUgbmd4X2h0dHBfZ2VvX21v
ZHVsZSBtb2R1bGUgY3JlYXRlcyB2YXJpYWJsZXMgd2l0aCB2YWx1ZXMgZGVw
ZW5kaW5nIG9uIHRoZSBjbGllbnQgSVAgYWRkcmVzcwoqIFtuZ3hfaHR0cF9t
YXBfbW9kdWxlXShodHRwOi8vbmdpbngub3JnL2VuL2RvY3MvaHR0cC9uZ3hf
aHR0cF9tYXBfbW9kdWxlLmh0bWwpIOKAlCBUaGUgbmd4X2h0dHBfbWFwX21v
ZHVsZSBtb2R1bGUgY3JlYXRlcyB2YXJpYWJsZXMgd2hvc2UgdmFsdWVzIGRl
cGVuZCBvbiB2YWx1ZXMgb2Ygb3RoZXIgdmFyaWFibGVzCiogW25neF9odHRw
X3NwbGl0X2NsaWVudHNfbW9kdWxlXShodHRwOi8vbmdpbngub3JnL2VuL2Rv
Y3MvaHR0cC9uZ3hfaHR0cF9zcGxpdF9jbGllbnRzX21vZHVsZS5odG1sKSDi
gJQgVGhlIG5neF9odHRwX3NwbGl0X2NsaWVudHNfbW9kdWxlIG1vZHVsZSBj
cmVhdGVzIHZhcmlhYmxlcyBzdWl0YWJsZSBmb3IgQS9CIHRlc3RpbmcsIGFs
c28ga25vd24gYXMgc3BsaXQgdGVzdGluZwoqIFtuZ3hfaHR0cF9yZWZlcmVy
X21vZHVsZV0oaHR0cDovL25naW54Lm9yZy9lbi9kb2NzL2h0dHAvbmd4X2h0
dHBfcmVmZXJlcl9tb2R1bGUuaHRtbCkg4oCUIFRoZSBuZ3hfaHR0cF9yZWZl
cmVyX21vZHVsZSBtb2R1bGUgaXMgdXNlZCB0byBibG9jayBhY2Nlc3MgdG8g
YSBzaXRlIGZvciByZXF1ZXN0cyB3aXRoIGludmFsaWQgdmFsdWVzIGluIHRo
ZSDigJxSZWZlcmVy4oCdIGhlYWRlciBmaWVsZAoqIFtuZ3hfaHR0cF9yZXdy
aXRlX21vZHVsZV0oaHR0cDovL25naW54Lm9yZy9lbi9kb2NzL2h0dHAvbmd4
X2h0dHBfcmV3cml0ZV9tb2R1bGUuaHRtbCkg4oCUIFRoZSBuZ3hfaHR0cF9y
ZXdyaXRlX21vZHVsZSBtb2R1bGUgaXMgdXNlZCB0byBjaGFuZ2UgcmVxdWVz
dCBVUkkgdXNpbmcgUENSRSByZWd1bGFyIGV4cHJlc3Npb25zLCByZXR1cm4g
cmVkaXJlY3RzLCBhbmQgY29uZGl0aW9uYWxseSBzZWxlY3QgY29uZmlndXJh
dGlvbnMKKiBbbmd4X2h0dHBfcHJveHlfbW9kdWxlXShodHRwOi8vbmdpbngu
b3JnL2VuL2RvY3MvaHR0cC9uZ3hfaHR0cF9wcm94eV9tb2R1bGUuaHRtbCkg
4oCUIFRoZSBuZ3hfaHR0cF9wcm94eV9tb2R1bGUgbW9kdWxlIGFsbG93cyBw
YXNzaW5nIHJlcXVlc3RzIHRvIGFub3RoZXIgc2VydmVyCiogW25neF9odHRw
X2Zhc3RjZ2lfbW9kdWxlXShodHRwOi8vbmdpbngub3JnL2VuL2RvY3MvaHR0
cC9uZ3hfaHR0cF9mYXN0Y2dpX21vZHVsZS5odG1sKSDigJQgVGhlIG5neF9o
dHRwX2Zhc3RjZ2lfbW9kdWxlIG1vZHVsZSBhbGxvd3MgcGFzc2luZyByZXF1
ZXN0cyB0byBhIEZhc3RDR0kgc2VydmVyCiogW25neF9odHRwX3V3c2dpX21v
ZHVsZV0oaHR0cDovL25naW54Lm9yZy9lbi9kb2NzL2h0dHAvbmd4X2h0dHBf
dXdzZ2lfbW9kdWxlLmh0bWwpIOKAlCBUaGUgbmd4X2h0dHBfdXdzZ2lfbW9k
dWxlIG1vZHVsZSBhbGxvd3MgcGFzc2luZyByZXF1ZXN0cyB0byBhIHV3c2dp
IHNlcnZlcgoqIFtuZ3hfaHR0cF9zY2dpX21vZHVsZV0oaHR0cDovL25naW54
Lm9yZy9lbi9kb2NzL2h0dHAvbmd4X2h0dHBfc2NnaV9tb2R1bGUuaHRtbCkg
4oCUIFRoZSBuZ3hfaHR0cF9zY2dpX21vZHVsZSBtb2R1bGUgYWxsb3dzIHBh
c3NpbmcgcmVxdWVzdHMgdG8gYW4gU0NHSSBzZXJ2ZXIKKiBbbmd4X2h0dHBf
bWVtY2FjaGVkX21vZHVsZV0oaHR0cDovL25naW54Lm9yZy9lbi9kb2NzL2h0
dHAvbmd4X2h0dHBfbWVtY2FjaGVkX21vZHVsZS5odG1sKSDigJQgaGUgbmd4
X2h0dHBfbWVtY2FjaGVkX21vZHVsZSBtb2R1bGUgaXMgdXNlZCB0byBvYnRh
aW4gcmVzcG9uc2VzIGZyb20gYSBtZW1jYWNoZWQgc2VydmVyCiogW25neF9o
dHRwX2xpbWl0X2Nvbm5fbW9kdWxlXShodHRwOi8vbmdpbngub3JnL2VuL2Rv
Y3MvaHR0cC9uZ3hfaHR0cF9saW1pdF9jb25uX21vZHVsZS5odG1sKSDigJQg
VGhlIG5neF9odHRwX2xpbWl0X2Nvbm5fbW9kdWxlIG1vZHVsZSBpcyB1c2Vk
IHRvIGxpbWl0IHRoZSBudW1iZXIgb2YgY29ubmVjdGlvbnMgcGVyIHRoZSBk
ZWZpbmVkIGtleSwgaW4gcGFydGljdWxhciwgdGhlIG51bWJlciBvZiBjb25u
ZWN0aW9ucyBmcm9tIGEgc2luZ2xlIElQIGFkZHJlc3MKKiBbbmd4X2h0dHBf
bGltaXRfcmVxX21vZHVsZV0oaHR0cDovL25naW54Lm9yZy9lbi9kb2NzL2h0
dHAvbmd4X2h0dHBfbGltaXRfcmVxX21vZHVsZS5odG1sKSDigJQgaGUgbmd4
X2h0dHBfbGltaXRfcmVxX21vZHVsZSBtb2R1bGUgaXMgdXNlZCB0byBsaW1p
dCB0aGUgcmVxdWVzdCBwcm9jZXNzaW5nIHJhdGUgcGVyIGEgZGVmaW5lZCBr
ZXksIGluIHBhcnRpY3VsYXIsIHRoZSBwcm9jZXNzaW5nIHJhdGUgb2YgcmVx
dWVzdHMgY29taW5nIGZyb20gYSBzaW5nbGUgSVAgYWRkcmVzcwoqIFtuZ3hf
aHR0cF9lbXB0eV9naWZfbW9kdWxlXShodHRwOi8vbmdpbngub3JnL2VuL2Rv
Y3MvaHR0cC9uZ3hfaHR0cF9lbXB0eV9naWZfbW9kdWxlLmh0bWwpIOKAlCBU
aGUgbmd4X2h0dHBfZW1wdHlfZ2lmX21vZHVsZSBtb2R1bGUgZW1pdHMgc2lu
Z2xlLXBpeGVsIHRyYW5zcGFyZW50IEdJRgoqIFtuZ3hfaHR0cF9icm93c2Vy
X21vZHVsZV0oaHR0cDovL25naW54Lm9yZy9lbi9kb2NzL2h0dHAvbmd4X2h0
dHBfYnJvd3Nlcl9tb2R1bGUuaHRtbCkg4oCUIFRoZSBuZ3hfaHR0cF9icm93
c2VyX21vZHVsZSBtb2R1bGUgY3JlYXRlcyB2YXJpYWJsZXMgd2hvc2UgdmFs
dWVzIGRlcGVuZCBvbiB0aGUgdmFsdWUgb2YgdGhlIOKAnFVzZXItQWdlbnTi
gJ0gcmVxdWVzdCBoZWFkZXIgZmllbGQKKiBbbmd4X2h0dHBfdXBzdHJlYW1f
bW9kdWxlXShodHRwOi8vbmdpbngub3JnL2VuL2RvY3MvaHR0cC9uZ3hfaHR0
cF91cHN0cmVhbV9tb2R1bGUuaHRtbCkg4oCUIGh0dHA6Ly9uZ2lueC5vcmcv
ZW4vZG9jcy9odHRwL25neF9odHRwX3Vwc3RyZWFtX21vZHVsZS5odG1sCiog
W25neF9odHRwX3BlcmxfbW9kdWxlXShodHRwOi8vbmdpbngub3JnL2VuL2Rv
Y3MvaHR0cC9uZ3hfaHR0cF9wZXJsX21vZHVsZS5odG1sKSDigJQgVGhlIG5n
eF9odHRwX3BlcmxfbW9kdWxlIG1vZHVsZSBpcyB1c2VkIHRvIGltcGxlbWVu
dCBsb2NhdGlvbiBhbmQgdmFyaWFibGUgaGFuZGxlcnMgaW4gUGVybCBhbmQg
aW5zZXJ0IFBlcmwgY2FsbHMgaW50byBTU0kKKiBbbmd4X21haWxfY29yZV9t
b2R1bGVdKGh0dHA6Ly9uZ2lueC5vcmcvZW4vZG9jcy9tYWlsL25neF9tYWls
X2NvcmVfbW9kdWxlLmh0bWwpCiogW25neF9tYWlsX3NzbF9tb2R1bGVdKGh0
dHA6Ly9uZ2lueC5vcmcvZW4vZG9jcy9tYWlsL25neF9tYWlsX3NzbF9tb2R1
bGUuaHRtbCkg4oCUIFRoZSBuZ3hfbWFpbF9zc2xfbW9kdWxlIG1vZHVsZSBw
cm92aWRlcyB0aGUgbmVjZXNzYXJ5IHN1cHBvcnQgZm9yIGEgbWFpbCBwcm94
eSBzZXJ2ZXIgdG8gd29yayB3aXRoIHRoZSBTU0wvVExTIHByb3RvY29sCiog
W25neF9tYWlsX3NtdHBfbW9kdWxlXShodHRwOi8vbmdpbngub3JnL2VuL2Rv
Y3MvbWFpbC9uZ3hfbWFpbF9zbXRwX21vZHVsZS5odG1sKQoqIFtuZ3hfbWFp
bF9pbWFwX21vZHVsZV0oaHR0cDovL25naW54Lm9yZy9lbi9kb2NzL21haWwv
bmd4X21haWxfaW1hcF9tb2R1bGUuaHRtbCkKKiBbbmd4X21haWxfcG9wM19t
b2R1bGVdKGh0dHA6Ly9uZ2lueC5vcmcvZW4vZG9jcy9tYWlsL25neF9tYWls
X3BvcDNfbW9kdWxlLmh0bWwpCiogW25neF9zdHJlYW1fY29yZV9tb2R1bGVd
KGh0dHA6Ly9uZ2lueC5vcmcvZW4vZG9jcy9zdHJlYW0vbmd4X3N0cmVhbV9j
b3JlX21vZHVsZS5odG1sKQoqIFtuZ3hfc3RyZWFtX3NzbF9tb2R1bGVdKGh0
dHA6Ly9uZ2lueC5vcmcvZW4vZG9jcy9zdHJlYW0vbmd4X3N0cmVhbV9zc2xf
bW9kdWxlLmh0bWwpIOKAlCBUaGUgbmd4X3N0cmVhbV9zc2xfbW9kdWxlIG1v
ZHVsZSBwcm92aWRlcyB0aGUgbmVjZXNzYXJ5IHN1cHBvcnQgZm9yIGEgc3Ry
ZWFtIHByb3h5IHNlcnZlciB0byB3b3JrIHdpdGggdGhlIFNTTC9UTFMgcHJv
dG9jb2wKKiBbbmd4X3N0cmVhbV9wcm94eV9tb2R1bGVdKGh0dHA6Ly9uZ2lu
eC5vcmcvZW4vZG9jcy9zdHJlYW0vbmd4X3N0cmVhbV9wcm94eV9tb2R1bGUu
aHRtbCkg4oCUIFRoZSBuZ3hfc3RyZWFtX3Byb3h5X21vZHVsZSBtb2R1bGUg
YWxsb3dzIHByb3h5aW5nIGRhdGEgc3RyZWFtcyBvdmVyIFRDUCwgVURQLCBh
bmQgVU5JWC1kb21haW4gc29ja2V0cwoKIyMjIyBUaGlyZC1wYXJ0eSBOZ2lu
eCBNb2R1bGVzCgoqIFtuZ3hfbHVhX2lwY10oaHR0cHM6Ly9naXRodWIuY29t
L3NsYWN0L25neF9sdWFfaXBjKSDigJQgSW50ZXJwcm9jZXNzIGNvbW11bmlj
YXRpb24gZm9yIEx1YSBOZ2lueCBNb2R1bGUgYW5kIE9wZW5SZXN0eSDigJQg
c2VuZCBuYW1lZCBhbGVydHMgd2l0aCBzdHJpbmcgZGF0YSBiZXR3ZWVuIE5n
aW54IHdvcmtlciBwcm9jZXNzZXMKKiBbbmNoYW5dKGh0dHBzOi8vbmNoYW4u
aW8vKSAoW0dpdGh1Yl0oaHR0cHM6Ly9naXRodWIuY29tL3NsYWN0L25jaGFu
KSkg4oCUIEZhc3QsIGhvcml6b250YWxseSBzY2FsYWJsZSwgbXVsdGlwcm9j
ZXNzIHB1Yi9zdWIgcXVldWluZyBzZXJ2ZXIgYW5kIHByb3h5IGZvciBIVFRQ
LCBsb25nLXBvbGxpbmcsIFdlYnNvY2tldHMgYW5kIEV2ZW50U291cmNlIChT
U0UpCiogW25neF9wYWdlc3BlZWRdKGh0dHA6Ly9uZ3hwYWdlc3BlZWQuY29t
LykgKFtHaXRodWJdKGh0dHBzOi8vZ2l0aHViLmNvbS9wYWdlc3BlZWQvbmd4
X3BhZ2VzcGVlZCkpIOKAlCBBdXRvbWF0aWMgUGFnZVNwZWVkIG9wdGltaXph
dGlvbiBtb2R1bGUgZm9yIE5naW54CiogW01vZFNlY3VyaXR5XShodHRwczov
L3d3dy5tb2RzZWN1cml0eS5vcmcvKSDigJQgT3BlbiBTb3VyY2UgV2ViIEFw
cGxpY2F0aW9uIEZpcmV3YWxsCiogW05BWFNJXShodHRwczovL2dpdGh1Yi5j
b20vbmJzLXN5c3RlbS9uYXhzaSkg4oCUIE5BWFNJIGlzIGFuIG9wZW4tc291
cmNlLCBoaWdoIHBlcmZvcm1hbmNlLCBsb3cgcnVsZXMgbWFpbnRlbmFuY2Ug
V0FGIGZvciBOR0lOWDsgTkFYU0kgbWVhbnMgTmdpbnggQW50aSBYc3MgJiBT
cWwgSW5qZWN0aW9uCiogW25naW54LXVwc3luYy1tb2R1bGVdKGh0dHBzOi8v
Z2l0aHViLmNvbS93ZWlib2NvbS9uZ2lueC11cHN5bmMtbW9kdWxlKSDigJQg
TmdpbnggQyBtb2R1bGUsIHN5bmNpbmcgdXBzdHJlYW1zIGZyb20gY29uc3Vs
IG9yIG90aGVycywgZHluYW1pY2xseSBhZGp1c3RpbmcgYmFja2VuZCBzZXJ2
ZXJzIHdlaWdodCwgbmVlZG4ndCByZWxvYWQgbmdpbngKKiBbc2Fzcy1uZ2lu
eC1tb2R1bGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9tbmV1ZGVydC9zYXNzLW5n
aW54LW1vZHVsZSkg4oCUIFN5bnRhY3RpY2FsbHkgQXdlc29tZSBOZ2lueCBN
b2R1bGUKKiBbTW9yZSAzcmQgUGFydHkgTW9kdWxlc10oaHR0cHM6Ly93d3cu
bmdpbnguY29tL3Jlc291cmNlcy93aWtpL21vZHVsZXMvKQoKIyMgTGlicmFy
aWVzCgojIyMjIENvcmUgTGlicmFyaWVzCgpDb3JlIExpYnJhcmllcyBhcmUg
YnVuZGxlZCBpbiBPcGVuUmVzdHkgcGFja2FnZSwgYW5kIHlvdSBkb24ndCBu
ZWVkIHRvIHNlcGFyYXRlbHkgaW5zdGFsbCB0aGVtLgoKKiBbbHVhLXJlc3R5
LWNvcmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVucmVzdHkvbHVhLXJlc3R5
LWNvcmUpIOKAlCBOZXcgRkZJLWJhc2VkIEx1YSBBUEkgZm9yIHRoZSBuZ3hf
bHVhIG1vZHVsZQoqIFtsdWEtcmVzdHktdXBzdHJlYW0taGVhbHRoY2hlY2td
KGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVucmVzdHkvbHVhLXJlc3R5LXVwc3Ry
ZWFtLWhlYWx0aGNoZWNrKSDigJQgSGVhbHRoIENoZWNrZXIgZm9yIE5naW54
IFVwc3RyZWFtIFNlcnZlcnMgaW4gUHVyZSBMdWEKKiBbbHVhLXJlc3R5LXN0
cmluZ10oaHR0cHM6Ly9naXRodWIuY29tL29wZW5yZXN0eS9sdWEtcmVzdHkt
c3RyaW5nKSDigJQgU3RyaW5nIHV0aWxpdGllcyBhbmQgY29tbW9uIGhhc2gg
ZnVuY3Rpb25zIGZvciBuZ3hfbHVhIGFuZCBMdWFKSVQKKiBbbHVhLXJlc3R5
LWxvY2tdKGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVucmVzdHkvbHVhLXJlc3R5
LWxvY2spIOKAlCBTaW1wbGUgbm9uYmxvY2tpbmcgbG9jayBBUEkgZm9yIG5n
eF9sdWEgYmFzZWQgb24gc2hhcmVkIG1lbW9yeSBkaWN0aW9uYXJpZXMKKiBb
bHVhLXJlc3R5LWxydWNhY2hlXShodHRwczovL2dpdGh1Yi5jb20vb3BlbnJl
c3R5L2x1YS1yZXN0eS1scnVjYWNoZSkg4oCUIEx1YS1sYW5kIExSVSBDYWNo
ZSBiYXNlZCBvbiBMdWFKSVQgRkZJCiogW2x1YS1yZXN0eS1kbnNdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9vcGVucmVzdHkvbHVhLXJlc3R5LWRucykg4oCUIERO
UyByZXNvbHZlciBmb3IgdGhlIE5naW54IEx1YSBtb2R1bGUKKiBbbHVhLXJl
c3R5LXJlc29sdmVyXShodHRwczovL2dpdGh1Yi5jb20vamtleXMwODkvbHVh
LXJlc3R5LXJlc29sdmVyKSDigJQgQ2FjaGluZyBETlMgcmVzb2x2ZXIgZm9y
IG5neF9sdWEgYW5kIEx1YUpJVAoqIFtsdWEtcmVzdHktdXBsb2FkXShodHRw
czovL2dpdGh1Yi5jb20vb3BlbnJlc3R5L2x1YS1yZXN0eS11cGxvYWQpIOKA
lCBTdHJlYW1pbmcgcmVhZGVyIGFuZCBwYXJzZXIgZm9yIEhUVFAgZmlsZSB1
cGxvYWRpbmcgYmFzZWQgb24gbmd4X2x1YSBjb3NvY2tldAoqIFtsdWEtcmVz
dHktd2Vic29ja2V0XShodHRwczovL2dpdGh1Yi5jb20vb3BlbnJlc3R5L2x1
YS1yZXN0eS13ZWJzb2NrZXQpIOKAlCBMdWEgV2ViU29ja2V0IGltcGxlbWVu
dGF0aW9uIGZvciB0aGUgbmd4X2x1YSBtb2R1bGUKKiBbbHVhLXJlc3R5LW15
c3FsXShodHRwczovL2dpdGh1Yi5jb20vb3BlbnJlc3R5L2x1YS1yZXN0eS1t
eXNxbCkg4oCUIE5vbi1ibG9ja2luZyBMdWEgTXlTUUwgY2xpZW50IGRyaXZl
ciBmb3Igbmd4X2x1YSBiYXNlZCBvbiB0aGUgY29zb2NrZXQgQVBJCiogW2x1
YS1yZXN0eS1tZW1jYWNoZWRdKGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVucmVz
dHkvbHVhLXJlc3R5LW1lbWNhY2hlZCkg4oCUIEx1YSBtZW1jYWNoZWQgY2xp
ZW50IGRyaXZlciBmb3IgdGhlIG5neF9sdWEgYmFzZWQgb24gdGhlIGNvc29j
a2V0IEFQSQoqIFtsdWEtcmVzdHktcmVkaXNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9vcGVucmVzdHkvbHVhLXJlc3R5LXJlZGlzKSDigJQgTHVhIFJlZGlzIGNs
aWVudCBkcml2ZXIgZm9yIHRoZSBuZ3hfbHVhIGJhc2VkIG9uIHRoZSBjb3Nv
Y2tldCBBUEkKKiBbbHVhLXJlZGlzLXBhcnNlcl0oaHR0cHM6Ly9naXRodWIu
Y29tL29wZW5yZXN0eS9sdWEtcmVkaXMtcGFyc2VyKSDigJQgUmVkaXMgcmVw
bHkgcGFyc2VyIGFuZCByZXF1ZXN0IGNvbnN0cnVjdG9yIGxpYnJhcnkgZm9y
IEx1YQoqIFtsdWEtcmRzLXBhcnNlcl0oaHR0cHM6Ly9naXRodWIuY29tL29w
ZW5yZXN0eS9sdWEtcmRzLXBhcnNlcikg4oCUIFJlc3R5LURCRC1TdHJlYW0g
KFJEUykgcGFyc2VyIGZvciBMdWEgd3JpdHRlbiBpbiBDCiogW2x1YS1janNv
bl0oaHR0cHM6Ly9naXRodWIuY29tL29wZW5yZXN0eS9sdWEtY2pzb24pIOKA
lCBMdWEgY0pTT04gaXMgYSBmYXN0IEpTT04gZW5jb2RpbmcgLyBwYXJzaW5n
IG1vZHVsZSBmb3IgTHVhCiogW2x1YS1yZXN0eS1zaGRpY3Qtc2ltcGxlXSho
dHRwczovL2dpdGh1Yi5jb20vb3BlbnJlc3R5L2x1YS1yZXN0eS1zaGRpY3Qt
c2ltcGxlKSDigJQgU2ltcGxlIGFwcGxpY2F0b24tb3JpZW50ZWQgaW50ZXJm
YWNlIHRvIHRoZSBPcGVuUmVzdHkgc2hhcmVkIGRpY3Rpb25hcnkgQVBJCiog
W2x1YS1yZXN0eS1tZW1jYWNoZWQtc2hkaWN0XShodHRwczovL2dpdGh1Yi5j
b20vb3BlbnJlc3R5L2x1YS1yZXN0eS1tZW1jYWNoZWQtc2hkaWN0KSDigJQg
UG93ZXJmdWwgbWVtY2FjaGVkIGNsaWVudCB3aXRoIGEgc2hkaWN0IGNhY2hp
bmcgbGF5ZXIgYW5kIG1hbnkgb3RoZXIgZmVhdHVyZXMKCiMjIyMgV2ViIEZy
YW1ld29ya3MKCiogW0xhcGlzXShodHRwOi8vbGVhZm8ubmV0L2xhcGlzLykg
4oCUIExhcGlzIGlzIGEgZnJhbWV3b3JrIGZvciBidWlsZGluZyB3ZWIgYXBw
bGljYXRpb25zIHVzaW5nIE1vb25TY3JpcHQgb3IgTHVhIHRoYXQgcnVucyBp
bnNpZGUgb2YgYSBjdXN0b21pemVkIHZlcnNpb24gb2YgTmdpbnggY2FsbGVk
IE9wZW5SZXN0eQoqIFtsb3JdKGh0dHA6Ly9sb3Iuc3Vtb3J5LmNvbS8pIChb
R2l0aHViXShodHRwczovL2dpdGh1Yi5jb20vc3Vtb3J5L2xvcikpIOKAlCBB
IGZhc3QgYW5kIG1pbmltYWxpc3Qgd2ViIGZyYW1ld29yayBiYXNlZCBvbiBP
cGVuUmVzdHkKKiBbVmFuaWxsYV0oaHR0cHM6Ly9naXRodWIuY29tL2lkZXZ6
L3ZhbmlsbGEpIOKAlCBBbiBPcGVuUmVzdHkgV2ViIEZyYW1ld29yawoqIFts
dWFzdGFyXShodHRwczovL2dpdGh1Yi5jb20vbHVhc3Rhci9sdWFzdGFyKSDi
gJQgQSBIVFRQIHNlcnZlciBhbmQgd2ViIGZyYW1ld29yayBiYXNlZCBvbiBP
cGVuUmVzdHkKKiBbTHVzdHldKGh0dHBzOi8vZ2l0aHViLmNvbS9PbGl2aW5l
LUxhYnMvbHVzdHkpIOKAlCBMdWEgUkVTVGZ1bCBXZWIgQXBwbGljYXRpb24g
RnJhbWV3b3JrLCBhbiBleHRlbnNpYmxlIGFuZCBzcGVlZHkgd2ViIGZyYW1l
d29yawoqIFtHSU5dKGh0dHBzOi8vZ2l0aHViLmNvbS9vc3RpbmVsbGkvZ2lu
KSDigJQgQSBmYXN0LCBsb3ctbGF0ZW5jeSwgbG93LW1lbW9yeSBmb290cHJp
bnQsIHdlYiBKU09OLUFQSSBmcmFtZXdvcmsgd2l0aCBUZXN0IERyaXZlbiBE
ZXZlbG9wbWVudCBoZWxwZXJzIGFuZCBwYXR0ZXJucwoqIFtRdWljayBTZXJ2
ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9kdWFsZmFjZS9xdWlja3NlcnZlcikg
4oCUIEEgU2VydmVyIEZyYW1ld29yayBCYXNlZCBvbiBPcGVuUmVzdHkKKiBb
U2FpbG9yXShodHRwczovL2dpdGh1Yi5jb20vc2FpbG9ycHJvamVjdC9zYWls
b3IpIOKAlCBBIEx1YSBNVkMgV2ViIEZyYW1ld29yawoqIFtsdWEtcmVzdHkt
cmFja10oaHR0cHM6Ly9naXRodWIuY29tL3BpbnRzaXplZC9sdWEtcmVzdHkt
cmFjaykg4oCUIEEgc2ltcGxlIGFuZCBleHRlbnNpYmxlIEhUVFAgc2VydmVy
IGZyYW1ld29yayBmb3IgT3BlblJlc3R5CiogW01PT0NISU5FXShodHRwczov
L2dpdGh1Yi5jb20vYXBwd2lsbGRldi9tb29jaGluZSkg4oCUIEEgc2ltcGxl
IGFuZCBsaWdodHdlaWdodCB3ZWIgZnJhbWV3b3JrIGJhc2VkIG9uIE9wZW5S
ZXN0eQoqIFtzaW5hdHJhLW9wZW5yZXN0eV0oaHR0cHM6Ly9naXRodWIuY29t
L2p0YXJjaGllL3NpbmF0cmEtb3BlbnJlc3R5KSDigJQgU2luYXRyYSBwb3J0
ZWQgdG8gT3BlblJlc3R5IGZyYW1ld29yawoqIFtsai13ZWJdKGh0dHBzOi8v
Z2l0aHViLmNvbS9raW5keS9sai13ZWIpIOKAlCBMaWdodHdlaWdodCBXZWIg
RnJhbWV3b3JrIEJhc2VkIE9uIG5neF9vcGVucmVzdHkKKiBbR2ltbGV0IENv
Y2t0YWlsXShodHRwczovL2dpdGh1Yi5jb20vbG9zaW5nZ2VuZXJhdGlvbi9n
aW1sZXQpIOKAlCBBIG1pY3JvIHdlYiBhcHBsaWNhdGlvbiBmcmFtZXdvcmsg
Zm9yIE9wZW5SZXN0eSB3cml0dGVuIGluIE1vb25zY3JpcHQgaW5zcGlyZWQg
YnkgTWFydGluaSAmIFNpbmF0cmEKKiBbZHVyYXBdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9kb3VqaWFuZzI0L2R1cmFwKSDigJQgRHVyYXAgaXMgYSBMdWEgV2Vi
IEZyYW1ld29yayBiYXNlZCBvbiBPcGVuUmVzdHkuCiogW1ppZ2d5IFN0YXJk
dXN0XShodHRwczovL2dpdGh1Yi5jb20vYmFraW5zL3N0YXJkdXN0KSDigJQg
WmlnZ3kgU3RhcmR1c3QgKG9yIGp1c3QgInN0YXJkdXN0IikgaXMgYSBzaW1w
bGUgbmdpbngvTHVhIGZyYW1ld29yayBpbnNwaXJlZCBieSBTaW5hdHJhLCBF
eHByZXNzLCBhbmQgTWVyY3VyeQoqIFt6THVhXShodHRwczovL2dpdGh1Yi5j
b20vbXJ4eC96THVhKSDigJQgQSBDb2RlaWduaXRlciBsaWtlIEx1YSBmcmFt
ZXdvcmsgYmFzZWQgb24gT3BlblJlc3R5CiogW2x1YS1yZXN0eS1zdGFja10o
aHR0cHM6Ly9naXRodWIuY29tL2FudG9uaGVyeWFudG8vbHVhLXJlc3R5LXN0
YWNrKSDigJQgT3BlblJlc3R5IFNpbXBsZSBBcHBsaWNhdGlvbiBTdGFjawoq
IFtkb2RvbHVdKGh0dHBzOi8vZ2l0aHViLmNvbS96aGFuZ2Y5MTEvZG9kb2x1
KSDigJQgQSBsaWdodHdlaWdodCB3ZWIgZnJhbWV3b3JrIGJhc2VkIG9uIE9w
ZW5SZXN0eQoqIFtPY3RvcHVzXShodHRwczovL2dpdGh1Yi5jb20vY3liZXJ6
LWV1L29jdG9wdXMpIOKAlCBUaGUgTHVhIFdlYiBQbGF0Zm9ybQoqIFt2aWNr
eV0oaHR0cHM6Ly9naXRodWIuY29tL1JvY2tzb25aZXRhL3ZpY2t5KSDigJQg
QSByZXN0ZnVsIGZyYW1ld29yayBmb3Igb3BlbnJlc3R5LGluc3BpcmVkIGJ5
IGV4cHJlc3NqcyBhbmQga29hLgoKIyMjIyBXZWIgRGV2ZWxvcG1lbnQgRXNz
ZW50aWFscwoKKiBbbHVhLXJlc3R5LXVybF0oaHR0cHM6Ly9naXRodWIuY29t
LzNzY2FsZS9sdWEtcmVzdHktdXJsKSDigJQgVVJMIHBhcnNlciBmb3IgT3Bl
blJlc3R5CiogW2x1YS1yZXN0eS1jb29raWVdKGh0dHBzOi8vZ2l0aHViLmNv
bS9jbG91ZGZsYXJlL2x1YS1yZXN0eS1jb29raWUpIOKAlCBMdWEgbGlicmFy
eSBmb3IgSFRUUCBjb29raWUgbWFuaXB1bGF0aW9ucyBmb3IgT3BlblJlc3R5
L25neF9sdWEKKiBbbHVhLXJlc3R5LWNvcnNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9kZXRhaWx5YW5nL2x1YS1yZXN0eS1jb3JzKSDigJQgVGhlIENyb3NzLU9y
aWdpbiBSZXNvdXJjZSBTaGFyaW5nIChDT1JTKSBpbXBsZW1lbnRhdGlvbiBm
b3IgT3BlblJlc3R5CiogW2x1YS1yZXN0eS1zZXNzaW9uXShodHRwczovL2dp
dGh1Yi5jb20vYnVuZ2xlL2x1YS1yZXN0eS1zZXNzaW9uKSDigJQgU2Vzc2lv
biBsaWJyYXJ5IGZvciBPcGVuUmVzdHkgaW1wbGVtZW50aW5nIFNlY3VyZSBD
b29raWUgUHJvdG9jb2wKKiBbbHVhLXJlc3R5LXdvb3RoZWVdKGh0dHBzOi8v
Z2l0aHViLmNvbS93b290aGVlL2x1YS1yZXN0eS13b290aGVlKSDigJQgVGhl
IEx1YS1PcGVucmVzdHkgaW1wbGVtZW50YXRpb24gb2YgUHJvamVjdCBXb290
aGVlLCB3aGljaCBpcyBhIG11bHRpLWxhbmd1YWdlIHVzZXItYWdlbnQgc3Ry
aW5ncyBwYXJzZXJzCiogW2x1YS1yZXN0eS1tb2JpbGVdKGh0dHBzOi8vZ2l0
aHViLmNvbS9pc2FnZS9sdWEtcmVzdHktbW9iaWxlKSDigJQgVGhpcyBsaWJy
YXJ5IHBhcnNlcyBIVFRQIGhlYWRlcnMgYW5kIGRldGVjdHMgbW9iaWxlIGRl
dmljZQoqIFtsdWEtcmVzdHktand0XShodHRwczovL2dpdGh1Yi5jb20vU2t5
TG90aGFyL2x1YS1yZXN0eS1qd3QpIOKAlCBKV1QgKEpTT04gV2ViIFRva2Vu
cykgZm9yIFRoZSBHcmVhdCBPcGVuUmVzdHkKKiBbbmV0dXJsXShodHRwczov
L2dpdGh1Yi5jb20vZ29sZ290ZS9uZXR1cmwpIOKAlCBVUkwgYW5kIFF1ZXJ5
IHN0cmluZyBwYXJzZXIsIGJ1aWxkZXIsIG5vcm1hbGl6ZXIgZm9yIEx1YQoq
IFtNaW9dKGh0dHBzOi8vZ2l0aHViLmNvbS9pcmVzdHkvTWlvKSDigJQgQVBJ
IHN0YXRpc3RpY3Mvc3VtbWFyeSBhbmQgaGVhbHRoIGRhdGFzIGluIE5HSU5Y
IGJhc2VkIG9uIE9wZW5SZXN0eSwganVzdCBsaWtlIE5HSU5YIFBsdXMKCiMj
IyMgUm91dGluZyBMaWJyYXJpZXMKCiogW2x1YS1yZXN0eS1yb3V0ZV0oaHR0
cHM6Ly9naXRodWIuY29tL2J1bmdsZS9sdWEtcmVzdHktcm91dGUpIOKAlCBB
IFVSTCByb3V0aW5nIGxpYnJhcnkgZm9yIE9wZW5SZXN0eSBzdXBwb3J0aW5n
IG11bHRpcGxlIHJvdXRlIG1hdGNoZXJzLCBtaWRkbGV3YXJlLCBhbmQgSFRU
UCBhbmQgV2ViU29ja2V0cyBoYW5kbGVycyB0byBtZW50aW9uIGEgZmV3IG9m
IGl0cyBmZWF0dXJlcwoqIFtyb3V0ZXIubHVhXShodHRwczovL2dpdGh1Yi5j
b20vQVBJdG9vbHMvcm91dGVyLmx1YSkg4oCUIEEgYmFyZWJvbmVzIHJvdXRl
ciBmb3IgTHVhLCBpdCBtYXRjaGVzIFVSTHMgYW5kIGV4ZWN1dGVzIEx1YSBm
dW5jdGlvbnMKKiBbbHVhLXJlc3R5LXIzXShodHRwczovL2dpdGh1Yi5jb20v
dG9yaXRvcmkwMzE4L2x1YS1yZXN0eS1yMykg4oCUIFtsaWJyM10oaHR0cHM6
Ly9naXRodWIuY29tL2M5cy9yMykgT3BlblJlc3R5IGltcGxlbWVudGF0aW9u
LCBsaWJyMyBpcyBhIGhpZ2gtcGVyZm9ybWFuY2UgcGF0aCBkaXNwYXRjaGlu
ZyBsaWJyYXJ5LiBJdCBjb21waWxlcyB5b3VyIHJvdXRlIHBhdGhzIGludG8g
YSBwcmVmaXggdHJlZSAodHJpZSkuIEJ5IHVzaW5nIHRoZSBjb25zdHJ1Y3Rl
ZCBwcmVmaXggdHJpZSBpbiB0aGUgc3RhcnQtdXAgdGltZSwgeW91IG1heSBk
aXNwYXRjaCB5b3VyIHJvdXRlcyB3aXRoIGVmZmljaWVuY3kKKiBbbHVhLXJl
c3R5LWxpYnIzXShodHRwczovL2dpdGh1Yi5jb20vaXJlc3R5L2x1YS1yZXN0
eS1saWJyMykg4oCUIEhpZ2gtcGVyZm9ybWFuY2UgcGF0aCBkaXNwYXRjaGlu
ZyBsaWJyYXJ5IGJhc2Ugb24gW2xpYnIzXShodHRwczovL2dpdGh1Yi5jb20v
YzlzL3IzKSBmb3IgT3BlblJlc3R5CgojIyMjIFJlcXVlc3QgQXJnbWVudHMg
UGFyc2VycwoKKiBbbHVhLXJlc3R5LXJlcWFyZ3NdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9idW5nbGUvbHVhLXJlc3R5LXJlcWFyZ3MpIOKAlCBIZWxwZXIgdG8g
UmV0cmlldmUgYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkLCBt
dWx0aXBhcnQvZm9ybS1kYXRhLCBhbmQgYXBwbGljYXRpb24vanNvbiBSZXF1
ZXN0IEFyZ3VtZW50cwoqIFtsdWEtcmVzdHktcG9zdF0oaHR0cHM6Ly9naXRo
dWIuY29tL2FudG9uaGVyeWFudG8vbHVhLXJlc3R5LXBvc3QpIOKAlCBIVFRQ
IFBvc3QgVXRpbGl0eSBmb3IgT3BlblJlc3R5IChGaWxlIFVwbG9hZGluZyBI
ZWxwZXIpCiogW2x1YS1yZXN0eS1tdWx0aXBhcnQtcGFyc2VyXShodHRwczov
L2dpdGh1Yi5jb20vYWdlbnR6aC9sdWEtcmVzdHktbXVsdGlwYXJ0LXBhcnNl
cikg4oCUIFNpbXBsZSBtdWx0aXBhcnQgZGF0YSBwYXJzZXIgZm9yIE9wZW5S
ZXN0eSAvIEx1YQoqIFtsdWEtcmVzdHktbXVsdGlwYXJ0XShodHRwczovL2dp
dGh1Yi5jb20vdGhpYmF1bHRjaGEvbHVhLXJlc3R5LW11bHRpcGFydCkg4oCU
IE11bHRpcGFydCBwYXJzaW5nIGxpYnJhcnkgZm9yIE9wZW5SZXN0eQoKIyMj
IyBNaWRkbGV3YXJlIGFuZCBBUEkgVG9vbHMKCiogW0tvbmddKGh0dHBzOi8v
Z2V0a29uZy5vcmcvKSAoW0dpdEh1Yl0oaHR0cHM6Ly9naXRodWIuY29tL0tv
bmcva29uZykpIOKAlCBLT05HOiBNaWNyb3NlcnZpY2UgTWFuYWdlbWVudCBM
YXllciAoU2VjdXJlLCBNYW5hZ2UgJiBFeHRlbmQgeW91ciBBUElzIGFuZCBN
aWNyb3NlcnZpY2VzKQoqIFtMU1NPXShodHRwczovL2dpdGh1Yi5jb20vbWFp
b21lLWRldmVsb3BtZW50L2xzc28pIOKAlCBBIExpZ2h0d2VpZ2h0IFNTTyBt
aWRkbGV3YXJlIGZvciBOZ2lueCArIEx1YQoqIFthcGlnYXRld2F5XShodHRw
czovL2dpdGh1Yi5jb20vYWRvYmUtYXBpcGxhdGZvcm0vYXBpZ2F0ZXdheSkg
4oCUIEEgUGVyZm9ybWFudCBBUEkgR2F0ZXdheSBiYXNlZCBvbiBOZ2lueCBh
bmQgT3BlblJlc3R5CiogWzNzY2FsZSBBUEljYXN0XShodHRwczovL2dpdGh1
Yi5jb20vM3NjYWxlL2FwaWNhc3QpIOKAlCBBUEkgZ2F0ZXdheSBtb2R1bGUg
b2YgUmVkIEhhdCAzc2NhbGUgQVBJIE1hbmFnZW1lbnQKKiBbU3Vtb3J5IE9y
YW5nZV0oaHR0cHM6Ly9naXRodWIuY29tL3N1bW9yeS9vcmFuZ2UpIOKAlCBB
UEkgR2F0ZXdheQoqIFtNb25hcmNoIEFQSSBHYXRld2F5XShodHRwczovL2dp
dGh1Yi5jb20vbW9uYXJjaGFwaXMvZ2F0ZXdheS1vcGVucmVzdHkpICDigJQg
T3BlblJlc3R5LWJhc2VkIEFQSSBHYXRld2F5CiogW0FQSVNJWF0oaHR0cHM6
Ly9naXRodWIuY29tL2lyZXN0eS9hcGlzaXgpICDigJQgQVBJU0lYIGlzIGEg
Q2xvdWQtTmF0aXZlIE1pY3Jvc2VydmljZXMgQVBJIEdhdGV3YXkKCiMjIyMg
VGVtcGxhdGluZwoKKiBbbHVhLXJlc3R5LXRlbXBsYXRlXShodHRwczovL2dp
dGh1Yi5jb20vYnVuZ2xlL2x1YS1yZXN0eS10ZW1wbGF0ZSkg4oCUIEEgQ29t
cGlsaW5nIChIVE1MKSB0ZW1wbGF0aW5nIGVuZ2luZSBmb3IgTHVhIGFuZCBP
cGVuUmVzdHkKKiBbbGVtcGxhdGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVu
cmVzdHkvbGVtcGxhdGUpIOKAlCBPcGVuUmVzdHkvTHVhIHRlbXBsYXRlIGZy
YW1ld29yayBpbXBsZW1lbnRpbmcgUGVybCdzIFRUMiB0ZW1wbGF0aW5nIGxh
bmd1YWdlCiogW2V0bHVhXShodHRwczovL2dpdGh1Yi5jb20vbGVhZm8vZXRs
dWEpIOKAlCBFbWJlZGRlZCBMdWEgdGVtcGxhdGVzCiogW2xpcXVpZC1sdWFd
KGh0dHBzOi8vZ2l0aHViLmNvbS9jaGVueGlhbnl1MjAxNS9saXF1aWQtbHVh
KSDigJQgQSBMdWEgaW1wbGVtZW50YXRpb24gb2YgTGlxdWlkIGZvciBPcGVu
UmVzdHkgcGxhdGZvcm0KKiBbbHVhLXJlc3R5LXRtcGxdKGh0dHBzOi8vZ2l0
aHViLmNvbS9sbG95ZHpob3UvbHVhLXJlc3R5LXRtcGwpIOKAlCBBIHNpbXBs
ZSB0ZW1wbGF0ZSBlbmdpbmUgZm9yIEx1YSBhbmQgT3BlblJlc3R5LCBkZXJp
dmVkIGZyb20gW2x1YS10ZW1wbGF0ZV0oaHR0cHM6Ly9naXRodWIuY29tL2Rh
bm5vdGUvbHVhLXRlbXBsYXRlKS4KKiBbQWx0ZXJuYXRpdmVzXShodHRwczov
L2dpdGh1Yi5jb20vYnVuZ2xlL2x1YS1yZXN0eS10ZW1wbGF0ZSNhbHRlcm5h
dGl2ZXMpIOKAlCBTb21lIGFsdGVybmF0aXZlIEx1YSB0ZW1wbGF0aW5nIHNv
bHV0aW9ucyB0aGF0IG1heSB3b3JrIGp1c3QgZmluZSB3aXRoIE9wZW5SZXN0
eQoKIyMjIyBWYWxpZGF0aW9uCgoqIFtsdWEtcmVzdHktdmFsaWRhdGlvbl0o
aHR0cHM6Ly9naXRodWIuY29tL2J1bmdsZS9sdWEtcmVzdHktdmFsaWRhdGlv
bikg4oCUIEFuIGV4dGVuZGFibGUgY2hhaW5pbmcgdmFsaWRhdGlvbiBhbmQg
ZmlsdGVyaW5nIGxpYnJhcnkgZm9yIEx1YSBhbmQgT3BlblJlc3R5CiogW3Zh
bHVhXShodHRwczovL2dpdGh1Yi5jb20vc2FpbG9ycHJvamVjdC92YWx1YSkg
4oCUIFZhbGlkYXRpb24gZm9yIGx1YSEgQSBtb2R1bGUgZm9yIG1ha2luZyBj
aGFpbmVkIHZhbGlkYXRpb25zLiBDcmVhdGUgeW91ciBvYmplY3RzLCBhcHBl
bmQgeW91ciB0ZXN0cywgdXNlIGFuZCByZXVzZSBpdCEKCiMjIyMgQXV0aGVu
dGljYXRpb24gYW5kIEF1dGhvcml6YXRpb24KCiogW2x1YS1yZXN0eS1tYWNh
cm9vbnNdKGh0dHBzOi8vZ2l0aHViLmNvbS9idW5nbGUvbHVhLXJlc3R5LW1h
Y2Fyb29ucykg4oCUIEx1YUpJVCBGRkkgQmluZGluZ3MgdG8gbGlibWFjYXJv
b25zIOKAkyBNYWNhcm9vbnMgYXJlIGZsZXhpYmxlIGF1dGhvcml6YXRpb24g
Y3JlZGVudGlhbHMgdGhhdCBzdXBwb3J0IGRlY2VudHJhbGl6ZWQgZGVsZWdh
dGlvbiwgYXR0ZW51YXRpb24sIGFuZCB2ZXJpZmljYXRpb24KKiBbbHVhLXJl
c3R5LW9wZW5pZGNdKGh0dHBzOi8vZ2l0aHViLmNvbS9waW5naWRlbnRpdHkv
bHVhLXJlc3R5LW9wZW5pZGMpIOKAlCBsdWEtcmVzdHktb3BlbmlkYyBpcyBh
IGxpYnJhcnkgZm9yIE5HSU5YIGltcGxlbWVudGluZyB0aGUgT3BlbklEIENv
bm5lY3QgUmVseWluZyBQYXJ0eSAoUlApIGFuZCB0aGUgT0F1dGggMi4wIFJl
c291cmNlIFNlcnZlciAoUlMpIGZ1bmN0aW9uYWxpdHkKKiBbbHVhLXJlc3R5
LWR1by1tb2JpbGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9wMHByMGNrNS9sdWEt
cmVzdHktZHVvLW1vYmlsZSkg4oCUIE9wZW5SZXN0eSBjbGllbnQgZm9yIHRo
ZSBEdW8gTW9iaWxlIEF1dGggQVBJCiogW21pY3JvLWF1dGhdKGh0dHBzOi8v
Z2l0aHViLmNvbS9oeXBlYmVhc3QvbWljcm8tYXV0aCkg4oCUIEEgbWljcm9z
ZXJ2aWNlIHRoYXQgbWFrZXMgYWRkaW5nIGF1dGhlbnRpY2F0aW9uIHdpdGgg
R29vZ2xlIGFuZCBHaXRodWIgdG8geW91ciBhcHBsaWNhdGlvbiBlYXN5IChO
b3RlOiBiZWZvcmUgdXNpbmcgaXQgaW4gcHJvZHVjdGlvbiwgc2VlOiBodHRw
czovL25ld3MueWNvbWJpbmF0b3IuY29tL2l0ZW0/aWQ9MTM2ODI2ODIg4oCU
IGhvcGVmdWxseSB3ZSBjYW4gcmVtb3ZlIHRoaXMgcmVtYXJrIGluIGEgZnV0
dXJlKQoKIyMjIyBDcnlwdG9ncmFwaHkKCiogW2x1YS1yZXN0eS1zdHJpbmdd
KGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVucmVzdHkvbHVhLXJlc3R5LXN0cmlu
Zykg4oCUIFN0cmluZyB1dGlsaXRpZXMgYW5kIGNvbW1vbiBoYXNoIGZ1bmN0
aW9ucyBmb3Igbmd4X2x1YSBhbmQgTHVhSklUCiogW2x1YS1yZXN0eS1uZXR0
bGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9idW5nbGUvbHVhLXJlc3R5LW5ldHRs
ZSkg4oCUIEx1YUpJVCBGRkkgYmluZGluZ3MgZm9yIE5ldHRsZSAoYSBsb3ct
bGV2ZWwgY3J5cHRvZ3JhcGhpYyBsaWJyYXJ5KQoqIFtsdWEtcmVzdHktY2hh
c2hdKGh0dHBzOi8vZ2l0aHViLmNvbS9hZ2VudHpoL2x1YS1yZXN0eS1jaGFz
aCkg4oCUIEEgZ2VuZXJpYyBjb25zaXN0ZW50IGhhc2ggaW1wbGVtZW50YXRp
b24gZm9yIE9wZW5SZXN0eS9MdWEKKiBbbHVhLXJlc3R5LWp1bXAtY29uc2lz
dGVudC1oYXNoXShodHRwczovL2dpdGh1Yi5jb20vcnVvc2hhbi9sdWEtcmVz
dHktanVtcC1jb25zaXN0ZW50LWhhc2gpIOKAlCBKdW1wIENvbnNpc3RlbnQg
SGFzaCBmb3IgTHVhSklUCiogW2x1YS1yZXN0eS1sZXRzZW5jcnlwdF0oaHR0
cHM6Ly9naXRodWIuY29tL3Rvcmh2ZS9sdWEtcmVzdHktbGV0c2VuY3J5cHQp
IOKAlCBBdXRvbWF0aWNhbGx5IGZldGNoIGFuZCByZW5ldyBUTFMgY2VydGlm
aWNhdGVzIG9uIHRoZSBmbHkgdXNpbmcgTGV0c0VuY3J5cHQgQ0EuCiogW2x1
YS1yZXN0eS1hdXRvLXNzbF0oaHR0cHM6Ly9naXRodWIuY29tL0dVSS9sdWEt
cmVzdHktYXV0by1zc2wpIOKAlCBPbiB0aGUgZmx5IChhbmQgZnJlZSkgU1NM
IHJlZ2lzdHJhdGlvbiBhbmQgcmVuZXdhbCBpbnNpZGUgT3BlblJlc3R5L25n
aW54IHdpdGggTGV0J3MgRW5jcnlwdAoqIFtsdWEtcmVzdHktcGV0ZXJfc3Ns
ZXJzXShodHRwczovL2dpdGh1Yi5jb20vYXB0aXNlL2x1YS1yZXN0eS1wZXRl
cl9zc2xlcnMpIOKAlCBBdXRvbWF0aWNseSBsb2Fkcy9jYWNoZSBTU0wgY2Vy
dGlmaWNhdGVzIGJhc2VkIG9uIFNOSSBmcm9tIGNhY2hlcyBvciBiYWNrZW5k
IGpzb24gc2VydmVycwoqIFtsdWEtcmVzdHktbXVybXVyaGFzaDJdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9idW5nbGUvbHVhLXJlc3R5LW11cm11cmhhc2gyKSDi
gJQgTHVhSklUIE11cm11ckhhc2ggMiBiaW5kaW5ncyB0byBOZ2lueCAvIE9w
ZW5SZXN0eSBtdXJtdXJoYXNoMiBpbXBsZW1lbnRhdGlvbgoqIFtsdWEtcmVz
dHktaG1hY10oaHR0cHM6Ly9naXRodWIuY29tL2phbWVzbWFybG93ZS9sdWEt
cmVzdHktaG1hYykg4oCUIEx1YSBkcml2ZXIgZm9yIG1ha2luZyBhbmQgcmVj
ZWl2aW5nIGhtYWMgc2lnbmVkIHJlcXVlc3RzCiogW2x1YS1yZXN0eS1zY3J5
cHRdKGh0dHBzOi8vZ2l0aHViLmNvbS9idW5nbGUvbHVhLXJlc3R5LXNjcnlw
dCkg4oCUIEx1YUpJVCBGRkktYmFzZWQgc2NyeXB0IGxpYnJhcnkgZm9yIE9w
ZW5SZXN0eQoqIFtsdWEtcmVzdHkteHhoYXNoXShodHRwczovL2dpdGh1Yi5j
b20vYnVuZ2xlL2x1YS1yZXN0eS14eGhhc2gpIOKAlCBMdWFKSVQgRkZJLWJp
bmRpbmdzIHRvIHh4SGFzaCwgYW4gRXh0cmVtZWx5IGZhc3Qgbm9uLWNyeXB0
b2dyYXBoaWMgaGFzaCBhbGdvcml0aG0KKiBbbHVhLXJlc3R5LXJzYV0oaHR0
cHM6Ly9naXRodWIuY29tL3NwYWNld2FuZGVyL2x1YS1yZXN0eS1yc2EpIOKA
lCBSU0EgZnVuY3Rpb25zIGZvciBMdWFKSVQKKiBbbHVhLXJlc3R5LWFlYWRd
KGh0dHBzOi8vZ2l0aHViLmNvbS90bXRocmdkL2x1YS1yZXN0eS1hZWFkKSDi
gJQgQUVBRCBjaXBoZXIgbGlicmFyeSBmb3IgbHVhLW5naW54LW1vZHVsZS4g
Qm9yaW5nU1NMIG9ubHkuCiogW2x1YS1yZXN0eS1oYXdrXShodHRwczovL2dp
dGh1Yi5jb20vZ29sZ290ZS9sdWEtcmVzdHktaGF3aykg4oCUIEhhd2sgYXV0
aGVudGljYXRpb24gb24gTmdpbnggd2l0aCBMdWEgYW5kIE9wZW5SZXN0eQoq
IFtsdWEtcmVzdHktdXJhbmRvbV0oaHR0cHM6Ly9naXRodWIuY29tL3AwcHIw
Y2s1L2x1YS1yZXN0eS11cmFuZG9tKSDigJQgQnVmZmVyZWQgd3JhcHBlciBm
b3IgTGludXgvQlNEIGtlcm5lbCBzcGFjZSBDU1BSTkcKKiBbbHVhLXJlc3R5
LWZhc3RwYmtkZjJdKGh0dHBzOi8vZ2l0aHViLmNvbS9teW5hbWVpc2NmZWQv
bHVhLXJlc3R5LWZhc3RwYmtkZjIpIOKAlCBMdWEgYmluZGluZ3MgdG8gZmFz
dHBia2RmMgoqIFtsdWEtYXJnb24yLWZmaV0oaHR0cHM6Ly9naXRodWIuY29t
L3RoaWJhdWx0Q2hhL2x1YS1hcmdvbjItZmZpKSDigJQgTHVhSklUIEZGSSBi
aW5kaW5nIGZvciB0aGUgQXJnb24yIHBhc3N3b3JkIGhhc2hpbmcgYWxnb3Jp
dGhtCiogW2x1YS1yZXN0eS1kZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9saWxp
ZW4xMDEwL2x1YS1yZXN0eS1kZXMpIOKAlCBMdWEgaW50ZXJmYWNlIHRvIG1h
a2UgREVTIEVDQiBlbmNyeXB0aW9uCiogW1dYQml6TXNnQ3J5cHRdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9UaGVOb3J0aE1lbW9yeS9XWEJpek1zZ0NyeXB0KSDi
gJQgTHVhIHZlcnNpb24gb2YgdGhlIFdlQ2hhdCBNZXNzYWdlIENyeXB0b2dy
YXBoeQoKIyMjIyBOZXR3b3JraW5nCgoqIFtsdWEtcmVzdHktaHR0cF0oaHR0
cHM6Ly9naXRodWIuY29tL3BpbnRzaXplZC9sdWEtcmVzdHktaHR0cCkgYnkg
W0BwaW50c2l6ZWRdKGh0dHBzOi8vZ2l0aHViLmNvbS9waW50c2l6ZWQpIOKA
lCBMdWEgSFRUUCBjbGllbnQgY29zb2NrZXQgZHJpdmVyIGZvciBPcGVuUmVz
dHkgLyBuZ3hfbHVhCiogW2x1YS1yZXN0eS1odHRwXShodHRwczovL2dpdGh1
Yi5jb20vbGlzZWVuL2x1YS1yZXN0eS1odHRwKSBieSBbQGxpc2Vlbl0oaHR0
cHM6Ly9naXRodWIuY29tL2xpc2Vlbikg4oCUIEx1YSBodHRwIGNsaWVudCBk
cml2ZXIgZm9yIHRoZSBuZ3hfbHVhIGJhc2VkIG9uIHRoZSBjb3NvY2tldCBB
UEkKKiBbbHVhLXJlc3R5LWh0dHBdKGh0dHBzOi8vZ2l0aHViLmNvbS9Eb3Jp
YW5HcmF5L2x1YS1yZXN0eS1odHRwKSBieSBbQERvcmlhbkdyYXldKGh0dHBz
Oi8vZ2l0aHViLmNvbS9Eb3JpYW5HcmF5KSDigJQgTHVhIEhUVFAgY2xpZW50
IGRyaXZlciBmb3Igbmd4X2x1YSBiYXNlZCBvbiB0aGUgY29zb2NrZXQgQVBJ
CiogW2x1YS1yZXN0eS1odHRwLXNpbXBsZV0oaHR0cHM6Ly9naXRodWIuY29t
L2Jha2lucy9sdWEtcmVzdHktaHR0cC1zaW1wbGUpIOKAlCBTaW1wbGUgTHVh
IEhUVFAgY2xpZW50IGRyaXZlciBmb3Igbmd4X2x1YQoqIFtsdWEtcmVzdHkt
aHR0cGlwZV0oaHR0cHM6Ly9naXRodWIuY29tL3RpbWVidWcvbHVhLXJlc3R5
LWh0dHBpcGUpIOKAlCBMdWEgSFRUUCBjbGllbnQgY29zb2NrZXQgZHJpdmVy
IGZvciBPcGVuUmVzdHkgLyBuZ3hfbHVhCiogW2x1YS1yZXN0eS1odHRwY2xp
ZW50XShodHRwczovL2dpdGh1Yi5jb20vb25lb28vbHVhLXJlc3R5LWh0dHBj
bGllbnQpIOKAlCBOb25ibG9ja2luZyBMdWEgSFRUUCBDbGllbnQgbGlicmFy
eSBmb3IgYUxpTHVhICYgbmd4X2x1YQoqIFtsdWEtaHR0cGNsaS1yZXN0eV0o
aHR0cHM6Ly9naXRodWIuY29tL21haDB4MjExL2x1YS1odHRwY2xpLXJlc3R5
KSDigJQgTHVhIEhUVFAgY2xpZW50IG1vZHVsZSBmb3IgT3BlblJlc3R5Ciog
W2x1YS1yZXN0eS1yZXF1ZXN0c10oaHR0cHM6Ly9naXRodWIuY29tL3Rva2Vy
cy9sdWEtcmVzdHktcmVxdWVzdHMpIOKAlCBZZXQgQW5vdGhlciBIVFRQIExp
YnJhcnkgZm9yIE9wZW5SZXN0eQoqIFtsdWEtcmVzdHktd2Vic29ja2V0XSho
dHRwczovL2dpdGh1Yi5jb20vb3BlbnJlc3R5L2x1YS1yZXN0eS13ZWJzb2Nr
ZXQpIOKAlCBMdWEgV2ViU29ja2V0IGltcGxlbWVudGF0aW9uIGZvciB0aGUg
bmd4X2x1YSBtb2R1bGUKKiBbbHVhLXJlc3R5LW1lZGlhZG9yXShodHRwczov
L2dpdGh1Yi5jb20vS29uZy9sdWEtcmVzdHktbWVkaWFkb3IpIOKAlCBEZXRl
cm1pbmVzIGFkZHJlc3Mgb2YgcHJveGllZCByZXF1ZXN0IGFuZCBkb2VzIElQ
IGFkZHJlc3MgLyBDSURSIGJsb2NrcyBoYW5kbGluZyAoYm90aCBJUHY0IGFu
ZCBJUHY2KQoqIFtsdWEtcmVzdHktaXB1dGlsc10oaHR0cHM6Ly9naXRodWIu
Y29tL2hhbWlzaGZvcmJlcy9sdWEtcmVzdHktaXB1dGlscykg4oCUIFV0aWxp
dHkgZnVuY3Rpb25zIGZvciB3b3JraW5nIHdpdGggSVAgYWRkcmVzc2VzIGlu
IE9wZW5SZXN0eQoqIFtsdWEtcmVzdHktcmVhZHVybF0oaHR0cHM6Ly9naXRo
dWIuY29tL2phbWVzbWFybG93ZS9sdWEtcmVzdHktcmVhZHVybCkg4oCUIEx1
YSBsaWJyYXJ5IGZvciBjYXB0dXJpbmcgdXJscywgZGVjb2RpbmcsIGFuZCBs
b2dnaW5nIHJlc3VsdHMKKiBbbHVhLXJlc3R5LWRucy1jbGllbnRdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9Lb25nL2x1YS1yZXN0eS1kbnMtY2xpZW50KSDigJQg
THVhIGxpYnJhcnkgY29udGFpbmluZyBhIEROUyBjbGllbnQsIHNldmVyYWwg
dXRpbGl0aWVzLCBhbmQgYSBsb2FkLWJhbGFuY2VyCiogW2x1YS1yZXN0eS11
cHN0cmVhbV0oaHR0cHM6Ly9naXRodWIuY29tL2hhbWlzaGZvcmJlcy9sdWEt
cmVzdHktdXBzdHJlYW0pIOKAlCBVcHN0cmVhbSBjb25uZWN0aW9uIGxvYWQg
YmFsYW5jaW5nIGFuZCBmYWlsb3ZlciBtb2R1bGUKKiBbbHVhLXJlc3R5LWNo
ZWNrdXBzXShodHRwczovL2dpdGh1Yi5jb20vdXB5dW4vbHVhLXJlc3R5LWNo
ZWNrdXBzKSDigJQgTWFuYWdlIE5naW54IHVwc3RyZWFtcyBpbiBwdXJlIG5n
eF9sdWEKKiBbbHVhLXJlc3R5LXNvY2tzNV0oaHR0cHM6Ly9naXRodWIuY29t
L3N0YXJpdXMvbHVhLXJlc3R5LXNvY2tzNSkg4oCUIEx1YSBTT0NLUzUgY2xp
ZW50IGZvciB0aGUgbmd4X2x1YSBiYXNlZCBvbiB0aGUgY29zb2NrZXQgQVBJ
CiogW2x1YS1yZXN0eS13YWZdKGh0dHBzOi8vZ2l0aHViLmNvbS9wMHByMGNr
NS9sdWEtcmVzdHktd2FmKSDigJQgSGlnaC1wZXJmb3JtYW5jZSBXQUYgYnVp
bHQgb24gdGhlIE9wZW5SZXN0eSBzdGFjawoqIFtsdWEtcmVzdHktdGFycGl0
XShodHRwczovL2dpdGh1Yi5jb20vcDBwcjBjazUvbHVhLXJlc3R5LXRhcnBp
dCkg4oCUIE9wZW5SZXN0eSByZXNwb25zZSB0aW1lIGluZmxhdGlvbiwgY2Fw
dHVyZSBhbmQgZGVsYXkgdW53YW50ZWQgcmVxdWVzdHMKKiBbbHVhLXJlc3R5
LWpzb25ycGMtYmF0Y2hdKGh0dHBzOi8vZ2l0aHViLmNvbS9tb3Nhc2lydS9s
dWEtcmVzdHktanNvbnJwYy1iYXRjaCkg4oCUIEpTT04tUlBDIDIuMCBCYXRj
aCBSZXF1ZXN0IHByb3RvY29sIG1vZHVsZSBmb3IgT3BlblJlc3R5CiogW2x1
YS1yZXN0eS1saW1pdC10cmFmZmljXShodHRwczovL2dpdGh1Yi5jb20vb3Bl
bnJlc3R5L2x1YS1yZXN0eS1saW1pdC10cmFmZmljKSDigJQgTHVhIGxpYnJh
cnkgZm9yIGxpbWl0aW5nIGFuZCBjb250cm9sbGluZyB0cmFmZmljIGluIE9w
ZW5SZXN0eS9uZ3hfbHVhCiogW2x1YS1yZXN0eS1saW1pdHNdKGh0dHBzOi8v
Z2l0aHViLmNvbS9tZW1icGhpcy9sdWEtcmVzdHktbGltaXRzKSDigJQgTGlt
aXRzIHJlcXVlc3QgZXZlcnkgc2Vjb25kIG9yIG1pbnV0ZQoqIFtsdWEtcmVz
dHktZmFzdGNnaV0oaHR0cHM6Ly9naXRodWIuY29tL2JlbmFncmljb2xhL2x1
YS1yZXN0eS1mYXN0Y2dpKSDigJQgTHVhIEZDR0kgY2xpZW50IGRyaXZlciBm
b3Igbmd4X2x1YSBiYXNlZCBvbiB0aGUgY29zb2NrZXQgQVBJCiogW2x1YS1y
ZXN0eS1mdHBjbGllbnRdKGh0dHBzOi8vZ2l0aHViLmNvbS9BaHNpYWxoL2x1
YS1yZXN0eS1mdHBjbGllbnQpIOKAlCBMdWEgRlRQIGNsaWVudCBkcml2ZXIg
Zm9yIHRoZSBuZ3hfbHVhIGJhc2VkIG9uIHRoZSBjb3NvY2tldCBBUEkKKiBb
bHVhLWNhcG5wcm90b10oaHR0cHM6Ly9naXRodWIuY29tL2Nsb3VkZmxhcmUv
bHVhLWNhcG5wcm90bykg4oCUIENhcOKAmW4gUHJvdG8gaXMgYW4gaW5zYW5l
bHkgZmFzdCBkYXRhIGludGVyY2hhbmdlIGZvcm1hdCBhbmQgY2FwYWJpbGl0
eS1iYXNlZCBSUEMgc3lzdGVtCiogW2x1YS1yZXN0eS10b3JuZXJhXShodHRw
czovL2dpdGh1Yi5jb20vcGluZ2UvbHVhLXJlc3R5LXRvcm5lcmEpIOKAlCBB
IHRyYWZmaWMgcmVwbGF5IHRvb2wgd2l0aCBhbiBlYXN5IHRvIHVzZSBIVFRQ
IEFQSSBmb3IgT3BlblJlc3R5IC8gTHVhSklUCiogW2x1YS1yZXN0eS1jb25z
dWxdKGh0dHBzOi8vZ2l0aHViLmNvbS9oYW1pc2hmb3JiZXMvbHVhLXJlc3R5
LWNvbnN1bCkg4oCUIExpYnJhcnkgdG8gaW50ZXJmYWNlIHdpdGggdGhlIGNv
bnN1bCBIVFRQIEFQSSBmcm9tIG5neF9sdWEKKiBbbHVhLXJlc3R5LWhlYWx0
aGNoZWNrXShodHRwczovL2dpdGh1Yi5jb20vS29uZy9sdWEtcmVzdHktaGVh
bHRoY2hlY2spIOKAlCBIZWFsdGhjaGVjayBsaWJyYXJ5IGZvciBPcGVuUmVz
dHkgdG8gdmFsaWRhdGUgdXBzdHJlYW0gc2VydmljZSBzdGF0dXMKKiBbbHVh
LXJlc3R5LWJhbGFuY2VyXShodHRwczovL2dpdGh1Yi5jb20vb3BlbnJlc3R5
L2x1YS1yZXN0eS1iYWxhbmNlcikg4oCUIEEgZ2VuZXJpYyBjb25zaXN0ZW50
IGhhc2ggaW1wbGVtZW50YXRpb24gZm9yIE9wZW5SZXN0eQoqIFtsdWEtcmVz
dHktc25pcHJveHldKGh0dHBzOi8vZ2l0aHViLmNvbS9mZmZvbmlvbi9sdWEt
cmVzdHktc25pcHJveHkpIOKAlCBTTkkgUHJveHkgYmFzZWQgb24gc3RyZWFt
LWx1YS1uZ2lueC1tb2R1bGUKKiBbbHVhLXJlc3R5LW11bHRpcGxleGVyXSho
dHRwczovL2dpdGh1Yi5jb20vZmZmb25pb24vbHVhLXJlc3R5LW11bHRpcGxl
eGVyKSDigJQgVHJhbnNwYXJlbnQgcG9ydCBzZXJ2aWNlIG11bHRpcGxleGVy
IGZvciBzdHJlYW0gc3Vic3lzdGVtCiogW2x1YS1yZXN0eS1odHRwMl0oaHR0
cHM6Ly9naXRodWIuY29tL3Rva2Vycy9sdWEtcmVzdHktaHR0cDIpIOKAlCBU
aGUgSFRUUC8yIFByb3RvY29sIChDbGllbnQgU2lkZSkgSW1wbGVtZW50YXRp
b24gZm9yIE9wZW5SZXN0eQoKIyMjIyBEYXRhYmFzZXMgYW5kIFN0b3JhZ2Vz
CgoqIFtsdWEtcmVzdHktbXlzcWxdKGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVu
cmVzdHkvbHVhLXJlc3R5LW15c3FsKSDigJQgTm9uLWJsb2NraW5nIEx1YSBN
eVNRTCBjbGllbnQgZHJpdmVyIGZvciBuZ3hfbHVhIGJhc2VkIG9uIHRoZSBj
b3NvY2tldCBBUEkKKiBbbHVhLXJlc3R5LW15c3FsLWNvbm5lY3Rvcl0oaHR0
cHM6Ly9naXRodWIuY29tL215c2VsZmdob3N0L2x1YS1yZXN0eS1teXNxbC1j
b25uZWN0b3IpIOKAlApDb25uZWN0aW9uIHV0aWxpdGllcyBmb3IgbHVhLXJl
c3R5LW15c3FsLCBzdXBwb3J0IGZvciByZWFkIGFuZCB3cml0ZSBzZXBhcmF0
aW9u77yMc3VwcG9ydCBmb3IgaW5zdGFudGlhdGluZyBkaWZmZXJlbnQgZGF0
YWJhc2VzCiogW2x1YS1yZXN0eS1wb3N0Z3Jlc10oaHR0cHM6Ly9naXRodWIu
Y29tL2F6dXJld2FuZy9sdWEtcmVzdHktcG9zdGdyZXMpIOKAlCBOb25ibG9j
a2luZyBMdWEgUG9zdGdyZVNRTCBkcml2ZXIgbGlicmFyeSBmb3Igbmd4X2x1
YQoqIFtwZ21vb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9sZWFmby9wZ21vb24p
IOKAlCBBIHB1cmUgTHVhIFBvc3RncmVzIGRyaXZlciBmb3IgdXNlIGluIE9w
ZW5SZXN5ICYgbW9yZQoqIFtsdWEtcmVzdHktY291Y2hiYXNlXShodHRwczov
L2dpdGh1Yi5jb20vWmlnemFnQUsvbHVhLXJlc3R5LWNvdWNoYmFzZSkg4oCU
IE9wZW5SZXN0eSBDb3VjaEJhc2UgbW9kdWxlCiogW2x1YS1yZXN0eS1jb3Vj
aGRiXShodHRwczovL2dpdGh1Yi5jb20vcGFyYWdhc3UvbHVhLXJlc3R5LWNv
dWNoZGIpIOKAlCBMdWEgcmVzdHkgbWluaW1hbCBjb3VjaGRiIGNsaWVudCB1
c2luZyBuZ2lueCBwcm94eSBuZ3gubG9jYXRpb25fY2FwdHVyZQoqIFtsdWEt
cmVzdHktb3JtXShodHRwczovL2dpdGh1Yi5jb20va3Jhbi9sdWEtcmVzdHkt
b3JtKSDigJQgU2ltcGxlIE9STSBmb3IgT3BlblJlc3R5CiogW2x1YS1yZXN0
eS1tdmNdKGh0dHBzOi8vZ2l0aHViLmNvbS9wcm9uYW4vbHVhLXJlc3R5LW12
Yykg4oCUIFlvdSBkb24ndCBuZWVkIHRoYXQgY29tcGxpY2F0ZWQgTVZDIGZy
YW1ld29yayEgV2l0aCBqdXN0IGEgcGxhaW4gZm9sZGVyIHdpdGggc2V2ZXJh
bCBzaW1wbGUgZmlsZXMsIHlvdSBjYW4gZW5qb3kgYmFzaWMgYnV0IG1vc3Qg
ZnJlcXVlbnRseSB1c2VkIE1WQyBmZWF0dXJlcy4KKiBbbHVhLXJlc3R5LW1l
bWNhY2hlZF0oaHR0cHM6Ly9naXRodWIuY29tL29wZW5yZXN0eS9sdWEtcmVz
dHktbWVtY2FjaGVkKSDigJQgTHVhIG1lbWNhY2hlZCBjbGllbnQgZHJpdmVy
IGZvciB0aGUgbmd4X2x1YSBiYXNlZCBvbiB0aGUgY29zb2NrZXQgQVBJCiog
W2x1YS1yZXN0eS1yZWRpc10oaHR0cHM6Ly9naXRodWIuY29tL29wZW5yZXN0
eS9sdWEtcmVzdHktcmVkaXMpIOKAlCBMdWEgUmVkaXMgY2xpZW50IGRyaXZl
ciBmb3IgdGhlIG5neF9sdWEgYmFzZWQgb24gdGhlIGNvc29ja2V0IEFQSQoq
IFtsdWEtcmVzdHktcmVkaXMtY29ubmVjdG9yXShodHRwczovL2dpdGh1Yi5j
b20vcGludHNpemVkL2x1YS1yZXN0eS1yZWRpcy1jb25uZWN0b3IpIOKAlCBD
b25uZWN0aW9uIHV0aWxpdGllcyBmb3IgbHVhLXJlc3R5LXJlZGlzLCBtYWtp
bmcgaXQgZWFzeSBhbmQgcmVsaWFibGUgdG8gY29ubmVjdCB0byBSZWRpcyBo
b3N0cywgZWl0aGVyIGRpcmVjdGx5IG9yIHZpYSBSZWRpcyBTZW50aW5lbAoq
IFtyZXN0eS1yZWRpcy1jbHVzdGVyXShodHRwczovL2dpdGh1Yi5jb20vc3Rl
dmUwNTExL3Jlc3R5LXJlZGlzLWNsdXN0ZXIpIOKAlCBPcGVuUmVzdHkgUmVk
aXMgY2x1c3Rlci1hd2FyZSBjbGllbnQgYmFzZWQgb24gcmVzdHktcmVkaXMt
Y2x1c3RlcgoqIFtsdWEtcmVzdHktcmVkaXMtY2x1c3Rlcl0oaHR0cHM6Ly9n
aXRodWIuY29tL2N1aXdlaXhpZS9sdWEtcmVzdHktcmVkaXMtY2x1c3Rlcikg
4oCUIE9wZW5SZXN0eSBSZWRpcyBDbHVzdGVyIENsaWVudAoqIFtsdWEtcmVz
dHktcmVkaXMtdXRpbF0oaHR0cHM6Ly9naXRodWIuY29tL2FuamlhMDUzMi9s
dWEtcmVzdHktcmVkaXMtdXRpbCkg4oCUIEJhc2VkIG9uIGBsdWEtcmVzdHkt
cmVkaXNgIGFuZCBtYWtlcyBpdCBlYXNpZXIgdG8gb3BlcmF0ZSB0aGUgUmVk
aXMKKiBbbHVhLWNhc3NhbmRyYV0oaHR0cHM6Ly9naXRodWIuY29tL3RoaWJh
dWx0Q2hhL2x1YS1jYXNzYW5kcmEpIC0gUHVyZSBMdWEsIGZlYXR1cmUtcmlj
aCwgYW5kIGNsdXN0ZXItYXdhcmUgQ2Fzc2FuZHJhIGNsaWVudAoqIFtsdWEt
cmVzdHktY2Fzc2FuZHJhXShodHRwczovL2dpdGh1Yi5jb20vamJvY2hpL2x1
YS1yZXN0eS1jYXNzYW5kcmEpIOKAlCBQdXJlIEx1YSBDYXNzYW5kcmEgY2xp
ZW50IHVzaW5nIENRTCBiaW5hcnkgcHJvdG9jb2wKKiBbbHVhLXJlc3R5LWJs
b29tZF0oaHR0cHM6Ly9naXRodWIuY29tL2ppZTEyMzEwOC9sdWEtcmVzdHkt
Ymxvb21kKSDigJQgQSBjbGllbnQgbGlicmFyeSBiYXNlZCBvbiBuZ3hfbHVh
IHRvIGludGVyZmFjZSB3aXRoIFtibG9vbWQgc2VydmVyc10oaHR0cHM6Ly9n
aXRodWIuY29tL2FybW9uL2Jsb29tZCkKKiBbbHVhLXJlc3R5LXJpYWtdKGh0
dHBzOi8vZ2l0aHViLmNvbS9iYWtpbnMvbHVhLXJlc3R5LXJpYWspIOKAlCBM
dWEgcmlhayBwcm90b2NvbCBidWZmZXIgY2xpZW50IGRyaXZlciBmb3IgdGhl
IG5neF9sdWEgYmFzZWQgb24gdGhlIGNvc29ja2V0IEFQSQoqIFtsdWEtcmVz
dHktbW9vbmdvb10oaHR0cHM6Ly9naXRodWIuY29tL2lzYWdlL2x1YS1yZXN0
eS1tb29uZ29vKSDigJQgTW9uZ29EQiBsaWJyYXJ5IGZvciBPcGVuUmVzdHks
IGhpZ2hseSBpbnNwaXJlZCBieSBQZXJsIE1hbmdvCiogW2x1YS1yZXN0eS1t
b25nb2xdKGh0dHBzOi8vZ2l0aHViLmNvbS9PbGl2aW5lLUxhYnMvcmVzdHkt
bW9uZ29sLykg4oCUIE5hdGl2ZSBMdWEgTW9uZ29kYiBkcml2ZXIgd2hpY2gg
c3VwcG9ydHMgYm90aCBsdWFzb2NrZXQgYW5kIG5neF9sdWEgYmFzZWQgb24g
dGhlIGNvc29ja2V0IEFQSQoqIFtsdWEtcmVzdHktbW9uZ29dKGh0dHBzOi8v
Z2l0aHViLmNvbS9uaWdodHNhaWxlci9sdWEtcmVzdHktbW9uZ28pIOKAlCBM
dWEgbW9uZ29kYiBjbGllbnQgZHJpdmVyIGZvciB0aGUgbmd4X2x1YSBiYXNl
ZCBvbiB0aGUgY29zb2NrZXQgQVBJCiogW2x1YS1tb25nb10oaHR0cHM6Ly9n
aXRodWIuY29tL2JveXh1cGVyL2x1YS1tb25nbykg4oCUIEEgc2ltcGxlIEx1
YSBNb25nbyBkcml2ZXIgKGEgZm9yayBtYWRlIHRvIHdvcmsgd2l0aCBjby1z
b2NrZXRzKQoqIFtsdWEtcmVzdHktaW5mbHV4XShodHRwczovL2dpdGh1Yi5j
b20vcDBwcjBjazUvbHVhLXJlc3R5LWluZmx1eCkg4oCUIE9wZW5SZXN0eSBj
bGllbnQgZm9yIEluZmx1eERCCiogW2x1YS10ZWxlZ3JhZl0oaHR0cHM6Ly9n
aXRodWIuY29tL2xibGFzYy9sdWEtdGVsZWdyYWYpIOKAlCBMdWEvT3BlblJl
c3R5IGNsaWVudCBmb3IgVGVsZWdyYWYvSW5mbHV4REIKKiBbbHVhLXJlc3R5
LWt5b3RvdHljb29uXShodHRwczovL2dpdGh1Yi5jb20vY2xvdWRmbGFyZS9s
dWEtcmVzdHkta3lvdG90eWNvb24pIGJ5IFtAY2xvdWRmbGFyZV0oaHR0cHM6
Ly9naXRodWIuY29tL2Nsb3VkZmxhcmUvKSDigJQgTHVhIGNsaWVudCBkcml2
ZXIgZm9yIEt5b3RvVHljb29uIHVzaW5nIGl0cyBuYXRpdmUgd2lyZSBwcm90
b2NvbCAoT3BlblJlc3R5L25neF9sdWEpCiogW2x1YS1yZXN0eS1reW90b3R5
Y29vbl0oaHR0cHM6Ly9naXRodWIuY29tL3NqbmFtL2x1YS1yZXN0eS1reW90
b3R5Y29vbikgYnkgW0Bzam5hbV0oaHR0cHM6Ly9naXRodWIuY29tL3NqbmFt
Lykg4oCUIEx1YSBjbGllbnQgZHJpdmVyIGZvciBLeW90b1R5Y29vbiB1c2lu
ZyBpdHMgYmluYXJ5IHByb3RvY29sCiogW2x1YS1yZXN0eS10YXJhbnRvb2xd
KGh0dHBzOi8vZ2l0aHViLmNvbS9wZXJ1c2lvL2x1YS1yZXN0eS10YXJhbnRv
b2wpIOKAlCBMaWJyYXJ5IGZvciB3b3JraW5nIHdpdGggVGFyYW50b29sIGZy
b20gTmdpbnggd2l0aCB0aGUgZW1iZWRkZWQgTHVhIG1vZHVsZSBvciB3aXRo
IE9wZVJyZXN0eQoqIFtsdWEtbmdpbngtdGFyYW50b29sXShodHRwczovL2dp
dGh1Yi5jb20vemlvbnRhYi9sdWEtbmdpbngtdGFyYW50b29sKSDigJQgQSBk
cml2ZXIgZm9yIGEgTm9TUUwgZGF0YWJhc2UgaW4gYSBMdWEgc2NyaXB0IFRh
cmFudG9vbCBidWlsZCBvbiBmYXN0IG5naW54IGNvc29ja2V0cwoqIFtsdWEt
cmVzdHktc3NkYl0oaHR0cHM6Ly9naXRodWIuY29tL0xhenlaaHUvbHVhLXJl
c3R5LXNzZGIpIOKAlCBMdWEgc3NkYiBjbGllbnQgZHJpdmVyIGZvciB0aGUg
bmd4X2x1YSBiYXNlZCBvbiB0aGUgY29zb2NrZXQgQVBJLCBTU0RCIGlzIGEg
bGV2ZWxkYiBzZXJ2ZXIKKiBbbGVkaXMtb3BlbnJlc3R5XShodHRwczovL2dp
dGh1Yi5jb20vaG9seXMvbGVkaXMtb3BlbnJlc3R5KSDigJQgTHVhIExlZGlz
REIgY2xpZW50IGRyaXZlciBmb3IgdGhlIG5neF9sdWEgYmFzZWQgb24gdGhl
IGNvc29ja2V0IEFQSQoqIFtsdWEtcmVzdHktZmFzdGRmc10oaHR0cHM6Ly9n
aXRodWIuY29tL2F6dXJld2FuZy9sdWEtcmVzdHktZmFzdGRmcykg4oCUIE5v
bmJsb2NraW5nIEx1YSBGYXN0REZTIGRyaXZlciBsaWJyYXJ5IGZvciBuZ3hf
bHVhCiogW2x1YS1yZXN0eS1zdGF0c2RdKGh0dHBzOi8vZ2l0aHViLmNvbS9t
ZWRpYmEtc3lzdGVtL2x1YS1yZXN0eS1zdGF0c2QpIOKAlCBTdGF0c0QgY2xp
ZW50IGZvciBPcGVuUmVzdHkKKiBbbHVhLXJlc3R5LWRvZ3N0YXRzZF0oaHR0
cHM6Ly9naXRodWIuY29tL21lZGliYS1zeXN0ZW0vbHVhLXJlc3R5LWRvZ3N0
YXRzZCkg4oCUIEEgY2xpZW50IGZvciBEb2dTdGF0c0QsIGFuIGV4dGVuc2lv
biBvZiB0aGUgU3RhdHNEIG1ldHJpYyBzZXJ2ZXIgZm9yIERhdGFkb2cuIFVz
aW5nIG5naW54IGNvc29ja2V0IEFQSQoqIFtvcGVucmVzdHktc3RhdHNkXSho
dHRwczovL2dpdGh1Yi5jb20vbG9uZWx5cGxhbmV0L29wZW5yZXN0eS1zdGF0
c2QpIOKAlCBBIEx1YSBtb2R1bGUgZm9yIE9wZW5SZXN0eSB0byBzZW5kIG1l
dHJpY3MgdG8gU3RhdHNECiogW2x1YS1yZXN0eS1tb2dpbGVmc10oaHR0cHM6
Ly9naXRodWIuY29tL3N1bmthbi9sdWEtcmVzdHktbW9naWxlZnMpIOKAlCBB
IEx1YSBtb2dpbGVmcyBjbGllbnQgZHJpdmVyIGZvciB0aGUgbmd4X2x1YSBi
YXNlZCBvbiB0aGUgY29zb2NrZXQgQVBJCiogW2x1YS1yZXN0eS1ldGNkXSho
dHRwczovL2dpdGh1Yi5jb20vaXJlc3R5L2x1YS1yZXN0eS1ldGNkKSDigJQg
Tm9uYmxvY2tpbmcgTHVhIGV0Y2QgZHJpdmVyIGxpYnJhcnkgZm9yIE9wZW5S
ZXN0eQoKIyMjIyBUZXN0aW5nIGFuZCBQcm9maWxpbmcKCiogW1Rlc3Q6Ok5n
aW54XShodHRwOi8vc2VhcmNoLmNwYW4ub3JnL35hZ2VudC9UZXN0LU5naW54
LTAuMjQvbGliL1Rlc3QvTmdpbngucG0pIOKAlCBEYXRhLWRyaXZlbiB0ZXN0
IHNjYWZmb2xkIGZvciBOZ2lueCBDIG1vZHVsZSBhbmQgT3BlblJlc3R5IEx1
YSBsaWJyYXJ5IGRldmVsb3BtZW50IChzZWUgcmVhbC13b3JkIHRlc3RzIGlu
IFtsdWEtcmVzdHktcmVkaXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVucmVz
dHkvbHVhLXJlc3R5LXJlZGlzL3RyZWUvbWFzdGVyL3QpKQoqIFtuZ2lueC1z
eXN0ZW10YXAtdG9vbGtpdF0oaHR0cHM6Ly9naXRodWIuY29tL29wZW5yZXN0
eS9uZ2lueC1zeXN0ZW10YXAtdG9vbGtpdCkg4oCUIFJlYWwtdGltZSBhbmFs
eXppbmcgYW5kIGRpYWdub3NpbmcgdG9vbHMgZm9yIE5naW54IGJhc2VkIG9u
IFN5c3RlbVRhcAoqIFtzdGFweHhdKGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVu
cmVzdHkvc3RhcHh4KSDigJQgU2ltcGxlIG1hY3JvIGxhbmd1YWdlIGV4dGVu
dGlvbnMgdG8gc3lzdGVtdGFwCiogW0ZsYW1lR3JhcGhdKGh0dHBzOi8vZ2l0
aHViLmNvbS9icmVuZGFuZ3JlZ2cvRmxhbWVHcmFwaCkg4oCUIEZsYW1lIGdy
YXBocyBhcmUgYSB2aXN1YWxpemF0aW9uIG9mIHByb2ZpbGVkIHNvZnR3YXJl
LCBhbGxvd2luZyB0aGUgbW9zdCBmcmVxdWVudCBjb2RlLXBhdGhzIHRvIGJl
IGlkZW50aWZpZWQgcXVpY2tseSBhbmQgYWNjdXJhdGVseQoqIFtsdWEtcmVz
dHktYnVzdGVkXShodHRwczovL2dpdGh1Yi5jb20vdGhpYmF1bHRDaGEvbHVh
LXJlc3R5LWJ1c3RlZCkg4oCUIFRlc3QgT3BlblJlc3R5IHNjcmlwdHMgd2l0
aCBidXN0ZWQKKiBbbHVhLXJlc3R5LXRlc3RdKGh0dHBzOi8vZ2l0aHViLmNv
bS9tZW1icGhpcy9sdWEtcmVzdHktdGVzdCkg4oCUIFRlc3QgZnJhbWUgYmFz
ZWQgb24gT3BlblJlc3R5CiogW2J1c3RlZF0oaHR0cDovL29saXZpbmVsYWJz
LmNvbS9idXN0ZWQvKSAoW0dpdGh1Yl0oaHR0cHM6Ly9naXRodWIuY29tL09s
aXZpbmUtTGFicy9idXN0ZWQpKSDigJQgRWxlZ2FudCBMdWEgdW5pdCB0ZXN0
aW5nCiogW1RlbGVzY29wZV0oaHR0cDovL3RlbGVzY29wZS5sdWFmb3JnZS5u
ZXQvKSAoW0dpdGh1Yl0oaHR0cHM6Ly9naXRodWIuY29tL25vcm1hbi90ZWxl
c2NvcGUpKSDigJQgVGVsZXNjb3BlIGlzIGEgaGlnaGx5IGN1c3RvbWl6YWJs
ZSB0ZXN0IGxpYnJhcnkgZm9yIEx1YSB0aGF0IGFsbG93cyBmb3IgZGVjbGFy
YXRpdmUgdGVzdHMgd2l0aCBuZXN0ZWQgY29udGV4dHMKCiMjIyMgTWVzc2Fn
ZSBRdWV1aW5nIGFuZCBUYXNrIE1hbmFnZW1lbnQKCiogW2x1YS1yZXN0eS1x
bGVzc10oaHR0cHM6Ly9naXRodWIuY29tL3BpbnRzaXplZC9sdWEtcmVzdHkt
cWxlc3MpIOKAlCBMdWEgYmluZGluZyB0byBRbGVzcyAoUXVldWUgLyBQaXBl
bGluZSBtYW5hZ2VtZW50KSBmb3IgT3BlblJlc3R5IChzZWUgYWxzbzogW1Fs
ZXNzIFdlYiBJbnRlcmZhY2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9oYW1pc2hm
b3JiZXMvbHVhLXJlc3R5LXFsZXNzLXdlYikgaW1wbGVtZW50ZWQgd2l0aCBP
cGVuUmVzdHkpCiogW2x1YS1yZXN0eS1yYWJiaXRtcXN0b21wXShodHRwczov
L2dpdGh1Yi5jb20vd2luZ2lmeS9sdWEtcmVzdHktcmFiYml0bXFzdG9tcCkg
4oCUIEx1YSBSYWJiaXRNUSBjbGllbnQgbGlicmFyeSB3aGljaCB1c2VzIGNv
c29ja2V0IGFwaSBmb3IgY29tbXVuaWNhdGlvbiBvdmVyIFNUT01QIDEuMiB3
aXRoIGEgUmFiYml0TVEgYnJva2VyIHdoaWNoIGhhcyB0aGUgU1RPTVAgcGx1
Z2luCiogW2x1YS1yZXN0eS1nZWFybWFuXShodHRwczovL2dpdGh1Yi5jb20v
emhoY2hlbi9sdWEtcmVzdHktZ2Vhcm1hbikg4oCUIEx1YSBnZWFybWFuIGNs
aWVudCBkcml2ZXIgZm9yIHRoZSBuZ3hfbHVhIGJhc2VkIG9uIHRoZSBjb3Nv
Y2tldCBBUEkKKiBbbHVhLXJlc3R5LWthZmthXShodHRwczovL2dpdGh1Yi5j
b20vZG91amlhbmcyNC9sdWEtcmVzdHkta2Fma2EpIOKAlCBMdWEga2Fma2Eg
Y2xpZW50IGRyaXZlciBmb3IgdGhlIG5neF9sdWEgYmFzZWQgb24gdGhlIGNv
c29ja2V0IEFQSQoqIFtsdWEtcmVzdHktYmVhbnN0YWxrZF0oaHR0cHM6Ly9n
aXRodWIuY29tL2Jha2lucy9sdWEtcmVzdHktYmVhbnN0YWxrZCkg4oCUIEx1
YSBiZWFuc3RhbGtkIGNsaWVudCBkcml2ZXIgZm9yIHRoZSBuZ3hfbHVhIGJh
c2VkIG9uIHRoZSBjb3NvY2tldCBBUEkKKiBbbHVhLXJlc3R5LWlyb25tcV0o
aHR0cHM6Ly9naXRodWIuY29tL2Jha2lucy9sdWEtcmVzdHktaXJvbm1xKSDi
gJQgU2ltcGxlIElyb25NUSBjbGllbnQgZm9yIE9wZW5SZXN0eQoKIyMjIyBC
YXIgQ29kZXMgYW5kIFFSIENvZGVzCgoqIFtsdWEtcmVzdHktUVJjb2RlXSho
dHRwczovL2dpdGh1Yi5jb20vZGNzaGkvbHVhLXJlc3R5LVFSY29kZSkg4oCU
IFFSIGVuY29kZSB0b29sIGZvciBuZ3hfbHVhCiogW2x1YS1yZXN0eS1RUkRl
Y29kZV0oaHR0cHM6Ly9naXRodWIuY29tL2Rjc2hpL2x1YS1yZXN0eS1RUkRl
Y29kZSkg4oCUIFFSIGRlY29kZXIgZm9yIG5neF9sdWEKCiMjIyMgVXRpbGl0
aWVzCgoqIFtsdWEtcmVzdHktd29ya2VyLW1hbmFnZXJdKGh0dHBzOi8vZ2l0
aHViLmNvbS9Lb25nL2x1YS1yZXN0eS13b3JrZXItbWFuYWdlcikg4oCUIFRy
YWNrcyB3b3JrZXIgcHJvY2Vzc2VzIGFuZCBub2RlcyBzdGFydGluZyAvIHJl
c3RhcnRpbmcgLyByZWxvYWRpbmcgLyBzdG9wcGluZwoqIFtsdWEtcmVzdHkt
d29ya2VyLWV2ZW50c10oaHR0cHM6Ly9naXRodWIuY29tL0tvbmcvbHVhLXJl
c3R5LXdvcmtlci1ldmVudHMpIOKAlCBJbnRlciBwcm9jZXNzIGV2ZW50cyBm
b3IgTmdpbnggd29ya2VyIHByb2Nlc3NlcwoqIFtsdWEtcmVzdHktYmF0Y2hd
KGh0dHBzOi8vZ2l0aHViLmNvbS9zdGFyaXVzL2x1YS1yZXN0eS1iYXRjaCkg
4oCUIE1lcmdlIG11bHRpcGxlIHJlcXVlc3RzIGluIG5naW54IHRvIGEgc2lu
Z2xlIHN1Yi1yZXF1ZXN0CiogW2x1YS1yZXN0eS1zaGVsbF0oaHR0cHM6Ly9n
aXRodWIuY29tL2p1Y2UvbHVhLXJlc3R5LXNoZWxsKSDigJQgVGlueSBub24t
YmxvY2tpbmcgc3VicHJvY2VzcyAvIHNoZWxsIGxpYnJhcnkgdG8gdXNlIHdp
dGggT3BlblJlc3R5IGFwcGxpY2F0aW9uIHNlcnZlciAodXNpbmcgW3NvY2tw
cm9jXShodHRwczovL2dpdGh1Yi5jb20vanVjZS9zb2NrcHJvYykpCiogW2x1
YS1yZXN0eS1leGVjXShodHRwczovL2dpdGh1Yi5jb20vanByanIvbHVhLXJl
c3R5LWV4ZWMpIOKAlCBOb24tYmxvY2tpbmcsIG5vbi1zaGVsbC1zcGF3bmlu
Zywgc3RyZWFtaW5nIGFuZCBub24tc3RyZWFtaW5nIHN1YnByb2Nlc3MgbGli
cmFyeSAodXNpbmcgW3NvY2tleGVjXShodHRwczovL2dpdGh1Yi5jb20vanBy
anIvc29ja2V4ZWMpKQoqIFtsdWEtcmVzdHktcmVwbF0oaHR0cHM6Ly9naXRo
dWIuY29tL3Nha3MvbHVhLXJlc3R5LXJlcGwpIOKAlCBJbnRlcmFjdGl2ZSBj
b25zb2xlIChSRVBMKSBmb3IgT3BlblJlc3R5IGFuZCBMdWFKSVQgY29kZQoq
IFtsdWEtcmVzdHktZmlsZWluZm9dKGh0dHBzOi8vZ2l0aHViLmNvbS9idW5n
bGUvbHVhLXJlc3R5LWZpbGVpbmZvKSDigJQgTHVhSklUIEZGSSBiaW5kaW5n
cyB0byBsaWJtYWdpYywgbWFnaWMgbnVtYmVyIHJlY29nbml0aW9uIGxpYnJh
cnkgLSB0cmllcyB0byBkZXRlcm1pbmUgZmlsZSB0eXBlcwoqIFtsdWEtcmVz
dHktYmFzZS1lbmNvZGluZ10oaHR0cHM6Ly9naXRodWIuY29tL3NwYWNld2Fu
ZGVyL2x1YS1yZXN0eS1iYXNlLWVuY29kaW5nKSDigJQgUHJvdmlkZXMgYmFz
ZTMyL2Jhc2UxNi8uLi4gZW5jb2RpbmcgZm9yIE9wZW5SZXN0eSBhcHBsaWNh
dGlvbnMuCiogW2x1YS1yZXN0eS1taW1lLXNuaWZmXShodHRwczovL2dpdGh1
Yi5jb20vc3BhY2V3YW5kZXIvbHVhLXJlc3R5LW1pbWUtc25pZmYpIOKAlCBT
bmlmZiB0aGUgcmVhbCBNSU1FIHR5cGUgb2YgZ2l2ZW4gZGF0YQoqIFtsdWEt
cmVzdHktdGFnbGliXShodHRwczovL2dpdGh1Yi5jb20vYnVuZ2xlL2x1YS1y
ZXN0eS10YWdsaWIpIOKAlCBMdWFKSVQgRkZJIGJpbmRpbmdzIGZvciBUYWdM
aWIgLSBBbiBBdWRpbyBNZXRhLURhdGEgTGlicmFyeQoqIFtsdWEtcmVzdHkt
dXVpZF0oaHR0cHM6Ly9naXRodWIuY29tL2J1bmdsZS9sdWEtcmVzdHktdXVp
ZCkg4oCUIEx1YUpJVCBGRkkgYmluZGluZ3MgZm9yIGxpYnV1aWQsIGEgRENF
IGNvbXBhdGlibGUgVW5pdmVyc2FsbHkgVW5pcXVlIElkZW50aWZpZXIgbGli
cmFyeQoqIFtsdWEtcmVzdHktaml0LXV1aWRdKGh0dHBzOi8vZ2l0aHViLmNv
bS90aGliYXVsdENoYS9sdWEtcmVzdHktaml0LXV1aWQpIOKAlCBBIHB1cmUg
THVhSklUIChubyBkZXBlbmRlbmNpZXMpIHV1aWQgZ2VuZXJhdG9yIHR1bmVk
IGZvciBwZXJmb3JtYW5jZQoqIFtsdWEtcmVzdHktdW5pcXVlLWlkXShodHRw
czovL2dpdGh1Yi5jb20vaHF6eHpiL2x1YS1yZXN0eS11bmlxdWUtaWQpIOKA
lApMdWEgbGlicmFyeSBmb3IgZ2VuZXJhdGluZyBhIHVuaXF1ZSBJRCBmb3Ig
T3BlblJlc3R5CiogW2x1YS1yZXN0eS10c29ydF0oaHR0cHM6Ly9naXRodWIu
Y29tL2J1bmdsZS9sdWEtcmVzdHktdHNvcnQpIOKAlCBQZXJmb3JtcyBhIHRv
cG9sb2dpY2FsIHNvcnQgb24gaW5wdXQgZGF0YQoqIFtsdWEtcmVzdHktcG9z
dGFsXShodHRwczovL2dpdGh1Yi5jb20vYnVuZ2xlL2x1YS1yZXN0eS1wb3N0
YWwpIOKAlCBMdWFKSVQgRkZJIEJpbmRpbmdzIHRvIGxpYnBvc3RhbCDigJMg
YSBmYXN0IHN0YXRpc3RpY2FsIHBhcnNlci9ub3JtYWxpemVyIGZvciBzdHJl
ZXQgYWRkcmVzc2VzIGFyb3VuZCB0aGUgd29ybGQuCiogW2x1YS1yZXN0eS1s
aWJpbmplY3Rpb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9wMHByMGNrNS9sdWEt
cmVzdHktbGliaW5qZWN0aW9uKSDigJQgTHVhSklUIEZGSSBiaW5kaW5ncyBm
b3IgbGliaW5qZWN0aW9uLCBhIFNRTC9TUUxpIHRva2VuaXplciBhbmQgYW5h
bHl6ZXIKKiBbbHVhLXJlc3R5LXNvY2tldF0oaHR0cHM6Ly9naXRodWIuY29t
L3RoaWJhdWx0Y2hhL2x1YS1yZXN0eS1zb2NrZXQpIOKAlCBBdXRvbWF0aWMg
THVhU29ja2V0L2Nvc29ja2V0cyBjb21wYXRpYmlsaXR5IG1vZHVsZQoqIFtJ
bnNwZWN0XShodHRwczovL2dpdGh1Yi5jb20va2lraXRvL2luc3BlY3QubHVh
KSDigJQgSW5zcGVjdCBpcyBhIGxpYnJhcnkgdGhhdCB0cmFuc2Zvcm1zIGFu
eSBMdWEgdmFsdWUgaW50byBhIGh1bWFuLXJlYWRhYmxlIHJlcHJlc2VudGF0
aW9uLiBJdCBpcyBlc3BlY2lhbGx5IHVzZWZ1bCBmb3IgZGVidWdnaW5nIGVy
cm9ycyBpbiB0YWJsZXMuCiogW2x1YS1yZXN0eS1tYXhtaW5kZGJdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9saWxpZW4xMDEwL2x1YS1yZXN0eS1tYXhtaW5kZGIp
IGJ5IFtAbGlsaWVuMTAxMF0oaHR0cHM6Ly9naXRodWIuY29tL2xpbGllbjEw
MTApIOKAlCBMdWFKSVQgRkZJIEJpbmRpbmdzIHRvIG9mZmljaWFsIGxpYm1h
eG1pbmRkYiwgdG8gZ2V0IGlwIGxvY2F0aW9uIHdpdGggaXAgZGF0YWJhc2Ug
b2ZmZXJlZCBieSBtYXhtaW5kCiogW2x1YS1yZXN0eS1tYXhtaW5kZGJdKGh0
dHBzOi8vZ2l0aHViLmNvbS9hbmppYTA1MzIvbHVhLXJlc3R5LW1heG1pbmRk
YikgYnkgW0BhbmppYTA1MzJdKGh0dHBzOi8vZ2l0aHViLmNvbS9hbmppYTA1
MzIpIOKAlCBBIEx1YSBsaWJyYXJ5IGZvciByZWFkaW5nIE1heE1pbmQncyBH
ZW9sb2NhdGlvbiBkYXRhYmFzZSBmb3JtYXQgKGFrYSBtbWRiIG9yIGdlb2lw
MikKCiMjIyMgRGF0ZSBhbmQgVGltZQoKVGhlc2UgbGlicmFyaWVzIGFyZSBu
b3QgYnVpbGQgdG8gdXNpbmcgYGx1YS1uZ2lueC1tb2R1bGVgcyBkYXRlIHRp
bWUgZnVuY3Rpb25zIChleGNlcHQgbHVhdHopIGxpa2UgW2BuZ3gudG9kYXlg
XShodHRwczovL2dpdGh1Yi5jb20vb3BlbnJlc3R5L2x1YS1uZ2lueC1tb2R1
bGUjbmd4dG9kYXkpLCBbYG5neC50aW1lYF0oaHR0cHM6Ly9naXRodWIuY29t
L29wZW5yZXN0eS9sdWEtbmdpbngtbW9kdWxlI25neHRpbWUpLCBbYG5neC5u
b3dgXShodHRwczovL2dpdGh1Yi5jb20vb3BlbnJlc3R5L2x1YS1uZ2lueC1t
b2R1bGUjbmd4bm93KSwgW2BuZ3gubG9jYWx0aW1lYF0oaHR0cHM6Ly9naXRo
dWIuY29tL29wZW5yZXN0eS9sdWEtbmdpbngtbW9kdWxlI25neGxvY2FsdGlt
ZSksIG9yIFtgbmd4LnV0Y3RpbWVgXShodHRwczovL2dpdGh1Yi5jb20vb3Bl
bnJlc3R5L2x1YS1uZ2lueC1tb2R1bGUjbmd4dXRjdGltZSksIGJ1dCB0aGV5
IG1heSBzdGlsbCBjb21lIGhhbmR5LiBBdCBzb21lIHBvaW50IHdlIG1heSBu
ZWVkIGEgbW9yZSAib2ZmaWNpYWwiIHRpbWUgbGlicmFyeSBmb3IgT3BlblJl
c3R5LgoKKiBbbHVhdHpdKGh0dHBzOi8vZ2l0aHViLmNvbS9kYXVybmltYXRv
ci9sdWF0eikg4oCUIEEgTHVhIGxpYnJhcnkgZm9yIHRpbWUgYW5kIGRhdGUg
bWFuaXB1bGF0aW9uIChoYXMgYSBmYWxsYmFjayB0byBgbmd4Lm5vd2ApCiog
W0x1YURhdGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9UaWVza2UvZGF0ZSkg4oCU
IEx1YSBEYXRlIGFuZCBUaW1lIG1vZHVsZSBmb3IgTHVhIDUueAoqIFtTY2lM
dWEgVGltZSBMaWJyYXJ5XShodHRwOi8vc2NpbHVhLm9yZy90aW1lLmh0bWwp
IOKAlCBMaWJyYXJ5IGZvciB0aGUgbWFuaXB1bGF0aW9uIG9mIGRhdGVzIGFu
ZCBwZXJpb2RzIGFjY29yZGluZyB0byB0aGUgR3JlZ29yaWFuIGNhbGVuZGFy
LCBpLmUuIHRoZSBpbnRlcm5hdGlvbmFsbHkgYWNjZXB0ZWQgY2FsZW5kYXIg
Zm9yIG1vc3QgdXNlcwoKIyMjIyBDb21wcmVzc2lvbgoKKiBbbHVhLXJlc3R5
LXppcF0oaHR0cHM6Ly9naXRodWIuY29tL2RvdWppYW5nMjQvbHVhLXJlc3R5
LXppcCkg4oCUIFpJUCBmdW5jdGlvbnMoY29tcHJlc3MvdW5jb21wcmVzcykg
Zm9yIEx1YUpJVAoqIFtsdWEtcmVzdHktc25hcHB5XShodHRwczovL2dpdGh1
Yi5jb20vYnVuZ2xlL2x1YS1yZXN0eS1zbmFwcHkpIOKAlCBMdWFKSVQgRkZJ
IGJpbmRpbmdzIGZvciBTbmFwcHksIGEgZmFzdCBjb21wcmVzc29yL2RlY29t
cHJlc3NvcgoqIFtsdWEtcmVzdHktYnJvdGxpXShodHRwczovL2dpdGh1Yi5j
b20vc2puYW0vbHVhLXJlc3R5LWJyb3RsaSkg4oCUIEx1YUpJVCBGRkkgYmlu
ZGluZ3MgZm9yIEdvb2dsZSBCcm90bGkKKiBbbHVhLXJlc3R5LXpzdGRdKGh0
dHBzOi8vZ2l0aHViLmNvbS9zam5hbS9sdWEtcmVzdHktenN0ZCkg4oCUICBM
dWFKSVQgYmluZGluZ3MgdG8gRmFjZWJvb2sgWnN0YW5kYXJkIHVzaW5nIEZG
SQoKIyMjIyBUZXh0IEZvcm1hdHMKCiogW2x1YS1yZXN0eS1ob2Vkb3duXSho
dHRwczovL2dpdGh1Yi5jb20vYnVuZ2xlL2x1YS1yZXN0eS1ob2Vkb3duKSDi
gJQgTHVhSklUIEZGSSBiaW5kaW5ncyB0byBIb2Vkb3duLCBhIHN0YW5kYXJk
cyBjb21wbGlhbnQsIGZhc3QsIHNlY3VyZSBtYXJrZG93biBwcm9jZXNzaW5n
IGxpYnJhcnkgaW4gQwoqIFtsdWEtZ3VtYm9dKGh0dHBzOi8vZ2l0aHViLmNv
bS9jcmFpZ2Jhcm5lcy9sdWEtZ3VtYm8pIOKAlCBMdWEgYmluZGluZ3MgZm9y
IHRoZSBHdW1ibyBIVE1MNSBwYXJzaW5nIGxpYnJhcnksIHdpdGggYSBzZXQg
b2YgRE9NIEFQSXMgaW1wbGVtZW50ZWQgaW4gcHVyZSBMdWEKKiBbbHVhLXJl
c3R5LXNhc3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9idW5nbGUvbHVhLXJlc3R5
LXNhc3MpIOKAlCBMdWFKSVQgRkZJIGJpbmRpbmdzIGZvciBsaWJzYXNzIC0g
QSBDL0MrKyBpbXBsZW1lbnRhdGlvbiBvZiBhIFNhc3MgY29tcGlsZXIgKGh0
dHA6Ly9saWJzYXNzLm9yZy8pCiogW2x1YS1yZXN0eS1sYW5saV0oaHR0cHM6
Ly9naXRodWIuY29tL2J1bmdsZS9sdWEtcmVzdHktbGFubGkpIOKAlCBMdWFK
SVQgRkZJIEJpbmRpbmdzIHRvIExhbmxpIEhUTUwgU2FuaXRpemVyIExpYnJh
cnkKKiBbbHVhLXJlc3R5LWluaV0oaHR0cHM6Ly9naXRodWIuY29tL2RvdWpp
YW5nMjQvbHVhLXJlc3R5LWluaSkg4oCUICBMdWEgSU5JLWZpbGUgcGFyc2Vy
CiogW2x1YS1yZTJdKGh0dHBzOi8vZ2l0aHViLmNvbS9jbG91ZGZsYXJlL2x1
YS1yZTIpIOKAlCBDIGFuZCBMdWEgd3JhcHBlciBmb3IgUkUyIHJlZ3VsYXIg
ZXhwcmVzc2lvbiBsaWJyYXJ5LgoqIFtsdWEtYWhvLWNvcmFzaWNrXShodHRw
czovL2dpdGh1Yi5jb20vY2xvdWRmbGFyZS9sdWEtYWhvLWNvcmFzaWNrKSDi
gJQgQysrIGFuZCBMdWEgSW1wbGVtZW50YXRpb24gb2YgdGhlIEFoby1Db3Jh
c2ljayAoQUMpIHN0cmluZyBtYXRjaGluZyBhbGdvcml0aG0KKiBbbHVhLXJl
c3R5LWpzb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9jbG91ZGZsYXJlL2x1YS1y
ZXN0eS1qc29uKSDigJQgSlNPTiBsaWJyYXJ5IGZvciBMdWEgYW5kIEMgKGRl
Y29kZXIgb25seSkuCiogW2x1YS1yZXN0eS1saWJjanNvbl0oaHR0cHM6Ly9n
aXRodWIuY29tL2J1bmdsZS9sdWEtcmVzdHktbGliY2pzb24pIOKAlCBMdWFK
SVQgRkZJLWJhc2VkIGNKU09OIGxpYnJhcnkgZm9yIE9wZW5SZXN0eQoqIFts
dWEtcmVzdHktcHJldHR5Y2pzb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9idW5n
bGUvbHVhLXJlc3R5LXByZXR0eWNqc29uKSDigJQgTHVhIGNKU09OIFByZXR0
eSBGb3JtYXR0ZXIKKiBbbHVhLXJlc3R5LWpzb25zY2hlbWFdKGh0dHBzOi8v
Z2l0aHViLmNvbS90aWFuY2hhaWp6L2x1YS1yZXN0eS1qc29uc2NoZW1hKSDi
gJQgaHR0cHM6Ly9naXRodWIuY29tL3RpYW5jaGFpanovbHVhLXJlc3R5LWpz
b25zY2hlbWEKKiBbbHVhLWxheGpzb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9z
am5hbS9sdWEtbGF4anNvbikgLSBMdWEgYmluZGluZyB0byBhIHJlbGF4ZWQg
c3RyZWFtaW5nIEpTT04gcGFyc2VyLCBbbGlibGF4anNvbl0oaHR0cHM6Ly9n
aXRodWIuY29tL2FuZHJld3JrL2xpYmxheGpzb24pIGZvciBMdWFKSVQgdXNp
bmcgRkZJCiogW2x1YS1yZXN0eS11dGY4cmV3aW5kXShodHRwczovL2dpdGh1
Yi5jb20vYnVuZ2xlL2x1YS1yZXN0eS11dGY4cmV3aW5kKSDigJQgTHVhSklU
IEZGSSBiaW5kaW5ncyBmb3IgdXRmOHJld2luZCAtIGEgc3lzdGVtIGxpYnJh
cnkgd3JpdHRlbiBpbiBDIGRlc2lnbmVkIHRvIGV4dGVuZCB0aGUgZGVmYXVs
dCBzdHJpbmcgaGFuZGxpbmcgZnVuY3Rpb25zIHdpdGggc3VwcG9ydCBmb3Ig
VVRGLTggZW5jb2RlZCB0ZXh0CiogW2x1YS1yZXN0eS11bmlzdHJpbmddKGh0
dHBzOi8vZ2l0aHViLmNvbS9idW5nbGUvbHVhLXJlc3R5LXVuaXN0cmluZykg
4oCUIEx1YUpJVCBGRkkgYmluZGluZ3MgZm9yIEdOVSBsaWJ1bmlzdHJpbmcg
LSBBIFVuaWNvZGUgc3RyaW5nIG1hbmlwdWxhdGlvbiBsSWJyYXJ5IChodHRw
czovL3d3dy5nbnUub3JnL3NvZnR3YXJlL2xpYnVuaXN0cmluZy8pCiogW2x1
YS1yZXN0eS1odG1sZW50aXRpZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9kZXRh
aWx5YW5nL2x1YS1yZXN0eS1odG1sZW50aXRpZXMpIOKAlCBCYWNrcG9ydCB0
aGUgZW50aXRpZXMgdG8gTHVhSklUIHdpdGggdGhlIEZGSSBiaW5kaW5nIGFz
IHRoZSBlbnRpdGllcyB0byBVVEYtOCBkZWNvZGVyCiogW2x1YS1yZXN0eS1q
c2RlY29kZV0oaHR0cHM6Ly9naXRodWIuY29tL2RldGFpbHlhbmcvbHVhLXJl
c3R5LWpzZGVjb2RlKSDigJQgSmF2YXNjcmlwdCBFc2NhcGUgTm90YXRpb24g
ZGVjb2RpbmcgdG8gVVRGLTggYnl0ZXMKCiMjIyMgQmluYXJ5IEZvcm1hdHMK
CiogW2x1YS1yZXN0eS1tc2dwYWNrXShodHRwczovL2dpdGh1Yi5jb20vY2hy
b25vbGF3L2x1YS1yZXN0eS1tc2dwYWNrKSDigJQgTHVhIE1lc3NhZ2UgUGFj
ayBmb3IgT3BlblJlc3R5CiogW2x1YWppdC1tc2dwYWNrLXB1cmVdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9jYXR3ZWxsL2x1YWppdC1tc2dwYWNrLXB1cmUpIOKA
lCBNZXNzYWdlUGFjayBmb3IgTHVhSklUICh1c2luZyBGRkksIG5vIGJpbmRp
bmdzLCBWNCBBUEkpCgojIyMjIERvY3VtZW50IEZvcm1hdHMKCiogW2x1YS1y
ZXN0eS1saWJ4bF0oaHR0cHM6Ly9naXRodWIuY29tL2J1bmdsZS9sdWEtcmVz
dHktbGlieGwpIOKAlCBMdWFKSVQgRkZJLWJhc2VkIExpYlhMIChFeGNlbCkg
bGlicmFyeSBmb3IgT3BlblJlc3R5CiogW2x1YS1yZXN0eS1oYXJ1XShodHRw
czovL2dpdGh1Yi5jb20vYnVuZ2xlL2x1YS1yZXN0eS1oYXJ1KSDigJQgTHVh
SklUIEZGSS1iYXNlZCBsaWJIYXJ1IChQREYpIGxpYnJhcnkgZm9yIE9wZW5S
ZXN0eQoqIFtsdWEtcmVzdHktaHBkZl0oaHR0cHM6Ly9naXRodWIuY29tL3Rh
dmlrdWtrby9sdWEtcmVzdHktaHBkZikg4oCUIEx1YUpJVCBGRkktYmFzZWQg
bGliSGFydSAoUERGKSBsaWJyYXJ5IGZvciBPcGVuUmVzdHkKCiMjIyMgSW1h
Z2UgRm9ybWF0cwoKKiBbbHVhLXJlc3R5LWltYWdpY2tdKGh0dHBzOi8vZ2l0
aHViLmNvbS9rd2FuaHVyL2x1YS1yZXN0eS1pbWFnaWNrKSDigJQgTHVhIGJp
bmRpbmdzIHRvIEltYWdlTWFnaWNrJ3MgTWFnaWNXYW5kIGZvciBMdWFKSVQg
dXNpbmcgRkZJCiogW0x1YSBJTWFnaWNrXShodHRwczovL2dpdGh1Yi5jb20v
aXNhZ2UvbHVhLWltYWdpY2spIOKAlCBMdWEgUHVyZS1DIEJpbmRpbmdzIHRv
IEltYWdlTWFnaWNrCiogW21hZ2lja10oaHR0cHM6Ly9naXRodWIuY29tL2xl
YWZvL21hZ2ljaykg4oCUIEx1YSBCaW5kaW5ncyB0byBJbWFnZU1hZ2ljayBm
b3IgTHVhSklUIHVzaW5nIEZGSQoqIFtnaWZsaWJdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9sZWFmby9naWZsaWIpIOKAlCBMdWEgYmluZGluZ3MgdG8gR0lGTElC
IGZvciBMdWFKSVQgdXNpbmcgRkZJCiogW2ZpLWx1YWppdF0oaHR0cHM6Ly9n
aXRodWIuY29tL255ZmFpci9maS1sdWFqaXQpIOKAlCBBIEx1YUpJVCBpbnRl
cmZhY2UgdG8gRnJlZUltYWdlCiogW2x1YS12aXBzXShodHRwczovL2dpdGh1
Yi5jb20vamN1cGl0dC9sdWEtdmlwcykg4oCUIEx1YUpJVCBiaW5kaW5nIGZv
ciBsaWJ2aXBzCgojIyMjIExvY2FsaXphdGlvbgoKKiBbbHVhLXJlc3R5LWdl
dHRleHRdKGh0dHBzOi8vZ2l0aHViLmNvbS9idW5nbGUvbHVhLXJlc3R5LWdl
dHRleHQpIOKAlCBMdWFKSVQgRkZJLWJhc2VkIGdldHRleHQgbGlicmFyeSBm
b3IgT3BlblJlc3R5CgojIyMjIENhY2hpbmcKCiogW2x1YS1yZXN0eS1scnVj
YWNoZV0oaHR0cHM6Ly9naXRodWIuY29tL29wZW5yZXN0eS9sdWEtcmVzdHkt
bHJ1Y2FjaGUpIOKAlCBMdWEtbGFuZCBMUlUgQ2FjaGUgYmFzZWQgb24gTHVh
SklUIEZGSQoqIFtsdWEtcmVzdHktbWxjYWNoZV0oaHR0cHM6Ly9naXRodWIu
Y29tL3RoaWJhdWx0Y2hhL2x1YS1yZXN0eS1tbGNhY2hlKSDigJQgTW9kZXJu
IGFuZCBmbGV4aWJsZSBtdWx0aS1sZXZlbCBjYWNoaW5nIHVzaW5nIGx1YS1y
ZXN0eS1scnVjYWNoZSwgc2hhcmVkIGRpY3Rpb25hcmllcywgYW5kIGNhY2hl
IHN0YW1wZWRlIHByb3RlY3Rpb24uCiogW3NoY2FjaGVdKGh0dHBzOi8vZ2l0
aHViLmNvbS9tdG91cm5lL25neC5zaGNhY2hlKSDigJQgc2hjYWNoZSBpcyBh
biBhdHRlbXB0IGF0IHVzaW5nIG5neC5zaGFyZWQuRElDVCB3aXRoIGEgY2Fj
aGluZyBzdGF0ZSBtYWNoaW5lIGxheWVkIG9uIHRvcAoqIFtsdWEtcmVzdHkt
dGxjXShodHRwczovL2dpdGh1Yi5jb20vaGFtaXNoZm9yYmVzL2x1YS1yZXN0
eS10bGMpIOKAlCBUd28gTGF5ZXIgQ2FjaGUgaW1wbGVtZW50YXRpb24gdXNp
bmcgbHVhLXJlc3R5LWxydWNhY2hlIGFuZCBzaGFyZWQgZGljdGlvbmFyaWVz
LgoqIFtMZWRnZV0oaHR0cHM6Ly9naXRodWIuY29tL3BpbnRzaXplZC9sZWRn
ZSkg4oCUIEEgTHVhIGFwcGxpY2F0aW9uIGZvciBPcGVuUmVzdHksIHByb3Zp
ZGluZyBIVFRQIGNhY2hlIGZ1bmN0aW9uYWxpdHkgZm9yIE5naW54LCB1c2lu
ZyBSZWRpcyBhcyBhIGNhY2hlIC8gbWV0YWRhdGEgc3RvcmUKKiBbbHVhLXJl
c3R5LWNhY2hlXShodHRwczovL2dpdGh1Yi5jb20vbGxveWR6aG91L2x1YS1y
ZXN0eS1jYWNoZSkg4oCUIEhUVFAgQ2FjaGUgdG8gUmVkaXMsIGNhbiBzZXJ2
ZSBzdGFsZSByZXNwb25zZSwgYW5kIHVzaW5nIGBsdWEtcmVzdHktbG9ja2Ag
b25seSBhbGxvdyBvbmUgcmVxdWVzdCB0byBwb3B1bGF0ZSBhIG5ldyBjYWNo
ZQoKIyMjIyBNZXRyaWNzIGFuZCBTdGF0aXN0aWNzCgoqIFtMVUFNRVRFUl0o
aHR0cHM6Ly9sdWFtZXRlci5jb20vKSDigJQgQSBMdWEgbW9kdWxlIGZvciBO
Z2lueCB0aGF0IHJlY29yZHMgYW5kIHByb3ZpZGVzIGtleSBzdGF0dXMgYW5k
IHBlcmZvcm1hbmNlIG1ldHJpY3MsIHJpZ2h0IGZyb20gd2l0aGluIE5naW54
IGFuZCBpbiByZWFsLXRpbWUgKFByb3ByaWV0YXJ5KQoqIFtuZ3h0b3BdKGh0
dHBzOi8vZ2l0aHViLmNvbS9sZWJpbmgvbmd4dG9wKSDigJQgUmVhbC1UaW1l
IG1ldHJpY3MgZm9yIG5naW54IHNlcnZlcgoKIyMjIyBMb2dnaW5nCgoqIFts
dWEtcmVzdHktbG9nZ2VyLXNvY2tldF0oaHR0cHM6Ly9naXRodWIuY29tL2Ns
b3VkZmxhcmUvbHVhLXJlc3R5LWxvZ2dlci1zb2NrZXQpIOKAlCBSYXctc29j
a2V0LWJhc2VkIExvZ2dlciBMaWJyYXJ5IGZvciBOZ2lueCAoYmFzZWQgb24g
bmd4X2x1YSkKKiBbbHVhLW5naW54LWxvZ2dpbmddKGh0dHBzOi8vZ2l0aHVi
LmNvbS9MdW1hdGUvbHVhLW5naW54LWxvZ2dpbmcpIOKAlCBMb2dnaW5nIHV0
aWxpdGllcyBmb3IgTmdpbnggd3JpdHRlbiBpbiBMdWEKKiBbbHVhLXJlc3R5
LWxvZ2dlcl0oaHR0cHM6Ly9naXRodWIuY29tL2tlZHl5YW4vbHVhLXJlc3R5
LWxvZ2dlcikg4oCUIEN1c3RvbSBMb2dnZXIgTGlicmFyeSBmb3IgT3BlblJl
c3R5CiogW2x1YS1yZXN0eS1yZmM1NDI0XShodHRwczovL2dpdGh1Yi5jb20v
ZGV0YWlseWFuZy9sdWEtcmVzdHktcmZjNTQyNCkg4oCUIEFuIGltcGxlbWVu
dGF0aW9uIG9mIHRoZSBSRkM1NDI0KHN5c2xvZykgaW4gdGhlIE9wZW5SZXN0
eQoqIFtsdWEtcmVzdHktZmx1ZW50ZF0oaHR0cHM6Ly9naXRodWIuY29tL21z
ZW1wZXJlL2x1YS1yZXN0eS1mbHVlbnRkKSDigJQgTHVhIGZsdWVudGQgbG9n
Z2VyIGZvciB0aGUgbmd4X2x1YSBiYXNlZCBvbiB0aGUgY29zb2NrZXQgQVBJ
CiogW2x1YS1yZXN0eS1mbHVlbnQtbG9nZ2VyXShodHRwczovL2dpdGh1Yi5j
b20vbWVkaWJhLXN5c3RlbS9sdWEtcmVzdHktZmx1ZW50LWxvZ2dlcikg4oCU
IEEgc3RydWN0dXJlZCBsb2dnZXIgZm9yIEZsdWVudGQgKE9wZW5SZXN0eSAv
IG5neF9sdWEpCiogW3JhdmVuLWx1YV0oaHR0cHM6Ly9naXRodWIuY29tL2Ns
b3VkZmxhcmUvcmF2ZW4tbHVhKSDigJQgQSBzbWFsbCBMdWEgaW50ZXJmYWNl
IHRvIFNlbnRyeSB0aGF0IGFsc28gaGFzIGEgaGVscGZ1bCB3cmFwcGVyIGZ1
bmN0aW9uIGNhbGwoKSB0aGF0IHRha2VzIGFueSBhcmJpdHJhcnkgTHVhIGZ1
bmN0aW9uICh3aXRoIGFyZ3VtZW50cykgYW5kIGV4ZWN1dGVzIGl0LCB0cmFw
cyBhbnkgZXJyb3JzIGFuZCByZXBvcnRzIGl0IGF1dG9tYXRpY2FsbHkgdG8g
U2VudHJ5CgojIyMjIEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcKCiogW0x1YSBG
dW5dKGh0dHBzOi8vZ2l0aHViLmNvbS9ydHNpc3lrL2x1YWZ1bikg4oCUIEx1
YSBGdW4gaXMgYSBoaWdoLXBlcmZvcm1hbmNlIGZ1bmN0aW9uYWwgcHJvZ3Jh
bW1pbmcgbGlicmFyeSBmb3IgTHVhIGRlc2lnbmVkIHdpdGggTHVhSklUJ3Mg
dHJhY2UgY29tcGlsZXIgaW4gbWluZAoqIFtQZW5saWdodF0oaHR0cHM6Ly9n
aXRodWIuY29tL3N0ZXZlZG9ub3Zhbi9QZW5saWdodCkg4oCUIFBlbmxpZ2h0
IGJyaW5ncyB0b2dldGhlciBhIHNldCBvZiBnZW5lcmFsbHkgdXNlZnVsIHB1
cmUgTHVhIG1vZHVsZXMsIGZvY3VzaW5nIG9uIGlucHV0IGRhdGEgaGFuZGxp
bmcgKHN1Y2ggYXMgcmVhZGluZyBjb25maWd1cmF0aW9uIGZpbGVzKSwgZnVu
Y3Rpb25hbCBwcm9ncmFtbWluZyAoc3VjaCBhcyBtYXAsIHJlZHVjZSwgcGxh
Y2Vob2xkZXIgZXhwcmVzc2lvbnMsIGV0YyksIGFuZCBPUyBwYXRoIG1hbmFn
ZW1lbnQKKiBbTW9zZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9Zb25hYmEvTW9z
ZXMpIOKAlCBBIEx1YSB1dGlsaXR5LWJlbHQgbGlicmFyeSBmb3IgZnVuY3Rp
b25hbCBwcm9ncmFtbWluZy4gSXQgY29tcGxlbWVudHMgdGhlIGJ1aWx0LWlu
IEx1YSB0YWJsZSBsaWJyYXJ5LCBtYWtpbmcgZWFzaWVyIG9wZXJhdGlvbnMg
b24gYXJyYXlzLCBsaXN0cywgY29sbGVjdGlvbnMKKiBbVW5kZXJzY29yZS5s
dWFdKGh0dHBzOi8vZ2l0aHViLmNvbS9taXJ2ZW4vdW5kZXJzY29yZS5sdWEp
IOKAlCBVbmRlcnNjb3JlLmx1YSBpcyBhIEx1YSBsaWJyYXJ5IHRoYXQgcHJv
dmlkZXMgYSBzZXQgb2YgdXRpbGl0eSBmdW5jdGlvbnMgZm9yIGRlYWxpbmcg
d2l0aCBpdGVyYXRvcnMsIGFycmF5cywgdGFibGVzLCBhbmQgZnVuY3Rpb25z
CiogW0xvZGFzaC5sdWFdKGh0dHBzOi8vZ2l0aHViLmNvbS9heG1hdC9sb2Rh
c2gubHVhKSDigJQgQSBmdW5jdGlvbmFsIHByb2dyYW1taW5nIGxpYnJhcnkg
Zm9yIEx1YSBpbiByZXNwZWN0IHRvIHRoZSBKYXZhc2NyaXB0IGxpYnJhcnkg
TG9kYXNoCiogW1NlYXJjaCBmb3IgbW9yZSAiRnVuY3Rpb25hbCBMdWEiIHBy
b2plY3RzIG9uIEdpdEh1Yi4uLl0oaHR0cHM6Ly9naXRodWIuY29tL3NlYXJj
aD9sPUx1YSZvPWRlc2MmcT1sdWErZnVuY3Rpb25hbCZzPXN0YXJzJnR5cGU9
UmVwb3NpdG9yaWVzJnV0Zjg9JUUyJTlDJTkzKQoKIyMjIyBXZWIgQVBJcwoK
KiBbbHVhLXJlc3R5LWdpdGh1Yl0oaHR0cHM6Ly9naXRodWIuY29tL2phbWVz
bWFybG93ZS9sdWEtcmVzdHktZ2l0aHViKSDigJQgTHVhIGxpYnJhcnkgZm9y
IHVzaW5nIHRoZSBnaXRodWIgYXBpIGluIHRoZSBuZ3hfbHVhIG5naW54IG1v
ZHVsZQoqIFtsdWEtcmVzdHktaGlwY2hhdF0oaHR0cHM6Ly9naXRodWIuY29t
L2phbWVzbWFybG93ZS9sdWEtcmVzdHktaGlwY2hhdCkg4oCUIEx1YSBsaWJy
YXJ5IGZvciB1c2luZyB0aGUgaGlwY2hhdCBhcGkKKiBbbHVhLXJlc3R5LW5l
d3JlbGljXShodHRwczovL2dpdGh1Yi5jb20vc2Frcy9sdWEtcmVzdHktbmV3
cmVsaWMpIOKAlCBMdWEgbmV3cmVsaWMgU0RLIGZvciB0aGUgbmd4X2x1YSBi
YXNlZCBvbiB0aGUgQyBTREsKKiBbYXBpLWdhdGV3YXktYXdzXShodHRwczov
L2dpdGh1Yi5jb20vYWRvYmUtYXBpcGxhdGZvcm0vYXBpLWdhdGV3YXktYXdz
KSDigJQgTHVhIG1vZHVsZSBmb3IgQVdTIEFQSXMuIFRoZSBtaXNzaW5nIEFX
UyBTREsgZnJvbSBOZ2lueCAvIE9wZW5SZXN0eS4gVXNlIGl0IHRvIHByb3h5
IEFXUyBBUElzIGluIGEgc2ltcGxlIGZhc2hpb24sIHdpdGggYW55IEhUVFAg
Q2xpZW50IHRoYXQgeW91IHByZWZlci4KKiBbbHVhLXJlc3R5LWF3c10oaHR0
cHM6Ly9naXRodWIuY29tL2dyb3Nza3VyL2x1YS1yZXN0eS1hd3MpIOKAlCBB
V1Mgc2lnbmF0dXJlIFY0IGxpYnJhcnkgZm9yIE9wZW5SZXN0eSArIEx1YQoq
IFtsdWEtcmVzdHktYXdzLXNka10oaHR0cHM6Ly9naXRodWIuY29tL2tpZGRr
YWkvbHVhLXJlc3R5LWF3cy1zZGspIOKAlCBBIHJhdyBBV1MgU0RLIGdlbmVy
YXRlZCBmcm9tIEFQSSBzcGVjaWZpY2F0aW9uCiogW2x1YS1yZXN0eS1hd3Mt
ZW1haWxdKGh0dHBzOi8vZ2l0aHViLmNvbS9wYXJhZ2FzdS9sdWEtcmVzdHkt
YXdzLWVtYWlsKSDigJQgU2VuZCBlbWFpbCB1c2luZyBBbWF6b24gU2ltcGxl
IEVtYWlsIFNlcnZpY2UoU0VTKSBBUEkKKiBbbHVhLXJlc3R5LWF3cy1hdXRo
XShodHRwczovL2dpdGh1Yi5jb20vcGFyYWdhc3UvbHVhLXJlc3R5LWF3cy1h
dXRoKSDigJQgU2ltcGxlIEx1YSByZXN0eSB1dGlsaXRpZXMgdG8gZ2VuZXJh
dGUgQW1hem9uIHY0IGF1dGhvcml6YXRpb24gYW5kIHNpZ25hdHVyZSBoZWFk
ZXJzCiogW2x1YS1yZXN0eS1zM10oaHR0cHM6Ly9naXRodWIuY29tL2phbWVz
bWFybG93ZS9sdWEtcmVzdHktczMpIOKAlCBMdWEgZHJpdmVyIGZvciB1cGxv
YWRpbmcgY29udGVudCB0byBBbWF6b24gUzMKKiBbbHVhLXJlc3R5LXMzdXBs
b2FkZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9saWxpZW4xMDEwL2x1YS1yZXN0
eS1zM3VwbG9hZGVyKSDigJQgQW4gQVdTIFMzIHVwbG9hZCBjbGllbnTvvIxl
YXN5IHRvIHVzZQoqIFtsdWEtcmVzdHktcGF5cGFsXShodHRwczovL2dpdGh1
Yi5jb20vQ2hld2J5ZS9sdWEtcmVzdHktcGF5cGFsKSDigJQgTHVhIFBheXBh
bCBjbGllbnQgdXNpbmcgZXhwcmVzcyBjaGVja291dCBmb3IgT3BlblJlc3R5
CiogW2x1YS1yZXN0eS0xN21vbmlwXShodHRwczovL2dpdGh1Yi5jb20vdGlt
ZWJ1Zy9sdWEtcmVzdHktMTdtb25pcCkg4oCUIDE3TW9uSVAgcGFyc2luZyBs
aWJyYXJ5IGZvciBuZ3hfbHVhCiogW2x1YS1yZXN0eS11cHl1bl0oaHR0cHM6
Ly9naXRodWIuY29tL2FDYXlGL2x1YS1yZXN0eS11cHl1bikg4oCUIFVweXVu
IGNsb3VkLWJhc2VkIHBsYXRmb3JtCiogW2x1YS1tYWlsZ3VuXShodHRwczov
L2dpdGh1Yi5jb20vbGVhZm8vbHVhLW1haWxndW4pIOKAlCBBIEx1YSBsaWJy
YXJ5IGZvciBzZW5kaW5nIGVtYWlscyBhbmQgaW50ZXJhY3Rpbmcgd2l0aCB0
aGUgTWFpbGd1biBBUEkuIENvbXBhdGlibGUgd2l0aCBPcGVuUmVzdHkgdmlh
IExhcGlzIEhUVFAgQVBJLCBvciBhbnkgb3RoZXIgTHVhIHNjcmlwdCB2aWEg
THVhU29ja2V0LgoqIFtsdWEtcGF5bWVudHNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9sZWFmby9sdWEtcGF5bWVudHMpIOKAlCBCaW5kaW5ncyB0byB2YXJpb3Vz
IHBheW1lbnQgcHJvdmlkZXIgQVBJcyBmb3IgdXNlIGluIEx1YSAod2l0aCBP
cGVuUmVzdHkgb3IgYW55dGhpbmcgdGhhdCBzdXBwb3J0cyBMdWFTb2NrZXQp
CgojIyMjIFNlY3VyaXR5CgoqIFtsdWEtcmVzdHktZGRvc10oaHR0cHM6Ly9n
aXRodWIuY29tL3NhdHJvYml0L2x1YS1yZXN0eS1kZG9zKSDigJQgVGhpcyBs
aWJyYXJ5IHVzZXMgQ29va2llIFZhbGlkYXRpb24gdG8gZGV0ZWN0IGJvdHMg
ZnJvbSByZWFsIHVzZXJzCgojIyMjIE90aGVyIFNvdXJjZXMgZm9yIExpYnJh
cmllcwoKKiBbT3BlblJlc3R5IFBhY2thZ2UgTWFuYWdlciBSZXBvc2l0b3J5
XShodHRwczovL29wbS5vcGVucmVzdHkub3JnLykKKiBbTHVhUm9ja3MgUmVw
b3NpdG9yeV0oaHR0cHM6Ly9sdWFyb2Nrcy5vcmcvKSAoW1NlYXJjaCBmb3Ig
KnJlc3R5KiBsaWJyYXJpZXMgaW4gTHVhUm9ja3NdKGh0dHBzOi8vbHVhcm9j
a3Mub3JnL3NlYXJjaD9xPXJlc3R5Jm5vbl9yb290PW9uKSkKKiBbR2l0aHVi
IFNlYXJjaCBmb3IgbHVhLXJlc3R5LSogTGlicmFyaWVzXShodHRwczovL2dp
dGh1Yi5jb20vc2VhcmNoP289ZGVzYyZxPWx1YS1yZXN0eStpbiUzQW5hbWUm
cmVmPXNlYXJjaHJlc3VsdHMmcz1zdGFycyZ0eXBlPVJlcG9zaXRvcmllcyZ1
dGY4PSVFMiU5QyU5MyksIG9yIFt0aGUgcmVjZW50bHkgdXBkYXRlZCBvbmVz
XShodHRwczovL2dpdGh1Yi5jb20vc2VhcmNoP289ZGVzYyZxPWx1YS1yZXN0
eStpbiUzQW5hbWUmcmVmPXNlYXJjaHJlc3VsdHMmcz11cGRhdGVkJnR5cGU9
UmVwb3NpdG9yaWVzJnV0Zjg9JUUyJTlDJTkzKQoqIFtMdWEgVG9vbGJveF0o
aHR0cHM6Ly9sdWEtdG9vbGJveC5jb20vKQoqIFtsdWFwb3dlciDigJQgTHVh
LCBKSVQsIGJhdHRlcmllc10oaHR0cHM6Ly9sdWFwb3dlci5jb20vKQoqIFtM
aXN0IG9mIEF2YWlsYWJsZSBMdWFKSVQgUGFja2FnZXNdKGh0dHA6Ly93aWtp
Lmx1YWppdC5vcmcvRkZJLU5hdGl2ZS1MaWJyYXJpZXMpCiogW0xpc3Qgb2Yg
QXZhaWxhYmxlIEx1YUpJVCBGRkkgQmluZGluZ3NdKGh0dHA6Ly93aWtpLmx1
YWppdC5vcmcvRkZJLUJpbmRpbmdzKQoKIyMgQm9va3MgYW5kIFR1dG9yaWFs
cwoKIyMjIyBCb29rcwoKKiBbUHJvZ3JhbW1pbmcgT3BlblJlc3R5XShodHRw
czovL3d3dy5naXRib29rLmNvbS9ib29rL29wZW5yZXN0eS9wcm9ncmFtbWlu
Zy1vcGVucmVzdHkvZGV0YWlscykg4oCUIFNjcmlwdGluZyBhbiBOR0lOWC1i
YXNlZCBXZWIgUGxhdGZvcm0gKFdvcmstaW4tUHJvZ3Jlc3MpCiogW09wZW5S
ZXN0eSBCZXN0IFByYWN0aWNlc10oaHR0cHM6Ly9naXRodWIuY29tL21vb25i
aW5nYmluZy9vcGVucmVzdHktYmVzdC1wcmFjdGljZXMpIChbR2l0Qm9va10o
aHR0cHM6Ly93d3cuZ2l0Ym9vay5jb20vYm9vay9tb29uYmluZ2Jpbmcvb3Bl
bnJlc3R5LWJlc3QtcHJhY3RpY2VzL2RldGFpbHMpKSAoQ2hpbmVzZSwgdXNl
IGUuZy4gR29vZ2xlIFRyYW5zbGF0ZSkKCiMjIyMgVHV0b3JpYWxzIGFuZCBH
dWlkZXMKCiogW2FnZW50emgncyBOZ2lueCBUdXRvcmlhbHNdKGh0dHA6Ly9v
cGVucmVzdHkub3JnL2Rvd25sb2FkL2FnZW50emgtbmdpbngtdHV0b3JpYWxz
LWVuLmh0bWwpCiogW0RlZmluaXRlbHkgYW4gT3BlblJlc3R5IEd1aWRlXSho
dHRwOi8vd3d3LnN0YXRpY3NoaW4uY29tL3Byb2dyYW1taW5nL2RlZmluaXRl
bHktYW4tb3Blbi1yZXN0eS1ndWlkZS8pCiogW1RvcCB0ZW4gdGhpbmdzIGFi
b3V0IE9wZW5SZXN0eV0oaHR0cDovL3d3dy5zdGF0aWNzaGluLmNvbS90b3At
dGVucy90aGluZ3MtYWJvdXQtb3BlbnJlc3R5Lmh0bWwpCiogVGhlIExhdGVz
dCBhbmQgR3JlYXRlc3QgZnJvbSBuZ3hfbHVhOiBOZXcgRmVhdHVyZXMgJiBU
b29scyAoW1N1bW1hcnldKGh0dHBzOi8vbmdpbnguYnVzeWNvbmYuY29tL2Fj
dGl2aXRpZXMvNTNkODU0YzFjOWUyNTVjZjJkMDAwMDdiKSwgW1NsaWRlc10o
aHR0cDovL2FnZW50emgub3JnL21pc2Mvc2xpZGVzL25naW54LWNvbmYtMjAx
NC8jMSksIFtQREZdKGh0dHA6Ly9hZ2VudHpoLm9yZy9taXNjL3NsaWRlcy9u
Z2lueC1jb25mLTIwMTQucGRmKSwgW1ZpZGVvXShodHRwczovL3d3dy55b3V0
dWJlLmNvbS93YXRjaD92PVowZlFhYnZWaElrKSkKKiBbTmdpbnggQ29uZmln
dXJhdGlvbiBTbmlwcGV0c10oaHR0cHM6Ly9naXRodWIuY29tL2xlYmluaC9u
Z2lueC1jb25mKSDigJQgQSBjb2xsZWN0aW9uIG9mIHVzZWZ1bCBOZ2lueCBj
b25maWd1cmF0aW9uIHNuaXBwZXRzCgojIyBWaWRlb3MKCiogW0dldHRpbmcg
c3RhcnRlZCB3aXRoIExhcGlzLCB0aGUgd2ViIGZyYW1ld29ya10oaHR0cHM6
Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1FbzY3aVRZMVlmOCkKKiBbQnVp
bGRpbmcgYW4gSFRUUCByZXF1ZXN0IHJvdXRlciB3aXRoIE5HSU5YIGFuZCBM
dWEgLSBTaG9waWZ5XShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92
PUN3NkNpOUFGMjNrKSAoTmdpbnggQ29uZiAyMDE1KQoqIFtFbmFibGluZyBU
TFMgQ3Jvc3MgaG9zdCBTZXNzaW9uIFJlc3VtcHRpb24gd2l0aCBGb3J3YXJk
IFNlY3JlY3kgdmlhIG5neCBsdWFdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29t
L3dhdGNoP3Y9SkROSlRrRENIMGMpIChOZ2lueCBDb25mIDIwMTUpCiogW1Ro
ZSBMYXRlc3QgYW5kIEdyZWF0ZXN0IGZyb20gbmd4X2x1YTogTmV3IEZlYXR1
cmVzICYgVG9vbHNdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9
WjBmUWFidlZoSWspIChOZ2lueCBDb25mIDIwMTQpCgojIyBDb25mZXJlbmNl
cywgV29ya3Nob3BzIGFuZCBFdmVudHMKCiogW09wZW5SZXN0eSBDb24gMjAx
NiwgU2hlbnplbiwgQ2hpbmFdKGh0dHA6Ly9jb24ub3BlbnJlc3R5Lm9yZy9j
bi8yMDE2LykKICAqIE5ldyBEZXZlbG9wbWVudCBvZiBPcGVuUmVzdHkgaW4g
MjAxNiAoW1NsaWRlc10oaHR0cDovL29wZW5yZXN0eS5vcmcvc2xpZGVzL05l
dy1kZXZlbG9wbWVudC1vZi1PcGVuUmVzdHktaW4tMjAxNi5wZGYpLCBbVmlk
ZW8gaW4gQ2hpbmVzZV0oaHR0cHM6Ly95b3V0dS5iZS9INVVGR0RhZjlYaykp
CiogW0x1YSBXb3Jrc2hvcCAyMDE2LCBTYW4gRnJhbmNpc2NvLCBVU0FdKGh0
dHA6Ly93d3cubHVhc2YyMDE2Lm9yZy8pIChbTHVhLm9yZ10oaHR0cHM6Ly93
d3cubHVhLm9yZy93c2hvcDE2Lmh0bWwpKQogICogV3JpdGluZyBPcHRpbWFs
IEx1YSBDb2RlIGZvciBMdWFKSVQgYW5kIE9wZW5SZXN0eSAoW1NsaWRlc10o
aHR0cHM6Ly93d3cubHVhLm9yZy93c2hvcDE2L1poYW5nLnBkZiksIFtWaWRl
b10oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1GZmhFZEY0MG5o
USkpCiogW0JheSBBcmVhIE9wZW5SZXN0eSBNZWV0dXAgMjAxNiAvIDNdKGh0
dHA6Ly93d3cubWVldHVwLmNvbS9CYXktQXJlYS1PcGVuUmVzdHktTWVldHVw
LykKICAqIGFkb2JlLmlvIChbU2xpZGVzXShodHRwOi8vb3BlbnJlc3R5Lm9y
Zy9zbGlkZXMvYWRvYmUtaW8tb3BlbnJlc3R5LW1lZXR1cC5wZGYpLCBbVmlk
ZW9dKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9RXNMTzRhRTRU
V1EpKQogICogS09ORyAoW1NsaWRlc10oaHR0cHM6Ly9vcGVucmVzdHkub3Jn
L3NsaWRlcy9rb25nX29wZW5yZXN0eV9zbGlkZXMucGRmKSwgW1ZpZGVvXSho
dHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PVF1YmNkc0RzcV9rKSkK
ICAqIFdoYXQncyBuZXcgaW4gT3BlblJlc3R5IGZvciAyMDE2IChbU2xpZGVz
XShodHRwczovL29wZW5yZXN0eS5vcmcvc2xpZGVzL1doYXRzLW5ldy1pbi1P
cGVuUmVzdHktZm9yLTIwMTYucGRmKSwgW1ZpZGVvXShodHRwczovL3d3dy55
b3V0dWJlLmNvbS93YXRjaD92PWZVR1hFa2RpcW1rKSkKKiBbT3BlblJlc3R5
IENvbiAyMDE1LCBCZWlqaW5nLCBDaGluYV0oaHR0cDovL3d3dy5pcmVzdHku
Y29tLykKICAqIFRoZSBQYXN0LCBQcmVzZW50LCBhbmQgRnV0dXJlIG9mIE9w
ZW5SZXN0eSAyMDE1IChbU2xpZGVzXShodHRwOi8vd3d3LmlyZXN0eS5jb20v
ZG93bmxvYWQvZWJvb2svMjAxNV9jb24vemhhbmd5aWNodW4ucGRmKSwgW1Zp
ZGVvXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PXZVZ1RIZVhN
NW04KSkgKEluIENoaW5lc2UpCiAgKiBEZXZlbG9waW5nIE9wZW5SZXN0eSBG
cmFtZXdvcmsgKFtTbGlkZXNdKGh0dHA6Ly93d3cuc2xpZGVzaGFyZS5uZXQv
QWFwb1RhbHZlbnNhYXJpMS9kZXZlbG9waW5nLW9wZW5yZXN0eS1mcmFtZXdv
cmstNTc0MDQwMTIpLCBbVmlkZW9dKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29t
L3dhdGNoP3Y9VnFCdDVpY0tDSTgpKQogICogQmUgYSBNaWNyb3NlcnZpY2Ug
SGVybyAoW1NsaWRlc10oaHR0cDovL3d3dy5pcmVzdHkuY29tL2Rvd25sb2Fk
L2Vib29rLzIwMTVfY29uL3poYW5nc2h1YWkucGRmKSwgW1ZpZGVvXShodHRw
czovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWdxUk1YOEJRRDk4KSkgKElu
IENoaW5lc2UpCgojIyBEZW1vIEFwcGxpY2F0aW9ucwoKKiBbQ2hhdCBBcHBs
aWNhdGlvbiBwcmVzZW50ZWQgYXQgT3BlblJlc3R5IENvbmZlcmVuY2UgMjAx
NV0oaHR0cHM6Ly9naXRodWIuY29tL2J1bmdsZS9pcmVzdHkpIGJ5IFtAYnVu
Z2xlXShodHRwczovL2dpdGh1Yi5jb20vYnVuZ2xlKQoKIyMgU2VlIEFsc28K
CiogW2F3ZXNvbWUtbHVhXShodHRwczovL2dpdGh1Yi5jb20vTGV3aXNKRWxs
aXMvYXdlc29tZS1sdWEpIGJ5IFtATGV3aXNKRWxsaXNdKGh0dHBzOi8vZ2l0
aHViLmNvbS9MZXdpc0pFbGxpcykKKiBbYXdlc29tZS1sdWFdKGh0dHBzOi8v
Z2l0aHViLmNvbS9mb3JoYXBweS9hd2Vzb21lLWx1YSkgYnkgW0Bmb3JoYXBw
eV0oaHR0cHM6Ly9naXRodWIuY29tL2ZvcmhhcHB5KQoqIFtBIGNvbGxlY3Rp
b24gb2YgcmVzb3VyY2VzIGNvdmVyaW5nIE5naW54LCBOZ2lueCArIEx1YSwg
T3BlblJlc3R5IGFuZCBUZW5naW5lXShodHRwczovL2dpdGh1Yi5jb20vZmNh
bWJ1cy9uZ2lueC1yZXNvdXJjZXMpCiogW1doZXJlIEx1YSBpcyBVc2VkXSho
dHRwczovL3NpdGVzLmdvb2dsZS5jb20vc2l0ZS9tYXJidXgvaG9tZS93aGVy
ZS1sdWEtaXMtdXNlZCkgYW5kIFtMdWEgVXNlc10oaHR0cDovL2x1YS11c2Vy
cy5vcmcvd2lraS9MdWFVc2VzKQo=
",,1580,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'uwsgi-nginx-flask-docker',51702566,b'Docker image with uWSGI and Nginx for Flask applications in Python running in a single container. Optionally with Alpine Linux.',b'Python',25,1580,,40,False,b'https://api.github.com/repos/tiangolo/uwsgi-nginx-flask-docker/forks',"WyFbQnVpbGQgU3RhdHVzXShodHRwczovL3RyYXZpcy1jaS5vcmcvdGlhbmdv
bG8vdXdzZ2ktbmdpbngtZmxhc2stZG9ja2VyLnN2Zz9icmFuY2g9bWFzdGVy
KV0oaHR0cHM6Ly90cmF2aXMtY2kub3JnL3RpYW5nb2xvL3V3c2dpLW5naW54
LWZsYXNrLWRvY2tlcikKCiMjIFN1cHBvcnRlZCB0YWdzIGFuZCByZXNwZWN0
aXZlIGBEb2NrZXJmaWxlYCBsaW5rcwoKKiBbYHB5dGhvbjMuN2AsIGBsYXRl
c3RgIF8oRG9ja2VyZmlsZSlfXShodHRwczovL2dpdGh1Yi5jb20vdGlhbmdv
bG8vdXdzZ2ktbmdpbngtZmxhc2stZG9ja2VyL2Jsb2IvbWFzdGVyL3B5dGhv
bjMuNy9Eb2NrZXJmaWxlKQoqIFtgcHl0aG9uMy42YCBfKERvY2tlcmZpbGUp
X10oaHR0cHM6Ly9naXRodWIuY29tL3RpYW5nb2xvL3V3c2dpLW5naW54LWZs
YXNrLWRvY2tlci9ibG9iL21hc3Rlci9weXRob24zLjYvRG9ja2VyZmlsZSkK
KiBbYHB5dGhvbjMuNi1pbmRleGAgXyhEb2NrZXJmaWxlKV9dKGh0dHBzOi8v
Z2l0aHViLmNvbS90aWFuZ29sby91d3NnaS1uZ2lueC1mbGFzay1kb2NrZXIv
YmxvYi9tYXN0ZXIvcHl0aG9uMy42LWluZGV4L0RvY2tlcmZpbGUpCiogW2Bw
eXRob24zLjYtYWxwaW5lMy43YCBfKERvY2tlcmZpbGUpX10oaHR0cHM6Ly9n
aXRodWIuY29tL3RpYW5nb2xvL3V3c2dpLW5naW54LWZsYXNrLWRvY2tlci9i
bG9iL21hc3Rlci9weXRob24zLjYtYWxwaW5lMy43L0RvY2tlcmZpbGUpCiog
W2BweXRob24zLjYtYWxwaW5lMy44YCBfKERvY2tlcmZpbGUpX10oaHR0cHM6
Ly9naXRodWIuY29tL3RpYW5nb2xvL3V3c2dpLW5naW54LWZsYXNrLWRvY2tl
ci9ibG9iL21hc3Rlci9weXRob24zLjYtYWxwaW5lMy44L0RvY2tlcmZpbGUp
CiogW2BweXRob24zLjVgIF8oRG9ja2VyZmlsZSlfXShodHRwczovL2dpdGh1
Yi5jb20vdGlhbmdvbG8vdXdzZ2ktbmdpbngtZmxhc2stZG9ja2VyL2Jsb2Iv
bWFzdGVyL3B5dGhvbjMuNS9Eb2NrZXJmaWxlKQoqIFtgcHl0aG9uMy41LWlu
ZGV4YCBfKERvY2tlcmZpbGUpX10oaHR0cHM6Ly9naXRodWIuY29tL3RpYW5n
b2xvL3V3c2dpLW5naW54LWZsYXNrLWRvY2tlci9ibG9iL21hc3Rlci9weXRo
b24zLjUvRG9ja2VyZmlsZSkKKiBbYHB5dGhvbjIuN2AgXyhEb2NrZXJmaWxl
KV9dKGh0dHBzOi8vZ2l0aHViLmNvbS90aWFuZ29sby91d3NnaS1uZ2lueC1m
bGFzay1kb2NrZXIvYmxvYi9tYXN0ZXIvcHl0aG9uMi43L0RvY2tlcmZpbGUp
CiogW2BweXRob24yLjctaW5kZXhgIF8oRG9ja2VyZmlsZSlfXShodHRwczov
L2dpdGh1Yi5jb20vdGlhbmdvbG8vdXdzZ2ktbmdpbngtZmxhc2stZG9ja2Vy
L2Jsb2IvbWFzdGVyL3B5dGhvbjIuNy1pbmRleC9Eb2NrZXJmaWxlKQoqIFtg
cHl0aG9uMi43LWFscGluZTMuN2AgXyhEb2NrZXJmaWxlKV9dKGh0dHBzOi8v
Z2l0aHViLmNvbS90aWFuZ29sby91d3NnaS1uZ2lueC1mbGFzay1kb2NrZXIv
YmxvYi9tYXN0ZXIvcHl0aG9uMi43LWFscGluZTMuNy9Eb2NrZXJmaWxlKQoq
IFtgcHl0aG9uMi43LWFscGluZTMuOGAgXyhEb2NrZXJmaWxlKV9dKGh0dHBz
Oi8vZ2l0aHViLmNvbS90aWFuZ29sby91d3NnaS1uZ2lueC1mbGFzay1kb2Nr
ZXIvYmxvYi9tYXN0ZXIvcHl0aG9uMi43LWFscGluZTMuOC9Eb2NrZXJmaWxl
KQoKKipOb3RlKio6IE5vdGU6IFRoZXJlIGFyZSBbdGFncyBmb3IgZWFjaCBi
dWlsZCBkYXRlXShodHRwczovL2h1Yi5kb2NrZXIuY29tL3IvdGlhbmdvbG8v
dXdzZ2ktbmdpbngtZmxhc2svdGFncykuIElmIHlvdSBuZWVkIHRvICJwaW4i
IHRoZSBEb2NrZXIgaW1hZ2UgdmVyc2lvbiB5b3UgdXNlLCB5b3UgY2FuIHNl
bGVjdCBvbmUgb2YgdGhvc2UgdGFncy4gRS5nLiBgdGlhbmdvbG8vdXdzZ2kt
bmdpbngtZmxhc2s6cHl0aG9uMy43LTIwMTktMTAtMTRgLgoKIyMgVGVtcG9y
YXJpbHkgbm90IHN1cHBvcnRlZAoKKiBbYHB5dGhvbjMuNy1hbHBpbmUzLjdg
IF8oRG9ja2VyZmlsZSlfXShodHRwczovL2dpdGh1Yi5jb20vdGlhbmdvbG8v
dXdzZ2ktbmdpbngtZmxhc2stZG9ja2VyL2Jsb2IvbWFzdGVyL3B5dGhvbjMu
Ny1hbHBpbmUzLjcvRG9ja2VyZmlsZSkgYW5kIFtgcHl0aG9uMy43LWFscGlu
ZTMuOGAgXyhEb2NrZXJmaWxlKV9dKGh0dHBzOi8vZ2l0aHViLmNvbS90aWFu
Z29sby91d3NnaS1uZ2lueC1mbGFzay1kb2NrZXIvYmxvYi9tYXN0ZXIvcHl0
aG9uMy43LWFscGluZTMuOC9Eb2NrZXJmaWxlKSBUZW1wb3JhcmlseSBub3Qg
c3VwcG9ydGVkIGFzIHVXU0dJIGhhcyBub3QgYmVlbiByZWxlYXNlZCB3aXRo
IFB5dGhvbiAzLjcgc3VwcG9ydCBmb3IgW0FscGluZSAzLjddKGh0dHBzOi8v
cGtncy5hbHBpbmVsaW51eC5vcmcvcGFja2FnZS92My43L21haW4veDg2L3V3
c2dpLXB5dGhvbjMpIG5vciBmb3IgW0FscGluZSAzLjhdKGh0dHBzOi8vcGtn
cy5hbHBpbmVsaW51eC5vcmcvcGFja2FnZS92My44L21haW4veDg2L3V3c2dp
LXB5dGhvbjMpCgojIHV3c2dpLW5naW54LWZsYXNrCgoqKkRvY2tlcioqIGlt
YWdlIHdpdGggKip1V1NHSSoqIGFuZCAqKk5naW54KiogZm9yICoqRmxhc2sq
KiB3ZWIgYXBwbGljYXRpb25zIGluICoqUHl0aG9uIDMuNyoqLCAqKlB5dGhv
biAzLjYqKiwgKipQeXRob24gMy41KiogYW5kICoqUHl0aG9uIDIuNyoqIHJ1
bm5pbmcgaW4gYSBzaW5nbGUgY29udGFpbmVyLiBPcHRpb25hbGx5IHVzaW5n
IEFscGluZSBMaW51eC4KCiMjIERlc2NyaXB0aW9uCgpUaGlzIFsqKkRvY2tl
cioqXShodHRwczovL3d3dy5kb2NrZXIuY29tLykgaW1hZ2UgYWxsb3dzIHlv
dSB0byBjcmVhdGUgWyoqRmxhc2sqKl0oaHR0cDovL2ZsYXNrLnBvY29vLm9y
Zy8pIHdlYiBhcHBsaWNhdGlvbnMgaW4gWyoqUHl0aG9uKipdKGh0dHBzOi8v
d3d3LnB5dGhvbi5vcmcvKSB0aGF0IHJ1biB3aXRoIFsqKnVXU0dJKipdKGh0
dHBzOi8vdXdzZ2ktZG9jcy5yZWFkdGhlZG9jcy5vcmcvZW4vbGF0ZXN0Lykg
YW5kIFsqKk5naW54KipdKGh0dHA6Ly9uZ2lueC5vcmcvZW4vKSBpbiBhIHNp
bmdsZSBjb250YWluZXIuCgpUaGUgY29tYmluYXRpb24gb2YgdVdTR0kgd2l0
aCBOZ2lueCBpcyBhIFtjb21tb24gd2F5IHRvIGRlcGxveSBQeXRob24gRmxh
c2sgd2ViIGFwcGxpY2F0aW9uc10oaHR0cDovL2ZsYXNrLnBvY29vLm9yZy9k
b2NzLzEuMC9kZXBsb3lpbmcvdXdzZ2kvKS4gSXQgaXMgd2lkZWx5IHVzZWQg
aW4gdGhlIGluZHVzdHJ5IGFuZCB3b3VsZCBnaXZlIHlvdSBkZWNlbnQgcGVy
Zm9ybWFuY2UuICgqKQoKVGhlcmUgaXMgYWxzbyBhbiBBbHBpbmUgdmVyc2lv
bi4gSWYgeW91IHdhbnQgaXQsIHVzZSBvbmUgb2YgdGhlIEFscGluZSB0YWdz
IGZyb20gYWJvdmUuCgojIyMgKiBOb3RlIG9uIHBlcmZvcm1hbmNlIGFuZCBm
ZWF0dXJlcwoKSWYgeW91IGFyZSBzdGFydGluZyBhIG5ldyBwcm9qZWN0LCB5
b3UgbWlnaHQgYmVuZWZpdCBmcm9tIGEgbmV3ZXIgYW5kIGZhc3RlciBmcmFt
ZXdvcmsgYmFzZWQgb24gQVNHSSBpbnN0ZWFkIG9mIFdTR0kgKEZsYXNrIGFu
ZCBEamFuZ28gYXJlIFdTR0ktYmFzZWQpLgoKWW91IGNvdWxkIHVzZSBhbiBB
U0dJIGZyYW1ld29yayBsaWtlOgoKKiBbKipGYXN0QVBJKipdKGh0dHBzOi8v
Z2l0aHViLmNvbS90aWFuZ29sby9mYXN0YXBpKSAod2hpY2ggaXMgYmFzZWQg
b24gU3RhcmxldHRlKSB3aXRoIHRoaXMgRG9ja2VyIGltYWdlOiBbKip0aWFu
Z29sby91dmljb3JuLWd1bmljb3JuLWZhc3RhcGkqKl0oaHR0cHM6Ly9naXRo
dWIuY29tL3RpYW5nb2xvL3V2aWNvcm4tZ3VuaWNvcm4tZmFzdGFwaS1kb2Nr
ZXIpLgoqIFsqKlN0YXJsZXR0ZSoqXShodHRwczovL2dpdGh1Yi5jb20vZW5j
b2RlL3N0YXJsZXR0ZSkgZGlyZWN0bHksIHdpdGggdGhpcyBEb2NrZXIgaW1h
Z2U6IFsqKnRpYW5nb2xvL3V2aWNvcm4tZ3VuaWNvcm4tc3RhcmxldHRlKipd
KGh0dHBzOi8vZ2l0aHViLmNvbS90aWFuZ29sby91dmljb3JuLWd1bmljb3Ju
LXN0YXJsZXR0ZS1kb2NrZXIpLgoKRmFzdEFQSSwgb3IgU3RhcmxldHRlLCB3
b3VsZCBnaXZlIHlvdSBhYm91dCA4MDAlICg4eCkgdGhlIHBlcmZvcm1hbmNl
IGFjaGlldmFibGUgd2l0aCBGbGFzayB1c2luZyB0aGlzIGltYWdlICgqKnRp
YW5nb2xvL3V3c2dpLW5naW54LWZsYXNrKiopLiBbWW91IGNhbiBzZWUgdGhl
IHRoaXJkLXBhcnR5IGJlbmNobWFya3MgaGVyZV0oaHR0cHM6Ly93d3cudGVj
aGVtcG93ZXIuY29tL2JlbmNobWFya3MvI3NlY3Rpb249dGVzdCZydW5pZD1h
OTc5ZGU1NS05ODBkLTQ3MjEtYTQ2Zi03NzI5OGIzZjM5MjMmaHc9cGgmdGVz
dD1mb3J0dW5lJmw9emlqemVuLTcpLgoKQWxzbywgaWYgeW91IHdhbnQgdG8g
dXNlIG5ldyB0ZWNobm9sb2dpZXMgbGlrZSBXZWJTb2NrZXRzIGl0IHdvdWxk
IGJlIGVhc2llciAoYW5kICpwb3NzaWJsZSopIHdpdGggYSBuZXdlciBmcmFt
ZXdvcmsgYmFzZWQgb24gQVNHSSwgbGlrZSBGYXN0QVBJIG9yIFN0YXJsZXR0
ZS4gQXMgdGhlIHN0YW5kYXJkIEFTR0kgd2FzIGRlc2lnbmVkIHRvIGJlIGFi
bGUgdG8gaGFuZGxlIGFzeW5jaHJvbm91cyBjb2RlIGxpa2UgdGhlIG9uZSBu
ZWVkZWQgZm9yIFdlYlNvY2tldHMuCgojIyMjIElmIHlvdSBuZWVkIEZsYXNr
CgpJZiB5b3UgbmVlZCB0byB1c2UgRmxhc2sgKGluc3RlYWQgb2Ygc29tZXRo
aW5nIGJhc2VkIG9uIEFTR0kpIGFuZCB5b3UgbmVlZCB0byBoYXZlIHRoZSBi
ZXN0IHBlcmZvcm1hbmNlIHBvc3NpYmxlLCB5b3UgY2FuIHVzZSB0aGUgYWx0
ZXJuYXRpdmUgaW1hZ2U6IFsqKnRpYW5nb2xvL21laW5oZWxkLWd1bmljb3Ju
LWZsYXNrKipdKGh0dHBzOi8vZ2l0aHViLmNvbS90aWFuZ29sby9tZWluaGVs
ZC1ndW5pY29ybi1mbGFzay1kb2NrZXIpLgoKKip0aWFuZ29sby9tZWluaGVs
ZC1ndW5pY29ybi1mbGFzayoqIHdpbGwgZ2l2ZSB5b3UgYWJvdXQgNDAwJSAo
NHgpIHRoZSBwZXJmb3JtYW5jZSBvZiB0aGlzIGltYWdlICgqKnRpYW5nb2xv
L3V3c2dpLW5naW54LWZsYXNrKiopLgoKSXQgaXMgdmVyeSBzaW1pbGFyIHRv
ICoqdGlhbmdvbG8vdXdzZ2ktbmdpbngtZmxhc2sqKiwgc28geW91IGNhbiBz
dGlsbCB1c2UgbWFueSBvZiB0aGUgaWRlYXMgZGVzY3JpYmVkIGhlcmUuCgot
LS0KCioqR2l0SHViIHJlcG8qKjogW2h0dHBzOi8vZ2l0aHViLmNvbS90aWFu
Z29sby91d3NnaS1uZ2lueC1mbGFzay1kb2NrZXJdKGh0dHBzOi8vZ2l0aHVi
LmNvbS90aWFuZ29sby91d3NnaS1uZ2lueC1mbGFzay1kb2NrZXIpCgoqKkRv
Y2tlciBIdWIgaW1hZ2UqKjogW2h0dHBzOi8vaHViLmRvY2tlci5jb20vci90
aWFuZ29sby91d3NnaS1uZ2lueC1mbGFzay9dKGh0dHBzOi8vaHViLmRvY2tl
ci5jb20vci90aWFuZ29sby91d3NnaS1uZ2lueC1mbGFzay8pCgojIyBFeGFt
cGxlcyAoc2ltcGxlIHByb2plY3QgdGVtcGxhdGVzKQoKKiAqKmBweXRob24z
LjdgKiogdGFnOiBnZW5lcmFsIEZsYXNrIHdlYiBhcHBsaWNhdGlvbjoKClsq
KmV4YW1wbGUtZmxhc2stcHl0aG9uMy43LnppcCoqXSg8aHR0cHM6Ly9naXRo
dWIuY29tL3RpYW5nb2xvL3V3c2dpLW5naW54LWZsYXNrLWRvY2tlci9yZWxl
YXNlcy9kb3dubG9hZC92MC4zLjEwL2V4YW1wbGUtZmxhc2stcHl0aG9uMy43
LnppcD4pCgoqICoqYHB5dGhvbjMuN2AqKiB0YWc6IGdlbmVyYWwgRmxhc2sg
d2ViIGFwcGxpY2F0aW9uLCBzdHJ1Y3R1cmVkIGFzIGEgcGFja2FnZSwgZm9y
IGJpZ2dlciBGbGFzayBwcm9qZWN0cywgd2l0aCBkaWZmZXJlbnQgc3VibW9k
dWxlcy4gVXNlIGl0IG9ubHkgYXMgYW4gZXhhbXBsZSBvZiBob3cgdG8gaW1w
b3J0IHlvdXIgbW9kdWxlcyBhbmQgaG93IHRvIHN0cnVjdHVyZSB5b3VyIG93
biBwcm9qZWN0OgoKWyoqZXhhbXBsZS1mbGFzay1wYWNrYWdlLXB5dGhvbjMu
Ny56aXAqKl0oPGh0dHBzOi8vZ2l0aHViLmNvbS90aWFuZ29sby91d3NnaS1u
Z2lueC1mbGFzay1kb2NrZXIvcmVsZWFzZXMvZG93bmxvYWQvdjAuMy4xMC9l
eGFtcGxlLWZsYXNrLXBhY2thZ2UtcHl0aG9uMy43LnppcD4pCgoqICoqYHB5
dGhvbjMuN2AqKiB0YWc6IGBzdGF0aWMvaW5kZXguaHRtbGAgc2VydmVkIGRp
cmVjdGx5IGluIGAvYCwgZS5nLiBmb3IgW1Z1ZV0oaHR0cHM6Ly92dWVqcy5v
cmcvKSwgW1JlYWN0XShodHRwczovL3JlYWN0anMub3JnLyksIFtBbmd1bGFy
XShodHRwczovL2FuZ3VsYXIuaW8vKSwgb3IgYW55IG90aGVyIFNpbmdsZS1Q
YWdlIEFwcGxpY2F0aW9uIHRoYXQgdXNlcyBhIHN0YXRpYyBgaW5kZXguaHRt
bGAsIG5vdCBtb2RpZmllZCBieSBQeXRob246CgpbKipleGFtcGxlLWZsYXNr
LXB5dGhvbjMuNy1pbmRleC56aXAqKl0oPGh0dHBzOi8vZ2l0aHViLmNvbS90
aWFuZ29sby91d3NnaS1uZ2lueC1mbGFzay1kb2NrZXIvcmVsZWFzZXMvZG93
bmxvYWQvdjAuMy4xMC9leGFtcGxlLWZsYXNrLXB5dGhvbjMuNy1pbmRleC56
aXA+KQoKIyMgR2VuZXJhbCBJbnN0cnVjdGlvbnMKCllvdSBkb24ndCBoYXZl
IHRvIGNsb25lIHRoaXMgcmVwbywgeW91IHNob3VsZCBiZSBhYmxlIHRvIHVz
ZSB0aGlzIGltYWdlIGFzIGEgYmFzZSBpbWFnZSBmb3IgeW91ciBwcm9qZWN0
IHdpdGggc29tZXRoaW5nIGluIHlvdXIgYERvY2tlcmZpbGVgIGxpa2U6Cgpg
YGBEb2NrZXJmaWxlCkZST00gdGlhbmdvbG8vdXdzZ2ktbmdpbngtZmxhc2s6
cHl0aG9uMy43CgpDT1BZIC4vYXBwIC9hcHAKYGBgCgpUaGVyZSBhcmUgc2V2
ZXJhbCBpbWFnZSB0YWdzIGF2YWlsYWJsZSBmb3IgUHl0aG9uIDMuNywgUHl0
aG9uIDMuNiwgUHl0aG9uIDMuNSBhbmQgUHl0aG9uIDIuNywgYnV0IGZvciBu
ZXcgcHJvamVjdHMgeW91IHNob3VsZCB1c2UgKipQeXRob24gMy43KiouCgpB
cyBvZiBub3csIFtldmVyeW9uZV0oaHR0cHM6Ly93d3cucHl0aG9uLm9yZy9k
ZXYvcGVwcy9wZXAtMDM3My8pIFtzaG91bGQgYmVdKGh0dHA6Ly9mbGFzay5w
b2Nvby5vcmcvZG9jcy8wLjEyL3B5dGhvbjMvI3B5dGhvbjMtc3VwcG9ydCkg
W3VzaW5nICoqUHl0aG9uIDMqKl0oaHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2pl
Y3QuY29tL2VuLzEuMTEvZmFxL2luc3RhbGwvI3doYXQtcHl0aG9uLXZlcnNp
b24tc2hvdWxkLWktdXNlLXdpdGgtZGphbmdvKS4KClRoZXJlIGFyZSBzZXZl
cmFsIHRlbXBsYXRlIHByb2plY3RzIHRoYXQgeW91IGNhbiBkb3dubG9hZCAo
YXMgYSBgLnppcGAgZmlsZSkgdG8gYm9vdHN0cmFwIHlvdXIgcHJvamVjdCBp
biB0aGUgc2VjdGlvbiAiKipFeGFtcGxlcyAocHJvamVjdCB0ZW1wbGF0ZXMp
KioiIGFib3ZlLgoKVGhpcyBEb2NrZXIgaW1hZ2UgaXMgYmFzZWQgb24gWyoq
dGlhbmdvbG8vdXdzZ2ktbmdpbngqKl0oaHR0cHM6Ly9odWIuZG9ja2VyLmNv
bS9yL3RpYW5nb2xvL3V3c2dpLW5naW54LykuIFRoYXQgRG9ja2VyIGltYWdl
IGhhcyB1V1NHSSBhbmQgTmdpbnggaW5zdGFsbGVkIGluIHRoZSBzYW1lIGNv
bnRhaW5lciBhbmQgd2FzIG1hZGUgdG8gYmUgdGhlIGJhc2Ugb2YgdGhpcyBp
bWFnZS4KCiMjIFF1aWNrIFN0YXJ0CgoqKk5vdGUqKjogWW91IGNhbiBkb3du
bG9hZCB0aGUgKipleGFtcGxlLWZsYXNrLXB5dGhvbjMuNy56aXAqKiBwcm9q
ZWN0IGV4YW1wbGUgYW5kIHVzZSBpdCBhcyB0aGUgdGVtcGxhdGUgZm9yIHlv
dXIgcHJvamVjdCBmcm9tIHRoZSBzZWN0aW9uICoqRXhhbXBsZXMqKiBhYm92
ZS4KCi0tLQoKT3IgeW91IG1heSBmb2xsb3cgdGhlIGluc3RydWN0aW9ucyB0
byBidWlsZCB5b3VyIHByb2plY3QgZnJvbSBzY3JhdGNoOgoKKiBHbyB0byB5
b3VyIHByb2plY3QgZGlyZWN0b3J5CiogQ3JlYXRlIGEgYERvY2tlcmZpbGVg
IHdpdGg6CgpgYGBEb2NrZXJmaWxlCkZST00gdGlhbmdvbG8vdXdzZ2ktbmdp
bngtZmxhc2s6cHl0aG9uMy43CgpDT1BZIC4vYXBwIC9hcHAKYGBgCgoqIENy
ZWF0ZSBhbiBgYXBwYCBkaXJlY3RvcnkgYW5kIGVudGVyIGluIGl0CiogQ3Jl
YXRlIGEgYG1haW4ucHlgIGZpbGUgKGl0IHNob3VsZCBiZSBuYW1lZCBsaWtl
IHRoYXQgYW5kIHNob3VsZCBiZSBpbiB5b3VyIGBhcHBgIGRpcmVjdG9yeSkg
d2l0aDoKCmBgYHB5dGhvbgpmcm9tIGZsYXNrIGltcG9ydCBGbGFzawphcHAg
PSBGbGFzayhfX25hbWVfXykKCkBhcHAucm91dGUoIi8iKQpkZWYgaGVsbG8o
KToKICAgIHJldHVybiAiSGVsbG8gV29ybGQgZnJvbSBGbGFzayIKCmlmIF9f
bmFtZV9fID09ICJfX21haW5fXyI6CiAgICAjIE9ubHkgZm9yIGRlYnVnZ2lu
ZyB3aGlsZSBkZXZlbG9waW5nCiAgICBhcHAucnVuKGhvc3Q9JzAuMC4wLjAn
LCBkZWJ1Zz1UcnVlLCBwb3J0PTgwKQpgYGAKCnRoZSBtYWluIGFwcGxpY2F0
aW9uIG9iamVjdCBzaG91bGQgYmUgbmFtZWQgYGFwcGAgKGluIHRoZSBjb2Rl
KSBhcyBpbiB0aGlzIGV4YW1wbGUuCgoqKk5vdGUqKjogVGhlIHNlY3Rpb24g
d2l0aCB0aGUgYG1haW4oKWAgZnVuY3Rpb24gaXMgZm9yIGRlYnVnZ2luZyBw
dXJwb3Nlcy4gVG8gbGVhcm4gbW9yZSwgcmVhZCB0aGUgKipBZHZhbmNlZCBp
bnN0cnVjdGlvbnMqKiBiZWxvdy4KCiogWW91IHNob3VsZCBub3cgaGF2ZSBh
IGRpcmVjdG9yeSBzdHJ1Y3R1cmUgbGlrZToKCmBgYAouCuKUnOKUgOKUgCBh
cHAK4pSCwqDCoCDilJTilIDilIAgbWFpbi5weQrilJTilIDilIAgRG9ja2Vy
ZmlsZQpgYGAKCiogR28gdG8gdGhlIHByb2plY3QgZGlyZWN0b3J5IChpbiB3
aGVyZSB5b3VyIGBEb2NrZXJmaWxlYCBpcywgY29udGFpbmluZyB5b3VyIGBh
cHBgIGRpcmVjdG9yeSkKKiBCdWlsZCB5b3VyIEZsYXNrIGltYWdlOgoKYGBg
YmFzaApkb2NrZXIgYnVpbGQgLXQgbXlpbWFnZSAuCmBgYAoKKiBSdW4gYSBj
b250YWluZXIgYmFzZWQgb24geW91ciBpbWFnZToKCmBgYGJhc2gKZG9ja2Vy
IHJ1biAtZCAtLW5hbWUgbXljb250YWluZXIgLXAgODA6ODAgbXlpbWFnZQpg
YGAKCi4uLmFuZCB5b3UgaGF2ZSBhbiBvcHRpbWl6ZWQgRmxhc2sgc2VydmVy
IGluIGEgRG9ja2VyIGNvbnRhaW5lci4KCllvdSBzaG91bGQgYmUgYWJsZSB0
byBjaGVjayBpdCBpbiB5b3VyIERvY2tlciBjb250YWluZXIncyBVUkwsIGZv
ciBleGFtcGxlOiA8YSBocmVmPSJodHRwOi8vMTkyLjE2OC45OS4xMDAiIHRh
cmdldD0iX2JsYW5rIj5odHRwOi8vMTkyLjE2OC45OS4xMDA8L2E+IG9yIDxh
IGhyZWY9Imh0dHA6Ly8xMjcuMC4wLjEiIHRhcmdldD0iX2JsYW5rIj5odHRw
Oi8vMTI3LjAuMC4xPC9hPgoKIyMgUHJvamVjdCBHZW5lcmF0b3JzCgpUaGVy
ZSBhcmUgc2V2ZXJhbCBwcm9qZWN0IGdlbmVyYXRvcnMgdGhhdCB5b3UgY2Fu
IHVzZSB0byBzdGFydCB5b3VyIHByb2plY3QsIHdpdGggZXZlcnl0aGluZyBh
bHJlYWR5IGNvbmZpZ3VyZWQuCgojIyMgU2VydmVyIHNldCB1cAoKQWxsIHRo
ZXNlIHByb2plY3QgZ2VuZXJhdG9ycyBpbmNsdWRlIGF1dG9tYXRpYyBhbmQg
ZnJlZSBIVFRQUyBjZXJ0aWZpY2F0ZXMgZ2VuZXJhdGlvbiBwcm92aWRlZCBi
eToKCiogW1RyYWVmaWtdKGh0dHBzOi8vdHJhZWZpay5pby8pIGFuZAoqIFtM
ZXQncyBFbmNyeXB0XShodHRwczovL2xldHNlbmNyeXB0Lm9yZy8pCgouLi51
c2luZyB0aGUgaWRlYXMgZnJvbSBbRG9ja2VyU3dhcm0ucm9ja3NdKGh0dHBz
Oi8vZG9ja2Vyc3dhcm0ucm9ja3MpLgoKSXQgd291bGQgdGFrZSBhYm91dCAy
MCBtaW51dGVzIHRvIHJlYWQgdGhhdCBndWlkZSBhbmQgaGF2ZSBhIERvY2tl
ciBjbHVzdGVyIChvZiBvbmUgb3IgbW9yZSBzZXJ2ZXJzKSB1cCBhbmQgcnVu
bmluZyByZWFkeSBmb3IgeW91ciBwcm9qZWN0cy4KCllvdSBjYW4gaGF2ZSBz
ZXZlcmFsIHByb2plY3RzIGluIHRoZSBzYW1lIGNsdXN0ZXIsIGFsbCB3aXRo
IGF1dG9tYXRpYyBIVFRQUywgZXZlbiBpZiB0aGV5IGhhdmUgZGlmZmVyZW50
IGRvbWFpbnMgb3Igc3ViLWRvbWFpbnMuCgojIyMgR2VuZXJhdGUgYSBwcm9q
ZWN0CgpUaGVuIHlvdSBjYW4gdXNlIG9uZSBvZiB0aGUgZm9sbG93aW5nIHBy
b2plY3QgZ2VuZXJhdG9ycy4KCkl0IHdvdWxkIHRha2UgYWJvdXQgNSBleHRy
YSBtaW51dGVzIHRvIGdlbmVyYXRlIG9uZSBvZiB0aGVzZSBwcm9qZWN0cy4K
CiMjIyBEZXBsb3kKCkFuZCBpdCB3b3VsZCB0YWtlIGFib3V0IDMgbW9yZSBt
aW51dGVzIHRvIGRlcGxveSB0aGVtIGluIHlvdXIgY2x1c3Rlci4KCi0tLQoK
SW4gdG90YWwsIGFib3V0IDI4IG1pbnV0ZXMgdG8gc3RhcnQgZnJvbSBzY3Jh
dGNoIGFuZCBnZXQgYW4gSFRUUFMgRG9ja2VyIGNsdXN0ZXIgd2l0aCB5b3Vy
IGZ1bGwgYXBwbGljYXRpb24ocykgcmVhZHkuCgotLS0KClRoZXNlIGFyZSB0
aGUgcHJvamVjdCBnZW5lcmF0b3JzOgoKIyMjIGZsYXNrLWZyb250ZW5kLWRv
Y2tlcgoKUHJvamVjdCBsaW5rOiBbaHR0cHM6Ly9naXRodWIuY29tL3RpYW5n
b2xvL2ZsYXNrLWZyb250ZW5kLWRvY2tlcl0oaHR0cHM6Ly9naXRodWIuY29t
L3RpYW5nb2xvL2ZsYXNrLWZyb250ZW5kLWRvY2tlcikKCk1pbmltYWwgcHJv
amVjdCBnZW5lcmF0b3Igd2l0aCBhIEZsYXNrIGJhY2tlbmQsIGEgbW9kZXJu
IGZyb250ZW5kIChWdWUsIFJlYWN0IG9yIEFuZ3VsYXIpIHVzaW5nIERvY2tl
ciBtdWx0aS1zdGFnZSBidWlsZGluZyBhbmQgTmdpbngsIGEgVHJhZWZpayBs
b2FkIGJhbGFuY2VyIHdpdGggSFRUUFMsIERvY2tlciBDb21wb3NlIChhbmQg
RG9ja2VyIFN3YXJtIG1vZGUpIGV0Yy4KCiMjIyBmdWxsLXN0YWNrCgpQcm9q
ZWN0IExpbms6IFtodHRwczovL2dpdGh1Yi5jb20vdGlhbmdvbG8vZnVsbC1z
dGFja10oaHR0cHM6Ly9naXRodWIuY29tL3RpYW5nb2xvL2Z1bGwtc3RhY2sp
CgpGdWxsIHN0YWNrIHByb2plY3QgZ2VuZXJhdG9yIHdpdGggRmxhc2sgYmFj
a2VuZCwgUG9zdGdyZVNRTCBEQiwgUEdBZG1pbiwgU1FMQWxjaGVteSwgQWxl
bWJpYyBtaWdyYXRpb25zLCBDZWxlcnkgYXN5bmNocm9ub3VzIGpvYnMsIEFQ
SSB0ZXN0aW5nLCBDSSBpbnRlZ3JhdGlvbiwgRG9ja2VyIENvbXBvc2UgKGFu
ZCBEb2NrZXIgU3dhcm0gbW9kZSksIFN3YWdnZXIsIGF1dG9tYXRpYyBIVFRQ
UywgVnVlLmpzLCBldGMuCgojIyMgZnVsbC1zdGFjay1mbGFzay1jb3VjaGJh
c2UKClByb2plY3QgTGluazogW2h0dHBzOi8vZ2l0aHViLmNvbS90aWFuZ29s
by9mdWxsLXN0YWNrLWZsYXNrLWNvdWNoYmFzZV0oaHR0cHM6Ly9naXRodWIu
Y29tL3RpYW5nb2xvL2Z1bGwtc3RhY2stZmxhc2stY291Y2hiYXNlKQoK4pyo
IFRoaXMgcHJvamVjdCBnZW5lcmF0b3IgaXMgdGhlIG1vc3QgZmVhdHVyZS1j
b21wbGV0ZS4g4pyoCgpGdWxsIHN0YWNrIHByb2plY3QgZ2VuZXJhdG9yIHdp
dGggRmxhc2sgYmFja2VuZCwgQ291Y2hiYXNlLCBDb3VjaGJhc2UgU3luYyBH
YXRld2F5LCBDZWxlcnkgYXN5bmNocm9ub3VzIGpvYnMsIEFQSSB0ZXN0aW5n
LCBDSSBpbnRlZ3JhdGlvbiwgRG9ja2VyIENvbXBvc2UgKGFuZCBEb2NrZXIg
U3dhcm0gbW9kZSksIFN3YWdnZXIsIGF1dG9tYXRpYyBIVFRQUywgVnVlLmpz
LCBldGMuCgpTaW1pbGFyIHRvIHRoZSBvbmUgYWJvdmUgKGBmdWxsLXN0YWNr
YCksIGJ1dCB3aXRoIENvdWNoYmFzZSBpbnN0ZWFkIG9mIFBvc3RncmVTUUws
IGFuZCBzb21lIG1vcmUgZmVhdHVyZXMuCgojIyMgZnVsbC1zdGFjay1mbGFz
ay1jb3VjaGRiCgpQcm9qZWN0IExpbms6IFtodHRwczovL2dpdGh1Yi5jb20v
dGlhbmdvbG8vZnVsbC1zdGFjay1mbGFzay1jb3VjaGRiXShodHRwczovL2dp
dGh1Yi5jb20vdGlhbmdvbG8vZnVsbC1zdGFjay1mbGFzay1jb3VjaGRiKQoK
RnVsbCBzdGFjayBwcm9qZWN0IGdlbmVyYXRvciB3aXRoIEZsYXNrIGJhY2tl
bmQsIENvdWNoREIsIENlbGVyeSBhc3luY2hyb25vdXMgam9icywgQVBJIHRl
c3RpbmcsIENJIGludGVncmF0aW9uLCBEb2NrZXIgQ29tcG9zZSAoYW5kIERv
Y2tlciBTd2FybSBtb2RlKSwgU3dhZ2dlciwgYXV0b21hdGljIEhUVFBTLCBW
dWUuanMsIGV0Yy4KClNpbWlsYXIgdG8gYGZ1bGwtc3RhY2stZmxhc2stY291
Y2hiYXNlYCwgYnV0IHdpdGggQ291Y2hEQiBpbnN0ZWFkIG9mIENvdWNoYmFz
ZSAob3IgUG9zdGdyZVNRTCkuCgojIyBRdWljayBTdGFydCBmb3IgU1BBcyAq
CgojIyMgTW9kZXJuIFNpbmdsZSBQYWdlIEFwcGxpY2F0aW9ucwoKSWYgeW91
IGFyZSBidWlsZGluZyBtb2Rlcm4gZnJvbnRlbmQgYXBwbGljYXRpb25zIChl
LmcuIFtWdWVdKGh0dHBzOi8vdnVlanMub3JnLyksIFtSZWFjdF0oaHR0cHM6
Ly9yZWFjdGpzLm9yZy8pLCBbQW5ndWxhcl0oaHR0cHM6Ly9hbmd1bGFyLmlv
LykpIHlvdSB3b3VsZCBtb3N0IHByb2JhYmx5IGJlIGNvbXBpbGluZyBhIG1v
ZGVybiB2ZXJzaW9uIG9mIEphdmFTY3JpcHQgKEVTMjAxNSwgVHlwZVNjcmlw
dCwgZXRjKSB0byBhIGxlc3MgbW9kZXJuLCBtb3JlIGNvbXBhdGlibGUgdmVy
c2lvbi4KCklmIHlvdSB3YW50IHRvIHNlcnZlIHlvdXIgKGNvbXBpbGVkKSBm
cm9udGVuZCBjb2RlIGJ5IHRoZSBzYW1lIGJhY2tlbmQgKEZsYXNrKSBEb2Nr
ZXIgY29udGFpbmVyLCB5b3Ugd291bGQgaGF2ZSB0byBjb3B5IHRoZSBjb2Rl
IHRvIHRoZSBjb250YWluZXIgYWZ0ZXIgY29tcGlsaW5nIGl0LgoKVGhhdCBt
ZWFucyB0aGF0IHlvdSB3b3VsZCBuZWVkIHRvIGhhdmUgYWxsIHRoZSBmcm9u
dGVuZCB0b29scyBpbnN0YWxsZWQgb24gdGhlIGJ1aWxkaW5nIG1hY2hpbmUg
KGl0IG1pZ2h0IGJlIHlvdXIgY29tcHV0ZXIsIGEgcmVtb3RlIHNlcnZlciwg
ZXRjKS4KClRoYXQgYWxzbyBtZWFucyB0aGF0IHlvdSB3b3VsZCBoYXZlIHRv
LCBzb21laG93LCBhbHdheXMgcmVtZW1iZXIgdG8gY29tcGlsZSB0aGUgZnJv
bnRlbmQgY29kZSByaWdodCBiZWZvcmUgYnVpbGRpbmcgdGhlIERvY2tlciBp
bWFnZS4KCkFuZCBpdCBtaWdodCBhbHNvIG1lYW4gdGhhdCB5b3UgY291bGQg
dGhlbiBoYXZlIHRvIGFkZCB5b3VyIGNvbXBpbGVkIGZyb250ZW5kIGNvZGUg
dG8geW91ciBgZ2l0YCByZXBvc2l0b3J5IChob3BlZnVsbHkgeW91IGFyZSB1
c2luZyBHaXQgYWxyZWFkeSwgb3IgW2xlYXJuaW5nIGhvdyB0byB1c2UgYGdp
dGBdKGh0dHBzOi8vd3d3LmF0bGFzc2lhbi5jb20vZ2l0KSkuCgpBZGRpbmcg
eW91ciBjb21waWxlZCBjb2RlIHRvIEdpdCBpcyBhIHZlcnkgYmFkIGlkZWEg
Zm9yIHNldmVyYWwgcmVhc29ucywgc29tZSBvZiB0aG9zZSBhcmU6CgoqIFlv
dSBkb24ndCBoYXZlIGEgc2luZ2xlLCB1bHRpbWF0ZSBzb3VyY2Ugb2YgdHJ1
dGggKHRoZSBzb3VyY2UgY29kZSkuCiogVGhlIGNvbXBpbGVkIGNvZGUgbWln
aHQgYmUgc3RhbGUsIGV2ZW4gd2hlbiB5b3VyIHNvdXJjZSBjb2RlIGlzIG5l
dywgd2hpY2ggbWlnaHQgbWFrZSB5b3Ugc3BlbmQgYSBsb3Qgb2YgdGltZSBk
ZWJ1Z2dpbmcuCiogWW91IG1pZ2h0IHJ1biBpbnRvIGEgbG90IG9mIGNvZGUg
Y29uZmxpY3RzIHdoZW4gaW50ZXJhY3Rpbmcgd2l0aCBtdWx0aXBsZSB0ZWFt
IG1lbWJlcnMgd2l0aCBkaWZmZXJlbnQgR2l0IGJyYW5jaGVzLCBhbmQgc3Bl
bmQgYSBsb3Qgb2YgdGltZSBzb2x2aW5nIGlycmVsZXZhbnQgY29kZSBjb25m
bGljdHMgaW4gdGhlIGNvbXBpbGVkIGNvZGUuCiAgICAqIFRoaXMgbWlnaHQg
YWxzbyBydWluIGF1dG9tYXRpYyBicmFuY2ggbWVyZ2luZyBpbiBwdWxsIHJl
cXVlc3RzIGZyb20gb3RoZXIgdGVhbSBtZW1iZXJzLgoKRm9yIHRoZXNlIHJl
YXNvbnMsIGl0IGlzIG5vdCByZWNvbW1lbmRlZCB0aGF0IHlvdSBzZXJ2ZSB5
b3VyIGZyb250ZW5kIGNvZGUgZnJvbSB0aGUgc2FtZSBiYWNrZW5kIChGbGFz
aykgRG9ja2VyIGNvbnRhaW5lci4KCiMjIyBCZXR0ZXIgYWx0ZXJuYXRpdmUK
ClRoZXJlJ3MgYSBtdWNoIGJldHRlciBhbHRlcm5hdGl2ZSB0byBzZXJ2aW5n
IHlvdXIgZnJvbnRlbmQgY29kZSBmcm9tIHRoZSBzYW1lIGJhY2tlbmQgKEZs
YXNrKSBEb2NrZXIgY29udGFpbmVyLgoKWW91IGNhbiBoYXZlIGFub3RoZXIg
RG9ja2VyIGNvbnRhaW5lciB3aXRoIGFsbCB0aGUgZnJvbnRlbmQgdG9vbHMg
aW5zdGFsbGVkIChOb2RlLmpzLCBldGMpIHRoYXQ6CgoqIFRha2VzIHlvdXIg
c291cmNlIGZyb250ZW5kIGNvZGUuCiogQ29tcGlsZXMgaXQgYW5kIGdlbmVy
YXRlcyB0aGUgZmluYWwgImRpc3RyaWJ1dGFibGUiIGZyb250ZW5kLgoqIFVz
ZXMgRG9ja2VyICJtdWx0aS1zdGFnZSBidWlsZHMiIHRvIGNvcHkgdGhhdCBj
b21waWxlZCBjb2RlIGludG8gYSBwdXJlIE5naW54IERvY2tlciBpbWFnZS4K
KiBUaGUgZmluYWwgZnJvbnRlbmQgaW1hZ2Ugb25seSBjb250YWlucyB0aGUg
Y29tcGlsZWQgZnJvbnRlbmQgY29kZSwgZGlyZWN0bHkgZnJvbSB0aGUgc291
cmNlLCBidXQgaGFzIHRoZSBzbWFsbCBzaXplIG9mIGFuIE5naW54IGltYWdl
LCB3aXRoIGFsbCB0aGUgcGVyZm9ybWFuY2UgZnJvbSBOZ2lueC4KClRvIGxl
YXJuIHRoZSBzcGVjaWZpY3Mgb2YgdGhpcyBwcm9jZXNzIGZvciB0aGUgZnJv
bnRlbmQgYnVpbGRpbmcgaW4gRG9ja2VyIHlvdSBjYW4gcmVhZDoKCiogW1Jl
YWN0IGluIERvY2tlciB3aXRoIE5naW54LCBidWlsdCB3aXRoIG11bHRpLXN0
YWdlIERvY2tlciBidWlsZHMsIGluY2x1ZGluZyB0ZXN0aW5nXShodHRwczov
L21lZGl1bS5jb20vQHRpYW5nb2xvL3JlYWN0LWluLWRvY2tlci13aXRoLW5n
aW54LWJ1aWx0LXdpdGgtbXVsdGktc3RhZ2UtZG9ja2VyLWJ1aWxkcy1pbmNs
dWRpbmctdGVzdGluZy04Y2M0OWQ2ZWMzMDUpCiogW0FuZ3VsYXIgaW4gRG9j
a2VyIHdpdGggTmdpbngsIHN1cHBvcnRpbmcgY29uZmlndXJhdGlvbnMgLyBl
bnZpcm9ubWVudHMsIGJ1aWx0IHdpdGggbXVsdGktc3RhZ2UgRG9ja2VyIGJ1
aWxkcyBhbmQgdGVzdGluZyB3aXRoIENocm9tZSBIZWFkbGVzc10oaHR0cHM6
Ly9tZWRpdW0uY29tL0B0aWFuZ29sby9hbmd1bGFyLWluLWRvY2tlci13aXRo
LW5naW54LXN1cHBvcnRpbmctZW52aXJvbm1lbnRzLWJ1aWx0LXdpdGgtbXVs
dGktc3RhZ2UtZG9ja2VyLWJ1aWxkcy1iYjlmMTcyNGU5ODQpCgpBZnRlciBo
YXZpbmcgb25lIGJhY2tlbmQgKEZsYXNrKSBjb250YWluZXIgYW5kIG9uZSBm
cm9udGVuZCBjb250YWluZXIsIHlvdSBuZWVkIHRvIHNlcnZlIGJvdGggb2Yg
dGhlbS4KCkFuZCB5b3UgbWlnaHQgd2FudCB0byBzZXJ2ZSB0aGVtIHVuZGVy
IHRoZSBzYW1lIGRvbWFpbiwgdW5kZXIgYSBkaWZmZXJlbnQgcGF0aC4gRm9y
IGV4YW1wbGUsIHRoZSBiYWNrZW5kIChGbGFzaykgYXBwIGF0IHRoZSBwYXRo
IGAvYXBpYCBhbmQgdGhlIGZyb250ZW5kIGF0IHRoZSAicm9vdCIgcGF0aCBg
L2AuCgpZb3UgY2FuIHRoZW4gdXNlIFtUcmFlZmlrXShodHRwczovL3RyYWVm
aWsuaW8vKSB0byBoYW5kbGUgdGhhdC4KCkFuZCBpdCBjYW4gYWxzbyBhdXRv
bWF0aWNhbGx5IGdlbmVyYXRlIEhUVFBTIGNlcnRpZmljYXRlcyBmb3IgeW91
ciBhcHBsaWNhdGlvbiB1c2luZyBMZXQncyBFbmNyeXB0LiBBbGwgZm9yIGZy
ZWUsIGluIGEgdmVyeSBlYXN5IHNldHVwLgoKSWYgeW91IHdhbnQgdG8gdXNl
IHRoaXMgYWx0ZXJuYXRpdmUsIFtjaGVjayB0aGUgcHJvamVjdCBnZW5lcmF0
b3JzIGFib3ZlXSgjcHJvamVjdC1nZW5lcmF0b3JzKSwgdGhleSBhbGwgdXNl
IHRoaXMgaWRlYS4KCkluIHRoaXMgc2NlbmFyaW8sIHlvdSB3b3VsZCBoYXZl
IDMgRG9ja2VyIGNvbnRhaW5lcnM6CgoqIEJhY2tlbmQgKEZsYXNrKQoqIEZy
b250ZW5kIChWdWUuanMsIEFuZ3VsYXIsIFJlYWN0IG9yIGFueSBvdGhlcikK
KiBUcmFlZmlrIChsb2FkIGJhbGFuY2VyLCBIVFRQUykKCiMjIyBEZXByZWNh
dGVkIFNpbmdsZSBQYWdlIEFwcGxpY2F0aW9ucyBndWlkZQoKSWYgeW91IHdh
bnQgdG8gY2hlY2sgdGhlIHByZXZpb3VzIChkZXByZWNhdGVkKSBkb2N1bWVu
dGF0aW9uIG9uIGFkZGluZyBhIGZyb250ZW5kIHRvIHRoZSBzYW1lIGNvbnRh
aW5lciwgeW91IGNhbiBbcmVhZCB0aGUgZGVwcmVjYXRlZCBndWlkZSBmb3Ig
c2luZ2xlIHBhZ2UgYXBwc10oaHR0cHM6Ly9naXRodWIuY29tL3RpYW5nb2xv
L3V3c2dpLW5naW54LWZsYXNrLWRvY2tlci9ibG9iL21hc3Rlci9kZXByZWNh
dGVkLXNpbmdsZS1wYWdlLWFwcHMtaW4tc2FtZS1jb250YWluZXIubWQpLgoK
IyMgUXVpY2sgU3RhcnQgZm9yIGJpZ2dlciBwcm9qZWN0cyBzdHJ1Y3R1cmVk
IGFzIGEgUHl0aG9uIHBhY2thZ2UKCioqTm90ZSoqOiBZb3UgY2FuIGRvd25s
b2FkIHRoZSAqKmV4YW1wbGUtZmxhc2stcGFja2FnZS1weXRob24zLjcuemlw
KiogcHJvamVjdCBleGFtcGxlIGFuZCB1c2UgaXQgYXMgYW4gZXhhbXBsZSBv
ciB0ZW1wbGF0ZSBmb3IgeW91ciBwcm9qZWN0IGZyb20gdGhlIHNlY3Rpb24g
KipFeGFtcGxlcyoqIGFib3ZlLgoKLS0tCgpZb3Ugc2hvdWxkIGJlIGFibGUg
dG8gZm9sbG93IHRoZSBzYW1lIGluc3RydWN0aW9ucyBhcyBpbiB0aGUgIioq
UXVpY2tTdGFydCoqIiBzZWN0aW9uIGFib3ZlLCB3aXRoIHNvbWUgbWlub3Ig
bW9kaWZpY2F0aW9uczoKCiogSW5zdGVhZCBvZiBwdXR0aW5nIHlvdXIgY29k
ZSBpbiB0aGUgYGFwcC9gIGRpcmVjdG9yeSwgcHV0IGl0IGluIGEgZGlyZWN0
b3J5IGBhcHAvYXBwL2AuCiogQWRkIGFuIGVtcHR5IGZpbGUgYF9faW5pdF9f
LnB5YCBpbnNpZGUgb2YgdGhhdCBgYXBwL2FwcC9gIGRpcmVjdG9yeS4KKiBB
ZGQgYSBmaWxlIGB1d3NnaS5pbmlgIGluc2lkZSB5b3VyIGBhcHAvYCBkaXJl
Y3RvcnkgKHRoYXQgaXMgY29waWVkIHRvIGAvYXBwL3V3c2dpLmluaWAgaW5z
aWRlIHRoZSBjb250YWluZXIpLgoqIEluIHlvdXIgYHV3c2dpLmluaWAgZmls
ZSwgYWRkOgoKYGBgaW5pClt1d3NnaV0KbW9kdWxlID0gYXBwLm1haW4KY2Fs
bGFibGUgPSBhcHAKYGBgCgpUaGUgZXhwbGFuYXRpb24gb2YgdGhlIGB1d3Nn
aS5pbmlgIGlzIGFzIGZvbGxvd3M6CgoqIFRoZSBtb2R1bGUgaW4gd2hlcmUg
bXkgUHl0aG9uIHdlYiBhcHAgbGl2ZXMgaXMgYGFwcC5tYWluYC4gU28sIGlu
IHRoZSBwYWNrYWdlIGBhcHBgIChgL2FwcC9hcHBgKSwgZ2V0IHRoZSBgbWFp
bmAgbW9kdWxlIChgbWFpbi5weWApLgoqIFRoZSBGbGFzayB3ZWIgYXBwbGlj
YXRpb24gaXMgdGhlIGBhcHBgIG9iamVjdCAoYGFwcCA9IEZsYXNrKF9fbmFt
ZV9fKWApLgoKWW91ciBmaWxlIHN0cnVjdHVyZSB3b3VsZCBsb29rIGxpa2U6
CgpgYGAKLgrilJzilIDilIAgYXBwCuKUgsKgwqAg4pSc4pSA4pSAIGFwcAri
lILCoMKgIOKUgsKgwqAg4pSc4pSA4pSAIF9faW5pdF9fLnB5CuKUgsKgwqAg
4pSCwqDCoCDilJzilIDilIAgbWFpbi5weQrilILCoMKgIOKUlOKUgOKUgCB1
d3NnaS5pbmkK4pSU4pSA4pSAIERvY2tlcmZpbGUKYGBgCgouLi5pbnN0ZWFk
IG9mOgoKYGBgCi4K4pSc4pSA4pSAIGFwcArilIIgICDilJzilIDilIAgbWFp
bi5weQrilJTilIDilIAgRG9ja2VyZmlsZQpgYGAKCi4uLmFmdGVyIHRoYXQs
IGV2ZXJ5dGhpbmcgc2hvdWxkIHdvcmsgYXMgZXhwZWN0ZWQuIEFsbCB0aGUg
b3RoZXIgaW5zdHJ1Y3Rpb25zIHdvdWxkIGFwcGx5IG5vcm1hbGx5LgoKIyMj
IFdvcmtpbmcgd2l0aCBzdWJtb2R1bGVzCgoqIEFmdGVyIGFkZGluZyBhbGwg
eW91ciBtb2R1bGVzIHlvdSBjb3VsZCBlbmQgdXAgd2l0aCBhIGZpbGUgc3Ry
dWN0dXJlIHNpbWlsYXIgdG8gKHRha2VuIGZyb20gdGhlIGV4YW1wbGUgcHJv
amVjdCk6CgpgYGAKLgrilJzilIDilIAgYXBwCuKUgsKgwqAg4pSc4pSA4pSA
IGFwcArilILCoMKgIOKUgsKgwqAg4pSc4pSA4pSAIGFwaQrilILCoMKgIOKU
gsKgwqAg4pSCwqDCoCDilJzilIDilIAgYXBpLnB5CuKUgsKgwqAg4pSCwqDC
oCDilILCoMKgIOKUnOKUgOKUgCBlbmRwb2ludHMK4pSCwqDCoCDilILCoMKg
IOKUgsKgwqAg4pSCwqDCoCDilJzilIDilIAgX19pbml0X18ucHkK4pSCwqDC
oCDilILCoMKgIOKUgsKgwqAg4pSCwqDCoCDilJTilIDilIAgdXNlci5weQri
lILCoMKgIOKUgsKgwqAg4pSCwqDCoCDilJzilIDilIAgX19pbml0X18ucHkK
4pSCwqDCoCDilILCoMKgIOKUgsKgwqAg4pSU4pSA4pSAIHV0aWxzLnB5CuKU
gsKgwqAg4pSCwqDCoCDilJzilIDilIAgY29yZQrilILCoMKgIOKUgsKgwqAg
4pSCwqDCoCDilJzilIDilIAgYXBwX3NldHVwLnB5CuKUgsKgwqAg4pSCwqDC
oCDilILCoMKgIOKUnOKUgOKUgCBkYXRhYmFzZS5weQrilILCoMKgIOKUgsKg
wqAg4pSCwqDCoCDilJTilIDilIAgX19pbml0X18ucHkK4pSCwqDCoCDilILC
oMKgIOKUnOKUgOKUgCBfX2luaXRfXy5weQrilILCoMKgIOKUgsKgwqAg4pSc
4pSA4pSAIG1haW4ucHkK4pSCwqDCoCDilILCoMKgIOKUlOKUgOKUgCBtb2Rl
bHMK4pSCwqDCoCDilILCoMKgICAgICDilJzilIDilIAgX19pbml0X18ucHkK
4pSCwqDCoCDilILCoMKgICAgICDilJTilIDilIAgdXNlci5weQrilILCoMKg
IOKUlOKUgOKUgCB1d3NnaS5pbmkK4pSU4pSA4pSAIERvY2tlcmZpbGUKYGBg
CgoqIE1ha2Ugc3VyZSB5b3UgZm9sbG93IFt0aGUgb2ZmaWNpYWwgZG9jcyB3
aGlsZSBpbXBvcnRpbmcgeW91ciBtb2R1bGVzXShodHRwczovL2RvY3MucHl0
aG9uLm9yZy8zL3R1dG9yaWFsL21vZHVsZXMuaHRtbCNpbnRyYS1wYWNrYWdl
LXJlZmVyZW5jZXMpOgoKKiBGb3IgZXhhbXBsZSwgaWYgeW91IGFyZSBpbiBg
YXBwL2FwcC9tYWluLnB5YCBhbmQgd2FudCB0byBpbXBvcnQgdGhlIG1vZHVs
ZSBpbiBgYXBwL2FwcC9jb3JlL2FwcF9zZXR1cC5weWAgeW91IHdvdWxkIHdy
aXRlIGl0IGxpa2U6CgpgYGBweXRob24KZnJvbSAuY29yZSBpbXBvcnQgYXBw
X3NldHVwCmBgYAoKb3IKCmBgYHB5dGhvbgpmcm9tIGFwcC5jb3JlIGltcG9y
dCBhcHBfc2V0dXAKYGBgCgoqIEFuZCBpZiB5b3UgYXJlIGluIGBhcHAvYXBw
L2FwaS9lbmRwb2ludHMvdXNlci5weWAgYW5kIHlvdSB3YW50IHRvIGltcG9y
dCB0aGUgYHVzZXJzYCBvYmplY3QgZnJvbSBgYXBwL2FwcC9jb3JlL2RhdGFi
YXNlLnB5YCB5b3Ugd291bGQgd3JpdGUgaXQgbGlrZToKCmBgYHB5dGhvbgpm
cm9tIC4uLmNvcmUuZGF0YWJhc2UgaW1wb3J0IHVzZXJzCmBgYAoKb3IKCmBg
YHB5dGhvbgpmcm9tIGFwcC5jb3JlLmRhdGFiYXNlIGltcG9ydCB1c2Vycwpg
YGAKCiMjIEFkdmFuY2VkIGluc3RydWN0aW9ucwoKWW91IGNhbiBjdXN0b21p
emUgc2V2ZXJhbCB0aGluZ3MgdXNpbmcgZW52aXJvbm1lbnQgdmFyaWFibGVz
LgoKIyMjIFNlcnZlIGBpbmRleC5odG1sYCBkaXJlY3RseQoKKipOb3RpY2Uq
KjogdGhpcyB0ZWNobmlxdWUgaXMgZGVwcmVjYXRlZCwgYXMgaXQgY2FuIGNy
ZWF0ZSBzZXZlcmFsIGlzc3VlcyB3aXRoIG1vZGVybiBmcm9udGVuZCBmcmFt
ZXdvcmtzLiBGb3IgdGhlIGRldGFpbHMgYW5kIGJldHRlciBhbHRlcm5hdGl2
ZXMsIHJlYWQgdGhlIHNlY3Rpb24gYWJvdmUuCgpTZXR0aW5nIHRoZSBlbnZp
cm9ubWVudCB2YXJpYWJsZSBgU1RBVElDX0lOREVYYCB0byBiZSBgMWAgeW91
IGNhbiBjb25maWd1cmUgTmdpbnggdG8gc2VydmUgdGhlIGZpbGUgaW4gdGhl
IFVSTCBgL3N0YXRpYy9pbmRleC5odG1sYCB3aGVuIHJlcXVlc3RlZCBmb3Ig
YC9gLgoKVGhhdCB3b3VsZCBpbXByb3ZlIHNwZWVkIGFzIGl0IHdvdWxkIG5v
dCBpbnZvbHZlIHVXU0dJIG5vciBQeXRob24uIE5naW54IHdvdWxkIHNlcnZl
IHRoZSBmaWxlIGRpcmVjdGx5LiBUbyBsZWFybiBtb3JlIGZvbGxvdyB0aGUg
c2VjdGlvbiBhYm92ZSAiKipRdWlja1N0YXJ0IGZvciBTUEFzKioiLgoKRm9y
IGV4YW1wbGUsIHRvIGVuYWJsZSBpdCwgeW91IGNvdWxkIGFkZCB0aGlzIHRv
IHlvdXIgYERvY2tlcmZpbGVgOgoKYGBgRG9ja2VyZmlsZQpFTlYgU1RBVElD
X0lOREVYIDEKYGBgCgojIyMgQ3VzdG9tIHVXU0dJIHByb2Nlc3MgbnVtYmVy
CgpCeSBkZWZhdWx0LCB0aGUgaW1hZ2Ugc3RhcnRzIHdpdGggMiB1V1NHSSBw
cm9jZXNzZXMgcnVubmluZy4gV2hlbiB0aGUgc2VydmVyIGlzIGV4cGVyaWVu
Y2luZyBhIGhpZ2ggbG9hZCwgaXQgY3JlYXRlcyB1cCB0byAxNiB1V1NHSSBw
cm9jZXNzZXMgdG8gaGFuZGxlIGl0IG9uIGRlbWFuZC4KCklmIHlvdSBuZWVk
IHRvIGNvbmZpZ3VyZSB0aGVzZSBudW1iZXJzIHlvdSBjYW4gdXNlIGVudmly
b25tZW50IHZhcmlhYmxlcy4KClRoZSBzdGFydGluZyBudW1iZXIgb2YgdVdT
R0kgcHJvY2Vzc2VzIGlzIGNvbnRyb2xsZWQgYnkgdGhlIHZhcmlhYmxlIGBV
V1NHSV9DSEVBUEVSYCwgYnkgZGVmYXVsdCBzZXQgdG8gYDJgLgoKVGhlIG1h
eGltdW0gbnVtYmVyIG9mIHVXU0dJIHByb2Nlc3NlcyBpcyBjb250cm9sbGVk
IGJ5IHRoZSB2YXJpYWJsZSBgVVdTR0lfUFJPQ0VTU0VTYCwgYnkgZGVmYXVs
dCBzZXQgdG8gYDE2YC4KCkhhdmUgaW4gbWluZCB0aGF0IGBVV1NHSV9DSEVB
UEVSYCBtdXN0IGJlIGxvd2VyIHRoYW4gYFVXU0dJX1BST0NFU1NFU2AuCgpT
bywgaWYsIGZvciBleGFtcGxlLCB5b3UgbmVlZCB0byBzdGFydCB3aXRoIDQg
cHJvY2Vzc2VzIGFuZCBncm93IHRvIGEgbWF4aW11bSBvZiA2NCwgeW91ciBg
RG9ja2VyZmlsZWAgY291bGQgbG9vayBsaWtlOgoKYGBgRG9ja2VyZmlsZQpG
Uk9NIHRpYW5nb2xvL3V3c2dpLW5naW54LWZsYXNrOnB5dGhvbjMuNwoKRU5W
IFVXU0dJX0NIRUFQRVIgNApFTlYgVVdTR0lfUFJPQ0VTU0VTIDY0CgpDT1BZ
IC4vYXBwIC9hcHAKYGBgCgojIyMgTWF4IHVwbG9hZCBmaWxlIHNpemUKCllv
dSBjYW4gc2V0IGEgY3VzdG9tIG1heGltdW0gdXBsb2FkIGZpbGUgc2l6ZSB1
c2luZyBhbiBlbnZpcm9ubWVudCB2YXJpYWJsZSBgTkdJTlhfTUFYX1VQTE9B
RGAsIGJ5IGRlZmF1bHQgaXQgaGFzIGEgdmFsdWUgb2YgYDBgLCB0aGF0IGFs
bG93cyB1bmxpbWl0ZWQgdXBsb2FkIGZpbGUgc2l6ZXMuIFRoaXMgZGlmZmVy
cyBmcm9tIE5naW54J3MgZGVmYXVsdCB2YWx1ZSBvZiAxIE1CLiBJdCdzIGNv
bmZpZ3VyZWQgdGhpcyB3YXkgYmVjYXVzZSB0aGF0J3MgdGhlIHNpbXBsZXN0
IGV4cGVyaWVuY2UgYW4gaW5leHBlcmllbmNlZCBkZXZlbG9wZXIgaW4gTmdp
bnggd291bGQgZXhwZWN0LgoKRm9yIGV4YW1wbGUsIHRvIGhhdmUgYSBtYXhp
bXVtIHVwbG9hZCBmaWxlIHNpemUgb2YgMSBNQiAoTmdpbngncyBkZWZhdWx0
KSBhZGQgYSBsaW5lIGluIHlvdXIgYERvY2tlcmZpbGVgIHdpdGg6CgpgYGBE
b2NrZXJmaWxlCkVOViBOR0lOWF9NQVhfVVBMT0FEIDFtCmBgYAoKIyMjIEN1
c3RvbSBsaXN0ZW4gcG9ydAoKQnkgZGVmYXVsdCwgdGhlIGNvbnRhaW5lciBt
YWRlIGZyb20gdGhpcyBpbWFnZSB3aWxsIGxpc3RlbiBvbiBwb3J0IDgwLgoK
VG8gY2hhbmdlIHRoaXMgYmVoYXZpb3IsIHNldCB0aGUgYExJU1RFTl9QT1JU
YCBlbnZpcm9ubWVudCB2YXJpYWJsZS4gWW91IG1pZ2h0IGFsc28gbmVlZCB0
byBjcmVhdGUgdGhlIHJlc3BlY3RpdmUgYEVYUE9TRWAgRG9ja2VyIGluc3Ry
dWN0aW9uLgoKWW91IGNhbiBkbyB0aGF0IGluIHlvdXIgYERvY2tlcmZpbGVg
LCBpdCB3b3VsZCBsb29rIHNvbWV0aGluZyBsaWtlOgoKYGBgRG9ja2VyZmls
ZQpGUk9NIHRpYW5nb2xvL3V3c2dpLW5naW54LWZsYXNrOnB5dGhvbjMuNwoK
RU5WIExJU1RFTl9QT1JUIDgwODAKCkVYUE9TRSA4MDgwCgpDT1BZIC4vYXBw
IC9hcHAKYGBgCgojIyMgQ3VzdG9tIGB1d3NnaS5pbmlgIGNvbmZpZ3VyYXRp
b25zCgpUaGVyZSBpcyBhIGRlZmF1bHQgZmlsZSBpbiBgL2FwcC91d3NnaS5p
bmlgIHdpdGggYXBwIHNwZWNpZmljIGNvbmZpZ3VyYXRpb25zIChvbiB0b3Ag
b2YgdGhlIGdsb2JhbCBgdXdzZ2lgIGNvbmZpZ3VyYXRpb25zKS4KCkl0IG9u
bHkgY29udGFpbnM6CgpgYGBpbmkKW3V3c2dpXQptb2R1bGUgPSBtYWluCmNh
bGxhYmxlID0gYXBwCmBgYAoKKiBgbW9kdWxlID0gbWFpbmAgcmVmZXJzIHRv
IHRoZSBmaWxlIGBtYWluLnB5YC4KKiBgY2FsbGFibGUgPSBhcHBgIHJlZmVy
cyB0byB0aGUgYEZsYXNrYCAiYXBwbGljYXRpb24iLCBpbiB0aGUgdmFyaWFi
bGUgYGFwcGAuCgotLS0KCllvdSBjYW4gY3VzdG9taXplIGB1d3NnaWAgYnkg
cmVwbGFjaW5nIHRoYXQgZmlsZSB3aXRoIHlvdXIgb3duLCBpbmNsdWRpbmcg
YWxsIHlvdXIgY29uZmlndXJhdGlvbnMuCgpGb3IgZXhhbXBsZSwgdG8gZXh0
ZW5kIHRoZSBkZWZhdWx0IG9uZSBhYm92ZSBhbmQgZW5hYmxlIHRocmVhZHMs
IHlvdSBjb3VsZCBoYXZlIGEgZmlsZToKCmBgYGluaQpbdXdzZ2ldCm1vZHVs
ZSA9IG1haW4KY2FsbGFibGUgPSBhcHAKZW5hYmxlLXRocmVhZHMgPSB0cnVl
CmBgYAoKIyMjIEN1c3RvbSBgdXdzZ2kuaW5pYCBmaWxlIGxvY2F0aW9uCgpZ
b3UgY2FuIG92ZXJyaWRlIHdoZXJlIHRoZSBpbWFnZSBzaG91bGQgbG9vayBm
b3IgdGhlIGFwcCBgdXdzZ2kuaW5pYCBmaWxlIHVzaW5nIHRoZSBlbnZpcm5v
bWVudCB2YXJpYWJsZSBgVVdTR0lfSU5JYC4KCldpdGggdGhhdCB5b3UgY291
bGQgY2hhbmdlIHRoZSBkZWZhdWx0IGRpcmVjdG9yeSBmb3IgeW91ciBhcHAg
ZnJvbSBgL2FwcGAgdG8gc29tZXRoaW5nIGVsc2UsIGxpa2UgYC9hcHBsaWNh
dGlvbmAuCgpGb3IgZXhhbXBsZSwgdG8gbWFrZSB0aGUgaW1hZ2UgdXNlIHRo
ZSBmaWxlIGluIGAvYXBwbGljYXRpb24vdXdzZ2kuaW5pYCwgeW91IGNvdWxk
IGFkZCB0aGlzIHRvIHlvdXIgYERvY2tlcmZpbGVgOgoKYGBgRG9ja2VyZmls
ZQpFTlYgVVdTR0lfSU5JIC9hcHBsaWNhdGlvbi91d3NnaS5pbmkKCkNPUFkg
Li9hcHBsaWNhdGlvbiAvYXBwbGljYXRpb24KV09SS0RJUiAvYXBwbGljYXRp
b24KYGBgCgoqKk5vdGUqKjogdGhlIGBXT1JLRElSYCBpcyBpbXBvcnRhbnQs
IG90aGVyd2hpc2UgdVdTR0kgd2lsbCB0cnkgdG8gcnVuIHRoZSBhcHAgaW4g
YC9hcHBgLgoKKipOb3RlKio6IHlvdSB3b3VsZCBhbHNvIGhhdmUgdG8gY29u
ZmlndXJlIHRoZSBgc3RhdGljYCBmaWxlcyBwYXRoLCByZWFkIGJlbG93LgoK
IyMjIEN1c3RvbSBgLi9zdGF0aWMvYCBwYXRoCgpZb3UgY2FuIG1ha2UgTmdp
bnggdXNlIGEgY3VzdG9tIGRpcmVjdG9yeSBwYXRoIHdpdGggdGhlIGZpbGVz
IHRvIHNlcnZlIGRpcmVjdGx5ICh3aXRob3V0IGhhdmluZyB1V1NHSSBpbnZv
bHZlZCkgd2l0aCB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGUgYFNUQVRJQ19Q
QVRIYC4KCkZvciBleGFtcGxlLCB0byBtYWtlIE5naW54IHNlcnZlIHRoZSBz
dGF0aWMgY29udGVudCB1c2luZyB0aGUgZmlsZXMgaW4gYC9hcHAvY3VzdG9t
X3N0YXRpYy9gIHlvdSBjb3VsZCBhZGQgdGhpcyB0byB5b3VyIGBEb2NrZXJm
aWxlYDoKCmBgYERvY2tlcmZpbGUKRU5WIFNUQVRJQ19QQVRIIC9hcHAvY3Vz
dG9tX3N0YXRpYwpgYGAKClRoZW4sIHdoZW4gdGhlIGJyb3dzZXIgYXNrZWQg
Zm9yIGEgZmlsZSBpbiwgZm9yIGV4YW1wbGUsIGh0dHA6Ly9leGFtcGxlLmNv
bS9zdGF0aWMvaW5kZXguaHRtbCwgTmdpbnggd291bGQgYW5zd2VyIGRpcmVj
dGx5IHVzaW5nIGEgZmlsZSBpbiB0aGUgcGF0aCBgL2FwcC9jdXN0b21fc3Rh
dGljL2luZGV4Lmh0bWxgLgoKKipOb3RlKio6IHlvdSB3b3VsZCBhbHNvIGhh
dmUgdG8gY29uZmlndXJlIEZsYXNrIHRvIHVzZSB0aGF0IGFzIGl0cyBgc3Rh
dGljYCBkaXJlY3RvcnkuCgotLS0KCkFzIGFub3RoZXIgZXhhbXBsZSwgaWYg
eW91IG5lZWRlZCB0byBwdXQgeW91ciBhcHBsaWNhdGlvbiBjb2RlIGluIGEg
ZGlmZmVyZW50IGRpcmVjdG9yeSwgeW91IGNvdWxkIGNvbmZpZ3VyZSBOZ2lu
eCB0byBzZXJ2ZSB0aG9zZSBzdGF0aWMgZmlsZXMgZnJvbSB0aGF0IGRpZmZl
cmVudCBkaXJlY3RvcnkuCgpJZiB5b3UgbmVlZGVkIHRvIGhhdmUgeW91ciBz
dGF0aWMgZmlsZXMgaW4gYC9hcHBsaWNhdGlvbi9zdGF0aWMvYCB5b3UgY291
bGQgYWRkIHRoaXMgdG8geW91ciBgRG9ja2VyZmlsZWA6CgpgYGBEb2NrZXJm
aWxlCkVOViBTVEFUSUNfUEFUSCAvYXBwbGljYXRpb24vc3RhdGljCmBgYAoK
IyMjIEN1c3RvbSBgL3N0YXRpY2AgVVJMCgpZb3UgY2FuIGFsc28gbWFrZSBO
Z2lueCBzZXJ2ZSB0aGUgc3RhdGljIGZpbGVzIGluIGEgZGlmZmVyZW50IFVS
TCwgZm9yIHRoYXQsIHlvdSBjYW4gdXNlIHRoZSBlbnZpcm9ubWVudCB2YXJp
YWJsZSBgU1RBVElDX1VSTGAuCgpGb3IgZXhhbXBsZSwgaWYgeW91IHdhbnRl
ZCB0byBjaGFuZ2UgdGhlIFVSTCBgL3N0YXRpY2AgdG8gYC9jb250ZW50YCB5
b3UgY291bGQgYWRkIHRoaXMgdG8geW91ciBgRG9ja2VyZmlsZWA6CgpgYGBE
b2NrZXJmaWxlCkVOViBTVEFUSUNfVVJMIC9jb250ZW50CmBgYAoKVGhlbiwg
d2hlbiB0aGUgYnJvd3NlciBhc2tlZCBmb3IgYSBmaWxlIGluLCBmb3IgZXhh
bXBsZSwgaHR0cDovL2V4YW1wbGUuY29tL2NvbnRlbnQvaW5kZXguaHRtbCwg
Tmdpbnggd291bGQgYW5zd2VyIGRpcmVjdGx5IHVzaW5nIGEgZmlsZSBpbiB0
aGUgcGF0aCBgL2FwcC9zdGF0aWMvaW5kZXguaHRtbGAuCgojIyMgQ3VzdG9t
IGAvYXBwL3ByZXN0YXJ0LnNoYAoKSWYgeW91IG5lZWQgdG8gcnVuIGFueXRo
aW5nIGJlZm9yZSBzdGFydGluZyB0aGUgYXBwLCB5b3UgY2FuIGFkZCBhIGZp
bGUgYHByZXN0YXJ0LnNoYCB0byB0aGUgZGlyZWN0b3J5IGAvYXBwYC4gVGhl
IGltYWdlIHdpbGwgYXV0b21hdGljYWxseSBkZXRlY3QgYW5kIHJ1biBpdCBi
ZWZvcmUgc3RhcnRpbmcgZXZlcnl0aGluZy4KCkZvciBleGFtcGxlLCBpZiB5
b3Ugd2FudCB0byBhZGQgQWxlbWJpYyBTUUwgbWlncmF0aW9ucyAod2l0aCBT
UUxBbGNoZW15KSwgeW91IGNvdWxkIGNyZWF0ZSBhIGAuL2FwcC9wcmVzdGFy
dC5zaGAgZmlsZSBpbiB5b3VyIGNvZGUgZGlyZWN0b3J5ICh0aGF0IHdpbGwg
YmUgY29waWVkIGJ5IHlvdXIgYERvY2tlcmZpbGVgKSB3aXRoOgoKYGBgYmFz
aAojISAvdXNyL2Jpbi9lbnYgYmFzaAoKIyBMZXQgdGhlIERCIHN0YXJ0CnNs
ZWVwIDEwOwojIFJ1biBtaWdyYXRpb25zCmFsZW1iaWMgdXBncmFkZSBoZWFk
CmBgYAoKYW5kIGl0IHdvdWxkIHdhaXQgMTAgc2Vjb25kcyB0byBnaXZlIHRo
ZSBkYXRhYmFzZSBzb21lIHRpbWUgdG8gc3RhcnQgYW5kIHRoZW4gcnVuIHRo
YXQgYGFsZW1iaWNgIGNvbW1hbmQuCgpJZiB5b3UgbmVlZCB0byBydW4gYSBQ
eXRob24gc2NyaXB0IGJlZm9yZSBzdGFydGluZyB0aGUgYXBwLCB5b3UgY291
bGQgbWFrZSB0aGUgYC9hcHAvcHJlc3RhcnQuc2hgIGZpbGUgcnVuIHlvdXIg
UHl0aG9uIHNjcmlwdCwgd2l0aCBzb21ldGhpbmcgbGlrZToKCmBgYGJhc2gK
IyEgL3Vzci9iaW4vZW52IGJhc2gKCiMgUnVuIGN1c3RvbSBQeXRob24gc2Ny
aXB0IGJlZm9yZSBzdGFydGluZwpweXRob24gL2FwcC9teV9jdXN0b21fcHJl
c3RhcnRfc2NyaXB0LnB5CmBgYAoKKipOb3RlKio6IFRoZSBpbWFnZSB1c2Vz
IGBzb3VyY2VgIHRvIHJ1biB0aGUgc2NyaXB0LCBzbyBmb3IgZXhhbXBsZSwg
ZW52aXJvbm1lbnQgdmFyaWFibGVzIHdvdWxkIHBlcnNpc3QuIElmIHlvdSBk
b24ndCB1bmRlcnN0YW5kIHRoZSBwcmV2aW91cyBzZW50ZW5jZSwgeW91IHBy
b2JhYmx5IGRvbid0IG5lZWQgaXQuCgojIyMgQ3VzdG9tIE5naW54IHByb2Nl
c3NlcyBudW1iZXIKCkJ5IGRlZmF1bHQsIE5naW54IHdpbGwgc3RhcnQgb25l
ICJ3b3JrZXIgcHJvY2VzcyIuCgpJZiB5b3Ugd2FudCB0byBzZXQgYSBkaWZm
ZXJlbnQgbnVtYmVyIG9mIE5naW54IHdvcmtlciBwcm9jZXNzZXMgeW91IGNh
biB1c2UgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlIGBOR0lOWF9XT1JLRVJf
UFJPQ0VTU0VTYC4KCllvdSBjYW4gdXNlIGEgc3BlY2lmaWMgc2luZ2xlIG51
bWJlciwgZS5nLjoKCmBgYERvY2tlcmZpbGUKRU5WIE5HSU5YX1dPUktFUl9Q
Uk9DRVNTRVMgMgpgYGAKCm9yIHlvdSBjYW4gc2V0IGl0IHRvIHRoZSBrZXl3
b3JkIGBhdXRvYCBhbmQgaXQgd2lsbCB0cnkgdG8gYXV0by1kZXRlY3QgdGhl
IG51bWJlciBvZiBDUFVzIGF2YWlsYWJsZSBhbmQgdXNlIHRoYXQgZm9yIHRo
ZSBudW1iZXIgb2Ygd29ya2Vycy4KCkZvciBleGFtcGxlLCB1c2luZyBgYXV0
b2AsIHlvdXIgRG9ja2VyZmlsZSBjb3VsZCBsb29rIGxpa2U6CgpgYGBEb2Nr
ZXJmaWxlCkZST00gdGlhbmdvbG8vdXdzZ2ktbmdpbngtZmxhc2s6cHl0aG9u
My43CgpFTlYgTkdJTlhfV09SS0VSX1BST0NFU1NFUyBhdXRvCgpDT1BZIC4v
YXBwIC9hcHAKYGBgCgojIyMgQ3VzdG9tIE5naW54IG1heGltdW0gY29ubmVj
dGlvbnMgcGVyIHdvcmtlcgoKQnkgZGVmYXVsdCwgTmdpbnggd2lsbCBzdGFy
dCB3aXRoIGEgbWF4aW11bSBsaW1pdCBvZiAxMDI0IGNvbm5lY3Rpb25zIHBl
ciB3b3JrZXIuCgpJZiB5b3Ugd2FudCB0byBzZXQgYSBkaWZmZXJlbnQgbnVt
YmVyIHlvdSBjYW4gdXNlIHRoZSBlbnZpcm9ubWVudCB2YXJpYWJsZSBgTkdJ
TlhfV09SS0VSX0NPTk5FQ1RJT05TYCwgZS5nOgoKYGBgRG9ja2VyZmlsZQpF
TlYgTkdJTlhfV09SS0VSX0NPTk5FQ1RJT05TIDIwNDgKYGBgCgpJdCBjYW5u
b3QgZXhjZWVkIHRoZSBjdXJyZW50IGxpbWl0IG9uIHRoZSBtYXhpbXVtIG51
bWJlciBvZiBvcGVuIGZpbGVzLiBTZWUgaG93IHRvIGNvbmZpZ3VyZSBpdCBp
biB0aGUgbmV4dCBzZWN0aW9uLgoKIyMjIEN1c3RvbSBOZ2lueCBtYXhpbXVt
IG9wZW4gZmlsZXMKClRoZSBudW1iZXIgY29ubmVjdGlvbnMgcGVyIE5naW54
IHdvcmtlciBjYW5ub3QgZXhjZWVkIHRoZSBsaW1pdCBvbiB0aGUgbWF4aW11
bSBudW1iZXIgb2Ygb3BlbiBmaWxlcy4KCllvdSBjYW4gY2hhbmdlIHRoZSBs
aW1pdCBvZiBvcGVuIGZpbGVzIHdpdGggdGhlIGVudmlyb25tZW50IHZhcmlh
YmxlIGBOR0lOWF9XT1JLRVJfT1BFTl9GSUxFU2AsIGUuZy46CgpgYGBEb2Nr
ZXJmaWxlCkVOViBOR0lOWF9XT1JLRVJfT1BFTl9GSUxFUyAyMDQ4CmBgYAoK
IyMjIEN1c3RvbWl6aW5nIE5naW54IGFkZGl0aW9uYWwgY29uZmlndXJhdGlv
bnMKCklmIHlvdSBuZWVkIHRvIGNvbmZpZ3VyZSBOZ2lueCBmdXJ0aGVyLCB5
b3UgY2FuIGFkZCBgKi5jb25mYCBmaWxlcyB0byBgL2V0Yy9uZ2lueC9jb25m
LmQvYCBpbiB5b3VyIGBEb2NrZXJmaWxlYC4KCkp1c3QgaGF2ZSBpbiBtaW5k
IHRoYXQgdGhlIGRlZmF1bHQgY29uZmlndXJhdGlvbnMgYXJlIGNyZWF0ZWQg
ZHVyaW5nIHN0YXJ0dXAgaW4gYSBmaWxlIGF0IGAvZXRjL25naW54L2NvbmYu
ZC9uZ2lueC5jb25mYCBhbmQgYC9ldGMvbmdpbngvY29uZi5kL3VwbG9hZC5j
b25mYC4gU28geW91IHNob3VsZG4ndCBvdmVyd3JpdGUgdGhlbS4gWW91IHNo
b3VsZCBuYW1lIHlvdXIgYCouY29uZmAgZmlsZSB3aXRoIHNvbWV0aGluZyBk
aWZmZXJlbnQgdGhhbiBgbmdpbnguY29uZmAgb3IgYHVwbG9hZC5jb25mYCwg
Zm9yIGV4YW1wbGU6IGBjdXN0b20uY29uZmAuCgoqKk5vdGUqKjogaWYgeW91
IGFyZSBjdXN0b21pemluZyBOZ2lueCwgbWF5YmUgY29weWluZyBjb25maWd1
cmF0aW9ucyBmcm9tIGEgYmxvZyBvciBhIFN0YWNrT3ZlcmZsb3cgYW5zd2Vy
LCBoYXZlIGluIG1pbmQgdGhhdCB5b3UgcHJvYmFibHkgbmVlZCB0byB1c2Ug
dGhlIFtjb25maWd1cmF0aW9ucyBzcGVjaWZpYyB0byB1V1NHSV0oaHR0cDov
L25naW54Lm9yZy9lbi9kb2NzL2h0dHAvbmd4X2h0dHBfdXdzZ2lfbW9kdWxl
Lmh0bWwpLCBpbnN0ZWFkIG9mIHRob3NlIGZvciBvdGhlciBtb2R1bGVzLCBs
aWtlIGZvciBleGFtcGxlLCBgbmd4X2h0dHBfZmFzdGNnaV9tb2R1bGVgLgoK
IyMjIE92ZXJyaWRpbmcgTmdpbnggY29uZmlndXJhdGlvbiBjb21wbGV0ZWx5
CgpJZiB5b3UgbmVlZCB0byBjb25maWd1cmUgTmdpbnggZXZlbiBmdXJ0aGVy
LCBjb21wbGV0ZWx5IG92ZXJyaWRpbmcgdGhlIGRlZmF1bHRzLCB5b3UgY2Fu
IGFkZCBhIGN1c3RvbSBOZ2lueCBjb25maWd1cmF0aW9uIHRvIGAvYXBwL25n
aW54LmNvbmZgLgoKSXQgd2lsbCBiZSBjb3BpZWQgdG8gYC9ldGMvbmdpbngv
bmdpbnguY29uZmAgYW5kIHVzZWQgaW5zdGVhZCBvZiB0aGUgZ2VuZXJhdGVk
IG9uZS4KCkhhdmUgaW4gbWluZCB0aGF0LCBpbiB0aGF0IGNhc2UsIHRoaXMg
aW1hZ2Ugd29uJ3QgZ2VuZXJhdGUgYW55IG9mIHRoZSBOZ2lueCBjb25maWd1
cmF0aW9ucywgaXQgd2lsbCBvbmx5IGNvcHkgYW5kIHVzZSB5b3VyIGNvbmZp
Z3VyYXRpb24gZmlsZS4KClRoYXQgbWVhbnMgdGhhdCBhbGwgdGhlIGVudmly
b25tZW50IHZhcmlhYmxlcyBkZXNjcmliZWQgYWJvdmUgdGhhdCBhcmUgc3Bl
Y2lmaWMgdG8gTmdpbnggd29uJ3QgYmUgdXNlZC4KCkl0IGFsc28gbWVhbnMg
dGhhdCBpdCB3b24ndCB1c2UgYWRkaXRpb25hbCBjb25maWd1cmF0aW9ucyBm
cm9tIGZpbGVzIGluIGAvZXRjL25naW54L2NvbmYuZC8qLmNvbmZgLCB1bmxl
c3MgeW91IGV4cGxpY2l0bHkgaGF2ZSBhIHNlY3Rpb24gaW4geW91ciBjdXN0
b20gZmlsZSBgL2FwcC9uZ2lueC5jb25mYCB3aXRoOgoKYGBgY29uZgppbmNs
dWRlIC9ldGMvbmdpbngvY29uZi5kLyouY29uZjsKYGBgCgpJZiB5b3Ugd2Fu
dCB0byBhZGQgYSBjdXN0b20gYC9hcHAvbmdpbnguY29uZmAgZmlsZSBidXQg
ZG9uJ3Qga25vdyB3aGVyZSB0byBzdGFydCBmcm9tLCB5b3UgY2FuIHVzZSBb
dGhlIGBuZ2lueC5jb25mYCB1c2VkIGZvciB0aGUgdGVzdHNdKGh0dHBzOi8v
Z2l0aHViLmNvbS90aWFuZ29sby91d3NnaS1uZ2lueC1mbGFzay1kb2NrZXIv
YmxvYi9tYXN0ZXIvdGVzdHMvdGVzdF8wMl9hcHAvY3VzdG9tX25naW54X2Fw
cC9hcHAvbmdpbnguY29uZikgYW5kIGN1c3RvbWl6ZSBpdCBvciBtb2RpZnkg
aXQgZnVydGhlci4KCiMjIFRlY2huaWNhbCBkZXRhaWxzCgpUaGUgY29tYmlu
YXRpb24gb2YgdVdTR0kgd2l0aCBOZ2lueCBpcyBhIFtjb21tb24gd2F5IHRv
IGRlcGxveSBQeXRob24gRmxhc2sgd2ViIGFwcGxpY2F0aW9uc10oaHR0cDov
L2ZsYXNrLnBvY29vLm9yZy9kb2NzLzEuMC9kZXBsb3lpbmcvdXdzZ2kvKS4K
ClJvdWdobHk6CgoqICoqTmdpbngqKiBpcyBhIHdlYiBzZXJ2ZXIsIGl0IHRh
a2VzIGNhcmUgb2YgdGhlIEhUVFAgY29ubmVjdGlvbnMgYW5kIGFsc28gY2Fu
IHNlcnZlIHN0YXRpYyBmaWxlcyBkaXJlY3RseSBhbmQgbW9yZSBlZmZpY2ll
bnRseS4KCiogKip1V1NHSSoqIGlzIGFuIGFwcGxpY2F0aW9uIHNlcnZlciwg
dGhhdCdzIHdoYXQgcnVucyB5b3VyIFB5dGhvbiBjb2RlIGFuZCBpdCB0YWxr
cyB3aXRoIE5naW54LgoKKiAqKllvdXIgUHl0aG9uIGNvZGUqKiBoYXMgdGhl
IGFjdHVhbCAqKkZsYXNrKiogd2ViIGFwcGxpY2F0aW9uLCBhbmQgaXMgcnVu
IGJ5IHVXU0dJLgoKVGhlIGltYWdlIFsqKnRpYW5nb2xvL3V3c2dpLW5naW54
KipdKGh0dHBzOi8vaHViLmRvY2tlci5jb20vci90aWFuZ29sby91d3NnaS1u
Z2lueC8pIHRha2VzIGFkdmFudGFnZSBvZiBhbHJlYWR5IGV4aXN0aW5nIHNs
aW0gYW5kIG9wdGltaXplZCBEb2NrZXIgaW1hZ2VzIChiYXNlZCBvbiBEZWJp
YW4gYXMgW3JlY29tbWVuZGVkIGJ5IERvY2tlcl0oaHR0cHM6Ly9kb2NzLmRv
Y2tlci5jb20vZW5naW5lL3VzZXJndWlkZS9lbmctaW1hZ2UvZG9ja2VyZmls
ZV9iZXN0LXByYWN0aWNlcy8pKSBhbmQgaW1wbGVtZW50cyBzZXZlcmFsIG9m
IERvY2tlcidzIGJlc3QgcHJhY3RpY2VzLgoKSXQgdXNlcyB0aGUgb2ZmaWNp
YWwgUHl0aG9uIERvY2tlciBpbWFnZSwgaW5zdGFsbHMgdVdTR0kgYW5kIG9u
IHRvcCBvZiB0aGF0ICh3aXRoIHRoZSBsZWFzdCBhbW91bnQgb2YgbW9kaWZp
Y2F0aW9ucykgYWRkcyB0aGUgb2ZmaWNpYWwgTmdpbnggaW1hZ2UuCgpBbmQg
aXQgY29udHJvbHMgYWxsIHRoZXNlIHByb2Nlc3NlcyB3aXRoIFN1cGVydmlz
b3JkLgoKVGhlIGltYWdlIChhbmQgdGFncykgY3JlYXRlZCBieSB0aGlzIHJl
cG8gaXMgYmFzZWQgb24gdGhlIGltYWdlIFsqKnRpYW5nb2xvL3V3c2dpLW5n
aW54KipdKGh0dHBzOi8vaHViLmRvY2tlci5jb20vci90aWFuZ29sby91d3Nn
aS1uZ2lueC8pLiBUaGlzIGltYWdlIGFkZHMgRmxhc2sgYW5kIHNlbnNpYmxl
IGRlZmF1bHRzIG9uIHRvcCBvZiBpdC4KCklmIHlvdSBmb2xsb3cgdGhlIGlu
c3RydWN0aW9ucyBhbmQga2VlcCB0aGUgcm9vdCBkaXJlY3RvcnkgYC9hcHBg
IGluIHlvdXIgY29udGFpbmVyLCB3aXRoIGEgZmlsZSBuYW1lZCBgbWFpbi5w
eWAgYW5kIGEgRmxhc2sgb2JqZWN0IG5hbWVkIGBhcHBgIGluIGl0LCBpdCBz
aG91bGQgImp1c3Qgd29yayIuCgpUaGVyZSdzIGFscmVhZHkgYSBgdXdzZ2ku
aW5pYCBmaWxlIGluIHRoZSBgL2FwcGAgZGlyZWN0b3J5IHdpdGggdGhlIHVX
U0dJIGNvbmZpZ3VyYXRpb25zIGZvciBpdCB0byAianVzdCB3b3JrIi4gQW5k
IGFsbCB0aGUgb3RoZXIgcmVxdWlyZWQgcGFyYW1ldGVycyBhcmUgaW4gYW5v
dGhlciBgdXdzZ2kuaW5pYCBmaWxlIGluIHRoZSBpbWFnZSwgaW5zaWRlIGAv
ZXRjL3V3c2dpL2AuCgpJZiB5b3UgbmVlZCB0byBjaGFuZ2UgdGhlIG1haW4g
ZmlsZSBuYW1lIG9yIHRoZSBtYWluIEZsYXNrIG9iamVjdCwgeW91IHdvdWxk
IGhhdmUgdG8gcHJvdmlkZSB5b3VyIG93biBgdXdzZ2kuaW5pYCBmaWxlLiBZ
b3UgbWF5IHVzZSB0aGUgb25lIGluIHRoaXMgcmVwbyBhcyBhIHRlbXBsYXRl
IHRvIHN0YXJ0IHdpdGggKGFuZCB5b3Ugb25seSB3b3VsZCBoYXZlIHRvIGNo
YW5nZSB0aGUgMiBjb3JyZXNwb25kaW5nIGxpbmVzKS4KCllvdSBjYW4gaGF2
ZSBhIGAvYXBwL3N0YXRpY2AgZGlyZWN0b3J5IGFuZCB0aG9zZSBmaWxlcyB3
aWxsIGJlIGVmZmljaWVudGx5IHNlcnZlZCBieSBOZ2lueCBkaXJlY3RseSAo
d2l0aG91dCBnb2luZyB0aHJvdWdoIHlvdXIgRmxhc2sgY29kZSBvciBldmVu
IHVXU0dJKSwgaXQncyBhbHJlYWR5IGNvbmZpZ3VyZWQgZm9yIHlvdS4gQnV0
IHlvdSBjYW4gY29uZmlndXJlIGl0IGZ1cnRoZXIgdXNpbmcgZW52aXJvbm1l
bnQgdmFyaWFibGVzIChyZWFkIGFib3ZlKS4KClN1cGVydmlzb3JkIHRha2Vz
IGNhcmUgb2YgcnVubmluZyB1V1NHSSB3aXRoIHRoZSBgdXdzZ2kuaW5pYCBm
aWxlIGluIGAvYXBwYCBmaWxlIChpbmNsdWRpbmcgYWxzbyB0aGUgZmlsZSBp
biBgL2V0Yy91d3NnaS91d3NnaS5pbmlgKSBhbmQgc3RhcnRpbmcgTmdpbngu
CgotLS0KClRoZXJlJ3MgdGhlIHJ1bGUgb2YgdGh1bWIgdGhhdCB5b3Ugc2hv
dWxkIGhhdmUgIm9uZSBwcm9jZXNzIHBlciBjb250YWluZXIiLgoKVGhhdCBo
ZWxwcywgZm9yIGV4YW1wbGUsIGlzb2xhdGluZyBhbiBhcHAgYW5kIGl0cyBk
YXRhYmFzZSBpbiBkaWZmZXJlbnQgY29udGFpbmVycy4KCkJ1dCBpZiB5b3Ug
d2FudCB0byBoYXZlIGEgIm1pY3JvLXNlcnZpY2VzIiBhcHByb2FjaCB5b3Ug
bWF5IHdhbnQgdG8gW2hhdmUgbW9yZSB0aGFuIG9uZSBwcm9jZXNzIGluIG9u
ZSBjb250YWluZXJdKGh0dHBzOi8vdmFsZGhhdXMuY28vd3JpdGluZ3MvZG9j
a2VyLW1pc2NvbmNlcHRpb25zLykgaWYgdGhleSBhcmUgYWxsIHJlbGF0ZWQg
dG8gdGhlIHNhbWUgInNlcnZpY2UiLCBhbmQgeW91IG1heSB3YW50IHRvIGlu
Y2x1ZGUgeW91ciBGbGFzayBjb2RlLCB1V1NHSSBhbmQgTmdpbnggaW4gdGhl
IHNhbWUgY29udGFpbmVyIChhbmQgbWF5YmUgcnVuIGFub3RoZXIgY29udGFp
bmVyIHdpdGggeW91ciBkYXRhYmFzZSkuCgpUaGF0J3MgdGhlIGFwcHJvYWNo
IHRha2VuIGluIHRoaXMgaW1hZ2UuCgotLS0KClRoaXMgaW1hZ2UgKGFuZCB0
YWdzKSBoYXZlIHNvbWUgZGVmYXVsdCBmaWxlcywgc28gaWYgeW91IHJ1biBp
dCBieSBpdHNlbGYgKG5vdCBhcyB0aGUgYmFzZSBpbWFnZSBvZiB5b3VyIG93
biBwcm9qZWN0KSB5b3Ugd2lsbCBzZWUgYSBkZWZhdWx0ICJIZWxsbyBXb3Js
ZCIgd2ViIGFwcC4KCldoZW4geW91IGJ1aWxkIGEgYERvY2tlcmZpbGVgIHdp
dGggYSBgQ09QWSAuL2FwcCAvYXBwYCB5b3UgcmVwbGFjZSB0aG9zZSBkZWZh
dWx0IGZpbGVzIHdpdGggeW91ciBhcHAgY29kZS4KClRoZSBtYWluIGRlZmF1
bHQgZmlsZSBpcyBvbmx5IGluIGAvYXBwL21haW4ucHlgLiBBbmQgaW4gdGhl
IGNhc2Ugb2YgdGhlIHRhZ3Mgd2l0aCBgLWluZGV4YCwgYWxzbyBpbiBgL2Fw
cC9zdGF0aWMvaW5kZXguaHRtbGAuCgpCdXQgdGhvc2UgZmlsZXMgcmVuZGVy
IGEgIihkZWZhdWx0KSIgdGV4dCBpbiB0aGUgc2VydmVkIHdlYiBwYWdlLCBz
byB0aGF0IHlvdSBjYW4gY2hlY2sgaWYgeW91IGFyZSBzZWVpbmcgdGhlIGRl
ZmF1bHQgY29kZSBvciB5b3VyIG93biBjb2RlIG92ZXJyaWRpbmcgdGhlIGRl
ZmF1bHQuCgpZb3VyIGFwcCBjb2RlIHNob3VsZCBiZSBpbiB0aGUgY29udGFp
bmVyJ3MgYC9hcHBgIGRpcmVjdG9yeSwgaXQgc2hvdWxkIGhhdmUgYSBgbWFp
bi5weWAgZmlsZSBhbmQgdGhhdCBgbWFpbi5weWAgZmlsZSBzaG91bGQgaGF2
ZSBhIEZsYXNrIG9iamVjdCBgYXBwYC4KCklmIHlvdSBmb2xsb3cgdGhlIGlu
c3RydWN0aW9ucyBhYm92ZSBvciB1c2Ugb25lIG9mIHRoZSBkb3dubG9hZGFi
bGUgZXhhbXBsZSB0ZW1wbGF0ZXMsIHlvdSBzaG91bGQgYmUgT0suCgpUaGVy
ZSBpcyBhbHNvIGEgYC9hcHAvdXdzZ2kuaW5pYCBmaWxlIGluc2lkZSB0aGUg
aW1hZ2VzIHdpdGggdGhlIGRlZmF1bHQgcGFyYW1ldGVycyBmb3IgdVdTR0ku
CgpUaGUgZG93bmxvYWRhYmxlIGV4YW1wbGVzIGluY2x1ZGUgYSBjb3B5IG9m
IHRoZSBzYW1lIGB1d3NnaS5pbmlgIGZpbGUgZm9yIGRlYnVnZ2luZyBwdXJw
b3Nlcy4gVG8gbGVhcm4gbW9yZSwgcmVhZCB0aGUgIioqQWR2YW5jZWQgZGV2
ZWxvcG1lbnQgaW5zdHJ1Y3Rpb25zKioiIGJlbG93LgoKIyMgQWR2YW5jZWQg
ZGV2ZWxvcG1lbnQgaW5zdHJ1Y3Rpb25zCgpXaGlsZSBkZXZlbG9waW5nLCB5
b3UgbWlnaHQgd2FudCB0byBtYWtlIHlvdXIgY29kZSBkaXJlY3RvcnkgYSB2
b2x1bWUgaW4geW91ciBEb2NrZXIgY29udGFpbmVyLgoKV2l0aCB0aGF0IHlv
dSB3b3VsZCBoYXZlIHlvdXIgZmlsZXMgKHRlbXBvcmFyaWx5KSB1cGRhdGVk
IGV2ZXJ5IHRpbWUgeW91IG1vZGlmeSB0aGVtLCB3aXRob3V0IG5lZWRpbmcg
dG8gYnVpbGQgeW91ciBjb250YWluZXIgYWdhaW4uCgpUbyBkbyB0aGlzLCB5
b3UgY2FuIHVzZSB0aGUgY29tbWFuZCBgcHdkYCAocHJpbnQgd29ya2luZyBk
aXJlY3RvcnkpIGluc2lkZSB5b3VyIGBkb2NrZXIgcnVuYCBhbmQgdGhlIGZs
YWcgYC12YCBmb3Igdm9sdW1lcy4KCldpdGggdGhhdCB5b3UgY291bGQgbWFw
IHlvdXIgYC4vYXBwYCBkaXJlY3RvcnkgdG8geW91ciBjb250YWluZXIncyBg
L2FwcGAgZGlyZWN0b3J5LgoKQnV0IGZpcnN0LCBhcyB5b3Ugd2lsbCBiZSBj
b21wbGV0ZWx5IHJlcGxhY2luZyB0aGUgZGlyZWN0b3J5IGAvYXBwYCBpbiB5
b3VyIGNvbnRhaW5lciAoYW5kIGFsbCBvZiBpdHMgY29udGVudHMpIHlvdSB3
aWxsIG5lZWQgdG8gaGF2ZSBhIGB1d3NnaS5pbmlgIGZpbGUgaW4geW91ciBg
Li9hcHBgIGRpcmVjdG9yeSB3aXRoOgoKYGBgaW5pClt1d3NnaV0KbW9kdWxl
ID0gbWFpbgpjYWxsYWJsZSA9IGFwcApgYGAKCmFuZCB0aGVuIHlvdSBjYW4g
ZG8gdGhlIERvY2tlciB2b2x1bWUgbWFwcGluZy4KCioqTm90ZSoqOiBBIGB1
d3NnaS5pbmlgIGZpbGUgaXMgaW5jbHVkZWQgaW4gdGhlIGRvd25sb2FkYWJs
ZSBleGFtcGxlcy4KCiogVG8gdHJ5IGl0LCBnbyB0byB5b3VyIHByb2plY3Qg
ZGlyZWN0b3J5ICh0aGUgb25lIHdpdGggeW91ciBgRG9ja2VyZmlsZWAgYW5k
IHlvdXIgYC4vYXBwYCBkaXJlY3RvcnkpCiogTWFrZSBzdXJlIHlvdSBoYXZl
IGEgYHV3c2dpLmluaWAgZmlsZSBpbiB5b3VyIGAuL2FwcGAgZGlyZWN0b3J5
CiogQnVpbGQgeW91ciBEb2NrZXIgaW1hZ2U6CgpgYGBiYXNoCmRvY2tlciBi
dWlsZCAtdCBteWltYWdlIC4KYGBgCgoqIFJ1biBhIGNvbnRhaW5lciBiYXNl
ZCBvbiB5b3VyIGltYWdlLCBtYXBwaW5nIHlvdXIgY29kZSBkaXJlY3Rvcnkg
KGAuL2FwcGApIHRvIHlvdXIgY29udGFpbmVyJ3MgYC9hcHBgIGRpcmVjdG9y
eToKCmBgYGJhc2gKZG9ja2VyIHJ1biAtZCAtLW5hbWUgbXljb250YWluZXIg
LXAgODA6ODAgLXYgJChwd2QpL2FwcDovYXBwIG15aW1hZ2UKYGBgCgpJZiB5
b3UgZ28gdG8geW91ciBEb2NrZXIgY29udGFpbmVyIFVSTCB5b3Ugc2hvdWxk
IHNlZSB5b3VyIGFwcCwgYW5kIHlvdSBzaG91bGQgYmUgYWJsZSB0byBtb2Rp
ZnkgZmlsZXMgaW4gYC4vYXBwL3N0YXRpYy9gIGFuZCBzZWUgdGhvc2UgY2hh
bmdlcyByZWZsZWN0ZWQgaW4geW91ciBicm93c2VyIGp1c3QgYnkgcmVsb2Fk
aW5nLgoKLi4uYnV0LCBhcyB1V1NHSSBsb2FkcyB5b3VyIHdob2xlIFB5dGhv
biBGbGFzayB3ZWIgYXBwbGljYXRpb24gb25jZSBpdCBzdGFydHMsIHlvdSB3
b24ndCBiZSBhYmxlIHRvIGVkaXQgeW91ciBQeXRob24gRmxhc2sgY29kZSBh
bmQgc2VlIHRoZSBjaGFuZ2VzIHJlZmxlY3RlZC4KClRvIGJlIGFibGUgdG8g
KHRlbXBvcmFyaWx5KSBkZWJ1ZyB5b3VyIFB5dGhvbiBGbGFzayBjb2RlIGxp
dmUsIHlvdSBjYW4gcnVuIHlvdXIgY29udGFpbmVyIG92ZXJyaWRpbmcgdGhl
IGRlZmF1bHQgY29tbWFuZCAodGhhdCBzdGFydHMgU3VwZXJ2aXNvcmQgd2hp
Y2ggaW4gdHVybiBzdGFydHMgdVdTR0kgYW5kIE5naW54KSBhbmQgcnVuIHlv
dXIgYXBwbGljYXRpb24gZGlyZWN0bHkgd2l0aCBgcHl0aG9uYCwgaW4gZGVi
dWcgbW9kZSwgdXNpbmcgdGhlIGBmbGFza2AgY29tbWFuZCB3aXRoIGl0cyBl
bnZpcm9ubWVudCB2YXJpYWJsZXMuCgpTbywgd2l0aCBhbGwgdGhlIG1vZGlm
aWNhdGlvbnMgYWJvdmUgYW5kIG1ha2luZyB5b3VyIGFwcCBydW4gZGlyZWN0
bHkgd2l0aCBgZmxhc2tgLCB0aGUgZmluYWwgRG9ja2VyIGNvbW1hbmQgd291
bGQgYmU6CgogYGBgYmFzaApkb2NrZXIgcnVuIC1kIC0tbmFtZSBteWNvbnRh
aW5lciAtcCA4MDo4MCAtdiAkKHB3ZCkvYXBwOi9hcHAgLWUgRkxBU0tfQVBQ
PW1haW4ucHkgLWUgRkxBU0tfREVCVUc9MSBteWltYWdlIGZsYXNrIHJ1biAt
LWhvc3Q9MC4wLjAuMCAtLXBvcnQ9ODAKYGBgCgpPciBpbiB0aGUgY2FzZSBv
ZiBhIHBhY2thZ2UgcHJvamVjdCwgeW91IHdvdWxkIHNldCBgRkxBU0tfQVBQ
PW1haW4vbWFpbi5weWA6CgpgYGBiYXNoCmRvY2tlciBydW4gLWQgLS1uYW1l
IG15Y29udGFpbmVyIC1wIDgwOjgwIC12ICQocHdkKS9hcHA6L2FwcCAtZSBG
TEFTS19BUFA9bWFpbi9tYWluLnB5IC1lIEZMQVNLX0RFQlVHPTEgbXlpbWFn
ZSBmbGFzayBydW4gLS1ob3N0PTAuMC4wLjAgLS1wb3J0PTgwCmBgYAoKTm93
IHlvdSBjYW4gZWRpdCB5b3VyIEZsYXNrIGNvZGUgaW4geW91ciBsb2NhbCBt
YWNoaW5lIGFuZCBvbmNlIHlvdSByZWZyZXNoIHlvdXIgYnJvd3NlciwgeW91
IHdpbGwgc2VlIHRoZSBjaGFuZ2VzIGxpdmUuCgpSZW1lbWJlciB0aGF0IHlv
dSBzaG91bGQgdXNlIHRoaXMgb25seSBmb3IgZGVidWdnaW5nIGFuZCBkZXZl
bG9wbWVudCwgZm9yIGRlcGxveW1lbnQgaW4gcHJvZHVjdGlvbiB5b3Ugc2hv
dWxkbid0IG1vdW50IHZvbHVtZXMgYW5kIHlvdSBzaG91bGQgbGV0IFN1cGVy
dmlzb3JkIHN0YXJ0IGFuZCBsZXQgaXQgc3RhcnQgdVdTR0kgYW5kIE5naW54
ICh3aGljaCBpcyB3aGF0IGhhcHBlbnMgYnkgZGVmYXVsdCkuCgpBbiBhbHRl
cm5hdGl2ZSBmb3IgdGhlc2UgbGFzdCBzdGVwcyB0byB3b3JrIHdoZW4geW91
IGRvbid0IGhhdmUgYSBwYWNrYWdlLCBidXQganVzdCBhIGZsYXQgc3RydWN0
dXJlIHdpdGggc2luZ2xlIGZpbGVzIChtb2R1bGVzKSwgeW91ciBQeXRob24g
Rmxhc2sgY29kZSBjb3VsZCBoYXZlIHRoYXQgc2VjdGlvbiB3aXRoOgoKYGBg
cHl0aG9uCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICMgT25seSBm
b3IgZGVidWdnaW5nIHdoaWxlIGRldmVsb3BpbmcKICAgYXBwLnJ1bihob3N0
PScwLjAuMC4wJywgZGVidWc9VHJ1ZSwgcG9ydD04MCkKYGBgCgouLi5hbmQg
eW91IGNvdWxkIHJ1biBpdCB3aXRoIGBweXRob24gbWFpbi5weWAuIEJ1dCB0
aGF0IHdpbGwgb25seSB3b3JrIHdoZW4geW91IGFyZSBub3QgdXNpbmcgYSBw
YWNrYWdlIHN0cnVjdHVyZSBhbmQgZG9uJ3QgcGxhbiB0byBkbyBpdCBsYXRl
ci4gSW4gdGhhdCBzcGVjaWZpYyBjYXNlLCBpZiB5b3UgZGlkbid0IGFkZCB0
aGUgY29kZSBibG9jayBhYm92ZSwgeW91ciBhcHAgd291bGQgb25seSBsaXN0
ZW4gdG8gYGxvY2FsaG9zdGAgKGluc2lkZSB0aGUgY29udGFpbmVyKSwgaW4g
YW5vdGhlciBwb3J0ICg1MDAwKSBhbmQgbm90IGluIGRlYnVnIG1vZGUuCgoq
Kk5vdGUqKjogVGhlIGV4YW1wbGUgcHJvamVjdCAqKmV4YW1wbGUtZmxhc2st
cHl0aG9uMy43KiogaW5jbHVkZXMgYSBgZG9ja2VyLWNvbXBvc2UueW1sYCBh
bmQgYGRvY2tlci1jb21wb3NlLm92ZXJyaWRlLnltbGAgd2l0aCBhbGwgdGhl
c2UgY29uZmlndXJhdGlvbnMsIGlmIHlvdSBhcmUgdXNpbmcgRG9ja2VyIENv
bXBvc2UuCgotLS0KCkFsc28sIGlmIHlvdSB3YW50IHRvIGRvIHRoZSBzYW1l
IGxpdmUgZGVidWdnaW5nIHVzaW5nIHRoZSBlbnZpcm9ubWVudCB2YXJpYWJs
ZSBgU1RBVElDX0lOREVYPTFgICh0byBzZXJ2ZSBgL2FwcC9zdGF0aWMvaW5k
ZXguaHRtbGAgZGlyZWN0bHkgd2hlbiByZXF1ZXN0ZWQgZm9yIGAvYCkgeW91
ciBOZ2lueCB3b24ndCBzZXJ2ZSBpdCBkaXJlY3RseSBhcyBpdCB3b24ndCBi
ZSBydW5uaW5nIChvbmx5IHlvdXIgUHl0aG9uIEZsYXNrIGFwcCBpbiBkZWJ1
ZyBtb2RlIHdpbGwgYmUgcnVubmluZykuCgpgYGBweXRob24KZnJvbSBmbGFz
ayBpbXBvcnQgRmxhc2ssIHNlbmRfZmlsZQpgYGAKCmFuZAoKYGBgcHl0aG9u
CkBhcHAucm91dGUoJy8nKQpkZWYgcm91dGVfcm9vdCgpOgogICAgaW5kZXhf
cGF0aCA9IG9zLnBhdGguam9pbihhcHAuc3RhdGljX2ZvbGRlciwgJ2luZGV4
Lmh0bWwnKQogICAgcmV0dXJuIHNlbmRfZmlsZShpbmRleF9wYXRoKQpgYGAK
Ci4uLnRoYXQgbWFrZXMgc3VyZSB5b3VyIGFwcCBhbHNvIHNlcnZlcyB0aGUg
YC9hcHAvc3RhdGljL2luZGV4Lmh0bWxgIGZpbGUgd2hlbiByZXF1ZXN0ZWQg
Zm9yIGAvYC4gT3IgaWYgeW91IGFyZSB1c2luZyBhIHBhY2thZ2Ugc3RydWN0
dXJlLCB0aGUgYC9hcHAvbWFpbi9zdGF0aWMvaW5kZXguaHRtbGAgZmlsZS4K
CkFuZCBpZiB5b3UgYXJlIHVzaW5nIGEgU1BBIGZyYW1ld29yaywgdG8gYWxs
b3cgaXQgdG8gaGFuZGxlIHRoZSBVUkxzIGluIHRoZSBicm93c2VyLCB5b3Vy
IFB5dGhvbiBGbGFzayBjb2RlIHNob3VsZCBoYXZlIHRoZSBzZWN0aW9uIHdp
dGg6CgpgYGBweXRob24KIyBFdmVyeXRoaW5nIG5vdCBkZWNsYXJlZCBiZWZv
cmUgKG5vdCBhIEZsYXNrIHJvdXRlIC8gQVBJIGVuZHBvaW50KS4uLgpAYXBw
LnJvdXRlKCcvPHBhdGg6cGF0aD4nKQpkZWYgcm91dGVfZnJvbnRlbmQocGF0
aCk6CiAgICAjIC4uLmNvdWxkIGJlIGEgc3RhdGljIGZpbGUgbmVlZGVkIGJ5
IHRoZSBmcm9udCBlbmQgdGhhdAogICAgIyBkb2Vzbid0IHVzZSB0aGUgYHN0
YXRpY2AgcGF0aCAobGlrZSBpbiBgPHNjcmlwdCBzcmM9ImJ1bmRsZS5qcyI+
YCkKICAgIGZpbGVfcGF0aCA9IG9zLnBhdGguam9pbihhcHAuc3RhdGljX2Zv
bGRlciwgcGF0aCkKICAgIGlmIG9zLnBhdGguaXNmaWxlKGZpbGVfcGF0aCk6
CiAgICAgICAgcmV0dXJuIHNlbmRfZmlsZShmaWxlX3BhdGgpCiAgICAjIC4u
Lm9yIHNob3VsZCBiZSBoYW5kbGVkIGJ5IHRoZSBTUEEncyAicm91dGVyIiBp
biBmcm9udCBlbmQKICAgIGVsc2U6CiAgICAgICAgaW5kZXhfcGF0aCA9IG9z
LnBhdGguam9pbihhcHAuc3RhdGljX2ZvbGRlciwgJ2luZGV4Lmh0bWwnKQog
ICAgICAgIHJldHVybiBzZW5kX2ZpbGUoaW5kZXhfcGF0aCkKYGBgCgouLi50
aGF0IG1ha2VzIEZsYXNrIHNlbmQgYWxsIHRoZSBDU1MsIEphdmFTY3JpcHQg
YW5kIGltYWdlIGZpbGVzIHdoZW4gcmVxdWVzdGVkIGluIHRoZSByb290IChg
L2ApIFVSTCBidXQgYWxzbyBtYWtlcyBzdXJlIHRoYXQgeW91ciBmcm9udGVu
ZCBTUEEgaGFuZGxlcyBhbGwgdGhlIG90aGVyIFVSTHMgdGhhdCBhcmUgbm90
IGRlZmluZWQgaW4geW91ciBGbGFzayBhcHAuCgpUaGF0J3MgaG93IGl0IGlz
IHdyaXR0ZW4gaW4gdGhlIHR1dG9yaWFsIGFib3ZlIGFuZCBpcyBpbmNsdWRl
ZCBpbiB0aGUgZG93bmxvYWRhYmxlIGV4YW1wbGVzLgoKKipOb3RlKio6IFRo
ZSBleGFtcGxlIHByb2plY3QgKipleGFtcGxlLWZsYXNrLXB5dGhvbjMuNy1p
bmRleCoqIGluY2x1ZGVzIGEgYGRvY2tlci1jb21wb3NlLnltbGAgYW5kIGBk
b2NrZXItY29tcG9zZS5vdmVycmlkZS55bWxgIHdpdGggYWxsIHRoZXNlIGNv
bmZpZ3VyYXRpb25zLCBpZiB5b3UgYXJlIHVzaW5nIERvY2tlciBDb21wb3Nl
LgoKIyMgTW9yZSBhZHZhbmNlZCBkZXZlbG9wbWVudCBpbnN0cnVjdGlvbnMK
CklmIHlvdSBmb2xsb3cgdGhlIGluc3RydWN0aW9ucyBhYm92ZSwgaXQncyBw
cm9iYWJsZSB0aGF0IGF0IHNvbWUgcG9pbnQsIHlvdSB3aWxsIHdyaXRlIGNv
ZGUgdGhhdCB3aWxsIGJyZWFrIHlvdXIgRmxhc2sgZGVidWdnaW5nIHNlcnZl
ciBhbmQgaXQgd2lsbCBjcmFzaC4KCkFuZCBzaW5jZSB0aGUgb25seSBwcm9j
ZXNzIHJ1bm5pbmcgd2FzIHlvdXIgZGVidWdnaW5nIHNlcnZlciwgdGhhdCBu
b3cgaXMgc3RvcHBlZCwgeW91ciBjb250YWluZXIgd2lsbCBzdG9wLgoKVGhl
biB5b3Ugd2lsbCBoYXZlIHRvIHN0YXJ0IHlvdXIgY29udGFpbmVyIGFnYWlu
IGFmdGVyIGZpeGluZyB5b3VyIGNvZGUgYW5kIHlvdSB3b24ndCBzZWUgdmVy
eSBlYXNpbHkgd2hhdCBpcyB0aGUgZXJyb3IgdGhhdCBpcyBjcmFzaGluZyB5
b3VyIHNlcnZlci4KClNvLCB3aGlsZSBkZXZlbG9waW5nLCB5b3UgY291bGQg
ZG8gdGhlIGZvbGxvd2luZyAodGhhdCdzIHdoYXQgSSBub3JtYWxseSBkbywg
YWx0aG91Z2ggSSBkbyBpdCB3aXRoIERvY2tlciBDb21wb3NlLCBhcyBpbiB0
aGUgZXhhbXBsZSBwcm9qZWN0cyk6CgoqIE1ha2UgeW91ciBjb250YWluZXIg
cnVuIGFuZCBrZWVwIGl0IGFsaXZlIGluIGFuIGluZmluaXRlIGxvb3AgKHdp
dGhvdXQgcnVubmluZyBhbnkgc2VydmVyKToKCmBgYGJhc2gKZG9ja2VyIHJ1
biAtZCAtLW5hbWUgbXljb250YWluZXIgLXAgODA6ODAgLXYgJChwd2QpL2Fw
cDovYXBwIC1lIEZMQVNLX0FQUD1tYWluLnB5IC1lIEZMQVNLX0RFQlVHPTEg
bXlpbWFnZSBiYXNoIC1jICJ3aGlsZSB0cnVlIDsgZG8gc2xlZXAgMTAgOyBk
b25lIgpgYGAKCiogT3IsIGlmIHlvdXIgcHJvamVjdCBpcyBhIHBhY2thZ2Us
IHNldCBgRkxBU0tfQVBQPW1haW4vbWFpbi5weWA6CgpgYGBiYXNoCmRvY2tl
ciBydW4gLWQgLS1uYW1lIG15Y29udGFpbmVyIC1wIDgwOjgwIC12ICQocHdk
KS9hcHA6L2FwcCAtZSBGTEFTS19BUFA9bWFpbi9tYWluLnB5IC1lIEZMQVNL
X0RFQlVHPTEgbXlpbWFnZSBiYXNoIC1jICJ3aGlsZSB0cnVlIDsgZG8gc2xl
ZXAgMTAgOyBkb25lIgpgYGAKCiogQ29ubmVjdCB0byB5b3VyIGNvbnRhaW5l
ciB3aXRoIGEgbmV3IGludGVyYWN0aXZlIHNlc3Npb246CgpgYGBiYXNoCmRv
Y2tlciBleGVjIC1pdCBteWNvbnRhaW5lciBiYXNoCmBgYAoKWW91IHdpbGwg
bm93IGJlIGluc2lkZSB5b3VyIGNvbnRhaW5lciBpbiB0aGUgYC9hcHBgIGRp
cmVjdG9yeS4KCiogTm93LCBmcm9tIGluc2lkZSB0aGUgY29udGFpbmVyLCBy
dW4geW91ciBGbGFzayBkZWJ1Z2dpbmcgc2VydmVyOgoKYGBgYmFzaApmbGFz
ayBydW4gLS1ob3N0PTAuMC4wLjAgLS1wb3J0PTgwCmBgYAoKWW91IHdpbGwg
c2VlIHlvdXIgRmxhc2sgZGVidWdnaW5nIHNlcnZlciBzdGFydCwgeW91IHdp
bGwgc2VlIGhvdyBpdCBzZW5kcyByZXNwb25zZXMgdG8gZXZlcnkgcmVxdWVz
dCwgeW91IHdpbGwgc2VlIHRoZSBlcnJvcnMgdGhyb3duIHdoZW4geW91IGJy
ZWFrIHlvdXIgY29kZSwgYW5kIGhvdyB0aGV5IHN0b3AgeW91ciBzZXJ2ZXIs
IGFuZCB5b3Ugd2lsbCBiZSBhYmxlIHRvIHJlLXN0YXJ0IGl0IHZlcnkgZmFz
dCwgYnkganVzdCBydW5uaW5nIHRoZSBjb21tYW5kIGFib3ZlIGFnYWluLgoK
IyMgUmVsZWFzZSBOb3RlcwoKIyMjIExhdGVzdCBDaGFuZ2VzCgojIyMgMS4y
LjAKCiogUmVmYWN0b3IgdGVzdHMgdG8gdXNlIGVudiB2YXJzIGFuZCBhZGQg
aW1hZ2UgdGFncyBmb3IgZWFjaCBidWlsZCBkYXRlLCBsaWtlIGB0aWFuZ29s
by91d3NnaS1uZ2lueC1mbGFzazpweXRob24zLjctMjAxOS0xMC0xNGAuIFBS
IFsjMTU0XShodHRwczovL2dpdGh1Yi5jb20vdGlhbmdvbG8vdXdzZ2ktbmdp
bngtZmxhc2stZG9ja2VyL3B1bGwvMTU0KS4KKiBVcGdyYWRlIFRyYXZpcy4g
UFIgWyMxMzVdKGh0dHBzOi8vZ2l0aHViLmNvbS90aWFuZ29sby91d3NnaS1u
Z2lueC1mbGFzay1kb2NrZXIvcHVsbC8xMzUpLgoKIyMjIDEuMS4wCgoqIE1v
dmUgYC9zdGFydC5zaGAgYW5kIGAvYXBwL3ByZXN0YXJ0LnNoYCBmdW5jdGlv
bmFsaXR5IHRvIHBhcmVudCBpbWFnZS4gW1BSICMxMzRdKGh0dHBzOi8vZ2l0
aHViLmNvbS90aWFuZ29sby91d3NnaS1uZ2lueC1mbGFzay1kb2NrZXIvcHVs
bC8xMzQpLgoKIyMjIDEuMC4wCgoyMDE5LTAyLTAyOgoKKiBUaGUgTmdpbngg
Y29uZmlndXJhdGlvbnMgYXJlIGdlbmVyYXRlZCBkeW5hbWljYWxseSBmcm9t
IHRoZSBlbnRyeXBvaW50LCBpbnN0ZWFkIG9mIG1vZGlmeWluZyBwcmUtZXhp
c3RpbmcgZmlsZXMuIFtQUiAjNTAgaW4gdGhlIHBhcmVudCBpbWFnZSBgdXdz
Z2ktbmdpbnhgXShodHRwczovL2dpdGh1Yi5jb20vdGlhbmdvbG8vdXdzZ2kt
bmdpbngtZG9ja2VyL3B1bGwvNTApIGFuZCBbUFIgIzEyMV0oaHR0cHM6Ly9n
aXRodWIuY29tL3RpYW5nb2xvL3V3c2dpLW5naW54LWZsYXNrLWRvY2tlci9w
dWxsLzEyMSkuCiogU3VwcG9ydCBmb3IgYSBjb21wbGV0ZWx5IGN1c3RvbSBg
L2FwcC9uZ2lueC5jb25mYCBmaWxlIHRoYXQgb3ZlcnJpZGVzIHRoZSBnZW5l
cmF0ZWQgb25lLiBbUFIgIzUxIGluIHRoZSBwYXJlbnQgaW1hZ2UgYHV3c2dp
LW5naW54YF0oaHR0cHM6Ly9naXRodWIuY29tL3RpYW5nb2xvL3V3c2dpLW5n
aW54LWRvY2tlci9wdWxsLzUxKSBhbmQgW1BSICMxMjJdKGh0dHBzOi8vZ2l0
aHViLmNvbS90aWFuZ29sby91d3NnaS1uZ2lueC1mbGFzay1kb2NrZXIvcHVs
bC8xMjIpLgoKMjAxOS0wMS0wMToKCiogSW1wcm92ZWQgZ3VpZGUgZm9yIHNp
bmdsZSBwYWdlIGFwcGxpY2F0aW9ucy4KKiBMaW5rcyB0byBwcm9qZWN0IGdl
bmVyYXRvcnMuCgoyMDE4LTEyLTI5OgoKKiBUcmF2aXMgaW50ZWdyYXRpb24s
IGltYWdlcyBidWlsdCBhbmQgcHVzaGVkIGJ5IFRyYXZpcy4KKiBGaXhlcyBp
biBwYXJlbnQgaW1hZ2UgZm9yIE5naW54LgoKMjAxOC0xMS0yMzoKCiogTmV3
IEFscGluZSAzLjggaW1hZ2VzIGZvciBQeXRob24gMi43LCBQeXRob24gMy42
IGFuZCAodGVtcG9yYXJpbHkgZGlzYWJsZWQpIFB5dGhvbiAzLjcuCgoyMDE4
LTA5LTIyOgoKKiBOZXcgUHl0aG9uIDMuNyBpbWFnZXMsIGJhc2VkIG9uIHN0
YW5kYXJkIERlYmlhbiBhbmQgQWxwaW5lIExpbnV4LiBBbGwgdGhlIGRvY3Vt
ZW50YXRpb24gYW5kIHByb2plY3QgdGVtcGxhdGVzIGhhdmUgYmVlbiB1cGRh
dGVkIHRvIHVzZSBQeXRob24gMy43IGJ5IGRlZmF1bHQuIFRoYW5rcyB0byBb
ZGVzYWludG1hcnRpbl0oaHR0cHM6Ly9naXRodWIuY29tL2Rlc2FpbnRtYXJ0
aW4pIGluIFt0aGlzIFBSXShodHRwczovL2dpdGh1Yi5jb20vdGlhbmdvbG8v
dXdzZ2ktbmdpbngtZmxhc2stZG9ja2VyL3B1bGwvODIpLgoKMjAxOC0wNi0y
MjoKCiogWW91IGNhbiBub3cgdXNlIGBOR0lOWF9XT1JLRVJfQ09OTkVDVElP
TlNgIHRvIHNldCB0aGUgbWF4aW11bSBudW1iZXIgb2YgTmdpbnggd29ya2Vy
IGNvbm5lY3Rpb25zIGFuZCBgTkdJTlhfV09SS0VSX09QRU5fRklMRVNgIHRv
IHNldCB0aGUgbWF4aW11bSBudW1iZXIgb2Ygb3BlbiBmaWxlcy4gVGhhbmtz
IHRvIFtyb25sdXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9yb25sdXQpIGluIFt0
aGlzIFBSXShodHRwczovL2dpdGh1Yi5jb20vdGlhbmdvbG8vdXdzZ2ktbmdp
bngtZmxhc2stZG9ja2VyL3B1bGwvNTYpLgoKMjAxOC0wNi0yMjoKCkltcHJv
dmVtZW50cyBmcm9tIHBhcmVudCBpbWFnZToKCiogTWFrZSB1V1NHSSByZXF1
aXJlIGFuIGFwcCB0byBydW4sIGluc3RlYWQgb2YgZ29pbmcgaW4gImZ1bGwg
ZHluYW1pYyBtb2RlIiB3aGlsZSB0aGVyZSB3YXMgYW4gZXJyb3IuIFN1cGVy
dmlzb3JkIGRvZXNuJ3QgdGVybWluYXRlIGl0c2VsZiBidXQgdHJpZXMgdG8g
cmVzdGFydCB1V1NHSSBhbmQgc2hvd3MgdGhlIGVycm9ycy4gVXNlcyBgbmVl
ZC1hcHBgIGFzIHN1Z2dlc3RlZCBieSBbbHVja3lkb25hbGRdKGh0dHBzOi8v
Z2l0aHViLmNvbS9sdWNreWRvbmFsZCkgaW4gW3RoaXMgY29tbWVudF0oaHR0
cHM6Ly9naXRodWIuY29tL3RpYW5nb2xvL3V3c2dpLW5naW54LWZsYXNrLWRv
Y2tlci9pc3N1ZXMvMyNpc3N1ZWNvbW1lbnQtMzIxOTkxMjc5KS4KCiogQ29y
cmVjdGx5IGhhbmRsZWQgZ3JhY2VmdWwgc2h1dGRvd24gb2YgdVdTR0kgYW5k
IE5naW54LiBUaGFua3MgdG8gW2Rlc2FpbnRtYXJ0aW5dKGh0dHBzOi8vZ2l0
aHViLmNvbS9kZXNhaW50bWFydGluKSBpbiBbdGhpcyBQUl0oaHR0cHM6Ly9n
aXRodWIuY29tL3RpYW5nb2xvL3V3c2dpLW5naW54LWRvY2tlci9wdWxsLzMw
KS4KCjIwMTgtMDItMDQ6CgpJdCdzIG5vdyBwb3NzaWJsZSB0byBzZXQgdGhl
IG51bWJlciBvZiBOZ2lueCB3b3JrZXIgcHJvY2Vzc2VzIHdpdGggdGhlIGVu
dmlyb25tZW50IHZhcmlhYmxlIGBOR0lOWF9XT1JLRVJfUFJPQ0VTU0VTYC4g
VGhhbmtzIHRvIFtuYWt0aW5pc10oaHR0cHM6Ly9naXRodWIuY29tL25ha3Rp
bmlzKSBpbiBbdGhpcyBQUl0oaHR0cHM6Ly9naXRodWIuY29tL3RpYW5nb2xv
L3V3c2dpLW5naW54LWRvY2tlci9wdWxsLzIyKS4KCjIwMTgtMDEtMTQ6Cgoq
IFRoZXJlIGFyZSBub3cgdHdvIEFscGluZSBiYXNlZCB2ZXJzaW9ucywgYHB5
dGhvbjIuNy1hbHBpbmUzLjdgIGFuZCBgcHl0aG9uMy42LWFscGluZTMuN2Au
CgoyMDE3LTEyLTEwOgoKKiBBZGRlZCBzdXBwb3J0IGZvciBgL2FwcC9wcmVz
dGFydC5zaGAgc2NyaXB0IHRvIHJ1biBhcmJpdHJhcnkgY29kZSBiZWZvcmUg
c3RhcnRpbmcgdGhlIGFwcCAoZm9yIGV4YW1wbGUsIEFsZW1iaWMgLSBTUUxB
bGNoZW15IG1pZ3JhdGlvbnMpLiBUaGUgW2RvY3VtZW50YXRpb24gZm9yIHRo
ZSBgL2FwcC9wcmVzdGFydC5zaGAgaXMgaW4gdGhlIG1haW4gUkVBRE1FXSho
dHRwczovL2dpdGh1Yi5jb20vdGlhbmdvbG8vdXdzZ2ktbmdpbngtZmxhc2st
ZG9ja2VyI2N1c3RvbS1hcHBwcmVzdGFydHNoKS4KKiBgL2FwcGAgaXMgcGFy
dCBvZiB0aGUgYFBZVEhPTlBBVEhgIGVudmlyb25tZW50IHZhcmlhYmxlLiBU
aGF0IGFsbG93cyBnbG9iYWwgaW1wb3J0cyBmcm9tIHNldmVyYWwgcGxhY2Vz
LCBlYXNpZXIgQWxlbWJpYyBpbnRlZ3JhdGlvbiwgZXRjLgoKMjAxNy0xMi0w
ODogTm93IHlvdSBjYW4gY29uZmlndXJlIHdoaWNoIHBvcnQgdGhlIGNvbnRh
aW5lciBzaG91bGQgbGlzdGVuIG9uLCB1c2luZyB0aGUgZW52aXJvbm1lbnQg
dmFyaWFibGUgYExJU1RFTl9QT1JUYCB0aGFua3MgdG8gW3Rtc2huXShodHRw
czovL2dpdGh1Yi5jb20vdG1zaG4pIGluIFt0aGlzIFBSXShodHRwczovL2dp
dGh1Yi5jb20vdGlhbmdvbG8vdXdzZ2ktbmdpbngtZG9ja2VyL3B1bGwvMTYp
LgoKMjAxNy0wOS0xMDogVXBkYXRlZCBleGFtcGxlcyBhbmQgc2FtcGxlIHBy
b2plY3QgdG8gd29yayB3aXRoIFNQQXMgZXZlbiB3aGVuIHN0cnVjdHVyaW5n
IHRoZSBhcHAgYXMgYSBwYWNrYWdlICh3aXRoIHN1YmRpcmVjdG9yaWVzKS4K
CjIwMTctMDktMDI6CgoqIEV4YW1wbGUgcHJvamVjdCB3aXRoIGEgW1B5dGhv
biBwYWNrYWdlXShodHRwczovL2RvY3MucHl0aG9uLm9yZy8zL3R1dG9yaWFs
L21vZHVsZXMuaHRtbCNwYWNrYWdlcykgc3RydWN0dXJlIGFuZCBhIHNlY3Rp
b24gZXhwbGFpbmluZyBob3cgdG8gdXNlIGl0IGFuZCBzdHJ1Y3R1cmUgYSBG
bGFzayBwcm9qZWN0IGxpa2UgdGhhdC4KKiBBbHNvLCB0aGUgZXhhbXBsZXMg
YW5kIGRvY3VtZW50YXRpb24gbm93IHVzZSB0aGUgW2BmbGFzayBydW5gXSho
dHRwOi8vZmxhc2sucG9jb28ub3JnL2RvY3MvMC4xMi9xdWlja3N0YXJ0LyNh
LW1pbmltYWwtYXBwbGljYXRpb24pIGNvbW1hbmRzLCB0aGF0IGFsbG93cyBy
dW5uaW5nIGEgcGFja2FnZSBhcHBsaWNhdGlvbiB3aGlsZSBkZXZlbG9waW5n
IG1vcmUgZWFzaWx5LgoKMjAxNy0wOC0xMDogTWFueSBjaGFuZ2VzOgoKKiBO
ZXcgb2ZmaWNpYWwgaW1hZ2UgdGFnczogYHB5dGhvbjMuNmAsIGBweXRob24z
LjYtaW5kZXhgLCBgcHl0aG9uLjMuNWAsIGBweXRob24zLjUtaW5kZXhgLCBg
cHl0aG9uMi43YCBhbmQgYHB5dGhvbjIuNy1pbmRleGAuIEFsbCB0aGUgb3Ro
ZXIgaW1hZ2VzIGFyZSBkZXByZWNhdGVkIGluIGZhdm9yIGlzIHRoaXMgb25l
cy4KKiBQeXRob24gMy42IGlzIG5vdyB0aGUgcmVjb21tZW5kZWQgZGVmYXVs
dC4gRXZlbiB0aGUgZXhhbXBsZSBwcm9qZWN0cyBmb3Igb3RoZXIgdmVyc2lv
bnMgd2VyZSByZW1vdmVkIHRvIGRpc2NvdXJhZ2UgdXNpbmcgb2xkZXIgUHl0
aG9uIHZlcnNpb25zIGZvciBuZXcgcHJvamVjdHMuCiogQW55IG9mIHRoZSBv
bGRlciBpbWFnZXMgdGhhdCBkaWRuJ3QgaGF2ZSBhIFB5dGhvbiB2ZXJzaW9u
IHdpbGwgc2hvdyBhIGRlcHJlY2F0aW9uIHdhcm5pbmcgYW5kIHRha2Ugc29t
ZSB0aW1lIHRvIHN0YXJ0LiBBcyBzb29uIHRoZSB0YWcgYGxhdGVzdGAgd2ls
bCBwb2ludCB0byBQeXRob24gMy42IGFuZCB0aGUgb3RoZXIgdGFncyB3aWxs
IGJlIHJlbW92ZWQuCiogVGhlcmUgd2VyZSBzZXZlcmFsIGltcHJvdmVtZW50
cyBpbiB0aGUgYmFzZSBpbWFnZSBgdGlhbmdvbG8vdXdzZ2ktbmdpbnhgIHRo
YXQgaW1wcm92ZWQgdGhpcyBpbWFnZSB0b28uCiogQnkgZGVmYXVsdCwgbm93
IHRoZXJlIGlzIG5vIGxpbWl0IGluIHRoZSB1cGxvYWQgZmlsZSBzaXplIGlu
IE5naW54LiBJdCBjYW4gYmUgY29uZmlndXJlZCBpbiBhbiBlbnZpcm9ubWVu
dCB2YXJpYWJsZS4KKiBJdCdzIG5vdyBwb3NzaWJsZSB0byBjb25maWd1cmUg
c2V2ZXJhbCB0aGluZ3Mgd2l0aCBlbnZpcm9ubWVudCB2YXJpYWJsZXM6CiAg
KiBTZXJ2ZSBgaW5kZXguaHRtbGAgZGlyZWN0bHk6IGBTVEFUSUNfSU5ERVhg
CiAgKiBTZXQgdGhlIG1heCB1cGxvYWQgZmlsZSBzaXplOiBgTkdJTlhfTUFY
X1VQTE9BRGAKICAqIFNldCBhIGN1c3RvbSBgdXdzZ2kuaW5pYCBmaWxlICh0
aGF0IGFsbG93cyB1c2luZyBhIGN1c3RvbSBkaXJlY3RvcnkgZGlmZmVyZW50
IHRoYW4gYC9hcHBgKTogYFVXU0dJX0lOSWAgKHVzaW5nIHRoZSBpZGVhcyBi
eSBAYmVyY2lrciBpbiAjNSApLgogICogU2V0IGEgY3VzdG9tIGAuL3N0YXRp
Yy9gIHBhdGg6IGBTVEFUSUNfUEFUSGAKICAqIFNldCBhIGN1c3RvbSBgL3N0
YXRpYy9gIFVSTDogYFNUQVRJQ19VUkxgCiogQXMgYWxsIHRoaXMgY29uZmln
dXJhdGlvbnMgYXJlIGF2YWlsYWJsZSBhcyBlbnZpcm9ubWVudCB2YXJpYWJs
ZXMsIHRoZSBjaG9pY2VzIGFyZSBhIGxvdCBtb3JlIHNpbXBsZS4gQWN0dWFs
bHksIGFueSBuZXcgcHJvamVjdCB3b3VsZCBqdXN0IG5lZWQgdG8gdXNlIGEg
YERvY2tlcmZpbGVgIHdpdGg6CgpgYGBEb2NrZXJmaWxlCkZST00gdGlhbmdv
bG8vdXdzZ2ktbmdpbngtZmxhc2s6cHl0aG9uMy42CgpDT1BZIC4vYXBwIC9h
cHAKYGBgCgphbmQgdGhlbiBjdXN0b21pemUgd2l0aCBlbnZpcm9ubWVudCB2
YXJpYWJsZXMuCgojIyBUZXN0cwoKQWxsIHRoZSBpbWFnZSB0YWdzLCBjb25m
aWd1cmF0aW9ucywgZW52aXJvbm1lbnQgdmFyaWFibGVzIGFuZCBhcHBsaWNh
dGlvbiBvcHRpb25zIGFyZSB0ZXN0ZWQuCgojIyBMaWNlbnNlCgpUaGlzIHBy
b2plY3QgaXMgbGljZW5zZWQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBBcGFj
aGUgbGljZW5zZS4K
",,1580,"ZGlzdDogeGVuaWFsCgpsYW5ndWFnZTogcHl0aG9uCgpweXRob246CiAgLSAi
My43IgoKaW5zdGFsbDoKICAtIHBpcCBpbnN0YWxsIGRvY2tlciBweXRlc3QK
CnNlcnZpY2VzOgogIC0gZG9ja2VyCgplbnY6CiAgLSBOQU1FPSdweXRob24y
LjcnIEJVSUxEX1BBVEg9J3B5dGhvbjIuNycgVEVTVF9TVFIxPSdIZWxsbyBX
b3JsZCBmcm9tIEZsYXNrIGluIGEgdVdTR0kgTmdpbnggRG9ja2VyIGNvbnRh
aW5lciB3aXRoIFB5dGhvbiAyLjcgKGRlZmF1bHQpJyBURVNUX1NUUjI9J0hl
bGxvIFdvcmxkIGZyb20gRmxhc2sgaW4gYSB1V1NHSSBOZ2lueCBEb2NrZXIg
Y29udGFpbmVyIHdpdGggUHl0aG9uIDIuNyAtIHRlc3RpbmcnIFJVTl9URVNU
Uz0nMScKICAtIE5BTUU9J3B5dGhvbjIuNy1hbHBpbmUzLjcnIEJVSUxEX1BB
VEg9J3B5dGhvbjIuNy1hbHBpbmUzLjcnIFRFU1RfU1RSMT0nSGVsbG8gV29y
bGQgZnJvbSBGbGFzayBpbiBhIHVXU0dJIE5naW54IERvY2tlciBjb250YWlu
ZXIgd2l0aCBQeXRob24gMi43IG9uIEFscGluZSAoZGVmYXVsdCknIFRFU1Rf
U1RSMj0nSGVsbG8gV29ybGQgZnJvbSBGbGFzayBpbiBhIHVXU0dJIE5naW54
IERvY2tlciBjb250YWluZXIgd2l0aCBQeXRob24gMi43IC0gdGVzdGluZycg
UlVOX1RFU1RTPScxJwogIC0gTkFNRT0ncHl0aG9uMi43LWFscGluZTMuOCcg
QlVJTERfUEFUSD0ncHl0aG9uMi43LWFscGluZTMuOCcgVEVTVF9TVFIxPSdI
ZWxsbyBXb3JsZCBmcm9tIEZsYXNrIGluIGEgdVdTR0kgTmdpbnggRG9ja2Vy
IGNvbnRhaW5lciB3aXRoIFB5dGhvbiAyLjcgb24gQWxwaW5lIChkZWZhdWx0
KScgVEVTVF9TVFIyPSdIZWxsbyBXb3JsZCBmcm9tIEZsYXNrIGluIGEgdVdT
R0kgTmdpbnggRG9ja2VyIGNvbnRhaW5lciB3aXRoIFB5dGhvbiAyLjcgLSB0
ZXN0aW5nJyBSVU5fVEVTVFM9JzEnCiAgLSBOQU1FPSdweXRob24zLjUnIEJV
SUxEX1BBVEg9J3B5dGhvbjMuNScgVEVTVF9TVFIxPSdIZWxsbyBXb3JsZCBm
cm9tIEZsYXNrIGluIGEgdVdTR0kgTmdpbnggRG9ja2VyIGNvbnRhaW5lciB3
aXRoIFB5dGhvbiAzLjUgKGRlZmF1bHQpJyBURVNUX1NUUjI9J0hlbGxvIFdv
cmxkIGZyb20gRmxhc2sgaW4gYSB1V1NHSSBOZ2lueCBEb2NrZXIgY29udGFp
bmVyIHdpdGggUHl0aG9uIDMuNSAtIHRlc3RpbmcnIFJVTl9URVNUUz0nMScK
ICAtIE5BTUU9J3B5dGhvbjMuNicgQlVJTERfUEFUSD0ncHl0aG9uMy42JyBU
RVNUX1NUUjE9J0hlbGxvIFdvcmxkIGZyb20gRmxhc2sgaW4gYSB1V1NHSSBO
Z2lueCBEb2NrZXIgY29udGFpbmVyIHdpdGggUHl0aG9uIDMuNiAoZGVmYXVs
dCknIFRFU1RfU1RSMj0nSGVsbG8gV29ybGQgZnJvbSBGbGFzayBpbiBhIHVX
U0dJIE5naW54IERvY2tlciBjb250YWluZXIgd2l0aCBQeXRob24gMy42IC0g
dGVzdGluZycgUlVOX1RFU1RTPScxJwogIC0gTkFNRT0ncHl0aG9uMy42LWFs
cGluZTMuNycgQlVJTERfUEFUSD0ncHl0aG9uMy42LWFscGluZTMuNycgVEVT
VF9TVFIxPSdIZWxsbyBXb3JsZCBmcm9tIEZsYXNrIGluIGEgdVdTR0kgTmdp
bnggRG9ja2VyIGNvbnRhaW5lciB3aXRoIFB5dGhvbiAzLjYgb24gQWxwaW5l
IChkZWZhdWx0KScgVEVTVF9TVFIyPSdIZWxsbyBXb3JsZCBmcm9tIEZsYXNr
IGluIGEgdVdTR0kgTmdpbnggRG9ja2VyIGNvbnRhaW5lciB3aXRoIFB5dGhv
biAzLjYgLSB0ZXN0aW5nJyBSVU5fVEVTVFM9JzEnCiAgLSBOQU1FPSdweXRo
b24zLjYtYWxwaW5lMy44JyBCVUlMRF9QQVRIPSdweXRob24zLjYtYWxwaW5l
My44JyBURVNUX1NUUjE9J0hlbGxvIFdvcmxkIGZyb20gRmxhc2sgaW4gYSB1
V1NHSSBOZ2lueCBEb2NrZXIgY29udGFpbmVyIHdpdGggUHl0aG9uIDMuNiBv
biBBbHBpbmUgKGRlZmF1bHQpJyBURVNUX1NUUjI9J0hlbGxvIFdvcmxkIGZy
b20gRmxhc2sgaW4gYSB1V1NHSSBOZ2lueCBEb2NrZXIgY29udGFpbmVyIHdp
dGggUHl0aG9uIDMuNiAtIHRlc3RpbmcnIFJVTl9URVNUUz0nMScKICAtIE5B
TUU9J3B5dGhvbjMuNycgQlVJTERfUEFUSD0ncHl0aG9uMy43JyBURVNUX1NU
UjE9J0hlbGxvIFdvcmxkIGZyb20gRmxhc2sgaW4gYSB1V1NHSSBOZ2lueCBE
b2NrZXIgY29udGFpbmVyIHdpdGggUHl0aG9uIDMuNyAoZGVmYXVsdCknIFRF
U1RfU1RSMj0nSGVsbG8gV29ybGQgZnJvbSBGbGFzayBpbiBhIHVXU0dJIE5n
aW54IERvY2tlciBjb250YWluZXIgd2l0aCBQeXRob24gMy43IC0gdGVzdGlu
ZycgUlVOX1RFU1RTPScxJwogIC0gTkFNRT0nbGF0ZXN0JyBCVUlMRF9QQVRI
PSdweXRob24zLjcnIFRFU1RfU1RSMT0nSGVsbG8gV29ybGQgZnJvbSBGbGFz
ayBpbiBhIHVXU0dJIE5naW54IERvY2tlciBjb250YWluZXIgd2l0aCBQeXRo
b24gMy43IChkZWZhdWx0KScgVEVTVF9TVFIyPSdIZWxsbyBXb3JsZCBmcm9t
IEZsYXNrIGluIGEgdVdTR0kgTmdpbnggRG9ja2VyIGNvbnRhaW5lciB3aXRo
IFB5dGhvbiAzLjcgLSB0ZXN0aW5nJyBSVU5fVEVTVFM9JzEnCiAgLSBOQU1F
PSdweXRob24zLjctYWxwaW5lMy43JyBCVUlMRF9QQVRIPSdweXRob24zLjct
YWxwaW5lMy43JyBURVNUX1NUUjE9J0hlbGxvIFdvcmxkIGZyb20gRmxhc2sg
aW4gYSB1V1NHSSBOZ2lueCBEb2NrZXIgY29udGFpbmVyIHdpdGggUHl0aG9u
IDMuNyBvbiBBbHBpbmUgKGRlZmF1bHQpJyBURVNUX1NUUjI9J0hlbGxvIFdv
cmxkIGZyb20gRmxhc2sgaW4gYSB1V1NHSSBOZ2lueCBEb2NrZXIgY29udGFp
bmVyIHdpdGggUHl0aG9uIDMuNyAtIHRlc3RpbmcnIFJVTl9URVNUUz0nJwog
IC0gTkFNRT0ncHl0aG9uMy43LWFscGluZTMuOCcgQlVJTERfUEFUSD0ncHl0
aG9uMy43LWFscGluZTMuOCcgVEVTVF9TVFIxPSdIZWxsbyBXb3JsZCBmcm9t
IEZsYXNrIGluIGEgdVdTR0kgTmdpbnggRG9ja2VyIGNvbnRhaW5lciB3aXRo
IFB5dGhvbiAzLjcgb24gQWxwaW5lIChkZWZhdWx0KScgVEVTVF9TVFIyPSdI
ZWxsbyBXb3JsZCBmcm9tIEZsYXNrIGluIGEgdVdTR0kgTmdpbnggRG9ja2Vy
IGNvbnRhaW5lciB3aXRoIFB5dGhvbiAzLjcgLSB0ZXN0aW5nJyBSVU5fVEVT
VFM9JycKICAtIE5BTUU9J3B5dGhvbjIuNy1pbmRleCcgQlVJTERfUEFUSD0n
cHl0aG9uMi43LWluZGV4JyBURVNUX1NUUjE9J0hlbGxvIFdvcmxkIGZyb20g
Rmxhc2sgaW4gYSB1V1NHSSBOZ2lueCBEb2NrZXIgY29udGFpbmVyIHdpdGgg
UHl0aG9uIDIuNyAoZGVmYXVsdCknIFJVTl9URVNUUz0nMScKICAtIE5BTUU9
J3B5dGhvbjMuNS1pbmRleCcgQlVJTERfUEFUSD0ncHl0aG9uMy41LWluZGV4
JyBURVNUX1NUUjE9J0hlbGxvIFdvcmxkIGZyb20gRmxhc2sgaW4gYSB1V1NH
SSBOZ2lueCBEb2NrZXIgY29udGFpbmVyIHdpdGggUHl0aG9uIDMuNSAoZGVm
YXVsdCknIFJVTl9URVNUUz0nMScKICAtIE5BTUU9J3B5dGhvbjMuNi1pbmRl
eCcgQlVJTERfUEFUSD0ncHl0aG9uMy42LWluZGV4JyBURVNUX1NUUjE9J0hl
bGxvIFdvcmxkIGZyb20gRmxhc2sgaW4gYSB1V1NHSSBOZ2lueCBEb2NrZXIg
Y29udGFpbmVyIHdpdGggUHl0aG9uIDMuNiAoZGVmYXVsdCknIFJVTl9URVNU
Uz0nMScKCnNjcmlwdDoKICAtIGJhc2ggc2NyaXB0cy90ZXN0LnNoCgpqb2Jz
OgogICAgaW5jbHVkZToKICAgICAgLSBzY3JpcHQ6IGJhc2ggc2NyaXB0cy90
ZXN0LnNoCiAgICAgIC0gc3RhZ2U6IGRlcGxveQogICAgICAgIHNjcmlwdDog
c2tpcAogICAgICAgIGRlcGxveToKICAgICAgICAgIHByb3ZpZGVyOiBzY3Jp
cHQKICAgICAgICAgIHNjcmlwdDogYmFzaCBzY3JpcHRzL2J1aWxkLXB1c2gt
YWxsLnNoCiAgICAgICAgICBvbjoKICAgICAgICAgICAgYnJhbmNoOiBtYXN0
ZXIK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'onion',961335,b'C library to create simple HTTP servers and Web Applications.',b'C',47,1580,,91,False,b'https://api.github.com/repos/davidmoreno/onion/forks',"IyBPbmlvbiBodHRwIHNlcnZlciBsaWJyYXJ5CgohW1RyYXZpcyBzdGF0dXNd
KGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9kYXZpZG1vcmVuby9vbmlvbi5zdmc/
YnJhbmNoPW1hc3RlciNzdmcpW1RyYXZpcyBzdGF0dXNdKGh0dHBzOi8vdHJh
dmlzLWNpLm9yZy9kYXZpZG1vcmVuby9vbmlvbikKCiFbQ292ZXJpdHkgc3Rh
dHVzXShodHRwczovL3NjYW4uY292ZXJpdHkuY29tL3Byb2plY3RzLzE4MTUv
YmFkZ2Uuc3ZnI3N2ZylbQ292ZXJpdHkgc3RhdHVzXShodHRwczovL3NjYW4u
Y292ZXJpdHkuY29tL3Byb2plY3RzLzE4MTUpCgoKT25pb24gaXMgYSBDIGxp
YnJhcnkgdG8gY3JlYXRlIHNpbXBsZSBIVFRQIHNlcnZlcnMgYW5kIFdlYiBB
cHBsaWNhdGlvbnMuCgpgbWFzdGVyYCB0aGUgZGV2ZWxvcG1lbnQgYnJhbmNo
LiBDdXJyZW50IHN0YWJsZSBicmFuY2ggaXMgYG9uaW9uLTAtOGAuCgojIyBJ
bnRyb2R1Y3Rpb24KClRoZSB1c2UgY2FzZSBpcyBhbiBleGlzdGluZyBhcHBs
aWNhdGlvbiwgb3IgYSBuZXcgb25lLCB0aGF0IG5lZWRzIHNvbWUgSFRUUCBp
bnRlcmNvbm5lY3Rpb24Kd2l0aCB0aGUgd29ybGQuIEl0IHVzZXMgdGhlIGxp
YnJhcnkgdG8gYWRkIHNvbWUgaGFuZGxlcnMgZm9yIHNwZWNpZmljIFVSTHMg
YW5kIGdlbmVyYXRlIGFuZApzZXJ2ZSB0aGUgZHluYW1pYyBkYXRhIGFzIG5l
ZWRlZC4KCkl0IGFsc28gaGFzIHNlY3VyaXR5IGdvYWxzIChTU0wgc3VwcG9y
dCkgc28gdGhhdCB5b3UganVzdCBjb25jZW50cmF0ZSBvbiB3aGF0IHlvdSB3
YW50CnRvIHNlcnZlLCBhbmQgc2VydmUgaXQuCgpJdHMgbm90IGEgd2ViIHNl
cnZlciBwZXIgc2UsIGFzIGl0IGlzIG5vdCBhbiBleGVjdXRhYmxlLgoKSWYg
eW91IHdhbnQgdG8gY29tcGFyZSB0byBhIHdlYiBzZXJ2ZXIsIGEgd2ViIHNl
cnZlciB3b3VsZCB1c2UgYSBtb2R1bGUgb3IgcGx1Z2luIHRvIGFkZApzb21l
IGZ1bmN0aW9uYWxpdHkuIFdpdGggbGlib25pb24geW91IGhhdmUgdGhlIGZ1
bmN0aW9uYWxpdHkgYW5kIGFkZCB0aGUgd2Vic2VydmVyIGFzIGEgcGx1Z2lu
LgoKVGhlcmUgaXMgYSB3aWtpIGF2YWlsYWJsZSBhdCBodHRwczovL2dpdGh1
Yi5jb20vZGF2aWRtb3Jlbm8vb25pb24vd2lraSwgd2l0aCB1c2VmdWwKaW5m
b3JtYXRpb24gb24gaG93IHRvIGdldCBzdGFydGVkIHVzaW5nIE9uaW9uIGFu
ZCBpdCdzIGludGVybmFsIHdvcmtpbmdzLgoKQVBJIGRvY3VtZW50YXRpb24g
aXMgYXQgaHR0cDovL2NvcmFsYml0cy5jb20vc3RhdGljL29uaW9uLy4KClRo
ZXJlIGlzIGEgbWFpbGluZyBsaXN0IGF0IGh0dHBzOi8vZ3JvdXBzLmdvb2ds
ZS5jb20vYS9jb3JhbGJpdHMuY29tL2ZvcnVtLz9mcm9tZ3JvdXBzPSMhZm9y
dW0vb25pb24tZGV2CgojIyBDb2xsYWJvcmF0ZSEKCllvdSBjYW4sIGFuZCBh
cmUgZW5jb3VyYWdlZCwgdG8gYnJhbmNoIGF0IGdpdGh1YiwgZG93bmxvYWQg
YW5kIHR3ZWFrIG9uaW9uIHRvIHVzZSBpdCBpbiB5b3VyCnByb2plY3RzLgoK
VGhlIGxpYnJhcnkgaXMgZHVhbCBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hl
MiBsaWNlbnNlIGFuZCBHUEx2MissIHNvIHlvdSBjYW4gbWFrZSBhbG1vc3Qg
YW55dGhpbmcKd2l0aCBpdCwgdXNlIGl0IGluIHlvdXIgY29tbWVyY2lhbCBh
bmQgZnJlZSBzb2Z0d2FyZSBwcm9ncmFtcywgYW5kIG1vZGlmeSBpdCB0byB5
b3VyIG5lZWRzLgoKUGxlYXNlIGpvaW4gdGhlIG1haWxpbmcgbGlzdCBhdCBo
dHRwczovL2dyb3Vwcy5nb29nbGUuY29tL2EvY29yYWxiaXRzLmNvbS9ncm91
cC9vbmlvbi1kZXYvdG9waWNzLAp0byBhc2sgeW91ciBxdWVzdGlvbnMgYW5k
IGNvbW1lbnQgb24geW91ciBzdWNjZXNzIHVzaW5nIG9uaW9uLgoKVGhlcmUg
aXMgYWxzbyBhIGJsb2cgdG8ga2VlcCBldmVyeWJvZHkgaW5mb3JtZWQgYWJv
dXQgbmV3cyBvbiBvbmlvbiBhdCBodHRwOi8vYmxvZy5jb3JhbGJpdHMuY29t
Ly4KCiMjIERvd25sb2FkCgpUaGVyZSBhcmUgdGhpcmQgcGFydHkgcGFja2Fn
ZXMgYXZhaWxhYmxlOgoKICogUlBNIGJhc2VkOiBodHRwOi8vc29mdHdhcmUu
b3BlbnN1c2Uub3JnL2Rvd25sb2FkLmh0bWw/cHJvamVjdD1ob21lJTNBZG1v
cmVubyZwYWNrYWdlPW9uaW9uCiAqIFJhc3BiZXJyeSBwaTogaHR0cDovL3Bh
Y2thZ2VzLmFpc295LmNvbS9kZWJpYW4vcG9vbC91bnN0YWJsZS9saWJvL2xp
Ym9uaW9uLwogKiBBcmNoIExpbnV4OiBodHRwczovL2F1ci5hcmNobGludXgu
b3JnL3BhY2thZ2VzL2xpYm9uaW9uLWdpdC8KCklmIHlvdSBrbm93IG9mIGFu
eSBvdGhlciBwYWNrYWdlZCB2ZXJzaW9uLCBwbGVhc2Ugc2VuZCBtZSBhIG5v
dGUuCgpBcyBhbHdheXMgdGhleSBtYXkgYmUgb3V0ZGF0ZWQsIGlmIHlvdSB3
YW50IHRoZSBsYXRlc3QgYW5kIGdyZWF0ZXN0LCBkbyBhIG1hbnVhbCBjb21w
aWxlIGFuZCBpbnN0YWxsLgoKVGhhbmtzIHRvIFJ1ZWRpZ2VyIE1laWVyIGZv
ciBoZWxwaW5nIGZvciBzbyBsb25nIHdpdGggdGhlIFJQTSBwYWNrYWdlcy4K
CiMjIENvbXBpbGUgYW5kIEluc3RhbGwKCk1hbnVhbCBjb21waWxlIGFuZCBp
bnN0YWxsOgoKYGBgYmFzaAogICAgICQgZ2l0IGNsb25lIGdpdEBnaXRodWIu
Y29tOmRhdmlkbW9yZW5vL29uaW9uLmdpdAogICAgICQgY2Qgb25pb24KICAg
ICAkIG1rZGlyIGJ1aWxkCiAgICAgJCBjZCBidWlsZAogICAgICQgY21ha2Ug
Li4KICAgICAkIG1ha2UKICAgICAkIHN1ZG8gbWFrZSBpbnN0YWxsCmBgYAoK
VG8gY29tcGlsZSB3aXRoIGRlYnVnZ2luZyBlbmFibGVkLCB1c2UKCmBgYGJh
c2gKICAgICQgY21ha2UgLURDTUFLRV9CVUlMRF9UWVBFPURlYnVnIC4uCmBg
YAoKVG8gcnVuIHdpdGggc29tZSBkZWJ1ZyBtZXNzYWdlcywgc2V0IHRoZSBP
TklPTl9ERUJVRyBhbmQvb3IKT05JT05fREVCVUcwIGVudmlyb25tZW50IHZh
cmlhYmxlIGNvbnRhaW5pbmcgc29tZSBzb3VyY2UgZmlsZSBuYW1lcywKZS5n
LgoKYGBgYmFzaAogICAgJCBleHBvcnQgT05JT05fREVCVUcwPSdyZXF1ZXN0
LmMgdXJsLmMnCmBgYAoKIyMgRGVwZW5kZW5jaWVzCgpSZXF1aXJlZDoKCiog
QyBjb21waWxlcgoqIGNtYWtlCiogbWFrZQoqIE9uZSBvZjoKICAtIGVwb2xs
IChMaW51eCkKICAtIFtsaWJldmVudF0oaHR0cDovL2xpYmV2ZW50Lm9yZy8p
IChNdWx0aWFyY2gpCiAgLSBbbGliZXZdKGh0dHBzOi8vZ2l0aHViLmNvbS9l
bmtpL2xpYmV2KSAoTXVsdGlhcmNoKQoKClRoaXMgY29tcGlsZXJzIGFuZCBt
aW5pbXVtIHZlcnNpb25zIGFyZSBrbm93biB0byB3b3JrOgoKKiBMaW51eDoK
ICAqIEdDQyA0LjQKICAqIGNsYW5nIDMuMAoKRm9yIHRoZSBDKysgYmluZGlu
Z3MgYSBDKysxMSBjb21waWxlciBpcyBuZWVkZWQ6CgoqIExpbnV4OgogICog
R0NDIDQuOAogICogY2xhbmcgMy43CgpPcHRpb25hbDsgT25pb24gd2lsbCBj
b21waWxlIGJ1dCBzb21lIGZ1bmN0aW9uYWxpdHkgd2lsbCBub3QgYmUgYXZh
aWxhYmxlOgoKKiBnbnV0bHMgYW5kIGdjcnlwdCAoU1NMIHN1cHBvcnQpCiog
cHRocmVhZHMgKHRocmVhZGluZyBzdXBwb3J0KQoqIGxpYnhtbDIgKFdlYkRB
ViBzdXBwb3J0KQoqIGxpYnBhbSAoSFRUUCBCYXNpYyBBdXRoIHN1cHBvcnQg
dXNpbmcgUEFNKQoqIEMrKyBjb21waWxlcgoqIFN5c3RlbWQgKHN1cHBvcnQg
Zm9yIGxpc3RlbmluZyBvbiBzeXN0ZW1kIHNvY2tldHMpCiogc3FsaXRlMyAo
c3FsaXRlMyBzZXNzaW9uIGJhY2tlbmQpCiogaGlyZWRpcyAoUmVkaXMgc2Vz
c2lvbiBiYWNrZW5kKQoKT3B0aW9uYWwgZm9yIGV4YW1wbGVzOgoKKiBjYWly
bwoqIGxpYnBuZzIKKiBib2VobSBnYwoqIGxpYmpwZWcKCiMjIFNlbWFudGlj
IHZlcnNpb25pbmcuCgpTdGFydGluZyB3aXRoIE9uaW9uIDAuOC4wLCB3ZSB1
c2Ugc2VtYW50aWMgdmVyc2lvbmluZywgbWFraW5nIHRoZSBmb2xsb3dpbmcK
cHJvbWlzZXM6CgoqIFZlcnNpb24gZm9ybWF0IGlzIFtNQUpPUl0uW01JTk9S
XS5bUEFUQ0hdLgoqIE9ubHkgbWFrZSBBUEkgYW5kIEFCSSBjaGFuZ2VzIGF0
IG1ham9yIHZlcnNpb25zLiBDYW4gYWRkIGZ1bmN0aW9uYWxpdGllcyBhdAog
IG1pbm9yIHJlbGVhc2VzLgoqIE9ubHkgcmVtb3ZlIEFQSSBmdW5jdGlvbnMg
YXQgbWFqb3IgdmVyc2lvbnMuIE5vIGNoYW5nZXMgaW4gc2VtYW50aWNzIG5l
dmVyLgoqIE1pbm9yIHZlcnNpb25zIGFyZSBhbHdheXMgQUJJIGJhY2stY29t
cGF0aWJsZS4gVGhpcyBtZWFucyB0aGF0IGlmIHlvdSBjb21waWxlZAogIHdp
dGggYSBwcmV2aW91cyBtaW5vciB2ZXJzaW9uIGFuZCBzYW1lIG1ham9yIHZl
cnNpb24sIGl0IHdpbGwgc3RpbGwgY29tcGlsZQogIGFuZCB3b3JrLgoqIE9u
bHkgYWRkIEFQSSBmdW5jdGlvbnMgYXQgbWlub3IgdmVyc2lvbnMuCiogT25s
eSBmaXggcGF0Y2hlcyBhIHBhdGNoIHJldmlzaW9ucy4KClBhdGNoIHJldmlz
aW9ucyBhcmUgaXMgYSBub24gc2VxdWVudGlhbCBudW1iZXIsIHNvIGFmdGVy
IDAuOC4wIGlzIG5vdCAwLjguMSwgYnV0Cm1heWJlIDAuOC4yMy4gSXQgd2ls
bCBhbHdheXMgaW5jcmVhc2UuCgpDaGVjayBgb25pb24vdmVyc2lvbi5oYCBm
b3IgbW9yZSBpbmZvcm1hdGlvbiBvbiB2ZXJzaW9uIGNvbnRyb2wuCgojIyBT
U0wgU3VwcG9ydAoKSWYgYXQgY29tcGlsZSB0aW1lIHRoZSBidWlsZCBzY3Jp
cHQgZmluZHMgdGhlIGdudXRscyBsaWJyYXJpZXMsIFNTTCBzdXBwb3J0IHdp
bGwgYmUgY29tcGlsZWQgaW4uIEl0IGNhbiBiZQpkZWFjdGl2YXRlZCBhbnl3
YXkgYXQgLi9DTWFrZUxpc3RzLnR4dC4KClRvIHVzZSBpdCB5b3UgaGF2ZSB0
byBzZXQgdGhlIGNlcnRpZmljYXRlcywgYW5kIHlvdSBjYW4gY2hlY2sgaWYg
aXRzIG9uLCBjaGVja2luZyB0aGUgZmxhZwpPX1NTTF9BQ1RJVkFURUQuCgpJ
ZiBzdXBwb3J0IGlzIG5vdCBjb21waWxlZCBpbiwgdGhlbiB0aGUgbGlicmFy
eSB3aWxsIG5vdCB1c2UgU1NMLCBidXQgZm9yIHRoZSB1c2VyIG9mIHRoZSBs
aWJyYXJ5IHRoZQppbnRlcmZhY2UgaXMgdGhlIHNhbWU7IGl0IHdpbGwgb25s
eSBjaGFuZ2UgdGhhdCB3aGVuIHRyeWluZyB0byBzZXQgdGhlIGNlcnRpZmlj
YXRlcyBpdAp3aWxsIGZhaWwuIEFud3lheSBmb3IgY2xpZW50cyBpdHMganVz
dCB0byB1c2UgdGhlIGludGVyZmFjZSBhbmQgdGhleSBkb250IGNhcmUgYXQg
YWxsCmlmIHN1cG9ydCBpcyBpbiBvciBub3QuIE5vIG1vcmUgdGhhbiBiZWlu
ZyBhYmxlIHRvIHVzZSBTU0wuCgpUaGlzIGlzIG5vdCBtYW5kYXRvcnkgYmVj
YXVzZSB0aGVyZSBtYXkgYmUgbW9tZW50cyB3aGVuIHRoZSBwcm9ncmFtJ3Mg
dXNlcnMgZG8gbm90CndhbnQgdG8gc3VwcG9ydCBTU0wgZm9yIHdoYXRldmVy
IHJlYXNvbnMsIGZvciBleGFtcGxlIHNwZWVkLgoKCiMjIFRocmVhZHMgc3Vw
cG9ydAoKQ3VycmVudGx5IHRoZXJlIGFyZSB0d28gdGhyZWFkaW5nIG1vZGVz
LiBJdCBjYW4gYmUgc2V0IHNvIHRoZSBzZXJ2ZXIgaXMgY3JlYXRlZCBhcwp0
aHJlYWRlZCAoT19USFJFQURFRCksIGFuZCBpdCB3aWxsIGNyZWF0ZSBhIG5l
dyB0aHJlYWQgcGVyIGNvbm5lY3Rpb24uIFRoZXJlIGlzIG5vCmRhdGEgcHJv
dGVjdGlvbiBhcyBvbiB0aGUgbGlzdGVuIHBoYXNlIHRoZXJlIHNob3VsZCBu
b3QgYmUgYW55IGNoYW5nZSB0byBvbmlvbiBzdHJ1Y3R1cmVzLgoKTmV2ZXJ0
aGVsZXNzIGlmIG5ldyBoYW5kbGVycyBhcmUgY3JlYXRlZCB0aGV5IG11c3Qg
c2V0IHRoZWlyIG93biB0aHJlYWRpbmcgc3VwcG9ydAphcyBuZWNjZXNhcnku
CgpJdCBjYW4gYmUgZGVhY3RpdmF0ZWQgYXQgQ01ha2VMaXN0cy50eHQuIElm
IG5vIHB0aHJlYWRzIGxpYiBpcyBmb3VuZCBvbiB0aGUgc3lzdGVtLCBpdApp
cyBub3QgY29tcGlsZWQgaW4uCgpBbHNvIHdoZW4gdGhyZWFkIHN1cHBvcnQg
aXMgb24sIG9uaW9uIHNlcnZlciBjYW4gYmUgc2V0IHRvIHdvcmsgb24gYW5v
dGhlciAobm9uLW1haW4pIHRocmVhZC4KVGhpcyBpcyBpbmRlcGVuZGFudCBm
cm9tIE9fVEhSRUFERUQgb3BlcmF0aW9uOyBpdCBjYW4gaGF2ZSBvbmUgdGhy
ZWFkIHdpdGggeW91ciBub3JtYWwKYXBwbGljYXRpb24gYW5kIGFub3RoZXIg
dGhyZWFkIHRoYXQgbGlzdGVucyBhbmQgcHJvY2Vzc2VzIHdlYi1yZXF1ZXN0
cy4gSXRzIHNldCB3aXRoIHRoZQpPX0RFVEFDSF9MSVNURU4gZmxhZy4gVGhp
cyBpcyB2ZXJ5IHVzZWZ1bCB3aGVuIGFkZGluZyBhbiBleHRyYSB3ZWIgc2Vy
dmVyIHRvIHlvdXIgYXBwbGljYXRpb24Kc28gaXQgY2FuIGJlIGFkZGVkIHdp
dGhvdXQgY2hhbmdlcyB0byB0aGUgZmxvdyBvZiB5b3VyIGFwcGxpY2F0aW9u
LCBidXQgeW91IHdpbGwgbmVlZCB0bwp0aHJlYWQgcHJvdGVjdCB5b3VyIGRh
dGEgaWYgeW91IGFjY2VzcyB0byBpdCBmcm9tIHRoZSB3ZWIgc2VydmVyLgoK
RmluYWxseSB0aGVyZSBpcyBhIHBvb2wgbW9kZS4gVXNlcnMgY2FuIHNldCBh
IGRlZmF1bHQgbnVtYmVyIG9mIHRocmVhZHMgKG9uaW9uX3NldF9tYXhfdGhy
ZWFkcyksCmFuZCB1c2luZyBlcG9sbCB0aGUgZGF0YSBpcyBnaXZlbiB0byB0
aGUgdGhyZWFkcy4gVGhpcyBpcyB0aGUgaGlnaGVzdCBwZXJmb3JtYW50IG1l
dGhvZCwgd2l0aAp1cCB0byAzMGsgd2ViLXJlcXVlc3RzIHNlcnZlZCBvbiBh
IEludGVsKFIpIENvcmUoVE0pMiBEdW8gQ1BVIFQ2NTAwICBAMi4xMEdIei4K
CgojIyBDdXN0b21pemluZyBsb3ctbGV2ZWwgYWxsb2NhdGlvbiBhbmQgdGhy
ZWFkcwoKU29tZXRpbWVzIGl0IG1heSBiZSBuZWVkZWQgdG8gY3VzdG9taXpl
IG1lbW9yeSBhbGxvY2F0aW9uIGFuZC9vcgp0aHJlYWRzIG9wZXJhdGlvbi4g
IFRoaXMgY291bGQgYmUgdXNlZnVsIHdoZW4gdXNpbmcgYW4gYWx0ZXJuYXRp
dmUKbWFsbG9jLCBvciBpZiB5b3Ugd2FudGVkIHRvIHVzZSBIYW5zIEJvZWht
J3MgY29uc2VydmF0aXZlIGdhcmJhZ2UKY29sbGVjdG9yIGZyb20gaHR0cDov
L3d3dy5oYm9laG0uaW5mby9nYy8gZS5nLiBpZiB5b3UgdXNlIEdOVQpndWls
ZS4gVGhlbiB5b3UgbmVlZCB0byBkZWZpbmUgeW91ciBvd24gbWVtb3J5IHJv
dXRpbmVzIGFuZCBwYXNzIHRoZW0KdG8gYG9uaW9uX2xvd19pbml0aWFsaXpl
X21lbW9yeV9hbGxvY2F0aW9uYCBiZWZvcmUgYW55IG90aGVyIGNhbGxzIHRv
Cm9uaW9uLiBMaWtld2lzZSwgdG8gY3VzdG9taXplIHRocmVhZHMgb3BlcmF0
aW9ucywgY2FsbApgb25pb25fbG93X2luaXRpYWxpemVfdGhyZWFkc2AuICBT
ZWUgY29tbWVudHMgaW4gaGVhZGVyIGZpbGUgYGxvdy5oYC4gQQpwcm9ncmFt
IHVzaW5nIE9uaW9uIGFuZCBCb2VobSdzIEdDIHNob3VsZCBmaXJzdCBkZWZp
bmUgYSBtZW1vcnkKZmFpbHVyZSByb3V0aW5lIHdoaWNoIHNob3VsZCBuZXZl
ciByZXR1cm46CgpgYGBDCiAgICAvKiB0aGUgbWVtb3J5IGZhaWx1cmUgcm91
dGluZSBzaG91bGQgbmV2ZXIgcmV0dXJuISAqLwogICAgc3RhdGljIHZvaWQg
bWVtb3J5X2ZhaWx1cmUoY29uc3QgY2hhciptc2cpIHsKICAgICAgcGVycm9y
KG1zZyk7CiAgICAgIGV4aXQoRVhJVF9GQUlMVVJFKTsKICAgIH07CmBgYAoK
VGhlbiwgeW91ciBwcm9ncmFtICh1c2luZyBib3RoIG9uaW9uIGFuZCBCb2Vo
bSdzIEdDKSBzaG91bGQgaW5pdGlhbGl6ZQpib3RoIG1lbW9yeSByb3V0aW5l
cyBhbmQgdGhyZWFkcywgbGlrZToKCmBgYEMKICAgIG9uaW9uX2xvd19pbml0
aWFsaXplX21lbW9yeV9hbGxvY2F0aW9uCiAgICAgIChHQ19tYWxsb2MsICBH
Q19tYWxsb2NfYXRvbWljLCAgR0NfY2FsbG9jLAogICAgICAgR0NfcmVhbGxv
YywgR0Nfc3RyZHVwLCBHQ19mcmVlLAogICAgICAgbWVtb3J5X2ZhaWx1cmUp
OwogICAgb25pb25fbG93X2luaXRpYWxpemVfdGhyZWFkcwogICAgICAoR0Nf
cHRocmVhZF9jcmVhdGUsIEdDX3B0aHJlYWRfam9pbiwKICAgICAgIEdDX3B0
aHJlYWRfY2FuY2VsLCBHQ19wdGhyZWFkX2RldGFjaCwKICAgICAgIEdDX3B0
aHJlYWRfZXhpdCwgR0NfcHRocmVhZF9zaWdtYXNrKTsKYGBgCgpZb3UgbWln
aHQgbmVlZCB0byBkZWZpbmUgeW91ciBgR0NfY2FsbG9jYCB1c2luZyBgR0Nf
bWFsbG9jYCBhbmQKYG1lbXNldGAgaWYgeW91ciB2ZXJzaW9uIG9mIEJvZWht
J3MgR0MgZG9uJ3QgcHJvdmlkZSBpdC4gQWZ0ZXIgdGhlc2UKbG93LWxldmVs
IGluaXRpYWxpemF0aW9uIHlvdSBjYW4gdXNlIE9uaW9uIGFzIHVzdWFsLgoK
WW91IGNvdWxkIGFsc28gd2FudCB0byBjYWxsIGp1c3QgYG9uaW9uX2xvd19p
bml0aWFsaXplX3RocmVhZHNgIGlmIHlvdQp3YW50ZWQgdG8gbmFtZSB0aHJl
YWRzIGNyZWF0ZWQgYnkgdGhlIG9uaW9uIGxpYnJhcnkgKHVzaW5nCmBwdGhy
ZWFkX3NldG5hbWVfbnBgIG9uIExpbnV4KSBhbmQvb3IgY2hhbmdlIHRoZWly
IHByaW9yaXR5ICh1c2luZwpgcHRocmVhZF9zZXRzY2hlZHByaW9gKSwgZXRj
LgoKCiMjIEFSTSBTdXBwb3J0CgpJdCBjYW4gYmUgY3Jvc3MgY29tcGlsZWQg
Zm9yIEFSTSBkaXJlY3RseSBmcm9tIGNtYWtlLiBKdXN0IGRvOgoKYGBgYmFz
aAoJJCBta2RpciBhcm0KCSQgY2QgYXJtCgkkIGNtYWtlIC4uIC1EQ01BS0Vf
VE9PTENIQUlOX0ZJTEU9Li4vdG9vbGNoYWluL2FybS50eHQKCSQgbWFrZQpg
YGAKCkl0IG5lZWRzIHRoZSBjdXJyZW50IHN5c3RlbSBvcGFjayBhbmQgb3Rl
bXBsYXRlIHRvIGNvbXBpbGUgc29tZSBleGFtcGxlcywgc28gaWYgeW91IHdh
bnQgdG8gdXNlCnRoZSBleGFtcGxlcyBvbiB5b3VyIGluc3RhbGF0aW9uLCBj
b21waWxlIGFuZCBpbnN0YWxsIGxpYm9uaW9uIGZvciB0aGUgY3VycmVudCBz
eXN0ZW0gZmlyc3QuCgpUZXN0ZWQgb24gdWJ1bnR1IDEwLjEwLCB3aXRoIGdj
Yy00LjUtYXJtLWxpbnV4LWdudWVhYmkgYW5kIGcrKy00LjUtYXJtLWxpbnV4
LWdudWVhYmkgaW5zdGFsbGVkLgoKCiMjIFRlbXBsYXRpbmcgc3VwcG9ydAoK
U3RhcnRpbmcgb24gMC4zLjAgZGV2ZWxvcG1lbnQgb25pb24gaGFzIHRlbXBs
YXRpbmcgc3VwcG9ydCB2aWEgb3RlbXBsYXRlLiBJdCBpcyBhIHRlbXBsYXRl
CnN5c3RlbSBzaW1pbGFyIHRvIGRqYW5nbyB0ZW1wbGF0ZXMgKGh0dHA6Ly9k
b2NzLmRqYW5nb3Byb2plY3QuY29tL2VuL2Rldi90b3BpY3MvdGVtcGxhdGVz
LykuCgpDaGVjayBtb3JlIGluZm9ybWF0aW9uIG9uIGhvdyB0byB1c2UgdGhl
bSBhdCB0b29scy9vdGVtcGxhdGUvUkVBRE1FLnJzdC4KCiMjIEkxOE4KClRo
ZXJlIGlzIEkxOE4gc3VwcG9ydC4gQ2hlY2sgd2lraSBmb3IgZGV0YWlscyBv
ciBmaWxlc2VydmVyX290ZW1wbGF0ZSBleGFtcGxlLgoKIyMgU3lzdGVtZAoK
U3lzdGVtZCBpcyBpbnRlZ3JhdGVkLiBJZiB3YW50IHRvIHVzZSBpdCwganVz
dCBwYXNzIHRoZSBmbGFnIE9fU1lTVEVNRCB0byB0aGUgb25pb25fbmV3KCku
CgpPdGVybSBoYXMgZXhhbXBsZSBzb2NrZXQgYW5kIHNlcnZpY2UgZmlsZXMg
Zm9yIG90ZXJtIHN1cHBvcnQuCgojIyBGcmVlQlNEL0RhcndpbgoKU2luY2Ug
c2VwdGVtYmVyIDIwMTMgdGhlcmUgaXMgc3VwcG9ydCBmb3IgRnJlZUJTRCB1
c2luZyBsaWJldiBvciBsaWJldmVudC4gVGhpcyB3b3JrIGlzIG5vdCBhcyB0
ZXN0ZWQKYXMgdGhlIExpbnV4IHZlcnNpb24sIGJ1dCBpZiBzb21lIGNvbXBp
bGF0aW9uIGVycm9yIGFyaXNlcywgcGxlYXNlIHNlbmQgdGhlIGJ1ZyByZXBv
cnQgYW5kIHdlIHdpbGwgZml4Cml0IEFTQVAuCgpPU1gvRGFyd2luIHN1cHBv
cnQgaXMgYWxzbyBhdmFpbGFibGUgb24gdGhlIGRhcndpbiBicmFuY2guCgpP
bmNlIHRoaXMgd29yayBzdGFiaWxpemVzIGl0IHdpbGwgYmUgbWVyZ2VkIGJh
Y2sgdG8gbWFzdGVyLgoKIyMgRW52aXJvbm1lbnQgdmFyaWFibGVzCgpZb3Ug
Y2FuIHNldCB0aGUgZm9sbG93aW5nIGVudmlyb25tZW50IHZhcmlhYmxlcyAt
ZS5nLiB3aXRoIHRoZSBleHBvcnQgYnVpbHRpbiBvZiBiYXNoLSB0byBtb2Rp
ZnkgcnVudGltZSBiZWhhdmlvdXIgb2Ygb25pb246CgoqIE9OSU9OX0xPRwoK
ICAtIG5vaW5mbyAgIC0tIERpc2FibGVzIGFsbCBpbmZvIG91dHB1dCB0byB0
aGUgY29uc29sZSwgdG8gYWNoaWV2ZSBmYXN0ZXIgcmVzdWx0cwogIC0gbm9j
b2xvciAgLS0gRGlzYWJsZSBjb2xvciB1c2UgYnkgdGhlIGxvZwogIC0gbm9k
ZWJ1ZyAgLS0gRG8gbm90IHNob3cgZGVidWcgbGluZXMKICAtIHN5c2xvZyAg
IC0tIExvZyB0byBzeXNsb2cuIENhbiBiZSBjaGFuZ2VkIHByb2dyYW1hdGlj
YWxseSB0b28sIHdpdGggdGhlIG9uaW9uX2xvZyBnbG9iYWwgZnVuY3Rpb24u
CgoqIE9OSU9OX0RFQlVHMCAgIC0tIFNldCB0aGUgZmlsZW5hbWUgb2YgYSBj
IHNvdXJjZSBmaWxlLCBhbmQgREVCVUcwIGxvZyBtZXNzYWdlcyBhcmUgd3Jp
dHRlbi4gVGhpcyBpcyBub3JtYWxseSB2ZXJ5IHZlcmJvc2UuCiogT05JT05f
U0VOREZJTEUgLS0gU2V0IHRvIDAgZG8gZGlzYWJsZSBzZW5kZmlsZS4gVW5k
ZXIgc29tZSBmaWxlIHN5c3RlbXMgaXQgZG9lcyBub3Qgd29yay4gVW50aWwg
YSBkZXRlY3Rpb24gY29kZSBpcyBpbiBwbGFjZSwgaXQgY2FuIGJlIGRpc2Fi
bGVkIHdpdGggdGhpcy4KCiMjIEJpbmFyeSBjb21wYXRpYmlsaXR5IGJyZWFr
cwoKV2UgdHJ5IGhhcmQgdG8ga2VlcCBiaW5hcnkgY29tcGF0aWJpbGl0eSwg
YnV0IHNvbWV0aW1lcyBpdHMgaGFyZC4gSGVyZSBpcyBhIGxpc3Qgb2YgQUJJ
IGJyZWFrczoKCiMjIyAwLjQuMAoKKiBPbmlvbiBvYmplY3QgcHJpdmF0ZSBm
bGFncyBoYXZlIG1vdmVkLiBJZiBvbiB5b3VyIGNvZGUgeW91IHJlbHkgb24g
dGhlbSwgbXVzdCByZWNvbXBpbGUuIElmCiAgZG9udCByZWx5IG9uIHRoZW0s
IGV2ZXJ5dGhpbmcgc2hvdWxkIGtlZXAgd29ya2luZy4K
",,1580,"bGFuZ3VhZ2U6IGNwcAoKY29tcGlsZXI6CiAgLSBnY2MKICAtIGNsYW5nCgpz
dWRvOiBmYWxzZQoKZ2l0OgogIGRlcHRoOiAxCgphZGRvbnM6CiAgYXB0Ogog
ICAgc291cmNlczoKICAgICAgLSB1YnVudHUtdG9vbGNoYWluLXItdGVzdAog
ICAgcGFja2FnZXM6CiAgICAgIC0gZysrLTUKICAgICAgLSBnY2MtNQogICAg
ICAtIGxpYmhpcmVkaXMtZGV2CgpzY3JpcHQ6CiAgIyBtYWtlIGRpc3RjaGVj
ayBzdGlsbCBkb2VzIG5vdCB3b3JrIG9uIHRyYXZpcwogIC0gbWtkaXIgYnVp
bGQKICAgICYmIGNkIGJ1aWxkCiAgICAmJiBjbWFrZSAuLgogICAgICAgLURD
TUFLRV9DX0ZMQUdTPSItV2Vycm9yIgogICAgICAgLURDTUFLRV9DWFhfRkxB
R1M9Ii1XZXJyb3IiCiAgICAmJiBtYWtlIFZFUkJPU0U9MQogICAgJiYgKG1h
a2UgdGVzdCB8fCB0cnVlKQo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'scripted',6160121,b'The Scripted code editor',b'JavaScript',114,1580,,155,False,b'https://api.github.com/repos/scripted-editor/scripted/forks',"IyBXZWxjb21lIHRvIFNjcmlwdGVkCgpbIVtCdWlsZCBTdGF0dXNdKGh0dHBz
Oi8vdHJhdmlzLWNpLm9yZy9zY3JpcHRlZC1lZGl0b3Ivc2NyaXB0ZWQucG5n
P2JyYW5jaD1tYXN0ZXIpXShodHRwczovL3RyYXZpcy1jaS5vcmcvc2NyaXB0
ZWQtZWRpdG9yL3NjcmlwdGVkKQoKIyMgV2hhdCBpcyBTY3JpcHRlZD8KClNj
cmlwdGVkIGlzIGEgZmFzdCBhbmQgbGlnaHR3ZWlnaHQgY29kZSBlZGl0b3Ig
d2l0aCBhbiBpbml0aWFsIGZvY3VzIG9uIEphdmFTY3JpcHQgZWRpdGluZy4K
U2NyaXB0ZWQgaXMgYSBicm93c2VyIGJhc2VkIGVkaXRvciBhbmQgdGhlIGVk
aXRvciBpdHNlbGYgaXMgc2VydmVkIGZyb20gYSBsb2NhbGx5IHJ1bm5pbmcg
Tm9kZS5qcwpzZXJ2ZXIgaW5zdGFuY2UuICAKCjxjZW50ZXI+CjxpbWcgc3Jj
PSJodHRwOi8vZGlzdC5zcHJpbmdzb3VyY2Uub3JnL3JlbGVhc2UvU0NSSVBU
RUQvc2NyZWVuc2hvdDIucG5nIiB3aWR0aD0iNzM2IiBoZWlnaHQ9IjQ1MSIv
Pgo8L2NlbnRlcj4KCldoYXQgYXJlIHRoZSBrZXkgZmVhdHVyZXM/CgotIEZh
c3Qgc3RhcnR1cCwgbGlnaHR3ZWlnaHQuCi0gU3ludGF4IGhpZ2hsaWdodGlu
ZyBmb3IgSmF2YVNjcmlwdCwgSFRNTCBhbmQgQ1NTLgotIEVycm9ycyBhbmQg
d2FybmluZ3M6IAoJLSBKU0hpbnQgaXMgaW50ZWdyYXRlZCB0byBwcm92aWRl
IGVycm9yL3dhcm5pbmcgbWFya2VycyBvbiBKYXZhU2NyaXB0IGNvZGUuCgkt
IEFNRCBhbmQgQ29tbW9uSlMgbW9kdWxlIHJlc29sdXRpb246IHRoZXJlIGlz
IGJhc2ljIHJlc29sdXRpb24gd2hlcmUgdW5yZXNvbHZlZCByZWZlcmVuY2Vz
IHdpbGwgYmUgbWFya2VkIGFzIGVycm9ycy4KLSBDb250ZW50IGFzc2lzdDoK
CS0gQmFzaWMgY29udGVudCBhc3Npc3QgZm9yIEhUTUwsIENTUwoJLSBGb3Ig
SmF2YVNjcmlwdCwgY29udGVudCBhc3Npc3QgaXMgZHJpdmVuIGJ5IGEgdHlw
ZSBpbmZlcmVuY2luZyBlbmdpbmUgd2hpY2ggaXMgYXdhcmUgb2YgQU1EL0Nv
bW1vbkpTIG1vZHVsZSAKZGVwZW5kZW5jaWVzIGFuZCBhbHNvIHVzZXMgSlNE
b2MgY29tbWVudHMgdG8gaGVscCBpdCB1bmRlcnN0YW5kIHRoZSBjb2RlLgot
IEhvdmVyczogaG92ZXJpbmcgb3ZlciBhIEphdmFTY3JpcHQgaWRlbnRpZmll
ciB3aWxsIGJyaW5nIHVwIHRoZSBpbmZlcnJlZCB0eXBlIHNpZ25hdHVyZS4K
LSBOYXZpZ2F0aW9uOiAKCS0gcHJlc3MgRjggb24gYW4gaWRlbnRpZmllciAo
dGhhdCB0aGUgaW5mZXJlbmNlciBoYXMgcmVjb2duaXplZCkgYW5kIHRoZSBl
ZGl0b3Igd2lsbCBuYXZpZ2F0ZSB0byB0aGUgZGVjbGFyYXRpb24uCgktIHRo
aXMgYWxzbyB3b3JrcyBvbiBtb2R1bGUgaWRlbnRpZmllcnMgKGUuZy4gaW4g
YGRlZmluZSgpYCBjbGF1c2VzKQotIEZvcm1hdHRpbmc6IEpTYmVhdXRpZnkg
aXMgaW50ZWdyYXRlZAotIFNpZGVwYW5lbDogYWxvbmdzaWRlIHRoZSBtYWlu
IGVkaXRvciBhIHNpZGVwYW5lbCBjYW4gYmUgb3BlbmVkIC0gY3VycmVudGx5
IHRoaXMgY2FuIGJlIHVzZWQgdG8gaG9zdCBhIHNlY29uZCBlZGl0b3IuCi0g
S2V5IGJpbmRpbmcgdG8gZXh0ZXJuYWwgY29tbWFuZDogS2V5IGJpbmRpbmdz
IGluIHRoZSBlZGl0b3IgY2FuIGludm9rZSBleHRlcm5hbCBjb21tYW5kcyAo
bGVzcywgbXZuLCBldGMpCgpUaGUgZWRpdG9yIGlzIGFjdHVhbGx5IHRoZSBb
RWNsaXBzZSBPcmlvbl0oaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9vcmlvbi8p
IGVkaXRvciB3aXRoIGEgZmV3IGFkZGl0aW9uYWwgYmVsbHMgYW5kIHdoaXN0
bGVzLgpBbnlvbmUgZmFtaWxpYXIgd2l0aCBlZGl0aW5nIGluIEVjbGlwc2Ug
d2lsbCBpbW1lZGlhdGVseSBrbm93IG1hbnkgb2YgdGhlIGtleSBiaW5kaW5n
cwp0aGUgU2NyaXB0ZWQgZWRpdG9yIHN1cHBvcnRzLgoKTWFueSBvZiB0aGVz
ZSBhcmUgY292ZXJlZCBpbiB0aGlzIGludHJvZHVjdG9yeSBzY3JlZW5jYXN0
Ojxicj4KPGEgaHJlZj0iaHR0cDovL2Rpc3Quc3ByaW5nc291cmNlLm9yZy9y
ZWxlYXNlL1NDUklQVEVEL1NjcmlwdGVkMi5tb3YiPjxpbWcgYWxpZ249ImNl
bnRlciIgc3JjPSJodHRwOi8vZGlzdC5zcHJpbmdzb3VyY2Uub3JnL3JlbGVh
c2UvU0NSSVBURUQvcG9zdGVyU2NyaXB0ZWQyLnBuZyIgd2lkdGg9IjQyOCIg
aGVpZ2h0PSIyNjMiLz48L2E+CgojIEhvdyBkbyBJIHRyeSBpdCBvdXQ/CgpU
aGUgb25seSBwcmUtcmVxIGZvciB0cnlpbmcgaXQgb3V0IGlzIHRoYXQgeW91
IGhhdmUgTm9kZS5qcyBpbnN0YWxsZWQuIEdyYWIgaXQgZnJvbSBoZXJlOiBb
aHR0cDovL25vZGVqcy5vcmcvXShodHRwOi8vbm9kZWpzLm9yZykuClRoZSB0
ZWFtIGhhcyBiZWVuIHRlc3Rpbmcgd2l0aCBhIHJhbmdlIG9mIHZlcnNpb25z
IGZyb20gMC42IHRvIDAuOCBidXQgaGF2ZW4ndCB0ZXN0ZWQgYWxsIG9mIHRo
ZW0gZXhoYXVzdGl2ZWx5LiBJdCBpcyByZWNvbW1lbmRlZAp0aGF0IHlvdSB0
cnkgdG8gdXNlIHRoZSBsYXRlc3QgKDAuOC4xNiBhdCB0aW1lIG9mIHdyaXRp
bmcpLgoKIyMjIEluc3RhbGxpbmcgdGhlIG1vc3QgcmVjZW50IHJlbGVhc2Ug
dmlhIG5wbQoKICAgIG5wbSBpbnN0YWxsIC1nIHNjcmlwdGVkCgoocG9zc2li
bHkgd2l0aCBhIGBzdWRvYCBwcmVmaXggb24gbGludXgvbWFjKS4gVGhpcyB3
aWxsIGluc3RhbGwgdGhlIG1vc3QgcmVjZW50bHkgcHVibGlzaGVkIHJlbGVh
c2UuIFRoZXJlIGFyZSBubyBmdXJ0aGVyIHN0ZXBzIGlmIGluc3RhbGxpbmcg
dmlhIHRoaXMgcm91dGUgYW5kIGBzY3JgIGNvbW1hbmQgd2lsbCBpbW1lZGlh
dGVseSBiZSBhdmFpbGFibGUgdG8gbGF1bmNoIFNjcmlwdGVkLgoKIyMjIElu
c3RhbGxpbmcgdGhlIHZlcnkgbGF0ZXN0IGNvZGUgdmlhIG5wbQoKVGhpcyB3
aWxsIGluc3RhbGwgZGlyZWN0bHkgZnJvbSBtYXN0ZXIuCgogICAgbnBtIGlu
c3RhbGwgLWcgaHR0cHM6Ly9naXRodWIuY29tL3NjcmlwdGVkLWVkaXRvci9z
Y3JpcHRlZC90YXJiYWxsL21hc3RlcgoKKGFnYWluIHBvc3NpYmx5IHdpdGgg
YSBgc3Vkb2ApLiBNYXN0ZXIgaXMgdW5kZXIgY29uc3RhbnQgZGV2ZWxvcG1l
bnQgc28geW91IG1heSBzZWUgYSBoaWNjdXAgb3IgdHdvIGJ1dCB3ZSB0cnkg
dG8ga2VlcCBpdCBmdWxseSBmdW5jdGlvbmFsLgoKIyMjIERvd25sb2FkIGEg
cGFja2FnZWQgemlwCgpbVmVyc2lvbiAwLjQuMCB6aXBdKGh0dHA6Ly9kaXN0
LnNwcmluZ3NvdXJjZS5vcmcvcmVsZWFzZS9TQ1JJUFRFRC9zY3JpcHRlZF92
MC40LjAuemlwKTxicj4KW1ZlcnNpb24gMC40LjAgUmVsZWFzZSBOb3Rlc10o
aHR0cDovL3NjcmlwdGVkLWVkaXRvci5naXRodWIuY29tL3NjcmlwdGVkL3Jl
bGVhc2Vfbm90ZXMvMF80XzAvc2NyaXB0ZWRfMF80XzAuaHRtbCkKCltWZXJz
aW9uIDAuMy4wIHppcF0oaHR0cDovL2Rpc3Quc3ByaW5nc291cmNlLm9yZy9y
ZWxlYXNlL1NDUklQVEVEL3NjcmlwdGVkX3YwLjMuMC56aXApPGJyPgpbVmVy
c2lvbiAwLjMuMCBSZWxlYXNlIE5vdGVzXShodHRwOi8vc2NyaXB0ZWQtZWRp
dG9yLmdpdGh1Yi5jb20vc2NyaXB0ZWQvcmVsZWFzZV9ub3Rlcy8wXzNfMC9z
Y3JpcHRlZF8wXzNfMC5odG1sKQoKT25jZSB1bnppcHBlZCwgZW5zdXJlIHRo
ZSBiaW4gZm9sZGVyIGNvbnRlbnRzIGFyZSBleGVjdXRhYmxlIG9uIG1hYy9s
aW51eDogYGNobW9kIDc1NSBiaW4vKmAKCkFuZCBhZGQgdGhlIGJpbiBmb2xk
ZXIgdG8geW91ciBQQVRILgoKCW1hYy9saW51eDogZXhwb3J0IFBBVEg9PHBh
dGhUb1VuemlwTG9jYXRpb25PckNsb25lPi9iaW46JFBBVEgKCXdpbjogc2V0
IFBBVEg9PHBhdGhUb1VuemlwTG9jYXRpb25PckNsb25lPlxiaW47JVBBVEgl
CgojIyMgQ2xvbmUgdGhlIHJlcG9zaXRvcnkgYW5kIGluc3RhbGwgaXQgb3Ig
cnVuIGZyb20gaXQ6CgoJZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS9z
Y3JpcHRlZC1lZGl0b3Ivc2NyaXB0ZWQKCWNkIHNjcmlwdGVkCglucG0gaW5z
dGFsbAoKSWYgeW91IGFscmVhZHkgaGF2ZSBhIGNsb25lIG9mIHRoZSBzY3Jp
cHRlZCByZXBvIGFuZCB3YW50IHRvIHVwZGF0ZSB0byB0aGUgbGF0ZXN0IG1h
c3RlciwgZG9uJ3QgCmZvcmdldCB0aGF0IHlvdSBhbHNvIG5lZWQgdG8gdXBk
YXRlIGV4dGVybmFsIGRlcGVuZGVuY2llcyB0aGF0IG1heSBoYXZlIGNoYW5n
ZWQuIFJ1biB0aGUgZm9sbG93aW5nCmNvbW1hbmRzIGZyb20gdGhlIHJvb3Qg
b2YgeW91ciBjbG9uZS4KCiAgICBnaXQgY2hlY2tvdXQgbWFzdGVyCiAgICBn
aXQgcHVsbAogICAgZ2l0IGNsZWFuIC1meGQKICAgIG5wbSBpbnN0YWxsICAg
CgoKIyMjIFJ1bm5pbmcgaXQKCldoYXRldmVyIHJvdXRlIHlvdSB0b29rIHRv
IGluc3RhbGxpbmcgaXQsIGp1c3QgcnVuOgoKCXNjciBteWZpbGUuanMKCldo
ZW4gd29ya2luZyB3aXRoIFNjcmlwdGVkLCB0aGluayBhYm91dCBpdCBsaWtl
IHVzaW5nIGB2aWAvYGVtYWNzYC4gRnJvbSB3aGVyZXZlciB5b3UgYXJlIGlu
IHlvdXIgdGVybWluYWwgd2luZG93IHlvdSAKY2FuIGxhdW5jaCBTY3JpcHRl
ZCBhbmQgc3RhcnQgZWRpdGluZyBhIGZpbGUuCgpMYXVuY2hpbmcgc2NyaXB0
ZWQgd2lsbCBjYXVzZSB0aGUgTm9kZS5qcyBzZXJ2ZXIgdG8gc3RhcnQgaW4g
dGhlIGJhY2tncm91bmQuCgpIZXJlIGFyZSBzb21lIG9mIHRoZSBtb3JlIHZp
dGFsIGtleSBiaW5kaW5ncyB0byB1c2Ugb25jZSB0aGUgZWRpdG9yIGlzIG9w
ZW4uIFdoZXJlIGBDbWQvQ3RybGAgaXMgc3BlY2lmaWVkIGl0IG1lYW5zIGBD
bWRgIG9uIE1hYyBhbmQgYEN0cmxgIG9uIExpbnV4L1dpbmRvd3M6CgotIGBG
MWAgLSBvcGVuIGhlbHAgdG8gc2hvdyBhbGwga2V5IGJpbmRpbmdzIChvciBw
cmVzcyAnPycgaW4gdGhlIHRvcCByaWdodCkKLSBgQ21kL0N0cmwrc2AgLSBz
YXZlIQotIGBDbWQvQ3RybCtTaGlmdCtFYCAtIG9wZW4vY2xvc2Ugc3ViZWRp
dG9yCi0gYENtZC9DdHJsK1NoaWZ0K0ZgIC0gb3BlbiBGaW5kIEZpbGUgZGlh
bG9nLiBJbnNpZGUgdGhlIGRpYWxvZywgeW91IGNhbiBzZWFyY2ggZm9yIGZp
bGVzIGluIHRoZSBwcm9qZWN0IGJ5IHJlZ3VsYXIgZXhwcmVzc2lvbiBhbmQ6
CiAgIC0gYENsaWNrYCBhIHJlc3VsdCB0byBvcGVuIGl0IGluIG1haW4gZWRp
dG9yCiAgIC0gYFNoaWZ0K0NsaWNrYCBhIHJlc3VsdCB0byBvcGVuIGl0IGlu
IHN1Yi1lZGl0b3IKICAgLSBgQ21kL0N0cmwrQ2xpY2tgIGEgcmVzdWx0IHRv
IG9wZW4gaXQgaW4gYSBuZXcgdGFiCi0gYENtZC9DdHJsK1NoaWZ0K29gIC0g
b3BlbiBvdXRsaW5lIHZpZXcuIEEgZGlhbG9nIHdpbGwgcHJlc2VudCB0aGUg
ZnVuY3Rpb25zIGFuZCB5b3UgY2FuIHF1aWNrbHkgbmF2aWdhdGUgdG8gdGhl
bQotIGBDbWQvQ3RybCtGYCAtIGluLWZpbGUgc2VhcmNoCi0gYEN0cmwrU3Bh
Y2VgIC0gY29udGVudCBhc3Npc3QKLSBgRjhgIC0gbmF2aWdhdGUgdG8gZGVj
bGFyYXRpb24KLSBgU2hpZnQrRjhgIC0gb3BlbiBkZWNsYXJhdGlvbiBpbiBz
dWJlZGl0b3IKLSBgQ21kL0N0cmwrRjhgIC0gbmF2aWdhdGUgdG8gZGVjbGFy
YXRpb24gaW4gbmV3IHRhYgotIGBBbHQrU2hpZnQrRmAgLSBmb3JtYXQKCk9u
IHRoZSBsZWZ0IGhhbmQgc2lkZSBpcyBhIHRyYWRpdGlvbmFsIG5hdmlnYXRv
ciBmb3Igb3BlbmluZyBkaWZmZXJlbnQgZmlsZXMuIEFib3ZlIHRoZSBlZGl0
b3IgaXMgYSBicmVhZGNydW1iLCBob3ZlciBvdmVyIGEgY29tcG9uZW50IHRv
IHNlZSBvdGhlciBmaWxlcyBpbiB0aGF0IGRpcmVjdG9yeS4KClRoZSBlZGl0
b3IgZG9lcyBzdXBwb3J0IGEgZGVncmVlIG9mIGN1c3RvbWl6YXRpb24sIHNl
ZSB0aGUgc2VjdGlvbiBvbiB0aGUgW0ZlYXR1cmVzXShodHRwczovL2dpdGh1
Yi5jb20vc2NyaXB0ZWQtZWRpdG9yL3NjcmlwdGVkL3dpa2kvRmVhdHVyZXMp
IHBhZ2UuCgpTY3JpcHRlZCByZWNlaXZlcyBtb3N0IHRlc3RpbmcgaW4gQ2hy
b21lIGFuZCBGaXJlZm94LCB5b3UgbWF5IG5lZWQgb25lIG9mIHRob3NlIGJy
b3dzZXJzIGluIG9yZGVyIHRvIGdldCB0aGUgbW9zdCBvdXQgb2YgaXQuCgoj
IEFueXRoaW5nIGVsc2UgSSBuZWVkIHRvIGtub3cgYmVmb3JlIHVzaW5nIGl0
PwoKV2hlbiB5b3Ugb3BlbiBTY3JpcHRlZCBvbiBhIGZpbGUsIGl0IHdpbGwg
YXR0ZW1wdCB0byBpbmZlciB0aGUgcm9vdCBvZiB5b3VyIHByb2plY3QgYnkg
bG9jYXRpbmcgdGhlIG5lYXJlc3QgYC5naXRgL2AucHJvamVjdGAgZmlsZQpp
biB0aGUgaGllcmFyY2h5LiBLbm93aW5nIHRoZSByb290IGlzIGltcG9ydGFu
dCBiZWNhdXNlIHRoYXQgaXMgdGhlIHNjb3BlIGluIHdoaWNoIHNlYXJjaGlu
ZyBhbmQgZGVwZW5kZW5jeSBhbmFseXNpcyBpcyBkb25lLiBJZgp5b3UgZG9u
J3QgaGF2ZSBvbmUgb2YgdGhlc2UgbWFya2VycyBmb3IgdGhlIHJvb3QsIHlv
dSBjYW4gY3JlYXRlIGFuIGVtcHR5IGAuc2NyaXB0ZWRgIGZpbGUgdG8gaW5k
aWNhdGUgdGhlIHJvb3QuCgojIEN1cnJlbnQgc3RhdHVzCgpBcyBvZiBKYW4g
MjAxMyB0aGUgcHJvamVjdCBpcyBhdCB2ZXJzaW9uIDAuMy4gVGhlcmUgaXMg
YSBsb25nIHdheSB0byBnbyBidXQgdGhlIHRlYW0gaGF2ZSBiZWVuIHVzaW5n
IFNjcmlwdGVkIHRvIGRldmVsb3AgU2NyaXB0ZWQgZm9yIGEgd2hpbGUgbm93
LgoKIyBGdXJ0aGVyIHJlYWRpbmcKCi0gW0ZlYXR1cmVzXShodHRwczovL2dp
dGh1Yi5jb20vc2NyaXB0ZWQtZWRpdG9yL3NjcmlwdGVkL3dpa2kvRmVhdHVy
ZXMpCi0gW0ZBUV0oaHR0cHM6Ly9naXRodWIuY29tL3NjcmlwdGVkLWVkaXRv
ci9zY3JpcHRlZC93aWtpL0ZBUSkKLSBbVHJvdWJsZXNob290aW5nXShodHRw
czovL2dpdGh1Yi5jb20vc2NyaXB0ZWQtZWRpdG9yL3NjcmlwdGVkL3dpa2kv
RkFRI3dpa2ktVHJvdWJsZXNob290aW5nKQotIFtBcmNoaXRlY3R1cmVdKGh0
dHBzOi8vZ2l0aHViLmNvbS9zY3JpcHRlZC1lZGl0b3Ivc2NyaXB0ZWQvd2lr
aS9BcmNoaXRlY3R1cmUpCgojIFdoZXJlIGNhbiBJIGFzayBxdWVzdGlvbnMs
IHByb3ZpZGUgZmVlZGJhY2sgb3IgcmFpc2UgaXNzdWVzPwoKLSBUaGUgW3Nj
cmlwdGVkLWRldiBnb29nbGUgZ3JvdXBdKGh0dHBzOi8vZ3JvdXBzLmdvb2ds
ZS5jb20vZm9ydW0vIyFmb3J1bS9zY3JpcHRlZC1kZXYpIGlzIG9wZW4gZm9y
IHF1ZXN0aW9ucyBhbmQgZGlzY3Vzc2lvbgotIFRoZSBbaXNzdWV0cmFja2Vy
XShodHRwczovL2lzc3VldHJhY2tlci5zcHJpbmdzb3VyY2UuY29tL2Jyb3dz
ZS9zY3JpcHRlZCkgdG8gcmFpc2UgaXNzdWVzIG9yIHRha2UgYSBsb29rIGFu
ZCB2b3RlIG9uIGV4aXN0aW5nIGlzc3Vlcy4KCiMgV2hhdCdzIG5leHQgZm9y
IFNjcmlwdGVkPwoKLSBFdmVuIHNtYXJ0ZXIgaW5mZXJlbmNpbmcsIGxlYWRp
bmcgdG8gYmV0dGVyIGNvbnRlbnQgYXNzaXN0IGFuZCBlYXNpZXIgbmF2aWdh
dGlvbi4KLSBNb3JlIHBhbmVzIGZvciB0aGUgc2lkZSBwYW5lbC4gQ3VycmVu
dGx5IHRoZXJlIGlzIGp1c3QgYW4gZWRpdG9yIHBhbmUgYnV0IHdlIGludGVu
ZCB0byBpbmNsdWRlIHNlYXJjaCByZXN1bHRzIHBhbmVzLApkb2N1bWVudGF0
aW9uLCBnaXQgaW5mb3JtYXRpb24gcGFuZXMsIHBlcmhhcHMgY29kZSBwcmV2
aWV3IGFuZCBzaW11bGF0ZWQgY29kZSBleGVjdXRpb24gcGFuZXMuIFRoZSBp
bnRlbnRpb24gd2lsbCBiZQpmb3IgU2NyaXB0ZWQgdG8gdHJ5IGFuZCBhdXRv
bWF0aWNhbGx5IG1hbmFnZSB0aGVzZSB3aGVyZSBwb3NzaWJsZSwgc28gYWxs
IHRoZSBjb250ZW50IG9uIHNjcmVlbiBpcyBrZXB0IHJlbGV2YW50CnRvIHRo
ZSB0YXNrIGF0IGhhbmQuCi0gU2ltcGxlIHBsdWdpbiBzeXN0ZW0uIAotIERl
YnVnZ2luZy4gRXhwbG9yaW5nIGludGVncmF0aW9uIHdpdGggdG9vbHMgbGlr
ZSBDaHJvbWUgRGV2IFRvb2xzIGFuZCBub2RlIGluc3BlY3Rvci4KCklmIHlv
dSBoYXZlIG1vcmUgaWRlYXMgZm9yIHdoYXQgeW91J2QgbGlrZSB0byBzZWUs
IGxldCB1cyBrbm93IHZpYQphIFtHaXRodWIgaXNzdWVdKGh0dHBzOi8vZ2l0
aHViLmNvbS9zY3JpcHRlZC1lZGl0b3Ivc2NyaXB0ZWQvaXNzdWVzKSBvciAK
b3VyIFtzY3JpcHRlZC1kZXZdKGh0dHBzOi8vZ3JvdXBzLmdvb2dsZS5jb20v
Zm9ydW0vIyFmb3J1bS9zY3JpcHRlZC1kZXYpIGRpc2N1c3Npb24gZ3JvdXAu
CgojIENhbiBJIGNvbnRyaWJ1dGU/CgpTdXJlISBKdXN0IHByZXNzICpGb3Jr
KiBhdCB0aGUgdG9wIG9mIHRoaXMgZ2l0aHViIHBhZ2UgYW5kIGdldCBjb2Rp
bmcuIEJlZm9yZSB3ZSBhY2NlcHQgcHVsbCByZXF1ZXN0cyB3ZSBqdXN0IG5l
ZWQgeW91IHRvIHNpZ24gYSBzaW1wbGUgY29udHJpYnV0b3IncwphZ3JlZW1l
bnQgLSB3aGljaCB5b3UgY2FuIGZpbmQgW2hlcmVdKGh0dHBzOi8vc3VwcG9y
dC5zcHJpbmdzb3VyY2UuY29tL3NwcmluZ19lY2xpcHNlY2xhX2NvbW1pdHRl
cl9zaWdudXApLiBTaWduaW5nIHRoZSBjb250cmlidXRvcidzIGFncmVlbWVu
dCBkb2VzIG5vdCBncmFudCBhbnlvbmUgY29tbWl0IHJpZ2h0cyB0byB0aGUg
bWFpbiByZXBvc2l0b3J5LCBidXQgaXQgZG9lcyBtZWFuIHRoYXQgd2UgY2Fu
IGFjY2VwdCB5b3VyIGNvbnRyaWJ1dGlvbnMsIGFuZCB5b3Ugd2lsbCBnZXQg
YW4gYXV0aG9yIGNyZWRpdCBpZiB3ZSBkby4gQWN0aXZlIGNvbnRyaWJ1dG9y
cyBtaWdodCBiZSBhc2tlZCB0byBqb2luIHRoZSBjb3JlIHRlYW0sIGFuZCBn
aXZlbiB0aGUgYWJpbGl0eSB0byBtZXJnZSBwdWxsIHJlcXVlc3RzLgpQdWxs
IHJlcXVlc3RzIHNob3VsZCBpZGVhbGx5IHJlZmVyZW5jZSBhIEpJUkEgdGlj
a2V0IGluIHRoZSBbaXNzdWV0cmFja2VyXShodHRwczovL2lzc3VldHJhY2tl
ci5zcHJpbmdzb3VyY2UuY29tL2Jyb3dzZS9TQ1JJUFRFRCkgdGhhdCBkZXRh
aWxzIHdoYXQgdGhlIHJlcXVlc3QgaXMgYWRkcmVzc2luZy4KClRoZSBjb2Rl
YmFzZSBpcyBlbnRpcmVseSBKYXZhU2NyaXB0L0hUTUwvQ1NTLgoKSWYgeW91
IGFyZSBrZWVuIHRvIGNvbnRyaWJ1dGUgYnV0IGFyZW4ndCBzdXJlIHdoYXQg
dG8gd29yayBvbiwgdGFrZSBhIGxvb2sgYXQKdGhlIFtnaXRodWIgaXNzdWVz
XShodHRwczovL2dpdGh1Yi5jb20vc2NyaXB0ZWQtZWRpdG9yL3NjcmlwdGVk
L2lzc3VlcykgZm9yIGluc3BpcmF0aW9uLgpUaGUgY29kZWJhc2UgaXMgdmVy
eSBuZXcgaW4gcGxhY2VzIGFuZCBpc24ndCB0aGF0IHRyaWNreSB0byBnZXQg
dG8gZ3JpcHMgd2l0aC4KCklmIHlvdSBkb24ndCBmZWVsIGxpa2UgY29kaW5n
IGJ1dCBzdGlsbCB3YW50IHRvIGNvbnRyaWJ1dGUsIHBsZWFzZSBqb2luIHRo
ZSBkaXNjdXNzaW9uIG9uIHRoZSBpc3N1ZXMgYW5kIHNjcmlwdGVkLWRldiBn
cm91cC4K
",,1580,"bGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczoKICAtIDAuOA==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'mutant',5152718,b'Mutation testing for Ruby',b'Ruby',128,1580,,40,False,b'https://api.github.com/repos/mbj/mutant/forks',"bXV0YW50Cj09PT09PQoKWyFbQnVpbGQgU3RhdHVzXShodHRwczovL2NpcmNs
ZWNpLmNvbS9naC9tYmovbXV0YW50LnN2Zz9zdHlsZT1zaGllbGQmY2lyY2xl
LXRva2VuPTFhZmQ3N2U4ZjBmOWQwYTExZmQ4ZjE1ZjVkN2IxMDI3MGY0NjY1
ZTIpXShodHRwczovL2NpcmNsZWNpLmNvbS9naC9tYmovbXV0YW50L3RyZWUv
bWFzdGVyKQpbIVtHZW0gVmVyc2lvbl0oaHR0cHM6Ly9pbWcuc2hpZWxkcy5p
by9nZW0vdi9tdXRhbnQuc3ZnKV0oaHR0cHM6Ly9ydWJ5Z2Vtcy5vcmcvZ2Vt
cy9tdXRhbnQpClshW1NsYWNrIFN0YXR1c10oaHR0cHM6Ly9tdXRhdGlvbi10
ZXN0aW5nLXNsYWNrLmhlcm9rdWFwcC5jb20vYmFkZ2Uuc3ZnKV0oaHR0cHM6
Ly9tdXRhdGlvbi10ZXN0aW5nLnNsYWNrLmNvbS9tZXNzYWdlcy9tdXRhbnQp
CgojIyBXaGF0IGlzIE11dGFudD8KCk11dGFudCBpcyBhIG11dGF0aW9uIHRl
c3RpbmcgdG9vbCBmb3IgUnVieS4gTXV0YXRpb24gdGVzdGluZyBpcyBhIHRl
Y2huaXF1ZSB0byB2ZXJpZnkgc2VtYW50aWMgY292ZXJhZ2Ugb2YgeW91ciBj
b2RlLgoKIyMgV2h5IGRvIEkgd2FudCBpdD8KCk11dGFudCBhZGRzIHRvIHlv
dXIgdG9vbGJveDogRGV0ZWN0aW9uIG9mIHVuY292ZXJlZCBzZW1hbnRpY3Mg
aW4geW91ciBjb2RlLgpDb3ZlcmFnZSBiZWNvbWVzIGEgbWVhbmluZ2Z1bCBt
ZXRyaWMhCgpPbiBlYWNoIGRldGVjdGlvbiBvZiB1bmNvdmVyZWQgc2VtYW50
aWNzIHlvdSBoYXZlIHRoZSBvcHBvcnR1bml0eSB0bzoKCiogRGVsZXRlIGRl
YWQgY29kZSwgYXMgeW91IGRvIG5vdCB3YW50IHRoZSBleHRyYSBzZW1hbnRp
Y3Mgbm90IHNwZWNpZmllZCBieSB0aGUgdGVzdHMKKiBBZGQgKG9yIGltcHJv
dmUgYSB0ZXN0KSB0byBjb3ZlciB0aGUgdW53YW50ZWQgc2VtYW50aWNzLgoq
IExlYXJuIHNvbWV0aGluZyBuZXcgYWJvdXQgdGhlIHNlbWFudGljcyBvZiBS
dWJ5IGFuZCB5b3VyIGRpcmVjdCBhbmQgaW5kaXJlY3QgZGVwZW5kZW5jaWVz
LgoKIyMgSG93IERvIEkgdXNlIGl0PwoKKiBTdGFydCB3aXRoIHJlYWRpbmcg
dGhlIFtub21lbmNsYXR1cmVdKC9kb2NzL25vbWVuY2xhdHVyZS5tZCkgZG9j
dW1lbnRhdGlvbi4KKiBUaGFuIHNlbGVjdCBhbmQgc2V0dXAgeW91ciBbaW50
ZWdyYXRpb25dKC9kb2NzL25vbWVuY2xhdHVyZS5tZCNpbnRlcmF0aW9uKSwg
YWxzbyBtYWtlIHN1cmUKICB5b3UgY2FuIHJlcHJvZHVjZSB0aGUgZXhhbXBs
ZXMgaW4gdGhlIGludGVncmF0aW9uIHNwZWNpZmljIGRvY3VtZW50YXRpb24u
CiogSWRlbnRpZnkgeW91ciBwcmVmZXJyZWQgbXV0YXRpb24gdGVzdGluZyBz
dHJhdGVneS4gSXRzIHJlY29tbWVuZGVkIHRvIHN0YXJ0IGF0IHRoZSBjb21t
aXQgbGV2ZWwsCiAgdG8gdGVzdCBvbmx5IHRoZSBjb2RlIHlvdSBoYWQgYmVl
biB0b3VjaGluZy4gU2VlIHRoZSBbaW5jcmVtZW50YWxdKCNvbmx5LW11dGF0
aW5nLWNoYW5nZWQtY29kZSkKICBtdXRhdGlvbiB0ZXN0aW5nIGRvY3VtZW50
YXRpb24uCgpUb3BpY3MKLS0tLS0tCgoqIFtOb21lbmNsYXR1cmVdKC9kb2Nz
L25vbWVuY2xhdHVyZS5tZCkKKiBbUmVhZGluZyBSZXBvcnRzXSgvZG9jcy9y
ZWFkaW5nLXJlcG9ydHMubWQpCiogW0tub3duIFByb2JsZW1zXSgvZG9jcy9r
bm93bi1wcm9ibGVtcy5tZCkKKiBbTGltaXRhdGlvbnNdKC9kb2NzL2xpbWl0
YXRpb25zLm1kKQoqIFtDb25jdXJyZW5jeV0oL2RvY3MvY29uY3VycmVuY3ku
bWQpCiogW1JzcGVjIEludGVncmF0aW9uXSgvZG9jcy9tdXRhbnQtcnNwZWMu
bWQpCiogW01pbml0ZXN0IEludGVncmF0aW9uXSgvZG9jcy9tdXRhbnQtbWlu
aXRlc3QubWQpCgpTcG9uc29yaW5nCi0tLS0tLS0tLS0KCk11dGFudCwgYXMg
cHVibGlzaGVkIGluIHRoZSBvcGVuc291cmNlIHZlcnNpb24sIHdvdWxkIG5v
dCBleGlzdCB3aXRob3V0IHRoZSBoZWxwCm9mIFtjb250cmlidXRvcnNdKGh0
dHBzOi8vZ2l0aHViLmNvbS9tYmovbXV0YW50L2dyYXBocy9jb250cmlidXRv
cnMpIHNwZW5kaW5nIGxvdHMKb2YgdGhlaXIgcHJpdmF0ZSB0aW1lLgoKQWRk
aXRpb25hbGx5LCB0aGUgZm9sbG93aW5nIGZlYXR1cmVzIHdoZXJlIHNwb25z
b3JlZCBieSBvcmdhbml6YXRpb25zOgoKKiBUaGUgYG11dGFudC1taW5pdGVz
dGAgaW50ZWdyYXRpb24gd2FzIHNwb25zb3JlZCBieSBbQXJrZW5jeV0oaHR0
cHM6Ly9hcmtlbmN5LmNvbS8pCiogTXV0YW50J3MgaW5pdGlhbCBjb25jdXJy
ZW5jeSBzdXBwb3J0IHdhcyBzcG9uc29yZWQgYnkgYW4gdW5kaXNjbG9zZWQg
Y29tcGFueSB0aGF0IGRvZXMKICBjdXJyZW50bHkgbm90IHdpc2ggdG8gYmUg
bGlzdGVkIGhlcmUuCgpJZiB5b3VyIG9yZ2FuaXphdGlvbiBpcyBpbnRlcmVz
dGVkIGluIHNwb25zb3JpbmcgYSBmZWF0dXJlLCBnZW5lcmFsIG1haW50YWlu
ZXJzaGlwIG9yIGJ1Z2ZpeGVzLCBjb250YWN0CltNYXJrdXMgU2NoaXJwXSht
YWlsdG86bWJqQHNjaGlycC1kc28uY29tKS4K
",,1580,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"ZGVmYXVsdHM6ICZkZWZhdWx0cwogIHdvcmtpbmdfZGlyZWN0b3J5OiB+L211
dGFudAogIGRvY2tlcjoKICAtIGltYWdlOiBjaXJjbGVjaS9ydWJ5OjIuNi4w
CnZlcnNpb246IDIKam9iczoKICB1bml0X3NwZWNzOgogICAgPDw6ICpkZWZh
dWx0cwogICAgc3RlcHM6CiAgICAgIC0gY2hlY2tvdXQKICAgICAgLSBydW46
IGJ1bmRsZSBpbnN0YWxsCiAgICAgIC0gcnVuOiBidW5kbGUgZXhlYyByc3Bl
YyBzcGVjL3VuaXQKICBpbnRlZ3JhdGlvbl9taW5pdGVzdDoKICAgIDw8OiAq
ZGVmYXVsdHMKICAgIHN0ZXBzOgogICAgICAtIGNoZWNrb3V0CiAgICAgIC0g
cnVuOiBidW5kbGUgaW5zdGFsbAogICAgICAtIHJ1bjogYnVuZGxlIGV4ZWMg
cnNwZWMgc3BlYy9pbnRlZ3JhdGlvbiAtZSBtaW5pdGVzdAogIGludGVncmF0
aW9uX3JzcGVjOgogICAgPDw6ICpkZWZhdWx0cwogICAgc3RlcHM6CiAgICAg
IC0gY2hlY2tvdXQKICAgICAgLSBydW46IGJ1bmRsZSBpbnN0YWxsCiAgICAg
IC0gcnVuOiBidW5kbGUgZXhlYyByc3BlYyBzcGVjL2ludGVncmF0aW9uIC1l
IHJzcGVjCiAgaW50ZWdyYXRpb25fbXV0YXRpb25fZ2VuZXJhdGlvbjoKICAg
IDw8OiAqZGVmYXVsdHMKICAgIHN0ZXBzOgogICAgICAtIGNoZWNrb3V0CiAg
ICAgIC0gcnVuOiBidW5kbGUgaW5zdGFsbAogICAgICAtIHJ1bjogYnVuZGxl
IGV4ZWMgcnNwZWMgc3BlYy9pbnRlZ3JhdGlvbiAtZSBnZW5lcmF0aW9uCiAg
bWV0cmljczoKICAgIDw8OiAqZGVmYXVsdHMKICAgIHN0ZXBzOgogICAgICAt
IGNoZWNrb3V0CiAgICAgIC0gcnVuOiBidW5kbGUgaW5zdGFsbAogICAgICAt
IHJ1bjogYnVuZGxlIGV4ZWMgcmFrZSBtZXRyaWNzOnJ1Ym9jb3AKICAgICAg
LSBydW46IGJ1bmRsZSBleGVjIHJha2UgbWV0cmljczpyZWVrCiAgbXV0YW50
OgogICAgPDw6ICpkZWZhdWx0cwogICAgc3RlcHM6CiAgICAgIC0gY2hlY2tv
dXQKICAgICAgLSBydW46IGJ1bmRsZSBpbnN0YWxsCiAgICAgIC0gcnVuOiBi
dW5kbGUgZXhlYyBtdXRhbnQgLS1qb2JzIDQgLS1zaW5jZSBIRUFEfjEgLS16
b21iaWUgLS0gJ011dGFudConCndvcmtmbG93czoKICB2ZXJzaW9uOiAyCiAg
dGVzdDoKICAgIGpvYnM6CiAgICAgIC0gdW5pdF9zcGVjcwogICAgICAtIGlu
dGVncmF0aW9uX3JzcGVjCiAgICAgIC0gaW50ZWdyYXRpb25fbWluaXRlc3QK
ICAgICAgLSBpbnRlZ3JhdGlvbl9tdXRhdGlvbl9nZW5lcmF0aW9uCiAgICAg
IC0gbWV0cmljcwogICAgICAtIG11dGFudAo=
",,,,,,,,,,,,,,,,,,,,,,,
b'MARL-Papers',84706218,b'Paper list of multi-agent reinforcement learning (MARL)',,1,1580,,205,False,b'https://api.github.com/repos/LantaoYu/MARL-Papers/forks',"IyBQYXBlciBDb2xsZWN0aW9uIG9mIE11bHRpLUFnZW50IFJlaW5mb3JjZW1l
bnQgTGVhcm5pbmcgKE1BUkwpCgpNdWx0aS1BZ2VudCBSZWluZm9yY2VtZW50
IExlYXJuaW5nIGlzIGEgdmVyeSBpbnRlcmVzdGluZyByZXNlYXJjaCBhcmVh
LCB3aGljaCBoYXMgc3Ryb25nIGNvbm5lY3Rpb25zIHdpdGggc2luZ2xlLWFn
ZW50IFJMLCBtdWx0aS1hZ2VudCBzeXN0ZW1zLCBnYW1lIHRoZW9yeSwgZXZv
bHV0aW9uYXJ5IGNvbXB1dGF0aW9uIGFuZCBvcHRpbWl6YXRpb24gdGhlb3J5
LgoKVGhpcyBpcyBhIGNvbGxlY3Rpb24gb2YgcmVzZWFyY2ggYW5kIHJldmll
dyBwYXBlcnMgb2YgbXVsdGktYWdlbnQgcmVpbmZvcmNlbWVudCBsZWFybmlu
ZyAoTUFSTCkuIFRoZSBQYXBlcnMgYXJlIHNvcnRlZCBieSB0aW1lLiBBbnkg
c3VnZ2VzdGlvbnMgYW5kIHB1bGwgcmVxdWVzdHMgYXJlIHdlbGNvbWUuCgpU
aGUgc2hhcmluZyBwcmluY2lwbGUgb2YgdGhlc2UgcmVmZXJlbmNlcyBoZXJl
IGlzIGZvciByZXNlYXJjaC4gSWYgYW55IGF1dGhvcnMgZG8gbm90IHdhbnQg
dGhlaXIgcGFwZXIgdG8gYmUgbGlzdGVkIGhlcmUsIHBsZWFzZSBmZWVsIGZy
ZWUgdG8gY29udGFjdCBbTGFudGFvIFl1XShodHRwczovL2xhbnRhb3l1Lmdp
dGh1Yi5pby8pIChFbWFpbDogbGFudGFveXUgW0FUXSBob3RtYWlsLmNvbSku
CgojIyBPdmVydmlldwoqIFtUdXRvcmlhbF0oaHR0cHM6Ly9naXRodWIuY29t
L0xhbnRhb1l1L01BUkwtUGFwZXJzI3R1dG9yaWFsLWFuZC1ib29rcykKKiBb
UmV2aWV3IFBhcGVyc10oaHR0cHM6Ly9naXRodWIuY29tL0xhbnRhb1l1L01B
UkwtUGFwZXJzI3Jldmlldy1wYXBlcnMpCiogW1Jlc2VhcmNoIFBhcGVyc10o
aHR0cHM6Ly9naXRodWIuY29tL0xhbnRhb1l1L01BUkwtUGFwZXJzI3Jlc2Vh
cmNoLXBhcGVycykKICAqIFtGcmFtZXdvcmtdKGh0dHBzOi8vZ2l0aHViLmNv
bS9MYW50YW9ZdS9NQVJMLVBhcGVycyNmcmFtZXdvcmspCiAgKiBbSm9pbnQg
YWN0aW9uIGxlYXJuaW5nXShodHRwczovL2dpdGh1Yi5jb20vTGFudGFvWXUv
TUFSTC1QYXBlcnMjam9pbnQtYWN0aW9uLWxlYXJuaW5nKQogICogW0Nvb3Bl
cmF0aW9uIGFuZCBjb21wZXRpdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL0xh
bnRhb1l1L01BUkwtUGFwZXJzI2Nvb3BlcmF0aW9uLWFuZC1jb21wZXRpdGlv
bikKICAqIFtDb29yZGluYXRpb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9MYW50
YW9ZdS9NQVJMLVBhcGVycyNjb29yZGluYXRpb24pCiAgKiBbU2VjdXJpdHld
KGh0dHBzOi8vZ2l0aHViLmNvbS9MYW50YW9ZdS9NQVJMLVBhcGVycyNzZWN1
cml0eSkKICAqIFtTZWxmLVBsYXldKGh0dHBzOi8vZ2l0aHViLmNvbS9MYW50
YW9ZdS9NQVJMLVBhcGVycyNzZWxmLXBsYXkpCiAgKiBbTGVhcm5pbmcgVG8g
Q29tbXVuaWNhdGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9MYW50YW9ZdS9NQVJM
LVBhcGVycyNsZWFybmluZy10by1jb21tdW5pY2F0ZSkKICAqIFtUcmFuc2Zl
ciBMZWFybmluZ10oaHR0cHM6Ly9naXRodWIuY29tL0xhbnRhb1l1L01BUkwt
UGFwZXJzI3RyYW5zZmVyLWxlYXJuaW5nKQogICogW0ltaXRhdGlvbiBhbmQg
SW52ZXJzZSBSZWluZm9yY2VtZW50IExlYXJuaW5nXShodHRwczovL2dpdGh1
Yi5jb20vTGFudGFvWXUvTUFSTC1QYXBlcnMjaW1pdGF0aW9uLWFuZC1pbnZl
cnNlLXJlaW5mb3JjZW1lbnQtbGVhcm5pbmcpCiAgKiBbTWV0YSBMZWFybmlu
Z10oaHR0cHM6Ly9naXRodWIuY29tL0xhbnRhb1l1L01BUkwtUGFwZXJzI21l
dGEtbGVhcm5pbmcpCiAgKiBbQXBwbGljYXRpb25dKGh0dHBzOi8vZ2l0aHVi
LmNvbS9MYW50YW9ZdS9NQVJMLVBhcGVycyNhcHBsaWNhdGlvbikKCiMjIFR1
dG9yaWFsIGFuZCBCb29rcwoqIFtEZWVwIE11bHRpLUFnZW50IFJlaW5mb3Jj
ZW1lbnQgTGVhcm5pbmddKGh0dHBzOi8vb3JhLm94LmFjLnVrL29iamVjdHMv
dXVpZDphNTU2MjFiMy01M2MwLTRlMWItYWQxYy05MjQzOGI1N2ZmYTQpIGJ5
IEpha29iIE4gRm9lcnN0ZXIsIDIwMTguIFBoRCBUaGVzaXMuCiogW011bHRp
LUFnZW50IE1hY2hpbmUgTGVhcm5pbmc6IEEgUmVpbmZvcmNlbWVudCBBcHBy
b2FjaF0oaHR0cHM6Ly9vbmxpbmVsaWJyYXJ5LndpbGV5LmNvbS9kb2kvYm9v
ay8xMC4xMDAyLzk3ODExMTg4ODQ2MTQpIGJ5IEguIE0uIFNjaHdhcnR6LCAy
MDE0LgoqIFtNdWx0aWFnZW50IFJlaW5mb3JjZW1lbnQgTGVhcm5pbmddKGh0
dHA6Ly93d3cuZWNtbHBrZGQyMDEzLm9yZy93cC1jb250ZW50L3VwbG9hZHMv
MjAxMy8wOS9NdWx0aWFnZW50LVJlaW5mb3JjZW1lbnQtTGVhcm5pbmcucGRm
KSBieSBEYWFuIEJsb2VtYmVyZ2VuLCBEYW5pZWwgSGVubmVzLCBNaWNoYWVs
IEthaXNlcnMsIFBldGVyIFZyYW5jeC4gRUNNTCwgMjAxMy4KKiBbTXVsdGlh
Z2VudCBzeXN0ZW1zOiBBbGdvcml0aG1pYywgZ2FtZS10aGVvcmV0aWMsIGFu
ZCBsb2dpY2FsIGZvdW5kYXRpb25zXShodHRwOi8vd3d3Lm1hc2ZvdW5kYXRp
b25zLm9yZy9kb3dubG9hZC5odG1sKSBieSBTaG9oYW0gWSwgTGV5dG9uLUJy
b3duIEsuIENhbWJyaWRnZSBVbml2ZXJzaXR5IFByZXNzLCAyMDA4LgoKIyMg
UmV2aWV3IFBhcGVycwoqIFtBIFN1cnZleSBvbiBUcmFuc2ZlciBMZWFybmlu
ZyBmb3IgTXVsdGlhZ2VudCBSZWluZm9yY2VtZW50IExlYXJuaW5nIFN5c3Rl
bXNdKGh0dHBzOi8vd3d3LmphaXIub3JnL2luZGV4LnBocC9qYWlyL2FydGlj
bGUvdmlldy8xMTM5NikgYnkgU2lsdmEsIEZlbGlwZSBMZW5vIGRhOyBDb3N0
YSwgQW5uYSBIZWxlbmEgUmVhbGkuIEpBSVIsIDIwMTkuCiogW0F1dG9ub21v
dXNseSBSZXVzaW5nIEtub3dsZWRnZSBpbiBNdWx0aWFnZW50IFJlaW5mb3Jj
ZW1lbnQgTGVhcm5pbmddKGh0dHBzOi8vd3d3LmlqY2FpLm9yZy9wcm9jZWVk
aW5ncy8yMDE4Lzc3NCkgYnkgU2lsdmEsIEZlbGlwZSBMZW5vIGRhOyBUYXls
b3IsIE1hdHRoZXcgRS47IENvc3RhLCBBbm5hIEhlbGVuYSBSZWFsaS4gSUpD
QUksIDIwMTguCiogW0RlZXAgUmVpbmZvcmNlbWVudCBMZWFybmluZyBWYXJp
YW50cyBvZiBNdWx0aS1BZ2VudCBMZWFybmluZyBBbGdvcml0aG1zXShodHRw
czovL3Byb2plY3QtYXJjaGl2ZS5pbmYuZWQuYWMudWsvbXNjLzIwMTYyMDkx
L21zY19wcm9qLnBkZikgYnkgQ2FzdGFuZWRhIEEgTy4gMjAxNi4KKiBbRXZv
bHV0aW9uYXJ5IER5bmFtaWNzIG9mIE11bHRpLUFnZW50IExlYXJuaW5nOiBB
IFN1cnZleV0oaHR0cHM6Ly93d3cuamFpci5vcmcvaW5kZXgucGhwL2phaXIv
YXJ0aWNsZS92aWV3LzEwOTUyKSBieSBCbG9lbWJlcmdlbiwgRGFhbiwgZXQg
YWwuIEpBSVIsIDIwMTUuCiogW0dhbWUgdGhlb3J5IGFuZCBtdWx0aS1hZ2Vu
dCByZWluZm9yY2VtZW50IGxlYXJuaW5nXShodHRwczovL3d3dy5yZXNlYXJj
aGdhdGUubmV0L3B1YmxpY2F0aW9uLzI2OTEwMDEwMV9HYW1lX1RoZW9yeV9h
bmRfTXVsdGktYWdlbnRfUmVpbmZvcmNlbWVudF9MZWFybmluZykgYnkgTm93
w6kgQSwgVnJhbmN4IFAsIERlIEhhdXdlcmUgWSBNLiBSZWluZm9yY2VtZW50
IExlYXJuaW5nLiBTcHJpbmdlciBCZXJsaW4gSGVpZGVsYmVyZywgMjAxMi4K
KiBbTXVsdGktYWdlbnQgcmVpbmZvcmNlbWVudCBsZWFybmluZzogQW4gb3Zl
cnZpZXddKGh0dHA6Ly93d3cuZGNzYy50dWRlbGZ0Lm5sL35iZGVzY2h1dHRl
ci9wdWIvcmVwLzEwXzAwMy5wZGYpIGJ5IEJ1xZ9vbml1IEwsIEJhYnXFoWth
IFIsIERlIFNjaHV0dGVyIEIuIElubm92YXRpb25zIGluIG11bHRpLWFnZW50
IHN5c3RlbXMgYW5kIGFwcGxpY2F0aW9ucy0xLiBTcHJpbmdlciBCZXJsaW4g
SGVpZGVsYmVyZywgMjAxMAoqIFtBIGNvbXByZWhlbnNpdmUgc3VydmV5IG9m
IG11bHRpLWFnZW50IHJlaW5mb3JjZW1lbnQgbGVhcm5pbmddKGh0dHA6Ly93
d3cuZGNzYy50dWRlbGZ0Lm5sL35iZGVzY2h1dHRlci9wdWIvcmVwLzA3XzAx
OS5wZGYpIGJ5IEJ1c29uaXUgTCwgQmFidXNrYSBSLCBEZSBTY2h1dHRlciBC
LiBJRUVFIFRyYW5zYWN0aW9ucyBvbiBTeXN0ZW1zIE1hbiBhbmQgQ3liZXJu
ZXRpY3MgUGFydCBDIEFwcGxpY2F0aW9ucyBhbmQgUmV2aWV3cywgMjAwOAoq
IFtJZiBtdWx0aS1hZ2VudCBsZWFybmluZyBpcyB0aGUgYW5zd2VyLCB3aGF0
IGlzIHRoZSBxdWVzdGlvbj9dKGh0dHA6Ly9yb2JvdGljcy5zdGFuZm9yZC5l
ZHUvfnNob2hhbS93d3clMjBwYXBlcnMvTGVhcm5pbmdJbk1BUy5wZGYpIGJ5
IFNob2hhbSBZLCBQb3dlcnMgUiwgR3JlbmFnZXIgVC4gQXJ0aWZpY2lhbCBJ
bnRlbGxpZ2VuY2UsIDIwMDcuCiogW0Zyb20gc2luZ2xlLWFnZW50IHRvIG11
bHRpLWFnZW50IHJlaW5mb3JjZW1lbnQgbGVhcm5pbmc6IEZvdW5kYXRpb25h
bCBjb25jZXB0cyBhbmQgbWV0aG9kc10oaHR0cDovL3VzZXJzLmlzci5pc3Qu
dXRsLnB0L35tdGpzcGFhbi9yZWFkaW5nR3JvdXAvbGVhcm5pbmdOZXRvMDUu
cGRmKSBieSBOZXRvIEcuIExlYXJuaW5nIHRoZW9yeSBjb3Vyc2UsIDIwMDUu
CiogW0V2b2x1dGlvbmFyeSBnYW1lIHRoZW9yeSBhbmQgbXVsdGktYWdlbnQg
cmVpbmZvcmNlbWVudCBsZWFybmluZ10oaHR0cHM6Ly9wZGZzLnNlbWFudGlj
c2Nob2xhci5vcmcvYmI5Zi9iZWUyMmVhZTJiNDdiYmYzMDQ4MDRhNmFjMDdk
ZWYxYWVjZGIucGRmKSBieSBUdXlscyBLLCBOb3fDqSBBLiBUaGUgS25vd2xl
ZGdlIEVuZ2luZWVyaW5nIFJldmlldywgMjAwNS4KKiBbQW4gT3ZlcnZpZXcg
b2YgQ29vcGVyYXRpdmUgYW5kIENvbXBldGl0aXZlIE11bHRpYWdlbnQgTGVh
cm5pbmddKGh0dHBzOi8vd3d3LnJlc2VhcmNoZ2F0ZS5uZXQvcHVibGljYXRp
b24vMjIxNjIyODAxX0FuX092ZXJ2aWV3X29mX0Nvb3BlcmF0aXZlX2FuZF9D
b21wZXRpdGl2ZV9NdWx0aWFnZW50X0xlYXJuaW5nKSBieSBQaWV0ZXIgSmFu
IOKAmXQgSG9lbkthcmwgVHV5bHNMaXZpdSBQYW5haXRTZWFuIEx1a2VKLiBB
LiBMYSBQb3V0csOpLiBBQU1BUydzIHdvcmtzaG9wIExBTUFTLCAyMDA1Lgoq
IFtDb29wZXJhdGl2ZSBtdWx0aS1hZ2VudCBsZWFybmluZzogdGhlIHN0YXRl
IG9mIHRoZSBhcnRdKGh0dHBzOi8vY3MuZ211LmVkdS9+ZWNsYWIvcGFwZXJz
L3BhbmFpdDA1Y29vcGVyYXRpdmUucGRmKSBieSBMaXZpdSBQYW5haXQgYW5k
IFNlYW4gTHVrZSwgMjAwNS4KCiMjIFJlc2VhcmNoIFBhcGVycwoKIyMjIEZy
YW1ld29yawoqIFtNZWFuIEZpZWxkIE11bHRpLUFnZW50IFJlaW5mb3JjZW1l
bnQgTGVhcm5pbmddKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8xODAyLjA1NDM4
LnBkZikgYnkgWWFvZG9uZyBZYW5nLCBSdWkgTHVvLCBNaW5uZSBMaSwgTWlu
ZyBaaG91LCBXZWluYW4gWmhhbmcsIGFuZCBKdW4gV2FuZy4gSUNNTCAyMDE4
LgoqIFtNdWx0aS1BZ2VudCBBY3Rvci1Dcml0aWMgZm9yIE1peGVkIENvb3Bl
cmF0aXZlLUNvbXBldGl0aXZlIEVudmlyb25tZW50c10oaHR0cHM6Ly9hcnhp
di5vcmcvcGRmLzE3MDYuMDIyNzUucGRmKSBieSBMb3dlIFIsIFd1IFksIFRh
bWFyIEEsIGV0IGFsLiBhclhpdiwgMjAxNy4KKiBbRGVlcCBEZWNlbnRyYWxp
emVkIE11bHRpLXRhc2sgTXVsdGktQWdlbnQgUkwgdW5kZXIgUGFydGlhbCBP
YnNlcnZhYmlsaXR5XShodHRwczovL2FyeGl2Lm9yZy9wZGYvMTcwMy4wNjE4
Mi5wZGYpIGJ5IE9taWRzaGFmaWVpIFMsIFBhemlzIEosIEFtYXRvIEMsIGV0
IGFsLiBhclhpdiwgMjAxNy4KKiBbTXVsdGlhZ2VudCBCaWRpcmVjdGlvbmFs
bHktQ29vcmRpbmF0ZWQgTmV0cyBmb3IgTGVhcm5pbmcgdG8gUGxheSBTdGFy
Q3JhZnQgQ29tYmF0IEdhbWVzXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMTcw
My4xMDA2OS5wZGYpIGJ5IFBlbmcgUCwgWXVhbiBRLCBXZW4gWSwgZXQgYWwu
IGFyWGl2LCAyMDE3LgoqIFtSb2J1c3QgQWR2ZXJzYXJpYWwgUmVpbmZvcmNl
bWVudCBMZWFybmluZ10oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzE3MDMuMDI3
MDIucGRmKSBieSBMZXJyZWwgUGludG8sIEphbWVzIERhdmlkc29uLCBSYWh1
bCBTdWt0aGFua2FyLCBBYmhpbmF2IEd1cHRhLiBhclhpdiwgMjAxNy4KKiBb
U3RhYmlsaXNpbmcgRXhwZXJpZW5jZSBSZXBsYXkgZm9yIERlZXAgTXVsdGkt
QWdlbnQgUmVpbmZvcmNlbWVudCBMZWFybmluZ10oaHR0cHM6Ly9hcnhpdi5v
cmcvcGRmLzE3MDIuMDg4ODcucGRmKSBieSBGb2Vyc3RlciBKLCBOYXJkZWxs
aSBOLCBGYXJxdWhhciBHLCBldCBhbC4gYXJYaXYsIDIwMTcuCiogW011bHRp
YWdlbnQgcmVpbmZvcmNlbWVudCBsZWFybmluZyB3aXRoIHNwYXJzZSBpbnRl
cmFjdGlvbnMgYnkgbmVnb3RpYXRpb24gYW5kIGtub3dsZWRnZSB0cmFuc2Zl
cl0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzE1MDguMDUzMjgucGRmKSBieSBa
aG91IEwsIFlhbmcgUCwgQ2hlbiBDLCBldCBhbC4gSUVFRSB0cmFuc2FjdGlv
bnMgb24gY3liZXJuZXRpY3MsIDIwMTYuCiogW0RlY2VudHJhbGlzZWQgbXVs
dGktYWdlbnQgcmVpbmZvcmNlbWVudCBsZWFybmluZyBmb3IgZHluYW1pYyBh
bmQgdW5jZXJ0YWluIGVudmlyb25tZW50c10oaHR0cHM6Ly9hcnhpdi5vcmcv
cGRmLzE0MDkuNDU2MS5wZGYpIGJ5IE1hcmluZXNjdSBBLCBEdXNwYXJpYyBJ
LCBUYXlsb3IgQSwgZXQgYWwuIGFyWGl2LCAyMDE0LgoqIFtDTEVBTmluZyB0
aGUgcmV3YXJkOiBjb3VudGVyZmFjdHVhbCBhY3Rpb25zIHRvIHJlbW92ZSBl
eHBsb3JhdG9yeSBhY3Rpb24gbm9pc2UgaW4gbXVsdGlhZ2VudCBsZWFybmlu
Z10oaHR0cDovL2lybGwuZWVjcy53c3UuZWR1L3dwLWNvbnRlbnQvcGFwZXJj
aXRlLWRhdGEvcGRmLzIwMTRpYXQtaG9sbWVzcGFya2VyLnBkZikgYnkgSG9s
bWVzUGFya2VyIEMsIFRheWxvciBNIEUsIEFnb2dpbm8gQSwgZXQgYWwuIEFB
TUFTLCAyMDE0LgoqIFtCYXllc2lhbiByZWluZm9yY2VtZW50IGxlYXJuaW5n
IGZvciBtdWx0aWFnZW50IHN5c3RlbXMgd2l0aCBzdGF0ZSB1bmNlcnRhaW50
eV0oaHR0cDovL3d3dy5mcmFuc29saWVob2VrLm5ldC9kb2NzL0FtYXRvMTNN
U0RNLnBkZikgYnkgQW1hdG8gQywgT2xpZWhvZWsgRiBBLiBNU0RNIFdvcmtz
aG9wLCAyMDEzLgoqIFtNdWx0aWFnZW50IGxlYXJuaW5nOiBCYXNpY3MsIGNo
YWxsZW5nZXMsIGFuZCBwcm9zcGVjdHNdKGh0dHA6Ly93d3cud2Vpc3MtZ2Vy
aGFyZC5pbmZvL3B1YmxpY2F0aW9ucy9BSV9NQUdBWklORV8yMDEyX1R1eWxz
V2Vpc3MucGRmKSBieSBUdXlscywgS2FybCwgYW5kIEdlcmhhcmQgV2Vpc3Mu
IEFJIE1hZ2F6aW5lLCAyMDEyLgoqIFtDbGFzc2VzIG9mIG11bHRpYWdlbnQg
cS1sZWFybmluZyBkeW5hbWljcyB3aXRoIGVwc2lsb24tZ3JlZWR5IGV4cGxv
cmF0aW9uXShodHRwOi8vaWNtbDIwMTAuaGFpZmEuaWwuaWJtLmNvbS9wYXBl
cnMvMTkxLnBkZikgYnkgV3VuZGVyIE0sIExpdHRtYW4gTSBMLCBCYWJlcyBN
LiBJQ01MLCAyMDEwLgoqIFtDb25kaXRpb25hbCByYW5kb20gZmllbGRzIGZv
ciBtdWx0aS1hZ2VudCByZWluZm9yY2VtZW50IGxlYXJuaW5nXShodHRwOi8v
d3d3Lm1hY2hpbmVsZWFybmluZy5vcmcvcHJvY2VlZGluZ3MvaWNtbDIwMDcv
cGFwZXJzLzg5LnBkZikgYnkgWmhhbmcgWCwgQWJlcmRlZW4gRCwgVmlzaHdh
bmF0aGFuIFMgViBOLiBJQ01MLCAyMDA3LgoqIFtNdWx0aS1hZ2VudCByZWlu
Zm9yY2VtZW50IGxlYXJuaW5nIHVzaW5nIHN0cmF0ZWdpZXMgYW5kIHZvdGlu
Z10oaHR0cDovL2FtYS5pbWFnLmZyL35wYXJ0YWxhcy9wYXJ0YWxhc21hcmwu
cGRmKSBieSBQYXJ0YWxhcywgSW9hbm5pcywgSW9hbm5pcyBGZW5lcmlzLCBh
bmQgSW9hbm5pcyBWbGFoYXZhcy4gSUNUQUksIDIwMDcuCiogW0EgcmVpbmZv
cmNlbWVudCBsZWFybmluZyBzY2hlbWUgZm9yIGEgcGFydGlhbGx5LW9ic2Vy
dmFibGUgbXVsdGktYWdlbnQgZ2FtZV0oaHR0cHM6Ly9wZGZzLnNlbWFudGlj
c2Nob2xhci5vcmcvNTdmYi9hZTAwZTE3YzBkNzk4NTU5ZWJhYjBlOGY0MjY3
ZTAzMmY0MWQucGRmKSBieSBJc2hpaSBTLCBGdWppdGEgSCwgTWl0c3V0YWtl
IE0sIGV0IGFsLiBNYWNoaW5lIExlYXJuaW5nLCAyMDA1LgoqIFtBc3ltbWV0
cmljIG11bHRpYWdlbnQgcmVpbmZvcmNlbWVudCBsZWFybmluZ10oaHR0cDov
L2xpYi50a2suZmkvRGlzcy8yMDA0L2lzYm45NTEyMjczNTk0L2FydGljbGUx
LnBkZikgYnkgS8O2bsO2bmVuIFYuIFdlYiBJbnRlbGxpZ2VuY2UgYW5kIEFn
ZW50IFN5c3RlbXMsIDIwMDQuCiogW0FkYXB0aXZlIHBvbGljeSBncmFkaWVu
dCBpbiBtdWx0aWFnZW50IGxlYXJuaW5nXShodHRwOi8vZGwuYWNtLm9yZy9j
aXRhdGlvbi5jZm0/aWQ9ODYwNjg2KSBieSBCYW5lcmplZSBCLCBQZW5nIEou
IEFBTUFTLCAyMDAzLgoqIFtSZWluZm9yY2VtZW50IGxlYXJuaW5nIHRvIHBs
YXkgYW4gb3B0aW1hbCBOYXNoIGVxdWlsaWJyaXVtIGluIHRlYW0gTWFya292
IGdhbWVzXShodHRwczovL3BhcGVycy5uaXBzLmNjL3BhcGVyLzIxNzEtcmVp
bmZvcmNlbWVudC1sZWFybmluZy10by1wbGF5LWFuLW9wdGltYWwtbmFzaC1l
cXVpbGlicml1bS1pbi10ZWFtLW1hcmtvdi1nYW1lcy5wZGYpIGJ5IFdhbmcg
WCwgU2FuZGhvbG0gVC4gTklQUywgMjAwMi4KKiBbTXVsdGlhZ2VudCBsZWFy
bmluZyB1c2luZyBhIHZhcmlhYmxlIGxlYXJuaW5nIHJhdGVdKGh0dHBzOi8v
d3d3LnNjaWVuY2VkaXJlY3QuY29tL3NjaWVuY2UvYXJ0aWNsZS9waWkvUzAw
MDQzNzAyMDIwMDEyMTIpIGJ5IE1pY2hhZWwgQm93bGluZyBhbmQgTWFudWVs
YSBWZWxvc28sIDIwMDIuCiogW1ZhbHVlLWZ1bmN0aW9uIHJlaW5mb3JjZW1l
bnQgbGVhcm5pbmcgaW4gTWFya292IGdhbWVdKGh0dHA6Ly93d3cuc3RzLnJw
aS5lZHUvfnJzdW4vc2ktbWFsL2FydGljbGUzLnBkZikgYnkgTGl0dG1hbiBN
IEwuIENvZ25pdGl2ZSBTeXN0ZW1zIFJlc2VhcmNoLCAyMDAxLgoqIFtIaWVy
YXJjaGljYWwgbXVsdGktYWdlbnQgcmVpbmZvcmNlbWVudCBsZWFybmluZ10o
aHR0cDovL3Jlc2VhcmNoZXJzLmxpbGxlLmlucmlhLmZyL35naGF2YW16YS9t
eV93ZWJzaXRlL1B1YmxpY2F0aW9uc19maWxlcy9hZ2VudHMwMS5wZGYpIGJ5
IE1ha2FyLCBSYWpiYWxhLCBTcmlkaGFyIE1haGFkZXZhbiwgYW5kIE1vaGFt
bWFkIEdoYXZhbXphZGVoLiBUaGUgZmlmdGggaW50ZXJuYXRpb25hbCBjb25m
ZXJlbmNlIG9uIEF1dG9ub21vdXMgYWdlbnRzLCAyMDAxLgoqIFtBbiBhbmFs
eXNpcyBvZiBzdG9jaGFzdGljIGdhbWUgdGhlb3J5IGZvciBtdWx0aWFnZW50
IHJlaW5mb3JjZW1lbnQgbGVhcm5pbmddKGh0dHBzOi8vd3d3LmNzLmNtdS5l
ZHUvfm1tdi9wYXBlcnMvMDBUUi1taWtlLnBkZikgYnkgTWljaGFlbCBCb3ds
aW5nIGFuZCBNYW51ZWxhIFZlbG9zbywgMjAwMC4KCiMjIyBKb2ludCBhY3Rp
b24gbGVhcm5pbmcKKiBbQVdFU09NRTogQSBnZW5lcmFsIG11bHRpYWdlbnQg
bGVhcm5pbmcgYWxnb3JpdGhtIHRoYXQgY29udmVyZ2VzIGluIHNlbGYtcGxh
eSBhbmQgbGVhcm5zIGEgYmVzdCByZXNwb25zZSBhZ2FpbnN0IHN0YXRpb25h
cnkgb3Bwb25lbnRzXShodHRwOi8vd3d3LmNzLmNtdS5lZHUvfmNvbml0emVy
L2F3ZXNvbWVNTDA2LnBkZikgYnkgQ29uaXR6ZXIgViwgU2FuZGhvbG0gVC4g
TWFjaGluZSBMZWFybmluZywgMjAwNy4KKiBbRXh0ZW5kaW5nIFEtTGVhcm5p
bmcgdG8gR2VuZXJhbCBBZGFwdGl2ZSBNdWx0aS1BZ2VudCBTeXN0ZW1zXSho
dHRwczovL3BhcGVycy5uaXBzLmNjL3BhcGVyLzI1MDMtZXh0ZW5kaW5nLXEt
bGVhcm5pbmctdG8tZ2VuZXJhbC1hZGFwdGl2ZS1tdWx0aS1hZ2VudC1zeXN0
ZW1zLnBkZikgYnkgVGVzYXVybywgR2VyYWxkLiBOSVBTLCAyMDAzLgoqIFtN
dWx0aWFnZW50IHJlaW5mb3JjZW1lbnQgbGVhcm5pbmc6IHRoZW9yZXRpY2Fs
IGZyYW1ld29yayBhbmQgYW4gYWxnb3JpdGhtLl0oaHR0cDovL3d3dy5saXJt
bS5mci9+anEvQ291cnMvM2N5Y2xlL21vZHVsZS9IdVdlbGxtYW45OGljbWwu
cGRmKSBieSBIdSwgSnVubGluZywgYW5kIE1pY2hhZWwgUC4gV2VsbG1hbi4g
SUNNTCwgMTk5OC4KKiBbVGhlIGR5bmFtaWNzIG9mIHJlaW5mb3JjZW1lbnQg
bGVhcm5pbmcgaW4gY29vcGVyYXRpdmUgbXVsdGlhZ2VudCBzeXN0ZW1zXSho
dHRwOi8vd3d3LmFhYWkub3JnL1BhcGVycy9BQUFJLzE5OTgvQUFBSTk4LTEw
Ni5wZGYpIGJ5IENsYXVzIEMsIEJvdXRpbGllciBDLiBBQUFJLCAxOTk4Lgoq
IFtNYXJrb3YgZ2FtZXMgYXMgYSBmcmFtZXdvcmsgZm9yIG11bHRpLWFnZW50
IHJlaW5mb3JjZW1lbnQgbGVhcm5pbmddKGh0dHBzOi8vd3d3LmNzLmR1a2Uu
ZWR1L2NvdXJzZXMvc3ByaW5nMDcvY3BzMjk2LjMvbGl0dG1hbjk0bWFya292
LnBkZikgYnkgTGl0dG1hbiwgTWljaGFlbCBMLiBJQ01MLCAxOTk0LgoKIyMj
IENvb3BlcmF0aW9uIGFuZCBjb21wZXRpdGlvbgoqIFtFbWVyZ2VudCBjb21w
bGV4aXR5IHRocm91Z2ggbXVsdGktYWdlbnQgY29tcGV0aXRpb25dKGh0dHBz
Oi8vYXJ4aXYub3JnL3BkZi8xNzEwLjAzNzQ4LnBkZikgYnkgVHJhcGl0IEJh
bnNhbCwgSmFrdWIgUGFjaG9ja2ksIFN6eW1vbiBTaWRvciwgSWx5YSBTdXRz
a2V2ZXIsIElnb3IgTW9yZGF0Y2gsIDIwMTguCiogW0xlYXJuaW5nIHdpdGgg
b3Bwb25lbnQgbGVhcm5pbmcgYXdhcmVuZXNzXShodHRwczovL2FyeGl2Lm9y
Zy9wZGYvMTcwOS4wNDMyNi5wZGYpIGJ5IEpha29iIEZvZXJzdGVyLCBSaWNo
YXJkIFkuIENoZW4yLCBNYXJ1YW4gQWwtU2hlZGl2YXQsIFNoaW1vbiBXaGl0
ZXNvbiwgUGlldGVyIEFiYmVlbCwgSWdvciBNb3JkYXRjaCwgMjAxOC4KKiBb
TXVsdGktYWdlbnQgUmVpbmZvcmNlbWVudCBMZWFybmluZyBpbiBTZXF1ZW50
aWFsIFNvY2lhbCBEaWxlbW1hc10oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzE3
MDIuMDMwMzcucGRmKSBieSBMZWlibyBKIFosIFphbWJhbGRpIFYsIExhbmN0
b3QgTSwgZXQgYWwuIGFyWGl2LCAyMDE3LiBbW1Bvc3RdKGh0dHBzOi8vZGVl
cG1pbmQuY29tL2Jsb2cvdW5kZXJzdGFuZGluZy1hZ2VudC1jb29wZXJhdGlv
bi8pXQoqIFtSZWluZm9yY2VtZW50IExlYXJuaW5nIGluIFBhcnRpYWxseSBP
YnNlcnZhYmxlIE11bHRpYWdlbnQgU2V0dGluZ3M6IE1vbnRlIENhcmxvIEV4
cGxvcmluZyBQb2xpY2llcyB3aXRoIFBBQyBCb3VuZHNdKGh0dHA6Ly9vcmNh
LnN0LnVzbS5lZHUvfmJhbmVyamVlL3BhcGVycy9wNTMwLWNlcmVuLnBkZikg
YnkgUm9pIENlcmVuLCBQcmFzaGFudCBEb3NoaSwgYW5kIEJpa3JhbWppdCBC
YW5lcmplZSwgcHAuIDUzMC01MzgsIEFBTUFTIDIwMTYuCiogW09wcG9uZW50
IE1vZGVsaW5nIGluIERlZXAgUmVpbmZvcmNlbWVudCBMZWFybmluZ10oaHR0
cDovL3d3dy51bWlhY3MudW1kLmVkdS9+aGFsL2RvY3MvZGF1bWUxNm9wcG9u
ZW50LnBkZikgYnkgSGUgSCwgQm95ZC1HcmFiZXIgSiwgS3dvayBLLCBldCBh
bC4gSUNNTCwgMjAxNi4KKiBbTXVsdGlhZ2VudCBjb29wZXJhdGlvbiBhbmQg
Y29tcGV0aXRpb24gd2l0aCBkZWVwIHJlaW5mb3JjZW1lbnQgbGVhcm5pbmdd
KGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8xNTExLjA4Nzc5LnBkZikgYnkgVGFt
cHV1IEEsIE1hdGlpc2VuIFQsIEtvZGVsamEgRCwgZXQgYWwuIGFyWGl2LCAy
MDE1LgoqIFtFbW90aW9uYWwgbXVsdGlhZ2VudCByZWluZm9yY2VtZW50IGxl
YXJuaW5nIGluIHNvY2lhbCBkaWxlbW1hc10oaHR0cDovL3d3dy51b3cuZWR1
LmF1L35mcmVuL2RvY3VtZW50cy9FTVJfMjAxMy5wZGYpIGJ5IFl1IEMsIFpo
YW5nIE0sIFJlbiBGLiBJbnRlcm5hdGlvbmFsIENvbmZlcmVuY2Ugb24gUHJp
bmNpcGxlcyBhbmQgUHJhY3RpY2Ugb2YgTXVsdGktQWdlbnQgU3lzdGVtcywg
MjAxMy4KKiBbTXVsdGktYWdlbnQgcmVpbmZvcmNlbWVudCBsZWFybmluZyBp
biBjb21tb24gaW50ZXJlc3QgYW5kIGZpeGVkIHN1bSBzdG9jaGFzdGljIGdh
bWVzOiBBbiBleHBlcmltZW50YWwgc3R1ZHldKGh0dHA6Ly93d3cuam1sci5v
cmcvcGFwZXJzL3ZvbHVtZTkvYmFiMDhhL2JhYjA4YS5wZGYpIGJ5IEJhYiwg
QXZyYWhhbSwgYW5kIFJvbmVuIEkuIEJyYWZtYW4uIEpvdXJuYWwgb2YgTWFj
aGluZSBMZWFybmluZyBSZXNlYXJjaCwgMjAwOC4KKiBbQ29tYmluaW5nIHBv
bGljeSBzZWFyY2ggd2l0aCBwbGFubmluZyBpbiBtdWx0aS1hZ2VudCBjb29w
ZXJhdGlvbl0oaHR0cHM6Ly9wZGZzLnNlbWFudGljc2Nob2xhci5vcmcvNTEy
MC9kOWYyYzczOGFkMjIzZTlmOGYxNGNiM2ZkNTYxMjIzOWEzNWMucGRmKSBi
eSBNYSBKLCBDYW1lcm9uIFMuIFJvYm90IFNvY2NlciBXb3JsZCBDdXAsIDIw
MDguCiogW0NvbGxhYm9yYXRpdmUgbXVsdGlhZ2VudCByZWluZm9yY2VtZW50
IGxlYXJuaW5nIGJ5IHBheW9mZiBwcm9wYWdhdGlvbl0oaHR0cDovL3d3dy5q
bWxyLm9yZy9wYXBlcnMvdm9sdW1lNy9rb2swNmEva29rMDZhLnBkZikgYnkg
S29rIEogUiwgVmxhc3NpcyBOLiBKTUxSLCAyMDA2LgoqIFtMZWFybmluZyB0
byBjb29wZXJhdGUgaW4gbXVsdGktYWdlbnQgc29jaWFsIGRpbGVtbWFzXSho
dHRwOi8vY2l0ZXNlZXJ4LmlzdC5wc3UuZWR1L3ZpZXdkb2MvZG93bmxvYWQ/
ZG9pPTEwLjEuMS4xMDcuMzM1JnJlcD1yZXAxJnR5cGU9cGRmKSBieSBkZSBD
b3RlIEUgTSwgTGF6YXJpYyBBLCBSZXN0ZWxsaSBNLiBBQU1BUywgMjAwNi4K
KiBbTGVhcm5pbmcgdG8gY29tcGV0ZSwgY29tcHJvbWlzZSwgYW5kIGNvb3Bl
cmF0ZSBpbiByZXBlYXRlZCBnZW5lcmFsLXN1bSBnYW1lc10oaHR0cDovL3d3
dy5tYWNoaW5lbGVhcm5pbmcub3JnL3Byb2NlZWRpbmdzL2ljbWwyMDA1L3Bh
cGVycy8wMjFfTGVhcm5pbmdfQ3JhbmRhbGxHb29kcmljaC5wZGYpIGJ5IENy
YW5kYWxsIEogVywgR29vZHJpY2ggTSBBLiBJQ01MLCAyMDA1LgoqIFtTcGFy
c2UgY29vcGVyYXRpdmUgUS1sZWFybmluZ10oaHR0cDovL3d3dy5tYWNoaW5l
bGVhcm5pbmcub3JnL3Byb2NlZWRpbmdzL2ljbWwyMDA0L3BhcGVycy8yNjcu
cGRmKSBieSBLb2sgSiBSLCBWbGFzc2lzIE4uIElDTUwsIDIwMDQuCgojIyMg
Q29vcmRpbmF0aW9uCiogW0Nvb3JkaW5hdGVkIE11bHRpLUFnZW50IEltaXRh
dGlvbiBMZWFybmluZ10oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzE3MDMuMDMx
MjEucGRmKSBieSBMZSBIIE0sIFl1ZSBZLCBDYXJyIFAuIGFyWGl2LCAyMDE3
LgoqIFtSZWluZm9yY2VtZW50IHNvY2lhbCBsZWFybmluZyBvZiBjb29yZGlu
YXRpb24gaW4gbmV0d29ya2VkIGNvb3BlcmF0aXZlIG11bHRpYWdlbnQgc3lz
dGVtc10oaHR0cDovL21pcGMuaW5mLmVkLmFjLnVrLzIwMTQvcGFwZXJzL21p
cGMyMDE0X2hhb19ldGFsLnBkZikgYnkgSGFvIEosIEh1YW5nIEQsIENhaSBZ
LCBldCBhbC4gQUFBSSBXb3Jrc2hvcCwgMjAxNC4KKiBbQ29vcmRpbmF0aW5n
IG11bHRpLWFnZW50IHJlaW5mb3JjZW1lbnQgbGVhcm5pbmcgd2l0aCBsaW1p
dGVkIGNvbW11bmljYXRpb25dKGh0dHA6Ly93d3cuYWFtYXMtY29uZmVyZW5j
ZS5vcmcvUHJvY2VlZGluZ3MvYWFtYXMyMDEzL2RvY3MvcDExMDEucGRmKSBi
eSBaaGFuZywgQ2hvbmdqaWUsIGFuZCBWaWN0b3IgTGVzc2VyLiBBQU1BUywg
MjAxMy4KKiBbQ29vcmRpbmF0aW9uIGd1aWRlZCByZWluZm9yY2VtZW50IGxl
YXJuaW5nXShodHRwOi8vd3d3LmlmYWFtYXMub3JnL1Byb2NlZWRpbmdzL2Fh
bWFzMjAxMi9wYXBlcnMvMUJfMS5wZGYpIGJ5IExhdSBRIFAsIExlZSBNIEws
IEhzdSBXLiBBQU1BUywgMjAxMi4KKiBbQ29vcmRpbmF0aW9uIGluIG11bHRp
YWdlbnQgcmVpbmZvcmNlbWVudCBsZWFybmluZzogYSBCYXllc2lhbiBhcHBy
b2FjaF0oaHR0cHM6Ly93d3cuY3MudG9yb250by5lZHUvfmNlYmx5L1BhcGVy
cy9iYXllc01BUkwucGRmKSBieSBDaGFsa2lhZGFraXMgRywgQm91dGlsaWVy
IEMuIEFBTUFTLCAyMDAzLgoqIFtDb29yZGluYXRlZCByZWluZm9yY2VtZW50
IGxlYXJuaW5nXShodHRwczovL3VzZXJzLmNzLmR1a2UuZWR1L35wYXJyL2lj
bWwwMi5wZGYpIGJ5IEd1ZXN0cmluIEMsIExhZ291ZGFraXMgTSwgUGFyciBS
LiBJQ01MLCAyMDAyLgoqIFtSZWluZm9yY2VtZW50IGxlYXJuaW5nIG9mIGNv
b3JkaW5hdGlvbiBpbiBjb29wZXJhdGl2ZSBtdWx0aS1hZ2VudCBzeXN0ZW1z
XShodHRwOi8vd3d3LmFhYWkub3JnL1BhcGVycy9BQUFJLzIwMDIvQUFBSTAy
LTA1MC5wZGYpIGJ5IEthcGV0YW5ha2lzIFMsIEt1ZGVua28gRC4gQUFBSS9J
QUFJLCAyMDAyLgoKIyMjIFNlY3VyaXR5CiogW01hcmtvdiBTZWN1cml0eSBH
YW1lczogTGVhcm5pbmcgaW4gU3BhdGlhbCBTZWN1cml0eSBQcm9ibGVtc10o
aHR0cDovL3d3dy5mcmFuc29saWVob2VrLm5ldC9kb2NzL0tsaW1hMTZMSUNN
QVMucGRmKSBieSBLbGltYSBSLCBUdXlscyBLLCBPbGllaG9layBGLiBUaGUg
TGVhcm5pbmcsIEluZmVyZW5jZSBhbmQgQ29udHJvbCBvZiBNdWx0aS1BZ2Vu
dCBTeXN0ZW1zIGF0IE5JUFMsIDIwMTYuCiogW0Nvb3BlcmF0aXZlIENhcHR1
cmUgYnkgTXVsdGktQWdlbnQgdXNpbmcgUmVpbmZvcmNlbWVudCBMZWFybmlu
ZywgQXBwbGljYXRpb24gZm9yIFNlY3VyaXR5IFBhdHJvbCBTeXN0ZW1zXSho
dHRwOi8vaWVlZXhwbG9yZS5pZWVlLm9yZy9zdGFtcC9zdGFtcC5qc3A/YXJu
dW1iZXI9NzI0NDY4MikgYnkgWWFzdXl1a2kgUywgSGlyb2Z1bWkgTywgVGFk
YXNoaSBNLCBldCBhbC4gQ29udHJvbCBDb25mZXJlbmNlIChBU0NDKSwgMjAx
NQoqIFtJbXByb3ZpbmcgbGVhcm5pbmcgYW5kIGFkYXB0YXRpb24gaW4gc2Vj
dXJpdHkgZ2FtZXMgYnkgZXhwbG9pdGluZyBpbmZvcm1hdGlvbiBhc3ltbWV0
cnldKGh0dHA6Ly93d3c0Lm5jc3UuZWR1L35oZGFpL2luZm9jb20tMjAxNS1Y
SC5wZGYpIGJ5IEhlIFgsIERhaSBILCBOaW5nIFAuIElORk9DT00sIDIwMTUu
CgojIyMgU2VsZi1QbGF5CiogW0EgVW5pZmllZCBHYW1lLVRoZW9yZXRpYyBB
cHByb2FjaCB0byBNdWx0aWFnZW50IFJlaW5mb3JjZW1lbnQgTGVhcm5pbmdd
KGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8xNzExLjAwODMyLnBkZikgYnkgTWFy
YyBMYW5jdG90LCBWaW5pY2l1cyBaYW1iYWxkaSwgQXVkcnVuYXMgR3J1c2x5
cywgQW5nZWxpa2kgTGF6YXJpZG91LCBLYXJsIFR1eWxzLCBKdWxpZW4gUGVy
b2xhdCwgRGF2aWQgU2lsdmVyLCBUaG9yZSBHcmFlcGVsLiBOSVBTIDIwMTcu
CiogW0RlZXAgcmVpbmZvcmNlbWVudCBsZWFybmluZyBmcm9tIHNlbGYtcGxh
eSBpbiBpbXBlcmZlY3QtaW5mb3JtYXRpb24gZ2FtZXNdKGh0dHBzOi8vYXJ4
aXYub3JnL3BkZi8xNjAzLjAxMTIxLnBkZikgYnkgSGVpbnJpY2gsIEpvaGFu
bmVzLCBhbmQgRGF2aWQgU2lsdmVyLiBhclhpdiwgMjAxNi4KKiBbRmljdGl0
aW91cyBTZWxmLVBsYXkgaW4gRXh0ZW5zaXZlLUZvcm0gR2FtZXNdKGh0dHA6
Ly9qbWxyLm9yZy9wcm9jZWVkaW5ncy9wYXBlcnMvdjM3L2hlaW5yaWNoMTUu
cGRmKSBieSBIZWlucmljaCwgSm9oYW5uZXMsIE1hcmMgTGFuY3RvdCwgYW5k
IERhdmlkIFNpbHZlci4gSUNNTCwgMjAxNS4KCiMjIyBMZWFybmluZyBUbyBD
b21tdW5pY2F0ZQoqIFtFbWVyZ2VudCBDb21tdW5pY2F0aW9uIHRocm91Z2gg
TmVnb3RpYXRpb25dKGh0dHBzOi8vb3BlbnJldmlldy5uZXQvcGRmP2lkPUhr
NldoYWdSVykgYnkgS3JpcyBDYW8sIEFuZ2VsaWtpIExhemFyaWRvdSwgTWFy
YyBMYW5jdG90LCBKb2VsIFogTGVpYm8sIEthcmwgVHV5bHMsIFN0ZXBoZW4g
Q2xhcmssIDIwMTguCiogW0VtZXJnZW5jZSBvZiBMaW5ndWlzdGljIENvbW11
bmljYXRpb24gRnJvbSBSZWZlcmVudGlhbCBHYW1lcyB3aXRoIFN5bWJvbGlj
IGFuZCBQaXhlbCBJbnB1dF0oaHR0cHM6Ly9vcGVucmV2aWV3Lm5ldC9wZGY/
aWQ9SEpHdjFaLUFXKSBieSBBbmdlbGlraSBMYXphcmlkb3UsIEthcmwgTW9y
aXR6IEhlcm1hbm4sIEthcmwgVHV5bHMsIFN0ZXBoZW4gQ2xhcmsKKiBbRU1F
UkdFTkNFIE9GIExBTkdVQUdFIFdJVEggTVVMVEktQUdFTlQgR0FNRVM6IExF
QVJOSU5HIFRPIENPTU1VTklDQVRFIFdJVEggU0VRVUVOQ0VTIE9GIFNZTUJP
TFNdKGh0dHBzOi8vb3BlbnJldmlldy5uZXQvcGRmP2lkPVNrYXhuS0VZZykg
YnkgU2VyaGlpIEhhdnJ5bG92LCBJdmFuIFRpdG92LiBJQ0xSIFdvcmtzaG9w
LCAyMDE3LgoqIFtMZWFybmluZyBDb29wZXJhdGl2ZSBWaXN1YWwgRGlhbG9n
IEFnZW50cyB3aXRoIERlZXAgUmVpbmZvcmNlbWVudCBMZWFybmluZ10oaHR0
cHM6Ly9hcnhpdi5vcmcvcGRmLzE3MDMuMDY1ODUucGRmKSBieSBBYmhpc2hl
ayBEYXMsIFNhdHdpayBLb3R0dXIsIGV0IGFsLiBhclhpdiwgMjAxNy4KKiBb
RW1lcmdlbmNlIG9mIEdyb3VuZGVkIENvbXBvc2l0aW9uYWwgTGFuZ3VhZ2Ug
aW4gTXVsdGktQWdlbnQgUG9wdWxhdGlvbnNdKGh0dHBzOi8vYXJ4aXYub3Jn
L3BkZi8xNzAzLjA0OTA4LnBkZikgYnkgSWdvciBNb3JkYXRjaCwgUGlldGVy
IEFiYmVlbC4gYXJYaXYsIDIwMTcuIFtbUG9zdF0oaHR0cHM6Ly9vcGVuYWku
Y29tL2Jsb2cvbGVhcm5pbmctdG8tY29tbXVuaWNhdGUvKV0KKiBbQ29vcGVy
YXRpb24gYW5kIGNvbW11bmljYXRpb24gaW4gbXVsdGlhZ2VudCBkZWVwIHJl
aW5mb3JjZW1lbnQgbGVhcm5pbmddKGh0dHBzOi8vcmVwb3NpdG9yaWVzLmxp
Yi51dGV4YXMuZWR1L2hhbmRsZS8yMTUyLzQ1NjgxKSBieSBIYXVza25lY2h0
IE0gSi4gMjAxNy4KKiBbTXVsdGktYWdlbnQgY29vcGVyYXRpb24gYW5kIHRo
ZSBlbWVyZ2VuY2Ugb2YgKG5hdHVyYWwpIGxhbmd1YWdlXShodHRwczovL29w
ZW5yZXZpZXcubmV0L3BkZj9pZD1IazhOM1NjbGcpIGJ5IExhemFyaWRvdSBB
LCBQZXlzYWtob3ZpY2ggQSwgQmFyb25pIE0uIGFyWGl2LCAyMDE2LgoqIFtM
ZWFybmluZyB0byBjb21tdW5pY2F0ZSB0byBzb2x2ZSByaWRkbGVzIHdpdGgg
ZGVlcCBkaXN0cmlidXRlZCByZWN1cnJlbnQgcS1uZXR3b3Jrc10oaHR0cHM6
Ly9hcnhpdi5vcmcvcGRmLzE2MDIuMDI2NzIucGRmKSBieSBGb2Vyc3RlciBK
IE4sIEFzc2FlbCBZIE0sIGRlIEZyZWl0YXMgTiwgZXQgYWwuIGFyWGl2LCAy
MDE2LgoqIFtMZWFybmluZyB0byBjb21tdW5pY2F0ZSB3aXRoIGRlZXAgbXVs
dGktYWdlbnQgcmVpbmZvcmNlbWVudCBsZWFybmluZ10oaHR0cHM6Ly9hcnhp
di5vcmcvcGRmLzE2MDUuMDY2NzYucGRmKSBieSBGb2Vyc3RlciBKLCBBc3Nh
ZWwgWSBNLCBkZSBGcmVpdGFzIE4sIGV0IGFsLiBOSVBTLCAyMDE2LgoqIFtM
ZWFybmluZyBtdWx0aWFnZW50IGNvbW11bmljYXRpb24gd2l0aCBiYWNrcHJv
cGFnYXRpb25dKGh0dHA6Ly9wYXBlcnMubmlwcy5jYy9wYXBlci82Mzk4LWxl
YXJuaW5nLW11bHRpYWdlbnQtY29tbXVuaWNhdGlvbi13aXRoLWJhY2twcm9w
YWdhdGlvbi5wZGYpIGJ5IFN1a2hiYWF0YXIgUywgRmVyZ3VzIFIuIE5JUFMs
IDIwMTYuCiogW0VmZmljaWVudCBkaXN0cmlidXRlZCByZWluZm9yY2VtZW50
IGxlYXJuaW5nIHRocm91Z2ggYWdyZWVtZW50XShodHRwOi8vcGVvcGxlLmNz
YWlsLm1pdC5lZHUvbHBrL3BhcGVycy9kYXJzMDgucGRmKSBieSBWYXJzaGF2
c2theWEgUCwgS2FlbGJsaW5nIEwgUCwgUnVzIEQuIERpc3RyaWJ1dGVkIEF1
dG9ub21vdXMgUm9ib3RpYyBTeXN0ZW1zLCAyMDA5LgoKIyMjIFRyYW5zZmVy
IExlYXJuaW5nCiogW1NpbXVsdGFuZW91c2x5IExlYXJuaW5nIGFuZCBBZHZp
c2luZyBpbiBNdWx0aWFnZW50IFJlaW5mb3JjZW1lbnQgTGVhcm5pbmddKGh0
dHA6Ly93d3cuaWZhYW1hcy5vcmcvUHJvY2VlZGluZ3MvYWFtYXMyMDE3L3Bk
ZnMvcDExMDAucGRmKSBieSBTaWx2YSwgRmVsaXBlIExlbm8gZGE7IEdsYXR0
LCBSdWJlbjsgYW5kIENvc3RhLCBBbm5hIEhlbGVuYSBSZWFsaS4gQUFNQVMs
IDIwMTcuCiogW0FjY2VsZXJhdGluZyBNdWx0aWFnZW50IFJlaW5mb3JjZW1l
bnQgTGVhcm5pbmcgdGhyb3VnaCBUcmFuc2ZlciBMZWFybmluZ10oaHR0cHM6
Ly93d3cuYWFhaS5vcmcvb2NzL2luZGV4LnBocC9BQUFJL0FBQUkxNy9wYXBl
ci9kb3dubG9hZC8xNDIxNy8xNDAwNSkgYnkgU2lsdmEsIEZlbGlwZSBMZW5v
IGRhOyBhbmQgQ29zdGEsIEFubmEgSGVsZW5hIFJlYWxpLiBBQUFJLCAyMDE3
LgoqIFtBY2NlbGVyYXRpbmcgbXVsdGktYWdlbnQgcmVpbmZvcmNlbWVudCBs
ZWFybmluZyB3aXRoIGR5bmFtaWMgY28tbGVhcm5pbmddKGh0dHBzOi8vd2Vi
LmNzLnVtYXNzLmVkdS9wdWJsaWNhdGlvbi9kb2NzLzIwMTUvVU0tQ1MtMjAx
NS0wMDQucGRmKSBieSBHYXJhbnQgRCwgZGEgU2lsdmEgQiBDLCBMZXNzZXIg
ViwgZXQgYWwuIFRlY2huaWNhbCByZXBvcnQsIDIwMTUKKiBbVHJhbnNmZXIg
bGVhcm5pbmcgaW4gbXVsdGktYWdlbnQgc3lzdGVtcyB0aHJvdWdoIHBhcmFs
bGVsIHRyYW5zZmVyXShodHRwczovL3d3dy5zY3NzLnRjZC5pZS9+dGF5bG9y
YWwvcmVzL3BhcGVycy9UYXlsb3JfUGFyYWxsZWxUcmFuc2ZlckxlYXJuaW5n
X0lDTUxfMjAxMy5wZGYpIGJ5IFRheWxvciwgQWRhbSwgZXQgYWwuIElDTUws
IDIwMTMuCiogW1RyYW5zZmVyIGxlYXJuaW5nIGluIG11bHRpLWFnZW50IHJl
aW5mb3JjZW1lbnQgbGVhcm5pbmcgZG9tYWluc10oaHR0cHM6Ly9ld3JsLmZp
bGVzLndvcmRwcmVzcy5jb20vMjAxMS8wOC9ld3JsMjAxMV9zdWJtaXNzaW9u
XzE5LnBkZikgYnkgQm91dHNpb3VraXMsIEdlb3JnaW9zLCBJb2FubmlzIFBh
cnRhbGFzLCBhbmQgSW9hbm5pcyBWbGFoYXZhcy4gRXVyb3BlYW4gV29ya3No
b3Agb24gUmVpbmZvcmNlbWVudCBMZWFybmluZywgMjAxMS4KKiBbVHJhbnNm
ZXIgTGVhcm5pbmcgZm9yIE11bHRpLWFnZW50IENvb3JkaW5hdGlvbl0oaHR0
cHM6Ly9haS52dWIuYWMuYmUvfnlkZWhhdXdlL3B1YmxpY2F0aW9ucy9JQ0FB
UlQyMDExXzIucGRmKSBieSBWcmFuY3gsIFBldGVyLCBZYW5uLU1pY2hhw6ts
IERlIEhhdXdlcmUsIGFuZCBBbm4gTm93w6kuIElDQUFSVCwgMjAxMS4KCiMj
IyBJbWl0YXRpb24gYW5kIEludmVyc2UgUmVpbmZvcmNlbWVudCBMZWFybmlu
ZwoqIFtNdWx0aS1BZ2VudCBBZHZlcnNhcmlhbCBJbnZlcnNlIFJlaW5mb3Jj
ZW1lbnQgTGVhcm5pbmddKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xOTA3LjEz
MjIwKSBieSBMYW50YW8gWXUsIEppYW1pbmcgU29uZywgU3RlZmFubyBFcm1v
bi4gSUNNTCAyMDE5LgoqIFtNdWx0aS1BZ2VudCBHZW5lcmF0aXZlIEFkdmVy
c2FyaWFsIEltaXRhdGlvbiBMZWFybmluZ10oaHR0cHM6Ly9wYXBlcnMubmlw
cy5jYy9wYXBlci83OTc1LW11bHRpLWFnZW50LWdlbmVyYXRpdmUtYWR2ZXJz
YXJpYWwtaW1pdGF0aW9uLWxlYXJuaW5nKSBieSBKaWFtaW5nIFNvbmcsIEhv
bmd5dSBSZW4sIERvcnNhIFNhZGlnaCwgU3RlZmFubyBFcm1vbi4gTmV1cklQ
UyAyMDE4LgoqIFtDb29wZXJhdGl2ZSBpbnZlcnNlIHJlaW5mb3JjZW1lbnQg
bGVhcm5pbmddKGh0dHA6Ly9wYXBlcnMubmlwcy5jYy9wYXBlci82NDIwLWNv
b3BlcmF0aXZlLWludmVyc2UtcmVpbmZvcmNlbWVudC1sZWFybmluZy5wZGYp
IGJ5IEhhZGZpZWxkLU1lbmVsbCBELCBSdXNzZWxsIFMgSiwgQWJiZWVsIFAs
IGV0IGFsLiBOSVBTLCAyMDE2LgoqIFtDb21wYXJpc29uIG9mIE11bHRpLWFn
ZW50IGFuZCBTaW5nbGUtYWdlbnQgSW52ZXJzZSBMZWFybmluZyBvbiBhIFNp
bXVsYXRlZCBTb2NjZXIgRXhhbXBsZV0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRm
LzE0MDMuNjgyMi5wZGYpIGJ5IExpbiBYLCBCZWxpbmcgUCBBLCBDb2dpbGwg
Ui4gYXJYaXYsIDIwMTQuCiogW011bHRpLWFnZW50IGludmVyc2UgcmVpbmZv
cmNlbWVudCBsZWFybmluZyBmb3IgemVyby1zdW0gZ2FtZXNdKGh0dHBzOi8v
YXJ4aXYub3JnL3BkZi8xNDAzLjY1MDgucGRmKSBieSBMaW4gWCwgQmVsaW5n
IFAgQSwgQ29naWxsIFIuIGFyWGl2LCAyMDE0LgoqIFtNdWx0aS1yb2JvdCBp
bnZlcnNlIHJlaW5mb3JjZW1lbnQgbGVhcm5pbmcgdW5kZXIgb2NjbHVzaW9u
IHdpdGggaW50ZXJhY3Rpb25zXShodHRwOi8vYWFtYXMyMDE0LmxpcDYuZnIv
cHJvY2VlZGluZ3MvYWFtYXMvcDE3My5wZGYpIGJ5IEJvZ2VydCBLLCBEb3No
aSBQLiBBQU1BUywgMjAxNC4KKiBbTXVsdGktYWdlbnQgaW52ZXJzZSByZWlu
Zm9yY2VtZW50IGxlYXJuaW5nXShodHRwOi8vaG9tZXMuc29pYy5pbmRpYW5h
LmVkdS9uYXRhcmFzci9QYXBlcnMvbWFpcmwucGRmKSBieSBOYXRhcmFqYW4g
UywgS3VuYXB1bGkgRywgSnVkYWggSywgZXQgYWwuIElDTUxBLCAyMDEwLgoK
IyMjIE1ldGEgTGVhcm5pbmcKKiBbQ29udGludW91cyBBZGFwdGF0aW9uIHZp
YSBNZXRhLUxlYXJuaW5nIGluIE5vbnN0YXRpb25hcnkgYW5kIENvbXBldGl0
aXZlIEVudmlyb25tZW50c10oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzE3MTAu
MDM2NDEucGRmKSBieSBsLVNoZWRpdmF0LCBNLiAyMDE4LgoKCiMjIyBBcHBs
aWNhdGlvbgoqIFtNQWdlbnQ6IEEgTWFueS1BZ2VudCBSZWluZm9yY2VtZW50
IExlYXJuaW5nIFBsYXRmb3JtIGZvciBBcnRpZmljaWFsIENvbGxlY3RpdmUg
SW50ZWxsaWdlbmNlXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMTcxMi4wMDYw
MC5wZGYpIGJ5IFpoZW5nIEwgZXQgYWwuIE5JUFMgMjAxNyAmIEFBQUkgMjAx
OCBEZW1vLiAoW0dpdGh1YiBQYWdlXShodHRwczovL2dpdGh1Yi5jb20vZ2Vl
ay1haS9NQWdlbnQpKQoqIFtDb2xsYWJvcmF0aXZlIERlZXAgUmVpbmZvcmNl
bWVudCBMZWFybmluZyBmb3IgSm9pbnQgT2JqZWN0IFNlYXJjaF0oaHR0cHM6
Ly9hcnhpdi5vcmcvcGRmLzE3MDIuMDU1NzMucGRmKSBieSBLb25nIFgsIFhp
biBCLCBXYW5nIFksIGV0IGFsLiBhclhpdiwgMjAxNy4KKiBbTXVsdGktQWdl
bnQgU3RvY2hhc3RpYyBTaW11bGF0aW9uIG9mIE9jY3VwYW50cyBmb3IgQnVp
bGRpbmcgU2ltdWxhdGlvbl0oaHR0cDovL3d3dy5pYnBzYS5vcmcvcHJvY2Vl
ZGluZ3MvQlMyMDE3L0JTMjAxN18wNTEucGRmKSBieSBDaGFwbWFuIEosIFNp
ZWJlcnMgUCwgRGFycmVuIFIuIEJ1aWxkaW5nIFNpbXVsYXRpb24sIDIwMTcu
CiogW0V4dGVuZGluZyBOby1NQVNTOiBNdWx0aS1BZ2VudCBTdG9jaGFzdGlj
IFNpbXVsYXRpb24gZm9yIERlbWFuZCBSZXNwb25zZSBvZiByZXNpZGVudGlh
bCBhcHBsaWFuY2VzXShodHRwOi8vd3d3LmlicHNhLm9yZy9wcm9jZWVkaW5n
cy9CUzIwMTcvQlMyMDE3XzA1Ni5wZGYpIGJ5IFNhbmNoby1Ub23DoXMgQSwg
Q2hhcG1hbiBKLCBTdW1uZXIgTSwgRGFycmVuIFIuIEJ1aWxkaW5nIFNpbXVs
YXRpb24sIDIwMTcuCiogW1NhZmUsIE11bHRpLUFnZW50LCBSZWluZm9yY2Vt
ZW50IExlYXJuaW5nIGZvciBBdXRvbm9tb3VzIERyaXZpbmddKGh0dHBzOi8v
YXJ4aXYub3JnL3BkZi8xNjEwLjAzMjk1LnBkZikgYnkgU2hhbGV2LVNod2Fy
dHogUywgU2hhbW1haCBTLCBTaGFzaHVhIEEuIGFyWGl2LCAyMDE2LgoqIFtB
cHBseWluZyBtdWx0aS1hZ2VudCByZWluZm9yY2VtZW50IGxlYXJuaW5nIHRv
IHdhdGVyc2hlZCBtYW5hZ2VtZW50XShodHRwczovL3d3dy5yZXNlYXJjaGdh
dGUubmV0L3Byb2ZpbGUvS2FybF9NYXNvbi9wdWJsaWNhdGlvbi8yOTk0MTY5
NTVfQXBwbHlpbmdfTXVsdGktQWdlbnRfUmVpbmZvcmNlbWVudF9MZWFybmlu
Z190b19XYXRlcnNoZWRfTWFuYWdlbWVudC9saW5rcy81NmY1NDViOTA4YWU5
NWU4YjZkMWQzZmYucGRmKSBieSBNYXNvbiwgS2FybCwgZXQgYWwuIFByb2Nl
ZWRpbmdzIG9mIHRoZSBBZGFwdGl2ZSBhbmQgTGVhcm5pbmcgQWdlbnRzIHdv
cmtzaG9wIGF0IEFBTUFTLCAyMDE2LgoqIFtDcm93ZCBTaW11bGF0aW9uIFZp
YSBNdWx0aS1BZ2VudCBSZWluZm9yY2VtZW50IExlYXJuaW5nXShodHRwOi8v
d3d3LmFhYWkub3JnL29jcy9pbmRleC5waHAvQUlJREUvQUlJREUxMC9wYXBl
ci92aWV3RmlsZS8yMTEyLzI1NTApIGJ5IFRvcnJleSBMLiBBQUFJLCAyMDEw
LgoqIFtUcmFmZmljIGxpZ2h0IGNvbnRyb2wgYnkgbXVsdGlhZ2VudCByZWlu
Zm9yY2VtZW50IGxlYXJuaW5nIHN5c3RlbXNdKGh0dHBzOi8vcGRmcy5zZW1h
bnRpY3NjaG9sYXIub3JnLzYxYmMvYjk4YjdhZTNkZjg5NGY0ZjcyYWJhM2Qx
NDViZDQ4Y2EyY2Q1LnBkZikgYnkgQmFra2VyLCBCcmFtLCBldCBhbC4gSW50
ZXJhY3RpdmUgQ29sbGFib3JhdGl2ZSBJbmZvcm1hdGlvbiBTeXN0ZW1zLCAy
MDEwLgoqIFtNdWx0aWFnZW50IHJlaW5mb3JjZW1lbnQgbGVhcm5pbmcgZm9y
IHVyYmFuIHRyYWZmaWMgY29udHJvbCB1c2luZyBjb29yZGluYXRpb24gZ3Jh
cGhzXShodHRwczovL3N0YWZmLnNjaWVuY2UudXZhLm5sL3MuYS53aGl0ZXNv
bi9wdWJzL2t1eWVyZWNtbDA4LnBkZikgYnkgS3V5ZXIsIExpb3IsIGV0IGFs
LiBvaW50IEV1cm9wZWFuIENvbmZlcmVuY2Ugb24gTWFjaGluZSBMZWFybmlu
ZyBhbmQgS25vd2xlZGdlIERpc2NvdmVyeSBpbiBEYXRhYmFzZXMsIDIwMDgu
CiogW0EgbXVsdGktYWdlbnQgUS1sZWFybmluZyBmcmFtZXdvcmsgZm9yIG9w
dGltaXppbmcgc3RvY2sgdHJhZGluZyBzeXN0ZW1zXShodHRwczovL3d3dy5y
ZXNlYXJjaGdhdGUubmV0L3B1YmxpY2F0aW9uLzIyMTQ2NTM0N19BX011bHRp
LWFnZW50X1EtbGVhcm5pbmdfRnJhbWV3b3JrX2Zvcl9PcHRpbWl6aW5nX1N0
b2NrX1RyYWRpbmdfU3lzdGVtcykgYnkgTGVlIEogVywgSmFuZ21pbiBPLiBE
RVhBLCAyMDAyLgoqIFtNdWx0aS1hZ2VudCByZWluZm9yY2VtZW50IGxlYXJu
aW5nIGZvciB0cmFmZmljIGxpZ2h0IGNvbnRyb2xdKGh0dHA6Ly9jaXRlc2Vl
cnguaXN0LnBzdS5lZHUvdmlld2RvYy9kb3dubG9hZDtqc2Vzc2lvbmlkPTQy
Mjc0N0NCOUFGNTUyQ0YxQzRFNDU1MjIwRTNGOTZGP2RvaT0xMC4xLjEuMzIu
OTg4NyZyZXA9cmVwMSZ0eXBlPXBkZikgYnkgV2llcmluZywgTWFyY28uIElD
TUwuIDIwMDAuCg==
",,1580,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
