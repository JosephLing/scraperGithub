name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'project-guidelines',95876775,b'A set of best practices for JavaScript projects',b'JavaScript',14,20100,,533,False,b'https://api.github.com/repos/elsewhencode/project-guidelines/forks',"ClvkuK3mlofniYhdKC4vUkVBRE1FLXpoLm1kKQogfCBb5pel5pys6Kqe54mI
XSguL1JFQURNRS1qYS5tZCkKIHwgW+2VnOq1reyWtF0oLi9SRUFETUUta28u
bWQpCiB8IFvQoNGD0YHRgdC60LjQuV0oLi9SRUFETUUtcnUubWQpCiB8IFtQ
b3J0dWd1w6pzXSguL1JFQURNRS1wdC1CUi5tZCkKCls8aW1nIHNyYz0iLi9p
bWFnZXMvZWxzZXdoZW4tbG9nby5wbmciIHdpZHRoPSIxODAiIGhlaWdodD0i
MTgwIj5dKGh0dHA6Ly9lbHNld2hlbi5jby8pCgoKIyBQcm9qZWN0IEd1aWRl
bGluZXMgJm1pZGRvdDsgWyFbUFJzIFdlbGNvbWVdKGh0dHBzOi8vaW1nLnNo
aWVsZHMuaW8vYmFkZ2UvUFJzLXdlbGNvbWUtYnJpZ2h0Z3JlZW4uc3ZnP3N0
eWxlPWZsYXQtc3F1YXJlKV0oaHR0cDovL21ha2VhcHVsbHJlcXVlc3QuY29t
KQo+IFdoaWxlIGRldmVsb3BpbmcgYSBuZXcgcHJvamVjdCBpcyBsaWtlIHJv
bGxpbmcgb24gYSBncmVlbiBmaWVsZCBmb3IgeW91LCBtYWludGFpbmluZyBp
dCBpcyBhIHBvdGVudGlhbCBkYXJrIHR3aXN0ZWQgbmlnaHRtYXJlIGZvciBz
b21lb25lIGVsc2UuCkhlcmUncyBhIGxpc3Qgb2YgZ3VpZGVsaW5lcyB3ZSd2
ZSBmb3VuZCwgd3JpdHRlbiBhbmQgZ2F0aGVyZWQgdGhhdCAod2UgdGhpbmsp
IHdvcmtzIHJlYWxseSB3ZWxsIHdpdGggbW9zdCBKYXZhU2NyaXB0IHByb2pl
Y3RzIGhlcmUgYXQgW2Vsc2V3aGVuXShodHRwOi8vZWxzZXdoZW4uY28pLgpJ
ZiB5b3Ugd2FudCB0byBzaGFyZSBhIGJlc3QgcHJhY3RpY2UsIG9yIHRoaW5r
IG9uZSBvZiB0aGVzZSBndWlkZWxpbmVzIHNob3VsZCBiZSByZW1vdmVkLCBb
ZmVlbCBmcmVlIHRvIHNoYXJlIGl0IHdpdGggdXNdKGh0dHA6Ly9tYWtlYXB1
bGxyZXF1ZXN0LmNvbSkuCgo8aHI+CgotIFtHaXRdKCNnaXQpCiAgICAtIFtT
b21lIEdpdCBydWxlc10oI3NvbWUtZ2l0LXJ1bGVzKQogICAgLSBbR2l0IHdv
cmtmbG93XSgjZ2l0LXdvcmtmbG93KQogICAgLSBbV3JpdGluZyBnb29kIGNv
bW1pdCBtZXNzYWdlc10oI3dyaXRpbmctZ29vZC1jb21taXQtbWVzc2FnZXMp
Ci0gW0RvY3VtZW50YXRpb25dKCNkb2N1bWVudGF0aW9uKQotIFtFbnZpcm9u
bWVudHNdKCNlbnZpcm9ubWVudHMpCiAgICAtIFtDb25zaXN0ZW50IGRldiBl
bnZpcm9ubWVudHNdKCNjb25zaXN0ZW50LWRldi1lbnZpcm9ubWVudHMpCiAg
ICAtIFtDb25zaXN0ZW50IGRlcGVuZGVuY2llc10oI2NvbnNpc3RlbnQtZGVw
ZW5kZW5jaWVzKQotIFtEZXBlbmRlbmNpZXNdKCNkZXBlbmRlbmNpZXMpCi0g
W1Rlc3RpbmddKCN0ZXN0aW5nKQotIFtTdHJ1Y3R1cmUgYW5kIE5hbWluZ10o
I3N0cnVjdHVyZS1hbmQtbmFtaW5nKQotIFtDb2RlIHN0eWxlXSgjY29kZS1z
dHlsZSkKICAgIC0gW1NvbWUgY29kZSBzdHlsZSBndWlkZWxpbmVzXSgjY29k
ZS1zdHlsZS1jaGVjaykKICAgIC0gW0VuZm9yY2luZyBjb2RlIHN0eWxlIHN0
YW5kYXJkc10oI2VuZm9yY2luZy1jb2RlLXN0eWxlLXN0YW5kYXJkcykKLSBb
TG9nZ2luZ10oI2xvZ2dpbmcpCi0gW0FQSV0oI2FwaSkKICAgIC0gW0FQSSBk
ZXNpZ25dKCNhcGktZGVzaWduKQogICAgLSBbQVBJIHNlY3VyaXR5XSgjYXBp
LXNlY3VyaXR5KQogICAgLSBbQVBJIGRvY3VtZW50YXRpb25dKCNhcGktZG9j
dW1lbnRhdGlvbikKLSBbTGljZW5zaW5nXSgjbGljZW5zaW5nKQoKPGEgbmFt
ZT0iZ2l0Ij48L2E+CiMjIDEuIEdpdAohW0dpdF0oL2ltYWdlcy9icmFuY2hp
bmcucG5nKQo8YSBuYW1lPSJzb21lLWdpdC1ydWxlcyI+PC9hPgoKIyMjIDEu
MSBTb21lIEdpdCBydWxlcwpUaGVyZSBhcmUgYSBzZXQgb2YgcnVsZXMgdG8g
a2VlcCBpbiBtaW5kOgoqIFBlcmZvcm0gd29yayBpbiBhIGZlYXR1cmUgYnJh
bmNoLgogICAgCiAgICBfV2h5Ol8KICAgID5CZWNhdXNlIHRoaXMgd2F5IGFs
bCB3b3JrIGlzIGRvbmUgaW4gaXNvbGF0aW9uIG9uIGEgZGVkaWNhdGVkIGJy
YW5jaCByYXRoZXIgdGhhbiB0aGUgbWFpbiBicmFuY2guIEl0IGFsbG93cyB5
b3UgdG8gc3VibWl0IG11bHRpcGxlIHB1bGwgcmVxdWVzdHMgd2l0aG91dCBj
b25mdXNpb24uIFlvdSBjYW4gaXRlcmF0ZSB3aXRob3V0IHBvbGx1dGluZyB0
aGUgbWFzdGVyIGJyYW5jaCB3aXRoIHBvdGVudGlhbGx5IHVuc3RhYmxlLCB1
bmZpbmlzaGVkIGNvZGUuIFtyZWFkIG1vcmUuLi5dKGh0dHBzOi8vd3d3LmF0
bGFzc2lhbi5jb20vZ2l0L3R1dG9yaWFscy9jb21wYXJpbmctd29ya2Zsb3dz
I2ZlYXR1cmUtYnJhbmNoLXdvcmtmbG93KQoqIEJyYW5jaCBvdXQgZnJvbSBg
ZGV2ZWxvcGAKICAgIAogICAgX1doeTpfCiAgICA+VGhpcyB3YXksIHlvdSBj
YW4gbWFrZSBzdXJlIHRoYXQgY29kZSBpbiBtYXN0ZXIgd2lsbCBhbG1vc3Qg
YWx3YXlzIGJ1aWxkIHdpdGhvdXQgcHJvYmxlbXMsIGFuZCBjYW4gYmUgbW9z
dGx5IHVzZWQgZGlyZWN0bHkgZm9yIHJlbGVhc2VzICh0aGlzIG1pZ2h0IGJl
IG92ZXJraWxsIGZvciBzb21lIHByb2plY3RzKS4KCiogTmV2ZXIgcHVzaCBp
bnRvIGBkZXZlbG9wYCBvciBgbWFzdGVyYCBicmFuY2guIE1ha2UgYSBQdWxs
IFJlcXVlc3QuCiAgICAKICAgIF9XaHk6XwogICAgPiBJdCBub3RpZmllcyB0
ZWFtIG1lbWJlcnMgdGhhdCB0aGV5IGhhdmUgY29tcGxldGVkIGEgZmVhdHVy
ZS4gSXQgYWxzbyBlbmFibGVzIGVhc3kgcGVlci1yZXZpZXcgb2YgdGhlIGNv
ZGUgYW5kIGRlZGljYXRlcyBmb3J1bSBmb3IgZGlzY3Vzc2luZyB0aGUgcHJv
cG9zZWQgZmVhdHVyZS4KCiogVXBkYXRlIHlvdXIgbG9jYWwgYGRldmVsb3Bg
IGJyYW5jaCBhbmQgZG8gYW4gaW50ZXJhY3RpdmUgcmViYXNlIGJlZm9yZSBw
dXNoaW5nIHlvdXIgZmVhdHVyZSBhbmQgbWFraW5nIGEgUHVsbCBSZXF1ZXN0
LgoKICAgIF9XaHk6XwogICAgPiBSZWJhc2luZyB3aWxsIG1lcmdlIGluIHRo
ZSByZXF1ZXN0ZWQgYnJhbmNoIChgbWFzdGVyYCBvciBgZGV2ZWxvcGApIGFu
ZCBhcHBseSB0aGUgY29tbWl0cyB0aGF0IHlvdSBoYXZlIG1hZGUgbG9jYWxs
eSB0byB0aGUgdG9wIG9mIHRoZSBoaXN0b3J5IHdpdGhvdXQgY3JlYXRpbmcg
YSBtZXJnZSBjb21taXQgKGFzc3VtaW5nIHRoZXJlIHdlcmUgbm8gY29uZmxp
Y3RzKS4gUmVzdWx0aW5nIGluIGEgbmljZSBhbmQgY2xlYW4gaGlzdG9yeS4g
W3JlYWQgbW9yZSAuLi5dKGh0dHBzOi8vd3d3LmF0bGFzc2lhbi5jb20vZ2l0
L3R1dG9yaWFscy9tZXJnaW5nLXZzLXJlYmFzaW5nKQoKKiBSZXNvbHZlIHBv
dGVudGlhbCBjb25mbGljdHMgd2hpbGUgcmViYXNpbmcgYW5kIGJlZm9yZSBt
YWtpbmcgYSBQdWxsIFJlcXVlc3QuCiogRGVsZXRlIGxvY2FsIGFuZCByZW1v
dGUgZmVhdHVyZSBicmFuY2hlcyBhZnRlciBtZXJnaW5nLgogICAgCiAgICBf
V2h5Ol8KICAgID4gSXQgd2lsbCBjbHV0dGVyIHVwIHlvdXIgbGlzdCBvZiBi
cmFuY2hlcyB3aXRoIGRlYWQgYnJhbmNoZXMuIEl0IGVuc3VyZXMgeW91IG9u
bHkgZXZlciBtZXJnZSB0aGUgYnJhbmNoIGJhY2sgaW50byAoYG1hc3RlcmAg
b3IgYGRldmVsb3BgKSBvbmNlLiBGZWF0dXJlIGJyYW5jaGVzIHNob3VsZCBv
bmx5IGV4aXN0IHdoaWxlIHRoZSB3b3JrIGlzIHN0aWxsIGluIHByb2dyZXNz
LgoKKiBCZWZvcmUgbWFraW5nIGEgUHVsbCBSZXF1ZXN0LCBtYWtlIHN1cmUg
eW91ciBmZWF0dXJlIGJyYW5jaCBidWlsZHMgc3VjY2Vzc2Z1bGx5IGFuZCBw
YXNzZXMgYWxsIHRlc3RzIChpbmNsdWRpbmcgY29kZSBzdHlsZSBjaGVja3Mp
LgogICAgCiAgICBfV2h5Ol8KICAgID4gWW91IGFyZSBhYm91dCB0byBhZGQg
eW91ciBjb2RlIHRvIGEgc3RhYmxlIGJyYW5jaC4gSWYgeW91ciBmZWF0dXJl
LWJyYW5jaCB0ZXN0cyBmYWlsLCB0aGVyZSBpcyBhIGhpZ2ggY2hhbmNlIHRo
YXQgeW91ciBkZXN0aW5hdGlvbiBicmFuY2ggYnVpbGQgd2lsbCBmYWlsIHRv
by4gQWRkaXRpb25hbGx5LCB5b3UgbmVlZCB0byBhcHBseSBjb2RlIHN0eWxl
IGNoZWNrIGJlZm9yZSBtYWtpbmcgYSBQdWxsIFJlcXVlc3QuIEl0IGFpZHMg
cmVhZGFiaWxpdHkgYW5kIHJlZHVjZXMgdGhlIGNoYW5jZSBvZiBmb3JtYXR0
aW5nIGZpeGVzIGJlaW5nIG1pbmdsZWQgaW4gd2l0aCBhY3R1YWwgY2hhbmdl
cy4KCiogVXNlIFt0aGlzXSguLy5naXRpZ25vcmUpIGAuZ2l0aWdub3JlYCBm
aWxlLgogICAgCiAgICBfV2h5Ol8KICAgID4gSXQgYWxyZWFkeSBoYXMgYSBs
aXN0IG9mIHN5c3RlbSBmaWxlcyB0aGF0IHNob3VsZCBub3QgYmUgc2VudCB3
aXRoIHlvdXIgY29kZSBpbnRvIGEgcmVtb3RlIHJlcG9zaXRvcnkuIEluIGFk
ZGl0aW9uLCBpdCBleGNsdWRlcyBzZXR0aW5nIGZvbGRlcnMgYW5kIGZpbGVz
IGZvciBtb3N0IHVzZWQgZWRpdG9ycywgYXMgd2VsbCBhcyBtb3N0IGNvbW1v
biBkZXBlbmRlbmN5IGZvbGRlcnMuCgoqIFByb3RlY3QgeW91ciBgZGV2ZWxv
cGAgYW5kIGBtYXN0ZXJgIGJyYW5jaC4KICAKICAgIF9XaHk6XwogICAgPiBJ
dCBwcm90ZWN0cyB5b3VyIHByb2R1Y3Rpb24tcmVhZHkgYnJhbmNoZXMgZnJv
bSByZWNlaXZpbmcgdW5leHBlY3RlZCBhbmQgaXJyZXZlcnNpYmxlIGNoYW5n
ZXMuIHJlYWQgbW9yZS4uLiBbR2l0aHViXShodHRwczovL2hlbHAuZ2l0aHVi
LmNvbS9hcnRpY2xlcy9hYm91dC1wcm90ZWN0ZWQtYnJhbmNoZXMvKSwgW0Jp
dGJ1Y2tldF0oaHR0cHM6Ly9jb25mbHVlbmNlLmF0bGFzc2lhbi5jb20vYml0
YnVja2V0c2VydmVyL3VzaW5nLWJyYW5jaC1wZXJtaXNzaW9ucy03NzY2Mzk4
MDcuaHRtbCkgYW5kIFtHaXRMYWJdKGh0dHBzOi8vZG9jcy5naXRsYWIuY29t
L2VlL3VzZXIvcHJvamVjdC9wcm90ZWN0ZWRfYnJhbmNoZXMuaHRtbCkKCjxh
IG5hbWU9ImdpdC13b3JrZmxvdyI+PC9hPgojIyMgMS4yIEdpdCB3b3JrZmxv
dwpCZWNhdXNlIG9mIG1vc3Qgb2YgdGhlIHJlYXNvbnMgYWJvdmUsIHdlIHVz
ZSBbRmVhdHVyZS1icmFuY2gtd29ya2Zsb3ddKGh0dHBzOi8vd3d3LmF0bGFz
c2lhbi5jb20vZ2l0L3R1dG9yaWFscy9jb21wYXJpbmctd29ya2Zsb3dzI2Zl
YXR1cmUtYnJhbmNoLXdvcmtmbG93KSB3aXRoIFtJbnRlcmFjdGl2ZSBSZWJh
c2luZ10oaHR0cHM6Ly93d3cuYXRsYXNzaWFuLmNvbS9naXQvdHV0b3JpYWxz
L21lcmdpbmctdnMtcmViYXNpbmcjdGhlLWdvbGRlbi1ydWxlLW9mLXJlYmFz
aW5nKSBhbmQgc29tZSBlbGVtZW50cyBvZiBbR2l0Zmxvd10oaHR0cHM6Ly93
d3cuYXRsYXNzaWFuLmNvbS9naXQvdHV0b3JpYWxzL2NvbXBhcmluZy13b3Jr
Zmxvd3MjZ2l0Zmxvdy13b3JrZmxvdykgKG5hbWluZyBhbmQgaGF2aW5nIGEg
ZGV2ZWxvcCBicmFuY2gpLiBUaGUgbWFpbiBzdGVwcyBhcmUgYXMgZm9sbG93
czoKCiogRm9yIGEgbmV3IHByb2plY3QsIGluaXRpYWxpemUgYSBnaXQgcmVw
b3NpdG9yeSBpbiB0aGUgcHJvamVjdCBkaXJlY3RvcnkuIF9fRm9yIHN1YnNl
cXVlbnQgZmVhdHVyZXMvY2hhbmdlcyB0aGlzIHN0ZXAgc2hvdWxkIGJlIGln
bm9yZWRfXy4KICAgYGBgc2gKICAgY2QgPHByb2plY3QgZGlyZWN0b3J5Pgog
ICBnaXQgaW5pdAogICBgYGAKCiogQ2hlY2tvdXQgYSBuZXcgZmVhdHVyZS9i
dWctZml4IGJyYW5jaC4KICAgIGBgYHNoCiAgICBnaXQgY2hlY2tvdXQgLWIg
PGJyYW5jaG5hbWU+CiAgICBgYGAKKiBNYWtlIENoYW5nZXMuCiAgICBgYGBz
aAogICAgZ2l0IGFkZCA8ZmlsZTE+IDxmaWxlMj4gLi4uCiAgICBnaXQgY29t
bWl0CiAgICBgYGAKICAgIF9XaHk6XwogICAgPiBgZ2l0IGFkZCA8ZmlsZTE+
IDxmaWxlMj4gLi4uIGAgLSB5b3Ugc2hvdWxkIGFkZCBvbmx5IGZpbGVzIHRo
YXQgbWFrZSB1cCBhIHNtYWxsIGFuZCBjb2hlcmVudCBjaGFuZ2UuCiAgICAK
ICAgID4gYGdpdCBjb21taXRgIHdpbGwgc3RhcnQgYW4gZWRpdG9yIHdoaWNo
IGxldHMgeW91IHNlcGFyYXRlIHRoZSBzdWJqZWN0IGZyb20gdGhlIGJvZHku
IAogICAgCiAgICA+IFJlYWQgbW9yZSBhYm91dCBpdCBpbiAqc2VjdGlvbiAx
LjMqLgogICAgCiAgICBfVGlwOl8KICAgID4gWW91IGNvdWxkIHVzZSBgZ2l0
IGFkZCAtcGAgaW5zdGVhZCwgd2hpY2ggd2lsbCBnaXZlIHlvdSBjaGFuY2Ug
dG8gcmV2aWV3IGFsbCBvZiB0aGUgaW50cm9kdWNlZCBjaGFuZ2VzIG9uZSBi
eSBvbmUsIGFuZCBkZWNpZGUgd2hldGhlciB0byBpbmNsdWRlIHRoZW0gaW4g
dGhlIGNvbW1pdCBvciBub3QuCgoqIFN5bmMgd2l0aCByZW1vdGUgdG8gZ2V0
IGNoYW5nZXMgeW914oCZdmUgbWlzc2VkLgogICAgYGBgc2gKICAgIGdpdCBj
aGVja291dCBkZXZlbG9wCiAgICBnaXQgcHVsbAogICAgYGBgCiAgICAKICAg
IF9XaHk6XwogICAgPiBUaGlzIHdpbGwgZ2l2ZSB5b3UgYSBjaGFuY2UgdG8g
ZGVhbCB3aXRoIGNvbmZsaWN0cyBvbiB5b3VyIG1hY2hpbmUgd2hpbGUgcmVi
YXNpbmcgKGxhdGVyKSByYXRoZXIgdGhhbiBjcmVhdGluZyBhIFB1bGwgUmVx
dWVzdCB0aGF0IGNvbnRhaW5zIGNvbmZsaWN0cy4KICAgIAoqIFVwZGF0ZSB5
b3VyIGZlYXR1cmUgYnJhbmNoIHdpdGggbGF0ZXN0IGNoYW5nZXMgZnJvbSBk
ZXZlbG9wIGJ5IGludGVyYWN0aXZlIHJlYmFzZS4KICAgIGBgYHNoCiAgICBn
aXQgY2hlY2tvdXQgPGJyYW5jaG5hbWU+CiAgICBnaXQgcmViYXNlIC1pIC0t
YXV0b3NxdWFzaCBkZXZlbG9wCiAgICBgYGAKICAgIAogICAgX1doeTpfCiAg
ICA+IFlvdSBjYW4gdXNlIC0tYXV0b3NxdWFzaCB0byBzcXVhc2ggYWxsIHlv
dXIgY29tbWl0cyB0byBhIHNpbmdsZSBjb21taXQuIE5vYm9keSB3YW50cyBt
YW55IGNvbW1pdHMgZm9yIGEgc2luZ2xlIGZlYXR1cmUgaW4gZGV2ZWxvcCBi
cmFuY2guIFtyZWFkIG1vcmUuLi5dKGh0dHBzOi8vcm9ib3RzLnRob3VnaHRi
b3QuY29tL2F1dG9zcXVhc2hpbmctZ2l0LWNvbW1pdHMpCiAgICAKKiBJZiB5
b3UgZG9u4oCZdCBoYXZlIGNvbmZsaWN0cywgc2tpcCB0aGlzIHN0ZXAuIElm
IHlvdSBoYXZlIGNvbmZsaWN0cywgW3Jlc29sdmUgdGhlbV0oaHR0cHM6Ly9o
ZWxwLmdpdGh1Yi5jb20vYXJ0aWNsZXMvcmVzb2x2aW5nLWEtbWVyZ2UtY29u
ZmxpY3QtdXNpbmctdGhlLWNvbW1hbmQtbGluZS8pICBhbmQgY29udGludWUg
cmViYXNlLgogICAgYGBgc2gKICAgIGdpdCBhZGQgPGZpbGUxPiA8ZmlsZTI+
IC4uLgogICAgZ2l0IHJlYmFzZSAtLWNvbnRpbnVlCiAgICBgYGAKKiBQdXNo
IHlvdXIgYnJhbmNoLiBSZWJhc2Ugd2lsbCBjaGFuZ2UgaGlzdG9yeSwgc28g
eW91J2xsIGhhdmUgdG8gdXNlIGAtZmAgdG8gZm9yY2UgY2hhbmdlcyBpbnRv
IHRoZSByZW1vdGUgYnJhbmNoLiBJZiBzb21lb25lIGVsc2UgaXMgd29ya2lu
ZyBvbiB5b3VyIGJyYW5jaCwgdXNlIHRoZSBsZXNzIGRlc3RydWN0aXZlIGAt
LWZvcmNlLXdpdGgtbGVhc2VgLgogICAgYGBgc2gKICAgIGdpdCBwdXNoIC1m
CiAgICBgYGAKICAgIAogICAgX1doeTpfCiAgICA+IFdoZW4geW91IGRvIGEg
cmViYXNlLCB5b3UgYXJlIGNoYW5naW5nIHRoZSBoaXN0b3J5IG9uIHlvdXIg
ZmVhdHVyZSBicmFuY2guIEFzIGEgcmVzdWx0LCBHaXQgd2lsbCByZWplY3Qg
bm9ybWFsIGBnaXQgcHVzaGAuIEluc3RlYWQsIHlvdSdsbCBuZWVkIHRvIHVz
ZSB0aGUgLWYgb3IgLS1mb3JjZSBmbGFnLiBbcmVhZCBtb3JlLi4uXShodHRw
czovL2RldmVsb3Blci5hdGxhc3NpYW4uY29tL2Jsb2cvMjAxNS8wNC9mb3Jj
ZS13aXRoLWxlYXNlLykKICAgIAogICAgCiogTWFrZSBhIFB1bGwgUmVxdWVz
dC4KKiBQdWxsIHJlcXVlc3Qgd2lsbCBiZSBhY2NlcHRlZCwgbWVyZ2VkIGFu
ZCBjbG9zZSBieSBhIHJldmlld2VyLgoqIFJlbW92ZSB5b3VyIGxvY2FsIGZl
YXR1cmUgYnJhbmNoIGlmIHlvdSdyZSBkb25lLgoKICBgYGBzaAogIGdpdCBi
cmFuY2ggLWQgPGJyYW5jaG5hbWU+CiAgYGBgCiAgdG8gcmVtb3ZlIGFsbCBi
cmFuY2hlcyB3aGljaCBhcmUgbm8gbG9uZ2VyIG9uIHJlbW90ZQogIGBgYHNo
CiAgZ2l0IGZldGNoIC1wICYmIGZvciBicmFuY2ggaW4gYGdpdCBicmFuY2gg
LXZ2IC0tbm8tY29sb3IgfCBncmVwICc6IGdvbmVdJyB8IGF3ayAne3ByaW50
ICQxfSdgOyBkbyBnaXQgYnJhbmNoIC1EICRicmFuY2g7IGRvbmUKICBgYGAK
CjxhIG5hbWU9IndyaXRpbmctZ29vZC1jb21taXQtbWVzc2FnZXMiPjwvYT4K
IyMjIDEuMyBXcml0aW5nIGdvb2QgY29tbWl0IG1lc3NhZ2VzCgpIYXZpbmcg
YSBnb29kIGd1aWRlbGluZSBmb3IgY3JlYXRpbmcgY29tbWl0cyBhbmQgc3Rp
Y2tpbmcgdG8gaXQgbWFrZXMgd29ya2luZyB3aXRoIEdpdCBhbmQgY29sbGFi
b3JhdGluZyB3aXRoIG90aGVycyBhIGxvdCBlYXNpZXIuIEhlcmUgYXJlIHNv
bWUgcnVsZXMgb2YgdGh1bWIgKFtzb3VyY2VdKGh0dHBzOi8vY2hyaXMuYmVh
bXMuaW8vcG9zdHMvZ2l0LWNvbW1pdC8jc2V2ZW4tcnVsZXMpKToKCiAqIFNl
cGFyYXRlIHRoZSBzdWJqZWN0IGZyb20gdGhlIGJvZHkgd2l0aCBhIG5ld2xp
bmUgYmV0d2VlbiB0aGUgdHdvLgoKICAgIF9XaHk6XwogICAgPiBHaXQgaXMg
c21hcnQgZW5vdWdoIHRvIGRpc3Rpbmd1aXNoIHRoZSBmaXJzdCBsaW5lIG9m
IHlvdXIgY29tbWl0IG1lc3NhZ2UgYXMgeW91ciBzdW1tYXJ5LiBJbiBmYWN0
LCBpZiB5b3UgdHJ5IGdpdCBzaG9ydGxvZywgaW5zdGVhZCBvZiBnaXQgbG9n
LCB5b3Ugd2lsbCBzZWUgYSBsb25nIGxpc3Qgb2YgY29tbWl0IG1lc3NhZ2Vz
LCBjb25zaXN0aW5nIG9mIHRoZSBpZCBvZiB0aGUgY29tbWl0LCBhbmQgdGhl
IHN1bW1hcnkgb25seS4KCiAqIExpbWl0IHRoZSBzdWJqZWN0IGxpbmUgdG8g
NTAgY2hhcmFjdGVycyBhbmQgV3JhcCB0aGUgYm9keSBhdCA3MiBjaGFyYWN0
ZXJzLgoKICAgIF93aHlfCiAgICA+IENvbW1pdHMgc2hvdWxkIGJlIGFzIGZp
bmUtZ3JhaW5lZCBhbmQgZm9jdXNlZCBhcyBwb3NzaWJsZSwgaXQgaXMgbm90
IHRoZSBwbGFjZSB0byBiZSB2ZXJib3NlLiBbcmVhZCBtb3JlLi4uXShodHRw
czovL21lZGl1bS5jb20vQHByZXNsYXZyYWNoZXYvd2hhdC1zLXdpdGgtdGhl
LTUwLTcyLXJ1bGUtOGE5MDZmNjFmMDljKQoKICogQ2FwaXRhbGl6ZSB0aGUg
c3ViamVjdCBsaW5lLgogKiBEbyBub3QgZW5kIHRoZSBzdWJqZWN0IGxpbmUg
d2l0aCBhIHBlcmlvZC4KICogVXNlIFtpbXBlcmF0aXZlIG1vb2RdKGh0dHBz
Oi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0ltcGVyYXRpdmVfbW9vZCkgaW4g
dGhlIHN1YmplY3QgbGluZS4KCiAgICBfV2h5Ol8KICAgID4gUmF0aGVyIHRo
YW4gd3JpdGluZyBtZXNzYWdlcyB0aGF0IHNheSB3aGF0IGEgY29tbWl0dGVy
IGhhcyBkb25lLiBJdCdzIGJldHRlciB0byBjb25zaWRlciB0aGVzZSBtZXNz
YWdlcyBhcyB0aGUgaW5zdHJ1Y3Rpb25zIGZvciB3aGF0IGlzIGdvaW5nIHRv
IGJlIGRvbmUgYWZ0ZXIgdGhlIGNvbW1pdCBpcyBhcHBsaWVkIG9uIHRoZSBy
ZXBvc2l0b3J5LiBbcmVhZCBtb3JlLi4uXShodHRwczovL25ld3MueWNvbWJp
bmF0b3IuY29tL2l0ZW0/aWQ9MjA3OTYxMikKCgogKiBVc2UgdGhlIGJvZHkg
dG8gZXhwbGFpbiAqKndoYXQqKiBhbmQgKip3aHkqKiBhcyBvcHBvc2VkIHRv
ICoqaG93KiouCgogPGEgbmFtZT0iZG9jdW1lbnRhdGlvbiI+PC9hPgojIyAy
LiBEb2N1bWVudGF0aW9uCgohW0RvY3VtZW50YXRpb25dKC9pbWFnZXMvZG9j
dW1lbnRhdGlvbi5wbmcpCgoqIFVzZSB0aGlzIFt0ZW1wbGF0ZV0oLi9SRUFE
TUUuc2FtcGxlLm1kKSBmb3IgYFJFQURNRS5tZGAsIEZlZWwgZnJlZSB0byBh
ZGQgdW5jb3ZlcmVkIHNlY3Rpb25zLgoqIEZvciBwcm9qZWN0cyB3aXRoIG1v
cmUgdGhhbiBvbmUgcmVwb3NpdG9yeSwgcHJvdmlkZSBsaW5rcyB0byB0aGVt
IGluIHRoZWlyIHJlc3BlY3RpdmUgYFJFQURNRS5tZGAgZmlsZXMuCiogS2Vl
cCBgUkVBRE1FLm1kYCB1cGRhdGVkIGFzIGEgcHJvamVjdCBldm9sdmVzLgoq
IENvbW1lbnQgeW91ciBjb2RlLiBUcnkgdG8gbWFrZSBpdCBhcyBjbGVhciBh
cyBwb3NzaWJsZSB3aGF0IHlvdSBhcmUgaW50ZW5kaW5nIHdpdGggZWFjaCBt
YWpvciBzZWN0aW9uLgoqIElmIHRoZXJlIGlzIGFuIG9wZW4gZGlzY3Vzc2lv
biBvbiBnaXRodWIgb3Igc3RhY2tvdmVyZmxvdyBhYm91dCB0aGUgY29kZSBv
ciBhcHByb2FjaCB5b3UncmUgdXNpbmcsIGluY2x1ZGUgdGhlIGxpbmsgaW4g
eW91ciBjb21tZW50LiAKKiBEb24ndCB1c2UgY29tbWVudHMgYXMgYW4gZXhj
dXNlIGZvciBhIGJhZCBjb2RlLiBLZWVwIHlvdXIgY29kZSBjbGVhbi4KKiBE
b24ndCB1c2UgY2xlYW4gY29kZSBhcyBhbiBleGN1c2UgdG8gbm90IGNvbW1l
bnQgYXQgYWxsLgoqIEtlZXAgY29tbWVudHMgcmVsZXZhbnQgYXMgeW91ciBj
b2RlIGV2b2x2ZXMuCgo8YSBuYW1lPSJlbnZpcm9ubWVudHMiPjwvYT4KIyMg
My4gRW52aXJvbm1lbnRzCgohW0Vudmlyb25tZW50c10oL2ltYWdlcy9sYXB0
b3AucG5nKQoKKiBEZWZpbmUgc2VwYXJhdGUgYGRldmVsb3BtZW50YCwgYHRl
c3RgIGFuZCBgcHJvZHVjdGlvbmAgZW52aXJvbm1lbnRzIGlmIG5lZWRlZC4K
CiAgICBfV2h5Ol8KICAgID4gRGlmZmVyZW50IGRhdGEsIHRva2VucywgQVBJ
cywgcG9ydHMgZXRjLi4uIG1pZ2h0IGJlIG5lZWRlZCBpbiBkaWZmZXJlbnQg
ZW52aXJvbm1lbnRzLiBZb3UgbWF5IHdhbnQgYW4gaXNvbGF0ZWQgYGRldmVs
b3BtZW50YCBtb2RlIHRoYXQgY2FsbHMgZmFrZSBBUEkgd2hpY2ggcmV0dXJu
cyBwcmVkaWN0YWJsZSBkYXRhLCBtYWtpbmcgYm90aCBhdXRvbWF0ZWQgYW5k
IG1hbnVhbCB0ZXN0aW5nIG11Y2ggZWFzaWVyLiBPciB5b3UgbWF5IHdhbnQg
dG8gZW5hYmxlIEdvb2dsZSBBbmFseXRpY3Mgb25seSBvbiBgcHJvZHVjdGlv
bmAgYW5kIHNvIG9uLiBbcmVhZCBtb3JlLi4uXShodHRwczovL3N0YWNrb3Zl
cmZsb3cuY29tL3F1ZXN0aW9ucy84MzMyMzMzL25vZGUtanMtc2V0dGluZy11
cC1lbnZpcm9ubWVudC1zcGVjaWZpYy1jb25maWdzLXRvLWJlLXVzZWQtd2l0
aC1ldmVyeWF1dGgpCgoKKiBMb2FkIHlvdXIgZGVwbG95bWVudCBzcGVjaWZp
YyBjb25maWd1cmF0aW9ucyBmcm9tIGVudmlyb25tZW50IHZhcmlhYmxlcyBh
bmQgbmV2ZXIgYWRkIHRoZW0gdG8gdGhlIGNvZGViYXNlIGFzIGNvbnN0YW50
cywgW2xvb2sgYXQgdGhpcyBzYW1wbGVdKC4vY29uZmlnLnNhbXBsZS5qcyku
CgogICAgX1doeTpfCiAgICA+IFlvdSBoYXZlIHRva2VucywgcGFzc3dvcmRz
IGFuZCBvdGhlciB2YWx1YWJsZSBpbmZvcm1hdGlvbiBpbiB0aGVyZS4gWW91
ciBjb25maWcgc2hvdWxkIGJlIGNvcnJlY3RseSBzZXBhcmF0ZWQgZnJvbSB0
aGUgYXBwIGludGVybmFscyBhcyBpZiB0aGUgY29kZWJhc2UgY291bGQgYmUg
bWFkZSBwdWJsaWMgYXQgYW55IG1vbWVudC4KCiAgICBfSG93Ol8KICAgID4K
ICAgIGAuZW52YCBmaWxlcyB0byBzdG9yZSB5b3VyIHZhcmlhYmxlcyBhbmQg
YWRkIHRoZW0gdG8gYC5naXRpZ25vcmVgIHRvIGJlIGV4Y2x1ZGVkLiBJbnN0
ZWFkLCBjb21taXQgYSBgLmVudi5leGFtcGxlYCAgd2hpY2ggc2VydmVzIGFz
IGEgZ3VpZGUgZm9yIGRldmVsb3BlcnMuIEZvciBwcm9kdWN0aW9uLCB5b3Ug
c2hvdWxkIHN0aWxsIHNldCB5b3VyIGVudmlyb25tZW50IHZhcmlhYmxlcyBp
biB0aGUgc3RhbmRhcmQgd2F5LgogICAgW3JlYWQgbW9yZV0oaHR0cHM6Ly9t
ZWRpdW0uY29tL0ByYWZhZWx2aWRhdXJyZS9tYW5hZ2luZy1lbnZpcm9ubWVu
dC12YXJpYWJsZXMtaW4tbm9kZS1qcy0yY2I0NWE1NTE5NWYpCgoqIEl04oCZ
cyByZWNvbW1lbmRlZCB0byB2YWxpZGF0ZSBlbnZpcm9ubWVudCB2YXJpYWJs
ZXMgYmVmb3JlIHlvdXIgYXBwIHN0YXJ0cy4gIFtMb29rIGF0IHRoaXMgc2Ft
cGxlXSguL2NvbmZpZ1dpdGhUZXN0LnNhbXBsZS5qcykgdXNpbmcgYGpvaWAg
dG8gdmFsaWRhdGUgcHJvdmlkZWQgdmFsdWVzLgogICAgCiAgICBfV2h5Ol8K
ICAgID4gSXQgbWF5IHNhdmUgb3RoZXJzIGZyb20gaG91cnMgb2YgdHJvdWJs
ZXNob290aW5nLgoKPGEgbmFtZT0iY29uc2lzdGVudC1kZXYtZW52aXJvbm1l
bnRzIj48L2E+CiMjIyAzLjEgQ29uc2lzdGVudCBkZXYgZW52aXJvbm1lbnRz
OgoqIFNldCB5b3VyIG5vZGUgdmVyc2lvbiBpbiBgZW5naW5lc2AgaW4gYHBh
Y2thZ2UuanNvbmAuCiAgICAKICAgIF9XaHk6XwogICAgPiBJdCBsZXRzIG90
aGVycyBrbm93IHRoZSB2ZXJzaW9uIG9mIG5vZGUgdGhlIHByb2plY3Qgd29y
a3Mgb24uIFtyZWFkIG1vcmUuLi5dKGh0dHBzOi8vZG9jcy5ucG1qcy5jb20v
ZmlsZXMvcGFja2FnZS5qc29uI2VuZ2luZXMpCgoqIEFkZGl0aW9uYWxseSwg
dXNlIGBudm1gIGFuZCBjcmVhdGUgYSAgYC5udm1yY2AgIGluIHlvdXIgcHJv
amVjdCByb290LiBEb24ndCBmb3JnZXQgdG8gbWVudGlvbiBpdCBpbiB0aGUg
ZG9jdW1lbnRhdGlvbi4KCiAgICBfV2h5Ol8KICAgID4gQW55IG9uZSB3aG8g
dXNlcyBgbnZtYCBjYW4gc2ltcGx5IHVzZSBgbnZtIHVzZWAgdG8gc3dpdGNo
IHRvIHRoZSBzdWl0YWJsZSBub2RlIHZlcnNpb24uIFtyZWFkIG1vcmUuLi5d
KGh0dHBzOi8vZ2l0aHViLmNvbS9jcmVhdGlvbml4L252bSkKCiogSXQncyBh
IGdvb2QgaWRlYSB0byBzZXR1cCBhIGBwcmVpbnN0YWxsYCBzY3JpcHQgdGhh
dCBjaGVja3Mgbm9kZSBhbmQgbnBtIHZlcnNpb25zLgoKICAgIF9XaHk6Xwog
ICAgPiBTb21lIGRlcGVuZGVuY2llcyBtYXkgZmFpbCB3aGVuIGluc3RhbGxl
ZCBieSBuZXdlciB2ZXJzaW9ucyBvZiBucG0uCiAgICAKKiBVc2UgRG9ja2Vy
IGltYWdlIGlmIHlvdSBjYW4uCgogICAgX1doeTpfCiAgICA+IEl0IGNhbiBn
aXZlIHlvdSBhIGNvbnNpc3RlbnQgZW52aXJvbm1lbnQgYWNyb3NzIHRoZSBl
bnRpcmUgd29ya2Zsb3cuIFdpdGhvdXQgbXVjaCBuZWVkIHRvIGZpZGRsZSB3
aXRoIGRlcGVuZGVuY2llcyBvciBjb25maWdzLiBbcmVhZCBtb3JlLi4uXSho
dHRwczovL2hhY2tlcm5vb24uY29tL2hvdy10by1kb2NrZXJpemUtYS1ub2Rl
LWpzLWFwcGxpY2F0aW9uLTRmYmFiNDVhMGMxOSkKCiogVXNlIGxvY2FsIG1v
ZHVsZXMgaW5zdGVhZCBvZiB1c2luZyBnbG9iYWxseSBpbnN0YWxsZWQgbW9k
dWxlcy4KCiAgICBfV2h5Ol8KICAgID4gTGV0cyB5b3Ugc2hhcmUgeW91ciB0
b29saW5nIHdpdGggeW91ciBjb2xsZWFndWUgaW5zdGVhZCBvZiBleHBlY3Rp
bmcgdGhlbSB0byBoYXZlIGl0IGdsb2JhbGx5IG9uIHRoZWlyIHN5c3RlbXMu
CgoKPGEgbmFtZT0iY29uc2lzdGVudC1kZXBlbmRlbmNpZXMiPjwvYT4KIyMj
IDMuMiBDb25zaXN0ZW50IGRlcGVuZGVuY2llczoKCiogTWFrZSBzdXJlIHlv
dXIgdGVhbSBtZW1iZXJzIGdldCB0aGUgZXhhY3Qgc2FtZSBkZXBlbmRlbmNp
ZXMgYXMgeW91LgoKICAgIF9XaHk6XwogICAgPiBCZWNhdXNlIHlvdSB3YW50
IHRoZSBjb2RlIHRvIGJlaGF2ZSBhcyBleHBlY3RlZCBhbmQgaWRlbnRpY2Fs
IGluIGFueSBkZXZlbG9wbWVudCBtYWNoaW5lIFtyZWFkIG1vcmUuLi5dKGh0
dHBzOi8va29zdGFzYmFyaW90aXMuY29tL2NvbnNpc3RlbnQtZGVwZW5kZW5j
aWVzLWFjcm9zcy10ZWFtcy8pCgogICAgX2hvdzpfCiAgICA+IFVzZSBgcGFj
a2FnZS1sb2NrLmpzb25gIG9uIGBucG1ANWAgb3IgaGlnaGVyCgogICAgX0kg
ZG9uJ3QgaGF2ZSBucG1ANTpfCiAgICA+IEFsdGVybmF0aXZlbHkgeW91IGNh
biB1c2UgYFlhcm5gIGFuZCBtYWtlIHN1cmUgdG8gbWVudGlvbiBpdCBpbiBg
UkVBRE1FLm1kYC4gWW91ciBsb2NrIGZpbGUgYW5kIGBwYWNrYWdlLmpzb25g
IHNob3VsZCBoYXZlIHRoZSBzYW1lIHZlcnNpb25zIGFmdGVyIGVhY2ggZGVw
ZW5kZW5jeSB1cGRhdGUuIFtyZWFkIG1vcmUuLi5dKGh0dHBzOi8veWFybnBr
Zy5jb20vZW4vKQoKICAgIF9JIGRvbid0IGxpa2UgdGhlIG5hbWUgYFlhcm5g
Ol8KICAgID4gVG9vIGJhZC4gRm9yIG9sZGVyIHZlcnNpb25zIG9mIGBucG1g
LCB1c2UgYOKAlHNhdmUgLS1zYXZlLWV4YWN0YCB3aGVuIGluc3RhbGxpbmcg
YSBuZXcgZGVwZW5kZW5jeSBhbmQgY3JlYXRlIGBucG0tc2hyaW5rd3JhcC5q
c29uYCBiZWZvcmUgcHVibGlzaGluZy4gW3JlYWQgbW9yZS4uLl0oaHR0cHM6
Ly9kb2NzLm5wbWpzLmNvbS9maWxlcy9wYWNrYWdlLWxvY2tzKQoKPGEgbmFt
ZT0iZGVwZW5kZW5jaWVzIj48L2E+CiMjIDQuIERlcGVuZGVuY2llcwoKIVtH
aXRodWJdKC9pbWFnZXMvbW9kdWxlcy5wbmcpCgoqIEtlZXAgdHJhY2sgb2Yg
eW91ciBjdXJyZW50bHkgYXZhaWxhYmxlIHBhY2thZ2VzOiBlLmcuLCBgbnBt
IGxzIC0tZGVwdGg9MGAuIFtyZWFkIG1vcmUuLi5dKGh0dHBzOi8vZG9jcy5u
cG1qcy5jb20vY2xpL2xzKQoqIFNlZSBpZiBhbnkgb2YgeW91ciBwYWNrYWdl
cyBoYXZlIGJlY29tZSB1bnVzZWQgb3IgaXJyZWxldmFudDogYGRlcGNoZWNr
YC4gW3JlYWQgbW9yZS4uLl0oaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2th
Z2UvZGVwY2hlY2spCiAgICAKICAgIF9XaHk6XwogICAgPiBZb3UgbWF5IGlu
Y2x1ZGUgYW4gdW51c2VkIGxpYnJhcnkgaW4geW91ciBjb2RlIGFuZCBpbmNy
ZWFzZSB0aGUgcHJvZHVjdGlvbiBidW5kbGUgc2l6ZS4gRmluZCB1bnVzZWQg
ZGVwZW5kZW5jaWVzIGFuZCBnZXQgcmlkIG9mIHRoZW0uCgoqIEJlZm9yZSB1
c2luZyBhIGRlcGVuZGVuY3ksIGNoZWNrIGl0cyBkb3dubG9hZCBzdGF0aXN0
aWNzIHRvIHNlZSBpZiBpdCBpcyBoZWF2aWx5IHVzZWQgYnkgdGhlIGNvbW11
bml0eTogYG5wbS1zdGF0YC4gW3JlYWQgbW9yZS4uLl0oaHR0cHM6Ly9ucG0t
c3RhdC5jb20vKQogICAgCiAgICBfV2h5Ol8KICAgID4gTW9yZSB1c2FnZSBt
b3N0bHkgbWVhbnMgbW9yZSBjb250cmlidXRvcnMsIHdoaWNoIHVzdWFsbHkg
bWVhbnMgYmV0dGVyIG1haW50ZW5hbmNlLCBhbmQgYWxsIG9mIHRoZXNlIHJl
c3VsdCBpbiBxdWlja2x5IGRpc2NvdmVyZWQgYnVncyBhbmQgcXVpY2tseSBk
ZXZlbG9wZWQgZml4ZXMuCgoqIEJlZm9yZSB1c2luZyBhIGRlcGVuZGVuY3ks
IGNoZWNrIHRvIHNlZSBpZiBpdCBoYXMgYSBnb29kLCBtYXR1cmUgdmVyc2lv
biByZWxlYXNlIGZyZXF1ZW5jeSB3aXRoIGEgbGFyZ2UgbnVtYmVyIG9mIG1h
aW50YWluZXJzOiBlLmcuLCBgbnBtIHZpZXcgYXN5bmNgLiBbcmVhZCBtb3Jl
Li4uXShodHRwczovL2RvY3MubnBtanMuY29tL2NsaS92aWV3KQoKICAgIF9X
aHk6XwogICAgPiBIYXZpbmcgbG9hZHMgb2YgY29udHJpYnV0b3JzIHdvbid0
IGJlIGFzIGVmZmVjdGl2ZSBpZiBtYWludGFpbmVycyBkb24ndCBtZXJnZSBm
aXhlcyBhbmQgcGF0Y2hlcyBxdWlja2x5IGVub3VnaC4KCiogSWYgYSBsZXNz
IGtub3duIGRlcGVuZGVuY3kgaXMgbmVlZGVkLCBkaXNjdXNzIGl0IHdpdGgg
dGhlIHRlYW0gYmVmb3JlIHVzaW5nIGl0LgoqIEFsd2F5cyBtYWtlIHN1cmUg
eW91ciBhcHAgd29ya3Mgd2l0aCB0aGUgbGF0ZXN0IHZlcnNpb24gb2YgaXRz
IGRlcGVuZGVuY2llcyB3aXRob3V0IGJyZWFraW5nOiBgbnBtIG91dGRhdGVk
YC4gW3JlYWQgbW9yZS4uLl0oaHR0cHM6Ly9kb2NzLm5wbWpzLmNvbS9jbGkv
b3V0ZGF0ZWQpCgogICAgX1doeTpfCiAgICA+IERlcGVuZGVuY3kgdXBkYXRl
cyBzb21ldGltZXMgY29udGFpbiBicmVha2luZyBjaGFuZ2VzLiBBbHdheXMg
Y2hlY2sgdGhlaXIgcmVsZWFzZSBub3RlcyB3aGVuIHVwZGF0ZXMgc2hvdyB1
cC4gVXBkYXRlIHlvdXIgZGVwZW5kZW5jaWVzIG9uZSBieSBvbmUsIHRoYXQg
bWFrZXMgdHJvdWJsZXNob290aW5nIGVhc2llciBpZiBhbnl0aGluZyBnb2Vz
IHdyb25nLiBVc2UgYSBjb29sIHRvb2wgc3VjaCBhcyBbbnBtLWNoZWNrLXVw
ZGF0ZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS90anVubm9uZS9ucG0tY2hlY2st
dXBkYXRlcykuCgoqIENoZWNrIHRvIHNlZSBpZiB0aGUgcGFja2FnZSBoYXMg
a25vd24gc2VjdXJpdHkgdnVsbmVyYWJpbGl0aWVzIHdpdGgsIGUuZy4sIFtT
bnlrXShodHRwczovL3NueWsuaW8vdGVzdD91dG1fc291cmNlPXJpc2luZ3N0
YWNrX2Jsb2cpLgoKCjxhIG5hbWU9InRlc3RpbmciPjwvYT4KIyMgNS4gVGVz
dGluZwohW1Rlc3RpbmddKC9pbWFnZXMvdGVzdGluZy5wbmcpCiogSGF2ZSBh
IGB0ZXN0YCBtb2RlIGVudmlyb25tZW50IGlmIG5lZWRlZC4KCiAgICBfV2h5
Ol8KICAgID4gV2hpbGUgc29tZXRpbWVzIGVuZCB0byBlbmQgdGVzdGluZyBp
biBgcHJvZHVjdGlvbmAgbW9kZSBtaWdodCBzZWVtIGVub3VnaCwgdGhlcmUg
YXJlIHNvbWUgZXhjZXB0aW9uczogT25lIGV4YW1wbGUgaXMgeW91IG1heSBu
b3Qgd2FudCB0byBlbmFibGUgYW5hbHl0aWNhbCBpbmZvcm1hdGlvbiBvbiBh
ICdwcm9kdWN0aW9uJyBtb2RlIGFuZCBwb2xsdXRlIHNvbWVvbmUncyBkYXNo
Ym9hcmQgd2l0aCB0ZXN0IGRhdGEuIFRoZSBvdGhlciBleGFtcGxlIGlzIHRo
YXQgeW91ciBBUEkgbWF5IGhhdmUgcmF0ZSBsaW1pdHMgaW4gYHByb2R1Y3Rp
b25gIGFuZCBibG9ja3MgeW91ciB0ZXN0IGNhbGxzIGFmdGVyIGEgY2VydGFp
biBhbW91bnQgb2YgcmVxdWVzdHMuIAoKKiBQbGFjZSB5b3VyIHRlc3QgZmls
ZXMgbmV4dCB0byB0aGUgdGVzdGVkIG1vZHVsZXMgdXNpbmcgYCoudGVzdC5q
c2Agb3IgYCouc3BlYy5qc2AgbmFtaW5nIGNvbnZlbnRpb24sIGxpa2UgYG1v
ZHVsZU5hbWUuc3BlYy5qc2AuCgogICAgX1doeTpfCiAgICA+IFlvdSBkb24n
dCB3YW50IHRvIGRpZyB0aHJvdWdoIGEgZm9sZGVyIHN0cnVjdHVyZSB0byBm
aW5kIGEgdW5pdCB0ZXN0LiBbcmVhZCBtb3JlLi4uXShodHRwczovL2hhY2tl
cm5vb24uY29tL3N0cnVjdHVyZS15b3VyLWphdmFzY3JpcHQtY29kZS1mb3It
dGVzdGFiaWxpdHktOWJjOTNkOWM3MmRjKQogICAgCgoqIFB1dCB5b3VyIGFk
ZGl0aW9uYWwgdGVzdCBmaWxlcyBpbnRvIGEgc2VwYXJhdGUgdGVzdCBmb2xk
ZXIgdG8gYXZvaWQgY29uZnVzaW9uLgoKICAgIF9XaHk6XwogICAgPiBTb21l
IHRlc3QgZmlsZXMgZG9uJ3QgcGFydGljdWxhcmx5IHJlbGF0ZSB0byBhbnkg
c3BlY2lmaWMgaW1wbGVtZW50YXRpb24gZmlsZS4gWW91IGhhdmUgdG8gcHV0
IGl0IGluIGEgZm9sZGVyIHRoYXQgaXMgbW9zdCBsaWtlbHkgdG8gYmUgZm91
bmQgYnkgb3RoZXIgZGV2ZWxvcGVyczogYF9fdGVzdF9fYCBmb2xkZXIuIFRo
aXMgbmFtZTogYF9fdGVzdF9fYCAgaXMgYWxzbyBzdGFuZGFyZCBub3cgYW5k
IGdldHMgcGlja2VkIHVwIGJ5IG1vc3QgSmF2YVNjcmlwdCB0ZXN0aW5nIGZy
YW1ld29ya3MuCgoqIFdyaXRlIHRlc3RhYmxlIGNvZGUsIGF2b2lkIHNpZGUg
ZWZmZWN0cywgZXh0cmFjdCBzaWRlIGVmZmVjdHMsIHdyaXRlIHB1cmUgZnVu
Y3Rpb25zCgogICAgX1doeTpfCiAgICA+IFlvdSB3YW50IHRvIHRlc3QgYSBi
dXNpbmVzcyBsb2dpYyBhcyBzZXBhcmF0ZSB1bml0cy4gWW91IGhhdmUgdG8g
Im1pbmltaXplIHRoZSBpbXBhY3Qgb2YgcmFuZG9tbmVzcyBhbmQgbm9uZGV0
ZXJtaW5pc3RpYyBwcm9jZXNzZXMgb24gdGhlIHJlbGlhYmlsaXR5IG9mIHlv
dXIgY29kZSIuIFtyZWFkIG1vcmUuLi5dKGh0dHBzOi8vbWVkaXVtLmNvbS9q
YXZhc2NyaXB0LXNjZW5lL3RkZC10aGUtcml0ZS13YXktNTNjOWI0NmY0NWUz
KQogICAgCiAgICA+IEEgcHVyZSBmdW5jdGlvbiBpcyBhIGZ1bmN0aW9uIHRo
YXQgYWx3YXlzIHJldHVybnMgdGhlIHNhbWUgb3V0cHV0IGZvciB0aGUgc2Ft
ZSBpbnB1dC4gQ29udmVyc2VseSwgYW4gaW1wdXJlIGZ1bmN0aW9uIGlzIG9u
ZSB0aGF0IG1heSBoYXZlIHNpZGUgZWZmZWN0cyBvciBkZXBlbmRzIG9uIGNv
bmRpdGlvbnMgZnJvbSB0aGUgb3V0c2lkZSB0byBwcm9kdWNlIGEgdmFsdWUu
IFRoYXQgbWFrZXMgaXQgbGVzcyBwcmVkaWN0YWJsZS4gW3JlYWQgbW9yZS4u
Ll0oaHR0cHM6Ly9oYWNrZXJub29uLmNvbS9zdHJ1Y3R1cmUteW91ci1qYXZh
c2NyaXB0LWNvZGUtZm9yLXRlc3RhYmlsaXR5LTliYzkzZDljNzJkYykKCiog
VXNlIGEgc3RhdGljIHR5cGUgY2hlY2tlciAKCiAgICBfV2h5Ol8KICAgID4g
U29tZXRpbWVzIHlvdSBtYXkgbmVlZCBhIFN0YXRpYyB0eXBlIGNoZWNrZXIu
IEl0IGJyaW5ncyBhIGNlcnRhaW4gbGV2ZWwgb2YgcmVsaWFiaWxpdHkgdG8g
eW91ciBjb2RlLiBbcmVhZCBtb3JlLi4uXShodHRwczovL21lZGl1bS5mcmVl
Y29kZWNhbXAub3JnL3doeS11c2Utc3RhdGljLXR5cGVzLWluLWphdmFzY3Jp
cHQtcGFydC0xLTgzODJkYTFlMGFkYikKCgoqIFJ1biB0ZXN0cyBsb2NhbGx5
IGJlZm9yZSBtYWtpbmcgYW55IHB1bGwgcmVxdWVzdHMgdG8gYGRldmVsb3Bg
LgoKICAgIF9XaHk6XwogICAgPiBZb3UgZG9uJ3Qgd2FudCB0byBiZSB0aGUg
b25lIHdobyBjYXVzZWQgcHJvZHVjdGlvbi1yZWFkeSBicmFuY2ggYnVpbGQg
dG8gZmFpbC4gUnVuIHlvdXIgdGVzdHMgYWZ0ZXIgeW91ciBgcmViYXNlYCBh
bmQgYmVmb3JlIHB1c2hpbmcgeW91ciBmZWF0dXJlLWJyYW5jaCB0byBhIHJl
bW90ZSByZXBvc2l0b3J5LgoKKiBEb2N1bWVudCB5b3VyIHRlc3RzIGluY2x1
ZGluZyBpbnN0cnVjdGlvbnMgaW4gdGhlIHJlbGV2YW50IHNlY3Rpb24gb2Yg
eW91ciBgUkVBRE1FLm1kYCBmaWxlLgoKICAgIF9XaHk6XwogICAgPiBJdCdz
IGEgaGFuZHkgbm90ZSB5b3UgbGVhdmUgYmVoaW5kIGZvciBvdGhlciBkZXZl
bG9wZXJzIG9yIERldk9wcyBleHBlcnRzIG9yIFFBIG9yIGFueW9uZSB3aG8g
Z2V0cyBsdWNreSBlbm91Z2ggdG8gd29yayBvbiB5b3VyIGNvZGUuCgo8YSBu
YW1lPSJzdHJ1Y3R1cmUtYW5kLW5hbWluZyI+PC9hPgojIyA2LiBTdHJ1Y3R1
cmUgYW5kIE5hbWluZwohW1N0cnVjdHVyZSBhbmQgTmFtaW5nXSgvaW1hZ2Vz
L2ZvbGRlci10cmVlLnBuZykKKiBPcmdhbml6ZSB5b3VyIGZpbGVzIGFyb3Vu
ZCBwcm9kdWN0IGZlYXR1cmVzIC8gcGFnZXMgLyBjb21wb25lbnRzLCBub3Qg
cm9sZXMuIEFsc28sIHBsYWNlIHlvdXIgdGVzdCBmaWxlcyBuZXh0IHRvIHRo
ZWlyIGltcGxlbWVudGF0aW9uLgoKCiAgICAqKkJhZCoqCgogICAgYGBgCiAg
ICAuCiAgICDilJzilIDilIAgY29udHJvbGxlcnMKICAgIHwgICDilJzilIDi
lIAgcHJvZHVjdC5qcwogICAgfCAgIOKUlOKUgOKUgCB1c2VyLmpzCiAgICDi
lJzilIDilIAgbW9kZWxzCiAgICB8ICAg4pSc4pSA4pSAIHByb2R1Y3QuanMK
ICAgIHwgICDilJTilIDilIAgdXNlci5qcwogICAgYGBgCgogICAgKipHb29k
KioKCiAgICBgYGAKICAgIC4KICAgIOKUnOKUgOKUgCBwcm9kdWN0CiAgICB8
ICAg4pSc4pSA4pSAIGluZGV4LmpzCiAgICB8ICAg4pSc4pSA4pSAIHByb2R1
Y3QuanMKICAgIHwgICDilJTilIDilIAgcHJvZHVjdC50ZXN0LmpzCiAgICDi
lJzilIDilIAgdXNlcgogICAgfCAgIOKUnOKUgOKUgCBpbmRleC5qcwogICAg
fCAgIOKUnOKUgOKUgCB1c2VyLmpzCiAgICB8ICAg4pSU4pSA4pSAIHVzZXIu
dGVzdC5qcwogICAgYGBgCgogICAgX1doeTpfCiAgICA+IEluc3RlYWQgb2Yg
YSBsb25nIGxpc3Qgb2YgZmlsZXMsIHlvdSB3aWxsIGNyZWF0ZSBzbWFsbCBt
b2R1bGVzIHRoYXQgZW5jYXBzdWxhdGUgb25lIHJlc3BvbnNpYmlsaXR5IGlu
Y2x1ZGluZyBpdHMgdGVzdCBhbmQgc28gb24uIEl0IGdldHMgbXVjaCBlYXNp
ZXIgdG8gbmF2aWdhdGUgdGhyb3VnaCBhbmQgdGhpbmdzIGNhbiBiZSBmb3Vu
ZCBhdCBhIGdsYW5jZS4KCiogUHV0IHlvdXIgYWRkaXRpb25hbCB0ZXN0IGZp
bGVzIHRvIGEgc2VwYXJhdGUgdGVzdCBmb2xkZXIgdG8gYXZvaWQgY29uZnVz
aW9uLgoKICAgIF9XaHk6XwogICAgPiBJdCBpcyBhIHRpbWUgc2F2ZXIgZm9y
IG90aGVyIGRldmVsb3BlcnMgb3IgRGV2T3BzIGV4cGVydHMgaW4geW91ciB0
ZWFtLgoKKiBVc2UgYSBgLi9jb25maWdgIGZvbGRlciBhbmQgZG9uJ3QgbWFr
ZSBkaWZmZXJlbnQgY29uZmlnIGZpbGVzIGZvciBkaWZmZXJlbnQgZW52aXJv
bm1lbnRzLgoKICAgIF9XaHk6XwogICAgPldoZW4geW91IGJyZWFrIGRvd24g
YSBjb25maWcgZmlsZSBmb3IgZGlmZmVyZW50IHB1cnBvc2VzIChkYXRhYmFz
ZSwgQVBJIGFuZCBzbyBvbik7IHB1dHRpbmcgdGhlbSBpbiBhIGZvbGRlciB3
aXRoIGEgdmVyeSByZWNvZ25pemFibGUgbmFtZSBzdWNoIGFzIGBjb25maWdg
IG1ha2VzIHNlbnNlLiBKdXN0IHJlbWVtYmVyIG5vdCB0byBtYWtlIGRpZmZl
cmVudCBjb25maWcgZmlsZXMgZm9yIGRpZmZlcmVudCBlbnZpcm9ubWVudHMu
IEl0IGRvZXNuJ3Qgc2NhbGUgY2xlYW5seSwgYXMgbW9yZSBkZXBsb3lzIG9m
IHRoZSBhcHAgYXJlIGNyZWF0ZWQsIG5ldyBlbnZpcm9ubWVudCBuYW1lcyBh
cmUgbmVjZXNzYXJ5LgogICAgVmFsdWVzIHRvIGJlIHVzZWQgaW4gY29uZmln
IGZpbGVzIHNob3VsZCBiZSBwcm92aWRlZCBieSBlbnZpcm9ubWVudCB2YXJp
YWJsZXMuIFtyZWFkIG1vcmUuLi5dKGh0dHBzOi8vbWVkaXVtLmNvbS9AZmVk
b3JISy9uby1jb25maWctYjNmMTE3MWVlY2Q1KQogICAgCgoqIFB1dCB5b3Vy
IHNjcmlwdHMgaW4gYSBgLi9zY3JpcHRzYCBmb2xkZXIuIFRoaXMgaW5jbHVk
ZXMgYGJhc2hgIGFuZCBgbm9kZWAgc2NyaXB0cy4KCiAgICBfV2h5Ol8KICAg
ID5JdCdzIHZlcnkgbGlrZWx5IHlvdSBtYXkgZW5kIHVwIHdpdGggbW9yZSB0
aGFuIG9uZSBzY3JpcHQsIHByb2R1Y3Rpb24gYnVpbGQsIGRldmVsb3BtZW50
IGJ1aWxkLCBkYXRhYmFzZSBmZWVkZXJzLCBkYXRhYmFzZSBzeW5jaHJvbml6
YXRpb24gYW5kIHNvIG9uLgogICAgCgoqIFBsYWNlIHlvdXIgYnVpbGQgb3V0
cHV0IGluIGEgYC4vYnVpbGRgIGZvbGRlci4gQWRkIGBidWlsZC9gIHRvIGAu
Z2l0aWdub3JlYC4KCiAgICBfV2h5Ol8KICAgID5OYW1lIGl0IHdoYXQgeW91
IGxpa2UsIGBkaXN0YCBpcyBhbHNvIGNvb2wuIEJ1dCBtYWtlIHN1cmUgdGhh
dCBrZWVwIGl0IGNvbnNpc3RlbnQgd2l0aCB5b3VyIHRlYW0uIFdoYXQgZ2V0
cyBpbiB0aGVyZSBpcyBtb3N0IGxpa2VseSBnZW5lcmF0ZWQgIChidW5kbGVk
LCBjb21waWxlZCwgdHJhbnNwaWxlZCkgb3IgbW92ZWQgdGhlcmUuIFdoYXQg
eW91IGNhbiBnZW5lcmF0ZSwgeW91ciB0ZWFtbWF0ZXMgc2hvdWxkIGJlIGFi
bGUgdG8gZ2VuZXJhdGUgdG9vLCBzbyB0aGVyZSBpcyBubyBwb2ludCBjb21t
aXR0aW5nIHRoZW0gaW50byB5b3VyIHJlbW90ZSByZXBvc2l0b3J5LiBVbmxl
c3MgeW91IHNwZWNpZmljYWxseSB3YW50IHRvLiAKCjxhIG5hbWU9ImNvZGUt
c3R5bGUiPjwvYT4KIyMgNy4gQ29kZSBzdHlsZQoKIVtDb2RlIHN0eWxlXSgv
aW1hZ2VzL2NvZGUtc3R5bGUucG5nKQoKPGEgbmFtZT0iY29kZS1zdHlsZS1j
aGVjayI+PC9hPgojIyMgNy4xIFNvbWUgY29kZSBzdHlsZSBndWlkZWxpbmVz
CgoqIFVzZSBzdGFnZS0yIGFuZCBoaWdoZXIgSmF2YVNjcmlwdCAobW9kZXJu
KSBzeW50YXggZm9yIG5ldyBwcm9qZWN0cy4gRm9yIG9sZCBwcm9qZWN0IHN0
YXkgY29uc2lzdGVudCB3aXRoIGV4aXN0aW5nIHN5bnRheCB1bmxlc3MgeW91
IGludGVuZCB0byBtb2Rlcm5pc2UgdGhlIHByb2plY3QuCgogICAgX1doeTpf
CiAgICA+IFRoaXMgaXMgYWxsIHVwIHRvIHlvdS4gV2UgdXNlIHRyYW5zcGls
ZXJzIHRvIHVzZSBhZHZhbnRhZ2VzIG9mIG5ldyBzeW50YXguIHN0YWdlLTIg
aXMgbW9yZSBsaWtlbHkgdG8gZXZlbnR1YWxseSBiZWNvbWUgcGFydCBvZiB0
aGUgc3BlYyB3aXRoIG9ubHkgbWlub3IgcmV2aXNpb25zLiAKCiogSW5jbHVk
ZSBjb2RlIHN0eWxlIGNoZWNrIGluIHlvdXIgYnVpbGQgcHJvY2Vzcy4KCiAg
ICBfV2h5Ol8KICAgID4gQnJlYWtpbmcgeW91ciBidWlsZCBpcyBvbmUgd2F5
IG9mIGVuZm9yY2luZyBjb2RlIHN0eWxlIHRvIHlvdXIgY29kZS4gSXQgcHJl
dmVudHMgeW91IGZyb20gdGFraW5nIGl0IGxlc3Mgc2VyaW91c2x5LiBEbyBp
dCBmb3IgYm90aCBjbGllbnQgYW5kIHNlcnZlci1zaWRlIGNvZGUuIFtyZWFk
IG1vcmUuLi5dKGh0dHBzOi8vd3d3LnJvYmlud2llcnVjaC5kZS9yZWFjdC1l
c2xpbnQtd2VicGFjay1iYWJlbC8pCgoqIFVzZSBbRVNMaW50IC0gUGx1Z2dh
YmxlIEphdmFTY3JpcHQgbGludGVyXShodHRwOi8vZXNsaW50Lm9yZy8pIHRv
IGVuZm9yY2UgY29kZSBzdHlsZS4KCiAgICBfV2h5Ol8KICAgID4gV2Ugc2lt
cGx5IHByZWZlciBgZXNsaW50YCwgeW91IGRvbid0IGhhdmUgdG8uIEl0IGhh
cyBtb3JlIHJ1bGVzIHN1cHBvcnRlZCwgdGhlIGFiaWxpdHkgdG8gY29uZmln
dXJlIHRoZSBydWxlcywgYW5kIGFiaWxpdHkgdG8gYWRkIGN1c3RvbSBydWxl
cy4KCiogV2UgdXNlIFtBaXJibmIgSmF2YVNjcmlwdCBTdHlsZSBHdWlkZV0o
aHR0cHM6Ly9naXRodWIuY29tL2FpcmJuYi9qYXZhc2NyaXB0KSBmb3IgSmF2
YVNjcmlwdCwgW1JlYWQgbW9yZV0oaHR0cHM6Ly93d3cuZ2l0Ym9vay5jb20v
Ym9vay9kdWsvYWlyYm5iLWphdmFzY3JpcHQtZ3VpZGVsaW5lcy9kZXRhaWxz
KS4gVXNlIHRoZSBqYXZhc2NyaXB0IHN0eWxlIGd1aWRlIHJlcXVpcmVkIGJ5
IHRoZSBwcm9qZWN0IG9yIHlvdXIgdGVhbS4KCiogV2UgdXNlIFtGbG93IHR5
cGUgc3R5bGUgY2hlY2sgcnVsZXMgZm9yIEVTTGludF0oaHR0cHM6Ly9naXRo
dWIuY29tL2dhanVzL2VzbGludC1wbHVnaW4tZmxvd3R5cGUpIHdoZW4gdXNp
bmcgW0Zsb3dUeXBlXShodHRwczovL2Zsb3cub3JnLykuCgogICAgX1doeTpf
CiAgICA+IEZsb3cgaW50cm9kdWNlcyBmZXcgc3ludGF4ZXMgdGhhdCBhbHNv
IG5lZWQgdG8gZm9sbG93IGNlcnRhaW4gY29kZSBzdHlsZSBhbmQgYmUgY2hl
Y2tlZC4KCiogVXNlIGAuZXNsaW50aWdub3JlYCB0byBleGNsdWRlIGZpbGVz
IG9yIGZvbGRlcnMgZnJvbSBjb2RlIHN0eWxlIGNoZWNrcy4KCiAgICBfV2h5
Ol8KICAgID4gWW91IGRvbid0IGhhdmUgdG8gcG9sbHV0ZSB5b3VyIGNvZGUg
d2l0aCBgZXNsaW50LWRpc2FibGVgIGNvbW1lbnRzIHdoZW5ldmVyIHlvdSBu
ZWVkIHRvIGV4Y2x1ZGUgYSBjb3VwbGUgb2YgZmlsZXMgZnJvbSBzdHlsZSBj
aGVja2luZy4KCiogUmVtb3ZlIGFueSBvZiB5b3VyIGBlc2xpbnRgIGRpc2Fi
bGUgY29tbWVudHMgYmVmb3JlIG1ha2luZyBhIFB1bGwgUmVxdWVzdC4KCiAg
ICBfV2h5Ol8KICAgID4gSXQncyBub3JtYWwgdG8gZGlzYWJsZSBzdHlsZSBj
aGVjayB3aGlsZSB3b3JraW5nIG9uIGEgY29kZSBibG9jayB0byBmb2N1cyBt
b3JlIG9uIHRoZSBsb2dpYy4gSnVzdCByZW1lbWJlciB0byByZW1vdmUgdGhv
c2UgYGVzbGludC1kaXNhYmxlYCBjb21tZW50cyBhbmQgZm9sbG93IHRoZSBy
dWxlcy4KCiogRGVwZW5kaW5nIG9uIHRoZSBzaXplIG9mIHRoZSB0YXNrIHVz
ZSAgYC8vVE9ETzpgIGNvbW1lbnRzIG9yIG9wZW4gYSB0aWNrZXQuCgogICAg
X1doeTpfCiAgICA+IFNvIHRoZW4geW91IGNhbiByZW1pbmQgeW91cnNlbGYg
YW5kIG90aGVycyBhYm91dCBhIHNtYWxsIHRhc2sgKGxpa2UgcmVmYWN0b3Jp
bmcgYSBmdW5jdGlvbiBvciB1cGRhdGluZyBhIGNvbW1lbnQpLiBGb3IgbGFy
Z2VyIHRhc2tzIHVzZSBgLy9UT0RPKCMzNDU2KWAgd2hpY2ggaXMgZW5mb3Jj
ZWQgYnkgYSBsaW50IHJ1bGUgYW5kIHRoZSBudW1iZXIgaXMgYW4gb3BlbiB0
aWNrZXQuCgoKKiBBbHdheXMgY29tbWVudCBhbmQga2VlcCB0aGVtIHJlbGV2
YW50IGFzIGNvZGUgY2hhbmdlcy4gUmVtb3ZlIGNvbW1lbnRlZCBibG9ja3Mg
b2YgY29kZS4KICAgIAogICAgX1doeTpfCiAgICA+IFlvdXIgY29kZSBzaG91
bGQgYmUgYXMgcmVhZGFibGUgYXMgcG9zc2libGUsIHlvdSBzaG91bGQgZ2V0
IHJpZCBvZiBhbnl0aGluZyBkaXN0cmFjdGluZy4gSWYgeW91IHJlZmFjdG9y
ZWQgYSBmdW5jdGlvbiwgZG9uJ3QganVzdCBjb21tZW50IG91dCB0aGUgb2xk
IG9uZSwgcmVtb3ZlIGl0LgoKKiBBdm9pZCBpcnJlbGV2YW50IG9yIGZ1bm55
IGNvbW1lbnRzLCBsb2dzIG9yIG5hbWluZy4KCiAgICBfV2h5Ol8KICAgID4g
V2hpbGUgeW91ciBidWlsZCBwcm9jZXNzIG1heShzaG91bGQpIGdldCByaWQg
b2YgdGhlbSwgc29tZXRpbWVzIHlvdXIgc291cmNlIGNvZGUgbWF5IGdldCBo
YW5kZWQgb3ZlciB0byBhbm90aGVyIGNvbXBhbnkvY2xpZW50IGFuZCB0aGV5
IG1heSBub3Qgc2hhcmUgdGhlIHNhbWUgYmFudGVyLgoKKiBNYWtlIHlvdXIg
bmFtZXMgc2VhcmNoLWFibGUgd2l0aCBtZWFuaW5nZnVsIGRpc3RpbmN0aW9u
cyBhdm9pZCBzaG9ydGVuZWQgbmFtZXMuIEZvciBmdW5jdGlvbnMgdXNlIGxv
bmcsIGRlc2NyaXB0aXZlIG5hbWVzLiBBIGZ1bmN0aW9uIG5hbWUgc2hvdWxk
IGJlIGEgdmVyYiBvciBhIHZlcmIgcGhyYXNlLCBhbmQgaXQgbmVlZHMgdG8g
Y29tbXVuaWNhdGUgaXRzIGludGVudGlvbi4KCiAgICBfV2h5Ol8KICAgID4g
SXQgbWFrZXMgaXQgbW9yZSBuYXR1cmFsIHRvIHJlYWQgdGhlIHNvdXJjZSBj
b2RlLgoKKiBPcmdhbml6ZSB5b3VyIGZ1bmN0aW9ucyBpbiBhIGZpbGUgYWNj
b3JkaW5nIHRvIHRoZSBzdGVwLWRvd24gcnVsZS4gSGlnaGVyIGxldmVsIGZ1
bmN0aW9ucyBzaG91bGQgYmUgb24gdG9wIGFuZCBsb3dlciBsZXZlbHMgYmVs
b3cuCgogICAgX1doeTpfCiAgICA+IEl0IG1ha2VzIGl0IG1vcmUgbmF0dXJh
bCB0byByZWFkIHRoZSBzb3VyY2UgY29kZS4KCjxhIG5hbWU9ImVuZm9yY2lu
Zy1jb2RlLXN0eWxlLXN0YW5kYXJkcyI+PC9hPgojIyMgNy4yIEVuZm9yY2lu
ZyBjb2RlIHN0eWxlIHN0YW5kYXJkcwoKKiBVc2UgYSBbLmVkaXRvcmNvbmZp
Z10oaHR0cDovL2VkaXRvcmNvbmZpZy5vcmcvKSBmaWxlIHdoaWNoIGhlbHBz
IGRldmVsb3BlcnMgZGVmaW5lIGFuZCBtYWludGFpbiBjb25zaXN0ZW50IGNv
ZGluZyBzdHlsZXMgYmV0d2VlbiBkaWZmZXJlbnQgZWRpdG9ycyBhbmQgSURF
cyBvbiB0aGUgcHJvamVjdC4KCiAgICBfV2h5Ol8KICAgID4gVGhlIEVkaXRv
ckNvbmZpZyBwcm9qZWN0IGNvbnNpc3RzIG9mIGEgZmlsZSBmb3JtYXQgZm9y
IGRlZmluaW5nIGNvZGluZyBzdHlsZXMgYW5kIGEgY29sbGVjdGlvbiBvZiB0
ZXh0IGVkaXRvciBwbHVnaW5zIHRoYXQgZW5hYmxlIGVkaXRvcnMgdG8gcmVh
ZCB0aGUgZmlsZSBmb3JtYXQgYW5kIGFkaGVyZSB0byBkZWZpbmVkIHN0eWxl
cy4gRWRpdG9yQ29uZmlnIGZpbGVzIGFyZSBlYXNpbHkgcmVhZGFibGUgYW5k
IHRoZXkgd29yayBuaWNlbHkgd2l0aCB2ZXJzaW9uIGNvbnRyb2wgc3lzdGVt
cy4KCiogSGF2ZSB5b3VyIGVkaXRvciBub3RpZnkgeW91IGFib3V0IGNvZGUg
c3R5bGUgZXJyb3JzLiBVc2UgW2VzbGludC1wbHVnaW4tcHJldHRpZXJdKGh0
dHBzOi8vZ2l0aHViLmNvbS9wcmV0dGllci9lc2xpbnQtcGx1Z2luLXByZXR0
aWVyKSBhbmQgW2VzbGludC1jb25maWctcHJldHRpZXJdKGh0dHBzOi8vZ2l0
aHViLmNvbS9wcmV0dGllci9lc2xpbnQtY29uZmlnLXByZXR0aWVyKSB3aXRo
IHlvdXIgZXhpc3RpbmcgRVNMaW50IGNvbmZpZ3VyYXRpb24uIFtyZWFkIG1v
cmUuLi5dKGh0dHBzOi8vZ2l0aHViLmNvbS9wcmV0dGllci9lc2xpbnQtY29u
ZmlnLXByZXR0aWVyI2luc3RhbGxhdGlvbikKCiogQ29uc2lkZXIgdXNpbmcg
R2l0IGhvb2tzLgoKICAgIF9XaHk6XwogICAgPiBHaXQgaG9va3MgZ3JlYXRs
eSBpbmNyZWFzZSBhIGRldmVsb3BlcidzIHByb2R1Y3Rpdml0eS4gTWFrZSBj
aGFuZ2VzLCBjb21taXQgYW5kIHB1c2ggdG8gc3RhZ2luZyBvciBwcm9kdWN0
aW9uIGVudmlyb25tZW50cyB3aXRob3V0IHRoZSBmZWFyIG9mIGJyZWFraW5n
IGJ1aWxkcy4gW3JlYWQgbW9yZS4uLl0oaHR0cDovL2dpdGhvb2tzLmNvbS8p
CgoqIFVzZSBQcmV0dGllciB3aXRoIGEgcHJlY29tbWl0IGhvb2suCgogICAg
X1doeTpfCiAgICA+IFdoaWxlIGBwcmV0dGllcmAgaXRzZWxmIGNhbiBiZSB2
ZXJ5IHBvd2VyZnVsLCBpdCdzIG5vdCB2ZXJ5IHByb2R1Y3RpdmUgdG8gcnVu
IGl0IHNpbXBseSBhcyBhbiBucG0gdGFzayBhbG9uZSBlYWNoIHRpbWUgdG8g
Zm9ybWF0IGNvZGUuIFRoaXMgaXMgd2hlcmUgYGxpbnQtc3RhZ2VkYCAoYW5k
IGBodXNreWApIGNvbWUgaW50byBwbGF5LiBSZWFkIG1vcmUgb24gY29uZmln
dXJpbmcgYGxpbnQtc3RhZ2VkYCBbaGVyZV0oaHR0cHM6Ly9naXRodWIuY29t
L29rb25ldC9saW50LXN0YWdlZCNjb25maWd1cmF0aW9uKSBhbmQgb24gY29u
ZmlndXJpbmcgYGh1c2t5YCBbaGVyZV0oaHR0cHM6Ly9naXRodWIuY29tL3R5
cGljb2RlL2h1c2t5KS4KCgo8YSBuYW1lPSJsb2dnaW5nIj48L2E+CiMjIDgu
IExvZ2dpbmcKCiFbTG9nZ2luZ10oL2ltYWdlcy9sb2dnaW5nLnBuZykKCiog
QXZvaWQgY2xpZW50LXNpZGUgY29uc29sZSBsb2dzIGluIHByb2R1Y3Rpb24K
CiAgICBfV2h5Ol8KICAgID4gRXZlbiB0aG91Z2ggeW91ciBidWlsZCBwcm9j
ZXNzIGNhbiAoc2hvdWxkKSBnZXQgcmlkIG9mIHRoZW0sIG1ha2Ugc3VyZSB0
aGF0IHlvdXIgY29kZSBzdHlsZSBjaGVja2VyIHdhcm5zIHlvdSBhYm91dCBs
ZWZ0b3ZlciBjb25zb2xlIGxvZ3MuCgoqIFByb2R1Y2UgcmVhZGFibGUgcHJv
ZHVjdGlvbiBsb2dnaW5nLiBJZGVhbGx5IHVzZSBsb2dnaW5nIGxpYnJhcmll
cyB0byBiZSB1c2VkIGluIHByb2R1Y3Rpb24gbW9kZSAoc3VjaCBhcyBbd2lu
c3Rvbl0oaHR0cHM6Ly9naXRodWIuY29tL3dpbnN0b25qcy93aW5zdG9uKSBv
cgpbbm9kZS1idW55YW5dKGh0dHBzOi8vZ2l0aHViLmNvbS90cmVudG0vbm9k
ZS1idW55YW4pKS4KCiAgICBfV2h5Ol8KICAgID4gSXQgbWFrZXMgeW91ciB0
cm91Ymxlc2hvb3RpbmcgbGVzcyB1bnBsZWFzYW50IHdpdGggY29sb3JpemF0
aW9uLCB0aW1lc3RhbXBzLCBsb2cgdG8gYSBmaWxlIGluIGFkZGl0aW9uIHRv
IHRoZSBjb25zb2xlIG9yIGV2ZW4gbG9nZ2luZyB0byBhIGZpbGUgdGhhdCBy
b3RhdGVzIGRhaWx5LiBbcmVhZCBtb3JlLi4uXShodHRwczovL2Jsb2cucmlz
aW5nc3RhY2suY29tL25vZGUtanMtbG9nZ2luZy10dXRvcmlhbC8pCgoKPGEg
bmFtZT0iYXBpIj48L2E+CiMjIDkuIEFQSQo8YSBuYW1lPSJhcGktZGVzaWdu
Ij48L2E+CgohW0FQSV0oL2ltYWdlcy9hcGkucG5nKQoKIyMjIDkuMSBBUEkg
ZGVzaWduCgpfV2h5Ol8KPiBCZWNhdXNlIHdlIHRyeSB0byBlbmZvcmNlIGRl
dmVsb3BtZW50IG9mIHNhbmVseSBjb25zdHJ1Y3RlZCBSRVNUZnVsIGludGVy
ZmFjZXMsIHdoaWNoIHRlYW0gbWVtYmVycyBhbmQgY2xpZW50cyBjYW4gY29u
c3VtZSBzaW1wbHkgYW5kIGNvbnNpc3RlbnRseS4gIAoKX1doeTpfCj4gTGFj
ayBvZiBjb25zaXN0ZW5jeSBhbmQgc2ltcGxpY2l0eSBjYW4gbWFzc2l2ZWx5
IGluY3JlYXNlIGludGVncmF0aW9uIGFuZCBtYWludGVuYW5jZSBjb3N0cy4g
V2hpY2ggaXMgd2h5IGBBUEkgZGVzaWduYCBpcyBpbmNsdWRlZCBpbiB0aGlz
IGRvY3VtZW50LgoKCiogV2UgbW9zdGx5IGZvbGxvdyByZXNvdXJjZS1vcmll
bnRlZCBkZXNpZ24uIEl0IGhhcyB0aHJlZSBtYWluIGZhY3RvcnM6IHJlc291
cmNlcywgY29sbGVjdGlvbiwgYW5kIFVSTHMuCiAgICAqIEEgcmVzb3VyY2Ug
aGFzIGRhdGEsIGdldHMgbmVzdGVkLCBhbmQgdGhlcmUgYXJlIG1ldGhvZHMg
dGhhdCBvcGVyYXRlIGFnYWluc3QgaXQuCiAgICAqIEEgZ3JvdXAgb2YgcmVz
b3VyY2VzIGlzIGNhbGxlZCBhIGNvbGxlY3Rpb24uCiAgICAqIFVSTCBpZGVu
dGlmaWVzIHRoZSBvbmxpbmUgbG9jYXRpb24gb2YgcmVzb3VyY2Ugb3IgY29s
bGVjdGlvbi4KICAgIAogICAgX1doeTpfCiAgICA+IFRoaXMgaXMgYSB2ZXJ5
IHdlbGwta25vd24gZGVzaWduIHRvIGRldmVsb3BlcnMgKHlvdXIgbWFpbiBB
UEkgY29uc3VtZXJzKS4gQXBhcnQgZnJvbSByZWFkYWJpbGl0eSBhbmQgZWFz
ZSBvZiB1c2UsIGl0IGFsbG93cyB1cyB0byB3cml0ZSBnZW5lcmljIGxpYnJh
cmllcyBhbmQgY29ubmVjdG9ycyB3aXRob3V0IGV2ZW4ga25vd2luZyB3aGF0
IHRoZSBBUEkgaXMgYWJvdXQuCgoqIHVzZSBrZWJhYi1jYXNlIGZvciBVUkxz
LgoqIHVzZSBjYW1lbENhc2UgZm9yIHBhcmFtZXRlcnMgaW4gdGhlIHF1ZXJ5
IHN0cmluZyBvciByZXNvdXJjZSBmaWVsZHMuCiogdXNlIHBsdXJhbCBrZWJh
Yi1jYXNlIGZvciByZXNvdXJjZSBuYW1lcyBpbiBVUkxzLgoKKiBBbHdheXMg
dXNlIGEgcGx1cmFsIG5vdW5zIGZvciBuYW1pbmcgYSB1cmwgcG9pbnRpbmcg
dG8gYSBjb2xsZWN0aW9uOiBgL3VzZXJzYC4KCiAgICBfV2h5Ol8KICAgID4g
QmFzaWNhbGx5LCBpdCByZWFkcyBiZXR0ZXIgYW5kIGtlZXBzIFVSTHMgY29u
c2lzdGVudC4gW3JlYWQgbW9yZS4uLl0oaHR0cHM6Ly9hcGlnZWUuY29tL2Fi
b3V0L2Jsb2cvdGVjaG5vbG9neS9yZXN0ZnVsLWFwaS1kZXNpZ24tcGx1cmFs
LW5vdW5zLWFuZC1jb25jcmV0ZS1uYW1lcykKCiogSW4gdGhlIHNvdXJjZSBj
b2RlIGNvbnZlcnQgcGx1cmFscyB0byB2YXJpYWJsZXMgYW5kIHByb3BlcnRp
ZXMgd2l0aCBhIExpc3Qgc3VmZml4LgoKICAgIF9XaHlfOgogICAgPiBQbHVy
YWwgaXMgbmljZSBpbiB0aGUgVVJMIGJ1dCBpbiB0aGUgc291cmNlIGNvZGUs
IGl04oCZcyBqdXN0IHRvbyBzdWJ0bGUgYW5kIGVycm9yLXByb25lLgoKKiBB
bHdheXMgdXNlIGEgc2luZ3VsYXIgY29uY2VwdCB0aGF0IHN0YXJ0cyB3aXRo
IGEgY29sbGVjdGlvbiBhbmQgZW5kcyB0byBhbiBpZGVudGlmaWVyOgoKICAg
IGBgYAogICAgL3N0dWRlbnRzLzI0NTc0MwogICAgL2FpcnBvcnRzL2tqZmsK
ICAgIGBgYAoqIEF2b2lkIFVSTHMgbGlrZSB0aGlzOiAKICAgIGBgYAogICAg
R0VUIC9ibG9ncy86YmxvZ0lkL3Bvc3RzLzpwb3N0SWQvc3VtbWFyeQogICAg
YGBgCgogICAgX1doeTpfCiAgICA+IFRoaXMgaXMgbm90IHBvaW50aW5nIHRv
IGEgcmVzb3VyY2UgYnV0IHRvIGEgcHJvcGVydHkgaW5zdGVhZC4gWW91IGNh
biBwYXNzIHRoZSBwcm9wZXJ0eSBhcyBhIHBhcmFtZXRlciB0byB0cmltIHlv
dXIgcmVzcG9uc2UuCgoqIEtlZXAgdmVyYnMgb3V0IG9mIHlvdXIgcmVzb3Vy
Y2UgVVJMcy4KCiAgICBfV2h5Ol8KICAgID4gQmVjYXVzZSBpZiB5b3UgdXNl
IGEgdmVyYiBmb3IgZWFjaCByZXNvdXJjZSBvcGVyYXRpb24geW91IHNvb24g
d2lsbCBoYXZlIGEgaHVnZSBsaXN0IG9mIFVSTHMgYW5kIG5vIGNvbnNpc3Rl
bnQgcGF0dGVybiB3aGljaCBtYWtlcyBpdCBkaWZmaWN1bHQgZm9yIGRldmVs
b3BlcnMgdG8gbGVhcm4uIFBsdXMgd2UgdXNlIHZlcmJzIGZvciBzb21ldGhp
bmcgZWxzZS4KCiogVXNlIHZlcmJzIGZvciBub24tcmVzb3VyY2VzLiBJbiB0
aGlzIGNhc2UsIHlvdXIgQVBJIGRvZXNuJ3QgcmV0dXJuIGFueSByZXNvdXJj
ZXMuIEluc3RlYWQsIHlvdSBleGVjdXRlIGFuIG9wZXJhdGlvbiBhbmQgcmV0
dXJuIHRoZSByZXN1bHQuIFRoZXNlICoqYXJlIG5vdCoqIENSVUQgKGNyZWF0
ZSwgcmV0cmlldmUsIHVwZGF0ZSwgYW5kIGRlbGV0ZSkgb3BlcmF0aW9uczoK
CiAgICBgYGAKICAgIC90cmFuc2xhdGU/dGV4dD1IYWxsbwogICAgYGBgCgog
ICAgX1doeTpfCiAgICA+IEJlY2F1c2UgZm9yIENSVUQgd2UgdXNlIEhUVFAg
bWV0aG9kcyBvbiBgcmVzb3VyY2VgIG9yIGBjb2xsZWN0aW9uYCBVUkxzLiBU
aGUgdmVyYnMgd2Ugd2VyZSB0YWxraW5nIGFib3V0IGFyZSBhY3R1YWxseSBg
Q29udHJvbGxlcnNgLiBZb3UgdXN1YWxseSBkb24ndCBkZXZlbG9wIG1hbnkg
b2YgdGhlc2UuIFtyZWFkIG1vcmUuLi5dKGh0dHBzOi8vYnlyb25kb3Zlci5n
aXRodWIuaW8vcG9zdC9yZXN0ZnVsLWFwaS1ndWlkZWxpbmVzLyNjb250cm9s
bGVyKQoKKiBUaGUgcmVxdWVzdCBib2R5IG9yIHJlc3BvbnNlIHR5cGUgaXMg
SlNPTiB0aGVuIHBsZWFzZSBmb2xsb3cgYGNhbWVsQ2FzZWAgZm9yIGBKU09O
YCBwcm9wZXJ0eSBuYW1lcyB0byBtYWludGFpbiB0aGUgY29uc2lzdGVuY3ku
CiAgICAKICAgIF9XaHk6XwogICAgPiBUaGlzIGlzIGEgSmF2YVNjcmlwdCBw
cm9qZWN0IGd1aWRlbGluZSwgd2hlcmUgdGhlIHByb2dyYW1taW5nIGxhbmd1
YWdlIGZvciBnZW5lcmF0aW5nIGFuZCBwYXJzaW5nIEpTT04gaXMgYXNzdW1l
ZCB0byBiZSBKYXZhU2NyaXB0LgoKKiBFdmVuIHRob3VnaCBhIHJlc291cmNl
IGlzIGEgc2luZ3VsYXIgY29uY2VwdCB0aGF0IGlzIHNpbWlsYXIgdG8gYW4g
b2JqZWN0IGluc3RhbmNlIG9yIGRhdGFiYXNlIHJlY29yZCwgeW91IHNob3Vs
ZCBub3QgdXNlIHlvdXIgYHRhYmxlX25hbWVgIGZvciBhIHJlc291cmNlIG5h
bWUgYW5kIGBjb2x1bW5fbmFtZWAgcmVzb3VyY2UgcHJvcGVydHkuCgogICAg
X1doeTpfCiAgICA+IEJlY2F1c2UgeW91ciBpbnRlbnRpb24gaXMgdG8gZXhw
b3NlIFJlc291cmNlcywgbm90IHlvdXIgZGF0YWJhc2Ugc2NoZW1hIGRldGFp
bHMuCgoqIEFnYWluLCBvbmx5IHVzZSBub3VucyBpbiB5b3VyIFVSTCB3aGVu
IG5hbWluZyB5b3VyIHJlc291cmNlcyBhbmQgZG9u4oCZdCB0cnkgdG8gZXhw
bGFpbiB0aGVpciBmdW5jdGlvbmFsaXR5LgoKICAgIF9XaHk6XwogICAgPiBP
bmx5IHVzZSBub3VucyBpbiB5b3VyIHJlc291cmNlIFVSTHMsIGF2b2lkIGVu
ZHBvaW50cyBsaWtlIGAvYWRkTmV3VXNlcmAgb3IgYC91cGRhdGVVc2VyYCAu
ICBBbHNvIGF2b2lkIHNlbmRpbmcgcmVzb3VyY2Ugb3BlcmF0aW9ucyBhcyBh
IHBhcmFtZXRlci4KCiogRXhwbGFpbiB0aGUgQ1JVRCBmdW5jdGlvbmFsaXRp
ZXMgdXNpbmcgSFRUUCBtZXRob2RzOgoKICAgIF9Ib3c6XwogICAgPiBgR0VU
YDogVG8gcmV0cmlldmUgYSByZXByZXNlbnRhdGlvbiBvZiBhIHJlc291cmNl
LgogICAgCiAgICA+IGBQT1NUYDogVG8gY3JlYXRlIG5ldyByZXNvdXJjZXMg
YW5kIHN1Yi1yZXNvdXJjZXMuCiAgIAogICAgPiBgUFVUYDogVG8gdXBkYXRl
IGV4aXN0aW5nIHJlc291cmNlcy4KICAgIAogICAgPiBgUEFUQ0hgOiBUbyB1
cGRhdGUgZXhpc3RpbmcgcmVzb3VyY2VzLiBJdCBvbmx5IHVwZGF0ZXMgdGhl
IGZpZWxkcyB0aGF0IHdlcmUgc3VwcGxpZWQsIGxlYXZpbmcgdGhlIG90aGVy
cyBhbG9uZS4KICAgIAogICAgPiBgREVMRVRFYDoJVG8gZGVsZXRlIGV4aXN0
aW5nIHJlc291cmNlcy4KCgoqIEZvciBuZXN0ZWQgcmVzb3VyY2VzLCB1c2Ug
dGhlIHJlbGF0aW9uIGJldHdlZW4gdGhlbSBpbiB0aGUgVVJMLiBGb3IgaW5z
dGFuY2UsIHVzaW5nIGBpZGAgdG8gcmVsYXRlIGFuIGVtcGxveWVlIHRvIGEg
Y29tcGFueS4KCiAgICBfV2h5Ol8KICAgID4gVGhpcyBpcyBhIG5hdHVyYWwg
d2F5IHRvIG1ha2UgcmVzb3VyY2VzIGV4cGxvcmFibGUuCgogICAgX0hvdzpf
CgogICAgPiBgR0VUICAgICAgL3NjaG9vbHMvMi9zdHVkZW50cwlgICwgc2hv
dWxkIGdldCB0aGUgbGlzdCBvZiBhbGwgc3R1ZGVudHMgZnJvbSBzY2hvb2wg
Mi4KCiAgICA+IGBHRVQgICAgICAvc2Nob29scy8yL3N0dWRlbnRzLzMxYAks
IHNob3VsZCBnZXQgdGhlIGRldGFpbHMgb2Ygc3R1ZGVudCAzMSwgd2hpY2gg
YmVsb25ncyB0byBzY2hvb2wgMi4KCiAgICA+IGBERUxFVEUgICAvc2Nob29s
cy8yL3N0dWRlbnRzLzMxYAksIHNob3VsZCBkZWxldGUgc3R1ZGVudCAzMSwg
d2hpY2ggYmVsb25ncyB0byBzY2hvb2wgMi4KCiAgICA+IGBQVVQgICAgICAv
c2Nob29scy8yL3N0dWRlbnRzLzMxYAksIHNob3VsZCB1cGRhdGUgaW5mbyBv
ZiBzdHVkZW50IDMxLCBVc2UgUFVUIG9uIHJlc291cmNlLVVSTCBvbmx5LCBu
b3QgY29sbGVjdGlvbi4KCiAgICA+IGBQT1NUICAgICAvc2Nob29sc2AgLCBz
aG91bGQgY3JlYXRlIGEgbmV3IHNjaG9vbCBhbmQgcmV0dXJuIHRoZSBkZXRh
aWxzIG9mIHRoZSBuZXcgc2Nob29sIGNyZWF0ZWQuIFVzZSBQT1NUIG9uIGNv
bGxlY3Rpb24tVVJMcy4KCiogVXNlIGEgc2ltcGxlIG9yZGluYWwgbnVtYmVy
IGZvciBhIHZlcnNpb24gd2l0aCBhIGB2YCBwcmVmaXggKHYxLCB2MikuIE1v
dmUgaXQgYWxsIHRoZSB3YXkgdG8gdGhlIGxlZnQgaW4gdGhlIFVSTCBzbyB0
aGF0IGl0IGhhcyB0aGUgaGlnaGVzdCBzY29wZToKICAgIGBgYAogICAgaHR0
cDovL2FwaS5kb21haW4uY29tL3YxL3NjaG9vbHMvMy9zdHVkZW50cwkKICAg
IGBgYAoKICAgIF9XaHk6XwogICAgPiBXaGVuIHlvdXIgQVBJcyBhcmUgcHVi
bGljIGZvciBvdGhlciB0aGlyZCBwYXJ0aWVzLCB1cGdyYWRpbmcgdGhlIEFQ
SXMgd2l0aCBzb21lIGJyZWFraW5nIGNoYW5nZSB3b3VsZCBhbHNvIGxlYWQg
dG8gYnJlYWtpbmcgdGhlIGV4aXN0aW5nIHByb2R1Y3RzIG9yIHNlcnZpY2Vz
IHVzaW5nIHlvdXIgQVBJcy4gVXNpbmcgdmVyc2lvbnMgaW4geW91ciBVUkwg
Y2FuIHByZXZlbnQgdGhhdCBmcm9tIGhhcHBlbmluZy4gW3JlYWQgbW9yZS4u
Ll0oaHR0cHM6Ly9hcGlnZWUuY29tL2Fib3V0L2Jsb2cvdGVjaG5vbG9neS9y
ZXN0ZnVsLWFwaS1kZXNpZ24tdGlwcy12ZXJzaW9uaW5nKQoKCgoqIFJlc3Bv
bnNlIG1lc3NhZ2VzIG11c3QgYmUgc2VsZi1kZXNjcmlwdGl2ZS4gQSBnb29k
IGVycm9yIG1lc3NhZ2UgcmVzcG9uc2UgbWlnaHQgbG9vayBzb21ldGhpbmcg
bGlrZSB0aGlzOgogICAgYGBganNvbgogICAgewogICAgICAgICJjb2RlIjog
MTIzNCwKICAgICAgICAibWVzc2FnZSIgOiAiU29tZXRoaW5nIGJhZCBoYXBw
ZW5lZCIsCiAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJNb3JlIGRldGFpbHMi
CiAgICB9CiAgICBgYGAKICAgIG9yIGZvciB2YWxpZGF0aW9uIGVycm9yczoK
ICAgIGBgYGpzb24KICAgIHsKICAgICAgICAiY29kZSIgOiAyMzE0LAogICAg
ICAgICJtZXNzYWdlIiA6ICJWYWxpZGF0aW9uIEZhaWxlZCIsCiAgICAgICAg
ImVycm9ycyIgOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJj
b2RlIiA6IDEyMzMsCiAgICAgICAgICAgICAgICAiZmllbGQiIDogImVtYWls
IiwKICAgICAgICAgICAgICAgICJtZXNzYWdlIiA6ICJJbnZhbGlkIGVtYWls
IgogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAg
ICAiY29kZSIgOiAxMjM0LAogICAgICAgICAgICAgICAgImZpZWxkIiA6ICJw
YXNzd29yZCIsCiAgICAgICAgICAgICAgICAibWVzc2FnZSIgOiAiTm8gcGFz
c3dvcmQgcHJvdmlkZWQiCiAgICAgICAgICAgIH0KICAgICAgICAgIF0KICAg
IH0KICAgIGBgYAoKICAgIF9XaHk6XwogICAgPiBkZXZlbG9wZXJzIGRlcGVu
ZCBvbiB3ZWxsLWRlc2lnbmVkIGVycm9ycyBhdCB0aGUgY3JpdGljYWwgdGlt
ZXMgd2hlbiB0aGV5IGFyZSB0cm91Ymxlc2hvb3RpbmcgYW5kIHJlc29sdmlu
ZyBpc3N1ZXMgYWZ0ZXIgdGhlIGFwcGxpY2F0aW9ucyB0aGV5J3ZlIGJ1aWx0
IHVzaW5nIHlvdXIgQVBJcyBhcmUgaW4gdGhlIGhhbmRzIG9mIHRoZWlyIHVz
ZXJzLgoKCiAgICBfTm90ZTogS2VlcCBzZWN1cml0eSBleGNlcHRpb24gbWVz
c2FnZXMgYXMgZ2VuZXJpYyBhcyBwb3NzaWJsZS4gRm9yIGluc3RhbmNlLCBJ
bnN0ZWFkIG9mIHNheWluZyDigJhpbmNvcnJlY3QgcGFzc3dvcmTigJksIHlv
dSBjYW4gcmVwbHkgYmFjayBzYXlpbmcg4oCYaW52YWxpZCB1c2VybmFtZSBv
ciBwYXNzd29yZOKAmSBzbyB0aGF0IHdlIGRvbuKAmXQgdW5rbm93aW5nbHkg
aW5mb3JtIHVzZXIgdGhhdCB1c2VybmFtZSB3YXMgaW5kZWVkIGNvcnJlY3Qg
YW5kIG9ubHkgdGhlIHBhc3N3b3JkIHdhcyBpbmNvcnJlY3QuXwoKKiBVc2Ug
dGhlc2Ugc3RhdHVzIGNvZGVzIHRvIHNlbmQgd2l0aCB5b3VyIHJlc3BvbnNl
IHRvIGRlc2NyaWJlIHdoZXRoZXIgKipldmVyeXRoaW5nIHdvcmtlZCoqLApU
aGUgKipjbGllbnQgYXBwIGRpZCBzb21ldGhpbmcgd3JvbmcqKiBvciBUaGUg
KipBUEkgZGlkIHNvbWV0aGluZyB3cm9uZyoqLgogICAgCiAgICBfV2hpY2gg
b25lczpfCiAgICA+IGAyMDAgT0tgIHJlc3BvbnNlIHJlcHJlc2VudHMgc3Vj
Y2VzcyBmb3IgYEdFVGAsIGBQVVRgIG9yIGBQT1NUYCByZXF1ZXN0cy4KCiAg
ICA+IGAyMDEgQ3JlYXRlZGAgZm9yIHdoZW4gYSBuZXcgaW5zdGFuY2UgaXMg
Y3JlYXRlZC4gQ3JlYXRpbmcgYSBuZXcgaW5zdGFuY2UsIHVzaW5nIGBQT1NU
YCBtZXRob2QgcmV0dXJucyBgMjAxYCBzdGF0dXMgY29kZS4KCiAgICA+IGAy
MDQgTm8gQ29udGVudGAgcmVzcG9uc2UgcmVwcmVzZW50cyBzdWNjZXNzIGJ1
dCB0aGVyZSBpcyBubyBjb250ZW50IHRvIGJlIHNlbnQgaW4gdGhlIHJlc3Bv
bnNlLiBVc2UgaXQgd2hlbiBgREVMRVRFYCBvcGVyYXRpb24gc3VjY2VlZHMu
CgogICAgPiBgMzA0IE5vdCBNb2RpZmllZGAgcmVzcG9uc2UgaXMgdG8gbWlu
aW1pemUgaW5mb3JtYXRpb24gdHJhbnNmZXIgd2hlbiB0aGUgcmVjaXBpZW50
IGFscmVhZHkgaGFzIGNhY2hlZCByZXByZXNlbnRhdGlvbnMuCgogICAgPiBg
NDAwIEJhZCBSZXF1ZXN0YCBmb3Igd2hlbiB0aGUgcmVxdWVzdCB3YXMgbm90
IHByb2Nlc3NlZCwgYXMgdGhlIHNlcnZlciBjb3VsZCBub3QgdW5kZXJzdGFu
ZCB3aGF0IHRoZSBjbGllbnQgaXMgYXNraW5nIGZvci4KCiAgICA+IGA0MDEg
VW5hdXRob3JpemVkYCBmb3Igd2hlbiB0aGUgcmVxdWVzdCBsYWNrcyB2YWxp
ZCBjcmVkZW50aWFscyBhbmQgaXQgc2hvdWxkIHJlLXJlcXVlc3Qgd2l0aCB0
aGUgcmVxdWlyZWQgY3JlZGVudGlhbHMuCgogICAgPiBgNDAzIEZvcmJpZGRl
bmAgbWVhbnMgdGhlIHNlcnZlciB1bmRlcnN0b29kIHRoZSByZXF1ZXN0IGJ1
dCByZWZ1c2VzIHRvIGF1dGhvcml6ZSBpdC4KCiAgICA+IGA0MDQgTm90IEZv
dW5kYCBpbmRpY2F0ZXMgdGhhdCB0aGUgcmVxdWVzdGVkIHJlc291cmNlIHdh
cyBub3QgZm91bmQuIAoKICAgID4gYDUwMCBJbnRlcm5hbCBTZXJ2ZXIgRXJy
b3JgIGluZGljYXRlcyB0aGF0IHRoZSByZXF1ZXN0IGlzIHZhbGlkLCBidXQg
dGhlIHNlcnZlciBjb3VsZCBub3QgZnVsZmlsbCBpdCBkdWUgdG8gc29tZSB1
bmV4cGVjdGVkIGNvbmRpdGlvbi4KCiAgICBfV2h5Ol8KICAgID4gTW9zdCBB
UEkgcHJvdmlkZXJzIHVzZSBhIHNtYWxsIHN1YnNldCBIVFRQIHN0YXR1cyBj
b2Rlcy4gRm9yIGV4YW1wbGUsIHRoZSBHb29nbGUgR0RhdGEgQVBJIHVzZXMg
b25seSAxMCBzdGF0dXMgY29kZXMsIE5ldGZsaXggdXNlcyA5LCBhbmQgRGln
Zywgb25seSA4LiBPZiBjb3Vyc2UsIHRoZXNlIHJlc3BvbnNlcyBjb250YWlu
IGEgYm9keSB3aXRoIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24uIFRoZXJlIGFy
ZSBvdmVyIDcwIEhUVFAgc3RhdHVzIGNvZGVzLiBIb3dldmVyLCBtb3N0IGRl
dmVsb3BlcnMgZG9uJ3QgaGF2ZSBhbGwgNzAgbWVtb3JpemVkLiBTbyBpZiB5
b3UgY2hvb3NlIHN0YXR1cyBjb2RlcyB0aGF0IGFyZSBub3QgdmVyeSBjb21t
b24geW91IHdpbGwgZm9yY2UgYXBwbGljYXRpb24gZGV2ZWxvcGVycyBhd2F5
IGZyb20gYnVpbGRpbmcgdGhlaXIgYXBwcyBhbmQgb3ZlciB0byB3aWtpcGVk
aWEgdG8gZmlndXJlIG91dCB3aGF0IHlvdSdyZSB0cnlpbmcgdG8gdGVsbCB0
aGVtLiBbcmVhZCBtb3JlLi4uXShodHRwczovL2FwaWdlZS5jb20vYWJvdXQv
YmxvZy90ZWNobm9sb2d5L3Jlc3RmdWwtYXBpLWRlc2lnbi13aGF0LWFib3V0
LWVycm9ycykKCgoqIFByb3ZpZGUgdG90YWwgbnVtYmVycyBvZiByZXNvdXJj
ZXMgaW4geW91ciByZXNwb25zZS4KKiBBY2NlcHQgYGxpbWl0YCBhbmQgYG9m
ZnNldGAgcGFyYW1ldGVycy4KCiogVGhlIGFtb3VudCBvZiBkYXRhIHRoZSBy
ZXNvdXJjZSBleHBvc2VzIHNob3VsZCBhbHNvIGJlIHRha2VuIGludG8gYWNj
b3VudC4gVGhlIEFQSSBjb25zdW1lciBkb2Vzbid0IGFsd2F5cyBuZWVkIHRo
ZSBmdWxsIHJlcHJlc2VudGF0aW9uIG9mIGEgcmVzb3VyY2UuIFVzZSBhIGZp
ZWxkcyBxdWVyeSBwYXJhbWV0ZXIgdGhhdCB0YWtlcyBhIGNvbW1hIHNlcGFy
YXRlZCBsaXN0IG9mIGZpZWxkcyB0byBpbmNsdWRlOgogICAgYGBgCiAgICBH
RVQgL3N0dWRlbnQ/ZmllbGRzPWlkLG5hbWUsYWdlLGNsYXNzCiAgICBgYGAK
KiBQYWdpbmF0aW9uLCBmaWx0ZXJpbmcsIGFuZCBzb3J0aW5nIGRvbuKAmXQg
bmVlZCB0byBiZSBzdXBwb3J0ZWQgZnJvbSBzdGFydCBmb3IgYWxsIHJlc291
cmNlcy4gRG9jdW1lbnQgdGhvc2UgcmVzb3VyY2VzIHRoYXQgb2ZmZXIgZmls
dGVyaW5nIGFuZCBzb3J0aW5nLgoKPGEgbmFtZT0iYXBpLXNlY3VyaXR5Ij48
L2E+CiMjIyA5LjIgQVBJIHNlY3VyaXR5ClRoZXNlIGFyZSBzb21lIGJhc2lj
IHNlY3VyaXR5IGJlc3QgcHJhY3RpY2VzOgoKKiBEb24ndCB1c2UgYmFzaWMg
YXV0aGVudGljYXRpb24gdW5sZXNzIG92ZXIgYSBzZWN1cmUgY29ubmVjdGlv
biAoSFRUUFMpLiBBdXRoZW50aWNhdGlvbiB0b2tlbnMgbXVzdCBub3QgYmUg
dHJhbnNtaXR0ZWQgaW4gdGhlIFVSTDogYEdFVCAvdXNlcnMvMTIzP3Rva2Vu
PWFzZGYuLi4uYAoKICAgIF9XaHk6XwogICAgPiBCZWNhdXNlIFRva2VuLCBv
ciB1c2VyIElEIGFuZCBwYXNzd29yZCBhcmUgcGFzc2VkIG92ZXIgdGhlIG5l
dHdvcmsgYXMgY2xlYXIgdGV4dCAoaXQgaXMgYmFzZTY0IGVuY29kZWQsIGJ1
dCBiYXNlNjQgaXMgYSByZXZlcnNpYmxlIGVuY29kaW5nKSwgdGhlIGJhc2lj
IGF1dGhlbnRpY2F0aW9uIHNjaGVtZSBpcyBub3Qgc2VjdXJlLiBbcmVhZCBt
b3JlLi4uXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9k
b2NzL1dlYi9IVFRQL0F1dGhlbnRpY2F0aW9uKQoKKiBUb2tlbnMgbXVzdCBi
ZSB0cmFuc21pdHRlZCB1c2luZyB0aGUgQXV0aG9yaXphdGlvbiBoZWFkZXIg
b24gZXZlcnkgcmVxdWVzdDogYEF1dGhvcml6YXRpb246IEJlYXJlciB4eHh4
eHgsIEV4dHJhIHl5eXl5YC4KCiogQXV0aG9yaXphdGlvbiBDb2RlIHNob3Vs
ZCBiZSBzaG9ydC1saXZlZC4KCiogUmVqZWN0IGFueSBub24tVExTIHJlcXVl
c3RzIGJ5IG5vdCByZXNwb25kaW5nIHRvIGFueSBIVFRQIHJlcXVlc3QgdG8g
YXZvaWQgYW55IGluc2VjdXJlIGRhdGEgZXhjaGFuZ2UuIFJlc3BvbmQgdG8g
SFRUUCByZXF1ZXN0cyBieSBgNDAzIEZvcmJpZGRlbmAuCgoqIENvbnNpZGVy
IHVzaW5nIFJhdGUgTGltaXRpbmcuCgogICAgX1doeTpfCiAgICA+IFRvIHBy
b3RlY3QgeW91ciBBUElzIGZyb20gYm90IHRocmVhdHMgdGhhdCBjYWxsIHlv
dXIgQVBJIHRob3VzYW5kcyBvZiB0aW1lcyBwZXIgaG91ci4gWW91IHNob3Vs
ZCBjb25zaWRlciBpbXBsZW1lbnRpbmcgcmF0ZSBsaW1pdCBlYXJseSBvbi4K
CiogU2V0dGluZyBIVFRQIGhlYWRlcnMgYXBwcm9wcmlhdGVseSBjYW4gaGVs
cCB0byBsb2NrIGRvd24gYW5kIHNlY3VyZSB5b3VyIHdlYiBhcHBsaWNhdGlv
bi4gW3JlYWQgbW9yZS4uLl0oaHR0cHM6Ly9naXRodWIuY29tL2hlbG1ldGpz
L2hlbG1ldCkKCiogWW91ciBBUEkgc2hvdWxkIGNvbnZlcnQgdGhlIHJlY2Vp
dmVkIGRhdGEgdG8gdGhlaXIgY2Fub25pY2FsIGZvcm0gb3IgcmVqZWN0IHRo
ZW0uIFJldHVybiA0MDAgQmFkIFJlcXVlc3Qgd2l0aCBkZXRhaWxzIGFib3V0
IGFueSBlcnJvcnMgZnJvbSBiYWQgb3IgbWlzc2luZyBkYXRhLgoKKiBBbGwg
dGhlIGRhdGEgZXhjaGFuZ2VkIHdpdGggdGhlIFJFU1QgQVBJIG11c3QgYmUg
dmFsaWRhdGVkIGJ5IHRoZSBBUEkuCgoqIFNlcmlhbGl6ZSB5b3VyIEpTT04u
CgogICAgX1doeTpfCiAgICA+IEEga2V5IGNvbmNlcm4gd2l0aCBKU09OIGVu
Y29kZXJzIGlzIHByZXZlbnRpbmcgYXJiaXRyYXJ5IEphdmFTY3JpcHQgcmVt
b3RlIGNvZGUgZXhlY3V0aW9uIHdpdGhpbiB0aGUgYnJvd3Nlci4uLiBvciwg
aWYgeW91J3JlIHVzaW5nIG5vZGUuanMsIG9uIHRoZSBzZXJ2ZXIuIEl0J3Mg
dml0YWwgdGhhdCB5b3UgdXNlIGEgcHJvcGVyIEpTT04gc2VyaWFsaXplciB0
byBlbmNvZGUgdXNlci1zdXBwbGllZCBkYXRhIHByb3Blcmx5IHRvIHByZXZl
bnQgdGhlIGV4ZWN1dGlvbiBvZiB1c2VyLXN1cHBsaWVkIGlucHV0IG9uIHRo
ZSBicm93c2VyLgoKKiBWYWxpZGF0ZSB0aGUgY29udGVudC10eXBlIGFuZCBt
b3N0bHkgdXNlIGBhcHBsaWNhdGlvbi8qanNvbmAgKENvbnRlbnQtVHlwZSBo
ZWFkZXIpLgogICAgCiAgICBfV2h5Ol8KICAgID4gRm9yIGluc3RhbmNlLCBh
Y2NlcHRpbmcgdGhlIGBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29k
ZWRgIG1pbWUgdHlwZSBhbGxvd3MgdGhlIGF0dGFja2VyIHRvIGNyZWF0ZSBh
IGZvcm0gYW5kIHRyaWdnZXIgYSBzaW1wbGUgUE9TVCByZXF1ZXN0LiBUaGUg
c2VydmVyIHNob3VsZCBuZXZlciBhc3N1bWUgdGhlIENvbnRlbnQtVHlwZS4g
QSBsYWNrIG9mIENvbnRlbnQtVHlwZSBoZWFkZXIgb3IgYW4gdW5leHBlY3Rl
ZCBDb250ZW50LVR5cGUgaGVhZGVyIHNob3VsZCByZXN1bHQgaW4gdGhlIHNl
cnZlciByZWplY3RpbmcgdGhlIGNvbnRlbnQgd2l0aCBhIGA0WFhgIHJlc3Bv
bnNlLgoKKiBDaGVjayB0aGUgQVBJIFNlY3VyaXR5IENoZWNrbGlzdCBQcm9q
ZWN0LiBbcmVhZCBtb3JlLi4uXShodHRwczovL2dpdGh1Yi5jb20vc2hpZWxk
ZnkvQVBJLVNlY3VyaXR5LUNoZWNrbGlzdCkKCjxhIG5hbWU9ImFwaS1kb2N1
bWVudGF0aW9uIj48L2E+CiMjIyA5LjMgQVBJIGRvY3VtZW50YXRpb24KKiBG
aWxsIHRoZSBgQVBJIFJlZmVyZW5jZWAgc2VjdGlvbiBpbiBbUkVBRE1FLm1k
IHRlbXBsYXRlXSguL1JFQURNRS5zYW1wbGUubWQpIGZvciBBUEkuCiogRGVz
Y3JpYmUgQVBJIGF1dGhlbnRpY2F0aW9uIG1ldGhvZHMgd2l0aCBhIGNvZGUg
c2FtcGxlLgoqIEV4cGxhaW5pbmcgVGhlIFVSTCBTdHJ1Y3R1cmUgKHBhdGgg
b25seSwgbm8gcm9vdCBVUkwpIGluY2x1ZGluZyBUaGUgcmVxdWVzdCB0eXBl
IChNZXRob2QpLgoKRm9yIGVhY2ggZW5kcG9pbnQgZXhwbGFpbjoKKiBVUkwg
UGFyYW1zIElmIFVSTCBQYXJhbXMgZXhpc3QsIHNwZWNpZnkgdGhlbSBpbiBh
Y2NvcmRhbmNlIHdpdGggbmFtZSBtZW50aW9uZWQgaW4gVVJMIHNlY3Rpb246
CgogICAgYGBgCiAgICBSZXF1aXJlZDogaWQ9W2ludGVnZXJdCiAgICBPcHRp
b25hbDogcGhvdG9faWQ9W2FscGhhbnVtZXJpY10KICAgIGBgYAoKKiBJZiB0
aGUgcmVxdWVzdCB0eXBlIGlzIFBPU1QsIHByb3ZpZGUgd29ya2luZyBleGFt
cGxlcy4gVVJMIFBhcmFtcyBydWxlcyBhcHBseSBoZXJlIHRvby4gU2VwYXJh
dGUgdGhlIHNlY3Rpb24gaW50byBPcHRpb25hbCBhbmQgUmVxdWlyZWQuCgoq
IFN1Y2Nlc3MgUmVzcG9uc2UsIFdoYXQgc2hvdWxkIGJlIHRoZSBzdGF0dXMg
Y29kZSBhbmQgaXMgdGhlcmUgYW55IHJldHVybiBkYXRhPyBUaGlzIGlzIHVz
ZWZ1bCB3aGVuIHBlb3BsZSBuZWVkIHRvIGtub3cgd2hhdCB0aGVpciBjYWxs
YmFja3Mgc2hvdWxkIGV4cGVjdDoKCiAgICBgYGAKICAgIENvZGU6IDIwMAog
ICAgQ29udGVudDogeyBpZCA6IDEyIH0KICAgIGBgYAoKKiBFcnJvciBSZXNw
b25zZSwgTW9zdCBlbmRwb2ludHMgaGF2ZSBtYW55IHdheXMgdG8gZmFpbC4g
RnJvbSB1bmF1dGhvcml6ZWQgYWNjZXNzIHRvIHdyb25nZnVsIHBhcmFtZXRl
cnMgZXRjLiBBbGwgb2YgdGhvc2Ugc2hvdWxkIGJlIGxpc3RlZCBoZXJlLiBJ
dCBtaWdodCBzZWVtIHJlcGV0aXRpdmUsIGJ1dCBpdCBoZWxwcyBwcmV2ZW50
IGFzc3VtcHRpb25zIGZyb20gYmVpbmcgbWFkZS4gRm9yIGV4YW1wbGUKICAg
IGBgYGpzb24KICAgIHsKICAgICAgICAiY29kZSI6IDQwMywKICAgICAgICAi
bWVzc2FnZSIgOiAiQXV0aGVudGljYXRpb24gZmFpbGVkIiwKICAgICAgICAi
ZGVzY3JpcHRpb24iIDogIkludmFsaWQgdXNlcm5hbWUgb3IgcGFzc3dvcmQi
CiAgICB9ICAgCiAgICBgYGAKCgoqIFVzZSBBUEkgZGVzaWduIHRvb2xzLCBU
aGVyZSBhcmUgbG90cyBvZiBvcGVuIHNvdXJjZSB0b29scyBmb3IgZ29vZCBk
b2N1bWVudGF0aW9uIHN1Y2ggYXMgW0FQSSBCbHVlcHJpbnRdKGh0dHBzOi8v
YXBpYmx1ZXByaW50Lm9yZy8pIGFuZCBbU3dhZ2dlcl0oaHR0cHM6Ly9zd2Fn
Z2VyLmlvLykuCgo8YSBuYW1lPSJsaWNlbnNpbmciPjwvYT4KIyMgMTAuIExp
Y2Vuc2luZwohW0xpY2Vuc2luZ10oL2ltYWdlcy9saWNlbnNpbmcucG5nKQoK
TWFrZSBzdXJlIHlvdSB1c2UgcmVzb3VyY2VzIHRoYXQgeW91IGhhdmUgdGhl
IHJpZ2h0cyB0byB1c2UuIElmIHlvdSB1c2UgbGlicmFyaWVzLCByZW1lbWJl
ciB0byBsb29rIGZvciBNSVQsIEFwYWNoZSBvciBCU0QgYnV0IGlmIHlvdSBt
b2RpZnkgdGhlbSwgdGhlbiB0YWtlIGEgbG9vayBhdCB0aGUgbGljZW5zZSBk
ZXRhaWxzLiBDb3B5cmlnaHRlZCBpbWFnZXMgYW5kIHZpZGVvcyBtYXkgY2F1
c2UgbGVnYWwgcHJvYmxlbXMuCgoKLS0tClNvdXJjZXM6CltSaXNpbmdTdGFj
ayBFbmdpbmVlcmluZ10oaHR0cHM6Ly9ibG9nLnJpc2luZ3N0YWNrLmNvbS8p
LApbTW96aWxsYSBEZXZlbG9wZXIgTmV0d29ya10oaHR0cHM6Ly9kZXZlbG9w
ZXIubW96aWxsYS5vcmcvKSwKW0hlcm9rdSBEZXYgQ2VudGVyXShodHRwczov
L2RldmNlbnRlci5oZXJva3UuY29tKSwKW0FpcmJuYi9qYXZhc2NyaXB0XSho
dHRwczovL2dpdGh1Yi5jb20vYWlyYm5iL2phdmFzY3JpcHQpLApbQXRsYXNz
aWFuIEdpdCB0dXRvcmlhbHNdKGh0dHBzOi8vd3d3LmF0bGFzc2lhbi5jb20v
Z2l0L3R1dG9yaWFscyksCltBcGlnZWVdKGh0dHBzOi8vYXBpZ2VlLmNvbS9h
Ym91dC9ibG9nKSwKW1dpc2h0YWNrXShodHRwczovL2Jsb2cud2lzaHRhY2su
Y29tKQoKSWNvbnMgYnkgW2ljb25zOF0oaHR0cHM6Ly9pY29uczguY29tLykK
Cg==
",,20100,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
