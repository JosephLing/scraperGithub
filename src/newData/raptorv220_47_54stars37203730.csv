name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'Silex',914985,b'[DEPRECATED -- Use Symfony instead] The PHP micro-framework based on the Symfony Components',b'PHP',0,3730,,223,False,b'https://api.github.com/repos/silexphp/Silex/forks',"U2lsZXgsIGEgc2ltcGxlIFdlYiBGcmFtZXdvcmsKPT09PT09PT09PT09PT09
PT09PT09PT09PT09PT0KCioqV0FSTklORyoqOiBTaWxleCBpcyBpbiBtYWlu
dGVuYW5jZSBtb2RlIG9ubHkuIEVuZHMgb2YgbGlmZSBpcyBzZXQgdG8gSnVu
ZQoyMDE4LiBSZWFkIG1vcmUgb24gYFN5bWZvbnkncyBibG9nIDxodHRwczov
L3N5bWZvbnkuY29tL2Jsb2cvdGhlLWVuZC1vZi1zaWxleD5gXy4KClNpbGV4
IGlzIGEgUEhQIG1pY3JvLWZyYW1ld29yayB0byBkZXZlbG9wIHdlYnNpdGVz
IGJhc2VkIG9uIGBTeW1mb255CmNvbXBvbmVudHNgXzoKCi4uIGNvZGUtYmxv
Y2s6OiBwaHAKCiAgICA8P3BocAoKICAgIHJlcXVpcmVfb25jZSBfX0RJUl9f
LicvLi4vdmVuZG9yL2F1dG9sb2FkLnBocCc7CgogICAgJGFwcCA9IG5ldyBT
aWxleFxBcHBsaWNhdGlvbigpOwoKICAgICRhcHAtPmdldCgnL2hlbGxvL3tu
YW1lfScsIGZ1bmN0aW9uICgkbmFtZSkgdXNlICgkYXBwKSB7CiAgICAgIHJl
dHVybiAnSGVsbG8gJy4kYXBwLT5lc2NhcGUoJG5hbWUpOwogICAgfSk7Cgog
ICAgJGFwcC0+cnVuKCk7CgpTaWxleCB3b3JrcyB3aXRoIFBIUCA3LjEuMyBv
ciBsYXRlci4KCkluc3RhbGxhdGlvbgotLS0tLS0tLS0tLS0KClRoZSByZWNv
bW1lbmRlZCB3YXkgdG8gaW5zdGFsbCBTaWxleCBpcyB0aHJvdWdoIGBDb21w
b3NlcmBfOgoKLi4gY29kZS1ibG9jazo6IGJhc2gKCiAgICBjb21wb3NlciBy
ZXF1aXJlIHNpbGV4L3NpbGV4ICJ+Mi4wIgoKQWx0ZXJuYXRpdmVseSwgeW91
IGNhbiBkb3dubG9hZCB0aGUgYHNpbGV4LnppcGBfIGZpbGUgYW5kIGV4dHJh
Y3QgaXQuCgpNb3JlIEluZm9ybWF0aW9uCi0tLS0tLS0tLS0tLS0tLS0KClJl
YWQgdGhlIGBkb2N1bWVudGF0aW9uYF8gZm9yIG1vcmUgaW5mb3JtYXRpb24g
YW5kIGBjaGFuZ2Vsb2cKPGRvYy9jaGFuZ2Vsb2cucnN0PmBfIGZvciB1cGdy
YWRpbmcgaW5mb3JtYXRpb24uCgpUZXN0cwotLS0tLQoKVG8gcnVuIHRoZSB0
ZXN0IHN1aXRlLCB5b3UgbmVlZCBgQ29tcG9zZXJgXyBhbmQgYFBIUFVuaXRg
XzoKCi4uIGNvZGUtYmxvY2s6OiBiYXNoCgogICAgY29tcG9zZXIgaW5zdGFs
bAogICAgcGhwdW5pdAoKU3VwcG9ydAotLS0tLS0tCgpJZiB5b3UgaGF2ZSBh
IGNvbmZpZ3VyYXRpb24gcHJvYmxlbSB1c2UgdGhlIGBzaWxleCB0YWdgXyBv
biBTdGFja092ZXJmbG93IHRvIGFzayBhIHF1ZXN0aW9uLgoKSWYgeW91IHRo
aW5rIHRoZXJlIGlzIGFuIGFjdHVhbCBwcm9ibGVtIGluIFNpbGV4LCBwbGVh
c2UgYG9wZW4gYW4gaXNzdWVgXyBpZiB0aGVyZSBpc24ndCBvbmUgYWxyZWFk
eSBjcmVhdGVkLgoKTGljZW5zZQotLS0tLS0tCgpTaWxleCBpcyBsaWNlbnNl
ZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCgouLiBfU3ltZm9ueSBjb21wb25l
bnRzOiBodHRwczovL3N5bWZvbnkuY29tCi4uIF9Db21wb3NlcjogICAgICAg
ICAgIGh0dHBzOi8vZ2V0Y29tcG9zZXIub3JnCi4uIF9QSFBVbml0OiAgICAg
ICAgICAgIGh0dHBzOi8vcGhwdW5pdC5kZQouLiBfc2lsZXguemlwOiAgICAg
ICAgICBodHRwczovL3NpbGV4LnN5bWZvbnkuY29tL2Rvd25sb2FkCi4uIF9k
b2N1bWVudGF0aW9uOiAgICAgIGh0dHBzOi8vc2lsZXguc3ltZm9ueS5jb20v
ZG9jdW1lbnRhdGlvbgouLiBfc2lsZXggdGFnOiAgICAgICAgICBodHRwczov
L3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy90YWdnZWQvc2lsZXgKLi4g
X29wZW4gYW4gaXNzdWU6ICAgICAgaHR0cHM6Ly9naXRodWIuY29tL3NpbGV4
cGhwL1NpbGV4L2lzc3Vlcy9uZXcK
",,3730,"bGFuZ3VhZ2U6IHBocAoKc3VkbzogZmFsc2UKCmVudjoKICAgIGdsb2JhbDoK
ICAgICAgICAtIFNZTUZPTllfREVQUkVDQVRJT05TX0hFTFBFUj13ZWFrCiAg
ICAgICAgLSBTWU1GT05ZX1BIUFVOSVRfRElSPSRIT01FLy5zeW1mb255LXBo
cHVuaXQKCmNhY2hlOgogICAgZGlyZWN0b3JpZXM6CiAgICAgIC0gJEhPTUUv
LmNvbXBvc2VyL2NhY2hlL2ZpbGVzCiAgICAgIC0gJEhPTUUvLnN5bWZvbnkt
cGhwdW5pdAoKYmVmb3JlX2luc3RhbGw6CiAgICAtIHBocGVudiBjb25maWct
cm0geGRlYnVnLmluaQogICAgLSBjb21wb3NlciB1cGRhdGUgLS1uby1zdWdn
ZXN0CgppbnN0YWxsOgogICAgLSAuL3ZlbmRvci9iaW4vc2ltcGxlLXBocHVu
aXQgaW5zdGFsbAoKc2NyaXB0OiAuL3ZlbmRvci9iaW4vc2ltcGxlLXBocHVu
aXQKCm1hdHJpeDoKICAgIGluY2x1ZGU6CiAgICAgICAgLSBwaHA6IDcuMQog
ICAgICAgIC0gcGhwOiA3LjIK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'cucumber-js',1811965,b'Cucumber for JavaScript',b'JavaScript',40,3730,,222,False,b'https://api.github.com/repos/cucumber/cucumber-js/forks',"IyBDdWN1bWJlci5qcwoKWyFbT3BlbkNvbGxlY3RpdmVdKGh0dHBzOi8vb3Bl
bmNvbGxlY3RpdmUuY29tL2N1Y3VtYmVyL2JhY2tlcnMvYmFkZ2Uuc3ZnKV0o
aHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20vY3VjdW1iZXIpIApbIVtPcGVu
Q29sbGVjdGl2ZV0oaHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20vY3VjdW1i
ZXIvc3BvbnNvcnMvYmFkZ2Uuc3ZnKV0oaHR0cHM6Ly9vcGVuY29sbGVjdGl2
ZS5jb20vY3VjdW1iZXIpCgpbIVtUcmF2aXNDSV0oaHR0cHM6Ly9pbWcuc2hp
ZWxkcy5pby90cmF2aXMvY3VjdW1iZXIvY3VjdW1iZXItanMvbWFzdGVyLnN2
Zz9sYWJlbD10cmF2aXMtY2kpXShodHRwczovL3RyYXZpcy1jaS5vcmcvY3Vj
dW1iZXIvY3VjdW1iZXItanMvYnJhbmNoZXMpClshW0FwcFZleW9yIFN0YXR1
c10oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9hcHB2ZXlvci9jaS9jaGFybGll
cnVkb2xwaC9jdWN1bWJlci1qcy9tYXN0ZXIuc3ZnP2xhYmVsPWFwcHZleW9y
KV0oaHR0cHM6Ly9jaS5hcHB2ZXlvci5jb20vcHJvamVjdC9jaGFybGllcnVk
b2xwaC9jdWN1bWJlci1qcy9oaXN0b3J5KQpbIVtEZXBlbmRlbmNpZXNdKGh0
dHBzOi8vZGF2aWQtZG0ub3JnL2N1Y3VtYmVyL2N1Y3VtYmVyLWpzLnN2Zyld
KGh0dHBzOi8vZGF2aWQtZG0ub3JnL2N1Y3VtYmVyL2N1Y3VtYmVyLWpzKQpb
IVtDb3ZlcmFnZSBTdGF0dXNdKGh0dHBzOi8vY292ZXJhbGxzLmlvL3JlcG9z
L2dpdGh1Yi9jdWN1bWJlci9jdWN1bWJlci1qcy9iYWRnZS5zdmc/YnJhbmNo
PW1hc3RlcildKGh0dHBzOi8vY292ZXJhbGxzLmlvL2dpdGh1Yi9jdWN1bWJl
ci9jdWN1bWJlci1qcz9icmFuY2g9bWFzdGVyKQoKW0N1Y3VtYmVyXShodHRw
czovL2N1Y3VtYmVyLmlvKSBpcyBhIHRvb2wgZm9yIHJ1bm5pbmcgYXV0b21h
dGVkIHRlc3RzIHdyaXR0ZW4gaW4gcGxhaW4gbGFuZ3VhZ2UuIEJlY2F1c2Ug
dGhleSdyZQp3cml0dGVuIGluIHBsYWluIGxhbmd1YWdlLCB0aGV5IGNhbiBi
ZSByZWFkIGJ5IGFueW9uZSBvbiB5b3VyIHRlYW0uIEJlY2F1c2UgdGhleSBj
YW4gYmUKcmVhZCBieSBhbnlvbmUsIHlvdSBjYW4gdXNlIHRoZW0gdG8gaGVs
cCBpbXByb3ZlIGNvbW11bmljYXRpb24sIGNvbGxhYm9yYXRpb24gYW5kIHRy
dXN0IG9uCnlvdXIgdGVhbS4KCkN1Y3VtYmVyLmpzIGlzIHRoZSBKYXZhU2Ny
aXB0IGltcGxlbWVudGF0aW9uIG9mIEN1Y3VtYmVyIGFuZCBydW5zIG9uIHRo
ZSBbbWFpbnRhaW5lZCBOb2RlLmpzIHZlcnNpb25zXShodHRwczovL2dpdGh1
Yi5jb20vbm9kZWpzL1JlbGVhc2UpIGFuZCAqbW9kZXJuKiB3ZWIgYnJvd3Nl
cnMuCgojIyBUcnkgaXQgbm93CgpXZSd2ZSBwdXQgYSBkZW1vIG9mIEN1Y3Vt
YmVyLmpzIHRvIFtydW4gaW4geW91ciBicm93c2VyXShodHRwOi8vY3VjdW1i
ZXIuZ2l0aHViLmlvL2N1Y3VtYmVyLWpzLykuIFdoeSBkb24ndCB5b3UgZ2l2
ZSBpdCBhIHRyeSBiZWZvcmUgYW55dGhpbmcgZWxzZT8KCiMjIEhlbHAgJiBz
dXBwb3J0CgoqIFNlZSBoZXJlOiBodHRwczovL2N1Y3VtYmVyLmlvL3N1cHBv
cnQKCiMjIENvbnRyaWJ1dGluZwoKU2VlIFtDT05UUklCVVRJTkcubWRdKENP
TlRSSUJVVElORy5tZCkgZm9yIGluZm8gb24gY29udHJpYnV0aW5nIHRvIEN1
Y3VtYmVyLmpzLgoKIyMgQ29kZSBvZiBDb25kdWN0CgpFdmVyeW9uZSBpbnRl
cmFjdGluZyBpbiB0aGlzIGNvZGViYXNlIGFuZCBpc3N1ZSB0cmFja2VyIGlz
IGV4cGVjdGVkIHRvIGZvbGxvdyB0aGUgQ3VjdW1iZXIgW2NvZGUgb2YgY29u
ZHVjdF0oaHR0cHM6Ly9naXRodWIuY29tL2N1Y3VtYmVyL2N1Y3VtYmVyL2Js
b2IvbWFzdGVyL0NPREVfT0ZfQ09ORFVDVC5tZCkuCgojIyBJbnN0YWxsCgpb
IVtucG0gZG93bmxvYWRzXShodHRwczovL2ltZy5zaGllbGRzLmlvL25wbS9k
bS9jdWN1bWJlci5zdmc/c3R5bGU9ZmxhdC1zcXVhcmUpXShodHRwOi8vbnBt
LXN0YXQuY29tL2NoYXJ0cy5odG1sP3BhY2thZ2U9Y3VjdW1iZXImZnJvbT0y
MDE1LTA5LTAxKQoKCiMjIyBOb2RlCgpDdWN1bWJlci5qcyBpcyBhdmFpbGFi
bGUgYXMgYW4gbnBtIG1vZHVsZS4KCmBgYCBzaGVsbAokIG5wbSBpbnN0YWxs
IGN1Y3VtYmVyCmBgYAoKIyMjIEJyb3dzZXIKCiogR3JhYiB0aGUgYnJvd3Nl
cmlmaWVkIGNvZGUgZnJvbSB0aGUgbGF0ZXN0IHJlbGVhc2UgaW4gdGhlIFtk
aXN0XSgvZGlzdCkgZm9sZGVyCgojIyBEb2N1bWVudGF0aW9uCgpUaGUgZm9s
bG93aW5nIGRvY3VtZW50YXRpb24gaXMgZm9yIG1hc3Rlci4gU2VlIGJlbG93
IGZvciBkb2N1bWVudGF0aW9uIGZvciBvbGRlciB2ZXJzaW9ucy4gCgoqIFtD
TEldKC9kb2NzL2NsaS5tZCkKKiBbQ3VzdG9tIEZvcm1hdHRlcnNdKC9kb2Nz
L2N1c3RvbV9mb3JtYXR0ZXJzLm1kKQoqIFtDdXN0b20gU25pcHBldCBTeW50
YXhlc10oL2RvY3MvY3VzdG9tX3NuaXBwZXRfc3ludGF4ZXMubWQpCiogW05v
ZGVKcyBFeGFtcGxlXSgvZG9jcy9ub2RlanNfZXhhbXBsZS5tZCkKKiBTdXBw
b3J0IEZpbGVzCiAgKiBbV29ybGRdKC9kb2NzL3N1cHBvcnRfZmlsZXMvd29y
bGQubWQpCiAgKiBbU3RlcCBEZWZpbml0aW9uc10oL2RvY3Mvc3VwcG9ydF9m
aWxlcy9zdGVwX2RlZmluaXRpb25zLm1kKQogICogW0hvb2tzXSgvZG9jcy9z
dXBwb3J0X2ZpbGVzL2hvb2tzLm1kKQogICogW1RpbWVvdXRzXShkb2NzL3N1
cHBvcnRfZmlsZXMvdGltZW91dHMubWQpCiAgKiBbRGF0YSBUYWJsZSBJbnRl
cmZhY2VdKC9kb2NzL3N1cHBvcnRfZmlsZXMvZGF0YV90YWJsZV9pbnRlcmZh
Y2UubWQpCiAgKiBbQXR0YWNobWVudHNdKC9kb2NzL3N1cHBvcnRfZmlsZXMv
YXR0YWNobWVudHMubWQpCiAgKiBbQVBJIFJlZmVyZW5jZV0oL2RvY3Mvc3Vw
cG9ydF9maWxlcy9hcGlfcmVmZXJlbmNlLm1kKQoqIFtGQVFdKC9kb2NzL2Zh
cS5tZCkKCiMjIyMgRG9jdW1lbnRhdGlvbiBmb3Igb2xkZXIgdmVyc2lvbnMK
CiogW2A1LnhgXShodHRwczovL2dpdGh1Yi5jb20vY3VjdW1iZXIvY3VjdW1i
ZXItanMvdHJlZS81LngpCiogW2A0LnhgXShodHRwczovL2dpdGh1Yi5jb20v
Y3VjdW1iZXIvY3VjdW1iZXItanMvdHJlZS80LngpCiogW2AzLnhgXShodHRw
czovL2dpdGh1Yi5jb20vY3VjdW1iZXIvY3VjdW1iZXItanMvdHJlZS8zLngp
CiogW2AyLnhgXShodHRwczovL2dpdGh1Yi5jb20vY3VjdW1iZXIvY3VjdW1i
ZXItanMvdHJlZS8yLngpCiogW2AxLnhgXShodHRwczovL2dpdGh1Yi5jb20v
Y3VjdW1iZXIvY3VjdW1iZXItanMvdHJlZS8xLngpCg==
",,3730,"Y2FjaGU6CiAgZGlyZWN0b3JpZXM6CiAgICAtICRIT01FL25vZGVfbW9kdWxl
cwoKZGVwbG95OgogIC0gb246CiAgICAgIG5vZGU6ICIxMiIKICAgICAgdGFn
czogdHJ1ZQogICAgcHJvdmlkZXI6IHNjcmlwdAogICAgc2NyaXB0OiBzY3Jp
cHRzL2RlcGxveS5zaAogICAgc2tpcF9jbGVhbnVwOiB0cnVlCiAgLSBhcGlf
a2V5OiAiJE5QTV9BVVRIX1RPS0VOIgogICAgZW1haWw6ICJjaGFybGVzLncu
cnVkb2xwaEBnbWFpbC5jb20iCiAgICBvbjoKICAgICAgbm9kZTogIjEyIgog
ICAgICB0YWdzOiB0cnVlCiAgICBwcm92aWRlcjogbnBtCiAgICBza2lwX2Ns
ZWFudXA6IHRydWUKCmxhbmd1YWdlOiBub2RlX2pzCgpub3RpZmljYXRpb25z
OgogIGVtYWlsOiBmYWxzZQoKbWF0cml4OgogIGluY2x1ZGU6CiAgICAtIG5v
ZGVfanM6ICIxMiIKICAgICAgc2NyaXB0OiAieWFybiB0ZXN0LWNvdmVyYWdl
IgogICAgICBhZnRlcl9zdWNjZXNzOiAibnljIHJlcG9ydCAtLXJlcG9ydGVy
PXRleHQtbGNvdiB8IGNvdmVyYWxscyIKICAgIC0gbm9kZV9qczogIjEwIgog
ICAgICBzY3JpcHQ6ICJ5YXJuIHRlc3QiCiAgICAtIG5vZGVfanM6ICI4Igog
ICAgICBzY3JpcHQ6ICJ5YXJuIHRlc3QiCgpzdWRvOiBmYWxzZQo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'meltdown',116119704,"b'This repository contains several applications, demonstrating the Meltdown bug.'",b'C',4,3730,,158,False,b'https://api.github.com/repos/IAIK/meltdown/forks',"IyBNZWx0ZG93biBQcm9vZi1vZi1Db25jZXB0CgpUaGlzIHJlcG9zaXRvcnkg
Y29udGFpbnMgc2V2ZXJhbCBhcHBsaWNhdGlvbnMsIGRlbW9uc3RyYXRpbmcg
dGhlIFtNZWx0ZG93biBidWddKGh0dHBzOi8vbWVsdGRvd25hdHRhY2suY29t
KS4gRm9yIHRlY2huaWNhbCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgYnVnLCBy
ZWZlciB0byB0aGUgcGFwZXI6IAoKKiBbTWVsdGRvd25dKGh0dHBzOi8vbWVs
dGRvd25hdHRhY2suY29tL21lbHRkb3duLnBkZikgYnkgTGlwcCwgU2Nod2Fy
eiwgR3J1c3MsIFByZXNjaGVyLCBIYWFzLCBNYW5nYXJkLCBLb2NoZXIsIEdl
bmtpbiwgWWFyb20sIGFuZCBIYW1idXJnCgpUaGUgYXBwbGljYXRpb25zIGlu
IHRoaXMgcmVwb3NpdG9yeSBhcmUgYnVpbHQgd2l0aCBbbGlia2R1bXBdKGh0
dHBzOi8vZ2l0aHViLmNvbS9JQUlLL01lbHRkb3duL3RyZWUvbWFzdGVyL2xp
YmtkdW1wKSwgYSBsaWJyYXJ5IHdlIGRldmVsb3BlZCBmb3IgdGhlIHBhcGVy
LiBUaGlzIGxpYnJhcnkgc2ltcGxpZmllcyBleHBsb2l0YXRpb24gb2YgdGhl
IGJ1ZyBieSBhdXRvbWF0aWNhbGx5IGFkYXB0aW5nIHRvIGNlcnRhaW4gcHJv
cGVydGllcyBvZiB0aGUgZW52aXJvbm1lbnQuIAoKIyMgVmlkZW9zCgpUaGlz
IHJlcG9zaXRvcnkgY29udGFpbnMgc2V2ZXJhbCB2aWRlb3MgZGVtb25zdHJh
dGluZyBNZWx0ZG93bgoKICogW1ZpZGVvICMxXShodHRwczovL2Nkbi5yYXdn
aXQuY29tL0lBSUsvbWVsdGRvd24vbWFzdGVyL3ZpZGVvcy9zcHkubXA0KSBz
aG93cyBob3cgTWVsdGRvd24gY2FuIGJlIHVzZWQgdG8gc3B5IGluIHJlYWx0
aW1lIG9uIGEgcGFzc3dvcmQgaW5wdXQuIAogKiBbVmlkZW8gIzJdKGh0dHBz
Oi8vY2RuLnJhd2dpdC5jb20vSUFJSy9tZWx0ZG93bi9tYXN0ZXIvdmlkZW9z
L21lbWR1bXAubXA0KSBzaG93cyBob3cgTWVsdGRvd24gbGVha3MgcGh5c2lj
YWwgbWVtb3J5IGNvbnRlbnQuIAogKiBbVmlkZW8gIzNdKGh0dHBzOi8vY2Ru
LnJhd2dpdC5jb20vSUFJSy9tZWx0ZG93bi9tYXN0ZXIvdmlkZW9zL2NhdDEu
bXA0KSBzaG93cyBob3cgTWVsdGRvd24gcmVjb25zdHJ1Y3RzIGEgcGhvdG8g
ZnJvbSBtZW1vcnkuIAogKiBbVmlkZW8gIzRdKGh0dHBzOi8vY2RuLnJhd2dp
dC5jb20vSUFJSy9tZWx0ZG93bi9tYXN0ZXIvdmlkZW9zL2NhdDIubXA0KSBz
aG93cyBob3cgTWVsdGRvd24gcmVjb25zdHJ1Y3RzIGEgcGhvdG8gZnJvbSBt
ZW1vcnkgd2hpY2ggaXMgZW5jb2RlZCB3aXRoIHRoZSBGTElGIGZpbGUgZm9y
bWF0LiAKICogW1ZpZGVvICM1XShodHRwczovL2Nkbi5yYXdnaXQuY29tL0lB
SUsvbWVsdGRvd24vbWFzdGVyL3ZpZGVvcy91bmNhY2hlZC5tcDQpIHNob3dz
IGhvdyBNZWx0ZG93biBsZWFrcyB1bmNhY2hlZCBtZW1vcnkuIAoKIyMgRGVt
b3MKClRoaXMgcmVwb3NpdG9yeSBjb250YWlucyBmaXZlIGRlbW9zIHRvIGRl
bW9uc3RyYXRlIGRpZmZlcmVudCB1c2UgY2FzZXMuIEFsbCBkZW1vcyBhcmUg
dGVzdGVkIG9uIFVidW50dSAxNi4wNCB3aXRoIGFuIEludGVsIENvcmUgaTct
NjcwMEssIGJ1dCB0aGV5IHNob3VsZCB3b3JrIG9uIGFueSBMaW51eCBzeXN0
ZW0gd2l0aCBhbnkgbW9kZXJuIEludGVsIENQVSBzaW5jZSAyMDEwLiAKCkZv
ciBiZXN0IHJlc3VsdHMsIHdlIHJlY29tbWVuZCBhIGZhc3QgQ1BVIHRoYXQg
c3VwcG9ydHMgSW50ZWwgVFNYIChlLmcuIGFueSBJbnRlbCBDb3JlIGk3LTV4
eHgsIGk3LTZ4eHgsIG9yIGk3LTd4eHgpLiAKRnVydGhlcm1vcmUsIGV2ZXJ5
IGRlbW8gc2hvdWxkIGJlIHBpbm5lZCB0byBvbmUgQ1BVIGNvcmUsIGUuZy4g
d2l0aCB0YXNrc2V0LgoKIyMjIEJ1aWxkIGRlcGVuZGVuY3kgZm9yIGRlbW9z
CkFzIGEgcHJlLXJlcXVpc2l0ZSwgeW91IG5lZWQgdG8gaW5zdGFsbCBnbGli
Yy1zdGF0aWMgb24geW91ciBtYWNoaW5lLgoKRm9yIFJQTS1iYXNlZCBzeXN0
ZW1zOgpgYGAKc3VkbyB5dW0gaW5zdGFsbCAteSBnbGliYy1zdGF0aWMKYGBg
CgojIyMgRGVtbyAjMTogQSBmaXJzdCB0ZXN0IChgdGVzdGApCgpUaGlzIGlz
IHRoZSBtb3N0IGJhc2ljIGRlbW8uIEl0IHVzZXMgTWVsdGRvd24gdG8gcmVh
ZCBhY2Nlc3NpYmxlIGFkZHJlc3NlcyBmcm9tIHRoZSBvd24gYWRkcmVzcyBz
cGFjZSwgbm90IGJyZWFraW5nIGFueSBpc29sYXRpb24gbWVjaGFuaXNtcy4g
CgpJZiB0aGlzIGRlbW8gZG9lcyBub3Qgd29yayBmb3IgeW91LCB0aGUgcmVt
YWluaW5nIGRlbW9zIG1vc3QgbGlrZWx5IHdvbid0IHdvcmsgZWl0aGVyLiBU
aGUgcmVhc29ucyBhcmUgbWFuaWZvbGQsIGUuZy4sIHRoZSBDUFUgY291bGQg
YmUgdG9vIHNsb3csIG5vdCBzdXBwb3J0IG91dC1vZi1vcmRlciBleGVjdXRp
b24sIHRoZSBoaWdoLXJlc29sdXRpb24gdGltZXIgaXMgbm90IHByZWNpc2Ug
ZW5vdWdoIChlc3BlY2lhbGx5IGluIFZNcyksIHRoZSBvcGVyYXRpbmcgc3lz
dGVtIGRvZXMgbm90IHN1cHBvcnQgY3VzdG9tIHNpZ25hbCBoYW5kbGVycywg
ZXRjLgoKIyMjIyBCdWlsZCBhbmQgUnVuCgpgYGBiYXNoCm1ha2UKdGFza3Nl
dCAweDEgLi90ZXN0CmBgYAoKSWYgeW91IHNlZSBhbiBvdXRwdXQgc2ltaWxh
ciB0byB0aGlzCmBgYApFeHBlY3Q6IFdlbGNvbWUgdG8gdGhlIHdvbmRlcmZ1
bCB3b3JsZCBvZiBtaWNyb2FyY2hpdGVjdHVyYWwgYXR0YWNrcwogICBHb3Q6
IFdlbGNvbWUgdG8gdGhlIHdvbmRlcmZ1bCB3b3JsZCBvZiBtaWNyb2FyY2hp
dGVjdHVyYWwgYXR0YWNrcwpgYGAKdGhlbiB0aGUgYmFzaWMgZGVtbyB3b3Jr
cy4KCgojIyMgRGVtbyAjMjogQnJlYWtpbmcgS0FTTFIgKGBrYXNscmApCgpT
dGFydGluZyB3aXRoIExpbnV4IGtlcm5lbCA0LjEyLCBLQVNMUiAoS2VybmVs
IEFkZHJlc3MgU3BhY2UgTGF5b3V0IFJhbmRvbWl6YXRvbikgaXMgYWN0aXZl
IGJ5IGRlZmF1bHQuICBUaGlzIG1lYW5zLCB0aGF0IHRoZSBsb2NhdGlvbiBv
ZiB0aGUga2VybmVsIChhbmQgYWxzbyB0aGUgZGlyZWN0IHBoeXNpY2FsIG1h
cCB3aGljaCBtYXBzIHRoZSBlbnRpcmUgcGh5c2ljYWwgbWVtb3J5KSBjaGFu
Z2VzIHdpdGggZWFjaCByZWJvb3QuCgpUaGlzIGRlbW8gdXNlcyBNZWx0ZG93
biB0byBsZWFrIHRoZSAoc2VjcmV0KSByYW5kb21pemF0aW9uIG9mIHRoZSBk
aXJlY3QgcGh5c2ljYWwgbWFwLiBUaGlzIGRlbW8gcmVxdWlyZXMgcm9vdCBw
cml2aWxlZ2VzIHRvIHNwZWVkIHVwIHRoZSBwcm9jZXNzLiBUaGUgcGFwZXIg
ZGVzY3JpYmVzIGEgdmFyaWFudCB3aGljaCBkb2VzIG5vdCByZXF1aXJlIHJv
b3QgcHJpdmlsZWdlcy4gCgojIyMjIEJ1aWxkIGFuZCBSdW4KCmBgYGJhc2gK
bWFrZQpzdWRvIHRhc2tzZXQgMHgxIC4va2FzbHIKYGBgCgpBZnRlciBhIGZl
dyBzZWNvbmRzLCB5b3Ugc2hvdWxkIHNlZSBzb21ldGhpbmcgc2ltaWxhciB0
byB0aGlzCmBgYApbK10gRGlyZWN0IHBoeXNpY2FsIG1hcCBvZmZzZXQ6IDB4
ZmZmZjg4MDAwMDAwMDAwMApgYGAKCiMjIyBEZW1vICMzOiBSZWxpYWJpbGl0
eSB0ZXN0IChgcmVsaWFiaWxpdHlgKQoKVGhpcyBkZW1vIHRlc3RzIGhvdyBy
ZWxpYWJsZSBwaHlzaWNhbCBtZW1vcnkgY2FuIGJlIHJlYWQuIEZvciB0aGlz
IGRlbW8sIHlvdSBlaXRoZXIgbmVlZCB0aGUgZGlyZWN0IHBoeXNpY2FsIG1h
cCBvZmZzZXQgKGUuZy4gZnJvbSBkZW1vICMyKSBvciB5b3UgaGF2ZSB0byBk
aXNhYmxlIEtBU0xSIGJ5IHNwZWNpZnlpbmcgYG5va2FzbHJgIGluIHlvdXIg
a2VybmVsIGNvbW1hbmQgbGluZS4gCgojIyMjIEJ1aWxkIGFuZCBSdW4KCkJ1
aWxkIGFuZCBzdGFydCBgcmVsaWFiaWxpdHlgLiBJZiB5b3UgaGF2ZSBLQVNM
UiBlbmFibGVkLCB0aGUgZmlyc3QgcGFyYW1ldGVyIGlzIHRoZSBvZmZzZXQg
b2YgdGhlIGRpcmVjdCBwaHlzaWNhbCBtYXAuIE90aGVyd2lzZSwgdGhlIHBy
b2dyYW0gZG9lcyBub3QgcmVxdWlyZSBhIHBhcmFtZXRlci4gCmBgYGJhc2gK
bWFrZQpzdWRvIHRhc2tzZXQgMHgxIC4vcmVsaWFiaWxpdHkgMHhmZmZmODgw
MDAwMDAwMDAwCmBgYAoKQWZ0ZXIgYSBmZXcgc2Vjb25kcywgeW91IHNob3Vs
ZCBnZXQgYW4gb3V0cHV0IHNpbWlsYXIgdG8gdGhpczoKYGBgClstXSBTdWNj
ZXNzIHJhdGU6IDk5LjkzJSAocmVhZCAxMzU0IHZhbHVlcykKYGBgCgojIyMg
RGVtbyAjNDogUmVhZCBwaHlzaWNhbCBtZW1vcnkgKGBwaHlzaWNhbF9yZWFk
ZXJgKQoKVGhpcyBkZW1vIHJlYWRzIG1lbW9yeSBmcm9tIGEgZGlmZmVyZW50
IHByb2Nlc3MgYnkgZGlyZWN0bHkgcmVhZGluZyBwaHlzaWNhbCBtZW1vcnku
IEZvciB0aGlzIGRlbW8sIHlvdSBlaXRoZXIgbmVlZCB0aGUgZGlyZWN0IHBo
eXNpY2FsIG1hcCBvZmZzZXQgKGUuZy4gZnJvbSBkZW1vICMyKSBvciB5b3Ug
aGF2ZSB0byBkaXNhYmxlIEtBU0xSIGJ5IHNwZWNpZnlpbmcgYG5va2FzbHJg
IGluIHlvdXIga2VybmVsIGNvbW1hbmQgbGluZS4gCgpJbiBwcmluY2lwYWws
IHRoaXMgcHJvZ3JhbSBjYW4gcmVhZCBhcmJpdHJhcnkgcGh5c2ljYWwgYWRk
cmVzc2VzLiBIb3dldmVyLCBhcyB0aGUgcGh5c2ljYWwgbWVtb3J5IGNvbnRh
aW5zIGEgbG90IG9mIG5vbi1odW1hbi1yZWFkYWJsZSBkYXRhLCB3ZSBwcm92
aWRlIGEgdGVzdCB0b29sIChgc2VjcmV0YCksIHdoaWNoIHB1dHMgYSBodW1h
bi1yZWFkYWJsZSBzdHJpbmcgaW50byBtZW1vcnkgYW5kIGRpcmVjdGx5IHBy
b3ZpZGVzIHRoZSBwaHlzaWNhbCBhZGRyZXNzIG9mIHRoaXMgc3RyaW5nLiAK
CiMjIyMgQnVpbGQgYW5kIFJ1bgoKRm9yIHRoZSBkZW1vLCBmaXJzdCBydW4g
YHNlY3JldGAgKGFzIHJvb3QpIHRvIGdldCB0aGUgcGh5c2ljYWwgYWRkcmVz
cyBvZiBhIGh1bWFuLXJlYWRhYmxlIHN0cmluZzoKYGBgYmFzaAptYWtlCnN1
ZG8gLi9zZWNyZXQKYGBgCgpJdCBzaG91bGQgb3V0cHV0IHNvbWV0aGluZyBs
aWtlIHRoaXM6CmBgYApbK10gU2VjcmV0OiBJZiB5b3UgY2FuIHJlYWQgdGhp
cywgdGhpcyBpcyByZWFsbHkgYmFkClsrXSBQaHlzaWNhbCBhZGRyZXNzIG9m
IHNlY3JldDogMHgzOTBmZmY0MDAKWytdIEV4aXQgd2l0aCBDdHJsK0MgaWYg
eW91IGFyZSBkb25lIHJlYWRpbmcgdGhlIHNlY3JldApgYGAKCldoaWxlIHRo
ZSBgc2VjcmV0YCBwcm9ncmFtIGlzIHJ1bm5pbmcsIHN0YXJ0IGBwaHlzaWNh
bF9yZWFkZXJgLiBUaGUgZmlyc3QgcGFyYW1ldGVyIGlzIHRoZSBwaHlzaWNh
bCBhZGRyZXNzIHByaW50ZWQgYnkgYHNlY3JldGAuIElmIHlvdSBkbyBub3Qg
aGF2ZSBLQVNMUiBkaXNhYmxlZCwgIHRoZSBzZWNvbmQgcGFyYW1ldGVyIGlz
IHRoZSBvZmZzZXQgb2YgdGhlIGRpcmVjdCBwaHlzaWNhbCBtYXAuCmBgYGJh
c2gKdGFza3NldCAweDEgLi9waHlzaWNhbF9yZWFkZXIgMHgzOTBmZmY0MDAg
MHhmZmZmODgwMDAwMDAwMDAwCmBgYAoKQWZ0ZXIgYSBmZXcgc2Vjb25kcywg
eW91IHNob3VsZCBnZXQgYW4gb3V0cHV0IHNpbWlsYXIgdG8gdGhpczoKYGBg
ClsrXSBQaHlzaWNhbCBhZGRyZXNzICAgICAgIDogMHgzOTBmZmY0MDAKWytd
IFBoeXNpY2FsIG9mZnNldCAgICAgICAgOiAweGZmZmY4ODAwMDAwMDAwMDAK
WytdIFJlYWRpbmcgdmlydHVhbCBhZGRyZXNzOiAweGZmZmY4ODAzOTBmZmY0
MDAKCklmIHlvdSBjYW4gcmVhZCB0aGlzLCB0aGlzIGlzIHJlYWxseSBiYWQK
YGBgCgoKIyMjIERlbW8gIzU6IER1bXAgdGhlIG1lbW9yeSAoYG1lbWR1bXBg
KQoKVGhpcyBkZW1vIGR1bXBzIHRoZSBjb250ZW50IG9mIHRoZSBtZW1vcnku
IEFzIGRlbW8gIzMgYW5kICM0LCBpdCB1c2VzIHRoZSBkaXJlY3QgcGh5c2lj
YWwgbWFwLCB0byBkdW1wIHRoZSBjb250ZW50cyBvZiB0aGUgcGh5c2ljYWwg
bWVtb3J5IGluIGEgaGV4ZHVtcC1saWtlIGZvcm1hdC4gCgpBZ2FpbiwgYXMg
dGhlIHBoeXNpY2FsIG1lbW9yeSBjb250YWlucyBhIGxvdCBvZiBub24taHVt
YW4tcmVhZGFibGUgY29udGVudCwgd2UgcHJvdmlkZSBhIHRlc3QgdG9vbCB0
byBmaWxsIGxhcmdlIGFtb3VudHMgb2YgdGhlIHBoeXNpY2FsIG1lbW9yeSB3
aXRoIGh1bWFuLXJlYWRhYmxlIHN0cmluZ3MuIAoKIyMjIyBCdWlsZCBhbmQg
UnVuCgpGb3IgdGhlIGRlbW8sIGZpcnN0IHJ1biBgbWVtb3J5X2ZpbGxlcmAg
dG8gZmlsbCB0aGUgbWVtb3J5IHdpdGggaHVtYW4tcmVhZGFibGUgc3RyaW5n
cy4gVGhlIGZpcnN0IGFyZ3VtZW50IGlzIHRoZSBhbW91bnQgb2YgbWVtb3J5
IChpbiBnaWdhYnl0ZXMpIHRvIGZpbGwuIApgYGBiYXNoCm1ha2UKLi9tZW1v
cnlfZmlsbGVyIDkKYGBgCgpUaGVuLCBydW4gdGhlIGBtZW1kdW1wYCB0b29s
IHRvIGR1bXAgbWVtb3J5IGNvbnRlbnRzLiBJZiB5b3UgZXhlY3V0ZWQgYG1l
bW9yeV9maWxsZXJgIGJlZm9yZSwgeW91IHNob3VsZCBzZWUgc29tZSBzdHJp
bmcgZnJhZ21lbnRzLiAKSWYgeW91IGhhdmUgRmlyZWZveCBvciBDaHJvbWUg
d2l0aCBtdWx0aXBsZSB0YWJzIHJ1bm5pbmcsIHlvdSBtaWdodCBhbHNvIHNl
ZSBwYXJ0cyBvZiB0aGUgd2Vic2l0ZXMgd2hpY2ggYXJlIG9wZW4gb3Igd2Vy
ZSByZWNlbnRseSBjbG9zZWQuIAoKVGhlIGZpcnN0IHBhcmFtZXRlciBpcyB0
aGUgcGh5c2ljYWwgYWRkcmVzcyBhdCB3aGljaCB0aGUgZHVtcCBzaG91bGQg
YmVnaW4gKGxlYXZlIGVtcHR5IHRvIHN0YXJ0IGF0IHRoZSBmaXJzdCBnaWdh
Ynl0ZSkuIFRoZSBzZWNvbmQgcGFyYW1ldGVyIGlzIHRoZSBhbW91bnQgb2Yg
Ynl0ZXMgeW91IHdhbnQgdG8gYmUgcmVhZCwgdG8gcmVhZCBpdCBhbGwgZ2l2
ZSAtMS4gSWYgeW91IGRvIG5vdCBoYXZlIEtBU0xSIGRpc2FibGVkLCAgdGhl
IHRoaXJkIHBhcmFtZXRlciBpcyB0aGUgb2Zmc2V0IG9mIHRoZSBkaXJlY3Qg
cGh5c2ljYWwgbWFwLgoKYGBgYmFzaAp0YXNrc2V0IDB4MSAuL21lbWR1bXAg
MHgyNDAwMDAwMDAgLTEgMHhmZmZmODgwMDAwMDAwMDAwICMgc3RhcnQgYXQg
OSBHQgpgYGAKCllvdSBzaG91bGQgZ2V0IGEgaGV4ZHVtcCBvZiBwYXJ0cyBv
ZiB0aGUgbWVtb3J5IChwb3RlbnRpYWxseSBldmVuIGNvbnRhaW5pbmcgc2Vj
cmV0cyBzdWNoIGFzIHBhc3N3b3Jkcywgc2VlIGV4YW1wbGUgaW4gdGhlIHBh
cGVyKSwgZS5nLjoKCmBgYAogMjQwMDAxYzlmOiB8IDAwIDZkIDAwIDAwIDAw
IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIHwgLm0uLi4uLi4u
Li4uLi4uLiB8CiAyNDAwMDI2MmY6IHwgMDAgN2QgMDAgMDAgMDAgMDAgMDAg
MDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgMDAgfCAufS4uLi4uLi4uLi4uLi4u
IHwKIDI0MDAwMjcxZjogfCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAw
MCAwMCAwMCA2NSA2ZSAyMCA3NSB8IC4uLi4uLi4uLi4uLmVuIHUgfAogMjQw
MDAyNzJmOiB8IDczIDY1IDcyIDIwIDczIDcwIDYxIDYzIDY1IDIwIDYxIDZl
IDY0IDIwIDZiIDY1IHwgc2VyIHNwYWNlIGFuZCBrZSB8CiAyNDAwMDI3M2Y6
IHwgNzIgNmUgNjUgNmMgNTcgNjUgNmMgNjMgNmYgNmQgNjUgMjAgNzQgNmYg
MjAgNzQgfCBybmVsV2VsY29tZSB0byB0IHwKIDI0MDAwMjk4ZjogfCAwMCA2
MSA3MiA3OSAyMCA2MiA2NSA3NCA3NyA2NSA2NSA2ZSAyMCA3NSA3MyA2NSB8
IC5hcnkgYmV0d2VlbiB1c2UgfAogMjQwMDAyOTlmOiB8IDcyIDIwIDczIDcw
IDYxIDYzIDY1IDIwIDYxIDZlIDY0IDIwIDZiIDY1IDcyIDZlIHwgciBzcGFj
ZSBhbmQga2VybiB8CiAyNDAwMDI5YWY6IHwgNjUgNmMgNDIgNzUgNzIgNmUg
MjAgNjEgNjYgNzQgNjUgNzIgMjAgNzIgNjUgNjEgfCBlbEJ1cm4gYWZ0ZXIg
cmVhIHwKIDI0MDAwMjliZjogfCA2NCA2OSA2ZSA2NyAyMCA3NCA2OCA2OSA3
MyAyMCA3MyA3NCA3MiA2OSA2ZSA2NyB8IGRpbmcgdGhpcyBzdHJpbmcgfAog
MjQwMDAyZGNmOiB8IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAw
IDAwIDAwIDAwIDAwIGM4IHwgLi4uLi4uLi4uLi4uLi4uLiB8CiAyNDAwMDM4
YWY6IHwgNmEgNzUgNzMgNzQgMjAgNzMgNzAgNjkgNjUgNjQgMjAgNmYgNmUg
MjAgNjEgMDAgfCBqdXN0IHNwaWVkIG9uIGEuIHwKIDI0MDAwM2M4ZjogfCAw
MCAwMCAxZSAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAw
MCB8IC4uLi4uLi4uLi4uLi4uLi4gfAogMjQwMDA0MTJmOiB8IDAwIDAwIDAw
IDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDAwIDY1IDc0IDczIDJlIHwgLi4u
Li4uLi4uLi4uZXRzLiB8CiAyNDAwMDQxM2Y6IHwgMmUgMmUgNTcgNjUgNmMg
NjMgNmYgNmQgNjUgMjAgNzQgNmYgMjAgNzQgNjggNjUgfCAuLldlbGNvbWUg
dG8gdGhlIHwKIDI0MDAwNDJmZjogfCAwMCAwMCAwMCAwMCAwMCAwMCAwMCAw
MCAwMCA2ZSA2NyA3MiA2MSA3NCA3NSA2YyB8IC4uLi4uLi4uLm5ncmF0dWwg
fAogMjQwMDA0MzBmOiB8IDYxIDc0IDY5IDZmIDZlIDczIDJjIDIwIDc5IDZm
IDc1IDIwIDZhIDc1IDczIDc0IHwgYXRpb25zLCB5b3UganVzdCB8CiAyNDAw
MDQzMWY6IHwgMjAgNzMgNzAgNjkgNjUgNjQgMjAgNmYgNmUgMjAgNjEgNmUg
MjAgNjEgNzAgNzAgfCAgc3BpZWQgb24gYW4gYXBwIHwKYGBgCgojIyBGcmVx
dWVudGx5IEFza2VkIFF1ZXN0aW9ucwoKKiAqKkRvZXMgaXQgd29yayBvbiBX
aW5kb3dzIC8gVWJ1bnR1IG9uIFdpbmRvd3MgKFdTTCkgLyBNYWMgT1M/KioK
CiAgICBOby4gVGhpcyBQb0Mgb25seSB3b3JrcyBvbiBMaW51eCwgYXMgaXQg
dXNlcyBwcm9wZXJ0aWVzIHNwZWNpZmljIHRvIHRoZSBMaW51eCBrZXJuZWws
IHN1Y2ggYXMgdGhlIGRpcmVjdCBwaHlzaWNhbCBtYXAuIAoKKiAqKkNhbiBJ
IHJ1biB0aGUgUG9DIGluIGEgdmlydHVhbCBtYWNoaW5lPyoqCgogICAgWWVz
LCB0aGUgUG9DIGFsc28gd29ya3Mgb24gdmlydHVhbCBtYWNoaW5lcy4gSG93
ZXZlciwgZHVlIHRvIHRoZSBhZGRpdGlvbmFsIGxheWVyIGludHJvZHVjZWQg
YnkgYSB2aXJ0dWFsIG1hY2hpbmUsIGl0IG1pZ2h0IG5vdCB3b3JrIGFzIGdv
b2QgYXMgb24gbmF0aXZlIGhhcmR3YXJlLiAKCiogKipUaGUgS0FTTFIgcHJv
Z3JhbSAoYGthc2xyYCkgZG9lcyBub3QgZmluZCB0aGUgb2Zmc2V0ISoqCgog
ICAgVGhlIGBrYXNscmAgdG9vbCBvbmx5IGRvZXMgdmVyeSBmZXcgbWVhc3Vy
ZW1lbnRzIHRvIGJlIGZhc3QuIElmIGl0IGRvZXMgbm90IGZpbmQgdGhlIG9m
ZnNldCwgdGhlcmUgYXJlIHR3byBwb3NzaWJpbGl0aWVzOgogICAgCiAgICAq
IGNoYW5nZSB0aGUgbnVtYmVyIG9mIHJldHJpZXMgaW4gYGthc2xyLmNgOiBg
Y29uZmlnLnJldHJpZXMgPSAxMDAwO2AKICAgICogdXNlIHRoZSBrZXJuZWwg
bW9kdWxlIGluIGBrYXNscl9vZmZzZXRgIHRvIGRpcmVjdGx5IHJlYWQgdGhl
IG9mZnNldCBmcm9tIHRoZSBrZXJuZWwuIEluc3RhbGwgdGhlIGtlcm5lbCBo
ZWFkZXJzIGZvciB5b3VyIGtlcm5lbCAoYGBgc3VkbyBhcHQtZ2V0IGluc3Rh
bGwgbGludXgtaGVhZGVycy1gdW5hbWUgLXJgIGBgYCkgYW5kIHJ1biBgc3Vk
byAuL2RpcmVjdF9waHlzaWNhbF9tYXAuc2hgCgoqICoqWW91IHNhaWQgaXQg
d29ya3Mgb24gdW5jYWNoZWQgbWVtb3J5LCBidXQgYWxsIHlvdXIgZGVtb3Mg
ZW5zdXJlIHRoYXQgdGhlIG1lbW9yeSBpcyBjYWNoZWQhKioKCiAgICBNYWtp
bmcgaXQgd29yayBvbiB1bmNhY2hlZCBtZW1vcnkgaXMgdHJpY2tpZXIsIGFu
ZCBvZnRlbiByZXF1aXJlcyBhIGJpdCBvZiB0d2Vha2luZyBvZiB0aGUgcGFy
YW1ldGVycy4gVGh1cywgd2UgZW5zdXJlIHRoYXQgdGhlIG1lbW9yeSBpcyBj
YWNoZWQgaW4gdGhlIFBvQyB0byBtYWtlIGl0IGVhc2llciB0byByZXByb2R1
Y2UuIEhvd2V2ZXIsIHlvdSBjYW4gc2ltcGx5IHJlbW92ZSB0aGUgY29kZSB0
aGF0IGNhY2hlcyB0aGUgdmFsdWVzIGFuZCByZXBsYWNlIGl0IGJ5IGEgYGNs
Zmx1c2hgIHRvIHRlc3QgdGhlIGV4cGxvaXQgb24gdW5jYWNoZWQgbWVtb3J5
IChzZWUgVmlkZW8gIzUgZm9yIGFuIGV4YW1wbGUpLgogICAgQWx0aG91Z2gg
bm90IGluIHRoZSBvcmlnaW5hbCBibG9nIHBvc3QgYnkgR29vZ2xlLCB0aGlz
IHdhcyBhbHNvIGNvbmZpcm1lZCBieSBpbmRlcGVuZGVudCByZXNlYXJjaGVy
cyAoZS5nLiBbQWxleCBJb25lc2N1XShodHRwczovL3R3aXR0ZXIuY29tL2Fp
b25lc2N1L3N0YXR1cy85NTEyNjE0NzAzNDMzNjA1MTMpLCBbUmFwaGFlbCBD
YXJ2YWxob10oaHR0cHM6Ly90d2l0dGVyLmNvbS9yYXBoYWVsX3NjYXJ2L3N0
YXR1cy85NTIwNzgxNDAwMjg5NjQ4NjQpLCBbUGF2ZWwgQm9sZGluXShodHRw
czovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PUVNQkdYc3dKQzRzKSkuCgoq
ICoqSXQganVzdCBkb2VzIG5vdCB3b3JrIG9uIG15IGNvbXB1dGVyLCB3aGF0
IGNhbiBJIGRvPyoqCgogICAgVGhlcmUgY2FuIGJlIGEgbG90IG9mIGRpZmZl
cmVudCByZWFzb25zIGZvciB0aGF0LiBXZSBjb2xsZWN0ZWQgYSBmZXcgdGhp
bmdzIHlvdSBjYW4gdHJ5OgogICAgCiAgICAqIEVuc3VyZSB0aGF0IHlvdXIg
Q1BVIGZyZXF1ZW5jeSBpcyBhdCB0aGUgbWF4aW11bSwgYW5kIGZyZXF1ZW5j
eSBzY2FsaW5nIGlzIGRpc2FibGVkLgogICAgKiBJZiB5b3UgcnVuIGl0IG9u
IGEgbW9iaWxlIGRldmljZSAoZS5nLiwgYSBsYXB0b3ApLCBlbnN1cmUgdGhh
dCBpdCBpcyBwbHVnZ2VkIGluIHRvIGdldCB0aGUgYmVzdCBwZXJmb3JtYW5j
ZS4KICAgICogVHJ5IHRvIHBpbiB0aGUgdG9vbHMgdG8gYSBzcGVjaWZpYyBD
UFUgY29yZSAoZS5nLiB3aXRoIHRhc2tzZXQpLiBBbHNvIHRyeSBkaWZmZXJl
bnQgY29yZXMgYW5kIGNvcmUgY29tYmluYXRpb25zLgogICAgKiBWYXJ5IHRo
ZSBsb2FkIG9uIHlvdXIgY29tcHV0ZXIuIE9uIHNvbWUgbWFjaGluZXMgaXQg
d29ya3MgYmV0dGVyIGlmIHRoZSBsb2FkIGlzIGhpZ2hlciwgb24gb3RoZXJz
IGl0IHdvcmtzIGJldHRlciBpZiB0aGUgbG9hZCBpcyBsb3dlci4KICAgICog
VHJ5IHRvIGRpc2FibGUgaHlwZXJ0aHJlYWRpbmcgaW4gdGhlIEJJT1MuIE9u
IHNvbWUgY29tcHV0ZXJzIGl0IHdvcmtzIGEgbG90IGJldHRlciBpZiBoeXBl
cnRocmVhZGluZyBpcyBkaXNhYmxlZC4KICAgICogVXNlIGEgZGlmZmVyZW50
IHZhcmlhbnQgb2YgTWVsdGRvd24uIFRoaXMgY2FuIGJlIGNoYW5nZWQgaW4g
YGxpYmtkdW1wL2xpYmtkdW1wLmNgIGluIHRoZSBsaW5lIGAjZGVmaW5lIE1F
TFRET1dOIG1lbHRkb3duX25vbnVsbGAuIFRyeSBmb3IgZXhhbXBsZSBgbWVs
dGRvd25gIGluc3RlYWQgb2YgYG1lbHRkb3duX25vbnVsbGAsIHdoaWNoIHdv
cmtzIGEgbG90IGJldHRlciBvbiBzb21lIG1hY2hpbmVzIChidXQgbm90IGF0
IGFsbCBvbiBvdGhlcnMpLiAKICAgICogVHJ5IHRvIGNyZWF0ZSBtYW55IGlu
dGVycnVwdHMsIGUuZy4gYnkgcnVubmluZyB0aGUgdG9vbCBgc3RyZXNzYCB3
aXRoIGBzdHJlc3MgLWkgMmAgKG9yIG90aGVyIHZhbHVlcyBmb3IgdGhlIGBp
YCBwYXJhbWV0ZXIsIGRlcGVuZGluZyBvbiB0aGUgbnVtYmVyIG9mIGNvcmVz
KS4KICAgICogVHJ5IHRvIHJlc3RhcnQgdGhlIGRlbW9zIGFuZCBhbHNvIHlv
dXIgY29tcHV0ZXIuIEVzcGVjaWFsbHkgYWZ0ZXIgYSBzdGFuZGJ5LCB0aGUg
dGltaW5nIGFyZSBicm9rZW4gb24gc29tZSBjb21wdXRlcnMuIAogICAgKiBQ
bGF5IGFyb3VuZCB3aXRoIHRoZSBwYXJhbWV0ZXJzIG9mIGxpYmtkdW1wLCBl
LmcuIGluY3JlYXNlIHRoZSBudW1iZXIgb2YgcmV0cmllcyBhbmQvb3IgbWVh
c3VyZW1lbnRzLiAKCgojIyBXYXJuaW5ncwoqKldhcm5pbmcgIzEqKjogV2Ug
YXJlIHByb3ZpZGluZyB0aGlzIGNvZGUgYXMtaXMuIFlvdSBhcmUgcmVzcG9u
c2libGUgZm9yIHByb3RlY3RpbmcgeW91cnNlbGYsIHlvdXIgcHJvcGVydHkg
YW5kIGRhdGEsIGFuZCBvdGhlcnMgZnJvbSBhbnkgcmlza3MgY2F1c2VkIGJ5
IHRoaXMgY29kZS4gVGhpcyBjb2RlIG1heSBjYXVzZSB1bmV4cGVjdGVkIGFu
ZCB1bmRlc2lyYWJsZSBiZWhhdmlvciB0byBvY2N1ciBvbiB5b3VyIG1hY2hp
bmUuIFRoaXMgY29kZSBtYXkgbm90IGRldGVjdCB0aGUgdnVsbmVyYWJpbGl0
eSBvbiB5b3VyIG1hY2hpbmUuCgoqKldhcm5pbmcgIzIqKjogSWYgeW91IGZp
bmQgdGhhdCBhIGNvbXB1dGVyIGlzIHN1c2NlcHRpYmxlIHRvIHRoZSBNZWx0
ZG93biBidWcsIHlvdSBtYXkgd2FudCB0byBhdm9pZCB1c2luZyBpdCBhcyBh
IG11bHRpLXVzZXIgc3lzdGVtLiBNZWx0ZG93biBicmVhY2hlcyB0aGUgQ1BV
J3MgbWVtb3J5IHByb3RlY3Rpb24uIE9uIGEgbWFjaGluZSB0aGF0IGlzIHN1
c2NlcHRpYmxlIHRvIHRoZSBNZWx0ZG93biBidWcsIG9uZSBwcm9jZXNzIGNh
biByZWFkIGFsbCBwYWdlcyB1c2VkIGJ5IG90aGVyIHByb2Nlc3NlcyBvciBi
eSB0aGUga2VybmVsLgoKKipXYXJuaW5nICMzKio6IFRoaXMgY29kZSBpcyBv
bmx5IGZvciB0ZXN0aW5nIHB1cnBvc2VzLiBEbyBub3QgcnVuIGl0IG9uIGFu
eSBwcm9kdWN0aXZlIHN5c3RlbXMuIERvIG5vdCBydW4gaXQgb24gYW55IHN5
c3RlbSB0aGF0IG1pZ2h0IGJlIHVzZWQgYnkgYW5vdGhlciBwZXJzb24gb3Ig
ZW50aXR5Lgo=
",,3730,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'echo',12025365,b'Lazy-loading images with data-* attributes',b'JavaScript',46,3729,,122,False,b'https://api.github.com/repos/toddmotto/echo/forks',"IyBFY2hvLmpzIFshW0J1aWxkIFN0YXR1c10oaHR0cHM6Ly90cmF2aXMtY2ku
b3JnL3RvZGRtb3R0by9lY2hvLnN2ZyldKGh0dHBzOi8vdHJhdmlzLWNpLm9y
Zy90b2RkbW90dG8vZWNobykKCkVjaG8gaXMgYSBzdGFuZGFsb25lIEphdmFT
Y3JpcHQgbGF6eS1sb2FkaW5nIGltYWdlIG1pY3JvLWxpYnJhcnkuIEVjaG8g
aXMgZmFzdCwgMktCLCBhbmQgdXNlcyBIVE1MNSBkYXRhLSogYXR0cmlidXRl
cyBmb3Igc2ltcGxlLiBDaGVjayBvdXQgYSBbZGVtb10oaHR0cDovL3RvZGRt
b3R0by5jb20vbGFicy9lY2hvKS4gRWNobyB3b3JrcyBpbiBJRTgrLgoKYGBg
CmJvd2VyIGluc3RhbGwgZWNob2pzCm5wbSBpbnN0YWxsIGVjaG8tanMKYGBg
CgpVc2luZyBFY2hvLmpzIGlzIHNpbXBsZSwgdG8gYWRkIGFuIGltYWdlIGRp
cmVjdGx5IGludG8gdGhlIHBhZ2Ugc2ltcGx5IGFkZCBhIGBkYXRhLWVjaG9g
IGF0dHJpYnV0ZSB0byB0aGUgaW1nIHRhZy4gQWx0ZXJuYXRpdmVseSBpZiB5
b3Ugd2FudCB0byB1c2UgRWNobyB0byBsYXp5IGxvYWQgYmFja2dyb3VuZCBp
bWFnZXMgc2ltcGx5IGFkZCBhIGBkYXRhLWVjaG8tYmFja2dyb3VuZCcgYXR0
cmlidXRlIHRvIHRoZSBlbGVtZW50IHdpdGggdGhlIGltYWdlIFVSTC4KCmBg
YGh0bWwKPGJvZHk+CgogIDxpbWcgc3JjPSJpbWcvYmxhbmsuZ2lmIiBhbHQ9
IlBob3RvIiBkYXRhLWVjaG89ImltZy9waG90by5qcGciPgoKICA8c2NyaXB0
IHNyYz0iZGlzdC9lY2hvLmpzIj48L3NjcmlwdD4KICA8c2NyaXB0PgogIGVj
aG8uaW5pdCh7CiAgICBvZmZzZXQ6IDEwMCwKICAgIHRocm90dGxlOiAyNTAs
CiAgICB1bmxvYWQ6IGZhbHNlLAogICAgY2FsbGJhY2s6IGZ1bmN0aW9uIChl
bGVtZW50LCBvcCkgewogICAgICBjb25zb2xlLmxvZyhlbGVtZW50LCAnaGFz
IGJlZW4nLCBvcCArICdlZCcpCiAgICB9CiAgfSk7CgogIC8vIGVjaG8ucmVu
ZGVyKCk7IGlzIGFsc28gYXZhaWxhYmxlIGZvciBub24tc2Nyb2xsIGNhbGxi
YWNrcwogIDwvc2NyaXB0Pgo8L2JvZHk+CmBgYAoKIyMgLmluaXQoKSAob3B0
aW9ucykKClRoZSBgaW5pdCgpYCBBUEkgdGFrZXMgYSBmZXcgb3B0aW9ucwoK
IyMjIyBvZmZzZXQKVHlwZTogYE51bWJlcnxTdHJpbmdgIERlZmF1bHQ6IGAw
YAoKVGhlIGBvZmZzZXRgIG9wdGlvbiBhbGxvd3MgeW91IHRvIHNwZWNpZnkg
aG93IGZhciBiZWxvdywgYWJvdmUsIHRvIHRoZSBsZWZ0LCBhbmQgdG8gdGhl
IHJpZ2h0IG9mIHRoZSB2aWV3cG9ydCB5b3Ugd2FudCBFY2hvIHRvIF9iZWdp
bl8gbG9hZGluZyB5b3VyIGltYWdlcy4gSWYgeW91IHNwZWNpZnkgYDBgLCBF
Y2hvIHdpbGwgbG9hZCB5b3VyIGltYWdlIGFzIHNvb24gYXMgaXQgaXMgdmlz
aWJsZSBpbiB0aGUgdmlld3BvcnQsIGlmIHlvdSB3YW50IHRvIGxvYWQgXzEw
MDBweF8gYmVsb3cgb3IgYWJvdmUgdGhlIHZpZXdwb3J0LCB1c2UgYDEwMDBg
LgoKIyMjIyBvZmZzZXRWZXJ0aWNhbApUeXBlOiBgTnVtYmVyfFN0cmluZ2Ag
RGVmYXVsdDogYG9mZnNldGAncyB2YWx1ZQoKVGhlIGBvZmZzZXRWZXJ0aWNh
bGAgb3B0aW9uIGFsbG93cyB5b3UgdG8gc3BlY2lmeSBob3cgZmFyIGFib3Zl
IGFuZCBiZWxvdyB0aGUgdmlld3BvcnQgeW91IHdhbnQgRWNobyB0byBfYmVn
aW5fIGxvYWRpbmcgeW91ciBpbWFnZXMuCgojIyMjIG9mZnNldEhvcml6b250
YWwKVHlwZTogYE51bWJlcnxTdHJpbmdgIERlZmF1bHQ6IGBvZmZzZXRgJ3Mg
dmFsdWUKClRoZSBgb2Zmc2V0SG9yaXpvbnRhbGAgb3B0aW9uIGFsbG93cyB5
b3UgdG8gc3BlY2lmeSBob3cgZmFyIHRvIHRoZSBsZWZ0IGFuZCByaWdodCBv
ZiB0aGUgdmlld3BvcnQgeW91IHdhbnQgRWNobyB0byBfYmVnaW5fIGxvYWRp
bmcgeW91ciBpbWFnZXMuCgojIyMjIG9mZnNldFRvcApUeXBlOiBgTnVtYmVy
fFN0cmluZ2AgRGVmYXVsdDogYG9mZnNldFZlcnRpY2FsYCdzIHZhbHVlCgpU
aGUgYG9mZnNldFRvcGAgb3B0aW9uIGFsbG93cyB5b3UgdG8gc3BlY2lmeSBo
b3cgZmFyIGFib3ZlIHRoZSB2aWV3cG9ydCB5b3Ugd2FudCBFY2hvIHRvIF9i
ZWdpbl8gbG9hZGluZyB5b3VyIGltYWdlcy4KCiMjIyMgb2Zmc2V0Qm90dG9t
ClR5cGU6IGBOdW1iZXJ8U3RyaW5nYCBEZWZhdWx0OiBgb2Zmc2V0VmVydGlj
YWxgJ3MgdmFsdWUKClRoZSBgb2Zmc2V0Qm90dG9tYCBvcHRpb24gYWxsb3dz
IHlvdSB0byBzcGVjaWZ5IGhvdyBmYXIgYmVsb3cgdGhlIHZpZXdwb3J0IHlv
dSB3YW50IEVjaG8gdG8gX2JlZ2luXyBsb2FkaW5nIHlvdXIgaW1hZ2VzLgoK
IyMjIyBvZmZzZXRMZWZ0ClR5cGU6IGBOdW1iZXJ8U3RyaW5nYCBEZWZhdWx0
OiBgb2Zmc2V0VmVydGljYWxgJ3MgdmFsdWUKClRoZSBgb2Zmc2V0TGVmdGAg
b3B0aW9uIGFsbG93cyB5b3UgdG8gc3BlY2lmeSBob3cgZmFyIHRvIGxlZnQg
b2YgdGhlIHZpZXdwb3J0IHlvdSB3YW50IEVjaG8gdG8gX2JlZ2luXyBsb2Fk
aW5nIHlvdXIgaW1hZ2VzLgoKIyMjIyBvZmZzZXRSaWdodApUeXBlOiBgTnVt
YmVyfFN0cmluZ2AgRGVmYXVsdDogYG9mZnNldFZlcnRpY2FsYCdzIHZhbHVl
CgpUaGUgYG9mZnNldFJpZ2h0YCBvcHRpb24gYWxsb3dzIHlvdSB0byBzcGVj
aWZ5IGhvdyBmYXIgdG8gdGhlIHJpZ2h0IG9mIHRoZSB2aWV3cG9ydCB5b3Ug
d2FudCBFY2hvIHRvIF9iZWdpbl8gbG9hZGluZyB5b3VyIGltYWdlcy4KCiMj
IyMgdGhyb3R0bGUKVHlwZTogYE51bWJlcnxTdHJpbmdgIERlZmF1bHQ6IGAy
NTBgCgpUaGUgdGhyb3R0bGUgaXMgbWFuYWdlZCBieSBhbiBpbnRlcm5hbCBm
dW5jdGlvbiB0aGF0IHByZXZlbnRzIHBlcmZvcm1hbmNlIGlzc3VlcyBmcm9t
IGNvbnRpbnVvdXMgZmlyaW5nIG9mIGB3aW5kb3cub25zY3JvbGxgIGV2ZW50
cy4gVXNpbmcgYSB0aHJvdHRsZSB3aWxsIHNldCBhIHNtYWxsIHRpbWVvdXQg
d2hlbiB0aGUgdXNlciBzY3JvbGxzIGFuZCB3aWxsIGtlZXAgdGhyb3R0bGlu
ZyB1bnRpbCB0aGUgdXNlciBzdG9wcy4gVGhlIGRlZmF1bHQgaXMgYDI1MGAg
bWlsbGlzZWNvbmRzLgoKIyMjIyBkZWJvdW5jZQpUeXBlOiBgQm9vbGVhbmAg
RGVmYXVsdDogYHRydWVgCgpCeSBkZWZhdWx0IHRoZSB0aHJvdHRsaW5nIGZ1
bmN0aW9uIGlzIGFjdHVhbGx5IGEgW2RlYm91bmNlXShodHRwOi8vdW5kZXJz
Y29yZWpzLm9yZy8jZGVib3VuY2UpIGZ1bmN0aW9uIHNvIHRoYXQgdGhlIGNo
ZWNraW5nIGZ1bmN0aW9uIGlzIG9ubHkgdHJpZ2dlcmVkIGFmdGVyIGEgdXNl
ciBzdG9wcyBzY3JvbGxpbmcuIFRvIHVzZSB0cmFkaXRpb25hbCB0aHJvdHRs
aW5nIHdoZXJlIGl0IHdpbGwgb25seSBjaGVjayB0aGUgaW1hZ2VzIGV2ZXJ5
IGB0aHJvdHRsZWAgbWlsbGlzZWNvbmRzLCBzZXQgYGRlYm91bmNlYCB0byBg
ZmFsc2VgLgoKIyMjIyB1bmxvYWQKVHlwZTogYEJvb2xlYW5gIERlZmF1bHQ6
IGBmYWxzZWAKClRoaXMgb3B0aW9uIHdpbGwgdGVsbCBlY2hvIHRvIHVubG9h
ZCBsb2FkZWQgaW1hZ2VzIG9uY2UgdGhleSBoYXZlIHNjcm9sbGVkIGJleW9u
ZCB0aGUgdmlld3BvcnQgKGluY2x1ZGluZyB0aGUgb2Zmc2V0IGFyZWEpLgoK
IyMjIyBjYWxsYmFjawpUeXBlOiBgRnVuY3Rpb25gCgpUaGUgY2FsbGJhY2sg
d2lsbCBiZSBwYXNzZWQgdGhlIGVsZW1lbnQgdGhhdCBoYXMgYmVlbiB1cGRh
dGVkIGFuZCB3aGF0IHRoZSB1cGRhdGUgb3BlcmF0aW9uIHdhcyAoaWUgYGxv
YWRgIG9yIGB1bmxvYWRgKS4gVGhpcyBjYW4gYmUgdXNlZnVsIGlmIHlvdSB3
YW50IHRvIGFkZCBhIGNsYXNzIGxpa2UgYGxvYWRlZGAgdG8gdGhlIGVsZW1l
bnQuIE9yIGRvIHNvbWUgbG9nZ2luZy4KCmBgYGpzCmVjaG8uaW5pdCh7CiAg
Y2FsbGJhY2s6IGZ1bmN0aW9uKGVsZW1lbnQsIG9wKSB7CiAgICBpZihvcCA9
PT0gJ2xvYWQnKSB7CiAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnbG9h
ZGVkJyk7CiAgICB9IGVsc2UgewogICAgICBlbGVtZW50LmNsYXNzTGlzdC5y
ZW1vdmUoJ2xvYWRlZCcpOwogICAgfQogIH0KfSk7CmBgYAoKIyMgLnJlbmRl
cigpCgpFY2hvJ3MgY2FsbGJhY2sgYHJlbmRlcigpYCBjYW4gYmUgdXNlZCB0
byBtYWtlIEVjaG8gcG9sbCB5b3VyIGltYWdlcyB3aGVuIHlvdSdyZSBub3Qg
c2Nyb2xsaW5nLCBmb3IgaW5zdGFuY2UgaWYgeW91J3ZlIGdvdCBhIGZpbHRl
ciBsYXlvdXQgdGhhdCBzd2FwcyBpbWFnZXMgYnV0IGRvZXMgbm90IHNjcm9s
bCwgeW91IG5lZWQgdG8gY2FsbCB0aGUgaW50ZXJuYWwgZnVuY3Rpb25zIHdp
dGhvdXQgc2Nyb2xsaW5nLiBVc2UgYHJlbmRlcigpYCBmb3IgdGhpczoKCmBg
YGpzCmVjaG8ucmVuZGVyKCk7CmBgYAoKVXNpbmcgYHJlbmRlcigpYCBpcyBh
bHNvIHRocm90dGxlZCwgd2hpY2ggbWVhbnMgeW91IGNhbiBiaW5kIGl0IHRv
IGFuIGBvbnJlc2l6ZWAgZXZlbnQgYW5kIGl0IHdpbGwgYmUgb3B0aW1pc2Vk
IGZvciBwZXJmb3JtYW5jZSBpbiB0aGUgc2FtZSB3YXkgYG9uc2Nyb2xsYCBp
cy4KCiMjIE1hbnVhbCBpbnN0YWxsYXRpb24KRHJvcCB5b3VyIGZpbGVzIGlu
dG8geW91ciByZXF1aXJlZCBmb2xkZXJzLCBtYWtlIHN1cmUgeW91J3JlIHVz
aW5nIHRoZSBmaWxlKHMpIGZyb20gdGhlIGBkaXN0YCBmb2xkZXIsIHdoaWNo
IGlzIHRoZSBjb21waWxlZCBwcm9kdWN0aW9uLXJlYWR5IGNvZGUuIEVuc3Vy
ZSB5b3UgcGxhY2UgdGhlIHNjcmlwdCBiZWZvcmUgdGhlIGNsb3NpbmcgYDwv
Ym9keT5gIHRhZyBzbyB0aGUgRE9NIHRyZWUgaXMgcG9wdWxhdGVkIHdoZW4g
dGhlIHNjcmlwdCBydW5zLgoKIyMgQ29uZmlndXJpbmcgRWNobwpBZGQgdGhl
IGltYWdlIHRoYXQgbmVlZHMgdG8gbG9hZCB3aGVuIGl0J3MgdmlzaWJsZSBp
bnNpZGUgdGhlIHZpZXdwb3J0IGluIGEgYGRhdGEtZWNob2AgYXR0cmlidXRl
OgoKYGBgaHRtbAo8aW1nIHNyYz0iaW1nL2JsYW5rLmdpZiIgYWx0PSJQaG90
byIgZGF0YS1lY2hvPSJpbWcvcGhvdG8uanBnIj4KYGBgCgojIyBDb250cmli
dXRpbmcKSW4gbGlldSBvZiBhIGZvcm1hbCBzdHlsZSBndWlkZSwgdGFrZSBj
YXJlIHRvIG1haW50YWluIHRoZSBleGlzdGluZyBjb2Rpbmcgc3R5bGUuIEFk
ZCB1bml0IHRlc3RzIGZvciBhbnkgbmV3IG9yIGNoYW5nZWQgZnVuY3Rpb25h
bGl0eS4gTGludCBhbmQgdGVzdCB5b3VyIGNvZGUgdXNpbmcgR3VscC4KCiMj
IExpY2Vuc2UKTUlUIGxpY2Vuc2UK
",,3729,"bGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczoKICAtICIwLjEwIgogIC0gIjAu
MTEiCmJlZm9yZV9zY3JpcHQ6CiAgLSBucG0gaW5zdGFsbCAtZyBndWxwCnNj
cmlwdDogZ3VscAo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'practical-pytorch',79684696,b'PyTorch tutorials demonstrating modern techniques with readable code',b'Jupyter Notebook',83,3729,,152,False,b'https://api.github.com/repos/spro/practical-pytorch/forks',"KipUaGVzZSB0dXRvcmlhbHMgaGF2ZSBiZWVuIG1lcmdlZCBpbnRvIFt0aGUg
b2ZmaWNpYWwgUHlUb3JjaCB0dXRvcmlhbHNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9weXRvcmNoL3R1dG9yaWFscykuIFBsZWFzZSBnbyB0aGVyZSBmb3IgYmV0
dGVyIG1haW50YWluZWQgdmVyc2lvbnMgb2YgdGhlc2UgdHV0b3JpYWxzIGNv
bXBhdGlibGUgd2l0aCBuZXdlciB2ZXJzaW9ucyBvZiBQeVRvcmNoLioqCgot
LS0KCiFbUHJhY3RpY2FsIFB5dG9yY2hdKGh0dHBzOi8vaS5pbWd1ci5jb20v
ZUJSUHZXQi5wbmcpCgpMZWFybiBQeVRvcmNoIHdpdGggcHJvamVjdC1iYXNl
ZCB0dXRvcmlhbHMuIFRoZXNlIHR1dG9yaWFscyBkZW1vbnN0cmF0ZSBtb2Rl
cm4gdGVjaG5pcXVlcyB3aXRoIHJlYWRhYmxlIGNvZGUgYW5kIHVzZSByZWd1
bGFyIGRhdGEgZnJvbSB0aGUgaW50ZXJuZXQuCgojIyBUdXRvcmlhbHMKCiMj
IyMgU2VyaWVzIDE6IFJOTnMgZm9yIE5MUAoKQXBwbHlpbmcgcmVjdXJyZW50
IG5ldXJhbCBuZXR3b3JrcyB0byBuYXR1cmFsIGxhbmd1YWdlIHRhc2tzLCBm
cm9tIGNsYXNzaWZpY2F0aW9uIHRvIGdlbmVyYXRpb24uCgoqIFtDbGFzc2lm
eWluZyBOYW1lcyB3aXRoIGEgQ2hhcmFjdGVyLUxldmVsIFJOTl0oaHR0cHM6
Ly9naXRodWIuY29tL3Nwcm8vcHJhY3RpY2FsLXB5dG9yY2gvYmxvYi9tYXN0
ZXIvY2hhci1ybm4tY2xhc3NpZmljYXRpb24vY2hhci1ybm4tY2xhc3NpZmlj
YXRpb24uaXB5bmIpCiogW0dlbmVyYXRpbmcgU2hha2VzcGVhcmUgd2l0aCBh
IENoYXJhY3Rlci1MZXZlbCBSTk5dKGh0dHBzOi8vZ2l0aHViLmNvbS9zcHJv
L3ByYWN0aWNhbC1weXRvcmNoL2Jsb2IvbWFzdGVyL2NoYXItcm5uLWdlbmVy
YXRpb24vY2hhci1ybm4tZ2VuZXJhdGlvbi5pcHluYikKKiBbR2VuZXJhdGlu
ZyBOYW1lcyB3aXRoIGEgQ29uZGl0aW9uYWwgQ2hhcmFjdGVyLUxldmVsIFJO
Tl0oaHR0cHM6Ly9naXRodWIuY29tL3Nwcm8vcHJhY3RpY2FsLXB5dG9yY2gv
YmxvYi9tYXN0ZXIvY29uZGl0aW9uYWwtY2hhci1ybm4vY29uZGl0aW9uYWwt
Y2hhci1ybm4uaXB5bmIpCiogW1RyYW5zbGF0aW9uIHdpdGggYSBTZXF1ZW5j
ZSB0byBTZXF1ZW5jZSBOZXR3b3JrIGFuZCBBdHRlbnRpb25dKGh0dHBzOi8v
Z2l0aHViLmNvbS9zcHJvL3ByYWN0aWNhbC1weXRvcmNoL2Jsb2IvbWFzdGVy
L3NlcTJzZXEtdHJhbnNsYXRpb24vc2VxMnNlcS10cmFuc2xhdGlvbi5pcHlu
YikKKiBbRXhwbG9yaW5nIFdvcmQgVmVjdG9ycyB3aXRoIEdsb1ZlXShodHRw
czovL2dpdGh1Yi5jb20vc3Byby9wcmFjdGljYWwtcHl0b3JjaC9ibG9iL21h
c3Rlci9nbG92ZS13b3JkLXZlY3RvcnMvZ2xvdmUtd29yZC12ZWN0b3JzLmlw
eW5iKQoqICpXSVAqIFNlbnRpbWVudCBBbmFseXNpcyB3aXRoIGEgV29yZC1M
ZXZlbCBSTk4gYW5kIEdsb1ZlIEVtYmVkZGluZ3MKCiMjIyMgU2VyaWVzIDI6
IFJOTnMgZm9yIHRpbWVzZXJpZXMgZGF0YQoKKiAqV0lQKiBQcmVkaWN0aW5n
IGRpc2NyZXRlIGV2ZW50cyB3aXRoIGFuIFJOTgoKIyMgR2V0IFN0YXJ0ZWQK
ClRoZSBxdWlja2VzdCB3YXkgdG8gcnVuIHRoZXNlIG9uIGEgZnJlc2ggTGlu
dXggb3IgTWFjIG1hY2hpbmUgaXMgdG8gaW5zdGFsbCBbQW5hY29uZGFdKGh0
dHBzOi8vd3d3LmNvbnRpbnV1bS5pby9hbmFjb25kYS1vdmVydmlldyk6CmBg
YApjdXJsIC1MTyBodHRwczovL3JlcG8uY29udGludXVtLmlvL2FyY2hpdmUv
QW5hY29uZGEzLTQuMy4wLUxpbnV4LXg4Nl82NC5zaApiYXNoIEFuYWNvbmRh
My00LjMuMC1MaW51eC14ODZfNjQuc2gKYGBgCgpUaGVuIGluc3RhbGwgUHlU
b3JjaDoKCmBgYApjb25kYSBpbnN0YWxsIHB5dG9yY2ggLWMgc291bWl0aApg
YGAKClRoZW4gY2xvbmUgdGhpcyByZXBvIGFuZCBzdGFydCBKdXB5dGVyIE5v
dGVib29rOgoKYGBgCmdpdCBjbG9uZSBodHRwOi8vZ2l0aHViLmNvbS9zcHJv
L3ByYWN0aWNhbC1weXRvcmNoCmNkIHByYWN0aWNhbC1weXRvcmNoCmp1cHl0
ZXIgbm90ZWJvb2sKYGBgCgojIyBSZWNvbW1lbmRlZCBSZWFkaW5nCgojIyMg
UHlUb3JjaCBiYXNpY3MKCiogaHR0cDovL3B5dG9yY2gub3JnLyBGb3IgaW5z
dGFsbGF0aW9uIGluc3RydWN0aW9ucwoqIFtPZmZpY2FsIFB5VG9yY2ggdHV0
b3JpYWxzXShodHRwOi8vcHl0b3JjaC5vcmcvdHV0b3JpYWxzLykgZm9yIG1v
cmUgdHV0b3JpYWxzIChzb21lIG9mIHRoZXNlIHR1dG9yaWFscyBhcmUgaW5j
bHVkZWQgdGhlcmUpCiogW0RlZXAgTGVhcm5pbmcgd2l0aCBQeVRvcmNoOiBB
IDYwLW1pbnV0ZSBCbGl0el0oaHR0cDovL3B5dG9yY2gub3JnL3R1dG9yaWFs
cy9iZWdpbm5lci9kZWVwX2xlYXJuaW5nXzYwbWluX2JsaXR6Lmh0bWwpIHRv
IGdldCBzdGFydGVkIHdpdGggUHlUb3JjaCBpbiBnZW5lcmFsCiogW0ludHJv
ZHVjdGlvbiB0byBQeVRvcmNoIGZvciBmb3JtZXIgVG9yY2hpZXNdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9weXRvcmNoL3R1dG9yaWFscy9ibG9iL21hc3Rlci9J
bnRyb2R1Y3Rpb24lMjB0byUyMFB5VG9yY2glMjBmb3IlMjBmb3JtZXIlMjBU
b3JjaGllcy5pcHluYikgaWYgeW91IGFyZSBhIGZvcm1lciBMdWEgVG9yY2gg
dXNlcgoqIFtqY2pvaG5zb24ncyBQeVRvcmNoIGV4YW1wbGVzXShodHRwczov
L2dpdGh1Yi5jb20vamNqb2huc29uL3B5dG9yY2gtZXhhbXBsZXMpIGZvciBh
IG1vcmUgaW4gZGVwdGggb3ZlcnZpZXcgKGluY2x1ZGluZyBjdXN0b20gbW9k
dWxlcyBhbmQgYXV0b2dyYWQgZnVuY3Rpb25zKQoKIyMjIFJlY3VycmVudCBO
ZXVyYWwgTmV0d29ya3MKCiogW1RoZSBVbnJlYXNvbmFibGUgRWZmZWN0aXZl
bmVzcyBvZiBSZWN1cnJlbnQgTmV1cmFsIE5ldHdvcmtzXShodHRwOi8va2Fy
cGF0aHkuZ2l0aHViLmlvLzIwMTUvMDUvMjEvcm5uLWVmZmVjdGl2ZW5lc3Mv
KSBzaG93cyBhIGJ1bmNoIG9mIHJlYWwgbGlmZSBleGFtcGxlcwoqIFtEZWVw
IExlYXJuaW5nLCBOTFAsIGFuZCBSZXByZXNlbnRhdGlvbnNdKGh0dHA6Ly9j
b2xhaC5naXRodWIuaW8vcG9zdHMvMjAxNC0wNy1OTFAtUk5Ocy1SZXByZXNl
bnRhdGlvbnMvKSBmb3IgYW4gb3ZlcnZpZXcgb24gd29yZCBlbWJlZGRpbmdz
IGFuZCBSTk5zIGZvciBOTFAKKiBbVW5kZXJzdGFuZGluZyBMU1RNIE5ldHdv
cmtzXShodHRwOi8vY29sYWguZ2l0aHViLmlvL3Bvc3RzLzIwMTUtMDgtVW5k
ZXJzdGFuZGluZy1MU1RNcy8pIGlzIGFib3V0IExTVE1zIHdvcmsgc3BlY2lm
aWNhbGx5LCBidXQgYWxzbyBpbmZvcm1hdGl2ZSBhYm91dCBSTk5zIGluIGdl
bmVyYWwKCiMjIyBNYWNoaW5lIHRyYW5zbGF0aW9uCgoqIFtMZWFybmluZyBQ
aHJhc2UgUmVwcmVzZW50YXRpb25zIHVzaW5nIFJOTiBFbmNvZGVyLURlY29k
ZXIgZm9yIFN0YXRpc3RpY2FsIE1hY2hpbmUgVHJhbnNsYXRpb25dKGh0dHA6
Ly9hcnhpdi5vcmcvYWJzLzE0MDYuMTA3OCkKKiBbU2VxdWVuY2UgdG8gU2Vx
dWVuY2UgTGVhcm5pbmcgd2l0aCBOZXVyYWwgTmV0d29ya3NdKGh0dHA6Ly9h
cnhpdi5vcmcvYWJzLzE0MDkuMzIxNSkKCiMjIyBBdHRlbnRpb24gbW9kZWxz
CgoqIFtOZXVyYWwgTWFjaGluZSBUcmFuc2xhdGlvbiBieSBKb2ludGx5IExl
YXJuaW5nIHRvIEFsaWduIGFuZCBUcmFuc2xhdGVdKGh0dHBzOi8vYXJ4aXYu
b3JnL2Ficy8xNDA5LjA0NzMpCiogW0VmZmVjdGl2ZSBBcHByb2FjaGVzIHRv
IEF0dGVudGlvbi1iYXNlZCBOZXVyYWwgTWFjaGluZSBUcmFuc2xhdGlvbl0o
aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE1MDguMDQwMjUpCgojIyMgT3RoZXIg
Uk5OIHVzZXMKCiogW0EgTmV1cmFsIENvbnZlcnNhdGlvbmFsIE1vZGVsXSho
dHRwOi8vYXJ4aXYub3JnL2Ficy8xNTA2LjA1ODY5KQoKIyMjIE90aGVyIFB5
VG9yY2ggdHV0b3JpYWxzCgoqIFtEZWVwIExlYXJuaW5nIEZvciBOTFAgSW4g
UHlUb3JjaF0oaHR0cHM6Ly9naXRodWIuY29tL3JndXRocmllMy9EZWVwTGVh
cm5pbmdGb3JOTFBJblB5dG9yY2gpCgojIyBGZWVkYmFjawoKSWYgeW91IGhh
dmUgaWRlYXMgb3IgZmluZCBtaXN0YWtlcyBbcGxlYXNlIGxlYXZlIGEgbm90
ZV0oaHR0cHM6Ly9naXRodWIuY29tL3Nwcm8vcHJhY3RpY2FsLXB5dG9yY2gv
aXNzdWVzL25ldykuCg==
",,3729,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'jspm-cli',8962829,b'Package management CLI',b'TypeScript',50,3729,,111,False,b'https://api.github.com/repos/jspm/jspm-cli/forks',"anNwbSAyLjAgQ0xJCj09PQoKWyFbTlBNIHZlcnNpb25dW25wbS1pbWFnZV1d
W25wbS11cmxdIFshW0Rvd25sb2Fkc11bZG93bmxvYWRzLWltYWdlXV1bbnBt
LXVybF0gWyFbQnVpbGQgU3RhdHVzXVt0cmF2aXMtaW1hZ2VdXVt0cmF2aXMt
dXJsXSBbIVtHaXR0ZXJdKGh0dHBzOi8vYmFkZ2VzLmdpdHRlci5pbS9Kb2lu
JTIwQ2hhdC5zdmcpXShodHRwczovL2dpdHRlci5pbS9qc3BtL2pzcG0/dXRt
X3NvdXJjZT1iYWRnZSZ1dG1fbWVkaXVtPWJhZGdlJnV0bV9jYW1wYWlnbj1w
ci1iYWRnZSZ1dG1fY29udGVudD1iYWRnZSkKCkVTIG1vZHVsZSBwYWNrYWdl
IG1hbmFnZXIuCgpTZWUgW2h0dHBzOi8vanNwbS5vcmddKGh0dHBzOi8vanNw
bS5vcmcpIGZvciBhIHByb2plY3Qgb3ZlcnZpZXcgYW5kIGd1aWRlLgoKRm9y
IHByZXZpb3VzIHJlbGVhc2VzLCBzZWUgdGhlIFtqc3BtIDAuMTZdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9qc3BtL2pzcG0tY2xpL3RyZWUvMC4xNikgYW5kIFtq
c3BtIDAuMTddKGh0dHBzOi8vZ2l0aHViLmNvbS9qc3BtL2pzcG0tY2xpL3Ry
ZWUvMC4xNykgYnJhbmNoZXMuCgpGb3Igc3VwcG9ydCwgW2pvaW4gdGhlIEdp
dHRlciByb29tXShodHRwczovL2dpdHRlci5pbS9qc3BtL2pzcG0pIG9yIFtH
b29nbGUgR3JvdXBdKGh0dHA6Ly9ncm91cHMuZ29vZ2xlLmNvbS9ncm91cC9q
c3BtLWlvKS4KClVzZSBganNwbSBoZWxwYCB0byBzZWUgdGhlIGZ1bGwgdXAt
dG8tZGF0ZSBsaXN0IG9mIGNvbW1hbmRzLgoKSWYgeW91IGFyZSBpbnRlcmVz
dGVkIGluIGNvbnRyaWJ1dGluZyB0byB0aGUgcHJvamVjdCwgW3BsZWFzZSBy
ZWFkIHRoZSBjb250cmlidXRvcnMnIGd1aWRlXShodHRwczovL2dpdGh1Yi5j
b20vanNwbS9wcm9qZWN0L2Jsb2IvbWFzdGVyL0NPTlRSSUJVVElORy5tZCku
CgpGb3IgYSBsaXN0IG9mIGNvbW11bml0eSBwcm9qZWN0cyBhbmQgdG9vbHMs
IHNlZSB0aGUgW0ludGVncmF0aW9ucyBQYWdlXShodHRwczovL2pzcG0ub3Jn
L2RvY3MvaW50ZWdyYXRpb25zKS4KCiMjIyBEb2N1bWVudGF0aW9uCgpGdWxs
IEFQSSBkb2N1bWVudGF0aW9uIGZvciB0aGUgMi4wIHJlbGVhc2UgaXMgc3Rp
bGwgaW4gcHJvZ3Jlc3MuCgojIyMgTGljZW5zZQoKQXBhY2hlIDIuMAoKW3Ry
YXZpcy11cmxdOiBodHRwczovL3RyYXZpcy1jaS5vcmcvanNwbS9qc3BtLWNs
aQpbdHJhdmlzLWltYWdlXTogaHR0cHM6Ly90cmF2aXMtY2kub3JnL2pzcG0v
anNwbS1jbGkuc3ZnP2JyYW5jaD1tYXN0ZXIKW2Rvd25sb2Fkcy1pbWFnZV06
IGh0dHA6Ly9pbWcuc2hpZWxkcy5pby9ucG0vZG0vanNwbS5zdmcKW25wbS11
cmxdOiBodHRwczovL25wbWpzLm9yZy9wYWNrYWdlL2pzcG0KW25wbS1pbWFn
ZV06IGh0dHA6Ly9pbWcuc2hpZWxkcy5pby9ucG0vdi9qc3BtLnN2Zwo=
",,3729,"LS0tCmxhbmd1YWdlOiBub2RlX2pzCnN1ZG86IGZhbHNlCmVudjoKICBnbG9i
YWw6CiAgICAtIEpTUE1fU0tJUF9QUk9NUFRTPXRydWUKICAgIC0gSlNQTV9M
T0c9ZGVidWcKbWF0cml4OgogIGluY2x1ZGU6CiAgICAtIG5vZGVfanM6ICcx
MCcKICAgIC0gbm9kZV9qczogJzEyJwo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'billboard.js',93701214,"b':bar_chart: Re-usable, easy interface JavaScript chart library based on D3 v4+:chart_with_upwards_trend:'",b'JavaScript',82,3728,,82,False,b'https://api.github.com/repos/naver/billboard.js/forks',"PGltZyBzcmM9Imh0dHBzOi8vbmF2ZXIuZ2l0aHViLmlvL2JpbGxib2FyZC5q
cy9pbWcvbG9nby9iaWxsYm9hcmQuanMuc3ZnIiB3aWR0aD0iMzUwIiBhbHQ9
ImJpbGxib2FyZC5qcyI+PGJyPgoKWyFbTGF0ZXN0IFZlcnNpb25dW2JhZGdl
LWxhdGVzdF1dW2xpbmstdmVyc2lvbl0gWyFbTmV4dCB2ZXJzaW9uXVtiYWRn
ZS1uZXh0XV1bbGluay12ZXJzaW9uXSBbIVtzZW1hbnRpYy1yZWxlYXNlXVti
YWRnZS1zZW1hbnRpYy1yZWxlYXNlXV1bbGluay1zZW1hbnRpYy1yZWxlYXNl
XQoKWyFbQnVpbGQgU3RhdHVzXVtiYWRnZS1idWlsZC1zdGF0dXNdXVtsaW5r
LWJ1aWxkLXN0YXR1c10gWyFbQ292ZXJhZ2UgU3RhdHVzXVtiYWRnZS1jb3Zl
cmFnZV1dW2xpbmstY292ZXJhZ2VdIFshW2Rvd25sb2FkXVtiYWRnZS1kb3du
bG9hZF1dW2xpbmstZG93bmxvYWRdIFshW2pzRGVsaXZyXVtiYWRnZS1qc0Rl
bGl2cl1dW2xpbmstanNEZWxpdnJdIFshW2d6aXAgc2l6ZV1bYmFkZ2UtZ3pp
cC1zaXplXV1bbGluay1nemlwLXNpemVdIFshW0dyZWVua2VlcGVyXVtiYWRn
ZS1na11dW2xpbmstZ2tdCgpiaWxsYm9hcmQuanMgaXMgYSByZS11c2FibGUs
IGVhc3kgaW50ZXJmYWNlIEphdmFTY3JpcHQgY2hhcnQgbGlicmFyeSwgYmFz
ZWQgb24gRDMgdjQrLgo+IFRoZSBuYW1lICJiaWxsYm9hcmQiIGNvbWVzIGZy
b20gdGhlIGZhbW91cyBgYmlsbGJvYXJkIGNoYXJ0YCB3aGljaCBldmVyeWJv
ZHkga25vd3MuPGJyPgo+IC0gW1doeSB3ZSBkZWNpZGVkIHRvIHN0YXJ0IGJp
bGxib2FyZC5qcz9dKGh0dHBzOi8vZ2l0aHViLmNvbS9uYXZlci9iaWxsYm9h
cmQuanMvd2lraS9XaHktd2UtZGVjaWRlZC10by1zdGFydC1iaWxsYm9hcmQu
anMlM0YpCgojIyBEb2N1bWVudHMKLSBbQVBJIERvY3VtZW50YXRpb25dKGh0
dHBzOi8vbmF2ZXIuZ2l0aHViLmlvL2JpbGxib2FyZC5qcy9yZWxlYXNlL2xh
dGVzdC9kb2MvKQotIFtFeGFtcGxlc10oaHR0cHM6Ly9uYXZlci5naXRodWIu
aW8vYmlsbGJvYXJkLmpzL2RlbW8vKQotIFtSb2FkbWFwXShodHRwczovL2dp
dGh1Yi5jb20vbmF2ZXIvYmlsbGJvYXJkLmpzL3dpa2kvUm9hZG1hcCkKLSBb
Q29udHJpYnV0aW9uIEd1aWRlXShDT05UUklCVVRJTkcubWQpCi0gW0NvbXBh
cmlzb24gdGFibGUgd2l0aCBvdGhlciBsaWJyYXJpZXNdKGh0dHBzOi8vZ2l0
aHViLmNvbS9uYXZlci9iaWxsYm9hcmQuanMvd2lraS9Db21wYXJpc29uLXRh
YmxlKQotIFtNaWdyYXRpb24gZ3VpZGUgZnJvbSBDMy5qc10oaHR0cHM6Ly9n
aXRodWIuY29tL25hdmVyL2JpbGxib2FyZC5qcy93aWtpL0hvdy10by1taWdy
YXRlLWZyb20tQzMuanMlM0YpCi0gW1RoaXJkIFBhcnR5IEFwcGxpY2F0aW9u
c10oaHR0cHM6Ly9naXRodWIuY29tL25hdmVyL2JpbGxib2FyZC5qcy93aWtp
L1RoaXJkLXBhcnR5LWFwcGxpY2F0aW9ucykKLSBbV2hvJ3MgdXNpbmcgYmls
bGJvYXJkLmpzXShodHRwczovL2dpdGh1Yi5jb20vbmF2ZXIvYmlsbGJvYXJk
LmpzL3dpa2kvV2hvJ3MtdXNpbmctYmlsbGJvYXJkLmpzKQoKIyMgUGxheWdy
b3VuZApQbGF5IHdpdGggdGhlIGRpdmVyc2Ugb3B0aW9ucyBnZW5lcmF0aW5n
IG9uIHRoZSBmbHkhCi0gaHR0cHM6Ly9uYXZlci5naXRodWIuaW8vYmlsbGJv
YXJkLmpzL3BsYXlncm91bmQvCi0gaHR0cHM6Ly9iZXRhLm9ic2VydmFibGVo
cS5jb20vQGlkcmlzLW1hcHMvYmlsbGJvYXJkLWpzLXBsYXlncm91bmQgKGJ5
IFtAaWRyaXMtbWFwc10oaHR0cHM6Ly9naXRodWIuY29tL2lkcmlzLW1hcHMp
KQoKIyMgUXVlc3Rpb25zPwpJZiB5b3UgaGF2ZSBhbnkgcXVlc3Rpb25zLCBj
aGVja291dCB0aGUgcHJldmlvdXMgcG9zdHMgb3IgY3JlYXRlIGEgbmV3IG9u
ZSBhdDoKLSBbU3RhY2sgT3ZlcmZsb3c6IGJpbGxib2FyZC5qcyB0YWdnZWQg
cG9zdHNdKGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zL3Rh
Z2dlZC9iaWxsYm9hcmQuanMpCi0gW0lzc3VlIHdpdGggJ3F1ZXN0aW9uJyBs
YWJlbF0oaHR0cHM6Ly9naXRodWIuY29tL25hdmVyL2JpbGxib2FyZC5qcy9p
c3N1ZXM/dXRmOD0lRTIlOUMlOTMmcT1sYWJlbCUzQXF1ZXN0aW9uKQoKIyMg
U3VwcG9ydGVkIGNoYXJ0IHR5cGVzCiFbQ2hhcnQgVHlwZXNdKGh0dHBzOi8v
bmF2ZXIuZ2l0aHViLmlvL2JpbGxib2FyZC5qcy9pbWcvY2hhcnQtdHlwZXMu
cG5nP3Y9NSkKCiMjIERvd25sb2FkIGFuZCBJbnN0YWxsYXRpb24KCkRvd25s
b2FkIGRpc3QgZmlsZXMgZnJvbSB0aGUgcmVwbyBkaXJlY3RseSBvciBpbnN0
YWxsIGl0IHZpYSBucG0uCgojIyMgRm9yIGRldmVsb3BtZW50IChVbmNvbXBy
ZXNzZWQpCgpZb3UgY2FuIGRvd25sb2FkIHRoZSB1bmNvbXByZXNzZWQgZmls
ZXMgZm9yIGRldmVsb3BtZW50CgojIyMjIExhdGVzdAogIC0gaHR0cHM6Ly9u
YXZlci5naXRodWIuaW8vYmlsbGJvYXJkLmpzL3JlbGVhc2UvbGF0ZXN0L2Rp
c3QvYmlsbGJvYXJkLmpzCiAgLSBodHRwczovL25hdmVyLmdpdGh1Yi5pby9i
aWxsYm9hcmQuanMvcmVsZWFzZS9sYXRlc3QvZGlzdC9iaWxsYm9hcmQuY3Nz
CgojIyMjIFNwZWNpZmljIHZlcnNpb24KICAtIGh0dHBzOi8vbmF2ZXIuZ2l0
aHViLmlvL2JpbGxib2FyZC5qcy9yZWxlYXNlL1tWRVJTSU9OXS9kaXN0L2Jp
bGxib2FyZC5qcwogIC0gaHR0cHM6Ly9uYXZlci5naXRodWIuaW8vYmlsbGJv
YXJkLmpzL3JlbGVhc2UvW1ZFUlNJT05dL2Rpc3QvYmlsbGJvYXJkLmNzcwoK
IyMjIEZvciBwcm9kdWN0aW9uIChDb21wcmVzc2VkKQoKWW91IGNhbiBkb3du
bG9hZCB0aGUgY29tcHJlc3NlZCBmaWxlcyBmb3IgcHJvZHVjdGlvbgoKIyMj
IyBMYXRlc3QKICAtIGh0dHBzOi8vbmF2ZXIuZ2l0aHViLmlvL2JpbGxib2Fy
ZC5qcy9yZWxlYXNlL2xhdGVzdC9kaXN0L2JpbGxib2FyZC5taW4uanMKICAt
IGh0dHBzOi8vbmF2ZXIuZ2l0aHViLmlvL2JpbGxib2FyZC5qcy9yZWxlYXNl
L2xhdGVzdC9kaXN0L2JpbGxib2FyZC5taW4uY3NzCgojIyMjIFNwZWNpZmlj
IHZlcnNpb24KICAtIGh0dHBzOi8vbmF2ZXIuZ2l0aHViLmlvL2JpbGxib2Fy
ZC5qcy9yZWxlYXNlL1tWRVJTSU9OXS9kaXN0L2JpbGxib2FyZC5taW4uanMK
ICAtIGh0dHBzOi8vbmF2ZXIuZ2l0aHViLmlvL2JpbGxib2FyZC5qcy9yZWxl
YXNlL1tWRVJTSU9OXS9kaXN0L2JpbGxib2FyZC5taW4uY3NzCgojIyMgUGFj
a2FnZWQgdmVyc2lvbiAod2l0aCBEMy5qcyBpbmNsdXNpb24pCj4gUGFja2Fn
ZWQgdmVyc2lvbiBpcyBub3QgYW4gb2ZmaWNpYWwgZGlzdHJpYnV0aW9uLgo+
IEl0J3MgdG8gcHJvdmlkZSBhbiBlYXN5IHdheSB0byBsb2FkICdiaWxsYm9h
cmQuanMnIHdpdGggZGVwZW5kZW5jeS4KCiAtICoqTGF0ZXN0KioKICAgIC0g
aHR0cHM6Ly9uYXZlci5naXRodWIuaW8vYmlsbGJvYXJkLmpzL3JlbGVhc2Uv
bGF0ZXN0L2Rpc3QvYmlsbGJvYXJkLnBrZ2QuanMKICAgIC0gaHR0cHM6Ly9u
YXZlci5naXRodWIuaW8vYmlsbGJvYXJkLmpzL3JlbGVhc2UvbGF0ZXN0L2Rp
c3QvYmlsbGJvYXJkLnBrZ2QubWluLmpzCiAtICoqU3BlY2lmaWMgdmVyc2lv
bioqCiAgICAtIGh0dHBzOi8vbmF2ZXIuZ2l0aHViLmlvL2JpbGxib2FyZC5q
cy9yZWxlYXNlL1tWRVJTSU9OXS9kaXN0L2JpbGxib2FyZC5wa2dkLmpzCiAg
ICAtIGh0dHBzOi8vbmF2ZXIuZ2l0aHViLmlvL2JpbGxib2FyZC5qcy9yZWxl
YXNlL1tWRVJTSU9OXS9kaXN0L2JpbGxib2FyZC5wa2dkLm1pbi5qcwoKIyMj
IFRoZW1lcwo+IElmIHlvdSB3YW50IGFwcGx5IHRoZW1lcywgc2ltcGx5IGxv
YWQgb25lIG9mIHRoZSB0aGVtZSBjc3MgZmlsZSBwcm92aWRlZCBpbnN0ZWFk
IG9mIHRoZSBkZWZhdWx0IGNzcyBmaWxlLgoKIyMjIyBpbnNpZ2h0Ci0gaHR0
cHM6Ly9uYXZlci5naXRodWIuaW8vYmlsbGJvYXJkLmpzL3JlbGVhc2UvbGF0
ZXN0L2Rpc3QvdGhlbWUvaW5zaWdodC5jc3MKLSBodHRwczovL25hdmVyLmdp
dGh1Yi5pby9iaWxsYm9hcmQuanMvcmVsZWFzZS9sYXRlc3QvZGlzdC90aGVt
ZS9pbnNpZ2h0Lm1pbi5jc3MKCiMjIyMgZ3JhcGgKLSBodHRwczovL25hdmVy
LmdpdGh1Yi5pby9iaWxsYm9hcmQuanMvcmVsZWFzZS9sYXRlc3QvZGlzdC90
aGVtZS9ncmFwaC5jc3MKLSBodHRwczovL25hdmVyLmdpdGh1Yi5pby9iaWxs
Ym9hcmQuanMvcmVsZWFzZS9sYXRlc3QvZGlzdC90aGVtZS9ncmFwaC5taW4u
Y3NzCgojIyMgTmlnaHRseSB2ZXJzaW9uCgpOaWdodGx5IHZlcnNpb24gaXMg
dGhlIGxhdGVzdCBidWlsZCBmcm9tIHRoZSBtYXN0ZXIgYnJhbmNoLgpXaXRo
IG5pZ2h0bHksIHlvdSBjYW4gdHJ5IHVwY29taW5nIGNoYW5nZXMgcHJpb3Ig
dGhlIG9mZmljaWFsIHJlbGVhc2UuCgotIGh0dHBzOi8vZ2l0aHViLmNvbS9u
YXZlci9iaWxsYm9hcmQuanMvdHJlZS9uaWdodGx5L2Rpc3QKCj4gVGhlIHZl
cnNpb24gaW5mbyB3aWxsIGJlIGdpdmVuIGFzIHRoZSBidWlsZCBkYXRldGlt
ZTogYHgueC54LW5pZ2h0bHkteXl5eW1tZGRoaG1tc3NgCgpUaGVyZSdyZSB0
d28gd2F5cyB0byBpbnN0YWxsIGZyb20gYG5pZ2h0bHlgIGJyYW5jaCBkaXJl
Y3RseS4KYGBganMKLy8gU3BlY2lmeSBvbiAncGFja2FnZS5qc29uJyBmaWxl
CiJkZXBlbmRlbmNpZXMiOiB7CiAgICAgIC4uLgogICAgICAiYmlsbGJvYXJk
LmpzIjogImdpdDovL2dpdGh1Yi5jb20vbmF2ZXIvYmlsbGJvYXJkLmpzLmdp
dCNuaWdodGx5Igp9LApgYGAKCmBgYHNoCiMgUnVuIGluc3RhbGwgY29tbWFu
ZCBmcm9tIHNoZWxsCiQgbnBtIGluc3RhbGwgZ2l0K2h0dHBzOi8vZ2l0aHVi
LmNvbS9uYXZlci9iaWxsYm9hcmQuanMuZ2l0I25pZ2h0bHkgLS1zYXZlCmBg
YAoKIyMjIE5leHQoUmVsZWFzZSBDYW5kaXRhdGUpIHZlcnNpb24KCk5leHQg
dmVyc2lvbiBpcyB0aGUgJ3JlbGVhc2UgY2FuZGlkYXRlJyBidWlsZCwgcHJp
b3IgdGhlIGxhdGVzdCBvZmZpY2lhbCByZWxlYXNlLgoKYGBgc2gKIyBSdW4g
aW5zdGFsbCBjb21tYW5kIGZyb20gc2hlbGwKJCBucG0gaW5zdGFsbCBiaWxs
Ym9hcmQuanNAbmV4dCAtLXNhdmUKYGBgCgojIyMgSW5zdGFsbGF0aW9uIHdp
dGggbnBtCgpgYGBiYXNoCiQgbnBtIGluc3RhbGwgYmlsbGJvYXJkLmpzCmBg
YAoKIyMjIFVzaW5nIENETgoKSWYgeW91IHdhbnQgdG8gdXNlICdiaWxsYm9h
cmQuanMnIHdpdGhvdXQgaW5zdGFsbGF0aW9uLCBsb2FkIGZpbGVzIGRpcmVj
dGx5IGZyb20gb25lIG9mIHRoZSBDRE4gcHJvdmlkZXJzLgoKLSBjZG5qczog
aHR0cHM6Ly9jZG5qcy5jb20vbGlicmFyaWVzL2JpbGxib2FyZC5qcwotIGpz
RGVsaXZyOiBodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2JpbGxib2Fy
ZC5qcy9kaXN0LwotIHVucGtnOiBodHRwczovL3VucGtnLmNvbS9iaWxsYm9h
cmQuanMvZGlzdC8KCiMjIFN1cHBvcnRlZCBCcm93c2VycwoKPiBCYXNpY2Fs
bHkgd2lsbCB3b3JrIG9uIGFsbCBTVkcgc3VwcG9ydGVkIGJyb3dzZXJzLgoK
fEludGVybmV0IEV4cGxvcmVyfENocm9tZXxGaXJlZm94fFNhZmFyaXxpT1N8
QW5kcm9pZHwKfC0tLXwtLS18LS0tfC0tLXwtLS18LS0tfAp8OSt8TGF0ZXN0
fExhdGVzdHxMYXRlc3R8OCt8NCt8CgoKIyMgRGVwZW5kZW5jeQoKfFtEM10o
aHR0cHM6Ly9kM2pzLm9yZy8pIChyZXF1aXJlZCl8CnwgLS0tIHwKfCA0KyB8
CgpMb2FkIGJpbGxib2FyZC5qcyBhZnRlciBEMy5qcy4KCmBgYGh0bWwKPCEt
LSAxKSBMb2FkIEQzLmpzIGFuZCBiaWxsYm9hcmQuanMgc2VwYXJhdGVseSAt
LT4KICAgIDwhLS0gTG9hZCBEMyAtLT4KICAgIDxzY3JpcHQgc3JjPSJodHRw
czovL2QzanMub3JnL2QzLnY1Lm1pbi5qcyI+PC9zY3JpcHQ+CgogICAgPCEt
LSBMb2FkIGJpbGxib2FyZC5qcyB3aXRoIGJhc2Uob3IgdGhlbWUpIHN0eWxl
IC0tPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIkWU9VUl9Q
QVRIL2JpbGxib2FyZC5jc3MiPgogICAgPHNjcmlwdCBzcmM9IiRZT1VSX1BB
VEgvYmlsbGJvYXJkLmpzIj48L3NjcmlwdD4KCjwhLS0gMikgb3IgTG9hZCBi
aWxsYm9hcmQuanMgcGFja2FnZWQgd2l0aCBEMy5qcyAtLT4KICAgIDxsaW5r
IHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iJFlPVVJfUEFUSC9iaWxsYm9hcmQu
Y3NzIj4KICAgIDxzY3JpcHQgc3JjPSIkWU9VUl9QQVRIL2JpbGxib2FyZC5w
a2dkLmpzIj48L3NjcmlwdD4KYGBgCgpvciB1c2UgaW1wb3J0aW5nIEVTTS4K
CmBgYGpzCi8vIDEpIGltcG9ydCBiaWxsYm9hcmQuanMKLy8gYXMgbmFtZWQg
aW1wb3J0CmltcG9ydCB7YmJ9IGZyb20gImJpbGxib2FyZC5qcyI7CgovLyBv
ciBhcyBpbXBvcnRpbmcgZGVmYXVsdAppbXBvcnQgYmIgZnJvbSAiYmlsbGJv
YXJkLmpzIjsKCi8vIDIpIGltcG9ydCBjc3MgaWYgeW91ciBkZXYtZW52IHN1
cHBvcnRzLiBJZiBkb24ndCwgaW5jbHVkZSB0aGVtIHZpYSA8bGluaz4KaW1w
b3J0ICJiaWxsYm9hcmQuanMvZGlzdC9iaWxsYm9hcmQuY3NzIjsKCi8vIG9y
IHRoZW1lIHN0eWxlLiBGaW5kIG1vcmUgdGhlbWVzIGZyb20gJ3RoZW1lJyBm
b2xkZXIKaW1wb3J0ICJiaWxsYm9hcmQuanMvZGlzdC90aGVtZS9pbnNpZ2h0
LmNzcyIKYGBgCgo+ICoqTm90ZSoqCj4gRm9yIG1pZ3JhdGlvbiBmcm9tIEMz
LmpzLCBjaGVja291dCB0aGUgW21pZ3JhdGlvbiBndWlkZV0oaHR0cHM6Ly9n
aXRodWIuY29tL25hdmVyL2JpbGxib2FyZC5qcy93aWtpL0hvdy10by1taWdy
YXRlLWZyb20tQzMuanMlM0YpCgojIyBCYXNpYyB1c2FnZSBleGFtcGxlCgoj
IyMjIDEpIENyZWF0ZSBjaGFydCBob2xkZXIgZWxlbWVudApgYGBodG1sCjxk
aXYgaWQ9ImNoYXJ0Ij48L2Rpdj4KYGBgCgojIyMjIDIpIEdlbmVyYXRlIGEg
Y2hhcnQgd2l0aCBvcHRpb25zCmBgYGpzCi8vIGdlbmVyYXRlIHRoZSBjaGFy
dAp2YXIgY2hhcnQgPSBiYi5nZW5lcmF0ZSh7CiAgICBiaW5kdG86ICIjY2hh
cnQiLAogICAgZGF0YTogewogICAgICB0eXBlOiAibGluZSIsCiAgICAgICAg
Y29sdW1uczogWwogICAgICAgICAgICBbImRhdGExIiwgMzAsIDIwMCwgMTAw
LCA0MDAsIDE1MCwgMjUwXQogICAgICAgIF0KICAgIH0KfSk7CgovLyBjYWxs
IHNvbWUgQVBJCmNoYXJ0LmxvYWQoIC4uLiApOwpgYGAKCiMjIEhvdyB0byBz
dGFydCBkZXZlbG9waW5nIGJpbGxib2FyZC5qcz8KCkZvciBhbnlvbmUgaW50
ZXJlc3RlZCBpbiBkZXZlbG9waW5nIGJpbGxib2FyZC5qcywgZm9sbG93IHRo
ZSBpbnN0cnVjdGlvbnMgYmVsb3cuCj4gUmVxdWlyZWQgTm9kZS5qcyB2ZXJz
aW9uOiBgMTAuMTAuMCtgCgojIyMgRGV2ZWxvcG1lbnQgRW52aXJvbm1lbnQK
CiMjIyMgMS4gQ2xvbmUgdGhlIHJlcG9zaXRvcnkKCkNsb25lIHRoZSBiaWxs
Ym9hcmQuanMgcmVwb3NpdG9yeSBhbmQgaW5zdGFsbCB0aGUgZGVwZW5kZW5j
eSBtb2R1bGVzLgoKYGBgYmFzaAojIENyZWF0ZSBhIGZvbGRlciBhbmQgbW92
ZS4KJCBta2RpciBiaWxsYm9hcmQuanMgJiYgY2QgYmlsbGJvYXJkLmpzCgoj
IENsb25lIHRoZSByZXBvc2l0b3J5LgokIGdpdCBjbG9uZSBodHRwczovL2dp
dGh1Yi5jb20vbmF2ZXIvYmlsbGJvYXJkLmpzLmdpdApgYGAKCiMjIyMgMi4g
SW5zdGFsbCBkZXBlbmRlbmNpZXMKYG5wbWAgYW5kIGBZYXJuYCBhcmUgc3Vw
cG9ydGVkLgoKYGBgCiMgSW5zdGFsbCB0aGUgZGVwZW5kZW5jeSBtb2R1bGVz
LgokIG5wbSBpbnN0YWxsCgojIG9yCiQgeWFybgpgYGAKCiMjIyMgMy4gQnVp
bGQKClVzZSBucG0gc2NyaXB0IHRvIGJ1aWxkIGJpbGxib2FyZC5qcwoKYGBg
YmFzaAojIFJ1biB3ZWJwYWNrLWRldi1zZXJ2ZXIgZm9yIGRldmVsb3BtZW50
CiQgbnBtIHN0YXJ0CgojIEJ1aWxkCiQgbnBtIHJ1biBidWlsZAoKIyBHZW5l
cmF0ZSBqc2RvYwokIG5wbSBydW4ganNkb2MKYGBgCgpUd28gZm9sZGVycyB3
aWxsIGJlIGNyZWF0ZWQgYWZ0ZXIgdGhlIGJ1aWxkIGlzIGNvbXBsZXRlZC4K
Ci0gKipkaXN0KiogZm9sZGVyOiBJbmNsdWRlcyB0aGUgKipiaWxsYm9hcmQu
anMqKiBhbmQgKipiaWxsYm9hcmQubWluLmpzKiogZmlsZXMuCi0gKipkb2Mq
KiBmb2xkZXI6IEluY2x1ZGVzIEFQSSBkb2N1bWVudGF0aW9uLiBUaGUgaG9t
ZSBwYWdlIGZvciB0aGUgZG9jdW1lbnRhdGlvbiBpcyAqKmRvYy9pbmRleC5o
dG1sKiouCgojIyMgTGludGluZwoKVG8gbWFpbnRhaW4gdGhlIHNhbWUgY29k
ZSBzdHlsZSBhbmQgcXVhbGl0eSwgd2UgYWRvcHRlZCBbRVNMaW50XShodHRw
czovL2VzbGludC5vcmcvKS4gVGhlIFtydWxlc10oaHR0cHM6Ly9naXRodWIu
Y29tL25hdmVyL2VzbGludC1jb25maWctbmF2ZXIvdHJlZS9tYXN0ZXIvcnVs
ZXMpIGFyZSBiYXNlZCBvbiB0aGUgW0FpcmJuYiBKYXZhU2NyaXB0IFN0eWxl
IEd1aWRlXShodHRwczovL2dpdGh1Yi5jb20vYWlyYm5iL2phdmFzY3JpcHQp
IHdpdGggc29tZSBtb2RpZmljYXRpb25zLgpTZXR1cCB5b3VyIGVkaXRvciBm
b3IgY2hlY2sgb3IgcnVuIHRoZSBiZWxvdyBjb21tYW5kIGZvciBsaW50aW5n
LgoKYGBgYmFzaAokIG5wbSBydW4gbGludApgYGAKCiMjIyBUZXN0CgpPbmNl
IHlvdSBjcmVhdGVkIGEgYnJhbmNoIGFuZCBmaW5pc2hlZCB0aGUgZGV2ZWxv
cG1lbnQsIHlvdSBtdXN0IHBlcmZvcm0gYSB0ZXN0IHdpdGggYG5wbSB0ZXN0
YCBjb21tYW5kIGJlZm9yZSB0aGUgcHVzaCB0byBhIHJlbW90ZSByZXBvc2l0
b3J5LgoKYGBgYmFzaAokIG5wbSB0ZXN0CmBgYApSdW5uaW5nIHRoZSBgbnBt
IHRlc3RgIGNvbW1hbmQgd2lsbCBzdGFydCBbTW9jaGFdKGh0dHBzOi8vbW9j
aGFqcy5vcmcvKSB0ZXN0cyB2aWEgW0thcm1hLXJ1bm5lcl0oaHR0cHM6Ly9r
YXJtYS1ydW5uZXIuZ2l0aHViLmlvLykuCgojIyBCdWcgUmVwb3J0CgpJZiB5
b3UgZmluZCBhIGJ1ZywgcGxlYXNlIHJlcG9ydCB0byB1cyBieSBwb3N0aW5n
IFtpc3N1ZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9uYXZlci9iaWxsYm9hcmQu
anMvaXNzdWVzKSBvbiBHaXRIdWIuCgojIyBMaWNlbnNlCmJpbGxib2FyZC5q
cyBpcyByZWxlYXNlZCB1bmRlciB0aGUgW01JVCBsaWNlbnNlXShodHRwczov
L2dpdGh1Yi5jb20vbmF2ZXIvYmlsbGJvYXJkLmpzL2Jsb2IvbWFzdGVyL0xJ
Q0VOU0UpLgoKYGBgCkNvcHlyaWdodCAoYykgMjAxNyB+IHByZXNlbnQgTkFW
RVIgQ29ycC4KClBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUg
b2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkKb2Yg
dGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZp
bGVzICh0aGUgIlNvZnR3YXJlIiksIHRvIGRlYWwKaW4gdGhlIFNvZnR3YXJl
IHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0
YXRpb24gdGhlIHJpZ2h0cwp0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2Us
IHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxs
CmNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29u
cyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcwpmdXJuaXNoZWQgdG8gZG8gc28s
IHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOgoKVGhlIGFi
b3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3Rp
Y2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4KYWxsIGNvcGllcyBvciBzdWJzdGFu
dGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuCgpUSEUgU09GVFdBUkUg
SVMgUFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkg
S0lORCwgRVhQUkVTUyBPUgpJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBM
SU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwK
RklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJ
TkdFTUVOVC4gIElOIE5PIEVWRU5UIFNIQUxMIFRIRQpBVVRIT1JTIE9SIENP
UFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1B
R0VTIE9SIE9USEVSCkxJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04g
T0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00s
Ck9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9S
IFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4KVEhFIFNPRlRXQVJFLgpg
YGAKCjwhLS0gYmFkZ2VzIC0tPgpbYmFkZ2UtZG93bmxvYWRdOiBodHRwczov
L2ltZy5zaGllbGRzLmlvL25wbS9kbS9iaWxsYm9hcmQuanMuc3ZnP3N0eWxl
PWZsYXQKW2JhZGdlLWpzRGVsaXZyXTogaHR0cHM6Ly9kYXRhLmpzZGVsaXZy
LmNvbS92MS9wYWNrYWdlL25wbS9iaWxsYm9hcmQuanMvYmFkZ2U/c3R5bGU9
cm91bmRlZApbYmFkZ2UtYnVpbGQtc3RhdHVzXTogaHR0cHM6Ly90cmF2aXMt
Y2kub3JnL25hdmVyL2JpbGxib2FyZC5qcy5zdmc/YnJhbmNoPW1hc3Rlcgpb
YmFkZ2UtY292ZXJhZ2VdOiBodHRwczovL2NvdmVyYWxscy5pby9yZXBvcy9n
aXRodWIvbmF2ZXIvYmlsbGJvYXJkLmpzL2JhZGdlLnN2ZwpbYmFkZ2UtZ2td
OiBodHRwczovL2JhZGdlcy5ncmVlbmtlZXBlci5pby9uYXZlci9iaWxsYm9h
cmQuanMuc3ZnCltiYWRnZS1nemlwLXNpemVdOiBodHRwOi8vaW1nLmJhZGdl
c2l6ZS5pby9odHRwczovL3VucGtnLmNvbS9iaWxsYm9hcmQuanMvZGlzdC9i
aWxsYm9hcmQubWluLmpzP2NvbXByZXNzaW9uPWd6aXAKW2JhZGdlLWxhdGVz
dF06IGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vbnBtL3YvYmlsbGJvYXJkLmpz
L2xhdGVzdC5zdmcKW2JhZGdlLW5leHRdOiBodHRwczovL2ltZy5zaGllbGRz
LmlvL25wbS92L2JpbGxib2FyZC5qcy9uZXh0LnN2ZwpbYmFkZ2Utc2VtYW50
aWMtcmVsZWFzZV06IGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvJTIw
JTIwJUYwJTlGJTkzJUE2JUYwJTlGJTlBJTgwLXNlbWFudGljLS1yZWxlYXNl
LWUxMDA3OS5zdmcKCjwhLS0gbGlua3MgLS0+CltsaW5rLWRvd25sb2FkXTog
aHR0cHM6Ly9ucG0tc3RhdC5jb20vY2hhcnRzLmh0bWw/cGFja2FnZT1iaWxs
Ym9hcmQuanMmZnJvbT0yMDE3LTA2LTA4CltsaW5rLWpzRGVsaXZyXTogaHR0
cHM6Ly93d3cuanNkZWxpdnIuY29tL3BhY2thZ2UvbnBtL2JpbGxib2FyZC5q
cwpbbGluay12ZXJzaW9uXTogaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2th
Z2UvYmlsbGJvYXJkLmpzCltsaW5rLWJ1aWxkLXN0YXR1c106IGh0dHBzOi8v
dHJhdmlzLWNpLm9yZy9uYXZlci9iaWxsYm9hcmQuanMKW2xpbmstY292ZXJh
Z2VdOiBodHRwczovL2NvdmVyYWxscy5pby9naXRodWIvbmF2ZXIvYmlsbGJv
YXJkLmpzCltsaW5rLWdrXTogaHR0cHM6Ly9ncmVlbmtlZXBlci5pby8KW2xp
bmstZ3ppcC1zaXplXTogaHR0cHM6Ly91bnBrZy5jb20vYmlsbGJvYXJkLmpz
L2Rpc3QvYmlsbGJvYXJkLm1pbi5qcwpbbGluay1zZW1hbnRpYy1yZWxlYXNl
XTogaHR0cHM6Ly9naXRodWIuY29tL3NlbWFudGljLXJlbGVhc2Uvc2VtYW50
aWMtcmVsZWFzZQoKWyFbRk9TU0EgU3RhdHVzXShodHRwczovL2FwcC5mb3Nz
YS5pby9hcGkvcHJvamVjdHMvZ2l0JTJCZ2l0aHViLmNvbSUyRm5hdmVyJTJG
YmlsbGJvYXJkLmpzLnN2Zz90eXBlPWxhcmdlKV0oaHR0cHM6Ly9hcHAuZm9z
c2EuaW8vcHJvamVjdHMvZ2l0JTJCZ2l0aHViLmNvbSUyRm5hdmVyJTJGYmls
bGJvYXJkLmpzP3JlZj1iYWRnZV9sYXJnZSkK
",,3728,"bGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczoKICAtICIxMCIKZGlzdDogdHJ1
c3R5ICMgbmVlZHMgVWJ1bnR1IFRydXN0eQpzdWRvOiBmYWxzZSAgIyBubyBu
ZWVkIGZvciB2aXJ0dWFsaXphdGlvbi4KCmJlZm9yZV9pbnN0YWxsOgogIC0g
bnBtIGluc3RhbGwgLWcgbnBtQGxhdGVzdAogIC0gbnBtIGluc3RhbGwgLWcg
Z3JlZW5rZWVwZXItbG9ja2ZpbGVAMQppbnN0YWxsOgogIC0gbnBtIGluc3Rh
bGwKCmNhY2hlOgogIHlhcm46IHRydWUKICBucG06IHRydWUKICBkaXJlY3Rv
cmllczoKICAgIC0gJEhPTUUvLm5wbQoKYmVmb3JlX3NjcmlwdDoKICAtIGdy
ZWVua2VlcGVyLWxvY2tmaWxlLXVwZGF0ZQoKYWZ0ZXJfc2NyaXB0OgogIC0g
Z3JlZW5rZWVwZXItbG9ja2ZpbGUtdXBsb2FkCgpzdGFnZXM6CiAgLSBsaW50
CiAgLSB0ZXN0CiAgLSByZWxlYXNlCgpqb2JzOgogIGluY2x1ZGU6CiAgICAt
IHN0YWdlOiBsaW50CiAgICAgIHNjcmlwdDoKICAgICAgICAtIG5wbSBydW4g
bGludAogICAgLSBzdGFnZTogdGVzdAogICAgICBzdWRvOiByZXF1aXJlZAog
ICAgICBhZGRvbnM6CiAgICAgICAgY2hyb21lOiBzdGFibGUgIyBpbnN0YWxs
IGNocm9tZSBzdGFibGUuCiAgICAgIHNjcmlwdDoKICAgICAgICAtIG5wbSBy
dW4gY292ZXJhZ2UKICAgICAgYWZ0ZXJfc3VjY2VzczoKICAgICAgICAtIG5w
bSBydW4gY292ZXJhbGxzCiAgICAtIHN0YWdlOiByZWxlYXNlCiAgICAgIHNj
cmlwdDogc2tpcAogICAgICBkZXBsb3k6CiAgICAgICAgcHJvdmlkZXI6IHNj
cmlwdAogICAgICAgIHNraXBfY2xlYW51cDogdHJ1ZQogICAgICAgIHNjcmlw
dDoKICAgICAgICAgIC0gbnBtIHJ1biByZWxlYXNlCiAgICAgICAgb246CiAg
ICAgICAgICByZXBvOiBuYXZlci9iaWxsYm9hcmQuanMKICAgICAgICAgIGFs
bF9icmFuY2hlczogdHJ1ZQogICAgICAgICAgY29uZGl0aW9uOiAkVFJBVklT
X0JSQU5DSCA9fiBebGF0ZXN0fG5leHQkCiAgICAgIGFmdGVyX2RlcGxveToK
ICAgICAgICAtIGJhc2ggLi9jb25maWcvZGVwbG95LnNoCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'About-SwiftUI',190707613,"b'Gathering all info published, both by Apple and by others, about new framework SwiftUI. '",b'Swift',1,3727,,143,False,b'https://api.github.com/repos/Juanpe/About-SwiftUI/forks',"IVtdKEFzc2V0cy9iYW5uZXJfYWJvdXRfc3dpZnQuanBnKQoKU2luY2UgcGFz
dCBBcHBsZSdzIGtleW5vdGUsIHdoZXJlICoqU3dpZnRVSSoqIHdhcyBhbm5v
dW5jZWQsIHRvbnMgb2YgZG9jcywgZXhhbXBsZXMsIHZpZGVvcyBhbmQgdHV0
b3JpYWxzIGhhdmUgYXBwZWFyZWQuIFRoZSBnb2FsIG9mIHRoaXMgcmVwb3Np
dG9yeSBpcyB0byBnYXRoZXIgYWxsIHRoaXMgaW5mb3JtYXRpb24gaGF2aW5n
IGFuIHVuaXF1ZSBwbGFjZSB3aGVyZSBsb29raW5nIGZvciBpbmZvIGFib3V0
ICoqU3dpZnRVSSoqLgoKKipTd2lmdFVJKiogaXMgYW4gaW5ub3ZhdGl2ZSwg
ZXhjZXB0aW9uYWxseSBzaW1wbGUgd2F5IHRvIGJ1aWxkIHVzZXIgaW50ZXJm
YWNlcyBhY3Jvc3MgYWxsIEFwcGxlIHBsYXRmb3JtcyB3aXRoIHRoZSBwb3dl
ciBvZiBTd2lmdC4gQnVpbGQgdXNlciBpbnRlcmZhY2VzIGZvciBhbnkgQXBw
bGUgZGV2aWNlIHVzaW5nIGp1c3Qgb25lIHNldCBvZiB0b29scyBhbmQgQVBJ
cy4gV2l0aCBhIGRlY2xhcmF0aXZlIFN3aWZ0IHN5bnRheCB0aGF04oCZcyBl
YXN5IHRvIHJlYWQgYW5kIG5hdHVyYWwgdG8gd3JpdGUsIFN3aWZ0VUkgd29y
a3Mgc2VhbWxlc3NseSB3aXRoIG5ldyBYY29kZSBkZXNpZ24gdG9vbHMgdG8g
a2VlcCB5b3VyIGNvZGUgYW5kIGRlc2lnbiBwZXJmZWN0bHkgaW4gc3luYy4g
QXV0b21hdGljIHN1cHBvcnQgZm9yIER5bmFtaWMgVHlwZSwgRGFyayBNb2Rl
LCBsb2NhbGl6YXRpb24sIGFuZCBhY2Nlc3NpYmlsaXR5IG1lYW5zIHlvdXIg
Zmlyc3QgbGluZSBvZiAqKlN3aWZ0VUkqKiBjb2RlIGlzIGFscmVhZHkgdGhl
IG1vc3QgcG93ZXJmdWwgVUkgY29kZSB5b3XigJl2ZSBldmVyIHdyaXR0ZW4u
CgpbIVtUd2l0dGVyXShodHRwczovL2ltZy5zaGllbGRzLmlvL3R3aXR0ZXIv
dXJsL2h0dHBzL2dpdGh1Yi5jb20vSnVhbnBlL0Fib3V0LVN3aWZ0VUkuc3Zn
P3N0eWxlPXNvY2lhbCldKGh0dHBzOi8vdHdpdHRlci5jb20vaW50ZW50L3R3
ZWV0P3RleHQ9V293JTIwVGhpcyUyMGxpYnJhcnklMjBpcyUyMGF3ZXNvbWU6
JnVybD1odHRwcyUzQSUyRiUyRmdpdGh1Yi5jb20lMkZKdWFucGUlMkZBYm91
dC1Td2lmdFVJKQoKIyMjIFRhYmxlIG9mIGNvbnRlbnRzCgoqIFvvo78gYnkg
QXBwbGVdKCMtYnktYXBwbGUpCiAgKiBbQmV0YSBTb2Z0d2FyZV0oIy1iZXRh
LXNvZnR3YXJlKQogICogW0RvY3VtZW50YXRpb25dKCMtZG9jdW1lbnRhdGlv
bikKICAqIFtXV0RDIFZpZGVvc10oIy13d2RjLXZpZGVvcykKICAqIFtUdXRv
cmlhbHNdKCMtdHV0b3JpYWxzKQoqIFtCeSB0aGUgY29tbXVuaXR5XSgjLWJ5
LXRoZS1jb21tdW5pdHkpCiAgKiBbQm9va3NdKCMtYm9va3MpCiAgKiBbQ291
cnNlc10oIy1jb3Vyc2VzKQogICogW0FydGljbGVzXSgjLWFydGljbGVzKQog
ICogW1hjb2RlIEV4dGVuc2lvbnNdKCMteGNvZGUtZXh0ZW5zaW9ucykKICAq
IFtSZXBvc2l0b3JpZXNdKCMtcmVwb3NpdG9yaWVzKQogICogW1ZpZGVvc10o
Iy12aWRlb3MpCiAgKiBbV2Vic2l0ZXNdKCMtd2Vic2l0ZXMpCiogW0NvbnRy
aWJ1dGluZ10oIy1jb250cmlidXRpbmcpCgojIyDvo78gYnkgQXBwbGUKCiMj
IyMg8J+apyBCZXRhIFNvZnR3YXJlCgoqICoqW1hjb2RlIDExIEJldGFdKGh0
dHBzOi8vZGV2ZWxvcGVyLmFwcGxlLmNvbS9zZXJ2aWNlcy1hY2NvdW50L2Rv
d25sb2FkP3BhdGg9L1dXRENfMjAxOS9YY29kZV8xMV9CZXRhL1hjb2RlXzEx
X0JldGEueGlwKSoqCiogKipbaU9TIDEzIEJldGFdKGh0dHBzOi8vZGV2ZWxv
cGVyLmFwcGxlLmNvbS9kb3dubG9hZC8jaW9zLXJlc3RvcmUtaW1hZ2VzLWlw
aG9uZS1uZXcpKioKKiAqKltpUGFkT1MgMTMgQmV0YV0oaHR0cHM6Ly9kZXZl
bG9wZXIuYXBwbGUuY29tL2Rvd25sb2FkLyNpb3MtcmVzdG9yZS1pbWFnZXMt
aXBhZC1uZXcpKioKKiAqKltNYWNPUyBDYXRhbGluYSAxMC4xNSBCZXRhXSho
dHRwczovL2RldmVsb3Blci5hcHBsZS5jb20vc2VydmljZXMtYWNjb3VudC9k
b3dubG9hZD9wYXRoPS9XV0RDXzIwMTkvbWFjT1NfMTAuMTVfRGV2ZWxvcGVy
X0JldGFfQWNjZXNzX1V0aWxpdHkvbWFjT1NEZXZlbG9wZXJCZXRhQWNjZXNz
VXRpbGl0eS5kbWcpKioKKiAqKlt3YXRjaE9TIDYgQmV0YV0oaHR0cHM6Ly9k
ZXZlbG9wZXIuYXBwbGUuY29tL3NlcnZpY2VzLWFjY291bnQvZG93bmxvYWQ/
cGF0aD0vV1dEQ18yMDE5L3dhdGNoT1NfNl9iZXRhX0NvbmZpZ3VyYXRpb25f
UHJvZmlsZS93YXRjaE9TXzZfQmV0YV9Qcm9maWxlbW9iaWxlY29uZmlnLm1v
YmlsZWNvbmZpZykqKgoKIyMjIyDwn5OaIERvY3VtZW50YXRpb24KKiAqKltT
d2lmdFVJXShodHRwczovL2RldmVsb3Blci5hcHBsZS5jb20veGNvZGUvc3dp
ZnR1aS8pKioKKiAqKltPZmZpY2lhbCBkb2NdKGh0dHBzOi8vZGV2ZWxvcGVy
LmFwcGxlLmNvbS9kb2N1bWVudGF0aW9uL3N3aWZ0dWkpKioKICAqICoqRXNz
ZW50aWFscyoqCiAgICAqICoqW0xlYXJuIHRvIE1ha2UgQXBwcyB3aXRoIFN3
aWZ0VUldKGh0dHBzOi8vZGV2ZWxvcGVyLmFwcGxlLmNvbS90dXRvcmlhbHMv
c3dpZnR1aS90dXRvcmlhbHMpKiouIEZvbGxvdyBhIHNlcmllcyBvZiBndWlk
ZWQgdHV0b3JpYWxzIHRvIGxlYXJuIHRvIG1ha2UgYXBwcyB1c2luZyBTd2lm
dFVJIGFuZCBYY29kZS4KICAqICoqVXNlciBJbnRlcmZhY2UqKgogICAgKiAq
KltWaWV3cyBhbmQgQ29udHJvbHNdKGh0dHBzOi8vZGV2ZWxvcGVyLmFwcGxl
LmNvbS9kb2N1bWVudGF0aW9uL3N3aWZ0dWkvdmlld3NfYW5kX2NvbnRyb2xz
KSoqLiBQcmVzZW50IHlvdXIgY29udGVudCBvbnNjcmVlbiBhbmQgaGFuZGxl
IHVzZXIgaW50ZXJhY3Rpb25zLgogICAgKiAqKltWaWV3IExheW91dCBhbmQg
UHJlc2VudGF0aW9uXShodHRwczovL2RldmVsb3Blci5hcHBsZS5jb20vZG9j
dW1lbnRhdGlvbi9zd2lmdHVpL3ZpZXdfbGF5b3V0X2FuZF9wcmVzZW50YXRp
b24pKiouIENvbWJpbmUgdmlld3MgaW4gc3RhY2tzLCBnZW5lcmF0ZSBncm91
cHMgYW5kIGxpc3RzIG9mIHZpZXdzIGR5bmFtaWNhbGx5LCBhbmQgZGVmaW5l
IHZpZXcgcHJlc2VudGF0aW9ucyBhbmQgaGllcmFyY2h5LgogICAgKiAqKltE
cmF3aW5nIGFuZCBBbmltYXRpb25dKGh0dHBzOi8vZGV2ZWxvcGVyLmFwcGxl
LmNvbS9kb2N1bWVudGF0aW9uL3N3aWZ0dWkvZHJhd2luZ19hbmRfYW5pbWF0
aW9uKSoqLiBFbmhhbmNlIHlvdXIgdmlld3Mgd2l0aCBjb2xvcnMsIHNoYXBl
cywgYW5kIHNoYWRvd3MsIGFuZCBjdXN0b21pemUgYW5pbWF0ZWQgdHJhbnNp
dGlvbnMgYmV0d2VlbiB2aWV3IHN0YXRlcy4KICAgICogKipbRnJhbWV3b3Jr
IEludGVncmF0aW9uXShodHRwczovL2RldmVsb3Blci5hcHBsZS5jb20vZG9j
dW1lbnRhdGlvbi9zd2lmdHVpL2ZyYW1ld29ya19pbnRlZ3JhdGlvbikqKi4g
SW50ZWdyYXRlIFN3aWZ0VUkgdmlld3MgaW50byBleGlzdGluZyBhcHBzLCBh
bmQgZW1iZWQgQXBwS2l0LCBVSUtpdCwgYW5kIFdhdGNoS2l0IHZpZXdzIGFu
ZCBjb250cm9sbGVycyBpbnRvIFN3aWZ0VUkgdmlldyBoaWVyYXJjaGllcy4K
ICAqICoqRGF0YSBhbmQgRXZlbnRzKioKICAgICogKipbU3RhdGUgYW5kIERh
dGEgRmxvd10oaHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tL2RvY3VtZW50
YXRpb24vc3dpZnR1aS9zdGF0ZV9hbmRfZGF0YV9mbG93KSoqLiBDb250cm9s
IGFuZCByZXNwb25kIHRvIHRoZSBmbG93IG9mIGRhdGEgYW5kIGNoYW5nZXMg
d2l0aGluIHlvdXIgYXBw4oCZcyBtb2RlbHMuCiAgICAqICoqW0dlc3R1cmVz
XShodHRwczovL2RldmVsb3Blci5hcHBsZS5jb20vZG9jdW1lbnRhdGlvbi9z
d2lmdHVpL2dlc3R1cmVzKSoqLiBEZWZpbmUgaW50ZXJhY3Rpb25zIGZyb20g
dGFwcywgY2xpY2tzLCBhbmQgc3dpcGVzIHRvIGZpbmUtZ3JhaW5lZCBnZXN0
dXJlcy4KICAqICoqUHJldmlld3MgaW4gWGNvZGUqKgogICAgKiAqKltQcmV2
aWV3c10oaHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tL2RvY3VtZW50YXRp
b24vc3dpZnR1aS9wcmV2aWV3cykqKi4gR2VuZXJhdGUgZHluYW1pYywgaW50
ZXJhY3RpdmUgcHJldmlld3Mgb2YgeW91ciBjdXN0b20gdmlld3MuCgojIyMj
IPCfk7kgV1dEQyB2aWRlb3MKCiogKipbSW50cm9kdWNpbmcgU3dpZnRVSTog
QnVpbGRpbmcgWW91ciBGaXJzdCBBcHBdKGh0dHBzOi8vZGV2ZWxvcGVyLmFw
cGxlLmNvbS92aWRlb3MvcGxheS93d2RjMjAxOS8yMDQvKSoqCiogKipbU3dp
ZnRVSSBFc3NlbnRpYWxzXShodHRwczovL2RldmVsb3Blci5hcHBsZS5jb20v
dmlkZW9zL3BsYXkvd3dkYzIwMTkvMjE2KSoqIPCfjJ8KKiAqKltEYXRhIEZs
b3cgVGhyb3VnaCBTd2lmdFVJXShodHRwczovL2RldmVsb3Blci5hcHBsZS5j
b20vdmlkZW9zL3BsYXkvd3dkYzIwMTkvMjI2KSoqCiogKipbQnVpbGRpbmcg
Q3VzdG9tIFZpZXdzIHdpdGggU3dpZnRVSV0oaHR0cHM6Ly9kZXZlbG9wZXIu
YXBwbGUuY29tL3ZpZGVvcy9wbGF5L3d3ZGMyMDE5LzIzNykqKiDwn4yfCiog
KipbSW50ZWdyYXRpbmcgU3dpZnRVSV0oaHR0cHM6Ly9kZXZlbG9wZXIuYXBw
bGUuY29tL3ZpZGVvcy9wbGF5L3d3ZGMyMDE5LzIzMSkqKgoqICoqW0FjY2Vz
c2liaWxpdHkgaW4gU3dpZnRVSV0oaHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUu
Y29tL3ZpZGVvcy9wbGF5L3d3ZGMyMDE5LzIzOCkqKgoqICoqW1N3aWZ0VUkg
T24gQWxsIERldmljZXNdKGh0dHBzOi8vZGV2ZWxvcGVyLmFwcGxlLmNvbS92
aWRlb3MvcGxheS93d2RjMjAxOS8yNDApKioKKiAqKltTd2lmdFVJIG9uIHdh
dGNoT1NdKGh0dHBzOi8vZGV2ZWxvcGVyLmFwcGxlLmNvbS92aWRlb3MvcGxh
eS93d2RjMjAxOS8yMTkpKioKKiAqKltNYXN0ZXJpbmcgWGNvZGUgUHJldmll
d3NdKGh0dHBzOi8vZGV2ZWxvcGVyLmFwcGxlLmNvbS92aWRlb3MvcGxheS93
d2RjMjAxOS8yMzMpKioKCl/wn4yfIG1vc3QgaW50ZXJlc3RpbmdfCgojIyMj
IPCfkanwn4+84oCN8J+PqyBUdXRvcmlhbHMKCiogKipbQ3JlYXRpbmcgYW5k
IENvbWJpbmluZyBWaWV3c10oaHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29t
L3R1dG9yaWFscy9zd2lmdHVpL2NyZWF0aW5nLWFuZC1jb21iaW5pbmctdmll
d3MpKioKKiAqKltXb3JraW5nIHdpdGggVUkgQ29udHJvbHNdKGh0dHBzOi8v
ZGV2ZWxvcGVyLmFwcGxlLmNvbS90dXRvcmlhbHMvc3dpZnR1aS93b3JraW5n
LXdpdGgtdWktY29udHJvbHMpKioKKiAqKltIYW5kbGluZyBVc2VyIElucHV0
XShodHRwczovL2RldmVsb3Blci5hcHBsZS5jb20vdHV0b3JpYWxzL3N3aWZ0
dWkvaGFuZGxpbmctdXNlci1pbnB1dCkqKgoqICoqW0J1aWxkaW5nIExpc3Rz
IGFuZCBOYXZpZ2F0aW9uXShodHRwczovL2RldmVsb3Blci5hcHBsZS5jb20v
dHV0b3JpYWxzL3N3aWZ0dWkvYnVpbGRpbmctbGlzdHMtYW5kLW5hdmlnYXRp
b24pKioKKiAqKltEcmF3aW5nIFBhdGhzIGFuZCBTaGFwZXNdKGh0dHBzOi8v
ZGV2ZWxvcGVyLmFwcGxlLmNvbS90dXRvcmlhbHMvc3dpZnR1aS9kcmF3aW5n
LXBhdGhzLWFuZC1zaGFwZXMpKioKKiAqKltBbmltYXRpbmcgVmlld3MgYW5k
IFRyYW5zaXRpb25zXShodHRwczovL2RldmVsb3Blci5hcHBsZS5jb20vdHV0
b3JpYWxzL3N3aWZ0dWkvYW5pbWF0aW5nLXZpZXdzLWFuZC10cmFuc2l0aW9u
cykqKgoqICoqW0NvbXBvc2luZyBDb21wbGV4IEludGVyZmFjZXNdKGh0dHBz
Oi8vZGV2ZWxvcGVyLmFwcGxlLmNvbS90dXRvcmlhbHMvc3dpZnR1aS9jb21w
b3NpbmctY29tcGxleC1pbnRlcmZhY2VzKSoqCiogKipbSW50ZXJmYWNpbmcg
d2l0aCBVSUtpdF0oaHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tL3R1dG9y
aWFscy9zd2lmdHVpL2ludGVyZmFjaW5nLXdpdGgtdWlraXQpKioKCiMjIPCf
jI4gYnkgdGhlIGNvbW11bml0eQoKIyMjIyDwn5OXIEJvb2tzCiogKipbU3dp
ZnQgVUkgYnkgVHV0b3JpYWxzXShodHRwczovL3N0b3JlLnJheXdlbmRlcmxp
Y2guY29tL3Byb2R1Y3RzL3N3aWZ0dWktYnktdHV0b3JpYWxzKSoqIGJ5IFtS
YXkgd2VuZGVybGljaF0oaHR0cHM6Ly93d3cucmF5d2VuZGVybGljaC5jb20v
KQoqICoqW0NvbWJpbmU6IEFzeW5jaHJvbm91cyBQcm9ncmFtbWluZyB3aXRo
IFN3aWZ0XShodHRwczovL3N0b3JlLnJheXdlbmRlcmxpY2guY29tL3Byb2R1
Y3RzL2NvbWJpbmUtYXN5bmNocm9ub3VzLXByb2dyYW1taW5nLXdpdGgtc3dp
ZnQpKiogYnkgW1JheSB3ZW5kZXJsaWNoXShodHRwczovL3d3dy5yYXl3ZW5k
ZXJsaWNoLmNvbS8pCiogKipbQ2F0YWx5c3QgYnkgVHV0b3JpYWxzXShodHRw
czovL3N0b3JlLnJheXdlbmRlcmxpY2guY29tL3Byb2R1Y3RzL2NhdGFseXN0
LWJ5LXR1dG9yaWFscykqKiBieSBbUmF5IHdlbmRlcmxpY2hdKGh0dHBzOi8v
d3d3LnJheXdlbmRlcmxpY2guY29tLykKKiAqKltTd2lmdFVJIGJ5IEV4YW1w
bGUgLSBCb29rXShodHRwczovL2d1bXJvYWQuY29tL2wvc3dpZnR1aSkqKiBi
eSBbSGFja2luZyB3aXRoIFN3aWZ0XShodHRwczovL3R3aXR0ZXIuY29tL3R3
b3N0cmF3cykKKiAqKltTd2lmdFVJIFZpZXdzIC0gVmlzdWFsIFF1aWNrc3Rh
cnQgUmVmZXJlbmNlXShodHRwczovL3d3dy5iaWdtb3VudGFpbnN0dWRpby5j
b20vc3dpZnR1aS12aWV3cy1ib29rKSoqIGJ5IFtCaWcgTW91bnRhaW4gU3R1
ZGlvXShodHRwczovL3R3aXR0ZXIuY29tL2JpZ210bnN0dWRpbykKKiAqKltV
c2luZyBDb21iaW5lXShodHRwczovL2hlY2tqLmdpdGh1Yi5pby9zd2lmdHVp
LW5vdGVzLykqKiAoW1BERi9lUHViIGF0IEd1bXJvYWRdKGh0dHBzOi8vZ3Vt
LmNvL3VzaW5nY29tYmluZSkgYnkgW0pvc2VwaCBIZWNrXShodHRwczovL3Jo
b25hYnd5LmNvbS8pCiogKirwn4eo8J+Hs1tTd2lmdFVJ5a6e5oiY77yM5bim
5L2g5YWl6Zeo6Iu55p6c5pyA5paw55qEVUnlvIDlj5HmoYbmnrYgfCBTd2lm
dFVJIGluIEFjdGlvbiwgYnJpbmcgeW91IHRoZSBsYXRlc3QgVUkgZGV2ZWxv
cG1lbnQgZnJhbWV3b3JrIGZyb20gQXBwbGVdKGh0dHBzOi8vanVlamluLmlt
L2Jvb2svNWRiNmIwZmE2ZmI5YTAyMDQ0NmM1Mjc4KSoqIGJ5IFt6aXhpYW8y
MzNdKGh0dHBzOi8vanVlamluLmltL3VzZXIvNWRhYTczYjU1MTg4MjUwODg2
NmU5NzNiKQoKIyMjIyDwn46TIENvdXJzZXMKKiAqKltMZWFybiBTd2lmdFVJ
XShodHRwczovL2Rlc2lnbmNvZGUuaW8vc3dpZnR1aS1jb3Vyc2UpKiouIGJ5
IFtNZW5nIFRvXShodHRwczovL3R3aXR0ZXIuY29tL21lbmd0bykKKiAqKltT
d2lmdFVJIFF1aWNrIFN0YXJ0IEd1aWRlIHdpdGggaU9TIDEzIGFuZCBYY29k
ZSAxMV0oaHR0cHM6Ly93d3cudWRlbXkuY29tL3N3aWZ0dWktcXVpY2stc3Rh
cnQtZ3VpZGUtd2l0aC1pb3MtMTMtYW5kLXhjb2RlLTExLz9jb3Vwb25Db2Rl
PUpVQU5HSVRIVUIpKiogLiBieSBbRGV2VGVjaGllIEludGVyYWN0aXZlXSho
dHRwczovL3d3dy51ZGVteS5jb20vdXNlci9hbm9vcC10b21hci8pCiogKirw
n4eo8J+Hs1tTd2lmdFVJIOS4reaWh+aVmeeoiyB8IFN3aWZ0VUktVHV0b3Jp
YWxzXShodHRwczovL2dpdGh1Yi5jb20vV2lsbGllV2FuZ1dlaS9Td2lmdFVJ
LVR1dG9yaWFscykqKi4gYnkgW1dpbGxpZVdhbmdXZWldKGh0dHBzOi8vZ2l0
aHViLmNvbS9XaWxsaWVXYW5nV2VpKQoKIyMjIyDwn5OwIEFydGljbGVzCiog
KipbU3dpZnRVSSBieSBFeGFtcGxlXShodHRwczovL3d3dy5oYWNraW5nd2l0
aHN3aWZ0LmNvbS9xdWljay1zdGFydC9zd2lmdHVpKSoqIGJ5IFtIYWNraW5n
IHdpdGggU3dpZnRdKGh0dHBzOi8vdHdpdHRlci5jb20vdHdvc3RyYXdzKQoq
ICoqW0dldCBzdGFydGVkIHdpdGggU3dpZnRVSV0oaHR0cHM6Ly93d3cuaGFj
a2luZ3dpdGhzd2lmdC5jb20vYXJ0aWNsZXMvMTk0L2dldC1zdGFydGVkLXdp
dGgtc3dpZnR1aSkqKiBieSBbSGFja2luZyB3aXRoIFN3aWZ0XShodHRwczov
L3R3aXR0ZXIuY29tL3R3b3N0cmF3cykKKiAqKltIaWdoZXItT3JkZXItQ29t
cG9uZW50cyBpbiBTd2lmdFVJXShodHRwczovL21lZGl1bS5jb20vQGFuZHJl
aXZpbGxhc2FuYS9zd2lmdHVpLXJldXNhYmxlLWNvbXBvbmVudHMtaGlnaGVy
LW9yZGVyLWNvbXBvbmVudHMtMTkyYzY1Mzc1YzM2P3Bvc3RQdWJsaXNoZWRU
eXBlPWluaXRpYWwpKiogYnkgW0FuZHJlaSBWaWxsYXNhbmFdKGh0dHBzOi8v
d3d3LmxpbmtlZGluLmNvbS9pbi9hbmRyZWktdmlsbGFzYW5hLTVhMDZhMjEx
OS8pCiogKipbU3dpZnRVSeKAmXMgcmVsYXRpb25zaGlwIHRvIFVJS2l0IGFu
ZCBBcHBLaXRdKGh0dHBzOi8vd3dkY2J5c3VuZGVsbC5jb20vMjAxOS9zd2lm
dHVpLXJlbGF0aW9uc2hpcC10by11aWtpdC1hcHBraXQvKSoqIGJ5IFtAU3dp
ZnRCeVN1bmRlbGxdKGh0dHBzOi8vdHdpdHRlci5jb20vc3dpZnRieXN1bmRl
bGwpCiogKipbQW5zd2VycyB0byB0aGUgbW9zdCBjb21tb24gcXVlc3Rpb25z
IGFib3V0IFN3aWZ0VUldKGh0dHBzOi8vd3dkY2J5c3VuZGVsbC5jb20vMjAx
OS9zd2lmdHVpLWNvbW1vbi1xdWVzdGlvbnMvKSoqIGJ5IFtAU3dpZnRCeVN1
bmRlbGxdKGh0dHBzOi8vdHdpdHRlci5jb20vc3dpZnRieXN1bmRlbGwpCiog
KipbQSBmaXJzdCBsb29rIGF0IFN3aWZ0VUk6IEFwcGxl4oCZcyBkZWNsYXJh
dGl2ZSBuZXcgVUkgZnJhbWV3b3JrXShodHRwczovL3d3ZGNieXN1bmRlbGwu
Y29tLzIwMTkvc3dpZnR1aS1maXJzdC1sb29rLykqKiBieSBbQFN3aWZ0QnlT
dW5kZWxsXShodHRwczovL3R3aXR0ZXIuY29tL3N3aWZ0YnlzdW5kZWxsKQoq
ICoqW0luc2lkZSBTd2lmdFVJJ3MgRGVjbGFyYXRpdmUgU3ludGF4J3MgQ29t
cGlsZXIgTWFnaWNdKGh0dHBzOi8vc3dpZnRyb2Nrcy5jb20vaW5zaWRlLXN3
aWZ0dWktY29tcGlsZXItbWFnaWMuaHRtbCkqKiBieSBbQnJ1bm8gUm9jaGFd
KGh0dHBzOi8vdHdpdHRlci5jb20vcm9ja3RoZWJydW5vKQoqICoqW01ha2lu
ZyByZWFsLXdvcmxkIGFwcCB3aXRoIFN3aWZ0VUldKGh0dHBzOi8vbWVjaWQu
Z2l0aHViLmlvLzIwMTkvMDYvMDUvc3dpZnR1aS1tYWtpbmctcmVhbC13b3Js
ZC1hcHAvKSoqIGJ5IFtNYWppZCBKYWJyYXlpbG92XShodHRwczovL3R3aXR0
ZXIuY29tL21lY2lkKQoqICoqW1N3aWZ0VUkgQXJlIHdlIHNheWluZyBnb29k
YnllIHRvIElCKFVJU3Rvcnlib2FyZCk/XShodHRwczovL21lZGl1bS5jb20v
QHRoZW1lZG84MDAwL3N3aWZ0dWktYXJlLXdlLXNheWluZy1nb29kYnllLXRv
LWliLTcxODAzNWU4M2IwNykqKiBieSBbTW9oYW1tYWQgU2F3YWxoYV0oaHR0
cHM6Ly9tZWRpdW0uY29tL0B0aGVtZWRvODAwMCkKKiAqKltIb3cgVG8gTWFr
ZSBhIFNpbXBsZSBDb3VudGRvd24gVGltZXIgd2l0aCBTd2lmdFVJXShodHRw
czovL21lZGl1bS5jb20vYmV0dGVyLXByb2dyYW1taW5nL21ha2UtYS1zaW1w
bGUtY291bnRkb3duLXdpdGgtdGltZXItYW5kLXN3aWZ0dWktM2NlMzU1YjU0
OTg2KSoqIGJ5IFtBbnRvaW5lIEJhcnJhdWx0XShodHRwczovL3R3aXR0ZXIu
Y29tL19hbnRfb25lKQoqICoqW1R1dG9yaWFsOiBIb3cgdG8gc2V0dXAgYSBT
d2lmdFVJIHByb2plY3RdKGh0dHBzOi8vbWVkaXVtLmNvbS9AbWFydGlubGFz
ZWsvc3dpZnR1aS1nZXR0aW5nLXN0YXJ0ZWQtMzcyMzg5ZmZmNDIzKSoqIGJ5
IFtNYXJ0aW4gTGFzZWtdKGh0dHBzOi8vdHdpdHRlci5jb20vTWFydGluTGFz
ZWspCiogKipbV2hhdCBTd2lmdFVJIE1lYW5zIGZvciBGbHV0dGVyXShodHRw
czovL21lZGl1bS5jb20vZmx1dHRlci1ueWMvd2hhdC1zd2lmdHVpLW1lYW5z
LWZvci1mbHV0dGVyLTZkNTg5OGY3YWRmNykqKiBieSBbTWFydGluIFJ5YmFr
XShodHRwczovL3R3aXR0ZXIuY29tL21hcnRpbl9yeWJhaykKKiAqKltJbnRy
byB0byBTd2lmdFVJXShodHRwczovL21lZGl1bS5jb20vQHNhbnRvc2hib3Ry
ZTAxL2ludHJvLXRvLXN3aWZ0dWktYjI4NTgwODg0MmQ1KSoqIGJ5IFtTYW50
b3NoIEJvdHJlXShodHRwczovL21lZGl1bS5jb20vQHNhbnRvc2hib3RyZTAx
KQoqICoqW1NGIFN5bWJvbHMgaW4gaU9TIDEzXShodHRwczovL21lZGl1bS5j
b20vQGNyYWlnZ3J1bW1pdHQvc2Ytc3ltYm9scy1pbi1pb3MtMTMtNTVlNWZl
YmY2ZGI2KSoqIGJ5IFtjcmFpZ2dydW1taXR0XShodHRwczovL3R3aXR0ZXIu
Y29tL2NyYWlnZ3J1bW1pdHQpCiogKipbVW5kZXJzdGFuZGluZyBTd2lmdFVJ
IGluIGRlcHRoXShodHRwczovL21lZGl1bS5jb20vdGVjaHRyb24vdW5kZXJz
dGFuZGluZy1zd2lmdHVpLWluLWRlcHRoLTU4ZDQyNjE0NjE5ZSkqKiBieSBb
QmFscmFqIFNpbmdoXShodHRwczovL21lZGl1bS5jb20vQGVyYmFscmFqcykK
KiAqKltBIFNrZXB0aWNzIHZpZXcgb24gU3dpZnRVSV0oaHR0cHM6Ly9tZWRp
dW0uY29tL0BKaWxsZXZkV2VlcmQvYS1za2VwdGljcy12aWV3LW9uLXN3aWZ0
dWktY2M2NjM2YjZmZDNiKSoqIGJ5IFtKaWxsZSB2YW4gZGVyIFdlZXJkXSho
dHRwczovL21lZGl1bS5jb20vQEppbGxldmRXZWVyZCkKKiAqKltPcHRpb25h
bHMgaW4gU3dpZnRVSV0oaHR0cHM6Ly9tZWRpdW0uY29tL3E0Mi1lbmdpbmVl
cmluZy9zd2lmdHVpLW9wdGlvbmFscy1lYWQwNGVkZDQzOWYpKiogYnkgW0ph
c3BlciBIYWdnZW5idXJnXShodHRwczovL3R3aXR0ZXIuY29tL0pwdW50KQoq
ICoqW1ByZXNlbnRpbmcgVUlWaWV3Q29udHJvbGxlcnMgaW4gU3dpZnRVSV0o
aHR0cHM6Ly9tZWRpdW0uY29tL0BKb2hhbm5lc19OZXZlbHMvcHJlc2VudGlu
Zy11aXZpZXdjb250cm9sbGVycy1pbi1zd2lmdHVpLTIyMzg4NjE2YTI0Yykq
KiBieSBbSm9oYW5uZXMgTmV2ZWxzXShodHRwczovL21lZGl1bS5jb20vQEpv
aGFubmVzX05ldmVscykKKiAqKltTd2lmdFVJIGZvciBSZWFjdCBOYXRpdmUg
RGV2ZWxvcGVyc10oaHR0cHM6Ly9tZWRpdW0uY29tL0Byb3JvZ2FkZ2V0L3N3
aWZ0dWktZm9yLXJlYWN0LW5hdGl2ZS1kZXZlbG9wZXJzLTIwNzJhMjFjMjJm
YikqKiBieSBbUm9oYW4gUGFuY2hhbF0oaHR0cHM6Ly90d2l0dGVyLmNvbS9y
b3JvZ2FkZ2V0KQoqICoqW1N3aWZ0VUkgRmlyc3QgTG9vazogQnVpbGRpbmcg
YSBTaW1wbGUgVGFibGUgVmlldyBBcHBdKGh0dHBzOi8vd3d3LmFwcGNvZGEu
Y29tL3N3aWZ0dWktZmlyc3QtbG9vay8/dXRtX2NhbXBhaWduPUFwcENvZGEl
MjBXZWVrbHkmdXRtX21lZGl1bT1lbWFpbCZ1dG1fc291cmNlPVJldnVlJTIw
bmV3c2xldHRlcikqKiBieSBbQXBwQ29kYV0oaHR0cHM6Ly90d2l0dGVyLmNv
bS9hcHBjb2RhbW9iaWxlKQoqICoqW1dpbGwgU3Rvcnlib2FyZHMgc3RpbGwg
YmUgYWxpdmU/XShodHRwczovL21lZGl1bS5jb20vZmxhd2xlc3MtYXBwLXN0
b3JpZXMvc3Rvcnlib2FyZC1vci1uby1zdG9yeWJvYXJkLWQzY2U2ZWRhOTFl
YikqKiBieSBbTmFiaWwgS2F6aV0oaHR0cHM6Ly90d2l0dGVyLmNvbS9uUWF6
ZSkKKiAqKvCfh6vwn4e3IFtRdeKAmWVzdC1jZSBxdWUgU3dpZnRVST9dKGh0
dHBzOi8vbWVkaXVtLmNvbS9AYmFjaHVyLm5pY29sYXMvaW50cm9kdWN0aW9u
LSVDMyVBMC1zd2lmdHVpLWJmMjQyM2Q4YjNlZCkqKiBieSBbTmljb2xhcyBC
YWNodXJdKGh0dHBzOi8vbWVkaXVtLmNvbS9AYmFjaHVyLm5pY29sYXMpCiog
KipbUnhTd2lmdCB0byBBcHBsZeKAmXMgQ29tYmluZSDigJxDaGVhdCBTaGVl
dOKAnV0oaHR0cHM6Ly9tZWRpdW0uY29tL2dldHQtZW5naW5lZXJpbmcvcnhz
d2lmdC10by1hcHBsZXMtY29tYmluZS1jaGVhdC1zaGVldC1lOWNlMzJiMTRj
NWIpKiogYnkgW1NoYWkgTWlzaGFsaV0oaHR0cHM6Ly90d2l0dGVyLmNvbS9m
cmVhazRwYykKKiAqKltGaXJzdCBpbXByZXNzaW9ucyBvZiBTd2lmdFVJXSho
dHRwczovL3d3dy5jb2NvYXdpdGhsb3ZlLmNvbS9ibG9nL3N3aWZ0dWkuaHRt
bCkqKiBieSBbTWF0dCBHYWxsYWdoZXJdKGh0dHBzOi8vdHdpdHRlci5jb20v
Y29jb2F3aXRobG92ZSkKKiAqKltQbGF5aW5nIHdpdGggU3dpZnRVSSBCdXR0
b25zXShodHRwczovL2FsZWphbmRyb21wLmNvbS9ibG9nLzIwMTkvMDYvMDkv
cGxheWluZy13aXRoLXN3aWZ0dWktYnV0dG9ucy8pKiogYnkgW0FsZWphbmRy
byBNYXJ0aW5lel0oaHR0cHM6Ly90d2l0dGVyLmNvbS9hbGV4aXRvNCkKKiAq
KltKdW4gOSBUaGUgU3dpZnQgNS4xIGZlYXR1cmVzIHRoYXQgcG93ZXIgU3dp
ZnRVSeKAmXMgQVBJXShodHRwczovL3d3dy5zd2lmdGJ5c3VuZGVsbC5jb20v
cG9zdHMvdGhlLXN3aWZ0LTUxLWZlYXR1cmVzLXRoYXQtcG93ZXItc3dpZnR1
aXMtYXBpKSoqIGJ5IFtAU3dpZnRCeVN1bmRlbGxdKGh0dHBzOi8vdHdpdHRl
ci5jb20vc3dpZnRieXN1bmRlbGwpCiogKipbRXZlcnl0aGluZyB5b3UgbmVl
ZCB0byBrbm93IGFib3V0IFN3aWZ0VUkgdG8gZ2V0IHN0YXJ0ZWRdKGh0dHBz
Oi8vd3d3LmJsY2tiaXJkcy5jb20vcG9zdC9ldmVyeXRoaW5nLXlvdS1uZWVk
LXRvLWtub3ctYWJvdXQtc3dpZnR1aSkqKiBieSBbQkxDS0JSSURTXShodHRw
czovL3d3dy5ibGNrYmlyZHMuY29tKQoqICoqW0ludHJvIHRvIFN3aWZ0VUni
gIrigJTigIpQYXJ0IDFdKGh0dHBzOi8vbWVkaXVtLmNvbS9Ac3V5YXNoLnNy
aWphbi9pbnRyby10by1zd2lmdHVpLXBhcnQtMS00NzM2MWEzZmZiMmUpKiog
YnkgW1N1eWFzaCBTcmlqYW5dKGh0dHBzOi8vdHdpdHRlci5jb20vc3V5YXNo
c3JpamFuKQoqICoqW0hvdyB0byBidWlsZCBhIENoYXQgQXBwIG9yIE1lc3Nl
bmdlciBpbiBTd2lmdFVJIGZvciBpT1MgU3dpZnRdKGh0dHBzOi8vbWVkaXVt
LmNvbS9AaGFsYXZpbnMvaG93LXRvLWJ1aWxkLWEtY2hhdC1hcHAtb3ItbWVz
c2VuZ2VyLWluLXN3aWZ0dWktZm9yLWlvcy1zd2lmdC1iNDZkYmU1Y2MwYWIp
KiogYnkgW05pY2sgSGFsYXZpbnNdKGh0dHBzOi8vdHdpdHRlci5jb20vQW50
aUxhbmRfY29tKQoqICoqW1N3aWZ0VUk6IEdldHRpbmcgU3RhcnRlZF0oaHR0
cHM6Ly93d3cucmF5d2VuZGVybGljaC5jb20vMzcxNTIzNC1zd2lmdHVpLWdl
dHRpbmctc3RhcnRlZCkqKiBieSBbUmF5IHdlbmRlcmxpY2hdKGh0dHBzOi8v
d3d3LnJheXdlbmRlcmxpY2guY29tLykKKiAqKltTd2lmdFVJIG1lZXRzIEtv
dGxpbiBNdWx0aXBsYXRmb3JtIV0oaHR0cHM6Ly9qb2hub3JlaWxseS5kZXYv
MjAxOS8wNi8wOC9zd2lmdHVpLW1lZXRpbmdzLWtvdGxpbi1tdWx0aXBsYXRm
b3JtLmh0bWwpKiogYnkgW2pvaG5vcmVpbGx5LmRldl0oaHR0cHM6Ly93d3cu
dHdpdHRlci5jb20vam9yZWlsbHkpCiogKipbVW5kZXJzdGFuZGluZyB0aGUg
U3dpZnRVSSBTYW1wbGVdKGh0dHBzOi8vcnVpcGVyLmVzLzIwMTkvMDYvMDkv
dW5kZXJzdGFuZGluZy10aGUtc3dpZnR1aS1zYW1wbGUvKSoqIGJ5IFtSdWkg
UGVyZXNdKGh0dHBzOi8vdHdpdHRlci5jb20vcGVyZXMpCiogKirwn4eo8J+H
syBbU3dpZnRVSSAtIEZpcnN0IGV4cGVyaWVuY2VdKGh0dHBzOi8vbWVkaXVt
LmNvbS/lvbzlvpfmvZjnmoQtc3dpZnQtaW9zLWFwcC3plovnmbzllY/poYzo
p6PnrZTpm4Yvc3dpZnR1aS3nqIvlvI/plovnmbzliJ3pq5TpqZctYWVhOTEy
Mjc0MWIxKSoqIGJ5IFvlvbzlvpfmvZjnmoQgaU9TIEFwcCBOZXZlcmxhbmRd
KGh0dHBzOi8vbWVkaXVtLmNvbS9AYXBwcGV0ZXJwYW4pCiogKipbU3dpZnRV
SSBXaWxsIENoYW5nZSBNb3JlIFRoYW4gSG93IFdlIENvZGVdKGh0dHBzOi8v
d3d3LnByb2xpZmljaW50ZXJhY3RpdmUuY29tLzIwMTkvMDYvMDcvc3dpZnR1
aS13aWxsLWNoYW5nZS1tb3JlLXRoYW4taG93LXdlLWNvZGUvKSoqIGJ5IFtI
YXJsYW4gS2VsbGF3YXldKGh0dHBzOi8vZ2l0aHViLmNvbS9oa2VsbGF3YXkp
IGZvciBbUHJvbGlmaWMgSW50ZXJhY3RpdmVdKGh0dHBzOi8vdHdpdHRlci5j
b20vd2VhcmVwcm9saWZpYykKKiAqKltXaGF04oCZcyB0aGlzIOKAnHNvbWXi
gJ0gaW4gU3dpZnRVST9dKGh0dHBzOi8vbWVkaXVtLmNvbS9AUGhpSmF5L3do
YXRzLXRoaXMtc29tZS1pbi1zd2lmdHVpLTM0ZTJjMTI2ZDRjNCkqKiBieSBb
TWlzY2hhIEhpbGRlYnJhbmRdKGh0dHBzOi8vdHdpdHRlci5jb20vRGVySGls
ZGVicmFuZCkKKiAqKltTd2lmdFVJIHZzIEludGVyZmFjZSBCdWlsZGVyIGFu
ZCBzdG9yeWJvYXJkc10oaHR0cHM6Ly93d3cuaGFja2luZ3dpdGhzd2lmdC5j
b20vcXVpY2stc3RhcnQvc3dpZnR1aS9zd2lmdHVpLXZzLWludGVyZmFjZS1i
dWlsZGVyLWFuZC1zdG9yeWJvYXJkcykqKiBieSBbSGFja2luZyB3aXRoIFN3
aWZ0XShodHRwczovL3R3aXR0ZXIuY29tL3R3b3N0cmF3cykKKiAqKltTd2lm
dFVJIEJhc2ljczogTGlzdCBGZXRjaGluZ10oaHR0cHM6Ly9tZWRpdW0uY29t
L0BtYXRzY2htaWR5L3N3aWZ0dWktYmFzaWNzLWxpc3QtZmV0Y2hpbmctOWIw
M2ZiMTQ1ZDg1P3Bvc3RQdWJsaXNoZWRUeXBlPWluaXRpYWwpKiogYnkgW01h
dCBTY2htaWRdKGh0dHBzOi8vdHdpdHRlci5jb20vZGV2c2NobWlkeSkKKiAq
KltTd2lmdFVJLCBwZXJzb25hbCB0aG91Z2h0cyBhbmQgTW9kZWwtVmlldy1Q
cmVzZW50ZXJdKGh0dHBzOi8vd3d3LmRjb3JkZXJvLm1lL3Bvc3RzL3N3aWZ0
dWlfcGVyc29uYWxfdGhvdWdodHNfYW5kX212cC5odG1sKSoqIGJ5IFtEYXZp
ZCBDb3JkZXJvXShodHRwczovL3d3dy5kY29yZGVyby5tZSkKKiAqKltDbG9u
aW5nIFRpbmRlciB1c2luZyBTd2lmdFVJXShodHRwczovL21lZGl1bS5jb20v
QGRhdmlkZ3Jkb2xsL2Nsb25pbmctdGluZGVyLXN3aWZ0dWktMjlmYWVkNzUy
YmU2KSoqIGJ5IFtEYXZpZCBEb2xsXShodHRwczovL3R3aXR0ZXIuY29tL2Rh
dmlkZ2RvbGwpCiogKipbU3dpZnRVSTogUHJvamVjdCBtaWdyYXRpb24gZnJv
bSBVSUtpdF0oaHR0cHM6Ly9uaWtyb2Rpb25vdi5jb20vcHJvamVjdC1taWdy
YXRpb24tdG8tc3dpZnR1aS8pKiogYnkgW05payBSb2Rpb25vdl0oaHR0cHM6
Ly90d2l0dGVyLmNvbS9uX3JvZGlvbm92KQoqICoqW01lc3NhZ2VVSSwgU3dp
ZnRVSSBhbmQgVUlLaXQgaW50ZWdyYXRpb25dKGh0dHBzOi8vbGluay5tZWRp
dW0uY29tL3Bvc2dkUkJNV1gpKioKKiAqKltNYXN0ZXJpbmcgVGFibGUgVmll
d3MgKExpc3RzKSBpbiBTd2lmdFVJXShodHRwczovL3d3dy5ibGNrYmlyZHMu
Y29tL3Bvc3QvbG9naW4tcGFnZS1pbi1zd2lmdHVpLTEpKiogYnkgW0JMQUNL
QklSRFNdKGh0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20vX2JsY2tiaXJkcy8/
aGw9ZGUpCiogKipbTWFraW5nIGEgUmVhbCBXb3JsZCBBcHBsaWNhdGlvbiBX
aXRoIFN3aWZ0VUldKGh0dHBzOi8vbWVkaXVtLmNvbS9iZXR0ZXItcHJvZ3Jh
bW1pbmcvbWFraW5nLWEtcmVhbC13b3JsZC1hcHBsaWNhdGlvbi13aXRoLXN3
aWZ0dWktY2I0MDg4NGMxMDU2KSoqIGJ5IFtUaG9tYXMgUmljb3VhcmRdKGh0
dHBzOi8vdHdpdHRlci5jb20vZGltaWxsaWFuKQoqICoqW1N3aWZ0VUkgdnMg
Q29tcG9zZV0oaHR0cHM6Ly9xdWlja2JpcmRzdHVkaW9zLmNvbS9ibG9nL3N3
aWZ0dWktdnMtYW5kcm9pZC1qZXRwYWNrLWNvbXBvc2UvKSoqIGJ5IFtRdWlj
a0JpcmQgU3R1ZGlvc10oaHR0cHM6Ly9xdWlja2JpcmRzdHVkaW9zLmNvbS8p
CiogKipbQWR2YW5jZWQgTGlzdHMgaW4gU3dpZnRVSV0oaHR0cHM6Ly9tZWRp
dW0uY29tL2JldHRlci1wcm9ncmFtbWluZy9tZWV0LWdyZWV0LWFkdmFuY2Vk
LWxpc3RzLWluLXN3aWZ0dWktODBhYjZmMDhjYTAzKSoqCiogKipbR2VvbWV0
cnlSZWFkZXIgdG8gdGhlIFJlc2N1ZV0oaHR0cHM6Ly9zd2lmdHVpLWxhYi5j
b20vZ2VvbWV0cnlyZWFkZXItdG8tdGhlLXJlc2N1ZS8pKiogYnkgW1RoZSBT
d2lmdFVJIExhYl0oaHR0cHM6Ly9zd2lmdHVpLWxhYi5jb20pCiogKipbSW5z
cGVjdGluZyB0aGUgVmlldyBUcmVlIC0gVmlldyBQcmVmZXJlbmNlc10oaHR0
cHM6Ly9zd2lmdHVpLWxhYi5jb20vY29tbXVuaWNhdGluZy13aXRoLXRoZS12
aWV3LXRyZWUtcGFydC0xLykqKiBieSBbVGhlIFN3aWZ0VUkgTGFiXShodHRw
czovL3N3aWZ0dWktbGFiLmNvbSkKKiAqKltWaWV3IEV4dGVuc2lvbnMgZm9y
IEJldHRlciBDb2RlIFJlYWRhYmlsaXR5XShodHRwczovL3N3aWZ0dWktbGFi
LmNvbS92aWV3LWV4dGVuc2lvbnMtZm9yLWJldHRlci1jb2RlLXJlYWRhYmls
aXR5LykqKiBieSBbVGhlIFN3aWZ0VUkgTGFiXShodHRwczovL3N3aWZ0dWkt
bGFiLmNvbSkKKiAqKltTY3JvbGxWaWV3IOKAkyBQdWxsIHRvIFJlZnJlc2hd
KGh0dHBzOi8vc3dpZnR1aS1sYWIuY29tL3Njcm9sbHZpZXctcHVsbC10by1y
ZWZyZXNoLykqKiBieSBbVGhlIFN3aWZ0VUkgTGFiXShodHRwczovL3N3aWZ0
dWktbGFiLmNvbSkKKiAqKltNeSB0YWtlYXdheSBmcm9tIHdvcmtpbmcgd2l0
aCBTd2lmdFVJXShodHRwczovL21lZGl1bS5jb20vZmxhd2xlc3MtYXBwLXN0
b3JpZXMvbXktdGFrZWF3YXktZnJvbS13b3JraW5nLXdpdGgtc3dpZnR1aS03
YTU4OWJiZDE1NTUpKiogYnkgW0FiYmFzIFQuIEtoYW5dKGh0dHBzOi8vdHdp
dHRlci5jb20veHRhYmJhcykKKiAqKltTd2lmdFVJICYgQ29tYmluZTogQmV0
dGVyIFRvZ2V0aGVyXShodHRwczovL21lZGl1bS5jb20vZmxhd2xlc3MtYXBw
LXN0b3JpZXMvc3dpZnR1aS1wbHVzLWNvbWJpbmUtZXF1YWxzLWxvdmUtNzkx
YWQ0NDRhMDgyKSoqIGJ5IFtQZXRlciBGcmllc2VdKGh0dHBzOi8vd3d3LnR3
aXR0ZXIuY29tL3BldGVyZnJpZXNlKQoqICoqW1RoZSBTaW1wbGUgTGlmZShj
eWNsZSkgb2YgYSBTd2lmdFVJIFZpZXddKGh0dHBzOi8vbWVkaXVtLmNvbS9m
bGF3bGVzcy1hcHAtc3Rvcmllcy90aGUtc2ltcGxlLWxpZmUtY3ljbGUtb2Yt
YS1zd2lmdHVpLXZpZXctOTVlMmUxNDg0OGEyKSoqIGJ5IFtAZGJvbGVsbGFd
KGh0dHBzOi8vdHdpdHRlci5jb20vZGJvbGVsbGEpCiogKipbTW9kYWwgVmll
dyBpbiBTd2lmdFVJXShodHRwczovL21lZGl1bS5jb20vQGRpbmlza2EvbW9k
YWwtdmlldy1pbi1zd2lmdHVpLTNmOWZhZjkxMDI0OSNkMmQwLTQ2NjI2YmIy
MjI0ZCkqKiBieSBbRGVuaXMgQ2hhc2hjaGluXShodHRwczovL21lZGl1bS5j
b20vQGRpbmlza2EvKQoqICoqW1N3aWZ0VUkgTGF5b3V0IFN5c3RlbTogQW4g
SW4tRGVwdGggTG9va10oaHR0cHM6Ly9rZWFuLmdpdGh1Yi5pby9wb3N0L3N3
aWZ0dWktbGF5b3V0LXN5c3RlbSkqKiBieSBbQWxleGFuZGVyIEdyZWJlbnl1
a10oaHR0cHM6Ly90d2l0dGVyLmNvbS9hX2dyZWJlbnl1aykKKiAqKltTd2lm
dFVJIERhdGEgRmxvd10oaHR0cHM6Ly90cm96Lm5ldC9wb3N0LzIwMTkvc3dp
ZnR1aS1kYXRhLWZsb3cvKSoqIGJ5IFtTYXJhaCBSZWljaGVsdF0oaHR0cHM6
Ly90d2l0dGVyLmNvbS90cm96d2FyZSkKCiMjIyMg8J+UqCBYY29kZSBFeHRl
bnNpb25zCiogKipbbmVmXShodHRwczovL2dpdGh1Yi5jb20vYm93LXN3aWZ0
L25lZi1wbHVnaW4pKiogLSBUaGlzIFhjb2RlIGV4dGVuc2lvbiBlbmFibGVz
IHlvdSB0byBtYWtlIGEgY29kZSBzZWxlY3Rpb24gYW5kIGV4cG9ydCBpdCB0
byBhIHNuaXBwZXRzLiBfX0F2YWlsYWJsZSBvbiBNYWMgQXBwIFN0b3JlX18u
CgojIyMjIPCfk6YgUmVwb3NpdG9yaWVzCiogKipbQ3VycmVuY3kgQ29udmVy
dGVyICYgQ2FsY3VsYXRvcl0oaHR0cHM6Ly9naXRodWIuY29tL0N1cnJlbmN5
Q29udmVydGVyQ2FsY3VsYXRvci9pb3NDQ0MpKiogQSBjdXJyZW5jeSBhcHBs
aWNhdGlvbiBmb3IgbW9zdCBvZiB0aGUgY3VycmVuY2llcyBvZiB3b3JsZC5Z
b3UgY2FuIHF1aWNrbHkgY29udmVydCBhbmQgbWFrZSBtYXRoZW1hdGljaGFs
IG9wZXJhdGlvbnMgYmV0d2VlbiBjdXJyZW5jaWVzCiogKipbU3dpZnRTdW5i
dXJzdERpYWdyYW1dKGh0dHBzOi8vZ2l0aHViLmNvbS9sbHVkby9Td2lmdFN1
bmJ1cnN0RGlhZ3JhbSkqKiBBIGxpYnJhcnkgd3JpdHRlbiB3aXRoIFN3aWZ0
VUkgdG8gZWFzaWx5IHJlbmRlciBzdW5idXJzdCBkaWFncmFtcyBnaXZlbiBh
IHRyZWUgb2Ygb2JqZWN0cy4KKiAqKltTd2lmdFVJXShodHRwczovL2dpdGh1
Yi5jb20vSmlueGlhbnNlbi9Td2lmdFVJKSoqLiBgU3dpZnRVSWAgRnJhbWV3
b3JrIExlYXJuaW5nIGFuZCBVc2FnZSBHdWlkZS4g8J+agAoqICoqW1N3aWZ0
VUlUb2RvXShodHRwczovL2dpdGh1Yi5jb20vZGV2eG91bC9Td2lmdFVJVG9k
bykqKi4gQW4gZXhhbXBsZSB0by1kbyBsaXN0IGFwcCB1c2luZyBTd2lmdFVJ
IHdoaWNoIGlzIGludHJvZHVjZWQgaW4gV1dEQzE5LgoqICoqW0tleWJvYXJk
QXZvaWRpbmddKGh0dHBzOi8vZ2l0aHViLmNvbS9hMi9LZXlib2FyZEF2b2lk
aW5nKSoqLiBBIFN3aWZ0VUkgdmlldyB0aGF0IG1hbmFnZXMgYSBVSVZpZXdD
b250cm9sbGVyIHRoYXQgcmVzcG9uZHMgdG8ga2V5Ym9hcmQgZXZlbnRzIHdp
dGggbW9kaWZpZWQgYWRkaXRpb25hbFNhZmVBcmVhSW5zZXRzLgoqICoqW0Rp
c3BhdGNoU3RvcmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGV4ZHJvbmUvRGlz
cGF0Y2hTdG9yZSkqKi4gU3dpZnQgcGFja2FnZSB0aGF0IGltcGxlbWVudHMg
YW4gb3BlcmF0aW9uIGJhc2VkLCBtdWx0aS1zdG9yZSDDoC1sYSBGbHV4IGZv
ciBTd2lmdFVJLgoqICoqW0dpdEh1YlNlYXJjaFdpdGhTd2lmdFVJXShodHRw
czovL2dpdGh1Yi5jb20vbWFydHktc3V6dWtpL0dpdEh1YlNlYXJjaFdpdGhT
d2lmdFVJKSoqLiBTd2lmdFVJIGJhc2VkIEdpdEh1YlNlYXJjaCBleGFtcGxl
LgoqICoqW1N3aWZ0VUktTW92aWVEQl0oaHR0cHM6Ly9naXRodWIuY29tL2Fs
Zmlhbmxvc2FyaS9Td2lmdFVJLU1vdmllREIpKiouIFN3aWZ0VUkgTW92aWVE
QiBwcm90b3R5cGUgYXBwIGJ1aWx0IHdpdGggWGNvZGUgMTEgQmV0YSAmIG1h
Y09TIDEwLjE1IENhdGFsaW5hLgoqICoqW1dXRENQbGF5ZXJdKGh0dHBzOi8v
Z2l0aHViLmNvbS9ZT09OTVMvV1dEQ1BsYXllcikqKi4g8J+kliBXV0RDMTkg
cGxheWVyIHVzaW5nIFN3aWZ0VUkuCiogKipbTXlEb2dzXShodHRwczovL2dp
dGh1Yi5jb20vdmFsdm9saW5lL015RG9ncykqKi4gQSBzaW1wbGUgU3dpZnRV
SSBleGFtcGxlIGZvciB0ZXN0aW5nIExpc3RzLCBCaW5kYWJsZU9iamVjdCwg
U3RhdGUgbWFuYWdlbWVudCBhbmQgTmV0d29yay4KKiAqKltNb3ZpZVN3aWZ0
VUldKGh0dHBzOi8vZ2l0aHViLmNvbS9EaW1pbGxpYW4vTW92aWVTd2lmdFVJ
KSoqLiBTd2lmdFVJICYgQ29tYmluZSBhcHAgdXNpbmcgTW92aWVEQiBBUEku
CiogKipbQ3J5cHRvVGlja2VyU3dpZnRVSV0oaHR0cHM6Ly9naXRodWIuY29t
L0RpbWlsbGlhbi9DcnlwdG9UaWNrZXJTd2lmdFVJKSoqLiBFeGFtcGxlIHBy
b2plY3QgdXNpbmcgYSB3ZWJzb2NrZXQgQVBJIGFuZCBTd2lmdFVJIHRvIGRp
c3BsYXlzIGxhdGVzdCBCVEMtVVNEIHRyYWRlLiAoTGF0ZXN0IEJpdGNvaW4g
cHJpY2UpCiogKipbU3dpZnRVSS1Db21iaW5lXShodHRwczovL2dpdGh1Yi5j
b20vcmExMDI4L1N3aWZ0VUktQ29tYmluZSkqKi4gVGhpcyBpcyBhbiBleGFt
cGxlIHByb2plY3Qgb2YgU3dpZnRVSSBhbmQgQ29tYmluZSB1c2luZyBHaXRI
dWIgQVBJLgoqICoqW1N3aWZ0VUlUaW1lVHJhdmVsXShodHRwczovL2dpdGh1
Yi5jb20vdGltZG9ubmVsbHkvU3dpZnRVSVRpbWVUcmF2ZWwpKiouIEFuIGV4
cGVyaW1lbnRhbCB0aW1lIHRyYXZlbGluZyBzdGF0ZSBzdG9yZSBmb3IgU3dp
ZnRVSS4KKiAqKltTd2lmdFVJX0ppa2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9t
aWxpUG9sby9Td2lmdFVJX0ppa2UpKiouIFN3aWZ0VUkgaW1pdGF0aW9uIGFw
cCBpbnRlcmZhY2UgKEJ1aWxkIEppa2UgQXBwIHdpdGggU3dpZnRVSSkuCiog
KipbMjA0OF0oaHR0cHM6Ly9naXRodWIuY29tL3VuaXh6aWkvU3dpZnRVSS0y
MDQ4KSoqLiBBIDIwNDggZ2FtZSB3cml0aW5nIHdpdGggU3dpZnRVSS4KKiAq
KltTd2lmdFVJLUxhbmRtYXJrc10oaHR0cHM6Ly9naXRodWIuY29tL2FsZXhw
YXVsL1N3aWZ0VUktTGFuZG1hcmtzKSoqLiBJbnRyb2R1Y2luZyBTd2lmdFVJ
LiBBIGRlY2xhcmF0aXZlIHdheSB0byBjcmVhdGUgVXNlciBJbnRlcmZhY2Vz
IHdpdGggU3dpZnQuCiogKipbU3dpZnRVSS1GbHV4XShodHRwczovL2dpdGh1
Yi5jb20vcmExMDI4L1N3aWZ0VUktRmx1eCkqKi4g8J+agCBUaGlzIGlzIGEg
dGlueSBleHBlcmltZW50YWwgYXBwbGljYXRpb24gdXNpbmcgU3dpZnRVSSB3
aXRoIEZsdXggYXJjaGl0ZWN0dXJlLgoqICoqW1N3aWZ0VUktYnktRXhhbXBs
ZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9hcnRlbW5vdmljaGtvdi9Td2lmdFVJ
LWJ5LUV4YW1wbGVzKSoqLiBFeGFtcGxlcyBvZiBuZXcgU3dpZnRVSSBmcmFt
ZXdvcmsuCiogKipbU3dpZnRVSUNhbGN1bGF0b3JdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9ob3RjaG5lci9Td2lmdFVJQ2FsY3VsYXRvcikqKi4gQSBjYWxjdWxh
dG9yIGFwcCB1c2luZyBTd2lmdFVJIHdoaWNoIGlzIGludHJvZHVjZWQgaW4g
V1dEQzE5LgoqICoqW0luc3RhRmFrZS1Td2lmdC1VSV0oaHR0cHM6Ly9naXRo
dWIuY29tL2xlYXZlbnN0ZWUvSW5zdGFGYWtlLVN3aWZ0LVVJKSoqLiBTd2lm
dCBVSSBEZW1vIGZvciBhbiBpbnN0YWdyYW0gY29weS4KKiAqKltTd2lmdFVJ
VGhlbWVdKGh0dHBzOi8vZ2l0aHViLmNvbS9iZWxsb3RzL1N3aWZ0VUlUaGVt
ZSkqKi4gQSBmaXJzdCBpZGVhIHRvIHN0eWxlIFN3aWZ0VUkgVmlld3MuCiog
KipbTGlzdHNfLV9OYXZpZ2F0aW9uX1N3aWZ0VUldKGh0dHBzOi8vZ2l0aHVi
LmNvbS9zd2lmdGVySC9MaXN0c18tX05hdmlnYXRpb25fU3dpZnRVSSkqKi4g
RXhwbG9yYXRpb24gb2YgQXBwbGUgRGV2ZWxvcGVyJ3MgU3dpZnRVSSB0dXRv
cmlhbCwgZGV0YWlsaW5nIGhvdyB0byBidWlsZCBsaXN0cyBhbmQgZW5hYmxl
IG5hdmlnYXRpb24gYmV0d2VlbiB2aWV3cyB3aXRoICNTd2lmdFVJLgoqICoq
W2luamVjdGFibGVdKGh0dHBzOi8vZ2l0aHViLmNvbS92aW5jZW50LXByYWRl
aWxsZXMvaW5qZWN0YWJsZSkqKi4gQSBtaWNybyBmcmFtZXdvcmsgdGhhdCBs
ZXZlcmFnZXMgU3dpZnQgUHJvcGVydHkgV3JhcHBlciB0byBpbXBsZW1lbnQg
dGhlIFNlcnZpY2UgTG9jYXRvciBwYXR0ZXJuLgoqICoqW1N3aWZ0V2ViSW1h
Z2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9nZWVrYXVyb3JhL1N3aWZ0V2ViSW1h
Z2UpKiouIPCfmoBTd2lmdFVJIGltYWdlIGRvd25sb2FkZXIgZm9yIEJpbmRp
bmdPYmplY3Qgd2l0aCBwZXJmb3JtYW50IExSVSBtZW0vZGlzayBjYWNoZS4K
KiAqKltOZXR3b3JrSW1hZ2Uuc3dpZnRdKGh0dHBzOi8vZ2lzdC5naXRodWIu
Y29tL2l2YW5icnVlbC9iMjgzOGY2MmNiMjgxYmQ5NzRlYzljOWMxMjFjNmNi
ZSkqKi4gQmFzaWMgTmV0d29ya0ltYWdlIHN1cHBvcnQgZm9yIFN3aWZ0VUkg
dmlhIEtpbmdmaXNoZXIKKiAqKltTd2lmdFVJLUNvbWJpbmUtdG9kby1leGFt
cGxlXShodHRwczovL2dpdGh1Yi5jb20vamFtZmx5L1N3aWZ0VUktQ29tYmlu
ZS10b2RvLWV4YW1wbGUpKiouIEEgdG8tZG8gbGlzdCBhcHAgdXNpbmcgU3dp
ZnRVSSBhbmQgY29tYmluZSB3aXRoIHJlc3RmdWwgYXBpLgoqICoqW0JpbmRp
bmdzLnN3aWZ0XShodHRwczovL2dpc3QuZ2l0aHViLmNvbS9BbGlTb2Z0d2Fy
ZS9lY2I1ZGZlYWE3ODg0ZmMwY2U5NjE3OGRmZGQzMjZmOCkqKi4gUmUtaW1w
bGVtZW50YXRpb24gb2YgQGJpbmRpbmcgYW5kIEBTdGF0ZSAoZnJvbSBTd2lm
dFVJKSBteXNlbGYgdG8gYmV0dGVyIHVuZGVyc3RhbmQgaXQuCiogKipbQ29u
dGFjdHMuc3dpZnRdKGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL2phY2tobC82
MzI5MzVhMmU5MGUzNzk2ZTM4YzIxNDNkNWRhZGM5NikqKgoqICoqW0NvbWJp
bmVVbnNwbGFzaF0oaHR0cHM6Ly9naXRodWIuY29tL3ZpbmhueC9Db21iaW5l
VW5zcGxhc2gpKiouIEV4cGxvcmluZyBTd2lmdFVJICsgQ29tYmluZSArIFJl
c3VsdCBieSB1c2luZyBVbnNwbGFzaCBBUEksIHdpdGggZGV0YWlsZWQgY29k
ZSBleHBsYWluYXRpb24uCiogKipbUmVtb3RlSW1hZ2Uuc3dpZnRdKGh0dHBz
Oi8vZ2lzdC5naXRodWIuY29tL2FsZXhpdG80LzU5NDM2YjlhYjA0ODliMDBm
YjEzN2E4MzgyZjM4ZWE1KSoqLiBSb3VnaCBza2V0Y2ggb2YgU3dpZnRVSSBS
ZW1vdGVJbWFnZSB1c2luZyBBbGFtb2ZpcmVJbWFnZS4KKiAqKltDb21iaW5l
RmVlZGJhY2tdKGh0dHBzOi8vZ2l0aHViLmNvbS9zZXJnZG9ydC9Db21iaW5l
RmVlZGJhY2spKiouIFVuaWRpcmVjdGlvbmFsIHJlYWN0aXZlIGFyY2hpdGVj
dHVyZSB1c2luZyBuZXcgQXBwbGUgQ29tYmluZSBmcmFtZXdvcmsuCiogKipb
SGFydmVzdF0oaHR0cHM6Ly9naXRodWIuY29tL2luYW1peS9IYXJ2ZXN0KSoq
LiDwn4y+IEhhcnZlc3Q6IEFwcGxlJ3MgQ29tYmluZS5mcmFtZXdvcmsgKyBT
dGF0ZSBNYWNoaW5lLCBpbnNwaXJlZCBieSBSZWR1eCBhbmQgRWxtLgoqICoq
W1JlZHV4IEhhbmRsaW5nVXNlcklucHV0XShodHRwczovL2dpdGh1Yi5jb20v
QWxleGV5RGVtZWRldHNraXkvSGFuZGxpbmdVc2VySW5wdXQpKiouIEhhbmRs
aW5nVXNlcklucHV0IHR1dG9yaWFsIHNob3djYXNpbmcgcmVkdXggc3R5bGUg
b2Ygc3RhdGUgYW5kIGNoYW5nZSBtYW5hZ2VtZW50LgoqICoqW1N3aWZ0VUkt
Q2hlYXQtU2hlZXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9TaW1wbGVCb2lsZXJw
bGF0ZXMvU3dpZnRVSS1DaGVhdC1TaGVldCkqKi4gU3dpZnRVSSBDaGVhdCBT
aGVldC4KKiAqKltzd2lmdHVpX3NoYWRvd19hbmRfYm9yZGVyLnN3aWZ0XSho
dHRwczovL2dpc3QuZ2l0aHViLmNvbS9maXRvbWFkL2IwOTNlMDA4Zjk4YzAz
ZTg3YjljNGJhNzYyNzc5OGZmKSoqLiBUZXN0aW5nIFN3aWZ0VUkuIEFkZGlu
ZyBzaGFkb3cgYW5kIGNvcm5lciByYWRpdXMgdG8gYSBWaWV3LiBTdHJhbmdl
IGJlaGF2aW9yIGRlcGVuZGluZyBvbiBWaWV3IGJhY2tncm91bmQgY29sb3Iu
CiogKipbU3dpZnRVSS1NVlZNXShodHRwczovL2dpdGh1Yi5jb20va2l0YXN1
a2UvU3dpZnRVSS1NVlZNKSoqLiBTYW1wbGUgaU9TIHByb2plY3QgYnVpbHQg
YnkgU3dpZnRVSSArIE1WVk0gYW5kIENvbWJpbmUgZnJhbWV3b3JrIHVzaW5n
IEdpdEh1YiBBUEkuCiogKipbU3dpZnRVSS1DaXJjdWxhci5zd2lmdF0oaHR0
cHM6Ly9naXN0LmdpdGh1Yi5jb20vVGhvbXZpcy84YTc4ZDQ5YTY2MmY3MDgz
MTFlMDQ0MGYxZjQzYTIwNCkqKi4gUm91Z2ggYXR0ZW1wdCBhdCBjcmVhdGlu
ZyBhIGNvbnRhaW5lciB2aWV3IHRoYXQgbGF5cyBvdXQgaXRzIGNoaWxkcmVu
IGluIGEgY2lyY2xlLgoqICoqW05vdGVzQXBwLnN3aWZ0XShodHRwczovL2dp
c3QuZ2l0aHViLmNvbS9qbmV3Yy8zNTY5MmIyYTU5ODVjM2M5OWU4NDdlYzU2
MDk4YTQ1MSkqKi4gQSBub3RlcyBhcHAgd3JpdHRlbiBpbiA+MTAwIGxpbmVz
IG9mIHN3aWZ0IHVzaW5nIFN3aWZ0VUkuCiogKipbVW5zcGxhc2hTd2lmdFVJ
XShodHRwczovL2dpdGh1Yi5jb20va2F1bmFtb2hhbW1lZC9VbnNwbGFzaFN3
aWZ0VUkpKiouIGBVbnNwbGFzaFN3aWZ0VUlgIEEgc2ltcGxlIGFwcCBwb3dl
cmVkIGJ5IFN3aWZ0VUkgYW5kIFVuc3BsYXNoIPCfmoAKKiAqKltBbmlUaW1l
XShodHRwczovL2dpdGh1Yi5jb20vUGFuZ01vNS9BbmlUaW1lKSoqLiBBbmlt
ZSBzY2hlZHVsZSwga29yZWFuIHN1YnRpdGxlIGZvciBpT1Mgd2l0aCBTd2lm
dFVJICsgQ29tYmluZSBhbmQgTVZWTSBhcmNoaXRlY3R1cmUKKiAqKltGbHV4
dXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9qb2huc3VzZWsvZmx1eHVzKSoqLiBG
bHV4IGZvciBTd2lmdFVJLCBpbnNwaXJlZCBieSBWdWV4LgoqICoqW0NoYXJ0
VmlldyBpbiBTd2lmdFVJXShodHRwczovL2dpdGh1Yi5jb20vQXBwUGVhci9D
aGFydFZpZXcpKiouIEVhc3kgdG8gdXNlIGFuaW1hdGVkIENoYXJ0dmlldyBz
dXBwb3J0aW5nIGBCYXIgYW5kIFBpZWNoYXJ0c2AKKiAqKltXZWF0aGVyXSho
dHRwczovL2dpdGh1Yi5jb20vbmlhem9mZi9XZWF0aGVyKSoqLiDwn4ykIEEg
c2ltcGxlIFN3aWZ0VUkgd2VhdGhlciBhcHAgdXNpbmcgTVZWTS4KKiAqKltD
aGF0XShodHRwczovL2dpdGh1Yi5jb20vbmlhem9mZi9DaGF0KSoqLiDwn5Ks
IEEgYmFzaWMgU3dpZnRVSSBjaGF0IGFwcCB0aGF0IGxldmVyYWdlcyB0aGUg
bmV3IGBVUkxTZXNzaW9uV2ViU29ja2V0VGFza2AuCiogKipbdG9CbG9ja2lu
Z0FycmF5IGZvciBDb21iaW5lXShodHRwczovL2dpc3QuZ2l0aHViLmNvbS9q
cnNvbmxpbmUvZGQ5Nzk5OTI5ZTFhY2ViNWQ5OWU4M2ZjNmFjMmI0M2IpKiou
IEFjdHMgbGlrZSBSeEJsb2NraW5nLCBmb3Igd3JpdGluZyB0ZXN0cyB1c2lu
ZyB0aGUgQ29tYmluZSBmcmFtZXdvcmsuCiogKipbSW1hZ2VXaXRoQWN0aXZp
dHlJbmRpY2F0b3JdKGh0dHBzOi8vZ2l0aHViLmNvbS9BbGlBZGFtL0ltYWdl
V2l0aEFjdGl2aXR5SW5kaWNhdG9yKSoqLiBTd2lmdFVJIHZpZXcgdGhhdCBk
b3dubG9hZCBhbmQgZGlzcGxheSBpbWFnZSBmcm9tIFVSTCBhbmQgZGlzcGxh
eWluZyBBY3Rpdml0eSBJbmRpY2F0b3Igd2hpbGUgbG9hZGluZy4gW0RlbW9d
KGh0dHBzOi8vZ2l0aHViLmNvbS9BbGlBZGFtL0ltYWdlV2l0aEFjdGl2aXR5
SW5kaWNhdG9yRGVtbykgCiogKipb8J+Mr/CfjK8gQnVycml0b3NdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9ndWlsbGVybW9tdW50YW5lci9CdXJyaXRvcykqKi4g
QSBjb2xsZWN0aW9uIG9mIFN3aWZ0IFByb3BlcnR5IFdyYXBwZXJzIChmb3Jt
ZXJseSAiUHJvcGVydHkgRGVsZWdhdGVzIikuCiogKipbSGFja2VyeV0oaHR0
cHM6Ly9naXRodWIuY29tL3RpbXNoaW0vSGFja2VyeS90cmVlL21hc3Rlcikq
KiBBIEhhY2tlck5ld3MgY2xpZW50IG1hZGUgdXNpbmcgU3dpZnRVSS4KKiAq
KltTd2lmdFVJLVJlZHV4LVRvZG8gRXhhbXBsZV0oaHR0cHM6Ly9naXRodWIu
Y29tL21vZmxvL1N3aWZ0VUktVG9kby1SZWR1eCkqKiBBbiBvcGluaW9uYXRl
ZCBSZWFjdC9SZWR1eCBpbnNwaXJlZCBUb2RvIGV4YW1wbGUuCiogKipbQ3Vy
cmVuY3kgQ29udmVydGVyXShodHRwczovL2dpdGh1Yi5jb20vYWxleGxpdWJq
L1N3aWZ0VUktQ3VycmVuY3ktQ29udmVydGVyKSoqLiBBIEN1cnJlbmN5IGNv
bnZlcnRlciBhcHAuCiogKipbYm90dG9tYmFyLXN3aWZ0dWldKGh0dHBzOi8v
Z2l0aHViLmNvbS9zbWFydHZpcGVyZTc1L2JvdHRvbWJhci1zd2lmdHVpKSoq
LiBCb3R0b21CYXIgY29tcG9uZW50IGZvciBTd2lmdFVJCiogKipbRGVhbFN0
YWNrXShodHRwczovL2dpdGh1Yi5jb20vaW5zaWRlZ3VpL0RlYWxTdGFjaykq
Ki4gU2ltcGxlIGNhcmQgc3RhY2sgaW1wbGVtZW50ZWQgd2l0aCBTd2lmdFVJ
CiogKipbU3dpZnRVSS1QYXRoQW5pbWF0aW9uc10oaHR0cHM6Ly9naXRodWIu
Y29tL2FkZWxsaWJvdmkvU3dpZnRVSS1QYXRoQW5pbWF0aW9ucykqKi4gVG9v
bHMgZm9yIFN3aWZ0VUkgdGhhdCBoZWxwcyBwZXJmb3JtIFBhdGggYW5kIFNo
YXBlIGFuaW1hdGlvbnMKKiAqKltDb21iaW5lQm9va1NlYXJjaF0oaHR0cHM6
Ly9naXRodWIuY29tL1BQYWNpZS9Db21iaW5lQm9va1NlYXJjaCkqKi4gU3dp
ZnRVSSArIENvbWJpbmUgKyBNVlZNIGFyY2hpdGVjdHVyZS4KKiAqKltZYW54
dWFuSERdKGh0dHBzOi8vZ2l0aHViLmNvbS9oaXRlL1lhbnh1YW5IRC9ibG9i
L21hc3Rlci9SRUFETUUubWQpKiosIFRoZSBpUGFkIHZlcnNpb24gb2YgJ+e9
keaYk+S4pemAiScgaU9TIGFwcAoqICoqW0JhYnlsb24gZGVtb10oaHR0cHM6
Ly9naXRodWIuY29tL2N6YWpuaWtvd3NraS9CYWJ5bG9uKSoqIE1WVk0gd2l0
aCBhIHByb2plY3QtbGV2ZWwgc2VwYXJhdGlvbiBvZiBsYXllcnMgYW5kIGEg
bGVhZiBgVmlld2AgZnJhbWV3b3JrLgoqICoqW1JLQ2FsZW5kYXJdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9SYWZmaUtpYW4vUktDYWxlbmRhcikqKiBTaW1wbGUg
U3dpZnRVSSBDYWxlbmRhciAvIERhdGUgUGlja2VyLgoqICoqW01vcnBoaV0o
aHR0cHM6Ly9naXRodWIuY29tL3BoaW1hZ2UvbW9ycGhpKSoqIEFkZGl0aW9u
YWwgYFNoYXBlYCBmb3IgU3dpZnRVSS4KKiAqKuKPryBbVmlkZW9QbGF5ZXJd
KGh0dHBzOi8vZ2l0aHViLmNvbS93eHhzdy9WaWRlb1BsYXllcikqKiwgQSB2
aWRlbyBwbGF5ZXIgZm9yIFN3aWZ0VUkuCiogKipbRHJhd2VyVmlldy1Td2lm
dFVJXShodHRwczovL2dpdGh1Yi5jb20vdG90b3JveXliL0RyYXdlclZpZXct
U3dpZnRVSSkqKiBBIGRyYXdlciB2aWV3IHdpdGggY2VydGFpbiBjdXN0b21p
emFiaWxpdHkgaW1wbGVtZW50ZWQgYnkgU3dpZnRVSS4KKiAqKltTd2lmdFVJ
WF0oaHR0cHM6Ly9naXRodWIuY29tL1N3aWZ0VUlYL1N3aWZ0VUlYKSoqIEFu
IGV4dGVuc2lvbiB0byB0aGUgc3RhbmRhcmQgU3dpZnRVSSBsaWJyYXJ5Lgoq
ICoqW1N3aWZ0VUktUm91dGVyXShodHRwczovL2dpdGh1Yi5jb20vZnJ6aS9T
d2lmdFVJUm91dGVyKSoqLiBBIHJvdXRpbmcgc3lzdGVtIHByb29mLW9mLWNv
bmNlcHQgYmFzZWQgb24gUmVhY3QgUm91dGVyLgoqICoqW1N3aWZ0VUkgQ29s
b3JTbGlkZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS93b3JraW5nRG9nL1N3aWZ0
VUlDb2xvclNsaWRlcikqKi4gRHluYW1pY2FsbHkgc2VsZWN0IGEgY29sb3Ig
ZnJvbSBhIGNvbG9yIGdyYWRpZW50IHNsaWRlci4gCiogKipb4oyo77iPIEtl
eWJvYXJkT2JzZXJ2aW5nXShodHRwczovL2dpdGh1Yi5jb20vbmlja2Zmb3gv
S2V5Ym9hcmRPYnNlcnZpbmcpKiogQSBDb21iaW5lLWJhc2VkIHNvbHV0aW9u
IGZvciBvYnNlcnZpbmcgYW5kIGF2b2lkaW5nIHRoZSBrZXlib2FyZCBpbiBT
d2lmdFVJLgoqICoqW+KYkSBDYWxjdWxhdG9yIENoZWNrbGlzdF0oaHR0cHM6
Ly9naXRodWIuY29tL3h0YWJiYXMvY2FsY3VsYXRvci1jaGVja2xpc3QpKiog
UmVjcmVhdGlvbiBvZiBjYWxjdWxhdG9yLWNoZWNrbGlzdCBwcm9qZWN0IGlu
IFN3aWZ0VUkuCiogKipbU0ZdKGh0dHBzOi8vZ2l0aHViLmNvbS96bWVyaWtz
ZW4vU0YpKiogQSBTbWFsbCBTRlN5bWJvbHMgU3dpZnRVSSBFbnVtLgoqICoq
W1B1bGwgdG8gUmVmcmVzaF0oaHR0cHM6Ly9naXRodWIuY29tL0FwcFBlYXIv
U3dpZnRVSS1QdWxsVG9SZWZyZXNoKSoqIFN3aWZ0VUkgcHVsbCB0byByZWZy
ZXNoIGZvciBMaXN0LCBOYXZpZ2F0aW9uVmlldwoqICoqW0Nvbm5lY3RGb3Vy
XShodHRwczovL2dpdGh1Yi5jb20vdnNtaXRoZXJzMTA4Ny9Db25uZWN0Rm91
cikqKiBBIGJhc2ljIENvbm5lY3QgRm91ciBnYW1lIGJ1aWx0IHdpdGggU3dp
ZnRVSQoqICoqW01vZGFsIFZpZXddKGh0dHA6Ly9naXRodWIuY29tL2Rpbmlz
a2EvbW9kYWwtdmlldykqKiBBIHNpbXBsZSBhbmQgc2FmZSB3YXkgdG8gZGlz
cGxheSBNb2RhbCB2aWV3cyBpbiBTd2lmdFVJCiogKipbU3dpZnRVSSBDb21w
YXRLaXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9BbWlyS2FtYWxpL1N3aWZ0VUlD
b21wYWN0S2l0KSoqIPCfpJggQSBmcmFtZXdvcmsgdG8gYWRkIG1pc3Npbmcg
VUlLaXQgQ29udHJvbHMgdG8gU3dpZnRVSSDwn6SYCiogKipbU0RXZWJJbWFn
ZVN3aWZ0VUldKGh0dHBzOi8vZ2l0aHViLmNvbS9TRFdlYkltYWdlL1NEV2Vi
SW1hZ2VTd2lmdFVJKSoqLiBTRFdlYkltYWdlIGludGVncmF0aW9uIGZvciBT
d2lmdFVJLiBTdXBwb3J0cyBhc3luYyBpbWFnZSBsb2FkaW5nLCBjYWNoaW5n
LCBhcyB3ZWxsIGFzIGFuaW1hdGVkIGltYWdlIHBsYXliYWNrIGxpa2UgR0lG
LCBBUE5HIGFuZCBBbmltYXRlZCBXZWJQLgoqICoqW0ZsaXBDbG9jay1Td2lm
dFVJXShodHRwczovL2dpdGh1Yi5jb20vZWxwYXNzaW9uL0ZsaXBDbG9jay1T
d2lmdFVJKSoqIEZsaXAgY2xvY2sgaW1wbGVtZW50YXRpb24gaW4gU3dpZnRV
SQoqICoqW0NvdW50ZG93bkZpbG1DbHV0dGVyLVN3aWZ0VUldKGh0dHBzOi8v
Z2l0aHViLmNvbS9lbHBhc3Npb24vQ291bnRkb3duRmlsbUNsdXR0ZXItU3dp
ZnRVSSkqKiBPbGQgZmFzaGlvbmVkIGNvdW50ZG93biBmaWxtIGNsdXR0ZXIg
aW4gU3dpZnRVSQoqICoq8J+HufCfh7dbU3dpZnRVSS1QcmVzZW50YXRpb25d
KGh0dHBzOi8vZ2l0aHViLmNvbS9iYXJpc3V5YXIvU3dpZnRVSS1QcmVzZW50
YXRpb24pKiogU3dpZnRVSSBleHBsYWluZWQgaW4gVHVya2lzaCBhbmQgcHJl
cGFyZWQgYSBkZW1vIGFwcGxpY2F0aW9uLgoqICoqW1NsaWRlcnNdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9Td2lmdFVJRXh0ZW5zaW9ucy9TbGlkZXJzKSoqLiBD
dXN0b20gc2xpZGVycyBhbmQgdHJhY2tzIGZvciBTd2lmdFVJLgoqICoqW/Cf
k5YgUGFnZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9uYWNob25hdmFycm8vUGFn
ZXMpKiogQSBsaWdodHdlaWdodCwgcGFnaW5nIHZpZXcgc29sdXRpb24gZm9y
IFN3aWZ0VUkuCiogKipb8J+agCBQYXJ0aWFsU2hlZXRdKGh0dHBzOi8vZ2l0
aHViLmNvbS9BbmRyZWFNaW90dG8vUGFydGlhbFNoZWV0KSoqIEEgU3dpZnRV
SSBtb2RpZmllciB0byBzaG93IGEgUGFydGlhbCBNb2RhbCBTaGVldCBiYXNl
ZCBvbiBoaXMgY29udGVudCBoZWlnaHQuCiogKipb8J+VkiBDbG9jayB0aW1l
IHBpY2tlcl0oaHR0cHM6Ly9naXRodWIuY29tL3dvcmtpbmdEb2cvQ2xvY2tQ
aWNrZXIpKiouIEEgY2xvY2sgZmFjZSB3aXRoIGRyYWdnYWJsZSBoYW5kcyB0
byBwaWNrIHRoZSBob3VyIGFuZCBtaW51dGVzIG9mIHlvdXIgZGF0ZS4KCiMj
IyMjIExheW91dCDwn46bCiogKipbQVNDb2xsZWN0aW9uVmlld10oaHR0cHM6
Ly9naXRodWIuY29tL2FwcHRla3N0dWRpb3MvQVNDb2xsZWN0aW9uVmlldykq
KiBBIFN3aWZ0VUkgY29sbGVjdGlvbiB2aWV3IHdpdGggc3VwcG9ydCBmb3Ig
Y3VzdG9tIGxheW91dHMuCiogKipbUUdyaWRdKGh0dHBzOi8vZ2l0aHViLmNv
bS9RLU1vYmlsZS9RR3JpZCkqKiBUaGUgbWlzc2luZyBTd2lmdFVJIGNvbGxl
Y3Rpb24gdmlldy4KKiAqKltGbG93U3RhY2tdKGh0dHBzOi8vZ2l0aHViLmNv
bS9qb2huc3VzZWsvRmxvd1N0YWNrKSoqLiBBIGdyaWQgbGF5b3V0IGNvbXBv
bmVudC4KKiAqKltHcmlkU3RhY2tdKGh0dHBzOi8vZ2l0aHViLmNvbS9waWV0
cm9waXp6aS9HcmlkU3RhY2spKiouIEEgZmxleGlibGUgZ3JpZCBsYXlvdXQg
dmlldyBmb3IgU3dpZnRVSS4KKiAqKltXYXRlcmZhbGxHcmlkXShodHRwczov
L2dpdGh1Yi5jb20vcGFvbG9sZW9uYXJkaS9XYXRlcmZhbGxHcmlkKSoqLiBB
IHdhdGVyZmFsbCBncmlkIGxheW91dCB2aWV3IGZvciBTd2lmdFVJLgoqICoq
W0dyaWRdKGh0dHBzOi8vZ2l0aHViLmNvbS9Td2lmdFVJRXh0ZW5zaW9ucy9H
cmlkKSoqLiBTd2lmdFVJIEdyaWQgd2l0aCBjdXN0b20gc3R5bGVzLgoKIyMj
IyDwn5alIFZpZGVvcwoqICoqW1N3aWZ0VUkgU25lYWsgUHJldmlldyBEZW1v
IFByb2plY3RdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9cTQy
MUxsNHFPdmMpKioKKiAqKltIb3cgdG8gUnVuIFN3aWZ0VUkgb24gTW9qYXZl
IHdpdGggUGxheWdyb3VuZHMgYW5kIFNhbXBsZSBDb2RlXShodHRwczovL3d3
dy55b3V0dWJlLmNvbS93YXRjaD92PVZTdno2MmZHeVlNKSoqCiogKipbU3dp
ZnRVSSBCYXNpY3M6IER5bmFtaWMgTGlzdHMsIEhTdGFjayBWU3RhY2ssIElt
YWdlcyB3aXRoIENpcmNsZSBDbGlwcGVkIFN0cm9rZSBPdmVybGF5c10oaHR0
cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1iejZHVFlhSVFYVSkqKgoq
ICoqW1N3aWZ0VUk6IEZhY2Vib29rIENvbXBsZXggTGF5b3V0cyAtIEhvcml6
b250YWwgU2Nyb2xsIFZpZXddKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dh
dGNoP3Y9N1FnUHB2cVRmZW8pKioKKiAqKltTd2lmdFVJIEJhc2ljcyBUdXRv
cmlhbF0oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1JSURpcWdk
bjJ5bykqKgoqICoqW1N3aWZ0VUkgQXBwIFR1dG9yaWFsIC0gTGlzdHMsIE5h
dmlnYXRpb24gYW5kIEpTT04gRGF0YV0oaHR0cHM6Ly93d3cueW91dHViZS5j
b20vd2F0Y2g/dj13YkZ1QXNfVU5ZZykqKgoqICoqW1N3aWZ0VUkgUHJlc2Vu
dGluZyBEYXRhIEluIEEgU2Nyb2xsIFZpZXcgJiBMaXN0XShodHRwczovL3d3
dy55b3V0dWJlLmNvbS93YXRjaD92PXdqcURRM1g1Vm9zKSoqCiogKipbSW50
cm8gVG8gU3dpZnRVSTogU2ltcGxlIFN0YXRlIE1hbmFnZW1lbnRdKGh0dHBz
Oi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9QVdQaXVwOWZFMmMpKioKKiAq
KltCZWZvcmUgWW91IExlYXJuIFN3aWZ0VUksIFlvdSBOZWVkIFRvIEhlYXIg
VGhpcy4uLl0oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1IOVh5
Wl9GMXRQSSkqKgoqICoqW1N3aWZ0VUkgPSBNaW5kLWJsb3cgLSBXV0RDIGlP
UyBkZXZlbG9wZXIgcmVhY3Rpb25dKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29t
L3dhdGNoP3Y9ZmJ1T3hLcUM1d1EpKioKKiAqKltTd2lmdFVJIC0gRE9OJ1Qg
TEVBUk4gSVQgKEpVU1QgWUVUKV0oaHR0cHM6Ly93d3cueW91dHViZS5jb20v
d2F0Y2g/dj1BS0hzRk50QU5lcykqKgoqICoqW1N3aWZ0VUkgQmVnaW5uZXIg
VHV0b3JpYWwgT24gaU9TIDEzIGJ5IERldnNsb3Blc10oaHR0cHM6Ly93d3cu
eW91dHViZS5jb20vd2F0Y2g/dj13d0RBdnE5TVpsUSkqKgoqICoqW1NpbXBs
ZSBTd2lmdFVJIEFwcCBieSBCcmlhbiBBZHZlbnRdKGh0dHBzOi8vd3d3Lnlv
dXR1YmUuY29tL3dhdGNoP3Y9UGZ3N3pXeGNoUWMpKioKKiAqKltTd2lmdFVJ
IFR1dG9yaWFsIChTd2lmdCBVSSBCYXNpY3MgaW4gMSBWaWRlbyldKGh0dHBz
Oi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9SUlEaXFnZG4yeW8mcmVmPXF1
dXUpKioKKiAqKltIb3cgVG8gQ3JlYXRlIFZpZXdzLCBUZXh0IGFuZCBTdGFj
a3Mgd2l0aCBTd2lmdCBVSSBvbiBNb2phdmVdKGh0dHBzOi8vd3d3LnlvdXR1
YmUuY29tL3dhdGNoP3Y9d2J4YmUzNUJibjQpKioKKiAqKltTd2lmdFVJIE5h
dmlnYXRpb25WaWV3LCBMaXN0LCBUZXh0LCBOYXZpZ2F0aW9uQmFyVGl0bGUg
WGNvZGUgMTFdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9cnlT
VXVYa041d2cpKioKKiAqKltOYXZpZ2F0aW9uVmlldyBhbmQgTmF2aWdhdGlv
bkJ1dHRvbiAtIFB1c2ggVmlldyBpbiBTd2lmdFVJXShodHRwczovL3d3dy55
b3V0dWJlLmNvbS93YXRjaD92PTh0WmpWUlhzdWlnKSoqCiogKipbV2hhdCdz
IGJlaGluZCBTd2lmdFVJIERTTD8gLSBTd2lmdCBGdW5jdGlvbiBCdWlsZGVy
cyAtIEZvbGxvd2luZyBTd2lmdCBFdm9sdXRpb25dKGh0dHBzOi8veW91dHUu
YmUvWUc1dTBhRmdHUUkpKioKKiAqKltMZXQncyBDb2RlIFN3aWZ0VUkgKFdX
REMgMjAxOSBQcmV2aWV3KSAtIExlc3NvbiAjMDAgLSDDnGJlciBkYXMgTGV0
J3MgQ29kZV0oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj0wb0ky
OUZJdWZRVSZmZWF0dXJlPXlvdXR1LmJlKSoqCiogKipbU3dpZnRVSSAtIFVu
ZGVyc3RhbmRpbmcgU3RhdGVdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dh
dGNoP3Y9S0Q0T0FqUUpZUGMmZmVhdHVyZT15b3V0dS5iZSkqKgoqICoqW1N3
aWZ0VUkgLSBMaXN0cyAtIENyZWF0ZSBTb21ldGhpbmcgbGlrZSBVSVRhYmxl
Vmlld10oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj12TGExejV3
VmtxMCkqKgoqICoq8J+HqvCfh7ggW1N3aWZ0VUk6IFByaW1lcm9zIFBhc29z
IGVuIFhjb2RlIDExIGUgaU9TIDEzXShodHRwczovL3lvdXR1LmJlL1ZkT3py
c0pKSWJjKSoqCiogKirwn4eq8J+HuCBbU3dpZnRVSSArIFhjb2RlIDExOiBE
ZXNjdWJyZSBTd2lmdCBQYWNrYWdlIE1hbmFnZXIgeSBTRiBTeW1ib2xzXSho
dHRwczovL3lvdXR1LmJlLzkzWUJtUU5wX3NRKSoqCiogKipbU3dpZnRVSSBU
dXRvcmlhbCAtIENyZWF0ZSBhIGxpc3QgdGhhdCBmZXRjaGVzIEpTT05dKGh0
dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9eGtjbGYzQWx6OE0pKioK
KiAqKltTd2lmdFVJIENvbXBsZXRlIEFwcHMgIzE6IEJ1aWxkIGEgZHluYW1p
YyBsaXN0IGFwcCB3aXRoIG5hdmlnYXRpb24gYW5kIGltYWdlcyDigJMgVHV0
b3JpYWxdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9VkdKQkxs
ZlNOLVkmZmVhdHVyZT15b3V0dS5iZSkqKgoqICoqW0NvbXBsZXggVUkgd2l0
aCBTd2lmdFVJIGZyb20gU3RhcnQgdG8gRmluaXNoXShodHRwczovL3d3dy55
b3V0dWJlLmNvbS93YXRjaD92PVhldHJibW5zempjKSoqCiogKipbU3dpZnRV
SSBpbiBVSUtpdD8gWWVzISBNZWV0IER1Y2tVSSAtIEZ1bGwgQ291cnNlXSho
dHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PURqSVRIR1ViUlN3Jmxp
c3Q9UExfY3NBQU85UFE4Yk9NU242SG5VMzFod3FfX1lxNGUyaCkqKgoqICoq
W1N3aWZ0VUkgYW5kIFN0YXRlIE1hbmFnZW1lbnQ6IFBhcnQgMV0oaHR0cHM6
Ly93d3cucG9pbnRmcmVlLmNvL2VwaXNvZGVzL2VwNjUtc3dpZnR1aS1hbmQt
c3RhdGUtbWFuYWdlbWVudC1wYXJ0LTEpKioKKiAqKltTd2lmdFVJIGFuZCBT
dGF0ZSBNYW5hZ2VtZW50OiBQYXJ0IDJdKGh0dHBzOi8vd3d3LnBvaW50ZnJl
ZS5jby9lcGlzb2Rlcy9lcDY2LXN3aWZ0dWktYW5kLXN0YXRlLW1hbmFnZW1l
bnQtcGFydC0yKSoqCiogKipbT3JpZW50IFZpZXdzIEFsb25nIENpcmN1bGFy
IE1vdGlvbiBQYXRoXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92
PThWNm1MeWVXWDU4KSoqCiogKipbU3dpZnRVSS1DU1MsIFRoZSBtaXNzaW5n
IENTUy1saWtlIG1vZHVsZSBmb3IgU3dpZnRVSV0oaHR0cHM6Ly9naXRodWIu
Y29tL2hpdGUvU3dpZnRVSS1DU1MpKioKCiMjIyMg8J+UlyBXZWJzaXRlcwoq
ICoqW1N3aWZ0VUkgSHViIC0gU3dpZnRVSSBUdXRvcmlhbHMgJiBSZXNvdXJj
ZXNdKGh0dHBzOi8vc3dpZnR1aWh1Yi5jb20pKioKKiAqKltGdWNraW5nIFN3
aWZ0VUkgLSBTd2lmdFVJIENoZWF0IFNoZWV0XShodHRwczovL2Z1Y2tpbmdz
d2lmdHVpLmNvbSkqKgoqICoqW0dvc2ggRGFybiBTd2lmdFVJIC0gU3dpZnRV
SSBDaGVhdCBTaGVldCAod29yay1mcmllbmRseSBtaXJyb3IpXShodHRwczov
L2dvc2hkYXJuc3dpZnR1aS5jb20pKioKKiAqKltUaGUgU3dpZnRVSSBMYWIg
LSBXaGVuIHRoZSBkb2N1bWVudGF0aW9uIGlzIG1pc3NpbmcsIHdlIGV4cGVy
aW1lbnRdKGh0dHBzOi8vc3dpZnR1aS1sYWIuY29tKSoqCgojIyMjIOKdpO+4
jyBDb250cmlidXRpbmcKRmVlbCBmcmVlIHRvIGNvbnRyaWJ1dGUhISBUaGlz
IHJlcG8gaXMgeW91cnMuCg==
",,3727,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'discover-flask',20451520,b'Full Stack Web Development with Flask.',b'Python',5,3727,,229,False,b'https://api.github.com/repos/realpython/discover-flask/forks',"IyBEaXNjb3ZlciBGbGFzawoKRnVsbCBTdGFjayBXZWIgRGV2ZWxvcG1lbnQg
d2l0aCBGbGFzay4KCioqaHR0cDovL2Rpc2NvdmVyZmxhc2suY29tKioKClsh
W0J1aWxkIFN0YXR1c10oaHR0cHM6Ly90cmF2aXMtY2kub3JnL3JlYWxweXRo
b24vZGlzY292ZXItZmxhc2suc3ZnP2JyYW5jaD1tYXN0ZXIpXShodHRwczov
L3RyYXZpcy1jaS5vcmcvcmVhbHB5dGhvbi9kaXNjb3Zlci1mbGFzaykKCltG
bGFza10oaHR0cDovL2ZsYXNrLnBvY29vLm9yZy8pIGlzIGEgbWljcm8gd2Vi
IGZyYW1ld29yayBwb3dlcmVkIGJ5IFB5dGhvbi4gSXRzIEFQSSBpcyBmYWly
bHkgc21hbGwsIG1ha2luZyBpdCBlYXN5IHRvIGxlYXJuIGFuZCBzaW1wbGUg
dG8gdXNlLiBCdXQgZG9uJ3QgbGV0IHRoaXMgZm9vbCB5b3UsIGFzIGl0J3Mg
cG93ZXJmdWwgZW5vdWdoIHRvIHN1cHBvcnQgZW50ZXJwcmlzZS1sZXZlbCBh
cHBsaWNhdGlvbnMgaGFuZGxpbmcgbGFyZ2UgYW1vdW50cyBvZiB0cmFmZmlj
LiBZb3UgY2FuIHN0YXJ0IHNtYWxsIHdpdGggYW4gYXBwIGNvbnRhaW5lZCBl
bnRpcmVseSBpbiBvbmUgZmlsZSwgdGhlbiBzbG93bHkgc2NhbGUgdXAgdG8g
bXVsdGlwbGUgZmlsZXMgYW5kIGZvbGRlcnMgaW4gYSB3ZWxsLXN0cnVjdHVy
ZWQgbWFubmVyIGFzIHlvdXIgc2l0ZSBiZWNvbWVzIG1vcmUgYW5kIG1vcmUg
Y29tcGxleC4KCiFbcmVhbF9weXRob25fbG9nb10oaHR0cHM6Ly9yYXcuZ2l0
aHVidXNlcmNvbnRlbnQuY29tL3JlYWxweXRob24vYWJvdXQvbWFzdGVyL3Jw
X3NtYWxsLnBuZykKCj4gUGxlYXNlIG5vdGU6IFRoaXMgaXMgYSB0dXRvcmlh
bCBzZXJpZXMsIHdoaWNoIGlzIHN0aWxsIGluIHByb2dyZXNzLiBUaGUgc291
cmNlIGNvZGUgaXMgbm90IG1lYW50IHRvIGJlIHVzZWQgdW50aWwgdGhlIGVu
ZCBvZiB0aGUgc2VyaWVzLgoKIyMgU3VwcG9ydAoKUGxlYXNlIGhlbHAgdXMg
a2VlcCB0aGlzIGZyZWUsIG9wZW4gc291cmNlIHByb2plY3QgZ29pbmcuIFB1
cmNoYXNlIHRoZSBbUmVhbCBQeXRob25dKGh0dHBzOi8vcmVhbHB5dGhvbi5j
b20vKSBjb3Vyc2UuIFByb3ZpZGUgZ3JhdGl0dWRlIHRocm91Z2ggW0dyYXRp
cGF5XShodHRwczovL2dyYXRpcGF5LmNvbS9tamhlYTAvKS4gU3RhciB0aGlz
IHJlcG8uIFR3ZWV0IGFib3V0IGl0LiBBbnl0aGluZyBoZWxwcy4gVGhhbmsg
eW91IQoKPGEgaHJlZj0iaHR0cHM6Ly9ncmF0aXBheS5jb20vbWpoZWEwLyI+
CiAgPGltZyBhbHQ9IlN1cHBvcnQgdmlhIEdyYXRpcGF5IiBzcmM9Imh0dHBz
Oi8vY2RuLnJhd2dpdC5jb20vZ3JhdGlwYXkvZ3JhdGlwYXktYmFkZ2UvMi4x
LjMvZGlzdC9ncmF0aXBheS5wbmciLz4KPC9hPgoKIyMgQ29udGVudHMKCgp8
IFBhcnQgfCAgICAgIFRpdGxlICAgICAgICAgICAgICAgIHwgR2l0IFRhZyB8
CnwtLS0tLS18LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tfC0tLS0tLS0t
LXwKfCAxICAgIHwgW1NldHRpbmcgVXAgYSBTdGF0aWMgU2l0ZV0oaHR0cDov
L3lvdXR1LmJlL1dmcEZVbVYxZDB3KSAoW2Jsb2cgcG9zdF0oaHR0cDovL3d3
dy5yZWFscHl0aG9uLmNvbS9ibG9nL3B5dGhvbi9pbnRyb2R1Y3Rpb24tdG8t
Zmxhc2stcGFydC0xLXNldHRpbmctdXAtYS1zdGF0aWMtc2l0ZSkpIHwgW3Bh
cnQxXShodHRwczovL2dpdGh1Yi5jb20vcmVhbHB5dGhvbi9kaXNjb3Zlci1m
bGFzay90cmVlL3BhcnQxKSB8CnwgMiAgICB8IFtDcmVhdGluZyBhIGxvZ2lu
IHBhZ2VdKGh0dHA6Ly95b3V0dS5iZS9iTEE2ZUJHTi1fMCkgKFtibG9nIHBv
c3RdKGh0dHA6Ly93d3cucmVhbHB5dGhvbi5jb20vYmxvZy9weXRob24vaW50
cm9kdWN0aW9uLXRvLWZsYXNrLXBhcnQtMi1jcmVhdGluZy1hLWxvZ2luLXBh
Z2UpKSB8IFtwYXJ0Ml0oaHR0cHM6Ly9naXRodWIuY29tL3JlYWxweXRob24v
ZGlzY292ZXItZmxhc2svdHJlZS9wYXJ0MikgfAp8IDMgICAgfCBbVXNlciBB
dXRoZW50aWNhdGlvbl0oaHR0cDovL3lvdXR1LmJlL0JuQmpobXNwdzRjKSB8
IFtwYXJ0M10oaHR0cHM6Ly9naXRodWIuY29tL3JlYWxweXRob24vZGlzY292
ZXItZmxhc2svdHJlZS9wYXJ0MykgfAp8IDQgICAgfCBbVGVtcGxhdGUgSW5o
ZXJpdGFuY2VdKGh0dHA6Ly95b3V0dS5iZS9oTnpydXdWUHRDRSkgfCBbcGFy
dDRdKGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFscHl0aG9uL2Rpc2NvdmVyLWZs
YXNrL3RyZWUvcGFydDQpIHwKfCA1ICAgIHwgW0RhdGFiYXNlc10oaHR0cDov
L3lvdXR1LmJlL192ckFqQUhoVXNBKSB8IFtwYXJ0NV0oaHR0cHM6Ly9naXRo
dWIuY29tL3JlYWxweXRob24vZGlzY292ZXItZmxhc2svdHJlZS9wYXJ0NSkg
fAp8IDYgICAgfCBbTGlzdCBDb21wcmVoZW5zaW9uc10oaHR0cDovL3lvdXR1
LmJlL1dxbXFOQzhUZWVvKSB8IE4vQSB8CnwgNyAgICB8IFtVbml0IFRlc3Rz
XShodHRwOi8veW91dHUuYmUvMWFITnMxYUVBVGcpIHwgW3BhcnQ3XShodHRw
czovL2dpdGh1Yi5jb20vcmVhbHB5dGhvbi9kaXNjb3Zlci1mbGFzay90cmVl
L3BhcnQ3KSB8CnwgOCAgICB8IFtEZXBsb3lpbmcgdG8gSGVyb2t1XShodHRw
Oi8veW91dHUuYmUvTDl1RDc0bkh2RlkpIHwgW3BhcnQ4XShodHRwczovL2dp
dGh1Yi5jb20vcmVhbHB5dGhvbi9kaXNjb3Zlci1mbGFzay90cmVlL3BhcnQ4
KSB8CnwgOSAgICB8IFtTUUxBbGNoZW15XShodHRwczovL3d3dy55b3V0dWJl
LmNvbS93YXRjaD92PWt1eXJMNmtya3dBKSB8IFtwYXJ0OV0oaHR0cHM6Ly9n
aXRodWIuY29tL3JlYWxweXRob24vZGlzY292ZXItZmxhc2svdHJlZS9wYXJ0
OSkgfAp8IDEwICAgfCBbQ29uZmlndXJhdGlvbl0oaHR0cHM6Ly93d3cueW91
dHViZS5jb20vd2F0Y2g/dj00RXd3M3dWWksySSkgfCBbcGFydDEwXShodHRw
czovL2dpdGh1Yi5jb20vcmVhbHB5dGhvbi9kaXNjb3Zlci1mbGFzay90cmVl
L3BhcnQxMCkgfAp8IDExICAgfCBbU2VjcmV0IEtleV0oaHR0cDovL3lvdXR1
LmJlL3RxdTl5NGlxS1ZJKSB8IFtwYXJ0MTFdKGh0dHBzOi8vZ2l0aHViLmNv
bS9yZWFscHl0aG9uL2Rpc2NvdmVyLWZsYXNrL3RyZWUvcGFydDExKSB8Cnwg
MTIgICB8IFtIZXJva3UgQ29uZmlndXJhdGlvbiBTZXR0aW5nc10oaHR0cDov
L3lvdXR1LmJlL1ktT054RmtBVUpjKSB8IFtwYXJ0MTJdKGh0dHBzOi8vZ2l0
aHViLmNvbS9yZWFscHl0aG9uL2Rpc2NvdmVyLWZsYXNrL3RyZWUvcGFydDEy
KSB8CnwgMTMgICB8IFtIZXJva3UgUG9zdGdyZXMgU2V0dXBdKGh0dHBzOi8v
d3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9RkQwcC1vcGR5b0UpIHwgW3BhcnQx
M10oaHR0cHM6Ly9naXRodWIuY29tL3JlYWxweXRob24vZGlzY292ZXItZmxh
c2svdHJlZS9wYXJ0MTMpIHwKfCAxNCAgIHwgW0xvY2FsIFBvc3RncmVTUUwg
U2V0dXBdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9VXAzcDIw
cmdXQ3cpIHwgW3BhcnQxNF0oaHR0cHM6Ly9naXRodWIuY29tL3JlYWxweXRo
b24vZGlzY292ZXItZmxhc2svdHJlZS9wYXJ0MTQpIHwKfCAxNSAgIHwgW01h
bmFnaW5nIERhdGFiYXNlIE1pZ3JhdGlvbnNdKGh0dHA6Ly95b3V0dS5iZS9Z
SmliTlNJLWlhRSkgfCBbcGFydDE1XShodHRwczovL2dpdGh1Yi5jb20vcmVh
bHB5dGhvbi9kaXNjb3Zlci1mbGFzay90cmVlL3BhcnQxNSkgfAp8IDE2ICAg
fCBbRGF0YWJhc2UgRG93bmdyYWRlcyB3aXRoIEZsYXNrLU1pZ3JhdGUvQWxl
bWJpY10oaHR0cDovL3lvdXR1LmJlLzVVVDFiaW5WdVljKSB8IFtwYXJ0MTZd
KGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFscHl0aG9uL2Rpc2NvdmVyLWZsYXNr
L3RyZWUvcGFydDE2KSB8CnwgMTcgICB8IFtWaXJ0dWFsZW52d3JhcHBlcl0o
aHR0cDovL3lvdXR1LmJlL3RoSE5ZVnJZMGxVKSB8IFtwYXJ0MTddKGh0dHBz
Oi8vZ2l0aHViLmNvbS9yZWFscHl0aG9uL2Rpc2NvdmVyLWZsYXNrL3RyZWUv
cGFydDE3KSB8CnwgMTggICB8IFtQYXNzd29yZCBIYXNoaW5nXShodHRwOi8v
eW91dHUuYmUvTFRKSDVNZGduNHcpIHwgW3BhcnQxOF0oaHR0cHM6Ly9naXRo
dWIuY29tL3JlYWxweXRob24vZGlzY292ZXItZmxhc2svdHJlZS9wYXJ0MTgp
IHwKfCAxOSAgIHwgW0JsdWVwcmludHNdKGh0dHA6Ly95b3V0dS5iZS9BZUlf
ckJlWm13ZykgfCBbcGFydDE5XShodHRwczovL2dpdGh1Yi5jb20vcmVhbHB5
dGhvbi9kaXNjb3Zlci1mbGFzay90cmVlL3BhcnQxOSkgfAp8IDIwICAgfCBb
Qmx1ZXByaW50cyBSZWR1eF0oaHR0cDovL3lvdXR1LmJlL1R3TnAxVWFnRTlV
KSB8IFtwYXJ0MjBdKGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFscHl0aG9uL2Rp
c2NvdmVyLWZsYXNrL3RyZWUvcGFydDIwKSB8CnwgMjEgICB8IFtVc2VyIEF1
dGhlbnRpY2F0aW9uIChwYXJ0IDIpXShodHRwOi8veW91dHUuYmUvX3B6TURJ
aTVCdUkpIHwgW3BhcnQyMV0oaHR0cHM6Ly9naXRodWIuY29tL3JlYWxweXRo
b24vZGlzY292ZXItZmxhc2svdHJlZS9wYXJ0MjEpIHwKfCAyMiAgIHwgW1Vu
aXQgVGVzdGluZyB3aXRoIEZsYXNrLVRlc3RpbmddKGh0dHA6Ly95b3V0dS5i
ZS9XRGhfVlE0MWtZSSkgfCBbcGFydDIyXShodHRwczovL2dpdGh1Yi5jb20v
cmVhbHB5dGhvbi9kaXNjb3Zlci1mbGFzay90cmVlL3BhcnQyMikgfAp8IDIz
ICAgfCBbU2Vzc2lvbiBNYW5hZ2VtZW50IHdpdGggRmxhc2stTG9naW5dKGh0
dHA6Ly95b3V0dS5iZS9ySkdNT09TbkhMMCkgfCBbcGFydDIzXShodHRwczov
L2dpdGh1Yi5jb20vcmVhbHB5dGhvbi9kaXNjb3Zlci1mbGFzay90cmVlL3Bh
cnQyMykgfAp8IDI0ICAgfCBbVGVzdGluZyBVc2VyIExvZ2luIGFuZCBMb2dv
dXRdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9djBmcDFPN3pD
VVkpIHwgW3BhcnQyNF0oaHR0cHM6Ly9naXRodWIuY29tL3JlYWxweXRob24v
ZGlzY292ZXItZmxhc2svdHJlZS9wYXJ0MjQpIHwKfCAyNSAgIHwgW1VzZXIg
UmVnaXN0cmF0aW9uIChmdW5jdGlvbmFsaXR5IGFuZCB1bml0IHRlc3RzKV0o
aHR0cDovL3lvdXR1LmJlL2t0NFBFYTV0c1Z3KSB8IFtwYXJ0MjVdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9yZWFscHl0aG9uL2Rpc2NvdmVyLWZsYXNrL3RyZWUv
cGFydDI1KSB8CnwgMjYgICB8IFtGaW5hbGl6ZSBNZXNzYWdpbmcgU3lzdGVt
XShodHRwOi8veW91dHUuYmUvV25UMTg4ZVBIZzQpIHwgW3BhcnQyNl0oaHR0
cHM6Ly9naXRodWIuY29tL3JlYWxweXRob24vZGlzY292ZXItZmxhc2svdHJl
ZS9wYXJ0MjYpIHwKfCAyNyAgIHwgW1Rlc3QgQ292ZXJhZ2Ugd2l0aCBjb3Zl
cmFnZS5weV0oaHR0cDovL3lvdXR1LmJlLzdBcWNuMC11QXIwKSB8IFtwYXJ0
MjddKGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFscHl0aG9uL2Rpc2NvdmVyLWZs
YXNrL3RyZWUvcGFydDI3KSB8CnwgMjggICB8IFtGbGFzayBUZXN0aW5nIV0o
aHR0cDovL3lvdXR1LmJlL1lPMms4MGFESmo4KSB8IFtwYXJ0MjhdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9yZWFscHl0aG9uL2Rpc2NvdmVyLWZsYXNrL3RyZWUv
cGFydDI4KSB8CnwgMjkgICB8IFtGbGFzayBUZXN0aW5nIChpbmNyZWFzZSB0
ZXN0IGNvdmVyYWdlKV0oaHR0cDovL3lvdXR1LmJlL0FTTk5UYjZvM3BVKSB8
IFtwYXJ0MjldKGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFscHl0aG9uL2Rpc2Nv
dmVyLWZsYXNrL3RyZWUvcGFydDI5KSB8CnwgMzAgICB8IFtDb250aW51b3Vz
IEludGVncmF0aW9uXShodHRwOi8veW91dHUuYmUvcUFlNnZfNlNNQTgpIHwg
W3BhcnQzMF0oaHR0cHM6Ly9naXRodWIuY29tL3JlYWxweXRob24vZGlzY292
ZXItZmxhc2svdHJlZS9wYXJ0MzApIHwKCgoqKllvdSBjYW4gdmlldyB0aGUg
ZW50aXJlIHZpZGVvIHBsYXlsaXN0IFtoZXJlXShodHRwOi8vd3d3LnlvdXR1
YmUuY29tL3dhdGNoP3Y9V2ZwRlVtVjFkMHcmbGlzdD1QTExqbWJoNlhQR0s0
SVNZNzQ3RlVIWEVsOWxCeHJlNG1NJmZlYXR1cmU9c2hhcmUpLioqCgojIyBM
aW5rcwoKLSBOaWNlIFZhZ3JhbnQgW0luc3RhbmNlXShodHRwczovL2dpdGh1
Yi5jb20vYXBvbGxvY2xhcmsvZGlzY292ZXItZmxhc2stdmFncmFudCkgZm9y
IERpc2NvdmVyIEZsYXNrLCBmb3IgdXNlIHdpdGggW1B5SmVua2luc0NJXSho
dHRwczovL2dpdGh1Yi5jb20vYXBvbGxvY2xhcmsvcHktamVua2lucy1jaSkg
LSBhIHRlc3QgSmVua2lucyBDb250aW51b3VzIEludGVncmF0aW9uIChDSSkg
Zm9yIFB5dGhvbiBwcm9qZWN0cywgY29tcGF0aWJsZSB3aXRoIE1hYyBPU1gg
YW5kIFVidW50dSBzeXN0ZW1zLiAoVGhhbmtzLCBbQXBvbGxvXShodHRwczov
L2dpdGh1Yi5jb20vYXBvbGxvY2xhcmspISkKLSBBd2Vzb21lIHByb2plY3Qs
IGJhc2VkIG9uIHRoZSBzZXJpZXMgLT4gW0hvbWVDZW50ZXJdKGh0dHBzOi8v
Z2l0aHViLmNvbS9UaHVzdHJhL0hvbWVDZW50ZXIpCgoKCg==
",,3727,"bGFuZ3VhZ2U6IHB5dGhvbgpweXRob246CiAgLSAiMi43IgojIGNvbW1hbmQg
dG8gaW5zdGFsbCBkZXBlbmRlbmNpZXMKaW5zdGFsbDogInBpcCBpbnN0YWxs
IC1yIHJlcXVpcmVtZW50cy50eHQiCiMgY29tbWFuZCB0byBydW4gdGVzdHMK
c2NyaXB0OiAicHl0aG9uIG1hbmFnZS5weSB0ZXN0Ig==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'DVWA',9791525,b'Damn Vulnerable Web Application (DVWA)',b'PHP',24,3726,,249,False,b'https://api.github.com/repos/ethicalhack3r/DVWA/forks',"IyBEQU1OIFZVTE5FUkFCTEUgV0VCIEFQUExJQ0FUSU9ODQoNCkRhbW4gVnVs
bmVyYWJsZSBXZWIgQXBwbGljYXRpb24gKERWV0EpIGlzIGEgUEhQL015U1FM
IHdlYiBhcHBsaWNhdGlvbiB0aGF0IGlzIGRhbW4gdnVsbmVyYWJsZS4gSXRz
IG1haW4gZ29hbCBpcyB0byBiZSBhbiBhaWQgZm9yIHNlY3VyaXR5IHByb2Zl
c3Npb25hbHMgdG8gdGVzdCB0aGVpciBza2lsbHMgYW5kIHRvb2xzIGluIGEg
bGVnYWwgZW52aXJvbm1lbnQsIGhlbHAgd2ViIGRldmVsb3BlcnMgYmV0dGVy
IHVuZGVyc3RhbmQgdGhlIHByb2Nlc3NlcyBvZiBzZWN1cmluZyB3ZWIgYXBw
bGljYXRpb25zIGFuZCB0byBhaWQgYm90aCBzdHVkZW50cyAmIHRlYWNoZXJz
IHRvIGxlYXJuIGFib3V0IHdlYiBhcHBsaWNhdGlvbiBzZWN1cml0eSBpbiBh
IGNvbnRyb2xsZWQgY2xhc3Mgcm9vbSBlbnZpcm9ubWVudC4NCg0KVGhlIGFp
bSBvZiBEVldBIGlzIHRvICoqcHJhY3RpY2Ugc29tZSBvZiB0aGUgbW9zdCBj
b21tb24gd2ViIHZ1bG5lcmFiaWxpdGllcyoqLCB3aXRoICoqdmFyaW91cyBs
ZXZlbHMgb2YgZGlmZmljdWx0eSoqLCB3aXRoIGEgc2ltcGxlIHN0cmFpZ2h0
Zm9yd2FyZCBpbnRlcmZhY2UuDQpQbGVhc2Ugbm90ZSwgdGhlcmUgYXJlICoq
Ym90aCBkb2N1bWVudGVkIGFuZCB1bmRvY3VtZW50ZWQgdnVsbmVyYWJpbGl0
aWVzKiogd2l0aCB0aGlzIHNvZnR3YXJlLiBUaGlzIGlzIGludGVudGlvbmFs
LiBZb3UgYXJlIGVuY291cmFnZWQgdG8gdHJ5IGFuZCBkaXNjb3ZlciBhcyBt
YW55IGlzc3VlcyBhcyBwb3NzaWJsZS4NCi0gLSAtDQoNCiMjIFdBUk5JTkch
DQoNCkRhbW4gVnVsbmVyYWJsZSBXZWIgQXBwbGljYXRpb24gaXMgZGFtbiB2
dWxuZXJhYmxlISAqKkRvIG5vdCB1cGxvYWQgaXQgdG8geW91ciBob3N0aW5n
IHByb3ZpZGVyJ3MgcHVibGljIGh0bWwgZm9sZGVyIG9yIGFueSBJbnRlcm5l
dCBmYWNpbmcgc2VydmVycyoqLCBhcyB0aGV5IHdpbGwgYmUgY29tcHJvbWlz
ZWQuIEl0IGlzIHJlY29tbWVuZGVkIHVzaW5nIGEgdmlydHVhbCBtYWNoaW5l
IChzdWNoIGFzIFtWaXJ0dWFsQm94XShodHRwczovL3d3dy52aXJ0dWFsYm94
Lm9yZy8pIG9yIFtWTXdhcmVdKGh0dHBzOi8vd3d3LnZtd2FyZS5jb20vKSks
IHdoaWNoIGlzIHNldCB0byBOQVQgbmV0d29ya2luZyBtb2RlLiBJbnNpZGUg
YSBndWVzdCBtYWNoaW5lLCB5b3UgY2FuIGRvd25sb2FkIGFuZCBpbnN0YWxs
IFtYQU1QUF0oaHR0cHM6Ly93d3cuYXBhY2hlZnJpZW5kcy5vcmcvZW4veGFt
cHAuaHRtbCkgZm9yIHRoZSB3ZWIgc2VydmVyIGFuZCBkYXRhYmFzZS4NCg0K
IyMjIERpc2NsYWltZXINCg0KV2UgZG8gbm90IHRha2UgcmVzcG9uc2liaWxp
dHkgZm9yIHRoZSB3YXkgaW4gd2hpY2ggYW55IG9uZSB1c2VzIHRoaXMgYXBw
bGljYXRpb24gKERWV0EpLiBXZSBoYXZlIG1hZGUgdGhlIHB1cnBvc2VzIG9m
IHRoZSBhcHBsaWNhdGlvbiBjbGVhciBhbmQgaXQgc2hvdWxkIG5vdCBiZSB1
c2VkIG1hbGljaW91c2x5LiBXZSBoYXZlIGdpdmVuIHdhcm5pbmdzIGFuZCB0
YWtlbiBtZWFzdXJlcyB0byBwcmV2ZW50IHVzZXJzIGZyb20gaW5zdGFsbGlu
ZyBEVldBIG9uIHRvIGxpdmUgd2ViIHNlcnZlcnMuIElmIHlvdXIgd2ViIHNl
cnZlciBpcyBjb21wcm9taXNlZCB2aWEgYW4gaW5zdGFsbGF0aW9uIG9mIERW
V0EsIGl0IGlzIG5vdCBvdXIgcmVzcG9uc2liaWxpdHksIGl0IGlzIHRoZSBy
ZXNwb25zaWJpbGl0eSBvZiB0aGUgcGVyc29uL3Mgd2hvIHVwbG9hZGVkIGFu
ZCBpbnN0YWxsZWQgaXQuDQoNCi0gLSAtDQoNCiMjIExpY2Vuc2UNCg0KVGhp
cyBmaWxlIGlzIHBhcnQgb2YgRGFtbiBWdWxuZXJhYmxlIFdlYiBBcHBsaWNh
dGlvbiAoRFZXQSkuDQoNCkRhbW4gVnVsbmVyYWJsZSBXZWIgQXBwbGljYXRp
b24gKERWV0EpIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmli
dXRlIGl0IGFuZC9vciBtb2RpZnkNCml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0
aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5
DQp0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lv
biAzIG9mIHRoZSBMaWNlbnNlLCBvcg0KKGF0IHlvdXIgb3B0aW9uKSBhbnkg
bGF0ZXIgdmVyc2lvbi4NCg0KRGFtbiBWdWxuZXJhYmxlIFdlYiBBcHBsaWNh
dGlvbiAoRFZXQSkgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBp
dCB3aWxsIGJlIHVzZWZ1bCwNCmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsg
d2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mDQpNRVJDSEFO
VEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0Uu
ICBTZWUgdGhlDQpHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9y
ZSBkZXRhaWxzLg0KDQpZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5
IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZQ0KYWxvbmcgd2l0
aCBEYW1uIFZ1bG5lcmFibGUgV2ViIEFwcGxpY2F0aW9uIChEVldBKS4gIElm
IG5vdCwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8uDQoNCi0g
LSAtDQojIyBEb3dubG9hZCBhbmQgaW5zdGFsbCBhcyBhIGRvY2tlciBjb250
YWluZXINCi0gW2RvY2tlcmh1YiBwYWdlXShodHRwczovL2h1Yi5kb2NrZXIu
Y29tL3IvdnVsbmVyYWJsZXMvd2ViLWR2d2EvKQ0KYGRvY2tlciBydW4gLS1y
bSAtaXQgLXAgODA6ODAgdnVsbmVyYWJsZXMvd2ViLWR2d2FgDQoNClBsZWFz
ZSBlbnN1cmUgeW91IGFyZSB1c2luZyBhdWZzIGR1ZSB0byBwcmV2aW91cyBN
eVNRTCBpc3N1ZXMuIFJ1biBgZG9ja2VyIGluZm9gIHRvIGNoZWNrIHlvdXIg
c3RvcmFnZSBkcml2ZXIuIElmIGl0IGlzbid0IGF1ZnMsIHBsZWFzZSBjaGFu
Z2UgaXQgYXMgc3VjaC4gVGhlcmUgYXJlIGd1aWRlcyBmb3IgZWFjaCBvcGVy
YXRpbmcgc3lzdGVtIG9uIGhvdyB0byBkbyB0aGF0LCBidXQgdGhleSdyZSBx
dWl0ZSBkaWZmZXJlbnQgc28gd2Ugd29uJ3QgY292ZXIgdGhhdCBoZXJlLg0K
DQojIyBEb3dubG9hZA0KDQpEVldBIGlzIGF2YWlsYWJsZSBlaXRoZXIgYXMg
YSBwYWNrYWdlIHRoYXQgd2lsbCBydW4gb24geW91ciBvd24gd2ViIHNlcnZl
ciBvciBhcyBhIExpdmUgQ0Q6DQoNCiAgKyBEVldBIHYxLjkgU291cmNlIChT
dGFibGUpIC0gXFsxLjMgTUJcXSBbRG93bmxvYWQgWklQXShodHRwczovL2dp
dGh1Yi5jb20vZXRoaWNhbGhhY2szci9EVldBL2FyY2hpdmUvdjEuOS56aXAp
IC0gUmVsZWFzZWQgMjAxNS0xMC0wNQ0KICArIERWV0EgdjEuMC43IExpdmVD
RCAtIFxbNDgwIE1CXF0gW0Rvd25sb2FkIElTT10oaHR0cDovL3d3dy5kdndh
LmNvLnVrL0RWV0EtMS4wLjcuaXNvKSAtIFJlbGVhc2VkIDIwMTAtMDktMDgN
CiAgKyBEVldBIERldmVsb3BtZW50IFNvdXJjZSAoTGF0ZXN0KSBbRG93bmxv
YWQgWklQXShodHRwczovL2dpdGh1Yi5jb20vZXRoaWNhbGhhY2szci9EVldB
L2FyY2hpdmUvbWFzdGVyLnppcCkgLy8gYGdpdCBjbG9uZSBodHRwczovL2dp
dGh1Yi5jb20vZXRoaWNhbGhhY2szci9EVldBYA0KDQotIC0gLQ0KDQojIyBJ
bnN0YWxsYXRpb24NCg0KKipQbGVhc2UgbWFrZSBzdXJlIHlvdXIgY29uZmln
L2NvbmZpZy5pbmMucGhwIGZpbGUgZXhpc3RzLiBPbmx5IGhhdmluZyBhIGNv
bmZpZy5pbmMucGhwLmRpc3Qgd2lsbCBub3QgYmUgc3VmZmljaWVudCBhbmQg
eW91J2xsIGhhdmUgdG8gZWRpdCBpdCB0byBzdWl0IHlvdXIgZW52aXJvbm1l
bnQgYW5kIHJlbmFtZSBpdCB0byBjb25maWcuaW5jLnBocC4gW1dpbmRvd3Mg
bWF5IGhpZGUgdGhlIHRyYWlsaW5nIGV4dGVuc2lvbi5dKGh0dHBzOi8vc3Vw
cG9ydC5taWNyb3NvZnQuY29tL2VuLWluL2hlbHAvODY1MjE5L2hvdy10by1z
aG93LW9yLWhpZGUtZmlsZS1uYW1lLWV4dGVuc2lvbnMtaW4td2luZG93cy1l
eHBsb3JlcikqKg0KDQojIyMgSW5zdGFsbGF0aW9uIFZpZGVvcw0KDQotIFtI
b3cgdG8gc2V0dXAgRFZXQSAoRGFtbiBWdWxuZXJhYmxlIFdlYiBBcHBsaWNh
dGlvbikgb24gVWJ1bnR1XShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRj
aD92PTVCRzZpcV9BVXZNKSBbMjE6MDEgbWludXRlc10NCi0gW0luc3RhbGxp
bmcgRGFtbiBWdWxuZXJhYmxlIFdlYiBBcHBsaWNhdGlvbiAoRFZXQSkgb24g
V2luZG93cyAxMF0oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1j
YWsybFF2QlJBbykgWzEyOjM5IG1pbnV0ZXNdDQoNCiMjIyBXaW5kb3dzICsg
WEFNUFANCg0KVGhlIGVhc2llc3Qgd2F5IHRvIGluc3RhbGwgRFZXQSBpcyB0
byBkb3dubG9hZCBhbmQgaW5zdGFsbCBbWEFNUFBdKGh0dHBzOi8vd3d3LmFw
YWNoZWZyaWVuZHMub3JnL2VuL3hhbXBwLmh0bWwpIGlmIHlvdSBkbyBub3Qg
YWxyZWFkeSBoYXZlIGEgd2ViIHNlcnZlciBzZXR1cC4NCg0KWEFNUFAgaXMg
YSB2ZXJ5IGVhc3kgdG8gaW5zdGFsbCBBcGFjaGUgRGlzdHJpYnV0aW9uIGZv
ciBMaW51eCwgU29sYXJpcywgV2luZG93cyBhbmQgTWFjIE9TIFguIFRoZSBw
YWNrYWdlIGluY2x1ZGVzIHRoZSBBcGFjaGUgd2ViIHNlcnZlciwgTXlTUUws
IFBIUCwgUGVybCwgYSBGVFAgc2VydmVyIGFuZCBwaHBNeUFkbWluLg0KDQpY
QU1QUCBjYW4gYmUgZG93bmxvYWRlZCBmcm9tOg0KaHR0cHM6Ly93d3cuYXBh
Y2hlZnJpZW5kcy5vcmcvZW4veGFtcHAuaHRtbA0KDQpTaW1wbHkgdW56aXAg
ZHZ3YS56aXAsIHBsYWNlIHRoZSB1bnppcHBlZCBmaWxlcyBpbiB5b3VyIHB1
YmxpYyBodG1sIGZvbGRlciwgdGhlbiBwb2ludCB5b3VyIGJyb3dzZXIgdG86
IGh0dHA6Ly8xMjcuMC4wLjEvZHZ3YS9zZXR1cC5waHANCg0KIyMjIExpbnV4
IFBhY2thZ2VzDQoNCklmIHlvdSBhcmUgdXNpbmcgYSBEZWJpYW4gYmFzZWQg
TGludXggZGlzdHJpYnV0aW9uLCB5b3Ugd2lsbCBuZWVkIHRvIGluc3RhbGwg
dGhlIGZvbGxvd2luZyBwYWNrYWdlcyBfKG9yIHRoZWlyIGVxdWl2YWxlbnQp
XzoNCg0KYGFwdC1nZXQgLXkgaW5zdGFsbCBhcGFjaGUyIG15c3FsLXNlcnZl
ciBwaHAgcGhwLW15c3FsaSBwaHAtZ2QgbGliYXBhY2hlMi1tb2QtcGhwYA0K
DQojIyMgRGF0YWJhc2UgU2V0dXANCg0KVG8gc2V0IHVwIHRoZSBkYXRhYmFz
ZSwgc2ltcGx5IGNsaWNrIG9uIHRoZSBgU2V0dXAgRFZXQWAgYnV0dG9uIGlu
IHRoZSBtYWluIG1lbnUsIHRoZW4gY2xpY2sgb24gdGhlIGBDcmVhdGUgLyBS
ZXNldCBEYXRhYmFzZWAgYnV0dG9uLiBUaGlzIHdpbGwgY3JlYXRlIC8gcmVz
ZXQgdGhlIGRhdGFiYXNlIGZvciB5b3Ugd2l0aCBzb21lIGRhdGEgaW4uDQoN
CklmIHlvdSByZWNlaXZlIGFuIGVycm9yIHdoaWxlIHRyeWluZyB0byBjcmVh
dGUgeW91ciBkYXRhYmFzZSwgbWFrZSBzdXJlIHlvdXIgZGF0YWJhc2UgY3Jl
ZGVudGlhbHMgYXJlIGNvcnJlY3Qgd2l0aGluIGAuL2NvbmZpZy9jb25maWcu
aW5jLnBocGAuICpUaGlzIGRpZmZlcnMgZnJvbSBjb25maWcuaW5jLnBocC5k
aXN0LCB3aGljaCBpcyBhbiBleGFtcGxlIGZpbGUuKg0KDQpUaGUgdmFyaWFi
bGVzIGFyZSBzZXQgdG8gdGhlIGZvbGxvd2luZyBieSBkZWZhdWx0Og0KDQpg
YGBwaHAKJF9EVldBWyAnZGJfdXNlcicgXSA9ICdyb290JzsNCiRfRFZXQVsg
J2RiX3Bhc3N3b3JkJyBdID0gJ3BAc3N3MHJkJzsNCiRfRFZXQVsgJ2RiX2Rh
dGFiYXNlJyBdID0gJ2R2d2EnOw0KYGBgCgpOb3RlLCBpZiB5b3UgYXJlIHVz
aW5nIE1hcmlhREIgcmF0aGVyIHRoYW4gTXlTUUwgKE1hcmlhREIgaXMgZGVm
YXVsdCBpbiBLYWxpKSwgdGhlbiB5b3UgY2FuJ3QgdXNlIHRoZSBkYXRhYmFz
ZSByb290IHVzZXIsIHlvdSBtdXN0IGNyZWF0ZSBhIG5ldyBkYXRhYmFzZSB1
c2VyLiBUbyBkbyB0aGlzLCBjb25uZWN0IHRvIHRoZSBkYXRhYmFzZSBhcyB0
aGUgcm9vdCB1c2VyIHRoZW4gdXNlIHRoZSBmb2xsb3dpbmcgY29tbWFuZHM6
CgpgYGBteXNxbApteXNxbD4gY3JlYXRlIGRhdGFiYXNlIGR2d2E7ClF1ZXJ5
IE9LLCAxIHJvdyBhZmZlY3RlZCAoMC4wMCBzZWMpCgpteXNxbD4gZ3JhbnQg
YWxsIG9uIGR2d2EuKiB0byBkdndhQGxvY2FsaG9zdCBpZGVudGlmaWVkIGJ5
ICdTdXBlclNlY3JldFBhc3N3b3JkOTknOwpRdWVyeSBPSywgMCByb3dzIGFm
ZmVjdGVkLCAxIHdhcm5pbmcgKDAuMDEgc2VjKQoKbXlzcWw+IGZsdXNoIHBy
aXZpbGVnZXM7ClF1ZXJ5IE9LLCAwIHJvd3MgYWZmZWN0ZWQgKDAuMDAgc2Vj
KQpgYGAKCllvdSB3aWxsIHRoZW4gbmVlZCB0byB1cGRhdGUgdGhlIGNvbmZp
ZyBmaWxlLCB0aGUgbmV3IGVudHJpZXMgd2lsbCBsb29rIGxpa2UgdGhpczoK
CmBgYHBocAokX0RWV0FbICdkYl91c2VyJyBdID0gJ2R2d2EnOwokX0RWV0Fb
ICdkYl9wYXNzd29yZCcgXSA9ICdTdXBlclNlY3JldFBhc3N3b3JkOTknOwok
X0RWV0FbICdkYl9kYXRhYmFzZScgXSA9ICdkdndhJzsKYGBgCgojIyMgT3Ro
ZXIgQ29uZmlndXJhdGlvbg0KDQpEZXBlbmRpbmcgb24geW91ciBPcGVyYXRp
bmcgU3lzdGVtLCBhcyB3ZWxsIGFzIHZlcnNpb24gb2YgUEhQLCB5b3UgbWF5
IHdpc2ggdG8gYWx0ZXIgdGhlIGRlZmF1bHQgY29uZmlndXJhdGlvbi4gVGhl
IGxvY2F0aW9uIG9mIHRoZSBmaWxlcyB3aWxsIGJlIGRpZmZlcmVudCBvbiBh
IHBlci1tYWNoaW5lIGJhc2lzLg0KDQoqKkZvbGRlciBQZXJtaXNzaW9ucyoq
Og0KDQoqIGAuL2hhY2thYmxlL3VwbG9hZHMvYCAtIE5lZWRzIHRvIGJlIHdy
aXRhYmxlIGJ5IHRoZSB3ZWIgc2VydmljZSAoZm9yIEZpbGUgVXBsb2FkKS4N
CiogYC4vZXh0ZXJuYWwvcGhwaWRzLzAuNi9saWIvSURTL3RtcC9waHBpZHNf
bG9nLnR4dGAgLSBOZWVkcyB0byBiZSB3cml0YWJsZSBieSB0aGUgd2ViIHNl
cnZpY2UgKGlmIHlvdSB3aXNoIHRvIHVzZSBQSFBJRFMpLg0KDQoqKlBIUCBj
b25maWd1cmF0aW9uKio6DQoNCiogYGFsbG93X3VybF9pbmNsdWRlID0gb25g
IC0gQWxsb3dzIGZvciBSZW1vdGUgRmlsZSBJbmNsdXNpb25zIChSRkkpICAg
W1thbGxvd191cmxfaW5jbHVkZV0oaHR0cHM6Ly9zZWN1cmUucGhwLm5ldC9t
YW51YWwvZW4vZmlsZXN5c3RlbS5jb25maWd1cmF0aW9uLnBocCNpbmkuYWxs
b3ctdXJsLWluY2x1ZGUpXQ0KKiBgYWxsb3dfdXJsX2ZvcGVuID0gb25gIC0g
IEFsbG93cyBmb3IgUmVtb3RlIEZpbGUgSW5jbHVzaW9ucyAoUkZJKSAgICBb
W2FsbG93X3VybF9mb3Blbl0oaHR0cHM6Ly9zZWN1cmUucGhwLm5ldC9tYW51
YWwvZW4vZmlsZXN5c3RlbS5jb25maWd1cmF0aW9uLnBocCNpbmkuYWxsb3ct
dXJsLWZvcGVuKV0NCiogYHNhZmVfbW9kZSA9IG9mZmAgLSAoSWYgUEhQIDw9
IHY1LjQpIEFsbG93cyBmb3IgU1FMIEluamVjdGlvbiAoU1FMaSkgW1tzYWZl
X21vZGVdKGh0dHBzOi8vc2VjdXJlLnBocC5uZXQvbWFudWFsL2VuL2ZlYXR1
cmVzLnNhZmUtbW9kZS5waHApXQ0KKiBgbWFnaWNfcXVvdGVzX2dwYyA9IG9m
ZmAgLSAoSWYgUEhQIDw9IHY1LjQpIEFsbG93cyBmb3IgU1FMIEluamVjdGlv
biAoU1FMaSkgW1ttYWdpY19xdW90ZXNfZ3BjXShodHRwczovL3NlY3VyZS5w
aHAubmV0L21hbnVhbC9lbi9zZWN1cml0eS5tYWdpY3F1b3Rlcy5waHApXQ0K
KiBgZGlzcGxheV9lcnJvcnMgPSBvZmZgIC0gKE9wdGlvbmFsKSBIaWRlcyBQ
SFAgd2FybmluZyBtZXNzYWdlcyB0byBtYWtlIGl0IGxlc3MgdmVyYm9zZSBb
W2Rpc3BsYXlfZXJyb3JzXShodHRwczovL3NlY3VyZS5waHAubmV0L21hbnVh
bC9lbi9lcnJvcmZ1bmMuY29uZmlndXJhdGlvbi5waHAjaW5pLmRpc3BsYXkt
ZXJyb3JzKV0NCg0KKipGaWxlOiBgY29uZmlnL2NvbmZpZy5pbmMucGhwYCoq
Og0KDQoqIGAkX0RWV0FbICdyZWNhcHRjaGFfcHVibGljX2tleScgXWAgJiBg
JF9EVldBWyAncmVjYXB0Y2hhX3ByaXZhdGVfa2V5JyBdYCAtIFRoZXNlIHZh
bHVlcyBuZWVkIHRvIGJlIGdlbmVyYXRlZCBmcm9tOiBodHRwczovL3d3dy5n
b29nbGUuY29tL3JlY2FwdGNoYS9hZG1pbi9jcmVhdGUNCg0KIyMjIERlZmF1
bHQgQ3JlZGVudGlhbHMNCg0KKipEZWZhdWx0IHVzZXJuYW1lID0gYGFkbWlu
YCoqDQoNCioqRGVmYXVsdCBwYXNzd29yZCA9IGBwYXNzd29yZGAqKg0KDQpf
Li4uY2FuIGVhc2lseSBiZSBicnV0ZSBmb3JjZWQgOylfDQoNCkxvZ2luIFVS
TDogaHR0cDovLzEyNy4wLjAuMS9kdndhL2xvZ2luLnBocA0KDQojIyMgVHJv
dWJsZXNob290aW5nDQoNCkZvciB0aGUgbGF0ZXN0IHRyb3VibGVzaG9vdGlu
ZyBpbmZvcm1hdGlvbiBwbGVhc2UgdmlzaXQ6DQpodHRwczovL2dpdGh1Yi5j
b20vZXRoaWNhbGhhY2szci9EVldBL2lzc3Vlcw0KDQorUS4gU1FMIEluamVj
dGlvbiB3b24ndCB3b3JrIG9uIFBIUCB2NS4yLjYuDQoNCi1BLklmIHlvdSBh
cmUgdXNpbmcgUEhQIHY1LjIuNiBvciBhYm92ZSwgeW91IHdpbGwgbmVlZCB0
byBkbyB0aGUgZm9sbG93aW5nIGluIG9yZGVyIGZvciBTUUwgaW5qZWN0aW9u
IGFuZCBvdGhlciB2dWxuZXJhYmlsaXRpZXMgdG8gd29yay4NCg0KSW4gYC5o
dGFjY2Vzc2A6DQoNClJlcGxhY2UgKHBsZWFzZSBub3RlIGl0IG1heSBzYXkg
bW9kX3BocDcpOg0KDQpgYGBwaHANCjxJZk1vZHVsZSBtb2RfcGhwNS5jPg0K
ICAgIHBocF9mbGFnIG1hZ2ljX3F1b3Rlc19ncGMgb2ZmDQogICAgI3BocF9m
bGFnIGFsbG93X3VybF9mb3BlbiBvbg0KICAgICNwaHBfZmxhZyBhbGxvd191
cmxfaW5jbHVkZSBvbg0KPC9JZk1vZHVsZT4NCmBgYA0KDQpXaXRoOg0KDQpg
YGBwaHANCjxJZk1vZHVsZSBtb2RfcGhwNS5jPg0KICAgIG1hZ2ljX3F1b3Rl
c19ncGMgPSBPZmYNCiAgICBhbGxvd191cmxfZm9wZW4gPSBPbg0KICAgIGFs
bG93X3VybF9pbmNsdWRlID0gT24NCjwvSWZNb2R1bGU+DQpgYGANCg0KK1Eu
IENvbW1hbmQgSW5qZWN0aW9uIHdvbid0IHdvcmsuDQoNCi1BLiBBcGFjaGUg
bWF5IG5vdCBoYXZlIGhpZ2ggZW5vdWdoIHByaXZpbGVnZXMgdG8gcnVuIGNv
bW1hbmRzIG9uIHRoZSB3ZWIgc2VydmVyLiBJZiB5b3UgYXJlIHJ1bm5pbmcg
RFZXQSB1bmRlciBMaW51eCBtYWtlIHN1cmUgeW91IGFyZSBsb2dnZWQgaW4g
YXMgcm9vdC4gVW5kZXIgV2luZG93cyBsb2cgaW4gYXMgQWRtaW5pc3RyYXRv
ci4NCg0KK1EuIFdoeSBjYW4ndCB0aGUgZGF0YWJhc2UgY29ubmVjdCBvbiBD
ZW50T1M/DQoNCi1BLiBZb3UgbWF5IGJlIHJ1bm5pbmcgaW50byBwcm9ibGVt
cyB3aXRoIFNFTGludXguICBFaXRoZXIgZGlzYWJsZSBTRUxpbnV4IG9yIHJ1
biB0aGlzIGNvbW1hbmQgdG8gYWxsb3cgdGhlIHdlYnNlcnZlciB0byB0YWxr
IHRvIHRoZSBkYXRhYmFzZToNCmBgYA0Kc2V0c2Vib29sIC1QIGh0dHBkX2Nh
bl9uZXR3b3JrX2Nvbm5lY3RfZGIgMQ0KYGBgDQoNCi0gLSAtDQoNCiMjIExp
bmtzDQoNCkhvbWVwYWdlOiBodHRwOi8vd3d3LmR2d2EuY28udWsvDQoNClBy
b2plY3QgSG9tZTogaHR0cHM6Ly9naXRodWIuY29tL2V0aGljYWxoYWNrM3Iv
RFZXQQ0KDQoqQ3JlYXRlZCBieSB0aGUgRFZXQSB0ZWFtKg0K
",,3726,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'optimize-js',68475958,b'Optimize a JS file for faster parsing (UNMAINTAINED)',b'JavaScript',22,3725,,68,False,b'https://api.github.com/repos/nolanlawson/optimize-js/forks',"b3B0aW1pemUtanMgWyFbQnVpbGQgU3RhdHVzXShodHRwczovL3RyYXZpcy1j
aS5vcmcvbm9sYW5sYXdzb24vb3B0aW1pemUtanMuc3ZnP2JyYW5jaD1tYXN0
ZXIpXShodHRwczovL3RyYXZpcy1jaS5vcmcvbm9sYW5sYXdzb24vb3B0aW1p
emUtanMpIFshW0phdmFTY3JpcHQgU3R5bGUgR3VpZGVdKGh0dHBzOi8vaW1n
LnNoaWVsZHMuaW8vYmFkZ2UvY29kZSUyMHN0eWxlLXN0YW5kYXJkLWJyaWdo
dGdyZWVuLnN2ZyldKGh0dHA6Ly9zdGFuZGFyZGpzLmNvbS8pCj09PT09PT09
CgpPcHRpbWl6ZSBhIEphdmFTY3JpcHQgZmlsZSBmb3IgZmFzdGVyIGluaXRp
YWwgZXhlY3V0aW9uIGFuZCBwYXJzaW5nLCBieSB3cmFwcGluZyBhbGwgaW1t
ZWRpYXRlbHktaW52b2tlZCBmdW5jdGlvbnMgb3IgbGlrZWx5LXRvLWJlLWlu
dm9rZWQgZnVuY3Rpb25zIGluIHBhcmVudGhlc2VzLgoKXyoq4pqg77iPIE1h
aW50ZW5hbmNlIG5vdGUg4pqg77iPKiogVGhpcyBwcm9qZWN0IGlzIHVubWFp
bnRhaW5lZC4gSSBjb25zaWRlciBpdCBhbiBpbnRlcmVzdGluZyBleHBlcmlt
ZW50LCBidXQgSSBoYXZlIG5vIGludGVudGlvbiB0byBrZWVwIHVwZGF0aW5n
IHRoZSBiZW5jaG1hcmsgcmVzdWx0cyB3aXRoIGV2ZXJ5IG5ldyBicm93c2Vy
IHJlbGVhc2UsIG9yIHRvIGFkZCBuZXcgZmVhdHVyZXMuIEkgaW52aXRlIGZv
bGtzIHRvIGtlZXAgdXNpbmcgaXQsIGJ1dCB0byBiZSBhd2FyZSB0aGF0IHRo
ZXkgc2hvdWxkIGhlYXZpbHkgYmVuY2htYXJrIHRoZWlyIG93biB3ZWJzaXRl
cyB0byBlbnN1cmUgaXQncyBhY3R1YWxseSBhIHNpZ25pZmljYW50IHBlcmZv
cm1hbmNlIGltcHJvdmVtZW50IGluIHRoZWlyIHRhcmdldCBicm93c2Vycy5f
CgpJbnN0YWxsCi0tLQoKICAgIG5wbSBpbnN0YWxsIC1nIG9wdGltaXplLWpz
CgpVc2FnZQotLS0KCiAgICBvcHRpbWl6ZS1qcyBpbnB1dC5qcyA+IG91dHB1
dC5qcwoKRXhhbXBsZSBpbnB1dDoKCmBgYGpzCiFmdW5jdGlvbiAoKXt9KCkK
ZnVuY3Rpb24gcnVuSXQoZnVuKXsgZnVuKCkgfQpydW5JdChmdW5jdGlvbiAo
KXt9KQpgYGAKCkV4YW1wbGUgb3V0cHV0OgoKYGBganMKIShmdW5jdGlvbiAo
KXt9KSgpCmZ1bmN0aW9uIHJ1bkl0KGZ1bil7IGZ1bigpIH0KcnVuSXQoKGZ1
bmN0aW9uICgpe30pKQpgYGAKCkJlbmNobWFyayBvdmVydmlldwotLS0tCgp8
IEJyb3dzZXIgfCBUeXBpY2FsIHNwZWVkIGJvb3N0L3JlZ3Jlc3Npb24gdXNp
bmcgb3B0aW1pemUtanMgfAp8IC0tLS0gfCAtLS0tLSB8CnwgQ2hyb21lIDU1
IHwgMjAuNjMlIHwKfCBFZGdlIDE0IHwgMTMuNTIlIHwKfCBGaXJlZm94IDUw
IHwgOC4yNiUgfAp8IFNhZmFyaSAxMCB8IC0xLjA0JSB8CgpUaGVzZSBudW1i
ZXJzIGFyZSBiYXNlZCBvbiBhIGJlbmNobWFyayBvZiBjb21tb24gSlMgbGli
cmFyaWVzLiBGb3IgYmVuY2htYXJrIGRldGFpbHMsIHNlZSBbYmVuY2htYXJr
c10oI2JlbmNobWFya3MpLgoKVG8gdGVzdCBvbiB5b3VyIG93biBKYXZhU2Ny
aXB0IGJ1bmRsZSwgY2hlY2sgb3V0IFt0ZXN0LW9wdGltaXplLWpzXShodHRw
czovL25vbGFubGF3c29uLmdpdGh1Yi5pby90ZXN0LW9wdGltaXplLWpzLyku
CgpDTEkKLS0tLQoKYGBgClVzYWdlOiBvcHRpbWl6ZS1qcyBbIG9wdGlvbnMg
XQoKT3B0aW9uczoKICAtLXNvdXJjZS1tYXAgIGluY2x1ZGUgc291cmNlIG1h
cCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbYm9vbGVh
bl0KICAtaCwgLS1oZWxwICAgIFNob3cgaGVscCAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbYm9vbGVhbl0KCkV4YW1w
bGVzOgogIG9wdGltaXplLWpzIGlucHV0LmpzID4gb3V0cHV0LmpzICAgIG9w
dGltaXplIGlucHV0LmpzCiAgb3B0aW1pemUtanMgPCBpbnB1dC5qcyA+IG91
dHB1dC5qcyAgcmVhZCBmcm9tIHN0ZGluLCB3cml0ZSB0byBzdGRvdXQKYGBg
CgpKYXZhU2NyaXB0IEFQSQotLS0tCgpgYGBqcwp2YXIgb3B0aW1pemVKcyA9
IHJlcXVpcmUoJ29wdGltaXplLWpzJyk7CnZhciBpbnB1dCA9ICIhZnVuY3Rp
b24oKSB7Y29uc29sZS5sb2coJ3dyYXAgbWUhJyl9IjsKdmFyIG91dHB1dCA9
IG9wdGltaXplSnMoaW5wdXQpOyAvLyAiIShmdW5jdGlvbigpIHtjb25zb2xl
LmxvZygnd3JhcCBtZSEnKX0pKCkiCmBgYAoKWW91IGNhbiBhbHNvIHBhc3Mg
aW4gYXJndW1lbnRzOgpgYGBqcwp2YXIgb3B0aW1pemVKcyA9IHJlcXVpcmUo
J29wdGltaXplLWpzJyk7CnZhciBpbnB1dCA9ICIhZnVuY3Rpb24oKSB7Y29u
c29sZS5sb2coJ3dyYXAgbWUhJyl9IjsKdmFyIG91dHB1dCA9IG9wdGltaXpl
SnMoaW5wdXQsIHsKICBzb3VyY2VNYXA6IHRydWUKfSk7IC8vIG5vdyB0aGUg
b3V0cHV0IGhhcyBzb3VyY2UgbWFwcwpgYGAKCldoeT8KLS0tLQoKTW9kZXJu
IEphdmFTY3JpcHQgZW5naW5lcyBsaWtlIFY4LCBDaGFrcmEsIGFuZCBTcGlk
ZXJNb25rZXkgaGF2ZSBhIGhldXJpc3RpYyB3aGVyZSB0aGV5IHByZS1wYXJz
ZSBtb3N0IApmdW5jdGlvbnMgYmVmb3JlIGRvaW5nIGEgZnVsbCBwYXJzZS4K
VGhlIHByZS1wYXJzZSBzdGVwIG1lcmVseSBjaGVja3MgZm9yIHN5bnRheCBl
cnJvcnMgd2hpbGUgYXZvaWRpbmcgdGhlIGNvc3Qgb2YgYSBmdWxsIHBhcnNl
LgoKVGhpcyBoZXVyaXN0aWMgaXMgYmFzZWQgb24gdGhlIGFzc3VtcHRpb24g
dGhhdCwgb24gdGhlIGF2ZXJhZ2Ugd2ViIHBhZ2UsIG1vc3QgSmF2YVNjcmlw
dCBmdW5jdGlvbnMgYXJlIG5ldmVyCmV4ZWN1dGVkIG9yIGFyZSBsYXppbHkg
ZXhlY3V0ZWQuClNvIGEgcHJlLXBhcnNlIGNhbiBwcmV2ZW50IGEgc2xvd2Vy
IHN0YXJ0dXAgdGltZSBieSBvbmx5IGNoZWNraW5nIGZvciB3aGF0IHRoZSBi
cm93c2VyIGFic29sdXRlbHkgbmVlZHMKdG8ga25vdyBhYm91dCB0aGUgZnVu
Y3Rpb24gKGkuZS4gd2hldGhlciBpdCdzIHN5bnRhY3RpY2FsbHkgd2VsbC1m
b3JtZWQgb3Igbm90KS4KClVuZm9ydHVuYXRlbHkgdGhpcyBhc3N1bXB0aW9u
IGJyZWFrcyBkb3duIGluIHRoZSBjYXNlIG9mIGltbWVkaWF0ZWx5LWludm9r
ZWQgZnVuY3Rpb24gZXhwcmVzc2lvbnMgKElJRkVzKSwgc3VjaCBhcyB0aGVz
ZToKCmBgYGpzCihmdW5jdGlvbiAoKSB7IGNvbnNvbGUubG9nKCdleGVjdXRl
ZCEnKSB9KSgpOwooZnVuY3Rpb24gKCkgeyBjb25zb2xlLmxvZygnZXhlY3V0
ZWQgQ3JvY2tmb3JkLXN0eWxlIScpIH0oKSk7CiFmdW5jdGlvbiAoKSB7IGNv
bnNvbGUubG9nKCdleGVjdXRlZCBVZ2xpZnlKUy1zdHlsZSEnKSB9KCk7CmBg
YAoKVGhlIGdvb2QgbmV3cyBpcyB0aGF0IEpTIGVuZ2luZXMgaGF2ZSBhIF9m
dXJ0aGVyXyBvcHRpbWl6YXRpb24sCndoZXJlIHRoZXkgdHJ5IHRvIGRldGVj
dCBzdWNoIElJRkVzIGFuZCBza2lwIHRoZSBwcmUtcGFyc2Ugc3RlcC4gSG9v
cmF5IQoKVGhlIGJhZCBuZXdzLCB0aG91Z2gsIGlzIHRoYXQgdGhlc2UgaGV1
cmlzdGljcyBkb24ndCBhbHdheXMgd29yaywKYmVjYXVzZSB0aGV5J3JlIGJh
c2VkIG9uIGEgZ3JlZWR5IG1ldGhvZCBvZiBjaGVja2luZyBmb3IgYSBgJygn
YCB0b2tlbiBpbW1lZGlhdGVseSB0byB0aGUgbGVmdCBvZiB0aGUgZnVuY3Rp
b24uIChUaGUgcGFyc2VyCmF2b2lkcyBhbnl0aGluZyBtb3JlIGludHJpY2F0
ZSBiZWNhdXNlIGl0IHdvdWxkIGFtb3VudCB0byBwYXJzaW5nIHRoZSB3aG9s
ZSB0aGluZywgbmVnYXRpbmcgdGhlIGJlbmVmaXQgb2YgdGhlIHByZS1wYXJz
ZSkuIApJbiBjYXNlcyB3aXRob3V0IHRoZSBwYXJlbiAod2hpY2ggaW5jbHVk
ZQpjb21tb24gbW9kdWxlIGZvcm1hdHMgbGlrZSBVTUQvQnJvd3NlcmlmeS9X
ZWJwYWNrL2V0Yy4pLCB0aGUgYnJvd3NlciB3aWxsIGFjdHVhbGx5IHBhcnNl
IHRoZSBmdW5jdGlvbiBfdHdpY2VfLCBmaXJzdCBhcyBhIHByZS1wYXJzZSBh
bmQgc2Vjb25kCmFzIGEgZnVsbCBwYXJzZS4gVGhpcyBtZWFucyB0aGF0IHRo
ZSBKYXZhU2NyaXB0IGNvZGUgcnVucyBtdWNoIG1vcmUgc2xvd2x5IG92ZXJh
bGwsIGJlY2F1c2UgbW9yZSB0aW1lIGlzIHNwZW50IHBhcnNpbmcgdGhhbiBu
ZWVkcyB0byBiZS4gU2VlIFsiVGhlIGNvc3Qgb2Ygc21hbGwgbW9kdWxlcyJd
KGh0dHBzOi8vbm9sYW5sYXdzb24uY29tLzIwMTYvMDgvMTUvdGhlLWNvc3Qt
b2Ytc21hbGwtbW9kdWxlcy8pIGZvciBhbiBpZGVhIG9mIGhvdyBiYWQgdGhp
cyBjYW4gZ2V0LgoKTHVja2lseSwgYmVjYXVzZSB0aGUgYCcoJ2Agb3B0aW1p
emF0aW9uIGZvciBJSUZFcyBpcyBzbyB3ZWxsLWVzdGFibGlzaGVkLCB3ZSBj
YW4gZXhwbG9pdCB0aGlzIGR1cmluZyBvdXIgYnVpbGQgcHJvY2VzcyBieQpw
YXJzaW5nIHRoZSBlbnRpcmUgSmF2YVNjcmlwdCBmaWxlIGluIGFkdmFuY2Ug
KGEgbHV4dXJ5IHRoZSBicm93c2VyIGNhbid0IGFmZm9yZCkgYW5kIGluc2Vy
dGluZyBwYXJlbnRoZXNlcyBpbiB0aGUgY2FzZXMgd2hlcmUgd2UgX2tub3df
CnRoZSBmdW5jdGlvbiB3aWxsIGJlIGltbWVkaWF0ZWx5IGV4ZWN1dGVkIChv
ciB3aGVyZSB3ZSBoYXZlIGEgZ29vZCBodW5jaCkuIFRoYXQncyB3aGF0IGBv
cHRpbWl6ZS1qc2AgZG9lcy4KCk1vcmUgZGV0YWlscyBvbiB0aGUgSUlGRSBv
cHRpbWl6YXRpb24gY2FuIGJlIGZvdW5kIGluIFt0aGlzIGRpc2N1c3Npb25d
KGh0dHBzOi8vZ2l0aHViLmNvbS9taXNob28vVWdsaWZ5SlMyL2lzc3Vlcy84
ODYpLiBTb21lIG9mIG15IHRob3VnaHRzIG9uIHRoZSB2aXJ0dWVzIG9mIGNv
bXBpbGUtdGltZSBvcHRpbWl6YXRpb25zIGNhbiBiZSBmb3VuZCBpbiBbdGhp
cyBwb3N0XShodHRwczovL2dpc3QuZ2l0aHViLmNvbS9ub2xhbmxhd3Nvbi9l
NzNjNjFkYTc4ZmZiMzllNGZjMDM0YTYyY2U4YjI2MykuCgpGQVFzCi0tLS0K
CiMjIyBIb3cgZG9lcyBpdCB3b3JrPwoKVGhlIGN1cnJlbnQgaW1wbGVtZW50
YXRpb24gaXMgdG8gcGFyc2UgdG8gYSBzeW50YXggdHJlZSBhbmQgY2hlY2sg
Zm9yIGZ1bmN0aW9ucyB0aGF0OgoKMS4gQXJlIGltbWVkaWF0ZWx5LWludm9r
ZWQgdmlhIGFueSBraW5kIG9mIGNhbGwgc3RhdGVtZW50IChgZnVuY3Rpb24o
KXt9KClgLCBgIWZ1bmN0aW9uKCl7fSgpYCwgZXRjLikKMi4gQXJlIHBhc3Nl
ZCBpbiBkaXJlY3RseSBhcyBhcmd1bWVudHMgdG8gYW5vdGhlciBmdW5jdGlv
bgoKVGhlIGZpcnN0IG1ldGhvZCBpcyBhbiBlYXN5IHdpbiDigJMgdGhvc2Ug
ZnVuY3Rpb25zIGFyZSBpbW1lZGlhdGVseSBleGVjdXRlZC4gVGhlIHNlY29u
ZCBtZXRob2QgaXMgbW9yZSBvZiBhIGhldXJpc3RpYywgYnV0IHRlbmRzCnRv
IGJlIGEgc2FmZSBiZXQgZ2l2ZW4gY29tbW9uIHBhdHRlcm5zIGxpa2UgTm9k
ZS1zdHlsZSBlcnJiYWNrcywgUHJvbWlzZSBjaGFpbnMsIGFuZCBVTUQvQnJv
d3NlcmlmeS9XZWJwYWNrIG1vZHVsZSBkZWNsYXJhdGlvbnMuIAoKSW4gYWxs
IHN1Y2ggY2FzZXMsIGBvcHRpbWl6ZS1qc2Agd3JhcHMgdGhlIGZ1bmN0aW9u
IGluIHBhcmVudGhlc2VzLgoKIyMjIEJ1dC4uLiB5b3UncmUgYWRkaW5nIGJ5
dGVzIQoKWWVzLCBgb3B0aW1pemUtanNgIG1pZ2h0IGFkZCBhcyBtYW55IGFz
IHR3byBieXRlcyAoaG9ycm9yISkgcGVyIGZ1bmN0aW9uLCB3aGljaCBhbW91
bnRzIHRvIHByYWN0aWNhbGx5IG5pbCBvbmNlIHlvdQp0YWtlIGd6aXAgaW50
byBhY2NvdW50LiBUbyBwcm92ZSBpdCwgaGVyZSBhcmUgdGhlIGd6aXBwZWQg
c2l6ZXMgZm9yIHRoZSBsaWJyYXJpZXMgSSB1c2UgaW4gdGhlIGJlbmNobWFy
azoKCnwgU2NyaXB0IHwgU2l6ZSAoYnl0ZXMpIHwgRGlmZmVyZW5jZSAoYnl0
ZXMpIHwKfCAtLS0tIHwgLS0tIHwgLS0tIHwKfCBiZW5jaG1hcmtzL2NyZWF0
ZS1yZWFjdC1hcHAubWluLmpzIHwgMTYwMzg3IHx8CnwgYmVuY2htYXJrcy9j
cmVhdGUtcmVhY3QtYXBwLm1pbi5vcHRpbWl6ZWQuanMgfCAxNjA4MjQgfCsg
NDM3IHwKfCBiZW5jaG1hcmtzL2ltbXV0YWJsZS5taW4uanMgfCA1NjczOCB8
fAp8IGJlbmNobWFya3MvaW1tdXRhYmxlLm1pbi5vcHRpbWl6ZWQuanMgfCA1
NjkzMyB8KyAxOTUgfAp8IGJlbmNobWFya3MvanF1ZXJ5Lm1pbi5qcyB8IDg2
ODA4IHx8CnwgYmVuY2htYXJrcy9qcXVlcnkubWluLm9wdGltaXplZC5qcyB8
IDg3MTA5IHwrIDMwMSB8CnwgYmVuY2htYXJrcy9sb2Rhc2gubWluLmpzIHwg
NzEzODEgfHwKfCBiZW5jaG1hcmtzL2xvZGFzaC5taW4ub3B0aW1pemVkLmpz
IHwgNzE2NDQgfCsgMjYzIHwKfCBiZW5jaG1hcmtzL3BvdWNoZGIubWluLmpz
IHwgMTQwMzMyIHx8CnwgYmVuY2htYXJrcy9wb3VjaGRiLm1pbi5vcHRpbWl6
ZWQuanMgfCAxNDEyMzEgfCsgODk5IHwKfCBiZW5jaG1hcmtzL3RocmVlLm1p
bi5qcyB8IDQ4Njk5NiB8fAp8IGJlbmNobWFya3MvdGhyZWUubWluLm9wdGlt
aXplZC5qcyB8IDQ4NzI3OSB8KyAyODMgfAoKIyMjIElzIGBvcHRpbWl6ZS1q
c2AgaW50ZW5kZWQgZm9yIGxpYnJhcnkgYXV0aG9ycz8KClN1cmUhIElmIHlv
dSBhcmUgYWxyZWFkeSBzaGlwcGluZyBhIGJ1bmRsZWQsIG1pbmlmaWVkIHZl
cnNpb24gb2YgeW91ciBsaWJyYXJ5LCB0aGVuIHRoZXJlJ3Mgbm8gcmVhc29u
IG5vdCB0byBhcHBseSBgb3B0aW1pemUtanNgIChhc3N1bWluZyB5b3UgYmVu
Y2htYXJrIHlvdXIgY29kZSB0byBlbnN1cmUgaXQgZG9lcyBpbmRlZWQgaGVs
cCEpLiBIb3dldmVyLCBub3RlIHRoYXQgYG9wdGltaXplLWpzYCBzaG91bGQg
cnVuIF9hZnRlcl8gVWdsaWZ5LCBzaW5jZSBVZ2xpZnkgc3RyaXBzIGV4dHJh
IHBhcmVudGhlc2VzIGFuZCBhbHNvIFtuZWdhdGVzIElJRkVzIGJ5IGRlZmF1
bHRdKGh0dHBzOi8vZ2l0aHViLmNvbS9taXNob28vVWdsaWZ5SlMyL2lzc3Vl
cy82NDApLiBUaGlzIGFsc28gbWVhbnMgdGhhdCBpZiB5b3VyIHVzZXJzIGFw
cGx5IFVnbGlmaWNhdGlvbiB0byB5b3VyIGJ1bmRsZSwgdGhlbiB0aGUgb3B0
aW1pemF0aW9uIHdpbGwgYmUgdW5kb25lLgoKQWxzbyBub3RlIHRoYXQgYmVj
YXVzZSBgb3B0aW1pemUtanNgIG9wdGltaXplcyBmb3Igc29tZSBwYXR0ZXJu
cyB0aGF0IGFyZSBiYXNlZCBvbiBoZXVyaXN0aWNzIHJhdGhlciB0aGFuIF9r
bm93bl8gZWFnZXJseS1pbnZva2VkCmZ1bmN0aW9ucywgaXQgbWF5IGFjdHVh
bGx5IGh1cnQgeW91ciBwZXJmb3JtYW5jZSBpbiBzb21lIGNhc2VzLiAoU2Vl
IGJlbmNobWFya3MgYmVsb3cgZm9yIGV4YW1wbGVzLikgQmUgc3VyZSB0byBj
aGVjayB0aGF0IGBvcHRpbWl6ZS1qc2AgaXMgYSBoZWxwIHJhdGhlciB0aGFu
IGEgaGluZHJhbmNlIGZvciB5b3VyIHBhcnRpY3VsYXIgY29kZWJhc2UsIHVz
aW5nIHNvbWV0aGluZyBsaWtlOgoKYGBgaHRtbAo8c2NyaXB0Pgp2YXIgc3Rh
cnQgPSBwZXJmb3JtYW5jZS5ub3coKTsKPC9zY3JpcHQ+CjxzY3JpcHQgc3Jj
PSJteXNjcmlwdC5qcyI+PC9zY3JpcHQ+CjxzY3JpcHQ+CnZhciBlbmQgPSBw
ZXJmb3JtYW5jZS5ub3coKTsKY29uc29sZS5sb2coJ3Rvb2sgJyArIChlbmQg
LSBzdGFydCkgKyAnbXMnKTsKPC9zY3JpcHQ+CmBgYAoKTm90ZSB0aGF0IHRo
ZSBzY3JpcHQgYm91bmRhcmllcyBhcmUgYWN0dWFsbHkgcmVjb21tZW5kZWQs
IGluIG9yZGVyIHRvIHRydWx5IG1lYXN1cmUgdGhlIGZ1bGwgcGFyc2UvY29t
cGlsZSB0aW1lLgpJZiB5b3UnZCBsaWtlIHRvIGF2b2lkIG1lYXN1cmluZyB0
aGUgbmV0d29yayBvdmVyaGVhZCwgeW91IGNhbiBzZWUgaG93IHdlIGRvIGl0
IGluIFtvdXIgYmVuY2htYXJrc10oaHR0cHM6Ly9naXRodWIuY29tL25vbGFu
bGF3c29uL29wdGltaXplLWpzL2Jsb2IvYmJhYzc2Nzg2NTZjODVhMWU0Yjk4
Y2YyMmVhNGQ1MzQyOTY1YjJmZC9iZW5jaG1hcmtzL2luZGV4Lmh0bWwjTDEx
MS1MMTI2KS4KCllvdSBtYXkgYWxzbyB3YW50IHRvIGNoZWNrIG91dCBbbWFy
a3ldKGh0dHA6Ly9naXRodWIuY29tL25vbGFubGF3c29uL21hcmt5KSwKd2hp
Y2ggYWxsb3dzIHlvdSB0byBlYXNpbHkgc2V0IG1hcmsvbWVhc3VyZSBwb2lu
dHMgdGhhdCB5b3UgY2FuIHZpc3VhbGx5IGluc3BlY3QgaW4gdGhlIERldiBU
b29scyB0aW1lbGluZSB0byBlbnN1cmUgdGhhdCB0aGUgZnVsbApjb21waWxl
IHRpbWUgaXMgYmVpbmcgbWVhc3VyZWQuCgpBbHNvLCBiZSBzdXJlIHRvIHRl
c3QgaW4gbXVsdGlwbGUgYnJvd3NlcnMhIElmIHlvdSBuZWVkIGFuIEVkZ2Ug
Vk0sIGNoZWNrIG91dCBbZWRnZS5tc10oaHR0cDovL2VkZ2UubXMpLgoKIyMj
IFNob3VsZG4ndCB0aGlzIGJlIFVnbGlmeSdzIGpvYj8KClBvc3NpYmx5ISBU
aGlzIGlzIGEgZnJlZSBhbmQgb3Blbi1zb3VyY2UgbGlicmFyeSwgc28gSSBl
bmNvdXJhZ2UgYW55Ym9keSB0byBib3Jyb3cgdGhlIGNvZGUgb3IgdGhlIGdv
b2QgaWRlYXMuIDopCgojIyMgV2h5IG5vdCBwYXJlbi13cmFwIGV2ZXJ5IHNp
bmdsZSBmdW5jdGlvbj8KCkFzIGRlc2NyaWJlZCBhYm92ZSwgdGhlIHByZS1w
YXJzaW5nIG9wdGltaXphdGlvbiBpbiBicm93c2VycyBpcyBhIHZlcnkgZ29v
ZCBpZGVhIGZvciB0aGUgdmFzdCBtYWpvcml0eSBvZiB0aGUgd2ViLCB3aGVy
ZSBtb3N0IGZ1bmN0aW9ucyAKYXJlbid0IGltbWVkaWF0ZWx5IGV4ZWN1dGVk
LiBIb3dldmVyLCBzaW5jZSBgb3B0aW1pemUtanNgIGtub3dzIHdoZW4geW91
ciBmdW5jdGlvbnMgYXJlIGltbWVkaWF0ZWx5IGV4ZWN1dGVkIChvciBjYW4g
bWFrZSByZWFzb25hYmxlCmd1ZXNzZXMpLCBpdCBjYW4gYmUgbW9yZSBqdWRp
Y2lvdXMgaW4gYXBwbHlpbmcgdGhlIHBhcmVuIGhhY2suCgojIyMgRG9lcyB0
aGlzIHJlYWxseSB3b3JrIGZvciBldmVyeSBKYXZhU2NyaXB0IGVuZ2luZT8K
CkJhc2VkIG9uIG15IHRlc3RzLCB0aGlzIG9wdGltaXphdGlvbiBzZWVtcyB0
byB3b3JrIGJlc3QgZm9yIFY4IChDaHJvbWUpLCBmb2xsb3dlZCBieSBDaGFr
cmEgKEVkZ2UpLCBmb2xsb3dlZCBieSBTcGlkZXJNb25rZXkgKEZpcmVmb3gp
LiBGb3IgSmF2YVNjcmlwdENvcmUgKFNhZmFyaSkgaXQgc2VlbXMgdG8gYmUg
YmFzaWNhbGx5IGEgd2FzaCwgYW5kIG1heSBhY3R1YWxseSBiZSBhIHNsaWdo
dCByZWdyZXNzaW9uIG92ZXJhbGwgZGVwZW5kaW5nIG9uIHlvdXIgY29kZWJh
c2UuIChBZ2FpbiwgdGhpcyBpcyB3aHkgaXQncyBpbXBvcnRhbnQgdG8gYWN0
dWFsbHkgbWVhc3VyZSBvbiB5b3VyIG93biBjb2RlYmFzZSwgb24gdGhlIGJy
b3dzZXJzIHlvdSBhY3R1YWxseSB0YXJnZXQhKQoKSW4gdGhlIGNhc2Ugb2Yg
Q2hha3JhLCBbVWdsaWZ5LXN0eWxlIElJRkVzIGFyZSBhY3R1YWxseSBhbHJl
YWR5IG9wdGltaXplZF0oaHR0cHM6Ly9naXRodWIuY29tL21pc2hvby9VZ2xp
ZnlKUzIvaXNzdWVzLzY0MCNpc3N1ZWNvbW1lbnQtMjQ3NzkyMzE5KSwgYnV0
IHVzaW5nIGBvcHRpbWl6ZS1qc2AgZG9lc24ndCBodXJ0IGJlY2F1c2UgYQpm
dW5jdGlvbiBwcmVjZWRlZCBieSBgJygnYCBzdGlsbCBnb2VzIGludG8gdGhl
IGZhc3QgcGF0aC4KCkJlbmNobWFya3MKLS0tLQoKVGhlc2UgdGVzdHMgd2Vy
ZSBydW4gdXNpbmcgYSBoYW5kZnVsIG9mIHBvcHVsYXIgbGlicmFyaWVzLCB3
cmFwcGVkIGluIGBwZXJmb3JtYW5jZS5ub3coKWAgbWVhc3VyZW1lbnRzLiBF
YWNoIHRlc3QgcmVwb3J0ZWQgdGhlIG1lZGlhbiBvZiAyNTEgcnVucy4gYG9w
dGltaXplLWpzYCBjb21taXQgW2RhNTEwMTNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9ub2xhbmxhd3Nvbi9vcHRpbWl6ZS1qcy9jb21taXQvZGE1MTAxMykgd2Fz
IHRlc3RlZC4gTWluaWZpY2F0aW9uIHdhcyBhcHBsaWVkIHVzaW5nIGB1Z2xp
ZnlqcyAtbWNgLCBVZ2xpZnkgMi43LjAuCgpZb3UgY2FuIGFsc28gdHJ5IFth
IGxpdmUgdmVyc2lvbiBvZiB0aGUgYmVuY2htYXJrXShodHRwczovL25vbGFu
bGF3c29uLmdpdGh1Yi5pby9vcHRpbWl6ZS1qcy8pLgoKIyMjIENocm9tZSA1
NSwgV2luZG93cyAxMCBSUzEsIFN1cmZhY2Vib29rIGk1Cgp8IFNjcmlwdCB8
IE9yaWdpbmFsIHwgT3B0aW1pemVkIHwgSW1wcm92ZW1lbnQgfCBNaW5pZmll
ZCB8IE1pbitPcHRpbWl6ZWQgfCBJbXByb3ZlbWVudCB8CnwgLS0tLSB8IC0t
LS0gfCAtLS0tIHwgLS0tLSB8IC0tLS0gfCAtLS0tIHwgLS0tLSB8CnwgQ3Jl
YXRlIFJlYWN0IEFwcCB8IDU1LjM5bXMgfCA1MS43MW1zIHwgKio2LjY0JSoq
IHwgMjYuMTJtcyB8IDIxLjA5bXMgfCAqKjE5LjI2JSoqIHwKfCBJbW11dGFi
bGVKUyB8IDExLjYxbXMgfCA3Ljk1bXMgfCAqKjMxLjUwJSoqIHwgOC41MG1z
IHwgNS45OW1zIHwgKioyOS41NSUqKiB8CnwgalF1ZXJ5IHwgMjIuNTFtcyB8
IDE2LjYybXMgfCAqKjI2LjE4JSoqIHwgMTkuMzVtcyB8IDE2LjEwbXMgfCAq
KjE2LjgwJSoqIHwKfCBMb2Rhc2ggfCAyMC44OG1zIHwgMTkuMzBtcyB8ICoq
Ny41NyUqKiB8IDIwLjQ3bXMgfCAxOS44Nm1zIHwgKiozLjAwJSoqIHwKfCBQ
b3VjaERCIHwgNDMuNzVtcyB8IDIwLjM2bXMgfCAqKjUzLjQ1JSoqIHwgMzYu
NDBtcyB8IDE4Ljc4bXMgfCAqKjQ4LjQzJSoqIHwKfCBUaHJlZUpTIHwgNzEu
MDRtcyB8IDcyLjk4bXMgfCAqKi0yLjczJSoqIHwgNTQuOTltcyB8IDM5LjU5
bXMgfCAqKjI4LjAwJSoqIHwKT3ZlcmFsbCBpbXByb3ZlbWVudDogKioyMC42
MyUqKgoKIyMjIEVkZ2UgMTQsIFdpbmRvd3MgMTAgUlMxLCBTdXJmYWNlQm9v
ayBpNQoKfCBTY3JpcHQgfCBPcmlnaW5hbCB8IE9wdGltaXplZCB8IEltcHJv
dmVtZW50IHwgTWluaWZpZWQgfCBNaW4rT3B0aW1pemVkIHwgSW1wcm92ZW1l
bnQgfAp8IC0tLS0gfCAtLS0tIHwgLS0tLSB8IC0tLS0gfCAtLS0tIHwgLS0t
LSB8IC0tLS0gfAp8IENyZWF0ZSBSZWFjdCBBcHAgfCAzMi40Nm1zIHwgMjQu
ODVtcyB8ICoqMjMuNDQlKiogfCAyNi40OW1zIHwgMjAuMzltcyB8ICoqMjMu
MDMlKiogfAp8IEltbXV0YWJsZUpTIHwgOC45NG1zIHwgNi4xOW1zIHwgKioz
MC43NCUqKiB8IDcuNzltcyB8IDUuNDFtcyB8ICoqMzAuNTUlKiogfAp8IGpR
dWVyeSB8IDIyLjU2bXMgfCAxNC40NW1zIHwgKiozNS45NCUqKiB8IDE2LjYy
bXMgfCAxMi45OW1zIHwgKioyMS44MSUqKiB8CnwgTG9kYXNoIHwgMjIuMTZt
cyB8IDIxLjQ4bXMgfCAqKjMuMDUlKiogfCAxNS43N21zIHwgMTUuNDZtcyB8
ICoqMS45NiUqKiB8CnwgUG91Y2hEQiB8IDI0LjA3bXMgfCAyMS4yMm1zIHwg
KioxMS44NCUqKiB8IDM5Ljc2bXMgfCA1Mi44Nm1zIHwgKiotMzIuOTglKiog
fAp8IFRocmVlSlMgfCA0My43N21zIHwgMzkuOTltcyB8ICoqOC42NSUqKiB8
IDU0LjAwbXMgfCAzNi41N21zIHwgKiozMi4yOCUqKiB8Ck92ZXJhbGwgaW1w
cm92ZW1lbnQ6ICoqMTMuNTIlKioKCiMjIyBGaXJlZm94IDUwLCBXaW5kb3dz
IDEwIFJTMSwgU3VyZmFjZWJvb2sgaTUKCnwgU2NyaXB0IHwgT3JpZ2luYWwg
fCBPcHRpbWl6ZWQgfCBJbXByb3ZlbWVudCB8IE1pbmlmaWVkIHwgTWluK09w
dGltaXplZCB8IEltcHJvdmVtZW50IHwKfCAtLS0tIHwgLS0tLSB8IC0tLS0g
fCAtLS0tIHwgLS0tLSB8IC0tLS0gfCAtLS0tIHwKfCBDcmVhdGUgUmVhY3Qg
QXBwIHwgMzMuNTZtcyB8IDI4LjAybXMgfCAqKjE2LjUwJSoqIHwgMjQuNzFt
cyB8IDIyLjA1bXMgfCAqKjEwLjc2JSoqIHwKfCBJbW11dGFibGVKUyB8IDYu
NTJtcyB8IDUuNzVtcyB8ICoqMTEuODAlKiogfCA0Ljk2bXMgfCA0LjU4bXMg
fCAqKjcuNDclKiogfAp8IGpRdWVyeSB8IDE1Ljc3bXMgfCAxMy45N21zIHwg
KioxMS40MSUqKiB8IDEyLjkwbXMgfCAxMi4xNW1zIHwgKio1Ljg1JSoqIHwK
fCBMb2Rhc2ggfCAxNy4wOG1zIHwgMTYuNjNtcyB8ICoqMi42NCUqKiB8IDEz
LjExbXMgfCAxMy4yMm1zIHwgKiotMC44MCUqKiB8CnwgUG91Y2hEQiB8IDE5
LjIzbXMgfCAxNi43N21zIHwgKioxMi44MiUqKiB8IDEzLjc3bXMgfCAxMi44
OW1zIHwgKio2LjQyJSoqIHwKfCBUaHJlZUpTIHwgMzguMzNtcyB8IDM3LjM2
bXMgfCAqKjIuNTMlKiogfCAzMy4wMW1zIHwgMzAuMzJtcyB8ICoqOC4xNiUq
KiB8Ck92ZXJhbGwgaW1wcm92ZW1lbnQ6ICoqOC4yNiUqKgoKIyMjIFNhZmFy
aSAxMCwgbWFjT1MgU2llcnJhLCAyMDEzIE1hY0Jvb2sgUHJvIGk1Cgp8IFNj
cmlwdCB8IE9yaWdpbmFsIHwgT3B0aW1pemVkIHwgSW1wcm92ZW1lbnQgfCBN
aW5pZmllZCB8IE1pbitPcHRpbWl6ZWQgfCBJbXByb3ZlbWVudCB8CnwgLS0t
LSB8IC0tLS0gfCAtLS0tIHwgLS0tLSB8IC0tLS0gfCAtLS0tIHwgLS0tLSB8
CnwgQ3JlYXRlIFJlYWN0IEFwcCB8IDMxLjYwbXMgfCAzMS42MG1zIHwgKiow
LjAwJSoqIHwgMjMuMTBtcyB8IDIzLjUwbXMgfCAqKi0xLjczJSoqIHwKfCBJ
bW11dGFibGVKUyB8IDUuNzBtcyB8IDUuNjBtcyB8ICoqMS43NSUqKiB8IDQu
NTBtcyB8IDQuNTBtcyB8ICoqMC4wMCUqKiB8CnwgalF1ZXJ5IHwgMTIuNDBt
cyB8IDEyLjYwbXMgfCAqKi0xLjYxJSoqIHwgMTAuODBtcyB8IDEwLjkwbXMg
fCAqKi0wLjkzJSoqIHwKfCBMb2Rhc2ggfCAxNC43MG1zIHwgMTQuNTBtcyB8
ICoqMS4zNiUqKiB8IDExLjEwbXMgfCAxMS4zMG1zIHwgKiotMS44MCUqKiB8
CnwgUG91Y2hEQiB8IDE0LjAwbXMgfCAxNC4yMG1zIHwgKiotMS40MyUqKiB8
IDExLjcwbXMgfCAxMi4xMG1zIHwgKiotMy40MiUqKiB8CnwgVGhyZWVKUyB8
IDM1LjYwbXMgfCAzNi4zMG1zIHwgKiotMS45NyUqKiB8IDI3LjUwbXMgfCAy
Ny43MG1zIHwgKiotMC43MyUqKiB8Ck92ZXJhbGwgaW1wcm92ZW1lbnQ6ICoq
LTEuMDQlKioKCk5vdGUgdGhhdCB0aGVzZSByZXN1bHRzIG1heSB2YXJ5IGJh
c2VkIG9uIHlvdXIgbWFjaGluZSwgaG93IHRheGVkIHlvdXIgQ1BVIGlzLCBn
cmVtbGlucywgZXRjLiBJIHJhbiB0aGUgZnVsbCBzdWl0ZSBhIGZldyB0aW1l
cyBvbiBhbGwgYnJvd3NlcnMgYW5kIGZvdW5kIHRoZXNlIG51bWJlcnMgdG8g
YmUgcm91Z2hseSByZXByZXNlbnRhdGl2ZS4gSW4gb3VyIHRlc3Qgc3VpdGUs
IHdlIHVzZSBhIG1lZGlhbiBvZiAxNTEgcnVucyB0byByZWR1Y2UgdmFyaWFi
aWxpdHkuCgpQbHVnaW5zCi0tLQoKKiBbR3J1bnQgcGx1Z2luIGZvciBvcHRp
bWl6ZS1qc10oaHR0cHM6Ly9naXRodWIuY29tL3Nlcmdlam11ZWxsZXIvZ3J1
bnQtb3B0aW1pemUtanMpCiogW0d1bHAgcGx1Z2luIGZvciBvcHRpbWl6ZS1q
c10oaHR0cHM6Ly9naXRodWIuY29tL3ByYXRlZWtiaC9ndWxwLW9wdGltaXpl
LWpzKQoqIFtXZWJwYWNrIHBsdWdpbiBmb3Igb3B0aW1pemUtanNdKGh0dHBz
Oi8vZ2l0aHViLmNvbS92aWduZXNoc2hhbm11Z2FtL29wdGltaXplLWpzLXBs
dWdpbikKClNlZSBhbHNvCi0tLQoKKiBbYnJvY2NvbGktZW1iZXItcHJlcGFy
c2VdKGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL2Jyb2Njb2xpLWVt
YmVyLXByZXBhcnNlKQoqIFt0by1mYXN0LXByb3BlcnRpZXNdKGh0dHBzOi8v
Z2l0aHViLmNvbS9zaW5kcmVzb3JodXMvdG8tZmFzdC1wcm9wZXJ0aWVzKQoq
IFtWOExhenlQYXJzZVBsdWdpbl0oaHR0cHM6Ly9naXRodWIuY29tL1RoZUxh
cmtJbm4vVjhMYXp5UGFyc2VXZWJwYWNrUGx1Z2luKQoKVGhhbmtzCi0tLS0K
ClRoYW5rcyB0byBbQGtyaXNzZWxkZW5dKGh0dHBzOi8vZ2l0aHViLmNvbS9r
cmlzc2VsZGVuKSwgW0BibWF1cmVyXShodHRwczovL2dpdGh1Yi5jb20vYm1h
dXJlciksIGFuZCBbQHBsZWF0aF0oaHR0cHM6Ly9naXRodWIuY29tL3BsZWF0
aCkgZm9yIGV4cGxhaW5pbmcgdGhlc2UgY29uY2VwdHMgaW4gdGhlIHZhcmlv
dXMgR2l0SHViIGlzc3Vlcy4gVGhhbmtzIGFsc28gdG8gW2FzdGV4cGxvcmVy
XShodHRwczovL2dpdGh1Yi5jb20vZmtsaW5nL2FzdGV4cGxvcmVyKSwgW2Fj
b3JuXShodHRwczovL2dpdGh1Yi5jb20vdGVybmpzL2Fjb3JuKSwgYW5kIFtt
YWdpYy1zdHJpbmddKGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL21h
Z2ljLXN0cmluZykgZm9yIG1ha2luZyB0aGUgaW1wbGVtZW50YXRpb24gc28g
ZWFzeS4KClRoYW5rcyB0byBbU2FzaGEgQWlja2luXShodHRwczovL2dpdGh1
Yi5jb20vYWlja2luKSBmb3IgZ2VuZXJvdXMgY29udHJpYnV0aW9ucyB0byBp
bXByb3ZpbmcgdGhpcyBsaWJyYXJ5IChlc3BlY2lhbGx5IGluIHYxLjAuMykK
YW5kIHByb2RkaW5nIG1lIHRvIGltcHJvdmUgdGhlIGFjY3VyYWN5IG9mIHRo
ZSBiZW5jaG1hcmtzLgoKQ29udHJpYnV0aW5nCi0tLS0tCgpCdWlsZCBhbmQg
cnVuIHRlc3RzOgoKYGBgYmFzaApucG0gaW5zdGFsbApucG0gdGVzdApgYGAK
ClJ1biB0aGUgYmVuY2htYXJrczoKCmBgYGJhc2gKbnBtIHJ1biBiZW5jaG1h
cmsgIyB0aGVuIG9wZW4gbG9jYWxob3N0OjkwOTAgaW4gYSBicm93c2VyCmBg
YAoKVGVzdCBjb2RlIGNvdmVyYWdlOgoKYGBgYmFzaApucG0gcnVuIGNvdmVy
YWdlCmBgYAoKQ2hhbmdlbG9nCi0tLS0KCi0gdjEuMC4zCiAgLSBNdWNoIG1v
cmUgYWNjdXJhdGUgYmVuY2htYXJrIChbIzM3XShodHRwczovL2dpdGh1Yi5j
b20vbm9sYW5sYXdzb24vb3B0aW1pemUtanMvaXNzdWVzLzM3KSkKICAtIEJy
b3dzZXJpZnktc3BlY2lmaWMgZml4ZXMgKFsjMjldKGh0dHBzOi8vZ2l0aHVi
LmNvbS9ub2xhbmxhd3Nvbi9vcHRpbWl6ZS1qcy9pc3N1ZXMvMjkpLCBbIzM2
XShodHRwczovL2dpdGh1Yi5jb20vbm9sYW5sYXdzb24vb3B0aW1pemUtanMv
aXNzdWVzLzM2KSwgWyMzOV0oaHR0cHM6Ly9naXRodWIuY29tL25vbGFubGF3
c29uL29wdGltaXplLWpzL2lzc3Vlcy8zOSkpCiAgLSBXZWJwYWNrLXNwZWNp
ZmljIGZpeGVzIChbIzddKGh0dHBzOi8vZ2l0aHViLmNvbS9ub2xhbmxhd3Nv
bi9vcHRpbWl6ZS1qcy9pc3N1ZXMvNyksIFsjMzRdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9ub2xhbmxhd3Nvbi9vcHRpbWl6ZS1qcy9pc3N1ZXMvMzQpKQotIHYx
LjAuMgogIC0gVXNlIGVzdHJlZS13YWxrZXIgdG8gcHJvcGVybHkgcGFyc2Ug
RVM2IChbIzMxXShodHRwczovL2dpdGh1Yi5jb20vbm9sYW5sYXdzb24vb3B0
aW1pemUtanMvaXNzdWVzLzMxKSkKLSB2MS4wLjE6CiAgLSBEb24ndCBjYWxs
IHByb2Nlc3MuZXhpdCgwKSBvbiBzdWNjZXNzIChbIzExXShodHRwczovL2dp
dGh1Yi5jb20vbm9sYW5sYXdzb24vb3B0aW1pemUtanMvaXNzdWVzLzExKSkK
LSB2MS4wLjAKICAtIEluaXRpYWwgcmVsZWFzZQo=
",,3725,"bGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczoKLSAiNiIKc3VkbzogZmFsc2UK
c2NyaXB0OiBucG0gcnVuICRDT01NQU5ECmVudjoKICBtYXRyaXg6CiAgLSBD
T01NQU5EPXRlc3QKICAtIENPTU1BTkQ9Y292ZXJhZ2UKYnJhbmNoZXM6CiAg
b25seToKICAtIG1hc3Rlcgo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'consul-template',24898177,"b'Template rendering, notifier, and supervisor for @HashiCorp Consul and Vault data.'",b'Go',87,3724,,178,False,b'https://api.github.com/repos/hashicorp/consul-template/forks',"IyBDb25zdWwgVGVtcGxhdGUKClshW0NpcmNsZUNJXShodHRwczovL2NpcmNs
ZWNpLmNvbS9naC9oYXNoaWNvcnAvY29uc3VsLXRlbXBsYXRlLnN2Zz9zdHls
ZT1zdmcpXShodHRwczovL2NpcmNsZWNpLmNvbS9naC9oYXNoaWNvcnAvY29u
c3VsLXRlbXBsYXRlKQpbIVtHbyBEb2N1bWVudGF0aW9uXShodHRwOi8vaW1n
LnNoaWVsZHMuaW8vYmFkZ2UvZ28tZG9jdW1lbnRhdGlvbi1ibHVlLnN2Zz9z
dHlsZT1mbGF0LXNxdWFyZSldKGh0dHBzOi8vZ29kb2Mub3JnL2dpdGh1Yi5j
b20vaGFzaGljb3JwL2NvbnN1bC10ZW1wbGF0ZSkKClRoaXMgcHJvamVjdCBw
cm92aWRlcyBhIGNvbnZlbmllbnQgd2F5IHRvIHBvcHVsYXRlIHZhbHVlcyBm
cm9tIFtDb25zdWxdW2NvbnN1bF0KaW50byB0aGUgZmlsZSBzeXN0ZW0gdXNp
bmcgdGhlIGBjb25zdWwtdGVtcGxhdGVgIGRhZW1vbi4KClRoZSBkYWVtb24g
YGNvbnN1bC10ZW1wbGF0ZWAgcXVlcmllcyBhIFtDb25zdWxdW2NvbnN1bF0g
b3IgW1ZhdWx0XVt2YXVsdF0KY2x1c3RlciBhbmQgdXBkYXRlcyBhbnkgbnVt
YmVyIG9mIHNwZWNpZmllZCB0ZW1wbGF0ZXMgb24gdGhlIGZpbGUgc3lzdGVt
LiBBcyBhbgphZGRlZCBib251cywgaXQgY2FuIG9wdGlvbmFsbHkgcnVuIGFy
Yml0cmFyeSBjb21tYW5kcyB3aGVuIHRoZSB1cGRhdGUgcHJvY2Vzcwpjb21w
bGV0ZXMuIFBsZWFzZSBzZWUgdGhlIFtleGFtcGxlcyBmb2xkZXJdW2V4YW1w
bGVzXSBmb3Igc29tZSBzY2VuYXJpb3Mgd2hlcmUKdGhpcyBmdW5jdGlvbmFs
aXR5IG1pZ2h0IHByb3ZlIHVzZWZ1bC4KCi0tLQoKKipUaGUgZG9jdW1lbnRh
dGlvbiBpbiB0aGlzIFJFQURNRSBjb3JyZXNwb25kcyB0byB0aGUgbWFzdGVy
IGJyYW5jaCBvZiBDb25zdWwgVGVtcGxhdGUuIEl0IG1heSBjb250YWluIHVu
cmVsZWFzZWQgZmVhdHVyZXMgb3IgZGlmZmVyZW50IEFQSXMgdGhhbiB0aGUg
bW9zdCByZWNlbnRseSByZWxlYXNlZCB2ZXJzaW9uLioqCgoqKlBsZWFzZSBz
ZWUgdGhlIFtHaXQgdGFnXShodHRwczovL2dpdGh1Yi5jb20vaGFzaGljb3Jw
L2NvbnN1bC10ZW1wbGF0ZS9yZWxlYXNlcykgdGhhdCBjb3JyZXNwb25kcyB0
byB5b3VyIHZlcnNpb24gb2YgQ29uc3VsIFRlbXBsYXRlIGZvciB0aGUgcHJv
cGVyIGRvY3VtZW50YXRpb24uKioKCi0tLQoKIyMgVGFibGUgb2YgQ29udGVu
dHMKCi0gW0NvbW11bml0eSBTdXBwb3J0XSgjY29tbXVuaXR5LXN1cHBvcnQp
Ci0gW0luc3RhbGxhdGlvbl0oI2luc3RhbGxhdGlvbikKLSBbUXVpY2sgRXhh
bXBsZV0oI3F1aWNrLWV4YW1wbGUpCi0gW1VzYWdlXSgjdXNhZ2UpCiAgLSBb
Q29tbWFuZCBMaW5lIEZsYWdzXSgjY29tbWFuZC1saW5lLWZsYWdzKQogIC0g
W0NvbmZpZ3VyYXRpb24gRmlsZSBGb3JtYXRdKCNjb25maWd1cmF0aW9uLWZp
bGUtZm9ybWF0KQogIC0gW1RlbXBsYXRpbmcgTGFuZ3VhZ2VdKCN0ZW1wbGF0
aW5nLWxhbmd1YWdlKQogICAgLSBbQVBJIEZ1bmN0aW9uc10oI2FwaS1mdW5j
dGlvbnMpCiAgICAgIC0gW2RhdGFjZW50ZXJzXSgjZGF0YWNlbnRlcnMpCiAg
ICAgIC0gW2ZpbGVdKCNmaWxlKQogICAgICAtIFtrZXldKCNrZXkpCiAgICAg
IC0gW2tleUV4aXN0c10oI2tleWV4aXN0cykKICAgICAgLSBba2V5T3JEZWZh
dWx0XSgja2V5b3JkZWZhdWx0KQogICAgICAtIFtsc10oI2xzKQogICAgICAt
IFtzYWZlTHNdKCNzYWZlbHMpCiAgICAgIC0gW25vZGVdKCNub2RlKQogICAg
ICAtIFtub2Rlc10oI25vZGVzKQogICAgICAtIFtzZWNyZXRdKCNzZWNyZXQp
CiAgICAgIC0gW3NlY3JldHNdKCNzZWNyZXRzKQogICAgICAtIFtzZXJ2aWNl
XSgjc2VydmljZSkKICAgICAgLSBbc2VydmljZXNdKCNzZXJ2aWNlcykKICAg
ICAgLSBbdHJlZV0oI3RyZWUpCiAgICAgIC0gW3NhZmVUcmVlXSgjc2FmZXRy
ZWUpCiAgICAtIFtTY3JhdGNoXSgjc2NyYXRjaCkKICAgICAgLSBbc2NyYXRj
aC5LZXldKCNzY3JhdGNoa2V5KQogICAgICAtIFtzY3JhdGNoLkdldF0oI3Nj
cmF0Y2hnZXQpCiAgICAgIC0gW3NjcmF0Y2guU2V0XSgjc2NyYXRjaHNldCkK
ICAgICAgLSBbc2NyYXRjaC5TZXRYXSgjc2NyYXRjaHNldHgpCiAgICAgIC0g
W3NjcmF0Y2guTWFwU2V0XSgjc2NyYXRjaG1hcHNldCkKICAgICAgLSBbc2Ny
YXRjaC5NYXBTZXRYXSgjc2NyYXRjaG1hcHNldHgpCiAgICAgIC0gW3NjcmF0
Y2guTWFwVmFsdWVzXSgjc2NyYXRjaG1hcHZhbHVlcykKICAgIC0gW0hlbHBl
ciBGdW5jdGlvbnNdKCNoZWxwZXItZnVuY3Rpb25zKQogICAgICAtIFtiYXNl
NjREZWNvZGVdKCNiYXNlNjRkZWNvZGUpCiAgICAgIC0gW2Jhc2U2NEVuY29k
ZV0oI2Jhc2U2NGVuY29kZSkKICAgICAgLSBbYmFzZTY0VVJMRGVjb2RlXSgj
YmFzZTY0dXJsZGVjb2RlKQogICAgICAtIFtiYXNlNjRVUkxFbmNvZGVdKCNi
YXNlNjR1cmxlbmNvZGUpCiAgICAgIC0gW2J5S2V5XSgjYnlrZXkpCiAgICAg
IC0gW2J5VGFnXSgjYnl0YWcpCiAgICAgIC0gW2J5TWV0YV0oI2J5bWV0YSkK
ICAgICAgLSBbY29udGFpbnNdKCNjb250YWlucykKICAgICAgLSBbY29udGFp
bnNBbGxdKCNjb250YWluc2FsbCkKICAgICAgLSBbY29udGFpbnNBbnldKCNj
b250YWluc2FueSkKICAgICAgLSBbY29udGFpbnNOb25lXSgjY29udGFpbnNu
b25lKQogICAgICAtIFtjb250YWluc05vdEFsbF0oI2NvbnRhaW5zbm90YWxs
KQogICAgICAtIFtlbnZdKCNlbnYpCiAgICAgIC0gW2V4ZWN1dGVUZW1wbGF0
ZV0oI2V4ZWN1dGV0ZW1wbGF0ZSkKICAgICAgLSBbZXhwbG9kZV0oI2V4cGxv
ZGUpCiAgICAgIC0gW2V4cGxvZGVNYXBdKCNleHBsb2RlbWFwKQogICAgICAt
IFtpbmRlbnRdKCNpbmRlbnQpCiAgICAgIC0gW2luXSgjaW4pCiAgICAgIC0g
W2xvb3BdKCNsb29wKQogICAgICAtIFtqb2luXSgjam9pbikKICAgICAgLSBb
dHJpbVNwYWNlXSgjdHJpbXNwYWNlKQogICAgICAtIFtwYXJzZUJvb2xdKCNw
YXJzZWJvb2wpCiAgICAgIC0gW3BhcnNlRmxvYXRdKCNwYXJzZWZsb2F0KQog
ICAgICAtIFtwYXJzZUludF0oI3BhcnNlaW50KQogICAgICAtIFtwYXJzZUpT
T05dKCNwYXJzZWpzb24pCiAgICAgIC0gW3BhcnNlVWludF0oI3BhcnNldWlu
dCkKICAgICAgLSBbcGx1Z2luXSgjcGx1Z2luKQogICAgICAtIFtyZWdleE1h
dGNoXSgjcmVnZXhtYXRjaCkKICAgICAgLSBbcmVnZXhSZXBsYWNlQWxsXSgj
cmVnZXhyZXBsYWNlYWxsKQogICAgICAtIFtyZXBsYWNlQWxsXSgjcmVwbGFj
ZWFsbCkKICAgICAgLSBbc3BsaXRdKCNzcGxpdCkKICAgICAgLSBbdGltZXN0
YW1wXSgjdGltZXN0YW1wKQogICAgICAtIFt0b0pTT05dKCN0b2pzb24pCiAg
ICAgIC0gW3RvSlNPTlByZXR0eV0oI3RvanNvbnByZXR0eSkKICAgICAgLSBb
dG9Mb3dlcl0oI3RvbG93ZXIpCiAgICAgIC0gW3RvVGl0bGVdKCN0b3RpdGxl
KQogICAgICAtIFt0b1RPTUxdKCN0b3RvbWwpCiAgICAgIC0gW3RvVXBwZXJd
KCN0b3VwcGVyKQogICAgICAtIFt0b1lBTUxdKCN0b3lhbWwpCiAgICAgIC0g
W3NvY2thZGRyXSgjc29ja2FkZHIpCiAgICAtIFtNYXRoIEZ1bmN0aW9uc10o
I21hdGgtZnVuY3Rpb25zKQogICAgICAtIFthZGRdKCNhZGQpCiAgICAgIC0g
W3N1YnRyYWN0XSgjc3VidHJhY3QpCiAgICAgIC0gW211bHRpcGx5XSgjbXVs
dGlwbHkpCiAgICAgIC0gW2RpdmlkZV0oI2RpdmlkZSkKICAgICAgLSBbbW9k
dWxvXSgjbW9kdWxvKQotIFtQbHVnaW5zXSgjcGx1Z2lucykKICAtIFtBdXRo
b3JpbmcgUGx1Z2luc10oI2F1dGhvcmluZy1wbHVnaW5zKQogICAgLSBbSW1w
b3J0YW50IE5vdGVzXSgjaW1wb3J0YW50LW5vdGVzKQotIFtDYXZlYXRzXSgj
Y2F2ZWF0cykKICAtIFtEb3RzIGluIFNlcnZpY2UgTmFtZXNdKCNkb3RzLWlu
LXNlcnZpY2UtbmFtZXMpCiAgLSBbT25jZSBNb2RlXSgjb25jZS1tb2RlKQog
IC0gW0V4ZWMgTW9kZV0oI2V4ZWMtbW9kZSkKICAtIFtEZS1EdXBsaWNhdGlv
biBNb2RlXSgjZGUtZHVwbGljYXRpb24tbW9kZSkKICAtIFtUZXJtaW5hdGlv
biBvbiBFcnJvcl0oI3Rlcm1pbmF0aW9uLW9uLWVycm9yKQogIC0gW0NvbW1h
bmQgRW52aXJvbm1lbnRdKCNjb21tYW5kLWVudmlyb25tZW50KQogIC0gW011
bHRpLXBoYXNlIEV4ZWN1dGlvbl0oI211bHRpLXBoYXNlLWV4ZWN1dGlvbikK
LSBbUnVubmluZyBhbmQgUHJvY2VzcyBMaWZlY3ljbGVdKCNydW5uaW5nLWFu
ZC1wcm9jZXNzLWxpZmVjeWNsZSkKLSBbRGVidWdnaW5nXSgjZGVidWdnaW5n
KQotIFtGQVFdKCNmYXEpCi0gW0NvbnRyaWJ1dGluZ10oI2NvbnRyaWJ1dGlu
ZykKCgojIyBDb21tdW5pdHkgU3VwcG9ydAoKSWYgeW91IGhhdmUgcXVlc3Rp
b25zIGFib3V0IGhvdyBjb25zdWwtdGVtcGxhdGUgd29ya3MsIGl0cyBjYXBh
YmlsaXRpZXMgb3IKYW55dGhpbmcgb3RoZXIgdGhhbiBhIGJ1ZyBvciBmZWF0
dXJlIHJlcXVlc3QgKHVzZSBnaXRodWIncyBpc3N1ZSB0cmFja2VyIGZvcgp0
aG9zZSksIHBsZWFzZSBzZWUgb3VyIGNvbW11bml0eSBzdXBwb3J0IHJlc291
cmNlcy4KCkNvbW11bml0eSBwb3J0YWw6IGh0dHBzOi8vZGlzY3Vzcy5oYXNo
aWNvcnAuY29tL2MvY29uc3VsCgpPdGhlciByZXNvdXJjZXM6IGh0dHBzOi8v
d3d3LmNvbnN1bC5pby9jb21tdW5pdHkuaHRtbAoKQWRkaXRpb25hbGx5LCBm
b3IgaXNzdWVzIGFuZCBwdWxsIHJlcXVlc3RzLCB3ZSdsbCBiZSB1c2luZyB0
aGUgOisxOiByZWFjdGlvbnMKYXMgYSByb3VnaCB2b3Rpbmcgc3lzdGVtIHRv
IGhlbHAgZ2F1Z2UgY29tbXVuaXR5IHByaW9yaXRpZXMuIFNvIHBsZWFzZSBh
ZGQgOisxOgp0byBhbnkgaXNzdWUgb3IgcHVsbCByZXF1ZXN0IHlvdSdkIGxp
a2UgdG8gc2VlIHdvcmtlZCBvbi4gVGhhbmtzLgoKCiMjIEluc3RhbGxhdGlv
bgoKMS4gRG93bmxvYWQgYSBwcmUtY29tcGlsZWQsIHJlbGVhc2VkIHZlcnNp
b24gZnJvbSB0aGUgW0NvbnN1bCBUZW1wbGF0ZSByZWxlYXNlcyBwYWdlXVty
ZWxlYXNlc10uCgoxLiBFeHRyYWN0IHRoZSBiaW5hcnkgdXNpbmcgYHVuemlw
YCBvciBgdGFyYC4KCjEuIE1vdmUgdGhlIGJpbmFyeSBpbnRvIGAkUEFUSGAu
CgpUbyBjb21waWxlIGZyb20gc291cmNlLCBwbGVhc2Ugc2VlIHRoZSBpbnN0
cnVjdGlvbnMgaW4gdGhlCltjb250cmlidXRpbmcgc2VjdGlvbl0oI2NvbnRy
aWJ1dGluZykuCgojIyBRdWljayBFeGFtcGxlCgpUaGlzIHNob3J0IGV4YW1w
bGUgYXNzdW1lcyBDb25zdWwgaXMgaW5zdGFsbGVkIGxvY2FsbHkuCgoxLiBT
dGFydCBhIENvbnN1bCBjbHVzdGVyIGluIGRldiBtb2RlOgoKICAgIGBgYHNo
ZWxsCiAgICAkIGNvbnN1bCBhZ2VudCAtZGV2CiAgICBgYGAKCjEuIEF1dGhv
ciBhIHRlbXBsYXRlIGBpbi50cGxgIHRvIHF1ZXJ5IHRoZSBrdiBzdG9yZToK
CiAgICBgYGBsaXF1aWQKICAgIHt7IGtleSAiZm9vIiB9fQogICAgYGBgCgox
LiBTdGFydCBDb25zdWwgVGVtcGxhdGU6CgogICAgYGBgc2hlbGwKICAgICQg
Y29uc3VsLXRlbXBsYXRlIC10ZW1wbGF0ZSAiaW4udHBsOm91dC50eHQiIC1v
bmNlCiAgICBgYGAKCjEuIFdyaXRlIGRhdGEgdG8gdGhlIGtleSBpbiBDb25z
dWw6CgogICAgYGBgc2hlbGwKICAgICQgY29uc3VsIGt2IHB1dCBmb28gYmFy
CiAgICBgYGAKCjEuIE9ic2VydmUgQ29uc3VsIFRlbXBsYXRlIGhhcyB3cml0
dGVuIHRoZSBmaWxlIGBvdXQudHh0YDoKCiAgICBgYGBzaGVsbAogICAgJCBj
YXQgb3V0LnR4dAogICAgYmFyCiAgICBgYGAKCkZvciBtb3JlIGV4YW1wbGVz
IGFuZCB1c2UgY2FzZXMsIHBsZWFzZSBzZWUgdGhlIFtleGFtcGxlcyBmb2xk
ZXJdW2V4YW1wbGVzXSBpbgp0aGlzIHJlcG9zaXRvcnkuCgojIyBVc2FnZQoK
Rm9yIHRoZSBmdWxsIGxpc3Qgb2Ygb3B0aW9uczoKCmBgYHNoZWxsCiQgY29u
c3VsLXRlbXBsYXRlIC1oCmBgYAoKIyMjIENvbW1hbmQgTGluZSBGbGFncwoK
VGhlIENMSSBpbnRlcmZhY2Ugc3VwcG9ydHMgYWxsIG9wdGlvbnMgaW4gdGhl
IGNvbmZpZ3VyYXRpb24gZmlsZSBhbmQgdmljZS12ZXJzYS4gSGVyZSBhcmUg
YSBmZXcgZXhhbXBsZXMgb2YgY29tbW9uIGludGVncmF0aW9ucyBvbiB0aGUg
Y29tbWFuZCBsaW5lLgoKUmVuZGVyIHRoZSB0ZW1wbGF0ZSBvbiBkaXNrIGF0
IGAvdG1wL3RlbXBsYXRlLmN0bXBsYCB0byBgL3RtcC9yZXN1bHRgOgoKYGBg
c2hlbGwKJCBjb25zdWwtdGVtcGxhdGUgXAogICAgLXRlbXBsYXRlICIvdG1w
L3RlbXBsYXRlLmN0bXBsOi90bXAvcmVzdWx0IgpgYGAKClJlbmRlciBtdWx0
aXBsZSB0ZW1wbGF0ZXMgaW4gdGhlIHNhbWUgcHJvY2Vzcy4gVGhlIG9wdGlv
bmFsIHRoaXJkIGFyZ3VtZW50IHRvCnRoZSB0ZW1wbGF0ZSBpcyBhIGNvbW1h
bmQgdGhhdCB3aWxsIGV4ZWN1dGUgZWFjaCB0aW1lIHRoZSB0ZW1wbGF0ZSBj
aGFuZ2VzLgoKYGBgc2hlbGwKJCBjb25zdWwtdGVtcGxhdGUgXAogICAgLXRl
bXBsYXRlICIvdG1wL25naW54LmN0bXBsOi92YXIvbmdpbngvbmdpbnguY29u
ZjpuZ2lueCAtcyByZWxvYWQiIFwKICAgIC10ZW1wbGF0ZSAiL3RtcC9yZWRp
cy5jdG1wbDovdmFyL3JlZGlzL3JlZGlzLmNvbmY6c2VydmljZSByZWRpcyBy
ZXN0YXJ0IiBcCiAgICAtdGVtcGxhdGUgIi90bXAvaGFwcm94eS5jdG1wbDov
dmFyL2hhcHJveHkvaGFwcm94eS5jb25mIgpgYGAKClJlbmRlciBhIHRlbXBs
YXRlIHVzaW5nIGEgY3VzdG9tIENvbnN1bCBhbmQgVmF1bHQgYWRkcmVzczoK
CmBgYHNoZWxsCiQgY29uc3VsLXRlbXBsYXRlIFwKICAgIC1jb25zdWwtYWRk
ciAiMTAuNC40LjY6ODUwMCIgXAogICAgLXZhdWx0LWFkZHIgImh0dHBzOi8v
MTAuNS4zMi41OjgyMDAiCmBgYAoKUmVuZGVyIGFsbCB0ZW1wbGF0ZXMgYW5k
IHRoZW4gc3Bhd24gYW5kIG1vbml0b3IgYSBjaGlsZCBwcm9jZXNzIGFzIGEg
c3VwZXJ2aXNvcjoKCmBgYHNoZWxsCiQgY29uc3VsLXRlbXBsYXRlIFwKICAt
dGVtcGxhdGUgIi90bXAvaW4uY3RtcGw6L3RtcC9yZXN1bHQiIFwKICAtZXhl
YyAiL3NiaW4vbXktc2VydmVyIgpgYGAKCkZvciBtb3JlIGluZm9ybWF0aW9u
IG9uIHN1cGVydmlzaW5nLCBwbGVhc2Ugc2VlIHRoZQpbQ29uc3VsIFRlbXBs
YXRlIEV4ZWMgTW9kZSBkb2N1bWVudGF0aW9uXSgjZXhlYy1tb2RlKS4KCiMj
IyBDb25maWd1cmF0aW9uIEZpbGUgRm9ybWF0CgpDb25maWd1cmF0aW9uIGZp
bGVzIGFyZSB3cml0dGVuIGluIHRoZSBbSGFzaGlDb3JwIENvbmZpZ3VyYXRp
b24gTGFuZ3VhZ2VdW2hjbF0uCkJ5IHByb3h5LCB0aGlzIG1lYW5zIHRoZSBj
b25maWd1cmF0aW9uIGlzIGFsc28gSlNPTiBjb21wYXRpYmxlLgoKYGBgaGNs
CiMgVGhpcyBkZW5vdGVzIHRoZSBzdGFydCBvZiB0aGUgY29uZmlndXJhdGlv
biBzZWN0aW9uIGZvciBDb25zdWwuIEFsbCB2YWx1ZXMKIyBjb250YWluZWQg
aW4gdGhpcyBzZWN0aW9uIHBlcnRhaW4gdG8gQ29uc3VsLgpjb25zdWwgewog
ICMgVGhpcyBibG9jayBzcGVjaWZpZXMgdGhlIGJhc2ljIGF1dGhlbnRpY2F0
aW9uIGluZm9ybWF0aW9uIHRvIHBhc3Mgd2l0aCB0aGUKICAjIHJlcXVlc3Qu
IEZvciBtb3JlIGluZm9ybWF0aW9uIG9uIGF1dGhlbnRpY2F0aW9uLCBwbGVh
c2Ugc2VlIHRoZSBDb25zdWwKICAjIGRvY3VtZW50YXRpb24uCiAgYXV0aCB7
CiAgICBlbmFibGVkICA9IHRydWUKICAgIHVzZXJuYW1lID0gInRlc3QiCiAg
ICBwYXNzd29yZCA9ICJ0ZXN0IgogIH0KCiAgIyBUaGlzIGlzIHRoZSBhZGRy
ZXNzIG9mIHRoZSBDb25zdWwgYWdlbnQuIEJ5IGRlZmF1bHQsIHRoaXMgaXMK
ICAjIDEyNy4wLjAuMTo4NTAwLCB3aGljaCBpcyB0aGUgZGVmYXVsdCBiaW5k
IGFuZCBwb3J0IGZvciBhIGxvY2FsIENvbnN1bAogICMgYWdlbnQuIEl0IGlz
IG5vdCByZWNvbW1lbmRlZCB0aGF0IHlvdSBjb21tdW5pY2F0ZSBkaXJlY3Rs
eSB3aXRoIGEgQ29uc3VsCiAgIyBzZXJ2ZXIsIGFuZCBpbnN0ZWFkIGNvbW11
bmljYXRlIHdpdGggdGhlIGxvY2FsIENvbnN1bCBhZ2VudC4gVGhlcmUgYXJl
IG1hbnkKICAjIHJlYXNvbnMgZm9yIHRoaXMsIG1vc3QgaW1wb3J0YW50bHkg
dGhlIENvbnN1bCBhZ2VudCBpcyBhYmxlIHRvIG11bHRpcGxleAogICMgY29u
bmVjdGlvbnMgdG8gdGhlIENvbnN1bCBzZXJ2ZXIgYW5kIHJlZHVjZSB0aGUg
bnVtYmVyIG9mIG9wZW4gSFRUUAogICMgY29ubmVjdGlvbnMuIEFkZGl0aW9u
YWxseSwgaXQgcHJvdmlkZXMgYSAid2VsbC1rbm93biIgSVAgYWRkcmVzcyBm
b3Igd2hpY2gKICAjIGNsaWVudHMgY2FuIGNvbm5lY3QuCiAgYWRkcmVzcyA9
ICIxMjcuMC4wLjE6ODUwMCIKCiAgIyBUaGlzIGlzIHRoZSBBQ0wgdG9rZW4g
dG8gdXNlIHdoZW4gY29ubmVjdGluZyB0byBDb25zdWwuIElmIHlvdSBkaWQg
bm90CiAgIyBlbmFibGUgQUNMcyBvbiB5b3VyIENvbnN1bCBjbHVzdGVyLCB5
b3UgZG8gbm90IG5lZWQgdG8gc2V0IHRoaXMgb3B0aW9uLgogICMKICAjIFRo
aXMgb3B0aW9uIGlzIGFsc28gYXZhaWxhYmxlIHZpYSB0aGUgZW52aXJvbm1l
bnQgdmFyaWFibGUgQ09OU1VMX1RPS0VOLgogIHRva2VuID0gImFiY2QxMjM0
IgoKICAjIFRoaXMgY29udHJvbHMgdGhlIHJldHJ5IGJlaGF2aW9yIHdoZW4g
YW4gZXJyb3IgaXMgcmV0dXJuZWQgZnJvbSBDb25zdWwuCiAgIyBDb25zdWwg
VGVtcGxhdGUgaXMgaGlnaGx5IGZhdWx0IHRvbGVyYW50LCBtZWFuaW5nIGl0
IGRvZXMgbm90IGV4aXQgaW4gdGhlCiAgIyBmYWNlIG9mIGZhaWx1cmUuIElu
c3RlYWQsIGl0IHVzZXMgZXhwb25lbnRpYWwgYmFjay1vZmYgYW5kIHJldHJ5
IGZ1bmN0aW9ucwogICMgdG8gd2FpdCBmb3IgdGhlIGNsdXN0ZXIgdG8gYmVj
b21lIGF2YWlsYWJsZSwgYXMgaXMgY3VzdG9tYXJ5IGluIGRpc3RyaWJ1dGVk
CiAgIyBzeXN0ZW1zLgogIHJldHJ5IHsKICAgICMgVGhpcyBlbmFibGVkIHJl
dHJpZXMuIFJldHJpZXMgYXJlIGVuYWJsZWQgYnkgZGVmYXVsdCwgc28gdGhp
cyBpcwogICAgIyByZWR1bmRhbnQuCiAgICBlbmFibGVkID0gdHJ1ZQoKICAg
ICMgVGhpcyBzcGVjaWZpZXMgdGhlIG51bWJlciBvZiBhdHRlbXB0cyB0byBt
YWtlIGJlZm9yZSBnaXZpbmcgdXAuIEVhY2gKICAgICMgYXR0ZW1wdCBhZGRz
IHRoZSBleHBvbmVudGlhbCBiYWNrb2ZmIHNsZWVwIHRpbWUuIFNldHRpbmcg
dGhpcyB0bwogICAgIyB6ZXJvIHdpbGwgaW1wbGVtZW50IGFuIHVubGltaXRl
ZCBudW1iZXIgb2YgcmV0cmllcy4KICAgIGF0dGVtcHRzID0gMTIKCiAgICAj
IFRoaXMgaXMgdGhlIGJhc2UgYW1vdW50IG9mIHRpbWUgdG8gc2xlZXAgYmV0
d2VlbiByZXRyeSBhdHRlbXB0cy4gRWFjaAogICAgIyByZXRyeSBzbGVlcHMg
Zm9yIGFuIGV4cG9uZW50IG9mIDIgbG9uZ2VyIHRoYW4gdGhpcyBiYXNlLiBG
b3IgNSByZXRyaWVzLAogICAgIyB0aGUgc2xlZXAgdGltZXMgd291bGQgYmU6
IDI1MG1zLCA1MDBtcywgMXMsIDJzLCB0aGVuIDRzLgogICAgYmFja29mZiA9
ICIyNTBtcyIKCiAgICAjIFRoaXMgaXMgdGhlIG1heGltdW0gYW1vdW50IG9m
IHRpbWUgdG8gc2xlZXAgYmV0d2VlbiByZXRyeSBhdHRlbXB0cy4KICAgICMg
V2hlbiBtYXhfYmFja29mZiBpcyBzZXQgdG8gemVybywgdGhlcmUgaXMgbm8g
dXBwZXIgbGltaXQgdG8gdGhlCiAgICAjIGV4cG9uZW50aWFsIHNsZWVwIGJl
dHdlZW4gcmV0cnkgYXR0ZW1wdHMuCiAgICAjIElmIG1heF9iYWNrb2ZmIGlz
IHNldCB0byAxMHMgYW5kIGJhY2tvZmYgaXMgc2V0IHRvIDFzLCBzbGVlcCB0
aW1lcwogICAgIyB3b3VsZCBiZTogMXMsIDJzLCA0cywgOHMsIDEwcywgMTBz
LCAuLi4KICAgIG1heF9iYWNrb2ZmID0gIjFtIgogIH0KCiAgIyBUaGlzIGJs
b2NrIGNvbmZpZ3VyZXMgdGhlIFNTTCBvcHRpb25zIGZvciBjb25uZWN0aW5n
IHRvIHRoZSBDb25zdWwgc2VydmVyLgogIHNzbCB7CiAgICAjIFRoaXMgZW5h
YmxlcyBTU0wuIFNwZWNpZnlpbmcgYW55IG9wdGlvbiBmb3IgU1NMIHdpbGwg
YWxzbyBlbmFibGUgaXQuCiAgICBlbmFibGVkID0gdHJ1ZQoKICAgICMgVGhp
cyBlbmFibGVzIFNTTCBwZWVyIHZlcmlmaWNhdGlvbi4gVGhlIGRlZmF1bHQg
dmFsdWUgaXMgInRydWUiLCB3aGljaAogICAgIyB3aWxsIGNoZWNrIHRoZSBn
bG9iYWwgQ0EgY2hhaW4gdG8gbWFrZSBzdXJlIHRoZSBnaXZlbiBjZXJ0aWZp
Y2F0ZXMgYXJlCiAgICAjIHZhbGlkLiBJZiB5b3UgYXJlIHVzaW5nIGEgc2Vs
Zi1zaWduZWQgY2VydGlmaWNhdGUgdGhhdCB5b3UgaGF2ZSBub3QgYWRkZWQK
ICAgICMgdG8gdGhlIENBIGNoYWluLCB5b3UgbWF5IHdhbnQgdG8gZGlzYWJs
ZSBTU0wgdmVyaWZpY2F0aW9uLiBIb3dldmVyLCBwbGVhc2UKICAgICMgdW5k
ZXJzdGFuZCB0aGlzIGlzIGEgcG90ZW50aWFsIHNlY3VyaXR5IHZ1bG5lcmFi
aWxpdHkuCiAgICB2ZXJpZnkgPSBmYWxzZQoKICAgICMgVGhpcyBpcyB0aGUg
cGF0aCB0byB0aGUgY2VydGlmaWNhdGUgdG8gdXNlIHRvIGF1dGhlbnRpY2F0
ZS4gSWYganVzdCBhCiAgICAjIGNlcnRpZmljYXRlIGlzIHByb3ZpZGVkLCBp
dCBpcyBhc3N1bWVkIHRvIGNvbnRhaW4gYm90aCB0aGUgY2VydGlmaWNhdGUg
YW5kCiAgICAjIHRoZSBrZXkgdG8gY29udmVydCB0byBhbiBYNTA5IGNlcnRp
ZmljYXRlLiBJZiBib3RoIHRoZSBjZXJ0aWZpY2F0ZSBhbmQKICAgICMga2V5
IGFyZSBzcGVjaWZpZWQsIENvbnN1bCBUZW1wbGF0ZSB3aWxsIGF1dG9tYXRp
Y2FsbHkgY29tYmluZSB0aGVtIGludG8gYW4KICAgICMgWDUwOSBjZXJ0aWZp
Y2F0ZSBmb3IgeW91LgogICAgY2VydCA9ICIvcGF0aC90by9jbGllbnQvY2Vy
dCIKICAgIGtleSAgPSAiL3BhdGgvdG8vY2xpZW50L2tleSIKCiAgICAjIFRo
aXMgaXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIGF1dGhvcml0eSB0
byB1c2UgYXMgYSBDQS4gVGhpcyBpcwogICAgIyB1c2VmdWwgZm9yIHNlbGYt
c2lnbmVkIGNlcnRpZmljYXRlcyBvciBmb3Igb3JnYW5pemF0aW9ucyB1c2lu
ZyB0aGVpciBvd24KICAgICMgaW50ZXJuYWwgY2VydGlmaWNhdGUgYXV0aG9y
aXR5LgogICAgY2FfY2VydCA9ICIvcGF0aC90by9jYSIKCiAgICAjIFRoaXMg
aXMgdGhlIHBhdGggdG8gYSBkaXJlY3Rvcnkgb2YgUEVNLWVuY29kZWQgQ0Eg
Y2VydCBmaWxlcy4gSWYgYm90aAogICAgIyBgY2FfY2VydGAgYW5kIGBjYV9w
YXRoYCBpcyBzcGVjaWZpZWQsIGBjYV9jZXJ0YCBpcyBwcmVmZXJyZWQuCiAg
ICBjYV9wYXRoID0gInBhdGgvdG8vY2VydHMvIgoKICAgICMgVGhpcyBzZXRz
IHRoZSBTTkkgc2VydmVyIG5hbWUgdG8gdXNlIGZvciB2YWxpZGF0aW9uLgog
ICAgc2VydmVyX25hbWUgPSAibXktc2VydmVyLmNvbSIKICB9Cn0KCiMgVGhp
cyBpcyB0aGUgc2lnbmFsIHRvIGxpc3RlbiBmb3IgdG8gdHJpZ2dlciBhIHJl
bG9hZCBldmVudC4gVGhlIGRlZmF1bHQKIyB2YWx1ZSBpcyBzaG93biBiZWxv
dy4gU2V0dGluZyB0aGlzIHZhbHVlIHRvIHRoZSBlbXB0eSBzdHJpbmcgd2ls
bCBjYXVzZSBDVAojIHRvIG5vdCBsaXN0ZW4gZm9yIGFueSByZWxvYWQgc2ln
bmFscy4KcmVsb2FkX3NpZ25hbCA9ICJTSUdIVVAiCgojIFRoaXMgaXMgdGhl
IHNpZ25hbCB0byBsaXN0ZW4gZm9yIHRvIHRyaWdnZXIgYSBncmFjZWZ1bCBz
dG9wLiBUaGUgZGVmYXVsdAojIHZhbHVlIGlzIHNob3duIGJlbG93LiBTZXR0
aW5nIHRoaXMgdmFsdWUgdG8gdGhlIGVtcHR5IHN0cmluZyB3aWxsIGNhdXNl
IENUCiMgdG8gbm90IGxpc3RlbiBmb3IgYW55IGdyYWNlZnVsIHN0b3Agc2ln
bmFscy4Ka2lsbF9zaWduYWwgPSAiU0lHSU5UIgoKIyBUaGlzIGlzIHRoZSBt
YXhpbXVtIGludGVydmFsIHRvIGFsbG93ICJzdGFsZSIgZGF0YS4gQnkgZGVm
YXVsdCwgb25seSB0aGUKIyBDb25zdWwgbGVhZGVyIHdpbGwgcmVzcG9uZCB0
byBxdWVyaWVzOyBhbnkgcmVxdWVzdHMgdG8gYSBmb2xsb3dlciB3aWxsCiMg
Zm9yd2FyZCB0byB0aGUgbGVhZGVyLiBJbiBsYXJnZSBjbHVzdGVycyB3aXRo
IG1hbnkgcmVxdWVzdHMsIHRoaXMgaXMgbm90IGFzCiMgc2NhbGFibGUsIHNv
IHRoaXMgb3B0aW9uIGFsbG93cyBhbnkgZm9sbG93ZXIgdG8gcmVzcG9uZCB0
byBhIHF1ZXJ5LCBzbyBsb25nCiMgYXMgdGhlIGxhc3QtcmVwbGljYXRlZCBk
YXRhIGlzIHdpdGhpbiB0aGVzZSBib3VuZHMuIEhpZ2hlciB2YWx1ZXMgcmVz
dWx0IGluCiMgbGVzcyBjbHVzdGVyIGxvYWQsIGJ1dCBhcmUgbW9yZSBsaWtl
bHkgdG8gaGF2ZSBvdXRkYXRlZCBkYXRhLgptYXhfc3RhbGUgPSAiMTBtIgoK
IyBUaGlzIGlzIHRoZSBsb2cgbGV2ZWwuIElmIHlvdSBmaW5kIGEgYnVnIGlu
IENvbnN1bCBUZW1wbGF0ZSwgcGxlYXNlIGVuYWJsZQojIGRlYnVnIGxvZ3Mg
c28gd2UgY2FuIGhlbHAgaWRlbnRpZnkgdGhlIGlzc3VlLiBUaGlzIGlzIGFs
c28gYXZhaWxhYmxlIGFzIGEKIyBjb21tYW5kIGxpbmUgZmxhZy4KbG9nX2xl
dmVsID0gIndhcm4iCgojIFRoaXMgaXMgdGhlIHBhdGggdG8gc3RvcmUgYSBQ
SUQgZmlsZSB3aGljaCB3aWxsIGNvbnRhaW4gdGhlIHByb2Nlc3MgSUQgb2Yg
dGhlCiMgQ29uc3VsIFRlbXBsYXRlIHByb2Nlc3MuIFRoaXMgaXMgdXNlZnVs
IGlmIHlvdSBwbGFuIHRvIHNlbmQgY3VzdG9tIHNpZ25hbHMKIyB0byB0aGUg
cHJvY2Vzcy4KcGlkX2ZpbGUgPSAiL3BhdGgvdG8vcGlkIgoKIyBUaGlzIGlz
IHRoZSBxdWllc2NlbmNlIHRpbWVyczsgaXQgZGVmaW5lcyB0aGUgbWluaW11
bSBhbmQgbWF4aW11bSBhbW91bnQgb2YKIyB0aW1lIHRvIHdhaXQgZm9yIHRo
ZSBjbHVzdGVyIHRvIHJlYWNoIGEgY29uc2lzdGVudCBzdGF0ZSBiZWZvcmUg
cmVuZGVyaW5nIGEKIyB0ZW1wbGF0ZS4gVGhpcyBpcyB1c2VmdWwgdG8gZW5h
YmxlIGluIHN5c3RlbXMgdGhhdCBoYXZlIGEgbG90IG9mIGZsYXBwaW5nLAoj
IGJlY2F1c2UgaXQgd2lsbCByZWR1Y2UgdGhlIHRoZSBudW1iZXIgb2YgdGlt
ZXMgYSB0ZW1wbGF0ZSBpcyByZW5kZXJlZC4Kd2FpdCB7CiAgbWluID0gIjVz
IgogIG1heCA9ICIxMHMiCn0KCiMgVGhpcyBkZW5vdGVzIHRoZSBzdGFydCBv
ZiB0aGUgY29uZmlndXJhdGlvbiBzZWN0aW9uIGZvciBWYXVsdC4gQWxsIHZh
bHVlcwojIGNvbnRhaW5lZCBpbiB0aGlzIHNlY3Rpb24gcGVydGFpbiB0byBW
YXVsdC4KdmF1bHQgewogICMgVGhpcyBpcyB0aGUgYWRkcmVzcyBvZiB0aGUg
VmF1bHQgbGVhZGVyLiBUaGUgcHJvdG9jb2wgKGh0dHAocykpIHBvcnRpb24K
ICAjIG9mIHRoZSBhZGRyZXNzIGlzIHJlcXVpcmVkLgogIGFkZHJlc3MgPSAi
aHR0cHM6Ly92YXVsdC5zZXJ2aWNlLmNvbnN1bDo4MjAwIgoKICAjIFRoaXMg
aXMgYSBWYXVsdCBFbnRlcnByaXNlIG5hbWVzcGFjZSB0byB1c2UgZm9yIHJl
YWRpbmcvd3JpdGluZyBzZWNyZXRzLgogICMKICAjIFRoaXMgdmFsdWUgY2Fu
IGFsc28gYmUgc3BlY2lmaWVkIHZpYSB0aGUgZW52aXJvbm1lbnQgdmFyaWFi
bGUgVkFVTFRfTkFNRVNQQUNFLgogIG5hbWVzcGFjZSA9ICJmb28iCgogICMg
VGhpcyBpcyB0aGUgdG9rZW4gdG8gdXNlIHdoZW4gY29tbXVuaWNhdGluZyB3
aXRoIHRoZSBWYXVsdCBzZXJ2ZXIuCiAgIyBMaWtlIG90aGVyIHRvb2xzIHRo
YXQgaW50ZWdyYXRlIHdpdGggVmF1bHQsIENvbnN1bCBUZW1wbGF0ZSBtYWtl
cyB0aGUKICAjIGFzc3VtcHRpb24gdGhhdCB5b3UgcHJvdmlkZSBpdCB3aXRo
IGEgVmF1bHQgdG9rZW47IGl0IGRvZXMgbm90IGhhdmUgdGhlCiAgIyBpbmNv
cnBvcmF0ZWQgbG9naWMgdG8gZ2VuZXJhdGUgdG9rZW5zIHZpYSBWYXVsdCdz
IGF1dGggbWV0aG9kcy4KICAjCiAgIyBUaGlzIHZhbHVlIGNhbiBhbHNvIGJl
IHNwZWNpZmllZCB2aWEgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlIFZBVUxU
X1RPS0VOLgogICMgV2hlbiB1c2luZyBhIHRva2VuIGZyb20gVmF1bHQgQWdl
bnQsIHRoZSB2YXVsdF9hZ2VudF90b2tlbl9maWxlIHNldHRpbmcKICAjIHNo
b3VsZCBiZSB1c2VkIGluc3RlYWQsIGFzIHRoYXQgd2lsbCB0YWtlIHByZWNl
ZGVuY2Ugb3ZlciB0aGlzIGZpZWxkLgogIHRva2VuID0gImFiY2QxMjM0IgoK
ICAjIFRoaXMgdGVsbHMgQ29uc3VsIFRlbXBsYXRlIHRvIGxvYWQgdGhlIFZh
dWx0IHRva2VuIGZyb20gdGhlIGNvbnRlbnRzIG9mIGEgZmlsZS4KICAjIElm
IHRoaXMgZmllbGQgaXMgc3BlY2lmaWVkOgogICMgLSBieSBkZWZhdWx0IENv
bnN1bCBUZW1wbGF0ZSB3aWxsIG5vdCB0cnkgdG8gcmVuZXcgdGhlIFZhdWx0
IHRva2VuLCBpZiB5b3Ugd2FudCBpdAogICMgdG8gcmVuZXcgeW91IHdpbGwg
bmVlIGR0byBzcGVjaWZ5IHJlbmV3X3Rva2VuID0gdHJ1ZSBhcyBiZWxvdy4K
ICAjIC0gQ29uc3VsIFRlbXBsYXRlIHdpbGwgcGVyaW9kaWNhbGx5IHN0YXQg
dGhlIGZpbGUgYW5kIHVwZGF0ZSB0aGUgdG9rZW4gaWYgaXQgaGFzCiAgIyBj
aGFuZ2VkLgogICMgdmF1bHRfYWdlbnRfdG9rZW5fZmlsZSA9ICIvdG1wL3Zh
dWx0L2FnZW50L3Rva2VuIgoKICAjIFRoaXMgdGVsbHMgQ29uc3VsIFRlbXBs
YXRlIHRoYXQgdGhlIHByb3ZpZGVkIHRva2VuIGlzIGFjdHVhbGx5IGEgd3Jh
cHBlZAogICMgdG9rZW4gdGhhdCBzaG91bGQgYmUgdW53cmFwcGVkIHVzaW5n
IFZhdWx0J3MgY3ViYnlob2xlIHJlc3BvbnNlIHdyYXBwaW5nCiAgIyBiZWZv
cmUgYmVpbmcgdXNlZC4gUGxlYXNlIHNlZSBWYXVsdCdzIGN1YmJ5aG9sZSBy
ZXNwb25zZSB3cmFwcGluZwogICMgZG9jdW1lbnRhdGlvbiBmb3IgbW9yZSBp
bmZvcm1hdGlvbi4KICB1bndyYXBfdG9rZW4gPSB0cnVlCgogICMgVGhpcyBv
cHRpb24gdGVsbHMgQ29uc3VsIFRlbXBsYXRlIHRvIGF1dG9tYXRpY2FsbHkg
cmVuZXcgdGhlIFZhdWx0IHRva2VuCiAgIyBnaXZlbi4gSWYgeW91IGFyZSB1
bmZhbWlsaWFyIHdpdGggVmF1bHQncyBhcmNoaXRlY3R1cmUsIFZhdWx0IHJl
cXVpcmVzCiAgIyB0b2tlbnMgYmUgcmVuZXdlZCBhdCBzb21lIHJlZ3VsYXIg
aW50ZXJ2YWwgb3IgdGhleSB3aWxsIGJlIHJldm9rZWQuIENvbnN1bAogICMg
VGVtcGxhdGUgd2lsbCBhdXRvbWF0aWNhbGx5IHJlbmV3IHRoZSB0b2tlbiBh
dCBoYWxmIHRoZSBsZWFzZSBkdXJhdGlvbiBvZgogICMgdGhlIHRva2VuLiBU
aGUgZGVmYXVsdCB2YWx1ZSBpcyB0cnVlLCBidXQgdGhpcyBvcHRpb24gY2Fu
IGJlIGRpc2FibGVkIGlmCiAgIyB5b3Ugd2FudCB0byByZW5ldyB0aGUgVmF1
bHQgdG9rZW4gdXNpbmcgYW4gb3V0LW9mLWJhbmQgcHJvY2Vzcy4KICAjCiAg
IyBOb3RlIHRoYXQgc2VjcmV0cyBzcGVjaWZpZWQgaW4gYSB0ZW1wbGF0ZSAo
dXNpbmcge3tzZWNyZXR9fSBmb3IgZXhhbXBsZSkKICAjIGFyZSBhbHdheXMg
cmVuZXdlZCwgZXZlbiBpZiB0aGlzIG9wdGlvbiBpcyBzZXQgdG8gZmFsc2Uu
IFRoaXMgb3B0aW9uIG9ubHkKICAjIGFwcGxpZXMgdG8gdGhlIHRvcC1sZXZl
bCBWYXVsdCB0b2tlbiBpdHNlbGYuCiAgcmVuZXdfdG9rZW4gPSB0cnVlCgog
ICMgVGhpcyBzZWN0aW9uIGRldGFpbHMgdGhlIHJldHJ5IG9wdGlvbnMgZm9y
IGNvbm5lY3RpbmcgdG8gVmF1bHQuIFBsZWFzZSBzZWUKICAjIHRoZSByZXRy
eSBvcHRpb25zIGluIHRoZSBDb25zdWwgc2VjdGlvbiBmb3IgbW9yZSBpbmZv
cm1hdGlvbiAodGhleSBhcmUgdGhlCiAgIyBzYW1lKS4KICByZXRyeSB7CiAg
ICAjIC4uLgogIH0KCiAgIyBUaGlzIHNlY3Rpb24gZGV0YWlscyB0aGUgU1NM
IG9wdGlvbnMgZm9yIGNvbm5lY3RpbmcgdG8gdGhlIFZhdWx0IHNlcnZlci4K
ICAjIFBsZWFzZSBzZWUgdGhlIFNTTCBvcHRpb25zIGluIHRoZSBDb25zdWwg
c2VjdGlvbiBmb3IgbW9yZSBpbmZvcm1hdGlvbiAodGhleQogICMgYXJlIHRo
ZSBzYW1lKS4KICBzc2wgewogICAgIyAuLi4KICB9Cn0KCiMgVGhpcyBibG9j
ayBkZWZpbmVzIHRoZSBjb25maWd1cmF0aW9uIGZvciBjb25uZWN0aW5nIHRv
IGEgc3lzbG9nIHNlcnZlciBmb3IKIyBsb2dnaW5nLgpzeXNsb2cgewogICMg
VGhpcyBlbmFibGVzIHN5c2xvZyBsb2dnaW5nLiBTcGVjaWZ5aW5nIGFueSBv
dGhlciBvcHRpb24gYWxzbyBlbmFibGVzCiAgIyBzeXNsb2cgbG9nZ2luZy4K
ICBlbmFibGVkID0gdHJ1ZQoKICAjIFRoaXMgaXMgdGhlIG5hbWUgb2YgdGhl
IHN5c2xvZyBmYWNpbGl0eSB0byBsb2cgdG8uCiAgZmFjaWxpdHkgPSAiTE9D
QUw1Igp9CgojIFRoaXMgYmxvY2sgZGVmaW5lcyB0aGUgY29uZmlndXJhdGlv
biBmb3IgZGUtZHVwbGljYXRpb24gbW9kZS4gUGxlYXNlIHNlZSB0aGUKIyBk
ZS1kdXBsaWNhdGlvbiBtb2RlIGRvY3VtZW50YXRpb24gbGF0ZXIgaW4gdGhl
IFJFQURNRSBmb3IgbW9yZSBpbmZvcm1hdGlvbgojIG9uIGhvdyBkZS1kdXBs
aWNhdGlvbiBtb2RlIG9wZXJhdGVzLgpkZWR1cGxpY2F0ZSB7CiAgIyBUaGlz
IGVuYWJsZXMgZGUtZHVwbGljYXRpb24gbW9kZS4gU3BlY2lmeWluZyBhbnkg
b3RoZXIgb3B0aW9ucyBhbHNvIGVuYWJsZXMKICAjIGRlLWR1cGxpY2F0aW9u
IG1vZGUuCiAgZW5hYmxlZCA9IHRydWUKCiAgIyBUaGlzIGlzIHRoZSBwcmVm
aXggdG8gdGhlIHBhdGggaW4gQ29uc3VsJ3MgS1Ygc3RvcmUgd2hlcmUgZGUt
ZHVwbGljYXRpb24KICAjIHRlbXBsYXRlcyB3aWxsIGJlIHByZS1yZW5kZXJl
ZCBhbmQgc3RvcmVkLgogIHByZWZpeCA9ICJjb25zdWwtdGVtcGxhdGUvZGVk
dXAvIgp9CgojIFRoaXMgYmxvY2sgZGVmaW5lcyB0aGUgY29uZmlndXJhdGlv
biBmb3IgZXhlYyBtb2RlLiBQbGVhc2Ugc2VlIHRoZSBleGVjIG1vZGUKIyBk
b2N1bWVudGF0aW9uIGF0IHRoZSBib3R0b20gb2YgdGhpcyBSRUFETUUgZm9y
IG1vcmUgaW5mb3JtYXRpb24gb24gaG93IGV4ZWMKIyBtb2RlIG9wZXJhdGVz
IGFuZCB0aGUgY2F2ZWF0cyBvZiB0aGlzIG1vZGUuCmV4ZWMgewogICMgVGhp
cyBpcyB0aGUgY29tbWFuZCB0byBleGVjIGFzIGEgY2hpbGQgcHJvY2Vzcy4g
VGhlcmUgY2FuIGJlIG9ubHkgb25lCiAgIyBjb21tYW5kIHBlciBDb25zdWwg
VGVtcGxhdGUgcHJvY2Vzcy4KICBjb21tYW5kID0gIi91c3IvYmluL2FwcCIK
CiAgIyBUaGlzIGlzIGEgcmFuZG9tIHNwbGF5IHRvIHdhaXQgYmVmb3JlIGtp
bGxpbmcgdGhlIGNvbW1hbmQuIFRoZSBkZWZhdWx0CiAgIyB2YWx1ZSBpcyAw
IChubyB3YWl0KSwgYnV0IGxhcmdlIGNsdXN0ZXJzIHNob3VsZCBjb25zaWRl
ciBzZXR0aW5nIGEgc3BsYXkKICAjIHZhbHVlIHRvIHByZXZlbnQgYWxsIGNo
aWxkIHByb2Nlc3NlcyBmcm9tIHJlbG9hZGluZyBhdCB0aGUgc2FtZSB0aW1l
IHdoZW4KICAjIGRhdGEgY2hhbmdlcyBvY2N1ci4gV2hlbiB0aGlzIHZhbHVl
IGlzIHNldCB0byBub24temVybywgQ29uc3VsIFRlbXBsYXRlCiAgIyB3aWxs
IHdhaXQgYSByYW5kb20gcGVyaW9kIG9mIHRpbWUgdXAgdG8gdGhlIHNwbGF5
IHZhbHVlIGJlZm9yZSByZWxvYWRpbmcKICAjIG9yIGtpbGxpbmcgdGhlIGNo
aWxkIHByb2Nlc3MuIFRoaXMgY2FuIGJlIHVzZWQgdG8gcHJldmVudCB0aGUg
dGh1bmRlcmluZwogICMgaGVyZCBwcm9ibGVtIG9uIGFwcGxpY2F0aW9ucyB0
aGF0IGRvIG5vdCBncmFjZWZ1bGx5IHJlbG9hZC4KICBzcGxheSA9ICI1cyIK
CiAgZW52IHsKICAgICMgVGhpcyBzcGVjaWZpZXMgaWYgdGhlIGNoaWxkIHBy
b2Nlc3Mgc2hvdWxkIG5vdCBpbmhlcml0IHRoZSBwYXJlbnQKICAgICMgcHJv
Y2VzcydzIGVudmlyb25tZW50LiBCeSBkZWZhdWx0LCB0aGUgY2hpbGQgd2ls
bCBoYXZlIGZ1bGwgYWNjZXNzIHRvIHRoZQogICAgIyBlbnZpcm9ubWVudCB2
YXJpYWJsZXMgb2YgdGhlIHBhcmVudC4gU2V0dGluZyB0aGlzIHRvIHRydWUg
d2lsbCBzZW5kIG9ubHkKICAgICMgdGhlIHZhbHVlcyBzcGVjaWZpZWQgaW4g
YGN1c3RvbV9lbnZgIHRvIHRoZSBjaGlsZCBwcm9jZXNzLgogICAgcHJpc3Rp
bmUgPSBmYWxzZQoKICAgICMgVGhpcyBzcGVjaWZpZXMgYWRkaXRpb25hbCBj
dXN0b20gZW52aXJvbm1lbnQgdmFyaWFibGVzIGluIHRoZSBmb3JtIHNob3du
CiAgICAjIGJlbG93IHRvIGluamVjdCBpbnRvIHRoZSBjaGlsZCdzIHJ1bnRp
bWUgZW52aXJvbm1lbnQuIElmIGEgY3VzdG9tCiAgICAjIGVudmlyb25tZW50
IHZhcmlhYmxlIHNoYXJlcyBpdHMgbmFtZSB3aXRoIGEgc3lzdGVtIGVudmly
b25tZW50IHZhcmlhYmxlLAogICAgIyB0aGUgY3VzdG9tIGVudmlyb25tZW50
IHZhcmlhYmxlIHRha2VzIHByZWNlZGVuY2UuIEV2ZW4gaWYgcHJpc3RpbmUs
CiAgICAjIHdoaXRlbGlzdCwgb3IgYmxhY2tsaXN0IGlzIHNwZWNpZmllZCwg
YWxsIHZhbHVlcyBpbiB0aGlzIG9wdGlvbgogICAgIyBhcmUgZ2l2ZW4gdG8g
dGhlIGNoaWxkIHByb2Nlc3MuCiAgICBjdXN0b20gPSBbIlBBVEg9JFBBVEg6
L2V0Yy9teWFwcC9iaW4iXQoKICAgICMgVGhpcyBzcGVjaWZpZXMgYSBsaXN0
IG9mIGVudmlyb25tZW50IHZhcmlhYmxlcyB0byBleGNsdXNpdmVseSBpbmNs
dWRlIGluCiAgICAjIHRoZSBsaXN0IG9mIGVudmlyb25tZW50IHZhcmlhYmxl
cyBleHBvc2VkIHRvIHRoZSBjaGlsZCBwcm9jZXNzLiBJZgogICAgIyBzcGVj
aWZpZWQsIG9ubHkgdGhvc2UgZW52aXJvbm1lbnQgdmFyaWFibGVzIG1hdGNo
aW5nIHRoZSBnaXZlbiBwYXR0ZXJucwogICAgIyBhcmUgZXhwb3NlZCB0byB0
aGUgY2hpbGQgcHJvY2Vzcy4gVGhlc2Ugc3RyaW5ncyBhcmUgbWF0Y2hlZCB1
c2luZyBHbydzCiAgICAjIGdsb2IgZnVuY3Rpb24sIHNvIHdpbGRjYXJkcyBh
cmUgcGVybWl0dGVkLgogICAgd2hpdGVsaXN0ID0gWyJDT05TVUxfKiJdCgog
ICAgIyBUaGlzIHNwZWNpZmllcyBhIGxpc3Qgb2YgZW52aXJvbm1lbnQgdmFy
aWFibGVzIHRvIGV4Y2x1c2l2ZWx5IHByb2hpYml0IGluCiAgICAjIHRoZSBs
aXN0IG9mIGVudmlyb25tZW50IHZhcmlhYmxlcyBleHBvc2VkIHRvIHRoZSBj
aGlsZCBwcm9jZXNzLiBJZgogICAgIyBzcGVjaWZpZWQsIGFueSBlbnZpcm9u
bWVudCB2YXJpYWJsZXMgbWF0Y2hpbmcgdGhlIGdpdmVuIHBhdHRlcm5zIHdp
bGwgbm90CiAgICAjIGJlIGV4cG9zZWQgdG8gdGhlIGNoaWxkIHByb2Nlc3Ms
IGV2ZW4gaWYgdGhleSBhcmUgd2hpdGVsaXN0ZWQuIFRoZSB2YWx1ZXMKICAg
ICMgaW4gdGhpcyBvcHRpb24gdGFrZSBwcmVjZWRlbmNlIG92ZXIgdGhlIHZh
bHVlcyBpbiB0aGUgd2hpdGVsaXN0LgogICAgIyBUaGVzZSBzdHJpbmdzIGFy
ZSBtYXRjaGVkIHVzaW5nIEdvJ3MgZ2xvYiBmdW5jdGlvbiwgc28gd2lsZGNh
cmRzIGFyZQogICAgIyBwZXJtaXR0ZWQuCiAgICBibGFja2xpc3QgPSBbIlZB
VUxUXyoiXQogIH0KCiAgIyBUaGlzIGRlZmluZXMgdGhlIHNpZ25hbCB0aGF0
IHdpbGwgYmUgc2VudCB0byB0aGUgY2hpbGQgcHJvY2VzcyB3aGVuIGEKICAj
IGNoYW5nZSBvY2N1cnMgaW4gYSB3YXRjaGVkIHRlbXBsYXRlLiBUaGUgc2ln
bmFsIHdpbGwgb25seSBiZSBzZW50IGFmdGVyIHRoZQogICMgcHJvY2VzcyBp
cyBzdGFydGVkLCBhbmQgdGhlIHByb2Nlc3Mgd2lsbCBvbmx5IGJlIHN0YXJ0
ZWQgYWZ0ZXIgYWxsCiAgIyBkZXBlbmRlbnQgdGVtcGxhdGVzIGhhdmUgYmVl
biByZW5kZXJlZCBhdCBsZWFzdCBvbmNlLiBUaGUgZGVmYXVsdCB2YWx1ZSBp
cwogICMgbmlsLCB3aGljaCB0ZWxscyBDb25zdWwgVGVtcGxhdGUgdG8gc3Rv
cCB0aGUgY2hpbGQgcHJvY2VzcyBhbmQgc3Bhd24gYSBuZXcKICAjIG9uZSBp
bnN0ZWFkIG9mIHNlbmRpbmcgaXQgYSBzaWduYWwuIFRoaXMgaXMgdXNlZnVs
IGZvciBsZWdhY3kgYXBwbGljYXRpb25zCiAgIyBvciBhcHBsaWNhdGlvbnMg
dGhhdCBjYW5ub3QgcHJvcGVybHkgcmVsb2FkIHRoZWlyIGNvbmZpZ3VyYXRp
b24gd2l0aG91dCBhCiAgIyBmdWxsIHJlbG9hZC4KICByZWxvYWRfc2lnbmFs
ID0gIiIKCiAgIyBUaGlzIGRlZmluZXMgdGhlIHNpZ25hbCBzZW50IHRvIHRo
ZSBjaGlsZCBwcm9jZXNzIHdoZW4gQ29uc3VsIFRlbXBsYXRlIGlzCiAgIyBn
cmFjZWZ1bGx5IHNodXR0aW5nIGRvd24uIFRoZSBhcHBsaWNhdGlvbiBzaG91
bGQgYmVnaW4gYSBncmFjZWZ1bCBjbGVhbnVwLgogICMgSWYgdGhlIGFwcGxp
Y2F0aW9uIGRvZXMgbm90IHRlcm1pbmF0ZSBiZWZvcmUgdGhlIGBraWxsX3Rp
bWVvdXRgLCBpdCB3aWxsCiAgIyBiZSB0ZXJtaW5hdGVkIChlZmZlY3RpdmVs
eSAia2lsbCAtOSIpLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyAiU0lHVEVSTSIu
CiAga2lsbF9zaWduYWwgPSAiU0lHSU5UIgoKICAjIFRoaXMgZGVmaW5lcyB0
aGUgYW1vdW50IG9mIHRpbWUgdG8gd2FpdCBmb3IgdGhlIGNoaWxkIHByb2Nl
c3MgdG8gZ3JhY2VmdWxseQogICMgdGVybWluYXRlIHdoZW4gQ29uc3VsIFRl
bXBsYXRlIGV4aXRzLiBBZnRlciB0aGlzIHNwZWNpZmllZCB0aW1lLCB0aGUg
Y2hpbGQKICAjIHByb2Nlc3Mgd2lsbCBiZSBmb3JjZS1raWxsZWQgKGVmZmVj
dGl2ZWx5ICJraWxsIC05IikuIFRoZSBkZWZhdWx0IHZhbHVlIGlzCiAgIyAi
MzBzIi4KICBraWxsX3RpbWVvdXQgPSAiMnMiCn0KCiMgVGhpcyBibG9jayBk
ZWZpbmVzIHRoZSBjb25maWd1cmF0aW9uIGZvciBhIHRlbXBsYXRlLiBVbmxp
a2Ugb3RoZXIgYmxvY2tzLAojIHRoaXMgYmxvY2sgbWF5IGJlIHNwZWNpZmll
ZCBtdWx0aXBsZSB0aW1lcyB0byBjb25maWd1cmUgbXVsdGlwbGUgdGVtcGxh
dGVzLgojIEl0IGlzIGFsc28gcG9zc2libGUgdG8gY29uZmlndXJlIHRlbXBs
YXRlcyB2aWEgdGhlIENMSSBkaXJlY3RseS4KdGVtcGxhdGUgewogICMgVGhp
cyBpcyB0aGUgc291cmNlIGZpbGUgb24gZGlzayB0byB1c2UgYXMgdGhlIGlu
cHV0IHRlbXBsYXRlLiBUaGlzIGlzIG9mdGVuCiAgIyBjYWxsZWQgdGhlICJD
b25zdWwgVGVtcGxhdGUgdGVtcGxhdGUiLiBUaGlzIG9wdGlvbiBpcyByZXF1
aXJlZCBpZiBub3QgdXNpbmcKICAjIHRoZSBgY29udGVudHNgIG9wdGlvbi4K
ICBzb3VyY2UgPSAiL3BhdGgvb24vZGlzay90by90ZW1wbGF0ZS5jdG1wbCIK
CiAgIyBUaGlzIGlzIHRoZSBkZXN0aW5hdGlvbiBwYXRoIG9uIGRpc2sgd2hl
cmUgdGhlIHNvdXJjZSB0ZW1wbGF0ZSB3aWxsIHJlbmRlci4KICAjIElmIHRo
ZSBwYXJlbnQgZGlyZWN0b3JpZXMgZG8gbm90IGV4aXN0LCBDb25zdWwgVGVt
cGxhdGUgd2lsbCBhdHRlbXB0IHRvCiAgIyBjcmVhdGUgdGhlbSwgdW5sZXNz
IGNyZWF0ZV9kZXN0X2RpcnMgaXMgZmFsc2UuCiAgZGVzdGluYXRpb24gPSAi
L3BhdGgvb24vZGlzay93aGVyZS90ZW1wbGF0ZS93aWxsL3JlbmRlci50eHQi
CgogICMgVGhpcyBvcHRpb25zIHRlbGxzIENvbnN1bCBUZW1wbGF0ZSB0byBj
cmVhdGUgdGhlIHBhcmVudCBkaXJlY3RvcmllcyBvZiB0aGUKICAjIGRlc3Rp
bmF0aW9uIHBhdGggaWYgdGhleSBkbyBub3QgZXhpc3QuIFRoZSBkZWZhdWx0
IHZhbHVlIGlzIHRydWUuCiAgY3JlYXRlX2Rlc3RfZGlycyA9IHRydWUKCiAg
IyBUaGlzIG9wdGlvbiBhbGxvd3MgZW1iZWRkaW5nIHRoZSBjb250ZW50cyBv
ZiBhIHRlbXBsYXRlIGluIHRoZSBjb25maWd1cmF0aW9uCiAgIyBmaWxlIHJh
dGhlciB0aGVuIHN1cHBseWluZyB0aGUgYHNvdXJjZWAgcGF0aCB0byB0aGUg
dGVtcGxhdGUgZmlsZS4gVGhpcyBpcwogICMgdXNlZnVsIGZvciBzaG9ydCB0
ZW1wbGF0ZXMuIFRoaXMgb3B0aW9uIGlzIG11dHVhbGx5IGV4Y2x1c2l2ZSB3
aXRoIHRoZQogICMgYHNvdXJjZWAgb3B0aW9uLgogIGNvbnRlbnRzID0gInt7
IGtleU9yRGVmYXVsdCBcInNlcnZpY2UvcmVkaXMvbWF4Y29ubnNAZWFzdC1h
d3NcIiBcIjVcIiB9fSIKCiAgIyBUaGlzIGlzIHRoZSBvcHRpb25hbCBjb21t
YW5kIHRvIHJ1biB3aGVuIHRoZSB0ZW1wbGF0ZSBpcyByZW5kZXJlZC4gVGhl
CiAgIyBjb21tYW5kIHdpbGwgb25seSBydW4gaWYgdGhlIHJlc3VsdGluZyB0
ZW1wbGF0ZSBjaGFuZ2VzLiBUaGUgY29tbWFuZCBtdXN0CiAgIyByZXR1cm4g
d2l0aGluIDMwcyAoY29uZmlndXJhYmxlKSwgYW5kIGl0IG11c3QgaGF2ZSBh
IHN1Y2Nlc3NmdWwgZXhpdCBjb2RlLgogICMgQ29uc3VsIFRlbXBsYXRlIGlz
IG5vdCBhIHJlcGxhY2VtZW50IGZvciBhIHByb2Nlc3MgbW9uaXRvciBvciBp
bml0IHN5c3RlbS4KICBjb21tYW5kID0gInJlc3RhcnQgc2VydmljZSBmb28i
CgogICMgVGhpcyBpcyB0aGUgbWF4aW11bSBhbW91bnQgb2YgdGltZSB0byB3
YWl0IGZvciB0aGUgb3B0aW9uYWwgY29tbWFuZCB0bwogICMgcmV0dXJuLiBE
ZWZhdWx0IGlzIDMwcy4KICBjb21tYW5kX3RpbWVvdXQgPSAiNjBzIgoKICAj
IEV4aXQgd2l0aCBhbiBlcnJvciB3aGVuIGFjY2Vzc2luZyBhIHN0cnVjdCBv
ciBtYXAgZmllbGQva2V5IHRoYXQgZG9lcyBub3QKICAjIGV4aXN0LiBUaGUg
ZGVmYXVsdCBiZWhhdmlvciB3aWxsIHByaW50ICI8bm8gdmFsdWU+IiB3aGVu
IGFjY2Vzc2luZyBhIGZpZWxkCiAgIyB0aGF0IGRvZXMgbm90IGV4aXN0LiBJ
dCBpcyBoaWdobHkgcmVjb21tZW5kZWQgeW91IHNldCB0aGlzIHRvICJ0cnVl
IiB3aGVuCiAgIyByZXRyaWV2aW5nIHNlY3JldHMgZnJvbSBWYXVsdC4KICBl
cnJvcl9vbl9taXNzaW5nX2tleSA9IGZhbHNlCgogICMgVGhpcyBpcyB0aGUg
cGVybWlzc2lvbiB0byByZW5kZXIgdGhlIGZpbGUuIElmIHRoaXMgb3B0aW9u
IGlzIGxlZnQKICAjIHVuc3BlY2lmaWVkLCBDb25zdWwgVGVtcGxhdGUgd2ls
bCBhdHRlbXB0IHRvIG1hdGNoIHRoZSBwZXJtaXNzaW9ucyBvZiB0aGUKICAj
IGZpbGUgdGhhdCBhbHJlYWR5IGV4aXN0cyBhdCB0aGUgZGVzdGluYXRpb24g
cGF0aC4gSWYgbm8gZmlsZSBleGlzdHMgYXQgdGhhdAogICMgcGF0aCwgdGhl
IHBlcm1pc3Npb25zIGFyZSAwNjQ0LgogIHBlcm1zID0gMDYwMAoKICAjIFRo
aXMgb3B0aW9uIGJhY2tzIHVwIHRoZSBwcmV2aW91c2x5IHJlbmRlcmVkIHRl
bXBsYXRlIGF0IHRoZSBkZXN0aW5hdGlvbgogICMgcGF0aCBiZWZvcmUgd3Jp
dGluZyBhIG5ldyBvbmUuIEl0IGtlZXBzIGV4YWN0bHkgb25lIGJhY2t1cC4g
VGhpcyBvcHRpb24gaXMKICAjIHVzZWZ1bCBmb3IgcHJldmVudGluZyBhY2Np
ZGVudGFsIGNoYW5nZXMgdG8gdGhlIGRhdGEgd2l0aG91dCBoYXZpbmcgYQog
ICMgcm9sbGJhY2sgc3RyYXRlZ3kuCiAgYmFja3VwID0gdHJ1ZQoKICAjIFRo
ZXNlIGFyZSB0aGUgZGVsaW1pdGVycyB0byB1c2UgaW4gdGhlIHRlbXBsYXRl
LiBUaGUgZGVmYXVsdCBpcyAie3siIGFuZAogICMgIn19IiwgYnV0IGZvciBz
b21lIHRlbXBsYXRlcywgaXQgbWF5IGJlIGVhc2llciB0byB1c2UgYSBkaWZm
ZXJlbnQgZGVsaW1pdGVyCiAgIyB0aGF0IGRvZXMgbm90IGNvbmZsaWN0IHdp
dGggdGhlIG91dHB1dCBmaWxlIGl0c2VsZi4KICBsZWZ0X2RlbGltaXRlciAg
PSAie3siCiAgcmlnaHRfZGVsaW1pdGVyID0gIn19IgoKICAjIFRoZXNlIGFy
ZSBmdW5jdGlvbnMgdGhhdCBhcmUgbm90IHBlcm1pdHRlZCBpbiB0aGUgdGVt
cGxhdGUuIElmIGEgdGVtcGxhdGUKICAjIGluY2x1ZGVzIG9uZSBvZiB0aGVz
ZSBmdW5jdGlvbnMsIGl0IHdpbGwgZXhpdCB3aXRoIGFuIGVycm9yLgogIGZ1
bmN0aW9uX2JsYWNrbGlzdCA9IFtdCgogICMgSWYgYSBzYW5kYm94IHBhdGgg
aXMgcHJvdmlkZWQsIGFueSBwYXRoIHByb3ZpZGVkIHRvIHRoZSBgZmlsZWAg
ZnVuY3Rpb24gaXMKICAjIGNoZWNrZWQgdGhhdCBpdCBmYWxscyB3aXRoaW4g
dGhlIHNhbmRib3ggcGF0aC4gUmVsYXRpdmUgcGF0aHMgdGhhdCB0cnkgdG8K
ICAjIHRyYXZlcnNlIG91dHNpZGUgdGhlIHNhbmRib3ggcGF0aCB3aWxsIGV4
aXQgd2l0aCBhbiBlcnJvci4KICBzYW5kYm94X3BhdGggPSAiIgoKICAjIFRo
aXMgaXMgdGhlIGBtaW5pbXVtKDptYXhpbXVtKWAgdG8gd2FpdCBiZWZvcmUg
cmVuZGVyaW5nIGEgbmV3IHRlbXBsYXRlIHRvCiAgIyBkaXNrIGFuZCB0cmln
Z2VyaW5nIGEgY29tbWFuZCwgc2VwYXJhdGVkIGJ5IGEgY29sb24gKGA6YCku
IElmIHRoZSBvcHRpb25hbAogICMgbWF4aW11bSB2YWx1ZSBpcyBvbWl0dGVk
LCBpdCBpcyBhc3N1bWVkIHRvIGJlIDR4IHRoZSByZXF1aXJlZCBtaW5pbXVt
IHZhbHVlLgogICMgVGhpcyBpcyBhIG51bWVyaWMgdGltZSB3aXRoIGEgdW5p
dCBzdWZmaXggKCI1cyIpLiBUaGVyZSBpcyBubyBkZWZhdWx0IHZhbHVlLgog
ICMgVGhlIHdhaXQgdmFsdWUgZm9yIGEgdGVtcGxhdGUgdGFrZXMgcHJlY2Vk
ZW5jZSBvdmVyIGFueSBnbG9iYWxseS1jb25maWd1cmVkCiAgIyB3YWl0Lgog
IHdhaXQgewogICAgbWluID0gIjJzIgogICAgbWF4ID0gIjEwcyIKICB9Cn0K
CmBgYAoKTm90ZSB0aGF0IG5vdCBhbGwgZmllbGRzIGFyZSByZXF1aXJlZC4g
SWYgeW91IGFyZSBub3QgcmV0cmlldmluZyBzZWNyZXRzIGZyb20KVmF1bHQs
IHlvdSBkbyBub3QgbmVlZCB0byBzcGVjaWZ5IGEgVmF1bHQgY29uZmlndXJh
dGlvbiBzZWN0aW9uLiBTaW1pbGFybHksIGlmCnlvdSBhcmUgbm90IGxvZ2dp
bmcgdG8gc3lzbG9nLCB5b3UgZG8gbm90IG5lZWQgdG8gc3BlY2lmeSBhIHN5
c2xvZwpjb25maWd1cmF0aW9uLgoKRm9yIGFkZGl0aW9uYWwgc2VjdXJpdHks
IHRva2VucyBtYXkgYWxzbyBiZSByZWFkIGZyb20gdGhlIGVudmlyb25tZW50
IHVzaW5nIHRoZQpgQ09OU1VMX1RPS0VOYCBvciBgVkFVTFRfVE9LRU5gIGVu
dmlyb25tZW50IHZhcmlhYmxlcyByZXNwZWN0aXZlbHkuIEl0IGlzIGhpZ2hs
eQpyZWNvbW1lbmRlZCB0aGF0IHlvdSBkbyBub3QgcHV0IHlvdXIgdG9rZW5z
IGluIHBsYWluLXRleHQgaW4gYSBjb25maWd1cmF0aW9uCmZpbGUuCgpJbnN0
cnVjdCBDb25zdWwgVGVtcGxhdGUgdG8gdXNlIGEgY29uZmlndXJhdGlvbiBm
aWxlIHdpdGggdGhlIGAtY29uZmlnYCBmbGFnOgoKYGBgc2hlbGwKJCBjb25z
dWwtdGVtcGxhdGUgLWNvbmZpZyAiL215L2NvbmZpZy5oY2wiCmBgYAoKVGhp
cyBhcmd1bWVudCBtYXkgYmUgc3BlY2lmaWVkIG11bHRpcGxlIHRpbWVzIHRv
IGxvYWQgbXVsdGlwbGUgY29uZmlndXJhdGlvbgpmaWxlcy4gVGhlIHJpZ2h0
LW1vc3QgY29uZmlndXJhdGlvbiB0YWtlcyB0aGUgaGlnaGVzdCBwcmVjZWRl
bmNlLiBJZiB0aGUgcGF0aCB0bwphIGRpcmVjdG9yeSBpcyBwcm92aWRlZCAo
YXMgb3Bwb3NlZCB0byB0aGUgcGF0aCB0byBhIGZpbGUpLCBhbGwgb2YgdGhl
IGZpbGVzIGluCnRoZSBnaXZlbiBkaXJlY3Rvcnkgd2lsbCBiZSBtZXJnZWQg
aW4KW2xleGljYWwgb3JkZXJdKGh0dHA6Ly9nb2xhbmcub3JnL3BrZy9wYXRo
L2ZpbGVwYXRoLyNXYWxrKSwgcmVjdXJzaXZlbHkuIFBsZWFzZQpub3RlIHRo
YXQgc3ltYm9saWMgbGlua3MgYXJlIF9ub3RfIGZvbGxvd2VkLgoKKipDb21t
YW5kcyBzcGVjaWZpZWQgb24gdGhlIENMSSB0YWtlIHByZWNlZGVuY2Ugb3Zl
ciBhIGNvbmZpZyBmaWxlISoqCgojIyMgVGVtcGxhdGluZyBMYW5ndWFnZQoK
Q29uc3VsIFRlbXBsYXRlIHBhcnNlcyBmaWxlcyBhdXRob3JlZCBpbiB0aGUg
W0dvIFRlbXBsYXRlXVt0ZXh0LXRlbXBsYXRlXQpmb3JtYXQuIElmIHlvdSBh
cmUgbm90IGZhbWlsaWFyIHdpdGggdGhlIHN5bnRheCwgcGxlYXNlIHJlYWQg
R28ncyBkb2N1bWVudGF0aW9uCmFuZCBleGFtcGxlcy4gSW4gYWRkaXRpb24g
dG8gdGhlIEdvLXByb3ZpZGVkIHRlbXBsYXRlIGZ1bmN0aW9ucywgQ29uc3Vs
IFRlbXBsYXRlCnByb3ZpZGVzIHRoZSBmb2xsb3dpbmcgZnVuY3Rpb25zOgoK
IyMjIyBBUEkgRnVuY3Rpb25zCgpBUEkgZnVuY3Rpb25zIGludGVyYWN0IHdp
dGggcmVtb3RlIEFQSSBjYWxscywgY29tbXVuaWNhdGluZyB3aXRoIGV4dGVy
bmFsCnNlcnZpY2VzIGxpa2UgW0NvbnN1bF1bY29uc3VsXSBhbmQgW1ZhdWx0
XVt2YXVsdF0uCgojIyMjIyBgY2FMZWFmYAoKUXVlcnkgW0NvbnN1bF1bY29u
c3VsXSBmb3IgdGhlIGxlYWYgY2VydGlmaWNhdGUgcmVwcmVzZW50aW5nIGEg
c2luZ2xlIHNlcnZpY2UuCgpgYGBsaXF1aWQKe3sgY2FMZWFmICI8TkFNRT4i
IH19CmBgYAoKRm9yIGV4YW1wbGU6CmBgYGxpcXVpZAp7eyB3aXRoIGNhTGVh
ZiAicHJveHkiIH19e3sgLkNlcnRQRU0gfX17eyBlbmQgfX0KYGBgCgpyZW5k
ZXJzCmBgYHRleHQKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNp
ekNDQWpHZ0F3SUJBZ0lCQ0RBS0JnZ3Foa2pPUFFRREFqQVdNUlF3RWdZRFZR
UURFd3REYjI1emRXd2cKLi4uCmxYY1F6ZktsSVllRld2Y0F2NGNBNFcyNThn
VHRxYUZSRFJKMmk3MjBlUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
YGBgCgpUaGUgdHdvIG1vc3QgdXNlZnVsIGZpZWxkcyBhcmUgYC5DZXJ0UEVN
YCBhbmQgYC5Qcml2YXRlS2V5UEVNYC4gRm9yIGEgY29tcGxldGUKbGlzdCBv
ZiBhdmFpbGFibGUgZmllbGRzLCBzZWUgY29uc3VsJ3MgZG9jdW1lbnRhdGlv
biBvbgpbTGVhZkNlcnRdKGh0dHBzOi8vZ29kb2Mub3JnL2dpdGh1Yi5jb20v
aGFzaGljb3JwL2NvbnN1bC9hcGkjTGVhZkNlcnQpLgoKIyMjIyMgYGNhUm9v
dGAKClF1ZXJ5IFtDb25zdWxdW2NvbnN1bF0gZm9yIGFsbCBbY29ubmVjdF1b
Y29ubmVjdF0gdHJ1c3RlZCBjZXJ0aWZpY2F0ZSBhdXRob3JpdHkKKENBKSBy
b290IGNlcnRpZmljYXRlcy4KCmBgYGxpcXVpZAp7eyBjYVJvb3RzIH19CmBg
YAoKRm9yIGV4YW1wbGU6CmBgYGxpcXVpZAp7eyByYW5nZSBjYVJvb3RzIH19
e3sgLlJvb3RDZXJ0UEVNIH19e3sgZW5kIH19CmBgYAoKcmVuZGVycwpgYGB0
ZXh0Ci0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDV0RDQ0FmK2dB
d0lCQWdJQkJ6QUtCZ2dxaGtqT1BRUURBakFXTVJRd0VnWURWUVFERXd0RGIy
NXpkV3dnCi4uLgpiY0ErU3UzcjhxU1JwcFRsYzZEMFVPWU9XYzF5a1FLUU9L
N21JZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCmBgYAoKVGhlIG1v
c3QgdXNlZnVsIGZpZWxkIGlzIGAuUm9vdENlcnRQRU1gLiBGb3IgYSBjb21w
bGV0ZSBsaXN0IG9mIGF2YWlsYWJsZQpmaWVsZHMsIHNlZSBjb25zdWwncyBk
b2N1bWVudGF0aW9uIG9uCltDQVJvb3RMaXN0XShodHRwczovL2dvZG9jLm9y
Zy9naXRodWIuY29tL2hhc2hpY29ycC9jb25zdWwvYXBpI0NBUm9vdExpc3Qp
LgoKCiMjIyMjIGBjb25uZWN0YAoKUXVlcnkgW0NvbnN1bF1bY29uc3VsXSBm
b3IgW2Nvbm5lY3RdW2Nvbm5lY3RdLWNhcGFibGUgc2VydmljZXMgYmFzZWQg
b24gdGhlaXIKaGVhbHRoLgoKYGBgbGlxdWlkCnt7IGNvbm5lY3QgIjxUQUc+
LjxOQU1FPkA8REFUQUNFTlRFUj5+PE5FQVI+fDxGSUxURVI+IiB9fQpgYGAK
ClN5bnRheCBpcyBleGFjdGx5IHRoZSBzYW1lIGFzIGZvciB0aGUgW3NlcnZp
Y2VdKCNzZXJ2aWNlKSBmdW5jdGlvbiBiZWxvdy4KCgpgYGBsaXF1aWQKe3sg
cmFuZ2UgY29ubmVjdCAid2ViIiB9fQpzZXJ2ZXIge3sgLk5hbWUgfX0ge3sg
LkFkZHJlc3MgfX06e3sgLlBvcnQgfX17eyBlbmQgfX0KYGBgCgpyZW5kZXJz
IHRoZSBJUCBhZGRyZXNzZXMgb2YgYWxsIF9oZWFsdGh5XyBub2RlcyB3aXRo
IGEgbG9naWNhbApbY29ubmVjdF1bY29ubmVjdF0tY2FwYWJsZSBzZXJ2aWNl
IG5hbWVkICJ3ZWIiOgoKYGBgdGV4dApzZXJ2ZXIgd2ViMDEgMTAuNS4yLjQ1
OjIxMDAwCnNlcnZlciB3ZWIwMiAxMC4yLjYuNjE6MjEwMDAKYGBgCgoKIyMj
IyMgYGRhdGFjZW50ZXJzYAoKUXVlcnkgW0NvbnN1bF1bY29uc3VsXSBmb3Ig
YWxsIGRhdGFjZW50ZXJzIGluIGl0cyBjYXRhbG9nLgoKYGBgbGlxdWlkCnt7
IGRhdGFjZW50ZXJzIH19CmBgYAoKRm9yIGV4YW1wbGU6CgpgYGBsaXF1aWQK
e3sgcmFuZ2UgZGF0YWNlbnRlcnMgfX0Ke3sgLiB9fXt7IGVuZCB9fQpgYGAK
CnJlbmRlcnMKCmBgYHRleHQKZGMxCmRjMgpgYGAKCkFuIG9wdGlvbmFsIGJv
b2xlYW4gY2FuIGJlIHNwZWNpZmllZCB3aGljaCBpbnN0cnVjdHMgQ29uc3Vs
IFRlbXBsYXRlIHRvIGlnbm9yZQpkYXRhY2VudGVycyB3aGljaCBhcmUgaW5h
Y2Nlc3NpYmxlIG9yIGRvIG5vdCBoYXZlIGEgY3VycmVudCBsZWFkZXIuIEVu
YWJsaW5nCnRoaXMgb3B0aW9uIHJlcXVpcmVzIGFuIE8oTisxKSBvcGVyYXRp
b24gYW5kIHRoZXJlZm9yZSBpcyBub3QgcmVjb21tZW5kZWQgaW4KZW52aXJv
bm1lbnRzIHdoZXJlIHBlcmZvcm1hbmNlIGlzIGEgZmFjdG9yLgoKYGBgbGlx
dWlkCi8vIElnbm9yZXMgZGF0YWNlbnRlcnMgd2hpY2ggYXJlIGluYWNjZXNz
aWJsZQp7eyBkYXRhY2VudGVycyB0cnVlIH19CmBgYAoKIyMjIyMgYGZpbGVg
CgpSZWFkIGFuZCBvdXRwdXQgdGhlIGNvbnRlbnRzIG9mIGEgbG9jYWwgZmls
ZSBvbiBkaXNrLiBJZiB0aGUgZmlsZSBjYW5ub3QgYmUKcmVhZCwgYW4gZXJy
b3Igd2lsbCBvY2N1ci4gV2hlbiB0aGUgZmlsZSBjaGFuZ2VzLCBDb25zdWwg
VGVtcGxhdGUgd2lsbCBwaWNrIHVwCnRoZSBjaGFuZ2UgYW5kIHJlLXJlbmRl
ciB0aGUgdGVtcGxhdGUuCgpgYGBsaXF1aWQKe3sgZmlsZSAiPFBBVEg+IiB9
fQpgYGAKCkZvciBleGFtcGxlOgoKYGBgbGlxdWlkCnt7IGZpbGUgIi9wYXRo
L3RvL215L2ZpbGUiIH19CmBgYAoKcmVuZGVycwoKYGBgdGV4dApmaWxlIGNv
bnRlbnRzCmBgYAoKVGhpcyBkb2VzIG5vdCBwcm9jZXNzIG5lc3RlZCB0ZW1w
bGF0ZXMuIFNlZQpbYGV4ZWN1dGVUZW1wbGF0ZWBdKCNleGVjdXRlVGVtcGxh
dGUpIGZvciBhIHdheSB0byByZW5kZXIgbmVzdGVkIHRlbXBsYXRlcy4KCiMj
IyMjIGBrZXlgCgpRdWVyeSBbQ29uc3VsXVtjb25zdWxdIGZvciB0aGUgdmFs
dWUgYXQgdGhlIGdpdmVuIGtleSBwYXRoLiBJZiB0aGUga2V5IGRvZXMgbm90
CmV4aXN0LCBDb25zdWwgVGVtcGxhdGUgd2lsbCBibG9jayByZW5kZXJpbmcg
dW50aWwgdGhlIGtleSBpcyBwcmVzZW50LiBUbyBhdm9pZApibG9ja2luZywg
dXNlIGBrZXlPckRlZmF1bHRgIG9yIGBrZXlFeGlzdHNgLgoKYGBgbGlxdWlk
Cnt7IGtleSAiPFBBVEg+QDxEQVRBQ0VOVEVSPiIgfX0KYGBgCgpUaGUgYDxE
QVRBQ0VOVEVSPmAgYXR0cmlidXRlIGlzIG9wdGlvbmFsOyBpZiBvbWl0dGVk
LCB0aGUgbG9jYWwgZGF0YWNlbnRlciBpcwp1c2VkLgoKRm9yIGV4YW1wbGU6
CgpgYGBsaXF1aWQKe3sga2V5ICJzZXJ2aWNlL3JlZGlzL21heGNvbm5zIiB9
fQpgYGAKCnJlbmRlcnMKCmBgYHRleHQKMTUKYGBgCgojIyMjIyBga2V5RXhp
c3RzYAoKUXVlcnkgW0NvbnN1bF1bY29uc3VsXSBmb3IgdGhlIHZhbHVlIGF0
IHRoZSBnaXZlbiBrZXkgcGF0aC4gSWYgdGhlIGtleSBleGlzdHMsCnRoaXMg
d2lsbCByZXR1cm4gdHJ1ZSwgZmFsc2Ugb3RoZXJ3aXNlLiBVbmxpa2UgYGtl
eWAsIHRoaXMgZnVuY3Rpb24gd2lsbCBub3QKYmxvY2sgaWYgdGhlIGtleSBk
b2VzIG5vdCBleGlzdC4gVGhpcyBpcyB1c2VmdWwgZm9yIGNvbnRyb2xsaW5n
IGZsb3cuCgpgYGBsaXF1aWQKe3sga2V5RXhpc3RzICI8UEFUSD5APERBVEFD
RU5URVI+IiB9fQpgYGAKClRoZSBgPERBVEFDRU5URVI+YCBhdHRyaWJ1dGUg
aXMgb3B0aW9uYWw7IGlmIG9taXR0ZWQsIHRoZSBsb2NhbCBkYXRhY2VudGVy
IGlzCnVzZWQuCgpGb3IgZXhhbXBsZToKCmBgYGxpcXVpZAp7eyBpZiBrZXlF
eGlzdHMgImFwcC9iZXRhX2FjdGl2ZSIgfX0KICAjIC4uLgp7eyBlbHNlIH19
CiAgIyAuLi4Ke3sgZW5kIH19CmBgYAoKIyMjIyMgYGtleU9yRGVmYXVsdGAK
ClF1ZXJ5IFtDb25zdWxdW2NvbnN1bF0gZm9yIHRoZSB2YWx1ZSBhdCB0aGUg
Z2l2ZW4ga2V5IHBhdGguIElmIHRoZSBrZXkgZG9lcyBub3QKZXhpc3QsIHRo
ZSBkZWZhdWx0IHZhbHVlIHdpbGwgYmUgdXNlZCBpbnN0ZWFkLiBVbmxpa2Ug
YGtleWAsIHRoaXMgZnVuY3Rpb24gd2lsbApub3QgYmxvY2sgaWYgdGhlIGtl
eSBkb2VzIG5vdCBleGlzdC4KCmBgYGxpcXVpZAp7eyBrZXlPckRlZmF1bHQg
IjxQQVRIPkA8REFUQUNFTlRFUj4iICI8REVGQVVMVD4iIH19CmBgYAoKVGhl
IGA8REFUQUNFTlRFUj5gIGF0dHJpYnV0ZSBpcyBvcHRpb25hbDsgaWYgb21p
dHRlZCwgdGhlIGxvY2FsIGRhdGFjZW50ZXIgaXMKdXNlZC4KCkZvciBleGFt
cGxlOgoKYGBgbGlxdWlkCnt7IGtleU9yRGVmYXVsdCAic2VydmljZS9yZWRp
cy9tYXhjb25ucyIgIjUiIH19CmBgYAoKcmVuZGVycwoKYGBgdGV4dAo1CmBg
YAoKTm90ZSB0aGF0IENvbnN1bCBUZW1wbGF0ZSB1c2VzIGEgW211bHRpLXBo
YXNlCmV4ZWN1dGlvbl0oI211bHRpLXBoYXNlLWV4ZWN1dGlvbikuIER1cmlu
ZyB0aGUgZmlyc3QgcGhhc2Ugb2YgZXZhbHVhdGlvbiwgQ29uc3VsClRlbXBs
YXRlIHdpbGwgaGF2ZSBubyBkYXRhIGZyb20gQ29uc3VsIGFuZCB0aHVzIHdp
bGwgX2Fsd2F5c18gZmFsbCBiYWNrIHRvIHRoZQpkZWZhdWx0IHZhbHVlLiBT
dWJzZXF1ZW50IHJlYWRzIGZyb20gQ29uc3VsIHdpbGwgcHVsbCBpbiB0aGUg
cmVhbCB2YWx1ZSBmcm9tCkNvbnN1bCAoaWYgdGhlIGtleSBleGlzdHMpIG9u
IHRoZSBuZXh0IHRlbXBsYXRlIHBhc3MuIFRoaXMgaXMgaW1wb3J0YW50IGJl
Y2F1c2UKaXQgbWVhbnMgdGhhdCBDb25zdWwgVGVtcGxhdGUgd2lsbCBuZXZl
ciAiYmxvY2siIHRoZSByZW5kZXJpbmcgb2YgYSB0ZW1wbGF0ZSBkdWUKdG8g
YSBtaXNzaW5nIGtleSBmcm9tIGEgYGtleU9yRGVmYXVsdGAuIEV2ZW4gaWYg
dGhlIGtleSBleGlzdHMsIGlmIENvbnN1bCBoYXMKbm90IHlldCByZXR1cm5l
ZCBkYXRhIGZvciB0aGUga2V5LCB0aGUgZGVmYXVsdCB2YWx1ZSB3aWxsIGJl
IHVzZWQgaW5zdGVhZC4KCiMjIyMjIGBsc2AKClF1ZXJ5IFtDb25zdWxdW2Nv
bnN1bF0gZm9yIGFsbCB0b3AtbGV2ZWwga3YgcGFpcnMgYXQgdGhlIGdpdmVu
IGtleSBwYXRoLgoKYGBgbGlxdWlkCnt7IGxzICI8UEFUSD5APERBVEFDRU5U
RVI+IiB9fQpgYGAKClRoZSBgPERBVEFDRU5URVI+YCBhdHRyaWJ1dGUgaXMg
b3B0aW9uYWw7IGlmIG9taXR0ZWQsIHRoZSBsb2NhbCBkYXRhY2VudGVyIGlz
CnVzZWQuCgpGb3IgZXhhbXBsZToKCmBgYGxpcXVpZAp7eyByYW5nZSBscyAi
c2VydmljZS9yZWRpcyIgfX0Ke3sgLktleSB9fTp7eyAuVmFsdWUgfX17eyBl
bmQgfX0KYGBgCgpyZW5kZXJzCgpgYGB0ZXh0Cm1heGNvbm5zOjE1Cm1pbmNv
bm5zOjUKYGBgCgojIyMjIyBgc2FmZUxzYAoKU2FtZSBhcyBbbHNdKCNscyks
IGJ1dCByZWZ1c2UgdG8gcmVuZGVyIHRlbXBsYXRlLCBpZiB0aGUgS1YgcHJl
Zml4IHF1ZXJ5IHJldHVybiBibGFuay9lbXB0eSBkYXRhLgoKVGhpcyBpcyBl
c3BlY2lhbGx5IHVzZWZ1bCwgZm9yIHJlbmRlcmluZyBtaXNzaW9uIGNyaXRp
Y2FsIGZpbGVzLCB0aGF0IGFyZSBiZWluZyBwb3B1bGF0ZWQgYnkgY29uc3Vs
LXRlbXBsYXRlLgoKRm9yIGV4YW1wbGU6CgpgYGB0ZXh0Ci9yb290Ly5zc2gv
YXV0aG9yaXplZF9rZXlzCi9ldGMvc3lzY29uZmlnL2lwdGFibGVzCmBgYAoK
VXNpbmcgYHNhZmVMc2Agb24gZW1wdHkgcHJlZml4ZXMgd2lsbCByZXN1bHQg
aW4gdGVtcGxhdGUgb3V0cHV0IG5vdCBiZWluZyByZW5kZXJlZCBhdCBhbGwu
CgpUbyBsZWFybiBob3cgYHNhZmVMc2Agd2FzIGJvcm4gc2VlIFtDVC0xMTMx
XShodHRwczovL2dpdGh1Yi5jb20vaGFzaGljb3JwL2NvbnN1bC10ZW1wbGF0
ZS9pc3N1ZXMvMTEzMSkgW0MtMzk3NV0oaHR0cHM6Ly9naXRodWIuY29tL2hh
c2hpY29ycC9jb25zdWwvaXNzdWVzLzM5NzUpIGFuZCBbQ1ItODJdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9oYXNoaWNvcnAvY29uc3VsLXJlcGxpY2F0ZS9pc3N1
ZXMvODIpLgoKIyMjIyMgYG5vZGVgCgpRdWVyeSBbQ29uc3VsXVtjb25zdWxd
IGZvciBhIG5vZGUgaW4gdGhlIGNhdGFsb2cuCgpgYGBsaXF1aWQKe3tub2Rl
ICI8TkFNRT5APERBVEFDRU5URVI+In19CmBgYAoKVGhlIGA8TkFNRT5gIGF0
dHJpYnV0ZSBpcyBvcHRpb25hbDsgaWYgb21pdHRlZCwgdGhlIGxvY2FsIGFn
ZW50IG5vZGUgaXMgdXNlZC4KClRoZSBgPERBVEFDRU5URVI+YCBhdHRyaWJ1
dGUgaXMgb3B0aW9uYWw7IGlmIG9taXR0ZWQsIHRoZSBsb2NhbCBkYXRhY2Vu
dGVyIGlzCnVzZWQuCgpGb3IgZXhhbXBsZToKCmBgYGxpcXVpZAp7eyB3aXRo
IG5vZGUgfX0Ke3sgLk5vZGUuQWRkcmVzcyB9fXt7IGVuZCB9fQpgYGAKCnJl
bmRlcnMKCmBgYHRleHQKMTAuNS4yLjYKYGBgCgpUbyBxdWVyeSBhIGRpZmZl
cmVudCBub2RlOgoKYGBgbGlxdWlkCnt7IHdpdGggbm9kZSAibm9kZTFAZGMy
IiB9fQp7eyAuTm9kZS5BZGRyZXNzIH19e3sgZW5kIH19CmBgYAoKcmVuZGVy
cwoKYGBgdGV4dAoxMC40LjIuNgpgYGAKClRvIGFjY2VzcyBtYXAgZGF0YSBz
dWNoIGFzIGBUYWdnZWRBZGRyZXNzZXNgIG9yIGBNZXRhYCwgdXNlCltHbydz
IHRleHQvdGVtcGxhdGVdW3RleHQtdGVtcGxhdGVdIG1hcCBpbmRleGluZy4K
CiMjIyMjIGBub2Rlc2AKClF1ZXJ5IFtDb25zdWxdW2NvbnN1bF0gZm9yIGFs
bCBub2RlcyBpbiB0aGUgY2F0YWxvZy4KCmBgYGxpcXVpZAp7eyBub2RlcyAi
QDxEQVRBQ0VOVEVSPn48TkVBUj4iIH19CmBgYAoKVGhlIGA8REFUQUNFTlRF
Uj5gIGF0dHJpYnV0ZSBpcyBvcHRpb25hbDsgaWYgb21pdHRlZCwgdGhlIGxv
Y2FsIGRhdGFjZW50ZXIgaXMKdXNlZC4KClRoZSBgPE5FQVI+YCBhdHRyaWJ1
dGUgaXMgb3B0aW9uYWw7IGlmIG9taXR0ZWQsIHJlc3VsdHMgYXJlIHNwZWNp
ZmllZCBpbiBsZXhpY2FsCm9yZGVyLiBJZiBwcm92aWRlZCBhIG5vZGUgbmFt
ZSwgcmVzdWx0cyBhcmUgb3JkZXJlZCBieSBzaG9ydGVzdCByb3VuZC10cmlw
IHRpbWUKdG8gdGhlIHByb3ZpZGVkIG5vZGUuIElmIHByb3ZpZGVkIGBfYWdl
bnRgLCByZXN1bHRzIGFyZSBvcmRlcmVkIGJ5IHNob3J0ZXN0CnJvdW5kLXRy
aXAgdGltZSB0byB0aGUgbG9jYWwgYWdlbnQuCgpGb3IgZXhhbXBsZToKCmBg
YGxpcXVpZAp7eyByYW5nZSBub2RlcyB9fQp7eyAuQWRkcmVzcyB9fXt7IGVu
ZCB9fQpgYGAKCnJlbmRlcnMKCmBgYHRleHQKMTAuNC4yLjEzCjEwLjQ2LjIu
NQpgYGAKClRvIHF1ZXJ5IGEgZGlmZmVyZW50IGRhdGEgY2VudGVyIGFuZCBv
cmRlciBieSBzaG9ydGVzdCB0cmlwIHRpbWUgdG8gb3Vyc2VsdmVzOgoKYGBg
bGlxdWlkCnt7IHJhbmdlIG5vZGVzICJAZGMyfl9hZ2VudCIgfX0Ke3sgLkFk
ZHJlc3MgfX17eyBlbmQgfX0KYGBgCgpUbyBhY2Nlc3MgbWFwIGRhdGEgc3Vj
aCBhcyBgVGFnZ2VkQWRkcmVzc2VzYCBvciBgTWV0YWAsIHVzZQpbR28ncyB0
ZXh0L3RlbXBsYXRlXVt0ZXh0LXRlbXBsYXRlXSBtYXAgaW5kZXhpbmcuCgoj
IyMjIyBgc2VjcmV0YAoKUXVlcnkgW1ZhdWx0XVt2YXVsdF0gZm9yIHRoZSBz
ZWNyZXQgYXQgdGhlIGdpdmVuIHBhdGguCgpgYGBsaXF1aWQKe3sgc2VjcmV0
ICI8UEFUSD4iICI8REFUQT4iIH19CmBgYAoKVGhlIGA8REFUQT5gIGF0dHJp
YnV0ZSBpcyBvcHRpb25hbDsgaWYgb21pdHRlZCwgdGhlIHJlcXVlc3Qgd2ls
bCBiZSBhIGB2YXVsdApyZWFkYCAoSFRUUCBHRVQpIHJlcXVlc3QuIElmIHBy
b3ZpZGVkLCB0aGUgcmVxdWVzdCB3aWxsIGJlIGEgYHZhdWx0IHdyaXRlYCAo
SFRUUApQVVQvUE9TVCkgcmVxdWVzdC4KCkZvciBleGFtcGxlOgoKYGBgbGlx
dWlkCnt7IHdpdGggc2VjcmV0ICJzZWNyZXQvcGFzc3dvcmRzIiB9fQp7eyAu
RGF0YS53aWZpIH19e3sgZW5kIH19CmBgYAoKcmVuZGVycwoKYGBgdGV4dApG
T1JXQVJEU29uZXdvcmQKYGBgCgpUbyBhY2Nlc3MgYSB2ZXJzaW9uZWQgc2Vj
cmV0IHZhbHVlIChmb3IgdGhlIEsvViB2ZXJzaW9uIDIgYmFja2VuZCk6Cgpg
YGBsaXF1aWQKe3sgd2l0aCBzZWNyZXQgInNlY3JldC9wYXNzd29yZHM/dmVy
c2lvbj0xIiB9fQp7eyAuRGF0YS5kYXRhLndpZmkgfX17eyBlbmQgfX0KYGBg
CgpXaGVuIG9taXR0aW5nIHRoZSBgP3ZlcnNpb25gIHBhcmFtZXRlciwgdGhl
IGxhdGVzdCB2ZXJzaW9uIG9mIHRoZSBzZWNyZXQgd2lsbCBiZQpmZXRjaGVk
LiBOb3RlIHRoZSBuZXN0ZWQgYC5EYXRhLmRhdGFgIHN5bnRheCB3aGVuIHJl
ZmVyZW5jaW5nIHRoZSBzZWNyZXQgdmFsdWUuCkZvciBtb3JlIGluZm9ybWF0
aW9uIGFib3V0IHVzaW5nIHRoZSBLL1YgdjIgYmFja2VuZCwgc2VlIHRoZQpb
VmF1bHQgRG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly93d3cudmF1bHRwcm9qZWN0
LmlvL2RvY3Mvc2VjcmV0cy9rdi9rdi12Mi5odG1sKS4KCldoZW4gdXNpbmcg
VmF1bHQgdmVyc2lvbnMgMC4xMC4wLzAuMTAuMSwgdGhlIHNlY3JldCBwYXRo
IHdpbGwgaGF2ZSB0byBiZSBwcmVmaXhlZAp3aXRoICJkYXRhIiwgaS5lLiBg
c2VjcmV0L2RhdGEvcGFzc3dvcmRzYCBmb3IgdGhlIGV4YW1wbGUgYWJvdmUu
IFRoaXMgaXMgbm90Cm5lY2Vzc2FyeSBmb3IgVmF1bHQgdmVyc2lvbnMgYWZ0
ZXIgMC4xMC4xLCBhcyBjb25zdWwtdGVtcGxhdGUgd2lsbCBkZXRlY3QgdGhl
IEtWCmJhY2tlbmQgdmVyc2lvbiBiZWluZyB1c2VkLiBUaGUgdmVyc2lvbiAy
IEtWIGJhY2tlbmQgZGlkIG5vdCBleGlzdCBwcmlvciB0byAwLjEwLjAsCnNv
IHRoZXNlIGFyZSB0aGUgb25seSBhZmZlY3RlZCB2ZXJzaW9ucy4KCkFuIGV4
YW1wbGUgdXNpbmcgd3JpdGUgdG8gZ2VuZXJhdGUgUEtJIGNlcnRpZmljYXRl
czoKCmBgYGxpcXVpZAp7eyB3aXRoIHNlY3JldCAicGtpL2lzc3VlL215LWRv
bWFpbi1kb3QtY29tIiAiY29tbW9uX25hbWU9Zm9vLmV4YW1wbGUuY29tIiB9
fQp7eyAuRGF0YS5jZXJ0aWZpY2F0ZSB9fXt7IGVuZCB9fQpgYGAKClRoZSBw
YXJhbWV0ZXJzIG11c3QgYmUgYGtleT12YWx1ZWAgcGFpcnMsIGFuZCBlYWNo
IHBhaXIgbXVzdCBiZSBpdHMgb3duIGFyZ3VtZW50CnRvIHRoZSBmdW5jdGlv
bjoKClBsZWFzZSBhbHdheXMgY29uc2lkZXIgdGhlIHNlY3VyaXR5IGltcGxp
Y2F0aW9ucyBvZiBoYXZpbmcgdGhlIGNvbnRlbnRzIG9mIGEKc2VjcmV0IGlu
IHBsYWluLXRleHQgb24gZGlzay4gSWYgYW4gYXR0YWNrZXIgaXMgYWJsZSB0
byBnZXQgYWNjZXNzIHRvIHRoZSBmaWxlLAp0aGV5IHdpbGwgaGF2ZSBhY2Nl
c3MgdG8gcGxhaW4tdGV4dCBzZWNyZXRzLgoKUGxlYXNlIG5vdGUgdGhhdCBW
YXVsdCBkb2VzIG5vdCBzdXBwb3J0IGJsb2NraW5nIHF1ZXJpZXMuIEFzIGEg
cmVzdWx0LCBDb25zdWwKVGVtcGxhdGUgd2lsbCBub3QgaW1tZWRpYXRlbHkg
cmVsb2FkIGluIHRoZSBldmVudCBhIHNlY3JldCBpcyBjaGFuZ2VkIGFzIGl0
CmRvZXMgd2l0aCBDb25zdWwncyBrZXktdmFsdWUgc3RvcmUuIENvbnN1bCBU
ZW1wbGF0ZSB3aWxsIHJlbmV3IHRoZSBzZWNyZXQgd2l0aApWYXVsdCdzIFtS
ZW5ld2VyIEFQSV0oaHR0cHM6Ly9nb2RvYy5vcmcvZ2l0aHViLmNvbS9oYXNo
aWNvcnAvdmF1bHQvYXBpI1JlbmV3ZXIpLgpUaGUgUmVuZXcgQVBJIHRyaWVz
IHRvIHVzZSBtb3N0IG9mIHRoZSB0aW1lIHRoZSBzZWNyZXQgaXMgZ29vZCwg
cmVuZXdpbmcgYXQKYXJvdW5kIDkwJSBvZiB0aGUgbGVhc2UgdGltZSAoYXMg
c2V0IGJ5IFZhdWx0KS4KCkFsc28gY29uc2lkZXIgZW5hYmxpbmcgYGVycm9y
X29uX21pc3Npbmdfa2V5YCB3aGVuIHdvcmtpbmcgd2l0aCB0ZW1wbGF0ZXMg
dGhhdAp3aWxsIGludGVyYWN0IHdpdGggVmF1bHQuIEJ5IGRlZmF1bHQsIENv
bnN1bCBUZW1wbGF0ZSB1c2VzIEdvJ3MgdGVtcGxhdGluZwpsYW5ndWFnZS4g
V2hlbiBhY2Nlc3NpbmcgYSBzdHJ1Y3QgZmllbGQgb3IgbWFwIGtleSB0aGF0
IGRvZXMgbm90IGV4aXN0LCBpdApkZWZhdWx0cyB0byBwcmludGluZyBgPG5v
IHZhbHVlPmAuIFRoaXMgbWF5IG5vdCBiZSB0aGUgZGVzaXJlZCBiZWhhdmlv
ciwKZXNwZWNpYWxseSB3aGVuIHdvcmtpbmcgd2l0aCBwYXNzd29yZHMgb3Ig
b3RoZXIgZGF0YS4gQXMgc3VjaCwgaXQgaXMgcmVjb21tZW5kZWQKeW91IHNl
dDoKCmBgYGhjbAp0ZW1wbGF0ZSB7CiAgZXJyb3Jfb25fbWlzc2luZ19rZXkg
PSB0cnVlCn0KYGBgCgpZb3UgY2FuIGFsc28gZ3VhcmQgYWdhaW5zdCBlbXB0
eSB2YWx1ZXMgdXNpbmcgYGlmYCBvciBgd2l0aGAgYmxvY2tzLgoKYGBgbGlx
dWlkCnt7IHdpdGggc2VjcmV0ICJzZWNyZXQvZm9vIn19Cnt7IGlmIC5EYXRh
LnBhc3N3b3JkIH19CnBhc3N3b3JkID0gInt7IC5EYXRhLnBhc3N3b3JkIH19
Igp7eyBlbmQgfX0Ke3sgZW5kIH19CmBgYAoKIyMjIyMgYHNlY3JldHNgCgpR
dWVyeSBbVmF1bHRdW3ZhdWx0XSBmb3IgdGhlIGxpc3Qgb2Ygc2VjcmV0cyBh
dCB0aGUgZ2l2ZW4gcGF0aC4gTm90IGFsbAplbmRwb2ludHMgc3VwcG9ydCBs
aXN0aW5nLgoKYGBgbGlxdWlkCnt7IHNlY3JldHMgIjxQQVRIPiIgfX0KYGBg
CgpGb3IgZXhhbXBsZToKCmBgYGxpcXVpZAp7eyByYW5nZSBzZWNyZXRzICJz
ZWNyZXQvIiB9fQp7eyAuIH19e3sgZW5kIH19CmBgYAoKcmVuZGVycwoKYGBg
dGV4dApiYXIKZm9vCnppcApgYGAKClRvIGl0ZXJhdGUgYW5kIGxpc3Qgb3Zl
ciBldmVyeSBzZWNyZXQgaW4gdGhlIGdlbmVyaWMgc2VjcmV0IGJhY2tlbmQg
aW4gVmF1bHQ6CgpgYGBsaXF1aWQKe3sgcmFuZ2Ugc2VjcmV0cyAic2VjcmV0
LyIgfX0Ke3sgd2l0aCBzZWNyZXQgKHByaW50ZiAic2VjcmV0LyVzIiAuKSB9
fXt7IHJhbmdlICRrLCAkdiA6PSAuRGF0YSB9fQp7eyAkayB9fToge3sgJHYg
fX0Ke3sgZW5kIH19e3sgZW5kIH19e3sgZW5kIH19CmBgYAoKWW91IHNob3Vs
ZCBwcm9iYWJseSBuZXZlciBkbyB0aGlzLgoKUGxlYXNlIGFsc28gbm90ZSB0
aGF0IFZhdWx0IGRvZXMgbm90IHN1cHBvcnQKYmxvY2tpbmcgcXVlcmllcy4g
VG8gdW5kZXJzdGFuZCB0aGUgaW1wbGljYXRpb25zLCBwbGVhc2UgcmVhZCB0
aGUgbm90ZSBhdCB0aGUKZW5kIG9mIHRoZSBgc2VjcmV0YCBmdW5jdGlvbi4K
CiMjIyMjIGBzZXJ2aWNlYAoKUXVlcnkgW0NvbnN1bF1bY29uc3VsXSBmb3Ig
c2VydmljZXMgYmFzZWQgb24gdGhlaXIgaGVhbHRoLgoKYGBgbGlxdWlkCnt7
IHNlcnZpY2UgIjxUQUc+LjxOQU1FPkA8REFUQUNFTlRFUj5+PE5FQVI+fDxG
SUxURVI+IiB9fQpgYGAKClRoZSBgPFRBRz5gIGF0dHJpYnV0ZSBpcyBvcHRp
b25hbDsgaWYgb21pdHRlZCwgYWxsIG5vZGVzIHdpbGwgYmUgcXVlcmllZC4K
ClRoZSBgPERBVEFDRU5URVI+YCBhdHRyaWJ1dGUgaXMgb3B0aW9uYWw7IGlm
IG9taXR0ZWQsIHRoZSBsb2NhbCBkYXRhY2VudGVyIGlzCnVzZWQuCgpUaGUg
YDxORUFSPmAgYXR0cmlidXRlIGlzIG9wdGlvbmFsOyBpZiBvbWl0dGVkLCBy
ZXN1bHRzIGFyZSBzcGVjaWZpZWQgaW4gbGV4aWNhbApvcmRlci4gSWYgcHJv
dmlkZWQgYSBub2RlIG5hbWUsIHJlc3VsdHMgYXJlIG9yZGVyZWQgYnkgc2hv
cnRlc3Qgcm91bmQtdHJpcCB0aW1lCnRvIHRoZSBwcm92aWRlZCBub2RlLiBJ
ZiBwcm92aWRlZCBgX2FnZW50YCwgcmVzdWx0cyBhcmUgb3JkZXJlZCBieSBz
aG9ydGVzdApyb3VuZC10cmlwIHRpbWUgdG8gdGhlIGxvY2FsIGFnZW50LgoK
VGhlIGA8RklMVEVSPmAgYXR0cmlidXRlIGlzIG9wdGlvbmFsOyBpZiBvbWl0
dGVkLCBvbmx5IGhlYWx0aCBzZXJ2aWNlcyBhcmUKcmV0dXJuZWQuIFByb3Zp
ZGluZyBhIGZpbHRlciBhbGxvd3MgZm9yIGNsaWVudC1zaWRlIGZpbHRlcmlu
ZyBvZiBzZXJ2aWNlcy4KCkZvciBleGFtcGxlOgoKVGhlIGV4YW1wbGUgYWJv
dmUgaXMgcXVlcnlpbmcgQ29uc3VsIGZvciBoZWFsdGh5ICJ3ZWIiIHNlcnZp
Y2VzLCBpbiB0aGUgImVhc3QtYXdzIiBkYXRhIGNlbnRlci4gVGhlIHRhZyBh
bmQgZGF0YSBjZW50ZXIgYXR0cmlidXRlcyBhcmUgb3B0aW9uYWwuIFRvIHF1
ZXJ5IGFsbCBub2RlcyBvZiB0aGUgIndlYiIgc2VydmljZSAocmVnYXJkbGVz
cyBvZiB0YWcpIGZvciB0aGUgY3VycmVudCBkYXRhIGNlbnRlcjoKCmBgYGxp
cXVpZAp7eyByYW5nZSBzZXJ2aWNlICJ3ZWIiIH19CnNlcnZlciB7eyAuTmFt
ZSB9fSB7eyAuQWRkcmVzcyB9fTp7eyAuUG9ydCB9fXt7IGVuZCB9fQpgYGAK
CnJlbmRlcnMgdGhlIElQIGFkZHJlc3NlcyBvZiBhbGwgX2hlYWx0aHlfIG5v
ZGVzIHdpdGggYSBsb2dpY2FsIHNlcnZpY2UgbmFtZWQKIndlYiI6CgpgYGB0
ZXh0CnNlcnZlciB3ZWIwMSAxMC41LjIuNDU6MjQ5MgpzZXJ2ZXIgd2ViMDIg
MTAuMi42LjYxOjI5MDQKYGBgCgpUbyBhY2Nlc3MgbWFwIGRhdGEgc3VjaCBh
cyBgTm9kZVRhZ2dlZEFkZHJlc3Nlc2Agb3IgYE5vZGVNZXRhYCwgdXNlCltH
bydzIHRleHQvdGVtcGxhdGVdW3RleHQtdGVtcGxhdGVdIG1hcCBpbmRleGlu
Zy4KCkJ5IGRlZmF1bHQgb25seSBoZWFsdGh5IHNlcnZpY2VzIGFyZSByZXR1
cm5lZC4gVG8gbGlzdCBhbGwgc2VydmljZXMsIHBhc3MgdGhlCiJhbnkiIGZp
bHRlcjoKCmBgYGxpcXVpZAp7eyBzZXJ2aWNlICJ3ZWJ8YW55IiB9fQpgYGAK
ClRoaXMgd2lsbCByZXR1cm4gYWxsIHNlcnZpY2VzIHJlZ2lzdGVyZWQgdG8g
dGhlIGFnZW50LCByZWdhcmRsZXNzIG9mIHRoZWlyCnN0YXR1cy4KClRvIGZp
bHRlciBzZXJ2aWNlcyBieSBhIHNwZWNpZmljIHNldCBvZiBoZWFsdGhzLCBz
cGVjaWZ5IGEgY29tbWEtc2VwYXJhdGVkIGxpc3QKb2YgaGVhbHRoIHN0YXR1
c2VzOgoKYGBgbGlxdWlkCnt7IHNlcnZpY2UgIndlYnxwYXNzaW5nLHdhcm5p
bmciIH19CmBgYAoKVGhpcyB3aWxsIHJldHVybnMgc2VydmljZXMgd2hpY2gg
YXJlIGRlZW1lZCAicGFzc2luZyIgb3IgIndhcm5pbmciIGFjY29yZGluZyB0
bwp0aGVpciBub2RlIGFuZCBzZXJ2aWNlLWxldmVsIGNoZWNrcyBkZWZpbmVk
IGluIENvbnN1bC4gUGxlYXNlIG5vdGUgdGhhdCB0aGUKY29tbWEgaW1wbGll
cyBhbiAib3IiLCBub3QgYW4gImFuZCIuCgoqKk5vdGU6KiogRHVlIHRvIHRo
ZSB1c2Ugb2YgZG90IGAuYCB0byBkZWxpbWl0IFRBRywgdGhlIGBzZXJ2aWNl
YCBjb21tYW5kIHdpbGwKbm90IHJlY29nbml6ZSBzZXJ2aWNlIG5hbWVzIGNv
bnRhaW5pbmcgZG90cy4KCioqTm90ZToqKiBUaGVyZSBpcyBhbiBhcmNoaXRl
Y3R1cmFsIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgZm9sbG93aW5nOgoKYGBg
bGlxdWlkCnt7IHNlcnZpY2UgIndlYiIgfX0Ke3sgc2VydmljZSAid2VifHBh
c3NpbmciIH19CmBgYAoKVGhlIGZvcm1lciB3aWxsIHJldHVybiBhbGwgc2Vy
dmljZXMgd2hpY2ggQ29uc3VsIGNvbnNpZGVycyAiaGVhbHRoeSIgYW5kCnBh
c3NpbmcuIFRoZSBsYXR0ZXIgd2lsbCByZXR1cm4gYWxsIHNlcnZpY2VzIHJl
Z2lzdGVyZWQgd2l0aCB0aGUgQ29uc3VsIGFnZW50CmFuZCBwZXJmb3JtIGNs
aWVudC1zaWRlIGZpbHRlcmluZy4gQXMgYSBnZW5lcmFsIHJ1bGUsIGRvIG5v
dCB1c2UgdGhlICJwYXNzaW5nIgphcmd1bWVudCBhbG9uZSBpZiB5b3Ugd2Fu
dCBvbmx5IGhlYWx0aHkgc2VydmljZXMgLSBzaW1wbHkgb21pdCB0aGUgc2Vj
b25kCmFyZ3VtZW50IGluc3RlYWQuCgoKIyMjIyMgYHNlcnZpY2VzYAoKUXVl
cnkgW0NvbnN1bF1bY29uc3VsXSBmb3IgYWxsIHNlcnZpY2VzIGluIHRoZSBj
YXRhbG9nLgoKYGBgbGlxdWlkCnt7IHNlcnZpY2VzICJAPERBVEFDRU5URVI+
IiB9fQpgYGAKClRoZSBgPERBVEFDRU5URVI+YCBhdHRyaWJ1dGUgaXMgb3B0
aW9uYWw7IGlmIG9taXR0ZWQsIHRoZSBsb2NhbCBkYXRhY2VudGVyIGlzCnVz
ZWQuCgpGb3IgZXhhbXBsZToKCmBgYGxpcXVpZAp7eyByYW5nZSBzZXJ2aWNl
cyB9fQp7eyAuTmFtZSB9fToge3sgLlRhZ3MgfCBqb2luICIsIiB9fXt7IGVu
ZCB9fQpgYGAKCnJlbmRlcnMKCmBgYHRleHQKbm9kZTAxIHRhZzEsdGFnMix0
YWczCmBgYAoKIyMjIyMgYHRyZWVgCgpRdWVyeSBbQ29uc3VsXVtjb25zdWxd
IGZvciBhbGwga3YgcGFpcnMgYXQgdGhlIGdpdmVuIGtleSBwYXRoLgoKYGBg
bGlxdWlkCnt7IHRyZWUgIjxQQVRIPkA8REFUQUNFTlRFUj4iIH19CmBgYAoK
VGhlIGA8REFUQUNFTlRFUj5gIGF0dHJpYnV0ZSBpcyBvcHRpb25hbDsgaWYg
b21pdHRlZCwgdGhlIGxvY2FsIGRhdGFjZW50ZXIgaXMKdXNlZC4KCkZvciBl
eGFtcGxlOgoKYGBgbGlxdWlkCnt7IHJhbmdlIHRyZWUgInNlcnZpY2UvcmVk
aXMiIH19Cnt7IC5LZXkgfX06e3sgLlZhbHVlIH19e3sgZW5kIH19CmBgYApy
ZW5kZXJzCgpgYGB0ZXh0Cm1pbmNvbm5zIDIKbWF4Y29ubnMgMTIKbmVzdGVk
L2NvbmZpZy92YWx1ZSAidmFsdWUiCmBgYAoKVW5saWtlIGBsc2AsIGB0cmVl
YCByZXR1cm5zICoqYWxsKioga2V5cyB1bmRlciB0aGUgcHJlZml4LCBqdXN0
IGxpa2UgdGhlIFVuaXgKYHRyZWVgIGNvbW1hbmQuCgojIyMjIyBgc2FmZVRy
ZWVgCgpTYW1lIGFzIFt0cmVlXSgjdHJlZSksIGJ1dCByZWZ1c2UgdG8gcmVu
ZGVyIHRlbXBsYXRlLCBpZiB0aGUgS1YgcHJlZml4IHF1ZXJ5IHJldHVybiBi
bGFuay9lbXB0eSBkYXRhLgoKVGhpcyBpcyBlc3BlY2lhbGx5IHVzZWZ1bCwg
Zm9yIHJlbmRlcmluZyBtaXNzaW9uIGNyaXRpY2FsIGZpbGVzLCB0aGF0IGFy
ZSBiZWluZyBwb3B1bGF0ZWQgYnkgY29uc3VsLXRlbXBsYXRlLgoKRm9yIGV4
YW1wbGU6CgpgYGB0ZXh0Ci9yb290Ly5zc2gvYXV0aG9yaXplZF9rZXlzCi9l
dGMvc3lzY29uZmlnL2lwdGFibGVzCmBgYAoKVXNpbmcgYHNhZmVUcmVlYCBv
biBlbXB0eSBwcmVmaXhlcyB3aWxsIHJlc3VsdCBpbiB0ZW1wbGF0ZSBvdXRw
dXQgbm90IGJlaW5nIHJlbmRlcmVkIGF0IGFsbC4KClRvIGxlYXJuIGhvdyBg
c2FmZVRyZWVgIHdhcyBib3JuIHNlZSBbQ1QtMTEzMV0oaHR0cHM6Ly9naXRo
dWIuY29tL2hhc2hpY29ycC9jb25zdWwtdGVtcGxhdGUvaXNzdWVzLzExMzEp
IFtDLTM5NzVdKGh0dHBzOi8vZ2l0aHViLmNvbS9oYXNoaWNvcnAvY29uc3Vs
L2lzc3Vlcy8zOTc1KSBhbmQgW0NSLTgyXShodHRwczovL2dpdGh1Yi5jb20v
aGFzaGljb3JwL2NvbnN1bC1yZXBsaWNhdGUvaXNzdWVzLzgyKS4KCi0tLQoK
IyMjIyBTY3JhdGNoCgpUaGUgc2NyYXRjaHBhZCAob3IgInNjcmF0Y2giIGZv
ciBzaG9ydCkgaXMgYXZhaWxhYmxlIHdpdGhpbiB0aGUgY29udGV4dCBvZiBh
CnRlbXBsYXRlIHRvIHN0b3JlIHRlbXBvcmFyeSBkYXRhIG9yIGNvbXB1dGF0
aW9ucy4gU2NyYXRjaCBkYXRhIGlzIG5vdCBzaGFyZWQKYmV0d2VlbiB0ZW1w
bGF0ZXMgYW5kIGlzIG5vdCBjYWNoZWQgYmV0d2VlbiBpbnZvY2F0aW9ucy4K
CiMjIyMjIGBzY3JhdGNoLktleWAKClJldHVybnMgYSBib29sZWFuIGlmIGRh
dGEgZXhpc3RzIGluIHRoZSBzY3JhdGNocGFkIGF0IHRoZSBuYW1lZCBrZXku
IEV2ZW4gaWYgdGhlCmRhdGEgYXQgdGhhdCBrZXkgaXMgIm5pbCIsIHRoaXMg
c3RpbGwgcmV0dXJucyB0cnVlLgoKYGBgbGlxdWlkCnt7IHNjcmF0Y2guS2V5
ICJmb28iIH19CmBgYAoKIyMjIyMgYHNjcmF0Y2guR2V0YAoKUmV0dXJucyB0
aGUgdmFsdWUgaW4gdGhlIHNjcmF0Y2hwYWQgYXQgdGhlIG5hbWVkIGtleS4g
SWYgdGhlIGRhdGEgZG9lcyBub3QKZXhpc3QsIHRoaXMgd2lsbCByZXR1cm4g
Im5pbCIuCgpgYGBsaXF1aWQKe3sgc2NyYXRjaC5HZXQgImZvbyIgfX0KYGBg
CgojIyMjIyBgc2NyYXRjaC5TZXRgCgpTYXZlcyB0aGUgZ2l2ZW4gdmFsdWUg
YXQgdGhlIGdpdmVuIGtleS4gSWYgZGF0YSBhbHJlYWR5IGV4aXN0cyBhdCB0
aGF0IGtleSwgaXQKaXMgb3ZlcndyaXR0ZW4uCgpgYGBsaXF1aWQKe3sgc2Ny
YXRjaC5TZXQgImZvbyIgImJhciIgfX0KYGBgCgojIyMjIyBgc2NyYXRjaC5T
ZXRYYAoKVGhpcyBiZWhhdmVzIGV4YWN0bHkgdGhlIHNhbWUgYXMgYFNldGAs
IGJ1dCBkb2VzIG5vdCBvdmVyd3JpdGUgaWYgdGhlIHZhbHVlCmFscmVhZHkg
ZXhpc3RzLgoKYGBgbGlxdWlkCnt7IHNjcmF0Y2guU2V0WCAiZm9vIiAiYmFy
IiB9fQpgYGAKCiMjIyMjIGBzY3JhdGNoLk1hcFNldGAKClNhdmVzIGEgdmFs
dWUgaW4gYSBuYW1lZCBrZXkgaW4gdGhlIG1hcC4gSWYgZGF0YSBhbHJlYWR5
IGV4aXN0cyBhdCB0aGF0IGtleSwgaXQKaXMgb3ZlcndyaXR0ZW4uCgpgYGBs
aXF1aWQKe3sgc2NyYXRjaC5NYXBTZXQgInZhcnMiICJmb28iICJiYXIiIH19
CmBgYAoKIyMjIyMgYHNjcmF0Y2guTWFwU2V0WGAKClRoaXMgYmVoYXZlcyBl
eGFjdGx5IHRoZSBzYW1lIGFzIGBNYXBTZXRgLCBidXQgZG9lcyBub3Qgb3Zl
cndyaXRlIGlmIHRoZSB2YWx1ZQphbHJlYWR5IGV4aXN0cy4KCmBgYGxpcXVp
ZAp7eyBzY3JhdGNoLk1hcFNldFggInZhcnMiICJmb28iICJiYXIiIH19CmBg
YAoKIyMjIyMgYHNjcmF0Y2guTWFwVmFsdWVzYAoKUmV0dXJucyBhIHNvcnRl
ZCBsaXN0IChieSBrZXkpIG9mIGFsbCB2YWx1ZXMgaW4gdGhlIG5hbWVkIG1h
cC4KCmBgYGxpcXVpZAp7eyBzY3JhdGNoLk1hcFZhbHVlcyAidmFycyIgfX0K
YGBgCgotLS0KCiMjIyMgSGVscGVyIEZ1bmN0aW9ucwoKVW5saWtlIEFQSSBm
dW5jdGlvbnMsIGhlbHBlciBmdW5jdGlvbnMgZG8gbm90IHF1ZXJ5IHJlbW90
ZSBzZXJ2aWNlcy4gVGhlc2UKZnVuY3Rpb25zIGFyZSB1c2VmdWwgZm9yIHBh
cnNpbmcgZGF0YSwgZm9ybWF0dGluZyBkYXRhLCBwZXJmb3JtaW5nIG1hdGgs
IGV0Yy4KCiMjIyMjIGBiYXNlNjREZWNvZGVgCgpBY2NlcHRzIGEgYmFzZTY0
LWVuY29kZWQgc3RyaW5nIGFuZCByZXR1cm5zIHRoZSBkZWNvZGVkIHJlc3Vs
dCwgb3IgYW4gZXJyb3IgaWYKdGhlIGdpdmVuIHN0cmluZyBpcyBub3QgYSB2
YWxpZCBiYXNlNjQgc3RyaW5nLgoKYGBgbGlxdWlkCnt7IGJhc2U2NERlY29k
ZSAiYUdWc2JHOD0iIH19CmBgYAoKcmVuZGVycwoKYGBgdGV4dApoZWxsbwpg
YGAKCiMjIyMjIGBiYXNlNjRFbmNvZGVgCgpBY2NlcHRzIGEgc3RyaW5nIGFu
ZCByZXR1cm5zIGEgYmFzZTY0LWVuY29kZWQgc3RyaW5nLgoKYGBgbGlxdWlk
Cnt7IGJhc2U2NEVuY29kZSAiaGVsbG8iIH19CmBgYAoKcmVuZGVycwoKYGBg
dGV4dAphR1ZzYkc4PQpgYGAKCiMjIyMjIGBiYXNlNjRVUkxEZWNvZGVgCgpB
Y2NlcHRzIGEgYmFzZTY0LWVuY29kZWQgVVJMLXNhZmUgc3RyaW5nIGFuZCBy
ZXR1cm5zIHRoZSBkZWNvZGVkIHJlc3VsdCwgb3IgYW4KZXJyb3IgaWYgdGhl
IGdpdmVuIHN0cmluZyBpcyBub3QgYSB2YWxpZCBiYXNlNjQgVVJMLXNhZmUg
c3RyaW5nLgoKYGBgbGlxdWlkCnt7IGJhc2U2NFVSTERlY29kZSAiYUdWc2JH
OD0iIH19CmBgYAoKcmVuZGVycwoKYGBgdGV4dApoZWxsbwpgYGAKCiMjIyMj
IGBiYXNlNjRVUkxFbmNvZGVgCgpBY2NlcHRzIGEgc3RyaW5nIGFuZCByZXR1
cm5zIGEgYmFzZS02NCBlbmNvZGVkIFVSTC1zYWZlIHN0cmluZy4KCmBgYGxp
cXVpZAp7eyBiYXNlNjRFbmNvZGUgImhlbGxvIiB9fQpgYGAKCnJlbmRlcnMK
CmBgYHRleHQKYUdWc2JHOD0KYGBgCgojIyMjIyBgYnlLZXlgCgpBY2NlcHRz
IGEgbGlzdCBvZiBwYWlycyByZXR1cm5lZCBmcm9tIGEgW2B0cmVlYF0oI3Ry
ZWUpIGNhbGwgYW5kIGNyZWF0ZXMgYSBtYXAgdGhhdCBncm91cHMgcGFpcnMg
YnkgdGhlaXIgdG9wLWxldmVsIGRpcmVjdG9yeS4KCkZvciBleGFtcGxlOgoK
YGBgdGV4dApncm91cHMvZWxhc3RpY3NlYXJjaC9lczEKZ3JvdXBzL2VsYXN0
aWNzZWFyY2gvZXMyCmdyb3Vwcy9lbGFzdGljc2VhcmNoL2VzMwpzZXJ2aWNl
cy9lbGFzdGljc2VhcmNoL2NoZWNrX2VsYXN0aWNzZWFyY2gKc2VydmljZXMv
ZWxhc3RpY3NlYXJjaC9jaGVja19pbmRleGVzCmBgYAoKd2l0aCB0aGUgZm9s
bG93aW5nIHRlbXBsYXRlCgpgYGBsaXF1aWQKe3sgcmFuZ2UgJGtleSwgJHBh
aXJzIDo9IHRyZWUgImdyb3VwcyIgfCBieUtleSB9fXt7ICRrZXkgfX06Cnt7
IHJhbmdlICRwYWlyIDo9ICRwYWlycyB9fSAge3sgLktleSB9fT17eyAuVmFs
dWUgfX0Ke3sgZW5kIH19e3sgZW5kIH19CmBgYAoKcmVuZGVycwoKYGBgdGV4
dAplbGFzdGljc2VhcmNoOgogIGVzMT0xCiAgZXMyPTEKICBlczM9MQpgYGAK
Ck5vdGUgdGhhdCB0aGUgdG9wLW1vc3Qga2V5IGlzIHN0cmlwcGVkIGZyb20g
dGhlIEtleSB2YWx1ZS4gS2V5cyB0aGF0IGhhdmUgbm8KcHJlZml4IGFmdGVy
IHN0cmlwcGluZyBhcmUgcmVtb3ZlZCBmcm9tIHRoZSBsaXN0LgoKVGhlIHJl
c3VsdGluZyBwYWlycyBhcmUga2V5ZWQgYXMgYSBtYXAsIHNvIGl0IGlzIHBv
c3NpYmxlIHRvIGxvb2sgdXAgYSBzaW5nbGUKdmFsdWUgYnkga2V5OgoKYGBg
bGlxdWlkCnt7ICR3ZWlnaHRzIDo9IHRyZWUgIndlaWdodHMiIH19Cnt7IHJh
bmdlIHNlcnZpY2UgInJlbGVhc2Uud2ViIiB9fQogIHt7ICR3ZWlnaHQgOj0g
b3IgKGluZGV4ICR3ZWlnaHRzIC5Ob2RlKSAxMDAgfX0KICBzZXJ2ZXIge3sg
Lk5vZGUgfX0ge3sgLkFkZHJlc3MgfX06e3sgLlBvcnQgfX0gd2VpZ2h0IHt7
ICR3ZWlnaHQgfX17eyBlbmQgfX0KYGBgCgojIyMjIyBgYnlUYWdgCgpUYWtl
cyB0aGUgbGlzdCBvZiBzZXJ2aWNlcyByZXR1cm5lZCBieSB0aGUgW2BzZXJ2
aWNlYF0oI3NlcnZpY2UpIG9yCltgc2VydmljZXNgXSgjc2VydmljZXMpIGZ1
bmN0aW9uIGFuZCBjcmVhdGVzIGEgbWFwIHRoYXQgZ3JvdXBzIHNlcnZpY2Vz
IGJ5IHRhZy4KCmBgYGxpcXVpZAp7eyByYW5nZSAkdGFnLCAkc2VydmljZXMg
Oj0gc2VydmljZSAid2ViIiB8IGJ5VGFnIH19e3sgJHRhZyB9fQp7eyByYW5n
ZSAkc2VydmljZXMgfX0gc2VydmVyIHt7IC5OYW1lIH19IHt7IC5BZGRyZXNz
IH19Ont7IC5Qb3J0IH19Cnt7IGVuZCB9fXt7IGVuZCB9fQpgYGAKCiMjIyMj
IGBieU1ldGFgCgpUYWtlcyBhIGxpc3Qgb2Ygc2VydmljZXMgcmV0dXJuZWQg
YnkgdGhlIFtgc2VydmljZWBdKCNzZXJ2aWNlKSBvcgpbYHNlcnZpY2VzYF0o
I3NlcnZpY2VzKSBhbmQgcmV0dXJucyBhIG1hcCB0aGF0IGdyb3VwcyBzZXJ2
aWNlcyBieSBTZXJ2aWNlTWV0YSB2YWx1ZXMuCk11bHRpcGxlIHNlcnZpY2Ug
bWV0YSBrZXlzIGNhbiBiZSBwYXNzZWQgYXMgYSBjb21tYSBzZXBhcmF0ZWQg
c3RyaW5nLiBgfGludGAgY2FuIGJlIGFkZGVkIHRvCmEgbWV0YSBrZXkgdG8g
Y29udmVydCBudW1iZXJzIGZyb20gc2VydmljZSBtZXRhIHZhbHVlcyB0byBw
YWRkZWQgbnVtYmVycyBpbiBgcHJpbnRmICIlMDVkIiAlIHZhbHVlYApmb3Jt
YXQgKHVzZWZ1bCBmb3Igc29ydGluZyBhcyBHbyBUZW1wbGF0ZSBzb3J0cyBt
YXBzIGJ5IGtleXMpLgoKKipFeGFtcGxlKio6CgpJZiB3ZSBoYXZlIHRoZSBm
b2xsb3dpbmcgc2VydmljZXMgcmVnaXN0ZXJlZCBpbiBDb25zdWw6CgpgYGBq
c29uCnsKICAiU2VydmljZXMiOiBbCiAgICAgewogICAgICAgIklEIjogInJl
ZGlzLWRldi0xIiwKICAgICAgICJOYW1lIjogInJlZGlzIiwKICAgICAgICJT
ZXJ2aWNlTWV0YSI6IHsKICAgICAgICAgImVudmlyb25tZW50IjogImRldiIs
CiAgICAgICAgICJzaGFyZF9udW1iZXIiOiAiMSIKICAgICAgIH0sCiAgICAg
ICAuLi4KICAgICB9LAogICAgIHsKICAgICAgICJJRCI6ICJyZWRpcy1wcm9k
LTEiLAogICAgICAgIk5hbWUiOiAicmVkaXMiLAogICAgICAgIlNlcnZpY2VN
ZXRhIjogewogICAgICAgICAiZW52aXJvbm1lbnQiOiAicHJvZCIsCiAgICAg
ICAgICJzaGFyZF9udW1iZXIiOiAiMSIKICAgICAgIH0sCiAgICAgICAuLi4K
ICAgICB9LAogICAgIHsKICAgICAgICJJRCI6ICJyZWRpcy1wcm9kLTIiLAog
ICAgICAgIk5hbWUiOiAicmVkaXMiLAogICAgICAgIlNlcnZpY2VNZXRhIjog
ewogICAgICAgICAiZW52aXJvbm1lbnQiOiAicHJvZCIsCiAgICAgICAgICJz
aGFyZF9udW1iZXIiOiAiMiIsCiAgICAgICB9LAogICAgICAgLi4uCiAgICAg
fQogICBdCn0KYGBgCgpgYGBsaXF1aWQKe3sgc2VydmljZSAicmVkaXN8YW55
IiB8IGJ5TWV0YSAiZW52aXJvbm1lbnQsc2hhcmRfbnVtYmVyfGludCIgfCB0
b0pTT04gfX0KYGBgCgpUaGUgY29kZSBhYm92ZSB3aWxsIHByb2R1Y2UgYSBt
YXAgb2Ygc2VydmljZXMgZ3JvdXBlZCBieSBtZXRhOgoKYGBganNvbgp7CiAg
ImRldl8wMDAwMSI6IFsKICAgIHsKICAgICAgIklEIjogInJlZGlzLWRldi0x
IiwKICAgICAgLi4uCiAgICB9CiAgXSwKICAicHJvZF8wMDAwMSI6IFsKICAg
IHsKICAgICAgIklEIjogInJlZGlzLXByb2QtMSIsCiAgICAgIC4uLgogICAg
fQogIF0sCiAgInByb2RfMDAwMDIiOiBbCiAgICB7CiAgICAgICJJRCI6ICJy
ZWRpcy1wcm9kLTIiLAogICAgICAuLi4KICAgIH0KICBdCn0KYGBgCgojIyMj
IyBgY29udGFpbnNgCgpEZXRlcm1pbmVzIGlmIGEgbmVlZGxlIGlzIHdpdGhp
biBhbiBpdGVyYWJsZSBlbGVtZW50LgoKYGBgbGlxdWlkCnt7IGlmIC5UYWdz
IHwgY29udGFpbnMgInByb2R1Y3Rpb24iIH19CiMgLi4uCnt7IGVuZCB9fQpg
YGAKCiMjIyMjIGBjb250YWluc0FsbGAKClJldHVybnMgYHRydWVgIGlmIGFs
bCBuZWVkbGVzIGFyZSB3aXRoaW4gYW4gaXRlcmFibGUgZWxlbWVudCwgb3Ig
YGZhbHNlYApvdGhlcndpc2UuIFJldHVybnMgYHRydWVgIGlmIHRoZSBsaXN0
IG9mIG5lZWRsZXMgaXMgZW1wdHkuCgpgYGBsaXF1aWQKe3sgaWYgY29udGFp
bnNBbGwgJHJlcXVpcmVkVGFncyAuVGFncyB9fQojIC4uLgp7eyBlbmQgfX0K
YGBgCgojIyMjIyBgY29udGFpbnNBbnlgCgpSZXR1cm5zIGB0cnVlYCBpZiBh
bnkgbmVlZGxlIGlzIHdpdGhpbiBhbiBpdGVyYWJsZSBlbGVtZW50LCBvciBg
ZmFsc2VgCm90aGVyd2lzZS4gUmV0dXJucyBgZmFsc2VgIGlmIHRoZSBsaXN0
IG9mIG5lZWRsZXMgaXMgZW1wdHkuCgpgYGBsaXF1aWQKe3sgaWYgY29udGFp
bnNBbnkgJGFjY2VwdGFibGVUYWdzIC5UYWdzIH19CiMgLi4uCnt7IGVuZCB9
fQpgYGAKCiMjIyMjIGBjb250YWluc05vbmVgCgpSZXR1cm5zIGB0cnVlYCBp
ZiBubyBuZWVkbGVzIGFyZSB3aXRoaW4gYW4gaXRlcmFibGUgZWxlbWVudCwg
b3IgYGZhbHNlYApvdGhlcndpc2UuIFJldHVybnMgYHRydWVgIGlmIHRoZSBs
aXN0IG9mIG5lZWRsZXMgaXMgZW1wdHkuCgpgYGBsaXF1aWQKe3sgaWYgY29u
dGFpbnNOb25lICRmb3JiaWRkZW5UYWdzIC5UYWdzIH19CiMgLi4uCnt7IGVu
ZCB9fQpgYGAKCiMjIyMjIGBjb250YWluc05vdEFsbGAKClJldHVybnMgYHRy
dWVgIGlmIHNvbWUgbmVlZGxlIGlzIG5vdCB3aXRoaW4gYW4gaXRlcmFibGUg
ZWxlbWVudCwgb3IgYGZhbHNlYApvdGhlcndpc2UuIFJldHVybnMgYGZhbHNl
YCBpZiB0aGUgbGlzdCBvZiBuZWVkbGVzIGlzIGVtcHR5LgoKYGBgbGlxdWlk
Cnt7IGlmIGNvbnRhaW5zTm90QWxsICRleGNsdWRpbmdUYWdzIC5UYWdzIH19
CiMgLi4uCnt7IGVuZCB9fQpgYGAKCiMjIyMjIGBlbnZgCgpSZWFkcyB0aGUg
Z2l2ZW4gZW52aXJvbm1lbnQgdmFyaWFibGUgYWNjZXNzaWJsZSB0byB0aGUg
Y3VycmVudCBwcm9jZXNzLgoKYGBgbGlxdWlkCnt7IGVudiAiQ0xVU1RFUl9J
RCIgfX0KYGBgCgpUaGlzIGZ1bmN0aW9uIGNhbiBiZSBjaGFpbmVkIHRvIG1h
bmlwdWxhdGUgdGhlIG91dHB1dDoKCmBgYGxpcXVpZAp7eyBlbnYgIkNMVVNU
RVJfSUQiIHwgdG9Mb3dlciB9fQpgYGAKClJlYWRzIHRoZSBnaXZlbiBlbnZp
cm9ubWVudCB2YXJpYWJsZSBhbmQgaWYgaXQgZG9lcyBub3QgZXhpc3Qgb3Ig
aXMgYmxhbmsgdXNlIGEgZGVmYXVsdCB2YWx1ZSwgZXggYDEyMzQ1YC4KCmBg
YGxpcXVpZAp7eyBvciAoZW52ICJDTFVTVEVSX0lEIikgIjEyMzQ1IiB9fQpg
YGAKCiMjIyMjIGBleGVjdXRlVGVtcGxhdGVgCgpFeGVjdXRlcyBhbmQgcmV0
dXJucyBhIGRlZmluZWQgdGVtcGxhdGUuCgpgYGBsaXF1aWQKe3sgZGVmaW5l
ICJjdXN0b20iIH19bXkgY3VzdG9tIHRlbXBsYXRle3sgZW5kIH19CgpUaGlz
IGlzIG15IG90aGVyIHRlbXBsYXRlOgp7eyBleGVjdXRlVGVtcGxhdGUgImN1
c3RvbSIgfX0KCkFuZCBJIGNhbiBjYWxsIGl0IG11bHRpcGxlIHRpbWVzOgp7
eyBleGVjdXRlVGVtcGxhdGUgImN1c3RvbSIgfX0KCkV2ZW4gd2l0aCBhIG5l
dyBjb250ZXh0Ogp7eyBleGVjdXRlVGVtcGxhdGUgImN1c3RvbSIgNDIgfX0K
Ck9yIHNhdmUgaXQgdG8gYSB2YXJpYWJsZToKe3sgJHZhciA6PSBleGVjdXRl
VGVtcGxhdGUgImN1c3RvbSIgfX0KYGBgCgojIyMjIyBgZXhwbG9kZWAKClRh
a2VzIHRoZSByZXN1bHQgZnJvbSBhIGB0cmVlYCBvciBgbHNgIGNhbGwgYW5k
IGNvbnZlcnRzIGl0IGludG8gYSBkZWVwbHktbmVzdGVkCm1hcCBmb3IgcGFy
c2luZy90cmF2ZXJzaW5nLgoKYGBgbGlxdWlkCnt7IHRyZWUgImNvbmZpZyIg
fCBleHBsb2RlIH19CmBgYAoKTm90ZTogWW91IHdpbGwgbG9zZSBhbnkgbWV0
YWRhdGEgYWJvdXQgdGhlIGtleS1wYWlyIGFmdGVyIGl0IGhhcyBiZWVuIGV4
cGxvZGVkLgpZb3UgY2FuIGFsc28gYWNjZXNzIGRlZXBseSBuZXN0ZWQgdmFs
dWVzOgoKYGBgbGlxdWlkCnt7IHdpdGggdHJlZSAiY29uZmlnIiB8IGV4cGxv
ZGUgfX0Ke3sgLmEuYi5jIH19e3sgZW5kIH19CmBgYAoKWW91IHdpbGwgbmVl
ZCB0byBoYXZlIGEgcmVhc29uYWJsZSBmb3JtYXQgYWJvdXQgeW91ciBkYXRh
IGluIENvbnN1bC4gUGxlYXNlIHNlZQpbR28ncyB0ZXh0L3RlbXBsYXRlIHBh
Y2thZ2VdW3RleHQtdGVtcGxhdGVdIGZvciBtb3JlIGluZm9ybWF0aW9uLgoK
CiMjIyMjIGBleHBsb2RlTWFwYAoKVGFrZXMgdGhlIHZhbHVlIG9mIGEgbWFw
IGFuZCBjb252ZXJ0cyBpdCBpbnRvIGEgZGVlcGx5LW5lc3RlZCBtYXAgZm9y
IHBhcnNpbmcvdHJhdmVyc2luZywKdXNpbmcgdGhlIHNhbWUgbG9naWMgYXMg
YGV4cGxvZGVgLgoKYGBgbGlxdWlkCnt7IHNjcmF0Y2guTWFwU2V0ICJleGFt
cGxlIiwgImZvby9iYXIiLCAiYSIgfX0Ke3sgc2NyYXRjaC5NYXBTZXQgImV4
YW1wbGUiLCAiZm9vL2JheiIsICJiIiB9fQp7eyBzY3JhdGNoLkdldCAiZXhh
bXBsZSIgfCBleHBsb2RlTWFwIHwgdG9ZQU1MIH19CmBgYAoKIyMjIyMgYGlu
ZGVudGAKCkluZGVudHMgYSBibG9jayBvZiB0ZXh0IGJ5IHByZWZpeGluZyBO
IG51bWJlciBvZiBzcGFjZXMgcGVyIGxpbmUuCgpgYGBsaXF1aWQKe3sgdHJl
ZSAiZm9vIiB8IGV4cGxvZGUgfCB0b1lBTUwgfCBpbmRlbnQgNCB9fQpgYGAK
CiMjIyMjIGBpbmAKCkRldGVybWluZXMgaWYgYSBuZWVkbGUgaXMgd2l0aGlu
IGFuIGl0ZXJhYmxlIGVsZW1lbnQuCgpgYGBsaXF1aWQKe3sgaWYgaW4gLlRh
Z3MgInByb2R1Y3Rpb24iIH19CiMgLi4uCnt7IGVuZCB9fQpgYGAKCiMjIyMj
IGBsb29wYAoKQWNjZXB0cyB2YXJ5aW5nIHBhcmFtZXRlcnMgYW5kIGRpZmZl
cnMgaXRzIGJlaGF2aW9yIGJhc2VkIG9uIHRob3NlIHBhcmFtZXRlcnMuCgpJ
ZiBgbG9vcGAgaXMgZ2l2ZW4gb25lIGludGVnZXIsIGl0IHdpbGwgcmV0dXJu
IGEgZ29yb3V0aW5lIHRoYXQgYmVnaW5zIGF0IHplcm8KYW5kIGxvb3BzIHVw
IHRvIGJ1dCBub3QgaW5jbHVkaW5nIHRoZSBnaXZlbiBpbnRlZ2VyOgoKYGBg
bGlxdWlkCnt7IHJhbmdlIGxvb3AgNSB9fQojIENvbW1lbnR7e2VuZH19CmBg
YAoKSWYgZ2l2ZW4gdHdvIGludGVnZXJzLCB0aGlzIGZ1bmN0aW9uIHdpbGwg
cmV0dXJuIGEgZ29yb3V0aW5lIHRoYXQgYmVnaW5zIGF0CnRoZSBmaXJzdCBp
bnRlZ2VyIGFuZCBsb29wcyB1cCB0byBidXQgbm90IGluY2x1ZGluZyB0aGUg
c2Vjb25kIGludGVnZXI6CgpgYGBsaXF1aWQKe3sgcmFuZ2UgJGkgOj0gbG9v
cCA1IDggfX0Kc3RhbnphLXt7ICRpIH19e3sgZW5kIH19CmBgYAoKd2hpY2gg
d291bGQgcmVuZGVyOgoKYGBgdGV4dApzdGFuemEtNQpzdGFuemEtNgpzdGFu
emEtNwpgYGAKCk5vdGU6IEl0IGlzIG5vdCBwb3NzaWJsZSB0byBnZXQgdGhl
IGluZGV4IGFuZCB0aGUgZWxlbWVudCBzaW5jZSB0aGUgZnVuY3Rpb24KcmV0
dXJucyBhIGdvcm91dGluZSwgbm90IGEgc2xpY2UuIEluIG90aGVyIHdvcmRz
LCB0aGUgZm9sbG93aW5nIGlzICoqbm90CnZhbGlkKio6CgpgYGBsaXF1aWQK
IyBXaWxsIE5PVCB3b3JrIQp7eyByYW5nZSAkaSwgJGUgOj0gbG9vcCA1IDgg
fX0KIyAuLi57eyBlbmQgfX0KYGBgCgojIyMjIyBgam9pbmAKClRha2VzIHRo
ZSBnaXZlbiBsaXN0IG9mIHN0cmluZ3MgYXMgYSBwaXBlIGFuZCBqb2lucyB0
aGVtIG9uIHRoZSBwcm92aWRlZCBzdHJpbmc6CgpgYGBsaXF1aWQKe3sgJGl0
ZW1zIHwgam9pbiAiLCIgfX0KYGBgCgojIyMjIyBgdHJpbVNwYWNlYAoKVGFr
ZXMgdGhlIHByb3ZpZGVkIGlucHV0IGFuZCB0cmltcyBhbGwgd2hpdGVzcGFj
ZSwgdGFicyBhbmQgbmV3bGluZXM6CgpgYGBsaXF1aWQKe3sgZmlsZSAiL2V0
Yy9lYzJfdmVyc2lvbiIgfCB0cmltU3BhY2UgfX0KYGBgCgojIyMjIyBgcGFy
c2VCb29sYAoKVGFrZXMgdGhlIGdpdmVuIHN0cmluZyBhbmQgcGFyc2VzIGl0
IGFzIGEgYm9vbGVhbjoKCmBgYGxpcXVpZAp7eyAidHJ1ZSIgfCBwYXJzZUJv
b2wgfX0KYGBgCgpUaGlzIGNhbiBiZSBjb21iaW5lZCB3aXRoIGEga2V5IGFu
ZCBhIGNvbmRpdGlvbmFsIGNoZWNrLCBmb3IgZXhhbXBsZToKCmBgYGxpcXVp
ZAp7eyBpZiBrZXkgImZlYXR1cmUvZW5hYmxlZCIgfCBwYXJzZUJvb2wgfX17
eyBlbmQgfX0KYGBgCgojIyMjIyBgcGFyc2VGbG9hdGAKClRha2VzIHRoZSBn
aXZlbiBzdHJpbmcgYW5kIHBhcnNlcyBpdCBhcyBhIGJhc2UtMTAgZmxvYXQ2
NDoKCmBgYGxpcXVpZAp7eyAiMS4yIiB8IHBhcnNlRmxvYXQgfX0KYGBgCgoj
IyMjIyBgcGFyc2VJbnRgCgpUYWtlcyB0aGUgZ2l2ZW4gc3RyaW5nIGFuZCBw
YXJzZXMgaXQgYXMgYSBiYXNlLTEwIGludDY0OgoKYGBgbGlxdWlkCnt7ICIx
IiB8IHBhcnNlSW50IH19CmBgYAoKVGhpcyBjYW4gYmUgY29tYmluZWQgd2l0
aCBvdGhlciBoZWxwZXJzLCBmb3IgZXhhbXBsZToKCmBgYGxpcXVpZAp7eyBy
YW5nZSAkaSA6PSBsb29wIGtleSAiY29uZmlnL3Bvb2xfc2l6ZSIgfCBwYXJz
ZUludCB9fQojIC4uLnt7IGVuZCB9fQpgYGAKCiMjIyMjIGBwYXJzZUpTT05g
CgpUYWtlcyB0aGUgZ2l2ZW4gaW5wdXQgKHVzdWFsbHkgdGhlIHZhbHVlIGZy
b20gYSBrZXkpIGFuZCBwYXJzZXMgdGhlIHJlc3VsdCBhcwpKU09OOgoKYGBg
bGlxdWlkCnt7IHdpdGggJGQgOj0ga2V5ICJ1c2VyL2luZm8iIHwgcGFyc2VK
U09OIH19e3sgJGQubmFtZSB9fXt7IGVuZCB9fQpgYGAKCk5vdGU6IENvbnN1
bCBUZW1wbGF0ZSBldmFsdWF0ZXMgdGhlIHRlbXBsYXRlIG11bHRpcGxlIHRp
bWVzLCBhbmQgb24gdGhlIGZpcnN0CmV2YWx1YXRpb24gdGhlIHZhbHVlIG9m
IHRoZSBrZXkgd2lsbCBiZSBlbXB0eSAoYmVjYXVzZSBubyBkYXRhIGhhcyBi
ZWVuIGxvYWRlZAp5ZXQpLiBUaGlzIG1lYW5zIHRoYXQgdGVtcGxhdGVzIG11
c3QgZ3VhcmQgYWdhaW5zdCBlbXB0eSByZXNwb25zZXMuCgojIyMjIyBgcGFy
c2VVaW50YAoKVGFrZXMgdGhlIGdpdmVuIHN0cmluZyBhbmQgcGFyc2VzIGl0
IGFzIGEgYmFzZS0xMCBpbnQ2NDoKCmBgYGxpcXVpZAp7eyAiMSIgfCBwYXJz
ZVVpbnQgfX0KYGBgCgojIyMjIyBgcGx1Z2luYAoKVGFrZXMgdGhlIG5hbWUg
b2YgYSBwbHVnaW4gYW5kIG9wdGlvbmFsIHBheWxvYWQgYW5kIGV4ZWN1dGVz
IGEgQ29uc3VsIFRlbXBsYXRlCnBsdWdpbi4KCmBgYGxpcXVpZAp7eyBwbHVn
aW4gIm15LXBsdWdpbiIgfX0KYGBgCgpUaGUgcGx1Z2luIGNhbiB0YWtlIGFu
IGFyYml0cmFyeSBudW1iZXIgb2Ygc3RyaW5nIGFyZ3VtZW50cywgYW5kIGNh
biBiZSB0aGUKdGFyZ2V0IG9mIGEgcGlwZWxpbmUgdGhhdCBwcm9kdWNlcyBz
dHJpbmdzIGFzIHdlbGwuIFRoaXMgaXMgbW9zdCBjb21tb25seQpjb21iaW5l
ZCB3aXRoIGEgSlNPTiBmaWx0ZXIgZm9yIGN1c3RvbWl6YXRpb246CgpgYGBs
aXF1aWQKe3sgdHJlZSAiZm9vIiB8IGV4cGxvZGUgfCB0b0pTT04gfCBwbHVn
aW4gIm15LXBsdWdpbiIgfX0KYGBgCgpQbGVhc2Ugc2VlIHRoZSBbcGx1Z2lu
c10oI3BsdWdpbnMpIHNlY3Rpb24gZm9yIG1vcmUgaW5mb3JtYXRpb24gYWJv
dXQgcGx1Z2lucy4KCiMjIyMjIGByZWdleE1hdGNoYAoKVGFrZXMgdGhlIGFy
Z3VtZW50IGFzIGEgcmVndWxhciBleHByZXNzaW9uIGFuZCB3aWxsIHJldHVy
biBgdHJ1ZWAgaWYgaXQgbWF0Y2hlcwpvbiB0aGUgZ2l2ZW4gc3RyaW5nLCBv
ciBgZmFsc2VgIG90aGVyd2lzZS4KCmBgYGxpcXVpZAp7eyBpZiAiZm9vLmJh
ciIgfCByZWdleE1hdGNoICJmb28oWy5hLXpdKykiIH19CiMgLi4uCnt7IGVs
c2UgfX0KIyAuLi4Ke3sgZW5kIH19CmBgYAoKIyMjIyMgYHJlZ2V4UmVwbGFj
ZUFsbGAKClRha2VzIHRoZSBhcmd1bWVudCBhcyBhIHJlZ3VsYXIgZXhwcmVz
c2lvbiBhbmQgcmVwbGFjZXMgYWxsIG9jY3VycmVuY2VzIG9mIHRoZQpyZWdl
eCB3aXRoIHRoZSBnaXZlbiBzdHJpbmcuIEFzIGluIGdvLCB5b3UgY2FuIHVz
ZSB2YXJpYWJsZXMgbGlrZSAkMSB0byByZWZlciB0bwpzdWJleHByZXNzaW9u
cyBpbiB0aGUgcmVwbGFjZW1lbnQgc3RyaW5nLgoKYGBgbGlxdWlkCnt7ICJm
b28uYmFyIiB8IHJlZ2V4UmVwbGFjZUFsbCAiZm9vKFsuYS16XSspIiAiJDEi
IH19CmBgYAoKIyMjIyMgYHJlcGxhY2VBbGxgCgpUYWtlcyB0aGUgYXJndW1l
bnQgYXMgYSBzdHJpbmcgYW5kIHJlcGxhY2VzIGFsbCBvY2N1cnJlbmNlcyBv
ZiB0aGUgZ2l2ZW4gc3RyaW5nCndpdGggdGhlIGdpdmVuIHN0cmluZy4KCmBg
YGxpcXVpZAp7eyAiZm9vLmJhciIgfCByZXBsYWNlQWxsICIuIiAiXyIgfX0K
YGBgCgpUaGlzIGZ1bmN0aW9uIGNhbiBiZSBjaGFpbmVkIHdpdGggb3RoZXIg
ZnVuY3Rpb25zIGFzIHdlbGw6CgpgYGBsaXF1aWQKe3sgc2VydmljZSAid2Vi
IiB9fXt7IC5OYW1lIHwgcmVwbGFjZUFsbCAiOiIgIl8iIH19e3sgZW5kIH19
CmBgYAoKIyMjIyMgYHNwbGl0YAoKU3BsaXRzIHRoZSBnaXZlbiBzdHJpbmcg
b24gdGhlIHByb3ZpZGVkIHNlcGFyYXRvcjoKCmBgYGxpcXVpZAp7eyAiZm9v
XG5iYXJcbiIgfCBzcGxpdCAiXG4iIH19CmBgYAoKVGhpcyBjYW4gYmUgY29t
YmluZWQgd2l0aCBjaGFpbmVkIGFuZCBwaXBlZCB3aXRoIG90aGVyIGZ1bmN0
aW9uczoKCmBgYGxpcXVpZAp7eyBrZXkgImZvbyIgfCB0b1VwcGVyIHwgc3Bs
aXQgIlxuIiB8IGpvaW4gIiwiIH19CmBgYAoKIyMjIyMgYHRpbWVzdGFtcGAK
ClJldHVybnMgdGhlIGN1cnJlbnQgdGltZXN0YW1wIGFzIGEgc3RyaW5nIChV
VEMpLiBJZiBubyBhcmd1bWVudHMgYXJlIGdpdmVuLCB0aGUKcmVzdWx0IGlz
IHRoZSBjdXJyZW50IFJGQzMzMzkgdGltZXN0YW1wOgoKYGBgbGlxdWlkCnt7
IHRpbWVzdGFtcCB9fSAvLyBlLmcuIDE5NzAtMDEtMDFUMDA6MDA6MDBaCmBg
YAoKSWYgdGhlIG9wdGlvbmFsIHBhcmFtZXRlciBpcyBnaXZlbiwgaXQgaXMg
dXNlZCB0byBmb3JtYXQgdGhlIHRpbWVzdGFtcC4gVGhlCm1hZ2ljIHJlZmVy
ZW5jZSBkYXRlICoqTW9uIEphbiAyIDE1OjA0OjA1IC0wNzAwIE1TVCAyMDA2
KiogY2FuIGJlIHVzZWQgdG8gZm9ybWF0CnRoZSBkYXRlIGFzIHJlcXVpcmVk
OgoKYGBgbGlxdWlkCnt7IHRpbWVzdGFtcCAiMjAwNi0wMS0wMiIgfX0gLy8g
ZS5nLiAxOTcwLTAxLTAxCmBgYAoKU2VlIFtHbydzIGB0aW1lLkZvcm1hdGBd
KGh0dHA6Ly9nb2xhbmcub3JnL3BrZy90aW1lLyNUaW1lLkZvcm1hdCkgZm9y
IG1vcmUKaW5mb3JtYXRpb24uCgpBcyBhIHNwZWNpYWwgY2FzZSwgaWYgdGhl
IG9wdGlvbmFsIHBhcmFtZXRlciBpcyBgInVuaXgiYCwgdGhlIHVuaXggdGlt
ZXN0YW1wIGluCnNlY29uZHMgaXMgcmV0dXJuZWQgYXMgYSBzdHJpbmcuCgpg
YGBsaXF1aWQKe3sgdGltZXN0YW1wICJ1bml4IiB9fSAvLyBlLmcuIDAKYGBg
CgojIyMjIyBgdG9KU09OYAoKVGFrZXMgdGhlIHJlc3VsdCBmcm9tIGEgYHRy
ZWVgIG9yIGBsc2AgY2FsbCBhbmQgY29udmVydHMgaXQgaW50byBhIEpTT04g
b2JqZWN0LgoKYGBgbGlxdWlkCnt7IHRyZWUgImNvbmZpZyIgfCBleHBsb2Rl
IHwgdG9KU09OIH19CmBgYAoKcmVuZGVycwoKYGBgamF2YXNjcmlwdAp7ImFk
bWluIjp7InBvcnQiOiIxMjM0In0sIm1heGNvbm5zIjoiNSIsIm1pbmNvbm5z
IjoiMiJ9CmBgYAoKTm90ZTogQ29uc3VsIHN0b3JlcyBhbGwgS1YgZGF0YSBh
cyBzdHJpbmdzLiBUaHVzIHRydWUgaXMgInRydWUiLCAxIGlzICIxIiwgZXRj
LgoKIyMjIyMgYHRvSlNPTlByZXR0eWAKClRha2VzIHRoZSByZXN1bHQgZnJv
bSBhIGB0cmVlYCBvciBgbHNgIGNhbGwgYW5kIGNvbnZlcnRzIGl0IGludG8g
YQpwcmV0dHktcHJpbnRlZCBKU09OIG9iamVjdCwgaW5kZW50ZWQgYnkgdHdv
IHNwYWNlcy4KCmBgYGxpcXVpZAp7eyB0cmVlICJjb25maWciIHwgZXhwbG9k
ZSB8IHRvSlNPTlByZXR0eSB9fQpgYGAKCnJlbmRlcnMKCmBgYGphdmFzY3Jp
cHQKewogICJhZG1pbiI6IHsKICAgICJwb3J0IjogIjEyMzQiCiAgfSwKICAi
bWF4Y29ubnMiOiAiNSIsCiAgIm1pbmNvbm5zIjogIjIiLAp9CmBgYAoKTm90
ZTogQ29uc3VsIHN0b3JlcyBhbGwgS1YgZGF0YSBhcyBzdHJpbmdzLiBUaHVz
IHRydWUgaXMgInRydWUiLCAxIGlzICIxIiwgZXRjLgoKIyMjIyMgYHRvTG93
ZXJgCgpUYWtlcyB0aGUgYXJndW1lbnQgYXMgYSBzdHJpbmcgYW5kIGNvbnZl
cnRzIGl0IHRvIGxvd2VyY2FzZS4KCmBgYGxpcXVpZAp7eyBrZXkgInVzZXIv
bmFtZSIgfCB0b0xvd2VyIH19CmBgYAoKU2VlIFtHbydzIGBzdHJpbmdzLlRv
TG93ZXJgXShodHRwOi8vZ29sYW5nLm9yZy9wa2cvc3RyaW5ncy8jVG9Mb3dl
cikgZm9yIG1vcmUKaW5mb3JtYXRpb24uCgojIyMjIyBgdG9UaXRsZWAKClRh
a2VzIHRoZSBhcmd1bWVudCBhcyBhIHN0cmluZyBhbmQgY29udmVydHMgaXQg
dG8gdGl0bGVjYXNlLgoKYGBgbGlxdWlkCnt7IGtleSAidXNlci9uYW1lIiB8
IHRvVGl0bGUgfX0KYGBgCgpTZWUgW0dvJ3MgYHN0cmluZ3MuVGl0bGVgXSho
dHRwOi8vZ29sYW5nLm9yZy9wa2cvc3RyaW5ncy8jVGl0bGUpIGZvciBtb3Jl
CmluZm9ybWF0aW9uLgoKIyMjIyMgYHRvVE9NTGAKClRha2VzIHRoZSByZXN1
bHQgZnJvbSBhIGB0cmVlYCBvciBgbHNgIGNhbGwgYW5kIGNvbnZlcnRzIGl0
IGludG8gYSBUT01MIG9iamVjdC4KCmBgYGxpcXVpZAp7eyB0cmVlICJjb25m
aWciIHwgZXhwbG9kZSB8IHRvVE9NTCB9fQpgYGAKCnJlbmRlcnMKCmBgYHRv
bWwKbWF4Y29ubnMgPSAiNSIKbWluY29ubnMgPSAiMiIKClthZG1pbl0KICBw
b3J0ID0gIjExMzQiCmBgYAoKTm90ZTogQ29uc3VsIHN0b3JlcyBhbGwgS1Yg
ZGF0YSBhcyBzdHJpbmdzLiBUaHVzIHRydWUgaXMgInRydWUiLCAxIGlzICIx
IiwgZXRjLgoKIyMjIyMgYHRvVXBwZXJgCgpUYWtlcyB0aGUgYXJndW1lbnQg
YXMgYSBzdHJpbmcgYW5kIGNvbnZlcnRzIGl0IHRvIHVwcGVyY2FzZS4KCmBg
YGxpcXVpZAp7eyBrZXkgInVzZXIvbmFtZSIgfCB0b1VwcGVyIH19CmBgYAoK
U2VlIFtHbydzIGBzdHJpbmdzLlRvVXBwZXJgXShodHRwOi8vZ29sYW5nLm9y
Zy9wa2cvc3RyaW5ncy8jVG9VcHBlcikgZm9yIG1vcmUKaW5mb3JtYXRpb24u
CgojIyMjIyBgdG9ZQU1MYAoKVGFrZXMgdGhlIHJlc3VsdCBmcm9tIGEgYHRy
ZWVgIG9yIGBsc2AgY2FsbCBhbmQgY29udmVydHMgaXQgaW50byBhCnByZXR0
eS1wcmludGVkIFlBTUwgb2JqZWN0LCBpbmRlbnRlZCBieSB0d28gc3BhY2Vz
LgoKYGBgbGlxdWlkCnt7IHRyZWUgImNvbmZpZyIgfCBleHBsb2RlIHwgdG9Z
QU1MIH19CmBgYAoKcmVuZGVycwoKYGBgeWFtbAphZG1pbjoKICBwb3J0OiAi
MTIzNCIKbWF4Y29ubnM6ICI1IgptaW5jb25uczogIjIiCmBgYAoKTm90ZTog
Q29uc3VsIHN0b3JlcyBhbGwgS1YgZGF0YSBhcyBzdHJpbmdzLiBUaHVzIHRy
dWUgaXMgInRydWUiLCAxIGlzICIxIiwgZXRjLgoKIyMjIyMgYHNvY2thZGRy
YAoKVGFrZXMgYSBxdW90ZS1lc2NhcGVkIHRlbXBsYXRlIHN0cmluZyBhcyBh
biBhcmd1bWVudCBhbmQgcGFzc2VzIGl0IG9uIHRvCltoYXNoaWNvcnAvZ28t
c29ja2FkZHJdKGh0dHBzOi8vZ2l0aHViLmNvbS9oYXNoaWNvcnAvZ28tc29j
a2FkZHIpIHRlbXBsYXRpbmcgZW5naW5lLgoKYGBgbGlxdWlkCnt7IHNvY2th
ZGRyICJHZXRQcml2YXRlSVAiIH19CmBgYAoKU2VlIFtoYXNoaWNvcnAvZ28t
c29ja2FkZHIgZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9nb2RvYy5vcmcvZ2l0
aHViLmNvbS9oYXNoaWNvcnAvZ28tc29ja2FkZHIpCmZvciBtb3JlIGluZm9y
bWF0aW9uLgoKLS0tCgojIyMjIE1hdGggRnVuY3Rpb25zCgpUaGUgZm9sbG93
aW5nIGZ1bmN0aW9ucyBhcmUgYXZhaWxhYmxlIG9uIGZsb2F0cyBhbmQgaW50
ZWdlciB2YWx1ZXMuCgojIyMjIyBgYWRkYAoKUmV0dXJucyB0aGUgc3VtIG9m
IHRoZSB0d28gdmFsdWVzLgoKYGBgbGlxdWlkCnt7IGFkZCAxIDIgfX0gLy8g
MwpgYGAKClRoaXMgY2FuIGFsc28gYmUgdXNlZCB3aXRoIGEgcGlwZSBmdW5j
dGlvbi4KCmBgYGxpcXVpZAp7eyAxIHwgYWRkIDIgfX0gLy8gMwpgYGAKCiMj
IyMjIGBzdWJ0cmFjdGAKClJldHVybnMgdGhlIGRpZmZlcmVuY2Ugb2YgdGhl
IHNlY29uZCB2YWx1ZSBmcm9tIHRoZSBmaXJzdC4KCmBgYGxpcXVpZAp7eyBz
dWJ0cmFjdCAyIDUgfX0gLy8gMwpgYGAKClRoaXMgY2FuIGFsc28gYmUgdXNl
ZCB3aXRoIGEgcGlwZSBmdW5jdGlvbi4KCmBgYGxpcXVpZAp7eyA1IHwgc3Vi
dHJhY3QgMiB9fSAvLyAzCmBgYAoKUGxlYXNlIHRha2UgY2FyZWZ1bCBub3Rl
IG9mIHRoZSBvcmRlciBvZiBhcmd1bWVudHMuCgojIyMjIyBgbXVsdGlwbHlg
CgpSZXR1cm5zIHRoZSBwcm9kdWN0IG9mIHRoZSB0d28gdmFsdWVzLgoKYGBg
bGlxdWlkCnt7IG11bHRpcGx5IDIgMiB9fSAvLyA0CmBgYAoKVGhpcyBjYW4g
YWxzbyBiZSB1c2VkIHdpdGggYSBwaXBlIGZ1bmN0aW9uLgoKYGBgbGlxdWlk
Cnt7IDIgfCBtdWx0aXBseSAyIH19IC8vIDQKYGBgCgojIyMjIyBgZGl2aWRl
YAoKUmV0dXJucyB0aGUgZGl2aXNpb24gb2YgdGhlIHNlY29uZCB2YWx1ZSBm
cm9tIHRoZSBmaXJzdC4KCmBgYGxpcXVpZAp7eyBkaXZpZGUgMiAxMCB9fSAv
LyA1CmBgYAoKVGhpcyBjYW4gYWxzbyBiZSB1c2VkIHdpdGggYSBwaXBlIGZ1
bmN0aW9uLgoKYGBgbGlxdWlkCnt7IDEwIHwgZGl2aWRlIDIgfX0gLy8gNQpg
YGAKClBsZWFzZSB0YWtlIGNhcmVmdWwgbm90ZSBvZiB0aGUgb3JkZXIgb3Ig
YXJndW1lbnRzLgoKIyMjIyMgYG1vZHVsb2AKClJldHVybnMgdGhlIG1vZHVs
byBvZiB0aGUgc2Vjb25kIHZhbHVlIGZyb20gdGhlIGZpcnN0LgoKYGBgbGlx
dWlkCnt7IG1vZHVsbyAyIDUgfX0gLy8gMQpgYGAKClRoaXMgY2FuIGFsc28g
YmUgdXNlZCB3aXRoIGEgcGlwZSBmdW5jdGlvbi4KCmBgYGxpcXVpZAp7eyA1
IHwgbW9kdWxvIDIgfX0gLy8gMQpgYGAKClBsZWFzZSB0YWtlIGNhcmVmdWwg
bm90ZSBvZiB0aGUgb3JkZXIgb2YgYXJndW1lbnRzLgoKIyMgUGx1Z2lucwoK
IyMjIEF1dGhvcmluZyBQbHVnaW5zCgpGb3Igc29tZSB1c2UgY2FzZXMsIGl0
IG1heSBiZSBuZWNlc3NhcnkgdG8gd3JpdGUgYSBwbHVnaW4gdGhhdCBvZmZs
b2FkcyB3b3JrIHRvCmFub3RoZXIgc3lzdGVtLiBUaGlzIGlzIGVzcGVjaWFs
bHkgdXNlZnVsIGZvciB0aGluZ3MgdGhhdCBtYXkgbm90IGZpdCBpbiB0aGUK
InN0YW5kYXJkIGxpYnJhcnkiIG9mIENvbnN1bCBUZW1wbGF0ZSwgYnV0IHN0
aWxsIG5lZWQgdG8gYmUgc2hhcmVkIGFjcm9zcwptdWx0aXBsZSBpbnN0YW5j
ZXMuCgpDb25zdWwgVGVtcGxhdGUgcGx1Z2lucyBtdXN0IGhhdmUgdGhlIGZv
bGxvd2luZyBBUEk6CgpgYGBzaGVsbAokIE5BTUUgW0lOUFVULi4uXQpgYGAK
Ci0gYE5BTUVgIC0gdGhlIG5hbWUgb2YgdGhlIHBsdWdpbiAtIHRoaXMgaXMg
YWxzbyB0aGUgbmFtZSBvZiB0aGUgYmluYXJ5LCBlaXRoZXIKICBhIGZ1bGwg
cGF0aCBvciBqdXN0IHRoZSBwcm9ncmFtIG5hbWUuICBJdCB3aWxsIGJlIGV4
ZWN1dGVkIGluIGEgc2hlbGwgd2l0aCB0aGUKICBpbmhlcml0ZWQgYFBBVEhg
IHNvIGUuZy4gdGhlIHBsdWdpbiBgY2F0YCB3aWxsIHJ1biB0aGUgZmlyc3Qg
ZXhlY3V0YWJsZSBgY2F0YAogIHRoYXQgaXMgZm91bmQgb24gdGhlIGBQQVRI
YC4KCi0gYElOUFVUYCAtIGlucHV0IGZyb20gdGhlIHRlbXBsYXRlLiBUaGVy
ZSB3aWxsIGJlIG9uZSBJTlBVVCBmb3IgZXZlcnkgYXJndW1lbnQgcGFzc2Vk
CiAgdG8gdGhlIGBwbHVnaW5gIGZ1bmN0aW9uLiBJZiB0aGUgYXJndW1lbnRz
IGNvbnRhaW4gd2hpdGVzcGFjZSwgdGhhdCB3aGl0ZXNwYWNlCiAgd2lsbCBi
ZSBwYXNzZWQgYXMgaWYgdGhlIGFyZ3VtZW50IHdlcmUgcXVvdGVkIGJ5IHRo
ZSBzaGVsbC4KCiMjIyMgSW1wb3J0YW50IE5vdGVzCgotIFBsdWdpbnMgZXhl
Y3V0ZSB1c2VyLXByb3ZpZGVkIHNjcmlwdHMgYW5kIHBhc3MgaW4gcG90ZW50
aWFsbHkgc2Vuc2l0aXZlIGRhdGEKICBmcm9tIENvbnN1bCBvciBWYXVsdC4g
Tm90aGluZyBpcyB2YWxpZGF0ZWQgb3IgcHJvdGVjdGVkIGJ5IENvbnN1bCBU
ZW1wbGF0ZSwKICBzbyBhbGwgbmVjZXNzYXJ5IHByZWNhdXRpb25zIGFuZCBj
b25zaWRlcmF0aW9ucyBzaG91bGQgYmUgbWFkZSBieSB0ZW1wbGF0ZQogIGF1
dGhvcnMKCi0gUGx1Z2luIG91dHB1dCBtdXN0IGJlIHJldHVybmVkIGFzIGEg
c3RyaW5nIG9uIHN0ZG91dC4gT25seSBzdGRvdXQgd2lsbCBiZQogIHBhcnNl
ZCBmb3Igb3V0cHV0LiBCZSBzdXJlIHRvIGxvZyBhbGwgZXJyb3JzLCBkZWJ1
Z2dpbmcgbWVzc2FnZXMgb250byBzdGRlcnIKICB0byBhdm9pZCBlcnJvcnMg
d2hlbiBDb25zdWwgVGVtcGxhdGUgcmV0dXJucyB0aGUgdmFsdWUuIE5vdGUg
dGhhdCBvdXRwdXQgdG8KICBzdGRlcnIgd2lsbCBvbmx5IGJlIG91dHB1dCBp
ZiB0aGUgcGx1Z2luIHJldHVybnMgYSBub24temVybyBleGl0IGNvZGUuCgot
IEFsd2F5cyBgZXhpdCAwYCBvciBDb25zdWwgVGVtcGxhdGUgd2lsbCBhc3N1
bWUgdGhlIHBsdWdpbiBmYWlsZWQgdG8gZXhlY3V0ZQoKLSBFbnN1cmUgdGhl
IGVtcHR5IGlucHV0IGNhc2UgaXMgaGFuZGxlZCBjb3JyZWN0bHkgKHNlZSBb
TXVsdGktcGhhc2UgZXhlY3V0aW9uXSgjbXVsdGktcGhhc2UtZXhlY3V0aW9u
KSkKCi0gRGF0YSBwaXBlZCBpbnRvIHRoZSBwbHVnaW4gaXMgYXBwZW5kZWQg
YWZ0ZXIgYW55IHBhcmFtZXRlcnMgZ2l2ZW4gZXhwbGljaXRseSAoZWcgYHt7
ICJzYW1wbGUtZGF0YSIgfCBwbHVnaW4gIm15LXBsdWdpbiIgInNvbWUtcGFy
YW1ldGVyIn19YCB3aWxsIGNhbGwgYG15LXBsdWdpbiBzb21lLXBhcmFtZXRl
ciBzYW1wbGUtZGF0YWApCgpIZXJlIGlzIGEgc2FtcGxlIHBsdWdpbiBpbiBh
IGZldyBkaWZmZXJlbnQgbGFuZ3VhZ2VzIHRoYXQgcmVtb3ZlcyBhbnkgSlNP
TiBrZXlzCnRoYXQgc3RhcnQgd2l0aCBhbiB1bmRlcnNjb3JlIGFuZCByZXR1
cm5zIHRoZSBKU09OIHN0cmluZzoKCmBgYHJ1YnkKIyEgL3Vzci9iaW4vZW52
IHJ1YnkKcmVxdWlyZSAianNvbiIKCmlmIEFSR1YuZW1wdHk/CiAgcHV0cyBK
U09OLmZhc3RfZ2VuZXJhdGUoe30pCiAgS2VybmVsLmV4aXQoMCkKZW5kCgpo
YXNoID0gSlNPTi5wYXJzZShBUkdWLmZpcnN0KQpoYXNoLnJlamVjdCEgeyB8
aywgX3wgay5zdGFydF93aXRoPygiXyIpICB9CnB1dHMgSlNPTi5mYXN0X2dl
bmVyYXRlKGhhc2gpCktlcm5lbC5leGl0KDApCmBgYAoKYGBgZ28KZnVuYyBt
YWluKCkgewogIGFyZyA6PSBbXWJ5dGUob3MuQXJnc1sxXSkKCiAgdmFyIHBh
cnNlZCBtYXBbc3RyaW5nXWludGVyZmFjZXt9CiAgaWYgZXJyIDo9IGpzb24u
VW5tYXJzaGFsKGFyZywgJnBhcnNlZCk7IGVyciAhPSBuaWwgewogICAgZm10
LkZwcmludGxuKG9zLlN0ZGVyciwgZm10LlNwcmludGYoImVycjogJXMiLCBl
cnIpKQogICAgb3MuRXhpdCgxKQogIH0KCiAgZm9yIGssIF8gOj0gcmFuZ2Ug
cGFyc2VkIHsKICAgIGlmIHN0cmluZyhrWzBdKSA9PSAiXyIgewogICAgICBk
ZWxldGUocGFyc2VkLCBrKQogICAgfQogIH0KCiAgcmVzdWx0LCBlcnIgOj0g
anNvbi5NYXJzaGFsKHBhcnNlZCkKICBpZiBlcnIgIT0gbmlsIHsKICAgIGZt
dC5GcHJpbnRsbihvcy5TdGRlcnIsIGZtdC5TcHJpbnRmKCJlcnI6ICVzIiwg
ZXJyKSkKICAgIG9zLkV4aXQoMSkKICB9CgogIGZtdC5GcHJpbnRsbihvcy5T
dGRvdXQsIGZtdC5TcHJpbnRmKCIlcyIsIHJlc3VsdCkpCiAgb3MuRXhpdCgw
KQp9CmBgYAoKIyMgQ2F2ZWF0cwoKIyMjIERvdHMgaW4gU2VydmljZSBOYW1l
cwoKVXNpbmcgZG90cyBgLmAgaW4gc2VydmljZSBuYW1lcyB3aWxsIGNvbmZs
aWN0IHdpdGggdGhlIHVzZSBvZiBkb3RzIGZvciBbVEFHCmRlbGluZWF0aW9u
XShodHRwczovL2dpdGh1Yi5jb20vaGFzaGljb3JwL2NvbnN1bC10ZW1wbGF0
ZSNzZXJ2aWNlKSBpbiB0aGUKdGVtcGxhdGUuIERvdHMgYWxyZWFkeSBbaW50
ZXJmZXJlIHdpdGggdXNpbmcKRE5TXShodHRwczovL3d3dy5jb25zdWwuaW8v
ZG9jcy9hZ2VudC9zZXJ2aWNlcy5odG1sI3NlcnZpY2UtYW5kLXRhZy1uYW1l
cy13aXRoLWRucykKZm9yIHNlcnZpY2UgbmFtZXMsIHNvIHdlIHJlY29tbWVu
ZCBhdm9pZGluZyBkb3RzIHdoZXJldmVyIHBvc3NpYmxlLgoKIyMjIE9uY2Ug
TW9kZQoKSW4gT25jZSBtb2RlLCBDb25zdWwgVGVtcGxhdGUgd2lsbCB3YWl0
IGZvciBhbGwgZGVwZW5kZW5jaWVzIHRvIGJlIHJlbmRlcmVkLiBJZgphIHRl
bXBsYXRlIHNwZWNpZmllcyBhIGRlcGVuZGVuY3kgKGEgcmVxdWVzdCkgdGhh
dCBkb2VzIG5vdCBleGlzdCBpbiBDb25zdWwsCm9uY2UgbW9kZSB3aWxsIHdh
aXQgdW50aWwgQ29uc3VsIHJldHVybnMgZGF0YSBmb3IgdGhhdCBkZXBlbmRl
bmN5LiBQbGVhc2Ugbm90ZQp0aGF0ICJyZXR1cm5lZCBkYXRhIiBhbmQgImVt
cHR5IGRhdGEiIGFyZSBub3QgbXV0dWFsbHkgZXhjbHVzaXZlLgoKV2hlbiB5
b3UgcXVlcnkgZm9yIGFsbCBoZWFsdGh5IHNlcnZpY2VzIG5hbWVkICJmb28i
IChge3sgc2VydmljZSAiZm9vIiB9fWApLCB5b3UKYXJlIGFza2luZyBDb25z
dWwgLSAiZ2l2ZSBtZSBhbGwgdGhlIGhlYWx0aHkgc2VydmljZXMgbmFtZWQg
Zm9vIi4gSWYgdGhlcmUgYXJlCm5vIHNlcnZpY2VzIG5hbWVkIGZvbywgdGhl
IHJlc3BvbnNlIGlzIHRoZSBlbXB0eSBhcnJheS4gVGhpcyBpcyBhbHNvIHRo
ZSBzYW1lCnJlc3BvbnNlIGlmIHRoZXJlIGFyZSBubyBfaGVhbHRoeV8gc2Vy
dmljZXMgbmFtZWQgZm9vLgoKQ29uc3VsIHRlbXBsYXRlIHByb2Nlc3NlcyBp
bnB1dCB0ZW1wbGF0ZXMgbXVsdGlwbGUgdGltZXMsIHNpbmNlIHRoZSBmaXJz
dCByZXN1bHQKY291bGQgaW1wYWN0IGxhdGVyIGRlcGVuZGVuY2llczoKCmBg
YGxpcXVpZAp7eyByYW5nZSBzZXJ2aWNlcyB9fQp7eyByYW5nZSBzZXJ2aWNl
IC5OYW1lIH19Cnt7IGVuZCB9fQp7eyBlbmQgfX0KYGBgCgpJbiB0aGlzIGV4
YW1wbGUsIHdlIGhhdmUgdG8gcHJvY2VzcyB0aGUgb3V0cHV0IG9mIGBzZXJ2
aWNlc2AgYmVmb3JlIHdlIGNhbgpsb29rdXAgZWFjaCBgc2VydmljZWAsIHNp
bmNlIHRoZSBpbm5lciBsb29wcyBjYW5ub3QgYmUgZXZhbHVhdGVkIHVudGls
IHRoZSBvdXRlcgpsb29wIHJldHVybnMgYSByZXNwb25zZS4gQ29uc3VsIFRl
bXBsYXRlIHdhaXRzIHVudGlsIGl0IGdldHMgYSByZXNwb25zZSBmcm9tCkNv
bnN1bCBmb3IgYWxsIGRlcGVuZGVuY2llcyBiZWZvcmUgcmVuZGVyaW5nIGEg
dGVtcGxhdGUuIEl0IGRvZXMgbm90IHdhaXQgdW50aWwKdGhhdCByZXNwb25z
ZSBpcyBub24tZW1wdHkgdGhvdWdoLgoKKipOb3RlOioqIE9uY2UgbW9kZSBp
bXBsaWNpdGx5IGRpc2FibGVzIGFueSB3YWl0L3F1aWVzY2VuY2UgdGltZXJz
IHNwZWNpZmllZCBpbiBjb25maWd1cmF0aW9uIGZpbGVzIG9yIHBhc3NlZCBv
biB0aGUgY29tbWFuZCBsaW5lLgoKIyMjIEV4ZWMgTW9kZQoKQXMgb2YgdmVy
c2lvbiAwLjE2LjAsIENvbnN1bCBUZW1wbGF0ZSBoYXMgdGhlIGFiaWxpdHkg
dG8gbWFpbnRhaW4gYW4gYXJiaXRyYXJ5CmNoaWxkIHByb2Nlc3MgKHNpbWls
YXIgdG8gW2VudmNvbnN1bF0oaHR0cHM6Ly9naXRodWIuY29tL2hhc2hpY29y
cC9lbnZjb25zdWwpKS4KVGhpcyBtb2RlIGlzIG1vc3QgYmVuZWZpY2lhbCB3
aGVuIHJ1bm5pbmcgQ29uc3VsIFRlbXBsYXRlIGluIGEgY29udGFpbmVyIG9y
IG9uIGEKc2NoZWR1bGVyIGxpa2UgW05vbWFkXShodHRwczovL3d3dy5ub21h
ZHByb2plY3QuaW8pIG9yIEt1YmVybmV0ZXMuIFdoZW4KYWN0aXZhdGVkLCBD
b25zdWwgVGVtcGxhdGUgd2lsbCBzcGF3biBhbmQgbWFuYWdlIHRoZSBsaWZl
Y3ljbGUgb2YgdGhlIGNoaWxkCnByb2Nlc3MuCgpUaGlzIG1vZGUgaXMgYmVz
dC1leHBsYWluZWQgdGhyb3VnaCBleGFtcGxlLiBDb25zaWRlciBhIHNpbXBs
ZSBhcHBsaWNhdGlvbiB0aGF0CnJlYWRzIGEgY29uZmlndXJhdGlvbiBmaWxl
IGZyb20gZGlzayBhbmQgc3Bhd25zIGEgc2VydmVyIGZyb20gdGhhdApjb25m
aWd1cmF0aW9uLgoKYGBgc2gKJCBjb25zdWwtdGVtcGxhdGUgXAogICAgLXRl
bXBsYXRlICIvdG1wL2NvbmZpZy5jdG1wbDovdG1wL3NlcnZlci5jb25mIiBc
CiAgICAtZXhlYyAiL2Jpbi9teS1zZXJ2ZXIgLWNvbmZpZyAvdG1wL3NlcnZl
ci5jb25mIgpgYGAKCldoZW4gQ29uc3VsIFRlbXBsYXRlIHN0YXJ0cywgaXQg
d2lsbCBwdWxsIHRoZSByZXF1aXJlZCBkZXBlbmRlbmNpZXMgYW5kIHBvcHVs
YXRlCnRoZSBgL3RtcC9zZXJ2ZXIuY29uZmAsIHdoaWNoIHRoZSBgbXktc2Vy
dmVyYCBiaW5hcnkgY29uc3VtZXMuIEFmdGVyIHRoYXQKdGVtcGxhdGUgaXMg
cmVuZGVyZWQgY29tcGxldGVseSB0aGUgZmlyc3QgdGltZSwgQ29uc3VsIFRl
bXBsYXRlIHNwYXducyBhbmQKbWFuYWdlcyBhIGNoaWxkIHByb2Nlc3MuIFdo
ZW4gYW55IG9mIHRoZSBsaXN0IHRlbXBsYXRlcyBjaGFuZ2UsIENvbnN1bCBU
ZW1wbGF0ZQp3aWxsIHNlbmQgYSBjb25maWd1cmFibGUgcmVsb2FkIHNpZ25h
bCB0byB0aGUgY2hpbGQgcHJvY2Vzcy4gQWRkaXRpb25hbGx5LApDb25zdWwg
VGVtcGxhdGUgd2lsbCBwcm94eSBhbnkgc2lnbmFscyBpdCByZWNlaXZlcyB0
byB0aGUgY2hpbGQgcHJvY2Vzcy4gVGhpcwplbmFibGVzIGEgc2NoZWR1bGVy
IHRvIGNvbnRyb2wgdGhlIGxpZmVjeWNsZSBvZiB0aGUgcHJvY2VzcyBhbmQg
YWxzbyBlYXNlcyB0aGUKZnJpY3Rpb24gb2YgcnVubmluZyBpbnNpZGUgYSBj
b250YWluZXIuCgpBIGNvbW1vbiBwb2ludCBvZiBjb25mdXNpb24gaXMgdGhh
dCB0aGUgY29tbWFuZCBzdHJpbmcgYmVoYXZlcyB0aGUgc2FtZSBhcyB0aGUK
c2hlbGw7IGl0IGRvZXMgbm90LiBJbiB0aGUgc2hlbGwsIHdoZW4geW91IHJ1
biBgZm9vIHwgYmFyYCBvciBgZm9vID4gYmFyYCwgdGhhdAppcyBhY3R1YWxs
eSBydW5uaW5nIGFzIGEgc3VicHJvY2VzcyBvZiB5b3VyIHNoZWxsIChiYXNo
LCB6c2gsIGNzaCwgZXRjLikuIFdoZW4KQ29uc3VsIFRlbXBsYXRlIHNwYXdu
cyB0aGUgZXhlYyBwcm9jZXNzLCBpdCBydW5zIG91dHNpZGUgb2YgeW91ciBz
aGVsbC4gVGhpcwpiZWhhdmlvciBpcyBfZGlmZmVyZW50XyBmcm9tIHdoZW4g
Q29uc3VsIFRlbXBsYXRlIGV4ZWN1dGVzIHRoZSB0ZW1wbGF0ZS1zcGVjaWZp
YwpyZWxvYWQgY29tbWFuZC4gSWYgeW91IHdhbnQgdGhlIGFiaWxpdHkgdG8g
cGlwZSBvciByZWRpcmVjdCBpbiB0aGUgZXhlYyBjb21tYW5kLAp5b3Ugd2ls
bCBuZWVkIHRvIHNwYXduIHRoZSBwcm9jZXNzIGluIHN1YnNoZWxsLCBmb3Ig
ZXhhbXBsZToKCmBgYGhjbApleGVjIHsKICBjb21tYW5kID0gIi9iaW4vYmFz
aCAtYyAnbXktc2VydmVyID4gL3Zhci9sb2cvbXktc2VydmVyLmxvZyciCn0K
YGBgCgpOb3RlIHRoYXQgd2hlbiBzcGF3bmluZyBsaWtlIHRoaXMsIG1vc3Qg
c2hlbGxzIGRvIG5vdCBwcm94eSBzaWduYWxzIHRvIHRoZWlyCmNoaWxkIGJ5
IGRlZmF1bHQsIHNvIHlvdXIgY2hpbGQgcHJvY2VzcyB3aWxsIG5vdCByZWNl
aXZlIHRoZSBzaWduYWxzIHRoYXQgQ29uc3VsClRlbXBsYXRlIHNlbmRzIHRv
IHRoZSBzaGVsbC4gWW91IGNhbiBhdm9pZCB0aGlzIGJ5IHdyaXRpbmcgYSB0
aW55IHNoZWxsIHdyYXBwZXIKYW5kIGV4ZWN1dGluZyB0aGF0IGluc3RlYWQ6
CgpgYGBiYXNoCiMhL3Vzci9iaW4vZW52IGJhc2gKdHJhcCAia2lsbCAtVEVS
TSAkY2hpbGQiIFNJR1RFUk0KCi9iaW4vbXktc2VydmVyIC1jb25maWcgL3Rt
cC9zZXJ2ZXIuY29uZgpjaGlsZD0kIQp3YWl0ICIkY2hpbGQiCmBgYAoKQWx0
ZXJuYXRpdmVseSwgeW91IGNhbiB1c2UgeW91ciBzaGVsbCdzIGV4ZWMgZnVu
Y3Rpb24gZGlyZWN0bHksIGlmIGl0IGV4aXN0czoKCmBgYGJhc2gKIyEvdXNy
L2Jpbi9lbnYgYmFzaApleGVjIC9iaW4vbXktc2VydmVyIC1jb25maWcgL3Rt
cC9zZXJ2ZXIuY29uZiA+IC92YXIvbG9nL215LXNlcnZlci5sb2cKYGBgCgpU
aGVyZSBhcmUgc29tZSBhZGRpdGlvbmFsIGNhdmVhdHMgd2l0aCBFeGVjIE1v
ZGUsIHdoaWNoIHNob3VsZCBiZSBjb25zaWRlcmVkCmNhcmVmdWxseSBiZWZv
cmUgdXNlOgoKLSBJZiB0aGUgY2hpbGQgcHJvY2VzcyBkaWVzLCB0aGUgQ29u
c3VsIFRlbXBsYXRlIHByb2Nlc3Mgd2lsbCBhbHNvIGRpZS4gQ29uc3VsCiAg
VGVtcGxhdGUgKipkb2VzIG5vdCBzdXBlcnZpc2UgdGhlIHByb2Nlc3MhKiog
VGhpcyBpcyBnZW5lcmFsbHkgdGhlCiAgcmVzcG9uc2liaWxpdHkgb2YgdGhl
IHNjaGVkdWxlciBvciBpbml0IHN5c3RlbS4KCi0gVGhlIGNoaWxkIHByb2Nl
c3MgbXVzdCByZW1haW4gaW4gdGhlIGZvcmVncm91bmQuIFRoaXMgaXMgYSBy
ZXF1aXJlbWVudCBmb3IKICBDb25zdWwgVGVtcGxhdGUgdG8gbWFuYWdlIHRo
ZSBwcm9jZXNzIGFuZCBzZW5kIHNpZ25hbHMuCgotIFRoZSBleGVjIGNvbW1h
bmQgd2lsbCBvbmx5IHN0YXJ0IGFmdGVyIF9hbGxfIHRlbXBsYXRlcyBoYXZl
IGJlZW4gcmVuZGVyZWQgYXQKICBsZWFzdCBvbmNlLiBPbmUgbWF5IGhhdmUg
bXVsdGlwbGUgdGVtcGxhdGVzIGZvciBhIHNpbmdsZSBDb25zdWwgVGVtcGxh
dGUKICBwcm9jZXNzLCBhbGwgb2Ygd2hpY2ggbXVzdCBiZSByZW5kZXJlZCBi
ZWZvcmUgdGhlIHByb2Nlc3Mgc3RhcnRzLiBDb25zaWRlcgogIHNvbWV0aGlu
ZyBsaWtlIGFuIG5naW54IG9yIGFwYWNoZSBjb25maWd1cmF0aW9uIHdoZXJl
IGJvdGggdGhlIHByb2Nlc3MKICBjb25maWd1cmF0aW9uIGZpbGUgYW5kIGlu
ZGl2aWR1YWwgc2l0ZSBjb25maWd1cmF0aW9uIG11c3QgYmUgd3JpdHRlbiBp
biBvcmRlcgogIGZvciB0aGUgc2VydmljZSB0byBzdWNjZXNzZnVsbHkgc3Rh
cnQuCgotIEFmdGVyIHRoZSBjaGlsZCBwcm9jZXNzIGlzIHN0YXJ0ZWQsIGFu
eSBjaGFuZ2UgdG8gYW55IGRlcGVuZGVudCB0ZW1wbGF0ZSB3aWxsCiAgY2F1
c2UgdGhlIHJlbG9hZCBzaWduYWwgdG8gYmUgc2VudCB0byB0aGUgY2hpbGQg
cHJvY2Vzcy4gSWYgbm8gcmVsb2FkIHNpZ25hbAogIGlzIHByb3ZpZGVkLCBD
b25zdWwgVGVtcGxhdGUgd2lsbCBraWxsIHRoZSBwcm9jZXNzIGFuZCBzcGF3
biBhIG5ldyBpbnN0YW5jZS4KICBUaGUgcmVsb2FkIHNpZ25hbCBjYW4gYmUg
c3BlY2lmaWVkIGFuZCBjdXN0b21pemVkIHZpYSB0aGUgQ0xJIG9yIGNvbmZp
Z3VyYXRpb24KICBmaWxlLgoKLSBXaGVuIENvbnN1bCBUZW1wbGF0ZSBpcyBz
dG9wcGVkIGdyYWNlZnVsbHksIGl0IHdpbGwgc2VuZCB0aGUgY29uZmlndXJh
YmxlIGtpbGwKICBzaWduYWwgdG8gdGhlIGNoaWxkIHByb2Nlc3MuIFRoZSBk
ZWZhdWx0IHZhbHVlIGlzIFNJR1RFUk0sIGJ1dCBpdCBjYW4gYmUKICBjdXN0
b21pemVkIHZpYSB0aGUgQ0xJIG9yIGNvbmZpZ3VyYXRpb24gZmlsZS4KCi0g
Q29uc3VsIFRlbXBsYXRlIHdpbGwgZm9yd2FyZCBhbGwgc2lnbmFscyBpdCBy
ZWNlaXZlcyB0byB0aGUgY2hpbGQgcHJvY2VzcwogICoqZXhjZXB0KiogaXRz
IGRlZmluZWQgYHJlbG9hZF9zaWduYWxgIGFuZCBga2lsbF9zaWduYWxgLiBJ
ZiB5b3UgZGlzYWJsZSB0aGVzZQogIHNpZ25hbHMsIENvbnN1bCBUZW1wbGF0
ZSB3aWxsIGZvcndhcmQgdGhlbSB0byB0aGUgY2hpbGQgcHJvY2Vzcy4KCi0g
SXQgaXMgbm90IHBvc3NpYmxlIHRvIGhhdmUgbW9yZSB0aGFuIG9uZSBleGVj
IGNvbW1hbmQgKGFsdGhvdWdoIGVhY2ggdGVtcGxhdGUKICBjYW4gc3RpbGwg
aGF2ZSBpdHMgb3duIHJlbG9hZCBjb21tYW5kKS4KCi0gSW5kaXZpZHVhbCB0
ZW1wbGF0ZSByZWxvYWQgY29tbWFuZHMgc3RpbGwgZmlyZSBpbmRlcGVuZGVu
dGx5IG9mIHRoZSBleGVjCiAgY29tbWFuZC4KCiMjIyBEZS1EdXBsaWNhdGlv
biBNb2RlCgpDb25zdWwgVGVtcGxhdGUgd29ya3MgYnkgcGFyc2luZyB0ZW1w
bGF0ZXMgdG8gZGV0ZXJtaW5lIHdoYXQgZGF0YSBpcyBuZWVkZWQgYW5kCnRo
ZW4gd2F0Y2hpbmcgQ29uc3VsIGZvciBhbnkgY2hhbmdlcyB0byB0aGF0IGRh
dGEuIFRoaXMgYWxsb3dzIENvbnN1bCBUZW1wbGF0ZQp0byBlZmZpY2llbnRs
eSByZS1yZW5kZXIgdGVtcGxhdGVzIHdoZW4gYSBjaGFuZ2Ugb2NjdXJzLiBI
b3dldmVyLCBpZiB0aGVyZSBhcmUKbWFueSBpbnN0YW5jZXMgb2YgQ29uc3Vs
IFRlbXBsYXRlIHJlbmRlcmluZyBhIGNvbW1vbiB0ZW1wbGF0ZSB0aGVyZSBp
cyBhIGxpbmVhcgpkdXBsaWNhdGlvbiBvZiB3b3JrIGFzIGVhY2ggaW5zdGFu
Y2UgaXMgcXVlcnlpbmcgdGhlIHNhbWUgZGF0YS4KClRvIG1ha2UgdGhpcyBw
YXR0ZXJuIG1vcmUgZWZmaWNpZW50IENvbnN1bCBUZW1wbGF0ZSBzdXBwb3J0
cyB3b3JrIGRlLWR1cGxpY2F0aW9uCmFjcm9zcyBpbnN0YW5jZXMuIFRoaXMg
Y2FuIGJlIGVuYWJsZWQgd2l0aCB0aGUgYC1kZWR1cGAgZmxhZyBvciB2aWEg
dGhlCmBkZWR1cGxpY2F0ZWAgY29uZmlndXJhdGlvbiBibG9jay4gT25jZSBl
bmFibGVkLCBDb25zdWwgVGVtcGxhdGUgdXNlcyBsZWFkZXIKZWxlY3Rpb24g
b24gYSBwZXItdGVtcGxhdGUgYmFzaXMgdG8gaGF2ZSBvbmx5IGEgc2luZ2xl
IG5vZGUgcGVyZm9ybSB0aGUgcXVlcmllcy4KUmVzdWx0cyBhcmUgc2hhcmVk
IGFtb25nIG90aGVyIGluc3RhbmNlcyByZW5kZXJpbmcgdGhlIHNhbWUgdGVt
cGxhdGUgYnkgcGFzc2luZwpjb21wcmVzc2VkIGRhdGEgdGhyb3VnaCB0aGUg
Q29uc3VsIEsvViBzdG9yZS4KClBsZWFzZSBub3RlIHRoYXQgbm8gVmF1bHQg
ZGF0YSB3aWxsIGJlIHN0b3JlZCBpbiB0aGUgY29tcHJlc3NlZCB0ZW1wbGF0
ZS4KQmVjYXVzZSBBQ0xzIGFyb3VuZCBWYXVsdCBhcmUgdHlwaWNhbGx5IG1v
cmUgY2xvc2VseSBjb250cm9sbGVkIHRoYW4gdGhvc2UgQUNMcwphcm91bmQg
Q29uc3VsJ3MgS1YsIENvbnN1bCBUZW1wbGF0ZSB3aWxsIHN0aWxsIHJlcXVl
c3QgdGhlIHNlY3JldCBmcm9tIFZhdWx0IG9uCmVhY2ggaXRlcmF0aW9uLgoK
V2hlbiBydW5uaW5nIGluIGRlLWR1cGxpY2F0aW9uIG1vZGUsIGl0IGlzIGlt
cG9ydGFudCB0aGF0IGxvY2FsIHRlbXBsYXRlCmZ1bmN0aW9ucyByZXNvbHZl
IGNvcnJlY3RseS4gRm9yIGV4YW1wbGUsIHlvdSBtYXkgaGF2ZSBhIGxvY2Fs
IHRlbXBsYXRlIGZ1bmN0aW9uCnRoYXQgcmVsaWVzIG9uIHRoZSBgZW52YCBo
ZWxwZXIgbGlrZSB0aGlzOgoKYGBgaGNsCnt7IGtleSAoZW52ICJLRVkiKSB9
fQpgYGAKCkl0IGlzIGNydWNpYWwgdGhhdCB0aGUgZW52aXJvbm1lbnQgdmFy
aWFibGUgYEtFWWAgaW4gdGhpcyBleGFtcGxlIGlzIGNvbnNpc3RlbnQKYWNy
b3NzIGFsbCBtYWNoaW5lcyBlbmdhZ2VkIGluIGRlLWR1cGxpY2F0aW5nIHRo
aXMgdGVtcGxhdGUuIElmIHRoZSB2YWx1ZXMgYXJlCmRpZmZlcmVudCwgQ29u
c3VsIFRlbXBsYXRlIHdpbGwgYmUgdW5hYmxlIHRvIHJlc29sdmUgdGhlIHRl
bXBsYXRlLCBhbmQgeW91IHdpbGwKbm90IGdldCBhIHN1Y2Nlc3NmdWwgcmVu
ZGVyLgoKIyMjIFRlcm1pbmF0aW9uIG9uIEVycm9yCgpCeSBkZWZhdWx0IENv
bnN1bCBUZW1wbGF0ZSBpcyBoaWdobHkgZmF1bHQtdG9sZXJhbnQuIElmIENv
bnN1bCBpcyB1bnJlYWNoYWJsZSBvcgphIHRlbXBsYXRlIGNoYW5nZXMsIENv
bnN1bCBUZW1wbGF0ZSB3aWxsIGhhcHBpbHkgY29udGludWUgcnVubmluZy4g
VGhlIG9ubHkKZXhjZXB0aW9uIHRvIHRoaXMgcnVsZSBpcyBpZiB0aGUgb3B0
aW9uYWwgYGNvbW1hbmRgIGV4aXRzIG5vbi16ZXJvLiBJbiB0aGlzCmNhc2Us
IENvbnN1bCBUZW1wbGF0ZSB3aWxsIGFsc28gZXhpdCBub24temVyby4gVGhl
IHJlYXNvbiBmb3IgdGhpcyBkZWNpc2lvbiBpcwpzbyB0aGUgdXNlciBjYW4g
ZWFzaWx5IGNvbmZpZ3VyZSBzb21ldGhpbmcgbGlrZSBVcHN0YXJ0IG9yIEdv
ZCB0byBtYW5hZ2UgQ29uc3VsClRlbXBsYXRlIGFzIGEgc2VydmljZS4KCklm
IHlvdSB3YW50IENvbnN1bCBUZW1wbGF0ZSB0byBjb250aW51ZSB3YXRjaGlu
ZyBmb3IgY2hhbmdlcywgZXZlbiBpZiB0aGUKb3B0aW9uYWwgY29tbWFuZCBh
cmd1bWVudCBmYWlscywgeW91IGNhbiBhcHBlbmQgYHx8IHRydWVgIHRvIHlv
dXIgY29tbWFuZC4gTm90ZQp0aGF0IGB8fGAgaXMgYSAic2hlbGwtaXNtIiwg
bm90IGEgYnVpbHQtaW4gZnVuY3Rpb24uIFlvdSB3aWxsIGFsc28gbmVlZCB0
byBydW4KeW91ciBjb21tYW5kIHVuZGVyIGEgc2hlbGw6CgpgYGBzaGVsbAok
IGNvbnN1bC10ZW1wbGF0ZSBcCiAgLXRlbXBsYXRlICJpbi5jdG1wbDpvdXQu
ZmlsZTovYmluL2Jhc2ggLWMgJ3NlcnZpY2UgbmdpbnggcmVzdGFydCB8fCB0
cnVlJyIKYGBgCgpJbiB0aGlzIGV4YW1wbGUsIGV2ZW4gaWYgdGhlIE5naW54
IHJlc3RhcnQgY29tbWFuZCByZXR1cm5zIG5vbi16ZXJvLCB0aGUgb3ZlcmFs
bApmdW5jdGlvbiB3aWxsIHN0aWxsIHJldHVybiBhbiBPSyBleGl0IGNvZGU7
IENvbnN1bCBUZW1wbGF0ZSB3aWxsIGNvbnRpbnVlIHRvIHJ1bgphcyBhIHNl
cnZpY2UuIEFkZGl0aW9uYWxseSwgaWYgeW91IGhhdmUgY29tcGxleCBsb2dp
YyBmb3IgcmVzdGFydGluZyB5b3VyCnNlcnZpY2UsIHlvdSBjYW4gaW50ZWxs
aWdlbnRseSBjaG9vc2Ugd2hlbiB5b3Ugd2FudCBDb25zdWwgVGVtcGxhdGUg
dG8gZXhpdCBhbmQKd2hlbiB5b3Ugd2FudCBpdCB0byBjb250aW51ZSB0byB3
YXRjaCBmb3IgY2hhbmdlcy4gRm9yIHRoZXNlIHR5cGVzIG9mIGNvbXBsZXgK
c2NyaXB0cywgd2UgcmVjb21tZW5kIHVzaW5nIGEgY3VzdG9tIHNoIG9yIGJh
c2ggc2NyaXB0IGluc3RlYWQgb2YgcHV0dGluZyB0aGUKbG9naWMgZGlyZWN0
bHkgaW4gdGhlIGBjb25zdWwtdGVtcGxhdGVgIGNvbW1hbmQgb3IgY29uZmln
dXJhdGlvbiBmaWxlLgoKIyMjIENvbW1hbmQgRW52aXJvbm1lbnQKClRoZSBj
dXJyZW50IHByb2Nlc3NlcyBlbnZpcm9ubWVudCBpcyB1c2VkIHdoZW4gZXhl
Y3V0aW5nIGNvbW1hbmRzIHdpdGggdGhlIGZvbGxvd2luZyBhZGRpdGlvbmFs
IGVudmlyb25tZW50IHZhcmlhYmxlczoKCi0gYENPTlNVTF9IVFRQX0FERFJg
Ci0gYENPTlNVTF9IVFRQX1RPS0VOYAotIGBDT05TVUxfSFRUUF9BVVRIYAot
IGBDT05TVUxfSFRUUF9TU0xgCi0gYENPTlNVTF9IVFRQX1NTTF9WRVJJRllg
CgpUaGVzZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgYXJlIGV4cG9ydGVkIHdp
dGggdGhlaXIgY3VycmVudCB2YWx1ZXMgd2hlbiB0aGUKY29tbWFuZCBleGVj
dXRlcy4gT3RoZXIgQ29uc3VsIHRvb2xpbmcgcmVhZHMgdGhlc2UgZW52aXJv
bm1lbnQgdmFyaWFibGVzLApwcm92aWRpbmcgc21vb3RoIGludGVncmF0aW9u
IHdpdGggb3RoZXIgQ29uc3VsIHRvb2xzIChsaWtlIGBjb25zdWwgbWFpbnRg
IG9yCmBjb25zdWwgbG9ja2ApLiBBZGRpdGlvbmFsbHksIGV4cG9zaW5nIHRo
ZXNlIGVudmlyb25tZW50IHZhcmlhYmxlcyBnaXZlcyBwb3dlcgp1c2VycyB0
aGUgYWJpbGl0eSB0byBmdXJ0aGVyIGN1c3RvbWl6ZSB0aGVpciBjb21tYW5k
IHNjcmlwdC4KCiMjIyBNdWx0aS1waGFzZSBFeGVjdXRpb24KCkNvbnN1bCBU
ZW1wbGF0ZSBkb2VzIGFuIG4tcGFzcyBldmFsdWF0aW9uIG9mIHRlbXBsYXRl
cywgYWNjdW11bGF0aW5nCmRlcGVuZGVuY2llcyBvbiBlYWNoIHBhc3MuIFRo
aXMgaXMgcmVxdWlyZWQgZHVlIHRvIG5lc3RlZCBkZXBlbmRlbmNpZXMsIHN1
Y2ggYXM6CgpgYGBsaXF1aWQKe3sgcmFuZ2Ugc2VydmljZXMgfX0Ke3sgcmFu
Z2Ugc2VydmljZSAuTmFtZSB9fQogIHt7IC5BZGRyZXNzIH19Cnt7IGVuZCB9
fXt7IGVuZCB9fQpgYGAKCkR1cmluZyB0aGUgZmlyc3QgcGFzcywgQ29uc3Vs
IFRlbXBsYXRlIGRvZXMgbm90IGtub3cgYW55IG9mIHRoZSBzZXJ2aWNlcyBp
bgpDb25zdWwsIHNvIGl0IGhhcyB0byBwZXJmb3JtIGEgcXVlcnkuIFdoZW4g
dGhvc2UgcmVzdWx0cyBhcmUgcmV0dXJuZWQsIHRoZQppbm5lci1sb29wIGlz
IHRoZW4gZXZhbHVhdGVkIHdpdGggdGhhdCByZXN1bHQsIHBvdGVudGlhbGx5
IGNyZWF0aW5nIG1vcmUgcXVlcmllcwphbmQgd2F0Y2hlcy4KCkJlY2F1c2Ug
b2YgdGhpcyBpbXBsZW1lbnRhdGlvbiwgdGVtcGxhdGUgZnVuY3Rpb25zIG5l
ZWQgYSBkZWZhdWx0IHZhbHVlIHRoYXQgaXMKYW4gYWNjZXB0YWJsZSBwYXJh
bWV0ZXIgdG8gYSBgcmFuZ2VgIGZ1bmN0aW9uIChvciBzaW1pbGFyKSwgYnV0
IGRvZXMgbm90CmFjdHVhbGx5IGV4ZWN1dGUgdGhlIGlubmVyIGxvb3AgKHdo
aWNoIHdvdWxkIGNhdXNlIGEgcGFuaWMpLiBUaGlzIGlzIGltcG9ydGFudAp0
byBtZW50aW9uIGJlY2F1c2UgY29tcGxleCB0ZW1wbGF0ZXMgKiptdXN0Kiog
YWNjb3VudCBmb3IgdGhlICJlbXB0eSIgY2FzZS4gRm9yCmV4YW1wbGUsIHRo
ZSBmb2xsb3dpbmcgKip3aWxsIG5vdCB3b3JrKio6CgpgYGBsaXF1aWQKe3sg
d2l0aCBpbmRleCAoc2VydmljZSAiZm9vIikgMCB9fQojIC4uLgp7eyBlbmQg
fX0KYGBgCgpUaGlzIHdpbGwgcmFpc2UgYW4gZXJyb3IgbGlrZToKCmBgYHRl
eHQKPGluZGV4ICRzZXJ2aWNlcyAwPjogZXJyb3IgY2FsbGluZyBpbmRleDog
aW5kZXggb3V0IG9mIHJhbmdlOiAwCmBgYAoKVGhhdCBpcyBiZWNhdXNlLCBk
dXJpbmcgdGhlIF9maXJzdF8gZXZhbHVhdGlvbiBvZiB0aGUgdGVtcGxhdGUs
IHRoZSBgc2VydmljZWAKa2V5IGlzIHJldHVybmluZyBhbiBlbXB0eSBzbGlj
ZS4gWW91IGNhbiBhY2NvdW50IGZvciB0aGlzIGluIHlvdXIgdGVtcGxhdGUg
bGlrZQpzbzoKCmBgYGxpcXVpZAp7eyB3aXRoIHNlcnZpY2UgImZvbyIgfX0K
e3sgd2l0aCBpbmRleCAuIDAgfX0Ke3sgLk5vZGUgfX17eyBlbmQgfX17eyBl
bmQgfX0KYGBgCgpUaGlzIHdpbGwgc3RpbGwgYWRkIHRoZSBkZXBlbmRlbmN5
IHRvIHRoZSBsaXN0IG9mIHdhdGNoZXMsIGJ1dCB3aWxsIG5vdApldmFsdWF0
ZSB0aGUgaW5uZXItaWYsIGF2b2lkaW5nIHRoZSBvdXQtb2YtaW5kZXggZXJy
b3IuCgojIyBSdW5uaW5nIGFuZCBQcm9jZXNzIExpZmVjeWNsZQoKV2hpbGUg
dGhlcmUgYXJlIG11bHRpcGxlIHdheXMgdG8gcnVuIENvbnN1bCBUZW1wbGF0
ZSwgdGhlIG1vc3QgY29tbW9uIHBhdHRlcm4gaXMKdG8gcnVuIENvbnN1bCBU
ZW1wbGF0ZSBhcyBhIHN5c3RlbSBzZXJ2aWNlLiBXaGVuIENvbnN1bCBUZW1w
bGF0ZSBmaXJzdCBzdGFydHMsCml0IHJlYWRzIGFueSBjb25maWd1cmF0aW9u
IGZpbGVzIGFuZCB0ZW1wbGF0ZXMgZnJvbSBkaXNrIGFuZCBsb2FkcyB0aGVt
IGludG8KbWVtb3J5LiBGcm9tIHRoYXQgcG9pbnQgZm9yd2FyZCwgY2hhbmdl
cyB0byB0aGUgZmlsZXMgb24gZGlzayBkbyBub3QgcHJvcGFnYXRlCnRvIHJ1
bm5pbmcgcHJvY2VzcyB3aXRob3V0IGEgcmVsb2FkLgoKVGhlIHJlYXNvbiBm
b3IgdGhpcyBiZWhhdmlvciBpcyBzaW1wbGUgYW5kIGFsaWducyB3aXRoIG90
aGVyIHRvb2xzIGxpa2UgaGFwcm94eS4KQSB1c2VyIG1heSB3YW50IHRvIHBl
cmZvcm0gcHJlLWZsaWdodCB2YWxpZGF0aW9uIGNoZWNrcyBvbiB0aGUgY29u
ZmlndXJhdGlvbiBvcgp0ZW1wbGF0ZXMgYmVmb3JlIGxvYWRpbmcgdGhlbSBp
bnRvIHRoZSBwcm9jZXNzLiBBZGRpdGlvbmFsbHksIGEgdXNlciBtYXkgd2Fu
dCB0bwp1cGRhdGUgY29uZmlndXJhdGlvbiBhbmQgdGVtcGxhdGVzIHNpbXVs
dGFuZW91c2x5LiBIYXZpbmcgQ29uc3VsIFRlbXBsYXRlCmF1dG9tYXRpY2Fs
bHkgd2F0Y2ggYW5kIHJlbG9hZCB0aG9zZSBmaWxlcyBvbiBjaGFuZ2VzIGlz
IGJvdGggb3BlcmF0aW9uYWxseQpkYW5nZXJvdXMgYW5kIGFnYWluc3Qgc29t
ZSBvZiB0aGUgcGFyYWRpZ21zIG9mIG1vZGVybiBpbmZyYXN0cnVjdHVyZS4g
SW5zdGVhZCwKQ29uc3VsIFRlbXBsYXRlIGxpc3RlbnMgZm9yIHRoZSBgU0lH
SFVQYCBzeXNjYWxsIHRvIHRyaWdnZXIgYSBjb25maWd1cmF0aW9uCnJlbG9h
ZC4gSWYgeW91IHVwZGF0ZSBjb25maWd1cmF0aW9uIG9yIHRlbXBsYXRlcywg
c2ltcGx5IHNlbmQgYEhVUGAgdG8gdGhlCnJ1bm5pbmcgQ29uc3VsIFRlbXBs
YXRlIHByb2Nlc3MgYW5kIENvbnN1bCBUZW1wbGF0ZSB3aWxsIHJlbG9hZCBh
bGwgdGhlCmNvbmZpZ3VyYXRpb25zIGFuZCB0ZW1wbGF0ZXMgZnJvbSBkaXNr
LgoKIyMgRGVidWdnaW5nCgpDb25zdWwgVGVtcGxhdGUgY2FuIHByaW50IHZl
cmJvc2UgZGVidWdnaW5nIG91dHB1dC4gVG8gc2V0IHRoZSBsb2cgbGV2ZWwg
Zm9yCkNvbnN1bCBUZW1wbGF0ZSwgdXNlIHRoZSBgLWxvZy1sZXZlbGAgZmxh
ZzoKCmBgYHNoZWxsCiQgY29uc3VsLXRlbXBsYXRlIC1sb2ctbGV2ZWwgaW5m
byAuLi4KYGBgCgpgYGB0ZXh0Cjx0aW1lc3RhbXA+IFtJTkZPXSAoY2xpKSBy
ZWNlaXZlZCByZWRpcyBmcm9tIFdhdGNoZXIKPHRpbWVzdGFtcD4gW0lORk9d
IChjbGkpIGludm9raW5nIFJ1bm5lcgojIC4uLgpgYGAKCllvdSBjYW4gYWxz
byBzcGVjaWZ5IHRoZSBsZXZlbCBhcyBkZWJ1ZzoKCmBgYHNoZWxsCiQgY29u
c3VsLXRlbXBsYXRlIC1sb2ctbGV2ZWwgZGVidWcgLi4uCmBgYAoKYGBgdGV4
dAo8dGltZXN0YW1wPiBbREVCVUddIChjbGkpIGNyZWF0aW5nIFJ1bm5lcgo8
dGltZXN0YW1wPiBbREVCVUddIChjbGkpIGNyZWF0aW5nIENvbnN1bCBBUEkg
Y2xpZW50Cjx0aW1lc3RhbXA+IFtERUJVR10gKGNsaSkgY3JlYXRpbmcgV2F0
Y2hlcgo8dGltZXN0YW1wPiBbREVCVUddIChjbGkpIGxvb3BpbmcgZm9yIGRh
dGEKPHRpbWVzdGFtcD4gW0RFQlVHXSAod2F0Y2hlcikgc3RhcnRpbmcgd2F0
Y2gKPHRpbWVzdGFtcD4gW0RFQlVHXSAod2F0Y2hlcikgYWxsIHBvbGxlcnMg
aGF2ZSBzdGFydGVkLCB3YWl0aW5nIGZvciBmaW5pc2gKPHRpbWVzdGFtcD4g
W0RFQlVHXSAocmVkaXMpIHN0YXJ0aW5nIHBvbGwKPHRpbWVzdGFtcD4gW0RF
QlVHXSAoc2VydmljZSByZWRpcykgcXVlcnlpbmcgQ29uc3VsIHdpdGggJnsu
Li59Cjx0aW1lc3RhbXA+IFtERUJVR10gKHNlcnZpY2UgcmVkaXMpIENvbnN1
bCByZXR1cm5lZCAyIHNlcnZpY2VzCjx0aW1lc3RhbXA+IFtERUJVR10gKHJl
ZGlzKSB3cml0aW5nIGRhdGEgdG8gY2hhbm5lbAo8dGltZXN0YW1wPiBbREVC
VUddIChyZWRpcykgc3RhcnRpbmcgcG9sbAo8dGltZXN0YW1wPiBbSU5GT10g
KGNsaSkgcmVjZWl2ZWQgcmVkaXMgZnJvbSBXYXRjaGVyCjx0aW1lc3RhbXA+
IFtJTkZPXSAoY2xpKSBpbnZva2luZyBSdW5uZXIKPHRpbWVzdGFtcD4gW0RF
QlVHXSAoc2VydmljZSByZWRpcykgcXVlcnlpbmcgQ29uc3VsIHdpdGggJnsu
Li59CiMgLi4uCmBgYAoKCiMjIEZBUQoKKipROiBIb3cgaXMgdGhpcyBkaWZm
ZXJlbnQgdGhhbiBjb25mZD8qKjxicj4KQTogVGhlIGFuc3dlciBpcyBzaW1w
bGU6IFNlcnZpY2UgRGlzY292ZXJ5IGFzIGEgZmlyc3QgY2xhc3MgY2l0aXpl
bi4gWW91IGFyZSBhbHNvIGVuY291cmFnZWQgdG8gcmVhZCBbdGhpcyBQdWxs
IFJlcXVlc3RdKGh0dHBzOi8vZ2l0aHViLmNvbS9rZWxzZXloaWdodG93ZXIv
Y29uZmQvcHVsbC8xMDIpIG9uIHRoZSBwcm9qZWN0IGZvciBtb3JlIGJhY2tn
cm91bmQgaW5mb3JtYXRpb24uIFdlIHRoaW5rIGNvbmZkIGlzIGEgZ3JlYXQg
cHJvamVjdCwgYnV0IENvbnN1bCBUZW1wbGF0ZSBmaWxscyBhIG1pc3Npbmcg
Z2FwLiBBZGRpdGlvbmFsbHksIENvbnN1bCBUZW1wbGF0ZSBoYXMgZmlyc3Qg
Y2xhc3MgaW50ZWdyYXRpb24gd2l0aCBbVmF1bHRdKGh0dHBzOi8vdmF1bHRw
cm9qZWN0LmlvKSwgbWFraW5nIGl0IGVhc3kgdG8gaW5jb3Jwb3JhdGUgc2Vj
cmV0IG1hdGVyaWFsIGxpa2UgZGF0YWJhc2UgY3JlZGVudGlhbHMgb3IgQVBJ
IHRva2VucyBpbnRvIGNvbmZpZ3VyYXRpb24gZmlsZXMuCgoqKlE6IEhvdyBp
cyB0aGlzIGRpZmZlcmVudCB0aGFuIFB1cHBldC9DaGVmL0Fuc2libGUvU2Fs
dD8qKjxicj4KQTogQ29uZmlndXJhdGlvbiBtYW5hZ2VtZW50IHRvb2xzIGFy
ZSBkZXNpZ25lZCB0byBiZSB1c2VkIGluIHVuaXNvbiB3aXRoIENvbnN1bCBU
ZW1wbGF0ZS4gSW5zdGVhZCBvZiByZW5kZXJpbmcgYSBzdGFsZSBjb25maWd1
cmF0aW9uIGZpbGUsIHVzZSB5b3VyIGNvbmZpZ3VyYXRpb24gbWFuYWdlbWVu
dCBzb2Z0d2FyZSB0byByZW5kZXIgYSBkeW5hbWljIHRlbXBsYXRlIHRoYXQg
d2lsbCBiZSBwb3B1bGF0ZWQgYnkgW0NvbnN1bF1bXS4KCgojIyBDb250cmli
dXRpbmcKClRvIGJ1aWxkIGFuZCBpbnN0YWxsIENvbnN1bC1UZW1wbGF0ZSBs
b2NhbGx5LCB5b3Ugd2lsbCBuZWVkIHRvIFtpbnN0YWxsIEdvXVtnb10uCgpD
bG9uZSB0aGUgcmVwb3NpdG9yeToKCmBgYHNoZWxsCiQgZ2l0IGNsb25lIGh0
dHBzOi8vZ2l0aHViLmNvbS9oYXNoaWNvcnAvY29uc3VsLXRlbXBsYXRlLmdp
dApgYGAKClRvIGNvbXBpbGUgdGhlIGBjb25zdWwtdGVtcGxhdGVgIGJpbmFy
eSBmb3IgeW91ciBsb2NhbCBtYWNoaW5lOgoKYGBgc2hlbGwKJCBtYWtlIGRl
dgpgYGAKClRoaXMgd2lsbCBjb21waWxlIHRoZSBgY29uc3VsLXRlbXBsYXRl
YCBiaW5hcnkgaW50byBgYmluL2NvbnN1bC10ZW1wbGF0ZWAgYXMKd2VsbCBh
cyB5b3VyIGAkR09QQVRIYCBhbmQgcnVuIHRoZSB0ZXN0IHN1aXRlLgoKSWYg
eW91IHdhbnQgdG8gY29tcGlsZSBhIHNwZWNpZmljIGJpbmFyeSwgc2V0IGBY
Q19PU2AgYW5kIGBYQ19BUkNIYCBvciBydW4gdGhlCmZvbGxvd2luZyB0byBn
ZW5lcmF0ZSBhbGwgYmluYXJpZXM6CgpgYGBzaGVsbAokIG1ha2UgYnVpbGQK
YGBgCgpJZiB5b3Ugd2FudCB0byBydW4gdGhlIHRlc3RzLCBmaXJzdCBpbnN0
YWxsIFtjb25zdWxdKGh0dHBzOi8vd3d3LmNvbnN1bC5pby9kb2NzL2luc3Rh
bGwvaW5kZXguaHRtbCkgYW5kIFt2YXVsdF0oaHR0cHM6Ly93d3cudmF1bHRw
cm9qZWN0LmlvL2RvY3MvaW5zdGFsbC8pIGxvY2FsbHksIHRoZW46CgpgYGBz
aGVsbAokIG1ha2UgdGVzdApgYGAKCk9yIHRvIHJ1biBhIHNwZWNpZmljIHRl
c3QgaW4gdGhlIHN1aXRlOgoKYGBgc2hlbGwKZ28gdGVzdCAuLy4uLiAtcnVu
IFNvbWVUZXN0RnVuY3Rpb25fbmFtZQpgYGAKCltjb25zdWxdOiBodHRwczov
L3d3dy5jb25zdWwuaW8gIkNvbnN1bCBieSBIYXNoaUNvcnAiCltjb25uZWN0
XTogaHR0cHM6Ly93d3cuY29uc3VsLmlvL2RvY3MvY29ubmVjdC8gIkNvbm5l
Y3QiCltleGFtcGxlc106IChodHRwczovL2dpdGh1Yi5jb20vaGFzaGljb3Jw
L2NvbnN1bC10ZW1wbGF0ZS90cmVlL21hc3Rlci9leGFtcGxlcykgIkNvbnN1
bCBUZW1wbGF0ZSBFeGFtcGxlcyIKW2hjbF06IGh0dHBzOi8vZ2l0aHViLmNv
bS9oYXNoaWNvcnAvaGNsICJIYXNoaUNvcnAgQ29uZmlndXJhdGlvbiBMYW5n
dWFnZSAoaGNsKSIKW3JlbGVhc2VzXTogaHR0cHM6Ly9yZWxlYXNlcy5oYXNo
aWNvcnAuY29tL2NvbnN1bC10ZW1wbGF0ZSAiQ29uc3VsIFRlbXBsYXRlIFJl
bGVhc2VzIgpbdGV4dC10ZW1wbGF0ZV06IGh0dHBzOi8vZ29sYW5nLm9yZy9w
a2cvdGV4dC90ZW1wbGF0ZS8gIkdvJ3MgdGV4dC90ZW1wbGF0ZSBwYWNrYWdl
IgpbdmF1bHRdOiBodHRwczovL3d3dy52YXVsdHByb2plY3QuaW8gIlZhdWx0
IGJ5IEhhc2hpQ29ycCIKW2dvXTogaHR0cHM6Ly9nb2xhbmcub3JnICJHbyBw
cm9ncmFtbWluZyBsYW5ndWFnZSIK
",,3724,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"dmVyc2lvbjogMi4xCmpvYnM6CiAgYnVpbGQ6CiAgICBlbnZpcm9ubWVudDoK
ICAgICAgR08xMTFNT0RVTEU6ICJvbiIKICAgICAgQ09OU1VMX1ZFUlNJT046
IDEuNi4xCiAgICAgIFZBVUxUX1ZFUlNJT046IDEuMS4zCiAgICBkb2NrZXI6
CiAgICAgIC0gaW1hZ2U6IGNpcmNsZWNpL2dvbGFuZzpsYXRlc3QKICAgIHdv
cmtpbmdfZGlyZWN0b3J5OiAvZ28vc3JjL2dpdGh1Yi5jb20vaGFzaGljb3Jw
L2NvbnN1bC10ZW1wbGF0ZQogICAgc3RlcHM6CiAgICAgIC0gY2hlY2tvdXQK
ICAgICAgLSByZXN0b3JlX2NhY2hlOgogICAgICAgICAga2V5czoKICAgICAg
ICAgIC0gY3QtbW9kY2FjaGUtdjEte3sgY2hlY2tzdW0gImdvLm1vZCIgfX0K
ICAgICAgLSBydW46IHwKICAgICAgICAgIGN1cmwgLXNMbyBjb25zdWwuemlw
IGh0dHBzOi8vcmVsZWFzZXMuaGFzaGljb3JwLmNvbS9jb25zdWwvJHtDT05T
VUxfVkVSU0lPTn0vY29uc3VsXyR7Q09OU1VMX1ZFUlNJT059X2xpbnV4X2Ft
ZDY0LnppcAogICAgICAgICAgdW56aXAgY29uc3VsLnppcAogICAgICAgICAg
c3VkbyBjcCBjb25zdWwgL3Vzci9sb2NhbC9iaW4vCiAgICAgIC0gcnVuOiB8
CiAgICAgICAgICBjdXJsIC1zTG8gdmF1bHQuemlwIGh0dHBzOi8vcmVsZWFz
ZXMuaGFzaGljb3JwLmNvbS92YXVsdC8ke1ZBVUxUX1ZFUlNJT059L3ZhdWx0
XyR7VkFVTFRfVkVSU0lPTn1fbGludXhfYW1kNjQuemlwCiAgICAgICAgICB1
bnppcCB2YXVsdC56aXAKICAgICAgICAgIHN1ZG8gY3AgdmF1bHQgL3Vzci9s
b2NhbC9iaW4vCiAgICAgIC0gcnVuOiB8CiAgICAgICAgICBtYWtlIHRlc3QK
ICAgICAgLSBzYXZlX2NhY2hlOgogICAgICAgICAga2V5OiBjdC1tb2RjYWNo
ZS12MS17eyBjaGVja3N1bSAiZ28ubW9kIiB9fQogICAgICAgICAgcGF0aHM6
CiAgICAgICAgICAtIC9nby9wa2cvbW9kCgo=
",,,,,,,,,,,,,,,,,,,,,,,
b'librdkafka',5870069,b'The Apache Kafka C/C++ library',b'C',212,3724,,281,False,b'https://api.github.com/repos/edenhill/librdkafka/forks',"bGlicmRrYWZrYSAtIHRoZSBBcGFjaGUgS2Fma2EgQy9DKysgY2xpZW50IGxp
YnJhcnkKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT0KCkNvcHlyaWdodCAoYykgMjAxMi0yMDE5LCBbTWFnbnVz
IEVkZW5oaWxsXShodHRwOi8vd3d3LmVkZW5oaWxsLnNlLykuCgpbaHR0cHM6
Ly9naXRodWIuY29tL2VkZW5oaWxsL2xpYnJka2Fma2FdKGh0dHBzOi8vZ2l0
aHViLmNvbS9lZGVuaGlsbC9saWJyZGthZmthKQoKKipsaWJyZGthZmthKiog
aXMgYSBDIGxpYnJhcnkgaW1wbGVtZW50YXRpb24gb2YgdGhlCltBcGFjaGUg
S2Fma2FdKGh0dHBzOi8va2Fma2EuYXBhY2hlLm9yZy8pIHByb3RvY29sLCBw
cm92aWRpbmcgUHJvZHVjZXIsIENvbnN1bWVyCmFuZCBBZG1pbiBjbGllbnRz
LiBJdCB3YXMgZGVzaWduZWQgd2l0aCBtZXNzYWdlIGRlbGl2ZXJ5IHJlbGlh
YmlsaXR5CmFuZCBoaWdoIHBlcmZvcm1hbmNlIGluIG1pbmQsIGN1cnJlbnQg
ZmlndXJlcyBleGNlZWQgMSBtaWxsaW9uIG1zZ3Mvc2Vjb25kIGZvcgp0aGUg
cHJvZHVjZXIgYW5kIDMgbWlsbGlvbiBtc2dzL3NlY29uZCBmb3IgdGhlIGNv
bnN1bWVyLgoKKipsaWJyZGthZmthKiogaXMgbGljZW5zZWQgdW5kZXIgdGhl
IDItY2xhdXNlIEJTRCBsaWNlbnNlLgoKIyBGZWF0dXJlcyAjCiAgKiBIaWdo
LWxldmVsIHByb2R1Y2VyCiAgKiBIaWdoLWxldmVsIGJhbGFuY2VkIEthZmth
Q29uc3VtZXIgKHJlcXVpcmVzIGJyb2tlciA+PSAwLjkpCiAgKiBTaW1wbGUg
KGxlZ2FjeSkgY29uc3VtZXIKICAqIEFkbWluIGNsaWVudAogICogQ29tcHJl
c3Npb246IHNuYXBweSwgZ3ppcCwgbHo0LCB6c3RkCiAgKiBbU1NMXShodHRw
czovL2dpdGh1Yi5jb20vZWRlbmhpbGwvbGlicmRrYWZrYS93aWtpL1VzaW5n
LVNTTC13aXRoLWxpYnJka2Fma2EpIHN1cHBvcnQKICAqIFtTQVNMXShodHRw
czovL2dpdGh1Yi5jb20vZWRlbmhpbGwvbGlicmRrYWZrYS93aWtpL1VzaW5n
LVNBU0wtd2l0aC1saWJyZGthZmthKSAoR1NTQVBJL0tlcmJlcm9zL1NTUEks
IFBMQUlOLCBTQ1JBTSwgT0FVVEhCRUFSRVIpIHN1cHBvcnQKICAqIEZ1bGwg
bGlzdCBvZiBbc3VwcG9ydGVkIEtJUHNdKElOVFJPRFVDVElPTi5tZCNzdXBw
b3J0ZWQta2lwcykKICAqIEJyb2tlciB2ZXJzaW9uIHN1cHBvcnQ6ID49MC44
IChzZWUgW0Jyb2tlciB2ZXJzaW9uIGNvbXBhdGliaWxpdHldKElOVFJPRFVD
VElPTi5tZCNicm9rZXItdmVyc2lvbi1jb21wYXRpYmlsaXR5KSkKICAqIEd1
YXJhbnRlZWQgQVBJIHN0YWJpbGl0eSBmb3IgQyAmIEMrKyBBUElzIChBQkkg
c2FmZXR5IGd1YXJhbnRlZWQgZm9yIEMpCiAgKiBbU3RhdGlzdGljc10oU1RB
VElTVElDUy5tZCkgbWV0cmljcwogICogRGViaWFuIHBhY2thZ2U6IGxpYnJk
a2Fma2ExIGFuZCBsaWJyZGthZmthLWRldiBpbiBEZWJpYW4gYW5kIFVidW50
dQogICogUlBNIHBhY2thZ2U6IGxpYnJka2Fma2EgYW5kIGxpYnJka2Fma2Et
ZGV2ZWwKICAqIEdlbnRvbyBwYWNrYWdlOiBkZXYtbGlicy9saWJyZGthZmth
CiAgKiBQb3J0YWJsZTogcnVucyBvbiBMaW51eCwgT1NYLCBXaW4zMiwgU29s
YXJpcywgRnJlZUJTRCwgQUlYLCAuLi4KCiMgRG9jdW1lbnRhdGlvbgoKICog
UHVibGljIEFQSSBpbiBbQyBoZWFkZXJdKHNyYy9yZGthZmthLmgpIGFuZCBb
QysrIGhlYWRlcl0oc3JjLWNwcC9yZGthZmthY3BwLmgpLgogKiBJbnRyb2R1
Y3Rpb24gYW5kIG1hbnVhbCBpbiBbSU5UUk9EVUNUSU9OLm1kXShodHRwczov
L2dpdGh1Yi5jb20vZWRlbmhpbGwvbGlicmRrYWZrYS9ibG9iL21hc3Rlci9J
TlRST0RVQ1RJT04ubWQpLgogKiBDb25maWd1cmF0aW9uIHByb3BlcnRpZXMg
aW4KW0NPTkZJR1VSQVRJT04ubWRdKGh0dHBzOi8vZ2l0aHViLmNvbS9lZGVu
aGlsbC9saWJyZGthZmthL2Jsb2IvbWFzdGVyL0NPTkZJR1VSQVRJT04ubWQp
LgogKiBTdGF0aXN0aWNzIG1ldHJpY3MgaW4gW1NUQVRJU1RJQ1MubWRdKGh0
dHBzOi8vZ2l0aHViLmNvbS9lZGVuaGlsbC9saWJyZGthZmthL2Jsb2IvbWFz
dGVyL1NUQVRJU1RJQ1MubWQpLgogKiBbRnJlcXVlbnRseSBhc2tlZCBxdWVz
dGlvbnNdKGh0dHBzOi8vZ2l0aHViLmNvbS9lZGVuaGlsbC9saWJyZGthZmth
L3dpa2kpLgoKKipOT1RFKio6IFRoZSBgbWFzdGVyYCBicmFuY2ggaXMgYWN0
aXZlbHkgZGV2ZWxvcGVkLCB1c2UgbGF0ZXN0IFtyZWxlYXNlXShodHRwczov
L2dpdGh1Yi5jb20vZWRlbmhpbGwvbGlicmRrYWZrYS9yZWxlYXNlcykgZm9y
IHByb2R1Y3Rpb24gdXNlLgoKCiMgSW5zdGFsbGF0aW9uCgojIyBJbnN0YWxs
aW5nIHByZWJ1aWx0IHBhY2thZ2VzCgpPbiBNYWMgT1NYLCBpbnN0YWxsIGxp
YnJka2Fma2Egd2l0aCBob21lYnJldzoKCmBgYGJhc2gKJCBicmV3IGluc3Rh
bGwgbGlicmRrYWZrYQpgYGAKCk9uIERlYmlhbiBhbmQgVWJ1bnR1LCBpbnN0
YWxsIGxpYnJka2Fma2EgZnJvbSB0aGUgQ29uZmx1ZW50IEFQVCByZXBvc2l0
b3JpZXMsCnNlZSBpbnN0cnVjdGlvbnMgW2hlcmVdKGh0dHBzOi8vZG9jcy5j
b25mbHVlbnQuaW8vY3VycmVudC9pbnN0YWxsYXRpb24vaW5zdGFsbGluZ19j
cC9kZWItdWJ1bnR1Lmh0bWwjZ2V0LXRoZS1zb2Z0d2FyZSkgYW5kIHRoZW4g
aW5zdGFsbCBsaWJyZGthZmthOgoKIGBgYGJhc2gKICQgYXB0IGluc3RhbGwg
bGlicmRrYWZrYS1kZXYKIGBgYAoKT24gUmVkSGF0LCBDZW50T1MsIEZlZG9y
YSwgaW5zdGFsbCBsaWJyZGthZmthIGZyb20gdGhlIENvbmZsdWVudCBZVU0g
cmVwb3NpdG9yaWVzLAppbnN0cnVjdGlvbnMgW2hlcmVdKGh0dHBzOi8vZG9j
cy5jb25mbHVlbnQuaW8vY3VycmVudC9pbnN0YWxsYXRpb24vaW5zdGFsbGlu
Z19jcC9yaGVsLWNlbnRvcy5odG1sI2dldC10aGUtc29mdHdhcmUpIGFuZCB0
aGVuIGluc3RhbGwgbGlicmRrYWZrYToKCmBgYGJhc2gKJCB5dW0gaW5zdGFs
bCBsaWJyZGthZmthLWRldmVsCmBgYAoKT24gV2luZG93cywgcmVmZXJlbmNl
IFtsaWJyZGthZmthLnJlZGlzdF0oaHR0cHM6Ly93d3cubnVnZXQub3JnL3Bh
Y2thZ2VzL2xpYnJka2Fma2EucmVkaXN0LykgTnVHZXQgcGFja2FnZSBpbiB5
b3VyIFZpc3VhbCBTdHVkaW8gcHJvamVjdC4KCgpGb3Igb3RoZXIgcGxhdGZv
cm1zLCBmb2xsb3cgdGhlIHNvdXJjZSBidWlsZGluZyBpbnN0cnVjdGlvbnMg
YmVsb3cuCgoKIyMgQnVpbGQgZnJvbSBzb3VyY2UKCiMjIyBSZXF1aXJlbWVu
dHMKCVRoZSBHTlUgdG9vbGNoYWluCglHTlUgbWFrZQogICAJcHRocmVhZHMK
CXpsaWItZGV2IChvcHRpb25hbCwgZm9yIGd6aXAgY29tcHJlc3Npb24gc3Vw
cG9ydCkKCWxpYnNzbC1kZXYgKG9wdGlvbmFsLCBmb3IgU1NMIGFuZCBTQVNM
IFNDUkFNIHN1cHBvcnQpCglsaWJzYXNsMi1kZXYgKG9wdGlvbmFsLCBmb3Ig
U0FTTCBHU1NBUEkgc3VwcG9ydCkKCWxpYnpzdGQtZGV2IChvcHRpb25hbCwg
Zm9yIFpTdGQgY29tcHJlc3Npb24gc3VwcG9ydCkKCioqTk9URSoqOiBTdGF0
aWMgbGlua2luZyBvZiBaU3RkIChyZXF1aXJlcyB6c3RkID49IDEuMi4xKSBp
biB0aGUgcHJvZHVjZXIKICAgICAgICAgIGVuYWJsZXMgZW5jb2RpbmcgdGhl
IG9yaWdpbmFsIHNpemUgaW4gdGhlIGNvbXByZXNzaW9uIGZyYW1lIGhlYWRl
ciwKICAgICAgICAgIHdoaWNoIHdpbGwgc3BlZWQgdXAgdGhlIGNvbnN1bWVy
LgogICAgICAgICAgVXNlIGBTVEFUSUNfTElCX3pzdGQ9L3BhdGgvdG8vbGli
enN0ZC5hIC4vY29uZmlndXJlIC0tZW5hYmxlLXN0YXRpY2AKICAgICAgICAg
IHRvIGVuYWJsZSBzdGF0aWMgWlN0ZCBsaW5raW5nLgogICAgICAgICAgTWFj
T1NYIGV4YW1wbGU6CiAgICAgICAgICBgU1RBVElDX0xJQl96c3RkPSQoYnJl
dyBscyAtdiB6c3RkIHwgZ3JlcCBsaWJ6c3RkLmEkKSAuL2NvbmZpZ3VyZSAt
LWVuYWJsZS1zdGF0aWNgCgoKIyMjIEJ1aWxkaW5nCgogICAgICAuL2NvbmZp
Z3VyZQogICAgICAjIE9yLCB0byBhdXRvbWF0aWNhbGx5IGluc3RhbGwgZGVw
ZW5kZW5jaWVzIHVzaW5nIHRoZSBzeXN0ZW0ncyBwYWNrYWdlIG1hbmFnZXI6
CiAgICAgICMgLi9jb25maWd1cmUgLS1pbnN0YWxsLWRlcHMKICAgICAgIyBP
ciwgYnVpbGQgZGVwZW5kZW5jaWVzIGZyb20gc291cmNlOgogICAgICAjIC4v
Y29uZmlndXJlIC0taW5zdGFsbC1kZXBzIC0tc291cmNlLWRlcHMtb25seQoK
ICAgICAgbWFrZQogICAgICBzdWRvIG1ha2UgaW5zdGFsbAoKCioqTk9URSoq
OiBTZWUgW1JFQURNRS53aW4zMl0oUkVBRE1FLndpbjMyKSBmb3IgaW5zdHJ1
Y3Rpb25zIGhvdyB0byBidWlsZAogICAgICAgICAgb24gV2luZG93cyB3aXRo
IE1pY3Jvc29mdCBWaXN1YWwgU3R1ZGlvLgoKKipOT1RFKio6IFNlZSBbQ01h
a2UgaW5zdHJ1Y3Rpb25zXShwYWNrYWdpbmcvY21ha2UvUkVBRE1FLm1kKSBm
b3IgZXhwZXJpbWVudGFsCiAgICAgICAgICBDTWFrZSBidWlsZCAodW5zdXBw
b3J0ZWQpLgoKCiMjIFVzYWdlIGluIGNvZGUKCjEuIFJlZmVyIHRvIHRoZSBb
ZXhhbXBsZXMgZGlyZWN0b3J5XShleGFtcGxlcy8pIGZvciBjb2RlIHVzaW5n
OgoKKiBQcm9kdWNlcnM6IGJhc2ljIHByb2R1Y2VycywgaWRlbXBvdGVudCBw
cm9kdWNlcnMKKiBDb25zdW1lcnM6IGJhc2ljIGNvbnN1bWVycywgcmVhZGlu
ZyBiYXRjaGVzIG9mIG1lc3NhZ2VzCiogUGVyZm9ybWFuY2UgdGVzdGVyCgoy
LiBSZWZlciB0byB0aGUgW2V4YW1wbGVzIEdpdEh1YiByZXBvXShodHRwczov
L2dpdGh1Yi5jb20vY29uZmx1ZW50aW5jL2V4YW1wbGVzL3RyZWUvbWFzdGVy
L2NsaWVudHMvY2xvdWQvYykgZm9yIGNvZGUgY29ubmVjdGluZyB0byBhIGNs
b3VkIHN0cmVhbWluZyBkYXRhIHNlcnZpY2UgYmFzZWQgb24gQXBhY2hlIEth
ZmthCgozLiBMaW5rIHlvdXIgcHJvZ3JhbSB3aXRoIGAtbHJka2Fma2FgIChD
KSBvciBgLWxyZGthZmthKytgIChDKyspLgoKCiMjIENvbW1lcmNpYWwgc3Vw
cG9ydAoKQ29tbWVyY2lhbCBzdXBwb3J0IGlzIGF2YWlsYWJsZSBmcm9tIFtD
b25mbHVlbnQgSW5jXShodHRwczovL3d3dy5jb25mbHVlbnQuaW8vKQoKCiMj
IENvbW11bml0eSBzdXBwb3J0CgoqKk9ubHkgdGhlIFtsYXN0IG9mZmljaWFs
IHJlbGVhc2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9lZGVuaGlsbC9saWJyZGth
ZmthL3JlbGVhc2VzKSBpcyBzdXBwb3J0ZWQgZm9yIGNvbW11bml0eSBtZW1i
ZXJzLioqCgpGaWxlIGJ1ZyByZXBvcnRzLCBmZWF0dXJlIHJlcXVlc3RzIGFu
ZCBxdWVzdGlvbnMgdXNpbmcKW0dpdEh1YiBJc3N1ZXNdKGh0dHBzOi8vZ2l0
aHViLmNvbS9lZGVuaGlsbC9saWJyZGthZmthL2lzc3VlcykKClF1ZXN0aW9u
cyBhbmQgZGlzY3Vzc2lvbnMgYXJlIGFsc28gd2VsY29tZSBvbiB0aGUgW0Nv
bmZsdWVudCBDb21tdW5pdHkgc2xhY2tdKGh0dHBzOi8vbGF1bmNocGFzcy5j
b20vY29uZmx1ZW50Y29tbXVuaXR5KSAjY2xpZW50cyBjaGFubmVsLCBvciBp
cmMuZnJlZW5vZGUub3JnICNhcGFjaGUta2Fma2EgY2hhbm5lbC4KCgojIExh
bmd1YWdlIGJpbmRpbmdzICMKCiAgKiBDIy8uTkVUOiBbY29uZmx1ZW50LWth
ZmthLWRvdG5ldF0oaHR0cHM6Ly9naXRodWIuY29tL2NvbmZsdWVudGluYy9j
b25mbHVlbnQta2Fma2EtZG90bmV0KSAoYmFzZWQgb24gW3Jka2Fma2EtZG90
bmV0XShodHRwczovL2dpdGh1Yi5jb20vYWgtL3Jka2Fma2EtZG90bmV0KSkK
ICAqIEMrKzogW2NwcGthZmthXShodHRwczovL2dpdGh1Yi5jb20vbWZvbnRh
bmluaS9jcHBrYWZrYSkKICAqIENvbW1vbiBMaXNwOiBbY2wtcmRrYWZrYV0o
aHR0cHM6Ly9naXRodWIuY29tL1NhaGlsS2FuZy9jbC1yZGthZmthKQogICog
RCAoQy1saWtlKTogW2xpYnJka2Fma2FdKGh0dHBzOi8vZ2l0aHViLmNvbS9E
bGFuZ0FwYWNoZS9saWJyZGthZmthLykKICAqIEQgKEMrKy1saWtlKTogW2xp
YnJka2Fma2FkXShodHRwczovL2dpdGh1Yi5jb20vdGFtZWRpYWRpZ2l0YWwv
bGlicmRrYWZrYS1kKQogICogRXJsYW5nOiBbZXJsa2FmXShodHRwczovL2dp
dGh1Yi5jb20vc2lsdml1Y3BwL2VybGthZikKICAqIEdvOiBbY29uZmx1ZW50
LWthZmthLWdvXShodHRwczovL2dpdGh1Yi5jb20vY29uZmx1ZW50aW5jL2Nv
bmZsdWVudC1rYWZrYS1nbykKICAqIEhhc2tlbGwgKGthZmthLCBjb25kdWl0
LCBhdnJvLCBzY2hlbWEgcmVnaXN0cnkpOiBbaHcta2Fma2FdKGh0dHBzOi8v
Z2l0aHViLmNvbS9oYXNrZWxsLXdvcmtzL2h3LWthZmthKQogICogTHVhOiBb
bHVhcmRrYWZrYV0oaHR0cHM6Ly9naXRodWIuY29tL21pc3Rzdi9sdWFyZGth
ZmthKQogICogTm9kZS5qczogW25vZGUtcmRrYWZrYV0oaHR0cHM6Ly9naXRo
dWIuY29tL0JsaXp6YXJkL25vZGUtcmRrYWZrYSkKICAqIE9DYW1sOiBbb2Nh
bWwta2Fma2FdKGh0dHBzOi8vZ2l0aHViLmNvbS9kaWRpZXItd2VuemVrL29j
YW1sLWthZmthKQogICogUGVybDogW05ldDo6S2Fma2FdKGh0dHBzOi8vZ2l0
aHViLmNvbS9ib29raW5nY29tL3BlcmwtTmV0LUthZmthKQogICogUEhQOiBb
cGhwa2Fma2FdKGh0dHBzOi8vZ2l0aHViLmNvbS9FVk9EZWxhdmVnYS9waHBr
YWZrYSkKICAqIFBIUDogW3BocC1yZGthZmthXShodHRwczovL2dpdGh1Yi5j
b20vYXJuYXVkLWxiL3BocC1yZGthZmthKQogICogUHl0aG9uOiBbY29uZmx1
ZW50LWthZmthLXB5dGhvbl0oaHR0cHM6Ly9naXRodWIuY29tL2NvbmZsdWVu
dGluYy9jb25mbHVlbnQta2Fma2EtcHl0aG9uKQogICogUHl0aG9uOiBbUHlL
YWZrYV0oaHR0cHM6Ly9naXRodWIuY29tL1BhcnNlbHkvcHlrYWZrYSkKICAq
IFJ1Ynk6IFtIZXJtYW5uXShodHRwczovL2dpdGh1Yi5jb20vcmVpc2VidXJv
L2hlcm1hbm4pCiAgKiBSdWJ5OiBbcmRrYWZrYS1ydWJ5XShodHRwczovL2dp
dGh1Yi5jb20vYXBwc2lnbmFsL3Jka2Fma2EtcnVieSkKICAqIFJ1c3Q6IFty
dXN0LXJka2Fma2FdKGh0dHBzOi8vZ2l0aHViLmNvbS9mZWRlMTAyNC9ydXN0
LXJka2Fma2EpCiAgKiBUY2w6IFtLYWZrYVRjbF0oaHR0cHM6Ly9naXRodWIu
Y29tL2ZsaWdodGF3YXJlL2thZmthdGNsKQogICogU3dpZnQ6IFtQZXJmZWN0
LUthZmthXShodHRwczovL2dpdGh1Yi5jb20vUGVyZmVjdGx5U29mdC9QZXJm
ZWN0LUthZmthKQoKIyBVc2VycyBvZiBsaWJyZGthZmthICMKCiAgKiBba2Fm
a2FjYXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9lZGVuaGlsbC9rYWZrYWNhdCkg
LSBBcGFjaGUgS2Fma2Egc3dpc3MgYXJteSBrbmlmZQogICogW1dpa2ltZWRp
YSdzIHZhcm5pc2hrYWZrYV0oaHR0cHM6Ly9naXRodWIuY29tL3dpa2ltZWRp
YS92YXJuaXNoa2Fma2EpIC0gVmFybmlzaCBjYWNoZSB3ZWIgbG9nIHByb2R1
Y2VyCiAgKiBbV2lraW1lZGlhJ3Mga2Fma2F0ZWVdKGh0dHBzOi8vZ2l0aHVi
LmNvbS93aWtpbWVkaWEvYW5hbHl0aWNzLWthZmthdGVlKSAtIEthZmthIG11
bHRpIGNvbnN1bWVyIHdpdGggZmlsdGVyaW5nIGFuZCBmYW5vdXQKICAqIFty
c3lzbG9nXShodHRwczovL3d3dy5yc3lzbG9nLmNvbSkKICAqIFtzeXNsb2ct
bmddKGh0dHBzOi8vd3d3LnN5c2xvZy1uZy5jb20pCiAgKiBbY29sbGVjdGRd
KGh0dHBzOi8vY29sbGVjdGQub3JnKQogICogW2xvZ2thZmthXShodHRwczov
L2dpdGh1Yi5jb20vUWlob28zNjAvbG9na2Fma2EpIC0gQ29sbGVjdCBsb2dz
IGFuZCBzZW5kIHRvIEthZmthCiAgKiBbcmVkQm9yZGVyXShodHRwczovL3Jl
ZGJvcmRlci5jb20pCiAgKiBbSGVhZHdlYl0oaHR0cDovL3d3dy5oZWFkd2Vi
LmNvbS8pCiAgKiBbUHJvZHViYW4ncyBsb2cya2Fma2FdKGh0dHBzOi8vZ2l0
aHViLmNvbS9Qcm9kdWJhbi9sb2cya2Fma2EpIC0gV2ViIGxvZyBwcm9kdWNl
cgogICogW2Z1c2Vfa2Fma2FdKGh0dHBzOi8vZ2l0aHViLmNvbS95YXpnb28v
ZnVzZV9rYWZrYSkgLSBGVVNFIGZpbGUgc3lzdGVtIGxheWVyCiAgKiBbbm9k
ZS1rYWZrYWNhdF0oaHR0cHM6Ly9naXRodWIuY29tL1JhZmZsZWNvcHRlci9u
b2RlLWthZmthY2F0KQogICogW09WSF0oaHR0cHM6Ly9vdmguY29tKSAtIFtB
bnRpRERPU10oaHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvaHVnZnJhbmNl
L2h1Z2ZyLTYtb2N0MjAxNG92aGFudGlkZG9zKQogICogW290dG8uZGVdKGh0
dHBzOi8vd3d3Lm90dG8uZGUpJ3MgW3RyYWNrZHJkXShodHRwczovL2dpdGh1
Yi5jb20vb3R0by1kZS90cmFja3JkcmQpIC0gVmFybmlzaCBsb2cgcmVhZGVy
CiAgKiBbTWljcm93aXNoXShodHRwczovL2dpdGh1Yi5jb20vbWljcm93aXNo
KSBoYXMgYSByYW5nZSBvZiBLYWZrYSB1dGlsaXRlcyBmb3IgbG9nIGFnZ3Jl
Z2F0aW9uLCBIREZTIGludGVncmF0aW9uLCBldGMuCiAgKiBbYWlkcF0oaHR0
cHM6Ly9naXRodWIuY29tL3dlaWJvYWQvYWlkcCkgLSBrYWZrYSBjb25zdW1l
ciBlbWJlZGRlZCBMdWEgc2NyaXB0aW5nIGxhbmd1YWdlIGluIGRhdGEgcHJv
Y2VzcyBmcmFtZXdvcmsKICAqIFtZYW5kZXggQ2xpY2tIb3VzZV0oaHR0cHM6
Ly9naXRodWIuY29tL3lhbmRleC9DbGlja0hvdXNlKQogICogW05YTG9nXSho
dHRwczovL254bG9nLmNvLykgLSBFbnRlcnByaXNlIGxvZ2dpbmcgc3lzdGVt
LCBLYWZrYSBpbnB1dC9vdXRwdXQgcGx1Z2luLgogICogbGFyZ2UgdW5uYW1l
ZCBmaW5hbmNpYWwgaW5zdGl0dXRpb25zCiAgKiBhbmQgbWFueSBtb3JlLi4K
ICAqICpMZXQgW21lXShtYWlsdG86cmRrYWZrYUBlZGVuaGlsbC5zZSkga25v
dyBpZiB5b3UgYXJlIHVzaW5nIGxpYnJka2Fma2EqCg==
",,3724,"bGFuZ3VhZ2U6IGMKZGlzdDogdHJ1c3R5CnN1ZG86IGZhbHNlCmNhY2hlOiBj
Y2FjaGUKZW52OgogZ2xvYmFsOgogIC0gQVJDSD14NjQKbWF0cml4OgogaW5j
bHVkZToKIC0gbmFtZTogIkxpbnV4IEdDQzogK2NlbnRvcyArZGViaWFuIgog
ICBvczogbGludXgKICAgY29tcGlsZXI6IGdjYwogICBlbnY6IEFERElUSU9O
QUxfQlVJTERTPSJjZW50b3MgZGViaWFuIgogICBiZWZvcmVfc2NyaXB0Ogog
ICAgLSAuL2NvbmZpZ3VyZSAtLWluc3RhbGwtZGVwcyAtLWRpc2FibGUtbHo0
LWV4dCAtLXByZWZpeD0iJFBXRC9kZXN0IgogLSBuYW1lOiAiTGludXggY2xh
bmc6ICthbHBpbmUiCiAgIG9zOiBsaW51eAogICBjb21waWxlcjogY2xhbmcK
ICAgZW52OiBBRERJVElPTkFMX0JVSUxEUz0iYWxwaW5lIgogICBiZWZvcmVf
c2NyaXB0OgogICAgLSAuL2NvbmZpZ3VyZSAtLWluc3RhbGwtZGVwcyAtLWRp
c2FibGUtbHo0LWV4dCAtLXByZWZpeD0iJFBXRC9kZXN0IgogLSBuYW1lOiAi
T1NYIEdDQyIKICAgb3M6IG9zeAogICBjb21waWxlcjogZ2NjCiAgIGJlZm9y
ZV9zY3JpcHQ6CiAgICAtIC4vY29uZmlndXJlIC0taW5zdGFsbC1kZXBzIC0t
ZGlzYWJsZS1sejQtZXh0IC0tcHJlZml4PSIkUFdEL2Rlc3QiCiAtIG5hbWU6
ICJPU1ggY2xhbmc6ICtzdGF0aWMiCiAgIG9zOiBvc3gKICAgY29tcGlsZXI6
IGNsYW5nCiAgIGJlZm9yZV9zY3JpcHQ6CiAgICAtIC4vY29uZmlndXJlIC0t
aW5zdGFsbC1kZXBzIC0tZGlzYWJsZS1sejQtZXh0IC0tcHJlZml4PSIkUFdE
L2Rlc3QiIC0tZW5hYmxlLXN0YXRpYwogLSBuYW1lOiAiTGludXggR0NDOiAr
aW50ZWdyYXRpb24tdGVzdHMgK2NvcHlyaWdodC1jaGVjayArZG9jLWNoZWNr
IgogICBvczogbGludXgKICAgZGlzdDogeGVuaWFsCiAgIGNvbXBpbGVyOiBn
Y2MKICAgZW52OiBOT19BUlRJRkFDVFM9eSBSVU5fSU5URUdSQVRJT05fVEVT
VFM9eSBDT1BZUklHSFRfQ0hFQ0s9eSBET0NfQ0hFQ0s9eQogICBiZWZvcmVf
c2NyaXB0OgogICAgLSB3Z2V0IC1PIHJhcGlkanNvbi1kZXYuZGViIGh0dHBz
Oi8vbGF1bmNocGFkLm5ldC91YnVudHUvK2FyY2hpdmUvcHJpbWFyeS8rZmls
ZXMvcmFwaWRqc29uLWRldl8xLjEuMCtkZnNnMi0zX2FsbC5kZWIKICAgIC0g
c3VkbyBkcGtnIC1pIHJhcGlkanNvbi1kZXYuZGViCiAgICAtIHN1ZG8gcGlw
IGluc3RhbGwgLXIgdGVzdHMvcmVxdWlyZW1lbnRzLnR4dAogICAgLSBzdWRv
IGFwdCB1cGRhdGUKICAgIC0gc3VkbyBhcHQgaW5zdGFsbCAteSBkb3h5Z2Vu
IGdyYXBodml6CiAgICAtIC4vY29uZmlndXJlIC0taW5zdGFsbC1kZXBzIC0t
ZGlzYWJsZS1sejQtZXh0IC0tcHJlZml4PSIkUFdEL2Rlc3QiCgppbnN0YWxs
OgogLSBjY2FjaGUgLXMgfHwgZWNobyAiQ0NhY2hlIGlzIG5vdCBhdmFpbGFi
bGUuIgogLSBybSAtcmYgYXJ0aWZhY3RzIGRlc3QKIC0gbWtkaXIgZGVzdCBh
cnRpZmFjdHMKCmJlZm9yZV9zY3JpcHQ6CnNjcmlwdDoKLSBtYWtlIC1qMiBh
bGwgZXhhbXBsZXMgY2hlY2sgJiYgbWFrZSAtajIgLUMgdGVzdHMgYnVpbGQK
LSBpZiBbWyAkUlVOX0lOVEVHUkFUSU9OX1RFU1RTICE9IHkgXV07IHRoZW4g
bWFrZSAtQyB0ZXN0cyBydW5fbG9jYWwgOyBmaQotIG1ha2UgaW5zdGFsbAot
IGlmIFtbIC16ICROT19BUlRJRkFDVFMgXV07IHRoZW4gKGNkIGRlc3QgJiYg
dGFyIGN2emYgLi4vYXJ0aWZhY3RzL2xpYnJka2Fma2EtJHtDQ30udGFyLmd6
IC4pIDsgZmkKLSBmb3IgZGlzdHJvIGluICRBRERJVElPTkFMX0JVSUxEUyA7
IGRvIHBhY2thZ2luZy90b29scy9kaXN0cm8tYnVpbGQuc2ggJGRpc3RybyB8
fCBleGl0IDEgOyBkb25lCi0gaWYgW1sgJENPUFlSSUdIVF9DSEVDSyA9PSB5
IF1dOyB0aGVuIG1ha2UgY29weXJpZ2h0LWNoZWNrIDsgZmkKLSBpZiBbWyAk
RE9DX0NIRUNLID09IHkgXV07IHRoZW4gbWFrZSBkb2NzIDsgZmkKLSBpZiBb
WyAkUlVOX0lOVEVHUkFUSU9OX1RFU1RTID09IHkgXV07IHRoZW4gKGNkIHRl
c3RzICYmIC4vaW50ZXJhY3RpdmVfYnJva2VyX3ZlcnNpb24ucHkgLWMgIm1h
a2UgcXVpY2siIDIuMy4wKSA7IGZpCgpkZXBsb3k6CiAgcHJvdmlkZXI6IHMz
CiAgYWNjZXNzX2tleV9pZDoKICAgIHNlY3VyZTogIm04RlFyRmVzSzB4U1Mx
d0hvMlM3Y3VXa3BPN1ZCOTFkQm1qMVhJWUxSWFpTa2JNcEtCSkFUY0ZjSE5i
ckFwM3NsRXA3d0xBblQ3Q0hyUTRjY1FpNEg2OFo3bWpFd2RxNFZLUkUrN3px
Si9mZUs4TU9GTmVTSFdMUXpnd0xVWWxSbGM5K3R6TE53eE11TDJpbFdnZGpL
T0Fyc1VWSG85TEVLTmZRM1Q2ekNKVT0iCiAgc2VjcmV0X2FjY2Vzc19rZXk6
CiAgICBzZWN1cmU6ICJHRTZPMGdrNVZSZXJ2bnRDS0FtY3pmQmRTT3Zicjli
b3VKMTVIMnJwY09nSGk4S1RERWpJL05TNjllTGlSUlNIQkNBUnRjUnFONHdm
Z3krL2RuN0QxVmtsWThhMXJBS3UwMndHancrZnE3azdHVlNTbXluUi9hRjYx
OVI0U0lBQnNhQWhOQ3dzd1huTEh1TGxxOEhGazV1bEczejhEVXZZQmN6QjQ1
YldaZlE9IgogIGJ1Y2tldDogbGlicmRrYWZrYS1jaS1wYWNrYWdlcwogIHJl
Z2lvbjogdXMtd2VzdC0xCiAgc2tpcF9jbGVhbnVwOiB0cnVlCiAgbG9jYWwt
ZGlyOiBhcnRpZmFjdHMKICB1cGxvYWQtZGlyOiBsaWJyZGthZmthL3AtbGli
cmRrYWZrYV9fYmxkLXRyYXZpc19fcGxhdC0ke1RSQVZJU19PU19OQU1FfV9f
YXJjaC0ke0FSQ0h9X190YWctJHtUUkFWSVNfVEFHfV9fc2hhLSR7VFJBVklT
X0NPTU1JVH1fX2JpZC0ke1RSQVZJU19KT0JfTlVNQkVSfQogIG9uOgogICAg
cmVwbzogZWRlbmhpbGwvbGlicmRrYWZrYQogICAgYWxsX2JyYW5jaGVzOiB0
cnVlCiAgICB0YWdzOiB0cnVlCiAgICBvbjogJE5PX0FSVElGQUNUUyAhPSB5
Cg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'awesome-honeypots',37659549,b'an awesome list of honeypot resources',b'Python',6,3724,,306,False,b'https://api.github.com/repos/paralax/awesome-honeypots/forks',"IyBBd2Vzb21lIEhvbmV5cG90cyBbIVtBd2Vzb21lIEhvbmV5cG90c10oaHR0
cHM6Ly9jZG4ucmF3Z2l0LmNvbS9zaW5kcmVzb3JodXMvYXdlc29tZS9kNzMw
NWYzOGQyOWZlZDc4ZmE4NTY1MmUzYTYzZTE1NGRkOGU4ODI5L21lZGlhL2Jh
ZGdlLnN2ZyldKGh0dHBzOi8vZ2l0aHViLmNvbS9zaW5kcmVzb3JodXMvYXdl
c29tZSkKCkEgY3VyYXRlZCBsaXN0IG9mIGF3ZXNvbWUgaG9uZXlwb3RzLCBw
bHVzIHJlbGF0ZWQgY29tcG9uZW50cyBhbmQgbXVjaCBtb3JlLCBkaXZpZGVk
IGludG8gY2F0ZWdvcmllcyBzdWNoIGFzIFdlYiwgc2VydmljZXMsIGFuZCBv
dGhlcnMsIHdpdGggYSBmb2N1cyBvbiBmcmVlIGFuZCBvcGVuIHNvdXJjZSBw
cm9qZWN0cy4KClRoZXJlIGlzIG5vIHByZS1lc3RhYmxpc2hlZCBvcmRlciBv
ZiBpdGVtcyBpbiBlYWNoIGNhdGVnb3J5LCB0aGUgb3JkZXIgaXMgZm9yIGNv
bnRyaWJ1dGlvbi4gSWYgeW91IHdhbnQgdG8gY29udHJpYnV0ZSwgcGxlYXNl
IHJlYWQgdGhlIFtndWlkZV0oQ09OVFJJQlVUSU5HLm1kKS4KCkRpc2NvdmVy
IG1vcmUgYXdlc29tZSBsaXN0cyBhdCBbc2luZHJlc29yaHVzL2F3ZXNvbWVd
KGh0dHBzOi8vZ2l0aHViLmNvbS9zaW5kcmVzb3JodXMvYXdlc29tZSkuCgoj
IENvbnRlbnRzCgotIFtSZWxhdGVkIExpc3RzXSgjcmVsYXRlZC1saXN0cykK
LSBbSG9uZXlwb3RzXSgjaG9uZXlwb3RzKQotIFtIb25leWQgVG9vbHNdKCNo
b25leWQtdG9vbHMpCi0gW05ldHdvcmsgYW5kIEFydGlmYWN0IEFuYWx5c2lz
XSgjbmV0d29yay1hbmQtYXJ0aWZhY3QtYW5hbHlzaXMpCi0gW0RhdGEgVG9v
bHNdKCNkYXRhLXRvb2xzKQotIFtHdWlkZXNdKCNndWlkZXMpCgojIyBSZWxh
dGVkIExpc3RzCgotIFthd2Vzb21lLXBjYXB0b29sc10oaHR0cHM6Ly9naXRo
dWIuY29tL2NhZXNhcjAzMDEvYXdlc29tZS1wY2FwdG9vbHMpIC0gVXNlZnVs
IGluIG5ldHdvcmsgdHJhZmZpYyBhbmFseXNpcy4KLSBbYXdlc29tZS1tYWx3
YXJlLWFuYWx5c2lzXShodHRwczovL2dpdGh1Yi5jb20vcnNoaXBwL2F3ZXNv
bWUtbWFsd2FyZS1hbmFseXNpcykgLSBTb21lIG92ZXJsYXAgaGVyZSBmb3Ig
YXJ0aWZhY3QgYW5hbHlzaXMuCgojIyBIb25leXBvdHMKCi0gRGF0YWJhc2Ug
SG9uZXlwb3RzCiAgICAtIFtEZWxpbGFoXShodHRwczovL2dpdGh1Yi5jb20v
U2VjdXJpdHlUVy9kZWxpbGFoKSAtIEVsYXN0aWNzZWFyY2ggSG9uZXlwb3Qg
d3JpdHRlbiBpbiBQeXRob24gKG9yaWdpbmFsbHkgZnJvbSBOb3ZldHRhKS4K
ICAgIC0gW0VTUG90XShodHRwczovL2dpdGh1Yi5jb20vbXljZXJ0L0VTUG90
KSAtIEVsYXN0aWNzZWFyY2ggaG9uZXlwb3Qgd3JpdHRlbiBpbiBOb2RlSlMs
IHRvIGNhcHR1cmUgZXZlcnkgYXR0ZW1wdHMgdG8gZXhwbG9pdCBDVkUtMjAx
NC0zMTIwLgogICAgLSBbRWxhc3RpYyBob25leV0oaHR0cHM6Ly9naXRodWIu
Y29tL2pvcmRhbi13cmlnaHQvZWxhc3RpY2hvbmV5KSAtIFNpbXBsZSBFbGFz
dGljc2VhcmNoIEhvbmV5cG90LgogICAgLSBbSG9uZXlNeXNxbF0oaHR0cHM6
Ly9naXRodWIuY29tL3hpYW94aWFvbGVvL0hvbmV5TXlzcWwpIC0gU2ltcGxl
IE15c3FsIGhvbmV5cG90IHByb2plY3QuCiAgICAtIFtNb25nb0RCLUhvbmV5
UHJveHldKGh0dHBzOi8vZ2l0aHViLmNvbS9QbGF6bWF6L01vbmdvREItSG9u
ZXlQcm94eSkgLSBNb25nb0RCIGhvbmV5cG90IHByb3h5LgogICAgLSBbTW9u
Z29EQi1Ib25leVByb3h5UHldKGh0dHBzOi8vZ2l0aHViLmNvbS9qd3hhMjAx
NS9Nb25nb0RCLUhvbmV5UHJveHlQeSkgLSBNb25nb0RCIGhvbmV5cG90IHBy
b3h5IGJ5IHB5dGhvbjMuCiAgICAtIFtOb1NRTHBvdF0oaHR0cHM6Ly9naXRo
dWIuY29tL3RvcnF1ZTU5L25vc3FscG90KSAtIEhvbmV5cG90IGZyYW1ld29y
ayBidWlsdCBvbiBhIE5vU1FMLXN0eWxlIGRhdGFiYXNlLgogICAgLSBbbXlz
cWwtaG9uZXlwb3RkXShodHRwczovL2dpdGh1Yi5jb20vc2ppbmtzL215c3Fs
LWhvbmV5cG90ZCkgLSBMb3cgaW50ZXJhY3Rpb24gTXlTUUwgaG9uZXlwb3Qg
d3JpdHRlbiBpbiBDLgogICAgLSBbTXlzcWxQb3RdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9zY2htYWxsZS9NeXNxbFBvdCkgLSBNeVNRTCBob25leXBvdCwgc3Rp
bGwgdmVyeSBlYXJseSBzdGFnZS4KICAgIC0gW3BnaG9uZXldKGh0dHBzOi8v
Z2l0aHViLmNvbS9iZXRoZXJvb3QvcGdob25leSkgLSBMb3ctaW50ZXJhY3Rp
b24gUG9zdGdyZXMgSG9uZXlwb3QuCiAgICAtIFtzdGlja3lfZWxlcGhhbnRd
KGh0dHBzOi8vZ2l0aHViLmNvbS9iZXRoZXJvb3Qvc3RpY2t5X2VsZXBoYW50
KSAtIE1lZGl1bSBpbnRlcmFjdGlvbiBwb3N0Z3Jlc3FsIGhvbmV5cG90LgoK
LSBXZWIgaG9uZXlwb3RzCiAgICAtIFtCdWtraXQgSG9uZXlwb3RdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9BcmdvbWlyci9Ib25leXBvdCkgLSBIb25leXBvdCBw
bHVnaW4gZm9yIEJ1a2tpdC4KICAgIC0gW0VvSG9uZXlwb3RCdW5kbGVdKGh0
dHBzOi8vZ2l0aHViLmNvbS9leW1lbmd1bmF5L0VvSG9uZXlwb3RCdW5kbGUp
IC0gSG9uZXlwb3QgdHlwZSBmb3IgU3ltZm9ueTIgZm9ybXMuCiAgICAtIFtH
bGFzdG9wZl0oaHR0cHM6Ly9naXRodWIuY29tL211c2hvcmcvZ2xhc3RvcGYp
IC0gV2ViIEFwcGxpY2F0aW9uIEhvbmV5cG90LgogICAgLSBbR29vZ2xlIEhh
Y2sgSG9uZXlwb3RdKGh0dHA6Ly9naGguc291cmNlZm9yZ2UubmV0KSAtIERl
c2lnbmVkIHRvIHByb3ZpZGUgcmVjb25uYWlzc2FuY2UgYWdhaW5zdCBhdHRh
Y2tlcnMgdGhhdCB1c2Ugc2VhcmNoIGVuZ2luZXMgYXMgYSBoYWNraW5nIHRv
b2wgYWdhaW5zdCB5b3VyIHJlc291cmNlcy4KICAgIC0gW0xhcmF2ZWwgQXBw
bGljYXRpb24gSG9uZXlwb3RdKGh0dHBzOi8vZ2l0aHViLmNvbS9tc3VyZ3V5
L0hvbmV5cG90KSAtIFNpbXBsZSBzcGFtIHByZXZlbnRpb24gcGFja2FnZSBm
b3IgTGFyYXZlbCBhcHBsaWNhdGlvbnMuCiAgICAtIFtOb2RlcG90XShodHRw
czovL2dpdGh1Yi5jb20vc2NobWFsbGUvTm9kZXBvdCkgLSBOb2RlSlMgd2Vi
IGFwcGxpY2F0aW9uIGhvbmV5cG90LgogICAgLSBbU2VydmxldHBvdF0oaHR0
cHM6Ly9naXRodWIuY29tL3NjaG1hbGxlL3NlcnZsZXRwb3QpIC0gV2ViIGFw
cGxpY2F0aW9uIEhvbmV5cG90LgogICAgLSBbU2hhZG93IERhZW1vbl0oaHR0
cHM6Ly9zaGFkb3dkLnplY3VyZS5vcmcvb3ZlcnZpZXcvaW50cm9kdWN0aW9u
LykgLSBNb2R1bGFyIFdlYiBBcHBsaWNhdGlvbiBGaXJld2FsbCAvIEhpZ2gt
SW50ZXJhY3Rpb24gSG9uZXlwb3QgZm9yIFBIUCwgUGVybCwgYW5kIFB5dGhv
biBhcHBzLgogICAgLSBbU3RydXRzSG9uZXlwb3RdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9DeW1tZXRyaWEvU3RydXRzSG9uZXlwb3QpIC0gU3RydXRzIEFwYWNo
ZSAyIGJhc2VkIGhvbmV5cG90IGFzIHdlbGwgYXMgYSBkZXRlY3Rpb24gbW9k
dWxlIGZvciBBcGFjaGUgMiBzZXJ2ZXJzLgogICAgLSBbV2ViVHJhcF0oaHR0
cHM6Ly9naXRodWIuY29tL0lsbHVzaXZlTmV0d29ya3MtTGFicy9XZWJUcmFw
KSAtIERlc2lnbmVkIHRvIGNyZWF0ZSBkZWNlcHRpdmUgd2VicGFnZXMgdG8g
ZGVjZWl2ZSBhbmQgcmVkaXJlY3QgYXR0YWNrZXJzIGF3YXkgZnJvbSByZWFs
IHdlYnNpdGVzLgogICAgLSBbYmFzaWMtYXV0aC1wb3QgKGJhcCldKGh0dHBz
Oi8vZ2l0aHViLmNvbS9iamVib3JuL2Jhc2ljLWF1dGgtcG90KSAtIEhUVFAg
QmFzaWMgQXV0aGVudGljYXRpb24gaG9uZXlwb3QuCiAgICAtIFtid3BvdF0o
aHR0cHM6Ly9naXRodWIuY29tL2dyYW5lZWQvYndwb3QpIC0gQnJlYWthYmxl
IFdlYiBhcHBsaWNhdGlvbnMgaG9uZXlQb3QuCiAgICAtIFtkamFuZ28tYWRt
aW4taG9uZXlwb3RdKGh0dHBzOi8vZ2l0aHViLmNvbS9kbXBheXRvbi9kamFu
Z28tYWRtaW4taG9uZXlwb3QpIC0gRmFrZSBEamFuZ28gYWRtaW4gbG9naW4g
c2NyZWVuIHRvIG5vdGlmeSBhZG1pbnMgb2YgYXR0ZW1wdGVkIHVuYXV0aG9y
aXplZCBhY2Nlc3MuCiAgICAtIFtkcnVwb10oaHR0cHM6Ly9naXRodWIuY29t
L2Qxc3RyMC9kcnVwb3QpIC0gRHJ1cGFsIEhvbmV5cG90LgogICAgLSBbaG9u
ZXlodHRwZF0oaHR0cHM6Ly9naXRodWIuY29tL2JvY2Fqc3BlYXIxL2hvbmV5
aHR0cGQpIC0gUHl0aG9uLWJhc2VkIHdlYiBzZXJ2ZXIgaG9uZXlwb3QgYnVp
bGRlci4KICAgIC0gW3BocG15YWRtaW5faG9uZXlwb3RdKGh0dHBzOi8vZ2l0
aHViLmNvbS9nZm9zcy9waHBteWFkbWluX2hvbmV5cG90KSAtIFNpbXBsZSBh
bmQgZWZmZWN0aXZlIHBocE15QWRtaW4gaG9uZXlwb3QuCiAgICAtIFtzaG9j
a3BvdF0oaHR0cHM6Ly9naXRodWIuY29tL3RocmVhdHN0cmVhbS9zaG9ja3Bv
dCkgLSBXZWJBcHAgSG9uZXlwb3QgZm9yIGRldGVjdGluZyBTaGVsbCBTaG9j
ayBleHBsb2l0IGF0dGVtcHRzLgogICAgLSBbc21hcnQtaG9uZXlwb3RdKGh0
dHBzOi8vZ2l0aHViLmNvbS9mcmVhazNkb3Qvc21hcnQtaG9uZXlwb3QpIC0g
UEhQIFNjcmlwdCBkZW1vbnN0cmF0aW5nIGEgc21hcnQgaG9uZXkgcG90Lgog
ICAgLSBTbmFyZS9UYW5uZXIgLSBzdWNjZXNzb3JzIHRvIEdsYXN0b3BmCiAg
ICAgICAgLSBbU25hcmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdXNob3JnL3Nu
YXJlKSAtIFN1cGVyIE5leHQgZ2VuZXJhdGlvbiBBZHZhbmNlZCBSZWFjdGl2
ZSBob25leXBvdC4KICAgICAgICAtIFtUYW5uZXJdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9tdXNob3JnL3Rhbm5lcikgLSBFdmFsdWF0aW5nIFNOQVJFIGV2ZW50
cy4KICAgIC0gW3N0YWNrLWhvbmV5cG90XShodHRwczovL2dpdGh1Yi5jb20v
Q0hIL3N0YWNrLWhvbmV5cG90KSAtIEluc2VydHMgYSB0cmFwIGZvciBzcGFt
IGJvdHMgaW50byByZXNwb25zZXMuCiAgICAtIFt0b21jYXQtbWFuYWdlci1o
b25leXBvdF0oaHR0cHM6Ly9naXRodWIuY29tL2hlbG9zcGFyay90b21jYXQt
bWFuYWdlci1ob25leXBvdCkgLSBIb25leXBvdCB0aGF0IG1pbWljcyBUb21j
YXQgbWFuYWdlciBlbmRwb2ludHMuIExvZ3MgcmVxdWVzdHMgYW5kIHNhdmVz
IGF0dGFja2VyJ3MgV0FSIGZpbGUgZm9yIGxhdGVyIHN0dWR5CiAgICAtIFdv
cmRQcmVzcyBob25leXBvdHMKICAgICAgICAtIFtIb25ueVBvdHRlcl0oaHR0
cHM6Ly9naXRodWIuY29tL01hcnRpbkluZ2VzZW4vSG9ubnlQb3R0ZXIpIC0g
V29yZFByZXNzIGxvZ2luIGhvbmV5cG90IGZvciBjb2xsZWN0aW9uIGFuZCBh
bmFseXNpcyBvZiBmYWlsZWQgbG9naW4gYXR0ZW1wdHMuCiAgICAgICAgLSBb
SG9uZXlQcmVzc10oaHR0cHM6Ly9naXRodWIuY29tL2R1c3R5ZnJlc2gvSG9u
ZXlQcmVzcykgLSBQeXRob24gYmFzZWQgV29yZFByZXNzIGhvbmV5cG90IGlu
IGEgRG9ja2VyIGNvbnRhaW5lci4KICAgICAgICAtIFt3cC1zbWFydC1ob25l
eXBvdF0oaHR0cHM6Ly9naXRodWIuY29tL2ZyZWFrM2RvdC93cC1zbWFydC1o
b25leXBvdCkgLSBXb3JkUHJlc3MgcGx1Z2luIHRvIHJlZHVjZSBjb21tZW50
IHNwYW0gd2l0aCBhIHNtYXJ0ZXIgaG9uZXlwb3QuCiAgICAgICAgLSBbd29y
ZHBvdF0oaHR0cHM6Ly9naXRodWIuY29tL2dicmluZGlzaS93b3JkcG90KSAt
IFdvcmRQcmVzcyBIb25leXBvdC4KCi0gU2VydmljZSBIb25leXBvdHMKICAg
IC0gW0FEQkhvbmV5XShodHRwczovL2dpdGh1Yi5jb20vaHV1Y2svQURCSG9u
ZXkpIC0gTG93IGludGVyYWN0aW9uIGhvbmV5cG90IHRoYXQgc2ltdWxhdGVz
IGFuIEFuZHJvaWQgZGV2aWNlIHJ1bm5pbmcgQW5kcm9pZCBEZWJ1ZyBCcmlk
Z2UgKEFEQikgc2VydmVyIHByb2Nlc3MuIAogICAgLSBbQU1USG9uZXlwb3Rd
KGh0dHBzOi8vZ2l0aHViLmNvbS9wYWNrZXRmbGFyZS9hbXRob25leXBvdCkg
LSBIb25leXBvdCBmb3IgSW50ZWwncyBBTVQgRmlybXdhcmUgVnVsbmVyYWJp
bGl0eSBDVkUtMjAxNy01Njg5LgogICAgLSBbRW5zbmFyZV0oaHR0cHM6Ly9n
aXRodWIuY29tL2Fob2VybmVja2UvZW5zbmFyZSkgLSBFYXN5IHRvIGRlcGxv
eSBSdWJ5IGhvbmV5cG90LgogICAgLSBbSG9uZXlQeV0oaHR0cHM6Ly9naXRo
dWIuY29tL2Zvb3NwaWR5L0hvbmV5UHkpIC0gTG93IGludGVyYWN0aW9uIGhv
bmV5cG90LgogICAgLSBbSG9uZXlncm92ZV0oaHR0cHM6Ly9naXRodWIuY29t
L1VISC1JU1MvaG9uZXlncm92ZSkgLSBNdWx0aS1wdXJwb3NlIG1vZHVsYXIg
aG9uZXlwb3QgYmFzZWQgb24gVHdpc3RlZC4KICAgIC0gW0hvbmV5cG9ydF0o
aHR0cHM6Ly9naXRodWIuY29tL3NlY3VyaXR5Z2VuZXJhdGlvbi9Ib25leXBv
cnQpIC0gU2ltcGxlIGhvbmV5cG9ydCB3cml0dGVuIGluIEJhc2ggYW5kIFB5
dGhvbi4KICAgIC0gW0hvbmV5cHJpbnRdKGh0dHBzOi8vZ2l0aHViLmNvbS9n
bGFzbG9zL2hvbmV5cHJpbnQpIC0gUHJpbnRlciBob25leXBvdC4KICAgIC0g
W0x5cmViaXJkXShodHRwczovL2h1Yi5kb2NrZXIuY29tL3IvbHlyZWJpcmQv
aG9uZXlwb3QtYmFzZS8pIC0gTW9kZXJuIGhpZ2gtaW50ZXJhY3Rpb24gaG9u
ZXlwb3QgZnJhbWV3b3JrLgogICAgLSBbTUlDUk9TIGhvbmV5cG90XShodHRw
czovL2dpdGh1Yi5jb20vQ3ltbWV0cmlhL21pY3Jvc19ob25leXBvdCkgLSAg
TG93IGludGVyYWN0aW9uIGhvbmV5cG90IHRvIGRldGVjdCBDVkUtMjAxOC0y
NjM2IGluIHRoZSBPcmFjbGUgSG9zcGl0YWxpdHkgU2ltcGhvbnkgY29tcG9u
ZW50IG9mIE9yYWNsZSBIb3NwaXRhbGl0eSBBcHBsaWNhdGlvbnMgKE1JQ1JP
UykuCiAgICAtIFtSRFB5XShodHRwczovL2dpdGh1Yi5jb20vY2l0cm9ubmV1
ci9yZHB5KSAtIE1pY3Jvc29mdCBSZW1vdGUgRGVza3RvcCBQcm90b2NvbCAo
UkRQKSBob25leXBvdCBpbXBsZW1lbnRlZCBpbiBQeXRob24uCiAgICAtIFtT
TUIgSG9uZXlwb3RdKGh0dHBzOi8vZ2l0aHViLmNvbS9yMGhpNy9Ib25leVNN
QikgLSBIaWdoIGludGVyYWN0aW9uIFNNQiBzZXJ2aWNlIGhvbmV5cG90IGNh
cGFibGUgb2YgY2FwdHVyaW5nIHdhbm5hY3J5LWxpa2UgTWFsd2FyZS4KICAg
IC0gW1RvbSdzIEhvbmV5cG90XShodHRwczovL2dpdGh1Yi5jb20vaW5ndWFy
ZGlhbnMvdG9tc19ob25leXBvdCkgLSBMb3cgaW50ZXJhY3Rpb24gUHl0aG9u
IGhvbmV5cG90LgogICAgLSBbV2ViTG9naWMgaG9uZXlwb3RdKGh0dHBzOi8v
Z2l0aHViLmNvbS9DeW1tZXRyaWEvd2VibG9naWNfaG9uZXlwb3QpIC0gTG93
IGludGVyYWN0aW9uIGhvbmV5cG90IHRvIGRldGVjdCBDVkUtMjAxNy0xMDI3
MSBpbiB0aGUgT3JhY2xlIFdlYkxvZ2ljIFNlcnZlciBjb21wb25lbnQgb2Yg
T3JhY2xlIEZ1c2lvbiBNaWRkbGV3YXJlLgogICAgLSBbV2hpdGVGYWNlIEhv
bmV5cG90XShodHRwczovL2dpdGh1Yi5jb20vY3NpcnRnYWRnZXRzL2NzaXJ0
Zy1ob25leXBvdCkgLSBUd2lzdGVkIGJhc2VkIGhvbmV5cG90IGZvciBXaGl0
ZUZhY2UuCiAgICAtIFtob25leWNvbWJfcGx1Z2luc10oaHR0cHM6Ly9naXRo
dWIuY29tL0N5bW1ldHJpYS9ob25leWNvbWJfcGx1Z2lucykgLSBQbHVnaW4g
cmVwb3NpdG9yeSBmb3IgSG9uZXljb21iLCB0aGUgaG9uZXlwb3QgZnJhbWV3
b3JrIGJ5IEN5bW1ldHJpYS4KICAgIC0gW2hvbmV5bnRwXShodHRwczovL2dp
dGh1Yi5jb20vZnlncmF2ZS9ob25leW50cCkgLSBOVFAgbG9nZ2VyL2hvbmV5
cG90LgogICAgLSBbaG9uZXlwb3QtY2FtZXJhXShodHRwczovL2dpdGh1Yi5j
b20vYWxleGJyZWRvL2hvbmV5cG90LWNhbWVyYSkgLSBPYnNlcnZhdGlvbiBj
YW1lcmEgaG9uZXlwb3QuCiAgICAtIFtob25leXBvdC1mdHBdKGh0dHBzOi8v
Z2l0aHViLmNvbS9hbGV4YnJlZG8vaG9uZXlwb3QtZnRwKSAtIEZUUCBIb25l
eXBvdC4KICAgIC0gW2hvbmV5dHJhcF0oaHR0cHM6Ly9naXRodWIuY29tL2hv
bmV5dHJhcC9ob25leXRyYXApIC0gQWR2YW5jZWQgSG9uZXlwb3QgZnJhbWV3
b3JrIHdyaXR0ZW4gaW4gR28gdGhhdCBjYW4gYmUgY29ubmVjdGVkIHdpdGgg
b3RoZXIgaG9uZXlwb3Qgc29mdHdhcmUuCiAgICAtIFtweXJkcF0oaHR0cHM6
Ly9naXRodWIuY29tL2dvc2VjdXJlL3B5cmRwKSAtIFJEUCBtYW4taW4tdGhl
LW1pZGRsZSBhbmQgbGlicmFyeSBmb3IgUHl0aG9uIDMgd2l0aCB0aGUgYWJp
bGl0eSB0byB3YXRjaCBjb25uZWN0aW9ucyBsaXZlIG9yIGFmdGVyIHRoZSBm
YWN0LgogICAgLSBbdHJvamVdKGh0dHBzOi8vZ2l0aHViLmNvbS9kdXRjaGNv
ZGVycy90cm9qZS8pIC0gSG9uZXlwb3QgdGhhdCBydW5zIGVhY2ggY29ubmVj
dGlvbiB3aXRoIHRoZSBzZXJ2aWNlIHdpdGhpbiBhIHNlcGVyYXRlIExYQyBj
b250YWluZXIuCgotIERpc3RyaWJ1dGVkIEhvbmV5cG90cwogICAgLSBbRGVt
b25IdW50ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9SZXZlbmdlQ29taW5nL0Rl
bW9uSHVudGVyKSAtIExvdyBpbnRlcmFjdGlvbiBob25leXBvdCBzZXJ2ZXIu
CgotIEFudGktaG9uZXlwb3Qgc3R1ZmYKICAgIC0gW2tpcHBvX2RldGVjdF0o
aHR0cHM6Ly9naXRodWIuY29tL2FuZHJldy1tb3JyaXMva2lwcG9fZGV0ZWN0
KSAtIE9mZmVuc2l2ZSBjb21wb25lbnQgdGhhdCBkZXRlY3RzIHRoZSBwcmVz
ZW5jZSBvZiB0aGUga2lwcG8gaG9uZXlwb3QuCgotIElDUy9TQ0FEQSBob25l
eXBvdHMKICAgIC0gW0NvbnBvdF0oaHR0cHM6Ly9naXRodWIuY29tL211c2hv
cmcvY29ucG90KSAtIElDUy9TQ0FEQSBob25leXBvdC4KICAgIC0gW0dhc1Bv
dF0oaHR0cHM6Ly9naXRodWIuY29tL3NqaGlsdC9HYXNQb3QpIC0gVmVlZGVy
IFJvb3QgR2F1cmRpYW4gQVNULCBjb21tb24gaW4gdGhlIG9pbCBhbmQgZ2Fz
IGluZHVzdHJ5LgogICAgLSBbU0NBREEgaG9uZXluZXRdKGh0dHA6Ly9zY2Fk
YWhvbmV5bmV0LnNvdXJjZWZvcmdlLm5ldCkgLSBCdWlsZGluZyBIb25leXBv
dHMgZm9yIEluZHVzdHJpYWwgTmV0d29ya3MuCiAgICAtIFtncmlkcG90XSho
dHRwczovL2dpdGh1Yi5jb20vc2s0bGQvZ3JpZHBvdCkgLSBPcGVuIHNvdXJj
ZSB0b29scyBmb3IgcmVhbGlzdGljLWJlaGF2aW5nIGVsZWN0cmljIGdyaWQg
aG9uZXluZXRzLgogICAgLSBbc2NhZGEtaG9uZXluZXRdKGh0dHA6Ly93d3cu
ZGlnaXRhbGJvbmQuY29tL2Jsb2cvMjAwNy8wNy8yNC9zY2FkYS1ob25leW5l
dC1hcnRpY2xlLWluLWluZnJhZ2FyZC1wdWJsaWNhdGlvbi8pIC0gTWltaWNz
IG1hbnkgb2YgdGhlIHNlcnZpY2VzIGZyb20gYSBwb3B1bGFyIFBMQyBhbmQg
YmV0dGVyIGhlbHBzIFNDQURBIHJlc2VhcmNoZXJzIHVuZGVyc3RhbmQgcG90
ZW50aWFsIHJpc2tzIG9mIGV4cG9zZWQgY29udHJvbCBzeXN0ZW0gZGV2aWNl
cy4KCi0gT3RoZXIvcmFuZG9tCiAgICAtIFtEYW1uIFNpbXBsZSBIb25leXBv
dCAoRFNIUCldKGh0dHBzOi8vZ2l0aHViLmNvbS9uYW9ybGl2bmUvZHNocCkg
LSBIb25leXBvdCBmcmFtZXdvcmsgd2l0aCBwbHVnZ2FibGUgaGFuZGxlcnMu
CiAgICAtIFtOT1ZBXShodHRwczovL2dpdGh1Yi5jb20vRGF0YVNvZnQvTm92
YSkgLSBVc2VzIGhvbmV5cG90cyBhcyBkZXRlY3RvcnMsIGxvb2tzIGxpa2Ug
YSBjb21wbGV0ZSBzeXN0ZW0uCiAgICAtIFtPcGVuRmxvdyBIb25leXBvdCAo
T0ZQb3QpXShodHRwczovL2dpdGh1Yi5jb20vdXBhL29mcG90KSAtIFJlZGly
ZWN0cyB0cmFmZmljIGZvciB1bnVzZWQgSVBzIHRvIGEgaG9uZXlwb3QsIGJ1
aWx0IG9uIFBPWC4KICAgIC0gW09wZW5DYW5hcnldKGh0dHBzOi8vZ2l0aHVi
LmNvbS90aGlua3N0L29wZW5jYW5hcnkpIC0gTW9kdWxhciBhbmQgZGVjZW50
cmFsaXNlZCBob25leXBvdCBkYWVtb24gdGhhdCBydW5zIHNldmVyYWwgY2Fu
YXJ5IHZlcnNpb25zIG9mIHNlcnZpY2VzIHRoYXQgYWxlcnRzIHdoZW4gYSBz
ZXJ2aWNlIGlzIChhYil1c2VkLgogICAgLSBbY2lzY29hc2FfaG9uZXlwb3Rd
KGh0dHBzOi8vZ2l0aHViLmNvbS9jeW1tZXRyaWEvY2lzY29hc2FfaG9uZXlw
b3QpIEEgbG93IGludGVyYWN0aW9uIGhvbmV5cG90IGZvciB0aGUgQ2lzY28g
QVNBIGNvbXBvbmVudCBjYXBhYmxlIG9mIGRldGVjdGluZyBDVkUtMjAxOC0w
MTAxLCBhIERvUyBhbmQgcmVtb3RlIGNvZGUgZXhlY3V0aW9uIHZ1bG5lcmFi
aWxpdHkuIAogICAgLSBbbWluaXByaW50XShodHRwczovL2dpdGh1Yi5jb20v
c2E3bW9uL21pbmlwcmludCkgLSBBIG1lZGl1bSBpbnRlcmFjdGlvbiBwcmlu
dGVyIGhvbmV5cG90LgoKLSBCb3RuZXQgQzIgdG9vbHMKICAgIC0gW0hhbGVd
KGh0dHBzOi8vZ2l0aHViLmNvbS9wamxhbnR6L0hhbGUpIC0gQm90bmV0IGNv
bW1hbmQgYW5kIGNvbnRyb2wgbW9uaXRvci4KICAgIC0gW2Ruc01vbGVdKGh0
dHBzOi8vY29kZS5nb29nbGUuY29tL2FyY2hpdmUvcC9kbnMtbW9sZS8pIC0g
QW5hbHlzZXMgRE5TIHRyYWZmaWMgYW5kIHBvdGVudGlvbmFseSBkZXRlY3Qg
Ym90bmV0IGNvbW1hbmQgYW5kIGNvbnRyb2wgc2VydmVyIGFjdGl2aXR5LCBh
bG9uZyB3aXRoIGluZmVjdGVkIGhvc3RzLgoKLSBJUHY2IGF0dGFjayBkZXRl
Y3Rpb24gdG9vbAogICAgLSBbaXB2Ni1hdHRhY2stZGV0ZWN0b3JdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9tendlaWxpbi9pcHY2LWF0dGFjay1kZXRlY3Rvci8p
IC0gR29vZ2xlIFN1bW1lciBvZiBDb2RlIDIwMTIgcHJvamVjdCwgc3VwcG9y
dGVkIGJ5IFRoZSBIb25leW5ldCBQcm9qZWN0IG9yZ2FuaXphdGlvbi4KCi0g
RHluYW1pYyBjb2RlIGluc3RydW1lbnRhdGlvbiB0b29sa2l0CiAgICAtIFtG
cmlkYV0oaHR0cHM6Ly93d3cuZnJpZGEucmUpIC0gSW5qZWN0IEphdmFTY3Jp
cHQgdG8gZXhwbG9yZSBuYXRpdmUgYXBwcyBvbiBXaW5kb3dzLCBNYWMsIExp
bnV4LCBpT1MgYW5kIEFuZHJvaWQuCgotIFRvb2wgdG8gY29udmVydCB3ZWJz
aXRlIHRvIHNlcnZlciBob25leXBvdHMKICAgIC0gW0hJSEFUXShodHRwOi8v
aGloYXQuc291cmNlZm9yZ2UubmV0LykgLSBUcmFuc2Zvcm0gYXJiaXRyYXJ5
IFBIUCBhcHBsaWNhdGlvbnMgaW50byB3ZWItYmFzZWQgaGlnaC1pbnRlcmFj
dGlvbiBIb25leXBvdHMuCgotIE1hbHdhcmUgY29sbGVjdG9yCiAgICAtIFtL
aXBwby1NYWx3YXJlXShodHRwczovL2JydXRlZm9yY2VsYWIuY29tL2tpcHBv
LW1hbHdhcmUpIC0gUHl0aG9uIHNjcmlwdCB0aGF0IHdpbGwgZG93bmxvYWQg
YWxsIG1hbGljaW91cyBmaWxlcyBzdG9yZWQgYXMgVVJMcyBpbiBhIEtpcHBv
IFNTSCBob25leXBvdCBkYXRhYmFzZS4KCi0gRGlzdHJpYnV0ZWQgc2Vuc29y
IGRlcGxveW1lbnQKICAgIC0gW01vZGVybiBIb25leSBOZXR3b3JrXShodHRw
czovL2dpdGh1Yi5jb20vdGhyZWF0c3RyZWFtL21obikgLSBNdWx0aS1zbm9y
dCBhbmQgaG9uZXlwb3Qgc2Vuc29yIG1hbmFnZW1lbnQsIHVzZXMgYSBuZXR3
b3JrIG9mIFZNcywgc21hbGwgZm9vdHByaW50IFNOT1JUIGluc3RhbGxhdGlv
bnMsIHN0ZWFsdGh5IGRpb25hZWFzLCBhbmQgYSBjZW50cmFsaXplZCBzZXJ2
ZXIgZm9yIG1hbmFnZW1lbnQuCgotIE5ldHdvcmsgQW5hbHlzaXMgVG9vbAog
ICAgLSBbVHJhY2V4cGxvaXRdKGh0dHBzOi8vY29kZS5nb29nbGUuY29tL2Fy
Y2hpdmUvcC90cmFjZXhwbG9pdC8pIC0gUmVwbGF5IG5ldHdvcmsgcGFja2V0
cy4KCi0gTG9nIGFub255bWl6ZXIKICAgIC0gW0xvZ0Fub25dKGh0dHA6Ly9j
b2RlLmdvb2dsZS5jb20vYXJjaGl2ZS9wL2xvZ2Fub24vKSAtIExvZyBhbm9u
eW1pemF0aW9uIGxpYnJhcnkgdGhhdCBoZWxwcyBoYXZpbmcgYW5vbnltb3Vz
IGxvZ3MgY29uc2lzdGVudCBiZXR3ZWVuIGxvZ3MgYW5kIG5ldHdvcmsgY2Fw
dHVyZXMuCgotIExvdyBpbnRlcmFjdGlvbiBob25leXBvdCAocm91dGVyIGJh
Y2sgZG9vcikKICAgIC0gW0hvbmV5cG90LTMyNzY0XShodHRwczovL2dpdGh1
Yi5jb20va25hbGxpL2hvbmV5cG90LWZvci10Y3AtMzI3NjQpIC0gSG9uZXlw
b3QgZm9yIHJvdXRlciBiYWNrZG9vciAoVENQIDMyNzY0KS4KICAgIC0gW1dB
UG90XShodHRwczovL2dpdGh1Yi5jb20vbGNhc2hkb2wvV0FQb3QpIC0gSG9u
ZXlwb3QgdGhhdCBjYW4gYmUgdXNlZCB0byBvYnNlcnZlIHRyYWZmaWMgZGly
ZWN0ZWQgYXQgaG9tZSByb3V0ZXJzLgoKLSBob25leW5ldCBmYXJtIHRyYWZm
aWMgcmVkaXJlY3RvcgogICAgLSBbSG9uZXltb2xlXShodHRwczovL3dlYi5h
cmNoaXZlLm9yZy93ZWIvMjAxMDAzMjYwNDA1NTAvaHR0cDovL3d3dy5ob25l
eW5ldC5vcmcucHQ6ODAvaW5kZXgucGhwL0hvbmV5TW9sZSkgLSBEZXBsb3kg
bXVsdGlwbGUgc2Vuc29ycyB0aGF0IHJlZGlyZWN0IHRyYWZmaWMgdG8gYSBj
ZW50cmFsaXplZCBjb2xsZWN0aW9uIG9mIGhvbmV5cG90cy4KCi0gSFRUUFMg
UHJveHkKICAgIC0gW21pdG1wcm94eV0oaHR0cHM6Ly9taXRtcHJveHkub3Jn
LykgLSBBbGxvd3MgdHJhZmZpYyBmbG93cyB0byBiZSBpbnRlcmNlcHRlZCwg
aW5zcGVjdGVkLCBtb2RpZmllZCwgYW5kIHJlcGxheWVkLgoKLSBTeXN0ZW0g
aW5zdHJ1bWVudGF0aW9uCiAgICAtIFtTeXNkaWddKGh0dHBzOi8vc3lzZGln
LmNvbS9vcGVuc291cmNlLykgLSBPcGVuIHNvdXJjZSwgc3lzdGVtLWxldmVs
IGV4cGxvcmF0aW9uIGFsbG93cyBvbmUgdG8gY2FwdHVyZSBzeXN0ZW0gc3Rh
dGUgYW5kIGFjdGl2aXR5IGZyb20gYSBydW5uaW5nIEdOVS9MaW51eCBpbnN0
YW5jZSwgdGhlbiBzYXZlLCBmaWx0ZXIsIGFuZCBhbmFseXplIHRoZSByZXN1
bHRzLgogICAgLSBbRmlicmF0dXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9yYWJi
aXRzdGFjay9maWJyYXR1cykgLSBUb29sIGZvciBleHBsb3JhdGlvbiBhbmQg
dHJhY2luZyBvZiB0aGUgV2luZG93cyBrZXJuZWwuCgotIEhvbmV5cG90IGZv
ciBVU0Itc3ByZWFkaW5nIG1hbHdhcmUKICAgIC0gW0dob3N0LXVzYl0oaHR0
cHM6Ly9naXRodWIuY29tL2hvbmV5bmV0L2dob3N0LXVzYi1ob25leXBvdCkg
LSBIb25leXBvdCBmb3IgbWFsd2FyZSB0aGF0IHByb3BhZ2F0ZXMgdmlhIFVT
QiBzdG9yYWdlIGRldmljZXMuCgotIERhdGEgQ29sbGVjdGlvbgogICAgLSBb
S2lwcG8yTXlTUUxdKGh0dHBzOi8vYnJ1dGVmb3JjZWxhYi5jb20va2lwcG8y
bXlzcWwpIC0gRXh0cmFjdHMgc29tZSB2ZXJ5IGJhc2ljIHN0YXRzIGZyb20g
S2lwcG/igJlzIHRleHQtYmFzZWQgbG9nIGZpbGVzIGFuZCBpbnNlcnRzIHRo
ZW0gaW4gYSBNeVNRTCBkYXRhYmFzZS4KICAgIC0gW0tpcHBvMkVsYXN0aWNT
ZWFyY2hdKGh0dHBzOi8vYnJ1dGVmb3JjZWxhYi5jb20va2lwcG8yZWxhc3Rp
Y3NlYXJjaCkgLSBQeXRob24gc2NyaXB0IHRvIHRyYW5zZmVyIGRhdGEgZnJv
bSBhIEtpcHBvIFNTSCBob25leXBvdCBNeVNRTCBkYXRhYmFzZSB0byBhbiBF
bGFzdGljU2VhcmNoIGluc3RhbmNlIChzZXJ2ZXIgb3IgY2x1c3RlcikuCgot
IFBhc3NpdmUgbmV0d29yayBhdWRpdCBmcmFtZXdvcmsgcGFyc2VyCiAgICAt
IFtQYXNzaXZlIE5ldHdvcmsgQXVkaXQgRnJhbWV3b3JrIChwbmFmKV0oaHR0
cHM6Ly9naXRodWIuY29tL2p1c2FmaW5nL3BuYWYpIC0gRnJhbWV3b3JrIHRo
YXQgY29tYmluZXMgbXVsdGlwbGUgcGFzc2l2ZSBhbmQgYXV0b21hdGVkIGFu
YWx5c2lzIHRlY2huaXF1ZXMgaW4gb3JkZXIgdG8gcHJvdmlkZSBhIHNlY3Vy
aXR5IGFzc2Vzc21lbnQgb2YgbmV0d29yayBwbGF0Zm9ybXMuCgotIFZNIG1v
bml0b3JpbmcgYW5kIHRvb2xzCiAgICAtIFtBbnRpdm1kZXRlY3RdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9uc21mb28vYW50aXZtZGV0ZWN0aW9uKSAtIFNjcmlw
dCB0byBjcmVhdGUgdGVtcGxhdGVzIHRvIHVzZSB3aXRoIFZpcnR1YWxCb3gg
dG8gbWFrZSBWTSBkZXRlY3Rpb24gaGFyZGVyLgogICAgLSBbVk1DbG9ha10o
aHR0cHM6Ly9naXRodWIuY29tL2hhdGNoaW5nL3ZtY2xvYWspIC0gQXV0b21h
dGVkIFZpcnR1YWwgTWFjaGluZSBHZW5lcmF0aW9uIGFuZCBDbG9ha2luZyBm
b3IgQ3Vja29vIFNhbmRib3guCiAgICAtIFt2bWl0b29sc10oaHR0cDovL2xp
YnZtaS5jb20vKSAtIEMgbGlicmFyeSB3aXRoIFB5dGhvbiBiaW5kaW5ncyB0
aGF0IG1ha2VzIGl0IGVhc3kgdG8gbW9uaXRvciB0aGUgbG93LWxldmVsIGRl
dGFpbHMgb2YgYSBydW5uaW5nIHZpcnR1YWwgbWFjaGluZS4KCi0gQmluYXJ5
IGRlYnVnZ2VyCiAgICAtIFtIZXhnb2xlbXMgLSBQaW50IERlYnVnZ2VyIEJh
Y2tlbmRdKGh0dHBzOi8vZ2l0aHViLmNvbS9oZXhnb2xlbXMvcGludCkgLSBE
ZWJ1Z2dlciBiYWNrZW5kIGFuZCBMVUEgd3JhcHBlciBmb3IgUElOLgogICAg
LSBbSGV4Z29sZW1zIC0gU2NoZW0gRGVidWdnZXIgRnJvbnRlbmRdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9oZXhnb2xlbXMvc2NoZW0pIC0gRGVidWdnZXIgZnJv
bnRlbmQuCgotIE1vYmlsZSBBbmFseXNpcyBUb29sCiAgICAtIFtBbmRyb2d1
YXJkXShodHRwczovL2dpdGh1Yi5jb20vYW5kcm9ndWFyZC9hbmRyb2d1YXJk
KSAtIFJldmVyc2UgZW5naW5lZXJpbmcsIE1hbHdhcmUgYW5kIGdvb2R3YXJl
IGFuYWx5c2lzIG9mIEFuZHJvaWQgYXBwbGljYXRpb25zIGFuZCBtb3JlLgog
ICAgLSBbQVBLaW5zcGVjdG9yXShodHRwczovL2dpdGh1Yi5jb20vaG9uZXlu
ZXQvYXBraW5zcGVjdG9yLykgLSBQb3dlcmZ1bCBHVUkgdG9vbCBmb3IgYW5h
bHlzdHMgdG8gYW5hbHl6ZSB0aGUgQW5kcm9pZCBhcHBsaWNhdGlvbnMuCgot
IExvdyBpbnRlcmFjdGlvbiBob25leXBvdAogICAgLSBbSG9uZXlwZXJsXSho
dHRwczovL3NvdXJjZWZvcmdlLm5ldC9wcm9qZWN0cy9ob25leXBlcmwvKSAt
IEhvbmV5cG90IHNvZnR3YXJlIGJhc2VkIGluIFBlcmwgd2l0aCBwbHVnaW5z
IGRldmVsb3BlZCBmb3IgbWFueSBmdW5jdGlvbnMgbGlrZSA6IHdpbmdhdGVz
LCB0ZWxuZXQsIHNxdWlkLCBzbXRwLCBldGMuCiAgICAtIFtULVBvdF0oaHR0
cHM6Ly9naXRodWIuY29tL2R0YWctZGV2LXNlYy90cG90Y2UpIC0gQWxsIGlu
IG9uZSBob25leXBvdCBhcHBsaWFuY2UgZnJvbSB0ZWxlY29tIHByb3ZpZGVy
IFQtTW9iaWxlCgotIEhvbmV5bmV0IGRhdGEgZnVzaW9uCiAgICAtIFtIRmxv
dzJdKGh0dHBzOi8vcHJvamVjdHMuaG9uZXluZXQub3JnL2hmbG93KSAtIERh
dGEgY29hbGVzaW5nIHRvb2wgZm9yIGhvbmV5bmV0L25ldHdvcmsgYW5hbHlz
aXMuCgotIFNlcnZlcgogICAgLSBbQW11bl0oaHR0cDovL2FtdW5ob25leS5z
b3VyY2Vmb3JnZS5uZXQpIC0gVnVsbmVyYWJpbGl0eSBlbXVsYXRpb24gaG9u
ZXlwb3QuCiAgICAtIFtBcnRpbGxlcnldKGh0dHBzOi8vZ2l0aHViLmNvbS90
cnVzdGVkc2VjL2FydGlsbGVyeS8pIC0gT3Blbi1zb3VyY2UgYmx1ZSB0ZWFt
IHRvb2wgZGVzaWduZWQgdG8gcHJvdGVjdCBMaW51eCBhbmQgV2luZG93cyBv
cGVyYXRpbmcgc3lzdGVtcyB0aHJvdWdoIG11bHRpcGxlIG1ldGhvZHMuCiAg
ICAtIFtCYWl0IGFuZCBTd2l0Y2hdKGh0dHA6Ly9iYWl0bnN3aXRjaC5zb3Vy
Y2Vmb3JnZS5uZXQpIC0gUmVkaXJlY3RzIGFsbCBob3N0aWxlIHRyYWZmaWMg
dG8gYSBob25leXBvdCB0aGF0IGlzIHBhcnRpYWxseSBtaXJyb3JpbmcgeW91
ciBwcm9kdWN0aW9uIHN5c3RlbS4KICAgIC0gW0JpZnJvenRdKGh0dHBzOi8v
Z2l0aHViLmNvbS9aaWVtZWNrL2JpZnJvenQtYW5zaWJsZSkgLSBBdXRvbWF0
aWMgZGVwbG95IGJpZnJvenQgd2l0aCBhbnNpYmxlLgogICAgLSBbQ29ucG90
XShodHRwOi8vY29ucG90Lm9yZy8pIC0gTG93IGludGVyYWN0aXZlIHNlcnZl
ciBzaWRlIEluZHVzdHJpYWwgQ29udHJvbCBTeXN0ZW1zIGhvbmV5cG90Lgog
ICAgLSBbSGVyYWxkaW5nXShodHRwczovL2dpdGh1Yi5jb20vam9obm55a3Yv
aGVyYWxkaW5nKSAtIENyZWRlbnRpYWxzIGNhdGNoaW5nIGhvbmV5cG90Lgog
ICAgLSBbSG9uZXlXUlRdKGh0dHBzOi8vZ2l0aHViLmNvbS9DYW5hZGlhbkpl
ZmYvaG9uZXl3cnQpIC0gTG93IGludGVyYWN0aW9uIFB5dGhvbiBob25leXBv
dCBkZXNpZ25lZCB0byBtaW1pYyBzZXJ2aWNlcyBvciBwb3J0cyB0aGF0IG1p
Z2h0IGdldCB0YXJnZXRlZCBieSBhdHRhY2tlcnMuCiAgICAtIFtIb25leWRd
KGh0dHBzOi8vZ2l0aHViLmNvbS9wcm92b3MvaG9uZXlkKSAtIFNlZSBbaG9u
ZXlkIHRvb2xzXSgjaG9uZXlkLXRvb2xzKS4KICAgIC0gW0hvbmV5c2lua10o
aHR0cDovL3d3dy5ob25leW5ldC5vcmcvbm9kZS83NzMpIC0gT3BlbiBzb3Vy
Y2UgbmV0d29yayBzaW5raG9sZSB0aGF0IHByb3ZpZGVzIGEgbWVjaGFuaXNt
IGZvciBkZXRlY3Rpb24gYW5kIHByZXZlbnRpb24gb2YgbWFsaWNpb3VzIHRy
YWZmaWMgb24gYSBnaXZlbiBuZXR3b3JrLgogICAgLSBbSG9udGVsXShodHRw
czovL2dpdGh1Yi5jb20vc3RhbXBhcm0vaG9udGVsKSAtIFRlbG5ldCBIb25l
eXBvdC4KICAgIC0gW0tGU2Vuc29yXShodHRwOi8vd3d3LmtleWZvY3VzLm5l
dC9rZnNlbnNvci8pIC0gV2luZG93cyBiYXNlZCBob25leXBvdCBJbnRydXNp
b24gRGV0ZWN0aW9uIFN5c3RlbSAoSURTKS4KICAgIC0gW0xhQnJlYV0oaHR0
cDovL2xhYnJlYS5zb3VyY2Vmb3JnZS5uZXQvbGFicmVhLWluZm8uaHRtbCkg
LSBUYWtlcyBvdmVyIHVudXNlZCBJUCBhZGRyZXNzZXMsIGFuZCBjcmVhdGVz
IHZpcnR1YWwgc2VydmVycyB0aGF0IGFyZSBhdHRyYWN0aXZlIHRvIHdvcm1z
LCBoYWNrZXJzLCBhbmQgb3RoZXIgZGVuaXplbnMgb2YgdGhlIEludGVybmV0
LgogICAgLSBbTVRQb3RdKGh0dHBzOi8vZ2l0aHViLmNvbS9DeW1tZXRyaWEv
TVRQb3QpIC0gT3BlbiBTb3VyY2UgVGVsbmV0IEhvbmV5cG90LCBmb2N1c2Vk
IG9uIE1pcmFpIG1hbHdhcmUuCiAgICAtIFtTSVJFTl0oaHR0cHM6Ly9naXRo
dWIuY29tL2JsYXZlcmljazYyL1NJUkVOKSAtIFNlbWktSW50ZWxsaWdlbnQg
SG9uZXlQb3QgTmV0d29yayAtIEhvbmV5TmV0IEludGVsbGlnZW50IFZpcnR1
YWwgRW52aXJvbm1lbnQuCiAgICAtIFtUZWxuZXRIb25leV0oaHR0cHM6Ly9n
aXRodWIuY29tL2JhbHRlL1RlbG5ldEhvbmV5KSAtIFNpbXBsZSB0ZWxuZXQg
aG9uZXlwb3QuCiAgICAtIFtVRFBvdCBIb25leXBvdF0oaHR0cHM6Ly9naXRo
dWIuY29tL2pla2lsL1VEUG90KSAtIFNpbXBsZSBVRFAvRE5TIGhvbmV5cG90
IHNjcmlwdHMuCiAgICAtIFtZZXQgQW5vdGhlciBGYWtlIEhvbmV5cG90IChZ
QUZIKV0oaHR0cHM6Ly9naXRodWIuY29tL2ZuenYvWUFGSCkgLSBTaW1wbGUg
aG9uZXlwb3Qgd3JpdHRlbiBpbiBHby4KICAgIC0gW2FyY3RpYy1zd2FsbG93
XShodHRwczovL2dpdGh1Yi5jb20vYWphY2thbC9hcmN0aWMtc3dhbGxvdykg
LSBMb3cgaW50ZXJhY3Rpb24gaG9uZXlwb3QuCiAgICAtIFtnbHV0dG9uXSho
dHRwczovL2dpdGh1Yi5jb20vbXVzaG9yZy9nbHV0dG9uKSAtIEFsbCBlYXRp
bmcgaG9uZXlwb3QuCiAgICAtIFtnby1Ib25leVBvdF0oaHR0cHM6Ly9naXRo
dWIuY29tL01vamFjaGllZWUvZ28tSG9uZXlQb3QpIC0gSG9uZXlwb3Qgc2Vy
dmVyIHdyaXR0ZW4gaW4gR28uCiAgICAtIFtnby1lbXVsYXRvcnNdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9raW5ndHVuYS9nby1lbXVsYXRvcnMpIC0gSG9uZXlw
b3QgR29sYW5nIGVtdWxhdG9ycy4KICAgIC0gW2hvbmV5bWFpbF0oaHR0cHM6
Ly9naXRodWIuY29tL3NlYzUxL2hvbmV5bWFpbCkgLSBTTVRQIGhvbmV5cG90
IHdyaXR0ZW4gaW4gR29sYW5nLgogICAgLSBbaG9uZXl0cmFwXShodHRwczov
L2dpdGh1Yi5jb20vdGlsbG1hbm53L2hvbmV5dHJhcCkgLSBMb3ctaW50ZXJh
Y3Rpb24gaG9uZXlwb3QgYW5kIG5ldHdvcmsgc2VjdXJpdHkgdG9vbCB3cml0
dGVuIHRvIGNhdGNoIGF0dGFja3MgYWdhaW5zdCBUQ1AgYW5kIFVEUCBzZXJ2
aWNlcy4KICAgIC0gW2ltYXAtaG9uZXldKGh0dHBzOi8vZ2l0aHViLmNvbS95
dmVzYWdvL2ltYXAtaG9uZXkpIC0gSU1BUCBob25leXBvdCB3cml0dGVuIGlu
IEdvbGFuZy4KICAgIC0gW213Y29sbGVjdGRdKGh0dHBzOi8vd3d3Lm9wZW5o
dWIubmV0L3AvbXdjb2xsZWN0ZCkgLSBWZXJzYXRpbGUgbWFsd2FyZSBjb2xs
ZWN0aW9uIGRhZW1vbiwgdW5pdGluZyB0aGUgYmVzdCBmZWF0dXJlcyBvZiBu
ZXBlbnRoZXMgYW5kIGhvbmV5dHJhcC4KICAgIC0gW3BvdGRdKGh0dHBzOi8v
Z2l0aHViLmNvbS9sbnNsYnJ0eS9wb3RkKSAtIEhpZ2hseSBzY2FsYWJsZSBs
b3ctIHRvIG1lZGl1bS1pbnRlcmFjdGlvbiBTU0gvVENQIGhvbmV5cG90IGRl
c2lnbmVkIGZvciBPcGVuV3J0L0lvVCBkZXZpY2VzIGxldmVyYWdpbmcgc2V2
ZXJhbCBMaW51eCBrZXJuZWwgZmVhdHVyZXMsIHN1Y2ggYXMgbmFtZXNwYWNl
cywgc2VjY29tcCBhbmQgdGhyZWFkIGNhcGFiaWxpdGllcy4KICAgIC0gW3Bv
cnRsdXJrZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9iYXJ0bnYvcG9ydGx1cmtl
cikgLSBQb3J0IGxpc3RlbmVyIGluIFJ1c3Qgd2l0aCBwcm90b2NvbCBndWVz
c2luZyBhbmQgc2FmZSBzdHJpbmcgZGlzcGxheS4KICAgIC0gW3NsaXBtLWhv
bmV5cG90XShodHRwczovL2dpdGh1Yi5jb20vcnNoaXBwL3NsaXBtLWhvbmV5
cG90KSAtIFNpbXBsZSBsb3ctaW50ZXJhY3Rpb24gcG9ydCBtb25pdG9yaW5n
IGhvbmV5cG90LgogICAgLSBbdGVsbmV0LWlvdC1ob25leXBvdF0oaHR0cHM6
Ly9naXRodWIuY29tL1BoeXBlL3RlbG5ldC1pb3QtaG9uZXlwb3QpIC0gUHl0
aG9uIHRlbG5ldCBob25leXBvdCBmb3IgY2F0Y2hpbmcgYm90bmV0IGJpbmFy
aWVzLgogICAgLSBbdGVsbmV0bG9nZ2VyXShodHRwczovL2dpdGh1Yi5jb20v
cm9iZXJ0ZGF2aWRncmFoYW0vdGVsbmV0bG9nZ2VyKSAtIFRlbG5ldCBob25l
eXBvdCBkZXNpZ25lZCB0byB0cmFjayB0aGUgTWlyYWkgYm90bmV0LgogICAg
LSBbdm5jbG93cG90XShodHRwczovL2dpdGh1Yi5jb20vbWFnaXN0ZXJxdWlz
L3ZuY2xvd3BvdCkgLSBMb3cgaW50ZXJhY3Rpb24gVk5DIGhvbmV5cG90LgoK
Ci0gSURTIHNpZ25hdHVyZSBnZW5lcmF0aW9uCiAgICAtIFtIb25leWNvbWJd
KGh0dHA6Ly93d3cuaWNpci5vcmcvY2hyaXN0aWFuL2hvbmV5Y29tYi8pIC0g
QXV0b21hdGVkIHNpZ25hdHVyZSBjcmVhdGlvbiB1c2luZyBob25leXBvdHMu
CgotIExvb2t1cCBzZXJ2aWNlIGZvciBBUy1udW1iZXJzIGFuZCBwcmVmaXhl
cwogICAgLSBbQ0MyQVNOXShodHRwOi8vd3d3LmNjMmFzbi5jb20vKSAtIFNp
bXBsZSBsb29rdXAgc2VydmljZSBmb3IgQVMtbnVtYmVycyBhbmQgcHJlZml4
ZXMgYmVsb25naW5nIHRvIGFueSBnaXZlbiBjb3VudHJ5IGluIHRoZSB3b3Js
ZC4KCi0gRGF0YSBDb2xsZWN0aW9uIC8gRGF0YSBTaGFyaW5nCiAgICAtIFtI
UGZyaWVuZHNdKGh0dHA6Ly9ocGZyaWVuZHMuaG9uZXljbG91ZC5uZXQvIy9o
b21lKSAtIEhvbmV5cG90IGRhdGEtc2hhcmluZyBwbGF0Zm9ybS4KICAgICAg
ICAtIFtocGZyaWVuZHMgLSByZWFsLXRpbWUgc29jaWFsIGRhdGEtc2hhcmlu
Z10oaHR0cHM6Ly9oZWlwZWkuaW8vc2lnaW50LWhwZnJpZW5kcy8pIC0gUHJl
c2VudGF0aW9uIGFib3V0IEhQRnJpZW5kcyBmZWVkIHN5c3RlbSAKICAgIC0g
W0hQRmVlZHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9yZXAvaHBmZWVkcy8pIC0g
TGlnaHR3ZWlnaHQgYXV0aGVudGljYXRlZCBwdWJsaXNoLXN1YnNjcmliZSBw
cm90b2NvbC4KCi0gQ2VudHJhbCBtYW5hZ2VtZW50IHRvb2wKICAgIC0gW1BI
QVJNXShodHRwOi8vd3d3Lm5lcGVudGhlc3BoYXJtLmNvbS8pIC0gTWFuYWdl
LCByZXBvcnQsIGFuZCBhbmFseXplIHlvdXIgZGlzdHJpYnV0ZWQgTmVwZW50
aGVzIGluc3RhbmNlcy4KCi0gTmV0d29yayBjb25uZWN0aW9uIGFuYWx5emVy
CiAgICAtIFtJbXBvc3RdKGh0dHA6Ly9pbXBvc3Quc291cmNlZm9yZ2UubmV0
LykgLSBOZXR3b3JrIHNlY3VyaXR5IGF1ZGl0aW5nIHRvb2wgZGVzaWduZWQg
dG8gYW5hbHl6ZSB0aGUgZm9yZW5zaWNzIGJlaGluZCBjb21wcm9taXNlZCBh
bmQvb3IgdnVsbmVyYWJsZSBkYWVtb25zLiAKCi0gSG9uZXlwb3QgZGVwbG95
bWVudAogICAgLSBbTW9kZXJuIEhvbmV5bmV0IE5ldHdvcmtdKGh0dHA6Ly90
aHJlYXRzdHJlYW0uZ2l0aHViLmlvL21obi8pIC0gU3RyZWFtbGluZXMgZGVw
bG95bWVudCBhbmQgbWFuYWdlbWVudCBvZiBzZWN1cmUgaG9uZXlwb3RzLgoK
LSBIb25leXBvdCBleHRlbnNpb25zIHRvIFdpcmVzaGFyawogICAgLSBbV2hp
cmVzaGFyayBFeHRlbnNpb25zXShodHRwczovL3d3dy5ob25leW5ldC5vcmcv
cHJvamVjdC9XaXJlc2hhcmtFeHRlbnNpb25zKSAtIEFwcGx5IFNub3J0IElE
UyBydWxlcyBhbmQgc2lnbmF0dXJlcyBhZ2FpbnN0IHBhY2tldCBjYXB0dXJl
IGZpbGVzIHVzaW5nIFdpcmVzaGFyay4KCgotIENsaWVudAogICAgLSBbQ1dT
YW5kYm94IC8gR0ZJIFNhbmRib3hdKGh0dHBzOi8vd3d3LmdmaS5jb20vcHJv
ZHVjdHMtYW5kLXNvbHV0aW9ucy9hbGwtcHJvZHVjdHMpCiAgICAtIFtDYXB0
dXJlLUhQQy1MaW51eF0oaHR0cHM6Ly9yZWRtaW5lLmhvbmV5bmV0Lm9yZy9w
cm9qZWN0cy9saW51eC1jYXB0dXJlLWhwYy93aWtpKQogICAgLSBbQ2FwdHVy
ZS1IUEMtTkddKGh0dHBzOi8vZ2l0aHViLmNvbS9DRVJULVBvbHNrYS9IU04t
Q2FwdHVyZS1IUEMtTkcpCiAgICAtIFtDYXB0dXJlLUhQQ10oaHR0cHM6Ly9w
cm9qZWN0cy5ob25leW5ldC5vcmcvY2FwdHVyZS1ocGMpIC0gSGlnaCBpbnRl
cmFjdGlvbiBjbGllbnQgaG9uZXlwb3QgKGFsc28gY2FsbGVkIGhvbmV5Y2xp
ZW50KS4KICAgIC0gW0hvbmV5Qk9UXShodHRwOi8vd3d3LmF0b21pY3NvZnR3
YXJlc29sdXRpb25zLmNvbS8pCiAgICAtIFtIb25leUNdKGh0dHBzOi8vcHJv
amVjdHMuaG9uZXluZXQub3JnL2hvbmV5YykKICAgIC0gW0hvbmV5U3BpZGVy
IE5ldHdvcmtdKGh0dHBzOi8vZ2l0aHViLmNvbS9DRVJULVBvbHNrYS9oc24y
LWJ1bmRsZSkgLSBIaWdobHktc2NhbGFibGUgc3lzdGVtIGludGVncmF0aW5n
IG11bHRpcGxlIGNsaWVudCBob25leXBvdHMgdG8gZGV0ZWN0IG1hbGljaW91
cyB3ZWJzaXRlcy4KICAgIC0gW0hvbmV5V2ViXShodHRwczovL2NvZGUuZ29v
Z2xlLmNvbS9hcmNoaXZlL3AvZ3NvYy1ob25leXdlYi8pIC0gV2ViIGludGVy
ZmFjZSBjcmVhdGVkIHRvIG1hbmFnZSBhbmQgcmVtb3RlbHkgc2hhcmUgSG9u
ZXljbGllbnRzIHJlc291cmNlcy4gCiAgICAtIFtKc3VucGFjay1uXShodHRw
czovL2dpdGh1Yi5jb20vdXJ1bGU5OS9qc3VucGFjay1uKQogICAgLSBbTW9u
a2V5U3BpZGVyXShodHRwOi8vbW9ua2V5c3BpZGVyLnNvdXJjZWZvcmdlLm5l
dCkKICAgIC0gW1Bob25leUNdKGh0dHBzOi8vZ2l0aHViLmNvbS9ob25leW5l
dC9waG9uZXljKSAtIFB5dGhvbiBob25leWNsaWVudCAobGF0ZXIgcmVwbGFj
ZWQgYnkgVGh1ZykuCiAgICAtIFtQd255cG90XShodHRwczovL2dpdGh1Yi5j
b20vc2hqYWxheWVyaS9wd255cG90KSAtIEhpZ2ggSW50ZXJhY3Rpb24gQ2xp
ZW50IEhvbmV5cG90LgogICAgLSBbUnVtYWxdKGh0dHBzOi8vZ2l0aHViLmNv
bS90aHVncy1ydW1hbC8pIC0gVGh1ZydzIFJ1bcSBbDogYSBUaHVnJ3MgZHJl
c3MgYW5kIHdlYXBvbi4KICAgIC0gW1NoZWxpYV0oaHR0cHM6Ly93d3cuY3Mu
dnUubmwvfmhlcmJlcnRiL21pc2Mvc2hlbGlhLykgLSBDbGllbnQtc2lkZSBo
b25leXBvdCBmb3IgYXR0YWNrIGRldGVjdGlvbi4KICAgIC0gW1RodWddKGh0
dHBzOi8vYnVmZmVyLmdpdGh1Yi5pby90aHVnLykgLSBQeXRob24tYmFzZWQg
bG93LWludGVyYWN0aW9uIGhvbmV5Y2xpZW50LgogICAgLSBbVGh1ZyBEaXN0
cmlidXRlZCBUYXNrIFF1ZXVpbmddKGh0dHBzOi8vdGh1Zy1kaXN0cmlidXRl
ZC5yZWFkdGhlZG9jcy5pby9lbi9sYXRlc3QvaW5kZXguaHRtbCkKICAgIC0g
W1RyaWdvbmFdKGh0dHBzOi8vd3d3LmhvbmV5bmV0Lm9yZy9wcm9qZWN0L1Ry
aWdvbmEpCiAgICAtIFtVUkxRdWVyeV0oaHR0cHM6Ly91cmxxdWVyeS5uZXQv
KQogICAgLSBbWUFMSUggKFlldCBBbm90aGVyIExvdyBJbnRlcmFjdGlvbiBI
b25leWNsaWVudCldKGh0dHBzOi8vZ2l0aHViLmNvbS9NYXNvb2QtTS95YWxp
aCkgLSBMb3ctaW50ZXJhY3Rpb24gY2xpZW50IGhvbmV5cG90IGRlc2lnbmVk
IHRvIGRldGVjdCBtYWxpY2lvdXMgd2Vic2l0ZXMgdGhyb3VnaCBzaWduYXR1
cmUsIGFub21hbHksIGFuZCBwYXR0ZXJuIG1hdGNoaW5nIHRlY2huaXF1ZXMu
CgotIEhvbmV5cG90CiAgICAtIFtEZWNlcHRpb24gVG9vbGtpdF0oaHR0cDov
L3d3dy5hbGwubmV0L2R0ay9kdGsuaHRtbCkKICAgIC0gW0lNSG9uZXlwb3Rd
KGh0dHBzOi8vZ2l0aHViLmNvbS9tdXNob3JnL2ltaG9uZXlwb3QpCgotIFBE
RiBkb2N1bWVudCBpbnNwZWN0b3IKICAgIC0gW3BlZXBkZl0oaHR0cHM6Ly9n
aXRodWIuY29tL2plc3BhcnphL3BlZXBkZikgLSBQb3dlcmZ1bCBQeXRob24g
dG9vbCB0byBhbmFseXplIFBERiBkb2N1bWVudHMuCgotIEh5YnJpZCBsb3cv
aGlnaCBpbnRlcmFjdGlvbiBob25leXBvdAogICAgLSBbSG9uZXlCcmlkXSho
dHRwOi8vaG9uZXlicmlkLnNvdXJjZWZvcmdlLm5ldCkKCi0gU1NIIEhvbmV5
cG90cwogICAgLSBbQmxhY2tuZXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9tb3Jp
YW4vYmxhY2tuZXQpIC0gTXVsdGktaGVhZCBTU0ggaG9uZXlwb3Qgc3lzdGVt
LgogICAgLSBbQ293cmllXShodHRwczovL2dpdGh1Yi5jb20vY293cmllL2Nv
d3JpZSkgLSBDb3dyaWUgU1NIIEhvbmV5cG90IChiYXNlZCBvbiBraXBwbyku
CiAgICAtIFtEU2hpZWxkIGRvY2tlcl0oaHR0cHM6Ly9naXRodWIuY29tL3ht
ZS9kc2hpZWxkLWRvY2tlcikgLSBEb2NrZXIgY29udGFpbmVyIHJ1bm5pbmcg
Y293cmllIHdpdGggRFNoaWVsZCBvdXRwdXQgZW5hYmxlZC4KICAgIC0gW0hv
blNTSF0oaHR0cHM6Ly9naXRodWIuY29tL3RuaWNoL2hvbnNzaCkgLSBMb2dz
IGFsbCBTU0ggY29tbXVuaWNhdGlvbnMgYmV0d2VlbiBhIGNsaWVudCBhbmQg
c2VydmVyLgogICAgLSBbSFVESU5YXShodHRwczovL2dpdGh1Yi5jb20vQ3J5
cHRpeDcyMC9IVURJTlgpIC0gVGlueSBpbnRlcmFjdGlvbiBTU0ggaG9uZXlw
b3QgZW5naW5lZXJlZCBpbiBQeXRob24gdG8gbG9nIGJydXRlIGZvcmNlIGF0
dGFja3MgYW5kLCBtb3N0IGltcG9ydGFudGx5LCB0aGUgZW50aXJlIHNoZWxs
IGludGVyYWN0aW9uIHBlcmZvcm1lZCBieSB0aGUgYXR0YWNrZXIuCiAgICAt
IFtLaXBwb10oaHR0cHM6Ly9naXRodWIuY29tL2Rlc2FzdGVyL2tpcHBvKSAt
IE1lZGl1bSBpbnRlcmFjdGlvbiBTU0ggaG9uZXlwb3QuCiAgICAtIFtLaXBw
b19KdW5PU10oaHR0cHM6Ly9naXRodWIuY29tL2dyZWdjbWFydGluL0tpcHBv
X0p1bk9TKSAtIEtpcHBvIGNvbmZpZ3VyZWQgdG8gYmUgYSBiYWNrZG9vcmVk
IG5ldHNjcmVlbi4KICAgIC0gW0tvam9uZXkyXShodHRwczovL2dpdGh1Yi5j
b20vbWFkaXJpc2gva29qb25leTIpIC0gTG93IGludGVyYWN0aW9uIFNTSCBo
b25leXBvdCB3cml0dGVuIGluIFB5dGhvbiBhbmQgYmFzZWQgb24gS29qb25l
eSBieSBKb3NlIEFudG9uaW8gQ29yZXQuCiAgICAtIFtLb2pvbmV5XShodHRw
Oi8va29qb25leS5zb3VyY2Vmb3JnZS5uZXQvKSAtIFB5dGhvbi1iYXNlZCBM
b3cgaW50ZXJhY3Rpb24gaG9uZXlwb3QgdGhhdCBlbXVsYXRlcyBhbiBTU0gg
c2VydmVyIGltcGxlbWVudGVkIHdpdGggVHdpc3RlZCBDb25jaC4KICAgIC0g
W0xvbmdUYWlsIExvZyBBbmFseXNpcyBAIE1hcmlzdCBDb2xsZWdlXShodHRw
Oi8vbG9uZ3RhaWwuaXQubWFyaXN0LmVkdS9ob25leS8pIC0gQW5hbHl6ZWQg
U1NIIGhvbmV5cG90IGxvZ3MuCiAgICAtIFtNYWxiYWl0XShodHRwczovL2dp
dGh1Yi5jb20vYmF0Y2htY251bHR5L01hbGJhaXQpIC0gU2ltcGxlIFRDUC9V
RFAgaG9uZXlwb3QgaW1wbGVtZW50ZWQgaW4gUGVybC4KICAgIC0gW01vY2tT
U0hdKGh0dHBzOi8vZ2l0aHViLmNvbS9uY291dHVyZS9Nb2NrU1NIKSAtIE1v
Y2sgYW4gU1NIIHNlcnZlciBhbmQgZGVmaW5lIGFsbCBjb21tYW5kcyBpdCBz
dXBwb3J0cyAoUHl0aG9uLCBUd2lzdGVkKS4KICAgIC0gW2Nvd3JpZTJuZW9d
KGh0dHBzOi8vZ2l0aHViLmNvbS94bGZlL2Nvd3JpZTJuZW8pIC0gUGFyc2Ug
Y293cmllIGhvbmV5cG90IGxvZ3MgaW50byBhIG5lbzRqIGRhdGFiYXNlLgog
ICAgLSBbZ28tc3Nob25leV0oaHR0cHM6Ly9naXRodWIuY29tL2FzaG1ja2Vu
emllL2dvLXNzaG9uZXkpIC0gU1NIIEhvbmV5cG90LgogICAgLSBbZ28wcl0o
aHR0cHM6Ly9naXRodWIuY29tL2Z6ZXJvcnViaWdkL2dvMHIpIC0gU2ltcGxl
IHNzaCBob25leXBvdCBpbiBHb2xhbmcuCiAgICAtIFtnb2hvbmV5XShodHRw
czovL2dpdGh1Yi5jb20vUGF1bE1hZGRveC9nb2hvbmV5KSAtIFNTSCBob25l
eXBvdCB3cml0dGVuIGluIEdvLgogICAgLSBbaGl2ZWRdKGh0dHBzOi8vZ2l0
aHViLmNvbS9zYWhpbG0vaGl2ZWQpIC0gR29sYW5nLWJhc2VkIGhvbmV5cG90
LgogICAgLSBbaG55cG90cy1hZ2VudCldKGh0dHBzOi8vZ2l0aHViLmNvbS9q
b3NocmVuZGVrL2hueXBvdHMtYWdlbnQpIC0gU1NIIFNlcnZlciBpbiBHbyB0
aGF0IGxvZ3MgdXNlcm5hbWUgYW5kIHBhc3N3b3JkIGNvbWJpbmF0aW9ucy4K
ICAgIC0gW2hvbmV5cG90LmdvXShodHRwczovL2dpdGh1Yi5jb20vbWRwL2hv
bmV5cG90LmdvKSAtIFNTSCBIb25leXBvdCB3cml0dGVuIGluIEdvLgogICAg
LSBbaG9uZXlzc2hdKGh0dHBzOi8vZ2l0aHViLmNvbS9wcGFjaGVyL2hvbmV5
c3NoKSAtIENyZWRlbnRpYWwgZHVtcGluZyBTU0ggaG9uZXlwb3Qgd2l0aCBz
dGF0aXN0aWNzLgogICAgLSBbaG9ybmV0XShodHRwczovL2dpdGh1Yi5jb20v
Y3phcmRvei9ob3JuZXQpIC0gTWVkaXVtIGludGVyYWN0aW9uIFNTSCBob25l
eXBvdCB0aGF0IHN1cHBvcnRzIG11bHRpcGxlIHZpcnR1YWwgaG9zdHMuCiAg
ICAtIFtzc2gtYXV0aC1sb2dnZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9KdXN0
aW5Bem9mZi9zc2gtYXV0aC1sb2dnZXIpIC0gTG93L3plcm8gaW50ZXJhY3Rp
b24gU1NIIGF1dGhlbnRpY2F0aW9uIGxvZ2dpbmcgaG9uZXlwb3QuCiAgICAt
IFtzc2gtaG9uZXlwb3RdKGh0dHBzOi8vZ2l0aHViLmNvbS9kcm9iZXJzb24v
c3NoLWhvbmV5cG90KSAtIEZha2Ugc3NoZCB0aGF0IGxvZ3MgSVAgYWRkcmVz
c2VzLCB1c2VybmFtZXMsIGFuZCBwYXNzd29yZHMuCiAgICAtIFtzc2gtaG9u
ZXlwb3RdKGh0dHBzOi8vZ2l0aHViLmNvbS9hbXY0Mi9zc2hkLWhvbmV5cG90
KSAtIE1vZGlmaWVkIHZlcnNpb24gb2YgdGhlIE9wZW5TU0ggZGVhbW9uIHRo
YXQgZm9yd2FyZHMgY29tbWFuZHMgdG8gQ293cmllIHdoZXJlIGFsbCBjb21t
YW5kcyBhcmUgaW50ZXJwcmV0ZWQgYW5kIHJldHVybmVkLgogICAgLSBbc3No
LWhvbmV5cG90ZF0oaHR0cHM6Ly9naXRodWIuY29tL3NqaW5rcy9zc2gtaG9u
ZXlwb3RkKSAtIExvdy1pbnRlcmFjdGlvbiBTU0ggaG9uZXlwb3Qgd3JpdHRl
biBpbiBDLgogICAgLSBbc3NoRm9yU2hpdHNdKGh0dHBzOi8vZ2l0aHViLmNv
bS90cmFldG94L3NzaEZvclNoaXRzKSAtIEZyYW1ld29yayBmb3IgYSBoaWdo
IGludGVyYWN0aW9uIFNTSCBob25leXBvdC4KICAgIC0gW3NzaGVzYW1lXSho
dHRwczovL2dpdGh1Yi5jb20vamFrc2kvc3NoZXNhbWUpIC0gRmFrZSBTU0gg
c2VydmVyIHRoYXQgbGV0cyBldmVyeW9uZSBpbiBhbmQgbG9ncyB0aGVpciBh
Y3Rpdml0eS4KICAgIC0gW3NzaGhpcG90XShodHRwczovL2dpdGh1Yi5jb20v
bWFnaXN0ZXJxdWlzL3NzaGhpcG90KSAtIEhpZ2gtaW50ZXJhY3Rpb24gTWl0
TSBTU0ggaG9uZXlwb3QuCiAgICAtIFtzc2hsb3dwb3RdKGh0dHBzOi8vZ2l0
aHViLmNvbS9tYWdpc3RlcnF1aXMvc3NobG93cG90KSAtIFlldCBhbm90aGVy
IG5vLWZyaWxscyBsb3ctaW50ZXJhY3Rpb24gU1NIIGhvbmV5cG90IGluIEdv
LgogICAgLSBbc3Noc3lydXBdKGh0dHBzOi8vZ2l0aHViLmNvbS9ta2lzaGVy
ZS9zc2hzeXJ1cCkgLSBTaW1wbGUgU1NIIEhvbmV5cG90IHdpdGggZmVhdHVy
ZXMgdG8gY2FwdHVyZSB0ZXJtaW5hbCBhY3Rpdml0eSBhbmQgdXBsb2FkIHRv
IGFzY2lpbmVtYS5vcmcuCiAgICAtIFt0d2lzdGVkLWhvbmV5cG90c10oaHR0
cHM6Ly9naXRodWIuY29tL2xhbmplbG90L3R3aXN0ZWQtaG9uZXlwb3RzKSAt
IFNTSCwgRlRQIGFuZCBUZWxuZXQgaG9uZXlwb3RzIGJhc2VkIG9uIFR3aXN0
ZWQuCgotIERpc3RyaWJ1dGVkIHNlbnNvciBwcm9qZWN0CiAgICAtIFtEU2hp
ZWxkIFdlYiBIb25leXBvdCBQcm9qZWN0XShodHRwczovL3NpdGVzLmdvb2ds
ZS5jb20vc2l0ZS93ZWJob25leXBvdHNpdGUvKQoKLSBBIHBjYXAgYW5hbHl6
ZXIKICAgIC0gW0hvbmV5c25hcF0oaHR0cHM6Ly9wcm9qZWN0cy5ob25leW5l
dC5vcmcvaG9uZXlzbmFwLykKCi0gTmV0d29yayB0cmFmZmljIHJlZGlyZWN0
b3IKICAgIC0gW0hvbmV5d2FsbF0oaHR0cHM6Ly9wcm9qZWN0cy5ob25leW5l
dC5vcmcvaG9uZXl3YWxsLykKCi0gSG9uZXlwb3QgRGlzdHJpYnV0aW9uIHdp
dGggbWl4ZWQgY29udGVudAogICAgLSBbSG9uZXlEcml2ZV0oaHR0cHM6Ly9i
cnV0ZWZvcmNlbGFiLmNvbS9ob25leWRyaXZlKQoKLSBIb25leXBvdCBzZW5z
b3IKICAgIC0gW0hvbmVlZXBpXShodHRwczovL3JlZG1pbmUuaG9uZXluZXQu
b3JnL3Byb2plY3RzL2hvbmVlZXBpL3dpa2kpIC0gSG9uZXlwb3Qgc2Vuc29y
IG9uIGEgUmFzcGJlcnJ5IFBpIGJhc2VkIG9uIGEgY3VzdG9taXplZCBSYXNw
YmlhbiBPUy4KCi0gRmlsZSBjYXJ2aW5nCiAgICAtIFtUZXN0RGlzayAmIFBo
b3RvUmVjXShodHRwczovL3d3dy5jZ3NlY3VyaXR5Lm9yZy8pCgotIEJlaGF2
aW9yYWwgYW5hbHlzaXMgdG9vbCBmb3Igd2luMzIKICAgIC0gW0NhcHR1cmUg
QkFUXShodHRwczovL3d3dy5ob25leW5ldC5vcmcvbm9kZS8zMTUpCgotIExp
dmUgQ0QKICAgIC0gW0RBVklYXShodHRwczovL3d3dy5zZWN2aXoub3JnL25v
ZGUvODkpIC0gVGhlIERBVklYIExpdmUgQ0QuCgotIFNwYW10cmFwCiAgICAt
IFtNYWlsOjpTTVRQOjpIb25leXBvdF0oaHR0cHM6Ly9tZXRhY3Bhbi5vcmcv
cG9kL3JlbGVhc2UvTUlLRVIvTWFpbC1TTVRQLUhvbmV5cG90LTAuMTEvSG9u
ZXlwb3QucG0pIC0gUGVybCBtb2R1bGUgdGhhdCBhcHBlYXJzIHRvIHByb3Zp
ZGUgdGhlIGZ1bmN0aW9uYWxpdHkgb2YgYSBzdGFuZGFyZCBTTVRQIHNlcnZl
ci4KICAgIC0gW01haWxvbmV5XShodHRwczovL2dpdGh1Yi5jb20vYXdoaXRl
aGF0dGVyL21haWxvbmV5KSAtIFNNVFAgaG9uZXlwb3QsIE9wZW4gUmVsYXks
IENyZWQgSGFydmVzdGVyIHdyaXR0ZW4gaW4gcHl0aG9uLgogICAgLSBbU2Vu
ZE1lU3BhbUlEUy5weV0oaHR0cHM6Ly9naXRodWIuY29tL2pvaGVzdGVwaGFu
L1ZlcnlTaW1wbGVIb25leXBvdCkgLSBTaW1wbGUgU01UUCBmZXRjaCBhbGwg
SURTIGFuZCBhbmFseXplci4KICAgIC0gW1NoaXZhXShodHRwczovL2dpdGh1
Yi5jb20vc2hpdmEtc3BhbXBvdC9zaGl2YSkgLSBTcGFtIEhvbmV5cG90IHdp
dGggSW50ZWxsaWdlbnQgVmlydHVhbCBBbmFseXplci4KICAgICAgICAtIFtT
aGl2YSBUaGUgU3BhbSBIb25leXBvdCBUaXBzIEFuZCBUcmlja3MgRm9yIEdl
dHRpbmcgSXQgVXAgQW5kIFJ1bm5pbmddKGh0dHBzOi8vd3d3LnBlbnRlc3Rw
YXJ0bmVycy5jb20vc2VjdXJpdHktYmxvZy9zaGl2YS10aGUtc3BhbS1ob25l
eXBvdC10aXBzLWFuZC10cmlja3MtZm9yLWdldHRpbmctaXQtdXAtYW5kLXJ1
bm5pbmcvKQogICAgLSBbU3BhbUhBVF0oaHR0cHM6Ly9naXRodWIuY29tL21p
Z3VlbHJhdWxiL3NwYW1oYXQpIC0gU3BhbSBIb25leXBvdCBUb29sLgogICAg
LSBbU3BhbWhvbGVdKGh0dHA6Ly93d3cuc3BhbWhvbGUubmV0LykKICAgIC0g
W2hvbmV5cG90XShodHRwczovL2dpdGh1Yi5jb20vamFkYi9ob25leXBvdCkg
LSBUaGUgUHJvamVjdCBIb25leSBQb3QgdW4tb2ZmaWNpYWwgUEhQIFNESy4K
ICAgIC0gW3NwYW1kXShodHRwOi8vbWFuLm9wZW5ic2Qub3JnL2NnaS1iaW4v
bWFuLmNnaT9xdWVyeT1zcGFtZCUyNmFwcm9wb3M9MCUyNnNla3Rpb249MCUy
Nm1hbnBhdGg9T3BlbkJTRCtDdXJyZW50JTI2YXJjaD1pMzg2JTI2Zm9ybWF0
PWh0bWwpCgotIENvbW1lcmNpYWwgaG9uZXluZXQKICAgIC0gW0N5bW1ldHJp
YSBNYXplcnVubmVyXSh0dHBzOi8vY3ltbWV0cmlhLmNvbS9wcm9kdWN0cy9t
YXplcnVubmVyLykgLSBMZWFkcyBhdHRhY2tlcnMgYXdheSBmcm9tIHJlYWwg
dGFyZ2V0cyBhbmQgY3JlYXRlcyBhIGZvb3RwcmludCBvZiB0aGUgYXR0YWNr
LgoKLSBTZXJ2ZXIgKEJsdWV0b290aCkKICAgIC0gW0JsdWVwb3RdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9hbmRyZXdtaWNoYWVsc21pdGgvYmx1ZXBvdCkKCi0g
RHluYW1pYyBhbmFseXNpcyBvZiBBbmRyb2lkIGFwcHMKICAgIC0gW0Ryb2lk
Ym94XShodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9hcmNoaXZlL3AvZHJvaWRi
b3gvKQoKLSBEb2NrZXJpemVkIExvdyBJbnRlcmFjdGlvbiBwYWNrYWdpbmcK
ICAgIC0gW0RvY2tlciBob25leW5ldF0oaHR0cHM6Ly9naXRodWIuY29tL3Ny
ZWluaGFyZHQvRG9ja2VyLUhvbmV5bmV0KSAtIFNldmVyYWwgSG9uZXluZXQg
dG9vbHMgc2V0IHVwIGZvciBEb2NrZXIgY29udGFpbmVycy4KICAgIC0gW0Rv
Y2tlcml6ZWQgVGh1Z10oaHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL2hvbmV5
bmV0L3RodWcvKSAtIERvY2tlcml6ZWQgW1RodWddKGh0dHBzOi8vZ2l0aHVi
LmNvbS9idWZmZXIvdGh1ZykgdG8gYW5hbHl6ZSBtYWxpY2lvdXMgd2ViIGNv
bnRlbnQuCiAgICAtIFtEb2NrZXJwb3RdKGh0dHBzOi8vZ2l0aHViLmNvbS9t
cnNjaHl0ZS9kb2NrZXJwb3QpIC0gRG9ja2VyIGJhc2VkIGhvbmV5cG90Lgog
ICAgLSBbTWFudWthXShodHRwczovL2dpdGh1Yi5jb20vYW5kcmV3bWljaGFl
bHNtaXRoL21hbnVrYSkgLSBEb2NrZXIgYmFzZWQgaG9uZXlwb3QgKERpb25h
ZWEgYW5kIEtpcHBvKS4KICAgIC0gW21obi1jb3JlLWRvY2tlcl0oaHR0cHM6
Ly9naXRodWIuY29tL01hdHRDYXJvdGhlcnMvbWhuLWNvcmUtZG9ja2VyKSAt
IENvcmUgZWxlbWVudHMgb2YgdGhlIE1vZGVybiBIb25leSBOZXR3b3JrIGlt
cGxlbWVudGVkIGluIERvY2tlci4KCi0gTmV0d29yayBhbmFseXNpcwogICAg
LSBbUXVlY2h1YV0oaHR0cHM6Ly9iaXRidWNrZXQub3JnL3phY2NvbmUvcXVl
Y2h1YSkKCi0gU0lQIFNlcnZlcgogICAgLSBbQXJ0ZW1uZXNpYSBWb0lQXSho
dHRwOi8vYXJ0ZW1pc2Euc291cmNlZm9yZ2UubmV0KQoKLSBJT1QgSG9uZXlw
b3QKICAgIC0gW0hvbmV5VGhpbmddKGh0dHBzOi8vZ2l0aHViLmNvbS9vbWVy
ZXJkZW0vaG9uZXl0aGluZykgLSBUUi0wNjkgSG9uZXlwb3QuCiAgICAtIFtL
YWtvXShodHRwczovL2dpdGh1Yi5jb20vZGFya2Fybml1bS9rYWtvKSAtIEhv
bmV5cG90cyBmb3IgYSBudW1iZXIgb2Ygd2VsbCBrbm93biBhbmQgZGVwbG95
ZWQgZW1iZWRkZWQgZGV2aWNlIHZ1bG5lcmFiaWxpdGllcy4KCi0gSG9uZXl0
b2tlbnMKICAgIC0gW0NhbmFyeVRva2Vuc10oaHR0cHM6Ly9naXRodWIuY29t
L3RoaW5rc3QvY2FuYXJ5dG9rZW5zKSAtIFNlbGYtaG9zdGFibGUgaG9uZXl0
b2tlbiBnZW5lcmF0b3IgYW5kIHJlcG9ydGluZyBkYXNoYm9hcmQ7IGRlbW8g
dmVyc2lvbiBhdmFpbGFibGUgYXQgW0NhbmFyeVRva2Vucy5vcmddKGh0dHBz
Oi8vY2FuYXJ5dG9rZW5zLm9yZy9nZW5lcmF0ZSkuCiAgICAtIFtIb25leWJp
dHNdKGh0dHBzOi8vZ2l0aHViLmNvbS8weDREMzEvaG9uZXliaXRzKSAtIFNp
bXBsZSB0b29sIGRlc2lnbmVkIHRvIGVuaGFuY2UgdGhlIGVmZmVjdGl2ZW5l
c3Mgb2YgeW91ciB0cmFwcyBieSBzcHJlYWRpbmcgYnJlYWRjcnVtYnMgYW5k
IGhvbmV5dG9rZW5zIGFjcm9zcyB5b3VyIHByb2R1Y3Rpb24gc2VydmVycyBh
bmQgd29ya3N0YXRpb25zIHRvIGx1cmUgdGhlIGF0dGFja2VyIHRvd2FyZCB5
b3VyIGhvbmV5cG90cy4KICAgIC0gW0hvbmV5zrsgKEhvbmV5TGFtYmRhKV0o
aHR0cHM6Ly9naXRodWIuY29tLzB4NEQzMS9ob25leWxhbWJkYSkgLSBTaW1w
bGUsIHNlcnZlcmxlc3MgYXBwbGljYXRpb24gZGVzaWduZWQgdG8gY3JlYXRl
IGFuZCBtb25pdG9yIFVSTCBob25leXRva2Vucywgb24gdG9wIG9mIEFXUyBM
YW1iZGEgYW5kIEFtYXpvbiBBUEkgR2F0ZXdheS4KICAgIC0gW2RjZXB0XSho
dHRwczovL2dpdGh1Yi5jb20vc2VjdXJld29ya3MvZGNlcHQpIC0gVG9vbCBm
b3IgZGVwbG95aW5nIGFuZCBkZXRlY3RpbmcgdXNlIG9mIEFjdGl2ZSBEaXJl
Y3RvcnkgaG9uZXl0b2tlbnMuCiAgICAtIFtob25leWt1XShodHRwczovL2dp
dGh1Yi5jb20vMHg0RDMxL2hvbmV5a3UpIC0gSGVyb2t1LWJhc2VkIHdlYiBo
b25leXBvdCB0aGF0IGNhbiBiZSB1c2VkIHRvIGNyZWF0ZSBhbmQgbW9uaXRv
ciBmYWtlIEhUVFAgZW5kcG9pbnRzIChpLmUuIGhvbmV5dG9rZW5zKS4KCiMj
IEhvbmV5ZCBUb29scwoKLSBIb25leWQgcGx1Z2luCiAgICAtIFtIb25leWNv
bWJdKGh0dHA6Ly93d3cuaG9uZXlkLm9yZy90b29scy5waHApCgotIEhvbmV5
ZCB2aWV3ZXIKICAgIC0gW0hvbmV5dmlld10oaHR0cDovL2hvbmV5dmlldy5z
b3VyY2Vmb3JnZS5uZXQvKQoKLSBIb25leWQgdG8gTXlTUUwgY29ubmVjdG9y
CiAgICAtIFtIb25leWQyTXlTUUxdKGh0dHBzOi8vYnJ1dGVmb3JjZWxhYi5j
b20vaG9uZXlkMm15c3FsKQoKLSBBIHNjcmlwdCB0byB2aXN1YWxpemUgc3Rh
dGlzdGljcyBmcm9tIGhvbmV5ZAogICAgLSBbSG9uZXlkLVZpel0oaHR0cHM6
Ly9icnV0ZWZvcmNlbGFiLmNvbS9ob25leWQtdml6KQoKLSBIb25leWQgc3Rh
dHMKICAgIC0gW0hvbmV5ZHN1bS5wbF0oaHR0cHM6Ly9naXRodWIuY29tL0Rh
dGFTb2Z0L0hvbmV5ZC9ibG9iL21hc3Rlci9zY3JpcHRzL21pc2MvaG9uZXlk
c3VtLXYwLjMvaG9uZXlkc3VtLnBsKQoKCgojIyBOZXR3b3JrIGFuZCBBcnRp
ZmFjdCBBbmFseXNpcwoKLSBTYW5kYm94CiAgICAtIFtBcmdvc10oaHR0cDov
L3d3dy5mZXcudnUubmwvYXJnb3MvKSAtIEVtdWxhdG9yIGZvciBjYXB0dXJp
bmcgemVyby1kYXkgYXR0YWNrcy4KICAgIC0gW0NPTU9ETyBhdXRvbWF0ZWQg
c2FuZGJveF0oaHR0cHM6Ly9oZWxwLmNvbW9kby5jb20vdG9waWMtNzItMS00
NTEtNDc2OC0uaHRtbCkKICAgIC0gW0N1Y2tvb10oaHR0cHM6Ly9jdWNrb29z
YW5kYm94Lm9yZy8pIC0gTGVhZGluZyBvcGVuIHNvdXJjZSBhdXRvbWF0ZWQg
bWFsd2FyZSBhbmFseXNpcyBzeXN0ZW0uCiAgICAtIFtQeWxpYmVtdV0oaHR0
cHM6Ly9naXRodWIuY29tL2J1ZmZlci9weWxpYmVtdSkgLSBMaWJlbXUgQ3l0
aG9uIHdyYXBwZXIuCiAgICAtIFtSRklTYW5kYm94XShodHRwczovL21vbmtl
eS5vcmcvfmpvc2Uvc29mdHdhcmUvcmZpLXNhbmRib3gvKSAtIFBIUCA1Lngg
c2NyaXB0IHNhbmRib3ggYnVpbHQgb24gdG9wIG9mIFtmdW5jYWxsXShodHRw
czovL3BlY2wucGhwLm5ldC9wYWNrYWdlL2Z1bmNhbGwpLgogICAgLSBbZG9y
b3RoeTJdKGh0dHBzOi8vZ2l0aHViLmNvbS9tNHJjby0vZG9yb3RoeTIpIC0g
TWFsd2FyZS9ib3RuZXQgYW5hbHlzaXMgZnJhbWV3b3JrIHdyaXR0ZW4gaW4g
UnVieS4KICAgIC0gW2ltYWxzZV0oaHR0cHM6Ly9naXRodWIuY29tL2hiaHp3
ai9pbWFsc2UpIC0gSW50ZWdyYXRlZCBNQUx3YXJlIFNpbXVsYXRvciBhbmQg
RW11bGF0b3IuCiAgICAtIFtsaWJlbXVdKGh0dHBzOi8vZ2l0aHViLmNvbS9i
dWZmZXIvbGliZW11KSAtIFNoZWxsY29kZSBlbXVsYXRpb24gbGlicmFyeSwg
dXNlZnVsIGZvciBzaGVsbGNvZGUgZGV0ZWN0aW9uLgoKCi0gU2FuZGJveC1h
cy1hLVNlcnZpY2UKICAgIC0gW0h5YnJpZCBBbmFseXNpc10oaHR0cHM6Ly93
d3cuaHlicmlkLWFuYWx5c2lzLmNvbSkgLSBGcmVlIG1hbHdhcmUgYW5hbHlz
aXMgc2VydmljZSBwb3dlcmVkIGJ5IFBheWxvYWQgU2VjdXJpdHkgdGhhdCBk
ZXRlY3RzIGFuZCBhbmFseXplcyB1bmtub3duIHRocmVhdHMgdXNpbmcgYSB1
bmlxdWUgSHlicmlkIEFuYWx5c2lzIHRlY2hub2xvZ3kuCiAgICAtIFtKb2Vi
b3ggQ2xvdWRdKGh0dHBzOi8vamJ4Y2xvdWQuam9lc2VjdXJpdHkub3JnL2xv
Z2luKSAtIEFuYWx5emVzIHRoZSBiZWhhdmlvciBvZiBtYWxpY2lvdXMgZmls
ZXMgaW5jbHVkaW5nIFBFcywgUERGcywgRE9DcywgUFBUcywgWExTcywgQVBL
cywgVVJMcyBhbmQgTWFjaE9zIG9uIFdpbmRvd3MsIEFuZHJvaWQgYW5kIE1h
YyBPUyBYIGZvciBzdXNwaWNpb3VzIGFjdGl2aXRpZXMuCiAgICAtIFtWaXJ1
c1RvdGFsXShodHRwczovL3d3dy52aXJ1c3RvdGFsLmNvbS8pIC0gQW5hbHl6
ZSBzdXNwaWNpb3VzIGZpbGVzIGFuZCBVUkxzIHRvIGRldGVjdCB0eXBlcyBv
ZiBtYWx3YXJlLCBhbmQgYXV0b21hdGljYWxseSBzaGFyZSB0aGVtIHdpdGgg
dGhlIHNlY3VyaXR5IGNvbW11bml0eS4KICAgIC0gW21hbHdyLmNvbV0oaHR0
cHM6Ly9tYWx3ci5jb20vKSAtIEZyZWUgbWFsd2FyZSBhbmFseXNpcyBzZXJ2
aWNlIGFuZCBjb21tdW5pdHkuCgojIyBEYXRhIFRvb2xzCgotIEZyb250IEVu
ZHMKICAgIC0gW0Rpb25hZWFGUl0oaHR0cHM6Ly9naXRodWIuY29tL3J1YmVu
ZXNwYWRhcy9EaW9uYWVhRlIpIC0gRnJvbnQgV2ViIHRvIERpb25hZWEgbG93
LWludGVyYWN0aW9uIGhvbmV5cG90LgogICAgLSBbRGphbmdvLWtpcHBvXSho
dHRwczovL2dpdGh1Yi5jb20vamVkaWUvZGphbmdvLWtpcHBvKSAtIERqYW5n
byBBcHAgZm9yIGtpcHBvIFNTSCBIb25leXBvdC4KICAgIC0gW1Nob2NrcG90
LUZyb250ZW5kXShodHRwczovL2dpdGh1Yi5jb20vR292Q0VSVC1DWi9TaG9j
a3BvdC1Gcm9udGVuZCkgLSBGdWxsIGZlYXR1cmVkIHNjcmlwdCB0byB2aXN1
YWxpemUgc3RhdGlzdGljcyBmcm9tIGEgU2hvY2twb3QgaG9uZXlwb3QuIAog
ICAgLSBbVGFuZ29dKGh0dHBzOi8vZ2l0aHViLmNvbS9hcGx1cmEvVGFuZ28p
IC0gSG9uZXlwb3QgSW50ZWxsaWdlbmNlIHdpdGggU3BsdW5rLgogICAgLSBb
V29yZHBvdC1Gcm9udGVuZF0oaHR0cHM6Ly9naXRodWIuY29tL0dvdkNFUlQt
Q1ovV29yZHBvdC1Gcm9udGVuZCkgLSBGdWxsIGZlYXR1cmVkIHNjcmlwdCB0
byB2aXN1YWxpemUgc3RhdGlzdGljcyBmcm9tIGEgV29yZHBvdCBob25leXBv
dC4KICAgIC0gW2hvbmV5YWxhcm1nMl0oaHR0cHM6Ly9naXRodWIuY29tL3Nj
aG1hbGxlL2hvbmV5YWxhcm1nMikgLSBTaW1wbGlmaWVkIFVJIGZvciBzaG93
aW5nIGhvbmV5cG90IGFsYXJtcy4KICAgIC0gW2hvbmV5cG90RGlzcGxheV0o
aHR0cHM6Ly9naXRodWIuY29tL0pvc3MtU3Rld2FyZC9ob25leXBvdERpc3Bs
YXkpIC0gRmxhc2sgd2Vic2l0ZSB3aGljaCBkaXNwbGF5cyBkYXRhIGdhdGhl
cmVkIGZyb20gYW4gU1NIIEhvbmV5cG90LiAKCi0gVmlzdWFsaXphdGlvbgog
ICAgLSBbQWNhcHVsY29dKGh0dHBzOi8vZ2l0aHViLmNvbS9oZ2FzY29uL2Fj
YXB1bGNvKSAtIEF1dG9tYXRlZCBBdHRhY2sgQ29tbXVuaXR5IEdyYXBoIENv
bnN0cnVjdGlvbi4KICAgIC0gW0FmdGVyZ2xvdyBDbG91ZF0oaHR0cHM6Ly9n
aXRodWIuY29tL2F5cnVzL2FmdGVyZ2xvdy1jbG91ZCkKICAgIC0gW0FmdGVy
Z2xvd10oaHR0cDovL2FmdGVyZ2xvdy5zb3VyY2Vmb3JnZS5uZXQvKQogICAg
LSBbR2xhc3RvcGYgQW5hbHl0aWNzXShodHRwczovL2dpdGh1Yi5jb20va2F0
a2FkL0dsYXN0b3BmLUFuYWx5dGljcykgLSBFYXN5IGhvbmV5cG90IHN0YXRp
c3RpY3MuCiAgICAtIFtIb25leU1hbHRdKGh0dHBzOi8vZ2l0aHViLmNvbS9T
bmVha2Vyc0luYy9Ib25leU1hbHQpIC0gTWFsdGVnbyB0cmFuZm9ybXMgZm9y
IG1hcHBpbmcgSG9uZXlwb3Qgc3lzdGVtcy4KICAgIC0gW0hvbmV5TWFwXSho
dHRwczovL2dpdGh1Yi5jb20vZnc0Mi9ob25leW1hcCkgLSBSZWFsLXRpbWUg
d2Vic29ja2V0IHN0cmVhbSBvZiBHUFMgZXZlbnRzIG9uIGEgZmFuY3kgU1ZH
IHdvcmxkIG1hcC4KICAgIC0gW0hvbmV5U3RhdHNdKGh0dHBzOi8vc291cmNl
Zm9yZ2UubmV0L3Byb2plY3RzL2hvbmV5c3RhdHMvKSAtIFN0YXRpc3RpY2Fs
IHZpZXcgb2YgdGhlIHJlY29yZGVkIGFjdGl2aXR5IG9uIGEgSG9uZXluZXQu
CiAgICAtIFtIcGZlZWRzSG9uZXlHcmFwaF0oaHR0cHM6Ly9naXRodWIuY29t
L3l1Y2hpbmNoZW5nL0hwZmVlZHNIb25leUdyYXBoKSAtIFZpc3VhbGl6YXRp
b24gYXBwIHRvIHZpc3VhbGl6ZSBocGZlZWRzIGxvZ3MuCiAgICAtIFtLaXBw
byBzdGF0c10oaHR0cHM6Ly9naXRodWIuY29tL21mb250YW5pL2tpcHBvLXN0
YXRzKSAtIE1vam9saWNpb3VzIGFwcCB0byBkaXNwbGF5IHN0YXRpc3RpY3Mg
Zm9yIHlvdXIga2lwcG8gU1NIIGhvbmV5cG90LgogICAgLSBbS2lwcG8tR3Jh
cGhdKGh0dHBzOi8vYnJ1dGVmb3JjZWxhYi5jb20va2lwcG8tZ3JhcGgpIC0g
RnVsbCBmZWF0dXJlZCBzY3JpcHQgdG8gdmlzdWFsaXplIHN0YXRpc3RpY3Mg
ZnJvbSBhIEtpcHBvIFNTSCBob25leXBvdC4KICAgIC0gW1RoZSBJbnRlbGxp
Z2VudCBIb25leU5ldF0oaHR0cHM6Ly9naXRodWIuY29tL2pweW9ycmUvSW50
ZWxsaWdlbnRIb25leU5ldCkgLSBDcmVhdGUgYWN0aW9uYWJsZSBpbmZvcm1h
dGlvbiBmcm9tIGhvbmV5cG90cy4KICAgIC0gW292aXphcnRdKGh0dHBzOi8v
Z2l0aHViLmNvbS9vZ3V6eS9vdml6YXJ0KSAtIFZpc3VhbCBhbmFseXNpcyBm
b3IgbmV0d29yayB0cmFmZmljLgoKIyMgR3VpZGVzCgotIFtULVBvdDogQSBN
dWx0aS1Ib25leXBvdCBQbGF0Zm9ybV0oaHR0cHM6Ly9kdGFnLWRldi1zZWMu
Z2l0aHViLmlvL21lZGlhdG9yL2ZlYXR1cmUvMjAxNS8wMy8xNy9jb25jZXB0
Lmh0bWwpCi0gW0hvbmV5cG90IChEaW9uYWVhIGFuZCBraXBwbykgc2V0dXAg
c2NyaXB0XShodHRwczovL2dpdGh1Yi5jb20vYW5kcmV3bWljaGFlbHNtaXRo
L2hvbmV5cG90LXNldHVwLXNjcmlwdC8pCgotIERlcGxveW1lbnQKICAgIC0g
W0Rpb25hZWEgYW5kIEVDMiBpbiAyMCBNaW51dGVzXShodHRwOi8vYW5kcmV3
bWljaGFlbHNtaXRoLmNvbS8yMDEyLzAzL2Rpb25hZWEtaG9uZXlwb3Qtb24t
ZWMyLWluLTIwLW1pbnV0ZXMvKSAtIFR1dG9yaWFsIG9uIHNldHRpbmcgdXAg
RGlvbmFlYSBvbiBhbiBFQzIgaW5zdGFuY2UuCiAgICAtIFtVc2luZyBhIFJh
c3BiZXJyeSBQaSBob25leXBvdCB0byBjb250cmlidXRlIGRhdGEgdG8gRFNo
aWVsZC9JU0NdKGh0dHBzOi8vaXNjLnNhbnMuZWR1L2RpYXJ5LzIyNjgwKSAt
IFRoZSBSYXNwYmVycnkgUGkgYmFzZWQgc3lzdGVtIHdpbGwgYWxsb3cgdXMg
dG8gbWFpbnRhaW4gb25lIGNvZGUgYmFzZSB0aGF0IHdpbGwgbWFrZSBpdCBl
YXNpZXIgdG8gY29sbGVjdCByaWNoIGxvZ3MgYmV5b25kIGZpcmV3YWxsIGxv
Z3MuCiAgICAtIFtob25leXBvdHBpXShodHRwczovL2dpdGh1Yi5jb20vZnJl
ZTV0eTFlL2hvbmV5cG90cGkpIC0gU2NyaXB0IGZvciB0dXJuaW5nIGEgUmFz
cGJlcnJ5IFBpIGludG8gYSBIb25leVBvdCBQaS4KCi0gUmVzZWFyY2ggUGFw
ZXJzCiAgICAtIFtIb25leXBvdCByZXNlYXJjaCBwYXBlcnNdKGh0dHBzOi8v
Z2l0aHViLmNvbS9zaGJobXNpbmdoNzIvSG9uZXlwb3QtUmVzZWFyY2gtUGFw
ZXJzKSAtIFBERnMgb2YgcmVzZWFyY2ggcGFwZXJzIG9uIGhvbmV5cG90cy4K
ICAgIC0gW3ZFWUVdKGh0dHBzOi8vbGluay5zcHJpbmdlci5jb20vYXJ0aWNs
ZS8xMC4xMDA3JTJGczEwMTE1LTAwOC0wMTM3LTMpIC0gQmVoYXZpb3JhbCBm
b290cHJpbnRpbmcgZm9yIHNlbGYtcHJvcGFnYXRpbmcgd29ybSBkZXRlY3Rp
b24gYW5kIHByb2ZpbGluZy4K
",,3724,"bGFuZ3VhZ2U6IHJ1YnkKcnZtOgogICAgLSAyLjIKYmVmb3JlX3NjcmlwdDoK
ICAgIC0gZ2VtIGluc3RhbGwgYXdlc29tZV9ib3QKc2NyaXB0OgogICAgLSBh
d2Vzb21lX2JvdCBSRUFETUUubWQgLS13aGl0ZS1saXN0IGh0dHBzOi8vZ2l0
aHViLmNvbS9zaW5kcmVzb3JodXMvYXdlc29tZSxodHRwOi8vaHBmcmllbmRz
LmhvbmV5Y2xvdWQubmV0LyMvaG9tZSxodHRwczovL21hbHdyLmNvbS8KICAg
IC0gYXdlc29tZV9ib3QgUkVBRE1FX0NOLm1kIC0td2hpdGUtbGlzdCBodHRw
czovL2dpdGh1Yi5jb20vc2luZHJlc29yaHVzL2F3ZXNvbWUsaHR0cDovL2hw
ZnJpZW5kcy5ob25leWNsb3VkLm5ldC8jL2hvbWUsaHR0cHM6Ly9tYWx3ci5j
b20vCiAgICAK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'PINRemoteImage',39537103,"b'A thread safe, performant, feature rich image fetcher'",b'Objective-C',40,3723,,97,False,b'https://api.github.com/repos/pinterest/PINRemoteImage/forks',"IyBQSU5SZW1vdGVJbWFnZQoKIyMgRmFzdCwgbm9uLWRlYWRsb2NraW5nIHBh
cmFsbGVsIGltYWdlIGRvd25sb2FkZXIgYW5kIGNhY2hlIGZvciBpT1MKClsh
W0NvY29hUG9kcyBjb21wYXRpYmxlXShodHRwczovL2ltZy5zaGllbGRzLmlv
L2NvY29hcG9kcy92L1BJTlJlbW90ZUltYWdlLnN2Zz9zdHlsZT1mbGF0KV0o
aHR0cHM6Ly9jb2NvYXBvZHMub3JnL3BvZHMvUElOUmVtb3RlSW1hZ2UpClsh
W0NhcnRoYWdlIGNvbXBhdGlibGVdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8v
YmFkZ2UvQ2FydGhhZ2UtY29tcGF0aWJsZS00QkM1MUQuc3ZnP3N0eWxlPWZs
YXQpXShodHRwczovL2dpdGh1Yi5jb20vQ2FydGhhZ2UvQ2FydGhhZ2UpClsh
W0J1aWxkIHN0YXR1c10oaHR0cHM6Ly9iYWRnZS5idWlsZGtpdGUuY29tLzU1
NmY3NTFiYjY0NTVlOTY2ODdhNWY4ZmIwNWE2NWYyZGY5ZGI4YjAzMzEyMWI4
YzNkLnN2Zz9icmFuY2g9bWFzdGVyJnN0eWxlPWZsYXQpXShodHRwczovL2J1
aWxka2l0ZS5jb20vcGludGVyZXN0L3BpbnJlbW90ZWltYWdlKQoKW1BJTlJl
bW90ZUltYWdlTWFuYWdlcl0oU291cmNlL0NsYXNzZXMvUElOUmVtb3RlSW1h
Z2VNYW5hZ2VyLmgpIGlzIGFuIGltYWdlIGRvd25sb2FkaW5nLCBwcm9jZXNz
aW5nIGFuZCBjYWNoaW5nIG1hbmFnZXIuIEl0IHVzZXMgdGhlIGNvbmNlcHQg
b2YgZG93bmxvYWQgYW5kIHByb2Nlc3NpbmcgdGFza3MgdG8gZW5zdXJlIHRo
YXQgZXZlbiBpZiBtdWx0aXBsZSBjYWxscyB0byBkb3dubG9hZCBvciBwcm9j
ZXNzIGFuIGltYWdlIGFyZSBtYWRlLCBpdCBvbmx5IG9jY3VycyBvbmUgdGlt
ZSAodW5sZXNzIGFuIGl0ZW0gaXMgbm8gbG9uZ2VyIGluIHRoZSBjYWNoZSku
IFBJTlJlbW90ZUltYWdlTWFuYWdlciBpcyBiYWNrZWQgYnkgKipHQ0QqKiBh
bmQgc2FmZSB0byAqKmFjY2VzcyoqIGZyb20gKiptdWx0aXBsZSB0aHJlYWRz
Kiogc2ltdWx0YW5lb3VzbHkuIEl0IGVuc3VyZXMgdGhhdCBpbWFnZXMgYXJl
IGRlY29kZWQgb2ZmIHRoZSBtYWluIHRocmVhZCBzbyB0aGF0IGFuaW1hdGlv
biBwZXJmb3JtYW5jZSBpc24ndCBhZmZlY3RlZC4gTm9uZSBvZiBpdHMgZXhw
b3NlZCBtZXRob2RzIGFsbG93IGZvciBzeW5jaHJvbm91cyBhY2Nlc3MuIEhv
d2V2ZXIsIGl0IGlzIG9wdGltaXplZCB0byBjYWxsIGNvbXBsZXRpb25zIG9u
IHRoZSBjYWxsaW5nIHRocmVhZCBpZiBhbiBpdGVtIGlzIGluIGl0cyBtZW1v
cnkgY2FjaGUuCgpQSU5SZW1vdGVJbWFnZSBzdXBwb3J0cyBkb3dubG9hZGlu
ZyBtYW55IHR5cGVzIG9mIGZpbGVzLiBJdCwgb2YgY291cnNlLCAqKnN1cHBv
cnRzKiogYm90aCAqKlBOR3MqKiBhbmQgKipKUEdzKiouIEl0IGFsc28gc3Vw
cG9ydHMgZGVjb2RpbmcgKipXZWJQKiogaW1hZ2VzIGlmIEdvb2dsZSdzIGxp
YnJhcnkgaXMgYXZhaWxhYmxlLiBJdCBldmVuIHN1cHBvcnRzICoqR0lGcyoq
IGFuZCAqKkFuaW1hdGVkIFdlYlAqKiB2aWEgUElOQW5pbWF0ZWRJbWFnZVZp
ZXcuCgpQSU5SZW1vdGVJbWFnZSBhbHNvIGhhcyB0d28gbWV0aG9kcyB0byBp
bXByb3ZlIHRoZSBleHBlcmllbmNlIG9mIGRvd25sb2FkaW5nIGltYWdlcyBv
biBzbG93IG5ldHdvcmsgY29ubmVjdGlvbnMuIFRoZSBmaXJzdCBpcyBzdXBw
b3J0IGZvciAqKnByb2dyZXNzaXZlIEpQR3MqKi4gVGhpcyBpc24ndCBhbnkg
b2xkIHN1cHBvcnQgZm9yIHByb2dyZXNzaXZlIEpQR3MgdGhvdWdoOiBQSU5S
ZW1vdGVJbWFnZSBhZGRzIGFuIGF0dHJhY3RpdmUgYmx1ciB0byBwcm9ncmVz
c2l2ZSBzY2FucyBiZWZvcmUgcmV0dXJuaW5nIHRoZW0uCgohW1Byb2dyZXNz
aXZlIEpQRyB3aXRoIEJsdXJdKC9wcm9ncmVzc2l2ZS5naWYgIkxvb2tzIGJl
dHRlciBvbiBkZXZpY2UuIikKCltQSU5SZW1vdGVJbWFnZUNhdGVnb3J5TWFu
YWdlcl0oUG9kL0NsYXNzZXMvUElOUmVtb3RlSW1hZ2VDYXRlZ29yeU1hbmFn
ZXIuaCkgZGVmaW5lcyBhIHByb3RvY29sIHdoaWNoIFVJVmlldyBzdWJjbGFz
c2VzIGNhbiBpbXBsZW1lbnQgYW5kIHByb3ZpZGUgZWFzeSBhY2Nlc3MgdG8K
UElOUmVtb3RlSW1hZ2VNYW5hZ2VyJ3MgbWV0aG9kcy4gVGhlcmUgYXJlICoq
YnVpbHQtaW4gY2F0ZWdvcmllcyoqIG9uICoqVUlJbWFnZVZpZXcqKiwgKipQ
SU5BbmltYXRlZEltYWdlVmlldyoqIGFuZCAqKlVJQnV0dG9uKiosIGFuZCBp
dCdzIHZlcnkgZWFzeSB0byBpbXBsZW1lbnQgYSBuZXcgY2F0ZWdvcnkuIFNl
ZSBbVUlJbWFnZVZpZXcrUElOUmVtb3RlSW1hZ2VdKC9Qb2QvQ2xhc3Nlcy9J
bWFnZSBDYXRlZ29yaWVzL1VJSW1hZ2VWaWV3K1BJTlJlbW90ZUltYWdlLmgp
IG9mIHRoZSBleGlzdGluZyBjYXRlZ29yaWVzIGZvciByZWZlcmVuY2UuCgoK
IyMjIERvd25sb2FkIGFuIGltYWdlIGFuZCBzZXQgaXQgb24gYW4gaW1hZ2Ug
dmlldzoKCioqT2JqZWN0aXZlLUMqKgpgYGBvYmpjClVJSW1hZ2VWaWV3ICpp
bWFnZVZpZXcgPSBbW1VJSW1hZ2VWaWV3IGFsbG9jXSBpbml0XTsKW2ltYWdl
VmlldyBwaW5fc2V0SW1hZ2VGcm9tVVJMOltOU1VSTCBVUkxXaXRoU3RyaW5n
OkAiaHR0cDovL3BpbnRlcmVzdC5jb20va2l0dGVuLmpwZyJdXTsKYGBgCgoq
KlN3aWZ0KioKYGBgc3dpZnQKbGV0IGltYWdlVmlldyA9IFVJSW1hZ2VWaWV3
KCkKaW1hZ2VWaWV3LnBpbl9zZXRJbWFnZShmcm9tOiBVUkwoc3RyaW5nOiAi
aHR0cHM6Ly9waW50ZXJlc3QuY29tL2tpdHRlbi5qcGciKSEpCmBgYAoKIyMj
IERvd25sb2FkIGEgcHJvZ3Jlc3NpdmUganBlZyBhbmQgZ2V0IGF0dHJhY3Rp
dmUgYmx1cnJlZCB1cGRhdGVzOgoKKipPYmplY3RpdmUtQyoqCmBgYG9iamMK
VUlJbWFnZVZpZXcgKmltYWdlVmlldyA9IFtbVUlJbWFnZVZpZXcgYWxsb2Nd
IGluaXRdOwpbaW1hZ2VWaWV3IHNldFBpbl91cGRhdGVXaXRoUHJvZ3Jlc3M6
WUVTXTsKW2ltYWdlVmlldyBwaW5fc2V0SW1hZ2VGcm9tVVJMOltOU1VSTCBV
UkxXaXRoU3RyaW5nOkAiaHR0cDovL3BpbnRlcmVzdC5jb20vcHJvZ3Jlc3Np
dmVLaXR0ZW4uanBnIl1dOwpgYGAKCioqU3dpZnQqKgpgYGBzd2lmdApsZXQg
aW1hZ2VWaWV3ID0gVUlJbWFnZVZpZXcoKQppbWFnZVZpZXcucGluX3VwZGF0
ZVdpdGhQcm9ncmVzcyA9IHRydWUKaW1hZ2VWaWV3LnBpbl9zZXRJbWFnZShm
cm9tOiBVUkwoc3RyaW5nOiAiaHR0cHM6Ly9waW50ZXJlc3QuY29tL3Byb2dy
ZXNzaXZlS2l0dGVuLmpwZyIpISkKYGBgCgojIyMgRG93bmxvYWQgYSBXZWJQ
IGZpbGUKCioqT2JqZWN0aXZlLUMqKgpgYGBvYmpjClVJSW1hZ2VWaWV3ICpp
bWFnZVZpZXcgPSBbW1VJSW1hZ2VWaWV3IGFsbG9jXSBpbml0XTsKW2ltYWdl
VmlldyBwaW5fc2V0SW1hZ2VGcm9tVVJMOltOU1VSTCBVUkxXaXRoU3RyaW5n
OkAiaHR0cDovL3BpbnRlcmVzdC5jb20vZ29vZ2xlS2l0dGVuLndlYnAiXV07
CmBgYAoKKipTd2lmdCoqCmBgYHN3aWZ0CmxldCBpbWFnZVZpZXcgPSBVSUlt
YWdlVmlldygpCmltYWdlVmlldy5waW5fc2V0SW1hZ2UoZnJvbTogVVJMKHN0
cmluZzogImh0dHBzOi8vcGludGVyZXN0LmNvbS9nb29nbGVLaXR0ZW4ud2Vi
cCIpISkKYGBgCgojIyMgRG93bmxvYWQgYSBHSUYgYW5kIGRpc3BsYXkgd2l0
aCBQSU5BbmltYXRlZEltYWdlVmlldwoKKipPYmplY3RpdmUtQyoqCmBgYG9i
amMKUElOQW5pbWF0ZWRJbWFnZVZpZXcgKmFuaW1hdGVkSW1hZ2VWaWV3ID0g
W1tQSU5BbmltYXRlZEltYWdlVmlldyBhbGxvY10gaW5pdF07ClthbmltYXRl
ZEltYWdlVmlldyBwaW5fc2V0SW1hZ2VGcm9tVVJMOltOU1VSTCBVUkxXaXRo
U3RyaW5nOkAiaHR0cDovL3BpbnRlcmVzdC5jb20vZmx5aW5nS2l0dGVuLmdp
ZiJdXTsKYGBgCgoqKlN3aWZ0KioKYGBgc3dpZnQKbGV0IGFuaW1hdGVkSW1h
Z2VWaWV3ID0gUElOQW5pbWF0ZWRJbWFnZVZpZXcoKQphbmltYXRlZEltYWdl
Vmlldy5waW5fc2V0SW1hZ2UoZnJvbTogVVJMKHN0cmluZzogImh0dHA6Ly9w
aW50ZXJlc3QuY29tL2ZseWluZ0tpdHRlbi5naWYiKSEpCmBgYAoKIyMjIERv
d25sb2FkIGFuZCBwcm9jZXNzIGFuIGltYWdlCgoqKk9iamVjdGl2ZS1DKioK
YGBgb2JqYwpVSUltYWdlVmlldyAqaW1hZ2VWaWV3ID0gW1tVSUltYWdlVmll
dyBhbGxvY10gaW5pdF07CltzZWxmLmltYWdlVmlldyBwaW5fc2V0SW1hZ2VG
cm9tVVJMOltOU1VSTCBVUkxXaXRoU3RyaW5nOkAiaHR0cHM6Ly9pLnBpbmlt
Zy5jb20vNzM2eC81Yi9jNi9jNS81YmM2YzUzODdmZjZmMTA0ZmQ2NDJmMmIz
NzVlZmJhMy5qcGciXSBwcm9jZXNzb3JLZXk6QCJyb3VuZGVkIiBwcm9jZXNz
b3I6XlVJSW1hZ2UgKihQSU5SZW1vdGVJbWFnZU1hbmFnZXJSZXN1bHQgKnJl
c3VsdCwgTlNVSW50ZWdlciAqY29zdCkKIHsKICAgICBDR1NpemUgdGFyZ2V0
U2l6ZSA9IENHU2l6ZU1ha2UoMjAwLCAzMDApOwogICAgIENHUmVjdCBpbWFn
ZVJlY3QgPSBDR1JlY3RNYWtlKDAsIDAsIHRhcmdldFNpemUud2lkdGgsIHRh
cmdldFNpemUuaGVpZ2h0KTsKICAgICBVSUdyYXBoaWNzQmVnaW5JbWFnZUNv
bnRleHQoaW1hZ2VSZWN0LnNpemUpOwogICAgIFVJQmV6aWVyUGF0aCAqYmV6
aWVyUGF0aCA9IFtVSUJlemllclBhdGggYmV6aWVyUGF0aFdpdGhSb3VuZGVk
UmVjdDppbWFnZVJlY3QgY29ybmVyUmFkaXVzOjcuMF07CiAgICAgW2Jlemll
clBhdGggYWRkQ2xpcF07CgogICAgIENHRmxvYXQgc2l6ZU11bHRpcGxpZXIg
PSBNQVgodGFyZ2V0U2l6ZS53aWR0aCAvIHJlc3VsdC5pbWFnZS5zaXplLndp
ZHRoLCB0YXJnZXRTaXplLmhlaWdodCAvIHJlc3VsdC5pbWFnZS5zaXplLmhl
aWdodCk7CgogICAgIENHUmVjdCBkcmF3UmVjdCA9IENHUmVjdE1ha2UoMCwg
MCwgcmVzdWx0LmltYWdlLnNpemUud2lkdGggKiBzaXplTXVsdGlwbGllciwg
cmVzdWx0LmltYWdlLnNpemUuaGVpZ2h0ICogc2l6ZU11bHRpcGxpZXIpOwog
ICAgIGlmIChDR1JlY3RHZXRNYXhYKGRyYXdSZWN0KSA+IENHUmVjdEdldE1h
eFgoaW1hZ2VSZWN0KSkgewogICAgICAgICBkcmF3UmVjdC5vcmlnaW4ueCAt
PSAoQ0dSZWN0R2V0TWF4WChkcmF3UmVjdCkgLSBDR1JlY3RHZXRNYXhYKGlt
YWdlUmVjdCkpIC8gMi4wOwogICAgIH0KICAgICBpZiAoQ0dSZWN0R2V0TWF4
WShkcmF3UmVjdCkgPiBDR1JlY3RHZXRNYXhZKGltYWdlUmVjdCkpIHsKICAg
ICAgICAgZHJhd1JlY3Qub3JpZ2luLnkgLT0gKENHUmVjdEdldE1heFkoZHJh
d1JlY3QpIC0gQ0dSZWN0R2V0TWF4WShpbWFnZVJlY3QpKSAvIDIuMDsKICAg
ICB9CgogICAgIFtyZXN1bHQuaW1hZ2UgZHJhd0luUmVjdDpkcmF3UmVjdF07
CgogICAgIFVJSW1hZ2UgKnByb2Nlc3NlZEltYWdlID0gVUlHcmFwaGljc0dl
dEltYWdlRnJvbUN1cnJlbnRJbWFnZUNvbnRleHQoKTsKICAgICBVSUdyYXBo
aWNzRW5kSW1hZ2VDb250ZXh0KCk7CiAgICAgcmV0dXJuIHByb2Nlc3NlZElt
YWdlOwogfV07CmBgYAoKKipTd2lmdCoqCmBgYHN3aWZ0CmxldCBpbWFnZVZp
ZXcgPSBGTEFuaW1hdGVkSW1hZ2VWaWV3KCkKaW1hZ2VWaWV3LnBpbl9zZXRJ
bWFnZShmcm9tOiBVUkwoc3RyaW5nOiAiaHR0cHM6Ly9pLnBpbmltZy5jb20v
NzM2eC81Yi9jNi9jNS81YmM2YzUzODdmZjZmMTA0ZmQ2NDJmMmIzNzVlZmJh
My5qcGciKSEsIHByb2Nlc3NvcktleTogInJvdW5kZWQiKSAgeyAocmVzdWx0
LCB1bnNhZmVQb2ludGVyKSAtPiBVSUltYWdlPyBpbgoKICAgIGd1YXJkIGxl
dCBpbWFnZSA9IHJlc3VsdC5pbWFnZSBlbHNlIHsgcmV0dXJuIG5pbCB9Cgog
ICAgbGV0IHJhZGl1cyA6IENHRmxvYXQgPSA3LjAKICAgIGxldCB0YXJnZXRT
aXplID0gQ0dTaXplKHdpZHRoOiAyMDAsIGhlaWdodDogMzAwKQogICAgbGV0
IGltYWdlUmVjdCA9IENHUmVjdCh4OiAwLCB5OiAwLCB3aWR0aDogdGFyZ2V0
U2l6ZS53aWR0aCwgaGVpZ2h0OiB0YXJnZXRTaXplLmhlaWdodCkKCiAgICBV
SUdyYXBoaWNzQmVnaW5JbWFnZUNvbnRleHQoaW1hZ2VSZWN0LnNpemUpCgog
ICAgbGV0IGJlemllclBhdGggPSBVSUJlemllclBhdGgocm91bmRlZFJlY3Q6
IGltYWdlUmVjdCwgY29ybmVyUmFkaXVzOiByYWRpdXMpCiAgICBiZXppZXJQ
YXRoLmFkZENsaXAoKQoKICAgIGxldCB3aWR0aE11bHRpcGxpZXIgOiBDR0Zs
b2F0ID0gdGFyZ2V0U2l6ZS53aWR0aCAvIGltYWdlLnNpemUud2lkdGgKICAg
IGxldCBoZWlnaHRNdWx0aXBsaWVyIDogQ0dGbG9hdCA9IHRhcmdldFNpemUu
aGVpZ2h0IC8gaW1hZ2Uuc2l6ZS5oZWlnaHQKICAgIGxldCBzaXplTXVsdGlw
bGllciA9IG1heCh3aWR0aE11bHRpcGxpZXIsIGhlaWdodE11bHRpcGxpZXIp
CgogICAgdmFyIGRyYXdSZWN0ID0gQ0dSZWN0KHg6IDAsIHk6IDAsIHdpZHRo
OiBpbWFnZS5zaXplLndpZHRoICogc2l6ZU11bHRpcGxpZXIsIGhlaWdodDog
aW1hZ2Uuc2l6ZS5oZWlnaHQgKiBzaXplTXVsdGlwbGllcikKICAgIGlmIChk
cmF3UmVjdC5tYXhYID4gaW1hZ2VSZWN0Lm1heFgpIHsKICAgICAgICBkcmF3
UmVjdC5vcmlnaW4ueCAtPSAoZHJhd1JlY3QubWF4WCAtIGltYWdlUmVjdC5t
YXhYKSAvIDIKICAgIH0KICAgIGlmIChkcmF3UmVjdC5tYXhZID4gaW1hZ2VS
ZWN0Lm1heFkpIHsKICAgICAgICBkcmF3UmVjdC5vcmlnaW4ueSAtPSAoZHJh
d1JlY3QubWF4WSAtIGltYWdlUmVjdC5tYXhZKSAvIDIKICAgIH0KCiAgICBp
bWFnZS5kcmF3KGluOiBkcmF3UmVjdCkKCiAgICBVSUNvbG9yLnJlZC5zZXRT
dHJva2UoKQogICAgYmV6aWVyUGF0aC5saW5lV2lkdGggPSA1LjAKICAgIGJl
emllclBhdGguc3Ryb2tlKCkKCiAgICBsZXQgY3R4ID0gVUlHcmFwaGljc0dl
dEN1cnJlbnRDb250ZXh0KCkKICAgIGN0eD8uc2V0QmxlbmRNb2RlKENHQmxl
bmRNb2RlLm92ZXJsYXkpCiAgICBjdHg/LnNldEFscGhhKDAuNSkKCiAgICBs
ZXQgbG9nbyA9IFVJSW1hZ2UobmFtZWQ6ICJ3aGl0ZS1waW50ZXJlc3QtbG9n
byIpCiAgICBjdHg/LnNjYWxlQnkoeDogMS4wLCB5OiAtMS4wKQogICAgY3R4
Py50cmFuc2xhdGVCeSh4OiAwLjAsIHk6IC1kcmF3UmVjdC5zaXplLmhlaWdo
dCkKCiAgICBpZiBsZXQgY29yZUdyYXBoaWNzSW1hZ2UgPSBsb2dvPy5jZ0lt
YWdlIHsKICAgICAgICBjdHg/LmRyYXcoY29yZUdyYXBoaWNzSW1hZ2UsIGlu
OiBDR1JlY3QoeDogOTAsIHk6IDEwLCB3aWR0aDogbG9nbyEuc2l6ZS53aWR0
aCwgaGVpZ2h0OiBsb2dvIS5zaXplLmhlaWdodCkpCiAgICB9CgogICAgbGV0
IHByb2Nlc3NlZEltYWdlID0gVUlHcmFwaGljc0dldEltYWdlRnJvbUN1cnJl
bnRJbWFnZUNvbnRleHQoKQogICAgVUlHcmFwaGljc0VuZEltYWdlQ29udGV4
dCgpCgogICAgcmV0dXJuIHByb2Nlc3NlZEltYWdlCgp9CmBgYAoKIyMjIEhh
bmRsZSBBdXRoZW50aWNhdGlvbgoKKipPYmplY3RpdmUtQyoqCmBgYG9iamMK
W1tQSU5SZW1vdGVJbWFnZU1hbmFnZXIgc2hhcmVkSW1hZ2VNYW5hZ2VyXSBz
ZXRBdXRoZW50aWNhdGlvbkNoYWxsZW5nZTpeKE5TVVJMU2Vzc2lvblRhc2sg
KnRhc2ssIE5TVVJMQXV0aGVudGljYXRpb25DaGFsbGVuZ2UgKmNoYWxsZW5n
ZSwgUElOUmVtb3RlSW1hZ2VNYW5hZ2VyQXV0aGVudGljYXRpb25DaGFsbGVu
Z2VDb21wbGV0aW9uSGFuZGxlciBhQ29tcGxldGlvbikgewphQ29tcGxldGlv
bihOU1VSTFNlc3Npb25BdXRoQ2hhbGxlbmdlUGVyZm9ybURlZmF1bHRIYW5k
bGluZywgbmlsKV07CmBgYAoKKipTd2lmdCoqCmBgYHN3aWZ0ClBJTlJlbW90
ZUltYWdlTWFuYWdlci5zaGFyZWQoKS5zZXRBdXRoZW50aWNhdGlvbkNoYWxs
ZW5nZSB7ICh0YXNrLCBjaGFsbGVuZ2UsIGNvbXBsZXRpb24pIGluCiAgY29t
cGxldGlvbj8oLnBlcmZvcm1EZWZhdWx0SGFuZGxpbmcsIG5pbCkKfQpgYGAK
CiMjIyBTdXBwb3J0IGZvciBoaWdoIHJlc29sdXRpb24gaW1hZ2VzCkN1cnJl
bnRseSB0aGVyZSBhcmUgdHdvIHdheXMgUElOUmVtb3RlSW1hZ2UgaXMgc3Vw
cG9ydGluZyBoaWdoIHJlc29sdXRpb24gaW1hZ2VzOgoxLiBJZiB0aGUgVVJM
IGNvbnRhaW5zIGFuIGBfMnguYCBvciBhbiBgXzN4LmAgcG9zdGZpeCBpdCB3
aWxsIGJlIGF1dG9tYXRpY2FsbHkgaGFuZGxlZCBieSBQSU5SZW1vdGVJbWFn
ZSBhbmQgdGhlIHJlc3VsdGluZyBpbWFnZSB3aWxsIGJlIHJldHVybmVkIGF0
IHRoZSByaWdodCBzY2FsZS4KMi4gSWYgaXQncyBub3QgcG9zc2libGUgdG8g
cHJvdmlkZSBhbiBVUkwgd2l0aCBhbiBgXzJ4LmAgb3IgYF8zeC5gIHBvc3Rm
aXgsIHlvdSBjYW4gYWxzbyBoYW5kbGUgaXQgd2l0aCBhIGNvbXBsZXRpb24g
aGFuZGxlcjoKYGBgb2JqYwpOU1VSTCAqdXJsID0gLi4uOwpfX3dlYWsgVUlJ
bWFnZVZpZXcgKndlYWtJbWFnZVZpZXcgPSBzZWxmLmltYWdlVmlldzsKW3Nl
bGYuaW1hZ2VWaWV3IHBpbl9zZXRJbWFnZUZyb21VUkw6dXJsIGNvbXBsZXRp
b246XihQSU5SZW1vdGVJbWFnZU1hbmFnZXJSZXN1bHQgKiBfTm9ubnVsbCBy
ZXN1bHQpIHsKICBDR0Zsb2F0IHNjYWxlID0gVUlTY3JlZW4ubWFpblNjcmVl
bi5zY2FsZTsKICBpZiAoc2NhbGUgPiAxLjApIHsKICAgIFVJSW1hZ2UgKmlt
YWdlID0gcmVzdWx0LmltYWdlOwogICAgd2Vha0ltYWdlVmlldy5pbWFnZSA9
IFtVSUltYWdlIGltYWdlV2l0aENHSW1hZ2U6aW1hZ2UuQ0dJbWFnZSBzY2Fs
ZTpzY2FsZSBvcmllbnRhdGlvbjppbWFnZS5pbWFnZU9yaWVudGF0aW9uXTsK
ICAgIH0KfV07CmBgYAoKIyMjIFNldCBzb21lIGxpbWl0cwpgYGAKLy8gY2Fj
aGUgaXMgYW4gaW5zdGFuY2Ugb2YgUElOQ2FjaGUgYXMgbG9uZyBhcyB5b3Ug
aGF2ZW4ndCBvdmVycmlkZGVuIGRlZmF1bHRJbWFnZUNhY2hlClBJTkNhY2hl
ICpjYWNoZSA9IChQSU5DYWNoZSAqKVtbUElOUmVtb3RlSW1hZ2VNYW5hZ2Vy
IHNoYXJlZEltYWdlTWFuYWdlcl0gY2FjaGVdOwovLyBNYXggbWVtb3J5IGNv
c3QgaXMgYmFzZWQgb24gbnVtYmVyIG9mIHBpeGVscywgd2UgZXN0aW1hdGUg
dGhlIHNpemUgb2Ygb25lIGh1bmRyZWQgNjAweDYwMCBpbWFnZXMgYXMgb3Vy
IG1heCBtZW1vcnkgaW1hZ2UgY2FjaGUuCltbY2FjaGUgbWVtb3J5Q2FjaGVd
IHNldENvc3RMaW1pdDo2MDAgKiA2MDAgKiAxMDAgKiBbW1VJU2NyZWVuIG1h
aW5TY3JlZW5dIHNjYWxlXV07CgovLyB+NTAgTUIKW1tjYWNoZSBkaXNrQ2Fj
aGVdIHNldEJ5dGVMaW1pdDo1MCAqIDEwMjQgKiAxMDI0XTsKLy8gMzAgZGF5
cwpbW2NhY2hlIGRpc2tDYWNoZV0gc2V0QWdlTGltaXQ6NjAgKiA2MCAqIDI0
ICogMzBdOwpgYGAKCiMjIEluc3RhbGxhdGlvbgoKIyMjIENvY29hUG9kcwoK
QWRkIFtQSU5SZW1vdGVJbWFnZV0oaHR0cDovL2NvY29hcG9kcy5vcmcvP3E9
bmFtZSUzQVBJTlJlbW90ZUltYWdlKSB0byB5b3VyIGBQb2RmaWxlYCBhbmQg
cnVuIGBwb2QgaW5zdGFsbGAuCgpJZiB5b3UnZCBsaWtlIHRvIHVzZSBXZWJQ
IGltYWdlcywgYWRkIFtQSU5SZW1vdGVJbWFnZS9XZWJQXShodHRwOi8vY29j
b2Fwb2RzLm9yZy8/cT1uYW1lJTNBUElOUmVtb3RlSW1hZ2UpIHRvIHlvdXIg
YFBvZGZpbGVgIGFuZCBydW4gYHBvZCBpbnN0YWxsYC4KCgojIyMgQ2FydGhh
Z2UKCkFkZCBgZ2l0aHViICJwaW50ZXJlc3QvUElOUmVtb3RlSW1hZ2UiYCB0
byB5b3VyIENhcnRmaWxlIC4gU2VlIFtDYXJ0aGFnZSdzIHJlYWRtZV0oaHR0
cHM6Ly9naXRodWIuY29tL0NhcnRoYWdlL0NhcnRoYWdlKSBmb3IgbW9yZSBp
bmZvcm1hdGlvbiBvbiBpbnRlZ3JhdGluZyBDYXJ0aGFnZS1idWlsdCBmcmFt
ZXdvcmtzIGludG8geW91ciBwcm9qZWN0LgoKIyMjIE1hbnVhbGx5CgpbRG93
bmxvYWQgdGhlIGxhdGVzdCB0YWddKGh0dHBzOi8vZ2l0aHViLmNvbS9QaW50
ZXJlc3QvUElOUmVtb3RlSW1hZ2UvdGFncykgYW5kIGRyYWcgdGhlIGBQb2Qv
Q2xhc3Nlc2AgZm9sZGVyIGludG8geW91ciBYY29kZSBwcm9qZWN0LiBZb3Ug
bXVzdCBhbHNvIG1hbnVhbGx5IGxpbmsgYWdhaW5zdCBbUElOQ2FjaGVdKGh0
dHBzOi8vZ2l0aHViLmNvbS9waW50ZXJlc3QvUElOQ2FjaGUpLgoKSW5zdGFs
bCB0aGUgZG9jcyBieSBkb3VibGUgY2xpY2tpbmcgdGhlIGAuZG9jc2V0YCBm
aWxlIHVuZGVyIGBkb2NzL2AsIG9yIHZpZXcgdGhlbSBvbmxpbmUgYXQgW2Nv
Y29hZG9jcy5vcmddKGh0dHA6Ly9jb2NvYWRvY3Mub3JnL2RvY3NldHMvUElO
UmVtb3RlSW1hZ2UvKQoKIyMjIEdpdCBTdWJtb2R1bGUKCllvdSBjYW4gc2V0
IHVwIFBJTlJlbW90ZUltYWdlIGFzIGEgc3VibW9kdWxlIG9mIHlvdXIgcmVw
byBpbnN0ZWFkIG9mIGNsb25pbmcgYW5kIGNvcHlpbmcgYWxsIHRoZSBmaWxl
cyBpbnRvIHlvdXIgcmVwby4gQWRkIHRoZSBzdWJtb2R1bGUgdXNpbmcgdGhl
IGNvbW1hbmRzIGJlbG93IGFuZCB0aGVuIGZvbGxvdyB0aGUgbWFudWFsIGlu
c3RydWN0aW9ucyBhYm92ZS4KCiAgICBnaXQgc3VibW9kdWxlIGFkZCBodHRw
czovL2dpdGh1Yi5jb20vcGludGVyZXN0L1BJTlJlbW90ZUltYWdlLmdpdAog
ICAgZ2l0IHN1Ym1vZHVsZSB1cGRhdGUgLS1pbml0CgoKCiMjIFJlcXVpcmVt
ZW50cwoKX19QSU5SZW1vdGVJbWFnZV9fIHJlcXVpcmVzIGlPUyA3LjAgb3Ig
Z3JlYXRlci4KCiMjIENvbnRhY3QKCltHYXJyZXR0IE1vb25dKG1haWx0bzpn
YXJyZXR0QHBpbnRlcmVzdC5jb20pCltAZ2FycmV0dG1vb25dKGh0dHBzOi8v
dHdpdHRlci5jb20vZ2FycmV0dG1vb24pCltQaW50ZXJlc3RdKGh0dHBzOi8v
d3d3LnBpbnRlcmVzdC5jb20vZ2FycmV0dGx1bmFyLykKCiMjIExpY2Vuc2UK
CkNvcHlyaWdodCAyMDE1IFBpbnRlcmVzdCwgSW5jLgoKTGljZW5zZWQgdW5k
ZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNl
bnNlIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNv
bXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heSBvYnRhaW4gYSBj
b3B5IG9mIHRoZSBMaWNlbnNlIGF0IGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9s
aWNlbnNlcy9MSUNFTlNFLTIuMAoKVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxp
Y2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZSBk
aXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBv
biBhbiAiQVMgSVMiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09O
RElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGll
ZC4gW1NlZSB0aGUgTGljZW5zZV0oTElDRU5TRS50eHQpIGZvciB0aGUgc3Bl
Y2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1p
dGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4K
",,3723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'immutability-helper',52490809,b'mutate a copy of data without changing the original source',b'TypeScript',8,3723,,47,False,b'https://api.github.com/repos/kolodny/immutability-helper/forks',"aW1tdXRhYmlsaXR5LWhlbHBlcgo9PT0KClshW05QTSB2ZXJzaW9uXVtucG0t
aW1hZ2VdXVtucG0tdXJsXQpbIVtCdWlsZCBzdGF0dXNdW3RyYXZpcy1pbWFn
ZV1dW3RyYXZpcy11cmxdClshW1Rlc3QgY292ZXJhZ2VdW2NvdmVyYWxscy1p
bWFnZV1dW2NvdmVyYWxscy11cmxdClshW0Rvd25sb2Fkc11bZG93bmxvYWRz
LWltYWdlXV1bZG93bmxvYWRzLXVybF0KWyFbTWluaWZpZWQgc2l6ZV1bbWlu
LXNpemUtaW1hZ2VdXVtidW5kbGVwaG9iaWEtdXJsXQpbIVtHemlwIHNpemVd
W2d6aXAtc2l6ZS1pbWFnZV1dW2J1bmRsZXBob2JpYS11cmxdCgpNdXRhdGUg
YSBjb3B5IG9mIGRhdGEgd2l0aG91dCBjaGFuZ2luZyB0aGUgb3JpZ2luYWwg
c291cmNlCgpTZXR1cCB2aWEgTlBNCmBgYHNoCm5wbSBpbnN0YWxsIGltbXV0
YWJpbGl0eS1oZWxwZXIgLS1zYXZlCmBgYAoKVGhpcyBpcyBhIGRyb3AtaW4g
cmVwbGFjZW1lbnQgZm9yIFtgcmVhY3QtYWRkb25zLXVwZGF0ZWBdKGh0dHBz
Oi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0L2RvY3MvdXBkYXRlLmh0bWwp
OgpgYGBqcwovLyBpbXBvcnQgdXBkYXRlIGZyb20gJ3JlYWN0LWFkZG9ucy11
cGRhdGUnOwppbXBvcnQgdXBkYXRlIGZyb20gJ2ltbXV0YWJpbGl0eS1oZWxw
ZXInOwoKY29uc3Qgc3RhdGUxID0gWyd4J107CmNvbnN0IHN0YXRlMiA9IHVw
ZGF0ZShzdGF0ZTEsIHskcHVzaDogWyd5J119KTsgLy8gWyd4JywgJ3knXQpg
YGAKCk5vdGUgdGhhdCB0aGlzIG1vZHVsZSBoYXMgbm90aGluZyB0byBkbyB3
aXRoIFJlYWN0LiBIb3dldmVyLCBzaW5jZSB0aGlzIG1vZHVsZQppcyBtb3N0
IGNvbW1vbmx5IHVzZWQgd2l0aCBSZWFjdCwgdGhlIGRvY3Mgd2lsbCBmb2N1
cyBvbiBob3cgaXQgY2FuIGJlIHVzZWQgd2l0aApSZWFjdC4KCiMjIE92ZXJ2
aWV3CgpSZWFjdCBsZXRzIHlvdSB1c2Ugd2hhdGV2ZXIgc3R5bGUgb2YgZGF0
YSBtYW5hZ2VtZW50IHlvdSB3YW50LCBpbmNsdWRpbmcKbXV0YXRpb24uIEhv
d2V2ZXIsIGlmIHlvdSBjYW4gdXNlIGltbXV0YWJsZSBkYXRhIGluIHBlcmZv
cm1hbmNlLWNyaXRpY2FsIHBhcnRzCm9mIHlvdXIgYXBwbGljYXRpb24gaXQn
cyBlYXN5IHRvIGltcGxlbWVudCBhIGZhc3RbYHNob3VsZENvbXBvbmVudFVw
ZGF0ZSgpYF0oaHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QvZG9j
cy9yZWFjdC1jb21wb25lbnQuaHRtbCNzaG91bGRjb21wb25lbnR1cGRhdGUp
IG1ldGhvZAp0byBzaWduaWZpY2FudGx5IHNwZWVkIHVwIHlvdXIgYXBwLgoK
RGVhbGluZyB3aXRoIGltbXV0YWJsZSBkYXRhIGluIEphdmFTY3JpcHQgaXMg
bW9yZSBkaWZmaWN1bHQgdGhhbiBpbiBsYW5ndWFnZXMKZGVzaWduZWQgZm9y
IGl0LCBsaWtlIFtDbG9qdXJlXShodHRwOi8vY2xvanVyZS5vcmcvKS4gSG93
ZXZlciwgd2UndmUgcHJvdmlkZWQgYQpzaW1wbGUgaW1tdXRhYmlsaXR5IGhl
bHBlciwgYHVwZGF0ZSgpYCwgdGhhdCBtYWtlcyBkZWFsaW5nIHdpdGggdGhp
cyB0eXBlIG9mCmRhdGEgbXVjaCBlYXNpZXIsICp3aXRob3V0KiBmdW5kYW1l
bnRhbGx5IGNoYW5naW5nIGhvdyB5b3VyIGRhdGEgaXMgcmVwcmVzZW50ZWQu
CllvdSBjYW4gYWxzbyB0YWtlIGEgbG9vayBhdCBGYWNlYm9vaydzCltJbW11
dGFibGUuanNdKGh0dHBzOi8vZmFjZWJvb2suZ2l0aHViLmlvL2ltbXV0YWJs
ZS1qcy9kb2NzLykgYW5kIFJlYWN04oCZcwpbVXNpbmcgSW1tdXRhYmxlIERh
dGEgU3RydWN0dXJlc10oaHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVh
Y3QvZG9jcy9vcHRpbWl6aW5nLXBlcmZvcm1hbmNlLmh0bWwjdXNpbmctaW1t
dXRhYmxlLWRhdGEtc3RydWN0dXJlcykgc2VjdGlvbiBmb3IgbW9yZQpkZXRh
aWwgb24gSW1tdXRhYmxlLmpzLgoKIyMjIFRoZSBNYWluIElkZWEKCklmIHlv
dSBtdXRhdGUgZGF0YSBsaWtlIHRoaXM6CgpgYGBqcwpteURhdGEueC55Lnog
PSA3OwovLyBvci4uLgpteURhdGEuYS5iLnB1c2goOSk7CmBgYAoKWW91IGhh
dmUgbm8gd2F5IG9mIGRldGVybWluaW5nIHdoaWNoIGRhdGEgaGFzIGNoYW5n
ZWQgc2luY2UgdGhlIHByZXZpb3VzIGNvcHkKaGFzIGJlZW4gb3ZlcndyaXR0
ZW4uIEluc3RlYWQsIHlvdSBuZWVkIHRvIGNyZWF0ZSBhIG5ldyBjb3B5IG9m
IGBteURhdGFgIGFuZApjaGFuZ2Ugb25seSB0aGUgcGFydHMgb2YgaXQgdGhh
dCBuZWVkIHRvIGJlIGNoYW5nZWQuIFRoZW4geW91IGNhbiBjb21wYXJlIHRo
ZQpvbGQgY29weSBvZiBgbXlEYXRhYCB3aXRoIHRoZSBuZXcgb25lIGluIGBz
aG91bGRDb21wb25lbnRVcGRhdGUoKWAgdXNpbmcKdHJpcGxlLWVxdWFsczoK
CmBgYGpzCmNvbnN0IG5ld0RhdGEgPSBkZWVwQ29weShteURhdGEpOwpuZXdE
YXRhLngueS56ID0gNzsKbmV3RGF0YS5hLmIucHVzaCg5KTsKYGBgCgpVbmZv
cnR1bmF0ZWx5LCBkZWVwIGNvcGllcyBhcmUgZXhwZW5zaXZlLCBhbmQgc29t
ZXRpbWVzIGltcG9zc2libGUuIFlvdSBjYW4KYWxsZXZpYXRlIHRoaXMgYnkg
b25seSBjb3B5aW5nIG9iamVjdHMgdGhhdCBuZWVkIHRvIGJlIGNoYW5nZWQg
YW5kIGJ5IHJldXNpbmcKdGhlIG9iamVjdHMgdGhhdCBoYXZlbid0IGNoYW5n
ZWQuIFVuZm9ydHVuYXRlbHksIGluIHRvZGF5J3MgSmF2YVNjcmlwdCB0aGlz
IGNhbgpiZSBjdW1iZXJzb21lOgoKYGBganMKaW1wb3J0IHVwZGF0ZSwgeyBl
eHRlbmQgfSBmcm9tICdpbW11dGFiaWxpdHktaGVscGVyJzsKCmNvbnN0IG5l
d0RhdGEgPSBleHRlbmQobXlEYXRhLCB7CiAgeDogZXh0ZW5kKG15RGF0YS54
LCB7CiAgICB5OiBleHRlbmQobXlEYXRhLngueSwge3o6IDd9KSwKICB9KSwK
ICBhOiBleHRlbmQobXlEYXRhLmEsIHtiOiBteURhdGEuYS5iLmNvbmNhdCg5
KX0pCn0pOwpgYGAKCldoaWxlIHRoaXMgaXMgZmFpcmx5IHBlcmZvcm1hbnQg
KHNpbmNlIGl0IG9ubHkgbWFrZXMgYSBzaGFsbG93IGNvcHkgb2YgYGxvZyBu
YApvYmplY3RzIGFuZCByZXVzZXMgdGhlIHJlc3QpLCBpdCdzIGEgYmlnIHBh
aW4gdG8gd3JpdGUuIExvb2sgYXQgYWxsIHRoZQpyZXBldGl0aW9uISBUaGlz
IGlzIG5vdCBvbmx5IGFubm95aW5nLCBidXQgYWxzbyBwcm92aWRlcyBhIGxh
cmdlIHN1cmZhY2UgYXJlYQpmb3IgYnVncy4KCiMjIGB1cGRhdGUoKWAKCmB1
cGRhdGUoKWAgcHJvdmlkZXMgc2ltcGxlIHN5bnRhY3RpYyBzdWdhciBhcm91
bmQgdGhpcyBwYXR0ZXJuIHRvIG1ha2Ugd3JpdGluZwp0aGlzIGNvZGUgZWFz
aWVyLiBUaGlzIGNvZGUgYmVjb21lczoKCmBgYGpzCmltcG9ydCB1cGRhdGUg
ZnJvbSAnaW1tdXRhYmlsaXR5LWhlbHBlcic7Cgpjb25zdCBuZXdEYXRhID0g
dXBkYXRlKG15RGF0YSwgewogIHg6IHt5OiB7ejogeyRzZXQ6IDd9fX0sCiAg
YToge2I6IHskcHVzaDogWzldfX0KfSk7CmBgYAoKV2hpbGUgdGhlIHN5bnRh
eCB0YWtlcyBhIGxpdHRsZSBnZXR0aW5nIHVzZWQgdG8gKHRob3VnaCBpdCdz
IGluc3BpcmVkIGJ5CltNb25nb0RCJ3MgcXVlcnkgbGFuZ3VhZ2VdKGh0dHA6
Ly9kb2NzLm1vbmdvZGIub3JnL21hbnVhbC9jb3JlL2NydWQtaW50cm9kdWN0
aW9uLyNxdWVyeSkpIHRoZXJlJ3Mgbm8gcmVkdW5kYW5jeSwgaXQncyBzdGF0
aWNhbGx5IGFuYWx5emFibGUgYW5kIGl0J3Mgbm90IG11Y2ggbW9yZSB0eXBp
bmcKdGhhbiB0aGUgbXV0YXRpdmUgdmVyc2lvbi4KClRoZSBgJGAtcHJlZml4
ZWQga2V5cyBhcmUgY2FsbGVkICpjb21tYW5kcyouIFRoZSBkYXRhIHN0cnVj
dHVyZSB0aGV5IGFyZQoibXV0YXRpbmciIGlzIGNhbGxlZCB0aGUgKnRhcmdl
dCouCgojIyBBdmFpbGFibGUgQ29tbWFuZHMKCiAgKiBgeyRwdXNoOiBhcnJh
eX1gIGBwdXNoKClgIGFsbCB0aGUgaXRlbXMgaW4gYGFycmF5YCBvbiB0aGUg
dGFyZ2V0LgogICogYHskdW5zaGlmdDogYXJyYXl9YCBgdW5zaGlmdCgpYCBh
bGwgdGhlIGl0ZW1zIGluIGBhcnJheWAgb24gdGhlIHRhcmdldC4KICAqIGB7
JHNwbGljZTogYXJyYXkgb2YgYXJyYXlzfWAgZm9yIGVhY2ggaXRlbSBpbiBg
YXJyYXlzYCBjYWxsIGBzcGxpY2UoKWAgb24KICB0aGUgdGFyZ2V0IHdpdGgg
dGhlIHBhcmFtZXRlcnMgcHJvdmlkZWQgYnkgdGhlIGl0ZW0uICoqKk5vdGU6
KiogVGhlIGl0ZW1zIGluCiAgdGhlIGFycmF5IGFyZSBhcHBsaWVkIHNlcXVl
bnRpYWxseSwgc28gdGhlIG9yZGVyIG1hdHRlcnMuIFRoZSBpbmRpY2VzIG9m
IHRoZQogIHRhcmdldCBtYXkgY2hhbmdlIGR1cmluZyB0aGUgb3BlcmF0aW9u
LioKICAqIGB7JHNldDogYW55fWAgcmVwbGFjZSB0aGUgdGFyZ2V0IGVudGly
ZWx5LgogICogYHskdG9nZ2xlOiBhcnJheSBvZiBzdHJpbmdzfWAgdG9nZ2xl
cyBhIGxpc3Qgb2YgYm9vbGVhbiBmaWVsZHMgZnJvbSB0aGUKICB0YXJnZXQg
b2JqZWN0LgogICogYHskdW5zZXQ6IGFycmF5IG9mIHN0cmluZ3N9YCByZW1v
dmUgdGhlIGxpc3Qgb2Yga2V5cyBpbiBgYXJyYXlgIGZyb20gdGhlCiAgdGFy
Z2V0IG9iamVjdC4KICAqIGB7JG1lcmdlOiBvYmplY3R9YCBtZXJnZSB0aGUg
a2V5cyBvZiBgb2JqZWN0YCB3aXRoIHRoZSB0YXJnZXQuCiAgKiBgeyRhcHBs
eTogZnVuY3Rpb259YCBwYXNzZXMgaW4gdGhlIGN1cnJlbnQgdmFsdWUgdG8g
dGhlIGZ1bmN0aW9uIGFuZAogIHVwZGF0ZXMgaXQgd2l0aCB0aGUgbmV3IHJl
dHVybmVkIHZhbHVlLgogICogYHskYWRkOiBhcnJheSBvZiBvYmplY3RzfWAg
YWRkIGEgdmFsdWUgdG8gYSBgTWFwYCBvciBgU2V0YC4gV2hlbiBhZGRpbmcg
dG8gYQogIGBTZXRgIHlvdSBwYXNzIGluIGFuIGFycmF5IG9mIG9iamVjdHMg
dG8gYWRkLCB3aGVuIGFkZGluZyB0byBhIE1hcCwgeW91IHBhc3MKICBpbiBg
W2tleSwgdmFsdWVdYCBhcnJheXMgbGlrZSBzbzoKICBgdXBkYXRlKG15TWFw
LCB7JGFkZDogW1snZm9vJywgJ2JhciddLCBbJ2JheicsICdib28nXV19KWAK
ICAqIGB7JHJlbW92ZTogYXJyYXkgb2Ygc3RyaW5nc31gIHJlbW92ZSB0aGUg
bGlzdCBvZiBrZXlzIGluIGFycmF5IGZyb20gYSBgTWFwYAogIG9yIGBTZXRg
LgoKIyMjIFNob3J0aGFuZCBgJGFwcGx5YCBzeW50YXgKCkFkZGl0aW9uYWxs
eSwgaW5zdGVhZCBvZiBhIGNvbW1hbmQgb2JqZWN0LCB5b3UgY2FuIHBhc3Mg
YSBmdW5jdGlvbiwgYW5kIGl0IHdpbGwKYmUgdHJlYXRlZCBhcyBpZiBpdCB3
YXMgYSBjb21tYW5kIG9iamVjdCB3aXRoIHRoZSBgJGFwcGx5YCBjb21tYW5k
OgpgdXBkYXRlKHthOiAxfSwge2E6IGZ1bmN0aW9ufSlgLiBUaGF0IGV4YW1w
bGUgd291bGQgYmUgZXF1aXZhbGVudCB0bwpgdXBkYXRlKHthOiAxfSwge2E6
IHskYXBwbHk6IGZ1bmN0aW9ufX0pYC4KCiMjIyBMaW1pdGF0aW9ucwoKOndh
cm5pbmc6IGB1cGRhdGVgIG9ubHkgd29ya3MgZm9yIF9kYXRhIHByb3BlcnRp
ZXNfLCBub3QgZm9yIF9hY2Nlc3NvciBwcm9wZXJ0aWVzXyBkZWZpbmVkIHdp
dGggYE9iamVjdC5kZWZpbmVQcm9wZXJ0eWAuIEl0IGp1c3QgZG9lcyBub3Qg
c2VlIHRoZSBsYXR0ZXIsIGFuZCB0aGVyZWZvcmUgbWlnaHQgY3JlYXRlIHNo
YWRvd2luZyBkYXRhIHByb3BlcnRpZXMgd2hpY2ggY291bGQgYnJlYWsgYXBw
bGljYXRpb24gbG9naWMgZGVwZW5kaW5nIG9uIHNldHRlciBzaWRlIGVmZmVj
dHMuIFRoZXJlZm9yZSBgdXBkYXRlYCBzaG91bGQgb25seSBiZSB1c2VkIG9u
IHBsYWluIGRhdGEgb2JqZWN0cyB0aGF0IG9ubHkgY29udGFpbiBfZGF0YSBw
cm9wZXJ0aWVzXyBhcyBkZXNjZW5kYW50cy4KCiMjIEV4YW1wbGVzCgojIyMg
U2ltcGxlIHB1c2gKCmBgYGpzCmNvbnN0IGluaXRpYWxBcnJheSA9IFsxLCAy
LCAzXTsKY29uc3QgbmV3QXJyYXkgPSB1cGRhdGUoaW5pdGlhbEFycmF5LCB7
JHB1c2g6IFs0XX0pOyAvLyA9PiBbMSwgMiwgMywgNF0KYGBgCmBpbml0aWFs
QXJyYXlgIGlzIHN0aWxsIGBbMSwgMiwgM11gLgoKIyMjIE5lc3RlZCBjb2xs
ZWN0aW9ucwoKYGBganMKY29uc3QgY29sbGVjdGlvbiA9IFsxLCAyLCB7YTog
WzEyLCAxNywgMTVdfV07CmNvbnN0IG5ld0NvbGxlY3Rpb24gPSB1cGRhdGUo
Y29sbGVjdGlvbiwgezI6IHthOiB7JHNwbGljZTogW1sxLCAxLCAxMywgMTRd
XX19fSk7Ci8vID0+IFsxLCAyLCB7YTogWzEyLCAxMywgMTQsIDE1XX1dCmBg
YApUaGlzIGFjY2Vzc2VzIGBjb2xsZWN0aW9uYCdzIGluZGV4IGAyYCwga2V5
IGBhYCwgYW5kIGRvZXMgYSBzcGxpY2Ugb2Ygb25lIGl0ZW0Kc3RhcnRpbmcg
ZnJvbSBpbmRleCBgMWAgKHRvIHJlbW92ZSBgMTdgKSB3aGlsZSBpbnNlcnRp
bmcgYDEzYCBhbmQgYDE0YC4KCiMjIyBVcGRhdGluZyBhIHZhbHVlIGJhc2Vk
IG9uIGl0cyBjdXJyZW50IG9uZQoKYGBganMKY29uc3Qgb2JqID0ge2E6IDUs
IGI6IDN9Owpjb25zdCBuZXdPYmogPSB1cGRhdGUob2JqLCB7YjogeyRhcHBs
eTogZnVuY3Rpb24oeCkge3JldHVybiB4ICogMjt9fX0pOwovLyA9PiB7YTog
NSwgYjogNn0KLy8gVGhpcyBpcyBlcXVpdmFsZW50LCBidXQgZ2V0cyB2ZXJi
b3NlIGZvciBkZWVwbHkgbmVzdGVkIGNvbGxlY3Rpb25zOgpjb25zdCBuZXdP
YmoyID0gdXBkYXRlKG9iaiwge2I6IHskc2V0OiBvYmouYiAqIDJ9fSk7CmBg
YAoKIyMjIChTaGFsbG93KSBNZXJnZQoKYGBganMKY29uc3Qgb2JqID0ge2E6
IDUsIGI6IDN9Owpjb25zdCBuZXdPYmogPSB1cGRhdGUob2JqLCB7JG1lcmdl
OiB7YjogNiwgYzogN319KTsgLy8gPT4ge2E6IDUsIGI6IDYsIGM6IDd9CmBg
YAoKIyMjIENvbXB1dGVkIFByb3BlcnR5IE5hbWVzCgpBcnJheXMgY2FuIGJl
IGluZGV4ZWQgaW50byB3aXRoIHJ1bnRpbWUgdmFyaWFibGVzIHZpYSB0aGUg
RVMyMDE1CltDb21wdXRlZCBQcm9wZXJ0eSBOYW1lc10oaHR0cHM6Ly9kZXZl
bG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9S
ZWZlcmVuY2UvT3BlcmF0b3JzL09iamVjdF9pbml0aWFsaXplciNDb21wdXRl
ZF9wcm9wZXJ0eV9uYW1lcykKZmVhdHVyZS4gQW4gb2JqZWN0IHByb3BlcnR5
IG5hbWUgZXhwcmVzc2lvbiBtYXkgYmUgd3JhcHBlZCBpbiBicmFja2V0cyBb
XSB3aGljaAp3aWxsIGJlIGV2YWx1YXRlZCBhdCBydW50aW1lIHRvIGZvcm0g
dGhlIGZpbmFsIHByb3BlcnR5IG5hbWUuCgpgYGBqcwpjb25zdCBjb2xsZWN0
aW9uID0ge2NoaWxkcmVuOiBbJ3plcm8nLCAnb25lJywgJ3R3byddfTsKY29u
c3QgaW5kZXggPSAxOwpjb25zdCBuZXdDb2xsZWN0aW9uID0gdXBkYXRlKGNv
bGxlY3Rpb24sIHtjaGlsZHJlbjoge1tpbmRleF06IHskc2V0OiAxfX19KTsK
Ly8gPT4ge2NoaWxkcmVuOiBbJ3plcm8nLCAxLCAndHdvJ119CmBgYAoKIyMj
IFJlbW92aW5nIGFuIGVsZW1lbnQgZnJvbSBhbiBhcnJheQoKYGBganMKLy8g
RGVsZXRlIGF0IGEgc3BlY2lmaWMgaW5kZXgsIG5vIG1hdHRlciB3aGF0IHZh
bHVlIGlzIGluIGl0CnVwZGF0ZShzdGF0ZSwgeyBpdGVtczogeyAkc3BsaWNl
OiBbW2luZGV4LCAxXV0gfSB9KTsKYGBgCgojIyMgW0F1dG92aXZpZmljYXRp
b25dKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0F1dG92aXZpZmlj
YXRpb24pCgpBdXRvdml2aWZpY2F0aW9uIGlzIHRoZSBhdXRvIGNyZWF0aW9u
IG9mIG5ldyBhcnJheXMgYW5kIG9iamVjdHMgd2hlbiBuZWVkZWQuIEluCnRo
ZSBjb250ZXh0IG9mIGphdmFzY3JpcHQgdGhhdCB3b3VsZCBtZWFuIHNvbWV0
aGluZyBsaWtlIHRoaXMKCmBgYGpzCmNvbnN0IHN0YXRlID0ge30Kc3RhdGUu
YS5iLmMgPSAxOyAvLyBzdGF0ZSB3b3VsZCBlcXVhbCB7IGE6IHsgYjogeyBj
OiAxIH0gfSB9CmBgYAoKU2luY2UgamF2YXNjcmlwdCBkb2Vzbid0IGhhdmUg
dGhpcyAiZmVhdHVyZSIsIHRoZSBzYW1lIGFwcGxpZXMgdG8KYGltbXV0YWJp
bGl0eS1oZWxwZXJgLiBUaGUgcmVhc29uIHdoeSB0aGlzIGlzIHByYWN0aWNh
bGx5IGltcG9zc2libGUgaW4KamF2YXNjcmlwdCBhbmQgYnkgZXh0ZW5zaW9u
IGBpbW11dGFiaWxpdHktaGVscGVyYCBpcyB0aGUgZm9sbG93aW5nOgoKYGBg
anMKdmFyIHN0YXRlID0ge30Kc3RhdGUudGhpbmdbMF0gPSAnZm9vJyAvLyBX
aGF0IHR5cGUgc2hvdWxkIHN0YXRlLnRoaW5nIGhhdmU/IFNob3VsZCBpdCBi
ZSBhbiBvYmplY3Qgb3IgYXJyYXk/CnN0YXRlLnRoaW5nMlsxXSA9ICdmb28y
JyAvLyBXaGF0IGFib3V0IHRoaW5nMj8gVGhpcyBtdXN0IGJlIGFuIG9iamVj
dCEKc3RhdGUudGhpbmczID0gWyd0aGluZzMnXSAvLyBUaGlzIGlzIHJlZ3Vs
YXIganMsIHRoaXMgd29ya3Mgd2l0aG91dCBhdXRvdml2aWZpY2F0aW9uCnN0
YXRlLnRoaW5nM1sxXSA9ICdmb28zJyAvLyBIbW0sIG5vdGljZSB0aGF0IHN0
YXRlLnRoaW5nMiBpcyBhbiBvYmplY3QsIHlldCB0aGlzIGlzIGFuIGFycmF5
CnN0YXRlLnRoaW5nMi5zbGljZSAvLyBzaG91bGQgYmUgdW5kZWZpbmVkCnN0
YXRlLnRoaW5nMi5zbGljZSAvLyBzaG91bGQgYmUgYSBmdW5jdGlvbgpgYGAK
CklmIHlvdSBuZWVkIHRvIHNldCBzb21ldGhpbmcgZGVlcGx5IG5lc3RlZCBh
bmQgZG9uJ3Qgd2FudCB0byBoYXZlIHRvIHNldCBlYWNoCmxheWVyIGRvd24g
dGhlIGxpbmUsIGNvbnNpZGVyIHVzaW5nIHRoaXMgdGVjaG5pcXVlIHdoaWNo
IGlzIHNob3duIHdpdGggYQpjb250cml2ZWQgZXhhbXBsZToKCmBgYGpzCnZh
ciBzdGF0ZSA9IHt9CnZhciBkZXNpcmVkU3RhdGUgPSB7CiAgZm9vOiBbCiAg
ICB7CiAgICAgIGJhcjogWyd4JywgJ3knLCAneiddCiAgICB9LAogIF0sCn07
Cgpjb25zdCBzdGF0ZTIgPSB1cGRhdGUoc3RhdGUsIHsKICBmb286IGZvbyA9
PgogICAgdXBkYXRlKGZvbyB8fCBbXSwgewogICAgICAwOiBmb29aZXJvID0+
CiAgICAgICAgdXBkYXRlKGZvb1plcm8gfHwge30sIHsKICAgICAgICAgIGJh
cjogYmFyID0+IHVwZGF0ZShiYXIgfHwgW10sIHsgJHB1c2g6IFsieCIsICJ5
IiwgInoiXSB9KQogICAgICAgIH0pCiAgICB9KQp9KTsKCmNvbnNvbGUubG9n
KEpTT04uc3RyaW5naWZ5KHN0YXRlMikgPT09IEpTT04uc3RyaW5naWZ5KGRl
c2lyZWRTdGF0ZSkpIC8vIHRydWUKLy8gbm90ZSB0aGF0IHN0YXRlIGNvdWxk
IGhhdmUgYmVlbiBkZWNsYXJlZCBhcyBhbnkgb2YgdGhlIGZvbGxvd2luZyBh
bmQgaXQgd291bGQgc3RpbGwgb3V0cHV0IHRydWU6Ci8vIHZhciBzdGF0ZSA9
IHsgZm9vOiBbXSB9Ci8vIHZhciBzdGF0ZSA9IHsgZm9vOiBbIHt9IF0gfQov
LyB2YXIgc3RhdGUgPSB7IGZvbzogWyB7YmFyOiBbXX0gXSB9CmBgYAoKWW91
IGNhbiBhbHNvIGNob29zZSB0byB1c2UgdGhlIGV4dGVuZCBmdW5jdGlvbmFs
aXR5IHRvIGFkZCBhbiBgJGF1dG9gIGFuZApgJGF1dG9BcnJheWAgY29tbWFu
ZDoKCmBgYGpzCmltcG9ydCB1cGRhdGUsIHsgZXh0ZW5kIH0gZnJvbSAnaW1t
dXRhYmlsaXR5LWhlbHBlcic7CgpleHRlbmQoJyRhdXRvJywgZnVuY3Rpb24o
dmFsdWUsIG9iamVjdCkgewogIHJldHVybiBvYmplY3QgPwogICAgdXBkYXRl
KG9iamVjdCwgdmFsdWUpOgogICAgdXBkYXRlKHt9LCB2YWx1ZSk7Cn0pOwpl
eHRlbmQoJyRhdXRvQXJyYXknLCBmdW5jdGlvbih2YWx1ZSwgb2JqZWN0KSB7
CiAgcmV0dXJuIG9iamVjdCA/CiAgICB1cGRhdGUob2JqZWN0LCB2YWx1ZSk6
CiAgICB1cGRhdGUoW10sIHZhbHVlKTsKfSk7Cgp2YXIgc3RhdGUgPSB7fQp2
YXIgZGVzaXJlZFN0YXRlID0gewogIGZvbzogWwogICAgewogICAgICBiYXI6
IFsneCcsICd5JywgJ3onXQogICAgfSwKICBdLAp9Owp2YXIgc3RhdGUyID0g
dXBkYXRlKHN0YXRlLCB7CiAgZm9vOiB7JGF1dG9BcnJheTogewogICAgMDog
eyRhdXRvOiB7CiAgICAgIGJhcjogeyRhdXRvQXJyYXk6IHskcHVzaDogWyd4
JywgJ3knLCAneiddfX0KICAgIH19CiAgfX0KfSk7CmNvbnNvbGUubG9nKEpT
T04uc3RyaW5naWZ5KHN0YXRlMikgPT09IEpTT04uc3RyaW5naWZ5KGRlc2ly
ZWRTdGF0ZSkpIC8vIHRydWUKYGBgCgotLS0KCiMjIEFkZGluZyB5b3VyIG93
biBjb21tYW5kcwoKVGhlIG1haW4gZGlmZmVyZW5jZSB0aGlzIG1vZHVsZSBo
YXMgd2l0aCBgcmVhY3QtYWRkb25zLXVwZGF0ZWAgaXMgdGhhdAp5b3UgY2Fu
IGV4dGVuZCB0aGlzIHRvIGdpdmUgaXQgbW9yZSBmdW5jdGlvbmFsaXR5OgoK
YGBganMKaW1wb3J0IHVwZGF0ZSwgeyBleHRlbmQgfSBmcm9tICdpbW11dGFi
aWxpdHktaGVscGVyJzsKCmV4dGVuZCgnJGFkZHRheCcsIGZ1bmN0aW9uKHRh
eCwgb3JpZ2luYWwpIHsKICByZXR1cm4gb3JpZ2luYWwgKyAodGF4ICogb3Jp
Z2luYWwpOwp9KTsKY29uc3Qgc3RhdGUgPSB7IHByaWNlOiAxMjMgfTsKY29u
c3Qgd2l0aFRheCA9IHVwZGF0ZShzdGF0ZSwgewogIHByaWNlOiB7JGFkZHRh
eDogMC44fSwKfSk7CmFzc2VydChKU09OLnN0cmluZ2lmeSh3aXRoVGF4KSA9
PT0gSlNPTi5zdHJpbmdpZnkoeyBwcmljZTogMjIxLjQgfSkpOwpgYGAKCk5v
dGUgdGhhdCBgb3JpZ2luYWxgIGluIHRoZSBmdW5jdGlvbiBhYm92ZSBpcyB0
aGUgb3JpZ2luYWwgb2JqZWN0LCBzbyBpZiB5b3UKcGxhbiBtYWtpbmcgYSBt
dXRhdGlvbiwgeW91IG11c3QgZmlyc3Qgc2hhbGxvdyBjbG9uZSB0aGUgb2Jq
ZWN0LiBBbm90aGVyIG9wdGlvbgppcyB0byB1c2UgYHVwZGF0ZWAgdG8gbWFr
ZSB0aGUgY2hhbmdlCmByZXR1cm4gdXBkYXRlKG9yaWdpbmFsLCB7IGZvbzog
eyRzZXQ6ICdiYXInfSB9KWAKCklmIHlvdSBkb24ndCB3YW50IHRvIG1lc3Mg
YXJvdW5kIHdpdGggdGhlIGdsb2JhbGx5IGV4cG9ydGVkIGB1cGRhdGVgIGZ1
bmN0aW9uCnlvdSBjYW4gbWFrZSBhIGNvcHkgYW5kIHdvcmsgd2l0aCB0aGF0
IGNvcHk6CgpgYGBqcwppbXBvcnQgeyBDb250ZXh0IH0gZnJvbSAnaW1tdXRh
YmlsaXR5LWhlbHBlcic7Cgpjb25zdCBteUNvbnRleHQgPSBuZXcgQ29udGV4
dCgpOwoKbXlDb250ZXh0LmV4dGVuZCgnJGZvbycsIGZ1bmN0aW9uKHZhbHVl
LCBvcmlnaW5hbCkgewogIHJldHVybiAnZm9vISc7Cn0pOwoKbXlDb250ZXh0
LnVwZGF0ZSgvKiBhcmdzICovKTsKYGBgCgpbbnBtLWltYWdlXTogaHR0cHM6
Ly9pbWcuc2hpZWxkcy5pby9ucG0vdi9pbW11dGFiaWxpdHktaGVscGVyLnN2
Zz9zdHlsZT1mbGF0LXNxdWFyZQpbbnBtLXVybF06IGh0dHBzOi8vbnBtanMu
b3JnL3BhY2thZ2UvaW1tdXRhYmlsaXR5LWhlbHBlcgpbdHJhdmlzLWltYWdl
XTogaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby90cmF2aXMva29sb2RueS9pbW11
dGFiaWxpdHktaGVscGVyLnN2Zz9zdHlsZT1mbGF0LXNxdWFyZQpbdHJhdmlz
LXVybF06IGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9rb2xvZG55L2ltbXV0YWJp
bGl0eS1oZWxwZXIKW2NvdmVyYWxscy1pbWFnZV06IGh0dHBzOi8vaW1nLnNo
aWVsZHMuaW8vY292ZXJhbGxzL2tvbG9kbnkvaW1tdXRhYmlsaXR5LWhlbHBl
ci5zdmc/c3R5bGU9ZmxhdC1zcXVhcmUKW2NvdmVyYWxscy11cmxdOiBodHRw
czovL2NvdmVyYWxscy5pby9yL2tvbG9kbnkvaW1tdXRhYmlsaXR5LWhlbHBl
cgpbZG93bmxvYWRzLWltYWdlXTogaHR0cDovL2ltZy5zaGllbGRzLmlvL25w
bS9kbS9pbW11dGFiaWxpdHktaGVscGVyLnN2Zz9zdHlsZT1mbGF0LXNxdWFy
ZQpbZG93bmxvYWRzLXVybF06IGh0dHBzOi8vbnBtanMub3JnL3BhY2thZ2Uv
aW1tdXRhYmlsaXR5LWhlbHBlcgpbbWluLXNpemUtaW1hZ2VdOiBodHRwczov
L2JhZGdlbi5uZXQvYnVuZGxlcGhvYmlhL21pbi9pbW11dGFiaWxpdHktaGVs
cGVyP2xhYmVsPW1pbmlmaWVkCltnemlwLXNpemUtaW1hZ2VdOiBodHRwczov
L2JhZGdlbi5uZXQvYnVuZGxlcGhvYmlhL21pbnppcC9pbW11dGFiaWxpdHkt
aGVscGVyP2xhYmVsPWd6aXAKW2J1bmRsZXBob2JpYS11cmxdOiBodHRwczov
L2J1bmRsZXBob2JpYS5jb20vcmVzdWx0P3A9aW1tdXRhYmlsaXR5LWhlbHBl
cgo=
",,3723,"bGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczoKICAtICc4JwogIC0gJzEwJwog
IC0gJzEyJwogIC0gJ2x0cy8qJwojIFNlbmQgY292ZXJhZ2UgZGF0YSB0byBD
b3ZlcmFsbHMKYWZ0ZXJfc2NyaXB0OiAiY2F0IC4vY292ZXJhZ2UvbGNvdi5p
bmZvIHwgLi9ub2RlX21vZHVsZXMvY292ZXJhbGxzL2Jpbi9jb3ZlcmFsbHMu
anMiCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'fastsocket',21156908,"b'Fastsocket is a highly scalable socket and its underlying networking implementation of Linux kernel. With the straight linear scalability, Fastsocket can provide extremely good performance in multicore machines. In addition, it is very easy to use and maintain. As a result, it has been deployed in the production environment of SINA.'",b'C',13,3722,,434,False,b'https://api.github.com/repos/fastos/fastsocket/forks',"IFJFQURNRSBmb3IgRkFTVFNPQ0tFVAo9PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT0KCiMjIFRBQkxFIE9GIENPTlRFTlQgIyMKKiBbUGFwZXJdKCNwYXBl
cikKKiBbSW50cm9kdWN0aW9uXSgjaW50cm9kdWN0aW9uKQoqIFtQYXJ0aWNp
cGFudHNdKCNwYXJ0aWNpcGFudHMpCiogW0luc3RhbGxhdGlvbl0oI2luc3Rh
bGxhdGlvbikKICAqIFtJbnN0YWxsIEZyb20gU291cmNlXSgjaW5zdGFsbC1m
cm9tLXNvdXJjZSkKICAqIFtTd2l0Y2ggS2VybmVsXSgjc3dpdGNoLWtlcm5l
bCkKKiBbU3lzdGVtIENvbmZpZ3VyYXRpb25dKCNzeXN0ZW0tY29uZmlndXJh
dGlvbikKKiBbVXNhZ2VdKCN1c2FnZSkKICAqIFtTdWl0YWJsZSBTY2VuYXJp
b3NdKCNzdWl0YWJsZS1zY2VuYXJpb3MpCiAgKiBbSG93IFRvIFVzZV0gKCNo
b3ctdG8tdXNlKQogICogW0RlbW8gU2VydmVyXSgjZGVtby1zZXJ2ZXIpCiog
W0V2YWx1YXRpb25dKCNldmFsdWF0aW9uKQogICogW05naW54XSAoI25naW54
KQogICogW0hBUHJveHldICgjaGFwcm94eSkKICAqIFtPbmxpbmUgRXZhbHVh
dGlvbl0oI29ubGluZS1ldmFsdWF0aW9uKQoqIFtOZXcgRmVhdHVyZXNdKCNu
ZXctZmVhdHVyZXMpCiogW0NvbnRhY3RzXSgjY29udGFjdHMpCgojIyBQQVBF
UiAjIwoKQVNQTE9TIDIwMTYKCmh0dHA6Ly9kbC5hY20ub3JnL2NpdGF0aW9u
LmNmbT9pZD0yODcyMzkxCgojIyBJTlRST0RVQ1RJT04gIyMKCldpdGggYSBy
YXBpZCBncm93dGggb2YgTklDIGJhbmR3aWR0aCBhbmQgQ1BVIGNvcmVzIG9u
IG9uZSBzaW5nbGUgbWFjaGluZSwgYSAKc2NhbGFibGUgVENQIG5ldHdvcmsg
c3RhY2sgaXMgcGVyZm9ybWFuY2UtY3JpdGljYWwuIEhvd2V2ZXIsIHN0b2Nr
IExpbnV4IAprZXJuZWwgZG9lcyBub3Qgc2NhbGUgd2VsbCB3aGVuIENQVSBj
b3JlIG51bWJlciBpcyBhYm92ZSA0LiBJdCBpcyBldmVuIHdvcnNlIAp0aGF0
IHRoZSB0aHJvdWdocHV0IGNvdWxkIGNvbGxhcHNlIHdoZW4gdGhlcmUgYXJl
IG1vcmUgdGhhbiAxMiBDUFUgY29yZXMuCgpGYXN0c29ja2V0IGlzIGEgc2Nh
bGFibGUga2VybmVsIFRDUCBzb2NrZXQgaW1wbGVtZW50YXRpb24gYW5kIGFj
aGlldmVzIGEgc3RyYWlnaHQgCmxpbmVhciBwZXJmb3JtYW5jZSBncm93dGgg
d2hlbiBzY2FsaW5nIHVwIHRvIDI0IENQVSBjb3Jlcy4gCk1lYW53aGlsZSwg
VGhlIHVuZGVybHlpbmcga2VybmVsIG9wdGltaXphdGlvbiBvZiBGYXN0c29j
a2V0IGlzIHRyYW5zcGFyZW50IGZvciAKc29ja2V0IGFwcGxpY2F0aW9ucywg
d2hpY2ggbWVhbnMgZXhpc3RpbmcgYXBwbGljYXRpb25zIGNhbiB0YWtlIGFk
dmFudGFnZSBvZiAKRmFzdHNvY2tldCB3aXRob3V0IGNoYW5naW5nIHRoZWly
IGNvZGVzLgoKQ3VycmVudGx5IEZhc3Rzb2NrZXQgaXMgaW1wbGVtZW50ZWQg
aW4gdGhlIExpbnV4IGtlcm5lbChrZXJuZWwtMi42LjMyLTQzMS4yOS4yLmVs
Ni54ODZfNjQpIApvZiBDZW50T1MtNi41IHdoaWNoIGlzIHRoZSBsYXRlc3Qg
dmVyc2lvbiBvZiByZWRoYXQgRUw2LCAKc2luY2UgQ2VudE9TLTYuNSBpcyBv
dXIgbWFqb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudCBzeXN0ZW0uIApBY2Nv
cmRpbmcgdG8gb3VyIGV2YWx1YXRpb25zLCBGYXN0c29ja2V0IGluY3JlYXNl
cyB0aHJvdWdocHV0IG9mIE5naW54IGFuZApIQVByb3h5KG1lYXN1cmVkIGJ5
IGNvbm5lY3Rpb25zIHBlciBzZWNvbmQpIGJ5ICoqMjkwJSoqIGFuZCAqKjYy
MCUqKiBvbiBhIAoyNC1jb3JlIG1hY2hpbmUsIGNvbXBhcmVkIHRvIHRoZSBi
YXNlIENlbnRPUy02LjUga2VybmVsLgoKTW9yZW92ZXIsIEZhc3Rzb2NrZXQg
Y2FuIGZ1cnRoZXIgZXhwbG9pdCBtb3JlIGZyb20gdGhlIGhhcmR3YXJlOgoK
LSBXaXRoIEZhc3Rzb2NrZXQsIEh5cGVyLVRocmVhZGluZyBjYW4gbWFrZSBh
biBleHRyYSAqKjIwJSoqIHBlcmZvcm1hbmNlIGluY3JlYXNlLgotIFdpdGgg
RmFzdHNvY2tldCwgTklDIHRoYXQgc3VwcG9ydCBGbG93LURpcmVjdG9yKGxp
a2UgSW50ZWwgODI1OTkpIGNhbiBpbmNyZWFzZSAKdGhlIHRocm91Z2hwdXQg
YnkgKioxNSUqKiBpZiB0aGUgc2VydmVyIHdvcmtzIGFzIGEgcHJveHkobGlr
ZSBIQVByb3h5KS4KCkZhc3Rzb2NrZXQgKFYxLjApIGhhcyBhbHJlYWR5IGJl
ZW4gZGVwbG95ZWQgaW4gdGhlIFNJTkEgcHJvZHVjdGlvbiBlbnZpcm9ubWVu
dC4gCkZhc3Rzb2NrZXQgaXMgdXNlZCB3aXRoIEhBUHJveHkgdG8gcHJvdmlk
ZSBIVFRQIGxvYWQgYmFsYW5jZSBzZXJ2aWNlIGFuZCAKaGFzIGJlZW4gcnVu
bmluZyBzdGFibHkgc2luY2UgTWFyY2ggMjAxNCBNb3JlIGRldGFpbHMgYXJl
IGluCnRoZSBbRXZhbHVhdGlvbl0oI29ubGluZS1ldmFsdWF0aW9uKS4KCkZh
c3Rzb2NrZXQgaXMgcmVsZWFzZWQgdW5kZXIgR1BMdjIgYW5kIHdlIHByb21p
c2UgdGhhdCB3ZSB3b3VsZCBuZXZlciBhc2sgZm9yIGFueQogcGF5bWVudCB0
byB1c2Ugb3VyIGNvZGVzLgoKIyMgUEFSVElDSVBBTlRTICMjCgotIEZhc3Rz
b2NrZXQgaXMgc3RhcnRlZCBhbmQgbWFpbmx5IGRldmVsb3BlZCBieSBYaWFv
ZmVuZyBMaW4gZnJvbSB0aGUgT1MgdGVhbSBvZiBTSU5BLkNPTS4KLSBPUyBj
ZW50ZXIgb2YgVHNpbmdodWEgaXMgY29vcGVyYXRpbmcgY2xvc2VseSB3aXRo
IFNJTkEuQ09NIHRvIGZ1cnRoZXIgZW5oYW5jZSBGYXN0c29ja2V0LgotIEZh
c3Rzb2NrZXQgaXMgYWxzbyBzdXBwb3J0ZWQgYnkgSW50ZWwgd2l0aCBleHRl
bnNpdmUgYXNzaXN0YW5jZS4KLSBaZXV1eCBDb21tdW5pdHkgaXMgcHJvdmlk
aW5nIG9wZW4gc291cmNlIGNvbnN1bHRpbmcgZm9yIEZhc3Rzb2NrZXQuCgoj
IyBJTlNUQUxMQVRJT04gIyMKCiMjIyBJTlNUQUxMIEZST00gU09VUkNFICMj
IwoKVGhlIHNvdXJjZSBjb2RlIGlzIGF2YWlsYWJsZSBhdCBodHRwczovL2dp
dGh1Yi5jb20vZmFzdG9zL2Zhc3Rzb2NrZXQuZ2l0LiBDbG9uZSB0aGUgcmVw
b3NpdG9yeSBieToKCglbcm9vdEBsb2NhbGhvc3Qgfl0jIGdpdCBjbG9uZSBo
dHRwczovL2dpdGh1Yi5jb20vZmFzdG9zL2Zhc3Rzb2NrZXQuZ2l0CgpIZXJl
IGlzIGEgYnJpZWYgaW50cm9kdWN0aW9uIHRvIHRoZSBkaXJlY3RvcmllcyBp
biB0aGUgcmVwb3NpdG9yeS4KCiogKiprZXJuZWwqKiAtIHNvdXJjZSBjb2Rl
IG9mIHRoZSBGYXN0c29ja2V0IGN1c3RvbWl6ZWQga2VybmVsCiogKiptb2R1
bGUqKiAtIHNvdXJjZSBjb2RlIG9mIHRoZSBGYXN0c29ja2V0IGtlcm5lbCBt
b2R1bGUKKiAqKmxpYnJhcnkqKiAtIHNvdXJjZSBjb2RlIG9mIHVzZXItbGV2
ZWwgbGlicmFyeSB0byBzdXBwb3J0IEZhc3Rzb2NrZXQKKiAqKnNjcmlwdHMq
KiAtIHNjcmlwdHMgdG8gc2V0IE5JQyBhbmQgc3lzdGVtIGVudmlyb25tZW50
KE5PVCBjb21wdWxzb3J5IGZvciBGYXN0c29ja2V0KQoqICoqZGVtbyoqIC0g
c291cmNlIGNvZGUgb2YgYSBkZW1vIHNlcnZlciB0byBkZW1vbnN0cmF0ZSBw
ZXJmb3JtYW5jZSBvZiBGYXN0c29ja2V0CgpUaGUgZm9sbG93aW5nIGNvbW1h
bmRzIHdpbGwgYnVpbGQgYW5kIGluc3RhbGwgdGhlIGtlcm5lbCBhZnRlciBG
YXN0c29ja2V0IHJlcG9zaXRvcnkKaXMgZG93bmxvYWRlZCBmcm9tIGdpdC4g
WW91IGNhbiBjdXN0b21pemUgdGhlIGNvbmZpZyBmaWxlIGlmIHlvdSBhcmUg
c3VyZSB5b3Ugd2lsbCAKbm90IG1pc3Mgc29tZSBpbXBvcnRhbnQgY29tcG9u
ZW50LiBGYXN0c29ja2V0IGNhbiBiZSBidWlsdCBzbW9vdGhseSBvbiA2NC1i
aXQgQ2VudE9TLTYuWCBzeXN0ZW1zLgpQcm9ibGVtcyBtYXkgYXJpc2Ugb24g
MzItYml0IHN5c3RlbXMgYW5kIENlbnRPUy03IHN5c3RlbXMuCgoJW3Jvb3RA
bG9jYWxob3N0IH5dIyBjZCBmYXN0c29ja2V0L2tlcm5lbAoJW3Jvb3RAbG9j
YWxob3N0IGtlcm5lbF0jIG1ha2UgZGVmY29uZmlnCglbcm9vdEBsb2NhbGhv
c3Qga2VybmVsXSMgbWFrZQoJW3Jvb3RAbG9jYWxob3N0IGtlcm5lbF0jIG1h
a2UgbW9kdWxlc19pbnN0YWxsCglbcm9vdEBsb2NhbGhvc3Qga2VybmVsXSMg
bWFrZSBpbnN0YWxsCgpFbnRlciB0aGUgbGlicmFyeSBkaXJlY3RvcnkgYW5k
IG1ha2UgdGhlIGxpYnJhcnk6CgoJW3Jvb3RAbG9jYWxob3N0IGZhc3Rzb2Nr
ZXRdIyBjZCBsaWJyYXJ5Cglbcm9vdEBsb2NhbGhvc3QgbGlicmFyeV0jIG1h
a2UKCkFmdGVyIHRoYXQsIGxpYmZzb2NrZXQuc28gaXMgY3JlYXRlZCBpbiB0
aGUgc2FtZSBkaXJlY3RvcnkuCgojIyMgU1dJVENIIEtFUk5FTCAjIyMKCldo
ZW4gdGhlIGluc3RhbGxhdGlvbiBpcyBkb25lLCByZW1lbWJlciB0byBtb2Rp
ZnkgZ3J1YiBmaWxlIHRvIHN3aXRjaCB0byB0aGUgCkZhc3Rzb2NrZXQga2Vy
bmVsIGFuZCByZWJvb3QgdGhlIHN5c3RlbS4KCiMjIFNZU1RFTSBDT05GSUdV
UkFUSU9OICMjCgpBZnRlciBib290aW5nIGludG8gdGhlIGtlcm5lbCB3aXRo
IEZhc3Rzb2NrZXQsIGxvYWQgdGhlIEZhc3Rzb2NrZXQgbW9kdWxlIHdpdGgg
CmRlZmF1bHQgcGFyYW1ldGVyczoKCglbcm9vdEBsb2NhbGhvc3Qgfl0jIG1v
ZHByb2JlIGZhc3Rzb2NrZXQKCkZvciBtb3JlIGRldGFpbGVkIGluZm9ybWF0
aW9uIG9mIG1vZHVsZXMgcGFyYW1ldGVycywgcGxlYXNlIHJlZmVyIHRvIFtN
b2R1bGVdKG1vZHVsZS9SRUFETUUubWQgIkZhc3Rzb2NrZXQgTW9kdWxlIiku
CgpUd28gd2F5cyB0byBjaGVjayBpZiB0aGUgbW9kdWxlIGlzIGxvYWRlZCBz
dWNjZXNzZnVsbHkuCgoqIENoZWNrIGxzbW9kOgoKCQlbcm9vdEBsb2NhbGhv
c3Qgfl0jIGxzbW9kIHwgZ3JlcCBmYXN0c29ja2V0CgkJZmFzdHNvY2tldCAg
ICAgICAgICAgICAyMzE0NSAgMAoKKiBDaGVjayBkbWVzZzoKCgkJW3Jvb3RA
bG9jYWxob3N0IH5dIyBkbWVzZyB8IHRhaWwKCQlGYXN0c29ja2V0OiBMb2Fk
IE1vZHVsZQoJCUZhc3Rzb2NrZXQ6IEVuYWJsZSBMaXN0ZW4gU3Bhd25bTW9k
ZS0yXQoJCUZhc3Rzb2NrZXQ6IEVuYWJsZSBSZWNpZXZlIEZsb3cgRGVsaXZl
cgoJCUZhc3Rzb2NrZXQ6IEVuYWJsZSBGYXN0IEVwb2xsCgpSdW4gKipuaWMu
c2gqKiBwcm92aWRlZCBpbiB0aGUgc2NyaXB0cyBkaXJlY3Rvcnkgb2YgdGhl
IHJlcG9zaXRvcnkgdG8gdGFrZSBjYXJlIG9mIApyZW1haW5pbmcgY29uZmln
dXJhdGlvbi4KCglbcm9vdEBsb2NhbGhvc3Qgfl0jIGNkIGZhc3Rzb2NrZXQK
CVtyb290QGxvY2FsaG9zdCBmYXN0c29ja2V0XSMgc2NyaXB0cy9uaWMuc2gg
LWkgZXRoMAoKKmV0aDAqIGlzIHRoZSBpbnRlcmZhY2UgdG8gYmUgdXNlZCBh
bmQgc2hvdWxkIGJlIGNoYW5nZWQgYWNjb3JkaW5nIHRvIHlvdXIKc3lzdGVt
IGNvbmZpZ3VyYXRpb24uIFRoZSBzY3JpcHQgd2lsbCBhdXRvbWF0aWNhbGx5
IGNoZWNrIHN5c3RlbSBhbmQgTklDIApwYXJhbWV0ZXJzLCB0aGVuIGNvbmZp
Z3VyZXMgdmFyaW91cyBmZWF0dXJlcy4KCklmIHlvdSBhcmUgaW50ZXJlc3Rl
ZCBpbiBob3cgbmljLnNoIHdvcmtzLCBwbGVhc2UgcmVmZXIgdG8gW1Njcmlw
dHNdKHNjcmlwdHMvUkVBRE1FLm1kICJDb25maWd1cmF0aW9uIFNjcmlwdHMi
KS4KCiMjIFVTQUdFICMjCgojIyMgU1VJVEFCTEUgU0NFTkFSSU9TIyMjCgpH
ZW5lcmFsbHksIHNjZW5hcmlvcyBtZWV0aW5nIHRoZSBmb2xsb3dpbmcgY29u
ZGl0aW9ucyB3aWxsIGJlbmVmaXQgdGhlIG1vc3QgCmZyb20gRmFzdHNvY2tl
dCAoVjEuMCk6CgoqIFRoZSBtYWNoaW5lIGhhcyBubyBsZXNzIHRoYW4gOCBD
UFUgY29yZXMuCiogTGFyZ2UgcG9ydGlvbiBvZiB0aGUgQ1BVIGN5Y2xlcyBp
cyBzcGVudCBpbiBuZXR3b3JrIHNvZnRpcnEgYW5kIHNvY2tldCAKcmVsYXRl
ZCBzeXN0ZW0gY2FsbHMuCiogU2hvcnQgVENQIGNvbm5lY3Rpb25zIGFyZSBo
ZWF2aWx5IHVzZWQuCiogQXBwbGljYXRpb24gdXNlcyBub24tYmxvY2tpbmcg
SU8gb3ZlciBlcG9sbCBhcyB0aGUgSU8gZnJhbWV3b3JrLgoqIEFwcGxpY2F0
aW9uIHVzZXMgbXVsdGlwbGUgcHJvY2Vzc2VzIHRvIGFjY2VwdCBjb25uZWN0
aW9ucyBpbmRpdmlkdWFsbHkuCgpNZWFud2hpbGUsIHdlIGFyZSBkZXZlbG9w
aW5nIEZhc3Rzb2NrZXQgdG8gaW1wcm92ZSB0aGUgbmV0d29yayBzdGFjayBw
ZXJmb3JtYW5jZSAKaW4gbW9yZSBnZW5lcmFsIHNjZW5hcmlvcy4gWW91IGNh
biByZWZlciB0byBbTmV3IEZlYXR1cmVzXSgjbmV3LWZlYXR1cmVzKS4KCiMj
IyBIT1cgVE8gVVNFICMjIwoKRmFzdHNvY2tldCBpcyBlbmFibGVkIGJ5IHBy
ZWxvYWRpbmcgYSBzaGFyZWQgbGlicmFyeSBuYW1lZCBsaWJmc29ja2V0LnNv
IAp3aGVuIGxhdW5jaGluZyBhbiBhcHBsaWNhdGlvbi4gRm9yIGV4YW1wbGUs
IG5nbml4IGNhbiBiZSBzdGFydGVkIHdpdGggRmFzdHNvY2tldCBieToKCglb
cm9vdEBsb2NhbGhvc3QgZmFzdHNvY2tldF0jIGNkIGxpYnJhcnkKCVtyb290
QGxvY2FsaG9zdCBsaWJyYXJ5XSMgTERfUFJFTE9BRD0uL2xpYmZzb2NrZXQu
c28gbmdpbngKCldpdGhvdXQgdGhlIHByZWxvYWRlZCBsaWJyYXJ5LCBhcHBs
aWNhdGlvbnMgY2FuIHJ1biBhcyBpZiB0aGV5IGFyZSBvbiB0aGUKb3JpZ2lu
YWwga2VybmVsLCB3aGljaCBwcm92aWRlcyBhIHN1cGVyIHF1aWNrIHJvbGxi
YWNrIGluIGNhc2UgdGhlcmUgaXMgYSBuZWVkLiAKCglbcm9vdEBsb2NhbGhv
c3Qgfl0jIG5naW54CgpGb3IgbW9yZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUg
bGlicmFyeSwgcGxlYXNlIHJlZmVyIHRvIFtMaWJyYXJ5XShsaWJyYXJ5L1JF
QURNRS5tZCAiRmFzdHNvY2tldCBMaWJyYXJ5IikuCgpIZXJlIHdlIGxpc3Qg
YSBmZXcgYXBwbGljYXRpb25zIHRoYXQgYXJlIHdvcmtpbmcgZmluZSB3aXRo
IEZhc3Rzb2NrZXQ6CgoqIGhhcHJveHkKKiBuZ2lueCAoRG8gZGlzYWJsZSBh
Y2NlcHQgbXV0ZXgpCiogbGlnaHR0cGQKCldlIGFyZSBhbHNvIHVzaW5nIEZh
c3Rzb2NrZXQgb24gdGhlIGxvYWQgZ2VuZXJhdG9ycyBpbiBvdXIgYmVuY2ht
YXJrIHRlc3RzLiAKVGhpcyBpcyB2ZXJ5IGhlbHBmdWwgc2luY2UgRmFzdHNv
Y2tldCBncmVhdGx5IGluY3JlYXNlcyB0aGUgbWF4aW11bSB3b3JrIGxvYWQg
dGhhdCAKY291bGQgYmUgZ2VuZXJhdGVkIGZyb20gYSBzaW5nbGUgbWFjaGlu
ZSwgd2hpY2ggc2F2ZXMgbWFjaGluZXMgYW5kIG9wZXJhdGlvbnMuIApUaGVz
ZSBsb2FkIGdlbmVyYXRvcnMgYXJlOgoKKiBhYgoqIGh0dHBfbG9hZAoKIyMj
IERFTU8gU0VSVkVSICMjIwoKV2UgcHJvdmlkZSBhIGRlbW8gc2VydmVyIGlu
IHRoZSBkZW1vIGRpcmVjdG9yeSBvZiB0aGUgcmVwb3NpdG9yeS4gVGhlIGRl
bW8gCnNlcnZlciBkb2VzIG5vdGhpbmcgYnV0IHJlYWQvd3JpdGUgbWVzc2Fn
ZXMgZnJvbS90byBuZXR3b3JrIHNvY2tldHMgYW5kIGlzIApwdXJlbHkgdXNl
ZCB0byBzdHVkeSBhbmQgYmVuY2htYXJrIHRoZSBwZXJmb3JtYW5jZSBvZiBu
ZXR3b3JrIHN0YWNrIG9mIExpbnV4IAprZXJuZWwuIFdoZW4gdGhlIGRlbW8g
c2VydmVyIGlzIHJ1bm5pbmcsIGl0IGhhcyBsaXR0bGUgdXNlciBDUFUgY29u
c3VtcHRpb24sIAp3aGljaCBtYWtlcyBpdCBhIHBlcmZlY3QgbmV0d29yayBh
cHBsaWNhdGlvbiB0byBvYnNlcnZlIHRoZSBuZXR3b3JrIHN0YWNrIApwZXJm
b3JtYW5jZS4KCk1vcmVvdmVyLCBpdCBpcyBhbHNvIHVzZWQgdG8gZGVtb25z
dHJhdGUgdGhlIHNjYWxhYmlsaXR5IGFuZCBwZXJmb3JtYW5jZSAKaW1wcm92
ZW1lbnQgb2YgRmFzdHNvY2tldCBvdmVyIHRoZSBiYXNlIExpbnV4IGtlcm5l
bC4KCkZvciBtb3JlIGluZm9ybWF0aW9uIGFib3V0IHRoZSBkZW1vIHNlcnZl
ciwgcGxlYXNlIHJlZmVyIHRvIFtEZW1vXShkZW1vL1JFQURNRS5tZCAiRGVt
byBTZXJ2ZXIiKS4KCiMjIEVWQUxVQVRJT04gIyMKCiMjIyBOZ2lueCAjIyMK
ClNvbWUgaW1wb3J0YW50IGNvbmZpZ3VyYXRpb25zOgoKLSBXb3JrZXIgbnVt
YmVyIGlzIHNldCB0byB0aGUgbnVtYmVyIG9mIENQVSBjb3Jlcy4KLSBIVFRQ
IEtlZXAtYWxpdmUgaXMgZGlzYWJsZWQgb24gTmdpbnggZm9yIGEgc2hvcnQg
Y29ubmVjdGlvbiB0ZXN0LgotIEh0dHBfbG9hZCBmZXRjaGVzIGEgNjQgYnl0
ZXMgc3RhdGljIGZpbGUgZnJvbSBOZ2lueCB3aXRoIGEgY29uY3VycmVuY3kg
b2YgNTAwCiAgbXVsdGlwbGllZCBieSB0aGUgbnVtYmVyIG9mIGNvcmVzLgot
IFdlIGVuYWJsZSBtZW1vcnkgY2FjaGUgZm9yIHRoYXQgc3RhdGljIGZpbGUg
aW4gb3JkZXIgdG8gcnVsZSBvdXQgYW55IGRpc2sgYWZmZWN0aW9uLgotICoq
YWNjZXB0IG11dGV4IGlzIGRpc2FibGVkKiouICBUaGUgZGVmYXVsdCB2YWx1
ZSBvZiBuZ2lueCBpcyBvbi4gIAoKTm90ZTogKipZT1UnRCBCRVRURVIgRE8g
RElTQUJMRSBhY2NlcHRfbXV0ZXghKiogV2l0aCBkZWZhdWx0IEZhc3Rzb2Nr
ZXQgbW9kdWxlIHBhcmFtZXRlcnMsIApGYXN0c29ja2V0IGhhcyBwYXJ0aW9u
ZWQgbGlzdGVuIHNvY2tldCwgdGhlcmVmb3JlLCB0aGVyZSBpcyBubyBuZWVk
IHRvIGZvcmNlCnVzZXIgdG8gYWNjZXB0IGNvbm5lY3Rpb25zIG9uZSBieSBv
bmUuIElmIHNvbWUgY3B1IGhhZCBubyBjaGFuY2UgdG8gcmVjZWl2ZSBwYWNr
ZXQgZXNwZWNpYWxseSB0aGUgdGNwIHN5biBwYWNrZXQgYnkgUlBTIG9yIG90
aGVycywgdGhlIG5naW54IHdvdWxkICoqZmFpbCB0byBhY2NlcHQgdGhlIG5l
dyBjb25uIGZvcmV2ZXIqKiB3aXRoIGFjY2VwdF9tdXRleCBlbmFibGVkLiBT
byB5b3Ugc2hvdWxkIG1ha2Ugc3VyZSB0aGUgbmV3IHJlcXVlc3QgY291bGQg
YmUgcGFzc2VkIHRvIGV2ZXJ5IENQVSwgaWYgeW91IHdhbnQgbG9hZCBibGFu
Y2UgdGhlIGFjY2VwdCB3aXRoIGFjY2VwdCBtdXRleCBvZiBuZ2lueC4gIAoK
RnJvbSB0aGUgZmlndXJlIGJlbG93LCBGYXN0c29ja2V0IG9uIDI0IENQVSBj
b3JlcyBhY2hpZXZlcyA0NzVLIGNvbm5lY3Rpb24gcGVyIHNlY29uZCAoY3Bz
KSwgCndpdGggYSBzcGVlZCB1cCBvZiAyMVguIFRoZSB0aHJvdWdocHV0IG9m
IGJhc2UgQ2VudE9TLTYuNSBrZXJuZWwgaW5jcmVhc2VzCm5vbi1saW5lYXJs
eSB1cCB0byAxMiBDUFUgY29yZXMgYW5kIGRyb3BzIGRyYW1hdGljYWxseSB0
byAxNTlLIGNwcyB3aXRoIDI0IENQVSBjb3Jlcy4gVGhlCmxhdGVzdCAzLjEz
IGtlcm5lbCBkb3VibGVzIHRoZSB0aHJvdWdocHV0IHRvIDI4M0sgY3BzIHdo
ZW4gdXNpbmcgMjQgQ1BVIGNvcmVzIGNvbXBhcmVkCndpdGggdGhlIGJhc2Ug
Q2VudE9TLTYuNSBrZXJuZWwuIEhvd2V2ZXIsIGl0IGhhcyBub3QgY29tcGxl
dGVseSBzb2x2ZWQgdGhlIHNjYWxhYmlsaXR5IGJvdHRsZW5lY2tzLApwcmV2
ZW50aW5nIGl0IGZyb20gc2NhbGluZyBiZXlvbmQgMTIgQ1BVIGNvcmVzLgoK
IyMjIEhBUHJveHkgIyMjCgpTb21lIGltcG9ydGFudCBjb25maWd1cmF0aW9u
czoKCi0gV29ya2VyIG51bWJlciBpcyBzZXQgdG8gdGhlIG51bWJlciBvZiBD
UFUgY29yZXMuCi0gUkZEKFJlY2VpdmUgRmxvdyBEZWxpdmVyKSBpbiBGYXN0
c29ja2V0IGlzIGVuYWJsZWQuCi0gSFRUUCBLZWVwLWFsaXZlIGlzIGRpc2Fi
bGVkIG9uIEhBUHJveHkgZm9yIGEgc2hvcnQgY29ubmVjdGlvbiB0ZXN0Lgot
IEEgY2xpZW50IHJ1bnMgaHR0cF9sb2FkIHdpdGggYSBjb25jdXJyZW5jeSBv
ZiA1MDAgbXVsdGlwbGllZCBieSBudW1iZXIgb2YgY29yZXMuCi0gQSBiYWNr
ZW5kIHNlcnZlciByZXNwb25kcyBlYWNoIGluY29taW5nIEhUVFAgcmVxdWVz
dCB3aXRoIGEgNjQgYnl0ZXMgbWVzc2FnZS4KCkFzIHNob3duIGluIHRoZSBz
YW1lIGZpZ3VyZSwgRmFzdHNvY2tldCBwcmVzZW50cyBhbiBleGNlbGxlbnQg
c2NhbGFiaWxpdHkgcGVyZm9ybWFuY2UsIAp3aGljaCBpcyB2ZXJ5IHNpbWls
YXIgdG8gdGhlIHByZXZpb3VzIE5naW54IGNhc2UuIApGYXN0c29ja2V0IG91
dHBlcmZvcm1zIExpbnV4IDMuMTMgYnkgMTM5SyBjcHMgYW5kIGJhc2UgQ2Vu
dE9TLTYuNSBrZXJuZWwKYnkgMzcwSyBjcHMgd2hlbiB1c2luZyAyNCBDUFUg
Y29yZXMsIHRob3VnaCB0aGUgb25lIGNvcmUgdGhyb3VnaHB1dHMgYXJlIHZl
cnkgY2xvc2UgYW1vbmcKYWxsIHRoZSB0aHJlZSBrZXJuZWxzLgoKIVtUaHJv
dWdocHV0XShpbWFnZXMvdGhyb3VnaHB1dC5wbmcgIlRocm91Z2hwdXQiKQoK
IyMjIE9OTElORSBFVkFMVUFUSU9OICMjIwoKQXMgbWVudGlvbmVkIGJlZm9y
ZSwgRmFzdHNvY2tldCBoYXMgYWxyZWFkeSBiZWVuIGRlcGxveWVkIGluIHRo
ZSBTSU5BIHByb2R1Y3Rpb24KZW52aXJvbm1lbnQuIE9uZSB0eXBpY2FsIHNj
ZW5hcmlvIGlzIHVzaW5nIEZhc3Rzb2NrZXQgd2l0aCBIQVByb3h5IHRvIHBy
b3ZpZGUgCkhUVFAgbG9hZCBiYWxhbmNlIHNlcnZpY2UgdG8gV0VJQk8gYW5k
IG90aGVyIFNJTkEgcHJvZHVjdGlvbnMuCgpJbiB0aGUgZmlndXJlIGJlbG93
LCBpdCBpcyB0aGUgQ1BVIHV0aWxpemF0aW9uIG9mIGFuIDgtY29yZSBzZXJ2
ZXJzIHdpdGhpbiAyNCBob3Vycy4gCkZpZ3VyZSAoYSkgc2hvd3MgdGhlIENQ
VSB1dGlsaXphdGlvbiBiZWZvcmUgZGVwbG95aW5nIEZhc3Rzb2NrZXQgYW5k
IGZpZ3VyZSAoYikKc2hvd3MgdGhlIENQVSB1dGlsaXphdGlvbiBhZnRlciBk
ZXBsb3lpbmcgRmFzdHNvY2tldC4KCiFbT25saW5lXShpbWFnZXMvb25saW5l
LnBuZyAiT25saW5lIikKCldlIGNhbiBzZWUgZnJvbSB0aGUgZmlndXJlLCB3
aGF0IGhhcHBlbmVkIGFmdGVyIEZhc3Rzb2NrZXQgaXMgdXNlZDoKCi0gVGhl
IGxvYWQgb2YgZWFjaCBDUFUgY29yZSBpcyBwZXJmZWN0IGJhbGFuY2VkLgot
IFRoZSBhdmVyYWdlIENQVSB1dGlsaXphdGlvbiBvZiBhbGwgQ1BVIGNvcmVz
IGlzIHJlZHVjZWQgYnkgMTAlLgotIEFzIGEgcmVzdWx0LCB0aGUgZWZmZWN0
aXZlIGNhcGFjaXR5IG9mIHRoZSBIQVByb3h5IHNlcnZlciBpcyBpbmNyZWFz
ZWQgYnkgODUlLgoKTW9yZW92ZXIsIHNpbmNlIHRoZSBzZXJ2ZXIgaXMgYW4g
b2xkIDgtY29yZSBtYWNoaW5lLCB3ZSBleHBlY3QgRmFzdHNvY2tldCB3b3Vs
ZCAKbWFrZSBtb3JlIHBlcmZvcm1hbmNlIGltcHJvdmVtZW50IHdoZW4gRmFz
dHNvY2tldCBpcyBkZXBsb3llZCBvbiBhIG1hY2hpbmUgd2l0aCAKbW9yZSBD
UFUgY29yZXMgKEl0IGlzIGFscmVhZHkgb2JzZXJ2ZWQgb24gYSAxMi1jb3Jl
IG1hY2hpbmUgYWZ0ZXIgdXBkYXRpbmcgRmFzdHNvY2tldCkuCgojIyBORVcg
RkVBVFVSRVMgIyMKCldlIGFyZSBub3cgaW1wcm92aW5nIG5ldHdvcmsgc3Rh
Y2sgZWZmaWNpZW5jeSBpbiB0aGUgY2FzZSBvZiBsb25nIFRDUCBjb25uZWN0
aW9uLgpGb3VyIG1vcmUgZmVhdHVyZXMgYXJlIGludHJvZHVjZWQ6CgotICoq
RGlyZWN0LVRDUCoqOiBTa2lwIHRoZSByb3V0ZSBwcm9jZXNzIHdoZW4gcmVj
ZWl2aW5nIHBhY2tldHMgaWYgdGhlc2UgcGFja2V0cyBiZWxvbmcKdG8gdXBw
ZXIgVENQIHNvY2tldHMuCi0gKipTa2ItUG9vbCoqOiBHZXQgc2tiIGZyb20g
cGVyLWNvcmUgcHJlLWFsbG9jYXRlZCBza2IgcG9vbCBpbnN0ZWFkIG9mIGtl
cm5lbCBzbGFiLgotICoqUmVjZWl2ZS1DUFUtU2VsZWN0Kio6IFN0ZWVyIGEg
cGFja2V0IHRvIGEgQ1BVIGNvcmUgd2hlcmUgYXBwbGljYXRpb24gaXMgd2Fp
dGluZyBmb3IgaXQuIApUaGUgaWRlYSBpcyBzaW1pbGFyIHdpdGggUkZTIGZy
b20gR29vZ2xlLCBob3dldmVyLCBpdCBpcyBsaWdodGVyIGFuZCBtb3JlIGFj
Y3VyYXRlLgotICoqUlBTLUZyYW1ld29yayoqOiBXZSBleHRlbmQgdGhlIGlk
ZWEgb2YgUlBTIHRoYXQgaXMgdG8gcmVkaXNwYXRjaCB0aGUgcmVjZWl2aW5n
IHBhY2tldHMgCmJlZm9yZSB0aGV5IGVudGVyaW5nIHRoZSBuZXR3b3JrIHN0
YWNrLiBXZSBidWlsZCBhIGZyYW1ld29yayB3aGVyZSBkZXZlbG9wZXJzIGNh
biAKaW1wbGVtZW50IHRoZWlyIG93biBwYWNrZXRzLXJlZGlzcGF0Y2hpbmcg
cnVsZXMgaW4gb3V0LW9mLXRyZWUgbW9kdWxlIGFuZCBob29rIGludG8gCnRo
ZSBSUFMgZnJhbWV3b3JrLgoKV2UgZXZhbHVhdGVkIG91ciBuZXcgd29yayBv
biByZWRpcyB3aGljaCBpcyBhIHR5cGljYWwgYW5kIHBvcHVsYXIga2V5LXZh
bHVlIGNhY2hlIGFwcGxpY2F0aW9uLgoKU29tZSBpbXBvcnRhbnQgY29uZmln
dXJhdGlvbnM6CgotIFJlZGlzIHdvcmtzIGluIHBlcnNpc3RlbnQgVENQIGNv
bm5lY3Rpb24gbW9kZS4KLSBNdWx0aXBsZSBSZWRpcyBpbnN0YW5jZXMgYXJl
IHNldCB1cC4KLSBFYWNoIFJlZGlzIGluc3RhbmNlIGxpc3RlbnMgb24gYSBk
aWZmZXJlbnQgcG9ydCBhbmQgYmluZHMgdG8gYSBkaWZmZXJlbnQgQ1BVIGNv
cmUuCgpUaGUgOC1yZWRpcy1pbnN0YW5jZSB0ZXN0IHNob3dzOgoKLSBXaXRo
IGNvbW1vZGl0eSBOSUMgc3VwcG9ydGluZyBSU1MsIEZhc3Rzb2NrZXQgaW1w
cm92ZXMgdGhlIHRocm91Z2hwdXQgYnkgbW9yZSB0aGFuICoqMjAlKiouCi0g
V0l0aCBhZHZhbmNlZCBOSUMgc3VwcG9ydGluZyBGbG93LURpcmVjdG9yKElu
dGVsIDgyNTk5KSwgYSAqKjQ1JSoqIGltcHJvdmVtZW50IGNhbiBiZSByZWFj
aGVkLgoKTm90ZXM6CgotIFRoZXNlIG5ldyBmZWF0dXJlcyBhcmUgaW4gdGhl
IGV4cGVyaW1lbnRhbCBzdGFnZSwgbmVpdGhlciB3ZWxsIHR1bmVkIGZvciBw
ZXJmb3JtYW5jZSwgCm5vciBwcm92ZWQgc3RhYmxlIGJ5IGxvbmctdGltZSBw
cm9kdWN0aW9uIGVudmlyb25tZW50IHJ1bm5pbmcuCi0gVGhlcmUgbmV3IGZl
YXR1cmVzIGFyZSBjb21wbGVtZW50YXJ5IHRvIHRoZSBmZWF0dXJlcyBpbiBW
MS4wLCB0aGVyZWZvcmUsIE5naW54IGFuZCAKSEFQcm94eSBwZXJmb3JtYW5j
ZSBjYW4gYmUgZnVydGhlciBpbmNyZWFzZWQgYnkgRmFzdHNvY2tldCB3aXRo
IHRoZXNlIG5ldyBmZWF0dXJlcy4KCiMjIENPTlRBQ1RTICMjCgpNYWlsaW5n
LWxpc3Q6IGZhc3Rzb2NrZXRAbGlicmVsaXN0LmNvbSAgCkdvb2dsZSBHcm91
cDogZmFzdHNvY2tldC1kZXYgKGh0dHBzOi8vZ3JvdXBzLmdvb2dsZS5jb20v
Zm9ydW0vIyFmb3J1bS9mYXN0c29ja2V0LWRldikgIAoKU2VuZGluZyBhIG1h
aWwgdG8gdGhlIGFkZHJlc3MgYWJvdmUgd2lsbCBzdWJjcmliZSB0byB0aGUg
bWFpbGluZyBsaXN0LiBUaGUgc3ViamVjdCBhbmQgbWVzc2FnZSAKZG8gbm90
IG1hdHRlci4KCgoK
",,3722,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'DeepLearningZeroToAll',82524265,b'TensorFlow Basic Tutorial Labs',b'Jupyter Notebook',22,3722,,426,False,b'https://api.github.com/repos/hunkim/DeepLearningZeroToAll/forks',"IyBMYWIgY29kZSAoV0lQKSwgYnV0IGNhbGwgZm9yIGNvbW1lbnRzCgpbIVtC
dWlsZCBTdGF0dXNdKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9odW5raW0vRGVl
cExlYXJuaW5nWmVyb1RvQWxsLnN2Zz9icmFuY2g9bWFzdGVyKV0oaHR0cHM6
Ly90cmF2aXMtY2kub3JnL2h1bmtpbS9EZWVwTGVhcm5pbmdaZXJvVG9BbGwp
CgpUaGlzIGlzIGNvZGUgZm9yIGxhYnMgY292ZXJlZCBpbiBUZW5zb3JGbG93
IGJhc2ljIHR1dG9yaWFscyAoaW4gS29yZWFuKSBhdCBodHRwczovL3lvdXR1
LmJlL0JTNk8wek9HWDRFLgooV2UgYWxzbyBoYXZlIGEgcGxhbiB0byByZWNv
cmQgdmlkZW9zIGluIEVuZ2xpc2guKQoKVGhpcyBpcyB3b3JrIGluIHByb2dy
ZXNzLCBhbmQgbWF5IGhhdmUgYnVncy4KSG93ZXZlciwgd2UgY2FsbCBmb3Ig
eW91ciBjb21tZW50cyBhbmQgcHVsbCByZXF1ZXN0cy4gQ2hlY2sgb3V0IG91
ciBzdHlsZSBndWlkZSBsaW5lOgoKKiBNb3JlIFRGICgxLjApIHN0eWxlOiB1
c2UgbW9yZSByZWNlbnQgYW5kIGRlY2VudCBURiBBUElzLgoqIE1vcmUgUHl0
aG9uaWM6IGZ1bGx5IGxldmVyYWdlIHRoZSBwb3dlciBvZiBweXRob24KKiBS
ZWFkYWJpbGl0eSAob3ZlciBlZmZpY2llbmN5KTogU2luY2UgaXQncyBmb3Ig
aW5zdHJ1Y3Rpb24gcHVycG9zZXMsIHdlIHByZWZlciAqcmVhZGFiaWxpdHkq
IG92ZXIgb3RoZXJzLgoqIFVuZGVyc3RhbmRhYmlsaXR5IChvdmVyIGV2ZXJ5
dGhpbmcpOiBVbmRlcnN0YW5kaW5nIFRGIGtleSBjb25jZXB0cyBpcyB0aGUg
bWFpbiBnb2FsIG9mIHRoaXMgY29kZS4KKiBLSVNTOiBLZWVwIEl0IFNpbXBs
ZSBTdHVwaWQhIGh0dHBzOi8vd3d3LnRlY2hvcGVkaWEuY29tL2RlZmluaXRp
b24vMjAyNjIva2VlcC1pdC1zaW1wbGUtc3R1cGlkLXByaW5jaXBsZS1raXNz
LXByaW5jaXBsZQoKIyMgTGFiIHNsaWRlczoKCiogaHR0cHM6Ly9nb28uZ2wv
alB0V050CgpXZSB3ZWxjb21lIHlvdXIgY29tbWVudHMgb24gc2xpZGVzLgoK
IyMgRmlsZSBuYW1pbmcgcnVsZToKCioga2xhYi1YWC1YLVtuYW1lXS5weTog
S2VyYXMgbGFicyBjb2RlCiogbGFiLVhYLVgtW25hbWVdLnB5OiBUZW5zb3JG
bG93IGxhYiBjb2RlCiogbXhsYWItWFgtWC1bbmFtZV0ucHk6IE1YTmV0IGxh
YiBjb2RlCgojIyBJbnN0YWxsIHJlcXVpcmVtZW50cwpgYGBiYXNoCnBpcCBp
bnN0YWxsIC1yIHJlcXVpcmVtZW50cy50eHQKYGBgCgojIyBSdW4gdGVzdCBh
bmQgYXV0b3BlcDgKVE9ETzogTmVlZCB0byBhZGQgbW9yZSB0ZXN0IGNhc2Vz
CgpgYGBiYXNoCnB5dGhvbiAtbSB1bml0dGVzdCBkaXNjb3ZlciAtcyB0ZXN0
czsKCiMgaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xNDMy
ODQwNi8KcGlwIGluc3RhbGwgYXV0b3BlcDggIyBpZiB5b3UgaGF2ZW4ndCBp
bnN0YWxsCmF1dG9wZXA4IC4gLS1yZWN1cnNpdmUgLS1pbi1wbGFjZSAtLXBl
cDgtcGFzc2VzIDIwMDAgLS12ZXJib3NlCmBgYAojIyBBdXRvbWF0aWNhbGx5
IGNyZWF0ZSByZXF1aXJlbWVudHMudHh0CgpgYGBiYXNoCnBpcCBpbnN0YWxs
IHBpcHJlcXMKCnBpcHJlcXMgL3BhdGgvdG8vcHJvamVjdApgYGAKaHR0cDov
L3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8zMTY4NDM3NQoKIyMgQ29u
dHJpYnV0aW9ucy9Db21tZW50cwpXZSBhbHdheXMgd2VsY29tZSB5b3VyIGNv
bW1lbnRzIGFuZCBwdWxsIHJlcXVlc3RzLgoKIyMgUmVmZXJlbmNlIEltcGxl
bWVudGF0aW9ucwoqIGh0dHBzOi8vZ2l0aHViLmNvbS9ubGludHovVGVuc29y
Rmxvdy1UdXRvcmlhbHMvCiogaHR0cHM6Ly9naXRodWIuY29tL2dvbGJpbi9U
ZW5zb3JGbG93LU1MLUV4ZXJjaXNlcwoqIGh0dHBzOi8vZ2l0aHViLmNvbS9G
dVplci9TdHVkeV9UZW5zb3JGbG93CiogaHR0cHM6Ly9naXRodWIuY29tL2Zj
aG9sbGV0L2tlcmFzL3RyZWUvbWFzdGVyL2V4YW1wbGVzCg==
",,3722,"IyBjb2RlIGJlbG93IGlzIHRha2VuIGZyb20gaHR0cHM6Ly9naXRodWIuY29t
L2ZjaG9sbGV0L2tlcmFzL2Jsb2IvbWFzdGVyLy50cmF2aXMueW1sCmxhbmd1
YWdlOiBweXRob24KcHl0aG9uOiAjIE9ubHkgdHdvIHZlcnNpb25zIGZvciBu
b3cKICAtICIzLjYiCiMgY29tbWFuZCB0byBpbnN0YWxsIGRlcGVuZGVuY2ll
cwppbnN0YWxsOgogICAgLSBwaXAgaW5zdGFsbCAtciByZXF1aXJlbWVudHMu
dHh0IC0tcXVpZXQKCnNjcmlwdDoKICAtIHB5dGhvbiAtbSBjb21waWxlYWxs
IC4KICAtIHB5dGVzdAogIC0gZmluZCAuIC1uYW1lICcqLnB5JyB8IHhhcmdz
IHB5bGludAo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
