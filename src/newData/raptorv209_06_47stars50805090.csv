name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'CocoaHTTPServer',2998811,"b'A small, lightweight, embeddable HTTP server for Mac OS X or iOS applications'",b'Objective-C',127,5090,,285,False,b'https://api.github.com/repos/robbiehanson/CocoaHTTPServer/forks',"IyBDb2NvYUhUVFBTZXJ2ZXIKClshW0J1aWxkIFN0YXR1c10oaHR0cHM6Ly90
cmF2aXMtY2kub3JnL3JvYmJpZWhhbnNvbi9Db2NvYUhUVFBTZXJ2ZXIuc3Zn
KV0oaHR0cHM6Ly90cmF2aXMtY2kub3JnL3JvYmJpZWhhbnNvbi9Db2NvYUhU
VFBTZXJ2ZXIpCiBbIVtWZXJzaW9uXShodHRwOi8vaW1nLnNoaWVsZHMuaW8v
Y29jb2Fwb2RzL3YvQ29jb2FIVFRQU2VydmVyLnN2Zz9zdHlsZT1mbGF0KV0o
aHR0cDovL2NvY29hcG9kcy5vcmcvP3E9Q29jb2FIVFRQU2VydmVyKQogWyFb
UGxhdGZvcm1dKGh0dHA6Ly9pbWcuc2hpZWxkcy5pby9jb2NvYXBvZHMvcC9D
b2NvYUhUVFBTZXJ2ZXIuc3ZnP3N0eWxlPWZsYXQpXSgpCiBbIVtMaWNlbnNl
XShodHRwOi8vaW1nLnNoaWVsZHMuaW8vY29jb2Fwb2RzL2wvQ29jb2FIVFRQ
U2VydmVyLnN2Zz9zdHlsZT1mbGF0KV0oaHR0cHM6Ly9naXRodWIuY29tL3Jv
YmJpZWhhbnNvbi9Db2NvYUhUVFBTZXJ2ZXIvYmxvYi9tYXN0ZXIvTElDRU5T
RSkKCkNvY29hSFRUUFNlcnZlciBpcyBhIHNtYWxsLCBsaWdodHdlaWdodCwg
ZW1iZWRkYWJsZSBIVFRQIHNlcnZlciBmb3IgTWFjIE9TIFggb3IgaU9TIGFw
cGxpY2F0aW9ucy4KClNvbWV0aW1lcyBkZXZlbG9wZXJzIG5lZWQgYW4gZW1i
ZWRkZWQgSFRUUCBzZXJ2ZXIgaW4gdGhlaXIgYXBwLiBQZXJoYXBzIGl0J3Mg
YSBzZXJ2ZXIgYXBwbGljYXRpb24gd2l0aCByZW1vdGUgbW9uaXRvcmluZy4g
T3IgcGVyaGFwcyBpdCdzIGEgZGVza3RvcCBhcHBsaWNhdGlvbiB1c2luZyBI
VFRQIGZvciB0aGUgY29tbXVuaWNhdGlvbiBiYWNrZW5kLiBPciBwZXJoYXBz
IGl0J3MgYW4gaU9TIGFwcCBwcm92aWRpbmcgb3Zlci10aGUtYWlyIGFjY2Vz
cyB0byBkb2N1bWVudHMuIFdoYXRldmVyIHlvdXIgcmVhc29uLCBDb2NvYUhU
VFBTZXJ2ZXIgY2FuIGdldCB0aGUgam9iIGRvbmUuIEl0IHByb3ZpZGVzOgoK
LSAgIEJ1aWx0IGluIHN1cHBvcnQgZm9yIGJvbmpvdXIgYnJvYWRjYXN0aW5n
Ci0gICBJUHY0IGFuZCBJUHY2IHN1cHBvcnQKLSAgIEFzeW5jaHJvbm91cyBu
ZXR3b3JraW5nIHVzaW5nIEdDRCBhbmQgc3RhbmRhcmQgc29ja2V0cwotICAg
UGFzc3dvcmQgcHJvdGVjdGlvbiBzdXBwb3J0Ci0gICBTU0wvVExTIGVuY3J5
cHRpb24gc3VwcG9ydAotICAgRXh0cmVtZWx5IEZBU1QgYW5kIG1lbW9yeSBl
ZmZpY2llbnQKLSAgIEV4dHJlbWVseSBzY2FsYWJsZSAoYnVpbHQgZW50aXJl
bHkgdXBvbiBHQ0QpCi0gICBIZWF2aWx5IGNvbW1lbnRlZCBjb2RlCi0gICBW
ZXJ5IGVhc2lseSBleHRlbnNpYmxlCi0gICBXZWJEQVYgaXMgc3VwcG9ydGVk
IHRvbyEKCjxici8+CkNhbid0IGZpbmQgdGhlIGFuc3dlciB0byB5b3VyIHF1
ZXN0aW9uIGluIGFueSBvZiB0aGUgW3dpa2ldKGh0dHBzOi8vZ2l0aHViLmNv
bS9yb2JiaWVoYW5zb24vQ29jb2FIVFRQU2VydmVyL3dpa2kpIGFydGljbGVz
PyBUcnkgdGhlICoqW21haWxpbmcgbGlzdF0oaHR0cDovL2dyb3Vwcy5nb29n
bGUuY29tL2dyb3VwL2NvY29haHR0cHNlcnZlcikqKi4KPGJyLz4KPGJyLz4K
TG92ZSB0aGUgcHJvamVjdD8gV2FubmEgYnV5IG1lIGEgY29mZmVlPyAob3Ig
YSBiZWVyIDpEKSBbIVtkb25hdGlvbl0oaHR0cDovL3d3dy5wYXlwYWwuY29t
L2VuX1VTL2kvYnRuL2J0bl9kb25hdGVfU00uZ2lmKV0oaHR0cHM6Ly93d3cu
cGF5cGFsLmNvbS9jZ2ktYmluL3dlYnNjcj9jbWQ9X3MteGNsaWNrJmhvc3Rl
ZF9idXR0b25faWQ9QkhGMkRKUkVUR1Y1UykK
",,5090,"bGFuZ3VhZ2U6IG9iamVjdGl2ZS1jCgpzY3JpcHQ6CiAgLSB4Y3Rvb2wgLXBy
b2plY3QgU2FtcGxlcy9EeW5hbWljU2VydmVyL0R5bmFtaWNTZXJ2ZXIueGNv
ZGVwcm9qIC1zY2hlbWUgRHluYW1pY1NlcnZlciBidWlsZAogIC0geGN0b29s
IC1wcm9qZWN0IFNhbXBsZXMvaVBob25lSFRUUFNlcnZlci9pUGhvbmVIVFRQ
U2VydmVyLnhjb2RlcHJvaiAtc2NoZW1lIGlQaG9uZUhUVFBTZXJ2ZXIgLXNk
ayBpcGhvbmVzaW11bGF0b3IgYnVpbGQKICAtIHhjdG9vbCAtcHJvamVjdCBT
YW1wbGVzL1Bhc3N3ZEhUVFBTZXJ2ZXIvUGFzc3dkSFRUUFNlcnZlci54Y29k
ZXByb2ogLXNjaGVtZSBQYXNzd2RIVFRQU2VydmVyIGJ1aWxkCiAgLSB4Y3Rv
b2wgLXByb2plY3QgU2FtcGxlcy9Qb3N0SFRUUFNlcnZlci9Qb3N0SFRUUFNl
cnZlci54Y29kZXByb2ogLXNjaGVtZSBQb3N0SFRUUFNlcnZlciBidWlsZAog
IC0geGN0b29sIC1wcm9qZWN0IFNhbXBsZXMvU2VjdXJlSFRUUFNlcnZlci9T
ZWN1cmVIVFRQU2VydmVyLnhjb2RlcHJvaiAtc2NoZW1lIFNlY3VyZUhUVFBT
ZXJ2ZXIgYnVpbGQKICAtIHhjdG9vbCAtcHJvamVjdCBTYW1wbGVzL1NlY3Vy
ZVdlYlNvY2tldFNlcnZlci9TZWN1cmVXZWJTb2NrZXRTZXJ2ZXIueGNvZGVw
cm9qIC1zY2hlbWUgU2VjdXJlV2ViU29ja2V0U2VydmVyIGJ1aWxkCiAgLSB4
Y3Rvb2wgLXByb2plY3QgU2FtcGxlcy9TaW1wbGVGaWxlVXBsb2FkU2VydmVy
L1NpbXBsZUZpbGVVcGxvYWRTZXJ2ZXIueGNvZGVwcm9qIC1zY2hlbWUgU2lt
cGxlRmlsZVVwbG9hZFNlcnZlciBidWlsZAogIC0geGN0b29sIC1wcm9qZWN0
IFNhbXBsZXMvU2ltcGxlSFRUUFNlcnZlci9TaW1wbGVIVFRQU2VydmVyLnhj
b2RlcHJvaiAtc2NoZW1lIFNpbXBsZUhUVFBTZXJ2ZXIgYnVpbGQKICAtIHhj
dG9vbCAtcHJvamVjdCBTYW1wbGVzL1NpbXBsZVdlYlNvY2tldFNlcnZlci9T
aW1wbGVXZWJTb2NrZXRTZXJ2ZXIueGNvZGVwcm9qIC1zY2hlbWUgU2ltcGxl
V2ViU29ja2V0U2VydmVyIGJ1aWxkCiAgLSB4Y3Rvb2wgLXByb2plY3QgU2Ft
cGxlcy9XZWJEQVZTZXJ2ZXIvV2ViREFWU2VydmVyLnhjb2RlcHJvaiAtc2No
ZW1lIFdlYkRBVlNlcnZlciBidWlsZAo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'flubber',93835782,b'Tools for smoother shape animations.',b'JavaScript',12,5089,,77,False,b'https://api.github.com/repos/veltman/flubber/forks',"WyFbQnVpbGQgU3RhdHVzXShodHRwczovL3RyYXZpcy1jaS5vcmcvdmVsdG1h
bi9mbHViYmVyLnN2Zz9icmFuY2g9bWFzdGVyKV0oaHR0cHM6Ly90cmF2aXMt
Y2kub3JnL3ZlbHRtYW4vZmx1YmJlcikKCiMgZmx1YmJlcgoKU29tZSBiZXN0
LWd1ZXNzIG1ldGhvZHMgZm9yIHNtb290aGx5IGludGVycG9sYXRpbmcgYmV0
d2VlbiAyLUQgc2hhcGVzLgoKIVtGbHViYmVyIGluIGFjdGlvbl0oaHR0cHM6
Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMjEyMDQ0Ni8y
NzAxNDE2MC1lMGNlN2MwNC00ZWE3LTExZTctOGRhNC01ZGRlODM5MjkwZWIu
Z2lmKQoKIyMjIFdoeT8KCkxldCdzIHNheSB5b3Ugd2FudCB0byBhbmltYXRl
IGJldHdlZW4gdHdvIFNWRyBwYXRocyBvciBjYW52YXMgc2hhcGVzIGluIGEg
dmlzdWFsaXphdGlvbi4gSWYgeW91IHBsdWcgaW4gdGhlaXIgY29vcmRpbmF0
ZXMgb3IgdGhlaXIgcGF0aCBzdHJpbmdzIHRvIHNvbWV0aGluZyBsaWtlIGBk
My50cmFuc2l0aW9uKClgLCBpdCBtaWdodCB3b3JrIGlmIHRoZSBzaGFwZXMg
KmNvcnJlc3BvbmQqIHRvIGVhY2ggb3RoZXIgcmVhbGx5IHdlbGwgLSBmb3Ig
ZXhhbXBsZSwgdHVybmluZyBhIHRyaWFuZ2xlIGludG8gYSBkaWZmZXJlbnQg
dHJpYW5nbGUuIEJ1dCBvbmNlIHlvdXIgc2hhcGVzIGRvbid0IHJlYWxseSBj
b3JyZXNwb25kLCB5b3UnbGwgZ2V0IHVucHJlZGljdGFibGUgcmVzdWx0cyB3
aXRoIHdlaXJkIGludmVyc2lvbnMgYW5kIHN1ZGRlbiBqdW1wcy4KClRoZSBn
b2FsIG9mIHRoaXMgbGlicmFyeSBpcyB0byBwcm92aWRlIGEgYmVzdC1ndWVz
cyBpbnRlcnBvbGF0aW9uIGZvciBhbnkgdHdvIGFyYml0cmFyeSBzaGFwZXMg
KG9yIGNvbGxlY3Rpb25zIG9mIHNoYXBlcykgdGhhdCByZXN1bHRzIGluIGEg
cmVhc29uYWJseSBzbW9vdGggYW5pbWF0aW9uLCB3aXRob3V0IG92ZXJ0aGlu
a2luZyBpdC4KCiMjIyBJbnN0YWxsYXRpb24KCkluIGEgYnJvd3NlciAoZXhw
b3NlcyB0aGUgYGZsdWJiZXJgIGdsb2JhbCk6CgpgYGBodG1sCjxzY3JpcHQg
c3JjPSJodHRwczovL3VucGtnLmNvbS9mbHViYmVyQDAuMy4wIj48L3Njcmlw
dD4KYGBgCgpXaXRoIE5QTToKCmBgYHNoCm5wbSBpbnN0YWxsIGZsdWJiZXIK
YGBgCgpBbmQgdGhlbiBpbXBvcnQvcmVxdWlyZSBpdDoKCmBgYGpzCnZhciBm
bHViYmVyID0gcmVxdWlyZSgiZmx1YmJlciIpOyAvLyBOb2RlIGNsYXNzaWMK
aW1wb3J0IHsgaW50ZXJwb2xhdGUgfSBmcm9tICJmbHViYmVyIiAvLyBFUzYK
YGBgCgojIyMgSG93IHRvIHVzZQoKRmx1YmJlciBleHBlY3RzIGEgc2hhcGUg
aW5wdXQgdG8gYmUgZWl0aGVyIGFuIFNWRyBwYXRoIHN0cmluZyBvciBhbiBh
cnJheSBvZiBgW3gsIHldYCBwb2ludHMgKGEgInJpbmciKToKCmBgYGpzCiJN
MTAwLDEwMCBMMjAwLDEwMCBMMTUwLDIwMFoiIC8vIEEgdHJpYW5nbGUgYXMg
YSBwYXRoIHN0cmluZwpbWzEwMCwgMTAwXSwgWzIwMCwgMTAwXSwgWzE1MCwg
MjAwXV0gLy8gQSB0cmlhbmdsZSBhcyBhIHJpbmcKYGBgCgpGbHViYmVyIG1l
dGhvZHMgcmV0dXJuICoqaW50ZXJwb2xhdG9ycyoqLCBmdW5jdGlvbnMgdGhh
dCB5b3UgY2FuIGNhbGwgbGF0ZXIgd2l0aCBhIHZhbHVlIGZyb20gMCB0byAx
IHRvIGdldCBiYWNrIHRoZSBjb3JyZXNwb25kaW5nIHNoYXBlLCB3aGVyZSAw
IGlzIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGFuaW1hdGlvbiBhbmQgMSBpcyB0
aGUgZW5kLgoKVXNpbmcgRDMsIHVzYWdlIGNvdWxkIGxvb2sgc29tZXRoaW5n
IGxpa2U6CgpgYGBqcwp2YXIgdHJpYW5nbGUgPSBbWzEsIDBdLCBbMiwgMl0s
IFswLCAyXV0sCiAgICBwZW50YWdvbiA9IFtbMCwgMF0sIFsyLCAwXSwgWzIs
IDFdLCBbMSwgMl0sIFswLCAxXV07Cgp2YXIgaW50ZXJwb2xhdG9yID0gZmx1
YmJlci5pbnRlcnBvbGF0ZSh0cmlhbmdsZSwgcGVudGFnb24pOwoKZDMuc2Vs
ZWN0KCJwYXRoIikKICAgIC50cmFuc2l0aW9uKCkKICAgIC5hdHRyVHdlZW4o
ImQiLCBmdW5jdGlvbigpeyByZXR1cm4gaW50ZXJwb2xhdG9yOyB9KTsKYGBg
CgpXaXRob3V0IEQzLCB1c2FnZSBtaWdodCBsb29rIHNvbWV0aGluZyBsaWtl
IHRoaXM6CmBgYGpzCi8vIE1peGluZyBhbmQgbWF0Y2hpbmcgaW5wdXQgdHlw
ZXMgaXMgT0sKdmFyIHRyaWFuZ2xlID0gIk0xLDAgTDIsMiBMMCwyIFoiLAog
ICAgcGVudGFnb24gPSBbWzAsIDBdLCBbMiwgMF0sIFsyLCAxXSwgWzEsIDJd
LCBbMCwgMV1dOwoKdmFyIGludGVycG9sYXRvciA9IGZsdWJiZXIuaW50ZXJw
b2xhdGUodHJpYW5nbGUsIHBlbnRhZ29uKTsKCnJlcXVlc3RBbmltYXRpb25G
cmFtZShkcmF3KTsKCmZ1bmN0aW9uIGRyYXcodGltZSkgewogICAgdmFyIHQg
PSBob3dGYXJBbG9uZ1RoZUFuaW1hdGlvbklzT25BU2NhbGVPZlplcm9Ub09u
ZSh0aW1lKTsKICAgIG15UGF0aEVsZW1lbnQuc2V0QXR0cmlidXRlKCJkIiwg
aW50ZXJwb2xhdG9yKHQpKTsKICAgIGlmICh0IDwgMSkgewogICAgICAgIHJl
cXVlc3RBbmltYXRpb25GcmFtZShkcmF3KTsKICAgIH0KfQpgYGAKCk5vdGU6
IGl0IGRvZXNuJ3QgbWF0dGVyIHdoZXRoZXIgeW91ciByaW5nIGhhcyBhIGNs
b3NpbmcgcG9pbnQgaWRlbnRpY2FsIHRvIHRoZSBmaXJzdCBwb2ludC4KCiMj
IyBBUEkKCiMjIyMgZmx1YmJlci5pbnRlcnBvbGF0ZShmcm9tU2hhcGUsIHRv
U2hhcGUgWywgb3B0aW9uc10pCgpgZnJvbVNoYXBlYCBhbmQgYHRvU2hhcGVg
IHNob3VsZCBlYWNoIGJlIGEgcmluZyBvciBhbiBTVkcgcGF0aCBzdHJpbmcu
IElmIHlvdXIgcGF0aCBzdHJpbmcgaW5jbHVkZXMgaG9sZXMgb3IgbXVsdGlw
bGUgc2hhcGVzIGluIGEgc2luZ2xlIHN0cmluZywgZXZlcnl0aGluZyBidXQg
dGhlIGZpcnN0IG91dGVyIHNoYXBlIHdpbGwgYmUgaWdub3JlZC4KClRoaXMg
cmV0dXJucyBhIGZ1bmN0aW9uIHRoYXQgdGFrZXMgYSB2YWx1ZSBgdGAgZnJv
bSAwIHRvIDEgYW5kIHJldHVybnMgdGhlIGluLWJldHdlZW4gc2hhcGU6Cgpg
YGBqcwp2YXIgaW50ZXJwb2xhdG9yID0gZmx1YmJlci5pbnRlcnBvbGF0ZSh0
cmlhbmdsZSwgb2N0YWdvbik7CgppbnRlcnBvbGF0b3IoMCk7IC8vIHJldHVy
bnMgYW4gU1ZHIHRyaWFuZ2xlIHBhdGggc3RyaW5nCmludGVycG9sYXRvcigw
LjUpOyAvLyByZXR1cm5zIHNvbWV0aGluZyBoYWxmd2F5IGJldHdlZW4gdGhl
IHRyaWFuZ2xlIGFuZCB0aGUgb2N0YWdvbgppbnRlcnBvbGF0b3IoMSk7IC8v
IHJldHVybnMgYW4gU1ZHIG9jdGFnb24gcGF0aCBzdHJpbmcKYGBgCgpgb3B0
aW9uc2AgY2FuIGluY2x1ZGUgdGhlIGZvbGxvd2luZyBrZXlzOgoKYHN0cmlu
Z2A6IHdoZXRoZXIgdG8gb3V0cHV0IHJlc3VsdHMgYXMgYW4gU1ZHIHBhdGgg
c3RyaW5nIG9yIGFuIGFycmF5IG9mIHBvaW50cy4gKGRlZmF1bHQ6IGB0cnVl
YCkgIApgbWF4U2VnbWVudExlbmd0aGA6IHRoZSBsb3dlciB0aGlzIG51bWJl
ciBpcywgdGhlIHNtb290aGVyIHRoZSByZXN1bHRpbmcgYW5pbWF0aW9uIHdp
bGwgYmUsIGF0IHRoZSBleHBlbnNlIG9mIHBlcmZvcm1hbmNlLiBSZXByZXNl
bnRzIGEgbnVtYmVyIGluIHBpeGVscyAoaWYgbm8gdHJhbnNmb3JtcyBhcmUg
aW52b2x2ZWQpLiBTZXQgaXQgdG8gYGZhbHNlYCBvciBgSW5maW5pdHlgIGZv
ciBubyBzbW9vdGhpbmcuIChkZWZhdWx0OiBgMTBgKQoKWy5pbnRlcnBvbGF0
ZSgpIGluIGFjdGlvbiB3aXRoIFNWRyBwYXRocyBhcyBpbnB1dF0oaHR0cHM6
Ly92ZWx0bWFuLmdpdGh1Yi5pby9mbHViYmVyL2RlbW9zL2Jhc2ljLXN2Zy5o
dG1sKQoKWy5pbnRlcnBvbGF0ZSgpIGluIGFjdGlvbiB3aXRoIEdlb0pTT04g
Y29vcmRpbmF0ZXMgYXMgaW5wdXRdKGh0dHBzOi8vdmVsdG1hbi5naXRodWIu
aW8vZmx1YmJlci9kZW1vcy9iYXNpYy1hcnJheS5odG1sKQoKIyMjIyBmbHVi
YmVyLnRvQ2lyY2xlKGZyb21TaGFwZSwgeCwgeSwgclssIG9wdGlvbnNdKQoK
TGlrZSBgaW50ZXJwb2xhdGUoKWAsIGJ1dCBmb3IgdGhlIHNwZWNpZmljIGNh
c2Ugb2YgdHJhbnNmb3JtaW5nIHRoZSBzaGFwZSB0byBhIGNpcmNsZSBjZW50
ZXJlZCBhdCBgW3gsIHldYCB3aXRoIHJhZGl1cyBgcmAuCgpgYGBqcwp2YXIg
aW50ZXJwb2xhdG9yID0gZmx1YmJlci50b0NpcmNsZSh0cmlhbmdsZSwgMTAw
LCAxMDAsIDEwKTsKCmludGVycG9sYXRvcigwKTsgLy8gcmV0dXJucyBhbiBT
VkcgdHJpYW5nbGUgcGF0aCBzdHJpbmcKaW50ZXJwb2xhdG9yKDAuNSk7IC8v
IHJldHVybnMgc29tZXRoaW5nIGhhbGZ3YXkgYmV0d2VlbiB0aGUgdHJpYW5n
bGUgYW5kIHRoZSBjaXJjbGUKaW50ZXJwb2xhdG9yKDEpOyAvLyByZXR1cm5z
IGEgY2lyY2xlIHBhdGggc3RyaW5nIGNlbnRlcmVkIGF0IDEwMCwgMTAwIHdp
dGggYSByYWRpdXMgb2YgMTAKYGBgCgpbLnRvQ2lyY2xlKCkgaW4gYWN0aW9u
XShodHRwczovL3ZlbHRtYW4uZ2l0aHViLmlvL2ZsdWJiZXIvZGVtb3MvY2ly
Y2xlcy5odG1sKQoKIyMjIyBmbHViYmVyLnRvUmVjdChmcm9tU2hhcGUsIHgs
IHksIHdpZHRoLCBoZWlnaHRbLCBvcHRpb25zXSkKCkxpa2UgYGludGVycG9s
YXRlKClgLCBidXQgZm9yIHRoZSBzcGVjaWZpYyBjYXNlIG9mIHRyYW5zZm9y
bWluZyB0aGUgc2hhcGUgdG8gYSByZWN0YW5nbGUgd2l0aCB0aGUgdXBwZXIt
bGVmdCBjb3JuZXIgYFt4LCB5XWAgYW5kIHRoZSBkaW1lbnNpb25zIGB3aWR0
aGAgeCBgaGVpZ2h0YC4KCmBgYGpzCnZhciBpbnRlcnBvbGF0b3IgPSBmbHVi
YmVyLnRvUmVjdCh0cmlhbmdsZSwgMTAsIDUwLCAxMDAsIDIwMCk7CgppbnRl
cnBvbGF0b3IoMCk7IC8vIHJldHVybnMgYW4gU1ZHIHRyaWFuZ2xlIHBhdGgg
c3RyaW5nCmludGVycG9sYXRvcigwLjUpOyAvLyByZXR1cm5zIHNvbWV0aGlu
ZyBoYWxmd2F5IGJldHdlZW4gdGhlIHRyaWFuZ2xlIGFuZCB0aGUgcmVjdGFu
Z2xlCmludGVycG9sYXRvcigxKTsgLy8gcmV0dXJucyBhIHJlY3RhbmdsZSBw
YXRoIHN0cmluZyBmcm9tIFsxMCwgNTBdIGluIHRoZSB1cHBlciBsZWZ0IHRv
IFsxMTAsIDI1MF0gaW4gdGhlIGxvd2VyIHJpZ2h0CmBgYAoKWy50b1JlY3Qo
KSBpbiBhY3Rpb25dKGh0dHBzOi8vdmVsdG1hbi5naXRodWIuaW8vZmx1YmJl
ci9kZW1vcy9yZWN0cy5odG1sKQoKIyMjIyBmbHViYmVyLmZyb21DaXJjbGUo
eCwgeSwgciwgdG9TaGFwZVssIG9wdGlvbnNdKQoKTGlrZSBgdG9DaXJjbGUo
KWAgYnV0IHJldmVyc2VkLgoKIyMjIyBmbHViYmVyLmZyb21SZWN0KHgsIHks
IHdpZHRoLCBoZWlnaHQsIHRvU2hhcGVbLCBvcHRpb25zXSkKCkxpa2UgYHRv
UmVjdCgpYCBidXQgcmV2ZXJzZWQuCgojIyMjIGZsdWJiZXIuc2VwYXJhdGUo
ZnJvbVNoYXBlLCB0b1NoYXBlTGlzdFssIG9wdGlvbnNdKQoKSWYgeW91J3Jl
IHRyeWluZyB0byBpbnRlcnBvbGF0ZSBiZXR3ZWVuIGEgc2luZ2xlIHNoYXBl
IGFuZCBtdWx0aXBsZSBzaGFwZXMgKGZvciBleGFtcGxlLCBhIGdyb3VwIG9m
IHRocmVlIGNpcmNsZXMgdHVybmluZyBpbnRvIGEgc2luZ2xlIGJpZyBjaXJj
bGUpLCB0aGlzIG1ldGhvZCB3aWxsIGJyZWFrIHlvdXIgc2hhcGVzIGludG8g
cGllY2VzIHNvIHlvdSBjYW4gYW5pbWF0ZSBiZXR3ZWVuIHRoZSB0d28gc2V0
cy4gIFRoaXMgaXNuJ3QgdGVycmlibHkgcGVyZm9ybWFudCBhbmQgaGFzIHNv
bWUgcXVpcmtzIGJ1dCBpdCB0ZW5kcyB0byBnZXQgdGhlIGpvYiBkb25lLgoK
YGZyb21TaGFwZWAgc2hvdWxkIGJlIGEgcmluZyBvciBTVkcgcGF0aCBzdHJp
bmcsIGFuZCBgdG9TaGFwZUxpc3RgIHNob3VsZCBiZSBhbiBhcnJheSBvZiB0
aGVtLgoKVGhlIG9wdGlvbnMgYXJlIHRoZSBzYW1lIGFzIGZvciBgaW50ZXJw
b2xhdGUoKWAsIHdpdGggdGhlIGFkZGl0aW9uYWwgb3B0aW9uIG9mIGBzaW5n
bGVgLCB3aGljaCBkZWZhdWx0cyB0byBgZmFsc2VgLgoKSWYgYHNpbmdsZWAg
aXMgZmFsc2UsIHRoaXMgcmV0dXJucyBhbiBhcnJheSBvZiBgbmAgaW50ZXJw
b2xhdG9yIGZ1bmN0aW9ucywgd2hlcmUgYG5gIGlzIHRoZSBsZW5ndGggb2Yg
YHRvU2hhcGVMaXN0YC4gIElmIGBzaW5nbGVgIGlzIHNldCB0byB0cnVlIHRo
aXMgcmV0dXJucyBvbmUgaW50ZXJwb2xhdG9yIHRoYXQgY29tYmluZXMgdGhp
bmdzIGludG8gb25lIGdpYW50IHBhdGggc3RyaW5nIG9yIG9uZSBiaWcgYXJy
YXkgb2YgcmluZ3MuCgpgYGBqcwovLyByZXR1cm5zIGFuIGFycmF5IG9mIHR3
byBpbnRlcnBvbGF0b3IgZnVuY3Rpb25zCnZhciBpbnRlcnBvbGF0b3JzID0g
Zmx1YmJlci5zZXBhcmF0ZSh0cmlhbmdsZSwgW3NxdWFyZSwgb3RoZXJTcXVh
cmVdKTsKCmQzLnNlbGVjdEFsbCgicGF0aCIpCiAgICAuZGF0YShpbnRlcnBv
bGF0b3JzKQogICAgLnRyYW5zaXRpb24oKQogICAgLmF0dHJUd2VlbigiZCIs
IGZ1bmN0aW9uKGludGVycG9sYXRvcikgeyByZXR1cm4gaW50ZXJwb2xhdG9y
OyB9KTsKYGBgCgpbLnNlcGFyYXRlKCkgaW4gYWN0aW9uXShodHRwczovL3Zl
bHRtYW4uZ2l0aHViLmlvL2ZsdWJiZXIvZGVtb3MvbXVsdGlwbGUtZGlzdGlu
Y3QuaHRtbCkKCmBgYGpzCi8vIHJldHVybnMgYSBzaW5nbGUgaW50ZXJwb2xh
dG9yIGZ1bmN0aW9uCnZhciBjb21iaW5lZEludGVycG9sYXRvciA9IGZsdWJi
ZXIuc2VwYXJhdGUodHJpYW5nbGUsIFtzcXVhcmUsIG90aGVyU3F1YXJlXSwg
eyBzaW5nbGU6IHRydWUgfSk7CgovLyBUaGlzIG9uZSBwYXRoIGVsZW1lbnQg
d2lsbCBiZSB0d28gc3F1YXJlcyBhdCB0aGUgZW5kCmQzLnNlbGVjdCgicGF0
aCIpCiAgICAudHJhbnNpdGlvbigpCiAgICAuYXR0clR3ZWVuKCJkIiwgZnVu
Y3Rpb24oKSB7IHJldHVybiBjb21iaW5lZEludGVycG9sYXRvcjsgfSk7CmBg
YAoKWy5zZXBhcmF0ZSh7IHNpbmdsZTogdHJ1ZSB9KSBpbiBhY3Rpb25dKGh0
dHBzOi8vdmVsdG1hbi5naXRodWIuaW8vZmx1YmJlci9kZW1vcy9tdWx0aXBs
ZS5odG1sKQoKIyMjIyBmbHViYmVyLmNvbWJpbmUoZnJvbVNoYXBlTGlzdCwg
dG9TaGFwZVssIG9wdGlvbnNdKQoKTGlrZSBgc2VwYXJhdGUoKWAgYnV0IHJl
dmVyc2VkLgoKIyMjIyBmbHViYmVyLmludGVycG9sYXRlQWxsKGZyb21TaGFw
ZUxpc3QsIHRvU2hhcGVMaXN0Wywgb3B0aW9uc10pCgpMaWtlIGBzZXBhcmF0
ZSgpYCBvciBgY29tYmluZSgpYCBidXQgaW5zdGVhZCBleHBlY3RzIHR3byBh
cnJheXMgb2Ygc2hhcGVzIHRoZSBzYW1lIGxlbmd0aCAoZS5nLiBhbiBhcnJh
eSBvZiB0aHJlZSB0cmlhbmdsZXMgdHVybmluZyBpbnRvIGFuIGFycmF5IG9m
IHRocmVlIHNxdWFyZXMpLiBUaGUgc2hhcGVzIHdpbGwgYmUgbWF0Y2hlZCB1
cCBpbiB0aGUgb3JkZXIgb2YgdGhlIGFycmF5cyAodGhlIGZpcnN0IGBmcm9t
U2hhcGVMaXN0YCBpdGVtIHdpbGwgdHVybiBpbnRvIHRoZSBmaXJzdCBgdG9T
aGFwZUxpc3RgIGl0ZW0sIGFuZCBzbyBvbikuCgpbLmludGVycG9sYXRlQWxs
KCkgaW4gYWN0aW9uXShodHRwczovL3ZlbHRtYW4uZ2l0aHViLmlvL2ZsdWJi
ZXIvZGVtb3MvYWxsLWRpc3RpbmN0Lmh0bWwpCgpbLmludGVycG9sYXRlQWxs
KHsgc2luZ2xlOiB0cnVlIH0pIGluIGFjdGlvbl0oaHR0cHM6Ly92ZWx0bWFu
LmdpdGh1Yi5pby9mbHViYmVyL2RlbW9zL2FsbC5odG1sKQoKIyMjIyBmbHVi
YmVyLnRvUGF0aFN0cmluZyhyaW5nKQoKQSBoZWxwZXIgZnVuY3Rpb24gZm9y
IGNvbnZlcnRpbmcgYW4gYXJyYXkgb2YgcG9pbnRzIHRvIGFuIFNWRyBwYXRo
IHN0cmluZy4KCmBgYGpzCmZsdWJiZXIudG9QYXRoU3RyaW5nKFtbMSwgMV0s
IFsyLCAxXSwgWzEuNSwgMl1dKTsKLy8gUmV0dXJucyAiTTEsMUwyLDFMMS41
LDJaIgpgYGAKCiMjIyMgZmx1YmJlci5zcGxpdFBhdGhTdHJpbmcocGF0aFN0
cmluZykKCkEgaGVscGVyIGZ1bmN0aW9uIGZvciBzcGxpdHRpbmcgYW4gU1ZH
IHBhdGggc3RyaW5nIHRoYXQgbWlnaHQgY29udGFpbiBtdWx0aXBsZSBzaGFw
ZXMgaW50byBhbiBhcnJheSBvZiBvbmUtc2hhcGUgcGF0aCBzdHJpbmdzLgoK
YGBganMKZmx1YmJlci5zcGxpdFBhdGhTdHJpbmcoIk0xLDEgTDIsMSBMMS41
LDJaIE0zLDMgTDQsMyBMMy41LDQgWiIpOwovLyBSZXR1cm5zIFsiTTEsMSBM
MiwxIEwxLjUsMloiLCAiTTMsMyBMNCwzIEwzLjUsNCBaIl0KYGBgCgojIyMg
RXhhbXBsZXMKCipOb3RlOiBtb3N0IG9mIHRoZXNlIGRlbW9zIHVzZSBEMyB0
byBrZWVwIHRoZSBjb2RlIGNvbmNpc2UsIGJ1dCB0aGlzIGNhbiBiZSB1c2Vk
IHdpdGggYW55IGxpYnJhcnksIG9yIHdpdGggbm8gbGlicmFyeSBhdCBhbGwu
KgoKW01vcnBoaW5nIFNWRyBwYXRoc10oaHR0cHM6Ly92ZWx0bWFuLmdpdGh1
Yi5pby9mbHViYmVyL2RlbW9zL2Jhc2ljLXN2Zy5odG1sKQoKW01vcnBoaW5n
IEdlb0pTT04gY29vcmRpbmF0ZXNdKGh0dHBzOi8vdmVsdG1hbi5naXRodWIu
aW8vZmx1YmJlci9kZW1vcy9iYXNpYy1hcnJheS5odG1sKQoKW01vcnBoaW5n
IHRvIGFuZCBmcm9tIGNpcmNsZXNdKGh0dHBzOi8vdmVsdG1hbi5naXRodWIu
aW8vZmx1YmJlci9kZW1vcy9jaXJjbGVzLmh0bWwpCgpbTW9ycGhpbmcgdG8g
YW5kIGZyb20gcmVjdGFuZ2xlc10oaHR0cHM6Ly92ZWx0bWFuLmdpdGh1Yi5p
by9mbHViYmVyL2RlbW9zL3JlY3RzLmh0bWwpCgpbTW9ycGhpbmcgYmV0d2Vl
biBvbmUgc2hhcGUgYW5kIG11bHRpcGxlIHNoYXBlc10oaHR0cHM6Ly92ZWx0
bWFuLmdpdGh1Yi5pby9mbHViYmVyL2RlbW9zL211bHRpcGxlLmh0bWwpIChv
bmUgZWxlbWVudCkKCltNb3JwaGluZyBiZXR3ZWVuIG9uZSBzaGFwZSBhbmQg
bXVsdGlwbGUgc2hhcGVzXShodHRwczovL3ZlbHRtYW4uZ2l0aHViLmlvL2Zs
dWJiZXIvZGVtb3MvbXVsdGlwbGUtZGlzdGluY3QuaHRtbCkgKG11bHRpcGxl
IGVsZW1lbnRzKQoKW01vcnBoaW5nIGJldHdlZW4gdHdvIHNldHMgb2YgbXVs
dGlwbGUgc2hhcGVzXShodHRwczovL3ZlbHRtYW4uZ2l0aHViLmlvL2ZsdWJi
ZXIvZGVtb3MvYWxsLmh0bWwpCgpbVmFuaWxsYSBKUyArIENhbnZhc10oaHR0
cHM6Ly92ZWx0bWFuLmdpdGh1Yi5pby9mbHViYmVyL2RlbW9zL3ZhbmlsbGEt
Y2FudmFzLmh0bWwpCgpbTWVkbGV5IG9mIGRpZmZlcmVudCBtZXRob2RzXSho
dHRwczovL3ZlbHRtYW4uZ2l0aHViLmlvL2ZsdWJiZXIvZGVtb3MvbWVkbGV5
Lmh0bWwpCgojIyMgVG8gZG8KCiogTWFpbnRhaW4gb3JpZ2luYWwgdmVydGlj
ZXMgd2hlbiBwb2x5Z29uaXppbmcgYSBwYXRoIHN0cmluZyB3aXRoIGN1cnZl
cwoqIEFkZCBgZm9yY2U6IHRydWVgIG9wdGlvbiB0byBjb2xsYXBzZSBzbWFs
bCBhZGRpdGlvbmFsIHBvbHlnb25zIG9udG8gdGhlIHBlcmltZXRlciBvZiB0
aGUgbGFyZ2VzdAoqIFN1cHBvcnQgdW5jbG9zZWQgbGluZXMKKiBVc2UgY3Vy
dmVzIGJldHdlZW4gcG9pbnRzIGZvciBgZnJvbUNpcmNsZSgpYCBhbmQgYHRv
Q2lyY2xlKClgCiogRGVhbCB3aXRoIGhvbGVzPwoqIEFjY2VwdCBTVkcgZWxl
bWVudHMgYXMgYXJndW1lbnRzIGluc3RlYWQgb2YganVzdCBwYXRoIHN0cmlu
Z3M/CiogQWRkIHByZS1zaW1wbGlmaWNhdGlvbiBhcyBhbiBvcHRpb24KKiBT
aW11bGF0ZWQgYW5uZWFsaW5nIG9yIHJhbmRvbSBzd2FwcGluZyBmb3IgbXVs
dGlzaGFwZSBtYXRjaGluZz8KCiMjIyBWaWRlbwoKW09wZW5WaXNDb25mIDIw
MTcgdGFsayBhYm91dCBzaGFwZSBpbnRlcnBvbGF0aW9uXShodHRwczovL3d3
dy55b3V0dWJlLmNvbS93YXRjaD92PVBMYzF5LWdpbV8wKQoKIyMjIEFsdGVy
bmF0aXZlcwoKW3JlYWN0LXN2Zy1tb3JwaF0oaHR0cHM6Ly9naXRodWIuY29t
L2dvcmFuZ2FqaWMvcmVhY3Qtc3ZnLW1vcnBoKSAtIHV0aWxpdHkgZm9yIG1v
cnBoaW5nIGJldHdlZW4gdHdvIFNWR3MgaW4gUmVhY3QKCltHcmVlblNvY2sg
TW9ycGhTVkcgcGx1Z2luXShodHRwczovL2dyZWVuc29jay5jb20vbW9ycGhT
VkcpIC0gR1NBUCBzaGFwZSBtb3JwaGluZyB1dGlsaXR5IChjb3N0cyBtb25l
eSwgbm90IG9wZW4gc291cmNlKQoKW2QzLmdlbzJyZWN0XShodHRwczovL2dp
dGh1Yi5jb20vc2ViYXN0aWFuLW1laWVyL2QzLmdlbzJyZWN0KSAtIGEgcGx1
Z2luIGZvciBtb3JwaGluZyBiZXR3ZWVuIEdlb0pTT04gYW5kIGEgcmVjdGFu
Z3VsYXIgU1ZHIGdyaWQKCltkMy1pbnRlcnBvbGF0ZS1wYXRoXShodHRwczov
L2dpdGh1Yi5jb20vcGJlc2hhaS9kMy1pbnRlcnBvbGF0ZS1wYXRoKSAtIGEg
RDMgaW50ZXJwb2xhdG9yIHRvIGludGVycG9sYXRlIGJldHdlZW4gdHdvIHVu
Y2xvc2VkIGxpbmVzLCBmb3IgdGhpbmdzIGxpa2UgbGluZSBjaGFydCB0cmFu
c2l0aW9ucyB3aXRoIG1pc21hdGNoZWQgZGF0YQoKW1dpbGRlcm5lc3NdKGh0
dHBzOi8vZ2l0aHViLmNvbS9jb2xpbm1laW5rZS93aWxkZXJuZXNzKSAtIGFu
IFNWRyBtYW5pcHVsYXRpb24gYW5kIGFuaW1hdGlvbiBsaWJyYXJ5CgpbQ2ly
cXVlXShodHRwczovL2dpdGh1Yi5jb20vdHdvLW4vY2lycXVlKSAtIEpTIHV0
aWxpdHkgZm9yIG1vcnBoaW5nIGJldHdlZW4gY2lyY2xlcyBhbmQgcG9seWdv
bnMKCiMjIyBDcmVkaXRzCgpNYW55IHRoYW5rcyB0bzoKCiogTWlrZSBCb3N0
b2NrIGZvciBbRDNdKGh0dHBzOi8vZDNqcy5vcmcvKSBhbmQgW1RvcG9KU09O
XShodHRwczovL2dpdGh1Yi5jb20vdG9wb2pzb24vdG9wb2pzb24pCiogVmxh
ZGltaXIgQWdhZm9ua2luIGFuZCBNYXBib3ggZm9yIFtlYXJjdXRdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9tYXBib3gvZWFyY3V0KQoqIFJvZ2VyIFZlY2lhbmEg
Um92aXJhIGZvciBbc3ZnLXBhdGgtcHJvcGVydGllc10oaHR0cHM6Ly9naXRo
dWIuY29tL3J2ZWNpYW5hL3N2Zy1wYXRoLXByb3BlcnRpZXMpCiogRm9udGVs
bG8gZm9yIFtzdmdwYXRoXShodHRwczovL2dpdGh1Yi5jb20vZm9udGVsbG8v
c3ZncGF0aCkKKiBSaWNoIEhhcnJpcyBmb3IgW1JvbGx1cF0oaHR0cHM6Ly9n
aXRodWIuY29tL3JvbGx1cC9yb2xsdXApIGFuZCBbQnVibMOpXShodHRwOi8v
YnVibGUuc3VyZ2Uuc2gvKQoKIyMjIExpY2Vuc2UKCk1JVCBMaWNlbnNlCgpD
b3B5cmlnaHQgKGMpIDIwMTcgTm9haCBWZWx0bWFuCgpQZXJtaXNzaW9uIGlz
IGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNv
biBvYnRhaW5pbmcgYSBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29j
aWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlICJTb2Z0d2FyZSIpLCB0
byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBp
bmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNl
LCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBz
dWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJl
LCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUg
aXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dp
bmcgY29uZGl0aW9uczoKClRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFu
ZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGlu
IGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNv
ZnR3YXJlLgoKVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJ
VEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IgSU1QTElF
RCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElF
UyBPRiBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxB
UiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNI
QUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJM
RSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwg
V0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RI
RVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9O
IFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElO
R1MgSU4gVEhFIFNPRlRXQVJFLgo=
",,5089,"bGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczoKICAtICI3IgogIC0gIjYiCiAg
LSAiNSIKICAtICI0Igo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'bootstrap-modal',5971563,"b'Extends the default Bootstrap Modal class. Responsive, stackable, ajax and more.'",b'JavaScript',111,5088,,269,False,b'https://api.github.com/repos/jschr/bootstrap-modal/forks',"KipOb3RlKio6IFNpbmNlIHRoaXMgcGx1Z2luIHdhcyBjcmVhdGVkIHRvIHNv
bHZlIGEgbG90IG9mIHRoZSBpc3N1ZXMgd2l0aCBCUzIsIGl0IHN0aWxsIHVz
ZXMgdGhlIEJTMiBtYXJrdXAgc3ludGF4LiBDdXJyZW50bHkgSSBiZWxpZXZl
IHRoZSBkZWZhdWx0IEJTMyBtb2RhbCBhZGRyZXNzZXMgc29tZSBvZiB0aGUg
YmlnZ2VyIGlzc3VlcyBhbmQgaXMgbm90IHdvcnRoIG1haW50YWluaW5nIHR3
byB2ZXJzaW9ucyBvZiB0aGlzIHBsdWdpbi4KCgpCb290c3RyYXAgTW9kYWwg
djIuMi42Cj09PT09PT09PT09PT0KClNlZSBsaXZlIGRlbW8gW2hlcmVdKGh0
dHA6Ly9qc2Noci5naXRodWIuY29tL2Jvb3RzdHJhcC1tb2RhbC8pLgoKRXh0
ZW5kcyBCb290c3RyYXAncyBuYXRpdmUgbW9kYWxzIHRvIHByb3ZpZGUgYWRk
aXRpb25hbCBmdW5jdGlvbmFsaXR5LiBJbnRyb2R1Y2VzIGEgKipNb2RhbE1h
bmFnZXIqKiBjbGFzcyB0aGF0IG9wZXJhdGVzIGJlaGluZCB0aGUgc2NlbmVz
IHRvIGhhbmRsZSBtdWx0aXBsZSBtb2RhbHMgYnkgbGlzdGVuaW5nIG9uIHRo
ZWlyIGV2ZW50cy4gCgpBIHNpbmdsZSBNb2RhbE1hbmFnZXIgaXMgY3JlYXRl
ZCBieSBkZWZhdWx0IG9uIGJvZHkgYW5kIGNhbiBiZSBhY2Nlc3NlZCB0aHJv
dWdoIHRoZSBqUXVlcnkgcGx1Z2luIGludGVyZmFjZS4KYGBgamF2YXNjcmlw
dAogICAgJCgnYm9keScpLm1vZGFsbWFuYWdlcignbG9hZGluZycpOwpgYGAK
Qm9vdHN0cmFwLU1vZGFsIGNhbiBiZSB1c2VkIGFzIGEgcmVwbGFjZW1lbnQg
Zm9yIEJvb3RzdHJhcCdzIE1vZGFsIGNsYXNzIG9yIGFzIGEgcGF0Y2ggdG8g
dGhlIGxpYnJhcnkuCgoKQm9vdHN0cmFwIDMKLS0tLS0tLS0tLS0KCklmIHlv
dSdyZSB1c2luZyBCUzMsIEkndmUgcHJvdmlkZWQgYSBjb21wYXRpYmxlIGNz
cyBwYXRjaC4gSW5jbHVkZSBgYm9vdHN0cmFwLW1vZGFsLWJzM3BhdGNoLmNz
c2AgKipiZWZvcmUqKiB0aGUgbWFpbiBgYm9vdHN0cmFwLW1vZGFsLmNzc2Ag
ZmlsZSB0byB1c2UgdGhpcyBwbHVnaW4gd2l0aCBCb290c3RyYXAgMy4KCklm
IHlvdSdyZSB1c2luZyB0aGUgbG9hZGluZyBzcGlubmVyIGZ1bmN0aW9uYWxp
dHkgeW91IG1heSBhbHNvIG5lZWQgdG8gY2hhbmdlIHRoZSBkZWZhdWx0IHRl
bXBsYXRlIHRvIGJlIGNvbXBhdGlibGUgaW4ganM6CmBgYGh0bWwKICAgICQu
Zm4ubW9kYWwuZGVmYXVsdHMuc3Bpbm5lciA9ICQuZm4ubW9kYWxtYW5hZ2Vy
LmRlZmF1bHRzLnNwaW5uZXIgPSAKICAgICAgICAnPGRpdiBjbGFzcz0ibG9h
ZGluZy1zcGlubmVyIiBzdHlsZT0id2lkdGg6IDIwMHB4OyBtYXJnaW4tbGVm
dDogLTEwMHB4OyI+JyArCiAgICAgICAgICAgICc8ZGl2IGNsYXNzPSJwcm9n
cmVzcyBwcm9ncmVzcy1zdHJpcGVkIGFjdGl2ZSI+JyArCiAgICAgICAgICAg
ICAgICAnPGRpdiBjbGFzcz0icHJvZ3Jlc3MtYmFyIiBzdHlsZT0id2lkdGg6
IDEwMCU7Ij48L2Rpdj4nICsKICAgICAgICAgICAgJzwvZGl2PicgKwogICAg
ICAgICc8L2Rpdj4nOwpgYGAKCgpPdmVydmlldwotLS0tLS0tLS0tLQoKKyBC
YWNrd2FyZHMgY29tcGF0aWJsZQorIFJlc3BvbnNpdmUKKyBTdGFja2FibGUK
KyBGdWxsIHdpZHRoCisgTG9hZCBjb250ZW50IHZpYSBBSkFYCisgRGlzYWJs
ZSBiYWNrZ3JvdW5kIHNjcm9sbGluZwoKSW5zdGFsbGF0aW9uIAotLS0tLS0t
LS0tLQorIEluY2x1ZGUgYGNzcy9ib290c3RyYXAtbW9kYWwuY3NzYCBhZnRl
ciB0aGUgbWFpbiBib290c3RyYXAgY3NzIGZpbGVzLgorIEluY2x1ZGUgYGpz
L2Jvb3RzdHJhcC1tb2RhbG1hbmFnZXIuanNgIGFuZCBganMvYm9vdHN0cmFw
LW1vZGFsLmpzYCBhZnRlciB0aGUgbWFpbiBib290c3RyYXAganMgZmlsZXMu
CmBgYGh0bWwKCTxsaW5rIGhyZWY9ImNzcy9ib290c3RyYXAuY3NzIiByZWw9
InN0eWxlc2hlZXQiIC8+Cgk8bGluayBocmVmPSJjc3MvYm9vdHN0cmFwLXJl
c3BvbnNpdmUuY3NzIiByZWw9InN0eWxlc2hlZXQiIC8+CiAJPGxpbmsgaHJl
Zj0iY3NzL2Jvb3RzdHJhcC1tb2RhbC5jc3MiIHJlbD0ic3R5bGVzaGVldCIg
Lz4KCiAJPHNjcmlwdCBzcmM9ImpzL2Jvb3RzdHJhcC5qcyI+PC9zY3JpcHQ+
CiAJPHNjcmlwdCBzcmM9ImpzL2Jvb3RzdHJhcC1tb2RhbG1hbmFnZXIuanMi
Pjwvc2NyaXB0PgogCTxzY3JpcHQgc3JjPSJqcy9ib290c3RyYXAtbW9kYWwu
anMiPjwvc2NyaXB0PgpgYGAKT3B0aW9ucwotLS0tLS0tLS0tLQoKSW4gYWRk
aXRpb24gdG8gdGhlIHN0YW5kYXJkIGJvb3RzdHJhcCBvcHRpb25zLCB5b3Ug
bm93IGhhdmUgYWNjZXNzIHRvIHRoZSBmb2xsb3dpbmcgb3B0aW9ucwoKKipN
b2RhbCoqCgorICoqd2lkdGgqKgpTZXQgdGhlIGluaXRpYWwgd2lkdGggb2Yg
dGhlIG1vZGFsLgoKKyAqKmhlaWdodCoqClNldCB0aGUgaW5pdGlhbCBoZWln
aHQgb2YgdGhlIG1vZGFsLgoKKyAqKm1heEhlaWdodCoqClNldCB0aGUgbWF4
LWhlaWdodCBvZiB0aGUgbW9kYWwtYm9keS4KCisgKipsb2FkaW5nKioKVG9n
Z2xlIHRoZSBsb2FkaW5nIHN0YXRlLgoKKyAqKnNwaW5uZXIqKgpQcm92aWRl
IGEgY3VzdG9tIGltYWdlIG9yIGFuaW1hdGlvbiBmb3IgdGhlIGxvYWRpbmcg
c3Bpbm5lci4KCisgKipiYWNrZHJvcFRlbXBsYXRlKioKUHJvdmlkZSBhIGN1
c3RvbSBtb2RhbCBiYWNrZHJvcC4KCisgKipjb25zdW1lVGFiKioKVXNlZCB0
byBlbmFibGUgdGFiaW5kZXhpbmcgZm9yIG1vZGFscyB3aXRoIGBkYXRhLXRh
YmluZGV4YC4gVGhpcyBpcyBzZXQgdG8gdHJ1ZSBieSBkZWZhdWx0LgoKKyAq
KmZvY3VzT24qKgpUaGUgZWxlbWVudCBvciBzZWxlY3RvciB0byBzZXQgdGhl
IGZvY3VzIHRvIG9uY2UgdGhlIG1vZGFsIGlzIHNob3duLgoKKyAqKnJlcGxh
Y2UqKgpJZiBzZXQgdG8gdHJ1ZSwgdGhlIG1vZGFsIHdpbGwgcmVwbGFjZSB0
aGUgdG9wbW9zdCBtb2RhbCB3aGVuIG9wZW5lZC4KCisgKiphdHRlbnRpb25B
bmltYXRpb24qKgpTZXQgdGhlIGFuaW1hdGlvbiB1c2VkIGJ5IHRoZSBgYXR0
ZW50aW9uYCBtZXRob2QuIEFueSBhbmltYXRpb24gaW4gW2FuaW1hdGUuY3Nz
XShodHRwOi8vZGFuZWRlbi5tZS9hbmltYXRlLykgaXMgc3VwcG9ydGVkIGJ1
dCBvbmx5IHRoZSAqc2hha2UqIGFuaW1hdGlvbiBpcyBpbmNsdWRlZCBieSBk
ZWZhdWx0LgoKKyAqKm1vZGFsT3ZlcmZsb3cqKgpTZXQgdGhpcyBwcm9wZXJ0
eSB0byB0cnVlIGZvciBtb2RhbHMgd2l0aCBoaWdobHkgZHluYW1pYyBjb250
ZW50LiBUaGlzIHdpbGwgZm9yY2UgdGhlIG1vZGFsIHRvIGJlaGF2ZSBhcyBp
ZiBpdCBpcyBsYXJnZXIgdGhhbiB0aGUgdmlld3BvcnQuCgorICoqbWFuYWdl
cioqClNldCB0aGUgbW9kYWwncyBtYW5hZ2VyLiBCeSBkZWZhdWx0IHRoaXMg
aXMgc2V0IHRvIHRoZSBgR2xvYmFsTW9kYWxNYW5hZ2VyYCBhbmQgd2lsbCBt
b3N0IGxpa2VseSBub3QgbmVlZCB0byBiZSBvdmVycmlkZGVuLgoKKipNb2Rh
bE1hbmFnZXIqKgoKKyAqKmxvYWRpbmcqKgpUb2dnbGUgdGhlIGxvYWRpbmcg
c3RhdGUuCgorICoqYmFja2Ryb3BMaW1pdCoqCkxpbWl0IHRoZSBhbW91bnQg
b2YgYmFja2Ryb3BzIHRoYXQgd2lsbCBhcHBlYXIgb24gdGhlIHBhZ2UgYXQg
dGhlIHNhbWUgdGltZS4KCisgKipzcGlubmVyKioKUHJvdmlkZSBhIGN1c3Rv
bSBpbWFnZSBvciBhbmltYXRpb24gZm9yIHRoZSBsb2FkaW5nIHNwaW5uZXIu
CgorICoqYmFja2Ryb3BUZW1wbGF0ZSoqClByb3ZpZGUgYSBjdXN0b20gbW9k
YWxtYW5hZ2VyIGJhY2tkcm9wLiBUaGlzIGJhY2tkcm9wIGlzIHVzZWQgd2hl
biBgJGVsZW1lbnQubW9kYWxtYW5hZ2VyKCdsb2FkaW5nJylgIGlzIGNhbGxl
ZC4KCkdldHRpbmcgYSByZWZlcmVuY2UgdG8gdGhlIG1vZGFsIG1hbmFnZXIK
LS0tLS0tLS0tLS0KCklmIHlvdSBkaWQgbm90IGNyZWF0ZWQgeW91ciBvd24g
TW9kYWxNYW5hZ2VyLCBwZXJoYXBzIHlvdSdsbCBuZWVkIGEgcmVmZXJlbmNl
IHRvIGl0LiBUaGF0IGNhbiBiZSBlYXNpbHkgYWNjb21wbGlzaGVkIHVzaW5n
IHRoZSBmb2xsb3dpbmcgc25pcHBldDoKCmBgYGphdmFzY3JpcHQKCXZhciBt
b2RhbE1hbmFnZXIgPSAkKCJib2R5IikuZGF0YSgibW9kYWxtYW5hZ2VyIik7
Cgl2YXIgb3Blbk1vZGFscyA9IG1vZGFsTWFuYWdlci5nZXRPcGVuTW9kYWxz
KCk7Cgltb2RhbE1hbmFnZXIucmVtb3ZlTG9hZGluZygpOwpgYGAKCkFmdGVy
IHRoYXQsIHlvdSdsbCBiZSBhYmxlIHRvIGNhbGwgYW55IG1ldGhvZHMgdGhh
dCBtb2RhbCBtYW5hZ2VyIGhhcywgc3VjaCBhczoKCiogcmVtb3ZlTG9hZGlu
ZyAocmVtb3ZlIHRoZSBsb2FkaW5nIGFuZCBiYWNrZHJvcCB3aW5kb3cpOwoq
IGdldE9wZW5Nb2RhbHMgKHRvIGdldCB0aGUgbW9kYWxzIHRoYXQgYXJlIGFs
cmVhZHkgb3Blbik7CiogZXRjOwoKCkRpc2FibGUgQmFja2dyb3VuZCBTY3Jv
bGxpbmcKLS0tLS0tLS0tLS0KCklmIHlvdSB3YW50IHRvIHByZXZlbnQgdGhl
IGJhY2tncm91bmQgcGFnZSBmcm9tIHNjcm9sbGluZyAoc2VlIFtkZW1vXSho
dHRwOi8vanNjaHIuZ2l0aHViLmNvbS9ib290c3RyYXAtbW9kYWwvKSBmb3Ig
ZXhhbXBsZSkgeW91IG11c3Qgd3JhcCB0aGUgcGFnZSBjb250ZW50cyBpbiBh
IGA8ZGl2IGNsYXNzPSJwYWdlLWNvbnRhaW5lciI+YC4gRm9yIGV4YW1wbGU6
CmBgYGh0bWwKCTxib2R5PgoJICAgPGRpdiBjbGFzcz0icGFnZS1jb250YWlu
ZXIiPgoJCSAgPGRpdiBjbGFzcz0ibmF2YmFyIG5hdmJhci1maXhlZC10b3Ai
Pi4uLjwvZGl2PgoJCSAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4uLi48L2Rp
dj4KCSAgIDwvZGl2PgoJPC9ib2R5PgpgYGAKClRoZSByZWFzb24gZm9yIGRv
aW5nIHRoaXMgaW5zdGVhZCBvZiBqdXN0IHNpbXBseSBzZXR0aW5nIGBvdmVy
ZmxvdzogaGlkZGVuYCB3aGVuIGEgbW9kYWwgaXMgb3BlbiBpcyB0byBhdm9p
ZCBoYXZpbmcgdGhlIHBhZ2Ugc2hpZnQgYXMgYSByZXN1bHQgb2YgdGhlIHNj
cm9sbGJhciBhcHBlYXJpbmcvZGlzYXBwZWFyaW5nLiBUaGlzIGFsc28gYWxs
b3dzIHRoZSBkb2N1bWVudCB0byBiZSBzY3JvbGxhYmxlIHdoZW4gdGhlcmUg
aXMgYSB0YWxsIG1vZGFsIGJ1dCBvbmx5IHRvIHRoZSBoZWlnaHQgb2YgdGhl
IG1vZGFsLCBub3QgdGhlIGVudGlyZSBwYWdlLgoKQ29uc3RyYWluIE1vZGFs
IHRvIFdpbmRvdyBTaXplCi0tLS0tLS0tLS0tCgkKWW91IGNhbiBiaW5kIHRo
ZSBoZWlnaHQgb2YgdGhlIG1vZGFsIGJvZHkgdG8gdGhlIHdpbmRvdyB3aXRo
IHNvbWV0aGluZyBsaWtlIHRoaXM6CmBgYGphdmFzY3JpcHQKICAgICQuZm4u
bW9kYWwuZGVmYXVsdHMubWF4SGVpZ2h0ID0gZnVuY3Rpb24oKXsKICAgICAg
ICAvLyBzdWJ0cmFjdCB0aGUgaGVpZ2h0IG9mIHRoZSBtb2RhbCBoZWFkZXIg
YW5kIGZvb3RlcgogICAgICAgIHJldHVybiAkKHdpbmRvdykuaGVpZ2h0KCkg
LSAxNjU7IAogICAgfQpgYGAKCQoqKk5vdGU6KiogVGhpcyB3aWxsIGJlIG92
ZXJ3cml0dGVuIGJ5IHRoZSByZXNwb25zaXZlbmVzcyBhbmQgaXMgb25seSBz
ZXQgd2hlbiB0aGUgbW9kYWwgaXMgZGlzcGxheWVkLCBub3Qgd2hlbiB0aGUg
d2luZG93IGlzIHJlc2l6ZWQuCgkKVGFiIEluZGV4IGZvciBNb2RhbCBGb3Jt
cwotLS0tLS0tLS0tLQpZb3UgY2FuIHVzZSBgZGF0YS10YWJpbmRleGAgaW5z
dGVhZCBvZiB0aGUgZGVmYXVsdCBgdGFiaW5kZXhgIHRvIHNwZWNpZnkgdGhl
IHRhYmluZGV4IHdpdGhpbiBhIG1vZGFsLgpgYGBodG1sCiAgICA8aW5wdXQg
dHlwZT0idGV4dCIgZGF0YS10YWJpbmRleD0iMSIgLz4KICAgIDxpbnB1dCB0
eXBlPSJ0ZXh0IiBkYXRhLXRhYmluZGV4PSIyIiAvPgpgYGAKU2VlIHRoZSBz
dGFja2FibGUgZXhhbXBsZSBvbiB0aGUgW2RlbW9dKGh0dHA6Ly9qc2Noci5n
aXRodWIuY29tL2Jvb3RzdHJhcC1tb2RhbC8pIHBhZ2UgZm9yIGFuIGV4YW1w
bGUuCgoKCQoKCgoKClshW0JpdGRlbGkgQmFkZ2VdKGh0dHBzOi8vZDJ3ZWN6
aHZsODIzdjAuY2xvdWRmcm9udC5uZXQvanNjaHIvYm9vdHN0cmFwLW1vZGFs
L3RyZW5kLnBuZyldKGh0dHBzOi8vYml0ZGVsaS5jb20vZnJlZSAiQml0ZGVs
aSBCYWRnZSIpCg==
",,5088,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'nmt',95723115,b'TensorFlow Neural Machine Translation Tutorial',b'Python',243,5088,,240,False,b'https://api.github.com/repos/tensorflow/nmt/forks',"IyBOZXVyYWwgTWFjaGluZSBUcmFuc2xhdGlvbiAoc2VxMnNlcSkgVHV0b3Jp
YWwKCipBdXRob3JzOiBUaGFuZyBMdW9uZywgRXVnZW5lIEJyZXZkbywgUnVp
IFpoYW8gKFtHb29nbGUgUmVzZWFyY2ggQmxvZ3Bvc3RdKGh0dHBzOi8vcmVz
ZWFyY2guZ29vZ2xlYmxvZy5jb20vMjAxNy8wNy9idWlsZGluZy15b3VyLW93
bi1uZXVyYWwtbWFjaGluZS5odG1sKSwgW0dpdGh1Yl0oaHR0cHM6Ly9naXRo
dWIuY29tL3RlbnNvcmZsb3cvbm10KSkqCgoqVGhpcyB2ZXJzaW9uIG9mIHRo
ZSB0dXRvcmlhbCByZXF1aXJlcyBbVGVuc29yRmxvdyBOaWdodGx5XShodHRw
czovL2dpdGh1Yi5jb20vdGVuc29yZmxvdy90ZW5zb3JmbG93LyNpbnN0YWxs
YXRpb24pLgpGb3IgdXNpbmcgdGhlIHN0YWJsZSBUZW5zb3JGbG93IHZlcnNp
b25zLCBwbGVhc2UgY29uc2lkZXIgb3RoZXIgYnJhbmNoZXMgc3VjaCBhcwpb
dGYtMS40XShodHRwczovL2dpdGh1Yi5jb20vdGVuc29yZmxvdy9ubXQvdHJl
ZS90Zi0xLjQpLioKCipJZiBtYWtlIHVzZSBvZiB0aGlzIGNvZGViYXNlIGZv
ciB5b3VyIHJlc2VhcmNoLCBwbGVhc2UgY2l0ZQpbdGhpc10oI2JpYnRleCku
KgoKLSBbSW50cm9kdWN0aW9uXSgjaW50cm9kdWN0aW9uKQotIFtCYXNpY10o
I2Jhc2ljKQogICAtIFtCYWNrZ3JvdW5kIG9uIE5ldXJhbCBNYWNoaW5lIFRy
YW5zbGF0aW9uXSgjYmFja2dyb3VuZC1vbi1uZXVyYWwtbWFjaGluZS10cmFu
c2xhdGlvbikKICAgLSBbSW5zdGFsbGluZyB0aGUgVHV0b3JpYWxdKCNpbnN0
YWxsaW5nLXRoZS10dXRvcmlhbCkKICAgLSBbVHJhaW5pbmcg4oCTICpIb3cg
dG8gYnVpbGQgb3VyIGZpcnN0IE5NVCBzeXN0ZW0qXSgjdHJhaW5pbmctLWhv
dy10by1idWlsZC1vdXItZmlyc3Qtbm10LXN5c3RlbSkKICAgICAgLSBbRW1i
ZWRkaW5nXSgjZW1iZWRkaW5nKQogICAgICAtIFtFbmNvZGVyXSgjZW5jb2Rl
cikKICAgICAgLSBbRGVjb2Rlcl0oI2RlY29kZXIpCiAgICAgIC0gW0xvc3Nd
KCNsb3NzKQogICAgICAtIFtHcmFkaWVudCBjb21wdXRhdGlvbiAmIG9wdGlt
aXphdGlvbl0oI2dyYWRpZW50LWNvbXB1dGF0aW9uLS1vcHRpbWl6YXRpb24p
CiAgIC0gW0hhbmRzLW9uIOKAkyAqTGV0J3MgdHJhaW4gYW4gTk1UIG1vZGVs
Kl0oI2hhbmRzLW9uLS1sZXRzLXRyYWluLWFuLW5tdC1tb2RlbCkKICAgLSBb
SW5mZXJlbmNlIOKAkyAqSG93IHRvIGdlbmVyYXRlIHRyYW5zbGF0aW9ucypd
KCNpbmZlcmVuY2UtLWhvdy10by1nZW5lcmF0ZS10cmFuc2xhdGlvbnMpCi0g
W0ludGVybWVkaWF0ZV0oI2ludGVybWVkaWF0ZSkKICAgLSBbQmFja2dyb3Vu
ZCBvbiB0aGUgQXR0ZW50aW9uIE1lY2hhbmlzbV0oI2JhY2tncm91bmQtb24t
dGhlLWF0dGVudGlvbi1tZWNoYW5pc20pCiAgIC0gW0F0dGVudGlvbiBXcmFw
cGVyIEFQSV0oI2F0dGVudGlvbi13cmFwcGVyLWFwaSkKICAgLSBbSGFuZHMt
b24g4oCTICpCdWlsZGluZyBhbiBhdHRlbnRpb24tYmFzZWQgTk1UIG1vZGVs
Kl0oI2hhbmRzLW9uLS1idWlsZGluZy1hbi1hdHRlbnRpb24tYmFzZWQtbm10
LW1vZGVsKQotIFtUaXBzICYgVHJpY2tzXSgjdGlwcy0tdHJpY2tzKQogICAt
IFtCdWlsZGluZyBUcmFpbmluZywgRXZhbCwgYW5kIEluZmVyZW5jZSBHcmFw
aHNdKCNidWlsZGluZy10cmFpbmluZy1ldmFsLWFuZC1pbmZlcmVuY2UtZ3Jh
cGhzKQogICAtIFtEYXRhIElucHV0IFBpcGVsaW5lXSgjZGF0YS1pbnB1dC1w
aXBlbGluZSkKICAgLSBbT3RoZXIgZGV0YWlscyBmb3IgYmV0dGVyIE5NVCBt
b2RlbHNdKCNvdGhlci1kZXRhaWxzLWZvci1iZXR0ZXItbm10LW1vZGVscykK
ICAgICAgLSBbQmlkaXJlY3Rpb25hbCBSTk5zXSgjYmlkaXJlY3Rpb25hbC1y
bm5zKQogICAgICAtIFtCZWFtIHNlYXJjaF0oI2JlYW0tc2VhcmNoKQogICAg
ICAtIFtIeXBlcnBhcmFtZXRlcnNdKCNoeXBlcnBhcmFtZXRlcnMpCiAgICAg
IC0gW011bHRpLUdQVSB0cmFpbmluZ10oI211bHRpLWdwdS10cmFpbmluZykK
LSBbQmVuY2htYXJrc10oI2JlbmNobWFya3MpCiAgIC0gW0lXU0xUIEVuZ2xp
c2gtVmlldG5hbWVzZV0oI2l3c2x0LWVuZ2xpc2gtdmlldG5hbWVzZSkKICAg
LSBbV01UIEdlcm1hbi1FbmdsaXNoXSgjd210LWdlcm1hbi1lbmdsaXNoKQog
ICAtIFtXTVQgRW5nbGlzaC1HZXJtYW4gJm1kYXNoOyAqRnVsbCBDb21wYXJp
c29uKl0oI3dtdC1lbmdsaXNoLWdlcm1hbi0tZnVsbC1jb21wYXJpc29uKQog
ICAtIFtTdGFuZGFyZCBIUGFyYW1zXSgjc3RhbmRhcmQtaHBhcmFtcykKLSBb
T3RoZXIgcmVzb3VyY2VzXSgjb3RoZXItcmVzb3VyY2VzKQotIFtBY2tub3ds
ZWRnbWVudF0oI2Fja25vd2xlZGdtZW50KQotIFtSZWZlcmVuY2VzXSgjcmVm
ZXJlbmNlcykKLSBbQmliVGV4XSgjYmlidGV4KQoKCiMgSW50cm9kdWN0aW9u
CgpTZXF1ZW5jZS10by1zZXF1ZW5jZSAoc2VxMnNlcSkgbW9kZWxzCihbU3V0
c2tldmVyIGV0IGFsLiwgMjAxNF0oaHR0cHM6Ly9wYXBlcnMubmlwcy5jYy9w
YXBlci81MzQ2LXNlcXVlbmNlLXRvLXNlcXVlbmNlLWxlYXJuaW5nLXdpdGgt
bmV1cmFsLW5ldHdvcmtzLnBkZiksCltDaG8gZXQgYWwuLCAyMDE0XShodHRw
Oi8vZW1ubHAyMDE0Lm9yZy9wYXBlcnMvcGRmL0VNTkxQMjAxNDE3OS5wZGYp
KSBoYXZlCmVuam95ZWQgZ3JlYXQgc3VjY2VzcyBpbiBhIHZhcmlldHkgb2Yg
dGFza3Mgc3VjaCBhcyBtYWNoaW5lIHRyYW5zbGF0aW9uLCBzcGVlY2gKcmVj
b2duaXRpb24sIGFuZCB0ZXh0IHN1bW1hcml6YXRpb24uIFRoaXMgdHV0b3Jp
YWwgZ2l2ZXMgcmVhZGVycyBhIGZ1bGwKdW5kZXJzdGFuZGluZyBvZiBzZXEy
c2VxIG1vZGVscyBhbmQgc2hvd3MgaG93IHRvIGJ1aWxkIGEgY29tcGV0aXRp
dmUgc2VxMnNlcQptb2RlbCBmcm9tIHNjcmF0Y2guIFdlIGZvY3VzIG9uIHRo
ZSB0YXNrIG9mIE5ldXJhbCBNYWNoaW5lIFRyYW5zbGF0aW9uIChOTVQpCndo
aWNoIHdhcyB0aGUgdmVyeSBmaXJzdCB0ZXN0YmVkIGZvciBzZXEyc2VxIG1v
ZGVscyB3aXRoCndpbGQKW3N1Y2Nlc3NdKGh0dHBzOi8vcmVzZWFyY2guZ29v
Z2xlYmxvZy5jb20vMjAxNi8wOS9hLW5ldXJhbC1uZXR3b3JrLWZvci1tYWNo
aW5lLmh0bWwpLiBUaGUKaW5jbHVkZWQgY29kZSBpcyBsaWdodHdlaWdodCwg
aGlnaC1xdWFsaXR5LCBwcm9kdWN0aW9uLXJlYWR5LCBhbmQgaW5jb3Jwb3Jh
dGVkCndpdGggdGhlIGxhdGVzdCByZXNlYXJjaCBpZGVhcy4gV2UgYWNoaWV2
ZSB0aGlzIGdvYWwgYnk6CgoxLiBVc2luZyB0aGUgcmVjZW50IGRlY29kZXIg
LyBhdHRlbnRpb24KICAgd3JhcHBlcgogICBbQVBJXShodHRwczovL2dpdGh1
Yi5jb20vdGVuc29yZmxvdy90ZW5zb3JmbG93L3RyZWUvbWFzdGVyL3RlbnNv
cmZsb3cvY29udHJpYi9zZXEyc2VxL3B5dGhvbi9vcHMpLAogICBUZW5zb3JG
bG93IDEuMiBkYXRhIGl0ZXJhdG9yCjEuIEluY29ycG9yYXRpbmcgb3VyIHN0
cm9uZyBleHBlcnRpc2UgaW4gYnVpbGRpbmcgcmVjdXJyZW50IGFuZCBzZXEy
c2VxIG1vZGVscwoxLiBQcm92aWRpbmcgdGlwcyBhbmQgdHJpY2tzIGZvciBi
dWlsZGluZyB0aGUgdmVyeSBiZXN0IE5NVCBtb2RlbHMgYW5kIHJlcGxpY2F0
aW5nCiAgIFtHb29nbGXigJlzIE5NVCAoR05NVCkgc3lzdGVtXShodHRwczov
L3Jlc2VhcmNoLmdvb2dsZS5jb20vcHVicy9wdWI0NTYxMC5odG1sKS4KCldl
IGJlbGlldmUgdGhhdCBpdCBpcyBpbXBvcnRhbnQgdG8gcHJvdmlkZSBiZW5j
aG1hcmtzIHRoYXQgcGVvcGxlIGNhbiBlYXNpbHkKcmVwbGljYXRlLiBBcyBh
IHJlc3VsdCwgd2UgaGF2ZSBwcm92aWRlZCBmdWxsIGV4cGVyaW1lbnRhbCBy
ZXN1bHRzIGFuZApwcmV0cmFpbmVkIG91ciBtb2RlbHMgb24gdGhlIGZvbGxv
d2luZyBwdWJsaWNseSBhdmFpbGFibGUgZGF0YXNldHM6CgoxLiAqU21hbGwt
c2NhbGUqOiBFbmdsaXNoLVZpZXRuYW1lc2UgcGFyYWxsZWwgY29ycHVzIG9m
IFRFRCB0YWxrcyAoMTMzSyBzZW50ZW5jZQogICBwYWlycykgcHJvdmlkZWQg
YnkKICAgdGhlCiAgIFtJV1NMVCBFdmFsdWF0aW9uIENhbXBhaWduXShodHRw
czovL3NpdGVzLmdvb2dsZS5jb20vc2l0ZS9pd3NsdGV2YWx1YXRpb24yMDE1
LykuCjEuICpMYXJnZS1zY2FsZSo6IEdlcm1hbi1FbmdsaXNoIHBhcmFsbGVs
IGNvcnB1cyAoNC41TSBzZW50ZW5jZSBwYWlycykgcHJvdmlkZWQKICAgYnkg
dGhlIFtXTVQgRXZhbHVhdGlvbiBDYW1wYWlnbl0oaHR0cDovL3d3dy5zdGF0
bXQub3JnL3dtdDE2L3RyYW5zbGF0aW9uLXRhc2suaHRtbCkuCgpXZSBmaXJz
dCBidWlsZCB1cCBzb21lIGJhc2ljIGtub3dsZWRnZSBhYm91dCBzZXEyc2Vx
IG1vZGVscyBmb3IgTk1ULCBleHBsYWluaW5nCmhvdyB0byBidWlsZCBhbmQg
dHJhaW4gYSB2YW5pbGxhIE5NVCBtb2RlbC4gVGhlIHNlY29uZCBwYXJ0IHdp
bGwgZ28gaW50byBkZXRhaWxzCm9mIGJ1aWxkaW5nIGEgY29tcGV0aXRpdmUg
Tk1UIG1vZGVsIHdpdGggYXR0ZW50aW9uIG1lY2hhbmlzbS4gV2UgdGhlbiBk
aXNjdXNzCnRpcHMgYW5kIHRyaWNrcyB0byBidWlsZCB0aGUgYmVzdCBwb3Nz
aWJsZSBOTVQgbW9kZWxzIChib3RoIGluIHNwZWVkIGFuZAp0cmFuc2xhdGlv
biBxdWFsaXR5KSBzdWNoIGFzIFRlbnNvckZsb3cgYmVzdCBwcmFjdGljZXMg
KGJhdGNoaW5nLCBidWNrZXRpbmcpLApiaWRpcmVjdGlvbmFsIFJOTnMsIGJl
YW0gc2VhcmNoLCBhcyB3ZWxsIGFzIHNjYWxpbmcgdXAgdG8gbXVsdGlwbGUg
R1BVcyB1c2luZyBHTk1UIGF0dGVudGlvbi4KCiMgQmFzaWMKCiMjIEJhY2tn
cm91bmQgb24gTmV1cmFsIE1hY2hpbmUgVHJhbnNsYXRpb24KCkJhY2sgaW4g
dGhlIG9sZCBkYXlzLCB0cmFkaXRpb25hbCBwaHJhc2UtYmFzZWQgdHJhbnNs
YXRpb24gc3lzdGVtcyBwZXJmb3JtZWQKdGhlaXIgdGFzayBieSBicmVha2lu
ZyB1cCBzb3VyY2Ugc2VudGVuY2VzIGludG8gbXVsdGlwbGUgY2h1bmtzIGFu
ZCB0aGVuCnRyYW5zbGF0ZWQgdGhlbSBwaHJhc2UtYnktcGhyYXNlLiBUaGlz
IGxlZCB0byBkaXNmbHVlbmN5IGluIHRoZSB0cmFuc2xhdGlvbgpvdXRwdXRz
IGFuZCB3YXMgbm90IHF1aXRlIGxpa2UgaG93IHdlLCBodW1hbnMsIHRyYW5z
bGF0ZS4gV2UgcmVhZCB0aGUgZW50aXJlCnNvdXJjZSBzZW50ZW5jZSwgdW5k
ZXJzdGFuZCBpdHMgbWVhbmluZywgYW5kIHRoZW4gcHJvZHVjZSBhIHRyYW5z
bGF0aW9uLiBOZXVyYWwKTWFjaGluZSBUcmFuc2xhdGlvbiAoTk1UKSBtaW1p
Y3MgdGhhdCEKCjxwIGFsaWduPSJjZW50ZXIiPgo8aW1nIHdpZHRoPSI4MCUi
IHNyYz0ibm10L2czZG9jL2ltZy9lbmNkZWMuanBnIiAvPgo8YnI+CkZpZ3Vy
ZSAxLiA8Yj5FbmNvZGVyLWRlY29kZXIgYXJjaGl0ZWN0dXJlPC9iPiDigJMg
ZXhhbXBsZSBvZiBhIGdlbmVyYWwgYXBwcm9hY2ggZm9yCk5NVC4gQW4gZW5j
b2RlciBjb252ZXJ0cyBhIHNvdXJjZSBzZW50ZW5jZSBpbnRvIGEgIm1lYW5p
bmciIHZlY3RvciB3aGljaCBpcwpwYXNzZWQgdGhyb3VnaCBhIDxpPmRlY29k
ZXI8L2k+IHRvIHByb2R1Y2UgYSB0cmFuc2xhdGlvbi4KPC9wPgoKU3BlY2lm
aWNhbGx5LCBhbiBOTVQgc3lzdGVtIGZpcnN0IHJlYWRzIHRoZSBzb3VyY2Ug
c2VudGVuY2UgdXNpbmcgYW4gKmVuY29kZXIqCnRvIGJ1aWxkCmEKWyJ0aG91
Z2h0IiB2ZWN0b3JdKGh0dHBzOi8vd3d3LnRoZWd1YXJkaWFuLmNvbS9zY2ll
bmNlLzIwMTUvbWF5LzIxL2dvb2dsZS1hLXN0ZXAtY2xvc2VyLXRvLWRldmVs
b3BpbmctbWFjaGluZXMtd2l0aC1odW1hbi1saWtlLWludGVsbGlnZW5jZSks
CmEgc2VxdWVuY2Ugb2YgbnVtYmVycyB0aGF0IHJlcHJlc2VudHMgdGhlIHNl
bnRlbmNlIG1lYW5pbmc7IGEgKmRlY29kZXIqLCB0aGVuLApwcm9jZXNzZXMg
dGhlIHNlbnRlbmNlIHZlY3RvciB0byBlbWl0IGEgdHJhbnNsYXRpb24sIGFz
IGlsbHVzdHJhdGVkIGluCkZpZ3VyZSAxLiBUaGlzIGlzIG9mdGVuIHJlZmVy
cmVkIHRvIGFzIHRoZSAqZW5jb2Rlci1kZWNvZGVyIGFyY2hpdGVjdHVyZSou
IEluCnRoaXMgbWFubmVyLCBOTVQgYWRkcmVzc2VzIHRoZSBsb2NhbCB0cmFu
c2xhdGlvbiBwcm9ibGVtIGluIHRoZSB0cmFkaXRpb25hbApwaHJhc2UtYmFz
ZWQgYXBwcm9hY2g6IGl0IGNhbiBjYXB0dXJlICpsb25nLXJhbmdlIGRlcGVu
ZGVuY2llcyogaW4gbGFuZ3VhZ2VzLAplLmcuLCBnZW5kZXIgYWdyZWVtZW50
czsgc3ludGF4IHN0cnVjdHVyZXM7IGV0Yy4sIGFuZCBwcm9kdWNlIG11Y2gg
bW9yZSBmbHVlbnQKdHJhbnNsYXRpb25zIGFzIGRlbW9uc3RyYXRlZApieQpb
R29vZ2xlIE5ldXJhbCBNYWNoaW5lIFRyYW5zbGF0aW9uIHN5c3RlbXNdKGh0
dHBzOi8vcmVzZWFyY2guZ29vZ2xlYmxvZy5jb20vMjAxNi8wOS9hLW5ldXJh
bC1uZXR3b3JrLWZvci1tYWNoaW5lLmh0bWwpLgoKTk1UIG1vZGVscyB2YXJ5
IGluIHRlcm1zIG9mIHRoZWlyIGV4YWN0IGFyY2hpdGVjdHVyZXMuIEEgbmF0
dXJhbCBjaG9pY2UgZm9yCnNlcXVlbnRpYWwgZGF0YSBpcyB0aGUgcmVjdXJy
ZW50IG5ldXJhbCBuZXR3b3JrIChSTk4pLCB1c2VkIGJ5IG1vc3QgTk1UIG1v
ZGVscy4KVXN1YWxseSBhbiBSTk4gaXMgdXNlZCBmb3IgYm90aCB0aGUgZW5j
b2RlciBhbmQgZGVjb2Rlci4gVGhlIFJOTiBtb2RlbHMsCmhvd2V2ZXIsIGRp
ZmZlciBpbiB0ZXJtcyBvZjogKGEpICpkaXJlY3Rpb25hbGl0eSog4oCTIHVu
aWRpcmVjdGlvbmFsIG9yCmJpZGlyZWN0aW9uYWw7IChiKSAqZGVwdGgqIOKA
kyBzaW5nbGUtIG9yIG11bHRpLWxheWVyOyBhbmQgKGMpICp0eXBlKiDigJMg
b2Z0ZW4KZWl0aGVyIGEgdmFuaWxsYSBSTk4sIGEgTG9uZyBTaG9ydC10ZXJt
IE1lbW9yeSAoTFNUTSksIG9yIGEgZ2F0ZWQgcmVjdXJyZW50IHVuaXQKKEdS
VSkuIEludGVyZXN0ZWQgcmVhZGVycyBjYW4gZmluZCBtb3JlIGluZm9ybWF0
aW9uIGFib3V0IFJOTnMgYW5kIExTVE0gb24KdGhpcyBbYmxvZyBwb3N0XSho
dHRwOi8vY29sYWguZ2l0aHViLmlvL3Bvc3RzLzIwMTUtMDgtVW5kZXJzdGFu
ZGluZy1MU1RNcy8pLgoKSW4gdGhpcyB0dXRvcmlhbCwgd2UgY29uc2lkZXIg
YXMgZXhhbXBsZXMgYSAqZGVlcCBtdWx0aS1sYXllciBSTk4qIHdoaWNoIGlz
CnVuaWRpcmVjdGlvbmFsIGFuZCB1c2VzIExTVE0gYXMgYSByZWN1cnJlbnQg
dW5pdC4gV2Ugc2hvdyBhbiBleGFtcGxlIG9mIHN1Y2ggYQptb2RlbCBpbiBG
aWd1cmUgMi4gSW4gdGhpcyBleGFtcGxlLCB3ZSBidWlsZCBhIG1vZGVsIHRv
IHRyYW5zbGF0ZSBhIHNvdXJjZQpzZW50ZW5jZSAiSSBhbSBhIHN0dWRlbnQi
IGludG8gYSB0YXJnZXQgc2VudGVuY2UgIkplIHN1aXMgw6l0dWRpYW50Ii4g
QXQgYSBoaWdoCmxldmVsLCB0aGUgTk1UIG1vZGVsIGNvbnNpc3RzIG9mIHR3
byByZWN1cnJlbnQgbmV1cmFsIG5ldHdvcmtzOiB0aGUgKmVuY29kZXIqClJO
TiBzaW1wbHkgY29uc3VtZXMgdGhlIGlucHV0IHNvdXJjZSB3b3JkcyB3aXRo
b3V0IG1ha2luZyBhbnkgcHJlZGljdGlvbjsgdGhlCipkZWNvZGVyKiwgb24g
dGhlIG90aGVyIGhhbmQsIHByb2Nlc3NlcyB0aGUgdGFyZ2V0IHNlbnRlbmNl
IHdoaWxlIHByZWRpY3RpbmcgdGhlCm5leHQgd29yZHMuCgpGb3IgbW9yZSBp
bmZvcm1hdGlvbiwgd2UgcmVmZXIgcmVhZGVycwp0byBbTHVvbmcgKDIwMTYp
XShodHRwczovL2dpdGh1Yi5jb20vbG10aGFuZy90aGVzaXMpIHdoaWNoIHRo
aXMgdHV0b3JpYWwgaXMKYmFzZWQgb24uCgo8cCBhbGlnbj0iY2VudGVyIj4K
PGltZyB3aWR0aD0iNDglIiBzcmM9Im5tdC9nM2RvYy9pbWcvc2VxMnNlcS5q
cGciIC8+Cjxicj4KRmlndXJlIDIuIDxiPk5ldXJhbCBtYWNoaW5lIHRyYW5z
bGF0aW9uPC9iPiDigJMgZXhhbXBsZSBvZiBhIGRlZXAgcmVjdXJyZW50CmFy
Y2hpdGVjdHVyZSBwcm9wb3NlZCBieSBmb3IgdHJhbnNsYXRpbmcgYSBzb3Vy
Y2Ugc2VudGVuY2UgIkkgYW0gYSBzdHVkZW50IiBpbnRvCmEgdGFyZ2V0IHNl
bnRlbmNlICJKZSBzdWlzIMOpdHVkaWFudCIuIEhlcmUsICImbHRzJmd0IiBt
YXJrcyB0aGUgc3RhcnQgb2YgdGhlCmRlY29kaW5nIHByb2Nlc3Mgd2hpbGUg
IiZsdC9zJmd0IiB0ZWxscyB0aGUgZGVjb2RlciB0byBzdG9wLgo8L3A+Cgoj
IyBJbnN0YWxsaW5nIHRoZSBUdXRvcmlhbAoKVG8gaW5zdGFsbCB0aGlzIHR1
dG9yaWFsLCB5b3UgbmVlZCB0byBoYXZlIFRlbnNvckZsb3cgaW5zdGFsbGVk
IG9uIHlvdXIgc3lzdGVtLgpUaGlzIHR1dG9yaWFsIHJlcXVpcmVzIFRlbnNv
ckZsb3cgTmlnaHRseS4gVG8gaW5zdGFsbCBUZW5zb3JGbG93LCBmb2xsb3cK
dGhlIFtpbnN0YWxsYXRpb24gaW5zdHJ1Y3Rpb25zIGhlcmVdKGh0dHBzOi8v
d3d3LnRlbnNvcmZsb3cub3JnL2luc3RhbGwvKS4KCk9uY2UgVGVuc29yRmxv
dyBpcyBpbnN0YWxsZWQsIHlvdSBjYW4gZG93bmxvYWQgdGhlIHNvdXJjZSBj
b2RlIG9mIHRoaXMgdHV0b3JpYWwKYnkgcnVubmluZzoKCmBgYCBzaGVsbApn
aXQgY2xvbmUgaHR0cHM6Ly9naXRodWIuY29tL3RlbnNvcmZsb3cvbm10Lwpg
YGAKCiMjIFRyYWluaW5nIOKAkyBIb3cgdG8gYnVpbGQgb3VyIGZpcnN0IE5N
VCBzeXN0ZW0KCkxldCdzIGZpcnN0IGRpdmUgaW50byB0aGUgaGVhcnQgb2Yg
YnVpbGRpbmcgYW4gTk1UIG1vZGVsIHdpdGggY29uY3JldGUgY29kZQpzbmlw
cGV0cyB0aHJvdWdoIHdoaWNoIHdlIHdpbGwgZXhwbGFpbiBGaWd1cmUgMiBp
biBtb3JlIGRldGFpbC4gV2UgZGVmZXIgZGF0YQpwcmVwYXJhdGlvbiBhbmQg
dGhlIGZ1bGwgY29kZSB0byBsYXRlci4gVGhpcyBwYXJ0IHJlZmVycyB0bwpm
aWxlClsqKm1vZGVsLnB5KipdKG5tdC9tb2RlbC5weSkuCgpBdCB0aGUgYm90
dG9tIGxheWVyLCB0aGUgZW5jb2RlciBhbmQgZGVjb2RlciBSTk5zIHJlY2Vp
dmUgYXMgaW5wdXQgdGhlCmZvbGxvd2luZzogZmlyc3QsIHRoZSBzb3VyY2Ug
c2VudGVuY2UsIHRoZW4gYSBib3VuZGFyeSBtYXJrZXIgIlw8c1w+IiB3aGlj
aAppbmRpY2F0ZXMgdGhlIHRyYW5zaXRpb24gZnJvbSB0aGUgZW5jb2Rpbmcg
dG8gdGhlIGRlY29kaW5nIG1vZGUsIGFuZCB0aGUgdGFyZ2V0CnNlbnRlbmNl
LiAgRm9yICp0cmFpbmluZyosIHdlIHdpbGwgZmVlZCB0aGUgc3lzdGVtIHdp
dGggdGhlIGZvbGxvd2luZyB0ZW5zb3JzLAp3aGljaCBhcmUgaW4gdGltZS1t
YWpvciBmb3JtYXQgYW5kIGNvbnRhaW4gd29yZCBpbmRpY2VzOgoKLSAgKipl
bmNvZGVyX2lucHV0cyoqIFttYXhfZW5jb2Rlcl90aW1lLCBiYXRjaF9zaXpl
XTogc291cmNlIGlucHV0IHdvcmRzLgotICAqKmRlY29kZXJfaW5wdXRzKiog
W21heF9kZWNvZGVyX3RpbWUsIGJhdGNoX3NpemVdOiB0YXJnZXQgaW5wdXQg
d29yZHMuCi0gICoqZGVjb2Rlcl9vdXRwdXRzKiogW21heF9kZWNvZGVyX3Rp
bWUsIGJhdGNoX3NpemVdOiB0YXJnZXQgb3V0cHV0IHdvcmRzLAogICB0aGVz
ZSBhcmUgZGVjb2Rlcl9pbnB1dHMgc2hpZnRlZCB0byB0aGUgbGVmdCBieSBv
bmUgdGltZSBzdGVwIHdpdGggYW4KICAgZW5kLW9mLXNlbnRlbmNlIHRhZyBh
cHBlbmRlZCBvbiB0aGUgcmlnaHQuCgpIZXJlIGZvciBlZmZpY2llbmN5LCB3
ZSB0cmFpbiB3aXRoIG11bHRpcGxlIHNlbnRlbmNlcyAoYmF0Y2hfc2l6ZSkg
YXQKb25jZS4gVGVzdGluZyBpcyBzbGlnaHRseSBkaWZmZXJlbnQsIHNvIHdl
IHdpbGwgZGlzY3VzcyBpdCBsYXRlci4KCiMjIyBFbWJlZGRpbmcKCkdpdmVu
IHRoZSBjYXRlZ29yaWNhbCBuYXR1cmUgb2Ygd29yZHMsIHRoZSBtb2RlbCBt
dXN0IGZpcnN0IGxvb2sgdXAgdGhlIHNvdXJjZQphbmQgdGFyZ2V0IGVtYmVk
ZGluZ3MgdG8gcmV0cmlldmUgdGhlIGNvcnJlc3BvbmRpbmcgd29yZCByZXBy
ZXNlbnRhdGlvbnMuIEZvcgp0aGlzICplbWJlZGRpbmcgbGF5ZXIqIHRvIHdv
cmssIGEgdm9jYWJ1bGFyeSBpcyBmaXJzdCBjaG9zZW4gZm9yIGVhY2ggbGFu
Z3VhZ2UuClVzdWFsbHksIGEgdm9jYWJ1bGFyeSBzaXplIFYgaXMgc2VsZWN0
ZWQsIGFuZCBvbmx5IHRoZSBtb3N0IGZyZXF1ZW50IFYgd29yZHMgYXJlCnRy
ZWF0ZWQgYXMgdW5pcXVlLiAgQWxsIG90aGVyIHdvcmRzIGFyZSBjb252ZXJ0
ZWQgdG8gYW4gInVua25vd24iIHRva2VuIGFuZCBhbGwKZ2V0IHRoZSBzYW1l
IGVtYmVkZGluZy4gIFRoZSBlbWJlZGRpbmcgd2VpZ2h0cywgb25lIHNldCBw
ZXIgbGFuZ3VhZ2UsIGFyZQp1c3VhbGx5IGxlYXJuZWQgZHVyaW5nIHRyYWlu
aW5nLgoKYGBgIHB5dGhvbgojIEVtYmVkZGluZwplbWJlZGRpbmdfZW5jb2Rl
ciA9IHZhcmlhYmxlX3Njb3BlLmdldF92YXJpYWJsZSgKICAgICJlbWJlZGRp
bmdfZW5jb2RlciIsIFtzcmNfdm9jYWJfc2l6ZSwgZW1iZWRkaW5nX3NpemVd
LCAuLi4pCiMgTG9vayB1cCBlbWJlZGRpbmc6CiMgICBlbmNvZGVyX2lucHV0
czogW21heF90aW1lLCBiYXRjaF9zaXplXQojICAgZW5jb2Rlcl9lbWJfaW5w
OiBbbWF4X3RpbWUsIGJhdGNoX3NpemUsIGVtYmVkZGluZ19zaXplXQplbmNv
ZGVyX2VtYl9pbnAgPSBlbWJlZGRpbmdfb3BzLmVtYmVkZGluZ19sb29rdXAo
CiAgICBlbWJlZGRpbmdfZW5jb2RlciwgZW5jb2Rlcl9pbnB1dHMpCmBgYAoK
U2ltaWxhcmx5LCB3ZSBjYW4gYnVpbGQgKmVtYmVkZGluZ19kZWNvZGVyKiBh
bmQgKmRlY29kZXJfZW1iX2lucCouIE5vdGUgdGhhdCBvbmUKY2FuIGNob29z
ZSB0byBpbml0aWFsaXplIGVtYmVkZGluZyB3ZWlnaHRzIHdpdGggcHJldHJh
aW5lZCB3b3JkIHJlcHJlc2VudGF0aW9ucwpzdWNoIGFzIHdvcmQydmVjIG9y
IEdsb3ZlIHZlY3RvcnMuIEluIGdlbmVyYWwsIGdpdmVuIGEgbGFyZ2UgYW1v
dW50IG9mIHRyYWluaW5nCmRhdGEgd2UgY2FuIGxlYXJuIHRoZXNlIGVtYmVk
ZGluZ3MgZnJvbSBzY3JhdGNoLgoKIyMjIEVuY29kZXIKCk9uY2UgcmV0cmll
dmVkLCB0aGUgd29yZCBlbWJlZGRpbmdzIGFyZSB0aGVuIGZlZCBhcyBpbnB1
dCBpbnRvIHRoZSBtYWluIG5ldHdvcmssCndoaWNoIGNvbnNpc3RzIG9mIHR3
byBtdWx0aS1sYXllciBSTk5zIOKAkyBhbiBlbmNvZGVyIGZvciB0aGUgc291
cmNlIGxhbmd1YWdlIGFuZAphIGRlY29kZXIgZm9yIHRoZSB0YXJnZXQgbGFu
Z3VhZ2UuIFRoZXNlIHR3byBSTk5zLCBpbiBwcmluY2lwbGUsIGNhbiBzaGFy
ZSB0aGUKc2FtZSB3ZWlnaHRzOyBob3dldmVyLCBpbiBwcmFjdGljZSwgd2Ug
b2Z0ZW4gdXNlIHR3byBkaWZmZXJlbnQgUk5OIHBhcmFtZXRlcnMKKHN1Y2gg
bW9kZWxzIGRvIGEgYmV0dGVyIGpvYiB3aGVuIGZpdHRpbmcgbGFyZ2UgdHJh
aW5pbmcgZGF0YXNldHMpLiBUaGUKKmVuY29kZXIqIFJOTiB1c2VzIHplcm8g
dmVjdG9ycyBhcyBpdHMgc3RhcnRpbmcgc3RhdGVzIGFuZCBpcyBidWlsdCBh
cyBmb2xsb3dzOgoKYGBgIHB5dGhvbgojIEJ1aWxkIFJOTiBjZWxsCmVuY29k
ZXJfY2VsbCA9IHRmLm5uLnJubl9jZWxsLkJhc2ljTFNUTUNlbGwobnVtX3Vu
aXRzKQoKIyBSdW4gRHluYW1pYyBSTk4KIyAgIGVuY29kZXJfb3V0cHV0czog
W21heF90aW1lLCBiYXRjaF9zaXplLCBudW1fdW5pdHNdCiMgICBlbmNvZGVy
X3N0YXRlOiBbYmF0Y2hfc2l6ZSwgbnVtX3VuaXRzXQplbmNvZGVyX291dHB1
dHMsIGVuY29kZXJfc3RhdGUgPSB0Zi5ubi5keW5hbWljX3JubigKICAgIGVu
Y29kZXJfY2VsbCwgZW5jb2Rlcl9lbWJfaW5wLAogICAgc2VxdWVuY2VfbGVu
Z3RoPXNvdXJjZV9zZXF1ZW5jZV9sZW5ndGgsIHRpbWVfbWFqb3I9VHJ1ZSkK
YGBgCgpOb3RlIHRoYXQgc2VudGVuY2VzIGhhdmUgZGlmZmVyZW50IGxlbmd0
aHMgdG8gYXZvaWQgd2FzdGluZyBjb21wdXRhdGlvbiwgd2UgdGVsbAoqZHlu
YW1pY19ybm4qIHRoZSBleGFjdCBzb3VyY2Ugc2VudGVuY2UgbGVuZ3RocyB0
aHJvdWdoCipzb3VyY2Vfc2VxdWVuY2VfbGVuZ3RoKi4gU2luY2Ugb3VyIGlu
cHV0IGlzIHRpbWUgbWFqb3IsIHdlIHNldAoqdGltZV9tYWpvcj1UcnVlKi4g
SGVyZSwgd2UgYnVpbGQgb25seSBhIHNpbmdsZSBsYXllciBMU1RNLCAqZW5j
b2Rlcl9jZWxsKi4gV2UKd2lsbCBkZXNjcmliZSBob3cgdG8gYnVpbGQgbXVs
dGktbGF5ZXIgTFNUTXMsIGFkZCBkcm9wb3V0LCBhbmQgdXNlIGF0dGVudGlv
biBpbgphIGxhdGVyIHNlY3Rpb24uCgojIyMgRGVjb2RlcgoKVGhlICpkZWNv
ZGVyKiBhbHNvIG5lZWRzIHRvIGhhdmUgYWNjZXNzIHRvIHRoZSBzb3VyY2Ug
aW5mb3JtYXRpb24sIGFuZCBvbmUKc2ltcGxlIHdheSB0byBhY2hpZXZlIHRo
YXQgaXMgdG8gaW5pdGlhbGl6ZSBpdCB3aXRoIHRoZSBsYXN0IGhpZGRlbiBz
dGF0ZSBvZiB0aGUKZW5jb2RlciwgKmVuY29kZXJfc3RhdGUqLiBJbiBGaWd1
cmUgMiwgd2UgcGFzcyB0aGUgaGlkZGVuIHN0YXRlIGF0IHRoZSBzb3VyY2UK
d29yZCAic3R1ZGVudCIgdG8gdGhlIGRlY29kZXIgc2lkZS4KCmBgYCBweXRo
b24KIyBCdWlsZCBSTk4gY2VsbApkZWNvZGVyX2NlbGwgPSB0Zi5ubi5ybm5f
Y2VsbC5CYXNpY0xTVE1DZWxsKG51bV91bml0cykKYGBgCgpgYGAgcHl0aG9u
CiMgSGVscGVyCmhlbHBlciA9IHRmLmNvbnRyaWIuc2VxMnNlcS5UcmFpbmlu
Z0hlbHBlcigKICAgIGRlY29kZXJfZW1iX2lucCwgZGVjb2Rlcl9sZW5ndGhz
LCB0aW1lX21ham9yPVRydWUpCiMgRGVjb2RlcgpkZWNvZGVyID0gdGYuY29u
dHJpYi5zZXEyc2VxLkJhc2ljRGVjb2RlcigKICAgIGRlY29kZXJfY2VsbCwg
aGVscGVyLCBlbmNvZGVyX3N0YXRlLAogICAgb3V0cHV0X2xheWVyPXByb2pl
Y3Rpb25fbGF5ZXIpCiMgRHluYW1pYyBkZWNvZGluZwpvdXRwdXRzLCBfID0g
dGYuY29udHJpYi5zZXEyc2VxLmR5bmFtaWNfZGVjb2RlKGRlY29kZXIsIC4u
LikKbG9naXRzID0gb3V0cHV0cy5ybm5fb3V0cHV0CmBgYAoKSGVyZSwgdGhl
IGNvcmUgcGFydCBvZiB0aGlzIGNvZGUgaXMgdGhlICpCYXNpY0RlY29kZXIq
IG9iamVjdCwgKmRlY29kZXIqLCB3aGljaApyZWNlaXZlcyAqZGVjb2Rlcl9j
ZWxsKiAoc2ltaWxhciB0byBlbmNvZGVyX2NlbGwpLCBhICpoZWxwZXIqLCBh
bmQgdGhlIHByZXZpb3VzCiplbmNvZGVyX3N0YXRlKiBhcyBpbnB1dHMuIEJ5
IHNlcGFyYXRpbmcgb3V0IGRlY29kZXJzIGFuZCBoZWxwZXJzLCB3ZSBjYW4g
cmV1c2UKZGlmZmVyZW50IGNvZGViYXNlcywgZS5nLiwgKlRyYWluaW5nSGVs
cGVyKiBjYW4gYmUgc3Vic3RpdHV0ZWQgd2l0aAoqR3JlZWR5RW1iZWRkaW5n
SGVscGVyKiB0byBkbyBncmVlZHkgZGVjb2RpbmcuIFNlZSBtb3JlCmluClto
ZWxwZXIucHldKGh0dHBzOi8vZ2l0aHViLmNvbS90ZW5zb3JmbG93L3RlbnNv
cmZsb3cvYmxvYi9tYXN0ZXIvdGVuc29yZmxvdy9jb250cmliL3NlcTJzZXEv
cHl0aG9uL29wcy9oZWxwZXIucHkpLgoKTGFzdGx5LCB3ZSBoYXZlbid0IG1l
bnRpb25lZCAqcHJvamVjdGlvbl9sYXllciogd2hpY2ggaXMgYSBkZW5zZSBt
YXRyaXggdG8gdHVybgp0aGUgdG9wIGhpZGRlbiBzdGF0ZXMgdG8gbG9naXQg
dmVjdG9ycyBvZiBkaW1lbnNpb24gVi4gV2UgaWxsdXN0cmF0ZSB0aGlzCnBy
b2Nlc3MgYXQgdGhlIHRvcCBvZiBGaWd1cmUgMi4KCmBgYCBweXRob24KcHJv
amVjdGlvbl9sYXllciA9IGxheWVyc19jb3JlLkRlbnNlKAogICAgdGd0X3Zv
Y2FiX3NpemUsIHVzZV9iaWFzPUZhbHNlKQpgYGAKCiMjIyBMb3NzCgpHaXZl
biB0aGUgKmxvZ2l0cyogYWJvdmUsIHdlIGFyZSBub3cgcmVhZHkgdG8gY29t
cHV0ZSBvdXIgdHJhaW5pbmcgbG9zczoKCmBgYCBweXRob24KY3Jvc3NlbnQg
PSB0Zi5ubi5zcGFyc2Vfc29mdG1heF9jcm9zc19lbnRyb3B5X3dpdGhfbG9n
aXRzKAogICAgbGFiZWxzPWRlY29kZXJfb3V0cHV0cywgbG9naXRzPWxvZ2l0
cykKdHJhaW5fbG9zcyA9ICh0Zi5yZWR1Y2Vfc3VtKGNyb3NzZW50ICogdGFy
Z2V0X3dlaWdodHMpIC8KICAgIGJhdGNoX3NpemUpCmBgYAoKSGVyZSwgKnRh
cmdldF93ZWlnaHRzKiBpcyBhIHplcm8tb25lIG1hdHJpeCBvZiB0aGUgc2Ft
ZSBzaXplIGFzCipkZWNvZGVyX291dHB1dHMqLiBJdCBtYXNrcyBwYWRkaW5n
IHBvc2l0aW9ucyBvdXRzaWRlIG9mIHRoZSB0YXJnZXQgc2VxdWVuY2UKbGVu
Z3RocyB3aXRoIHZhbHVlcyAwLgoKKioqSW1wb3J0YW50IG5vdGUqKio6IEl0
J3Mgd29ydGggcG9pbnRpbmcgb3V0IHRoYXQgd2UgZGl2aWRlIHRoZSBsb3Nz
IGJ5CipiYXRjaF9zaXplKiwgc28gb3VyIGh5cGVycGFyYW1ldGVycyBhcmUg
ImludmFyaWFudCIgdG8gYmF0Y2hfc2l6ZS4gU29tZSBwZW9wbGUKZGl2aWRl
IHRoZSBsb3NzIGJ5ICgqYmF0Y2hfc2l6ZSogKiAqbnVtX3RpbWVfc3RlcHMq
KSwgd2hpY2ggcGxheXMgZG93biB0aGUKZXJyb3JzIG1hZGUgb24gc2hvcnQg
c2VudGVuY2VzLiBNb3JlIHN1YnRseSwgb3VyIGh5cGVycGFyYW1ldGVycyAo
YXBwbGllZCB0byB0aGUKZm9ybWVyIHdheSkgY2FuJ3QgYmUgdXNlZCBmb3Ig
dGhlIGxhdHRlciB3YXkuIEZvciBleGFtcGxlLCBpZiBib3RoIGFwcHJvYWNo
ZXMKdXNlIFNHRCB3aXRoIGEgbGVhcm5pbmcgb2YgMS4wLCB0aGUgbGF0dGVy
IGFwcHJvYWNoIGVmZmVjdGl2ZWx5IHVzZXMgYSBtdWNoCnNtYWxsZXIgbGVh
cm5pbmcgcmF0ZSBvZiAxIC8gKm51bV90aW1lX3N0ZXBzKi4KCiMjIyBHcmFk
aWVudCBjb21wdXRhdGlvbiAmIG9wdGltaXphdGlvbgoKV2UgaGF2ZSBub3cg
ZGVmaW5lZCB0aGUgZm9yd2FyZCBwYXNzIG9mIG91ciBOTVQgbW9kZWwuIENv
bXB1dGluZyB0aGUKYmFja3Byb3BhZ2F0aW9uIHBhc3MgaXMganVzdCBhIG1h
dHRlciBvZiBhIGZldyBsaW5lcyBvZiBjb2RlOgoKYGBgIHB5dGhvbgojIENh
bGN1bGF0ZSBhbmQgY2xpcCBncmFkaWVudHMKcGFyYW1zID0gdGYudHJhaW5h
YmxlX3ZhcmlhYmxlcygpCmdyYWRpZW50cyA9IHRmLmdyYWRpZW50cyh0cmFp
bl9sb3NzLCBwYXJhbXMpCmNsaXBwZWRfZ3JhZGllbnRzLCBfID0gdGYuY2xp
cF9ieV9nbG9iYWxfbm9ybSgKICAgIGdyYWRpZW50cywgbWF4X2dyYWRpZW50
X25vcm0pCmBgYAoKT25lIG9mIHRoZSBpbXBvcnRhbnQgc3RlcHMgaW4gdHJh
aW5pbmcgUk5OcyBpcyBncmFkaWVudCBjbGlwcGluZy4gSGVyZSwgd2UgY2xp
cApieSB0aGUgZ2xvYmFsIG5vcm0uICBUaGUgbWF4IHZhbHVlLCAqbWF4X2dy
YWRpZW50X25vcm0qLCBpcyBvZnRlbiBzZXQgdG8gYSB2YWx1ZQpsaWtlIDUg
b3IgMS4gVGhlIGxhc3Qgc3RlcCBpcyBzZWxlY3RpbmcgdGhlIG9wdGltaXpl
ci4gIFRoZSBBZGFtIG9wdGltaXplciBpcyBhCmNvbW1vbiBjaG9pY2UuICBX
ZSBhbHNvIHNlbGVjdCBhIGxlYXJuaW5nIHJhdGUuICBUaGUgdmFsdWUgb2Yg
KmxlYXJuaW5nX3JhdGUqCmNhbiBpcyB1c3VhbGx5IGluIHRoZSByYW5nZSAw
LjAwMDEgdG8gMC4wMDE7IGFuZCBjYW4gYmUgc2V0IHRvIGRlY3JlYXNlIGFz
CnRyYWluaW5nIHByb2dyZXNzZXMuCgpgYGAgcHl0aG9uCiMgT3B0aW1pemF0
aW9uCm9wdGltaXplciA9IHRmLnRyYWluLkFkYW1PcHRpbWl6ZXIobGVhcm5p
bmdfcmF0ZSkKdXBkYXRlX3N0ZXAgPSBvcHRpbWl6ZXIuYXBwbHlfZ3JhZGll
bnRzKAogICAgemlwKGNsaXBwZWRfZ3JhZGllbnRzLCBwYXJhbXMpKQpgYGAK
CkluIG91ciBvd24gZXhwZXJpbWVudHMsIHdlIHVzZSBzdGFuZGFyZCBTR0Qg
KHRmLnRyYWluLkdyYWRpZW50RGVzY2VudE9wdGltaXplcikKd2l0aCBhIGRl
Y3JlYXNpbmcgbGVhcm5pbmcgcmF0ZSBzY2hlZHVsZSwgd2hpY2ggeWllbGRz
IGJldHRlciBwZXJmb3JtYW5jZS4gU2VlCnRoZSBbYmVuY2htYXJrc10oI2Jl
bmNobWFya3MpLgoKIyMgSGFuZHMtb24g4oCTIExldCdzIHRyYWluIGFuIE5N
VCBtb2RlbAoKTGV0J3MgdHJhaW4gb3VyIHZlcnkgZmlyc3QgTk1UIG1vZGVs
LCB0cmFuc2xhdGluZyBmcm9tIFZpZXRuYW1lc2UgdG8gRW5nbGlzaCEKVGhl
IGVudHJ5IHBvaW50IG9mIG91ciBjb2RlCmlzClsqKm5tdC5weSoqXShubXQv
bm10LnB5KS4KCldlIHdpbGwgdXNlIGEgKnNtYWxsLXNjYWxlIHBhcmFsbGVs
IGNvcnB1cyBvZiBURUQgdGFsa3MqICgxMzNLIHRyYWluaW5nCmV4YW1wbGVz
KSBmb3IgdGhpcyBleGVyY2lzZS4gQWxsIGRhdGEgd2UgdXNlZCBoZXJlIGNh
biBiZSBmb3VuZAphdDoKW2h0dHBzOi8vbmxwLnN0YW5mb3JkLmVkdS9wcm9q
ZWN0cy9ubXQvXShodHRwczovL25scC5zdGFuZm9yZC5lZHUvcHJvamVjdHMv
bm10LykuIFdlCndpbGwgdXNlIHRzdDIwMTIgYXMgb3VyIGRldiBkYXRhc2V0
LCBhbmQgdHN0MjAxMyBhcyBvdXIgdGVzdCBkYXRhc2V0LgoKUnVuIHRoZSBm
b2xsb3dpbmcgY29tbWFuZCB0byBkb3dubG9hZCB0aGUgZGF0YSBmb3IgdHJh
aW5pbmcgTk1UIG1vZGVsOlwKCWBubXQvc2NyaXB0cy9kb3dubG9hZF9pd3Ns
dDE1LnNoIC90bXAvbm10X2RhdGFgCgpSdW4gdGhlIGZvbGxvd2luZyBjb21t
YW5kIHRvIHN0YXJ0IHRoZSB0cmFpbmluZzoKCmBgYCBzaGVsbApta2RpciAv
dG1wL25tdF9tb2RlbApweXRob24gLW0gbm10Lm5tdCBcCiAgICAtLXNyYz12
aSAtLXRndD1lbiBcCiAgICAtLXZvY2FiX3ByZWZpeD0vdG1wL25tdF9kYXRh
L3ZvY2FiICBcCiAgICAtLXRyYWluX3ByZWZpeD0vdG1wL25tdF9kYXRhL3Ry
YWluIFwKICAgIC0tZGV2X3ByZWZpeD0vdG1wL25tdF9kYXRhL3RzdDIwMTIg
IFwKICAgIC0tdGVzdF9wcmVmaXg9L3RtcC9ubXRfZGF0YS90c3QyMDEzIFwK
ICAgIC0tb3V0X2Rpcj0vdG1wL25tdF9tb2RlbCBcCiAgICAtLW51bV90cmFp
bl9zdGVwcz0xMjAwMCBcCiAgICAtLXN0ZXBzX3Blcl9zdGF0cz0xMDAgXAog
ICAgLS1udW1fbGF5ZXJzPTIgXAogICAgLS1udW1fdW5pdHM9MTI4IFwKICAg
IC0tZHJvcG91dD0wLjIgXAogICAgLS1tZXRyaWNzPWJsZXUKYGBgCgpUaGUg
YWJvdmUgY29tbWFuZCB0cmFpbnMgYSAyLWxheWVyIExTVE0gc2VxMnNlcSBt
b2RlbCB3aXRoIDEyOC1kaW0gaGlkZGVuIHVuaXRzCmFuZCBlbWJlZGRpbmdz
IGZvciAxMiBlcG9jaHMuIFdlIHVzZSBhIGRyb3BvdXQgdmFsdWUgb2YgMC4y
IChrZWVwIHByb2JhYmlsaXR5CjAuOCkuIElmIG5vIGVycm9yLCB3ZSBzaG91
bGQgc2VlIGxvZ3Mgc2ltaWxhciB0byB0aGUgYmVsb3cgd2l0aCBkZWNyZWFz
aW5nCnBlcnBsZXhpdHkgdmFsdWVzIGFzIHdlIHRyYWluLgoKYGBgCiMgRmly
c3QgZXZhbHVhdGlvbiwgZ2xvYmFsIHN0ZXAgMAogIGV2YWwgZGV2OiBwZXJw
bGV4aXR5IDE3MTkzLjY2CiAgZXZhbCB0ZXN0OiBwZXJwbGV4aXR5IDE3MTkz
LjI3CiMgU3RhcnQgZXBvY2ggMCwgc3RlcCAwLCBsciAxLCBUdWUgQXByIDI1
IDIzOjE3OjQxIDIwMTcKICBzYW1wbGUgdHJhaW4gZGF0YToKICAgIHNyY19y
ZXZlcnNlOiA8L3M+IDwvcz4gxJBp4buBdSDEkcOzICwgZMSpIG5oacOqbiAs
IGzDoCBjw6J1IGNodXnhu4duIHRyw61jaCByYSB04burIGjhu41jIHRodXnh
ur90IGPhu6dhIEthcmwgTWFyeCAuCiAgICByZWY6IFRoYXQgLCBvZiBjb3Vy
c2UgLCB3YXMgdGhlIDx1bms+IGRpc3RpbGxlZCBmcm9tIHRoZSB0aGVvcmll
cyBvZiBLYXJsIE1hcnggLiA8L3M+IDwvcz4gPC9zPgogIGVwb2NoIDAgc3Rl
cCAxMDAgbHIgMSBzdGVwLXRpbWUgMC44OXMgd3BzIDUuNzhLIHBwbCAxNTY4
LjYyIGJsZXUgMC4wMAogIGVwb2NoIDAgc3RlcCAyMDAgbHIgMSBzdGVwLXRp
bWUgMC45NHMgd3BzIDUuOTFLIHBwbCA1MjQuMTEgYmxldSAwLjAwCiAgZXBv
Y2ggMCBzdGVwIDMwMCBsciAxIHN0ZXAtdGltZSAwLjk2cyB3cHMgNS44MEsg
cHBsIDM0MC4wNSBibGV1IDAuMDAKICBlcG9jaCAwIHN0ZXAgNDAwIGxyIDEg
c3RlcC10aW1lIDEuMDJzIHdwcyA2LjA2SyBwcGwgMjc3LjYxIGJsZXUgMC4w
MAogIGVwb2NoIDAgc3RlcCA1MDAgbHIgMSBzdGVwLXRpbWUgMC45NXMgd3Bz
IDUuODlLIHBwbCAyMDUuODUgYmxldSAwLjAwCmBgYAoKU2VlIFsqKnRyYWlu
LnB5KipdKG5tdC90cmFpbi5weSkgZm9yIG1vcmUgZGV0YWlscy4KCldlIGNh
biBzdGFydCBUZW5zb3Jib2FyZCB0byB2aWV3IHRoZSBzdW1tYXJ5IG9mIHRo
ZSBtb2RlbCBkdXJpbmcgdHJhaW5pbmc6CgpgYGAgc2hlbGwKdGVuc29yYm9h
cmQgLS1wb3J0IDIyMjIyIC0tbG9nZGlyIC90bXAvbm10X21vZGVsLwpgYGAK
ClRyYWluaW5nIHRoZSByZXZlcnNlIGRpcmVjdGlvbiBmcm9tIEVuZ2xpc2gg
YW5kIFZpZXRuYW1lc2UgY2FuIGJlIGRvbmUgc2ltcGx5IGJ5IGNoYW5naW5n
OlwKCWAtLXNyYz1lbiAtLXRndD12aWAKCiMjIEluZmVyZW5jZSDigJMgSG93
IHRvIGdlbmVyYXRlIHRyYW5zbGF0aW9ucwoKV2hpbGUgeW91J3JlIHRyYWlu
aW5nIHlvdXIgTk1UIG1vZGVscyAoYW5kIG9uY2UgeW91IGhhdmUgdHJhaW5l
ZCBtb2RlbHMpLCB5b3UKY2FuIG9idGFpbiB0cmFuc2xhdGlvbnMgZ2l2ZW4g
cHJldmlvdXNseSB1bnNlZW4gc291cmNlIHNlbnRlbmNlcy4gVGhpcyBwcm9j
ZXNzCmlzIGNhbGxlZCBpbmZlcmVuY2UuIFRoZXJlIGlzIGEgY2xlYXIgZGlz
dGluY3Rpb24gYmV0d2VlbiB0cmFpbmluZyBhbmQgaW5mZXJlbmNlCigqdGVz
dGluZyopOiBhdCBpbmZlcmVuY2UgdGltZSwgd2Ugb25seSBoYXZlIGFjY2Vz
cyB0byB0aGUgc291cmNlIHNlbnRlbmNlLAppLmUuLCAqZW5jb2Rlcl9pbnB1
dHMqLiBUaGVyZSBhcmUgbWFueSB3YXlzIHRvIHBlcmZvcm0gZGVjb2Rpbmcu
ICBEZWNvZGluZwptZXRob2RzIGluY2x1ZGUgZ3JlZWR5LCBzYW1wbGluZywg
YW5kIGJlYW0tc2VhcmNoIGRlY29kaW5nLiBIZXJlLCB3ZSB3aWxsCmRpc2N1
c3MgdGhlIGdyZWVkeSBkZWNvZGluZyBzdHJhdGVneS4KClRoZSBpZGVhIGlz
IHNpbXBsZSBhbmQgd2UgaWxsdXN0cmF0ZSBpdCBpbiBGaWd1cmUgMzoKCjEu
IFdlIHN0aWxsIGVuY29kZSB0aGUgc291cmNlIHNlbnRlbmNlIGluIHRoZSBz
YW1lIHdheSBhcyBkdXJpbmcgdHJhaW5pbmcgdG8KICAgb2J0YWluIGFuICpl
bmNvZGVyX3N0YXRlKiwgYW5kIHRoaXMgKmVuY29kZXJfc3RhdGUqIGlzIHVz
ZWQgdG8gaW5pdGlhbGl6ZSB0aGUKICAgZGVjb2Rlci4KMi4gVGhlIGRlY29k
aW5nICh0cmFuc2xhdGlvbikgcHJvY2VzcyBpcyBzdGFydGVkIGFzIHNvb24g
YXMgdGhlIGRlY29kZXIgcmVjZWl2ZXMKICAgYSBzdGFydGluZyBzeW1ib2wg
Ilw8c1w+IiAocmVmZXIgYXMgKnRndF9zb3NfaWQqIGluIG91ciBjb2RlKTsK
My4gRm9yIGVhY2ggdGltZXN0ZXAgb24gdGhlIGRlY29kZXIgc2lkZSwgd2Ug
dHJlYXQgdGhlIFJOTidzIG91dHB1dCBhcyBhIHNldCBvZgogICBsb2dpdHMu
ICBXZSBjaG9vc2UgdGhlIG1vc3QgbGlrZWx5IHdvcmQsIHRoZSBpZCBhc3Nv
Y2lhdGVkIHdpdGggdGhlIG1heGltdW0KICAgbG9naXQgdmFsdWUsIGFzIHRo
ZSBlbWl0dGVkIHdvcmQgKHRoaXMgaXMgdGhlICJncmVlZHkiIGJlaGF2aW9y
KS4gIEZvcgogICBleGFtcGxlIGluIEZpZ3VyZSAzLCB0aGUgd29yZCAibW9p
IiBoYXMgdGhlIGhpZ2hlc3QgdHJhbnNsYXRpb24gcHJvYmFiaWxpdHkKICAg
aW4gdGhlIGZpcnN0IGRlY29kaW5nIHN0ZXAuICBXZSB0aGVuIGZlZWQgdGhp
cyB3b3JkIGFzIGlucHV0IHRvIHRoZSBuZXh0CiAgIHRpbWVzdGVwLgo0LiBU
aGUgcHJvY2VzcyBjb250aW51ZXMgdW50aWwgdGhlIGVuZC1vZi1zZW50ZW5j
ZSBtYXJrZXIgIlw8L3NcPiIgaXMgcHJvZHVjZWQgYXMKICAgYW4gb3V0cHV0
IHN5bWJvbCAocmVmZXIgYXMgKnRndF9lb3NfaWQqIGluIG91ciBjb2RlKS4K
CjxwIGFsaWduPSJjZW50ZXIiPgo8aW1nIHdpZHRoPSI0MCUiIHNyYz0ibm10
L2czZG9jL2ltZy9ncmVlZHlfZGVjLmpwZyIgLz4KPGJyPgpGaWd1cmUgMy4g
PGI+R3JlZWR5IGRlY29kaW5nPC9iPiDigJMgZXhhbXBsZSBvZiBob3cgYSB0
cmFpbmVkIE5NVCBtb2RlbCBwcm9kdWNlcyBhCnRyYW5zbGF0aW9uIGZvciBh
IHNvdXJjZSBzZW50ZW5jZSAiSmUgc3VpcyDDqXR1ZGlhbnQiIHVzaW5nIGdy
ZWVkeSBzZWFyY2guCjwvcD4KClN0ZXAgMyBpcyB3aGF0IG1ha2VzIGluZmVy
ZW5jZSBkaWZmZXJlbnQgZnJvbSB0cmFpbmluZy4gSW5zdGVhZCBvZiBhbHdh
eXMKZmVlZGluZyB0aGUgY29ycmVjdCB0YXJnZXQgd29yZHMgYXMgYW4gaW5w
dXQsIGluZmVyZW5jZSB1c2VzIHdvcmRzIHByZWRpY3RlZCBieQp0aGUgbW9k
ZWwuIEhlcmUncyB0aGUgY29kZSB0byBhY2hpZXZlIGdyZWVkeSBkZWNvZGlu
Zy4gIEl0IGlzIHZlcnkgc2ltaWxhciB0bwp0aGUgdHJhaW5pbmcgZGVjb2Rl
ci4KCmBgYCBweXRob24KIyBIZWxwZXIKaGVscGVyID0gdGYuY29udHJpYi5z
ZXEyc2VxLkdyZWVkeUVtYmVkZGluZ0hlbHBlcigKICAgIGVtYmVkZGluZ19k
ZWNvZGVyLAogICAgdGYuZmlsbChbYmF0Y2hfc2l6ZV0sIHRndF9zb3NfaWQp
LCB0Z3RfZW9zX2lkKQoKIyBEZWNvZGVyCmRlY29kZXIgPSB0Zi5jb250cmli
LnNlcTJzZXEuQmFzaWNEZWNvZGVyKAogICAgZGVjb2Rlcl9jZWxsLCBoZWxw
ZXIsIGVuY29kZXJfc3RhdGUsCiAgICBvdXRwdXRfbGF5ZXI9cHJvamVjdGlv
bl9sYXllcikKIyBEeW5hbWljIGRlY29kaW5nCm91dHB1dHMsIF8gPSB0Zi5j
b250cmliLnNlcTJzZXEuZHluYW1pY19kZWNvZGUoCiAgICBkZWNvZGVyLCBt
YXhpbXVtX2l0ZXJhdGlvbnM9bWF4aW11bV9pdGVyYXRpb25zKQp0cmFuc2xh
dGlvbnMgPSBvdXRwdXRzLnNhbXBsZV9pZApgYGAKCkhlcmUsIHdlIHVzZSAq
R3JlZWR5RW1iZWRkaW5nSGVscGVyKiBpbnN0ZWFkIG9mICpUcmFpbmluZ0hl
bHBlciouIFNpbmNlIHdlIGRvCm5vdCBrbm93IHRoZSB0YXJnZXQgc2VxdWVu
Y2UgbGVuZ3RocyBpbiBhZHZhbmNlLCB3ZSB1c2UgKm1heGltdW1faXRlcmF0
aW9ucyogdG8KbGltaXQgdGhlIHRyYW5zbGF0aW9uIGxlbmd0aHMuIE9uZSBo
ZXVyaXN0aWMgaXMgdG8gZGVjb2RlIHVwIHRvIHR3byB0aW1lcyB0aGUKc291
cmNlIHNlbnRlbmNlIGxlbmd0aHMuCgpgYGAgcHl0aG9uCm1heGltdW1faXRl
cmF0aW9ucyA9IHRmLnJvdW5kKHRmLnJlZHVjZV9tYXgoc291cmNlX3NlcXVl
bmNlX2xlbmd0aCkgKiAyKQpgYGAKCkhhdmluZyB0cmFpbmVkIGEgbW9kZWws
IHdlIGNhbiBub3cgY3JlYXRlIGFuIGluZmVyZW5jZSBmaWxlIGFuZCB0cmFu
c2xhdGUgc29tZQpzZW50ZW5jZXM6CgpgYGAgc2hlbGwKY2F0ID4gL3RtcC9t
eV9pbmZlcl9maWxlLnZpCiMgKGNvcHkgYW5kIHBhc3RlIHNvbWUgc2VudGVu
Y2VzIGZyb20gL3RtcC9ubXRfZGF0YS90c3QyMDEzLnZpKQoKcHl0aG9uIC1t
IG5tdC5ubXQgXAogICAgLS1vdXRfZGlyPS90bXAvbm10X21vZGVsIFwKICAg
IC0taW5mZXJlbmNlX2lucHV0X2ZpbGU9L3RtcC9teV9pbmZlcl9maWxlLnZp
IFwKICAgIC0taW5mZXJlbmNlX291dHB1dF9maWxlPS90bXAvbm10X21vZGVs
L291dHB1dF9pbmZlcgoKY2F0IC90bXAvbm10X21vZGVsL291dHB1dF9pbmZl
ciAjIFRvIHZpZXcgdGhlIGluZmVyZW5jZSBhcyBvdXRwdXQKYGBgCgpOb3Rl
IHRoZSBhYm92ZSBjb21tYW5kcyBjYW4gYWxzbyBiZSBydW4gd2hpbGUgdGhl
IG1vZGVsIGlzIHN0aWxsIGJlaW5nIHRyYWluZWQKYXMgbG9uZyBhcyB0aGVy
ZSBleGlzdHMgYSB0cmFpbmluZwpjaGVja3BvaW50LiBTZWUgWyoqaW5mZXJl
bmNlLnB5KipdKG5tdC9pbmZlcmVuY2UucHkpIGZvciBtb3JlIGRldGFpbHMu
CgojIEludGVybWVkaWF0ZQoKSGF2aW5nIGdvbmUgdGhyb3VnaCB0aGUgbW9z
dCBiYXNpYyBzZXEyc2VxIG1vZGVsLCBsZXQncyBnZXQgbW9yZSBhZHZhbmNl
ZCEgVG8KYnVpbGQgc3RhdGUtb2YtdGhlLWFydCBuZXVyYWwgbWFjaGluZSB0
cmFuc2xhdGlvbiBzeXN0ZW1zLCB3ZSB3aWxsIG5lZWQgbW9yZQoic2VjcmV0
IHNhdWNlIjogdGhlICphdHRlbnRpb24gbWVjaGFuaXNtKiwgd2hpY2ggd2Fz
IGZpcnN0IGludHJvZHVjZWQKYnkgW0JhaGRhbmF1IGV0IGFsLiwgMjAxNV0o
aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE0MDkuMDQ3MyksIHRoZW4gbGF0ZXIg
cmVmaW5lZApieSBbTHVvbmcgZXQgYWwuLCAyMDE1XShodHRwczovL2FyeGl2
Lm9yZy9hYnMvMTUwOC4wNDAyNSkgYW5kIG90aGVycy4gVGhlIGtleQppZGVh
IG9mIHRoZSBhdHRlbnRpb24gbWVjaGFuaXNtIGlzIHRvIGVzdGFibGlzaCBk
aXJlY3Qgc2hvcnQtY3V0IGNvbm5lY3Rpb25zCmJldHdlZW4gdGhlIHRhcmdl
dCBhbmQgdGhlIHNvdXJjZSBieSBwYXlpbmcgImF0dGVudGlvbiIgdG8gcmVs
ZXZhbnQgc291cmNlCmNvbnRlbnQgYXMgd2UgdHJhbnNsYXRlLiBBIG5pY2Ug
Ynlwcm9kdWN0IG9mIHRoZSBhdHRlbnRpb24gbWVjaGFuaXNtIGlzIGFuCmVh
c3ktdG8tdmlzdWFsaXplIGFsaWdubWVudCBtYXRyaXggYmV0d2VlbiB0aGUg
c291cmNlIGFuZCB0YXJnZXQgc2VudGVuY2VzIChhcwpzaG93biBpbiBGaWd1
cmUgNCkuCgo8cCBhbGlnbj0iY2VudGVyIj4KPGltZyB3aWR0aD0iNDAlIiBz
cmM9Im5tdC9nM2RvYy9pbWcvYXR0ZW50aW9uX3Zpcy5qcGciIC8+Cjxicj4K
RmlndXJlIDQuIDxiPkF0dGVudGlvbiB2aXN1YWxpemF0aW9uPC9iPiDigJMg
ZXhhbXBsZSBvZiB0aGUgYWxpZ25tZW50cyBiZXR3ZWVuIHNvdXJjZQphbmQg
dGFyZ2V0IHNlbnRlbmNlcy4gSW1hZ2UgaXMgdGFrZW4gZnJvbSAoQmFoZGFu
YXUgZXQgYWwuLCAyMDE1KS4KPC9wPgoKUmVtZW1iZXIgdGhhdCBpbiB0aGUg
dmFuaWxsYSBzZXEyc2VxIG1vZGVsLCB3ZSBwYXNzIHRoZSBsYXN0IHNvdXJj
ZSBzdGF0ZSBmcm9tCnRoZSBlbmNvZGVyIHRvIHRoZSBkZWNvZGVyIHdoZW4g
c3RhcnRpbmcgdGhlIGRlY29kaW5nIHByb2Nlc3MuIFRoaXMgd29ya3Mgd2Vs
bApmb3Igc2hvcnQgYW5kIG1lZGl1bS1sZW5ndGggc2VudGVuY2VzOyBob3dl
dmVyLCBmb3IgbG9uZyBzZW50ZW5jZXMsIHRoZSBzaW5nbGUKZml4ZWQtc2l6
ZSBoaWRkZW4gc3RhdGUgYmVjb21lcyBhbiBpbmZvcm1hdGlvbiBib3R0bGVu
ZWNrLiBJbnN0ZWFkIG9mIGRpc2NhcmRpbmcKYWxsIG9mIHRoZSBoaWRkZW4g
c3RhdGVzIGNvbXB1dGVkIGluIHRoZSBzb3VyY2UgUk5OLCB0aGUgYXR0ZW50
aW9uIG1lY2hhbmlzbQpwcm92aWRlcyBhbiBhcHByb2FjaCB0aGF0IGFsbG93
cyB0aGUgZGVjb2RlciB0byBwZWVrIGF0IHRoZW0gKHRyZWF0aW5nIHRoZW0g
YXMgYQpkeW5hbWljIG1lbW9yeSBvZiB0aGUgc291cmNlIGluZm9ybWF0aW9u
KS4gQnkgZG9pbmcgc28sIHRoZSBhdHRlbnRpb24gbWVjaGFuaXNtCmltcHJv
dmVzIHRoZSB0cmFuc2xhdGlvbiBvZiBsb25nZXIgc2VudGVuY2VzLiBOb3dh
ZGF5cywgYXR0ZW50aW9uIG1lY2hhbmlzbXMgYXJlCnRoZSBkZWZhY3RvIHN0
YW5kYXJkIGFuZCBoYXZlIGJlZW4gc3VjY2Vzc2Z1bGx5IGFwcGxpZWQgdG8g
bWFueSBvdGhlciB0YXNrcwooaW5jbHVkaW5nIGltYWdlIGNhcHRpb24gZ2Vu
ZXJhdGlvbiwgc3BlZWNoIHJlY29nbml0aW9uLCBhbmQgdGV4dApzdW1tYXJp
emF0aW9uKS4KCiMjIEJhY2tncm91bmQgb24gdGhlIEF0dGVudGlvbiBNZWNo
YW5pc20KCldlIG5vdyBkZXNjcmliZSBhbiBpbnN0YW5jZSBvZiB0aGUgYXR0
ZW50aW9uIG1lY2hhbmlzbSBwcm9wb3NlZCBpbiAoTHVvbmcgZXQKYWwuLCAy
MDE1KSwgd2hpY2ggaGFzIGJlZW4gdXNlZCBpbiBzZXZlcmFsIHN0YXRlLW9m
LXRoZS1hcnQgc3lzdGVtcyBpbmNsdWRpbmcKb3Blbi1zb3VyY2UgdG9vbGtp
dHMgc3VjaCBhcyBbT3Blbk5NVF0oaHR0cDovL29wZW5ubXQubmV0L2Fib3V0
LykgYW5kIGluIHRoZSBURgpzZXEyc2VxIEFQSSBpbiB0aGlzIHR1dG9yaWFs
LiBXZSB3aWxsIGFsc28gcHJvdmlkZSBjb25uZWN0aW9ucyB0byBvdGhlciB2
YXJpYW50cwpvZiB0aGUgYXR0ZW50aW9uIG1lY2hhbmlzbS4KCjxwIGFsaWdu
PSJjZW50ZXIiPgo8aW1nIHdpZHRoPSI0OCUiIHNyYz0ibm10L2czZG9jL2lt
Zy9hdHRlbnRpb25fbWVjaGFuaXNtLmpwZyIgLz4KPGJyPgpGaWd1cmUgNS4g
PGI+QXR0ZW50aW9uIG1lY2hhbmlzbTwvYj4g4oCTIGV4YW1wbGUgb2YgYW4g
YXR0ZW50aW9uLWJhc2VkIE5NVCBzeXN0ZW0KYXMgZGVzY3JpYmVkIGluIChM
dW9uZyBldCBhbC4sIDIwMTUpIC4gV2UgaGlnaGxpZ2h0IGluIGRldGFpbCB0
aGUgZmlyc3Qgc3RlcCBvZgp0aGUgYXR0ZW50aW9uIGNvbXB1dGF0aW9uLiBG
b3IgY2xhcml0eSwgd2UgZG9uJ3Qgc2hvdyB0aGUgZW1iZWRkaW5nIGFuZApw
cm9qZWN0aW9uIGxheWVycyBpbiBGaWd1cmUgKDIpLgo8L3A+CgpBcyBpbGx1
c3RyYXRlZCBpbiBGaWd1cmUgNSwgdGhlIGF0dGVudGlvbiBjb21wdXRhdGlv
biBoYXBwZW5zIGF0IGV2ZXJ5IGRlY29kZXIKdGltZSBzdGVwLiAgSXQgY29u
c2lzdHMgb2YgdGhlIGZvbGxvd2luZyBzdGFnZXM6CgoxLiBUaGUgY3VycmVu
dCB0YXJnZXQgaGlkZGVuIHN0YXRlIGlzIGNvbXBhcmVkIHdpdGggYWxsIHNv
dXJjZSBzdGF0ZXMgdG8gZGVyaXZlCiAgICphdHRlbnRpb24gd2VpZ2h0cyog
KGNhbiBiZSB2aXN1YWxpemVkIGFzIGluIEZpZ3VyZSA0KS4KMS4gQmFzZWQg
b24gdGhlIGF0dGVudGlvbiB3ZWlnaHRzIHdlIGNvbXB1dGUgYSAqY29udGV4
dCB2ZWN0b3IqIGFzIHRoZSB3ZWlnaHRlZAogICBhdmVyYWdlIG9mIHRoZSBz
b3VyY2Ugc3RhdGVzLgoxLiBDb21iaW5lIHRoZSBjb250ZXh0IHZlY3RvciB3
aXRoIHRoZSBjdXJyZW50IHRhcmdldCBoaWRkZW4gc3RhdGUgdG8geWllbGQg
dGhlCiAgIGZpbmFsICphdHRlbnRpb24gdmVjdG9yKgoxLiBUaGUgYXR0ZW50
aW9uIHZlY3RvciBpcyBmZWQgYXMgYW4gaW5wdXQgdG8gdGhlIG5leHQgdGlt
ZSBzdGVwICgqaW5wdXQKICAgZmVlZGluZyopLiAgVGhlIGZpcnN0IHRocmVl
IHN0ZXBzIGNhbiBiZSBzdW1tYXJpemVkIGJ5IHRoZSBlcXVhdGlvbnMgYmVs
b3c6Cgo8cCBhbGlnbj0iY2VudGVyIj4KPGltZyB3aWR0aD0iODAlIiBzcmM9
Im5tdC9nM2RvYy9pbWcvYXR0ZW50aW9uX2VxdWF0aW9uXzAuanBnIiAvPgo8
YnI+CjwvcD4KCkhlcmUsIHRoZSBmdW5jdGlvbiBgc2NvcmVgIGlzIHVzZWQg
dG8gY29tcGFyZWQgdGhlIHRhcmdldCBoaWRkZW4gc3RhdGUgJCRoX3QkJAp3
aXRoIGVhY2ggb2YgdGhlIHNvdXJjZSBoaWRkZW4gc3RhdGVzICQkXG92ZXJs
aW5le2h9X3MkJCwgYW5kIHRoZSByZXN1bHQgaXMgbm9ybWFsaXplZCB0bwpw
cm9kdWNlZCBhdHRlbnRpb24gd2VpZ2h0cyAoYSBkaXN0cmlidXRpb24gb3Zl
ciBzb3VyY2UgcG9zaXRpb25zKS4gVGhlcmUgYXJlCnZhcmlvdXMgY2hvaWNl
cyBvZiB0aGUgc2NvcmluZyBmdW5jdGlvbjsgcG9wdWxhciBzY29yaW5nIGZ1
bmN0aW9ucyBpbmNsdWRlIHRoZQptdWx0aXBsaWNhdGl2ZSBhbmQgYWRkaXRp
dmUgZm9ybXMgZ2l2ZW4gaW4gRXEuICg0KS4gT25jZSBjb21wdXRlZCwgdGhl
IGF0dGVudGlvbgp2ZWN0b3IgJCRhX3QkJCBpcyB1c2VkIHRvIGRlcml2ZSB0
aGUgc29mdG1heCBsb2dpdCBhbmQgbG9zcy4gIFRoaXMgaXMgc2ltaWxhciB0
byB0aGUKdGFyZ2V0IGhpZGRlbiBzdGF0ZSBhdCB0aGUgdG9wIGxheWVyIG9m
IGEgdmFuaWxsYSBzZXEyc2VxIG1vZGVsLiBUaGUgZnVuY3Rpb24KYGZgIGNh
biBhbHNvIHRha2Ugb3RoZXIgZm9ybXMuCgo8cCBhbGlnbj0iY2VudGVyIj4K
PGltZyB3aWR0aD0iODAlIiBzcmM9Im5tdC9nM2RvYy9pbWcvYXR0ZW50aW9u
X2VxdWF0aW9uXzEuanBnIiAvPgo8YnI+CjwvcD4KClZhcmlvdXMgaW1wbGVt
ZW50YXRpb25zIG9mIGF0dGVudGlvbiBtZWNoYW5pc21zIGNhbiBiZSBmb3Vu
ZAppbgpbYXR0ZW50aW9uX3dyYXBwZXIucHldKGh0dHBzOi8vZ2l0aHViLmNv
bS90ZW5zb3JmbG93L3RlbnNvcmZsb3cvYmxvYi9tYXN0ZXIvdGVuc29yZmxv
dy9jb250cmliL3NlcTJzZXEvcHl0aG9uL29wcy9hdHRlbnRpb25fd3JhcHBl
ci5weSkuCgoqKipXaGF0IG1hdHRlcnMgaW4gdGhlIGF0dGVudGlvbiBtZWNo
YW5pc20/KioqCgpBcyBoaW50ZWQgaW4gdGhlIGFib3ZlIGVxdWF0aW9ucywg
dGhlcmUgYXJlIG1hbnkgZGlmZmVyZW50IGF0dGVudGlvbiB2YXJpYW50cy4K
VGhlc2UgdmFyaWFudHMgZGVwZW5kIG9uIHRoZSBmb3JtIG9mIHRoZSBzY29y
aW5nIGZ1bmN0aW9uIGFuZCB0aGUgYXR0ZW50aW9uCmZ1bmN0aW9uLCBhbmQg
b24gd2hldGhlciB0aGUgcHJldmlvdXMgc3RhdGUgJCRoX3t0LTF9JCQgaXMg
dXNlZCBpbnN0ZWFkIG9mCiQkaF90JCQgaW4gdGhlIHNjb3JpbmcgZnVuY3Rp
b24gYXMgb3JpZ2luYWxseSBzdWdnZXN0ZWQgaW4gKEJhaGRhbmF1IGV0IGFs
LiwKMjAxNSkuIEVtcGlyaWNhbGx5LCB3ZSBmb3VuZCB0aGF0IG9ubHkgY2Vy
dGFpbiBjaG9pY2VzIG1hdHRlci4gRmlyc3QsIHRoZSBiYXNpYwpmb3JtIG9m
IGF0dGVudGlvbiwgaS5lLiwgZGlyZWN0IGNvbm5lY3Rpb25zIGJldHdlZW4g
dGFyZ2V0IGFuZCBzb3VyY2UsIG5lZWRzIHRvCmJlIHByZXNlbnQuIFNlY29u
ZCwgaXQncyBpbXBvcnRhbnQgdG8gZmVlZCB0aGUgYXR0ZW50aW9uIHZlY3Rv
ciB0byB0aGUgbmV4dAp0aW1lc3RlcCB0byBpbmZvcm0gdGhlIG5ldHdvcmsg
YWJvdXQgcGFzdCBhdHRlbnRpb24gZGVjaXNpb25zIGFzIGRlbW9uc3RyYXRl
ZCBpbgooTHVvbmcgZXQgYWwuLCAyMDE1KS4gTGFzdGx5LCBjaG9pY2VzIG9m
IHRoZSBzY29yaW5nIGZ1bmN0aW9uIGNhbiBvZnRlbiByZXN1bHQKaW4gZGlm
ZmVyZW50IHBlcmZvcm1hbmNlLiBTZWUgbW9yZSBpbiB0aGUgW2JlbmNobWFy
ayByZXN1bHRzXSgjYmVuY2htYXJrcykKc2VjdGlvbi4KCiMjIEF0dGVudGlv
biBXcmFwcGVyIEFQSQoKSW4gb3VyIGltcGxlbWVudGF0aW9uIG9mCnRoZQpb
QXR0ZW50aW9uV3JhcHBlcl0oaHR0cHM6Ly9naXRodWIuY29tL3RlbnNvcmZs
b3cvdGVuc29yZmxvdy9ibG9iL21hc3Rlci90ZW5zb3JmbG93L2NvbnRyaWIv
c2VxMnNlcS9weXRob24vb3BzL2F0dGVudGlvbl93cmFwcGVyLnB5KSwKd2Ug
Ym9ycm93IHNvbWUgdGVybWlub2xvZ3kKZnJvbSBbKFdlc3RvbiBldCBhbC4s
IDIwMTUpXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTQxMC4zOTE2KSBpbiB0
aGVpciB3b3JrIG9uCiptZW1vcnkgbmV0d29ya3MqLiBJbnN0ZWFkIG9mIGhh
dmluZyByZWFkYWJsZSAmIHdyaXRhYmxlIG1lbW9yeSwgdGhlIGF0dGVudGlv
bgptZWNoYW5pc20gcHJlc2VudGVkIGluIHRoaXMgdHV0b3JpYWwgaXMgYSAq
cmVhZC1vbmx5KiBtZW1vcnkuIFNwZWNpZmljYWxseSwgdGhlCnNldCBvZiBz
b3VyY2UgaGlkZGVuIHN0YXRlcyAob3IgdGhlaXIgdHJhbnNmb3JtZWQgdmVy
c2lvbnMsIGUuZy4sCiQkV1xvdmVybGluZXtofV9zJCQgaW4gTHVvbmcncyBz
Y29yaW5nIHN0eWxlIG9yICQkV18yXG92ZXJsaW5le2h9X3MkJCBpbgpCYWhk
YW5hdSdzIHNjb3Jpbmcgc3R5bGUpIGlzIHJlZmVycmVkIHRvIGFzIHRoZSAq
Im1lbW9yeSIqLiBBdCBlYWNoIHRpbWUgc3RlcCwKd2UgdXNlIHRoZSBjdXJy
ZW50IHRhcmdldCBoaWRkZW4gc3RhdGUgYXMgYSAqInF1ZXJ5IiogdG8gZGVj
aWRlIG9uIHdoaWNoIHBhcnRzCm9mIHRoZSBtZW1vcnkgdG8gcmVhZC4gIFVz
dWFsbHksIHRoZSBxdWVyeSBuZWVkcyB0byBiZSBjb21wYXJlZCB3aXRoIGtl
eXMKY29ycmVzcG9uZGluZyB0byBpbmRpdmlkdWFsIG1lbW9yeSBzbG90cy4g
SW4gdGhlIGFib3ZlIHByZXNlbnRhdGlvbiBvZiB0aGUKYXR0ZW50aW9uIG1l
Y2hhbmlzbSwgd2UgaGFwcGVuIHRvIHVzZSB0aGUgc2V0IG9mIHNvdXJjZSBo
aWRkZW4gc3RhdGVzIChvciB0aGVpcgp0cmFuc2Zvcm1lZCB2ZXJzaW9ucywg
ZS5nLiwgJCRXXzFoX3QkJCBpbiBCYWhkYW5hdSdzIHNjb3Jpbmcgc3R5bGUp
IGFzCiJrZXlzIi4gT25lIGNhbiBiZSBpbnNwaXJlZCBieSB0aGlzIG1lbW9y
eS1uZXR3b3JrIHRlcm1pbm9sb2d5IHRvIGRlcml2ZSBvdGhlcgpmb3JtcyBv
ZiBhdHRlbnRpb24hCgpUaGFua3MgdG8gdGhlIGF0dGVudGlvbiB3cmFwcGVy
LCBleHRlbmRpbmcgb3VyIHZhbmlsbGEgc2VxMnNlcSBjb2RlIHdpdGgKYXR0
ZW50aW9uIGlzIHRyaXZpYWwuIFRoaXMgcGFydCByZWZlcnMgdG8KZmlsZSBb
KiphdHRlbnRpb25fbW9kZWwucHkqKl0obm10L2F0dGVudGlvbl9tb2RlbC5w
eSkKCkZpcnN0LCB3ZSBuZWVkIHRvIGRlZmluZSBhbiBhdHRlbnRpb24gbWVj
aGFuaXNtLCBlLmcuLCBmcm9tIChMdW9uZyBldCBhbC4sCjIwMTUpOgoKYGBg
IHB5dGhvbgojIGF0dGVudGlvbl9zdGF0ZXM6IFtiYXRjaF9zaXplLCBtYXhf
dGltZSwgbnVtX3VuaXRzXQphdHRlbnRpb25fc3RhdGVzID0gdGYudHJhbnNw
b3NlKGVuY29kZXJfb3V0cHV0cywgWzEsIDAsIDJdKQoKIyBDcmVhdGUgYW4g
YXR0ZW50aW9uIG1lY2hhbmlzbQphdHRlbnRpb25fbWVjaGFuaXNtID0gdGYu
Y29udHJpYi5zZXEyc2VxLkx1b25nQXR0ZW50aW9uKAogICAgbnVtX3VuaXRz
LCBhdHRlbnRpb25fc3RhdGVzLAogICAgbWVtb3J5X3NlcXVlbmNlX2xlbmd0
aD1zb3VyY2Vfc2VxdWVuY2VfbGVuZ3RoKQpgYGAKCkluIHRoZSBwcmV2aW91
cyBbRW5jb2Rlcl0oI2VuY29kZXIpIHNlY3Rpb24sICplbmNvZGVyX291dHB1
dHMqIGlzIHRoZSBzZXQgb2YgYWxsCnNvdXJjZSBoaWRkZW4gc3RhdGVzIGF0
IHRoZSB0b3AgbGF5ZXIgYW5kIGhhcyB0aGUgc2hhcGUgb2YgKlttYXhfdGlt
ZSwKYmF0Y2hfc2l6ZSwgbnVtX3VuaXRzXSogKHNpbmNlIHdlIHVzZSAqZHlu
YW1pY19ybm4qIHdpdGggKnRpbWVfbWFqb3IqIHNldCB0bwoqVHJ1ZSogZm9y
IGVmZmljaWVuY3kpLiBGb3IgdGhlIGF0dGVudGlvbiBtZWNoYW5pc20sIHdl
IG5lZWQgdG8gbWFrZSBzdXJlIHRoZQoibWVtb3J5IiBwYXNzZWQgaW4gaXMg
YmF0Y2ggbWFqb3IsIHNvIHdlIG5lZWQgdG8gdHJhbnNwb3NlCiphdHRlbnRp
b25fc3RhdGVzKi4gV2UgcGFzcyAqc291cmNlX3NlcXVlbmNlX2xlbmd0aCog
dG8gdGhlIGF0dGVudGlvbiBtZWNoYW5pc20KdG8gZW5zdXJlIHRoYXQgdGhl
IGF0dGVudGlvbiB3ZWlnaHRzIGFyZSBwcm9wZXJseSBub3JtYWxpemVkIChv
dmVyIG5vbi1wYWRkaW5nCnBvc2l0aW9ucyBvbmx5KS4KCkhhdmluZyBkZWZp
bmVkIGFuIGF0dGVudGlvbiBtZWNoYW5pc20sIHdlIHVzZSAqQXR0ZW50aW9u
V3JhcHBlciogdG8gd3JhcCB0aGUKZGVjb2RpbmcgY2VsbDoKCmBgYCBweXRo
b24KZGVjb2Rlcl9jZWxsID0gdGYuY29udHJpYi5zZXEyc2VxLkF0dGVudGlv
bldyYXBwZXIoCiAgICBkZWNvZGVyX2NlbGwsIGF0dGVudGlvbl9tZWNoYW5p
c20sCiAgICBhdHRlbnRpb25fbGF5ZXJfc2l6ZT1udW1fdW5pdHMpCmBgYAoK
VGhlIHJlc3Qgb2YgdGhlIGNvZGUgaXMgYWxtb3N0IHRoZSBzYW1lIGFzIGlu
IHRoZSBTZWN0aW9uIFtEZWNvZGVyXSgjZGVjb2RlcikhCgojIyBIYW5kcy1v
biDigJMgYnVpbGRpbmcgYW4gYXR0ZW50aW9uLWJhc2VkIE5NVCBtb2RlbAoK
VG8gZW5hYmxlIGF0dGVudGlvbiwgd2UgbmVlZCB0byB1c2Ugb25lIG9mIGBs
dW9uZ2AsIGBzY2FsZWRfbHVvbmdgLCBgYmFoZGFuYXVgCm9yIGBub3JtZWRf
YmFoZGFuYXVgIGFzIHRoZSB2YWx1ZSBvZiB0aGUgYGF0dGVudGlvbmAgZmxh
ZyBkdXJpbmcgdHJhaW5pbmcuIFRoZQpmbGFnIHNwZWNpZmllcyB3aGljaCBh
dHRlbnRpb24gbWVjaGFuaXNtIHdlIGFyZSBnb2luZyB0byB1c2UuIEluIGFk
ZGl0aW9uLCB3ZQpuZWVkIHRvIGNyZWF0ZSBhIG5ldyBkaXJlY3RvcnkgZm9y
IHRoZSBhdHRlbnRpb24gbW9kZWwsIHNvIHdlIGRvbid0IHJldXNlIHRoZQpw
cmV2aW91c2x5IHRyYWluZWQgYmFzaWMgTk1UIG1vZGVsLgoKUnVuIHRoZSBm
b2xsb3dpbmcgY29tbWFuZCB0byBzdGFydCB0aGUgdHJhaW5pbmc6CgpgYGAg
c2hlbGwKbWtkaXIgL3RtcC9ubXRfYXR0ZW50aW9uX21vZGVsCgpweXRob24g
LW0gbm10Lm5tdCBcCiAgICAtLWF0dGVudGlvbj1zY2FsZWRfbHVvbmcgXAog
ICAgLS1zcmM9dmkgLS10Z3Q9ZW4gXAogICAgLS12b2NhYl9wcmVmaXg9L3Rt
cC9ubXRfZGF0YS92b2NhYiAgXAogICAgLS10cmFpbl9wcmVmaXg9L3RtcC9u
bXRfZGF0YS90cmFpbiBcCiAgICAtLWRldl9wcmVmaXg9L3RtcC9ubXRfZGF0
YS90c3QyMDEyICBcCiAgICAtLXRlc3RfcHJlZml4PS90bXAvbm10X2RhdGEv
dHN0MjAxMyBcCiAgICAtLW91dF9kaXI9L3RtcC9ubXRfYXR0ZW50aW9uX21v
ZGVsIFwKICAgIC0tbnVtX3RyYWluX3N0ZXBzPTEyMDAwIFwKICAgIC0tc3Rl
cHNfcGVyX3N0YXRzPTEwMCBcCiAgICAtLW51bV9sYXllcnM9MiBcCiAgICAt
LW51bV91bml0cz0xMjggXAogICAgLS1kcm9wb3V0PTAuMiBcCiAgICAtLW1l
dHJpY3M9YmxldQpgYGAKCkFmdGVyIHRyYWluaW5nLCB3ZSBjYW4gdXNlIHRo
ZSBzYW1lIGluZmVyZW5jZSBjb21tYW5kIHdpdGggdGhlIG5ldyBvdXRfZGly
IGZvcgppbmZlcmVuY2U6CgpgYGAgc2hlbGwKcHl0aG9uIC1tIG5tdC5ubXQg
XAogICAgLS1vdXRfZGlyPS90bXAvbm10X2F0dGVudGlvbl9tb2RlbCBcCiAg
ICAtLWluZmVyZW5jZV9pbnB1dF9maWxlPS90bXAvbXlfaW5mZXJfZmlsZS52
aSBcCiAgICAtLWluZmVyZW5jZV9vdXRwdXRfZmlsZT0vdG1wL25tdF9hdHRl
bnRpb25fbW9kZWwvb3V0cHV0X2luZmVyCmBgYAoKIyBUaXBzICYgVHJpY2tz
CgojIyBCdWlsZGluZyBUcmFpbmluZywgRXZhbCwgYW5kIEluZmVyZW5jZSBH
cmFwaHMKCldoZW4gYnVpbGRpbmcgYSBtYWNoaW5lIGxlYXJuaW5nIG1vZGVs
IGluIFRlbnNvckZsb3csIGl0J3Mgb2Z0ZW4gYmVzdCB0byBidWlsZAp0aHJl
ZSBzZXBhcmF0ZSBncmFwaHM6CgotICBUaGUgVHJhaW5pbmcgZ3JhcGgsIHdo
aWNoOgogICAgLSAgQmF0Y2hlcywgYnVja2V0cywgYW5kIHBvc3NpYmx5IHN1
YnNhbXBsZXMgaW5wdXQgZGF0YSBmcm9tIGEgc2V0IG9mCiAgICAgICBmaWxl
cy9leHRlcm5hbCBpbnB1dHMuCiAgICAtICBJbmNsdWRlcyB0aGUgZm9yd2Fy
ZCBhbmQgYmFja3Byb3Agb3BzLgogICAgLSAgQ29uc3RydWN0cyB0aGUgb3B0
aW1pemVyLCBhbmQgYWRkcyB0aGUgdHJhaW5pbmcgb3AuCgotICBUaGUgRXZh
bCBncmFwaCwgd2hpY2g6CiAgICAtICBCYXRjaGVzIGFuZCBidWNrZXRzIGlu
cHV0IGRhdGEgZnJvbSBhIHNldCBvZiBmaWxlcy9leHRlcm5hbCBpbnB1dHMu
CiAgICAtICBJbmNsdWRlcyB0aGUgdHJhaW5pbmcgZm9yd2FyZCBvcHMsIGFu
ZCBhZGRpdGlvbmFsIGV2YWx1YXRpb24gb3BzIHRoYXQKICAgICAgIGFyZW4n
dCB1c2VkIGZvciB0cmFpbmluZy4KCi0gIFRoZSBJbmZlcmVuY2UgZ3JhcGgs
IHdoaWNoOgogICAgLSAgTWF5IG5vdCBiYXRjaCBpbnB1dCBkYXRhLgogICAg
LSAgRG9lcyBub3Qgc3Vic2FtcGxlIG9yIGJ1Y2tldCBpbnB1dCBkYXRhLgog
ICAgLSAgUmVhZHMgaW5wdXQgZGF0YSBmcm9tIHBsYWNlaG9sZGVycyAoZGF0
YSBjYW4gYmUgZmVkIGRpcmVjdGx5IHRvIHRoZSBncmFwaAogICAgICAgdmlh
ICpmZWVkX2RpY3QqIG9yIGZyb20gYSBDKysgVGVuc29yRmxvdyBzZXJ2aW5n
IGJpbmFyeSkuCiAgICAtICBJbmNsdWRlcyBhIHN1YnNldCBvZiB0aGUgbW9k
ZWwgZm9yd2FyZCBvcHMsIGFuZCBwb3NzaWJseSBhZGRpdGlvbmFsCiAgICAg
ICBzcGVjaWFsIGlucHV0cy9vdXRwdXRzIGZvciBzdG9yaW5nIHN0YXRlIGJl
dHdlZW4gc2Vzc2lvbi5ydW4gY2FsbHMuCgpCdWlsZGluZyBzZXBhcmF0ZSBn
cmFwaHMgaGFzIHNldmVyYWwgYmVuZWZpdHM6CgotICBUaGUgaW5mZXJlbmNl
IGdyYXBoIGlzIHVzdWFsbHkgdmVyeSBkaWZmZXJlbnQgZnJvbSB0aGUgb3Ro
ZXIgdHdvLCBzbyBpdCBtYWtlcwogICBzZW5zZSB0byBidWlsZCBpdCBzZXBh
cmF0ZWx5LgotICBUaGUgZXZhbCBncmFwaCBiZWNvbWVzIHNpbXBsZXIgc2lu
Y2UgaXQgbm8gbG9uZ2VyIGhhcyBhbGwgdGhlIGFkZGl0aW9uYWwKICAgYmFj
a3Byb3Agb3BzLgotICBEYXRhIGZlZWRpbmcgY2FuIGJlIGltcGxlbWVudGVk
IHNlcGFyYXRlbHkgZm9yIGVhY2ggZ3JhcGguCi0gIFZhcmlhYmxlIHJldXNl
IGlzIG11Y2ggc2ltcGxlci4gIEZvciBleGFtcGxlLCBpbiB0aGUgZXZhbCBn
cmFwaCB0aGVyZSdzIG5vCiAgIG5lZWQgdG8gcmVvcGVuIHZhcmlhYmxlIHNj
b3BlcyB3aXRoICpyZXVzZT1UcnVlKiBqdXN0IGJlY2F1c2UgdGhlIFRyYWlu
aW5nCiAgIG1vZGVsIGNyZWF0ZWQgdGhlc2UgdmFyaWFibGVzIGFscmVhZHku
ICBTbyB0aGUgc2FtZSBjb2RlIGNhbiBiZSByZXVzZWQKICAgd2l0aG91dCBz
cHJpbmtsaW5nICpyZXVzZT0qIGFyZ3VtZW50cyBldmVyeXdoZXJlLgotICBJ
biBkaXN0cmlidXRlZCB0cmFpbmluZywgaXQgaXMgY29tbW9ucGxhY2UgdG8g
aGF2ZSBzZXBhcmF0ZSB3b3JrZXJzIHBlcmZvcm0KICAgdHJhaW5pbmcsIGV2
YWwsIGFuZCBpbmZlcmVuY2UuICBUaGVzZSBuZWVkIHRvIGJ1aWxkIHRoZWly
IG93biBncmFwaHMgYW55d2F5LgogICBTbyBidWlsZGluZyB0aGUgc3lzdGVt
IHRoaXMgd2F5IHByZXBhcmVzIHlvdSBmb3IgZGlzdHJpYnV0ZWQgdHJhaW5p
bmcuCgpUaGUgcHJpbWFyeSBzb3VyY2Ugb2YgY29tcGxleGl0eSBiZWNvbWVz
IGhvdyB0byBzaGFyZSBWYXJpYWJsZXMgYWNyb3NzIHRoZSB0aHJlZQpncmFw
aHMgaW4gYSBzaW5nbGUgbWFjaGluZSBzZXR0aW5nLiBUaGlzIGlzIHNvbHZl
ZCBieSB1c2luZyBhIHNlcGFyYXRlIHNlc3Npb24KZm9yIGVhY2ggZ3JhcGgu
IFRoZSB0cmFpbmluZyBzZXNzaW9uIHBlcmlvZGljYWxseSBzYXZlcyBjaGVj
a3BvaW50cywgYW5kIHRoZQpldmFsIHNlc3Npb24gYW5kIHRoZSBpbmZlciBz
ZXNzaW9uIHJlc3RvcmUgcGFyYW1ldGVycyBmcm9tIGNoZWNrcG9pbnRzLiBU
aGUKZXhhbXBsZSBiZWxvdyBzaG93cyB0aGUgbWFpbiBkaWZmZXJlbmNlcyBi
ZXR3ZWVuIHRoZSB0d28gYXBwcm9hY2hlcy4KCioqQmVmb3JlOiBUaHJlZSBt
b2RlbHMgaW4gYSBzaW5nbGUgZ3JhcGggYW5kIHNoYXJpbmcgYSBzaW5nbGUg
U2Vzc2lvbioqCgpgYGAgcHl0aG9uCndpdGggdGYudmFyaWFibGVfc2NvcGUo
J3Jvb3QnKToKICB0cmFpbl9pbnB1dHMgPSB0Zi5wbGFjZWhvbGRlcigpCiAg
dHJhaW5fb3AsIGxvc3MgPSBCdWlsZFRyYWluTW9kZWwodHJhaW5faW5wdXRz
KQogIGluaXRpYWxpemVyID0gdGYuZ2xvYmFsX3ZhcmlhYmxlc19pbml0aWFs
aXplcigpCgp3aXRoIHRmLnZhcmlhYmxlX3Njb3BlKCdyb290JywgcmV1c2U9
VHJ1ZSk6CiAgZXZhbF9pbnB1dHMgPSB0Zi5wbGFjZWhvbGRlcigpCiAgZXZh
bF9sb3NzID0gQnVpbGRFdmFsTW9kZWwoZXZhbF9pbnB1dHMpCgp3aXRoIHRm
LnZhcmlhYmxlX3Njb3BlKCdyb290JywgcmV1c2U9VHJ1ZSk6CiAgaW5mZXJf
aW5wdXRzID0gdGYucGxhY2Vob2xkZXIoKQogIGluZmVyZW5jZV9vdXRwdXQg
PSBCdWlsZEluZmVyZW5jZU1vZGVsKGluZmVyX2lucHV0cykKCnNlc3MgPSB0
Zi5TZXNzaW9uKCkKCnNlc3MucnVuKGluaXRpYWxpemVyKQoKZm9yIGkgaW4g
aXRlcnRvb2xzLmNvdW50KCk6CiAgdHJhaW5faW5wdXRfZGF0YSA9IC4uLgog
IHNlc3MucnVuKFtsb3NzLCB0cmFpbl9vcF0sIGZlZWRfZGljdD17dHJhaW5f
aW5wdXRzOiB0cmFpbl9pbnB1dF9kYXRhfSkKCiAgaWYgaSAlIEVWQUxfU1RF
UFMgPT0gMDoKICAgIHdoaWxlIGRhdGFfdG9fZXZhbDoKICAgICAgZXZhbF9p
bnB1dF9kYXRhID0gLi4uCiAgICAgIHNlc3MucnVuKFtldmFsX2xvc3NdLCBm
ZWVkX2RpY3Q9e2V2YWxfaW5wdXRzOiBldmFsX2lucHV0X2RhdGF9KQoKICBp
ZiBpICUgSU5GRVJfU1RFUFMgPT0gMDoKICAgIHNlc3MucnVuKGluZmVyZW5j
ZV9vdXRwdXQsIGZlZWRfZGljdD17aW5mZXJfaW5wdXRzOiBpbmZlcl9pbnB1
dF9kYXRhfSkKYGBgCgoqKkFmdGVyOiBUaHJlZSBtb2RlbHMgaW4gdGhyZWUg
Z3JhcGhzLCB3aXRoIHRocmVlIFNlc3Npb25zIHNoYXJpbmcgdGhlIHNhbWUg
VmFyaWFibGVzKioKCmBgYCBweXRob24KdHJhaW5fZ3JhcGggPSB0Zi5HcmFw
aCgpCmV2YWxfZ3JhcGggPSB0Zi5HcmFwaCgpCmluZmVyX2dyYXBoID0gdGYu
R3JhcGgoKQoKd2l0aCB0cmFpbl9ncmFwaC5hc19kZWZhdWx0KCk6CiAgdHJh
aW5faXRlcmF0b3IgPSAuLi4KICB0cmFpbl9tb2RlbCA9IEJ1aWxkVHJhaW5N
b2RlbCh0cmFpbl9pdGVyYXRvcikKICBpbml0aWFsaXplciA9IHRmLmdsb2Jh
bF92YXJpYWJsZXNfaW5pdGlhbGl6ZXIoKQoKd2l0aCBldmFsX2dyYXBoLmFz
X2RlZmF1bHQoKToKICBldmFsX2l0ZXJhdG9yID0gLi4uCiAgZXZhbF9tb2Rl
bCA9IEJ1aWxkRXZhbE1vZGVsKGV2YWxfaXRlcmF0b3IpCgp3aXRoIGluZmVy
X2dyYXBoLmFzX2RlZmF1bHQoKToKICBpbmZlcl9pdGVyYXRvciwgaW5mZXJf
aW5wdXRzID0gLi4uCiAgaW5mZXJfbW9kZWwgPSBCdWlsZEluZmVyZW5jZU1v
ZGVsKGluZmVyX2l0ZXJhdG9yKQoKY2hlY2twb2ludHNfcGF0aCA9ICIvdG1w
L21vZGVsL2NoZWNrcG9pbnRzIgoKdHJhaW5fc2VzcyA9IHRmLlNlc3Npb24o
Z3JhcGg9dHJhaW5fZ3JhcGgpCmV2YWxfc2VzcyA9IHRmLlNlc3Npb24oZ3Jh
cGg9ZXZhbF9ncmFwaCkKaW5mZXJfc2VzcyA9IHRmLlNlc3Npb24oZ3JhcGg9
aW5mZXJfZ3JhcGgpCgp0cmFpbl9zZXNzLnJ1bihpbml0aWFsaXplcikKdHJh
aW5fc2Vzcy5ydW4odHJhaW5faXRlcmF0b3IuaW5pdGlhbGl6ZXIpCgpmb3Ig
aSBpbiBpdGVydG9vbHMuY291bnQoKToKCiAgdHJhaW5fbW9kZWwudHJhaW4o
dHJhaW5fc2VzcykKCiAgaWYgaSAlIEVWQUxfU1RFUFMgPT0gMDoKICAgIGNo
ZWNrcG9pbnRfcGF0aCA9IHRyYWluX21vZGVsLnNhdmVyLnNhdmUodHJhaW5f
c2VzcywgY2hlY2twb2ludHNfcGF0aCwgZ2xvYmFsX3N0ZXA9aSkKICAgIGV2
YWxfbW9kZWwuc2F2ZXIucmVzdG9yZShldmFsX3Nlc3MsIGNoZWNrcG9pbnRf
cGF0aCkKICAgIGV2YWxfc2Vzcy5ydW4oZXZhbF9pdGVyYXRvci5pbml0aWFs
aXplcikKICAgIHdoaWxlIGRhdGFfdG9fZXZhbDoKICAgICAgZXZhbF9tb2Rl
bC5ldmFsKGV2YWxfc2VzcykKCiAgaWYgaSAlIElORkVSX1NURVBTID09IDA6
CiAgICBjaGVja3BvaW50X3BhdGggPSB0cmFpbl9tb2RlbC5zYXZlci5zYXZl
KHRyYWluX3Nlc3MsIGNoZWNrcG9pbnRzX3BhdGgsIGdsb2JhbF9zdGVwPWkp
CiAgICBpbmZlcl9tb2RlbC5zYXZlci5yZXN0b3JlKGluZmVyX3Nlc3MsIGNo
ZWNrcG9pbnRfcGF0aCkKICAgIGluZmVyX3Nlc3MucnVuKGluZmVyX2l0ZXJh
dG9yLmluaXRpYWxpemVyLCBmZWVkX2RpY3Q9e2luZmVyX2lucHV0czogaW5m
ZXJfaW5wdXRfZGF0YX0pCiAgICB3aGlsZSBkYXRhX3RvX2luZmVyOgogICAg
ICBpbmZlcl9tb2RlbC5pbmZlcihpbmZlcl9zZXNzKQpgYGAKCk5vdGljZSBo
b3cgdGhlIGxhdHRlciBhcHByb2FjaCBpcyAicmVhZHkiIHRvIGJlIGNvbnZl
cnRlZCB0byBhIGRpc3RyaWJ1dGVkCnZlcnNpb24uCgpPbmUgb3RoZXIgZGlm
ZmVyZW5jZSBpbiB0aGUgbmV3IGFwcHJvYWNoIGlzIHRoYXQgaW5zdGVhZCBv
ZiB1c2luZyAqZmVlZF9kaWN0cyoKdG8gZmVlZCBkYXRhIGF0IGVhY2ggKnNl
c3Npb24ucnVuKiBjYWxsIChhbmQgdGhlcmVieSBwZXJmb3JtaW5nIG91ciBv
d24KYmF0Y2hpbmcsIGJ1Y2tldGluZywgYW5kIG1hbmlwdWxhdGluZyBvZiBk
YXRhKSwgd2UgdXNlIHN0YXRlZnVsIGl0ZXJhdG9yCm9iamVjdHMuICBUaGVz
ZSBpdGVyYXRvcnMgbWFrZSB0aGUgaW5wdXQgcGlwZWxpbmUgbXVjaCBlYXNp
ZXIgaW4gYm90aCB0aGUKc2luZ2xlLW1hY2hpbmUgYW5kIGRpc3RyaWJ1dGVk
IHNldHRpbmcuIFdlIHdpbGwgY292ZXIgdGhlIG5ldyBpbnB1dCBkYXRhCnBp
cGVsaW5lIChhcyBpbnRyb2R1Y2VkIGluIFRlbnNvckZsb3cgMS4yKSBpbiB0
aGUgbmV4dCBzZWN0aW9uLgoKIyMgRGF0YSBJbnB1dCBQaXBlbGluZQoKUHJp
b3IgdG8gVGVuc29yRmxvdyAxLjIsIHVzZXJzIGhhZCB0d28gb3B0aW9ucyBm
b3IgZmVlZGluZyBkYXRhIHRvIHRoZQpUZW5zb3JGbG93IHRyYWluaW5nIGFu
ZCBldmFsIHBpcGVsaW5lczoKCjEuIEZlZWQgZGF0YSBkaXJlY3RseSB2aWEg
KmZlZWRfZGljdCogYXQgZWFjaCB0cmFpbmluZyAqc2Vzc2lvbi5ydW4qIGNh
bGwuCjEuIFVzZSB0aGUgcXVldWVpbmcgbWVjaGFuaXNtcyBpbiAqdGYudHJh
aW4qIChlLmcuICp0Zi50cmFpbi5iYXRjaCopIGFuZAogICAqdGYuY29udHJp
Yi50cmFpbiouCjEuIFVzZSBoZWxwZXJzIGZyb20gYSBoaWdoZXIgbGV2ZWwg
ZnJhbWV3b3JrIGxpa2UgKnRmLmNvbnRyaWIubGVhcm4qIG9yCiAgICp0Zi5j
b250cmliLnNsaW0qICh3aGljaCBlZmZlY3RpdmVseSB1c2UgIzIpLgoKVGhl
IGZpcnN0IGFwcHJvYWNoIGlzIGVhc2llciBmb3IgdXNlcnMgd2hvIGFyZW4n
dCBmYW1pbGlhciB3aXRoIFRlbnNvckZsb3cgb3IKbmVlZCB0byBkbyBleG90
aWMgaW5wdXQgbW9kaWZpY2F0aW9uIChpLmUuLCB0aGVpciBvd24gbWluaWJh
dGNoIHF1ZXVlaW5nKSB0aGF0CmNhbiBvbmx5IGJlIGRvbmUgaW4gUHl0aG9u
LiAgVGhlIHNlY29uZCBhbmQgdGhpcmQgYXBwcm9hY2hlcyBhcmUgbW9yZSBz
dGFuZGFyZApidXQgYSBsaXR0bGUgbGVzcyBmbGV4aWJsZTsgdGhleSBhbHNv
IHJlcXVpcmUgc3RhcnRpbmcgbXVsdGlwbGUgcHl0aG9uIHRocmVhZHMKKHF1
ZXVlIHJ1bm5lcnMpLiAgRnVydGhlcm1vcmUsIGlmIHVzZWQgaW5jb3JyZWN0
bHkgcXVldWVzIGNhbiBsZWFkIHRvIGRlYWRsb2NrcwpvciBvcGFxdWUgZXJy
b3IgbWVzc2FnZXMuICBOZXZlcnRoZWxlc3MsIHF1ZXVlcyBhcmUgc2lnbmlm
aWNhbnRseSBtb3JlIGVmZmljaWVudAp0aGFuIHVzaW5nICpmZWVkX2RpY3Qq
IGFuZCBhcmUgdGhlIHN0YW5kYXJkIGZvciBib3RoIHNpbmdsZS1tYWNoaW5l
IGFuZApkaXN0cmlidXRlZCB0cmFpbmluZy4KClN0YXJ0aW5nIGluIFRlbnNv
ckZsb3cgMS4yLCB0aGVyZSBpcyBhIG5ldyBzeXN0ZW0gYXZhaWxhYmxlIGZv
ciByZWFkaW5nIGRhdGEKaW50byBUZW5zb3JGbG93IG1vZGVsczogZGF0YXNl
dCBpdGVyYXRvcnMsIGFzIGZvdW5kIGluIHRoZSAqKnRmLmRhdGEqKgptb2R1
bGUuIERhdGEgaXRlcmF0b3JzIGFyZSBmbGV4aWJsZSwgZWFzeSB0byByZWFz
b24gYWJvdXQgYW5kIHRvIG1hbmlwdWxhdGUsIGFuZApwcm92aWRlIGVmZmlj
aWVuY3kgYW5kIG11bHRpdGhyZWFkaW5nIGJ5IGxldmVyYWdpbmcgdGhlIFRl
bnNvckZsb3cgQysrIHJ1bnRpbWUuCgpBICoqZGF0YXNldCoqIGNhbiBiZSBj
cmVhdGVkIGZyb20gYSBiYXRjaCBkYXRhIFRlbnNvciwgYSBmaWxlbmFtZSwg
b3IgYSBUZW5zb3IKY29udGFpbmluZyBtdWx0aXBsZSBmaWxlbmFtZXMuICBT
b21lIGV4YW1wbGVzOgoKYGBgIHB5dGhvbgojIFRyYWluaW5nIGRhdGFzZXQg
Y29uc2lzdHMgb2YgbXVsdGlwbGUgZmlsZXMuCnRyYWluX2RhdGFzZXQgPSB0
Zi5kYXRhLlRleHRMaW5lRGF0YXNldCh0cmFpbl9maWxlcykKCiMgRXZhbHVh
dGlvbiBkYXRhc2V0IHVzZXMgYSBzaW5nbGUgZmlsZSwgYnV0IHdlIG1heQoj
IHBvaW50IHRvIGEgZGlmZmVyZW50IGZpbGUgZm9yIGVhY2ggZXZhbHVhdGlv
biByb3VuZC4KZXZhbF9maWxlID0gdGYucGxhY2Vob2xkZXIodGYuc3RyaW5n
LCBzaGFwZT0oKSkKZXZhbF9kYXRhc2V0ID0gdGYuZGF0YS5UZXh0TGluZURh
dGFzZXQoZXZhbF9maWxlKQoKIyBGb3IgaW5mZXJlbmNlLCBmZWVkIGlucHV0
IGRhdGEgdG8gdGhlIGRhdGFzZXQgZGlyZWN0bHkgdmlhIGZlZWRfZGljdC4K
aW5mZXJfYmF0Y2ggPSB0Zi5wbGFjZWhvbGRlcih0Zi5zdHJpbmcsIHNoYXBl
PShudW1faW5mZXJfZXhhbXBsZXMsKSkKaW5mZXJfZGF0YXNldCA9IHRmLmRh
dGEuRGF0YXNldC5mcm9tX3RlbnNvcl9zbGljZXMoaW5mZXJfYmF0Y2gpCmBg
YAoKQWxsIGRhdGFzZXRzIGNhbiBiZSB0cmVhdGVkIHNpbWlsYXJseSB2aWEg
aW5wdXQgcHJvY2Vzc2luZy4gIFRoaXMgaW5jbHVkZXMKcmVhZGluZyBhbmQg
Y2xlYW5pbmcgdGhlIGRhdGEsIGJ1Y2tldGluZyAoaW4gdGhlIGNhc2Ugb2Yg
dHJhaW5pbmcgYW5kIGV2YWwpLApmaWx0ZXJpbmcsIGFuZCBiYXRjaGluZy4K
ClRvIGNvbnZlcnQgZWFjaCBzZW50ZW5jZSBpbnRvIHZlY3RvcnMgb2Ygd29y
ZCBzdHJpbmdzLCBmb3IgZXhhbXBsZSwgd2UgdXNlIHRoZQpkYXRhc2V0IG1h
cCB0cmFuc2Zvcm1hdGlvbjoKCmBgYCBweXRob24KZGF0YXNldCA9IGRhdGFz
ZXQubWFwKGxhbWJkYSBzdHJpbmc6IHRmLnN0cmluZ19zcGxpdChbc3RyaW5n
XSkudmFsdWVzKQpgYGAKCldlIGNhbiB0aGVuIHN3aXRjaCBlYWNoIHNlbnRl
bmNlIHZlY3RvciBpbnRvIGEgdHVwbGUgY29udGFpbmluZyBib3RoIHRoZSB2
ZWN0b3IKYW5kIGl0cyBkeW5hbWljIGxlbmd0aDoKCmBgYCBweXRob24KZGF0
YXNldCA9IGRhdGFzZXQubWFwKGxhbWJkYSB3b3JkczogKHdvcmRzLCB0Zi5z
aXplKHdvcmRzKSkKYGBgCgpGaW5hbGx5LCB3ZSBjYW4gcGVyZm9ybSBhIHZv
Y2FidWxhcnkgbG9va3VwIG9uIGVhY2ggc2VudGVuY2UuICBHaXZlbiBhIGxv
b2t1cAp0YWJsZSBvYmplY3QgdGFibGUsIHRoaXMgbWFwIGNvbnZlcnRzIHRo
ZSBmaXJzdCB0dXBsZSBlbGVtZW50cyBmcm9tIGEgdmVjdG9yIG9mCnN0cmlu
Z3MgdG8gYSB2ZWN0b3Igb2YgaW50ZWdlcnMuCgoKYGBgIHB5dGhvbgpkYXRh
c2V0ID0gZGF0YXNldC5tYXAobGFtYmRhIHdvcmRzLCBzaXplOiAodGFibGUu
bG9va3VwKHdvcmRzKSwgc2l6ZSkpCmBgYAoKSm9pbmluZyB0d28gZGF0YXNl
dHMgaXMgYWxzbyBlYXN5LiAgSWYgdHdvIGZpbGVzIGNvbnRhaW4gbGluZS1i
eS1saW5lCnRyYW5zbGF0aW9ucyBvZiBlYWNoIG90aGVyIGFuZCBlYWNoIG9u
ZSBpcyByZWFkIGludG8gaXRzIG93biBkYXRhc2V0LCB0aGVuIGEgbmV3CmRh
dGFzZXQgY29udGFpbmluZyB0aGUgdHVwbGVzIG9mIHRoZSB6aXBwZWQgbGlu
ZXMgY2FuIGJlIGNyZWF0ZWQgdmlhOgoKYGBgIHB5dGhvbgpzb3VyY2VfdGFy
Z2V0X2RhdGFzZXQgPSB0Zi5kYXRhLkRhdGFzZXQuemlwKChzb3VyY2VfZGF0
YXNldCwgdGFyZ2V0X2RhdGFzZXQpKQpgYGAKCkJhdGNoaW5nIG9mIHZhcmlh
YmxlLWxlbmd0aCBzZW50ZW5jZXMgaXMgc3RyYWlnaHRmb3J3YXJkLiBUaGUg
Zm9sbG93aW5nCnRyYW5zZm9ybWF0aW9uIGJhdGNoZXMgKmJhdGNoX3NpemUq
IGVsZW1lbnRzIGZyb20gKnNvdXJjZV90YXJnZXRfZGF0YXNldCosIGFuZApy
ZXNwZWN0aXZlbHkgcGFkcyB0aGUgc291cmNlIGFuZCB0YXJnZXQgdmVjdG9y
cyB0byB0aGUgbGVuZ3RoIG9mIHRoZSBsb25nZXN0CnNvdXJjZSBhbmQgdGFy
Z2V0IHZlY3RvciBpbiBlYWNoIGJhdGNoLgoKYGBgIHB5dGhvbgpiYXRjaGVk
X2RhdGFzZXQgPSBzb3VyY2VfdGFyZ2V0X2RhdGFzZXQucGFkZGVkX2JhdGNo
KAogICAgICAgIGJhdGNoX3NpemUsCiAgICAgICAgcGFkZGVkX3NoYXBlcz0o
KHRmLlRlbnNvclNoYXBlKFtOb25lXSksICAjIHNvdXJjZSB2ZWN0b3JzIG9m
IHVua25vd24gc2l6ZQogICAgICAgICAgICAgICAgICAgICAgICB0Zi5UZW5z
b3JTaGFwZShbXSkpLCAgICAgIyBzaXplKHNvdXJjZSkKICAgICAgICAgICAg
ICAgICAgICAgICAodGYuVGVuc29yU2hhcGUoW05vbmVdKSwgICMgdGFyZ2V0
IHZlY3RvcnMgb2YgdW5rbm93biBzaXplCiAgICAgICAgICAgICAgICAgICAg
ICAgIHRmLlRlbnNvclNoYXBlKFtdKSkpLCAgICAjIHNpemUodGFyZ2V0KQog
ICAgICAgIHBhZGRpbmdfdmFsdWVzPSgoc3JjX2Vvc19pZCwgICMgc291cmNl
IHZlY3RvcnMgcGFkZGVkIG9uIHRoZSByaWdodCB3aXRoIHNyY19lb3NfaWQK
ICAgICAgICAgICAgICAgICAgICAgICAgIDApLCAgICAgICAgICAjIHNpemUo
c291cmNlKSAtLSB1bnVzZWQKICAgICAgICAgICAgICAgICAgICAgICAgKHRn
dF9lb3NfaWQsICAjIHRhcmdldCB2ZWN0b3JzIHBhZGRlZCBvbiB0aGUgcmln
aHQgd2l0aCB0Z3RfZW9zX2lkCiAgICAgICAgICAgICAgICAgICAgICAgICAw
KSkpICAgICAgICAgIyBzaXplKHRhcmdldCkgLS0gdW51c2VkCmBgYAoKVmFs
dWVzIGVtaXR0ZWQgZnJvbSB0aGlzIGRhdGFzZXQgd2lsbCBiZSBuZXN0ZWQg
dHVwbGVzIHdob3NlIHRlbnNvcnMgaGF2ZSBhCmxlZnRtb3N0IGRpbWVuc2lv
biBvZiBzaXplICpiYXRjaF9zaXplKi4gIFRoZSBzdHJ1Y3R1cmUgd2lsbCBi
ZToKCi0gIGl0ZXJhdG9yWzBdWzBdIGhhcyB0aGUgYmF0Y2hlZCBhbmQgcGFk
ZGVkIHNvdXJjZSBzZW50ZW5jZSBtYXRyaWNlcy4KLSAgaXRlcmF0b3JbMF1b
MV0gaGFzIHRoZSBiYXRjaGVkIHNvdXJjZSBzaXplIHZlY3RvcnMuCi0gIGl0
ZXJhdG9yWzFdWzBdIGhhcyB0aGUgYmF0Y2hlZCBhbmQgcGFkZGVkIHRhcmdl
dCBzZW50ZW5jZSBtYXRyaWNlcy4KLSAgaXRlcmF0b3JbMV1bMV0gaGFzIHRo
ZSBiYXRjaGVkIHRhcmdldCBzaXplIHZlY3RvcnMuCgpGaW5hbGx5LCBidWNr
ZXRpbmcgdGhhdCBiYXRjaGVzIHNpbWlsYXJseS1zaXplZCBzb3VyY2Ugc2Vu
dGVuY2VzIHRvZ2V0aGVyIGlzCmFsc28gcG9zc2libGUuICBQbGVhc2Ugc2Vl
IHRoZQpmaWxlClt1dGlscy9pdGVyYXRvcl91dGlscy5weV0obm10L3V0aWxz
L2l0ZXJhdG9yX3V0aWxzLnB5KSBmb3IKbW9yZSBkZXRhaWxzIGFuZCB0aGUg
ZnVsbCBpbXBsZW1lbnRhdGlvbi4KClJlYWRpbmcgZGF0YSBmcm9tIGEgRGF0
YXNldCByZXF1aXJlcyB0aHJlZSBsaW5lcyBvZiBjb2RlOiBjcmVhdGUgdGhl
IGl0ZXJhdG9yLApnZXQgaXRzIHZhbHVlcywgYW5kIGluaXRpYWxpemUgaXQu
CgpgYGAgcHl0aG9uCmJhdGNoZWRfaXRlcmF0b3IgPSBiYXRjaGVkX2RhdGFz
ZXQubWFrZV9pbml0aWFsaXphYmxlX2l0ZXJhdG9yKCkKCigoc291cmNlLCBz
b3VyY2VfbGVuZ3RocyksICh0YXJnZXQsIHRhcmdldF9sZW5ndGhzKSkgPSBi
YXRjaGVkX2l0ZXJhdG9yLmdldF9uZXh0KCkKCiMgQXQgaW5pdGlhbGl6YXRp
b24gdGltZS4Kc2Vzc2lvbi5ydW4oYmF0Y2hlZF9pdGVyYXRvci5pbml0aWFs
aXplciwgZmVlZF9kaWN0PXsuLi59KQpgYGAKCk9uY2UgdGhlIGl0ZXJhdG9y
IGlzIGluaXRpYWxpemVkLCBldmVyeSAqc2Vzc2lvbi5ydW4qIGNhbGwgdGhh
dCBhY2Nlc3NlcyBzb3VyY2UKb3IgdGFyZ2V0IHRlbnNvcnMgd2lsbCByZXF1
ZXN0IHRoZSBuZXh0IG1pbmliYXRjaCBmcm9tIHRoZSB1bmRlcmx5aW5nIGRh
dGFzZXQuCgojIyBPdGhlciBkZXRhaWxzIGZvciBiZXR0ZXIgTk1UIG1vZGVs
cwoKIyMjIEJpZGlyZWN0aW9uYWwgUk5OcwoKQmlkaXJlY3Rpb25hbGl0eSBv
biB0aGUgZW5jb2RlciBzaWRlIGdlbmVyYWxseSBnaXZlcyBiZXR0ZXIgcGVy
Zm9ybWFuY2UgKHdpdGgKc29tZSBkZWdyYWRhdGlvbiBpbiBzcGVlZCBhcyBt
b3JlIGxheWVycyBhcmUgdXNlZCkuIEhlcmUsIHdlIGdpdmUgYSBzaW1wbGlm
aWVkCmV4YW1wbGUgb2YgaG93IHRvIGJ1aWxkIGFuIGVuY29kZXIgd2l0aCBh
IHNpbmdsZSBiaWRpcmVjdGlvbmFsIGxheWVyOgoKYGBgIHB5dGhvbgojIENv
bnN0cnVjdCBmb3J3YXJkIGFuZCBiYWNrd2FyZCBjZWxscwpmb3J3YXJkX2Nl
bGwgPSB0Zi5ubi5ybm5fY2VsbC5CYXNpY0xTVE1DZWxsKG51bV91bml0cykK
YmFja3dhcmRfY2VsbCA9IHRmLm5uLnJubl9jZWxsLkJhc2ljTFNUTUNlbGwo
bnVtX3VuaXRzKQoKYmlfb3V0cHV0cywgZW5jb2Rlcl9zdGF0ZSA9IHRmLm5u
LmJpZGlyZWN0aW9uYWxfZHluYW1pY19ybm4oCiAgICBmb3J3YXJkX2NlbGws
IGJhY2t3YXJkX2NlbGwsIGVuY29kZXJfZW1iX2lucCwKICAgIHNlcXVlbmNl
X2xlbmd0aD1zb3VyY2Vfc2VxdWVuY2VfbGVuZ3RoLCB0aW1lX21ham9yPVRy
dWUpCmVuY29kZXJfb3V0cHV0cyA9IHRmLmNvbmNhdChiaV9vdXRwdXRzLCAt
MSkKYGBgCgpUaGUgdmFyaWFibGVzICplbmNvZGVyX291dHB1dHMqIGFuZCAq
ZW5jb2Rlcl9zdGF0ZSogY2FuIGJlIHVzZWQgaW4gdGhlIHNhbWUgd2F5CmFz
IGluIFNlY3Rpb24gRW5jb2Rlci4gTm90ZSB0aGF0LCBmb3IgbXVsdGlwbGUg
YmlkaXJlY3Rpb25hbCBsYXllcnMsIHdlIG5lZWQgdG8KbWFuaXB1bGF0ZSB0
aGUgZW5jb2Rlcl9zdGF0ZSBhIGJpdCwgc2VlIFttb2RlbC5weV0obm10L21v
ZGVsLnB5KSwgbWV0aG9kCipfYnVpbGRfYmlkaXJlY3Rpb25hbF9ybm4oKSog
Zm9yIG1vcmUgZGV0YWlscy4KCiMjIyBCZWFtIHNlYXJjaAoKV2hpbGUgZ3Jl
ZWR5IGRlY29kaW5nIGNhbiBnaXZlIHVzIHF1aXRlIHJlYXNvbmFibGUgdHJh
bnNsYXRpb24gcXVhbGl0eSwgYSBiZWFtCnNlYXJjaCBkZWNvZGVyIGNhbiBm
dXJ0aGVyIGJvb3N0IHBlcmZvcm1hbmNlLiBUaGUgaWRlYSBvZiBiZWFtIHNl
YXJjaCBpcyB0bwpiZXR0ZXIgZXhwbG9yZSB0aGUgc2VhcmNoIHNwYWNlIG9m
IGFsbCBwb3NzaWJsZSB0cmFuc2xhdGlvbnMgYnkga2VlcGluZyBhcm91bmQg
YQpzbWFsbCBzZXQgb2YgdG9wIGNhbmRpZGF0ZXMgYXMgd2UgdHJhbnNsYXRl
LiBUaGUgc2l6ZSBvZiB0aGUgYmVhbSBpcyBjYWxsZWQKKmJlYW0gd2lkdGgq
OyBhIG1pbmltYWwgYmVhbSB3aWR0aCBvZiwgc2F5IHNpemUgMTAsIGlzIGdl
bmVyYWxseSBzdWZmaWNpZW50LiBGb3IKbW9yZSBpbmZvcm1hdGlvbiwgd2Ug
cmVmZXIgcmVhZGVycyB0byBTZWN0aW9uIDcuMi4zCm9mIFtOZXViaWcsICgy
MDE3KV0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDMuMDE2MTkpLiBIZXJl
J3MgYW4gZXhhbXBsZSBvZiBob3cKYmVhbSBzZWFyY2ggY2FuIGJlIGRvbmU6
CgpgYGAgcHl0aG9uCiMgUmVwbGljYXRlIGVuY29kZXIgaW5mb3MgYmVhbV93
aWR0aCB0aW1lcwpkZWNvZGVyX2luaXRpYWxfc3RhdGUgPSB0Zi5jb250cmli
LnNlcTJzZXEudGlsZV9iYXRjaCgKICAgIGVuY29kZXJfc3RhdGUsIG11bHRp
cGxpZXI9aHBhcmFtcy5iZWFtX3dpZHRoKQoKIyBEZWZpbmUgYSBiZWFtLXNl
YXJjaCBkZWNvZGVyCmRlY29kZXIgPSB0Zi5jb250cmliLnNlcTJzZXEuQmVh
bVNlYXJjaERlY29kZXIoCiAgICAgICAgY2VsbD1kZWNvZGVyX2NlbGwsCiAg
ICAgICAgZW1iZWRkaW5nPWVtYmVkZGluZ19kZWNvZGVyLAogICAgICAgIHN0
YXJ0X3Rva2Vucz1zdGFydF90b2tlbnMsCiAgICAgICAgZW5kX3Rva2VuPWVu
ZF90b2tlbiwKICAgICAgICBpbml0aWFsX3N0YXRlPWRlY29kZXJfaW5pdGlh
bF9zdGF0ZSwKICAgICAgICBiZWFtX3dpZHRoPWJlYW1fd2lkdGgsCiAgICAg
ICAgb3V0cHV0X2xheWVyPXByb2plY3Rpb25fbGF5ZXIsCiAgICAgICAgbGVu
Z3RoX3BlbmFsdHlfd2VpZ2h0PTAuMCwKICAgICAgICBjb3ZlcmFnZV9wZW5h
bHR5X3dlaWdodD0wLjApCgojIER5bmFtaWMgZGVjb2RpbmcKb3V0cHV0cywg
XyA9IHRmLmNvbnRyaWIuc2VxMnNlcS5keW5hbWljX2RlY29kZShkZWNvZGVy
LCAuLi4pCmBgYAoKTm90ZSB0aGF0IHRoZSBzYW1lICpkeW5hbWljX2RlY29k
ZSgpKiBBUEkgY2FsbCBpcyB1c2VkLCBzaW1pbGFyIHRvIHRoZQpTZWN0aW9u
IFtEZWNvZGVyXSgjZGVjb2RlcikuIE9uY2UgZGVjb2RlZCwgd2UgY2FuIGFj
Y2VzcyB0aGUgdHJhbnNsYXRpb25zIGFzCmZvbGxvd3M6CgpgYGAgcHl0aG9u
CnRyYW5zbGF0aW9ucyA9IG91dHB1dHMucHJlZGljdGVkX2lkcwojIE1ha2Ug
c3VyZSB0cmFuc2xhdGlvbnMgc2hhcGUgaXMgW2JhdGNoX3NpemUsIGJlYW1f
d2lkdGgsIHRpbWVdCmlmIHNlbGYudGltZV9tYWpvcjoKICAgdHJhbnNsYXRp
b25zID0gdGYudHJhbnNwb3NlKHRyYW5zbGF0aW9ucywgcGVybT1bMSwgMiwg
MF0pCmBgYAoKU2VlIFttb2RlbC5weV0obm10L21vZGVsLnB5KSwgbWV0aG9k
ICpfYnVpbGRfZGVjb2RlcigpKiBmb3IgbW9yZSBkZXRhaWxzLgoKIyMjIEh5
cGVycGFyYW1ldGVycwoKVGhlcmUgYXJlIHNldmVyYWwgaHlwZXJwYXJhbWV0
ZXJzIHRoYXQgY2FuIGxlYWQgdG8gYWRkaXRpb25hbApwZXJmb3JtYW5jZXMu
IEhlcmUsIHdlIGxpc3Qgc29tZSBiYXNlZCBvbiBvdXIgb3duIGV4cGVyaWVu
Y2UgWyBEaXNjbGFpbWVyczoKb3RoZXJzIG1pZ2h0IG5vdCBhZ3JlZSBvbiB0
aGluZ3Mgd2Ugd3JvdGUhIF0uCgoqKipPcHRpbWl6ZXIqKio6IHdoaWxlIEFk
YW0gY2FuIGxlYWQgdG8gcmVhc29uYWJsZSByZXN1bHRzIGZvciAidW5mYW1p
bGlhciIKYXJjaGl0ZWN0dXJlcywgU0dEIHdpdGggc2NoZWR1bGluZyB3aWxs
IGdlbmVyYWxseSBsZWFkIHRvIGJldHRlciBwZXJmb3JtYW5jZSBpZgp5b3Ug
Y2FuIHRyYWluIHdpdGggU0dELgoKKioqQXR0ZW50aW9uKioqOiBCYWhkYW5h
dS1zdHlsZSBhdHRlbnRpb24gb2Z0ZW4gcmVxdWlyZXMgYmlkaXJlY3Rpb25h
bGl0eSBvbiB0aGUKZW5jb2RlciBzaWRlIHRvIHdvcmsgd2VsbDsgd2hlcmVh
cyBMdW9uZy1zdHlsZSBhdHRlbnRpb24gdGVuZHMgdG8gd29yayB3ZWxsIGZv
cgpkaWZmZXJlbnQgc2V0dGluZ3MuIEZvciB0aGlzIHR1dG9yaWFsIGNvZGUs
IHdlIHJlY29tbWVuZCB1c2luZyB0aGUgdHdvIGltcHJvdmVkCnZhcmlhbnRz
IG9mIEx1b25nICYgQmFoZGFuYXUtc3R5bGUgYXR0ZW50aW9uczogKnNjYWxl
ZF9sdW9uZyogJiAqbm9ybWVkCmJhaGRhbmF1Ki4KCiMjIyBNdWx0aS1HUFUg
dHJhaW5pbmcKClRyYWluaW5nIGEgTk1UIG1vZGVsIG1heSB0YWtlIHNldmVy
YWwgZGF5cy4gUGxhY2luZyBkaWZmZXJlbnQgUk5OIGxheWVycyBvbgpkaWZm
ZXJlbnQgR1BVcyBjYW4gaW1wcm92ZSB0aGUgdHJhaW5pbmcgc3BlZWQuIEhl
cmXigJlzIGFuIGV4YW1wbGUgdG8gY3JlYXRlClJOTiBsYXllcnMgb24gbXVs
dGlwbGUgR1BVcy4KCmBgYCBweXRob24KY2VsbHMgPSBbXQpmb3IgaSBpbiBy
YW5nZShudW1fbGF5ZXJzKToKICBjZWxscy5hcHBlbmQodGYuY29udHJpYi5y
bm4uRGV2aWNlV3JhcHBlcigKICAgICAgdGYuY29udHJpYi5ybm4uTFNUTUNl
bGwobnVtX3VuaXRzKSwKICAgICAgIi9ncHU6JWQiICUgKG51bV9sYXllcnMg
JSBudW1fZ3B1cykpKQpjZWxsID0gdGYuY29udHJpYi5ybm4uTXVsdGlSTk5D
ZWxsKGNlbGxzKQpgYGAKCkluIGFkZGl0aW9uLCB3ZSBuZWVkIHRvIGVuYWJs
ZSB0aGUgYGNvbG9jYXRlX2dyYWRpZW50c193aXRoX29wc2Agb3B0aW9uIGlu
CmB0Zi5ncmFkaWVudHNgIHRvIHBhcmFsbGVsaXplIHRoZSBncmFkaWVudHMg
Y29tcHV0YXRpb24uCgpZb3UgbWF5IG5vdGljZSB0aGUgc3BlZWQgaW1wcm92
ZW1lbnQgb2YgdGhlIGF0dGVudGlvbiBiYXNlZCBOTVQgbW9kZWwgaXMgdmVy
eQpzbWFsbCBhcyB0aGUgbnVtYmVyIG9mIEdQVXMgaW5jcmVhc2VzLiBPbmUg
bWFqb3IgZHJhd2JhY2sgb2YgdGhlIHN0YW5kYXJkCmF0dGVudGlvbiBhcmNo
aXRlY3R1cmUgaXMgdXNpbmcgdGhlIHRvcCAoZmluYWwpIGxheWVy4oCZcyBv
dXRwdXQgdG8gcXVlcnkKYXR0ZW50aW9uIGF0IGVhY2ggdGltZSBzdGVwLiBU
aGF0IG1lYW5zIGVhY2ggZGVjb2Rpbmcgc3RlcCBtdXN0IHdhaXQgaXRzCnBy
ZXZpb3VzIHN0ZXAgY29tcGxldGVseSBmaW5pc2hlZDsgaGVuY2UsIHdlIGNh
buKAmXQgcGFyYWxsZWxpemUgdGhlIGRlY29kaW5nCnByb2Nlc3MgYnkgc2lt
cGx5IHBsYWNpbmcgUk5OIGxheWVycyBvbiBtdWx0aXBsZSBHUFVzLgoKVGhl
IFtHTk1UIGF0dGVudGlvbiBhcmNoaXRlY3R1cmVdKGh0dHBzOi8vYXJ4aXYu
b3JnL3BkZi8xNjA5LjA4MTQ0LnBkZikKcGFyYWxsZWxpemVzIHRoZSBkZWNv
ZGVyJ3MgY29tcHV0YXRpb24gYnkgdXNpbmcgdGhlIGJvdHRvbSAoZmlyc3Qp
IGxheWVy4oCZcwpvdXRwdXQgdG8gcXVlcnkgYXR0ZW50aW9uLiBUaGVyZWZv
cmUsIGVhY2ggZGVjb2Rpbmcgc3RlcCBjYW4gc3RhcnQgYXMgc29vbiBhcwpp
dHMgcHJldmlvdXMgc3RlcCdzIGZpcnN0IGxheWVyIGFuZCBhdHRlbnRpb24g
Y29tcHV0YXRpb24gZmluaXNoZWQuIFdlCmltcGxlbWVudGVkIHRoZSBhcmNo
aXRlY3R1cmUgaW4KW0dOTVRBdHRlbnRpb25NdWx0aUNlbGxdKG5tdC9nbm10
X21vZGVsLnB5KSwKYSBzdWJjbGFzcyBvZiAqdGYuY29udHJpYi5ybm4uTXVs
dGlSTk5DZWxsKi4gSGVyZeKAmXMgYW4gZXhhbXBsZSBvZiBob3cgdG8gY3Jl
YXRlCmEgZGVjb2RlciBjZWxsIHdpdGggdGhlICpHTk1UQXR0ZW50aW9uTXVs
dGlDZWxsKi4KCmBgYCBweXRob24KY2VsbHMgPSBbXQpmb3IgaSBpbiByYW5n
ZShudW1fbGF5ZXJzKToKICBjZWxscy5hcHBlbmQodGYuY29udHJpYi5ybm4u
RGV2aWNlV3JhcHBlcigKICAgICAgdGYuY29udHJpYi5ybm4uTFNUTUNlbGwo
bnVtX3VuaXRzKSwKICAgICAgIi9ncHU6JWQiICUgKG51bV9sYXllcnMgJSBu
dW1fZ3B1cykpKQphdHRlbnRpb25fY2VsbCA9IGNlbGxzLnBvcCgwKQphdHRl
bnRpb25fY2VsbCA9IHRmLmNvbnRyaWIuc2VxMnNlcS5BdHRlbnRpb25XcmFw
cGVyKAogICAgYXR0ZW50aW9uX2NlbGwsCiAgICBhdHRlbnRpb25fbWVjaGFu
aXNtLAogICAgYXR0ZW50aW9uX2xheWVyX3NpemU9Tm9uZSwgICMgZG9uJ3Qg
YWRkIGFuIGFkZGl0aW9uYWwgZGVuc2UgbGF5ZXIuCiAgICBvdXRwdXRfYXR0
ZW50aW9uPUZhbHNlLCkKY2VsbCA9IEdOTVRBdHRlbnRpb25NdWx0aUNlbGwo
YXR0ZW50aW9uX2NlbGwsIGNlbGxzKQpgYGAKCiMgQmVuY2htYXJrcwoKIyMg
SVdTTFQgRW5nbGlzaC1WaWV0bmFtZXNlCgpUcmFpbjogMTMzSyBleGFtcGxl
cywgdm9jYWI9dm9jYWIuKHZpfGVuKSwgdHJhaW49dHJhaW4uKHZpfGVuKQpk
ZXY9dHN0MjAxMi4odml8ZW4pLAp0ZXN0PXRzdDIwMTMuKHZpfGVuKSwgW2Rv
d25sb2FkIHNjcmlwdF0obm10L3NjcmlwdHMvZG93bmxvYWRfaXdzbHQxNS5z
aCkuCgoqKipUcmFpbmluZyBkZXRhaWxzKioqLiBXZSB0cmFpbiAyLWxheWVy
IExTVE1zIG9mIDUxMiB1bml0cyB3aXRoIGJpZGlyZWN0aW9uYWwKZW5jb2Rl
ciAoaS5lLiwgMSBiaWRpcmVjdGlvbmFsIGxheWVycyBmb3IgdGhlIGVuY29k
ZXIpLCBlbWJlZGRpbmcgZGltCmlzIDUxMi4gTHVvbmdBdHRlbnRpb24gKHNj
YWxlPVRydWUpIGlzIHVzZWQgdG9nZXRoZXIgd2l0aCBkcm9wb3V0IGtlZXBf
cHJvYiBvZgowLjguIEFsbCBwYXJhbWV0ZXJzIGFyZSB1bmlmb3JtbHkuIFdl
IHVzZSBTR0Qgd2l0aCBsZWFybmluZyByYXRlIDEuMCBhcyBmb2xsb3dzOgp0
cmFpbiBmb3IgMTJLIHN0ZXBzICh+IDEyIGVwb2Nocyk7IGFmdGVyIDhLIHN0
ZXBzLCB3ZSBzdGFydCBoYWx2aW5nIGxlYXJuaW5nCnJhdGUgZXZlcnkgMUsg
c3RlcC4KCioqKlJlc3VsdHMqKiouCgpCZWxvdyBhcmUgdGhlIGF2ZXJhZ2Vk
IHJlc3VsdHMgb2YgMiBtb2RlbHMKKFttb2RlbCAxXShodHRwOi8vZG93bmxv
YWQudGVuc29yZmxvdy5vcmcvbW9kZWxzL25tdC9lbnZpX21vZGVsXzEuemlw
KSwKW21vZGVsIDJdKGh0dHA6Ly9kb3dubG9hZC50ZW5zb3JmbG93Lm9yZy9t
b2RlbHMvbm10L2VudmlfbW9kZWxfMi56aXApKS5cCldlIG1lYXN1cmUgdGhl
IHRyYW5zbGF0aW9uIHF1YWxpdHkgaW4gdGVybXMgb2YgQkxFVSBzY29yZXMg
WyhQYXBpbmVuaSBldCBhbC4sIDIwMDIpXShodHRwOi8vd3d3LmFjbHdlYi5v
cmcvYW50aG9sb2d5L1AwMi0xMDQwLnBkZikuCgpTeXN0ZW1zIHwgdHN0MjAx
MiAoZGV2KSB8IHRlc3QyMDEzICh0ZXN0KQotLS0gfCA6LS0tOiB8IDotLS06
Ck5NVCAoZ3JlZWR5KSB8IDIzLjIgfCAyNS41Ck5NVCAoYmVhbT0xMCkgfCAy
My44IHwgKioyNi4xKioKWyhMdW9uZyAmIE1hbm5pbmcsIDIwMTUpXShodHRw
czovL25scC5zdGFuZm9yZC5lZHUvcHVicy9sdW9uZy1tYW5uaW5nLWl3c2x0
MTUucGRmKSB8IC0gfCAyMy4zCgoqKlRyYWluaW5nIFNwZWVkKio6ICgwLjM3
cyBzdGVwLXRpbWUsIDE1LjNLIHdwcykgb24gKks0MG0qICYgKDAuMTdzIHN0
ZXAtdGltZSwgMzIuMksgd3BzKSBvbiAqVGl0YW5YKi5cCkhlcmUsIHN0ZXAt
dGltZSBtZWFucyB0aGUgdGltZSB0YWtlbiB0byBydW4gb25lIG1pbmktYmF0
Y2ggKG9mIHNpemUgMTI4KS4gRm9yIHdwcywgd2UgY291bnQgd29yZHMgb24g
Ym90aCB0aGUgc291cmNlIGFuZCB0YXJnZXQuCgojIyBXTVQgR2VybWFuLUVu
Z2xpc2gKClRyYWluOiA0LjVNIGV4YW1wbGVzLCB2b2NhYj12b2NhYi5icGUu
MzIwMDAuKGRlfGVuKSwKdHJhaW49dHJhaW4udG9rLmNsZWFuLmJwZS4zMjAw
MC4oZGV8ZW4pLCBkZXY9bmV3c3Rlc3QyMDEzLnRvay5icGUuMzIwMDAuKGRl
fGVuKSwKdGVzdD1uZXdzdGVzdDIwMTUudG9rLmJwZS4zMjAwMC4oZGV8ZW4p
LApbZG93bmxvYWQgc2NyaXB0XShubXQvc2NyaXB0cy93bXQxNl9lbl9kZS5z
aCkKCioqKlRyYWluaW5nIGRldGFpbHMqKiouIE91ciB0cmFpbmluZyBoeXBl
cnBhcmFtZXRlcnMgYXJlIHNpbWlsYXIgdG8gdGhlCkVuZ2xpc2gtVmlldG5h
bWVzZSBleHBlcmltZW50cyBleGNlcHQgZm9yIHRoZSBmb2xsb3dpbmcgZGV0
YWlscy4gVGhlIGRhdGEgaXMKc3BsaXQgaW50byBzdWJ3b3JkIHVuaXRzIHVz
aW5nIFtCUEVdKGh0dHBzOi8vZ2l0aHViLmNvbS9yc2VubnJpY2gvc3Vid29y
ZC1ubXQpCigzMksgb3BlcmF0aW9ucykuIFdlIHRyYWluIDQtbGF5ZXIgTFNU
TXMgb2YgMTAyNCB1bml0cyB3aXRoIGJpZGlyZWN0aW9uYWwKZW5jb2RlciAo
aS5lLiwgMiBiaWRpcmVjdGlvbmFsIGxheWVycyBmb3IgdGhlIGVuY29kZXIp
LCBlbWJlZGRpbmcgZGltCmlzIDEwMjQuIFdlIHRyYWluIGZvciAzNTBLIHN0
ZXBzICh+IDEwIGVwb2Nocyk7IGFmdGVyIDE3MEsgc3RlcHMsIHdlIHN0YXJ0
CmhhbHZpbmcgbGVhcm5pbmcgcmF0ZSBldmVyeSAxN0sgc3RlcC4KCioqKlJl
c3VsdHMqKiouCgpUaGUgZmlyc3QgMiByb3dzIGFyZSB0aGUgYXZlcmFnZWQg
cmVzdWx0cyBvZiAyIG1vZGVscwooW21vZGVsIDFdKGh0dHA6Ly9kb3dubG9h
ZC50ZW5zb3JmbG93Lm9yZy9tb2RlbHMvbm10L2RlZW5fbW9kZWxfMS56aXAp
LApbbW9kZWwgMl0oaHR0cDovL2Rvd25sb2FkLnRlbnNvcmZsb3cub3JnL21v
ZGVscy9ubXQvZGVlbl9tb2RlbF8yLnppcCkpLgpSZXN1bHRzIGluIHRoZSB0
aGlyZCByb3cgaXMgd2l0aCBHTk1UIGF0dGVudGlvbgooW21vZGVsXShodHRw
Oi8vZG93bmxvYWQudGVuc29yZmxvdy5vcmcvbW9kZWxzL25tdC8xMDEyMjAx
Ny9kZWVuX2dubXRfbW9kZWxfNF9sYXllci56aXApKQo7IHRyYWluZWQgd2l0
aCA0IEdQVXMuCgpTeXN0ZW1zIHwgbmV3c3Rlc3QyMDEzIChkZXYpIHwgbmV3
c3Rlc3QyMDE1Ci0tLSB8IDotLS06IHwgOi0tLToKTk1UIChncmVlZHkpIHwg
MjcuMSB8IDI3LjYKTk1UIChiZWFtPTEwKSB8IDI4LjAgfCAyOC45Ck5NVCAr
IEdOTVQgYXR0ZW50aW9uIChiZWFtPTEwKSB8IDI5LjAgfCAqKjI5LjkqKgpb
V01UIFNPVEFdKGh0dHA6Ly9tYXRyaXguc3RhdG10Lm9yZy8pIHwgLSB8IDI5
LjMKClRoZXNlIHJlc3VsdHMgc2hvdyB0aGF0IG91ciBjb2RlIGJ1aWxkcyBz
dHJvbmcgYmFzZWxpbmUgc3lzdGVtcyBmb3IgTk1ULlwKKE5vdGUgdGhhdCBX
TVQgc3lzdGVtcyBnZW5lcmFsbHkgdXRpbGl6ZSBhIGh1Z2UgYW1vdW50IG1v
bm9saW5ndWFsIGRhdGEgd2hpY2ggd2UgY3VycmVudGx5IGRvIG5vdC4pCgoq
KlRyYWluaW5nIFNwZWVkKio6ICgyLjFzIHN0ZXAtdGltZSwgMy40SyB3cHMp
IG9uICpOdmlkaWEgSzQwbSogJiAoMC43cyBzdGVwLXRpbWUsIDguN0sgd3Bz
KSBvbiAqTnZpZGlhIFRpdGFuWCogZm9yIHN0YW5kYXJkIG1vZGVscy5cClRv
IHNlZSB0aGUgc3BlZWQtdXBzIHdpdGggR05NVCBhdHRlbnRpb24sIHdlIGJl
bmNobWFyayBvbiAqSzQwbSogb25seToKClN5c3RlbXMgfCAxIGdwdSB8IDQg
Z3B1cyB8IDggZ3B1cwotLS0gfCA6LS0tOiB8IDotLS06IHwgOi0tLToKTk1U
ICg0IGxheWVycykgfCAyLjJzLCAzLjRLIHwgMS45cywgMy45SyB8IC0KTk1U
ICg4IGxheWVycykgfCAzLjVzLCAyLjBLIHwgLSB8IDIuOXMsIDIuNEsKTk1U
ICsgR05NVCBhdHRlbnRpb24gKDQgbGF5ZXJzKSB8IDIuNnMsIDIuOEsgfCAx
LjdzLCA0LjNLIHwgLQpOTVQgKyBHTk1UIGF0dGVudGlvbiAoOCBsYXllcnMp
IHwgNC4ycywgMS43SyB8IC0gfCAxLjlzLCAzLjhLCgpUaGVzZSByZXN1bHRz
IHNob3cgdGhhdCB3aXRob3V0IEdOTVQgYXR0ZW50aW9uLCB0aGUgZ2FpbnMg
ZnJvbSB1c2luZyBtdWx0aXBsZSBncHVzIGFyZSBtaW5pbWFsLlwKV2l0aCBH
Tk1UIGF0dGVudGlvbiwgd2Ugb2J0YWluIGZyb20gNTAlLTEwMCUgc3BlZWQt
dXBzIHdpdGggbXVsdGlwbGUgZ3B1cy4KCiMjIFdNVCBFbmdsaXNoLUdlcm1h
biAmbWRhc2g7IEZ1bGwgQ29tcGFyaXNvbgpUaGUgZmlyc3QgMiByb3dzIGFy
ZSBvdXIgbW9kZWxzIHdpdGggR05NVAphdHRlbnRpb246Clttb2RlbCAxICg0
IGxheWVycyldKGh0dHA6Ly9kb3dubG9hZC50ZW5zb3JmbG93Lm9yZy9tb2Rl
bHMvbm10LzEwMTIyMDE3L2VuZGVfZ25tdF9tb2RlbF80X2xheWVyLnppcCks
Clttb2RlbCAyICg4IGxheWVycyldKGh0dHA6Ly9kb3dubG9hZC50ZW5zb3Jm
bG93Lm9yZy9tb2RlbHMvbm10LzEwMTIyMDE3L2VuZGVfZ25tdF9tb2RlbF84
X2xheWVyLnppcCkuCgpTeXN0ZW1zIHwgbmV3c3Rlc3QyMDE0IHwgbmV3c3Rl
c3QyMDE1Ci0tLSB8IDotLS06IHwgOi0tLToKKk91cnMqICZtZGFzaDsgTk1U
ICsgR05NVCBhdHRlbnRpb24gKDQgbGF5ZXJzKSB8IDIzLjcgfCAyNi41CipP
dXJzKiAmbWRhc2g7IE5NVCArIEdOTVQgYXR0ZW50aW9uICg4IGxheWVycykg
fCAyNC40IHwgKioyNy42KioKW1dNVCBTT1RBXShodHRwOi8vbWF0cml4LnN0
YXRtdC5vcmcvKSB8IDIwLjYgfCAyNC45Ck9wZW5OTVQgWyhLbGVpbiBldCBh
bC4sIDIwMTcpXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwMS4wMjgxMCkg
fCAxOS4zIHwgLQp0Zi1zZXEyc2VxIFsoQnJpdHogZXQgYWwuLCAyMDE3KV0o
aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDMuMDM5MDYpIHwgMjIuMiB8IDI1
LjIKR05NVCBbKFd1IGV0IGFsLiwgMjAxNildKGh0dHBzOi8vcmVzZWFyY2gu
Z29vZ2xlLmNvbS9wdWJzL3B1YjQ1NjEwLmh0bWwpIHwgKioyNC42KiogfCAt
CgpUaGUgYWJvdmUgcmVzdWx0cyBzaG93IG91ciBtb2RlbHMgYXJlIHZlcnkg
Y29tcGV0aXRpdmUgYW1vbmcgbW9kZWxzIG9mIHNpbWlsYXIgYXJjaGl0ZWN0
dXJlcy5cCltOb3RlIHRoYXQgT3Blbk5NVCB1c2VzIHNtYWxsZXIgbW9kZWxz
IGFuZCB0aGUgY3VycmVudCBiZXN0IHJlc3VsdCAoYXMgb2YgdGhpcyB3cml0
aW5nKSBpcyAyOC40IG9idGFpbmVkIGJ5IHRoZSBUcmFuc2Zvcm1lciBuZXR3
b3JrIFsoVmFzd2FuaSBldCBhbC4sIDIwMTcpXShodHRwczovL2FyeGl2Lm9y
Zy9hYnMvMTcwNi4wMzc2Mikgd2hpY2ggaGFzIGEgc2lnbmlmaWNhbnRseSBk
aWZmZXJlbnQgYXJjaGl0ZWN0dXJlLl0KCgojIyBTdGFuZGFyZCBIUGFyYW1z
CgpXZSBoYXZlIHByb3ZpZGVkClthIHNldCBvZiBzdGFuZGFyZCBocGFyYW1z
XShubXQvc3RhbmRhcmRfaHBhcmFtcy8pCmZvciB1c2luZyBwcmUtdHJhaW5l
ZCBjaGVja3BvaW50IGZvciBpbmZlcmVuY2Ugb3IgdHJhaW5pbmcgTk1UIGFy
Y2hpdGVjdHVyZXMKdXNlZCBpbiB0aGUgQmVuY2htYXJrLgoKV2Ugd2lsbCB1
c2UgdGhlIFdNVDE2IEdlcm1hbi1FbmdsaXNoIGRhdGEsIHlvdSBjYW4gZG93
bmxvYWQgdGhlIGRhdGEgYnkgdGhlCmZvbGxvd2luZyBjb21tYW5kLgoKYGBg
Cm5tdC9zY3JpcHRzL3dtdDE2X2VuX2RlLnNoIC90bXAvd210MTYKYGBgCgpI
ZXJlIGlzIGFuIGV4YW1wbGUgY29tbWFuZCBmb3IgbG9hZGluZyB0aGUgcHJl
LXRyYWluZWQgR05NVCBXTVQgR2VybWFuLUVuZ2xpc2gKY2hlY2twb2ludCBm
b3IgaW5mZXJlbmNlLgoKYGBgCnB5dGhvbiAtbSBubXQubm10IFwKICAgIC0t
c3JjPWRlIC0tdGd0PWVuIFwKICAgIC0tY2twdD0vcGF0aC90by9jaGVja3Bv
aW50L3RyYW5zbGF0ZS5ja3B0IFwKICAgIC0taHBhcmFtc19wYXRoPW5tdC9z
dGFuZGFyZF9ocGFyYW1zL3dtdDE2X2dubXRfNF9sYXllci5qc29uIFwKICAg
IC0tb3V0X2Rpcj0vdG1wL2RlZW5fZ25tdCBcCiAgICAtLXZvY2FiX3ByZWZp
eD0vdG1wL3dtdDE2L3ZvY2FiLmJwZS4zMjAwMCBcCiAgICAtLWluZmVyZW5j
ZV9pbnB1dF9maWxlPS90bXAvd210MTYvbmV3c3Rlc3QyMDE0LnRvay5icGUu
MzIwMDAuZGUgXAogICAgLS1pbmZlcmVuY2Vfb3V0cHV0X2ZpbGU9L3RtcC9k
ZWVuX2dubXQvb3V0cHV0X2luZmVyIFwKICAgIC0taW5mZXJlbmNlX3JlZl9m
aWxlPS90bXAvd210MTYvbmV3c3Rlc3QyMDE0LnRvay5icGUuMzIwMDAuZW4K
YGBgCgpIZXJlIGlzIGFuIGV4YW1wbGUgY29tbWFuZCBmb3IgdHJhaW5pbmcg
dGhlIEdOTVQgV01UIEdlcm1hbi1FbmdsaXNoIG1vZGVsLgoKYGBgCnB5dGhv
biAtbSBubXQubm10IFwKICAgIC0tc3JjPWRlIC0tdGd0PWVuIFwKICAgIC0t
aHBhcmFtc19wYXRoPW5tdC9zdGFuZGFyZF9ocGFyYW1zL3dtdDE2X2dubXRf
NF9sYXllci5qc29uIFwKICAgIC0tb3V0X2Rpcj0vdG1wL2RlZW5fZ25tdCBc
CiAgICAtLXZvY2FiX3ByZWZpeD0vdG1wL3dtdDE2L3ZvY2FiLmJwZS4zMjAw
MCBcCiAgICAtLXRyYWluX3ByZWZpeD0vdG1wL3dtdDE2L3RyYWluLnRvay5j
bGVhbi5icGUuMzIwMDAgXAogICAgLS1kZXZfcHJlZml4PS90bXAvd210MTYv
bmV3c3Rlc3QyMDEzLnRvay5icGUuMzIwMDAgXAogICAgLS10ZXN0X3ByZWZp
eD0vdG1wL3dtdDE2L25ld3N0ZXN0MjAxNS50b2suYnBlLjMyMDAwCmBgYAoK
CiMgT3RoZXIgcmVzb3VyY2VzCgpGb3IgZGVlcGVyIHJlYWRpbmcgb24gTmV1
cmFsIE1hY2hpbmUgVHJhbnNsYXRpb24gYW5kIHNlcXVlbmNlLXRvLXNlcXVl
bmNlCm1vZGVscywgd2UgaGlnaGx5IHJlY29tbWVuZCB0aGUgZm9sbG93aW5n
IG1hdGVyaWFscwpieQpbTHVvbmcsIENobywgTWFubmluZywgKDIwMTYpXSho
dHRwczovL3NpdGVzLmdvb2dsZS5jb20vc2l0ZS9hY2wxNm5tdC8pOwpbTHVv
bmcsICgyMDE2KV0oaHR0cHM6Ly9naXRodWIuY29tL2xtdGhhbmcvdGhlc2lz
KTsKYW5kIFtOZXViaWcsICgyMDE3KV0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJz
LzE3MDMuMDE2MTkpLgoKVGhlcmUncyBhIHdpZGUgdmFyaWV0eSBvZiB0b29s
cyBmb3IgYnVpbGRpbmcgc2VxMnNlcSBtb2RlbHMsIHNvIHdlIHBpY2sgb25l
IHBlcgpsYW5ndWFnZTpcClN0YW5mb3JkIE5NVApbaHR0cHM6Ly9ubHAuc3Rh
bmZvcmQuZWR1L3Byb2plY3RzL25tdC9dKGh0dHBzOi8vbmxwLnN0YW5mb3Jk
LmVkdS9wcm9qZWN0cy9ubXQvKQoqW01hdGxhYl0qIFwKdGYtc2VxMnNlcQpb
aHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS9zZXEyc2VxXShodHRwczovL2dp
dGh1Yi5jb20vZ29vZ2xlL3NlcTJzZXEpCipbVGVuc29yRmxvd10qIFwKTmVt
YW50dXMKW2h0dHBzOi8vZ2l0aHViLmNvbS9yc2VubnJpY2gvbmVtYXR1c10o
aHR0cHM6Ly9naXRodWIuY29tL3JzZW5ucmljaC9uZW1hdHVzKQoqW1RoZWFu
b10qIFwKT3Blbk5NVCBbaHR0cDovL29wZW5ubXQubmV0L10oaHR0cDovL29w
ZW5ubXQubmV0LykgKltUb3JjaF0qXApPcGVuTk1ULXB5IFtodHRwczovL2dp
dGh1Yi5jb20vT3Blbk5NVC9PcGVuTk1ULXB5XShodHRwczovL2dpdGh1Yi5j
b20vT3Blbk5NVC9PcGVuTk1ULXB5KSAqW1B5VG9yY2hdKgoKCgojIEFja25v
d2xlZGdtZW50CldlIHdvdWxkIGxpa2UgdG8gdGhhbmsgRGVubnkgQnJpdHos
IEFubmEgR29sZGllLCBEZXJlayBNdXJyYXksIGFuZCBDaW5qb24gUmVzbmlj
ayBmb3IgdGhlaXIgd29yayBicmluZ2luZyBuZXcgZmVhdHVyZXMgdG8gVGVu
c29yRmxvdyBhbmQgdGhlIHNlcTJzZXEgbGlicmFyeS4gQWRkaXRpb25hbCB0
aGFua3MgZ28gdG8gTHVrYXN6IEthaXNlciBmb3IgdGhlIGluaXRpYWwgaGVs
cCBvbiB0aGUgc2VxMnNlcSBjb2RlYmFzZTsgUXVvYyBMZSBmb3IgdGhlIHN1
Z2dlc3Rpb24gdG8gcmVwbGljYXRlIEdOTVQ7IFlvbmdodWkgV3UgYW5kIFpo
aWZlbmcgQ2hlbiBmb3IgZGV0YWlscyBvbiB0aGUgR05NVCBzeXN0ZW1zOyBh
cyB3ZWxsIGFzIHRoZSBHb29nbGUgQnJhaW4gdGVhbSBmb3IgdGhlaXIgc3Vw
cG9ydCBhbmQgZmVlZGJhY2shCgojIFJlZmVyZW5jZXMKCi0gIER6bWl0cnkg
QmFoZGFuYXUsIEt5dW5naHl1biBDaG8sIGFuZCBZb3NodWEKICAgQmVuZ2lv
LiAyMDE1LlsgTmV1cmFsIG1hY2hpbmUgdHJhbnNsYXRpb24gYnkgam9pbnRs
eSBsZWFybmluZyB0byBhbGlnbiBhbmQgdHJhbnNsYXRlXShodHRwczovL2Fy
eGl2Lm9yZy9wZGYvMTQwOS4wNDczLnBkZikuIElDTFIuCi0gIE1pbmgtVGhh
bmcgTHVvbmcsIEhpZXUgUGhhbSwgYW5kIENocmlzdG9waGVyIEQKICAgTWFu
bmluZy4gMjAxNS5bIEVmZmVjdGl2ZSBhcHByb2FjaGVzIHRvIGF0dGVudGlv
bi1iYXNlZCBuZXVyYWwgbWFjaGluZSB0cmFuc2xhdGlvbl0oaHR0cHM6Ly9h
cnhpdi5vcmcvcGRmLzE1MDguMDQwMjUucGRmKS4gRU1OTFAuCi0gIElseWEg
U3V0c2tldmVyLCBPcmlvbCBWaW55YWxzLCBhbmQgUXVvYwogICBWLiBMZS4g
MjAxNC5bIFNlcXVlbmNlIHRvIHNlcXVlbmNlIGxlYXJuaW5nIHdpdGggbmV1
cmFsIG5ldHdvcmtzXShodHRwczovL3BhcGVycy5uaXBzLmNjL3BhcGVyLzUz
NDYtc2VxdWVuY2UtdG8tc2VxdWVuY2UtbGVhcm5pbmctd2l0aC1uZXVyYWwt
bmV0d29ya3MucGRmKS4gTklQUy4KCiMgQmliVGV4CgpgYGAKQGFydGljbGV7
bHVvbmcxNywKICBhdXRob3IgID0ge01pbmh7LX1UaGFuZyBMdW9uZyBhbmQg
RXVnZW5lIEJyZXZkbyBhbmQgUnVpIFpoYW99LAogIHRpdGxlICAgPSB7TmV1
cmFsIE1hY2hpbmUgVHJhbnNsYXRpb24gKHNlcTJzZXEpIFR1dG9yaWFsfSwK
ICBqb3VybmFsID0ge2h0dHBzOi8vZ2l0aHViLmNvbS90ZW5zb3JmbG93L25t
dH0sCiAgeWVhciAgICA9IHsyMDE3fSwKfQpgYGAK
",,5088,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'webshell',10238429,b'This is a webshell open source project',b'PHP',0,5087,,449,False,b'https://api.github.com/repos/tennc/webshell/forks',"77u/d2Vic2hlbGwNCj09PT09PT09DQrov5nmmK/kuIDkuKp3ZWJzaGVsbOaU
tumbhumhueebrg0KDQrpgIHkurrnjqvnkbDvvIzmiYvmnInkvZnpppnvvIzl
poLmnpzlkITkvY3kuIvovb3kuobmnKzpobnnm67vvIzkuZ/or7fmgqjog73m
j5DkuqRzaGVsbA0KDQrmnKzpobnnm67mtrXnm5blkITnp43luLjnlKjohJrm
nKwNCg0K5aaC77yaYXNwLGFzcHgscGhwLGpzcCxwbCxweQ0KDQrlpoLmj5Dk
uqTlkITnp413ZWJzaGVsbO+8jOivt+WLv+abtOaUueWQjeensOWSjOWvhueg
gQ0KDQrms6jmhI/vvJrmiYDmnIlzaGVsbCDmnKzkurrkuI3kv53or4HmmK/l
kKbmnInlkI7pl6jvvIzkvYbmmK/oh6rlt7HkuIrkvKDnmoTnu53kuI3kvJrm
lYXmhI/liqDlkI7pl6gNCg0K5ZCE5L2N5o+Q5Lqk55qE77yM5Lmf6K+35Yu/
5Yqg5ZCO6ZeoDQoNCuWmguWPkeeOsOWtmOWcqOWQjumXqOS7o+egge+8jOiv
t2lzc3VlcyDjgIINCg0K5pys6aG555uu5o+Q5L6b55qE5bel5YW377yM56aB
5q2i5LuO5LqL6Z2e5rOV5rS75Yqo77yM5q2k6aG555uu77yM5LuF5L6b5rWL
6K+V77yM5omA6YCg5oiQ55qE5LiA5YiH5ZCO5p6c77yM5LiO5pys5Lq65peg
5YWz44CCDQoNCj4gIyMjIOWcqOaJqeWxleS4gOS4qumhueebriANCj4gMS4g
W3dlYnNoZWxsLXZlbm9tXShodHRwczovL2dpdGh1Yi5jb20veXpkZG1yNi93
ZWJzaGVsbC12ZW5vbSkNCj4gMi4g5YWN5p2Ad2Vic2hlbGzml6DpmZDnlJ/m
iJDlt6XlhbcNCj4gMy4g5YWN5p2Ad2Vic2hlbGzml6DpmZDnlJ/miJDlt6Xl
hbco5YWN5p2A5LiA5Y+l6K+d55Sf5oiQfOWFjeadgETnm7585YWN5p2A5a6J
5YWo54uX5oqk5Y2r56We5rKz6ams5p+l5p2A562J5LiA5YiHd2FmKQ0KPiA0
LiBBdXRob3IgOiB5emRkbXI2DQo+IDUuIOivt+iHquihjOmJtOWIqw0KDQoN
Cg0KDQpBdXRob3Ig77yadGVubmMNCg0KaHR0cDovL3Rlbm5jLmdpdGh1Yi5p
by93ZWJzaGVsbA0KDQpsaWNlbnNlIDogR1BMIHYzDQoNCiMjIERvd25sb2Fk
IGxpbmsNCkNoZWNrIGdpdGh1YiByZWxlYXNlcy4gTGF0ZXN0Og0KDQpbaHR0
cHM6Ly9naXRodWIuY29tL3Rlbm5jL3dlYnNoZWxsL3JlbGVhc2VzXShodHRw
czovL2dpdGh1Yi5jb20vdGVubmMvd2Vic2hlbGwvcmVsZWFzZXMpDQo=
",,5087,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'formtastic',7497,b'A Rails form builder plugin with semantically rich and accessible markup.',b'Ruby',43,5087,,70,False,b'https://api.github.com/repos/justinfrench/formtastic/forks',"IyBGb3JtdGFzdGljDQoNClshW0J1aWxkIFN0YXR1c10oaHR0cHM6Ly90cmF2
aXMtY2kub3JnL2p1c3RpbmZyZW5jaC9mb3JtdGFzdGljLnN2Zz9icmFuY2g9
bWFzdGVyKV0oaHR0cHM6Ly90cmF2aXMtY2kub3JnL2p1c3RpbmZyZW5jaC9m
b3JtdGFzdGljKQ0KWyFbSW5saW5lIGRvY3NdKGh0dHA6Ly9pbmNoLWNpLm9y
Zy9naXRodWIvanVzdGluZnJlbmNoL2Zvcm10YXN0aWMuc3ZnP2JyYW5jaD1t
YXN0ZXIpXShodHRwOi8vaW5jaC1jaS5vcmcvZ2l0aHViL2p1c3RpbmZyZW5j
aC9mb3JtdGFzdGljKQ0KWyFbQ29kZSBDbGltYXRlXShodHRwczovL2NvZGVj
bGltYXRlLmNvbS9naXRodWIvanVzdGluZnJlbmNoL2Zvcm10YXN0aWMvYmFk
Z2VzL2dwYS5zdmcpXShodHRwczovL2NvZGVjbGltYXRlLmNvbS9naXRodWIv
anVzdGluZnJlbmNoL2Zvcm10YXN0aWMpDQpbIVtHZW0gVmVyc2lvbl0oaHR0
cHM6Ly9iYWRnZS5mdXJ5LmlvL3JiL2Zvcm10YXN0aWMuc3ZnKV0oaHR0cHM6
Ly9iYWRnZS5mdXJ5LmlvL3JiL2Zvcm10YXN0aWMpDQpbIVtEZXBlbmRlbmN5
XShodHRwczovL2dlbW5hc2l1bS5jb20vanVzdGluZnJlbmNoL2Zvcm10YXN0
aWMucG5nKV0oaHR0cHM6Ly9nZW1uYXNpdW0uY29tL2p1c3RpbmZyZW5jaC9m
b3JtdGFzdGljKQ0KDQpGb3JtdGFzdGljIGlzIGEgUmFpbHMgRm9ybUJ1aWxk
ZXIgRFNMICh3aXRoIHNvbWUgb3RoZXIgZ29vZGllcykgdG8gbWFrZSBpdCBm
YXIgZWFzaWVyIHRvIGNyZWF0ZSBiZWF1dGlmdWwsIHNlbWFudGljYWxseSBy
aWNoLCBzeW50YWN0aWNhbGx5IGF3ZXNvbWUsIHJlYWRpbHkgc3R5bGFibGUg
YW5kIHdvbmRlcmZ1bGx5IGFjY2Vzc2libGUgSFRNTCBmb3JtcyBpbiB5b3Vy
IFJhaWxzIGFwcGxpY2F0aW9ucy4NCg0KIyMgRG9jdW1lbnRhdGlvbiAmIFN1
cHBvcnQNCg0KKiBbRG9jdW1lbnRhdGlvbiBpcyBhdmFpbGFibGUgb24gcmRv
Yy5pbmZvXShodHRwOi8vcmRvYy5pbmZvL3Byb2plY3RzL2p1c3RpbmZyZW5j
aC9mb3JtdGFzdGljKQ0KKiBbV2UgdHJhY2sgaXNzdWVzICYgYnVncyBvbiBH
aXRIdWJdKGh0dHA6Ly9naXRodWIuY29tL2p1c3RpbmZyZW5jaC9mb3JtdGFz
dGljL2lzc3VlcykNCiogW1dlIGhhdmUgYSB3aWtpIG9uIEdpdEh1Yl0oaHR0
cDovL2dpdGh1Yi5jb20vanVzdGluZnJlbmNoL2Zvcm10YXN0aWMvd2lraSkN
CiogW1N0YWNrT3ZlcmZsb3cgY2FuIGhlbHBdKGh0dHA6Ly9zdGFja292ZXJm
bG93LmNvbS9xdWVzdGlvbnMvdGFnZ2VkL2Zvcm10YXN0aWMpDQoqIFtGb2xs
b3cgQGZvcm10YXN0aWMgb24gVHdpdHRlciBmb3IgbmV3cyAmIHVwZGF0ZXNd
KGh0dHA6Ly90d2l0dGVyLmNvbS9mb3JtdGFzdGljKQ0KDQojIyBDb21wYXRp
YmlsaXR5DQoNCiogRm9ybXRhc3RpYyA0IHdpbGwgcmVxdWlyZSBSYWlscyA0
LjEgYW5kIFJ1YnkgMi4wIG1pbmltdW0NCiogRm9ybXRhc3RpYyAzIHJlcXVp
cmVzIFJhaWxzIDMuMi4xMyBtaW5pbXVtDQoqIEZvcm10YXN0aWMgMiByZXF1
aXJlcyBSYWlscyAzDQoqIEZvcm10YXN0aWMsIG11Y2ggbGlrZSBSYWlscywg
aXMgdmVyeSBBY3RpdmVSZWNvcmQtY2VudHJpYy4gTWFueSBhcmUgc3VjY2Vz
c2Z1bGx5IHVzaW5nIG90aGVyIEFjdGl2ZU1vZGVsLWxpa2UgT1JNcyBhbmQg
b2JqZWN0cyAoRGF0YU1hcHBlciwgTW9uZ29NYXBwZXIsIE1vbmdvaWQsIEF1
dGhsb2dpYywgRGV2aXNlLi4uKSBidXQgd2UncmUgbm90IGd1YXJhbnRlZWlu
ZyBmdWxsIGNvbXBhdGliaWxpdHkgYXQgdGhpcyBzdGFnZS4gUGF0Y2hlcyBh
cmUgd2VsY29tZSENCg0KIyMgVGhlIFN0b3J5DQoNCk9uZSBkYXksIEkgZmlu
YWxseSBoYWQgZW5vdWdoLCBzbyBJIG9wZW5lZCB1cCBteSB0ZXh0IGVkaXRv
ciwgYW5kIHdyb3RlIGEgRFNMIGZvciBob3cgSSdkIGxpa2UgdG8gYXV0aG9y
IGZvcm1zOg0KDQpgYGBlcmINCiAgPCU9IHNlbWFudGljX2Zvcm1fZm9yIEBh
cnRpY2xlIGRvIHxmfCAlPg0KDQogICAgPCU9IGYuaW5wdXRzIDpuYW1lID0+
ICJCYXNpYyIgZG8gJT4NCiAgICAgIDwlPSBmLmlucHV0IDp0aXRsZSAlPg0K
ICAgICAgPCU9IGYuaW5wdXQgOmJvZHkgJT4NCiAgICAgIDwlPSBmLmlucHV0
IDpzZWN0aW9uICU+DQogICAgICA8JT0gZi5pbnB1dCA6cHVibGljYXRpb25f
c3RhdGUsIDphcyA9PiA6cmFkaW8gJT4NCiAgICAgIDwlPSBmLmlucHV0IDpj
YXRlZ29yeSAlPg0KICAgICAgPCU9IGYuaW5wdXQgOmFsbG93X2NvbW1lbnRz
LCA6bGFiZWwgPT4gIkFsbG93IGNvbW1lbnRpbmcgb24gdGhpcyBhcnRpY2xl
IiAlPg0KICAgIDwlIGVuZCAlPg0KDQogICAgPCU9IGYuaW5wdXRzIDpuYW1l
ID0+ICJBZHZhbmNlZCIgZG8gJT4NCiAgICAgIDwlPSBmLmlucHV0IDprZXl3
b3JkcywgOnJlcXVpcmVkID0+IGZhbHNlLCA6aGludCA9PiAiRXhhbXBsZTog
cnVieSwgcmFpbHMsIGZvcm1zIiAlPg0KICAgICAgPCU9IGYuaW5wdXQgOmV4
dHJhY3QsIDpyZXF1aXJlZCA9PiBmYWxzZSAlPg0KICAgICAgPCU9IGYuaW5w
dXQgOmRlc2NyaXB0aW9uLCA6cmVxdWlyZWQgPT4gZmFsc2UgJT4NCiAgICAg
IDwlPSBmLmlucHV0IDp1cmxfdGl0bGUsIDpyZXF1aXJlZCA9PiBmYWxzZSAl
Pg0KICAgIDwlIGVuZCAlPg0KDQogICAgPCU9IGYuaW5wdXRzIDpuYW1lID0+
ICJBdXRob3IiLCA6Zm9yID0+IDphdXRob3IgZG8gfGF1dGhvcl9mb3JtfCAl
Pg0KICAgICAgPCU9IGF1dGhvcl9mb3JtLmlucHV0IDpmaXJzdF9uYW1lICU+
DQogICAgICA8JT0gYXV0aG9yX2Zvcm0uaW5wdXQgOmxhc3RfbmFtZSAlPg0K
ICAgIDwlIGVuZCAlPg0KDQogICAgPCU9IGYuYWN0aW9ucyBkbyAlPg0KICAg
ICAgPCU9IGYuYWN0aW9uIDpzdWJtaXQsIDphcyA9PiA6YnV0dG9uICU+DQog
ICAgICA8JT0gZi5hY3Rpb24gOmNhbmNlbCwgOmFzID0+IDpsaW5rICU+DQog
ICAgPCUgZW5kICU+DQoNCiAgPCUgZW5kICU+DQpgYGANCg0KSSBhbHNvIHdy
b3RlIHRoZSBhY2NvbXBhbnlpbmcgSFRNTCBvdXRwdXQgSSBleHBlY3RlZCwg
ZmF2b3Jpbmcgc29tZXRoaW5nIHZlcnkgc2ltaWxhciB0byB0aGUgZmllbGRz
ZXRzLCBsaXN0cyBhbmQgb3RoZXIgc2VtYW50aWMgZWxlbWVudHMgQWFyb24g
R3VzdGFmc29uIHByZXNlbnRlZCBpbiBbTGVhcm5pbmcgdG8gTG92ZSBGb3Jt
c10oaHR0cDovL3d3dy5zbGlkZXNoYXJlLm5ldC9BYXJvbkd1c3RhZnNvbi9s
ZWFybmluZy10by1sb3ZlLWZvcm1zLXdlYi1kaXJlY3Rpb25zLXNvdXRoLTA3
KSwgaGFja2luZyB0b2dldGhlciBlbm91Z2ggUnVieSB0byBwcm92ZSBpdCBj
b3VsZCBiZSBkb25lLg0KDQoNCiMjIEl0J3MgYXdlc29tZSBiZWNhdXNlLi4u
DQoNCiogSXQgY2FuIGhhbmRsZSBgYmVsb25nc190b2AgYXNzb2NpYXRpb25z
IChsaWtlIFBvc3QgYmVsb25nc190byA6YXV0aG9yKSwgcmVuZGVyaW5nIGEg
c2VsZWN0IG9yIHNldCBvZiByYWRpbyBpbnB1dHMgd2l0aCBjaG9pY2VzIGZy
b20gdGhlIHBhcmVudCBtb2RlbC4NCiogSXQgY2FuIGhhbmRsZSBgaGFzX21h
bnlgIGFuZCBgaGFzX2FuZF9iZWxvbmdzX3RvX21hbnlgIGFzc29jaWF0aW9u
cyAobGlrZTogUG9zdCBoYXNfbWFueSA6dGFncyksIHJlbmRlcmluZyBhIG11
bHRpLXNlbGVjdCB3aXRoIGNob2ljZXMgZnJvbSB0aGUgY2hpbGQgbW9kZWxz
Lg0KKiBJdCdzIFJhaWxzIDMvNCBjb21wYXRpYmxlIChpbmNsdWRpbmcgbmVz
dGVkIGZvcm1zKS4NCiogSXQgaGFzIGludGVybmF0aW9uYWxpemF0aW9uIChJ
MThuKSENCiogSXQncyBfcmVhbGx5XyBxdWljayB0byBnZXQgc3RhcnRlZCB3
aXRoIGEgYmFzaWMgZm9ybSBpbiBwbGFjZSAoNCBsaW5lcyksIHRoZW4gZ28g
YmFjayB0byBhZGQgaW4gbW9yZSBkZXRhaWwgaWYgeW91IG5lZWQgaXQuDQoq
IFRoZXJlJ3MgaGVhcHMgb2YgZWxlbWVudHMsIGlkIGFuZCBjbGFzcyBhdHRy
aWJ1dGVzIGZvciB5b3UgdG8gaG9vayBpbiB5b3VyIENTUyBhbmQgSlMuDQoq
IEl0IGhhbmRsZXMgcmVhbCB3b3JsZCBzdHVmZiBsaWtlIGlubGluZSBoaW50
cywgaW5saW5lIGVycm9yIG1lc3NhZ2VzICYgaGVscCB0ZXh0Lg0KKiBJdCBk
b2Vzbid0IGhpamFjayBvciBjaGFuZ2UgYW55IG9mIHRoZSBzdGFuZGFyZCBS
YWlscyBmb3JtIGlucHV0cywgc28geW91IGNhbiBzdGlsbCB1c2UgdGhlbSBh
cyBleHBlY3RlZCAoZXZlbiBtaXggYW5kIG1hdGNoKS4NCiogSXQncyBnb3Qg
YWJzb2x1dGVseSBhd2Vzb21lIHNwZWMgY292ZXJhZ2UuDQoqIFRoZXJlJ3Mg
YSBidW5jaCBvZiBwZW9wbGUgdXNpbmcgYW5kIHdvcmtpbmcgb24gaXQgKGl0
J3Mgbm90IGp1c3Qgb25lIGRldmVsb3BlciBidWlsZGluZyBoYWxmIGEgc29s
dXRpb24pLg0KKiBJdCBoYXMgZ3Jvd2luZyBIVE1MNSBzdXBwb3J0IChuZXcg
aW5wdXRzIGxpa2UgZW1haWwvcGhvbmUvc2VhcmNoLCBuZXcgYXR0cmlidXRl
cyBsaWtlIHJlcXVpcmVkL21pbi9tYXgvc3RlcC9wbGFjZWhvbGRlcikNCg0K
DQojIyBPcGluaW9ucw0KDQoqIEl0IHNob3VsZCBiZSBlYXNpZXIgdG8gZG8g
dGhpbmdzIHRoZSByaWdodCB3YXkgdGhhbiB0aGUgd3Jvbmcgd2F5Lg0KKiBT
b21ldGltZXMgX21vcmUgbWFyay11cF8gaXMgYmV0dGVyLg0KKiBFbGVtZW50
cyBhbmQgYXR0cmlidXRlIGhvb2tzIGFyZSBfZ29sZF8gZm9yIHN0eWxlc2hl
ZXQgYXV0aG9ycy4NCiogTWFrZSB0aGUgY29tbW9uIHRoaW5ncyB3ZSBkbyBl
YXN5LCB5ZXQgZW5zdXJlIHVuY29tbW9uIHRoaW5ncyBhcmUgc3RpbGwgcG9z
c2libGUuDQoNCg0KIyMgSW5zdGFsbGF0aW9uDQoNClNpbXBseSBhZGQgRm9y
bXRhc3RpYyB0byB5b3VyIEdlbWZpbGUgYW5kIGJ1bmRsZSBpdCB1cDoNCg0K
YGBgcnVieQ0KICBnZW0gJ2Zvcm10YXN0aWMnLCAnfj4gMy4wJw0KYGBgDQoN
ClJ1biB0aGUgaW5zdGFsbGF0aW9uIGdlbmVyYXRvcjoNCg0KYGBgc2hlbGwN
CiQgcmFpbHMgZ2VuZXJhdGUgZm9ybXRhc3RpYzppbnN0YWxsDQpgYGANCg0K
DQojIyBTdHlsZXNoZWV0cw0KDQpBIHByb29mLW9mLWNvbmNlcHQgc2V0IG9m
IHN0eWxlc2hlZXRzIGFyZSBwcm92aWRlZCB3aGljaCB5b3UgY2FuIGluY2x1
ZGUgaW4geW91ciBsYXlvdXQuIEN1c3RvbWl6YXRpb24gaXMgYmVzdCBhY2hp
ZXZlZCBieSBvdmVycmlkaW5nIHRoZXNlIHN0eWxlcyBpbiBhbiBhZGRpdGlv
bmFsIHN0eWxlc2hlZXQuDQoNClJhaWxzIDMuMSBpbnRyb2R1Y2VzIGFuIGFz
c2V0IHBpcGVsaW5lIHRoYXQgYWxsb3dzIHBsdWdpbnMgbGlrZSBGb3JtdGFz
dGljIHRvIHNlcnZlIHRoZWlyIG93biBTdHlsZXNoZWV0cywgSmF2YXNjcmlw
dHMsIGV0YyB3aXRob3V0IGhhdmluZyB0byBydW4gZ2VuZXJhdG9ycyB0aGF0
IGNvcHkgdGhlbSBhY3Jvc3MgdG8gdGhlIGhvc3QgYXBwbGljYXRpb24uIEZv
cm10YXN0aWMgbWFrZXMgdGhyZWUgc3R5bGVzaGVldHMgYXZhaWxhYmxlIGFz
IGFuIEVuZ2luZSwgeW91IGp1c3QgbmVlZCB0byByZXF1aXJlIHRoZW0gaW4g
eW91ciBnbG9iYWwgc3R5bGVzaGVldHMuDQoNCmBgYGNzcw0KICAjIGFwcC9h
c3NldHMvc3R5bGVzaGVldHMvYXBwbGljYXRpb24uY3NzDQogICo9IHJlcXVp
cmUgZm9ybXRhc3RpYw0KICAqPSByZXF1aXJlIG15X2Zvcm10YXN0aWNfY2hh
bmdlcw0KYGBgDQoNCkNvbmRpdGlvbmFsIHN0eWxlc2hlZXRzIG5lZWQgdG8g
YmUgY29tcGlsZWQgc2VwYXJhdGVseSB0byBwcmV2ZW50IHRoZW0gYmVpbmcg
YnVuZGxlZCBhbmQgaW5jbHVkZWQgd2l0aCBvdGhlciBhcHBsaWNhdGlvbiBz
dHlsZXMuICBSZW1vdmUgYHJlcXVpcmVfdHJlZSAuYCBmcm9tIGFwcGxpY2F0
aW9uLmNzcyBhbmQgc3BlY2lmeSByZXF1aXJlZCBzdHlsZXNoZWV0cyBpbmRp
dmlkdWFsbHkuDQoNCmBgYGNzcw0KICAjIGFwcC9hc3NldHMvc3R5bGVzaGVl
dHMvaWU2LmNzcw0KICAqPSByZXF1aXJlIGZvcm10YXN0aWNfaWU2DQoNCiAg
IyBhcHAvYXNzZXRzL3N0eWxlc2hlZXRzL2llNy5jc3MNCiAgKj0gcmVxdWly
ZSBmb3JtdGFzdGljX2llNw0KYGBgDQoNCmBgYGVyYg0KICAjIGFwcC92aWV3
cy9sYXlvdXRzL2FwcGxpY2F0aW9uLmh0bWwuZXJiDQogIDwlPSBzdHlsZXNo
ZWV0X2xpbmtfdGFnICdhcHBsaWNhdGlvbicgJT4NCiAgPCEtLVtpZiBJRSA2
XT48JT0gc3R5bGVzaGVldF9saW5rX3RhZyAnaWU2JyAlPjwhW2VuZGlmXS0t
Pg0KICA8IS0tW2lmIElFIDddPjwlPSBzdHlsZXNoZWV0X2xpbmtfdGFnICdp
ZTcnICU+PCFbZW5kaWZdLS0+DQpgYGANCg0KYGBgcnVieQ0KICAjIGNvbmZp
Zy9lbnZpcm9ubWVudHMvcHJvZHVjdGlvbi5yYg0KICBjb25maWcuYXNzZXRz
LnByZWNvbXBpbGUgKz0gJXcoIGllNi5jc3MgaWU3LmNzcyApDQpgYGANCg0K
IyMgVXNhZ2UNCg0KRm9ybXMgYXJlIHJlYWxseSBib3JpbmcgdG8gY29kZS4u
LiB5b3Ugd2FudCB0byBnZXQgb250byB0aGUgZ29vZCBzdHVmZiBhcyBmYXN0
IGFzIHBvc3NpYmxlLg0KDQpUaGlzIHJlbmRlcnMgYSBzZXQgb2YgaW5wdXRz
IChvbmUgZm9yIF9tb3N0XyBjb2x1bW5zIGluIHRoZSBkYXRhYmFzZSB0YWJs
ZSwgYW5kIG9uZSBmb3IgZWFjaCBBY3RpdmVSZWNvcmQgYGJlbG9uZ3NfdG9g
LWFzc29jaWF0aW9uKSwgZm9sbG93ZWQgYnkgZGVmYXVsdCBhY3Rpb24gYnV0
dG9ucyAoYW4gaW5wdXQgc3VibWl0IGJ1dHRvbik6DQoNCmBgYGVyYg0KICA8
JT0gc2VtYW50aWNfZm9ybV9mb3IgQHVzZXIgZG8gfGZ8ICU+DQogICAgPCU9
IGYuaW5wdXRzICU+DQogICAgPCU9IGYuYWN0aW9ucyAlPg0KICA8JSBlbmQg
JT4NCmBgYA0KDQpUaGlzIGlzIGEgZ3JlYXQgd2F5IHRvIGdldCBzb21ldGhp
bmcgdXAgZmFzdCwgYnV0IGxpa2Ugc2NhZmZvbGRpbmcsIGl0J3MgKm5vdCBy
ZWNvbW1lbmRlZCBmb3IgcHJvZHVjdGlvbiouIERvbid0IGJlIHNvIGxhenkh
DQoNClRvIHNwZWNpZnkgdGhlIG9yZGVyIG9mIHRoZSBmaWVsZHMsIHNraXAg
c29tZSBvZiB0aGUgZmllbGRzIG9yIGV2ZW4gYWRkIGluIGZpZWxkcyB0aGF0
IEZvcm10YXN0aWMgY291bGRuJ3QgaW5mZXIuIFlvdSBjYW4gcGFzcyBpbiBh
IGxpc3Qgb2YgZmllbGQgbmFtZXMgdG8gYGlucHV0c2AgYW5kIGxpc3Qgb2Yg
YWN0aW9uIG5hbWVzIHRvIGBhY3Rpb25zYDoNCg0KYGBgZXJiDQogIDwlPSBz
ZW1hbnRpY19mb3JtX2ZvciBAdXNlciBkbyB8ZnwgJT4NCiAgICA8JT0gZi5p
bnB1dHMgOnRpdGxlLCA6Ym9keSwgOnNlY3Rpb24sIDpjYXRlZ29yaWVzLCA6
Y3JlYXRlZF9hdCAlPg0KICAgIDwlPSBmLmFjdGlvbnMgOnN1Ym1pdCwgOmNh
bmNlbCAlPg0KICA8JSBlbmQgJT4NCmBgYA0KDQpZb3UgcHJvYmFibHkgd2Fu
dCBjb250cm9sIG92ZXIgdGhlIGlucHV0IHR5cGUgRm9ybXRhc3RpYyB1c2Vz
IGZvciBlYWNoIGZpZWxkLiBZb3UgY2FuIGV4cGFuZCB0aGUgYGlucHV0c2Ag
YW5kIGBhY3Rpb25zYCB0byBibG9jayBoZWxwZXIgZm9ybWF0IGFuZCB1c2Ug
dGhlIGA6YXNgIG9wdGlvbiB0byBzcGVjaWZ5IGFuIGV4YWN0IGlucHV0IHR5
cGU6DQoNCmBgYGVyYg0KICA8JT0gc2VtYW50aWNfZm9ybV9mb3IgQHBvc3Qg
ZG8gfGZ8ICU+DQogICAgPCU9IGYuaW5wdXRzIGRvICU+DQogICAgICA8JT0g
Zi5pbnB1dCA6dGl0bGUgJT4NCiAgICAgIDwlPSBmLmlucHV0IDpib2R5ICU+
DQogICAgICA8JT0gZi5pbnB1dCA6c2VjdGlvbiwgOmFzID0+IDpyYWRpbyAl
Pg0KICAgICAgPCU9IGYuaW5wdXQgOmNhdGVnb3JpZXMgJT4NCiAgICAgIDwl
PSBmLmlucHV0IDpjcmVhdGVkX2F0LCA6YXMgPT4gOnN0cmluZyAlPg0KICAg
IDwlIGVuZCAlPg0KICAgIDwlPSBmLmFjdGlvbnMgZG8gJT4NCiAgICAgIDwl
PSBmLmFjdGlvbiA6c3VibWl0LCA6YXMgPT4gOmJ1dHRvbiAlPg0KICAgICAg
PCU9IGYuYWN0aW9uIDpjYW5jZWwsIDphcyA9PiA6bGluayAlPg0KICAgIDwl
IGVuZCAlPg0KICA8JSBlbmQgJT4NCmBgYA0KDQpJZiB5b3Ugd2FudCB0byBj
dXN0b21pemUgdGhlIGxhYmVsIHRleHQsIG9yIHJlbmRlciBzb21lIGhpbnQg
dGV4dCBiZWxvdyB0aGUgZmllbGQsIHNwZWNpZnkgd2hpY2ggZmllbGRzIGFy
ZSByZXF1aXJlZC9vcHRpb25hbCwgb3IgYnJlYWsgdGhlIGZvcm0gaW50byB0
d28gZmllbGRzZXRzLCB0aGUgRFNMIGlzIHByZXR0eSBjb21wcmVoZW5zaXZl
Og0KDQpgYGBlcmINCiAgPCU9IHNlbWFudGljX2Zvcm1fZm9yIEBwb3N0IGRv
IHxmfCAlPg0KICAgIDwlPSBmLmlucHV0cyAiQmFzaWMiLCA6aWQgPT4gImJh
c2ljIiBkbyAlPg0KICAgICAgPCU9IGYuaW5wdXQgOnRpdGxlICU+DQogICAg
ICA8JT0gZi5pbnB1dCA6Ym9keSAlPg0KICAgIDwlIGVuZCAlPg0KICAgIDwl
PSBmLmlucHV0cyA6bmFtZSA9PiAiQWR2YW5jZWQgT3B0aW9ucyIsIDppZCA9
PiAiYWR2YW5jZWQiIGRvICU+DQogICAgICA8JT0gZi5pbnB1dCA6c2x1Zywg
OmxhYmVsID0+ICJVUkwgVGl0bGUiLCA6aGludCA9PiAiQ3JlYXRlZCBhdXRv
bWF0aWNhbGx5IGlmIGxlZnQgYmxhbmsiLCA6cmVxdWlyZWQgPT4gZmFsc2Ug
JT4NCiAgICAgIDwlPSBmLmlucHV0IDpzZWN0aW9uLCA6YXMgPT4gOnJhZGlv
ICU+DQogICAgICA8JT0gZi5pbnB1dCA6dXNlciwgOmxhYmVsID0+ICJBdXRo
b3IiICU+DQogICAgICA8JT0gZi5pbnB1dCA6Y2F0ZWdvcmllcywgOnJlcXVp
cmVkID0+IGZhbHNlICU+DQogICAgICA8JT0gZi5pbnB1dCA6Y3JlYXRlZF9h
dCwgOmFzID0+IDpzdHJpbmcsIDpsYWJlbCA9PiAiUHVibGljYXRpb24gRGF0
ZSIsIDpyZXF1aXJlZCA9PiBmYWxzZSAlPg0KICAgIDwlIGVuZCAlPg0KICAg
IDwlPSBmLmFjdGlvbnMgZG8gJT4NCiAgICAgIDwlPSBmLmFjdGlvbiA6c3Vi
bWl0ICU+DQogICAgPCUgZW5kICU+DQogIDwlIGVuZCAlPg0KYGBgDQoNCllv
dSBjYW4gY3JlYXRlIGZvcm1zIGZvciBuZXN0ZWQgcmVzb3VyY2VzOg0KDQpg
YGBlcmINCgk8JT0gc2VtYW50aWNfZm9ybV9mb3IgW0BhdXRob3IsIEBwb3N0
XSBkbyB8ZnwgJT4NCmBgYA0KDQpOZXN0ZWQgZm9ybXMgYXJlIGFsc28gc3Vw
cG9ydGVkIChkb24ndCBmb3JnZXQgeW91ciBtb2RlbHMgbmVlZCB0byBiZSBz
ZXR1cCBjb3JyZWN0bHkgd2l0aCBgYWNjZXB0c19uZXN0ZWRfYXR0cmlidXRl
c19mb3JgKS4gWW91IGNhbiBkbyBpdCBpbiB0aGUgUmFpbHMgd2F5Og0KDQpg
YGBlcmINCiAgPCU9IHNlbWFudGljX2Zvcm1fZm9yIEBwb3N0IGRvIHxmfCAl
Pg0KICAgIDwlPSBmLmlucHV0cyA6dGl0bGUsIDpib2R5LCA6Y3JlYXRlZF9h
dCAlPg0KICAgIDwlPSBmLnNlbWFudGljX2ZpZWxkc19mb3IgOmF1dGhvciBk
byB8YXV0aG9yfCAlPg0KICAgICAgPCU9IGF1dGhvci5pbnB1dHMgOmZpcnN0
X25hbWUsIDpsYXN0X25hbWUsIDpuYW1lID0+ICJBdXRob3IiICU+DQogICAg
PCUgZW5kICU+DQogICAgPCU9IGYuYWN0aW9ucyAlPg0KICA8JSBlbmQgJT4N
CmBgYA0KDQpPciB0aGUgRm9ybXRhc3RpYyB3YXkgd2l0aCB0aGUgYDpmb3Jg
IG9wdGlvbjoNCg0KYGBgZXJiDQogIDwlPSBzZW1hbnRpY19mb3JtX2ZvciBA
cG9zdCBkbyB8ZnwgJT4NCiAgICA8JT0gZi5pbnB1dHMgOnRpdGxlLCA6Ym9k
eSwgOmNyZWF0ZWRfYXQgJT4NCiAgICA8JT0gZi5pbnB1dHMgOmZpcnN0X25h
bWUsIDpsYXN0X25hbWUsIDpmb3IgPT4gOmF1dGhvciwgOm5hbWUgPT4gIkF1
dGhvciIgJT4NCiAgICA8JT0gZi5hY3Rpb25zICU+DQogIDwlIGVuZCAlPg0K
YGBgDQoNCldoZW4gd29ya2luZyBpbiBoYXMgbWFueSBhc3NvY2lhdGlvbiwg
eW91IGNhbiBldmVuIHN1cHBseSBgIiVpImAgaW4geW91ciBmaWVsZHNldCBu
YW1lOyB0aGV5IHdpbGwgYmUgcHJvcGVybHkgaW50ZXJwb2xhdGVkIHdpdGgg
dGhlIGNoaWxkIGluZGV4LiBGb3IgZXhhbXBsZToNCg0KYGBgZXJiDQogIDwl
PSBzZW1hbnRpY19mb3JtX2ZvciBAcG9zdCBkbyB8ZnwgJT4NCiAgICA8JT0g
Zi5pbnB1dHMgJT4NCiAgICA8JT0gZi5pbnB1dHMgOm5hbWUgPT4gJ0NhdGVn
b3J5ICMlaScsIDpmb3IgPT4gOmNhdGVnb3JpZXMgJT4NCiAgICA8JT0gZi5h
Y3Rpb25zICU+DQogIDwlIGVuZCAlPg0KYGBgDQoNCkFsdGVybmF0aXZlbHks
IHRoZSBjdXJyZW50IGluZGV4IGNhbiBiZSBhY2Nlc3NlZCB2aWEgdGhlIGBp
bnB1dHNgIGJsb2NrJ3MgYXJndW1lbnRzIGZvciB1c2UgYW55d2hlcmU6DQoN
CmBgYGVyYg0KICA8JT0gc2VtYW50aWNfZm9ybV9mb3IgQHBvc3QgZG8gfGZ8
ICU+DQogICAgPCU9IGYuaW5wdXRzIDpmb3IgPT4gOmNhdGVnb3JpZXMgZG8g
fGNhdGVnb3J5LCBpfCAlPg0KICAgICAgLi4uDQogICAgPCU9IGYuYWN0aW9u
cyAlPg0KICA8JSBlbmQgJT4NCmBgYA0KDQpJZiB5b3UgaGF2ZSBtb3JlIHRo
YW4gb25lIGZvcm0gb24gdGhlIHNhbWUgcGFnZSwgaXQgbWF5IGxlYWQgdG8g
SFRNTCBpbnZhbGlkYXRpb24gYmVjYXVzZSBvZiB0aGUgd2F5IEhUTUwgZWxl
bWVudCBpZCBhdHRyaWJ1dGVzIGFyZSBhc3NpZ25lZC4gWW91IGNhbiBwcm92
aWRlIGEgbmFtZXNwYWNlIGZvciB5b3VyIGZvcm0gdG8gZW5zdXJlIHVuaXF1
ZW5lc3Mgb2YgaWQgYXR0cmlidXRlcyBvbiBmb3JtIGVsZW1lbnRzLiBUaGUg
bmFtZXNwYWNlIGF0dHJpYnV0ZSB3aWxsIGJlIHByZWZpeGVkIHdpdGggdW5k
ZXJzY29yZSBvbiB0aGUgZ2VuZXJhdGUgSFRNTCBpZC4gRm9yIGV4YW1wbGU6
DQoNCmBgYGVyYg0KICA8JT0gc2VtYW50aWNfZm9ybV9mb3IoQHBvc3QsIDpu
YW1lc3BhY2UgPT4gJ2NhdF9mb3JtJykgZG8gfGZ8ICU+DQogICAgPCU9IGYu
aW5wdXRzIGRvICU+DQogICAgICA8JT0gZi5pbnB1dCA6dGl0bGUgJT4gICAg
ICAgICMgaWQ9ImNhdF9mb3JtX3Bvc3RfdGl0bGUiDQogICAgICA8JT0gZi5p
bnB1dCA6Ym9keSAlPiAgICAgICAgICMgaWQ9ImNhdF9mb3JtX3Bvc3RfYm9k
eSINCiAgICAgIDwlPSBmLmlucHV0IDpjcmVhdGVkX2F0ICU+ICAgIyBpZD0i
Y2F0X2Zvcm1fcG9zdF9jcmVhdGVkX2F0Ig0KICAgIDwlIGVuZCAlPg0KICAg
IDwlPSBmLmFjdGlvbnMgJT4NCiAgPCUgZW5kICU+DQpgYGANCg0KQ3VzdG9t
aXplIEhUTUwgYXR0cmlidXRlcyBmb3IgYW55IGlucHV0IHVzaW5nIHRoZSBg
OmlucHV0X2h0bWxgIG9wdGlvbi4gVHlwaWNhbGx5IHRoaXMgaXMgdXNlZCB0
byBkaXNhYmxlIHRoZSBpbnB1dCwgY2hhbmdlIHRoZSBzaXplIG9mIGEgdGV4
dCBmaWVsZCwgY2hhbmdlIHRoZSByb3dzIGluIGEgdGV4dGFyZWEsIG9yIGV2
ZW4gdG8gYWRkIGEgc3BlY2lhbCBjbGFzcyB0byBhbiBpbnB1dCB0byBhdHRh
Y2ggc3BlY2lhbCBiZWhhdmlvciBsaWtlIFthdXRvZ3Jvd10oaHR0cDovL3Bs
dWdpbnMuanF1ZXJ5LmNvbS9wcm9qZWN0L2F1dG9ncm93dGV4dGFyZWEpIHRl
eHRhcmVhczoNCg0KYGBgZXJiDQogIDwlPSBzZW1hbnRpY19mb3JtX2ZvciBA
cG9zdCBkbyB8ZnwgJT4NCiAgICA8JT0gZi5pbnB1dHMgZG8gJT4NCiAgICAg
IDwlPSBmLmlucHV0IDp0aXRsZSwgICAgICA6aW5wdXRfaHRtbCA9PiB7IDpz
aXplID0+IDEwIH0gJT4NCiAgICAgIDwlPSBmLmlucHV0IDpib2R5LCAgICAg
ICA6aW5wdXRfaHRtbCA9PiB7IDpjbGFzcyA9PiAnYXV0b2dyb3cnLCA6cm93
cyA9PiAxMCwgOmNvbHMgPT4gMjAsIDptYXhsZW5ndGggPT4gMTAgIH0gJT4N
CiAgICAgIDwlPSBmLmlucHV0IDpjcmVhdGVkX2F0LCA6aW5wdXRfaHRtbCA9
PiB7IDpkaXNhYmxlZCA9PiB0cnVlIH0gJT4NCiAgICAgIDwlPSBmLmlucHV0
IDp1cGRhdGVkX2F0LCA6aW5wdXRfaHRtbCA9PiB7IDpyZWFkb25seSA9PiB0
cnVlIH0gJT4NCiAgICA8JSBlbmQgJT4NCiAgICA8JT0gZi5hY3Rpb25zICU+
DQogIDwlIGVuZCAlPg0KYGBgDQoNClRoZSBzYW1lIGNhbiBiZSBkb25lIGZv
ciBhY3Rpb25zIHdpdGggdGhlIGA6YnV0dG9uX2h0bWxgIG9wdGlvbjoNCg0K
YGBgZXJiDQogIDwlPSBzZW1hbnRpY19mb3JtX2ZvciBAcG9zdCBkbyB8Znwg
JT4NCiAgICAuLi4NCiAgICA8JT0gZi5hY3Rpb25zIGRvICU+DQogICAgICA8
JT0gZi5hY3Rpb24gOnN1Ym1pdCwgOmJ1dHRvbl9odG1sID0+IHsgOmNsYXNz
ID0+ICJwcmltYXJ5IiwgOmRpc2FibGVfd2l0aCA9PiAnV2FpdC4uLicgfSAl
Pg0KICAgIDwlIGVuZCAlPg0KICA8JSBlbmQgJT4NCmBgYA0KDQpDdXN0b21p
emUgdGhlIEhUTUwgYXR0cmlidXRlcyBmb3IgdGhlIGA8bGk+YCB3cmFwcGVy
IGFyb3VuZCBldmVyeSBpbnB1dCB3aXRoIHRoZSBgOndyYXBwZXJfaHRtbGAg
b3B0aW9uIGhhc2guIFRoZXJlJ3Mgb25lIHNwZWNpYWwga2V5IGluIHRoZSBo
YXNoOiAoYDpjbGFzc2ApLCB3aGljaCB3aWxsIGFjdHVhbGx5IF9hcHBlbmRf
IHlvdXIgc3RyaW5nIG9mIGNsYXNzZXMgdG8gdGhlIGV4aXN0aW5nIGNsYXNz
ZXMgcHJvdmlkZWQgYnkgRm9ybXRhc3RpYyAobGlrZSBgInJlcXVpcmVkIHN0
cmluZyBlcnJvciJgKS4NCg0KYGBgZXJiDQogIDwlPSBzZW1hbnRpY19mb3Jt
X2ZvciBAcG9zdCBkbyB8ZnwgJT4NCiAgICA8JT0gZi5pbnB1dHMgZG8gJT4N
CiAgICAgIDwlPSBmLmlucHV0IDp0aXRsZSwgOndyYXBwZXJfaHRtbCA9PiB7
IDpjbGFzcyA9PiAiaW1wb3J0YW50IiB9ICU+DQogICAgICA8JT0gZi5pbnB1
dCA6Ym9keSAlPg0KICAgICAgPCU9IGYuaW5wdXQgOmRlc2NyaXB0aW9uLCA6
d3JhcHBlcl9odG1sID0+IHsgOnN0eWxlID0+ICJkaXNwbGF5Om5vbmU7IiB9
ICU+DQogICAgPCUgZW5kICU+DQogICAgLi4uDQogIDwlIGVuZCAlPg0KYGBg
DQoNCk1hbnkgaW5wdXRzIHByb3ZpZGUgYSBjb2xsZWN0aW9uIG9mIG9wdGlv
bnMgdG8gY2hvb3NlIGZyb20gKGxpa2UgYDpzZWxlY3RgLCBgOnJhZGlvYCwg
YDpjaGVja19ib3hlc2AsIGA6Ym9vbGVhbmApLiBJbiBtYW55IGNhc2VzLCBG
b3JtdGFzdGljIGNhbiBmaW5kIGNob2ljZXMgdGhyb3VnaCB0aGUgbW9kZWwg
YXNzb2NpYXRpb25zLCBidXQgaWYgeW91IHdhbnQgdG8gdXNlIHlvdXIgb3du
IHNldCBvZiBjaG9pY2VzLCB0aGUgYDpjb2xsZWN0aW9uYCBvcHRpb24gaXMg
d2hhdCB5b3Ugd2FudC4gIFlvdSBjYW4gcGFzcyBpbiBhbiBBcnJheSBvZiBv
YmplY3RzLCBhbiBhcnJheSBvZiBTdHJpbmdzLCBhIEhhc2guLi4gVGhyb3cg
YWxtb3N0IGFueXRoaW5nIGF0IGl0ISBFeGFtcGxlczoNCg0KYGBgcnVieQ0K
ICBmLmlucHV0IDphdXRob3JzLCA6YXMgPT4gOmNoZWNrX2JveGVzLCA6Y29s
bGVjdGlvbiA9PiBVc2VyLm9yZGVyKCJsYXN0X25hbWUgQVNDIikuYWxsDQog
IGYuaW5wdXQgOmF1dGhvcnMsIDphcyA9PiA6Y2hlY2tfYm94ZXMsIDpjb2xs
ZWN0aW9uID0+IGN1cnJlbnRfdXNlci5jb21wYW55LnVzZXJzLmFjdGl2ZQ0K
ICBmLmlucHV0IDphdXRob3JzLCA6YXMgPT4gOmNoZWNrX2JveGVzLCA6Y29s
bGVjdGlvbiA9PiBbQGp1c3RpbiwgQGthdGVdDQogIGYuaW5wdXQgOmF1dGhv
cnMsIDphcyA9PiA6Y2hlY2tfYm94ZXMsIDpjb2xsZWN0aW9uID0+IFsiSnVz
dGluIiwgIkthdGUiLCAiQW1lbGlhIiwgIkd1cyIsICJNZWciXQ0KICBmLmlu
cHV0IDphdXRob3IsICA6YXMgPT4gOnNlbGVjdCwgICAgICA6Y29sbGVjdGlv
biA9PiBBdXRob3IuYWxsDQogIGYuaW5wdXQgOmF1dGhvciwgIDphcyA9PiA6
c2VsZWN0LCAgICAgIDpjb2xsZWN0aW9uID0+IEF1dGhvci5wbHVjayg6Zmly
c3RfbmFtZSwgOmlkKQ0KICBmLmlucHV0IDphdXRob3IsICA6YXMgPT4gOnNl
bGVjdCwgICAgICA6Y29sbGVjdGlvbiA9PiBBdXRob3IucGx1Y2soQXJlbC5z
cWwoIkNPTkNBVChgZmlyc3RfbmFtZWAsICcgJywgYGxhc3RfbmFtZWApIiks
IDppZCkNCiAgZi5pbnB1dCA6YXV0aG9yLCAgOmFzID0+IDpzZWxlY3QsICAg
ICAgOmNvbGxlY3Rpb24gPT4gQXV0aG9yLnlvdXJfY3VzdG9tX3Njb3BlX29y
X2NsYXNzX21ldGhvZA0KICBmLmlucHV0IDphdXRob3IsICA6YXMgPT4gOnNl
bGVjdCwgICAgICA6Y29sbGVjdGlvbiA9PiB7IEBqdXN0aW4ubmFtZSA9PiBA
anVzdGluLmlkLCBAa2F0ZS5uYW1lID0+IEBrYXRlLmlkIH0NCiAgZi5pbnB1
dCA6YXV0aG9yLCAgOmFzID0+IDpzZWxlY3QsICAgICAgOmNvbGxlY3Rpb24g
PT4gWyJKdXN0aW4iLCAiS2F0ZSIsICJBbWVsaWEiLCAiR3VzIiwgIk1lZyJd
DQogIGYuaW5wdXQgOmF1dGhvciwgIDphcyA9PiA6cmFkaW8sICAgICAgIDpj
b2xsZWN0aW9uID0+IFVzZXIuYWxsDQogIGYuaW5wdXQgOmF1dGhvciwgIDph
cyA9PiA6cmFkaW8sICAgICAgIDpjb2xsZWN0aW9uID0+IFtAanVzdGluLCBA
a2F0ZV0NCiAgZi5pbnB1dCA6YXV0aG9yLCAgOmFzID0+IDpyYWRpbywgICAg
ICAgOmNvbGxlY3Rpb24gPT4geyBAanVzdGluLm5hbWUgPT4gQGp1c3Rpbi5p
ZCwgQGthdGUubmFtZSA9PiBAa2F0ZS5pZCB9DQogIGYuaW5wdXQgOmF1dGhv
ciwgIDphcyA9PiA6cmFkaW8sICAgICAgIDpjb2xsZWN0aW9uID0+IFsiSnVz
dGluIiwgIkthdGUiLCAiQW1lbGlhIiwgIkd1cyIsICJNZWciXQ0KICBmLmlu
cHV0IDphZG1pbiwgICA6YXMgPT4gOnJhZGlvLCAgICAgICA6Y29sbGVjdGlv
biA9PiBbIlllcyEiLCAiTm8iXQ0KICBmLmlucHV0IDpib29rX2lkLCA6YXMg
PT4gOnNlbGVjdCwgICAgICA6Y29sbGVjdGlvbiA9PiBIYXNoW0Jvb2suYWxs
Lm1hcHt8YnwgW2IubmFtZSxiLmlkXX1dDQogIGYuaW5wdXQgOmZhdl9ib29r
LDphcyA9PiA6ZGF0YWxpc3QgICAsIDpjb2xsZWN0aW9uID0+IEJvb2sucGx1
Y2soOm5hbWUpDQpgYGANCg0KDQojIyBUaGUgQXZhaWxhYmxlIElucHV0cw0K
DQpUaGUgRm9ybXRhc3RpYyBpbnB1dCB0eXBlczoNCg0KKiBgOnNlbGVjdGAg
LSBhIHNlbGVjdCBtZW51LiBEZWZhdWx0IGZvciBBY3RpdmVSZWNvcmQgYXNz
b2NpYXRpb25zOiBgYmVsb25nc190b2AsIGBoYXNfbWFueWAsIGFuZCBgaGFz
X2FuZF9iZWxvbmdzX3RvX21hbnlgLg0KKiBgOmNoZWNrX2JveGVzYCAtIGEg
c2V0IG9mIGNoZWNrX2JveCBpbnB1dHMuIEFsdGVybmF0aXZlIHRvIGA6c2Vs
ZWN0YCBmb3IgQWN0aXZlUmVjb3JkLWFzc29jaWF0aW9uczogYGhhc19tYW55
YCwgYW5kIGhhc19hbmRfYmVsb25nc190b19tYW55YC4NCiogYDpyYWRpb2Ag
LSBhIHNldCBvZiByYWRpbyBpbnB1dHMuIEFsdGVybmF0aXZlIHRvIGA6c2Vs
ZWN0YCBmb3IgQWN0aXZlUmVjb3JkLWFzc29jaWF0aW9uczogYGJlbG9uZ3Nf
dG9gLg0KKiBgOnRpbWVfem9uZWAgLSBhIHNlbGVjdCBpbnB1dC4gRGVmYXVs
dCBmb3IgY29sdW1uIHR5cGVzOiBgOnN0cmluZ2Agd2l0aCBuYW1lIG1hdGNo
aW5nIGAidGltZV96b25lImAuDQoqIGA6cGFzc3dvcmRgIC0gYSBwYXNzd29y
ZCBpbnB1dC4gRGVmYXVsdCBmb3IgY29sdW1uIHR5cGVzOiBgOnN0cmluZ2Ag
d2l0aCBuYW1lIG1hdGNoaW5nIGAicGFzc3dvcmQiYC4NCiogYDp0ZXh0YCAt
IGEgdGV4dGFyZWEuIERlZmF1bHQgZm9yIGNvbHVtbiB0eXBlczogYDp0ZXh0
YC4NCiogYDpkYXRlX3NlbGVjdGAgLSBhIGRhdGUgc2VsZWN0LiBEZWZhdWx0
IGZvciBjb2x1bW4gdHlwZXM6IGA6ZGF0ZWAuDQoqIGA6ZGF0ZXRpbWVfc2Vs
ZWN0YCAtIGEgZGF0ZSBhbmQgdGltZSBzZWxlY3QuIERlZmF1bHQgZm9yIGNv
bHVtbiB0eXBlczogYDpkYXRldGltZWAgYW5kIGA6dGltZXN0YW1wYC4NCiog
YDp0aW1lX3NlbGVjdGAgLSBhIHRpbWUgc2VsZWN0LiBEZWZhdWx0IGZvciBj
b2x1bW4gdHlwZXM6IGA6dGltZWAuDQoqIGA6Ym9vbGVhbmAgLSBhIGNoZWNr
Ym94LiBEZWZhdWx0IGZvciBjb2x1bW4gdHlwZXM6IGA6Ym9vbGVhbmAuDQoq
IGA6c3RyaW5nYCAtIGEgdGV4dCBmaWVsZC4gRGVmYXVsdCBmb3IgY29sdW1u
IHR5cGVzOiBgOnN0cmluZ2AuDQoqIGA6bnVtYmVyYCAtIGEgdGV4dCBmaWVs
ZCAoanVzdCBsaWtlIHN0cmluZykuIERlZmF1bHQgZm9yICBjb2x1bW4gdHlw
ZXM6IGA6aW50ZWdlcmAsIGA6ZmxvYXRgLCBhbmQgYDpkZWNpbWFsYC4NCiog
YDpmaWxlYCAtIGEgZmlsZSBmaWVsZC4gRGVmYXVsdCBmb3IgZmlsZS1hdHRh
Y2htZW50IGF0dHJpYnV0ZXMgbWF0Y2hpbmc6IFtwYXBlcmNsaXBdKGh0dHA6
Ly9naXRodWIuY29tL3Rob3VnaHRib3QvcGFwZXJjbGlwKSBvciBbYXR0YWNo
bWVudF9mdV0oaHR0cDovL2dpdGh1Yi5jb20vdGVjaG5vd2VlbmllL2F0dGFj
aG1lbnRfZnUpLg0KKiBgOmNvdW50cnlgIC0gYSBzZWxlY3QgbWVudSBvZiBj
b3VudHJ5IG5hbWVzLiBEZWZhdWx0IGZvciBjb2x1bW4gdHlwZXM6IGA6c3Ry
aW5nYCB3aXRoIG5hbWUgYCJjb3VudHJ5ImAgLSByZXF1aXJlcyBhICpjb3Vu
dHJ5X3NlbGVjdCogcGx1Z2luIHRvIGJlIGluc3RhbGxlZC4NCiogYDplbWFp
bGAgLSBhIHRleHQgZmllbGQgKGp1c3QgbGlrZSBzdHJpbmcpLiBEZWZhdWx0
IGZvciBjb2x1bW5zIHdpdGggbmFtZSBtYXRjaGluZyBgImVtYWlsImAuIE5l
dyBpbiBIVE1MNS4gV29ya3Mgb24gc29tZSBtb2JpbGUgYnJvd3NlcnMgYWxy
ZWFkeS4NCiogYDp1cmxgIC0gYSB0ZXh0IGZpZWxkIChqdXN0IGxpa2Ugc3Ry
aW5nKS4gRGVmYXVsdCBmb3IgY29sdW1ucyB3aXRoIG5hbWUgbWF0Y2hpbmcg
YCJ1cmwiYC4gTmV3IGluIEhUTUw1LiBXb3JrcyBvbiBzb21lIG1vYmlsZSBi
cm93c2VycyBhbHJlYWR5Lg0KKiBgOnBob25lYCAtIGEgdGV4dCBmaWVsZCAo
anVzdCBsaWtlIHN0cmluZykuIERlZmF1bHQgZm9yIGNvbHVtbnMgd2l0aCBu
YW1lIG1hdGNoaW5nIGAicGhvbmUiYCBvciBgImZheCJgLiBOZXcgaW4gSFRN
TDUuDQoqIGA6c2VhcmNoYCAtIGEgdGV4dCBmaWVsZCAoanVzdCBsaWtlIHN0
cmluZykuIERlZmF1bHQgZm9yIGNvbHVtbnMgd2l0aCBuYW1lIG1hdGNoaW5n
IGAic2VhcmNoImAuIE5ldyBpbiBIVE1MNS4gV29ya3Mgb24gU2FmYXJpLg0K
KiBgOmhpZGRlbmAgLSBhIGhpZGRlbiBmaWVsZC4gQ3JlYXRlcyBhIGhpZGRl
biBmaWVsZCAoYWRkZWQgZm9yIGNvbXBhdGliaWxpdHkpLg0KKiBgOnJhbmdl
YCAtIGEgc2xpZGVyIGZpZWxkLg0KKiBgOmRhdGFsaXN0YCAtIGEgdGV4dCBm
aWVsZCB3aXRoIGEgYWNjb21wYW55aW5nIFtkYXRhbGlzdCB0YWddKGh0dHBz
Oi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuL2RvY3MvV2ViL0hUTUwvRWxl
bWVudC9kYXRhbGlzdCkgd2hpY2ggcHJvdmlkZXMgb3B0aW9ucyBmb3IgYXV0
b2NvbXBsZXRpb24NCg0KVGhlIGNvbW1lbnRzIGluIHRoZSBjb2RlIGFyZSBw
cmV0dHkgZ29vZCBmb3IgZWFjaCBvZiB0aGVzZSAod2hhdCBpdCBkb2VzLCB3
aGF0IHRoZSBvdXRwdXQgaXMsIHdoYXQgdGhlIG9wdGlvbnMgYXJlLCBldGMu
KSBzbyBnbyBjaGVjayBpdCBvdXQuDQoNCg0KIyMgRGVsZWdhdGlvbiBmb3Ig
bGFiZWwgbG9va3Vwcw0KDQpGb3JtdGFzdGljIGRlY2lkZXMgd2hpY2ggbGFi
ZWwgdG8gdXNlIGluIHRoZSBmb2xsb3dpbmcgb3JkZXI6DQoNCmBgYA0KICAx
LiA6bGFiZWwgICAgICAgICAgICAgIyA6bGFiZWwgPT4gIkNob29zZSBUaXRs
ZSINCiAgMi4gRm9ybXRhc3RpYyBpMThuICAgICMgaWYgZWl0aGVyIDpsYWJl
bCA9PiB0cnVlIHx8IGkxOG5fbG9va3Vwc19ieV9kZWZhdWx0ID0gdHJ1ZSAo
c2VlIEludGVybmF0aW9uYWxpemF0aW9uKQ0KICAzLiBBY3RpdmVyZWNvcmQg
aTE4biAgIyBpZiBsb2NhbGl6YXRpb24gZmlsZSBmb3VuZCBmb3IgdGhlIGdp
dmVuIGF0dHJpYnV0ZQ0KICA0LiBsYWJlbF9zdHJfbWV0aG9kICAgIyBpZiBu
b3RoaW5nIHByb3ZpZGVkIHRoaXMgZGVmYXVsdHMgdG8gOmh1bWFuaXplIGJ1
dCBjYW4gYmUgc2V0IHRvIGEgY3VzdG9tIG1ldGhvZA0KYGBgDQoNCiMjIElu
dGVybmF0aW9uYWxpemF0aW9uIChJMThuKQ0KDQojIyMgQmFzaWMgTG9jYWxp
emF0aW9uDQoNCkZvcm10YXN0aWMgaGFzIHNvbWUgbmVhdCBJMThuLWZlYXR1
cmVzLiBBY3RpdmVSZWNvcmQgb2JqZWN0IG5hbWVzIGFuZCBhdHRyaWJ1dGVz
IGFyZSwgYnkgZGVmYXVsdCwgdGFrZW4gZnJvbSBjYWxsaW5nIGBAb2JqZWN0
Lmh1bWFuX25hbWVgIGFuZCBgQG9iamVjdC5odW1hbl9hdHRyaWJ1dGVfbmFt
ZShhdHRyKWAgcmVzcGVjdGl2ZWx5LiBUaGVyZSBhcmUgYSBmZXcgd29yZHMg
c3BlY2lmaWMgdG8gRm9ybXRhc3RpYyB0aGF0IGNhbiBiZSB0cmFuc2xhdGVk
LiBTZWUgYGxpYi9sb2NhbGUvZW4ueW1sYCBmb3IgbW9yZSBpbmZvcm1hdGlv
bi4NCg0KQmFzaWMgbG9jYWxpemF0aW9uIChsYWJlbHMgb25seSwgd2l0aCBB
Y3RpdmVSZWNvcmQpOg0KDQpgYGBlcmINCiAgPCU9IHNlbWFudGljX2Zvcm1f
Zm9yIEBwb3N0IGRvIHxmfCAlPg0KICAgIDwlPSBmLmlucHV0cyBkbyAlPg0K
ICAgICAgPCU9IGYuaW5wdXQgOnRpdGxlICU+ICAgICAgICAjID0+IDpsYWJl
bCA9PiBJMThuLnQoJ2FjdGl2ZXJlY29yZC5hdHRyaWJ1dGVzLnVzZXIudGl0
bGUnKSAgICBvciAnVGl0bGUnDQogICAgICA8JT0gZi5pbnB1dCA6Ym9keSAl
PiAgICAgICAgICMgPT4gOmxhYmVsID0+IEkxOG4udCgnYWN0aXZlcmVjb3Jk
LmF0dHJpYnV0ZXMudXNlci5ib2R5JykgICAgIG9yICdCb2R5Jw0KICAgICAg
PCU9IGYuaW5wdXQgOnNlY3Rpb24gJT4gICAgICAjID0+IDpsYWJlbCA9PiBJ
MThuLnQoJ2FjdGl2ZXJlY29yZC5hdHRyaWJ1dGVzLnVzZXIuc2VjdGlvbicp
ICBvciAnU2VjdGlvbicNCiAgICA8JSBlbmQgJT4NCiAgPCUgZW5kICU+DQpg
YGANCg0KKk5vdGU6KiBUaGlzIGlzIHBlcmZlY3RseSBmaW5lIGlmIHlvdSBq
dXN0IHdhbnQgeW91ciBsYWJlbHMvYXR0cmlidXRlcyBhbmQvb3IgbW9kZWxz
IHRvIGJlIHRyYW5zbGF0ZWQgdXNpbmcgKkFjdGl2ZVJlY29yZCBJMThuIGF0
dHJpYnV0ZSB0cmFuc2xhdGlvbnMqLCBhbmQgeW91IGRvbid0IHVzZSBpbnB1
dCBoaW50cyBhbmQgbGVnZW5kcy4gQnV0IHdoYXQgaWYgeW91IGRvPyBBbmQg
d2hhdCBpZiB5b3UgZG9uJ3Qgd2FudCBzYW1lIGxhYmVscyBpbiBhbGwgZm9y
bXM/DQoNCiMjIyBFbmhhbmNlZCBMb2NhbGl6YXRpb24gKEZvcm10YXN0aWMg
STE4biBBUEkpDQoNCkZvcm10YXN0aWMgc3VwcG9ydHMgbG9jYWxpemVkICps
YWJlbHMqLCAqaGludHMqLCAqbGVnZW5kcyosICphY3Rpb25zKiB1c2luZyB0
aGUgSTE4biBBUEkgZm9yIG1vcmUgYWR2YW5jZWQgdXNhZ2UuIFlvdXIgZm9y
bXMgY2FuIG5vdyBiZSBEUlllciBhbmQgbW9yZSBmbGV4aWJsZSB0aGFuIGV2
ZXIsIGFuZCBzdGlsbCBmdWxseSBsb2NhbGl6ZWQuIFRoaXMgaXMgaG93Og0K
DQoqMS4gRW5hYmxlIEkxOG4gbG9va3VwcyBieSBkZWZhdWx0IChgY29uZmln
L2luaXRpYWxpemVycy9mb3JtdGFzdGljLnJiYCk6Kg0KDQpgYGBydWJ5DQog
IEZvcm10YXN0aWM6OkZvcm1CdWlsZGVyLmkxOG5fbG9va3Vwc19ieV9kZWZh
dWx0ID0gdHJ1ZQ0KYGBgDQoNCioyLiBBZGQgc29tZSBsYWJlbC10cmFuc2xh
dGlvbnMvdmFyaWFudHMgKGBjb25maWcvbG9jYWxlcy9lbi55bWxgKToqDQoN
CmBgYHltbA0KICBlbjoNCiAgICBmb3JtdGFzdGljOg0KICAgICAgdGl0bGVz
Og0KICAgICAgICBwb3N0X2RldGFpbHM6ICJQb3N0IGRldGFpbHMiDQogICAg
ICBsYWJlbHM6DQogICAgICAgIHBvc3Q6DQogICAgICAgICAgdGl0bGU6ICJZ
b3VyIFRpdGxlIg0KICAgICAgICAgIGJvZHk6ICJXcml0ZSBzb21ldGhpbmcu
Li4iDQogICAgICAgICAgZWRpdDoNCiAgICAgICAgICAgIHRpdGxlOiAiRWRp
dCB0aXRsZSINCiAgICAgIGhpbnRzOg0KICAgICAgICBwb3N0Og0KICAgICAg
ICAgIHRpdGxlOiAiQ2hvb3NlIGEgZ29vZCB0aXRsZSBmb3IgeW91ciBwb3N0
LiINCiAgICAgICAgICBib2R5OiAiV3JpdGUgc29tZXRoaW5nIGluc3Bpcmlu
ZyBoZXJlLiINCiAgICAgIHBsYWNlaG9sZGVyczoNCiAgICAgICAgcG9zdDoN
CiAgICAgICAgICB0aXRsZTogIlRpdGxlIHlvdXIgcG9zdCINCiAgICAgICAg
ICBzbHVnOiAiTGVhdmUgYmxhbmsgZm9yIGFuIGF1dG9tYXRpY2FsbHkgZ2Vu
ZXJhdGVkIHNsdWciDQogICAgICAgIHVzZXI6DQogICAgICAgICAgZW1haWw6
ICJ5b3VAeW91cnMuY29tIg0KICAgICAgYWN0aW9uczoNCiAgICAgICAgY3Jl
YXRlOiAiQ3JlYXRlIG15ICV7bW9kZWx9Ig0KICAgICAgICB1cGRhdGU6ICJT
YXZlIGNoYW5nZXMiDQogICAgICAgIHJlc2V0OiAiUmVzZXQgZm9ybSINCiAg
ICAgICAgY2FuY2VsOiAiQ2FuY2VsIGFuZCBnbyBiYWNrIg0KICAgICAgICBk
dW1taWU6ICJMYXVuY2ghIg0KYGBgDQoNCiozLiAuLi5hbmQgbm93IHlvdSds
bCBnZXQ6Kg0KDQpgYGBlcmINCiAgPCU9IHNlbWFudGljX2Zvcm1fZm9yIFBv
c3QubmV3IGRvIHxmfCAlPg0KICAgIDwlPSBmLmlucHV0cyBkbyAlPg0KICAg
ICAgPCU9IGYuaW5wdXQgOnRpdGxlICU+ICAgICAgIyA9PiA6bGFiZWwgPT4g
IkNob29zZSBhIHRpdGxlLi4uIiwgOmhpbnQgPT4gIkNob29zZSBhIGdvb2Qg
dGl0bGUgZm9yIHlvdXIgcG9zdC4iDQogICAgICA8JT0gZi5pbnB1dCA6Ym9k
eSAlPiAgICAgICAjID0+IDpsYWJlbCA9PiAiV3JpdGUgc29tZXRoaW5nLi4u
IiwgOmhpbnQgPT4gIldyaXRlIHNvbWV0aGluZyBpbnNwaXJpbmcgaGVyZS4i
DQogICAgICA8JT0gZi5pbnB1dCA6c2VjdGlvbiAlPiAgICAjID0+IDpsYWJl
bCA9PiBJMThuLnQoJ2FjdGl2ZXJlY29yZC5hdHRyaWJ1dGVzLnVzZXIuc2Vj
dGlvbicpICBvciAnU2VjdGlvbicNCiAgICA8JSBlbmQgJT4NCiAgICA8JT0g
Zi5hY3Rpb25zIGRvICU+DQogICAgICA8JT0gZi5hY3Rpb24gOnN1Ym1pdCAl
PiAgICMgPT4gIkNyZWF0ZSBteSAle21vZGVsfSINCiAgICA8JSBlbmQgJT4N
CiAgPCUgZW5kICU+DQpgYGANCg0KKjQuIExvY2FsaXplZCB0aXRsZXMgKGEu
ay5hLiBsZWdlbmRzKToqDQoNCl9Ob3RlOiBTbGlnaHRseSBkaWZmZXJlbnQg
YmVjYXVzZSBGb3JtdGFzdGljIGNhbid0IGd1ZXNzIGhvdyB5b3UgZ3JvdXAg
ZmllbGRzIGluIGEgZm9ybS4gTGVnZW5kIHRleHQgY2FuIGJlIHNldCB3aXRo
IGZpcnN0IChhcyBpbiB0aGUgc2FtcGxlIGJlbG93KSBzcGVjaWZpZWQgdmFs
dWUsIG9yIDpuYW1lLzp0aXRsZSBvcHRpb25zIC0gZGVwZW5kaW5nIG9uIHdo
YXQgZmxhdm9yIGlzIHByZWZlcnJlZC5fDQoNCmBgYGVyYg0KICA8JT0gc2Vt
YW50aWNfZm9ybV9mb3IgQHBvc3QgZG8gfGZ8ICU+DQogICAgPCU9IGYuaW5w
dXRzIDpwb3N0X2RldGFpbHMgZG8gJT4gICAjID0+IDp0aXRsZSA9PiAiUG9z
dCBkZXRhaWxzIg0KICAgICAgIyAuLi4NCiAgICA8JSBlbmQgJT4NCiAgICAj
IC4uLg0KPCUgZW5kICU+DQpgYGANCg0KKjUuIE92ZXJyaWRlIEkxOG4gc2V0
dGluZ3M6Kg0KDQpgYGBlcmINCiAgPCU9IHNlbWFudGljX2Zvcm1fZm9yIEBw
b3N0IGRvIHxmfCAlPg0KICAgIDwlPSBmLmlucHV0cyBkbyAlPg0KICAgICAg
PCU9IGYuaW5wdXQgOnRpdGxlICU+ICAgICAgIyA9PiA6bGFiZWwgPT4gIkNo
b29zZSBhIHRpdGxlLi4uIiwgOmhpbnQgPT4gIkNob29zZSBhIGdvb2QgdGl0
bGUgZm9yIHlvdXIgcG9zdC4iDQogICAgICA8JT0gZi5pbnB1dCA6Ym9keSwg
OmhpbnQgPT4gZmFsc2UgJT4gICAgICAgICAgICAgICAgICMgPT4gOmxhYmVs
ID0+ICJXcml0ZSBzb21ldGhpbmcuLi4iDQogICAgICA8JT0gZi5pbnB1dCA6
c2VjdGlvbiwgOmxhYmVsID0+ICdTb21lIHNlY3Rpb24nICU+ICAgICMgPT4g
OmxhYmVsID0+ICdTb21lIHNlY3Rpb24nDQogICAgPCUgZW5kICU+DQogICAg
PCU9IGYuYWN0aW9ucyBkbyAlPg0KICAgICAgPCU9IGYuYWN0aW9uIDpzdWJt
aXQsIDpsYWJlbCA9PiA6ZHVtbWllICU+ICAgICAgICAgIyA9PiAiTGF1bmNo
ISINCiAgICA8JSBlbmQgJT4NCiAgPCUgZW5kICU+DQpgYGANCg0KSWYgSTE4
bi1sb29rdXBzIGlzIGRpc2FibGVkLCBpLmUuOg0KDQpgYGBydWJ5DQogIEZv
cm10YXN0aWM6OkZvcm1CdWlsZGVyLmkxOG5fbG9va3Vwc19ieV9kZWZhdWx0
ID0gZmFsc2UNCmBgYA0KDQouLi50aGVuIHlvdSBjYW4gZW5hYmxlIEkxOG4g
d2l0aGluIHRoZSBmb3JtcyBpbnN0ZWFkOg0KDQpgYGBlcmINCiAgPCU9IHNl
bWFudGljX2Zvcm1fZm9yIEBwb3N0IGRvIHxmfCAlPg0KICAgIDwlPSBmLmlu
cHV0cyBkbyAlPg0KICAgICAgPCU9IGYuaW5wdXQgOnRpdGxlLCA6bGFiZWwg
PT4gdHJ1ZSAlPiAgICAgICMgPT4gOmxhYmVsID0+ICJDaG9vc2UgYSB0aXRs
ZS4uLiINCiAgICAgIDwlPSBmLmlucHV0IDpib2R5LCA6bGFiZWwgPT4gdHJ1
ZSAlPiAgICAgICAjID0+IDpsYWJlbCA9PiAiV3JpdGUgc29tZXRoaW5nLi4u
Ig0KICAgICAgPCU9IGYuaW5wdXQgOnNlY3Rpb24sIDpsYWJlbCA9PiB0cnVl
ICU+ICAgICMgPT4gOmxhYmVsID0+IEkxOG4udCgnYWN0aXZlcmVjb3JkLmF0
dHJpYnV0ZXMudXNlci5zZWN0aW9uJykgIG9yICdTZWN0aW9uJw0KICAgIDwl
IGVuZCAlPg0KICAgIDwlPSBmLmFjdGlvbnMgZG8gJT4NCiAgICAgIDwlPSBm
LmFjdGlvbiA6c3VibWl0LCA6bGFiZWwgPT4gdHJ1ZSAlPiAgICAjID0+ICJV
cGRhdGUgJXttb2RlbH0iIChpZiB3ZSBhcmUgaW4gZWRpdCB0aGF0IGlzLi4u
KQ0KICAgIDwlIGVuZCAlPg0KICA8JSBlbmQgJT4NCmBgYA0KDQoqNi4gQWR2
YW5jZWQgSTE4biBsb29rdXBzKg0KDQpGb3IgbW9yZSBmbGV4aWJsZSBmb3Jt
czsgRm9ybXRhc3RpYyBmaW5kcyB0cmFuc2xhdGlvbnMgdXNpbmcgYSBib3R0
b20tdXAgYXBwcm9hY2ggdGFraW5nIHRoZSBmb2xsb3dpbmcgdmFyaWFibGVz
IGluIGFjY291bnQ6DQoNCiogYE1PREVMYCwgZS5nLiAicG9zdCINCiogYEFD
VElPTmAsIGUuZy4gImVkaXQiDQoqIGBLRVkvQVRUUklCVVRFYCwgZS5nLiAi
dGl0bGUiLCA6bXlfY3VzdG9tX2tleSwgLi4uDQoNCi4uLmluIHRoZSBmb2xs
b3dpbmcgb3JkZXI6DQoNCjEuIGBmb3JtdGFzdGljLnt0aXRsZXMsbGFiZWxz
LGhpbnRzLGFjdGlvbnN9Lk1PREVMLkFDVElPTi5BVFRSSUJVVEVgIC0gYnkg
bW9kZWwgYW5kIGFjdGlvbg0KMi4gYGZvcm10YXN0aWMue3RpdGxlcyxsYWJl
bHMsaGludHMsYWN0aW9uc30uTU9ERUwuQVRUUklCVVRFYCAtIGJ5IG1vZGVs
DQozLiBgZm9ybXRhc3RpYy57dGl0bGVzLGxhYmVscyxoaW50cyxhY3Rpb25z
fS5BVFRSSUJVVEVgIC0gZ2xvYmFsIGRlZmF1bHQNCg0KLi4ud2hpY2ggbWVh
bnMgdGhhdCB5b3UgY2FuIGRlZmluZSB0cmFuc2xhdGlvbnMgbGlrZSB0aGlz
Og0KDQpgYGB5bWwNCiAgZW46DQogICAgZm9ybXRhc3RpYzoNCiAgICAgIGxh
YmVsczoNCiAgICAgICAgdGl0bGU6ICJUaXRsZSIgICMgRGVmYXVsdCBnbG9i
YWwgdmFsdWUNCiAgICAgICAgYXJ0aWNsZToNCiAgICAgICAgICBib2R5OiAi
QXJ0aWNsZSBjb250ZW50Ig0KICAgICAgICBwb3N0Og0KICAgICAgICAgIG5l
dzoNCiAgICAgICAgICAgIHRpdGxlOiAiQ2hvb3NlIGEgdGl0bGUuLi4iDQog
ICAgICAgICAgICBib2R5OiAiV3JpdGUgc29tZXRoaW5nLi4uIg0KICAgICAg
ICAgIGVkaXQ6DQogICAgICAgICAgICB0aXRsZTogIkVkaXQgdGl0bGUiDQog
ICAgICAgICAgICBib2R5OiAiRWRpdCBib2R5Ig0KYGBgDQoNClZhbHVlcyBm
b3IgYGxhYmVsc2AvYGhpbnRzYC9gYWN0aW9uc2AgYXJlIGNhbiB0YWtlIHZh
bHVlczogYFN0cmluZ2AgKGV4cGxpY2l0IHZhbHVlKSwgYFN5bWJvbGAgKGkx
OG4tbG9va3VwLWtleSByZWxhdGl2ZSB0byB0aGUgY3VycmVudCAidHlwZSIs
IGUuZy4gYWN0aW9uczopLCBgdHJ1ZWAgKGZvcmNlIEkxOG4gbG9va3VwKSwg
YGZhbHNlYCAoZm9yY2Ugbm8gSTE4biBsb29rdXApLiBUaXRsZXMgKGxlZ2Vu
ZHMpIGNhbiBvbmx5IHRha2U6IGBTdHJpbmdgIGFuZCBgU3ltYm9sYCAtIHRy
dWUvZmFsc2UgaGF2ZSBubyBtZWFuaW5nLg0KDQoqNy4gQmFzaWMgVHJhbnNs
YXRpb25zKg0KSWYgeW91IHdhbnQgc29tZSBiYXNpYyB0cmFuc2xhdGlvbnMs
IHRha2UgYSBsb29rIG9uIHRoZSBbZm9ybXRhc3RpY19pMThuIGdlbV0oaHR0
cHM6Ly9naXRodWIuY29tL3RpbW9zY2hpbGxpbmcvZm9ybXRhc3RpY19pMThu
KS4NCg0KIyMgU2VtYW50aWMgZXJyb3JzDQoNCllvdSBjYW4gc2hvdyBlcnJv
cnMgb24gYmFzZSAoYnkgZGVmYXVsdCkgYW5kIGFueSBvdGhlciBhdHRyaWJ1
dGUganVzdCBieSBwYXNzaW5nIGl0cyBuYW1lIHRvIHRoZSBzZW1hbnRpY19l
cnJvcnMgbWV0aG9kOg0KDQpgYGBlcmINCiAgPCU9IHNlbWFudGljX2Zvcm1f
Zm9yIEBwb3N0IGRvIHxmfCAlPg0KICAgIDwlPSBmLnNlbWFudGljX2Vycm9y
cyA6c3RhdGUgJT4NCiAgPCUgZW5kICU+DQpgYGANCg0KDQojIyBNb2RpZmll
ZCAmIEN1c3RvbSBJbnB1dHMNCg0KWW91IGNhbiBtb2RpZnkgZXhpc3Rpbmcg
aW5wdXRzLCBzdWJjbGFzcyB0aGVtLCBvciBjcmVhdGUgeW91ciBvd24gZnJv
bSBzY3JhdGNoLiBIZXJlJ3MgdGhlIGJhc2ljIHByb2Nlc3M6DQoNCiogUnVu
IHRoZSBpbnB1dCBnZW5lcmF0b3IgYW5kIHByb3ZpZGUgeW91ciBjdXN0b20g
aW5wdXQgbmFtZS4gRm9yIGV4YW1wbGUsIGByYWlscyBnZW5lcmF0ZSBmb3Jt
dGFzdGljOmlucHV0IGhhdF9zaXplYC4gVGhpcyBjcmVhdGVzIHRoZSBmaWxl
IGBhcHAvaW5wdXRzL2hhdF9zaXplX2lucHV0LnJiYC4gWW91IGNhbiBhbHNv
IHByb3ZpZGUgbmFtZXNwYWNlIHRvIGlucHV0IG5hbWUgbGlrZSBgcmFpbHMg
Z2VuZXJhdGUgZm9ybXRhc3RpYzppbnB1dCBmb28vY3VzdG9tYCBvciBgcmFp
bHMgZ2VuZXJhdGUgZm9ybXRhc3RpYzppbnB1dCBGb286OkN1c3RvbWAsIHRo
aXMgd2lsbCBjcmVhdGUgdGhlIGZpbGUgYGFwcC9pbnB1dHMvZm9vL2N1c3Rv
bV9pbnB1dC5yYmAgaW4gYm90aCBjYXNlcy4NCiogVG8gdXNlIHRoYXQgaW5w
dXQsIGxlYXZlIG9mZiB0aGUgd29yZCAiaW5wdXQiIGluIHlvdXIgYGFzYCBz
dGF0ZW1lbnQuIEZvciBleGFtcGxlLCBgZi5pbnB1dCg6c2l6ZSwgOmFzID0+
IDpoYXRfc2l6ZSlgDQoNClNwZWNpZmljIGV4YW1wbGVzIGZvbGxvdy4NCg0K
IyMjIENoYW5naW5nIEV4aXN0aW5nIElucHV0IEJlaGF2aW9yDQoNClRvIG1v
ZGlmeSB0aGUgYmVoYXZpb3Igb2YgYFN0cmluZ0lucHV0YCwgc3ViY2xhc3Mg
aXQgaW4gYSBuZXcgZmlsZSwgYGFwcC9pbnB1dHMvc3RyaW5nX2lucHV0LnJi
YDoNCg0KYGBgcnVieQ0KICBjbGFzcyBTdHJpbmdJbnB1dCA8IEZvcm10YXN0
aWM6OklucHV0czo6U3RyaW5nSW5wdXQNCiAgICBkZWYgdG9faHRtbA0KICAg
ICAgcHV0cyAidGhpcyBpcyBteSBtb2RpZmllZCB2ZXJzaW9uIG9mIFN0cmlu
Z0lucHV0Ig0KICAgICAgc3VwZXINCiAgICBlbmQNCiAgZW5kDQpgYGANCg0K
QW5vdGhlciB3YXkgdG8gbW9kaWZ5IGJlaGF2aW9yIGlzIGJ5IHVzaW5nIHRo
ZSBpbnB1dCBnZW5lcmF0b3I6DQpgYGBzaGVsbA0KJCByYWlscyBnZW5lcmF0
ZSBmb3JtdGFzdGljOmlucHV0IHN0cmluZyAtLWV4dGVuZA0KYGBgDQoNClRo
aXMgZ2VuZXJhdGVzIHRoZSBmaWxlIGBhcHAvaW5wdXRzL3N0cmluZ19pbnB1
dC5yYmAgd2l0aCBpdHMgcmVzcGVjdGl2ZSBjb250ZW50IGNsYXNzLg0KDQpZ
b3UgY2FuIHVzZSB5b3VyIG1vZGlmaWVkIHZlcnNpb24gd2l0aCBgOmFzID0+
IDpzdHJpbmdgLg0KDQojIyMgQ3JlYXRpbmcgTmV3IElucHV0cyBCYXNlZCBv
biBFeGlzdGluZyBPbmVzDQoNClRvIGNyZWF0ZSB5b3VyIG93biBuZXcgdHlw
ZXMgb2YgaW5wdXRzIGJhc2VkIG9uIGV4aXN0aW5nIGlucHV0cywgdGhlIHBy
b2Nlc3MgaXMgc2ltaWxhci4gRm9yIGV4YW1wbGUsIHRvIGNyZWF0ZSBgRmxl
eGlibGVUZXh0SW5wdXRgIGJhc2VkIG9uIGBTdHJpbmdJbnB1dGAsIHB1dCB0
aGUgZm9sbG93aW5nIGluIGBhcHAvaW5wdXRzL2ZsZXhpYmxlX3RleHRfaW5w
dXQucmJgOg0KDQpgYGBydWJ5DQogIGNsYXNzIEZsZXhpYmxlVGV4dElucHV0
IDwgRm9ybXRhc3RpYzo6SW5wdXRzOjpTdHJpbmdJbnB1dA0KICAgIGRlZiBp
bnB1dF9odG1sX29wdGlvbnMNCiAgICAgIHN1cGVyLm1lcmdlKDpjbGFzcyA9
PiAiZmxleGlibGUtdGV4dC1hcmVhIikNCiAgICBlbmQNCiAgZW5kDQpgYGAN
Cg0KWW91IGNhbiBhbHNvIGV4dGVuZCBleGlzdGluZyBpbnB1dCBiZWhhdmlv
ciBieSB1c2luZyB0aGUgaW5wdXQgZ2VuZXJhdG9yOg0KDQpgYGBzaGVsbA0K
JCByYWlscyBnZW5lcmF0ZSBmb3JtdGFzdGljOmlucHV0IEZsZXhpYmxlVGV4
dCAtLWV4dGVuZCBzdHJpbmcNCmBgYA0KDQpUaGlzIGdlbmVyYXRlcyB0aGUg
ZmlsZSBgYXBwL2lucHV0cy9mbGV4aWJsZV90ZXh0X2lucHV0LnJiYCB3aXRo
IGl0cyByZXNwZWN0aXZlIGNvbnRlbnQgY2xhc3MuDQoNCllvdSBjYW4gdXNl
IHlvdXIgbmV3IGlucHV0IHdpdGggYDphcyA9PiA6ZmxleGlibGVfdGV4dGAu
DQoNCiMjIyBDcmVhdGluZyBOZXcgSW5wdXRzIEZyb20gU2NyYXRjaA0KDQpU
byBjcmVhdGUgYSBjdXN0b20gYERhdGVQaWNrZXJJbnB1dGAgZnJvbSBzY3Jh
dGNoLCBwdXQgdGhlIGZvbGxvd2luZyBpbiBgYXBwL2lucHV0cy9kYXRlX3Bp
Y2tlcl9pbnB1dC5yYmA6DQoNCmBgYHJ1YnkNCiAgY2xhc3MgRGF0ZVBpY2tl
cklucHV0DQogICAgaW5jbHVkZSBGb3JtdGFzdGljOjpJbnB1dHM6OkJhc2UN
CiAgICBkZWYgdG9faHRtbA0KICAgICAgIyAuLi4NCiAgICBlbmQNCiAgZW5k
DQpgYGANCg0KWW91IGNhbiB1c2UgeW91ciBuZXcgaW5wdXQgd2l0aCBgOmFz
ID0+IDpkYXRlX3BpY2tlcmAuDQoNCg0KIyMgRGVwZW5kZW5jaWVzDQoNClRo
ZXJlIGFyZSBub25lIG90aGVyIHRoYW4gUmFpbHMgaXRzZWxmLCBidXQuLi4N
Cg0KKiBJZiB5b3Ugd2FudCB0byB1c2UgdGhlIGA6Y291bnRyeWAgaW5wdXQs
IHlvdSdsbCBuZWVkIHRvIGluc3RhbGwgdGhlIFtjb3VudHJ5LXNlbGVjdCBw
bHVnaW5dKGh0dHBzOi8vZ2l0aHViLmNvbS9zdGVmYW5wZW5uZXIvY291bnRy
eV9zZWxlY3QpIChvciBhbnkgb3RoZXIgY291bnRyeV9zZWxlY3QgcGx1Z2lu
IHdpdGggdGhlIHNhbWUgQVBJKS4gQm90aCAxLnggYW5kIDIueCBhcmUgc3Vw
cG9ydGVkLCBidXQgdGhleSBiZWhhdmUgZGlmZmVyZW50bHkgd2hlbiBzdG9y
aW5nIGRhdGEsIHNvIHBsZWFzZSBzZWUgdGhlaXIgW3VwZ3JhZGUgbm90ZXNd
KGh0dHBzOi8vZ2l0aHViLmNvbS9zdGVmYW5wZW5uZXIvY291bnRyeV9zZWxl
Y3QvYmxvYi9tYXN0ZXIvVVBHUkFESU5HLm1kKSBpZiBzd2l0Y2hpbmcgZnJv
bSAxLnguDQoqIFRoZXJlIGFyZSBhIGJ1bmNoIG9mIGRldmVsb3BtZW50IGRl
cGVuZGVuY2llcyBpZiB5b3UgcGxhbiB0byBjb250cmlidXRlIHRvIEZvcm10
YXN0aWMNCg0KDQojIyBIb3cgdG8gY29udHJpYnV0ZQ0KDQoqIEZvcmsgdGhl
IHByb2plY3Qgb24gR2l0aHViDQoqIEluc3RhbGwgZGV2ZWxvcG1lbnQgZGVw
ZW5kZW5jaWVzIChgYnVuZGxlIGluc3RhbGxgIGFuZCBgYXBwcmFpc2FsIGlu
c3RhbGxgKQ0KKiBDcmVhdGUgYSB0b3BpYyBicmFuY2ggZm9yIHlvdXIgY2hh
bmdlcw0KKiBFbnN1cmUgdGhhdCB5b3UgcHJvdmlkZSAqZG9jdW1lbnRhdGlv
biogYW5kICp0ZXN0IGNvdmVyYWdlKiBmb3IgeW91ciBjaGFuZ2VzIChwYXRj
aGVzIHdvbid0IGJlIGFjY2VwdGVkIHdpdGhvdXQpDQoqIEVuc3VyZSB0aGF0
IGFsbCB0ZXN0cyBwYXNzIChgYnVuZGxlIGV4ZWMgcmFrZWApDQoqIENyZWF0
ZSBhIHB1bGwgcmVxdWVzdCBvbiBHaXRodWIgKHRoZXNlIGFyZSBhbHNvIGEg
Z3JlYXQgcGxhY2UgdG8gc3RhcnQgYSBjb252ZXJzYXRpb24gYXJvdW5kIGEg
cGF0Y2ggYXMgZWFybHkgYXMgcG9zc2libGUpDQoNCg0KIyMgUHJvamVjdCBJ
bmZvDQoNCkZvcm10YXN0aWMgd2FzIGNyZWF0ZWQgYnkgW0p1c3RpbiBGcmVu
Y2hdKGh0dHA6Ly93d3cuanVzdGluZnJlbmNoLmNvbSkgd2l0aCBjb250cmli
dXRpb25zIGZyb20gYXJvdW5kIDE4MCBhd2Vzb21lIGRldmVsb3BlcnMuIFJ1
biBgZ2l0IHNob3J0bG9nIC1uIC1zYCB0byBzZWUgdGhlIGF3ZXNvbWUuDQoN
ClRoZSBwcm9qZWN0IGlzIGhvc3RlZCBvbiBHaXRodWI6IFtodHRwOi8vZ2l0
aHViLmNvbS9qdXN0aW5mcmVuY2gvZm9ybXRhc3RpY10oaHR0cDovL2dpdGh1
Yi5jb20vanVzdGluZnJlbmNoL2Zvcm10YXN0aWMpLCB3aGVyZSB5b3VyIGNv
bnRyaWJ1dGlvbnMsIGZvcmtpbmdzLCBjb21tZW50cywgaXNzdWVzIGFuZCBm
ZWVkYmFjayBhcmUgZ3JlYXRseSB3ZWxjb21lZC4NCg0KQ29weXJpZ2h0IChj
KSAyMDA3LTIwMTYgSnVzdGluIEZyZW5jaCwgcmVsZWFzZWQgdW5kZXIgdGhl
IE1JVCBsaWNlbnNlLg0KDQo=
",,5087,"c3VkbzogZmFsc2UKY2FjaGU6CiAgLSBidW5kbGVyCiAgLSBkaXJlY3Rvcmll
czoKICAgIC0gdmVuZG9yL2J1bmRsZQpsYW5ndWFnZTogcnVieQpydm06CiAg
LSAyLjIuOQogIC0gMi4zLjYKICAtIDIuNC4zCiAgLSAyLjUuMApnZW1maWxl
OgogIC0gZ2VtZmlsZXMvcmFpbHNfNC4xLmdlbWZpbGUKICAtIGdlbWZpbGVz
L3JhaWxzXzQuMi5nZW1maWxlCiAgLSBnZW1maWxlcy9yYWlsc181LjAuZ2Vt
ZmlsZQogIC0gZ2VtZmlsZXMvcmFpbHNfNS4xLmdlbWZpbGUKICAtIGdlbWZp
bGVzL3JhaWxzXzUuMi5nZW1maWxlCiAgLSBnZW1maWxlcy9yYWlsc19lZGdl
LmdlbWZpbGUKYmVmb3JlX2luc3RhbGw6CiAgLSBnZW0gdW5pbnN0YWxsIC12
ICc+PSAyJyAtaSAkKHJ2bSBnZW1kaXIpQGdsb2JhbCAtYXggYnVuZGxlciB8
fCB0cnVlCiAgLSBnZW0gaW5zdGFsbCBidW5kbGVyIC12ICc8IDInCiAgLSBl
eHBvcnQgQlVORExFX1BBVEg9IiR7VFJBVklTX0JVSUxEX0RJUn0vdmVuZG9y
L2J1bmRsZSIKYmVmb3JlX2NhY2hlOgogIC0gcm0gLWYgJHtCVU5ETEVfUEFU
SH0vKiovZXh0ZW5zaW9ucy8qKi97Z2VtX21ha2Uub3V0LG1rbWYubG9nfQpz
Y3JpcHQ6CiAtIGJ1bmRsZSBleGVjIHJha2Ugc3BlYwogLSBzY3JpcHQvaW50
ZWdyYXRpb24uc2gKbWF0cml4OgogIGV4Y2x1ZGU6CiAgICAtIHJ2bTogMi4y
LjkKICAgICAgZ2VtZmlsZTogZ2VtZmlsZXMvcmFpbHNfZWRnZS5nZW1maWxl
CiAgICAtIHJ2bTogMi4zLjYKICAgICAgZ2VtZmlsZTogZ2VtZmlsZXMvcmFp
bHNfZWRnZS5nZW1maWxlCiAgICAtIHJ2bTogMi40LjMKICAgICAgZ2VtZmls
ZTogZ2VtZmlsZXMvcmFpbHNfNC4xLmdlbWZpbGUKICAgIC0gcnZtOiAyLjQu
MwogICAgICBnZW1maWxlOiBnZW1maWxlcy9yYWlsc180LjIuZ2VtZmlsZQog
ICAgLSBydm06IDIuNS4wCiAgICAgIGdlbWZpbGU6IGdlbWZpbGVzL3JhaWxz
XzQuMS5nZW1maWxlCiAgICAtIHJ2bTogMi41LjAKICAgICAgZ2VtZmlsZTog
Z2VtZmlsZXMvcmFpbHNfNC4yLmdlbWZpbGUKICBhbGxvd19mYWlsdXJlczoK
ICAgIC0gZ2VtZmlsZTogZ2VtZmlsZXMvcmFpbHNfZWRnZS5nZW1maWxlCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'nlp_course',147919799,b'YSDA course in Natural Language Processing',b'Jupyter Notebook',2,5084,,322,False,b'https://api.github.com/repos/yandexdataschool/nlp_course/forks',"IyBZU0RBIE5hdHVyYWwgTGFuZ3VhZ2UgUHJvY2Vzc2luZyBjb3Vyc2UgWyFb
QmluZGVyXShodHRwczovL215YmluZGVyLm9yZy9iYWRnZV9sb2dvLnN2Zyld
KGh0dHBzOi8vbXliaW5kZXIub3JnL3YyL2doL3lhbmRleGRhdGFzY2hvb2wv
bmxwX2NvdXJzZS9tYXN0ZXIpCiogVGhpcyBpcyB0aGUgMjAxOSB2ZXJzaW9u
LiBGb3IgcHJldmlvdXMgeWVhcicgY291cnNlIG1hdGVyaWFscywgZ28gdG8g
W3RoaXMgYnJhbmNoXShodHRwczovL2dpdGh1Yi5jb20veWFuZGV4ZGF0YXNj
aG9vbC9ubHBfY291cnNlL3RyZWUvbWFzdGVyKQoqIExlY3R1cmUgYW5kIHNl
bWluYXIgbWF0ZXJpYWxzIGZvciBlYWNoIHdlZWsgYXJlIGluIC4vd2Vlayog
Zm9sZGVycwoqIFlTREEgaG9tZXdvcmsgZGVhZGxpbmVzIHdpbGwgYmUgbGlz
dGVkIGluIEFueXRhc2sgKFtyZWFkIG1vcmVdKGh0dHBzOi8vZ2l0aHViLmNv
bS95YW5kZXhkYXRhc2Nob29sL25scF9jb3Vyc2Uvd2lraS9Ib21ld29ya3Mt
YW5kLWdyYWRpbmcpKS4KKiBBbnkgdGVjaG5pY2FsIGlzc3VlcywgaWRlYXMs
IGJ1Z3MgaW4gY291cnNlIG1hdGVyaWFscywgY29udHJpYnV0aW9uIGlkZWFz
IC0gYWRkIGFuIFtpc3N1ZV0oaHR0cHM6Ly9naXRodWIuY29tL3lhbmRleGRh
dGFzY2hvb2wvbmxwX2NvdXJzZS9pc3N1ZXMpCiogSW5zdGFsbGluZyBsaWJy
YXJpZXMgYW5kIHRyb3VibGVzaG9vdGluZzogW3RoaXMgdGhyZWFkXShodHRw
czovL2dpdGh1Yi5jb20veWFuZGV4ZGF0YXNjaG9vbC9ubHBfY291cnNlL2lz
c3Vlcy8xKS4KCgojIFN5bGxhYnVzCi0gW19fd2VlazAxX19dKC4vd2VlazAx
X2VtYmVkZGluZ3MpIF9fRW1iZWRkaW5nc19fCiAgLSBMZWN0dXJlOiBXb3Jk
IGVtYmVkZGluZ3MuIERpc3RyaWJ1dGlvbmFsIHNlbWFudGljcywgTFNBLCBX
b3JkMlZlYywgR2xvVmUuIFdoeSBhbmQgd2hlbiB3ZSBuZWVkIHRoZW0uCiAg
LSBTZW1pbmFyOiBQbGF5aW5nIHdpdGggd29yZCBhbmQgc2VudGVuY2UgZW1i
ZWRkaW5ncy4KCi0gW19fd2VlazAyX19dKC4vd2VlazAyX2NsYXNzaWZpY2F0
aW9uKSBfX1RleHQgY2xhc3NpZmljYXRpb25fXwogIC0gTGVjdHVyZTogVGV4
dCBjbGFzc2lmaWNhdGlvbi4gQ2xhc3NpY2FsIGFwcHJvYWNoZXMgZm9yIHRl
eHQgcmVwcmVzZW50YXRpb246IEJPVywgVEYtSURGLiBOZXVyYWwgYXBwcm9h
Y2hlczogZW1iZWRkaW5ncywgY29udm9sdXRpb25zLCBSTk5zCiAgLSBTZW1p
bmFyOiBTYWxhcnkgcHJlZGljdGlvbiB3aXRoIGNvbnZvbHV0aW9uYWwgbmV1
cmFsIG5ldHdvcmtzOyBleHBsYWluaW5nIG5ldHdvcmsgcHJlZGljdGlvbnMu
CgotIFtfX3dlZWswM19fXSguL3dlZWswM19sbSkgX19MYW5ndWFnZSBNb2Rl
bHNfXwogIC0gTGVjdHVyZTogTGFuZ3VhZ2UgbW9kZWxzOiBOLWdyYW0gYW5k
IG5ldXJhbCBhcHByb2FjaGVzOyB2aXN1YWxpemluZyB0cmFpbmVkIG1vZGVs
cwogIC0gU2VtaW5hcjogR2VuZXJhdGluZyBBclhpdiBwYXBlcnMgd2l0aCBs
YW5ndWFnZSBtb2RlbHMKICAKLSBbX193ZWVrMDRfX10oLi93ZWVrMDRfc2Vx
MnNlcSkgX19TZXEyc2VxL0F0dGVudGlvbl9fCiAgLSBMZWN0dXJlOiBTZXEy
c2VxOiBlbmNvZGVyLWRlY29kZXIgZnJhbWV3b3JrLiBBdHRlbnRpb246IEJh
aGRhbmF1IG1vZGVsLiBTZWxmLWF0dGVudGlvbiwgVHJhbnNmb3JtZXIuIEFu
YWx5c2lzIG9mIGF0dGVudGlvbiBoZWFkcyBpbiBUcmFuc2Zvcm1lci4KICAt
IFNlbWluYXI6IE1hY2hpbmUgdHJhbnNsYXRpb24gb2YgaG90ZWwgYW5kIGhv
c3RlbCBkZXNjcmlwdGlvbnMKICAKLSBbX193ZWVrMDVfX10oLi93ZWVrMDVf
ZW0pIF9fRXhwZWN0YXRpb24tTWF4aW1pemF0aW9uX18KICAtIExlY3R1cmU6
IEV4cGVjdGF0aW9uLU1heGltaXphdGlvbiBhbmQgSGlkZGVuIE1hcmtvdiBN
b2RlbHMKICAtIFNlbWluYXI6IEltcGxlbWVudGluZyBleHBlY3RhdGlvbiBt
YXhpbWl6YXRpb24KCi0gW19fd2VlazA2X19dKC4vd2VlazA2X210KSBfX01h
Y2hpbmUgVHJhbnNsYXRpb25fXwogIC0gTGVjdHVyZTogV29yZCBBbGlnbm1l
bnQgTW9kZWxzLCBOb2lzeSBDaGFubmVsLCBNYWNoaW5lIFRyYW5zbGF0aW9u
LgogIC0gU2VtaW5hcjogSW50cm9kdWN0aW9uIHRvIHdvcmQgYWxpZ25tZW50
IGFzc2lnbm1lbnQuIAogIAojIENvbnRyaWJ1dG9ycyAmIGNvdXJzZSBzdGFm
ZgpDb3Vyc2UgbWF0ZXJpYWxzIGFuZCB0ZWFjaGluZyBwZXJmb3JtZWQgYnkK
LSBbRWxlbmEgVm9pdGFdKGh0dHBzOi8vbGVuYS12b2l0YS5naXRodWIuaW8p
IC0gY291cnNlIGFkbWluLCBsZWN0dXJlcywgc2VtaW5hcnMsIGhvbWV3b3Jr
cwotIFtCb3JpcyBLb3ZhcnNreV0oaHR0cHM6Ly9naXRodWIuY29tL2tvdmFy
c2t5KSAtIGxlY3R1cmVzLCBzZW1pbmFycywgaG9tZXdvcmtzCi0gW0Rhdmlk
IFRhbGJvdF0oaHR0cHM6Ly9naXRodWIuY29tL2RydDcpIC0gbGVjdHVyZXMs
IHNlbWluYXJzLCBob21ld29ya3MKLSBbU2VyZ2V5IEd1YmFub3ZdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9lc2d2KSAtIGxlY3R1cmVzLCBzZW1pbmFycywgaG9t
ZXdvcmtzCi0gW0p1c3QgSGV1cmlzdGljXShodHRwczovL2dpdGh1Yi5jb20v
anVzdGhldXJpc3RpYykgLSBsZWN0dXJlcywgc2VtaW5hcnMsIGhvbWV3b3Jr
cwoKCgo=
",,5084,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'lwan',3287591,"b'Experimental, scalable, high performance HTTP server'",b'C',49,5083,,307,False,b'https://api.github.com/repos/lpereira/lwan/forks',"THdhbiBXZWIgU2VydmVyCj09PT09PT09PT09PT09PQoKTHdhbiBpcyBhICoq
aGlnaC1wZXJmb3JtYW5jZSoqICYgKipzY2FsYWJsZSoqIHdlYiBzZXJ2ZXIu
CgpUaGUgW3Byb2plY3Qgd2ViIHNpdGVdKGh0dHBzOi8vbHdhbi53cy8pIGNv
bnRhaW5zIG1vcmUgZGV0YWlscy4KCkJ1aWxkIHN0YXR1cwotLS0tLS0tLS0t
LS0KCnwgT1MgICAgICB8IEFyY2ggICB8IFJlbGVhc2UgfCBEZWJ1ZyB8IFN0
YXRpYyBBbmFseXNpcyB8IFRlc3RzIHwKfC0tLS0tLS0tLXwtLS0tLS0tLXwt
LS0tLS0tLS18LS0tLS0tLXwtLS0tLS0tLS0tLS0tLS0tLXwtLS0tLS0tLS0t
LS18CnwgTGludXggICB8IHg4Nl82NCB8ICFbcmVsZWFzZV0oaHR0cHM6Ly9z
aGllbGQubHdhbi53cy9pbWcvZ3ljS2JyL3JlbGVhc2UgIlJlbGVhc2UiKSAg
fCAhW2RlYnVnXShodHRwczovL3NoaWVsZC5sd2FuLndzL2ltZy9neWNLYnIv
ZGVidWcgIkRlYnVnIikgICAgIHwgIVtzdGF0aWMtYW5hbHlzaXNdKGh0dHBz
Oi8vc2hpZWxkLmx3YW4ud3MvaW1nL2d5Y0tici9jbGFuZy1hbmFseXplICJT
dGF0aWMgQW5hbHlzaXMiKSAhW2NvdmVyaXR5XShodHRwczovL3NjYW4uY292
ZXJpdHkuY29tL3Byb2plY3RzLzM3NS9iYWRnZS5zdmcpIFtSZXBvcnQgaGlz
dG9yeV0oaHR0cHM6Ly9idWlsZGJvdC5sd2FuLndzL3NhLykgfCAhW3Rlc3Rz
XShodHRwczovL3NoaWVsZC5sd2FuLndzL2ltZy9neWNLYnIvdW5pdC10ZXN0
cyAiVGVzdCIpIFshW0Z1enppbmcgU3RhdHVzXShodHRwczovL29zcy1mdXp6
LWJ1aWxkLWxvZ3Muc3RvcmFnZS5nb29nbGVhcGlzLmNvbS9iYWRnZXMvbHdh
bi5zdmcpXShodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3Avb3NzLWZ1enov
aXNzdWVzL2xpc3Q/c29ydD0tb3BlbmVkJmNhbj0xJnE9cHJvajpsd2FuKSAg
ICAgICAgICAgfAp8IExpbnV4ICAgfCBhcm12NyAgfCAhW3JlbGVhc2UtYXJt
XShodHRwczovL3NoaWVsZC5sd2FuLndzL2ltZy9neWNLYnIvcmVsZWFzZS1h
cm0gIlJlbGVhc2UiKSAgfCAhW2RlYnVnLWFybV0oaHR0cHM6Ly9zaGllbGQu
bHdhbi53cy9pbWcvZ3ljS2JyL2RlYnVnLWFybSAiRGVidWciKSAgICAgfCAg
ICAgICAgfCAgICAgICAgICAgfAp8IEZyZWVCU0QgfCB4ODZfNjQgfCAhW2Zy
ZWVic2QtcmVsZWFzZV0oaHR0cHM6Ly9zaGllbGQubHdhbi53cy9pbWcvZ3lj
S2JyL3JlbGVhc2UtZnJlZWJzZCAiUmVsZWFzZSBGcmVlQlNEIikgfCAhW2Zy
ZWVic2QtZGVidWddKGh0dHBzOi8vc2hpZWxkLmx3YW4ud3MvaW1nL2d5Y0ti
ci9kZWJ1Zy1mcmVlYnNkICJEZWJ1ZyBGcmVlQlNEIikgICAgIHwgICAgICAg
ICAgICAgICAgfCAgICAgICAgICAgfAp8IG1hY09TICAgfCB4ODZfNjQgfCAh
W29zeC1yZWxlYXNlXShodHRwczovL3NoaWVsZC5sd2FuLndzL2ltZy9neWNL
YnIvcmVsZWFzZS1zaWVycmEgIlJlbGVhc2UgbWFjT1MiKSAgICAgICB8ICFb
b3N4LWRlYnVnXShodHRwczovL3NoaWVsZC5sd2FuLndzL2ltZy9neWNLYnIv
ZGVidWctc2llcnJhICJEZWJ1ZyBtYWNPUyIpICAgICB8ICAgICAgICAgICAg
ICAgfCAgICAgICAgICB8CgpCdWlsZGluZwotLS0tLS0tLQoKQmVmb3JlIGlu
c3RhbGxpbmcgTHdhbiwgZW5zdXJlIGFsbCBkZXBlbmRlbmNpZXMgYXJlIGlu
c3RhbGxlZC4gQWxsIG9mIHRoZW0KYXJlIGNvbW1vbiBkZXBlbmRlbmNpZXMg
Zm91bmQgaW4gYW55IEdOVS9MaW51eCBkaXN0cmlidXRpb247IHBhY2thZ2Ug
bmFtZXMKd2lsbCBiZSBkaWZmZXJlbnQsIGJ1dCBpdCBzaG91bGRuJ3QgYmUg
ZGlmZmljdWx0IHRvIHNlYXJjaCB1c2luZyB3aGF0ZXZlcgpwYWNrYWdlIG1h
bmFnZW1lbnQgdG9vbCB0aGF0J3MgdXNlZCBieSB5b3VyIGRpc3RyaWJ1dGlv
bi4KCiMjIyBSZXF1aXJlZCBkZXBlbmRlbmNpZXMKCiAtIFtDTWFrZV0oaHR0
cHM6Ly9jbWFrZS5vcmcvKSwgYXQgbGVhc3QgdmVyc2lvbiAyLjgKIC0gW1pM
aWJdKGh0dHA6Ly96bGliLm5ldCkKCiMjIyBPcHRpb25hbCBkZXBlbmRlbmNp
ZXMKClRoZSBidWlsZCBzeXN0ZW0gd2lsbCBsb29rIGZvciB0aGVzZSBsaWJy
YXJpZXMgYW5kIGVuYWJsZS9saW5rIGlmIGF2YWlsYWJsZS4KCiAtIFtMdWEg
NS4xXShodHRwOi8vd3d3Lmx1YS5vcmcpIG9yIFtMdWFKSVQgMi4wXShodHRw
Oi8vbHVhaml0Lm9yZykKIC0gW1ZhbGdyaW5kXShodHRwOi8vdmFsZ3JpbmQu
b3JnKQogLSBbQnJvdGxpXShodHRwczovL2dpdGh1Yi5jb20vZ29vZ2xlL2Jy
b3RsaSkKIC0gQWx0ZXJuYXRpdmUgbWVtb3J5IGFsbG9jYXRvcnMgY2FuIGJl
IHVzZWQgYnkgcGFzc2luZyBgLURVU0VfQUxURVJOQVRJVkVfTUFMTE9DYCB0
byBDTWFrZSB3aXRoIHRoZSBmb2xsb3dpbmcgdmFsdWVzOgogICAgLSBbIm1p
bWFsbG9jIl0oaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC9taW1hbGxv
YykKICAgIC0gWyJqZW1hbGxvYyJdKGh0dHA6Ly9qZW1hbGxvYy5uZXQvKQog
ICAgLSBbInRjbWFsbG9jIl0oaHR0cHM6Ly9naXRodWIuY29tL2dwZXJmdG9v
bHMvZ3BlcmZ0b29scykKICAgIC0gImF1dG8iOiBBdXRvZGV0ZWN0IGZyb20g
dGhlIGxpc3QgYWJvdmUsIGZhbGxpbmcgYmFjayB0byBsaWJjIG1hbGxvYyBp
ZiBub25lIGZvdW5kCiAtIFRvIHJ1biB0ZXN0IHN1aXRlOgogICAgLSBbUHl0
aG9uXShodHRwczovL3d3dy5weXRob24ub3JnLykgKDIuNispIHdpdGggUmVx
dWVzdHMKICAgIC0gW0x1YSA1LjFdKGh0dHA6Ly93d3cubHVhLm9yZykKIC0g
VG8gcnVuIGJlbmNobWFyazoKICAgIC0gU3BlY2lhbCB2ZXJzaW9uIG9mIFtX
ZWlnaHR0cF0oaHR0cHM6Ly9naXRodWIuY29tL2xwZXJlaXJhL3dlaWdodHRw
KQogICAgLSBbTWF0cGxvdGxpYl0oaHR0cHM6Ly9naXRodWIuY29tL21hdHBs
b3RsaWIvbWF0cGxvdGxpYikKIC0gVG8gYnVpbGQgVGVjaEVtcG93ZXIgYmVu
Y2htYXJrIHN1aXRlOgogICAgLSBDbGllbnQgbGlicmFyaWVzIGZvciBlaXRo
ZXIgW015U1FMXShodHRwczovL2Rldi5teXNxbC5jb20pIG9yIFtNYXJpYURC
XShodHRwczovL21hcmlhZGIub3JnKQogICAgLSBbU1FMaXRlIDNdKGh0dHA6
Ly9zcWxpdGUub3JnKQoKCiMjIyBDb21tb24gb3BlcmF0aW5nIHN5c3RlbSBw
YWNrYWdlIG5hbWVzCgojIyMjIE1pbmltdW0gdG8gYnVpbGQKIC0gQXJjaExp
bnV4OiBgcGFjbWFuIC1TIGNtYWtlIHpsaWJgCiAtIEZyZWVCU0Q6IGBwa2cg
aW5zdGFsbCBjbWFrZSBwa2djb25mYAogLSBVYnVudHUgMTQrOiBgYXB0LWdl
dCB1cGRhdGUgJiYgYXB0LWdldCBpbnN0YWxsIGdpdCBjbWFrZSB6bGliMWct
ZGV2IHBrZy1jb25maWdgCiAtIG1hY09TOiBgYnJldyBpbnN0YWxsIGNtYWtl
YAoKIyMjIyBCdWlsZCBhbGwgZXhhbXBsZXMKIC0gQXJjaExpbnV4OiBgcGFj
bWFuIC1TIGNtYWtlIHpsaWIgc3FsaXRlIGx1YWppdCBsaWJtYXJpYWRiY2xp
ZW50IGdwZXJmdG9vbHMgdmFsZ3JpbmRgCiAtIEZyZWVCU0Q6IGBwa2cgaW5z
dGFsbCBjbWFrZSBwa2djb25mIHNxbGl0ZTMgbHVhNTFgCiAtIFVidW50dSAx
NCs6IGBhcHQtZ2V0IHVwZGF0ZSAmJiBhcHQtZ2V0IGluc3RhbGwgZ2l0IGNt
YWtlIHpsaWIxZy1kZXYgcGtnLWNvbmZpZyBsdWE1LjEtZGV2IGxpYnNxbGl0
ZTMtZGV2IGxpYm15c3FsY2xpZW50LWRldmAKIC0gbWFjT1M6IGBicmV3IGlu
c3RhbGwgY21ha2UgbXlzcWwtY29ubmVjdG9yLWMgc3FsaXRlIGx1YUA1LjEg
cGtnLWNvbmZpZ2AKCiMjIyBCdWlsZCBjb21tYW5kcwoKIyMjIyBDbG9uZSB0
aGUgcmVwb3NpdG9yeQoKICAgIH4kIGdpdCBjbG9uZSBnaXQ6Ly9naXRodWIu
Y29tL2xwZXJlaXJhL2x3YW4KICAgIH4kIGNkIGx3YW4KCiMjIyMgQ3JlYXRl
IHRoZSBidWlsZCBkaXJlY3RvcnkKCiAgICB+L2x3YW4kIG1rZGlyIGJ1aWxk
CiAgICB+L2x3YW4kIGNkIGJ1aWxkCgojIyMjIFNlbGVjdCBidWlsZCB0eXBl
CgpTZWxlY3RpbmcgYSAqcmVsZWFzZSogdmVyc2lvbiAobm8gZGVidWdnaW5n
IHN5bWJvbHMsIG1lc3NhZ2VzLCBlbmFibGUgc29tZQpvcHRpbWl6YXRpb25z
LCBldGMpOgoKICAgIH4vbHdhbi9idWlsZCQgY21ha2UgLi4gLURDTUFLRV9C
VUlMRF9UWVBFPVJlbGVhc2UKCklmIHlvdSdkIGxpa2UgdG8gZW5hYmxlIG9w
dGltaWF0aW9ucyBidXQgc3RpbGwgdXNlIGEgZGVidWdnZXIsIHVzZSB0aGlz
IGluc3RlYWQ6CgogICAgfi9sd2FuL2J1aWxkJCBjbWFrZSAuLiAtRENNQUtF
X0JVSUxEX1RZUEU9UmVsV2l0aERlYkluZm8KClRvIGRpc2FibGUgb3B0aW1p
emF0aW9ucyBhbmQgYnVpbGQgYSBtb3JlIGRlYnVnZ2luZy1mcmllbmRseSB2
ZXJzaW9uOgoKICAgIH4vbHdhbi9idWlsZCQgY21ha2UgLi4gLURDTUFLRV9C
VUlMRF9UWVBFPURlYnVnCgojIyMjIEJ1aWxkIEx3YW4KCiAgICB+L2x3YW4v
YnVpbGQkIG1ha2UKClRoaXMgd2lsbCBnZW5lcmF0ZSBhIGZldyBiaW5hcmll
czoKCiAtIGBzcmMvYmluL2x3YW4vbHdhbmA6IFRoZSBtYWluIEx3YW4gZXhl
Y3V0YWJsZS4gTWF5IGJlIGV4ZWN1dGVkIHdpdGggYC0taGVscGAgZm9yIGd1
aWRhbmNlLgogLSBgc3JjL2Jpbi90ZXN0cnVubmVyL3Rlc3RydW5uZXJgOiBD
b250YWlucyBjb2RlIHRvIGV4ZWN1dGUgdGhlIHRlc3Qgc3VpdGUuCiAtIGBz
cmMvc2FtcGxlcy9mcmVlZ2VvaXAvZnJlZWdlb2lwYDogW0ZyZWVHZW9JUCBz
YW1wbGUgaW1wbGVtZW50YXRpb25dKGh0dHBzOi8vZnJlZWdlb2lwLmx3YW4u
d3MpLiBSZXF1aXJlcyBTUUxpdGUuCiAtIGBzcmMvc2FtcGxlcy90ZWNoZW1w
b3dlci90ZWNoZW1wb3dlcmA6IENvZGUgZm9yIHRoZSBUZWNoZW1wb3dlciBX
ZWIgRnJhbWV3b3JrIGJlbmNobWFyay4gUmVxdWlyZXMgU1FMaXRlIGFuZCBN
eVNRTCBsaWJyYXJpZXMuCiAtIGBzcmMvc2FtcGxlcy9jbG9jay9jbG9ja2A6
IFtDbG9jayBzYW1wbGVdKGh0dHBzOi8vdGltZS5sd2FuLndzKS4gR2VuZXJh
dGVzIGEgR0lGIGZpbGUgdGhhdCBhbHdheXMgc2hvd3MgdGhlIGxvY2FsIHRp
bWUuCiAtIGBzcmMvYmluL3Rvb2xzL21pbWVnZW5gOiBCdWlsZHMgdGhlIGV4
dGVuc2lvbi1NSU1FIHR5cGUgdGFibGUuIFVzZWQgZHVyaW5nIGJ1aWxkIHBy
b2Nlc3MuCiAtIGBzcmMvYmluL3Rvb2xzL2JpbjJoZXhgOiBHZW5lcmF0ZXMg
YSBDIGZpbGUgZnJvbSBhIGJpbmFyeSBmaWxlLCBzdWl0YWJsZSBmb3IgdXNl
IHdpdGggI2luY2x1ZGUuCiAtIGBzcmMvYmluL3Rvb2xzL2NvbmZpZ2R1bXBg
OiBEdW1wcyBhIGNvbmZpZ3VyYXRpb24gZmlsZSB1c2luZyB0aGUgY29uZmln
dXJhdGlvbiByZWFkZXIgQVBJLgoKIyMjIyBSZW1hcmtzCgpQYXNzaW5nIGAt
RENNQUtFX0JVSUxEX1RZUEU9UmVsZWFzZWAgd2lsbCBlbmFibGUgc29tZSBj
b21waWxlcgpvcHRpbWl6YXRpb25zIChzdWNoIGFzIFtMVE9dKGh0dHA6Ly9n
Y2MuZ251Lm9yZy93aWtpL0xpbmtUaW1lT3B0aW1pemF0aW9uKSkKYW5kIHR1
bmUgdGhlIGNvZGUgZm9yIGN1cnJlbnQgYXJjaGl0ZWN0dXJlLiAqUGxlYXNl
IHVzZSB0aGlzIHZlcnNpb24Kd2hlbiBiZW5jaG1hcmtpbmcqLCBhcyB0aGUg
ZGVmYXVsdCBpcyB0aGUgRGVidWcgYnVpbGQsIHdoaWNoIG5vdCBvbmx5Cmxv
Z3MgYWxsIHJlcXVlc3RzIHRvIHRoZSBzdGFuZGFyZCBvdXRwdXQsIGJ1dCBk
b2VzIHNvIHdoaWxlIGhvbGRpbmcgYQptdXRleC4KClRoZSBkZWZhdWx0IGJ1
aWxkIChpLmUuIG5vdCBwYXNzaW5nIGAtRENNQUtFX0JVSUxEX1RZUEU9UmVs
ZWFzZWApIHdpbGwgYnVpbGQKYSB2ZXJzaW9uIHN1aXRhYmxlIGZvciBkZWJ1
Z2dpbmcgcHVycG9zZXMuICBUaGlzIHZlcnNpb24gY2FuIGJlIHVzZWQgdW5k
ZXIKVmFsZ3JpbmQgKihpZiBpdHMgaGVhZGVycyBhcmUgcHJlc2VudCkqIGFu
ZCBpbmNsdWRlcyBkZWJ1Z2dpbmcgbWVzc2FnZXMgdGhhdAphcmUgc3RyaXBw
ZWQgaW4gdGhlIHJlbGVhc2UgdmVyc2lvbi4gIERlYnVnZ2luZyBtZXNzYWdl
cyBhcmUgcHJpbnRlZCBmb3IKZWFjaCBhbmQgZXZlcnkgcmVxdWVzdC4KCk9u
IGRlYnVnIGJ1aWxkcywgc2FuaXRpemVycyBjYW4gYmUgZW5hYmxlZC4gIFRv
IHNlbGVjdCB3aGljaCBvbmUgdG8gYnVpbGQgTHdhbgp3aXRoLCBzcGVjaWZ5
IG9uZSBvZiB0aGUgZm9sbG93aW5nIG9wdGlvbnMgdG8gdGhlIENNYWtlIGlu
dm9jYXRpb24gbGluZToKCiAtIGAtRFNBTklUSVpFUj11YnNhbmAgc2VsZWN0
cyB0aGUgVW5kZWZpbmVkIEJlaGF2aW9yIFNhbml0aXplci4KIC0gYC1EU0FO
SVRJWkVSPWFkZHJlc3NgIHNlbGVjdHMgdGhlIEFkZHJlc3MgU2FuaXRpemVy
LgogLSBgLURTQU5JVElaRVI9dGhyZWFkYCBzZWxlY3RzIHRoZSBUaHJlYWQg
U2FuaXRpemVyLgoKQWx0ZXJuYXRpdmUgbWVtb3J5IGFsbG9jYXRvcnMgY2Fu
IGJlIHNlbGVjdGVkIGFzIHdlbGwuICBMd2FuIGN1cnJlbnRseQpzdXBwb3J0
cyBbVENNYWxsb2NdKGh0dHBzOi8vZ2l0aHViLmNvbS9ncGVyZnRvb2xzL2dw
ZXJmdG9vbHMpIGFuZApbamVtYWxsb2NdKGh0dHA6Ly9qZW1hbGxvYy5uZXQv
KSBvdXQgb2YgdGhlIGJveC4gIFRvIHVzZSBlaXRoZXIgb25lIG9mIHRoZW0s
CnBhc3MgYC1EQUxURVJOQVRJVkVfTUFMTE9DPU9OYCB0byB0aGUgQ01ha2Ug
aW52b2NhdGlvbiBsaW5lLgoKIyMjIFRlc3RzCgogICAgfi9sd2FuL2J1aWxk
JCBtYWtlIHRlc3RzdHVpdGUKClRoaXMgd2lsbCBjb21waWxlIHRoZSBgdGVz
dHJ1bm5lcmAgcHJvZ3JhbSBhbmQgZXhlY3V0ZSByZWdyZXNzaW9uIHRlc3Qg
c3VpdGUKaW4gYHNyYy9zY3JpcHRzL3Rlc3RzdWl0ZS5weWAuCgojIyMgQmVu
Y2htYXJrCgogICAgfi9sd2FuL2J1aWxkJCBtYWtlIGJlbmNobWFyawoKVGhp
cyB3aWxsIGNvbXBpbGUgYHRlc3RydW5uZXJgIGFuZCBleGVjdXRlIGJlbmNo
bWFyayBzY3JpcHQKYHNyYy9zY3JpcHRzL2JlbmNobWFyay5weWAuCgojIyMg
Q292ZXJhZ2UKCkx3YW4gY2FuIGFsc28gYmUgYnVpbHQgd2l0aCB0aGUgQ292
ZXJhZ2UgYnVpbGQgdHlwZSBieSBzcGVjaWZ5aW5nCmAtRENNQUtFX0JVSUxE
X1RZUEU9Q292ZXJhZ2VgLiAgVGhpcyBlbmFibGVzIHRoZSBgZ2VuZXJhdGUt
Y292ZXJhZ2VgIG1ha2UKdGFyZ2V0LCB3aGljaCB3aWxsIHJ1biBgdGVzdHJ1
bm5lcmAgdG8gcHJlcGFyZSBhIHRlc3QgY292ZXJhZ2UgcmVwb3J0IHdpdGgK
W2xjb3ZdKGh0dHA6Ly9sdHAuc291cmNlZm9yZ2UubmV0L2NvdmVyYWdlL2xj
b3YucGhwKS4KCkV2ZXJ5IGNvbW1pdCBpbiB0aGlzIHJlcG9zaXRvcnkgdHJp
Z2dlcnMgdGhlIGdlbmVyYXRpb24gb2YgdGhpcyByZXBvcnQsCmFuZCByZXN1
bHRzIGFyZSBbcHVibGljbHkgYXZhaWxhYmxlXShodHRwczovL2J1aWxkYm90
Lmx3YW4ud3MvbGNvdi8pLgoKUnVubmluZwotLS0tLS0tCgpTZXQgdXAgdGhl
IHNlcnZlciBieSBlZGl0aW5nIHRoZSBwcm92aWRlZCBgbHdhbi5jb25mYDsg
dGhlIGZvcm1hdCBpcwpleHBsYWluZWQgaW4gZGV0YWlscyBiZWxvdy4KCkNv
bmZpZ3VyYXRpb24gZmlsZXMgYXJlIGxvYWRlZCBmcm9tIHRoZSBjdXJyZW50
IGRpcmVjdG9yeS4gSWYgbm8gY2hhbmdlcwphcmUgbWFkZSB0byB0aGlzIGZp
bGUsIHJ1bm5pbmcgTHdhbiB3aWxsIHNlcnZlIHN0YXRpYyBmaWxlcyBsb2Nh
dGVkIGluCnRoZSBgLi93d3dyb290YCBkaXJlY3RvcnkuIEx3YW4gd2lsbCBs
aXN0ZW4gb24gcG9ydCA4MDgwIG9uIGFsbCBpbnRlcmZhY2VzLgoKTHdhbiB3
aWxsIGRldGVjdCB0aGUgbnVtYmVyIG9mIENQVXMsIHdpbGwgaW5jcmVhc2Ug
dGhlIG1heGltdW0gbnVtYmVyIG9mCm9wZW4gZmlsZSBkZXNjcmlwdG9ycyBh
bmQgZ2VuZXJhbGx5IHRyeSBpdHMgYmVzdCB0byBhdXRvZGV0ZWN0IHJlYXNv
bmFibGUKc2V0dGluZ3MgZm9yIHRoZSBlbnZpcm9ubWVudCBpdCdzIHJ1bm5p
bmcgb24uICBNYW55IG9mIHRoZXNlIHNldHRpbmdzIGNhbgpiZSB0d2Vha2Vk
IGluIHRoZSBjb25maWd1cmF0aW9uIGZpbGUsIGJ1dCBpdCdzIHVzdWFsbHkg
YSBnb29kIGlkZWEgdG8gbm90Cm1lc3Mgd2l0aCB0aGVtLgoKT3B0aW9uYWxs
eSwgdGhlIGBsd2FuYCBiaW5hcnkgY2FuIGJlIHVzZWQgZm9yIG9uZS1zaG90
IHN0YXRpYyBmaWxlIHNlcnZpbmcKd2l0aG91dCBhbnkgY29uZmlndXJhdGlv
biBmaWxlLiBSdW4gaXQgd2l0aCBgLS1oZWxwYCBmb3IgaGVscCBvbiB0aGF0
LgoKQ29uZmlndXJhdGlvbiBGaWxlCi0tLS0tLS0tLS0tLS0tLS0KCiMjIyBG
b3JtYXQKCkx3YW4gdXNlcyBhIGZhbWlsaWFyIGBrZXkgPSB2YWx1ZWAgY29u
ZmlndXJhdGlvbiBmaWxlIHN5bnRheC4gIENvbW1lbnRzIGFyZQpzdXBwb3J0
ZWQgd2l0aCB0aGUgYCNgIGNoYXJhY3RlciAoc2ltaWxhciB0byBlLmcuICBz
aGVsbCBzY3JpcHRzLCBQeXRob24sCmFuZCBQZXJsKS4gIE5lc3RlZCBzZWN0
aW9ucyBjYW4gYmUgY3JlYXRlZCB3aXRoIGN1cmx5IGJyYWNrZXRzLiAgU2Vj
dGlvbnMKY2FuIGJlIGVtcHR5OyBpbiB0aGlzIGNhc2UsIGN1cmx5IGJyYWNr
ZXRzIGFyZSBvcHRpb25hbC4KCmBzb21lX2tleV9uYW1lYCBpcyBlcXVpdmFs
ZW50IHRvIGBzb21lIGtleSBuYW1lYCBpbiBjb25maWd1cmF0aW9uIGZpbGVz
IChhcwphbiBpbXBsZW1lbnRhdGlvbiBkZXRhaWwsIGNvZGUgcmVhZGluZyBj
b25maWd1cmF0aW9uIG9wdGlvbnMgd2lsbCBvbmx5IGJlCmdpdmVuIHRoZSB2
ZXJzaW9uIHdpdGggdW5kZXJzY29yZXMpLgoKVmFsdWVzIGNhbiBjb250YWlu
IGVudmlyb25tZW50IHZhcmlhYmxlcy4gVXNlIHRoZSBzeW50YXggYCR7VkFS
SUFCTEVfTkFNRX1gLgpEZWZhdWx0IHZhbHVlcyBjYW4gYmUgc3BlY2lmaWVk
IHdpdGggYSBjb2xvbiAoZS5nLiAgYCR7VkFSSUFCTEVfTkFNRTpmb299YCwK
d2hpY2ggZXZhbHVhdGVzIHRvIGAke1ZBUklBQkxFX05BTUV9YCBpZiBpdCdz
IHNldCwgb3IgYGZvb2Agb3RoZXJ3aXNlKS4KCmBgYApzb3VuZCB2b2x1bWUg
PSAxMSAjIFRoaXMgb25lIGlzIDEgbG91ZGVyCgpwbGF5bGlzdCBtZXRhbCB7
CiAgIGZpbGVzID0gJycnCgkvbXVsdGkvbGluZS9zdHJpbmdzL2FyZS9zdXBw
b3J0ZWQubXAzCgkvYW55dGhpbmcvaW5zaWRlL3RoZXNlL2FyZS9zdG9yZWQv
dmVyYmF0aW0ubXAzCiAgICcnJwp9CgpwbGF5bGlzdCBjaGlwdHVuZSB7CiAg
IGZpbGVzID0gIiIiCgkvaWYvaXQvc3RhcnRzL3dpdGgvc2luZ2xlL3F1b3Rl
cy9pdC9lbmRzL3dpdGgvc2luZ2xlL3F1b3Rlcy5tb2QKCS9idXQvaXQvY2Fu
L3VzZS9kb3VibGUvcXVvdGVzLnMzbQogICAiIiIKfQpgYGAKCiMjIyMgVmFs
dWUgdHlwZXMKCnwgVHlwZSAgIHwgRGVzY3JpcHRpb24gfAp8LS0tLS0tLS18
LS0tLS0tLS0tLS0tLXwKfCBgc3RyYCAgfCBBbnkga2luZCBvZiBmcmVlLWZv
cm0gdGV4dCwgdXN1YWxseSBhcHBsaWNhdGlvbiBzcGVjaWZpYyB8CnwgYGlu
dGAgIHwgSW50ZWdlciBudW1iZXIuIFJhbmdlIGlzIGFwcGxpY2F0aW9uIHNw
ZWNpZmljIHwKfCBgdGltZWAgfCBUaW1lIGludGVydmFsLiAgU2VlIHRhYmxl
IGJlbG93IGZvciB1bml0cyB8CnwgYGJvb2xgIHwgQm9vbGVhbiB2YWx1ZS4g
U2VlIHRhYmxlIGJlbG93IGZvciB2YWxpZCB2YWx1ZXMgfAoKIyMjIyBUaW1l
IEludGVydmFscwoKVGltZSBmaWVsZHMgY2FuIGJlIHNwZWNpZmllZCB1c2lu
ZyBtdWx0aXBsaWVycy4gTXVsdGlwbGUgY2FuIGJlIHNwZWNpZmllZCwgdGhl
eSdyZQpqdXN0IGFkZGVkIHRvZ2V0aGVyOyBmb3IgaW5zdGFuY2UsICIxTSAx
dyIgc3BlY2lmaWVzICIxIG1vbnRoIGFuZCAxIHdlZWsiLiAgVGhlIGZvbGxv
d2luZwp0YWJsZSBsaXN0cyBhbGwga25vd24gbXVsdGlwbGllcnM6Cgp8IE11
bHRpcGxpZXIgfCBEZXNjcmlwdGlvbiB8CnwtLS0tLS0tLS0tLS18LS0tLS0t
LS0tLS0tLXwKfCBgc2AgICAgICAgIHwgU2Vjb25kcyB8CnwgYG1gICAgICAg
ICB8IE1pbnV0ZXMgfAp8IGBoYCAgICAgICAgfCBIb3VycyB8CnwgYGRgICAg
ICAgICB8IERheXMgfAp8IGB3YCAgICAgICAgfCBXZWVrcyB8CnwgYE1gICAg
ICAgICB8IE1vbnRocyB8CnwgYHlgICAgICAgICB8IFllYXJzIHwKCkEgbnVt
YmVyIHdpdGggYSBtdWx0aXBsaWVyIG5vdCBpbiB0aGlzIHRhYmxlIGlzIGln
bm9yZWQ7IGEgd2FybmluZyBpcyBpc3N1ZWQgd2hpbGUKcmVhZGluZyB0aGUg
Y29uZmlndXJhdGlvbiBmaWxlLiAgTm8gc3BhY2VzIG11c3QgZXhpc3QgYmV0
d2VlbiB0aGUgbnVtYmVyIGFuZCBpdHMKbXVsdGlwbGllci4KCiMjIyMgQm9v
bGVhbiBWYWx1ZXMKCnwgVHJ1ZSBWYWx1ZXMgfCBGYWxzZSBWYWx1ZXMgfAp8
LS0tLS0tLS0tLS0tLXwtLS0tLS0tLS0tLS0tLXwKfCBBbnkgaW50ZWdlciBu
dW1iZXIgZGlmZmVyZW50IHRoYW4gMCB8IDAgfAp8IGBvbmAgfCBgb2ZmYCB8
CnwgYHRydWVgIHwgYGZhbHNlYCB8CnwgYHllc2AgfCBgbm9gIHwKCiMjIyBH
bG9iYWwgU2V0dGluZ3MKCkl0J3MgZ2VuZXJhbGx5IGEgZ29vZCBpZGVhIHRv
IGxldCBMd2FuIGRlY2lkZSB0aGUgYmVzdCBzZXR0aW5ncyBmb3IgeW91cgpl
bnZpcm9ubWVudC4gIEhvd2V2ZXIsIG5vdCBldmVyeSBlbnZpcm9ubWVudCBp
cyB0aGUgc2FtZSwgYW5kIG5vdCBhbGwgdXNlcwpjYW4gYmUgZGVjaWRlZCBh
dXRvbWF0aWNhbGx5LCBzbyBzb21lIGNvbmZpZ3VyYXRpb24gb3B0aW9ucyBh
cmUgcHJvdmlkZWQuCgp8IE9wdGlvbiB8IFR5cGUgfCBEZWZhdWx0IHwgRGVz
Y3JpcHRpb24gfAp8LS0tLS0tLS18LS0tLS0tfC0tLS0tLS0tLXwtLS0tLS0t
LS0tLS0tfAp8IGBrZWVwX2FsaXZlX3RpbWVvdXRgIHwgYHRpbWVgICB8IGAx
NWAgfCBUaW1lb3V0IHRvIGtlZXAgYSBjb25uZWN0aW9uIGFsaXZlIHwKfCBg
cXVpZXRgIHwgYGJvb2xgIHwgYGZhbHNlYCB8IFNldCB0byB0cnVlIHRvIG5v
dCBwcmludCBhbnkgZGVidWdnaW5nIG1lc3NhZ2VzLiBPbmx5IGVmZmVjdGl2
ZSBpbiByZWxlYXNlIGJ1aWxkcy4gfAp8IGByZXVzZV9wb3J0YCB8IGBib29s
YCB8IGBmYWxzZWAgfCBTZXRzIGBTT19SRVVTRVBPUlRgIHRvIGAxYCBpbiB0
aGUgbWFzdGVyIHNvY2tldCB8CnwgYGV4cGlyZXNgIHwgYHRpbWVgIHwgYDFN
IDF3YCB8IFZhbHVlIG9mIHRoZSAiRXhwaXJlcyIgaGVhZGVyLiBEZWZhdWx0
IGlzIDEgbW9udGggYW5kIDEgd2VlayB8CnwgYHRocmVhZHNgIHwgYGludGAg
fCBgMGAgfCBOdW1iZXIgb2YgSS9PIHRocmVhZHMuIERlZmF1bHQgKDApIGlz
IHRoZSBudW1iZXIgb2Ygb25saW5lIENQVXMgfAp8IGBwcm94eV9wcm90b2Nv
bGAgfCBgYm9vbGAgfCBgZmFsc2VgIHwgRW5hYmxlcyB0aGUgW1BST1hZIHBy
b3RvY29sXShodHRwczovL3d3dy5oYXByb3h5LmNvbS9ibG9nL2hhcHJveHkv
cHJveHktcHJvdG9jb2wvKS4gVmVyc2lvbnMgMSBhbmQgMiBhcmUgc3VwcG9y
dGVkLiBPbmx5IGVuYWJsZSB0aGlzIHNldHRpbmcgaWYgdXNpbmcgTHdhbiBi
ZWhpbmQgYSBwcm94eSwgYW5kIHRoZSBwcm94eSBzdXBwb3J0cyB0aGlzIHBy
b3RvY29sOyBvdGhlcndpc2UsIHRoaXMgYWxsb3dzIGFueWJvZHkgdG8gc3Bv
b2Ygb3JpZ2luIElQIGFkZHJlc3NlcyB8CnwgYG1heF9wb3N0X2RhdGFfc2l6
ZWAgfCBgaW50YCB8IGA0MDk2MGAgfCBTZXRzIHRoZSBtYXhpbXVtIG51bWJl
ciBvZiBkYXRhIHNpemUgZm9yIFBPU1QgcmVxdWVzdHMsIGluIGJ5dGVzIHwK
CiMjIyBTdHJhaXRqYWNrZXQKCkx3YW4gY2FuIGRyb3AgaXRzIHByaXZpbGVn
ZXMgdG8gYSB1c2VyIGluIHRoZSBzeXN0ZW0sIGFuZCBsaW1pdCBpdHMKZmls
ZXN5c3RlbSB2aWV3IHdpdGggYSBjaHJvb3QuICBXaGlsZSBub3QgYnVsbGV0
cHJvb2YsIHRoaXMgcHJvdmlkZXMgYQpmaXJzdCBsYXllciBvZiBzZWN1cml0
eSBpbiB0aGUgY2FzZSB0aGVyZSdzIGEgYnVnIGluIEx3YW4uCgpJbiBvcmRl
ciB0byB1c2UgdGhpcyBmZWF0dXJlLCBkZWNsYXJlIGEgYHN0cmFpdGphY2tl
dGAgc2VjdGlvbiwgYW5kIHNldApzb21lIG9wdGlvbnMuICBUaGlzIHJlcXVp
cmVzIEx3YW4gdG8gYmUgZXhlY3V0ZWQgYXMgYHJvb3RgLgoKQWx0aG91Z2gg
dGhpcyBzZWN0aW9uIGNhbiBiZSB3cml0dGVuIGFueXdoZXJlIGluIHRoZSBm
aWxlIChhcyBsb25nIGFzCml0IGlzIGEgdG9wIGxldmVsIGRlY2xhcmF0aW9u
KSwgaWYgYW55IGRpcmVjdG9yaWVzIGFyZSBvcGVuLCBkdWUgdG8KZS5nLiAg
aW5zdGFudGlhdGluZyB0aGUgYHNlcnZlX2ZpbGVzYCBtb2R1bGUsIEx3YW4g
d2lsbCByZWZ1c2UgdG8Kc3RhcnQuICAoVGhpcyBjaGVjayBpcyBvbmx5IHBl
cmZvcm1lZCBvbiBMaW51eCBhcyBhIHNhZmVndWFyZCBmb3IKbWFsY29uZmln
dXJhdGlvbi4pCgp8IE9wdGlvbiB8IFR5cGUgfCBEZWZhdWx0IHwgRGVzY3Jp
cHRpb24gfAp8LS0tLS0tLS18LS0tLS0tfC0tLS0tLS0tLXwtLS0tLS0tLS0t
LS0tfAp8IGB1c2VyYCB8IGBzdHJgICB8IGBOVUxMYCB8IERyb3AgcHJpdmls
ZWdlcyB0byB0aGlzIHVzZXIgbmFtZSB8CnwgYGNocm9vdGAgfCBgc3RyYCB8
IGBOVUxMYCB8IFBhdGggdG8gYGNocm9vdCgpYCB8CnwgYGRyb3BfY2FwYWJp
bGl0aWVzYCB8IGBib29sYCB8IGB0cnVlYCB8IERyb3AgYWxsIGNhcGFiaWxp
dGllcyB3aXRoIGNhcHNldCgyKSAodW5kZXIgTGludXgpLCBvciBwbGVkZ2Uo
MikgKHVuZGVyIE9wZW5CU0QpLiB8CgojIyMgTGlzdGVuZXJzCgpJbiBvcmRl
ciB0byBzcGVjaWZ5IHdoaWNoIGludGVyZmFjZXMgTHdhbiBzaG91bGQgbGlz
dGVuIG9uLCBhIGBsaXN0ZW5lcmAgc2VjdGlvbgptdXN0IGJlIHNwZWNpZmll
ZC4gIE9ubHkgb25lIGxpc3RlbmVyIHBlciBMd2FuIHByb2Nlc3MgaXMgYWNj
ZXB0ZWQgYXQgdGhlIG1vbWVudC4KVGhlIG9ubHkgcGFyYW1ldGVyIHRvIGEg
bGlzdGVuZXIgYmxvY2sgaXMgdGhlIGludGVyZmFjZSBhZGRyZXNzIGFuZCB0
aGUgcG9ydCB0bwpsaXN0ZW4gb247IGFueXRoaW5nIGluc2lkZSBhIGxpc3Rl
bmVyIHNlY3Rpb24gYXJlIGluc3RhbmNlcyBvZiBtb2R1bGVzLgoKVGhlIHN5
bnRheCBmb3IgdGhlIGxpc3RlbmVyIHBhcmFtZXRlciBpcyBgJHtBRERSRVNT
fToke1BPUlR9YCwgd2hlcmUgYCR7QUREUkVTU31gCmNhbiBlaXRoZXIgYmUg
YCpgIChiaW5kaW5nIHRvIGFsbCBpbnRlcmZhY2VzKSwgYW4gSVB2NiBhZGRy
ZXNzIChpZiBzdXJyb3VuZGVkIGJ5CnNxdWFyZSBicmFja2V0cyksIGFuIElQ
djQgYWRkcmVzcywgb3IgYSBob3N0bmFtZS4gIElmIHN5c3RlbWQncyBzb2Nr
ZXQgYWN0aXZhdGlvbgppcyB1c2VkLCBgc3lzdGVtZGAgY2FuIGJlIHNwZWNp
ZmllZCBhcyBhIHBhcmFtZXRlci4KCiMjIyBSb3V0aW5nIFVSTHMgVXNpbmcg
TW9kdWxlcyBvciBIYW5kbGVycwoKSW4gb3JkZXIgdG8gcm91dGUgVVJMcywg
THdhbiBtYXRjaGVzIHRoZSBsYXJnZXN0IGNvbW1vbiBwcmVmaXggZnJvbSB0
aGUgcmVxdWVzdApVUkkgd2l0aCBhIHNldCBvZiBwcmVmaXhlcyBzcGVjaWZp
ZWQgaW4gdGhlIGxpc3RlbmVyIHNlY3Rpb24uICBIb3cgYSByZXF1ZXN0IHRv
CmEgcGFydGljdWxhciBwcmVmaXggd2lsbCBiZSBoYW5kbGVkIGRlcGVuZHMg
b24gd2hpY2ggaGFuZGxlciBvciBtb2R1bGUgaGFzIGJlZW4KZGVjbGFyZWQg
aW4gdGhlIGxpc3RlbmVyIHNlY3Rpb24uICBIYW5kbGVycyBhbmQgbW9kdWxl
cyBhcmUgc2ltaWxhciBpbnRlcm5hbGx5OwpoYW5kbGVycyBhcmUgbWVyZWx5
IGZ1bmN0aW9ucyBhbmQgaG9sZCBubyBzdGF0ZSwgYW5kIG1vZHVsZXMgaG9s
ZHMgc3RhdGUgKG5hbWVkCmluc3RhbmNlKS4gIE11bHRpcGxlIGluc3RhbmNl
cyBvZiBhIG1vZHVsZSBjYW4gYXBwZWFyIGluIGEgbGlzdGVuZXIgc2VjdGlv
bi4KClRoZXJlIGlzIG5vIHNwZWNpYWwgc3ludGF4IHRvIGF0dGFjaCBhIHBy
ZWZpeCB0byBhIGhhbmRsZXIgb3IgbW9kdWxlOyBhbGwgdGhlCmNvbmZpZ3Vy
YXRpb24gcGFyc2VyIHJ1bGVzIGFwcGx5IGhlcmUuICBVc2UgYCR7TkFNRX0g
JHtQUkVGSVh9YCB0byBsaW5rIHRoZQpgJHtQUkVGSVh9YCBwcmVmaXggcGF0
aCB0byBlaXRoZXIgYSBoYW5kbGVyIG5hbWVkIGAke05BTUV9YCAoaWYgYCR7
TkFNRX1gCmJlZ2lucyB3aXRoIGAmYCwgYXMgd2l0aCBDJ3MgImFkZHJlc3Mg
b2YiIG9wZXJhdG9yKSwgb3IgYSBtb2R1bGUgbmFtZWQKYCR7TkFNRX1gLiAg
RW1wdHkgc2VjdGlvbnMgY2FuIGJlIHVzZWQgaGVyZS4KCkVhY2ggbW9kdWxl
IHdpbGwgaGF2ZSBpdHMgc3BlY2lmaWMgc2V0IG9mIG9wdGlvbnMsIGFuZCB0
aGV5J3JlIGxpc3RlZCBpbiB0aGUKbmV4dCBzZWN0aW9ucy4gIEluIGFkZGl0
aW9uIHRvIGNvbmZpZ3VyYXRpb24gb3B0aW9ucywgYSBzcGVjaWFsIGBhdXRo
b3JpemF0aW9uYApzZWN0aW9uIGNhbiBiZSBwcmVzZW50IGluIHRoZSBkZWNs
YXJhdGlvbiBvZiBhIG1vZHVsZSBpbnN0YW5jZS4gIEhhbmRsZXJzIGRvCm5v
dCB0YWtlIGFueSBjb25maWd1cmF0aW9uIG9wdGlvbnMsIGJ1dCBtYXkgaW5j
bHVkZSB0aGUgYGF1dGhvcml6YXRpb25gCnNlY3Rpb24uCgpBIGxpc3Qgb2Yg
YnVpbHQtaW4gbW9kdWxlcyBjYW4gYmUgb2J0YWluZWQgYnkgZXhlY3V0aW5n
IEx3YW4gd2l0aCB0aGUgYC1tYApjb21tYW5kLWxpbmUgYXJndW1lbnQuICBU
aGUgZm9sbG93aW5nIGlzIHNvbWUgYmFzaWMgZG9jdW1lbnRhdGlvbiBmb3Ig
dGhlCm1vZHVsZXMgc2hpcHBlZCB3aXRoIEx3YW4uCgojIyMjIEZpbGUgU2Vy
dmluZwoKVGhlIGBzZXJ2ZV9maWxlc2AgbW9kdWxlIHdpbGwgc2VydmUgc3Rh
dGljIGZpbGVzLCBhbmQgYXV0b21hdGljYWxseSBjcmVhdGUKZGlyZWN0b3J5
IGluZGljZXMgb3Igc2VydmUgcHJlLWNvbXByZXNzZWQgZmlsZXMuICBJdCds
bCBnZW5lcmFsbHkgdHJ5IGl0cwpiZXN0IHRvIHNlcnZlIGZpbGVzIGluIHRo
ZSBmYXN0ZXN0IHdheSBwb3NzaWJsZSBhY2NvcmRpbmcgdG8gc29tZSBoZXVy
aXN0aWNzLgoKCnwgT3B0aW9uIHwgVHlwZSB8IERlZmF1bHQgfCBEZXNjcmlw
dGlvbiB8CnwtLS0tLS0tLXwtLS0tLS18LS0tLS0tLS0tfC0tLS0tLS0tLS0t
LS18CnwgYHBhdGhgICAgICAgICAgICAgICAgICAgICAgfCBgc3RyYCAgfCBg
TlVMTGAgICAgICAgfCBQYXRoIHRvIGEgZGlyZWN0b3J5IGNvbnRhaW5pbmcg
ZmlsZXMgdG8gYmUgc2VydmVkIHwKfCBgaW5kZXhfcGF0aGAgICAgICAgICAg
ICAgICB8IGBzdHJgICB8IGBpbmRleC5odG1sYCB8IEZpbGUgbmFtZSB0byBz
ZXJ2ZSBhcyBhbiBpbmRleCBmb3IgYSBkaXJlY3RvcnkgfAp8IGBzZXJ2ZV9w
cmVjb21wcmVzc2VkX3BhdGhgIHwgYGJvb2xgIHwgYHRydWVgICAgICAgIHwg
SWYgJEZJTEUuZ3ogZXhpc3RzLCBpcyBzbWFsbGVyIGFuZCBuZXdlciB0aGFu
ICRGSUxFLCBhbmQgdGhlIGNsaWVudCBhY2NlcHRzIGBnemlwYCBlbmNvZGlu
ZywgdHJhbnNmZXIgaXQgfAp8IGBhdXRvX2luZGV4YCAgICAgICAgICAgICAg
IHwgYGJvb2xgIHwgYHRydWVgICAgICAgIHwgR2VuZXJhdGUgYSBkaXJlY3Rv
cnkgbGlzdCBhdXRvbWF0aWNhbGx5IGlmIG5vIGBpbmRleF9wYXRoYCBmaWxl
IHByZXNlbnQuICBPdGhlcndpc2UsIHlpZWxkcyA0MDQgfAp8IGBhdXRvX2lu
ZGV4X3JlYWRtZWAgICAgICAgIHwgYGJvb2xgIHwgYHRydWVgICAgICAgIHwg
SW5jbHVkZXMgdGhlIGNvbnRlbnRzIG9mIFJFQURNRSBmaWxlcyBhcyBwYXJ0
IG9mIHRoZSBhdXRvbWF0aWNhbGx5IGdlbmVyYXRlZCBkaXJlY3RvcnkgaW5k
ZXggfAp8IGBkaXJlY3RvcnlfbGlzdF90ZW1wbGF0ZWAgIHwgYHN0cmAgIHwg
YE5VTExgICAgICAgIHwgUGF0aCB0byBhIE11c3RhY2hlIHRlbXBsYXRlIGZv
ciB0aGUgZGlyZWN0b3J5IGxpc3Q7IGJ5IGRlZmF1bHQsIHVzZSBhbiBpbnRl
cm5hbCB0ZW1wbGF0ZSB8CnwgYHJlYWRfYWhlYWRgICAgICAgICAgICAgICAg
fCBgaW50YCAgfCBgMTMxNzAyYCAgICAgfCBNYXhpbXVtIGFtb3VudCBvZiBi
eXRlcyB0byByZWFkIGFoZWFkIHdoZW4gY2FjaGluZyBvcGVuIGZpbGVzLiAg
QSB2YWx1ZSBvZiBgMGAgZGlzYWJsZXMgcmVhZGFoZWFkLiAgUmVhZGFoZWFk
IGlzIHBlcmZvcm1lZCBieSBhIGxvdyBwcmlvcml0eSB0aHJlYWQgdG8gbm90
IGJsb2NrIHRoZSBJL08gdGhyZWFkcyB3aGlsZSBmaWxlIGV4dGVudHMgYXJl
IGJlaW5nIHJlYWQgZnJvbSB0aGUgZmlsZXN5c3RlbS4gfAoKIyMjIyBMdWEK
ClRoZSBgbHVhYCBtb2R1bGUgd2lsbCBhbGxvdyByZXF1ZXN0cyB0byBiZSBz
ZXJ2aWNlZCBieSBzY3JpcHRzIHdyaXR0ZW4gaW4KdGhlIFtMdWFdKGh0dHBz
Oi8vd3d3Lmx1YS5vcmcvKSBwcm9ncmFtbWluZyBsYW5ndWFnZS4gIEFsdGhv
dWdoIHRoZQpmdW5jdGlvbmFsaXR5IHByb3ZpZGVkIGJ5IHRoaXMgbW9kdWxl
IGlzIHF1aXRlIHNwYXJ0YW4sIGl0J3MgYWJsZSB0byBydW4KZnJhbWV3b3Jr
cyBzdWNoIGFzIFtTYWlsb3JdKGh0dHBzOi8vZ2l0aHViLmNvbS9scGVyZWly
YS9zYWlsb3ItaGVsbG8tbHdhbikuCgpTY3JpcHRzIGNhbiBiZSBzZXJ2ZWQg
ZnJvbSBmaWxlcyBvciBlbWJlZGRlZCBpbiB0aGUgY29uZmlndXJhdGlvbiBm
aWxlLCBhbmQKdGhlIHJlc3VsdHMgb2YgbG9hZGluZyB0aGVtLCB0aGUgc3Rh
bmRhcmQgTHVhIG1vZHVsZXMsIGFuZCAob3B0aW9uYWxseSwgaWYKdXNpbmcg
THVhSklUKSBvcHRpbWl6aW5nIHRoZSBjb2RlIHdpbGwgYmUgY2FjaGVkIGZv
ciBhIHdoaWxlLiAgRWFjaCBJL08KdGhyZWFkIGluIEx3YW4gd2lsbCBjcmVh
dGUgYW4gaW5zdGFuY2Ugb2YgYSBMdWEgVk0gKGkuZS4gIG9uZSBgbHVhX1N0
YXRlYApzdHJ1Y3QgZm9yIGV2ZXJ5IEkvTyB0aHJlYWQpLCBhbmQgZWFjaCBM
d2FuIGNvcm91dGluZSB3aWxsIHNwYXduIGEgTHVhCnRocmVhZCAod2l0aCBg
bHVhX25ld3RocmVhZCgpYCkgcGVyIHJlcXVlc3QuICBCZWNhdXNlIG9mIHRo
aXMsIEx1YSBzY3JpcHRzCmNhbid0IHVzZSBnbG9iYWwgdmFyaWFibGVzLCBh
cyB0aGV5IG1heSBiZSBub3Qgb25seSBzZXJ2aWNlZCBieSBkaWZmZXJlbnQK
dGhyZWFkcywgYnV0IHRoZSBzdGF0ZSB3aWxsIGJlIGF2YWlsYWJsZSBvbmx5
IGZvciB0aGUgYW1vdW50IG9mIHRpbWUKc3BlY2lmaWVkIGluIHRoZSBgY2Fj
aGVfcGVyaW9kYCBjb25maWd1cmF0aW9uIG9wdGlvbi4KClRoZXJlJ3Mgbm8g
bmVlZCB0byBoYXZlIG9uZSBpbnN0YW5jZSBvZiB0aGUgTHVhIG1vZHVsZSBm
b3IgZWFjaCBlbmRwb2ludDsgYQpzaW5nbGUgc2NyaXB0LCBlbWJlZGVkIGlu
IHRoZSBjb25maWd1cmF0aW9uIGZpbGUgb3Igb3RoZXJ3aXNlLCBjYW4gc2Vy
dmljZQptYW55IGRpZmZlcmVudCBlbmRwb2ludHMuICBTY3JpcHRzIGFyZSBz
dXBwb3NlZCB0byBpbXBsZW1lbnQgZnVuY3Rpb25zIHdpdGgKdGhlIGZvbGxv
d2luZyBzaWduYXR1cmU6IGBoYW5kbGVfJHtNRVRIT0R9XyR7RU5EUE9JTlR9
KHJlcSlgLCB3aGVyZQpgJHtNRVRIT0R9YCBjYW4gYmUgYSBIVFRQIG1ldGhv
ZCAoaS5lLiAgYGdldGAsIGBwb3N0YCwgYGhlYWRgLCBldGMuKSwgYW5kCmAk
e0VORFBPSU5UfWAgaXMgdGhlIGRlc2lyZWQgZW5kcG9pbnQgdG8gYmUgaGFu
ZGxlZCBieSB0aGF0IGZ1bmN0aW9uLiAgVGhlCnNwZWNpYWwgYCR7RU5EUE9J
TlR9YCBgcm9vdGAgY2FuIGJlIHNwZWNpZmllZCB0byBhY3QgYXMgYSBjYXRj
aGFsbC4gIFRoZQpgcmVxYCBwYXJhbWV0ZXIgcG9pbnRzIHRvIGEgbWV0YXRh
YmxlIHRoYXQgY29udGFpbnMgbWV0aG9kcyB0byBvYnRhaW4KaW5mb3JtYXRp
b24gZnJvbSB0aGUgcmVxdWVzdCwgb3IgdG8gc2V0IHRoZSByZXNwb25zZSwg
YXMgc2VlbiBiZWxvdzoKCiAgIC0gYHJlcTpxdWVyeV9wYXJhbShwYXJhbSlg
IHJldHVybnMgdGhlIHF1ZXJ5IHBhcmFtZXRlciAoZnJvbSB0aGUgcXVlcnkg
c3RyaW5nKSB3aXRoIHRoZSBrZXkgYHBhcmFtYCwgb3IgYG5pbGAgaWYgbm90
IGZvdW5kCiAgIC0gYHJlcTpwb3N0X3BhcmFtKHBhcmFtKWAgcmV0dXJucyB0
aGUgcG9zdCBwYXJhbWV0ZXIgKG9ubHkgZm9yIGAke1BPU1R9YCBoYW5kbGVy
cykgd2l0aCB0aGUga2V5IGBwYXJhbWAsIG9yIGBuaWxgIGlmIG5vdCBmb3Vu
ZAogICAtIGByZXE6c2V0X3Jlc3BvbnNlKHN0cilgIHNldHMgdGhlIHJlc3Bv
bnNlIHRvIHRoZSBzdHJpbmcgYHN0cmAKICAgLSBgcmVxOnNheShzdHIpYCBz
ZW5kcyBhIHJlc3BvbnNlIGNodW5rICh1c2luZyBjaHVua2VkIGVuY29kaW5n
IGluIEhUVFApCiAgIC0gYHJlcTpzZW5kX2V2ZW50KGV2ZW50LCBzdHIpYCBz
ZW5kcyBhbiBldmVudCAodXNpbmcgc2VydmVyLXNlbnQgZXZlbnRzKQogICAt
IGByZXE6Y29va2llKHBhcmFtKWAgcmV0dXJucyB0aGUgY29va2llIG5hbWVk
IGBwYXJhbWAsIG9yIGBuaWxgIGlzIG5vdCBmb3VuZAogICAtIGByZXE6c2V0
X2hlYWRlcnModGJsKWAgc2V0cyB0aGUgcmVzcG9uc2UgaGVhZGVycyBmcm9t
IHRoZSB0YWJsZSBgdGJsYDsgYSBoZWFkZXIgbWF5IGJlIHNwZWNpZmllZCBt
dWx0aXBsZSB0aW1lcyBieSB1c2luZyBhIHRhYmxlLCByYXRoZXIgdGhhbiBh
IHN0cmluZywgaW4gdGhlIHRhYmxlIHZhbHVlIChgeydmb28nPXsnYmFyJywg
J2Jheid9fWApOyBtdXN0IGJlIGNhbGxlZCBiZWZvcmUgc2VuZGluZyBhbnkg
cmVzcG9uc2Ugd2l0aCBgc2F5KClgIG9yIGBzZW5kX2V2ZW50KClgCiAgIC0g
YHJlcTpzbGVlcChtcylgIHBhdXNlcyB0aGUgY3VycmVudCBoYW5kbGVyIGZv
ciB0aGUgc3BlY2lmaWVkIGFtb3VudCBvZiBtaWxsaXNlY29uZHMKICAgLSBg
cmVxOndzX3VwZ3JhZGUoKWAgcmV0dXJucyBgMWAgaWYgdGhlIGNvbm5lY3Rp
b24gY291bGQgYmUgdXBncmFkZWQgdG8gYSBXZWJTb2NrZXQ7IGAwYCBvdGhl
cndpc2UKICAgLSBgcmVxOndzX3dyaXRlKHN0cilgIHNlbmRzIGBzdHJgIHRo
cm91Z2ggdGhlIFdlYlNvY2tldC11cGdyYWRlZCBjb25uZWN0aW9uCiAgIC0g
YHJlcTp3c19yZWFkKClgIHJldHVybnMgYSBzdHJpbmcgb2J0YWluZWQgZnJv
bSB0aGUgV2ViU29ja2V0LCBvciBgbmlsYCBvbiBlcnJvcgoKSGFuZGxlciBm
dW5jdGlvbnMgbWF5IHJldHVybiBlaXRoZXIgYG5pbGAgKGluIHdoaWNoIGNh
c2UsIGEgYDIwMCBPS2AgcmVzcG9uc2UKaXMgZ2VuZXJhdGVkKSwgb3IgYSBu
dW1iZXIgbWF0Y2hpbmcgYW4gSFRUUCBzdGF0dXMgY29kZS4gIEF0dGVtcHRp
bmcgdG8gcmV0dXJuCmFuIGludmFsaWQgSFRUUCBzdGF0dXMgY29kZSBvciBh
bnl0aGluZyBvdGhlciB0aGFuIGEgbnVtYmVyIG9yIGBuaWxgIHdpbGwgcmVz
dWx0CmluIGEgYDUwMCBJbnRlcm5hbCBTZXJ2ZXIgRXJyb3JgIHJlc3BvbnNl
IGJlaW5nIHRocm93bi4KCnwgT3B0aW9uIHwgVHlwZSB8IERlZmF1bHQgfCBE
ZXNjcmlwdGlvbiB8CnwtLS0tLS0tLXwtLS0tLS18LS0tLS0tLS0tfC0tLS0t
LS0tLS0tLS18CnwgYGRlZmF1bHRfdHlwZWAgfCBgc3RyYCB8IGB0ZXh0L3Bs
YWluYCB8IERlZmF1bHQgTUlNRS1UeXBlIGZvciByZXNwb25zZXMgfAp8IGBz
Y3JpcHRfZmlsZWAgfCBgc3RyYCB8IGBOVUxMYCB8IFBhdGggdG8gTHVhIHNj
cmlwdHwKfCBgY2FjaGVfcGVyaW9kYCB8IGB0aW1lYCB8IGAxNXNgIHwgVGlt
ZSB0byBrZWVwIEx1YSBzdGF0ZSBsb2FkZWQgaW4gbWVtb3J5IHwKfCBgc2Ny
aXB0YCB8IGBzdHJgIHwgYE5VTExgIHwgSW5saW5lIGx1YSBzY3JpcHQgfAoK
IyMjIyBSZXdyaXRlCgpUaGUgYHJld3JpdGVgIG1vZHVsZSB3aWxsIG1hdGNo
CltwYXR0ZXJuc10oaHR0cHM6Ly9tYW4ub3BlbmJzZC5vcmcvcGF0dGVybnMu
NykgaW4gVVJMcyBhbmQgZ2l2ZSB0aGUgb3B0aW9uCnRvIGVpdGhlciByZWRp
cmVjdCB0byBhbm90aGVyIFVSTCwgb3IgcmV3cml0ZSB0aGUgcmVxdWVzdCBp
biBhIHdheSB0aGF0IEx3YW4Kd2lsbCBoYW5kbGUgdGhlIHJlcXVlc3QgYXMg
aWYgaXQgd2VyZSBtYWRlIGluIHRoYXQgd2F5IG9yaWdpbmFsbHkuICBUaGUK
cGF0dGVybnMgYXJlIGEgc3BlY2lhbCBraW5kIG9mIHJlZ3VsYXIgZXhwcmVz
c2lvbnMsIGZvcmtlZCBmcm9tIEx1YSA1LjMuMSwKdGhhdCBkbyBub3QgY29u
dGFpbiBiYWNrcmVmZXJlbmNlcyBhbmQgb3RoZXIgZmVhdHVyZXMgdGhhdCBj
b3VsZCBjcmVhdGUKZGVuaWFsLW9mLXNlcnZpY2UgaXNzdWVzIGluIEx3YW4u
ICBUaGUgbmV3IFVSTCBjYW4gYmUgc3BlY2lmaWVkIHVzaW5nIGEKc2ltcGxl
IHRleHQgc3Vic3RpdHV0aW9uIHN5bnRheCwgb3IgdXNlIEx1YSBzY3JpcHRz
OyBMdWEgc2NyaXB0cyB3aWxsCmNvbnRhaW4gdGhlIHNhbWUgbWV0YW1ldGhv
ZHMgYXZhaWxhYmxlIGluIHRoZSBgcmVxYCBtZXRhdGFibGUgcHJvdmlkZWQg
YnkKdGhlIEx1YSBtb2R1bGUsIHNvIGl0IGNhbiBiZSBxdWl0ZSBwb3dlcmZ1
bC4KCkVhY2ggaW5zdGFuY2Ugb2YgdGhlIHJld3JpdGUgbW9kdWxlIHdpbGwg
cmVxdWlyZSBhIGBwYXR0ZXJuYCBhbmQgdGhlIGFjdGlvbgp0byBleGVjdXRl
IHdoZW4gc3VjaCBwYXR0ZXJuIGlzIG1hdGNoZWQuICBQYXR0ZXJucyBhcmUg
ZXZhbHVhdGVkIGluIHRoZQpvcmRlciB0aGV5IGFwcGVhciBpbiB0aGUgY29u
ZmlndXJhdGlvbiBmaWxlLCBhbmQgYXJlIHNwZWNpZmllZCB1c2luZyBuZXN0
ZWQKc2VjdGlvbnMgaW4gdGhlIGNvbmZpZ3VyYXRpb24gZmlsZS4gIEZvciBp
bnN0YW5jZSwgY29uc2lkZXIgdGhlIGZvbGxvd2luZwpleGFtcGxlLCB3aGVy
ZSB0d28gcGF0dGVybnMgYXJlIHNwZWNpZmllZDoKCmBgYApyZXdyaXRlIC9z
b21lL2Jhc2UvZW5kcG9pbnQgewogICAgcGF0dGVybiBwb3N0cy8oJWQrKSB7
CiAgICAgICAgIyBNYXRjaGVzIC9zb21lL2Jhc2UvZW5kcG9pbnRwb3N0cy8y
NjAwCiAgICAgICAgcmV3cml0ZV9hcyA9IC9jbXMvdmlldy1wb3N0P2lkPSUx
CiAgICB9CiAgICBwYXR0ZXJuIGltZ3VyLyglYSspLyglZyspIHsKICAgICAg
ICAjIE1hdGNoZXMgL3NvbWUvYmFzZS9lbmRwb2ludGltZ3VyL2dpZi9tcFQ5
NExkCiAgICAgICAgcmVkaXJlY3RfdG8gPSBodHRwczovL2kuaW1ndXIuY29t
LyUyLiUxCiAgICB9Cn0KYGBgCgpUaGlzIGV4YW1wbGUgZGVmaW5lcyB0d28g
cGF0dGVybnMsIG9uZSBwcm92aWRpbmcgYSBuaWNlciBVUkwgdGhhdCdzIGhp
ZGRlbgpmcm9tIHRoZSB1c2VyLCBhbmQgYW5vdGhlciBwcm92aWRpbmcgYSBk
aWZmZXJlbnQgd2F5IHRvIG9idGFpbiBhIGRpcmVjdCBsaW5rCnRvIGFuIGlt
YWdlIGhvc3RlZCBvbiBhIHBvcHVsYXIgaW1hZ2UgaG9zdGluZyBzZXJ2aWNl
IChpLmUuICByZXF1ZXN0aW5nCmAvc29tZS9iYXNlL2VuZHBvaW50L2ltZ3Vy
L21wNC80a09aTllYYCB3aWxsIHJlZGlyZWN0IGRpcmVjdGx5IHRvIGEgcmVz
b3VyY2UKaW4gdGhlIEltZ3VyIHNlcnZpY2UpLgoKVGhlIHZhbHVlIG9mIGBy
ZXdyaXRlX2FzYCBvciBgcmVkaXJlY3RfdG9gIGNhbiBiZSBMdWEgc2NyaXB0
cyBhcyB3ZWxsOyBpbgp3aGljaCBjYXNlLCB0aGUgb3B0aW9uIGBleHBhbmRf
d2l0aF9sdWFgIG11c3QgYmUgc2V0IHRvIGB0cnVlYCwgYW5kLCBpbnN0ZWFk
Cm9mIHVzaW5nIHRoZSBzaW1wbGUgdGV4dCBzdWJzdGl0dXRpb24gc3ludGF4
IGFzIHRoZSBleGFtcGxlIGFib3ZlLCBhCmZ1bmN0aW9uIG5hbWVkIGBoYW5k
bGVfcmV3cml0ZShyZXEsIGNhcHR1cmVzKWAgaGFzIHRvIGJlIGRlZmluZWQg
aW5zdGVhZC4KVGhlIGByZXFgIHBhcmFtZXRlciBpcyBkb2N1bWVudGVkIGlu
IHRoZSBMdWEgbW9kdWxlIHNlY3Rpb247IHRoZSBgY2FwdHVyZXNgCnBhcmFt
ZXRlciBpcyBhIHRhYmxlIGNvbnRhaW5pbmcgYWxsIHRoZSBjYXB0dXJlcywg
aW4gb3JkZXIuICBUaGlzIGZ1bmN0aW9uCnJldHVybnMgdGhlIG5ldyBVUkwg
dG8gcmVkaXJlY3QgdG8uCgpUaGlzIG1vZHVsZSBoYXMgbm8gb3B0aW9ucyBi
eSBpdHNlbGYuICBPcHRpb25zIGFyZSBzcGVjaWZpZWQgaW4gZWFjaCBhbmQK
ZXZlcnkgcGF0dGVybi4KCnwgT3B0aW9uIHwgVHlwZSB8IERlZmF1bHQgfCBE
ZXNjcmlwdGlvbiB8CnwtLS0tLS0tLXwtLS0tLS18LS0tLS0tLS0tfC0tLS0t
LS0tLS0tLS18CnwgYHJld3JpdGVfYXNgIHwgYHN0cmAgfCBgTlVMTGAgfCBS
ZXdyaXRlIHRoZSBVUkwgZm9sbG93aW5nIHRoaXMgcGF0dGVybiB8CnwgYHJl
ZGlyZWN0X3RvYCB8IGBzdHJgIHwgYE5VTExgIHwgUmVkaXJlY3QgdG8gYSBu
ZXcgVVJMIGZvbGxvd2luZyB0aGlzIHBhdHRlcm4gfAp8IGBleHBhbmRfd2l0
aF9sdWFgIHwgYGJvb2xgIHwgYGZhbHNlYCB8IFVzZSBMdWEgc2NyaXB0cyB0
byByZWRpcmVjdCB0byBvciByZXdyaXRlIGEgcmVxdWVzdCB8CgpgcmVkaXJl
Y3RfdG9gIGFuZCBgcmV3cml0ZV9hc2Agb3B0aW9ucyBhcmUgbXV0dWFsbHkg
ZXhjbHVzaXZlLCBhbmQgb25lIG9mCnRoZW0gbXVzdCBiZSBzcGVjaWZpZWQg
YXQgbGVhc3QuCgojIyMjIFJlZGlyZWN0CgpUaGUgYHJlZGlyZWN0YCBtb2R1
bGUgd2lsbCwgYXMgaXQgc2F5cyBpbiB0aGUgdGluLCBnZW5lcmF0ZSBhIGAz
MDEKTW92ZWQgcGVybWFuZW50bHlgIChieSBkZWZhdWx0OyB0aGUgY29kZSBj
YW4gYmUgY2hhbmdlZCwgc2VlIGJlbG93KQpyZXNwb25zZSwgYWNjb3JkaW5n
IHRvIHRoZSBvcHRpb25zIHNwZWNpZmllZCBpbiBpdHMgY29uZmlndXJhdGlv
bi4KR2VuZXJhbGx5LCB0aGUgYHJld3JpdGVgIG1vZHVsZSBzaG91bGQgYmUg
dXNlZCBpbnN0ZWFkIGFzIGl0IHBhY2tzIG1vcmUKZmVhdHVyZXM7IGhvd2V2
ZXIsIHRoaXMgbW9kdWxlIHNlcnZlcyBhbHNvIGFzIGFuIGV4YW1wbGUgb2Yg
aG93IHRvCndyaXRlIEx3YW4gbW9kdWxlcyAobGVzcyB0aGFuIDEwMCBsaW5l
cyBvZiBjb2RlKS4KCklmIHRoZSBgdG9gIG9wdGlvbiBpcyBub3Qgc3BlY2lm
aWVkLCBpdCBhbHdheXMgZ2VuZXJhdGVzIGEgYDUwMApJbnRlcm5hbCBTZXJ2
ZXIgRXJyb3JgIHJlc3BvbnNlLiAgU3BlY2lmeWluZyBhbiBpbnZhbGlkIEhU
VFAgY29kZSwgb3IgYQpjb2RlIHRoYXQgTHdhbiBkb2Vzbid0IGtub3cgYWJv
dXQgKHNlZSBgZW51bSBsd2FuX2h0dHBfc3RhdHVzYCksIHdpbGwKcHJvZHVj
ZSBhIGAzMDEgTW92ZWQgUGVybWFuZW50bHlgIHJlc3BvbnNlLgoKfCBPcHRp
b24gfCBUeXBlIHwgRGVmYXVsdCB8IERlc2NyaXB0aW9uIHwKfC0tLS0tLS0t
fC0tLS0tLXwtLS0tLS0tLS18LS0tLS0tLS0tLS0tLXwKfCBgdG9gIHwgYHN0
cmAgfCBgTlVMTGAgfCBUaGUgbG9jYXRpb24gdG8gcmVkaXJlY3QgdG8gfAp8
IGBjb2RlYCB8IGBpbnRgIHwgYDMwMWAgfCBUaGUgSFRUUCBjb2RlIHRvIHBl
cmZvcm0gYSByZWRpcmVjdCB8CgojIyMjIFJlc3BvbnNlCgpUaGUgYHJlc3Bv
bnNlYCBtb2R1bGUgd2lsbCBnZW5lcmF0ZSBhbiBhcnRpZmljaWFsIHJlc3Bv
bnNlIG9mIGFueSBIVFRQIGNvZGUuCkluIGFkZGl0aW9uIHRvIGFsc28gc2Vy
dmluZyBhcyBhbiBleGFtcGxlIG9mIGhvdyB0byB3cml0ZSBhIEx3YW4gbW9k
dWxlLAppdCBjYW4gYmUgdXNlZCB0byBjYXJ2ZSBvdXQgdm9pZHMgZnJvbSBv
dGhlciBtb2R1bGVzIChlLmcuIGdlbmVyYXRpbmcgYQpgNDA1IE5vdCBBbGxv
d2VkYCByZXNwb25zZSBmb3IgZmlsZXMgaW4gYC8uZ2l0YCwgaWYgYC9gIGlz
IHNlcnZlZCB3aXRoCnRoZSBgc2VydmVfZmlsZXNgIG1vZHVsZSkuCgpJZiB0
aGUgc3VwcGxpZWQgYGNvZGVgIGZhbGxzIG91dHNpZGUgdGhlIHJlc3BvbnNl
IGNvZGVzIGtub3duIGJ5IEx3YW4sCmEgYDQwNCBOb3QgRm91bmRgIGVycm9y
IHdpbGwgYmUgc2VudCBpbnN0ZWFkLgoKfCBPcHRpb24gfCBUeXBlIHwgRGVm
YXVsdCB8IERlc2NyaXB0aW9uIHwKfC0tLS0tLS0tfC0tLS0tLXwtLS0tLS0t
LS18LS0tLS0tLS0tLS0tLXwKfCBgY29kZWAgfCBgaW50YCB8IGA5OTlgIHwg
QSBIVFRQIHJlc3BvbnNlIGNvZGUgfAoKIyMjIEF1dGhvcml6YXRpb24gU2Vj
dGlvbgoKQXV0aG9yaXphdGlvbiBzZWN0aW9ucyBjYW4gYmUgZGVjbGFyZWQg
aW4gYW55IG1vZHVsZSBpbnN0YW5jZSBvciBoYW5kbGVyLAphbmQgcHJvdmlk
ZXMgYSB3YXkgdG8gYXV0aG9yaXplIHRoZSBmdWxmaWxsbWVudCBvZiB0aGF0
IHJlcXVlc3QgdGhyb3VnaAp0aGUgc3RhbmRhcmQgSFRUUCBhdXRob3JpemF0
aW9uIG1lY2hhbmlzbS4gIEluIG9yZGVyIHRvIHJlcXVpcmUgYXV0aG9yaXph
dGlvbgp0byBhY2Nlc3MgYSBjZXJ0YWluIG1vZHVsZSBpbnN0YW5jZSBvciBo
YW5kbGVyLCBkZWNsYXJlIGFuIGBhdXRob3JpemF0aW9uYApzZWN0aW9uIHdp
dGggYSBgYmFzaWNgIHBhcmFtZXRlciwgYW5kIHNldCBvbmUgb2YgaXRzIG9w
dGlvbnMuCgp8IE9wdGlvbiB8IFR5cGUgfCBEZWZhdWx0IHwgRGVzY3JpcHRp
b24gfAp8LS0tLS0tLS18LS0tLS0tfC0tLS0tLS0tLXwtLS0tLS0tLS0tLS0t
fAp8IGByZWFsbWAgfCBgc3RyYCB8IGBMd2FuYCB8IFJlYWxtIGZvciBhdXRo
b3JpemF0aW9uLiBUaGlzIGlzIHVzdWFsbHkgc2hvd24gaW4gdGhlIHVzZXIv
cGFzc3dvcmQgVUkgaW4gYnJvd3NlcnMgfAp8IGBwYXNzd29yZF9maWxlYCB8
IGBzdHJgIHwgYE5VTExgIHwgUGF0aCBmb3IgYSBmaWxlIGNvbnRhaW5pbmcg
dXNlcm5hbWUgYW5kIHBhc3N3b3JkcyAoaW4gY2xlYXIgdGV4dCkuICBUaGUg
ZmlsZSBmb3JtYXQgaXMgdGhlIHNhbWUgYXMgdGhlIGNvbmZpZ3VyYXRpb24g
ZmlsZSBmb3JtYXQgdXNlZCBieSBMd2FuIHwKCkhhY2tpbmcKLS0tLS0tLQoK
UGxlYXNlIHJlYWQgdGhpcyBzZWN0aW9uIChhbmQgZm9sbG93IGl0KSBpZiB5
b3UncmUgcGxhbm5pbmcgb24gY29udHJpYnV0aW5nCnRvIEx3YW4uICBUaGVy
ZSdzIG5vdGhpbmcgdW5leHBlY3RlZCBoZXJlOyB0aGlzIG1vc3RseSBmb2xs
b3dzIHRoZSBydWxlcyBhbmQKZXhwZWN0YXRpb25zIG9mIG1hbnkgb3RoZXIg
Rk9TUyBwcm9qZWN0cywgYnV0IGV2ZXJ5IG9uZSBleHBlY3RzIHRoaW5ncyBh
CmxpdHRsZSBiaXQgZGlmZmVyZW50IGZyb20gb25lIGFub3RoZXIuCgojIyMg
Q29kaW5nIFN0eWxlCgpMd2FuIHRyaWVzIHRvIGZvbGxvdyBhIGNvbnNpc3Rl
bnQgY29kaW5nIHN0eWxlIHRocm91Z2hvdXQgdGhlIHByb2plY3QuICBJZiB5
b3UncmUKY29uc2lkZXJpbmcgY29udHJpYnV0aW5nIGEgcGF0Y2ggdG8gdGhl
IHByb2plY3QsIHBsZWFzZSByZXNwZWN0IHRoaXMgc3R5bGUgYnkgdHJ5aW5n
CnRvIG1hdGNoIHRoZSBzdHlsZSBvZiB0aGUgc3Vycm91bmRpbmcgY29kZS4g
IEluIGdlbmVyYWw6CgogLSBgZ2xvYmFsX3ZhcmlhYmxlc19hcmVfbmFtZWRf
bGlrZV90aGlzYCwgZXZlbiB0aG91Z2ggdGhleSB0ZW5kIHRvIGJlIHJhcmUg
YW5kIHNob3VsZCBiZSBtYXJrZWQgYXMgYHN0YXRpY2AgKHdpdGggcmFyZSBl
eGNlcHRpb25zKQogLSBMb2NhbCB2YXJpYWJsZXMgYXJlIHVzdWFsbHkgc2hv
cnRlciwgZS5nLiBgbG9jYWxfdmFyYCwgYGlgLCBgY29ubmAKIC0gU3RydWN0
IG5hbWVzIGFyZSBvZnRlbiBhcyBzaG9ydCBhcyB0aGV5J3JlIGRlc2NyaXB0
aXZlLiAgYHR5cGVkZWZgIGZvciBzdHJ1Y3RzIGFyZSByYXJlbHkgdXNlZCBp
biBMd2FuCiAtIEhlYWRlciBmaWxlcyBzaG91bGQgdXNlIGAjcHJhZ21hIG9u
Y2VgIGluc3RlYWQgb2YgdGhlIHVzdWFsIGluY2x1ZGUgZ3VhcmQgaGFja2Vy
eQogLSBGdW5jdGlvbnMgdGhhdCBhcmUgdXNlZCBiZXR3ZWVuIC5jIGZpbGVz
IGJ1dCBhcmUgbm90IEFQSXMgdG8gYmUgZXhwb3NlZCB0byBsaWJsd2FuIHNo
b3VsZCBoYXZlIHRoZWlyIHByb3RvdHlwZSBhZGRlZCB0byBgbHdhbi1wcml2
YXRlLmhgCiAtIEZ1bmN0aW9ucyBzaG91bGQgYmUgc2hvcnQgYW5kIHN3ZWV0
LiAgRXhjZXB0aW9ucyBtYXkgYXBwbHkKIC0gUHVibGljIGZ1bmN0aW9ucyBz
aG91bGQgYmUgcHJlZml4ZWQgd2l0aCBgbHdhbl9gCiAtIFB1YmxpYyB0eXBl
cyBzaG91bGQgYmUgcHJlZml4ZWQgd2l0aCBgbHdhbl9gCiAtIFByaXZhdGUg
ZnVuY3Rpb25zIG11c3QgYmUgc3RhdGljLCBhbmQgY2FuIGJlIG5hbWVkIHdp
dGhvdXQgdGhlIGBsd2FuX2AgcHJlZml4CiAtIENvZGUgaXMgaW5kZW50ZWQg
d2l0aCA0IHNwYWNlczsgZG9uJ3QgdXNlIHRhYnMKIC0gVGhlcmUncyBhIHN1
Z2dlc3RlZCBsaW5lIGJyZWFrIGF0IGNvbHVtbiA4MCwgYnV0IGl0J3Mgbm90
IGVuZm9yY2VkCiAtIGAvKiBPbGQgQy1zdHlsZSBjb21tZW50cyBhcmUgcHJl
ZmVycmVkICovYAogLSBgY2xhbmctZm9ybWF0YCBjYW4gYmUgdXNlZCB0byBm
b3JtYXQgdGhlIHNvdXJjZSBjb2RlIGluIGFuIGFjY2VwdGFibGUgd2F5OyBh
IGAuY2xhbmctZm9ybWF0YCBmaWxlIGlzIHByb3ZpZGVkCgojIyMgVGVzdHMK
CklmIG1vZGlmeWluZyB3ZWxsLXRlc3RlZCBhcmVhcyBvZiB0aGUgY29kZSAo
ZS5nLiB0aGUgZXZlbnQgbG9vcCwgSFRUUCBwYXJzZXIsCmV0Yy4pLCBwbGVh
c2UgYWRkIGEgbmV3IGludGVncmF0aW9uIHRlc3QgYW5kIG1ha2Ugc3VyZSB0
aGF0LCBiZWZvcmUgeW91IHNlbmQgYQpwdWxsIHJlcXVlc3QsIGFsbCB0ZXN0
cyAoaW5jbHVkaW5nIHRoZSBuZXcgb25lcyB5b3UndmUgc2VudCkgYXJlIHdv
cmtpbmcuClRlc3RzIGNhbiBiZSBhZGRlZCBieSBtb2RpZnlpbmcgYHNyYy9z
Y3JpcHRzL3Rlc3RzdWl0ZS5weWAsIGFuZCBleGVjdXRlZCBieQplaXRoZXIg
aW52b2tpbmcgdGhhdCBzY3JpcHQgZGlyZWN0bHkgZnJvbSB0aGUgc291cmNl
IHJvb3QsIG9yIGV4ZWN1dGluZyB0aGUKYHRlc3RzdWl0ZWAgYnVpbGQgdGFy
Z2V0LgoKU29tZSB0ZXN0cyB3aWxsIG9ubHkgd29yayBvbiBMaW51eCwgYW5k
IHdvbid0IGJlIGV4ZWN1dGVkIG9uIG90aGVyIHBsYXRmb3Jtcy4KCiMjIyBG
dXp6LXRlc3RpbmcKCkx3YW4gaXMgYXV0b21hdGljYWxseSBmdXp6LXRlc3Rl
ZCBieQpbT1NTLUZ1enpdKGh0dHBzOi8vZ2l0aHViLmNvbS9nb29nbGUvb3Nz
LWZ1enovKS4gIFRvIGZ1enotdGVzdCBsb2NhbGx5LAp0aG91Z2gsIG9uZSBj
YW4gW2ZvbGxvdyB0aGUgaW5zdHJ1Y3Rpb25zIHRvIHRlc3QKbG9jYWxseV0o
aHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS9vc3MtZnV6ei9ibG9iL21hc3Rl
ci9kb2NzL25ld19wcm9qZWN0X2d1aWRlLm1kI3Rlc3RpbmctbG9jYWxseSku
CgpUaGlzIGZ1enplcyBvbmx5IHRoZSByZXF1ZXN0IHBhcnNpbmcgY29kZS4g
IFRoZXJlIGFyZSBwbGFucyB0byBhZGQgZnV6emluZwpkcml2ZXJzIGZvciBv
dGhlciBwYXJ0cyBvZiB0aGUgY29kZSwgaW5jbHVkaW5nIHRoZSByZXdyaXRp
bmcgZW5naW5lLApjb25maWd1cmF0aW9uIGZpbGUgcmVhZGVyLCB0ZW1wbGF0
ZSBwYXJzZXIsIGFuZCBVUkwgcm91dGluZy4KCiMjIyBFeHBvcnRpbmcgQVBJ
cwoKVGhlIHNoYXJlZCBvYmplY3QgdmVyc2lvbiBvZiBgbGlibHdhbmAgb24g
RUxGIHRhcmdldHMgKGUuZy4gTGludXgpIHdpbGwgdXNlCmEgc3ltYm9sIGZp
bHRlciBzY3JpcHQgdG8gaGlkZSBzeW1ib2xzIHRoYXQgYXJlIGNvbnNpZGVy
ZWQgcHJpdmF0ZSB0byB0aGUKbGlicmFyeS4gIFBsZWFzZSBlZGl0IGBzcmMv
bGliL2xpYmx3YW4uc3ltYCB0byBhZGQgbmV3IHN5bWJvbHMgdGhhdCBzaG91
bGQKYmUgZXhwb3J0ZWQgdG8gYGxpYmx3YW4uc29gLgoKIyMjIFVzaW5nIEdp
dCBhbmQgUHVsbCBSZXF1ZXN0cwoKTHdhbiB0cmllcyB0byBtYWludGFpbiBh
IHNvdXJjZSBoaXN0b3J5IHRoYXQncyBhcyBmbGF0IGFzIHBvc3NpYmxlLCBk
ZXZvaWQgb2YKbWVyZ2UgY29tbWl0cy4gIFRoaXMgbWVhbnMgdGhhdCBwdWxs
IHJlcXVlc3RzIHNob3VsZCBiZSByZWJhc2VkIG9uIHRvcCBvZiB0aGUKY3Vy
cmVudCBtYXN0ZXIgYmVmb3JlIHRoZXkgY2FuIGJlIG1lcmdlZDsgc29tZXRp
bWVzIHRoaXMgY2FuIGJlIG1hZGUKYXV0b21hdGljYWxseSBieSB0aGUgR2l0
SHViIGludGVyZmFjZSwgc29tZXRpbWVzIHRoZXkgbmVlZCBzb21lIG1hbnVh
bCB3b3JrIHRvCmZpeCBjb25mbGljdHMuICBJdCBpcyBhcHByZWNpYXRlZCBp
ZiB0aGUgY29udHJpYnV0b3IgZml4ZXMgdGhlc2UgY29uZmxpY3RzIHdoZW4K
YXNrZWQuCgpJdCBpcyBhZHZpc2FibGUgdG8gcHVzaCB5b3VyIGNoYW5nZXMg
dG8geW91ciBmb3JrIG9uIGEgYnJhbmNoLXBlci1wdWxsIHJlcXVlc3QsCnJh
dGhlciB0aGFuIHB1c2hpbmcgdG8gdGhlIGBtYXN0ZXJgIGJyYW5jaDsgdGhl
IHJlYXNvbiBpcyBleHBsYWluZWQgYmVsb3cuCgpQbGVhc2UgZW5zdXJlIHRo
YXQgR2l0IGlzIGNvbmZpZ3VyZWQgcHJvcGVybHkgd2l0aCB5b3VyIG5hbWUg
KGl0IGRvZXNuJ3QgcmVhbGx5Cm1hdHRlciBpZiBpdCBpcyB5b3VyIGxlZ2Fs
IG5hbWUgb3IgYSBuaWNrbmFtZSwgYnV0IGl0IHNob3VsZCBiZSBlbm91Z2gg
dG8gY3JlZGl0CnlvdSkgYW5kIGEgdmFsaWQgZW1haWwgYWRkcmVzcy4gIFRo
ZXJlJ3Mgbm8gbmVlZCB0byBhZGQgYFNpZ25lZC1vZmYtYnlgIGxpbmVzLApl
dmVuIHRob3VnaCBpdCdzIGZpbmUgdG8gc2VuZCBjb21taXRzIHdpdGggdGhl
bS4KCklmIGEgY2hhbmdlIGlzIHJlcXVlc3RlZCBpbiBhIHB1bGwgcmVxdWVz
dCwgeW91IGhhdmUgdGhyZWUgY2hvaWNlczoKCiAtICpSZXBseSBhc2tpbmcg
Zm9yIGNsYXJpZmljYXRpb24uKiAgTWF5YmUgdGhlIGludGVudGlvbnMgd2Vy
ZSBub3QgY2xlYXIgZW5vdWdoLAphbmQgd2hvZXZlciBhc2tlZCBmb3IgY2hh
bmdlcyBkaWRuJ3QgZnVsbHkgdW5kZXJzdGFuZCB3aGF0IHlvdSB3ZXJlIHRy
eWluZyB0bwphY2hpZXZlCiAtICpGaXggdGhlIGlzc3VlLiogIFdoZW4gZml4
aW5nIGlzc3VlcyBmb3VuZCBpbiBwdWxsIHJlcXVlc3RzLCAqcGxlYXNlKiB1
c2UKW2ludGVyYWN0aXZlIHJlYmFzZXNdKGh0dHBzOi8vZ2l0LXNjbS5jb20v
Ym9vay9lbi92Mi9HaXQtVG9vbHMtUmV3cml0aW5nLUhpc3RvcnkpIHRvCnNx
dWFzaCBvciBmaXh1cCBjb21taXRzOyBkb24ndCBhZGQgeW91ciBmaXhlcyBv
biB0b3Agb2YgeW91ciB0cmVlLiAgRG8gbm90IGNyZWF0ZQphbm90aGVyIHB1
bGwgcmVxdWVzdCBqdXN0IHRvIGFjY29tb2RhdGUgdGhlIGNoYW5nZXMuIEFm
dGVyIHJld3JpdGluZwp0aGUgaGlzdG9yeSBsb2NhbGx5LCBmb3JjZS1wdXNo
IHRvIHlvdXIgUFIgYnJhbmNoOyB0aGUgUFIgd2lsbCB1cGRhdGUgYXV0b21h
dGljYWxseQp3aXRoIHlvdXIgY2hhbmdlcy4gIFJld3JpdGluZyB0aGUgaGlz
dG9yeSBvZiBkZXZlbG9wbWVudCBicmFuY2hlcyBpcyBmaW5lLCBhbmQKZm9y
Y2UtcHVzaGluZyB0aGVtIGlzIG5vcm1hbCBhbmQgZXhwZWN0ZWQuCgpJdCBp
cyBub3QgZW5mb3JjZWQsIGJ1dCBpdCBpcyByZWNvbW1lbmRlZCB0byBjcmVh
dGUgc21hbGxlciBjb21taXRzLiBIb3cKY29tbWl0cyBhcmUgc3BsaXQgaW4g
THdhbiBpcyBwcmV0dHkgbXVjaCBhcmJpdHJhcnksIHNvIHBsZWFzZSB0YWtl
IGEgbG9vayBhdAp0aGUgY29tbWl0IGhpc3RvcnkgdG8gZ2V0IHRoZSBpZGVh
IG9uIGhvdyB0aGUgZGl2aXNpb24gc2hvdWxkIGJlIG1hZGUuICBHaXQKb2Zm
ZXJzIGEgcGxldGhvcmEgb2YgY29tbWFuZHMgdG8gYWNoaWV2ZSB0aGlzIHJl
c3VsdDogdGhlIGFscmVhZHkgbWVudGlvbmVkCmludGVyYWN0aXZlIHJlYmFz
ZSwgdGhlIGAtcGAgb3B0aW9uIHRvIGBnaXQgYWRkYCwgYW5kIGBnaXQgY29t
bWl0IC0tYW1lbmRgCmFyZSBnb29kIGV4YW1wbGVzLgoKQ29tbWl0IG1lc3Nh
Z2VzIHNob3VsZCBoYXZlIG9uZSBsaW5lIG9mIHN1bW1hcnkgKH43MiBjaGFy
cyksIGZvbGxvd2VkIGJ5IGFuCmVtcHR5IGxpbmUsIGZvbGxvd2VkIGJ5IHBh
cmFncmFwaHMgb2YgODAtbGluZXMgZXhwbGFpbmluZyB0aGUgY2hhbmdlLiAg
VGhlCnBhcmFncmFwaHMgZXhwbGFpbmluZyB0aGUgY2hhbmdlcyBhcmUgdXN1
YWxseSBub3QgbmVjZXNzYXJ5IGlmIHRoZSBzdW1tYXJ5CmlzIGdvb2QgZW5v
dWdoLiAgVHJ5IHRvIFt3cml0ZSBnb29kIGNvbW1pdCBtZXNzYWdlc10oaHR0
cHM6Ly9jaHJpcy5iZWFtcy5pby9wb3N0cy9naXQtY29tbWl0LykuCgojIyMg
TGljZW5zaW5nCgpMd2FuIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBHTlUgR2Vu
ZXJhbCBQdWJsaWMgTGljZW5zZSwgdmVyc2lvbiAyLCBvciAoYXQgeW91ciBv
cHRpb24pLAphbnkgbGF0ZXIgdmVyc2lvbi4gIFRoZXJlZm9yZToKCiAtIENv
ZGUgbXVzdCBiZSBlaXRoZXIgTEdQTHYyLjEsIEdQTHYyLCBhIHBlcm1pc3Np
dmUgImNvcHlmcmVlIiBsaWNlbnNlIHRoYXQgaXMgY29tcGF0aWJsZQp3aXRo
IEdQTHYyIChlLmcuIE1JVCwgQlNEIDMtY2xhdXNlKSwgb3IgcHVibGljIGRv
bWFpbiBjb2RlIChlLmcuIENDMCkKIC0gQWx0aG91Z2ggdGhlIHByb2dyYW0g
Y2FuIGJlIGRpc3RyaWJ1dGVkIGFuZCB1c2VkIGFzIGlmIGl0IHdlcmUgbGlj
ZW5zZWQgYXMgR1BMdjMsCml0cyBjb2RlIG11c3QgYmUgY29tcGF0aWJsZSB3
aXRoIEdQTHYyIGFzIHdlbGw7IG5vIG5ldyBjb2RlIGNhbiBiZSBsaWNlbnNl
ZCB1bmRlciB2ZXJzaW9ucwpvZiBHUEwgbmV3ZXIgdGhhbiAyCiAtIExpa2V3
aXNlLCBjb2RlIGxpY2Vuc2VkIHVuZGVyIGxpY2Vuc2VzIGNvbXBhdGlibGUg
d2l0aCBHUEx2MyBidXQKaW5jb21wYXRpYmxlIHdpdGggR1BMdjIgKGUuZy4g
IEFwYWNoZSAyKSBhcmUgbm90IHN1aXRhYmxlIGZvciBpbmNsdXNpb24gaW4K
THdhbgogLSBFdmVuIGlmIHRoZSBsaWNlbnNlIGRvZXMgbm90IHNwZWNpZnkg
dGhhdCBjcmVkaXQgc2hvdWxkIGJlIGdpdmVuIChlLmcuIENDMC1saWNlbnNl
ZCBjb2RlKSwKcGxlYXNlIGdpdmUgY3JlZGl0IHRvIHRoZSBvcmlnaW5hbCBh
dXRob3IgZm9yIHRoYXQgcGllY2Ugb2YgY29kZQogLSBDb250cmFyeSB0byBw
b3B1bGFyIGJlbGllZiwgaXQgaXMgcG9zc2libGUgdG8gdXNlIGEgR1BMJ2Qg
cGllY2Ugb2YgY29kZSBvbiBhIHNlcnZlciB3aXRob3V0CmhhdmluZyB0byBz
aGFyZSB0aGUgY29kZSBmb3IgeW91ciBhcHBsaWNhdGlvbi4gIEl0IGlzIG9u
bHkgd2hlbiB0aGUgYmluYXJ5IG9mIHRoYXQgc2VydmVyIGlzCnNoYXJlZCB0
aGF0IHNvdXJjZSBtdXN0IGJlIGF2YWlsYWJsZSB0byB3aG9ldmVyIGhhcyB0
aGF0IGJpbmFyeS4gIE1lcmVseSBhY2Nlc3NpbmcgYSBMd2FuCnNlcnZlciB0
aHJvdWdoIEhUVFAgZG9lcyBub3QgcXVhbGlmeSBhcyBoYXZpbmcgYWNjZXNz
IHRvIHRoZSBiaW5hcnkgcHJvZ3JhbSB0aGF0J3MgcnVubmluZwpvbiB0aGUg
c2VydmVyCiAtIFdoZW4gaW4gZG91YnQsIGRvbid0IHRha2UgbGVnYWwgYWR2
aWNlIGZyb20gYSBSRUFETUUgZmlsZTogcGxlYXNlIGNvbnN1bHQKYSBsYXd5
ZXIgdGhhdCB1bmRlcnN0YW5kcyBmcmVlIHNvZnR3YXJlIGxpY2Vuc2luZwoK
UG9ydGFiaWxpdHkKLS0tLS0tLS0tLS0KCldoaWxlIEx3YW4gd2FzIHdyaXR0
ZW4gb3JpZ2luYWxseSBmb3IgTGludXgsIGl0IGhhcyBiZWVuIHBvcnRlZCB0
byBCU0QKc3lzdGVtcyBhcyB3ZWxsLiAgVGhlIGJ1aWxkIHN5c3RlbSB3aWxs
IGRldGVjdCB0aGUgc3VwcG9ydGVkIGZlYXR1cmVzCmFuZCBidWlsZCBzdXBw
b3J0IGxpYnJhcnkgZnVuY3Rpb25zIGFzIGFwcHJvcHJpYXRlLgoKRm9yIGlu
c3RhbmNlLCBbZXBvbGxdKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtp
L0Vwb2xsKSBoYXMgYmVlbgppbXBsZW1lbnRlZCBvbiB0b3Agb2YgW2txdWV1
ZV0oaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvS3F1ZXVlKSwgYW5k
CkxpbnV4LW9ubHkgc3lzY2FsbHMgYW5kIEdOVSBleHRlbnNpb25zIGhhdmUg
YmVlbiBpbXBsZW1lbnRlZCBmb3IgdGhlCnN1cHBvcnRlZCBzeXN0ZW1zLiAg
W1RoaXMgYmxvZyBwb3N0XShodHRwczovL3RpYS5tYXQuYnIvcG9zdHMvMjAx
OC8wNi8yOC9pbmNsdWRlX25leHRfYW5kX3BvcnRhYmlsaXR5Lmh0bWwpCmV4
cGxhaW5zIHRoZSBkZXRhaWxzIGFuZCBob3cgYCNpbmNsdWRlX25leHRgIGlz
IHVzZWQuCgpQZXJmb3JtYW5jZQotLS0tLS0tLS0tLQoKSXQgY2FuIGFjaGll
dmUgZ29vZCBwZXJmb3JtYW5jZSwgeWllbGRpbmcgYWJvdXQgKiozMjAwMDAg
cmVxdWVzdHMvc2Vjb25kKioKb24gYSBDb3JlIGk3IGxhcHRvcCBmb3IgcmVx
dWVzdHMgd2l0aG91dCBkaXNrIGFjY2VzcywgYW5kIHdpdGhvdXQgcGlwZWxp
bmluZy4KCldoZW4gZGlzayBJL08gaXMgcmVxdWlyZWQsIGZvciBmaWxlcyB1
cCB0byAxNktpQiwgaXQgeWllbGRzIGFib3V0CioqMjkwMDAwIHJlcXVlc3Rz
L3NlY29uZCoqOyBmb3IgbGFyZ2VyIGZpbGVzLCB0aGlzIGRyb3BzIHRvICoq
MTg1MDAwCnJlcXVlc3RzL3NlY29uZCoqLCB3aGljaCBpc24ndCB0b28gc2hh
YmJ5IGVpdGhlci4KClRoZXNlIHJlc3VsdHMsIG9mIGNvdXJzZSwgd2l0aCBr
ZWVwLWFsaXZlIGNvbm5lY3Rpb25zLCBhbmQgd2l0aCB3ZWlnaHR0cApydW5u
aW5nIG9uIHRoZSBzYW1lIG1hY2hpbmUgKGFuZCB0aHVzIHVzaW5nIHJlc291
cmNlcyB0aGF0IGNvdWxkIGJlIHVzZWQKZm9yIHRoZSB3ZWJzZXJ2ZXIgaXRz
ZWxmKS4KCldpdGhvdXQga2VlcC1hbGl2ZSwgdGhlc2UgbnVtYmVycyBkcm9w
IGFyb3VuZCA2LWZvbGQuCgpJUkMgQ2hhbm5lbAotLS0tLS0tLS0tLQoKVGhl
cmUgaXMgYW4gSVJDIGNoYW5uZWwgKGAjbHdhbmApIG9uIFtGcmVlbm9kZV0o
aHR0cDovL2ZyZWVub2RlLm5ldCkuIEEKc3RhbmRhcmQgSVJDIGNsaWVudCBj
YW4gYmUgdXNlZC4gIEEgW3dlYiBJUkMgZ2F0ZXdheV0oaHR0cDovL3dlYmNo
YXQuZnJlZW5vZGUubmV0P2NoYW5uZWxzPSUyM2x3YW4mdWlvPWQ0KQppcyBh
bHNvIGF2YWlsYWJsZS4KCkx3YW4gaW4gdGhlIHdpbGQKLS0tLS0tLS0tLS0t
LS0tLQoKSGVyZSdzIGEgbm9uLWRlZmluaXRpdmUgbGlzdCBvZiB0aGlyZC1w
YXJ0eSBzdHVmZiB0aGF0IHVzZXMgTHdhbiBhbmQgaGF2ZQpiZWVuIHNlZW4g
aW4gdGhlIHdpbGQuICAqSGVscCBidWlsZCB0aGlzIGxpc3QhKgoKKiBbVGhp
cyBwcm9qZWN0IHVzZXMgQ3l0aG9uIGFuZCBMd2FuXShodHRwczovL3d3dy5l
cnA1LmNvbS9OWEQtQmxvZy5NdWx0aWNvcmUuUHl0aG9uLkhUVFAuU2VydmVy
KSB0byBtYWtlIGl0IHBvc3NpYmxlIHRvIHdyaXRlIGhhbmRsZXJzIGluIFB5
dGhvbi4KKiBbQW4gZXhwZXJpbWVudGFsIHZlcnNpb24gb2YgTm9kZS5qcyB1
c2luZyBMd2FuXShodHRwczovL2dpdGh1Yi5jb20vcmFhZGFkL25vZGUtbHdh
bikgYXMgaXRzIEhUVFAgc2VydmVyIGlzIG1haW50YWluZWQgYnkgW0ByYWFk
YWRdKGh0dHBzOi8vZ2l0aHViLmNvbS9yYWFkYWQpLgoqIFRoZSBiZWdpbm5p
bmdzIG9mIGEgQysrMTEgW3dlYiBmcmFtZXdvcmtdKGh0dHBzOi8vZ2l0aHVi
LmNvbS92aWxlZGEvd2ZwcCkgYmFzZWQgb24gTHdhbiB3cml0dGVuIGJ5IFtA
dmlsZWRhXShodHRwczovL2dpdGh1Yi5jb20vdmlsZWRhKS4KKiBBIG1vcmUg
Y29tcGxldGUgQysrMTQgW3dlYiBmcmFtZXdvcmtdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9tYXR0LTQyL3NpbGljb24pIGJ5IFtAbWF0dC00Ml0oaHR0cHM6Ly9n
aXRodWIuY29tL21hdHQtNDIpIG9mZmVycyBMd2FuIGFzIG9uZSBvZiBpdHMg
YmFja2VuZHMuCiogQSBbd29yZCBsYWRkZXIgc2FtcGxlIHByb2dyYW1dKGh0
dHBzOi8vZ2l0aHViLmNvbS9zam5hbS9sd2FuLXNnYi1sYWRkZXJzKSBieSBb
QHNqbmFtXShodHRwczovL2dpdGh1Yi5jb20vc2puYW0pLiBbRGVtb10oaHR0
cDovL3RiY29lLmRkbnMubmV0L3NnYi9sYWRkZXJzP3N0YXJ0PWNoYW9zJmdv
YWw9b3JkZXIpLgoqIEEgW1Nob2RhbiBzZWFyY2hdKGh0dHBzOi8vd3d3LnNo
b2Rhbi5pby9zZWFyY2g/cXVlcnk9c2VydmVyJTNBK2x3YW4pIGxpc3Rpbmcg
c29tZSBicmF2ZSBzb3VscyB0aGF0IGV4cG9zZSBMd2FuIHRvIHRoZSBwdWJs
aWMgaW50ZXJuZXQuCgpTb21lIG90aGVyIGRpc3RyaWJ1dGlvbiBjaGFubmVs
cyB3ZXJlIG1hZGUgYXZhaWxhYmxlIGFzIHdlbGw6CgoqIEEgYERvY2tlcmZp
bGVgIGlzIG1haW50YWluZWQgYnkgW0BqYXhnZWxsZXJdKGh0dHBzOi8vZ2l0
aHViLmNvbS9qYXhnZWxsZXIpLCBhbmQgaXMgW2F2YWlsYWJsZSBmcm9tIHRo
ZSBEb2NrZXIgcmVnaXN0cnldKGh0dHBzOi8vaHViLmRvY2tlci5jb20vci9q
YXhnZWxsZXIvbHdhbi8pLgoqIEEgYnVpbGRwYWNrIGZvciBIZXJva3UgaXMg
bWFpbnRhaW5lZCBieSBbQGJoZXJyZXJhXShodHRwczovL2dpdGh1Yi5jb20v
YmhlcnJlcmEpLCBhbmQgaXMgW2F2YWlsYWJsZSBmcm9tIGl0cyByZXBvXSho
dHRwczovL2dpdGh1Yi5jb20vYmhlcnJlcmEvaGVyb2t1LWJ1aWxkcGFjay1s
d2FuKS4KKiBMd2FuIGlzIGFsc28gYXZhaWxhYmxlIGFzIGEgcGFja2FnZSBp
biBbQmlpY29kZV0oaHR0cDovL2RvY3MuYmlpY29kZS5jb20vYysrL2V4YW1w
bGVzL2x3YW4uaHRtbCkuCiogSXQncyBhbHNvIGF2YWlsYWJsZSBpbiBzb21l
IEdOVS9MaW51eCBkaXN0cmlidXRpb25zOgogICAgKiBbQXJjaCBMaW51eF0o
aHR0cHM6Ly9hdXIuYXJjaGxpbnV4Lm9yZy9wYWNrYWdlcy9sd2FuLWdpdC8p
CiAgICAqIFtVYnVudHVdKGh0dHBzOi8vbGF1bmNocGFkLm5ldC9sd2FuLXVu
b2ZmaWNpYWwpCiAgICAqIFtBbHBpbmUgTGludXhdKGh0dHBzOi8vcGtncy5h
bHBpbmVsaW51eC5vcmcvcGFja2FnZS9lZGdlL3Rlc3RpbmcveDg2XzY0L2x3
YW4pCiAgICAqIFtOaXhPU10oaHR0cHM6Ly9uaXhvcy5vcmcvbml4b3MvcGFj
a2FnZXMuaHRtbCNsd2FuKQoKTHdhbiBoYXMgYmVlbiBhbHNvIHVzZWQgYXMg
YSBiZW5jaG1hcms6CgoqIFtSYXBoYWVsIEphdmF1eCdzIG1hc3RlciB0aGVz
aXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9SYXBoYWVsSi9tYXN0ZXItdGhlc2lz
KSBjaXRlcyBMd2FuIGluIGNoYXB0ZXIgNSAoIlBlcmZvcm1hbmNlIEFuYWx5
c2lzIikuCiogTHdhbiBpcyB1c2VkIGFzIGEgYmVuY2htYXJrIGJ5IHRoZSBb
UHlQYXJhbGxlbF0oaHR0cDovL3B5cGFyYWxsZWwub3JnLykgW2F1dGhvcl0o
aHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL3Byb2dyYW1taW5nL2NvbW1lbnRz
LzNqaHY4MC9weXBhcmFsbGVsX2FuX2V4cGVyaW1lbnRhbF9wcm9vZm9mY29u
Y2VwdF9mb3JrX29mL2N1cjR0dXQpLgoqIFtLb25nXShodHRwczovL2dldGtv
bmcub3JnL2Fib3V0L2JlbmNobWFyay8pIHVzZXMgTHdhbiBhcyB0aGUgW2Jh
Y2tlbmQgQVBJXShodHRwczovL2dpc3QuZ2l0aHViLmNvbS9tb250YW5hZmx5
bm4vMDEzNzY5OTFmMGEzYWQwNzA1OWMpIGluIGl0cyBiZW5jaG1hcmsuCiog
W1RlY2hFbXBvd2VyIEZyYW1ld29yayBiZW5jaG1hcmtzXShodHRwczovL3d3
dy50ZWNoZW1wb3dlci5jb20vYmVuY2htYXJrcy8jc2VjdGlvbj1kYXRhLXIx
MCZodz1wZWFrJnRlc3Q9anNvbikgZmVhdHVyZSBMd2FuIHNpbmNlIHJvdW5k
IDEwLgoqIFtLcmFrZW5EXShodHRwOi8vd3d3LmtyYWtlbmQuaW8pIHVzZWQg
THdhbiBmb3IgdGhlIFJFU1QgQVBJIGluIGFsbCBvZmZpY2lhbCBbYmVuY2ht
YXJrc10oaHR0cDovL3d3dy5rcmFrZW5kLmlvL2RvY3MvYmVuY2htYXJrcy9h
d3MvKQoKTWVudGlvbnMgaW4gYWNhZGVtaWMgam91cm5hbHM6CgoqIFtBIGR5
bmFtaWMgcHJlZGljdGl2ZSByYWNlIGRldGVjdG9yIGZvciBDL0MrKyBwcm9n
cmFtc10oaHR0cHM6Ly9saW5rLnNwcmluZ2VyLmNvbS9hcnRpY2xlLzEwLjEw
MDcvczExMjI3LTAxNy0xOTk2LTgpIHVzZXMgTHdhbiBhcyBhICJyZWFsIHdv
cmxkIGV4YW1wbGUiLgoKU29tZSB0YWxrcyBtZW50aW9uaW5nIEx3YW46Cgoq
IFtUYWxrIGFib3V0IEx3YW5dKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dh
dGNoP3Y9Y3R0WTlGZEN6VUUpIGF0IFBvbHljb25mMTYsIGdpdmVuIGJ5IFtA
bHBlcmVpcmFdKGh0dHBzOi8vZ2l0aHViLmNvbS9scGVyZWlyYSkuCiogVGhp
cyBbdGFsayBhYm91dCBJcm9uXShodHRwczovL21pY2hhZWxzcHJvdWwuZ2l0
aHViLmlvL2lyb24tdGFsay8pLCBhIGZyYW1ld29yayBmb3IgUnVzdCwgbWVu
dGlvbnMgTHdhbiBhcyBhbiAqaW5zYW5lIEMgdGhpbmcqLgoqIFtVbml2ZXJz
aXR5IHNlbWluYXIgcHJlc2VudGF0aW9uXShodHRwczovL2dpdGh1Yi5jb20v
Y3UtZGF0YS1lbmdpbmVlcmluZy1zMTUvc3lsbGFidXMvYmxvYi9tYXN0ZXIv
c3R1ZGVudF9sZWN0dXJlcy9MV0FOLnBkZikgYWJvdXQgTHdhbi4KKiBUaGlz
IFtwcmVzZW50YXRpb24gYWJvdXQgU2FpbG9yIHdlYiBmcmFtZXdvcmtdKGh0
dHA6Ly93d3cuc2xpZGVzaGFyZS5uZXQvRXRpZW5lRGFsY29sL3dlYi1kZXZl
bG9wbWVudC13aXRoLWx1YS1idWxnYXJpYS13ZWItc3VtbWl0KSBtZW50aW9u
cyBMd2FuLgoqIFtQZXJmb3JtYW5jZSBhbmQgU2NhbGUgQCBJc3RpbyBTZXJ2
aWNlIE1lc2hdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9RzRG
NWFSRkVYblUpLCBhdCBhcm91bmQgNzozMG1pbiwgcHJlc2VudGVkIGF0IEt1
YmVDb24gRXVyb3BlIDIwMTgsIG1lbnRpb25zIHRoYXQgTHdhbiBpcyB1c2Vk
IG9uIHRoZSBzZXJ2ZXIgc2lkZSBmb3IgdGVzdGluZyBkdWUgdG8gaXRzIHBl
cmZvcm1hbmNlIGFuZCByb2J1c3RuZXNzLgoqIFtBIG11bHRpLWNvcmUgUHl0
aG9uIEhUVFAgc2VydmVyIChtdWNoKSBmYXN0ZXIgdGhhbiBHbyAoc3BvaWxl
cjogQ3l0aG9uKV0oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1t
WjljWE9INk5ZaykgcHJlc2VudGVkIGF0IFB5Q29uRlIgMjAxOCBieSBKLi1Q
LiBTbWV0cyBtZW50aW9ucyBbTmV4ZWRpJ3Mgd29ya10oaHR0cHM6Ly93d3cu
bmV4ZWRpLmNvbS9OWEQtQmxvZy5NdWx0aWNvcmUuUHl0aG9uLkhUVFAuU2Vy
dmVyKSBvbiB1c2luZyBMd2FuIGFzIGEgYmFja2VuZCBmb3IgUHl0aG9uIHNl
cnZpY2VzIHdpdGggQ3l0aG9uLgoKTm90IHJlYWxseSB0aGlyZC1wYXJ0eSwg
YnV0IGFsYXM6CgoqIFRoZSBbYXV0aG9yJ3MgYmxvZ10oaHR0cDovL3RpYS5t
YXQuYnIpLgoqIFRoZSBbcHJvamVjdCdzIHdlYnBhZ2VdKGh0dHA6Ly9sd2Fu
LndzKS4KCkx3YW4gcXVvdGVzCi0tLS0tLS0tLS0tCgpUaGVzZSBhcmUgc29t
ZSBvZiB0aGUgcXVvdGVzIGZvdW5kIGluIHRoZSB3aWxkIGFib3V0IEx3YW4u
ICBUaGV5J3JlIHByZXNlbnRlZAppbiBubyBwYXJ0aWN1bGFyIG9yZGVyLiAg
Q29udHJpYnV0aW9ucyBhcmUgYXBwcmVjaWF0ZWQ6Cgo+ICJJIHJlYWQgbHdh
bidzIHNvdXJjZSBjb2RlLiBFc3BlY2lhbGx5LCB0aGUgcGFydCBvZiB1c2lu
ZyBjb3JvdXRpbmUgd2FzCj4gdmVyeSBpbXByZXNzaXZlIGFuZCBpdCB3YXMg
bW9yZSBpbnRlcmVzdGluZyB0aGFuIGEgZ29vZCBub3ZlbC4gIFRoYW5rIHlv
dQo+IGZvciB0aGF0LiIgLS0KPiBbQHBhdGFnb25pYV0oaHR0cHM6Ly90d2l0
dGVyLmNvbS9oYWttYW4zMTQvc3RhdHVzLzk5NjYxNzU2MzQ3MDY4MDA2NCkK
Cj4gIkZvciB0aGUgc2VydmVyIHNpZGUsIHdlJ3JlIHVzaW5nIEx3YW4sIHdo
aWNoIGNhbiBoYW5kbGUgMTAwaysgcmVxcy9zLgo+IEl0J3Mgc3VwcG9zZWQg
dG8gYmUgc3VwZXIgcm9idXN0IGFuZCBpdCdzIHdvcmtpbmcgd2VsbCBmb3Ig
dXMuIiAtLQo+IFtAZmF3YWRraGFsaXFdKGh0dHBzOi8vdHdpdHRlci5jb20v
ZmF3YWRraGFsaXEpCgo+ICJJbnNhbmUgQyB0aGluZyIgLS0gW01pY2hhZWwK
PiBTcHJvdWxdKGh0dHBzOi8vbWljaGFlbHNwcm91bC5naXRodWIuaW8vaXJv
bi10YWxrLykKCj4gIkkndmUgbmV2ZXIgaGFkIGEgY2hhbmNlIHRvIHRoYW5r
IHlvdSBmb3IgTHdhbi4gIEl0IGluc3BpcmVkIG1lIGEgbG90IHRvCj4gZGV2
ZWxvcCBbWmV3b10oaHR0cHM6Ly9naXRodWIuY29tL1pld28vWmVybykiIC0t
Cj4gW0BwYXVsb2ZhcmlhcmxdKGh0dHBzOi8vdHdpdHRlci5jb20vcGF1bG9m
YXJpYXJsL3N0YXR1cy83MDc5MjY4MDYzNzMwMDMyNjUpCgo+ICJMZXQgbWUg
c2F5IHRoYXQgbHdhbiBpcyBhIHRoaW5nIG9mIGJlYXV0eS4gIEkgZ290IHN1
Y2tlZCBpbnRvIHJlYWRpbmcgdGhlCj4gc291cmNlIGNvZGUgZm9yIHB1cmUg
ZW50ZXJ0YWlubWVudCwgaXQncyBzbyBnb29kLiAgKmhpZ2ggZml2ZSoiIC0t
Cj4gW0Brd2lsY3p5bnNraV0oaHR0cHM6Ly90d2l0dGVyLmNvbS9rd2lsY3p5
bnNraS9zdGF0dXMvNjkyODgxMTE3MDAzNjQ0OTI5KQoKPiAiTmljZSB3b3Jr
IHdpdGggTHdhbiEgSSBoYXZlbid0IGxvb2tlZCBfdGhhdF8gY2FyZWZ1bGx5
IHlldCBidXQgc28gZmFyIEkKPiBsaWtlIHdoYXQgSSBzYXcuICBZb3UgZGVm
aW5pdGVseSBoYXZlIHRoZSByaWdodCBpZGVhcy4iIC0tCj4gW0B0aGlua2lu
Z2Zpc2hdKGh0dHBzOi8vdHdpdHRlci5jb20vdGhpbmtpbmdmaXNoL3N0YXR1
cy81MjE1NzQyNjc2MTIxOTY4NjQpCgo+ICJMd2FuIGlzIGEgd29yayBvZiBh
cnQuIEV2ZXJ5IHRpbWUgSSByZWFkIHRocm91Z2ggaXQsIEkgYW0gYWxtb3N0
IGFsd2F5cwo+IGF3ZS1zdHJ1Y2suIiAtLQo+IFtAbmV1cm9kcm9uZV0oaHR0
cHM6Ly90d2l0dGVyLmNvbS9uZXVyb2Ryb25lL3N0YXR1cy8zNTkyOTYwODAy
ODM4NDA1MTMpCgo+ICJGb3IgUm91bmQgMTAsIEx3YW4gaGFzIHRha2VuIHRo
ZSBjcm93biIgLS0KPiBbVGVjaEVtcG93ZXJdKGh0dHBzOi8vd3d3LnRlY2hl
bXBvd2VyLmNvbS9ibG9nLzIwMTUvMDQvMjEvZnJhbWV3b3JrLWJlbmNobWFy
a3Mtcm91bmQtMTAvKQoKPiAiSmVleiB0aGlzIGlzIGFtYXppbmcuIEp1c3Qg
ZW5kIHRvIGVuZCwgcm9jayBzb2xpZCBlbmdpbmVlcmluZy4gKC4uLikgQnV0
IHRoYXQgc2VsbHMgdGhpcyB3b3JrIHNob3J0LiIKPiBba2plZXRnaWxsXSho
dHRwczovL25ld3MueWNvbWJpbmF0b3IuY29tL2l0ZW0/aWQ9MTc1NDg5ODMp
Cgo+ICJJIGFtIG9ubHkgYSBzcGFyZSB0aW1lIEMgY29kZXIgbXlzZWxmIGFu
ZCB3YXMgc3VycHJpc2VkIHRoYXQgSSBjYW4gZm9sbG93IHRoZSBjb2RlLiBO
aWNlISIKPiBbY250bHp3XShodHRwczovL25ld3MueWNvbWJpbmF0b3IuY29t
L2l0ZW0/aWQ9MTc1NTAzMTkpCgo+ICJJbXByZXNzaXZlIGFsbCBhbmQgYWxs
LCBldmVuIG1vcmUgZm9yIGJlaW5nIHdyaXR0ZW4gaW4gKGdyb2trYWJsZSEp
IEMuIE5pY2Ugd29yay4iCj4gW3RwYXNjaGFsaXNdKGh0dHBzOi8vbmV3cy55
Y29tYmluYXRvci5jb20vaXRlbT9pZD0xNzU1MDk2MSkK
",,5083,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'nanohttpd',5374914,"b'Tiny, easily embeddable HTTP server in Java.'",b'Java',141,5083,,346,False,b'https://api.github.com/repos/NanoHttpd/nanohttpd/forks',"IyMgTmFub0hUVFBEIOKAkyBhIHRpbnkgd2ViIHNlcnZlciBpbiBKYXZhCgoq
TmFub0hUVFBEKiBpcyBhIGxpZ2h0LXdlaWdodCBIVFRQIHNlcnZlciBkZXNp
Z25lZCBmb3IgZW1iZWRkaW5nIGluIG90aGVyIGFwcGxpY2F0aW9ucywgcmVs
ZWFzZWQgdW5kZXIgYSBNb2RpZmllZCBCU0QgbGljZW5jZS4KCkl0IGlzIGJl
aW5nIGRldmVsb3BlZCBhdCBHaXRodWIgYW5kIHVzZXMgQXBhY2hlIE1hdmVu
IGZvciBidWlsZHMgJiB1bml0IHRlc3Rpbmc6CgogKiBCdWlsZCBzdGF0dXM6
IFshW0J1aWxkIFN0YXR1c10oaHR0cHM6Ly9hcGkudHJhdmlzLWNpLm9yZy9O
YW5vSHR0cGQvbmFub2h0dHBkLnBuZyldKGh0dHBzOi8vdHJhdmlzLWNpLm9y
Zy9OYW5vSHR0cGQvbmFub2h0dHBkKQogKiBDb3ZlcmFnZSBTdGF0dXM6IFsh
W0NvdmVyYWdlIFN0YXR1c10oaHR0cHM6Ly9jb3ZlcmFsbHMuaW8vcmVwb3Mv
TmFub0h0dHBkL25hbm9odHRwZC9iYWRnZS5zdmcpXShodHRwczovL2NvdmVy
YWxscy5pby9yL05hbm9IdHRwZC9uYW5vaHR0cGQpCiAqIEN1cnJlbnQgY2Vu
dHJhbCByZWxlYXNlZCB2ZXJzaW9uOiBbIVtNYXZlbiBDZW50cmFsXShodHRw
czovL21hdmVuLWJhZGdlcy5oZXJva3VhcHAuY29tL21hdmVuLWNlbnRyYWwv
b3JnLm5hbm9odHRwZC9uYW5vaHR0cGQvYmFkZ2Uuc3ZnKV0oaHR0cHM6Ly9t
YXZlbi1iYWRnZXMuaGVyb2t1YXBwLmNvbS9tYXZlbi1jZW50cmFsL29yZy5u
YW5vaHR0cGQvbmFub2h0dHBkKQoKIyMgUXVpY2tzdGFydAoKV2UnbGwgY3Jl
YXRlIGEgY3VzdG9tIEhUVFAgc2VydmVyIHByb2plY3QgdXNpbmcgTWF2ZW4g
Zm9yIGJ1aWxkL2RlcCBzeXN0ZW0uIFRoaXMgdHV0b3JpYWwgYXNzdW1lcyB5
b3UgYXJlIHVzaW5nIGEgVW5peCB2YXJpYW50IGFuZCBhIHNoZWxsLiBGaXJz
dCwgaW5zdGFsbCBNYXZlbiBhbmQgSmF2YSBTREsgaWYgbm90IGFscmVhZHkg
aW5zdGFsbGVkLiBUaGVuIHJ1bjoKCiAgICBtdm4gY29tcGlsZQogICAgbXZu
IGV4ZWM6amF2YSAtcGwgd2Vic2VydmVyIC1EZXhlYy5tYWluQ2xhc3M9Im9y
Zy5uYW5vaHR0cGQud2Vic2VydmVyLlNpbXBsZVdlYlNlcnZlciIKICAgIApZ
b3Ugc2hvdWxkIG5vdyBoYXZlIGEgSFRUUCBmaWxlIHNlcnZlciBydW5uaW5n
IG9uIDxodHRwOi8vbG9jYWxob3N0OjgwODAvPi4KCiMjIyBDdXN0b20gd2Vi
IGFwcAoKTGV0J3MgcmFpc2UgdGhlIGJhciBhbmQgYnVpbGQgYSBjdXN0b20g
d2ViIGFwcGxpY2F0aW9uIG5leHQ6CgogICAgbXZuIGFyY2hldHlwZTpnZW5l
cmF0ZSAtRGdyb3VwSWQ9Y29tLmV4YW1wbGUgLURhcnRpZmFjdElkPW15SGVs
bG9wQXBwIC1EaW50ZXJhY3RpdmVNb2RlPWZhbHNlCiAgICBjZCBteUhlbGxv
cEFwcAogICAgCkVkaXQgYHBvbS54bWxgLCBhbmQgYWRkIHRoaXMgYmV0d2Vl
biBcPGRlcGVuZGVuY2llc1w+OgogCgk8ZGVwZW5kZW5jeT4KCQk8Z3JvdXBJ
ZD5vcmcubmFub2h0dHBkPC9ncm91cElkPiA8IS0tIDxncm91cElkPmNvbS5u
YW5vaHR0cGQ8L2dyb3VwSWQ+IGZvciAyLjEuMCBhbmQgZWFybGllciAtLT4K
CQk8YXJ0aWZhY3RJZD5uYW5vaHR0cGQ8L2FydGlmYWN0SWQ+CgkJPHZlcnNp
b24+Mi4yLjA8L3ZlcnNpb24+Cgk8L2RlcGVuZGVuY3k+CgkKRWRpdCBgc3Jj
L21haW4vamF2YS9jb20vZXhhbXBsZS9BcHAuamF2YWAgYW5kIHJlcGxhY2Ug
aXQgd2l0aDoKYGBgamF2YQogICAgcGFja2FnZSBjb20uZXhhbXBsZTsKICAg
IAogICAgaW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247CiAgICBpbXBvcnQg
amF2YS51dGlsLk1hcDsKICAgIAogICAgaW1wb3J0IGZpLmlraS5lbG9uZW4u
TmFub0hUVFBEOwogICAgLy8gTk9URTogSWYgeW91J3JlIHVzaW5nIE5hbm9I
VFRQRCA+PSAzLjAuMCB0aGUgbmFtZXNwYWNlIGlzIGRpZmZlcmVudCwKICAg
IC8vICAgICAgIGluc3RlYWQgb2YgdGhlIGFib3ZlIGltcG9ydCB1c2UgdGhl
IGZvbGxvd2luZzoKCS8vIGltcG9ydCBvcmcubmFub2h0dHBkLk5hbm9IVFRQ
RDsKICAgIAogICAgcHVibGljIGNsYXNzIEFwcCBleHRlbmRzIE5hbm9IVFRQ
RCB7CiAgICAKICAgICAgICBwdWJsaWMgQXBwKCkgdGhyb3dzIElPRXhjZXB0
aW9uIHsKICAgICAgICAgICAgc3VwZXIoODA4MCk7CiAgICAgICAgICAgIHN0
YXJ0KE5hbm9IVFRQRC5TT0NLRVRfUkVBRF9USU1FT1VULCBmYWxzZSk7CiAg
ICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbigiXG5SdW5uaW5nISBQb2lu
dCB5b3VyIGJyb3dzZXJzIHRvIGh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC8gXG4i
KTsKICAgICAgICB9CiAgICAKICAgICAgICBwdWJsaWMgc3RhdGljIHZvaWQg
bWFpbihTdHJpbmdbXSBhcmdzKSB7CiAgICAgICAgICAgIHRyeSB7CiAgICAg
ICAgICAgICAgICBuZXcgQXBwKCk7CiAgICAgICAgICAgIH0gY2F0Y2ggKElP
RXhjZXB0aW9uIGlvZSkgewogICAgICAgICAgICAgICAgU3lzdGVtLmVyci5w
cmludGxuKCJDb3VsZG4ndCBzdGFydCBzZXJ2ZXI6XG4iICsgaW9lKTsKICAg
ICAgICAgICAgfQogICAgICAgIH0KICAgIAogICAgICAgIEBPdmVycmlkZQog
ICAgICAgIHB1YmxpYyBSZXNwb25zZSBzZXJ2ZShJSFRUUFNlc3Npb24gc2Vz
c2lvbikgewogICAgICAgICAgICBTdHJpbmcgbXNnID0gIjxodG1sPjxib2R5
PjxoMT5IZWxsbyBzZXJ2ZXI8L2gxPlxuIjsKICAgICAgICAgICAgTWFwPFN0
cmluZywgU3RyaW5nPiBwYXJtcyA9IHNlc3Npb24uZ2V0UGFybXMoKTsKICAg
ICAgICAgICAgaWYgKHBhcm1zLmdldCgidXNlcm5hbWUiKSA9PSBudWxsKSB7
CiAgICAgICAgICAgICAgICBtc2cgKz0gIjxmb3JtIGFjdGlvbj0nPycgbWV0
aG9kPSdnZXQnPlxuICA8cD5Zb3VyIG5hbWU6IDxpbnB1dCB0eXBlPSd0ZXh0
JyBuYW1lPSd1c2VybmFtZSc+PC9wPlxuIiArICI8L2Zvcm0+XG4iOwogICAg
ICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgbXNnICs9ICI8cD5I
ZWxsbywgIiArIHBhcm1zLmdldCgidXNlcm5hbWUiKSArICIhPC9wPiI7CiAg
ICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIG5ld0ZpeGVkTGVuZ3Ro
UmVzcG9uc2UobXNnICsgIjwvYm9keT48L2h0bWw+XG4iKTsKICAgICAgICB9
CiAgICB9CmBgYAoKQ29tcGlsZSBhbmQgcnVuIHRoZSBzZXJ2ZXI6CiAKICAg
IG12biBjb21waWxlCiAgICBtdm4gZXhlYzpqYXZhIC1EZXhlYy5tYWluQ2xh
c3M9ImNvbS5leGFtcGxlLkFwcCIKICAgIApJZiBpdCBzdGFydGVkIG9rLCBw
b2ludCB5b3VyIGJyb3dzZXIgYXQgPGh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC8+
IGFuZCBlbmpveSBhIHdlYiBzZXJ2ZXIgdGhhdCBhc2tzIHlvdXIgbmFtZSBh
bmQgcmVwbGllcyB3aXRoIGEgZ3JlZXRpbmcuIAoKIyMjIE5hbm9sZXRzCgpO
YW5vbGV0cyBhcmUgbGlrZSBzZXJ2bGV0cyBvbmx5IHRoYXQgdGhleSBoYXZl
IGEgZXh0cmVtZWx5IGxvdyBwcm9maWxlLiBUaGV5IG9mZmVyIGFuIGVhc3kg
dG8gdXNlIHN5c3RlbSBmb3IgYSBtb3JlIGNvbXBsZXggc2VydmVyIGFwcGxp
Y2F0aW9uLgpUaGlzIHRleHQgaGFzIHRvIGJlIGV4dGVuZGVkIHdpdGggYW4g
ZXhhbXBsZSwgc28gZm9yIG5vdyB0YWtlIGEgbG9vayBhdCB0aGUgdW5pdCB0
ZXN0cyBmb3IgdGhlIHVzYWdlLiA8aHR0cHM6Ly9naXRodWIuY29tL05hbm9I
dHRwZC9uYW5vaHR0cGQvYmxvYi9tYXN0ZXIvbmFub2xldHMvc3JjL3Rlc3Qv
amF2YS9vcmcvbmFub2h0dHBkL2p1bml0L3JvdXRlci9BcHBOYW5vbGV0cy5q
YXZhPgoKIyMgU3RhdHVzCgpXZSBhcmUgY3VycmVudGx5IGluIHRoZSBwcm9j
ZXNzIG9mIHN0YWJpbGl6aW5nIE5hbm9IVFRQRCBmcm9tIHRoZSBtYW55IHB1
bGwgcmVxdWVzdHMgYW5kIGZlYXR1cmUgcmVxdWVzdHMgdGhhdCB3ZXJlIGlu
dGVncmF0ZWQgb3ZlciB0aGUgbGFzdCBmZXcgbW9udGhzLiBUaGUgbmV4dCBy
ZWxlYXNlIHdpbGwgY29tZSBzb29uLCBhbmQgdGhlcmUgd2lsbCBub3QgYmUg
YW55IG1vcmUgImludGVuZGVkIiBtYWpvciBjaGFuZ2VzIGJlZm9yZSB0aGUg
bmV4dCByZWxlYXNlLiBJZiB5b3Ugd2FudCB0byB1c2UgdGhlIGJsZWVkaW5n
IGVkZ2UgdmVyc2lvbiwgeW91IGNhbiBjbG9uZSBpdCBmcm9tIEdpdGh1Yiwg
b3IgZ2V0IGl0IGZyb20gc29uYXR5cGUub3JnIChzZWUgIk1hdmVuIGRlcGVu
ZGVuY2llcyAvIExpdmluZyBvbiB0aGUgZWRnZSIgYmVsb3cpLgoKIyMgUHJv
amVjdCBzdHJ1Y3R1cmUKCk5hbm9IVFRQRCBwcm9qZWN0IGN1cnJlbnRseSBj
b25zaXN0IG9mIGZvdXIgcGFydHM6CgogKiBgL2NvcmVgIOKAkyBGdWxseSBm
dW5jdGlvbmFsIEhUVFAocykgc2VydmVyIGNvbnNpc3Rpbmcgb2Ygb25lICgx
KSBKYXZhIGZpbGUsIHJlYWR5IHRvIGJlIGN1c3RvbWl6ZWQvaW5oZXJpdGVk
IGZvciB5b3VyIG93biBwcm9qZWN0LgoKICogYC9zYW1wbGVzYCDigJMgU2lt
cGxlIGV4YW1wbGVzIG9uIGhvdyB0byBjdXN0b21pemUgTmFub0hUVFBELiBT
ZWUgKkhlbGxvU2VydmVyLmphdmEqIGZvciBhIGtpbGxlciBhcHAgdGhhdCBn
cmVldHMgeW91IGVudGh1c2lhc3RpY2FsbHkhCgogKiBgL3dlYnNvY2tldGAg
4oCTIFdlYnNvY2tldCBpbXBsZW1lbnRhdGlvbiwgYWxzbyBpbiBhIHNpbmds
ZSBKYXZhIGZpbGUuIERlcGVuZHMgb24gY29yZS4KCiAqIGAvd2Vic2VydmVy
YCDigJMgU3RhbmRhbG9uZSBmaWxlIHNlcnZlci4gUnVuICYgZW5qb3kuIEEg
cG9wdWxhciB1c2Ugc2VlbXMgdG8gYmUgc2VydmluZyBmaWxlcyBvdXQgb2Zm
IGFuIEFuZHJvaWQgZGV2aWNlLgoKICogYC9uYW5vbGV0c2Ag4oCTIFN0YW5k
YWxvbmUgbmFubyBhcHAgc2VydmVyLCBnaXZpbmcgYSBzZXJ2bGV0IGxpa2Ug
c3lzdGVtIHRvIHRoZSBpbXBsZW1lbnRvci4KCiAqIGAvZmlsZXVwbG9hZGAg
4oCTIGludGVncmF0aW9uIG9mIHRoZSBhcGFjaGUgY29tbW9uIGZpbGUgdXBs
b2FkIGxpYnJhcnkuCgojIyBGZWF0dXJlcwojIyMgQ29yZQoqIE9ubHkgb25l
IEphdmEgZmlsZSwgcHJvdmlkaW5nIEhUVFAgMS4xIHN1cHBvcnQuCiogTm8g
Zml4ZWQgY29uZmlnIGZpbGVzLCBsb2dnaW5nLCBhdXRob3JpemF0aW9uIGV0
Yy4gKEltcGxlbWVudCBieSB5b3Vyc2VsZiBpZiB5b3UgbmVlZCB0aGVtLiBF
cnJvcnMgYXJlIHBhc3NlZCB0byBqYXZhLnV0aWwubG9nZ2luZywgdGhvdWdo
LikKKiBTdXBwb3J0IGZvciBIVFRQUyAoU1NMKS4KKiBCYXNpYyBzdXBwb3J0
IGZvciBjb29raWVzLgoqIFN1cHBvcnRzIHBhcmFtZXRlciBwYXJzaW5nIG9m
IEdFVCBhbmQgUE9TVCBtZXRob2RzLgoqIFNvbWUgYnVpbHQtaW4gc3VwcG9y
dCBmb3IgSEVBRCwgUE9TVCBhbmQgREVMRVRFIHJlcXVlc3RzLiBZb3UgY2Fu
IGVhc2lseSBpbXBsZW1lbnQvY3VzdG9taXplIGFueSBIVFRQIG1ldGhvZCwg
dGhvdWdoLgoqIFN1cHBvcnRzIGZpbGUgdXBsb2FkLiBVc2VzIG1lbW9yeSBm
b3Igc21hbGwgdXBsb2FkcywgdGVtcCBmaWxlcyBmb3IgbGFyZ2Ugb25lcy4K
KiBOZXZlciBjYWNoZXMgYW55dGhpbmcuCiogRG9lcyBub3QgbGltaXQgYmFu
ZHdpZHRoLCByZXF1ZXN0IHRpbWUgb3Igc2ltdWx0YW5lb3VzIGNvbm5lY3Rp
b25zIGJ5IGRlZmF1bHQuCiogQWxsIGhlYWRlciBuYW1lcyBhcmUgY29udmVy
dGVkIHRvIGxvd2VyIGNhc2Ugc28gdGhleSBkb24ndCB2YXJ5IGJldHdlZW4g
YnJvd3NlcnMvY2xpZW50cy4KKiBQZXJzaXN0ZW50IGNvbm5lY3Rpb25zIChD
b25uZWN0aW9uICJrZWVwLWFsaXZlIikgc3VwcG9ydCBhbGxvd2luZyBtdWx0
aXBsZSByZXF1ZXN0cyB0byBiZSBzZXJ2ZWQgb3ZlciBhIHNpbmdsZSBzb2Nr
ZXQgY29ubmVjdGlvbi4KCiMjIyBXZWJzb2NrZXQKKiBUZXN0ZWQgb24gRmly
ZWZveCwgQ2hyb21lIGFuZCBJRS4KCiMjIyBXZWJzZXJ2ZXIKKiBEZWZhdWx0
IGNvZGUgc2VydmVzIGZpbGVzIGFuZCBzaG93cyAocHJpbnRzIG9uIGNvbnNv
bGUpIGFsbCBIVFRQIHBhcmFtZXRlcnMgYW5kIGhlYWRlcnMuCiogU3VwcG9y
dHMgYm90aCBkeW5hbWljIGNvbnRlbnQgYW5kIGZpbGUgc2VydmluZy4KKiBG
aWxlIHNlcnZlciBzdXBwb3J0cyBkaXJlY3RvcnkgbGlzdGluZywgYGluZGV4
Lmh0bWxgIGFuZCBgaW5kZXguaHRtYC4KKiBGaWxlIHNlcnZlciBzdXBwb3J0
cyBwYXJ0aWFsIGNvbnRlbnQgKHN0cmVhbWluZyAmIGNvbnRpbnVlIGRvd25s
b2FkKS4KKiBGaWxlIHNlcnZlciBzdXBwb3J0cyBFVGFncy4KKiBGaWxlIHNl
cnZlciBkb2VzIHRoZSAzMDEgcmVkaXJlY3Rpb24gdHJpY2sgZm9yIGRpcmVj
dG9yaWVzIHdpdGhvdXQgYC9gLgoqIEZpbGUgc2VydmVyIHNlcnZlcyBhbHNv
IHZlcnkgbG9uZyBmaWxlcyB3aXRob3V0IG1lbW9yeSBvdmVyaGVhZC4KKiBD
b250YWlucyBhIGJ1aWx0LWluIGxpc3Qgb2YgbW9zdCBjb21tb24gTUlNRSB0
eXBlcy4KKiBSdW50aW1lIGV4dGVuc2lvbiBzdXBwb3J0IChleHRlbnNpb25z
IHRoYXQgc2VydmUgcGFydGljdWxhciBNSU1FIHR5cGVzKSAtIGV4YW1wbGUg
ZXh0ZW5zaW9uIHRoYXQgc2VydmVzIE1hcmtkb3duIGZvcm1hdHRlZCBmaWxl
cy4gU2ltcGx5IGluY2x1ZGluZyBhbiBleHRlbnNpb24gSkFSIGluIHRoZSB3
ZWJzZXJ2ZXIgY2xhc3NwYXRoIGlzIGVub3VnaCBmb3IgdGhlIGV4dGVuc2lv
biB0byBiZSBsb2FkZWQuCiogU2ltcGxlIFtDT1JTXShodHRwczovL2VuLndp
a2lwZWRpYS5vcmcvd2lraS9Dcm9zcy1vcmlnaW5fcmVzb3VyY2Vfc2hhcmlu
Zykgc3VwcG9ydCB2aWEgYC0tY29yc2AgcGFyYW1ldGVyCiAgKiBieSBkZWZh
dWx0IHNlcnZlcyBgQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVyczogb3Jp
Z2luLGFjY2VwdCxjb250ZW50LXR5cGVgCiAgKiBwb3NzaWJpbGl0eSB0byBz
ZXQgYEFjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnNgIGJ5IHNldHRpbmcg
U3lzdGVtIHByb3BlcnR5OiBgQWNjZXNzQ29udHJvbEFsbG93SGVhZGVyYAog
ICogX2V4YW1wbGU6IF8gYC1EQWNjZXNzQ29udHJvbEFsbG93SGVhZGVyPW9y
aWdpbixhY2NlcHQsY29udGVudC10eXBlLEF1dGhvcml6YXRpb25gCiAgKiBw
b3NzaWJsZSB2YWx1ZXM6CiAgICAgICogYC0tY29yc2A6IGFjdGl2YXRlcyBD
T1JTIHN1cHBvcnQsIGBBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW5gIHdp
bGwgYmUgc2V0IHRvIGAqYC4KICAgICAgKiBgLS1jb3JzPXNvbWVfdmFsdWVg
OiBgQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luYCB3aWxsIGJlIHNldCB0
byBgc29tZV92YWx1ZWAuIAoKKipfQ09SUyBhcmd1bWVudCBleGFtcGxlc18q
KgoKCiogYC0tY29ycz1odHRwOi8vYXBwT25lLmNvbXBhbnkuY29tYAoqIGAt
LWNvcnM9Imh0dHA6Ly9hcHBPbmUuY29tcGFueS5jb20sIGh0dHA6Ly9hcHBU
d28uY29tcGFueS5jb20iYDogbm90ZSB0aGUgZG91YmxlIHF1b3RlcyBzbyB0
aGF0IHRoZSB0d28gVVJMcyBhcmUgY29uc2lkZXJlZCBwYXJ0IG9mIGEgc2lu
Z2xlIGFyZ3VtZW50LgoKIyMgTWF2ZW4gZGVwZW5kZW5jaWVzCgpOYW5vSFRU
UEQgaXMgYSBNYXZlbiBiYXNlZCBwcm9qZWN0IGFuZCBkZXBsb3llZCB0byBj
ZW50cmFsLiBNb3N0IGRldmVsb3BtZW50IGVudmlyb25tZW50cyBoYXZlIG1l
YW5zIHRvIGFjY2VzcyB0aGUgY2VudHJhbCByZXBvc2l0b3J5LiBUaGUgY29v
cmRpbmF0ZXMgdG8gdXNlIGluIE1hdmVuIGFyZTogCgoJPGRlcGVuZGVuY2ll
cz4KCQk8ZGVwZW5kZW5jeT4KCQkJPGdyb3VwSWQ+b3JnLm5hbm9odHRwZDwv
Z3JvdXBJZD4gPCEtLSA8Z3JvdXBJZD5jb20ubmFub2h0dHBkPC9ncm91cElk
PiBmb3IgMi4xLjAgYW5kIGVhcmxpZXIgLS0+CgkJCTxhcnRpZmFjdElkPm5h
bm9odHRwZDwvYXJ0aWZhY3RJZD4KCQkJPHZlcnNpb24+Q1VSUkVOVF9WRVJT
SU9OPC92ZXJzaW9uPgoJCTwvZGVwZW5kZW5jeT4KCTwvZGVwZW5kZW5jaWVz
PgoKKFJlcGxhY2UgYENVUlJFTlRfVkVSU0lPTmAgd2l0aCB3aGF0ZXZlciBp
cyByZXBvcnRlZCBsYXRlc3QgYXQgPGh0dHA6Ly9uYW5vaHR0cGQub3JnLz4u
KQoKVGhlIGNvb3JkaW5hdGVzIGZvciB5b3VyIGRldmVsb3BtZW50IGVudmly
b25tZW50IHNob3VsZCBjb3JyZXNwb25kIHRvIHRoZXNlLiBXaGVuIGxvb2tp
bmcgZm9yIGFuIG9sZGVyIHZlcnNpb24gdGFrZSBjYXJlIGJlY2F1c2Ugd2Ug
c3dpdGNoZWQgZ3JvdXBJZCBmcm9tICpjb20ubmFub2h0dHBkKiB0byAqb3Jn
Lm5hbm9odHRwZCogaW4gbWlkIDIwMTUuCgpOZXh0IGl0IGRlcGVuZHMgd2hh
dCB5b3UgYXJlIHVzaW5nIE5hbm9IVFRQRCBmb3IsIHRoZXJlIGFyZSB0aHJl
ZSBtYWluIHVzYWdlcy4KCiMjIEdyYWRsZSBkZXBlbmRlbmNpZXMKCkluIGdy
YWRsZSB5b3UgY2FuIHVzZSBOYW5vSFRUUEQgdGhlIHNhbWUgd2F5IGJlY2F1
c2UgZ3JhZGxlIGFjY2Vzc2VzIHRoZSBzYW1lIGNlbnRyYWwgcmVwb3NpdG9y
eToKCglkZXBlbmRlbmNpZXMgewoJCXJ1bnRpbWUoCgkJCVtncm91cDogJ29y
Zy5uYW5vaHR0cGQnLCBuYW1lOiAnbmFub2h0dHBkJywgdmVyc2lvbjogJ0NV
UlJFTlRfVkVSU0lPTiddLAoJCSkKCX0KCihSZXBsYWNlIGBDVVJSRU5UX1ZF
UlNJT05gIHdpdGggd2hhdGV2ZXIgaXMgcmVwb3J0ZWQgbGF0ZXN0IGF0IDxo
dHRwOi8vbmFub2h0dHBkLm9yZy8+LikKCkp1c3QgcmVwbGFjZSB0aGUgbmFt
ZSB3aXRoIHRoZSBhcnRpZmFjdCBpZCBvZiB0aGUgbW9kdWxlIHlvdSB3YW50
IHRvIHVzZSBhbmQgZ3JhZGxlIHdpbGwgZmluZCBpdCBmb3IgeW91LiAKCiMj
IyBEZXZlbG9wIHlvdXIgb3duIHNwZWNpYWxpemVkIEhUVFAgc2VydmljZQoK
Rm9yIGEgc3BlY2lhbGl6ZWQgSFRUUCAoSFRUUFMpIHNlcnZpY2UgeW91IGNh
biB1c2UgdGhlIG1vZHVsZSB3aXRoIGFydGlmYWN0SWQgKm5hbm9odHRwZCou
CgoJCTxkZXBlbmRlbmN5PgoJCQk8Z3JvdXBJZD5vcmcubmFub2h0dHBkPC9n
cm91cElkPiA8IS0tIDxncm91cElkPmNvbS5uYW5vaHR0cGQ8L2dyb3VwSWQ+
IGZvciAyLjEuMCBhbmQgZWFybGllciAtLT4KCQkJPGFydGlmYWN0SWQ+bmFu
b2h0dHBkPC9hcnRpZmFjdElkPgoJCQk8dmVyc2lvbj5DVVJSRU5UX1ZFUlNJ
T048L3ZlcnNpb24+CgkJPC9kZXBlbmRlbmN5PgoJCQpIZXJlIHlvdSB3cml0
ZSB5b3VyIG93biBzdWJjbGFzcyBvZiAqb3JnLm5hbm9odHRwZC5OYW5vSFRU
UEQqIHRvIGNvbmZpZ3VyZSBhbmQgdG8gc2VydmUgdGhlIHJlcXVlc3RzLgog
IAojIyMgRGV2ZWxvcCBhIHdlYnNvY2tldCBiYXNlZCBzZXJ2aWNlICAgIAoK
Rm9yIGEgc3BlY2lhbGl6ZWQgd2Vic29ja2V0IHNlcnZpY2UgeW91IGNhbiB1
c2UgdGhlIG1vZHVsZSB3aXRoIGFydGlmYWN0SWQgKm5hbm9odHRwZC13ZWJz
b2NrZXQqLgoKCQk8ZGVwZW5kZW5jeT4KCQkJPGdyb3VwSWQ+b3JnLm5hbm9o
dHRwZDwvZ3JvdXBJZD4gPCEtLSA8Z3JvdXBJZD5jb20ubmFub2h0dHBkPC9n
cm91cElkPiBmb3IgMi4xLjAgYW5kIGVhcmxpZXIgLS0+CgkJCTxhcnRpZmFj
dElkPm5hbm9odHRwZC13ZWJzb2NrZXQ8L2FydGlmYWN0SWQ+CgkJCTx2ZXJz
aW9uPkNVUlJFTlRfVkVSU0lPTjwvdmVyc2lvbj4KCQk8L2RlcGVuZGVuY3k+
CgpIZXJlIHlvdSB3cml0ZSB5b3VyIG93biBzdWJjbGFzcyBvZiAqb3JnLm5h
bm9odHRwZC5OYW5vV2ViU29ja2V0U2VydmVyKiB0byBjb25maWd1cmUgYW5k
IHRvIHNlcnZlIHRoZSB3ZWJzb2NrZXQgcmVxdWVzdHMuIEEgc21hbGwgc3Rh
bmRhcmQgZWNobyBleGFtcGxlIGlzIGluY2x1ZGVkIGFzICpvcmcubmFub2h0
dHBkLnNhbXBsZXMuZWNoby5EZWJ1Z1dlYlNvY2tldFNlcnZlciouIFlvdSBj
YW4gdXNlIGl0IGFzIGEgc3RhcnRpbmcgcG9pbnQgdG8gaW1wbGVtZW50IHlv
dXIgb3duIHNlcnZpY2VzLgoKIyMjIERldmVsb3AgYSBjdXN0b20gSFRUUCBm
aWxlIHNlcnZlciAgICAKCkZvciBhIG1vcmUgY2xhc3NpYyBhcHByb2FjaCwg
cGVyaGFwcyB0byBqdXN0IGNyZWF0ZSBhIEhUVFAgc2VydmVyIHNlcnZpbmcg
bW9zdGx5IHNlcnZpY2UgZmlsZXMgZnJvbSB5b3VyIGRpc2ssIHlvdSBjYW4g
dXNlIHRoZSBtb2R1bGUgd2l0aCBhcnRpZmFjdElkICpuYW5vaHR0cGQtd2Vi
c2VydmVyKi4KCgkJPGRlcGVuZGVuY3k+CgkJCTxncm91cElkPm9yZy5uYW5v
aHR0cGQ8L2dyb3VwSWQ+CgkJCTxhcnRpZmFjdElkPm5hbm9odHRwZC13ZWJz
ZXJ2ZXI8L2FydGlmYWN0SWQ+CgkJCTx2ZXJzaW9uPkNVUlJFTlRfVkVSU0lP
TjwvdmVyc2lvbj4KCQk8L2RlcGVuZGVuY3k+CgpUaGUgaW5jbHVkZWQgY2xh
c3MgKm9yZy5uYW5vaHR0cGQuU2ltcGxlV2ViU2VydmVyKiBpcyBpbnRlbmRl
ZCB0byBiZSB1c2VkIGFzIGEgc3RhcnRpbmcgcG9pbnQgZm9yIHlvdXIgb3du
IGltcGxlbWVudGF0aW9uIGJ1dCBpdCBhbHNvIGNhbiBiZSB1c2VkIGFzIGlz
LiBTdGFydGluZyB0aGUgY2xhc3MgYXMgaXMgd2lsbCBzdGFydCBhIEhUVFAg
c2VydmVyIG9uIHBvcnQgODA4MCBhbmQgcHVibGlzaGluZyB0aGUgY3VycmVu
dCBkaXJlY3RvcnkuCgojIyMgTGl2aW5nIG9uIHRoZSBlZGdlCgpUaGUgbGF0
ZXN0IEdpdGh1YiBtYXN0ZXIgdmVyc2lvbiBjYW4gYmUgZmV0Y2hlZCB0aHJv
dWdoIHNvbmF0eXBlLm9yZzoKCgk8ZGVwZW5kZW5jaWVzPgoJCTxkZXBlbmRl
bmN5PgoJCQk8YXJ0aWZhY3RJZD5uYW5vaHR0cGQ8L2FydGlmYWN0SWQ+CgkJ
CTxncm91cElkPm9yZy5uYW5vaHR0cGQ8L2dyb3VwSWQ+CgkJCTx2ZXJzaW9u
PlhYWFhYLVNOQVBTSE9UPC92ZXJzaW9uPgoJCTwvZGVwZW5kZW5jeT4KCTwv
ZGVwZW5kZW5jaWVzPgoJLi4uCgk8cmVwb3NpdG9yaWVzPgoJCTxyZXBvc2l0
b3J5PgoJCQk8aWQ+c29uYXR5cGUtc25hcHNob3RzPC9pZD4KCQkJPHVybD5o
dHRwczovL29zcy5zb25hdHlwZS5vcmcvY29udGVudC9yZXBvc2l0b3JpZXMv
c25hcHNob3RzPC91cmw+CgkJCTxzbmFwc2hvdHM+CgkJCQk8ZW5hYmxlZD50
cnVlPC9lbmFibGVkPgoJCQk8L3NuYXBzaG90cz4KCQk8L3JlcG9zaXRvcnk+
Cgk8L3JlcG9zaXRvcmllcz4KCiMjIyBnZW5lcmF0aW5nIGFuIHNlbGYgc2ln
bmVkIFNTTCBjZXJ0aWZpY2F0ZQoKSnVzdCBhIGhpbnQgaG93IHRvIGdlbmVy
YXRlIGEgY2VydGlmaWNhdGUgZm9yIGxvY2FsaG9zdC4KCglrZXl0b29sIC1n
ZW5rZXkgLWtleWFsZyBSU0EgLWFsaWFzIHNlbGZzaWduZWQgLWtleXN0b3Jl
IGtleXN0b3JlLmprcyAtc3RvcmVwYXNzIHBhc3N3b3JkIC12YWxpZGl0eSAz
NjAgLWtleXNpemUgMjA0OCAtZXh0IFNBTj1ETlM6bG9jYWxob3N0LElQOjEy
Ny4wLjAuMSAgLXZhbGlkaXR5IDk5OTkKClRoaXMgd2lsbCBnZW5lcmF0ZSBh
IGtleXN0b3JlIGZpbGUgbmFtZWQgJ2tleXN0b3JlLmprcycgd2l0aCBhIHNl
bGYgc2lnbmVkIGNlcnRpZmljYXRlIGZvciBhIGhvc3QgbmFtZWQgbG9jYWxo
b3N0IHdpdGggdGhlIElQIGFkZHJlc3MgMTI3LjAuMC4xIC4gTm93CnlvdSBj
YW4gdXNlOgoKCXNlcnZlci5tYWtlU2VjdXJlKE5hbm9IVFRQRC5tYWtlU1NM
U29ja2V0RmFjdG9yeSgiL2tleXN0b3JlLmprcyIsICJwYXNzd29yZCIudG9D
aGFyQXJyYXkoKSksIG51bGwpOwoKQmVmb3JlIHlvdSBzdGFydCB0aGUgc2Vy
dmVyIHRvIG1ha2UgTmFub0hUVFBEIHNlcnZlIEhUVFBTIGNvbm5lY3Rpb25z
LCB3aGVuIHlvdSBtYWtlIHN1cmUgJ2tleXN0b3JlLmprcycgaXMgaW4geW91
ciBjbGFzc3BhdGguCiAKLS0tLS0KCipUaGFuayB5b3UgdG8gZXZlcnlvbmUg
d2hvIGhhcyByZXBvcnRlZCBidWdzIGFuZCBzdWdnZXN0ZWQgZml4ZXMuKgo=
",,5083,"bGFuZ3VhZ2U6IGphdmEKamRrOgotIG9wZW5qZGs3CgpiZWZvcmVfaW5zdGFs
bDoKICAtIGNhdCB+Ly5tMi9zZXR0aW5ncy54bWwKICAtIHJtICB+Ly5tMi9z
ZXR0aW5ncy54bWwKCmluc3RhbGw6CiAgLSBtdm4gaW5zdGFsbCAtRHNraXBU
ZXN0cz10cnVlCgpzY3JpcHQ6CiAgICAtIG12biB0ZXN0OyBleHBvcnQgTUFW
RU5fUkVTVUxUPSQ/CiAgICAtIGlmIFsgIiRNQVZFTl9SRVNVTFQiIC1uZSAw
IF07IHRoZW4gZXhpdCAxOyBmaQogICAgLSBpZiBbICIkVFJBVklTX0JSQU5D
SCIgPSAibWFzdGVyIiAtYSAiJFRSQVZJU19QVUxMX1JFUVVFU1QiID0gImZh
bHNlIiBdOyB0aGVuIG12biBjbGVhbiBkZXBsb3kgLS1xdWlldCAtLXNldHRp
bmdzIHNldHRpbmdzLnhtbDsgZmkKCmFmdGVyX3N1Y2Nlc3M6CiAgLSBtdm4g
Y2xlYW4gdGVzdCBqYWNvY286cmVwb3J0IGNvdmVyYWxsczpyZXBvcnQKICAK
IApub3RpZmljYXRpb25zOgogIGVtYWlsOgogICAgLSByaWNoYXJkLnZhbm5p
ZXV3ZW5ob3ZlbkBhZGVzc28uYXQKICAgIC0gZWxvbmVuQGlraS5maQogICAg
LSBkaW9nby5kdWFydGVAdGVjaGllLmNvbQogICAgCmVudjoKIGdsb2JhbDoK
ICAtIHNlY3VyZTogIk90RDB6M3k0L09qU3pnOGlyVkQ4di91MFRFbGN3OEFp
Q0NYYjdhMFVRRW5UcEd4Y2Y1RE9ka3ZIdjBoRjR4akhLRnRsTU1IeGV2Vyth
NEM0TnVGUjhpdDhaSi9pMm0yNHJlQjI4SmljRGNSUVk5bndWL0JSL1QwOENS
RzlLRHo1RXVUSGdmUEpERjB5KzVNaVZOd0pWaEhGdmlCV0t1WHlJdVlvdUo1
SUhnYz0iCiAgLSBzZWN1cmU6ICJ0Z1RWeWNOTHdZRE0zVTBFVksxVGtmZnls
UUhmWmlodlNEQzlRb1pFbyt3ejlhQkJMb0F0VUpQN0RXbHRSUUZPa2ZUZUds
dEdIRWZHTTIvcWtJRzZXeitoTkZHL2Z2ZUhxeUkwMUpXWGM2NGQ3eUJtN2Fn
YUNQNXVUdHQyd2phWjdaSzVNcHM1UW91ZmJsWXUrajlnYjJ2MzF0OUlkc0o5
UFVzMCt3Z0UvV1U9IgogIAo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'retdec',113967646,b'RetDec is a retargetable machine-code decompiler based on LLVM.',b'C++',259,5082,,243,False,b'https://api.github.com/repos/avast/retdec/forks',"IyBSZXREZWMKClshW1RyYXZpcyBDSSBidWlsZCBzdGF0dXNdKGh0dHBzOi8v
dHJhdmlzLWNpLm9yZy9hdmFzdC9yZXRkZWMuc3ZnP2JyYW5jaD1tYXN0ZXIp
XShodHRwczovL3RyYXZpcy1jaS5vcmcvYXZhc3QvcmV0ZGVjKQpbIVtBcHBW
ZXlvciBidWlsZCBzdGF0dXNdKGh0dHBzOi8vY2kuYXBwdmV5b3IuY29tL2Fw
aS9wcm9qZWN0cy9zdGF0dXMvZGFxc3RxMzk2aGI4aXhqZy9icmFuY2gvbWFz
dGVyP3N2Zz10cnVlCildKGh0dHBzOi8vY2kuYXBwdmV5b3IuY29tL3Byb2pl
Y3QvYXZhc3QvcmV0ZGVjP2JyYW5jaD1tYXN0ZXIpClshW1RlYW1DaXR5IGJ1
aWxkIHN0YXR1c10oaHR0cHM6Ly9yZXRkZWMtdGMuYXZhc3QuY29tL2FwcC9y
ZXN0L2J1aWxkcy9hZ2dyZWdhdGVkL3N0cm9iOihidWlsZFR5cGU6KHByb2pl
Y3Q6KGlkOlJldGRlYykpKS9zdGF0dXNJY29uKV0oaHR0cHM6Ly9yZXRkZWMt
dGMuYXZhc3QuY29tL3Byb2plY3QuaHRtbD9wcm9qZWN0SWQ9UmV0ZGVjJmd1
ZXN0PTEpCgpbUmV0RGVjXShodHRwczovL3JldGRlYy5jb20vKSBpcyBhIHJl
dGFyZ2V0YWJsZSBtYWNoaW5lLWNvZGUgZGVjb21waWxlciBiYXNlZCBvbiBb
TExWTV0oaHR0cHM6Ly9sbHZtLm9yZy8pLgoKVGhlIGRlY29tcGlsZXIgaXMg
bm90IGxpbWl0ZWQgdG8gYW55IHBhcnRpY3VsYXIgdGFyZ2V0IGFyY2hpdGVj
dHVyZSwgb3BlcmF0aW5nIHN5c3RlbSwgb3IgZXhlY3V0YWJsZSBmaWxlIGZv
cm1hdDoKKiBTdXBwb3J0ZWQgZmlsZSBmb3JtYXRzOiBFTEYsIFBFLCBNYWNo
LU8sIENPRkYsIEFSIChhcmNoaXZlKSwgSW50ZWwgSEVYLCBhbmQgcmF3IG1h
Y2hpbmUgY29kZQoqIFN1cHBvcnRlZCBhcmNoaXRlY3R1cmVzOgogICAgKiAz
Mi1iaXQ6IEludGVsIHg4NiwgQVJNLCBNSVBTLCBQSUMzMiwgYW5kIFBvd2Vy
UEMKICAgICogNjQtYml0OiB4ODYtNjQsIEFSTTY0IChBQXJjaDY0KQoKRmVh
dHVyZXM6CiogU3RhdGljIGFuYWx5c2lzIG9mIGV4ZWN1dGFibGUgZmlsZXMg
d2l0aCBkZXRhaWxlZCBpbmZvcm1hdGlvbi4KKiBDb21waWxlciBhbmQgcGFj
a2VyIGRldGVjdGlvbi4KKiBMb2FkaW5nIGFuZCBpbnN0cnVjdGlvbiBkZWNv
ZGluZy4KKiBTaWduYXR1cmUtYmFzZWQgcmVtb3ZhbCBvZiBzdGF0aWNhbGx5
IGxpbmtlZCBsaWJyYXJ5IGNvZGUuCiogRXh0cmFjdGlvbiBhbmQgdXRpbGl6
YXRpb24gb2YgZGVidWdnaW5nIGluZm9ybWF0aW9uIChEV0FSRiwgUERCKS4K
KiBSZWNvbnN0cnVjdGlvbiBvZiBpbnN0cnVjdGlvbiBpZGlvbXMuCiogRGV0
ZWN0aW9uIGFuZCByZWNvbnN0cnVjdGlvbiBvZiBDKysgY2xhc3MgaGllcmFy
Y2hpZXMgKFJUVEksIHZ0YWJsZXMpLgoqIERlbWFuZ2xpbmcgb2Ygc3ltYm9s
cyBmcm9tIEMrKyBiaW5hcmllcyAoR0NDLCBNU1ZDLCBCb3JsYW5kKS4KKiBS
ZWNvbnN0cnVjdGlvbiBvZiBmdW5jdGlvbnMsIHR5cGVzLCBhbmQgaGlnaC1s
ZXZlbCBjb25zdHJ1Y3RzLgoqIEludGVncmF0ZWQgZGlzYXNzZW1ibGVyLgoq
IE91dHB1dCBpbiB0d28gaGlnaC1sZXZlbCBsYW5ndWFnZXM6IEMgYW5kIGEg
UHl0aG9uLWxpa2UgbGFuZ3VhZ2UuCiogR2VuZXJhdGlvbiBvZiBjYWxsIGdy
YXBocywgY29udHJvbC1mbG93IGdyYXBocywgYW5kIHZhcmlvdXMgc3RhdGlz
dGljcy4KCkZvciBtb3JlIGluZm9ybWF0aW9uLCBjaGVjayBvdXQgb3VyCiog
W1dpa2ldKGh0dHBzOi8vZ2l0aHViLmNvbS9hdmFzdC9yZXRkZWMvd2lraSkg
KGluIHByb2dyZXNzKQoqIEJvdGNvbmYgMjAxNyB0YWxrOiBbc2xpZGVzXSho
dHRwczovL3JldGRlYy5jb20vc3RhdGljL3B1YmxpY2F0aW9ucy9yZXRkZWMt
c2xpZGVzLWJvdGNvbmYtMjAxNy5wZGYpLCBbdmlkZW9dKGh0dHBzOi8vd3d3
LnlvdXR1YmUuY29tL3dhdGNoP3Y9SEhGdnR0NWI2eVkpCiogUkVjb24gTW9u
dHJlYWwgMjAxOCB0YWxrOiBbc2xpZGVzXShodHRwczovL3JldGRlYy5jb20v
c3RhdGljL3B1YmxpY2F0aW9ucy9yZXRkZWMtc2xpZGVzLXJlY29uLTIwMTgu
cGRmKQoqIFtQdWJsaWNhdGlvbnNdKGh0dHBzOi8vcmV0ZGVjLmNvbS9wdWJs
aWNhdGlvbnMvKQoKIyMgSW5zdGFsbGF0aW9uIGFuZCBVc2UKCkN1cnJlbnRs
eSwgd2Ugc3VwcG9ydCBXaW5kb3dzICg3IG9yIGxhdGVyKSwgTGludXgsIG1h
Y09TLCBhbmQgKGV4cGVyaW1lbnRhbGx5KSBGcmVlQlNELiBBbiBpbnN0YWxs
ZWQgdmVyc2lvbiBvZiBSZXREZWMgcmVxdWlyZXMgYXBwcm94aW1hdGVseSA0
IEdCIG9mIGZyZWUgZGlzayBzcGFjZS4KCiMjIyBXaW5kb3dzCgoxLiBFaXRo
ZXIgZG93bmxvYWQgYW5kIHVucGFjayBhIFtwcmUtYnVpbHQgcGFja2FnZV0o
aHR0cHM6Ly9naXRodWIuY29tL2F2YXN0L3JldGRlYy9yZWxlYXNlcyksIG9y
IGJ1aWxkIGFuZCBpbnN0YWxsIHRoZSBkZWNvbXBpbGVyIGJ5IHlvdXJzZWxm
ICh0aGUgcHJvY2VzcyBpcyBkZXNjcmliZWQgYmVsb3cpLgoKMi4gSW5zdGFs
bCBbTWljcm9zb2Z0IFZpc3VhbCBDKysgUmVkaXN0cmlidXRhYmxlIGZvciBW
aXN1YWwgU3R1ZGlvIDIwMTddKGh0dHBzOi8vc3VwcG9ydC5taWNyb3NvZnQu
Y29tL2VuLXVzL2hlbHAvMjk3NzAwMy90aGUtbGF0ZXN0LXN1cHBvcnRlZC12
aXN1YWwtYy1kb3dubG9hZHMpLgoKMy4gSW5zdGFsbCB0aGUgZm9sbG93aW5n
IHByb2dyYW1zOgoKICAgICogW1B5dGhvbl0oaHR0cHM6Ly93d3cucHl0aG9u
Lm9yZy8pICh2ZXJzaW9uID49IDMuNCkKICAgICogW1VQWF0oaHR0cHM6Ly91
cHguZ2l0aHViLmlvLykgKE9wdGlvbmFsOiBpZiB5b3Ugd2FudCB0byB1c2Ug
VVBYIHVucGFja2VyIGluIHRoZSBwcmVwcm9jZXNzaW5nIHN0YWdlKQogICAg
KiBbR3JhcGh2aXpdKGh0dHBzOi8vZ3JhcGh2aXouZ2l0bGFiLmlvL19wYWdl
cy9Eb3dubG9hZC93aW5kb3dzL2dyYXBodml6LTIuMzgubXNpKSAoT3B0aW9u
YWw6IGlmIHlvdSB3YW50IHRvIGdlbmVyYXRlIGNhbGwgb3IgY29udHJvbCBm
bG93IGdyYXBocykKCjQuIE5vdywgeW91IGFyZSBhbGwgc2V0IHRvIHJ1biB0
aGUgZGVjb21waWxlci4gVG8gZGVjb21waWxlIGEgYmluYXJ5IGZpbGUgbmFt
ZWQgYHRlc3QuZXhlYCwgcnVuIHRoZSBmb2xsb3dpbmcgY29tbWFuZCAoZW5z
dXJlIHRoYXQgYHB5dGhvbmAgcnVucyBQeXRob24gMzsgYXMgYW4gYWx0ZXJu
YXRpdmUsIHlvdSBjYW4gdHJ5IGBweSAtM2ApCgogICAgYGBgCiAgICBweXRo
b24gJFJFVERFQ19JTlNUQUxMX0RJUi9iaW4vcmV0ZGVjLWRlY29tcGlsZXIu
cHkgdGVzdC5leGUKICAgIGBgYAoKICAgRm9yIG1vcmUgaW5mb3JtYXRpb24s
IHJ1biBgcmV0ZGVjLWRlY29tcGlsZXIucHlgIHdpdGggYC0taGVscGAuCgoj
IyMgTGludXgKCjEuIEVpdGhlciBkb3dubG9hZCBhbmQgdW5wYWNrIGEgW3By
ZS1idWlsdCBwYWNrYWdlXShodHRwczovL2dpdGh1Yi5jb20vYXZhc3QvcmV0
ZGVjL3JlbGVhc2VzKSwgb3IgYnVpbGQgYW5kIGluc3RhbGwgdGhlIGRlY29t
cGlsZXIgYnkgeW91cnNlbGYgKHRoZSBwcm9jZXNzIGlzIGRlc2NyaWJlZCBi
ZWxvdykuCgoyLiBBZnRlciB5b3UgaGF2ZSBidWlsdCB0aGUgZGVjb21waWxl
ciwgeW91IHdpbGwgbmVlZCB0byBpbnN0YWxsIHRoZSBmb2xsb3dpbmcgcGFj
a2FnZXMgdmlhIHlvdXIgZGlzdHJpYnV0aW9uJ3MgcGFja2FnZSBtYW5hZ2Vy
OgoKICAgICogW1B5dGhvbl0oaHR0cHM6Ly93d3cucHl0aG9uLm9yZy8pICh2
ZXJzaW9uID49IDMuNCkKICAgICogW1VQWF0oaHR0cHM6Ly91cHguZ2l0aHVi
LmlvLykgKE9wdGlvbmFsOiBpZiB5b3Ugd2FudCB0byB1c2UgVVBYIHVucGFj
a2VyIGluIHRoZSBwcmVwcm9jZXNzaW5nIHN0YWdlKQogICAgKiBbR3JhcGh2
aXpdKGh0dHA6Ly93d3cuZ3JhcGh2aXoub3JnLykgKE9wdGlvbmFsOiBpZiB5
b3Ugd2FudCB0byBnZW5lcmF0ZSBjYWxsIG9yIGNvbnRyb2wgZmxvdyBncmFw
aHMpCgozLiBOb3csIHlvdSBhcmUgYWxsIHNldCB0byBydW4gdGhlIGRlY29t
cGlsZXIuIFRvIGRlY29tcGlsZSBhIGJpbmFyeSBmaWxlIG5hbWVkIGB0ZXN0
LmV4ZWAsIHJ1bgoKICAgIGBgYAogICAgJFJFVERFQ19JTlNUQUxMX0RJUi9i
aW4vcmV0ZGVjLWRlY29tcGlsZXIucHkgdGVzdC5leGUKICAgIGBgYAoKICAg
Rm9yIG1vcmUgaW5mb3JtYXRpb24sIHJ1biBgcmV0ZGVjLWRlY29tcGlsZXIu
cHlgIHdpdGggYC0taGVscGAuCgojIyMgbWFjT1MKCjEuIEVpdGhlciBkb3du
bG9hZCBhbmQgdW5wYWNrIGEgW3ByZS1idWlsdCBwYWNrYWdlXShodHRwczov
L2dpdGh1Yi5jb20vYXZhc3QvcmV0ZGVjL3JlbGVhc2VzKSwgb3IgYnVpbGQg
YW5kIGluc3RhbGwgdGhlIGRlY29tcGlsZXIgYnkgeW91cnNlbGYgKHRoZSBw
cm9jZXNzIGlzIGRlc2NyaWJlZCBiZWxvdykuCgoyLiBBZnRlciB5b3UgaGF2
ZSBidWlsdCB0aGUgZGVjb21waWxlciwgeW91IHdpbGwgbmVlZCB0byBpbnN0
YWxsIHRoZSBmb2xsb3dpbmcgcGFja2FnZXM6CgogICAgKiBbUHl0aG9uXSho
dHRwczovL3d3dy5weXRob24ub3JnLykgKHZlcnNpb24gPj0gMy40KQogICAg
KiBbVVBYXShodHRwczovL3VweC5naXRodWIuaW8vKSAoT3B0aW9uYWw6IGlm
IHlvdSB3YW50IHRvIHVzZSBVUFggdW5wYWNrZXIgaW4gdGhlIHByZXByb2Nl
c3Npbmcgc3RhZ2UpCiAgICAqIFtHcmFwaHZpel0oaHR0cDovL3d3dy5ncmFw
aHZpei5vcmcvKSAoT3B0aW9uYWw6IGlmIHlvdSB3YW50IHRvIGdlbmVyYXRl
IGNhbGwgb3IgY29udHJvbCBmbG93IGdyYXBocykKCjMuIE5vdywgeW91IGFy
ZSBhbGwgc2V0IHRvIHJ1biB0aGUgZGVjb21waWxlci4gVG8gZGVjb21waWxl
IGEgYmluYXJ5IGZpbGUgbmFtZWQgYHRlc3QuZXhlYCwgcnVuCgogICAgYGBg
CiAgICAkUkVUREVDX0lOU1RBTExfRElSL2Jpbi9yZXRkZWMtZGVjb21waWxl
ci5weSB0ZXN0LmV4ZQogICAgYGBgCgogICBGb3IgbW9yZSBpbmZvcm1hdGlv
biwgcnVuIGByZXRkZWMtZGVjb21waWxlci5weWAgd2l0aCBgLS1oZWxwYC4K
CiMjIyBGcmVlQlNEIChFeHBlcmltZW50YWwpCgoxLiBUaGVyZSBhcmUgY3Vy
cmVudGx5IG5vIHByZS1idWlsdCAicG9ydHMiIHBhY2thZ2VzIGZvciBGcmVl
QlNELiBZb3Ugd2lsbCBoYXZlIHRvIGJ1aWxkIGFuZCBpbnN0YWxsIHRoZSBk
ZWNvbXBpbGVyIGJ5IHlvdXJzZWxmLiBUaGUgcHJvY2VzcyBpcyBkZXNjcmli
ZWQgYmVsb3cuCgoyLiBBZnRlciB5b3UgaGF2ZSBidWlsdCB0aGUgZGVjb21w
aWxlciwgeW91IG1heSBuZWVkIHRvIGluc3RhbGwgdGhlIGZvbGxvd2luZyBw
YWNrYWdlcyBhbmQgZXhlY3V0ZSB0aGUgZm9sbG93aW5nIGNvbW1hbmQ6Cgog
ICAgYGBgCiAgICBzdWRvIHBrZyBpbnN0YWxsIHB5dGhvbjM3CiAgICBzdWRv
IGxuIC1zIC91c3IvbG9jYWwvYmluL3B5dGhvbjMuNyAvdXNyL2xvY2FsL2Jp
bi9weXRob24zCiAgICBgYGAKCjMuIE5vdywgeW91IGFyZSBhbGwgc2V0IHRv
IHJ1biB0aGUgZGVjb21waWxlci4gVG8gZGVjb21waWxlIGEgYmluYXJ5IGZp
bGUgbmFtZWQgYHRlc3QuZXhlYCwgcnVuCgogICAgYGBgCiAgICAkUkVUREVD
X0lOU1RBTExfRElSL2Jpbi9yZXRkZWMtZGVjb21waWxlci5weSB0ZXN0LmV4
ZQogICAgYGBgCgogICBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgcnVuIGByZXRk
ZWMtZGVjb21waWxlci5weWAgd2l0aCBgLS1oZWxwYC4KCiMjIEJ1aWxkIGFu
ZCBJbnN0YWxsYXRpb24KClRoaXMgc2VjdGlvbiBkZXNjcmliZXMgYSBsb2Nh
bCBidWlsZCBhbmQgaW5zdGFsbGF0aW9uIG9mIFJldERlYy4gSW5zdHJ1Y3Rp
b25zIGZvciBEb2NrZXIgYXJlIGdpdmVuIGluIHRoZSBuZXh0IHNlY3Rpb24u
CgojIyMgUmVxdWlyZW1lbnRzCgojIyMjIExpbnV4CgoqIEEgQysrIGNvbXBp
bGVyIGFuZCBzdGFuZGFyZCBDKysgbGlicmFyeSBzdXBwb3J0aW5nIEMrKzE3
IChlLmcuIEdDQyA+PSA3KQoqIFtDTWFrZV0oaHR0cHM6Ly9jbWFrZS5vcmcv
KSAodmVyc2lvbiA+PSAzLjYpCiogW0dpdF0oaHR0cHM6Ly9naXQtc2NtLmNv
bS8pCiogW1BlcmxdKGh0dHBzOi8vd3d3LnBlcmwub3JnLykKKiBbUHl0aG9u
XShodHRwczovL3d3dy5weXRob24ub3JnLykgKHZlcnNpb24gPj0gMy40KQoq
IFthdXRvdG9vbHNdKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0dO
VV9CdWlsZF9TeXN0ZW0pIChbYXV0b2NvbmZdKGh0dHBzOi8vd3d3LmdudS5v
cmcvc29mdHdhcmUvYXV0b2NvbmYvYXV0b2NvbmYuaHRtbCksIFthdXRvbWFr
ZV0oaHR0cHM6Ly93d3cuZ251Lm9yZy9zb2Z0d2FyZS9hdXRvbWFrZS8pLCBh
bmQgW2xpYnRvb2xdKGh0dHBzOi8vd3d3LmdudS5vcmcvc29mdHdhcmUvbGli
dG9vbC8pKQoqIFtwa2ctY29uZmlnXShodHRwczovL3d3dy5mcmVlZGVza3Rv
cC5vcmcvd2lraS9Tb2Z0d2FyZS9wa2ctY29uZmlnLykKKiBbbTRdKGh0dHBz
Oi8vd3d3LmdudS5vcmcvc29mdHdhcmUvbTQvbTQuaHRtbCkKKiBbemxpYl0o
aHR0cDovL3psaWIubmV0LykKKiBPcHRpb25hbDogW0RveHlnZW5dKGh0dHA6
Ly93d3cuc3RhY2submwvfmRpbWl0cmkvZG94eWdlbi8pIGFuZCBbR3JhcGh2
aXpdKGh0dHA6Ly93d3cuZ3JhcGh2aXoub3JnLykgZm9yIGdlbmVyYXRpbmcg
QVBJIGRvY3VtZW50YXRpb24KCk9uIERlYmlhbi1iYXNlZCBkaXN0cmlidXRp
b25zIChlLmcuIFVidW50dSksIHRoZSByZXF1aXJlZCBwYWNrYWdlcyBjYW4g
YmUgaW5zdGFsbGVkIHdpdGggYGFwdC1nZXRgOgoKYGBgc2gKc3VkbyBhcHQt
Z2V0IGluc3RhbGwgYnVpbGQtZXNzZW50aWFsIGNtYWtlIGdpdCBwZXJsIHB5
dGhvbjMgYXV0b2NvbmYgYXV0b21ha2UgbGlidG9vbCBwa2ctY29uZmlnIG00
IHpsaWIxZy1kZXYgdXB4IGRveHlnZW4gZ3JhcGh2aXoKYGBgCgpPbiBSUE0t
YmFzZWQgZGlzdHJpYnV0aW9ucyAoZS5nLiBGZWRvcmEpLCB0aGUgcmVxdWly
ZWQgcGFja2FnZXMgY2FuIGJlIGluc3RhbGxlZCB3aXRoIGBkbmZgOgoKYGBg
c2gKc3VkbyBkbmYgaW5zdGFsbCBnY2MgZ2NjLWMrKyBjbWFrZSBtYWtlIGdp
dCBwZXJsIHB5dGhvbjMgYXV0b2NvbmYgYXV0b21ha2UgbGlidG9vbCBwa2ct
Y29uZmlnIG00IHpsaWItZGV2ZWwgdXB4IGRveHlnZW4gZ3JhcGh2aXoKYGBg
CgpPbiBBcmNoIExpbnV4LCB0aGUgcmVxdWlyZWQgcGFja2FnZXMgY2FuIGJl
IGluc3RhbGxlZCB3aXRoIGBwYWNtYW5gOgoKYGBgc2gKc3VkbyBwYWNtYW4g
LS1uZWVkZWQgLVMgYmFzZS1kZXZlbCBjbWFrZSBnaXQgcGVybCBweXRob24z
IGF1dG9jb25mIGF1dG9tYWtlIGxpYnRvb2wgcGtnLWNvbmZpZyBtNCB6bGli
IHVweCBkb3h5Z2VuIGdyYXBodml6CmBgYAoKIyMjIyBXaW5kb3dzCgoqIE1p
Y3Jvc29mdCBWaXN1YWwgQysrICh2ZXJzaW9uID49IFZpc3VhbCBTdHVkaW8g
MjAxNyB2ZXJzaW9uIDE1LjcpCiogW0NNYWtlXShodHRwczovL2NtYWtlLm9y
Zy8pICh2ZXJzaW9uID49IDMuNikKKiBbR2l0XShodHRwczovL2dpdC1zY20u
Y29tLykKKiBbQWN0aXZlIFBlcmxdKGh0dHBzOi8vd3d3LmFjdGl2ZXN0YXRl
LmNvbS9hY3RpdmVwZXJsKS4gSXQgbmVlZHMgdG8gYmUgdGhlIGZpcnN0IFBl
cmwgaW4gYFBBVEhgLCBvciBpdCBoYXMgdG8gYmUgcHJvdmlkZWQgdG8gQ01h
a2UgdXNpbmcgYENNQUtFX1BST0dSQU1fUEFUSGAgdmFyaWFibGUsIGUuZy4g
YC1EQ01BS0VfUFJPR1JBTV9QQVRIPS9jL3BlcmwvYmluYC4gRG9lcyBOT1Qg
d29yayB3aXRoIFN0cmF3YmVycnkgUGVybCBvciBNU1lTMiBQZXJsICh5b3Ug
d291bGQgaGF2ZSB0byBpbnN0YWxsIGEgcHJlLWJ1aWx0IHZlcnNpb24gb2Yg
T3BlblNTTCwgc2VlIGJlbG93KS4KICAqIEFsdGVybmF0aXZlbHksIHlvdSBj
YW4gaW5zdGFsbCBPcGVuU1NMIGRpcmVjdGx5IGZyb20gW2hlcmVdKGh0dHBz
Oi8vc2xwcm93ZWIuY29tL3Byb2R1Y3RzL1dpbjMyT3BlblNTTC5odG1sKS4g
VGhpcyBtZWFucyBPcGVuU1NMIHdvbid0IGJlIGJ1aWx0IGFuZCB5b3UgZG9u
J3QgbmVlZCB0byBpbnN0YWxsIGFueSBQZXJsLiBEbyBub3QgaW5zdGFsbCBM
aWdodCB2ZXJzaW9uIG9mIE9wZW5TU0wgYXMgdGhleSBkb24ndCBjb250YWlu
IGRldmVsb3BtZW50IGZpbGVzLgoqIFtQeXRob25dKGh0dHBzOi8vd3d3LnB5
dGhvbi5vcmcvKSAodmVyc2lvbiA+PSAzLjQpCiogT3B0aW9uYWw6IFtEb3h5
Z2VuXShodHRwOi8vZnRwLnN0YWNrLm5sL3B1Yi91c2Vycy9kaW1pdHJpL2Rv
eHlnZW4tMS44LjEzLXNldHVwLmV4ZSkgYW5kIFtHcmFwaHZpel0oaHR0cHM6
Ly9ncmFwaHZpei5naXRsYWIuaW8vX3BhZ2VzL0Rvd25sb2FkL3dpbmRvd3Mv
Z3JhcGh2aXotMi4zOC5tc2kpIGZvciBnZW5lcmF0aW5nIEFQSSBkb2N1bWVu
dGF0aW9uCgojIyMjIG1hY09TCgpQYWNrYWdlcyBzaG91bGQgYmUgcHJlZmVy
YWJseSBpbnN0YWxsZWQgdmlhIFtIb21lYnJld10oaHR0cHM6Ly9icmV3LnNo
KS4KCiogbWFjT1MgPj0gMTAuMTQKKiBGdWxsIFhjb2RlIGluc3RhbGxhdGlv
biAoW2luY2x1ZGluZyBjb21tYW5kLWxpbmUgdG9vbHNdKGh0dHBzOi8vZ2l0
aHViLmNvbS9mcmlkYS9mcmlkYS9pc3N1ZXMvMzM4I2lzc3VlY29tbWVudC00
MjY3Nzc4NDkpLCBzZWUgWyM0MjVdKGh0dHBzOi8vZ2l0aHViLmNvbS9hdmFz
dC9yZXRkZWMvaXNzdWVzLzQyNSkgYW5kIFsjNDMzXShodHRwczovL2dpdGh1
Yi5jb20vYXZhc3QvcmV0ZGVjL2lzc3Vlcy80MzMpKQoqIFtDTWFrZV0oaHR0
cHM6Ly9jbWFrZS5vcmcvKSAodmVyc2lvbiA+PSAzLjYpCiogW0dpdF0oaHR0
cHM6Ly9naXQtc2NtLmNvbS8pCiogW1BlcmxdKGh0dHBzOi8vd3d3LnBlcmwu
b3JnLykKKiBbUHl0aG9uXShodHRwczovL3d3dy5weXRob24ub3JnLykgKHZl
cnNpb24gPj0gMy40KQoqIFthdXRvdG9vbHNdKGh0dHBzOi8vZW4ud2lraXBl
ZGlhLm9yZy93aWtpL0dOVV9CdWlsZF9TeXN0ZW0pIChbYXV0b2NvbmZdKGh0
dHBzOi8vd3d3LmdudS5vcmcvc29mdHdhcmUvYXV0b2NvbmYvYXV0b2NvbmYu
aHRtbCksIFthdXRvbWFrZV0oaHR0cHM6Ly93d3cuZ251Lm9yZy9zb2Z0d2Fy
ZS9hdXRvbWFrZS8pLCBhbmQgW2xpYnRvb2xdKGh0dHBzOi8vd3d3LmdudS5v
cmcvc29mdHdhcmUvbGlidG9vbC8pKQoqIE9wdGlvbmFsOiBbRG94eWdlbl0o
aHR0cDovL3d3dy5zdGFjay5ubC9+ZGltaXRyaS9kb3h5Z2VuLykgYW5kIFtH
cmFwaHZpel0oaHR0cDovL3d3dy5ncmFwaHZpei5vcmcvKSBmb3IgZ2VuZXJh
dGluZyBBUEkgZG9jdW1lbnRhdGlvbgoKIyMjIyBGcmVlQlNEIChFeHBlcmlt
ZW50YWwpCgpQYWNrYWdlcyBzaG91bGQgYmUgaW5zdGFsbGVkIHZpYSBGcmVl
QlNEcyBwcmUtY29tcGlsZWQgcGFja2FnZSByZXBvc2l0b3J5IHVzaW5nIHRo
ZSBgcGtnYCBjb21tYW5kIG9yIGJ1aWx0IGZyb20gc2NyYXRjaCB1c2luZyB0
aGUgYHBvcnRzYCBkYXRhYmFzZSBtZXRob2QuCgoqIEZ1bGwgInBrZyIgdG9v
bCBpbnN0cnVjdGlvbnM6IFtoYW5kYm9vayBwa2cgbWV0aG9kXShodHRwczov
L3d3dy5mcmVlYnNkLm9yZy9kb2MvaGFuZGJvb2svcGtnbmctaW50cm8uaHRt
bCkKICAqIGBwa2cgaW5zdGFsbCBjbWFrZSBweXRob24zNyBnaXQgYXV0b3Rv
b2xzYApPUgoqIEZ1bGwgInBvcnRzIiBpbnN0cnVjdGlvbnM6IFtoYW5kYm9v
ayBwb3J0cyBtZXRob2RdKGh0dHBzOi8vd3d3LmZyZWVic2Qub3JnL2RvYy9o
YW5kYm9vay9wb3J0cy11c2luZy5odG1sKQogICogYHBvcnRzbmFwIGZldGNo
YAogICogYHBvcnRzbmFwIGV4dHJhY3RgCiogRm9yIGV4YW1wbGUsIGBjbWFr
ZWAgd291bGQgYmUKICAqIGB3aGVyZWlzIGNtYWtlYAogICogYGNkIC91c3Iv
cG9ydHMvZGV2ZWwvY21ha2VgCiAgKiBgbWFrZSBpbnN0YWxsIGNsZWFuYAoK
IyMjIFByb2Nlc3MKCk5vdGU6IEFsdGhvdWdoIFJldERlYyBub3cgc3VwcG9y
dHMgYSBzeXN0ZW0td2lkZSBpbnN0YWxsYXRpb24gKFsjOTRdKGh0dHBzOi8v
Z2l0aHViLmNvbS9hdmFzdC9yZXRkZWMvaXNzdWVzLzk0KSksIHVubGVzcyB5
b3UgdXNlIHlvdXIgZGlzdHJpYnV0aW9uJ3MgcGFja2FnZSBtYW5hZ2VyIHRv
IGluc3RhbGwgaXQsIHdlIHJlY29tbWVuZCBpbnN0YWxsaW5nIFJldERlYyBs
b2NhbGx5IGludG8gYSBkZXNpZ25hdGVkIGRpcmVjdG9yeS4gVGhlIHJlYXNv
biBmb3IgdGhpcyBpcyB0aGF0IHVuaW5zdGFsbGF0aW9uIHdpbGwgYmUgZWFz
aWVyIGFzIHlvdSB3aWxsIG9ubHkgbmVlZCB0byByZW1vdmUgYSBzaW5nbGUg
ZGlyZWN0b3J5LiBUbyBwZXJmb3JtIGEgbG9jYWwgaW5zdGFsbGF0aW9uLCBy
dW4gYGNtYWtlYCB3aXRoIHRoZSBgLURDTUFLRV9JTlNUQUxMX1BSRUZJWD08
cGF0aD5gIHBhcmFtZXRlciwgd2hlcmUgYDxwYXRoPmAgaXMgZGlyZWN0b3J5
IGludG8gd2hpY2ggUmV0RGVjIHdpbGwgYmUgaW5zdGFsbGVkIChlLmcuIGAk
SE9NRS9wcm9qZWN0cy9yZXRkZWMtaW5zdGFsbGAgb24gTGludXggYW5kIG1h
Y09TLCBhbmQgYEM6XHByb2plY3RzXHJldGRlYy1pbnN0YWxsYCBvbiBXaW5k
b3dzKS4KCiogQ2xvbmUgdGhlIHJlcG9zaXRvcnk6CiAgKiBgZ2l0IGNsb25l
IGh0dHBzOi8vZ2l0aHViLmNvbS9hdmFzdC9yZXRkZWNgCiogTGludXg6CiAg
KiBgY2QgcmV0ZGVjYAogICogYG1rZGlyIGJ1aWxkICYmIGNkIGJ1aWxkYAog
ICogYGNtYWtlIC4uIC1EQ01BS0VfSU5TVEFMTF9QUkVGSVg9PHBhdGg+YAog
ICogYG1ha2UgLWpOYCAoYE5gIGlzIHRoZSBudW1iZXIgb2YgcHJvY2Vzc2Vz
IHRvIHVzZSBmb3IgcGFyYWxsZWwgYnVpbGQsIHR5cGljYWxseSBudW1iZXIg
b2YgY29yZXMgKyAxIGdpdmVzIGZhc3Rlc3QgY29tcGlsYXRpb24gdGltZSkK
ICAqIGBtYWtlIGluc3RhbGxgCiogV2luZG93czoKICAqIE9wZW4gYSBjb21t
YW5kIHByb21wdCAoZS5nLiBgY21kLmV4ZWApCiAgKiBgY2QgcmV0ZGVjYAog
ICogYG1rZGlyIGJ1aWxkICYmIGNkIGJ1aWxkYAogICogYGNtYWtlIC4uIC1E
Q01BS0VfSU5TVEFMTF9QUkVGSVg9PHBhdGg+IC1HPGdlbmVyYXRvcj5gCiAg
KiBgY21ha2UgLS1idWlsZCAuIC0tY29uZmlnIFJlbGVhc2UgLS0gLW1gCiAg
KiBgY21ha2UgLS1idWlsZCAuIC0tY29uZmlnIFJlbGVhc2UgLS10YXJnZXQg
aW5zdGFsbGAKICAqIEFsdGVybmF0aXZlbHksIHlvdSBjYW4gb3BlbiBgcmV0
ZGVjLnNsbmAgZ2VuZXJhdGVkIGJ5IGBjbWFrZWAgaW4gVmlzdWFsIFN0dWRp
byBJREUKKiBtYWNPUzoKICAqIGBjZCByZXRkZWNgCiAgKiBgbWtkaXIgYnVp
bGQgJiYgY2QgYnVpbGRgCiAgKiBgY21ha2UgLi4gLURDTUFLRV9JTlNUQUxM
X1BSRUZJWD08cGF0aD5gCiAgKiBgbWFrZSAtak5gIChgTmAgaXMgdGhlIG51
bWJlciBvZiBwcm9jZXNzZXMgdG8gdXNlIGZvciBwYXJhbGxlbCBidWlsZCwg
dHlwaWNhbGx5IG51bWJlciBvZiBjb3JlcyArIDEgZ2l2ZXMgZmFzdGVzdCBj
b21waWxhdGlvbiB0aW1lKQogICogYG1ha2UgaW5zdGFsbGAKKiBGcmVlQlNE
OgogICogYHN1ZG8gcGtnIGluc3RhbGwgZ2l0IGNtYWtlYAogICogYGdpdCBj
bG9uZSBodHRwczovL2dpdGh1Yi5jb20vYXZhc3QvcmV0ZGVjYAogICogYGNk
IHJldGRlY2AKICAqIGBta2RpciBidWlsZCAmJiBjZCBidWlsZGAKICAqIGBg
YHNoCiAgICAjIEZyZWVCU0QgKGFuZCBvdGhlciBCU0RzKSBkbyBuZWVkIGNt
YWtlLCBweXRob24zLCBnaXQsIGF1dG90b29scy4gUGVybCBpcyBwcmUtaW5z
dGFsbGVkIGluIHRoZSBPUyBidXQgY2hlY2sgaXRzIHZlcnNpb24uCiAgICAj
IExhdGVyIHZlcnNpb25zIG1heSBiZSBhdmFpbGFibGUgZm9yIGVhY2ggb2Yg
dGhlIHBhY2thZ2VzLgogICAgIyBTZWUgd2hhdCBpcyBpbnN0YWxsZWQ6CiAg
ICBzdWRvIHBrZyBpbmZvIGNtYWtlIHB5dGhvbjM3IGF1dG90b29scwogICAg
IyBJbnN0YWxsL3VwZ3JhZGUgdGhlbToKICAgIHN1ZG8gcGtnIGluc3RhbGwg
Y21ha2UgcHl0aG9uMzcgYXV0b3Rvb2xzCiAgICBgYGAKICAqIGBjbWFrZSAu
LiAtRENNQUtFX0lOU1RBTExfUFJFRklYPTxwYXRoPmAKICAqIGBtYWtlIC1q
TmAgKGBOYCBpcyB0aGUgbnVtYmVyIG9mIHByb2Nlc3NlcyB0byB1c2UgZm9y
IHBhcmFsbGVsIGJ1aWxkLCB0eXBpY2FsbHkgbnVtYmVyIG9mIGNvcmVzICsg
MSBnaXZlcyBmYXN0ZXN0IGNvbXBpbGF0aW9uIHRpbWUpCiAgKiBgbWFrZSBp
bnN0YWxsYAoKWW91IGhhdmUgdG8gcGFzcyB0aGUgZm9sbG93aW5nIHBhcmFt
ZXRlcnMgdG8gYGNtYWtlYDoKKiBgLURDTUFLRV9JTlNUQUxMX1BSRUZJWD08
cGF0aD5gIHRvIHNldCB0aGUgaW5zdGFsbGF0aW9uIHBhdGggdG8gYDxwYXRo
PmAuIFF1b3RlIHRoZSBwYXRoIGlmIHlvdSBhcmUgdXNpbmcgYmFja3NsYXNo
ZXMgb24gV2luZG93cyAoZS5nLiBgLURDTUFLRV9JTlNUQUxMX1BSRUZJWD0i
QzpccmV0ZGVjImApLgoqIChXaW5kb3dzIG9ubHkpIGAtRzxnZW5lcmF0b3I+
YCBpcyBgLUciVmlzdWFsIFN0dWRpbyAxNSAyMDE3ImAgZm9yIDMyLWJpdCBi
dWlsZCB1c2luZyBWaXN1YWwgU3R1ZGlvIDIwMTcsIG9yIGAtRyJWaXN1YWwg
U3R1ZGlvIDE1IDIwMTcgV2luNjQiYCBmb3IgNjQtYml0IGJ1aWxkIHVzaW5n
IFZpc3VhbCBTdHVkaW8gMjAxNy4gTGF0ZXIgdmVyc2lvbnMgb2YgVmlzdWFs
IFN0dWRpbyBtYXkgYmUgdXNlZC4KCllvdSBjYW4gcGFzcyB0aGUgZm9sbG93
aW5nIGFkZGl0aW9uYWwgcGFyYW1ldGVycyB0byBgY21ha2VgOgoqIGAtRFJF
VERFQ19ET0M9T05gIHRvIGJ1aWxkIHdpdGggQVBJIGRvY3VtZW50YXRpb24g
KHJlcXVpcmVzIERveHlnZW4gYW5kIEdyYXBodml6LCBkaXNhYmxlZCBieSBk
ZWZhdWx0KS4KKiBgLURSRVRERUNfVEVTVFM9T05gIHRvIGJ1aWxkIHdpdGgg
dGVzdHMgKGRpc2FibGVkIGJ5IGRlZmF1bHQpLgoqIGAtRFJFVERFQ19ERVZf
VE9PTFM9T05gIHRvIGJ1aWxkIHdpdGggZGV2ZWxvcG1lbnQgdG9vbHMgKGRp
c2FibGVkIGJ5IGRlZmF1bHQpLgoqIGAtRFJFVERFQ19GT1JDRV9PUEVOU1NM
X0JVSUxEPU9OYCB0byBmb3JjZSBPcGVuU1NMIGJ1aWxkIGV2ZW4gaWYgaXQg
aXMgaW5zdGFsbGVkIGluIHRoZSBzeXN0ZW0gKGRpc2FibGVkIGJ5IGRlZmF1
bHQpLgoqIGAtRFJFVERFQ19DT01QSUxFX1lBUkE9T0ZGYCB0byBkaXNhYmxl
IFlBUkEgcnVsZXMgY29tcGlsYXRpb24gYXQgaW5zdGFsbGF0aW9uIHN0ZXAg
KGVuYWJsZWQgYnkgZGVmYXVsdCkuCiogYC1EQ01BS0VfQlVJTERfVFlQRT1E
ZWJ1Z2AgdG8gYnVpbGQgd2l0aCBkZWJ1Z2dpbmcgaW5mb3JtYXRpb24sIHdo
aWNoIGlzIHVzZWZ1bCBkdXJpbmcgZGV2ZWxvcG1lbnQuIEJ5IGRlZmF1bHQs
IHRoZSBwcm9qZWN0IGlzIGJ1aWx0IGluIHRoZSBgUmVsZWFzZWAgbW9kZS4g
VGhpcyBoYXMgbm8gZWZmZWN0IG9uIFdpbmRvd3MsIGJ1dCB0aGUgc2FtZSB0
aGluZyBjYW4gYmUgYWNoaWV2ZWQgYnkgcnVubmluZyBgY21ha2UgLS1idWls
ZCAuYCB3aXRoIHRoZSBgLS1jb25maWcgRGVidWdgIHBhcmFtZXRlci4KKiBg
LURDTUFLRV9QUk9HUkFNX1BBVEg9PHBhdGg+YCB0byB1c2UgUGVybCBhdCBg
PHBhdGg+YCAocHJvYmFibHkgdXNlZnVsIG9ubHkgb24gV2luZG93cykuCiog
YC1EPGRlcD5fTE9DQUxfRElSPTxwYXRoPmAgd2hlcmUgYDxkZXA+YCBpcyBm
cm9tIGB7Q0FQU1RPTkUsIEVMRklPLCBHT09HTEVURVNULCBKU09OQ1BQLCBL
RVlTVE9ORSwgTElCRFdBUkYsIExMVk0sIFBFTElCLCBSQVBJREpTT04sIFRJ
TllYTUwsIFlBUkFDUFAsIFlBUkFNT0R9YCAoZS5nLiBgLURDQVBTVE9ORV9M
T0NBTF9ESVI9PHBhdGg+YCksIHRvIHVzZSB0aGUgbG9jYWwgcmVwb3NpdG9y
eSBjbG9uZSBhdCBgPHBhdGg+YCBmb3IgUmV0RGVjIGRlcGVuZGVuY3kgaW5z
dGVhZCBvZiBkb3dubG9hZGluZyBhIGZyZXNoIGNvcHkgYXQgYnVpbGQgdGlt
ZS4gTXVsdGlwbGUgc3VjaCBvcHRpb25zIG1heSBiZSB1c2VkIGF0IHRoZSBz
YW1lIHRpbWUuCiogYC1EUkVUREVDX0VOQUJMRV88Y29tcG9uZW50Pj1PTmAg
dG8gYnVpbGQgb25seSB0aGUgc3BlY2lmaWVkIGNvbXBvbmVudChzKSAobXVs
dGlwbGUgc3VjaCBvcHRpb25zIGNhbiBiZSB1c2VkIGF0IG9uY2UpLCBhbmQg
aXRzICh0aGVpcnMpIGRlcGVuZGVuY2llcy4gQnkgZGVmYXVsdCwgYWxsIHRo
ZSBjb21wb25lbnRzIGFyZSBidWlsdC4gSWYgYXQgbGVhc3Qgb25lIGNvbXBv
bmVudCBpcyBlbmFibGVkIHZpYSB0aGlzIG1lY2hhbmlzbSwgYWxsIHRoZSBv
dGhlciBjb21wb25lbnRzIHRoYXQgd2VyZSBub3QgZXhwbGljaXRseSBlbmFi
bGVkIChhbmQgYXJlIG5vdCBuZWVkZWQgYXMgZGVwZW5kZW5jaWVzIG9mIGVu
YWJsZWQgY29tcG9uZW50cykgYXJlIG5vdCBidWlsdC4gU2VlIFtjbWFrZS9v
cHRpb25zLmNtYWtlXShodHRwczovL2dpdGh1Yi5jb20vYXZhc3QvcmV0ZGVj
L2Jsb2IvbWFzdGVyL2NtYWtlL29wdGlvbnMuY21ha2UpIGZvciBhbGwgdGhl
IGF2YWlsYWJsZSBjb21wb25lbnQgb3B0aW9ucy4KICAqIGAtRFJFVERFQ19F
TkFCTEVfQUxMPU9OYCBjYW4gYmUgdXNlZCB0byAocmUtKWVuYWJsZSBhbGwg
dGhlIGNvbXBvbmVudHMuCiAgKiBBbHRlcm5hdGl2ZWx5LCBgLURSRVRERUNf
RU5BQkxFPTxjb21tYS1zZXBhcmF0ZWQgY29tcG9uZW50IGxpc3Q+YCBjYW4g
YmUgdXNlZCBpbnN0ZWFkIG9mIGAtRFJFVERFQ19FTkFCTEVfPGNvbXBvbmVu
dD49T05gIChlLmcuIGAtRFJFVERFQ19FTkFCTEU9ZmlsZWZvcm1hdCxsb2Fk
ZXIsY3R5cGVzcGFyc2VyYCBpcyBlcXVpdmFsZW50IHRvIGAtRFJFVERFQ19F
TkFCTEVfRklMRUZPUk1BVD1PTiAtRFJFVERFQ19FTkFCTEVfTE9BREVSPU9O
IC1EUkVUREVDX0VOQUJMRV9DVFlQRVNQQVJTRVI9T05gKS4KCiMjIEJ1aWxk
IGluIERvY2tlcgoKRG9ja2VyIHN1cHBvcnQgaXMgbWFpbnRhaW5lZCBieSBj
b21tdW5pdHkuIElmIHNvbWV0aGluZyBkb2VzIG5vdCB3b3JrIGZvciB5b3Ug
b3IgaWYgeW91IGhhdmUgc3VnZ2VzdGlvbnMgZm9yIGltcHJvdmVtZW50cywg
b3BlbiBhbiBpc3N1ZSBvciBQUi4KCiMjIyBCdWlsZCBJbWFnZQoKQnVpbGRp
bmcgaW4gRG9ja2VyIGRvZXMgbm90IHJlcXVpcmUgaW5zdGFsbGF0aW9uIG9m
IHRoZSByZXF1aXJlZCBsaWJyYXJpZXMgbG9jYWxseS4gVGhpcyBpcyBhIGdv
b2Qgb3B0aW9uIGZvciB0cnlpbmcgb3V0IFJldERlYyB3aXRob3V0IHNldHRp
bmcgdXAgdGhlIHdob2xlIGJ1aWxkIHRvb2xjaGFpbi4KClRvIGJ1aWxkIHRo
ZSBSZXREZWMgRG9ja2VyIGltYWdlLCBydW4KYGBgCmRvY2tlciBidWlsZCAt
dCByZXRkZWMgLSA8IERvY2tlcmZpbGUKYGBgCgpUaGlzIGJ1aWxkcyB0aGUg
aW1hZ2UgZnJvbSB0aGUgbWFzdGVyIGJyYW5jaCBvZiB0aGlzIHJlcG9zaXRv
cnkuCgpUbyBidWlsZCB0aGUgaW1hZ2UgdXNpbmcgdGhlIGxvY2FsIGNvcHkg
b2YgdGhlIHJlcG9zaXRvcnksIHVzZSB0aGUgZGV2ZWxvcG1lbnQgRG9ja2Vy
ZmlsZSwgYERvY2tlcmZpbGUuZGV2YDoKYGBgCmRvY2tlciBidWlsZCAtdCBy
ZXRkZWM6ZGV2IC4gLWYgRG9ja2VyZmlsZS5kZXYKYGBgCgojIyMgUnVuIENv
bnRhaW5lcgoKSWYgeW91ciBgdWlkYCBpcyBub3QgMTAwMCwgbWFrZSBzdXJl
IHRoYXQgdGhlIGRpcmVjdG9yeSBjb250YWluaW5nIHlvdXIgaW5wdXQgYmlu
YXJ5IGZpbGVzIGlzIGFjY2Vzc2libGUgZm9yIFJldERlYzoKYGBgCmNobW9k
IDA3NzcgL3BhdGgvdG8vbG9jYWwvZGlyZWN0b3J5CmBgYApOb3csIHlvdSBj
YW4gcnVuIHRoZSBkZWNvbXBpbGVyIGluc2lkZSBhIGNvbnRhaW5lcjoKYGBg
CmRvY2tlciBydW4gLS1ybSAtdiAvcGF0aC90by9sb2NhbC9kaXJlY3Rvcnk6
L2Rlc3RpbmF0aW9uIHJldGRlYyByZXRkZWMtZGVjb21waWxlci5weSAvZGVz
dGluYXRpb24vYmluYXJ5CmBgYApOb3RlOiBEbyBub3QgbW9kaWZ5IHRoZSBg
L2Rlc3RpbmF0aW9uYCBwYXJ0IGlzLiBZb3Ugb25seSBuZWVkIHRvIGNoYW5n
ZSBgL3BhdGgvdG8vbG9jYWwvZGlyZWN0b3J5YC4gT3V0cHV0IGZpbGVzIHdp
bGwgdGhlbiBiZSBnZW5lcmF0ZWQgdG8gYC9wYXRoL3RvL2xvY2FsL2RpcmVj
dG9yeWAuCgojIyBBdXRvbWF0ZWQgVGVhbUNpdHkgQnVpbGRzCgpPdXIgVGVh
bUNpdHkgc2VydmVycyBhcmUgY29udGludW91c2x5IGdlbmVyYXRpbmcgdXAt
dG8tZGF0ZSBSZXREZWMgcGFja2FnZXMgZnJvbSB0aGUgbGF0ZXN0IGNvbW1p
dCBpbiB0aGUgYG1hc3RlcmAgYnJhbmNoLiBUaGVzZSBhcmUgbW9zdGx5IG1l
YW50IHRvIGJlIHVzZWQgYnkgUmV0RGVjIGRldmVsb3BlcnMsIGNvbnRyaWJ1
dG9ycywgYW5kIG90aGVyIHBlb3BsZSBleHBlcmltZW50aW5nIHdpdGggdGhl
IHByb2R1Y3QgKGUuZy4gdGVzdGluZyBpZiBhbiBpc3N1ZSBwcmVzZW50IGlu
IHRoZSBvZmZpY2lhbCByZWxlYXNlIHN0aWxsIGV4aXN0cyBpbiB0aGUgY3Vy
cmVudCBgbWFzdGVyYCkuCgpZb3UgY2FuIHVzZSB0aGVzZSBhcyB5b3Ugd2lz
aCwgYnV0IGtlZXAgaW4gbWluZCB0aGF0IHRoZXJlIGFyZSBubyBndWFyYW50
ZWVzIHRoZXkgd2lsbCB3b3JrIG9uIHlvdXIgc3lzdGVtIChlc3BlY2lhbGx5
IHRoZSBMaW51eCB2ZXJzaW9uKSwgYW5kIHRoYXQgcmVncmVzc2lvbnMgYXJl
IGEgcG9zc2liaWxpdHkuIFRvIGdldCBhIHN0YWJsZSBSZXREZWMgdmVyc2lv
biwgZWl0aGVyIGRvd25sb2FkIHRoZSBsYXRlc3Qgb2ZmaWNpYWwgcHJlLWJ1
aWx0IHBhY2thZ2Ugb3IgYnVpbGQgdGhlIGxhdGVzdCBSZXREZWMgdmVyc2lv
biB0YWcuCgoqIFtXaW5kb3dzIFNlcnZlciAyMDE2LCB2ZXJzaW9uIDEwLjBd
KGh0dHBzOi8vcmV0ZGVjLXRjLmF2YXN0LmNvbS9yZXBvc2l0b3J5L2Rvd25s
b2FkL1JldGRlY19XaW5CdWlsZC8ubGFzdFN1Y2Nlc3NmdWwvcGFja2FnZS9y
ZXRkZWMtbWFzdGVyLXdpbmRvd3MtNjRiLnppcD9ndWVzdD0xKQoqIFtVYnVu
dHUgQmlvbmljIExpbnV4LCB2ZXJzaW9uIDE4LjA0XShodHRwczovL3JldGRl
Yy10Yy5hdmFzdC5jb20vcmVwb3NpdG9yeS9kb3dubG9hZC9SZXREZWNfTGlu
dXhCdWlsZC8ubGFzdFN1Y2Nlc3NmdWwvcGFja2FnZS9yZXRkZWMtbWFzdGVy
LWxpbnV4LTY0Yi56aXA/Z3Vlc3Q9MSkKKiBbTWFjIE9TIFgsIHZlcnNpb24g
MTAuMTQuNl0oaHR0cHM6Ly9yZXRkZWMtdGMuYXZhc3QuY29tL3JlcG9zaXRv
cnkvZG93bmxvYWQvUmV0ZGVjX01hY0J1aWxkLy5sYXN0U3VjY2Vzc2Z1bC9w
YWNrYWdlL3JldGRlYy1tYXN0ZXItbWFjb3MtNjRiLnppcD9ndWVzdD0xKQoK
IyMgUmVwb3NpdG9yeSBPdmVydmlldwoKVGhpcyByZXBvc2l0b3J5IGNvbnRh
aW5zIHRoZSBmb2xsb3dpbmcgbGlicmFyaWVzOgoqIGBhci1leHRyYWN0b3Jg
IC0gbGlicmFyeSBmb3IgZXh0cmFjdGluZyBvYmplY3QgZmlsZXMgZnJvbSBh
cmNoaXZlcyAoYmFzZWQgb24gTExWTSkuCiogYGJpbjJsbHZtaXJgIC0gbGli
cmFyeSBvZiBMTFZNIHBhc3NlcyBmb3IgdHJhbnNsYXRpbmcgYmluYXJpZXMg
aW50byBMTFZNIElSIG1vZHVsZXMuCiogYGNhcHN0b25lMmxsdm1pcmAgLSBi
aW5hcnkgaW5zdHJ1Y3Rpb25zIHRvIExMVk0gSVIgdHJhbnNsYXRpb24gbGli
cmFyeS4KKiBgY29uZmlnYCAtIGxpYnJhcnkgZm9yIHJlcHJlc2VudGluZyBh
bmQgbWFuYWdpbmcgUmV0RGVjIGNvbmZpZ3VyYXRpb24gZGF0YWJhc2VzLgoq
IGBjcGRldGVjdGAgLSBsaWJyYXJ5IGZvciBjb21waWxlciBhbmQgcGFja2Vy
IGRldGVjdGlvbiBpbiBiaW5hcmllcy4KKiBgY3J5cHRvYCAtIGNvbGxlY3Rp
b24gb2YgY3J5cHRvZ3JhcGhpYyBmdW5jdGlvbnMuCiogYGN0eXBlc2AgLSBD
KysgbGlicmFyeSBmb3IgcmVwcmVzZW50aW5nIEMgZnVuY3Rpb24gZGF0YSB0
eXBlcy4KKiBgZGVidWdmb3JtYXRgIC0gbGlicmFyeSBmb3IgdW5pZm9ybSBy
ZXByZXNlbnRhdGlvbiBvZiBEV0FSRiBhbmQgUERCIGRlYnVnZ2luZyBpbmZv
cm1hdGlvbi4KKiBgZGVtYW5nbGVyYCAtIGRlbWFuZ2xpbmcgbGlicmFyeSBj
YXBhYmxlIHRvIGhhbmRsZSBuYW1lcyBnZW5lcmF0ZWQgYnkgdGhlIEdDQy9D
bGFuZywgTWljcm9zb2Z0IFZpc3VhbCBDKyssIGFuZCBCb3JsYW5kIEMrKyBj
b21waWxlcnMuCiogYGR3YXJmcGFyc2VyYCAtIGxpYnJhcnkgZm9yIGhpZ2gt
bGV2ZWwgcmVwcmVzZW50YXRpb24gb2YgRFdBUkYgZGVidWdnaW5nIGluZm9y
bWF0aW9uLgoqIGBmaWxlZm9ybWF0YCAtIGxpYnJhcnkgZm9yIHBhcnNpbmcg
YW5kIHVuaWZvcm0gcmVwcmVzZW50YXRpb24gb2YgdmFyaW91cyBvYmplY3Qg
ZmlsZSBmb3JtYXRzLiBDdXJyZW50bHkgc3VwcG9ydGluZyB0aGUgZm9sbG93
aW5nIGZvcm1hdHM6IENPRkYsIEVMRiwgSW50ZWwgSEVYLCBNYWNoLU8sIFBF
LCByYXcgZGF0YS4KKiBgbGx2bS1zdXBwb3J0YCAtIHNldCBvZiBMTFZNIHJl
bGF0ZWQgdXRpbGl0eSBmdW5jdGlvbnMuCiogYGxsdm1pci1lbXVsYCAtIExM
Vk0gSVIgZW11bGF0aW9uIGxpYnJhcnkgdXNlZCBmb3IgdW5pdCB0ZXN0aW5n
LgoqIGBsbHZtaXIyaGxsYCAtIGxpYnJhcnkgZm9yIHRyYW5zbGF0aW5nIExM
Vk0gSVIgbW9kdWxlcyB0byBoaWdoLWxldmVsIHNvdXJjZSBjb2RlcyAoQywg
UHl0aG9uLWxpa2UgbGFuZ3VhZ2UpLgoqIGBsb2FkZXJgIC0gbGlicmFyeSBm
b3IgdW5pZm9ybSByZXByZXNlbnRhdGlvbiBvZiBiaW5hcmllcyBsb2FkZWQg
dG8gbWVtb3J5LiBTdXBwb3J0cyB0aGUgc2FtZSBmb3JtYXRzIGFzIGZpbGVm
b3JtYXQuCiogYG1hY2hvLWV4dHJhY3RvcmAgLSBsaWJyYXJ5IGZvciBleHRy
YWN0aW5nIHJlZ3VsYXIgTWFjaC1PIGJpbmFyaWVzIGZyb20gZmF0IE1hY2gt
TyBiaW5hcmllcyAoYmFzZWQgb24gTExWTSkuCiogYHBhdHRlcm5nZW5gIC0g
YmluYXJ5IHBhdHRlcm4gZXh0cmFjdG9yIGxpYnJhcnkuCiogYHBkYnBhcnNl
cmAgLSBNaWNyb3NvZnQgUERCIGZpbGVzIHBhcnNlciBsaWJyYXJ5LgoqIGBz
dGFjb2ZpbmAgLSBzdGF0aWMgY29kZSBmaW5kZXIgbGlicmFyeS4KKiBgdW5w
YWNrZXJgIC0gY29sbGVjdGlvbiBvZiB1bnBhY2tpbmcgZnVuY3Rpb25zLgoq
IGB1dGlsc2AgLSBnZW5lcmFsIEMrKyB1dGlsaXR5IGxpYnJhcnkuCgpUaGlz
IHJlcG9zaXRvcnkgY29udGFpbnMgdGhlIGZvbGxvd2luZyB0b29sczoKKiBg
YXItZXh0cmFjdG9ydG9vbGAgLSBmcm9udGVuZCBmb3IgdGhlIGFyLWV4dHJh
Y3RvciBsaWJyYXJ5IChpbnN0YWxsZWQgYXMgYHJldGRlYy1hci1leHRyYWN0
b3JgKS4KKiBgYmluMmxsdm1pcnRvb2xgIC0gZnJvbnRlbmQgZm9yIHRoZSBg
YmluMmxsdm1pcmAgbGlicmFyeSAoaW5zdGFsbGVkIGFzIGByZXRkZWMtYmlu
Mmxsdm1pcmApLgoqIGBiaW4ycGF0YCAtIHRvb2wgZm9yIGdlbmVyYXRpbmcg
cGF0dGVybnMgZnJvbSBiaW5hcmllcyAoaW5zdGFsbGVkIGFzIGByZXRkZWMt
YmluMnBhdGApLgoqIGBjYXBzdG9uZTJsbHZtaXJ0b29sYCAtIGZyb250ZW5k
IGZvciB0aGUgYGNhcHN0b25lMmxsdm1pcmAgbGlicmFyeSAoaW5zdGFsbGVk
IGFzIGByZXRkZWMtY2Fwc3RvbmUybGx2bWlyYCkuCiogYGNvbmZpZ3Rvb2xg
IC0gZnJvbnRlbmQgZm9yIHRoZSBgY29uZmlnYCBsaWJyYXJ5IChpbnN0YWxs
ZWQgYXMgYHJldGRlYy1jb25maWdgKS4KKiBgY3R5cGVzcGFyc2VyYCAtIEMr
KyBsaWJyYXJ5IGZvciBwYXJzaW5nIEMgZnVuY3Rpb24gZGF0YSB0eXBlcyBm
cm9tIEpTT04gZmlsZXMgaW50byBgY3R5cGVzYCByZXByZXNlbnRhdGlvbiAo
aW5zdGFsbGVkIGFzIGByZXRkZWMtY3R5cGVzcGFyc2VyYCkuCiogYGRlbWFu
Z2xlcl9ncmFtbWFyX2dlbmAgLS0gdG9vbCBmb3IgZ2VuZXJhdGluZyBuZXcg
Z3JhbW1hcnMgZm9yIHRoZSBgZGVtYW5nbGVyYCBsaWJyYXJ5IChpbnN0YWxs
ZWQgYXMgYHJldGRlYy1kZW1hbmdsZXItZ3JhbW1hci1nZW5gKS4KKiBgZGVt
YW5nbGVydG9vbGAgLS0gZnJvbnRlbmQgZm9yIHRoZSBgZGVtYW5nbGVyYCBs
aWJyYXJ5IChpbnN0YWxsZWQgYXMgYHJldGRlYy1kZW1hbmdsZXJgKS4KKiBg
ZmlsZWluZm9gIC0gYmluYXJ5IGFuYWx5c2lzIHRvb2wuIFN1cHBvcnRzIHRo
ZSBzYW1lIGZvcm1hdHMgYXMgYGZpbGVmb3JtYXRgIChpbnN0YWxsZWQgYXMg
YHJldGRlYy1maWxlaW5mb2ApLgoqIGBpZHIycGF0YCAtIHRvb2wgZm9yIGV4
dHJhY3RpbmcgcGF0dGVybnMgZnJvbSBJRFIga25vd2xlZGdlIGJhc2VzIChp
bnN0YWxsZWQgYXMgYHJldGRlYy1pZHIycGF0YCkuCiogYGxsdm1pcjJobGx0
b29sYCAtIGZyb250ZW5kIGZvciB0aGUgYGxsdm1pcjJobGxgIGxpYnJhcnkg
KGluc3RhbGxlZCBhcyBgcmV0ZGVjLWxsdm1pcjJobGxgKS4KKiBgbWFjaG8t
ZXh0cmFjdG9ydG9vbGAgLSBmcm9udGVuZCBmb3IgdGhlIGBtYWNoby1leHRy
YWN0b3JgIGxpYnJhcnkgKGluc3RhbGxlZCBhcyBgcmV0ZGVjLW1hY2hvLWV4
dHJhY3RvcmApLgoqIGBwYXQyeWFyYWAgLSB0b29sIGZvciBwcm9jZXNzaW5n
IHBhdHRlcm5zIHRvIFlBUkEgc2lnbmF0dXJlcyAoaW5zdGFsbGVkIGFzIGBy
ZXRkZWMtcGF0MnlhcmFgKS4KKiBgc3RhY29maW50b29sYCAtIGZyb250ZW5k
IGZvciB0aGUgYHN0YWNvZmluYCBsaWJyYXJ5IChpbnN0YWxsZWQgYXMgYHJl
dGRlYy1zdGFjb2ZpbmApLgoqIGB1bnBhY2tlcnRvb2xgIC0gcGx1Z2luLWJh
c2VkIHVucGFja2VyIChpbnN0YWxsZWQgYXMgYHJldGRlYy11bnBhY2tlcmAp
LgoKVGhpcyByZXBvc2l0b3J5IGNvbnRhaW5zIHRoZSBmb2xsb3dpbmcgc2Ny
aXB0czoKKiBgcmV0ZGVjLWRlY29tcGlsZXIucHlgIC0gdGhlIG1haW4gZGVj
b21waWxhdGlvbiBzY3JpcHQgYmluZGluZyBpdCBhbGwgdG9nZXRoZXIuIFRo
aXMgaXMgdGhlIHRvb2wgdG8gdXNlIGZvciBmdWxsIGJpbmFyeS10by1DIGRl
Y29tcGlsYXRpb25zLgoqIFN1cHBvcnQgc2NyaXB0cyB1c2VkIGJ5IGByZXRk
ZWMtZGVjb21waWxlci5weWA6CiAgKiBgcmV0ZGVjLWNvbG9yLWMucHlgIC0g
ZGVjb3JhdGVzIG91dHB1dCBDIHNvdXJjZXMgd2l0aCBJREEgY29sb3IgdGFn
cyAtIHN5bnRheCBoaWdobGlnaHRpbmcgZm9yIElEQS4KICAqIGByZXRkZWMt
Y29uZmlnLnB5YCAtIGRlY29tcGlsZXIncyBjb25maWd1cmF0aW9uIGZpbGUu
CiAgKiBgcmV0ZGVjLWFyY2hpdmUtZGVjb21waWxlci5weWAgLSBkZWNvbXBp
bGVzIG9iamVjdHMgaW4gdGhlIGdpdmVuIEFSIGFyY2hpdmUuCiAgKiBgcmV0
ZGVjLWZpbGVpbmZvLnB5YCAtIGEgRmlsZWluZm8gdG9vbCB3cmFwcGVyLgog
ICogYHJldGRlYy1zaWduYXR1cmUtZnJvbS1saWJyYXJ5LWNyZWF0b3IucHlg
IC0gZXh0cmFjdHMgZnVuY3Rpb24gc2lnbmF0dXJlcyBmcm9tIHRoZSBnaXZl
biBsaWJyYXJ5LgogICogYHJldGRlYy11bnBhY2tlci5weWAgLSB0cmllcyB0
byB1bnBhY2sgdGhlIGdpdmVuIGV4ZWN1dGFibGUgZmlsZSBieSB1c2luZyBh
bnkgb2YgdGhlIHN1cHBvcnRlZCB1bnBhY2tlcnMuCiAgKiBgcmV0ZGVjLXV0
aWxzLnB5YCAtIGEgY29sbGVjdGlvbiBvZiBQeXRob24gdXRpbGl0aWVzLgoq
IGByZXRkZWMtdGVzdHMtcnVubmVyLnB5YCAtIHJ1biBhbGwgdGVzdHMgaW4g
dGhlIHVuaXQgdGVzdCBkaXJlY3RvcnkuCiogYHR5cGVfZXh0cmFjdG9yYCAt
IGdlbmVyYXRpb24gb2YgdHlwZSBpbmZvcm1hdGlvbiAoZm9yIGludGVybmFs
IHVzZSBvbmx5KQoKIyMgUHJvamVjdCBEb2N1bWVudGF0aW9uCgpTZWUgdGhl
IFtwcm9qZWN0IGRvY3VtZW50YXRpb25dKGh0dHBzOi8vcmV0ZGVjLXRjLmF2
YXN0LmNvbS9yZXBvc2l0b3J5L2Rvd25sb2FkL1JldGRlY19Eb3h5Z2VuQnVp
bGQvLmxhc3RTdWNjZXNzZnVsL2J1aWxkL2RvYy9kb3h5Z2VuL2h0bWwvaW5k
ZXguaHRtbD9ndWVzdD0xKSBmb3IgYW4gdXAgdG8gZGF0ZSBEb3h5Z2VuLWdl
bmVyYXRlZCBzb2Z0d2FyZSByZWZlcmVuY2UgY29ycmVzcG9uZGluZyB0byB0
aGUgbGF0ZXN0IGNvbW1pdCBpbiB0aGUgYG1hc3RlcmAgYnJhbmNoLgoKIyMg
UmVsYXRlZCBSZXBvc2l0b3JpZXMKCiogW3JldGRlYy1pZGFwbHVnaW5dKGh0
dHBzOi8vZ2l0aHViLmNvbS9hdmFzdC9yZXRkZWMtaWRhcGx1Z2luKSAtLSBF
bWJlZHMgUmV0RGVjIGludG8gSURBIChJbnRlcmFjdGl2ZSBEaXNhc3NlbWJs
ZXIpIGFuZCBtYWtlcyBpdHMgdXNlIG11Y2ggZWFzaWVyLgoqIFtyZXRkZWMt
cmVncmVzc2lvbi10ZXN0cy1mcmFtZXdvcmtdKGh0dHBzOi8vZ2l0aHViLmNv
bS9hdmFzdC9yZXRkZWMtcmVncmVzc2lvbi10ZXN0cy1mcmFtZXdvcmspIC0t
IEEgZnJhbWV3b3JrIGZvciB3cml0aW5nIGFuZCBydW5uaW5nIHJlZ3Jlc3Np
b24gdGVzdHMgZm9yIFJldERlYyBhbmQgcmVsYXRlZCB0b29scy4gVGhpcyBp
cyBhIG11c3QgaWYgeW91IHBsYW4gdG8gY29udHJpYnV0ZSB0byB0aGUgUmV0
RGVjIHByb2plY3QuCiogW3JldGRlYy1yZWdyZXNzaW9uLXRlc3RzXShodHRw
czovL2dpdGh1Yi5jb20vYXZhc3QvcmV0ZGVjLXJlZ3Jlc3Npb24tdGVzdHMp
IC0tIEEgc3VpdGUgb2YgcmVncmVzc2lvbiB0ZXN0cyBmb3IgUmV0RGVjIGFu
ZCByZWxhdGVkIHRvb2xzLgoqIFt2aW0tc3ludGF4LXJldGRlY2RzbV0oaHR0
cHM6Ly9naXRodWIuY29tL3MzcnZhYy92aW0tc3ludGF4LXJldGRlY2RzbSkg
LS0gVmltIHN5bnRheC1oaWdobGlnaHRpbmcgZmlsZSBmb3IgdGhlIG91dHB1
dCBmcm9tIHRoZSBSZXREZWMncyBkaXNhc3NlbWJsZXIgKGAuZHNtYCBmaWxl
cykuCgojIyBMaWNlbnNlCgpDb3B5cmlnaHQgKGMpIDIwMTcgQXZhc3QgU29m
dHdhcmUsIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4gU2VlIHRo
ZSBbYExJQ0VOU0VgXShodHRwczovL2dpdGh1Yi5jb20vYXZhc3QvcmV0ZGVj
L2Jsb2IvbWFzdGVyL0xJQ0VOU0UpIGZpbGUgZm9yIG1vcmUgZGV0YWlscy4K
ClJldERlYyB1c2VzIHRoaXJkLXBhcnR5IGxpYnJhcmllcyBvciBvdGhlciBy
ZXNvdXJjZXMgbGlzdGVkLCBhbG9uZyB3aXRoIHRoZWlyIGxpY2Vuc2VzLCBp
biB0aGUgW2BMSUNFTlNFLVRISVJELVBBUlRZYF0oaHR0cHM6Ly9naXRodWIu
Y29tL2F2YXN0L3JldGRlYy9ibG9iL21hc3Rlci9MSUNFTlNFLVRISVJELVBB
UlRZKSBmaWxlLgoKIyMgQ29udHJpYnV0aW5nCgpTZWUgW1JldERlYyBjb250
cmlidXRpb24gZ3VpZGVsaW5lc10oaHR0cHM6Ly9naXRodWIuY29tL2F2YXN0
L3JldGRlYy93aWtpL0NvbnRyaWJ1dGlvbi1HdWlkZWxpbmVzKS4KCiMjIEFj
a25vd2xlZGdlbWVudHMKClRoaXMgc29mdHdhcmUgd2FzIHN1cHBvcnRlZCBi
eSB0aGUgcmVzZWFyY2ggZnVuZGluZyBUQUNSIChUZWNobm9sb2d5IEFnZW5j
eSBvZiB0aGUgQ3plY2ggUmVwdWJsaWMpLCBBTEZBIFByb2dyYW1tZSBOby4g
VEEwMTAxMDY2Ny4K
",,5082,"bGFuZ3VhZ2U6IGNwcAoKY2FjaGU6IGNjYWNoZQoKbWF0cml4OgogIGZhc3Rf
ZmluaXNoOiB0cnVlCiAgaW5jbHVkZToKICAgIC0gb3M6IGxpbnV4CiAgICAg
IGRpc3Q6IGJpb25pYwogICAgICBhZGRvbnM6CiAgICAgICAgYXB0OgogICAg
ICAgICAgcGFja2FnZXM6CiAgICAgICAgICAgIC0gYnVpbGQtZXNzZW50aWFs
CiAgICAgICAgICAgIC0gZ2NjLW11bHRpbGliCiAgICAgICAgICAgIC0gYXV0
b2NvbmYKICAgICAgICAgICAgLSBhdXRvbWFrZQogICAgICAgICAgICAtIGxp
YnRvb2wKICAgICAgICAgICAgLSBwa2ctY29uZmlnCiAgICAgICAgICAgIC0g
bTQKICAgICAgICAgICAgLSB6bGliMWctZGV2CiAgICAgICAgICAgIC0gb3Bl
bnNzbAogICAgICBlbnY6CiAgICAgICAgLSBNQVRSSVhfRVZBTD0iTlBST0M9
JChucHJvYykiCiAgICAgICAgIyBXZSBuZWVkIHRoaXMgc28gdGhhdCBjY2Fj
aGUgZG9lcyBub3QgY2F1c2UgY29tcGlsYXRpb24gZXJyb3JzLgogICAgICAg
ICMgZS5nLiByZXRkZWMvdGVzdHMvdXRpbHMvc3RyaW5nX3Rlc3RzLmNwcDoy
NzY6MjogZXJyb3I6IHN0cmF5ICdcJyBpbiBwcm9ncmFtCiAgICAgICAgLSBD
Q0FDSEVfQ1BQMj10cnVlCgogICAgLSBvczogb3N4CiAgICAgIG9zeF9pbWFn
ZTogeGNvZGUxMS4yCiAgICAgIGVudjoKICAgICAgICAtIE1BVFJJWF9FVkFM
PSJOUFJPQz0kKHN5c2N0bCAtbiBody5waHlzaWNhbGNwdSkiCiAgICAgICAg
LSBDQ0FDSEVfQ1BQMj10cnVlCgppbnN0YWxsOgogICMgY2NhY2hlIGlzIG5v
dCBpbnN0YWxsZWQgb24gT1MgWC4KICAtIGlmIFsgIiRUUkFWSVNfT1NfTkFN
RSIgPSAib3N4IiBdOyB0aGVuIGJyZXcgaW5zdGFsbCBjY2FjaGU7IGZpCiAg
IyBpbnN0YWxsIGZvciBvcyB4IHRoZSBnbnUgdGltZSBsaWJyYXJ5CiAgLSBp
ZiBbICIkVFJBVklTX09TX05BTUUiID0gIm9zeCIgXTsgdGhlbiBicmV3IGlu
c3RhbGwgZ251LXRpbWU7IGZpCiAgIyBpbnN0YWxsIGZvciBvcyB4IHRoZSBv
cGVuc3NsIGxpYnJhcnkKICAtIGlmIFsgIiRUUkFWSVNfT1NfTkFNRSIgPSAi
b3N4IiBdOyB0aGVuIGJyZXcgaW5zdGFsbCBvcGVuc3NsQDEuMTsgZXhwb3J0
IE9QRU5TU0xfUk9PVF9ESVI9L3Vzci9sb2NhbC9vcHQvb3BlbnNzbEAxLjE7
IGZpCgpiZWZvcmVfc2NyaXB0OgogIC0gZXZhbCAiJHtNQVRSSVhfRVZBTH0i
CiAgIyBXZSBuZWVkIHRvIGFkZCBjY2FjaGUgYmVmb3JlIGV2ZXJ5dGhpbmcg
ZWxzZSBpbnRvIFBBVEguCiAgLSBpZiBbICIkVFJBVklTX09TX05BTUUiID0g
Im9zeCIgXTsgdGhlbiBleHBvcnQgUEFUSD0iL3Vzci9sb2NhbC9vcHQvY2Nh
Y2hlL2xpYmV4ZWM6JFBBVEgiOyBmaQoKc2NyaXB0OgogIC0gbWtkaXIgYnVp
bGQgJiYgY2QgYnVpbGQKICAjIFdlIHVzZSAiLU8wIiB0byBzcGVlZCB1cCB0
aGUgYnVpbGQuCiAgIyAiLU8wIiBjYXVzZXMgc2VnZmF1bHRzIGluIExMVk0g
aWYgd2UgZG8gbm90IHVzZSAiLUROREVCVUciIGFzIHdlbGwuCiAgLSBjbWFr
ZSAtRENNQUtFX0NYWF9GTEFHU19SRUxFQVNFPSItTzAgLUROREVCVUciIC1E
Q01BS0VfQlVJTERfVFlQRT1SZWxlYXNlIC1EQ01BS0VfSU5TVEFMTF9QUkVG
SVg9IiQocHdkKS9pbnN0YWxsIiAtRFJFVERFQ19DT01QSUxFX1lBUkE9T0ZG
IC4uCiAgLSB0aW1lIG1ha2UgaW5zdGFsbCAtaiAkTlBST0MKICAjIENoZWNr
IHRoYXQgaW5zdGFsbCBpcyBtb3ZhYmxlIGFuZCB0aGF0IGl0IGRvZXMgbm90
IG5lZWQgdGhlIGJ1aWxkIGRpcmVjdG9yeS4KICAtIG12IGluc3RhbGwgLi4v
cmV0ZGVjLWluc3RhbGwKICAtIGNkIC4uCiAgLSBybSAtcmYgYnVpbGQKICAj
IFJ1biB0aGUgZGVjb21waWxhdGlvbiBzY3JpcHQuCiAgLSBweXRob24zIHJl
dGRlYy1pbnN0YWxsL2Jpbi9yZXRkZWMtZGVjb21waWxlci5weSAtLWhlbHAK
ICAjIFJ1biBhIHNpbXBsZSBkZWNvbXBpbGF0aW9uLgogIC0gZWNobyAtZSAn
I2luY2x1ZGUgPHN0ZGlvLmg+XG4jaW5jbHVkZSA8c3RkbGliLmg+XG5pbnQg
bWFpbigpXG57XG4gIHByaW50ZigiaGVsbG8gd29ybGRcXG4iKTtcbiAgcmV0
dXJuIDA7XG59XG4nID4gaGVsbG8tb3JpZy5jCiAgLSBjYXQgaGVsbG8tb3Jp
Zy5jCiAgLSBnY2MgLW8gaGVsbG8gaGVsbG8tb3JpZy5jCiAgLSAuL2hlbGxv
CiAgLSBweXRob24zIHJldGRlYy1pbnN0YWxsL2Jpbi9yZXRkZWMtZGVjb21w
aWxlci5weSBoZWxsbwogIC0gY2F0IGhlbGxvLmMKICAtIGdyZXAgImludCBt
YWluKGludCBhcmdjLCBjaGFyIFwqXCogYXJndikiIGhlbGxvLmMKCmJyYW5j
aGVzOgogIG9ubHk6CiAgICAjIFB1c2hlcyBhbmQgUFJzIHRvIHRoZSBtYXN0
ZXIgYnJhbmNoLgogICAgLSBtYXN0ZXIKICAgICMgVmVyc2lvbiB0YWdzLgog
ICAgLSAvXnY/XGQrXC5cZCsuKiQvCiAgICAjIFRlbXBvcmFyaWx5IGVuYWJs
ZSBidWlsZCBvZiB0aGlzIGJyYW5jaC4KICAgIC0gaXNzdWUtNjUwCgpub3Rp
ZmljYXRpb25zOgogIGVtYWlsOgogICAgb25fc3VjY2VzczogbmV2ZXIK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'graylog2-server',671825,b'Free and open source log management',b'Java',1014,5082,,268,False,b'https://api.github.com/repos/Graylog2/graylog2-server/forks',"IyBHcmF5bG9nCgpbIVtCdWlsZCBTdGF0dXNdKGh0dHBzOi8vdHJhdmlzLWNp
Lm9yZy9HcmF5bG9nMi9ncmF5bG9nMi1zZXJ2ZXIuc3ZnP2JyYW5jaD1tYXN0
ZXIpXShodHRwczovL3RyYXZpcy1jaS5vcmcvR3JheWxvZzIvZ3JheWxvZzIt
c2VydmVyKQpbIVtMaWNlbnNlXShodHRwczovL2ltZy5zaGllbGRzLmlvL2dp
dGh1Yi9saWNlbnNlL0dyYXlsb2cyL2dyYXlsb2cyLXNlcnZlci5zdmcpXSho
dHRwczovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2dwbC0zLjAudHh0KQpbIVtN
YXZlbiBDZW50cmFsXShodHRwczovL2ltZy5zaGllbGRzLmlvL21hdmVuLWNl
bnRyYWwvdi9vcmcuZ3JheWxvZzIvZ3JheWxvZzItc2VydmVyLnN2ZyldKGh0
dHA6Ly9tdm5yZXBvc2l0b3J5LmNvbS9hcnRpZmFjdC9vcmcuZ3JheWxvZzIv
Z3JheWxvZzItc2VydmVyKQoKV2VsY29tZSEgX0dyYXlsb2dfIGlzIGFuIG9w
ZW4gc291cmNlIGxvZyBtYW5hZ2VtZW50IHBsYXRmb3JtLgoKWW91IGNhbiBy
ZWFkIG1vcmUgYWJvdXQgdGhlIHByb2plY3Qgb24gb3VyIFt3ZWJzaXRlXSho
dHRwczovL3d3dy5ncmF5bG9nLm9yZy8pIGFuZCBjaGVjayBvdXQgdGhlIFtk
b2N1bWVudGF0aW9uXShodHRwOi8vZG9jcy5ncmF5bG9nLm9yZy8pIG9uIHRo
ZSBkb2N1bWVudGF0aW9uIHNpdGUuCgoKIyMgSXNzdWUgVHJhY2tpbmcKCkZv
dW5kIGEgYnVnPyBIYXZlIGFuIGlkZWEgZm9yIGFuIGltcHJvdmVtZW50PyBG
ZWVsIGZyZWUgdG8gW2FkZCBhbiBpc3N1ZV0oLi4vLi4vaXNzdWVzKS4KCgoj
IyBDb250cmlidXRpbmcKCkhlbHAgdXMgYnVpbGQgdGhlIGZ1dHVyZSBvZiBs
b2cgbWFuYWdlbWVudCBhbmQgYmUgcGFydCBvZiBhIHByb2plY3QgdGhhdCBp
cyB1c2VkIGJ5IHRob3VzYW5kcyBvZiBwZW9wbGUgb3V0IHRoZXJlIGV2ZXJ5
IGRheS4KCkZvbGxvdyB0aGUgW2NvbnRyaWJ1dG9ycyBndWlkZV0oaHR0cHM6
Ly93d3cuZ3JheWxvZy5vcmcvY29tbXVuaXR5KSBhbmQgcmVhZCBbdGhlIGNv
bnRyaWJ1dGluZyBpbnN0cnVjdGlvbnNdKENPTlRSSUJVVElORy5tZCkgdG8g
Z2V0IHN0YXJ0ZWQuCgpEbyB5b3Ugd2FudCB0byBnZXQgcGFpZCBmb3IgZGV2
ZWxvcGluZyBvdXIgb3BlbiBzb3VyY2UgcHJvZHVjdD8gQXBwbHkgZm9yIG9u
ZSBvZiBvdXIgW2pvYnNdKGh0dHBzOi8vd3d3LmdyYXlsb2cub3JnL2NhcmVl
cnMpIQoKIyMgU3RheWluZyBpbiBUb3VjaAoKQ29tZSBjaGF0IHdpdGggdXMg
aW4gdGhlIFtgI2dyYXlsb2dgIGNoYW5uZWwgb24gZnJlZW5vZGUgSVJDXSho
dHRwczovL3dlYmNoYXQuZnJlZW5vZGUubmV0Lz9jaGFubmVscz0lMjNncmF5
bG9nKSBvciBjcmVhdGUgYSB0b3BpYyBpbiBvdXIgW2NvbW11bml0eSBkaXNj
dXNzaW9uIGZvcnVtc10oaHR0cHM6Ly9jb21tdW5pdHkuZ3JheWxvZy5vcmcv
KS4KCiMjIExpY2Vuc2UKCl9HcmF5bG9nXyBpcyByZWxlYXNlZCB1bmRlciB2
ZXJzaW9uIDMuMCBvZiB0aGUgW0dOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNl
XShDT1BZSU5HKS4K
",,5082,"c3VkbzogcmVxdWlyZWQKZGlzdDogdHJ1c3R5Cmxhbmd1YWdlOiBqYXZhCmpk
azoKICAtIG9yYWNsZWpkazgKY2FjaGU6CiAgZGlyZWN0b3JpZXM6CiAgICAt
ICRIT01FLy5tMgpub3RpZmljYXRpb25zOgogIHNsYWNrOgogICAgb25fc3Vj
Y2VzczogY2hhbmdlCiAgICBvbl9mYWlsdXJlOiBhbHdheXMKICAgIHJvb21z
OgogICAgICBzZWN1cmU6IHwtCiAgICAgICAgZzZHcGoybjFCbDZoSXdXbHl3
RWt3OHdSanBOMlh1RnN4RnI5S1F1L3A3bVJMWVBkRjNWNXFRUFZMQlJkCiAg
ICAgICAgS3ZrakNJTTdnWnkyRFRSTlVvb1FQWGRKQjNucGJubGJRbjRqTldx
QTcvZnA0MzRTdzVzZGZTVU1hd0dyCiAgICAgICAgWHZlbUx2bjBLeFF4Q085
R2ZOM3dmbVl4RVdKd1hPMzZRMjlCblJXV2dNUU9YcEZGRDhBPQpiZWZvcmVf
c2NyaXB0OgogIC0gc3VkbyBzeXNjdGwgLXcgdm0ubWF4X21hcF9jb3VudD0y
NjIxNDQKc2NyaXB0OgogIC0gbXZuIC1CIHZlcmlmeSAtRGl0LkVsYXN0aWNz
ZWFyY2hWZXJzaW9uPSR7R1JBWUxPR19FTEFTVElDU0VBUkNIX1ZFUlNJT059
CmFmdGVyX3N1Y2Nlc3M6CiAgLSBtdm4gLUIgLURtYXZlbi50ZXN0LnNraXA9
dHJ1ZSAtRHNraXAud2ViLmJ1aWxkPXRydWUgYXNzZW1ibHk6c2luZ2xlCiAg
LSBtdm4gLUIgLURtYXZlbi50ZXN0LnNraXA9dHJ1ZSAtRHNraXAud2ViLmJ1
aWxkPXRydWUgLS1zZXR0aW5ncyBjb25maWcvc2V0dGluZ3MueG1sIGRlcGxv
eQpkZXBsb3k6CiAgcHJvdmlkZXI6IHMzCiAgYWNjZXNzX2tleV9pZDogQUtJ
QUlHWUdPNDNXNzZQWk1NVkEKICBzZWNyZXRfYWNjZXNzX2tleToKICAgIHNl
Y3VyZTogY1lIc01nbkFJMDhzejlHMVFiN2t1MkhvVGFTbi9PQkJtakJ6eVlz
d1gwL0t2YjJhc1FjRUdaR09FZllOVEdPd2RONkRQN3AzYXhpNW8rRlB3Mk1M
R0dwQlZ6M3RBdHdZV1RiekpSOGtDRXVHd2I4TjZhYnBka0dJbjRBZmlmUSt2
Ym44ekpySUI2SGZHR1JwRE05UW5FakpGdHBKTysyU2pPRHpiWnpreW1FPQog
IGJ1Y2tldDogZ3JheWxvZzItYnVpbGRzCiAgcmVnaW9uOiBldS13ZXN0LTEK
ICBza2lwX2NsZWFudXA6IHRydWUKICBsb2NhbC1kaXI6IHRhcmdldC9hc3Nl
bWJseQogIG9uOgogICAgcmVwbzogR3JheWxvZzIvZ3JheWxvZzItc2VydmVy
CiAgICBqZGs6IG9yYWNsZWpkazgKICAgIGJyYW5jaDoKICAgICAgLSBtYXN0
ZXIKICAgICAgLSAxLjAKICAgICAgLSAxLjEKICAgICAgLSAxLjIKICAgICAg
LSAxLjMKICAgICAgLSAyLjAKICAgICAgLSAyLjEKICAgICAgLSAyLjIKICAg
ICAgLSAyLjMKICAgICAgLSAyLjQKZW52OgogIGdsb2JhbDoKICAtIHNlY3Vy
ZTogTVlad1V3RmtId1dmSjc5Skt5REs4VnJZVmNzYXg0dCs3YXRNTExWTkk0
Q0R4VFdaelI0cUZHVWZhdWYrN2ZERW1uR1liTUhEUlNuenpoVnRTUjBaU3V2
V29Ta1ordjYyQVNtU2ZnbHpJMkdjTUQvVkJSRXErOVRsTGFzU0lhK3dSNjBW
dmdZd3hKbmF3d0psVjZzYmptZXRUNk1XdWc3L2ljZGk1S2dmRGxRPQogIC0g
c2VjdXJlOiByMGVuVmxHQlBqcWFHZk5yRDFiNll4Z1JhU3AvdjM5Wk1LUUZz
L0MwUnRSS2xpWjVMVm83a1M0bEwwdExRb3FNQVhKZWwwTmdzVkg2ajFQNjQy
OHVMUUR4cUttQ3NOWmlYMFZTOUszWjBpcTVORzR4LzVRaWR4eVhqSGVmU0dt
cHF1TG1aYk0wOTR4aHR2ZG91M05FZmtKVEtieEh1M01MOWk5U2NNbjUrdkE9
CiAgLSBzZWN1cmU6ICJPaXFwZVVGVlhPL3NXZFNBNFdaSXJLNVV2VlVONGxH
NVlXbTQxZTFQKzZsdk9BSHBXZXlYNmZJczlOZHoxMlZpby9XbHQwM2l4ekNB
Ty82N1VXNFhHdi9lM3RDbG12T1NLdDgxMU1sOHd1M0FMTXhkVjIyMThPa0ZY
R3pROEFPbklSSzFBQWxuM0pkdkJNSGo4d0ZvVW1HQmFISjdvZHFPeHUzV0M0
bTBYcjA9IgogIG1hdHJpeDoKICAtIEdSQVlMT0dfRUxBU1RJQ1NFQVJDSF9W
RVJTSU9OPTUK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"b246IGlzc3VlX2NvbW1lbnQKbmFtZTogQXV0b21hdGljIFJlYmFzZQpqb2Jz
OgogIHJlYmFzZToKICAgIG5hbWU6IFJlYmFzZQogICAgcnVucy1vbjogdWJ1
bnR1LWxhdGVzdAogICAgc3RlcHM6CiAgICAtIHVzZXM6IGFjdGlvbnMvY2hl
Y2tvdXRAbWFzdGVyCiAgICAtIG5hbWU6IEF1dG9tYXRpYyBSZWJhc2UKICAg
ICAgdXNlczogR3JheWxvZzIvcmViYXNlQDEuMgogICAgICBlbnY6CiAgICAg
ICAgR0lUSFVCX1RPS0VOOiAke3sgc2VjcmV0cy5HSVRIVUJfVE9LRU4gfX0K
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'blendid',15813955,b'A delicious blend of gulp tasks combined into a configurable asset pipeline and static site builder',b'JavaScript',74,5082,,168,False,b'https://api.github.com/repos/vigetlabs/blendid/forks',"IyAhW0JsZW5kaWRdKGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNv
bS92aWdldGxhYnMvYmxlbmRpZC9tYXN0ZXIvYmxlbmRpZC1sb2dvLnBuZykK
ClshW0J1aWxkIFN0YXR1c10oaHR0cHM6Ly90cmF2aXMtY2kub3JnL3ZpZ2V0
bGFicy9ibGVuZGlkLnN2Zz9icmFuY2g9c3RhdGljLXNlcnZlcildKGh0dHBz
Oi8vdHJhdmlzLWNpLm9yZy92aWdldGxhYnMvYmxlbmRpZCkKCioqQmxlbmRp
ZCoqIGlzIGEgZGVsaWNpb3VzIHN0YW5kLWFsb25lIGJsZW5kIG9mIHRhc2tz
IGFuZCBidWlsZCB0b29scyBwb3VyZWQgdG9nZXRoZXIgYXMgYSBmdWxsLWZl
YXR1cmVkIG1vZGVybiBhc3NldCBwaXBlbGluZS4gSXQgY2FuIGJlIHVzZWQg
YXMtaXMgYXMgYSBzdGF0aWMgc2l0ZSBidWlsZGVyLCBvciBjYW4gYmUgY29u
ZmlndXJlZCBhbmQgaW50ZWdyYXRlZCBpbnRvIHlvdXIgb3duIGRldmVsb3Bt
ZW50IGVudmlyb25tZW50IGFuZCBzaXRlIG9yIGFwcCBzdHJ1Y3R1cmUuCgoj
IyBRdWljayBzdGFydCBvbiBhIGZyZXNoIHByb2plY3QgKGVtcHR5IGRpcmVj
dG9yeSkKYGBgYmFzaAp5YXJuIGluaXQKeWFybiBhZGQgYmxlbmRpZAp5YXJu
IHJ1biBibGVuZGlkIGluaXQKeWFybiBydW4gYmxlbmRpZApgYGAKClRoaXMg
d2lsbCBjcmVhdGUgZGVmYXVsdCBzcmMgYW5kIGNvbmZpZyBmaWxlcyBpbiB5
b3VyIGRpcmVjdG9yeSBhbmQgc3RhcnQgY29tcGlsaW5nIGFuZCBsaXZlLXVw
ZGF0aW5nIGZpbGVzISBUcnkgZWRpdGluZyB0aGVtIGFuZCB3YXRjaCB5b3Vy
IGJyb3dzZXIgYXV0by11cGRhdGUhCgojIyBEb2N1bWVudGF0aW9uCgpbRnVs
bCBkb2N1bWVudGF0aW9uIGlzIGF2YWlsYWJsZSBvbiB0aGUgV2lraV0oaHR0
cHM6Ly9naXRodWIuY29tL3ZpZ2V0bGFicy9ibGVuZGlkL3dpa2kpCgoqKioK
CjxhIGhyZWY9Imh0dHA6Ly9jb2RlLnZpZ2V0LmNvbSI+CiAgPGltZyBzcmM9
Imh0dHA6Ly9jb2RlLnZpZ2V0LmNvbS9naXRodWItYmFubmVyLnBuZyIgYWx0
PSJDb2RlIEF0IFZpZ2V0Ij4KPC9hPgoKVmlzaXQgW2NvZGUudmlnZXQuY29t
XShodHRwOi8vY29kZS52aWdldC5jb20pIHRvIHNlZSBtb3JlIHByb2plY3Rz
IGZyb20gW1ZpZ2V0Ll0oaHR0cHM6Ly92aWdldC5jb20pCg==
",,5082,"bGFuZ3VhZ2U6IG5vZGVfanMKZW52OiBUUkFWSVNfQ0k9dHJ1ZQpub2RlX2pz
OgogIC0gIjYuMTEuMSIKICAtICI3LjIuMCIKICAtICI4LjAuMCIKZGlzdDog
eGVuaWFsCnNlcnZpY2VzOgogIC0geHZmYgpzY3JpcHQ6CiAgLSB5YXJuIHJ1
biBkZXY6dGVzdAogIC0geWFybiBydW4gYnVpbGQK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'vulhub',87699760,b'Pre-Built Vulnerable Environments Based on Docker-Compose',b'Shell',13,5082,,400,False,b'https://api.github.com/repos/vulhub/vulhub/forks',"IyBWdWxodWIgLSBQcmUtQnVpbHQgVnVsbmVyYWJsZSBFbnZpcm9ubWVudHMg
QmFzZWQgb24gRG9ja2VyLUNvbXBvc2UKClshW0RvY2tlciBTdGFyc10oaHR0
cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS9kb2NrZXIlMjBzdGFycy0yMGst
Ymx1ZS5zdmcpXShodHRwczovL2h1Yi5kb2NrZXIuY29tL3UvdnVsaHViLykg
WyFbR2l0SHViXShodHRwczovL2ltZy5zaGllbGRzLmlvL2dpdGh1Yi9saWNl
bnNlL3Z1bGh1Yi92dWxodWIuc3ZnKV0oaHR0cHM6Ly9naXRodWIuY29tL3Z1
bGh1Yi92dWxodWIvYmxvYi9tYXN0ZXIvTElDRU5TRSkKIFshW0NoYXQgb24g
RGlzY29yZF0oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9kaXNjb3JkLzQ4NTUw
NTE4NTE2NzE3OTc3OC5zdmcpXShodHRwczovL2Rpc2NvcmQuZ2cvR2hNQjNa
KSBbIVtCYWNrZXJzIGFuZCBzcG9ub3JzIG9uIFBhdHJlb25dKGh0dHBzOi8v
aW1nLnNoaWVsZHMuaW8vYmFkZ2Uvc3BvbnNvci1wYXRyZW9uLTczZDZhMS5z
dmcpXShodHRwczovL3d3dy5wYXRyZW9uLmNvbS9waGl0aDBuKSBbIVtCYWNr
ZXJzIGFuZCBzcG9ub3JzIG9uIE9wZW5jb2xsZWN0aXZlXShodHRwczovL2lt
Zy5zaGllbGRzLmlvL2JhZGdlL2JhY2tlci1vcGVuY29sbGVjdGl2ZS1mODlh
NzYuc3ZnKV0oaHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20vdnVsaHViI2Jh
Y2tlcikKClvkuK3mlofniYjmnKwoQ2hpbmVzZSB2ZXJzaW9uKV0oUkVBRE1F
LnpoLWNuLm1kKQoKIFZ1bGh1YiBpcyBhbiBvcGVuLXNvdXJjZSBjb2xsZWN0
aW9uIG9mIHByZS1idWlsdCB2dWxuZXJhYmxlIGRvY2tlciBlbnZpcm9ubWVu
dHMuIE5vIHByZS1leGlzdGluZyBrbm93bGVkZ2Ugb2YgZG9ja2VyIGlzIHJl
cXVpcmVkLCBqdXN0IGV4ZWN1dGUgdHdvIHNpbXBsZSBjb21tYW5kcyBhbmQg
eW91IGhhdmUgYSB2dWxuZXJhYmxlIGVudmlyb25tZW50LgoKIyMgSW5zdGFs
bGF0aW9uCgpJbnN0YWxsIHRoZSBkb2NrZXIvZG9ja2VyLWNvbXBvc2Ugb24g
VWJ1bnR1IDE2LjA0OgoKYGBgYmFzaAojIEluc3RhbGwgcGlwCmN1cmwgLXMg
aHR0cHM6Ly9ib290c3RyYXAucHlwYS5pby9nZXQtcGlwLnB5IHwgcHl0aG9u
MwoKIyBJbnN0YWxsIHRoZSBsYXRlc3QgdmVyc2lvbiBkb2NrZXIKY3VybCAt
cyBodHRwczovL2dldC5kb2NrZXIuY29tLyB8IHNoCgojIFJ1biBkb2NrZXIg
c2VydmljZQpzZXJ2aWNlIGRvY2tlciBzdGFydAoKIyBJbnN0YWxsIGRvY2tl
ciBjb21wb3NlCnBpcCBpbnN0YWxsIGRvY2tlci1jb21wb3NlCmBgYAoKVGhl
IGluc3RhbGxhdGlvbiBzdGVwcyBvZiBkb2NrZXIgYW5kIGRvY2tlci1jb21w
b3NlIGZvciBvdGhlciBvcGVyYXRpbmcgc3lzdGVtcyBtaWdodCBiZSBzbGln
aHRseSBkaWZmZXJlbnQsIHBsZWFzZSByZWZlciB0byB0aGUgW2RvY2tlciBk
b2N1bWVudGF0aW9uXShodHRwczovL2RvY3MuZG9ja2VyLmNvbS8pIGZvciBk
ZXRhaWxzLgoKIyMgVXNhZ2UKCmBgYGJhc2gKIyBEb3dubG9hZCBwcm9qZWN0
CndnZXQgaHR0cHM6Ly9naXRodWIuY29tL3Z1bGh1Yi92dWxodWIvYXJjaGl2
ZS9tYXN0ZXIuemlwIC1PIHZ1bGh1Yi1tYXN0ZXIuemlwCnVuemlwIHZ1bGh1
Yi1tYXN0ZXIuemlwCmNkIHZ1bGh1Yi1tYXN0ZXIKCiMgRW50ZXIgdGhlIGRp
cmVjdG9yeSBvZiB2dWxuZXJhYmlsaXR5L2Vudmlyb25tZW50CmNkIGZsYXNr
L3NzdGkKCiMgQ29tcGlsZSBlbnZpcm9ubWVudApkb2NrZXItY29tcG9zZSBi
dWlsZAoKIyBSdW4gZW52aXJvbm1lbnQKZG9ja2VyLWNvbXBvc2UgdXAgLWQK
YGBgCgpUaGVyZSBpcyBhICoqUkVBRE1FKiogZG9jdW1lbnQgaW4gZWFjaCBl
bnZpcm9ubWVudCBkaXJlY3RvcnksIHBsZWFzZSByZWFkIHRoaXMgZmlsZSBm
b3IgdnVsbmVyYWJpbGl0eS9lbnZpcm9ubWVudCB0ZXN0aW5nIGFuZCB1c2Fn
ZS4KCkFmdGVyIHRoZSB0ZXN0LCBkZWxldGUgdGhlIGVudmlyb25tZW50IHdp
dGggdGhlIGZvbGxvd2luZyBjb21tYW5kLgpgYGAKZG9ja2VyLWNvbXBvc2Ug
ZG93biAtdgpgYGAKCkl0IGlzIHJlY29tbWVuZGVkIHRvIHVzZSBhIFZQUyBv
ZiBhdCBsZWFzdCAxR0IgbWVtb3J5IHRvIGJ1aWxkIGEgdnVsbmVyYWJpbGl0
eSBlbnZpcm9ubWVudC4gVGhlIGB5b3VyLWlwYCBtZW50aW9uZWQgaW4gdGhl
IGRvY3VtZW50YXRpb24gcmVmZXJzIHRvIHRoZSBJUCBhZGRyZXNzIG9mIHlv
dXIgVlBTLiBJZiB5b3UgYXJlIHVzaW5nIGEgdmlydHVhbCBtYWNoaW5lLCBp
dCByZWZlcnMgdG8geW91ciB2aXJ0dWFsIG1hY2hpbmUgSVAsIG5vdCB0aGUg
SVAgaW5zaWRlIHRoZSBkb2NrZXIgY29udGFpbmVyLgoKKipBbGwgZW52aXJv
bm1lbnRzIGluIHRoaXMgcHJvamVjdCBhcmUgZm9yIHRlc3RpbmcgcHVycG9z
ZXMgb25seSBhbmQgc2hvdWxkIG5vdCBiZSB1c2VkIGFzIGEgcHJvZHVjdGlv
biBlbnZpcm9ubWVudCEqKgoKIyMgTm90aWNlCgoxLiBUbyBwcmV2ZW50IHBl
cm1pc3Npb24gZXJyb3JzLCBpdCBpcyBiZXN0IHRvIHVzZSB0aGUgcm9vdCB1
c2VyIHRvIGV4ZWN1dGUgdGhlIGRvY2tlciBhbmQgZG9ja2VyLWNvbXBvc2Ug
Y29tbWFuZHMuCjIuIFNvbWUgZG9ja2VyIGltYWdlcyBkbyBub3Qgc3VwcG9y
dCBydW5uaW5nIG9uIEFSTSBtYWNoaW5lcy4KCiMjIENvbnRyaWJ1dGlvbgoK
VGhpcyBwcm9qZWN0IHJlbGllcyBvbiBkb2NrZXIuIFNvIGFueSBlcnJvciBk
dXJpbmcgY29tcGlsYXRpb24gYW5kIHJ1bm5pbmcgYXJlIHRocm93biBieSBk
b2NrZXIgYW5kIHJlbGF0ZWQgcHJvZ3JhbXMuIFBsZWFzZSBmaW5kIHRoZSBj
YXVzZSBvZiB0aGUgZXJyb3IgYnkgeW91cnNlbGYgZmlyc3QuIElmIGl0IGlz
IGRldGVybWluZWQgdGhhdCB0aGUgZG9ja2VyZmlsZSBpcyB3cml0dGVuIGlu
Y29ycmVjdGx5IChvciB0aGUgY29kZSBpcyB3cm9uZyBpbiB2dWxodWIpLCB0
aGVuIHN1Ym1pdCB0aGUgaXNzdWUuIE1vcmUgZGV0YWlscyBwbGVhc2Ug8J+R
iVtDb21tb24gcmVhc29ucyBmb3IgY29tcGlsYXRpb24gZmFpbHVyZV0oaHR0
cHM6Ly9naXRodWIuY29tL3BoaXRoMG4vdnVsaHViL3dpa2kvJUU3JUJDJTk2
JUU4JUFGJTkxJUU1JUE0JUIxJUU4JUI0JUE1JUU3JTlBJTg0JUU1JThFJTlG
JUU1JTlCJUEwKSwgaG9wZSBpdCBjYW4gaGVscCB5b3UuCgpGb3IgbW9yZSBx
dWVzdGlvbiwgcGxlYXNlIGNvbnRhY3Q6CgotIFtEaXNjb3JkXShodHRwczov
L2Rpc2NvcmQuZ2cvR2hNQjNaKQotIFtUd2l0dGVyXShodHRwczovL3R3aXR0
ZXIuY29tL3Z1bGh1YikKClRoYW5rcyBmb3IgdGhlIGZvbGxvd2luZyBjb250
cmlidXRvcnM6CgpbIVtdKGh0dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL3Z1
bGh1Yi9jb250cmlidXRvcnMuc3ZnP3dpZHRoPTg5MCZidXR0b249ZmFsc2Up
XShodHRwczovL2dpdGh1Yi5jb20vdnVsaHViL3Z1bGh1Yi9ncmFwaHMvY29u
dHJpYnV0b3JzKQoKTW9yZSBjb250cmlidXRvcnPvvJpbQ29udHJpYnV0b3Jz
IExpc3RdKGNvbnRyaWJ1dG9ycy5tZCkKCiMjIEJhY2tlciBhbmQgU3BvbnNv
cgoKU3BvbnNvcjoKCjxwPgogIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNoYWl0
aW4uY24iIHRhcmdldD0iX2JsYW5rIj48aW1nIHNyYz0iaHR0cHM6Ly92dWxo
dWIub3JnL2ltZy9zcG9uc29yL2NoYWl0aW4ucG5nIiB3aWR0aD0iMjAwIj48
L2E+CiAgPGEgaHJlZj0iaHR0cHM6Ly94aWFuemhpLmFsaXl1bi5jb20vIiB0
YXJnZXQ9Il9ibGFuayI+PGltZyBzcmM9Imh0dHBzOi8vdnVsaHViLm9yZy9p
bWcvc3BvbnNvci9hbGl5dW4uc3ZnIiB3aWR0aD0iMjAwIj48L2E+CiAgPGEg
aHJlZj0iaHR0cHM6Ly93d3cuZGlkaXl1bi5jb20vP2NoYW5uZWw9MTQxOTYi
IHRhcmdldD0iX2JsYW5rIj48aW1nIHNyYz0iaHR0cHM6Ly92dWxodWIub3Jn
L2ltZy9zcG9uc29yL2RpZGkucG5nIiB3aWR0aD0iMjAwIj48L2E+CjwvcD4K
ClNwb25zb3IgdnVsaHViIG9uIHBhdHJlb24g8J+ZjwoKPGEgaHJlZj0iaHR0
cHM6Ly93d3cucGF0cmVvbi5jb20vYmVQYXRyb24/dT0xMjY3NzUyMCI+PGlt
ZyBzcmM9Imh0dHBzOi8vdnVsaHViLm9yZy9pbWcvc3BvbnNvci9wYXRyZW9u
LnBuZyIgd2lkdGg9IjE1MCI+PC9hPgoKU3BvbnNvciB2dWxodWIgb24gb3Bl
bmNvbGxlY3RpdmUg8J+ZjwoKPHA+CiAgPGEgaHJlZj0iaHR0cHM6Ly9vcGVu
Y29sbGVjdGl2ZS5jb20vdnVsaHViI2JhY2tlciI+PGltZyBzcmM9Imh0dHBz
Oi8vb3BlbmNvbGxlY3RpdmUuY29tL3Z1bGh1Yi9iYWNrZXJzLnN2Zz93aWR0
aD0xMzgiPjwvYT4KICA8YSBocmVmPSJodHRwczovL29wZW5jb2xsZWN0aXZl
LmNvbS92dWxodWIjc3BvbnNvciI+PGltZyBzcmM9Imh0dHBzOi8vb3BlbmNv
bGxlY3RpdmUuY29tL3Z1bGh1Yi9zcG9uc29ycy5zdmc/d2lkdGg9MTM4Ij48
L2E+CjwvcD4KCk1vcmVbRG9uYXRlXShodHRwOi8vdnVsaHViLm9yZy8jL2Rv
Y3MvZG9uYXRlLynjgIIKCiMjIExpY2Vuc2UKClZ1bGh1YiBpcyBsaWNlbnNl
ZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBbTElDRU5TRV0oTElDRU5T
RSkgZm9yIHRoZSBmdWxsIGxpY2Vuc2UgdGV4dC4K
",,5082,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'python-machine-learning-book-2nd-edition',81413897,"b'The ""Python Machine Learning (2nd edition)"" book code repository and info resource'",b'Jupyter Notebook',25,5081,,348,False,b'https://api.github.com/repos/rasbt/python-machine-learning-book-2nd-edition/forks',"IyMgUHl0aG9uIE1hY2hpbmUgTGVhcm5pbmcgKDJuZCBFZC4pIENvZGUgUmVw
b3NpdG9yeQoKWyFbQnVpbGQgU3RhdHVzXShodHRwczovL3RyYXZpcy1jaS5j
b20vcmFzYnQvcHl0aG9uLW1hY2hpbmUtbGVhcm5pbmctYm9vay0ybmQtZWRp
dGlvbi5zdmc/dG9rZW49enZTc0pWTEpGS3pCMnlxYWVLTjEmYnJhbmNoPW1h
c3RlcildKGh0dHBzOi8vdHJhdmlzLWNpLmNvbS9yYXNidC9weXRob24tbWFj
aGluZS1sZWFybmluZy1ib29rLTJuZC1lZGl0aW9uKQohW1B5dGhvbiAzLjZd
KGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvUHl0aG9uLTMuNi1ibHVl
LnN2ZykKIVtMaWNlbnNlXShodHRwczovL2ltZy5zaGllbGRzLmlvL2JhZGdl
L0NvZGUlMjBMaWNlbnNlLU1JVC1ibHVlLnN2ZykKCgoKKipQeXRob24gTWFj
aGluZSBMZWFybmluZywgMm5kIEVkLioqICAKCnB1Ymxpc2hlZCBTZXB0ZW1i
ZXIgMjB0aCwgMjAxNwoKUGFwZXJiYWNrOiA2MjIgcGFnZXMgIApQdWJsaXNo
ZXI6IFBhY2t0IFB1Ymxpc2hpbmcgIApMYW5ndWFnZTogRW5nbGlzaAoKSVNC
Ti0xMDogMTc4NzEyNTkzOSAgCklTQk4tMTM6IDk3OC0xNzg3MTI1OTMzICAK
S2luZGxlIEFTSU46IEIwNzQySzdIWUYgIAoKWzxpbWcgc3JjPSIuL2ltYWdl
cy9jb3Zlcl8xLmpwZyIgd2lkdGg9IjM0OCI+XShodHRwczovL3d3dy5hbWF6
b24uY29tL1B5dGhvbi1NYWNoaW5lLUxlYXJuaW5nLXNjaWtpdC1sZWFybi1U
ZW5zb3JGbG93L2RwLzE3ODcxMjU5MzkpCgoKIyMgTGlua3MKCi0gW0FtYXpv
biBQYWdlXShodHRwczovL3d3dy5hbWF6b24uY29tL1B5dGhvbi1NYWNoaW5l
LUxlYXJuaW5nLXNjaWtpdC1sZWFybi1UZW5zb3JGbG93L2RwLzE3ODcxMjU5
MzkpCi0gW1BhY2t0IFBhZ2VdKGh0dHBzOi8vd3d3LnBhY2t0cHViLmNvbS9i
aWctZGF0YS1hbmQtYnVzaW5lc3MtaW50ZWxsaWdlbmNlL3B5dGhvbi1tYWNo
aW5lLWxlYXJuaW5nLXNlY29uZC1lZGl0aW9uKQoKCgojIyBUYWJsZSBvZiBD
b250ZW50cyBhbmQgQ29kZSBOb3RlYm9va3MKCioqSGVscGZ1bCBpbnN0YWxs
YXRpb24gYW5kIHNldHVwIGluc3RydWN0aW9ucyBjYW4gYmUgZm91bmQgaW4g
dGhlIFtSRUFETUUubWQgZmlsZSBvZiBDaGFwdGVyIDFdKGNvZGUvY2gwMS9S
RUFETUUubWQpKioKClRvIGFjY2VzcyB0aGUgY29kZSBtYXRlcmlhbHMgZm9y
IGEgZ2l2ZW4gY2hhcHRlciwgc2ltcGx5IGNsaWNrIG9uIHRoZSBgb3BlbiBk
aXJgIGxpbmtzIG5leHQgdG8gdGhlIGNoYXB0ZXIgaGVhZGxpbmVzIHRvIG5h
dmlnYXRlIHRvIHRoZSBjaGFwdGVyIHN1YmRpcmVjdG9yaWVzIGxvY2F0ZWQg
aW4gdGhlIFtjb2RlL10oY29kZS8pIHN1YmRpcmVjdG9yeS4gWW91IGNhbiBh
bHNvIGNsaWNrIG9uIHRoZSBgaXB5bmJgIGxpbmtzIGJlbG93IHRvIG9wZW4g
YW5kIHZpZXcgdGhlIEp1cHl0ZXIgbm90ZWJvb2sgb2YgZWFjaCBjaGFwdGVy
IGRpcmVjdGx5IG9uIEdpdEh1Yi4KCkluIGFkZGl0aW9uLCB0aGUgW2NvZGUv
XShjb2RlLykgc3ViZGlyZWN0b3JpZXMgYWxzbyBjb250YWluIC5weSBzY3Jp
cHQgZmlsZXMsIHdoaWNoIHdlcmUgY3JlYXRlZCBmcm9tIHRoZSBKdXB5dGVy
IE5vdGVib29rcy4gSG93ZXZlciwgSSBoaWdobHkgcmVjb21tZW5kIHdvcmtp
bmcgd2l0aCB0aGUgSnVweXRlciBub3RlYm9vayBpZiBwb3NzaWJsZSBpbiB5
b3VyIGNvbXB1dGluZyBlbnZpcm9ubWVudC4gTm90IG9ubHkgZG8gdGhlIEp1
cHl0ZXIgbm90ZWJvb2tzIGNvbnRhaW4gdGhlIGltYWdlcyBhbmQgc2VjdGlv
biBoZWFkaW5ncyBmb3IgZWFzaWVyIG5hdmlnYXRpb24sIGJ1dCB0aGV5IGFs
c28gYWxsb3cgZm9yIGEgc3RlcHdpc2UgZXhlY3V0aW9uIG9mIGluZGl2aWR1
YWwgY29kZSBzbmlwcGV0cywgd2hpY2ggLS0gaW4gbXkgb3BpbmlvbiAtLSBw
cm92aWRlIGEgYmV0dGVyIGxlYXJuaW5nIGV4cGVyaWVuY2UuCgoqKlBsZWFz
ZSBub3RlIHRoYXQgdGhlc2UgYXJlIGp1c3QgdGhlIGNvZGUgZXhhbXBsZXMg
YWNjb21wYW55aW5nIHRoZSBib29rLCB3aGljaCBJIHVwbG9hZGVkIGZvciB5
b3VyIGNvbnZlbmllbmNlOyBiZSBhd2FyZSB0aGF0IHRoZXNlIG5vdGVib29r
cyBtYXkgbm90IGJlIHVzZWZ1bCB3aXRob3V0IHRoZSBmb3JtdWxhZSBhbmQg
ZGVzY3JpcHRpdmUgdGV4dC4qKiAgIAoKCjEuIE1hY2hpbmUgTGVhcm5pbmcg
LSBHaXZpbmcgQ29tcHV0ZXJzIHRoZSBBYmlsaXR5IHRvIExlYXJuIGZyb20g
RGF0YSBbW29wZW4gZGlyXSguL2NvZGUvY2gwMSldIFtbaXB5bmJdKC4vY29k
ZS9jaDAxL2NoMDEuaXB5bmIpXSAKMi4gVHJhaW5pbmcgTWFjaGluZSBMZWFy
bmluZyBBbGdvcml0aG1zIGZvciBDbGFzc2lmaWNhdGlvbiBbW29wZW4gZGly
XSguL2NvZGUvY2gwMildIFtbaXB5bmJdKC4vY29kZS9jaDAyL2NoMDIuaXB5
bmIpXSAKMy4gQSBUb3VyIG9mIE1hY2hpbmUgTGVhcm5pbmcgQ2xhc3NpZmll
cnMgVXNpbmcgU2Npa2l0LUxlYXJuIFtbb3BlbiBkaXJdKC4vY29kZS9jaDAz
KV0gW1tpcHluYl0oLi9jb2RlL2NoMDMvY2gwMy5pcHluYildIAo0LiBCdWls
ZGluZyBHb29kIFRyYWluaW5nIFNldHMg4oCTIERhdGEgUHJlLVByb2Nlc3Np
bmcgW1tvcGVuIGRpcl0oLi9jb2RlL2NoMDQpXSBbW2lweW5iXSguL2NvZGUv
Y2gwNC9jaDA0LmlweW5iKV0gCjUuIENvbXByZXNzaW5nIERhdGEgdmlhIERp
bWVuc2lvbmFsaXR5IFJlZHVjdGlvbiBbW29wZW4gZGlyXSguL2NvZGUvY2gw
NSldIFtbaXB5bmJdKC4vY29kZS9jaDA1L2NoMDUuaXB5bmIpXSAKNi4gTGVh
cm5pbmcgQmVzdCBQcmFjdGljZXMgZm9yIE1vZGVsIEV2YWx1YXRpb24gYW5k
IEh5cGVycGFyYW1ldGVyIE9wdGltaXphdGlvbiBbW29wZW4gZGlyXSguL2Nv
ZGUvY2gwNildIFtbaXB5bmJdKC4vY29kZS9jaDA2L2NoMDYuaXB5bmIpXQo3
LiBDb21iaW5pbmcgRGlmZmVyZW50IE1vZGVscyBmb3IgRW5zZW1ibGUgTGVh
cm5pbmcgW1tvcGVuIGRpcl0oLi9jb2RlL2NoMDcpXSBbW2lweW5iXSguL2Nv
ZGUvY2gwNy9jaDA3LmlweW5iKV0KOC4gQXBwbHlpbmcgTWFjaGluZSBMZWFy
bmluZyB0byBTZW50aW1lbnQgQW5hbHlzaXMgW1tvcGVuIGRpcl0oLi9jb2Rl
L2NoMDgpXSBbW2lweW5iXSguL2NvZGUvY2gwOC9jaDA4LmlweW5iKV0gCjku
IEVtYmVkZGluZyBhIE1hY2hpbmUgTGVhcm5pbmcgTW9kZWwgaW50byBhIFdl
YiBBcHBsaWNhdGlvbiBbW29wZW4gZGlyXSguL2NvZGUvY2gwOSldIFtbaXB5
bmJdKC4vY29kZS9jaDA5L2NoMDkuaXB5bmIpXSAKMTAuIFByZWRpY3Rpbmcg
Q29udGludW91cyBUYXJnZXQgVmFyaWFibGVzIHdpdGggUmVncmVzc2lvbiBB
bmFseXNpcyBbW29wZW4gZGlyXSguL2NvZGUvY2gxMCldIFtbaXB5bmJdKC4v
Y29kZS9jaDEwL2NoMTAuaXB5bmIpXSAKMTEuIFdvcmtpbmcgd2l0aCBVbmxh
YmVsZWQgRGF0YSDigJMgQ2x1c3RlcmluZyBBbmFseXNpcyBbW29wZW4gZGly
XSguL2NvZGUvY2gxMSldIFtbaXB5bmJdKC4vY29kZS9jaDExL2NoMTEuaXB5
bmIpXSAKMTIuIEltcGxlbWVudGluZyBhIE11bHRpLWxheWVyIEFydGlmaWNp
YWwgTmV1cmFsIE5ldHdvcmsgZnJvbSBTY3JhdGNoIFtbb3BlbiBkaXJdKC4v
Y29kZS9jaDEyKV0gW1tpcHluYl0oLi9jb2RlL2NoMTIvY2gxMi5pcHluYild
IAoxMy4gUGFyYWxsZWxpemluZyBOZXVyYWwgTmV0d29yayBUcmFpbmluZyB3
aXRoIFRlbnNvckZsb3cgW1tvcGVuIGRpcl0oLi9jb2RlL2NoMTMpXSBbW2lw
eW5iXSguL2NvZGUvY2gxMy9jaDEzLmlweW5iKV0gCjE0LiBHb2luZyBEZWVw
ZXI6IFRoZSBNZWNoYW5pY3Mgb2YgVGVuc29yRmxvdyBbW29wZW4gZGlyXSgu
L2NvZGUvY2gxNCldIFtbaXB5bmJdKC4vY29kZS9jaDE0L2NoMTQuaXB5bmIp
XSAKMTUuIENsYXNzaWZ5aW5nIEltYWdlcyB3aXRoIERlZXAgQ29udm9sdXRp
b25hbCBOZXVyYWwgTmV0d29ya3MgW1tvcGVuIGRpcl0oLi9jb2RlL2NoMTUp
XSBbW2lweW5iXSguL2NvZGUvY2gxNS9jaDE1LmlweW5iKV0gCjE2LiBNb2Rl
bGluZyBTZXF1ZW50aWFsIERhdGEgVXNpbmcgUmVjdXJyZW50IE5ldXJhbCBO
ZXR3b3JrcyBbW29wZW4gZGlyXSguL2NvZGUvY2gxNildIFtbaXB5bmJdKC4v
Y29kZS9jaDE2L2NoMTYuaXB5bmIpXSAKCiMjIyBXaGF04oCZcyBuZXcgaW4g
dGhlIHNlY29uZCBlZGl0aW9uIGZyb20gdGhlIGZpcnN0IGVkaXRpb24/Cgo+
IE9oLCB0aGVyZSBhcmUgc28gbWFueSB0aGluZ3MgdGhhdCB3ZSBpbXByb3Zl
ZCBvciBhZGRlZDsgd2hlcmUgc2hvdWxkIEkgc3RhcnQhPyBUaGUgb25lIGlz
c3VlIG9uIHRvcCBvZiBteSBwcmlvcml0eSBsaXN0IHdhcyB0byBmaXggYWxs
IHRoZSBuYXN0eSB0eXBvcyB0aGF0IHdlcmUgaW50cm9kdWNlZCBkdXJpbmcg
dGhlIGxheW91dCBzdGFnZSBvciBteSBvdmVyc2lnaHQuIEkgcmVhbGx5IGFw
cHJlY2lhdGVkIGFsbCB0aGUgaGVscGZ1bCBmZWVkYmFjayBmcm9tIHJlYWRl
cnMgaW4gdGhpcyBtYW5uZXIhIEZ1cnRoZXJtb3JlLCBJIGFkZHJlc3NlZCBh
bGwgdGhlIGZlZWRiYWNrIGFib3V0IHNlY3Rpb25zIHRoYXQgbWF5IGhhdmUg
YmVlbiBjb25mdXNpbmcgb3IgYSBiaXQgdW5jbGVhciwgcmV3b3JkZWQgcGFy
YWdyYXBocywgYW5kIGFkZGVkIGFkZGl0aW9uYWwgZXhwbGFuYXRpb25zLiBB
bHNvLCBzcGVjaWFsIHRoYW5rcyBnbyB0byB0aGUgZXhjZWxsZW50IGVkaXRv
cnMgb2YgdGhlIHNlY29uZCBlZGl0aW9uLCB3aG8gaGVscGVkIGEgbG90IGFs
b25nIHRoZSB3YXkhIAoKPiBBbHNvLCB0aGUgZmlndXJlcyBhbmQgcGxvdHMg
YmVjYW1lIG11Y2ggcHJldHRpZXIuIFdoaWxlIHJlYWRlcnMgbGlrZWQgdGhl
IGdyYXBoaWMgY29udGVudCBhIGxvdCwgc29tZSBwZW9wbGUgY3JpdGljaXpl
ZCB0aGUgUG93ZXJQb2ludC1lc3F1ZSBzdHlsZSBhbmQgbGF5b3V0LiBUaHVz
LCBJIGRlY2lkZWQgdG8gb3ZlcmhhdWwgZXZlcnkgbGl0dGxlIGZpZ3VyZSB3
aXRoIGEgaG9wZWZ1bGx5IG1vcmUgcGxlYXNpbmcgY2hvaWNlIG9mIGZvbnRz
IGFuZCBjb2xvcnMuIEFsc28sIHRoZSBkYXRhIHBsb3RzIGxvb2sgbXVjaCBu
aWNlciBub3csIHRoYW5rcyB0byB0aGUgbWF0cGxvdGxpYiB0ZWFtIHdobyBw
dXQgYSBsb3Qgb2Ygd29yayBpbiBtYXRwbG90bGliIDIuMCBhbmQgaXRzIG5l
dyBzdHlsaW5nIHRoZW1lLgoKPiBCZXlvbmQgYWxsIHRoZXNlIGNvc21ldGlj
IGZpeGVzLCBuZXcgc2VjdGlvbnMgd2VyZSBhZGRlZCBoZXJlIGFuZCB0aGVy
ZS4gQW1vbmcgdGhlc2UgaXMsIGZvciBleGFtcGxlLCBpcyBhIHNlY3Rpb24g
b24gZGVhbGluZyB3aXRoIGltYmFsYW5jZWQgZGF0YXNldHMsIHdoaWNoIHNl
dmVyYWwgcmVhZGVycyB3ZXJlIG1pc3NpbmcgaW4gdGhlIGZpcnN0IGVkaXRp
b24gYW5kIHNob3J0IHNlY3Rpb24gb24gTGF0ZW50IERpcmljaGxldCBBbGxv
Y2F0aW9uIGFtb25nIG90aGVycy4KCj4gQXMgdGltZSBhbmQgdGhlIHNvZnR3
YXJlIHdvcmxkIG1vdmVkIG9uIGFmdGVyIHRoZSBmaXJzdCBlZGl0aW9uIHdh
cyByZWxlYXNlZCBpbiBTZXB0ZW1iZXIgMjAxNSwgd2UgZGVjaWRlZCB0byBy
ZXBsYWNlIHRoZSBpbnRyb2R1Y3Rpb24gdG8gZGVlcCBsZWFybmluZyB2aWEg
VGhlYW5vLiBObyB3b3JyaWVzLCB3ZSBkaWRuJ3QgcmVtb3ZlIGl0IGJ1dCBp
dCBnb3QgYSBzdWJzdGFudGlhbCBvdmVyaGF1bCBhbmQgaXMgbm93IGJhc2Vk
IG9uIFRlbnNvckZsb3csIHdoaWNoIGhhcyBiZWNvbWUgYSBtYWpvciBwbGF5
ZXIgaW4gbXkgcmVzZWFyY2ggdG9vbGJveCBzaW5jZSBpdHMgb3BlbiBzb3Vy
Y2UgcmVsZWFzZSBieSBHb29nbGUgaW4gTm92ZW1iZXIgMjAxNS4gCkFsb25n
IHdpdGggdGhlIG5ldyBpbnRyb2R1Y3Rpb24gdG8gZGVlcCBsZWFybmluZyB1
c2luZyBUZW5zb3JGbG93LCB0aGUgYmlnZ2VzdCBhZGRpdGlvbnMgdG8gdGhp
cyBuZXcgZWRpdGlvbiBhcmUgdGhyZWUgYnJhbmQgbmV3IGNoYXB0ZXJzIGZv
Y3Vzc2luZyBvbiBkZWVwIGxlYXJuaW5nIGFwcGxpY2F0aW9uczogQSBtb3Jl
IGRldGFpbGVkIG92ZXJ2aWV3IG9mIHRoZSBUZW5zb3JGbG93IG1lY2hhbmlj
cywgYW4gaW50cm9kdWN0aW9uIHRvIGNvbnZvbHV0aW9uYWwgbmV1cmFsIG5l
dHdvcmtzIGZvciBpbWFnZSBjbGFzc2lmaWNhdGlvbiwgYW5kIGFuIGludHJv
ZHVjdGlvbiB0byByZWN1cnJlbnQgbmV1cmFsIG5ldHdvcmtzIGZvciBuYXR1
cmFsIGxhbmd1YWdlIHByb2Nlc3NpbmcuIE9mIGNvdXJzZSwgYW5kIGluIGEg
c2ltaWxhciB2ZWluIGFzIHRoZSByZXN0IG9mIHRoZSBib29rLCB0aGVzZSBu
ZXcgY2hhcHRlcnMgZG8gbm90IG9ubHkgcHJvdmlkZSByZWFkZXJzIHdpdGgg
cHJhY3RpY2FsIGluc3RydWN0aW9ucyBhbmQgZXhhbXBsZXMgYnV0IGFsc28g
aW50cm9kdWNlIHRoZSBmdW5kYW1lbnRhbCBtYXRoZW1hdGljcyBiZWhpbmQg
dGhvc2UgY29uY2VwdHMsIHdoaWNoIGFyZSBhbiBlc3NlbnRpYWwgYnVpbGRp
bmcgYmxvY2sgZm9yIHVuZGVyc3RhbmRpbmcgaG93IGRlZXAgbGVhcm5pbmcg
d29ya3MuCgpbIFtFeGNlcnB0IGZyb20gIk1hY2hpbmUgTGVhcm5pbmcgY2Fu
IGJlIHVzZWZ1bCBpbiBhbG1vc3QgZXZlcnkgcHJvYmxlbSBkb21haW46IiBB
biBpbnRlcnZpZXcgd2l0aCBTZWJhc3RpYW4gUmFzY2hrYV0oaHR0cHM6Ly93
d3cucGFja3RwdWIuY29tL2Jvb2tzL2NvbnRlbnQvbWFjaGluZS1sZWFybmlu
Zy11c2VmdWwtZXZlcnktcHJvYmxlbS1kb21haW4taW50ZXJ2aWV3LXNlYmFz
dGlhbi1yYXNjaGthLykgXQoKCi0tLSAKCjxicj4KPGJyPgoKUmFzY2hrYSwg
U2ViYXN0aWFuLCBhbmQgVmFoaWQgTWlyamFsaWxpLiAqUHl0aG9uIE1hY2hp
bmUgTGVhcm5pbmcsIDJuZCBFZCouIFBhY2t0IFB1Ymxpc2hpbmcsIDIwMTcu
CgogICAgQGJvb2t7UmFzY2hrYU1pcmphbGlsaTIwMTcsICAKICAgIGFkZHJl
c3MgPSB7QmlybWluZ2hhbSwgVUt9LCAgCiAgICBhdXRob3IgPSB7UmFzY2hr
YSwgU2ViYXN0aWFuIGFuZCBNaXJqYWxpbGksIFZhaGlkfSwgIAogICAgZWRp
dGlvbiA9IHsyfSwgIAogICAgaXNibiA9IHs5NzgtMTc4NzEyNTkzM30sICAK
ICAgIGtleXdvcmRzID0ge0NsdXN0ZXJpbmcsRGF0YSBTY2llbmNlLERlZXAg
TGVhcm5pbmcsICAKICAgICAgICAgICAgICAgIE1hY2hpbmUgTGVhcm5pbmcs
TmV1cmFsIE5ldHdvcmtzLFByb2dyYW1taW5nLCAgCiAgICAgICAgICAgICAg
ICBTdXBlcnZpc2VkIExlYXJuaW5nfSwgIAogICAgcHVibGlzaGVyID0ge1Bh
Y2t0IFB1Ymxpc2hpbmd9LCAgCiAgICB0aXRsZSA9IHt7UHl0aG9uIE1hY2hp
bmUgTGVhcm5pbmcsIDJuZCBFZC59fSwgIAogICAgeWVhciA9IHsyMDE3fSAg
CiAgICB9CgojIFRyYW5zbGF0aW9ucwoKIyMjIEdlcm1hbgoKLSBJU0JOLTEw
OiAzOTU4NDU3MzM5Ci0gSVNCTi0xMzogOTc4LTM5NTg0NTczMzEKLSBbQW1h
em9uLmRlIGxpbmtdKGh0dHBzOi8vd3d3LmFtYXpvbi5kZS9NYWNoaW5lLUxl
YXJuaW5nLVB5dGhvbi1TY2lraXQtTGVhcm4tVGVuc29yRmxvdy9kcC8zOTU4
NDU3MzM5L3JlZj10bW1fcGFwX3N3YXRjaF8wP19lbmNvZGluZz1VVEY4JnFp
ZD0xNTEzNjAxNDYxJnNyPTgtNSkKLSBbUHVibGlzaGVyIGxpbmtdKGh0dHBz
Oi8vbWl0cC5kZS9JVC1XRUIvUHJvZ3JhbW1pZXJ1bmcvTWFjaGluZS1MZWFy
bmluZy1taXQtUHl0aG9uLW94aWQuaHRtbCkKCiFbXShpbWFnZXMvY292ZXIt
Z2VybWFuLmpwZykKCgojIyMgSmFwYW5lc2UKCi0gSVNCTi0xMDogNDI5NTAw
MzM3OQotIElTQk4tMTM6IDk3OC00Mjk1MDAzMzczCi0gW0FtYXpvbi5jby5q
cCBsaW5rXShodHRwczovL3d3dy5hbWF6b24uY28uanAvUHl0aG9uLeapn+ai
sOWtpue/kuODl+ODreOCsOODqeODn+ODs+OCsC3pgZTkurrjg4fjg7zjgr/j
grXjgqTjgqjjg7Pjg4bjgqPjgrnjg4jjgavjgojjgovnkIboq5bjgajlrp/o
t7UtaW1wcmVzcy1nZWFyL2RwLzQyOTUwMDMzNzkvcmVmPXRtbV9wYXBfc3dh
dGNoXzApCgohW10oaW1hZ2VzL2NvdmVyLWphcGFuZXNlLmpwZyk=
",,5081,"ZGlzdDogdHJ1c3R5CnN1ZG86IHJlcXVpcmVkCmxhbmd1YWdlOiBweXRob24K
bWF0cml4OgogICAgaW5jbHVkZToKICAgICAgICAtIHB5dGhvbjogMi43CiAg
ICAgICAgICBlbnY6IExBVEVTVD0iZmFsc2UiIE5VTVBZX1ZFUlNJT049IjEu
MTEiIFNDSVBZX1ZFUlNJT049IjAuMTgiIFNLTEVBUk5fVkVSU0lPTj0iMC4x
OCIgTUFUUExPVExJQl9WRVJTSU9OPSIyLjAiIFBBTkRBU19WRVJTSU9OPSIw
LjE5IiBOTFRLX1ZFUlNJT049IjMuMiIgVEVOU09SRkxPV19WRVJTSU9OPSIx
LjMiCiAgICAgICAgLSBweXRob246IDMuNQogICAgICAgICAgZW52OiBMQVRF
U1Q9ImZhbHNlIiBOVU1QWV9WRVJTSU9OPSIxLjExIiBTQ0lQWV9WRVJTSU9O
PSIwLjE4IiBTS0xFQVJOX1ZFUlNJT049IjAuMTgiIE1BVFBMT1RMSUJfVkVS
U0lPTj0iMi4wIiBQQU5EQVNfVkVSU0lPTj0iMC4xOSIgTkxUS19WRVJTSU9O
PSIzLjIiIFRFTlNPUkZMT1dfVkVSU0lPTj0iMS4zIgogICAgICAgIC0gcHl0
aG9uOiAzLjYKICAgICAgICAgIGVudjogTEFURVNUPSJmYWxzZSIgTlVNUFlf
VkVSU0lPTj0iMS4xMSIgU0NJUFlfVkVSU0lPTj0iMC4xOCIgU0tMRUFSTl9W
RVJTSU9OPSIwLjE4IiBNQVRQTE9UTElCX1ZFUlNJT049IjIuMCIgUEFOREFT
X1ZFUlNJT049IjAuMTkiIE5MVEtfVkVSU0lPTj0iMy4yIiBURU5TT1JGTE9X
X1ZFUlNJT049IjEuMyIKICAgICAgICAtIHB5dGhvbjogMy42CiAgICAgICAg
ICBlbnY6IExBVEVTVD0iZmFsc2UiIE5VTVBZX1ZFUlNJT049IjEuMTMiIFND
SVBZX1ZFUlNJT049IjAuMTkiIFNLTEVBUk5fVkVSU0lPTj0iMC4xOSIgTUFU
UExPVExJQl9WRVJTSU9OPSIyLjAiIFBBTkRBU19WRVJTSU9OPSIwLjIwIiBO
TFRLX1ZFUlNJT049IjMuMiIgVEVOU09SRkxPV19WRVJTSU9OPSIxLjMiCiAg
ICAgICAgLSBweXRob246IDMuNgogICAgICAgICAgZW52OiBMQVRFU1Q9InRy
dWUiCgphZGRvbnM6CiAgYXB0OgogICAgcGFja2FnZXM6CiAgICAgIC0gZ3Jh
cGh2aXoKCmluc3RhbGw6CiAgICAtIHN1ZG8gYXB0LWdldCB1cGRhdGUKICAg
IC0gc291cmNlIC50cmF2aXMvaW5zdGFsbF90cmF2aXNfZW52LnNoCgpiZWZv
cmVfc2NyaXB0OiAjIGNvbmZpZ3VyZSBhIGhlYWRsZXNzIGRpc3BsYXkgdG8g
dGVzdCBwbG90IGdlbmVyYXRpb24KICAtICJleHBvcnQgRElTUExBWT06OTku
MCIKICAtICJzaCAtZSAvZXRjL2luaXQuZC94dmZiIHN0YXJ0IgogIC0gc2xl
ZXAgMyAjIGdpdmUgeHZmYiBzb21lIHRpbWUgdG8gc3RhcnQKCnNjcmlwdDoK
ICAgIC0gYmFzaCAudHJhdmlzL3J1bl90cmF2aXNfdGVzdHMuc2gKI2FmdGVy
X3N1Y2Nlc3M6CiMgICAgLSBpZiBbWyAiJHtDT1ZFUkFHRX0iID09ICJ0cnVl
IiBdXTsgdGhlbiBjb3ZlcmFsbHM7IGNvZGVjb3Y7IGVsc2UgZWNobyAiZmFp
bGVkIjsgZmkKCm5vdGlmaWNhdGlvbnM6CiAgICBlbWFpbDoKICAgICAgICBy
ZWNpcGllbnRzOgogICAgICAgICAgICAtIG1haWxAc2ViYXN0aWFucmFzY2hr
YS5jb20KICAgIG9uX3N1Y2Nlc3M6IGFsd2F5cwogICAgb25fZmFpbHVyZTog
YWx3YXlzCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'pupy',42882329,"b'Pupy is an opensource, cross-platform (Windows, Linux, OSX, Android) remote administration and post-exploitation tool mainly written in python'",b'Python',100,5081,,442,False,b'https://api.github.com/repos/n1nj4sec/pupy/forks',"IyBQdXB5CgpbIVtCdWlsZCBTdGF0dXNdKGh0dHBzOi8vYXBpLnRyYXZpcy1j
aS5vcmcvbjFuajRzZWMvcHVweS5zdmc/YnJhbmNoPXVuc3RhYmxlKV0oaHR0
cHM6Ly90cmF2aXMtY2kub3JnL24xbmo0c2VjL3B1cHkpCgojIyBJbnN0YWxs
YXRpb24KCkluc3RhbGxhdGlvbiBpbnN0cnVjdGlvbnMgYXJlIG9uIHRoZSB3
aWtpLCBpbiBhZGRpdGlvbiB0byBhbGwgb3RoZXIgZG9jdW1lbnRhdGlvbi4g
Rm9yIG1heGltdW0gY29tcGF0aWJpbGl0eSwgaXQgaXMgcmVjb21tZW5kZWQg
dG8gdXNlIERvY2tlciBDb21wb3NlLgoKW1JlZmVyIHRvIHRoZSB3aWtpXSho
dHRwczovL2dpdGh1Yi5jb20vbjFuajRzZWMvcHVweS93aWtpL0luc3RhbGxh
dGlvbikKCiMjIERlc2NyaXB0aW9uCgpQdXB5IGlzIGEgY3Jvc3MtcGxhdGZv
cm0sIG11bHRpIGZ1bmN0aW9uIFJBVCBhbmQgcG9zdC1leHBsb2l0YXRpb24g
dG9vbCBtYWlubHkgd3JpdHRlbiBpbiBweXRob24uIEl0IGZlYXR1cmVzIGFu
IGFsbC1pbi1tZW1vcnkgZXhlY3V0aW9uIGd1aWRlbGluZSBhbmQgbGVhdmVz
IGEgdmVyeSBsb3cgZm9vdHByaW50LiBQdXB5IGNhbiBjb21tdW5pY2F0ZSB1
c2luZyBtdWx0aXBsZSB0cmFuc3BvcnRzLCBtaWdyYXRlIGludG8gcHJvY2Vz
c2VzIHVzaW5nIHJlZmxlY3RpdmUgaW5qZWN0aW9uLCBhbmQgbG9hZCByZW1v
dGUgcHl0aG9uIGNvZGUsIHB5dGhvbiBwYWNrYWdlcyBhbmQgcHl0aG9uIEMt
ZXh0ZW5zaW9ucyBmcm9tIG1lbW9yeS4KCiMjIEZlYXR1cmVzCgotIFdpbmRv
d3MgcGF5bG9hZCBjYW4gbG9hZCB0aGUgZW50aXJlIFB5dGhvbiBpbnRlcnBy
ZXRlciBmcm9tIG1lbW9yeSB1c2luZyBhIHJlZmxlY3RpdmUgRExMLgoJLSBQ
dXB5IGRvZXMgbm90IHRvdWNoIHRoZSBkaXNrLgoKLSBDYW4gYmUgcGFja2Vk
IGludG8gYSBzaW5nbGUgLnB5IGZpbGUgYW5kIHJ1biB3aXRob3V0IGFueSBk
ZXBlbmRlbmNpZXMgb3RoZXIgdGhhbiB0aGUgcHl0aG9uIHN0YW5kYXJkIGxp
YnJhcnkgb24gYWxsIE9TZXMuCgktIFB5Q3J5cHRvIGdldHMgcmVwbGFjZWQg
YnkgcHVyZSBQeXRob24gQUVTICYgUlNBIGltcGxlbWVudGF0aW9ucyB3aGVu
IHVuYXZhaWxhYmxlLgoKLSBSZWZsZWN0aXZlbHkgbWlncmF0ZSBpbnRvIG90
aGVyIHByb2Nlc3Nlcy4KLSBSZW1vdGVseSBpbXBvcnQgcHVyZSBweXRob24g
cGFja2FnZXMgKC5weSwgLnB5YykgYW5kIGNvbXBpbGVkIHB5dGhvbiBDIGV4
dGVuc2lvbnMgKC5weWQsIC5zbykgZnJvbSBtZW1vcnkuCgktIEltcG9ydGVk
IHB5dGhvbiBtb2R1bGVzIGRvIG5vdCB0b3VjaCB0aGUgZGlzay4KCi0gRWFz
aWx5IGV4dGVuc2libGUsIG1vZHVsZXMgYXJlIHNpbXBsZSB0byB3cml0ZSBh
bmQgYXJlIHNvcnRlZCBieSBvcyBhbmQgY2F0ZWdvcnkuCgotIE1vZHVsZXMg
Y2FuIGRpcmVjdGx5IGFjY2VzcyBweXRob24gb2JqZWN0cyBvbiB0aGUgcmVt
b3RlIGNsaWVudCB1c2luZyBbcnB5Y10oaHR0cHM6Ly9naXRodWIuY29tL3Rv
bWVyZmlsaWJhL3JweWMpLgoKLSBBY2Nlc3MgcmVtb3RlIG9iamVjdHMgaW50
ZXJhY3RpdmVseSBmcm9tIHRoZSBwdXB5IHNoZWxsIGFuZCBnZXQgYXV0by1j
b21wbGV0aW9uIG9mIHJlbW90ZSBhdHRyaWJ1dGVzLgoKLSBDb21tdW5pY2F0
aW9uIHRyYW5zcG9ydHMgYXJlIG1vZHVsYXIgYW5kIHN0YWNrYWJsZS4gRXhm
aWx0cmF0ZSBkYXRhIHVzaW5nIEhUVFAgb3ZlciBIVFRQIG92ZXIgQUVTIG92
ZXIgWE9SLCBvciBhbnkgY29tYmluYXRpb24gb2YgdGhlIGF2YWlsYWJsZSB0
cmFuc3BvcnRzLgoKLSBDb21tdW5pY2F0ZSB1c2luZyBvYmZzcHJveHkgW3Bs
dWdnYWJsZSB0cmFuc3BvcnRzLl0oaHR0cHM6Ly93d3cudG9ycHJvamVjdC5v
cmcvZG9jcy9wbHVnZ2FibGUtdHJhbnNwb3J0cy5odG1sLmVuKQoKLSBFeGVj
dXRlIG5vbmludGVyYWN0aXZlIGNvbW1hbmRzIG9uIG11bHRpcGxlIGhvc3Rz
IGF0IG9uY2UuCgotIENvbW1hbmRzIGFuZCBzY3JpcHRzIHJ1bm5pbmcgb24g
cmVtb3RlIGhvc3RzIGFyZSBpbnRlcnJ1cHRpYmxlLgoKLSBBdXRvLWNvbXBs
ZXRpb24gZm9yIGNvbW1hbmRzIGFuZCBhcmd1bWVudHMuCgotIEN1c3RvbSBj
b25maWcgY2FuIGJlIGRlZmluZWQ6IGNvbW1hbmQgYWxpYXNlcywgbW9kdWxl
cy4gYXV0b21hdGljYWxseSBydW4gYXQgY29ubmVjdGlvbiwgZXRjLgoKLSBP
cGVuIGludGVyYWN0aXZlIHB5dGhvbiBzaGVsbHMgd2l0aCBhdXRvLWNvbXBs
ZXRpb24gb24gdGhlIGFsbC1pbi1tZW1vcnkgcmVtb3RlIHB5dGhvbiBpbnRl
cnByZXRlci4KCi0gSW50ZXJhY3RpdmUgc2hlbGxzIChjbWQuZXhlLCAvYmlu
L2Jhc2gsIGV0YykgY2FuIGJlIG9wZW5lZCByZW1vdGVseS4KCS0gUmVtb3Rl
IHNoZWxscyBvbiBVbml4ICYgV2luZG93cyBjbGllbnRzIGhhdmUgYSByZWFs
IHR0eSB3aXRoIGFsbCBrZXlib2FyZCBzaWduYWxzIHdvcmtpbmcganVzdCBs
aWtlIGFuIFNTSCBzaGVsbC4KCi0gRXhlY3V0ZSBQRSBleGVjdXRhYmxlIHJl
bW90ZWx5IGFuZCBmcm9tIG1lbW9yeS4KCi0gR2VuZXJhdGUgcGF5bG9hZHMg
aW4gdmFyaW91cyBmb3JtYXRzOgoKfCBGb3JtYXQgfCBBcmNoaXRlY3R1cmUg
fCBTaG9ydCBOYW1lIHwKfC0tLXwtLS18LS0tfApBbmRyb2lkIFBhY2thZ2Ug
fCB4ODYgJiBBUk12NyB8IGFwawpMaW51eCBCaW5hcnkgfCB4ODYgfCBsaW5f
eDg2CkxpbnV4IEJpbmFyeSB8IHg2NCB8IGxpbl94NjQKTGludXggU2hhcmVk
IE9iamVjdCB8IHg4NiB8IHNvX3g4NgpMaW51eCBTaGFyZWQgT2JqZWN0IHwg
eDY0IHwgc29feDY0CldpbmRvd3MgUEUgRXhlY3V0YWJsZSB8IHg4NiB8IGV4
ZV94ODYKV2luZG93cyBQRSBFeGVjdXRhYmxlIHwgeDY0IHwgZXhlX3g2NApX
aW5kb3dzIERMTCB8IHg4NiB8IGRsbF94ODYKV2luZG93cyBETEwgfCB4NjQg
fCBkbGxfeDY0ClB5dGhvbiBTY3JpcHQgfCB4ODYgJiB4NjQgfCBweQpQeUlu
c3RhbGxlciB8IHg4NiAmIHg2NCB8IHB5aW5zdApQeXRob24gT25lbGluZXIg
fCB4ODYgJiB4NjQgfCBweV9vbmVsaW5lcgpQb3dlcnNoZWxsIHwgeDg2ICYg
eDY0IHwgcHMxClBvd2Vyc2hlbGwgT25lbGluZXIgfCB4ODYgJiB4NjQgfCBw
czFfb25lbGluZXIKRHVja3kgU2NyaXB0IHwgTi9BIHwgcnViYmVyX2R1Y2t5
CgotIERlcGxveSBpbiBtZW1vcnkgZnJvbSBhIHNpbmdsZSBjb21tYW5kIGxp
bmUgdXNpbmcgcHl0aG9uIG9yIHBvd2Vyc2hlbGwgb25lLWxpbmVycy4KCi0g
RW1iZWQgInNjcmlwdGxldHMiIGluIGdlbmVyYXRlZCBwYXlsb2FkcyB0byBw
ZXJmb3JtIHNvbWUgdGFza3MgIm9mZmxpbmUiIHdpdGhvdXQgbmVlZGluZyBu
ZXR3b3JrIGNvbm5lY3Rpdml0eSAoZXg6IHN0YXJ0IGtleWxvZ2dlciwgYWRk
IHBlcnNpc3RlbmNlLCBleGVjdXRlIGN1c3RvbSBweXRob24gc2NyaXB0LCBj
aGVja192bSwgZXRjLikKCi0gTXVsdGlwbGUgVGFyZ2V0IFBsYXRmb3JtczoK
CnwgUGxhdGZvcm0gfCBTdXBwb3J0IFN0YXR1cyB8CnwtLS18LS0tfApXaW5k
b3dzIFhQIHwgU3VwcG9ydGVkCldpbmRvd3MgNyB8IFN1cHBvcnRlZApXaW5k
b3dzIDggfCBTdXBwb3J0ZWQKV2luZG93cyAxMCB8IFN1cHBvcnRlZApMaW51
eCB8IFN1cHBvcnRlZApNYWMgT1NYIHwgTGltaXRlZCBTdXBwb3J0CkFuZHJv
aWQgfCBMaW1pdGVkIFN1cHBvcnQKCiMjIERvY3VtZW50YXRpb24KCkFsbCBk
b2N1bWVudGF0aW9uIGNhbiBiZSBmb3VuZCBvbiB0aGUgd2lraS4KCltSZWZl
ciB0byB0aGUgd2lraV0oaHR0cHM6Ly9naXRodWIuY29tL24xbmo0c2VjL3B1
cHkvd2lraSkKCiMjIEZBUQoKPiBEb2VzIHRoZSBzZXJ2ZXIgd29yayBvbiB3
aW5kb3dzPwoKUHVweSBoYXMgbm90IGJlZW4gdGVzdGVkIG9uIFdpbmRvd3Mu
IFRoZW9yZXRpY2FsbHksIGl0IHNob3VsZCB3b3JrIG9uIGFueSBwbGF0Zm9y
bSB0aGF0IHN1cHBvcnRzIERvY2tlciBhbmQgRG9ja2VyIENvbXBvc2UuIEhv
d2V2ZXIsIHlvdSB3aWxsIG5lZWQgdG8gYWRhcHQgdGhlIERvY2tlciBDb21w
b3NlIGluc3RhbGxhdGlvbiBpbnN0cnVjdGlvbnMgZm9yIHRoZSBXaW5kb3dz
IHBsYXRmb3JtLgoKPiBJIGNhbid0IGluc3RhbGwgUHVweS4gVGhlIGluc3Rh
bGxhdGlvbiBmYWlscy4KCjEuIFBsZWFzZSByZWZlciB0byB0aGUgd2lraS4g
SXQgaXMgcG9zc2libGUgdGhhdCB5b3VyIGFuc3dlciBpcyB0aGVyZS4KMi4g
U2VhcmNoIHRoZSBHaXRodWIgaXNzdWVzIGFuZCBzZWUgaWYgeW91ciBpc3N1
ZSB3YXMgYWxyZWFkeSBzb2x2ZWQuCjMuIElmIHlvdSBpc3N1ZSB3YXMgbm90
IHNvbHZlZCwgb3BlbiBhIG5ldyBpc3N1ZSBmb2xsb3dpbmcgdGhlIFtpc3N1
ZSBndWlkZWxpbmVzXShodHRwczovL2dpdGh1Yi5jb20vbjFuajRzZWMvcHVw
eS93aWtpL0lzc3VlLUd1aWRlbGluZXMpLgoKSWYgeW91IGRvIG5vdCBmb2xs
b3cgdGhlc2Ugc3RlcHMsIHlvdSBpc3N1ZSB3aWxsIGJlIGNsb3NlZC4KCj4g
QW5kcm9pZCBhbmQvb3IgTWFjIE9TWCBwYXlsb2FkcyBhbmQgbW9kdWxlcyBk
b24ndCB3b3JrLgoKUHVweSBoYXMgX2xpbWl0ZWRfIHN1cHBvcnQgZm9yIEFu
ZHJvaWQgYW5kIE9TWC4gVGhlc2UgcGxhdGZvcm1zIG1heSBub3QgYmUgd2Vs
bCBtYWludGFpbmVkIGFuZCBtYXkgYnJlYWsgaW50ZXJtaXR0ZW50bHkuIFNv
bWUgbW9kdWxlcyAoaS5lLiBrZXlsb2dnZXIpIG1heSBiZSBtaXNzaW5nIGZv
ciB0aGVzZSBwbGF0Zm9ybXMuCgojIyBEZXZlbG9wbWVudAoKSWYgc29tZSBv
ZiB5b3Ugd2FudCB0byBwYXJ0aWNpcGF0ZSB0byBwdXB5IGRldmVsb3BtZW50
LCBkb24ndCBoZXNpdGF0ZSEgQWxsIGhlbHAgaXMgZ3JlYXRseSBhcHByZWNp
YXRlZCBhbmQgYWxsIHB1bGwgcmVxdWVzdHMgd2lsbCBiZSByZXZpZXdlZC4K
CkFsc28gdGhlcmUgaXMgc21hbGwgW25vdGVdKGh0dHBzOi8vZ2l0aHViLmNv
bS9uMW5qNHNlYy9wdXB5L3dpa2kvRGV2ZWxvcG1lbnQpIGFib3V0IGRldmVs
b3BtZW50LiBQbGVhc2UgcnVuIGZsYWtlOCBiZWZvcmUgZG9pbmcgYW55IGNv
bW1pdHMuIEZpbGUgd2l0aCBjb25maWcgaXMgW2hlcmVdKHB1cHkvdG94Lmlu
aSkuCgojIyBDb250YWN0Cgp8IFBsYXRmb3JtIHwgQ29udGFjdCBJbmZvIHwK
fC0tLXwtLS18CkVtYWlsIHwgY29udGFjdEBuMW5qNC5ldQpUd2l0dGVyIHwg
aHR0cHM6Ly90d2l0dGVyLmNvbS9uMW5qNHNlYwoKVGhpcyBwcm9qZWN0IGlz
IGEgW3BlcnNvbmFsIGRldmVsb3BtZW50XShodHRwczovL2VuLndpa2lwZWRp
YS5vcmcvd2lraS9QZXJzb25hbF9kZXZlbG9wbWVudCksIHBsZWFzZSByZXNw
ZWN0IGl0cyBwaGlsb3NvcGh5IGFuZCBkb24ndCB1c2UgaXQgZm9yIGV2aWwg
cHVycG9zZXMhCgojIyBTcGVjaWFsIHRoYW5rcwoKU3BlY2lhbCB0aGFua3Mg
dG8gYWxsIGNvbnRyaWJ1dG9ycyB0aGF0IGhlbHAgaW1wcm92ZSBwdXB5IGFu
ZCBtYWtlIGl0IGEgYmV0dGVyIHRvb2whIDopCg==
",,5081,"bGFuZ3VhZ2U6IGdlbmVyaWMKc2VydmljZXM6Ci0gZG9ja2VyCm9zOgotIGxp
bnV4CmJlZm9yZV9zY3JpcHQ6CiAgLSBzdWRvIHBpcDIgaW5zdGFsbCBmbGFr
ZTggZmxha2U4LXBlci1maWxlLWlnbm9yZXMKICAtIGNkICRUUkFWSVNfQlVJ
TERfRElSL3B1cHkgJiYgcHl0aG9uMiAtbSBmbGFrZTggLgogIC0gfAogICAg
ZG9ja2VyIHB1bGwgYWx4Y2hrL3RjLXdpbmRvd3MgJiBkb2NrZXIgcHVsbCBh
bHhjaGsvdGMtbGludXgzMiAmCiAgICBkb2NrZXIgcHVsbCBhbHhjaGsvdGMt
bGludXg2NCAmIGRvY2tlciBwdWxsIGFseGNoay90Yy1hbmRyb2lkCnNjcmlw
dDoKICAtIGV4cG9ydCBUQUc9YGlmIFsgIiRUUkFWSVNfQlJBTkNIIiA9PSAi
bWFzdGVyIiBdOyB0aGVuIGVjaG8gImxhdGVzdCI7IGVsc2UgZWNobyAkVFJB
VklTX0JSQU5DSDsgZmlgCiAgLSBjZCAkVFJBVklTX0JVSUxEX0RJUiAmJiAu
L2J1aWxkLWRvY2tlci5zaAogIC0gbHMgLWwgJFRSQVZJU19CVUlMRF9ESVIv
cHVweS9wYXlsb2FkX3RlbXBsYXRlcy9wdXB5eDY0Ki5saW4KICAtIGxzIC1s
ICRUUkFWSVNfQlVJTERfRElSL3B1cHkvcGF5bG9hZF90ZW1wbGF0ZXMvcHVw
eXg2NCouc28KICAtIGxzIC1sICRUUkFWSVNfQlVJTERfRElSL3B1cHkvcGF5
bG9hZF90ZW1wbGF0ZXMvcHVweXg2NCouZGxsCiAgLSBscyAtbCAkVFJBVklT
X0JVSUxEX0RJUi9wdXB5L3BheWxvYWRfdGVtcGxhdGVzL3B1cHl4NjQqLmV4
ZQogIC0gbHMgLWwgJFRSQVZJU19CVUlMRF9ESVIvcHVweS9wYXlsb2FkX3Rl
bXBsYXRlcy9wdXB5eDg2Ki5saW4KICAtIGxzIC1sICRUUkFWSVNfQlVJTERf
RElSL3B1cHkvcGF5bG9hZF90ZW1wbGF0ZXMvcHVweXg4Niouc28KICAtIGxz
IC1sICRUUkFWSVNfQlVJTERfRElSL3B1cHkvcGF5bG9hZF90ZW1wbGF0ZXMv
cHVweXg4NiouZGxsCiAgLSBscyAtbCAkVFJBVklTX0JVSUxEX0RJUi9wdXB5
L3BheWxvYWRfdGVtcGxhdGVzL3B1cHl4ODYqLmV4ZQogIC0gbHMgLWwgJFRS
QVZJU19CVUlMRF9ESVIvcHVweS9wYXlsb2FkX3RlbXBsYXRlcy9wdXB5LmFw
awogIC0gbHMgLWwgJFRSQVZJU19CVUlMRF9ESVIvcHVweS9wYXlsb2FkX3Rl
bXBsYXRlcy93aW5kb3dzLWFtZDY0LnppcAogIC0gbHMgLWwgJFRSQVZJU19C
VUlMRF9ESVIvcHVweS9wYXlsb2FkX3RlbXBsYXRlcy93aW5kb3dzLXg4Ni56
aXAKICAtIGxzIC1sICRUUkFWSVNfQlVJTERfRElSL3B1cHkvcGF5bG9hZF90
ZW1wbGF0ZXMvbGludXgtYW1kNjQuemlwCiAgLSBscyAtbCAkVFJBVklTX0JV
SUxEX0RJUi9wdXB5L3BheWxvYWRfdGVtcGxhdGVzL2xpbnV4LXg4Ni56aXAK
YWZ0ZXJfc3VjY2VzczoKLSBleHBvcnQgVEFHPWBpZiBbICIkVFJBVklTX0JS
QU5DSCIgPT0gIm1hc3RlciIgXTsgdGhlbiBlY2hvICJsYXRlc3QiOyBlbHNl
IGVjaG8gJFRSQVZJU19CUkFOQ0g7IGZpYAotIHwKICBpZiBbICIkVFJBVklT
X1JFUE9fU0xVRyIgPSAiYWx4Y2hrL3B1cHkiIF0gJiYgWyAteiAiJFRSQVZJ
U19QVUxMX1JFUVVFU1RfU0xVRyIgXTsgdGhlbgogIGRvY2tlciBsb2dpbiAt
dSAkRE9DS0VSX1VTRVIgLXAgJERPQ0tFUl9QQVNTICYmCiAgY2QgJFRSQVZJ
U19CVUlMRF9ESVIvcHVweSAmJgogIGRvY2tlciBwdXNoIGFseGNoay9wdXB5
OiRUQUcgPi9kZXYvbnVsbDsKICBkb2NrZXIgcHVzaCBhbHhjaGsvcHVweTpi
YXNlLSRUQUcgPi9kZXYvbnVsbDsKICBmaQotIGV4cG9ydCBUUkFWSVNfVEFH
PWBpZiBbICIkVFJBVklTX1JFUE9fU0xVRyIgPSAibjFuajRzZWMvcHVweSIg
XSAmJiBbIC16ICIkVFJBVklTX1BVTExfUkVRVUVTVF9TTFVHIiBdOyB0aGVu
IGVjaG8gImxhdGVzdCI7IGVsc2UgZWNobyAiIjsgZmlgCmVudjoKICBnbG9i
YWw6CiAgLSBDT01NSVQ9JHtUUkFWSVNfQ09NTUlUOjo4fQogIC0gc2VjdXJl
OiBnS3Y1QzRaVG5uek9jUWlHcmJ3RWdKaEU4U1BKTENTSVlzZERMcERJSGs3
T2pOdStoR3ArZnJ5Z1UyNXcyTmxIeVY3Y1JldTdnbHZ5cGhWd21yUStGeUJS
dHJLeXNrK0hiVTU5UWlWVk9ENng4dXlERVo1cUcwTmVFT29EOUNoZGdTeTJD
U2wzOVBmOElJY0NnWkljeU5EdWt4WmJHYVVyNExwT1NSdThFNUgxWVQ5cXhw
c0RIaWRRa2tjWWJaTE5sVm1oQk5aMkxsRlhaQXU3THdTeDExMWRNVFBQVlkr
elJSMVZtYVhMdXFuOTBwL0w1Q24wNHhjSkhNU2M5ZmhJQTN0eTQ2M0tnRE11
TTRJWFlRUzF4Q3h5WndDcFlHYkh0dVpZRHZqbXJWaFFwRWlkajVpYmNuYits
bCs5WE5yNEpZaTZsZFZSRG12N0ovMURPVmQ5SXc3N0xKMFNBR3ZUREd6VE1I
Uno3NEVyODJ4YTZ6dTVOa3pXOThvdGk2dENZTTlRZUFHcDRRU0puTzBXcWdH
ODd5M0pXMFBvbnYzc3VNRzYwelBBZUxZY3VpeWhtbU95L3YzdzBYcTFGSHN5
cVNheU40a29KRHBVSjdEUVFEYlN2MU5jME1hRzlYWmFOVkFNYWIwc1dhcWJn
Q01rdGVOTjZ3NzJsQVZUY2s2Yi9ORFYydGFPTk9pTkpGSkloaU9wTzRFWjhn
NHQ3ai9aWHBCblA5TysvL0FQUTVXZVJFRWNzYlMzMnkyL1I2WWlIa0tsblBE
b21mbTFmSldaaDNLVXpSdXIzUGJYdnBKa2M5RCs2OFVZaDAyb1lsb2RmaTl6
b0RwQ241T3ltRlBZWUk5ZmlibWJ1WjFhQndsR1BzWW5ZbGlBWHRsRWQvVzNY
TUtUMXBXZHZiST0KICAtIHNlY3VyZTogSE9RN2s0U2Y5cDNDeU55MDJsQk1I
NUZmMk9lT1hRV0VsTGFkOXZGZzBMVGt4Zm5ma0dlV1A5SytmQVI5THAzbkFB
ZDVRUlgvMk1hSnhKVG9tVkhKU0NHcWp1cXJxa0JIQkxDczdGZ3QrYkt4MkYz
UXVqb3FKWTRvclpIS3hwTjdZRndBR0Y0clJ6UjVRMjR4ZnZJZ3JuSk5XZ0Fv
aUVLVjl5UEVGYThrNXBKMzdNYVRGUm1PdGtyZnNOMmJkcFJjMXVENWpiYmNj
VkZIUGVURElVYTgwSlJ1TUJFVkRNakorQ2VRcTVpbDNPSlVBRWRpSzAzelBE
ZW9DaWJRQ2w3VUdReHZhV0ZwWWxDVUt3MXI3ZC9yb0pjd2xObllyTTBPbklt
QXgwZ0FHZzY4dlhmWkZoL1hIRTc1SjNRQTdlRC9wUTNWZFZIMU9JZ2cyS2Uz
bnFPNFhNdGw2bkpHWWpDKzNmQXpxK0JPZ3F2SGN3cE56VmY2R0lYd1VsNzdC
ZmUxSGx4NHVSckNtamJENzY5YklRTEplVXR3S25wOWZUakdDOGlIRWZ4VzVM
c0QzUEgzMXZBV2ZBRFRCMDRwdUd6VUFKYUJWTndObG53K2RHMTVsSC9MSHZq
eGhKQnplMlNqNU1nZDJUeU5EUytjNmREY0lYQm5MYWFqbXhzMzJ0ODd2V05q
WGpGMHdNdkJvOUcxV01CSDNOOFViSVYvVFBxYVQ1bklOaTludG1ZOHdGRHN0
TmQ2ZzFDM2d0ZlZOc21BN2NxYitBYmVMOGV6RVRNeHd2VHJVcFBWQXUyVmNq
b21nRTB6bGQ0a0JGdldWczlSUWlCZm1rQ2hLRVpaMy81dTlGOXRSYmFFY25R
dWt3NytVTHNyQnFOYlp3QzRpSHRNbzNQWUNIRTBsazg9CiAgLSBzZWN1cmU6
IFJvMzVGM1lSMmUxdk9uRFNCVEhlOUhkVXhDN04wQ0VrOWN4TmFpT3JGMzRx
bThFaFM0U0pUNXB2NnJtTldQdzhlS2N0UzM1TkZ0SFBra1BJMVdTc29tRnhE
U2QzNmNxMmUydmZPNHZyZnFvalhFdlBxZW9KTW5lTFYxL2NtTlVsWDhrejNO
RHhPQ3lSQmFQekYxZmhlbTdRQW1kV1BaMDA1SnphWnpQeXNRVlhlMGVUSDVN
MUpLbExXQktrTWdJRGIvVDBwSS96UHEva0pjNVY4MWNpOUQ3SVZlOGhsTlI2
U2RTSVo0eE92QmZaY1BHTVJaSGV3OXlNSXZJOWE4MXVTcGxCeTFMa1g1NTdV
ZGo5bjNBLzRLNU9zWSttcnNKUmQ3WWsxQUhCNFNQTGMyZlc5R1hpVUNUVkZD
VmlRRlgzWXdkY1BkYkxuSFZaYnNWRTZUZlNyZ040R25kRzJPSWtjVk5YTWdu
TllrOWJGalJjclhhK2krT2Eybm5PUTBlWWR2WHVXNWtHUG9lb3lKUVpaV2E5
YzNmV2d0NzFaZTdlUC82U1dJUTRtRXl6cGJXVkhxTDhtN2FOR3ZJOC9tZnFs
U2sxMzhaaURZWTFWYS9JbGNXd3JCZXJrUWFVejdhL2o2c29oQjJ6cHVhMDVM
TnJ4VzhaUERoTW8wS3ErVStlL3g2UXFnYzM1TW5uZmhKUjhBdkEyQ1JjY2F4
cHRXQmNmekZsSjFDSGhMS2hkd1NBOHpmYTU4dlJEbkdwaHdxWU8rRkY0NFRt
cjFOd1JNVDN5dEhCNUd0VFNsVWp6eTBFdm15ZjgxaGhJMFMrNUwyT2V1djFu
MHNRRWYvcVM5VGZwcHVjMzZnQVFDbFJnbUhGZ21NNVdrSU9ReS9seVJLRFVr
TTcvSlVzRTUwPQpiZWZvcmVfZGVwbG95OgogIC0gdGFyIC1DICRUUkFWSVNf
QlVJTERfRElSL3B1cHkgLUpjZiAkVFJBVklTX0JVSUxEX0RJUi9wYXlsb2Fk
X3RlbXBsYXRlcy50eHogcGF5bG9hZF90ZW1wbGF0ZXMKZGVwbG95OgogIHBy
b3ZpZGVyOiByZWxlYXNlcwogIGFwaV9rZXk6CiAgICBzZWN1cmU6IEUzbkpn
U3JZTElJaWw2ZXFQMGgwYzY3S3RhdzlRTjdJZk5Ec2FJdVF3c3RaRS9rQklK
ZTlESVk5M29hTisxc29vc2tuWEhtL2RzTGVyYU5aVllYSmJzb0U5bFB1RHpP
ZEMyc0JxMDl4QVIrWlJGWGR0VU1YdE1EdjgxNnYyWnNkSFpiZmJOdm01dWNp
eEU5ZUdYREdQcERZY0pSbGlIcEFGUGF2eXNITDNsdkYwZGVtMXJJMlJRc0Iw
TEdSWUdPVkZ3anBkcHFGSVRaczFCWnhxL2NsWGJxQkxCbkpPMzBEM0xVZGJY
V1lDcUM0TTRmTUlJUU9zV1pSTEd1OEpnRDZzdG1COHQrdmU3WGNYeTRKaEU2
akZOZ3pNUDZESFlvbG9vYmVVV1drNlJic0FQczRqM1VZYllGQ3N1b3crSko5
aWFYUDBzZ3Y4Z1NUM25xalp0RjF4aVJWWU9kcVRhMk1JQWtHSXVPbUgxb3Rs
NTVDNlV1WGRJWkdkNlNQT0tsS0MzY2NCOTJLY0R5KzdoNVFjSDE2bUZxWktz
T2tZUkFFNGl6YUU5R3lXZWpwRnhsbnFPWkdMd044QUtzZi96cFdxNGJSYkVB
WUxXYXlpMUtZTnpHbEZ3c2JkZjdCV1pKOTBKV21WcGYxQWNKOTJzYk5leHhr
b1c0N0ptK0lyMjY0Wks3MklXTGRFOVBZa05VaTV3dDZJaHNIc3NoZFZsVWEw
cDNxdklnQmVXZGZtK2ZnY203cXlKYkNwMzdTRmdiWW1jczQrOVU5Qjc1bFBw
WVI3UlpPZEdoM05HY1JFRmJ6WVZ6K1ZwUE9hREdFSjRtQlduM0RYY0x0bmpC
RzRxMjgvZURTa3ZycTFRSzFnOCt1cnptbDZLWUhhSDczOHRSYmpWOTdZc0hz
QXZNPQogIGZpbGU6CiAgLSAiJFRSQVZJU19CVUlMRF9ESVIvcGF5bG9hZF90
ZW1wbGF0ZXMudHh6IgogIHNraXBfY2xlYW51cDogdHJ1ZQogIG92ZXJ3cml0
ZTogdHJ1ZQogIG9uOgogICAgcmVwbzogbjFuajRzZWMvcHVweQogICAgYWxs
X2JyYW5jaGVzOiB0cnVlCiAgICB0YWdzOiB0cnVlCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
