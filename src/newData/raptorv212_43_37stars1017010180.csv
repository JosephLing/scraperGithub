name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'zipline',6297520,"b'Zipline, a Pythonic Algorithmic Trading Library'",b'Python',348,10173,,912,False,b'https://api.github.com/repos/quantopian/zipline/forks',"Li4gaW1hZ2U6OiBodHRwczovL21lZGlhLnF1YW50b3BpYW4uY29tL2xvZ29z
L29wZW5fc291cmNlL3ppcGxpbmUtbG9nby0wM18ucG5nCiAgICA6dGFyZ2V0
OiBodHRwczovL3d3dy56aXBsaW5lLmlvCiAgICA6d2lkdGg6IDIxMnB4CiAg
ICA6YWxpZ246IGNlbnRlcgogICAgOmFsdDogWmlwbGluZQoKPT09PT09PT09
PT09PQoKfEdpdHRlcnwKfHZlcnNpb24gc3RhdHVzfAp8dHJhdmlzIHN0YXR1
c3wKfGFwcHZleW9yIHN0YXR1c3wKfENvdmVyYWdlIFN0YXR1c3wKClppcGxp
bmUgaXMgYSBQeXRob25pYyBhbGdvcml0aG1pYyB0cmFkaW5nIGxpYnJhcnku
IEl0IGlzIGFuIGV2ZW50LWRyaXZlbgpzeXN0ZW0gZm9yIGJhY2t0ZXN0aW5n
LiBaaXBsaW5lIGlzIGN1cnJlbnRseSB1c2VkIGluIHByb2R1Y3Rpb24gYXMg
dGhlIGJhY2t0ZXN0aW5nIGFuZCBsaXZlLXRyYWRpbmcKZW5naW5lIHBvd2Vy
aW5nIGBRdWFudG9waWFuIDxodHRwczovL3d3dy5xdWFudG9waWFuLmNvbT5g
XyAtLSBhIGZyZWUsCmNvbW11bml0eS1jZW50ZXJlZCwgaG9zdGVkIHBsYXRm
b3JtIGZvciBidWlsZGluZyBhbmQgZXhlY3V0aW5nIHRyYWRpbmcKc3RyYXRl
Z2llcy4KCi0gYEpvaW4gb3VyIENvbW11bml0eSEgPGh0dHBzOi8vZ3JvdXBz
Lmdvb2dsZS5jb20vZm9ydW0vIyFmb3J1bS96aXBsaW5lPmBfCi0gYERvY3Vt
ZW50YXRpb24gPGh0dHBzOi8vd3d3LnppcGxpbmUuaW8+YF8KLSBXYW50IHRv
IENvbnRyaWJ1dGU/IFNlZSBvdXIgYERldmVsb3BtZW50IEd1aWRlbGluZXMg
PGh0dHBzOi8vd3d3LnppcGxpbmUuaW8vZGV2ZWxvcG1lbnQtZ3VpZGVsaW5l
cz5gXwoKRmVhdHVyZXMKPT09PT09PT0KCi0gKipFYXNlIG9mIFVzZToqKiBa
aXBsaW5lIHRyaWVzIHRvIGdldCBvdXQgb2YgeW91ciB3YXkgc28gdGhhdCB5
b3UgY2FuCiAgZm9jdXMgb24gYWxnb3JpdGhtIGRldmVsb3BtZW50LiBTZWUg
YmVsb3cgZm9yIGEgY29kZSBleGFtcGxlLgotICoqIkJhdHRlcmllcyBJbmNs
dWRlZCI6KiogbWFueSBjb21tb24gc3RhdGlzdGljcyBsaWtlCiAgbW92aW5n
IGF2ZXJhZ2UgYW5kIGxpbmVhciByZWdyZXNzaW9uIGNhbiBiZSByZWFkaWx5
IGFjY2Vzc2VkIGZyb20KICB3aXRoaW4gYSB1c2VyLXdyaXR0ZW4gYWxnb3Jp
dGhtLgotICoqUHlEYXRhIEludGVncmF0aW9uOioqIElucHV0IG9mIGhpc3Rv
cmljYWwgZGF0YSBhbmQgb3V0cHV0IG9mIHBlcmZvcm1hbmNlIHN0YXRpc3Rp
Y3MgYXJlCiAgYmFzZWQgb24gUGFuZGFzIERhdGFGcmFtZXMgdG8gaW50ZWdy
YXRlIG5pY2VseSBpbnRvIHRoZSBleGlzdGluZwogIFB5RGF0YSBlY29zeXN0
ZW0uCi0gKipTdGF0aXN0aWNzIGFuZCBNYWNoaW5lIExlYXJuaW5nIExpYnJh
cmllczoqKiBZb3UgY2FuIHVzZSBsaWJyYXJpZXMgbGlrZSBtYXRwbG90bGli
LCBzY2lweSwKICBzdGF0c21vZGVscywgYW5kIHNrbGVhcm4gdG8gc3VwcG9y
dCBkZXZlbG9wbWVudCwgYW5hbHlzaXMsIGFuZAogIHZpc3VhbGl6YXRpb24g
b2Ygc3RhdGUtb2YtdGhlLWFydCB0cmFkaW5nIHN5c3RlbXMuCgpJbnN0YWxs
YXRpb24KPT09PT09PT09PT09CgpJbnN0YWxsaW5nIFdpdGggYGBwaXBgYAot
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKQXNzdW1pbmcgeW91IGhhdmUgYWxs
IHJlcXVpcmVkIChzZWUgbm90ZSBiZWxvdykgbm9uLVB5dGhvbiBkZXBlbmRl
bmNpZXMsIHlvdQpjYW4gaW5zdGFsbCBaaXBsaW5lIHdpdGggYGBwaXBgYCB2
aWE6CgouLiBjb2RlLWJsb2NrOjogYmFzaAoKICAgICQgcGlwIGluc3RhbGwg
emlwbGluZQoKKipOb3RlOioqIEluc3RhbGxpbmcgWmlwbGluZSB2aWEgYGBw
aXBgYCBpcyBzbGlnaHRseSBtb3JlIGludm9sdmVkIHRoYW4gdGhlCmF2ZXJh
Z2UgUHl0aG9uIHBhY2thZ2UuICBTaW1wbHkgcnVubmluZyBgYHBpcCBpbnN0
YWxsIHppcGxpbmVgYCB3aWxsIGxpa2VseQpmYWlsIGlmIHlvdSd2ZSBuZXZl
ciBpbnN0YWxsZWQgYW55IHNjaWVudGlmaWMgUHl0aG9uIHBhY2thZ2VzIGJl
Zm9yZS4KClRoZXJlIGFyZSB0d28gcmVhc29ucyBmb3IgdGhlIGFkZGl0aW9u
YWwgY29tcGxleGl0eToKCjEuIFppcGxpbmUgc2hpcHMgc2V2ZXJhbCBDIGV4
dGVuc2lvbnMgdGhhdCByZXF1aXJlIGFjY2VzcyB0byB0aGUgQ1B5dGhvbiBD
IEFQSS4KICAgSW4gb3JkZXIgdG8gYnVpbGQgdGhlIEMgZXh0ZW5zaW9ucywg
YGBwaXBgYCBuZWVkcyBhY2Nlc3MgdG8gdGhlIENQeXRob24KICAgaGVhZGVy
IGZpbGVzIGZvciB5b3VyIFB5dGhvbiBpbnN0YWxsYXRpb24uCgoyLiBaaXBs
aW5lIGRlcGVuZHMgb24gYG51bXB5IDxodHRwczovL3d3dy5udW1weS5vcmcv
PmBfLCB0aGUgY29yZSBsaWJyYXJ5IGZvcgogICBudW1lcmljYWwgYXJyYXkg
Y29tcHV0aW5nIGluIFB5dGhvbi4gIE51bXB5IGRlcGVuZHMgb24gaGF2aW5n
IHRoZSBgTEFQQUNLCiAgIDxodHRwczovL3d3dy5uZXRsaWIub3JnL2xhcGFj
ay8+YF8gbGluZWFyIGFsZ2VicmEgcm91dGluZXMgYXZhaWxhYmxlLgoKQmVj
YXVzZSBMQVBBQ0sgYW5kIHRoZSBDUHl0aG9uIGhlYWRlcnMgYXJlIGJpbmFy
eSBkZXBlbmRlbmNpZXMsIHRoZSBjb3JyZWN0IHdheQp0byBpbnN0YWxsIHRo
ZW0gdmFyaWVzIGZyb20gcGxhdGZvcm0gdG8gcGxhdGZvcm0uICBPbiBMaW51
eCwgdXNlcnMgZ2VuZXJhbGx5CmFjcXVpcmUgdGhlc2UgZGVwZW5kZW5jaWVz
IHZpYSBhIHBhY2thZ2UgbWFuYWdlciBsaWtlIGBgYXB0YGAsIGBgeXVtYGAs
IG9yCmBgcGFjbWFuYGAuICBPbiBPU1gsIGBIb21lYnJldyA8aHR0cHM6Ly9i
cmV3LnNoLz5gXyBpcyBhIHBvcHVsYXIgY2hvaWNlCnByb3ZpZGluZyBzaW1p
bGFyIGZ1bmN0aW9uYWxpdHkuCgpTZWUgdGhlIGZ1bGwgYFppcGxpbmUgSW5z
dGFsbCBEb2N1bWVudGF0aW9uYF8gZm9yIG1vcmUgaW5mb3JtYXRpb24gb24g
YWNxdWlyaW5nCmJpbmFyeSBkZXBlbmRlbmNpZXMgZm9yIHlvdXIgc3BlY2lm
aWMgcGxhdGZvcm0uCgpjb25kYQotLS0tLQoKQW5vdGhlciB3YXkgdG8gaW5z
dGFsbCBaaXBsaW5lIGlzIHZpYSB0aGUgYGBjb25kYWBgIHBhY2thZ2UgbWFu
YWdlciwgd2hpY2gKY29tZXMgYXMgcGFydCBvZiBgQW5hY29uZGEgPGh0dHBz
Oi8vd3d3LmFuYWNvbmRhLmNvbS9kaXN0cmlidXRpb24vPmBfIG9yIGNhbiBi
ZQppbnN0YWxsZWQgdmlhIGBgcGlwIGluc3RhbGwgY29uZGFgYC4KCk9uY2Ug
c2V0IHVwLCB5b3UgY2FuIGluc3RhbGwgWmlwbGluZSBmcm9tIG91ciBgYFF1
YW50b3BpYW5gYCBjaGFubmVsOgoKLi4gY29kZS1ibG9jazo6IGJhc2gKCiAg
ICAkIGNvbmRhIGluc3RhbGwgLWMgUXVhbnRvcGlhbiB6aXBsaW5lCgpDdXJy
ZW50bHkgc3VwcG9ydGVkIHBsYXRmb3JtcyBpbmNsdWRlOgoKLSAgR05VL0xp
bnV4IDY0LWJpdAotICBPU1ggNjQtYml0Ci0gIFdpbmRvd3MgNjQtYml0Cgou
LiBub3RlOjoKCiAgIFdpbmRvd3MgMzItYml0IG1heSB3b3JrOyBob3dldmVy
LCBpdCBpcyBub3QgY3VycmVudGx5IGluY2x1ZGVkIGluCiAgIGNvbnRpbnVv
dXMgaW50ZWdyYXRpb24gdGVzdHMuCgpRdWlja3N0YXJ0Cj09PT09PT09PT0K
ClNlZSBvdXIgYGdldHRpbmcgc3RhcnRlZCB0dXRvcmlhbCA8aHR0cHM6Ly93
d3cuemlwbGluZS5pby9iZWdpbm5lci10dXRvcmlhbD5gXy4KClRoZSBmb2xs
b3dpbmcgY29kZSBpbXBsZW1lbnRzIGEgc2ltcGxlIGR1YWwgbW92aW5nIGF2
ZXJhZ2UgYWxnb3JpdGhtLgoKLi4gY29kZTo6IHB5dGhvbgoKICAgIGZyb20g
emlwbGluZS5hcGkgaW1wb3J0IG9yZGVyX3RhcmdldCwgcmVjb3JkLCBzeW1i
b2wKCiAgICBkZWYgaW5pdGlhbGl6ZShjb250ZXh0KToKICAgICAgICBjb250
ZXh0LmkgPSAwCiAgICAgICAgY29udGV4dC5hc3NldCA9IHN5bWJvbCgnQUFQ
TCcpCgoKICAgIGRlZiBoYW5kbGVfZGF0YShjb250ZXh0LCBkYXRhKToKICAg
ICAgICAjIFNraXAgZmlyc3QgMzAwIGRheXMgdG8gZ2V0IGZ1bGwgd2luZG93
cwogICAgICAgIGNvbnRleHQuaSArPSAxCiAgICAgICAgaWYgY29udGV4dC5p
IDwgMzAwOgogICAgICAgICAgICByZXR1cm4KCiAgICAgICAgIyBDb21wdXRl
IGF2ZXJhZ2VzCiAgICAgICAgIyBkYXRhLmhpc3RvcnkoKSBoYXMgdG8gYmUg
Y2FsbGVkIHdpdGggdGhlIHNhbWUgcGFyYW1zCiAgICAgICAgIyBmcm9tIGFi
b3ZlIGFuZCByZXR1cm5zIGEgcGFuZGFzIGRhdGFmcmFtZS4KICAgICAgICBz
aG9ydF9tYXZnID0gZGF0YS5oaXN0b3J5KGNvbnRleHQuYXNzZXQsICdwcmlj
ZScsIGJhcl9jb3VudD0xMDAsIGZyZXF1ZW5jeT0iMWQiKS5tZWFuKCkKICAg
ICAgICBsb25nX21hdmcgPSBkYXRhLmhpc3RvcnkoY29udGV4dC5hc3NldCwg
J3ByaWNlJywgYmFyX2NvdW50PTMwMCwgZnJlcXVlbmN5PSIxZCIpLm1lYW4o
KQoKICAgICAgICAjIFRyYWRpbmcgbG9naWMKICAgICAgICBpZiBzaG9ydF9t
YXZnID4gbG9uZ19tYXZnOgogICAgICAgICAgICAjIG9yZGVyX3RhcmdldCBv
cmRlcnMgYXMgbWFueSBzaGFyZXMgYXMgbmVlZGVkIHRvCiAgICAgICAgICAg
ICMgYWNoaWV2ZSB0aGUgZGVzaXJlZCBudW1iZXIgb2Ygc2hhcmVzLgogICAg
ICAgICAgICBvcmRlcl90YXJnZXQoY29udGV4dC5hc3NldCwgMTAwKQogICAg
ICAgIGVsaWYgc2hvcnRfbWF2ZyA8IGxvbmdfbWF2ZzoKICAgICAgICAgICAg
b3JkZXJfdGFyZ2V0KGNvbnRleHQuYXNzZXQsIDApCgogICAgICAgICMgU2F2
ZSB2YWx1ZXMgZm9yIGxhdGVyIGluc3BlY3Rpb24KICAgICAgICByZWNvcmQo
QUFQTD1kYXRhLmN1cnJlbnQoY29udGV4dC5hc3NldCwgJ3ByaWNlJyksCiAg
ICAgICAgICAgICAgIHNob3J0X21hdmc9c2hvcnRfbWF2ZywKICAgICAgICAg
ICAgICAgbG9uZ19tYXZnPWxvbmdfbWF2ZykKCgpZb3UgY2FuIHRoZW4gcnVu
IHRoaXMgYWxnb3JpdGhtIHVzaW5nIHRoZSBaaXBsaW5lIENMSTsgeW91J2xs
IG5lZWQgYSBgUXVhbmRsIDxodHRwczovL2RvY3MucXVhbmRsLmNvbS9kb2Nz
I3NlY3Rpb24tYXV0aGVudGljYXRpb24+YF9fIEFQSSBrZXkgdG8gaW5nZXN0
IHRoZSBkZWZhdWx0IGRhdGEgYnVuZGxlLgpPbmNlIHlvdSBoYXZlIHlvdXIg
a2V5LCBydW4gdGhlIGZvbGxvd2luZyBmcm9tIHRoZSBjb21tYW5kIGxpbmU6
CgouLiBjb2RlOjogYmFzaAoKICAgICQgUVVBTkRMX0FQSV9LRVk9PHlvdXJr
ZXk+IHppcGxpbmUgaW5nZXN0IC1iIHF1YW5kbAogICAgJCB6aXBsaW5lIHJ1
biAtZiBkdWFsX21vdmluZ19hdmVyYWdlLnB5IC0tc3RhcnQgMjAxNC0xLTEg
LS1lbmQgMjAxOC0xLTEgLW8gZG1hLnBpY2tsZQoKVGhpcyB3aWxsIGRvd25s
b2FkIGFzc2V0IHByaWNpbmcgZGF0YSBkYXRhIGZyb20gYHF1YW5kbGAsIGFu
ZCBzdHJlYW0gaXQgdGhyb3VnaCB0aGUgYWxnb3JpdGhtCm92ZXIgdGhlIHNw
ZWNpZmllZCB0aW1lIHJhbmdlLiBUaGVuLCB0aGUgcmVzdWx0aW5nIHBlcmZv
cm1hbmNlIERhdGFGcmFtZSBpcyBzYXZlZCBpbiBgZG1hLnBpY2tsZWAsIHdo
aWNoIHlvdQpjYW4gbG9hZCBhbmQgYW5hbHl6ZSBmcm9tIHdpdGhpbiBQeXRo
b24uCgpZb3UgY2FuIGZpbmQgb3RoZXIgZXhhbXBsZXMgaW4gdGhlIGBgemlw
bGluZS9leGFtcGxlc2BgIGRpcmVjdG9yeS4KClF1ZXN0aW9ucz8KPT09PT09
PT09PQoKSWYgeW91IGZpbmQgYSBidWcsIGZlZWwgZnJlZSB0byBgb3BlbiBh
biBpc3N1ZSA8aHR0cHM6Ly9naXRodWIuY29tL3F1YW50b3BpYW4vemlwbGlu
ZS9pc3N1ZXMvbmV3PmBfIGFuZCBmaWxsIG91dCB0aGUgaXNzdWUgdGVtcGxh
dGUuCgpDb250cmlidXRpbmcKPT09PT09PT09PT09CgpBbGwgY29udHJpYnV0
aW9ucywgYnVnIHJlcG9ydHMsIGJ1ZyBmaXhlcywgZG9jdW1lbnRhdGlvbiBp
bXByb3ZlbWVudHMsIGVuaGFuY2VtZW50cywgYW5kIGlkZWFzIGFyZSB3ZWxj
b21lLiBEZXRhaWxzIG9uIGhvdyB0byBzZXQgdXAgYSBkZXZlbG9wbWVudCBl
bnZpcm9ubWVudCBjYW4gYmUgZm91bmQgaW4gb3VyIGBkZXZlbG9wbWVudCBn
dWlkZWxpbmVzIDxodHRwczovL3d3dy56aXBsaW5lLmlvL2RldmVsb3BtZW50
LWd1aWRlbGluZXM+YF8uCgpJZiB5b3UgYXJlIGxvb2tpbmcgdG8gc3RhcnQg
d29ya2luZyB3aXRoIHRoZSBaaXBsaW5lIGNvZGViYXNlLCBuYXZpZ2F0ZSB0
byB0aGUgR2l0SHViIGBpc3N1ZXNgIHRhYiBhbmQgc3RhcnQgbG9va2luZyB0
aHJvdWdoIGludGVyZXN0aW5nIGlzc3Vlcy4gU29tZXRpbWVzIHRoZXJlIGFy
ZSBpc3N1ZXMgbGFiZWxlZCBhcyBgQmVnaW5uZXIgRnJpZW5kbHkgPGh0dHBz
Oi8vZ2l0aHViLmNvbS9xdWFudG9waWFuL3ppcGxpbmUvaXNzdWVzP3E9aXMl
M0Fpc3N1ZStpcyUzQW9wZW4rbGFiZWwlM0ElMjJCZWdpbm5lcitGcmllbmRs
eSUyMj5gXyBvciBgSGVscCBXYW50ZWQgPGh0dHBzOi8vZ2l0aHViLmNvbS9x
dWFudG9waWFuL3ppcGxpbmUvaXNzdWVzP3E9aXMlM0Fpc3N1ZStpcyUzQW9w
ZW4rbGFiZWwlM0ElMjJIZWxwK1dhbnRlZCUyMj5gXy4KCkZlZWwgZnJlZSB0
byBhc2sgcXVlc3Rpb25zIG9uIHRoZSBgbWFpbGluZyBsaXN0IDxodHRwczov
L2dyb3Vwcy5nb29nbGUuY29tL2ZvcnVtLyMhZm9ydW0vemlwbGluZT5gXyBv
ciBvbiBgR2l0dGVyIDxodHRwczovL2dpdHRlci5pbS9xdWFudG9waWFuL3pp
cGxpbmU+YF8uCgoKCi4uIHxHaXR0ZXJ8IGltYWdlOjogaHR0cHM6Ly9iYWRn
ZXMuZ2l0dGVyLmltL0pvaW4lMjBDaGF0LnN2ZwogICA6dGFyZ2V0OiBodHRw
czovL2dpdHRlci5pbS9xdWFudG9waWFuL3ppcGxpbmU/dXRtX3NvdXJjZT1i
YWRnZSZ1dG1fbWVkaXVtPWJhZGdlJnV0bV9jYW1wYWlnbj1wci1iYWRnZSZ1
dG1fY29udGVudD1iYWRnZQouLiB8dmVyc2lvbiBzdGF0dXN8IGltYWdlOjog
aHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9weXBpL3B5dmVyc2lvbnMvemlwbGlu
ZS5zdmcKICAgOnRhcmdldDogaHR0cHM6Ly9weXBpLnB5dGhvbi5vcmcvcHlw
aS96aXBsaW5lCi4uIHx0cmF2aXMgc3RhdHVzfCBpbWFnZTo6IGh0dHBzOi8v
dHJhdmlzLWNpLm9yZy9xdWFudG9waWFuL3ppcGxpbmUucG5nP2JyYW5jaD1t
YXN0ZXIKICAgOnRhcmdldDogaHR0cHM6Ly90cmF2aXMtY2kub3JnL3F1YW50
b3BpYW4vemlwbGluZQouLiB8YXBwdmV5b3Igc3RhdHVzfCBpbWFnZTo6IGh0
dHBzOi8vY2kuYXBwdmV5b3IuY29tL2FwaS9wcm9qZWN0cy9zdGF0dXMvM2Rn
MThlNjIyN2R2c3R3Ni9icmFuY2gvbWFzdGVyP3N2Zz10cnVlCiAgIDp0YXJn
ZXQ6IGh0dHBzOi8vY2kuYXBwdmV5b3IuY29tL3Byb2plY3QvcXVhbnRvcGlh
bi96aXBsaW5lL2JyYW5jaC9tYXN0ZXIKLi4gfENvdmVyYWdlIFN0YXR1c3wg
aW1hZ2U6OiBodHRwczovL2NvdmVyYWxscy5pby9yZXBvcy9xdWFudG9waWFu
L3ppcGxpbmUvYmFkZ2UucG5nCiAgIDp0YXJnZXQ6IGh0dHBzOi8vY292ZXJh
bGxzLmlvL3IvcXVhbnRvcGlhbi96aXBsaW5lCgouLiBfYFppcGxpbmUgSW5z
dGFsbCBEb2N1bWVudGF0aW9uYCA6IGh0dHBzOi8vd3d3LnppcGxpbmUuaW8v
aW5zdGFsbAo=
",,10173,"bGFuZ3VhZ2U6IHB5dGhvbgpzdWRvOiBmYWxzZQpmYXN0X2ZpbmlzaDogdHJ1
ZQpweXRob246CiAgLSAyLjcKICAtIDMuNQplbnY6CiAgZ2xvYmFsOgogICAg
IyAxLiBHZW5lcmF0ZWQgYSB0b2tlbiBmb3IgdHJhdmlzIGF0IGh0dHBzOi8v
YW5hY29uZGEub3JnL3F1YW50b3BpYW4vc2V0dGluZ3MvYWNjZXNzIHdpdGgg
c2NvcGUgYXBpOndyaXRlLgogICAgIyAgIENhbiBhbHNvIGJlIGRvbmUgdmlh
IGFuYWNvbmRhIENMSSB3aXRoCiAgICAjICAgICAkIFRPS0VOPSQoYW5hY29u
ZGEgYXV0aCAtLWNyZWF0ZSAtLW5hbWUgbXlfdHJhdmlzX3Rva2VuKQogICAg
IyAyLiBHZW5lcmF0ZWQgc2VjdXJlIGVudiB2YXIgYmVsb3cgd2l0aCB0cmF2
aXMgZ2VtIHZpYQogICAgIyAgICAgJCB0cmF2aXMgZW5jcnlwdCBBTkFDT05E
QV9UT0tFTj0kVE9LRU4KICAgICMgICBTZWUgaHR0cHM6Ly9naXRodWIuY29t
L3RyYXZpcy1jaS90cmF2aXMucmIjaW5zdGFsbGF0aW9uLgogICAgIyAgIElm
IGF1dGhlbnRpY2F0aW5nIHRyYXZpcyBnZW0gd2l0aCBnaXRodWIsIGEgZ2l0
aHViIHRva2VuIHdpdGggdGhlIGZvbGxvd2luZyBzY29wZXMKICAgICMgICBp
cyBzdWZmaWNpZW50OiBbInJlYWQ6b3JnIiwgInVzZXI6ZW1haWwiLCAicmVw
b19kZXBsb3ltZW50IiwgInJlcG86c3RhdHVzIiwgIndyaXRlOnJlcG9faG9v
ayJdCiAgICAjICAgU2VlIGh0dHBzOi8vZG9jcy50cmF2aXMtY2kuY29tL2Fw
aSNleHRlcm5hbC1hcGlzLgogICAgLSBzZWN1cmU6ICJNeExySjByeTJOdFpY
cDR6RVNiMEtQK0FVdVZuczk2WGZQeVpnbXhyTU9qSDRlcHFMaVA1TnhhWS81
VUY5b1RFZE5RRG5QTzNSdzdNOHJIOHZ1WDVkek9WelAyL21pQWMrbHRGUW1s
YVh1RVJZNWZ1MkxZVFNUOE1DeG9raXVENGZkYUZQRmlhQ0NTcmsrelFaU1gy
dURuMTYxdksrRnFaeUdBUTlFRUplYlE9IgogICAgLSBDT05EQV9ST09UX1BZ
VEhPTl9WRVJTSU9OOiAiMi43IgogIG1hdHJpeDoKICAgIC0gT0xEX1BBTkRB
Uz0xCiAgICAtIE5FV19QQU5EQVM9MQptYXRyaXg6CiAgZXhjbHVkZToKICAg
IC0gcHl0aG9uOiAyLjcKICAgICAgZW52OiBORVdfUEFOREFTPTEKIyAgaW5j
bHVkZToKIyAgICAjIFdvcmthcm91bmQgVHJhdmlzIE9TWCBub3QgbmF0aXZl
bHkgc3VwcG9ydGluZyBQeXRob24uCiMgICAgLSBvczogb3N4CiMgICAgICBs
YW5ndWFnZTogZ2VuZXJpYwojICAgICAgZW52OiBUUkFWSVNfUFlUSE9OX1ZF
UlNJT049Mi43IE9MRF9QQU5EQVM9MQojICAgIC0gb3M6IG9zeAojICAgICAg
bGFuZ3VhZ2U6IGdlbmVyaWMKIyAgICAgIGVudjogVFJBVklTX1BZVEhPTl9W
RVJTSU9OPTMuNSBPTERfUEFOREFTPTEKIyAgICAtIG9zOiBvc3gKIyAgICAg
IGxhbmd1YWdlOiBnZW5lcmljCiMgICAgICBlbnY6IFRSQVZJU19QWVRIT05f
VkVSU0lPTj0zLjUgTkVXX1BBTkRBUz0xCgpjYWNoZToKICBkaXJlY3Rvcmll
czoKICAgIC0gJEhPTUUvLmNhY2hlLy5waXAvCgpiZWZvcmVfaW5zdGFsbDoK
ICAtIHNvdXJjZSAuL2NpL3RyYXZpcy9pbnN0YWxsX21pbmljb25kYS5zaAog
IC0gfAogICAgaWYgWyAiJE9MRF9QQU5EQVMiIF07IHRoZW4KICAgICAgTlVN
UFlfVkVSU0lPTj0xLjExLjMgUEFOREFTX1ZFUlNJT049MC4xOC4xIFNDSVBZ
X1ZFUlNJT049MC4xNy4xCiAgICBlbHNlCiAgICAgIE5VTVBZX1ZFUlNJT049
MS4xNC4xIFBBTkRBU19WRVJTSU9OPTAuMjIuMCBTQ0lQWV9WRVJTSU9OPTEu
MC4wIFBBTkRBU19EQVRBUkVBREVSX1ZFUlNJT049MC40LjAgREFTS19WRVJT
SU9OPTAuMTcuMQogICAgZmkKICAtIHNvdXJjZSAuL2NpL3RyYXZpcy9vdmVy
d3JpdGVfcmVxdWlyZW1lbnRzLnNoCiAgLSBjYXQgZXRjL3JlcXVpcmVtZW50
cy50eHQKCmluc3RhbGw6CiAgLSBjb25kYSBpbmZvIC1hCiAgLSBjb25kYSBp
bnN0YWxsIGNvbmRhPTQuMy4zMCBjb25kYS1idWlsZD0zLjAuMjggYW5hY29u
ZGEtY2xpZW50PTEuNi4zIC0teWVzIC1xCiAgLSBjb25kYSBsaXN0CgogIC0g
VEFMSUJfVkVSU0lPTj0kKGNhdCAuL2V0Yy9yZXF1aXJlbWVudHNfdGFsaWIu
dHh0IHwgc2VkICJzL1RBLUxpYj09XCguKlwpL1wxLyIpCiAgLSBDRVJUSUZJ
X1ZFUlNJT049JChjYXQgLi9ldGMvcmVxdWlyZW1lbnRzLnR4dCB8IGdyZXAg
ImNlcnRpZmkiIHwgc2VkICJzL2NlcnRpZmk9PVwoLipcKS9cMS8iKQogIC0g
SUZTPScuJyByZWFkIC1yIC1hIE5QWV9WRVJTSU9OX0FSUiA8PDwgIiROVU1Q
WV9WRVJTSU9OIgogIC0gQ09OREFfTlBZPSR7TlBZX1ZFUlNJT05fQVJSWzBd
fSR7TlBZX1ZFUlNJT05fQVJSWzFdfQogIC0gQ09OREFfUFk9JFRSQVZJU19Q
WVRIT05fVkVSU0lPTgoKICAtIGlmIFtbICIkVFJBVklTX1NFQ1VSRV9FTlZf
VkFSUyIgPSAidHJ1ZSIgJiYgIiRUUkFWSVNfQlJBTkNIIiA9ICJtYXN0ZXIi
ICYmICIkVFJBVklTX1BVTExfUkVRVUVTVCIgPSAiZmFsc2UiIF1dOyB0aGVu
IERPX1VQTE9BRD0idHJ1ZSI7IGVsc2UgRE9fVVBMT0FEPSJmYWxzZSI7IGZp
CiAgLSB8CiAgICBmb3IgcmVjaXBlIGluICQobHMgLWQgY29uZGEvKi8gfCB4
YXJncyAtSSB7fSBiYXNlbmFtZSB7fSk7IGRvCiAgICAgIGlmIFtbICIkcmVj
aXBlIiA9ICJ6aXBsaW5lIiBdXTsgdGhlbiBjb250aW51ZTsgZmkKCiAgICAg
IGNvbmRhIGJ1aWxkIGNvbmRhLyRyZWNpcGUgLS1weXRob249JENPTkRBX1BZ
IC0tbnVtcHk9JENPTkRBX05QWSAtLXNraXAtZXhpc3RpbmcgLS1vbGQtYnVp
bGQtc3RyaW5nIC1jIHF1YW50b3BpYW4gLWMgcXVhbnRvcGlhbi9sYWJlbC9j
aQogICAgICBSRUNJUEVfT1VUUFVUPSQoY29uZGEgYnVpbGQgY29uZGEvJHJl
Y2lwZSAtLXB5dGhvbj0kQ09OREFfUFkgLS1udW1weT0kQ09OREFfTlBZIC0t
b2xkLWJ1aWxkLXN0cmluZyAtLW91dHB1dCkKICAgICAgaWYgW1sgLWYgIiRS
RUNJUEVfT1VUUFVUIiAmJiAiJERPX1VQTE9BRCIgPSAidHJ1ZSIgXV07IHRo
ZW4gYW5hY29uZGEgLXQgJEFOQUNPTkRBX1RPS0VOIHVwbG9hZCAiJFJFQ0lQ
RV9PVVRQVVQiIC11IHF1YW50b3BpYW4gLS1sYWJlbCBjaTsgZmkKICAgIGRv
bmUKICAjIE1ha2Ugc3VyZSBzdGRvdXQgaXMgaW4gYmxvY2tpbmcgbW9kZS4g
SWYgd2UgZG9uJ3QsIHRoZW4gY29uZGEgY3JlYXRlIHdpbGwgYmFyZiBkdXJp
bmcgZG93bmxvYWRzLgogICMgU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS90cmF2
aXMtY2kvdHJhdmlzLWNpL2lzc3Vlcy80NzA0I2lzc3VlY29tbWVudC0zNDg0
MzU5NTkgZm9yIGRldGFpbHMuCiAgLSBweXRob24gLWMgJ2ltcG9ydCBvcyxz
eXMsZmNudGw7IGZsYWdzID0gZmNudGwuZmNudGwoc3lzLnN0ZG91dCwgZmNu
dGwuRl9HRVRGTCk7IGZjbnRsLmZjbnRsKHN5cy5zdGRvdXQsIGZjbnRsLkZf
U0VURkwsIGZsYWdzJn5vcy5PX05PTkJMT0NLKTsnCiAgIyBXZSBjb25kYSBp
bnN0YWxsIGNlcnRpZmkgYXQgdGhlIHBpbm5lZCBleGFjdCB2ZXJzaW9uIGJl
Y2F1c2UgaXQgaXMgYSB0cmFuc2l0aXZlIGRlcGVuZGVuY3kgb2YgemlwbGlu
ZSB2aWEgcmVxdWVzdHMgYW5kIHVzZXMgZGlzdHV0aWxzIGZvciBwYWNrYWdp
bmcuIAogICMgU2luY2UgY29uZGEgaW5zdGFsbHMgbGF0ZXN0IGNlcnRpZmkg
YnkgZGVmYXVsdCwgd2Ugd291bGQgZmFpbCB0byB1bmluc3RhbGwgdGhhdCBu
ZXcgdmVyc2lvbiB3aGVuIHRyeWluZyB0byBpbnN0YWxsIHRoZSBwaW5uZWQg
dmVyc2lvbiB1c2luZyBwaXAgbGF0ZXIgaW4gdGhlIGJ1aWxkOgogICMgIkNh
bm5vdCB1bmluc3RhbGwgJ2NlcnRpZmknLiBJdCBpcyBhIGRpc3R1dGlscyBp
bnN0YWxsZWQgcHJvamVjdCBhbmQgdGh1cyB3ZSBjYW5ub3QgYWNjdXJhdGVs
eSBkZXRlcm1pbmUgd2hpY2ggZmlsZXMgYmVsb25nIHRvIGl0IHdoaWNoIHdv
dWxkIGxlYWQgdG8gb25seSBhIHBhcnRpYWwgdW5pbnN0YWxsLiIKICAtIGNv
bmRhIGNyZWF0ZSAtbiB0ZXN0ZW52IC0tdXNlLWxvY2FsIC0teWVzIC1jIHF1
YW50b3BpYW4gLWMgcXVhbnRvcGlhbi9sYWJlbC9jaSBwaXAgcHl0aG9uPSRU
UkFWSVNfUFlUSE9OX1ZFUlNJT04gbnVtcHk9JE5VTVBZX1ZFUlNJT04gcGFu
ZGFzPSRQQU5EQVNfVkVSU0lPTiBzY2lweT0kU0NJUFlfVkVSU0lPTiB0YS1s
aWI9JFRBTElCX1ZFUlNJT04gbGliZ2ZvcnRyYW49My4wIGNlcnRpZmk9JENF
UlRJRklfVkVSU0lPTgogIC0gc291cmNlIGFjdGl2YXRlIHRlc3RlbnYKCiAg
IyBYWFg6IFdpdGggVFJBVklTIGFuZCBDSSBib3RoIHNldCwgcGlwIGluc3Rh
bGxpbmcgYmNvbHogdHJpZXMgdG8gY29tcGlsZSBpdCB3aXRoIGNvdmVyYWdl
IG9uIHB5Miwgd2hpY2ggZmFpbHMgdG8gbGluayBhZ2FpbnN0IGdjb3Ygb24g
T1NYLgogICMgaHR0cHM6Ly9naXRodWIuY29tL0Jsb3NjL2Jjb2x6L2Jsb2Iv
ODIzNGE3NTA1ZGE1MTg4ZGJhZjQxNWI3ZTM2ZDQ2MDlkMmM4YzJmMS9zZXR1
cC5weSNMMTM0LUwxMzYKICAtIFRSQVZJUz0nJyBFWFRFUk5BTF9SRVFVSVJF
TUVOVFM9J2NvdmVyYWxscycgZXRjL2Rldi1pbnN0YWxsIC0tY2FjaGUtZGly
PSIkSE9NRS8uY2FjaGUvLnBpcC9waXBfbnAkQ09OREFfTlBZIgoKYmVmb3Jl
X3NjcmlwdDoKICAtIHBpcCBmcmVlemUgfCBzb3J0CnNjcmlwdDoKICAtIGZs
YWtlOCB6aXBsaW5lIHRlc3RzCiAgLSBub3NldGVzdHMgLS13aXRoLWNvdmVy
YWdlCiAgIyBkZWFjdGl2YXRlIGVudiB0byBnZXQgYWNjZXNzIHRvIGFuYWNv
bmRhIGNvbW1hbmQKICAtIHNvdXJjZSBkZWFjdGl2YXRlCgogICMgdW5zaGFs
bG93IHRoZSBjbG9uZSBzbyB0aGUgY29uZGEgYnVpbGQgY2FuIGNsb25lIGl0
LgogIC0gZ2l0IGZldGNoIC0tdW5zaGFsbG93IC0tdGFncwogIC0gZXhlYyAz
PiYxOyBaUF9PVVQ9JChjb25kYSBidWlsZCBjb25kYS96aXBsaW5lIC0tcHl0
aG9uPSRDT05EQV9QWSAtLW51bXB5PSRDT05EQV9OUFkgLWMgcXVhbnRvcGlh
biAtYyBxdWFudG9waWFuL2xhYmVsL2NpIHwgdGVlID4oY2F0IC0gPiYzKSkK
ICAtIFpQX09VVFBVVD0kKGVjaG8gIiRaUF9PVVQiIHwgZ3JlcCAiYW5hY29u
ZGEgdXBsb2FkICIgfCBhd2sgJ3twcmludCAkTkZ9JykKICAtIGlmIFsgLXog
IiRaUF9PVVRQVVQiIF07IHRoZW4gZXhpdCAxOyBmaQogICMgdGVzdCB0aGF0
IHdlIGNhbiBjb25kYSBpbnN0YWxsIHppcGxpbmUgaW4gYSBuZXcgZW52CiAg
LSBjb25kYSBjcmVhdGUgLW4gaW5zdGFsbGVudiAtLXllcyAtcSAtLXVzZS1s
b2NhbCBweXRob249JFRSQVZJU19QWVRIT05fVkVSU0lPTiBudW1weT0kTlVN
UFlfVkVSU0lPTiB6aXBsaW5lIC1jIHF1YW50b3BpYW4gLWMgaHR0cHM6Ly9j
b25kYS5hbmFjb25kYS5vcmcvcXVhbnRvcGlhbi9sYWJlbC9jaQogIC0gaWYg
W1sgIiRET19VUExPQUQiID0gInRydWUiIF1dOyB0aGVuIGFuYWNvbmRhIC10
ICRBTkFDT05EQV9UT0tFTiB1cGxvYWQgJFpQX09VVFBVVCAtdSBxdWFudG9w
aWFuIC0tbGFiZWwgY2k7IGZpCiAgIyByZWFjdGl2YXRlIGVudiAobmVjZXNz
YXJ5IGZvciBjb3ZlcmFsbHMpCiAgLSBzb3VyY2UgYWN0aXZhdGUgdGVzdGVu
dgoKYWZ0ZXJfc3VjY2VzczoKICAtIGNvdmVyYWxscwoKYnJhbmNoZXM6CiAg
b25seToKICAgIC0gbWFzdGVyCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'Spoon-Knife',1300192,b'This repo is for demonstration purposes only.',b'HTML',14265,10171,,365,False,b'https://api.github.com/repos/octocat/Spoon-Knife/forks',"IyMjIFdlbGwgaGVsbG8gdGhlcmUhCgpUaGlzIHJlcG9zaXRvcnkgaXMgbWVh
bnQgdG8gcHJvdmlkZSBhbiBleGFtcGxlIGZvciAqZm9ya2luZyogYSByZXBv
c2l0b3J5IG9uIEdpdEh1Yi4KCkNyZWF0aW5nIGEgKmZvcmsqIGlzIHByb2R1
Y2luZyBhIHBlcnNvbmFsIGNvcHkgb2Ygc29tZW9uZSBlbHNlJ3MgcHJvamVj
dC4gRm9ya3MgYWN0IGFzIGEgc29ydCBvZiBicmlkZ2UgYmV0d2VlbiB0aGUg
b3JpZ2luYWwgcmVwb3NpdG9yeSBhbmQgeW91ciBwZXJzb25hbCBjb3B5LiBZ
b3UgY2FuIHN1Ym1pdCAqUHVsbCBSZXF1ZXN0cyogdG8gaGVscCBtYWtlIG90
aGVyIHBlb3BsZSdzIHByb2plY3RzIGJldHRlciBieSBvZmZlcmluZyB5b3Vy
IGNoYW5nZXMgdXAgdG8gdGhlIG9yaWdpbmFsIHByb2plY3QuIEZvcmtpbmcg
aXMgYXQgdGhlIGNvcmUgb2Ygc29jaWFsIGNvZGluZyBhdCBHaXRIdWIuCgpB
ZnRlciBmb3JraW5nIHRoaXMgcmVwb3NpdG9yeSwgeW91IGNhbiBtYWtlIHNv
bWUgY2hhbmdlcyB0byB0aGUgcHJvamVjdCwgYW5kIHN1Ym1pdCBbYSBQdWxs
IFJlcXVlc3RdKGh0dHBzOi8vZ2l0aHViLmNvbS9vY3RvY2F0L1Nwb29uLUtu
aWZlL3B1bGxzKSBhcyBwcmFjdGljZS4KCkZvciBzb21lIG1vcmUgaW5mb3Jt
YXRpb24gb24gaG93IHRvIGZvcmsgYSByZXBvc2l0b3J5LCBbY2hlY2sgb3V0
IG91ciBndWlkZSwgIkZvcmtpbmcgUHJvamVjdHMiIl0oaHR0cDovL2d1aWRl
cy5naXRodWIuY29tL292ZXJ2aWV3cy9mb3JraW5nLykuIFRoYW5rcyEgOnNw
YXJrbGluZ19oZWFydDoK
",,10171,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'syntastic',248523,b'Syntax checking hacks for vim',b'Vim script',39,10170,,212,False,b'https://api.github.com/repos/vim-syntastic/syntastic/forks',"ICAgICAgICAgICAgICAgICAgICwKICAgICAgICAgICAgICAgICAgLyBcLCxf
ICAuJ3wKICAgICAgICAgICAgICAgLHt7fCAvfX19fS9fLicgICAgICAgICAg
ICBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X18KICAgICAgICAgICAgICB9fX19YCAne3snICAnLiAgICAgICAgICAgIC8g
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBc
CiAgICAgICAgICAgIHt7e3t7ICAgIF8gICA7LCBcICAgICAgICAgIC8gICAg
ICAgICAgICBMYWRpZXMgYW5kIEdlbnRsZW1lbiwgICAgICAgICAgICAgIFwK
ICAgICAgICAgLH19fX19fSAgICAvb2BcICBgIDspICAgICAgICB8ICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAog
ICAgICAgIHt7e3t7eyAgIC8gICAgICAgICAgICggICAgICAgIHwgICAgICAg
ICAgICAgICAgIHRoaXMgaXMgLi4uICAgICAgICAgICAgICAgICAgICB8CiAg
ICAgICAgfX19fX19ICAgfCAgICAgICAgICAgIFwgICAgICAgfCAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKICAg
ICAgIHt7e3t7e3t7ICAgXCAgICAgICAgICAgIFwgICAgICB8ICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAogICAg
ICAgfX19fX19fX19ICAgJy5fXyAgICAgIF8gIHwgICAgIHwgICAgX19fX18g
ICAgICAgICAgICAgX18gICAgICAgICAgICAgX18gIF8gICAgICB8CiAgICAg
ICB7e3t7e3t7eyAgICAgICAvYC5fICAoX1wgLyAgICAgfCAgIC8gX19fL19f
ICBfX19fX18gIC8gL19fX19fIF9fX19fXy8gL18oXylfX19fIHwKICAgICAg
ICB9fX19fX0nICAgICAgfCAgICAvL19fXy8gICAtLT06ICAgXF9fIFwvIC8g
LyAvIF9fIFwvIF9fLyBfXyBgLyBfX18vIF9fLyAvIF9fXy8gfAogICAgamdz
IGB7e3t7YCAgICAgICB8ICAgICAnLS0nICAgICAgIHwgIF9fXy8gLyAvXy8g
LyAvIC8gLyAvXy8gL18vIChfXyAgKSAvXy8gLyAvX18gICB8CiAgICAgICAg
IH19fWAgICAgICAgICAgICAgICAgICAgICAgICAgfCAvX19fXy9cX18sIC9f
LyAvXy9cX18vXF9fLF8vX19fXy9cX18vXy9cX19fLyAgIHwKICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgL19fX18vICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAogICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8KICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgXF9fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fXy8KCgotIC0gLQoxLiBbSW50
cm9kdWN0aW9uXSgjaW50cm9kdWN0aW9uKSAgCjIuIFtJbnN0YWxsYXRpb25d
KCNpbnN0YWxsYXRpb24pICAKMi4xLiBbUmVxdWlyZW1lbnRzXSgjcmVxdWly
ZW1lbnRzKSAgCjIuMi4gW0luc3RhbGxpbmcgc3ludGFzdGljIHdpdGggUGF0
aG9nZW5dKCNpbnN0YWxscGF0aG9nZW4pICAKMy4gW1JlY29tbWVuZGVkIHNl
dHRpbmdzXSgjc2V0dGluZ3MpICAKNC4gW0ZBUV0oI2ZhcSkgIAo0LjEuIFtJ
IGluc3RhbGxlZCBzeW50YXN0aWMgYnV0IGl0IGlzbid0IHJlcG9ydGluZyBh
bnkgZXJyb3JzLi4uXSgjZmFxaW5mbykgIAo0LjIuIFtTeW50YXN0aWMgc3Vw
cG9ydHMgc2V2ZXJhbCBjaGVja2VycyBmb3IgbXkgZmlsZXR5cGUsIGhvdyBk
byBJIHRlbGwgaXQgd2hpY2ggb25lKHMpIHRvIHVzZT9dKCNmYXFjaGVja2Vy
cykgIAo0LjMuIFtIb3cgY2FuIEkgcnVuIGNoZWNrZXJzIGZvciAiZm9yZWln
biIgZmlsZXR5cGVzIGFnYWluc3QgdGhlIGN1cnJlbnQgZmlsZT9dKCNmYXFm
b3JlaWduKSAgCjQuNC4gW0kgaGF2ZSBlbmFibGVkIG11bHRpcGxlIGNoZWNr
ZXJzIGZvciB0aGUgY3VycmVudCBmaWxldHlwZS4gSG93IGNhbiBJIGRpc3Bs
YXkgYWxsIGVycm9ycyBmcm9tIGFsbCBjaGVja2VycyB0b2dldGhlcj9dKCNm
YXFhZ2dyZWdhdGUpICAKNC41LiBbSG93IGNhbiBJIHBhc3MgYWRkaXRpb25h
bCBhcmd1bWVudHMgdG8gYSBjaGVja2VyP10oI2ZhcWFyZ3MpICAKNC42LiBb
SSBydW4gYSBjaGVja2VyIGFuZCB0aGUgbG9jYXRpb24gbGlzdCBpcyBub3Qg
dXBkYXRlZC4uLl0oI2ZhcWxvY2xpc3QpICAKNC42LiBbSSBydW5gOmxvcGVu
YCBvciBgOmx3aW5kb3dgIGFuZCB0aGUgZXJyb3Igd2luZG93IGlzIGVtcHR5
Li4uXSgjZmFxbG9jbGlzdCkgIAo0LjcuIFtIb3cgY2FuIEkganVtcCBiZXR3
ZWVuIHRoZSBkaWZmZXJlbnQgZXJyb3JzIHdpdGhvdXQgdXNpbmcgdGhlIGxv
Y2F0aW9uIGxpc3QgYXQgdGhlIGJvdHRvbSBvZiB0aGUgd2luZG93P10oI2Zh
cWxuZXh0KSAgCjQuOC4gW1RoZSBlcnJvciB3aW5kb3cgaXMgY2xvc2VkIGF1
dG9tYXRpY2FsbHkgd2hlbiBJIGA6cXVpdGAgdGhlIGN1cnJlbnQgYnVmZmVy
IGJ1dCBub3Qgd2hlbiBJIGA6YmRlbGV0ZWAgaXQ/XSgjZmFxYmRlbGV0ZSkg
IAo0LjkuIFtNeSBmYXZvdXJpdGUgY2hlY2tlciBuZWVkcyB0byBsb2FkIGEg
Y29uZmlndXJhdGlvbiBmaWxlIGZyb20gdGhlIHByb2plY3QncyByb290IHJh
dGhlciB0aGFuIHRoZSBjdXJyZW50IGRpcmVjdG9yeS4uLl0oI2ZhcWNvbmZp
ZykgIAo0LjEwLiBbV2hhdCBpcyB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHN5
bnRheCBjaGVja2VycyBhbmQgc3R5bGUgY2hlY2tlcnM/XSgjZmFxc3R5bGUp
ICAKNC4xMS4gW0hvdyBjYW4gSSBjaGVjayBzY3JpcHRzIHdyaXR0ZW4gZm9y
IGRpZmZlcmVudCB2ZXJzaW9ucyBvZiBQeXRob24/XSgjZmFxcHl0aG9uKSAg
CjQuMTIuIFtIb3cgY2FuIEkgY2hlY2sgc2NyaXB0cyB3cml0dGVuIGZvciBk
aWZmZXJlbnQgdmVyc2lvbnMgb2YgUnVieT9dKCNmYXFydWJ5KSAgCjQuMTMu
IFtUaGUgYHBlcmxgIGNoZWNrZXIgaGFzIHN0b3BwZWQgd29ya2luZy4uLl0o
I2ZhcXBlcmwpICAKNC4xNC4gW1doYXQgaGFwcGVuZWQgdG8gdGhlIGBydXN0
Y2AgY2hlY2tlcj9dKCNmYXFydXN0KSAgCjQuMTUuIFtXaGF0IGhhcHBlbmVk
IHRvIHRoZSBgdHNjYCBjaGVja2VyP10oI2ZhcXRzYykgIAo0LjE2LiBbV2hh
dCBoYXBwZW5lZCB0byB0aGUgYHhjcnVuYCBjaGVja2VyP10oI2ZhcXhjcnVu
KSAgCjUuIFtSZXNvdXJjZXNdKCNvdGhlcnJlc291cmNlcykgIAoKLSAtIC0K
CjxhIG5hbWU9ImludHJvZHVjdGlvbiI+PC9hPgoKIyMgMVwuIEludHJvZHVj
dGlvbgoKU3ludGFzdGljIGlzIGEgc3ludGF4IGNoZWNraW5nIHBsdWdpbiBm
b3IgW1ZpbV1bdmltXSBjcmVhdGVkIGJ5CltNYXJ0aW4gR3JlbmZlbGxdW3Nj
cm9vbG9vc2VdLiBJdCBydW5zIGZpbGVzIHRocm91Z2ggZXh0ZXJuYWwgc3lu
dGF4IGNoZWNrZXJzCmFuZCBkaXNwbGF5cyBhbnkgcmVzdWx0aW5nIGVycm9y
cyB0byB0aGUgdXNlci4gVGhpcyBjYW4gYmUgZG9uZSBvbiBkZW1hbmQsIG9y
CmF1dG9tYXRpY2FsbHkgYXMgZmlsZXMgYXJlIHNhdmVkLiBJZiBzeW50YXgg
ZXJyb3JzIGFyZSBkZXRlY3RlZCwgdGhlIHVzZXIgaXMKbm90aWZpZWQgYW5k
IGlzIGhhcHB5IGJlY2F1c2UgdGhleSBkaWRuJ3QgaGF2ZSB0byBjb21waWxl
IHRoZWlyIGNvZGUgb3IgZXhlY3V0ZQp0aGVpciBzY3JpcHQgdG8gZmluZCB0
aGVtLgoKQXQgdGhlIHRpbWUgb2YgdGhpcyB3cml0aW5nLCBzeW50YXN0aWMg
aGFzIGNoZWNraW5nIHBsdWdpbnMgZm9yIEFDUEkKU291cmNlIExhbmd1YWdl
LCBBY3Rpb25TY3JpcHQsIEFkYSwgQW5zaWJsZSBjb25maWd1cmF0aW9ucywg
QVBJIEJsdWVwcmludCwKQXBwbGVTY3JpcHQsIEFzY2lpRG9jLCBBc3NlbWJs
eSBsYW5ndWFnZXMsIEJFTUhUTUwsIEJybywgQm91cm5lIHNoZWxsLCBDLCBD
KyssCkMjLCBDYWJhbCwgQ2hlZiwgQ01ha2UsIENvZmZlZVNjcmlwdCwgQ29j
bywgQ29xLCBDU1MsIEN1Y3VtYmVyLCBDVURBLCBELCBEYXJ0LApEb2NCb29r
LCBEb2NrZXJmaWxlLCBEdXN0LCBFbGl4aXIsIEVybGFuZywgZVJ1YnksIEZv
cnRyYW4sIEdlbnRvbyBtZXRhZGF0YSwKR0xTTCwgR28sIEhhbWwsIEhhc2tl
bGwsIEhheGUsIEhhbmRsZWJhcnMsIEhTUywgSFRNTCwgSmF2YSwgSmF2YVNj
cmlwdCwgSlNPTiwKSlNYLCBKdWxpYSwgTEVTUywgTGV4LCBMaW1ibywgTElT
UCwgTExWTSBpbnRlcm1lZGlhdGUgbGFuZ3VhZ2UsIEx1YSwgTWFya2Rvd24s
Ck1BVExBQiwgTWVyY3VyeSwgTkFTTSwgTml4LCBPYmplY3RpdmUtQywgT2Jq
ZWN0aXZlLUMrKywgT0NhbWwsIFBlcmwsIFBlcmwKNiwgUGVybCBQT0QsIFBI
UCwgZ2V0dGV4dCBQb3J0YWJsZSBPYmplY3QsIE9TIFggYW5kIGlPUyBwcm9w
ZXJ0eSBsaXN0cywgUHVnCihmb3JtZXJseSBKYWRlKSwgUHVwcGV0LCBQeXRo
b24sIFFNTCwgUiwgUmFja2V0LCBSREYgVHJpRywgUkRGIFR1cnRsZSwgUmVs
YXgKTkcsIHJlU3RydWN0dXJlZFRleHQsIFJQTSBzcGVjLCBSdWJ5LCBTQVNT
L1NDU1MsIFNjYWxhLCBTbGltLCBTTUwsIFNvbGlkaXR5LApTcGhpbngsIFNR
TCwgU3R5bHVzLCBUY2wsIFRlWCwgVGV4aW5mbywgVHdpZywgVHlwZVNjcmlw
dCwgVmFsYSwgVmVyaWxvZywgVkhETCwKVmltIGhlbHAsIFZpbUwsIFZ1ZS5q
cywgeEh0bWwsIFhNTCwgWFNMVCwgWFF1ZXJ5LCBZQUNDLCBZQU1MLCBZQU5H
IGRhdGEgbW9kZWxzLApZQVJBIHJ1bGVzLCB6ODAsIFpvcGUgcGFnZSB0ZW1w
bGF0ZXMsIGFuZCBac2guIFNlZSB0aGUgW21hbnVhbF1bY2hlY2tlcnNdIGZv
cgpkZXRhaWxzIGFib3V0IHRoZSBjb3JyZXNwb25kaW5nIHN1cHBvcnRlZCBj
aGVja2VycyAoYDpoZWxwIHN5bnRhc3RpYy1jaGVja2Vyc2AKaW4gVmltKS4K
CkEgbnVtYmVyIG9mIHRoaXJkLXBhcnR5IFZpbSBwbHVnaW5zIGFsc28gcHJv
dmlkZSBjaGVja2VycyBmb3Igc3ludGFzdGljLCBmb3IKZXhhbXBsZTogW21l
cmxpbl1bbWVybGluXSwgW29tbmlzaGFycC12aW1dW29tbmlzaGFycF0sIFty
dXN0LnZpbV1bcnVzdF0sCltzeW50YXN0aWMtZXh0cmFzXVtteWludF0sIFtz
eW50YXN0aWMtbW9yZV1bcm9rdGFzXSwgW3RzdXF1eW9taV1bdHN1cXV5b21p
XSwKW3ZpbS1jcnlzdGFsXVtjcnlzdGFsXSwgW3ZpbS1lYXN0d29vZF1bZWFz
dHdvb2RdLCBhbmQgW3ZpbS1zd2lmdF1bc3dpZnRdLgoKQmVsb3cgaXMgYSBz
Y3JlZW5zaG90IHNob3dpbmcgdGhlIG1ldGhvZHMgdGhhdCBTeW50YXN0aWMg
dXNlcyB0byBkaXNwbGF5IHN5bnRheAplcnJvcnMuIE5vdGUgdGhhdCwgaW4g
cHJhY3Rpc2UsIHlvdSB3aWxsIG9ubHkgaGF2ZSBhIHN1YnNldCBvZiB0aGVz
ZSBtZXRob2RzCmVuYWJsZWQuCgohW1NjcmVlbnNob3QgMV1bc2NyZWVuc2hv
dF0KCjEuIEVycm9ycyBhcmUgbG9hZGVkIGludG8gdGhlIGxvY2F0aW9uIGxp
c3QgZm9yIHRoZSBjb3JyZXNwb25kaW5nIHdpbmRvdy4KMi4gV2hlbiB0aGUg
Y3Vyc29yIGlzIG9uIGEgbGluZSBjb250YWluaW5nIGFuIGVycm9yLCB0aGUg
ZXJyb3IgbWVzc2FnZSBpcyBlY2hvZWQgaW4gdGhlIGNvbW1hbmQgd2luZG93
LgozLiBTaWducyBhcmUgcGxhY2VkIGJlc2lkZSBsaW5lcyB3aXRoIGVycm9y
cyAtIG5vdGUgdGhhdCB3YXJuaW5ncyBhcmUgZGlzcGxheWVkIGluIGEgZGlm
ZmVyZW50IGNvbG9yLgo0LiBUaGVyZSBpcyBhIGNvbmZpZ3VyYWJsZSBzdGF0
dXNsaW5lIGZsYWcgeW91IGNhbiBpbmNsdWRlIGluIHlvdXIgc3RhdHVzbGlu
ZSBjb25maWcuCjUuIEhvdmVyIHRoZSBtb3VzZSBvdmVyIGEgbGluZSBjb250
YWluaW5nIGFuIGVycm9yIGFuZCB0aGUgZXJyb3IgbWVzc2FnZSBpcyBkaXNw
bGF5ZWQgYXMgYSBiYWxsb29uLgo2LiAobm90IHNob3duKSBIaWdobGlnaHRp
bmcgZXJyb3JzIHdpdGggc3ludGF4IGhpZ2hsaWdodGluZy4gRXJyb25lb3Vz
IHBhcnRzIG9mIGxpbmVzIGNhbiBiZSBoaWdobGlnaHRlZC4KCjxhIG5hbWU9
Imluc3RhbGxhdGlvbiI+PC9hPgoKIyMgMlwuIEluc3RhbGxhdGlvbgoKPGEg
bmFtZT0icmVxdWlyZW1lbnRzIj48L2E+CgojIyMgMi4xXC4gUmVxdWlyZW1l
bnRzCgpTeW50YXN0aWMgaXRzZWxmIGhhcyByYXRoZXIgcmVsYXhlZCByZXF1
aXJlbWVudHM6IGl0IGRvZXNuJ3QgaGF2ZSBhbnkgZXh0ZXJuYWwKZGVwZW5k
ZW5jaWVzLCBhbmQgaXQgbmVlZHMgYSB2ZXJzaW9uIG9mIFtWaW1dW3ZpbV0g
Y29tcGlsZWQgd2l0aCBhIGZldyBjb21tb24KZmVhdHVyZXM6IGBhdXRvY21k
YCwgYGV2YWxgLCBgZmlsZV9pbl9wYXRoYCwgYG1vZGlmeV9mbmFtZWAsIGBx
dWlja2ZpeGAsCmByZWx0aW1lYCwgYHN0YXR1c2xpbmVgLCBhbmQgYHVzZXJf
Y29tbWFuZHNgLiBOb3QgYWxsIHBvc3NpYmxlIGNvbWJpbmF0aW9ucyBvZgpm
ZWF0dXJlcyB0aGF0IGluY2x1ZGUgdGhlIG9uZXMgYWJvdmUgbWFrZSBlcXVh
bCBzZW5zZSBvbiBhbGwgb3BlcmF0aW5nIHN5c3RlbXMsCmJ1dCBWaW0gdmVy
c2lvbiA3IG9yIGxhdGVyIHdpdGggdGhlICJub3JtYWwiLCAiYmlnIiwgb3Ig
Imh1Z2UiIGZlYXR1cmUgc2V0cwpzaG91bGQgYmUgZmluZS4KClN5bnRhc3Rp
YyBzaG91bGQgd29yayB3aXRoIGFueSBtb2Rlcm4gcGx1Z2luIG1hbmFnZXJz
IGZvciBWaW0sIHN1Y2ggYXMKW05lb0J1bmRsZV1bbmVvYnVuZGxlXSwgW1Bh
dGhvZ2VuXVtwYXRob2dlbl0sIFtWaW0tQWRkb24tTWFuYWdlcl1bdmFtXSwK
W1ZpbS1QbHVnXVtwbHVnXSwgb3IgW1Z1bmRsZV1bdnVuZGxlXS4gSW5zdHJ1
Y3Rpb25zIGZvciBpbnN0YWxsaW5nIHN5bnRhc3RpYwp3aXRoIFtQYXRob2dl
bl1bcGF0aG9nZW5dIGFyZSBpbmNsdWRlZCBiZWxvdyBmb3IgY29tcGxldGVu
ZXNzLgoKU3RhcnRpbmcgd2l0aCBWaW0gdmVyc2lvbiA3LjQuMTQ4NiB5b3Ug
Y2FuIGFsc28gbG9hZCBzeW50YXN0aWMgdXNpbmcgdGhlCnN0YW5kYXJkIG1l
Y2hhbmlzbSBvZiBwYWNrYWdlcywgd2l0aG91dCB0aGUgaGVscCBvZiB0aGly
ZC1wYXJ0eSBwbHVnaW4gbWFuYWdlcnMKKHNlZSBgOmhlbHAgcGFja2FnZXNg
IGluIFZpbSBmb3IgZGV0YWlscykuIEJld2FyZSBob3dldmVyIHRoYXQsIHdo
aWxlIHN1cHBvcnQKZm9yIHBhY2thZ2VzIGhhcyBiZWVuIGFkZGVkIGluIFZp
bSA3LjQuMTM4NCwgdGhlIGZ1bmN0aW9uYWxpdHkgbmVlZGVkIGJ5CnN5bnRh
c3RpYyBpcyBwcmVzZW50IG9ubHkgaW4gdmVyc2lvbnMgNy40LjE0ODYgYW5k
IGxhdGVyLgoKTGFzdCBidXQgbm90IGxlYXN0OiBzeW50YXN0aWMgZG9lc24n
dCBrbm93IGhvdyB0byBkbyBhbnkgc3ludGF4IGNoZWNrcyBieQppdHNlbGYu
IEluIG9yZGVyIHRvIGdldCBtZWFuaW5nZnVsIHJlc3VsdHMgeW91IG5lZWQg
dG8gaW5zdGFsbCBleHRlcm5hbApjaGVja2VycyBjb3JyZXNwb25kaW5nIHRv
IHRoZSB0eXBlcyBvZiBmaWxlcyB5b3UgdXNlLiBQbGVhc2UgY29uc3VsdCB0
aGUKW21hbnVhbF1bY2hlY2tlcnNdIChgOmhlbHAgc3ludGFzdGljLWNoZWNr
ZXJzYCBpbiBWaW0pIGZvciBhIGxpc3Qgb2Ygc3VwcG9ydGVkCmNoZWNrZXJz
LgoKPGEgbmFtZT0iaW5zdGFsbHBhdGhvZ2VuIj48L2E+CgojIyMgMi4yXC4g
SW5zdGFsbGluZyBzeW50YXN0aWMgd2l0aCBQYXRob2dlbgoKSWYgeW91IGFs
cmVhZHkgaGF2ZSBbUGF0aG9nZW5dW3BhdGhvZ2VuXSB3b3JraW5nIHRoZW4g
c2tpcCBbU3RlcCAxXSgjc3RlcDEpIGFuZCBnbyB0bwpbU3RlcCAyXSgjc3Rl
cDIpLgoKPGEgbmFtZT0ic3RlcDEiPjwvYT4KCiMjIyMgMi4yLjFcLiBTdGVw
IDE6IEluc3RhbGwgcGF0aG9nZW4udmltCgpGaXJzdCBJJ2xsIHNob3cgeW91
IGhvdyB0byBpbnN0YWxsIFRpbSBQb3BlJ3MgW1BhdGhvZ2VuXVtwYXRob2dl
bl0gc28gdGhhdCBpdCdzIGVhc3kgdG8KaW5zdGFsbCBzeW50YXN0aWMuIERv
IHRoaXMgaW4geW91ciB0ZXJtaW5hbCBzbyB0aGF0IHlvdSBnZXQgdGhlIGBw
YXRob2dlbi52aW1gCmZpbGUgYW5kIHRoZSBkaXJlY3RvcmllcyBpdCBuZWVk
czoKYGBgc2gKbWtkaXIgLXAgfi8udmltL2F1dG9sb2FkIH4vLnZpbS9idW5k
bGUgJiYgXApjdXJsIC1MU3NvIH4vLnZpbS9hdXRvbG9hZC9wYXRob2dlbi52
aW0gaHR0cHM6Ly90cG8ucGUvcGF0aG9nZW4udmltCmBgYApOZXh0IHlvdSAq
bmVlZCogdG8gYWRkIHRoaXMgdG8geW91ciBgfi8udmltcmNgOgpgYGB2aW0K
ZXhlY3V0ZSBwYXRob2dlbiNpbmZlY3QoKQpgYGAKCjxhIG5hbWU9InN0ZXAy
Ij48L2E+CgojIyMjIDIuMi4yXC4gU3RlcCAyOiBJbnN0YWxsIHN5bnRhc3Rp
YyBhcyBhIFBhdGhvZ2VuIGJ1bmRsZQoKWW91IG5vdyBoYXZlIHBhdGhvZ2Vu
IGluc3RhbGxlZCBhbmQgY2FuIHB1dCBzeW50YXN0aWMgaW50byBgfi8udmlt
L2J1bmRsZWAgbGlrZQp0aGlzOgpgYGBzaApjZCB+Ly52aW0vYnVuZGxlICYm
IFwKZ2l0IGNsb25lIC0tZGVwdGg9MSBodHRwczovL2dpdGh1Yi5jb20vdmlt
LXN5bnRhc3RpYy9zeW50YXN0aWMuZ2l0CmBgYApRdWl0IHZpbSBhbmQgc3Rh
cnQgaXQgYmFjayB1cCB0byByZWxvYWQgaXQsIHRoZW4gdHlwZToKYGBgdmlt
CjpIZWxwdGFncwpgYGAKSWYgeW91IGdldCBhbiBlcnJvciB3aGVuIHlvdSBk
byB0aGlzLCB0aGVuIHlvdSBwcm9iYWJseSBkaWRuJ3QgaW5zdGFsbApbUGF0
aG9nZW5dW3BhdGhvZ2VuXSByaWdodC4gR28gYmFjayB0byBbU3RlcCAxXSgj
c3RlcDEpIGFuZCBtYWtlIHN1cmUgeW91IGRpZCB0aGUKZm9sbG93aW5nOgoK
MS4gQ3JlYXRlZCBib3RoIHRoZSBgfi8udmltL2F1dG9sb2FkYCBhbmQgYH4v
LnZpbS9idW5kbGVgIGRpcmVjdG9yaWVzLgoyLiBBZGRlZCB0aGUgYGV4ZWN1
dGUgcGF0aG9nZW4jaW5mZWN0KClgIGxpbmUgdG8geW91ciBgfi8udmltcmNg
IGZpbGUKMy4gRGlkIHRoZSBgZ2l0IGNsb25lYCBvZiBzeW50YXN0aWMgaW5z
aWRlIGB+Ly52aW0vYnVuZGxlYAo0LiBIYXZlIHBlcm1pc3Npb25zIHRvIGFj
Y2VzcyBhbGwgb2YgdGhlc2UgZGlyZWN0b3JpZXMuCgo8YSBuYW1lPSJzZXR0
aW5ncyI+PC9hPgoKIyMgM1wuIFJlY29tbWVuZGVkIHNldHRpbmdzCgpTeW50
YXN0aWMgaGFzIG51bWVyb3VzIG9wdGlvbnMgdGhhdCBjYW4gYmUgY29uZmln
dXJlZCwgYW5kIHRoZSBkZWZhdWx0cwphcmUgbm90IHBhcnRpY3VsYXJseSB3
ZWxsIHN1aXRhYmxlIGZvciBuZXcgdXNlcnMuIEl0IGlzIHJlY29tbWVuZGVk
CnRoYXQgeW91IHN0YXJ0IGJ5IGFkZGluZyB0aGUgZm9sbG93aW5nIGxpbmVz
IHRvIHlvdXIgYHZpbXJjYCBmaWxlLCBhbmQKcmV0dXJuIHRvIHRoZW0gYWZ0
ZXIgcmVhZGluZyB0aGUgbWFudWFsIChzZWUgYDpoZWxwIHN5bnRhc3RpY2Ag
aW4gVmltKToKYGBgdmltCnNldCBzdGF0dXNsaW5lKz0lI3dhcm5pbmdtc2cj
CnNldCBzdGF0dXNsaW5lKz0le1N5bnRhc3RpY1N0YXR1c2xpbmVGbGFnKCl9
CnNldCBzdGF0dXNsaW5lKz0lKgoKbGV0IGc6c3ludGFzdGljX2Fsd2F5c19w
b3B1bGF0ZV9sb2NfbGlzdCA9IDEKbGV0IGc6c3ludGFzdGljX2F1dG9fbG9j
X2xpc3QgPSAxCmxldCBnOnN5bnRhc3RpY19jaGVja19vbl9vcGVuID0gMQps
ZXQgZzpzeW50YXN0aWNfY2hlY2tfb25fd3EgPSAwCmBgYAoKPGEgbmFtZT0i
ZmFxIj48L2E+CgojIyA0XC4gRkFRCgo8YSBuYW1lPSJmYXFpbmZvIj48L2E+
CgpfXzQuMS4gUS4gSSBpbnN0YWxsZWQgc3ludGFzdGljIGJ1dCBpdCBpc24n
dCByZXBvcnRpbmcgYW55IGVycm9ycy4uLl9fCgpBLiBUaGUgbW9zdCBsaWtl
bHkgcmVhc29uIGlzIHRoYXQgbm9uZSBvZiB0aGUgc3ludGF4IGNoZWNrZXJz
IHRoYXQgaXQgcmVxdWlyZXMKYXJlIGluc3RhbGxlZC4gRm9yIGV4YW1wbGU6
IGJ5IGRlZmF1bHQsIHB5dGhvbiByZXF1aXJlcyBlaXRoZXIgYGZsYWtlOGAg
b3IKYHB5bGludGAgdG8gYmUgaW5zdGFsbGVkIGFuZCBpbiB5b3VyIGAkUEFU
SGAuIFJlYWQgdGhlIFttYW51YWxdW2NoZWNrZXJzXQooYDpoZWxwIHN5bnRh
c3RpYy1jaGVja2Vyc2AgaW4gVmltKSB0byBmaW5kIG91dCB3aGF0IGV4ZWN1
dGFibGVzIGFyZQpzdXBwb3J0ZWQuIE5vdGUgdGhhdCBhbGlhc2VzIGRvIG5v
dCB3b3JrOyB0aGUgYWN0dWFsIGV4ZWN1dGFibGVzIG11c3QgYmUKYXZhaWxh
YmxlIGluIHlvdXIgYCRQQVRIYC4gU3ltYm9saWMgbGlua3MgYXJlIG9rYXkg
dGhvdWdoLiAgWW91IGNhbiBzZWUKc3ludGFzdGljJ3MgaWRlYSBvZiBhdmFp
bGFibGUgY2hlY2tlcnMgYnkgcnVubmluZyBgOlN5bnRhc3RpY0luZm9gLgoK
QSBzZWNvbmQgcHJvYmFibGUgcmVhc29uIGlzIHRoYXQgbm9uZSBvZiB0aGUg
YXZhaWxhYmxlIGNoZWNrZXJzIGFyZQplbmFibGVkLiBTeW50YXN0aWMgY29t
ZXMgcHJlY29uZmlndXJlZCB3aXRoIGEgZGVmYXVsdCBsaXN0IG9mIGVuYWJs
ZWQgY2hlY2tlcnMKcGVyIGZpbGV0eXBlLCBidXQgdGhpcyBsaXN0IGlzIGtl
cHQgc2hvcnQgaW4gb3JkZXIgdG8gcHJldmVudCBzbG93aW5nIGRvd24gVmlt
Cm9yIHRyeWluZyB0byBydW4gY29uZmxpY3RpbmcgY2hlY2tzLiBUaGUgY29t
bWFuZCBgOlN5bnRhc3RpY0luZm9gIHdpbGwgc2hvdyB5b3UKd2hpY2ggY2hl
Y2tlcnMgYXJlIGVuYWJsZWQuIFlvdSBjYW4gdGVsbCBzeW50YXN0aWMgd2hp
Y2ggY2hlY2tlcnMgKGFtb25nIHRoZQphdmFpbGFibGUgb25lcykgeW91IHdh
bnQgdG8gcnVuIGJ5IHNldHRpbmcgYGc6c3ludGFzdGljXzxmaWxldHlwZT5f
Y2hlY2tlcnNgIGluCnlvdXIgYHZpbXJjYCAoc2VlIFtiZWxvd10oI2ZhcWNo
ZWNrZXJzKSkuCgpBIHRoaXJkIHBvc3NpYmxlIHJlYXNvbiBpcyB0aGF0IHRo
ZSBgJFBBVEhgIHNlZW4gYnkgc3ludGFzdGljIG1pZ2h0IG5vdCBiZSBzYW1l
CmFzIHRoZSBgJFBBVEhgIGluIHlvdXIgbG9naW4gc2hlbGwuIFN5bnRhc3Rp
YyBydW5zIGNoZWNrZXJzIHVzaW5nIHRoZSBzaGVsbApwb2ludGVkIHRvIGJ5
IFZpbSdzIGBzaGVsbGAgKG9yIGJ5IGBnOnN5bnRhc3RpY19zaGVsbGAsIGlm
IHNldCksIGFuZCB0aGF0J3MgdGhlCnNoZWxsIHlvdSBuZWVkIHRvIGNvbmZp
Z3VyZSB0byBzZXQgdGhlIHByb3BlciBgJFBBVEhgIGFuZCBlbnZpcm9ubWVu
dCB2YXJpYWJsZXMKZm9yIHlvdXIgY2hlY2tlcnMuIFlvdSBjYW4gc2VlIHN5
bnRhc3RpYydzIGlkZWEgb2YgYCRQQVRIYCBieSBydW5uaW5nCmBgYHZpbQo6
ZWNobyBzeW50YXN0aWMjdXRpbCNzeXN0ZW0oJ2VjaG8gIiRQQVRIIicpCmBg
YApvbiBVTklYIGFuZCBNYWMgT1MtWCBzeXN0ZW1zLCBvcgpgYGB2aW0KOmVj
aG8gc3ludGFzdGljI3V0aWwjc3lzdGVtKCdlY2hvICVQQVRIJScpCmBgYApv
biBXaW5kb3dzLgoKRmluYWxseSwgYW5vdGhlciByZWFzb24gaXQgY291bGQg
ZmFpbCBpcyB0aGF0IGVpdGhlciB0aGUgY29tbWFuZCBsaW5lIG9wdGlvbnMK
b3IgdGhlIGVycm9yIG91dHB1dCBmb3IgYSBzeW50YXggY2hlY2tlciBtYXkg
aGF2ZSBjaGFuZ2VkLiBJbiB0aGlzIGNhc2UsIG1ha2UKc3VyZSB5b3UgaGF2
ZSB0aGUgbGF0ZXN0IHZlcnNpb24gb2YgdGhlIHN5bnRheCBjaGVja2VyIGlu
c3RhbGxlZC4gSWYgaXQgc3RpbGwKZmFpbHMgdGhlbiBwb3N0IGFuIFtpc3N1
ZV1bYnVnX3RyYWNrZXJdIC0gb3IgYmV0dGVyIHlldCwgY3JlYXRlIGEgcHVs
bCByZXF1ZXN0LgoKPGEgbmFtZT0iZmFxY2hlY2tlcnMiPjwvYT4KCl9fNC4y
LiBRLiBTeW50YXN0aWMgc3VwcG9ydHMgc2V2ZXJhbCBjaGVja2VycyBmb3Ig
bXkgZmlsZXR5cGUsIGhvdyBkbyBJIHRlbGwgaXQKd2hpY2ggb25lKHMpIHRv
IHVzZT9fXwoKQS4gQWRkIGEgbGluZSBsaWtlIHRoaXMgdG8geW91ciBgdmlt
cmNgOgpgYGB2aW0KbGV0IGc6c3ludGFzdGljXzxmaWxldHlwZT5fY2hlY2tl
cnMgPSBbJzxjaGVja2VyLW5hbWU+J10KYGBgCgpUbyBzZWUgdGhlIGxpc3Qg
b2Ygc3VwcG9ydGVkIGNoZWNrZXJzIGZvciB5b3VyIGZpbGV0eXBlIHJlYWQg
dGhlClttYW51YWxdW2NoZWNrZXJzXSAoYDpoZWxwIHN5bnRhc3RpYy1jaGVj
a2Vyc2AgaW4gVmltKS4KCkZvciBleGFtcGxlLCBQeXRob24gaGFzIHRoZSBm
b2xsb3dpbmcgY2hlY2tlcnMsIGFtb25nIG90aGVyczogYGZsYWtlOGAsCmBw
eWZsYWtlc2AsIGBweWxpbnRgIGFuZCBhIG5hdGl2ZSBgcHl0aG9uYCBjaGVj
a2VyLiAgVG8gdGVsbCBzeW50YXN0aWMgdG8gdXNlCmBweWxpbnRgLCB5b3Ug
d291bGQgdXNlIHRoaXMgc2V0dGluZzoKYGBgdmltCmxldCBnOnN5bnRhc3Rp
Y19weXRob25fY2hlY2tlcnMgPSBbJ3B5bGludCddCmBgYAoKQ2hlY2tlcnMg
Y2FuIGJlIGNoYWluZWQgdG9nZXRoZXIgbGlrZSB0aGlzOgpgYGB2aW0KbGV0
IGc6c3ludGFzdGljX3BocF9jaGVja2VycyA9IFsncGhwJywgJ3BocGNzJywg
J3BocG1kJ10KYGBgCgpUaGlzIGlzIHRlbGxpbmcgc3ludGFzdGljIHRvIHJ1
biB0aGUgYHBocGAgY2hlY2tlciBmaXJzdCwgYW5kIGlmIG5vIGVycm9ycyBh
cmUKZm91bmQsIHJ1biBgcGhwY3NgLCBhbmQgdGhlbiBgcGhwbWRgLgoKWW91
IGNhbiBhbHNvIHJ1biBjaGVja2VycyBleHBsaWNpdGx5IGJ5IGNhbGxpbmcg
YDpTeW50YXN0aWNDaGVjayA8Y2hlY2tlcj5gLgpGb3IgZXhhbXBsZSB0byBy
dW4gYHBocGNzYCBhbmQgYHBocG1kYDoKYGBgdmltCjpTeW50YXN0aWNDaGVj
ayBwaHBjcyBwaHBtZApgYGAKClRoaXMgd29ya3MgZm9yIGFueSBjaGVja2Vy
cyBhdmFpbGFibGUgZm9yIHRoZSBjdXJyZW50IGZpbGV0eXBlLCBldmVuIGlm
IHRoZXkKYXJlbid0IGxpc3RlZCBpbiBgZzpzeW50YXN0aWNfPGZpbGV0eXBl
Pl9jaGVja2Vyc2AuCgo8YSBuYW1lPSJmYXFmb3JlaWduIj48L2E+CgpfXzQu
My4gUS4gSG93IGNhbiBJIHJ1biBjaGVja2VycyBmb3IgImZvcmVpZ24iIGZp
bGV0eXBlcyBhZ2FpbnN0IHRoZSBjdXJyZW50CmZpbGU/X18KCkEuIFlvdSBu
ZWVkIHRvIHF1YWxpZnkgdGhlIG5hbWUgb2YgdGhlICJmb3JlaWduIiBjaGVj
a2VyIHdpdGggdGhlIG5hbWUKb2YgaXRzIGZpbGV0eXBlLiBGb3IgZXhhbXBs
ZSB0byBjaGVjayBgdGV4YCBmaWxlcyB3aXRoIHRoZSBjaGVja2VyCmBsYW5n
dWFnZV9jaGVja2AgKHdoaWNoIG5vcm1hbGx5IGFjdHMgb25seSBvbiBmaWxl
cyBvZiB0eXBlIGB0ZXh0YCksIHlvdSBjYW4KYWRkIGB0ZXh0L2xhbmd1YWdl
X2NoZWNrYCB0byB0aGUgbGlzdCBmbyBjaGVja2VycyBmb3IgYHRleGA6CmBg
YHZpbQpsZXQgZzpzeW50YXN0aWNfdGV4X2NoZWNrZXJzID0gWydsYWNoZWNr
JywgJ3RleHQvbGFuZ3VhZ2VfY2hlY2snXQpgYGAKClRoaXMgYWxzbyB3b3Jr
cyB3aXRoIGA6U3ludGFzdGljQ2hlY2tgLCBlLmcuIHRoZSBmb2xsb3dpbmcg
Y29tbWFuZCBydW5zCmB0ZXh0L2xhbmd1YWdlX2NoZWNrYCBhZ2FpbnN0IHRo
ZSBjdXJyZW50IGZpbGUgcmVnYXJkbGVzcyBvZiB0aGUgY3VycmVudApmaWxl
dHlwZToKYGBgdmltCjpTeW50YXN0aWNDaGVjayB0ZXh0L2xhbmd1YWdlX2No
ZWNrCmBgYAoKT2YgY291cnNlLCB0aGUgY2hlY2tlcnMgc3BlY2lmaWVkIHRo
aXMgd2F5IG5lZWQgdG8gYmUga25vd24gdG8gc3ludGFzdGljLCBhbmQKdGhl
eSBuZWVkIHRvIGJlIHNob3duIGFzIGF2YWlsYWJsZSB3aGVuIHlvdSBydW4g
YDpTeW50YXN0aWNJbmZvYC4gWW91IGNhbid0Cmp1c3QgbWFrZSB1cCBhIGNv
bWJpbmF0aW9uIG9mIGEgZmlsZXR5cGUgYW5kIGEgcHJvZ3JhbSBuYW1lIGFu
ZCBleHBlY3QgaXQgdG8Kd29yayBhcyBhIGNoZWNrZXIuCgo8YSBuYW1lPSJm
YXFhZ2dyZWdhdGUiPjwvYT4KCl9fNC40LiBRLiBJIGhhdmUgZW5hYmxlZCBt
dWx0aXBsZSBjaGVja2VycyBmb3IgdGhlIGN1cnJlbnQgZmlsZXR5cGUuIEhv
dyBjYW4gSQpkaXNwbGF5IGFsbCBlcnJvcnMgZnJvbSBhbGwgY2hlY2tlcnMg
dG9nZXRoZXI/X18KCkEuIFNldCBgZzpzeW50YXN0aWNfYWdncmVnYXRlX2Vy
cm9yc2AgdG8gMSBpbiB5b3VyIGB2aW1yY2A6CmBgYHZpbQpsZXQgZzpzeW50
YXN0aWNfYWdncmVnYXRlX2Vycm9ycyA9IDEKYGBgCgpTZWUgYDpoZWxwIHN5
bnRhc3RpYy1hZ2dyZWdhdGluZy1lcnJvcnNgIGZvciBtb3JlIGRldGFpbHMu
Cgo8YSBuYW1lPSJmYXFhcmdzIj48L2E+CgpfXzQuNS4gUS4gSG93IGNhbiBJ
IHBhc3MgYWRkaXRpb25hbCBhcmd1bWVudHMgdG8gYSBjaGVja2VyP19fCgpB
LiBJbiBtb3N0IGNhc2VzIGEgY29tbWFuZCBsaW5lIGlzIGNvbnN0cnVjdGVk
IHVzaW5nIGFuIGludGVybmFsIGZ1bmN0aW9uCm5hbWVkIGBtYWtlcHJnQnVp
bGQoKWAsIHdoaWNoIHByb3ZpZGVzIGEgbnVtYmVyIG9mIG9wdGlvbnMgdGhh
dCBhbGxvdyB5b3UgdG8KY3VzdG9taXNlIGV2ZXJ5IHBhcnQgb2YgdGhlIGNv
bW1hbmQgdGhhdCBnZXRzIHJ1bi4gWW91IGNhbiBzZXQgdGhlc2Ugb3B0aW9u
cwp1c2luZyBnbG9iYWwgdmFyaWFibGVzLgoKVGhlIGdlbmVyYWwgZm9ybSBv
ZiB0aGUgZ2xvYmFsIGBhcmdzYCB2YXJpYWJsZSBpcwpgc3ludGFzdGljXzxm
aWxldHlwZT5fPGNoZWNrZXI+X2FyZ3NgLiBUaHVzIGlmIHlvdSB3YW50ZWQg
dG8gcGFzcwpgLS1teSAtLWFyZ3MgLS1oZXJlYCB0byB0aGUgUnVieSBgbXJp
YCBjaGVja2VyIHlvdSB3b3VsZCBhZGQgdGhpcyBsaW5lIHRvIHlvdXIKYHZp
bXJjYDoKYGBgdmltCmxldCBnOnN5bnRhc3RpY19ydWJ5X21yaV9hcmdzID0g
Ii0tbXkgLS1hcmdzIC0taGVyZSIKYGBgCgpTZWUgYDpoZWxwIHN5bnRhc3Rp
Yy1jaGVja2VyLW9wdGlvbnNgIGZvciBtb3JlIGluZm9ybWF0aW9uLgoKQSBu
dW1iZXIgb2YgY2hlY2tlcnMgZG9uJ3QgdXNlIHRoZSBgbWFrZXByZ0J1aWxk
KClgIGZ1bmN0aW9uIG1lbnRpb25lZCBhYm92ZSwKb3IgaGF2ZSBhZGRpdGlv
bmFsIG9wdGlvbnMgdGhhdCBjYW4gYmUgY29uZmlndXJlZC4gRm9yIHRoZXNl
IGNoZWNrZXJzIHRoZSBleGFjdApsaXN0IG9mIG9wdGlvbnMgc2hvdWxkIGJl
IGluY2x1ZGVkIGluIHRoZSBbbWFudWFsXVtjaGVja2Vyc10KKGA6aGVscCBz
eW50YXN0aWMtY2hlY2tlcnNgIGluIFZpbSkuCgo8YSBuYW1lPSJmYXFsb2Ns
aXN0Ij48L2E+CgpfXzQuNi4gUS4gSSBydW4gYSBjaGVja2VyIGFuZCB0aGUg
bG9jYXRpb24gbGlzdCBpcyBub3QgdXBkYXRlZC4uLl9fICAKX180LjYuIFEu
IEkgcnVuYDpsb3BlbmAgb3IgYDpsd2luZG93YCBhbmQgdGhlIGVycm9yIHdp
bmRvdyBpcyBlbXB0eS4uLl9fCgpBLiBCeSBkZWZhdWx0IHRoZSBsb2NhdGlv
biBsaXN0IGlzIGNoYW5nZWQgb25seSB3aGVuIHlvdSBydW4gdGhlIGA6RXJy
b3JzYApjb21tYW5kLCBpbiBvcmRlciB0byBtaW5pbWlzZSBjb25mbGljdHMg
d2l0aCBvdGhlciBwbHVnaW5zLiBJZiB5b3Ugd2FudCB0aGUKbG9jYXRpb24g
bGlzdCB0byBhbHdheXMgYmUgdXBkYXRlZCB3aGVuIHlvdSBydW4gdGhlIGNo
ZWNrZXJzLCBhZGQgdGhpcyBsaW5lIHRvCnlvdXIgYHZpbXJjYDoKYGBgdmlt
CmxldCBnOnN5bnRhc3RpY19hbHdheXNfcG9wdWxhdGVfbG9jX2xpc3QgPSAx
CmBgYAoKPGEgbmFtZT0iZmFxbG5leHQiPjwvYT4KCl9fNC43LiBRLiBIb3cg
Y2FuIEkganVtcCBiZXR3ZWVuIHRoZSBkaWZmZXJlbnQgZXJyb3JzIHdpdGhv
dXQgdXNpbmcgdGhlIGxvY2F0aW9uCmxpc3QgYXQgdGhlIGJvdHRvbSBvZiB0
aGUgd2luZG93P19fCgpBLiBWaW0gcHJvdmlkZXMgc2V2ZXJhbCBidWlsdC1p
biBjb21tYW5kcyBmb3IgdGhpcy4gU2VlIGA6aGVscCA6bG5leHRgIGFuZApg
OmhlbHAgOmxwcmV2aW91c2AuCgpJZiB5b3UgdXNlIHRoZXNlIGNvbW1hbmRz
IGEgbG90IHRoZW4geW91IG1heSB3YW50IHRvIGFkZCBzaG9ydGN1dCBtYXBw
aW5ncyB0bwp5b3VyIGB2aW1yY2AsIG9yIGluc3RhbGwgc29tZXRoaW5nIGxp
a2UgW3VuaW1wYWlyZWRdW3VuaW1wYWlyZWRdLCB3aGljaCBwcm92aWRlcyBz
dWNoCm1hcHBpbmdzIChhbW9uZyBvdGhlciB0aGluZ3MpLgoKPGEgbmFtZT0i
ZmFxYmRlbGV0ZSI+PC9hPgoKX180LjguIFEuIFRoZSBlcnJvciB3aW5kb3cg
aXMgY2xvc2VkIGF1dG9tYXRpY2FsbHkgd2hlbiBJIGA6cXVpdGAgdGhlIGN1
cnJlbnQgYnVmZmVyCmJ1dCBub3Qgd2hlbiBJIGA6YmRlbGV0ZWAgaXQ/X18K
CkEuIFRoZXJlIGlzIG5vIHNhZmUgd2F5IHRvIGhhbmRsZSB0aGF0IHNpdHVh
dGlvbiBhdXRvbWF0aWNhbGx5LCBidXQgeW91IGNhbgp3b3JrIGFyb3VuZCBp
dDoKYGBgdmltCm5ub3JlbWFwIDxzaWxlbnQ+IDxDLWQ+IDpsY2xvc2U8Q1I+
OmJkZWxldGU8Q1I+CmNhYmJyZXYgPHNpbGVudD4gYmQgPEMtcj49KGdldGNt
ZHR5cGUoKT09Iyc6JyAmJiBnZXRjbWRwb3MoKT09MSA/ICdsY2xvc2VcfGJk
ZWxldGUnIDogJ2JkJyk8Q1I+CmBgYAoKPGEgbmFtZT0iZmFxY29uZmlnIj48
L2E+CgpfXzQuOS4gTXkgZmF2b3VyaXRlIGNoZWNrZXIgbmVlZHMgdG8gbG9h
ZCBhIGNvbmZpZ3VyYXRpb24gZmlsZSBmcm9tIHRoZQpwcm9qZWN0J3Mgcm9v
dCByYXRoZXIgdGhhbiB0aGUgY3VycmVudCBkaXJlY3RvcnkuLi5fXwoKQS4g
WW91IGNhbiBzZXQgdXAgYW4gYGF1dG9jbWRgIHRvIHNlYXJjaCBmb3IgdGhl
IGNvbmZpZ3VyYXRpb24gZmlsZSBpbiB0aGUKY3VycmVudCBkaXJlY3Rvcnkg
YW5kIHVwd2FyZHMsIGFuZCBhZGQgaXQgdG8gdGhlIGNoZWNrZXIncyBvcHRp
b25zIHdoZW4gZm91bmQuCkZvciBleGFtcGxlIGZvciBganNjc2A6CgpgYGB2
aW0KZnVuY3Rpb24hIEZpbmRDb25maWcocHJlZml4LCB3aGF0LCB3aGVyZSkK
ICAgIGxldCBjZmcgPSBmaW5kZmlsZShhOndoYXQsIGVzY2FwZShhOndoZXJl
LCAnICcpIC4gJzsnKQogICAgcmV0dXJuIGNmZyAhPSMgJycgPyAnICcgLiBh
OnByZWZpeCAuICcgJyAuIHNoZWxsZXNjYXBlKGNmZykgOiAnJwplbmRmdW5j
dGlvbgoKYXV0b2NtZCBGaWxlVHlwZSBqYXZhc2NyaXB0IGxldCBiOnN5bnRh
c3RpY19qYXZhc2NyaXB0X2pzY3NfYXJncyA9CiAgICBcIGdldChnOiwgJ3N5
bnRhc3RpY19qYXZhc2NyaXB0X2pzY3NfYXJncycsICcnKSAuCiAgICBcIEZp
bmRDb25maWcoJy1jJywgJy5qc2NzcmMnLCBleHBhbmQoJzxhZmlsZT46cDpo
JywgMSkpCmBgYAoKPGEgbmFtZT0iZmFxc3R5bGUiPjwvYT4KCl9fNC4xMC4g
US4gV2hhdCBpcyB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHN5bnRheCBjaGVj
a2VycyBhbmQgc3R5bGUgY2hlY2tlcnM/X18KCkEuIFRoZSBlcnJvcnMgYW5k
IHdhcm5pbmdzIHRoZXkgcHJvZHVjZSBhcmUgaGlnaGxpZ2h0ZWQgZGlmZmVy
ZW50bHkgYW5kIGNhbgpiZSBmaWx0ZXJlZCBieSBkaWZmZXJlbnQgcnVsZXMs
IGJ1dCBvdGhlcndpc2UgdGhlIGRpc3RpbmN0aW9uIGlzIHByZXR0eSBtdWNo
CmFyYml0cmFyeS4gVGhlcmUgaXMgYW4gb25nb2luZyBlZmZvcnQgdG8ga2Vl
cCB0aGluZ3MgY29uc2lzdGVudCwgc28geW91IGNhbgpfZ2VuZXJhbGx5XyBl
eHBlY3QgbWVzc2FnZXMgcHJvZHVjZWQgYnkgc3ludGF4IGNoZWNrZXJzIHRv
IGJlIF9tb3N0bHlfIHJlbGF0ZWQKdG8gc3ludGF4LCBhbmQgbWVzc2FnZXMg
cHJvZHVjZWQgYnkgc3R5bGUgY2hlY2tlcnMgdG8gYmUgX21vc3RseV8gYWJv
dXQgc3R5bGUuCkJ1dCB0aGVyZSBjYW4gYmUgbm8gZm9ybWFsIGd1YXJhbnRl
ZSB0aGF0LCBzYXksIGEgc3R5bGUgY2hlY2tlciB0aGF0IHJ1bnMgaW50bwph
IHN5bnRheCBlcnJvciB3b3VsZG4ndCBkaWUgd2l0aCBhIGZhdGFsIG1lc3Nh
Z2UsIG5vciB0aGF0IGEgc3ludGF4IGNoZWNrZXIKd291bGRuJ3QgZ2l2ZSB5
b3Ugd2FybmluZ3MgYWdhaW5zdCB1c2luZyBzb21lIGNvbnN0cnVjdHMgYXMg
YmVpbmcgYmFkIHByYWN0aWNlLgpUaGVyZSBpcyBhbHNvIG5vIGd1YXJhbnRl
ZSB0aGF0IG1lc3NhZ2VzIG1hcmtlZCBhcyBgc3R5bGVgIGFyZSBsZXNzIHNl
dmVyZSB0aGFuCnRoZSBvbmVzIG1hcmtlZCBhcyBgc3ludGF4YCAod2hhdGV2
ZXIgdGhhdCBtaWdodCBtZWFuKS4gQW5kIHRoZXJlIGFyZSBldmVuIGEKZmV3
IEZyYW5rZW5zdGVpbiBjaGVja2VycyAoZm9yIGV4YW1wbGUgYGZsYWtlOGAg
YW5kIGBweWxhbWFgKSB0aGF0LCBieSB0aGVpcgpuYXR1cmUsIHByb2R1Y2Ug
Ym90aCBraW5kcyBvZiBtZXNzYWdlcy4gU3ludGFzdGljIGlzIG5vdCBzbWFy
dCBlbm91Z2ggdG8gYmUKYWJsZSB0byBzb3J0IG91dCB0aGVzZSB0aGluZ3Mg
YnkgaXRzZWxmLgoKR2VuZXJhbGx5IGl0J3MgbW9yZSB1c2VmdWwgdG8gbG9v
ayBhdCB0aGlzIGZyb20gdGhlIHBlcnNwZWN0aXZlIG9mIGZpbHRlcmluZwp1
bndhbnRlZCBtZXNzYWdlcywgcmF0aGVyIHRoYW4gYXMgYW4gaW5kaWNhdG9y
IG9mIHNldmVyaXR5IGxldmVscy4gVGhlCmRpc3RpbmN0aW9uIGJldHdlZW4g
c3ludGF4IGFuZCBzdHlsZSBpcyBvcnRob2dvbmFsIHRvIHRoZSBkaXN0aW5j
dGlvbiBiZXR3ZWVuCmVycm9ycyBhbmQgd2FybmluZ3MsIGFuZCB0aHVzIHlv
dSBjYW4gdHVybiBvZmYgbWVzc2FnZXMgYmFzZWQgb24gbGV2ZWwsIG9uCnR5
cGUsIG9yIGJvdGguCgplLmcuIFRvIGRpc2FibGUgYWxsIHN0eWxlIG1lc3Nh
Z2VzOgpgYGB2aW0KbGV0IGc6c3ludGFzdGljX3F1aWV0X21lc3NhZ2VzID0g
eyAidHlwZSI6ICJzdHlsZSIgfQpgYGAKU2VlIGA6aGVscCBzeW50YXN0aWNf
cXVpZXRfbWVzc2FnZXNgIGZvciBtb3JlIGluZm9ybWF0aW9uLgoKPGEgbmFt
ZT0iZmFxcHl0aG9uIj48L2E+CgpfXzQuMTEuIFEuIEhvdyBjYW4gSSBjaGVj
ayBzY3JpcHRzIHdyaXR0ZW4gZm9yIGRpZmZlcmVudCB2ZXJzaW9ucyBvZiBQ
eXRob24/X18KCkEuIEluc3RhbGwgYSBQeXRob24gdmVyc2lvbiBtYW5hZ2Vy
IHN1Y2ggYXMgW3ZpcnR1YWxlbnZdW3ZpcnR1YWxlbnZdCm9yIFtweWVudl1b
cHllbnZdLCBhY3RpdmF0ZSB0aGUgZW52aXJvbm1lbnQgZm9yIHRoZSByZWxl
dmFudCB2ZXJzaW9uCm9mIFB5dGhvbiwgYW5kIGluc3RhbGwgaW4gaXQgdGhl
IGNoZWNrZXJzIHlvdSB3YW50IHRvIHVzZS4gIFNldApgZzpzeW50YXN0aWNf
cHl0aG9uX2NoZWNrZXJzYCBhY2NvcmRpbmdseSBpbiB5b3VyIGB2aW1yY2As
IGFuZCBydW4gW1ZpbV1bdmltXQpmcm9tIHRoZSB2aXJ0dWFsIGVudmlyb25t
ZW50LgoKSWYgeW91J3JlIHN0YXJ0aW5nIFZpbSBmcm9tIGEgZGVza3RvcCBt
YW5hZ2VyIHJhdGhlciB0aGFuIGZyb20gYSB0ZXJtaW5hbCB5b3UKbWlnaHQg
bmVlZCB0byB3cml0ZSB3cmFwcGVyIHNjcmlwdHMgYXJvdW5kIHlvdXIgY2hl
Y2tlcnMsIHRvIGFjdGl2YXRlIHRoZQp2aXJ0dWFsIGVudmlyb25tZW50IGJl
Zm9yZSBydW5uaW5nIHRoZSBhY3R1YWwgY2hlY2tzLiAgVGhlbiB5b3UnbGwg
bmVlZCB0bwpwb2ludCB0aGUgcmVsZXZhbnQgYGc6c3ludGFzdGljX3B5dGhv
bl88Y2hlY2tlcj5fZXhlY2AgdmFyaWFibGVzIHRvIHRoZSB3cmFwcGVyCnNj
cmlwdHMuCgo8YSBuYW1lPSJmYXFydWJ5Ij48L2E+CgpfXzQuMTIuIFEuIEhv
dyBjYW4gSSBjaGVjayBzY3JpcHRzIHdyaXR0ZW4gZm9yIGRpZmZlcmVudCB2
ZXJzaW9ucyBvZiBSdWJ5P19fCgpBLiBJbnN0YWxsIGEgUnVieSB2ZXJzaW9u
IG1hbmFnZXIgc3VjaCBhcyBbcnZtXVtydm1dIG9yIFtyYmVudl1bcmJlbnZd
LAphY3RpdmF0ZSB0aGUgcmVsZXZhbnQgdmVyc2lvbiBvZiBSdWJ5LCBhbmQg
aW5zdGFsbCBpbiBpdCB0aGUgY2hlY2tlcnMgeW91IHdhbnQKdG8gdXNlLiAg
U2V0IGBnOnN5bnRhc3RpY19ydWJ5X2NoZWNrZXJzYCBhY2NvcmRpbmdseSBp
biB5b3VyIGB2aW1yY2AsIGFuZCBydW4KW1ZpbV1bdmltXSB1bmRlciB0aGUg
cmVsZXZhbnQgUnVieSB2ZXJzaW9uLgoKSWYgeW91J3JlIHN0YXJ0aW5nIFZp
bSBmcm9tIGEgZGVza3RvcCBtYW5hZ2VyIHJhdGhlciB0aGFuIGZyb20gYSB0
ZXJtaW5hbAphbmQgZGVwZW5kaW5nIG9uIHRoZSB2ZXJzaW9uIG1hbmFnZXIg
eW91IHVzZSB5b3UgbWlnaHQgbmVlZCB0byB3cml0ZSB3cmFwcGVyCnNjcmlw
dHMgYXJvdW5kIHlvdXIgY2hlY2tlcnMsIHRvIGFjdGl2YXRlIHRoZSByZWxl
dmFudCB2ZXJzaW9uIG9mIFJ1YnkKYmVmb3JlIHJ1bm5pbmcgdGhlIGFjdHVh
bCBjaGVja3MuICBUaGVuIHlvdSdsbCBuZWVkIHRvIHBvaW50IHRoZSByZWxl
dmFudApgZzpzeW50YXN0aWNfcnVieV88Y2hlY2tlcj5fZXhlY2AgdmFyaWFi
bGVzIHRvIHRoZSB3cmFwcGVyIHNjcmlwdHMuCgo8YSBuYW1lPSJmYXFwZXJs
Ij48L2E+CgpfXzQuMTMuIFEuIFRoZSBgcGVybGAgY2hlY2tlciBoYXMgc3Rv
cHBlZCB3b3JraW5nLi4uX18KCkEuIFRoZSBgcGVybGAgY2hlY2tlciBydW5z
IGBwZXJsIC1jYCBhZ2FpbnN0IHlvdXIgZmlsZSwgd2hpY2ggaW4gdHVybgpf
X2V4ZWN1dGVzX18gYW55IGBCRUdJTmAsIGBVTklUQ0hFQ0tgLCBhbmQgYENI
RUNLYCBibG9ja3MsIGFuZCBhbnkgYHVzZWAKc3RhdGVtZW50cyBpbiB5b3Vy
IGZpbGUgKGNmLiBbcGVybHJ1bl1bcGVybHJ1bl0pLiBUaGlzIGlzIHByb2Jh
Ymx5IGZpbmUgaWYgeW91Cndyb3RlIHRoZSBmaWxlIHlvdXJzZWxmLCBidXQg
aXQncyBhIHNlY3VyaXR5IHByb2JsZW0gaWYgeW91J3JlIGNoZWNraW5nCnRo
aXJkLXBhcnR5IGZpbGVzLiBTaW5jZSB0aGVyZSBpcyBjdXJyZW50bHkgbm8g
d2F5IHRvIGRpc2FibGUgdGhpcyBiZWhhdmlvdXIKd2hpbGUgc3RpbGwgcHJv
ZHVjaW5nIHVzZWZ1bCByZXN1bHRzLCB0aGUgY2hlY2tlciBpcyBub3cgZGlz
YWJsZWQgYnkgZGVmYXVsdC4KVG8gKHJlLSllbmFibGUgaXQsIG1ha2Ugc3Vy
ZSB0aGUgYGc6c3ludGFzdGljX3BlcmxfY2hlY2tlcnNgIGxpc3QgaW5jbHVk
ZXMKYHBlcmxgLCBhbmQgc2V0IGBnOnN5bnRhc3RpY19lbmFibGVfcGVybF9j
aGVja2VyYCB0byAxIGluIHlvdXIgYHZpbXJjYDoKYGBgdmltCmxldCBnOnN5
bnRhc3RpY19lbmFibGVfcGVybF9jaGVja2VyID0gMQpgYGAKCjxhIG5hbWU9
ImZhcXJ1c3QiPjwvYT4KCl9fNC4xNC4gUS4gV2hhdCBoYXBwZW5lZCB0byB0
aGUgYHJ1c3RjYCBjaGVja2VyP19fCgpBLiBJdCBpcyBub3cgcGFydCBvZiB0
aGUgW3J1c3QudmltXVtydXN0XSBwbHVnaW4uIElmIHlvdSBpbnN0YWxsIHRo
aXMgcGx1Z2luIHRoZQpjaGVja2VyIHNob3VsZCBiZSBwaWNrZWQgdXAgYXV0
b21hdGljYWxseSBieSBzeW50YXN0aWMuCgo8YSBuYW1lPSJmYXF0c2MiPjwv
YT4KCl9fNC4xNS4gUS4gV2hhdCBoYXBwZW5lZCB0byB0aGUgYHRzY2AgY2hl
Y2tlcj9fXwoKQS4gSXQgZGlkbid0IG1lZXQgcGVvcGxlJ3MgZXhwZWN0YXRp
b25zIGFuZCBpdCBoYXMgYmVlbiByZW1vdmVkLiBUaGUgcGx1Z2luClt0c3Vx
dXlvbWldW3RzdXF1eW9taV0gY29tZXMgcGFja2FnZWQgd2l0aCBhIGNoZWNr
ZXIgZm9yIFR5cGVTY3JpcHQuIElmIHlvdQppbnN0YWxsIHRoaXMgcGx1Z2lu
IHRoZSBjaGVja2VyIHNob3VsZCBiZSBwaWNrZWQgdXAgYXV0b21hdGljYWxs
eSBieSBzeW50YXN0aWMuCgo8YSBuYW1lPSJmYXF4Y3J1biI+PC9hPgoKX180
LjE2LiBRLiBXaGF0IGhhcHBlbmVkIHRvIHRoZSBgeGNydW5gIGNoZWNrZXI/
X18KCkEuIFRoZSBgeGNydW5gIGNoZWNrZXIgdXNlZCB0byBoYXZlIGEgc2Vj
dXJpdHkgcHJvYmxlbSBhbmQgaXQgaGFzIGJlZW4gcmVtb3ZlZC4KQSBiZXR0
ZXIgY2hlY2tlciBmb3IgX19Td2lmdF9fIGlzIHBhcnQgb2YgdGhlIFt2aW0t
c3dpZnRdW3N3aWZ0XSBwbHVnaW4uIElmIHlvdQppbnN0YWxsIHRoaXMgcGx1
Z2luIHRoZSBjaGVja2VyIHNob3VsZCBiZSBwaWNrZWQgdXAgYXV0b21hdGlj
YWxseSBieSBzeW50YXN0aWMuCgo8YSBuYW1lPSJvdGhlcnJlc291cmNlcyI+
PC9hPgoKIyMgNVwuIFJlc291cmNlcwoKVGhlIHByZWZlcnJlZCBwbGFjZSBm
b3IgcG9zdGluZyBzdWdnZXN0aW9ucywgcmVwb3J0aW5nIGJ1Z3MsIGFuZCBn
ZW5lcmFsCmRpc2N1c3Npb25zIHJlbGF0ZWQgdG8gc3ludGFzdGljIGlzIHRo
ZSBbaXNzdWUgdHJhY2tlciBhdCBHaXRIdWJdW2J1Z190cmFja2VyXS4KQSBn
dWlkZSBmb3Igd3JpdGluZyBzeW50YXggY2hlY2tlcnMgY2FuIGJlIGZvdW5k
IGluIHRoZSBbd2lraV1bZ3VpZGVdLgpUaGVyZSBhcmUgYWxzbyBhIGRlZGlj
YXRlZCBbZ29vZ2xlIGdyb3VwXVtnb29nbGVfZ3JvdXBdLCBhbmQgYQpbc3lu
dGFzdGljIHRhZyBhdCBTdGFja092ZXJmbG93XVtzdGFja19vdmVyZmxvd10u
CgpTeW50YXN0aWMgYWltcyB0byBwcm92aWRlIGEgY29tbW9uIGludGVyZmFj
ZSB0byBzeW50YXggY2hlY2tlcnMgZm9yIGFzIG1hbnkKbGFuZ3VhZ2VzIGFz
IHBvc3NpYmxlLiBGb3IgcGFydGljdWxhciBsYW5ndWFnZXMsIHRoZXJlIGFy
ZSwgb2YgY291cnNlLCBvdGhlcgpwbHVnaW5zIHRoYXQgcHJvdmlkZSBtb3Jl
IGZ1bmN0aW9uYWxpdHkgdGhhbiBzeW50YXN0aWMuIFlvdSBtaWdodCB3YW50
IHRvIHRha2UKYSBsb29rIGF0IFtnaGNtb2QtdmltXVtnaGNtb2RdLCBbamVk
aS12aW1dW2plZGldLCBbcHl0aG9uLW1vZGVdW3B5dGhvbl9tb2RlXSwgW3Zp
bS1nb11bdmltZ29dLCBvcgpbWW91Q29tcGxldGVNZV1beWNtXS4KCltzY3Jv
b2xvb3NlXTogICAgICAgaHR0cHM6Ly9naXRodWIuY29tL3Njcm9vbG9vc2UK
W3NjcmVlbnNob3RdOiAgICAgICBodHRwczovL2dpdGh1Yi5jb20vdmltLXN5
bnRhc3RpYy9zeW50YXN0aWMvcmF3L21hc3Rlci9fYXNzZXRzL3NjcmVlbnNo
b3RfMS5wbmcKCltidWdfdHJhY2tlcl06ICAgICAgaHR0cHM6Ly9naXRodWIu
Y29tL3ZpbS1zeW50YXN0aWMvc3ludGFzdGljL2lzc3VlcwpbY2hlY2tlcnNd
OiAgICAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS92aW0tc3ludGFzdGljL3N5
bnRhc3RpYy9ibG9iL21hc3Rlci9kb2Mvc3ludGFzdGljLWNoZWNrZXJzLnR4
dApbY3J5c3RhbF06ICAgICAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9yaHlz
ZC92aW0tY3J5c3RhbApbZWFzdHdvb2RdOiAgICAgICAgIGh0dHBzOi8vZ2l0
aHViLmNvbS92ZW5hbnRpdXMvdmltLWVhc3R3b29kCltnaGNtb2RdOiAgICAg
ICAgICAgaHR0cHM6Ly9naXRodWIuY29tL2VhZ2xldG10L2doY21vZC12aW0K
W2dvb2dsZV9ncm91cF06ICAgICBodHRwczovL2dyb3Vwcy5nb29nbGUuY29t
L2dyb3VwL3ZpbS1zeW50YXN0aWMKW2d1aWRlXTogICAgICAgICAgICBodHRw
czovL2dpdGh1Yi5jb20vdmltLXN5bnRhc3RpYy9zeW50YXN0aWMvd2lraS9T
eW50YXgtQ2hlY2tlci1HdWlkZQpbamVkaV06ICAgICAgICAgICAgIGh0dHBz
Oi8vZ2l0aHViLmNvbS9kYXZpZGhhbHRlci9qZWRpLXZpbQpbbWVybGluXTog
ICAgICAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS90aGUtbGFtYmRhLWNodXJj
aC9tZXJsaW4KW215aW50XTogICAgICAgICAgICBodHRwczovL2dpdGh1Yi5j
b20vbXlpbnQvc3ludGFzdGljLWV4dHJhcwpbbmVvYnVuZGxlXTogICAgICAg
IGh0dHBzOi8vZ2l0aHViLmNvbS9TaG91Z28vbmVvYnVuZGxlLnZpbQpbb21u
aXNoYXJwXTogICAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9PbW5pU2hhcnAv
b21uaXNoYXJwLXZpbQpbcGF0aG9nZW5dOiAgICAgICAgIGh0dHBzOi8vZ2l0
aHViLmNvbS90cG9wZS92aW0tcGF0aG9nZW4KW3BlcmxydW5dOiAgICAgICAg
ICBodHRwOi8vcGVybGRvYy5wZXJsLm9yZy9wZXJscnVuLmh0bWwjKi1jKgpb
cGx1Z106ICAgICAgICAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9qdW5lZ3Vu
bi92aW0tcGx1Zy8KW3B5ZW52XTogICAgICAgICAgICBodHRwczovL2dpdGh1
Yi5jb20veXl1dS9weWVudgpbcHl0aG9uX21vZGVdOiAgICAgIGh0dHBzOi8v
Z2l0aHViLmNvbS9rbGVuL3B5dGhvbi1tb2RlCltyYmVudl06ICAgICAgICAg
ICAgaHR0cHM6Ly9naXRodWIuY29tL3JiZW52L3JiZW52Cltyb2t0YXNdOiAg
ICAgICAgICAgaHR0cHM6Ly9naXRodWIuY29tL3Jva3Rhcy9zeW50YXN0aWMt
bW9yZQpbcnVzdF06ICAgICAgICAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9y
dXN0LWxhbmcvcnVzdC52aW0KW3J2bV06ICAgICAgICAgICAgICBodHRwczov
L3J2bS5pby8KW3N0YWNrX292ZXJmbG93XTogICBodHRwOi8vc3RhY2tvdmVy
Zmxvdy5jb20vcXVlc3Rpb25zL3RhZ2dlZC9zeW50YXN0aWMKW3N3aWZ0XTog
ICAgICAgICAgICBodHRwczovL2dpdGh1Yi5jb20va2JhbGxhcmQvdmltLXN3
aWZ0Clt0c3VxdXlvbWldOiAgICAgICAgaHR0cHM6Ly9naXRodWIuY29tL1F1
cmFteS90c3VxdXlvbWkvClt1bmltcGFpcmVkXTogICAgICAgaHR0cHM6Ly9n
aXRodWIuY29tL3Rwb3BlL3ZpbS11bmltcGFpcmVkClt2YW1dOiAgICAgICAg
ICAgICAgaHR0cHM6Ly9naXRodWIuY29tL01hcmNXZWJlci92aW0tYWRkb24t
bWFuYWdlcgpbdmltXTogICAgICAgICAgICAgIGh0dHA6Ly93d3cudmltLm9y
Zy8KW3ZpbWdvXTogICAgICAgICAgICBodHRwczovL2dpdGh1Yi5jb20vZmF0
aWgvdmltLWdvClt2aXJ0dWFsZW52XTogICAgICAgaHR0cHM6Ly92aXJ0dWFs
ZW52LnB5cGEuaW8vZW4vc3RhYmxlLwpbdnVuZGxlXTogICAgICAgICAgIGh0
dHBzOi8vZ2l0aHViLmNvbS9nbWFyaWsvVnVuZGxlLnZpbQpbeWNtXTogICAg
ICAgICAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS95Y20tY29yZS9Zb3VDb21w
bGV0ZU1lCgo8IS0tCnZpbTp0dz03OTpzdz00OgotLT4K
",,10170,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
