name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'yapi',59996401,b'YApi \xe6\x98\xaf\xe4\xb8\x80\xe4\xb8\xaa\xe5\x8f\xaf\xe6\x9c\xac\xe5\x9c\xb0\xe9\x83\xa8\xe7\xbd\xb2\xe7\x9a\x84\xe3\x80\x81\xe6\x89\x93\xe9\x80\x9a\xe5\x89\x8d\xe5\x90\x8e\xe7\xab\xaf\xe5\x8f\x8aQA\xe7\x9a\x84\xe3\x80\x81\xe5\x8f\xaf\xe8\xa7\x86\xe5\x8c\x96\xe7\x9a\x84\xe6\x8e\xa5\xe5\x8f\xa3\xe7\xae\xa1\xe7\x90\x86\xe5\xb9\xb3\xe5\x8f\xb0',b'JavaScript',680,12648,,394,False,b'https://api.github.com/repos/YMFE/yapi/forks',"IyMgWUFwaSAg5Y+v6KeG5YyW5o6l5Y+j566h55CG5bmz5Y+wCuekuuS+i+er
meeCue+8mgo8cD48YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cDovL3lh
cGkuZGVtby5xdW5hci5jb20iPnlhcGkuZGVtby5xdW5hci5jb208L2E+PC9w
PgoKCuaWh+aho++8mgo8cD48YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0
cHM6Ly9oZWxsb3NlYW4xMDI1LmdpdGh1Yi5pby95YXBpIj5oZWxsb3NlYW4x
MDI1LmdpdGh1Yi5pby95YXBpPC9hPjwvcD4KCiMjIyDlubPlj7Dku4vnu40K
IVthdmF0YXJdKHlhcGktYmFzZS1mbG93LmpwZykKCllBcGkg5pivPHN0cm9u
Zz7pq5jmlYg8L3N0cm9uZz7jgIE8c3Ryb25nPuaYk+eUqDwvc3Ryb25nPuOA
gTxzdHJvbmc+5Yqf6IO95by65aSnPC9zdHJvbmc+55qEIGFwaSDnrqHnkIbl
ubPlj7DvvIzml6jlnKjkuLrlvIDlj5HjgIHkuqflk4HjgIHmtYvor5Xkurrl
kZjmj5Dkvpvmm7TkvJjpm4XnmoTmjqXlj6PnrqHnkIbmnI3liqHjgILlj6/k
u6XluK7liqnlvIDlj5HogIXovbvmnb7liJvlu7rjgIHlj5HluIPjgIHnu7Tm
iqQgQVBJ77yMWUFwaSDov5jkuLrnlKjmiLfmj5DkvpvkuobkvJjnp4DnmoTk
uqTkupLkvZPpqozvvIzlvIDlj5HkurrlkZjlj6rpnIDliKnnlKjlubPlj7Dm
j5DkvpvnmoTmjqXlj6PmlbDmja7lhpnlhaXlt6Xlhbfku6Xlj4rnroDljZXn
moTngrnlh7vmk43kvZzlsLHlj6/ku6Xlrp7njrDmjqXlj6PnmoTnrqHnkIbj
gIIKCioqUVHkuqTmtYHnvqQqKjoKCjY0NDY0MjQ3NCAqKuS4u+e+pOWPr+iD
veW3sua7oSoqCgo5NDE4MDI0MDUgKirnvqQy5qyi6L+O5Yqg5YWlKioKCiMj
IyDnibnmgKcKKiAg5Z+65LqOIEpzb241IOWSjCBNb2NranMg5a6a5LmJ5o6l
5Y+j6L+U5Zue5pWw5o2u55qE57uT5p6E5ZKM5paH5qGj77yM5pWI546H5o+Q
5Y2H5aSa5YCNCiogIOaJgeW5s+WMluadg+mZkOiuvuiuoe+8jOWNs+S/neiv
geS6huWkp+Wei+S8geS4mue6p+mhueebrueahOeuoeeQhu+8jOWPiOS/neiv
geS6huaYk+eUqOaApwoqICDnsbvkvLwgcG9zdG1hbiDnmoTmjqXlj6PosIPo
r5UKKiAg6Ieq5Yqo5YyW5rWL6K+VLCDmlK/mjIHlr7kgUmVzcG9uc2Ug5pat
6KiACiogIE1vY2tTZXJ2ZXIg6Zmk5pSv5oyB5pmu6YCa55qE6ZqP5py6IG1v
Y2sg5aSW77yM6L+Y5aKe5Yqg5LqGIE1vY2sg5pyf5pyb5Yqf6IO977yM5qC5
5o2u6K6+572u55qE6K+35rGC6L+H5ruk6KeE5YiZ77yM6L+U5Zue5pyf5pyb
5pWw5o2uCiogIOaUr+aMgSBwb3N0bWFuLCBoYXIsIHN3YWdnZXIg5pWw5o2u
5a+85YWlCiogIOWFjei0ueW8gOa6kO+8jOWGhee9kemDqOe9su+8jOS/oeaB
r+WGjeS5n+S4jeaAleazhOmcsuS6hgoKIyMjIOWGhee9kemDqOe9sgojIyMj
IOeOr+Wig+imgeaxggoqIG5vZGVqc++8iDcuNispCiogbW9uZ29kYu+8iDIu
NivvvIkKKiBnaXQKIyMjIyDlronoo4UK5L2/55So5oiR5Lus5o+Q5L6b55qE
IHlhcGktY2xpIOW3peWFt++8jOmDqOe9siBZQXBpIOW5s+WPsOaYr+mdnuW4
uOWuueaYk+eahOOAguaJp+ihjCB5YXBpIHNlcnZlciDlkK/liqjlj6/op4bl
jJbpg6jnvbLnqIvluo/vvIzovpPlhaXnm7jlupTnmoTphY3nva7lkozngrnl
h7vlvIDlp4vpg6jnvbLvvIzlsLHog73lrozmiJDmlbTkuKrnvZHnq5nnmoTp
g6jnvbLjgILpg6jnvbLlrozmiJDkuYvlkI7vvIzlj6/mjInnhafmj5DnpLrk
v6Hmga/vvIzmiafooYwgbm9kZS97572R56uZ6Lev5b6EL3NlcnZlci9hcHAu
anN9IOWQr+WKqOacjeWKoeWZqOOAguWcqOa1j+iniOWZqOaJk+W8gOaMh+Wu
mnVybCwg54K55Ye755m75b2V6L6T5YWl5oKo5Yia5omN6K6+572u55qE566h
55CG5ZGY6YKu566x77yM6buY6K6k5a+G56CB5Li6IHltZmUub3JnIOeZu+W9
leezu+e7n++8iOm7mOiupOWvhueggeWPr+WcqOS4quS6uuS4reW/g+S/ruaU
ue+8ieOAggoKICAgIG5wbSBpbnN0YWxsIC1nIHlhcGktY2xpIC0tcmVnaXN0
cnkgaHR0cHM6Ly9yZWdpc3RyeS5ucG0udGFvYmFvLm9yZwogICAgeWFwaSBz
ZXJ2ZXIgCiAgICAKIyMjIyDmnI3liqHnrqHnkIYK5Yip55SocG0y5pa55L6/
5pyN5Yqh566h55CG57u05oqk44CCCgogICAgbnBtIGluc3RhbGwgcG0yIC1n
ICAvL+WuieijhXBtMgogICAgY2QgIHvpobnnm67nm67lvZV9CiAgICBwbTIg
c3RhcnQgInZlbmRvcnMvc2VydmVyL2FwcC5qcyIgLS1uYW1lIHlhcGkgLy9w
bTLnrqHnkIZ5YXBp5pyN5YqhCiAgICBwbTIgaW5mbyB5YXBpIC8v5p+l55yL
5pyN5Yqh5L+h5oGvCiAgICBwbTIgc3RvcCB5YXBpIC8v5YGc5q2i5pyN5Yqh
CiAgICBwbTIgcmVzdGFydCB5YXBpIC8v6YeN5ZCv5pyN5YqhCgojIyMjIOWN
h+e6pwrljYfnuqfpobnnm67niYjmnKzmmK/pnZ7luLjlrrnmmJPnmoTvvIzl
ubbkuJTkuI3kvJrlvbHlk43lt7LmnInnmoTpobnnm67mlbDmja7vvIzlj6rk
vJrlkIzmraUgdmVuZG9ycyDnm67lvZXkuIvnmoTmupDnoIHmlofku7bjgIIK
ICAgIAogICAgY2QgIHvpobnnm67nm67lvZV9CiAgICB5YXBpIGxzIC8v5p+l
55yL54mI5pys5Y+35YiX6KGoCiAgICB5YXBpIHVwZGF0ZSAvL+abtOaWsOWI
sOacgOaWsOeJiOacrAogICAgeWFwaSB1cGRhdGUgLXYge1ZlcnNpb259IC8v
5pu05paw5Yiw5oyH5a6a54mI5pysCiAgICAKIyMjIOaVmeeoiwoqIFvkvb/n
lKggWUFwaSDnrqHnkIYgQVBJIOaWh+aho++8jOa1i+ivle+8jCBtb2NrXSho
dHRwczovL2p1ZWppbi5pbS9wb3N0LzVhY2M4NzlmNmZiOWEwMjhjNDJlODgy
MikKKiBb6Ieq5Yqo5pu05pawIFN3YWdnZXIg5o6l5Y+j5pWw5o2u5YiwIFlB
cGkg5bmz5Y+wXShodHRwczovL2p1ZWppbi5pbS9wb3N0LzVhZjUwMGUyNTE4
ODI1NjcwOTYxNDBkZCkKKiBb6Ieq5Yqo5YyW5rWL6K+VXShodHRwczovL2p1
ZWppbi5pbS9wb3N0LzVhMzg4ODkyZjI2NWRhNDMwZTRmNDY4MSkKCiMjIyBZ
QXBpIOaPkuS7tgoqIFt5YXBpIHNzbyDnmbvlvZXmj5Lku7ZdKGh0dHBzOi8v
Z2l0aHViLmNvbS9ZTUZFL3lhcGktcGx1Z2luLXFzc28pCiogW3lhcGkgY2Fz
IOeZu+W9leaPkuS7tl0oaHR0cHM6Ly9naXRodWIuY29tL3dzZmUveWFwaS1w
bHVnaW4tY2FzKSBCeSB3c2ZlCiogW3lhcGkgZ2l0bGFi6ZuG5oiQ5o+S5Lu2
XShodHRwczovL2dpdGh1Yi5jb20vY3lqMDEyMi95YXBpLXBsdWdpbi1naXRs
YWIpCiogW29hdXRoMi4w55m75b2VXShodHRwczovL2dpdGh1Yi5jb20veHd4
c2VlMjAxNC95YXBpLXBsdWdpbi1vYXV0aDIpCiogW3JhcOW5s+WPsOaVsOaN
ruWvvOWFpV0oaHR0cHM6Ly9naXRodWIuY29tL3d4eGNhcmwveWFwaS1wbHVn
aW4taW1wb3J0LXJhcCkKKiBbZGluZ2RpbmddKGh0dHBzOi8vZ2l0aHViLmNv
bS96Z3MyMjUveWFwaS1wbHVnaW4tZGRpbmcpIOmSiemSieacuuWZqOS6uuaO
qOmAgeaPkuS7tgoqIFtleHBvcnQtZG9jeC1kYXRhXShodHRwczovL2dpdGh1
Yi5jb20vaW5jZXB0aW9uZ3QvWWFwaS1wbHVnaW4tZXhwb3J0LWRvY3gtZGF0
YSkg5pWw5o2u5a+85Ye6ZG9jeOaWh+ahowoqIFtpbnRlcmZhY2Utb2F1dGgt
dG9rZW5dKGh0dHBzOi8vZ2l0aHViLmNvbS9zaG91bGRub3RhcHBlYXJjYWxt
L3lhcGktcGx1Z2luLWludGVyZmFjZS1vYXV0aDItdG9rZW4pIOWumuaXtuiH
quWKqOiOt+WPlumJtOadg3Rva2Vu55qE5o+S5Lu2CiogW2ltcG9ydC1zd2Fn
Z2VyLWN1c3RvbWl6ZV0oaHR0cHM6Ly9naXRodWIuY29tL2ZvbGxvdy1teS1o
ZWFydC95YXBpLXBsdWdpbi1pbXBvcnQtc3dhZ2dlci1jdXN0b21pemUpIOWv
vOWFpeaMh+WumnN3YWdnZXLmjqXlj6MKCiMjIyDku6PnoIHnlJ/miJAKKiBb
eWFwaS10by10eXBlc2NyaXB077ya5qC55o2uIFlBcGkg55qE5o6l5Y+j5a6a
5LmJ55Sf5oiQIFR5cGVTY3JpcHQg55qE6K+35rGC5Ye95pWwXShodHRwczov
L2dpdGh1Yi5jb20vZmpjMGsveWFwaS10by10eXBlc2NyaXB0KQoqIFt5YXBp
LWdlbi1qcy1jb2RlOiDmoLnmja4gWUFwaSDnmoTmjqXlj6PlrprkuYnnlJ/m
iJAgamF2YXNjcmlwdCDnmoTor7fmsYLlh73mlbBdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9oZWxsb3NlYW4xMDI1L3lhcGktZ2VuLWpzLWNvZGUpCgojIyMgWUFw
aSBkb2NrZXLpg6jnvbLvvIjpnZ7lrpjmlrnvvIkKKiBb5L2/55SoIGFscGlu
ZSDniYggZG9ja2VyIOmVnOWDj+W/q+mAn+mDqOe9siB5YXBpXShodHRwczov
L3d3dy5qaWFuc2h1LmNvbS9wL2E5N2QyZWZiMjNjNSkKKiBbZG9ja2VyLXlh
cGldKGh0dHBzOi8vZ2l0aHViLmNvbS9SeWFuLU1pYW8vZG9ja2VyLXlhcGkp
CiogW2RvY2tlci1jb21wb3Nl5LiA6ZSu6YOo572yeWFwaV0oaHR0cHM6Ly9n
aXRodWIuY29tL2ppbmZlaWppZS95YXBpKQoqIFtkb2NrZXItWUFwaTog5pu0
5piT55So55qEIFlBcGkg6ZWc5YOPXShodHRwczovL2dpdGh1Yi5jb20vZmpj
MGsvZG9ja2VyLVlBcGkpCiogW+S9v+eUqERvY2tlckNvbXBvc2XmnoTlu7rp
g6jnvbJZYXBpXShodHRwczovL2dpdGh1Yi5jb20vTXlIZXJ1eC9kYWlseS1j
b2RlL2Jsb2IvbWFzdGVyL1Byb2dyYW0vJUU1JUI3JUE1JUU1JTg1JUI3JUU3
JUFGJTg3L1lhcGkvJUU0JUJEJUJGJUU3JTk0JUE4RG9ja2VyQ29tcG9zZSVF
NiU5RSU4NCVFNSVCQiVCQSVFOSU4MyVBOCVFNyVCRCVCMllhcGkubWQpCgoj
IyMgWUFwaSDkuIDkupvlt6XlhbcKKiBbbXlzcWzmnI3liqFodHRw5bel5YW3
LOWPr+mFjeWQiOWBmuiHquWKqOWMlua1i+ivlV0oaHR0cHM6Ly9naXRodWIu
Y29tL2hlbGxvc2VhbjEwMjUvaHR0cC1teXNxbC1zZXJ2ZXIpCiogW2lkZWEg
5LiA6ZSu5LiK5Lyg5o6l5Y+j5YiweWFwaeaPkuS7tl0oaHR0cHM6Ly9naXRo
dWIuY29tL2Rpd2FuZC9ZYXBpSWRlYVVwbG9hZFBsdWdpbikKKiBbaWRlYSDm
jqXlj6PkuIrkvKDosIPor5Xmj5Lku7YgZWFzeS15YXBpXShodHRwczovL2Vh
c3l5YXBpLmNvbS8pCgojIyMgWUFwaSDnmoTkuIDkupvlrqLmiLcKKiDljrvl
k6rlhL8KKiDmkLrnqIsKKiDoibrpvpkgCiog576O5ZuiCiog55m+5bqmCiog
6IW+6K6vCiog6Zi/6YeM5be05be0Ciog5Lqs5LicCiog5LuK5pel5aS05p2h
Ciog5ZSv5ZOB5pSv5LuYIAoqIOmTvuWutue9kQoqIOW/q+aJiwoqIOS+v+WI
qeicggoqIOS4reWVhuaDoOawkQoqIOaWsOa1qgoqIFZJUEtJRAoqIOmprOic
gueqnQoKIyMjIEF1dGhvcnMKKiBbaGVsbG9zZWFuMTAyNV0oaHR0cHM6Ly9n
aXRodWIuY29tL2hlbGxvc2VhbjEwMjUpCiogW2dhb3hpYW9tdW11XShodHRw
czovL2dpdGh1Yi5jb20vZ2FveGlhb211bXUpCiogW3p3amFtbnNzc10oaHR0
cHM6Ly9naXRodWIuY29tL2FtbnNzcykKKiBbZHdiMTk5NF0oaHR0cHM6Ly9n
aXRodWIuY29tL2R3YjE5OTQpCiogW2Z1bmdlemldKGh0dHBzOi8vZ2l0aHVi
LmNvbS9mdW5nZXppKQoKCiMjIyBMaWNlbnNlCkFwYWNoZSBMaWNlbnNlIDIu
MAoK
",,12648,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'front-end-guide',89187780,b'\xf0\x9f\x93\x9a Study guide and introduction to the modern front end stack.',b'JavaScript',4,12646,,508,False,b'https://api.github.com/repos/grab/front-end-guide/forks',"R3JhYiBGcm9udCBFbmQgR3VpZGUKPT0KClshW0Zyb250IEVuZCBEZXZlbG9w
ZXIgRGVza10oaW1hZ2VzL2Rlc2sucG5nKV0oaHR0cHM6Ly9kcmliYmJsZS5j
b20vc2hvdHMvMzU3NzYzOS1Jc29tZXRyaWMtRGV2ZWxvcGVyLURlc2spCgpf
Q3JlZGl0czogW0lsbHVzdHJhdGlvbl0oaHR0cHM6Ly9kcmliYmJsZS5jb20v
c2hvdHMvMzU3NzYzOS1Jc29tZXRyaWMtRGV2ZWxvcGVyLURlc2spIGJ5IFtA
eWFuZ2hlbmddKGh0dHBzOi8vZHJpYmJibGUuY29tL3lhbmdoZW5nKV8KCl9U
aGlzIGd1aWRlIGhhcyBiZWVuIGNyb3NzLXBvc3RlZCBvbiBbRnJlZSBDb2Rl
IENhbXBdKGh0dHBzOi8vbWVkaXVtLmZyZWVjb2RlY2FtcC5jb20vZ3JhYnMt
ZnJvbnQtZW5kLWd1aWRlLWZvci1sYXJnZS10ZWFtcy00ODRkNDAzM2NjNDEp
Ll8KCltHcmFiXShodHRwczovL3d3dy5ncmFiLmNvbSkgaXMgU291dGhlYXN0
IEFzaWEgKFNFQSkncyBsZWFkaW5nIHRyYW5zcG9ydGF0aW9uIHBsYXRmb3Jt
IGFuZCBvdXIgbWlzc2lvbiBpcyB0byBkcml2ZSBTRUEgZm9yd2FyZCwgbGV2
ZXJhZ2luZyBvbiB0aGUgbGF0ZXN0IHRlY2hub2xvZ3kgYW5kIHRoZSB0YWxl
bnRlZCBwZW9wbGUgd2UgaGF2ZSBpbiB0aGUgY29tcGFueS4gQXMgb2YgTWF5
IDIwMTcsIHdlIGhhbmRsZSBbMi4zIG1pbGxpb24gcmlkZXMgZGFpbHldKGh0
dHBzOi8vd3d3LmJsb29tYmVyZy5jb20vbmV3cy92aWRlb3MvMjAxNy0wNS0x
MS90YW5zLXNheXMtY29tcGFueS1oYXMtbW9yZS10aGFuLTg1MC0wMDAtZHJp
dmVycy12aWRlbykgYW5kIHdlIGFyZSBncm93aW5nIGFuZCBoaXJpbmcgYXQg
YSByYXBpZCBzY2FsZS4KClRvIGtlZXAgdXAgd2l0aCBHcmFiJ3MgcGhlbm9t
ZW5hbCBncm93dGgsIG91ciB3ZWIgdGVhbSBhbmQgd2ViIHBsYXRmb3JtcyBo
YXZlIHRvIGdyb3cgYXMgd2VsbC4gRm9ydHVuYXRlbHksIG9yIHVuZm9ydHVu
YXRlbHksIGF0IEdyYWIsIHRoZSB3ZWIgdGVhbSBoYXMgYmVlbiBba2VlcGlu
ZyB1cF0oaHR0cHM6Ly9ibG9nLmRhZnRjb2RlLnBsL2h5cGUtZHJpdmVuLWRl
dmVsb3BtZW50LTM0NjlmYzJlOWIyMikgd2l0aCB0aGUgbGF0ZXN0IGJlc3Qg
cHJhY3RpY2VzIGFuZCBoYXMgaW5jb3Jwb3JhdGVkIHRoZSBtb2Rlcm4gSmF2
YVNjcmlwdCBlY29zeXN0ZW0gaW4gb3VyIHdlYiBhcHBzLgoKVGhlIHJlc3Vs
dCBvZiB0aGlzIGlzIHRoYXQgb3VyIG5ldyBoaXJlcyBvciBiYWNrIGVuZCBl
bmdpbmVlcnMsIHdobyBhcmUgbm90IG5lY2Vzc2FyaWx5IHdlbGwtYWNxdWFp
bnRlZCB3aXRoIHRoZSBtb2Rlcm4gSmF2YVNjcmlwdCBlY29zeXN0ZW0sIG1h
eSBmZWVsIG92ZXJ3aGVsbWVkIGJ5IHRoZSBiYXJyYWdlIG9mIG5ldyB0aGlu
Z3MgdGhhdCB0aGV5IGhhdmUgdG8gbGVhcm4ganVzdCB0byBjb21wbGV0ZSB0
aGVpciBmZWF0dXJlIG9yIGJ1ZyBmaXggaW4gYSB3ZWIgYXBwLiBGcm9udCBl
bmQgZGV2ZWxvcG1lbnQgaGFzIG5ldmVyIGJlZW4gc28gY29tcGxleCBhbmQg
ZXhjaXRpbmcgYXMgaXQgaXMgdG9kYXkuIE5ldyB0b29scywgbGlicmFyaWVz
LCBmcmFtZXdvcmtzIGFuZCBwbHVnaW5zIGVtZXJnZSBldmVyeSBvdGhlciBk
YXkgYW5kIHRoZXJlIGlzIHNvIG11Y2ggdG8gbGVhcm4uIEl0IGlzIGltcGVy
YXRpdmUgdGhhdCBuZXdjb21lcnMgdG8gdGhlIHdlYiB0ZWFtIGFyZSBndWlk
ZWQgdG8gZW1icmFjZSB0aGlzIGV2b2x1dGlvbiBvZiB0aGUgZnJvbnQgZW5k
LCBsZWFybiB0byBuYXZpZ2F0ZSB0aGUgZWNvc3lzdGVtIHdpdGggZWFzZSwg
YW5kIGdldCBwcm9kdWN0aXZlIGluIHNoaXBwaW5nIGNvZGUgdG8gb3VyIHVz
ZXJzIGFzIGZhc3QgYXMgcG9zc2libGUuIFdlIGhhdmUgY29tZSB1cCB3aXRo
IGEgc3R1ZHkgZ3VpZGUgdG8gaW50cm9kdWNlIHdoeSB3ZSBkbyB3aGF0IHdl
IGRvLCBhbmQgaG93IHdlIGhhbmRsZSBmcm9udCBlbmQgYXQgc2NhbGUuCgpU
aGlzIHN0dWR5IGd1aWRlIGlzIGluc3BpcmVkIGJ5IFsiQSBTdHVkeSBQbGFu
IHRvIEN1cmUgSmF2YVNjcmlwdCBGYXRpZ3VlIl0oaHR0cHM6Ly9tZWRpdW0u
ZnJlZWNvZGVjYW1wLmNvbS9hLXN0dWR5LXBsYW4tdG8tY3VyZS1qYXZhc2Ny
aXB0LWZhdGlndWUtOGFkM2E1NGYyZWIxIy5nOWVnYWFwcHMpIGFuZCBpcyBt
aWxkbHkgb3BpbmlvbmF0ZWQgaW4gdGhlIHNlbnNlIHRoYXQgd2UgcmVjb21t
ZW5kIGNlcnRhaW4gbGlicmFyaWVzL2ZyYW1ld29ya3MgdG8gbGVhcm4gZm9y
IGVhY2ggYXNwZWN0IG9mIGZyb250IGVuZCBkZXZlbG9wbWVudCwgYmFzZWQg
b24gd2hhdCBpcyBjdXJyZW50bHkgZGVlbWVkIG1vc3Qgc3VpdGFibGUgYXQg
R3JhYi4gV2UgZXhwbGFpbiB3aHkgYSBjZXJ0YWluIGxpYnJhcnkvZnJhbWV3
b3JrL3Rvb2wgaXMgY2hvc2VuIGFuZCBwcm92aWRlIGxpbmtzIHRvIGxlYXJu
aW5nIHJlc291cmNlcyB0byBlbmFibGUgdGhlIHJlYWRlciB0byBwaWNrIGl0
IHVwIG9uIHRoZWlyIG93bi4gQWx0ZXJuYXRpdmUgY2hvaWNlcyB0aGF0IG1h
eSBiZSBiZXR0ZXIgZm9yIG90aGVyIHVzZSBjYXNlcyBhcmUgcHJvdmlkZWQg
YXMgd2VsbCBmb3IgcmVmZXJlbmNlIGFuZCBmdXJ0aGVyIHNlbGYtZXhwbG9y
YXRpb24uCgpJZiB5b3UgYXJlIGZhbWlsaWFyIHdpdGggZnJvbnQgZW5kIGRl
dmVsb3BtZW50IGFuZCBoYXZlIGJlZW4gY29uc2lzdGVudGx5IGtlZXBpbmcg
dXAgd2l0aCB0aGUgbGF0ZXN0IGRldmVsb3BtZW50cywgdGhpcyBndWlkZSB3
aWxsIHByb2JhYmx5IG5vdCBiZSB0aGF0IHVzZWZ1bCB0byB5b3UuIEl0IGlz
IHRhcmdldGVkIGF0IG5ld2NvbWVycyB0byBmcm9udCBlbmQuCgpJZiB5b3Vy
IGNvbXBhbnkgaXMgZXhwbG9yaW5nIGEgbW9kZXJuIEphdmFTY3JpcHQgc3Rh
Y2sgYXMgd2VsbCwgeW91IG1heSBmaW5kIHRoaXMgc3R1ZHkgcGxhbiB1c2Vm
dWwgdG8geW91ciBjb21wYW55IHRvbyEgRmVlbCBmcmVlIHRvIGFkYXB0IGl0
IHRvIHlvdXIgbmVlZHMuIFdlIHdpbGwgdXBkYXRlIHRoaXMgc3R1ZHkgcGxh
biBwZXJpb2RpY2FsbHksIGFjY29yZGluZyB0byBvdXIgbGF0ZXN0IHdvcmsg
YW5kIGNob2ljZXMuCgoqLSBHcmFiIFdlYiBUZWFtKgoKKipQcmUtcmVxdWlz
aXRlcyoqCgotIEdvb2QgdW5kZXJzdGFuZGluZyBvZiBjb3JlIHByb2dyYW1t
aW5nIGNvbmNlcHRzLgotIENvbWZvcnRhYmxlIHdpdGggYmFzaWMgY29tbWFu
ZCBsaW5lIGFjdGlvbnMgYW5kIGZhbWlsaWFyaXR5IHdpdGggc291cmNlIGNv
ZGUgdmVyc2lvbiBjb250cm9sIHN5c3RlbXMgc3VjaCBhcyBHaXQuCi0gRXhw
ZXJpZW5jZSBpbiB3ZWIgZGV2ZWxvcG1lbnQuIEhhdmUgYnVpbHQgc2VydmVy
LXNpZGUgcmVuZGVyZWQgd2ViIGFwcHMgdXNpbmcgZnJhbWV3b3JrcyBsaWtl
IFJ1Ynkgb24gUmFpbHMsIERqYW5nbywgRXhwcmVzcywgZXRjLgotIFVuZGVy
c3RhbmRpbmcgb2YgaG93IHRoZSB3ZWIgd29ya3MuIEZhbWlsaWFyaXR5IHdp
dGggd2ViIHByb3RvY29scyBhbmQgY29udmVudGlvbnMgbGlrZSBIVFRQIGFu
ZCBSRVNUZnVsIEFQSXMuCgojIyMgVGFibGUgb2YgQ29udGVudHMKCi0gW1Np
bmdsZS1wYWdlIEFwcHMgKFNQQXMpXSgjc2luZ2xlLXBhZ2UtYXBwcy1zcGFz
KQotIFtOZXctYWdlIEphdmFTY3JpcHRdKCNuZXctYWdlLWphdmFzY3JpcHQp
Ci0gW1VzZXIgSW50ZXJmYWNlXSgjdXNlci1pbnRlcmZhY2UtLS1yZWFjdCkK
LSBbU3RhdGUgTWFuYWdlbWVudF0oI3N0YXRlLW1hbmFnZW1lbnQtLS1mbHV4
cmVkdXgpCi0gW0NvZGluZyB3aXRoIFN0eWxlXSgjY29kaW5nLXdpdGgtc3R5
bGUtLS1jc3MtbW9kdWxlcykKLSBbTWFpbnRhaW5hYmlsaXR5XSgjbWFpbnRh
aW5hYmlsaXR5KQogIC0gW1Rlc3RpbmddKCN0ZXN0aW5nLS0tamVzdC0tZW56
eW1lKQogIC0gW0xpbnRpbmcgSmF2YVNjcmlwdF0oI2xpbnRpbmctamF2YXNj
cmlwdC0tLWVzbGludCkKICAtIFtMaW50aW5nIENTU10oI2xpbnRpbmctY3Nz
LS0tc3R5bGVsaW50KQogIC0gW0Zvcm1hdHRpbmcgQ29kZV0oI2Zvcm1hdHRp
bmctY29kZS0tLXByZXR0aWVyKQogIC0gW1R5cGVzXSgjdHlwZXMtLS1mbG93
KQotIFtCdWlsZCBTeXN0ZW1dKCNidWlsZC1zeXN0ZW0tLS13ZWJwYWNrKQot
IFtQYWNrYWdlIE1hbmFnZW1lbnRdKCNwYWNrYWdlLW1hbmFnZW1lbnQtLS15
YXJuKQotIFtDb250aW51b3VzIEludGVncmF0aW9uXSgjY29udGludW91cy1p
bnRlZ3JhdGlvbikKLSBbSG9zdGluZyBhbmQgQ0ROXSgjaG9zdGluZy1hbmQt
Y2RuKQotIFtEZXBsb3ltZW50XSgjZGVwbG95bWVudCkKLSBbTW9uaXRvcmlu
Z10oI21vbml0b3JpbmcpCgpDZXJ0YWluIHRvcGljcyBjYW4gYmUgc2tpcHBl
ZCBpZiB5b3UgaGF2ZSBwcmlvciBleHBlcmllbmNlIGluIHRoZW0uCgojIyBT
aW5nbGUtcGFnZSBBcHBzIChTUEFzKQoKV2ViIGRldmVsb3BlcnMgdGhlc2Ug
ZGF5cyByZWZlciB0byB0aGUgcHJvZHVjdHMgdGhleSBidWlsZCBhcyB3ZWIg
YXBwcywgcmF0aGVyIHRoYW4gd2Vic2l0ZXMuIFdoaWxlIHRoZXJlIGlzIG5v
IHN0cmljdCBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIHR3byB0ZXJtcywgd2Vi
IGFwcHMgdGVuZCB0byBiZSBoaWdobHkgaW50ZXJhY3RpdmUgYW5kIGR5bmFt
aWMsIGFsbG93aW5nIHRoZSB1c2VyIHRvIHBlcmZvcm0gYWN0aW9ucyBhbmQg
cmVjZWl2ZSBhIHJlc3BvbnNlIGZvciB0aGVpciBhY3Rpb24uIFRyYWRpdGlv
bmFsbHksIHRoZSBicm93c2VyIHJlY2VpdmVzIEhUTUwgZnJvbSB0aGUgc2Vy
dmVyIGFuZCByZW5kZXJzIGl0LiBXaGVuIHRoZSB1c2VyIG5hdmlnYXRlcyB0
byBhbm90aGVyIFVSTCwgYSBmdWxsLXBhZ2UgcmVmcmVzaCBpcyByZXF1aXJl
ZCBhbmQgdGhlIHNlcnZlciBzZW5kcyBmcmVzaCBuZXcgSFRNTCBmb3IgdGhl
IG5ldyBwYWdlLiBUaGlzIGlzIGNhbGxlZCBzZXJ2ZXItc2lkZSByZW5kZXJp
bmcuCgpIb3dldmVyIGluIG1vZGVybiBTUEFzLCBjbGllbnQtc2lkZSByZW5k
ZXJpbmcgaXMgdXNlZCBpbnN0ZWFkLiBUaGUgYnJvd3NlciBsb2FkcyB0aGUg
aW5pdGlhbCBwYWdlIGZyb20gdGhlIHNlcnZlciwgYWxvbmcgd2l0aCB0aGUg
c2NyaXB0cyAoZnJhbWV3b3JrcywgbGlicmFyaWVzLCBhcHAgY29kZSkgYW5k
IHN0eWxlc2hlZXRzIHJlcXVpcmVkIGZvciB0aGUgd2hvbGUgYXBwLiBXaGVu
IHRoZSB1c2VyIG5hdmlnYXRlcyB0byBvdGhlciBwYWdlcywgYSBwYWdlIHJl
ZnJlc2ggaXMgbm90IHRyaWdnZXJlZC4gVGhlIFVSTCBvZiB0aGUgcGFnZSBp
cyB1cGRhdGVkIHZpYSB0aGUgW0hUTUw1IEhpc3RvcnkgQVBJXShodHRwczov
L2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvSGlz
dG9yeV9BUEkpLiBOZXcgZGF0YSByZXF1aXJlZCBmb3IgdGhlIG5ldyBwYWdl
LCB1c3VhbGx5IGluIEpTT04gZm9ybWF0LCBpcyByZXRyaWV2ZWQgYnkgdGhl
IGJyb3dzZXIgdmlhIFtBSkFYXShodHRwczovL2RldmVsb3Blci5tb3ppbGxh
Lm9yZy9lbi1VUy9kb2NzL0FKQVgvR2V0dGluZ19TdGFydGVkKSByZXF1ZXN0
cyB0byB0aGUgc2VydmVyLiBUaGUgU1BBIHRoZW4gZHluYW1pY2FsbHkgdXBk
YXRlcyB0aGUgcGFnZSB3aXRoIHRoZSBkYXRhIHZpYSBKYXZhU2NyaXB0LCB3
aGljaCBpdCBoYXMgYWxyZWFkeSBkb3dubG9hZGVkIGluIHRoZSBpbml0aWFs
IHBhZ2UgbG9hZC4gVGhpcyBtb2RlbCBpcyBzaW1pbGFyIHRvIGhvdyBuYXRp
dmUgbW9iaWxlIGFwcHMgd29yay4KClRoZSBiZW5lZml0czoKCi0gVGhlIGFw
cCBmZWVscyBtb3JlIHJlc3BvbnNpdmUgYW5kIHVzZXJzIGRvIG5vdCBzZWUg
dGhlIGZsYXNoIGJldHdlZW4gcGFnZSBuYXZpZ2F0aW9ucyBkdWUgdG8gZnVs
bC1wYWdlIHJlZnJlc2hlcy4KLSBGZXdlciBIVFRQIHJlcXVlc3RzIGFyZSBt
YWRlIHRvIHRoZSBzZXJ2ZXIsIGFzIHRoZSBzYW1lIGFzc2V0cyBkbyBub3Qg
aGF2ZSB0byBiZSBkb3dubG9hZGVkIGFnYWluIGZvciBlYWNoIHBhZ2UgbG9h
ZC4KLSBDbGVhciBzZXBhcmF0aW9uIG9mIHRoZSBjb25jZXJucyBiZXR3ZWVu
IHRoZSBjbGllbnQgYW5kIHRoZSBzZXJ2ZXI7IHlvdSBjYW4gZWFzaWx5IGJ1
aWxkIG5ldyBjbGllbnRzIGZvciBkaWZmZXJlbnQgcGxhdGZvcm1zIChlLmcu
IG1vYmlsZSwgY2hhdGJvdHMsIHNtYXJ0IHdhdGNoZXMpIHdpdGhvdXQgaGF2
aW5nIHRvIG1vZGlmeSB0aGUgc2VydmVyIGNvZGUuIFlvdSBjYW4gYWxzbyBt
b2RpZnkgdGhlIHRlY2hub2xvZ3kgc3RhY2sgb24gdGhlIGNsaWVudCBhbmQg
c2VydmVyIGluZGVwZW5kZW50bHksIGFzIGxvbmcgYXMgdGhlIEFQSSBjb250
cmFjdCBpcyBub3QgYnJva2VuLgoKVGhlIGRvd25zaWRlczoKCi0gSGVhdmll
ciBpbml0aWFsIHBhZ2UgbG9hZCBkdWUgdG8gbG9hZGluZyBvZiBmcmFtZXdv
cmssIGFwcCBjb2RlLCBhbmQgYXNzZXRzIHJlcXVpcmVkIGZvciBtdWx0aXBs
ZSBwYWdlcy48c3VwPjxhIGhyZWY9IiNmbjEiIGlkPSJyZWYxIj4xPC9hPjwv
c3VwPgotIFRoZXJlJ3MgYW4gYWRkaXRpb25hbCBzdGVwIHRvIGJlIGRvbmUg
b24geW91ciBzZXJ2ZXIgd2hpY2ggaXMgdG8gY29uZmlndXJlIGl0IHRvIHJv
dXRlIGFsbCByZXF1ZXN0cyB0byBhIHNpbmdsZSBlbnRyeSBwb2ludCBhbmQg
YWxsb3cgY2xpZW50LXNpZGUgcm91dGluZyB0byB0YWtlIG92ZXIgZnJvbSB0
aGVyZS4KLSBTUEFzIGFyZSByZWxpYW50IG9uIEphdmFTY3JpcHQgdG8gcmVu
ZGVyIGNvbnRlbnQsIGJ1dCBub3QgYWxsIHNlYXJjaCBlbmdpbmVzIGV4ZWN1
dGUgSmF2YVNjcmlwdCBkdXJpbmcgY3Jhd2xpbmcsIGFuZCB0aGV5IG1heSBz
ZWUgZW1wdHkgY29udGVudCBvbiB5b3VyIHBhZ2UuIFRoaXMgaW5hZHZlcnRl
bnRseSBodXJ0cyB0aGUgU2VhcmNoIEVuZ2luZSBPcHRpbWl6YXRpb24gKFNF
Tykgb2YgeW91ciBhcHAuIDxzdXA+PGEgaHJlZj0iI2ZuMiIgaWQ9InJlZjIi
PjI8L2E+PC9zdXA+LiBIb3dldmVyLCBtb3N0IG9mIHRoZSB0aW1lLCB3aGVu
IHlvdSBhcmUgYnVpbGRpbmcgYXBwcywgU0VPIGlzIG5vdCB0aGUgbW9zdCBp
bXBvcnRhbnQgZmFjdG9yLCBhcyBub3QgYWxsIHRoZSBjb250ZW50IG5lZWRz
IHRvIGJlIGluZGV4YWJsZSBieSBzZWFyY2ggZW5naW5lcy4gVG8gb3ZlcmNv
bWUgdGhpcywgeW91IGNhbiBlaXRoZXIgc2VydmVyLXNpZGUgcmVuZGVyIHlv
dXIgYXBwIG9yIHVzZSBzZXJ2aWNlcyBzdWNoIGFzIFtQcmVyZW5kZXJdKGh0
dHBzOi8vcHJlcmVuZGVyLmlvLykgdG8gInJlbmRlciB5b3VyIGphdmFzY3Jp
cHQgaW4gYSBicm93c2VyLCBzYXZlIHRoZSBzdGF0aWMgSFRNTCwgYW5kIHJl
dHVybiB0aGF0IHRvIHRoZSBjcmF3bGVycyIuCgpXaGlsZSB0cmFkaXRpb25h
bCBzZXJ2ZXItc2lkZSByZW5kZXJlZCBhcHBzIGFyZSBzdGlsbCBhIHZpYWJs
ZSBvcHRpb24sIGEgY2xlYXIgY2xpZW50LXNlcnZlciBzZXBhcmF0aW9uIHNj
YWxlcyBiZXR0ZXIgZm9yIGxhcmdlciBlbmdpbmVlcmluZyB0ZWFtcywgYXMg
dGhlIGNsaWVudCBhbmQgc2VydmVyIGNvZGUgY2FuIGJlIGRldmVsb3BlZCBh
bmQgcmVsZWFzZWQgaW5kZXBlbmRlbnRseS4gVGhpcyBpcyBlc3BlY2lhbGx5
IHNvIGF0IEdyYWIgd2hlbiB3ZSBoYXZlIG11bHRpcGxlIGNsaWVudCBhcHBz
IGhpdHRpbmcgdGhlIHNhbWUgQVBJIHNlcnZlci4KCkFzIHdlYiBkZXZlbG9w
ZXJzIGFyZSBub3cgYnVpbGRpbmcgYXBwcyByYXRoZXIgdGhhbiBwYWdlcywg
b3JnYW5pemF0aW9uIG9mIGNsaWVudC1zaWRlIEphdmFTY3JpcHQgaGFzIGJl
Y29tZSBpbmNyZWFzaW5nbHkgaW1wb3J0YW50LiBJbiBzZXJ2ZXItc2lkZSBy
ZW5kZXJlZCBwYWdlcywgaXQgaXMgY29tbW9uIHRvIHVzZSBzbmlwcGV0cyBv
ZiBqUXVlcnkgdG8gYWRkIHVzZXIgaW50ZXJhY3Rpdml0eSB0byBlYWNoIHBh
Z2UuIEhvd2V2ZXIsIHdoZW4gYnVpbGRpbmcgbGFyZ2UgYXBwcywganVzdCBq
UXVlcnkgaXMgaW5zdWZmaWNpZW50LiBBZnRlciBhbGwsIGpRdWVyeSBpcyBw
cmltYXJpbHkgYSBsaWJyYXJ5IGZvciBET00gbWFuaXB1bGF0aW9uIGFuZCBp
dCdzIG5vdCBhIGZyYW1ld29yazsgaXQgZG9lcyBub3QgZGVmaW5lIGEgY2xl
YXIgc3RydWN0dXJlIGFuZCBvcmdhbml6YXRpb24gZm9yIHlvdXIgYXBwLgoK
SmF2YVNjcmlwdCBmcmFtZXdvcmtzIGhhdmUgYmVlbiBjcmVhdGVkIHRvIHBy
b3ZpZGUgaGlnaGVyLWxldmVsIGFic3RyYWN0aW9ucyBvdmVyIHRoZSBET00s
IGFsbG93aW5nIHlvdSB0byBrZWVwIHN0YXRlIGluIG1lbW9yeSwgb3V0IG9m
IHRoZSBET00uIFVzaW5nIGZyYW1ld29ya3MgYWxzbyBicmluZ3MgdGhlIGJl
bmVmaXRzIG9mIHJldXNpbmcgcmVjb21tZW5kZWQgY29uY2VwdHMgYW5kIGJl
c3QgcHJhY3RpY2VzIGZvciBidWlsZGluZyBhcHBzLiBBIG5ldyBlbmdpbmVl
ciBvbiB0aGUgdGVhbSB3aG8gaXMgdW5mYW1pbGlhciB3aXRoIHRoZSBjb2Rl
IGJhc2UsIGJ1dCBoYXMgZXhwZXJpZW5jZSB3aXRoIGEgZnJhbWV3b3JrLCB3
aWxsIGZpbmQgaXQgZWFzaWVyIHRvIHVuZGVyc3RhbmQgdGhlIGNvZGUgYmVj
YXVzZSBpdCBpcyBvcmdhbml6ZWQgaW4gYSBzdHJ1Y3R1cmUgdGhhdCB0aGV5
IGFyZSBmYW1pbGlhciB3aXRoLiBQb3B1bGFyIGZyYW1ld29ya3MgaGF2ZSBh
IGxvdCBvZiB0dXRvcmlhbHMgYW5kIGd1aWRlcywgYW5kIHRhcHBpbmcgb24g
dGhlIGtub3dsZWRnZSBhbmQgZXhwZXJpZW5jZSBmcm9tIGNvbGxlYWd1ZXMg
YW5kIHRoZSBjb21tdW5pdHkgd2lsbCBoZWxwIG5ldyBlbmdpbmVlcnMgZ2V0
IHVwIHRvIHNwZWVkLgoKIyMjIyBTdHVkeSBMaW5rcwoKLSBbU2luZ2xlIFBh
Z2UgQXBwOiBhZHZhbnRhZ2VzIGFuZCBkaXNhZHZhbnRhZ2VzXShodHRwOi8v
c3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzIxODYyMDU0L3NpbmdsZS1w
YWdlLWFwcC1hZHZhbnRhZ2VzLWFuZC1kaXNhZHZhbnRhZ2VzKQotIFtUaGUg
KFIpRXZvbHV0aW9uIG9mIFdlYiBEZXZlbG9wbWVudF0oaHR0cDovL2Jsb2cu
aXNxdWFyZWRzb2Z0d2FyZS5jb20vcHJlc2VudGF0aW9ucy8yMDE2LTEwLXJl
dm9sdXRpb24tb2Ytd2ViLWRldi8pCi0gW0hlcmUncyBXaHkgQ2xpZW50IFNp
ZGUgUmVuZGVyaW5nIFdvbl0oaHR0cHM6Ly9tZWRpdW0uZnJlZWNvZGVjYW1w
LmNvbS9oZXJlcy13aHktY2xpZW50LXNpZGUtcmVuZGVyaW5nLXdvbi00NmEz
NDlmYWRiNTIpCgojIyBOZXctYWdlIEphdmFTY3JpcHQKCkJlZm9yZSB5b3Ug
ZGl2ZSBpbnRvIHRoZSB2YXJpb3VzIGFzcGVjdHMgb2YgYnVpbGRpbmcgYSBK
YXZhU2NyaXB0IHdlYiBhcHAsIGl0IGlzIGltcG9ydGFudCB0byBnZXQgZmFt
aWxpYXIgd2l0aCB0aGUgbGFuZ3VhZ2Ugb2YgdGhlIHdlYiAtIEphdmFTY3Jp
cHQsIG9yIEVDTUFTY3JpcHQuIEphdmFTY3JpcHQgaXMgYW4gaW5jcmVkaWJs
eSB2ZXJzYXRpbGUgbGFuZ3VhZ2Ugd2hpY2ggeW91IGNhbiBhbHNvIHVzZSB0
byBidWlsZCBbd2ViIHNlcnZlcnNdKGh0dHBzOi8vbm9kZWpzLm9yZy9lbi8p
LCBbbmF0aXZlIG1vYmlsZSBhcHBzXShodHRwczovL2ZhY2Vib29rLmdpdGh1
Yi5pby9yZWFjdC1uYXRpdmUvKSBhbmQgW2Rlc2t0b3AgYXBwc10oaHR0cHM6
Ly9lbGVjdHJvbi5hdG9tLmlvLykuCgpQcmlvciB0byAyMDE1LCB0aGUgbGFz
dCBtYWpvciB1cGRhdGUgd2FzIEVDTUFTY3JpcHQgNS4xLCBpbiAyMDExLiBI
b3dldmVyLCBpbiB0aGUgcmVjZW50IHllYXJzLCBKYXZhU2NyaXB0IGhhcyBz
dWRkZW5seSBzZWVuIGEgaHVnZSBidXJzdCBvZiBpbXByb3ZlbWVudHMgd2l0
aGluIGEgc2hvcnQgc3BhbiBvZiB0aW1lLiBJbiAyMDE1LCBFQ01BU2NyaXB0
IDIwMTUgKHByZXZpb3VzbHkgY2FsbGVkIEVDTUFTY3JpcHQgNikgd2FzIHJl
bGVhc2VkIGFuZCBhIHRvbiBvZiBzeW50YWN0aWMgY29uc3RydWN0cyB3ZXJl
IGludHJvZHVjZWQgdG8gbWFrZSB3cml0aW5nIGNvZGUgbGVzcyB1bndpZWxk
eS4gSWYgeW91IGFyZSBjdXJpb3VzIGFib3V0IGl0LCBBdXRoMCBoYXMgd3Jp
dHRlbiBhIG5pY2UgYXJ0aWNsZSBvbiB0aGUgW2hpc3Rvcnkgb2YgSmF2YVNj
cmlwdF0oaHR0cHM6Ly9hdXRoMC5jb20vYmxvZy9hLWJyaWVmLWhpc3Rvcnkt
b2YtamF2YXNjcmlwdC8pLiBUaWxsIHRoaXMgZGF5LCBub3QgYWxsIGJyb3dz
ZXJzIGhhdmUgZnVsbHkgaW1wbGVtZW50ZWQgdGhlIEVTMjAxNSBzcGVjaWZp
Y2F0aW9uLiBUb29scyBzdWNoIGFzIFtCYWJlbF0oaHR0cHM6Ly9iYWJlbGpz
LmlvLykgZW5hYmxlIGRldmVsb3BlcnMgdG8gd3JpdGUgRVMyMDE1IGluIHRo
ZWlyIGFwcHMgYW5kIEJhYmVsIHRyYW5zcGlsZXMgdGhlbSBkb3duIHRvIEVT
NSB0byBiZSBjb21wYXRpYmxlIGZvciBicm93c2Vycy4KCkJlaW5nIGZhbWls
aWFyIHdpdGggYm90aCBFUzUgYW5kIEVTMjAxNSBpcyBjcnVjaWFsLiBFUzIw
MTUgaXMgc3RpbGwgcmVsYXRpdmVseSBuZXcgYW5kIGEgbG90IG9mIG9wZW4g
c291cmNlIGNvZGUgYW5kIE5vZGUuanMgYXBwcyBhcmUgc3RpbGwgd3JpdHRl
biBpbiBFUzUuIElmIHlvdSBhcmUgZG9pbmcgZGVidWdnaW5nIGluIHlvdXIg
YnJvd3NlciBjb25zb2xlLCB5b3UgbWlnaHQgbm90IGJlIGFibGUgdG8gdXNl
IEVTMjAxNSBzeW50YXguIE9uIHRoZSBvdGhlciBoYW5kLCBkb2N1bWVudGF0
aW9uIGFuZCBleGFtcGxlIGNvZGUgZm9yIG1hbnkgbW9kZXJuIGxpYnJhcmll
cyB0aGF0IHdlIHdpbGwgaW50cm9kdWNlIGxhdGVyIGJlbG93IGFyZSBzdGls
bCB3cml0dGVuIGluIEVTMjAxNS4gQXQgR3JhYiwgd2UgdXNlIFtiYWJlbC1w
cmVzZXQtZW52XShodHRwczovL2dpdGh1Yi5jb20vYmFiZWwvYmFiZWwtcHJl
c2V0LWVudikgdG8gZW5qb3kgdGhlIHByb2R1Y3Rpdml0eSBib29zdCBmcm9t
IHRoZSBzeW50YWN0aWMgaW1wcm92ZW1lbnRzIHRoZSBmdXR1cmUgb2YgSmF2
YVNjcmlwdCBwcm92aWRlcyBhbmQgd2UgaGF2ZSBiZWVuIGxvdmluZyBpdCBz
byBmYXIuIGBiYWJlbC1wcmVzZXQtZW52YCBpbnRlbGxpZ2VudGx5IGRldGVy
bWluZXMgd2hpY2ggQmFiZWwgcGx1Z2lucyBhcmUgbmVjZXNzYXJ5ICh3aGlj
aCBuZXcgbGFuZ3VhZ2UgZmVhdHVyZXMgYXJlIG5vdCBzdXBwb3J0ZWQgYW5k
IGhhdmUgdG8gYmUgdHJhbnNwaWxlZCkgYXMgYnJvd3NlcnMgaW5jcmVhc2Ug
bmF0aXZlIHN1cHBvcnQgZm9yIG1vcmUgRVMgbGFuZ3VhZ2UgZmVhdHVyZXMu
IElmIHlvdSBwcmVmZXIgdXNpbmcgbGFuZ3VhZ2UgZmVhdHVyZXMgdGhhdCBh
cmUgYWxyZWFkeSBzdGFibGUsIHlvdSBtYXkgZmluZCB0aGF0IFtiYWJlbC1w
cmVzZXQtc3RhZ2UtM10oaHR0cHM6Ly9iYWJlbGpzLmlvL2RvY3MvcGx1Z2lu
cy9wcmVzZXQtc3RhZ2UtMy8pLCB3aGljaCBpcyBhIGNvbXBsZXRlIHNwZWNp
ZmljYXRpb24gdGhhdCB3aWxsIG1vc3QgbGlrZWx5IGJlIGltcGxlbWVudGVk
IGluIGJyb3dzZXJzLCB3aWxsIGJlIG1vcmUgc3VpdGFibGUuCgpTcGVuZCBh
IGRheSBvciB0d28gcmV2aXNpbmcgRVM1IGFuZCBleHBsb3JpbmcgRVMyMDE1
LiBUaGUgbW9yZSBoZWF2aWx5IHVzZWQgZmVhdHVyZXMgaW4gRVMyMDE1IGlu
Y2x1ZGUgIkFycm93cyBhbmQgTGV4aWNhbCBUaGlzIiwgIkNsYXNzZXMiLCAi
VGVtcGxhdGUgU3RyaW5ncyIsICJEZXN0cnVjdHVyaW5nIiwgIkRlZmF1bHQv
UmVzdC9TcHJlYWQgb3BlcmF0b3JzIiwgYW5kICJJbXBvcnRpbmcgYW5kIEV4
cG9ydGluZyBtb2R1bGVzIi4KCioqRXN0aW1hdGVkIER1cmF0aW9uOiAzLTQg
ZGF5cy4qKiBZb3UgY2FuIGxlYXJuL2xvb2t1cCB0aGUgc3ludGF4IGFzIHlv
dSBsZWFybiB0aGUgb3RoZXIgbGlicmFyaWVzIGFuZCB0cnkgYnVpbGRpbmcg
eW91ciBvd24gYXBwLgoKIyMjIyBTdHVkeSBMaW5rcwoKLSBbTGVhcm4gRVM1
IG9uIENvZGVjYWRlbXldKGh0dHBzOi8vd3d3LmNvZGVjYWRlbXkuY29tL2xl
YXJuL2xlYXJuLWphdmFzY3JpcHQpCi0gW0xlYXJuIEVTNiBvbiBDb2RlY2Fk
ZW15XShodHRwczovL3d3dy5jb2RlY2FkZW15LmNvbS9sZWFybi9pbnRyb2R1
Y3Rpb24tdG8tamF2YXNjcmlwdCkKLSBbTGVhcm4gRVMyMDE1IG9uIEJhYmVs
XShodHRwczovL2JhYmVsanMuaW8vbGVhcm4tZXMyMDE1LykKLSBbRVM2IEth
dGFzXShodHRwOi8vZXM2a2F0YXMub3JnLykKLSBbWW91IERvbid0IEtub3cg
SlNdKGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRpZnkvWW91LURvbnQtS25vdy1K
UykgKEFkdmFuY2VkIGNvbnRlbnQsIG9wdGlvbmFsIGZvciBiZWdpbm5lcnMp
Ci0gW0Fuc3dlcnMgdG8gRnJvbnQgRW5kIEpvYiBJbnRlcnZpZXcgUXVlc3Rp
b25z4oCK4oCU4oCKSmF2YVNjcmlwdF0oaHR0cHM6Ly9naXRodWIuY29tL3lh
bmdzaHVuL2Zyb250LWVuZC1pbnRlcnZpZXctaGFuZGJvb2svYmxvYi9tYXN0
ZXIvcXVlc3Rpb25zL2phdmFzY3JpcHQtcXVlc3Rpb25zLm1kKQoKIyMgVXNl
ciBJbnRlcmZhY2UgLSBSZWFjdAoKPGltZyBhbHQ9IlJlYWN0IExvZ28iIHNy
Yz0iaHR0cHM6Ly9jZG4ucmF3Z2l0LmNvbS9ncmFiL2Zyb250LWVuZC1ndWlk
ZS9tYXN0ZXIvaW1hZ2VzL3JlYWN0LWxvZ28uc3ZnIiB3aWR0aD0iMjU2cHgi
IC8+CgpJZiBhbnkgSmF2YVNjcmlwdCBwcm9qZWN0IGhhcyB0YWtlbiB0aGUg
ZnJvbnQgZW5kIGVjb3N5c3RlbSBieSBzdG9ybSBpbiByZWNlbnQgeWVhcnMs
IHRoYXQgd291bGQgYmUgW1JlYWN0XShodHRwczovL2ZhY2Vib29rLmdpdGh1
Yi5pby9yZWFjdC8pLiBSZWFjdCBpcyBhIGxpYnJhcnkgYnVpbHQgYW5kIG9w
ZW4tc291cmNlZCBieSB0aGUgc21hcnQgcGVvcGxlIGF0IEZhY2Vib29rLiBJ
biBSZWFjdCwgZGV2ZWxvcGVycyB3cml0ZSBjb21wb25lbnRzIGZvciB0aGVp
ciB3ZWIgaW50ZXJmYWNlIGFuZCBjb21wb3NlIHRoZW0gdG9nZXRoZXIuCgpS
ZWFjdCBicmluZ3MgYWJvdXQgbWFueSByYWRpY2FsIGlkZWFzIGFuZCBlbmNv
dXJhZ2VzIGRldmVsb3BlcnMgdG8gW3JldGhpbmsgYmVzdCBwcmFjdGljZXNd
KGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9RGdWUy16WGdNVGsp
LiBGb3IgbWFueSB5ZWFycywgd2ViIGRldmVsb3BlcnMgd2VyZSB0YXVnaHQg
dGhhdCBpdCB3YXMgYSBnb29kIHByYWN0aWNlIHRvIHdyaXRlIEhUTUwsIEph
dmFTY3JpcHQgYW5kIENTUyBzZXBhcmF0ZWx5LiBSZWFjdCBkb2VzIHRoZSBl
eGFjdCBvcHBvc2l0ZSwgYW5kIGVuY291cmFnZXMgdGhhdCB5b3Ugd3JpdGUg
eW91ciBIVE1MIGFuZCBbQ1NTIGluIHlvdXIgSmF2YVNjcmlwdF0oaHR0cHM6
Ly9zcGVha2VyZGVjay5jb20vdmpldXgvcmVhY3QtY3NzLWluLWpzKSBpbnN0
ZWFkLiBUaGlzIHNvdW5kcyBsaWtlIGEgY3JhenkgaWRlYSBhdCBmaXJzdCwg
YnV0IGFmdGVyIHRyeWluZyBpdCBvdXQsIGl0IGFjdHVhbGx5IGlzbid0IGFz
IHdlaXJkIGFzIGl0IHNvdW5kcyBpbml0aWFsbHkuIFJlYXNvbiBiZWluZyB0
aGUgZnJvbnQgZW5kIGRldmVsb3BtZW50IHNjZW5lIGlzIHNoaWZ0aW5nIHRv
d2FyZHMgYSBwYXJhZGlnbSBvZiBjb21wb25lbnQtYmFzZWQgZGV2ZWxvcG1l
bnQuIFRoZSBmZWF0dXJlcyBvZiBSZWFjdDoKCi0gKipEZWNsYXJhdGl2ZSoq
IC0gWW91IGRlc2NyaWJlIHdoYXQgeW91IHdhbnQgdG8gc2VlIGluIHlvdXIg
dmlldyBhbmQgbm90IGhvdyB0byBhY2hpZXZlIGl0LiBJbiB0aGUgalF1ZXJ5
IGRheXMsIGRldmVsb3BlcnMgd291bGQgaGF2ZSB0byBjb21lIHVwIHdpdGgg
YSBzZXJpZXMgb2Ygc3RlcHMgdG8gbWFuaXB1bGF0ZSB0aGUgRE9NIHRvIGdl
dCBmcm9tIG9uZSBhcHAgc3RhdGUgdG8gdGhlIG5leHQuIEluIFJlYWN0LCB5
b3Ugc2ltcGx5IGNoYW5nZSB0aGUgc3RhdGUgd2l0aGluIHRoZSBjb21wb25l
bnQgYW5kIHRoZSB2aWV3IHdpbGwgdXBkYXRlIGl0c2VsZiBhY2NvcmRpbmcg
dG8gdGhlIHN0YXRlLiBJdCBpcyBhbHNvIGVhc3kgdG8gZGV0ZXJtaW5lIGhv
dyB0aGUgY29tcG9uZW50IHdpbGwgbG9vayBsaWtlIGp1c3QgYnkgbG9va2lu
ZyBhdCB0aGUgbWFya3VwIGluIHRoZSBgcmVuZGVyKClgIG1ldGhvZC4KCi0g
KipGdW5jdGlvbmFsKiogLSBUaGUgdmlldyBpcyBhIHB1cmUgZnVuY3Rpb24g
b2YgYHByb3BzYCBhbmQgYHN0YXRlYC4gSW4gbW9zdCBjYXNlcywgYSBSZWFj
dCBjb21wb25lbnQgaXMgZGVmaW5lZCBieSBgcHJvcHNgIChleHRlcm5hbCBw
YXJhbWV0ZXJzKSBhbmQgYHN0YXRlYCAoaW50ZXJuYWwgZGF0YSkuIEZvciB0
aGUgc2FtZSBgcHJvcHNgIGFuZCBgc3RhdGVgLCB0aGUgc2FtZSB2aWV3IGlz
IHByb2R1Y2VkLiBQdXJlIGZ1bmN0aW9ucyBhcmUgZWFzeSB0byB0ZXN0LCBh
bmQgdGhlIHNhbWUgZ29lcyBmb3IgZnVuY3Rpb25hbCBjb21wb25lbnRzLiBU
ZXN0aW5nIGluIFJlYWN0IGlzIG1hZGUgZWFzeSBiZWNhdXNlIGEgY29tcG9u
ZW50J3MgaW50ZXJmYWNlcyBhcmUgd2VsbC1kZWZpbmVkIGFuZCB5b3UgY2Fu
IHRlc3QgdGhlIGNvbXBvbmVudCBieSBzdXBwbHlpbmcgZGlmZmVyZW50IGBw
cm9wc2AgYW5kIGBzdGF0ZWAgdG8gaXQgYW5kIGNvbXBhcmluZyB0aGUgcmVu
ZGVyZWQgb3V0cHV0LgoKLSAqKk1haW50YWluYWJsZSoqIC0gV3JpdGluZyB5
b3VyIHZpZXcgaW4gYSBjb21wb25lbnQtYmFzZWQgZmFzaGlvbiBlbmNvdXJh
Z2VzIHJldXNhYmlsaXR5LiBXZSBmaW5kIHRoYXQgZGVmaW5pbmcgYSBjb21w
b25lbnQncyBgcHJvcFR5cGVzYCBtYWtlIFJlYWN0IGNvZGUgc2VsZi1kb2N1
bWVudGluZyBhcyB0aGUgcmVhZGVyIGNhbiBrbm93IGNsZWFybHkgd2hhdCBp
cyBuZWVkZWQgdG8gdXNlIHRoYXQgY29tcG9uZW50LiBMYXN0bHksIHlvdXIg
dmlldyBhbmQgbG9naWMgaXMgc2VsZi1jb250YWluZWQgd2l0aGluIHRoZSBj
b21wb25lbnQsIGFuZCBzaG91bGQgbm90IGJlIGFmZmVjdGVkIG5vciBhZmZl
Y3Qgb3RoZXIgY29tcG9uZW50cy4gVGhhdCBtYWtlcyBpdCBlYXN5IHRvIHNo
aWZ0IGNvbXBvbmVudHMgYXJvdW5kIGR1cmluZyBsYXJnZS1zY2FsZSByZWZh
Y3RvcmluZywgYXMgbG9uZyBhcyB0aGUgc2FtZSBgcHJvcHNgIGFyZSBzdXBw
bGllZCB0byB0aGUgY29tcG9uZW50LgoKLSAqKkhpZ2ggUGVyZm9ybWFuY2Uq
KiAtIFlvdSBtaWdodCBoYXZlIGhlYXJkIHRoYXQgUmVhY3QgdXNlcyBhIHZp
cnR1YWwgRE9NIChub3QgdG8gYmUgY29uZnVzZWQgd2l0aCBbc2hhZG93IERP
TV0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9X
ZWIvV2ViX0NvbXBvbmVudHMvU2hhZG93X0RPTSkpIGFuZCBpdCByZS1yZW5k
ZXJzIGV2ZXJ5dGhpbmcgd2hlbiB0aGVyZSBpcyBhIGNoYW5nZSBpbiBzdGF0
ZS4gV2h5IGlzIHRoZXJlIGEgbmVlZCBmb3IgYSB2aXJ0dWFsIERPTT8gV2hp
bGUgbW9kZXJuIEphdmFTY3JpcHQgZW5naW5lcyBhcmUgZmFzdCwgcmVhZGlu
ZyBmcm9tIGFuZCB3cml0aW5nIHRvIHRoZSBET00gaXMgc2xvdy4gUmVhY3Qg
a2VlcHMgYSBsaWdodHdlaWdodCB2aXJ0dWFsIHJlcHJlc2VudGF0aW9uIG9m
IHRoZSBET00gaW4gbWVtb3J5LiBSZS1yZW5kZXJpbmcgZXZlcnl0aGluZyBp
cyBhIG1pc2xlYWRpbmcgdGVybS4gSW4gUmVhY3QgaXQgYWN0dWFsbHkgcmVm
ZXJzIHRvIHJlLXJlbmRlcmluZyB0aGUgaW4tbWVtb3J5IHJlcHJlc2VudGF0
aW9uIG9mIHRoZSBET00sIG5vdCB0aGUgYWN0dWFsIERPTSBpdHNlbGYuIFdo
ZW4gdGhlcmUncyBhIGNoYW5nZSBpbiB0aGUgdW5kZXJseWluZyBkYXRhIG9m
IHRoZSBjb21wb25lbnQsIGEgbmV3IHZpcnR1YWwgcmVwcmVzZW50YXRpb24g
aXMgY3JlYXRlZCwgYW5kIGNvbXBhcmVkIGFnYWluc3QgdGhlIHByZXZpb3Vz
IHJlcHJlc2VudGF0aW9uLiBUaGUgZGlmZmVyZW5jZSAobWluaW1hbCBzZXQg
b2YgY2hhbmdlcyByZXF1aXJlZCkgaXMgdGhlbiBwYXRjaGVkIHRvIHRoZSBy
ZWFsIGJyb3dzZXIgRE9NLgoKLSAqKkVhc2Ugb2YgTGVhcm5pbmcqKiAtIExl
YXJuaW5nIFJlYWN0IGlzIHByZXR0eSBzaW1wbGUuIFRoZSBSZWFjdCBBUEkg
c3VyZmFjZSBpcyByZWxhdGl2ZWx5IHNtYWxsIGNvbXBhcmVkIHRvIFt0aGlz
XShodHRwczovL2FuZ3VsYXIuaW8vZG9jcy90cy9sYXRlc3QvYXBpLyk7IHRo
ZXJlIGFyZSBvbmx5IGEgZmV3IEFQSXMgdG8gbGVhcm4gYW5kIHRoZXkgZG8g
bm90IGNoYW5nZSBvZnRlbi4gVGhlIFJlYWN0IGNvbW11bml0eSBpcyBvbmUg
b2YgdGhlIGxhcmdlc3QsIGFuZCBhbG9uZyB3aXRoIHRoYXQgY29tZXMgYSB2
aWJyYW50IGVjb3N5c3RlbSBvZiB0b29scywgb3Blbi1zb3VyY2VkIFVJIGNv
bXBvbmVudHMsIGFuZCBhIHRvbiBvZiBncmVhdCByZXNvdXJjZXMgb25saW5l
IHRvIGdldCB5b3Ugc3RhcnRlZCBvbiBsZWFybmluZyBSZWFjdC4KCi0gKipE
ZXZlbG9wZXIgRXhwZXJpZW5jZSoqIC0gVGhlcmUgYXJlIGEgbnVtYmVyIG9m
IHRvb2xzIHRoYXQgaW1wcm92ZXMgdGhlIGRldmVsb3BtZW50IGV4cGVyaWVu
Y2Ugd2l0aCBSZWFjdC4gW1JlYWN0IERldmVsb3BlciBUb29sc10oaHR0cHM6
Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0LWRldnRvb2xzKSBpcyBhIGJy
b3dzZXIgZXh0ZW5zaW9uIHRoYXQgYWxsb3dzIHlvdSB0byBpbnNwZWN0IHlv
dXIgY29tcG9uZW50LCB2aWV3IGFuZCBtYW5pcHVsYXRlIGl0cyBgcHJvcHNg
IGFuZCBgc3RhdGVgLiBbSG90IHJlbG9hZGluZ10oaHR0cHM6Ly9naXRodWIu
Y29tL2dhZWFyb24vcmVhY3QtaG90LWxvYWRlcikgd2l0aCB3ZWJwYWNrIGFs
bG93cyB5b3UgdG8gdmlldyBjaGFuZ2VzIHRvIHlvdXIgY29kZSBpbiB5b3Vy
IGJyb3dzZXIsIHdpdGhvdXQgeW91IGhhdmluZyB0byByZWZyZXNoIHRoZSBi
cm93c2VyLiBGcm9udCBlbmQgZGV2ZWxvcG1lbnQgaW52b2x2ZXMgYSBsb3Qg
b2YgdHdlYWtpbmcgY29kZSwgc2F2aW5nIGFuZCB0aGVuIHJlZnJlc2hpbmcg
dGhlIGJyb3dzZXIuIEhvdCByZWxvYWRpbmcgaGVscHMgeW91IGJ5IGVsaW1p
bmF0aW5nIHRoZSBsYXN0IHN0ZXAuIFdoZW4gdGhlcmUgYXJlIGxpYnJhcnkg
dXBkYXRlcywgRmFjZWJvb2sgcHJvdmlkZXMgW2NvZGVtb2Qgc2NyaXB0c10o
aHR0cHM6Ly9naXRodWIuY29tL3JlYWN0anMvcmVhY3QtY29kZW1vZCkgdG8g
aGVscCB5b3UgbWlncmF0ZSB5b3VyIGNvZGUgdG8gdGhlIG5ldyBBUElzLiBU
aGlzIG1ha2VzIHRoZSB1cGdyYWRpbmcgcHJvY2VzcyByZWxhdGl2ZWx5IHBh
aW4tZnJlZS4gS3Vkb3MgdG8gdGhlIEZhY2Vib29rIHRlYW0gZm9yIHRoZWly
IGRlZGljYXRpb24gaW4gbWFraW5nIHRoZSBkZXZlbG9wbWVudCBleHBlcmll
bmNlIHdpdGggUmVhY3QgZ3JlYXQuIDxicj4gIVtSZWFjdCBEZXZ0b29scyBE
ZW1vXShpbWFnZXMvcmVhY3QtZGV2dG9vbHMtZGVtby5naWYpCgpPdmVyIHRo
ZSB5ZWFycywgbmV3IHZpZXcgbGlicmFyaWVzIHRoYXQgYXJlIGV2ZW4gbW9y
ZSBwZXJmb3JtYW50IHRoYW4gUmVhY3QgaGF2ZSBlbWVyZ2VkLiBSZWFjdCBt
YXkgbm90IGJlIHRoZSBmYXN0ZXN0IGxpYnJhcnkgb3V0IHRoZXJlLCBidXQg
aW4gdGVybXMgb2YgdGhlIGVjb3N5c3RlbSwgb3ZlcmFsbCB1c2FnZSBleHBl
cmllbmNlIGFuZCBiZW5lZml0cywgaXQgaXMgc3RpbGwgb25lIG9mIHRoZSBn
cmVhdGVzdC4gRmFjZWJvb2sgaXMgYWxzbyBjaGFubmVsaW5nIGVmZm9ydHMg
aW50byBtYWtpbmcgUmVhY3QgZXZlbiBmYXN0ZXIgd2l0aCBhIFtyZXdyaXRl
IG9mIHRoZSB1bmRlcmx5aW5nIHJlY29uY2lsaWF0aW9uIGFsZ29yaXRobV0o
aHR0cHM6Ly9naXRodWIuY29tL2FjZGxpdGUvcmVhY3QtZmliZXItYXJjaGl0
ZWN0dXJlKS4gVGhlIGNvbmNlcHRzIHRoYXQgUmVhY3QgaW50cm9kdWNlZCBo
YXMgdGF1Z2h0IHVzIGhvdyB0byB3cml0ZSBiZXR0ZXIgY29kZSwgbW9yZSBt
YWludGFpbmFibGUgd2ViIGFwcHMgYW5kIG1hZGUgdXMgYmV0dGVyIGVuZ2lu
ZWVycy4gV2UgbGlrZSB0aGF0LgoKV2UgcmVjb21tZW5kIGdvaW5nIHRocm91
Z2ggdGhlIFt0dXRvcmlhbF0oaHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8v
cmVhY3QvdHV0b3JpYWwvdHV0b3JpYWwuaHRtbCkgb24gYnVpbGRpbmcgYSB0
aWMtdGFjLXRvZSBnYW1lIG9uIHRoZSBSZWFjdCBob21lcGFnZSB0byBnZXQg
YSBmZWVsIG9mIHdoYXQgUmVhY3QgaXMgYW5kIHdoYXQgaXQgZG9lcy4gRm9y
IG1vcmUgaW4tZGVwdGggbGVhcm5pbmcsIGNoZWNrIG91dCB0aGUgRWdnaGVh
ZCBjb3Vyc2UsIFtCdWlsZCBZb3VyIEZpcnN0IFByb2R1Y3Rpb24gUXVhbGl0
eSBSZWFjdCBBcHBdKGh0dHBzOi8vZWdnaGVhZC5pby9jb3Vyc2VzL2J1aWxk
LXlvdXItZmlyc3QtcHJvZHVjdGlvbi1xdWFsaXR5LXJlYWN0LWFwcCkuIEl0
IGNvdmVycyBzb21lIGFkdmFuY2VkIGNvbmNlcHRzIGFuZCByZWFsLXdvcmxk
IHVzYWdlcyB0aGF0IGFyZSBub3QgY292ZXJlZCBieSB0aGUgUmVhY3QgZG9j
dW1lbnRhdGlvbi4gW0NyZWF0ZSBSZWFjdCBBcHBdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9mYWNlYm9va2luY3ViYXRvci9jcmVhdGUtcmVhY3QtYXBwKSBieSBG
YWNlYm9vayBpcyBhIHRvb2wgdG8gc2NhZmZvbGQgYSBSZWFjdCBwcm9qZWN0
IHdpdGggbWluaW1hbCBjb25maWd1cmF0aW9uIGFuZCBpcyBoaWdobHkgcmVj
b21tZW5kZWQgdG8gdXNlIGZvciBzdGFydGluZyBuZXcgUmVhY3QgcHJvamVj
dHMuCgpSZWFjdCBpcyBhIGxpYnJhcnksIG5vdCBhIGZyYW1ld29yaywgYW5k
IGRvZXMgbm90IGRlYWwgd2l0aCB0aGUgbGF5ZXJzIGJlbG93IHRoZSB2aWV3
IC0gdGhlIGFwcCBzdGF0ZS4gTW9yZSBvbiB0aGF0IGxhdGVyLgoKKipFc3Rp
bWF0ZWQgRHVyYXRpb246IDMtNCBkYXlzLioqIFRyeSBidWlsZGluZyBzaW1w
bGUgcHJvamVjdHMgbGlrZSBhIHRvLWRvIGxpc3QsIEhhY2tlciBOZXdzIGNs
b25lIHdpdGggcHVyZSBSZWFjdC4gWW91IHdpbGwgc2xvd2x5IGdhaW4gYW4g
YXBwcmVjaWF0aW9uIGZvciBpdCBhbmQgcGVyaGFwcyBmYWNlIHNvbWUgcHJv
YmxlbXMgYWxvbmcgdGhlIHdheSB0aGF0IGlzbid0IHNvbHZlZCBieSBSZWFj
dCwgd2hpY2ggYnJpbmdzIHVzIHRvIHRoZSBuZXh0IHRvcGljLi4uCgojIyMj
IFN0dWR5IExpbmtzCgotIFtSZWFjdCBPZmZpY2lhbCBUdXRvcmlhbF0oaHR0
cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QvdHV0b3JpYWwvdHV0b3Jp
YWwuaHRtbCkKLSBbRWdnaGVhZCBDb3Vyc2UgLSBCdWlsZCBZb3VyIEZpcnN0
IFByb2R1Y3Rpb24gUXVhbGl0eSBSZWFjdCBBcHBdKGh0dHBzOi8vZWdnaGVh
ZC5pby9jb3Vyc2VzL2J1aWxkLXlvdXItZmlyc3QtcHJvZHVjdGlvbi1xdWFs
aXR5LXJlYWN0LWFwcCkKLSBbU2ltcGxlIFJlYWN0IERldmVsb3BtZW50IGlu
IDIwMTddKGh0dHBzOi8vaGFja2Vybm9vbi5jb20vc2ltcGxlLXJlYWN0LWRl
dmVsb3BtZW50LWluLTIwMTctMTEzYmQ1NjM2OTFmKQotIFtQcmVzZW50YXRp
b25hbCBhbmQgQ29udGFpbmVyIENvbXBvbmVudHNdKGh0dHBzOi8vbWVkaXVt
LmNvbS9AZGFuX2FicmFtb3Yvc21hcnQtYW5kLWR1bWItY29tcG9uZW50cy03
Y2EyZjlhN2M3ZDAjLjVpZXhwaHlnNSkKCiMjIyMgQWx0ZXJuYXRpdmVzCgot
IFtBbmd1bGFyXShodHRwczovL2FuZ3VsYXIuaW8vKQotIFtFbWJlcl0oaHR0
cHM6Ly93d3cuZW1iZXJqcy5jb20vKQotIFtWdWVdKGh0dHBzOi8vdnVlanMu
b3JnLykKLSBbQ3ljbGVdKGh0dHBzOi8vY3ljbGUuanMub3JnLykKCiMjIFN0
YXRlIE1hbmFnZW1lbnQgLSBGbHV4L1JlZHV4Cgo8aW1nIGFsdD0iUmVkdXgg
TG9nbyIgc3JjPSJodHRwczovL2Nkbi5yYXdnaXQuY29tL2dyYWIvZnJvbnQt
ZW5kLWd1aWRlL21hc3Rlci9pbWFnZXMvcmVkdXgtbG9nby5zdmciIHdpZHRo
PSIyNTZweCIgLz4KCkFzIHlvdXIgYXBwIGdyb3dzIGJpZ2dlciwgeW91IG1h
eSBmaW5kIHRoYXQgdGhlIGFwcCBzdHJ1Y3R1cmUgYmVjb21lcyBhIGxpdHRs
ZSBtZXNzeS4gQ29tcG9uZW50cyB0aHJvdWdob3V0IHRoZSBhcHAgbWF5IGhh
dmUgdG8gc2hhcmUgYW5kIGRpc3BsYXkgY29tbW9uIGRhdGEgYnV0IHRoZXJl
IGlzIG5vIGVsZWdhbnQgd2F5IHRvIGhhbmRsZSB0aGF0IGluIFJlYWN0LiBB
ZnRlciBhbGwsIFJlYWN0IGlzIGp1c3QgdGhlIHZpZXcgbGF5ZXIsIGl0IGRv
ZXMgbm90IGRpY3RhdGUgaG93IHlvdSBzdHJ1Y3R1cmUgdGhlIG90aGVyIGxh
eWVycyBvZiB5b3VyIGFwcCwgc3VjaCBhcyB0aGUgbW9kZWwgYW5kIHRoZSBj
b250cm9sbGVyLCBpbiB0cmFkaXRpb25hbCBNVkMgcGFyYWRpZ21zLiBJbiBh
biBlZmZvcnQgdG8gc29sdmUgdGhpcywgRmFjZWJvb2sgaW52ZW50ZWQgRmx1
eCwgYW4gYXBwIGFyY2hpdGVjdHVyZSB0aGF0IGNvbXBsZW1lbnRzIFJlYWN0
J3MgY29tcG9zYWJsZSB2aWV3IGNvbXBvbmVudHMgYnkgdXRpbGl6aW5nIGEg
dW5pZGlyZWN0aW9uYWwgZGF0YSBmbG93LiBSZWFkIG1vcmUgYWJvdXQgaG93
IEZsdXggd29ya3MgW2hlcmVdKGh0dHBzOi8vZmFjZWJvb2suZ2l0aHViLmlv
L2ZsdXgvZG9jcy9pbi1kZXB0aC1vdmVydmlldy5odG1sKS4gSW4gc3VtbWFy
eSwgdGhlIEZsdXggcGF0dGVybiBoYXMgdGhlIGZvbGxvd2luZyBjaGFyYWN0
ZXJpc3RpY3M6CgotICoqVW5pZGlyZWN0aW9uYWwgZGF0YSBmbG93KiogLSBN
YWtlcyB0aGUgYXBwIG1vcmUgcHJlZGljdGFibGUgYXMgdXBkYXRlcyBjYW4g
YmUgdHJhY2tlZCBlYXNpbHkuCi0gKipTZXBhcmF0aW9uIG9mIGNvbmNlcm5z
KiogLSBFYWNoIHBhcnQgaW4gdGhlIEZsdXggYXJjaGl0ZWN0dXJlIGhhcyBj
bGVhciByZXNwb25zaWJpbGl0aWVzIGFuZCBhcmUgaGlnaGx5IGRlY291cGxl
ZC4KLSAqKldvcmtzIHdlbGwgd2l0aCBkZWNsYXJhdGl2ZSBwcm9ncmFtbWlu
ZyoqIC0gVGhlIHN0b3JlIGNhbiBzZW5kIHVwZGF0ZXMgdG8gdGhlIHZpZXcg
d2l0aG91dCBzcGVjaWZ5aW5nIGhvdyB0byB0cmFuc2l0aW9uIHZpZXdzIGJl
dHdlZW4gc3RhdGVzLgoKQXMgRmx1eCBpcyBub3QgYSBmcmFtZXdvcmsgcGVy
IHNlLCBkZXZlbG9wZXJzIGhhdmUgdHJpZWQgdG8gY29tZSB1cCB3aXRoIG1h
bnkgaW1wbGVtZW50YXRpb25zIG9mIHRoZSBGbHV4IHBhdHRlcm4uIEV2ZW50
dWFsbHksIGEgY2xlYXIgd2lubmVyIGVtZXJnZWQsIHdoaWNoIHdhcyBbUmVk
dXhdKGh0dHA6Ly9yZWR1eC5qcy5vcmcvKS4gUmVkdXggY29tYmluZXMgdGhl
IGlkZWFzIGZyb20gRmx1eCwgW0NvbW1hbmQgcGF0dGVybl0oaHR0cHM6Ly93
d3cud2lraXdhbmQuY29tL2VuL0NvbW1hbmRfcGF0dGVybikgYW5kIFtFbG0g
YXJjaGl0ZWN0dXJlXShodHRwczovL2d1aWRlLmVsbS1sYW5nLm9yZy9hcmNo
aXRlY3R1cmUvKSBhbmQgaXMgdGhlIGRlIGZhY3RvIHN0YXRlIG1hbmFnZW1l
bnQgbGlicmFyeSBkZXZlbG9wZXJzIHVzZSB3aXRoIFJlYWN0IHRoZXNlIGRh
eXMuIEl0cyBjb3JlIGNvbmNlcHRzIGFyZToKCi0gQXBwICoqc3RhdGUqKiBp
cyBkZXNjcmliZWQgYnkgYSBzaW5nbGUgcGxhaW4gb2xkIEphdmFTY3JpcHQg
b2JqZWN0IChQT0pPKS4KLSBEaXNwYXRjaCBhbiAqKmFjdGlvbioqIChhbHNv
IGEgUE9KTykgdG8gbW9kaWZ5IHRoZSBzdGF0ZS4KLSAqKlJlZHVjZXIqKiBp
cyBhIHB1cmUgZnVuY3Rpb24gdGhhdCB0YWtlcyBpbiBjdXJyZW50IHN0YXRl
IGFuZCBhY3Rpb24gdG8gcHJvZHVjZSBhIG5ldyBzdGF0ZS4KClRoZSBjb25j
ZXB0cyBzb3VuZCBzaW1wbGUsIGJ1dCB0aGV5IGFyZSByZWFsbHkgcG93ZXJm
dWwgYXMgdGhleSBlbmFibGUgYXBwcyB0bzoKCi0gSGF2ZSB0aGVpciBzdGF0
ZSByZW5kZXJlZCBvbiB0aGUgc2VydmVyLCBib290ZWQgdXAgb24gdGhlIGNs
aWVudC4KLSBUcmFjZSwgbG9nIGFuZCBiYWNrdHJhY2sgY2hhbmdlcyBpbiB0
aGUgd2hvbGUgYXBwLgotIEltcGxlbWVudCB1bmRvL3JlZG8gZnVuY3Rpb25h
bGl0eSBlYXNpbHkuCgpUaGUgY3JlYXRvciBvZiBSZWR1eCwgW0RhbiBBYnJh
bW92XShodHRwczovL2dpdGh1Yi5jb20vZ2FlYXJvbiksIGhhcyB0YWtlbiBn
cmVhdCBjYXJlIGluIHdyaXRpbmcgdXAgZGV0YWlsZWQgZG9jdW1lbnRhdGlv
biBmb3IgUmVkdXgsIGFsb25nIHdpdGggY3JlYXRpbmcgY29tcHJlaGVuc2l2
ZSB2aWRlbyB0dXRvcmlhbHMgZm9yIGxlYXJuaW5nIFtiYXNpY10oaHR0cHM6
Ly9lZ2doZWFkLmlvL2NvdXJzZXMvZ2V0dGluZy1zdGFydGVkLXdpdGgtcmVk
dXgpIGFuZCBbYWR2YW5jZWRdKGh0dHBzOi8vZWdnaGVhZC5pby9jb3Vyc2Vz
L2J1aWxkaW5nLXJlYWN0LWFwcGxpY2F0aW9ucy13aXRoLWlkaW9tYXRpYy1y
ZWR1eCkgUmVkdXguIFRoZXkgYXJlIGV4dHJlbWVseSBoZWxwZnVsIHJlc291
cmNlcyBmb3IgbGVhcm5pbmcgUmVkdXguCgoqKkNvbWJpbmluZyBWaWV3IGFu
ZCBTdGF0ZSoqCgpXaGlsZSBSZWR1eCBkb2VzIG5vdCBuZWNlc3NhcmlseSBo
YXZlIHRvIGJlIHVzZWQgd2l0aCBSZWFjdCwgaXQgaXMgaGlnaGx5IHJlY29t
bWVuZGVkIGFzIHRoZXkgcGxheSB2ZXJ5IHdlbGwgd2l0aCBlYWNoIG90aGVy
LiBSZWFjdCBhbmQgUmVkdXggaGF2ZSBhIGxvdCBvZiBpZGVhcyBhbmQgdHJh
aXRzIGluIGNvbW1vbjoKCi0gKipGdW5jdGlvbmFsIGNvbXBvc2l0aW9uIHBh
cmFkaWdtKiogLSBSZWFjdCBjb21wb3NlcyB2aWV3cyAocHVyZSBmdW5jdGlv
bnMpIHdoaWxlIFJlZHV4IGNvbXBvc2VzIHB1cmUgcmVkdWNlcnMgKGFsc28g
cHVyZSBmdW5jdGlvbnMpLiBPdXRwdXQgaXMgcHJlZGljdGFibGUgZ2l2ZW4g
dGhlIHNhbWUgc2V0IG9mIGlucHV0LgotICoqRWFzeSBUbyBSZWFzb24gQWJv
dXQqKiAtIFlvdSBtYXkgaGF2ZSBoZWFyZCB0aGlzIHRlcm0gbWFueSB0aW1l
cyBidXQgd2hhdCBkb2VzIGl0IGFjdHVhbGx5IG1lYW4/IFdlIGludGVycHJl
dCBpdCBhcyBoYXZpbmcgY29udHJvbCBhbmQgdW5kZXJzdGFuZGluZyBvdmVy
IG91ciBjb2RlIC0gT3VyIGNvZGUgYmVoYXZlcyBpbiB3YXlzIHdlIGV4cGVj
dCBpdCB0bywgYW5kIHdoZW4gdGhlcmUgYXJlIHByb2JsZW1zLCB3ZSBjYW4g
ZmluZCB0aGVtIGVhc2lseS4gVGhyb3VnaCBvdXIgZXhwZXJpZW5jZSwgUmVh
Y3QgYW5kIFJlZHV4IG1ha2VzIGRlYnVnZ2luZyBzaW1wbGVyLiBBcyB0aGUg
ZGF0YSBmbG93IGlzIHVuaWRpcmVjdGlvbmFsLCB0cmFjaW5nIHRoZSBmbG93
IG9mIGRhdGEgKHNlcnZlciByZXNwb25zZXMsIHVzZXIgaW5wdXQgZXZlbnRz
KSBpcyBlYXNpZXIgYW5kIGl0IGlzIHN0cmFpZ2h0Zm9yd2FyZCB0byBkZXRl
cm1pbmUgd2hpY2ggbGF5ZXIgdGhlIHByb2JsZW0gb2NjdXJzIGluLgotICoq
TGF5ZXJlZCBTdHJ1Y3R1cmUqKiAtIEVhY2ggbGF5ZXIgaW4gdGhlIGFwcCAv
IEZsdXggYXJjaGl0ZWN0dXJlIGlzIGEgcHVyZSBmdW5jdGlvbiwgYW5kIGhh
cyBjbGVhciByZXNwb25zaWJpbGl0aWVzLiBJdCBpcyByZWxhdGl2ZWx5IGVh
c3kgdG8gd3JpdGUgdGVzdHMgZm9yIHB1cmUgZnVuY3Rpb25zLiBZb3UgaGF2
ZSB0byBjZW50cmFsaXplIGNoYW5nZXMgdG8geW91ciBhcHAgd2l0aGluIHRo
ZSByZWR1Y2VyLCBhbmQgdGhlIG9ubHkgd2F5IHRvIHRyaWdnZXIgYSBjaGFu
Z2UgaXMgdG8gZGlzcGF0Y2ggYW4gYWN0aW9uLgotICoqRGV2ZWxvcG1lbnQg
RXhwZXJpZW5jZSoqIC0gQSBsb3Qgb2YgZWZmb3J0IGhhcyBnb25lIGludG8g
Y3JlYXRpbmcgdG9vbHMgdG8gaGVscCBpbiBkZWJ1Z2dpbmcgYW5kIGluc3Bl
Y3RpbmcgdGhlIGFwcCB3aGlsZSBkZXZlbG9wbWVudCwgc3VjaCBhcyBbUmVk
dXggRGV2VG9vbHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9nYWVhcm9uL3JlZHV4
LWRldnRvb2xzKS4gPGJyPiAhW1JlZHV4IERldnRvb2xzIERlbW9dKGltYWdl
cy9yZWR1eC1kZXZ0b29scy1kZW1vLmdpZikKCllvdXIgYXBwIHdpbGwgbGlr
ZWx5IGhhdmUgdG8gZGVhbCB3aXRoIGFzeW5jIGNhbGxzIGxpa2UgbWFraW5n
IHJlbW90ZSBBUEkgcmVxdWVzdHMuIFtyZWR1eC10aHVua10oaHR0cHM6Ly9n
aXRodWIuY29tL2dhZWFyb24vcmVkdXgtdGh1bmspIGFuZCBbcmVkdXgtc2Fn
YV0oaHR0cHM6Ly9naXRodWIuY29tL3JlZHV4LXNhZ2EvcmVkdXgtc2FnYSkg
d2VyZSBjcmVhdGVkIHRvIHNvbHZlIHRob3NlIHByb2JsZW1zLiBUaGV5IG1h
eSB0YWtlIHNvbWUgdGltZSB0byB1bmRlcnN0YW5kIGFzIHRoZXkgcmVxdWly
ZSB1bmRlcnN0YW5kaW5nIG9mIGZ1bmN0aW9uYWwgcHJvZ3JhbW1pbmcgYW5k
IGdlbmVyYXRvcnMuIE91ciBhZHZpY2UgaXMgdG8gZGVhbCB3aXRoIGl0IG9u
bHkgd2hlbiB5b3UgbmVlZCBpdC4KCltyZWFjdC1yZWR1eF0oaHR0cHM6Ly9n
aXRodWIuY29tL3JlYWN0anMvcmVhY3QtcmVkdXgpIGlzIGFuIG9mZmljaWFs
IFJlYWN0IGJpbmRpbmcgZm9yIFJlZHV4IGFuZCBpcyB2ZXJ5IHNpbXBsZSB0
byBsZWFybi4KCioqRXN0aW1hdGVkIER1cmF0aW9uOiA0IGRheXMuKiogVGhl
IGVnZ2hlYWQgY291cnNlcyBjYW4gYmUgYSBsaXR0bGUgdGltZS1jb25zdW1p
bmcgYnV0IHRoZXkgYXJlIHdvcnRoIHNwZW5kaW5nIHRpbWUgb24uIEFmdGVy
IGxlYXJuaW5nIFJlZHV4LCB5b3UgY2FuIHRyeSBpbmNvcnBvcmF0aW5nIGl0
IGludG8gdGhlIFJlYWN0IHByb2plY3RzIHlvdSBoYXZlIGJ1aWx0LiBEb2Vz
IFJlZHV4IHNvbHZlIHNvbWUgb2YgdGhlIHN0YXRlIG1hbmFnZW1lbnQgaXNz
dWVzIHlvdSB3ZXJlIHN0cnVnZ2xpbmcgd2l0aCBpbiBwdXJlIFJlYWN0PwoK
IyMjIyBTdHVkeSBMaW5rcwoKLSBbRmx1eCBIb21lcGFnZV0oaHR0cDovL2Zh
Y2Vib29rLmdpdGh1Yi5pby9mbHV4KQotIFtSZWR1eCBIb21lcGFnZV0oaHR0
cDovL3JlZHV4LmpzLm9yZy8pCi0gW0VnZ2hlYWQgQ291cnNlIC0gR2V0dGlu
ZyBTdGFydGVkIHdpdGggUmVkdXhdKGh0dHBzOi8vZWdnaGVhZC5pby9jb3Vy
c2VzL2dldHRpbmctc3RhcnRlZC13aXRoLXJlZHV4KQotIFtFZ2doZWFkIENv
dXJzZSAtIEJ1aWxkIFJlYWN0IEFwcHMgd2l0aCBJZGlvbWF0aWMgUmVkdXhd
KGh0dHBzOi8vZWdnaGVhZC5pby9jb3Vyc2VzL2J1aWxkaW5nLXJlYWN0LWFw
cGxpY2F0aW9ucy13aXRoLWlkaW9tYXRpYy1yZWR1eCkKLSBbUmVhY3QgUmVk
dXggTGlua3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9tYXJrZXJpa3Nvbi9yZWFj
dC1yZWR1eC1saW5rcykKLSBbWW91IE1pZ2h0IE5vdCBOZWVkIFJlZHV4XSho
dHRwczovL21lZGl1bS5jb20vQGRhbl9hYnJhbW92L3lvdS1taWdodC1ub3Qt
bmVlZC1yZWR1eC1iZTQ2MzYwY2YzNjcpCgojIyMjIEFsdGVybmF0aXZlcwoK
LSBbTW9iWF0oaHR0cHM6Ly9naXRodWIuY29tL21vYnhqcy9tb2J4KQoKIyMg
Q29kaW5nIHdpdGggU3R5bGUgLSBDU1MgTW9kdWxlcwoKPGltZyBhbHQ9IkNT
UyBNb2R1bGVzIExvZ28iIHNyYz0iaHR0cHM6Ly9jZG4ucmF3Z2l0LmNvbS9n
cmFiL2Zyb250LWVuZC1ndWlkZS9tYXN0ZXIvaW1hZ2VzL2Nzcy1tb2R1bGVz
LWxvZ28uc3ZnIiB3aWR0aD0iMjU2cHgiIC8+CgpDU1MgKENhc2NhZGluZyBT
dHlsZSBTaGVldHMpIGFyZSBydWxlcyB0byBkZXNjcmliZSBob3cgeW91ciBI
VE1MIGVsZW1lbnRzIGxvb2suIFdyaXRpbmcgZ29vZCBDU1MgaXMgaGFyZC4g
SXQgdXN1YWxseSB0YWtlcyBtYW55IHllYXJzIG9mIGV4cGVyaWVuY2UgYW5k
IGZydXN0cmF0aW9uIG9mIHNob290aW5nIHlvdXJzZWxmIGluIHRoZSBmb290
IGJlZm9yZSBvbmUgaXMgYWJsZSB0byB3cml0ZSBtYWludGFpbmFibGUgYW5k
IHNjYWxhYmxlIENTUy4gQ1NTLCBoYXZpbmcgYSBnbG9iYWwgbmFtZXNwYWNl
LCBpcyBmdW5kYW1lbnRhbGx5IGRlc2lnbmVkIGZvciB3ZWIgZG9jdW1lbnRz
LCBhbmQgbm90IHJlYWxseSBmb3Igd2ViIGFwcHMgdGhhdCBmYXZvciBhIGNv
bXBvbmVudHMgYXJjaGl0ZWN0dXJlLiBIZW5jZSwgZXhwZXJpZW5jZWQgZnJv
bnQgZW5kIGRldmVsb3BlcnMgaGF2ZSBkZXNpZ25lZCBtZXRob2RvbG9naWVz
IHRvIGd1aWRlIHBlb3BsZSBvbiBob3cgdG8gd3JpdGUgb3JnYW5pemVkIENT
UyBmb3IgY29tcGxleCBwcm9qZWN0cywgc3VjaCBhcyB1c2luZyBbU01BQ1NT
XShodHRwczovL3NtYWNzcy5jb20vKSwgW0JFTV0oaHR0cDovL2dldGJlbS5j
b20vKSwgW1NVSVQgQ1NTXShodHRwOi8vc3VpdGNzcy5naXRodWIuaW8vKSwg
ZXRjLgoKSG93ZXZlciwgdGhlIGVuY2Fwc3VsYXRpb24gb2Ygc3R5bGVzIHRo
YXQgdGhlc2UgbWV0aG9kb2xvZ2llcyBicmluZyBhYm91dCBhcmUgYXJ0aWZp
Y2lhbGx5IGVuZm9yY2VkIGJ5IGNvbnZlbnRpb25zIGFuZCBndWlkZWxpbmVz
LiBUaGV5IGJyZWFrIHRoZSBtb21lbnQgZGV2ZWxvcGVycyBkbyBub3QgZm9s
bG93IHRoZW0uCgpBcyB5b3UgbWlnaHQgaGF2ZSByZWFsaXplZCBieSBub3cs
IHRoZSBmcm9udCBlbmQgZWNvc3lzdGVtIGlzIHNhdHVyYXRlZCB3aXRoIHRv
b2xzLCBhbmQgdW5zdXJwcmlzaW5nbHksIHRvb2xzIGhhdmUgYmVlbiBpbnZl
bnRlZCB0byBbcGFydGlhbGx5IHNvbHZlIHNvbWUgb2YgdGhlIHByb2JsZW1z
XShodHRwczovL3NwZWFrZXJkZWNrLmNvbS92amV1eC9yZWFjdC1jc3MtaW4t
anMpIHdpdGggd3JpdGluZyBDU1MgYXQgc2NhbGUuICJBdCBzY2FsZSIgbWVh
bnMgdGhhdCBtYW55IGRldmVsb3BlcnMgYXJlIHdvcmtpbmcgb24gdGhlIHNh
bWUgbGFyZ2UgcHJvamVjdCBhbmQgdG91Y2hpbmcgdGhlIHNhbWUgc3R5bGVz
aGVldHMuIFRoZXJlIGlzIG5vIGNvbW11bml0eS1hZ3JlZWQgYXBwcm9hY2gg
b24gd3JpdGluZyBbQ1NTIGluIEpTXShodHRwczovL2dpdGh1Yi5jb20vTWlj
aGVsZUJlcnRvbGkvY3NzLWluLWpzKSBhdCB0aGUgbW9tZW50LCBhbmQgd2Ug
YXJlIGhvcGluZyB0aGF0IG9uZSBkYXkgYSB3aW5uZXIgd291bGQgZW1lcmdl
LCBqdXN0IGxpa2UgUmVkdXggZGlkLCBhbW9uZyBhbGwgdGhlIEZsdXggaW1w
bGVtZW50YXRpb25zLiBGb3Igbm93LCB3ZSBhcmUgYmFua2luZyBvbiBbQ1NT
IE1vZHVsZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9jc3MtbW9kdWxlcy9jc3Mt
bW9kdWxlcykuIENTUyBtb2R1bGVzIGlzIGFuIGltcHJvdmVtZW50IG92ZXIg
ZXhpc3RpbmcgQ1NTIHRoYXQgYWltcyB0byBmaXggdGhlIHByb2JsZW0gb2Yg
Z2xvYmFsIG5hbWVzcGFjZSBpbiBDU1M7IGl0IGVuYWJsZXMgeW91IHRvIHdy
aXRlIHN0eWxlcyB0aGF0IGFyZSBsb2NhbCBieSBkZWZhdWx0IGFuZCBlbmNh
cHN1bGF0ZWQgdG8geW91ciBjb21wb25lbnQuIFRoaXMgZmVhdHVyZSBpcyBh
Y2hpZXZlZCB2aWEgdG9vbGluZy4gV2l0aCBDU1MgbW9kdWxlcywgbGFyZ2Ug
dGVhbXMgY2FuIHdyaXRlIG1vZHVsYXIgYW5kIHJldXNhYmxlIENTUyB3aXRo
b3V0IGZlYXIgb2YgY29uZmxpY3Qgb3Igb3ZlcnJpZGluZyBvdGhlciBwYXJ0
cyBvZiB0aGUgYXBwLiBIb3dldmVyLCBhdCB0aGUgZW5kIG9mIHRoZSBkYXks
IENTUyBtb2R1bGVzIGFyZSBzdGlsbCBiZWluZyBjb21waWxlZCBpbnRvIG5v
cm1hbCBnbG9iYWxseS1uYW1lc3BhY2VkIENTUyB0aGF0IGJyb3dzZXJzIHJl
Y29nbml6ZSwgYW5kIGl0IGlzIHN0aWxsIGltcG9ydGFudCB0byBsZWFybiBh
bmQgdW5kZXJzdGFuZCBob3cgcmF3IENTUyB3b3Jrcy4KCklmIHlvdSBhcmUg
YSB0b3RhbCBiZWdpbm5lciB0byBDU1MsIENvZGVjYWRlbXkncyBbSFRNTCAm
IENTUyBjb3Vyc2VdKGh0dHBzOi8vd3d3LmNvZGVjYWRlbXkuY29tL2xlYXJu
L2xlYXJuLWh0bWwtY3NzKSB3aWxsIGJlIGEgZ29vZCBpbnRyb2R1Y3Rpb24g
dG8geW91LiBOZXh0LCByZWFkIHVwIG9uIHRoZSBbU2FzcyBwcmVwcm9jZXNz
b3JdKGh0dHA6Ly9zYXNzLWxhbmcuY29tLyksIGFuIGV4dGVuc2lvbiBvZiB0
aGUgQ1NTIGxhbmd1YWdlIHdoaWNoIGFkZHMgc3ludGFjdGljIGltcHJvdmVt
ZW50cyBhbmQgZW5jb3VyYWdlcyBzdHlsZSByZXVzYWJpbGl0eS4gU3R1ZHkg
dGhlIENTUyBtZXRob2RvbG9naWVzIG1lbnRpb25lZCBhYm92ZSwgYW5kIGxh
c3RseSwgQ1NTIG1vZHVsZXMuCgoqKkVzdGltYXRlZCBEdXJhdGlvbjogMy00
IGRheXMuKiogVHJ5IHN0eWxpbmcgdXAgeW91ciBhcHAgdXNpbmcgdGhlIFNN
QUNTUy9CRU0gYXBwcm9hY2ggYW5kL29yIENTUyBtb2R1bGVzLgoKIyMjIyBT
dHVkeSBMaW5rcwoKLSBbTGVhcm4gSFRNTCAmIENTUyBjb3Vyc2Ugb24gQ29k
ZWNhZGVteV0oaHR0cHM6Ly93d3cuY29kZWNhZGVteS5jb20vbGVhcm4vbGVh
cm4taHRtbC1jc3MpCi0gW0ludHJvIHRvIEhUTUwvQ1NTIG9uIEtoYW4gQWNh
ZGVteV0oaHR0cHM6Ly93d3cua2hhbmFjYWRlbXkub3JnL2NvbXB1dGluZy9j
b21wdXRlci1wcm9ncmFtbWluZy9odG1sLWNzcykKLSBbU01BQ1NTXShodHRw
czovL3NtYWNzcy5jb20vKQotIFtCRU1dKGh0dHA6Ly9nZXRiZW0uY29tL2lu
dHJvZHVjdGlvbi8pCi0gW1NVSVQgQ1NTXShodHRwOi8vc3VpdGNzcy5naXRo
dWIuaW8vKQotIFtDU1MgTW9kdWxlcyBTcGVjaWZpY2F0aW9uXShodHRwczov
L2dpdGh1Yi5jb20vY3NzLW1vZHVsZXMvY3NzLW1vZHVsZXMpCi0gW1Nhc3Mg
SG9tZXBhZ2VdKGh0dHA6Ly9zYXNzLWxhbmcuY29tLykKLSBbQW5zd2VycyB0
byBGcm9udCBFbmQgSm9iIEludGVydmlldyBRdWVzdGlvbnPigIrigJTigIpI
VE1MXShodHRwczovL2dpdGh1Yi5jb20veWFuZ3NodW4vdGVjaC1pbnRlcnZp
ZXctaGFuZGJvb2svYmxvYi9tYXN0ZXIvZnJvbnQtZW5kL2ludGVydmlldy1x
dWVzdGlvbnMubWQjaHRtbC1xdWVzdGlvbnMpCi0gW0Fuc3dlcnMgdG8gRnJv
bnQgRW5kIEpvYiBJbnRlcnZpZXcgUXVlc3Rpb25z4oCK4oCU4oCKQ1NTXSho
dHRwczovL2dpdGh1Yi5jb20veWFuZ3NodW4vdGVjaC1pbnRlcnZpZXctaGFu
ZGJvb2svYmxvYi9tYXN0ZXIvZnJvbnQtZW5kL2ludGVydmlldy1xdWVzdGlv
bnMubWQjY3NzLXF1ZXN0aW9ucykKCiMjIyMgQWx0ZXJuYXRpdmVzCgotIFtK
U1NdKGh0dHBzOi8vZ2l0aHViLmNvbS9jc3NpbmpzL2pzcykKLSBbU3R5bGVk
IENvbXBvbmVudHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9zdHlsZWQtY29tcG9u
ZW50cy9zdHlsZWQtY29tcG9uZW50cykKCiMjIE1haW50YWluYWJpbGl0eQoK
Q29kZSBpcyByZWFkIG1vcmUgZnJlcXVlbnRseSB0aGFuIGl0IGlzIHdyaXR0
ZW4uIFRoaXMgaXMgZXNwZWNpYWxseSB0cnVlIGF0IEdyYWIsIHdoZXJlIHRo
ZSB0ZWFtIHNpemUgaXMgbGFyZ2UgYW5kIHdlIGhhdmUgbXVsdGlwbGUgZW5n
aW5lZXJzIHdvcmtpbmcgYWNyb3NzIG11bHRpcGxlIHByb2plY3RzLiBXZSBo
aWdobHkgdmFsdWUgcmVhZGFiaWxpdHksIG1haW50YWluYWJpbGl0eSBhbmQg
c3RhYmlsaXR5IG9mIHRoZSBjb2RlIGFuZCB0aGVyZSBhcmUgYSBmZXcgd2F5
cyB0byBhY2hpZXZlIHRoYXQ6ICJFeHRlbnNpdmUgdGVzdGluZyIsICJDb25z
aXN0ZW50IGNvZGluZyBzdHlsZSIgYW5kICJUeXBlY2hlY2tpbmciLiBBbHNv
IHdoZW4geW91IGFyZSBpbiBhIHRlYW0sIHNoYXJpbmcgc2FtZSBwcmFjdGlj
ZXMgYmVjb21lcyByZWFsbHkgaW1wb3J0YW50LiBDaGVjayBvdXQgdGhlc2Ug
W0phdmFTY3JpcHQgUHJvamVjdCBHdWlkZWxpbmVzXShodHRwczovL2dpdGh1
Yi5jb20vd2VhcmVoaXZlL3Byb2plY3QtZ3VpZGVsaW5lcykgZm9yIGluc3Rh
bmNlLgoKIyMgVGVzdGluZyAtIEplc3QgKyBFbnp5bWUKCjxpbWcgYWx0PSJK
ZXN0IExvZ28iIHNyYz0iaHR0cHM6Ly9jZG4ucmF3Z2l0LmNvbS9ncmFiL2Zy
b250LWVuZC1ndWlkZS9tYXN0ZXIvaW1hZ2VzL2plc3QtbG9nby5zdmciIHdp
ZHRoPSIxNjRweCIgLz4KCltKZXN0XShodHRwOi8vZmFjZWJvb2suZ2l0aHVi
LmlvL2plc3QvKSBpcyBhIHRlc3RpbmcgbGlicmFyeSBieSBGYWNlYm9vayB0
aGF0IGFpbXMgdG8gbWFrZSB0aGUgcHJvY2VzcyBvZiB0ZXN0aW5nIHBhaW4t
ZnJlZS4gQXMgd2l0aCBGYWNlYm9vayBwcm9qZWN0cywgaXQgcHJvdmlkZXMg
YSBncmVhdCBkZXZlbG9wbWVudCBleHBlcmllbmNlIG91dCBvZiB0aGUgYm94
LiBUZXN0cyBjYW4gYmUgcnVuIGluIHBhcmFsbGVsIHJlc3VsdGluZyBpbiBz
aG9ydGVyIGR1cmF0aW9uLiBEdXJpbmcgd2F0Y2ggbW9kZSwgYnkgZGVmYXVs
dCwgb25seSB0aGUgdGVzdHMgZm9yIHRoZSBjaGFuZ2VkIGZpbGVzIGFyZSBy
dW4uIE9uZSBwYXJ0aWN1bGFyIGZlYXR1cmUgd2UgbGlrZSBpcyAiU25hcHNo
b3QgVGVzdGluZyIuIEplc3QgY2FuIHNhdmUgdGhlIGdlbmVyYXRlZCBvdXRw
dXQgb2YgeW91ciBSZWFjdCBjb21wb25lbnQgYW5kIFJlZHV4IHN0YXRlIGFu
ZCBzYXZlIGl0IGFzIHNlcmlhbGl6ZWQgZmlsZXMsIHNvIHlvdSB3b3VsZG4n
dCBoYXZlIHRvIG1hbnVhbGx5IGNvbWUgdXAgd2l0aCB0aGUgZXhwZWN0ZWQg
b3V0cHV0IHlvdXJzZWxmLiBKZXN0IGFsc28gY29tZXMgd2l0aCBidWlsdC1p
biBtb2NraW5nLCBhc3NlcnRpb24gYW5kIHRlc3QgY292ZXJhZ2UuIE9uZSBs
aWJyYXJ5IHRvIHJ1bGUgdGhlbSBhbGwhCgohW0plc3QgRGVtb10oaW1hZ2Vz
L2plc3QtZGVtby5naWYpCgpSZWFjdCBjb21lcyB3aXRoIHNvbWUgdGVzdGlu
ZyB1dGlsaXRpZXMsIGJ1dCBbRW56eW1lXShodHRwOi8vYWlyYm5iLmlvL2Vu
enltZS8pIGJ5IEFpcmJuYiBtYWtlcyBpdCBlYXNpZXIgdG8gZ2VuZXJhdGUs
IGFzc2VydCwgbWFuaXB1bGF0ZSBhbmQgdHJhdmVyc2UgeW91ciBSZWFjdCBj
b21wb25lbnRzJyBvdXRwdXQgd2l0aCBhIGpRdWVyeS1saWtlIEFQSS4gSXQg
aXMgcmVjb21tZW5kZWQgdGhhdCBFbnp5bWUgYmUgdXNlZCB0byB0ZXN0IFJl
YWN0IGNvbXBvbmVudHMuCgpKZXN0IGFuZCBFbnp5bWUgbWFrZXMgd3JpdGlu
ZyBmcm9udCBlbmQgdGVzdHMgZnVuIGFuZCBlYXN5LiBXaGVuIHdyaXRpbmcg
dGVzdHMgYmVjb21lcyBlbmpveWFibGUsIGRldmVsb3BlcnMgd3JpdGUgbW9y
ZSB0ZXN0cy4gSXQgYWxzbyBoZWxwcyB0aGF0IFJlYWN0IGNvbXBvbmVudHMg
YW5kIFJlZHV4IGFjdGlvbnMvcmVkdWNlcnMgYXJlIHJlbGF0aXZlbHkgZWFz
eSB0byB0ZXN0IGJlY2F1c2Ugb2YgY2xlYXJseSBkZWZpbmVkIHJlc3BvbnNp
YmlsaXRpZXMgYW5kIGludGVyZmFjZXMuIEZvciBSZWFjdCBjb21wb25lbnRz
LCB3ZSBjYW4gdGVzdCB0aGF0IGdpdmVuIHNvbWUgYHByb3BzYCwgdGhlIGRl
c2lyZWQgRE9NIGlzIHJlbmRlcmVkLCBhbmQgdGhhdCBjYWxsYmFja3MgYXJl
IGZpcmVkIHVwb24gY2VydGFpbiBzaW11bGF0ZWQgdXNlciBpbnRlcmFjdGlv
bnMuIEZvciBSZWR1eCByZWR1Y2Vycywgd2UgY2FuIHRlc3QgdGhhdCBnaXZl
biBhIHByaW9yIHN0YXRlIGFuZCBhbiBhY3Rpb24sIGEgcmVzdWx0aW5nIHN0
YXRlIGlzIHByb2R1Y2VkLgoKVGhlIGRvY3VtZW50YXRpb24gZm9yIEplc3Qg
YW5kIEVuenltZSBhcmUgcHJldHR5IGNvbmNpc2UsIGFuZCBpdCBzaG91bGQg
YmUgc3VmZmljaWVudCB0byBsZWFybiB0aGVtIGJ5IHJlYWRpbmcgaXQuCgoq
KkVzdGltYXRlZCBEdXJhdGlvbjogMi0zIGRheXMuKiogVHJ5IHdyaXRpbmcg
SmVzdCArIEVuenltZSB0ZXN0cyBmb3IgeW91ciBSZWFjdCArIFJlZHV4IGFw
cCEKCiMjIyMgU3R1ZHkgTGlua3MKCi0gW0plc3QgSG9tZXBhZ2VdKGh0dHA6
Ly9mYWNlYm9vay5naXRodWIuaW8vamVzdC8pCi0gW1Rlc3RpbmcgUmVhY3Qg
QXBwbGljYXRpb25zIHdpdGggSmVzdF0oaHR0cHM6Ly9hdXRoMC5jb20vYmxv
Zy90ZXN0aW5nLXJlYWN0LWFwcGxpY2F0aW9ucy13aXRoLWplc3QvKQotIFtF
bnp5bWUgSG9tZXBhZ2VdKGh0dHA6Ly9haXJibmIuaW8vZW56eW1lLykKLSBb
RW56eW1lOiBKYXZhU2NyaXB0IFRlc3RpbmcgdXRpbGl0aWVzIGZvciBSZWFj
dF0oaHR0cHM6Ly9tZWRpdW0uY29tL2FpcmJuYi1lbmdpbmVlcmluZy9lbnp5
bWUtamF2YXNjcmlwdC10ZXN0aW5nLXV0aWxpdGllcy1mb3ItcmVhY3QtYTQx
N2U1ZTUwOTBmKQoKIyMjIyBBbHRlcm5hdGl2ZXMKCi0gW0FWQV0oaHR0cHM6
Ly9naXRodWIuY29tL2F2YWpzL2F2YSkKLSBbS2FybWFdKGh0dHBzOi8va2Fy
bWEtcnVubmVyLmdpdGh1Yi5pby8pCgojIyBMaW50aW5nIEphdmFTY3JpcHQg
LSBFU0xpbnQKCjxpbWcgYWx0PSJFU0xpbnQgTG9nbyIgc3JjPSJodHRwczov
L2Nkbi5yYXdnaXQuY29tL2dyYWIvZnJvbnQtZW5kLWd1aWRlL21hc3Rlci9p
bWFnZXMvZXNsaW50LWxvZ28uc3ZnIiB3aWR0aD0iMjU2cHgiIC8+CgpBIGxp
bnRlciBpcyBhIHRvb2wgdG8gc3RhdGljYWxseSBhbmFseXplIGNvZGUgYW5k
IGZpbmRzIHByb2JsZW1zIHdpdGggdGhlbSwgcG90ZW50aWFsbHkgcHJldmVu
dGluZyBidWdzL3J1bnRpbWUgZXJyb3JzIGFuZCBhdCB0aGUgc2FtZSB0aW1l
LCBlbmZvcmNpbmcgYSBjb2Rpbmcgc3R5bGUuIFRpbWUgaXMgc2F2ZWQgZHVy
aW5nIHB1bGwgcmVxdWVzdCByZXZpZXdzIHdoZW4gcmV2aWV3ZXJzIGRvIG5v
dCBoYXZlIHRvIGxlYXZlIG5pdHBpY2t5IGNvbW1lbnRzIG9uIGNvZGluZyBz
dHlsZS4gW0VTTGludF0oaHR0cDovL2VzbGludC5vcmcvKSBpcyBhIHRvb2wg
Zm9yIGxpbnRpbmcgSmF2YVNjcmlwdCBjb2RlIHRoYXQgaXMgaGlnaGx5IGV4
dGVuc2libGUgYW5kIGN1c3RvbWl6YWJsZS4gVGVhbXMgY2FuIHdyaXRlIHRo
ZWlyIG93biBsaW50IHJ1bGVzIHRvIGVuZm9yY2UgdGhlaXIgY3VzdG9tIHN0
eWxlcy4gQXQgR3JhYiwgd2UgdXNlIEFpcmJuYidzIFtgZXNsaW50LWNvbmZp
Zy1haXJibmJgXShodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9lc2xp
bnQtY29uZmlnLWFpcmJuYikgcHJlc2V0LCB0aGF0IGhhcyBhbHJlYWR5IGJl
ZW4gY29uZmlndXJlZCB3aXRoIHRoZSBjb21tb24gZ29vZCBjb2Rpbmcgc3R5
bGUgaW4gdGhlIFtBaXJibmIgSmF2YVNjcmlwdCBzdHlsZSBndWlkZV0oaHR0
cHM6Ly9naXRodWIuY29tL2FpcmJuYi9qYXZhc2NyaXB0KS4KCkZvciB0aGUg
bW9zdCBwYXJ0LCB1c2luZyBFU0xpbnQgaXMgYXMgc2ltcGxlIGFzIHR3ZWFr
aW5nIGEgY29uZmlndXJhdGlvbiBmaWxlIGluIHlvdXIgcHJvamVjdCBmb2xk
ZXIuIFRoZXJlJ3Mgbm90aGluZyBtdWNoIHRvIGxlYXJuIGFib3V0IEVTTGlu
dCBpZiB5b3UncmUgbm90IHdyaXRpbmcgbmV3IHJ1bGVzIGZvciBpdC4gSnVz
dCBiZSBhd2FyZSBvZiB0aGUgZXJyb3JzIHdoZW4gdGhleSBzdXJmYWNlIGFu
ZCBHb29nbGUgaXQgdG8gZmluZCBvdXQgdGhlIHJlY29tbWVuZGVkIHN0eWxl
LgoKKipFc3RpbWF0ZWQgRHVyYXRpb246IDEvMiBkYXkuKiogTm90aGluZyBt
dWNoIHRvIGxlYXJuIGhlcmUuIEFkZCBFU0xpbnQgdG8geW91ciBwcm9qZWN0
IGFuZCBmaXggdGhlIGxpbnRpbmcgZXJyb3JzIQoKIyMjIyBTdHVkeSBMaW5r
cwoKLSBbRVNMaW50IEhvbWVwYWdlXShodHRwOi8vZXNsaW50Lm9yZy8pCi0g
W0FpcmJuYiBKYXZhU2NyaXB0IFN0eWxlIEd1aWRlXShodHRwczovL2dpdGh1
Yi5jb20vYWlyYm5iL2phdmFzY3JpcHQpCgojIyMjIEFsdGVybmF0aXZlcwoK
LSBbU3RhbmRhcmRdKGh0dHBzOi8vZ2l0aHViLmNvbS9zdGFuZGFyZC9zdGFu
ZGFyZCkKLSBbSlNIaW50XShodHRwOi8vanNoaW50LmNvbS8pCi0gW1hPXSho
dHRwczovL2dpdGh1Yi5jb20veG9qcy94bykKCiMjIExpbnRpbmcgQ1NTIC0g
c3R5bGVsaW50Cgo8aW1nIGFsdD0ic3R5bGVsaW50IExvZ28iIHNyYz0iaHR0
cHM6Ly9jZG4ucmF3Z2l0LmNvbS9ncmFiL2Zyb250LWVuZC1ndWlkZS9tYXN0
ZXIvaW1hZ2VzL3N0eWxlbGludC1sb2dvLnN2ZyIgd2lkdGg9IjI1NnB4IiAv
PgoKQXMgbWVudGlvbmVkIGVhcmxpZXIsIGdvb2QgQ1NTIGlzIG5vdG9yaW91
c2x5IGhhcmQgdG8gd3JpdGUuIFVzYWdlIG9mIHN0YXRpYyBhbmFseXNpcyB0
b29scyBvbiBDU1MgY2FuIGhlbHAgdG8gbWFpbnRhaW4gb3VyIENTUyBjb2Rl
IHF1YWxpdHkgYW5kIGNvZGluZyBzdHlsZS4gRm9yIGxpbnRpbmcgQ1NTLCB3
ZSB1c2Ugc3R5bGVsaW50LiBMaWtlIEVTTGludCwgc3R5bGVsaW50IGlzIGRl
c2lnbmVkIGluIGEgdmVyeSBtb2R1bGFyIGZhc2hpb24sIGFsbG93aW5nIGRl
dmVsb3BlcnMgdG8gdHVybiBydWxlcyBvbi9vZmYgYW5kIHdyaXRlIGN1c3Rv
bSBwbHVnaW5zIGZvciBpdC4gQmVzaWRlcyBDU1MsIHN0eWxlbGludCBpcyBh
YmxlIHRvIHBhcnNlIFNDU1MgYW5kIGhhcyBleHBlcmltZW50YWwgc3VwcG9y
dCBmb3IgTGVzcywgd2hpY2ggbG93ZXJzIHRoZSBiYXJyaWVyIGZvciBtb3N0
IGV4aXN0aW5nIGNvZGUgYmFzZXMgdG8gYWRvcHQgaXQuCgohW3N0eWxlbGlu
dCBEZW1vXShpbWFnZXMvc3R5bGVsaW50LWRlbW8ucG5nKQoKT25jZSB5b3Ug
aGF2ZSBsZWFybnQgRVNMaW50LCBsZWFybmluZyBzdHlsZWxpbnQgd291bGQg
YmUgZWZmb3J0bGVzcyBjb25zaWRlcmluZyB0aGVpciBzaW1pbGFyaXRpZXMu
IHN0eWxlbGludCBpcyBjdXJyZW50bHkgYmVpbmcgdXNlZCBieSBiaWcgY29t
cGFuaWVzIGxpa2UgW0ZhY2Vib29rXShodHRwczovL2NvZGUuZmFjZWJvb2su
Y29tL3Bvc3RzLzg3OTg5MDg4NTQ2NzU4NC9pbXByb3ZpbmctY3NzLXF1YWxp
dHktYXQtZmFjZWJvb2stYW5kLWJleW9uZC8pLCBbR2l0aHViXShodHRwczov
L2dpdGh1Yi5jb20vcHJpbWVyL3N0eWxlbGludC1jb25maWctcHJpbWVyKSBh
bmQgW1dvcmRwcmVzc10oaHR0cHM6Ly9naXRodWIuY29tL1dvcmRQcmVzcy1D
b2RpbmctU3RhbmRhcmRzL3N0eWxlbGludC1jb25maWctd29yZHByZXNzKS4K
Ck9uZSBkb3duc2lkZSBvZiBzdHlsZWxpbnQgaXMgdGhhdCB0aGUgYXV0b2Zp
eCBmZWF0dXJlIGlzIG5vdCBmdWxseSBtYXR1cmUgeWV0LCBhbmQgaXMgb25s
eSBhYmxlIHRvIGZpeCBmb3IgYSBsaW1pdGVkIG51bWJlciBvZiBydWxlcy4g
SG93ZXZlciwgdGhpcyBpc3N1ZSBzaG91bGQgaW1wcm92ZSB3aXRoIHRpbWUu
CgoqKkVzdGltYXRlZCBEdXJhdGlvbjogMS8yIGRheS4qKiBOb3RoaW5nIG11
Y2ggdG8gbGVhcm4gaGVyZS4gQWRkIHN0eWxlbGludCB0byB5b3VyIHByb2pl
Y3QgYW5kIGZpeCB0aGUgbGludGluZyBlcnJvcnMhCgojIyMjIFN0dWR5IExp
bmtzCgotIFtzdHlsZWxpbnQgSG9tZXBhZ2VdKGh0dHBzOi8vc3R5bGVsaW50
LmlvLykKLSBbTGludCB5b3VyIENTUyB3aXRoIHN0eWxlbGludF0oaHR0cHM6
Ly9jc3MtdHJpY2tzLmNvbS9zdHlsZWxpbnQvKQoKIyMjIyBBbHRlcm5hdGl2
ZXMKCi0gW1Nhc3MgTGludF0oaHR0cHM6Ly9naXRodWIuY29tL3Nhc3N0b29s
cy9zYXNzLWxpbnQpCi0gW0NTUyBMaW50XShodHRwOi8vY3NzbGludC5uZXQv
KQoKIyMgRm9ybWF0dGluZyBDb2RlIC0gUHJldHRpZXIKCjxpbWcgYWx0PSJQ
cmV0dGllciBMb2dvIiBzcmM9Imh0dHBzOi8vY2RuLnJhd2dpdC5jb20vZ3Jh
Yi9mcm9udC1lbmQtZ3VpZGUvbWFzdGVyL2ltYWdlcy9wcmV0dGllci1sb2dv
LnBuZyIgd2lkdGg9IjI1NnB4IiAvPgoKQW5vdGhlciB0b29sIGZvciBlbmZv
cmNpbmcgY29uc2lzdGVudCBjb2Rpbmcgc3R5bGUgZm9yIEphdmFTY3JpcHQg
YW5kIENTUyBpcyBbUHJldHRpZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9wcmV0
dGllci9wcmV0dGllcikuCgpJbiBtb3N0IGNhc2VzLCBpdCBpcyByZWNvbW1l
bmRlZCB0byBzZXR1cCBQcmV0dGllciBvbiB0b3Agb2YgRVNMaW50IGFuZCBz
dHlsZWxpbnQgYW5kIGludGVncmF0ZSBpdCBpbnRvIHRoZSB3b3JrZmxvdy4g
VGhpcyBhbGxvd3MgdGhlIGNvZGUgdG8gYmUgZm9ybWF0dGVkIGludG8gY29u
c2lzdGVudCBzdHlsZSBhdXRvbWF0aWNhbGx5IHZpYSBjb21taXQgaG9va3Ms
IHNvIHRoYXQgZGV2ZWxvcGVycyBkbyBub3QgbmVlZCB0byBzcGVuZCB0aW1l
IGZvcm1hdHRpbmcgdGhlIGNvZGluZyBzdHlsZSBtYW51YWxseS4KCk5vdGUg
dGhhdCBQcmV0dGllciBvbmx5IGVuZm9yY2VzIGNvZGluZyBzdHlsZSwgYnV0
IGRvZXMgbm90IGNoZWNrIGZvciBsb2dpYyBlcnJvcnMgaW4gdGhlIGNvZGUu
IEhlbmNlIGl0IGlzIG5vdCBhIHJlcGxhY2VtZW50IGZvciBsaW50ZXJzLgoK
KipFc3RpbWF0ZWQgRHVyYXRpb246IDEvMiBkYXkuKiogTm90aGluZyBtdWNo
IHRvIGxlYXJuIGhlcmUuIEFkZCBQcmV0dGllciB0byB5b3VyIHByb2plY3Qg
YW5kIGFkZCBob29rcyB0byBlbmZvcmNlIHRoZSBjb2Rpbmcgc3R5bGUhCgoj
IyMjIFN0dWR5IExpbmtzCgotIFtQcmV0dGllciBIb21lcGFnZV0oaHR0cHM6
Ly9wcmV0dGllci5pby8pCi0gW1ByZXR0aWVyIEdpdEh1YiByZXBvXShodHRw
czovL2dpdGh1Yi5jb20vcHJldHRpZXIvcHJldHRpZXIpCi0gW0NvbXBhcmlz
b24gYmV0d2VlbiB0b29scyB0aGF0IGFsbG93IHlvdSB0byB1c2UgRVNMaW50
IGFuZCBQcmV0dGllciB0b2dldGhlcl0oaHR0cHM6Ly9naXN0LmdpdGh1Yi5j
b20veWFuZ3NodW4vMzE4MTAyZjUyNWVjNjgwMzNiZjM3YWM0YTAxMGViMGMp
CgojIyBUeXBlcyAtIEZsb3cKCjxpbWcgYWx0PSJGbG93IExvZ28iIHNyYz0i
aHR0cHM6Ly9jZG4ucmF3Z2l0LmNvbS9ncmFiL2Zyb250LWVuZC1ndWlkZS9t
YXN0ZXIvaW1hZ2VzL2Zsb3ctbG9nby5wbmciIHdpZHRoPSIyNTZweCIgLz4K
ClN0YXRpYyB0eXBpbmcgYnJpbmdzIGFib3V0IG1hbnkgYmVuZWZpdHMgd2hl
biB3cml0aW5nIGFwcHMuIFRoZXkgY2FuIGNhdGNoIGNvbW1vbiBidWdzIGFu
ZCBlcnJvcnMgaW4geW91ciBjb2RlIGVhcmx5LiBUeXBlcyBhbHNvIHNlcnZl
IGFzIGEgZm9ybSBvZiBkb2N1bWVudGF0aW9uIGZvciB5b3VyIGNvZGUgYW5k
IGltcHJvdmVzIHRoZSByZWFkYWJpbGl0eSBvZiB5b3VyIGNvZGUuIEFzIGEg
Y29kZSBiYXNlIGdyb3dzIGxhcmdlciwgd2Ugc2VlIHRoZSBpbXBvcnRhbmNl
IG9mIHR5cGVzIGFzIHRoZXkgZ2l2ZXMgdXMgZ3JlYXRlciBjb25maWRlbmNl
IHdoZW4gd2UgZG8gcmVmYWN0b3JpbmcuIEl0IGlzIGFsc28gZWFzaWVyIHRv
IG9uYm9hcmQgbmV3IG1lbWJlcnMgb2YgdGhlIHRlYW0gdG8gdGhlIHByb2pl
Y3Qgd2hlbiBpdCBpcyBjbGVhciB3aGF0IGtpbmQgb2YgdmFsdWVzIGVhY2gg
b2JqZWN0IGhvbGRzIGFuZCB3aGF0IGVhY2ggZnVuY3Rpb24gZXhwZWN0cy4K
CkFkZGluZyB0eXBlcyB0byB5b3VyIGNvZGUgY29tZXMgd2l0aCB0aGUgdHJh
ZGUtb2ZmIG9mIGluY3JlYXNlZCB2ZXJib3NpdHkgYW5kIGEgbGVhcm5pbmcg
Y3VydmUgb2YgdGhlIHN5bnRheC4gQnV0IHRoaXMgbGVhcm5pbmcgY29zdCBp
cyBwYWlkIHVwZnJvbnQgYW5kIGFtb3J0aXplZCBvdmVyIHRpbWUuIEluIGNv
bXBsZXggcHJvamVjdHMgd2hlcmUgdGhlIG1haW50YWluYWJpbGl0eSBvZiB0
aGUgY29kZSBtYXR0ZXJzIGFuZCB0aGUgcGVvcGxlIHdvcmtpbmcgb24gaXQg
Y2hhbmdlIG92ZXIgdGltZSwgYWRkaW5nIHR5cGVzIHRvIHRoZSBjb2RlIGJy
aW5ncyBhYm91dCBtb3JlIGJlbmVmaXRzIHRoYW4gZGlzYWR2YW50YWdlcy4K
ClJlY2VudGx5LCBJIGhhZCB0byBmaXggYSBidWcgaW4gYSBjb2RlIGJhc2Ug
dGhhdCBJIGhhdmVu4oCZdCB0b3VjaGVkIGluIG1vbnRocy4gSXQgd2FzIHRo
YW5rcyB0byB0eXBlcyB0aGF0IEkgY291bGQgZWFzaWx5IHJlZnJlc2ggbXlz
ZWxmIG9uIHdoYXQgdGhlIGNvZGUgd2FzIGRvaW5nLCBhbmQgZ2F2ZSBtZSBj
b25maWRlbmNlIGluIHRoZSBmaXggSSBtYWRlLgoKVGhlIHR3byBiaWdnZXN0
IGNvbnRlbmRlcnMgaW4gYWRkaW5nIHN0YXRpYyB0eXBlcyB0byBKYXZhU2Ny
aXB0IGFyZSBbRmxvd10oaHR0cHM6Ly9mbG93Lm9yZy8pIChieSBGYWNlYm9v
aykgYW5kIFtUeXBlU2NyaXB0XShodHRwczovL3d3dy50eXBlc2NyaXB0bGFu
Zy5vcmcvKSAoYnkgTWljcm9zb2Z0KS4gQXMgb2YgZGF0ZSwgdGhlcmUgaXMg
bm8gY2xlYXIgd2lubmVyIGluIHRoZSBiYXR0bGUuIEZvciBub3csIHdlIGhh
dmUgbWFkZSB0aGUgY2hvaWNlIG9mIHVzaW5nIEZsb3cuIFdlIGZpbmQgdGhh
dCBGbG93IGhhcyBhIGxvd2VyIGxlYXJuaW5nIGN1cnZlIGFzIGNvbXBhcmVk
IHRvIFR5cGVTY3JpcHQgYW5kIGl0IHJlcXVpcmVzIHJlbGF0aXZlbHkgbGVz
cyBlZmZvcnQgdG8gbWlncmF0ZSBhbiBleGlzdGluZyBjb2RlIGJhc2UgdG8g
Rmxvdy4gQmVpbmcgYnVpbHQgYnkgRmFjZWJvb2ssIEZsb3cgaGFzIGJldHRl
ciBpbnRlZ3JhdGlvbiB3aXRoIHRoZSBSZWFjdCBlY29zeXN0ZW0gb3V0IG9m
IHRoZSBib3guIFtKYW1lcyBLeWxlXShodHRwczovL3R3aXR0ZXIuY29tL3Ro
ZWphbWVza3lsZSksIG9uZSBvZiB0aGUgYXV0aG9ycyBvZiBGbG93LCBoYXMg
W3dyaXR0ZW5dKGh0dHA6Ly90aGVqYW1lc2t5bGUuY29tL2Fkb3B0aW5nLWZs
b3ctYW5kLXR5cGVzY3JpcHQuaHRtbCkgb24gYSBjb21wYXJpc29uIGJldHdl
ZW4gYWRvcHRpbmcgRmxvdyBhbmQgVHlwZVNjcmlwdC4KCkFueXdheSwgaXQg
aXMgbm90IGV4dHJlbWVseSBkaWZmaWN1bHQgdG8gbW92ZSBmcm9tIEZsb3cg
dG8gVHlwZVNjcmlwdCBhcyB0aGUgc3ludGF4IGFuZCBzZW1hbnRpY3MgYXJl
IHF1aXRlIHNpbWlsYXIsIGFuZCB3ZSB3aWxsIHJlLWV2YWx1YXRlIHRoZSBz
aXR1YXRpb24gaW4gdGltZSB0byBjb21lLiBBZnRlciBhbGwsIHVzaW5nIG9u
ZSBpcyBiZXR0ZXIgdGhhbiBub3QgdXNpbmcgYW55IGF0IGFsbC4KCkZsb3cg
cmVjZW50bHkgcmV2YW1wZWQgdGhlaXIgaG9tZXBhZ2UgYW5kIGl0J3MgcHJl
dHR5IG5lYXQgbm93IQoKKipFc3RpbWF0ZWQgRHVyYXRpb246IDEgZGF5Lioq
IEZsb3cgaXMgcHJldHR5IHNpbXBsZSB0byBsZWFybiBhcyB0aGUgdHlwZSBh
bm5vdGF0aW9ucyBmZWVsIGxpa2UgYSBuYXR1cmFsIGV4dGVuc2lvbiBvZiB0
aGUgSmF2YVNjcmlwdCBsYW5ndWFnZS4gQWRkIEZsb3cgYW5ub3RhdGlvbnMg
dG8geW91ciBwcm9qZWN0IGFuZCBlbWJyYWNlIHRoZSBwb3dlciBvZiB0eXBl
IHN5c3RlbXMuCgojIyMjIFN0dWR5IExpbmtzCgotIFtGbG93IEhvbWVwYWdl
XShodHRwczovL2Zsb3cub3JnLykKLSBbVHlwZVNjcmlwdCB2cyBGbG93XSho
dHRwczovL2dpdGh1Yi5jb20vbmlpZWFuaS90eXBlc2NyaXB0LXZzLWZsb3d0
eXBlKQoKIyMjIyBBbHRlcm5hdGl2ZXMKCi0gW1R5cGVTY3JpcHRdKGh0dHBz
Oi8vd3d3LnR5cGVzY3JpcHRsYW5nLm9yZy8pCgojIyBCdWlsZCBTeXN0ZW0g
LSB3ZWJwYWNrCgo8aW1nIGFsdD0id2VicGFjayBMb2dvIiBzcmM9Imh0dHBz
Oi8vY2RuLnJhd2dpdC5jb20vZ3JhYi9mcm9udC1lbmQtZ3VpZGUvbWFzdGVy
L2ltYWdlcy93ZWJwYWNrLWxvZ28uc3ZnIiB3aWR0aD0iMjU2cHgiIC8+CgpU
aGlzIHBhcnQgd2lsbCBiZSBrZXB0IHNob3J0IGFzIHNldHRpbmcgdXAgd2Vi
cGFjayBjYW4gYmUgYSB0ZWRpb3VzIHByb2Nlc3MgYW5kIG1pZ2h0IGJlIGEg
dHVybi1vZmYgdG8gZGV2ZWxvcGVycyB3aG8gYXJlIGFscmVhZHkgb3Zlcndo
ZWxtZWQgYnkgdGhlIGJhcnJhZ2Ugb2YgbmV3IHRoaW5ncyB0aGV5IGhhdmUg
dG8gbGVhcm4gZm9yIGZyb250IGVuZCBkZXZlbG9wbWVudC4gSW4gYSBudXRz
aGVsbCwgW3dlYnBhY2tdKGh0dHBzOi8vd2VicGFjay5qcy5vcmcvKSBpcyBh
IG1vZHVsZSBidW5kbGVyIHRoYXQgY29tcGlsZXMgYSBmcm9udCBlbmQgcHJv
amVjdCBhbmQgaXRzIGRlcGVuZGVuY2llcyBpbnRvIGEgZmluYWwgYnVuZGxl
IHRvIGJlIHNlcnZlZCB0byB1c2Vycy4gVXN1YWxseSwgcHJvamVjdHMgd2ls
bCBhbHJlYWR5IGhhdmUgdGhlIHdlYnBhY2sgY29uZmlndXJhdGlvbiBzZXQg
dXAgYW5kIGRldmVsb3BlcnMgcmFyZWx5IGhhdmUgdG8gY2hhbmdlIGl0LiBI
YXZpbmcgYW4gdW5kZXJzdGFuZGluZyBvZiB3ZWJwYWNrIGlzIHN0aWxsIGEg
Z29vZCB0byBoYXZlIGluIHRoZSBsb25nIHJ1bi4gSXQgaXMgZHVlIHRvIHdl
YnBhY2sgdGhhdCBmZWF0dXJlcyBsaWtlIGhvdCByZWxvYWRpbmcgYW5kIENT
UyBtb2R1bGVzIGFyZSBtYWRlIHBvc3NpYmxlLgoKV2UgaGF2ZSBmb3VuZCB0
aGUgW3dlYnBhY2sgd2Fsa3Rocm91Z2hdKGh0dHBzOi8vc3Vydml2ZWpzLmNv
bS93ZWJwYWNrL2ZvcmV3b3JkLykgYnkgU3Vydml2ZUpTIHRvIGJlIHRoZSBi
ZXN0IHJlc291cmNlIG9uIGxlYXJuaW5nIHdlYnBhY2suIEl0IGlzIGEgZ29v
ZCBjb21wbGVtZW50IHRvIHRoZSBvZmZpY2lhbCBkb2N1bWVudGF0aW9uIGFu
ZCB3ZSByZWNvbW1lbmQgZm9sbG93aW5nIHRoZSB3YWxrdGhyb3VnaCBmaXJz
dCBhbmQgcmVmZXJyaW5nIHRvIHRoZSBkb2N1bWVudGF0aW9uIGxhdGVyIHdo
ZW4gdGhlIG5lZWQgZm9yIGZ1cnRoZXIgY3VzdG9taXphdGlvbiBhcmlzZXMu
CgoqKkVzdGltYXRlZCBEdXJhdGlvbjogMiBkYXlzIChPcHRpb25hbCkuKioK
CiMjIyMgU3R1ZHkgTGlua3MKCi0gW3dlYnBhY2sgSG9tZXBhZ2VdKGh0dHBz
Oi8vd2VicGFjay5qcy5vcmcvKQotIFtTdXJ2aXZlSlMgLSBXZWJwYWNrOiBG
cm9tIGFwcHJlbnRpY2UgdG8gbWFzdGVyXShodHRwczovL3N1cnZpdmVqcy5j
b20vd2VicGFjay9mb3Jld29yZC8pCgojIyMjIEFsdGVybmF0aXZlcwoKLSBb
Um9sbHVwXShodHRwczovL3JvbGx1cGpzLm9yZy8pCi0gW0Jyb3dzZXJpZnld
KGh0dHA6Ly9icm93c2VyaWZ5Lm9yZy8pCi0gW1BhcmNlbF0oaHR0cHM6Ly9w
YXJjZWxqcy5vcmcvKQoKIyMgUGFja2FnZSBNYW5hZ2VtZW50IC0gWWFybgoK
PGltZyBhbHQ9Illhcm4gTG9nbyIgc3JjPSJodHRwczovL2Nkbi5yYXdnaXQu
Y29tL2dyYWIvZnJvbnQtZW5kLWd1aWRlL21hc3Rlci9pbWFnZXMveWFybi1s
b2dvLnBuZyIgd2lkdGg9IjI1NnB4IiAvPgoKSWYgeW91IHRha2UgYSBwZWVr
IGludG8geW91ciBgbm9kZV9tb2R1bGVzYCBkaXJlY3RvcnksIHlvdSB3aWxs
IGJlIGFwcGFsbGVkIGJ5IHRoZSBudW1iZXIgb2YgZGlyZWN0b3JpZXMgdGhh
dCBhcmUgY29udGFpbmVkIGluIGl0LiBFYWNoIGJhYmVsIHBsdWdpbiwgbG9k
YXNoIGZ1bmN0aW9uLCBpcyBhIHBhY2thZ2Ugb24gaXRzIG93bi4gV2hlbiB5
b3UgaGF2ZSBtdWx0aXBsZSBwcm9qZWN0cywgdGhlc2UgcGFja2FnZXMgYXJl
IGR1cGxpY2F0ZWQgYWNyb3NzIGVhY2ggcHJvamVjdCBhbmQgdGhleSBhcmUg
bGFyZ2VseSBzaW1pbGFyLiBFYWNoIHRpbWUgeW91IHJ1biBgbnBtIGluc3Rh
bGxgIGluIGEgbmV3IHByb2plY3QsIHRoZXNlIHBhY2thZ2VzIGFyZSBkb3du
bG9hZGVkIG92ZXIgYW5kIG92ZXIgYWdhaW4gZXZlbiB0aG91Z2ggdGhleSBh
bHJlYWR5IGV4aXN0IGluIHNvbWUgb3RoZXIgcHJvamVjdCBpbiB5b3VyIGNv
bXB1dGVyLgoKVGhlcmUgd2FzIGFsc28gdGhlIHByb2JsZW0gb2Ygbm9uLWRl
dGVybWluaXNtIGluIHRoZSBpbnN0YWxsZWQgcGFja2FnZXMgdmlhIGBucG0g
aW5zdGFsbGAuIFNvbWUgb2Ygb3VyIENJIGJ1aWxkcyBmYWlsIGJlY2F1c2Ug
YXQgdGhlIHBvaW50IG9mIHRpbWUgd2hlbiB0aGUgQ0kgc2VydmVyIGluc3Rh
bGxzIHRoZSBkZXBlbmRlbmNpZXMsIGl0IHB1bGxlZCBpbiBtaW5vciB1cGRh
dGVzIHRvIHNvbWUgcGFja2FnZXMgdGhhdCBjb250YWluZWQgYnJlYWtpbmcg
Y2hhbmdlcy4gVGhpcyB3b3VsZCBub3QgaGF2ZSBoYXBwZW5lZCBpZiBsaWJy
YXJ5IGF1dGhvcnMgcmVzcGVjdGVkIFtzZW12ZXJdKGh0dHA6Ly9zZW12ZXIu
b3JnLykgYW5kIGVuZ2luZWVycyBkaWQgbm90IGFzc3VtZSB0aGF0IEFQSSBj
b250cmFjdHMgd291bGQgYmUgcmVzcGVjdGVkIGFsbCB0aGUgdGltZS4KCltZ
YXJuXShodHRwczovL3lhcm5wa2cuY29tLykgc29sdmVzIHRoZXNlIHByb2Js
ZW1zLiBUaGUgaXNzdWUgb2Ygbm9uLWRldGVybWluaXNtIG9mIGluc3RhbGxl
ZCBwYWNrYWdlcyBpcyBoYW5kbGVkIHZpYSBhIGB5YXJuLmxvY2tgIGZpbGUs
IHdoaWNoIGVuc3VyZXMgdGhhdCBldmVyeSBpbnN0YWxsIHJlc3VsdHMgaW4g
dGhlIGV4YWN0IHNhbWUgZmlsZSBzdHJ1Y3R1cmUgaW4gYG5vZGVfbW9kdWxl
c2AgYWNyb3NzIGFsbCBtYWNoaW5lcy4gWWFybiB1dGlsaXplcyBhIGdsb2Jh
bCBjYWNoZSBkaXJlY3Rvcnkgd2l0aGluIHlvdXIgbWFjaGluZSwgYW5kIHBh
Y2thZ2VzIHRoYXQgaGF2ZSBiZWVuIGRvd25sb2FkZWQgYmVmb3JlIGRvIG5v
dCBoYXZlIHRvIGJlIGRvd25sb2FkZWQgYWdhaW4uIFRoaXMgYWxzbyBlbmFi
bGVzIG9mZmxpbmUgaW5zdGFsbGF0aW9uIG9mIGRlcGVuZGVuY2llcyEKClRo
ZSBtb3N0IGNvbW1vbiBZYXJuIGNvbW1hbmRzIGNhbiBiZSBmb3VuZCBbaGVy
ZV0oaHR0cHM6Ly95YXJucGtnLmNvbS9lbi9kb2NzL3VzYWdlKS4gTW9zdCBv
dGhlciB5YXJuIGNvbW1hbmRzIGFyZSBzaW1pbGFyIHRvIHRoZSBgbnBtYCBl
cXVpdmFsZW50cyBhbmQgaXQgaXMgZmluZSB0byB1c2UgdGhlIGBucG1gIHZl
cnNpb25zIGluc3RlYWQuIE9uZSBvZiBvdXIgZmF2b3JpdGUgY29tbWFuZHMg
aXMgYHlhcm4gdXBncmFkZS1pbnRlcmFjdGl2ZWAgd2hpY2ggbWFrZXMgdXBk
YXRpbmcgZGVwZW5kZW5jaWVzIGEgYnJlZXplIGVzcGVjaWFsbHkgd2hlbiB0
aGUgbW9kZXJuIEphdmFTY3JpcHQgcHJvamVjdCByZXF1aXJlcyBzbyBtYW55
IGRlcGVuZGVuY2llcyB0aGVzZSBkYXlzLiBEbyBjaGVjayBpdCBvdXQhCgpu
cG1ANS4wLjAgd2FzIFtyZWxlYXNlZCBpbiBNYXkgMjAxN10oaHR0cHM6Ly9n
aXRodWIuY29tL25wbS9ucG0vcmVsZWFzZXMvdGFnL3Y1LjAuMCkgYW5kIGl0
IHNlZW1zIHRvIGFkZHJlc3MgbWFueSBvZiB0aGUgaXNzdWVzIHRoYXQgWWFy
biBhaW1zIHRvIHNvbHZlLiBEbyBrZWVwIGFuIGV5ZSBvbiBpdCEKCioqRXN0
aW1hdGVkIER1cmF0aW9uOiAyIGhvdXJzLioqCgojIyMjIFN0dWR5IExpbmtz
CgotIFtZYXJuIEhvbWVwYWdlXShodHRwczovL3lhcm5wa2cuY29tLykKLSBb
WWFybjogQSBuZXcgcGFja2FnZSBtYW5hZ2VyIGZvciBKYXZhU2NyaXB0XSho
dHRwczovL2NvZGUuZmFjZWJvb2suY29tL3Bvc3RzLzE4NDAwNzU2MTk1NDUz
NjApCgojIyMjIEFsdGVybmF0aXZlcwoKLSBbR29vZCBvbGQgbnBtXShodHRw
czovL2dpdGh1Yi5jb20vbnBtL25wbS9yZWxlYXNlcy90YWcvdjUuMC4wKQoK
IyMgQ29udGludW91cyBJbnRlZ3JhdGlvbgoKV2UgdXNlZCBbVHJhdmlzIENJ
XShodHRwczovL3RyYXZpcy1jaS5jb20vKSBmb3Igb3VyIGNvbnRpbnVvdXMg
aW50ZWdyYXRpb24gKENJKSBwaXBlbGluZS4gVHJhdmlzIGlzIGEgaGlnaGx5
IHBvcHVsYXIgQ0kgb24gR2l0aHViIGFuZCBpdHMgW2J1aWxkIG1hdHJpeF0o
aHR0cHM6Ly9kb2NzLnRyYXZpcy1jaS5jb20vdXNlci9jdXN0b21pemluZy10
aGUtYnVpbGQjQnVpbGQtTWF0cml4KSBmZWF0dXJlIGlzIHVzZWZ1bCBmb3Ig
cmVwb3NpdG9yaWVzIHdoaWNoIGNvbnRhaW4gbXVsdGlwbGUgcHJvamVjdHMg
bGlrZSBHcmFiJ3MuIFdlIGNvbmZpZ3VyZWQgVHJhdmlzIHRvIGRvIHRoZSBm
b2xsb3dpbmc6CgotIFJ1biBsaW50aW5nIGZvciB0aGUgcHJvamVjdC4KLSBS
dW4gdW5pdCB0ZXN0cyBmb3IgdGhlIHByb2plY3QuCi0gSWYgdGhlIHRlc3Rz
IHBhc3M6CiAgLSBUZXN0IGNvdmVyYWdlIGdlbmVyYXRlZCBieSBKZXN0IGlz
IHVwbG9hZGVkIHRvIFtDb2RlY292XShodHRwczovL2NvZGVjb3YuaW8vKS4K
ICAtIEdlbmVyYXRlIGEgcHJvZHVjdGlvbiBidW5kbGUgd2l0aCB3ZWJwYWNr
IGludG8gYSBgYnVpbGRgIGRpcmVjdG9yeS4KICAtIGB0YXJgIHRoZSBgYnVp
bGRgIGRpcmVjdG9yeSBhcyBgPGhhc2g+LnRhcmAgYW5kIHVwbG9hZCBpdCB0
byBhbiBTMyBidWNrZXQgd2hpY2ggc3RvcmVzIGFsbCBvdXIgdGFyIGJ1aWxk
cy4KLSBQb3N0IGEgbm90aWZpY2F0aW9uIHRvIFNsYWNrIHRvIGluZm9ybSBh
Ym91dCB0aGUgVHJhdmlzIGJ1aWxkIHJlc3VsdC4KCiMjIyMgU3R1ZHkgTGlu
a3MKCi0gW1RyYXZpcyBIb21lcGFnZV0oaHR0cHM6Ly90cmF2aXMtY2kuY29t
LykKLSBbQ29kZWNvdiBIb21lcGFnZV0oaHR0cHM6Ly9jb2RlY292LmlvLykK
CiMjIyMgQWx0ZXJuYXRpdmVzCgotIFtKZW5raW5zXShodHRwczovL2plbmtp
bnMuaW8vKQotIFtDaXJjbGVDSV0oaHR0cHM6Ly9jaXJjbGVjaS5jb20vKQot
IFtHaXRMYWIgQ0kvQ0RdKGh0dHBzOi8vYWJvdXQuZ2l0bGFiLmNvbS9wcm9k
dWN0L2NvbnRpbnVvdXMtaW50ZWdyYXRpb24vKQoKIyMgSG9zdGluZyBhbmQg
Q0ROCgpUcmFkaXRpb25hbGx5LCB3ZWIgc2VydmVycyB0aGF0IHJlY2VpdmUg
YSByZXF1ZXN0IGZvciBhIHdlYnBhZ2Ugd2lsbCByZW5kZXIgdGhlIGNvbnRl
bnRzIG9uIHRoZSBzZXJ2ZXIsIGFuZCByZXR1cm4gYSBIVE1MIHBhZ2Ugd2l0
aCBkeW5hbWljIGNvbnRlbnQgbWVhbnQgZm9yIHRoZSByZXF1ZXN0ZXIuIFRo
aXMgaXMga25vd24gYXMgc2VydmVyLXNpZGUgcmVuZGVyaW5nLiBBcyBtZW50
aW9uZWQgZWFybGllciBpbiB0aGUgc2VjdGlvbiBvbiBTaW5nbGUtcGFnZSBB
cHBzLCBtb2Rlcm4gd2ViIGFwcGxpY2F0aW9ucyBkbyBub3QgaW52b2x2ZSBz
ZXJ2ZXItc2lkZSByZW5kZXJpbmcsIGFuZCBpdCBpcyBzdWZmaWNpZW50IHRv
IHVzZSBhIHdlYiBzZXJ2ZXIgdGhhdCBzZXJ2ZXMgc3RhdGljIGFzc2V0IGZp
bGVzLiBOZ2lueCBhbmQgQXBhY2hlIGFyZSBwb3NzaWJsZSBvcHRpb25zIGFu
ZCBub3QgbXVjaCBjb25maWd1cmF0aW9uIGlzIHJlcXVpcmVkIHRvIGdldCB0
aGluZ3MgdXAgYW5kIHJ1bm5uaW5nLiBUaGUgY2F2ZWF0IGlzIHRoYXQgdGhl
IHdlYiBzZXJ2ZXIgd2lsbCBoYXZlIHRvIGJlIGNvbmZpZ3VyZWQgdG8gcm91
dGUgYWxsIHJlcXVlc3RzIHRvIGEgc2luZ2xlIGVudHJ5IHBvaW50IGFuZCBh
bGxvdyBjbGllbnQtc2lkZSByb3V0aW5nIHRvIHRha2Ugb3Zlci4gVGhlIGZs
b3cgZm9yIGZyb250IGVuZCByb3V0aW5nIGdvZXMgbGlrZSB0aGlzOgoKMS4g
V2ViIHNlcnZlciByZWNlaXZlcyBhIEhUVFAgcmVxdWVzdCBmb3IgYSBwYXJ0
aWN1bGFyIHJvdXRlLCBmb3IgZXhhbXBsZSBgL3VzZXIvam9obmAuCjEuIFJl
Z2FyZGxlc3Mgb2Ygd2hpY2ggcm91dGUgdGhlIHNlcnZlciByZWNlaXZlcywg
c2VydmUgdXAgYGluZGV4Lmh0bWxgIGZyb20gdGhlIHN0YXRpYyBhc3NldHMg
ZGlyZWN0b3J5LgoxLiBUaGUgYGluZGV4Lmh0bWxgIHNob3VsZCBjb250YWlu
IHNjcmlwdHMgdGhhdCBsb2FkIHVwIGEgSmF2YVNjcmlwdCBmcmFtZXdvcmsv
bGlicmFyeSB0aGF0IGhhbmRsZXMgY2xpZW50LXNpZGUgcm91dGluZy4KMS4g
VGhlIGNsaWVudC1zaWRlIHJvdXRpbmcgbGlicmFyeSByZWFkcyB0aGUgY3Vy
cmVudCByb3V0ZSwgYW5kIGNvbW11bmljYXRlcyB0byB0aGUgTVZDIChvciBl
cXVpdmFsZW50IHdoZXJlIHJlbGV2YW50KSBmcmFtZXdvcmsgYWJvdXQgdGhl
IGN1cnJlbnQgcm91dGUuCjEuIFRoZSBNVkMgSmF2YVNjcmlwdCBmcmFtZXdv
cmsgcmVuZGVycyB0aGUgZGVzaXJlZCB2aWV3IGJhc2VkIG9uIHRoZSByb3V0
ZSwgcG9zc2libHkgYWZ0ZXIgZmV0Y2hpbmcgZGF0YSBmcm9tIGFuIEFQSSBp
ZiByZXF1aXJlZC4gRXhhbXBsZSwgbG9hZCB1cCBgVXNlcnNDb250cm9sbGVy
YCwgZmV0Y2ggdXNlciBkYXRhIGZvciB0aGUgdXNlcm5hbWUgYGpvaG5gIGFz
IEpTT04sIGNvbWJpbmUgdGhlIGRhdGEgd2l0aCB0aGUgdmlldywgYW5kIHJl
bmRlciBpdCBvbiB0aGUgcGFnZS4KCkEgZ29vZCBwcmFjdGljZSBmb3Igc2Vy
dmluZyBzdGF0aWMgY29udGVudCBpcyB0byB1c2UgY2FjaGluZyBhbmQgcHV0
dGluZyB0aGVtIG9uIGEgQ0ROLiBXZSB1c2UgW0FtYXpvbiBTaW1wbGUgU3Rv
cmFnZSBTZXJ2aWNlIChTMyldKGh0dHBzOi8vYXdzLmFtYXpvbi5jb20vczMv
KSBmb3IgaG9zdGluZyBvdXIgc3RhdGljIHdlYnNpdGUgY29udGVudCBhbmQg
W0FtYXpvbiBDbG91ZEZyb250XShodHRwczovL2F3cy5hbWF6b24uY29tL2Ns
b3VkZnJvbnQvKSBhcyB0aGUgQ0ROLiBXZSBmaW5kIHRoYXQgaXQgaXMgYW4g
YWZmb3JkYWJsZSBhbmQgcmVsaWFibGUgc29sdXRpb24gdGhhdCBtZWV0cyBv
dXIgbmVlZHMuCgpTMyBwcm92aWRlcyB0aGUgb3B0aW9uIHRvICJVc2UgdGhp
cyBidWNrZXQgdG8gaG9zdCBhIHdlYnNpdGUiLCB3aGljaCBlc3NlbnRpYWxs
eSBkaXJlY3RzIHRoZSByZXF1ZXN0cyBmb3IgYWxsIHJvdXRlcyB0byB0aGUg
cm9vdCBvZiB0aGUgYnVja2V0LCB3aGljaCBtZWFucyB3ZSBkbyBub3QgbmVl
ZCBvdXIgb3duIHdlYiBzZXJ2ZXJzIHdpdGggc3BlY2lhbCByb3V0aW5nIGNv
bmZpZ3VyYXRpb25zLgoKQW4gZXhhbXBsZSBvZiBhIHdlYiBhcHAgdGhhdCB3
ZSBob3N0IG9uIFMzIGlzIFtIdWJdKGh0dHBzOi8vaHViLmdyYWIuY29tLyku
CgpPdGhlciB0aGFuIGhvc3RpbmcgdGhlIHdlYnNpdGUsIHdlIGFsc28gdXNl
IFMzIHRvIGhvc3QgdGhlIGJ1aWxkIGAudGFyYCBmaWxlcyBnZW5lcmF0ZWQg
ZnJvbSBlYWNoIHN1Y2Nlc3NmdWwgQ0kgYnVpbGQuCgojIyMjIFN0dWR5IExp
bmtzCgotIFtBbWF6b24gUzMgSG9tZXBhZ2VdKGh0dHBzOi8vYXdzLmFtYXpv
bi5jb20vczMvKQotIFtIb3N0aW5nIGEgU3RhdGljIFdlYnNpdGUgb24gQW1h
em9uIFMzXShodHRwczovL2RvY3MuYXdzLmFtYXpvbi5jb20vQW1hem9uUzMv
bGF0ZXN0L2Rldi9XZWJzaXRlSG9zdGluZy5odG1sKQoKIyMjIyBBbHRlcm5h
dGl2ZXMKCi0gW0dvb2dsZSBDbG91ZCBQbGF0Zm9ybV0oaHR0cHM6Ly9jbG91
ZC5nb29nbGUuY29tL3N0b3JhZ2UvZG9jcy9ob3N0aW5nLXN0YXRpYy13ZWJz
aXRlKQotIFtOb3ddKGh0dHBzOi8vemVpdC5jby9ub3cpCgojIyBEZXBsb3lt
ZW50CgpUaGUgbGFzdCBzdGVwIGluIHNoaXBwaW5nIHRoZSBwcm9kdWN0IHRv
IG91ciB1c2VycyBpcyBkZXBsb3ltZW50LiBXZSB1c2VkIFtBbnNpYmxlIFRv
d2VyXShodHRwczovL3d3dy5hbnNpYmxlLmNvbS90b3dlcikgd2hpY2ggaXMg
YSBwb3dlcmZ1bCBhdXRvbWF0aW9uIHNvZnR3YXJlIHRoYXQgZW5hYmxlcyB1
cyB0byBkZXBsb3kgb3VyIGJ1aWxkcyBlYXNpbHkuCgpBcyBtZW50aW9uZWQg
ZWFybGllciwgYWxsIG91ciBjb21taXRzLCB1cG9uIHN1Y2Nlc3NmdWwgYnVp
bGQsIGFyZSBiZWluZyB1cGxvYWRlZCB0byBhIGNlbnRyYWwgUzMgYnVja2V0
IGZvciBidWlsZHMuIFdlIGZvbGxvdyBzZW12ZXIgZm9yIG91ciByZWxlYXNl
cyBhbmQgaGF2ZSBjb21tYW5kcyB0byBhdXRvbWF0aWNhbGx5IGdlbmVyYXRl
IHJlbGVhc2Ugbm90ZXMgZm9yIHRoZSBsYXRlc3QgcmVsZWFzZS4gV2hlbiBp
dCBpcyB0aW1lIHRvIHJlbGVhc2UsIHdlIHJ1biBhIGNvbW1hbmQgdG8gdGFn
IHRoZSBsYXRlc3QgY29tbWl0IGFuZCBwdXNoIHRvIG91ciBjb2RlIGhvc3Rp
bmcgZW52aXJvbm1lbnQuIFRyYXZpcyB3aWxsIHJ1biB0aGUgQ0kgc3RlcHMg
b24gdGhhdCB0YWdnZWQgY29tbWl0IGFuZCB1cGxvYWQgYSB0YXIgZmlsZSAo
c3VjaCBhcyBgMS4wLjEudGFyYCkgd2l0aCB0aGUgdmVyc2lvbiB0byBvdXIg
UzMgYnVja2V0IGZvciBidWlsZHMuCgpPbiBUb3dlciwgd2Ugc2ltcGx5IGhh
dmUgdG8gc3BlY2lmeSB0aGUgbmFtZSBvZiB0aGUgYC50YXJgIHdlIHdhbnQg
dG8gZGVwbG95IHRvIG91ciBob3N0aW5nIGJ1Y2tldCwgYW5kIFRvd2VyIGRv
ZXMgdGhlIGZvbGxvd2luZzoKCjEuIERvd25sb2FkIHRoZSBkZXNpcmVkIGAu
dGFyYCBmaWxlIGZyb20gb3VyIGJ1aWxkcyBTMyBidWNrZXQuCjEuIEV4dHJh
Y3RzIHRoZSBjb250ZW50cyBhbmQgc3dhcCBpbiB0aGUgY29uZmlndXJhdGlv
biBmaWxlIGZvciBzcGVjaWZpZWQgZW52aXJvbm1lbnQuCjEuIFVwbG9hZCB0
aGUgY29udGVudHMgdG8gdGhlIGhvc3RpbmcgYnVja2V0LgoxLiBQb3N0IGEg
bm90aWZpY2F0aW9uIHRvIFNsYWNrIHRvIGluZm9ybSBhYm91dCB0aGUgc3Vj
Y2Vzc2Z1bCBkZXBsb3ltZW50LgoKVGhpcyB3aG9sZSBwcm9jZXNzIGlzIGRv
bmUgdW5kZXIgMzAgc2Vjb25kcyBhbmQgdXNpbmcgVG93ZXIgaGFzIG1hZGUg
ZGVwbG95bWVudHMgYW5kIHJvbGxiYWNrcyBlYXN5LiBJZiB3ZSByZWFsaXpl
IHRoYXQgYSBmYXVsdHkgZGVwbG95bWVudCBoYXMgb2NjdXJyZWQsIHdlIGNh
biBzaW1wbHkgZmluZCB0aGUgcHJldmlvdXMgc3RhYmxlIHRhZyBhbmQgZGVw
bG95IGl0LgoKIyMjIyBTdHVkeSBMaW5rcwoKLSBbQW5zaWJsZSBUb3dlciBI
b21lcGFnZV0oaHR0cHM6Ly93d3cuYW5zaWJsZS5jb20vdG93ZXIpCgojIyMj
IEFsdGVybmF0aXZlcwoKLSBbSmVua2luc10oaHR0cHM6Ly9qZW5raW5zLmlv
LykKCiMjIE1vbml0b3JpbmcKCkFmdGVyIHNoaXBwaW5nIHRoZSBwcm9kdWN0
LCB5b3Ugd291bGQgYWxzbyB3YW50IHRvIG1vbml0b3IgaXQgZm9yIGFueSBl
cnJvcnMuCgpBcGFydCBmcm9tIG5ldHdvcmsgbGV2ZWwgbW9uaXRvcmluZyBm
cm9tIG91ciBDRE4gc2VydmljZSBwcm92aWRlciBhbmQgaG9zdGluZyBwcm92
aWRlciwgd2UgdXNlIFtTZW50cnldKGh0dHBzOi8vc2VudHJ5LmlvLykgdG8g
bW9uaXRvciBlcnJvcnMgdGhhdCBvcmlnaW5hdGVzIGZyb20gdGhlIGFwcCBs
b2dpYy4KCiMjIyMgU3R1ZHkgTGlua3MKCi0gW1NlbnRyeSBIb21lcGFnZV0o
aHR0cHM6Ly9zZW50cnkuaW8vKQoKIyMjIFRoZSBKb3VybmV5IGhhcyBKdXN0
IEJlZ3VuCgpDb25ncmF0dWxhdGlvbnMgb24gbWFraW5nIGl0IHRoaXMgZmFy
ISBGcm9udCBlbmQgZGV2ZWxvcG1lbnQgdG9kYXkgaXMgW2hhcmRdKGh0dHBz
Oi8vaGFja2Vybm9vbi5jb20vaG93LWl0LWZlZWxzLXRvLWxlYXJuLWphdmFz
Y3JpcHQtaW4tMjAxNi1kM2E3MTdkZDU3N2YpLCBidXQgaXQgaXMgYWxzbyBt
b3JlIGludGVyZXN0aW5nIHRoYW4gYmVmb3JlLiBXaGF0IHdlIGhhdmUgY292
ZXJlZCBzbyBmYXIgd2lsbCBoZWxwIGFueSBuZXcgZW5naW5lZXIgdG8gR3Jh
YidzIHdlYiB0ZWFtIHRvIGdldCB1cCB0byBzcGVlZCB3aXRoIG91ciB0ZWNo
bm9sb2dpZXMgcHJldHR5IHF1aWNrbHkuIFRoZXJlIGFyZSBtYW55IG1vcmUg
dGhpbmdzIHRvIGJlIGxlYXJudCwgYnV0IGJ1aWxkaW5nIHVwIGEgc29saWQg
Zm91bmRhdGlvbiBpbiB0aGUgZXNzZW50aWFscyB3aWxsIGFpZCBpbiBsZWFy
bmluZyB0aGUgcmVzdCBvZiB0aGUgdGVjaG5vbG9naWVzLiBUaGlzIGhlbHBm
dWwgW2Zyb250IGVuZCB3ZWIgZGV2ZWxvcGVyIHJvYWRtYXBdKGh0dHBzOi8v
Z2l0aHViLmNvbS9rYW1yYW5haG1lZHNlL2RldmVsb3Blci1yb2FkbWFwIy1m
cm9udC1lbmQtcm9hZG1hcCkgc2hvd3MgdGhlIGFsdGVybmF0aXZlIHRlY2hu
b2xvZ2llcyBhdmFpbGFibGUgZm9yIGVhY2ggYXNwZWN0LgoKV2UgbWFkZSBv
dXIgdGVjaG5pY2FsIGRlY2lzaW9ucyBiYXNlZCBvbiB3aGF0IHdhcyBpbXBv
cnRhbnQgdG8gYSByYXBpZGx5IGdyb3dpbmcgR3JhYiBFbmdpbmVlcmluZyB0
ZWFtIC0gbWFpbnRhaW5hYmlsaXR5IGFuZCBzdGFiaWxpdHkgb2YgdGhlIGNv
ZGUgYmFzZS4gVGhlc2UgZGVjaXNpb25zIG1heSBvciBtYXkgbm90IGFwcGx5
IHRvIHNtYWxsZXIgdGVhbXMgYW5kIHByb2plY3RzLiBEbyBldmFsdWF0ZSB3
aGF0IHdvcmtzIGJlc3QgZm9yIHlvdSBhbmQgeW91ciBjb21wYW55LgoKQXMg
dGhlIGZyb250IGVuZCBlY29zeXN0ZW0gZ3Jvd3MsIHdlIGFyZSBhY3RpdmVs
eSBleHBsb3JpbmcsIGV4cGVyaW1lbnRpbmcgYW5kIGV2YWx1YXRpbmcgaG93
IG5ldyB0ZWNobm9sb2dpZXMgY2FuIG1ha2UgdXMgYSBtb3JlIGVmZmljaWVu
dCB0ZWFtIGFuZCBpbXByb3ZlIG91ciBwcm9kdWN0aXZpdHkuIFdlIGhvcGUg
dGhhdCB0aGlzIHBvc3QgaGFzIGdpdmVuIHlvdSBpbnNpZ2h0cyBpbnRvIHRo
ZSBmcm9udCBlbmQgdGVjaG5vbG9naWVzIHdlIHVzZSBhdCBHcmFiLiBJZiB3
aGF0IHdlIGFyZSBkb2luZyBpbnRlcmVzdHMgeW91LCBbd2UgYXJlIGhpcmlu
Z10oaHR0cHM6Ly9ncmFiLmNhcmVlcnMpIQoKKk1hbnkgdGhhbmtzIHRvIFtK
b2VsIExvd10oaHR0cHM6Ly9naXRodWIuY29tL2xvd2pvZWwpLCBbTGkgS2Fp
XShodHRwczovL2dpdGh1Yi5jb20vbGkta2FpKSBhbmQgW1RhbiBXZWkgU2Vu
Z10oaHR0cHM6Ly9naXRodWIuY29tL3htaW5nMTMpIHdobyByZXZpZXdlZCBk
cmFmdHMgb2YgdGhpcyBhcnRpY2xlLioKCiMjIyBNb3JlIFJlYWRpbmcKCioq
R2VuZXJhbCoqCgotIFtTdGF0ZSBvZiB0aGUgSmF2YVNjcmlwdCBMYW5kc2Nh
cGU6IEEgTWFwIGZvciBOZXdjb21lcnNdKGh0dHA6Ly93d3cuaW5mb3EuY29t
L2FydGljbGVzL3N0YXRlLW9mLWphdmFzY3JpcHQtMjAxNikKLSBbVGhlIEhp
dGNoaGlrZXIncyBndWlkZSB0byB0aGUgbW9kZXJuIGZyb250IGVuZCBkZXZl
bG9wbWVudCB3b3JrZmxvd10oaHR0cDovL21hcmNvYm90dG8uY29tL3RoZS1o
aXRjaGhpa2Vycy1ndWlkZS10by10aGUtbW9kZXJuLWZyb250LWVuZC1kZXZl
bG9wbWVudC13b3JrZmxvdy8pCi0gW0hvdyBpdCBmZWVscyB0byBsZWFybiBK
YXZhU2NyaXB0IGluIDIwMTZdKGh0dHBzOi8vaGFja2Vybm9vbi5jb20vaG93
LWl0LWZlZWxzLXRvLWxlYXJuLWphdmFzY3JpcHQtaW4tMjAxNi1kM2E3MTdk
ZDU3N2YjLnRteThnemd2cCkKLSBbUm9hZG1hcCB0byBiZWNvbWluZyBhIHdl
YiBkZXZlbG9wZXIgaW4gMjAxN10oaHR0cHM6Ly9naXRodWIuY29tL2thbXJh
bmFobWVkc2UvZGV2ZWxvcGVyLXJvYWRtYXAjLWZyb250ZW5kLXJvYWRtYXAp
Ci0gW01vZGVybiBKYXZhU2NyaXB0IGZvciBBbmNpZW50IFdlYiBEZXZlbG9w
ZXJzXShodHRwczovL3RyYWNrY2hhbmdlcy5wb3N0bGlnaHQuY29tL21vZGVy
bi1qYXZhc2NyaXB0LWZvci1hbmNpZW50LXdlYi1kZXZlbG9wZXJzLTU4ZTdj
YWUwNTBmOSkKCioqT3RoZXIgU3R1ZHkgUGxhbnMqKgoKLSBbQSBTdHVkeSBQ
bGFuIFRvIEN1cmUgSmF2YVNjcmlwdCBGYXRpZ3VlXShodHRwczovL21lZGl1
bS5mcmVlY29kZWNhbXAuY29tL2Etc3R1ZHktcGxhbi10by1jdXJlLWphdmFz
Y3JpcHQtZmF0aWd1ZS04YWQzYTU0ZjJlYjEjLmMwd25ycmN3ZCkKLSBbSlMg
U3RhY2sgZnJvbSBTY3JhdGNoXShodHRwczovL2dpdGh1Yi5jb20vdmVyZWtp
YS9qcy1zdGFjay1mcm9tLXNjcmF0Y2gpCi0gW0EgQmVnaW5uZXLigJlzIEph
dmFTY3JpcHQgU3R1ZHkgUGxhbl0oaHR0cHM6Ly9tZWRpdW0uZnJlZWNvZGVj
YW1wLmNvbS9hLWJlZ2lubmVycy1qYXZhc2NyaXB0LXN0dWR5LXBsYW4tMjdm
MWQ2OThlYTVlIy5iZ2Y0OXhubzIpCgojIyMgRm9vdG5vdGVzCgo8cCBpZD0i
Zm4xIj4xLiBUaGlzIGNhbiBiZSBzb2x2ZWQgdmlhIDxhIGhyZWY9Imh0dHBz
Oi8vd2VicGFjay5qcy5vcmcvZ3VpZGVzL2NvZGUtc3BsaXR0aW5nLyI+d2Vi
cGFjayBjb2RlIHNwbGl0dGluZzwvYT4uIDxhIGhyZWY9IiNyZWYxIiB0aXRs
ZT0iSnVtcCBiYWNrIHRvIGZvb3Rub3RlIDEgaW4gdGhlIHRleHQuIj7ihqk8
L2E+PC9wPgoKPHAgaWQ9ImZuMiI+Mi4gPGEgaHJlZj0iaHR0cHM6Ly9tZWRp
dW0uY29tL0BtamFja3Nvbi91bml2ZXJzYWwtamF2YXNjcmlwdC00NzYxMDUx
YjdhZTkiPlVuaXZlcnNhbCBKUzwvYT4gdG8gdGhlIHJlc2N1ZSEgPGEgaHJl
Zj0iI3JlZjIiIHRpdGxlPSJKdW1wIGJhY2sgdG8gZm9vdG5vdGUgMSBpbiB0
aGUgdGV4dC4iPuKGqTwvYT48L3A+Cg==
",,12646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
