name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'PureLayout',21109196,"b'The ultimate API for iOS & OS X Auto Layout \xe2\x80\x94 impressively simple, immensely powerful. Objective-C and Swift compatible.'",b'Objective-C',46,7338,,235,False,b'https://api.github.com/repos/PureLayout/PureLayout/forks',"IyBbIVtQdXJlTGF5b3V0XShodHRwczovL2dpdGh1Yi5jb20vUHVyZUxheW91
dC9QdXJlTGF5b3V0L2Jsb2IvbWFzdGVyL0ltYWdlcy9QdXJlTGF5b3V0LnBu
Zz9yYXc9dHJ1ZSldKCMpClshW0J1aWxkIFN0YXR1c10oaHR0cHM6Ly90cmF2
aXMtY2kub3JnL1B1cmVMYXlvdXQvUHVyZUxheW91dC5zdmc/YnJhbmNoPW1h
c3RlcildKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9QdXJlTGF5b3V0L1B1cmVM
YXlvdXQpIFshW1ZlcnNpb25dKGh0dHA6Ly9pbWcuc2hpZWxkcy5pby9jb2Nv
YXBvZHMvdi9QdXJlTGF5b3V0LnN2Zz9zdHlsZT1mbGF0KV0oaHR0cDovL2Nv
Y29hcG9kcy5vcmcvcG9kcy9QdXJlTGF5b3V0KSBbIVtQbGF0Zm9ybV0oaHR0
cDovL2ltZy5zaGllbGRzLmlvL2NvY29hcG9kcy9wL1B1cmVMYXlvdXQuc3Zn
P3N0eWxlPWZsYXQpXShodHRwOi8vY29jb2Fwb2RzLm9yZy9wb2RzL1B1cmVM
YXlvdXQpIFshW0xpY2Vuc2VdKGh0dHA6Ly9pbWcuc2hpZWxkcy5pby9jb2Nv
YXBvZHMvbC9QdXJlTGF5b3V0LnN2Zz9zdHlsZT1mbGF0KV0oTElDRU5TRSkK
ClRoZSB1bHRpbWF0ZSBBUEkgZm9yIGlPUyAmIE9TIFggQXV0byBMYXlvdXQg
4oCUIGltcHJlc3NpdmVseSBzaW1wbGUsIGltbWVuc2VseSBwb3dlcmZ1bC4g
UHVyZUxheW91dCBleHRlbmRzIGBVSVZpZXdgL2BOU1ZpZXdgLCBgTlNBcnJh
eWAsIGFuZCBgTlNMYXlvdXRDb25zdHJhaW50YCB3aXRoIGEgY29tcHJlaGVu
c2l2ZSBBdXRvIExheW91dCBBUEkgdGhhdCBpcyBtb2RlbGVkIGFmdGVyIEFw
cGxlJ3Mgb3duIGZyYW1ld29ya3MuIFB1cmVMYXlvdXQgaXMgYSBjcm9zcy1w
bGF0Zm9ybSBPYmplY3RpdmUtQyBsaWJyYXJ5IHRoYXQgd29ya3MgKGFuZCBs
b29rcyEpIGdyZWF0IGluIFN3aWZ0LiBJdCBpcyBmdWxseSBiYWNrd2FyZHMt
Y29tcGF0aWJsZSB3aXRoIGFsbCB2ZXJzaW9ucyBvZiBpT1MgYW5kIE9TIFgg
dGhhdCBzdXBwb3J0IEF1dG8gTGF5b3V0LgoKV3JpdGluZyBBdXRvIExheW91
dCBjb2RlIGZyb20gc2NyYXRjaCBpc24ndCBlYXN5LiBQdXJlTGF5b3V0IHBy
b3ZpZGVzIGEgZnVsbHkgY2FwYWJsZSBhbmQgZGV2ZWxvcGVyLWZyaWVuZGx5
IGludGVyZmFjZSBmb3IgQXV0byBMYXlvdXQuIEl0IGlzIGRlc2lnbmVkIGZv
ciBjbGFyaXR5IGFuZCBzaW1wbGljaXR5LCBhbmQgdGFrZXMgaW5zcGlyYXRp
b24gZnJvbSB0aGUgQXV0b0xheW91dCBVSSBvcHRpb25zIGF2YWlsYWJsZSBp
biBJbnRlcmZhY2UgQnVpbGRlciB3aGlsZSBkZWxpdmVyaW5nIGZhciBtb3Jl
IGZsZXhpYmlsaXR5LiBUaGUgQVBJIGlzIGFsc28gaGlnaGx5IGVmZmljaWVu
dCwgYXMgaXQgYWRkcyBvbmx5IGEgdGhpbiBsYXllciBvZiB0aGlyZCBwYXJ0
eSBjb2RlIGFuZCBpcyBlbmdpbmVlcmVkIGZvciBtYXhpbXVtIHBlcmZvcm1h
bmNlLgoKIyMjIFRhYmxlIG9mIENvbnRlbnRzCiAxLiBbU2V0dXBdKCNzZXR1
cCkKIDEuIFtBUEkgQ2hlYXQgU2hlZXRdKCNhcGktY2hlYXQtc2hlZXQpCiAx
LiBbVXNhZ2VdKCN1c2FnZSkKICAgKiBbU2FtcGxlIENvZGVdKCNzYW1wbGUt
Y29kZS1zd2lmdCkKICAgKiBbRXhhbXBsZSBBcHBzXSgjZXhhbXBsZS1hcHBz
KQogMS4gW1B1cmVMYXlvdXQgdnMuIHRoZSByZXN0XSgjcHVyZWxheW91dC12
cy10aGUtcmVzdCkKIDEuIFtQcm9ibGVtcywgU3VnZ2VzdGlvbnMsIFB1bGwg
UmVxdWVzdHM/XSgjcHJvYmxlbXMtc3VnZ2VzdGlvbnMtcHVsbC1yZXF1ZXN0
cykKCiMjIFNldHVwCiMjIyBDb21wYXRpYmlsaXR5ClRoZSBjdXJyZW50IHJl
bGVhc2Ugb2YgUHVyZUxheW91dCBzdXBwb3J0cyBhbGwgdmVyc2lvbnMgb2Yg
aU9TIGFuZCBPUyBYIHNpbmNlIHRoZSBpbnRyb2R1Y3Rpb24gb2YgQXV0byBM
YXlvdXQgb24gZWFjaCBwbGF0Zm9ybSwgaW4gYm90aCBTd2lmdCBhbmQgT2Jq
ZWN0aXZlLUMsIHdpdGggYSBzaW5nbGUgY29kZWJhc2UhCgoqIFhjb2RlCiAg
KiBMYW5ndWFnZSBTdXBwb3J0OiAqKlN3aWZ0KiogKihhbnkgdmVyc2lvbikq
LCAqKk9iamVjdGl2ZS1DKioKICAqIEZ1bGx5IENvbXBhdGlibGUgV2l0aDog
KipYY29kZSA3LjAqKgogICogTWluaW11bSBTdXBwb3J0ZWQgVmVyc2lvbjog
KipYY29kZSA1LjAqKgoqIGlPUwogICogRnVsbHkgQ29tcGF0aWJsZSBXaXRo
OiAqKmlPUyA5LjAqKgogICogTWluaW11bSBEZXBsb3ltZW50IFRhcmdldDog
KippT1MgNi4wKioKKiBPUyBYCiAgKiBGdWxseSBDb21wYXRpYmxlIFdpdGg6
ICoqT1MgWCAxMC4xMSoqCiAgKiBNaW5pbXVtIERlcGxveW1lbnQgVGFyZ2V0
OiAqKk9TIFggMTAuNyoqCgojIyMgVXNpbmcgW0NvY29hUG9kc10oaHR0cDov
L2NvY29hcG9kcy5vcmcpCjEuIEFkZCB0aGUgcG9kIGBQdXJlTGF5b3V0YCB0
byB5b3VyIFtQb2RmaWxlXShodHRwOi8vZ3VpZGVzLmNvY29hcG9kcy5vcmcv
dXNpbmcvdGhlLXBvZGZpbGUuaHRtbCkuCgogIGBgYHJ1YnkKICBwb2QgJ1B1
cmVMYXlvdXQnCiAgYGBgCgoxLiBSdW4gYHBvZCBpbnN0YWxsYCBmcm9tIFRl
cm1pbmFsLCB0aGVuIG9wZW4geW91ciBhcHAncyBgLnhjd29ya3NwYWNlYCBm
aWxlIHRvIGxhdW5jaCBYY29kZS4KMS4gSW1wb3J0IHRoZSBgUHVyZUxheW91
dC5oYCB1bWJyZWxsYSBoZWFkZXIuCiAgKiBXaXRoIGB1c2VfZnJhbWV3b3Jr
cyFgIGluIHlvdXIgUG9kZmlsZQogICAgKiBTd2lmdDogYGltcG9ydCBQdXJl
TGF5b3V0YAogICAgKiBPYmplY3RpdmUtQzogYCNpbXBvcnQgPFB1cmVMYXlv
dXQvUHVyZUxheW91dC5oPmAgKG9yIHdpdGggTW9kdWxlcyBlbmFibGVkOiBg
QGltcG9ydCBQdXJlTGF5b3V0O2ApCiAgKiBXaXRob3V0IGB1c2VfZnJhbWV3
b3JrcyFgIGluIHlvdXIgUG9kZmlsZQogICAgKiBTd2lmdDogQWRkIGAjaW1w
b3J0ICJQdXJlTGF5b3V0LmgiYCB0byB5b3VyIGJyaWRnaW5nIGhlYWRlci4K
ICAgICogT2JqZWN0aXZlLUM6IGAjaW1wb3J0ICJQdXJlTGF5b3V0LmgiYAoK
VGhhdCdzIGl0IC0gbm93IGdvIHdyaXRlIHNvbWUgYmVhdXRpZnVsIEF1dG8g
TGF5b3V0IGNvZGUhCgojIyMgVXNpbmcgW0NhcnRoYWdlXShodHRwczovL2dp
dGh1Yi5jb20vQ2FydGhhZ2UvQ2FydGhhZ2UpCjEuIEFkZCB0aGUgYFB1cmVM
YXlvdXQvUHVyZUxheW91dGAgcHJvamVjdCB0byB5b3VyIFtDYXJ0ZmlsZV0o
aHR0cHM6Ly9naXRodWIuY29tL0NhcnRoYWdlL0NhcnRoYWdlL2Jsb2IvbWFz
dGVyL0RvY3VtZW50YXRpb24vQXJ0aWZhY3RzLm1kI2NhcnRmaWxlKS4KCiAg
YGBgb2dkbAogIGdpdGh1YiAiUHVyZUxheW91dC9QdXJlTGF5b3V0IgogIGBg
YAoKMS4gUnVuIGBjYXJ0aGFnZSB1cGRhdGVgLCB0aGVuIGZvbGxvdyB0aGUg
W2FkZGl0aW9uYWwgc3RlcHMgcmVxdWlyZWRdKGh0dHBzOi8vZ2l0aHViLmNv
bS9DYXJ0aGFnZS9DYXJ0aGFnZSNhZGRpbmctZnJhbWV3b3Jrcy10by1hbi1h
cHBsaWNhdGlvbikgdG8gYWRkIHRoZSBmcmFtZXdvcmsgaW50byB5b3VyIHBy
b2plY3QuCjEuIEltcG9ydCB0aGUgUHVyZUxheW91dCBmcmFtZXdvcmsvbW9k
dWxlLgogICogU3dpZnQ6IGBpbXBvcnQgUHVyZUxheW91dGAKICAqIE9iamVj
dGl2ZS1DOiBgI2ltcG9ydCA8UHVyZUxheW91dC9QdXJlTGF5b3V0Lmg+YCAo
b3Igd2l0aCBNb2R1bGVzIGVuYWJsZWQ6IGBAaW1wb3J0IFB1cmVMYXlvdXQ7
YCkKClRoYXQncyBpdCAtIG5vdyBnbyB3cml0ZSBzb21lIGJlYXV0aWZ1bCBB
dXRvIExheW91dCBjb2RlIQoKIyMjIE1hbnVhbGx5IGZyb20gR2l0SHViCjEu
IERvd25sb2FkIHRoZSBzb3VyY2UgZmlsZXMgaW4gdGhlIFtQdXJlTGF5b3V0
IHN1YmRpcmVjdG9yeV0oUHVyZUxheW91dC9QdXJlTGF5b3V0KS4KMS4gQWRk
IHRoZSBzb3VyY2UgZmlsZXMgdG8geW91ciBYY29kZSBwcm9qZWN0LgoxLiBJ
bXBvcnQgdGhlIGBQdXJlTGF5b3V0LmhgIGhlYWRlci4KICAqIFN3aWZ0OiBB
ZGQgYCNpbXBvcnQgIlB1cmVMYXlvdXQuaCJgIHRvIHlvdXIgYnJpZGdpbmcg
aGVhZGVyLgogICogT2JqZWN0aXZlLUM6IGAjaW1wb3J0ICJQdXJlTGF5b3V0
LmgiYAoKVGhhdCdzIGl0IC0gbm93IGdvIHdyaXRlIHNvbWUgYmVhdXRpZnVs
IEF1dG8gTGF5b3V0IGNvZGUhCgojIyMgQXBwIEV4dGVuc2lvbnMKVG8gdXNl
IFB1cmVMYXlvdXQgaW4gYW4gQXBwIEV4dGVuc2lvbiwgeW91IG5lZWQgdG8g
ZG8gYSBiaXQgb2YgZXh0cmEgY29uZmlndXJhdGlvbiB0byBwcmV2ZW50IHVz
YWdlIG9mIHVuYXZhaWxhYmxlIEFQSXMuIFtDbGljayBoZXJlXShodHRwczov
L2dpdGh1Yi5jb20vUHVyZUxheW91dC9QdXJlTGF5b3V0L3dpa2kvQXBwLUV4
dGVuc2lvbnMpIGZvciBtb3JlIGluZm8uCgojIyMgUmVsZWFzZXMKUmVsZWFz
ZXMgYXJlIHRhZ2dlZCBpbiB0aGUgZ2l0IGNvbW1pdCBoaXN0b3J5IHVzaW5n
IFtzZW1hbnRpYyB2ZXJzaW9uaW5nXShodHRwOi8vc2VtdmVyLm9yZykuIENo
ZWNrIG91dCB0aGUgW3JlbGVhc2VzIGFuZCByZWxlYXNlIG5vdGVzXShodHRw
czovL2dpdGh1Yi5jb20vUHVyZUxheW91dC9QdXJlTGF5b3V0L3JlbGVhc2Vz
KSBmb3IgZWFjaCB2ZXJzaW9uLgoKIyMgQVBJIENoZWF0IFNoZWV0ClRoaXMg
aXMganVzdCBhIGhhbmR5IG92ZXJ2aWV3IG9mIHRoZSBjb3JlIEFQSSBtZXRo
b2RzLiBFeHBsb3JlIHRoZSBbaGVhZGVyIGZpbGVzXShQdXJlTGF5b3V0L1B1
cmVMYXlvdXQpIGZvciB0aGUgZnVsbCBBUEksIGFuZCBmaW5kIHRoZSBjb21w
bGV0ZSBkb2N1bWVudGF0aW9uIGFib3ZlIHRoZSBpbXBsZW1lbnRhdGlvbiBv
ZiBlYWNoIG1ldGhvZCBpbiB0aGUgY29ycmVzcG9uZGluZyAubSBmaWxlLiBB
IGNvdXBsZSBvZiBub3RlczoKCiogQWxsIG9mIHRoZSBwdWJsaWMgQVBJIG1l
dGhvZHMgYXJlIG5hbWVzcGFjZWQgd2l0aCB0aGUgcHJlZml4IGBhdXRvLi4u
YCwgd2hpY2ggYWxzbyBtYWtlcyBpdCBlYXN5IGZvciBYY29kZSB0byBhdXRv
Y29tcGxldGUgYXMgeW91IHR5cGUuCiogTWV0aG9kcyB0aGF0IGNyZWF0ZSBj
b25zdHJhaW50cyBhbHNvIGF1dG9tYXRpY2FsbHkgaW5zdGFsbCAoYWN0aXZh
dGUpIHRoZSBjb25zdHJhaW50KHMpLCB0aGVuIHJldHVybiB0aGUgbmV3IGNv
bnN0cmFpbnQocykgZm9yIHlvdSB0byBvcHRpb25hbGx5IHN0b3JlIGZvciBs
YXRlciBhZGp1c3RtZW50IG9yIHJlbW92YWwuCiogTWFueSBtZXRob2RzIGJl
bG93IGFsc28gaGF2ZSBhIHZhcmlhbnQgd2hpY2ggaW5jbHVkZXMgYSBgcmVs
YXRpb246YCBwYXJhbWV0ZXIgdG8gbWFrZSB0aGUgY29uc3RyYWludCBhbiBp
bmVxdWFsaXR5LgoKIyMjIEF0dHJpYnV0ZXMKClB1cmVMYXlvdXQgZGVmaW5l
cyB2aWV3IGF0dHJpYnV0ZXMgdGhhdCBhcmUgdXNlZCB0byBjcmVhdGUgYXV0
byBsYXlvdXQgY29uc3RyYWludHMuIEhlcmUgaXMgYW4gW2lsbHVzdHJhdGlv
biBvZiB0aGUgbW9zdCBjb21tb24gYXR0cmlidXRlc10oSW1hZ2VzL1B1cmVM
YXlvdXQtQ29tbW9uQXR0cmlidXRlcy5wbmcpLgoKVGhlcmUgYXJlIDUgc3Bl
Y2lmaWMgYXR0cmlidXRlIHR5cGVzLCB3aGljaCBhcmUgdXNlZCB0aHJvdWdo
b3V0IG1vc3Qgb2YgdGhlIEFQSToKCiogYEFMRWRnZWAKKiBgQUxEaW1lbnNp
b25gCiogYEFMQXhpc2AKKiBgQUxNYXJnaW5gICphdmFpbGFibGUgaW4gaU9T
IDguMCBhbmQgaGlnaGVyIG9ubHkqCiogYEFMTWFyZ2luQXhpc2AgKmF2YWls
YWJsZSBpbiBpT1MgOC4wIGFuZCBoaWdoZXIgb25seSoKCkFkZGl0aW9uYWxs
eSwgdGhlcmUgaXMgb25lIGdlbmVyaWMgYXR0cmlidXRlIHR5cGUsIGBBTEF0
dHJpYnV0ZWAsIHdoaWNoIGlzIGVmZmVjdGl2ZWx5IGEgdW5pb24gb2YgYWxs
IHRoZSBzcGVjaWZpYyB0eXBlcy4gWW91IGNhbiB0aGluayBvZiB0aGlzIGFz
IHRoZSAic3VwZXJ0eXBlIiBvZiBhbGwgb2YgdGhlIHNwZWNpZmljIGF0dHJp
YnV0ZSB0eXBlcywgd2hpY2ggbWVhbnMgdGhhdCBpdCBpcyBhbHdheXMgc2Fm
ZSB0byBjYXN0IGEgc3BlY2lmaWMgdHlwZSB0byB0aGUgZ2VuZXJpYyBgQUxB
dHRyaWJ1dGVgIHR5cGUuIChOb3RlIHRoYXQgdGhlIHJldmVyc2UgaXMgbm90
IHRydWUgLS0gY2FzdGluZyBhIGdlbmVyaWMgQUxBdHRyaWJ1dGUgdG8gYSBz
cGVjaWZpYyBhdHRyaWJ1dGUgdHlwZSBpcyB1bnNhZmUhKQoKIyMjIFtgVUlW
aWV3YC9gTlNWaWV3YF0oUHVyZUxheW91dC9QdXJlTGF5b3V0L0FMVmlldyUy
QlB1cmVMYXlvdXQuaCkKYGBgCi0gYXV0b1NldENvbnRlbnQoQ29tcHJlc3Np
b25SZXNpc3RhbmNlfEh1Z2dpbmcpUHJpb3JpdHlGb3JBeGlzOgotIGF1dG9D
ZW50ZXJJblN1cGVydmlldyhNYXJnaW5zKSAvLyBNYXJnaW5zIHZhcmlhbnQg
aU9TIDguMCsgb25seQotIGF1dG9BbGlnbkF4aXNUb1N1cGVydmlldyhNYXJn
aW4pQXhpczogLy8gTWFyZ2luIHZhcmlhbnQgaU9TIDguMCsgb25seQotIGF1
dG9QaW5FZGdlVG9TdXBlcnZpZXcoRWRnZTp8TWFyZ2luOikod2l0aEluc2V0
OikgLy8gTWFyZ2luIHZhcmlhbnQgaU9TIDguMCsgb25seQotIGF1dG9QaW5F
ZGdlc1RvU3VwZXJ2aWV3KEVkZ2VzfE1hcmdpbnMpKFdpdGhJbnNldHM6KShl
eGNsdWRpbmdFZGdlOikgLy8gTWFyZ2lucyB2YXJpYW50IGlPUyA4LjArIG9u
bHkKLSBhdXRvUGluRWRnZTp0b0VkZ2U6b2ZWaWV3Oih3aXRoT2Zmc2V0OikK
LSBhdXRvQWxpZ25BeGlzOnRvU2FtZUF4aXNPZlZpZXc6KHdpdGhPZmZzZXQ6
fHdpdGhNdWx0aXBsaWVyOikKLSBhdXRvTWF0Y2hEaW1lbnNpb246dG9EaW1l
bnNpb246b2ZWaWV3Oih3aXRoT2Zmc2V0Onx3aXRoTXVsdGlwbGllcjopCi0g
YXV0b1NldERpbWVuc2lvbihzKVRvU2l6ZToKLSBhdXRvQ29uc3RyYWluQXR0
cmlidXRlOnRvQXR0cmlidXRlOm9mVmlldzood2l0aE9mZnNldDp8d2l0aE11
bHRpcGxpZXI6KQotIGF1dG9QaW5UbyhUb3B8Qm90dG9tKUxheW91dEd1aWRl
T2ZWaWV3Q29udHJvbGxlcjp3aXRoSW5zZXQ6IC8vIGlPUyBvbmx5Ci0gYXV0
b1BpbkVkZ2VUb1N1cGVydmlld1NhZmVBcmVhOiAvLyBpT1MgMTEuMCsgb25s
eQotIGF1dG9QaW5FZGdlVG9TdXBlcnZpZXdTYWZlQXJlYTp3aXRoSW5zZXQ6
IC8vIGlPUyAxMS4wKyBvbmx5CmBgYAoKIyMjIFtgTlNBcnJheWBdKFB1cmVM
YXlvdXQvUHVyZUxheW91dC9OU0FycmF5JTJCUHVyZUxheW91dC5oKQpgYGAK
Ly8gQXJyYXlzIG9mIENvbnN0cmFpbnRzCi0gYXV0b0luc3RhbGxDb25zdHJh
aW50cwotIGF1dG9SZW1vdmVDb25zdHJhaW50cwotIGF1dG9JZGVudGlmeUNv
bnN0cmFpbnRzOiAvLyBpT1MgNy4wKywgT1MgWCAxMC45KyBvbmx5CgovLyBB
cnJheXMgb2YgVmlld3MKLSBhdXRvQWxpZ25WaWV3c1RvRWRnZToKLSBhdXRv
QWxpZ25WaWV3c1RvQXhpczoKLSBhdXRvTWF0Y2hWaWV3c0RpbWVuc2lvbjoK
LSBhdXRvU2V0Vmlld3NEaW1lbnNpb246dG9TaXplOgotIGF1dG9TZXRWaWV3
c0RpbWVuc2lvbnNUb1NpemU6Ci0gYXV0b0Rpc3RyaWJ1dGVWaWV3c0Fsb25n
QXhpczphbGlnbmVkVG86d2l0aEZpeGVkU3BhY2luZzooaW5zZXRTcGFjaW5n
OikobWF0Y2hlZFNpemVzOikKLSBhdXRvRGlzdHJpYnV0ZVZpZXdzQWxvbmdB
eGlzOmFsaWduZWRUbzp3aXRoRml4ZWRTaXplOihpbnNldFNwYWNpbmc6KQpg
YGAKCiMjIyBbYE5TTGF5b3V0Q29uc3RyYWludGBdKFB1cmVMYXlvdXQvUHVy
ZUxheW91dC9OU0xheW91dENvbnN0cmFpbnQlMkJQdXJlTGF5b3V0LmgpCmBg
YAorIGF1dG9DcmVhdGVBbmRJbnN0YWxsQ29uc3RyYWludHM6CisgYXV0b0Ny
ZWF0ZUNvbnN0cmFpbnRzV2l0aG91dEluc3RhbGxpbmc6CisgYXV0b1NldFBy
aW9yaXR5OmZvckNvbnN0cmFpbnRzOgorIGF1dG9TZXRJZGVudGlmaWVyOmZv
ckNvbnN0cmFpbnRzOiAvLyBpT1MgNy4wKywgT1MgWCAxMC45KyBvbmx5Ci0g
YXV0b0lkZW50aWZ5OiAvLyBpT1MgNy4wKywgT1MgWCAxMC45KyBvbmx5Ci0g
YXV0b0luc3RhbGwKLSBhdXRvUmVtb3ZlCmBgYAoKIyMgVXNhZ2UKIyMjIFNh
bXBsZSBDb2RlIChTd2lmdCkKUHVyZUxheW91dCBkcmFtYXRpY2FsbHkgc2lt
cGxpZmllcyB3cml0aW5nIEF1dG8gTGF5b3V0IGNvZGUuIExldCdzIHRha2Ug
YSBxdWljayBsb29rIGF0IHNvbWUgZXhhbXBsZXMsIHVzaW5nIFB1cmVMYXlv
dXQgZnJvbSBTd2lmdC4KCkluaXRpYWxpemUgdGhlIHZpZXcgdXNpbmcgUHVy
ZUxheW91dCBpbml0aWFsaXplcjoKCmBgYHN3aWZ0CmxldCB2aWV3MSA9IFVJ
Vmlldyhmb3JBdXRvTGF5b3V0OiAoKSkKYGBgCgpJZiB5b3UgbmVlZCB0byB1
c2UgYSBkaWZmZXJlbnQgaW5pdGlhbGl6ZXIgKGUuZy4gaW4gYFVJVmlld2Ag
c3ViY2xhc3MpLCB5b3UgY2FuIGFsc28gdXNlIGBjb25maWd1cmVGb3JBdXRv
TGF5b3V0YDoKCmBgYAp2aWV3MS5jb25maWd1cmVGb3JBdXRvTGF5b3V0KCkg
Ly8gYWx0ZXJuYXRpdmUgdG8gVUlWaWV3LmluaXQoZm9yQXV0b0xheW91dDog
KCkpCmBgYAoKSGVyZSdzIGEgY29uc3RyYWludCBiZXR3ZWVuIHR3byB2aWV3
cyBjcmVhdGVkIChhbmQgYXV0b21hdGljYWxseSBhY3RpdmF0ZWQpIHVzaW5n
IFB1cmVMYXlvdXQ6CgpgYGBzd2lmdAp2aWV3MS5hdXRvUGluRWRnZSgudG9w
LCB0b0VkZ2U6IC5ib3R0b20sIG9mVmlldzogdmlldzIpCmBgYAoKV2l0aG91
dCBQdXJlTGF5b3V0LCBoZXJlJ3MgdGhlIGVxdWl2YWxlbnQgY29kZSB5b3Un
ZCBoYXZlIHRvIHdyaXRlIHVzaW5nIEFwcGxlJ3MgRm91bmRhdGlvbiBBUEkg
ZGlyZWN0bHk6CgpgYGBzd2lmdApOU0xheW91dENvbnN0cmFpbnQoaXRlbTog
dmlldzEsIGF0dHJpYnV0ZTogLnRvcCwgcmVsYXRlZEJ5OiAuZXF1YWwsIHRv
SXRlbTogdmlldzIsIGF0dHJpYnV0ZTogLmJvdHRvbSwgbXVsdGlwbGllcjog
MS4wLCBjb25zdGFudDogMC4wKS5hY3RpdmUgPSB0cnVlCmBgYAoKTWFueSBB
UElzIG9mIFB1cmVMYXlvdXQgY3JlYXRlIG11bHRpcGxlIGNvbnN0cmFpbnRz
IGZvciB5b3UgdW5kZXIgdGhlIGhvb2QsIGxldHRpbmcgeW91IHdyaXRlIGhp
Z2hseSByZWFkYWJsZSBsYXlvdXQgY29kZToKCmBgYHN3aWZ0Ci8vIDIgY29u
c3RyYWludHMgY3JlYXRlZCAmIGFjdGl2YXRlZCBpbiBvbmUgbGluZSEKbG9n
b0ltYWdlVmlldy5hdXRvQ2VudGVySW5TdXBlcnZpZXcoKQoKLy8gNCBjb25z
dHJhaW50cyBjcmVhdGVkICYgYWN0aXZhdGVkIGluIG9uZSBsaW5lIQp0ZXh0
Q29udGVudFZpZXcuYXV0b1BpbkVkZ2VzVG9TdXBlcnZpZXdFZGdlcyh3aXRo
IGluc2V0czogVUlFZGdlSW5zZXRzKHRvcDogMjAuMCwgbGVmdDogNS4wLCBi
b3R0b206IDEwLjAsIHJpZ2h0OiA1LjApKQpgYGAKClB1cmVMYXlvdXQgYWx3
YXlzIHJldHVybnMgdGhlIGNvbnN0cmFpbnRzIGl0IGNyZWF0ZXMgc28geW91
IGhhdmUgZnVsbCBjb250cm9sOgoKYGBgc3dpZnQKbGV0IGNvbnN0cmFpbnQg
PSBza2lubnlWaWV3LmF1dG9NYXRjaERpbWVuc2lvbiguaGVpZ2h0LCB0b0Rp
bWVuc2lvbjogLndpZHRoLCBvZlZpZXc6IHRhbGxWaWV3KQpgYGAKClB1cmVM
YXlvdXQgc3VwcG9ydHMgc2FmZWFyZWEgd2l0aCBpT1MgMTEuMCs6CgpgYGBz
d2lmdAp2aWV3Mi5hdXRvUGluRWRnZSh0b1N1cGVydmlld1NhZmVBcmVhOiAu
dG9wKQpgYGAKClB1cmVMYXlvdXQgc3VwcG9ydHMgYWxsIEF1dG8gTGF5b3V0
IGZlYXR1cmVzIGluY2x1ZGluZyBpbmVxdWFsaXRpZXMsIHByaW9yaXRpZXMs
IGxheW91dCBtYXJnaW5zLCBpZGVudGlmaWVycywgYW5kIG11Y2ggbW9yZS4g
SXQncyBhIGNvbXByZWhlbnNpdmUsIGRldmVsb3Blci1mcmllbmRseSB3YXkg
dG8gdXNlIEF1dG8gTGF5b3V0LgoKQ2hlY2sgb3V0IHRoZSBleGFtcGxlIGFw
cHMgYmVsb3cgZm9yIG1hbnkgbW9yZSBkZW1vcyBvZiBQdXJlTGF5b3V0IGlu
IHVzZS4KCiMjIyBFeGFtcGxlIEFwcHMKT3BlbiB0aGUgcHJvamVjdCBpbmNs
dWRlZCBpbiB0aGUgcmVwb3NpdG9yeSAocmVxdWlyZXMgWGNvZGUgNiBvciBo
aWdoZXIpLiBJdCBjb250YWlucyBbaU9TXShQdXJlTGF5b3V0L0V4YW1wbGUt
aU9TKSAoYEV4YW1wbGUtaU9TYCBzY2hlbWUpIGFuZCBbT1MgWF0oUHVyZUxh
eW91dC9FeGFtcGxlLU1hYykgKGBFeGFtcGxlLU1hY2Agc2NoZW1lKSBkZW1v
cyBvZiB0aGUgbGlicmFyeSBiZWluZyB1c2VkIGluIHZhcmlvdXMgc2NlbmFy
aW9zLiBUaGUgZGVtb3MgaW4gdGhlIGlPUyBleGFtcGxlIGFwcCBtYWtlIGEg
Z3JlYXQgaW50cm9kdWN0b3J5IHR1dG9yaWFsIHRvIFB1cmVMYXlvdXQgLS0g
cnVuIGVhY2ggZGVtbywgcmV2aWV3IHRoZSBjb2RlIHVzZWQgdG8gaW1wbGVt
ZW50IGl0LCB0aGVuIHByYWN0aWNlIGJ5IG1ha2luZyBzb21lIGNoYW5nZXMg
b2YgeW91ciBvd24gdG8gdGhlIGRlbW8gY29kZS4KCkVhY2ggZGVtbyBpbiB0
aGUgaU9TIGV4YW1wbGUgYXBwIGhhcyBhIFN3aWZ0IGFuZCBPYmplY3RpdmUt
QyB2ZXJzaW9uLiAqKlRvIGNvbXBpbGUgJiBydW4gdGhlIFN3aWZ0IGRlbW9z
LCB5b3UgbXVzdCB1c2UgWGNvZGUgNy4wIG9yIGhpZ2hlciAoU3dpZnQgMi4w
KSBhbmQgY2hvb3NlIHRoZSBgRXhhbXBsZS1pT1MtWGNvZGU3YCBzY2hlbWUu
KiogV2hlbiB5b3UgcnVuIHRoZSBleGFtcGxlIGFwcCwgeW91IGNhbiBlYXNp
bHkgc3dpdGNoIGJldHdlZW4gdXNpbmcgdGhlIFN3aWZ0IGFuZCBPYmplY3Rp
dmUtQyB2ZXJzaW9ucyBvZiB0aGUgZGVtb3MuIFRvIHNlZSB0aGUgY29uc3Ry
YWludHMgaW4gYWN0aW9uIHdoaWxlIHJ1bm5pbmcgdGhlIGlPUyBkZW1vcywg
dHJ5IHVzaW5nIGRpZmZlcmVudCBkZXZpY2Ugc2ltdWxhdG9ycywgcm90YXRp
bmcgdGhlIGRldmljZSB0byBkaWZmZXJlbnQgb3JpZW50YXRpb25zLCBhcyB3
ZWxsIGFzIHRvZ2dsaW5nIHRoZSB0YWxsZXIgaW4tY2FsbCBzdGF0dXMgYmFy
IGluIHRoZSBpT1MgU2ltdWxhdG9yLgoKT24gT1MgWCwgd2hpbGUgcnVubmlu
ZyB0aGUgYXBwLCBwcmVzcyBhbnkga2V5IHRvIGN5Y2xlIHRocm91Z2ggdGhl
IGRlbW9zLiBZb3UgY2FuIHJlc2l6ZSB0aGUgd2luZG93IHRvIHNlZSB0aGUg
Y29uc3RyYWludHMgaW4gYWN0aW9uLgoKIyMjIFRpcHMgYW5kIFRyaWNrcwpD
aGVjayBvdXQgc29tZSBbVGlwcyBhbmQgVHJpY2tzXShodHRwczovL2dpdGh1
Yi5jb20vUHVyZUxheW91dC9QdXJlTGF5b3V0L3dpa2kvVGlwcy1hbmQtVHJp
Y2tzKSB0byBrZWVwIGluIG1pbmQgd2hlbiB1c2luZyB0aGUgQVBJLgoKIyMg
UHVyZUxheW91dCB2cy4gdGhlIHJlc3QKVGhlcmUgYXJlIHF1aXRlIGEgZmV3
IGRpZmZlcmVudCB3YXlzIHRvIGltcGxlbWVudCBBdXRvIExheW91dC4gSGVy
ZSBpcyBhIHF1aWNrIG92ZXJ2aWV3IG9mIHRoZSBhdmFpbGFibGUgb3B0aW9u
czoKCiogQXBwbGUgW05TTGF5b3V0Q29uc3RyYWludCBTREsgQVBJXShodHRw
czovL2RldmVsb3Blci5hcHBsZS5jb20vbGlicmFyeS9pb3MvZG9jdW1lbnRh
dGlvbi9BcHBLaXQvUmVmZXJlbmNlL05TTGF5b3V0Q29uc3RyYWludF9DbGFz
cy9pbmRleC5odG1sIy8vYXBwbGVfcmVmL29jYy9jbG0vTlNMYXlvdXRDb25z
dHJhaW50L2NvbnN0cmFpbnRXaXRoSXRlbTphdHRyaWJ1dGU6cmVsYXRlZEJ5
OnRvSXRlbTphdHRyaWJ1dGU6bXVsdGlwbGllcjpjb25zdGFudDopCiAgKiBQ
cm9zOiBSYXcgcG93ZXIKICAqIENvbnM6IEV4dHJlbWVseSB2ZXJib3NlOyB0
ZWRpb3VzIHRvIHdyaXRlOyBkaWZmaWN1bHQgdG8gcmVhZAoqIEFwcGxlIFtW
aXN1YWwgRm9ybWF0IExhbmd1YWdlXShodHRwczovL2RldmVsb3Blci5hcHBs
ZS5jb20vbGlicmFyeS9pb3MvZG9jdW1lbnRhdGlvbi9Vc2VyRXhwZXJpZW5j
ZS9Db25jZXB0dWFsL0F1dG9sYXlvdXRQRy9WaXN1YWxGb3JtYXRMYW5ndWFn
ZS5odG1sKQogICogUHJvczogQ29uY2lzZTsgY29udmVuaWVudAogICogQ29u
czogRG9lc24ndCBzdXBwb3J0IHNvbWUgdXNlIGNhc2VzOyBsYWNrcyBjb21w
aWxlLXRpbWUgY2hlY2tpbmcgYW5kIHNhZmV0eTsgbXVzdCBsZWFybiBzeW50
YXg7IGhhcmQgdG8gZGVidWcKKiBBcHBsZSBJbnRlcmZhY2UgQnVpbGRlcgog
ICogUHJvczogVmlzdWFsOyBpbnRlcmFjdGl2ZTsgcHJvdmlkZXMgY29tcGls
ZS10aW1lIGxheW91dCBjaGVja2luZwogICogQ29uczogRGlmZmljdWx0IGZv
ciBjb21wbGV4IGxheW91dHM7IGNhbm5vdCBkeW5hbWljYWxseSBzZXQgY29u
c3RyYWludHMgYXQgcnVudGltZTsgZW5jb3VyYWdlcyBoYXJkY29kZWQgbWFn
aWMgbnVtYmVyczsgbm90IGFsd2F5cyBXWVNJV1lHCiogQXBwbGUgW05TTGF5
b3V0QW5jaG9yIFNESyBBUEldKGh0dHBzOi8vZGV2ZWxvcGVyLmFwcGxlLmNv
bS9saWJyYXJ5L3ByZXJlbGVhc2UvaW9zL2RvY3VtZW50YXRpb24vQXBwS2l0
L1JlZmVyZW5jZS9OU0xheW91dEFuY2hvcl9DbGFzc1JlZmVyZW5jZS9pbmRl
eC5odG1sKQogICogUHJvczogQ2xlYW4sIHJlYWRhYmxlLCBhbmQgdHlwZS1z
YWZlIEFQSSBmb3IgY3JlYXRpbmcgaW5kaXZpZHVhbCBjb25zdHJhaW50cwog
ICogQ29uczogT25seSBhdmFpbGFibGUgaW4gaU9TIDkuMCBhbmQgT1MgWCAx
MC4xMSBhbmQgaGlnaGVyOyByZXF1aXJlcyBtYW51YWxseSBhY3RpdmF0aW5n
IGVhY2ggY29uc3RyYWludDsgbm8gQVBJIGZvciBjcmVhdGluZyBtdWx0aXBs
ZSBjb25zdHJhaW50cyBhdCBvbmNlCiogKipQdXJlTGF5b3V0KioKICAqIFBy
b3M6IENvbXBhdGlibGUgd2l0aCBPYmplY3RpdmUtQyBhbmQgU3dpZnQgY29k
ZWJhc2VzOyBjb25zaXN0ZW50IHdpdGggQ29jb2EgQVBJIHN0eWxlOyBjcm9z
cy1wbGF0Zm9ybSBBUEkgYW5kIGltcGxlbWVudGF0aW9uIHNoYXJlZCBhY3Jv
c3MgaU9TIGFuZCBPUyBYOyBmdWxseSBiYWNrd2FyZHMtY29tcGF0aWJsZSB0
byBpT1MgNiAmIE9TIFggMTAuNzsgZWFzeSB0byB1c2U7IHR5cGUtc2FmZTsg
ZWZmaWNpZW50CiAgKiBDb25zOiBOb3QgdGhlIG1vc3QgY29uY2lzZSBleHBy
ZXNzaW9uIG9mIGxheW91dCBjb2RlCiogSGlnaC1sZXZlbCBBdXRvIExheW91
dCBMaWJyYXJpZXMvRFNMcyAoW0NhcnRvZ3JhcGh5XShodHRwczovL2dpdGh1
Yi5jb20vcm9iYi9DYXJ0b2dyYXBoeSksIFtTbmFwS2l0XShodHRwczovL2dp
dGh1Yi5jb20vU25hcEtpdC9TbmFwS2l0KSwgW0tlZXBMYXlvdXRdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9pTWFydGluS2lzcy9LZWVwTGF5b3V0KSkKICAqIFBy
b3M6IFZlcnkgY2xlYW4sIGNvbmNpc2UsIGFuZCBjb252ZW5pZW50IAogICog
Q29uczogVW5pcXVlIEFQSSBzdHlsZSBpcyBmb3JlaWduIHRvIEFwcGxlJ3Mg
QVBJczsgbWl4ZWQgY29tcGF0aWJpbGl0eSB3aXRoIE9iamVjdGl2ZS1DICYg
U3dpZnQ7IGdyZWF0ZXIgZGVwZW5kZW5jeSBvbiB0aGlyZCBwYXJ0eSBjb2Rl
CgkKUHVyZUxheW91dCB0YWtlcyBhIGJhbGFuY2VkIGFwcHJvYWNoIHRvIEF1
dG8gTGF5b3V0IHRoYXQgbWFrZXMgaXQgd2VsbCBzdWl0ZWQgZm9yIGFueSBw
cm9qZWN0LgoKIyMgUHJvYmxlbXMsIFN1Z2dlc3Rpb25zLCBQdWxsIFJlcXVl
c3RzPwpQbGVhc2Ugb3BlbiBhIFtuZXcgSXNzdWUgaGVyZV0oaHR0cHM6Ly9n
aXRodWIuY29tL1B1cmVMYXlvdXQvUHVyZUxheW91dC9pc3N1ZXMvbmV3KSBp
ZiB5b3UgcnVuIGludG8gYSBwcm9ibGVtIHNwZWNpZmljIHRvIFB1cmVMYXlv
dXQsIGhhdmUgYSBmZWF0dXJlIHJlcXVlc3QsIG9yIHdhbnQgdG8gc2hhcmUg
YSBjb21tZW50LiBOb3RlIHRoYXQgZ2VuZXJhbCBBdXRvIExheW91dCBxdWVz
dGlvbnMgc2hvdWxkIGJlIGFza2VkIG9uIFtTdGFjayBPdmVyZmxvd10oaHR0
cDovL3N0YWNrb3ZlcmZsb3cuY29tKS4KClB1bGwgcmVxdWVzdHMgYXJlIGVu
Y291cmFnZWQgYW5kIGdyZWF0bHkgYXBwcmVjaWF0ZWQhIFBsZWFzZSB0cnkg
dG8gbWFpbnRhaW4gY29uc2lzdGVuY3kgd2l0aCB0aGUgZXhpc3RpbmcgY29k
ZSBzdHlsZS4gSWYgeW91J3JlIGNvbnNpZGVyaW5nIHRha2luZyBvbiBzaWdu
aWZpY2FudCBjaGFuZ2VzIG9yIGFkZGl0aW9ucyB0byB0aGUgcHJvamVjdCwg
cGxlYXNlIGNvbW11bmljYXRlIGluIGFkdmFuY2UgYnkgb3BlbmluZyBhIG5l
dyBJc3N1ZS4gVGhpcyBhbGxvd3MgZXZlcnlvbmUgdG8gZ2V0IG9uYm9hcmQg
d2l0aCB1cGNvbWluZyBjaGFuZ2VzLCBlbnN1cmVzIHRoYXQgY2hhbmdlcyBh
bGlnbiB3aXRoIHRoZSBwcm9qZWN0J3MgZGVzaWduIHBoaWxvc29waHksIGFu
ZCBhdm9pZHMgZHVwbGljYXRlZCB3b3JrLgoKIyMgTWV0YQpPcmlnaW5hbGx5
IGRlc2lnbmVkICYgYnVpbHQgYnkgVHlsZXIgRm94IChbQHNtaWxleWJvcmdd
KGh0dHBzOi8vZ2l0aHViLmNvbS9zbWlsZXlib3JnKSkuIEN1cnJlbnRseSBt
YWludGFpbmVkIGJ5IE1pY2tleSBSZWlzcyAoW0BtaWNrZXlyZWlzc10oaHR0
cHM6Ly9naXRodWIuY29tL21pY2tleXJlaXNzKSkuIERpc3RyaWJ1dGVkIHdp
dGggdGhlIE1JVCBsaWNlbnNlLgo=
",,7338,"c3VkbzogZmFsc2UKb3N4X2ltYWdlOiB4Y29kZTkuMgpsYW5ndWFnZTogb2Jq
ZWN0aXZlLWMKcnZtOgogIC0gMi4zLjEKeGNvZGVfcHJvamVjdDogUHVyZUxh
eW91dC9QdXJlTGF5b3V0Lnhjb2RlcHJvagpiZWZvcmVfaW5zdGFsbDoKICAt
IHJ2bSBpbnN0YWxsIDIuNC4xCiAgLSBnZW0gaW5zdGFsbCBzbGF0aGVyIC0t
bm8tcmkgLS1uby1yZG9jCgpzY3JpcHQ6CiAgLSB4Y29kZWJ1aWxkIHRlc3Qg
LXByb2plY3QgUHVyZUxheW91dC9QdXJlTGF5b3V0Lnhjb2RlcHJvaiAtc2No
ZW1lIFB1cmVMYXlvdXRfaU9TIC1kZXN0aW5hdGlvbiAncGxhdGZvcm09aU9T
IFNpbXVsYXRvcixuYW1lPWlQaG9uZSBYLE9TPTExLjInCiAgLSB4Y29kZWJ1
aWxkIHRlc3QgLXByb2plY3QgUHVyZUxheW91dC9QdXJlTGF5b3V0Lnhjb2Rl
cHJvaiAtc2NoZW1lIFB1cmVMYXlvdXRfaU9TIC1kZXN0aW5hdGlvbiAncGxh
dGZvcm09aU9TIFNpbXVsYXRvcixuYW1lPWlQaG9uZSA3LE9TPTEwLjInCiAg
LSB4Y29kZWJ1aWxkIHRlc3QgLXByb2plY3QgUHVyZUxheW91dC9QdXJlTGF5
b3V0Lnhjb2RlcHJvaiAtc2NoZW1lIFB1cmVMYXlvdXRfaU9TIC1kZXN0aW5h
dGlvbiAncGxhdGZvcm09aU9TIFNpbXVsYXRvcixuYW1lPWlQaG9uZSA1cyxP
Uz04LjEnCiAgLSB4Y29kZWJ1aWxkIHRlc3QgLXByb2plY3QgUHVyZUxheW91
dC9QdXJlTGF5b3V0Lnhjb2RlcHJvaiAtc2NoZW1lIFB1cmVMYXlvdXRfTWFj
IC1kZXN0aW5hdGlvbiAncGxhdGZvcm09T1MgWCxhcmNoPXg4Nl82NCcKCmFm
dGVyX3N1Y2Nlc3M6IHNsYXRoZXIK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'awesome-android',21780562,b'A curated list of awesome Android packages and resources.',,1,7331,,514,False,b'https://api.github.com/repos/JStumpp/awesome-android/forks',"IyBBd2Vzb21lIEFuZHJvaWQKWzxpbWcgc3JjPSJodHRwczovL3Jhdy5naXRo
dWJ1c2VyY29udGVudC5jb20vanN0dW1wcC9hd2Vzb21lLWFuZHJvaWQvbWFz
dGVyL2F3ZXNvbWUtYW5kcm9pZC5wbmciPl0oaHR0cHM6Ly9naXRodWIuY29t
L2pzdHVtcHAvYXdlc29tZS1hbmRyb2lkKQoKPHAgYWxpZ249ImNlbnRlciI+
CiAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9h
d2Vzb21lIj48aW1nIGFsdD0iYXdlc29tZSIgc3JjPSJodHRwczovL2Nkbi5y
YXdnaXQuY29tL3NpbmRyZXNvcmh1cy9hd2Vzb21lL2Q3MzA1ZjM4ZDI5ZmVk
NzhmYTg1NjUyZTNhNjNlMTU0ZGQ4ZTg4MjkvbWVkaWEvYmFkZ2Uuc3ZnIiAv
PjwvYT4KICA8YSBocmVmPSJodHRwczovL3RyYXZpcy1jaS5vcmcvSlN0dW1w
cC9hd2Vzb21lLWFuZHJvaWQiPjxpbWcgYWx0PSJCdWlsZCBTdGF0dXMiIHNy
Yz0iaHR0cHM6Ly9hcGkudHJhdmlzLWNpLm9yZy9KU3R1bXBwL2F3ZXNvbWUt
YW5kcm9pZC5zdmc/YnJhbmNoPW1hc3RlciIgLz48L2E+CiAgPGltZyBhbHQ9
IlBScyBXZWxjb21lIiBzcmM9Imh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFk
Z2UvUFJzLXdlbGNvbWUtYnJpZ2h0Z3JlZW4uc3ZnIiAvPgo8L3A+CgojIEFi
b3V0CkEgY3VyYXRlZCBsaXN0IG9mIGF3ZXNvbWUgQW5kcm9pZCBbbGlicmFy
aWVzXSgjbGlicmFyaWVzKSBhbmQgW3Jlc291cmNlc10oI3Jlc291cmNlcyku
IEZvciBnZW5lcmFsIEphdmEgbGlicmFyaWVzIGhhdmUgYSBsb29rIGF0IFth
d2Vzb21lLWphdmFdKGh0dHBzOi8vZ2l0aHViLmNvbS9ha3VsbHBwL2F3ZXNv
bWUtamF2YSkuCgojIyBTdXBwb3J0ZWQgd2l0aCDinaTvuI8gYnkgW0luc3Rh
YnVnXShodHRwczovL2luc3RhYnVnLmNvbS9hbmRyb2lkL3Nkaz91dG1fc291
cmNlPXRvb2xzb2Z0aGV0cmFkZSZ1dG1fbWVkaXVtPXNwb24mdXRtX2NvbnRl
bnQ9aGVhZGVyKQojIyMgVW5kZXJzdGFuZCBIb3cgWW91ciBBbmRyb2lkIEFw
cCBpcyBEb2luZyB3aXRoIFJlYWwtVGltZSBDb250ZXh0dWFsIEluc2lnaHRz
IEZyb20gWW91ciBVc2VycwpbIVtpbnN0YWJ1Zy1naXRodWJdKGh0dHBzOi8v
dXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEwODUwNjI1LzY1
NTEyNjkxLWZkNDVmMjgwLWRlZDktMTFlOS04OTIxLTM1MjhiOThjMzBhNy5w
bmcpXShodHRwczovL2luc3RhYnVnLmNvbS9hbmRyb2lkL3Nkaz91dG1fc291
cmNlPWF3ZXNvbWVhbmRyb2lkJnV0bV9tZWRpdW09c3BvbiZ1dG1fY29udGVu
dD1iYW5uZXIpCj5JbnN0YWJ1ZyBoZWxwcyBBbmRyb2lkIGRldmVsb3BlcnMg
YW5kIHByb2R1Y3QgdGVhbXMgZWFzaWx5IGNvbGxlY3QgYnVncyBhbmQgZmVl
ZGJhY2sgZnJvbSBiZXRhIHRlc3RlcnMgYW5kIHVzZXJzIHRvIGl0ZXJhdGUg
ZmFzdGVyIGFuZCBzaGlwIHF1YWxpdHkgYXBwcy4gSW5zdGFidWcgYXV0b21h
dGljYWxseSBhdHRhY2hlcyBzY3JlZW5zaG90cywgZGV2aWNlIGRldGFpbHMs
IG5ldHdvcmsgbG9ncywgcmVwcm8gc3RlcHMsIGFuZCB0b25zIG9mIG90aGVy
IGNyaXRpY2FsIGluc2lnaHRzIG5lZWRlZCB0byByZXNvbHZlIGlzc3VlcyBh
bmQgcHJpb3JpdGl6ZSBwcm9kdWN0IGJhY2tsb2dzLiAKPiBNb2JpbGUgdGVh
bXMgYWNjZWxlcmF0ZSB0aGVpciB3b3JrZmxvd3MgYnkgc2VhbWxlc3NseSBp
bnRlZ3JhdGluZyB3aXRoIHRoaXJkLXBhcnR5IHRvb2xzIGxpa2UgR2l0aHVi
LCBKaXJhLCBTbGFjaywgWmVuZGVzayBhbmQgbXVjaCBtb3JlLiBbSW5zdGFi
dWcgaXMgb2ZmZXJpbmcgQXdlc29tZSBBbmRyb2lkIGNvbW11bml0eSBhbiBl
eGNsdXNpdmUgMTUlIGRpc2NvdW50IG9uIGFsbCBwYWlkIHBsYW5zLiBHZXQg
U3RhcnRlZCFdKGh0dHBzOi8vaW5zdGFidWcuY29tL2FuZHJvaWQvc2RrLz91
dG1fc291cmNlPWF3ZXNvbWVhbmRyb2lkJnV0bV9tZWRpdW09c3BvbiZ1dG1f
Y29udGVudD1nZXQtc3RhcnRlZCkKWyFbXShodHRwczovL2luc3RhYnVnLWdh
LmFwcHNwb3QuY29tL1VBLTQxOTgyMDg4LTYvZ2l0aHViL2F3ZXNvbWVhbmRy
b2lkP3BpeGVsKV0oaHR0cHM6Ly9pbnN0YWJ1Zy5jb20pCgoKIyBIb3cgdG8g
VXNlCkF3ZXNvbWUtQW5kcm9pZCBpcyBhbiBhbWF6aW5nIGxpc3QgZm9yIHBl
b3BsZSB3aG8gbmVlZCBhIGNlcnRhaW4gZmVhdHVyZSBvbiB0aGVpciBhcHAs
IHNvIHRoZSBiZXN0IHdheXMgdG8gdXNlIGFyZToKIC0gU2ltcGx5IHByZXNz
IGNvbW1hbmQgKyBGIHRvIHNlYXJjaCBmb3IgYSBrZXl3b3JkCiAtIEdvIHRo
cm91Z2ggb3VyIENvbnRlbnQgTWVudQoKIyBDb250ZW50Ci0gW0VtdWxhdG9y
c10oI2VtdWxhdG9ycykKLSBbTGlicmFyaWVzXSgjbGlicmFyaWVzKQogICAg
LSBbQ2hhcnRzXSgjY2hhcnRzKQogICAgLSBbQ2xvdWQgU2VydmljZXNdKCNj
bG91ZC1zZXJ2aWNlcykKICAgIC0gW0RlcGVuZGVuY3kgSW5qZWN0aW9uXSgj
ZGVwZW5kZW5jeS1pbmplY3Rpb24pCiAgICAtIFtBbmRyb2lkIFNlcnZpY2Vz
XSgjYW5kcm9pZC1zZXJ2aWNlcykKICAgIC0gW0dhbWUgRGV2ZWxvcG1lbnRd
KCNnYW1lLWRldmVsb3BtZW50KQoJLSBbU2VjdXJpdHldKCNzZWN1cml0eSkK
ICAgIC0gW0dVSV0oI2d1aSkKICAgICAgICAtIFtBY3Rpb25CYXJdKCNhY3Rp
b25iYXIpCiAgICAgICAgLSBbTmF2aWdhdGlvbl0oI25hdmlnYXRpb24pCiAg
ICAgICAgLSBbQW5pbWF0aW9uc10oI2FuaW1hdGlvbnMpCiAgICAgICAgLSBb
SW1hZ2VzXSgjaW1hZ2VzKQogICAgICAgIC0gW0lucHV0c10oI2lucHV0cykK
ICAgICAgICAtIFtMb2FkaW5nIGltYWdlc10oI2xvYWRpbmctaW1hZ2VzKQog
ICAgICAgIC0gW01lZGlhIFBpY2tlcl0oI21lZGlhLXBpY2tlcikKICAgICAg
ICAtIFtWaWRlb10oI3ZpZGVvKQogICAgICAgIC0gW0NhbWVyYV0oI2NhbWVy
YSkKICAgICAgICAtIFtGaWVsZCBWYWxpZGF0aW9uXSgjZmllbGQtdmFsaWRh
dGlvbikKICAgIC0gW0pTT05dKCNqc29uKQogICAgLSBbQ3Jhc2ggbW9uaXRv
cmluZ10oI2NyYXNoLW1vbml0b3JpbmcpCiAgICAtIFtOZXR3b3JraW5nXSgj
bmV0d29ya2luZykKICAgIC0gW0xvZ2dlcl0oI2xvZ2dlcikKICAgIC0gW05v
dGlmaWNhdGlvbnNdKCNub3RpZmljYXRpb25zKQogICAgLSBbRGF0YWJhc2Vd
KCNkYXRhYmFzZSkKICAgICAgICAtIFtPUk1dKCNvcm0pCiAgICAtIFtSRVNU
XSgjcmVzdCkKICAgIC0gW1Rlc3RpbmddKCN0ZXN0aW5nKQogICAgLSBbVHJh
Y2tpbmddKCN0cmFja2luZykKICAgIC0gW01hcHNdKCNtYXBzKQogICAgLSBb
VXRpbGl0eV0oI3V0aWxpdHkpCiAgICAtIFtEZWJ1Z2dpbmcgdG9vbHNdKCNk
ZWJ1Z2dpbmctdG9vbHMpCiAgICAtIFtXaXJlbGVzc10oI3dpcmVsZXNzKQog
ICAgLSBbQ2hhdCBhbmQgTWVzc2FnaW5nXSgjY2hhdC0tbWVzc2FnaW5nKQog
ICAgLSBbQ3VzdG9tIERpYWxvZ10oI2N1c3RvbS1kaWFsb2cpCiAgICAtIFtW
ZXJzaW9uIENoZWNraW5nXSgjdmVyc2lvbi1jaGVja2luZykKICAgIC0gW0Rh
dGUgJiBUaW1lXSgjZGF0ZS0tdGltZSkKICAgIC0gW1J1bnRpbWUgUGVybWlz
c2lvbnNdKCNydW50aW1lLXBlcm1pc3Npb25zKQogICAgLSBbT3RoZXJdKCNv
dGhlcikKLSBbUmVzb3VyY2VzXSgjcmVzb3VyY2VzKQogICAgLSBbQ29kZSBl
eGFtcGxlc10oI2NvZGUtZXhhbXBsZXMpCiAgICAtIFtQb2RjYXN0c10oI3Bv
ZGNhc3RzKQogICAgLSBbTW9yZSBsaXN0cyBvZiBsaWJyYXJpZXNdKCNtb3Jl
LWxpc3RzLW9mLWxpYnJhcmllcykKLSBbRGV2ZWxvcG1lbnQgQWx0ZXJuYXRp
dmVzXSgjZGV2ZWxvcG1lbnQtYWx0ZXJuYXRpdmVzKQogICAgLSBbQyNdKCNj
KQogICAgLSBbSFRNTCwgQ1NTIGFuZCBKYXZhc2NyaXB0XSgjaHRtbC1jc3Mt
YW5kLWphdmFzY3JpcHQpCiAgICAtIFtMdWFdKCNsdWEpCiAgICAtIFtTY2Fs
YV0oI3NjYWxhKQogICAgLSBbR3Jvb3Z5XSgjZ3Jvb3Z5KQogICAgLSBbS290
bGluXSgja290bGluKQogICAgLSBbRmx1dHRlcl0oI2ZsdXR0ZXIpCi0gW1Bl
cmZvcm1hbmNlXSgjcGVyZm9ybWFuY2UpCi0gW090aGVyIEF3ZXNvbWUgTGlz
dHNdKCNvdGhlci1hd2Vzb21lLWxpc3RzKQotIFtDb250cmlidXRpbmddKCNj
b250cmlidXRpbmcpCgojIyBFbXVsYXRvcnMKLSBbQW5kWV0oaHR0cHM6Ly9h
bmR5cm9pZC5uZXQpCi0gW0FSQ2hvbl0oaHR0cHM6Ly9hcmNob24tcnVudGlt
ZS5naXRodWIuaW8pCi0gW0JsdWVTdGFja3NdKGh0dHBzOi8vd3d3LmJsdWVz
dGFja3MuY29tKQotIFtHZW55bW90aW9uXShodHRwczovL3d3dy5nZW55bW90
aW9uLmNvbSkKLSBbbm94XShodHRwczovL3d3dy5iaWdub3guY29tKQoKIyMg
TGlicmFyaWVzCgojIyMgQ2hhcnRzCgotIFtBQ2hhcnRFbmdpbmVdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9kZGFubnkvYWNoYXJ0ZW5naW5lKSAtIENoYXJ0aW5n
IEVuZ2luZS4KLSBbRWF6ZUdyYXBoXShodHRwczovL2dpdGh1Yi5jb20vYmxh
Y2tmaXp6L0VhemVHcmFwaCkgLSBDaGFydCBhbmQgZ3JhcGggbGlicmFyeS4K
LSBbV2lsbGlhbUNoYXJ0XShodHRwczovL2dpdGh1Yi5jb20vZGlvZ29iZXJu
YXJkaW5vL1dpbGxpYW1DaGFydCkgLSBDaGFydCBsaWJyYXJ5IHdpdGggZ29v
ZCBtb3Rpb24gY2FwYWJpbGl0aWVzLgotIFtIZWxsb0NoYXJ0c10oaHR0cHM6
Ly9naXRodWIuY29tL2xlY2hvL2hlbGxvY2hhcnRzLWFuZHJvaWQpIC0gQ2hh
cnQgYW5kIGdyYXBoIGxpYnJhcnkgd2l0aCBzdXBwb3J0IGZvciBzY2FsaW5n
LCBzY3JvbGxpbmcgYW5kIGFuaW1hdGlvbnMuCi0gW01QQW5kcm9pZENoYXJ0
XShodHRwczovL2dpdGh1Yi5jb20vUGhpbEpheS9NUEFuZHJvaWRDaGFydCkg
LSBBbiBBbmRyb2lkIGNoYXJ0IGFuZCBncmFwaCBsaWJyYXJ5IHN1cHBvcnRp
bmcgc2NhbGluZyBhbmQgZHJhZ2dpbmcgYnkgZ2VzdHVyZS4KLSBbQXJjQ2hh
cnRWaWV3XShodHRwczovL2dpdGh1Yi5jb20vaW1hTk5lb0ZpZ2hUL0FyY0No
YXJ0VmlldykgLSBEcmF3IENyZWF0aXZlIFN0YXRpc3RpYyBBcmMgQ2hhcnRz
LgotIFtBbnlDaGFydF0oaHR0cHM6Ly9naXRodWIuY29tL0FueUNoYXJ0L0Fu
eUNoYXJ0LUFuZHJvaWQpIC0gRGF0YSB2aXN1YWxpemF0aW9uIGxpYnJhcnks
IEludGVyYWN0aXZlIGNoYXJ0cy4KCiMjIyBDbG91ZCBTZXJ2aWNlcwoKLSBb
Q2xvdWRSYWlsXShodHRwczovL2Nsb3VkcmFpbC5jb20pIC0gVW5pZmllZCBB
UEkgTGlicmFyeSBmb3I6IENsb3VkIFN0b3JhZ2UsIFNvY2lhbCBQcm9maWxl
cywgUGF5bWVudCwgRW1haWwsIFNNUyAmIFBPSXMuCgojIyMgRGF0YSBiaW5k
aW5nCgotIFtBbnZpbF0oaHR0cHM6Ly9naXRodWIuY29tL2FudmlsLXVpL2Fu
dmlsKSAtIEEgc21hbGwgbGlicmFyeSB0byBjcmVhdGUgcmVhY3RpdmUgVUkg
Y29tcG9uZW50cywgaW5zcGlyZWQgYnkgUmVhY3QuIFByb3ZpZGVzIGRhdGEg
YmluZGluZyBhbmQgZXZlbnQgbGlzdGVuZXIgYmluZGluZywgZml0cyB3ZWxs
IGZvciBNVlZNLgotIFtEYXRhIEJpbmRpbmcgTGlicmFyeV0oaHR0cHM6Ly9k
ZXZlbG9wZXIuYW5kcm9pZC5jb20vdG9waWMvbGlicmFyaWVzL2RhdGEtYmlu
ZGluZy8pIC0gT2ZmaWNpYWwgQW5kcm9pZCBEYXRhIEJpbmRpbmcgTGlicmFy
eSB0byB3cml0ZSBkZWNsYXJhdGl2ZSBsYXlvdXRzIGFuZCBtaW5pbWl6ZSB0
aGUgZ2x1ZSBjb2RlIG5lY2Vzc2FyeSB0byBiaW5kIGFwcGxpY2F0aW9uIGxv
Z2ljIGFuZCBsYXlvdXRzLgoKIyMjIERlcGVuZGVuY3kgSW5qZWN0aW9uCgot
IFtEYWdnZXIgMl0oaHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS9kYWdnZXIp
IC0gQSBmYXN0IGRlcGVuZGVuY3kgaW5qZWN0b3IgZm9yIEFuZHJvaWQgYW5k
IEphdmEuCi0gW0J1dHRlciBLbmlmZV0oaHR0cDovL2pha2V3aGFydG9uLmdp
dGh1Yi5pby9idXR0ZXJrbmlmZS8pIC0gVmlldyAiaW5qZWN0aW9uIiBsaWJy
YXJ5IGZvciBBbmRyb2lkLgotIFtBY3Rpdml0eVN0YXJ0ZXJdKGh0dHBzOi8v
Z2l0aHViLmNvbS9NYXJjaW5Nb3NrYWxhL0FjdGl2aXR5U3RhcnRlcikgLSBB
bmRyb2lkIExpYnJhcnkgdGhhdCBwcm92aWRlIHNpbXBsZXIgd2F5IHRvIHN0
YXJ0IHRoZSBBY3Rpdml0aWVzIHdpdGggbXVsdGlwbGUgYXJndW1lbnRzLgot
IFtBbmRyb2lkQW5ub3RhdGlvbnNdKGh0dHBzOi8vZ2l0aHViLmNvbS9hbmRy
b2lkYW5ub3RhdGlvbnMvYW5kcm9pZGFubm90YXRpb25zKSAtIEphdmEgYW5u
b3RhdGlvbnMgd2l0aCBkZXBlbmRlbmN5IGluamVjdGlvbiBhdCBjb21waWxl
IHRpbWUuCi0gW1Rvb3RocGlja10oaHR0cHM6Ly9naXRodWIuY29tL3N0ZXBo
YW5lbmljb2xhcy90b290aHBpY2spIC0gQSBzY29wZSB0cmVlIGJhc2VkIERl
cGVuZGVuY3kgSW5qZWN0aW9uIChESSkgbGlicmFyeSBmb3IgSmF2YS4KCiMj
IyBBbmRyb2lkIFNlcnZpY2VzCi0gW1JlbW90ZXJdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9qb3Nlc2FtdWVsL3JlbW90ZXIpIC0gQW4gYWx0ZXJuYXRpdmUgdG8g
QW5kcm9pZCBBSURMIGZvciBBbmRyb2lkIFJlbW90ZSBJUEMgc2VydmljZXMg
dXNpbmcgcGxhaW4gamF2YSBpbnRlcmZhY2VzLgotIFtTZXJ2aWNlIENvbm5l
Y3Rvcl0oaHR0cHM6Ly9naXRodWIuY29tL2pvc2VzYW11ZWwvc2VydmljZWNv
bm5lY3RvcikgLSBCaW5kIEFuZHJvaWQgc2VydmljZXMgYW5kIGNhbGxiYWNr
cyB0byBmaWVsZHMgYW5kIG1ldGhvZHMuCgojIyMgR2FtZSBEZXZlbG9wbWVu
dAoKLSBbTGliZ2R4XShodHRwczovL2xpYmdkeC5iYWRsb2dpY2dhbWVzLmNv
bS8pIC0gQ3Jvc3MtcGxhdGZvcm0gZ2FtZSBlbmdpbmUgYW5kIFNESy4gW09w
ZW4gU291cmNlXShodHRwczovL2dpdGh1Yi5jb20vbGliR0RYL2xpYkdEWCkK
LSBbVnVmb3JpYV0oaHR0cHM6Ly93d3cudnVmb3JpYS5jb20vKSAtIEF1Z21l
bnRlZCBSZWFsaXR5IGxpYnJhcnkuCi0gW1VuaXR5XShodHRwczovL3VuaXR5
M2QuY29tL3VuaXR5L2ZlYXR1cmVzL211bHRpcGxhdGZvcm0pIC0gQ3Jvc3Mt
cGxhdGZvcm0gZ2FtZSBjcmVhdGlvbiBzeXN0ZW0uCi0gW1JhamF3YWxpXSho
dHRwczovL2dpdGh1Yi5jb20vUmFqYXdhbGkvUmFqYXdhbGkpIC0gQW5kcm9p
ZCBPcGVuR0wgRVMgMi4wLzMuMCBFbmdpbmUKLSBbQ29jb3MyZC14XShodHRw
czovL2NvY29zMmQteC5vcmcvKSAtIENyb3NzLXBsYXRmb3JtIDJkIGdhbWUg
ZnJhbWV3b3JrLgotIFtKdXN0V2VFbmdpbmVdKGh0dHBzOi8vZ2l0aHViLmNv
bS9sZmtkc2svSnVzdFdlRW5naW5lKSAtIEFuIGVhc3kgb3BlbiBzb3VyY2Ug
QW5kcm9pZCBOYXRpdmUgR2FtZSBGcmFtZVdvcmsuCgojIyMgU2VjdXJpdHkK
Ci0gW2xpYnNpZ25hbC1wcm90b2NvbC1qYXZhXShodHRwczovL2dpdGh1Yi5j
b20vc2lnbmFsYXBwL2xpYnNpZ25hbC1wcm90b2NvbC1qYXZhKSAtIEEgcmF0
Y2hldGluZyBmb3J3YXJkIHNlY3JlY3kgcHJvdG9jb2wgdGhhdCB3b3JrcyBp
biBzeW5jaHJvbm91cyBhbmQgYXN5bmNocm9ub3VzIG1lc3NhZ2luZyBlbnZp
cm9ubWVudHMuCi0gW1RoZW1pc10oaHR0cHM6Ly9naXRodWIuY29tL2Nvc3Nh
Y2tsYWJzL3RoZW1pcykgLSBNdWx0aS1sYW5ndWFnZSBmcmFtZXdvcmsgZm9y
IG1ha2luZyB0eXBpY2FsIGVuY3J5cHRpb24gc2NoZW1lcyBlYXN5IHRvIHVz
ZTogZGF0YSBhdCByZXN0LCBhdXRoZW50aWNhdGVkIGRhdGEgZXhjaGFuZ2Us
IHRyYW5zcG9ydCBwcm90ZWN0aW9uLCBhdXRoZW50aWNhdGlvbiwgYW5kIHNv
IG9uLgoKIyMjIEdVSQoKLSBbUHVsbCB0byByZWZyZXNoXShodHRwczovL2Rl
dmVsb3Blci5hbmRyb2lkLmNvbS9yZWZlcmVuY2UvYW5kcm9pZC9zdXBwb3J0
L3Y0L3dpZGdldC9Td2lwZVJlZnJlc2hMYXlvdXQpIC0gQSBzd2lwZSByZWZy
ZXNoIGxheW91dCBpcyBhdmFpbGFibGUgaW4gdGhlIHY0IHN1cHBvcnQgbGli
cmFyeS4KLSBbQ2FyZHNsaWJdKGh0dHBzOi8vZ2l0aHViLmNvbS9nYWJyaWVs
ZW1hcmlvdHRpL2NhcmRzbGliKSAtIEFuZHJvaWQgTGlicmFyeSB0byBidWls
ZCBhIFVJIENhcmQuCi0gW0FuZHJvaWRTdGFnZ2VyZWRHcmlkXShodHRwczov
L2dpdGh1Yi5jb20vZXRzeS9BbmRyb2lkU3RhZ2dlcmVkR3JpZCkgLSBHcmlk
IHZpZXcgd2hpY2ggc3VwcG9ydHMgbXVsdGlwbGUgY29sdW1ucyB3aXRoIHJv
d3Mgb2YgdmFyeWluZyBzaXplcy4KLSBbRmxvd10oaHR0cHM6Ly9naXRodWIu
Y29tL3NxdWFyZS9mbG93KSAtIExpYnJhcnkgdGhhdCBoZWxwcyB3aXRoIGRl
c2NyaWJpbmcgYW4gYXBwIGFzIGEgY29sbGVjdGlvbiBvZiBtb2RlcmF0ZWx5
IGluZGVwZW5kZW50IHNjcmVlbnMuCi0gW1NvcnRhYmxlVGFibGVWaWV3XSho
dHRwczovL2dpdGh1Yi5jb20vSVNjaHdhcnoyMy9Tb3J0YWJsZVRhYmxlVmll
dykgLSBBbiBBbmRyb2lkIGxpYnJhcnkgY29udGFpbmluZyBhIHNpbXBsZSBU
YWJsZVZpZXcgYW5kIGFuIGFkdmFuY2VkIFNvcnRhYmxlVGFibGVWaWV3IHBy
b3ZpZGluZyBhIGxvdCBvZiBjdXN0b21pc2F0aW9uIHBvc3NpYmlsaXRpZXMg
dG8gZml0IGFsbCBuZWVkcy4KLSBbTWF0ZXJpYWxQcm9ncmVzc0Jhcl0oaHR0
cHM6Ly9naXRodWIuY29tL3poYW5naGFpL01hdGVyaWFsUHJvZ3Jlc3NCYXIp
IC0gTWF0ZXJpYWwgZGVzaWduIFByb2dyZXNzQmFyIHdpdGggY29uc2lzdGVu
dCBhcHBlYXJhbmNlLgotIFtBbmRyb2lkRmlsbGFibGVMb2FkZXJzXShodHRw
czovL2dpdGh1Yi5jb20vSm9yZ2VDYXN0aWxsb1Byei9BbmRyb2lkRmlsbGFi
bGVMb2FkZXJzKSAtIEZpbGxhYmxlIHByb2dyZXNzIHZpZXcgd29ya2luZyB3
aXRoIFNWRyBwYXRocy4gTmljZSBvcHRpb24gdG9vIGZvciBjcmVhdGluZyBp
bnRlcmVzdGluZyBhcHAgbG9nb3MuCi0gW05leHVzRGlhbG9nXShodHRwczov
L2dpdGh1Yi5jb20vZGtoYXJyYXQvTmV4dXNEaWFsb2cpIC0gQWxsb3dzIHlv
dSB0byBlYXNpbHkgYW5kIHF1aWNrbHkgY3JlYXRlIGZvcm1zIGluIEFuZHJv
aWQgd2l0aCBsaXR0bGUgY29kZS4KLSBbU25hcCBSZWN5Y2xlclZpZXcgVXRp
bHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9wcmFzaGFudHNvbGFua2kzL1NuYXAt
UmVjeWNsZXJWaWV3LVV0aWxzKSAtIFBvcHVsYXRlIFNpbmdsZSBvciBtdWx0
aXBsZSBMYXlvdXQgUmVjeWNsZXJWaWV3IHdpdGhvdXQgY3JlYXRpbmcgYW4g
QWRhcHRlci4KLSBbTXVsdGlTbmFwUmVjeWNsZXJWaWV3XShodHRwczovL2dp
dGh1Yi5jb20vVGFrdVNlbWJhL011bHRpU25hcFJlY3ljbGVyVmlldykgLSBB
bmRyb2lkIGxpYnJhcnkgZm9yIG11bHRpcGxlIHNuYXBwaW5nIG9mIFJlY3lj
bGVyVmlldwotIFtTd2lwZWFibGVDYXJkXShodHRwczovL2dpdGh1Yi5jb20v
bWljaGVsZWxhY29ydGUvU3dpcGVhYmxlQ2FyZCkgLSBJbXBsZW1lbnRhdGlv
biBvZiBzd2lwZSBjYXJkIGxpa2UgU3RyZWV0VmlldyEhCi0gW0VsYXN0aWNQ
cm9ncmVzc0Jhcl0oaHR0cHM6Ly9naXRodWIuY29tL21pY2hlbGVsYWNvcnRl
L0VsYXN0aWNQcm9ncmVzc0JhcikgLSBCZWF1dGlmdWwgbG9hZGluZyBiYXIu
Ci0gW0VudHJ5U2NyZWVuTWFuYWdlcl0oaHR0cHM6Ly9naXRodWIuY29tL2t1
bmFsbDE3L0VudHJ5U2NyZWVuTWFuYWdlcikgLSBJbnRyby9FbnRyeS9XYWxr
dGhyb3VnaC9TdGFydGluZyBTY3JlZW5zLgotIFtFYXN5SW50cm9dKGh0dHBz
Oi8vZ2l0aHViLmNvbS9tZU5FU1MvRWFzeUludHJvKSAtIFRoZSBmbGV4aWJs
ZSwgZWFzeSB0byB1c2UsIGFsbCBpbiBvbmUgYXBwIGludHJvIGxpYnJhcnkg
Zm9yIHlvdXIgQW5kcm9pZCBwcm9qZWN0LgotIFtNYXRlcmlhbC1DYWxlbmRh
ci1WaWV3XShodHRwczovL2dpdGh1Yi5jb20vQmxhY2tCb3hWaXNpb24vbWF0
ZXJpYWwtY2FsZW5kYXItdmlldykgLSBNYXRlcmlhbCBEZXNpZ24gQ2FsZW5k
YXIgY29tcGF0aWJsZSB3aXRoIEFQSSA4KwotIFtDcnVuY2h5Q2FsZW5kYXJd
KGh0dHBzOi8vZ2l0aHViLmNvbS9DbGV2ZXJQdW1wa2luL0NydW5jaHlDYWxl
bmRhcikgLSBBIG1hdGVyaWFsIGNhbGVuZGFyIHdpZGdldCB3aXRoIGluZmlu
aXRlIHNjcm9sbGluZywgZGF0ZSByYW5nZSBzZWxlY3Rpb24gYW5kIGNvbG9y
IGN1c3RvbWl6YXRpb24uCi0gW1Ntb290aE92ZXJzY3JvbGxhYmxlU2Nyb2xs
Vmlld10oaHR0cHM6Ly9naXRodWIuY29tL3ZvdmFrc2Vub3Y5OS9PdmVyc2Ny
b2xsYWJsZVNjcm9sbFZpZXcpIC0gU21hbGwgY3VzdG9tIHZpZXcgd2l0aCBz
bW9vdGggb3ZlcnNjcm9sbC4gWW91IGNhbiBhZGQgaGVhZGVyIHdpdGggc2Nh
bGUgYmFja2dyb3VuZAotIFtTZWN0aW9uZWRSZWN5Y2xlclZpZXdBZGFwdGVy
XShodHRwczovL2dpdGh1Yi5jb20vbHVpemdycC9TZWN0aW9uZWRSZWN5Y2xl
clZpZXdBZGFwdGVyKSAtIEFuIEFkYXB0ZXIgdGhhdCBhbGxvd3MgYSBSZWN5
Y2xlclZpZXcgdG8gYmUgc3BsaXQgaW50byBTZWN0aW9ucyB3aXRoIGhlYWRl
cnMgYW5kL29yIGZvb3RlcnMuCi0gW0RyYWdMaXN0Vmlld10oaHR0cHM6Ly9n
aXRodWIuY29tL3dveGJsb20vRHJhZ0xpc3RWaWV3KSAtIERyYWcgYW5kIGRy
b3AgdG8gcmVvcmRlciBpdGVtcyBpbiBhIGxpc3QsIGdyaWQgb3IgYm9hcmQu
Ci0gW0FuaW1hdGVkIEV4cGFuZGluZyBMaXN0Vmlld10oaHR0cHM6Ly9naXRo
dWIuY29tL0xlb25hcmRvQ2FyZG9zby9BbmltYXRlZC1FeHBhbmRpbmctTGlz
dFZpZXcpIC0gQW5pbWF0ZWQgRXhwYW5kaW5nIExpc3RWaWV3IHByb3ZpZGVz
IGEgZmFuY3kgYW5pbWF0aW9uIG9uIGV4cGFuZGluZyBvciBjb2xsYXBzaW5n
IHRoZSBjb250ZW50IG9mIGEgbGlzdHZpZXcgaXRlbS4KLSBbVGFzdHlUb2Fz
dF0oaHR0cHM6Ly9naXRodWIuY29tL3lhZGF2LXJhaHVsL1Rhc3R5VG9hc3Qp
IC0gVG9hc3RzIHdpdGggaWNvbnMgYW5kIGNvbG9yLgotIFtEb3RMb2FkZXJd
KGh0dHBzOi8vZ2l0aHViLmNvbS9iaGFyZ2F2bXMvRG90TG9hZGVyKSAtIEEg
Y3VzdG9taXphYmxlIGxvYWRpbmcgYW5pbWF0aW9uIHdpdGggRG90cy4KLSBb
UG9kU2xpZGVyXShodHRwczovL2dpdGh1Yi5jb20vYmhhcmdhdm1zL1BvZFNM
aWRlcikgLSBBIGN1c3RvbWl6YWJsZSBzbGlkZXIgd2lkZ2V0IGFkaGVyaW5n
IHRvIG1hdGVyaWFsIGRlc2lnbiBzcGVjcy4KLSBbVGFwVGFyZ2V0Vmlld10o
aHR0cHM6Ly9naXRodWIuY29tL0tlZXBTYWZlL1RhcFRhcmdldFZpZXcpIC0g
QW4gaW1wbGVtZW50YXRpb24gb2YgdGFwIHRhcmdldHMgZnJvbSB0aGUgTWF0
ZXJpYWwgRGVzaWduIGd1aWRlbGluZXMgZm9yIGZlYXR1cmUgZGlzY292ZXJ5
LgotIFtTaG93Q2FzZVZpZXddKGh0dHBzOi8vZ2l0aHViLmNvbS9tcmVyYW0v
U2hvd0Nhc2VWaWV3KSAtIFRoZSBTaG93Y2FzZVZpZXcgbGlicmFyeSBpcyBk
ZXNpZ25lZCB0byBoaWdobGlnaHQgYW5kIHNob3djYXNlIHNwZWNpZmljIHBh
cnRzIG9mIGFwcHMgdG8gdGhlIHVzZXIgd2l0aCBhIGF0dHJhY3RpdmUgYW5k
IGZsYXQgb3ZlcmxheS4KLSBbTWF0ZXJpYWxJbnRyb1NjcmVlbl0oaHR0cHM6
Ly9naXRodWIuY29tL1RhbmdvQWdlbmN5L21hdGVyaWFsLWludHJvLXNjcmVl
bikgLSBNYXRlcmlhbCBJbnRybyBTY3JlZW4gaW1wbGVtZW50YXRpb24gd2l0
aCBlYXNpbHkgZXh0ZW5zaWJsZSBBUEkuCi0gW0Zsb2F0aW5nVmlld10oaHR0
cHM6Ly9naXRodWIuY29tL1VGcmVlZG9tL0Zsb2F0aW5nVmlldykgLSBGbG9h
dGluZ1ZpZXcgY2FuIG1ha2UgdGhlIHRhcmdldCB2aWV3IGZsb2F0aW5nIGFi
b3ZlIHRoZSBhbmNob3IgdmlldyB3aXRoIGNvb2wgYW5pbWF0aW9uLgotIFtU
aW1lY29uXShodHRwczovL2dpdGh1Yi5jb20vYWx4cm0vYW5pbWF0ZWQtY2xv
Y2staWNvbikgLSBFYXN5LXRvLXVzZSBhbmltYXRlZCBjbG9jayBpY29uCi0g
W0F1ZGlvZ3JhbV0oaHR0cHM6Ly9naXRodWIuY29tL2FseHJtL2F1ZGlvd2F2
ZS1wcm9ncmVzc2JhcikgLSBMaWdodHdlaWdodCBhdWRpb3dhdmUgcHJvZ3Jl
c3NiYXIKLSBbQnViYmxlcyBmb3IgQW5kcm9pZF0oaHR0cHM6Ly9naXRodWIu
Y29tL3R4dXNiYWxsZXN0ZXJvcy9idWJibGVzLWZvci1hbmRyb2lkKSAtIEZh
Y2Vib29rIGxpa2UgY2hhdCBidWJibGUgbGlicmFyeQotIFtMaXRobyAoQnkg
RmFjZWJvb2spXShodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svbGl0aG8p
IC0gQSBkZWNsYXJhdGl2ZSBmcmFtZXdvcmsgZm9yIGJ1aWxkaW5nIGVmZmlj
aWVudCBVSXMgb24gQW5kcm9pZC4KLSBbTXVsdGlWaWV3QWRhcHRlcl0oaHR0
cHM6Ly9naXRodWIuY29tL0RldkFoYW1lZC9NdWx0aVZpZXdBZGFwdGVyKSAt
IFJlY3ljbGVydmlldyBBZGFwdGVyIGxpYnJhcnkgdG8gY3JlYXRlIGNvbXBv
c2FibGUgdmlldyBob2xkZXJzLgotIFtMR1NuYWNrYmFyXShodHRwczovL2dp
dGh1Yi5jb20vbG9yZWdyL0xHU25hY2tiYXIpIC0gQW4gZWFzeSB0byB1c2Ug
YW5kIGN1c3RvbWlzYWJsZSB3cmFwcGVyIG9mIHRoZSBuYXRpdmUgQW5kcm9p
ZCBTbmFja2JhciB3aGljaCBzdGF5cyB2aXNpYmxlIGFjcm9zcyBtdWx0aXBs
ZSBhY3Rpdml0aWVzLgotIFtTaGltbWVyTGF5b3V0XShodHRwczovL2dpdGh1
Yi5jb20vdGVhbS1zdXBlcmNoYXJnZS9TaGltbWVyTGF5b3V0KSAtIE1lbW9y
eSBlZmZpY2llbnQgc2hpbW1lcmluZyBlZmZlY3QgZm9yIEFuZHJvaWQgYXBw
bGljYXRpb25zLgotIFtDaXJjbGVQcm9ncmVzc0Jhcl0oaHR0cHM6Ly9naXRo
dWIuY29tL2VtcmUxNTEyL0NpcmNsZVByb2dyZXNzQmFyKSAtIEEgc2ltcGxl
IGxpYnJhcnkgZm9yIGNyZWF0aW5nIGNpcmN1bGFyIHByb2dyZXNzYmFycyBm
b3IgQW5kcm9pZC4KLSBbRWFzeS1TaWduYXR1cmUtQW5kcm9pZF0oaHR0cHM6
Ly9naXRodWIuY29tL3NtYWxhbTExOS9FYXN5LVNpZ25hdHVyZS1BbmRyb2lk
KSAtIEFuIHNpbXBsZSB1aSBsaWJyYXJ5IHRoYXQgcHJvdmlkZXMgYSBwbHVn
YWJsZSBzaWduYXR1cmUgdmlldy4KLSBbRmxhc2hiYXJdKGh0dHBzOi8vZ2l0
aHViLmNvbS9hcml0cmFyb3kvRmxhc2hiYXIpIC0gQSBoaWdobHkgY3VzdG9t
aXphYmxlLCBwb3dlcmZ1bCBhbmQgZWFzeS10by11c2UgYWxlcnRpbmcgbGli
cmFyeSBmb3IgQW5kcm9pZC4KLSBbWXVhbmFJdGVtU2V0dGluZ1ZpZXddKGh0
dHBzOi8vZ2l0aHViLmNvbS9hbmRoaWtheXVhbmEvWXVhbmFJdGVtU2V0dGlu
Z1ZpZXcpIC0gQ3VzdG9taXphYmxlIEl0ZW0gU2V0dGluZyBWaWV3IGZvciBB
bmRyb2lkLgotIFtHcmFkaWVudHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9iYWto
dGl5b3JrL2dyYWRpZW50cykgLSBBIGN1cmF0ZWQgY29sbGVjdGlvbiBvZiBz
cGxlbmRpZCBncmFkaWVudHMuCi0gW09uZUFkYXB0ZXJdKGh0dHBzOi8vZ2l0
aHViLmNvbS9pcm9uU291cmNlL09uZUFkYXB0ZXIpIC0gUmVjeWNsZXJWaWV3
IEFkYXB0ZXIgd2l0aCBtdWx0aXBsZSBtb2R1bGVzIGFuZCBob29rcyB0byBz
aW1wbGlmeSBhbmQgZW5oYW5jZSB0aGUgdXNlIHdoaWxlIHByZXZlbnRpbmcg
Y29tbW9uIG1pc3Rha2VzLgoKIyMjIyBQYWdpbmF0ZQotIFtOb1BhZ2luYXRl
XShodHRwczovL2dpdGh1Yi5jb20vTm9OZXdzL05vUGFnaW5hdGUpIC0gU2lt
cGxlIEFuZHJvaWQgcGFnaW5hdGlvbiBsaWJyYXJ5CgojIyMjIEFjdGlvbkJh
cgotIFtBY3Rpb25CYXJTaGVybG9ja10oaHR0cDovL2FjdGlvbmJhcnNoZXJs
b2NrLmNvbSkgLSBBY3Rpb25CYXIgZm9yIG9sZGVyIEFuZHJvaWQgdmVyc2lv
bnMuCi0gW0ZhZGluZ0FjdGlvbkJhcl0oaHR0cHM6Ly9naXRodWIuY29tL01h
bnVlbFBlaW5hZG8vRmFkaW5nQWN0aW9uQmFyKSAtIEZhZGluZyBhY3Rpb24g
YmFyIGVmZmVjdCB0aGF0IGNhbiBiZSBzZWVuIGluIHRoZSBuZXcgUGxheSBN
dXNpYyBhcHAuCgojIyMjIE5hdmlnYXRpb24KLSBbU2xpZGluZ01lbnVdKGh0
dHBzOi8vZ2l0aHViLmNvbS9qZmVpbnN0ZWluMTAvU2xpZGluZ01lbnUpIC0g
TGlicmFyeSB0byBjcmVhdGUgYXBwbGljYXRpb25zIHdpdGggc2xpZGUtaW4g
bWVudXMuCi0gW1NsaWRpbmdUdXRvcmlhbF0oaHR0cHM6Ly9naXRodWIuY29t
L0NsZXZlcm9hZC9zbGlkaW5ndHV0b3JpYWwtYW5kcm9pZCkgLSBTaW1wbGUg
bGlicmFyeSB0aGF0IGhlbHBzIHRvIGNyZWF0ZSBhd2Vzb21lIHNsaWRpbmcg
YW5kcm9pZCBhcHAgdHV0b3JpYWxzLgotIFtQYWdlclNsaWRpbmdUYWJTdHJp
cF0oaHR0cHM6Ly9naXRodWIuY29tL2FzdHVldHovUGFnZXJTbGlkaW5nVGFi
U3RyaXApIC0gQW4gaW50ZXJhY3RpdmUgaW5kaWNhdG9yIHRvIG5hdmlnYXRl
IGJldHdlZW4gdGhlIGRpZmZlcmVudCBwYWdlcyBvZiBhIFZpZXdQYWdlci4K
LSBbUGFnZSBWaWV3IGluZGljYXRvcl0oaHR0cHM6Ly9naXRodWIuY29tL0ph
a2VXaGFydG9uL1ZpZXdQYWdlckluZGljYXRvcikgLSBTdXBwb3J0IGZvciBo
b3Jpem9udGFsbHkgc2Nyb2xsaW5nIFZpZXdQYWdlci4KLSBbUmVjeWNsZXJU
YWJMYXlvdXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9uc2htdXJhL1JlY3ljbGVy
VGFiTGF5b3V0KSAtIEFuIGVmZmljaWVudCBUYWJMYXlvdXQgbGlicmFyeSBp
bXBsZW1lbnRlZCB3aXRoIFJlY3ljbGVyVmlldy4KLSBbTWF0ZXJpYWxEcmF3
ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9taWtlcGVuei9NYXRlcmlhbERyYXdl
cikgLSBTaW1wbGUgdGFrZSBvbiBhIG1hdGVyaWFsIGRlc2lnbiBuYXZpZ2F0
aW9uIGRyYXdlci4KLSBbRGVidWctQXJ0aXN0XShodHRwczovL2dpdGh1Yi5j
b20vQmFyaXN0YVZlbnR1cmVzL2FuZHJvaWQtZGVidWctYXJ0aXN0KSAtIERl
YnVnIG1lbnUgdG8gZW5hYmxlIGxlYWtjYW5hcnksIHNjYWxwZWwgYW5kIG90
aGVycyBlYXN5LgotIFtGbG9hdGluZy1OYXZpZ2F0aW9uLVZpZXddKGh0dHBz
Oi8vZ2l0aHViLmNvbS9hbmRyZW1pb24vRmxvYXRpbmctTmF2aWdhdGlvbi1W
aWV3KSAtIEEgc2ltcGxlIEZsb2F0aW5nIEFjdGlvbiBCdXR0b24gdGhhdCBz
aG93cyBhbiBhbmNob3JlZCBOYXZpZ2F0aW9uIFZpZXcuCgojIyMjIEFuaW1h
dGlvbnMKLSBbUmVib3VuZF0oaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29r
L3JlYm91bmQpIC0gUmVib3VuZCBpcyBhIEphdmEgbGlicmFyeSB0aGF0IG1v
ZGVscyBzcHJpbmcgZHluYW1pY3MuCi0gW0FuZHJvaWQgVmlldyBBbmltYXRp
b25zXShodHRwczovL2dpdGh1Yi5jb20vZGFpbWFqaWEvQW5kcm9pZFZpZXdB
bmltYXRpb25zKSAtIEN1dGUgdmlldyBhbmltYXRpb24gY29sbGVjdGlvbi4K
LSBbQW5kcm9pZC1UcmFuc2l0aW9uXShodHRwczovL2dpdGh1Yi5jb20va2Fp
Y2h1bmxpbi9hbmRyb2lkLXRyYW5zaXRpb24pIC0gQWxsb3dzIHRoZSBlYXN5
IGNyZWF0aW9uIG9mIHZpZXcgdHJhbnNpdGlvbnMgdGhhdCByZWFjdCB0byB1
c2VyIGlucHV0cy4KLSBbQW5kcm9pZC1WaWV3LUFjdGlvbnNdKGh0dHBzOi8v
Z2l0aHViLmNvbS9kdHgxMi9BbmRyb2lkQW5pbWF0aW9uc0FjdGlvbnMpIC0g
TWFrZXMgY3JlYXRpbmcgY29tcGxleCBhbmltYXRpb25zIGZvciB2aWV3cyBl
YXN5LgotIFtTd2lwcGVyXShodHRwczovL2dpdGh1Yi5jb20vbWRnLWlpdHIv
U3dpcHBlcikgLSBBbmRyb2lkIGxpYnJhcnkgZm9yIHN3aXBlYWJsZSBnZXN0
dXJlcyB0byBjb250cm9sIHZvbHVtZSAsIGJyaWdodG5lc3MgYW5kIHNlZWsg
LgotIFtTcG90bGlnaHRdKGh0dHBzOi8vZ2l0aHViLmNvbS9UYWt1U2VtYmEv
U3BvdGxpZ2h0KSAtIEFuZHJvaWQgTGlicmFyeSB0aGF0IGxpZ2h0cyBpdGVt
cyBmb3IgdHV0b3JpYWxzIG9yIHdhbGstdGhyb3VnaHMgZXRjLi4uCgojIyMj
IEltYWdlcwoKLSBbQ3Jlc2NlbnRvXShodHRwczovL2dpdGh1Yi5jb20vZGV2
ZWxvcGVyLXNoaXZhbS9jcmVzY2VudG8pIC0gRXhwbG9yZSBuZXcgc3R5bGUg
aW4gbWF0ZXJpYWwgZGVzaWduIGJ5IGFkZGluZyBjdXJ2ZSBiZWxvdyBpbWFn
ZSB2aWV3LgotIFthbmRyb2lkLWNyb3BdKGh0dHBzOi8vZ2l0aHViLmNvbS9q
ZGFtY2QvYW5kcm9pZC1jcm9wKSAtIExpYnJhcnkgcHJvamVjdCBmb3IgY3Jv
cHBpbmcgaW1hZ2VzLgotIFtDaXJjdWxhckltYWdlVmlld10oaHR0cHM6Ly9n
aXRodWIuY29tL1BrbW10ZS9DaXJjdWxhckltYWdlVmlldykgLSBDdXN0b20g
dmlldyBmb3IgY2lyY3VsYXIgaW1hZ2VzIHdoaWxlIG1haW50YWluaW5nIHRo
ZSBiZXN0IGRyYXcgcGVyZm9ybWFuY2UuCi0gW0FuZHJvaWQtSW1hZ2UtRmls
dGVyXShodHRwczovL2dpdGh1Yi5jb20vcmFnbnJhb2svYW5kcm9pZC1pbWFn
ZS1maWx0ZXIpIC0gTGlicmFyeSBwcm9qZWN0IGZvciBhcHBseWluZyBpbWFn
ZSBmaWx0ZXJzIGVhc2lseS4KLSBbQ29tcHJlc3Nvcl0oaHR0cHM6Ly9naXRo
dWIuY29tL3pldGJhaXRzdS9Db21wcmVzc29yKSAtIENvbXByZXNzb3IgaXMg
YSBsaWdodHdlaWdodCBhbmQgcG93ZXJmdWwgYW5kcm9pZCBpbWFnZSBjb21w
cmVzc2lvbiBsaWJyYXJ5LgotIFtTaGFwZUltYWdlVmlld10oaHR0cHM6Ly9n
aXRodWIuY29tL3NpeWFtZWQvYW5kcm9pZC1zaGFwZS1pbWFnZXZpZXcpIC0g
TGlicmFyeSB0byBkaXNwbGF5IGltYWdlcyBpbiBkaWZmZXJlbnQgc2hhcGVz
LgoKIyMjIyBJbnB1dHMKCi0gW0Zsb2F0aW5nTGFiZWxdKGh0dHBzOi8vZ2l0
aHViLmNvbS9oYXJkaWstdHJpdmVkaS9GbG9hdGluZ0xhYmVsKSAtIEZsb2F0
aW5nTGFiZWwgQWxsb3dzIHlvdSB0byBjcmVhdGUgYSBibG93IGtpbmQgb2Yg
RWRpdFRleHQuICpEb2Vzbid0IGhhdmUgR3JhZGxlIG9yIE1hdmVuIFN1cHBv
cnQuKgotIFtNYXRlcmlhbEVkaXRUZXh0XShodHRwczovL2dpdGh1Yi5jb20v
cmVuZ3d1eGlhbi9NYXRlcmlhbEVkaXRUZXh0KSAtIFN1cHBvcnRpbmcgRmxv
YXRpbmcgTGFiZWxzLCBTaW5nbGUgTGluZSBFbGxpcHNpcywgTWF4L01pbiBD
aGFyYWN0ZXJzLCBIZWxwZXIgVGV4dCBhbmQgRXJyb3IgVGV4dCB3aXRoIEN1
c3RvbSBDb2xvcnMuCi0gW0Vtb2ppQ29tcGF0XShodHRwczovL2dpdGh1Yi5j
b20vZ29vZ2xlYXJjaGl2ZS9hbmRyb2lkLUVtb2ppQ29tcGF0KSAtIEFkZHMg
ZW1vdGljb25zIHRvIHlvdXIgYXBwCi0gW01hdGVyaWFsU2VhcmNoQmFyXSho
dHRwczovL2dpdGh1Yi5jb20vbWFuY2ovTWF0ZXJpYWxTZWFyY2hCYXIpIC0g
TWF0ZXJpYWwgRGVzaWduIFNlYXJjaCBCYXIgZm9yIEFuZHJvaWQKLSBbSW5w
dXRNYXNrXShodHRwczovL2dpdGh1Yi5jb20vUmVkTWFkUm9ib3QvaW5wdXQt
bWFzay1hbmRyb2lkKSAtIFBhdHRlcm4tYmFzZWQgdXNlciBpbnB1dCBmb3Jt
YXR0ZXIsIHBhcnNlciBhbmQgdmFsaWRhdG9yLgotIFtTd2VldFBhc3N3b3Jk
XShodHRwczovL2dpdGh1Yi5jb20vamVzdXNtYXJ0aW5vemEvU3dlZXQtUGFz
c3dvcmQpIC0gUGFzc3dvcmQgRWRpdFRleHQgdGhhdCBhbGxvd3MgdG8gY3Vz
dG9tIHRvZ2dsZSBidXR0b24KLSBbVm9pY2VPdmVybGF5XShodHRwczovL2dp
dGh1Yi5jb20vYWxnb2xpYS92b2ljZS1vdmVybGF5LWFuZHJvaWQpIC0gQW4g
b3ZlcmxheSB0aGF0IGdldHMgeW91ciB1c2Vy4oCZcyB2b2ljZSBwZXJtaXNz
aW9uIGFuZCBpbnB1dCBhcyB0ZXh0IGluIGEgY3VzdG9taXphYmxlIFVJLgoK
IyMjIyBWaWV3IFBhZ2VycwotIFtNYXRlcmlhbCBEb3RzIEluZGljYXRvcnNd
KGh0dHBzOi8vZ2l0aHViLmNvbS90b21teWJ1b25vbW8vZG90c2luZGljYXRv
cikgLSBUaHJlZSBNYXRlcmlhbCBEb3RzIEluZGljYXRvcnMgc3R5bGVzIGZv
ciBWaWV3IFBhZ2Vycy4KCiMjIyMgTG9hZGluZyBJbWFnZXMKCi0gW1BpY2Fz
c29dKGh0dHBzOi8vZ2l0aHViLmNvbS9zcXVhcmUvcGljYXNzbykgLSBBIHBv
d2VyZnVsIGltYWdlIGRvd25sb2FkaW5nIGFuZCBjYWNoaW5nIGxpYnJhcnkg
Zm9yIEFuZHJvaWQuCi0gW1VuaXZlcnNhbCBJbWFnZSBMb2FkZXJdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9ub3N0cmExMy9BbmRyb2lkLVVuaXZlcnNhbC1JbWFn
ZS1Mb2FkZXIpIC0gQXN5bmNocm9ub3VzLCBvdXQgb2YgdGhlIGJveCBsb2Fk
aW5nIGFuZCBjYWNoaW5nIG9mIGltYWdlcy4KLSBbR2xpZGVdKGh0dHBzOi8v
Z2l0aHViLmNvbS9idW1wdGVjaC9nbGlkZSkgLSBBbiBpbWFnZSBsb2FkaW5n
IGFuZCBjYWNoaW5nIGxpYnJhcnkgZm9yIEFuZHJvaWQgZm9jdXNlZCBvbiBz
bW9vdGggc2Nyb2xsaW5nLCBSZWNvbW1lbmRlZCBieSBHb29nbGUuCi0gW0Zy
ZXNjb10oaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL2ZyZXNjbykgLSBB
biBBbmRyb2lkIGxpYnJhcnkgZm9yIG1hbmFnaW5nIGltYWdlcyBhbmQgdGhl
IG1lbW9yeSB0aGV5IHVzZS4KLSBbR2xpZGUgQml0bWFwIFBvb2xdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9hbWl0c2hla2hhcmlpdGJodS9HbGlkZUJpdG1hcFBv
b2wpIC0gR2xpZGUgQml0bWFwIFBvb2wgaXMgYSBtZW1vcnkgbWFuYWdlbWVu
dCBsaWJyYXJ5IGZvciByZXVzaW5nIHRoZSBiaXRtYXAgbWVtb3J5LgotIFtD
b2lsXShodHRwczovL2dpdGh1Yi5jb20vY29pbC1rdC9jb2lsKSAtIEltYWdl
IGxvYWRpbmcgZm9yIEFuZHJvaWQgYmFja2VkIGJ5IEtvdGxpbiBDb3JvdXRp
bmVzLgoKIyMjIyBNZWRpYSBQaWNrZXIKCi0gW01lZGlhUGlja2VyXShodHRw
czovL2dpdGh1Yi5jb20vYWxoYXpteTEzL01lZGlhUGlja2VyKSAtIEFuZHJv
aWQgTGlicmFyeSB0aGF0IGxldHMgeW91IHRvIHNlbGVjdCBtdWx0aXBsZSBp
bWFnZXMsIHZpZGVvIG9yIHZvaWNlIGZvciBBbmRyb2lkCi0gW0FuZHJvaWQg
SW1hZ2UgUGlja2VyXShodHRwczovL2dpdGh1Yi5jb20vZXNhZmlybS9hbmRy
b2lkLWltYWdlLXBpY2tlcikgLSBBIGxpYnJhcnkgdGhhdCBtYWtlcyBpbWFn
ZXMgYW5kIHZpZGVvcyBzZWxlY3Rpb24gZnJvbSBnYWxsZXJ5IGZlZWxzIGVh
c3kuIEl0IGFsc28gc3VwcG9ydCBHSUYgYW5kIHNpbXBsZSBjYW1lcmEgYWN0
aW9uCgojIyMjIFZpZGVvCgotIFtpamtwbGF5ZXJdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9CaWxpYmlsaS9pamtwbGF5ZXIpIC0gQW5kcm9pZC9pT1MgdmlkZW8g
cGxheWVyIGJhc2VkIG9uIEZGbXBlZyBuMy4yLCB3aXRoIE1lZGlhQ29kZWMs
IFZpZGVvVG9vbGJveCBzdXBwb3J0LgotIFtFeG9wbGF5ZXJdKGh0dHBzOi8v
Z2l0aHViLmNvbS9nb29nbGUvRXhvUGxheWVyKSAtIEV4b1BsYXllciBpcyBh
biBhcHBsaWNhdGlvbiBsZXZlbCBtZWRpYSBwbGF5ZXIgZm9yIEFuZHJvaWQs
IGFsbG93ICBwbGF5aW5nIGF1ZGlvIGFuZCB2aWRlbyBib3RoIGxvY2FsbHkg
YW5kIG92ZXIgdGhlIEludGVybmV0LgogICBTdXBwb3J0cyBmZWF0dXJlcyBs
aWtlIER5bmFtaWMgYWRhcHRpdmUgc3RyZWFtaW5nIG92ZXIgSFRUUCAoREFT
SCksIFNtb290aFN0cmVhbWluZyBhbmQgQ29tbW9uIEVuY3J5cHRpb24KLSBb
VmlkZW9QbGF5Vmlld10oaHR0cHM6Ly9naXRodWIuY29tL01hcmNpbk1vc2th
bGEvVmlkZW9QbGF5VmlldykgLSBDdXN0b20gQW5kcm9pZCB2aWV3IHdpdGgg
dmlkZW8gcGxheWVyLCBwbGF5L3N0b3AsIGxvYWRlciBhbmQgcGxhY2Vob2xk
ZXIgaW1hZ2UuCgojIyMjIENhbWVyYQoKLSBbTWFnaWNhbENhbWVyYV0oaHR0
cHM6Ly9naXRodWIuY29tL2ZhYmlhbjc1OTMvTWFnaWNhbENhbWVyYSkgLSBT
aW1wbGUgd2F5IHRvIHRha2Ugb3Igc2VsZWN0IHBob3RvcyBvZiB5b3VyIGdh
bGxlcnksIHdpdGggb3RoZXIgZmVhdHVyZXMgZm9yIG1hbmFnZSBwaWN0dXJl
cy4KLSBbQ2FtZXJhXShodHRwczovL2dpdGh1Yi5jb20vZHVhbmhvbmcxNjkv
Q2FtZXJhKSAtIFVzZSBBbmRyb2lkIGNhbWVyYSB0byB0YWtlIHBpY3R1cmVz
IGFuZCB2aWRlb3MsIGJhc2VkIG9uIGNhbWVyYTIgYXBpLgoKIyMjIyBGaWVs
ZCBWYWxpZGF0aW9uCi0gW0NvbnZhbGlkYV0oaHR0cHM6Ly9naXRodWIuY29t
L1dlbGxpbmd0b25Db3N0YS9jb252YWxpZGEpIC0gQSBzaW1wbGUgYW5kIGFu
bm90YXRpb24tYmFzZWQgd2F5IHRvIHZhbGlkYXRlIHlvdXIgaW5wdXQgZmll
bGRzLgoKIyMjIEpTT04KCi0gW0dzb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9n
b29nbGUvZ3NvbikgLSBHc29uIGlzIGEgSmF2YSBsaWJyYXJ5IHVzZWQgZm9y
IHNlcmlhbGl6aW5nIGFuZCBkZXNlcmlhbGl6aW5nIEphdmEgb2JqZWN0cyBm
cm9tIGFuZCBpbnRvIEpTT04uCi0gW0phY2tzb24gSlNPTiBQcm9jZXNzb3Jd
KGh0dHBzOi8vZ2l0aHViLmNvbS9GYXN0ZXJYTUwvamFja3NvbikgLSBIaWdo
LXBlcmZvcm1hbmNlIEpTT04gcHJvY2Vzc29yLgotIFtNb3NoaV0oaHR0cHM6
Ly9naXRodWIuY29tL3NxdWFyZS9tb3NoaSkgLSBBIG1vZGVybiBKU09OIGxp
YnJhcnkgZm9yIEFuZHJvaWQgYW5kIEphdmEuCiMjIyBDcmFzaCBtb25pdG9y
aW5nCgotIFtGYWJyaWMgQ3Jhc2hseXRpY3NdKGh0dHBzOi8vZ2V0LmZhYnJp
Yy5pby8pIC0gRWFzeSBjcmFzaCByZXBvcnRpbmcgc29sdXRpb24uCi0gW0hv
Y2tleUFwcF0oaHR0cHM6Ly93d3cuaG9ja2V5YXBwLm5ldC8pIC0gRGlzdHJp
YnV0aW9uLCBDcmFzaCBSZXBvcnRzLCBGZWVkYmFjayBhbmQgQW5hbHl0aWNz
Ci0gW1NwbHVuayBNSU5UXShodHRwczovL21pbnQuc3BsdW5rLmNvbS8pIC0g
TW9uaXRvcmluZywgQ3Jhc2ggUmVwb3J0cywgUmVhbCB0aW1lIGRhdGEsIFN0
YXRpc3RpYy4KLSBbQnVnc25hZ10oaHR0cHM6Ly93d3cuYnVnc25hZy5jb20v
KSAtIENyb3NzIHBsYXRmb3JtIGVycm9yIG1vbml0b3JpbmcuIEZyZWUgdGll
ci4gU3VwcG9ydCBmb3IgU0RLICYgTkRLLiBFcnJvciByZXBvcnRzIGluY2x1
ZGUgZGF0YSBvbiBkZXZpY2UsIHJlbGVhc2UsIHVzZXIsIGFuZCBhbGxvd3Mg
YXJiaXRyYXJ5IGRhdGEuCi0gW0NhdGNob10oaHR0cHM6Ly9naXRodWIuY29t
L2FsaGF6bXkxMy9DYXRjaG8pIC0gTm8gRm9yY2UgQ2xvc2UgYW55IG1vcmUu
Ci0gW0FwdGVsaWdlbnRdKGh0dHBzOi8vd3d3LmFwdGVsaWdlbnQuY29tLykg
LSBDcm9zcyBwbGF0Zm9ybSBjcmFzaCByZXBvcnRpbmcvYW5hbHl0aWNzIHNv
bHV0aW9uLiBTdXBwb3J0cyBOREsgbG9nLgotIFtJbnN0YWJ1Z10oaHR0cHM6
Ly9pbnN0YWJ1Zy5jb20vKSAtIEJ1ZyByZXBvcnRpbmcsIENyYXNoIFJlcG9y
dGluZywgSW4tYXBwIEZlZWRiYWNrLgoKIyMjIE5ldHdvcmtpbmcKCi0gW0lv
bl0oaHR0cHM6Ly9naXRodWIuY29tL2tvdXNoL2lvbikgLSBHb29kIG5ldHdv
cmtpbmcgbGlicmFyeSBmb3IgYW5kcm9pZC4KLSBbT2tIdHRwXShodHRwczov
L2dpdGh1Yi5jb20vc3F1YXJlL29raHR0cCkgLSBBbiBIVFRQK1NQRFkgY2xp
ZW50IGZvciBBbmRyb2lkIGFuZCBKYXZhIGFwcGxpY2F0aW9ucy4KLSBbUm9i
b1NwaWNlXShodHRwczovL2dpdGh1Yi5jb20vc3RlcGhhbmVuaWNvbGFzL3Jv
Ym9zcGljZSkgLSBMaWJyYXJ5IHRoYXQgbWFrZXMgd3JpdGluZyBhc3luY2hy
b25vdXMgbmV0d29yayByZXF1ZXN0cyBlYXN5LgotIFtJY2VOZXRdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9hbnRvbjQ2L0ljZU5ldCkgLSBGYXN0LCBTaW1wbGUg
YW5kIEVhc3kgTmV0d29ya2luZyBmb3IgQW5kcm9pZAotIFtBbmRyb2lkIFZv
bGxleV0oaHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vdHJhaW5pbmcv
dm9sbGV5LykgLSBPZmZpY2lhbCBBbmRyb2lkIEhUVFAgbGlicmFyeSB0aGF0
IG1ha2VzIG5ldHdvcmtpbmcgZm9yIGVhc2llciBhbmQgZmFzdGVyLgotIFtJ
Y2VTb2FwXShodHRwczovL2dpdGh1Yi5jb20vQWxleEdpbGxlcmFuL0ljZVNv
YXApIC0gRWFzeSwgYXN5bmNocm9ub3VzLCBhbm5vdGF0aW9uLWJhc2VkIFNP
QVAgZm9yIEFuZHJvaWQuCi0gW25vZGUtYW5kcm9pZF0oaHR0cHM6Ly9naXRo
dWIuY29tL0luc3RhbnRXZWJQMlAvbm9kZS1hbmRyb2lkKSAtIFJ1biBOb2Rl
LmpzIG9uIEFuZHJvaWQuCi0gW0hhcHB5RG5zXShodHRwczovL2dpdGh1Yi5j
b20vcWluaXUvaGFwcHktZG5zLWFuZHJvaWQpIC0gQSBEbnMgbGlicmFyeSwg
dXNlciBjYW4gdXNlIGN1c3RvbSBkbnMgc2VydmVyLCBkbnNwb2QgaHR0cGRu
cy4gT25seSBzdXBwb3J0IEEgcmVjb3JkLgotIFtSRVNUTW9ja10oaHR0cHM6
Ly9naXRodWIuY29tL2FuZHJ6ZWpjaG0vUkVTVE1vY2spIC0gSFRUUCBXZWIg
c2VydmVyIGZvciBtb2NraW5nIEFQSSByZXNwb25zZXMgaW4gQW5kcm9pZCBJ
bnN0cnVtZW50YXRpb24gdGVzdHMuCi0gW0Zhc3QtQW5kcm9pZC1OZXR3b3Jr
aW5nXShodHRwczovL2dpdGh1Yi5jb20vYW1pdHNoZWtoYXJpaXRiaHUvRmFz
dC1BbmRyb2lkLU5ldHdvcmtpbmcpIC0gQSBDb21wbGV0ZSBGYXN0IEFuZHJv
aWQgTmV0d29ya2luZyBMaWJyYXJ5IHRoYXQgYWxzbyBzdXBwb3J0IEhUVFAv
Mi4KCiMjIyBMb2dnZXIKLSBbbG9nZ2VyXShodHRwczovL2dpdGh1Yi5jb20v
b3JoYW5vYnV0L2xvZ2dlcikgLSBTaW1wbGUsIHByZXR0eSBhbmQgcG93ZXJm
dWwgbG9nZ2VyIGZvciBhbmRyb2lkCi0gW3RpbWJlcl0oaHR0cHM6Ly9naXRo
dWIuY29tL0pha2VXaGFydG9uL3RpbWJlcikgLSBBIGxvZ2dlciB3aXRoIGEg
c21hbGwsIGV4dGVuc2libGUgQVBJIHdoaWNoIHByb3ZpZGVzIHV0aWxpdHkg
b24gdG9wIG9mIEFuZHJvaWQncyBub3JtYWwgTG9nIGNsYXNzLgotIFtMb2dn
aW5nSW50ZXJjZXB0b3JdKGh0dHBzOi8vZ2l0aHViLmNvbS9paHNhbmJhbC9M
b2dnaW5nSW50ZXJjZXB0b3IpIC0gQW4gT2tIdHRwIGludGVyY2VwdG9yIHdo
aWNoIHByZXR0eSBsb2dzIHJlcXVlc3QgYW5kIHJlc3BvbnNlIGRhdGEuCi0g
W0J1Z2ZlbmRlcl0oaHR0cHM6Ly9naXRodWIuY29tL2J1Z2ZlbmRlci9CdWdm
ZW5kZXJTREstYW5kcm9pZC1zYW1wbGUpIC0gVXBsb2FkIHlvdXIgbG9ncyBh
bmQgY2hlY2sgdGhlbSBvbmxpbmUsIHNwZWNpYWxseSBtYWRlIGZvciBtb2Jp
bGUKLSBbRXp5TG9nZ2VyXShodHRwczovL2dpdGh1Yi5jb20vYWZpcWlxbWFs
L0V6eUxvZ2dlcikgLSBTaW1wbGUgTGlnaHR3ZWlnaHQgbG9nZ2VyCi0gW0xv
Z2JhY2sgQW5kcm9pZF0oaHR0cHM6Ly9naXRodWIuY29tL3RvbnkxOS9sb2di
YWNrLWFuZHJvaWQpIC0gTG9nYmFjayBwb3J0IHRvIEFuZHJvaWQgd2hpY2gg
cHJvdmlkZXMgYSBoaWdobHkgY29uZmlndXJhYmxlIGxvZ2dpbmcgZnJhbWV3
b3JrIGZvciBBbmRyb2lkIGFwcHMuCgojIyMgTm90aWZpY2F0aW9ucwotIFth
bmRyb2lkLXJlbW90ZS1ub3RpZmljYXRpb25zXShodHRwczovL2dpdGh1Yi5j
b20va2Fpd2ludGVyL2FuZHJvaWQtcmVtb3RlLW5vdGlmaWNhdGlvbnMpIC0g
UHVsbHMgbm90aWZpY2F0aW9ucyBmcm9tIGEgcmVtb3RlIEpTT04gZmlsZSBh
bmQgc2hvd3MgdGhlbSBpbiB5b3VyIGFwcC4KLSBbQW5kcm9pZCBIZWFydEJl
YXQgRml4ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9qb2FvcGVkcm9uYXJkYXJp
L0FuZHJvaWRIZWFydEJlYXRGaXhlcikgLSBXYXkgdG8gc2V0IGhlYXJ0YmVh
dCBpbnRlcnZhbCBhbmQgdXNlcnMgcmVjZWl2ZSBQdXNoTm90aWZpY2F0aW9u
cyBmcm9tIEdDTS4KCiMjIyBEYXRhYmFzZQotIFtDdXBib2FyZF0oaHR0cHM6
Ly9iaXRidWNrZXQub3JnL2xpdHRsZXJvYm90cy9jdXBib2FyZCkgLSBBY2Nl
c3MgdGhlIHNxbGl0ZSBlYXNpbHkgdmlhIGRpcmVjdCBkYXRhYmFzZSBhY2Nl
c3Mgb3IgdGhyb3VnaCB0aGUgQ29udGVudFByb3ZpZGVyIGZyYW1ld29yay4K
LSBbRGJJbnNwZWN0b3JdKGh0dHBzOi8vZ2l0aHViLmNvbS9pbmZpbnVtL2Fu
ZHJvaWRfZGJpbnNwZWN0b3IpIC0gUHJvdmlkZXMgYSBzaW1wbGUgd2F5IHRv
IHZpZXcgdGhlIGNvbnRlbnRzIG9mIHRoZSBpbi1hcHAgZGF0YWJhc2UgZm9y
IGRlYnVnZ2luZyBwdXJwb3Nlcy4KLSBbU1FMaXRlIEFzc2V0IEhlbHBlcl0o
aHR0cHM6Ly9naXRodWIuY29tL2pnaWxmZWx0L2FuZHJvaWQtc3FsaXRlLWFz
c2V0LWhlbHBlcikgLSBtYW5hZ2UgZGF0YWJhc2UgY3JlYXRpb24gYW5kIHZl
cnNpb24gbWFuYWdlbWVudCB1c2luZyBhbiBhcHBsaWNhdGlvbidzIHJhdyBh
c3NldCBmaWxlcy4KLSBbUmVhbG1dKGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFs
bS9yZWFsbS1qYXZhKSAtIFRoZSBhbHRlcm5hdGl2ZSB0byBTUUxpdGUgYW5k
IE9STXM6IFNpbXBsZSwgbW9kZXJuIGFuZCBmYXN0ISBPYmplY3Qgb3JpZW50
ZWQgQVBJIGFuZCBtdWx0aSBwbGF0Zm9ybSBzdXBwb3J0LgotIFtSZWFsbSBB
c3NldCBIZWxwZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9lZ2doZWFkZ2FtZXMv
YW5kcm9pZC1yZWFsbS1hc3NldC1oZWxwZXIpIC0gQ29waWVzIGEgcmVhbG0g
ZGF0YWJhc2UgZnJvbSB0aGUgYXBrIGFzc2V0cyBmb2xkZXIuIEVmZmljaWVu
dGx5IGhhbmRsZXMgdmVyc2lvbmluZyBvZiByZWFkLW9ubHkgcmVhbG0gZGF0
YWJhc2VzLgotIFtSZXN0b3JhYmxlU1FMaXRlRGF0YWJhc2VdKGh0dHBzOi8v
Z2l0aHViLmNvbS95YWExMTAvUmVzdG9yYWJsZVNRTGl0ZURhdGFiYXNlKSAt
IEEgd3JhcHBlciB0byByZXBsaWNhdGUgYW5kcm9pZCdzIFNRTGl0ZURhdGFi
YXNlIHdpdGggcmVzdG9yaW5nIGNhcGFiaWxpdHkuCi0gW05pdHJpdGUgRGF0
YWJhc2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9kaXppdGFydC9uaXRyaXRlLWRh
dGFiYXNlKSAtIEEgTm9TUUwgZW1iZWRkZWQgZG9jdW1lbnQgc3RvcmUgZm9y
IEFuZHJvaWQgd2l0aCBNb25nb0RiIGxpa2UgQVBJLgoKIyMjIyBPUk0KCi0g
W3JlcXVlcnldKGh0dHBzOi8vZ2l0aHViLmNvbS9yZXF1ZXJ5L3JlcXVlcnkp
IC0gQ29tcGlsZSB0aW1lIE9STSBhbmQgU1FMIHF1ZXJ5IGxpYnJhcnkgZm9y
IEphdmEgJiBBbmRyb2lkLgotIFtHcmVlbkRBT10oaHR0cDovL2dyZWVucm9i
b3Qub3JnL2dyZWVuZGFvLykgLSBMaWdodCAmIGZhc3QgT1JNIHNvbHV0aW9u
LgotIFtPUk1MaXRlXShodHRwOi8vb3JtbGl0ZS5jb20vc3FsaXRlX2phdmFf
YW5kcm9pZF9vcm0uc2h0bWwpIC0gTGlnaHR3ZWlnaHQgT1JNIEphdmEgcGFj
a2FnZSBmb3IgSkRCQyBhbmQgQW5kcm9pZC4KLSBbQWN0aXZlQW5kcm9pZF0o
aHR0cDovL3d3dy5hY3RpdmVhbmRyb2lkLmNvbSkgLSBBY3RpdmUgcmVjb3Jk
IHN0eWxlIE9STS4KLSBbU3VnYXIgT1JNXShodHRwOi8vc2F0eWFuLmdpdGh1
Yi5pby9zdWdhci8pIC0gSW5zYW5lbHkgZWFzeSB3YXkgdG8gd29yayB3aXRo
IEFuZHJvaWQgRGF0YWJhc2VzLgotIFtEQkZsb3ddKGh0dHBzOi8vZ2l0aHVi
LmNvbS9hZ3Jvc25lci9EQkZsb3cpIC0gRmFzdCBhbmQgcG93ZXJmdWwgT1JN
IHdpdGggY29tcGlsZS10aW1lIGFubm90YXRpb24gcHJvY2Vzc2luZy4KLSBb
TmV4dXNEYXRhXShodHRwczovL2dpdGh1Yi5jb20vZGtoYXJyYXQvTmV4dXNE
YXRhKSAtIE9iamVjdCBncmFwaCBhbmQgcGVyc2lzdGVuY2UgZnJhbWV3b3Jr
IGZvciBBbmRyb2lkLgotIFtTaW1wbGVOb1NRTF0oaHR0cHM6Ly9naXRodWIu
Y29tL0plYXJpbC9TaW1wbGVOb1NRTCkgLSBBIHNpbXBsZSBOb1NRTCBjbGll
bnQgZm9yIEFuZHJvaWQuIE1lYW50IGFzIGEgZG9jdW1lbnQgc3RvcmUgdXNp
bmcga2V5L3ZhbHVlIHBhaXJzIGFuZCBzb21lIHJ1ZGltZW50YXJ5IHF1ZXJ5
aW5nLiBVc2VmdWwgZm9yIGF2b2lkaW5nIHRoZSBoYXNzbGUgb2YgU1FMIGNv
ZGUuCi0gW1J4U2ltcGxlTm9TUUxdKGh0dHBzOi8vZ2l0aHViLmNvbS94bWFy
dGxhYnMvUnhTaW1wbGVOb1NRTCkgLSBSZWFjdGl2ZSBleHRlbnNpb25zIGZv
ciBTaW1wbGVOb1NRTC4gTWFuaXB1bGF0ZSBlbnRpdGllcyB1c2luZyBPYnNl
cnZhYmxlcy4KCiMjIyBSRVNUCgotIFtSZXRyb2ZpdF0oaHR0cHM6Ly9zcXVh
cmUuZ2l0aHViLmlvL3JldHJvZml0LykgLSBSZXRyb2ZpdCB0dXJucyB5b3Vy
IFJFU1QgQVBJIGludG8gYSBKYXZhIGludGVyZmFjZS4KLSBbU3ByaW5nIGZv
ciBBbmRyb2lkIC0gUmVzdCBUZW1wbGF0ZV0oaHR0cHM6Ly9naXRodWIuY29t
L3NwcmluZy1wcm9qZWN0cy9zcHJpbmctYW5kcm9pZCkgLSBBIFJlc3QgQ2xp
ZW50IGZvciBBbmRyb2lkLgoKIyMjIFRlc3RpbmcKCi0gW1JvYm90aXVtXSho
dHRwczovL2dpdGh1Yi5jb20vcm9ib3RpdW10ZWNoL3JvYm90aXVtKSAtIFRl
c3QgYXV0b21hdGlvbiBmcmFtZXdvcmsgZm9yIGJsYWNrLWJveCBVSSB0ZXN0
cy4KLSBbUm9ib2xldHJpY10oaHR0cDovL3JvYm9sZWN0cmljLm9yZy8pIC0g
VW5pdCB0ZXN0IGZyYW1ld29yayB0byBydW4gdGVzdHMgaW5zaWRlIHRoZSBK
Vk0gb24geW91ciB3b3Jrc3RhdGlvbiwgbm90IGluIHRoZSBlbXVsYXRvci4K
LSBbQXNzZXJ0SiBBbmRyb2lkXShodHRwczovL2dpdGh1Yi5jb20vc3F1YXJl
L2Fzc2VydGotYW5kcm9pZCkgLSBBc3NlcnRKIGFzc2VydGlvbnMgZ2VhcmVk
IHRvd2FyZHMgQW5kcm9pZC4KLSBbR3JlZW4gQ29mZmVlXShodHRwczovL2dp
dGh1Yi5jb20vbWF1cmljaW90b2duZXJpL2dyZWVuLWNvZmZlZSkgLSBSdW4g
eW91ciBDdWN1bWJlciB0ZXN0cyBpbiB5b3VyIEFuZHJvaWQgaW5zdHJ1bWVu
dGF0aW9uIHRlc3RzLgoKIyMjIFRyYWNraW5nCgotIFtNb2JpbGVBcHBUcmFj
a2luZ10oaHR0cHM6Ly93d3cudHVuZS5jb20vKSAtIFRyYWNraW5nIHlvdXIg
bWFya2V0aW5nIGNhbXBhaWducyBhY3Jvc3MgbXVsdGlwbGUgYWQgbmV0d29y
a3MuCi0gW01peHBhbmVsXShodHRwczovL21peHBhbmVsLmNvbS8pIC0gQW5h
bHl0aWNzIHBsYXRmb3JtIHRvIGFuYWx5emUgdGhlIHVzZXJzLgotIFtDb3Vu
dGx5XShodHRwczovL2NvdW50Lmx5KSAtIE9wZW4gc291cmNlIG1vYmlsZSAm
IHdlYiBhbmFseXRpY3MsIHB1c2ggbm90aWZpY2F0aW9ucyBhbmQgY3Jhc2gg
cmVwb3J0aW5nIHBsYXRmb3JtLCBiYXNlZCBvbiBOb2RlLmpzLCBNb25nb0RC
IGFuZCBMaW51eC4KLSBbQ2xldmVyVGFwXShodHRwczovL2NsZXZlcnRhcC5j
b20pIC0gQW5hbHl0aWNzIHBsYXRmb3JtIGFuZCB1c2VyLWVuZ2FnZW1lbnQg
cGxhdGZvcm0gd2l0aCAxIG1pbGxpb24gZnJlZSBldmVudHMKCiMjIyBNYXBz
CgotIFtHb29nbGUtRGlyZWN0aW9ucy1BbmRyb2lkXShodHRwczovL2dpdGh1
Yi5jb20vamQtYWxleGFuZGVyL0dvb2dsZS1EaXJlY3Rpb25zLUFuZHJvaWQp
IC0gQWxsb3dzIHlvdSB0byBjYWxjdWxhdGUgdGhlIGRpcmVjdGlvbiBiZXR3
ZWVuIHR3byBsb2NhdGlvbnMgYW5kIGRpc3BsYXkgdGhlIHJvdXRlIG9uIGEg
R29vZ2xlIE1hcCB1c2luZyB0aGUgR29vZ2xlIERpcmVjdGlvbnMgQVBJLgot
IFtBbmRyb2lkIE1hcHMgRXh0ZW5zaW9uc10oaHR0cHM6Ly9naXRodWIuY29t
L21nNm1hY2llai9hbmRyb2lkLW1hcHMtZXh0ZW5zaW9ucykgLSBFeHRlbmRp
bmcgY2FwYWJpbGl0aWVzIG9mIEdvb2dsZSBNYXBzIEFuZHJvaWQgQVBJIHYy
LCBhZGRpbmcgbWFya2VyIGNsdXN0ZXJpbmcgYW1vbmcgb3RoZXIgdGhpbmdz
Ci0gW01hcFNjYWxlVmlld10oaHR0cHM6Ly9naXRodWIuY29tL3BlbmdyYWQv
TWFwU2NhbGVWaWV3KSAtIFNjYWxlIGJhciBmb3IgR29vZ2xlIE1hcHMgQW5k
cm9pZCBBUEkKLSBbR0xNYXBdKGh0dHBzOi8vZ2xvYnVzLnNvZnR3YXJlKSAt
IENyb3NzcGxhdGZvcm0gb2ZmbGluZSB2ZWN0b3IgbWFwIHdpdGggTWFwQ1NT
IHN0eWxpbmcuIE9mZmxpbmUgc2VhcmNoIGFuZCBvZmZsaW5lIG5hdmlnYXRp
b24gYXJlIGluY2x1ZGVkLgoKIyMjIFV0aWxpdHkKLSBbQ29uY2VhbCBTaGFy
ZWRQcmVmZXJlbmNlc10oaHR0cHM6Ly9naXRodWIuY29tL2FmaXFpcW1hbC9T
aGFyZWRDaGFtYmVyKSAtIFNlY3VyZWQgUHJlZmVyZW5jZXMgdXNpbmcgRmFj
ZWJvb2sgU2VjdXJlIEVuY3J5cHRpb24gY2FsbGVkIENvbmNlYWwuCi0gW0V2
ZW50QnVzXShodHRwOi8vZ3JlZW5yb2JvdC5naXRodWIuaW8vRXZlbnRCdXMv
KSAtIEV2ZW50QnVzIGlzIGEgbGlicmFyeSB0aGF0IHNpbXBsaWZpZXMgY29t
bXVuaWNhdGlvbiBiZXR3ZWVuIGRpZmZlcmVudCBwYXJ0cyBvZiB5b3VyIGFw
cGxpY2F0aW9uLgotIFtPdHRvXShodHRwczovL2dpdGh1Yi5jb20vc3F1YXJl
L290dG8pIC0gRXZlbnQgQnVzIGZvciBBbmRyb2lkLgotIFtXZWFrIGhhbmRs
ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9iYWRvby9hbmRyb2lkLXdlYWstaGFu
ZGxlcikgLSBNZW1vcnkgc2FmZXIgaW1wbGVtZW50YXRpb24gb2YgYW5kcm9p
ZC5vcy5IYW5kbGVyLgotIFtCeXRlIEJ1ZGR5XShodHRwOi8vYnl0ZWJ1ZGR5
Lm5ldCkgLSBSdW50aW1lIGNvZGUgZ2VuZXJhdGlvbiBsaWJyYXJ5IHdpdGgg
c3VwcG9ydCBmb3IgQW5kcm9pZC4KLSBbU2VjdXJlIFByZWZlcmVuY2UgTWFu
YWdlcl0oaHR0cHM6Ly9naXRodWIuY29tL3ByYXNoYW50c29sYW5raTMvU2Vj
dXJlLVByZWYtTWFuYWdlcikgLSBTZWN1cmUgUHJlZmVyZW5jZSBNYW5hZ2Vy
IGZvciBhbmRyb2lkLiBJdCB1c2VzIHZhcmlvdXMgRW5jcnlwdGlvbiB0byBw
cm90ZWN0IHlvdXIgYXBwbGljYXRpb24ncyBTaGFyZWQgUHJlZmVyZW5jZXMu
Ci0gW0xlYWtDYW5hcnldKGh0dHBzOi8vZ2l0aHViLmNvbS9zcXVhcmUvbGVh
a2NhbmFyeSkgLSBDYXRjaCBtZW1vcnkgbGVha3MgYXMgdGhleSBvY2N1ci4K
LSBbRHJla2thcl0oaHR0cHM6Ly9naXRodWIuY29tL2Nvc2h4L2RyZWtrYXIp
IC0gQW4gQW5kcm9pZCBldmVudCBidXMgZm9yIFdlYlZpZXcgYW5kIEpTLgot
IFtBbmRyb2w0Yl0oaHR0cHM6Ly9naXRodWIuY29tL3NoNGhpbi9BbmRyb2w0
YikgLSBBIHZtIGZvciBhc3Nlc3NpbmcgYW5kcm9pZCBhcHBsaWNhdGlvbnMu
Ci0gW0Ryb2lkTVZQXShodHRwczovL2dpdGh1Yi5jb20vYW5kcnplamNobS9E
cm9pZE1WUCkgLSBBbmRyb2lkIGxpYnJhcnkgdG8gaGVscCB5b3UgaW5jb3Jw
b3JhdGUgTVZQIGFsb25nIHdpdGggUGFzc2l2ZSBWaWV3IGFuZCBQcmVzZW50
YXRpb24gTW9kZWwgcGF0dGVybnMgaW50byB5b3VyIGFwcC4KLSBbRWFzeURl
dmljZUluZm9dKGh0dHBzOi8vZ2l0aHViLmNvbS9uaXNydWx6L2Vhc3lkZXZp
Y2VpbmZvKSAtIEdldCBkZXZpY2UgaW5mb3JtYXRpb24gaW4gYSBzdXBlciBl
YXN5IHdheS4KLSBbU2h1dHRlci1BbmRyb2lkXShodHRwczovL2dpdGh1Yi5j
b20vbGV2aWJvc3RpYW4vU2h1dHRlci1BbmRyb2lkKSAtIENhcHR1cmUgcGhv
dG9zL3ZpZGVvcyBmcm9tIGRldmljZSBjYW1lcmEgb3IgZ2V0IHBob3Rvcy92
aWRlbyBmcm9tIGdhbGxlcnkgYXBwIHdpdGggbm8gcnVudGltZSBwZXJtaXNz
aW9ucyBuZWVkZWQuCi0gW1ZhbGlkYXRvcl0oaHR0cHM6Ly9naXRodWIuY29t
L2FuZGVyc2NoZW93L1ZhbGlkYXRvcikgLSBBbiB1dGlsaXRpZXMgY2xhc3Mg
dG8gdmFsaWRhdGUgdGV4dCBpbnNpZGUgVGV4dElucHV0TGF5b3V0LgotIFtL
ZXlib2FyZCBWaXNpYmlsaXR5IEV2ZW50XShodHRwczovL2dpdGh1Yi5jb20v
dmluaWNpdXNtby9rZXlib2FyZC12aXNpYmlsaXR5LWV2ZW50LWFuZHJvaWQv
KSAtIEEgRFNMIHRvIGhhbmRsZSBzb2Z0IGtleWJvYXJkIHZpc2liaWxpdHkg
Y2hhbmdlIGV2ZW50LgotIFtUaW1lSXRdKGh0dHBzOi8vZ2l0aHViLmNvbS95
YXNob3ZhcmRoYW45OS90aW1laXQpIC0gQSBzdG9wd2F0Y2ggbGlicmFyeSBm
b3IgYW5kcm9pZCB3aGljaCBtYWtlcyBpdCBlYXN5IHRvIHN0YXJ0LCBwYXVz
ZSwgZGlzcGxheSBhbmQgbWFpbnRhaW4gbXVsdGlwbGUgc3RvcHdhdGNoZXMg
aW4gYW4gYXBwLgotIFtSZWFjdG9yXShodHRwczovL2dpdGh1Yi5jb20vb2t5
MmFiYmFzL3JlYWN0b3IpIC0gUmVhY3RvciBpcyBhIGZhc3QgYW5kIHNlY3Vy
ZSBrZXktdmFsdWUgbGlicmFyeSBmb3IgQW5kcm9pZC4KIAojIyMgRGVidWdn
aW5nIFRvb2xzCgotIFtMaW54XShodHRwczovL2dpdGh1Yi5jb20vcGVkcm92
Z3MvTHlueCkgLSBTaG93IGxvZ2NhdCBpbnNpZGUgdGhlIGRldmljZSBmb3Ig
ZGVidWcgYnVpbGRzCi0gW1NjYWxwZWxdKGh0dHBzOi8vZ2l0aHViLmNvbS9K
YWtlV2hhcnRvbi9zY2FscGVsKSAtIFZpZXcgdGhlIGVudGlyZSBoaWVyYXJj
aHkgaW4gM2QgaW4gdGhlIHBob25lLgotIFtTdGV0aG9dKGh0dHBzOi8vZ2l0
aHViLmNvbS9mYWNlYm9vay9zdGV0aG8pIC0gRGVidWcgaGllcmFyY2h5IGFu
ZCBuZXR3b3JrIGZyb20gY2hyb21lLgotIFtBbmRyb2lkIERlYnVnIERhdGFi
YXNlXShodHRwczovL2dpdGh1Yi5jb20vYW1pdHNoZWtoYXJpaXRiaHUvQW5k
cm9pZC1EZWJ1Zy1EYXRhYmFzZSkgLSBBbmRyb2lkIERlYnVnIERhdGFiYXNl
IGlzIGEgcG93ZXJmdWwgbGlicmFyeSBmb3IgZGVidWdnaW5nIGRhdGFiYXNl
cyBhbmQgc2hhcmVkIHByZWZlcmVuY2VzIGluIEFuZHJvaWQgYXBwbGljYXRp
b25zLgotIFtBbmRyb2lkIERlYnVnIEJyaWRnZSAtIEFEQl0oaHR0cHM6Ly9n
aXRodWIuY29tL216bG9naW4vYXdlc29tZS1hZGIvYmxvYi9tYXN0ZXIvUkVB
RE1FLmVuLm1kKSAtIGEgY29tbWFuZC1saW5lIHRvb2wgdG8gYXNzaXN0IGlu
IGRlYnVnZ2luZyBBbmRyb2lkLXBvd2VyZWQgZGV2aWNlcwotIFtBREIgRW5o
YW5jZWRdKGh0dHBzOi8vZ2l0aHViLmNvbS9hc2hpc2hiL2FkYi1lbmhhbmNl
ZCkgLSBhIGNvbW1hbmQtbGluZSB3cmFwcGVyIGFyb3VuZCBBREIgZm9yIGRl
dmVsb3BlcnMsIHNvIHRoYXQsIGRldmVsb3BlcnMgZG9uJ3QgaGF2ZSB0byBy
ZW1lbWJlciBlc290ZXJpYyB2ZXJzaW9uLWRlcGVuZGVudCBjb21tYW5kcwot
IFtQaWRjYXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9KYWtlV2hhcnRvbi9waWRj
YXQpIC0gYSBjb2xvcmVkIGNvbW1hbmQtbGluZSBBREIgd3JhcHBlciB0aGF0
IG9ubHkgc2hvd3MgbG9nIGVudHJpZXMgZm9yIGEgc3BlY2lmaWMgYXBwbGlj
YXRpb24gcGFja2FnZQotIFtBcHBTcGVjdG9yXShodHRwczovL2FwcHNwZWN0
b3IuY29tKSAtIFJlbW90ZSBBbmRyb2lkIGFuZCBpT1MgZGVidWdnaW5nIGFu
ZCBkYXRhIGNvbGxlY3Rpb24gc2VydmljZS4gWW91IGNhbiBkZWJ1ZyBuZXR3
b3JraW5nLCBsb2dzLCBTUUxpdGUgYW5kIG1vY2sgZGV2aWNlJ3MgZ2VvIGxv
Y2F0aW9uLgoKCiMjIyBXaXJlbGVzcwoKLSBbU21hcnRHYXR0TGliXShodHRw
czovL2dpdGh1Yi5jb20vbW92aXNlbnMvU21hcnRHYXR0TGliKSAtIFNpbXBs
aWZpZXMgdGhlIHdvcmsgd2l0aCBCbHVldG9vdGggU01BUlQgZGV2aWNlcyAo
YS5rLmEuIEJsdWV0b290aCBMb3cgRW5lcmd5IGluIEJsdWV0b290aCA0LjAp
LgoKIyMjIENoYXQgJiBNZXNzYWdpbmcKCi0gW0FwcGxvemljIEFuZHJvaWQg
Q2hhdCBTREtdKGh0dHBzOi8vZ2l0aHViLmNvbS9BcHBMb3ppYy9BcHBsb3pp
Yy1BbmRyb2lkLVNESykgLSBBbmRyb2lkIENoYXQgYW5kIE1lc3NhZ2luZyBT
REsgZm9yIGFkZGluZyByZWFsIHRpbWUgY2hhdCBhbmQgaW4tYXBwIG1lc3Nh
Z2luZyBpbnRvIHlvdXIgYW5kcm9pZCBhcHBsaWNhdGlvbi4KLSBbUWlzY3Vz
IFNES10oaHR0cHM6Ly9naXRodWIuY29tL3Fpc2N1cy9xaXNjdXMtc2RrLWFu
ZHJvaWQpIC0gUWlzY3VzIFNESyBpcyBhIGxpZ2h0d2VpZ2h0IGFuZCBwb3dl
cmZ1bCBhbmRyb2lkIGNoYXQgbGlicmFyeS4gUWlzY3VzIFNESyB3aWxsIGFs
bG93IHlvdSB0byBlYXNpbHkgaW50ZWdyYXRpbmcgUWlzY3VzIGVuZ2luZSB3
aXRoIHlvdXIgYXBwcyB0byBtYWtlIGNvb2wgY2hhdHRpbmcgYXBwbGljYXRp
b24uCi0gW0tvbW11bmljYXRlIExpdmUgQ2hhdCBTREtdKGh0dHBzOi8vZ2l0
aHViLmNvbS9Lb21tdW5pY2F0ZS1pby9Lb21tdW5pY2F0ZS1BbmRyb2lkLUNo
YXQtU0RLKSAtIEtvbW11bmljYXRlIHByb3ZpZGVzIG9wZW4gc291cmNlIGxp
dmUgY2hhdCBzZGsgaW4gYW5kcm9pZC4gS29tbXVuaWNhdGUgbGV0cyB5b3Ug
YWRkIHJlYWwgdGltZSBsaXZlIGNoYXQgYW5kIGluLWFwcCBtZXNzYWdpbmcg
aW4geW91ciBtb2JpbGUgKGFuZHJvaWQsIGlPUykgYXBwbGljYXRpb25zIGFu
ZCB3ZWJzaXRlIGZvciBjdXN0b21lciBzdXBwb3J0LgotIFtDb21ldENoYXQg
Vm9pY2UsIFZpZGVvIGFuZCBUZXh0IENoYXQgU0RLIHdpdGggVUldKGh0dHBz
Oi8vZ2l0aHViLmNvbS9jb21ldGNoYXQtZ28vYW5kcm9pZC1jaGF0LXNkay1k
ZW1vKSAtIEFkZCB2b2ljZSwgdmlkZW8gYW5kIHRleHQgY2hhdCB0byB5b3Vy
IGFwcCAoYW5kIHdlYnNpdGUpIGluIG1pbnV0ZXMgdXNpbmcgQ29tZXRDaGF0
LiBDb21ldENoYXQncyBTREsgaW5jbHVkZXMgYSBjb21wbGV0ZSByZWFkeSBV
SSBzbyB0aGF0IHlvdSBkb24ndCBoYXZlIHRvIHNwZW5kIGFueSB0aW1lIGJ1
aWxkaW5nIG9uZSEgVGhhdCdzIG5vdCBhbGwsIENvbWV0Q2hhdCBoYXMgb3V0
LW9mLXRoZS1ib3ggc3VwcG9ydCBmb3IgcmVhbC10aW1lIHRyYW5zbGF0aW9u
LCB3aGl0ZWJvYXJkcywgc2NyZWVuIHNoYXJpbmcsIGZyaWVuZHMgc3luYywg
cm9sZSBiYXNlZCBhY2Nlc3MgY29udHJvbCwgY3JlZGl0cyBkZWR1Y3Rpb24g
YW5kIG1vcmUuCi0gW0J1aWxkIGEgb25lLW9uLW9uZSBBbmRyb2lkIGNoYXQg
YXBwIHVzaW5nIEtvdGxpbl0oaHR0cHM6Ly93d3cuY29tZXRjaGF0LmNvbS90
dXRvcmlhbHMvYnVpbGQtb25lLW9uLW9uZS1jaGF0LWluLXlvdXItYW5kcm9p
ZC1hcHAtdXNpbmcta290bGluLykgLSBCdWlsZCBhIG9uZS1vbmUtb25lIEFu
ZHJvaWQgY2hhdCBhcHAgaW4gS290bGluIHdpdGhpbiBmZXcgbWludXRlcyB1
c2luZyBDb21ldENoYXQgUHJvLiBUaGlzIHR1dG9yaWFsIGRpc2N1c3NlcyB0
aGUgZmVhdHVyZXMgc3VjaCBhcyBsb2dpbiwgZ2V0dGluZyBsaXN0IG9mIGNv
bnRhY3RzLCB1c2VyIHByZXNlbmNlIGluZGljYXRvcnMsIHNlbmRpbmcvcmVj
ZWl2aW5nIG1lc3NhZ2VzIGV0Yy4KLSBbU3RyZWFtIENoYXRdKGh0dHBzOi8v
Z2V0c3RyZWFtLmlvL3R1dG9yaWFscy9hbmRyb2lkLWNoYXQvKSAtIENvbXBy
ZWhlbnNpdmUgU0RLICYgQ29tcG9uZW50cyBmb3IgcmVhbC10aW1lIGNoYXQs
IHBvd2VyZWQgYnkgW1N0cmVhbV0oaHR0cHM6Ly9nZXRzdHJlYW0uaW8vY2hh
dC8pLgotIFtBZGQgUHVzaCBOb3RpZmljYXRpb25zIHRvIFlvdXIgQW5kcm9p
ZCBDaGF0IEFwcCBVc2luZyBLb3RsaW5dKGh0dHBzOi8vd3d3LmNvbWV0Y2hh
dC5jb20vdHV0b3JpYWxzL2FuZHJvaWQtY2hhdC1wdXNoLW5vdGlmaWNhdGlv
bnMvKSAtIEFkZCBwdXNoIG5vdGlmaWNhdGlvbnMgaW4geW91ciBBbmRyb2lk
IGNoYXQgYXBwcyBpbiBLb3RsaW4gd2l0aCB0aGUgaGVscCBvZiBDb21ldENo
YXQgUHJvIGFuZCBGaXJlYmFzZSBDbG91ZCBNZXNzYWdpbmcgKEZDTSkuCgoj
IyMjIEN1c3RvbSBEaWFsb2cKCi0gW01lZGlhUmVjb3JkZXJEaWFsb2ddKGh0
dHBzOi8vZ2l0aHViLmNvbS9hbGhhem15MTMvTWVkaWFSZWNvcmRlckRpYWxv
ZykgLSBDdXN0b20gRGlhbG9nIHRvIHJlY29yZCBhdWRpbywgc3RvcmUgaXQg
YW5kIHBsYXkgaXQgaW4geW91ciBwaG9uZS4KLSBbSGlqcmlEYXRlUGlja2Vy
XShodHRwczovL2dpdGh1Yi5jb20vYWxoYXpteTEzL0hpanJpRGF0ZVBpY2tl
cikgLSBvZmZlcnMgYSBoaWpyaSAoSXNsYW1pYyBDYWxlbmRhcikgRGF0ZSBQ
aWNrZXIgZGVzaWduZWQgb24gR29vZ2xlJ3MgTWF0ZXJpYWwgRGVzaWduIFBy
aW5jaXBhbHMgRm9yIFBpY2tlcnMuCi0gW05vdHldKGh0dHBzOi8vZ2l0aHVi
LmNvbS9lbXJlMTUxMi9Ob3R5KSAtIEEgc2ltcGxlIGxpYnJhcnkgZm9yIGNy
ZWF0aW5nIGFuaW1hdGVkIGFsZXJ0cy9kaWFsb2dzL3dhcm5pbmdzLgoKIyMj
IFZlcnNpb24gQ2hlY2tpbmcKCiAtIFtBcHBVcGRhdGVyXShodHRwczovL2dp
dGh1Yi5jb20vamF2aWVyc2FudG9zL0FwcFVwZGF0ZXIpIC0gY29tcHJlaGVu
c2l2ZSBhbmQgZmVhdHVyZSByaWNoIGxpYnJhcnksIGluY2x1ZGluZyBzdXBw
b3J0IGZvciBjaGVja3MgYXQgQW1hem9uIGFuZCBGRHJvaWQuCiAtIFtHYW5k
YWxmXShodHRwczovL2dpdGh1Yi5jb20vYnRrZWxseS9nYW5kYWxmKSAtIGNv
bXByZWhlbnNpdmUgZmVhdHVyZXMgYW5kIGEgImNvbXBhbmlvbiIgaU9TIHNv
bHV0aW9uLgogLSBbU2lyZW5dKGh0dHBzOi8vZ2l0aHViLmNvbS9lZ2doZWFk
Z2FtZXMvU2lyZW4pIC0gZm9jdXNlZCBmZWF0dXJlIHNldCB0aGF0IG1pbWlj
a3MgdGhlIHBvcHVsYXIgaU9TIGxpYnJhcnkgb2YgdGhlIHNhbWUgbmFtZS4g
U3VwcG9ydHMgUGxheSBhbmQgQW1hem9uLgogLSBbRml0XShodHRwczovL2dp
dGh1Yi5jb20vS2VpdGhZb2tvbWEvRml0KSAtIHZlcnNpb24gY2hlY2tpbmcg
Y2FsbGJhY2sgZnJhbWV3b3JrIHdpdGggbm8gVUkuCgojIyMgRGF0ZSAmIFRp
bWUKCi0gW1RocmVlVGVuIEFuZHJvaWQgQmFja3BvcnRdKGh0dHBzOi8vZ2l0
aHViLmNvbS9KYWtlV2hhcnRvbi9UaHJlZVRlbkFCUCkgLSBBbiBhZGFwdGF0
aW9uIG9mIHRoZSBKU1ItMzEwIGJhY2twb3J0IGZvciBBbmRyb2lkLgotIFtK
b2RhLVRpbWUgQW5kcm9pZF0oaHR0cHM6Ly9naXRodWIuY29tL2RsZXcvam9k
YS10aW1lLWFuZHJvaWQpIC0gSm9kYS1UaW1lIGxpYnJhcnkgd2l0aCBBbmRy
b2lkIHNwZWNpYWxpemF0aW9uLgotIFtUcnVlIFRpbWVdKGh0dHBzOi8vZ2l0
aHViLmNvbS9pbnN0YWNhcnQvdHJ1ZXRpbWUtYW5kcm9pZCkgLSBBbmRyb2lk
IE5UUCB0aW1lIGxpYnJhcnkuIEdldCB0aGUgdHJ1ZSBjdXJyZW50IHRpbWUg
aW1wZXJ2aW91cyB0byBkZXZpY2UgY2xvY2sgdGltZSBjaGFuZ2VzLgoKIyMj
IFJ1bnRpbWUgUGVybWlzc2lvbnMKCi0gW1Blcm1pc3Npb24gRGlzcGF0Y2hl
cl0oaHR0cHM6Ly9naXRodWIuY29tL3Blcm1pc3Npb25zLWRpc3BhdGNoZXIv
UGVybWlzc2lvbnNEaXNwYXRjaGVyKSAtIFNpbXBsZSBhbm5vdGF0aW9uLWJh
c2VkIEFQSSB0byBoYW5kbGUgcnVudGltZSBwZXJtaXNzaW9ucy4KLSBbUnhQ
ZXJtaXNzaW9uc10oaHR0cHM6Ly9naXRodWIuY29tL3RicnV5ZWxsZS9SeFBl
cm1pc3Npb25zKSAtIEFuZHJvaWQgcnVudGltZSBwZXJtaXNzaW9ucyBwb3dl
cmVkIGJ5IFJ4SmF2YS4KLSBbTm9QZXJtaXNzaW9uXShodHRwczovL2dpdGh1
Yi5jb20vTm9OZXdzL05vUGVybWlzc2lvbikgLSBTaW1wbGUgQW5kcm9pZCBs
aWJyYXJ5IGZvciBwZXJtaXNzaW9ucyByZXF1ZXN0LiBDb25zaXN0cyBvZiBv
bmx5IG9uZSBjbGFzcy4KLSBbQXNrLVBlcm1pc3Npb25dKGh0dHBzOi8vZ2l0
aHViLmNvbS9LaXNoYW5qdmFnaGVsYS9Bc2stUGVybWlzc2lvbikgLSBTaW1w
bGUgUnVuVGltZSBwZXJtaXNzaW9uIG1hbmFnZXIuCi0gW0dvdGFdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9hbGhhem15MTMvR290YSkgLSBTaW1wbGlmeWluZyBB
bmRyb2lkIFBlcm1pc3Npb25zLgotIFtFYXN5UGVybWlzc2lvbnNdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9nb29nbGVzYW1wbGVzL2Vhc3lwZXJtaXNzaW9ucykg
LSBFYXN5UGVybWlzc2lvbnMgaXMgYSB3cmFwcGVyIGxpYnJhcnkgdG8gc2lt
cGxpZnkgYmFzaWMgc3lzdGVtIHBlcm1pc3Npb25zIGxvZ2ljIHdoZW4gdGFy
Z2V0aW5nIEFuZHJvaWQgTSBvciBoaWdoZXIuCgojIyMgUGF5bWVudHMKCi0g
W1NxdWFyZSBJbi1BcHAgUGF5bWVudHMgZm9yIEFuZHJvaWRdKGh0dHBzOi8v
ZGV2ZWxvcGVyLnNxdWFyZXVwLmNvbS9kb2NzL2luLWFwcC1wYXltZW50cy1z
ZGsvYnVpbGQtb24tYW5kcm9pZCkgLSBJbnRlZ3JhdGUgU3F1YXJlIHBheW1l
bnRzIGludG8geW91ciBtb2JpbGUgYXBwIHdpdGggRGlnaXRhbCB3YWxsZXQg
YW5kIHN0b3JlZCBjYXJkIHN1cHBvcnQgZm9yIHF1aWNrIGNoZWNrb3V0LgoK
IyMjIE90aGVyCgotIFtBbmRyb2lkIFN1cHBvcnQgbGlicmFyeV0oaHR0cHM6
Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vdG9waWMvbGlicmFyaWVzL3N1cHBv
cnQtbGlicmFyeS8pIC0gVGhlIEFuZHJvaWQgU3VwcG9ydCBMaWJyYXJ5IHBh
Y2thZ2UgaXMgYSBzZXQgb2YgY29kZSBsaWJyYXJpZXMgdGhhdCBwcm92aWRl
IGJhY2t3YXJkLWNvbXBhdGlibGUgdmVyc2lvbnMgb2YgQW5kcm9pZCBmcmFt
ZXdvcmsgQVBJLgotIFtHb29nbGUgUGxheSBTZXJ2aWNlc10oaHR0cHM6Ly9k
ZXZlbG9wZXJzLmdvb2dsZS5jb20vYW5kcm9pZC9ndWlkZXMvb3ZlcnZpZXcp
IC0gTGlicmFyeSB0byBhY2Nlc3MgR29vZ2xlIHNlcnZpY2VzLCBzdWNoIGFz
IGFjY291bnQgc3luY2luZywgR29vZ2xlKyAoc2hhcmluZywgc2luZ2xlIHNp
Z24tb24pLCBHb29nbGUgTWFwcywgTG9jYXRpb24gQVBJcywgR29vZ2xlIFBs
YXkgR2FtZXMsIENsb3VkIE1lc3NhZ2luZywgQW5kcm9pZCBEZXZpY2UgTWFu
YWdlciwgYW5kIG90aGVycy4KLSBbVGFwZV0oaHR0cHM6Ly9naXRodWIuY29t
L3NxdWFyZS90YXBlKSAtIEEgbGlnaHRuaW5nIGZhc3QsIHRyYW5zYWN0aW9u
YWwsIGZpbGUtYmFzZWQgRklGTyBmb3IgQW5kcm9pZCBhbmQgSmF2YS4KLSBb
R3VhdmE6IEdvb2dsZSBDb3JlIExpYnJhcmllcyBmb3IgSmF2YV0oaHR0cHM6
Ly9naXRodWIuY29tL2dvb2dsZS9ndWF2YSkgLSBDb2xsZWN0aW9ucywgY2Fj
aGluZywgcHJpbWl0aXZlcyBzdXBwb3J0LCBjb25jdXJyZW5jeSBsaWJyYXJp
ZXMsIGNvbW1vbiBhbm5vdGF0aW9ucywgc3RyaW5nIHByb2Nlc3NpbmcsIEkv
TywgYW5kIHNvIGZvcnRoLgotIFtBbmRyb2lkIFNjcmlwdGluZ10oaHR0cHM6
Ly9naXRodWIuY29tL2RhbW9ua29obGVyL3NsNGEpIC0gQWxsb3dzIHRvIHJ1
biBzY3JpcHRpbmcgbGFuZ3VhZ2VzIG9uIEFuZHJvaWQuCi0gW0FuZHJvaWQg
UHJpb3JpdHkgSm9iIFF1ZXVlXShodHRwczovL2dpdGh1Yi5jb20veWlnaXQv
YW5kcm9pZC1wcmlvcml0eS1qb2JxdWV1ZSkgLSBJbXBsZW1lbnRhdGlvbiBv
ZiBhIEpvYiBRdWV1ZSB0byBlYXNpbHkgc2NoZWR1bGUgam9icyAodGFza3Mp
IHRoYXQgcnVuIGluIHRoZSBiYWNrZ3JvdW5kLCBpbXByb3ZpbmcgVVggYW5k
IGFwcGxpY2F0aW9uIHN0YWJpbGl0eS4KLSBbUmF0ZU1lTWF5YmVdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9uc3BvL1JhdGVNZU1heWJlKSAtIEFza3MgdGhlIHVz
ZXIgaWYgKHMpaGUgd2FudHMgdG8gb3BlbiB0aGUgUGxheSBTdG9yZSB0byBy
YXRlIHlvdXIgYXBwbGljYXRpb24uCi0gW0Vhc3kgUmF0aW5nIERpYWxvZ10o
aHR0cHM6Ly9naXRodWIuY29tL2Zlcm5hbmRvZGV2L2Vhc3ktcmF0aW5nLWRp
YWxvZykgLSBMaWIgcHJvdmlkZXMgYSBzaW1wbGUgd2F5IHRvIGRpc3BsYXkg
YW4gYWxlcnQgZGlhbG9nIGZvciByYXRpbmcgYXBwLgotIFtaWGluZyBBbmRy
b2lkLUludGVncmF0aW9uXShodHRwczovL2dpdGh1Yi5jb20venhpbmcvenhp
bmcpIC0gSW50ZWdyYXRpb24gd2l0aCBCYXJjb2RlIFNjYW5uZXIgdmlhIElu
dGVudC4KLSBbR3JhZGxlIFJldHJvbGFtYmRhIFBsdWdpbl0oaHR0cHM6Ly9n
aXRodWIuY29tL2V2YW50L2dyYWRsZS1yZXRyb2xhbWJkYSkgLSBKYXZhIDgg
TGFtYmRhcyBvbiBBbmRyb2lkIQotIFtSeEphdmFdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9SZWFjdGl2ZVgvUnhKYXZhKS0gUnhKYXZhIOKAkyBSZWFjdGl2ZSBF
eHRlbnNpb25zIGZvciB0aGUgSlZNIOKAkyBhIGxpYnJhcnkgZm9yIGNvbXBv
c2luZyBhc3luY2hyb25vdXMgYW5kIGV2ZW50LWJhc2VkIHByb2dyYW1zIHVz
aW5nIG9ic2VydmFibGUgc2VxdWVuY2VzIGZvciB0aGUgSmF2YSBWTS4KLSBb
UnhBbmRyb2lkXShodHRwczovL2dpdGh1Yi5jb20vUmVhY3RpdmVYL1J4QW5k
cm9pZCkgLSBBZGRzIG1pbmltdW0gUnhKYXZhIGJpbmRpbmdzIGZvciBlYXN5
IHdyaXRpbmcgb2YgcmVhY3RpdmUgQW5kcm9pZCBqYXZhIGNvZGUuCi0gW1J4
QmluZGluZ10oaHR0cHM6Ly9naXRodWIuY29tL0pha2VXaGFydG9uL1J4Qmlu
ZGluZyktIFJ4QmluZGluZyDigJMgUnhKYXZhIGJpbmRpbmcgQVBJcyBmb3Ig
QW5kcm9pZCBVSSB3aWRnZXRzIGZyb20gdGhlIHBsYXRmb3JtIGFuZCBzdXBw
b3J0IGxpYnJhcmllcy4KLSBbQ2FmZmVpbmVdKGh0dHBzOi8vZ2l0aHViLmNv
bS9wZXJjb2xhdGUvY2FmZmVpbmUpIC0gQSBjb2xsZWN0aW9uIG9mIHV0aWxp
dHkgY2xhc3NlcyB0aGF0IGhlbHAgbWFrZSBBbmRyb2lkIGRldmVsb3BtZW50
IGZhc3Rlci4KLSBbQWJvdXRMaWJyYXJpZXNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9taWtlcGVuei9BYm91dExpYnJhcmllcykgLSBBdXRvbWF0aWNhbGx5IGdl
bmVyYXRlcyBhbiBBYm91dCB0aGlzIGFwcCBzZWN0aW9uLCB3aXRoIGEgbGlz
dCBvZiB1c2VkIGxpYnJhcmllcy4KLSBbQXVkaW9QbGF5ZXJWaWV3XShodHRw
czovL2dpdGh1Yi5jb20vSHVnb01hdGlsbGEvQXVkaW9QbGF5ZXJWaWV3KSAt
IEEgdmlldyB0aGF0IGxvYWRzIGF1ZGlvIGZyb20gYW4gdXJsIGFuZCBoYXZl
IGJhc2ljIHBsYXliYWNrIHRvb2xzLgotIFthbmRsZV0oaHR0cHM6Ly9naXRo
dWIuY29tL0ppbnRpbi9hbmRsZSkgLSBjb21tYW5kIGxpbmUgdG9vbCBoZWxw
IHlvdSBzeW5jIGRlcGVuZGVuY2llcywgc2RrIG9yIGJ1aWxkIHRvb2wgdmVy
c2lvbi4KLSBbVHlwb2dyYXBoeV0oaHR0cHM6Ly9naXRodWIuY29tL3dvcmth
cm91bmRzL3R5cG9ncmFwaHkpIC0gQW4gQW5kcm9pZCBsaWJyYXJ5IHRoYXQg
bWFrZXMgaXQgZWFzeSB0byB1c2UgY3VzdG9tIGZvbnRzIGluIHZpZXdzLgot
IFtDYWxsaWdyYXBoeV0oaHR0cHM6Ly9naXRodWIuY29tL2NocmlzamVueC9D
YWxsaWdyYXBoeSkgLSBDdXN0b20gZm9udHMgaW4gQW5kcm9pZCBhbiBPSyB3
YXkuCi0gW3RyYW5zYWldKGh0dHBzOi8vZ2l0aHViLmNvbS9KaW50aW4vdHJh
bnNhaSkgLSBjb21tYW5kIGxpbmUgdG9vbCBoZWxwIHlvdSBtYW5hZ2UgbG9j
YWxpemF0aW9uIHN0cmluZyBmaWxlcy4KLSBbQW5kcm9pZC1MaW5rLVByZXZp
ZXddKGh0dHBzOi8vZ2l0aHViLmNvbS9MZW9uYXJkb0NhcmRvc28vQW5kcm9p
ZC1MaW5rLVByZXZpZXcpIC0gSXQgbWFrZXMgYSBwcmV2aWV3IGZyb20gYW4g
dXJsLCBncmFiYmluZyBhbGwgdGhlIGluZm9ybWF0aW9uIHN1Y2ggYXMgdGl0
bGUsIHJlbGV2YW50IHRleHRzIGFuZCBpbWFnZXMuCi0gW1NlbnNleV0oaHR0
cHM6Ly9naXRodWIuY29tL25pc3J1bHovc2Vuc2V5KSAtIERldGVjdGluZyBn
ZXN0dXJlcyBpbiBhIHNuYXAuCi0gW1VzZXJBd2FyZVZpZGVvVmlld10oaHR0
cHM6Ly9naXRodWIuY29tL2tldmFscGF0ZWwyMTA2L1VzZXJBd2FyZVZpZGVv
VmlldykgLSBBIGN1c3RvbWl6ZWQgdmlkZW8gdmlldyB0aGF0IHdpbGwgYXV0
b21hdGljYWxseSBwYXVzZSB2aWRlbyBpcyB1c2VyIGlzIG5vdCBsb29raW5n
IGF0IGRldmljZSBzY3JlZW4hCi0gW0ZsZXhib3ggTGF5b3V0XShodHRwczov
L2dpdGh1Yi5jb20vZ29vZ2xlL2ZsZXhib3gtbGF5b3V0KSAtIEZsZXhib3hM
YXlvdXQgaXMgYSBsaWJyYXJ5IHdoaWNoIGJyaW5ncyB0aGUgc2ltaWxhciBj
YXBhYmlsaXRpZXMgb2YgQ1NTIEZsZXhpYmxlIEJveCBMYXlvdXQgTW9kdWxl
IHRvIEFuZHJvaWQu4oCoCi0gW0FnaWxlIEJvaWxlciBQbGF0ZV0oaHR0cHM6
Ly9naXRodWIuY29tL3hyZXNjby9BbmRyb2lkLUFnaWxlLUJvaWxlci1QbGF0
ZSkgLSBUaGUgYm9pbGVyIHBsYXRlIGlzIGJhc2VkIG9uIE1WUCBhcmNoaXRl
Y3R1cmUgYW5kIGl0IGlzIGZ1bGx5IGJhc2VkIG9uIERlcGVuZGVuY3kgSW5q
ZWN0aW9uIGRlc2lnbiBwYXR0ZXJuIHVzaW5nIERhZ2dlcjIuCi0gW0dyYWRs
ZSBidWlsZFNyY1ZlcnNpb25zXShodHRwczovL2dpdGh1Yi5jb20vam1mYXlh
cmQvYnVpbGRTcmNWZXJzaW9ucykgLSBBIGtvdGxpbiBkc2wgdG8gc2ltcGxp
ZnkgZGVwZW5kZW5jaWVzIG1hbmFnZW1lbnQKLSBbVGVsbGVyXShodHRwczov
L2dpdGh1Yi5jb20vbGV2aWJvc3RpYW4vVGVsbGVyLUFuZHJvaWQvKSAtIFRl
bGxlciBmYWNpbGl0YXRlcyB0aGUgZG93bmxvYWRpbmcsIHNhdmluZywgYW5k
IHJlYWRpbmcgb2YgdGhlIGNhY2hlZCBkYXRhIG9mIHlvdXIgYXBwLiBLZWVw
IHlvdXIgdXNlcidzIGRhdGEgZnJlc2ggYW5kIHJlbW92ZSB0aG9zZSBhbm5v
eWluZyBsb2FkaW5nIHNjcmVlbnMhCgojIyBSZXNvdXJjZXMKCi0gW1Byb2dy
YW1taW5nIENvbW11bml0eSBDdXJhdGVkIFJlc291cmNlcyBmb3IgTGVhcm5p
bmcgQW5kcm9pZCBEZXZlbG9wbWVudF0oaHR0cHM6Ly9oYWNrci5pby90dXRv
cmlhbHMvbGVhcm4tYW5kcm9pZC1kZXZlbG9wbWVudCkgLSBBbmRyb2lkIFR1
dG9yaWFscyAmIENvdXJzZXMgc3VibWl0dGVkIGFuZCB2b3RlZCBieSB0aGUg
cHJvZ3JhbW1pbmcgY29tbXVuaXR5LgotIFtWb2dlbGxhIFR1dG9yaWFsc10o
aHR0cHM6Ly93d3cudm9nZWxsYS5jb20vdHV0b3JpYWxzL2FuZHJvaWQuaHRt
bCkgLSBWZXJ5IGdvb2QgdHV0b3JpYWxzIGJ5IExhcnMgVm9nZWwuCi0gW0Fu
ZHJvaWQgRGVzaWduIGluIEFjdGlvbiBWaWRlbyBzZXJpZXNdKGh0dHBzOi8v
d3d3LnlvdXR1YmUuY29tL3BsYXlsaXN0P2xpc3Q9UExXejVySjJFS0tjOGoy
Qjk1ekdNYjhtdVp2ckl5LXdjRikgVGhlIHZpZGVvIHNlcmllcyBieSBBbmRy
b2lkIERlc2lnbiBUZWFtIG9mIEdvb2dsZS4KLSBbQW5kcm9pZCBEZXZCeXRl
cyBWaWRlbyBTZXJpZXNdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3BsYXls
aXN0P2xpc3Q9UExXejVySjJFS0tjX1hPZ2NSdWtTb0tLamV3RkpacktWMCkg
LSBJdCBpcyB0aGUgdGVjaG5pY2FsIGNvdW50ZXJwYXJ0IG9mIEFuZHJvaWQg
RGVzaWduIGluIEFjdGlvbiBzZXJpZXMuCi0gW0RldmVsb3BpbmcgZm9yIEFu
ZHJvaWRdKGh0dHBzOi8vbWVkaXVtLmNvbS9nb29nbGUtZGV2ZWxvcGVycy9k
ZXZlbG9waW5nLWZvci1hbmRyb2lkLWludHJvZHVjdGlvbi01MzQ1YjQ1MTU2
N2MpIC0gQSBzZXJpZXMgb2YgYXJ0aWNsZXMgZnJvbSBHb29nbGVyIENoZXQg
SGFzYWUgYW5kIG90aGVycywgYW5zd2VyaW5nIG1vc3QgY29tbW9ubHkgYXNr
ZWQgcXVlc3Rpb246ICJXaGF0IGFyZSBzb21lIG9mIHRoZSBpbXBvcnRhbnQg
cnVsZXMgdG8ga2VlcCBpbiBtaW5kIHdoZW4gZGV2ZWxvcGluZyBBbmRyb2lk
IGFwcGxpY2F0aW9ucz8iLgotIFtBbmRyb2lkIEhpdmUgVHV0b3JpYWxzXSho
dHRwczovL3d3dy5hbmRyb2lkaGl2ZS5pbmZvKSAtIFZlcnkgZ29vZCB0dXRv
cmlhbHMgZm9yIGJlZ2lubmVycy4KLSBbQW5kcm9pZCBXZWVrbHldKGh0dHBz
Oi8vYW5kcm9pZHdlZWtseS5uZXQpIC0gTmV3c2xldHRlciB3aXRoIHdlZWts
eSBpbmZvcm1hdGlvbiBhYm91dCBhbmRyb2lkLgotIFtBbmRyb2lkIEFzc2V0
IFN0dWRpb10oaHR0cDovL3JvbWFubnVyaWsuZ2l0aHViLmlvL0FuZHJvaWRB
c3NldFN0dWRpby8pIC0gR2VuZXJhdG9yIGZvciBpY29ucyBhbmQgb3RoZXIg
YXNzZXRzLgotIFtBbmRyb2lkIEFjdGlvbiBCYXIgU3R5bGUgR2VuZXJhdG9y
XShodHRwOi8vamdpbGZlbHQuZ2l0aHViLmlvL2FuZHJvaWQtYWN0aW9uYmFy
c3R5bGVnZW5lcmF0b3IvKS4KLSBbRGV2aWNlIEFydCBHZW5lcmF0b3JdKGh0
dHBzOi8vZGV2ZWxvcGVyLmFuZHJvaWQuY29tL2Rpc3RyaWJ1dGUvbWFya2V0
aW5nLXRvb2xzL2RldmljZS1hcnQtZ2VuZXJhdG9yKSAtIFdyYXBzIGFwcCBz
Y3JlZW5zaG90cyBpbiByZWFsIGRldmljZSBhcnR3b3JrLgotIFtBbmRyb2lk
IFVJIGRlc2lnbiByZXNvdXJjZXNdKGh0dHBzOi8vYW5kcm9pZHVpdXguY29t
L2ZyZWUtZGVzaWduLXJlc291cmNlcy8pIC0gR2l2ZXMgeW91IHdpZGUgdmFy
aWV0eSBvZiBkZXNpZ24gcmVzb3VyY2VzIGZvcm0gYSBHb29nbGUgRGV2ZWxv
cGVyIEV4cGVydCBpbiBVSS9VWC4KLSBbUGVuY2lsIFByb2plY3RdKGh0dHBz
Oi8vcGVuY2lsLmV2b2x1cy52bi8pIC0gQW4gb3BlbiBzb3VyY2UgcHJvdG90
eXBpbmcgc29mdHdhcmUuCi0gW0hvdyB0byBNYWtlIEFuZHJvaWQgQXBwc10o
aHR0cHM6Ly93d3cueW91dHViZS5jb20vcGxheWxpc3Q/bGlzdD1QTEdMZlZ2
el9MVnZTUGpXcExQRkVmT0NiZXppNnZBVEloKSAtIFZpZGVvIHR1dG9yaWFs
cyBieSBEZXJlayBCYW5hcy4KLSBbYW5kcm9pZC1ibG9nc10oaHR0cHM6Ly9n
aXRodWIuY29tL3ZiYXVlci9hbmRyb2lkLWJsb2dzKSAtIExpc3Qgd2l0aCBi
bG9ncyBhYm91dCBBbmRyb2lkLgotIFtGdXR1cmUgU3R1ZGlvXShodHRwczov
L2Z1dHVyZXN0dWQuaW8vdHV0b3JpYWxzL3RhZy9hbmRyb2lkKSAtIEV4dGVu
c2l2ZSBBbmRyb2lkIHR1dG9yaWFscyBvbiBSZXRyb2ZpdCwgUGljYXNzbywg
R2xpZGUgJiBHc29uLgotIFtBbmRyb2lkIFRpcHMgJiBUcmlja3NdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9uaXNydWx6L2FuZHJvaWQtdGlwcy10cmlja3MpIC0g
Q2hlYXRzaGVldCBhYm91dCB0aXBzIGFuZCB0cmlja3MgZm9yIEFuZHJvaWQg
RGV2ZWxvcG1lbnQuCi0gW0Fzc29jaWF0ZSBBbmRyb2lkIERldmVsb3BlciBD
ZXJ0aWZpY2F0aW9uIE1hdGVyaWFsc10oaHR0cHM6Ly9naXRodWIuY29tL0Ft
ZWppYTQ4MS9Bc3NvY2lhdGUtQW5kcm9pZC1EZXZlbG9wZXItQ2VydGlmaWNh
dGlvbikgLSBBIGNvbGxlY3Rpb24gb2YgbWF0ZXJpYWxzIGZvciBnZXR0aW5n
IHJlYWR5IGZvciB0aGUgdGVzdC4KLSBbR29vZ2xlIERldmVsb3BlcnMgVHJh
aW5pbmddKGh0dHBzOi8vZGV2ZWxvcGVyLmFuZHJvaWQuY29tL2NvdXJzZXMv
KSAtICBHb29nbGUgRGV2ZWxvcGVycyBPZmZpY2lhbCBUcmFpbmluZyBwYWdl
IGhhcyBsaXN0IG9mIHZhcmlvdXMgdXNlZnVsIGxlYXJuaW5nIHJlc291cmNl
cyBmb3IgYmVnaW5uZXIgYXMgd2VsbCBzZWFzb25lZCBkZXZlbG9wZXIuCi0g
W01pbmRvcmtzXShodHRwczovL21pbmRvcmtzLmNvbS8pIC0gQmVjb21lIGEg
Y29tcGxldGUgYW5kIGhhcHB5IEFuZHJvaWQgZGV2ZWxvcGVyLgotIFtBbmRy
b2lkVmlsbGVdKGh0dHBzOi8vYXl1c2NoLmNvbS8pIC0gQmVjb21lIGEgYmV0
dGVyIEFuZHJvaWQgRW5naW5lZXIuIEEgd2Vic2l0ZSBkZWRpY2F0ZWQgdG8g
QW5kcm9pZCBEZXZlbG9wbWVudCBjb3ZlcmluZyBhZHZhbmNlZCB0b3BpY3Mg
c3VjaCBhcyBSeEphdmEsIEFuZHJvaWQgWnlnb3RlIGFuZCBtdWNoIG1vcmUu
CgojIyMgQ29kZSBleGFtcGxlcwotIFtBbmRyb2lkIEFyY2hpdGVjdHVyZSBC
bHVlcHJpbnRzXShodHRwczovL2dpdGh1Yi5jb20vYW5kcm9pZC9hcmNoaXRl
Y3R1cmUtc2FtcGxlcykgLSBUaGUgQW5kcm9pZCBBcmNoaXRlY3R1cmUgQmx1
ZXByaW50cyBwcm9qZWN0IGRlbW9uc3RyYXRlcyBzdHJhdGVnaWVzIHRvIGhl
bHAgc29sdmUgb3IgYXZvaWQgY29tbW9uIGFuZHJvaWQgcHJvYmxlbXMuCi0g
W0tvdGxpbiBNVlZNIGV4YW1wbGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9lbWVk
aW5hYS9rb3RsaW4tbXZ2bSkgLSBFeGFtcGxlIGFib3V0IE1WVk0gKE1vZGVs
IFZpZXcgVmlld01vZGVsKSBQYXR0ZXJuLgotIFtLb3RsaW4gVklQRVIgZXhh
bXBsZV0oaHR0cHM6Ly9naXRodWIuY29tL09taVNvZnROZXQvQW5kcm9pZFZp
cGVyVGVtcGxhdGUpIC0gRXhhbXBsZSBhYm91dCBWSVBFUiAoVmlldyBJbnRl
cmFjdG9yIFByZXNlbnRlciBFbnRpdHkgUm91dGVyKSBQYXR0ZXJuLgotIFtD
b21wbGV0ZS1Hb29nbGUtTWFwLUFQSS1UdXRvcmlhbF0oaHR0cHM6Ly9naXRo
dWIuY29tL21vaGFtbWFkaW1hM291ZC9Db21wbGV0ZS1Hb29nbGUtTWFwLUFQ
SS1UdXRvcmlhbCkgLSBMZWFybiBIb3cgdG8gdXNlIEdvb2dsZSBNYXAgQVBJ
IGZvciBBbmRyb2lkIGZyb20gQmFzaWMgdG8gQWR2YW5jZSB3aXRoIGNvbXBs
ZXRlIGV4YW1wbGVzLgoKIyMjIFBvZGNhc3RzCi0gW0ZyYWdtZW50ZWRdKGh0
dHBzOi8vZnJhZ21lbnRlZHBvZGNhc3QuY29tLykgaXMgdGhlIEFuZHJvaWQg
ZGV2ZWxvcGVyIHBvZGNhc3Qgd2hlcmUgRG9ubiBGZWxrZXIgYW5kIEthdXNo
aWsgR29wYWwgdGFsayBhYm91dCBidWlsZGluZyBnb29kIHNvZnR3YXJlIGFu
ZCBiZWNvbWluZyBiZXR0ZXIgQW5kcm9pZCBkZXZlbG9wZXJzLgotIFtBbmRy
b2lkIERldmVsb3BlcnMgQmFja3N0YWdlXShodHRwOi8vYW5kcm9pZGJhY2tz
dGFnZS5ibG9nc3BvdC5jb20vKSBpcyBhIHBvZGNhc3QgYnkgYW5kIGZvciBB
bmRyb2lkIGRldmVsb3BlcnMuIEhvc3RlZCBieSBkZXZlbG9wZXJzIGZyb20g
dGhlIEFuZHJvaWQgZW5naW5lZXJpbmcgdGVhbSwgdGhpcyBzaG93IGNvdmVy
cyB0b3BpY3Mgb2YgaW50ZXJlc3QgdG8gQW5kcm9pZCBwcm9ncmFtbWVycywg
d2l0aCBpbi1kZXB0aCBkaXNjdXNzaW9ucyBhbmQgaW50ZXJ2aWV3cyB3aXRo
IGVuZ2luZWVycyBvbiB0aGUgQW5kcm9pZCB0ZWFtIGF0IEdvb2dsZS4KLSBb
QW5kcm9pZCBEaWFsb2dzXShodHRwczovL3d3dy55b3V0dWJlLmNvbS9jaGFu
bmVsL1VDTUVtTm5IVDY5YVp1YU9yRS1kRjZ1Zy9mZWVkKSBpcyBhIHZpZGVv
IGJhc2VkIHBvZGNhc3QsIHdoZXJlIHRoZXkgaGF2ZSBiaXRlLXNpemVkIGNv
bnZlcnNhdGlvbnMgd2l0aCBwZW9wbGUgZnJvbSB0aGUgQW5kcm9pZCBjb21t
dW5pdHkuCi0gW1RoZSBDb250ZXh0XShodHRwczovL2dpdGh1Yi5jb20vYXJ0
ZW0temlubmF0dWxsaW4vVGhlQ29udGV4dC1Qb2RjYXN0KSBhIHBvZGNhc3Qg
YWJvdXQgQW5kcm9pZCBEZXZlbG9wbWVudCB3aXRoIEhhbm5lcyBEb3JmbWFu
biwgQXJ0ZW0gWmlubmF0dWxsaW4gYW5kIHdvbmRlcmZ1bCBndWVzdHMhCi0g
W1RhbGtpbmcgS290bGluXShodHRwczovL3RhbGtpbmdrb3RsaW4uY29tLykg
LSBBIFBvZGNhc3Qgb24gS290bGluIGFuZCBtb3JlLgotIFtBbmRyb2lkIEF1
dGhvcml0eV0oaHR0cHM6Ly93d3cuYW5kcm9pZGF1dGhvcml0eS5jb20vcG9k
Y2FzdC8pIGlzIGEgd2Vla2x5IEFuZHJvaWQgcG9kY2FzdCBob3N0ZWQgYnkg
QWRhbSBEb3VkLCBKb2UgSGluZHksIGFuZCBKb25hdGhhbiBGZWlzdCBmcm9t
IHRoZSBBbmRyb2lkIEF1dGhvcml0eSB0ZWFtLgotIFtBbmRyb2lkIENlbnRy
YWxdKGh0dHBzOi8vd3d3LmFuZHJvaWRjZW50cmFsLmNvbS9wb2RjYXN0KSAt
IGlzIGEgd2Vla2x5IEFuZHJvaWQgcG9kY2FzdCBob3N0ZWQgYnkgdGhlIEFu
ZHJvaWQgQ2VudHJhbCB0ZWFtLgoKIyMjIE1vcmUgbGlzdHMgb2YgbGlicmFy
aWVzCi0gW1RoZSBBbmRyb2lkIEFyc2VuYWxdKGh0dHBzOi8vYW5kcm9pZC1h
cnNlbmFsLmNvbS8pIC0gTGFyZ2UgbGlzdCBvZiBhbmRyb2lkIGxpYnJhcmll
cwotIFtTcXVhcmUgbGlicmFyaWVzXShodHRwczovL3NxdWFyZS5naXRodWIu
aW8vKSAtIE11bHRpcGxlIGhpZ2ggcXVhbGl0eSBsaWJyYXJpZXMgYnkgc3F1
YXJlLgotIFtBd2Vzb21lIEFuZHJvaWQgQExpYkh1bnRdKGh0dHBzOi8vYW5k
cm9pZC5saWJodW50LmNvbSkgLSBZb3VyIGdvLXRvIEFuZHJvaWQgVG9vbGJv
eC4KLSBbQW5kcm9pZCBTdG9yZV0oaHR0cHM6Ly9taW5kb3Jrcy5jb20vYW5k
cm9pZC9zdG9yZSkgLSBTZWFyY2ggQW5kcm9pZCBMaWJyYXJpZXMsIFByb2pl
Y3RzLCBhbmQgVG9vbHMuCgojIyBEZXZlbG9wbWVudCBBbHRlcm5hdGl2ZXMK
Ck15IHBlcnNvbmFsIHJlY29tbWVuZGF0aW9uIGlzIChmb3Igbm93KSB0byB1
c2UgdGhlIGFuZHJvaWQgYXBpIHRvIGJ1aWxkIGEgbmF0aXZlIGFwcC4gU2Nh
bGEgY2FuIGhlbHAgdG8gYnVpbGQgdGhpcyBuYXRpdmUgYXBwcyB3aXRoIGNs
ZWFuZXIgY29kZSBidXQgaXQgYWRkcyB0byBtYW55IG1ldGhvZHMgKE11bHRp
ZGV4IHJlcXVpcmVkKS4gS290bGluIGlzIGEgbW9kZXJuIGxhbmd1YWdlIHdp
dGggMTAwJSBpbnRlcm9wZXJhdGliaWxpdHkgd2l0aCBqYXZhIHByb2plY3Rz
ICoqd2l0aG91dCBtdWx0aWRleCoqLiBCdXQgdGhlcmUgYXJlIGFsc28gdXNl
IGNhc2VzIHdoZXJlIGFsdGVybmF0aXZlcyBsaWtlIGNyb3NzLXBsYXRmb3Jt
IGRldmVsb3BtZW50IGNhbiBiZSB1c2VmdWwuCgojIyMgQyYjMzU7CgotIFtY
YW1hcmluXShodHRwczovL3Zpc3VhbHN0dWRpby5taWNyb3NvZnQuY29tL3hh
bWFyaW4vKSAtIEZyYW1ld29yayB0byBjcmVhdGUgbmF0aXZlIGlPUywgQW5k
cm9pZCwgTWFjIGFuZCBXaW5kb3dzIGFwcHMgaW4gQyMuCgojIyMgSFRNTCwg
Q1NTIGFuZCBKYXZhc2NyaXB0CgotIFtQaG9uZUdhcF0oaHR0cHM6Ly9waG9u
ZWdhcC5jb20pIC0gT3BlbiBzb3VyY2UgZnJhbWV3b3JrIGJ5IEFkb2JlIHRv
IGNyZWF0ZSBjcm9zcyBwbGF0Zm9ybSBtb2JpbGUgYXBwcyB1c2luZyBIVE1M
LCBDU1MsIGFuZCBKYXZhU2NyaXB0LgotIFtUaXRhbml1bV0oaHR0cDovL3d3
dy5hcHBjZWxlcmF0b3IuY29tL21vYmlsZS1hcHAtZGV2ZWxvcG1lbnQtcHJv
ZHVjdHMvKSAtIE9wZW4tc291cmNlIGZyYW1ld29yayB0byBjcmVhdGUgJ25h
dGl2ZScgY3Jvc3MgcGxhdGZvcm0gYXBwcyB1c2luZyBKYXZhU2NyaXB0Lgot
IFtOYXRpdmVTY3JpcHRdKGh0dHBzOi8vd3d3Lm5hdGl2ZXNjcmlwdC5vcmcv
KSAtIEFuIG9wZW4tc291cmNlIGZyYW1ld29yayB0byBidWlsZCBuYXRpdmUg
aU9TIGFuZCBBbmRyb2lkIGFwcHMgd2l0aCBKYXZhU2NyaXB0IGZyb20gYSBz
aW5nbGUgY29kZSBiYXNlLgotIFtSZWFjdCBOYXRpdmVdKGh0dHBzOi8vZ2l0
aHViLmNvbS9mYWNlYm9vay9yZWFjdC1uYXRpdmUpIC0gQSBmcmFtZXdvcmsg
Zm9yIGJ1aWxkaW5nIG5hdGl2ZSBhcHBzIHdpdGggUmVhY3QgYnkgRmFjZWJv
b2suCi0gW0lvbmljIEZyYW1ld29ya10oaHR0cHM6Ly9pb25pY2ZyYW1ld29y
ay5jb20pIC0gQSBmcmFtZXdvcmsgdG8gYnVpbGQgaHlicmlkIGFwcHMgd2l0
aCBtb2JpbGUtb3B0aW1pemVkIEhUTUwsIENTUyBhbmQgSlMgd2l0aCBBbmd1
bGFySlMuCi0gW0FwYWNoZSBDb3Jkb3ZhXShodHRwczovL2dpdGh1Yi5jb20v
YXBhY2hlL2NvcmRvdmEtYW5kcm9pZCkgLSBDb3Jkb3ZhIGJhc2VkIGFwcGxp
Y2F0aW9ucyBhcmUsIGF0IHRoZSBjb3JlLCBhcHBsaWNhdGlvbnMgd3JpdHRl
biB3aXRoIHdlYiB0ZWNobm9sb2d5OiBIVE1MLCBDU1MgYW5kIEphdmFTY3Jp
cHQuCi0gW0NhcGFjaXRvcl0oaHR0cHM6Ly9naXRodWIuY29tL2lvbmljLXRl
YW0vY2FwYWNpdG9yKSAtIEJ1aWxkIGNyb3NzLXBsYXRmb3JtIE5hdGl2ZSBQ
cm9ncmVzc2l2ZSBXZWIgQXBwcyBmb3IgaU9TLCBBbmRyb2lkLCBhbmQgdGhl
IHdlYi4gVmVyeSBwcm9taXNpbmcgQ29yZG92YSBhbHRlcm5hdGl2ZS4gCgoj
IyMgTHVhCi0gW0Nvcm9uYSBTREtdKGh0dHBzOi8vY29yb25hbGFicy5jb20v
cHJvZHVjdC8pIC0gRnJhbWV3b3JrIHRvIGNyZWF0ZSBuYXRpdmUgaU9TIGFu
ZCBBbmRyb2lkIEFwcHMgKGVzcGVjaWFsbHkgR2FtZXMpLgoKIyMjIFNjYWxh
Ci0gW1NjYWxvaWRdKGh0dHBzOi8vZ2l0aHViLmNvbS9wb2NvcmFsbC9zY2Fs
b2lkKSAtIExpYnJhcnkgZm9yIGxlc3MgcGFpbmZ1bCBBbmRyb2lkIGRldmVs
b3BtZW50IHdpdGggU2NhbGEuCi0gW01hY3JvaWRdKGh0dHBzOi8vZ2l0aHVi
LmNvbS80N2RlZy9tYWNyb2lkKSAtIEEgbW9kdWxhciBmdW5jdGlvbmFsIFVJ
IGxhbmd1YWdlIGZvciBBbmRyb2lkLgoKIyMjIEdyb292eQotIFtHcm9vdnkg
b24gQW5kcm9pZF0oaHR0cDovL21lbGl4LmdpdGh1Yi5pby9ibG9nLzIwMTQv
MDYvZ3Jvb2lkLmh0bWwpIC0gSW50cm9kdWN0aW9uIHRvIEdyb292eSBvbiBB
bmRyb2lkLgotIFtHcm9vdnkgTGFuZ3VhZ2UgU3VwcG9ydCBmb3IgQW5kcm9p
ZF0oaHR0cHM6Ly9naXRodWIuY29tL2dyb292eS9ncm9vdnktYW5kcm9pZC1n
cmFkbGUtcGx1Z2luKSAtIEdyYWRsZSBQbHVnaW4gZm9yIENvbXBpbGluZyBH
cm9vdnkgZm9yIEFuZHJvaWQuCi0gW1N3aXNzS25pZmVdKGh0dHBzOi8vZ2l0
aHViLmNvbS9BcmFzdGhlbC9Td2lzc0tuaWZlKSAtIEEgbXVsdGktcHVycG9z
ZSBHcm9vdnkgbGlicmFyeSBjb250YWluaW5nIHZpZXcgaW5qZWN0aW9uIGFu
ZCB0aHJlYWRpbmcgZm9yIEFuZHJvaWQgdXNpbmcgYW5ub3RhdGlvbnMuCgoj
IyMgS290bGluCi0gW0Fua29dKGh0dHBzOi8vZ2l0aHViLmNvbS9Lb3RsaW4v
YW5rbykgLSBEU0wgZm9yIEFuZHJvaWQgd3JpdHRlbiBpbiBLb3RsaW4gYnkg
SmV0QnJhaW5zLgotIFtLb3R0ZXJrbmlmZV0oaHR0cHM6Ly9naXRodWIuY29t
L0pha2VXaGFydG9uL2tvdHRlcmtuaWZlKSAtIEFuZHJvaWQgdmlldyBpbmpl
Y3Rpb24gd3JpdHRlbiBpbiBLb3RsaW4gYmFzZWQgb24gQnV0dGVyS25pZmUK
LSBbQW5kcm9pZCBLb3RsaW4gU2FtcGxlc10oaHR0cHM6Ly9naXRodWIuY29t
L2lyb250ZWMvYW5kcm9pZC1rb3RsaW4tc2FtcGxlcykgLSBTb21lIGJhc2lj
IEFuZHJvaWQgY29kZSBzYW1wbGVzIHdyaXR0ZW4gaW4gS290bGluLgotIFtL
b3RsaW4gY29kaW5nIHB1enpsZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9pZ29y
d29qZGEva290bGluLWNvZGluZy1wdXp6bGUpIC0gU2V0IG9mIHByb2dyYW1t
aW5nIGNoYWxsZW5nZXMgdGhhdHMgaGVscHMgdG8gaW1wcm92ZSB3aGl0ZWJv
YXJkIGNvZGluZyBhbmQgcHJvYmxlbS1zb2x2aW5nIHNraWxscy4KLSBbS0Fu
ZHJvaWRdKGh0dHBzOi8vZ2l0aHViLmNvbS9wYXdlZ2lvL0tBbmRyb2lkKSAt
IExpZ2h0d2VpZ2h0IGxpYnJhcnkgcHJvdmlkaW5nIHVzZWZ1bCBleHRlbnNp
b25zIHRvIGVsaW1pbmF0ZSBib2lsZXJwbGF0ZSBjb2RlIGluIEFuZHJvaWQg
U0RLLgotIFtSeEtvdGxpbi9Qb2NrZXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9S
eEtvdGxpbi9Qb2NrZXQpIC0gVGhpcyBhcHAgaGVscCB1c2VyIHRvIHNhdmUg
bGlua3MgZWFzaWx5LCBhbmQgY2FuIGV4cG9ydCB0byBFdmVybm90ZSBhcyB3
ZWVrbHkuCi0gW0FuZHJvaWQgQ2xlYW4gQXJjaGl0ZWN0dXJlIC0gS290bGlu
XShodHRwczovL2dpdGh1Yi5jb20vcGF0cmlja3lpbi9jbGVhbi1hcmNoaXRl
Y3R1cmUtYW5kcm9pZC1rb3RsaW4pIC0gQSBiYXNlIHByb2plY3QgdXNpbmcg
dGhlIFVuY2xlIEJvYidzIGNsZWFuIGFyY2hpdGVjdHVyZSB3aXRoIEtvdGxp
biBsYW5ndWFnZSBhbmQgdGhlIGxhdGVzdCBBbmRyb2lkIHRlY2hub2xvZ2ll
cy4KLSBbS29pbl0oaHR0cHM6Ly9pbnNlcnQta29pbi5pby8pIC0gTGlnaHR3
ZWlnaHQgZGVwZW5kZW5jeSBpbmplY3Rpb24gZnJhbWV3b3JrIGZvciBLb3Rs
aW4KCiMjIyBGbHV0dGVyCi0gW0ZsdXR0ZXJdKGh0dHBzOi8vZmx1dHRlci5k
ZXYvKSAtIEdvb2dsZSdzIG1vYmlsZSBhcHAgU0RLIGZvciBoaWdoLXF1YWxp
dHkgbmF0aXZlIGludGVyZmFjZXMgZm9yIEFuZHJvaWQgYW5kIGlPUyBpbiB2
ZXJ5IHF1aWNrIHRpbWUuCgojIFBlcmZvcm1hbmNlCi0gW2F3ZXNvbWUtYW5k
cm9pZC1wZXJmb3JtYW5jZV0oaHR0cHM6Ly9naXRodWIuY29tL0p1dWRlL2F3
ZXNvbWUtYW5kcm9pZC1wZXJmb3JtYW5jZSkgLSBBIGxpc3Qgb2YgYXdlc29t
ZSBBbmRyb2lkIHR1dG9yaWFscywgdmlkZW9zIGFuZCB0b29scyBmb3IgcGVy
Zm9ybWFuY2Ugb3B0aW1pemF0aW9uLgotIFtCb29zdGVyXShodHRwczovL2dp
dGh1Yi5jb20vZGlkaS9ib29zdGVyKSAtIEJvb3N0ZXIgaXMgYW4gb3B0aW1p
emF0aW9uIHRvb2xraXQgZm9yIEFuZHJvaWQgYXBwbGljYXRpb25zLgoKIyBP
dGhlciBBd2Vzb21lIExpc3RzCk90aGVyIGFtYXppbmdseSBhd2Vzb21lIGxp
c3RzIGNhbiBiZSBmb3VuZCBpbiB0aGUgW2F3ZXNvbWUtYXdlc29tZW5lc3Nd
KGh0dHBzOi8vZ2l0aHViLmNvbS9iYXlhbmRpbi9hd2Vzb21lLWF3ZXNvbWVu
ZXNzKSBsaXN0LgoKIyMgQ29udHJpYnV0aW5nCgpZb3VyIGNvbnRyaWJ1dGlv
bnMgYXJlIGFsd2F5cyB3ZWxjb21lISBQbGVhc2UgcmVhZCB0aGUgW2NvbnRy
aWJ1dGlvbiBndWlkZWxpbmVzXShjb250cmlidXRpbmcubWQpIGZpcnN0Lgo=
",,7331,"bGFuZ3VhZ2U6IHJ1YnkKcnZtOgogIC0gMi4yCmJlZm9yZV9zY3JpcHQ6CiAg
LSBnZW0gaW5zdGFsbCBhd2Vzb21lX2JvdApzY3JpcHQ6CiAgLSBhd2Vzb21l
X2JvdCByZWFkbWUubWQgLS1hbGxvdy1zc2wgLS13aGl0ZS1saXN0IGdvby5n
bAo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
