name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'awesome-javascript',21393871,"b'\xf0\x9f\x90\xa2 A collection of awesome browser-side  JavaScript libraries, resources and shiny things.'",,208,19084,,1042,False,b'https://api.github.com/repos/sorrycc/awesome-javascript/forks',"IyBBd2Vzb21lIEphdmFTY3JpcHQgWyFbQXdlc29tZV0oaHR0cHM6Ly9jZG4u
cmF3Z2l0LmNvbS9zaW5kcmVzb3JodXMvYXdlc29tZS9kNzMwNWYzOGQyOWZl
ZDc4ZmE4NTY1MmUzYTYzZTE1NGRkOGU4ODI5L21lZGlhL2JhZGdlLnN2Zyld
KGh0dHBzOi8vZ2l0aHViLmNvbS9zaW5kcmVzb3JodXMvYXdlc29tZSkKCkEg
Y29sbGVjdGlvbiBvZiBhd2Vzb21lIGJyb3dzZXItc2lkZSBbSmF2YVNjcmlw
dF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9X
ZWIvSmF2YVNjcmlwdCkgbGlicmFyaWVzLCByZXNvdXJjZXMgYW5kIHNoaW55
IHRoaW5ncy4KCiogW0F3ZXNvbWUgSmF2YVNjcmlwdF0oI2F3ZXNvbWUtamF2
YXNjcmlwdCkKICAqIFtQYWNrYWdlIE1hbmFnZXJzXSgjcGFja2FnZS1tYW5h
Z2VycykKICAqIFtMb2FkZXJzXSgjbG9hZGVycykKICAqIFtCdW5kbGVyc10o
I2J1bmRsZXJzKQogICogW1Rlc3RpbmcgRnJhbWV3b3Jrc10oI3Rlc3Rpbmct
ZnJhbWV3b3JrcykKICAqIFtRQSBUb29sc10oI3FhLXRvb2xzKQogICogW01W
QyBGcmFtZXdvcmtzIGFuZCBMaWJyYXJpZXNdKCNtdmMtZnJhbWV3b3Jrcy1h
bmQtbGlicmFyaWVzKQogICogW05vZGUtUG93ZXJlZCBDTVMgRnJhbWV3b3Jr
c10oI25vZGUtcG93ZXJlZC1jbXMtZnJhbWV3b3JrcykKICAqIFtUZW1wbGF0
aW5nIEVuZ2luZXNdKCN0ZW1wbGF0aW5nLWVuZ2luZXMpCiAgKiBbQXJ0aWNs
ZXMvUG9zdHNdKCNhcnRpY2xlcy1hbmQtcG9zdHMpCiAgKiBbRGF0YSBWaXN1
YWxpemF0aW9uXSgjZGF0YS12aXN1YWxpemF0aW9uKQogICAgKiBbVGltZWxp
bmVdKCN0aW1lbGluZSkKICAgICogW1NwcmVhZHNoZWV0XSgjc3ByZWFkc2hl
ZXQpCiAgKiBbRWRpdG9yc10oI2VkaXRvcnMpCiAgKiBbRG9jdW1lbnRhdGlv
bl0oI2RvY3VtZW50YXRpb24pCiAgKiBVdGlsaXRpZXMKICAgICogW0ZpbGVz
XSgjZmlsZXMpCiAgICAqIFtGdW5jdGlvbmFsIFByb2dyYW1taW5nXSgjZnVu
Y3Rpb25hbC1wcm9ncmFtbWluZykKICAgICogW1JlYWN0aXZlIFByb2dyYW1t
aW5nXSgjcmVhY3RpdmUtcHJvZ3JhbW1pbmcpCiAgICAqIFtEYXRhIFN0cnVj
dHVyZV0oI2RhdGEtc3RydWN0dXJlKQogICAgKiBbRGF0ZV0oI2RhdGUpCiAg
ICAqIFtTdHJpbmddKCNzdHJpbmcpCiAgICAqIFtOdW1iZXJdKCNudW1iZXIp
CiAgICAqIFtTdG9yYWdlXSgjc3RvcmFnZSkKICAgICogW0NvbG9yXSgjY29s
b3IpCiAgICAqIFtJMThuIEFuZCBMMTBuXSgjaTE4bi1hbmQtbDEwbikKICAg
ICogW0NvbnRyb2wgRmxvd10oI2NvbnRyb2wtZmxvdykKICAgICogW1JvdXRp
bmddKCNyb3V0aW5nKQogICAgKiBbU2VjdXJpdHldKCNzZWN1cml0eSkKICAg
ICogW0xvZ10oI2xvZykKICAgICogW1JlZ0V4cF0oI3JlZ2V4cCkKICAgICog
W01lZGlhXSgjbWVkaWEpCiAgICAqIFtWb2ljZSBDb21tYW5kXSgjdm9pY2Ut
Y29tbWFuZCkKICAgICogW0FQSV0oI2FwaSkKICAgICogW1N0cmVhbWluZ10o
I3N0cmVhbWluZykKICAgICogW1Zpc2lvbiBEZXRlY3Rpb25dKCN2aXNpb24t
ZGV0ZWN0aW9uKQogICAgKiBbQnJvd3NlciBEZXRlY3Rpb25dKCNicm93c2Vy
LWRldGVjdGlvbikKICAgICogW0JlbmNobWFya10oI2JlbmNobWFyaykKICAg
ICogW01hY2hpbmUgTGVhcm5pbmddKCNtYWNoaW5lLWxlYXJuaW5nKQogICog
VUkKICAgICogW0NvZGUgSGlnaGxpZ2h0aW5nXSgjY29kZS1oaWdobGlnaHRp
bmcpCiAgICAqIFtMb2FkaW5nIFN0YXR1c10oI2xvYWRpbmctc3RhdHVzKQog
ICAgKiBbVmFsaWRhdGlvbl0oI3ZhbGlkYXRpb24pCiAgICAqIFtLZXlib2Fy
ZCBXcmFwcGVyc10oI2tleWJvYXJkLXdyYXBwZXJzKQogICAgKiBbVG91cnMg
QW5kIEd1aWRlc10oI3RvdXJzLWFuZC1ndWlkZXMpCiAgICAqIFtOb3RpZmlj
YXRpb25zXSgjbm90aWZpY2F0aW9ucykKICAgICogW1NsaWRlcnNdKCNzbGlk
ZXJzKQogICAgKiBbUmFuZ2UgU2xpZGVyc10oI3JhbmdlLXNsaWRlcnMpCiAg
ICAqIFtGb3JtIFdpZGdldHNdKCNmb3JtLXdpZGdldHMpCiAgICAqIFtUaXBz
XSgjdGlwcykKICAgICogW01vZGFscyBhbmQgUG9wdXBzXSgjbW9kYWxzLWFu
ZC1wb3B1cHMpCiAgICAqIFtTY3JvbGxdKCNzY3JvbGwpCiAgICAqIFtNZW51
XSgjbWVudSkKICAgICogW1RhYmxlL0dyaWRdKCN0YWJsZWdyaWQpCiAgICAq
IFtGcmFtZXdvcmtzXSgjZnJhbWV3b3Jrcy0xKQogICAgKiBbQm9pbGVycGxh
dGVzXSgjYm9pbGVycGxhdGVzKQogICogW0dlc3R1cmVdKCNnZXN0dXJlKQog
ICogW01hcHNdKCNtYXBzKQogICogW1R5cG9ncmFwaHldKCN0eXBvZ3JhcGh5
KQogICogW0FuaW1hdGlvbnNdKCNhbmltYXRpb25zKQogICogW0ltYWdlIHBy
b2Nlc3NpbmddKCNpbWFnZS1wcm9jZXNzaW5nKQogICogW0VTNl0oI2VzNikK
ICAqIFtTREtdKCNzZGspCiAgKiBbTWlzY10oI21pc2MpCiAgKiBbUG9kY2Fz
dHNdKCNwb2RjYXN0cykKKiBbV29ydGggUmVhZGluZ10oI3dvcnRoLXJlYWRp
bmcpCiogW090aGVyIEF3ZXNvbWUgTGlzdHNdKCNvdGhlci1hd2Vzb21lLWxp
c3RzKQoqIFtDb250cmlidXRpbmddKCNjb250cmlidXRpbmcpCgotLS0tCgoK
IyMgUGFja2FnZSBNYW5hZ2VycwoqSG9zdCB0aGUgSmF2YVNjcmlwdCBsaWJy
YXJpZXMgYW5kIHByb3ZpZGUgdG9vbHMgZm9yIGZldGNoaW5nIGFuZCBwYWNr
YWdpbmcgdGhlbS4qCgoqIFtucG1dKGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS8p
IC0gbnBtIGlzIHRoZSBwYWNrYWdlIG1hbmFnZXIgZm9yIEphdmFTY3JpcHQu
CiogW0Jvd2VyXShodHRwczovL2dpdGh1Yi5jb20vYm93ZXIvYm93ZXIpIC0g
QSBwYWNrYWdlIG1hbmFnZXIgZm9yIHRoZSB3ZWIuCiogW2NvbXBvbmVudF0o
aHR0cHM6Ly9naXRodWIuY29tL2NvbXBvbmVudGpzL2NvbXBvbmVudCkgLSBD
bGllbnQgcGFja2FnZSBtYW5hZ2VtZW50IGZvciBidWlsZGluZyBiZXR0ZXIg
d2ViIGFwcGxpY2F0aW9ucy4KKiBbc3BtXShodHRwczovL2dpdGh1Yi5jb20v
c3BtanMvc3BtKSAtIEJyYW5kIG5ldyBzdGF0aWMgcGFja2FnZSBtYW5hZ2Vy
LgoqIFtqYW1dKGh0dHBzOi8vZ2l0aHViLmNvbS9jYW9sYW4vamFtKSAtIEEg
cGFja2FnZSBtYW5hZ2VyIHVzaW5nIGEgYnJvd3Nlci1mb2N1c2VkIGFuZCBS
ZXF1aXJlSlMgY29tcGF0aWJsZSByZXBvc2l0b3J5LgoqIFtqc3BtXShodHRw
czovL2dpdGh1Yi5jb20vanNwbS9qc3BtLWNsaSkgLSBGcmljdGlvbmxlc3Mg
YnJvd3NlciBwYWNrYWdlIG1hbmFnZW1lbnQuCiogW0VuZGVyXShodHRwczov
L2dpdGh1Yi5jb20vZW5kZXItanMvRW5kZXIpIC0gVGhlIG5vLWxpYnJhcnkg
bGlicmFyeS4KKiBbdm9sb10oaHR0cHM6Ly9naXRodWIuY29tL3ZvbG9qcy92
b2xvKSAtIENyZWF0ZSBmcm9udCBlbmQgcHJvamVjdHMgZnJvbSB0ZW1wbGF0
ZXMsIGFkZCBkZXBlbmRlbmNpZXMsIGFuZCBhdXRvbWF0ZSB0aGUgcmVzdWx0
aW5nIHByb2plY3RzLgoqIFtEdW9dKGh0dHBzOi8vZ2l0aHViLmNvbS9kdW9q
cy9kdW8pIC0gTmV4dC1nZW5lcmF0aW9uIHBhY2thZ2UgbWFuYWdlciB0aGF0
IGJsZW5kcyB0aGUgYmVzdCBpZGVhcyBmcm9tIENvbXBvbmVudCwgQnJvd3Nl
cmlmeSBhbmQgR28gdG8gbWFrZSBvcmdhbml6aW5nIGFuZCB3cml0aW5nIGZy
b250LWVuZCBjb2RlIHF1aWNrIGFuZCBwYWlubGVzcy4KKiBbeWFybl0oaHR0
cHM6Ly95YXJucGtnLmNvbS8pIC0gRmFzdCwgcmVsaWFibGUsIGFuZCBzZWN1
cmUgZGVwZW5kZW5jeSBtYW5hZ2VtZW50LgoKCiMjIExvYWRlcnMKKk1vZHVs
ZSBvciBsb2FkaW5nIHN5c3RlbSBmb3IgSmF2YVNjcmlwdC4qCgoqIFtSZXF1
aXJlSlNdKGh0dHBzOi8vZ2l0aHViLmNvbS9yZXF1aXJlanMvcmVxdWlyZWpz
KSAtIEEgZmlsZSBhbmQgbW9kdWxlIGxvYWRlciBmb3IgSmF2YVNjcmlwdC4K
KiBbYnJvd3NlcmlmeV0oaHR0cHM6Ly9naXRodWIuY29tL3N1YnN0YWNrL25v
ZGUtYnJvd3NlcmlmeSkgLSBCcm93c2VyLXNpZGUgcmVxdWlyZSgpIHRoZSBu
b2RlLmpzIHdheS4KKiBbU2VhSlNdKGh0dHBzOi8vZ2l0aHViLmNvbS9zZWFq
cy9zZWFqcykgLSBBIE1vZHVsZSBMb2FkZXIgZm9yIHRoZSBXZWIuCiogW0hl
YWRKU10oaHR0cHM6Ly9naXRodWIuY29tL2hlYWRqcy9oZWFkanMpIC0gVGhl
IG9ubHkgc2NyaXB0IGluIHlvdXIgSEVBRC4KKiBbY3VybF0oaHR0cHM6Ly9n
aXRodWIuY29tL2N1am9qcy9jdXJsKSAtIEEgc21hbGwsIGZhc3QsIGV4dGVu
c2libGUgbW9kdWxlIGxvYWRlciB0aGF0IGhhbmRsZXMgQU1ELCBDb21tb25K
UyBNb2R1bGVzLzEuMSwgQ1NTLCBIVE1ML3RleHQsIGFuZCBsZWdhY3kgc2Ny
aXB0cy4KKiBbbGF6eWxvYWRdKGh0dHBzOi8vZ2l0aHViLmNvbS9yZ3JvdmUv
bGF6eWxvYWQvKSAtIFRpbnksIGRlcGVuZGVuY3ktZnJlZSBhc3luYyBKYXZh
U2NyaXB0IGFuZCBDU1MgbG9hZGVyLgoqIFtzY3JpcHQuanNdKGh0dHBzOi8v
Z2l0aHViLmNvbS9kZWQvc2NyaXB0LmpzKSAtIEFzeW5jaHJvbm91cyBKYXZh
U2NyaXB0IGxvYWRlciBhbmQgZGVwZW5kZW5jeSBtYW5hZ2VyLgoqIFtzeXN0
ZW1qc10oaHR0cHM6Ly9naXRodWIuY29tL3N5c3RlbWpzL3N5c3RlbWpzKSAt
IEFNRCwgQ0pTICYgRVM2IHNwZWMtY29tcGxpYW50IG1vZHVsZSBsb2FkZXIu
CiogW0xvZEpTXShodHRwczovL2dpdGh1Yi5jb20veWFuaGFpamluZy9sb2Rq
cykgLSBNb2R1bGUgbG9hZGVyIGJhc2VkIG9uIEFNRC4KKiBbRVNMXShodHRw
czovL2dpdGh1Yi5jb20vZWNvbWZlL2VzbCkgLSBNb2R1bGUgbG9hZGVyIGJy
b3dzZXIgZmlyc3QsIHN1cHBvcnQgbGF6eSBkZWZpbmUgYW5kIEFNRC4KKiBb
bW9kdWxlanNdKGh0dHBzOi8vZ2l0aHViLmNvbS9scnNqbmcvbW9kdWxlanMp
IC0gTGlnaHR3ZWlnaHQgSmF2YVNjcmlwdCBtb2R1bGUgc3lzdGVtLgoKCiMj
IEJ1bmRsZXJzCgoqIFticm93c2VyaWZ5XShodHRwczovL2dpdGh1Yi5jb20v
c3Vic3RhY2svbm9kZS1icm93c2VyaWZ5KSAtIEJyb3dzZXJpZnkgbGV0cyB5
b3UgcmVxdWlyZSgnbW9kdWxlcycpIGluIHRoZSBicm93c2VyIGJ5IGJ1bmRs
aW5nIHVwIGFsbCBvZiB5b3VyIGRlcGVuZGVuY2llcy4KKiBbd2VicGFja10o
aHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2svd2VicGFjaykgLSBQYWNrcyBD
b21tb25Kcy9BTUQgbW9kdWxlcyBmb3IgdGhlIGJyb3dzZXIuCiogW1JvbGx1
cF0oaHR0cHM6Ly9naXRodWIuY29tL3JvbGx1cC9yb2xsdXApIC0gTmV4dC1n
ZW5lcmF0aW9uIEVTNiBtb2R1bGUgYnVuZGxlci4KKiBbQnJ1bmNoXShodHRw
czovL2dpdGh1Yi5jb20vYnJ1bmNoL2JydW5jaCkgLSBGYXN0IGZyb250LWVu
ZCB3ZWIgYXBwIGJ1aWxkIHRvb2wgd2l0aCBzaW1wbGUgZGVjbGFyYXRpdmUg
Y29uZmlnLgoqIFtQYXJjZWxdKGh0dHBzOi8vZ2l0aHViLmNvbS9wYXJjZWwt
YnVuZGxlci9wYXJjZWwpIC0gQmxhemluZyBmYXN0LCB6ZXJvIGNvbmZpZ3Vy
YXRpb24gd2ViIGFwcGxpY2F0aW9uIGJ1bmRsZXIuCgoKIyMgVGVzdGluZyBG
cmFtZXdvcmtzCgojIyMgRnJhbWV3b3JrcwoKKiBbbW9jaGFdKGh0dHBzOi8v
Z2l0aHViLmNvbS9tb2NoYWpzL21vY2hhKSAtIFNpbXBsZSwgZmxleGlibGUs
IGZ1biBKYXZhU2NyaXB0IHRlc3QgZnJhbWV3b3JrIGZvciBub2RlLmpzICYg
dGhlIGJyb3dzZXIuCiogW2phc21pbmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9q
YXNtaW5lL2phc21pbmUpIC0gRE9NLWxlc3Mgc2ltcGxlIEphdmFTY3JpcHQg
dGVzdGluZyBmcmFtZXdvcmsuCiogW3F1bml0XShodHRwczovL2dpdGh1Yi5j
b20vanF1ZXJ5L3F1bml0KSAtIEFuIGVhc3ktdG8tdXNlIEphdmFTY3JpcHQg
VW5pdCBUZXN0aW5nIGZyYW1ld29yay4KKiBbamVzdF0oaHR0cHM6Ly9naXRo
dWIuY29tL2ZhY2Vib29rL2plc3QpIC0gUGFpbmxlc3MgSmF2YVNjcmlwdCBV
bml0IFRlc3RpbmcuCiogW3Byb3ZhXShodHRwczovL2dpdGh1Yi5jb20vYXpl
ci9wcm92YSkgLSBOb2RlICYgQnJvd3NlciB0ZXN0IHJ1bm5lciBiYXNlZCBv
biBUYXBlIGFuZCBCcm93c2VyaWZ5CiogW0RhbGVrSlNdKGh0dHBzOi8vZ2l0
aHViLmNvbS9kYWxla2pzL2RhbGVrKSAtIEF1dG9tYXRlZCBjcm9zcyBicm93
c2VyIGZ1bmN0aW9uYWwgdGVzdGluZyB3aXRoIEphdmFTY3JpcHQKKiBbUHJv
dHJhY3Rvcl0oaHR0cHM6Ly9naXRodWIuY29tL2FuZ3VsYXIvcHJvdHJhY3Rv
cikgLSBQcm90cmFjdG9yIGlzIGFuIGVuZC10by1lbmQgdGVzdCBmcmFtZXdv
cmsgZm9yIEFuZ3VsYXJKUyBhcHBsaWNhdGlvbnMuCiogW3RhcGVdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9zdWJzdGFjay90YXBlKSAtIFRhcC1wcm9kdWNpbmcg
dGVzdCBoYXJuZXNzIGZvciBub2RlIGFuZCBicm93c2Vycy4KKiBbVGVzdENh
ZmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9EZXZFeHByZXNzL3Rlc3RjYWZlKSAt
IEF1dG9tYXRlZCBicm93c2VyIHRlc3RpbmcgZm9yIHRoZSBtb2Rlcm4gd2Vi
IGRldmVsb3BtZW50IHN0YWNrLgoqIFthdmFdKGh0dHBzOi8vZ2l0aHViLmNv
bS9hdmFqcy9hdmEpIC0g8J+agCBGdXR1cmlzdGljIEphdmFTY3JpcHQgdGVz
dCBydW5uZXIKCiMjIyBBc3NlcnRpb24KCiogW2NoYWldKGh0dHBzOi8vZ2l0
aHViLmNvbS9jaGFpanMvY2hhaSkgLSBCREQgLyBUREQgYXNzZXJ0aW9uIGZy
YW1ld29yayBmb3Igbm9kZS5qcyBhbmQgdGhlIGJyb3dzZXIgdGhhdCBjYW4g
YmUgcGFpcmVkIHdpdGggYW55IHRlc3RpbmcgZnJhbWV3b3JrLgoqIFtFbnp5
bWVdKGh0dHA6Ly9haXJibmIuaW8vZW56eW1lL2luZGV4Lmh0bWwpIC0gRW56
eW1lIGlzIGEgSmF2YVNjcmlwdCBUZXN0aW5nIHV0aWxpdHkgZm9yIFJlYWN0
IHRoYXQgbWFrZXMgaXQgZWFzaWVyIHRvIGFzc2VydCwgbWFuaXB1bGF0ZSwg
YW5kIHRyYXZlcnNlIHlvdXIgUmVhY3QgQ29tcG9uZW50cycgb3V0cHV0Lgoq
IFtyZWFjdCB0ZXN0aW5nIGxpYnJhcnldKGh0dHBzOi8vZ2l0aHViLmNvbS9r
ZW50Y2RvZGRzL3JlYWN0LXRlc3RpbmctbGlicmFyeSkgLSBTaW1wbGUgYW5k
IGNvbXBsZXRlIFJlYWN0IERPTSB0ZXN0aW5nIHV0aWxpdGllcyB0aGF0IGVu
Y291cmFnZSBnb29kIHRlc3RpbmcgcHJhY3RpY2VzLgoqIFtTaW5vbi5KU10o
aHR0cHM6Ly9naXRodWIuY29tL3Npbm9uanMvc2lub24pIC0gVGVzdCBzcGll
cywgc3R1YnMsIGFuZCBtb2NrcyBmb3IgSmF2YVNjcmlwdC4KKiBbZXhwZWN0
LmpzXShodHRwczovL2dpdGh1Yi5jb20vQXV0b21hdHRpYy9leHBlY3QuanMp
IC0gTWluaW1hbGlzdGljIEJERC1zdHlsZSBhc3NlcnRpb25zIGZvciBOb2Rl
LkpTIGFuZCB0aGUgYnJvd3Nlci4KCiMjIyBDb3ZlcmFnZQoKKiBbaXN0YW5i
dWxdKGh0dHBzOi8vZ2l0aHViLmNvbS9nb3R3YXJsb3N0L2lzdGFuYnVsKSAt
IFlldCBhbm90aGVyIEpTIGNvZGUgY292ZXJhZ2UgdG9vbC4KKiBbYmxhbmtl
dF0oaHR0cHM6Ly9naXRodWIuY29tL2FsZXgtc2V2aWxsZS9ibGFua2V0KSAt
IEEgc2ltcGxlIGNvZGUgY292ZXJhZ2UgbGlicmFyeSBmb3IgSmF2YVNjcmlw
dC4gRGVzaWduZWQgdG8gYmUgZWFzeSB0byBpbnN0YWxsIGFuZCB1c2UsIGZv
ciBib3RoIGJyb3dzZXIgYW5kIG5vZGVqcy4KKiBbSlNDb3Zlcl0oaHR0cHM6
Ly9naXRodWIuY29tL3RudGltOTYvSlNDb3ZlcikgLSBKU0NvdmVyIGlzIGEg
dG9vbCB0aGF0IG1lYXN1cmVzIGNvZGUgY292ZXJhZ2UgZm9yIEphdmFTY3Jp
cHQgcHJvZ3JhbXMuCgojIyMgUnVubmVyCgoqIFtwaGFudG9tanNdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9hcml5YS9waGFudG9tanMpIC0gU2NyaXB0YWJsZSBI
ZWFkbGVzcyBXZWJLaXQuCiogW3NsaW1lcmpzXShodHRwczovL2dpdGh1Yi5j
b20vbGF1cmVudGovc2xpbWVyanMpIC0gQSBQaGFudG9tSlMtbGlrZSB0b29s
IHJ1bm5pbmcgR2Vja28uCiogW2Nhc3BlcmpzXShodHRwczovL2dpdGh1Yi5j
b20vY2FzcGVyanMvY2FzcGVyanMpIC0gTmF2aWdhdGlvbiBzY3JpcHRpbmcg
JiB0ZXN0aW5nIHV0aWxpdHkgZm9yIFBoYW50b21KUyBhbmQgU2xpbWVySlMu
CiogW3pvbWJpZV0oaHR0cHM6Ly9naXRodWIuY29tL2Fzc2FmL3pvbWJpZSkg
LSBJbnNhbmVseSBmYXN0LCBmdWxsLXN0YWNrLCBoZWFkbGVzcyBicm93c2Vy
IHRlc3RpbmcgdXNpbmcgbm9kZS5qcy4KKiBbdG90b3JvXShodHRwczovL2dp
dGh1Yi5jb20vdG90b3JvanMvdG90b3JvKSAtIEEgc2ltcGxlIGFuZCBzdGFi
bGUgY3Jvc3MtYnJvd3NlciB0ZXN0aW5nIHRvb2wuCiogW2thcm1hXShodHRw
czovL2dpdGh1Yi5jb20va2FybWEtcnVubmVyL2thcm1hKSAtIFNwZWN0YWN1
bGFyIFRlc3QgUnVubmVyIGZvciBKYXZhU2NyaXB0LgoqIFtuaWdodHdhdGNo
XShodHRwczovL2dpdGh1Yi5jb20vbmlnaHR3YXRjaGpzL25pZ2h0d2F0Y2gp
IC0gVUkgYXV0b21hdGVkIHRlc3RpbmcgZnJhbWV3b3JrIGJhc2VkIG9uIG5v
ZGUuanMgYW5kIHNlbGVuaXVtIHdlYmRyaXZlci4KKiBbaW50ZXJuXShodHRw
czovL2dpdGh1Yi5jb20vdGhlaW50ZXJuL2ludGVybikgLSBBIG5leHQtZ2Vu
ZXJhdGlvbiBjb2RlIHRlc3Rpbmcgc3RhY2sgZm9yIEphdmFTY3JpcHQuCiog
W3lvbHBvXShodHRwOi8vd3d3LnlvbHBvLmNvbSkgLSBBIHN0YXRlbWVudC1i
eS1zdGF0ZW1lbnQgSmF2YVNjcmlwdCBpbnRlcnByZXRlciBpbiB0aGUgYnJv
d3Nlci4KKiBbcHVwcGV0ZWVyXShodHRwczovL2dpdGh1Yi5jb20vR29vZ2xl
Q2hyb21lL3B1cHBldGVlcikgLSBIZWFkbGVzcyBDaHJvbWUgTm9kZS5qcyBB
UEkgYnkgb2ZmaWNpYWwgR29vZ2xlIENocm9tZSB0ZWFtLgoKIyMgUUEgVG9v
bHMKCiogW3ByZXR0aWVyXShodHRwczovL2dpdGh1Yi5jb20vcHJldHRpZXIv
cHJldHRpZXIpIC0gUHJldHRpZXIgaXMgYW4gb3BpbmlvbmF0ZWQgY29kZSBm
b3JtYXR0ZXIuCiogW0pTSGludF0oaHR0cHM6Ly9naXRodWIuY29tL2pzaGlu
dC9qc2hpbnQvKSAtIEpTSGludCBpcyBhIHRvb2wgdGhhdCBoZWxwcyB0byBk
ZXRlY3QgZXJyb3JzIGFuZCBwb3RlbnRpYWwgcHJvYmxlbXMgaW4geW91ciBK
YXZhU2NyaXB0IGNvZGUuCiogW2pzY3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9q
c2NzLWRldi9ub2RlLWpzY3MpIC0gSmF2YVNjcmlwdCBDb2RlIFN0eWxlIGNo
ZWNrZXIuCiogW2pzZm10XShodHRwczovL2dpdGh1Yi5jb20vcmRpby9qc2Zt
dCkgLSBGb3IgZm9ybWF0dGluZywgc2VhcmNoaW5nLCBhbmQgcmV3cml0aW5n
IEphdmFTY3JpcHQuCiogW2pzaW5zcGVjdF0oaHR0cHM6Ly9naXRodWIuY29t
L2RhbmllbHN0anVsZXMvanNpbnNwZWN0KSAtIERldGVjdCBjb3B5LXBhc3Rl
ZCBhbmQgc3RydWN0dXJhbGx5IHNpbWlsYXIgY29kZS4KKiBbYnVkZHkuanNd
KGh0dHBzOi8vZ2l0aHViLmNvbS9kYW5pZWxzdGp1bGVzL2J1ZGR5LmpzKSAt
IE1hZ2ljIG51bWJlciBkZXRlY3Rpb24gZm9yIEphdmFTY3JpcHQuCiogW0VT
TGludF0oaHR0cHM6Ly9naXRodWIuY29tL2VzbGludC9lc2xpbnQpIC0gQSBm
dWxseSBwbHVnZ2FibGUgdG9vbCBmb3IgaWRlbnRpZnlpbmcgYW5kIHJlcG9y
dGluZyBvbiBwYXR0ZXJucyBpbiBKYXZhU2NyaXB0LgoqIFtKU0xpbnRdKGh0
dHBzOi8vZ2l0aHViLmNvbS9kb3VnbGFzY3JvY2tmb3JkL0pTTGludCkgLSBI
aWdoLXN0YW5kYXJkcywgc3RyaWN0ICYgb3BpbmlvbmF0ZWQgY29kZSBxdWFs
aXR5IHRvb2wsIGFpbWluZyB0byBrZWVwIG9ubHkgZ29vZCBwYXJ0cyBvZiB0
aGUgbGFuZ3VhZ2UuCiogW0phdmFTY3JpcHQgU3RhbmRhcmQgU3R5bGVdKGh0
dHBzOi8vZ2l0aHViLmNvbS9mZXJvc3Mvc3RhbmRhcmQpIC0gT3BpbmlvbmF0
ZWQsIG5vLWNvbmZpZ3VyYXRpb24gc3R5bGUgZ3VpZGUsIHN0eWxlIGNoZWNr
ZXIsIGFuZCBmb3JtYXR0ZXIKKiBbUHJlLWV2YWx1YXRlIGNvZGUgYXQgYnVp
bGR0aW1lXShodHRwczovL2dpdGh1Yi5jb20va2VudGNkb2Rkcy9wcmV2YWwu
bWFjcm8pIC0gUHJlLWV2YWx1YXRlIHlvdXIgZnJvbnQgZW5kIGphdmFzY3Jp
cHQgY29kZSBhdCBidWlsZC10aW1lCgojIyBNVkMgRnJhbWV3b3JrcyBhbmQg
TGlicmFyaWVzCgoqIFthbmd1bGFyLmpzXShodHRwczovL2dpdGh1Yi5jb20v
YW5ndWxhci9hbmd1bGFyLmpzKSAtIEhUTUwgZW5oYW5jZWQgZm9yIHdlYiBh
cHBzLgoqIFthdXJlbGlhXShodHRwOi8vYXVyZWxpYS5pbykgLSBBIEphdmFT
Y3JpcHQgY2xpZW50IGZyYW1ld29yayBmb3IgbW9iaWxlLCBkZXNrdG9wIGFu
ZCB3ZWIuCiogW2JhY2tib25lXShodHRwczovL2dpdGh1Yi5jb20vamFzaGtl
bmFzL2JhY2tib25lKSAtIEdpdmUgeW91ciBKUyBBcHAgc29tZSBCYWNrYm9u
ZSB3aXRoIE1vZGVscywgVmlld3MsIENvbGxlY3Rpb25zLCBhbmQgRXZlbnRz
LgoqIFtlbWJlci5qc10oaHR0cHM6Ly9naXRodWIuY29tL2VtYmVyanMvZW1i
ZXIuanMpIC0gQSBKYXZhU2NyaXB0IGZyYW1ld29yayBmb3IgY3JlYXRpbmcg
YW1iaXRpb3VzIHdlYiBhcHBsaWNhdGlvbnMuCiogW21ldGVvcl0oaHR0cHM6
Ly9naXRodWIuY29tL21ldGVvci9tZXRlb3IpIC0gQW4gdWx0cmEtc2ltcGxl
LCBkYXRhYmFzZS1ldmVyeXdoZXJlLCBkYXRhLW9uLXRoZS13aXJlLCBwdXJl
LWphdmFzY3JpcHQgd2ViIGZyYW1ld29yay4KKiBbcmFjdGl2ZV0oaHR0cHM6
Ly9naXRodWIuY29tL3JhY3RpdmVqcy9yYWN0aXZlKSAtIE5leHQtZ2VuZXJh
dGlvbiBET00gbWFuaXB1bGF0aW9uLgoqIFt2dWVdKGh0dHBzOi8vZ2l0aHVi
LmNvbS92dWVqcy92dWUpIC0gSW50dWl0aXZlLCBmYXN0ICYgY29tcG9zYWJs
ZSBNVlZNIGZvciBidWlsZGluZyBpbnRlcmFjdGl2ZSBpbnRlcmZhY2VzLgoq
IFtrbm9ja291dF0oaHR0cHM6Ly9naXRodWIuY29tL2tub2Nrb3V0L2tub2Nr
b3V0KSAtIEtub2Nrb3V0IG1ha2VzIGl0IGVhc2llciB0byBjcmVhdGUgcmlj
aCwgcmVzcG9uc2l2ZSBVSXMgd2l0aCBKYXZhU2NyaXB0LgoqIFtzcGluZV0o
aHR0cHM6Ly9naXRodWIuY29tL3NwaW5lL3NwaW5lKSAtIExpZ2h0d2VpZ2h0
IE1WQyBsaWJyYXJ5IGZvciBidWlsZGluZyBKYXZhU2NyaXB0IGFwcGxpY2F0
aW9ucy4KKiBbZXNwcmVzc28uanNdKGh0dHBzOi8vZ2l0aHViLmNvbS90ZWNo
bGF5ZXIvZXNwcmVzc28uanMpIC0gQSBtaW5pbWFsIEphdmFTY3JpcHQgbGli
cmFyeSBmb3IgY3JhZnRpbmcgdXNlciBpbnRlcmZhY2VzLgoqIFtjYW5qc10o
aHR0cHM6Ly9naXRodWIuY29tL2NhbmpzL2NhbmpzKSAtIENhbiBkbyBKUywg
YmV0dGVyLCBmYXN0ZXIsIGVhc2llci4KKiBbcmVhY3RdKGh0dHBzOi8vZmFj
ZWJvb2suZ2l0aHViLmlvL3JlYWN0LykgLSBBIGxpYnJhcnkgZm9yIGJ1aWxk
aW5nIHVzZXIgaW50ZXJmYWNlcy4gSXQncyBkZWNsYXJhdGl2ZSwgZWZmaWNp
ZW50LCBhbmQgZXh0cmVtZWx5IGZsZXhpYmxlLiBXb3JrcyB3aXRoIGEgVmly
dHVhbCBET00uCiogW2h5cGVyYXBwXShodHRwczovL2dpdGh1Yi5jb20vaHlw
ZXJhcHAvaHlwZXJhcHApIC0gMWtiIEphdmFTY3JpcHQgbGlicmFyeSBmb3Ig
YnVpbGRpbmcgZnJvbnRlbmQgYXBwbGljYXRpb25zLgoqIFtwcmVhY3RdKGh0
dHBzOi8vZ2l0aHViLmNvbS9kZXZlbG9waXQvcHJlYWN0KSAtIEZhc3QgM2ti
IFJlYWN0IGFsdGVybmF0aXZlIHdpdGggdGhlIHNhbWUgRVM2IEFQSS4gQ29t
cG9uZW50cyAmIFZpcnR1YWwgRE9NLgoqIFtuYXRpdmVzY3JpcHRdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9OYXRpdmVTY3JpcHQvTmF0aXZlU2NyaXB0KSAtIEJ1
aWxkIHRydWx5IG5hdGl2ZSBjcm9zcy1wbGF0Zm9ybSBpT1MgYW5kIEFuZHJv
aWQgYXBwcyB3aXRoIEphdmFTY3JpcHQuCiogW3JlYWN0LW5hdGl2ZV0oaHR0
cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0LW5hdGl2ZSkgLSBBIGZy
YW1ld29yayBmb3IgYnVpbGRpbmcgbmF0aXZlIGFwcHMgd2l0aCBSZWFjdC4K
KiBbcmlvdF0oaHR0cHM6Ly9naXRodWIuY29tL3Jpb3QvcmlvdCkgLSBSZWFj
dC1saWtlIGxpYnJhcnksIGJ1dCB3aXRoIHZlcnkgc21hbGwgc2l6ZS4KKiBb
dGhvcmF4XShodHRwczovL2dpdGh1Yi5jb20vd2FsbWFydGxhYnMvdGhvcmF4
KSAtIFN0cmVuZ3RoZW5pbmcgeW91ciBCYWNrYm9uZS4KKiBbY2hhcGxpbl0o
aHR0cHM6Ly9naXRodWIuY29tL2NoYXBsaW5qcy9jaGFwbGluKSAtIEFuIGFy
Y2hpdGVjdHVyZSBmb3IgSmF2YVNjcmlwdCBhcHBsaWNhdGlvbnMgdXNpbmcg
dGhlIEJhY2tib25lLmpzIGxpYnJhcnkuCiogW21hcmlvbmV0dGVdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9tYXJpb25ldHRlanMvYmFja2JvbmUubWFyaW9uZXR0
ZSkgLSBBIGNvbXBvc2l0ZSBhcHBsaWNhdGlvbiBsaWJyYXJ5IGZvciBCYWNr
Ym9uZS5qcyB0aGF0IGFpbXMgdG8gc2ltcGxpZnkgdGhlIGNvbnN0cnVjdGlv
biBvZiBsYXJnZSBzY2FsZSBKYXZhU2NyaXB0IGFwcGxpY2F0aW9ucy4KKiBb
cmlwcGxlXShodHRwczovL2dpdGh1Yi5jb20vcmlwcGxlanMvcmlwcGxlKSAt
IEEgdGlueSBmb3VuZGF0aW9uIGZvciBidWlsZGluZyByZWFjdGl2ZSB2aWV3
cy4KKiBbcml2ZXRzXShodHRwczovL2dpdGh1Yi5jb20vbWlrZXJpYy9yaXZl
dHMpIC0gTGlnaHR3ZWlnaHQgYW5kIHBvd2VyZnVsIGRhdGEgYmluZGluZyAr
IHRlbXBsYXRpbmcgc29sdXRpb24uCiogW2RlcmJ5XShodHRwczovL2dpdGh1
Yi5jb20vZGVyYnlqcy9kZXJieSkgLSBNVkMgZnJhbWV3b3JrIG1ha2luZyBp
dCBlYXN5IHRvIHdyaXRlIHJlYWx0aW1lLCBjb2xsYWJvcmF0aXZlIGFwcGxp
Y2F0aW9ucyB0aGF0IHJ1biBpbiBib3RoIE5vZGUuanMgYW5kIGJyb3dzZXJz
LgogICAgKiBbZGVyYnktYXdlc29tZV0oaHR0cHM6Ly9naXRodWIuY29tL3J1
c3NsbC9hd2Vzb21lLWRlcmJ5KSAtIEEgY29sbGVjdGlvbiBvZiBhd2Vzb21l
IGRlcmJ5IGNvbXBvbmVudHMKKiBbd2F5LmpzXShodHRwczovL2dpdGh1Yi5j
b20vZ3dlbmRhbGwvd2F5LmpzKSAtIFNpbXBsZSwgbGlnaHR3ZWlnaHQsIHBl
cnNpc3RlbnQgdHdvLXdheSBkYXRhYmluZGluZy4KKiBbbWl0aHJpbC5qc10o
aHR0cHM6Ly9naXRodWIuY29tL2xob3JpZS9taXRocmlsLmpzKSAtIE1pdGhy
aWwgaXMgYSBjbGllbnQtc2lkZSBNVkMgZnJhbWV3b3JrIChMaWdodC13ZWln
aHQsIFJvYnVzdCwgRmFzdCkuCiogW2pzYmxvY2tzXShodHRwczovL2dpdGh1
Yi5jb20vYXN0b2lsa292L2pzYmxvY2tzKSAtIGpzYmxvY2tzIGlzIGJldHRl
ciBNVi1pc2ggZnJhbWV3b3JrLgoqIFtMaXF1aWRMYXZhXShodHRwOi8vd3d3
LmxhdmEtZnJhbWV3b3JrLmNvbS8pIC0gVHJhbnNwYXJlbnQgTVZDIGZyYW1l
d29yayBmb3IgYnVpbGRpbmcgdXNlciBpbnRlcmZhY2VzLgoqIFtmZWF0aGVy
c10oaHR0cHM6Ly9naXRodWIuY29tL2ZlYXRoZXJzanMvZmVhdGhlcnMpIC0g
QSBtaW5pbWFsaXN0IHJlYWwtdGltZSBKYXZhU2NyaXB0IGZyYW1ld29yayBm
b3IgdG9tb3Jyb3cncyBhcHBzLgoqIFtLZW9dKGh0dHBzOi8vZ2l0aHViLmNv
bS9XaWxkaG9uZXkvS2VvKSAtIEZ1bmN0aW9uYWwgc3RhdGVsZXNzIFJlYWN0
IGNvbXBvbmVudHMgd2l0aCBTaGFkb3cgRE9NIHN1cHBvcnQuCiogW2F0dmpz
XShodHRwczovL2dpdGh1Yi5jb20vZW1hZGFsYW0vYXR2anMpIC0gQmxhemlu
ZyBmYXN0IEFwcGxlIFRWIGFwcGxpY2F0aW9uIGRldmVsb3BtZW50IHVzaW5n
IHB1cmUgSmF2YVNjcmlwdC4KCiMjIE5vZGUtUG93ZXJlZCBDTVMgRnJhbWV3
b3JrcwoKKiBbS2V5c3RvbmVKU10oaHR0cHM6Ly9naXRodWIuY29tL2tleXN0
b25lanMva2V5c3RvbmUpIC0gcG93ZXJmdWwgQ01TIGFuZCB3ZWIgYXBwIGZy
YW1ld29yay4KKiBbUmVhY3Rpb24gQ29tbWVyY2VdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9yZWFjdGlvbmNvbW1lcmNlL3JlYWN0aW9uKSAtIHJlYWN0aXZlIENN
UywgcmVhbC10aW1lIGFyY2hpdGVjdHVyZSBhbmQgZGVzaWduLgoqIFtHaG9z
dF0oaHR0cHM6Ly9naXRodWIuY29tL3RyeWdob3N0L0dob3N0KSAtIHNpbXBs
ZSwgcG93ZXJmdWwgcHVibGlzaGluZyBwbGF0Zm9ybS4KKiBbQXBvc3Ryb3Bo
ZV0oaHR0cHM6Ly9naXRodWIuY29tL3B1bmthdmUvYXBvc3Ryb3BoZSkgLSBD
TVMgd2l0aCBjb250ZW50IGVkaXRpbmcgYW5kIGVzc2VudGlhbCBzZXJ2aWNl
cy4KKiBbV2UuanNdKGh0dHBzOi8vZ2l0aHViLmNvbS93ZWpzL3dlLykgLSBm
cmFtZXdvcmsgZm9yIHJlYWwgdGltZSBhcHBzLCBzaXRlcyBvciBibG9ncy4K
KiBbSGF0Y2guanNdKGh0dHBzOi8vZ2l0aHViLmNvbS9pbnZlbnR1cmVzL2hh
dGNoanMpIC0gQ01TIHBsYXRmb3JtIHdpdGggc29jaWFsIGZlYXR1cmVzLgoq
IFtUYXJhY290SlNdKGh0dHBzOi8vZ2l0aHViLmNvbS94dHJlbWVzcGIvdGFy
YWNvdGpzLWdlbmVyYXRvci8pIC0gZmFzdCBhbmQgbWluaW1hbGlzdCBDTVMg
YmFzZWQgb24gTm9kZS5qcy4KKiBbTm9kaXplY21zXShodHRwczovL2dpdGh1
Yi5jb20vbm9kaXplL25vZGl6ZWNtcykgLSBDTVMgZm9yIENvZmZlZVNjcmlw
dCBsb3ZlcnMuCiogW0NvZHldKGh0dHBzOi8vZ2l0aHViLmNvbS9qY29wcGll
dGVycy9jb2R5KSAtIENNUyB3aXRoIFdTWVdZRyBlZGl0b3IuCiogW1BlbmNp
bEJsdWVdKGh0dHBzOi8vZ2l0aHViLmNvbS9wZW5jaWxibHVlL3BlbmNpbGJs
dWUvKSAtIENNUyBhbmQgYmxvZ2dpbmcgcGxhdGZvcm0uCgojIyBUZW1wbGF0
aW5nIEVuZ2luZXMKKlRlbXBsYXRpbmcgZW5naW5lcyBhbGxvdyB5b3UgdG8g
cGVyZm9ybSBzdHJpbmcgaW50ZXJwb2xhdGlvbi4qCgoqIFttdXN0YWNoZS5q
c10oaHR0cHM6Ly9naXRodWIuY29tL2phbmwvbXVzdGFjaGUuanMpIC0gTWlu
aW1hbCB0ZW1wbGF0aW5nIHdpdGgge3ttdXN0YWNoZXN9fSBpbiBKYXZhU2Ny
aXB0LgoqIFtoYW5kbGViYXJzLmpzXShodHRwczovL2dpdGh1Yi5jb20vd3lj
YXRzL2hhbmRsZWJhcnMuanMvKSAtIEFuIGV4dGVuc2lvbiB0byB0aGUgTXVz
dGFjaGUgdGVtcGxhdGluZyBsYW5ndWFnZS4KKiBbbnVuanVja3NdKGh0dHBz
Oi8vbW96aWxsYS5naXRodWIuaW8vbnVuanVja3MvKSAtIEEgcmljaCBhbmQg
cG93ZXJmdWwgdGVtcGxhdGluZyBsYW5ndWFnZSBmb3IgSmF2YVNjcmlwdCBm
cm9tIE1vemlsbGEuCiogW2hvZ2FuLmpzXShodHRwczovL2dpdGh1Yi5jb20v
dHdpdHRlci9ob2dhbi5qcykgLSBBIGNvbXBpbGVyIGZvciB0aGUgTXVzdGFj
aGUgdGVtcGxhdGluZyBsYW5ndWFnZS4KKiBbZG9UXShodHRwczovL2dpdGh1
Yi5jb20vb2xhZG8vZG9UKSAtIFRoZSBmYXN0ZXN0ICsgY29uY2lzZSBKYXZh
U2NyaXB0IHRlbXBsYXRlIGVuZ2luZSBmb3Igbm9kZWpzIGFuZCBicm93c2Vy
cy4KKiBbZHVzdGpzXShodHRwczovL2dpdGh1Yi5jb20vbGlua2VkaW4vZHVz
dGpzLykgLSBBc3luY2hyb25vdXMgdGVtcGxhdGVzIGZvciB0aGUgYnJvd3Nl
ciBhbmQgbm9kZS5qcy4KKiBbZWNvXShodHRwczovL2dpdGh1Yi5jb20vc3N0
ZXBoZW5zb24vZWNvLykgLSBFbWJlZGRlZCBDb2ZmZWVTY3JpcHQgdGVtcGxh
dGVzLgoqIFtKYXZhU2NyaXB0LVRlbXBsYXRlc10oaHR0cHM6Ly9naXRodWIu
Y29tL2JsdWVpbXAvSmF2YVNjcmlwdC1UZW1wbGF0ZXMpIC0gPCAxS0IgbGln
aHR3ZWlnaHQsIGZhc3QgJiBwb3dlcmZ1bCBKYXZhU2NyaXB0IHRlbXBsYXRp
bmcgZW5naW5lIHdpdGggemVybyBkZXBlbmRlbmNpZXMuCiogW3QuanNdKGh0
dHBzOi8vZ2l0aHViLmNvbS9qYXNvbm1vby90LmpzKSAtIEEgdGlueSBKYXZh
U2NyaXB0IHRlbXBsYXRpbmcgZnJhbWV3b3JrIGluIH40MDAgYnl0ZXMgZ3pp
cHBlZC4KKiBbUHVnXShodHRwczovL2dpdGh1Yi5jb20vcHVnanMvcHVnKSAt
IFJvYnVzdCwgZWxlZ2FudCwgZmVhdHVyZSByaWNoIHRlbXBsYXRlIGVuZ2lu
ZSBmb3Igbm9kZWpzLiAoZm9ybWVybHkga25vd24gYXMgSmFkZSkKKiBbRUpT
XShodHRwczovL2dpdGh1Yi5jb20vbWRlL2VqcykgLSBFZmZlY3RpdmUgSmF2
YVNjcmlwdCB0ZW1wbGF0aW5nLgoqIFt4dGVtcGxhdGVdKGh0dHBzOi8vZ2l0
aHViLmNvbS94dGVtcGxhdGUveHRlbXBsYXRlKSAtIGVYdGVuc2libGUgVGVt
cGxhdGUgRW5naW5lIGxpYiBmb3Igbm9kZSBhbmQgdGhlIGJyb3dzZXIKKiBb
bWFya29dKGh0dHBzOi8vZ2l0aHViLmNvbS9tYXJrby1qcy9tYXJrbykgLSBB
IGZhc3QsIGxpZ2h0d2VpZ2h0LCBIVE1MLWJhc2VkIHRlbXBsYXRpbmcgZW5n
aW5lIGZvciBOb2RlLmpzIGFuZCB0aGUgYnJvd3NlciB3aXRoIGFzeW5jLCBz
dHJlYW1pbmcsIGN1c3RvbSB0YWdzIGFuZCBDb21tb25KUyBtb2R1bGVzIGFz
IGNvbXBpbGVkIG91dHB1dC4KKiBbc3dpZ10oaHR0cDovL3BhdWxhcm1zdHJv
bmcuZ2l0aHViLmlvL3N3aWcvKSAtIEEgc2ltcGxlLCBwb3dlcmZ1bCwgYW5k
IGV4dGVuZGFibGUgTm9kZS5qcyBhbmQgYnJvd3Nlci1iYXNlZCBKYXZhU2Ny
aXB0IHRlbXBsYXRlIGVuZ2luZS4KCiMjIEFydGljbGVzIGFuZCBQb3N0cwoK
KiBbVGhlIEphdmFTY3JpcHQgdGhhdCB5b3Ugc2hvdWxkIGtub3ddKGh0dHBz
Oi8vbWVkaXVtLmNvbS9AcGVkcm9wb2xpc2Vuc28vby1qYXZhc3NjcmlwdC1x
dWUtdm9jw6otZGV2ZXJpYS1jb25oZWNlci1iNzBlOTRkMWQ3MDYpIC0gQXJ0
aWNsZSBhYm91dCBjb25jZXB0cyBvZiBKYXZhU2NyaXB0IEZ1bmN0aW9uYWwu
CiogW0hvdyBKYXZhU2NyaXB0IHdvcmtzXShodHRwczovL2Jsb2cuc2Vzc2lv
bnN0YWNrLmNvbS90YWdnZWQvdHV0b3JpYWwpIC0gQSBzZXJpZXMgb2YgYXJ0
aWNsZXMgYWJvdXQgdGhlIGJ1aWxkaW5nIGJsb2NrcyBvZiBKYXZhU2NyaXB0
LgoKIyMgRGF0YSBWaXN1YWxpemF0aW9uCipEYXRhIHZpc3VhbGl6YXRpb24g
dG9vbHMgZm9yIHRoZSB3ZWIuKgoKKiBbZDNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9kMy9kMykgLSBBIEphdmFTY3JpcHQgdmlzdWFsaXphdGlvbiBsaWJyYXJ5
IGZvciBIVE1MIGFuZCBTVkcuCiAgKiBbbWV0cmljcy1ncmFwaGljc10oaHR0
cHM6Ly9naXRodWIuY29tL21vemlsbGEvbWV0cmljcy1ncmFwaGljcykgLSBB
IGxpYnJhcnkgb3B0aW1pemVkIGZvciBjb25jaXNlLCBwcmluY2lwbGVkIGRh
dGEgZ3JhcGhpY3MgYW5kIGxheW91dHMuCiogW3RocmVlLmpzXShodHRwczov
L2dpdGh1Yi5jb20vbXJkb29iL3RocmVlLmpzKSAtIEphdmFTY3JpcHQgM0Qg
bGlicmFyeS4KKiBbQ2hhcnQuanNdKGh0dHBzOi8vZ2l0aHViLmNvbS9jaGFy
dGpzL0NoYXJ0LmpzKSAtIFNpbXBsZSBIVE1MNSBDaGFydHMgdXNpbmcgdGhl
IDxjYW52YXM+IHRhZy4KKiBbcGFwZXIuanNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9wYXBlcmpzL3BhcGVyLmpzKSAtIFRoZSBTd2lzcyBBcm15IEtuaWZlIG9m
IFZlY3RvciBHcmFwaGljcyBTY3JpcHRpbmcg4oCTIFNjcmlwdG9ncmFwaGVy
IHBvcnRlZCB0byBKYXZhU2NyaXB0IGFuZCB0aGUgYnJvd3NlciwgdXNpbmcg
SFRNTDUgQ2FudmFzLgoqIFtmYWJyaWMuanNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9rYW5nYXgvZmFicmljLmpzKSAtIEphdmFTY3JpcHQgQ2FudmFzIExpYnJh
cnksIFNWRy10by1DYW52YXMgKCYgY2FudmFzLXRvLVNWRykgUGFyc2VyLgoq
IFtwZWl0eV0oaHR0cHM6Ly9naXRodWIuY29tL2JlbnBpY2tsZXMvcGVpdHkp
IC0gUHJvZ3Jlc3NpdmUgPHN2Zz4gYmFyLCBsaW5lIGFuZCBwaWUgY2hhcnRz
LgoqIFtyYXBoYWVsXShodHRwczovL2dpdGh1Yi5jb20vRG1pdHJ5QmFyYW5v
dnNraXkvcmFwaGFlbCkgLSBKYXZhU2NyaXB0IFZlY3RvciBMaWJyYXJ5Lgoq
IFtlY2hhcnRzXShodHRwczovL2dpdGh1Yi5jb20vZWNvbWZlL2VjaGFydHMp
IC0gRW50ZXJwcmlzZSBDaGFydHMuCiogW3Zpc10oaHR0cHM6Ly9naXRodWIu
Y29tL2FsbWVuZGUvdmlzKSAtIER5bmFtaWMsIGJyb3dzZXItYmFzZWQgdmlz
dWFsaXphdGlvbiBsaWJyYXJ5LgoqIFt0d28uanNdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9qb25vYnIxL3R3by5qcykgLSBBIHJlbmRlcmVyIGFnbm9zdGljIHR3
by1kaW1lbnNpb25hbCBkcmF3aW5nIGFwaSBmb3IgdGhlIHdlYi4KKiBbZy5y
YXBoYWVsXShodHRwczovL2dpdGh1Yi5jb20vRG1pdHJ5QmFyYW5vdnNraXkv
Zy5yYXBoYWVsKSAtIENoYXJ0cyBmb3IgUmFwaGHDq2wuCiogW3NpZ21hLmpz
XShodHRwczovL2dpdGh1Yi5jb20vamFjb215YWwvc2lnbWEuanMpIC0gQSBK
YXZhU2NyaXB0IGxpYnJhcnkgZGVkaWNhdGVkIHRvIGdyYXBoIGRyYXdpbmcu
CiogW2FyYm9yXShodHRwczovL2dpdGh1Yi5jb20vc2FtaXpkYXRjby9hcmJv
cikgLSBBIGdyYXBoIHZpc3VhbGl6YXRpb24gbGlicmFyeSB1c2luZyB3ZWIg
d29ya2VycyBhbmQgalF1ZXJ5LgoqIFtjdWJpc21dKGh0dHBzOi8vZ2l0aHVi
LmNvbS9zcXVhcmUvY3ViaXNtKSAtIEEgRDMgcGx1Z2luIGZvciB2aXN1YWxp
emluZyB0aW1lIHNlcmllcy4KKiBbZGMuanNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9kYy1qcy9kYy5qcykgLSBNdWx0aS1EaW1lbnNpb25hbCBjaGFydGluZyBi
dWlsdCB0byB3b3JrIG5hdGl2ZWx5IHdpdGggY3Jvc3NmaWx0ZXIgcmVuZGVy
ZWQgd2l0aCBkMy5qcwoqIFt2ZWdhXShodHRwczovL2dpdGh1Yi5jb20vdHJp
ZmFjdGEvdmVnYSkgLSBBIHZpc3VhbGl6YXRpb24gZ3JhbW1hci4KKiBbcHJv
Y2Vzc2luZy5qc10oaHR0cDovL3Byb2Nlc3Npbmdqcy5vcmcvKSAtIFByb2Nl
c3NpbmcuanMgbWFrZXMgeW91ciBkYXRhIHZpc3VhbGl6YXRpb25zIHdvcmsg
dXNpbmcgd2ViIHN0YW5kYXJkcyBhbmQgd2l0aG91dCBhbnkgcGx1Zy1pbnMu
CiogW2VudmlzaW9uanNdKGh0dHBzOi8vZ2l0aHViLmNvbS9IdW1ibGVTb2Z0
d2FyZS9lbnZpc2lvbmpzKSAtIER5bmFtaWMgSFRNTDUgdmlzdWFsaXphdGlv
bi4KKiBbcmlja3NoYXddKGh0dHBzOi8vZ2l0aHViLmNvbS9zaHV0dGVyc3Rv
Y2svcmlja3NoYXcpIC0gSmF2YVNjcmlwdCB0b29sa2l0IGZvciBjcmVhdGlu
ZyBpbnRlcmFjdGl2ZSByZWFsLXRpbWUgZ3JhcGhzLgoqIFtmbG90XShodHRw
czovL2dpdGh1Yi5jb20vZmxvdC9mbG90KSAtIEF0dHJhY3RpdmUgSmF2YVNj
cmlwdCBjaGFydHMgZm9yIGpRdWVyeS4KKiBbbW9ycmlzLmpzXShodHRwczov
L2dpdGh1Yi5jb20vbW9ycmlzanMvbW9ycmlzLmpzKSAtIFByZXR0eSB0aW1l
LXNlcmllcyBsaW5lIGdyYXBocy4KKiBbbnZkM10oaHR0cHM6Ly9naXRodWIu
Y29tL25vdnVzL252ZDMpIC0gQnVpbGQgcmUtdXNhYmxlIGNoYXJ0cyBhbmQg
Y2hhcnQgY29tcG9uZW50cyBmb3IgZDMuanMuCiogW3N2Zy5qc10oaHR0cHM6
Ly9naXRodWIuY29tL3dvdXQvc3ZnLmpzKSAtIEEgbGlnaHR3ZWlnaHQgbGli
cmFyeSBmb3IgbWFuaXB1bGF0aW5nIGFuZCBhbmltYXRpbmcgU1ZHLgoqIFto
ZWF0bWFwLmpzXShodHRwczovL2dpdGh1Yi5jb20vcGE3L2hlYXRtYXAuanMp
IC0gSmF2YVNjcmlwdCBMaWJyYXJ5IGZvciBIVE1MNSBjYW52YXMgYmFzZWQg
aGVhdG1hcHMuCiogW2pxdWVyeS5zcGFya2xpbmVdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9nd2F0dHMvanF1ZXJ5LnNwYXJrbGluZSkgLSBBIHBsdWdpbiBmb3Ig
dGhlIGpRdWVyeSBKYXZhU2NyaXB0IGxpYnJhcnkgdG8gZ2VuZXJhdGUgc21h
bGwgc3BhcmtsaW5lIGNoYXJ0cyBkaXJlY3RseSBpbiB0aGUgYnJvd3Nlci4K
KiBbdHJpYW5nbGlmeV0oaHR0cHM6Ly9naXRodWIuY29tL3Fyb2hsZi90cmlh
bmdsaWZ5KSAtIExvdyBwb2x5IHN0eWxlIGJhY2tncm91bmQgZ2VuZXJhdG9y
IHdpdGggZDMuanMuCiogW2QzLWNsb3VkXShodHRwczovL2dpdGh1Yi5jb20v
amFzb25kYXZpZXMvZDMtY2xvdWQpIC0gQ3JlYXRlIHdvcmQgY2xvdWRzIGlu
IEphdmFTY3JpcHQuCiogW2Q0XShodHRwczovL2dpdGh1Yi5jb20vaGVhdnlz
aXhlci9kNCkgLSBBIGZyaWVuZGx5IHJldXNhYmxlIGNoYXJ0cyBEU0wgZm9y
IEQzLgoqIFtkaW1wbGUuanNdKGh0dHA6Ly9kaW1wbGVqcy5vcmcpIC0gRWFz
eSBjaGFydHMgZm9yIGJ1c2luZXNzIGFuYWx5dGljcyBwb3dlcmVkIGJ5IGQz
LgoqIFtjaGFydGlzdC1qc10oaHR0cHM6Ly9naXRodWIuY29tL2dpb25rdW56
L2NoYXJ0aXN0LWpzKSAtIFNpbXBsZSByZXNwb25zaXZlIGNoYXJ0cy4KKiBb
ZXBvY2hdKGh0dHBzOi8vZ2l0aHViLmNvbS9lcG9jaGpzL2Vwb2NoKSAtIEEg
Z2VuZXJhbCBwdXJwb3NlIHJlYWwtdGltZSBjaGFydGluZyBsaWJyYXJ5Lgoq
IFtjM10oaHR0cHM6Ly9naXRodWIuY29tL2MzanMvYzMpIC0gRDMtYmFzZWQg
cmV1c2FibGUgY2hhcnQgbGlicmFyeS4KKiBbQmFieWxvbkpTXShodHRwczov
L2dpdGh1Yi5jb20vQmFieWxvbkpTL0JhYnlsb24uanMpIC0gQSBmcmFtZXdv
cmsgZm9yIGJ1aWxkaW5nIDNEIGdhbWVzIHdpdGggSFRNTCA1IGFuZCBXZWJH
TC4KKiBbcmVjaGFydHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9yZWNoYXJ0cy9y
ZWNoYXJ0cykgLSBSZWRlZmluZWQgY2hhcnQgbGlicmFyeSBidWlsdCB3aXRo
IFJlYWN0IGFuZCBEMy4KKiBbR3JhcGhpY3NKU10oaHR0cHM6Ly93d3cuZ3Jh
cGhpY3Nqcy5vcmcpIC0gQSBsaWdodHdlaWdodCBKYXZhU2NyaXB0IGdyYXBo
aWNzIGxpYnJhcnkgd2l0aCB0aGUgaW50dWl0aXZlIEFQSSwgYmFzZWQgb24g
U1ZHL1ZNTCB0ZWNobm9sb2d5LgoqIFtteEdyYXBoXShodHRwczovL2dpdGh1
Yi5jb20vamdyYXBoL214Z3JhcGgpIC0gRGlhZ3JhbW1pbmcgbGlicmFyeSB0
aGF0IGVuYWJsZXMgaW50ZXJhY3RpdmUgZ3JhcGggYW5kIGNoYXJ0aW5nIGFw
cGxpY2F0aW9ucyB0byBiZSBxdWlja2x5IGNyZWF0ZWQgdGhhdCBydW4gbmF0
aXZlbHkgaW4gYW55IG1ham9yIGJyb3dzZXIgdGhhdCBpcyBzdXBwb3J0ZWQg
YnkgaXRzIHZlbmRvci4KClRoZXJlJ3JlIGFsc28gc29tZSBncmVhdCBjb21t
ZXJjaWFsIGxpYnJhcmllcywgbGlrZSBbYW1jaGFydF0oaHR0cHM6Ly93d3cu
YW1jaGFydHMuY29tLyksIFthbnljaGFydF0oaHR0cDovL3d3dy5hbnljaGFy
dC5jb20pLCBbcGxvdGx5XShodHRwczovL3Bsb3QubHkvKSwgYW5kIFtoaWdo
Y2hhcnRdKGh0dHA6Ly93d3cuaGlnaGNoYXJ0cy5jb20vKS4KCgojIyBUaW1l
bGluZQoKKiBbVGltZWxpbmVKUyB2M10oaHR0cHM6Ly9naXRodWIuY29tL05V
S25pZ2h0TGFiL1RpbWVsaW5lSlMzKSAtIEEgU3Rvcnl0ZWxsaW5nIFRpbWVs
aW5lIGJ1aWx0IGluIEphdmFTY3JpcHQuCiogW3RpbWVzaGVldC5qc10oaHR0
cHM6Ly9naXRodWIuY29tL3Nic3Rqbi90aW1lc2hlZXQuanMpIC0gSmF2YVNj
cmlwdCBsaWJyYXJ5IGZvciBzaW1wbGUgSFRNTDUgJiBDU1MzIHRpbWUgc2hl
ZXRzLgoKIyMgU3ByZWFkc2hlZXQKCiogW0hBTkRTT05UQUJMRV0oaHR0cHM6
Ly9naXRodWIuY29tL2hhbmRzb250YWJsZS9oYW5kc29udGFibGUpIC0gSGFu
ZHNvbnRhYmxlIGlzIGEgSmF2YVNjcmlwdC9IVE1MNSBTcHJlYWRzaGVldCBM
aWJyYXJ5IGZvciBEZXZlbG9wZXJzCgojIyBFZGl0b3JzCgoqIFthY2VdKGh0
dHBzOi8vZ2l0aHViLmNvbS9hamF4b3JnL2FjZSkgLSBBY2UgKEFqYXgub3Jn
IENsb3VkOSBFZGl0b3IpLgoqIFtDb2RlTWlycm9yXShodHRwczovL2dpdGh1
Yi5jb20vY29kZW1pcnJvci9Db2RlTWlycm9yKSAtIEluLWJyb3dzZXIgY29k
ZSBlZGl0b3IuCiogW2VzcHJpbWFdKGh0dHBzOi8vZ2l0aHViLmNvbS9hcml5
YS9lc3ByaW1hKSAtIEVDTUFTY3JpcHQgcGFyc2luZyBpbmZyYXN0cnVjdHVy
ZSBmb3IgbXVsdGlwdXJwb3NlIGFuYWx5c2lzLgoqIFtxdWlsbF0oaHR0cHM6
Ly9naXRodWIuY29tL3F1aWxsanMvcXVpbGwpIC0gQSBjcm9zcyBicm93c2Vy
IHJpY2ggdGV4dCBlZGl0b3Igd2l0aCBhbiBBUEkuCiogW21lZGl1bS1lZGl0
b3JdKGh0dHBzOi8vZ2l0aHViLmNvbS95YWJ3ZS9tZWRpdW0tZWRpdG9yKSAt
IE1lZGl1bS5jb20gV1lTSVdZRyBlZGl0b3IgY2xvbmUuCiogW3Blbl0oaHR0
cHM6Ly9naXRodWIuY29tL3NvZmlzaC9wZW4pIC0gZW5qb3kgbGl2ZSBlZGl0
aW5nICgrbWFya2Rvd24pLgoqIFtqcXVlcnktbm90ZWJvb2tdKGh0dHBzOi8v
Z2l0aHViLmNvbS9yYXBoYWVsY3J1emVpcm8vanF1ZXJ5LW5vdGVib29rKSAt
IEEgc2ltcGxlLCBjbGVhbiBhbmQgZWxlZ2FudCB0ZXh0IGVkaXRvci4gSW5z
cGlyZWQgYnkgdGhlIGF3ZXNvbWVuZXNzIG9mIE1lZGl1bS4KKiBbYm9vdHN0
cmFwLXd5c2l3eWddKGh0dHBzOi8vZ2l0aHViLmNvbS9taW5kbXVwL2Jvb3Rz
dHJhcC13eXNpd3lnKSAtIFRpbnkgYm9vdHN0cmFwLWNvbXBhdGlibGUgV1lT
SVdZRyByaWNoIHRleHQgZWRpdG9yLgoqIFtja2VkaXRvci1yZWxlYXNlc10o
aHR0cHM6Ly9naXRodWIuY29tL2NrZWRpdG9yL2NrZWRpdG9yLXJlbGVhc2Vz
KSAtIFRoZSBiZXN0IHdlYiB0ZXh0IGVkaXRvciBmb3IgZXZlcnlvbmUuCiog
W2VkaXRvcl0oaHR0cHM6Ly9naXRodWIuY29tL2xlcHR1cmUvZWRpdG9yKSAt
IEEgbWFya2Rvd24gZWRpdG9yLiBzdGlsbCBvbiBkZXZlbG9wbWVudC4KKiBb
RXBpY0VkaXRvcl0oaHR0cHM6Ly9naXRodWIuY29tL09zY2FyR29kc29uL0Vw
aWNFZGl0b3IpIC0gQW4gZW1iZWRkYWJsZSBKYXZhU2NyaXB0IE1hcmtkb3du
IGVkaXRvciB3aXRoIHNwbGl0IGZ1bGxzY3JlZW4gZWRpdGluZywgbGl2ZSBw
cmV2aWV3aW5nLCBhdXRvbWF0aWMgZHJhZnQgc2F2aW5nLCBvZmZsaW5lIHN1
cHBvcnQsIGFuZCBtb3JlLgoqIFtqc29uZWRpdG9yXShodHRwczovL2dpdGh1
Yi5jb20vam9zZGVqb25nL2pzb25lZGl0b3IpIC0gQSB3ZWItYmFzZWQgdG9v
bCB0byB2aWV3LCBlZGl0IGFuZCBmb3JtYXQgSlNPTi4KKiBbdmltLmpzXSho
dHRwczovL2dpdGh1Yi5jb20vY29vbHdhbmdsdS92aW0uanMpIC0gSmF2YVNj
cmlwdCBwb3J0IG9mIFZpbSB3aXRoIGEgcGVyc2lzdGVudCBgfi8udmltcmNg
LgoqIFtTcXVpcmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9uZWlsai9TcXVpcmUp
IC0gSFRNTDUgcmljaCB0ZXh0IGVkaXRvci4KKiBbVGlueU1DRV0oaHR0cHM6
Ly9naXRodWIuY29tL3RpbnltY2UvdGlueW1jZSkgLSBUaGUgSmF2YVNjcmlw
dCBSaWNoIFRleHQgZWRpdG9yLgoqIFt0cml4XShodHRwczovL2dpdGh1Yi5j
b20vYmFzZWNhbXAvdHJpeCkgLSBBIHJpY2ggdGV4dCBlZGl0b3IgZm9yIGV2
ZXJ5ZGF5IHdyaXRpbmcuIEJ5IEJhc2VjYW1wLgoqIFtUcnVtYm93eWddKGh0
dHBzOi8vZ2l0aHViLmNvbS9BbGV4LUQvVHJ1bWJvd3lnKSAtIEEgbGlnaHR3
ZWlnaHQgYW5kIGFtYXppbmcgV1lTSVdZRyBKYXZhU2NyaXB0IGVkaXRvci4K
KiBbRHJhZnQuanNdKGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9kcmFm
dC1qcykgLSBBIFJlYWN0IGZyYW1ld29yayBmb3IgYnVpbGRpbmcgdGV4dCBl
ZGl0b3JzLgoqIFtib290c3RyYXAtd3lzaWh0bWw1XShodHRwczovL2dpdGh1
Yi5jb20vamhvbGxpbmd3b3J0aC9ib290c3RyYXAtd3lzaWh0bWw1KSAtIFNp
bXBsZSwgYmVhdXRpZnVsIHd5c2l3eWcgZWRpdG9yCiogW3d5c2lodG1sNV0o
aHR0cHM6Ly9naXRodWIuY29tL3hpbmcvd3lzaWh0bWw1KSAtIE9wZW4gc291
cmNlIHJpY2ggdGV4dCBlZGl0b3IgYmFzZWQgb24gSFRNTDUgYW5kIHRoZSBw
cm9ncmVzc2l2ZS1lbmhhbmNlbWVudCBhcHByb2FjaC4gVXNlcyBhIHNvcGhp
c3RpY2F0ZWQgc2VjdXJpdHkgY29uY2VwdCBhbmQgYWltcyB0byBnZW5lcmF0
ZSBmdWxseSB2YWxpZCBIVE1MNSBtYXJrdXAgYnkgcHJldmVudGluZyB1bm1h
aW50YWluYWJsZSB0YWcgc291cHMgYW5kIGlubGluZSBzdHlsZXMuCiogW3Jh
cHRvci1lZGl0b3JdKGh0dHBzOi8vZ2l0aHViLmNvbS9QQU5tZWRpYS9yYXB0
b3ItZWRpdG9yKSAtIFJhcHRvciwgYW4gSFRNTDUgV1lTSVdZRyBjb250ZW50
IGVkaXRvciEKKiBbcG9wbGluZV0oaHR0cHM6Ly9naXRodWIuY29tL2tlbnNo
aW41NC9wb3BsaW5lKSAtIFBvcGxpbmUgaXMgYW4gSFRNTDUgUmljaC1UZXh0
LUVkaXRvciBUb29sYmFyLgoqIFtTdW1tZXJub3RlXShodHRwczovL2dpdGh1
Yi5jb20vc3VtbWVybm90ZS9zdW1tZXJub3RlKSAtIFN1cGVyIHNpbXBsZSBX
WVNJV1lHIGVkaXRvci4KCgojIyBEb2N1bWVudGF0aW9uCgoqIFtEZXZEb2Nz
XShodHRwOi8vZGV2ZG9jcy5pby8pIGlzIGFuIGFsbC1pbi1vbmUgQVBJIGRv
Y3VtZW50YXRpb24gcmVhZGVyIHdpdGggYSBmYXN0LCBvcmdhbml6ZWQsIGFu
ZCBjb25zaXN0ZW50IGludGVyZmFjZS4KKiBbZGV4eV0oaHR0cDovL3d3dy5k
ZXh5Lml0LykgaXMgYSBmcmVlLWZvcm0gbGl0ZXJhdGUgZG9jdW1lbnRhdGlv
biB0b29sIGZvciB3cml0aW5nIGFueSBraW5kIG9mIHRlY2huaWNhbCBkb2N1
bWVudCBpbmNvcnBvcmF0aW5nIGNvZGUuCiogW2RvY2NvXShodHRwOi8vamFz
aGtlbmFzLmdpdGh1Yi5pby9kb2Njby8pIGlzIGEgcXVpY2stYW5kLWRpcnR5
LCBodW5kcmVkLWxpbmUtbG9uZywgbGl0ZXJhdGUtcHJvZ3JhbW1pbmctc3R5
bGUgZG9jdW1lbnRhdGlvbiBnZW5lcmF0b3IuCiogW3N0eWxlZG9jY29dKGh0
dHA6Ly9qYWNvYnJhc2suZ2l0aHViLmlvL3N0eWxlZG9jY28vKSBnZW5lcmF0
ZXMgZG9jdW1lbnRhdGlvbiBhbmQgc3R5bGUgZ3VpZGUgZG9jdW1lbnRzIGZy
b20geW91ciBzdHlsZXNoZWV0cy4KKiBbUm9ubl0oaHR0cHM6Ly9naXRodWIu
Y29tL3J0b21heWtvL3Jvbm4pIGJ1aWxkcyBtYW51YWxzLiBJdCBjb252ZXJ0
cyBzaW1wbGUsIGh1bWFuIHJlYWRhYmxlIHRleHRmaWxlcyB0byByb2ZmIGZv
ciB0ZXJtaW5hbCBkaXNwbGF5LCBhbmQgYWxzbyB0byBIVE1MIGZvciB0aGUg
d2ViLgoqIFtkb3hdKGh0dHBzOi8vZ2l0aHViLmNvbS90ai9kb3gpIGlzIGEg
SmF2YVNjcmlwdCBkb2N1bWVudGF0aW9uIGdlbmVyYXRvciB3cml0dGVuIHdp
dGggbm9kZS4gRG94IG5vIGxvbmdlciBnZW5lcmF0ZXMgYW4gb3BpbmlvbmF0
ZWQgc3RydWN0dXJlIG9yIHN0eWxlIGZvciB5b3VyIGRvY3MsIGl0IHNpbXBs
eSBnaXZlcyB5b3UgYSBKU09OIHJlcHJlc2VudGF0aW9uLCBhbGxvd2luZyB5
b3UgdG8gdXNlIG1hcmtkb3duIGFuZCBKU0RvYy1zdHlsZSB0YWdzLgoqIFtq
c2RveF0oaHR0cHM6Ly9naXRodWIuY29tL3N1dG9pa3UvanNkb3gpIGlzIGEg
SlNEb2MzIHRvIE1hcmtkb3duIGRvY3VtZW50YXRpb24gZ2VuZXJhdG9yLgoq
IFtFU0RvY10oaHR0cHM6Ly9naXRodWIuY29tL2VzZG9jL2VzZG9jKSBpcyBh
IGdvb2QgZG9jdW1lbnRhdGlvbiBnZW5lcmF0b3IgZm9yIEphdmFTY3JpcHQu
CiogW1lVSURvY10oaHR0cDovL3l1aS5naXRodWIuaW8veXVpZG9jLykgaXMg
YSBOb2RlLmpzIGFwcGxpY2F0aW9uIHRoYXQgZ2VuZXJhdGVzIEFQSSBkb2N1
bWVudGF0aW9uIGZyb20gY29tbWVudHMgaW4gc291cmNlLCB1c2luZyBhIHN5
bnRheCBzaW1pbGFyIHRvIHRvb2xzIGxpa2UgSmF2YWRvYyBhbmQgRG94eWdl
bi4KKiBbY29kZG9jXShodHRwOi8vZG91Zy1tYXJ0aW4uZ2l0aHViLmlvL2Nv
ZGRvYy8pIGlzIGEganNkb2MgcGFyc2luZyBsaWJyYXJ5LiBDb2Rkb2MgaXMg
ZGlmZmVyZW50IGluIHRoYXQgaXQgaXMgZWFzaWx5IGV4dGVuc2libGUgYnkg
YWxsb3dpbmcgdXNlcnMgdG8gYWRkIHRhZyBhbmQgY29kZSBwYXJzZXJzIHRo
cm91Z2ggdGhlIHVzZSBvZiBjb2Rkb2MuYWRkVGFnSGFuZGxlciBhbmQgY29k
ZG9jLmFkZENvZGVIYW5kbGVyLiBjb2Rkb2MgYWxzbyBwYXJzZXMgc291cmNl
IGNvZGUgdG8gYmUgdXNlZCBpbiBBUElzLgoqIFtzcGhpbnhdKGh0dHA6Ly93
d3cuc3BoaW54LWRvYy5vcmcvKSBhIHRvb2wgdGhhdCBtYWtlcyBpdCBlYXN5
IHRvIGNyZWF0ZSBpbnRlbGxpZ2VudCBhbmQgYmVhdXRpZnVsIGRvY3VtZW50
YXRpb24KKiBbVXNpbmcgSlNEb2NdKGh0dHA6Ly91c2Vqc2RvYy5vcmcvKQoq
IFtCZWF1dGlmdWwgZG9jc10oaHR0cDovL2JlYXV0aWZ1bGRvY3MuY29tLykg
aXMgYSBkb2N1bWVudGF0aW9uIHZpZXdlciBiYXNlZCBvbiBtYXJrZG93biBm
aWxlcy4KKiBbZG9jdW1lbnRhdGlvbi5qc10oaHR0cDovL2RvY3VtZW50YXRp
b24uanMub3JnKSAtIEFQSSBkb2N1bWVudGF0aW9uIGdlbmVyYXRvciB3aXRo
IHN1cHBvcnQgZm9yIEVTMjAxNSsgYW5kIGZsb3cgYW5ub3RhdGlvbi4KKiBb
anNkdWNrXShodHRwczovL2dpdGh1Yi5jb20vc2VuY2hhbGFicy9qc2R1Y2sp
IC0gQVBJIGRvY3VtZW50YXRpb24gZ2VuZXJhdG9yIG1hZGUgZm9yIFNlbmNo
YSBKYXZhU2NyaXB0IGZyYW1ld29ya3MsIGJ1dCBjYW4gYmUgdXNlZCBmb3Ig
b3RoZXIgZnJhbWV3b3JrcyB0b28uCiogW2NvZGVjcnVtYnNdKGh0dHBzOi8v
Z2l0aHViLmNvbS9Cb2dkYW4tTHlhc2hlbmtvL2NvZGVjcnVtYnMpIGlzIGEg
dmlzdWFsIHRvb2wgZm9yIGxlYXJuaW5nIGFuZCBkb2N1bWVudGluZyBhIGNv
ZGViYXNlIGJ5IHB1dHRpbmcgYnJlYWRjcnVtYnMgaW4gc291cmNlIGNvZGUu
CgoKIyMgRmlsZXMKKkxpYnJhcmllcyBmb3Igd29ya2luZyB3aXRoIGZpbGVz
LioKCiogW1BhcGEgUGFyc2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9taG9sdC9Q
YXBhUGFyc2UpIC0gQSBwb3dlcmZ1bCBDU1YgbGlicmFyeSB0aGF0IHN1cHBv
cnRzIHBhcnNpbmcgQ1NWIGZpbGVzL3N0cmluZ3MgYW5kIGFsc28gZXhwb3J0
aW5nIHRvIENTVi4KKiBbakJpbmFyeV0oaHR0cHM6Ly9naXRodWIuY29tL2pE
YXRhVmlldy9qQmluYXJ5KSAtIEhpZ2gtbGV2ZWwgSS9PIChsb2FkaW5nLCBw
YXJzaW5nLCBtYW5pcHVsYXRpbmcsIHNlcmlhbGl6aW5nLCBzYXZpbmcpIGZv
ciBiaW5hcnkgZmlsZXMgd2l0aCBkZWNsYXJhdGl2ZSBzeW50YXggZm9yIGRl
c2NyaWJpbmcgZmlsZSB0eXBlcyBhbmQgZGF0YSBzdHJ1Y3R1cmVzLgoqIFtk
aWZmMmh0bWxdKGh0dHBzOi8vZ2l0aHViLmNvbS9ydGZwZXNzb2EvZGlmZjJo
dG1sKSAtIEdpdCBkaWZmIG91dHB1dCBwYXJzZXIgYW5kIHByZXR0eSBIVE1M
IGdlbmVyYXRvci4KKiBbanNQREZdKGh0dHBzOi8vZ2l0aHViLmNvbS9NclJp
by9qc1BERikgLSBKYXZhU2NyaXB0IFBERiBnZW5lcmF0aW9uLgoqIFtQREYu
anNdKGh0dHBzOi8vZ2l0aHViLmNvbS9tb3ppbGxhL3BkZi5qcykgLSBQREYg
UmVhZGVyIGluIEphdmFTY3JpcHQuCgoKIyMgRnVuY3Rpb25hbCBQcm9ncmFt
bWluZwoqRnVuY3Rpb25hbCBwcm9ncmFtbWluZyBsaWJyYXJpZXMgdG8gZXh0
ZW5kIEphdmFTY3JpcHTigJlzIGNhcGFiaWxpdGllcy4qCgoqIFt1bmRlcnNj
b3JlXShodHRwczovL2dpdGh1Yi5jb20vamFzaGtlbmFzL3VuZGVyc2NvcmUp
IC0gSmF2YVNjcmlwdCdzIHV0aWxpdHkgXyBiZWx0LgoqIFtsb2Rhc2hdKGh0
dHBzOi8vZ2l0aHViLmNvbS9sb2Rhc2gvbG9kYXNoKSAtIEEgdXRpbGl0eSBs
aWJyYXJ5IGRlbGl2ZXJpbmcgY29uc2lzdGVuY3ksIGN1c3RvbWl6YXRpb24s
IHBlcmZvcm1hbmNlLCAmIGV4dHJhcy4KKiBbU3VnYXJdKGh0dHBzOi8vZ2l0
aHViLmNvbS9hbmRyZXdwbHVtbWVyL1N1Z2FyKSAtIEEgSmF2YVNjcmlwdCBs
aWJyYXJ5IGZvciB3b3JraW5nIHdpdGggbmF0aXZlIG9iamVjdHMuCiogW2xh
enkuanNdKGh0dHBzOi8vZ2l0aHViLmNvbS9kdGFvL2xhenkuanMpIC0gTGlr
ZSBVbmRlcnNjb3JlLCBidXQgbGF6aWVyLgoqIFtyYW1kYV0oaHR0cHM6Ly9n
aXRodWIuY29tL0Nyb3NzRXllL3JhbWRhKSAtIEEgcHJhY3RpY2FsIGZ1bmN0
aW9uYWwgbGlicmFyeSBmb3IgSmF2YVNjcmlwdCBwcm9ncmFtbWVycy4KKiBb
bW91dF0oaHR0cHM6Ly9naXRodWIuY29tL21vdXQvbW91dCkgLSBNb2R1bGFy
IEphdmFTY3JpcHQgVXRpbGl0aWVzLgoqIFttZXNoXShodHRwczovL2dpdGh1
Yi5jb20vY3Jjbi9tZXNoLmpzKSAtIFN0cmVhbWFibGUgZGF0YSBzeW5jaHJv
bml6YXRpb24gdXRpbGl0eS4KKiBbcHJlbHVkZWpzXShodHRwczovL2dpdGh1
Yi5jb20vYWxhbnJzb2FyZXMvcHJlbHVkZS1qcykgLSBIYXJkY29yZSBGdW5j
dGlvbmFsIFByb2dyYW1taW5nIGZvciBKYXZhU2NyaXB0LgoKCiMjIFJlYWN0
aXZlIFByb2dyYW1taW5nCipSZWFjdGl2ZSBwcm9ncmFtbWluZyBsaWJyYXJp
ZXMgdG8gZXh0ZW5kIEphdmFTY3JpcHTigJlzIGNhcGFiaWxpdGllcy4qCgoq
IFtSeEpTXShodHRwczovL2dpdGh1Yi5jb20vUmVhY3RpdmVYL3J4anMpIC0g
QSByZWFjdGl2ZSBwcm9ncmFtbWluZyBsaWJyYXJ5IGZvciBKYXZhU2NyaXB0
LgoqIFtCYWNvbl0oaHR0cHM6Ly9naXRodWIuY29tL2JhY29uanMvYmFjb24u
anMpIC0gRlJQIChmdW5jdGlvbmFsIHJlYWN0aXZlIHByb2dyYW1taW5nKSBs
aWJyYXJ5IGZvciBKYXZhU2NyaXB0LgoqIFtLZWZpcl0oaHR0cHM6Ly9naXRo
dWIuY29tL3BvemFkaS9rZWZpcikgLSBGUlAgbGlicmFyeSBmb3IgSmF2YVNj
cmlwdCBpbnNwaXJlZCBieSBCYWNvbi5qcyBhbmQgUnhKUyB3aXRoIGZvY3Vz
IG9uIGhpZ2ggcGVyZm9ybWFuY2UgYW5kIGxvdyBtZW1vcnkgY29uc3VtcHRp
b24uCiogW0hpZ2hsYW5kXShodHRwOi8vaGlnaGxhbmRqcy5vcmcvKSAtIFJl
LXRoaW5raW5nIHRoZSBKYXZhU2NyaXB0IHV0aWxpdHkgYmVsdCwgSGlnaGxh
bmQgbWFuYWdlcyBzeW5jaHJvbm91cyBhbmQgYXN5bmNocm9ub3VzIGNvZGUg
ZWFzaWx5LCB1c2luZyBub3RoaW5nIG1vcmUgdGhhbiBzdGFuZGFyZCBKYXZh
U2NyaXB0IGFuZCBOb2RlLWxpa2UgU3RyZWFtcy4KKiBbTW9zdC5qc10oaHR0
cHM6Ly9naXRodWIuY29tL2N1am9qcy9tb3N0KSAtIGhpZ2ggcGVyZm9ybWFu
Y2UgRlJQIGxpYnJhcnkuCiogW01vYlhdKGh0dHBzOi8vZ2l0aHViLmNvbS9t
b2J4anMvbW9ieCkgLSBURlJQIGxpYnJhcnkgZm9yIHNpbXBsZSwgc2NhbGFi
bGUgc3RhdGUgbWFuYWdlbWVudC4KKiBbQ3ljbGUuanNdKGh0dHBzOi8vY3lj
bGUuanMub3JnKSAtIEEgZnVuY3Rpb25hbCBhbmQgcmVhY3RpdmUgSmF2YVNj
cmlwdCBsaWJyYXJ5IGZvciBjbGVhbmVyIGNvZGUuCgojIyBEYXRhIFN0cnVj
dHVyZQoqRGF0YSBzdHJ1Y3R1cmUgbGlicmFyaWVzIHRvIGJ1aWxkIGEgbW9y
ZSBzb3BoaXN0aWNhdGVkIGFwcGxpY2F0aW9uLioKCiogW2ltbXV0YWJsZS1q
c10oaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL2ltbXV0YWJsZS1qcykg
LSBJbW11dGFibGUgRGF0YSBDb2xsZWN0aW9ucyBpbmNsdWRpbmcgU2VxdWVu
Y2UsIFJhbmdlLCBSZXBlYXQsIE1hcCwgT3JkZXJlZE1hcCwgU2V0IGFuZCBh
IHNwYXJzZSBWZWN0b3IuCiogW21vcmldKGh0dHBzOi8vZ2l0aHViLmNvbS9z
d2Fubm9kZXR0ZS9tb3JpKSAtIEEgbGlicmFyeSBmb3IgdXNpbmcgQ2xvanVy
ZVNjcmlwdCdzIHBlcnNpc3RlbnQgZGF0YSBzdHJ1Y3R1cmVzIGFuZCBzdXBw
b3J0aW5nIEFQSSBmcm9tIHRoZSBjb21mb3J0IG9mIHZhbmlsbGEgSmF2YVNj
cmlwdC4KKiBbYnVja2V0c10oaHR0cHM6Ly9naXRodWIuY29tL21hdXJpY2lv
c2FudG9zL0J1Y2tldHMtSlMpIC0gQSBjb21wbGV0ZSwgZnVsbHkgdGVzdGVk
IGFuZCBkb2N1bWVudGVkIGRhdGEgc3RydWN0dXJlIGxpYnJhcnkgd3JpdHRl
biBpbiBKYXZhU2NyaXB0LgoqIFtoYXNobWFwXShodHRwczovL2dpdGh1Yi5j
b20vZmxlc2xlci9oYXNobWFwKSAtIFNpbXBsZSBoYXNobWFwIGltcGxlbWVu
dGF0aW9uIHRoYXQgc3VwcG9ydHMgYW55IGtpbmQgb2Yga2V5cy4KCgojIyBE
YXRlCipEYXRlIExpYnJhcmllcy4qCgoqIFttb21lbnRdKGh0dHBzOi8vZ2l0
aHViLmNvbS9tb21lbnQvbW9tZW50KSAtIFBhcnNlLCB2YWxpZGF0ZSwgbWFu
aXB1bGF0ZSwgYW5kIGRpc3BsYXkgZGF0ZXMgaW4gSmF2YVNjcmlwdC4KKiBb
bW9tZW50LXRpbWV6b25lXShodHRwczovL2dpdGh1Yi5jb20vbW9tZW50L21v
bWVudC10aW1lem9uZSkgLSBUaW1lem9uZSBzdXBwb3J0IGZvciBtb21lbnQu
anMuCiogW2pxdWVyeS10aW1lYWdvXShodHRwczovL2dpdGh1Yi5jb20vcm1t
NXQvanF1ZXJ5LXRpbWVhZ28pIC0gQSBqUXVlcnkgcGx1Z2luIHRoYXQgbWFr
ZXMgaXQgZWFzeSB0byBzdXBwb3J0IGF1dG9tYXRpY2FsbHkgdXBkYXRpbmcg
ZnV6enkgdGltZXN0YW1wcyAoZS5nLiAiNCBtaW51dGVzIGFnbyIpLgoqIFt0
aW1lem9uZS1qc10oaHR0cHM6Ly9naXRodWIuY29tL21kZS90aW1lem9uZS1q
cykgLSBUaW1lem9uZS1lbmFibGVkIEphdmFTY3JpcHQgRGF0ZSBvYmplY3Qu
IFVzZXMgT2xzb24gem9uZWluZm8gZmlsZXMgZm9yIHRpbWV6b25lIGRhdGEu
CiogW2RhdGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9NYXR0aGV3TXVlbGxlci9k
YXRlKSAtIERhdGUoKSBmb3IgaHVtYW5zLgoqIFttcy5qc10oaHR0cHM6Ly9n
aXRodWIuY29tL3JhdWNoZy9tcy5qcykgLSBUaW55IG1pbGxpc2Vjb25kIGNv
bnZlcnNpb24gdXRpbGl0eS4KKiBbY291bnRkb3duLmpzXShodHRwczovL2dp
dGh1Yi5jb20vZ3Vtcm9hZC9jb3VudGRvd24uanMpIC0gU3VwZXIgc2ltcGxl
IGNvdW50ZG93bnMuCiogW3RpbWVhZ28uanNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9odXN0Y2MvdGltZWFnby5qcykgLSBTaW1wbGUgbGlicmFyeSAobGVzcyB0
aGVuIDJrYikgdXNlZCB0byBmb3JtYXQgZGF0ZSB3aXRoIGAqKiogdGltZSBh
Z29gIHN0YXRlbWVudC4KKiBbZmVjaGFdKGh0dHBzOi8vZ2l0aHViLmNvbS90
YXlsb3JoYWtlcy9mZWNoYSkgLSBMaWdodHdlaWdodCBkYXRlIGZvcm1hdHRp
bmcgYW5kIHBhcnNpbmcgKH4yS0IpLiBNZWFudCB0byByZXBsYWNlIHBhcnNp
bmcgYW5kIGZvcm1hdHRpbmcgZnVuY3Rpb25hbGl0eSBvZiBtb21lbnQuanMu
CiogW2RhdGUtZm5zXShodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0
ZS1mbnMpIC0gTW9kZXJuIEphdmFTY3JpcHQgZGF0ZSB1dGlsaXR5IGxpYnJh
cnkuCiogW21hcC1jb3VudGRvd25dKGh0dHBzOi8vZ2l0aHViLmNvbS9kYXdp
ZGphbmlnYS9tYXAtY291bnRkb3duKSAtIEEgYnJvd3NlciBjb3VudGRvd24g
YnVpbHQgb24gdG9wIG9mIHRoZSBHb29nbGUgTWFwcy4KKiBbZGF5anNdKGh0
dHBzOi8vZ2l0aHViLmNvbS9pYW1rdW4vZGF5anMpIC0gRGF5LmpzIDJLQiBp
bW11dGFibGUgZGF0ZSBsaWJyYXJ5IGFsdGVybmF0aXZlIHRvIE1vbWVudC5q
cyB3aXRoIHRoZSBzYW1lIG1vZGVybiBBUEkuCgojIyBTdHJpbmcKKlN0cmlu
ZyBMaWJyYXJpZXMuKgoKKiBbdm9jYV0oaHR0cHM6Ly9naXRodWIuY29tL3Bh
bnplcmRwL3ZvY2EpIC0gVGhlIHVsdGltYXRlIEphdmFTY3JpcHQgc3RyaW5n
IGxpYnJhcnkKKiBbc2VsZWN0aW5nXShodHRwczovL2dpdGh1Yi5jb20vRXZh
bmRyb0xHL3NlbGVjdGluZykgLSBBIGxpYnJhcnkgdGhhdCBhbGxvd3MgeW91
IHRvIGFjY2VzcyB0aGUgdGV4dCBzZWxlY3RlZCBieSB0aGUgdXNlci4KKiBb
dW5kZXJzY29yZS5zdHJpbmddKGh0dHBzOi8vZ2l0aHViLmNvbS9lcGVsaS91
bmRlcnNjb3JlLnN0cmluZykgLSBTdHJpbmcgbWFuaXB1bGF0aW9uIGV4dGVu
c2lvbnMgZm9yIFVuZGVyc2NvcmUuanMgSmF2YVNjcmlwdCBsaWJyYXJ5Lgoq
IFtzdHJpbmcuanNdKGh0dHBzOi8vZ2l0aHViLmNvbS9qcHJpY2hhcmRzb24v
c3RyaW5nLmpzKSAtIEV4dHJhIEphdmFTY3JpcHQgc3RyaW5nIG1ldGhvZHMu
CiogW2hlXShodHRwczovL2dpdGh1Yi5jb20vbWF0aGlhc2J5bmVucy9oZSkg
LSBBIHJvYnVzdCBIVE1MIGVudGl0eSBlbmNvZGVyL2RlY29kZXIgd3JpdHRl
biBpbiBKYXZhU2NyaXB0LgoqIFttdWx0aWxpbmVdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9zaW5kcmVzb3JodXMvbXVsdGlsaW5lKSAtIE11bHRpbGluZSBzdHJp
bmdzIGluIEphdmFTY3JpcHQuCiogW3F1ZXJ5LXN0cmluZ10oaHR0cHM6Ly9n
aXRodWIuY29tL3NpbmRyZXNvcmh1cy9xdWVyeS1zdHJpbmcpIC0gUGFyc2Ug
YW5kIHN0cmluZ2lmeSBVUkwgcXVlcnkgc3RyaW5ncy4KKiBbVVJJLmpzXSho
dHRwczovL2dpdGh1Yi5jb20vbWVkaWFsaXplL1VSSS5qcy8pIC0gSmF2YVNj
cmlwdCBVUkwgbXV0YXRpb24gbGlicmFyeS4KKiBbanN1cmxdKGh0dHBzOi8v
Z2l0aHViLmNvbS9NaWtodXMvZG9tdXJsKSAtIExpZ2h0d2VpZ2h0IFVSTCBt
YW5pcHVsYXRpb24gd2l0aCBKYXZhU2NyaXB0LgoqIFtzcHJpbnRmLmpzXSho
dHRwczovL2dpdGh1Yi5jb20vYWxleGVpL3NwcmludGYuanMpIC0gQSBzcHJp
bnRmIGltcGxlbWVudGF0aW9uLgoqIFt1cmwtcGF0dGVybl0oaHR0cHM6Ly9n
aXRodWIuY29tL3NuZC91cmwtcGF0dGVybikgLSBFYXNpZXIgdGhhbiByZWdl
eCBzdHJpbmcgbWF0Y2hpbmcgcGF0dGVybnMgZm9yIHVybHMgYW5kIG90aGVy
IHN0cmluZ3MuIFR1cm4gc3RyaW5ncyBpbnRvIGRhdGEgb3IgZGF0YSBpbnRv
IHN0cmluZ3MuCiogW3BsZXhpc10oaHR0cHM6Ly9naXRodWIuY29tL3BsZXhp
cy1qcy9wbGV4aXMpIC0gTG8tZmksIHBvd2VyZnVsLCBjb21tdW5pdHktZHJp
dmVuIHN0cmluZyBtYW5pcHVsYXRpb24gbGlicmFyeS4KCiMjIE51bWJlcgoK
KiBbTnVtZXJhbC1qc10oaHR0cHM6Ly9naXRodWIuY29tL2FkYW13ZHJhcGVy
L051bWVyYWwtanMpIC0gQSBKYXZhU2NyaXB0IGxpYnJhcnkgZm9yIGZvcm1h
dHRpbmcgYW5kIG1hbmlwdWxhdGluZyBudW1iZXJzLgoqIFtjaGFuY2UuanNd
KGh0dHBzOi8vZ2l0aHViLmNvbS9jaGFuY2Vqcy9jaGFuY2VqcykgLSBSYW5k
b20gZ2VuZXJhdG9yIGhlbHBlciBpbiBKYXZhU2NyaXB0LiBDYW4gZ2VuZXJh
dGUgbnVtYmVycywgc3RyaW5ncyBldGMuCiogW29kb21ldGVyXShodHRwczov
L2dpdGh1Yi5jb20vSHViU3BvdC9vZG9tZXRlcikgLSBTbW9vdGhseSB0cmFu
c2l0aW9ucyBudW1iZXJzIHdpdGggZWFzZS4KKiBbYWNjb3VudGluZy5qc10o
aHR0cHM6Ly9naXRodWIuY29tL2pvc3Njcm93Y3JvZnQvYWNjb3VudGluZy5q
cykgLSBBIGxpZ2h0d2VpZ2h0IEphdmFTY3JpcHQgbGlicmFyeSBmb3IgbnVt
YmVyLCBtb25leSBhbmQgY3VycmVuY3kgZm9ybWF0dGluZyAtIGZ1bGx5IGxv
Y2FsaXNhYmxlLCB6ZXJvIGRlcGVuZGVuY2llcy4KKiBbbW9uZXkuanNdKGh0
dHBzOi8vZ2l0aHViLmNvbS9qb3NzY3Jvd2Nyb2Z0L21vbmV5LmpzKSAtIEEg
dGlueSAoMWtiKSBKYXZhU2NyaXB0IGN1cnJlbmN5IGNvbnZlcnNpb24gbGli
cmFyeSwgZm9yIHdlYiAmIG5vZGVKUy4KKiBbRnJhY3Rpb24uanNdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9pbmZ1c2lvbi9GcmFjdGlvbi5qcykgLSBBIHJhdGlv
bmFsIG51bWJlciBsaWJyYXJ5IGZvciBKYXZhU2NyaXB0LgoqIFtDb21wbGV4
LmpzXShodHRwczovL2dpdGh1Yi5jb20vaW5mdXNpb24vQ29tcGxleC5qcykg
LSBBIGNvbXBsZXggbnVtYmVyIGxpYnJhcnkgZm9yIEphdmFTY3JpcHQuCiog
W1BvbHlub21pYWwuanNdKGh0dHBzOi8vZ2l0aHViLmNvbS9pbmZ1c2lvbi9Q
b2x5bm9taWFsLmpzKSAtIEEgcG9seW5vbWlhbHMgbGlicmFyeSBmb3IgSmF2
YVNjcmlwdC4KCgojIyBTdG9yYWdlCgoqIFtzdG9yZS5qc10oaHR0cHM6Ly9n
aXRodWIuY29tL21hcmN1c3dlc3Rpbi9zdG9yZS5qcykgLSBMb2NhbFN0b3Jh
Z2Ugd3JhcHBlciBmb3IgYWxsIGJyb3dzZXJzIHdpdGhvdXQgdXNpbmcgY29v
a2llcyBvciBmbGFzaC4gVXNlcyBsb2NhbFN0b3JhZ2UsIGdsb2JhbFN0b3Jh
Z2UsIGFuZCB1c2VyRGF0YSBiZWhhdmlvciB1bmRlciB0aGUgaG9vZC4KKiBb
bG9jYWxGb3JhZ2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9tb3ppbGxhL2xvY2Fs
Rm9yYWdlKSAtIE9mZmxpbmUgc3RvcmFnZSwgaW1wcm92ZWQuIFdyYXBzIElu
ZGV4ZWREQiwgV2ViU1FMLCBvciBsb2NhbFN0b3JhZ2UgdXNpbmcgYSBzaW1w
bGUgYnV0IHBvd2VyZnVsIEFQSS4KKiBbalN0b3JhZ2VdKGh0dHBzOi8vZ2l0
aHViLmNvbS9hbmRyaXM5L2pTdG9yYWdlKSAtIGpTdG9yYWdlIGlzIGEgc2lt
cGxlIGtleS92YWx1ZSBkYXRhYmFzZSB0byBzdG9yZSBkYXRhIG9uIGJyb3dz
ZXIgc2lkZS4KKiBbY3Jvc3Mtc3RvcmFnZV0oaHR0cHM6Ly9naXRodWIuY29t
L3plbmRlc2svY3Jvc3Mtc3RvcmFnZSkgLSBDcm9zcyBkb21haW4gbG9jYWwg
c3RvcmFnZSwgd2l0aCBwZXJtaXNzaW9ucy4KKiBbYmFza2V0LmpzXShodHRw
czovL2dpdGh1Yi5jb20vYWRkeW9zbWFuaS9iYXNrZXQuanMpIC0gQSBzY3Jp
cHQgYW5kIHJlc291cmNlIGxvYWRlciBmb3IgY2FjaGluZyAmIGxvYWRpbmcg
c2NyaXB0cyB3aXRoIGxvY2FsU3RvcmFnZS4KKiBbYmFnLmpzXShodHRwczov
L2dpdGh1Yi5jb20vbm9kZWNhL2JhZy5qcykgLSBBIGNhY2hpbmcgc2NyaXB0
IGFuZCByZXNvdXJjZSBsb2FkZXIsIHNpbWlsYXIgdG8gYmFza2V0LmpzLCBi
dXQgd2l0aCBhZGRpdGlvbmFsIGsvdiBpbnRlcmZhY2UgYW5kIGxvY2FsU3Rv
cmFnZSAvIHdlYnNxbCAvIGluZGV4ZWREQiBzdXBwb3J0LgoqIFtiYXNpbC5q
c10oaHR0cHM6Ly9naXRodWIuY29tL1dpc2VtYmx5L2Jhc2lsLmpzKSAtIFRo
ZSBtaXNzaW5nIEphdmFTY3JpcHQgc21hcnQgcGVyc2lzdGVudCBsYXllci4K
KiBbanF1ZXJ5LWNvb2tpZV0oaHR0cHM6Ly9naXRodWIuY29tL2NhcmhhcnRs
L2pxdWVyeS1jb29raWUpIC0gQSBzaW1wbGUsIGxpZ2h0d2VpZ2h0IGpRdWVy
eSBwbHVnaW4gZm9yIHJlYWRpbmcsIHdyaXRpbmcgYW5kIGRlbGV0aW5nIGNv
b2tpZXMuCiogW2pzLWNvb2tpZV0oaHR0cHM6Ly9naXRodWIuY29tL2pzLWNv
b2tpZS9qcy1jb29raWUpIC0gQSBzaW1wbGUsIGxpZ2h0d2VpZ2h0IEphdmFT
Y3JpcHQgQVBJIGZvciBoYW5kbGluZyBicm93c2VyIGNvb2tpZXMuCiogW0Nv
b2tpZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9TY290dEhhbXBlci9Db29raWVz
KSAtIEphdmFTY3JpcHQgQ2xpZW50LVNpZGUgQ29va2llIE1hbmlwdWxhdGlv
biBMaWJyYXJ5LgoqIFtEQi5qc10oaHR0cHM6Ly9naXRodWIuY29tL2Fhcm9u
cG93ZWxsL2RiLmpzLykgLSBQcm9taXNlIGJhc2VkIEluZGV4REIgV3JhcHBl
ciBsaWJyYXJ5LgoqIFtsYXduY2hhaXIuanNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9icmlhbmxlcm91eC9sYXduY2hhaXIvKSAtIFNpbXBsZSBjbGllbnQtc2lk
ZSBKU09OIHN0b3JhZ2UuCiogW3NxbC5qc10oaHR0cHM6Ly9naXRodWIuY29t
L2tyaXBrZW4vc3FsLmpzKSAtIFNRTGl0ZSBjb21waWxlZCB0byBKYXZhU2Ny
aXB0IHRocm91Z2ggRW1zY3JpcHRlbi4KKiBbY3J1bWJzanNdKGh0dHBzOi8v
Z2l0aHViLmNvbS9uaXJ0ejg5L2NydW1ic2pzKSAtIEEgbGlnaHR3ZWlnaHQg
dmFuaWxsYSBFUzYgY29va2llcyBhbmQgbG9jYWwgc3RvcmFnZSBKYXZhU2Ny
aXB0IGxpYnJhcnkuCgoKIyMgQ29sb3IKCiogW3JhbmRvbUNvbG9yXShodHRw
czovL2dpdGh1Yi5jb20vZGF2aWRtZXJmaWVsZC9yYW5kb21Db2xvcikgLSBB
IGNvbG9yIGdlbmVyYXRvciBmb3IgSmF2YVNjcmlwdC4KKiBbY2hyb21hLmpz
XShodHRwczovL2dpdGh1Yi5jb20vZ2thL2Nocm9tYS5qcykgLSBKYXZhU2Ny
aXB0IGxpYnJhcnkgZm9yIGFsbCBraW5kcyBvZiBjb2xvciBtYW5pcHVsYXRp
b25zLgoqIFtjb2xvcl0oaHR0cHM6Ly9naXRodWIuY29tL1FpeC0vY29sb3Ip
IC0gSmF2YVNjcmlwdCBjb2xvciBjb252ZXJzaW9uIGFuZCBtYW5pcHVsYXRp
b24gbGlicmFyeS4KKiBbY29sb3JzXShodHRwczovL2dpdGh1Yi5jb20vbXJt
cnMvY29sb3JzKSAtIFNtYXJ0ZXIgZGVmYXVsdHMgZm9yIGNvbG9ycyBvbiB0
aGUgd2ViLgoqIFtQbGVhc2VKU10oaHR0cHM6Ly9naXRodWIuY29tL0Zvb2lk
Z2UvUGxlYXNlSlMpIC0gSmF2YVNjcmlwdCBMaWJyYXJ5IGZvciBjcmVhdGlu
ZyByYW5kb20gcGxlYXNpbmcgY29sb3JzIGFuZCBjb2xvciBzY2hlbWVzLgoq
IFtUaW55Q29sb3JdKGh0dHBzOi8vZ2l0aHViLmNvbS9iZ3JpbnMvVGlueUNv
bG9yKSAtIEZhc3QsIHNtYWxsIGNvbG9yIG1hbmlwdWxhdGlvbiBhbmQgY29u
dmVyc2lvbiBmb3IgSmF2YVNjcmlwdC4KKiBbVmlicmFudC5qc10oaHR0cHM6
Ly9naXRodWIuY29tL2phcml6L3ZpYnJhbnQuanMvKSAtIEV4dHJhY3QgcHJv
bWluZW50IGNvbG9ycyBmcm9tIGFuIGltYWdlLgoKIyMgSTE4biBBbmQgTDEw
bgoqTG9jYWxpemF0aW9uIChsMTBuKSBhbmQgaW50ZXJuYXRpb25hbGl6YXRp
b24gKGkxOG4pIEphdmFTY3JpcHQgbGlicmFyaWVzLioKCiogW2kxOG5leHRd
KGh0dHBzOi8vZ2l0aHViLmNvbS9pMThuZXh0L2kxOG5leHQpIC0gaW50ZXJu
YXRpb25hbGlzYXRpb24gKGkxOG4pIHdpdGggSmF2YVNjcmlwdCB0aGUgZWFz
eSB3YXkuCiogW3BvbHlnbG90XShodHRwczovL2dpdGh1Yi5jb20vYWlyYm5i
L3BvbHlnbG90LmpzKSAtIHRpbnkgaTE4biBoZWxwZXIgbGlicmFyeS4KKiBb
YmFiZWxmaXNoXShodHRwczovL2dpdGh1Yi5jb20vbm9kZWNhL2JhYmVsZmlz
aC8pIC0gaTE4biB3aXRoIGh1bWFuIGZyaWVuZGx5IEFQSSBhbmQgYnVpbHQg
aW4gcGx1cmFscyBzdXBwb3J0LgoqIFt0dGFnXShodHRwczovL2dpdGh1Yi5j
b20vdHRhZy1vcmcvdHRhZykgLSBNb2Rlcm4gamF2YXNjcmlwdCBpMThuIGxv
Y2FsaXphdGlvbiBsaWJyYXJ5IGJhc2VkIG9uIEVTNiB0YWdnZWQgdGVtcGxh
dGVzIGFuZCB0aGUgZ29vZCBvbGQgR05VIGdldHRleHQuCgojIyBDb250cm9s
IEZsb3cKCiogW2FzeW5jXShodHRwczovL2dpdGh1Yi5jb20vY2FvbGFuL2Fz
eW5jKSAtIEFzeW5jIHV0aWxpdGllcyBmb3Igbm9kZSBhbmQgdGhlIGJyb3dz
ZXIuCiogW3FdKGh0dHBzOi8vZ2l0aHViLmNvbS9rcmlza293YWwvcSkgLSBB
IHRvb2wgZm9yIG1ha2luZyBhbmQgY29tcG9zaW5nIGFzeW5jaHJvbm91cyBw
cm9taXNlcyBpbiBKYXZhU2NyaXB0LgoqIFtzdGVwXShodHRwczovL2dpdGh1
Yi5jb20vY3JlYXRpb25peC9zdGVwLykgLSBBbiBhc3luYyBjb250cm9sLWZs
b3cgbGlicmFyeSB0aGF0IG1ha2VzIHN0ZXBwaW5nIHRocm91Z2ggbG9naWMg
ZWFzeS4KKiBbY29udHJhXShodHRwczovL2dpdGh1Yi5jb20vYmV2YWNxdWEv
Y29udHJhLykgLSBBc3luY2hyb25vdXMgZmxvdyBjb250cm9sIHdpdGggYSBm
dW5jdGlvbmFsIHRhc3RlIHRvIGl0LgoqIFtCbHVlYmlyZF0oaHR0cHM6Ly9n
aXRodWIuY29tL3BldGthYW50b25vdi9ibHVlYmlyZC8pIC0gZnVsbHkgZmVh
dHVyZWQgcHJvbWlzZSBsaWJyYXJ5IHdpdGggZm9jdXMgb24gaW5ub3ZhdGl2
ZSBmZWF0dXJlcyBhbmQgcGVyZm9ybWFuY2UuCiogW3doZW5dKGh0dHBzOi8v
Z2l0aHViLmNvbS9jdWpvanMvd2hlbikgLSBBIHNvbGlkLCBmYXN0IFByb21p
c2VzL0ErIGFuZCB3aGVuKCkgaW1wbGVtZW50YXRpb24sIHBsdXMgb3RoZXIg
YXN5bmMgZ29vZGllcy4KKiBbT2JqZWN0RXZlbnRUYXJnZXRdKGh0dHBzOi8v
Z2l0aHViLmNvbS9nYXJ0ei9PYmplY3RFdmVudFRhcmdldCkgLSBQcm92aWRl
IGEgcHJvdG90eXBlIHRoYXQgYWRkIHN1cHBvcnQgdG8gZXZlbnQgbGlzdGVu
ZXJzICh3aXRoIHNhbWUgYmVoYXZpb3Igb2YgRXZlbnRUYXJnZXQgZnJvbSBE
T01FbGVtZW50cyBhdmFpbGFibGUgb24gYnJvd3NlcnMpLgoqIFtzcG9yYWRp
Y10oaHR0cHM6Ly9naXRodWIuY29tL21hcmNvb25yb2FkL3Nwb3JhZGljKSAt
IENvbXBvc2FibGUgY29uY3VycmVuY3kgYWJzdHJhY3Rpb25zIChzdWNoIGFz
IHN0cmVhbXMsIGNvcm91dGluZXMgYW5kIEdvLWxpa2UgY2hhbm5lbHMpIG9u
IHRvcCBvZiBwcm9taXNlcywgZm9yIE5vZGUgYW5kIGJyb3dzZXIgZW5naW5l
cy4KCgojIyBSb3V0aW5nCgoqIFtkaXJlY3Rvcl0oaHR0cHM6Ly9naXRodWIu
Y29tL2ZsYXRpcm9uL2RpcmVjdG9yKSAtIEEgdGlueSBhbmQgaXNvbW9ycGhp
YyBVUkwgcm91dGVyIGZvciBKYXZhU2NyaXB0LgoqIFtwYWdlLmpzXShodHRw
czovL2dpdGh1Yi5jb20vdmlzaW9ubWVkaWEvcGFnZS5qcykgLSBNaWNybyBj
bGllbnQtc2lkZSByb3V0ZXIgaW5zcGlyZWQgYnkgdGhlIEV4cHJlc3Mgcm91
dGVyICh+MTIwMCBieXRlcykuCiogW3BhdGhqc10oaHR0cHM6Ly9naXRodWIu
Y29tL210cnBjaWMvcGF0aGpzKSAtIFNpbXBsZSwgbGlnaHR3ZWlnaHQgcm91
dGluZyBmb3Igd2ViIGJyb3dzZXJzLgoqIFtjcm9zc3JvYWRzXShodHRwczov
L2dpdGh1Yi5jb20vbWlsbGVybWVkZWlyb3MvY3Jvc3Nyb2Fkcy5qcykgLSBK
YXZhU2NyaXB0IFJvdXRlcy4KKiBbZGF2aXMuanNdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9vbGl2ZXJubi9kYXZpcy5qcykgLSBSRVNUZnVsIGRlZ3JhZGFibGUg
SmF2YVNjcmlwdCByb3V0aW5nIHVzaW5nIHB1c2hTdGF0ZS4KKiBbbmF2YWlk
XShodHRwczovL2dpdGh1Yi5jb20vbHVrZWVkL25hdmFpZCkgLSBBIG5hdmln
YXRpb24gYWlkIChha2EsIHJvdXRlcikgZm9yIHRoZSBicm93c2VyIGluIDg1
MCBieXRlc34hCgoKIyMgU2VjdXJpdHkKCiogW0RPTVB1cmlmeV0oaHR0cHM6
Ly9naXRodWIuY29tL2N1cmU1My9ET01QdXJpZnkpIC0gQSBET00tb25seSwg
c3VwZXItZmFzdCwgdWJlci10b2xlcmFudCBYU1Mgc2FuaXRpemVyIGZvciBI
VE1MLCBNYXRoTUwgYW5kIFNWRy4KKiBbanMteHNzXShodHRwczovL2dpdGh1
Yi5jb20vbGVpem9uZ21pbi9qcy14c3MpIC0gU2FuaXRpemUgdW50cnVzdGVk
IEhUTUwgKHRvIHByZXZlbnQgWFNTKSB3aXRoIGEgY29uZmlndXJhdGlvbiBz
cGVjaWZpZWQgYnkgYSBXaGl0ZWxpc3QuCiogW3hzcy1maWx0ZXJzXShodHRw
czovL2dpdGh1Yi5jb20veWFob28veHNzLWZpbHRlcnMpIC0gU2VjdXJlIFhT
UyBGaWx0ZXJzIGJ5IFlhaG9vLgoKCiMjIExvZwoKKiBbbG9nXShodHRwczov
L2dpdGh1Yi5jb20vYWRhbXNjaHdhcnR6L2xvZykgLSBDb25zb2xlLmxvZyB3
aXRoIHN0eWxlLgoqIFtDb256b2xlXShodHRwczovL2dpdGh1Yi5jb20vT2F4
b2EvQ29uem9sZSkgLSBBIGRlYnVnIHBhbmVsIGJ1aWx0IGluIEphdmFTY3Jp
cHQgdGhhdCB3cmFwcyBKYXZhU2NyaXB0IG5hdGl2ZSBjb25zb2xlIG9iamVj
dCBtZXRob2RzIGFuZCBmdW5jdGlvbmFsaXR5IGluIGEgcGFuZWwgZGlzcGxh
eWVkIGluc2lkZSB0aGUgcGFnZS4KKiBbY29uc29sZS5sb2ctd3JhcHBlcl0o
aHR0cHM6Ly9naXRodWIuY29tL3BhdGlrL2NvbnNvbGUubG9nLXdyYXBwZXIp
IC0gTG9nIHRvIHRoZSBjb25zb2xlIGluIGFueSBicm93c2VyIHdpdGggY2xh
cml0eS4KKiBbbG9nbGV2ZWxdKGh0dHBzOi8vZ2l0aHViLmNvbS9waW10ZXJy
eS9sb2dsZXZlbCkgLSBNaW5pbWFsIGxpZ2h0d2VpZ2h0IGxvZ2dpbmcgZm9y
IEphdmFTY3JpcHQsIGFkZGluZyByZWxpYWJsZSBsb2cgbGV2ZWwgbWV0aG9k
cyB0byB3cmFwIGFueSBhdmFpbGFibGUgY29uc29sZS5sb2cgbWV0aG9kcy4K
KiBbbWluaWxvZ10oaHR0cDovL21peHUubmV0L21pbmlsb2cvKSDigJMgTGln
aHR3ZWlnaHQgY2xpZW50ICYgc2VydmVyLXNpZGUgbG9nZ2luZyB3aXRoIFN0
cmVhbS1BUEkgYmFja2VuZHMuCiogW3N0b3J5Ym9hcmRdKGh0dHA6Ly9ndWln
cnBhLmdpdGh1Yi5pby9zdG9yeWJvYXJkLykgLSBVbml2ZXJzYWwgbG9nZ2lu
ZyBsaWJyYXJ5ICsgQ2hyb21lIGV4dGVuc2lvbjsgaXQgbGV0cyB5b3Ugc2Vl
IGFsbCBjbGllbnQgYW5kIHNlcnZlciB0YXNrcyB0cmlnZ2VyZWQgYnkgYSB1
c2VyIGFjdGlvbiBpbiBhIHNpbmdsZSBwbGFjZS4KCiMjIFJlZ0V4cAoqIFtS
ZWdFeDEwMV0oaHR0cHM6Ly9yZWdleDEwMS5jb20vI2phdmFzY3JpcHQpIC0g
T25saW5lIHJlZ2V4IHRlc3RlciBhbmQgZGVidWdnZXIgZm9yIEphdmFTY3Jp
cHQuIEFsc28gc3VwcG9ydHMgUHl0aG9uLCBQSFAgYW5kIFBDUkUuCiogW1Jl
Z0V4cl0oaHR0cDovL3JlZ2V4ci5jb20pIC0gSFRNTC9KUyBiYXNlZCB0b29s
IGZvciBjcmVhdGluZywgdGVzdGluZywgYW5kIGxlYXJuaW5nIGFib3V0IFJl
Z3VsYXIgRXhwcmVzc2lvbnMuCiogW1JlZ0V4cEJ1aWxkZXJdKGh0dHBzOi8v
Z2l0aHViLmNvbS90aGViaW5hcnlzZWFyY2h0cmVlL3JlZ2V4cGJ1aWxkZXJq
cykgLSBDcmVhdGUgcmVndWxhciBleHByZXNzaW9ucyB1c2luZyBjaGFpbmVk
IG1ldGhvZHMuCgoKIyMgVm9pY2UgQ29tbWFuZAoKKiBbYW5ueWFuZ10oaHR0
cHM6Ly9naXRodWIuY29tL1RhbEF0ZXIvYW5ueWFuZykgLSBBIEphdmFTY3Jp
cHQgbGlicmFyeSBmb3IgYWRkaW5nIHZvaWNlIGNvbW1hbmRzIHRvIHlvdXIg
c2l0ZSwgdXNpbmcgc3BlZWNoIHJlY29nbml0aW9uLgoqIFt2b2l4LmpzXSho
dHRwczovL2dpdGh1Yi5jb20vcGF6Z3VpbGxlL3ZvaXgpIC0gQSBKYXZhU2Ny
aXB0IGxpYnJhcnkgdG8gYWRkIHZvaWNlIGNvbW1hbmRzIHRvIHlvdXIgc2l0
ZXMsIGFwcHMgb3IgZ2FtZXMuCgoKIyMgQVBJCgoqIFtheGlvc10oaHR0cHM6
Ly9naXRodWIuY29tL2F4aW9zL2F4aW9zKSAtIFByb21pc2UgYmFzZWQgSFRU
UCBjbGllbnQgZm9yIHRoZSBicm93c2VyIGFuZCBub2RlLmpzLgoqIFtib3R0
bGVuZWNrXShodHRwczovL2dpdGh1Yi5jb20vU0dyb25kaW4vYm90dGxlbmVj
aykgLSBBIHBvd2VyZnVsIHJhdGUgbGltaXRlciB0aGF0IG1ha2VzIHRocm90
dGxpbmcgZWFzeS4KKiBbb2F1dGgtc2lnbmF0dXJlLWpzXShodHRwczovL2dp
dGh1Yi5jb20vYmV0dGlvbG8vb2F1dGgtc2lnbmF0dXJlLWpzKSAtIEphdmFT
Y3JpcHQgT0F1dGggMS4wYSBzaWduYXR1cmUgZ2VuZXJhdG9yIGZvciBub2Rl
IGFuZCB0aGUgYnJvd3Nlci4KKiBbYW15Z2RhbGFdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9saW5jb2xubG9vcC9hbXlnZGFsYSkgLSBSRVNUZnVsIEhUVFAgY2xp
ZW50IGZvciBKYXZhU2NyaXB0IHBvd2VyZWQgd2ViIGFwcGxpY2F0aW9ucy4K
KiBbanF1ZXJ5LnJlc3RdKGh0dHBzOi8vZ2l0aHViLmNvbS9qcGlsbG9yYS9q
cXVlcnkucmVzdCkgLSBBIGpRdWVyeSBwbHVnaW4gZm9yIGVhc3kgY29uc3Vt
cHRpb24gb2YgUkVTVGZ1bCBBUElzLgoqIFtSYWlscyBSYW5nZXJdKGh0dHBz
Oi8vZ2l0aHViLmNvbS92aWN0b3ItYW0vcmFpbHMtcmFuZ2VyKSAtIEFuIG9w
aW5pb25hdGVkIFJFU1QgY2xpZW50IGZvciBSdWJ5IG9uIFJhaWxzIEFQSXMu
CiogW3dyZXRjaF0oaHR0cHM6Ly9naXRodWIuY29tL2VsYnl3YW4vd3JldGNo
KSAtIEEgdGlueSB3cmFwcGVyIGJ1aWx0IGFyb3VuZCBmZXRjaCB3aXRoIGFu
IGludHVpdGl2ZSBzeW50YXguCiogW0JlYXJlci5zaF0oaHR0cHM6Ly9naXRo
dWIuY29tL0JlYXJlci9iZWFyZXItanMpIC0gVW5pdmVyc2FsIEFQSSBjbGll
bnQgdGhhdCBzdXBwb3J0cyBPQXV0aCAvIEFQSSBLZXkgLyBCYXNpYyAvIGV0
Yy4KCiMjIFN0cmVhbWluZwoKKiBbVGFpbG9yXShodHRwczovL2dpdGh1Yi5j
b20vemFsYW5kby90YWlsb3IpIC0gU3RyZWFtaW5nIGxheW91dCBzZXJ2aWNl
IGZvciBmcm9udC1lbmQgbWljcm9zZXJ2aWNlcywgaW5zcGlyZWQgYnkgRmFj
ZWJvb2sncyBCaWdQaXBlLgoKCiMjIFZpc2lvbiBEZXRlY3Rpb24KCiogW3Ry
YWNraW5nLmpzXShodHRwczovL2dpdGh1Yi5jb20vZWR1YXJkb2x1bmRncmVu
L3RyYWNraW5nLmpzKSAtIEEgbW9kZXJuIGFwcHJvYWNoIGZvciBDb21wdXRl
ciBWaXNpb24gb24gdGhlIHdlYi4KKiBbb2NyYWQuanNdKGh0dHBzOi8vZ2l0
aHViLmNvbS9hbnRpbWF0dGVyMTUvb2NyYWQuanMpIC0gT0NSIGluIEphdmFT
Y3JpcHQgdmlhIEVtc2NyaXB0ZW4uCgoKIyMgTWFjaGluZSBMZWFybmluZwoK
KiBbQ29udk5ldEpTXShodHRwczovL2dpdGh1Yi5jb20va2FycGF0aHkvY29u
dm5ldGpzKSAtIERlZXAgTGVhcm5pbmcgaW4gSmF2YVNjcmlwdC4gVHJhaW4g
Q29udm9sdXRpb25hbCBOZXVyYWwgTmV0d29ya3MgKG9yIG9yZGluYXJ5IG9u
ZXMpIGluIHlvdXIgYnJvd3Nlci4KKiBbRE4yQV0oaHR0cHM6Ly9naXRodWIu
Y29tL2RuMmEvZG4yYS1qYXZhc2NyaXB0KSAtIERpZ2l0YWwgTmV1cmFsIE5l
dHdvcmtzIEFyY2hpdGVjdHVyZS4KKiBbQnJhaW4uanNdKGh0dHBzOi8vZ2l0
aHViLmNvbS9oYXJ0aHVyL2JyYWluKSAtIE5ldXJhbCBuZXR3b3JrcyBpbiBK
YXZhU2NyaXB0LgoqIFtNaW5kLmpzXShodHRwczovL2dpdGh1Yi5jb20vc3Rl
dmVubWlsbGVyODg4L21pbmQpIC0gQSBmbGV4aWJsZSBuZXVyYWwgbmV0d29y
ayBsaWJyYXJ5LgoqIFtTeW5hcHRpYy5qc10oaHR0cHM6Ly9naXRodWIuY29t
L2NhemFsYS9zeW5hcHRpYykgLSBBcmNoaXRlY3R1cmUtZnJlZSBuZXVyYWwg
bmV0d29yayBsaWJyYXJ5IGZvciBub2RlLmpzIGFuZCB0aGUgYnJvd3Nlci4K
KiBbVGVuc29yRmxvdy5qc10oaHR0cHM6Ly9qcy50ZW5zb3JmbG93Lm9yZykg
LSBBIEphdmFTY3JpcHQgbGlicmFyeSBmb3IgdHJhaW5pbmcgYW5kIGRlcGxv
eWluZyBNTCBtb2RlbHMgaW4gdGhlIGJyb3dzZXIgYW5kIG9uIE5vZGUuanMu
CiogW21sNS5qc10oaHR0cHM6Ly9tbDVqcy5vcmcpIC0gRnJpZW5kbHkgTWFj
aGluZSBMZWFybmluZyBmb3IgdGhlIFdlYi4KCgojIyBCcm93c2VyIERldGVj
dGlvbgoKKiBbYm93c2VyXShodHRwczovL2dpdGh1Yi5jb20vZGVkL2Jvd3Nl
cikgLSBhIGJyb3dzZXIgZGV0ZWN0b3IuCgojIyBCZW5jaG1hcmsKCiogW2Jl
bmNobWFyay5qc10oaHR0cHM6Ly9naXRodWIuY29tL2Jlc3RpZWpzL2JlbmNo
bWFyay5qcykgLSBBIGJlbmNobWFya2luZyBsaWJyYXJ5LiBBcyB1c2VkIG9u
IGpzUGVyZi5jb20uCiogW21hdGNoYV0oaHR0cHM6Ly9naXRodWIuY29tL2xv
Z2ljYWxwYXJhZG94L21hdGNoYSkgLSBBIGNhZmZlaW5lIGRyaXZlbiwgc2lt
cGxpc3RpYyBhcHByb2FjaCB0byBiZW5jaG1hcmtpbmcuCgojIyBDb2RlIGhp
Z2hsaWdodGluZwoKKiBbSGlnaGxpZ2h0LmpzXShodHRwczovL2dpdGh1Yi5j
b20vaXNhZ2FsYWV2L2hpZ2hsaWdodC5qcykgLSBKYXZhU2NyaXB0IHN5bnRh
eCBoaWdobGlnaHRlci4KKiBbUHJpc21KU10oaHR0cHM6Ly9naXRodWIuY29t
L1ByaXNtSlMvcHJpc20pIC0gTGlnaHR3ZWlnaHQsIHJvYnVzdCwgZWxlZ2Fu
dCBzeW50YXggaGlnaGxpZ2h0aW5nLgoKCiMjIExvYWRpbmcgU3RhdHVzCipM
aWJyYXJpZXMgZm9yIGluZGljYXRlIGxvYWQgc3RhdHVzLioKCiogW01wcm9n
cmVzcy5qc10oaHR0cHM6Ly9naXRodWIuY29tL2xpZ2h0bmluZ3RnYy9NUHJv
Z3Jlc3MuanMpIC0gQ3JlYXRlIEdvb2dsZSBNYXRlcmlhbCBEZXNpZ24gcHJv
Z3Jlc3MgbGluZWFyIGJhcnMuCiogW05Qcm9ncmVzc10oaHR0cDovL3JpY29z
dGFjcnV6LmNvbS9ucHJvZ3Jlc3MvKSAtIFNsaW0gcHJvZ3Jlc3MgYmFycyBm
b3IgQWpheCd5IGFwcGxpY2F0aW9ucy4KKiBbU3Bpbi5qc10oaHR0cHM6Ly9n
aXRodWIuY29tL2ZnbmFzcy9zcGluLmpzKSAtIEEgc3Bpbm5pbmcgYWN0aXZp
dHkgaW5kaWNhdG9yLgoqIFtwcm9ncmVzcy5qc10oaHR0cHM6Ly9naXRodWIu
Y29tL3VzYWJsaWNhL3Byb2dyZXNzLmpzKSAtIENyZWF0ZSBhbmQgbWFuYWdl
IHByb2dyZXNzIGJhciBmb3IgZXZlcnkgb2JqZWN0cyBvbiB0aGUgcGFnZS4K
KiBbcHJvZ3Jlc3NiYXIuanNdKGh0dHBzOi8vZ2l0aHViLmNvbS9raW1tb2Jy
dW5mZWxkdC9wcm9ncmVzc2Jhci5qcykgLSBCZWF1dGlmdWwgYW5kIHJlc3Bv
bnNpdmUgcHJvZ3Jlc3MgYmFycyB3aXRoIGFuaW1hdGVkIFNWRyBwYXRocy4K
KiBbcGFjZV0oaHR0cHM6Ly9naXRodWIuY29tL0h1YlNwb3QvcGFjZSkgLSBB
dXRvbWF0aWNhbGx5IGFkZCBhIHByb2dyZXNzIGJhciB0byB5b3VyIHNpdGUu
CiogW3RvcGJhcl0oaHR0cHM6Ly9naXRodWIuY29tL2J1dW5ndXllbi90b3Bi
YXIpIC0gVGlueSAmIGJlYXV0aWZ1bCBzaXRlLXdpZGUgcHJvZ3Jlc3MgaW5k
aWNhdG9yLgoqIFtuYW5vYmFyXShodHRwczovL2dpdGh1Yi5jb20vamFjb2Jv
cnVzL25hbm9iYXIpIC0gVmVyeSBsaWdodHdlaWdodCBwcm9ncmVzcyBiYXJz
LiBObyBqUXVlcnkuCiogW1BhZ2VMb2FkaW5nRWZmZWN0c10oaHR0cHM6Ly9n
aXRodWIuY29tL2NvZHJvcHMvUGFnZUxvYWRpbmdFZmZlY3RzKSAtIE1vZGVy
biB3YXlzIG9mIHJldmVhbGluZyBuZXcgY29udGVudCB1c2luZyBTVkcgYW5p
bWF0aW9ucy4KKiBbU3BpbktpdF0oaHR0cHM6Ly9naXRodWIuY29tL3RvYmlh
c2FobGluL1NwaW5LaXQpIC0gQSBjb2xsZWN0aW9uIG9mIGxvYWRpbmcgaW5k
aWNhdG9ycyBhbmltYXRlZCB3aXRoIENTUy4KKiBbTGFkZGFdKGh0dHBzOi8v
Z2l0aHViLmNvbS9oYWtpbWVsL0xhZGRhKSAtIEJ1dHRvbnMgd2l0aCBidWls
dC1pbiBsb2FkaW5nIGluZGljYXRvcnMuCiogW2Nzcy1sb2FkZXJzXShodHRw
czovL2dpdGh1Yi5jb20vbHVrZWhhYXMvY3NzLWxvYWRlcnMpIC0gQSBjb2xs
ZWN0aW9uIG9mIGxvYWRpbmcgc3Bpbm5lcnMgYW5pbWF0ZWQgd2l0aCBDU1MK
CkJlc2lkZXMgbGlicmFyaWVzLCB0aGVyZSdyZSBbQ29sbGVjdGlvbiBvbiBD
b2RlcGVuXShodHRwOi8vY29kZXBlbi5pby9jb2xsZWN0aW9uL0h0QW5lLyks
IGFuZCBnZW5lcmF0b3JzIGxpa2UgW0FqYXhsb2FkXShodHRwOi8vd3d3LmFq
YXhsb2FkLmluZm8vKSwgW1ByZWxvYWRlcnNdKGh0dHA6Ly9wcmVsb2FkZXJz
Lm5ldC8pIGFuZCBbQ1NTTG9hZF0oaHR0cDovL2Nzc2xvYWQubmV0LykuCgoK
IyMgVmFsaWRhdGlvbgoKKiBbUGFyc2xleS5qc10oaHR0cHM6Ly9naXRodWIu
Y29tL2d1aWxsYXVtZXBvdGllci9QYXJzbGV5LmpzKSAtIFZhbGlkYXRlIHlv
dXIgZm9ybXMsIGZyb250ZW5kLCB3aXRob3V0IHdyaXRpbmcgYSBzaW5nbGUg
bGluZSBvZiBKYXZhU2NyaXB0LgoqIFtqcXVlcnktdmFsaWRhdGlvbl0oaHR0
cHM6Ly9naXRodWIuY29tL2p6YWVmZmVyZXIvanF1ZXJ5LXZhbGlkYXRpb24p
IC0galF1ZXJ5IFZhbGlkYXRpb24gUGx1Z2luLgoqIFt2YWxpZGF0b3IuanNd
KGh0dHBzOi8vZ2l0aHViLmNvbS9jaHJpc28vdmFsaWRhdG9yLmpzKSAtIFN0
cmluZyB2YWxpZGF0aW9uIGFuZCBzYW5pdGl6YXRpb24uCiogW3ZhbGlkYXRl
LmpzXShodHRwczovL2dpdGh1Yi5jb20vcmlja2hhcnJpc29uL3ZhbGlkYXRl
LmpzKSAtIExpZ2h0d2VpZ2h0IEphdmFTY3JpcHQgZm9ybSB2YWxpZGF0aW9u
IGxpYnJhcnkgaW5zcGlyZWQgYnkgQ29kZUlnbml0ZXIuCiogW3ZhbGlkYXRy
XShodHRwczovL2dpdGh1Yi5jb20vamF5bW9ycm93L3ZhbGlkYXRyLykgLSBD
cm9zcyBCcm93c2VyIEhUTUw1IEZvcm0gVmFsaWRhdGlvbi4KKiBbRm9ybVZh
bGlkYXRpb25dKGh0dHA6Ly9mb3JtdmFsaWRhdGlvbi5pby8pIC0gVGhlIGJl
c3QgalF1ZXJ5IHBsdWdpbiB0byB2YWxpZGF0ZSBmb3JtIGZpZWxkcy4gRm9y
bWVybHkgQm9vdHN0cmFwVmFsaWRhdG9yLgoqIFtpcy5qc10oaHR0cHM6Ly9n
aXRodWIuY29tL2FyYXNhdGFzYXlnaW4vaXMuanMpIC0gQ2hlY2sgdHlwZXMs
IHJlZ2V4cHMsIHByZXNlbmNlLCB0aW1lIGFuZCBtb3JlLgoqIFtGaWVsZFZh
bF0oaHR0cHM6Ly9naXRodWIuY29tL0ZpZWxkVmFsL2ZpZWxkdmFsLWpzKSAt
IG11bHRpcHVycG9zZSB2YWxpZGF0aW9uIGxpYnJhcnkuIFN1cHBvcnRzIGJv
dGggc3luYyBhbmQgYXN5bmMgdmFsaWRhdGlvbi4KCgojIyBLZXlib2FyZCBX
cmFwcGVycwoKKiBbbW91c2V0cmFwXShodHRwczovL2dpdGh1Yi5jb20vY2Nh
bXBiZWxsL21vdXNldHJhcCkgLSBTaW1wbGUgbGlicmFyeSBmb3IgaGFuZGxp
bmcga2V5Ym9hcmQgc2hvcnRjdXRzIGluIEphdmFTY3JpcHQuCiogW2tleW1h
c3Rlcl0oaHR0cHM6Ly9naXRodWIuY29tL21hZHJvYmJ5L2tleW1hc3Rlcikg
LSBBIHNpbXBsZSBtaWNyby1saWJyYXJ5IGZvciBkZWZpbmluZyBhbmQgZGlz
cGF0Y2hpbmcga2V5Ym9hcmQgc2hvcnRjdXRzLgoqIFtLZXlwcmVzc10oaHR0
cHM6Ly9naXRodWIuY29tL2RtYXVyby9LZXlwcmVzcykgLSBBIGtleWJvYXJk
IGlucHV0IGNhcHR1cmluZyB1dGlsaXR5IGluIHdoaWNoIGFueSBrZXkgY2Fu
IGJlIGEgbW9kaWZpZXIga2V5LgoqIFtLZXlib2FyZEpTXShodHRwczovL2dp
dGh1Yi5jb20vUm9iZXJ0V0h1cnN0L0tleWJvYXJkSlMpIC0gQSBKYXZhU2Ny
aXB0IGxpYnJhcnkgZm9yIGJpbmRpbmcga2V5Ym9hcmQgY29tYm9zIHdpdGhv
dXQgdGhlIHBhaW4gb2Yga2V5IGNvZGVzIGFuZCBrZXkgY29tYm8gY29uZmxp
Y3RzLgoqIFtqcXVlcnkuaG90a2V5c10oaHR0cHM6Ly9naXRodWIuY29tL2pl
cmVzaWcvanF1ZXJ5LmhvdGtleXMpIC0galF1ZXJ5IEhvdGtleXMgbGV0cyB5
b3Ugd2F0Y2ggZm9yIGtleWJvYXJkIGV2ZW50cyBhbnl3aGVyZSBpbiB5b3Vy
IGNvZGUgc3VwcG9ydGluZyBhbG1vc3QgYW55IGtleSBjb21iaW5hdGlvbi4K
KiBbandlcnR5XShodHRwczovL2dpdGh1Yi5jb20va2VpdGhhbXVzL2p3ZXJ0
eSkgLSBBd2Vzb21lIGhhbmRsaW5nIG9mIGtleWJvYXJkIGV2ZW50cy4KCgoj
IyBUb3VycyBBbmQgR3VpZGVzCgoqIFtpbnRyby5qc10oaHR0cHM6Ly9naXRo
dWIuY29tL3VzYWJsaWNhL2ludHJvLmpzKSAtIEEgYmV0dGVyIHdheSBmb3Ig
bmV3IGZlYXR1cmUgaW50cm9kdWN0aW9uIGFuZCBzdGVwLWJ5LXN0ZXAgdXNl
cnMgZ3VpZGUgZm9yIHlvdXIgd2Vic2l0ZSBhbmQgcHJvamVjdC4KKiBbc2hl
cGhlcmRdKGh0dHBzOi8vZ2l0aHViLmNvbS9IdWJTcG90L3NoZXBoZXJkKSAt
IEd1aWRlIHlvdXIgdXNlcnMgdGhyb3VnaCBhIHRvdXIgb2YgeW91ciBhcHAu
CiogW2Jvb3RzdHJhcC10b3VyXShodHRwczovL2dpdGh1Yi5jb20vc29yaWNo
ODcvYm9vdHN0cmFwLXRvdXIpIC0gUXVpY2sgYW5kIGVhc3kgcHJvZHVjdCB0
b3VycyB3aXRoIFR3aXR0ZXIgQm9vdHN0cmFwIFBvcG92ZXJzLgoqIFt0b3Vy
aXN0XShodHRwczovL2dpdGh1Yi5jb20vZWFzZWxpbmMvdG91cmlzdCkgLSBT
aW1wbGUsIGZsZXhpYmxlIHRvdXJzIGZvciB5b3VyIGFwcC4KKiBbY2hhcmRp
bi5qc10oaHR0cHM6Ly9naXRodWIuY29tL2hlZWxob29rL2NoYXJkaW4uanMp
IC0gU2ltcGxlIG92ZXJsYXkgaW5zdHJ1Y3Rpb25zIGZvciB5b3VyIGFwcHMu
CiogW3BhZ2VndWlkZV0oaHR0cHM6Ly9naXRodWIuY29tL3RyYWNlbHl0aWNz
L3BhZ2VndWlkZSkgLSBBbiBpbnRlcmFjdGl2ZSBndWlkZSBmb3Igd2ViIHBh
Z2UgZWxlbWVudHMgdXNpbmcgalF1ZXJ5IGFuZCBDU1MzLgoqIFtob3BzY290
Y2hdKGh0dHBzOi8vZ2l0aHViLmNvbS9saW5rZWRpbi9ob3BzY290Y2gpIC0g
QSBmcmFtZXdvcmsgdG8gbWFrZSBpdCBlYXN5IGZvciBkZXZlbG9wZXJzIHRv
IGFkZCBwcm9kdWN0IHRvdXJzIHRvIHRoZWlyIHBhZ2VzLgoqIFtqb3lyaWRl
XShodHRwczovL2dpdGh1Yi5jb20venVyYi9qb3lyaWRlKSAtIGpRdWVyeSBm
ZWF0dXJlIHRvdXIgcGx1Z2luLgoqIFtmb2N1c2FibGVdKGh0dHBzOi8vZ2l0
aHViLmNvbS96emFyY29uL2ZvY3VzYWJsZSkgLSBTZXQgYSBzcG90bGlnaHQg
Zm9jdXMgb24gRE9NIGVsZW1lbnQgYWRkaW5nIGEgb3ZlcmxheSBsYXllciB0
byB0aGUgcmVzdCBvZiB0aGUgcGFnZS4KKiBbZHJpdmVyLmpzXShodHRwczov
L2dpdGh1Yi5jb20va2FtcmFuYWhtZWRzZS9kcml2ZXIuanMpIC0gUG93ZXJm
dWwgeWV0IGxpZ2h0LXdlaWdodCwgdmFuaWxsYSBKYXZhU2NyaXB0IGVuZ2lu
ZSB0byBkcml2ZSB0aGUgdXNlcidzIGZvY3VzIGFjcm9zcyB0aGUgcGFnZQoK
IyMgTm90aWZpY2F0aW9ucwoKKiBbaXppVG9hc3RdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9kb2xjZS9pemlUb2FzdCkgLSBFbGVnYW50LCByZXNwb25zaXZlLCBm
bGV4aWJsZSBhbmQgbGlnaHR3ZWlnaHQgbm90aWZpY2F0aW9uIHBsdWdpbiB3
aXRoIG5vIGRlcGVuZGVuY2llcy4KKiBbbWVzc2VuZ2VyXShodHRwczovL2dp
dGh1Yi5jb20vSHViU3BvdC9tZXNzZW5nZXIpIC0gR3Jvd2wtc3R5bGUgYWxl
cnRzIGFuZCBtZXNzYWdlcyBmb3IgeW91ciBhcHAuCiogW25vdHldKGh0dHBz
Oi8vZ2l0aHViLmNvbS9uZWVkaW0vbm90eSkgLSBqUXVlcnkgbm90aWZpY2F0
aW9uIHBsdWdpbi4KKiBbcG5vdGlmeV0oaHR0cHM6Ly9naXRodWIuY29tL3Nj
aWFjdGl2ZS9wbm90aWZ5KSAtIEphdmFTY3JpcHQgbm90aWZpY2F0aW9ucyBm
b3IgQm9vdHN0cmFwLCBqUXVlcnkgVUksIGFuZCB0aGUgV2ViIE5vdGlmaWNh
dGlvbnMgRHJhZnQuCiogW3RvYXN0cl0oaHR0cHM6Ly9naXRodWIuY29tL0Nv
ZGVTZXZlbi90b2FzdHIpIC0gU2ltcGxlIEphdmFTY3JpcHQgdG9hc3Qgbm90
aWZpY2F0aW9ucy4KKiBbaHVtYW5lLWpzXShodHRwczovL2dpdGh1Yi5jb20v
d2F2ZGVkL2h1bWFuZS1qcykgLSBBIHNpbXBsZSwgbW9kZXJuLCBicm93c2Vy
IG5vdGlmaWNhdGlvbiBzeXN0ZW0uCiogW3Ntb2tlLmpzXShodHRwczovL2dp
dGh1Yi5jb20vaHhnZi9zbW9rZS5qcykgLSBGcmFtZXdvcmstYWdub3N0aWMg
c3R5bGVkIGFsZXJ0IHN5c3RlbSBmb3IgSmF2YVNjcmlwdC4KKiBbbm90aWVd
KGh0dHBzOi8vZ2l0aHViLmNvbS9qYXJlZHJlaWNoL25vdGllKSAtIFNpbXBs
ZSBub3RpZmljYXRpb25zIGFuZCBpbnB1dHMgd2l0aCBubyBkZXBlbmRlbmNp
ZXMuCgoKIyMgU2xpZGVycwoKKiBbU3dpcGVyXShodHRwczovL2dpdGh1Yi5j
b20vbm9saW1pdHM0d2ViL1N3aXBlcikgLSBNb2JpbGUgdG91Y2ggc2xpZGVy
IGFuZCBmcmFtZXdvcmsgd2l0aCBoYXJkd2FyZSBhY2NlbGVyYXRlZCB0cmFu
c2l0aW9ucy4KKiBbc2xpY2tdKGh0dHBzOi8vZ2l0aHViLmNvbS9rZW53aGVl
bGVyL3NsaWNrKSAtIFRoZSBsYXN0IGNhcm91c2VsIHlvdSdsbCBldmVyIG5l
ZWQuCiogW3NsaWRlc0pzXShodHRwOi8vd3d3LnNsaWRlc2pzLmNvbSkgLSBJ
cyBhIHJlc3BvbnNpdmUgc2xpZGVzaG93IHBsdWctaW4gZm9yIEpRdWVyeSgx
LjcuMSspIHdpdGggZmVhdHVyZXMgbGlrZSB0b3VjaCBhbmQgQ1NTMyB0cmFu
c2l0aW9ucwoqIFtGbGV4U2xpZGVyXShodHRwczovL2dpdGh1Yi5jb20vd29v
dGhlbWVzL0ZsZXhTbGlkZXIpIC0gQW4gYXdlc29tZSwgZnVsbHkgcmVzcG9u
c2l2ZSBqUXVlcnkgc2xpZGVyIHBsdWdpbi4KKiBbdW5zbGlkZXJdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9pZGlvdC91bnNsaWRlcikgLSBUaGUgc2ltcGxlc3Qg
alF1ZXJ5IHNsaWRlciB0aGVyZSBpcy4KKiBbc2x5XShodHRwczovL2dpdGh1
Yi5jb20vZGFyc2Fpbi9zbHkpIC0gSmF2YVNjcmlwdCBsaWJyYXJ5IGZvciBv
bmUtZGlyZWN0aW9uYWwgc2Nyb2xsaW5nIHdpdGggaXRlbSBiYXNlZCBuYXZp
Z2F0aW9uIHN1cHBvcnQuCiogW3ZlZ2FzXShodHRwczovL2dpdGh1Yi5jb20v
amF5c2FsdmF0L3ZlZ2FzKSAtIEEgalF1ZXJ5IHBsdWdpbiB0byBhZGQgYmVh
dXRpZnVsIGZ1bGxzY3JlZW4gYmFja2dyb3VuZHMgdG8geW91ciB3ZWJwYWdl
cy4gSXQgZXZlbiBhbGxvd3MgU2xpZGVzaG93cy4KKiBbU2VxdWVuY2VdKGh0
dHBzOi8vZ2l0aHViLmNvbS9JYW5MdW5uL1NlcXVlbmNlKSAtIENTUyBhbmlt
YXRpb24gZnJhbWV3b3JrIGZvciBjcmVhdGluZyByZXNwb25zaXZlIHNsaWRl
cnMsIHByZXNlbnRhdGlvbnMsIGJhbm5lcnMsIGFuZCBvdGhlciBzdGVwLWJh
c2VkIGFwcGxpY2F0aW9ucy4KKiBbcmV2ZWFsLmpzXShodHRwczovL2dpdGh1
Yi5jb20vaGFraW1lbC9yZXZlYWwuanMpIC0gQSBmcmFtZXdvcmsgZm9yIGVh
c2lseSBjcmVhdGluZyBiZWF1dGlmdWwgcHJlc2VudGF0aW9ucyB1c2luZyBI
VE1MLgoqIFtpbXByZXNzLmpzXShodHRwczovL2dpdGh1Yi5jb20vaW1wcmVz
cy9pbXByZXNzLmpzKSAtIEl0J3MgYSBwcmVzZW50YXRpb24gZnJhbWV3b3Jr
IGJhc2VkIG9uIHRoZSBwb3dlciBvZiBDU1MzIHRyYW5zZm9ybXMgYW5kIHRy
YW5zaXRpb25zIGluIG1vZGVybiBicm93c2VycyBhbmQgaW5zcGlyZWQgYnkg
dGhlIGlkZWEgYmVoaW5kIHByZXppLmNvbS4KKiBbYmVzcG9rZS5qc10oaHR0
cHM6Ly9naXRodWIuY29tL2Jlc3Bva2Vqcy9iZXNwb2tlKSAtIERJWSBQcmVz
ZW50YXRpb24gTWljcm8tRnJhbWV3b3JrCiogW1N0cnV0XShodHRwczovL2dp
dGh1Yi5jb20vdGFudGFtYW4vU3RydXQpIC0gU3RydXQgLSBBbiBJbXByZXNz
LmpzIGFuZCBCZXNwb2tlLmpzIFByZXNlbnRhdGlvbiBFZGl0b3IKKiBbUGhv
dG9Td2lwZV0oaHR0cHM6Ly9naXRodWIuY29tL2RpbXNlbWVub3YvUGhvdG9T
d2lwZSkgLSBKYXZhU2NyaXB0IGltYWdlIGdhbGxlcnkgZm9yIG1vYmlsZSBh
bmQgZGVza3RvcCwgbW9kdWxhciwgZnJhbWV3b3JrIGluZGVwZW5kZW50Lgoq
IFtqY1NsaWRlcl0oaHR0cHM6Ly9naXRodWIuY29tL0pvYW5DbGFyZXQvamNT
bGlkZXIpIC0gQSByZXNwb25zaXZlIHNsaWRlciBqUXVlcnkgcGx1Z2luIHdp
dGggQ1NTIGFuaW1hdGlvbnMuCiogW2Jhc2ljLWpxdWVyeS1zbGlkZXJdKGh0
dHBzOi8vZ2l0aHViLmNvbS9qY29iYi9iYXNpYy1qcXVlcnktc2xpZGVyKSAt
IFNpbXBsZSB0byB1c2UsIHNpbXBsZSB0byB0aGVtZSwgc2ltcGxlIHRvIGN1
c3RvbWlzZS4KKiBbalF1ZXJ5LmFkYXB0aXZlLXNsaWRlcl0oaHR0cHM6Ly9n
aXRodWIuY29tL2NyZWF0aXZlLXB1bmNoL2pRdWVyeS5hZGFwdGl2ZS1zbGlk
ZXIvKSAtIEEgalF1ZXJ5IHBsdWdpbiBmb3IgYSBzbGlkZXIgd2l0aCBhZGFw
dGl2ZSBjb2xvcmVkIGZpZ2NhcHRpb24gYW5kIG5hdmlnYXRpb24uCiogW3Ns
aWRyXShodHRwczovL2dpdGh1Yi5jb20vYmNoYW54L3NsaWRyKSAtIGFkZCBz
b21lIHNsaWRlIGVmZmVjdHMuCiogW0ZsaWNraXR5XShodHRwczovL2dpdGh1
Yi5jb20vbWV0YWZpenp5L2ZsaWNraXR5KSAtIFRvdWNoLCByZXNwb25zaXZl
LCBmbGlja2FibGUgZ2FsbGVyaWVzLgoqIFtHbGlkZS5qc10oaHR0cHM6Ly9n
aXRodWIuY29tL2plZHJ6ZWpjaGFsdWJlay9nbGlkZWpzKSAtIFJlc3BvbnNp
dmUgYW5kIHRvdWNoLWZyaWVuZGx5IGpRdWVyeSBzbGlkZXIuIEl0J3Mgc2lt
cGxlLCBsaWdodHdlaWdodCBhbmQgZmFzdC4KKiBbalF1ZXJ5LmFkYXB0aXZl
LXNsaWRlcl0oaHR0cHM6Ly9naXRodWIuY29tL2NyZWF0aXZlLXB1bmNoL2pR
dWVyeS5hZGFwdGl2ZS1zbGlkZXIvKSAtIEEgalF1ZXJ5IHBsdWdpbiBmb3Ig
YSBzbGlkZXIgd2l0aCBhZGFwdGl2ZSBjb2xvcmVkIGZpZ2NhcHRpb24gYW5k
IG5hdmlnYXRpb24uCiogW0VtYmxhIENhcm91c2VsXShodHRwczovL2dpdGh1
Yi5jb20vZGF2aWRjZXRpbmtheWEvZW1ibGEtY2Fyb3VzZWwpIC0gQW4gZXh0
ZW5zaWJsZSBsb3cgbGV2ZWwgY2Fyb3VzZWwgZm9yIHRoZSB3ZWIsIHdyaXR0
ZW4gaW4gVHlwZVNjcmlwdC4KCiMjIFJhbmdlIFNsaWRlcnMKCiogW0lvbi5S
YW5nZVNsaWRlcl0oaHR0cHM6Ly9naXRodWIuY29tL0lvbkRlbi9pb24ucmFu
Z2VTbGlkZXIpIC0gUG93ZXJmdWwgYW5kIGVhc2lseSBjdXN0b21pemFibGUg
cmFuZ2Ugc2xpZGVyIHdpdGggbWFueSBvcHRpb25zIGFuZCBza2luIHN1cHBv
cnQuCiogW2pRUmFuZ2VTbGlkZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9naHVz
c2UvalFSYW5nZVNsaWRlcikgLSBBIEphdmFTY3JpcHQgc2xpZGVyIHNlbGVj
dG9yIHRoYXQgc3VwcG9ydHMgZGF0ZXMuCiogW25vVWlTbGlkZXJdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9sZW9uZ2Vyc2VuL25vVWlTbGlkZXIpIC0gQSBsaWdo
dHdlaWdodCwgaGlnaGx5IGN1c3RvbWl6YWJsZSByYW5nZSBzbGlkZXIgd2l0
aG91dCBibG9hdC4KKiBbcmFuZ2VzbGlkZXIuanNdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9hbmRyZXJ1ZmZlcnQvcmFuZ2VzbGlkZXIuanMpIC0gSFRNTDUgaW5w
dXQgcmFuZ2Ugc2xpZGVyIGVsZW1lbnQgcG9seWZpbGwuCgoKIyMgRm9ybSBX
aWRnZXRzCgojIyMgSW5wdXQKCiogW3R5cGVhaGVhZC5qc10oaHR0cHM6Ly9n
aXRodWIuY29tL3R3aXR0ZXIvdHlwZWFoZWFkLmpzKSAtIEEgZmFzdCBhbmQg
ZnVsbHktZmVhdHVyZWQgYXV0b2NvbXBsZXRlIGxpYnJhcnkuCiogW3RhZy1p
dF0oaHR0cHM6Ly9naXRodWIuY29tL2FlaGxrZS90YWctaXQpIC0gQSBqUXVl
cnkgVUkgcGx1Z2luIHRvIGhhbmRsZSBtdWx0aS10YWcgZmllbGRzIGFzIHdl
bGwgYXMgdGFnIHN1Z2dlc3Rpb25zL2F1dG9jb21wbGV0ZS4KKiBbQXQuanNd
KGh0dHBzOi8vZ2l0aHViLmNvbS9pY2hvcmQvQXQuanMpIC0gQWRkIEdpdEh1
YiBsaWtlIG1lbnRpb25zIGF1dG9jb21wbGV0ZSB0byB5b3VyIGFwcGxpY2F0
aW9uLgoqIFtQbGFjZWhvbGRlcnMuanNdKGh0dHBzOi8vZ2l0aHViLmNvbS9q
YW1lc2FsbGFyZGljZS9QbGFjZWhvbGRlcnMuanMpIC0gQSBKYXZhU2NyaXB0
IHBvbHlmaWxsIGZvciB0aGUgSFRNTDUgcGxhY2Vob2xkZXIgYXR0cmlidXRl
LgoqIFtmYW5jeUlucHV0XShodHRwczovL2dpdGh1Yi5jb20veWFpckVPL2Zh
bmN5SW5wdXQpIC0gTWFrZXMgdHlwaW5nIGluIGlucHV0IGZpZWxkcyBmdW4g
d2l0aCBDU1MzIGVmZmVjdHMuCiogW2pRdWVyeS1UYWdzLUlucHV0XShodHRw
czovL2dpdGh1Yi5jb20veG94Y28valF1ZXJ5LVRhZ3MtSW5wdXQpIC0gTWFn
aWNhbGx5IGNvbnZlcnQgYSBzaW1wbGUgdGV4dCBpbnB1dCBpbnRvIGEgY29v
bCB0YWcgbGlzdCB3aXRoIHRoaXMgalF1ZXJ5IHBsdWdpbi4KKiBbdmFuaWxs
YS1tYXNrZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9CYW5rRmFjaWwvdmFuaWxs
YS1tYXNrZXIpIC0gQSBwdXJlIEphdmFTY3JpcHQgbWFzayBpbnB1dC4KKiBb
SW9uLkNoZWNrUmFkaW9dKGh0dHBzOi8vZ2l0aHViLmNvbS9Jb25EZW4vaW9u
LmNoZWNrUmFkaW8pIC0galF1ZXJ5IHBsdWdpbiBmb3Igc3R5bGluZyBjaGVj
a2JveGVzIGFuZCByYWRpby1idXR0b25zLiBXaXRoIHNraW4gc3VwcG9ydC4K
KiBbYXdlc29tcGxldGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9MZWFWZXJvdS9h
d2Vzb21wbGV0ZSkgLSBVbHRyYSBsaWdodHdlaWdodCwgdXNhYmxlLCBiZWF1
dGlmdWwgYXV0b2NvbXBsZXRlIHdpdGggemVybyBkZXBlbmRlbmNpZXMuIC0g
aHR0cDovL2xlYXZlcm91LmdpdGh1Yi5pby9hd2Vzb21wbGV0ZQoKIyMjIENh
bGVuZGFyCgoqIFtwaWNrYWRhdGUuanNdKGh0dHBzOi8vZ2l0aHViLmNvbS9h
bXN1bC9waWNrYWRhdGUuanMpIC0gVGhlIG1vYmlsZS1mcmllbmRseSwgcmVz
cG9uc2l2ZSwgYW5kIGxpZ2h0d2VpZ2h0IGpRdWVyeSBkYXRlICYgdGltZSBp
bnB1dCBwaWNrZXIuCiogW2Jvb3RzdHJhcC1kYXRlcGlja2VyXShodHRwczov
L2dpdGh1Yi5jb20vZXRlcm5pY29kZS9ib290c3RyYXAtZGF0ZXBpY2tlcikg
LSBBIGRhdGVwaWNrZXIgZm9yIEB0d2l0dGVyIGJvb3RzdHJhcCBmb3JrZWQg
ZnJvbSBTdGVmYW4gUGV0cmUncyAob2YgZXllY29uLnJvKSwgaW1wcm92ZW1l
bnRzIGJ5IEBldGVybmljb2RlLgoqIFtQaWthZGF5XShodHRwczovL2dpdGh1
Yi5jb20vZGJ1c2hlbGwvUGlrYWRheSkgLSBBIHJlZnJlc2hpbmcgSmF2YVNj
cmlwdCBEYXRlcGlja2VyIOKAlCBsaWdodHdlaWdodCwgbm8gZGVwZW5kZW5j
aWVzLCBtb2R1bGFyIENTUy4KKiBbZnVsbGNhbGVuZGFyXShodHRwczovL2dp
dGh1Yi5jb20vZnVsbGNhbGVuZGFyL2Z1bGxjYWxlbmRhcikgLSBGdWxsLXNp
emVkIGRyYWcgJiBkcm9wIGV2ZW50IGNhbGVuZGFyIChqUXVlcnkgcGx1Z2lu
KS4KKiBbcm9tZV0oaHR0cHM6Ly9naXRodWIuY29tL2JldmFjcXVhL3JvbWUp
IC0gQSBjdXN0b21pemFibGUgZGF0ZSAoYW5kIHRpbWUpIHBpY2tlci4gRGVw
ZW5kZW5jeSBmcmVlLCBvcHQtaW4gVUkuCiogW2RhdGVkcm9wcGVyXShodHRw
czovL2dpdGh1Yi5jb20vZmVsaWNlZ2F0dHVzby9kYXRlZHJvcHBlcikgLSBk
YXRlZHJvcHBlciBpcyBhIGpRdWVyeSBwbHVnaW4gdGhhdCBwcm92aWRlcyBh
IHF1aWNrIGFuZCBlYXN5IHdheSB0byBtYW5hZ2UgZGF0ZXMgZm9yIGlucHV0
IGZpZWxkcy4KCgojIyMgU2VsZWN0CgoqIFtzZWxlY3RpemUuanNdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9icmlhbnJlYXZpcy9zZWxlY3RpemUuanMpIC0gU2Vs
ZWN0aXplIGlzIHRoZSBoeWJyaWQgb2YgYSB0ZXh0Ym94IGFuZCBzZWxlY3Qg
Ym94LiBJdCdzIGpRdWVyeSBiYXNlZCBhbmQgaXQgaGFzIGF1dG9jb21wbGV0
ZSBhbmQgbmF0aXZlLWZlZWxpbmcga2V5Ym9hcmQgbmF2aWdhdGlvbjsgdXNl
ZnVsIGZvciB0YWdnaW5nLCBjb250YWN0IGxpc3RzLCBldGMuCiogW3NlbGVj
dDJdKGh0dHBzOi8vZ2l0aHViLmNvbS9zZWxlY3QyL3NlbGVjdDIpIC0gYSBq
UXVlcnkgYmFzZWQgcmVwbGFjZW1lbnQgZm9yIHNlbGVjdCBib3hlcy4gSXQg
c3VwcG9ydHMgc2VhcmNoaW5nLCByZW1vdGUgZGF0YSBzZXRzLCBhbmQgaW5m
aW5pdGUgc2Nyb2xsaW5nIG9mIHJlc3VsdHMuCiogW2Nob3Nlbl0oaHR0cHM6
Ly9naXRodWIuY29tL2hhcnZlc3RocS9jaG9zZW4pIC0gQSBsaWJyYXJ5IGZv
ciBtYWtpbmcgbG9uZywgdW53aWVsZHkgc2VsZWN0IGJveGVzIG1vcmUgZnJp
ZW5kbHkuCgojIyMgRmlsZSBVcGxvYWRlcgoKKiBbalF1ZXJ5LUZpbGUtVXBs
b2FkXShodHRwczovL2dpdGh1Yi5jb20vYmx1ZWltcC9qUXVlcnktRmlsZS1V
cGxvYWQpIC0gRmlsZSBVcGxvYWQgd2lkZ2V0IHdpdGggbXVsdGlwbGUgZmls
ZSBzZWxlY3Rpb24sIGRyYWcmYW1wO2Ryb3Agc3VwcG9ydCwgcHJvZ3Jlc3Mg
YmFyLCB2YWxpZGF0aW9uIGFuZCBwcmV2aWV3IGltYWdlcywgYXVkaW8gYW5k
IHZpZGVvIGZvciBqUXVlcnkuCiogW2Ryb3B6b25lXShodHRwczovL2dpdGh1
Yi5jb20vZW55by9kcm9wem9uZSkgLSBEcm9wem9uZSBpcyBhbiBlYXN5IHRv
IHVzZSBkcmFnJ24nZHJvcCBsaWJyYXJ5LiBJdCBzdXBwb3J0cyBpbWFnZSBw
cmV2aWV3cyBhbmQgc2hvd3MgbmljZSBwcm9ncmVzcyBiYXJzLgoqIFtmbG93
LmpzXShodHRwczovL2dpdGh1Yi5jb20vZmxvd2pzL2Zsb3cuanMpIC0gQSBK
YXZhU2NyaXB0IGxpYnJhcnkgcHJvdmlkaW5nIG11bHRpcGxlIHNpbXVsdGFu
ZW91cywgc3RhYmxlLCBmYXVsdC10b2xlcmFudCBhbmQgcmVzdW1hYmxlL3Jl
c3RhcnRhYmxlIGZpbGUgdXBsb2FkcyB2aWEgdGhlIEhUTUw1IEZpbGUgQVBJ
LgoqIFtmaW5lLXVwbG9hZGVyXShodHRwczovL2dpdGh1Yi5jb20vRmluZVVw
bG9hZGVyL2ZpbmUtdXBsb2FkZXIpIC0gTXVsdGlwbGUgZmlsZSB1cGxvYWQg
cGx1Z2luIHdpdGggcHJvZ3Jlc3MtYmFyLCBkcmFnLWFuZC1kcm9wLCBkaXJl
Y3QtdG8tUzMgdXBsb2FkaW5nLgoqIFtGaWxlQVBJXShodHRwczovL2dpdGh1
Yi5jb20vbWFpbHJ1L0ZpbGVBUEkpIC0gQSBzZXQgb2YgSmF2YVNjcmlwdCB0
b29scyBmb3Igd29ya2luZyB3aXRoIGZpbGVzLiBNdWx0aXVwbG9hZCwgZHJh
ZyduJ2Ryb3AgYW5kIGNodW5rZWQgZmlsZSB1cGxvYWQuIEltYWdlczogY3Jv
cCwgcmVzaXplIGFuZCBhdXRvIG9yaWVudGF0aW9uIGJ5IEVYSUYuCiogW3Bs
dXBsb2FkXShodHRwczovL2dpdGh1Yi5jb20vbW94aWVjb2RlL3BsdXBsb2Fk
KSAtIEEgSmF2YVNjcmlwdCBBUEkgZm9yIGRlYWxpbmcgd2l0aCBmaWxlIHVw
bG9hZHMgaXQgc3VwcG9ydHMgZmVhdHVyZXMgbGlrZSBtdWx0aXBsZSBmaWxl
IHNlbGVjdGlvbiwgZmlsZSB0eXBlIGZpbHRlcmluZywgcmVxdWVzdCBjaHVu
a2luZywgY2xpZW50IHNpZGUgaW1hZ2Ugc2NhbGluZyBhbmQgaXQgdXNlcyBk
aWZmZXJlbnQgcnVudGltZXMgdG8gYWNoaWV2ZSB0aGlzIHN1Y2ggYXMgSFRN
TCA1LCBTaWx2ZXJsaWdodCBhbmQgRmxhc2guCgojIyMgT3RoZXIKCiogW2Zv
cm1dKGh0dHBzOi8vZ2l0aHViLmNvbS9tYWxzdXAvZm9ybSkgLSBqUXVlcnkg
Rm9ybSBQbHVnaW4uCiogW0dhcmxpYy5qc10oaHR0cHM6Ly9naXRodWIuY29t
L2d1aWxsYXVtZXBvdGllci9HYXJsaWMuanMpIC0gQXV0b21hdGljYWxseSBw
ZXJzaXN0IHlvdXIgZm9ybXMnIHRleHQgYW5kIHNlbGVjdCBmaWVsZCB2YWx1
ZXMgbG9jYWxseSwgdW50aWwgdGhlIGZvcm0gaXMgc3VibWl0dGVkLgoqIFtD
b3VudGFibGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9SYWRMaWtlV2hvYS9Db3Vu
dGFibGUpIC0gQSBKYXZhU2NyaXB0IGZ1bmN0aW9uIHRvIGFkZCBsaXZlIHBh
cmFncmFwaC0sIHdvcmQtIGFuZCBjaGFyYWN0ZXItY291bnRpbmcgdG8gYW4g
SFRNTCBlbGVtZW50LgoqIFtjYXJkXShodHRwczovL2dpdGh1Yi5jb20vamVz
c2Vwb2xsYWsvY2FyZCkgLSBNYWtlIHlvdXIgY3JlZGl0IGNhcmQgZm9ybSBi
ZXR0ZXIgaW4gb25lIGxpbmUgb2YgY29kZS4KKiBbc3RyZXRjaHldKGh0dHBz
Oi8vZ2l0aHViLmNvbS9MZWFWZXJvdS9zdHJldGNoeSkgLSBGb3JtIGVsZW1l
bnQgYXV0b3NpemluZywgdGhlIHdheSBpdCBzaG91bGQgYmUuCiogW2FuYWx5
dGljc10oaHR0cHM6Ly9naXRodWIuY29tL2Rhdmlkd2VsbHMvYW5hbHl0aWNz
KSAtIEEgbGlnaHR3ZWlnaHQsIGV4dGVuZGFibGUgYW5hbHl0aWNzIGxpYnJh
cnkgZGVzaWduZWQgdG8gd29yayB3aXRoIGFueSB0aGlyZC1wYXJ0eSBhbmFs
eXRpY3MgcHJvdmlkZXIgdG8gdHJhY2sgcGFnZSB2aWV3cywgY3VzdG9tIGV2
ZW50cywgJiBpZGVudGlmeSB1c2Vycy4KCgojIyBUaXBzCgoqIFt0aXBzeV0o
aHR0cHM6Ly9naXRodWIuY29tL2phejMwMy90aXBzeSkgLSBGYWNlYm9vay1z
dHlsZSB0b29sdGlwcyBwbHVnaW4gZm9yIGpRdWVyeS4KKiBbb3BlbnRpcF0o
aHR0cHM6Ly9naXRodWIuY29tL2VueW8vb3BlbnRpcCkgLSBBbiBvcGVuIHNv
dXJjZSBKYXZhU2NyaXB0IHRvb2x0aXAgYmFzZWQgb24gdGhlIHByb3RvdHlw
ZSBmcmFtZXdvcmsuCiogW3FUaXAyXShodHRwczovL2dpdGh1Yi5jb20vcVRp
cDIvcVRpcDIpIC0gUHJldHR5IHBvd2VyZnVsIHRvb2x0aXBzLgoqIFt0b29s
dGlwc3Rlcl0oaHR0cHM6Ly9naXRodWIuY29tL2lhbWNlZWdlL3Rvb2x0aXBz
dGVyKSAtIEEgalF1ZXJ5IHRvb2x0aXAgcGx1Z2luLgoqIFtzaW1wdGlwXSho
dHRwczovL2dpdGh1Yi5jb20vYXJhc2htYW50ZWdoaS9zaW1wdGlwKSAtIEEg
c2ltcGxlIENTUyB0b29sdGlwIG1hZGUgd2l0aCBTYXNzLgoqIFtqcXVlcnkt
cG9wdXAtb3ZlcmxheV0oaHR0cHM6Ly9naXRodWIuY29tL3Zhc3QtZW5naW5l
ZXJpbmcvanF1ZXJ5LXBvcHVwLW92ZXJsYXkpIC0galF1ZXJ5IHBsdWdpbiBm
b3IgcmVzcG9uc2l2ZSBhbmQgYWNjZXNzaWJsZSBtb2RhbCB3aW5kb3dzIGFu
ZCB0b29sdGlwcy4KKiBbdG9vbGJhcl0oaHR0cHM6Ly9naXRodWIuY29tL3Bh
dWxraW56ZXR0L3Rvb2xiYXIpIC0gQSB0b29sdGlwIHN0eWxlIHRvb2xiYXIg
alF1ZXJ5IHBsdWdpbgoqIFtoaW50LmNzc10oaHR0cHM6Ly9naXRodWIuY29t
L2NoaW5jaGFuZy9oaW50LmNzcykgLSBBIHRvb2x0aXAgbGlicmFyeSBpbiBD
U1MgZm9yIHlvdXIgbG92ZWx5IHdlYnNpdGVzLgoKIyMgTW9kYWxzIGFuZCBQ
b3B1cHMKCiogW01hZ25pZmljLVBvcHVwXShodHRwczovL2dpdGh1Yi5jb20v
ZGltc2VtZW5vdi9NYWduaWZpYy1Qb3B1cCkgLSBMaWdodCBhbmQgcmVzcG9u
c2l2ZSBsaWdodGJveCBzY3JpcHQgd2l0aCBmb2N1cyBvbiBwZXJmb3JtYW5j
ZS4KKiBbanF1ZXJ5LXBvcGJveF0oaHR0cHM6Ly9naXRodWIuY29tL2dyaXN0
bWlsbC9qcXVlcnktcG9wYm94KSAtIGpRdWVyeSBQb3BCb3ggVUkgRWxlbWVu
dC4KKiBbanF1ZXJ5LmF2Z3J1bmQuanNdKGh0dHBzOi8vZ2l0aHViLmNvbS92
b3JvbmlhbnNraS9qcXVlcnkuYXZncnVuZC5qcykgLSBBIGpRdWVyeSBwbHVn
aW4gd2l0aCBuZXcgbW9kYWwgY29uY2VwdCBmb3IgcG9wdXBzLgoqIFt2ZXhd
KGh0dHBzOi8vZ2l0aHViLmNvbS9IdWJTcG90L3ZleCkgLSBBIG1vZGVybiBk
aWFsb2cgbGlicmFyeSB3aGljaCBpcyBoaWdobHkgY29uZmlndXJhYmxlIGFu
ZCBlYXN5IHRvIHN0eWxlLgoqIFtib290c3RyYXAtbW9kYWxdKGh0dHBzOi8v
Z2l0aHViLmNvbS9qc2Noci9ib290c3RyYXAtbW9kYWwpIC0gRXh0ZW5kcyB0
aGUgZGVmYXVsdCBCb290c3RyYXAgTW9kYWwgY2xhc3MuIFJlc3BvbnNpdmUs
IHN0YWNrYWJsZSwgYWpheCBhbmQgbW9yZS4KKiBbY3NzLW1vZGFsXShodHRw
czovL2dpdGh1Yi5jb20vZHJ1YmxpYy9jc3MtbW9kYWwpIC0gQSBtb2RhbCBi
dWlsdCBvdXQgb2YgcHVyZSBDU1MuCiogW2pxdWVyeS1wb3B1cC1vdmVybGF5
XShodHRwczovL2dpdGh1Yi5jb20vdmFzdC1lbmdpbmVlcmluZy9qcXVlcnkt
cG9wdXAtb3ZlcmxheSkgLSBqUXVlcnkgcGx1Z2luIGZvciByZXNwb25zaXZl
IGFuZCBhY2Nlc3NpYmxlIG1vZGFsIHdpbmRvd3MgYW5kIHRvb2x0aXBzLgoq
IFtTd2VldEFsZXJ0XShodHRwczovL2dpdGh1Yi5jb20vdDR0NS9zd2VldGFs
ZXJ0KSAtIEFuIGF3ZXNvbWUgcmVwbGFjZW1lbnQgZm9yIEphdmFTY3JpcHQn
cyBhbGVydC4KKiBbYmFndWV0dGVCb3guanNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9mZWltb3NpL2JhZ3VldHRlQm94LmpzKSAtIFNpbXBsZSBhbmQgZWFzeSB0
byB1c2UgbGlnaHRib3ggc2NyaXB0IHdyaXR0ZW4gaW4gcHVyZSBKYXZhU2Ny
aXB0LgoqIFtjb2xvcmJveF0oaHR0cHM6Ly9naXRodWIuY29tL2phY2ttb29y
ZS9jb2xvcmJveCkgLSBBIGxpZ2h0LXdlaWdodCwgY3VzdG9taXphYmxlIGxp
Z2h0Ym94IHBsdWdpbiBmb3IgalF1ZXJ5LgoqIFtmYW5jeUJveF0oaHR0cHM6
Ly9naXRodWIuY29tL2ZhbmN5YXBwcy9mYW5jeUJveCkgLSBBIHRvb2wgdGhh
dCBvZmZlcnMgYSBuaWNlIGFuZCBlbGVnYW50IHdheSB0byBhZGQgem9vbWlu
ZyBmdW5jdGlvbmFsaXR5IGZvciBpbWFnZXMsIGh0bWwgY29udGVudCBhbmQg
bXVsdGktbWVkaWEgb24geW91ciB3ZWJwYWdlcy4KKiBbc3dpcGVib3hdKGh0
dHBzOi8vZ2l0aHViLmNvbS9icnV0YWxkZXNpZ24vc3dpcGVib3gpIC0gQSB0
b3VjaGFibGUgalF1ZXJ5IGxpZ2h0Ym94CiogW2pCb3hdKGh0dHBzOi8vZ2l0
aHViLmNvbS9TdGVwaGFuV2FnbmVyL2pCb3gpIC0gakJveCBpcyBhIHBvd2Vy
ZnVsIGFuZCBmbGV4aWJsZSBqUXVlcnkgcGx1Z2luLCB0YWtpbmcgY2FyZSBv
ZiBhbGwgeW91ciBwb3B1cCB3aW5kb3dzLCB0b29sdGlwcywgbm90aWNlcyBh
bmQgbW9yZS4KCiMjIFNjcm9sbAoKKiBbc2Nyb2xsTW9uaXRvcl0oaHR0cHM6
Ly9naXRodWIuY29tL3N0dXRyZWsvc2Nyb2xsTW9uaXRvcikgLSBBIHNpbXBs
ZSBhbmQgZmFzdCBBUEkgdG8gbW9uaXRvciBlbGVtZW50cyBhcyB5b3Ugc2Ny
b2xsLgoqIFtoZWFkcm9vbV0oaHR0cHM6Ly9naXRodWIuY29tL1dpY2t5Tmls
bGlhbXMvaGVhZHJvb20uanMpIC0gR2l2ZSB5b3VyIHBhZ2VzIHNvbWUgaGVh
ZHJvb20uIEhpZGUgeW91ciBoZWFkZXIgdW50aWwgeW91IG5lZWQgaXQuCiog
W29uZXBhZ2Utc2Nyb2xsXShodHRwczovL2dpdGh1Yi5jb20vcGVhY2hhbmFu
ci9vbmVwYWdlLXNjcm9sbCkgLSBDcmVhdGUgYW4gQXBwbGUtbGlrZSBvbmUg
cGFnZSBzY3JvbGxlciB3ZWJzaXRlIChpUGhvbmUgNVMgd2Vic2l0ZSkgd2l0
aCBPbmUgUGFnZSBTY3JvbGwgcGx1Z2luLgoqIFtpc2Nyb2xsXShodHRwczov
L2dpdGh1Yi5jb20vY3ViaXEvaXNjcm9sbCkgLSBpU2Nyb2xsIGlzIGEgaGln
aCBwZXJmb3JtYW5jZSwgc21hbGwgZm9vdHByaW50LCBkZXBlbmRlbmN5IGZy
ZWUsIG11bHRpLXBsYXRmb3JtIEphdmFTY3JpcHQgc2Nyb2xsZXIuCiogW3Nr
cm9sbHJdKGh0dHBzOi8vZ2l0aHViLmNvbS9Qcmluemhvcm4vc2tyb2xscikg
LSBTdGFuZC1hbG9uZSBwYXJhbGxheCBzY3JvbGxpbmcgbGlicmFyeSBmb3Ig
bW9iaWxlIChBbmRyb2lkICsgaU9TKSBhbmQgZGVza3RvcC4gTm8galF1ZXJ5
LgoqIFtwYXJhbGxheF0oaHR0cHM6Ly9naXRodWIuY29tL3dhZ2VyZmllbGQv
cGFyYWxsYXgpIC0gUGFyYWxsYXggRW5naW5lIHRoYXQgcmVhY3RzIHRvIHRo
ZSBvcmllbnRhdGlvbiBvZiBhIHNtYXJ0IGRldmljZS4KKiBbc3RlbGxhci5q
c10oaHR0cHM6Ly9naXRodWIuY29tL21hcmtkYWxnbGVpc2gvc3RlbGxhci5q
cykgLSBQYXJhbGxheCBzY3JvbGxpbmcgbWFkZSBlYXN5LgoqIFtwbGF4XSho
dHRwczovL2dpdGh1Yi5jb20vY2FtZXJvbm1jZWZlZS9wbGF4KSAtIGpRdWVy
eSBwb3dlcmVkIHBhcmFsbGF4aW5nLgoqIFtqcGFyYWxsYXhdKGh0dHBzOi8v
Z2l0aHViLmNvbS9zdGVwaGJhbmQvanBhcmFsbGF4KSAtIGpRdWVyeSBwbHVn
aW4gZm9yIGNyZWF0aW5nIGludGVyYWN0aXZlIHBhcmFsbGF4IGVmZmVjdC4K
KiBbZnVsbFBhZ2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9hbHZhcm90cmlnby9m
dWxsUGFnZS5qcykgLSBBIHNpbXBsZSBhbmQgZWFzeSB0byB1c2UgcGx1Z2lu
IHRvIGNyZWF0ZSBmdWxsc2NyZWVuIHNjcm9sbGluZyB3ZWJzaXRlcyAoYWxz
byBrbm93biBhcyBzaW5nbGUgcGFnZSB3ZWJzaXRlcykuCiogW1Njcm9sbE1l
bnVdKGh0dHBzOi8vZ2l0aHViLmNvbS9zLXlhZGF2L1Njcm9sbE1lbnUpIC0g
QSBuZXcgaW50ZXJmYWNlIHRvIHJlcGxhY2Ugb2xkIGJvcmluZyBzY3JvbGxi
YXIuCiogW0NsdXN0ZXJpemUuanNdKGh0dHBzOi8vZ2l0aHViLmNvbS9OZVhU
cy9DbHVzdGVyaXplLmpzKSAtIFRpbnkgdmFuaWxsYSBKUyBwbHVnaW4gdG8g
ZGlzcGxheSBsYXJnZSBkYXRhIHNldHMgZWFzaWx5LgoqIFtzaW1wbGVQYXJh
bGxheF0oaHR0cHM6Ly9naXRodWIuY29tL2dlb3NpZ25vL3NpbXBsZVBhcmFs
bGF4KSAtIFNpbXBsZSBhbmQgdGlueSBKYXZhU2NyaXB0IGxpYnJhcnkgdG8g
YWRkIHBhcmFsbGF4IGFuaW1hdGlvbnMgb24gYW55IGltYWdlcwoKCiMjIE1l
bnUKCiogW2pRdWVyeS1tZW51LWFpbV0oaHR0cHM6Ly9naXRodWIuY29tL2th
bWVucy9qUXVlcnktbWVudS1haW0pIC0galF1ZXJ5IHBsdWdpbiB0byBmaXJl
IGV2ZW50cyB3aGVuIHVzZXIncyBjdXJzb3IgYWltcyBhdCBwYXJ0aWN1bGFy
IGRyb3Bkb3duIG1lbnUgaXRlbXMuIEZvciBtYWtpbmcgcmVzcG9uc2l2ZSBt
ZWdhIGRyb3Bkb3ducyBsaWtlIEFtYXpvbidzLgoqIFtqUXVlcnkgY29udGV4
dE1lbnVdKGh0dHBzOi8vZ2l0aHViLmNvbS9zd2lzbmwvalF1ZXJ5LWNvbnRl
eHRNZW51KSAtIGNvbnRleHRNZW51IG1hbmFnZXIuCiogW1NsaWRlb3V0XSho
dHRwczovL2dpdGh1Yi5jb20vbWFuZ28vc2xpZGVvdXQpIC0gQSByZXNwb25z
aXZlIHRvdWNoIHNsaWRlb3V0IG5hdmlnYXRpb24gbWVudSBmb3IgbW9iaWxl
IHdlYiBhcHBzLgoqIFtTbGlkZSBhbmQgc3dpcGVdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9Kb2FuQ2xhcmV0L3NsaWRlLWFuZC1zd2lwZS1tZW51KSAtIEEgc2xp
ZGluZyBzd2lwZSBtZW51IHRoYXQgd29ya3Mgd2l0aCB0b3VjaFN3aXBlIGxp
YnJhcnkuCgoKIyMgVGFibGUvR3JpZAoKKiBbalRhYmxlXShodHRwczovL2dp
dGh1Yi5jb20vaGlrYWxrYW4vanRhYmxlKSAtIEEgalF1ZXJ5IHBsdWdpbiB0
byBjcmVhdGUgQUpBWCBiYXNlZCBDUlVEIHRhYmxlcy4KKiBbRGF0YVRhYmxl
c10oaHR0cHM6Ly93d3cuZGF0YXRhYmxlcy5uZXQvKSAtIChqUXVlcnkgcGx1
Zy1pbikgSXQgaXMgYSBoaWdobHkgZmxleGlibGUgdG9vbCwgYmFzZWQgdXBv
biB0aGUgZm91bmRhdGlvbnMgb2YgcHJvZ3Jlc3NpdmUgZW5oYW5jZW1lbnQs
IGFuZCB3aWxsIGFkZCBhZHZhbmNlZCBpbnRlcmFjdGlvbiBjb250cm9scyB0
byBhbnkgSFRNTCB0YWJsZS4KKiBbVGFidWxhdG9yXShodHRwOi8vb2xpZm9s
a2VyZC5naXRodWIuaW8vdGFidWxhdG9yLykgLSAoalF1ZXJ5IHBsdWctaW4p
IEFuIGV4dHJlbWVseSBmbGV4aWJsZSBsaWJyYXJ5IHRoYXQgY3JlYXRlIHRh
YmxlcyB3aXRoIGEgcmFuZ2Ugb2YgaW50ZXJhY3RpdmUgZmVhdHVyZXMgZnJv
bSBhbnkgSlNPTiBkYXRhIHNvdXJjZSBvciBleGlzdGluZyBIVE1MIHRhYmxl
LgoqIFtCb290c3RyYXAgVGFibGVdKGh0dHA6Ly9ib290c3RyYXAtdGFibGUu
d2VuemhpeGluLm5ldC5jbi8pIC0gQW4gRXh0ZW5zaW9uIHRvIHRoZSBwb3B1
bGFyIEJvb3RzdHJhcCBmcmFtZXdvcmsgZm9yIGNyZWF0aW5nIHRhYmxlcyB0
aGF0IGZpdCB0aGUgc3R5bGUgb2YgeW91ciBzaXRlIHdpdGggbm8gbmVlZCBm
b3IgYWRkaXRpb25hbCBtYXJrdXAuCiogW2Zsb2F0VGhlYWRdKGh0dHBzOi8v
Z2l0aHViLmNvbS9ta29yeWFrL2Zsb2F0VGhlYWQpIC0gKGpRdWVyeSBwbHVn
LWluKSBsb2NrIGFueSB0YWJsZSdzIGhlYWRlciB3aGlsZSBzY3JvbGxpbmcg
d2l0aGluIHRoZSBib2R5LiBXb3JrcyBvbiBhbnkgdGFibGUgYW5kIHJlcXVp
cmVzIG5vIGN1c3RvbSBodG1sIG9yIGNzcy4KKiBbTWFzb25yeV0oaHR0cDov
L21hc29ucnkuZGVzYW5kcm8uY29tLykgLSBBIGNhc2NhZGluZyBncmlkIGxh
eW91dCBsaWJyYXJ5LgoqIFtQYWNrZXJ5XShodHRwOi8vcGFja2VyeS5tZXRh
Zml6enkuY28vKSAtIEEgZ3JpZCBsYXlvdXQgbGlicmFyeSB0aGF0IHVzZXMg
YSBiaW4tcGFja2luZyBhbGdvcml0aG0uIFVzZWFibGUgZm9yIGRyYWdnYWJs
ZSBsYXlvdXRzLgoqIFtJc290b3BlXShodHRwOi8vaXNvdG9wZS5tZXRhZml6
enkuY28vKSAtIEEgZmlsdGVyYWJsZSwgc29ydGFibGUsIGdyaWQgbGF5b3V0
IGxpYnJhcnkuIENhbiBpbXBsZW1lbnQgTWFzb25yeSwgUGFja2VyeSwgYW5k
IG90aGVyIGxheW91dHMuCiogW2ZsZXhib3hncmlkXShodHRwczovL2dpdGh1
Yi5jb20va3Jpc3RvZmVyam9zZXBoL2ZsZXhib3hncmlkLykgLSBHcmlkIGJh
c2VkIG9uIENTUzMgZmxleGJveC4KCiMjIEZyYW1ld29ya3MKCiogW1NlbWFu
dGljIFVJXShodHRwOi8vc2VtYW50aWMtdWkuY29tLykgLSBVSSBLaXQgd2l0
aCBsb3RzIG9mIHRoZW1lcyBhbmQgZWxlbWVudHMuCiogW3cydWldKGh0dHA6
Ly93MnVpLmNvbS8pIC0gQSBzZXQgb2YgalF1ZXJ5IHBsdWdpbnMgZm9yIGZy
b250LWVuZCBkZXZlbG9wbWVudCBvZiBkYXRhLWRyaXZlbiB3ZWIgYXBwbGlj
YXRpb25zLgoqIFtmbHVpZGl0eV0oaHR0cHM6Ly9naXRodWIuY29tL21ybXJz
L2ZsdWlkaXR5KSAtIFRoZSB3b3JsZHMgc21hbGxlc3QgZnVsbHktcmVzcG9u
c2l2ZSBjc3MgZnJhbWV3b3JrLgoqIFtJbmtdKGh0dHBzOi8vZ2l0aHViLmNv
bS9zYXBvL0luaykgLSBBbiBIVE1MNS9DU1MzIGZyYW1ld29yayB1c2VkIGF0
IFNBUE8gZm9yIGZhc3QgYW5kIGVmZmljaWVudCB3ZWJzaXRlIGRlc2lnbiBh
bmQgcHJvdG90eXBpbmcuCgojIyBCb2lsZXJwbGF0ZXMKCiAqIFtodG1sNS1i
b2lsZXJwbGF0ZV0oaHR0cHM6Ly9naXRodWIuY29tL2g1YnAvaHRtbDUtYm9p
bGVycGxhdGUpIC0gQSBwcm9mZXNzaW9uYWwgZnJvbnQtZW5kIHRlbXBsYXRl
IGZvciBidWlsZGluZyBmYXN0LCByb2J1c3QsIGFuZCBhZGFwdGFibGUgd2Vi
IGFwcHMgb3Igc2l0ZXMuCiAqIFttb2JpbGUtYm9pbGVycGxhdGVdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9oNWJwL21vYmlsZS1ib2lsZXJwbGF0ZSkgLSBBIGZy
b250LWVuZCB0ZW1wbGF0ZSB0aGF0IGhlbHBzIHlvdSBidWlsZCBmYXN0LCBt
b2Rlcm4gbW9iaWxlIHdlYiBhcHBzLgogKiBbd2VicGxhdGVdKGh0dHBzOi8v
Z2l0aHViLmNvbS9jaHJpc2h1bWJvbGR0L3dlYnBsYXRlKSAtIEFuIGF3ZXNv
bWUgZnJvbnQtZW5kIGZyYW1ld29yayB0aGF0IGxldHMgeW91IHN0YXkgZm9j
dXNlZCBvbiBidWlsZGluZyB5b3VyIHNpdGUgb3IgYXBwIHdoaWxlIHJlbWFp
bmluZyByZWFsbHkgZWFzeSB0byB1c2UuCiAqIFtDZXJiZXJ1c10oaHR0cHM6
Ly9naXRodWIuY29tL1RlZEdvYXMvQ2VyYmVydXMpIC0gQSBmZXcgc2ltcGxl
LCBidXQgc29saWQgcGF0dGVybnMgZm9yIHJlc3BvbnNpdmUgSFRNTCBlbWFp
bHMuIEV2ZW4gaW4gT3V0bG9vay4KICogW2Z1bGwtcGFnZS1pbnRyby1hbmQt
bmF2aWdhdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL0NvZHlIb3VzZS9mdWxs
LXBhZ2UtaW50cm8tYW5kLW5hdmlnYXRpb24pIC0gQW4gaW50cm8gcGFnZSB3
aXRoIGEgZnVsbCB3aWR0aCBiYWNrZ3JvdW5kIGltYWdlLCBhIGJvbGQgYW5p
bWF0ZWQgbWVudSBhbmQgYW4gaU9TLWxpa2UgYmx1cnJlZCBlZmZlY3QgYmVo
aW5kIHRoZSBuYXZpZ2F0aW9uLgogKiBbRmx1aWQtU3F1YXJlc10oaHR0cHM6
Ly9naXRodWIuY29tL2Nyb3p5bnNraS9GbHVpZC1TcXVhcmVzKSAtIEEgZmx1
aWQgZ3JpZCBvZiBzcXVhcmUgdW5pdHMuCiAqIFtNb2JpbGUtRmlyc3QtUldE
XShodHRwczovL2dpdGh1Yi5jb20vYnJhZGZyb3N0L01vYmlsZS1GaXJzdC1S
V0QpIC0gQW4gZXhhbXBsZSBvZiBhIG1vYmlsZS1maXJzdCByZXNwb25zaXZl
IHdlYiBkZXNpZ24uCiAqIFt0aGlzLWlzLXJlc3BvbnNpdmVdKGh0dHBzOi8v
Z2l0aHViLmNvbS9icmFkZnJvc3QvdGhpcy1pcy1yZXNwb25zaXZlKSAtIFRo
aXMgSXMgUmVzcG9uc2l2ZS4KICogW25wbSBydW4tc2NyaXB0c10oaHR0cHM6
Ly9naXN0LmdpdGh1Yi5jb20vYWRkeW9zbWFuaS85ZjEwYzU1NWUzMmE4ZDA2
ZGRiMCkgVGFzayBhdXRvbWF0aW9uIHdpdGggTlBNIHJ1bi1zY3JpcHRzLgoK
IyMgR2VzdHVyZQoKKiBbaGFtbWVyLmpzXShodHRwczovL2dpdGh1Yi5jb20v
aGFtbWVyanMvaGFtbWVyLmpzKSAtIEEgSmF2YVNjcmlwdCBsaWJyYXJ5IGZv
ciBtdWx0aS10b3VjaCBnZXN0dXJlcy4KKiBbdG91Y2hlbXVsYXRvcl0oaHR0
cHM6Ly9naXRodWIuY29tL2hhbW1lcmpzL3RvdWNoZW11bGF0b3IpIC0gRW11
bGF0ZSB0b3VjaCBpbnB1dCBvbiB5b3VyIGRlc2t0b3AuCiogW0RyYWd1bGFd
KGh0dHBzOi8vZ2l0aHViLmNvbS9iZXZhY3F1YS9kcmFndWxhLykgLSBEcmFn
IGFuZCBkcm9wIHNvIHNpbXBsZSBpdCBodXJ0cy4KCgojIyBNYXBzCgoqIFtM
ZWFmbGV0XShodHRwczovL2dpdGh1Yi5jb20vTGVhZmxldC9MZWFmbGV0KSAt
IEphdmFTY3JpcHQgbGlicmFyeSBmb3IgbW9iaWxlLWZyaWVuZGx5IGludGVy
YWN0aXZlIG1hcHMuCiogW0Nlc2l1bV0oaHR0cHM6Ly9naXRodWIuY29tL0Fu
YWx5dGljYWxHcmFwaGljc0luYy9jZXNpdW0pIC0gT3BlbiBTb3VyY2UgV2Vi
R0wgdmlydHVhbCBnbG9iZSBhbmQgbWFwIGVuZ2luZS4KKiBbZ21hcHNdKGh0
dHBzOi8vZ2l0aHViLmNvbS9IUE5lby9nbWFwcykgLSBUaGUgZWFzaWVzdCB3
YXkgdG8gdXNlIEdvb2dsZSBNYXBzLgoqIFtwb2x5bWFwc10oaHR0cHM6Ly9n
aXRodWIuY29tL3NpbXBsZWdlby9wb2x5bWFwcykgLSBBIGZyZWUgSmF2YVNj
cmlwdCBsaWJyYXJ5IGZvciBtYWtpbmcgZHluYW1pYywgaW50ZXJhY3RpdmUg
bWFwcyBpbiBtb2Rlcm4gd2ViIGJyb3dzZXJzLgoqIFtrYXJ0b2dyYXBoLmpz
XShodHRwczovL2dpdGh1Yi5jb20va2FydG9ncmFwaC9rYXJ0b2dyYXBoLmpz
KSAtIE9wZW4gc291cmNlIEphdmFTY3JpcHQgcmVuZGVyZXIgZm9yIEthcnRv
Z3JhcGggU1ZHIG1hcHMuCiogW21hcGJveC5qc10oaHR0cHM6Ly9naXRodWIu
Y29tL21hcGJveC9tYXBib3guanMpIC0gTWFwYm94IEphdmFTY3JpcHQgQVBJ
LCBhIExlYWZsZXQgUGx1Z2luLgoqIFtqcXZtYXBdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9tYW5pZmVzdGludGVyYWN0aXZlL2pxdm1hcCkgLSBqUXVlcnkgVmVj
dG9yIE1hcCBMaWJyYXJ5LgoqIFtPcGVuTGF5ZXJzM10oaHR0cDovL29wZW5s
YXllcnMub3JnLykgLSBBIGhpZ2gtcGVyZm9ybWFuY2UsIGZlYXR1cmUtcGFj
a2VkIGxpYnJhcnkgZm9yIGFsbCB5b3VyIG1hcHBpbmcgbmVlZHMuCgojIyBW
aWRlby9BdWRpbwoKICogW3ByZXR0eWVtYmVkLmpzXShodHRwczovL2dpdGh1
Yi5jb20vbWlrZS16YXJhbmRvbmEvcHJldHR5ZW1iZWQuanMpIC0gUHJldHRp
ZXIgZW1iZWRzIGZvciB5b3VyIFlvdVR1YmVzIC0gd2l0aCBuaWNlIG9wdGlv
bnMgbGlrZSBoaWdoLXJlcyBwcmV2aWV3IGltYWdlcywgYWR2YW5jZWQgY3Vz
dG9taXphdGlvbiBvZiBlbWJlZCBvcHRpb25zLCBhbmQgb3B0aW9uYWwgRml0
VmlkcyBzdXBwb3J0LgogKiBbaHRtbDVtZWRpYV0oaHR0cHM6Ly9naXRodWIu
Y29tL2V0aWFuZW4vaHRtbDVtZWRpYSkgLSBFbmFibGVzIDx2aWRlbz4gYW5k
IDxhdWRpbz4gdGFncyBpbiBhbGwgbWFqb3IgYnJvd3NlcnMuIDxodHRwczov
L2h0bWw1bWVkaWEuaW5mby8+CiAqIFtQbGF5LWVtIEpTXShodHRwczovL2dp
dGh1Yi5jb20vYWRyaWVuam9seS9wbGF5ZW1qcykgLSBQbGF5J2VtIGlzIGEg
SmF2YVNjcmlwdCBjb21wb25lbnQgdGhhdCBtYW5hZ2VzIGEgbXVzaWMvdmlk
ZW8gdHJhY2sgcXVldWUgYW5kIHBsYXlzIGEgc2VxdWVuY2Ugb2Ygc29uZ3Mg
YnkgZW1iZWRkaW5nIHNldmVyYWwgcGxheWVycyBpbiBhIEhUTUwgRElWIGlu
Y2x1ZGluZyBZb3V0dWJlLCBTb3VuZGNsb3VkIGFuZCBWaW1lby4KICogW3Bv
bHlwbGF5ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9BY2NvbnV0L3BvbHlwbGF5
ZXIpIC0gUnVsZSBZb3VUdWJlLCBTb3VuZGNsb3VkIGFuZCBWaW1lbyBwbGF5
ZXIgd2l0aCBvbmUgQVBJLgogKiBbZmxvd3BsYXllcl0oaHR0cHM6Ly9naXRo
dWIuY29tL2Zsb3dwbGF5ZXIvZmxvd3BsYXllcikgLSBUaGUgSFRNTDUgdmlk
ZW8gcGxheWVyIGZvciB0aGUgd2ViCiA8aHR0cHM6Ly9mbG93cGxheWVyLm9y
Zy8+CiAqIFttZWRpYWVsZW1lbnRdKGh0dHBzOi8vZ2l0aHViLmNvbS9qb2hu
ZHllci9tZWRpYWVsZW1lbnQpIC0gSFRNTDUgPGF1ZGlvPiBvciA8dmlkZW8+
IHBsYXllciB3aXRoIEZsYXNoIGFuZCBTaWx2ZXJsaWdodCBzaGltcyB0aGF0
IG1pbWljcyB0aGUgSFRNTDUgTWVkaWFFbGVtZW50IEFQSSwgZW5hYmxpbmcg
YSBjb25zaXN0ZW50IFVJIGluIGFsbCBicm93c2Vycy4gPGh0dHA6Ly9tZWRp
YWVsZW1lbnRqcy5jb20vPgogKiBbU291bmRKU10oaHR0cHM6Ly9naXRodWIu
Y29tL0NyZWF0ZUpTL1NvdW5kSlMpIC0gQSBsaWJyYXJ5IHRvIG1ha2Ugd29y
a2luZyB3aXRoIGF1ZGlvIG9uIHRoZSB3ZWIgZWFzaWVyLiBJdCBwcm92aWRl
cyBhIGNvbnNpc3RlbnQgQVBJIGZvciBwbGF5aW5nIGF1ZGlvIGluIGRpZmZl
cmVudCBicm93c2Vycy4KICogW3ZpZGVvLmpzXShodHRwczovL2dpdGh1Yi5j
b20vdmlkZW9qcy92aWRlby5qcykgLSBWaWRlby5qcyAtIG9wZW4gc291cmNl
IEhUTUw1ICYgRmxhc2ggdmlkZW8gcGxheWVyLgogKiBbRml0Vmlkcy5qc10o
aHR0cHM6Ly9naXRodWIuY29tL2RhdmF0cm9uNTAwMC9GaXRWaWRzLmpzKSAt
IEEgbGlnaHR3ZWlnaHQsIGVhc3ktdG8tdXNlIGpRdWVyeSBwbHVnaW4gZm9y
IGZsdWlkIHdpZHRoIHZpZGVvIGVtYmVkcy4KICogW0lvbi5Tb3VuZF0oaHR0
cHM6Ly9naXRodWIuY29tL0lvbkRlbi9pb24uc291bmQpIC0gU2ltcGxlIHNv
dW5kcyBvbiBhbnkgd2ViIHBhZ2UuCiAqIFtwaG90b2Jvb3RoLWpzXShodHRw
czovL2dpdGh1Yi5jb20vV29sZnJhbUhlbXBlbC9waG90b2Jvb3RoLWpzKSAt
IEEgd2lkZ2V0IHRoYXQgYWxsb3dzIHVzZXJzIHRvIHRha2UgdGhlaXIgYXZh
dGFyIHBpY3R1cmVzIG9uIHlvdXIgc2l0ZS4KICogW2NsYXBwcl0oaHR0cHM6
Ly9naXRodWIuY29tL2NsYXBwci9jbGFwcHIpIC0gQW4gZXh0ZW5zaWJsZSBt
ZWRpYSBwbGF5ZXIgZm9yIHRoZSB3ZWIgaHR0cDovL2NsYXBwci5pbwoKIyMg
VHlwb2dyYXBoeQoKICogW0Zsb3dUeXBlLkpTXShodHRwczovL2dpdGh1Yi5j
b20vc2ltcGxlZm9jdXMvRmxvd1R5cGUuSlMpIC0gV2ViIHR5cG9ncmFwaHkg
YXQgaXRzIGZpbmVzdDogZm9udC1zaXplIGFuZCBsaW5lLWhlaWdodCBiYXNl
ZCBvbiBlbGVtZW50IHdpZHRoLgogKiBbQmlnVGV4dF0oaHR0cHM6Ly9naXRo
dWIuY29tL3phY2hsZWF0L0JpZ1RleHQpIC0galF1ZXJ5IHBsdWdpbiwgY2Fs
Y3VsYXRlcyB0aGUgZm9udC1zaXplIGFuZCB3b3JkLXNwYWNpbmcgbmVlZGVk
IHRvIG1hdGNoIGEgbGluZSBvZiB0ZXh0IHRvIGEgc3BlY2lmaWMgd2lkdGgu
CiAqIFtjaXJjbGV0eXBlXShodHRwczovL2dpdGh1Yi5jb20vcGV0ZXJocnkv
Y2lyY2xldHlwZSkgLSBBIGpRdWVyeSBwbHVnaW4gdGhhdCBsZXRzIHlvdSBj
dXJ2ZSB0eXBlIG9uIHRoZSB3ZWIuCiAqIFtzbGFiVGV4dF0oaHR0cHM6Ly9n
aXRodWIuY29tL2ZyZXFEZWMvc2xhYlRleHQvKSAtIEEgalF1ZXJ5IHBsdWdp
biBmb3IgcHJvZHVjaW5nIGJpZywgYm9sZCAmIHJlc3BvbnNpdmUgaGVhZGxp
bmVzLgogKiBbc2ltcGxlLXRleHQtcm90YXRvcl0oaHR0cHM6Ly9naXRodWIu
Y29tL3BlYWNoYW5hbnIvc2ltcGxlLXRleHQtcm90YXRvcikgLSBBZGQgYSBz
dXBlciBzaW1wbGUgcm90YXRpbmcgdGV4dCB0byB5b3VyIHdlYnNpdGUgd2l0
aCBsaXR0bGUgdG8gbm8gbWFya3VwLgogKiBbbm92YWNhbmN5LmpzXShodHRw
czovL2dpdGh1Yi5jb20vY2h1Y2t5Z2xpdGNoL25vdmFjYW5jeS5qcykgLSBU
ZXh0IE5lb24gR29sZGVuIGVmZmVjdCBqUXVlcnkgcGx1Zy1pbi4KICogW2px
dWVyeS1yZXNwb25zaXZlLXRleHRdKGh0dHBzOi8vZ2l0aHViLmNvbS9naGVw
dGluZy9qcXVlcnktcmVzcG9uc2l2ZS10ZXh0KSAtIE1ha2UgeW91ciB0ZXh0
IHNpemluZyByZXNwb25zaXZlIQogKiBbRml0VGV4dC5qc10oaHR0cHM6Ly9n
aXRodWIuY29tL2RhdmF0cm9uNTAwMC9GaXRUZXh0LmpzKSAtIEEgalF1ZXJ5
IHBsdWdpbiBmb3IgaW5mbGF0aW5nIHdlYiB0eXBlLgogKiBbTGV0dGVyaW5n
LmpzXShodHRwczovL2dpdGh1Yi5jb20vZGF2YXRyb241MDAwL0xldHRlcmlu
Zy5qcykgLSBBIGxpZ2h0d2VpZ2h0LCBlYXN5IHRvIHVzZSBKYXZhU2NyaXB0
IGA8c3Bhbj5gIGluamVjdG9yIGZvciByYWRpY2FsIFdlYiBUeXBvZ3JhcGh5
LgoKCiMjIEFuaW1hdGlvbnMKCiogW3ZlbG9jaXR5XShodHRwczovL2dpdGh1
Yi5jb20vanVsaWFuc2hhcGlyby92ZWxvY2l0eSkgLSBBY2NlbGVyYXRlZCBK
YXZhU2NyaXB0IGFuaW1hdGlvbi4KKiBbanF1ZXJ5LnRyYW5zaXRdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9yc3RhY3J1ei9qcXVlcnkudHJhbnNpdCkgLSBTdXBl
ci1zbW9vdGggQ1NTMyB0cmFuc2Zvcm1hdGlvbnMgYW5kIHRyYW5zaXRpb25z
IGZvciBqUXVlcnkuCiogW2ltcHJlc3MuanNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9pbXByZXNzL2ltcHJlc3MuanMpIC0gTWFrZSBQcmV6aS1saWtlIHByZXNl
bnRhdGlvbnMgd2l0aCBDU1MzIHRyYW5zZm9ybWF0aW9ucy90cmFuc2l0aW9u
cyBpbiBhbiBIVE1MIGRvY3VtZW50LgoqIFtib3VuY2UuanNdKGh0dHBzOi8v
Z2l0aHViLmNvbS90aWN0YWlsL2JvdW5jZS5qcykgLSBDcmVhdGUgdGFzdHkg
Q1NTMyBwb3dlcmVkIGFuaW1hdGlvbnMgaW4gbm8gdGltZS4KKiBbR3JlZW5T
b2NrLUpTXShodHRwczovL2dpdGh1Yi5jb20vZ3JlZW5zb2NrL0dyZWVuU29j
ay1KUykgLSBIaWdoLXBlcmZvcm1hbmNlIEhUTUw1IGFuaW1hdGlvbnMgdGhh
dCB3b3JrIGluIGFsbCBtYWpvciBicm93c2Vycy4KKiBbVHJhbnNpdGlvbkVu
ZF0oaHR0cHM6Ly9naXRodWIuY29tL0V2YW5kcm9MRy90cmFuc2l0aW9uRW5k
KSAtIFRyYW5zaXRpb25FbmQgaXMgYW4gYWdub3N0aWMgYW5kIGNyb3NzLWJy
b3dzZXIgbGlicmFyeSB0byB3b3JrIHdpdGggdHJhbnNpdGlvbmVkIGV2ZW50
LgoqIFtEeW5hbWljLmpzXShodHRwczovL2dpdGh1Yi5jb20vbWljaGFlbHZp
bGxhci9keW5hbWljcy5qcykgLSBKYXZhU2NyaXB0IGxpYnJhcnkgdG8gY3Jl
YXRlIHBoeXNpY3MtYmFzZWQgQ1NTIGFuaW1hdGlvbnMuCiogW3RoZS1jdWJl
XShodHRwczovL2dpdGh1Yi5jb20vcHN0YWRsZXIvdGhlLWN1YmUpIC0gVGhl
IEN1YmUgaXMgYW4gZXhwZXJpbWVudCB3aXRoIENTUzMgdHJhbnNpdGlvbnMu
CiogW0VmZmVja3QuY3NzXShodHRwczovL2dpdGh1Yi5jb20vaDVicC9FZmZl
Y2t0LmNzcykgLSBBIFBlcmZvcm1hbnQgVHJhbnNpdGlvbnMgYW5kIEFuaW1h
dGlvbnMgTGlicmFyeQoqIFthbmltYXRlLmNzc10oaHR0cHM6Ly9naXRodWIu
Y29tL2RhbmVkZW4vYW5pbWF0ZS5jc3MpIC0gQSBjcm9zcy1icm93c2VyIGxp
YnJhcnkgb2YgQ1NTIGFuaW1hdGlvbnMuIEFzIGVhc3kgdG8gdXNlIGFzIGFu
IGVhc3kgdGhpbmcuCiogW3RleHRpbGxhdGVdKGh0dHBzOi8vZ2l0aHViLmNv
bS9qc2Noci90ZXh0aWxsYXRlKSAtIEEgc2ltcGxlIHBsdWdpbiBmb3IgQ1NT
MyB0ZXh0IGFuaW1hdGlvbnMuCiogW21vdmUuanNdKGh0dHBzOi8vZ2l0aHVi
LmNvbS92aXNpb25tZWRpYS9tb3ZlLmpzKSAtIENTUzMgYmFja2VkIEphdmFT
Y3JpcHQgYW5pbWF0aW9uIGZyYW1ld29yay4KKiBbYW5pbWF0YWJsZV0oaHR0
cHM6Ly9naXRodWIuY29tL0xlYVZlcm91L2FuaW1hdGFibGUpIC0gT25lIHBy
b3BlcnR5LCB0d28gdmFsdWVzLCBlbmRsZXNzIHBvc3NpYmlsaXRpZXMuCiog
W3NodWZmbGUtaW1hZ2VzXShodHRwczovL2dpdGh1Yi5jb20vcGVhY2hhbmFu
ci9zaHVmZmxlLWltYWdlcykgLSBUaGUgU2ltcGxlc3QgV2F5IHRvIHNodWZm
bGUgdGhyb3VnaCBpbWFnZXMgaW4gYSBDcmVhdGl2ZSBXYXkgaHR0cDovL3d3
dy50aGVwZXRlZGVzaWduLmNvbS9kZW1vcy9zaHVmZmxlLWltYWdlc19kZW1v
Lmh0bWwKKiBbc21vb3RoU3RhdGUuanNdKGh0dHBzOi8vZ2l0aHViLmNvbS9t
aWd1ZWwtcGVyZXovc21vb3RoU3RhdGUuanMpIC0gVW5vYnRydXNpdmUgcGFn
ZSB0cmFuc2l0aW9ucyB3aXRoIGpRdWVyeS4gaHR0cDovL3Ntb290aHN0YXRl
LmNvbS8KKiBbQW5pbWUuanNdKGh0dHA6Ly9hbmltZWpzLmNvbSkgLSBBIEph
dmFTY3JpcHQgYW5pbWF0aW9uIGVuZ2luZSBodHRwOi8vYW5pbWVqcy5jb20u
CiogW01vLmpzXShodHRwOi8vbW9qcy5pbykgLSBNb3Rpb24gZ3JhcGhpY3Mg
dG9vbGJlbHQgZm9yIHRoZSB3ZWIgaHR0cDovL21vanMuaW8uCiogW3BhcnRp
Y2xlcy5qc10oaHR0cHM6Ly9naXRodWIuY29tL1ZpbmNlbnRHYXJyZWF1L3Bh
cnRpY2xlcy5qcykgLSBBIGxpZ2h0d2VpZ2h0IEphdmFTY3JpcHQgbGlicmFy
eSBmb3IgY3JlYXRpbmcgcGFydGljbGVzLgoKIyMgSW1hZ2UgUHJvY2Vzc2lu
ZwoKKiBbbGVuYS5qc10oaHR0cHM6Ly9naXRodWIuY29tL2Rhdmlkc29uZmVs
bGlwZS9sZW5hLmpzKSAtIEEgTGlicmFyeSBmb3IgaW1hZ2UgcHJvY2Vzc2lu
ZyB3aXRoIGZpbHRlcnMgYW5kIHV0aWwgZnVuY3Rpb25zLgoqIFtwaWNhXSho
dHRwczovL2dpdGh1Yi5jb20vbm9kZWNhL3BpY2EpIC0gSGlnaCBxdWFsaXR5
IGltYWdlIHJlc2l6ZSAod2l0aCBmYXN0IExhbmN6b3MgZmlsdGVyLCBpbXBs
ZW1lbnRlZCBpbiBwdXJlIEpTKS4KKiBbY3JvcHBlcl0oaHR0cHM6Ly9naXRo
dWIuY29tL2Zlbmd5dWFuY2hlbi9jcm9wcGVyKSAtIEEgc2ltcGxlIGpRdWVy
eSBpbWFnZSBjcm9wcGluZyBwbHVnaW4uCgoKIyMgRVM2CgoqIFtlczZmZWF0
dXJlc10oaHR0cHM6Ly9naXRodWIuY29tL2x1a2Vob2Jhbi9lczZmZWF0dXJl
cykgLSBPdmVydmlldyBvZiBFQ01BU2NyaXB0IDYgZmVhdHVyZXMuCiogW2Vz
Ni1mZWF0dXJlc10oaHR0cHM6Ly9naXRodWIuY29tL3JzZS9lczYtZmVhdHVy
ZXMpIC0gRUNNQVNjcmlwdCA2OiBGZWF0dXJlIE92ZXJ2aWV3ICYgQ29tcGFy
aXNvbi4KKiBbZXM2LWNoZWF0c2hlZXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9E
cmtTZXBoeS9lczYtY2hlYXRzaGVldCkgLSBFUzIwMTUgW0VTNl0gY2hlYXRz
aGVldCBjb250YWluaW5nIHRpcHMsIHRyaWNrcywgYmVzdCBwcmFjdGljZXMg
YW5kIGNvZGUgc25pcHBldHMuCiogW0VDTUFTY3JpcHQgNiBjb21wYXRpYmls
aXR5IHRhYmxlXShodHRwOi8va2FuZ2F4LmdpdGh1Yi5pby9jb21wYXQtdGFi
bGUvZXM2LykgLSBDb21wYXRpYmlsaXR5IHRhYmxlcyBmb3IgYWxsIEVDTUFT
Y3JpcHQgNiBmZWF0dXJlcyBvbiBhIHZhcmlldHkgb2YgZW52aXJvbm1lbnRz
LgoqIFtCYWJlbCAoRm9ybWVybHkgNnRvNSldKGh0dHBzOi8vZ2l0aHViLmNv
bS9iYWJlbC9iYWJlbCkgLSBUdXJuIEVTNisgY29kZSBpbnRvIHZhbmlsbGEg
RVM1IHdpdGggbm8gcnVudGltZS4KKiBbVHJhY2V1ciBjb21waWxlcl0oaHR0
cHM6Ly9naXRodWIuY29tL2dvb2dsZS90cmFjZXVyLWNvbXBpbGVyKSAtIEVT
NiBmZWF0dXJlcyA+IEVTNS4gSW5jbHVkZXMgY2xhc3NlcywgZ2VuZXJhdG9y
cywgcHJvbWlzZXMsIGRlc3RydWN0dXJpbmcgcGF0dGVybnMsIGRlZmF1bHQg
cGFyYW1ldGVycyAmIG1vcmUuCgoKIyMgR2VuZXJhdG9ycwoKKiBbR2F0c2J5
LmpzXShodHRwczovL2dpdGh1Yi5jb20vZ2F0c2J5anMvZ2F0c2J5KSAtIFJl
YWN0LWJhc2VkIHN0YXRpYyBzaXRlIGdlbmVyYXRvci4KKiBbR3JpZHNvbWVd
KGh0dHBzOi8vZ2l0aHViLmNvbS9ncmlkc29tZS9ncmlkc29tZSkgLSBWdWUt
cG93ZXJlZCBzdGF0aWMgc2l0ZSBnZW5lcmF0b3IuCgoKIyMgU0RLCgoqIFtq
YXZhc2NyaXB0LXNkay1kZXNpZ25dKGh0dHBzOi8vZ2l0aHViLmNvbS9odWVp
OTAvamF2YXNjcmlwdC1zZGstZGVzaWduKSAtIEphdmFTY3JpcHQgU0RLIGRl
c2lnbiBndWlkZSBleHRyYWN0ZWQgZnJvbSB3b3JrIGFuZCBwZXJzb25hbCBl
eHBlcmllbmNlCiogW1Nwb3RpZnkgU0RLXShodHRwczovL2dpdGh1Yi5jb20v
bG92ZXJham9lbC9zcG90aWZ5LXNkaykgLSBFbnRpdHkgb3JpZW50ZWQgU0RL
IHRvIHdvcmsgd2l0aCB0aGUgU3BvdGlmeSBXZWIgQVBJLgoqIFtTcXVhcmUg
Tm9kZS5qcyBTREtdKGh0dHBzOi8vZ2l0aHViLmNvbS9zcXVhcmUvY29ubmVj
dC1ub2RlanMtc2RrLykgLSBKYXZhU2NyaXB0IGNsaWVudCBsaWJyYXJ5IGZv
ciBwYXltZW50cyBhbmQgb3RoZXIgU3F1YXJlIEFQSXMuCgoKIyMgTWlzYwoK
KiBbZWNob10oaHR0cHM6Ly9naXRodWIuY29tL3RvZGRtb3R0by9lY2hvKSAt
IExhenktbG9hZGluZyBpbWFnZXMgd2l0aCBkYXRhLSogYXR0cmlidXRlcy4K
KiBbcGljdHVyZWZpbGxdKGh0dHBzOi8vZ2l0aHViLmNvbS9zY290dGplaGwv
cGljdHVyZWZpbGwpIC0gQSByZXNwb25zaXZlIGltYWdlIHBvbHlmaWxsIGZv
ciAmbHQ7cGljdHVyZSZndDssIHNyY3NldCwgc2l6ZXMuCiogW3BsYXRmb3Jt
LmpzXShodHRwczovL2dpdGh1Yi5jb20vYmVzdGllanMvcGxhdGZvcm0uanMp
IC0gQSBwbGF0Zm9ybSBkZXRlY3Rpb24gbGlicmFyeSB0aGF0IHdvcmtzIG9u
IG5lYXJseSBhbGwgSmF2YVNjcmlwdCBwbGF0Zm9ybXMuCiogW2pzb24zXSho
dHRwczovL2dpdGh1Yi5jb20vYmVzdGllanMvanNvbjMpIC0gQSBtb2Rlcm4g
SlNPTiBpbXBsZW1lbnRhdGlvbiBjb21wYXRpYmxlIHdpdGggbmVhcmx5IGFs
bCBKYXZhU2NyaXB0IHBsYXRmb3Jtcy4KKiBbTG9naWNhbCBPciBOb3RdKGh0
dHA6Ly9nYWJpbmF1cmVjaGUuY29tL2xvZ2ljYWxvcm5vdC8pIC0gQSBnYW1l
IGFib3V0IEphdmFTY3JpcHQgc3BlY2lmaWNpdGllcy4KKiBbQml0U2V0Lmpz
XShodHRwczovL2dpdGh1Yi5jb20vaW5mdXNpb24vQml0U2V0LmpzKSAtIEEg
SmF2YVNjcmlwdCBCaXQtVmVjdG9yIGltcGxlbWVudGF0aW9uCiogW3Nwb2ls
ZXItYWxlcnRdKGh0dHBzOi8vZ2l0aHViLmNvbS9qb3NoYnVkZHkvc3BvaWxl
ci1hbGVydCkgLSBTUE9JTEVSIEFMRVJUISBBIGhhcHB5IGxpdHRsZSBqcXVl
cnkgcGx1Z2luIHRvIGhpZGUgc3BvaWxlcnMgb24geW91ciBzaXRlLgoqIFtq
cXVlcnkudmlicmF0ZS5qc10oaHR0cHM6Ly9naXRodWIuY29tL2lsbHlpc20v
anF1ZXJ5LnZpYnJhdGUuanMpIC0gVmlicmF0aW9uIEFQSSBXcmFwcGVycwoq
IFtsaXN0LmpzXShodHRwczovL2dpdGh1Yi5jb20vamF2dmUvbGlzdC5qcykg
LSBBZGRzIHNlYXJjaCwgc29ydCwgZmlsdGVycyBhbmQgZmxleGliaWxpdHkg
dG8gdGFibGVzLCBsaXN0cyBhbmQgdmFyaW91cyBIVE1MIGVsZW1lbnRzLiBC
dWlsdCB0byBiZSBpbnZpc2libGUgYW5kIHdvcmsgb24gZXhpc3RpbmcgSFRN
TC4KaHR0cDovL3d3dy5saXN0anMuY29tCiogW21peGl0dXBdKGh0dHBzOi8v
Z2l0aHViLmNvbS9wYXRyaWNra3Vua2EvbWl4aXR1cCkgLSBNaXhJdFVwIC0g
QSBGaWx0ZXIgJiBTb3J0IFBsdWdpbi4KKiBbZ3JpZF0oaHR0cHM6Ly9naXRo
dWIuY29tL2hvb3RzdWl0ZS9ncmlkKSAtIERyYWcgYW5kIGRyb3AgbGlicmFy
eSBmb3IgdHdvLWRpbWVuc2lvbmFsLCByZXNpemFibGUgYW5kIHJlc3BvbnNp
dmUgbGlzdHMuCiogW2pxdWVyeS1tYXRjaC1oZWlnaHRdKGh0dHBzOi8vZ2l0
aHViLmNvbS9saWFicnUvanF1ZXJ5LW1hdGNoLWhlaWdodCkgLSBhIHJlc3Bv
bnNpdmUgZXF1YWwgaGVpZ2h0cyBwbHVnaW4gZm9yIGpRdWVyeS4KKiBbc3Vy
dmV5LmpzXShodHRwczovL2dpdGh1Yi5jb20vc3VydmV5anMvc3VydmV5anMp
IC0gSmF2YVNjcmlwdCBTdXJ2ZXkgRW5naW5lLiBJdCB1c2VzIEpTT04gZm9y
IHN1cnZleSBtZXRhZGF0YSBhbmQgcmVzdWx0cy4gaHR0cDovL3N1cnZleWpz
Lm9yZy8KKiBbQXJyYXkgRXhwbG9yZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9z
ZHJhcy9hcnJheS1leHBsb3JlcikgYW5kIFtPYmplY3QgRXhwbG9yZXJdKGh0
dHBzOi8vc2RyYXMuZ2l0aHViLmlvL29iamVjdC1leHBsb3Jlci8pIC0gUmVz
b3VyY2VzIHRvIGhlbHAgZmlndXJlIG91dCB3aGF0IG5hdGl2ZSBKYXZhU2Ny
aXB0IG1ldGhvZCB3b3VsZCBiZSBiZXN0IHRvIHVzZSBhdCBhbnkgZ2l2ZW4g
dGltZQoqIFtDbGlwYm9hcmQuanNdKGh0dHBzOi8vY2xpcGJvYXJkanMuY29t
LykgLSAiQ29weSB0byBjbGlwYm9hcmQiIHdpdGhvdXQgRmxhc2ggb3IgdXNl
IG9mIEZyYW1ld29ya3MuCiogW2t5XShodHRwczovL2dpdGh1Yi5jb20vc2lu
ZHJlc29yaHVzL2t5KSAtIFRpbnkgYW5kIGVsZWdhbnQgSFRUUCBjbGllbnQg
YmFzZWQgb24gdGhlIGJyb3dzZXIgRmV0Y2ggQVBJLgoqIFtGY2FsXShodHRw
czovL2dpdGh1Yi5jb20vNWFudGhvc2gvZmNhbCkgLSAgTWF0aCBleHByZXNz
aW9uIGV2YWx1YXRvcgoKIyMgUG9kY2FzdHMKKiBbSmF2YVNjcmlwdCBBaXJd
KGh0dHBzOi8vamF2YXNjcmlwdGFpci5jb20vKSAtIFRoZSBsaXZlIHZpZGVv
IGJyb2FkY2FzdCBwb2RjYXN0IGFsbCBhYm91dCBKYXZhU2NyaXB0IGFuZCB0
aGUgV2ViIHBsYXRmb3JtLgoqIFtXZWIgb2YgVG9tb3Jyb3ddKGh0dHA6Ly93
d3cud2Vib2Z0b21vcnJvd3BvZGNhc3QuY29tLykgLSBQb2RjYXN0IGFib3V0
IEphdmFTY3JpcHQgZm9yIGJlZ2lubmVycy4KKiBbSmF2YVNjcmlwdCBKYWJi
ZXJdKGh0dHBzOi8vZGV2Y2hhdC50di9qcy1qYWJiZXIpIC0gQSB3ZWVrbHkg
cG9kY2FzdCBhYm91dCBKYXZhU2NyaXB0LCBpbmNsdWRpbmcgTm9kZS5qcywg
RnJvbnQtRW5kIFRlY2hub2xvZ2llcywgQ2FyZWVycywgVGVhbXMgYW5kIG1v
cmUuCgojIFdvcnRoIFJlYWRpbmcKCiogW1lvdSBEb24ndCBLbm93IEpTXSho
dHRwczovL2dpdGh1Yi5jb20vZ2V0aWZ5L1lvdS1Eb250LUtub3ctSlMpIC0g
UG9zc2libHkgdGhlIGJlc3QgYm9vayB3cml0dGVuIG9uIG1vZGVybiBKYXZh
U2NyaXB0LCBjb21wbGV0ZWx5IHJlYWRhYmxlIG9ubGluZSBmb3IgZnJlZSwg
b3IgY2FuIGJlIGJvdWdodCB0byBzdXBwb3J0IHRoZSBhdXRob3IuCiogW2Jy
YXppbGpzL2pzLXRoZS1yaWdodC13YXldKGh0dHBzOi8vZ2l0aHViLmNvbS9i
cmF6aWxqcy9qcy10aGUtcmlnaHQtd2F5LykgLSBBbiBlYXN5LXRvLXJlYWQs
IHF1aWNrIHJlZmVyZW5jZSBmb3IgSlMgYmVzdCBwcmFjdGljZXMsIGFjY2Vw
dGVkIGNvZGluZyBzdGFuZGFyZHMsIGFuZCBsaW5rcyBhcm91bmQgdGhlIFdl
Yi4KKiBbSlNib29rc10oaHR0cHM6Ly9naXRodWIuY29tL3Jldm9sdW5ldC9K
U2Jvb2tzKSAtIERpcmVjdG9yeSBvZiBmcmVlIEphdmFTY3JpcHQgZWJvb2tz
LgoqIFtTdXBlcmhlcm8uanNdKGh0dHA6Ly9zdXBlcmhlcm9qcy5jb20pIC0g
QSBjb2xsZWN0aW9uIG9mIHJlc291cmNlcyBhYm91dCBjcmVhdGluZywgdGVz
dGluZyBhbmQgbWFpbnRhaW5pbmcgYSBsYXJnZSBKYXZhU2NyaXB0IGNvZGUg
YmFzZS4KKiBbU0pTSl0oaHR0cHM6Ly9naXRodWIuY29tL0h1Z29HaXJhdWRl
bC9TSlNKKSAtIFNpbXBsaWZpZWQgSmF2YVNjcmlwdCBKYXJnb24gaXMgYSBj
b21tdW5pdHktZHJpdmVuIGF0dGVtcHQgYXQgZXhwbGFpbmluZyB0aGUgbG9h
ZHMgb2YgYnV6endvcmRzIG1ha2luZyB0aGUgY3VycmVudCBKYXZhU2NyaXB0
IGVjb3N5c3RlbSBpbiBhIGZldyBzaW1wbGUgd29yZHMuCiogW0hvdyB0byBX
cml0ZSBhbiBPcGVuIFNvdXJjZSBKYXZhU2NyaXB0IExpYnJhcnldKGh0dHBz
Oi8vZ2l0aHViLmNvbS9zYXJiYm90dGFtL3dyaXRlLWFuLW9wZW4tc291cmNl
LWpzLWxpYikgLSBBIGNvbXByZWhlbnNpdmUgZ3VpZGUgdGhyb3VnaCBhIHNl
dCBvZiBzdGVwcyB0byBwdWJsaXNoIGEgSmF2YVNjcmlwdCBvcGVuIHNvdXJj
ZSBsaWJyYXJ5LgoqIFtKYWF2YXNjcmlwdCB0dXRvcmlhbF0oaHR0cHM6Ly9o
YWNrci5pby90dXRvcmlhbHMvbGVhcm4tamF2YXNjcmlwdCkgLSBMZWFybiBK
YXZhc2NyaXB0IG9ubGluZSBmcm9tIGEgZGl2ZXJzZSByYW5nZSBvZiB1c2Vy
IHJhbmtlZCBvbmxpbmUgdHV0b3JpYWxzLgoqIFtGdW5jdGlvbmFsLUxpZ2h0
IEphdmFTY3JpcHRdKGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRpZnkvRnVuY3Rp
b25hbC1MaWdodC1KUykgLSBQcmFnbWF0aWMsIGJhbGFuY2VkIEZQIGluIEph
dmFTY3JpcHQuCgoKIyBPdGhlciBBd2Vzb21lIExpc3RzCiogW3NvdGF5YW1h
c2hpdGEvYXdlc29tZS1jc3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9zb3RheWFt
YXNoaXRhL2F3ZXNvbWUtY3NzKQoqIFtlbWlqcnAvYXdlc29tZS1hd2Vzb21l
XShodHRwczovL2dpdGh1Yi5jb20vZW1panJwL2F3ZXNvbWUtYXdlc29tZSkK
KiBbYmF5YW5kaW4vYXdlc29tZS1hd2Vzb21lbmVzc10oaHR0cHM6Ly9naXRo
dWIuY29tL2JheWFuZGluL2F3ZXNvbWUtYXdlc29tZW5lc3MpCiogW3NpbmRy
ZXNvcmh1cy9hd2Vzb21lXShodHRwczovL2dpdGh1Yi5jb20vc2luZHJlc29y
aHVzL2F3ZXNvbWUpCiogW2pudi9saXN0XShodHRwczovL2dpdGh1Yi5jb20v
am52L2xpc3RzKQoqIFtnaWFuYXJiL2FuZ3VsYXJqc10oaHR0cHM6Ly9naXRo
dWIuY29tL2dpYW5hcmIvYXdlc29tZS1hbmd1bGFyanMpCiogW3BldGVya29r
b3QvYXdlc29tZS1kb2pvXShodHRwczovL2dpdGh1Yi5jb20vcGV0ZXJrb2tv
dC9hd2Vzb21lLWRvam8pCiogW2FkZHlvc21hbmkvZXM2LXRvb2xzXShodHRw
czovL2dpdGh1Yi5jb20vYWRkeW9zbWFuaS9lczYtdG9vbHMpCiogW2VyaWNk
b3VnbGFzL0VTNi1MZWFybmluZ10oaHR0cHM6Ly9naXRodWIuY29tL2VyaWNk
b3VnbGFzL0VTNi1MZWFybmluZykKKiBbb2JldG9tdW5pei9hd2Vzb21lLXdl
YmNvbXBvbmVudHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9vYmV0b211bml6L2F3
ZXNvbWUtd2ViY29tcG9uZW50cykKKiBbd2lsbGlhbmp1c3Rlbi9hd2Vzb21l
LXN2Z10oaHR0cHM6Ly9naXRodWIuY29tL3dpbGxpYW5qdXN0ZW4vYXdlc29t
ZS1zdmcpCiogW2Rhdmlkc29uZmVsbGlwZS9hd2Vzb21lLXdwb10oaHR0cHM6
Ly9naXRodWIuY29tL2Rhdmlkc29uZmVsbGlwZS9hd2Vzb21lLXdwbykKKiBb
aW5zdGFuY2VvZnByby9hd2Vzb21lLWJhY2tib25lXShodHRwczovL2dpdGh1
Yi5jb20vc2FkY2l0aXplbi9hd2Vzb21lLWJhY2tib25lKQoqIFtlbmFxeC9h
d2Vzb21lLXJlYWN0XShodHRwczovL2dpdGh1Yi5jb20vZW5hcXgvYXdlc29t
ZS1yZWFjdCkKKiBbYm9sc2hjaGlrb3YvanMtbXVzdC13YXRjaF0oaHR0cHM6
Ly9naXRodWIuY29tL2JvbHNoY2hpa292L2pzLW11c3Qtd2F0Y2gpCiogW3Bl
dGVya29rb3QvYXdlc29tZS1qcXVlcnldKGh0dHBzOi8vZ2l0aHViLmNvbS9w
ZXRlcmtva290L2F3ZXNvbWUtanF1ZXJ5KQoqIFtkYXZpZHllenNldHoveW91
LW1pZ2h0LW5vdC1uZWVkLWpxdWVyeS1wbHVnaW5zXShodHRwczovL2dpdGh1
Yi5jb20vZGF2aWR5ZXpzZXR6L3lvdS1taWdodC1ub3QtbmVlZC1qcXVlcnkt
cGx1Z2lucykKKiBbTWF4aW1BYnJhbWNodWNrL2F3ZXNvbWUtaW50ZXJ2aWV3
c10oaHR0cHM6Ly9naXRodWIuY29tL01heGltQWJyYW1jaHVjay9hd2Vzb21l
LWludGVydmlldy1xdWVzdGlvbnMpCgojIENvbnRyaWJ1dGluZwoKQ29udHJp
YnV0aW9ucyB3ZWxjb21lISBSZWFkIHRoZSBbY29udHJpYnV0aW9uIGd1aWRl
bGluZXNdKENPTlRSSUJVVElORy5tZCkgZmlyc3QuCgojIExpY2Vuc2UKClsh
W0NDMF0oaHR0cDovL2kuY3JlYXRpdmVjb21tb25zLm9yZy9wL3plcm8vMS4w
Lzg4eDMxLnBuZyldKGh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL3B1Ymxp
Y2RvbWFpbi96ZXJvLzEuMC8pCgpUbyB0aGUgZXh0ZW50IHBvc3NpYmxlIHVu
ZGVyIGxhdywgW2NoZW5jaGVuZ10oaHR0cHM6Ly9naXRodWIuY29tL3NvcnJ5
Y2MpIGhhcyB3YWl2ZWQgYWxsIGNvcHlyaWdodCBhbmQgcmVsYXRlZCBvciBu
ZWlnaGJvcmluZyByaWdodHMgdG8gdGhpcyB3b3JrLgo=
",,19084,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
