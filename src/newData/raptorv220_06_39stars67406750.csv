name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,github0,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'homebrew-core',52855516,b'\xf0\x9f\x8d\xbb Default formulae for the missing package manager for macOS',b'Ruby',191,6746,,218,False,b'https://api.github.com/repos/Homebrew/homebrew-core/forks',"IyBIb21lYnJldyBDb3JlCgpDb3JlIGZvcm11bGFlIGZvciB0aGUgSG9tZWJy
ZXcgcGFja2FnZSBtYW5hZ2VyLgoKQ29yZSBmb3JtdWxhZSBmb3IgdGhlIExp
bnV4YnJldyBwYWNrYWdlIG1hbmFnZXIgKEhvbWVicmV3IG9uIExpbnV4IG9y
IFdpbmRvd3MgMTAgU3Vic3lzdGVtIGZvciBMaW51eCkgYXJlIGluIFtIb21l
YnJldy9saW51eGJyZXctY29yZV0oaHR0cHM6Ly9naXRodWIuY29tL0hvbWVi
cmV3L2xpbnV4YnJldy1jb3JlKS4KClshW0pvaW4gdXMgb24gaHR0cHM6Ly9k
aXNjb3Vyc2UuYnJldy5zaF0oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRn
ZS9EaXNjb3Vyc2UtZm9ydW0tYmx1ZS5zdmcpXShodHRwczovL2Rpc2NvdXJz
ZS5icmV3LnNoKQoKIyMgSG93IGRvIEkgaW5zdGFsbCB0aGVzZSBmb3JtdWxh
ZT8KCkp1c3QgYGJyZXcgaW5zdGFsbCA8Zm9ybXVsYT5gLiBUaGlzIGlzIHRo
ZSBkZWZhdWx0IHRhcCBmb3IgSG9tZWJyZXcgYW5kIGlzIGluc3RhbGxlZCBi
eSBkZWZhdWx0LgoKIyMgTW9yZSBEb2N1bWVudGF0aW9uLCBUcm91Ymxlc2hv
b3RpbmcsIENvbnRyaWJ1dGluZywgU2VjdXJpdHksIENvbW11bml0eSwgRG9u
YXRpb25zLCBMaWNlbnNlIGFuZCBTcG9uc29ycwoKU2VlIHRoZXNlIHNlY3Rp
b25zIGluIFtIb21lYnJldy9icmV3J3MgUkVBRE1FXShodHRwczovL2dpdGh1
Yi5jb20vSG9tZWJyZXcvYnJldyNob21lYnJldykuCg==
",,6746,"bmFtZTogR2VuZXJhdGUgZm9ybXVsYWUuYnJldy5zaCBkYXRhLgoKb246CiAg
cHVzaDoKICAgIGJyYW5jaGVzOgogICAgICAtIG1hc3RlcgoKam9iczoKICBn
ZW5lcmF0ZToKICAgIGlmOiBnaXRodWIucmVwb3NpdG9yeSA9PSAnSG9tZWJy
ZXcvaG9tZWJyZXctY29yZScKICAgIHJ1bnMtb246IG1hY29zLWxhdGVzdAog
ICAgc3RlcHM6CiAgICAgIC0gdXNlczogYWN0aW9ucy9jaGVja291dEBtYXN0
ZXIKICAgICAgLSB1c2VzOiBIb21lYnJldy9hY3Rpb25zL2dpdC1zc2hAbWFz
dGVyCiAgICAgICAgd2l0aDoKICAgICAgICAgIGdpdF91c2VyOiBCcmV3VGVz
dEJvdAogICAgICAgICAgZ2l0X2VtYWlsOiBob21lYnJldy10ZXN0LWJvdEBs
aXN0cy5zZmNvbnNlcnZhbmN5Lm9yZwogICAgICAgICAga2V5OiAke3sgc2Vj
cmV0cy5GT1JNVUxBRV9ERVBMT1lfS0VZIH19CiAgICAgIC0gcnVuOiB8CiAg
ICAgICAgICBicmV3IHVwZGF0ZS1yZXNldCAiJChicmV3IC0tcmVwb3NpdG9y
eSkiCiAgICAgICAgICBicmV3IHRhcCAiJEdJVEhVQl9SRVBPU0lUT1JZIgog
ICAgICAgICAgYnJldyB1cGRhdGUtcmVzZXQgIiQoYnJldyAtLXJlcG9zaXRv
cnkgIiRHSVRIVUJfUkVQT1NJVE9SWSIpIgoKICAgICAgICAgIGV4cG9ydCBQ
QVRIPSIkKGJyZXcgLS1yZXBvKS9MaWJyYXJ5L0hvbWVicmV3L3ZlbmRvci9w
b3J0YWJsZS1ydWJ5L2N1cnJlbnQvYmluOiRQQVRIIgoKICAgICAgICAgIGdp
dCBjbG9uZSAtLWRlcHRoPTEgZ2l0QGdpdGh1Yi5jb206SG9tZWJyZXcvZm9y
bXVsYWUuYnJldy5zaAogICAgICAgICAgY2QgZm9ybXVsYWUuYnJldy5zaAoK
ICAgICAgICAgICMgc2V0dXAgYW5hbHl0aWNzCiAgICAgICAgICBlY2hvICIk
QU5BTFlUSUNTX0pTT05fS0VZIiA+IH4vLmhvbWVicmV3X2FuYWx5dGljcy5q
c29uCgogICAgICAgICAgIyBydW4gcmFrZSAod2l0aG91dCBhIHJha2UgYmlu
YXJ5KQogICAgICAgICAgcnVieSAtZSAibG9hZCBHZW0uYmluX3BhdGgoJ3Jh
a2UnLCAncmFrZScpIgoKICAgICAgICAgICMgY29tbWl0IGFuZCBwdXNoIGdl
bmVyYXRlZCBmaWxlcwogICAgICAgICAgZ2l0IGFkZCBfZGF0YS9mb3JtdWxh
IGFwaS9mb3JtdWxhIGZvcm11bGEKCiAgICAgICAgICBpZiAhIGdpdCBkaWZm
IC0tZXhpdC1jb2RlIEhFQUQgLS0gX2RhdGEvYW5hbHl0aWNzIF9kYXRhL2Zv
cm11bGEgYXBpL2Zvcm11bGEgZm9ybXVsYSBjYXNrOyB0aGVuCiAgICAgICAg
ICAgIGdpdCBjb21taXQgLW0gImZvcm11bGE6IHVwZGF0ZSBmcm9tICR7R0lU
SFVCX1JFUE9TSVRPUll9IHB1c2giIF9kYXRhL2FuYWx5dGljcyBfZGF0YS9m
b3JtdWxhIGFwaS9mb3JtdWxhIGZvcm11bGEKICAgICAgICAgICAgZ2l0IHB1
c2gKICAgICAgICAgIGZpCiAgICAgICAgZW52OgogICAgICAgICAgQU5BTFlU
SUNTX0pTT05fS0VZOiAke3sgc2VjcmV0cy5BTkFMWVRJQ1NfSlNPTl9LRVkg
fX0K
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'vowpal_wabbit',265995,"b'Vowpal Wabbit is a machine learning system which pushes the frontier of machine learning with techniques such as online, hashing, allreduce, reductions, learning2search, active, and interactive learning.'",b'C++',112,6744,,409,False,b'https://api.github.com/repos/VowpalWabbit/vowpal_wabbit/forks',"PGltZyBzcmM9Ii9sb2dvX2Fzc2V0cy92b3dwYWwtd2FiYml0cy1naXRodWIt
bG9nb0AzeC5wbmciIGhlaWdodD0iYXV0byIgd2lkdGg9IjEwMCUiIGFsdD0i
Vm93cGFsIFdhYmJpdCI+CgpbIVtCdWlsZCBTdGF0dXNdKGh0dHBzOi8vdHJh
dmlzLWNpLm9yZy9Wb3dwYWxXYWJiaXQvdm93cGFsX3dhYmJpdC5zdmc/YnJh
bmNoPW1hc3RlcildKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9Wb3dwYWxXYWJi
aXQvdm93cGFsX3dhYmJpdCkKWyFbV2luZG93cyBCdWlsZCBzdGF0dXNdKGh0
dHBzOi8vY2kuYXBwdmV5b3IuY29tL2FwaS9wcm9qZWN0cy9zdGF0dXMvNmhx
cGQ5ZTY0aDcyZ3lici9icmFuY2gvbWFzdGVyP3N2Zz10cnVlKV0oaHR0cHM6
Ly9jaS5hcHB2ZXlvci5jb20vcHJvamVjdC9Kb2huTGFuZ2ZvcmQvdm93cGFs
LXdhYmJpdC9icmFuY2gvbWFzdGVyKQoKWyFbQ292ZXJhZ2UgU3RhdHVzXSho
dHRwczovL2NvdmVyYWxscy5pby9yZXBvcy9naXRodWIvVm93cGFsV2FiYml0
L3Zvd3BhbF93YWJiaXQvYmFkZ2Uuc3ZnP2JyYW5jaD1tYXN0ZXIpXShodHRw
czovL2NvdmVyYWxscy5pby9naXRodWIvVm93cGFsV2FiYml0L3Zvd3BhbF93
YWJiaXQ/YnJhbmNoPW1hc3RlcikKWyFbVG90YWwgQWxlcnRzXShodHRwczov
L2ltZy5zaGllbGRzLmlvL2xndG0vYWxlcnRzL2cvSm9obkxhbmdmb3JkL3Zv
d3BhbF93YWJiaXQuc3ZnP2xvZ289bGd0bSZsb2dvV2lkdGg9MTgpXShodHRw
czovL2xndG0uY29tL3Byb2plY3RzL2cvSm9obkxhbmdmb3JkL3Zvd3BhbF93
YWJiaXQvYWxlcnRzLykKWyFbR2l0dGVyIGNoYXRdKGh0dHBzOi8vYmFkZ2Vz
LmdpdHRlci5pbS9Wb3dwYWxXYWJiaXQucG5nKV0oaHR0cHM6Ly9naXR0ZXIu
aW0vVm93cGFsV2FiYml0KQoKVGhpcyBpcyB0aGUgKlZvd3BhbCBXYWJiaXQq
IGZhc3Qgb25saW5lIGxlYXJuaW5nIGNvZGUuCgojIyBXaHkgVm93cGFsIFdh
YmJpdD8KVm93cGFsIFdhYmJpdCBpcyBhIG1hY2hpbmUgbGVhcm5pbmcgc3lz
dGVtIHdoaWNoIHB1c2hlcyB0aGUgZnJvbnRpZXIgb2YgbWFjaGluZSBsZWFy
bmluZyB3aXRoIHRlY2huaXF1ZXMgc3VjaCBhcyBvbmxpbmUsIGhhc2hpbmcs
IGFsbHJlZHVjZSwgcmVkdWN0aW9ucywgbGVhcm5pbmcyc2VhcmNoLCBhY3Rp
dmUsIGFuZCBpbnRlcmFjdGl2ZSBsZWFybmluZy4gVGhlcmUgaXMgYSBzcGVj
aWZpYyBmb2N1cyBvbiByZWluZm9yY2VtZW50IGxlYXJuaW5nIHdpdGggc2V2
ZXJhbCBjb250ZXh0dWFsIGJhbmRpdCBhbGdvcml0aG1zIGltcGxlbWVudGVk
IGFuZCB0aGUgb25saW5lIG5hdHVyZSBsZW5kaW5nIHRvIHRoZSBwcm9ibGVt
IHdlbGwuIFZvd3BhbCBXYWJiaXQgaXMgYSBkZXN0aW5hdGlvbiBmb3IgaW1w
bGVtZW50aW5nIGFuZCBtYXR1cmluZyBzdGF0ZSBvZiB0aGUgYXJ0IGFsZ29y
aXRobXMgd2l0aCBwZXJmb3JtYW5jZSBpbiBtaW5kLgoKLSAqKklucHV0IEZv
cm1hdC4qKiBUaGUgaW5wdXQgZm9ybWF0IGZvciB0aGUgbGVhcm5pbmcgYWxn
b3JpdGhtIGlzIHN1YnN0YW50aWFsbHkgbW9yZSBmbGV4aWJsZSB0aGFuIG1p
Z2h0IGJlIGV4cGVjdGVkLiBFeGFtcGxlcyBjYW4gaGF2ZSBmZWF0dXJlcyBj
b25zaXN0aW5nIG9mIGZyZWUgZm9ybSB0ZXh0LCB3aGljaCBpcyBpbnRlcnBy
ZXRlZCBpbiBhIGJhZy1vZi13b3JkcyB3YXkuIFRoZXJlIGNhbiBldmVuIGJl
IG11bHRpcGxlIHNldHMgb2YgZnJlZSBmb3JtIHRleHQgaW4gZGlmZmVyZW50
IG5hbWVzcGFjZXMuCi0gKipTcGVlZC4qKiBUaGUgbGVhcm5pbmcgYWxnb3Jp
dGhtIGlzIGZhc3QgLS0gc2ltaWxhciB0byB0aGUgZmV3IG90aGVyIG9ubGlu
ZSBhbGdvcml0aG0gaW1wbGVtZW50YXRpb25zIG91dCB0aGVyZS4gVGhlcmUg
YXJlIHNldmVyYWwgb3B0aW1pemF0aW9uIGFsZ29yaXRobXMgYXZhaWxhYmxl
IHdpdGggdGhlIGJhc2VsaW5lIGJlaW5nIHNwYXJzZSBncmFkaWVudCBkZXNj
ZW50IChHRCkgb24gYSBsb3NzIGZ1bmN0aW9uLgotICoqU2NhbGFiaWxpdHku
KiogVGhpcyBpcyBub3QgdGhlIHNhbWUgYXMgZmFzdC4gSW5zdGVhZCwgdGhl
IGltcG9ydGFudCBjaGFyYWN0ZXJpc3RpYyBoZXJlIGlzIHRoYXQgdGhlIG1l
bW9yeSBmb290cHJpbnQgb2YgdGhlIHByb2dyYW0gaXMgYm91bmRlZCBpbmRl
cGVuZGVudCBvZiBkYXRhLiBUaGlzIG1lYW5zIHRoZSB0cmFpbmluZyBzZXQg
aXMgbm90IGxvYWRlZCBpbnRvIG1haW4gbWVtb3J5IGJlZm9yZSBsZWFybmlu
ZyBzdGFydHMuIEluIGFkZGl0aW9uLCB0aGUgc2l6ZSBvZiB0aGUgc2V0IG9m
IGZlYXR1cmVzIGlzIGJvdW5kZWQgaW5kZXBlbmRlbnQgb2YgdGhlIGFtb3Vu
dCBvZiB0cmFpbmluZyBkYXRhIHVzaW5nIHRoZSBoYXNoaW5nIHRyaWNrLgot
ICoqRmVhdHVyZSBJbnRlcmFjdGlvbi4qKiBTdWJzZXRzIG9mIGZlYXR1cmVz
IGNhbiBiZSBpbnRlcm5hbGx5IHBhaXJlZCBzbyB0aGF0IHRoZSBhbGdvcml0
aG0gaXMgbGluZWFyIGluIHRoZSBjcm9zcy1wcm9kdWN0IG9mIHRoZSBzdWJz
ZXRzLiBUaGlzIGlzIHVzZWZ1bCBmb3IgcmFua2luZyBwcm9ibGVtcy4gVGhl
IGFsdGVybmF0aXZlIG9mIGV4cGxpY2l0bHkgZXhwYW5kaW5nIHRoZSBmZWF0
dXJlcyBiZWZvcmUgZmVlZGluZyB0aGVtIGludG8gdGhlIGxlYXJuaW5nIGFs
Z29yaXRobSBjYW4gYmUgYm90aCBjb21wdXRhdGlvbiBhbmQgc3BhY2UgaW50
ZW5zaXZlLCBkZXBlbmRpbmcgb24gaG93IGl0J3MgaGFuZGxlZC4KCltWaXNp
dCB0aGUgd2lraSB0byBsZWFybiBtb3JlLl0oaHR0cHM6Ly9naXRodWIuY29t
L1Zvd3BhbFdhYmJpdC92b3dwYWxfd2FiYml0L3dpa2kpCgojIyBHZXR0aW5n
IFN0YXJ0ZWQKRm9yIHRoZSBtb3N0IHVwIHRvIGRhdGUgaW5zdHJ1Y3Rpb25z
IGZvciBnZXR0aW5nIHN0YXJ0ZWQgb24gV2luZG93cywgTWFjT1Mgb3IgTGlu
dXggW3BsZWFzZSBzZWUgdGhlIHdpa2ldKGh0dHBzOi8vZ2l0aHViLmNvbS9W
b3dwYWxXYWJiaXQvdm93cGFsX3dhYmJpdC93aWtpL0dldHRpbmctc3RhcnRl
ZCkuIFRoaXMgaW5jbHVkZXM6CgotIFtJbnN0YWxsaW5nIHdpdGggYSBwYWNr
YWdlIG1hbmFnZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9Wb3dwYWxXYWJiaXQv
dm93cGFsX3dhYmJpdC93aWtpL0dldHRpbmctc3RhcnRlZCkKLSBbRGVwZW5k
ZW5jaWVzXShodHRwczovL2dpdGh1Yi5jb20vVm93cGFsV2FiYml0L3Zvd3Bh
bF93YWJiaXQvd2lraS9EZXBlbmRlbmNpZXMpCi0gW0J1aWxkaW5nXShodHRw
czovL2dpdGh1Yi5jb20vVm93cGFsV2FiYml0L3Zvd3BhbF93YWJiaXQvd2lr
aS9CdWlsZGluZykKLSBbVHV0b3JpYWxdKGh0dHBzOi8vZ2l0aHViLmNvbS9W
b3dwYWxXYWJiaXQvdm93cGFsX3dhYmJpdC93aWtpL1R1dG9yaWFsKQoK
",,6744,,"c3VkbzogcmVxdWlyZWQNCm9zOiBsaW51eA0Kc2VydmljZXM6DQogIC0gZG9j
a2VyDQoNCmJlZm9yZV9pbnN0YWxsOg0KICAtIGRvY2tlciBwdWxsIHZvd3Bh
bHdhYmJpdC91YnVudHUxNDA0LWJ1aWxkOjAuMS4xDQpzY3JpcHQ6DQogIC0g
ZG9ja2VyIHJ1biAtYSBTVERPVVQgLXYgYHB3ZGA6L3Z3IC10IHZvd3BhbHdh
YmJpdC91YnVudHUxNDA0LWJ1aWxkOjAuMS4xIC9iaW4vYmFzaCAtYyAiY2Qg
L3Z3ICYmIGNobW9kICt4IC4vYnVpbGQtbGludXguc2ggJiYgLi9idWlsZC1s
aW51eC5zaCINCg0KYWZ0ZXJfc3VjY2VzczoNCiAgLSBkb2NrZXIgcnVuIC1l
IFRSQVZJU19KT0JfSUQgLWUgVFJBVklTX0JSQU5DSCAtYSBTVERPVVQgLXYg
YHB3ZGA6L3Z3IC10IHZvd3BhbHdhYmJpdC91YnVudHUxNDA0LWJ1aWxkOjAu
MS4xIC9iaW4vYmFzaCAtYyAiY2QgL3Z3ICYmIGNvdmVyYWxscyAtLWluY2x1
ZGUgZXhwbG9yZSAtLWluY2x1ZGUgdm93cGFsd2FiYml0IC0tZ2Nvdi1vcHRp
b25zICdcLWxwJyINCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'electron-packager',32707901,"b'Customize and package your Electron app with OS-specific bundles (.app, .exe, etc.) via JS or CLI'",b'JavaScript',13,6743,,143,False,b'https://api.github.com/repos/electron/electron-packager/forks',"IyBFbGVjdHJvbiBQYWNrYWdlcgoKUGFja2FnZSB5b3VyIFtFbGVjdHJvbl0o
aHR0cHM6Ly9lbGVjdHJvbmpzLm9yZykgYXBwIGludG8gT1Mtc3BlY2lmaWMg
YnVuZGxlcyAoYC5hcHBgLCBgLmV4ZWAsIGV0Yy4pIHZpYSBKYXZhU2NyaXB0
IG9yIHRoZSBjb21tYW5kIGxpbmUuCgpbIVtDaXJjbGVDSSBCdWlsZCBTdGF0
dXNdKGh0dHBzOi8vY2lyY2xlY2kuY29tL2doL2VsZWN0cm9uL2VsZWN0cm9u
LXBhY2thZ2VyL3RyZWUvbWFzdGVyLnN2Zz9zdHlsZT1zdmcpXShodHRwczov
L2NpcmNsZWNpLmNvbS9naC9lbGVjdHJvbi9lbGVjdHJvbi1wYWNrYWdlci90
cmVlL21hc3RlcikKWyFbQ292ZXJhZ2UgU3RhdHVzXShodHRwczovL2NvZGVj
b3YuaW8vZ2gvZWxlY3Ryb24vZWxlY3Ryb24tcGFja2FnZXIvYnJhbmNoL21h
c3Rlci9ncmFwaC9iYWRnZS5zdmcpXShodHRwczovL2NvZGVjb3YuaW8vZ2gv
ZWxlY3Ryb24vZWxlY3Ryb24tcGFja2FnZXIpClshW0RlcGVuZGVuY3kgU3Rh
dHVzXShodHRwczovL2RlcGVuZGVuY3ljaS5jb20vZ2l0aHViL2VsZWN0cm9u
L2VsZWN0cm9uLXBhY2thZ2VyL2JhZGdlKV0oaHR0cHM6Ly9kZXBlbmRlbmN5
Y2kuY29tL2dpdGh1Yi9lbGVjdHJvbi9lbGVjdHJvbi1wYWNrYWdlcikKCltT
dXBwb3J0ZWQgUGxhdGZvcm1zXSgjc3VwcG9ydGVkLXBsYXRmb3JtcykgfApb
SW5zdGFsbGF0aW9uXSgjaW5zdGFsbGF0aW9uKSB8CltVc2FnZV0oI3VzYWdl
KSB8CltBUEldKGh0dHBzOi8vZ2l0aHViLmNvbS9lbGVjdHJvbi9lbGVjdHJv
bi1wYWNrYWdlci9ibG9iL21hc3Rlci9kb2NzL2FwaS5tZCkgfApbQ29udHJp
YnV0aW5nXShodHRwczovL2dpdGh1Yi5jb20vZWxlY3Ryb24vZWxlY3Ryb24t
cGFja2FnZXIvYmxvYi9tYXN0ZXIvQ09OVFJJQlVUSU5HLm1kKSB8CltTdXBw
b3J0XShodHRwczovL2dpdGh1Yi5jb20vZWxlY3Ryb24vZWxlY3Ryb24tcGFj
a2FnZXIvYmxvYi9tYXN0ZXIvU1VQUE9SVC5tZCkgfApbUmVsYXRlZCBBcHBz
L0xpYnJhcmllc10oI3JlbGF0ZWQpIHwKW0ZBUV0oaHR0cHM6Ly9naXRodWIu
Y29tL2VsZWN0cm9uL2VsZWN0cm9uLXBhY2thZ2VyL2Jsb2IvbWFzdGVyL2Rv
Y3MvZmFxLm1kKSB8CltSZWxlYXNlIE5vdGVzXShodHRwczovL2dpdGh1Yi5j
b20vZWxlY3Ryb24vZWxlY3Ryb24tcGFja2FnZXIvYmxvYi9tYXN0ZXIvTkVX
Uy5tZCkKCi0tLS0KCiMjIEFib3V0CgpFbGVjdHJvbiBQYWNrYWdlciBpcyBh
IGNvbW1hbmQgbGluZSB0b29sIGFuZCBOb2RlLmpzIGxpYnJhcnkgdGhhdCBi
dW5kbGVzIEVsZWN0cm9uLWJhc2VkIGFwcGxpY2F0aW9uCnNvdXJjZSBjb2Rl
IHdpdGggYSByZW5hbWVkIEVsZWN0cm9uIGV4ZWN1dGFibGUgYW5kIHN1cHBv
cnRpbmcgZmlsZXMgaW50byBmb2xkZXJzIHJlYWR5IGZvciBkaXN0cmlidXRp
b24uCgpGb3IgY3JlYXRpbmcgZGlzdHJpYnV0YWJsZXMgbGlrZSBpbnN0YWxs
ZXJzIGFuZCBMaW51eCBwYWNrYWdlcywgY29uc2lkZXIgdXNpbmcgZWl0aGVy
IFtFbGVjdHJvbgpGb3JnZV0oaHR0cHM6Ly9naXRodWIuY29tL2VsZWN0cm9u
LXVzZXJsYW5kL2VsZWN0cm9uLWZvcmdlKSAod2hpY2ggdXNlcyBFbGVjdHJv
biBQYWNrYWdlcgppbnRlcm5hbGx5KSwgb3Igb25lIG9mIHRoZSBbcmVsYXRl
ZCBFbGVjdHJvbiB0b29sc10oI2Rpc3RyaWJ1dGFibGUtY3JlYXRvcnMpLCB3
aGljaCB1dGlsaXplcwpFbGVjdHJvbiBQYWNrYWdlci1jcmVhdGVkIGZvbGRl
cnMgYXMgYSBiYXNpcy4KCk5vdGUgdGhhdCBwYWNrYWdlZCBFbGVjdHJvbiBh
cHBsaWNhdGlvbnMgY2FuIGJlIHJlbGF0aXZlbHkgbGFyZ2UuIEEgemlwcGVk
LCBtaW5pbWFsIEVsZWN0cm9uCmFwcGxpY2F0aW9uIGlzIGFwcHJveGltYXRl
bHkgdGhlIHNhbWUgc2l6ZSBhcyB0aGUgemlwcGVkIHByZWJ1aWx0IGJpbmFy
eSBmb3IgYSBnaXZlbiB0YXJnZXQKcGxhdGZvcm0sIHRhcmdldCBhcmNoLCBh
bmQgW0VsZWN0cm9uIHZlcnNpb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9lbGVj
dHJvbi9lbGVjdHJvbi9yZWxlYXNlcykKXyhmaWxlcyBuYW1lZCBgZWxlY3Ry
b24tdiR7dmVyc2lvbn0tJHtwbGF0Zm9ybX0tJHthcmNofS56aXBgKV8uCgoj
IyBTdXBwb3J0ZWQgUGxhdGZvcm1zCgpFbGVjdHJvbiBQYWNrYWdlciBpcyBr
bm93biB0byBydW4gb24gdGhlIGZvbGxvd2luZyAqKmhvc3QqKiBwbGF0Zm9y
bXM6CgoqIFdpbmRvd3MgKDMyLzY0IGJpdCkKKiBtYWNPUyAoZm9ybWVybHkg
a25vd24gYXMgT1MgWCkKKiBMaW51eCAoeDg2L3g4Nl82NCkKCkl0IGdlbmVy
YXRlcyBleGVjdXRhYmxlcy9idW5kbGVzIGZvciB0aGUgZm9sbG93aW5nICoq
dGFyZ2V0KiogcGxhdGZvcm1zOgoKKiBXaW5kb3dzIChhbHNvIGtub3duIGFz
IGB3aW4zMmAsIGZvciB4ODYsIHg4Nl82NCwgYW5kIGFybTY0IGFyY2hpdGVj
dHVyZXMpCiogbWFjT1MgKGFsc28ga25vd24gYXMgYGRhcndpbmApIC8gW01h
YyBBcHAgU3RvcmVdKGh0dHBzOi8vZWxlY3Ryb25qcy5vcmcvZG9jcy90dXRv
cmlhbC9tYWMtYXBwLXN0b3JlLXN1Ym1pc3Npb24tZ3VpZGUvKSAoYWxzbyBr
bm93biBhcyBgbWFzYCk8c3VwPio8L3N1cD4KKiBMaW51eCAoZm9yIHg4Niwg
eDg2XzY0LCBhcm12N2wsIGFybTY0LCBhbmQgbWlwczY0ZWwgYXJjaGl0ZWN0
dXJlcykKCjxzdXA+Kjwvc3VwPiAqTm90ZSBmb3IgbWFjT1MgLyBNYWMgQXBw
IFN0b3JlIHRhcmdldCBidW5kbGVzOiB0aGUgYC5hcHBgIGJ1bmRsZSBjYW4g
b25seSBiZSBzaWduZWQgd2hlbiBidWlsZGluZyBvbiBhIGhvc3QgbWFjT1Mg
cGxhdGZvcm0uKgoKIyMgSW5zdGFsbGF0aW9uCgpUaGlzIG1vZHVsZSByZXF1
aXJlcyBOb2RlLmpzIDguMCBvciBoaWdoZXIgdG8gcnVuLiBPbiBtYWNPUy9M
aW51eCwgdGhlIGB1bnppcGAgcHJvZ3JhbSBpcyByZXF1aXJlZC4gT24gV2lu
ZG93cywgYm90aCBbLk5FVCBGcmFtZXdvcmsgNC41IG9yIGhpZ2hlciBhbmQg
UG93ZXJzaGVsbCAzIG9yIGhpZ2hlciBhcmUgcmVxdWlyZWRdKGh0dHBzOi8v
Z2l0aHViLmNvbS9mZXJvc3MvY3Jvc3MtemlwI3dpbmRvd3MtdXNlcnMpLgoK
YGBgc2gKIyBGb3IgdXNlIGluIG5wbSBzY3JpcHRzIChyZWNvbW1lbmRlZCkK
bnBtIGluc3RhbGwgZWxlY3Ryb24tcGFja2FnZXIgLS1zYXZlLWRldgoKIyBG
b3IgdXNlIGZyb20gdGhlIENMSQpucG0gaW5zdGFsbCBlbGVjdHJvbi1wYWNr
YWdlciAtZwpgYGAKCiMjIyBCdWlsZGluZyBXaW5kb3dzIGFwcHMgZnJvbSBu
b24tV2luZG93cyBwbGF0Zm9ybXMKCkJ1aWxkaW5nIGFuIEVsZWN0cm9uIGFw
cCBmb3IgdGhlIFdpbmRvd3MgdGFyZ2V0IHBsYXRmb3JtIHJlcXVpcmVzIGVk
aXRpbmcgdGhlIGBFbGVjdHJvbi5leGVgIGZpbGUuCkN1cnJlbnRseSwgRWxl
Y3Ryb24gUGFja2FnZXIgdXNlcyBbbm9kZS1yY2VkaXRdKGh0dHBzOi8vZ2l0
aHViLmNvbS9hdG9tL25vZGUtcmNlZGl0KSB0byBhY2NvbXBsaXNoCnRoaXMu
IEEgV2luZG93cyBleGVjdXRhYmxlIGlzIGJ1bmRsZWQgaW4gdGhhdCBOb2Rl
IHBhY2thZ2UgYW5kIG5lZWRzIHRvIGJlIHJ1biBpbiBvcmRlciBmb3IgdGhp
cwpmdW5jdGlvbmFsaXR5IHRvIHdvcmssIHNvIG9uIG5vbi1XaW5kb3dzIGhv
c3QgcGxhdGZvcm1zLCBbV2luZV0oaHR0cHM6Ly93d3cud2luZWhxLm9yZy8p
IDEuNiBvcgpsYXRlciBuZWVkcyB0byBiZSBpbnN0YWxsZWQuIE9uIG1hY09T
LCBpdCBpcyBpbnN0YWxsYWJsZSB2aWEgW0hvbWVicmV3XShodHRwOi8vYnJl
dy5zaC8pLgoKIyMgVXNhZ2UKCkphdmFTY3JpcHQgQVBJIHVzYWdlIGNhbiBi
ZSBmb3VuZCBpbiB0aGUgW0FQSSBkb2N1bWVudGF0aW9uXShodHRwczovL2dp
dGh1Yi5jb20vZWxlY3Ryb24vZWxlY3Ryb24tcGFja2FnZXIvYmxvYi9tYXN0
ZXIvZG9jcy9hcGkubWQpLgoKIyMjIEZyb20gdGhlIENvbW1hbmQgTGluZQoK
UnVubmluZyBlbGVjdHJvbi1wYWNrYWdlciBmcm9tIHRoZSBjb21tYW5kIGxp
bmUgaGFzIHRoaXMgYmFzaWMgZm9ybToKCmBgYAplbGVjdHJvbi1wYWNrYWdl
ciA8c291cmNlZGlyPiA8YXBwbmFtZT4gLS1wbGF0Zm9ybT08cGxhdGZvcm0+
IC0tYXJjaD08YXJjaD4gW29wdGlvbmFsIGZsYWdzLi4uXQpgYGAKClRoaXMg
d2lsbDoKCi0gRmluZCBvciBkb3dubG9hZCB0aGUgY29ycmVjdCByZWxlYXNl
IG9mIEVsZWN0cm9uCi0gVXNlIHRoYXQgdmVyc2lvbiBvZiBFbGVjdHJvbiB0
byBjcmVhdGUgYSBhcHAgaW4gYDxvdXQ+LzxhcHBuYW1lPi08cGxhdGZvcm0+
LTxhcmNoPmAgKih0aGlzIGNhbiBiZSBjdXN0b21pemVkIHZpYSBhbiBvcHRp
b25hbCBmbGFnKSoKCmAtLXBsYXRmb3JtYCBhbmQgYC0tYXJjaGAgY2FuIGJl
IG9taXR0ZWQsIGluIHR3byBjYXNlczoKCiogSWYgeW91IHNwZWNpZnkgYC0t
YWxsYCBpbnN0ZWFkLCBidW5kbGVzIGZvciBhbGwgdmFsaWQgY29tYmluYXRp
b25zIG9mIHRhcmdldAogIHBsYXRmb3Jtcy9hcmNoaXRlY3R1cmVzIHdpbGwg
YmUgY3JlYXRlZC4KKiBPdGhlcndpc2UsIGEgc2luZ2xlIGJ1bmRsZSBmb3Ig
dGhlIGhvc3QgcGxhdGZvcm0vYXJjaGl0ZWN0dXJlIHdpbGwgYmUgY3JlYXRl
ZC4KCkZvciBhbiBvdmVydmlldyBvZiB0aGUgb3RoZXIgb3B0aW9uYWwgZmxh
Z3MsIHJ1biBgZWxlY3Ryb24tcGFja2FnZXIgLS1oZWxwYCBvciBzZWUKW3Vz
YWdlLnR4dF0oaHR0cHM6Ly9naXRodWIuY29tL2VsZWN0cm9uL2VsZWN0cm9u
LXBhY2thZ2VyL2Jsb2IvbWFzdGVyL3VzYWdlLnR4dCkuIEZvcgpkZXRhaWxl
ZCBkZXNjcmlwdGlvbnMsIHNlZSB0aGUgW0FQSSBkb2N1bWVudGF0aW9uXSho
dHRwczovL2dpdGh1Yi5jb20vZWxlY3Ryb24vZWxlY3Ryb24tcGFja2FnZXIv
YmxvYi9tYXN0ZXIvZG9jcy9hcGkubWQpLgoKSWYgYGFwcG5hbWVgIGlzIG9t
aXR0ZWQsIHRoaXMgd2lsbCB1c2UgdGhlIG5hbWUgc3BlY2lmaWVkIGJ5ICJw
cm9kdWN0TmFtZSIgb3IgIm5hbWUiIGluIHRoZSBuZWFyZXN0IHBhY2thZ2Uu
anNvbi4KCioqQ2hhcmFjdGVycyBpbiB0aGUgRWxlY3Ryb24gYXBwIG5hbWUg
d2hpY2ggYXJlIG5vdCBhbGxvd2VkIGluIGFsbCB0YXJnZXQgcGxhdGZvcm1z
JyBmaWxlbmFtZXMKKGUuZy4sIGAvYCksIHdpbGwgYmUgcmVwbGFjZWQgYnkg
aHlwaGVucyAoYC1gKS4qKgoKWW91IHNob3VsZCBiZSBhYmxlIHRvIGxhdW5j
aCB0aGUgYXBwIG9uIHRoZSBwbGF0Zm9ybSB5b3UgYnVpbHQgZm9yLiBJZiBu
b3QsIGNoZWNrIHlvdXIgc2V0dGluZ3MgYW5kIHRyeSBhZ2Fpbi4KCioqQmUg
Y2FyZWZ1bCoqIG5vdCB0byBpbmNsdWRlIGBub2RlX21vZHVsZXNgIHlvdSBk
b24ndCB3YW50IGludG8geW91ciBmaW5hbCBhcHAuIElmIHlvdSBwdXQgdGhl
bSBpbgp0aGUgYGRldkRlcGVuZGVuY2llc2Agc2VjdGlvbiBvZiBgcGFja2Fn
ZS5qc29uYCwgYnkgZGVmYXVsdCBub25lIG9mIHRoZSBtb2R1bGVzIHJlbGF0
ZWQgdG8gdGhvc2UKZGVwZW5kZW5jaWVzIHdpbGwgYmUgY29waWVkIGluIHRo
ZSBhcHAgYnVuZGxlcy4gKFRoaXMgYmVoYXZpb3IgY2FuIGJlIHR1cm5lZCBv
ZmYgd2l0aCB0aGUKYC0tbm8tcHJ1bmVgIGZsYWcuKSBJbiBhZGRpdGlvbiwg
Zm9sZGVycyBsaWtlIGAuZ2l0YCBhbmQgYG5vZGVfbW9kdWxlcy8uYmluYCB3
aWxsIGJlIGlnbm9yZWQgYnkKZGVmYXVsdC4gWW91IGNhbiB1c2UgYC0taWdu
b3JlYCB0byBpZ25vcmUgZmlsZXMgYW5kIGZvbGRlcnMgdmlhIGEgcmVndWxh
ciBleHByZXNzaW9uICgqbm90KiBhCltnbG9iIHBhdHRlcm5dKGh0dHBzOi8v
ZW4ud2lraXBlZGlhLm9yZy93aWtpL0dsb2JfJTI4cHJvZ3JhbW1pbmclMjkp
KS4gRXhhbXBsZXMgaW5jbHVkZQpgLS1pZ25vcmU9XC5naXRpZ25vcmVgIG9y
IGAtLWlnbm9yZT0iXC5naXQoaWdub3JlfG1vZHVsZXMpImAuCgojIyMjIEV4
YW1wbGUKCkxldCdzIGFzc3VtZSB0aGF0IHlvdSBoYXZlIG1hZGUgYW4gYXBw
IGJhc2VkIG9uIHRoZSBbZWxlY3Ryb24tcXVpY2stc3RhcnRdKGh0dHBzOi8v
Z2l0aHViLmNvbS9lbGVjdHJvbi9lbGVjdHJvbi1xdWljay1zdGFydCkgcmVw
b3NpdG9yeSBvbiBhIG1hY09TIGhvc3QgcGxhdGZvcm0gd2l0aCB0aGUgZm9s
bG93aW5nIGZpbGUgc3RydWN0dXJlOgoKYGBgCmZvb2JhcgrilJzilIDilIAg
cGFja2FnZS5qc29uCuKUnOKUgOKUgCBpbmRleC5odG1sCuKUnOKUgOKUgCBb
4oCmb3RoZXIgZmlsZXMsIGxpa2UgdGhlIGFwcCdzIExJQ0VOU0XigKZdCuKU
lOKUgOKUgCBzY3JpcHQuanMKYGBgCgrigKZhbmQgdGhhdCB0aGUgZm9sbG93
aW5nIGlzIHRydWU6CgoqIGBlbGVjdHJvbi1wYWNrYWdlcmAgaXMgaW5zdGFs
bGVkIGdsb2JhbGx5CiogYHByb2R1Y3ROYW1lYCBpbiBgcGFja2FnZS5qc29u
YCBoYXMgYmVlbiBzZXQgdG8gYEZvbyBCYXJgCiogVGhlIGBlbGVjdHJvbmAg
bW9kdWxlIGlzIGluIHRoZSBgZGV2RGVwZW5kZW5jaWVzYCBzZWN0aW9uIG9m
IGBwYWNrYWdlLmpzb25gLCBhbmQgc2V0IHRvIHRoZSBleGFjdCB2ZXJzaW9u
IG9mIGAxLjQuMTVgLgoqIGBucG0gaW5zdGFsbGAgZm9yIHRoZSBgRm9vIEJh
cmAgYXBwIGhhcyBiZWVuIHJ1biBhdCBsZWFzdCBvbmNlCgpXaGVuIG9uZSBy
dW5zIHRoZSBmb2xsb3dpbmcgY29tbWFuZCBmb3IgdGhlIGZpcnN0IHRpbWUg
aW4gdGhlIGBmb29iYXJgIGRpcmVjdG9yeToKCmBgYAplbGVjdHJvbi1wYWNr
YWdlciAuCmBgYAoKYGVsZWN0cm9uLXBhY2thZ2VyYCB3aWxsIGRvIHRoZSBm
b2xsb3dpbmc6CgoqIFVzZSB0aGUgY3VycmVudCBkaXJlY3RvcnkgZm9yIHRo
ZSBgc291cmNlZGlyYAoqIEluZmVyIHRoZSBgYXBwbmFtZWAgZnJvbSB0aGUg
YHByb2R1Y3ROYW1lYCBpbiBgcGFja2FnZS5qc29uYAoqIEluZmVyIHRoZSBg
YXBwVmVyc2lvbmAgZnJvbSB0aGUgYHZlcnNpb25gIGluIGBwYWNrYWdlLmpz
b25gCiogSW5mZXIgdGhlIGBwbGF0Zm9ybWAgYW5kIGBhcmNoYCBmcm9tIHRo
ZSBob3N0LCBpbiB0aGlzIGV4YW1wbGUsIGBkYXJ3aW5gIHBsYXRmb3JtIGFu
ZCBgeDY0YCBhcmNoLgoqIERvd25sb2FkIHRoZSBkYXJ3aW4geDY0IGJ1aWxk
IG9mIEVsZWN0cm9uIDEuNC4xNSAoYW5kIGNhY2hlIHRoZSBkb3dubG9hZHMg
aW4gYH4vLmVsZWN0cm9uYCkKKiBCdWlsZCB0aGUgbWFjT1MgYEZvbyBCYXIu
YXBwYAoqIFBsYWNlIGBGb28gQmFyLmFwcGAgaW4gYGZvb2Jhci9Gb28gQmFy
LWRhcndpbi14NjQvYCAoc2luY2UgYW4gYG91dGAgZGlyZWN0b3J5IHdhcyBu
b3Qgc3BlY2lmaWVkLCBpdCB1c2VkIHRoZSBjdXJyZW50IHdvcmtpbmcgZGly
ZWN0b3J5KQoKVGhlIGZpbGUgc3RydWN0dXJlIG5vdyBsb29rcyBsaWtlOgoK
YGBgCmZvb2JhcgrilJzilIDilIAgRm9vIEJhci1kYXJ3aW4teDY0CuKUgsKg
wqAg4pSc4pSA4pSAIEZvbyBCYXIuYXBwCuKUgsKgwqAg4pSCwqDCoCDilJTi
lIDilIAgW+KApk1hYyBhcHAgY29udGVudHPigKZdCuKUgiAgIOKUnOKUgOKU
gCBMSUNFTlNFIFt0aGUgRWxlY3Ryb24gbGljZW5zZV0K4pSCICAg4pSU4pSA
4pSAIHZlcnNpb24K4pSc4pSA4pSAIFvigKZvdGhlciBhcHBsaWNhdGlvbiBi
dW5kbGVzLCBsaWtlICJGb28gQmFyLXdpbjMyLXg2NCIgKHNhbnMgcXVvdGVz
KeKApl0K4pSc4pSA4pSAIHBhY2thZ2UuanNvbgrilJzilIDilIAgaW5kZXgu
aHRtbArilJzilIDilIAgW+KApm90aGVyIGZpbGVzLCBsaWtlIHRoZSBhcHAn
cyBMSUNFTlNF4oCmXQrilJTilIDilIAgc2NyaXB0LmpzCmBgYAoKVGhlIGBG
b28gQmFyLmFwcGAgZm9sZGVyIGdlbmVyYXRlZCBjYW4gYmUgZXhlY3V0ZWQg
YnkgYSBzeXN0ZW0gcnVubmluZyBtYWNPUywgd2hpY2ggd2lsbCBzdGFydCB0
aGUgcGFja2FnZWQgRWxlY3Ryb24gYXBwLiBUaGlzIGlzIGFsc28gdHJ1ZSBv
ZiB0aGUgV2luZG93cyB4NjQgYnVpbGQgb24gYSBzeXN0ZW0gcnVubmluZyBh
IG5ldyBlbm91Z2ggdmVyc2lvbiBvZiBXaW5kb3dzIGZvciBhIDY0LWJpdCBz
eXN0ZW0gKHZpYSBgRm9vIEJhci13aW4zMi14NjQvRm9vIEJhci5leGVgKSwg
YW5kIHNvIG9uLgoKIyMgUmVsYXRlZAoKLSBbRWxlY3Ryb24gRm9yZ2VdKGh0
dHBzOi8vZ2l0aHViLmNvbS9lbGVjdHJvbi11c2VybGFuZC9lbGVjdHJvbi1m
b3JnZSkgLSBjcmVhdGVzLCBidWlsZHMsIGFuZCBkaXN0cmlidXRlcyBtb2Rl
cm4gRWxlY3Ryb24gYXBwbGljYXRpb25zCi0gW2VsZWN0cm9uLXBhY2thZ2Vy
LWludGVyYWN0aXZlXShodHRwczovL2dpdGh1Yi5jb20vVXJ1Y2FzL2VsZWN0
cm9uLXBhY2thZ2VyLWludGVyYWN0aXZlKSAtIGFuIGludGVyYWN0aXZlIENM
SSBmb3IgZWxlY3Ryb24tcGFja2FnZXIKLSBbZ3J1bnQtZWxlY3Ryb25dKGh0
dHBzOi8vZ2l0aHViLmNvbS9zaW5kcmVzb3JodXMvZ3J1bnQtZWxlY3Ryb24p
IC0gZ3J1bnQgcGx1Z2luIGZvciBlbGVjdHJvbi1wYWNrYWdlcgoKIyMjIERp
c3RyaWJ1dGFibGUgQ3JlYXRvcnMKCiogW2VsZWN0cm9uLWluc3RhbGxlci16
aXBdKGh0dHBzOi8vZ2l0aHViLmNvbS9lbGVjdHJvbi11c2VybGFuZC9lbGVj
dHJvbi1pbnN0YWxsZXItemlwKSAtIGNyZWF0ZXMgc3ltbGluay1jb21wYXRp
YmxlIFpJUCBmaWxlcwoKV2luZG93czoKCiogW2VsZWN0cm9uLXdpbnN0YWxs
ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9lbGVjdHJvbi93aW5kb3dzLWluc3Rh
bGxlcikgLSBTcXVpcnJlbC5XaW5kb3dzLWJhc2VkIGluc3RhbGxlciBmcm9t
IHRoZSBFbGVjdHJvbiBtYWludGFpbmVycyBncm91cAoqIFtlbGVjdHJvbi13
aW5kb3dzLXN0b3JlXShodHRwczovL2dpdGh1Yi5jb20vZmVsaXhyaWVzZWJl
cmcvZWxlY3Ryb24td2luZG93cy1zdG9yZSkgLSBjcmVhdGVzIGFuIEFwcFgg
cGFja2FnZSBmb3IgdGhlIFdpbmRvd3MgU3RvcmUKKiBbZWxlY3Ryb24td2l4
LW1zaV0oaHR0cHM6Ly9naXRodWIuY29tL2ZlbGl4cmllc2ViZXJnL2VsZWN0
cm9uLXdpeC1tc2kpIC0gY3JlYXRlcyB0cmFkaXRpb25hbCBNU0kgaW5zdGFs
bGVycwoqIFtlbGVjdHJvbi1pbnN0YWxsZXItd2luZG93c10oaHR0cHM6Ly9n
aXRodWIuY29tL2VsZWN0cm9uLXVzZXJsYW5kL2VsZWN0cm9uLWluc3RhbGxl
ci13aW5kb3dzKSAtIGFsdGVybmF0aXZlIFNxdWlycmVsLldpbmRvd3MtYmFz
ZWQgaW5zdGFsbGVyCgptYWNPUzoKCiogW2VsZWN0cm9uLWluc3RhbGxlci1k
bWddKGh0dHBzOi8vZ2l0aHViLmNvbS9lbGVjdHJvbi11c2VybGFuZC9lbGVj
dHJvbi1pbnN0YWxsZXItZG1nKSAtIGNyZWF0ZXMgYSBETUcKCkxpbnV4OgoK
KiBbZWxlY3Ryb24taW5zdGFsbGVyLWRlYmlhbl0oaHR0cHM6Ly9naXRodWIu
Y29tL2VsZWN0cm9uLXVzZXJsYW5kL2VsZWN0cm9uLWluc3RhbGxlci1kZWJp
YW4pIC0gY3JlYXRlcyBhIERFQiBmaWxlCiogW2VsZWN0cm9uLWluc3RhbGxl
ci1yZWRoYXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9lbGVjdHJvbi11c2VybGFu
ZC9lbGVjdHJvbi1pbnN0YWxsZXItcmVkaGF0KSAtIGNyZWF0ZXMgYW4gUlBN
CiogW2VsZWN0cm9uLWluc3RhbGxlci1mbGF0cGFrXShodHRwczovL2dpdGh1
Yi5jb20vZW5kbGVzc20vZWxlY3Ryb24taW5zdGFsbGVyLWZsYXRwYWspIC0g
Y3JlYXRlcyBhIEZsYXRwYWsgZmlsZQoqIFtlbGVjdHJvbi1pbnN0YWxsZXIt
c25hcF0oaHR0cHM6Ly9naXRodWIuY29tL2VsZWN0cm9uLXVzZXJsYW5kL2Vs
ZWN0cm9uLWluc3RhbGxlci1zbmFwKSAtIGNyZWF0ZXMgYSBTbmFwIGZpbGUK
CiMjIyBQbHVnaW5zCgpUaGVzZSBOb2RlIG1vZHVsZXMgdXRpbGl6ZSBFbGVj
dHJvbiBQYWNrYWdlciBBUEkgaG9va3M6CgotIFtlbGVjdHJvbi1wYWNrYWdl
ci1sYW5ndWFnZXNdKGh0dHBzOi8vbnBtLmltL2VsZWN0cm9uLXBhY2thZ2Vy
LWxhbmd1YWdlcykgLSBzZXQgdGhlIGxvY2FsZXMKICBhdmFpbGFibGUgdG8g
RWxlY3Ryb24gd2hlbiBwYWNrYWdlZCwgd2hpY2ggaXMgdXNlZCBieSB0aGUg
TWFjIEFwcCBTdG9yZSwgYW1vbmcgb3RoZXIgcGxhY2VzCi0gW2VsZWN0cm9u
LXBhY2thZ2VyLXBsdWdpbi1ub24tcHJvcHJpZXRhcnktY29kZWNzLWZmbXBl
Z10oaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvZWxlY3Ryb24tcGFj
a2FnZXItcGx1Z2luLW5vbi1wcm9wcmlldGFyeS1jb2RlY3MtZmZtcGVnKSAt
IHJlcGxhY2VzIHRoZSBub3JtYWwgdmVyc2lvbiBvZiBGRm1wZWcgaW4gRWxl
Y3Ryb24gd2l0aCBhIHZlcnNpb24gd2l0aG91dCBwcm9wcmlldGFyeSBjb2Rl
Y3MKLSBbZWxlY3Ryb24tcmVidWlsZF0oaHR0cHM6Ly9naXRodWIuY29tL2Vs
ZWN0cm9uL2VsZWN0cm9uLXJlYnVpbGQpIC0gcmVidWlsZCBuYXRpdmUgTm9k
ZS5qcyBtb2R1bGVzCiAgYWdhaW5zdCB0aGUgcGFja2FnZWQgRWxlY3Ryb24g
dmVyc2lvbgo=
",,6743,"bmFtZTogZWxlY3Ryb24tbmlnaHRseSBDYW5hcnkKCm9uOgogIHNjaGVkdWxl
OgogICAgLSBjcm9uOiAnMTUgOCAqICogKicKCmpvYnM6CiAgYnVpbGQ6CiAg
ICBydW5zLW9uOiAke3sgbWF0cml4Lm9zIH19CiAgICBzdHJhdGVneToKICAg
ICAgbWF0cml4OgogICAgICAgIG9zOiBbd2luZG93cy1sYXRlc3QsIG1hY09T
LWxhdGVzdCwgdWJ1bnR1LWxhdGVzdF0KCiAgICBzdGVwczoKICAgICAgLSB1
c2VzOiBhY3Rpb25zL2NoZWNrb3V0QHYxCiAgICAgICAgd2l0aDoKICAgICAg
ICAgIHJlcG9zaXRvcnk6IGVsZWN0cm9uL2VsZWN0cm9uLXF1aWNrLXN0YXJ0
CiAgICAgICAgICByZWY6IHJlZnMvaGVhZHMvbWFzdGVyCiAgICAgICAgICBw
YXRoOiBlbGVjdHJvbi1xdWljay1zdGFydAogICAgICAtIG5hbWU6IFVzZSBO
b2RlLmpzIDgueAogICAgICAgIHVzZXM6IGFjdGlvbnMvc2V0dXAtbm9kZUB2
MQogICAgICAgIHdpdGg6CiAgICAgICAgICBub2RlLXZlcnNpb246IDgueAog
ICAgICAtIG5hbWU6IFJlcGxhY2UgZWxlY3Ryb24gd2l0aCBlbGVjdHJvbi1u
aWdodGx5CiAgICAgICAgcnVuOiB8CiAgICAgICAgICBjZCAkR0lUSFVCX1dP
UktTUEFDRS8uLi9lbGVjdHJvbi1xdWljay1zdGFydAogICAgICAgICAgbnBt
IHVuaW5zdGFsbCAtLXNhdmUtZGV2IGVsZWN0cm9uCiAgICAgICAgICBucG0g
aW5zdGFsbCAtLXNhdmUtZGV2IGVsZWN0cm9uLW5pZ2h0bHlAbGF0ZXN0CiAg
ICAgICAgc2hlbGw6IGJhc2gKICAgICAgLSBuYW1lOiBJbnN0YWxsIEVsZWN0
cm9uIFBhY2thZ2VyCiAgICAgICAgcnVuOiB8CiAgICAgICAgICBjZCAuLi9l
bGVjdHJvbi1xdWljay1zdGFydAogICAgICAgICAgbnBtIGluc3RhbGwgLS1z
YXZlLWRldiBlbGVjdHJvbi1wYWNrYWdlckBlbGVjdHJvbi9lbGVjdHJvbi1w
YWNrYWdlcgogICAgICAtIG5hbWU6IFBhY2thZ2UKICAgICAgICBydW46IHwK
ICAgICAgICAgIGNkIC4uL2VsZWN0cm9uLXF1aWNrLXN0YXJ0CiAgICAgICAg
ICBub2RlX21vZHVsZXMvLmJpbi9lbGVjdHJvbi1wYWNrYWdlciAuIC0tYXJj
aD1hbGwK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"c3RlcC1lbnY6ICZzdGVwLWVudgogIHJ1bjoKICAgICMgcHJldmVudCBXaW5l
IHBvcHVwIGRpYWxvZ3MgYWJvdXQgaW5zdGFsbGluZyBhZGRpdGlvbmFsIHBh
Y2thZ2VzCiAgICBuYW1lOiBTZXR1cCBFbnZpcm9ubWVudCBWYXJpYWJsZXMK
ICAgIGNvbW1hbmQ6IHwKICAgICAgZWNobyAnZXhwb3J0IFdJTkVETExPVkVS
UklERVM9Im1zY29yZWUsbXNodG1sPSInID4+ICRCQVNIX0VOVgogICAgICBl
Y2hvICdleHBvcnQgV0lORURFQlVHPSItYWxsIicgPj4gJEJBU0hfRU5WCgpz
dGVwLXJlc3RvcmUtZWxlY3Ryb24tY2FjaGU6ICZzdGVwLXJlc3RvcmUtZWxl
Y3Ryb24tY2FjaGUKICByZXN0b3JlX2NhY2hlOgogICAgbmFtZTogUmVzdG9y
aW5nIEVsZWN0cm9uIGNhY2hlCiAgICBwYXRoczoKICAgICAgLSAkSE9NRS8u
Y2FjaGUvZWxlY3Ryb24KICAgIGtleXM6CiAgICAgIC0gdjEtZWxlY3Ryb24t
Y2FjaGUte3sgYXJjaCB9fQoKc3RlcC1zYXZlLWVsZWN0cm9uLWNhY2hlOiAm
c3RlcC1zYXZlLWVsZWN0cm9uLWNhY2hlCiAgc2F2ZV9jYWNoZToKICAgIG5h
bWU6IFBlcnNpc3RpbmcgRWxlY3Ryb24gY2FjaGUKICAgIHBhdGhzOgogICAg
ICAtICRIT01FLy5jYWNoZS9lbGVjdHJvbgogICAga2V5OiB2MS1lbGVjdHJv
bi1jYWNoZS17eyBhcmNoIH19CgpzdGVwLXJlc3RvcmUtYnJldy1jYWNoZTog
JnN0ZXAtcmVzdG9yZS1icmV3LWNhY2hlCiAgcmVzdG9yZV9jYWNoZToKICAg
IG5hbWU6IFJlc3RvcmluZyBIb21lYnJldyBjYWNoZQogICAgcGF0aHM6CiAg
ICAgIC0gL3Vzci9sb2NhbC9Ib21lYnJldwogICAga2V5czoKICAgICAgLSB2
MS1icmV3LWNhY2hlLXt7IGFyY2ggfX0KCnN0ZXAtc2F2ZS1icmV3LWNhY2hl
OiAmc3RlcC1zYXZlLWJyZXctY2FjaGUKICBzYXZlX2NhY2hlOgogICAgbmFt
ZTogUGVyc2lzdGluZyBIb21lYnJldyBjYWNoZQogICAgcGF0aHM6CiAgICAg
IC0gL3Vzci9sb2NhbC9Ib21lYnJldwogICAga2V5OiB2MS1icmV3LWNhY2hl
LXt7IGFyY2ggfX0KCnN0ZXAtYmVmb3JlLWluc3RhbGw6ICZzdGVwLWJlZm9y
ZS1pbnN0YWxsCiAgcnVuOiB0ZXN0L2NpL2JlZm9yZV9pbnN0YWxsLnNoCgpz
dGVwcy1saW51eC13aW5kb3dzOiAmc3RlcHMtbGludXgtd2luZG93cwogIHN0
ZXBzOgogICAgLSBjaGVja291dAogICAgLSAqc3RlcC1lbnYKICAgIC0gKnN0
ZXAtYmVmb3JlLWluc3RhbGwKICAgIC0gcnVuOiBucG0gaW5zdGFsbAogICAg
LSAqc3RlcC1yZXN0b3JlLWVsZWN0cm9uLWNhY2hlCiAgICAtIHJ1bjogdGVz
dC9jaS9fYmVmb3JlX3NjcmlwdC5qcwogICAgLSAqc3RlcC1zYXZlLWVsZWN0
cm9uLWNhY2hlCiAgICAtIHJ1bjogbnBtIHRlc3QKICAgIC0gcnVuOiBucG0g
cnVuIGNvZGVjb3YKCnN0ZXBzLW1hYzogJnN0ZXBzLW1hYwogIHN0ZXBzOgog
ICAgLSBjaGVja291dAogICAgLSAqc3RlcC1lbnYKICAgIC0gKnN0ZXAtcmVz
dG9yZS1icmV3LWNhY2hlCiAgICAtICpzdGVwLWJlZm9yZS1pbnN0YWxsCiAg
ICAtICpzdGVwLXNhdmUtYnJldy1jYWNoZQogICAgLSBydW46IG5wbSBpbnN0
YWxsCiAgICAtICpzdGVwLXJlc3RvcmUtZWxlY3Ryb24tY2FjaGUKICAgIC0g
cnVuOiB0ZXN0L2NpL19iZWZvcmVfc2NyaXB0LmpzCiAgICAtICpzdGVwLXNh
dmUtZWxlY3Ryb24tY2FjaGUKICAgIC0gcnVuOiBucG0gdGVzdAogICAgLSBy
dW46IG5wbSBydW4gY29kZWNvdgoKdmVyc2lvbjogMi4xCm9yYnM6CiAgd2lu
OiBjaXJjbGVjaS93aW5kb3dzQDEuMC4wCmpvYnM6CiAgdGVzdC1saW51eC04
OgogICAgZG9ja2VyOgogICAgICAtIGltYWdlOiBjaXJjbGVjaS9ub2RlOjgK
ICAgIDw8OiAqc3RlcHMtbGludXgtd2luZG93cwogIHRlc3QtbGludXgtMTA6
CiAgICBkb2NrZXI6CiAgICAgIC0gaW1hZ2U6IGNpcmNsZWNpL25vZGU6MTAK
ICAgIDw8OiAqc3RlcHMtbGludXgtd2luZG93cwogIHRlc3QtbGludXgtMTI6
CiAgICBkb2NrZXI6CiAgICAgIC0gaW1hZ2U6IGNpcmNsZWNpL25vZGU6MTIK
ICAgIDw8OiAqc3RlcHMtbGludXgtd2luZG93cwogIHRlc3QtbWFjOgogICAg
bWFjb3M6CiAgICAgIHhjb2RlOiAiMTAuMi4wIgogICAgPDw6ICpzdGVwcy1t
YWMKICB0ZXN0LXdpbmRvd3M6CiAgICBleGVjdXRvcjoKICAgICAgbmFtZTog
d2luL3ZzMjAxOQogICAgICBzaGVsbDogYmFzaC5leGUKICAgIDw8OiAqc3Rl
cHMtbGludXgtd2luZG93cwoKd29ya2Zsb3dzOgogIHZlcnNpb246IDIKICB0
ZXN0OgogICAgam9iczoKICAgICAgLSB0ZXN0LWxpbnV4LTgKICAgICAgLSB0
ZXN0LWxpbnV4LTEwCiAgICAgIC0gdGVzdC1saW51eC0xMgogICAgICAtIHRl
c3QtbWFjCiAgICAgIC0gdGVzdC13aW5kb3dzCg==
",,,,,,,,,,,,,,,,,,,,,,,
b'muduo',648343,b'A C++ non-blocking network library for multi-threaded server in Linux',b'C++',52,6742,,748,False,b'https://api.github.com/repos/chenshuo/muduo/forks',"TXVkdW8gaXMgYSBtdWx0aXRocmVhZGVkIEMrKyBuZXR3b3JrIGxpYnJhcnkg
YmFzZWQgb24KdGhlIHJlYWN0b3IgcGF0dGVybi4KCmh0dHA6Ly9naXRodWIu
Y29tL2NoZW5zaHVvL211ZHVvCgpDb3B5cmlnaHQgKGMpIDIwMTAsIFNodW8g
Q2hlbi4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuCgpVc2Ugb2YgdGhpcyBzb3Vy
Y2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhIEJTRC1zdHlsZQpsaWNlbnNlIHRo
YXQgY2FuIGJlIGZvdW5kIGluIHRoZSBMaWNlbnNlIGZpbGUuCgpSZXF1aXJl
czoKICBMaW51eCBrZXJuZWwgdmVyc2lvbiA+PSAyLjYuMjguCiAgR0NDID49
IDQuNyBvciBDbGFuZyA+PSAzLjUKICBCb29zdCAoZm9yIGJvb3N0Ojphbnkg
b25seS4pCgpUZXN0ZWQgb246CiAgRGViaWFuIDcgYW5kIGFib3ZlCiAgVW5i
dW50dSAxNC4wNCBhbmQgYWJvdmUKICBDZW50T1MgNyBhbmQgYWJvdmUKClRv
IGJ1aWxkLCBydW46CiAgLi9idWlsZC5zaAoKU2VlIGh0dHBzOi8vZ2l0aHVi
LmNvbS9jaGVuc2h1by9tdWR1by10dXRvcmlhbCBmb3IKaG93IHRvIHVzZSBt
dWR1byBpbiB5b3VyIHByb2plY3QuCiAgX18gIF9fICAgICAgICAgICBfCiB8
ICBcLyAgfCAgICAgICAgIHwgfAogfCBcICAvIHxfICAgXyAgX198IHxfICAg
XyAgX19fCiB8IHxcL3wgfCB8IHwgfC8gX2AgfCB8IHwgfC8gXyBcCiB8IHwg
IHwgfCB8X3wgfCAoX3wgfCB8X3wgfCAoXykgfAogfF98ICB8X3xcX18sX3xc
X18sX3xcX18sX3xcX19fLwoK
",,6742,,"bGFuZ3VhZ2U6IGNwcApzdWRvOiByZXF1aXJlZApkaXN0OiB0cnVzdHkKY29t
cGlsZXI6CiAgLSBnY2MKICAtIGNsYW5nCm9zOgogIC0gbGludXgKaW5zdGFs
bDoKICAtIHN1ZG8gYXB0LWdldCBpbnN0YWxsIGxpYmJvb3N0LWRldgogIC0g
c3VkbyBhcHQtZ2V0IGluc3RhbGwgbGlicHJvdG9idWYtZGV2IHByb3RvYnVm
LWNvbXBpbGVyIGxpYnByb3RvYy1kZXYgbGliZ29vZ2xlLXBlcmZ0b29scy1k
ZXYKICAtIHN1ZG8gYXB0LWdldCBpbnN0YWxsIGxpYmJvb3N0LXRlc3QtZGV2
IGxpYmJvb3N0LXByb2dyYW0tb3B0aW9ucy1kZXYgbGliYm9vc3Qtc3lzdGVt
LWRldgogIC0gc3VkbyBhcHQtZ2V0IGluc3RhbGwgbGliYy1hcmVzLWRldiBs
aWJjdXJsNC1vcGVuc3NsLWRldgogIC0gc3VkbyBhcHQtZ2V0IGluc3RhbGwg
emxpYjFnLWRldiBsaWJnZC1kZXYKZW52OgogIC0gQlVJTERfVFlQRT1kZWJ1
ZwogIC0gQlVJTERfVFlQRT1yZWxlYXNlCnNjcmlwdDoKICAtIC4vYnVpbGQu
c2gK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'CoreNLP',11008076,b'Stanford CoreNLP: A Java suite of core NLP tools.',b'Java',188,6742,,529,False,b'https://api.github.com/repos/stanfordnlp/CoreNLP/forks',"IyBTdGFuZm9yZCBDb3JlTkxQCgpbIVtCdWlsZCBTdGF0dXNdKGh0dHBzOi8v
dHJhdmlzLWNpLm9yZy9zdGFuZm9yZG5scC9Db3JlTkxQLnN2Zz9icmFuY2g9
bWFzdGVyKV0oaHR0cHM6Ly90cmF2aXMtY2kub3JnL3N0YW5mb3JkbmxwL0Nv
cmVOTFApClshW01hdmVuIENlbnRyYWxdKGh0dHBzOi8vaW1nLnNoaWVsZHMu
aW8vbWF2ZW4tY2VudHJhbC92L2VkdS5zdGFuZm9yZC5ubHAvc3RhbmZvcmQt
Y29yZW5scC5zdmcpXShodHRwczovL212bnJlcG9zaXRvcnkuY29tL2FydGlm
YWN0L2VkdS5zdGFuZm9yZC5ubHAvc3RhbmZvcmQtY29yZW5scCkKWyFbVHdp
dHRlcl0oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby90d2l0dGVyL2ZvbGxvdy9z
dGFuZm9yZG5scC5zdmc/c3R5bGU9c29jaWFsJmxhYmVsPUZvbGxvdyldKGh0
dHBzOi8vdHdpdHRlci5jb20vc3RhbmZvcmRubHAvKQoKU3RhbmZvcmQgQ29y
ZU5MUCBwcm92aWRlcyBhIHNldCBvZiBuYXR1cmFsIGxhbmd1YWdlIGFuYWx5
c2lzIHRvb2xzIHdyaXR0ZW4gaW4gSmF2YS4gSXQgY2FuIHRha2UgcmF3IGh1
bWFuIGxhbmd1YWdlIHRleHQgaW5wdXQgYW5kIGdpdmUgdGhlIGJhc2UgZm9y
bXMgb2Ygd29yZHMsIHRoZWlyIHBhcnRzIG9mIHNwZWVjaCwgd2hldGhlciB0
aGV5IGFyZSBuYW1lcyBvZiBjb21wYW5pZXMsIHBlb3BsZSwgZXRjLiwgbm9y
bWFsaXplIGFuZCBpbnRlcnByZXQgZGF0ZXMsIHRpbWVzLCBhbmQgbnVtZXJp
YyBxdWFudGl0aWVzLCBtYXJrIHVwIHRoZSBzdHJ1Y3R1cmUgb2Ygc2VudGVu
Y2VzIGluIHRlcm1zIG9mIHBocmFzZXMgb3Igd29yZCBkZXBlbmRlbmNpZXMs
IGFuZCBpbmRpY2F0ZSB3aGljaCBub3VuIHBocmFzZXMgcmVmZXIgdG8gdGhl
IHNhbWUgZW50aXRpZXMuIEl0IHdhcyBvcmlnaW5hbGx5IGRldmVsb3BlZCBm
b3IgRW5nbGlzaCwgYnV0IG5vdyBhbHNvIHByb3ZpZGVzIHZhcnlpbmcgbGV2
ZWxzIG9mIHN1cHBvcnQgZm9yIChNb2Rlcm4gU3RhbmRhcmQpIEFyYWJpYywg
KG1haW5sYW5kKSBDaGluZXNlLCBGcmVuY2gsIEdlcm1hbiwgYW5kIFNwYW5p
c2guIFN0YW5mb3JkIENvcmVOTFAgaXMgYW4gaW50ZWdyYXRlZCBmcmFtZXdv
cmssIHdoaWNoIG1ha2VzIGl0IHZlcnkgZWFzeSB0byBhcHBseSBhIGJ1bmNo
IG9mIGxhbmd1YWdlIGFuYWx5c2lzIHRvb2xzIHRvIGEgcGllY2Ugb2YgdGV4
dC4gU3RhcnRpbmcgZnJvbSBwbGFpbiB0ZXh0LCB5b3UgY2FuIHJ1biBhbGwg
dGhlIHRvb2xzIHdpdGgganVzdCB0d28gbGluZXMgb2YgY29kZS4gSXRzIGFu
YWx5c2VzIHByb3ZpZGUgdGhlIGZvdW5kYXRpb25hbCBidWlsZGluZyBibG9j
a3MgZm9yIGhpZ2hlci1sZXZlbCBhbmQgZG9tYWluLXNwZWNpZmljIHRleHQg
dW5kZXJzdGFuZGluZyBhcHBsaWNhdGlvbnMuIFN0YW5mb3JkIENvcmVOTFAg
aXMgYSBzZXQgb2Ygc3RhYmxlIGFuZCB3ZWxsLXRlc3RlZCBuYXR1cmFsIGxh
bmd1YWdlIHByb2Nlc3NpbmcgdG9vbHMsIHdpZGVseSB1c2VkIGJ5IHZhcmlv
dXMgZ3JvdXBzIGluIGFjYWRlbWlhLCBpbmR1c3RyeSwgYW5kIGdvdmVybm1l
bnQuIFRoZSB0b29scyB2YXJpb3VzbHkgdXNlIHJ1bGUtYmFzZWQsIHByb2Jh
YmlsaXN0aWMgbWFjaGluZSBsZWFybmluZywgYW5kIGRlZXAgbGVhcm5pbmcg
Y29tcG9uZW50cy4KClRoZSBTdGFuZm9yZCBDb3JlTkxQIGNvZGUgaXMgd3Jp
dHRlbiBpbiBKYXZhIGFuZCBsaWNlbnNlZCB1bmRlciB0aGUgR05VIEdlbmVy
YWwgUHVibGljIExpY2Vuc2UgKHYzIG9yIGxhdGVyKS4gTm90ZSB0aGF0IHRo
aXMgaXMgdGhlIGZ1bGwgR1BMLCB3aGljaCBhbGxvd3MgbWFueSBmcmVlIHVz
ZXMsIGJ1dCBub3QgaXRzIHVzZSBpbiBwcm9wcmlldGFyeSBzb2Z0d2FyZSB0
aGF0IHlvdSBkaXN0cmlidXRlIHRvIG90aGVycy4KCiMjIyBCdWlsZCBJbnN0
cnVjdGlvbnMKClNldmVyYWwgdGltZXMgYSB5ZWFyIHdlIGRpc3RyaWJ1dGUg
YSBuZXcgdmVyc2lvbiBvZiB0aGUgc29mdHdhcmUsIHdoaWNoIGNvcnJlc3Bv
bmRzIHRvIGEgc3RhYmxlIGNvbW1pdC4KCkR1cmluZyB0aGUgdGltZSBiZXR3
ZWVuIHJlbGVhc2VzLCBvbmUgY2FuIGFsd2F5cyB1c2UgdGhlIGxhdGVzdCwg
dW5kZXIgZGV2ZWxvcG1lbnQgdmVyc2lvbiBvZiBvdXIgY29kZS4KCkhlcmUg
YXJlIHNvbWUgaGVscGZ1bCBpbnN0cnVjdGlvbnMgdG8gdXNlIHRoZSBsYXRl
c3QgY29kZToKCiMjIyMgUHJvdmlkZWQgYnVpbGQKClNvbWV0aW1lcyB3ZSB3
aWxsIHByb3ZpZGUgdXBkYXRlZCBqYXJzIGhlcmUgd2hpY2ggaGF2ZSB0aGUg
bGF0ZXN0IHZlcnNpb24gb2YgdGhlIGNvZGUuCgpBdCBwcmVzZW50LCBbdGhl
IGN1cnJlbnQgcmVsZWFzZWQgdmVyc2lvbiBvZiB0aGUgY29kZV0oaHR0cHM6
Ly9zdGFuZm9yZG5scC5naXRodWIuaW8vQ29yZU5MUC8jZG93bmxvYWQpIGlz
IG91ciBtb3N0IHJlY2VudCByZWxlYXNlZCBqYXIsIHRob3VnaCB5b3UgY2Fu
IGFsd2F5cyBidWlsZCB0aGUgdmVyeSBsYXRlc3QgZnJvbSBHaXRIdWIgSEVB
RCB5b3Vyc2VsZi4KCjwhLS0tCltzdGFuZm9yZC1jb3JlbmxwLmphciAobGFz
dCBidWlsdDogMjAxNy0wNC0xNCldKGh0dHA6Ly9ubHAuc3RhbmZvcmQuZWR1
L3NvZnR3YXJlL3N0YW5mb3JkLWNvcmVubHAtMjAxNy0wNC0xNC1idWlsZC5q
YXIpCi0tPgoKIyMjIyBCdWlsZCB3aXRoIEFudAoKMS4gTWFrZSBzdXJlIHlv
dSBoYXZlIEFudCBpbnN0YWxsZWQsIGRldGFpbHMgaGVyZTogW2h0dHA6Ly9h
bnQuYXBhY2hlLm9yZy9dKGh0dHA6Ly9hbnQuYXBhY2hlLm9yZy8pCjIuIENv
bXBpbGUgdGhlIGNvZGUgd2l0aCB0aGlzIGNvbW1hbmQ6IGBjZCBDb3JlTkxQ
IDsgYW50YAozLiBUaGVuIHJ1biB0aGlzIGNvbW1hbmQgdG8gYnVpbGQgYSBq
YXIgd2l0aCB0aGUgbGF0ZXN0IHZlcnNpb24gb2YgdGhlIGNvZGU6IGBjZCBD
b3JlTkxQL2NsYXNzZXMgOyBqYXIgLWNmIC4uL3N0YW5mb3JkLWNvcmVubHAu
amFyIGVkdWAKNC4gVGhpcyB3aWxsIGNyZWF0ZSBhIG5ldyBqYXIgY2FsbGVk
IHN0YW5mb3JkLWNvcmVubHAuamFyIGluIHRoZSBDb3JlTkxQIGZvbGRlciB3
aGljaCBjb250YWlucyB0aGUgbGF0ZXN0IGNvZGUKNS4gVGhlIGRlcGVuZGVu
Y2llcyB0aGF0IHdvcmsgd2l0aCB0aGUgbGF0ZXN0IGNvZGUgYXJlIGluIENv
cmVOTFAvbGliIGFuZCBDb3JlTkxQL2xpYmxvY2FsLCBzbyBtYWtlIHN1cmUg
dG8gaW5jbHVkZSB0aG9zZSBpbiB5b3VyIENMQVNTUEFUSC4KNi4gV2hlbiB1
c2luZyB0aGUgbGF0ZXN0IHZlcnNpb24gb2YgdGhlIGNvZGUgbWFrZSBzdXJl
IHRvIGRvd25sb2FkIHRoZSBsYXRlc3QgdmVyc2lvbnMgb2YgdGhlIFtjb3Jl
bmxwLW1vZGVsc10oaHR0cDovL25scC5zdGFuZm9yZC5lZHUvc29mdHdhcmUv
c3RhbmZvcmQtY29yZW5scC1tb2RlbHMtY3VycmVudC5qYXIpLCBbZW5nbGlz
aC1tb2RlbHNdKGh0dHA6Ly9ubHAuc3RhbmZvcmQuZWR1L3NvZnR3YXJlL3N0
YW5mb3JkLWVuZ2xpc2gtY29yZW5scC1tb2RlbHMtY3VycmVudC5qYXIpLCBh
bmQgW2VuZ2xpc2gtbW9kZWxzLWticF0oaHR0cDovL25scC5zdGFuZm9yZC5l
ZHUvc29mdHdhcmUvc3RhbmZvcmQtZW5nbGlzaC1rYnAtY29yZW5scC1tb2Rl
bHMtY3VycmVudC5qYXIpIGFuZCBpbmNsdWRlIHRoZW0gaW4geW91ciBDTEFT
U1BBVEguICBJZiB5b3UgYXJlIHByb2Nlc3NpbmcgbGFuZ3VhZ2VzIG90aGVy
IHRoYW4gRW5nbGlzaCwgbWFrZSBzdXJlIHRvIGRvd25sb2FkIHRoZSBsYXRl
c3QgdmVyc2lvbiBvZiB0aGUgbW9kZWxzIGphciBmb3IgdGhlIGxhbmd1YWdl
IHlvdSBhcmUgaW50ZXJlc3RlZCBpbi4KCiMjIyMgQnVpbGQgd2l0aCBNYXZl
bgoKMS4gTWFrZSBzdXJlIHlvdSBoYXZlIE1hdmVuIGluc3RhbGxlZCwgZGV0
YWlscyBoZXJlOiBbaHR0cHM6Ly9tYXZlbi5hcGFjaGUub3JnL10oaHR0cHM6
Ly9tYXZlbi5hcGFjaGUub3JnLykKMi4gSWYgeW91IHJ1biB0aGlzIGNvbW1h
bmQgaW4gdGhlIENvcmVOTFAgZGlyZWN0b3J5OiBgbXZuIHBhY2thZ2VgICwg
aXQgc2hvdWxkIHJ1biB0aGUgdGVzdHMgYW5kIGJ1aWxkIHRoaXMgamFyIGZp
bGU6IGBDb3JlTkxQL3RhcmdldC9zdGFuZm9yZC1jb3JlbmxwLTMuOS4yLmph
cmAKMy4gV2hlbiB1c2luZyB0aGUgbGF0ZXN0IHZlcnNpb24gb2YgdGhlIGNv
ZGUgbWFrZSBzdXJlIHRvIGRvd25sb2FkIHRoZSBsYXRlc3QgdmVyc2lvbnMg
b2YgdGhlIFtjb3JlbmxwLW1vZGVsc10oaHR0cDovL25scC5zdGFuZm9yZC5l
ZHUvc29mdHdhcmUvc3RhbmZvcmQtY29yZW5scC1tb2RlbHMtY3VycmVudC5q
YXIpLCBbZW5nbGlzaC1tb2RlbHNdKGh0dHA6Ly9ubHAuc3RhbmZvcmQuZWR1
L3NvZnR3YXJlL3N0YW5mb3JkLWVuZ2xpc2gtY29yZW5scC1tb2RlbHMtY3Vy
cmVudC5qYXIpLCBhbmQgW2VuZ2xpc2gtbW9kZWxzLWticF0oaHR0cDovL25s
cC5zdGFuZm9yZC5lZHUvc29mdHdhcmUvc3RhbmZvcmQtZW5nbGlzaC1rYnAt
Y29yZW5scC1tb2RlbHMtY3VycmVudC5qYXIpIGFuZCBpbmNsdWRlIHRoZW0g
aW4geW91ciBDTEFTU1BBVEguICBJZiB5b3UgYXJlIHByb2Nlc3NpbmcgbGFu
Z3VhZ2VzIG90aGVyIHRoYW4gRW5nbGlzaCwgbWFrZSBzdXJlIHRvIGRvd25s
b2FkIHRoZSBsYXRlc3QgdmVyc2lvbiBvZiB0aGUgbW9kZWxzIGphciBmb3Ig
dGhlIGxhbmd1YWdlIHlvdSBhcmUgaW50ZXJlc3RlZCBpbi4gIAo0LiBJZiB5
b3Ugd2FudCB0byB1c2UgU3RhbmZvcmQgQ29yZU5MUCBhcyBwYXJ0IG9mIGEg
TWF2ZW4gcHJvamVjdCB5b3UgbmVlZCB0byBpbnN0YWxsIHRoZSBtb2RlbHMg
amFycyBpbnRvIHlvdXIgTWF2ZW4gcmVwb3NpdG9yeS4gIEJlbG93IGlzIGEg
c2FtcGxlIGNvbW1hbmQgZm9yIGluc3RhbGxpbmcgdGhlIFNwYW5pc2ggbW9k
ZWxzIGphci4gIEZvciBvdGhlciBsYW5ndWFnZXMganVzdCBjaGFuZ2UgdGhl
IGxhbmd1YWdlIG5hbWUgaW4gdGhlIGNvbW1hbmQuICBUbyBpbnN0YWxsIGBz
dGFuZm9yZC1jb3JlbmxwLW1vZGVscy1jdXJyZW50LmphcmAgeW91IHdpbGwg
bmVlZCB0byBzZXQgYC1EY2xhc3NpZmllcj1tb2RlbHNgLiAgSGVyZSBpcyB0
aGUgc2FtcGxlIGNvbW1hbmQgZm9yIFNwYW5pc2g6IGBtdm4gaW5zdGFsbDpp
bnN0YWxsLWZpbGUgLURmaWxlPS9sb2NhdGlvbi9vZi9zdGFuZm9yZC1zcGFu
aXNoLWNvcmVubHAtbW9kZWxzLWN1cnJlbnQuamFyIC1EZ3JvdXBJZD1lZHUu
c3RhbmZvcmQubmxwIC1EYXJ0aWZhY3RJZD1zdGFuZm9yZC1jb3JlbmxwIC1E
dmVyc2lvbj0zLjkuMiAtRGNsYXNzaWZpZXI9bW9kZWxzLXNwYW5pc2ggLURw
YWNrYWdpbmc9amFyYCAKCiMjIyMgTGF0ZXN0IE1vZGVscwoKSWYgdXNpbmcg
YSBidWlsZCBvZiB0aGUgbGF0ZXN0IGNvZGUsIG1ha2Ugc3VyZSB0byB1c2Ug
dGhlIGxhdGVzdCBtb2RlbHMgYXMgd2VsbC4KCnwgTGFuZ3VhZ2UgfCBNb2Rl
bCBKYXIgfCBMYXN0IFVwZGF0ZWQgfAp8IC0tLSB8IC0tLSB8IC0tLSB8Cnwg
QXJhYmljIHwgW2Rvd25sb2FkXShodHRwOi8vbmxwLnN0YW5mb3JkLmVkdS9z
b2Z0d2FyZS9zdGFuZm9yZC1hcmFiaWMtY29yZW5scC1tb2RlbHMtY3VycmVu
dC5qYXIpIHwgMy45LjIgfAp8IEVuZ2xpc2ggKGRlZmF1bHQpIHwgW2Rvd25s
b2FkXShodHRwOi8vbmxwLnN0YW5mb3JkLmVkdS9zb2Z0d2FyZS9zdGFuZm9y
ZC1jb3JlbmxwLW1vZGVscy1jdXJyZW50LmphcikgfCAyMDE5LTA3LTI5IHwK
fCBFbmdsaXNoIChmdWxsKSB8IFtkb3dubG9hZF0oaHR0cDovL25scC5zdGFu
Zm9yZC5lZHUvc29mdHdhcmUvc3RhbmZvcmQtZW5nbGlzaC1jb3JlbmxwLW1v
ZGVscy1jdXJyZW50LmphcikgfCAyMDE5LTA3LTI5IHwKfCBFbmdsaXNoIChr
YnApIHwgW2Rvd25sb2FkXShodHRwOi8vbmxwLnN0YW5mb3JkLmVkdS9zb2Z0
d2FyZS9zdGFuZm9yZC1lbmdsaXNoLWticC1jb3JlbmxwLW1vZGVscy1jdXJy
ZW50LmphcikgfCAyMDE5LTA3LTI5IHwKfCBDaGluZXNlIHwgW2Rvd25sb2Fk
XShodHRwOi8vbmxwLnN0YW5mb3JkLmVkdS9zb2Z0d2FyZS9zdGFuZm9yZC1j
aGluZXNlLWNvcmVubHAtbW9kZWxzLWN1cnJlbnQuamFyKSB8IDMuOS4yIHwK
fCBGcmVuY2ggfCBbZG93bmxvYWRdKGh0dHA6Ly9ubHAuc3RhbmZvcmQuZWR1
L3NvZnR3YXJlL3N0YW5mb3JkLWZyZW5jaC1jb3JlbmxwLW1vZGVscy1jdXJy
ZW50LmphcikgfCAyMDE5LTA4LTI4IHwKfCBHZXJtYW4gfCBbZG93bmxvYWRd
KGh0dHA6Ly9ubHAuc3RhbmZvcmQuZWR1L3NvZnR3YXJlL3N0YW5mb3JkLWdl
cm1hbi1jb3JlbmxwLW1vZGVscy1jdXJyZW50LmphcikgfCAyMDE5LTA5LTA0
IHwKfCBTcGFuaXNoIHwgW2Rvd25sb2FkXShodHRwOi8vbmxwLnN0YW5mb3Jk
LmVkdS9zb2Z0d2FyZS9zdGFuZm9yZC1zcGFuaXNoLWNvcmVubHAtbW9kZWxz
LWN1cnJlbnQuamFyKSB8IDIwMTktMDgtMjcgfAoKIyMjIFVzZWZ1bCByZXNv
dXJjZXMKCllvdSBjYW4gZmluZCByZWxlYXNlcyBvZiBTdGFuZm9yZCBDb3Jl
TkxQIG9uIFtNYXZlbiBDZW50cmFsXShodHRwczovL3NlYXJjaC5tYXZlbi5v
cmcvYXJ0aWZhY3QvZWR1LnN0YW5mb3JkLm5scC9zdGFuZm9yZC1jb3Jlbmxw
LzMuOS4yL2phcikuCgpZb3UgY2FuIGZpbmQgbW9yZSBleHBsYW5hdGlvbiBh
bmQgZG9jdW1lbnRhdGlvbiBvbiBbdGhlIFN0YW5mb3JkIENvcmVOTFAgaG9t
ZXBhZ2VdKGh0dHA6Ly9zdGFuZm9yZG5scC5naXRodWIuaW8vQ29yZU5MUC8p
LgoKVGhlIG1vc3QgcmVjZW50IG1vZGVscyBhc3NvY2lhdGVkIHdpdGggdGhl
IGNvZGUgaW4gdGhlIEhFQUQgb2YgdGhpcyByZXBvc2l0b3J5IGNhbiBiZSBm
b3VuZCBbaGVyZV0oaHR0cDovL25scC5zdGFuZm9yZC5lZHUvc29mdHdhcmUv
c3RhbmZvcmQtY29yZW5scC1tb2RlbHMtY3VycmVudC5qYXIpLgoKU29tZSBv
ZiB0aGUgbGFyZ2VyIChFbmdsaXNoKSBtb2RlbHMgLS0gbGlrZSB0aGUgc2hp
ZnQtcmVkdWNlIHBhcnNlciBhbmQgV2lraURpY3QgLS0gYXJlIG5vdCBkaXN0
cmlidXRlZCB3aXRoIG91ciBkZWZhdWx0IG1vZGVscyBqYXIuClRoZSBtb3N0
IHJlY2VudCB2ZXJzaW9uIG9mIHRoZXNlIG1vZGVscyBjYW4gYmUgZm91bmQg
W2hlcmVdKGh0dHA6Ly9ubHAuc3RhbmZvcmQuZWR1L3NvZnR3YXJlL3N0YW5m
b3JkLWVuZ2xpc2gtY29yZW5scC1tb2RlbHMtY3VycmVudC5qYXIpLgoKV2Ug
ZGlzdHJpYnV0ZSByZXNvdXJjZXMgZm9yIG90aGVyIGxhbmd1YWdlcyBhcyB3
ZWxsLCBpbmNsdWRpbmcgW0FyYWJpYyBtb2RlbHNdKGh0dHA6Ly9ubHAuc3Rh
bmZvcmQuZWR1L3NvZnR3YXJlL3N0YW5mb3JkLWFyYWJpYy1jb3JlbmxwLW1v
ZGVscy1jdXJyZW50LmphciksCltDaGluZXNlIG1vZGVsc10oaHR0cDovL25s
cC5zdGFuZm9yZC5lZHUvc29mdHdhcmUvc3RhbmZvcmQtY2hpbmVzZS1jb3Jl
bmxwLW1vZGVscy1jdXJyZW50LmphciksCltGcmVuY2ggbW9kZWxzXShodHRw
Oi8vbmxwLnN0YW5mb3JkLmVkdS9zb2Z0d2FyZS9zdGFuZm9yZC1mcmVuY2gt
Y29yZW5scC1tb2RlbHMtY3VycmVudC5qYXIpLApbR2VybWFuIG1vZGVsc10o
aHR0cDovL25scC5zdGFuZm9yZC5lZHUvc29mdHdhcmUvc3RhbmZvcmQtZ2Vy
bWFuLWNvcmVubHAtbW9kZWxzLWN1cnJlbnQuamFyKSwKYW5kIFtTcGFuaXNo
IG1vZGVsc10oaHR0cDovL25scC5zdGFuZm9yZC5lZHUvc29mdHdhcmUvc3Rh
bmZvcmQtc3BhbmlzaC1jb3JlbmxwLW1vZGVscy1jdXJyZW50LmphcikuCgpG
b3IgaW5mb3JtYXRpb24gYWJvdXQgbWFraW5nIGNvbnRyaWJ1dGlvbnMgdG8g
U3RhbmZvcmQgQ29yZU5MUCwgc2VlIHRoZSBmaWxlIFtDT05UUklCVVRJTkcu
bWRdKENPTlRSSUJVVElORy5tZCkuCgpRdWVzdGlvbnMgYWJvdXQgQ29yZU5M
UCBjYW4gZWl0aGVyIGJlIHBvc3RlZCBvbiBTdGFja092ZXJmbG93IHdpdGgg
dGhlIHRhZyBbc3RhbmZvcmQtbmxwXShodHRwOi8vc3RhY2tvdmVyZmxvdy5j
b20vcXVlc3Rpb25zL3RhZ2dlZC9zdGFuZm9yZC1ubHApLAogIG9yIG9uIHRo
ZSBbbWFpbGluZyBsaXN0c10oaHR0cHM6Ly9ubHAuc3RhbmZvcmQuZWR1L3Nv
ZnR3YXJlLyNNYWlsKS4K
",,6742,,"bGFuZ3VhZ2U6IGphdmEKc3VkbzogcmVxdWlyZWQKCmpkazoKLSBvcGVuamRr
OAojIC0gb3JhY2xlamRrOAojIGBvcGVuamRrOGAgbm90IGF2YWlsYWJsZQoK
aW5zdGFsbDoKIyBkb3dubG9hZCBtb2RlbHMgKHNlZSBgUkVBRE1FLm1kYCkK
LSB3Z2V0IGh0dHA6Ly9ubHAuc3RhbmZvcmQuZWR1L3NvZnR3YXJlL3N0YW5m
b3JkLWNvcmVubHAtbW9kZWxzLWN1cnJlbnQuamFyCi0gd2dldCBodHRwOi8v
bmxwLnN0YW5mb3JkLmVkdS9zb2Z0d2FyZS9zdGFuZm9yZC1lbmdsaXNoLWNv
cmVubHAtbW9kZWxzLWN1cnJlbnQuamFyCi0gbXZuIGluc3RhbGw6aW5zdGFs
bC1maWxlIC1EZmlsZT1zdGFuZm9yZC1jb3JlbmxwLW1vZGVscy1jdXJyZW50
LmphciAtRGdyb3VwSWQ9ZWR1LnN0YW5mb3JkLm5scCAtRGFydGlmYWN0SWQ9
c3RhbmZvcmQtY29yZW5scCAtRHZlcnNpb249My45LjIgLURjbGFzc2lmaWVy
PW1vZGVscyAtRHBhY2thZ2luZz1qYXIKLSBtdm4gaW5zdGFsbDppbnN0YWxs
LWZpbGUgLURmaWxlPXN0YW5mb3JkLWVuZ2xpc2gtY29yZW5scC1tb2RlbHMt
Y3VycmVudC5qYXIgLURncm91cElkPWVkdS5zdGFuZm9yZC5ubHAgLURhcnRp
ZmFjdElkPXN0YW5mb3JkLWNvcmVubHAgLUR2ZXJzaW9uPTMuOS4yIC1EY2xh
c3NpZmllcj1tb2RlbHMtZW5nbGlzaCAtRHBhY2thZ2luZz1qYXIKCi0gbXYg
c3RhbmZvcmQtY29yZW5scC1tb2RlbHMtY3VycmVudC5qYXIgc3RhbmZvcmQt
Y29yZW5scC0zLjkuMi1tb2RlbHMuamFyCiMgbmVjZXNzYXJ5IGZvciBgbXZu
IGluc3RhbGxgCgpzY3JpcHQ6Ci0gYW50Ci0gLi9ncmFkbGV3Ci0gbXZuIGlu
c3RhbGwKCiNibG9ja2xpc3QKYnJhbmNoZXM6CiAgZXhjZXB0OgogIC0gZ2gt
cGFnZXMK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'debug',9281708,b'The Debug component provides tools to ease debugging PHP code.',b'PHP',0,6749,,10,False,b'https://api.github.com/repos/symfony/debug/forks',"RGVidWcgQ29tcG9uZW50Cj09PT09PT09PT09PT09PQoKVGhlIERlYnVnIGNv
bXBvbmVudCBwcm92aWRlcyB0b29scyB0byBlYXNlIGRlYnVnZ2luZyBQSFAg
Y29kZS4KClJlc291cmNlcwotLS0tLS0tLS0KCiAgKiBbRG9jdW1lbnRhdGlv
bl0oaHR0cHM6Ly9zeW1mb255LmNvbS9kb2MvY3VycmVudC9jb21wb25lbnRz
L2RlYnVnL2luZGV4Lmh0bWwpCiAgKiBbQ29udHJpYnV0aW5nXShodHRwczov
L3N5bWZvbnkuY29tL2RvYy9jdXJyZW50L2NvbnRyaWJ1dGluZy9pbmRleC5o
dG1sKQogICogW1JlcG9ydCBpc3N1ZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9z
eW1mb255L3N5bWZvbnkvaXNzdWVzKSBhbmQKICAgIFtzZW5kIFB1bGwgUmVx
dWVzdHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9zeW1mb255L3N5bWZvbnkvcHVs
bHMpCiAgICBpbiB0aGUgW21haW4gU3ltZm9ueSByZXBvc2l0b3J5XShodHRw
czovL2dpdGh1Yi5jb20vc3ltZm9ueS9zeW1mb255KQo=
",,6749,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'visdom',80041090,"b'A flexible tool for creating, organizing, and sharing visualizations of live, rich data. Supports Torch and Numpy.'",b'Python',57,6741,,176,False,b'https://api.github.com/repos/facebookresearch/visdom/forks',"CiMgKipWaXNkb20qKgoKIVt2aXNkb21fYmlnXShodHRwczovL2xoMy5nb29n
bGV1c2VyY29udGVudC5jb20vLWJxSDlVWEN3LUJFL1dMMlVzZHJyYkFJL0FB
QUFBQUFBblljL2Vtcnh3Q21uclc0X0NMVHl5VXR0QjBTWVJKLWk0Q0NpUUNM
Y0IvczAvU2NyZWVuK1Nob3QrMjAxNy0wMy0wNithdCsxMC41MS4wMitBTS5w
bmcidmlzZG9tX2JpZyIpCgpBIGZsZXhpYmxlIHRvb2wgZm9yIGNyZWF0aW5n
LCBvcmdhbml6aW5nLCBhbmQgc2hhcmluZyB2aXN1YWxpemF0aW9ucyBvZiBs
aXZlLCByaWNoIGRhdGEuIFN1cHBvcnRzIFB5dGhvbi4KCiogW092ZXJ2aWV3
XSgjb3ZlcnZpZXcpCiogW0NvbmNlcHRzXSgjY29uY2VwdHMpCiogW1NldHVw
XSgjc2V0dXApCiogW1VzYWdlXSgjdXNhZ2UpCiogW0FQSV0oI2FwaSkKKiBb
VG8gRG9dKCN0by1kbykKKiBbQ29udHJpYnV0aW5nXSgjY29udHJpYnV0aW5n
KQoKCiMjIE92ZXJ2aWV3CgpWaXNkb20gYWltcyB0byBmYWNpbGl0YXRlIHZp
c3VhbGl6YXRpb24gb2YgKHJlbW90ZSkgZGF0YSB3aXRoIGFuIGVtcGhhc2lz
IG9uIHN1cHBvcnRpbmcgc2NpZW50aWZpYyBleHBlcmltZW50YXRpb24uCgo8
cCBhbGlnbj0iY2VudGVyIj48aW1nIHNyYz0iaHR0cHM6Ly9saDMuZ29vZ2xl
dXNlcmNvbnRlbnQuY29tLy1oM0h1dmJVMlYwU2ZncWdYR2lLM0xQZ2hFNXZx
dlMwcHpwT2JTMFlnR19MQUJNRms2MkpDYTNLVnVfMk5WXzRMSkthQWE1LXRn
PXMwIiB3aWR0aD0iNTAwIiAgLz48L3A+CgpCcm9hZGNhc3QgdmlzdWFsaXph
dGlvbnMgb2YgcGxvdHMsIGltYWdlcywgYW5kIHRleHQgZm9yIHlvdXJzZWxm
IGFuZCB5b3VyIGNvbGxhYm9yYXRvcnMuCgo8cCBhbGlnbj0iY2VudGVyIj48
aW1nIHNyYz0iaHR0cHM6Ly90aHVtYnMuZ2Z5Y2F0LmNvbS9TbGlwcGVyeVNl
Y29uZGhhbmRHZW1zYnVjay1zaXplX3Jlc3RyaWN0ZWQuZ2lmIiB3aWR0aD0i
NTAwIiAvPjwvcD4KCk9yZ2FuaXplIHlvdXIgdmlzdWFsaXphdGlvbiBzcGFj
ZSBwcm9ncmFtbWF0aWNhbGx5IG9yIHRocm91Z2ggdGhlIFVJIHRvIGNyZWF0
ZSBkYXNoYm9hcmRzIGZvciBsaXZlIGRhdGEsIGluc3BlY3QgcmVzdWx0cyBv
ZiBleHBlcmltZW50cywgb3IgZGVidWcgZXhwZXJpbWVudGFsIGNvZGUuCgo8
cCBhbGlnbj0iY2VudGVyIj48aW1nIGFsaWduPSJjZW50ZXIiIHNyYz0iaHR0
cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tLy1JSGV4dlotRk10ay9X
TFRYQmdRbGlqSS9BQUFBQUFBQW1fcy81MTRMTThSMVhGZ3lOS1BWTWY0dE53
WWx1WnNIc0M2M3dDTGNCL3MwL1NjcmVlbitTaG90KzIwMTctMDItMjcrYXQr
My4xNS4yNytQTS5wbmciIHdpZHRoPSI1MDAiIC8+PC9wPgoKCgogPGJyLz4K
CiMjIENvbmNlcHRzClZpc2RvbSBoYXMgYSBzaW1wbGUgc2V0IG9mIGZlYXR1
cmVzIHRoYXQgY2FuIGJlIGNvbXBvc2VkIGZvciB2YXJpb3VzIHVzZS1jYXNl
cy4KCiMjIyBXaW5kb3dzCjxwIGFsaWduPSJjZW50ZXIiPjxpbWcgYWxpZ249
ImNlbnRlciIgc3JjPSJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5j
b20vLWtMbm9nc2c5UkNzL1dMeDM0UEVzR1dJL0FBQUFBQUFBblNzLzd0XzYy
cGJmbWZvRUJua2NiS1RYSXF6MFdNOHBRSkhWUUNMY0IvczAvU2NyZWVuK1No
b3QrMjAxNy0wMy0wNSthdCszLjM0LjQzK1BNLnBuZyIgd2lkdGg9IjUwMCIg
Lz48L3A+CgoKVGhlIFVJIGJlZ2lucyBhcyBhIGJsYW5rIHNsYXRlIOKAkyB5
b3UgY2FuIHBvcHVsYXRlIGl0IHdpdGggcGxvdHMsIGltYWdlcywgYW5kIHRl
eHQuIFRoZXNlIGFwcGVhciBpbiB3aW5kb3dzIHRoYXQgeW91IGNhbiBkcmFn
LCBkcm9wLCByZXNpemUsIGFuZCBkZXN0cm95LiBUaGUgd2luZG93cyBsaXZl
IGluIGBlbnZzYCBhbmQgdGhlIHN0YXRlIG9mIGBlbnZzYCBpcyBzdG9yZWQg
YWNyb3NzIHNlc3Npb25zLiBZb3UgY2FuIGRvd25sb2FkIHRoZSBjb250ZW50
IG9mIHdpbmRvd3Mg4oCTIGluY2x1ZGluZyB5b3VyIHBsb3RzIGluIGBzdmdg
LgoKCgo+ICoqVGlwKio6IFlvdSBjYW4gdXNlIHRoZSB6b29tIG9mIHlvdXIg
YnJvd3NlciB0byBhZGp1c3QgdGhlIHNjYWxlIG9mIHRoZSBVSS4KCiMjIyMj
IENhbGxiYWNrcwoKVGhlIHB5dGhvbiBWaXNkb20gaW1wbGVtZW50YXRpb24g
c3VwcG9ydHMgY2FsbGJhY2tzIG9uIGEgd2luZG93LiBUaGUgZGVtbyBzaG93
cyBhbiBleGFtcGxlIG9mIHRoaXMgaW4gdGhlIGZvcm0gb2YgYW4gZWRpdGFi
bGUgdGV4dCBwYWQuIFRoZSBmdW5jdGlvbmFsaXR5IG9mIHRoZXNlIGNhbGxi
YWNrcyBhbGxvd3MgdGhlIFZpc2RvbSBvYmplY3QgdG8gcmVjZWl2ZSBhbmQg
cmVhY3QgdG8gZXZlbnRzIHRoYXQgaGFwcGVuIGluIHRoZSBmcm9udGVuZC4K
CllvdSBjYW4gc3Vic2NyaWJlIGEgd2luZG93IHRvIGV2ZW50cyBieSBhZGRp
bmcgYSBmdW5jdGlvbiB0byB0aGUgZXZlbnQgaGFuZGxlcnMgZGljdCBmb3Ig
dGhlIHdpbmRvdyBpZCB5b3Ugd2FudCB0byBzdWJzY3JpYmUgYnkgY2FsbGlu
ZyBgdml6LnJlZ2lzdGVyX2V2ZW50X2hhbmRsZXIoaGFuZGxlciwgd2luX2lk
KWAgd2l0aCB5b3VyIGhhbmRsZXIgYW5kIHRoZSB3aW5kb3cgaWQuIE11bHRp
cGxlIGhhbmRsZXJzIGNhbiBiZSByZWdpc3RlcmVkIHRvIHRoZSBzYW1lIHdp
bmRvdy4gWW91IGNhbiByZW1vdmUgYWxsIGV2ZW50IGhhbmRsZXJzIGZyb20g
YSB3aW5kb3cgdXNpbmcgYHZpei5jbGVhcl9ldmVudF9oYW5kbGVycyh3aW5f
aWQpYC4gV2hlbiBhbiBldmVudCBvY2N1cnMgdG8gdGhhdCB3aW5kb3csIHlv
dXIgY2FsbGJhY2tzIHdpbGwgYmUgY2FsbGVkIG9uIGEgZGljdCBjb250YWlu
aW5nOgoKIC0gYGV2ZW50X3R5cGVgOiBvbmUgb2YgdGhlIGJlbG93IGV2ZW50
IHR5cGVzCiAtIGBwYW5lX2RhdGFgOiBhbGwgb2YgdGhlIHN0b3JlZCBjb250
ZW50cyBmb3IgdGhhdCB3aW5kb3cgaW5jbHVkaW5nIGxheW91dCBhbmQgY29u
dGVudC4KIC0gYGVpZGA6IHRoZSBjdXJyZW50IGVudmlyb25tZW50IGlkCiAt
IGB0YXJnZXRgOiB0aGUgd2luZG93IGlkIHRoZSBldmVudCBpcyBjYWxsZWQg
b24KCkFkZGl0aW9uYWwgcGFyYW1ldGVycyBhcmUgZGVmaW5lZCBiZWxvdy4K
ClJpZ2h0IG5vdyB0aGUgZm9sbG93aW5nIGNhbGxiYWNrIGV2ZW50cyBhcmUg
c3VwcG9ydGVkOgoKMS4gYENsb3NlYCAtIFRyaWdnZXJzIHdoZW4gYSB3aW5k
b3cgaXMgY2xvc2VkLiBSZXR1cm5zIGEgZGljdCB3aXRoIG9ubHkgdGhlIGFm
b3JlbWVudGlvbmVkIGZpZWxkcy4KMi4gYEtleVByZXNzYCAtIFRyaWdnZXJz
IHdoZW4gYSBrZXkgaXMgcHJlc3NlZC4gQ29udGFpbnMgYWRkaXRpb25hbCBw
YXJhbWV0ZXJzOgogICAgLSBga2V5YCAtIEEgc3RyaW5nIHJlcHJlc2VudGF0
aW9uIG9mIHRoZSBrZXkgcHJlc3NlZCAoYXBwbHlpbmcgc3RhdGUgbW9kaWZp
ZXJzIHN1Y2ggYXMgU0hJRlQpCiAgICAtIGBrZXlfY29kZWAgLSBUaGUgamF2
YXNjcmlwdCBldmVudCBrZXljb2RlIGZvciB0aGUgcHJlc3NlZCBrZXkgKG5v
IG1vZGlmaWVycykKMy4gYFByb3BlcnR5VXBkYXRlYCAtIFRyaWdnZXJzIHdo
ZW4gYSBwcm9wZXJ0eSBpcyB1cGRhdGVkIGluIFByb3BlcnR5IHBhbmUKICAg
IC0gYHByb3BlcnR5SWRgIC0gUG9zaXRpb24gaW4gcHJvcGVydGllcyBsaXN0
CiAgICAtIGB2YWx1ZWAgLSBOZXcgcHJvcGVydHkgdmFsdWUKNC4gYENsaWNr
YCAtIFRyaWdnZXJzIHdoZW4gSW1hZ2UgcGFuZSBpcyBjbGlja2VkIG9uLCBo
YXMgYSBwYXJhbWV0ZXI6CiAgICAtIGBpbWFnZV9jb29yZGAgLSBkaWN0aW9u
YXJ5IHdpdGggdGhlIGZpZWxkcyBgeGAgYW5kIGB5YCBmb3IgdGhlIGNsaWNr
IGNvb3JkaW5hdGVzIGluIHRoZSBjb29yZGluYXRlIGZyYW1lIG9mIHRoZSBw
b3NzaWJseSB6b29tZWQvcGFubmVkIGltYWdlICgqbm90KiB0aGUgZW5jbG9z
aW5nIHBhbmUpLgoKIyMjIEVudmlyb25tZW50cwo8cCBhbGlnbj0iY2VudGVy
Ij48aW1nIGFsaWduPSJjZW50ZXIiIHNyYz0iaHR0cHM6Ly91c2VyLWltYWdl
cy5naXRodWJ1c2VyY29udGVudC5jb20vMTI3Njg2Ny8zNDYxODE5OC1mYzYz
OTc2Yy1mMjBiLTExZTctOWMwZC0wNjAxMzJmZGIzN2UucG5nIiB3aWR0aD0i
MzAwIiAvPjwvcD4KCllvdSBjYW4gcGFydGl0aW9uIHlvdXIgdmlzdWFsaXph
dGlvbiBzcGFjZSB3aXRoIGBlbnZzYC4gQnkgZGVmYXVsdCwgZXZlcnkgdXNl
ciB3aWxsIGhhdmUgYW4gZW52IGNhbGxlZCBgbWFpbmAuIE5ldyBlbnZzIGNh
biBiZSBjcmVhdGVkIGluIHRoZSBVSSBvciBwcm9ncmFtbWF0aWNhbGx5LiBU
aGUgc3RhdGUgb2YgZW52cyBpcyBjaHJvbmljYWxseSBzYXZlZC4gRW52aXJv
bm1lbnRzIGFyZSBhYmxlIHRvIGtlZXAgZW50aXJlbHkgZGlmZmVyZW50IHBv
b2xzIG9mIHBsb3RzLgoKWW91IGNhbiBhY2Nlc3MgYSBzcGVjaWZpYyBlbnYg
dmlhIHVybDogYGh0dHA6Ly9sb2NhbGhvc3QuY29tOjgwOTcvZW52L21haW5g
LiBJZiB5b3VyIHNlcnZlciBpcyBob3N0ZWQsIHlvdSBjYW4gc2hhcmUgdGhp
cyB1cmwgc28gb3RoZXJzIGNhbiBzZWUgeW91ciB2aXN1YWxpemF0aW9ucyB0
b28uCgpFbnZpcm9ubWVudHMgYXJlIGF1dG9tYXRpY2FsbHkgaGllcmFyY2hp
Y2FsbHkgb3JnYW5pemVkIGJ5IHRoZSBmaXJzdCBgX2AuCgojIyMjIFNlbGVj
dGluZyBFbnZpcm9ubWVudHMKPHAgYWxpZ249ImNlbnRlciI+PGltZyBhbGln
bj0iY2VudGVyIiBzcmM9Imh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNl
cmNvbnRlbnQuY29tLzEyNzY4NjcvMzQ2MTgyNDItMjYxZDU1ZDQtZjIwYy0x
MWU3LTgyMGQtYzE2NzMxMjQ4YjI2LnBuZyIgd2lkdGg9IjMwMCIgLz48L3A+
CgpGcm9tIHRoZSBtYWluIHBhZ2UgaXQgaXMgcG9zc2libGUgdG8gdG9nZ2xl
IGJldHdlZW4gZGlmZmVyZW50IGVudmlyb25tZW50cyB1c2luZyB0aGUgZW52
aXJvbm1lbnQgc2VsZWN0b3IuIFNlbGVjdGluZyBhIG5ldyBlbnZpcm9ubWVu
dCB3aWxsIHF1ZXJ5IHRoZSBzZXJ2ZXIgZm9yIHRoZSBwbG90cyB0aGF0IGV4
aXN0IGluIHRoYXQgZW52aXJvbm1lbnQuIFRoZSBlbnZpcm9ubWVudCBzZWxl
Y3RvciBhbGxvd3MgZm9yIHNlYXJjaGluZyBhbmQgZmlsdGVyaW5nIGZvciB0
aGUgbmV3IGVuaXJvbm1lbnQuCgojIyMjIENvbXBhcmluZyBFbnZpcm9ubWVu
dHMKCkZyb20gdGhlIG1haW4gcGFnZSBpdCBpcyBwb3NzaWJsZSB0byBjb21w
YXJlIGRpZmZlcmVudCBlbnZpcm9ubWVudHMgdXNpbmcgdGhlIGVudmlyb25t
ZW50IHNlbGVjdG9yLiBTZWxlY3RpbmcgbXVsdGlwbGUgZW52aXJvbm1lbnRz
IGluIHRoZSBjaGVjayBib3ggd2lsbCBxdWVyeSB0aGUgc2VydmVyIGZvciB0
aGUgcGxvdHMgd2l0aCB0aGUgc2FtZSB0aXRsZXMgaW4gYWxsIGVudmlyb25t
ZW50cyBhbmQgcGxvdCB0aGVtIGluIGEgc2luZ2xlIHBsb3QuIEFuIGFkZGl0
aW9uYWwgY29tcGFyZSBsZWdlbmQgcGFuZSBpcyBjcmVhdGVkIHdpdGggYSBu
dW1iZXIgY29ycmVzcG9uZGluZyB0byBlYWNoIHNlbGVjdGVkIGVudmlyb25t
ZW50LiBJbmRpdmlkdWFsIHBsb3RzIGFyZSB1cGRhdGVkIHdpdGggbGVnZW5k
cyBjb3JyZXNwb25kaW5nIHRvICJ4X25hbWUiIHdoZXJlIGB4YCBpcyBhIG51
bWJlciBjb3JyZXNwb25kaW5nIHdpdGggdGhlIGNvbXBhcmUgbGVnZW5kIHBh
bmUgYW5kIGBuYW1lYCBpcyB0aGUgb3JpZ2luYWwgbmFtZSBpbiB0aGUgbGVn
ZW5kLgoKPiAqKk5vdGUqKjogVGhlIGNvbXBhcmUgZW52cyB2aWV3IGlzIG5v
dCByb2J1c3QgdG8gaGlnaCB0aHJvdWdocHV0IGRhdGEsIGFzIHRoZSBzZXJ2
ZXIgaXMgcmVzcG9uc2libGUgZm9yIGdlbmVyYXRpbmcgdGhlIGNvbXBhcmVk
IGNvbnRlbnQuIERvIG5vdCBjb21wYXJlIGFuIGVudmlyb25tZW50IHRoYXQg
aXMgcmVjZWl2aW5nIGEgaGlnaCBxdWFudGl0eSBvZiB1cGRhdGVzIG9uIGFu
eSBwbG90LCBhcyBldmVyeSB1cGRhdGUgd2lsbCByZXF1ZXN0IHJlZ2VuZXJh
dGluZyB0aGUgY29tcGFyaXNvbi4gSWYgeW91IG5lZWQgdG8gY29tcGFyZSB0
d28gcGxvdHMgdGhhdCBhcmUgcmVjZWl2aW5nIGhpZ2ggcXVhbnRpdGllcyBv
ZiBkYXRhLCBoYXZlIHRoZW0gc2hhcmUgdGhlIHNhbWUgd2luZG93IG9uIGEg
c2luZ3VsYXIgZW52LgoKIyMjIyBDbGVhcmluZyBFbnZpcm9ubWVudHMKWW91
IGNhbiB1c2UgdGhlIGVyYXNlciBidXR0b24gdG8gcmVtb3ZlIGFsbCBvZiB0
aGUgY3VycmVudCBjb250ZW50cyBvZiBhbiBlbnZpcm9ubWVudC4gVGhpcyBj
bG9zZXMgdGhlIHBsb3Qgd2luZG93cyBmb3IgdGhhdCBlbnZpcm9ubWVudCBi
dXQga2VlcHMgdGhlIGVtcHR5IGVudmlyb25tZW50IGZvciBuZXcgcGxvdHMu
CgojIyMjIE1hbmFnaW5nIEVudmlyb25tZW50cwo8cCBhbGlnbj0iY2VudGVy
Ij48aW1nIGFsaWduPSJjZW50ZXIiIHNyYz0iaHR0cHM6Ly91c2VyLWltYWdl
cy5naXRodWJ1c2VyY29udGVudC5jb20vMTI3Njg2Ny8zNDYxODI2Mi0zYmI2
MzVjOC1mMjBjLTExZTctOTM3MC05ZmFjZmRlMGNmYjcucG5nIiB3aWR0aD0i
NDAwIiAvPjwvcD4KClByZXNzaW5nIHRoZSBmb2xkZXIgaWNvbiBvcGVucyBh
IGRpYWxvZyB0aGF0IGFsbG93cyB5b3UgdG8gZm9yayBvciBmb3JjZSBzYXZl
IHRoZSBjdXJyZW50IGVudmlyb25tZW50LCBvciBkZWxldGUgYW55IG9mIHlv
dXIgZXhpc3RpbmcgZW52aXJvbm1lbnRzLiBVc2Ugb2YgdGhpcyBmZWF0dXJl
IGlzIGZ1bGx5IGRlc2NyaWJlZCBpbiB0aGUgKipTdGF0ZSoqIHNlY3Rpb24u
Cgo+KipFbnYgRmlsZXM6KioKPllvdXIgZW52cyBhcmUgbG9hZGVkIGF0IGlu
aXRpYWxpemF0aW9uIG9mIHRoZSBzZXJ2ZXIsIGJ5IGRlZmF1bHQgZnJvbSBg
JEhPTUUvLnZpc2RvbS9gLiBDdXN0b20gcGF0aHMgY2FuIGJlIHBhc3NlZCBh
cyBhIGNtZC1saW5lIGFyZ3VtZW50LiBFbnZzIGFyZSByZW1vdmVkIGJ5IHVz
aW5nIHRoZSBkZWxldGUgYnV0dG9uIG9yIGJ5IGRlbGV0aW5nIHRoZSBjb3Jy
ZXNwb25kaW5nIGAuanNvbmAgZmlsZSBmcm9tIHRoZSBlbnYgZGlyLgoKIyMj
IFN0YXRlCk9uY2UgeW91J3ZlIGNyZWF0ZWQgYSBmZXcgdmlzdWFsaXphdGlv
bnMsIHN0YXRlIGlzIG1haW50YWluZWQuIFRoZSBzZXJ2ZXIgYXV0b21hdGlj
YWxseSBjYWNoZXMgeW91ciB2aXN1YWxpemF0aW9ucyAtLSBpZiB5b3UgcmVs
b2FkIHRoZSBwYWdlLCB5b3VyIHZpc3VhbGl6YXRpb25zIHJlYXBwZWFyLgoK
PHAgYWxpZ249ImNlbnRlciI+PGltZyBhbGlnbj0iY2VudGVyIiBzcmM9Imh0
dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS8tWktlRkpmTWU1UzQv
V0xYZWJpTmdGd0kvQUFBQUFBQUFuRkkvQUgyY0dzZjQwaEVXYkg2VWVjbFlR
Y1pQUzBZWmJjYXlRQ0xjQi9zMC9lbnZfZm9ya18yLmdpZiIgd2lkdGg9IjQw
MCIgLz48L3A+CgoqICoqU2F2ZToqKiBZb3UgY2FuIG1hbnVhbGx5IGRvIHNv
IHdpdGggdGhlIGBzYXZlYCBidXR0b24uIFRoaXMgd2lsbCBzZXJpYWxpemUg
dGhlIGVudidzIHN0YXRlICh0byBkaXNrLCBpbiBKU09OKSwgaW5jbHVkaW5n
IHdpbmRvdyBwb3NpdGlvbnMuIFlvdSBjYW4gc2F2ZSBhbiBgZW52YCBwcm9n
cmFtbWF0aWNhbGx5Lgo8YnIvPlRoaXMgaXMgaGVscGZ1bCBmb3IgbW9yZSBz
b3BoaXN0aWNhdGVkIHZpc3VhbGl6YXRpb25zIGluIHdoaWNoIGNvbmZpZ3Vy
YXRpb24gaXMgbWVhbmluZ2Z1bCwgZS5nLiBhIGRhdGEtcmljaCBkZW1vLCBh
IG1vZGVsIHRyYWluaW5nIGRhc2hib2FyZCwgb3Igc3lzdGVtYXRpYyBleHBl
cmltZW50YXRpb24uIFRoaXMgYWxzbyBtYWtlcyB0aGVtIGVhc3kgdG8gc2hh
cmUgYW5kIHJldXNlLgoKCiogKipGb3JrOioqIElmIHlvdSBlbnRlciBhIG5l
dyBlbnYgbmFtZSwgc2F2aW5nIHdpbGwgY3JlYXRlIGEgbmV3IGVudiAtLSBl
ZmZlY3RpdmVseSAqKmZvcmtpbmcqKiB0aGUgcHJldmlvdXMgZW52LgoKPiAq
KlRpcCoqOiBGb3JrIGFuIGVudmlyb25tZW50IGJlZm9yZSB5b3UgYmVnaW4g
dG8gbWFrZSBlZGl0cyB0byBlbnN1cmUgdGhhdCB5b3VyIGNoYW5nZXMgYXJl
IHNhdmVkIHNlcGVyYXRlbHkuCgojIyMgRmlsdGVyCllvdSBjYW4gdXNlIHRo
ZSBgZmlsdGVyYCB0byBkeW5hbWljYWxseSBzaWZ0IHRocm91Z2ggd2luZG93
cyBwcmVzZW50IGluIGFuIGVudiAtLSBqdXN0IHByb3ZpZGUgYSByZWd1bGFy
IGV4cHJlc3Npb24gd2l0aCB3aGljaCB0byBtYXRjaCB0aXRsZXMgb2Ygd2lu
ZG93IHlvdSB3YW50IHRvIHNob3cuIFRoaXMgY2FuIGJlIGhlbHBmdWwgaW4g
dXNlIGNhc2VzIGludm9sdmluZyBhbiBlbnYgd2l0aCBtYW55IHdpbmRvd3Mg
ZS5nLiB3aGVuIHN5c3RlbWF0aWNhbGx5IGNoZWNraW5nIGV4cGVyaW1lbnRh
bCByZXN1bHRzLgoKPHAgYWxpZ249ImNlbnRlciI+PGltZyBhbGlnbj0iY2Vu
dGVyIiBzcmM9Imh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRl
bnQuY29tLzEyNzY4NjcvMzQ2MTgxMTgtYjg2Y2IxMzgtZjIwYi0xMWU3LTgz
NGQtYjdkNzAzOTMxM2YwLnBuZyIgd2lkdGg9IjMwMCIgLz48L3A+Cgo+ICoq
Tm90ZSoqOiBJZiB5b3UgaGF2ZSBzYXZlZCB5b3VyIGN1cnJlbnQgdmlldywg
dGhlIHZpZXcgd2lsbCBiZSByZXN0b3JlZCBhZnRlciBjbGVhcmluZyB0aGUg
ZmlsdGVyLgo+IDxwIGFsaWduPSJjZW50ZXIiPjxpbWcgYWxpZ249ImNlbnRl
ciIgc3JjPSJodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50
LmNvbS8xMjc2ODY3LzM0ODQ5OTEyLWYwNjkzZjMwLWY2ZjEtMTFlNy05MGI2
LTJhMzlmODMyODBlOC5naWYiIHdpZHRoPSI1MDAiIC8+PC9wPgoKIyMjIFZp
ZXdzCjxwIGFsaWduPSJjZW50ZXIiPjxpbWcgYWxpZ249ImNlbnRlciIgc3Jj
PSJodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8x
Mjc2ODY3LzM0NjE4MTczLWUyNTQ2ZjQwLWYyMGItMTFlNy05OTY5LTE2MjY3
ODkxZmI1My5wbmciIHdpZHRoPSIzMDAiIC8+PC9wPgoKSXQgaXMgcG9zc2li
bGUgdG8gbWFuYWdlIHRoZSB2aWV3cyBzaW1wbHkgYnkgZHJhZ2dpbmcgdGhl
IHRvcHMgb2Ygd2luZG93cyBhcm91bmQsIGhvd2V2ZXIgYWRkaXRpb25hbCBm
ZWF0dXJlcyBleGlzdCB0byBrZWVwIHZpZXdzIG9yZ2FuaXplZCBhbmQgc2F2
ZSBjb21tb24gdmlld3MuIFZpZXcgbWFuYWdlbWVudCBjYW4gYmUgdXNlZnVs
IGZvciBzYXZpbmcgYW5kIHN3aXRjaGluZyBiZXR3ZWVuIG11bHRpcGxlIGNv
bW1vbiBvcmdhbml6YXRpb25zIG9mIHlvdXIgd2luZG93cy4KCiMjIyMgU2F2
aW5nL0RlbGV0aW5nIFZpZXdzClVzaW5nIHRoZSBmb2xkZXIgaWNvbiwgYSBk
aWFsb2cgd2luZG93IG9wZW5zIHdoZXJlIHZpZXdzIGNhbiBiZSBmb3JrZWQg
aW4gdGhlIHNhbWUgd2F5IHRoYXQgZW52cyBjYW4gYmUuIFNhdmluZyBhIHZp
ZXcgd2lsbCByZXRhaW4gdGhlIHBvc2l0aW9uIGFuZCBzaXplcyBvZiBhbGwg
b2YgdGhlIHdpbmRvd3MgaW4gYSBnaXZlbiBlbnZpcm9ubWVudC4gVmlld3Mg
YXJlIHNhdmVkIGluIGAkSE9NRS8udmlzZG9tL3ZpZXcvbGF5b3V0cy5qc29u
YCBpbiB0aGUgdmlzZG9tIGZpbGVwYXRoLgoKPiAqKk5vdGUqKjogU2F2ZWQg
dmlld3MgYXJlIHN0YXRpYywgYW5kIGVkaXRpbmcgYSBzYXZlZCB2aWV3IGNv
cGllcyB0aGF0IHZpZXcgb3ZlciB0byB0aGUgYGN1cnJlbnRgIHZpZXcgd2hl
cmUgZWRpdGluZyBjYW4gb2NjdXIuCgojIyMjIFJlLVBhY2tpbmcKVXNpbmcg
dGhlIHJlcGFjayBpY29uICg5IGJveGVzKSwgdmlzZG9tIHdpbGwgYXR0ZW1w
dCB0byBwYWNrIHlvdXIgd2luZG93cyBpbiBhIHdheSB0aGF0IHRoZXkgYmVz
dCBmaXQgd2hpbGUgcmV0YWluaW5nIHJvdy9jb2x1bW4gb3JkZXJpbmcuCgo+
ICoqTm90ZSoqOiBEdWUgdG8gdGhlIHJlbGlhbmNlIG9uIHJvdy9jb2x1bW4g
b3JkZXJpbmcgYW5kIGBSZWFjdEdyaWRMYXlvdXRgIHRoZSBmaW5hbCBsYXlv
dXQgbWlnaHQgYmUgc2xpZ2h0bHkgZGlmZmVyZW50IHRoYW4gd2hhdCBtaWdo
dCBiZSBleHBlY3RlZC4gV2UncmUgd29ya2luZyBvbiBpbXByb3ZpbmcgdGhh
dCBleHBlcmllbmNlIG9yIHByb3ZpZGluZyBhbHRlcm5hdGl2ZXMgdGhhdCBn
aXZlIG1vcmUgZmluZS10dW5lZCBjb250cm9sLgoKIyMjIyBSZWxvYWRpbmcg
Vmlld3MKPHAgYWxpZ249ImNlbnRlciI+PGltZyBhbGlnbj0iY2VudGVyIiBz
cmM9Imh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29t
LzEyNzY4NjcvMzQ2MjEwNDItOWM2YzA1ZjYtZjIxNS0xMWU3LTkyYzctNjBh
ZmUyYmY3ZTFlLmdpZiIgd2lkdGg9IjYwMCIgLz48L3A+CgpVc2luZyB0aGUg
dmlldyBkcm9wZG93biBpdCBpcyBwb3NzaWJsZSB0byBzZWxlY3QgcHJldmlv
dXNseSBzYXZlZCB2aWV3cywgcmVzdG9yaW5nIHRoZSBsb2NhdGlvbnMgYW5k
IHNpemVzIG9mIGFsbCBvZiB0aGUgd2luZG93cyB3aXRoaW4gdGhlIGN1cnJl
bnQgZW52aXJvbm1lbnQgdG8gdGhlIHBsYWNlcyB0aGV5IHdlcmUgd2hlbiB0
aGF0IHZpZXcgd2FzIHNhdmVkIGxhc3QuCgojIyBTZXR1cAoKUmVxdWlyZXMg
UHl0aG9uIDMKCmBgYGJhc2gKIyBJbnN0YWxsIFB5dGhvbiBzZXJ2ZXIgYW5k
IGNsaWVudCBmcm9tIHBpcAojIChTVEFCTEUgVkVSU0lPTiwgTk9UIEFMTCBD
VVJSRU5UIEZFQVRVUkVTIEFSRSBTVVBQT1JURUQpCnBpcCBpbnN0YWxsIHZp
c2RvbQoKYGBgCgpgYGBiYXNoCiMgSW5zdGFsbCB2aXNkb20gZnJvbSBzb3Vy
Y2UKcGlwIGluc3RhbGwgLWUgLgojIElmIHRoZSBhYm92ZSBydW5zIGludG8g
aXNzdWVzLCB5b3UgY2FuIHRyeSB0aGUgYmVsb3cKZWFzeV9pbnN0YWxsIC4K
CmBgYAoKIyMgVXNhZ2UKClN0YXJ0IHRoZSBzZXJ2ZXIgKHByb2JhYmx5IGlu
IGEgIGBzY3JlZW5gIG9yIGB0bXV4YCkgZnJvbSB0aGUgY29tbWFuZCBsaW5l
OgoKYGBgYmFzaAo+IHZpc2RvbQpgYGAKClZpc2RvbSBub3cgY2FuIGJlIGFj
Y2Vzc2VkIGJ5IGdvaW5nIHRvIGBodHRwOi8vbG9jYWxob3N0OjgwOTdgIGlu
IHlvdXIgYnJvd3Nlciwgb3IgeW91ciBvd24gaG9zdCBhZGRyZXNzIGlmIHNw
ZWNpZmllZC4KCj4gVGhlIGB2aXNkb21gIGNvbW1hbmQgaXMgZXF1aXZhbGVu
dCB0byBydW5uaW5nIGBweXRob24gLW0gdmlzZG9tLnNlcnZlcmAuCgo+SWYg
dGhlIGFib3ZlIGRvZXMgbm90IHdvcmssIHRyeSB1c2luZyBhbiBTU0ggdHVu
bmVsIHRvIHlvdXIgc2VydmVyIGJ5IGFkZGluZyB0aGUgZm9sbG93aW5nIGxp
bmUgdG8geW91ciBsb2NhbCAgYH4vLnNzaC9jb25maWdgOgpgYGBMb2NhbEZv
cndhcmQgMTI3LjAuMC4xOjgwOTcgMTI3LjAuMC4xOjgwOTdgYGAuCgojIyMj
IENvbW1hbmQgTGluZSBPcHRpb25zCgpUaGUgZm9sbG93aW5nIG9wdGlvbnMg
Y2FuIGJlIHByb3ZpZGVkIHRvIHRoZSBzZXJ2ZXI6CgoxLiBgLXBvcnRgIDog
VGhlIHBvcnQgdG8gcnVuIHRoZSBzZXJ2ZXIgb24uCjIuIGAtaG9zdG5hbWVg
IDogVGhlIGhvc3RuYW1lIHRvIHJ1biB0aGUgc2VydmVyIG9uLgozLiBgLWJh
c2VfdXJsYCA6IFRoZSBiYXNlIHNlcnZlciB1cmwgKGRlZmF1bHQgPSAvKS4K
NC4gYC1lbnZfcGF0aGAgOiBUaGUgcGF0aCB0byB0aGUgc2VyaWFsaXplZCBz
ZXNzaW9uIHRvIHJlbG9hZC4KNS4gYC1sb2dnaW5nX2xldmVsYCA6IExvZ2dp
bmcgbGV2ZWwgKGRlZmF1bHQgPSBJTkZPKS4gQWNjZXB0cyBib3RoIHN0YW5k
YXJkIHRleHQgYW5kIG51bWVyaWMgbG9nZ2luZyB2YWx1ZXMuCjYuIGAtcmVh
ZG9ubHlgIDogRmxhZyB0byBzdGFydCBzZXJ2ZXIgaW4gcmVhZG9ubHkgbW9k
ZS4KNy4gYC1lbmFibGVfbG9naW5gIDogRmxhZyB0byBzZXR1cCBhdXRoZW50
aWNhdGlvbiBmb3IgdGhlIHNldmVyLCByZXF1aXJpbmcgYSB1c2VybmFtZSBh
bmQgcGFzc3dvcmQgdG8gbG9naW4uCjguIGAtZm9yY2VfbmV3X2Nvb2tpZWAg
OiBGbGFnIHRvIHJlc2V0IHRoZSBzZWN1cmUgY29va2llIHVzZWQgYnkgdGhl
IHNlcnZlciwgaW52YWxpZGF0aW5nIGN1cnJlbnQgbG9naW4gY29va2llcy4K
UmVxdWlyZXMgYC1lbmFibGVfbG9naW5gLgoKV2hlbiBgLWVuYWJsZV9sb2dp
bmAgZmxhZyBpcyBwcm92aWRlZCwgdGhlIHNlcnZlciBhc2tzIHVzZXIgdG8g
aW5wdXQgY3JlZGVudGlhbHMgdXNpbmcgdGVybWluYWwgcHJvbXB0LiBBbHRl
cm5hdGV2aWx5LAp5b3UgY2FuIHNldHVwIGBWSVNET01fVVNFX0VOVl9DUkVE
RU5USUFMU2AgZW52IHZhcmlhYmxlLCBhbmQgdGhlbiBwcm92aWRlIHlvdXIg
dXNlcm5hbWUgYW5kIHBhc3N3b3JkIHZpYQpgVklTRE9NX1VTRVJOQU1FYCBh
bmQgYFZJU0RPTV9QQVNTV09SRGAgZW52IHZhcmlhYmxlcyB3aXRob3V0IG1h
bnVhbGx5IGludGVyYWN0aW5nIHdpdGggdGhlIHRlcm1pbmFsLiBUaGlzIHNl
dHVwCmlzIHVzZWZ1bCBpbiBjYXNlIGlmIHlvdSB3b3VsZCBsaWtlIHRvIGxh
dW5jaCBgdmlzZG9tYCBzZXJ2ZXIgZnJvbSBiYXNoIHNjcmlwdCwgb3IgZnJv
bSBKdXB5dGVyIG5vdGVib29rLgpgYGBiYXNoClZJU0RPTV9VU0VSTkFNRT11
c2VybmFtZQpWSVNET01fUEFTU1dPUkQ9cGFzc3dvcmQKVklTRE9NX1VTRV9F
TlZfQ1JFREVOVElBTFM9MSB2aXNkb20gLWVuYWJsZV9sb2dpbgpgYGAKWW91
IGNhbiBhbHNvIHVzZSBgVklTRE9NX0NPT0tJRWAgdmFyaWFibGUgdG8gcHJv
dmlkZSBjb29raWVzIHZhbHVlIGlmIHRoZSBjb29raWUgZmlsZSB3YXNuJ3Qg
Z2VuZXJhdGVkLCBvciB0aGUKZmxhZyBgLWZvcmNlX25ld19jb29raWVgIHdh
cyBzZXQuCgojIyMjIFB5dGhvbiBleGFtcGxlCmBgYHB5dGhvbgppbXBvcnQg
dmlzZG9tCmltcG9ydCBudW1weSBhcyBucAp2aXMgPSB2aXNkb20uVmlzZG9t
KCkKdmlzLnRleHQoJ0hlbGxvLCB3b3JsZCEnKQp2aXMuaW1hZ2UobnAub25l
cygoMywgMTAsIDEwKSkpCmBgYAoKIyMjIERlbW9zCgpgYGBiYXNoCnB5dGhv
biBleGFtcGxlL2RlbW8ucHkKYGBgCgoKIyMgQVBJCkZvciBhIHF1aWNrIGlu
dHJvZHVjdGlvbiBpbnRvIHRoZSBjYXBhYmlsaXRpZXMgb2YgYHZpc2RvbWAs
IGhhdmUgYSBsb29rIGF0IHRoZSBgZXhhbXBsZWAgZGlyZWN0b3J5LCBvciBy
ZWFkIHRoZSBkZXRhaWxzIGJlbG93LgoKIyMjIFZpc2RvbSBBcmd1bWVudHMg
KFB5dGhvbiBvbmx5KQpUaGUgcHl0aG9uIHZpc2RvbSBjbGllbnQgdGFrZXMg
YSBmZXcgb3B0aW9uczoKLSBgc2VydmVyYDogdGhlIGhvc3RuYW1lIG9mIHlv
dXIgdmlzZG9tIHNlcnZlciAoZGVmYXVsdDogYCdodHRwOi8vbG9jYWxob3N0
J2ApCi0gYHBvcnRgOiB0aGUgcG9ydCBmb3IgeW91ciB2aXNkb20gc2VydmVy
IChkZWZhdWx0OiBgODA5N2ApCi0gYGJhc2VfdXJsYDogdGhlIGJhc2Ugdmlz
ZG9tIHNlcnZlciB1cmwgKGRlZmF1bHQ6IGAvYCkKLSBgZW52YDogRGVmYXVs
dCBlbnZpcm9ubWVudCB0byBwbG90IHRvIHdoZW4gbm8gYGVudmAgaXMgcHJv
dmlkZWQgKGRlZmF1bHQ6IGBtYWluYCkKLSBgcmFpc2VfZXhjZXB0aW9uc2A6
IFJhaXNlIGV4Y2VwdGlvbnMgdXBvbiBmYWlsdXJlIHJhdGhlciB0aGFuIHBy
aW50aW5nIHRoZW0gKGRlZmF1bHQ6IGBUcnVlYCAoc29vbikpCi0gYGxvZ190
b19maWxlbmFtZWA6IElmIG5vdCBub25lLCBsb2cgYWxsIHBsb3R0aW5nIGFu
ZCB1cGRhdGluZyBldmVudHMgdG8gdGhlIGdpdmVuIGZpbGUgKGFwcGVuZCBt
b2RlKSBzbyB0aGF0IHRoZXkgY2FuIGJlIHJlcGxheWVkIGxhdGVyIHVzaW5n
IGByZXBsYXlfbG9nYCAoZGVmYXVsdDogYE5vbmVgKQotIGB1c2VfaW5jb21p
bmdfc29ja2V0YDogZW5hYmxlIHVzZSBvZiB0aGUgc29ja2V0IGZvciByZWNl
aXZpbmcgZXZlbnRzIGZyb20gdGhlIHdlYiBjbGllbnQsIGFsbG93aW5nIHVz
ZXIgdG8gcmVnaXN0ZXIgY2FsbGJhY2tzIChkZWZhdWx0OiBgVHJ1ZWApCi0g
YGh0dHBfcHJveHlfaG9zdGA6IERlcHJlY2F0ZWQuIFVzZSBQcm94aWVzIGFy
Z3VtZW50IGZvciBjb21wbGV0ZSBwcm94eSBzdXBwb3J0LgotIGBodHRwX3By
b3h5X3BvcnRgOiBEZXByZWNhdGVkLiBVc2UgUHJveGllcyBhcmd1bWVudCBm
b3IgY29tcGxldGUgcHJveHkgc3VwcG9ydC4KLSBgdXNlcm5hbWVgOiB1c2Vy
bmFtZSB0byB1c2UgZm9yIGF1dGhlbnRpY2F0aW9uLCBpZiBzZXJ2ZXIgc3Rh
cnRlZCB3aXRoIGAtZW5hYmxlX2xvZ2luYCAoZGVmYXVsdDogYE5vbmVgKQot
IGBwYXNzd29yZGA6IHBhc3N3b3JkIHRvIHVzZSBmb3IgYXV0aGVudGljYXRp
b24sIGlmIHNlcnZlciBzdGFydGVkIHdpdGggYC1lbmFibGVfbG9naW5gIChk
ZWZhdWx0OiBgTm9uZWApCi0gYHByb3hpZXNgOiBEaWN0aW9uYXJ5IG1hcHBp
bmcgcHJvdG9jb2wgdG8gdGhlIFVSTCBvZiB0aGUgcHJveHkgKGUuZy4ge2Bo
dHRwYDogYGZvby5iYXI6MzEyOGB9KSB0byBiZSB1c2VkIG9uIGVhY2ggUmVx
dWVzdC4gKGRlZmF1bHQ6IGBOb25lYCkKLSBgb2ZmbGluZWA6IEZsYWcgdG8g
cnVuIHZpc2RvbSBpbiBvZmZsaW5lIG1vZGUsIHdoZXJlIGFsbCByZXF1ZXN0
cyBhcmUgbG9nZ2VkIHRvIGZpbGUgcmF0aGVyIHRoYW4gdG8gdGhlIHNlcnZl
ci4gUmVxdWlyZXMgYGxvZ190b19maWxlbmFtZWAgaXMgc2V0LiBJbiBvZmZs
aW5lIG1vZGUsIGFsbCB2aXNkb20gY29tbWFuZHMgdGhhdCBkb24ndCBjcmVh
dGUgb3IgdXBkYXRlIHBsb3RzIHdpbGwgc2ltcGx5IHJldHVybiBgVHJ1ZWAu
IChkZWZhdWx0OiBgRmFsc2VgKQoKT3RoZXIgb3B0aW9ucyBhcmUgZWl0aGVy
IGN1cnJlbnRseSB1bnVzZWQgKGVuZHBvaW50LCBpcHY2KSBvciB1c2VkIGZv
ciBpbnRlcm5hbCBmdW5jdGlvbmFsaXR5LgoKIyMjIEJhc2ljcwpWaXNkb20g
b2ZmZXJzIHRoZSBmb2xsb3dpbmcgYmFzaWMgdmlzdWFsaXphdGlvbiBmdW5j
dGlvbnM6Ci0gW2B2aXMuaW1hZ2VgXSgjdmlzaW1hZ2UpICAgIDogaW1hZ2UK
LSBbYHZpcy5pbWFnZXNgXSgjdmlzaW1hZ2VzKSAgIDogbGlzdCBvZiBpbWFn
ZXMKLSBbYHZpcy50ZXh0YF0oI3Zpc3RleHQpICAgICA6IGFyYml0cmFyeSBI
VE1MCi0gW2B2aXMucHJvcGVydGllc2BdKCN2aXNwcm9wZXJ0aWVzKSAgICAg
OiBwcm9wZXJ0aWVzIGdyaWQKLSBbYHZpcy5hdWRpb2BdKCN2aXNhdWRpbykg
ICAgOiBhdWRpbwotIFtgdmlzLnZpZGVvYF0oI3Zpc3ZpZGVvKSAgICA6IHZp
ZGVvcwotIFtgdmlzLnN2Z2BdKCN2aXNzdmcpICAgICAgOiBTVkcgb2JqZWN0
Ci0gW2B2aXMubWF0cGxvdGBdKCN2aXNtYXRwbG90KSAgOiBtYXRwbG90bGli
IHBsb3QKLSBbYHZpcy5zYXZlYF0oI3Zpc3NhdmUpICAgICA6IHNlcmlhbGl6
ZSBzdGF0ZSBzZXJ2ZXItc2lkZQoKIyMjIFBsb3R0aW5nCldlIGhhdmUgd3Jh
cHBlZCBzZXZlcmFsIGNvbW1vbiBwbG90IHR5cGVzIHRvIG1ha2UgY3JlYXRp
bmcgYmFzaWMgdmlzdWFsaXphdGlvbnMgZWFzaWx5LiBUaGVzZSB2aXN1YWxp
emF0aW9ucyBhcmUgcG93ZXJlZCBieSBbUGxvdGx5XShodHRwczovL3Bsb3Qu
bHkvKS4KClRoZSBmb2xsb3dpbmcgQVBJIGlzIGN1cnJlbnRseSBzdXBwb3J0
ZWQ6Ci0gW2B2aXMuc2NhdHRlcmBdKCN2aXNzY2F0dGVyKSAgOiAyRCBvciAz
RCBzY2F0dGVyIHBsb3RzCi0gW2B2aXMubGluZWBdKCN2aXNsaW5lKSAgICAg
OiBsaW5lIHBsb3RzCi0gW2B2aXMuc3RlbWBdKCN2aXNzdGVtKSAgICAgOiBz
dGVtIHBsb3RzCi0gW2B2aXMuaGVhdG1hcGBdKCN2aXNoZWF0bWFwKSAgOiBo
ZWF0bWFwIHBsb3RzCi0gW2B2aXMuYmFyYF0oI3Zpc2JhcikgIDogYmFyIGdy
YXBocwotIFtgdmlzLmhpc3RvZ3JhbWBdKCN2aXNoaXN0b2dyYW0pIDogaGlz
dG9ncmFtcwotIFtgdmlzLmJveHBsb3RgXSgjdmlzYm94cGxvdCkgIDogYm94
cGxvdHMKLSBbYHZpcy5zdXJmYF0oI3Zpc3N1cmYpICAgICA6IHN1cmZhY2Ug
cGxvdHMKLSBbYHZpcy5jb250b3VyYF0oI3Zpc2NvbnRvdXIpICA6IGNvbnRv
dXIgcGxvdHMKLSBbYHZpcy5xdWl2ZXJgXSgjdmlzcXVpdmVyKSAgIDogcXVp
dmVyIHBsb3RzCi0gW2B2aXMubWVzaGBdKCN2aXNtZXNoKSAgICAgOiBtZXNo
IHBsb3RzCgojIyMgR2VuZXJpYyBQbG90cwpOb3RlIHRoYXQgdGhlIHNlcnZl
ciBBUEkgYWRoZXJlcyB0byB0aGUgUGxvdGx5IGNvbnZlbnRpb24gb2YgYGRh
dGFgIGFuZCBgbGF5b3V0YCBvYmplY3RzLCBzdWNoIHRoYXQgeW91IGNhbiBw
cm9kdWNlIHlvdXIgb3duIGFyYml0cmFyeSBgUGxvdGx5YCB2aXN1YWxpemF0
aW9uczoKCmBgYHB5dGhvbgppbXBvcnQgdmlzZG9tCnZpcyA9IHZpc2RvbS5W
aXNkb20oKQoKdHJhY2UgPSBkaWN0KHg9WzEsIDIsIDNdLCB5PVs0LCA1LCA2
XSwgbW9kZT0ibWFya2VycytsaW5lcyIsIHR5cGU9J2N1c3RvbScsCiAgICAg
ICAgICAgICBtYXJrZXI9eydjb2xvcic6ICdyZWQnLCAnc3ltYm9sJzogMTA0
LCAnc2l6ZSc6ICIxMCJ9LAogICAgICAgICAgICAgdGV4dD1bIm9uZSIsICJ0
d28iLCAidGhyZWUiXSwgbmFtZT0nMXN0IFRyYWNlJykKbGF5b3V0ID0gZGlj
dCh0aXRsZT0iRmlyc3QgUGxvdCIsIHhheGlzPXsndGl0bGUnOiAneDEnfSwg
eWF4aXM9eyd0aXRsZSc6ICd4Mid9KQoKdmlzLl9zZW5kKHsnZGF0YSc6IFt0
cmFjZV0sICdsYXlvdXQnOiBsYXlvdXQsICd3aW4nOiAnbXl3aW4nfSkKYGBg
CgojIyMgT3RoZXJzCi0gW2B2aXMuY2xvc2VgXSgjdmlzY2xvc2UpICAgIDog
Y2xvc2UgYSB3aW5kb3cgYnkgaWQKLSBbYHZpcy5kZWxldGVfZW52YF0oI3Zp
c2RlbGV0ZV9lbnYpIDogZGVsZXRlIGFuIGVudmlyb25tZW50IGJ5IGVudl9p
ZAotIFtgdmlzLndpbl9leGlzdHNgXSgjdmlzd2luX2V4aXN0cykgOiBjaGVj
ayBpZiBhIHdpbmRvdyBhbHJlYWR5IGV4aXN0cyBieSBpZAotIFtgdmlzLmdl
dF9lbnZfbGlzdGBdKCN2aXNnZXRfZW52X2xpc3QpIDogZ2V0IGEgbGlzdCBv
ZiBhbGwgb2YgdGhlIGVudmlyb25tZW50cyBvbiB5b3VyIHNlcnZlcgotIFtg
dmlzLndpbl9oYXNoYF0oI3Zpc3dpbl9oYXNoKTogZ2V0IG1kNSBoYXNoIG9m
IHdpbmRvdydzIGNvbnRlbnRzCi0gW2B2aXMuZ2V0X3dpbmRvd19kYXRhYF0o
I3Zpc2dldF93aW5kb3dfZGF0YSk6IGdldCBjdXJyZW50IGRhdGEgZm9yIGEg
d2luZG93Ci0gW2B2aXMuY2hlY2tfY29ubmVjdGlvbmBdKCN2aXNjaGVja19j
b25uZWN0aW9uKTogY2hlY2sgaWYgdGhlIHNlcnZlciBpcyBjb25uZWN0ZWQK
LSBbYHZpcy5yZXBsYXlfbG9nYF0oI3Zpc3JlcGxheV9sb2cpOiByZXBsYXkg
dGhlIGFjdGlvbnMgZnJvbSB0aGUgcHJvdmlkZWQgbG9nIGZpbGUKCgojIyBE
ZXRhaWxzCiFbdmlzZG9tX2JpZ10oaHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNv
bnRlbnQuY29tLy1icUg5VVhDdy1CRS9XTDJVc2RycmJBSS9BQUFBQUFBQW5Z
Yy9lbXJ4d0NtbnJXNF9DTFR5eVV0dEIwU1lSSi1pNENDaVFDTGNCL3MwL1Nj
cmVlbitTaG90KzIwMTctMDMtMDYrYXQrMTAuNTEuMDIrQU0ucG5nInZpc2Rv
bV9iaWciKQoKIyMjIEJhc2ljcwoKIyMjIyB2aXMuaW1hZ2UKVGhpcyBmdW5j
dGlvbiBkcmF3cyBhbiBgaW1nYC4gSXQgdGFrZXMgYXMgaW5wdXQgYW4gYEN4
SHhXYCB0ZW5zb3IgYGltZ2AKdGhhdCBjb250YWlucyB0aGUgaW1hZ2UuCgpU
aGUgZm9sbG93aW5nIGBvcHRzYCBhcmUgc3VwcG9ydGVkOgoKLSBganBncXVh
bGl0eWA6IEpQRyBxdWFsaXR5IChgbnVtYmVyYCAwLTEwMCkuIElmIGRlZmlu
ZWQgaW1hZ2Ugd2lsbCBiZSBzYXZlZCBhcyBKUEcgdG8gcmVkdWNlIGZpbGUg
c2l6ZS4gSWYgbm90IGRlZmluZWQgaW1hZ2Ugd2lsbCBiZSBzYXZlZCBhcyBQ
TkcuCi0gYGNhcHRpb25gOiBDYXB0aW9uIGZvciB0aGUgaW1hZ2UKLSBgc3Rv
cmVfaGlzdG9yeWA6IEtlZXAgYWxsIGltYWdlcyBzdG9yZWQgdG8gdGhlIHNh
bWUgd2luZG93IGFuZCBhdHRhY2ggYSBzbGlkZXIgdG8gdGhlIGJvdHRvbSB0
aGF0IHdpbGwgbGV0IHlvdSBzZWxlY3QgdGhlIGltYWdlIHRvIHZpZXcuIFlv
dSBtdXN0IGFsd2F5cyBwcm92aWRlIHRoaXMgb3B0IHdoZW4gc2VuZGluZyBu
ZXcgaW1hZ2VzIHRvIGFuIGltYWdlIHdpdGggaGlzdG9yeS4KCj4gKipOb3Rl
KiogWW91IGNhbiB1c2UgYWx0IG9uIGFuIGltYWdlIHBhbmUgdG8gdmlldyB0
aGUgeC95IGNvb3JkaW5hdGVzIG9mIHRoZSBjdXJzb3IuIFlvdSBjYW4gYWxz
byBjdHJsLXNjcm9sbCB0byB6b29tLCBhbHQgc2Nyb2xsIHRvIHBhbiB2ZXJ0
aWNhbGx5LCBhbmQgYWx0LXNoaWZ0IHNjcm9sbCB0byBwYW4gaG9yaXpvbnRh
bGx5LiBEb3VibGUgY2xpY2sgaW5zaWRlIHRoZSBwYW5lIHRvIHJlc3RvcmUg
dGhlIGltYWdlIHRvIGRlZmF1bHQuCgoKIyMjIyB2aXMuaW1hZ2VzCgpUaGlz
IGZ1bmN0aW9uIGRyYXdzIGEgbGlzdCBvZiBgaW1hZ2VzYC4gSXQgdGFrZXMg
YW4gaW5wdXQgYEIgeCBDIHggSCB4IFdgIHRlbnNvciBvciBhIGBsaXN0IG9m
IGltYWdlc2AgYWxsIG9mIHRoZSBzYW1lIHNpemUuIEl0IG1ha2VzIGEgZ3Jp
ZCBvZiBpbWFnZXMgb2Ygc2l6ZSAoQiAvIG5yb3csIG5yb3cpLgoKVGhlIGZv
bGxvd2luZyBhcmd1bWVudHMgYW5kIGBvcHRzYCBhcmUgc3VwcG9ydGVkOgoK
LSBgbnJvd2A6IE51bWJlciBvZiBpbWFnZXMgaW4gYSByb3cKLSBgcGFkZGlu
Z2A6IFBhZGRpbmcgYXJvdW5kIHRoZSBpbWFnZSwgZXF1YWwgcGFkZGluZyBh
cm91bmQgYWxsIDQgc2lkZXMKLSBgb3B0cy5qcGdxdWFsaXR5YDogSlBHIHF1
YWxpdHkgKGBudW1iZXJgIDAtMTAwKS4gSWYgZGVmaW5lZCBpbWFnZSB3aWxs
IGJlIHNhdmVkIGFzIEpQRyB0byByZWR1Y2UgZmlsZSBzaXplLiBJZiBub3Qg
ZGVmaW5lZCBpbWFnZSB3aWxsIGJlIHNhdmVkIGFzIFBORy4KLSBgb3B0cy5j
YXB0aW9uYDogQ2FwdGlvbiBmb3IgdGhlIGltYWdlCgojIyMjIHZpcy50ZXh0
ClRoaXMgZnVuY3Rpb24gcHJpbnRzIHRleHQgaW4gYSAgYm94LiBZb3UgY2Fu
IHVzZSB0aGlzIHRvIGVtYmVkIGFyYml0cmFyeSBIVE1MLgpJdCB0YWtlcyBh
cyBpbnB1dCBhIGB0ZXh0YCBzdHJpbmcuCk5vIHNwZWNpZmljIGBvcHRzYCBh
cmUgY3VycmVudGx5IHN1cHBvcnRlZC4KCiMjIyMgdmlzLnByb3BlcnRpZXMK
VGhpcyBmdW5jdGlvbiBzaG93cyBlZGl0YWJsZSBwcm9wZXJ0aWVzIGluIGEg
cGFuZS4gUHJvcGVydGllcyBhcmUgZXhwZWN0ZWQgdG8gYmUgYSBMaXN0IG9m
IERpY3RzIGUuZy46CmBgYAogICAgcHJvcGVydGllcyA9IFsKICAgICAgICB7
J3R5cGUnOiAndGV4dCcsICduYW1lJzogJ1RleHQgaW5wdXQnLCAndmFsdWUn
OiAnaW5pdGlhbCd9LAogICAgICAgIHsndHlwZSc6ICdudW1iZXInLCAnbmFt
ZSc6ICdOdW1iZXIgaW5wdXQnLCAndmFsdWUnOiAnMTInfSwKICAgICAgICB7
J3R5cGUnOiAnYnV0dG9uJywgJ25hbWUnOiAnQnV0dG9uJywgJ3ZhbHVlJzog
J1N0YXJ0J30sCiAgICAgICAgeyd0eXBlJzogJ2NoZWNrYm94JywgJ25hbWUn
OiAnQ2hlY2tib3gnLCAndmFsdWUnOiBUcnVlfSwKICAgICAgICB7J3R5cGUn
OiAnc2VsZWN0JywgJ25hbWUnOiAnU2VsZWN0JywgJ3ZhbHVlJzogMSwgJ3Zh
bHVlcyc6IFsnUmVkJywgJ0dyZWVuJywgJ0JsdWUnXX0sCiAgICBdCmBgYApT
dXBwb3J0ZWQgdHlwZXM6CiAtIHRleHQ6IHN0cmluZwogLSBudW1iZXI6IGRl
Y2ltYWwgbnVtYmVyCiAtIGJ1dHRvbjogYnV0dG9uIGxhYmVsZWQgd2l0aCAi
dmFsdWUiCiAtIGNoZWNrYm94OiBib29sZWFuIHZhbHVlIHJlbmRlcmVkIGFz
IGEgY2hlY2tib3gKIC0gc2VsZWN0OiBtdWx0aXBsZSB2YWx1ZXMgc2VsZWN0
IGJveAogICAgLSBgdmFsdWVgOiBpZCBvZiBzZWxlY3RlZCB2YWx1ZSAoemVy
byBiYXNlZCkKICAgIC0gYHZhbHVlc2A6IGxpc3Qgb2YgcG9zc2libGUgdmFs
dWVzCgpDYWxsYmFjayBhcmUgY2FsbGVkIG9uIHByb3BlcnR5IHZhbHVlIHVw
ZGF0ZToKIC0gYGV2ZW50X3R5cGVgOiBgIlByb3BlcnR5VXBkYXRlImAKIC0g
YHByb3BlcnR5SWRgOiBwb3NpdGlvbiBpbiB0aGUgYHByb3BlcnRpZXNgIGxp
c3QKIC0gYHZhbHVlYDogbmV3IHZhbHVlCgpObyBzcGVjaWZpYyBgb3B0c2Ag
YXJlIGN1cnJlbnRseSBzdXBwb3J0ZWQuCgojIyMjIHZpcy5hdWRpbwpUaGlz
IGZ1bmN0aW9uIHBsYXlzIGF1ZGlvLiBJdCB0YWtlcyBhcyBpbnB1dCB0aGUg
ZmlsZW5hbWUgb2YgdGhlIGF1ZGlvCmZpbGUgb3IgYW4gYE5gIHRlbnNvciBj
b250YWluaW5nIHRoZSB3YXZlZm9ybSAodXNlIGFuIGBOeDJgIG1hdHJpeCBm
b3Igc3RlcmVvCmF1ZGlvKS4gVGhlIGZ1bmN0aW9uIGRvZXMgbm90IHN1cHBv
cnQgYW55IHBsb3Qtc3BlY2lmaWMgYG9wdHNgLgoKVGhlIGZvbGxvd2luZyBg
b3B0c2AgYXJlIHN1cHBvcnRlZDoKCi0gYG9wdHMuc2FtcGxlX2ZyZXF1ZW5j
eWA6IHNhbXBsZSBmcmVxdWVuY3kgKGBpbnRlZ2VyYCA+IDA7IGRlZmF1bHQg
PSA0NDEwMCkKCktub3duIGlzc3VlOiBWaXNkb20gdXNlcyBzY2lweSB0byBj
b252ZXJ0IHRlbnNvciBpbnB1dHMgdG8gd2F2ZSBmaWxlcy4gU29tZQp2ZXJz
aW9ucyBvZiBDaHJvbWUgYXJlIGtub3duIG5vdCB0byBwbGF5IHRoZXNlIHdh
dmUgZmlsZXMgKEZpcmVmb3ggYW5kIFNhZmFyaSB3b3JrIGZpbmUpLgoKIyMj
IyB2aXMudmlkZW8KVGhpcyBmdW5jdGlvbiBwbGF5cyBhIHZpZGVvLiBJdCB0
YWtlcyBhcyBpbnB1dCB0aGUgZmlsZW5hbWUgb2YgdGhlIHZpZGVvCmB2aWRl
b2ZpbGVgIG9yIGEgYEx4SHhXeENgLXNpemVkCmB0ZW5zb3JgIGNvbnRhaW5p
bmcgYWxsIHRoZSBmcmFtZXMgb2YgdGhlIHZpZGVvIGFzIGlucHV0LiBUaGUK
ZnVuY3Rpb24gZG9lcyBub3Qgc3VwcG9ydCBhbnkgcGxvdC1zcGVjaWZpYyBg
b3B0c2AuCgpUaGUgZm9sbG93aW5nIGBvcHRzYCBhcmUgc3VwcG9ydGVkOgoK
LSBgb3B0cy5mcHNgOiBGUFMgZm9yIHRoZSB2aWRlbyAoYGludGVnZXJgID4g
MDsgZGVmYXVsdCA9IDI1KQoKTm90ZTogVXNpbmcgYHRlbnNvcmAgaW5wdXQg
cmVxdWlyZXMgdGhhdCBmZm1wZWcgaXMgaW5zdGFsbGVkIGFuZCB3b3JraW5n
LgpZb3VyIGFiaWxpdHkgdG8gcGxheSB2aWRlbyBtYXkgZGVwZW5kIG9uIHRo
ZSBicm93c2VyIHlvdSB1c2U6IHlvdXIgYnJvd3NlciBoYXMKdG8gc3VwcG9y
dCB0aGUgVGhlYW5vIGNvZGVjIGluIGFuIE9HRyBjb250YWluZXIgKENocm9t
ZSBzdXBwb3J0cyB0aGlzKS4KCiMjIyMgdmlzLnN2ZwpUaGlzIGZ1bmN0aW9u
IGRyYXdzIGFuIFNWRyBvYmplY3QuIEl0IHRha2VzIGFzIGlucHV0IGEgU1ZH
IHN0cmluZyBgc3Znc3RyYCBvcgp0aGUgbmFtZSBvZiBhbiBTVkcgZmlsZSBg
c3ZnZmlsZWAuIFRoZSBmdW5jdGlvbiBkb2VzIG5vdCBzdXBwb3J0IGFueSBz
cGVjaWZpYwpgb3B0c2AuCgojIyMjIHZpcy5tYXRwbG90ClRoaXMgZnVuY3Rp
b24gZHJhd3MgYSBNYXRwbG90bGliIGBwbG90YC4gVGhlIGZ1bmN0aW9uIHN1
cHBvcnRzCm9uZSBwbG90LXNwZWNpZmljIG9wdGlvbjogYHJlc2l6YWJsZWAu
Cgo+ICoqTm90ZSoqIFdoZW4gc2V0IHRvIGBUcnVlYCB0aGUgcGxvdCBpcyBy
ZXNpemVkIHdpdGggdGhlCnBhbmUuIFlvdSBuZWVkIGBiZWF1dGlmdWxzb3Vw
NGAgYW5kIGBseG1sYApwYWNrYWdlcyBpbnN0YWxsZWQgdG8gdXNlIHRoaXMg
b3B0aW9uLgoKPiAqKk5vdGUqKjogYG1hdHBsb3RgIGlzIG5vdCByZW5kZXJl
ZCB1c2luZyB0aGUgc2FtZSBiYWNrZW5kIGFzIHBsb3RseSBwbG90cywgYW5k
IGlzIHNvbWV3aGF0IGxlc3MgZWZmaWNpZW50LiBVc2luZyB0b28gbWFueSBt
YXRwbG90IHdpbmRvd3MgbWF5IGRlZ3JhZGUgdmlzZG9tIHBlcmZvcm1hbmNl
LgoKIyMjIyB2aXMucGxvdGx5cGxvdAoKVGhpcyBmdW5jdGlvbiBkcmF3cyBh
IFBsb3RseSBgRmlndXJlYCBvYmplY3QuIEl0IGRvZXMgbm90IGV4cGxpY2l0
bHkgdGFrZSBvcHRpb25zIGFzIGl0IGFzc3VtZXMgeW91IGhhdmUgYWxyZWFk
eSBleHBsaWNpdGx5IGNvbmZpZ3VyZWQgdGhlIGZpZ3VyZSdzIGBsYXlvdXRg
LgoKPiAqKk5vdGUqKiBZb3UgbXVzdCBoYXZlIHRoZSBgcGxvdGx5YCBQeXRo
b24gcGFja2FnZSBpbnN0YWxsZWQgdG8gdXNlIHRoaXMgZnVuY3Rpb24uIEl0
IGNhbiB0eXBpY2FsbHkgYmUgaW5zdGFsbGVkIGJ5IHJ1bm5pbmcgYHBpcCBp
bnN0YWxsIHBsb3RseWAuCgojIyMjIHZpcy5lbWJlZGRpbmdzCgpUaGlzIGZ1
bmN0aW9uIHZpc3VhbGl6ZXMgYSBjb2xsZWN0aW9uIG9mIGZlYXR1cmVzIHVz
aW5nIHRoZSBbQmFybmVzLUh1dCB0LVNORSBhbGdvcml0aG1dKGh0dHBzOi8v
Z2l0aHViLmNvbS9sdmRtYWF0ZW4vYmh0c25lKS4KClRoZSBmdW5jdGlvbiBh
Y2NlcHRzIHRoZSBmb2xsb3dpbmcgYXJndW1lbnRzOgotIGBmZWF0dXJlc2A6
IGEgbGlzdCBvZiB0ZW5zb3JzCi0gYGxhYmVsc2A6IGEgbGlzdCBvZiBjb3Jy
ZXNwb25kaW5nIGxhYmVscyBmb3IgdGhlIHRlbnNvcnMgcHJvdmlkZWQgZm9y
IGBmZWF0dXJlc2AKLSBgZGF0YV9nZXR0ZXI9Zm5gOiAob3B0aW9uYWwpIGEg
ZnVuY3Rpb24gdGhhdCB0YWtlcyBhcyBhIHBhcmFtZXRlciBhbiBpbmRleCBp
bnRvIHRoZSBmZWF0dXJlcyBhcnJheSBhbmQgcmV0dXJucyBhIHN1bW1hcnkg
cmVwcmVzZW50YXRpb24gb2YgdGhlIHRlbnNvci4gSWYgdGhpcyBpcyBzZXQs
IGBkYXRhX3R5cGVgIG11c3QgYWxzbyBiZSBzZXQuCi0gYGRhdGFfdHlwZT1z
dHJgOiAob3B0aW9uYWwpIGN1cnJlbnRseSB0aGUgb25seSBhY2NlcHRhYmxl
IHZhbHVlIGhlcmUgaXMgYCJodG1sImAKCldlIGN1cnJlbnRseSBhc3N1bWUg
dGhhdCB0aGVyZSBhcmUgbm8gbW9yZSB0aGFuIDEwIHVuaXF1ZSBsYWJlbHMs
IGluIHRoZSBmdXR1cmUgd2UgaG9wZSB0byBwcm92aWRlIGEgY29sb3JtYXAg
aW4gb3B0cyBmb3Igb3RoZXIgY2FzZXMuCgpGcm9tIHRoZSBVSSB5b3UgY2Fu
IGFsc28gZHJhdyBhIGxhc3NvIGFyb3VuZCBhIHN1YnNldCBvZiBmZWF0dXJl
cy4gVGhpcyB3aWxsIHJlcnVuIHRoZSB0LVNORSB2aXN1YWxpemF0aW9uIG9u
IHRoZSBzZWxlY3RlZCBzdWJzZXQuCgojIyMjIHZpcy5zYXZlClRoaXMgZnVu
Y3Rpb24gc2F2ZXMgdGhlIGBlbnZzYCB0aGF0IGFyZSBhbGl2ZSBvbiB0aGUg
dmlzZG9tIHNlcnZlci4gSXQgdGFrZXMgaW5wdXQgYSBsaXN0IG9mIGVudiBp
ZHMgdG8gYmUgc2F2ZWQuCgojIyMgUGxvdHRpbmcKRnVydGhlciBkZXRhaWxz
IG9uIHRoZSB3cmFwcGVkIHBsb3R0aW5nIGZ1bmN0aW9ucyBhcmUgZ2l2ZW4g
YmVsb3cuCgpUaGUgZXhhY3QgaW5wdXRzIGludG8gdGhlIHBsb3R0aW5nIGZ1
bmN0aW9ucyB2YXJ5LCBhbHRob3VnaCBtb3N0IG9mIHRoZW0gdGFrZSBhcyBp
bnB1dCBhIHRlbnNvciBgWGAgdGhhbiBjb250YWlucyB0aGUgZGF0YSBhbmQg
YW4gKG9wdGlvbmFsKSB0ZW5zb3IgYFlgIHRoYXQgY29udGFpbnMgb3B0aW9u
YWwgZGF0YSB2YXJpYWJsZXMgKHN1Y2ggYXMgbGFiZWxzIG9yIHRpbWVzdGFt
cHMpLiBBbGwgcGxvdHRpbmcgZnVuY3Rpb25zIHRha2UgYXMgaW5wdXQgYW4g
b3B0aW9uYWwgYHdpbmAgdGhhdCBjYW4gYmUgdXNlZCB0byBwbG90IGludG8g
YSBzcGVjaWZpYyB3aW5kb3c7IGVhY2ggcGxvdHRpbmcgZnVuY3Rpb24gYWxz
byByZXR1cm5zIHRoZSBgd2luYCBvZiB0aGUgd2luZG93IGl0IHBsb3R0ZWQg
aW4uIE9uZSBjYW4gYWxzbyBzcGVjaWZ5IHRoZSBgZW52YCAgdG8gd2hpY2gg
dGhlIHZpc3VhbGl6YXRpb24gc2hvdWxkIGJlIGFkZGVkLgoKIyMjIyB2aXMu
c2NhdHRlcgoKVGhpcyBmdW5jdGlvbiBkcmF3cyBhIDJEIG9yIDNEIHNjYXR0
ZXIgcGxvdC4gSXQgdGFrZXMgYXMgaW5wdXQgYW4gYE54MmAgb3IKYE54M2Ag
dGVuc29yIGBYYCB0aGF0IHNwZWNpZmllcyB0aGUgbG9jYXRpb25zIG9mIHRo
ZSBgTmAgcG9pbnRzIGluIHRoZQpzY2F0dGVyIHBsb3QuIEFuIG9wdGlvbmFs
IGBOYCB0ZW5zb3IgYFlgIGNvbnRhaW5pbmcgZGlzY3JldGUgbGFiZWxzIHRo
YXQKcmFuZ2UgYmV0d2VlbiBgMWAgYW5kIGBLYCBjYW4gYmUgc3BlY2lmaWVk
IGFzIHdlbGwgLS0gdGhlIGxhYmVscyB3aWxsIGJlCnJlZmxlY3RlZCBpbiB0
aGUgY29sb3JzIG9mIHRoZSBtYXJrZXJzLgoKYHVwZGF0ZWAgY2FuIGJlIHVz
ZWQgdG8gZWZmaWNpZW50bHkgdXBkYXRlIHRoZSBkYXRhIG9mIGFuIGV4aXN0
aW5nIHBsb3QuIFVzZSBgJ2FwcGVuZCdgIHRvIGFwcGVuZCBkYXRhLCBgJ3Jl
cGxhY2UnYCB0byB1c2UgbmV3IGRhdGEsIG9yIGAncmVtb3ZlJ2AgdG8gcmVt
b3ZlIHRoZSB0cmFjZSBzcGVjaWZpZWQgYnkgYG5hbWVgLgpVc2luZyBgdXBk
YXRlPSdhcHBlbmQnYCB3aWxsIGNyZWF0ZSBhIHBsb3QgaWYgaXQgZG9lc24n
dCBleGlzdCBhbmQgYXBwZW5kIHRvIHRoZSBleGlzdGluZyBwbG90IG90aGVy
d2lzZS4KSWYgdXBkYXRpbmcgYSBzaW5nbGUgdHJhY2UsIHVzZSBgbmFtZWAg
dG8gc3BlY2lmeSB0aGUgbmFtZSBvZiB0aGUgdHJhY2UgdG8gYmUgdXBkYXRl
ZC4gVXBkYXRlIGRhdGEgdGhhdCBpcyBhbGwgTmFOIGlzIGlnbm9yZWQgKGNh
biBiZSB1c2VkIGZvciBtYXNraW5nIHVwZGF0ZSkuCgoKVGhlIGZvbGxvd2lu
ZyBgb3B0c2AgYXJlIHN1cHBvcnRlZDoKCi0gYG9wdHMubWFya2Vyc3ltYm9s
YDogbWFya2VyIHN5bWJvbCAoYHN0cmluZ2A7IGRlZmF1bHQgPSBgJ2RvdCdg
KQotIGBvcHRzLm1hcmtlcnNpemVgICA6IG1hcmtlciBzaXplIChgbnVtYmVy
YDsgZGVmYXVsdCA9IGAnMTAnYCkKLSBgb3B0cy5tYXJrZXJjb2xvcmAgOiBj
b2xvciBwZXIgbWFya2VyLiAoYHRvcmNoLipUZW5zb3JgOyBkZWZhdWx0ID0g
YG5pbGApCi0gYG9wdHMubGVnZW5kYCAgICAgIDogYHRhYmxlYCBjb250YWlu
aW5nIGxlZ2VuZCBuYW1lcwotIGBvcHRzLnRleHRsYWJlbHNgICA6IHRleHQg
bGFiZWwgZm9yIGVhY2ggcG9pbnQgKGBsaXN0YDogZGVmYXVsdCA9IGBOb25l
YCkKLSBgb3B0cy5sYXlvdXRvcHRzYCAgOiBkaWN0IG9mIGFueSBhZGRpdGlv
bmFsIG9wdGlvbnMgdGhhdCB0aGUgZ3JhcGggYmFja2VuZCBhY2NlcHRzIGZv
ciBhIGxheW91dC4gRm9yIGV4YW1wbGUgYGxheW91dG9wdHMgPSB7J3Bsb3Rs
eSc6IHsnbGVnZW5kJzogeyd4JzowLCAneSc6MH19fWAuCi0gYG9wdHMudHJh
Y2VvcHRzYCAgIDogZGljdCBtYXBwaW5nIHRyYWNlIG5hbWVzIG9yIGluZGlj
ZXMgdG8gZGljdHMgb2YgYWRkaXRpb25hbCBvcHRpb25zIHRoYXQgdGhlIGdy
YXBoIGJhY2tlbmQgYWNjZXB0cy4gRm9yIGV4YW1wbGUgYHRyYWNlb3B0cyA9
IHsncGxvdGx5JzogeydteVRyYWNlJzogeydtb2RlJzogJ21hcmtlcnMnfX19
YC4KLSBgb3B0cy53ZWJnbGAgICAgICAgOiB1c2UgV2ViR0wgZm9yIHBsb3R0
aW5nIChgYm9vbGVhbmA7IGRlZmF1bHQgPSBgZmFsc2VgKS4gSXQgaXMgZmFz
dGVyIGlmIGEgcGxvdCBjb250YWlucyB0b28gbWFueSBwb2ludHMuIFVzZSBz
cGFyaW5nbHkgYXMgYnJvd3NlcnMgd29uJ3QgYWxsb3cgbW9yZSB0aGFuIGEg
Y291cGxlIG9mIFdlYkdMIGNvbnRleHRzIG9uIGEgc2luZ2xlIHBhZ2UuCgpg
b3B0cy5tYXJrZXJjb2xvcmAgaXMgYSBUZW5zb3Igd2l0aCBJbnRlZ2VyIHZh
bHVlcy4gVGhlIHRlbnNvciBjYW4gYmUgb2Ygc2l6ZSBgTmAgb3IgYE4geCAz
YCBvciBgS2Agb3IgYEsgeCAzYC4KCi0gVGVuc29yIG9mIHNpemUgYE5gOiBT
aW5nbGUgaW50ZW5zaXR5IHZhbHVlIHBlciBkYXRhIHBvaW50LiAwID0gYmxh
Y2ssIDI1NSA9IHJlZAotIFRlbnNvciBvZiBzaXplIGBOIHggM2A6IFJlZCwg
R3JlZW4gYW5kIEJsdWUgaW50ZW5zaXRpZXMgcGVyIGRhdGEgcG9pbnQuIDAs
MCwwID0gYmxhY2ssIDI1NSwyNTUsMjU1ID0gd2hpdGUKLSBUZW5zb3Igb2Yg
c2l6ZSBgS2AgYW5kIGBLIHggM2A6IEluc3RlYWQgb2YgaGF2aW5nIGEgdW5p
cXVlIGNvbG9yIHBlciBkYXRhIHBvaW50LCB0aGUgc2FtZSBjb2xvciBpcyBz
aGFyZWQgZm9yIGFsbCBwb2ludHMgb2YgYSBwYXJ0aWN1bGFyIGxhYmVsLgoK
CiMjIyMgdmlzLmxpbmUKVGhpcyBmdW5jdGlvbiBkcmF3cyBhIGxpbmUgcGxv
dC4gSXQgdGFrZXMgYXMgaW5wdXQgYW4gYE5gIG9yIGBOeE1gIHRlbnNvcgpg
WWAgdGhhdCBzcGVjaWZpZXMgdGhlIHZhbHVlcyBvZiB0aGUgYE1gIGxpbmVz
ICh0aGF0IGNvbm5lY3QgYE5gIHBvaW50cykKdG8gcGxvdC4gSXQgYWxzbyB0
YWtlcyBhbiBvcHRpb25hbCBgWGAgdGVuc29yIHRoYXQgc3BlY2lmaWVzIHRo
ZQpjb3JyZXNwb25kaW5nIHgtYXhpcyB2YWx1ZXM7IGBYYCBjYW4gYmUgYW4g
YE5gIHRlbnNvciAoaW4gd2hpY2ggY2FzZSBhbGwKbGluZXMgd2lsbCBzaGFy
ZSB0aGUgc2FtZSB4LWF4aXMgdmFsdWVzKSBvciBoYXZlIHRoZSBzYW1lIHNp
emUgYXMgYFlgLgoKYHVwZGF0ZWAgY2FuIGJlIHVzZWQgdG8gZWZmaWNpZW50
bHkgdXBkYXRlIHRoZSBkYXRhIG9mIGFuIGV4aXN0aW5nIHBsb3QuIFVzZSAn
YXBwZW5kJyB0byBhcHBlbmQgZGF0YSwgJ3JlcGxhY2UnIHRvIHVzZSBuZXcg
ZGF0YSwgb3IgJ3JlbW92ZScgdG8gcmVtb3ZlIHRoZSB0cmFjZSBzcGVjaWZp
ZWQgYnkgYG5hbWVgLiBJZiB1cGRhdGluZyBhIHNpbmdsZSB0cmFjZSwgdXNl
IGBuYW1lYCB0byBzcGVjaWZ5IHRoZSBuYW1lIG9mIHRoZSB0cmFjZSB0byBi
ZSB1cGRhdGVkLiBVcGRhdGUgZGF0YSB0aGF0IGlzIGFsbCBOYU4gaXMgaWdu
b3JlZCAoY2FuIGJlIHVzZWQgZm9yIG1hc2tpbmcgdXBkYXRlKS4KClRoZSBm
b2xsb3dpbmcgYG9wdHNgIGFyZSBzdXBwb3J0ZWQ6CgotIGBvcHRzLmZpbGxh
cmVhYCAgICA6IGZpbGwgYXJlYSBiZWxvdyBsaW5lIChgYm9vbGVhbmApCi0g
YG9wdHMubWFya2Vyc2AgICAgIDogc2hvdyBtYXJrZXJzIChgYm9vbGVhbmA7
IGRlZmF1bHQgPSBgZmFsc2VgKQotIGBvcHRzLm1hcmtlcnN5bWJvbGA6IG1h
cmtlciBzeW1ib2wgKGBzdHJpbmdgOyBkZWZhdWx0ID0gYCdkb3QnYCkKLSBg
b3B0cy5tYXJrZXJzaXplYCAgOiBtYXJrZXIgc2l6ZSAoYG51bWJlcmA7IGRl
ZmF1bHQgPSBgJzEwJ2ApCi0gYG9wdHMubGluZWNvbG9yYCAgIDogbGluZSBj
b2xvcnMgKGBucC5hcnJheWA7IGRlZmF1bHQgPSBOb25lKQotIGBvcHRzLmRh
c2hgICAgICAgICA6IGxpbmUgZGFzaCB0eXBlIGZvciBlYWNoIGxpbmUgKGBu
cC5hcnJheWA7IGRlZmF1bHQgPSAnc29saWQnKSwgb25lIG9mIGBzb2xpZGAs
IGBkYXNoYCwgYGRhc2hkb3RgIG9yIGBkYXNoYCwgc2l6ZSBzaG91bGQgbWF0
Y2ggbnVtYmVyIG9mIGxpbmVzIGJlaW5nIGRyYXduCi0gYG9wdHMubGVnZW5k
YCAgICAgIDogYHRhYmxlYCBjb250YWluaW5nIGxlZ2VuZCBuYW1lcwotIGBv
cHRzLmxheW91dG9wdHNgICA6IGBkaWN0YCBvZiBhbnkgYWRkaXRpb25hbCBv
cHRpb25zIHRoYXQgdGhlIGdyYXBoIGJhY2tlbmQgYWNjZXB0cyBmb3IgYSBs
YXlvdXQuIEZvciBleGFtcGxlIGBsYXlvdXRvcHRzID0geydwbG90bHknOiB7
J2xlZ2VuZCc6IHsneCc6MCwgJ3knOjB9fX1gLgotIGBvcHRzLnRyYWNlb3B0
c2AgICA6IGBkaWN0YCBtYXBwaW5nIHRyYWNlIG5hbWVzIG9yIGluZGljZXMg
dG8gYGRpY3RgcyBvZiBhZGRpdGlvbmFsIG9wdGlvbnMgdGhhdCBwbG90Lmx5
IGFjY2VwdHMgZm9yIGEgdHJhY2UuCi0gYG9wdHMud2ViZ2xgICAgICAgIDog
dXNlIFdlYkdMIGZvciBwbG90dGluZyAoYGJvb2xlYW5gOyBkZWZhdWx0ID0g
YGZhbHNlYCkuIEl0IGlzIGZhc3RlciBpZiBhIHBsb3QgY29udGFpbnMgdG9v
IG1hbnkgcG9pbnRzLiBVc2Ugc3BhcmluZ2x5IGFzIGJyb3dzZXJzIHdvbid0
IGFsbG93IG1vcmUgdGhhbiBhIGNvdXBsZSBvZiBXZWJHTCBjb250ZXh0cyBv
biBhIHNpbmdsZSBwYWdlLgoKCiMjIyMgdmlzLnN0ZW0KVGhpcyBmdW5jdGlv
biBkcmF3cyBhIHN0ZW0gcGxvdC4gSXQgdGFrZXMgYXMgaW5wdXQgYW4gYE5g
IG9yIGBOeE1gIHRlbnNvcgpgWGAgdGhhdCBzcGVjaWZpZXMgdGhlIHZhbHVl
cyBvZiB0aGUgYE5gIHBvaW50cyBpbiB0aGUgYE1gIHRpbWUgc2VyaWVzLgpB
biBvcHRpb25hbCBgTmAgb3IgYE54TWAgdGVuc29yIGBZYCBjb250YWluaW5n
IHRpbWVzdGFtcHMgY2FuIGJlIHNwZWNpZmllZAphcyB3ZWxsOyBpZiBgWWAg
aXMgYW4gYE5gIHRlbnNvciB0aGVuIGFsbCBgTWAgdGltZSBzZXJpZXMgYXJl
IGFzc3VtZWQgdG8KaGF2ZSB0aGUgc2FtZSB0aW1lc3RhbXBzLgoKVGhlIGZv
bGxvd2luZyBgb3B0c2AgYXJlIHN1cHBvcnRlZDoKCi0gYG9wdHMuY29sb3Jt
YXBgOiBjb2xvcm1hcCAoYHN0cmluZ2A7IGRlZmF1bHQgPSBgJ1ZpcmlkaXMn
YCkKLSBgb3B0cy5sZWdlbmRgICA6IGB0YWJsZWAgY29udGFpbmluZyBsZWdl
bmQgbmFtZXMKLSBgb3B0cy5sYXlvdXRvcHRzYCAgOiBgZGljdGAgb2YgYW55
IGFkZGl0aW9uYWwgb3B0aW9ucyB0aGF0IHRoZSBncmFwaCBiYWNrZW5kIGFj
Y2VwdHMgZm9yIGEgbGF5b3V0LiBGb3IgZXhhbXBsZSBgbGF5b3V0b3B0cyA9
IHsncGxvdGx5JzogeydsZWdlbmQnOiB7J3gnOjAsICd5JzowfX19YC4KCiMj
IyMgdmlzLmhlYXRtYXAKVGhpcyBmdW5jdGlvbiBkcmF3cyBhIGhlYXRtYXAu
IEl0IHRha2VzIGFzIGlucHV0IGFuIGBOeE1gIHRlbnNvciBgWGAgdGhhdApz
cGVjaWZpZXMgdGhlIHZhbHVlIGF0IGVhY2ggbG9jYXRpb24gaW4gdGhlIGhl
YXRtYXAuCgpUaGUgZm9sbG93aW5nIGBvcHRzYCBhcmUgc3VwcG9ydGVkOgoK
LSBgb3B0cy5jb2xvcm1hcGAgICA6IGNvbG9ybWFwIChgc3RyaW5nYDsgZGVm
YXVsdCA9IGAnVmlyaWRpcydgKQotIGBvcHRzLnhtaW5gICAgICAgIDogY2xp
cCBtaW5pbXVtIHZhbHVlIChgbnVtYmVyYDsgZGVmYXVsdCA9IGBYOm1pbigp
YCkKLSBgb3B0cy54bWF4YCAgICAgICA6IGNsaXAgbWF4aW11bSB2YWx1ZSAo
YG51bWJlcmA7IGRlZmF1bHQgPSBgWDptYXgoKWApCi0gYG9wdHMuY29sdW1u
bmFtZXNgOiBgdGFibGVgIGNvbnRhaW5pbmcgeC1heGlzIGxhYmVscwotIGBv
cHRzLnJvd25hbWVzYCAgIDogYHRhYmxlYCBjb250YWluaW5nIHktYXhpcyBs
YWJlbHMKLSBgb3B0cy5sYXlvdXRvcHRzYCA6IGBkaWN0YCBvZiBhbnkgYWRk
aXRpb25hbCBvcHRpb25zIHRoYXQgdGhlIGdyYXBoIGJhY2tlbmQgYWNjZXB0
cyBmb3IgYSBsYXlvdXQuIEZvciBleGFtcGxlIGBsYXlvdXRvcHRzID0geydw
bG90bHknOiB7J2xlZ2VuZCc6IHsneCc6MCwgJ3knOjB9fX1gLgotIGBvcHRz
Lm5hbmNvbG9yYCAgIDogY29sb3IgZm9yIHBsb3R0aW5nIGBOYU5gcy4gSWYg
dGhpcyBpcyBgTm9uZWAsIGBOYU5gcyB3aWxsIGJlIHBsb3R0ZWQgYXMgdHJh
bnNwYXJlbnQuIChgc3RyaW5nYDsgZGVmYXVsdCA9IGBOb25lYCkKCiMjIyMg
dmlzLmJhcgpUaGlzIGZ1bmN0aW9uIGRyYXdzIGEgcmVndWxhciwgc3RhY2tl
ZCwgb3IgZ3JvdXBlZCBiYXIgcGxvdC4gSXQgdGFrZXMgYXMKaW5wdXQgYW4g
YE5gIG9yIGBOeE1gIHRlbnNvciBgWGAgdGhhdCBzcGVjaWZpZXMgdGhlIGhl
aWdodCBvZiBlYWNoIG9mIHRoZQpiYXJzLiBJZiBgWGAgY29udGFpbnMgYE1g
IGNvbHVtbnMsIHRoZSB2YWx1ZXMgY29ycmVzcG9uZGluZyB0byBlYWNoIHJv
dwphcmUgZWl0aGVyIHN0YWNrZWQgb3IgZ3JvdXBlZCAoZGVwZW5kaW5nIG9u
IGhvdyBgb3B0cy5zdGFja2VkYCBpcwpzZXQpLiBJbiBhZGRpdGlvbiB0byBg
WGAsIGFuIChvcHRpb25hbCkgYE5gIHRlbnNvciBgWWAgY2FuIGJlIHNwZWNp
ZmllZAp0aGF0IGNvbnRhaW5zIHRoZSBjb3JyZXNwb25kaW5nIHgtYXhpcyB2
YWx1ZXMuCgpUaGUgZm9sbG93aW5nIHBsb3Qtc3BlY2lmaWMgYG9wdHNgIGFy
ZSBjdXJyZW50bHkgc3VwcG9ydGVkOgoKLSBgb3B0cy5yb3duYW1lc2A6IGB0
YWJsZWAgY29udGFpbmluZyB4LWF4aXMgbGFiZWxzCi0gYG9wdHMuc3RhY2tl
ZGAgICAgOiBzdGFjayBtdWx0aXBsZSBjb2x1bW5zIGluIGBYYAotIGBvcHRz
LmxlZ2VuZGAgICAgIDogYHRhYmxlYCBjb250YWluaW5nIGxlZ2VuZCBsYWJl
bHMKLSBgb3B0cy5sYXlvdXRvcHRzYCAgOiBgZGljdGAgb2YgYW55IGFkZGl0
aW9uYWwgb3B0aW9ucyB0aGF0IHRoZSBncmFwaCBiYWNrZW5kIGFjY2VwdHMg
Zm9yIGEgbGF5b3V0LiBGb3IgZXhhbXBsZSBgbGF5b3V0b3B0cyA9IHsncGxv
dGx5JzogeydsZWdlbmQnOiB7J3gnOjAsICd5JzowfX19YC4KCiMjIyMgdmlz
Lmhpc3RvZ3JhbQpUaGlzIGZ1bmN0aW9uIGRyYXdzIGEgaGlzdG9ncmFtIG9m
IHRoZSBzcGVjaWZpZWQgZGF0YS4gSXQgdGFrZXMgYXMgaW5wdXQKYW4gYE5g
IHRlbnNvciBgWGAgdGhhdCBzcGVjaWZpZXMgdGhlIGRhdGEgb2Ygd2hpY2gg
dG8gY29uc3RydWN0IHRoZQpoaXN0b2dyYW0uCgpUaGUgZm9sbG93aW5nIHBs
b3Qtc3BlY2lmaWMgYG9wdHNgIGFyZSBjdXJyZW50bHkgc3VwcG9ydGVkOgoK
LSBgb3B0cy5udW1iaW5zYDogbnVtYmVyIG9mIGJpbnMgKGBudW1iZXJgOyBk
ZWZhdWx0ID0gMzApCi0gYG9wdHMubGF5b3V0b3B0c2AgIDogYGRpY3RgIG9m
IGFueSBhZGRpdGlvbmFsIG9wdGlvbnMgdGhhdCB0aGUgZ3JhcGggYmFja2Vu
ZCBhY2NlcHRzIGZvciBhIGxheW91dC4gRm9yIGV4YW1wbGUgYGxheW91dG9w
dHMgPSB7J3Bsb3RseSc6IHsnbGVnZW5kJzogeyd4JzowLCAneSc6MH19fWAu
CgojIyMjIHZpcy5ib3hwbG90ClRoaXMgZnVuY3Rpb24gZHJhd3MgYm94cGxv
dHMgb2YgdGhlIHNwZWNpZmllZCBkYXRhLiBJdCB0YWtlcyBhcyBpbnB1dAph
biBgTmAgb3IgYW4gYE54TWAgdGVuc29yIGBYYCB0aGF0IHNwZWNpZmllcyB0
aGUgYE5gIGRhdGEgdmFsdWVzIG9mIHdoaWNoCnRvIGNvbnN0cnVjdCB0aGUg
YE1gIGJveHBsb3RzLgoKVGhlIGZvbGxvd2luZyBwbG90LXNwZWNpZmljIGBv
cHRzYCBhcmUgY3VycmVudGx5IHN1cHBvcnRlZDoKCi0gYG9wdHMubGVnZW5k
YDogbGFiZWxzIGZvciBlYWNoIG9mIHRoZSBjb2x1bW5zIGluIGBYYAotIGBv
cHRzLmxheW91dG9wdHNgICA6IGBkaWN0YCBvZiBhbnkgYWRkaXRpb25hbCBv
cHRpb25zIHRoYXQgdGhlIGdyYXBoIGJhY2tlbmQgYWNjZXB0cyBmb3IgYSBs
YXlvdXQuIEZvciBleGFtcGxlIGBsYXlvdXRvcHRzID0geydwbG90bHknOiB7
J2xlZ2VuZCc6IHsneCc6MCwgJ3knOjB9fX1gLgoKIyMjIyB2aXMuc3VyZgpU
aGlzIGZ1bmN0aW9uIGRyYXdzIGEgc3VyZmFjZSBwbG90LiBJdCB0YWtlcyBh
cyBpbnB1dCBhbiBgTnhNYCB0ZW5zb3IgYFhgCnRoYXQgc3BlY2lmaWVzIHRo
ZSB2YWx1ZSBhdCBlYWNoIGxvY2F0aW9uIGluIHRoZSBzdXJmYWNlIHBsb3Qu
CgpUaGUgZm9sbG93aW5nIGBvcHRzYCBhcmUgc3VwcG9ydGVkOgoKLSBgb3B0
cy5jb2xvcm1hcGA6IGNvbG9ybWFwIChgc3RyaW5nYDsgZGVmYXVsdCA9IGAn
VmlyaWRpcydgKQotIGBvcHRzLnhtaW5gICAgIDogY2xpcCBtaW5pbXVtIHZh
bHVlIChgbnVtYmVyYDsgZGVmYXVsdCA9IGBYOm1pbigpYCkKLSBgb3B0cy54
bWF4YCAgICA6IGNsaXAgbWF4aW11bSB2YWx1ZSAoYG51bWJlcmA7IGRlZmF1
bHQgPSBgWDptYXgoKWApCi0gYG9wdHMubGF5b3V0b3B0c2AgIDogYGRpY3Rg
IG9mIGFueSBhZGRpdGlvbmFsIG9wdGlvbnMgdGhhdCB0aGUgZ3JhcGggYmFj
a2VuZCBhY2NlcHRzIGZvciBhIGxheW91dC4gRm9yIGV4YW1wbGUgYGxheW91
dG9wdHMgPSB7J3Bsb3RseSc6IHsnbGVnZW5kJzogeyd4JzowLCAneSc6MH19
fWAuCgojIyMjIHZpcy5jb250b3VyClRoaXMgZnVuY3Rpb24gZHJhd3MgYSBj
b250b3VyIHBsb3QuIEl0IHRha2VzIGFzIGlucHV0IGFuIGBOeE1gIHRlbnNv
ciBgWGAKdGhhdCBzcGVjaWZpZXMgdGhlIHZhbHVlIGF0IGVhY2ggbG9jYXRp
b24gaW4gdGhlIGNvbnRvdXIgcGxvdC4KClRoZSBmb2xsb3dpbmcgYG9wdHNg
IGFyZSBzdXBwb3J0ZWQ6CgotIGBvcHRzLmNvbG9ybWFwYDogY29sb3JtYXAg
KGBzdHJpbmdgOyBkZWZhdWx0ID0gYCdWaXJpZGlzJ2ApCi0gYG9wdHMueG1p
bmAgICAgOiBjbGlwIG1pbmltdW0gdmFsdWUgKGBudW1iZXJgOyBkZWZhdWx0
ID0gYFg6bWluKClgKQotIGBvcHRzLnhtYXhgICAgIDogY2xpcCBtYXhpbXVt
IHZhbHVlIChgbnVtYmVyYDsgZGVmYXVsdCA9IGBYOm1heCgpYCkKLSBgb3B0
cy5sYXlvdXRvcHRzYCAgOiBgZGljdGAgb2YgYW55IGFkZGl0aW9uYWwgb3B0
aW9ucyB0aGF0IHRoZSBncmFwaCBiYWNrZW5kIGFjY2VwdHMgZm9yIGEgbGF5
b3V0LiBGb3IgZXhhbXBsZSBgbGF5b3V0b3B0cyA9IHsncGxvdGx5Jzogeyds
ZWdlbmQnOiB7J3gnOjAsICd5JzowfX19YC4KCiMjIyMgdmlzLnF1aXZlcgpU
aGlzIGZ1bmN0aW9uIGRyYXdzIGEgcXVpdmVyIHBsb3QgaW4gd2hpY2ggdGhl
IGRpcmVjdGlvbiBhbmQgbGVuZ3RoIG9mIHRoZQphcnJvd3MgaXMgZGV0ZXJt
aW5lZCBieSB0aGUgYE54TWAgdGVuc29ycyBgWGAgYW5kIGBZYC4gVHdvIG9w
dGlvbmFsIGBOeE1gCnRlbnNvcnMgYGdyaWRYYCBhbmQgYGdyaWRZYCBjYW4g
YmUgcHJvdmlkZWQgdGhhdCBzcGVjaWZ5IHRoZSBvZmZzZXRzIG9mCnRoZSBh
cnJvd3M7IGJ5IGRlZmF1bHQsIHRoZSBhcnJvd3Mgd2lsbCBiZSBkb25lIG9u
IGEgcmVndWxhciBncmlkLgoKVGhlIGZvbGxvd2luZyBgb3B0c2AgYXJlIHN1
cHBvcnRlZDoKCi0gYG9wdHMubm9ybWFsaXplYDogIGxlbmd0aCBvZiBsb25n
ZXN0IGFycm93cyAoYG51bWJlcmApCi0gYG9wdHMuYXJyb3doZWFkc2A6IHNo
b3cgYXJyb3cgaGVhZHMgKGBib29sZWFuYDsgZGVmYXVsdCA9IGB0cnVlYCkK
LSBgb3B0cy5sYXlvdXRvcHRzYCAgOiBgZGljdGAgb2YgYW55IGFkZGl0aW9u
YWwgb3B0aW9ucyB0aGF0IHRoZSBncmFwaCBiYWNrZW5kIGFjY2VwdHMgZm9y
IGEgbGF5b3V0LiBGb3IgZXhhbXBsZSBgbGF5b3V0b3B0cyA9IHsncGxvdGx5
JzogeydsZWdlbmQnOiB7J3gnOjAsICd5JzowfX19YC4KCiMjIyMgdmlzLm1l
c2gKVGhpcyBmdW5jdGlvbiBkcmF3cyBhIG1lc2ggcGxvdCBmcm9tIGEgc2V0
IG9mIHZlcnRpY2VzIGRlZmluZWQgaW4gYW4KYE54MmAgb3IgYE54M2AgbWF0
cml4IGBYYCwgYW5kIHBvbHlnb25zIGRlZmluZWQgaW4gYW4gb3B0aW9uYWwg
YE14MmAgb3IKYE14M2AgbWF0cml4IGBZYC4KClRoZSBmb2xsb3dpbmcgYG9w
dHNgIGFyZSBzdXBwb3J0ZWQ6CgotIGBvcHRzLmNvbG9yYDogY29sb3IgKGBz
dHJpbmdgKQotIGBvcHRzLm9wYWNpdHlgOiBvcGFjaXR5IG9mIHBvbHlnb25z
IChgbnVtYmVyYCBiZXR3ZWVuIDAgYW5kIDEpCi0gYG9wdHMubGF5b3V0b3B0
c2AgIDogYGRpY3RgIG9mIGFueSBhZGRpdGlvbmFsIG9wdGlvbnMgdGhhdCB0
aGUgZ3JhcGggYmFja2VuZCBhY2NlcHRzIGZvciBhIGxheW91dC4gRm9yIGV4
YW1wbGUgYGxheW91dG9wdHMgPSB7J3Bsb3RseSc6IHsnbGVnZW5kJzogeyd4
JzowLCAneSc6MH19fWAuCgojIyMgQ3VzdG9taXppbmcgcGxvdHMKClRoZSBw
bG90dGluZyBmdW5jdGlvbnMgdGFrZSBhbiBvcHRpb25hbCBgb3B0c2AgdGFi
bGUgYXMgaW5wdXQgdGhhdCBjYW4gYmUgdXNlZCB0byBjaGFuZ2UgKGdlbmVy
aWMgb3IgcGxvdC1zcGVjaWZpYykgcHJvcGVydGllcyBvZiB0aGUgcGxvdHMu
IEFsbCBpbnB1dCBhcmd1bWVudHMgYXJlIHNwZWNpZmllZCBpbiBhIHNpbmds
ZSB0YWJsZTsgdGhlIGlucHV0IGFyZ3VtZW50cyBhcmUgbWF0Y2hlcyBiYXNl
ZCBvbiB0aGUga2V5cyB0aGV5IGhhdmUgaW4gdGhlIGlucHV0IHRhYmxlLgoK
VGhlIGZvbGxvd2luZyBgb3B0c2AgYXJlIGdlbmVyaWMgaW4gdGhlIHNlbnNl
IHRoYXQgdGhleSBhcmUgdGhlIHNhbWUgZm9yIGFsbCB2aXN1YWxpemF0aW9u
cyAoZXhjZXB0IGBwbG90LmltYWdlYCwgYHBsb3QudGV4dGAsIGBwbG90LnZp
ZGVvYCwgYW5kIGBwbG90LmF1ZGlvYCk6CgotIGBvcHRzLnRpdGxlYCAgICAg
ICA6IGZpZ3VyZSB0aXRsZQotIGBvcHRzLndpZHRoYCAgICAgICA6IGZpZ3Vy
ZSB3aWR0aAotIGBvcHRzLmhlaWdodGAgICAgICA6IGZpZ3VyZSBoZWlnaHQK
LSBgb3B0cy5zaG93bGVnZW5kYCAgOiBzaG93IGxlZ2VuZCAoYHRydWVgIG9y
IGBmYWxzZWApCi0gYG9wdHMueHR5cGVgICAgICAgIDogdHlwZSBvZiB4LWF4
aXMgKGAnbGluZWFyJ2Agb3IgYCdsb2cnYCkKLSBgb3B0cy54bGFiZWxgICAg
ICAgOiBsYWJlbCBvZiB4LWF4aXMKLSBgb3B0cy54dGlja2AgICAgICAgOiBz
aG93IHRpY2tzIG9uIHgtYXhpcyAoYGJvb2xlYW5gKQotIGBvcHRzLnh0aWNr
bWluYCAgICA6IGZpcnN0IHRpY2sgb24geC1heGlzIChgbnVtYmVyYCkKLSBg
b3B0cy54dGlja21heGAgICAgOiBsYXN0IHRpY2sgb24geC1heGlzIChgbnVt
YmVyYCkKLSBgb3B0cy54dGlja3ZhbHNgICAgOiBsb2NhdGlvbnMgb2YgdGlj
a3Mgb24geC1heGlzIChgdGFibGVgIG9mIGBudW1iZXJgcykKLSBgb3B0cy54
dGlja2xhYmVsc2AgOiB0aWNrcyBsYWJlbHMgb24geC1heGlzIChgdGFibGVg
IG9mIGBzdHJpbmdgcykKLSBgb3B0cy54dGlja3N0ZXBgICAgOiBkaXN0YW5j
ZXMgYmV0d2VlbiB0aWNrcyBvbiB4LWF4aXMgKGBudW1iZXJgKQotIGBvcHRz
Lnh0aWNrZm9udGAgICA6IGZvbnQgZm9yIHgtYXhpcyBsYWJlbHMgKGRpY3Qg
b2YgW2ZvbnQgaW5mb3JtYXRpb25dKGh0dHBzOi8vcGxvdC5seS9qYXZhc2Ny
aXB0L3JlZmVyZW5jZS8jbGF5b3V0LWZvbnQpKQotIGBvcHRzLnl0eXBlYCAg
ICAgICA6IHR5cGUgb2YgeS1heGlzIChgJ2xpbmVhcidgIG9yIGAnbG9nJ2Ap
Ci0gYG9wdHMueWxhYmVsYCAgICAgIDogbGFiZWwgb2YgeS1heGlzCi0gYG9w
dHMueXRpY2tgICAgICAgIDogc2hvdyB0aWNrcyBvbiB5LWF4aXMgKGBib29s
ZWFuYCkKLSBgb3B0cy55dGlja21pbmAgICAgOiBmaXJzdCB0aWNrIG9uIHkt
YXhpcyAoYG51bWJlcmApCi0gYG9wdHMueXRpY2ttYXhgICAgIDogbGFzdCB0
aWNrIG9uIHktYXhpcyAoYG51bWJlcmApCi0gYG9wdHMueXRpY2t2YWxzYCAg
IDogbG9jYXRpb25zIG9mIHRpY2tzIG9uIHktYXhpcyAoYHRhYmxlYCBvZiBg
bnVtYmVyYHMpCi0gYG9wdHMueXRpY2tsYWJlbHNgIDogdGlja3MgbGFiZWxz
IG9uIHktYXhpcyAoYHRhYmxlYCBvZiBgc3RyaW5nYHMpCi0gYG9wdHMueXRp
Y2tzdGVwYCAgIDogZGlzdGFuY2VzIGJldHdlZW4gdGlja3Mgb24geS1heGlz
IChgbnVtYmVyYCkKLSBgb3B0cy55dGlja2ZvbnRgICAgOiBmb250IGZvciB5
LWF4aXMgbGFiZWxzIChkaWN0IG9mIFtmb250IGluZm9ybWF0aW9uXShodHRw
czovL3Bsb3QubHkvamF2YXNjcmlwdC9yZWZlcmVuY2UvI2xheW91dC1mb250
KSkKLSBgb3B0cy5tYXJnaW5sZWZ0YCAgOiBsZWZ0IG1hcmdpbiAoaW4gcGl4
ZWxzKQotIGBvcHRzLm1hcmdpbnJpZ2h0YCA6IHJpZ2h0IG1hcmdpbiAoaW4g
cGl4ZWxzKQotIGBvcHRzLm1hcmdpbnRvcGAgICA6IHRvcCBtYXJnaW4gKGlu
IHBpeGVscykKLSBgb3B0cy5tYXJnaW5ib3R0b21gOiBib3R0b20gbWFyZ2lu
IChpbiBwaXhlbHMpCgpUaGUgb3RoZXIgb3B0aW9ucyBhcmUgdmlzdWFsaXph
dGlvbi1zcGVjaWZpYywgYW5kIGFyZSBkZXNjcmliZWQgaW4gdGhlCmRvY3Vt
ZW50YXRpb24gb2YgdGhlIGZ1bmN0aW9ucy4KCiMjIyBPdGhlcnMKCiMjIyMg
dmlzLmNsb3NlCgpUaGlzIGZ1bmN0aW9uIGNsb3NlcyBhIHNwZWNpZmljIHdp
bmRvdy4gSXQgdGFrZXMgaW5wdXQgd2luZG93IGlkIGB3aW5gIGFuZCBlbnZp
cm9ubWVudCBpZCBgZWlkYC4gVXNlIGB3aW5gIGFzIGBOb25lYCB0byBjbG9z
ZSBhbGwgd2luZG93cyBpbiBhbiBlbnZpcm9ubWVudC4KCiMjIyMgdmlzLmRl
bGV0ZV9lbnYKClRoaXMgZnVuY3Rpb24gZGVsZXRlcyBhIHNwZWNpZmllZCBl
bnYgZW50aXJlbHkuIEl0IHRha2VzIGVudiBpZCBgZWlkYCBhcyBpbnB1dC4K
Cj4gKipOb3RlKio6IGBkZWxldGVfZW52YCBpcyBkZWxldGVzIGFsbCBkYXRh
IGZvciBhbiBlbnZpcm9ubWVudCBhbmQgaXMgSVJSRVZFUlNJQkxFLiBEbyBu
b3QgdXNlIHVubGVzcyB5b3UgYWJzb2x1dGVseSB3YW50IHRvIHJlbW92ZSBh
biBlbnZpcm9ubWVudC4KCgojIyMjIHZpcy5mb3JrX2VudgoKVGhpcyBmdW5j
dGlvbiBmb3JrcyBhbiBlbnZpcm9ubWVudCwgc2ltaWxpYXIgdG8gdGhlIFVJ
IGZlYXR1cmUuCgpBcmd1bWVudHM6Ci0gYHByZXZfZWlkYDogRW52aXJvbm1l
bnQgSUQgdGhhdCB3ZSB3YW50IHRvIGZvcmsuCi0gYGVpZGA6IE5ldyBFbnZp
cm9ubWVudCBJRCB0aGF0IHdpbGwgYmUgY3JlYXRlZCB3aXRoIHRoZSBmb3Jr
LgoKPiAqKk5vdGUqKjogYGZvcmtfZW52YCBhbiBleGNlcHRpb24gd2lsbCBv
Y2N1ciBpZiBhbiBlbnYgdGhhdCBkb2Vzbid0IGV4aXN0IGlzIGZvcmtlZC4K
CiMjIyMgdmlzLndpbl9leGlzdHMKClRoaXMgZnVuY3Rpb24gcmV0dXJucyBh
IGJvb2wgaW5kaWNhdGluZyB3aGV0aGVyIG9yIG5vdCBhIHdpbmRvdyBgd2lu
YCBleGlzdHMgb24gdGhlIHNlcnZlciBhbHJlYWR5LiBSZXR1cm5zIE5vbmUg
aWYgc29tZXRoaW5nIHdlbnQgd3JvbmcuCgpPcHRpb25hbCBhcmd1bWVudHM6
Ci0gYGVudmA6IEVudmlyb25tZW50IHRvIHNlYXJjaCBmb3IgdGhlIHdpbmRv
dyBpbi4gRGVmYXVsdCBpcyBgTm9uZWAuCgojIyMjIHZpcy5nZXRfZW52X2xp
c3QKClRoaXMgZnVuY3Rpb24gcmV0dXJucyBhIGxpc3Qgb2YgYWxsIG9mIHRo
ZSBlbnZpcm9ubWVudHMgb24gdGhlIHNlcnZlciBhdCB0aGUgdGltZSBvZiBj
YWxsaW5nLiBJdCB0YWtlcyBubyBhcmd1bWVudHMuCgojIyMjIHZpcy53aW5f
aGFzaAoKVGhpcyBmdW5jdGlvbiByZXR1cm5zIG1kNSBoYXNoIG9mIHRoZSBj
b250ZW50cyBvZiBhIHdpbmRvdyBgd2luYCBpZiBpdCBleGlzdHMgb24gdGhl
IHNlcnZlci4gUmV0dXJucyBOb25lIG90aGVyd2lzZS4KCk9wdGlvbmFsIGFy
Z3VtZW50czoKLSBgZW52YCA6IEVudmlyb25tZW50IHRvIHNlYXJjaCBmb3Ig
dGhlIHdpbmRvdyBpbi4gRGVmYXVsdCBpcyBgTm9uZWAuCgoKIyMjIyB2aXMu
Z2V0X3dpbmRvd19kYXRhClRoaXMgZnVuY3Rpb24gcmV0dXJucyB0aGUgd2lu
ZG93IGRhdGEgZm9yIHRoZSBnaXZlbiB3aW5kb3cuIFJldHVybnMgZGF0YSBm
b3IgYWxsIHdpbmRvd3MgaW4gYW4gZW52IGlmIHdpbiBpcyBOb25lLgoKQXJn
dW1lbnRzOgotIGBlbnZgOiBFbnZpcm9ubWVudCB0byBzZWFyY2ggZm9yIHRo
ZSB3aW5kb3cgaW4uCi0gYHdpbmA6IFdpbmRvdyB0byByZXR1cm4gZGF0YSBm
b3IuIFNldCB0byBgTm9uZWAgdG8gcmV0cmlldmUgYWxsIHRoZSB3aW5kb3dz
IGluIGFuIGVudmlyb25tZW50LgoKIyMjIyB2aXMuY2hlY2tfY29ubmVjdGlv
bgoKVGhpcyBmdW5jdGlvbiByZXR1cm5zIGEgYm9vbCBpbmRpY2F0aW5nIHdo
ZXRoZXIgb3Igbm90IHRoZSBzZXJ2ZXIgaXMgY29ubmVjdGVkLiBJdCBhY2Nl
cHRzIGFuIG9wdGlvbmFsIGFyZ3VtZW50IGB0aW1lb3V0X3NlY29uZHNgIGZv
ciBhIG51bWJlciBvZiBzZWNvbmRzIHRvIHdhaXQgZm9yIHRoZSBzZXJ2ZXIg
dG8gY29tZSB1cC4KCiMjIyMgdmlzLnJlcGxheV9sb2cKVGhpcyBmdW5jdGlv
biB0YWtlcyB0aGUgY29udGVudHMgb2YgYSB2aXNkb20gbG9nIGFuZCByZXBs
YXlzIHRoZW0gdG8gdGhlIGN1cnJlbnQgc2VydmVyIHRvIHJlc3RvcmUgYSBz
dGF0ZSBvciBoYW5kbGUgYW55IG1pc3NpbmcgZW50cmllcy4KCkFyZ3VtZW50
czoKLSBgbG9nX2ZpbGVuYW1lYDogbG9nIGZpbGUgdG8gcmVwbGF5IHRoZSBj
b250ZW50cyBvZi4KCiMjIExpY2Vuc2UKdmlzZG9tIGlzIENyZWF0aXZlIENv
bW1vbnMgQXR0cmlidXRpb24tTm9uQ29tbWVyY2lhbCA0LjAgSW50ZXJuYXRp
b25hbCBQdWJsaWMgbGljZW5zZWQsIGFzIGZvdW5kIGluIHRoZSBMSUNFTlNF
IGZpbGUuCgojIyBOb3RlIG9uIEx1YSBUb3JjaCBTdXBwb3J0ClN1cHBvcnQg
Zm9yIEx1YSBUb3JjaCB3YXMgZGVwcmVjYXRlZCBmb2xsb3dpbmcgYHYwLjEu
OC40YC4gSWYgeW91J2QgbGlrZSB0byB1c2UgdG9yY2ggc3VwcG9ydCwgeW91
J2xsIG5lZWQgdG8gZG93bmxvYWQgdGhhdCByZWxlYXNlLiBZb3UgY2FuIGZv
bGxvdyB0aGUgdXNhZ2UgaW5zdHJ1Y3Rpb25zIHRoZXJlLCBidXQgaXQgaXMg
bm8gbG9uZ2VyIG9mZmljaWFsbHkgc3VwcG9ydGVkLgoKIyMgQ29udHJpYnV0
aW5nClNlZSBndWlkZWxpbmVzIGZvciBjb250cmlidXRpbmcgW2hlcmUuXSgu
L0NPTlRSSUJVVElORy5tZCkKCiMjIEFja25vd2xlZGdtZW50cwpWaXNkb20g
d2FzIGluc3BpcmVkIGJ5IHRvb2xzIGxpa2UgW2Rpc3BsYXldKGh0dHBzOi8v
Z2l0aHViLmNvbS9zenltL2Rpc3BsYXkpIGFuZCByZWxpZXMgb24gW1Bsb3Rs
eV0oaHR0cHM6Ly9wbG90Lmx5LykgYXMgYSBwbG90dGluZyBmcm9udC1lbmQu
Cg==
",,6741,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
