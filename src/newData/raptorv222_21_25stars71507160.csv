name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'shadowsocks_install',16878185,b'Auto Install Shadowsocks Server for CentOS/Debian/Ubuntu',b'Shell',16,7160,,413,False,b'https://api.github.com/repos/teddysun/shadowsocks_install/forks',"UmVtb3ZlZA==
",,7160,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'RxJava-Android-Samples',22132512,b'Learning RxJava for Android by example',b'Java',12,7154,,360,False,b'https://api.github.com/repos/kaushikgopal/RxJava-Android-Samples/forks',"TGVhcm5pbmcgUnhKYXZhIGZvciBBbmRyb2lkIGJ5IGV4YW1wbGUKPT09PT09
PT09PT09PT0KClRoaXMgaXMgYSByZXBvc2l0b3J5IHdpdGggcmVhbC13b3Js
ZCB1c2VmdWwgZXhhbXBsZXMgb2YgdXNpbmcgUnhKYXZhIHdpdGggQW5kcm9p
ZC4gW0l0IHVzdWFsbHkgd2lsbCBiZSBpbiBhIGNvbnN0YW50IHN0YXRlIG9m
ICJXb3JrIGluIFByb2dyZXNzIiAoV0lQKV0oaHR0cDovL2Jsb2cua2F1c2gu
Y28vMjAxNC8wOS8xNS9sZWFybmluZy1yeGphdmEtd2l0aC1hbmRyb2lkLWJ5
LWV4YW1wbGUvKS4KCkkndmUgYWxzbyBiZWVuIGdpdmluZyB0YWxrcyBhYm91
dCBMZWFybmluZyBSeCB1c2luZyBtYW55IG9mIHRoZSBleGFtcGxlcyBsaXN0
ZWQgaW4gdGhpcyByZXBvLgoKKiBbTGVhcm5pbmcgUnhKYXZhIEZvciBBbmRy
b2lkIGJ5IEV4YW1wbGUgOiBQYXJ0IDFdKGh0dHBzOi8vd3d3LnlvdXR1YmUu
Y29tL3dhdGNoP3Y9azNEMGNXeU5ubzQpIFxbW3NsaWRlc10oaHR0cHM6Ly9z
cGVha2VyZGVjay5jb20va2F1c2hpa2dvcGFsL2xlYXJuaW5nLXJ4amF2YS1m
b3ItYW5kcm9pZC1ieS1leGFtcGxlKVxdIChTRiBBbmRyb2lkIE1lZXR1cCAy
MDE1KQoqIFtMZWFybmluZyBSeCBieSBFeGFtcGxlIDogUGFydCAyXShodHRw
czovL3ZpbWVvLmNvbS8xOTA5MjI3OTQpIFxbW3NsaWRlc10oaHR0cHM6Ly9z
cGVha2VyZGVjay5jb20va2F1c2hpa2dvcGFsL2xlYXJuaW5nLXJ4LWJ5LWV4
YW1wbGUtMilcXSAow5hyZWRldiAyMDE2KQoKIyMgRXhhbXBsZXM6CgoxLiBb
QmFja2dyb3VuZCB3b3JrICYgY29uY3VycmVuY3kgKHVzaW5nIFNjaGVkdWxl
cnMpXSgjMS1iYWNrZ3JvdW5kLXdvcmstLWNvbmN1cnJlbmN5LXVzaW5nLXNj
aGVkdWxlcnMpCjIuIFtBY2N1bXVsYXRlIGNhbGxzICh1c2luZyBidWZmZXIp
XSgjMi1hY2N1bXVsYXRlLWNhbGxzLXVzaW5nLWJ1ZmZlcikKMy4gW0luc3Rh
bnQvQXV0byBzZWFyY2hpbmcgdGV4dCBsaXN0ZW5lcnMgKHVzaW5nIFN1Ympl
Y3RzICYgZGVib3VuY2UpXSgjMy1pbnN0YW50YXV0by1zZWFyY2hpbmctdGV4
dC1saXN0ZW5lcnMtdXNpbmctc3ViamVjdHMtLWRlYm91bmNlKQo0LiBbTmV0
d29ya2luZyB3aXRoIFJldHJvZml0ICYgUnhKYXZhICh1c2luZyB6aXAsIGZs
YXRtYXApXSgjNC1uZXR3b3JraW5nLXdpdGgtcmV0cm9maXQtLXJ4amF2YS11
c2luZy16aXAtZmxhdG1hcCkKNS4gW1R3by13YXkgZGF0YSBiaW5kaW5nIGZv
ciBUZXh0Vmlld3MgKHVzaW5nIFB1Ymxpc2hTdWJqZWN0KV0oIzUtdHdvLXdh
eS1kYXRhLWJpbmRpbmctZm9yLXRleHR2aWV3cy11c2luZy1wdWJsaXNoc3Vi
amVjdCkKNi4gW1NpbXBsZSBhbmQgQWR2YW5jZWQgcG9sbGluZyAodXNpbmcg
aW50ZXJ2YWwgYW5kIHJlcGVhdFdoZW4pXSgjNi1zaW1wbGUtYW5kLWFkdmFu
Y2VkLXBvbGxpbmctdXNpbmctaW50ZXJ2YWwtYW5kLXJlcGVhdHdoZW4pCjcu
IFtTaW1wbGUgYW5kIEFkdmFuY2VkIGV4cG9uZW50aWFsIGJhY2tvZmYgKHVz
aW5nIGRlbGF5IGFuZCByZXRyeVdoZW4pXSgjNy1zaW1wbGUtYW5kLWFkdmFu
Y2VkLWV4cG9uZW50aWFsLWJhY2tvZmYtdXNpbmctZGVsYXktYW5kLXJldHJ5
d2hlbikKOC4gW0Zvcm0gdmFsaWRhdGlvbiAodXNpbmcgY29tYmluZUxhdGVz
dCldKCM4LWZvcm0tdmFsaWRhdGlvbi11c2luZy1jb21iaW5lbGF0ZXN0KQo5
LiBbUHNldWRvIGNhY2hpbmcgOiByZXRyaWV2ZSBkYXRhIGZpcnN0IGZyb20g
YSBjYWNoZSwgdGhlbiBhIG5ldHdvcmsgY2FsbCAodXNpbmcgY29uY2F0LCBj
b25jYXRFYWdlciwgbWVyZ2Ugb3IgcHVibGlzaCldKCM5LXBzZXVkby1jYWNo
aW5nLS1yZXRyaWV2ZS1kYXRhLWZpcnN0LWZyb20tYS1jYWNoZS10aGVuLWEt
bmV0d29yay1jYWxsLXVzaW5nLWNvbmNhdC1jb25jYXRlYWdlci1tZXJnZS1v
ci1wdWJsaXNoKQoxMC4gW1NpbXBsZSB0aW1pbmcgZGVtb3MgKHVzaW5nIHRp
bWVyLCBpbnRlcnZhbCBvciBkZWxheSldKCMxMC1zaW1wbGUtdGltaW5nLWRl
bW9zLXVzaW5nLXRpbWVyLWludGVydmFsLWFuZC1kZWxheSkKMTEuIFtSeEJ1
cyA6IGV2ZW50IGJ1cyB1c2luZyBSeEphdmEgKHVzaW5nIFJ4UmVsYXkgKG5l
dmVyIHRlcm1pbmF0aW5nIFN1YmplY3RzKSBhbmQgZGVib3VuY2VkQnVmZmVy
KV0oIzExLXJ4YnVzLS1ldmVudC1idXMtdXNpbmctcnhqYXZhLXVzaW5nLXJ4
cmVsYXktbmV2ZXItdGVybWluYXRpbmctc3ViamVjdHMtYW5kLWRlYm91bmNl
ZGJ1ZmZlcikKMTIuIFtQZXJzaXN0IGRhdGEgb24gQWN0aXZpdHkgcm90YXRp
b25zICh1c2luZyBTdWJqZWN0cyBhbmQgcmV0YWluZWQgRnJhZ21lbnRzKV0o
IzEyLXBlcnNpc3QtZGF0YS1vbi1hY3Rpdml0eS1yb3RhdGlvbnMtdXNpbmct
c3ViamVjdHMtYW5kLXJldGFpbmVkLWZyYWdtZW50cykKMTMuIFtOZXR3b3Jr
aW5nIHdpdGggVm9sbGV5XSgjMTMtbmV0d29ya2luZy13aXRoLXZvbGxleSkK
MTQuIFtQYWdpbmF0aW9uIHdpdGggUnggKHVzaW5nIFN1YmplY3RzKV0oIzE0
LXBhZ2luYXRpb24td2l0aC1yeC11c2luZy1zdWJqZWN0cykKMTUuIFtPcmNo
ZXN0cmF0aW5nIE9ic2VydmFibGU6IG1ha2UgcGFyYWxsZWwgbmV0d29yayBj
YWxscywgdGhlbiBjb21iaW5lIHRoZSByZXN1bHQgaW50byBhIHNpbmdsZSBk
YXRhIHBvaW50ICh1c2luZyBmbGF0bWFwICYgemlwKV0oIzE1LW9yY2hlc3Ry
YXRpbmctb2JzZXJ2YWJsZS1tYWtlLXBhcmFsbGVsLW5ldHdvcmstY2FsbHMt
dGhlbi1jb21iaW5lLXRoZS1yZXN1bHQtaW50by1hLXNpbmdsZS1kYXRhLXBv
aW50LXVzaW5nLWZsYXRtYXAtLXppcCkKMTYuIFtTaW1wbGUgVGltZW91dCBl
eGFtcGxlICh1c2luZyB0aW1lb3V0KV0oIzE2LXNpbXBsZS10aW1lb3V0LWV4
YW1wbGUtdXNpbmctdGltZW91dCkKMTcuIFtTZXR1cCBhbmQgdGVhcmRvd24g
cmVzb3VyY2VzICh1c2luZyBgdXNpbmdgKV0oIzE3LXNldHVwLWFuZC10ZWFy
ZG93bi1yZXNvdXJjZXMtdXNpbmctdXNpbmcpCjE4LiBbTXVsdGljYXN0IHBs
YXlncm91bmRdKCMxOC1tdWx0aWNhc3QtcGxheWdyb3VuZCkKCiMjIERlc2Ny
aXB0aW9uCgojIyMgMS4gQmFja2dyb3VuZCB3b3JrICYgY29uY3VycmVuY3kg
KHVzaW5nIFNjaGVkdWxlcnMpCgpBIGNvbW1vbiByZXF1aXJlbWVudCBpcyB0
byBvZmZsb2FkIGxlbmd0aHkgaGVhdnkgSS9PIGludGVuc2l2ZSBvcGVyYXRp
b25zIHRvIGEgYmFja2dyb3VuZCB0aHJlYWQgKG5vbi1VSSB0aHJlYWQpIGFu
ZCBmZWVkIHRoZSByZXN1bHRzIGJhY2sgdG8gdGhlIFVJL21haW4gdGhyZWFk
LCBvbiBjb21wbGV0aW9uLiBUaGlzIGlzIGEgZGVtbyBvZiBob3cgbG9uZy1y
dW5uaW5nIG9wZXJhdGlvbnMgY2FuIGJlIG9mZmxvYWRlZCB0byBhIGJhY2tn
cm91bmQgdGhyZWFkLiBBZnRlciB0aGUgb3BlcmF0aW9uIGlzIGRvbmUsIHdl
IHJlc3VtZSBiYWNrIG9uIHRoZSBtYWluIHRocmVhZC4gQWxsIHVzaW5nIFJ4
SmF2YSEgVGhpbmsgb2YgdGhpcyBhcyBhIHJlcGxhY2VtZW50IHRvIEFzeW5j
VGFza3MuCgpUaGUgbG9uZyBvcGVyYXRpb24gaXMgc2ltdWxhdGVkIGJ5IGEg
YmxvY2tpbmcgVGhyZWFkLnNsZWVwIGNhbGwgKHNpbmNlIHRoaXMgaXMgZG9u
ZSBpbiBhIGJhY2tncm91bmQgdGhyZWFkLCBvdXIgVUkgaXMgbmV2ZXIgaW50
ZXJydXB0ZWQpLgoKVG8gcmVhbGx5IHNlZSB0aGlzIGV4YW1wbGUgc2hpbmUu
IEhpdCB0aGUgYnV0dG9uIG11bHRpcGxlIHRpbWVzIGFuZCBzZWUgaG93IHRo
ZSBidXR0b24gY2xpY2sgKHdoaWNoIGlzIGEgVUkgb3BlcmF0aW9uKSBpcyBu
ZXZlciBibG9ja2VkIGJlY2F1c2UgdGhlIGxvbmcgb3BlcmF0aW9uIG9ubHkg
cnVucyBpbiB0aGUgYmFja2dyb3VuZC4KCiMjIyAyLiBBY2N1bXVsYXRlIGNh
bGxzICh1c2luZyBidWZmZXIpCgpUaGlzIGlzIGEgZGVtbyBvZiBob3cgZXZl
bnRzIGNhbiBiZSBhY2N1bXVsYXRlZCB1c2luZyB0aGUgImJ1ZmZlciIgb3Bl
cmF0aW9uLgoKQSBidXR0b24gaXMgcHJvdmlkZWQgYW5kIHdlIGFjY3VtdWxh
dGUgdGhlIG51bWJlciBvZiBjbGlja3Mgb24gdGhhdCBidXR0b24sIG92ZXIg
YSBzcGFuIG9mIHRpbWUgYW5kIHRoZW4gc3BpdCBvdXQgdGhlIGZpbmFsIHJl
c3VsdHMuCgpJZiB5b3UgaGl0IHRoZSBidXR0b24gb25jZSwgeW91J2xsIGdl
dCBhIG1lc3NhZ2Ugc2F5aW5nIHRoZSBidXR0b24gd2FzIGhpdCBvbmNlLiBJ
ZiB5b3UgaGl0IGl0IDUgdGltZXMgY29udGludW91c2x5IHdpdGhpbiBhIHNw
YW4gb2YgMiBzZWNvbmRzLCB0aGVuIHlvdSBnZXQgYSBzaW5nbGUgbG9nLCBz
YXlpbmcgeW91IGhpdCB0aGF0IGJ1dHRvbiA1IHRpbWVzICh2cyA1IGluZGl2
aWR1YWwgbG9ncyBzYXlpbmcgIkJ1dHRvbiBoaXQgb25jZSIpLgoKTm90ZToK
CklmIHlvdSdyZSBsb29raW5nIGZvciBhIG1vcmUgZm9vbHByb29mIHNvbHV0
aW9uIHRoYXQgYWNjdW11bGF0ZXMgImNvbnRpbnVvdXMiIHRhcHMgdnMganVz
dCB0aGUgbnVtYmVyIG9mIHRhcHMgd2l0aGluIGEgdGltZSBzcGFuLCBsb29r
IGF0IHRoZSBbRXZlbnRCdXMgRGVtb10oaHR0cHM6Ly9naXRodWIuY29tL2th
dXNoaWtnb3BhbC9BbmRyb2lkLVJ4SmF2YS9ibG9iL21hc3Rlci9hcHAvc3Jj
L21haW4vamF2YS9jb20vbW9yaWhhY2t5L2FuZHJvaWQvcnhqYXZhL3J4YnVz
L1J4QnVzRGVtb19Cb3R0b20zRnJhZ21lbnQuamF2YSkgd2hlcmUgYSBjb21i
byBvZiB0aGUgYHB1Ymxpc2hgIGFuZCBgYnVmZmVyYCBvcGVyYXRvcnMgaXMg
dXNlZC4gRm9yIGEgbW9yZSBkZXRhaWxlZCBleHBsYW5hdGlvbiwgeW91IGNh
biBhbHNvIGhhdmUgYSBsb29rIGF0IHRoaXMgW2Jsb2cgcG9zdF0oaHR0cDov
L2Jsb2cua2F1c2guY28vMjAxNS8wMS8wNS9kZWJvdW5jZWRidWZmZXItd2l0
aC1yeGphdmEvKS4KCiMjIyAzLiBJbnN0YW50L0F1dG8gc2VhcmNoaW5nIHRl
eHQgbGlzdGVuZXJzICh1c2luZyBTdWJqZWN0cyAmIGRlYm91bmNlKQoKVGhp
cyBpcyBhIGRlbW8gb2YgaG93IGV2ZW50cyBjYW4gYmUgc3dhbGxvd2VkIGlu
IGEgd2F5IHRoYXQgb25seSB0aGUgbGFzdCBvbmUgaXMgcmVzcGVjdGVkLiBB
IHR5cGljYWwgZXhhbXBsZSBvZiB0aGlzIGlzIGluc3RhbnQgc2VhcmNoIHJl
c3VsdCBib3hlcy4gQXMgeW91IHR5cGUgdGhlIHdvcmQgIkJydWNlIExlZSIs
IHlvdSBkb24ndCB3YW50IHRvIGV4ZWN1dGUgc2VhcmNoZXMgZm9yIEIsIEJy
LCBCcnUsIEJydWNlLCBCcnVjZSwgQnJ1Y2UgTCAuLi4gZXRjLiBCdXQgcmF0
aGVyIGludGVsbGlnZW50bHkgd2FpdCBmb3IgYSBjb3VwbGUgb2YgbW9tZW50
cywgbWFrZSBzdXJlIHRoZSB1c2VyIGhhcyBmaW5pc2hlZCB0eXBpbmcgdGhl
IHdob2xlIHdvcmQsIGFuZCB0aGVuIHNob290IG91dCBhIHNpbmdsZSBjYWxs
IGZvciAiQnJ1Y2UgTGVlIi4KCkFzIHlvdSB0eXBlIGluIHRoZSBpbnB1dCBi
b3gsIGl0IHdpbGwgbm90IHNob290IG91dCBsb2cgbWVzc2FnZXMgYXQgZXZl
cnkgc2luZ2xlIGlucHV0IGNoYXJhY3RlciBjaGFuZ2UsIGJ1dCByYXRoZXIg
b25seSBwaWNrIHRoZSBsYXN0bHkgZW1pdHRlZCBldmVudCAoaS5lLiBpbnB1
dCkgYW5kIGxvZyB0aGF0LgoKVGhpcyBpcyB0aGUgZGVib3VuY2UvdGhyb3R0
bGVXaXRoVGltZW91dCBtZXRob2QgaW4gUnhKYXZhLgoKIyMjIDQuIE5ldHdv
cmtpbmcgd2l0aCBSZXRyb2ZpdCAmIFJ4SmF2YSAodXNpbmcgemlwLCBmbGF0
bWFwKQoKW1JldHJvZml0IGZyb20gU3F1YXJlXShodHRwOi8vc3F1YXJlLmdp
dGh1Yi5pby9yZXRyb2ZpdC8pIGlzIGFuIGFtYXppbmcgbGlicmFyeSB0aGF0
IGhlbHBzIHdpdGggZWFzeSBuZXR3b3JraW5nIChldmVuIGlmIHlvdSBoYXZl
bid0IG1hZGUgdGhlIGp1bXAgdG8gUnhKYXZhIGp1c3QgeWV0LCB5b3UgcmVh
bGx5IHNob3VsZCBjaGVjayBpdCBvdXQpLiBJdCB3b3JrcyBldmVuIGJldHRl
ciB3aXRoIFJ4SmF2YSBhbmQgdGhlc2UgYXJlIGV4YW1wbGVzIGhpdHRpbmcg
dGhlIEdpdEh1YiBBUEksIHRha2VuIHN0cmFpZ2h0IHVwIGZyb20gdGhlIGFu
ZHJvaWQgZGVtaWdvZC1kZXZlbG9wZXIgSmFrZSBXaGFydG9uJ3MgdGFsayBh
dCBOZXRmbGl4LiBZb3UgY2FuIFt3YXRjaCB0aGUgdGFsa10oaHR0cHM6Ly93
d3cueW91dHViZS5jb20vd2F0Y2g/dj1hRXVOQmsxYjVPRSN0PTI0ODApIGF0
IHRoaXMgbGluay4gSW5jaWRlbnRhbGx5LCBteSBtb3RpdmF0aW9uIHRvIHVz
ZSBSeEphdmEgd2FzIGZyb20gYXR0ZW5kaW5nIHRoaXMgdGFsayBhdCBOZXRm
bGl4LgoKKE5vdGU6IHlvdSdyZSBtb3N0IGxpa2VseSB0byBoaXQgdGhlIEdp
dEh1YiBBUEkgcXVvdGEgcHJldHR5IGZhc3Qgc28gc2VuZCBpbiBhbiBPQXV0
aC10b2tlbiBhcyBhIHBhcmFtZXRlciBpZiB5b3Ugd2FudCB0byBrZWVwIHJ1
bm5pbmcgdGhlc2UgZXhhbXBsZXMgb2Z0ZW4pLgoKIyMjIDUuIFR3by13YXkg
ZGF0YSBiaW5kaW5nIGZvciBUZXh0Vmlld3MgKHVzaW5nIFB1Ymxpc2hTdWJq
ZWN0KQoKQXV0by11cGRhdGluZyB2aWV3cyBhcmUgYSBwcmV0dHkgY29vbCB0
aGluZy4gSWYgeW91J3ZlIGRlYWx0IHdpdGggQW5ndWxhciBKUyBiZWZvcmUs
IHRoZXkgaGF2ZSBhIHByZXR0eSBuaWZ0eSBjb25jZXB0IGNhbGxlZCAidHdv
LXdheSBkYXRhIGJpbmRpbmciLCBzbyB3aGVuIGFuIEhUTUwgZWxlbWVudCBp
cyBib3VuZCB0byBhIG1vZGVsL2VudGl0eSBvYmplY3QsIGl0IGNvbnN0YW50
bHkgImxpc3RlbnMiIHRvIGNoYW5nZXMgb24gdGhhdCBlbnRpdHkgYW5kIGF1
dG8tdXBkYXRlcyBpdHMgc3RhdGUgYmFzZWQgb24gdGhlIG1vZGVsLiBVc2lu
ZyB0aGUgdGVjaG5pcXVlIGluIHRoaXMgZXhhbXBsZSwgeW91IGNvdWxkIHBv
dGVudGlhbGx5IHVzZSBhIHBhdHRlcm4gbGlrZSB0aGUgW1ByZXNlbnRhdGlv
biBWaWV3IE1vZGVsIHBhdHRlcm5dKGh0dHA6Ly9tYXJ0aW5mb3dsZXIuY29t
L2VhYURldi9QcmVzZW50YXRpb25Nb2RlbC5odG1sKSB3aXRoIGdyZWF0IGVh
c2UuCgpXaGlsZSB0aGUgZXhhbXBsZSBoZXJlIGlzIHByZXR0eSBydWRpbWVu
dGFyeSwgdGhlIHRlY2huaXF1ZSB1c2VkIHRvIGFjaGlldmUgdGhlIGRvdWJs
ZSBiaW5kaW5nIHVzaW5nIGEgYFB1Ymxpc2ggU3ViamVjdGAgaXMgbXVjaCBt
b3JlIGludGVyZXN0aW5nLgoKIyMjIDYuIFNpbXBsZSBhbmQgQWR2YW5jZWQg
cG9sbGluZyAodXNpbmcgaW50ZXJ2YWwgYW5kIHJlcGVhdFdoZW4pCgpUaGlz
IGlzIGFuIGV4YW1wbGUgb2YgcG9sbGluZyB1c2luZyBSeEphdmEgU2NoZWR1
bGVycy4gVGhpcyBpcyB1c2VmdWwgaW4gY2FzZXMsIHdoZXJlIHlvdSB3YW50
IHRvIGNvbnN0YW50bHkgcG9sbCBhIHNlcnZlciBhbmQgcG9zc2libHkgZ2V0
IG5ldyBkYXRhLiBUaGUgbmV0d29yayBjYWxsIGlzICJzaW11bGF0ZWQiIHNv
IGl0IGZvcmNlcyBhIGRlbGF5IGJlZm9yZSByZXR1cm4gYSByZXN1bHRhbnQg
c3RyaW5nLgoKVGhlcmUgYXJlIHR3byB2YXJpYW50cyBmb3IgdGhpczoKCjEu
IFNpbXBsZSBQb2xsaW5nOiBzYXkgd2hlbiB5b3Ugd2FudCB0byBleGVjdXRl
IGEgY2VydGFpbiB0YXNrIGV2ZXJ5IDUgc2Vjb25kcwoyLiBJbmNyZWFzaW5n
IERlbGF5ZWQgUG9sbGluZzogc2F5IHdoZW4geW91IHdhbnQgdG8gZXhlY3V0
ZSBhIHRhc2sgZmlyc3QgaW4gMSBzZWNvbmQsIHRoZW4gaW4gMiBzZWNvbmRz
LCB0aGVuIDMgYW5kIHNvIG9uLgoKVGhlIHNlY29uZCBleGFtcGxlIGlzIGJh
c2ljYWxseSBhIHZhcmlhbnQgb2YgW0V4cG9uZW50aWFsIEJhY2tvZmZdKGh0
dHBzOi8vZ2l0aHViLmNvbS9rYXVzaGlrZ29wYWwvUnhKYXZhLUFuZHJvaWQt
U2FtcGxlcyNleHBvbmVudGlhbC1iYWNrb2ZmKS4KCkluc3RlYWQgb2YgdXNp
bmcgYSBSZXRyeVdpdGhEZWxheSwgd2UgdXNlIGEgUmVwZWF0V2l0aERlbGF5
IGhlcmUuIFRvIHVuZGVyc3RhbmQgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBS
ZXRyeShXaGVuKSBhbmQgUmVwZWF0KFdoZW4pIEkgd291dWxkIHN1Z2dlc3Qg
RGFuJ3MgW2ZhbnRhc3RpYyBwb3N0IG9uIHRoZSBzdWJqZWN0XShodHRwOi8v
YmxvZy5kYW5sZXcubmV0LzIwMTYvMDEvMjUvcnhqYXZhcy1yZXBlYXR3aGVu
LWFuZC1yZXRyeXdoZW4tZXhwbGFpbmVkLykuCgpBbiBhbHRlcm5hdGl2ZSBh
cHByb2FjaCB0byBkZWxheWVkIHBvbGxpbmcgd2l0aG91dCB0aGUgdXNlIG9m
IGByZXBlYXRXaGVuYCB3b3VsZCBiZSB1c2luZyBjaGFpbmVkIG5lc3RlZCBk
ZWxheSBvYnNlcnZhYmxlcy4gU2VlIFtzdGFydEV4ZWN1dGluZ1dpdGhFeHBv
bmVudGlhbEJhY2tvZmZEZWxheSBpbiB0aGUgRXhwb25lbnRpYWxCYWNrT2Zm
RnJhZ21lbnQgZXhhbXBsZV0oaHR0cHM6Ly9naXRodWIuY29tL2thdXNoaWtn
b3BhbC9SeEphdmEtQW5kcm9pZC1TYW1wbGVzL2Jsb2IvbWFzdGVyL2FwcC9z
cmMvbWFpbi9qYXZhL2NvbS9tb3JpaGFja3kvYW5kcm9pZC9yeGphdmEvZnJh
Z21lbnRzL0V4cG9uZW50aWFsQmFja29mZkZyYWdtZW50LmphdmEjTDExMSku
CgojIyMgNy4gU2ltcGxlIGFuZCBBZHZhbmNlZCBleHBvbmVudGlhbCBiYWNr
b2ZmICh1c2luZyBkZWxheSBhbmQgcmV0cnlXaGVuKQoKW0V4cG9uZW50aWFs
IGJhY2tvZmZdKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0V4cG9u
ZW50aWFsX2JhY2tvZmYpIGlzIGEgc3RyYXRlZ3kgd2hlcmUgYmFzZWQgb24g
ZmVlZGJhY2sgZnJvbSBhIGNlcnRhaW4gb3V0cHV0LCB3ZSBhbHRlciB0aGUg
cmF0ZSBvZiBhIHByb2Nlc3MgKHVzdWFsbHkgcmVkdWNpbmcgdGhlIG51bWJl
ciBvZiByZXRyaWVzIG9yIGluY3JlYXNpbmcgdGhlIHdhaXQgdGltZSBiZWZv
cmUgcmV0cnlpbmcgb3IgcmUtZXhlY3V0aW5nIGEgY2VydGFpbiBwcm9jZXNz
KS4KClRoZSBjb25jZXB0IG1ha2VzIG1vcmUgc2Vuc2Ugd2l0aCBleGFtcGxl
cy4gUnhKYXZhIG1ha2VzIGl0IChyZWxhdGl2ZWx5KSBzaW1wbGUgdG8gaW1w
bGVtZW50IHN1Y2ggYSBzdHJhdGVneS4gTXkgdGhhbmtzIHRvIFtNaWtlXSho
dHRwczovL3R3aXR0ZXIuY29tL21fZXZhbnMxMCkgZm9yIHN1Z2dlc3Rpbmcg
dGhlIGlkZWEuCgojIyMjIFJldHJ5IChpZiBlcnJvcikgd2l0aCBleHBvbmVu
dGlhbCBiYWNrb2ZmCgpTYXkgeW91IGhhdmUgYSBuZXR3b3JrIGZhaWx1cmUu
IEEgc2Vuc2libGUgc3RyYXRlZ3kgd291bGQgYmUgdG8gTk9UIGtlZXAgcmV0
cnlpbmcgeW91ciBuZXR3b3JrIGNhbGwgZXZlcnkgMSBzZWNvbmQuIEl0IHdv
dWxkIGJlIHNtYXJ0IGluc3RlYWQgKG5heS4uLiBlbGVnYW50ISkgdG8gcmV0
cnkgd2l0aCBpbmNyZWFzaW5nIGRlbGF5cy4gU28geW91IHRyeSBhdCBzZWNv
bmQgMSB0byBleGVjdXRlIHRoZSBuZXR3b3JrIGNhbGwsIG5vIGRpY2U/IHRy
eSBhZnRlciAxMCBzZWNvbmRzLi4uIG5lZ2F0b3J5PyB0cnkgYWZ0ZXIgMjAg
c2Vjb25kcywgbm8gY29va2llPyB0cnkgYWZ0ZXIgMSBtaW51dGUuIElmIHRo
aXMgdGhpbmcgaXMgc3RpbGwgZmFpbGluZywgeW91IGdvdCB0byBnaXZlIHVw
IG9uIHRoZSBuZXR3b3JrIHlvIQoKV2Ugc2ltdWxhdGUgdGhpcyBiZWhhdmlv
dXIgdXNpbmcgUnhKYXZhIHdpdGggdGhlIFtgcmV0cnlXaGVuYCBvcGVyYXRv
cl0oaHR0cDovL3JlYWN0aXZleC5pby9kb2N1bWVudGF0aW9uL29wZXJhdG9y
cy9yZXRyeS5odG1sKS4KCmBSZXRyeVdpdGhEZWxheWAgY29kZSBzbmlwcGV0
IGNvdXJ0ZXN5OgoKKiBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8yNTI5
MjgzMy8xNTk4MjUKKiBBbm90aGVyIGV4Y2VsbGVudCBpbXBsZW1lbnRhdGlv
biB2aWEgQFtzZGRhbWljb10oaHR0cHM6Ly9naXRodWIuY29tL3NkZGFtaWNv
KSA6IGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL3NkZGFtaWNvL2M0NWQ3Y2Rh
YmM0MWU2NjNiZWExCiogVGhpcyBvbmUgaW5jbHVkZXMgc3VwcG9ydCBmb3Ig
aml0dGVyaW5nLCBieSBAW2xlYW5kcm9mYXZhcmluXShodHRwczovL2dpdGh1
Yi5jb20vbGVhbmRyb2ZhdmFyaW4pIDogaHR0cDovL2xlYW5kcm9mYXZhcmlu
LmNvbS9leHBvbmVudGlhbC1iYWNrb2ZmLXJ4amF2YS1vcGVyYXRvci13aXRo
LWppdHRlcgoKQWxzbyBsb29rIGF0IHRoZSBbUG9sbGluZyBleGFtcGxlXSho
dHRwczovL2dpdGh1Yi5jb20va2F1c2hpa2dvcGFsL1J4SmF2YS1BbmRyb2lk
LVNhbXBsZXMjcG9sbGluZy13aXRoLXNjaGVkdWxlcnMpIHdoZXJlIHdlIHVz
ZSBhIHZlcnkgc2ltaWxhciBFeHBvbmVudGlhbCBiYWNrb2ZmIG1lY2hhbmlz
bS4KCiMjIyMgIlJlcGVhdCIgd2l0aCBleHBvbmVudGlhbCBiYWNrb2ZmCgpB
bm90aGVyIHZhcmlhbnQgb2YgdGhlIGV4cG9uZW50aWFsIGJhY2tvZmYgc3Ry
YXRlZ3kgaXMgdG8gZXhlY3V0ZSBhbiBvcGVyYXRpb24gZm9yIGEgZ2l2ZW4g
bnVtYmVyIG9mIHRpbWVzIGJ1dCB3aXRoIGRlbGF5ZWQgaW50ZXJ2YWxzLiBT
byB5b3UgZXhlY3V0ZSBhIGNlcnRhaW4gb3BlcmF0aW9uIDEgc2Vjb25kIGZy
b20gbm93LCB0aGVuIHlvdSBleGVjdXRlIGl0IGFnYWluIDEwIHNlY29uZHMg
ZnJvbSBub3csIHRoZW4geW91IGV4ZWN1dGUgdGhlIG9wZXJhdGlvbiAyMCBz
ZWNvbmRzIGZyb20gbm93LiBBZnRlciBhIGdyYW5kIHRvdGFsIG9mIDMgdGlt
ZXMgeW91IHN0b3AgZXhlY3V0aW5nLgoKU2ltdWxhdGluZyB0aGlzIGJlaGF2
aW9yIGlzIGFjdHVhbGx5IHdheSBtb3JlIHNpbXBsZXIgdGhhbiB0aGUgcHJl
dm9pdXMgcmV0cnkgbWVjaGFuaXNtLiBZb3UgY2FuIHVzZSBhIHZhcmlhbnQg
b2YgdGhlIGBkZWxheWAgb3BlcmF0b3IgdG8gYWNoaWV2ZSB0aGlzLgoKCiMj
IyA4LiBGb3JtIHZhbGlkYXRpb24gKHVzaW5nIFtgLmNvbWJpbmVMYXRlc3Rg
XShodHRwOi8vcmVhY3RpdmV4LmlvL2RvY3VtZW50YXRpb24vb3BlcmF0b3Jz
L2NvbWJpbmVsYXRlc3QuaHRtbCkpCgpUaGFua3MgdG8gRGFuIExldyBmb3Ig
Z2l2aW5nIG1lIHRoaXMgaWRlYSBpbiB0aGUgW2ZyYWdtZW50ZWQgcG9kY2Fz
dCAtIGVwaXNvZGUgIzRdKGh0dHA6Ly9mcmFnbWVudGVkcG9kY2FzdC5jb20v
ZXBpc29kZXMvNC8pIChhcm91bmQgdGhlIDQ6MzAgbWFyaykuCgpgLmNvbWJp
bmVMYXRlc3RgIGFsbG93cyB5b3UgdG8gbW9uaXRvciB0aGUgc3RhdGUgb2Yg
bXVsdGlwbGUgb2JzZXJ2YWJsZXMgYXQgb25jZSBjb21wYWN0bHkgYXQgYSBz
aW5nbGUgbG9jYXRpb24uIFRoZSBleGFtcGxlIGRlbW9uc3RyYXRlZCBzaG93
cyBob3cgeW91IGNhbiB1c2UgYC5jb21iaW5lTGF0ZXN0YCB0byB2YWxpZGF0
ZSBhIGJhc2ljIGZvcm0uIFRoZXJlIGFyZSAzIHByaW1hcnkgaW5wdXRzIGZv
ciB0aGlzIGZvcm0gdG8gYmUgY29uc2lkZXJlZCAidmFsaWQiIChhbiBlbWFp
bCwgYSBwYXNzd29yZCBhbmQgYSBudW1iZXIpLiBUaGUgZm9ybSB3aWxsIHR1
cm4gdmFsaWQgKHRoZSB0ZXh0IGJlbG93IHR1cm5zIGJsdWUgOlApIG9uY2Ug
YWxsIHRoZSBpbnB1dHMgYXJlIHZhbGlkLiBJZiB0aGV5IGFyZSBub3QsIGFu
IGVycm9yIGlzIHNob3duIGFnYWluc3QgdGhlIGludmFsaWQgaW5wdXRzLgoK
V2UgaGF2ZSAzIGluZGVwZW5kZW50IG9ic2VydmFibGVzIHRoYXQgdHJhY2sg
dGhlIHRleHQvaW5wdXQgY2hhbmdlcyBmb3IgZWFjaCBvZiB0aGUgZm9ybSBm
aWVsZHMgKFJ4QW5kcm9pZCdzIGBXaWRnZXRPYnNlcnZhYmxlYCBjb21lcyBp
biBoYW5keSB0byBtb25pdG9yIHRoZSB0ZXh0IGNoYW5nZXMpLiBBZnRlciBh
biBldmVudCBjaGFuZ2UgaXMgbm90aWNlZCBmcm9tICoqYWxsKiogMyBpbnB1
dHMsIHRoZSByZXN1bHQgaXMgImNvbWJpbmVkIiBhbmQgdGhlIGZvcm0gaXMg
ZXZhbHVhdGVkIGZvciB2YWxpZGl0eS4KCk5vdGUgdGhhdCB0aGUgYEZ1bmMz
YCBmdW5jdGlvbiB0aGF0IGNoZWNrcyBmb3IgdmFsaWRpdHksIGtpY2tzIGlu
IG9ubHkgYWZ0ZXIgQUxMIDMgaW5wdXRzIGhhdmUgcmVjZWl2ZWQgYSB0ZXh0
IGNoYW5nZSBldmVudC4KClRoZSB2YWx1ZSBvZiB0aGlzIHRlY2huaXF1ZSBi
ZWNvbWVzIG1vcmUgYXBwYXJlbnQgd2hlbiB5b3UgaGF2ZSBtb3JlIG51bWJl
ciBvZiBpbnB1dCBmaWVsZHMgaW4gYSBmb3JtLiBIYW5kbGluZyBpdCBvdGhl
cndpc2Ugd2l0aCBhIGJ1bmNoIG9mIGJvb2xlYW5zIG1ha2VzIHRoZSBjb2Rl
IGNsdXR0ZXJlZCBhbmQga2luZCBvZiBkaWZmaWN1bHQgdG8gZm9sbG93LiBC
dXQgdXNpbmcgYC5jb21iaW5lTGF0ZXN0YCBhbGwgdGhhdCBsb2dpYyBpcyBj
b25jZW50cmF0ZWQgaW4gYSBuaWNlIGNvbXBhY3QgYmxvY2sgb2YgY29kZSAo
SSBzdGlsbCB1c2UgYm9vbGVhbnMgYnV0IHRoYXQgd2FzIHRvIG1ha2UgdGhl
IGV4YW1wbGUgbW9yZSByZWFkYWJsZSkuCgoKIyMjIDkuIFBzZXVkbyBjYWNo
aW5nIDogcmV0cmlldmUgZGF0YSBmaXJzdCBmcm9tIGEgY2FjaGUsIHRoZW4g
YSBuZXR3b3JrIGNhbGwgKHVzaW5nIGNvbmNhdCwgY29uY2F0RWFnZXIsIG1l
cmdlIG9yIHB1Ymxpc2gpCgpXZSBoYXZlIHR3byBzb3VyY2UgT2JzZXJ2YWJs
ZXM6IGEgZGlzayAoZmFzdCkgY2FjaGUgYW5kIGEgbmV0d29yayAoZnJlc2gp
IGNhbGwuIFR5cGljYWxseSB0aGUgZGlzayBPYnNlcnZhYmxlIGlzIG11Y2gg
ZmFzdGVyIHRoYW4gdGhlIG5ldHdvcmsgT2JzZXJ2YWJsZS4gQnV0IGluIG9y
ZGVyIHRvIGRlbW9uc3RyYXRlIHRoZSB3b3JraW5nLCB3ZSd2ZSBhbHNvIHVz
ZWQgYSBmYWtlICJzbG93ZXIiIGRpc2sgY2FjaGUganVzdCB0byBzZWUgaG93
IHRoZSBvcGVyYXRvcnMgYmVoYXZlLgoKVGhpcyBpcyBkZW1vbnN0cmF0ZWQg
dXNpbmcgNCB0ZWNobmlxdWVzOgoKMS4gW2AuY29uY2F0YF0oaHR0cDovL3Jl
YWN0aXZleC5pby9kb2N1bWVudGF0aW9uL29wZXJhdG9ycy9jb25jYXQuaHRt
bCkKMi4gW2AuY29uY2F0RWFnZXJgXShodHRwOi8vcmVhY3RpdmV4LmlvL1J4
SmF2YS9qYXZhZG9jL3J4L09ic2VydmFibGUuaHRtbCNjb25jYXRFYWdlcihq
YXZhLmxhbmcuSXRlcmFibGUpKQozLiBbYC5tZXJnZWBdKGh0dHA6Ly9yZWFj
dGl2ZXguaW8vZG9jdW1lbnRhdGlvbi9vcGVyYXRvcnMvbWVyZ2UuaHRtbCkK
NC4gW2AucHVibGlzaGBdKGh0dHA6Ly9yZWFjdGl2ZXguaW8vUnhKYXZhL2ph
dmFkb2MvcngvT2JzZXJ2YWJsZS5odG1sI3B1Ymxpc2gocnguZnVuY3Rpb25z
LkZ1bmMxKSkgc2VsZWN0b3IgKyBtZXJnZSArIHRha2VVbnRpbAoKVGhlIDR0
aCB0ZWNobmlxdWUgaXMgcHJvYmFibHkgd2hhdCB5b3Ugd2FudCB0byB1c2Ug
ZXZlbnR1YWxseSBidXQgaXQncyBpbnRlcmVzdGluZyB0byBnbyB0aHJvdWdo
IHRoZSBwcm9ncmVzc2lvbiBvZiB0ZWNobmlxdWVzLCB0byB1bmRlcnN0YW5k
IHdoeS4KCmBjb25jYXRgIGlzIGdyZWF0LiBJdCByZXRyaWV2ZXMgaW5mb3Jt
YXRpb24gZnJvbSB0aGUgZmlyc3QgT2JzZXJ2YWJsZSAoZGlzayBjYWNoZSBp
biBvdXIgY2FzZSkgYW5kIHRoZW4gdGhlIHN1YnNlcXVlbnQgbmV0d29yayBP
YnNlcnZhYmxlLiBTaW5jZSB0aGUgZGlzayBjYWNoZSBpcyBwcmVzdW1hYmx5
IGZhc3RlciwgYWxsIGFwcGVhcnMgd2VsbCBhbmQgdGhlIGRpc2sgY2FjaGUg
aXMgbG9hZGVkIHVwIGZhc3QsIGFuZCBvbmNlIHRoZSBuZXR3b3JrIGNhbGwg
ZmluaXNoZXMgd2Ugc3dhcCBvdXQgdGhlICJmcmVzaCIgcmVzdWx0cy4KClRo
ZSBwcm9ibGVtIHdpdGggYGNvbmNhdGAgaXMgdGhhdCB0aGUgc3Vic2VxdWVu
dCBvYnNlcnZhYmxlIGRvZXNuJ3QgZXZlbiBzdGFydCB1bnRpbCB0aGUgZmly
c3QgT2JzZXJ2YWJsZSBjb21wbGV0ZXMuIFRoYXQgY2FuIGJlIGEgcHJvYmxl
bS4gV2Ugd2FudCBhbGwgb2JzZXJ2YWJsZXMgdG8gc3RhcnQgc2ltdWx0YW5l
b3VzbHkgYnV0IHByb2R1Y2UgdGhlIHJlc3VsdHMgaW4gYSB3YXkgd2UgZXhw
ZWN0LiBUaGFua2Z1bGx5IFJ4SmF2YSBpbnRyb2R1Y2VkIGBjb25jYXRFYWdl
cmAgd2hpY2ggZG9lcyBleGFjdGx5IHRoYXQuIEl0IHN0YXJ0cyBib3RoIG9i
c2VydmFibGVzIGJ1dCBidWZmZXJzIHRoZSByZXN1bHQgZnJvbSB0aGUgbGF0
dGVyIG9uZSB1bnRpbCB0aGUgZm9ybWVyIE9ic2VydmFibGUgZmluaXNoZXMu
IFRoaXMgaXMgYSBjb21wbGV0ZWx5IHZpYWJsZSBvcHRpb24uCgpTb21ldGlt
ZXMgdGhvdWdoLCB5b3UganVzdCB3YW50IHRvIHN0YXJ0IHNob3dpbmcgdGhl
IHJlc3VsdHMgaW1tZWRpYXRlbHkuIEFzc3VtaW5nIHRoZSBmaXJzdCBvYnNl
cnZhYmxlIChmb3Igc29tZSBzdHJhbmdlIHJlYXNvbikgdGFrZXMgcmVhbGx5
IGxvbmcgdG8gcnVuIHRocm91Z2ggYWxsIGl0cyBpdGVtcywgZXZlbiBpZiB0
aGUgZmlyc3QgZmV3IGl0ZW1zIGZyb20gdGhlIHNlY29uZCBvYnNlcnZhYmxl
IGhhdmUgY29tZSBkb3duIHRoZSB3aXJlIGl0IHdpbGwgZm9yY2libHkgYmUg
cXVldWVkLiBZb3UgZG9uJ3QgbmVjZXNzYXJpbHkgd2FudCB0byAid2FpdCIg
b24gYW55IE9ic2VydmFibGUuIEluIHRoZXNlIHNpdHVhdGlvbnMsIHdlIGNv
dWxkIHVzZSB0aGUgYG1lcmdlYCBvcGVyYXRvci4gSXQgaW50ZXJsZWF2ZXMg
aXRlbXMgYXMgdGhleSBhcmUgZW1pdHRlZC4gVGhpcyB3b3JrcyBncmVhdCBh
bmQgc3RhcnRzIHRvIHNwaXQgb3V0IHRoZSByZXN1bHRzIGFzIHNvb24gYXMg
dGhleSdyZSBzaG93bi4KClNpbWlsYXIgdG8gdGhlIGBjb25jYXRgIG9wZXJh
dG9yLCBpZiB5b3VyIGZpcnN0IE9ic2VydmFibGUgaXMgYWx3YXlzIGZhc3Rl
ciB0aGFuIHRoZSBzZWNvbmQgT2JzZXJ2YWJsZSB5b3Ugd29uJ3QgcnVuIGlu
dG8gYW55IHByb2JsZW1zLiBIb3dldmVyIHRoZSBwcm9ibGVtIHdpdGggYG1l
cmdlYCBpczogaWYgZm9yIHNvbWUgc3RyYW5nZSByZWFzb24gYW4gaXRlbSBp
cyBlbWl0dGVkIGJ5IHRoZSBjYWNoZSBvciBzbG93ZXIgb2JzZXJ2YWJsZSAq
YWZ0ZXIqIHRoZSBuZXdlci9mcmVzaGVyIG9ic2VydmFibGUsIGl0IHdpbGwg
b3ZlcndyaXRlIHRoZSBuZXdlciBjb250ZW50LiBDbGljayB0aGUgIk1FUkdF
IChTTE9XRVIgRElTSykiIGJ1dHRvbiBpbiB0aGUgZXhhbXBsZSB0byBzZWUg
dGhpcyBwcm9ibGVtIGluIGFjdGlvbi4gQEpha2VXaGFydG9uIGFuZCBAc3dh
bmtqZXNzZSBjb250cmlidXRpb25zIGdvIHRvIDAhIEluIHRoZSByZWFsIHdv
cmxkIHRoaXMgY291bGQgYmUgYmFkLCBhcyBpdCB3b3VsZCBtZWFuIHRoZSBm
cmVzaCBkYXRhIHdvdWxkIGdldCBvdmVycmlkZGVuIGJ5IHN0YWxlIGRpc2sg
ZGF0YS4KClRvIHNvbHZlIHRoaXMgcHJvYmxlbSB5b3UgY2FuIHVzZSBtZXJn
ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHRoZSBzdXBlciBuaWZ0eSBgcHVibGlz
aGAgb3BlcmF0b3Igd2hpY2ggdGFrZXMgaW4gYSAic2VsZWN0b3IiLiBJIHdy
b3RlIGFib3V0IHRoaXMgdXNhZ2UgaW4gYSBbYmxvZyBwb3N0XShodHRwOi8v
YmxvZy5rYXVzaC5jby8yMDE1LzAxLzIxL3J4amF2YS10aXAtZm9yLXRoZS1k
YXktc2hhcmUtcHVibGlzaC1yZWZjb3VudC1hbmQtYWxsLXRoYXQtamF6ei8p
IGJ1dCBJIGhhdmUgW0plZGkgSlddKGh0dHBzOi8vdHdpdHRlci5jb20vSmFr
ZVdoYXJ0b24vc3RhdHVzLzc4NjM2MzE0Njk5MDY0OTM0NSkgdG8gdGhhbmsg
Zm9yIHJlbWluZGluZyBvZiB0aGlzIHRlY2huaXF1ZS4gV2UgYHB1Ymxpc2hg
IHRoZSBuZXR3b3JrIG9ic2VydmFibGUgYW5kIHByb3ZpZGUgaXQgYSBzZWxl
Y3RvciB3aGljaCBzdGFydHMgZW1pdHRpbmcgZnJvbSB0aGUgZGlzayBjYWNo
ZSwgdXAgdW50aWwgdGhlIHBvaW50IHRoYXQgdGhlIG5ldHdvcmsgb2JzZXJ2
YWJsZSBzdGFydHMgZW1pdHRpbmcuIE9uY2UgdGhlIG5ldHdvcmsgb2JzZXJ2
YWJsZSBzdGFydHMgZW1pdHRpbmcsIGl0IGlnbm9yZXMgYWxsIHJlc3VsdHMg
ZnJvbSB0aGUgZGlzayBvYnNlcnZhYmxlLiBUaGlzIGlzIHBlcmZlY3QgYW5k
IGhhbmRsZXMgYW55IHByb2JsZW1zIHdlIG1pZ2h0IGhhdmUuCgpQcmV2aW91
c2x5LCBJIHdhcyB1c2luZyB0aGUgYG1lcmdlYCBvcGVyYXRvciBidXQgb3Zl
cmNvbWluZyB0aGUgcHJvYmxlbSBvZiByZXN1bHRzIGJlaW5nIG92ZXJ3cml0
dGVuIGJ5IG1vbml0b3JpbmcgdGhlICJyZXN1bHRBZ2UiLiBTZWUgdGhlIG9s
ZCBgUHNldWRvQ2FjaGVNZXJnZUZyYWdtZW50YCBleGFtcGxlIGlmIHlvdSdy
ZSBjdXJpb3VzIHRvIHNlZSB0aGlzIG9sZCBpbXBsZW1lbnRhdGlvbi4KCiMj
IyAxMC4gU2ltcGxlIHRpbWluZyBkZW1vcyAodXNpbmcgdGltZXIsIGludGVy
dmFsIGFuZCBkZWxheSkKClRoaXMgaXMgYSBzdXBlciBzaW1wbGUgYW5kIHN0
cmFpZ2h0Zm9yd2FyZCBleGFtcGxlIHdoaWNoIHNob3dzIHlvdSBob3cgdG8g
dXNlIFJ4SmF2YSdzIGB0aW1lcmAsIGBpbnRlcnZhbGAgYW5kIGBkZWxheWAg
b3BlcmF0b3JzIHRvIGhhbmRsZSBhIGJ1bmNoIG9mIGNhc2VzIHdoZXJlIHlv
dSB3YW50IHRvIHJ1biBhIHRhc2sgYXQgc3BlY2lmaWMgaW50ZXJ2YWxzLiBC
YXNpY2FsbHkgc2F5IE5PIHRvIEFuZHJvaWQgYFRpbWVyVGFza2BzLgoKQ2Fz
ZXMgZGVtb25zdHJhdGVkIGhlcmU6CgoxLiBydW4gYSBzaW5nbGUgdGFzayBh
ZnRlciBhIGRlbGF5IG9mIDJzLCB0aGVuIGNvbXBsZXRlCjIuIHJ1biBhIHRh
c2sgY29uc3RhbnRseSBldmVyeSAxcyAodGhlcmUncyBhIGRlbGF5IG9mIDFz
IGJlZm9yZSB0aGUgZmlyc3QgdGFzayBmaXJlcyBvZmYpCjMuIHJ1biBhIHRh
c2sgY29uc3RhbnRseSBldmVyeSAxcyAoc2FtZSBhcyBhYm92ZSBidXQgdGhl
cmUncyBubyBkZWxheSBiZWZvcmUgdGhlIGZpcnN0IHRhc2sgZmlyZXMgb2Zm
KQo0LiBydW4gYSB0YXNrIGNvbnN0YW50bHkgZXZlcnkgM3MsIGJ1dCBhZnRl
ciBydW5uaW5nIGl0IDUgdGltZXMsIHRlcm1pbmF0ZSBhdXRvbWF0aWNhbGx5
CjUuIHJ1biBhIHRhc2sgQSwgcGF1c2UgZm9yIHNvbWV0aW1lLCB0aGVuIGV4
ZWN1dGUgVGFzayBCLCB0aGVuIHRlcm1pbmF0ZQoKIyMjIDExLiBSeEJ1cyA6
IGV2ZW50IGJ1cyB1c2luZyBSeEphdmEgKHVzaW5nIFJ4UmVsYXkgKG5ldmVy
IHRlcm1pbmF0aW5nIFN1YmplY3RzKSBhbmQgZGVib3VuY2VkQnVmZmVyKQoK
VGhlcmUgYXJlIGFjY29tcGFueWluZyBibG9nIHBvc3RzIHRoYXQgZG8gYSBt
dWNoIGJldHRlciBqb2Igb2YgZXhwbGFpbmluZyB0aGUgZGV0YWlscyBvbiB0
aGlzIGRlbW86CgoxLiBbSW1wbGVtZW50aW5nIGFuIGV2ZW50IGJ1cyB3aXRo
IFJ4SmF2YV0oaHR0cDovL2Jsb2cua2F1c2guY28vMjAxNC8xMi8yNC9pbXBs
ZW1lbnRpbmctYW4tZXZlbnQtYnVzLXdpdGgtcnhqYXZhLXJ4YnVzLykKMi4g
W0RlYm91bmNlZEJ1ZmZlciB1c2VkIGZvciB0aGUgZmFuY2llciB2YXJpYW50
IG9mIHRoZSBkZW1vXShodHRwOi8vYmxvZy5rYXVzaC5jby8yMDE1LzAxLzA1
L2RlYm91bmNlZGJ1ZmZlci13aXRoLXJ4amF2YS8pCjMuIFtzaGFyZS9wdWJs
aXNoL3JlZmNvdW50XShodHRwOi8vYmxvZy5rYXVzaC5jby8yMDE1LzAxLzIx
L3J4amF2YS10aXAtZm9yLXRoZS1kYXktc2hhcmUtcHVibGlzaC1yZWZjb3Vu
dC1hbmQtYWxsLXRoYXQtamF6ei8pCgojIyMgMTIuIFBlcnNpc3QgZGF0YSBv
biBBY3Rpdml0eSByb3RhdGlvbnMgKHVzaW5nIFN1YmplY3RzIGFuZCByZXRh
aW5lZCBGcmFnbWVudHMpCgpBIGNvbW1vbiBxdWVzdGlvbiB0aGF0J3MgYXNr
ZWQgd2hlbiB1c2luZyBSeEphdmEgaW4gQW5kcm9pZCBpcywgImhvdyBkbyBp
IHJlc3VtZSB0aGUgd29yayBvZiBhbiBvYnNlcnZhYmxlIGlmIGEgY29uZmln
dXJhdGlvbiBjaGFuZ2Ugb2NjdXJzIChhY3Rpdml0eSByb3RhdGlvbiwgbGFu
Z3VhZ2UgbG9jYWxlIGNoYW5nZSBldGMuKT8iLgoKVGhpcyBleGFtcGxlIHNo
b3dzIHlvdSBvbmUgc3RyYXRlZ3kgdml6LiB1c2luZyByZXRhaW5lZCBGcmFn
bWVudHMuIEkgc3RhcnRlZCB1c2luZyByZXRhaW5lZCBmcmFnbWVudHMgYXMg
IndvcmtlciBmcmFnbWVudHMiIGFmdGVyIHJlYWRpbmcgdGhpcyBbZmFudGFz
dGljIHBvc3QgYnkgQWxleCBMb2Nrd29vZF0oaHR0cDovL3d3dy5hbmRyb2lk
ZGVzaWducGF0dGVybnMuY29tLzIwMTMvMDQvcmV0YWluaW5nLW9iamVjdHMt
YWNyb3NzLWNvbmZpZy1jaGFuZ2VzLmh0bWwpIHF1aXRlIHNvbWV0aW1lIGJh
Y2suCgpIaXQgdGhlIHN0YXJ0IGJ1dHRvbiBhbmQgcm90YXRlIHRoZSBzY3Jl
ZW4gdG8geW91ciBoZWFydCdzIGNvbnRlbnQ7IHlvdSdsbCBzZWUgdGhlIG9i
c2VydmFibGUgY29udGludWUgZnJvbSB3aGVyZSBpdCBsZWZ0IG9mZi4KCipU
aGVyZSBhcmUgY2VydGFpbiBxdWlya3MgYWJvdXQgdGhlICJob3RuZXNzIiBv
ZiB0aGUgc291cmNlIG9ic2VydmFibGUgdXNlZCBpbiB0aGlzIGV4YW1wbGUu
IENoZWNrIFtteSBibG9nIHBvc3RdKGh0dHA6Ly9ibG9nLmthdXNoLmNvLzIw
MTUvMDcvMTEvYS1ub3RlLWFib3V0LXRoZS13YXJtdGgtc2hhcmUtb3BlcmF0
b3IvKSBvdXQgd2hlcmUgSSBleHBsYWluIHRoZSBzcGVjaWZpY3MuKgoKSSBo
YXZlIHNpbmNlIHJld3JpdHRlbiB0aGlzIGV4YW1wbGUgdXNpbmcgYW4gYWx0
ZXJuYXRpdmUgYXBwcm9hY2guIFdoaWxlIHRoZSBbYENvbm5lY3RlZE9ic2Vy
dmFibGVgIGFwcHJvYWNoIHdvcmtlZF0oaHR0cHM6Ly9naXRodWIuY29tL2th
dXNoaWtnb3BhbC9SeEphdmEtQW5kcm9pZC1TYW1wbGVzL2Jsb2IvbWFzdGVy
L2FwcC9zcmMvbWFpbi9qYXZhL2NvbS9tb3JpaGFja3kvYW5kcm9pZC9yeGph
dmEvZnJhZ21lbnRzL1JvdGF0aW9uUGVyc2lzdDFXb3JrZXJGcmFnbWVudC5q
YXZhI0wyMCkgaXQgZW50ZXJzIHRoZSBsYW5kcyBvZiAibXVsdGljYXN0aW5n
IiB3aGljaCBjYW4gYmUgdHJpY2t5ICh0aHJlYWQtc2FmZXR5LCAucmVmY291
bnQgZXRjLikuIFN1YmplY3RzIG9uIHRoZSBvdGhlciBoYW5kIGFyZSBmYXIg
bW9yZSBzaW1wbGUuICBZb3UgY2FuIHNlZSBpdCByZXdyaXR0ZW4gW3VzaW5n
IGEgYFN1YmplY3RgIGhlcmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9rYXVzaGlr
Z29wYWwvUnhKYXZhLUFuZHJvaWQtU2FtcGxlcy9ibG9iL21hc3Rlci9hcHAv
c3JjL21haW4vamF2YS9jb20vbW9yaWhhY2t5L2FuZHJvaWQvcnhqYXZhL2Zy
YWdtZW50cy9Sb3RhdGlvblBlcnNpc3QyV29ya2VyRnJhZ21lbnQuamF2YSNM
MjIpLgoKSSB3cm90ZSBbYW5vdGhlciBibG9nIHBvc3RdKGh0dHBzOi8vdGVj
aC5pbnN0YWNhcnQuY29tL2hvdy10by10aGluay1hYm91dC1zdWJqZWN0cy1w
YXJ0LTEvKSBvbiBob3cgdG8gdGhpbmsgYWJvdXQgU3ViamVjdHMgd2hlcmUg
SSBnbyBpbnRvIHNvbWUgc3BlY2lmaWNzLgoKCiMjIyAxMy4gTmV0d29ya2lu
ZyB3aXRoIFZvbGxleQoKW1ZvbGxleV0oaHR0cDovL2RldmVsb3Blci5hbmRy
b2lkLmNvbS90cmFpbmluZy92b2xsZXkvaW5kZXguaHRtbCkgaXMgYW5vdGhl
ciBuZXR3b3JraW5nIGxpYnJhcnkgaW50cm9kdWNlZCBieSBbR29vZ2xlIGF0
IElPICcxM10oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj15aHY4
bDlGNDRxbykuIEEga2luZCBjaXRpemVuIG9mIGdpdGh1YiBjb250cmlidXRl
ZCB0aGlzIGV4YW1wbGUgc28gd2Uga25vdyBob3cgdG8gaW50ZWdyYXRlIFZv
bGxleSB3aXRoIFJ4SmF2YS4KCiMjIyAxNC4gUGFnaW5hdGlvbiB3aXRoIFJ4
ICh1c2luZyBTdWJqZWN0cykKCkkgbGV2ZXJhZ2UgdGhlIHNpbXBsZSB1c2Ug
b2YgYSBTdWJqZWN0IGhlcmUuIEhvbmVzdGx5LCBpZiB5b3UgZG9uJ3QgaGF2
ZSB5b3VyIGl0ZW1zIGNvbWluZyBkb3duIHZpYSBhbiBgT2JzZXJ2YWJsZWAg
YWxyZWFkeSAobGlrZSB0aHJvdWdoIFJldHJvZml0IG9yIGEgbmV0d29yayBy
ZXF1ZXN0KSwgdGhlcmUncyBubyBnb29kIHJlYXNvbiB0byB1c2UgUnggYW5k
IGNvbXBsaWNhdGUgdGhpbmdzLgoKVGhpcyBleGFtcGxlIGJhc2ljYWxseSBz
ZW5kcyB0aGUgcGFnZSBudW1iZXIgdG8gYSBTdWJqZWN0LCBhbmQgdGhlIHN1
YmplY3QgaGFuZGxlcyBhZGRpbmcgdGhlIGl0ZW1zLiBOb3RpY2UgdGhlIHVz
ZSBvZiBgY29uY2F0TWFwYCBhbmQgdGhlIHJldHVybiBvZiBhbiBgT2JzZXJ2
YWJsZTxMaXN0PmAgZnJvbSBgX2l0ZW1zRnJvbU5ldHdvcmtDYWxsYC4KCkZv
ciBraWNrcywgSSd2ZSBhbHNvIGluY2x1ZGVkIGEgYFBhZ2luYXRpb25BdXRv
RnJhZ21lbnRgIGV4YW1wbGUsIHRoaXMgImF1dG8tcGFnaW5hdGVzIiB3aXRo
b3V0IHVzIHJlcXVpcmluZyB0byBoaXQgYSBidXR0b24uIEl0IHNob3VsZCBi
ZSBzaW1wbGUgdG8gZm9sbG93IGlmIHlvdSBnb3QgaG93IHRoZSBwcmV2aW91
cyBleGFtcGxlIHdvcmtzLgoKSGVyZSBhcmUgc29tZSBvdGhlciBmYW5jeSBp
bXBsZW1lbnRhdGlvbnMgKHdoaWxlIGkgZW5qb3llZCByZWFkaW5nIHRoZW0s
IGkgZGlkbid0IGxhbmQgdXAgdXNpbmcgdGhlbSBmb3IgbXkgcmVhbCB3b3Js
ZCBhcHAgY2F1c2UgcGVyc29uYWxseSBpIGRvbid0IHRoaW5rIGl0J3MgbmVj
ZXNzYXJ5KToKCiogW01hdHRoaWFzIGV4YW1wbGUgb2YgYW4gUnggYmFzZWQg
cGFnZXJdKGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL210dGtheS8yNDg4MWEw
Y2U5ODZmNmVjNGI0ZCkKKiBbRXVnZW5lJ3MgdmVyeSBjb21wcmVoZW5zaXZl
IFBhZ2luYXRpb24gc2FtcGxlXShodHRwczovL2dpdGh1Yi5jb20vbWF0enVr
L1BhZ2luYXRpb25TYW1wbGUpCiogW1JlY3Vyc2l2ZSBQYWdpbmcgZXhhbXBs
ZV0oaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8yODA0NzI3
Mi9oYW5kbGUtcGFnaW5nLXdpdGgtcnhqYXZhKQoKIyMjIDE1LiBPcmNoZXN0
cmF0aW5nIE9ic2VydmFibGU6IG1ha2UgcGFyYWxsZWwgbmV0d29yayBjYWxs
cywgdGhlbiBjb21iaW5lIHRoZSByZXN1bHQgaW50byBhIHNpbmdsZSBkYXRh
IHBvaW50ICh1c2luZyBmbGF0bWFwICYgemlwKQoKVGhlIGJlbG93IGFzY2lp
IGRpYWdyYW0gZXhwcmVzc2VzIHRoZSBpbnRlbnRpb24gb2Ygb3VyIG5leHQg
ZXhhbXBsZSB3aXRoIHBhbmFjaGUuIGYxLGYyLGYzLGY0LGY1IGFyZSBlc3Nl
bnRpYWxseSBuZXR3b3JrIGNhbGxzIHRoYXQgd2hlbiBtYWRlLCBnaXZlIGJh
Y2sgYSByZXN1bHQgdGhhdCdzIG5lZWRlZCBmb3IgYSBmdXR1cmUgY2FsY3Vs
YXRpb24uCgoKICAgICAgICAgICAgIChmbGF0bWFwKQogICAgZjEgX19fX19f
X19fX19fX19fX19fXyBmMyBfX19fX19fCiAgICAgICAgICAgICAoZmxhdG1h
cCkgICAgICAgICAgICAgICB8ICAgICh6aXApCiAgICBmMiBfX19fX19fX19f
X19fX19fX19fIGY0IF9fX19fX198IF9fX19fX19fX19fICBmaW5hbCBvdXRw
dXQKICAgICAgICAgICAgXCAgICAgICAgICAgICAgICAgICAgICAgIHwKICAg
ICAgICAgICAgIFxfX19fX19fX19fX18gZjUgX19fX19fX3wKClRoZSBjb2Rl
IGZvciB0aGlzIGV4YW1wbGUgaGFzIGFscmVhZHkgYmVlbiB3cml0dGVuIGJ5
IG9uZSBNci5za2VobGV0IGluIHRoZSBpbnRlcndlYnMuIEhlYWQgb3ZlciB0
byBbdGhlIGdpc3RdKGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL3NrZWhsZXQv
OTQxODM3OSkgZm9yIHRoZSBjb2RlLiBJdCdzIHdyaXR0ZW4gaW4gcHVyZSBK
YXZhICg2KSBzbyBpdCdzIHByZXR0eSBjb21wcmVoZW5zaWJsZSBpZiB5b3Un
dmUgdW5kZXJzdG9vZCB0aGUgcHJldmlvdXMgZXhhbXBsZXMuIEknbGwgZmx1
c2ggaXQgb3V0IGhlcmUgYWdhaW4gd2hlbiB0aW1lIHBlcm1pdHMgb3IgSSd2
ZSBydW4gb3V0IG9mIG90aGVyIGNvbXBlbGxpbmcgZXhhbXBsZXMuCgojIyMg
MTYuIFNpbXBsZSBUaW1lb3V0IGV4YW1wbGUgKHVzaW5nIHRpbWVvdXQpCgpU
aGlzIGlzIGEgc2ltcGxlIGV4YW1wbGUgZGVtb25zdHJhdGluZyB0aGUgdXNl
IG9mIHRoZSBgLnRpbWVvdXRgIG9wZXJhdG9yLiBCdXR0b24gMSB3aWxsIGNv
bXBsZXRlIHRoZSB0YXNrIGJlZm9yZSB0aGUgdGltZW91dCBjb25zdHJhaW50
LCB3aGlsZSBCdXR0b24gMiB3aWxsIGZvcmNlIGEgdGltZW91dCBlcnJvci4K
Ck5vdGljZSBob3cgd2UgY2FuIHByb3ZpZGUgYSBjdXN0b20gT2JzZXJ2YWJs
ZSB0aGF0IGluZGljYXRlcyBob3cgdG8gcmVhY3QgdW5kZXIgYSB0aW1lb3V0
IEV4Y2VwdGlvbi4KCiMjIyAxNy4gU2V0dXAgYW5kIHRlYXJkb3duIHJlc291
cmNlcyAodXNpbmcgYHVzaW5nYCkKClRoZSBbb3BlcmF0b3IgYHVzaW5nYF0o
aHR0cDovL3JlYWN0aXZleC5pby9kb2N1bWVudGF0aW9uL29wZXJhdG9ycy91
c2luZy5odG1sKSBpcyByZWxhdGl2ZWx5IGxlc3Mga25vd24gYW5kIG5vdG9y
aW91c2x5IGhhcmQgdG8gR29vZ2xlLiBJdCdzIGEgYmVhdXRpZnVsIEFQSSB0
aGF0IGhlbHBzIHRvIHNldHVwIGEgKGNvc3RseSkgcmVzb3VyY2UsIHVzZSBp
dCBhbmQgdGhlbiBkaXNwb3NlIG9mZiBpbiBhIGNsZWFuIHdheS4KClRoZSBu
aWNlIHRoaW5nIGFib3V0IHRoaXMgb3BlcmF0b3IgaXMgdGhhdCBpdCBwcm92
aWRlcyBhIG1lY2hhbnNpbSB0byB1c2UgcG90ZW50aWFsbHkgY29zdGx5IHJl
c291cmNlcyBpbiBhIHRpZ2h0bHkgc2NvcGVkIG1hbm5lci4gdXNpbmcgLT4g
c2V0dXAsIHVzZSBhbmQgZGlzcG9zZS4gVGhpbmsgREIgY29ubmVjdGlvbnMg
KGxpa2UgUmVhbG0gaW5zdGFuY2VzKSwgc29ja2V0IGNvbm5lY3Rpb25zLCB0
aHJlYWQgbG9ja3MgZXRjLgoKIyMjIDE4LiBNdWx0aWNhc3QgUGxheWdyb3Vu
ZAoKTXVsdGljYXN0aW5nIGluIFJ4IGlzIGxpa2UgYSBkYXJrIGFydC4gTm90
IHRvbyBtYW55IGZvbGtzIGtub3cgaG93IHRvIHB1bGwgaXQgb2ZmIHdpdGhv
dXQgY29uY2Vybi4gVGhpcyBleGFtcGxlIGNvbmRpZXJzIHR3byBzdWJzY3Jp
YmVycyAoaW4gdGhlIGZvcm1zIG9mIGJ1dHRvbnMpIGFuZCBhbGxvd3MgeW91
IHRvIGFkZC9yZW1vdmUgc3Vic2NyaWJlcnMgYXQgZGlmZmVyZW50IHBvaW50
cyBvZiB0aW1lIGFuZCBzZWUgaG93IHRoZSBkaWZmZXJlbnQgb3BlcmF0b3Jz
IGJlaGF2ZSB1bmRlciB0aG9zZSBjaXJjdW1zdGFuY2VzLgoKVGhlIHNvdXJj
ZSBvYnNlcnZhbGUgaXMgYSB0aW1lciAoYGludGVydmFsYCkgb2JzZXJ2YWJs
ZSBhbmQgdGhlIHJlYXNvbiB0aGlzIHdhcyBjaG9zZW4gd2FzIHRvIGludGVu
dGlvbmFsbHkgcGljayBhIG5vbi10ZXJtaW5hdGluZyBvYnNlcnZhYmxlLCBz
byB5b3UgY2FuIHRlc3QvY29uZmlybSBpZiB5b3VyIG11bHRpY2FzdCBleHBl
cmltZW50IHdpbGwgbGVhay4KCl9JIGFsc28gZ2F2ZSBhIHRhbGsgYWJvdXQg
W011bHRpY2FzdGluZyBpbiBkZXRhaWwgYXQgMzYwfEFuZGV2XShodHRwczov
L3NwZWFrZXJkZWNrLmNvbS9rYXVzaGlrZ29wYWwvcngtYnktZXhhbXBsZS12
b2x1bWUtMy10aGUtbXVsdGljYXN0LWVkaXRpb24pLiBJZiB5b3UgaGF2ZSB0
aGUgaW5jbGluYXRpb24gYW5kIHRpbWUsIEkgaGlnaGx5IHN1Z2dlc3Qgd2F0
Y2hpbmcgdGhhdCB0YWxrIGZpcnN0IChzcGVjaWZpY2FsbHkgdGhlIE11bHRp
Y2FzdCBvcGVyYXRvciBwZXJtdXRhdGlvbiBzZWdtZW50KSBhbmQgdGhlbiBt
ZXNzaW5nIGFyb3VuZCB3aXRoIHRoZSBleGFtcGxlIGhlcmUuXwoKIyMgUngg
Mi54CgpBbGwgdGhlIGV4YW1wbGVzIGhlcmUgaGF2ZSBiZWVuIG1pZ3JhdGVk
IHRvIHVzZSBSeEphdmEgMi5YLgoKKiBIYXZlIGEgbG9vayBhdCBbUFIgIzgz
IHRvIHNlZSB0aGUgZGlmZiBvZiBjaGFuZ2VzIGJldHdlZW4gUnhKYXZhIDEg
YW5kIDJdKGh0dHBzOi8vZ2l0aHViLmNvbS9rYXVzaGlrZ29wYWwvUnhKYXZh
LUFuZHJvaWQtU2FtcGxlcy9wdWxsLzgzL2ZpbGVzKQoqIFtXaGF0J3MgZGlm
ZmVyZW50IGluIFJ4IDIueF0oaHR0cHM6Ly9naXRodWIuY29tL1JlYWN0aXZl
WC9SeEphdmEvd2lraS9XaGF0J3MtZGlmZmVyZW50LWluLTIuMCkKCldlIHVz
ZSBbRGF2aWQgS2Fybm9rJ3MgSW50ZXJvcCBsaWJyYXJ5XShodHRwczovL2dp
dGh1Yi5jb20vYWthcm5va2QvUnhKYXZhMkludGVyb3ApIGluIHNvbWUgY2Fz
ZXMgYXMgY2VydGFpbiBsaWJyYXJpZXMgbGlrZSBSeEJpbmRpbmdzLCBSeFJl
bGF5cywgUnhKYXZhLU1hdGggZXRjLiBoYXZlIG5vdCBiZWVuIHBvcnRlZCB5
ZXQgdG8gMi54LgoKIyMgQ29udHJpYnV0aW5nOgoKSSB0cnkgdG8gZW5zdXJl
IHRoZSBleGFtcGxlcyBhcmUgbm90IG92ZXJseSBjb250cml2ZWQgYnV0IHJl
ZmxlY3QgYSByZWFsLXdvcmxkIHVzZWNhc2UuIElmIHlvdSBoYXZlIHNpbWls
YXIgdXNlZnVsIGV4YW1wbGVzIGRlbW9uc3RyYXRpbmcgdGhlIHVzZSBvZiBS
eEphdmEsIGZlZWwgZnJlZSB0byBzZW5kIGluIGEgcHVsbCByZXF1ZXN0LgoK
SSdtIHdyYXBwaW5nIG15IGhlYWQgYXJvdW5kIFJ4SmF2YSB0b28gc28gaWYg
eW91IGZlZWwgdGhlcmUncyBhIGJldHRlciB3YXkgb2YgZG9pbmcgb25lIG9m
IHRoZSBleGFtcGxlcyBtZW50aW9uZWQgYWJvdmUsIG9wZW4gdXAgYW4gaXNz
dWUgZXhwbGFpbmluZyBob3cuIEV2ZW4gYmV0dGVyLCBzZW5kIGEgcHVsbCBy
ZXF1ZXN0LgoKIyMgTGljZW5zZQoKTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNo
ZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIikuCllvdSBt
YXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAoKICAgaHR0cDov
L3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCgpVbmxlc3Mg
cmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdy
aXRpbmcsIHNvZnR3YXJlCmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNl
IGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCldJVEhPVVQg
V0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIg
ZXhwcmVzcyBvciBpbXBsaWVkLgpTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBz
cGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kCmxp
bWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgoKWW91IGFncmVlIHRoYXQg
YWxsIGNvbnRyaWJ1dGlvbnMgdG8gdGhpcyByZXBvc2l0b3J5LCBpbiB0aGUg
Zm9ybSBvZiBmaXhlcywgcHVsbC1yZXF1ZXN0cywgbmV3IGV4YW1wbGVzIGV0
Yy4gZm9sbG93IHRoZSBhYm92ZS1tZW50aW9uZWQgbGljZW5zZS4K
",,7154,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
