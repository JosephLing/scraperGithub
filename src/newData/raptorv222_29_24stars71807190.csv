name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'MathJax',847885,b'Beautiful math in all browsers',b'JavaScript',437,7188,,255,False,b'https://api.github.com/repos/mathjax/MathJax/forks',"IyBNYXRoSmF4CgojIyBCZWF1dGlmdWwgbWF0aCBpbiBhbGwgYnJvd3NlcnMK
Ck1hdGhKYXggaXMgYW4gb3Blbi1zb3VyY2UgSmF2YVNjcmlwdCBkaXNwbGF5
IGVuZ2luZSBmb3IgTGFUZVgsIE1hdGhNTCwKYW5kIEFzY2lpTWF0aCBub3Rh
dGlvbiB0aGF0IHdvcmtzIGluIGFsbCBtb2Rlcm4gYnJvd3NlcnMuICBJdCB3
YXMKZGVzaWduZWQgd2l0aCB0aGUgZ29hbCBvZiBjb25zb2xpZGF0aW5nIHRo
ZSByZWNlbnQgYWR2YW5jZXMgaW4gd2ViCnRlY2hub2xvZ2llcyBpbnRvIGEg
c2luZ2xlLCBkZWZpbml0aXZlLCBtYXRoLW9uLXRoZS13ZWIgcGxhdGZvcm0K
c3VwcG9ydGluZyB0aGUgbWFqb3IgYnJvd3NlcnMgYW5kIG9wZXJhdGluZyBz
eXN0ZW1zLiAgSXQgcmVxdWlyZXMgbm8Kc2V0dXAgb24gdGhlIHBhcnQgb2Yg
dGhlIHVzZXIgKG5vIHBsdWdpbnMgdG8gZG93bmxvYWQgb3Igc29mdHdhcmUg
dG8KaW5zdGFsbCksIHNvIHRoZSBwYWdlIGF1dGhvciBjYW4gd3JpdGUgd2Vi
IGRvY3VtZW50cyB0aGF0IGluY2x1ZGUKbWF0aGVtYXRpY3MgYW5kIGJlIGNv
bmZpZGVudCB0aGF0IHVzZXJzIHdpbGwgYmUgYWJsZSB0byB2aWV3IGl0Cm5h
dHVyYWxseSBhbmQgZWFzaWx5LiAgU2ltcGx5IGluY2x1ZGUgTWF0aEpheCBh
bmQgc29tZSBtYXRoZW1hdGljcyBpbgphIHdlYiBwYWdlLCBhbmQgTWF0aEph
eCBkb2VzIHRoZSByZXN0LgoKU29tZSBvZiB0aGUgbWFpbiBmZWF0dXJlcyBv
ZiBNYXRoSmF4IGluY2x1ZGU6CgotIEhpZ2gtcXVhbGl0eSBkaXNwbGF5IG9m
IExhVGVYLCBNYXRoTUwsIGFuZCBBc2NpaU1hdGggbm90YXRpb24gaW4gSFRN
TCBwYWdlcwoKLSBTdXBwb3J0ZWQgaW4gbW9zdCBicm93c2VycyB3aXRoIG5v
IHBsdWctaW5zLCBleHRyYSBmb250cywgb3Igc3BlY2lhbAogIHNldHVwIGZv
ciB0aGUgcmVhZGVyCgotIEVhc3kgZm9yIGF1dGhvcnMsIGZsZXhpYmxlIGZv
ciBwdWJsaXNoZXJzLCBleHRlbnNpYmxlIGZvciBkZXZlbG9wZXJzCgotIFN1
cHBvcnRzIG1hdGggYWNjZXNzaWJpbGl0eSwgY3V0LWFuZC1wYXN0ZSBpbnRl
cm9wZXJhYmlsaXR5LCBhbmQgb3RoZXIKICBhZHZhbmNlZCBmdW5jdGlvbmFs
aXR5CgotIFBvd2VyZnVsIEFQSSBmb3IgaW50ZWdyYXRpb24gd2l0aCBvdGhl
ciB3ZWIgYXBwbGljYXRpb25zCgpTZWUgPGh0dHA6Ly93d3cubWF0aGpheC5v
cmcvPiBmb3IgYWRkaXRpb25hbCBkZXRhaWxzIGFib3V0IE1hdGhKYXgsCmFu
ZCA8aHR0cHM6Ly9kb2NzLm1hdGhqYXgub3JnPiBmb3IgdGhlIE1hdGhKYXgg
ZG9jdW1lbnRhdGlvbi4KCiMjIE1hdGhKYXggQ29tcG9uZW50cwoKTWF0aEph
eCB2ZXJzaW9uIDMgdXNlcyBmaWxlcyBjYWxsZWQgKmNvbXBvbmVudHMqIHRo
YXQgY29udGFpbiB0aGUKdmFyaW91cyBNYXRoSmF4IG1vZHVsZXMgdGhhdCB5
b3UgY2FuIGluY2x1ZGUgaW4geW91ciB3ZWIgcGFnZXMgb3IKYWNjZXNzIG9u
IGEgc2VydmVyIHRocm91Z2ggTm9kZUpTLiAgU29tZSBjb21wb25lbnRzIGNv
bWJpbmUgYWxsIHRoZQpwaWVjZXMgeW91IG5lZWQgdG8gcnVuIE1hdGhKYXgg
d2l0aCBvbmUgb3IgbW9yZSBpbnB1dCBmb3JtYXRzIGFuZCBhCnBhcnRpY3Vs
YXIgb3V0cHV0IGZvcm1hdCwgd2hpbGUgb3RoZXIgY29tcG9uZW50cyBhcmUg
cGllY2VzIHRoYXQgY2FuCmJlIGxvYWRlZCBvbiBkZW1hbmQgd2hlbiBuZWVk
ZWQsIG9yIGJ5IGEgY29uZmlndXJhdGlvbiB0aGF0IHNwZWNpZmllcwp0aGUg
cGllY2VzIHlvdSB3YW50IHRvIGNvbWJpbmUgaW4gYSBjdXN0b20gd2F5LiAg
Rm9yIHVzYWdlCmluc3RydWN0aW9ucywgc2VlIHRoZSBbTWF0aEpheCBkb2N1
bWVudGF0aW9uXShodHRwczovL2RvY3MubWF0aGpheC5vcmcpLgoKQ29tcG9u
ZW50cyBwcm92aWRlIGEgY29udmVuaWVudCBwYWNrYWdpbmcgb2YgTWF0aEph
eCdzIG1vZHVsZXMsIGJ1dCBpdAppcyBwb3NzaWJsZSBmb3IgeW91IHRvIGZv
cm0geW91ciBvd24gY3VzdG9tIGNvbXBvbmVudHMsIG9yIHRvIHVzZQpNYXRo
SmF4J3MgbW9kdWxlcyBkaXJlY3RseSBpbiBhIG5vZGUgYXBwbGljYXRpb24g
b24gYSBzZXJ2ZXIuICBUaGVyZQphcmUgW3dlYiBleGFtcGxlc10oaHR0cHM6
Ly9naXRodWIuY29tL21hdGhqYXgvTWF0aEpheC1kZW1vcy13ZWIpCnNob3dp
bmcgaG93IHRvIHVzZSBNYXRoSmF4IGluIHdlYiBwYWdlcyBhbmQgaG93IHRv
IGJ1aWxkIHlvdXIgb3duCmNvbXBvbmVudHMsIGFuZCBbbm9kZQpleGFtcGxl
c10oaHR0cHM6Ly9naXRodWIuY29tL21hdGhqYXgvTWF0aEpheC1kZW1vcy1u
b2RlKSBpbGx1c3RyYXRpbmcKaG93IHRvIHVzZSBjb21wb25lbnRzIGluIG5v
ZGUgYXBwbGljYXRpb25zIG9yIGNhbGwgTWF0aEpheCBtb2R1bGVzCmRpcmVj
dGx5LgoKIyMgV2hhdCdzIGluIHRoaXMgUmVwb3NpdG9yeQoKVGhpcyByZXBv
c2l0b3J5IGNvbnRhaW5zIG9ubHkgdGhlIGNvbXBvbmVudCBmaWxlcyBmb3Ig
TWF0aEpheCwgbm90IHRoZQpzb3VyY2UgY29kZSBmb3IgTWF0aEpheCAod2hp
Y2ggYXJlIGF2YWlsYWJsZSBpbiBhIHNlcGFyYXRlIFtNYXRoSmF4CnNvdXJj
ZSByZXBvc2l0b3J5XShodHRwczovL2dpdGh1Yi5jb20vbWF0aGpheC9NYXRo
SmF4LXNyYy8pKS4gIFRoZXNlCmNvbXBvbmVudCBmaWxlcyBhcmUgdGhlIG9u
ZXMgc2VydmVkIGJ5IHRoZSBDRE5zIHRoYXQgb2ZmZXIgTWF0aEpheCB0bwp0
aGUgd2ViLiAgSW4gdmVyc2lvbiAyLCB0aGUgZmlsZXMgdXNlZCBvbiB0aGUg
d2ViIHdlcmUgYWxzbyB0aGUgc291cmNlCmZpbGVzIGZvciBNYXRoSmF4LCBi
dXQgaW4gdmVyc2lvbiAzLCB0aGUgc291cmNlIGZpbGVzIGFyZSBubyBsb25n
ZXIgb24KdGhlIENETiwgYXMgdGhleSBhcmUgbm90IHdoYXQgYXJlIHJ1biBp
biB0aGUgYnJvd3Nlci4KClRoZSBjb21wb25lbnRzIGFyZSBzdG9yZWQgaW4g
dGhlIGBlczVgIGRpcmVjdG9yeSwgYW5kIGFyZSBpbiBFUzUgZm9ybWF0CmZv
ciB0aGUgd2lkZXN0IHBvc3NpYmxlIGNvbXBhdGliaWxpdHkuICBJbiB0aGUg
ZnV0dXJlLCB3ZSBtYXkgbWFrZSBhbgpgZXM2YCBkaXJlY3RvcnkgY29udGFp
bmluZyBFUzYgdmVyc2lvbnMgb2YgdGhlIGNvbXBvbmVudHMuCgojIyBJbnN0
YWxsYXRpb24gYW5kIFVzZQoKIyMjIFVzaW5nIE1hdGhKYXggY29tcG9uZW50
cyBmcm9tIGEgQ0ROIG9uIHRoZSB3ZWIKCklmIHlvdSBhcmUgbG9hZGluZyBN
YXRoSmF4IGZyb20gYSBDRE4gaW50byBhIHdlYiBwYWdlLCB0aGVyZSBpcyBu
bwpuZWVkIHRvIGluc3RhbGwgYW55dGhpbmcuICBTaW1wbHkgdXNlIGEgYHNj
cmlwdGAgdGFnIHRoYXQgbG9hZHMKTWF0aEpheCBmcm9tIHRoZSBDRE4uICBF
LmcuLAoKICAgIDxzY3JpcHQgaWQ9Ik1hdGhKYXgtc2NyaXB0IiBhc3luYwog
ICAgICBzcmM9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vbWF0aGph
eEAzL2VzNS90ZXgtbW1sLWNodG1sLmpzIj4KICAgIDwvc2NyaXB0PgoKU2Vl
IHRoZQpbZG9jdW1lbnRhdGlvbl0oaHR0cHMvL2RvY3MubWF0aGpheC5vcmcv
ZW4vbGF0ZXN0L2luZGV4Lmh0bWwjYnJvd3Nlci1jb21wb25lbnRzKQpmb3Ig
bW9yZSBkZXRhaWxzLgoKIyMjIEhvc3RpbmcgeW91ciBvd24gY29weSBvZiB0
aGUgTWF0aEpheCBDb21wb25lbnRzCgpJZiB5b3Ugd2FudCB0byBob3N0IE1h
dGhKYXggZnJvbSB5b3VyIG93biBzZXJ2ZXIsIHlvdSBjYW4gZG8gc28gYnkK
aW5zdGFsbGluZyB0aGUgYG1hdGhqYXhgIHBhY2thZ2UgdXNpbmcgYG5wbWAg
YW5kIG1vdmluZyB0aGUgYGVzNWAKZGlyZWN0b3J5IHRvIGFuIGFwcHJvcHJp
YXRlIGxvY2F0aW9uIG9uIHlvdXIgc2VydmVyOgoKICAgIG5wbSBpbnN0YWxs
IG1hdGhqYXgKICAgIG12IG5vZGVfbW9kdWxlcy9tYXRoamF4L2VzNSA8cGF0
aC10by1zZXJ2ZXItbG9jYXRpb24+L21hdGhqYXgKCkFsdGVybmF0aXZlbHks
IHlvdSBjYW4gZ2V0IHRoZSBmaWxlcyB2aWEgR2l0SHViOgoKICAgIGdpdCBj
bG9uZSBodHRwczovL2dpdGh1Yi5jb20vbWF0aGpheC9NYXRoSmF4LmdpdCBt
ai10bXAKICAgIG12IG1qLXRtcC9lczUgPHBhdGgtdG8tc2VydmVyLWxvY2F0
aW9uPi9tYXRoamF4CiAgICBybSAtcmYgbWotdG1wCgpUaGVuIChpbiBlaXRo
ZXIgY2FzZSkgeW91IGNhbiB1c2UgYSBzY3JpcHQgdGFnIGxpa2UgdGhlIGZv
bGxvd2luZzoKCiAgICA8c2NyaXB0IGlkPSJNYXRoSmF4LXNjcmlwdCIgYXN5
bmMKICAgICAgICBzcmM9Ijx1cmwtdG8teW91ci1zaXRlPi9tYXRoamF4L3Rl
eC1jaHRtbC5qcyI+PC9zY3JpcHQ+Cgp3aGVyZSBgPHVybC10by15b3VyLXNp
dGU+YCBpcyByZXBsYWNlZCBieSB0aGUgVVJMIHRvIHRoZSBsb2NhdGlvbgp3
aGVyZSB5b3UgbW92ZWQgdGhlIE1hdGhKYXggZmlsZXMgYWJvdmUuCgpTZWUg
dGhlCltkb2N1bWVudGF0aW9uXShodHRwczovL2RvY3MubWF0aGpheC5vcmcv
ZW4vbGF0ZXN0L3dlYi9ob3N0aW5nLmh0bWwpCmZvciBkZXRhaWxzLgoKIyMj
IFVzaW5nIE1hdGhKYXggY29tcG9uZW50cyBpbiBhIG5vZGUgYXBwbGljYXRp
b24KClRvIHVzZSBNYXRoSmF4IGNvbXBvbmVudHMgaW4gYSBub2RlIGFwcGxp
Y2F0aW9uLCBpbnN0YWxsIHRoZSBgbWF0aGpheGAKcGFja2FnZToKCiAgICBu
cG0gaW5zdGFsbCBtYXRoamF4CgphbmQgcmVxdWlyZSBgbWF0aGpheGAgd2l0
aGluIHlvdXIgYXBwbGljYXRpb246CgogICAgcmVxdWlyZSgnbWF0aGpheCcp
LmluaXQoeyAuLi4gfSkudGhlbigoTWF0aEpheCkgPT4geyAuLi4gfSk7CiAg
ICAKd2hlcmUgdGhlIGZpcnN0IGB7IC4uLiB9YCBpcyBhIE1hdGhKYXggY29u
ZmlndXJhdGlvbiwgYW5kIHRoZSBzZWNvbmQKYHsgLi4uIH1gIGlzIHRoZSBj
b2RlIHRvIHJ1biBhZnRlciBNYXRoSmF4IGhhcyBiZWVuIGxvYWRlZC4gIEUu
Zy4KCiAgICByZXF1aXJlKCdtYXRoamF4JykuaW5pdCh7CiAgICAgIGxvYWRl
cjoge2xvYWQ6IFsnaW5wdXQvdGV4JywgJ291dHB1dC9zdmcnXX0KICAgIH0p
LnRoZW4oKE1hdGhKYXgpID0+IHsKICAgICAgY29uc3Qgc3ZnID0gTWF0aEph
eC50ZXgyc3ZnKCdcXGZyYWN7MX17eF4yLTF9Jywge2Rpc3BsYXk6IHRydWV9
KTsKICAgICAgY29uc29sZS5sb2coTWF0aEpheC5zdGFydHVwLmFkYXB0b3Iu
b3V0ZXJIVE1MKHN2ZykpOwogICAgfSkuY2F0Y2goKGVycikgPT4gY29uc29s
ZS5sb2coZXJyLm1lc3NhZ2UpKTsKCiAgICAKU2VlIHRoZQpbZG9jdW1lbnRh
dGlvbl0oaHR0cHMvL2RvY3MubWF0aGpheC5vcmcvZW4vbGF0ZXN0L2luZGV4
Lmh0bWwjc2VydmVyLW5vZGVqcykKZm9yIG1vcmUgZGV0YWlscy4KCiMjIFJl
ZHVjaW5nIHRoZSBTaXplIG9mIHRoZSBDb21wb25lbnRzIERpcmVjdG9yeQoK
U2luY2UgdGhlIGBlczVgIGRpcmVjdG9yeSBjb250YWlucyAqYWxsKiB0aGUg
Y29tcG9uZW50IGZpbGVzLCBzbyBpZgp5b3UgYXJlIG9ubHkgcGxhbm5pbmcg
b25lIHVzZSBvbmUgY29uZmlndXJhdGlvbiwgeW91IGNhbiByZWR1Y2UgdGhl
CnNpemUgb2YgdGhlIE1hdGhKYXggZGlyZWN0b3J5IGJ5IHJlbW92aW5nIHVu
dXNlZCBjb21wb25lbnRzLiBGb3IKZXhhbXBsZSwgaWYgeW91IGFyZSB1c2lu
ZyB0aGUgYHRleC1jaHRtbC5qc2AgY29tcG9uZW50LCB0aGVuIHlvdSBjYW4K
cmVtb3ZlIHRoZSBgdGV4LW1tbC1jaHRtbC5qc2AsIGB0ZXgtc3ZnLmpzYCwg
YHRleC1tbWwtc3ZnLmpzYCwKYHRleC1jaHRtbC1mdWxsLmpzYCwgYW5kIGB0
ZXgtc3ZnLWZ1bGwuanNgIGNvbmZpZ3VyYXRpb25zLCB3aGljaCB3aWxsCnNh
dmUgY29uc2lkZXJhYmxlIHNwYWNlLiAgSW5kZWVkLCB5b3Ugc2hvdWxkIGJl
IGFibGUgdG8gcmVtb3ZlCmV2ZXJ5dGhpbmcgb3RoZXIgdGhhbiBgdGV4LWNo
dG1sLmpzYCwgYW5kIHRoZSBgaW5wdXQvdGV4L2V4dGVuc2lvbnNgLCBgb3V0
cHV0L2NodG1sL2ZvbnRzL3dvZmYtdjJgLCBgYWRhcHRvcnNgLCBgYTExeWAs
IGFuZCBgc3JlYCBkaXJlY3Rvcmllcy4gIElmIHlvdSBhcmUgdXNpbmcgdGhl
IHJlc3VsdHMgb25seSBvbiB0aGUgd2ViLCB5b3UgY2FuIHJlbW92ZSBgYWRh
cHRvcnNgIGFzIHdlbGwuICAKCklmIHlvdSBhcmUgbm90IHVzaW5nIEExMVkg
c3VwcG9ydCAoZS5nLiwgc3BlZWNoIGdlbmVyYXRpb24sIG9yIHNlbWFudGlj
IGVucmljaG1lbnQpLCB0aGVuIHlvdSBjYW4gcmVtb3ZlIGBhMTF5YCBhbmQg
YHNyZWAgYXMgd2VsbCAodGhvdWdoIGluIHRoaXMgY2FzZSB5b3UgbWF5IG5l
ZWQgdG8gZGlzYWJsZSB0aGUgYXNzaXN0aXZlIHRvb2xzIGluIHRoZSBNYXRo
SmF4IGNvbnRleHR1YWwgbWVudSBpbiBvcmRlciB0byBhdm9pZCBNYXRoSmF4
IHRyeWluZyB0byBsb2FkIHRoZW0gd2hlbiB0aGV5IGFyZW4ndCB0aGVyZSku
CgpJZiB5b3UgYXJlIHVzaW5nIFNWRyByYXRoZXIgdGhhdCBDb21tb25IVE1M
IG91dHB1dCAoZS5nLiwgYHRleC1zdmcuanNgIHJhdGhlciB0aGFuIGB0ZXgt
Y2h0bWwuanNgKSwgeW91IGNhbiByZW1vdmUgdGhlIGBvdXRwdXQvY2h0bWwv
Zm9udHMvd29mZi12MmAgZGlyZWN0b3J5LiAgSWYgeW91IGFyZSB1c2luZyBN
YXRoTUwgaW5wdXQgcmF0aGVyIHRoYW4gVGVYIChlLmcuLCBgbW1sLWNodG1s
LmpzYCByYXRoZXIgdGhhbiBgdGV4LWNodG1sLmpzYCksIHRoZW4geW91IGNh
biByZW1vdmUgYGlucHV0L3RleC9leHRlbnNpb25zYCBhcyB3ZWxsLgoKCiMj
IFRoZSBDb21wb25lbnQgRmlsZXMgYW5kIFB1bGwgUmVxdWVzdHMKClRoZSBg
ZXM1YCBkaXJlY3RvcnkgaXMgZ2VuZXJhdGVkIGF1dG9tYXRpY2FsbHkgZnJv
bSB0aGUgY29udGVudHMgb2YgdGhlCk1hdGhKYXggc291cmNlIHJlcG9zaXRv
cnkuICBZb3UgY2FuIHJlYnVpbGQgdGhlIGNvbXBvbmVudHMgdXNpbmcgdGhl
CmNvbW1hbmQKCiAgICBucG0gcnVuIG1ha2UtZXM1IC0tc2lsZW50CgpOb3Rl
IHRoYXQgc2luY2UgdGhlIGNvbnRlbnRzIG9mIHRoaXMgcmVwb3NpdG9yeSBh
cmUgZ2VuZXJhdGVkCmF1dG9tYXRpY2FsbHksIHlvdSBzaG91bGQgbm90IHN1
Ym1pdCBwdWxsIHJlcXVlc3RzIHRoYXQgbW9kaWZ5IHRoZQpjb250ZW50cyBv
ZiB0aGUgYGVzNWAgZGlyZWN0b3J5LiAgSWYgeW91IHdpc2ggdG8gc3VibWl0
IGEgbW9kaWZpY2F0aW9uCnRvIE1hdGhKYXgsIHlvdSBzaG91bGQgbWFrZSBh
IHB1bGwgcmVxdWVzdCBpbiB0aGUgW01hdGhKYXggc291cmNlCnJlcG9zaXRv
cnldKGh0dHBzOi8vZ2l0aHViLmNvbS9tYXRoamF4L01hdGhKYXgtc3JjKS4K
CiMjIE1hdGhKYXggQ29tbXVuaXR5CgpUaGUgbWFpbiBNYXRoSmF4IHdlYnNp
dGUgaXMgPGh0dHA6Ly93d3cubWF0aGpheC5vcmc+LCBhbmQgaXQgaW5jbHVk
ZXMKYW5ub3VuY2VtZW50cyBhbmQgb3RoZXIgaW1wb3J0YW50IGluZm9ybWF0
aW9uLiAgQSBbTWF0aEpheCB1c2VyCmZvcnVtXShodHRwOi8vZ3JvdXBzLmdv
b2dsZS5jb20vZ3JvdXAvbWF0aGpheC11c2VycykgZm9yIGFza2luZwpxdWVz
dGlvbnMgYW5kIGdldHRpbmcgYXNzaXN0YW5jZSBpcyBob3N0ZWQgYXQgR29v
Z2xlLCBhbmQgdGhlIFtNYXRoSmF4CmJ1ZyB0cmFja2VyXShodHRwczovL2dp
dGh1Yi5jb20vbWF0aGpheC9NYXRoSmF4L2lzc3VlcykgaXMgaG9zdGVkCmF0
IEdpdEh1Yi4KCkJlZm9yZSByZXBvcnRpbmcgYSBidWcsIHBsZWFzZSBjaGVj
ayB0aGF0IGl0IGhhcyBub3QgYWxyZWFkeSBiZWVuCnJlcG9ydGVkLiAgQWxz
bywgcGxlYXNlIHVzZSB0aGUgYnVnIHRyYWNrZXIgKHJhdGhlciB0aGFuIHRo
ZSBoZWxwCmZvcnVtKSBmb3IgcmVwb3J0aW5nIGJ1Z3MsIGFuZCB1c2UgdGhl
IHVzZXIncyBmb3J1bSAocmF0aGVyIHRoYW4gdGhlCmJ1ZyB0cmFja2VyKSBm
b3IgcXVlc3Rpb25zIGFib3V0IGhvdyB0byB1c2UgTWF0aEpheC4KCiMjIE1h
dGhKYXggUmVzb3VyY2VzCgoqIFtNYXRoSmF4IERvY3VtZW50YXRpb25dKGh0
dHBzOi8vZG9jcy5tYXRoamF4Lm9yZykKKiBbTWF0aEpheCBDb21wb25lbnRz
XShodHRwczovL2dpdGh1Yi5jb20vbWF0aGpheC9NYXRoSmF4KQoqIFtNYXRo
SmF4IFNvdXJjZSBDb2RlXShodHRwczovL2dpdGh1Yi5jb20vbWF0aGpheC9N
YXRoSmF4LXNyYykKKiBbTWF0aEpheCBXZWIgRXhhbXBsZXNdKGh0dHBzOi8v
Z2l0aHViLmNvbS9tYXRoamF4L01hdGhKYXgtZGVtb3Mtd2ViKQoqIFtNYXRo
SmF4IE5vZGUgRXhhbXBsZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9tYXRoamF4
L01hdGhKYXgtZGVtb3Mtbm9kZSkKKiBbTWF0aEpheCBCdWcgVHJhY2tlcl0o
aHR0cHM6Ly9naXRodWIuY29tL21hdGhqYXgvTWF0aEpheC9pc3N1ZXMpCiog
W01hdGhKYXggVXNlcnMnIEdyb3VwXShodHRwOi8vZ3JvdXBzLmdvb2dsZS5j
b20vZ3JvdXAvbWF0aGpheC11c2VycykKCg==
",,7188,"bGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczoKLSBzdGFibGUKc3VkbzogZmFs
c2UKc2NyaXB0OgotIG5wbSBpbnN0YWxsCi0gbnBtIHRlc3QKYnJhbmNoZXM6
CiAgb25seToKICAtICIvXlxcZCtcXC5cXGQrLyIKZGVwbG95OgogIHByb3Zp
ZGVyOiBucG0KICBlbWFpbDogbWphZG1pbkBtYXRoamF4Lm9yZwogIGFwaV9r
ZXk6CiAgICBzZWN1cmU6IEN2TTBhUVRldHVBQ1FQQWhaV29QTUFKOWRYbkd0
SFBUTFM2TjJCTGV5TnhjaXFGQi82MXlaR0V2RGs2TDNRaFQ2M3VKb2hrOHE4
RW92ZXhQSkd4dlI4cjN3NzBzQkhpd3AyTm53cW9QZkkxbGRUTXo1YTJCMGQx
VWEzT2lvWk1sYmxLZElvK2RQeVRzMlg4RjBjUjFZNTNTazdGZlZRTVl3NXRo
RlhvSzZ4Q3o1ck9QOE40aHRYemQ3SElVZ0dvVGRadWkzQUlLMGRRcWFxbWVl
QlZTSUVvUlFUREFyT2poR3p3RC9EZlYrNTRWNWxMYjNvYW5nVlliWGk5RjVl
dmd2QkVzSFNWRlhCQmVzQW1HbmtLa3VQa1RaL1JaRWFxOWpod2RUcXVGUE84
TVowOUZDQm1neWZISDdBU0UwWXhzeU9wN05JZFhQblF6eE53K1hFaTFpeThj
V0M5c2ZEQ3Yvc3Z0ZHFka0VHZFZPcXpzVzZaSUl6eG0zdnVTeWdzMWMwZTRN
OEcrSnVjZXRoM1hxang3c1JXWnNNNXovcTJZb093NG9HeklTUGlmM2VJVnBG
VDN4Yzh4L1ZjSXMrVDhUM0VhdDl2QldhNENNTUNjL2xnSFgvYnk4ZldtbEl5
T0pYMnJFNXhEVk0zeUZ3RVRrOUVxZUJaQTIydVdOcTFod1UvVFBrN0tNRVgy
Nlkya3MrZlcxQldEcDhCUzhJN1hIcDNyTlIrVDVFbEwzYlRWSGdLVXhnZXNv
RHRqN0p4MTRsZGQrbmhaLzB1WFVzZnpZRHdYKzdLSTNVeWhySHBpSmoveXpZ
bmk4c3E5bkc3U3FxUDE2R21VWkY4ZlBiY2hMUzlSanE1RXF0OUNzV2dha05u
cmk2WUlQS1VoNzdCNmhTTmN1RXdUOGNVPQogIG9uOgogICAgdGFnczogdHJ1
ZQo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'micro',29371034,b'A microservice runtime environment',b'Go',10,7187,,317,False,b'https://api.github.com/repos/micro/micro/forks',"IyBNaWNybyBbIVtMaWNlbnNlXShodHRwczovL2ltZy5zaGllbGRzLmlvLzps
aWNlbnNlLWFwYWNoZS1ibHVlLnN2ZyldKGh0dHBzOi8vb3BlbnNvdXJjZS5v
cmcvbGljZW5zZXMvQXBhY2hlLTIuMCkgWyFbR29Eb2NdKGh0dHBzOi8vZ29k
b2Mub3JnL2dpdGh1Yi5jb20vbWljcm8vbWljcm8/c3RhdHVzLnN2ZyldKGh0
dHBzOi8vZ29kb2Mub3JnL2dpdGh1Yi5jb20vbWljcm8vbWljcm8pIFshW1Ry
YXZpcyBDSV0oaHR0cHM6Ly90cmF2aXMtY2kub3JnL21pY3JvL21pY3JvLnN2
Zz9icmFuY2g9bWFzdGVyKV0oaHR0cHM6Ly90cmF2aXMtY2kub3JnL21pY3Jv
L21pY3JvKSBbIVtHbyBSZXBvcnQgQ2FyZF0oaHR0cHM6Ly9nb3JlcG9ydGNh
cmQuY29tL2JhZGdlL21pY3JvL21pY3JvKV0oaHR0cHM6Ly9nb3JlcG9ydGNh
cmQuY29tL3JlcG9ydC9naXRodWIuY29tL21pY3JvL21pY3JvKQoKTWljcm8g
aXMgYSBydW50aW1lIGZvciBtaWNyb3NlcnZpY2UgZGV2ZWxvcG1lbnQuCgoj
IyBPdmVydmlldwoKTWljcm8gYWRkcmVzc2VzIHRoZSBrZXkgcmVxdWlyZW1l
bnRzIGZvciBidWlsZGluZyBzY2FsYWJsZSBzeXN0ZW1zLiBJdCB0YWtlcyB0
aGUgbWljcm9zZXJ2aWNlIGFyY2hpdGVjdHVyZSBwYXR0ZXJuIGFuZCB0cmFu
c2Zvcm1zIGl0IGludG8KYSBzZXQgb2YgdG9vbHMgd2hpY2ggYWN0IGFzIHRo
ZSBidWlsZGluZyBibG9ja3Mgb2YgYSBwbGF0Zm9ybS4gTWljcm8gZGVhbHMg
d2l0aCB0aGUgY29tcGxleGl0eSBvZiBkaXN0cmlidXRlZCBzeXN0ZW1zIGFu
ZCBwcm92aWRlcwpzaW1wbGUgYWJzdHJhY3Rpb25zIGFscmVhZHkgdW5kZXJz
dG9vZCBieSBkZXZlbG9wZXJzLgoKPGltZyBzcmM9Imh0dHBzOi8vbWljcm8u
bXUvcnVudGltZTMuc3ZnIiAvPgoKVGVjaG5vbG9neSBpcyBjb25zdGFudGx5
IGV2b2x2aW5nLiBUaGUgaW5mcmFzdHJ1Y3R1cmUgc3RhY2sgaXMgYWx3YXlz
IGNoYW5naW5nLiBNaWNybyBpcyBhIHBsdWdnYWJsZSBwbGF0Zm9ybSB3aGlj
aCBhZGRyZXNzZXMgdGhlc2UgaXNzdWVzLgpQbHVnIGluIGFueSBzdGFjayBv
ciB1bmRlcmx5aW5nIHRlY2hub2xvZ3kuIEJ1aWxkIGZ1dHVyZS1wcm9vZiBz
eXN0ZW1zIHVzaW5nIG1pY3JvLgoKRm9sbG93IHVzIG9uIFtUd2l0dGVyXSho
dHRwczovL3R3aXR0ZXIuY29tL21pY3JvaHEpIG9yIGpvaW4gdGhlIFtTbGFj
a10oaHR0cHM6Ly9taWNyby5tdS9zbGFjaykgY29tbXVuaXR5LgoKIyMgRmVh
dHVyZXMKClRoZSBydW50aW1lIGlzIGNvbXBvc2VkIG9mIHRoZSBmb2xsb3dp
bmcgZmVhdHVyZXM6CgotICoqYXBpOioqIEFuIGFwaSBnYXRld2F5LiBBIHNp
bmdsZSBlbnRyeSBwb2ludCB3aXRoIGR5bmFtaWMgcmVxdWVzdCByb3V0aW5n
IHVzaW5nIHNlcnZpY2UgZGlzY292ZXJ5LiBUaGUgQVBJIGdhdGV3YXkgYWxs
b3dzIHlvdSB0byBidWlsZCBhIHNjYWxhYmxlCm1pY3Jvc2VydmljZSBhcmNo
aXRlY3R1cmUgb24gdGhlIGJhY2tlbmQgYW5kIGNvbnNvbGlkYXRlIHNlcnZp
bmcgYSBwdWJsaWMgYXBpIG9uIHRoZSBmcm9udGVuZC4gVGhlIG1pY3JvIGFw
aSBwcm92aWRlcyBwb3dlcmZ1bCByb3V0aW5nCnZpYSBkaXNjb3ZlcnkgYW5k
IHBsdWdnYWJsZSBoYW5kbGVycyB0byBzZXJ2ZSBodHRwLCBncnBjLCB3ZWJz
b2NrZXRzLCBwdWJsaXNoIGV2ZW50cyBhbmQgbW9yZS4KCi0gKipicm9rZXI6
KiogQSBtZXNzYWdlIGJyb2tlciBhbGxvd2luZyBmb3IgYXN5bmMgbWVzc2Fn
aW5nLiBNaWNyb3NlcnZpY2VzIGFyZSBldmVudCBkcml2ZW4gYXJjaGl0ZWN0
dXJlcyBhbmQgc2hvdWxkIHByb3ZpZGUgbWVzc2FnaW5nIGFzIGEgZmlyc3QK
Y2xhc3MgY2l0aXplbi4gTm90aWZ5IG90aGVyIHNlcnZpY2VzIG9mIGV2ZW50
cyB3aXRob3V0IG5lZWRpbmcgdG8gd29ycnkgYWJvdXQgYSByZXNwb25zZS4K
Ci0gKipuZXR3b3JrOioqIEJ1aWxkIG11bHRpLWNsb3VkIG5ldHdvcmtzIHdp
dGggdGhlIG1pY3JvIG5ldHdvcmsgc2VydmljZS4gU2ltcGx5IGRyb3AtaW4g
YW5kIGNvbm5lY3QgdGhlIG5ldHdvcmsgc2VydmljZXMgYWNyb3NzIGFueSBl
bnZpcm9ubWVudAphbmQgY3JlYXRlIGEgc2luZ2xlIGZsYXQgbmV0d29yayB0
byByb3V0ZSBnbG9iYWxseS4gVGhlIG1pY3JvIG5ldHdvcmsgZHluYW1pY2Fs
bHkgYnVpbGRzIHJvdXRlcyBiYXNlZCBvbiB5b3VyIGxvY2FsIHJlZ2lzdHJ5
IGluIGVhY2ggZGF0YWNlbnRlcgplbnN1cmluZyBxdWVyaWVzIGFyZSByb3V0
ZWQgYmFzZWQgb24gbG9jYWxpdHkuCgotICoqbmV3OioqIEEgc2VydmljZSB0
ZW1wbGF0ZSBnZW5lcmF0b3IuIENyZWF0ZSBuZXcgc2VydmljZSB0ZW1wbGF0
ZXMgdG8gZ2V0IHN0YXJ0ZWQgcXVpY2tseS4gTWljcm8gcHJvdmlkZXMgcHJl
ZGVmaW5lZCB0ZW1wbGF0ZXMgZm9yIHdyaXRpbmcgbWljcm8gc2VydmljZXMu
CkFsd2F5cyBzdGFydCBpbiB0aGUgc2FtZSB3YXksIGJ1aWxkIGlkZW50aWNh
bCBzZXJ2aWNlcyB0byBiZSBtb3JlIHByb2R1Y3RpdmUuCgotICoqcHJveHk6
KiogQSB0cmFuc3BhcmVudCBzZXJ2aWNlIHByb3h5IGJ1aWx0IG9uIFtHbyBN
aWNyb10oaHR0cHM6Ly9naXRodWIuY29tL21pY3JvL2dvLW1pY3JvKS4gT2Zm
bG9hZCBzZXJ2aWNlIGRpc2NvdmVyeSwgbG9hZCBiYWxhbmNpbmcsCmZhdWx0
IHRvbGVyYW5jZSwgbWVzc2FnZSBlbmNvZGluZywgbWlkZGxld2FyZSwgbW9u
aXRvcmluZyBhbmQgbW9yZSB0byBhIHNpbmdsZSBhIGxvY2F0aW9uLiBSdW4g
aXQgc3RhbmRhbG9uZSBvciBhbG9uZ3NpZGUgeW91ciBzZXJ2aWNlLgoKLSAq
KnJlZ2lzdHJ5OioqIFRoZSByZWdpc3RyeSBwcm92aWRlcyBzZXJ2aWNlIGRp
c2NvdmVyeSB0byBsb2NhdGUgb3RoZXIgc2VydmljZXMsIHN0b3JlIGZlYXR1
cmUgcmljaCBtZXRhZGF0YSBhbmQgZW5kcG9pbnQgaW5mb3JtYXRpb24uIEl0
J3MgYQpzZXJ2aWNlIGV4cGxvcmVyIHdoaWNoIGxldHMgeW91IGNlbnRyYWxs
eSBhbmQgZHluYW1pY2FsbHkgc3RvcmUgdGhpcyBpbmZvIGF0IHJ1bnRpbWUu
CgotICoqc3RvcmU6KiogU3RhdGUgaXMgYSBmdW5kYW1lbnRhbCByZXF1aXJl
bWVudCBvZiBhbnkgc3lzdGVtLiBXZSBwcm92aWRlIGEga2V5LXZhbHVlIHN0
b3JlIHRvIHByb3ZpZGUgc2ltcGxlIHN0b3JhZ2Ugb2Ygc3RhdGUgd2hpY2gg
Y2FuIGJlIHNoYXJlZApiZXR3ZWVuIHNlcnZpY2VzIG9yIG9mZmxvYWQgbG9u
ZyB0ZXJtIHRvIGtlZXAgbWljcm9zZXJ2aWNlcyBzdGF0ZWxlc3MgYW5kIGhv
cml6b250YWxseSBzY2FsYWJsZS4KCi0gKip3ZWI6KiogVGhlIHdlYiBkYXNo
Ym9hcmQgYWxsb3dzIHlvdSB0byBleHBsb3JlIHlvdXIgc2VydmljZXMsIGRl
c2NyaWJlIHRoZWlyIGVuZHBvaW50cywgdGhlIHJlcXVlc3QgYW5kIHJlc3Bv
bnNlIGZvcm1hdHMgYW5kIGV2ZW4KcXVlcnkgdGhlbSBkaXJlY3RseS4gVGhl
IGRhc2hib2FyZCBhbHNvIGluY2x1ZGVzIGEgYnVpbHQgaW4gQ0xJIGxpa2Ug
ZXhwZXJpZW5jZSBmb3IgZGV2ZWxvcGVycyB3aG8gd2FudCB0byBkcm9wIGlu
dG8gdGhlIHRlcm1pbmFsIG9uIHRoZSBmbHkuCgpBZGRpdGlvbmFsbHkgbWlj
cm8gcHJvdmlkZXMgYSBHbyBkZXZlbG9wbWVudCBmcmFtZXdvcms6CgotICoq
Z28tbWljcm86KiogTGV2ZXJhZ2UgdGhlIHBvd2VyZnVsIFtHbyBNaWNyb10o
aHR0cHM6Ly9naXRodWIuY29tL21pY3JvL2dvLW1pY3JvKSBmcmFtZXdvcmsg
dG8gZGV2ZWxvcCBtaWNyb3NlcnZpY2VzIGVhc2lseSBhbmQgcXVpY2tseS4K
R28gTWljcm8gYWJzdHJhY3RzIGF3YXkgdGhlIGNvbXBsZXhpdHkgb2YgZGlz
dHJpYnV0ZWQgc3lzdGVtcyBhbmQgcHJvdmlkZXMgc2ltcGxlciBhYnN0cmFj
dGlvbnMgdG8gYnVpbGQgaGlnaGx5IHNjYWxhYmxlIG1pY3Jvc2VydmljZXMu
CgojIyBJbnN0YWxsCgpGcm9tIHNvdXJjZQoKYGBgCiMgZW5hYmxlIGdvIG1v
ZHVsZXMKZXhwb3J0IEdPMTExTU9EVUxFPW9uCgpnbyBnZXQgZ2l0aHViLmNv
bS9taWNyby9taWNybwpgYGAKCkRvY2tlciBpbWFnZQoKYGBgCmRvY2tlciBw
dWxsIG1pY3JvL21pY3JvCmBgYAoKTGF0ZXN0IHJlbGVhc2UgYmluYXJpZXMK
CmBgYAojIE1hY09TCmN1cmwgLWZzU0wgaHR0cHM6Ly9taWNyby5tdS9pbnN0
YWxsLnNoIHwgL2Jpbi9iYXNoCgojIExpbnV4CndnZXQgLXEgaHR0cHM6Ly9t
aWNyby5tdS9pbnN0YWxsLnNoIC1PIC0gfCAvYmluL2Jhc2gKCiMgV2luZG93
cwpwb3dlcnNoZWxsIC1Db21tYW5kICJpd3IgLXVzZWIgaHR0cHM6Ly9taWNy
by5tdS9pbnN0YWxsLnBzMSB8IGlleCIKYGBgCgojIyBHZXR0aW5nIFN0YXJ0
ZWQKCkJvb3QgdGhlIGVudGlyZSBkZXZlbG9wbWVudCBlbnZpcm9ubWVudCBs
b2NhbGx5CgpgYGAKbWljcm8gLS1sb2NhbApgYGAKCiMjIyBDcmVhdGUgYSBz
ZXJ2aWNlCgpgYGAKIyBlbmFibGUgZ28gbW9kdWxlcwpleHBvcnQgR08xMTFN
T0RVTEU9b24KCiMgZ2VuZXJhdGUgYSBzZXJ2aWNlIChmb2xsb3cgaW5zdHJ1
Y3Rpb25zIGluIG91dHB1dCkKbWljcm8gbmV3IGV4YW1wbGUKCiMgcnVuIHRo
ZSBzZXJ2aWNlCmdvIHJ1biBleGFtcGxlL21haW4uZ28KCiMgbGlzdCBzZXJ2
aWNlcwptaWNybyBsaXN0IHNlcnZpY2VzCgojIGNhbGwgYSBzZXJ2aWNlCm1p
Y3JvIGNhbGwgZ28ubWljcm8uc3J2LmV4YW1wbGUgRXhhbXBsZS5DYWxsICd7
Im5hbWUiOiAiSm9obiJ9JwpgYGAKCiMjIyBTaGFyZSBzZXJ2aWNlcwoKVGhl
IG1pY3JvIG5ldHdvcmsgaXMgYSBzaGFyZWQgZ2xvYmFsIHNlcnZpY2VzIG5l
dHdvcmsgYWN0aXZlbHkgaW4gW2RldmVsb3BtZW50XShodHRwczovL2dpdGh1
Yi5jb20vbWljcm8vZGV2ZWxvcG1lbnQvYmxvYi9tYXN0ZXIvbmV0d29yay5t
ZCkuCgpTdGFydCBtaWNybwoKYGBgIAptaWNybwpgYGAKClByb3h5IHNlcnZp
Y2UgY2FsbHMgdGhyb3VnaCB0aGUgbmV0d29yawoKYGBgCmV4cG9ydCBNSUNS
T19QUk9YWT1nby5taWNyby5uZXR3b3JrCmBgYAoKVmlldyBuZXR3b3JrIHNl
cnZpY2VzLCByb3V0ZXMsIG5vZGVzCgpgYGAKIyBMaXN0IHNlcnZpY2VzCm1p
Y3JvIHNlcnZpY2VzCgojIExpc3Qgbm9kZXMKbWljcm8gbmV0d29yayBub2Rl
cwoKIyBMaXN0IHJvdXRlcwptaWNybyBuZXR3b3JrIHJvdXRlcwoKIyBQZWVy
IGdyYXBoCm1pY3JvIG5ldHdvcmsgZ3JhcGgKYGBgCgojIyBVc2FnZQoKU2Vl
IGFsbCB0aGUgb3B0aW9ucwoKYGBgCm1pY3JvIC0taGVscApgYGAKClNlZSB0
aGUgW2RvY3NdKGh0dHBzOi8vbWljcm8ubXUvZG9jcy8pIGZvciBkZXRhaWxl
ZCBpbmZvcm1hdGlvbiBvbiB0aGUgYXJjaGl0ZWN0dXJlLCBpbnN0YWxsYXRp
b24gYW5kIHVzZSBvZiB0aGUgcGxhdGZvcm0uCg==
",,7187,"bGFuZ3VhZ2U6IGdvCmdvOgotIDEuMTMueAplbnY6CiAgLSBHTzExMU1PRFVM
RT1vbgpub3RpZmljYXRpb25zOgogIHNsYWNrOgogICAgc2VjdXJlOiBoSlpF
WFFBNFdwaUVvcHUwa2pZTFRtOUkzMFprV1BVeURReVpncHVmSG1Melc2WEdh
eU1PY1ljSStkU1ZabDRhNmxpZDRweDlnQUFuVFVVQTVOWm9GY0tyV1BNZk5Y
MkJuSXZXL3dwbTJ5S3JXNXJkcElsblQwN1llZmVGUlVhMmw0N2lmU25Ud3Ir
YVBzZk0wVGpJUUIyRXA4TnNydHZtYmFhRTF4TVhnSTg9CmNhY2hlOgogIGRp
cmVjdG9yaWVzOgogICAgLSAkR09QQVRIL3BrZy9tb2QK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"bmFtZTogcmVsZWFzZQoKb246CiAgcHVzaDoKICAgIGJyYW5jaGVzLWlnbm9y
ZToKICAgICAgLSAnKionCiAgICB0YWdzOgogICAgICAtICd2Ki4qLionCgpq
b2JzOgogIHJlbGVhc2U6CiAgICBydW5zLW9uOiB1YnVudHUtbGF0ZXN0CiAg
ICBzdGVwczoKICAgICAgLQogICAgICAgIG5hbWU6IENoZWNrb3V0CiAgICAg
ICAgdXNlczogYWN0aW9ucy9jaGVja291dEBtYXN0ZXIKICAgICAgLQogICAg
ICAgIG5hbWU6IFNldCB1cCBHbwogICAgICAgIHVzZXM6IGFjdGlvbnMvc2V0
dXAtZ29AdjEKICAgICAgICB3aXRoOgogICAgICAgICAgZ28tdmVyc2lvbjog
JzEuMTMnCiAgICAgIC0KICAgICAgICBuYW1lOiBSdW4gR29SZWxlYXNlcgog
ICAgICAgIHVzZXM6IGdvcmVsZWFzZXIvZ29yZWxlYXNlci1hY3Rpb25AdjEK
ICAgICAgICB3aXRoOgogICAgICAgICAgYXJnczogcmVsZWFzZSAtLXJtLWRp
c3QKICAgICAgICBlbnY6CiAgICAgICAgICBHSVRIVUJfVE9LRU46ICR7eyBz
ZWNyZXRzLkdJVEhVQl9UT0tFTiB9fQo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'the-gan-zoo',88285322,b'A list of all named GANs!',b'Python',18,7186,,489,False,b'https://api.github.com/repos/hindupuravinash/the-gan-zoo/forks',"IyBUaGUgR0FOIFpvbwoKPHAgYWxpZ249ImNlbnRlciI+PGltZyB3aWR0aD0i
NDAlIiBzcmM9IlRoZV9HQU5fWm9vLmpwZyIgLz48L3A+CgpFdmVyeSB3ZWVr
LCBuZXcgR0FOIHBhcGVycyBhcmUgY29taW5nIG91dCBhbmQgaXQncyBoYXJk
IHRvIGtlZXAgdHJhY2sgb2YgdGhlbSBhbGwsIG5vdCB0byBtZW50aW9uIHRo
ZSBpbmNyZWRpYmx5IGNyZWF0aXZlIHdheXMgaW4gd2hpY2ggcmVzZWFyY2hl
cnMgYXJlIG5hbWluZyB0aGVzZSBHQU5zISBTbywgaGVyZSdzIGEgbGlzdCBv
ZiB3aGF0IHN0YXJ0ZWQgYXMgYSBmdW4gYWN0aXZpdHkgY29tcGlsaW5nIGFs
bCBuYW1lZCBHQU5zIQoKPHAgYWxpZ249ImNlbnRlciI+PGltZyB3aWR0aD0i
NTAlIiBzcmM9ImN1bXVsYXRpdmVfZ2Fucy5qcGciIC8+PC9wPgoKWW91IGNh
biBhbHNvIGNoZWNrIG91dCB0aGUgc2FtZSBkYXRhIGluIGEgdGFidWxhciBm
b3JtYXQgd2l0aCBmdW5jdGlvbmFsaXR5IHRvIGZpbHRlciBieSB5ZWFyIG9y
IGRvIGEgcXVpY2sgc2VhcmNoIGJ5IHRpdGxlIFtoZXJlXShodHRwczovL2dp
dGh1Yi5jb20vaGluZHVwdXJhdmluYXNoL3RoZS1nYW4tem9vL2Jsb2IvbWFz
dGVyL2dhbnMudHN2KS4KCkNvbnRyaWJ1dGlvbnMgYXJlIHdlbGNvbWUuIEFk
ZCBsaW5rcyB0aHJvdWdoIHB1bGwgcmVxdWVzdHMgaW4gZ2Fucy50c3YgZmls
ZSBpbiB0aGUgc2FtZSBmb3JtYXQgb3IgY3JlYXRlIGFuIGlzc3VlIHRvIGxl
bW1lIGtub3cgc29tZXRoaW5nIEkgbWlzc2VkIG9yIHRvIHN0YXJ0IGEgZGlz
Y3Vzc2lvbi4KCkNoZWNrIG91dCBbRGVlcCBIdW50XShodHRwczovL2RlZXBo
dW50LmluKSAtIG15IHdlZWtseSBBSSBuZXdzbGV0dGVyIGZvciB0aGlzIHJl
cG8gYXMgW2Jsb2dwb3N0XShodHRwczovL21lZGl1bS5jb20vZGVlcC1odW50
L3RoZS1nYW4tem9vLTc5NTk3ZGM4YzM0NykgYW5kIGZvbGxvdyBtZSBvbiBb
VHdpdHRlcl0oaHR0cHM6Ly93d3cudHdpdHRlci5jb20vaGluZHVwdXJhdmlu
YXNoKS4KCiogM0QtRUQtR0FOIC0gW1NoYXBlIElucGFpbnRpbmcgdXNpbmcg
M0QgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3JrIGFuZCBSZWN1cnJl
bnQgQ29udm9sdXRpb25hbCBOZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcv
YWJzLzE3MTEuMDYzNzUpIAoqIDNELUdBTiAtIFtMZWFybmluZyBhIFByb2Jh
YmlsaXN0aWMgTGF0ZW50IFNwYWNlIG9mIE9iamVjdCBTaGFwZXMgdmlhIDNE
IEdlbmVyYXRpdmUtQWR2ZXJzYXJpYWwgTW9kZWxpbmddKGh0dHBzOi8vYXJ4
aXYub3JnL2Ficy8xNjEwLjA3NTg0KSAoW2dpdGh1Yl0oaHR0cHM6Ly9naXRo
dWIuY29tL3pjazExOS8zZGdhbi1yZWxlYXNlKSkKKiAzRC1JV0dBTiAtIFtJ
bXByb3ZlZCBBZHZlcnNhcmlhbCBTeXN0ZW1zIGZvciAzRCBPYmplY3QgR2Vu
ZXJhdGlvbiBhbmQgUmVjb25zdHJ1Y3Rpb25dKGh0dHBzOi8vYXJ4aXYub3Jn
L2Ficy8xNzA3LjA5NTU3KSAoW2dpdGh1Yl0oaHR0cHM6Ly9naXRodWIuY29t
L0Vkd2FyZFNtaXRoMTg4NC8zRC1JV0dBTikpCiogM0QtUGh5c05ldCAtIFsz
RC1QaHlzTmV0OiBMZWFybmluZyB0aGUgSW50dWl0aXZlIFBoeXNpY3Mgb2Yg
Tm9uLVJpZ2lkIE9iamVjdCBEZWZvcm1hdGlvbnNdKGh0dHBzOi8vYXJ4aXYu
b3JnL2Ficy8xODA1LjAwMzI4KSAKKiAzRC1SZWNHQU4gLSBbM0QgT2JqZWN0
IFJlY29uc3RydWN0aW9uIGZyb20gYSBTaW5nbGUgRGVwdGggVmlldyB3aXRo
IEFkdmVyc2FyaWFsIExlYXJuaW5nXShodHRwczovL2FyeGl2Lm9yZy9hYnMv
MTcwOC4wNzk2OSkgKFtnaXRodWJdKGh0dHBzOi8vZ2l0aHViLmNvbS9ZYW5n
Nzg3OS8zRC1SZWNHQU4pKQoqIEFCQy1HQU4gLSBbQUJDLUdBTjogQWRhcHRp
dmUgQmx1ciBhbmQgQ29udHJvbCBmb3IgaW1wcm92ZWQgdHJhaW5pbmcgc3Rh
YmlsaXR5IG9mIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3NdKGh0
dHBzOi8vZHJpdmUuZ29vZ2xlLmNvbS9maWxlL2QvMEIzd0VQX2xFbDBsYVZU
ZEdjSEUyVm5SaU1sRS92aWV3KSAoW2dpdGh1Yl0oaHR0cHM6Ly9naXRodWIu
Y29tL0lnb3JTdXNtZWxqL0FCQy1HQU4pKQoqIEFCQy1HQU4gLSBbR0FOcyBm
b3IgTElGRTogR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3JrcyBmb3Ig
TGlrZWxpaG9vZCBGcmVlIEluZmVyZW5jZV0oaHR0cHM6Ly9hcnhpdi5vcmcv
YWJzLzE3MTEuMTExMzkpIAoqIEFDLUdBTiAtIFtDb25kaXRpb25hbCBJbWFn
ZSBTeW50aGVzaXMgV2l0aCBBdXhpbGlhcnkgQ2xhc3NpZmllciBHQU5zXSho
dHRwczovL2FyeGl2Lm9yZy9hYnMvMTYxMC4wOTU4NSkgCiogYWNHQU4gLSBb
RmFjZSBBZ2luZyBXaXRoIENvbmRpdGlvbmFsIEdlbmVyYXRpdmUgQWR2ZXJz
YXJpYWwgTmV0d29ya3NdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzAyLjAx
OTgzKSAKKiBBQ0dBTiAtIFtDb3Zlcmxlc3MgSW5mb3JtYXRpb24gSGlkaW5n
IEJhc2VkIG9uIEdlbmVyYXRpdmUgYWR2ZXJzYXJpYWwgbmV0d29ya3NdKGh0
dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzEyLjA2OTUxKSAKKiBhY0dBTiAtIFtP
bi1saW5lIEFkYXB0YXRpdmUgQ3VycmljdWx1bSBMZWFybmluZyBmb3IgR0FO
c10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDguMDAwMjApIAoqIEFDdHVB
TCAtIFtBQ3R1QUw6IEFjdG9yLUNyaXRpYyBVbmRlciBBZHZlcnNhcmlhbCBM
ZWFybmluZ10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MTEuMDQ3NTUpIAoq
IEFkYUdBTiAtIFtBZGFHQU46IEJvb3N0aW5nIEdlbmVyYXRpdmUgTW9kZWxz
XShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwMS4wMjM4NnYxKSAKKiBBZGFw
dGl2ZSBHQU4gLSBbQ3VzdG9taXppbmcgYW4gQWR2ZXJzYXJpYWwgRXhhbXBs
ZSBHZW5lcmF0b3Igd2l0aCBDbGFzcy1Db25kaXRpb25hbCBHQU5zXShodHRw
czovL2FyeGl2Lm9yZy9hYnMvMTgwNi4xMDQ5NikgCiogQWR2RW50dVJlIC0g
W0FkdkVudHVSZTogQWR2ZXJzYXJpYWwgVHJhaW5pbmcgZm9yIFRleHR1YWwg
RW50YWlsbWVudCB3aXRoIEtub3dsZWRnZS1HdWlkZWQgRXhhbXBsZXNdKGh0
dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA1LjA0NjgwKSAKKiBBZHZHQU4gLSBb
R2VuZXJhdGluZyBhZHZlcnNhcmlhbCBleGFtcGxlcyB3aXRoIGFkdmVyc2Fy
aWFsIG5ldHdvcmtzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwMS4wMjYx
MCkgCiogQUUtR0FOIC0gW0FFLUdBTjogYWR2ZXJzYXJpYWwgZWxpbWluYXRp
bmcgd2l0aCBHQU5dKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzA3LjA1NDc0
KSAKKiBBRS1PVCAtIFtMYXRlbnQgU3BhY2UgT3B0aW1hbCBUcmFuc3BvcnQg
Zm9yIEdlbmVyYXRpdmUgTW9kZWxzXShodHRwczovL2FyeGl2Lm9yZy9hYnMv
MTgwOS4wNTk2NCkgCiogQUVHQU4gLSBbTGVhcm5pbmcgSW52ZXJzZSBNYXBw
aW5nIGJ5IEF1dG9lbmNvZGVyIGJhc2VkIEdlbmVyYXRpdmUgQWR2ZXJzYXJp
YWwgTmV0c10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDMuMTAwOTQpIAoq
IEFGLURDR0FOIC0gW0FGLURDR0FOOiBBbXBsaXR1ZGUgRmVhdHVyZSBEZWVw
IENvbnZvbHV0aW9uYWwgR0FOIGZvciBGaW5nZXJwcmludCBDb25zdHJ1Y3Rp
b24gaW4gSW5kb29yIExvY2FsaXphdGlvbiBTeXN0ZW1dKGh0dHBzOi8vYXJ4
aXYub3JnL2Ficy8xODA0LjA1MzQ3KSAKKiBBZmZHQU4gLSBbQW1vcnRpc2Vk
IE1BUCBJbmZlcmVuY2UgZm9yIEltYWdlIFN1cGVyLXJlc29sdXRpb25dKGh0
dHBzOi8vYXJ4aXYub3JnL2Ficy8xNjEwLjA0NDkwKSAKKiBBSU0gLSBbR2Vu
ZXJhdGluZyBJbmZvcm1hdGl2ZSBhbmQgRGl2ZXJzZSBDb252ZXJzYXRpb25h
bCBSZXNwb25zZXMgdmlhIEFkdmVyc2FyaWFsIEluZm9ybWF0aW9uIE1heGlt
aXphdGlvbl0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDkuMDU5NzIpIAoq
IEFMLUNHQU4gLSBbTGVhcm5pbmcgdG8gR2VuZXJhdGUgSW1hZ2VzIG9mIE91
dGRvb3IgU2NlbmVzIGZyb20gQXR0cmlidXRlcyBhbmQgU2VtYW50aWMgTGF5
b3V0c10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE2MTIuMDAyMTUpIAoqIEFM
SSAtIFtBZHZlcnNhcmlhbGx5IExlYXJuZWQgSW5mZXJlbmNlXShodHRwczov
L2FyeGl2Lm9yZy9hYnMvMTYwNi4wMDcwNCkgKFtnaXRodWJdKGh0dHBzOi8v
Z2l0aHViLmNvbS9Jc2htYWVsQmVsZ2hhemkvQUxJKSkKKiBBbGlnbkdBTiAt
IFtBbGlnbkdBTjogTGVhcm5pbmcgdG8gQWxpZ24gQ3Jvc3MtRG9tYWluIElt
YWdlcyB3aXRoIENvbmRpdGlvbmFsIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwg
TmV0d29ya3NdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzA3LjAxNDAwKSAK
KiBBbHBoYUdBTiAtIFtBbHBoYUdBTjogR2VuZXJhdGl2ZSBhZHZlcnNhcmlh
bCBuZXR3b3JrcyBmb3IgbmF0dXJhbCBpbWFnZSBtYXR0aW5nXShodHRwczov
L2FyeGl2Lm9yZy9hYnMvMTgwNy4xMDA4OCkgCiogQU0tR0FOIC0gW0FjdGl2
YXRpb24gTWF4aW1pemF0aW9uIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0
c10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDMuMDIwMDApIAoqIEFtYmll
bnRHQU4gLSBbQW1iaWVudEdBTjogR2VuZXJhdGl2ZSBtb2RlbHMgZnJvbSBs
b3NzeSBtZWFzdXJlbWVudHNdKGh0dHBzOi8vb3BlbnJldmlldy5uZXQvZm9y
dW0/aWQ9SHk3ZkRvZzBiKSAoW2dpdGh1Yl0oaHR0cHM6Ly9naXRodWIuY29t
L0FzaGlzaEJvcmEvYW1iaWVudC1nYW4pKQoqIEFNQy1HQU4gLSBbVmlkZW8g
UHJlZGljdGlvbiB3aXRoIEFwcGVhcmFuY2UgYW5kIE1vdGlvbiBDb25kaXRp
b25zXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwNy4wMjYzNSkgCiogQW5v
R0FOIC0gW1Vuc3VwZXJ2aXNlZCBBbm9tYWx5IERldGVjdGlvbiB3aXRoIEdl
bmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3MgdG8gR3VpZGUgTWFya2Vy
IERpc2NvdmVyeV0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDMuMDU5MjF2
MSkgCiogQVBEIC0gW0FkdmVyc2FyaWFsIERpc3RpbGxhdGlvbiBvZiBCYXll
c2lhbiBOZXVyYWwgTmV0d29yayBQb3N0ZXJpb3JzXShodHRwczovL2FyeGl2
Lm9yZy9hYnMvMTgwNi4xMDMxNykgCiogQVBFLUdBTiAtIFtBUEUtR0FOOiBB
ZHZlcnNhcmlhbCBQZXJ0dXJiYXRpb24gRWxpbWluYXRpb24gd2l0aCBHQU5d
KGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzA3LjA1NDc0KSAKKiBBUkFFIC0g
W0FkdmVyc2FyaWFsbHkgUmVndWxhcml6ZWQgQXV0b2VuY29kZXJzIGZvciBH
ZW5lcmF0aW5nIERpc2NyZXRlIFN0cnVjdHVyZXNdKGh0dHBzOi8vYXJ4aXYu
b3JnL2Ficy8xNzA2LjA0MjIzKSAoW2dpdGh1Yl0oaHR0cHM6Ly9naXRodWIu
Y29tL2pha2V6aGFvamIvQVJBRSkpCiogQVJEQSAtIFtBZHZlcnNhcmlhbCBS
ZXByZXNlbnRhdGlvbiBMZWFybmluZyBmb3IgRG9tYWluIEFkYXB0YXRpb25d
KGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzA3LjAxMjE3KSAKKiBBUklHQU4g
LSBbQVJJR0FOOiBTeW50aGV0aWMgQXJhYmlkb3BzaXMgUGxhbnRzIHVzaW5n
IEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya10oaHR0cHM6Ly9hcnhp
di5vcmcvYWJzLzE3MDkuMDA5MzgpIAoqIEFydEdBTiAtIFtBcnRHQU46IEFy
dHdvcmsgU3ludGhlc2lzIHdpdGggQ29uZGl0aW9uYWwgQ2F0ZWdvcmlhbCBH
QU5zXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwMi4wMzQxMCkgCiogQVNE
TC1HQU4gLSBbQXV0b21hdGljIFN0ZWdhbm9ncmFwaGljIERpc3RvcnRpb24g
TGVhcm5pbmcgVXNpbmcgYSBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdv
cmtdKGh0dHBzOi8vaWVlZXhwbG9yZS5pZWVlLm9yZy9kb2N1bWVudC84MDE3
NDMwLykgCiogQVRBLUdBTiAtIFtBdHRlbnRpb24tQXdhcmUgR2VuZXJhdGl2
ZSBBZHZlcnNhcmlhbCBOZXR3b3JrcyAoQVRBLUdBTnMpXShodHRwczovL2Fy
eGl2Lm9yZy9hYnMvMTgwMi4wOTA3MCkgCiogQXR0ZW50aW9uLUdBTiAtIFtB
dHRlbnRpb24tR0FOIGZvciBPYmplY3QgVHJhbnNmaWd1cmF0aW9uIGluIFdp
bGQgSW1hZ2VzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwMy4wNjc5OCkg
CiogQXR0R0FOIC0gW0FyYml0cmFyeSBGYWNpYWwgQXR0cmlidXRlIEVkaXRp
bmc6IE9ubHkgQ2hhbmdlIFdoYXQgWW91IFdhbnRdKGh0dHBzOi8vYXJ4aXYu
b3JnL2Ficy8xNzExLjEwNjc4KSAoW2dpdGh1Yl0oaHR0cHM6Ly9naXRodWIu
Y29tL0x5bm5Iby9BdHRHQU4tVGVuc29yZmxvdykpCiogQXR0bkdBTiAtIFtB
dHRuR0FOOiBGaW5lLUdyYWluZWQgVGV4dCB0byBJbWFnZSBHZW5lcmF0aW9u
IHdpdGggQXR0ZW50aW9uYWwgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3
b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MTEuMTA0ODUpIChbZ2l0
aHViXShodHRwczovL2dpdGh1Yi5jb20vdGFveHVnaXQvQXR0bkdBTikpCiog
QVZJRCAtIFtBVklEOiBBZHZlcnNhcmlhbCBWaXN1YWwgSXJyZWd1bGFyaXR5
IERldGVjdGlvbl0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDUuMDk1MjEp
IAoqIEItRENHQU4gLSBbQi1EQ0dBTjpFdmFsdWF0aW9uIG9mIEJpbmFyaXpl
ZCBEQ0dBTiBmb3IgRlBHQV0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDMu
MTA5MzApIAoqIGItR0FOIC0gW0dlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0
cyBmcm9tIGEgRGVuc2l0eSBSYXRpbyBFc3RpbWF0aW9uIFBlcnNwZWN0aXZl
XShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTYxMC4wMjkyMCkgCiogQkFHQU4g
LSBbQkFHQU46IERhdGEgQXVnbWVudGF0aW9uIHdpdGggQmFsYW5jaW5nIEdB
Tl0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDMuMDk2NTUpIAoqIEJheWVz
aWFuIEdBTiAtIFtEZWVwIGFuZCBIaWVyYXJjaGljYWwgSW1wbGljaXQgTW9k
ZWxzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwMi4wODg5NikgCiogQmF5
ZXNpYW4gR0FOIC0gW0JheWVzaWFuIEdBTl0oaHR0cHM6Ly9hcnhpdi5vcmcv
YWJzLzE3MDUuMDk1NTgpIChbZ2l0aHViXShodHRwczovL2dpdGh1Yi5jb20v
YW5kcmV3Z29yZG9ud2lsc29uL2JheWVzZ2FuLykpCiogQkNHQU4gLSBbQmF5
ZXNpYW4gQ29uZGl0aW9uYWwgR2VuZXJhdGl2ZSBBZHZlcnNlcmlhbCBOZXR3
b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDYuMDU0NzcpIAoqIEJD
R0FOIC0gW0JpZGlyZWN0aW9uYWwgQ29uZGl0aW9uYWwgR2VuZXJhdGl2ZSBB
ZHZlcnNhcmlhbCBuZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3
MTEuMDc0NjEpIAoqIEJFQU0gLSBbQm9sdHptYW5uIEVuY29kZWQgQWR2ZXJz
YXJpYWwgTWFjaGluZXNdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA0LjA4
NjgyKSAKKiBCRUdBTiAtIFtCRUdBTjogQm91bmRhcnkgRXF1aWxpYnJpdW0g
R2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3Jrc10oaHR0cHM6Ly9hcnhp
di5vcmcvYWJzLzE3MDMuMTA3MTcpIAoqIEJFR0FOLUNTIC0gW0VzY2FwaW5n
IGZyb20gQ29sbGFwc2luZyBNb2RlcyBpbiBhIENvbnN0cmFpbmVkIFNwYWNl
XShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwOC4wNzI1OCkgCiogQmVsbG1h
biBHQU4gLSBbRGlzdHJpYnV0aW9uYWwgTXVsdGl2YXJpYXRlIFBvbGljeSBF
dmFsdWF0aW9uIGFuZCBFeHBsb3JhdGlvbiB3aXRoIHRoZSBCZWxsbWFuIEdB
Tl0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDguMDE5NjApIAoqIEJHQU4g
LSBbQmluYXJ5IEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3MgZm9y
IEltYWdlIFJldHJpZXZhbF0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDgu
MDQxNTApIChbZ2l0aHViXShodHRwczovL2dpdGh1Yi5jb20vaHRjb25xdWVy
L0JHQU4pKQoqIEJpLUdBTiAtIFtBdXRvbm9tb3VzbHkgYW5kIFNpbXVsdGFu
ZW91c2x5IFJlZmluaW5nIERlZXAgTmV1cmFsIE5ldHdvcmsgUGFyYW1ldGVy
cyBieSBhIEJpLUdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29yayBBaWRl
ZCBHZW5ldGljIEFsZ29yaXRobV0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4
MDkuMTAyNDQpIAoqIEJpY3ljbGVHQU4gLSBbVG93YXJkIE11bHRpbW9kYWwg
SW1hZ2UtdG8tSW1hZ2UgVHJhbnNsYXRpb25dKGh0dHBzOi8vYXJ4aXYub3Jn
L2Ficy8xNzExLjExNTg2KSAoW2dpdGh1Yl0oaHR0cHM6Ly9naXRodWIuY29t
L2p1bnlhbnovQmljeWNsZUdBTikpCiogQmlHQU4gLSBbQWR2ZXJzYXJpYWwg
RmVhdHVyZSBMZWFybmluZ10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE2MDUu
MDk3ODJ2NykgCiogQmluR0FOIC0gW0JpbkdBTjogTGVhcm5pbmcgQ29tcGFj
dCBCaW5hcnkgRGVzY3JpcHRvcnMgd2l0aCBhIFJlZ3VsYXJpemVkIEdBTl0o
aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDYuMDY3NzgpIAoqIEJvdXJHQU4g
LSBbQm91ckdBTjogR2VuZXJhdGl2ZSBOZXR3b3JrcyB3aXRoIE1ldHJpYyBF
bWJlZGRpbmdzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwNS4wNzY3NCkg
CiogQnJhbmNoR0FOIC0gW0JyYW5jaGVkIEdlbmVyYXRpdmUgQWR2ZXJzYXJp
YWwgTmV0d29ya3MgZm9yIE11bHRpLVNjYWxlIEltYWdlIE1hbmlmb2xkIExl
YXJuaW5nXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwMy4wODQ2NykgCiog
QlJFIC0gW0ltcHJvdmluZyBHQU4gVHJhaW5pbmcgdmlhIEJpbmFyaXplZCBS
ZXByZXNlbnRhdGlvbiBFbnRyb3B5IChCUkUpIFJlZ3VsYXJpemF0aW9uXSho
dHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwNS4wMzY0NCkgKFtnaXRodWJdKGh0
dHBzOi8vZ2l0aHViLmNvbS9Cb3JlYWxpc0FJL2JyZS1nYW4pKQoqIEJyaWRn
ZUdBTiAtIFtHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIEZyb250YWwgVmlldyB0
byBCaXJkIFZpZXcgU3ludGhlc2lzXShodHRwczovL2FyeGl2Lm9yZy9hYnMv
MTgwOC4wMDMyNykgCiogQlMtR0FOIC0gW0JvdW5kYXJ5LVNlZWtpbmcgR2Vu
ZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5v
cmcvYWJzLzE3MDIuMDg0MzF2MSkgCiogQnViR0FOIC0gW0J1YkdBTjogQnVi
YmxlIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3MgZm9yIFN5bnRo
ZXNpemluZyBSZWFsaXN0aWMgQnViYmx5IEZsb3cgSW1hZ2VzXShodHRwczov
L2FyeGl2Lm9yZy9hYnMvMTgwOS4wMjI2NikgCiogQldHQU4gLSBbQmFuYWNo
IFdhc3NlcnN0ZWluIEdBTl0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDYu
MDY2MjEpIAoqIEMtR0FOICAtIFtGYWNlIEFnaW5nIHdpdGggQ29udGV4dHVh
bCBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHMgXShodHRwczovL2FyeGl2
Lm9yZy9hYnMvMTgwMi4wMDIzNyApIAoqIEMtUk5OLUdBTiAtIFtDLVJOTi1H
QU46IENvbnRpbnVvdXMgcmVjdXJyZW50IG5ldXJhbCBuZXR3b3JrcyB3aXRo
IGFkdmVyc2FyaWFsIHRyYWluaW5nXShodHRwczovL2FyeGl2Lm9yZy9hYnMv
MTYxMS4wOTkwNCkgKFtnaXRodWJdKGh0dHBzOi8vZ2l0aHViLmNvbS9vbG9m
bW9ncmVuL2Mtcm5uLWdhbi8pKQoqIENBLUdBTiAtIFtDb21wb3NpdGlvbi1h
aWRlZCBTa2V0Y2gtcmVhbGlzdGljIFBvcnRyYWl0IEdlbmVyYXRpb25dKGh0
dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzEyLjAwODk5KSAKKiBDYWxvR0FOIC0g
W0NhbG9HQU46IFNpbXVsYXRpbmcgM0QgSGlnaCBFbmVyZ3kgUGFydGljbGUg
U2hvd2VycyBpbiBNdWx0aS1MYXllciBFbGVjdHJvbWFnbmV0aWMgQ2Fsb3Jp
bWV0ZXJzIHdpdGggR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3Jrc10o
aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDUuMDIzNTUpIChbZ2l0aHViXSho
dHRwczovL2dpdGh1Yi5jb20vaGVwLWxiZGwvQ2Fsb0dBTikpCiogQ0FOIC0g
W0NBTjogQ3JlYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3MsIEdlbmVyYXRp
bmcgQXJ0IGJ5IExlYXJuaW5nIEFib3V0IFN0eWxlcyBhbmQgRGV2aWF0aW5n
IGZyb20gU3R5bGUgTm9ybXNdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzA2
LjA3MDY4KSAKKiBDYXBzR0FOIC0gW0NhcHNHQU46IFVzaW5nIER5bmFtaWMg
Um91dGluZyBmb3IgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3Jrc10o
aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDYuMDM5NjgpIAoqIENhcHN1bGVH
QU4gLSBbQ2Fwc3VsZUdBTjogR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBDYXBz
dWxlIE5ldHdvcmsgXShodHRwOi8vYXJ4aXYub3JnL2Ficy8xODAyLjA2MTY3
KSAKKiBDYXRHQU4gLSBbVW5zdXBlcnZpc2VkIGFuZCBTZW1pLXN1cGVydmlz
ZWQgTGVhcm5pbmcgd2l0aCBDYXRlZ29yaWNhbCBHZW5lcmF0aXZlIEFkdmVy
c2FyaWFsIE5ldHdvcmtzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTUxMS4w
NjM5MHYyKSAKKiBDYXRHQU4gLSBbQ2F0R0FOOiBDb3VwbGVkIEFkdmVyc2Fy
aWFsIFRyYW5zZmVyIGZvciBEb21haW4gR2VuZXJhdGlvbl0oaHR0cHM6Ly9h
cnhpdi5vcmcvYWJzLzE3MTEuMDg5MDQpIAoqIENhdXNhbEdBTiAtIFtDYXVz
YWxHQU46IExlYXJuaW5nIENhdXNhbCBJbXBsaWNpdCBHZW5lcmF0aXZlIE1v
ZGVscyB3aXRoIEFkdmVyc2FyaWFsIFRyYWluaW5nXShodHRwczovL2FyeGl2
Lm9yZy9hYnMvMTcwOS4wMjAyMykgCiogQ0MtR0FOIC0gW1NlbWktU3VwZXJ2
aXNlZCBMZWFybmluZyB3aXRoIENvbnRleHQtQ29uZGl0aW9uYWwgR2VuZXJh
dGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcv
YWJzLzE2MTEuMDY0MzApIChbZ2l0aHViXShodHRwczovL2dpdGh1Yi5jb20v
ZWRlbnRvbi9jYy1nYW4pKQoqIGNkLUdBTiAtIFtDb25kaXRpb25hbCBJbWFn
ZS10by1JbWFnZSBUcmFuc2xhdGlvbl0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJz
LzE4MDUuMDAyNTEpIAoqIENEY0dBTiAtIFtTaW11bHRhbmVvdXNseSBDb2xv
ci1EZXB0aCBTdXBlci1SZXNvbHV0aW9uIHdpdGggQ29uZGl0aW9uYWwgR2Vu
ZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3JrXShodHRwczovL2FyeGl2Lm9y
Zy9hYnMvMTcwOC4wOTEwNSkgCiogQ0UtR0FOIC0gW0RlZXAgTGVhcm5pbmcg
Zm9yIEltYmFsYW5jZSBEYXRhIENsYXNzaWZpY2F0aW9uIHVzaW5nIENsYXNz
IEV4cGVydCBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmtdKGh0dHBz
Oi8vYXJ4aXYub3JnL2Ficy8xODA3LjA0NTg1KSAKKiBDRkctR0FOIC0gW0Nv
bXBvc2l0ZSBGdW5jdGlvbmFsIEdyYWRpZW50IExlYXJuaW5nIG9mIEdlbmVy
YXRpdmUgQWR2ZXJzYXJpYWwgTW9kZWxzXShodHRwczovL2FyeGl2Lm9yZy9h
YnMvMTgwMS4wNjMwOSkgCiogQ0dBTiAtIFtDb25kaXRpb25hbCBHZW5lcmF0
aXZlIEFkdmVyc2FyaWFsIE5ldHNdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8x
NDExLjE3ODQpIAoqIENHQU4gLSBbQ29udHJvbGxhYmxlIEdlbmVyYXRpdmUg
QWR2ZXJzYXJpYWwgTmV0d29ya10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3
MDguMDA1OTgpIAoqIENoZWtob3YgR0FOIC0gW0FuIE9ubGluZSBMZWFybmlu
ZyBBcHByb2FjaCB0byBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmtz
XShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwNi4wMzI2OSkgCiogY2lHQU4g
LSBbQ29uZGl0aW9uYWwgSW5maWxsaW5nIEdBTnMgZm9yIERhdGEgQXVnbWVu
dGF0aW9uIGluIE1hbW1vZ3JhbSBDbGFzc2lmaWNhdGlvbl0oaHR0cHM6Ly9h
cnhpdi5vcmcvYWJzLzE4MDcuMDgwOTMpIAoqIENpbkNHQU4gLSBbVW5zdXBl
cnZpc2VkIEltYWdlIFN1cGVyLVJlc29sdXRpb24gdXNpbmcgQ3ljbGUtaW4t
Q3ljbGUgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3Jrc10oaHR0cHM6
Ly9hcnhpdi5vcmcvYWJzLzE4MDkuMDA0MzcpIAoqIENpcGhlckdBTiAtIFtV
bnN1cGVydmlzZWQgQ2lwaGVyIENyYWNraW5nIFVzaW5nIERpc2NyZXRlIEdB
TnNdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODAxLjA0ODgzKSAKKiBDbHVz
dGVyR0FOIC0gW0NsdXN0ZXJHQU4gOiBMYXRlbnQgU3BhY2UgQ2x1c3Rlcmlu
ZyBpbiBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmtzXShodHRwczov
L2FyeGl2Lm9yZy9hYnMvMTgwOS4wMzYyNykgCiogQ00tR0FOIC0gW0NNLUdB
TnM6IENyb3NzLW1vZGFsIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29y
a3MgZm9yIENvbW1vbiBSZXByZXNlbnRhdGlvbiBMZWFybmluZ10oaHR0cHM6
Ly9hcnhpdi5vcmcvYWJzLzE3MTAuMDUxMDYpIAoqIENvQXR0LUdBTiAtIFtB
cmUgWW91IFRhbGtpbmcgdG8gTWU/IFJlYXNvbmVkIFZpc3VhbCBEaWFsb2cg
R2VuZXJhdGlvbiB0aHJvdWdoIEFkdmVyc2FyaWFsIExlYXJuaW5nXShodHRw
czovL2FyeGl2Lm9yZy9hYnMvMTcxMS4wNzYxMykgCiogQ29HQU4gLSBbQ291
cGxlZCBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmtzXShodHRwczov
L2FyeGl2Lm9yZy9hYnMvMTYwNi4wNzUzNnYyKSAKKiBDb21ib0dBTiAtIFtD
b21ib0dBTjogVW5yZXN0cmFpbmVkIFNjYWxhYmlsaXR5IGZvciBJbWFnZSBE
b21haW4gVHJhbnNsYXRpb25dKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzEy
LjA2OTA5KSAoW2dpdGh1Yl0oaHR0cHM6Ly9naXRodWIuY29tL0FBbm9vc2hl
aC9Db21ib0dBTikpCiogQ29uY2VwdEdBTiAtIFtMZWFybmluZyBDb21wb3Np
dGlvbmFsIFZpc3VhbCBDb25jZXB0cyB3aXRoIE11dHVhbCBDb25zaXN0ZW5j
eV0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MTEuMDYxNDgpIAoqIENvbmRp
dGlvbmFsIGN5Y2xlR0FOIC0gW0NvbmRpdGlvbmFsIEN5Y2xlR0FOIGZvciBB
dHRyaWJ1dGUgR3VpZGVkIEZhY2UgSW1hZ2UgR2VuZXJhdGlvbl0oaHR0cHM6
Ly9hcnhpdi5vcmcvYWJzLzE3MDUuMDk5NjYpIAoqIGNvbnN0cmFzdC1HQU4g
LSBbR2VuZXJhdGl2ZSBTZW1hbnRpYyBNYW5pcHVsYXRpb24gd2l0aCBDb250
cmFzdGluZyBHQU5dKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzA4LjAwMzE1
KSAKKiBDb250ZXh0LVJOTi1HQU4gLSBbQ29udGV4dHVhbCBSTk4tR0FOcyBm
b3IgQWJzdHJhY3QgUmVhc29uaW5nIERpYWdyYW0gR2VuZXJhdGlvbl0oaHR0
cHM6Ly9hcnhpdi5vcmcvYWJzLzE2MDkuMDk0NDQpIAoqIENvcnJHQU4gLSBb
Q29ycmVsYXRlZCBkaXNjcmV0ZSBkYXRhIGdlbmVyYXRpb24gdXNpbmcgYWR2
ZXJzYXJpYWwgdHJhaW5pbmddKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA0
LjAwOTI1KSAKKiBDb3Vsb21iIEdBTiAtIFtDb3Vsb21iIEdBTnM6IFByb3Zh
Ymx5IE9wdGltYWwgTmFzaCBFcXVpbGlicmlhIHZpYSBQb3RlbnRpYWwgRmll
bGRzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwOC4wODgxOSkgCiogQ292
ZXItR0FOIC0gW0dlbmVyYXRpdmUgU3RlZ2Fub2dyYXBoeSB3aXRoIEtlcmNr
aG9mZnMnIFByaW5jaXBsZSBiYXNlZCBvbiBHZW5lcmF0aXZlIEFkdmVyc2Fy
aWFsIE5ldHdvcmtzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcxMS4wNDkx
NikgCiogY293Ym95IC0gW0RlZmVuZGluZyBBZ2FpbnN0IEFkdmVyc2FyaWFs
IEF0dGFja3MgYnkgTGV2ZXJhZ2luZyBhbiBFbnRpcmUgR0FOXShodHRwczov
L2FyeGl2Lm9yZy9hYnMvMTgwNS4xMDY1MikgCiogQ1ItR0FOIC0gW0NSLUdB
TjogTGVhcm5pbmcgQ29tcGxldGUgUmVwcmVzZW50YXRpb25zIGZvciBNdWx0
aS12aWV3IEdlbmVyYXRpb25dKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA2
LjExMTkxKSAKKiBDcmFtw6hyIEdBTiAgLSBbVGhlIENyYW1lciBEaXN0YW5j
ZSBhcyBhIFNvbHV0aW9uIHRvIEJpYXNlZCBXYXNzZXJzdGVpbiBHcmFkaWVu
dHNdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzA1LjEwNzQzKSAKKiBDcm9z
cy1HQU4gLSBbQ3Jvc3NpbmcgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3
b3JrcyBmb3IgQ3Jvc3MtVmlldyBQZXJzb24gUmUtaWRlbnRpZmljYXRpb25d
KGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODAxLjAxNzYwKSAKKiBjclZBRS1H
QU4gLSBbQ2hhbm5lbC1SZWN1cnJlbnQgVmFyaWF0aW9uYWwgQXV0b2VuY29k
ZXJzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwNi4wMzcyOSkgCiogQ1Mt
R0FOIC0gW0ltcHJvdmluZyBOZXVyYWwgTWFjaGluZSBUcmFuc2xhdGlvbiB3
aXRoIENvbmRpdGlvbmFsIFNlcXVlbmNlIEdlbmVyYXRpdmUgQWR2ZXJzYXJp
YWwgTmV0c10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDMuMDQ4ODcpIAoq
IENTRyAtIFtTcGVlY2gtRHJpdmVuIEV4cHJlc3NpdmUgVGFsa2luZyBMaXBz
IHdpdGggQ29uZGl0aW9uYWwgU2VxdWVudGlhbCBHZW5lcmF0aXZlIEFkdmVy
c2FyaWFsIE5ldHdvcmtzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwNi4w
MDE1NCkgCiogQ1QtR0FOIC0gW0NULUdBTjogQ29uZGl0aW9uYWwgVHJhbnNm
b3JtYXRpb24gR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3JrIGZvciBJ
bWFnZSBBdHRyaWJ1dGUgTW9kaWZpY2F0aW9uXShodHRwczovL2FyeGl2Lm9y
Zy9hYnMvMTgwNy4wNDgxMikgCiogQ1ZBRS1HQU4gLSBbQ1ZBRS1HQU46IEZp
bmUtR3JhaW5lZCBJbWFnZSBHZW5lcmF0aW9uIHRocm91Z2ggQXN5bW1ldHJp
YyBUcmFpbmluZ10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDMuMTAxNTUp
IAoqIEN5Y2xlR0FOIC0gW1VucGFpcmVkIEltYWdlLXRvLUltYWdlIFRyYW5z
bGF0aW9uIHVzaW5nIEN5Y2xlLUNvbnNpc3RlbnQgQWR2ZXJzYXJpYWwgTmV0
d29ya3NdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzAzLjEwNTkzKSAoW2dp
dGh1Yl0oaHR0cHM6Ly9naXRodWIuY29tL2p1bnlhbnovQ3ljbGVHQU4pKQoq
IEQtR0FOIC0gW0RpZmZlcmVudGlhbCBHZW5lcmF0aXZlIEFkdmVyc2FyaWFs
IE5ldHdvcmtzOiBTeW50aGVzaXppbmcgTm9uLWxpbmVhciBGYWNpYWwgVmFy
aWF0aW9ucyB3aXRoIExpbWl0ZWQgTnVtYmVyIG9mIFRyYWluaW5nIERhdGFd
KGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzExLjEwMjY3KSAKKiBELVdDR0FO
IC0gW0ktdmVjdG9yIFRyYW5zZm9ybWF0aW9uIFVzaW5nIENvbmRpdGlvbmFs
IEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3MgZm9yIFNob3J0IFV0
dGVyYW5jZSBTcGVha2VyIFZlcmlmaWNhdGlvbl0oaHR0cHM6Ly9hcnhpdi5v
cmcvYWJzLzE4MDQuMDAyOTApIAoqIEQyR0FOIC0gW0R1YWwgRGlzY3JpbWlu
YXRvciBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHNdKGh0dHA6Ly9hcnhp
di5vcmcvYWJzLzE3MDkuMDM4MzEpIAoqIEQySUEtR0FOIC0gW1RhZ2dpbmcg
bGlrZSBIdW1hbnM6IERpdmVyc2UgYW5kIERpc3RpbmN0IEltYWdlIEFubm90
YXRpb25dKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA0LjAwMTEzKSAKKiBE
QS1HQU4gIC0gW0RBLUdBTjogSW5zdGFuY2UtbGV2ZWwgSW1hZ2UgVHJhbnNs
YXRpb24gYnkgRGVlcCBBdHRlbnRpb24gR2VuZXJhdGl2ZSBBZHZlcnNhcmlh
bCBOZXR3b3JrcyAod2l0aCBTdXBwbGVtZW50YXJ5IE1hdGVyaWFscyldKGh0
dHA6Ly9hcnhpdi5vcmcvYWJzLzE4MDIuMDY0NTQpIAoqIERBREEgLSBbREFE
QTogRGVlcCBBZHZlcnNhcmlhbCBEYXRhIEF1Z21lbnRhdGlvbiBmb3IgRXh0
cmVtZWx5IExvdyBEYXRhIFJlZ2ltZSBDbGFzc2lmaWNhdGlvbl0oaHR0cHM6
Ly9hcnhpdi5vcmcvYWJzLzE4MDkuMDA5ODEpIAoqIERBR0FOIC0gW0RhdGEg
QXVnbWVudGF0aW9uIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3Nd
KGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzExLjA0MzQwKSAKKiBEQU4gLSBb
RGlzdHJpYnV0aW9uYWwgQWR2ZXJzYXJpYWwgTmV0d29ya3NdKGh0dHBzOi8v
YXJ4aXYub3JnL2Ficy8xNzA2LjA5NTQ5KSAKKiBEQkxSR0FOIC0gW0FkdmVy
c2FyaWFsIFNwYXRpby1UZW1wb3JhbCBMZWFybmluZyBmb3IgVmlkZW8gRGVi
bHVycmluZ10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDQuMDA1MzMpIAoq
IERDR0FOIC0gW1Vuc3VwZXJ2aXNlZCBSZXByZXNlbnRhdGlvbiBMZWFybmlu
ZyB3aXRoIERlZXAgQ29udm9sdXRpb25hbCBHZW5lcmF0aXZlIEFkdmVyc2Fy
aWFsIE5ldHdvcmtzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTUxMS4wNjQz
NCkgKFtnaXRodWJdKGh0dHBzOi8vZ2l0aHViLmNvbS9OZXdtdS9kY2dhbl9j
b2RlKSkKKiBERS1HQU4gLSBbR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3
b3JrcyB3aXRoIERlY29kZXItRW5jb2RlciBPdXRwdXQgTm9pc2VdKGh0dHBz
Oi8vYXJ4aXYub3JnL2Ficy8xODA3LjAzOTIzKSAKKiBEZWJsdXJHQU4gLSBb
RGVibHVyR0FOOiBCbGluZCBNb3Rpb24gRGVibHVycmluZyBVc2luZyBDb25k
aXRpb25hbCBBZHZlcnNhcmlhbCBOZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5v
cmcvYWJzLzE3MTEuMDcwNjQpIChbZ2l0aHViXShodHRwczovL2dpdGh1Yi5j
b20vS3VweW5PcmVzdC9EZWJsdXJHQU4pKQoqIERlZXBGRCAtIFtMZWFybmlu
ZyB0byBEZXRlY3QgRmFrZSBGYWNlIEltYWdlcyBpbiB0aGUgV2lsZF0oaHR0
cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDkuMDg3NTQpIAoqIERlZmVuc2UtR0FO
IC0gW0RlZmVuc2UtR0FOOiBQcm90ZWN0aW5nIENsYXNzaWZpZXJzIEFnYWlu
c3QgQWR2ZXJzYXJpYWwgQXR0YWNrcyBVc2luZyBHZW5lcmF0aXZlIE1vZGVs
cyBdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA1LjA2NjA1ICkgKFtnaXRo
dWJdKGh0dHBzOi8vZ2l0aHViLmNvbS9rYWJrYWJtL2RlZmVuc2VnYW4pKQoq
IERlZm8tTmV0IC0gW0RlZm8tTmV0OiBMZWFybmluZyBCb2R5IERlZm9ybWF0
aW9uIHVzaW5nIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3NdKGh0
dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA0LjA1OTI4KSAKKiBEZWxpR0FOIC0g
W0RlTGlHQU4gOiBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmtzIGZv
ciBEaXZlcnNlIGFuZCBMaW1pdGVkIERhdGFdKGh0dHBzOi8vYXJ4aXYub3Jn
L2Ficy8xNzA2LjAyMDcxKSAoW2dpdGh1Yl0oaHR0cHM6Ly9naXRodWIuY29t
L3ZhbC1paXNjL2RlbGlnYW4pKQoqIERGLUdBTiAtIFtMZWFybmluZyBEaXNl
bnRhbmdsaW5nIGFuZCBGdXNpbmcgTmV0d29ya3MgZm9yIEZhY2UgQ29tcGxl
dGlvbiBVbmRlciBTdHJ1Y3R1cmVkIE9jY2x1c2lvbnNdKGh0dHBzOi8vYXJ4
aXYub3JnL2Ficy8xNzEyLjA0NjQ2KSAKKiBEaWFsb2dXQUUgLSBbRGlhbG9n
V0FFOiBNdWx0aW1vZGFsIFJlc3BvbnNlIEdlbmVyYXRpb24gd2l0aCBDb25k
aXRpb25hbCBXYXNzZXJzdGVpbiBBdXRvLUVuY29kZXJdKGh0dHBzOi8vYXJ4
aXYub3JnL2Ficy8xODA1LjEyMzUyKSAKKiBEaXNjb0dBTiAtIFtMZWFybmlu
ZyB0byBEaXNjb3ZlciBDcm9zcy1Eb21haW4gUmVsYXRpb25zIHdpdGggR2Vu
ZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5v
cmcvYWJzLzE3MDMuMDUxOTJ2MSkgCiogRGlzdGFuY2VHQU4gLSBbT25lLVNp
ZGVkIFVuc3VwZXJ2aXNlZCBEb21haW4gTWFwcGluZ10oaHR0cHM6Ly9hcnhp
di5vcmcvYWJzLzE3MDYuMDA4MjYpIAoqIERNLUdBTiAtIFtEdWFsIE1vdGlv
biBHQU4gZm9yIEZ1dHVyZS1GbG93IEVtYmVkZGVkIFZpZGVvIFByZWRpY3Rp
b25dKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzA4LjAwMjg0KSAKKiBETUdB
TiAtIFtEaXNjb25uZWN0ZWQgTWFuaWZvbGQgTGVhcm5pbmcgZm9yIEdlbmVy
YXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3NdKGh0dHBzOi8vYXJ4aXYub3Jn
L2Ficy8xODA2LjAwODgwKSAKKiBETkEtR0FOIC0gW0ROQS1HQU46IExlYXJu
aW5nIERpc2VudGFuZ2xlZCBSZXByZXNlbnRhdGlvbnMgZnJvbSBNdWx0aS1B
dHRyaWJ1dGUgSW1hZ2VzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcxMS4w
NTQxNSkgCiogRE9QSU5HIC0gW0RPUElORzogR2VuZXJhdGl2ZSBEYXRhIEF1
Z21lbnRhdGlvbiBmb3IgVW5zdXBlcnZpc2VkIEFub21hbHkgRGV0ZWN0aW9u
IHdpdGggR0FOXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwOC4wNzYzMikg
CiogZHAtR0FOIC0gW0RpZmZlcmVudGlhbGx5IFByaXZhdGUgUmVsZWFzaW5n
IHZpYSBEZWVwIEdlbmVyYXRpdmUgTW9kZWxdKGh0dHBzOi8vYXJ4aXYub3Jn
L2Ficy8xODAxLjAxNTk0KSAKKiBEUC1HQU4gLSBbRFAtR0FOOiBEaXZlcnNp
dHktUHJvbW90aW5nIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29yayBm
b3IgR2VuZXJhdGluZyBJbmZvcm1hdGl2ZSBhbmQgRGl2ZXJzaWZpZWQgVGV4
dCBdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODAyLjAxMzQ1ICkgCiogRFBH
QU4gIC0gW0RpZmZlcmVudGlhbGx5IFByaXZhdGUgR2VuZXJhdGl2ZSBBZHZl
cnNhcmlhbCBOZXR3b3JrIF0oaHR0cDovL2FyeGl2Lm9yZy9hYnMvMTgwMi4w
NjczOSkgCiogRFItR0FOIC0gW1JlcHJlc2VudGF0aW9uIExlYXJuaW5nIGJ5
IFJvdGF0aW5nIFlvdXIgRmFjZXNdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8x
NzA1LjExMTM2KSAKKiBEUkFHQU4gLSBbSG93IHRvIFRyYWluIFlvdXIgRFJB
R0FOXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwNS4wNzIxNSkgKFtnaXRo
dWJdKGh0dHBzOi8vZ2l0aHViLmNvbS9rb2RhbGluYXZlZW4zL0RSQUdBTikp
CiogRHJvcG91dC1HQU4gLSBbRHJvcG91dC1HQU46IExlYXJuaW5nIGZyb20g
YSBEeW5hbWljIEVuc2VtYmxlIG9mIERpc2NyaW1pbmF0b3JzXShodHRwczov
L2FyeGl2Lm9yZy9hYnMvMTgwNy4xMTM0NikgCiogRFJQQU4gLSBbRGlzY3Jp
bWluYXRpdmUgUmVnaW9uIFByb3Bvc2FsIEFkdmVyc2FyaWFsIE5ldHdvcmtz
IGZvciBIaWdoLVF1YWxpdHkgSW1hZ2UtdG8tSW1hZ2UgVHJhbnNsYXRpb25d
KGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzExLjA5NTU0KSAKKiBEU0gtR0FO
IC0gW0RlZXAgU2VtYW50aWMgSGFzaGluZyB3aXRoIEdlbmVyYXRpdmUgQWR2
ZXJzYXJpYWwgTmV0d29ya3NdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA0
LjA4Mjc1KSAKKiBEU1AtR0FOIC0gW0RlcHRoIFN0cnVjdHVyZSBQcmVzZXJ2
aW5nIFNjZW5lIEltYWdlIEdlbmVyYXRpb25dKGh0dHBzOi8vYXJ4aXYub3Jn
L2Ficy8xNzA2LjAwMjEyKSAKKiBEVExDLUdBTiAtIFtHZW5lcmF0aXZlIEFk
dmVyc2FyaWFsIEltYWdlIFN5bnRoZXNpcyB3aXRoIERlY2lzaW9uIFRyZWUg
TGF0ZW50IENvbnRyb2xsZXJdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA1
LjEwNjAzKSAKKiBEVE4gLSBbVW5zdXBlcnZpc2VkIENyb3NzLURvbWFpbiBJ
bWFnZSBHZW5lcmF0aW9uXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTYxMS4w
MjIwMCkgCiogRFRSLUdBTiAtIFtEVFItR0FOOiBEaWxhdGVkIFRlbXBvcmFs
IFJlbGF0aW9uYWwgQWR2ZXJzYXJpYWwgTmV0d29yayBmb3IgVmlkZW8gU3Vt
bWFyaXphdGlvbl0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDQuMTEyMjgp
IAoqIER1YWxHQU4gLSBbRHVhbEdBTjogVW5zdXBlcnZpc2VkIER1YWwgTGVh
cm5pbmcgZm9yIEltYWdlLXRvLUltYWdlIFRyYW5zbGF0aW9uXShodHRwczov
L2FyeGl2Lm9yZy9hYnMvMTcwNC4wMjUxMHYxKSAKKiBEdWFsaW5nIEdBTiAt
IFtEdWFsaW5nIEdBTnNdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzA2LjA2
MjE2KSAKKiBEVkdBTiAtIFtIdW1hbiBNb3Rpb24gTW9kZWxpbmcgdXNpbmcg
RFZHQU5zXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwNC4xMDY1MikgCiog
RHluYW1pY3MgVHJhbnNmZXIgR0FOIC0gW0R5bmFtaWNzIFRyYW5zZmVyIEdB
TjogR2VuZXJhdGluZyBWaWRlbyBieSBUcmFuc2ZlcnJpbmcgQXJiaXRyYXJ5
IFRlbXBvcmFsIER5bmFtaWNzIGZyb20gYSBTb3VyY2UgVmlkZW8gdG8gYSBT
aW5nbGUgVGFyZ2V0IEltYWdlXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcx
Mi4wMzUzNCkgCiogRS1HQU4gLSBbRXZvbHV0aW9uYXJ5IEdlbmVyYXRpdmUg
QWR2ZXJzYXJpYWwgTmV0d29ya3NdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8x
ODAzLjAwNjU3KSAKKiBFQVIgLSBbR2VuZXJhdGl2ZSBNb2RlbCBmb3IgSGV0
ZXJvZ2VuZW91cyBJbmZlcmVuY2VdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8x
ODA0LjA5ODU4KSAKKiBFQkdBTiAtIFtFbmVyZ3ktYmFzZWQgR2VuZXJhdGl2
ZSBBZHZlcnNhcmlhbCBOZXR3b3JrXShodHRwczovL2FyeGl2Lm9yZy9hYnMv
MTYwOS4wMzEyNnY0KSAKKiBlY0dBTiAtIFtlQ29tbWVyY2VHQU4gOiBBIEdl
bmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29yayBmb3IgRS1jb21tZXJjZV0o
aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDEuMDMyNDQpIAoqIEVELy9HQU4g
LSBbU3RhYmlsaXppbmcgVHJhaW5pbmcgb2YgR2VuZXJhdGl2ZSBBZHZlcnNh
cmlhbCBOZXR3b3JrcyB0aHJvdWdoIFJlZ3VsYXJpemF0aW9uXShodHRwczov
L2FyeGl2Lm9yZy9hYnMvMTcwNS4wOTM2NykgCiogRWRpdGFibGUgR0FOIC0g
W0VkaXRhYmxlIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3M6IEdl
bmVyYXRpbmcgYW5kIEVkaXRpbmcgRmFjZXMgU2ltdWx0YW5lb3VzbHldKGh0
dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA3LjA3NzAwKSAKKiBFR0FOIC0gW0Vu
aGFuY2VkIEV4cGVyaWVuY2UgUmVwbGF5IEdlbmVyYXRpb24gZm9yIEVmZmlj
aWVudCBSZWluZm9yY2VtZW50IExlYXJuaW5nXShodHRwczovL2FyeGl2Lm9y
Zy9hYnMvMTcwNS4wODI0NSkgCiogRUwtR0FOIC0gW0VMLUdBTjogRW1iZWRk
aW5nIExvc3MgRHJpdmVuIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29y
a3MgZm9yIExhbmUgRGV0ZWN0aW9uXShodHRwczovL2FyeGl2Lm9yZy9hYnMv
MTgwNi4wNTUyNSkgCiogRUxFR0FOVCAtIFtFTEVHQU5UOiBFeGNoYW5naW5n
IExhdGVudCBFbmNvZGluZ3Mgd2l0aCBHQU4gZm9yIFRyYW5zZmVycmluZyBN
dWx0aXBsZSBGYWNlIEF0dHJpYnV0ZXNdKGh0dHBzOi8vYXJ4aXYub3JnL2Fi
cy8xODAzLjEwNTYyKSAKKiBFbmVyZ3lXR0FOIC0gW0VuZXJneS1yZWxheGVk
IFdhc3NlcnRlaW4gR0FOcyAoRW5lcmd5V0dBTik6IFRvd2FyZHMgTW9yZSBT
dGFibGUgYW5kIEhpZ2ggUmVzb2x1dGlvbiBJbWFnZSBHZW5lcmF0aW9uXSho
dHRwczovL2FyeGl2Lm9yZy9hYnMvMTcxMi4wMTAyNikgCiogRVNSR0FOIC0g
W0VTUkdBTjogRW5oYW5jZWQgU3VwZXItUmVzb2x1dGlvbiBHZW5lcmF0aXZl
IEFkdmVyc2FyaWFsIE5ldHdvcmtzXShodHRwczovL2FyeGl2Lm9yZy9hYnMv
MTgwOS4wMDIxOSkgCiogRXhHQU4gLSBbRXllIEluLVBhaW50aW5nIHdpdGgg
RXhlbXBsYXIgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3Jrc10oaHR0
cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MTIuMDM5OTkpIAoqIEV4cG9zdXJlR0FO
IC0gW0V4cG9zdXJlOiBBIFdoaXRlLUJveCBQaG90byBQb3N0LVByb2Nlc3Np
bmcgRnJhbWV3b3JrXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwOS4wOTYw
MikgKFtnaXRodWJdKGh0dHBzOi8vZ2l0aHViLmNvbS95dWFubWluZy1odS9l
eHBvc3VyZSkpCiogRXhwckdBTiAtIFtFeHByR0FOOiBGYWNpYWwgRXhwcmVz
c2lvbiBFZGl0aW5nIHdpdGggQ29udHJvbGxhYmxlIEV4cHJlc3Npb24gSW50
ZW5zaXR5XShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwOS4wMzg0MikgCiog
Zi1DTFNXR0FOIC0gW0ZlYXR1cmUgR2VuZXJhdGluZyBOZXR3b3JrcyBmb3Ig
WmVyby1TaG90IExlYXJuaW5nXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcx
Mi4wMDk4MSkgCiogZi1HQU4gLSBbZi1HQU46IFRyYWluaW5nIEdlbmVyYXRp
dmUgTmV1cmFsIFNhbXBsZXJzIHVzaW5nIFZhcmlhdGlvbmFsIERpdmVyZ2Vu
Y2UgTWluaW1pemF0aW9uXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTYwNi4w
MDcwOSkgCiogRmFpckdBTiAtIFtGYWlyR0FOOiBGYWlybmVzcy1hd2FyZSBH
ZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmtzXShodHRwczovL2FyeGl2
Lm9yZy9hYnMvMTgwNS4xMTIwMikgCiogRmFpcm5lc3MgR0FOIC0gW0ZhaXJu
ZXNzIEdBTl0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDUuMDk5MTApIAoq
IEZha2VHQU4gLSBbRGV0ZWN0aW5nIERlY2VwdGl2ZSBSZXZpZXdzIHVzaW5n
IEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3NdKGh0dHBzOi8vYXJ4
aXYub3JnL2Ficy8xODA1LjEwMzY0KSAKKiBGQkdBTiAtIFtGZWVkYmFjayBH
QU4gKEZCR0FOKSBmb3IgRE5BOiBhIE5vdmVsIEZlZWRiYWNrLUxvb3AgQXJj
aGl0ZWN0dXJlIGZvciBPcHRpbWl6aW5nIFByb3RlaW4gRnVuY3Rpb25zXSho
dHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwNC4wMTY5NCkgCiogRkJHQU4gLSBb
RmVhdHVyaXplZCBCaWRpcmVjdGlvbmFsIEdBTjogQWR2ZXJzYXJpYWwgRGVm
ZW5zZSB2aWEgQWR2ZXJzYXJpYWxseSBMZWFybmVkIFNlbWFudGljIEluZmVy
ZW5jZV0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDUuMDc4NjIpIAoqIEZD
LUdBTiAtIFtGYXN0LWNvbnZlcmdpbmcgQ29uZGl0aW9uYWwgR2VuZXJhdGl2
ZSBBZHZlcnNhcmlhbCBOZXR3b3JrcyBmb3IgSW1hZ2UgU3ludGhlc2lzXSho
dHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwNS4wMTk3MikgCiogRkYtR0FOIC0g
W1Rvd2FyZHMgTGFyZ2UtUG9zZSBGYWNlIEZyb250YWxpemF0aW9uIGluIHRo
ZSBXaWxkXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwNC4wNjI0NCkgCiog
RkdHQU4gLSBbQWR2ZXJzYXJpYWwgTGVhcm5pbmcgZm9yIEZpbmUtZ3JhaW5l
ZCBJbWFnZSBTZWFyY2hdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA3LjAy
MjQ3KSAKKiBGaWN0aXRpb3VzIEdBTiAtIFtGaWN0aXRpb3VzIEdBTjogVHJh
aW5pbmcgR0FOcyB3aXRoIEhpc3RvcmljYWwgTW9kZWxzXShodHRwczovL2Fy
eGl2Lm9yZy9hYnMvMTgwMy4wODY0NykgCiogRklHQU4gLSBbRnJhbWUgSW50
ZXJwb2xhdGlvbiB3aXRoIE11bHRpLVNjYWxlIERlZXAgTG9zcyBGdW5jdGlv
bnMgYW5kIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3NdKGh0dHBz
Oi8vYXJ4aXYub3JnL2Ficy8xNzExLjA2MDQ1KSAKKiBGaWxhLUdBTiAtIFtT
eW50aGVzaXppbmcgRmlsYW1lbnRhcnkgU3RydWN0dXJlZCBJbWFnZXMgd2l0
aCBHQU5zXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwNi4wMjE4NSkgCiog
Rmlyc3QgT3JkZXIgR0FOICAtIFtGaXJzdCBPcmRlciBHZW5lcmF0aXZlIEFk
dmVyc2FyaWFsIE5ldHdvcmtzIF0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4
MDIuMDQ1OTEpIChbZ2l0aHViXShodHRwczovL2dpdGh1Yi5jb20vemFsYW5k
b3Jlc2VhcmNoL2ZpcnN0X29yZGVyX2dhbikpCiogRmlzaGVyIEdBTiAtIFtG
aXNoZXIgR0FOXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwNS4wOTY3NSkg
CiogRmxvdy1HQU4gLSBbRmxvdy1HQU46IEJyaWRnaW5nIGltcGxpY2l0IGFu
ZCBwcmVzY3JpYmVkIGxlYXJuaW5nIGluIGdlbmVyYXRpdmUgbW9kZWxzXSho
dHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwNS4wODg2OCkgCiogRnJhbmtlbkdB
TiAtIFtyYW5rZW5HQU46IEd1aWRlZCBEZXRhaWwgU3ludGhlc2lzIGZvciBC
dWlsZGluZyBNYXNzLU1vZGVscyBVc2luZyBTdHlsZS1TeW5jaG9uaXplZCBH
QU5zXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwNi4wNzE3OSkgCiogRlNF
R0FOIC0gW0V4cGxvcmluZyBTcGVlY2ggRW5oYW5jZW1lbnQgd2l0aCBHZW5l
cmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmtzIGZvciBSb2J1c3QgU3BlZWNo
IFJlY29nbml0aW9uXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcxMS4wNTc0
NykgCiogRlRHQU4gLSBbSGllcmFyY2hpY2FsIFZpZGVvIEdlbmVyYXRpb24g
ZnJvbSBPcnRob2dvbmFsIEluZm9ybWF0aW9uOiBPcHRpY2FsIEZsb3cgYW5k
IFRleHR1cmVdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzExLjA5NjE4KSAK
KiBGdXNlZEdBTiAtIFtTZW1pLXN1cGVydmlzZWQgRnVzZWRHQU4gZm9yIENv
bmRpdGlvbmFsIEltYWdlIEdlbmVyYXRpb25dKGh0dHBzOi8vYXJ4aXYub3Jn
L2Ficy8xODAxLjA1NTUxKSAKKiBGdXNpb25HQU4gLSBbTGVhcm5pbmcgdG8g
RnVzZSBNdXNpYyBHZW5yZXMgd2l0aCBHZW5lcmF0aXZlIEFkdmVyc2FyaWFs
IER1YWwgTGVhcm5pbmddKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzEyLjAx
NDU2KSAKKiBGdXNpb25HQU4gLSBbR2VuZXJhdGluZyBhIEZ1c2lvbiBJbWFn
ZTogT25lJ3MgSWRlbnRpdHkgYW5kIEFub3RoZXIncyBTaGFwZV0oaHR0cHM6
Ly9hcnhpdi5vcmcvYWJzLzE4MDQuMDc0NTUpIAoqIEcyLUdBTiAtIFtHZW9t
ZXRyeSBHdWlkZWQgQWR2ZXJzYXJpYWwgRmFjaWFsIEV4cHJlc3Npb24gU3lu
dGhlc2lzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcxMi4wMzQ3NCkgCiog
R0FBTiAtIFtHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIEF1dG9lbmNvZGVyIE5l
dHdvcmtzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwMy4wODg4NykgCiog
R0FGIC0gW0dlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgRm9yZXN0cyBmb3IgQmV0
dGVyIENvbmRpdGlvbmVkIEFkdmVyc2FyaWFsIExlYXJuaW5nXShodHRwczov
L2FyeGl2Lm9yZy9hYnMvMTgwNS4wNTE4NSkgCiogR0FHQU4gLSBbR0FHQU46
IEdlb21ldHJ5LUF3YXJlIEdlbmVyYXRpdmUgQWR2ZXJzZXJpYWwgTmV0d29y
a3NdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzEyLjAwNjg0KSAKKiBHQUlB
IC0gW0dlbmVyYXRpdmUgYWR2ZXJzYXJpYWwgaW50ZXJwb2xhdGl2ZSBhdXRv
ZW5jb2Rpbmc6IGFkdmVyc2FyaWFsIHRyYWluaW5nIG9uIGxhdGVudCBzcGFj
ZSBpbnRlcnBvbGF0aW9ucyBlbmNvdXJhZ2UgY29udmV4IGxhdGVudCBkaXN0
cmlidXRpb25zXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwNy4wNjY1MCkg
CiogR0FJTiAgLSBbR0FJTjogTWlzc2luZyBEYXRhIEltcHV0YXRpb24gdXNp
bmcgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXRzXShodHRwczovL2FyeGl2
Lm9yZy9hYnMvMTgwNi4wMjkyMCkgCiogR0FNTiAtIFtHZW5lcmF0aXZlIEFk
dmVyc2FyaWFsIE1hcHBpbmcgTmV0d29ya3NdKGh0dHBzOi8vYXJ4aXYub3Jn
L2Ficy8xNzA5LjA5ODIwKSAKKiBHQU4gLSBbR2VuZXJhdGl2ZSBBZHZlcnNh
cmlhbCBOZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE0MDYuMjY2
MSkgKFtnaXRodWJdKGh0dHBzOi8vZ2l0aHViLmNvbS9nb29kZmVsaS9hZHZl
cnNhcmlhbCkpCiogR0FOIExhYiAtIFtHQU4gTGFiOiBVbmRlcnN0YW5kaW5n
IENvbXBsZXggRGVlcCBHZW5lcmF0aXZlIE1vZGVscyB1c2luZyBJbnRlcmFj
dGl2ZSBWaXN1YWwgRXhwZXJpbWVudGF0aW9uXShodHRwczovL2FyeGl2Lm9y
Zy9hYnMvMTgwOS4wMTU4NykgCiogR0FOIFEtbGVhcm5pbmcgLSBbR0FOIFEt
bGVhcm5pbmddKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA1LjA0ODc0KSAK
KiBHQU4tQUQgLSBbQW5vbWFseSBEZXRlY3Rpb24gd2l0aCBHZW5lcmF0aXZl
IEFkdmVyc2FyaWFsIE5ldHdvcmtzIGZvciBNdWx0aXZhcmlhdGUgVGltZSBT
ZXJpZXNdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA5LjA0NzU4KSAKKiBH
QU4tQVRWIC0gW0EgTm92ZWwgQXBwcm9hY2ggdG8gQXJ0aXN0aWMgVGV4dHVh
bCBWaXN1YWxpemF0aW9uIHZpYSBHQU5dKGh0dHBzOi8vYXJ4aXYub3JnL2Fi
cy8xNzEwLjEwNTUzKSAKKiBHQU4tQ0xTIC0gW0dlbmVyYXRpdmUgQWR2ZXJz
YXJpYWwgVGV4dCB0byBJbWFnZSBTeW50aGVzaXNdKGh0dHBzOi8vYXJ4aXYu
b3JnL2Ficy8xNjA1LjA1Mzk2KSAoW2dpdGh1Yl0oaHR0cHM6Ly9naXRodWIu
Y29tL3JlZWRzY290L2ljbWwyMDE2KSkKKiBHQU4tUlMgLSBbVG93YXJkcyBR
dWFsaXRhdGl2ZSBBZHZhbmNlbWVudCBvZiBVbmRlcndhdGVyIE1hY2hpbmUg
VmlzaW9uIHdpdGggR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3Jrc10o
aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MTIuMDA3MzYpIAoqIEdBTi1TRCAt
IFtWaXJ0dWFsLVRhb2JhbzogVmlydHVhbGl6aW5nIFJlYWwtd29ybGQgT25s
aW5lIFJldGFpbCBFbnZpcm9ubWVudCBmb3IgUmVpbmZvcmNlbWVudCBMZWFy
bmluZ10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDUuMTAwMDApIAoqIEdB
Ti1zZXAgLSBbR0FOcyBmb3IgQmlvbG9naWNhbCBJbWFnZSBTeW50aGVzaXNd
KGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzA4LjA0NjkyKSAoW2dpdGh1Yl0o
aHR0cHM6Ly9naXRodWIuY29tL2Fvc29raW4vYmlvZ2FucykpCiogR0FOLVZG
UyAtIFtHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmstYmFzZWQgU3lu
dGhlc2lzIG9mIFZpc2libGUgRmFjZXMgZnJvbSBQb2xhcmltZXRyaWMgVGhl
cm1hbCBGYWNlc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDguMDI2ODEp
IAoqIEdBTi1Xb3JkMlZlYyAtIFtBZHZlcnNhcmlhbCBUcmFpbmluZyBvZiBX
b3JkMlZlYyBmb3IgQmFza2V0IENvbXBsZXRpb25dKGh0dHBzOi8vYXJ4aXYu
b3JnL2Ficy8xODA1LjA4NzIwKSAKKiBHQU5BWCAtIFtHQU5BWDogQSBVbmlm
aWVkIE1JTUQtU0lNRCBBY2NlbGVyYXRpb24gZm9yIEdlbmVyYXRpdmUgQWR2
ZXJzYXJpYWwgTmV0d29ya3NdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA2
LjAxMTA3KSAKKiBHQU5DUyAtIFtEZWVwIEdlbmVyYXRpdmUgQWR2ZXJzYXJp
YWwgTmV0d29ya3MgZm9yIENvbXByZXNzZWQgU2Vuc2luZyBBdXRvbWF0ZXMg
TVJJXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwNi4wMDA1MSkgCiogR0FO
REkgLSBbR3VpZGluZyB0aGUgc2VhcmNoIGluIGNvbnRpbnVvdXMgc3RhdGUt
YWN0aW9uIHNwYWNlcyBieSBsZWFybmluZyBhbiBhY3Rpb24gc2FtcGxpbmcg
ZGlzdHJpYnV0aW9uIGZyb20gb2ZmLXRhcmdldCBzYW1wbGVzXShodHRwczov
L2FyeGl2Lm9yZy9hYnMvMTcxMS4wMTM5MSkgCiogR0FORyAtIFtHQU5Hczog
R2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3JrIEdhbWVzXShodHRwczov
L2FyeGl2Lm9yZy9hYnMvMTcxMi4wMDY3OSkgCiogR0FORyAtIFtCZXlvbmQg
TG9jYWwgTmFzaCBFcXVpbGlicmlhIGZvciBBZHZlcnNhcmlhbCBOZXR3b3Jr
c10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDYuMDcyNjgpIAoqIEdBTm9z
YWljIC0gW0dBTm9zYWljOiBNb3NhaWMgQ3JlYXRpb24gd2l0aCBHZW5lcmF0
aXZlIFRleHR1cmUgTWFuaWZvbGRzXShodHRwczovL2FyeGl2Lm9yZy9hYnMv
MTcxMi4wMDI2OSkgCiogR0FOVk8gLSBbR0FOVk86IFVuc3VwZXJ2aXNlZCBE
ZWVwIE1vbm9jdWxhciBWaXN1YWwgT2RvbWV0cnkgYW5kIERlcHRoIEVzdGlt
YXRpb24gd2l0aCBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmtzXSho
dHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwOS4wNTc4NikgCiogR0FQIC0gW0Nv
bnRleHQtQXdhcmUgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBQcml2YWN5XSho
dHRwczovL2FyeGl2Lm9yZy9hYnMvMTcxMC4wOTU0OSkgCiogR0FQIC0gW0dl
bmVyYXRpdmUgQWR2ZXJzYXJpYWwgUHJpdmFjeV0oaHR0cHM6Ly9hcnhpdi5v
cmcvYWJzLzE4MDcuMDUzMDYpIAoqIEdBVFMgLSBbU2FtcGxlLUVmZmljaWVu
dCBEZWVwIFJMIHdpdGggR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBUcmVlIFNl
YXJjaF0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDYuMDU3ODApIAoqIEdB
V1dOIC0gW0xlYXJuaW5nIFdoYXQgYW5kIFdoZXJlIHRvIERyYXddKGh0dHBz
Oi8vYXJ4aXYub3JnL2Ficy8xNjEwLjAyNDU0KSAoW2dpdGh1Yl0oaHR0cHM6
Ly9naXRodWIuY29tL3JlZWRzY290L25pcHMyMDE2KSkKKiBHQy1HQU4gLSBb
R2VvbWV0cnktQ29udHJhc3RpdmUgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBO
ZXR3b3JrIGZvciBGYWNpYWwgRXhwcmVzc2lvbiBTeW50aGVzaXNdKGh0dHBz
Oi8vYXJ4aXYub3JnL2Ficy8xODAyLjAxODIyICkgCiogR2NHQU4gLSBbR2Vv
bWV0cnktQ29uc2lzdGVudCBBZHZlcnNhcmlhbCBOZXR3b3JrcyBmb3IgT25l
LVNpZGVkIFVuc3VwZXJ2aXNlZCBEb21haW4gTWFwcGluZ10oaHR0cHM6Ly9h
cnhpdi5vcmcvYWJzLzE4MDkuMDU4NTIpIAoqIEdlbmVHQU4gLSBbR2VuZUdB
TjogTGVhcm5pbmcgT2JqZWN0IFRyYW5zZmlndXJhdGlvbiBhbmQgQXR0cmli
dXRlIFN1YnNwYWNlIGZyb20gVW5wYWlyZWQgRGF0YV0oaHR0cHM6Ly9hcnhp
di5vcmcvYWJzLzE3MDUuMDQ5MzIpIChbZ2l0aHViXShodHRwczovL2dpdGh1
Yi5jb20vUHJpbnNwaGllbGQvR2VuZUdBTikpCiogR2VvR0FOIC0gW0dlbmVy
YXRpbmcgSW5zdGFuY2UgU2VnbWVudGF0aW9uIEFubm90YXRpb24gYnkgR2Vv
bWV0cnktZ3VpZGVkIEdBTiBdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODAx
LjA4ODM5ICkgCiogR2VvbWV0cmljIEdBTiAtIFtHZW9tZXRyaWMgR0FOXSho
dHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwNS4wMjg5NCkgCiogR0lOIC0gW0dl
bmVyYXRpdmUgSW52ZXJ0aWJsZSBOZXR3b3JrcyAoR0lOKTogUGF0aG9waHlz
aW9sb2d5LUludGVycHJldGFibGUgRmVhdHVyZSBNYXBwaW5nIGFuZCBWaXJ0
dWFsIFBhdGllbnQgR2VuZXJhdGlvbl0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJz
LzE4MDguMDQ0OTUpIAoqIEdMQ0EtR0FOIC0gW0dsb2JhbCBhbmQgTG9jYWwg
Q29uc2lzdGVudCBBZ2UgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3Jr
cyBdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODAxLjA4MzkwKSAKKiBHTS1H
QU4gLSBbR2F1c3NpYW4gTWl4dHVyZSBHZW5lcmF0aXZlIEFkdmVyc2FyaWFs
IE5ldHdvcmtzIGZvciBEaXZlcnNlIERhdGFzZXRzLCBhbmQgdGhlIFVuc3Vw
ZXJ2aXNlZCBDbHVzdGVyaW5nIG9mIEltYWdlc10oaHR0cHM6Ly9hcnhpdi5v
cmcvYWJzLzE4MDguMTAzNTYpIAoqIEdNQU4gLSBbR2VuZXJhdGl2ZSBNdWx0
aS1BZHZlcnNhcmlhbCBOZXR3b3Jrc10oaHR0cDovL2FyeGl2Lm9yZy9hYnMv
MTYxMS4wMTY3MykgCiogR01NLUdBTiAtIFtUb3dhcmRzIFVuZGVyc3RhbmRp
bmcgdGhlIER5bmFtaWNzIG9mIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0
d29ya3NdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzA2LjA5ODg0KSAKKiBH
b0dBTiAtIFtHYW5nIG9mIEdBTnM6IEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwg
TmV0d29ya3Mgd2l0aCBNYXhpbXVtIE1hcmdpbiBSYW5raW5nXShodHRwczov
L2FyeGl2Lm9yZy9hYnMvMTcwNC4wNDg2NSkgCiogR09OZXQgLSBbR09OZXQ6
IEEgU2VtaS1TdXBlcnZpc2VkIERlZXAgTGVhcm5pbmcgQXBwcm9hY2ggRm9y
IFRyYXZlcnNhYmlsaXR5IEVzdGltYXRpb25dKGh0dHBzOi8vYXJ4aXYub3Jn
L2Ficy8xODAzLjAzMjU0KSAKKiBHUC1HQU4gLSBbR1AtR0FOOiBUb3dhcmRz
IFJlYWxpc3RpYyBIaWdoLVJlc29sdXRpb24gSW1hZ2UgQmxlbmRpbmddKGh0
dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzAzLjA3MTk1KSAoW2dpdGh1Yl0oaHR0
cHM6Ly9naXRodWIuY29tL3d1aHVpa2FpL0dQLUdBTikpCiogR1AtR0FOIC0g
W0dQLUdBTjogR2VuZGVyIFByZXNlcnZpbmcgR0FOIGZvciBTeW50aGVzaXpp
bmcgRmFjZXMgZnJvbSBMYW5kbWFya3NdKGh0dHBzOi8vYXJ4aXYub3JnL2Fi
cy8xNzEwLjAwOTYyKSAKKiBHUFUgLSBbQSBnZW5lcmF0aXZlIGFkdmVyc2Fy
aWFsIGZyYW1ld29yayBmb3IgcG9zaXRpdmUtdW5sYWJlbGVkIGNsYXNzaWZp
Y2F0aW9uXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcxMS4wODA1NCkgCiog
R1JBTiAtIFtHZW5lcmF0aW5nIGltYWdlcyB3aXRoIHJlY3VycmVudCBhZHZl
cnNhcmlhbCBuZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE2MDIu
MDUxMTApIChbZ2l0aHViXShodHRwczovL2dpdGh1Yi5jb20vaml3b29uZ2lt
L0dSQU4pKQoqIEdyYXBoaWNhbC1HQU4gLSBbR3JhcGhpY2FsIEdlbmVyYXRp
dmUgQWR2ZXJzYXJpYWwgTmV0d29ya3NdKGh0dHBzOi8vYXJ4aXYub3JnL2Fi
cy8xODA0LjAzNDI5KSAKKiBHcmFwaFNHQU4gLSBbU2VtaS1zdXBlcnZpc2Vk
IExlYXJuaW5nIG9uIEdyYXBocyB3aXRoIEdlbmVyYXRpdmUgQWR2ZXJzYXJp
YWwgTmV0c10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDkuMDAxMzApIAoq
IEdyYXNwR0FOIC0gW1VzaW5nIFNpbXVsYXRpb24gYW5kIERvbWFpbiBBZGFw
dGF0aW9uIHRvIEltcHJvdmUgRWZmaWNpZW5jeSBvZiBEZWVwIFJvYm90aWMg
R3Jhc3BpbmddKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzA5LjA3ODU3KSAK
KiBHVC1HQU4gLSBbRGVlcCBHcmFwaCBUcmFuc2xhdGlvbl0oaHR0cHM6Ly9h
cnhpdi5vcmcvYWJzLzE4MDUuMDk5ODApIAoqIEhBTiAtIFtDaGluZXNlIFR5
cGVmYWNlIFRyYW5zZm9ybWF0aW9uIHdpdGggSGllcmFyY2hpY2FsIEFkdmVy
c2FyaWFsIE5ldHdvcmtdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzExLjA2
NDQ4KSAKKiBIQU4gLSBbQmlkaXJlY3Rpb25hbCBMZWFybmluZyBmb3IgUm9i
dXN0IE5ldXJhbCBOZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4
MDUuMDgwMDYpIAoqIEhpR0FOIC0gW0V4cGxvaXRpbmcgSW1hZ2VzIGZvciBW
aWRlbyBSZWNvZ25pdGlvbiB3aXRoIEhpZXJhcmNoaWNhbCBHZW5lcmF0aXZl
IEFkdmVyc2FyaWFsIE5ldHdvcmtzXShodHRwczovL2FyeGl2Lm9yZy9hYnMv
MTgwNS4wNDM4NCkgCiogSFAtR0FOIC0gW0hQLUdBTjogUHJvYmFiaWxpc3Rp
YyAzRCBodW1hbiBtb3Rpb24gcHJlZGljdGlvbiB2aWEgR0FOXShodHRwczov
L2FyeGl2Lm9yZy9hYnMvMTcxMS4wOTU2MSkgCiogSFItRENHQU4gLSBbSGln
aC1SZXNvbHV0aW9uIERlZXAgQ29udm9sdXRpb25hbCBHZW5lcmF0aXZlIEFk
dmVyc2FyaWFsIE5ldHdvcmtzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcx
MS4wNjQ5MSkgCiogaHJlZEdBTiAtIFtNdWx0aS10dXJuIERpYWxvZ3VlIFJl
c3BvbnNlIEdlbmVyYXRpb24gaW4gYW4gQWR2ZXJzYXJpYWwgTGVhcm5pbmcg
ZnJhbWV3b3JrXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwNS4xMTc1Mikg
CiogSUFOIC0gW05ldXJhbCBQaG90byBFZGl0aW5nIHdpdGggSW50cm9zcGVj
dGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcv
YWJzLzE2MDkuMDcwOTMpIChbZ2l0aHViXShodHRwczovL2dpdGh1Yi5jb20v
YWpicm9jay9OZXVyYWwtUGhvdG8tRWRpdG9yKSkKKiBJY0dBTiAtIFtJbnZl
cnRpYmxlIENvbmRpdGlvbmFsIEdBTnMgZm9yIGltYWdlIGVkaXRpbmddKGh0
dHBzOi8vYXJ4aXYub3JnL2Ficy8xNjExLjA2MzU1KSAoW2dpdGh1Yl0oaHR0
cHM6Ly9naXRodWIuY29tL0d1aW0zL0ljR0FOKSkKKiBJRC1DR0FOIC0gW0lt
YWdlIERlLXJhaW5pbmcgVXNpbmcgYSBDb25kaXRpb25hbCBHZW5lcmF0aXZl
IEFkdmVyc2FyaWFsIE5ldHdvcmtdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8x
NzAxLjA1OTU3djMpIAoqIElkQ3ljbGVHQU4gLSBbRmFjZSBUcmFuc2xhdGlv
biBiZXR3ZWVuIEltYWdlcyBhbmQgVmlkZW9zIHVzaW5nIElkZW50aXR5LWF3
YXJlIEN5Y2xlR0FOXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcxMi4wMDk3
MSkgCiogSUZjVkFFR0FOIC0gW0NvbmRpdGlvbmFsIEF1dG9lbmNvZGVycyB3
aXRoIEFkdmVyc2FyaWFsIEluZm9ybWF0aW9uIEZhY3Rvcml6YXRpb25dKGh0
dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzExLjA1MTc1KSAKKiBpR0FOIC0gW0dl
bmVyYXRpdmUgVmlzdWFsIE1hbmlwdWxhdGlvbiBvbiB0aGUgTmF0dXJhbCBJ
bWFnZSBNYW5pZm9sZF0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE2MDkuMDM1
NTJ2MikgKFtnaXRodWJdKGh0dHBzOi8vZ2l0aHViLmNvbS9qdW55YW56L2lH
QU4pKQoqIElHTU0tR0FOIC0gW0NvdXBsZWQgSUdNTS1HQU5zIGZvciBkZWVw
IG11bHRpbW9kYWwgYW5vbWFseSBkZXRlY3Rpb24gaW4gaHVtYW4gbW9iaWxp
dHkgZGF0YV0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDkuMDI3MjgpIAoq
IEltcHJvdmVkIEdBTiAtIFtJbXByb3ZlZCBUZWNobmlxdWVzIGZvciBUcmFp
bmluZyBHQU5zXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTYwNi4wMzQ5OCkg
KFtnaXRodWJdKGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVuYWkvaW1wcm92ZWQt
Z2FuKSkKKiBJbjJJIC0gW0luMkkgOiBVbnN1cGVydmlzZWQgTXVsdGktSW1h
Z2UtdG8tSW1hZ2UgVHJhbnNsYXRpb24gVXNpbmcgR2VuZXJhdGl2ZSBBZHZl
cnNhcmlhbCBOZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MTEu
MDkzMzQpIAoqIEluZm9HQU4gLSBbSW5mb0dBTjogSW50ZXJwcmV0YWJsZSBS
ZXByZXNlbnRhdGlvbiBMZWFybmluZyBieSBJbmZvcm1hdGlvbiBNYXhpbWl6
aW5nIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0c10oaHR0cHM6Ly9hcnhp
di5vcmcvYWJzLzE2MDYuMDM2NTd2MSkgKFtnaXRodWJdKGh0dHBzOi8vZ2l0
aHViLmNvbS9vcGVuYWkvSW5mb0dBTikpCiogSW50cm9WQUUgLSBbSW50cm9W
QUU6IEludHJvc3BlY3RpdmUgVmFyaWF0aW9uYWwgQXV0b2VuY29kZXJzIGZv
ciBQaG90b2dyYXBoaWMgSW1hZ2UgU3ludGhlc2lzXShodHRwczovL2FyeGl2
Lm9yZy9hYnMvMTgwNy4wNjM1OCkgCiogSVIyVkkgLSBbSVIyVkk6IEVuaGFu
Y2VkIE5pZ2h0IEVudmlyb25tZW50YWwgUGVyY2VwdGlvbiBieSBVbnN1cGVy
dmlzZWQgVGhlcm1hbCBJbWFnZSBUcmFuc2xhdGlvbl0oaHR0cHM6Ly9hcnhp
di5vcmcvYWJzLzE4MDYuMDk1NjUpIAoqIElSR0FOIC0gW0lSR0FOOiBBIE1p
bmltYXggR2FtZSBmb3IgVW5pZnlpbmcgR2VuZXJhdGl2ZSBhbmQgRGlzY3Jp
bWluYXRpdmUgSW5mb3JtYXRpb24gUmV0cmlldmFsIG1vZGVsc10oaHR0cHM6
Ly9hcnhpdi5vcmcvYWJzLzE3MDUuMTA1MTN2MSkgCiogSVJHQU4gLSBbR2Vu
ZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXRzIGZvciBJbmZvcm1hdGlvbiBSZXRy
aWV2YWw6IEZ1bmRhbWVudGFscyBhbmQgQWR2YW5jZXNdKGh0dHBzOi8vYXJ4
aXYub3JnL2Ficy8xODA2LjAzNTc3KSAKKiBJU0dBTiAtIFtJbnZpc2libGUg
U3RlZ2Fub2dyYXBoeSB2aWEgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3
b3JrXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwNy4wODU3MSkgCiogSVNQ
LUdQTSAtIFtJbm5lciBTcGFjZSBQcmVzZXJ2aW5nIEdlbmVyYXRpdmUgUG9z
ZSBNYWNoaW5lXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwOC4wMjEwNCkg
CiogSXRlcmF0aXZlLUdBTiAtIFtUd28gQmlyZHMgd2l0aCBPbmUgU3RvbmU6
IEl0ZXJhdGl2ZWx5IExlYXJuIEZhY2lhbCBBdHRyaWJ1dGVzIHdpdGggR0FO
c10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MTEuMDYwNzgpIChbZ2l0aHVi
XShodHRwczovL2dpdGh1Yi5jb20vcHVua2N1cmUvSXRlcmF0aXZlLUdBTikp
CiogSXRlckdBTiAtIFtJdGVyR0FOczogSXRlcmF0aXZlIEdBTnMgdG8gTGVh
cm4gYW5kIENvbnRyb2wgM0QgT2JqZWN0IFRyYW5zZm9ybWF0aW9uXShodHRw
czovL2FyeGl2Lm9yZy9hYnMvMTgwNC4wNTY1MSkgCiogSVZFLUdBTiAtIFtJ
VkUtR0FOOiBJbnZhcmlhbnQgRW5jb2RpbmcgR2VuZXJhdGl2ZSBBZHZlcnNh
cmlhbCBOZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MTEuMDg2
NDYpIAoqIGlWR0FOIC0gW1Rvd2FyZHMgYW4gVW5kZXJzdGFuZGluZyBvZiBP
dXIgV29ybGQgYnkgR0FOaW5nIFZpZGVvcyBpbiB0aGUgV2lsZF0oaHR0cHM6
Ly9hcnhpdi5vcmcvYWJzLzE3MTEuMTE0NTMpIChbZ2l0aHViXShodHRwczov
L2dpdGh1Yi5jb20vYmVybmhhcmQyMjAyL2ltcHJvdmVkLXZpZGVvLWdhbikp
CiogSVdHQU4gLSBbT24gVW5pZnlpbmcgRGVlcCBHZW5lcmF0aXZlIE1vZGVs
c10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDYuMDA1NTApIAoqIEpvaW50
R0FOIC0gW0pvaW50R0FOOiBNdWx0aS1Eb21haW4gSm9pbnQgRGlzdHJpYnV0
aW9uIExlYXJuaW5nIHdpdGggR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXRz
XShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwNi4wMjk3OCkgCiogSlItR0FO
IC0gW0pSLUdBTjogSmFjb2JpYW4gUmVndWxhcml6YXRpb24gZm9yIEdlbmVy
YXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3NdKGh0dHBzOi8vYXJ4aXYub3Jn
L2Ficy8xODA2LjA5MjM1KSAKKiBLQkdBTiAtIFtLQkdBTjogQWR2ZXJzYXJp
YWwgTGVhcm5pbmcgZm9yIEtub3dsZWRnZSBHcmFwaCBFbWJlZGRpbmdzXSho
dHRwczovL2FyeGl2Lm9yZy9hYnMvMTcxMS4wNDA3MSkgCiogS0dBTiAtIFtL
R0FOOiBIb3cgdG8gQnJlYWsgVGhlIE1pbmltYXggR2FtZSBpbiBHQU5dKGh0
dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzExLjAxNzQ0KSAKKiBsLUdBTiAtIFtS
ZXByZXNlbnRhdGlvbiBMZWFybmluZyBhbmQgQWR2ZXJzYXJpYWwgR2VuZXJh
dGlvbiBvZiAzRCBQb2ludCBDbG91ZHNdKGh0dHBzOi8vYXJ4aXYub3JnL2Fi
cy8xNzA3LjAyMzkyKSAKKiBMQUMtR0FOIC0gW0dyb3VuZGVkIExhbmd1YWdl
IFVuZGVyc3RhbmRpbmcgZm9yIE1hbmlwdWxhdGlvbiBJbnN0cnVjdGlvbnMg
VXNpbmcgR0FOLUJhc2VkIENsYXNzaWZpY2F0aW9uXShodHRwczovL2FyeGl2
Lm9yZy9hYnMvMTgwMS4wNTA5NikgCiogTEFHQU4gLSBbTGVhcm5pbmcgUGFy
dGljbGUgUGh5c2ljcyBieSBFeGFtcGxlOiBMb2NhdGlvbi1Bd2FyZSBHZW5l
cmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmtzIGZvciBQaHlzaWNzIFN5bnRo
ZXNpc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDEuMDU5MjcpIAoqIExB
UEdBTiAtIFtEZWVwIEdlbmVyYXRpdmUgSW1hZ2UgTW9kZWxzIHVzaW5nIGEg
TGFwbGFjaWFuIFB5cmFtaWQgb2YgQWR2ZXJzYXJpYWwgTmV0d29ya3NdKGh0
dHBzOi8vYXJ4aXYub3JnL2Ficy8xNTA2LjA1NzUxKSAoW2dpdGh1Yl0oaHR0
cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL2V5ZXNjcmVhbSkpCiogTEItR0FO
IC0gW0xvYWQgQmFsYW5jZWQgR0FOcyBmb3IgTXVsdGktdmlldyBGYWNlIElt
YWdlIFN5bnRoZXNpc10oaHR0cDovL2FyeGl2Lm9yZy9hYnMvMTgwMi4wNzQ0
NykgCiogTEJUIC0gW0xlYXJuaW5nIEltcGxpY2l0IEdlbmVyYXRpdmUgTW9k
ZWxzIGJ5IFRlYWNoaW5nIEV4cGxpY2l0IE9uZXNdKGh0dHBzOi8vYXJ4aXYu
b3JnL2Ficy8xODA3LjAzODcwKSAKKiBMQ0MtR0FOIC0gW0FkdmVyc2FyaWFs
IExlYXJuaW5nIHdpdGggTG9jYWwgQ29vcmRpbmF0ZSBDb2RpbmddKGh0dHBz
Oi8vYXJ4aXYub3JnL2Ficy8xODA2LjA0ODk1KSAKKiBMRC1HQU4gLSBbTGlu
ZWFyIERpc2NyaW1pbmFudCBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdv
cmtzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwNy4wNzgzMSkgCiogTERB
TiAtIFtMYWJlbCBEZW5vaXNpbmcgQWR2ZXJzYXJpYWwgTmV0d29yayAoTERB
TikgZm9yIEludmVyc2UgTGlnaHRpbmcgb2YgRmFjZSBJbWFnZXNdKGh0dHBz
Oi8vYXJ4aXYub3JnL2Ficy8xNzA5LjAxOTkzKSAKKiBMZWFrR0FOIC0gW0xv
bmcgVGV4dCBHZW5lcmF0aW9uIHZpYSBBZHZlcnNhcmlhbCBUcmFpbmluZyB3
aXRoIExlYWtlZCBJbmZvcm1hdGlvbl0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJz
LzE3MDkuMDg2MjQpIAoqIExlR0FOIC0gW0xpa2VsaWhvb2QgRXN0aW1hdGlv
biBmb3IgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3Jrc10oaHR0cHM6
Ly9hcnhpdi5vcmcvYWJzLzE3MDcuMDc1MzApIAoqIExHQU4gLSBbR2xvYmFs
IHZlcnN1cyBMb2NhbGl6ZWQgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXRz
XShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcxMS4wNjAyMCkgCiogTGlwaXp6
YW5lciAtIFtUb3dhcmRzIERpc3RyaWJ1dGVkIENvZXZvbHV0aW9uYXJ5IEdB
TnNdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA3LjA4MTk0KSAKKiBMUi1H
QU4gLSBbTFItR0FOOiBMYXllcmVkIFJlY3Vyc2l2ZSBHZW5lcmF0aXZlIEFk
dmVyc2FyaWFsIE5ldHdvcmtzIGZvciBJbWFnZSBHZW5lcmF0aW9uXShodHRw
czovL2FyeGl2Lm9yZy9hYnMvMTcwMy4wMTU2MHYxKSAKKiBMUy1HQU4gLSBb
TG9zcy1TZW5zaXRpdmUgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3Jr
cyBvbiBMaXBzY2hpdHogRGVuc2l0aWVzXShodHRwczovL2FyeGl2Lm9yZy9h
YnMvMTcwMS4wNjI2NCkgCiogTFNHQU4gLSBbTGVhc3QgU3F1YXJlcyBHZW5l
cmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmtzXShodHRwczovL2FyeGl2Lm9y
Zy9hYnMvMTYxMS4wNDA3NnYzKSAKKiBNLUFBRSAtIFtNYXNrLWF3YXJlIFBo
b3RvcmVhbGlzdGljIEZhY2UgQXR0cmlidXRlIE1hbmlwdWxhdGlvbl0oaHR0
cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDQuMDg4ODIpIAoqIE1BRC1HQU4gLSBb
TXVsdGktQWdlbnQgRGl2ZXJzZSBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5l
dHdvcmtzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwNC4wMjkwNikgCiog
TUFHQU4gLSBbTUFHQU46IE1hcmdpbiBBZGFwdGF0aW9uIGZvciBHZW5lcmF0
aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmtzXShodHRwczovL2FyeGl2Lm9yZy9h
YnMvMTcwNC4wMzgxN3YxKSAKKiBNQUdBTiAtIFtNQUdBTjogQWxpZ25pbmcg
QmlvbG9naWNhbCBNYW5pZm9sZHNdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8x
ODAzLjAwMzg1KSAKKiBNYWxHQU4gLSBbR2VuZXJhdGluZyBBZHZlcnNhcmlh
bCBNYWx3YXJlIEV4YW1wbGVzIGZvciBCbGFjay1Cb3ggQXR0YWNrcyBCYXNl
ZCBvbiBHQU5dKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzAyLjA1OTgzdjEp
IAoqIE1hbGlHQU4gLSBbTWF4aW11bS1MaWtlbGlob29kIEF1Z21lbnRlZCBE
aXNjcmV0ZSBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmtzXShodHRw
czovL2FyeGl2Lm9yZy9hYnMvMTcwMi4wNzk4MykgCiogbWFuaWZvbGQtV0dB
TiAtIFtNYW5pZm9sZC12YWx1ZWQgSW1hZ2UgR2VuZXJhdGlvbiB3aXRoIFdh
c3NlcnN0ZWluIEFkdmVyc2FyaWFsIE5ldHdvcmtzXShodHRwczovL2FyeGl2
Lm9yZy9hYnMvMTcxMi4wMTU1MSkgCiogTUFSVEEtR0FOIC0gW0RlZXAgVW5z
dXBlcnZpc2VkIFJlcHJlc2VudGF0aW9uIExlYXJuaW5nIGZvciBSZW1vdGUg
U2Vuc2luZyBJbWFnZXNdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNjEyLjA4
ODc5KSAKKiBNYXNrR0FOIC0gW01hc2tHQU46IEJldHRlciBUZXh0IEdlbmVy
YXRpb24gdmlhIEZpbGxpbmcgaW4gdGhlIF9fX19fXyBdKGh0dHBzOi8vYXJ4
aXYub3JnL2Ficy8xODAxLjA3NzM2ICkgCiogTUMtR0FOIC0gW011bHRpLUNv
bnRlbnQgR0FOIGZvciBGZXctU2hvdCBGb250IFN0eWxlIFRyYW5zZmVyXSho
dHRwczovL2FyeGl2Lm9yZy9hYnMvMTcxMi4wMDUxNikgKFtnaXRodWJdKGh0
dHBzOi8vZ2l0aHViLmNvbS9hemFkaXMvTUMtR0FOKSkKKiBNQy1HQU4gLSBb
TUMtR0FOOiBNdWx0aS1jb25kaXRpb25hbCBHZW5lcmF0aXZlIEFkdmVyc2Fy
aWFsIE5ldHdvcmsgZm9yIEltYWdlIFN5bnRoZXNpc10oaHR0cHM6Ly9hcnhp
di5vcmcvYWJzLzE4MDUuMDExMjMpIAoqIE1jR0FOIC0gW01jR2FuOiBNZWFu
IGFuZCBDb3ZhcmlhbmNlIEZlYXR1cmUgTWF0Y2hpbmcgR0FOXShodHRwczov
L2FyeGl2Lm9yZy9hYnMvMTcwMi4wODM5OHYxKSAKKiBNRC1HQU4gLSBbTGVh
cm5pbmcgdG8gR2VuZXJhdGUgVGltZS1MYXBzZSBWaWRlb3MgVXNpbmcgTXVs
dGktU3RhZ2UgRHluYW1pYyBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdv
cmtzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwOS4wNzU5MikgCiogTURH
QU4gLSBbTW9kZSBSZWd1bGFyaXplZCBHZW5lcmF0aXZlIEFkdmVyc2FyaWFs
IE5ldHdvcmtzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTYxMi4wMjEzNikg
CiogTWVkR0FOIC0gW0dlbmVyYXRpbmcgTXVsdGktbGFiZWwgRGlzY3JldGUg
RWxlY3Ryb25pYyBIZWFsdGggUmVjb3JkcyB1c2luZyBHZW5lcmF0aXZlIEFk
dmVyc2FyaWFsIE5ldHdvcmtzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcw
My4wNjQ5MHYxKSAKKiBNZWRHQU4gLSBbTWVkR0FOOiBNZWRpY2FsIEltYWdl
IFRyYW5zbGF0aW9uIHVzaW5nIEdBTnNdKGh0dHBzOi8vYXJ4aXYub3JnL2Fi
cy8xODA2LjA2Mzk3KSAKKiBNRUdBTiAtIFtNRUdBTjogTWl4dHVyZSBvZiBF
eHBlcnRzIG9mIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3MgZm9y
IE11bHRpbW9kYWwgSW1hZ2UgR2VuZXJhdGlvbl0oaHR0cHM6Ly9hcnhpdi5v
cmcvYWJzLzE4MDUuMDI0ODEpIAoqIE1lbGFub0dBTiAtIFtNZWxhbm9HQU5z
OiBIaWdoIFJlc29sdXRpb24gU2tpbiBMZXNpb24gU3ludGhlc2lzIHdpdGgg
R0FOc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDQuMDQzMzgpIAoqIG1l
bW9yeUdBTiAtIFtNZW1vcml6YXRpb24gUHJlY2VkZXMgR2VuZXJhdGlvbjog
TGVhcm5pbmcgVW5zdXBlcnZpc2VkIEdBTnMgd2l0aCBNZW1vcnkgTmV0d29y
a3NdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODAzLjAxNTAwKSAKKiBNZVJH
QU4gLSBbTWVtb3J5IFJlcGxheSBHQU5zOiBsZWFybmluZyB0byBnZW5lcmF0
ZSBpbWFnZXMgZnJvbSBuZXcgY2F0ZWdvcmllcyB3aXRob3V0IGZvcmdldHRp
bmddKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA5LjAyMDU4KSAKKiBNR0FO
IC0gW1ByZWNvbXB1dGVkIFJlYWwtVGltZSBUZXh0dXJlIFN5bnRoZXNpcyB3
aXRoIE1hcmtvdmlhbiBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmtz
XShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTYwNC4wNDM4MikgKFtnaXRodWJd
KGh0dHBzOi8vZ2l0aHViLmNvbS9jaHVhbmxpMTEvTUdBTnMpKQoqIE1HR0FO
IC0gW011bHRpLUdlbmVyYXRvciBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5l
dHNdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzA4LjAyNTU2KSAKKiBNR0dB
TiAtIFtNR0dBTjogU29sdmluZyBNb2RlIENvbGxhcHNlIHVzaW5nIE1hbmlm
b2xkIEd1aWRlZCBUcmFpbmluZ10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4
MDQuMDQzOTEpIAoqIE1JTC1HQU4gLSBbTXVsdGltb2RhbCBTdG9yeXRlbGxp
bmcgdmlhIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgSW1pdGF0aW9uIExlYXJu
aW5nXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcxMi4wMTQ1NSkgCiogTWlu
TEdBTiAtIFtBbm9tYWx5IERldGVjdGlvbiB2aWEgTWluaW11bSBMaWtlbGlo
b29kIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3NdKGh0dHBzOi8v
YXJ4aXYub3JnL2Ficy8xODA4LjAwMjAwKSAKKiBNSVgrR0FOIC0gW0dlbmVy
YWxpemF0aW9uIGFuZCBFcXVpbGlicml1bSBpbiBHZW5lcmF0aXZlIEFkdmVy
c2FyaWFsIE5ldHMgKEdBTnMpXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcw
My4wMDU3M3YzKSAKKiBNSVhHQU4gLSBbTUlYR0FOOiBMZWFybmluZyBDb25j
ZXB0cyBmcm9tIERpZmZlcmVudCBEb21haW5zIGZvciBNaXh0dXJlIEdlbmVy
YXRpb25dKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA3LjAxNjU5KSAKKiBN
TEdBTiAtIFtNZXRyaWMgTGVhcm5pbmctYmFzZWQgR2VuZXJhdGl2ZSBBZHZl
cnNhcmlhbCBOZXR3b3JrXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcxMS4w
Mjc5MikgCiogTU1DLUdBTiAtIFtBIE11bHRpbW9kYWwgQ2xhc3NpZmllciBH
ZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmsgZm9yIENhcnJ5IGFuZCBQ
bGFjZSBUYXNrcyBmcm9tIEFtYmlndW91cyBMYW5ndWFnZSBJbnN0cnVjdGlv
bnNdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA2LjAzODQ3KSAKKiBNTUQt
R0FOIC0gW01NRCBHQU46IFRvd2FyZHMgRGVlcGVyIFVuZGVyc3RhbmRpbmcg
b2YgTW9tZW50IE1hdGNoaW5nIE5ldHdvcmtdKGh0dHBzOi8vYXJ4aXYub3Jn
L2Ficy8xNzA1LjA4NTg0KSAoW2dpdGh1Yl0oaHR0cHM6Ly9naXRodWIuY29t
L2RvdWdhbHN1dGhlcmxhbmQvb3B0LW1tZCkpCiogTU1HQU4gLSBbTU1HQU46
IE1hbmlmb2xkIE1hdGNoaW5nIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0
d29yayBmb3IgR2VuZXJhdGluZyBJbWFnZXNdKGh0dHBzOi8vYXJ4aXYub3Jn
L2Ficy8xNzA3LjA4MjczKSAKKiBNb0NvR0FOIC0gW01vQ29HQU46IERlY29t
cG9zaW5nIE1vdGlvbiBhbmQgQ29udGVudCBmb3IgVmlkZW8gR2VuZXJhdGlv
bl0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDcuMDQ5OTMpIChbZ2l0aHVi
XShodHRwczovL2dpdGh1Yi5jb20vc2VyZ2V5dHVseWFrb3YvbW9jb2dhbikp
CiogTW9kaWZpZWQgR0FOLUNMUyAtIFtHZW5lcmF0ZSB0aGUgY29ycmVzcG9u
ZGluZyBJbWFnZSBmcm9tIFRleHQgRGVzY3JpcHRpb24gdXNpbmcgTW9kaWZp
ZWQgR0FOLUNMUyBBbGdvcml0aG1dKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8x
ODA2LjExMzAyKSAKKiBNb2R1bGFyR0FOIC0gW01vZHVsYXIgR2VuZXJhdGl2
ZSBBZHZlcnNhcmlhbCBOZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJz
LzE4MDQuMDMzNDMpIAoqIE1vbEdBTiAtIFtNb2xHQU46IEFuIGltcGxpY2l0
IGdlbmVyYXRpdmUgbW9kZWwgZm9yIHNtYWxsIG1vbGVjdWxhciBncmFwaHNd
KGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA1LjExOTczKSAKKiBNUE0tR0FO
IC0gW01lc3NhZ2UgUGFzc2luZyBNdWx0aS1BZ2VudCBHQU5zXShodHRwczov
L2FyeGl2Lm9yZy9hYnMvMTYxMi4wMTI5NCkgCiogTVMtR0FOIC0gW1RlbXBv
cmFsIENvaGVyZW5jeSBiYXNlZCBDcml0ZXJpYSBmb3IgUHJlZGljdGluZyBW
aWRlbyBGcmFtZXMgdXNpbmcgRGVlcCBNdWx0aS1zdGFnZSBHZW5lcmF0aXZl
IEFkdmVyc2FyaWFsIE5ldHdvcmtzXShodHRwOi8vcGFwZXJzLm5pcHMuY2Mv
cGFwZXIvNzAxNC10ZW1wb3JhbC1jb2hlcmVuY3ktYmFzZWQtY3JpdGVyaWEt
Zm9yLXByZWRpY3RpbmctdmlkZW8tZnJhbWVzLXVzaW5nLWRlZXAtbXVsdGkt
c3RhZ2UtZ2VuZXJhdGl2ZS1hZHZlcnNhcmlhbC1uZXR3b3JrcykgCiogTVRH
QU4gLSBbTVRHQU46IFNwZWFrZXIgVmVyaWZpY2F0aW9uIHRocm91Z2ggTXVs
dGl0YXNraW5nIFRyaXBsZXQgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3
b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDMuMDkwNTkpIAoqIE11
c2VHQU4gLSBbTXVzZUdBTjogU3ltYm9saWMtZG9tYWluIE11c2ljIEdlbmVy
YXRpb24gYW5kIEFjY29tcGFuaW1lbnQgd2l0aCBNdWx0aS10cmFjayBTZXF1
ZW50aWFsIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3NdKGh0dHBz
Oi8vYXJ4aXYub3JnL2Ficy8xNzA5LjA2Mjk4KSAKKiBNVi1CaUdBTiAtIFtN
dWx0aS12aWV3IEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3NdKGh0
dHBzOi8vYXJ4aXYub3JnL2Ficy8xNjExLjAyMDE5djEpIAoqIE4yUlBQIC0g
W04yUlBQOiBBbiBBZHZlcnNhcmlhbCBOZXR3b3JrIHRvIFJlYnVpbGQgUGxh
bnRhciBQcmVzc3VyZSBmb3IgQUNMRCBQYXRpZW50c10oaHR0cHM6Ly9hcnhp
di5vcmcvYWJzLzE4MDUuMDI4MjUpIAoqIE5BTiAtIFtVbmRlcnN0YW5kaW5n
IEh1bWFucyBpbiBDcm93ZGVkIFNjZW5lczogRGVlcCBOZXN0ZWQgQWR2ZXJz
YXJpYWwgTGVhcm5pbmcgYW5kIEEgTmV3IEJlbmNobWFyayBmb3IgTXVsdGkt
SHVtYW4gUGFyc2luZ10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDQuMDMy
ODcpIAoqIE5DRS1HQU4gLSBbRGloZWRyYWwgYW5nbGUgcHJlZGljdGlvbiB1
c2luZyBnZW5lcmF0aXZlIGFkdmVyc2FyaWFsIG5ldHdvcmtzXShodHRwczov
L2FyeGl2Lm9yZy9hYnMvMTgwMy4xMDk5NikgCiogTkQtR0FOIC0gW05vdmVs
dHkgRGV0ZWN0aW9uIHdpdGggR0FOXShodHRwczovL2FyeGl2Lm9yZy9hYnMv
MTgwMi4xMDU2MCkgCiogTmV0R0FOIC0gW05ldEdBTjogR2VuZXJhdGluZyBH
cmFwaHMgdmlhIFJhbmRvbSBXYWxrc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJz
LzE4MDMuMDA4MTYpIAoqIE9DQU4gLSBbT25lLUNsYXNzIEFkdmVyc2FyaWFs
IE5ldHMgZm9yIEZyYXVkIERldGVjdGlvbl0oaHR0cHM6Ly9hcnhpdi5vcmcv
YWJzLzE4MDMuMDE3OTgpIAoqIE9wdGlvbkdBTiAtIFtPcHRpb25HQU46IExl
YXJuaW5nIEpvaW50IFJld2FyZC1Qb2xpY3kgT3B0aW9ucyB1c2luZyBHZW5l
cmF0aXZlIEFkdmVyc2FyaWFsIEludmVyc2UgUmVpbmZvcmNlbWVudCBMZWFy
bmluZ10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDkuMDY2ODMpIAoqIE9S
R0FOIC0gW09iamVjdGl2ZS1SZWluZm9yY2VkIEdlbmVyYXRpdmUgQWR2ZXJz
YXJpYWwgTmV0d29ya3MgKE9SR0FOKSBmb3IgU2VxdWVuY2UgR2VuZXJhdGlv
biBNb2RlbHMgXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwNS4xMDg0Mykg
CiogT1JHQU4gLSBbM0QgUmVjb25zdHJ1Y3Rpb24gb2YgSW5jb21wbGV0ZSBB
cmNoYWVvbG9naWNhbCBPYmplY3RzIFVzaW5nIGEgR2VuZXJhdGl2ZSBBZHZl
cnNhcnkgTmV0d29ya10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MTEuMDYz
NjMpIAoqIE9ULUdBTiAtIFtJbXByb3ZpbmcgR0FOcyBVc2luZyBPcHRpbWFs
IFRyYW5zcG9ydF0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDMuMDU1NzMp
IAoqIFBhY0dBTiAtIFtQYWNHQU46IFRoZSBwb3dlciBvZiB0d28gc2FtcGxl
cyBpbiBnZW5lcmF0aXZlIGFkdmVyc2FyaWFsIG5ldHdvcmtzXShodHRwczov
L2FyeGl2Lm9yZy9hYnMvMTcxMi4wNDA4NikgCiogUEFOIC0gW1BlcmNlcHR1
YWwgQWR2ZXJzYXJpYWwgTmV0d29ya3MgZm9yIEltYWdlLXRvLUltYWdlIFRy
YW5zZm9ybWF0aW9uXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwNi4wOTEz
OCkgCiogUGFzc0dBTiAtIFtQYXNzR0FOOiBBIERlZXAgTGVhcm5pbmcgQXBw
cm9hY2ggZm9yIFBhc3N3b3JkIEd1ZXNzaW5nXShodHRwczovL2FyeGl2Lm9y
Zy9hYnMvMTcwOS4wMDQ0MCkgCiogUEQtV0dBTiAtIFtQcmltYWwtRHVhbCBX
YXNzZXJzdGVpbiBHQU5dKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA1LjA5
NTc1KSAKKiBQZXJjZXB0dWFsIEdBTiAtIFtQZXJjZXB0dWFsIEdlbmVyYXRp
dmUgQWR2ZXJzYXJpYWwgTmV0d29ya3MgZm9yIFNtYWxsIE9iamVjdCBEZXRl
Y3Rpb25dKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzA2LjA1Mjc0KSAKKiBQ
R0FOIC0gW1Byb2JhYmlsaXN0aWMgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBO
ZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDguMDE4ODYpIAoq
IFBHRC1HQU4gLSBbU29sdmluZyBMaW5lYXIgSW52ZXJzZSBQcm9ibGVtcyBV
c2luZyBHQU4gUHJpb3JzOiBBbiBBbGdvcml0aG0gd2l0aCBQcm92YWJsZSBH
dWFyYW50ZWVzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwMi4wODQwNikg
CiogUEdHQU4gLSBbUGF0Y2gtQmFzZWQgSW1hZ2UgSW5wYWludGluZyB3aXRo
IEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3NdKGh0dHBzOi8vYXJ4
aXYub3JnL2Ficy8xODAzLjA3NDIyKSAKKiBQSU9ORUVSIC0gW1Bpb25lZXIg
TmV0d29ya3M6IFByb2dyZXNzaXZlbHkgR3Jvd2luZyBHZW5lcmF0aXZlIEF1
dG9lbmNvZGVyXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwNy4wMzAyNikg
CiogUGlwLUdBTiAtIFtQaXBlbGluZSBHZW5lcmF0aXZlIEFkdmVyc2FyaWFs
IE5ldHdvcmtzIGZvciBGYWNpYWwgSW1hZ2VzIEdlbmVyYXRpb24gd2l0aCBN
dWx0aXBsZSBBdHRyaWJ1dGVzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcx
MS4xMDc0MikgCiogcGl4MnBpeCAtIFtJbWFnZS10by1JbWFnZSBUcmFuc2xh
dGlvbiB3aXRoIENvbmRpdGlvbmFsIEFkdmVyc2FyaWFsIE5ldHdvcmtzXSho
dHRwczovL2FyeGl2Lm9yZy9hYnMvMTYxMS4wNzAwNCkgKFtnaXRodWJdKGh0
dHBzOi8vZ2l0aHViLmNvbS9waGlsbGlwaS9waXgycGl4KSkKKiBwaXgycGl4
SEQgLSBbSGlnaC1SZXNvbHV0aW9uIEltYWdlIFN5bnRoZXNpcyBhbmQgU2Vt
YW50aWMgTWFuaXB1bGF0aW9uIHdpdGggQ29uZGl0aW9uYWwgR0FOc10oaHR0
cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MTEuMTE1ODUpIChbZ2l0aHViXShodHRw
czovL2dpdGh1Yi5jb20vTlZJRElBL3BpeDJwaXhIRCkpCiogUGl4ZWxHQU4g
LSBbUGl4ZWxHQU4gQXV0b2VuY29kZXJzXShodHRwczovL2FyeGl2Lm9yZy9h
YnMvMTcwNi4wMDUzMSkgCiogUE0tR0FOIC0gW1BNLUdBTnM6IERpc2NyaW1p
bmF0aXZlIFJlcHJlc2VudGF0aW9uIExlYXJuaW5nIGZvciBBY3Rpb24gUmVj
b2duaXRpb24gVXNpbmcgUGFydGlhbC1tb2RhbGl0aWVzXShodHRwczovL2Fy
eGl2Lm9yZy9hYnMvMTgwNC4wNjI0OCkgCiogUE4tR0FOIC0gW1Bvc2UtTm9y
bWFsaXplZCBJbWFnZSBHZW5lcmF0aW9uIGZvciBQZXJzb24gUmUtaWRlbnRp
ZmljYXRpb25dKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzEyLjAyMjI1KSAK
KiBQT0dBTiAtIFtQZXJjZXB0dWFsbHkgT3B0aW1pemVkIEdlbmVyYXRpdmUg
QWR2ZXJzYXJpYWwgTmV0d29yayBmb3IgU2luZ2xlIEltYWdlIERlaGF6aW5n
XShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwNS4wMTA4NCkgCiogUG9zZS1H
QU4gLSBbVGhlIFBvc2UgS25vd3M6IFZpZGVvIEZvcmVjYXN0aW5nIGJ5IEdl
bmVyYXRpbmcgUG9zZSBGdXR1cmVzXShodHRwczovL2FyeGl2Lm9yZy9hYnMv
MTcwNS4wMDA1MykgCiogUFAtR0FOIC0gW1ByaXZhY3ktUHJvdGVjdGl2ZS1H
QU4gZm9yIEZhY2UgRGUtaWRlbnRpZmljYXRpb25dKGh0dHBzOi8vYXJ4aXYu
b3JnL2Ficy8xODA2LjA4OTA2KSAKKiBQUEFOIC0gW1ByaXZhY3ktUHJlc2Vy
dmluZyBBZHZlcnNhcmlhbCBOZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcv
YWJzLzE3MTIuMDcwMDgpIAoqIFBQR04gLSBbUGx1ZyAmIFBsYXkgR2VuZXJh
dGl2ZSBOZXR3b3JrczogQ29uZGl0aW9uYWwgSXRlcmF0aXZlIEdlbmVyYXRp
b24gb2YgSW1hZ2VzIGluIExhdGVudCBTcGFjZV0oaHR0cHM6Ly9hcnhpdi5v
cmcvYWJzLzE2MTIuMDAwMDUpIAoqIFByR0FOIC0gWzNEIFNoYXBlIEluZHVj
dGlvbiBmcm9tIDJEIFZpZXdzIG9mIE11bHRpcGxlIE9iamVjdHNdKGh0dHBz
Oi8vYXJ4aXYub3JnL2Ficy8xNjEyLjA1ODcyKSAKKiBQcm9HYW5TUiAtIFtB
IEZ1bGx5IFByb2dyZXNzaXZlIEFwcHJvYWNoIHRvIFNpbmdsZS1JbWFnZSBT
dXBlci1SZXNvbHV0aW9uXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwNC4w
MjkwMCkgCiogUHJvZ3Jlc3NpdmUgR0FOIC0gW1Byb2dyZXNzaXZlIEdyb3dp
bmcgb2YgR0FOcyBmb3IgSW1wcm92ZWQgUXVhbGl0eSwgU3RhYmlsaXR5LCBh
bmQgVmFyaWF0aW9uXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcxMC4xMDE5
NikgKFtnaXRodWJdKGh0dHBzOi8vZ2l0aHViLmNvbS90a2FycmFzL3Byb2dy
ZXNzaXZlX2dyb3dpbmdfb2ZfZ2FucykpCiogUFMtR0FOIC0gW1BlZGVzdHJp
YW4tU3ludGhlc2lzLUdBTjogR2VuZXJhdGluZyBQZWRlc3RyaWFuIERhdGEg
aW4gUmVhbCBTY2VuZSBhbmQgQmV5b25kXShodHRwczovL2FyeGl2Lm9yZy9h
YnMvMTgwNC4wMjA0NykgCiogUFNHQU4gLSBbTGVhcm5pbmcgVGV4dHVyZSBN
YW5pZm9sZHMgd2l0aCB0aGUgUGVyaW9kaWMgU3BhdGlhbCBHQU5dKGh0dHA6
Ly9hcnhpdi5vcmcvYWJzLzE3MDUuMDY1NjYpIAoqIFBTR0FOIC0gW1BTR0FO
OiBBIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29yayBmb3IgUmVtb3Rl
IFNlbnNpbmcgSW1hZ2UgUGFuLVNoYXJwZW5pbmddKGh0dHBzOi8vYXJ4aXYu
b3JnL2Ficy8xODA1LjAzMzcxKSAKKiBQU8KyLUdBTiAtIFtIaWdoLVF1YWxp
dHkgRmFjaWFsIFBob3RvLVNrZXRjaCBTeW50aGVzaXMgVXNpbmcgTXVsdGkt
QWR2ZXJzYXJpYWwgTmV0d29ya3NdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8x
NzEwLjEwMTgyKSAKKiBSYWRpYWxHQU4gLSBbUmFkaWFsR0FOOiBMZXZlcmFn
aW5nIG11bHRpcGxlIGRhdGFzZXRzIHRvIGltcHJvdmUgdGFyZ2V0LXNwZWNp
ZmljIHByZWRpY3RpdmUgbW9kZWxzIHVzaW5nIEdlbmVyYXRpdmUgQWR2ZXJz
YXJpYWwgTmV0d29ya3MgXShodHRwOi8vYXJ4aXYub3JnL2Ficy8xODAyLjA2
NDAzKSAKKiBSYUdBTiAtIFtUaGUgcmVsYXRpdmlzdGljIGRpc2NyaW1pbmF0
b3I6IGEga2V5IGVsZW1lbnQgbWlzc2luZyBmcm9tIHN0YW5kYXJkIEdBTl0o
aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDcuMDA3MzQpIAoqIFJBTiAtIFtS
QU40SVFBOiBSZXN0b3JhdGl2ZSBBZHZlcnNhcmlhbCBOZXRzIGZvciBOby1S
ZWZlcmVuY2UgSW1hZ2UgUXVhbGl0eSBBc3Nlc3NtZW50XShodHRwczovL2Fy
eGl2Lm9yZy9hYnMvMTcxMi4wNTQ0NCkgKFtnaXRodWJdKCkpCiogUmFua0dB
TiAtIFtBZHZlcnNhcmlhbCBSYW5raW5nIGZvciBMYW5ndWFnZSBHZW5lcmF0
aW9uIF0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDUuMTEwMDEpIAoqIFJD
R0FOIC0gW1JlYWwtdmFsdWVkIChNZWRpY2FsKSBUaW1lIFNlcmllcyBHZW5l
cmF0aW9uIHdpdGggUmVjdXJyZW50IENvbmRpdGlvbmFsIEdBTnNdKGh0dHBz
Oi8vYXJ4aXYub3JnL2Ficy8xNzA2LjAyNjMzKSAKKiBSZUNvbk5OIC0gW1Jl
Y29uc3RydWN0aW9uIG9mIFNpbXVsYXRpb24tQmFzZWQgUGh5c2ljYWwgRmll
bGQgd2l0aCBMaW1pdGVkIFNhbXBsZXMgYnkgUmVjb25zdHJ1Y3Rpb24gTmV1
cmFsIE5ldHdvcmtdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA1LjAwNTI4
KSAKKiBSZWN5Y2xlLUdBTiAtIFtSZWN5Y2xlLUdBTjogVW5zdXBlcnZpc2Vk
IFZpZGVvIFJldGFyZ2V0aW5nXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgw
OC4wNTE3NCkgCiogUmVmaW5lR0FOIC0gW0NvbXByZXNzZWQgU2Vuc2luZyBN
UkkgUmVjb25zdHJ1Y3Rpb24gd2l0aCBDeWNsaWMgTG9zcyBpbiBHZW5lcmF0
aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmtzXShodHRwczovL2FyeGl2Lm9yZy9h
YnMvMTcwOS4wMDc1MykgCiogUmVHQU4gLSBbUmVHQU46IFJFW0xBWHxCQVJ8
SU5GT1JDRV0gYmFzZWQgU2VxdWVuY2UgR2VuZXJhdGlvbiB1c2luZyBHQU5z
XShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwNS4wMjc4OCkgKFtnaXRodWJd
KGh0dHBzOi8vZ2l0aHViLmNvbS9UYWxrVG9UaGVHQU4vUkVHQU4pKQoqIFJl
Z0NHQU4gLSBbVW5wYWlyZWQgTXVsdGktRG9tYWluIEltYWdlIEdlbmVyYXRp
b24gdmlhIFJlZ3VsYXJpemVkIENvbmRpdGlvbmFsIEdBTnNdKGh0dHBzOi8v
YXJ4aXYub3JnL2Ficy8xODA1LjAyNDU2KSAKKiBSZW5kZXJHQU4gLSBbUmVu
ZGVyR0FOOiBHZW5lcmF0aW5nIFJlYWxpc3RpYyBMYWJlbGVkIERhdGFdKGh0
dHBzOi8vYXJ4aXYub3JnL2Ficy8xNjExLjAxMzMxKSAKKiBSZXNlbWJsZWQg
R0FOIC0gW1Jlc2VtYmxlZCBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdv
cmtzOiBUd28gRG9tYWlucyB3aXRoIFNpbWlsYXIgQXR0cmlidXRlc10oaHR0
cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDcuMDA5NDcpIAoqIFJlc0dBTiAtIFtH
ZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmsgYmFzZWQgb24gUmVzbmV0
IGZvciBDb25kaXRpb25hbCBJbWFnZSBSZXN0b3JhdGlvbl0oaHR0cHM6Ly9h
cnhpdi5vcmcvYWJzLzE3MDcuMDQ4ODEpIAoqIFJOTi1XR0FOIC0gW0xhbmd1
YWdlIEdlbmVyYXRpb24gd2l0aCBSZWN1cnJlbnQgR2VuZXJhdGl2ZSBBZHZl
cnNhcmlhbCBOZXR3b3JrcyB3aXRob3V0IFByZS10cmFpbmluZ10oaHR0cHM6
Ly9hcnhpdi5vcmcvYWJzLzE3MDYuMDEzOTkpIChbZ2l0aHViXShodHRwczov
L2dpdGh1Yi5jb20vYW1pcmJhci9ybm4ud2dhbikpCiogUm9DR0FOIC0gW1Jv
YnVzdCBDb25kaXRpb25hbCBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdv
cmtzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwNS4wODY1NykgCiogUlBH
QU4gLSBbU3RhYmlsaXppbmcgR0FOIFRyYWluaW5nIHdpdGggTXVsdGlwbGUg
UmFuZG9tIFByb2plY3Rpb25zXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcw
NS4wNzgzMSkgKFtnaXRodWJdKGh0dHBzOi8vZ2l0aHViLmNvbS9heWFuYy9y
cGdhbikpCiogUlRULUdBTiAtIFtSZWN1cnJlbnQgVG9waWMtVHJhbnNpdGlv
biBHQU4gZm9yIFZpc3VhbCBQYXJhZ3JhcGggR2VuZXJhdGlvbl0oaHR0cHM6
Ly9hcnhpdi5vcmcvYWJzLzE3MDMuMDcwMjJ2MikgCiogUldHQU4gLSBbUmVs
YXhlZCBXYXNzZXJzdGVpbiB3aXRoIEFwcGxpY2F0aW9ucyB0byBHQU5zXSho
dHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwNS4wNzE2NCkgCiogU0FELUdBTiAt
IFtTQUQtR0FOOiBTeW50aGV0aWMgQXV0b25vbW91cyBEcml2aW5nIHVzaW5n
IEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3NdKGh0dHBzOi8vYXJ4
aXYub3JnL2Ficy8xNjExLjA4Nzg4djEpIAoqIFNBR0EgLSBbR2VuZXJhdGl2
ZSBBZHZlcnNhcmlhbCBMZWFybmluZyBmb3IgU3BlY3RydW0gU2Vuc2luZ10o
aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDQuMDA3MDkpIAoqIFNBR0FOIC0g
W1NlbGYtQXR0ZW50aW9uIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29y
a3NdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA1LjA4MzE4KSAKKiBTYWxH
QU4gLSBbU2FsR0FOOiBWaXN1YWwgU2FsaWVuY3kgUHJlZGljdGlvbiB3aXRo
IEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3NdKGh0dHBzOi8vYXJ4
aXYub3JnL2Ficy8xNzAxLjAxMDgxKSAoW2dpdGh1Yl0oaHR0cHM6Ly9naXRo
dWIuY29tL2ltYXRnZS11cGMvc2FsaWVuY3ktc2FsZ2FuLTIwMTcpKQoqIFNB
TSAtIFtTYW1wbGUtRWZmaWNpZW50IEltaXRhdGlvbiBMZWFybmluZyB2aWEg
R2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXRzXShodHRwczovL2FyeGl2Lm9y
Zy9hYnMvMTgwOS4wMjA2NCkgCiogc0FPRyAtIFtEZWVwIFN0cnVjdHVyZWQg
R2VuZXJhdGl2ZSBNb2RlbHNdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA3
LjAzODc3KSAKKiBTQVItR0FOIC0gW0dlbmVyYXRpbmcgSGlnaCBRdWFsaXR5
IFZpc2libGUgSW1hZ2VzIGZyb20gU0FSIEltYWdlcyBVc2luZyBDTk5zXSho
dHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwMi4xMDAzNikgCiogU0JBREEtR0FO
IC0gW0Zyb20gc291cmNlIHRvIHRhcmdldCBhbmQgYmFjazogc3ltbWV0cmlj
IGJpLWRpcmVjdGlvbmFsIGFkYXB0aXZlIEdBTl0oaHR0cHM6Ly9hcnhpdi5v
cmcvYWJzLzE3MDUuMDg4MjQpIAoqIFNjYXJHQU4gLSBbU2NhckdBTjogQ2hh
aW5lZCBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmtzIHRvIFNpbXVs
YXRlIFBhdGhvbG9naWNhbCBUaXNzdWUgb24gQ2FyZGlvdmFzY3VsYXIgTVIg
U2NhbnNdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA4LjA0NTAwKSAKKiBT
Q0gtR0FOIC0gW1NDSC1HQU46IFNlbWktc3VwZXJ2aXNlZCBDcm9zcy1tb2Rh
bCBIYXNoaW5nIGJ5IEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29yayBd
KGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODAyLjAyNDg4ICkgCiogU0QtR0FO
IC0gW1NlbWFudGljYWxseSBEZWNvbXBvc2luZyB0aGUgTGF0ZW50IFNwYWNl
cyBvZiBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmtzXShodHRwczov
L2FyeGl2Lm9yZy9hYnMvMTcwNS4wNzkwNCkgCiogU2RmLUdBTiAtIFtTZGYt
R0FOOiBTZW1pLXN1cGVydmlzZWQgRGVwdGggRnVzaW9uIHdpdGggTXVsdGkt
c2NhbGUgQWR2ZXJzYXJpYWwgTmV0d29ya3NdKGh0dHBzOi8vYXJ4aXYub3Jn
L2Ficy8xODAzLjA2NjU3KSAKKiBTRUdBTiAtIFtTRUdBTjogU3BlZWNoIEVu
aGFuY2VtZW50IEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya10oaHR0
cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDMuMDk0NTJ2MSkgCiogU2VHQU4gLSBb
U2VHQU46IFNlZ21lbnRpbmcgYW5kIEdlbmVyYXRpbmcgdGhlIEludmlzaWJs
ZV0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDMuMTAyMzkpIAoqIFNlZ0FO
IC0gW1NlZ0FOOiBBZHZlcnNhcmlhbCBOZXR3b3JrIHdpdGggTXVsdGktc2Nh
bGUgTDEgTG9zcyBmb3IgTWVkaWNhbCBJbWFnZSBTZWdtZW50YXRpb25dKGh0
dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzA2LjAxODA1KSAKKiBTZW0tR0FOIC0g
W1NlbS1HQU46IFNlbWFudGljYWxseS1Db25zaXN0ZW50IEltYWdlLXRvLUlt
YWdlIFRyYW5zbGF0aW9uXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwNy4w
NDQwOSkgCiogU2VxR0FOIC0gW1NlcUdBTjogU2VxdWVuY2UgR2VuZXJhdGl2
ZSBBZHZlcnNhcmlhbCBOZXRzIHdpdGggUG9saWN5IEdyYWRpZW50XShodHRw
czovL2FyeGl2Lm9yZy9hYnMvMTYwOS4wNTQ3M3Y1KSAoW2dpdGh1Yl0oaHR0
cHM6Ly9naXRodWIuY29tL0xhbnRhb1l1L1NlcUdBTikpCiogU2VVREEgLSBb
U2VtYW50aWMtQXdhcmUgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXRzIGZv
ciBVbnN1cGVydmlzZWQgRG9tYWluIEFkYXB0YXRpb24gaW4gQ2hlc3QgWC1y
YXkgU2VnbWVudGF0aW9uXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwNi4w
MDYwMCkgCiogU0ctR0FOIC0gW1NlbWFudGljLWF3YXJlIEdyYWQtR0FOIGZv
ciBWaXJ0dWFsLXRvLVJlYWwgVXJiYW4gU2NlbmUgQWRhcHRpb25dKGh0dHBz
Oi8vYXJ4aXYub3JnL2Ficy8xODAxLjAxNzI2KSAoW2dpdGh1Yl0oaHR0cHM6
Ly9naXRodWIuY29tL1BlaWx1bi1MaS9TRy1HQU4pKQoqIFNHLUdBTiAtIFtT
cGFyc2VseSBHcm91cGVkIE11bHRpLXRhc2sgR2VuZXJhdGl2ZSBBZHZlcnNh
cmlhbCBOZXR3b3JrcyBmb3IgRmFjaWFsIEF0dHJpYnV0ZSBNYW5pcHVsYXRp
b25dKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA1LjA3NTA5KSAKKiBTR0FO
IC0gW1RleHR1cmUgU3ludGhlc2lzIHdpdGggU3BhdGlhbCBHZW5lcmF0aXZl
IEFkdmVyc2FyaWFsIE5ldHdvcmtzXShodHRwczovL2FyeGl2Lm9yZy9hYnMv
MTYxMS4wODIwNykgCiogU0dBTiAtIFtTdGFja2VkIEdlbmVyYXRpdmUgQWR2
ZXJzYXJpYWwgTmV0d29ya3NdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNjEy
LjA0MzU3djQpIChbZ2l0aHViXShodHRwczovL2dpdGh1Yi5jb20veHVuaHVh
bmcxOTk1L1NHQU4pKQoqIFNHQU4gLSBbU3RlZ2Fub2dyYXBoaWMgR2VuZXJh
dGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcv
YWJzLzE3MDMuMDU1MDIpIAoqIFNHQU4gLSBbU0dBTjogQW4gQWx0ZXJuYXRp
dmUgVHJhaW5pbmcgb2YgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3Jr
c10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MTIuMDIzMzApIAoqIFNHQU4g
LSBbQ1QgSW1hZ2UgRW5oYW5jZW1lbnQgVXNpbmcgU3RhY2tlZCBHZW5lcmF0
aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmtzIGFuZCBUcmFuc2ZlciBMZWFybmlu
ZyBmb3IgTGVzaW9uIFNlZ21lbnRhdGlvbiBJbXByb3ZlbWVudF0oaHR0cHM6
Ly9hcnhpdi5vcmcvYWJzLzE4MDcuMDcxNDQpIAoqIHNHQU4gIC0gW0dlbmVy
YXRpdmUgQWR2ZXJzYXJpYWwgVHJhaW5pbmcgZm9yIE1SQSBJbWFnZSBTeW50
aGVzaXMgVXNpbmcgTXVsdGktQ29udHJhc3QgTVJJXShodHRwczovL2FyeGl2
Lm9yZy9hYnMvMTgwNC4wNDM2NikgCiogU2lmdGluZ0dBTiAtIFtTaWZ0aW5n
R0FOOiBHZW5lcmF0aW5nIGFuZCBTaWZ0aW5nIExhYmVsZWQgU2FtcGxlcyB0
byBJbXByb3ZlIHRoZSBSZW1vdGUgU2Vuc2luZyBJbWFnZSBTY2VuZSBDbGFz
c2lmaWNhdGlvbiBCYXNlbGluZSBpbiB2aXRyb10oaHR0cHM6Ly9hcnhpdi5v
cmcvYWJzLzE4MDkuMDQ5ODUpIAoqIFNpR0FOIC0gW1NpR0FOOiBTaWFtZXNl
IEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29yayBmb3IgSWRlbnRpdHkt
UHJlc2VydmluZyBGYWNlIEhhbGx1Y2luYXRpb25dKGh0dHBzOi8vYXJ4aXYu
b3JnL2Ficy8xODA3LjA4MzcwKSAKKiBTaW1HQU4gLSBbTGVhcm5pbmcgZnJv
bSBTaW11bGF0ZWQgYW5kIFVuc3VwZXJ2aXNlZCBJbWFnZXMgdGhyb3VnaCBB
ZHZlcnNhcmlhbCBUcmFpbmluZ10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE2
MTIuMDc4MjgpIAoqIFNpc0dBTiAtIFtTZW1hbnRpYyBJbWFnZSBTeW50aGVz
aXMgdmlhIEFkdmVyc2FyaWFsIExlYXJuaW5nXShodHRwczovL2FyeGl2Lm9y
Zy9hYnMvMTcwNy4wNjg3MykgCiogU2tldGNoZXItUmVmaW5lciBHQU4gLSBb
TGVhcm5pbmcgTXllbGluIENvbnRlbnQgaW4gTXVsdGlwbGUgU2NsZXJvc2lz
IGZyb20gTXVsdGltb2RhbCBNUkkgdGhyb3VnaCBBZHZlcnNhcmlhbCBUcmFp
bmluZ10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDQuMDgwMzkpIAoqIFNr
ZXRjaEdBTiAtIFtBZHZlcnNhcmlhbCBUcmFpbmluZyBGb3IgU2tldGNoIFJl
dHJpZXZhbF0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE2MDcuMDI3NDgpIAoq
IFNrZXRjaHlHQU4gLSBbU2tldGNoeUdBTjogVG93YXJkcyBEaXZlcnNlIGFu
ZCBSZWFsaXN0aWMgU2tldGNoIHRvIEltYWdlIFN5bnRoZXNpc10oaHR0cHM6
Ly9hcnhpdi5vcmcvYWJzLzE4MDEuMDI3NTMpIAoqIFNraXAtVGhvdWdodCBH
QU4gLSBbR2VuZXJhdGluZyBUZXh0IHRocm91Z2ggQWR2ZXJzYXJpYWwgVHJh
aW5pbmcgdXNpbmcgU2tpcC1UaG91Z2h0IFZlY3RvcnNdKGh0dHBzOi8vYXJ4
aXYub3JnL2Ficy8xODA4LjA4NzAzKSAKKiBTTC1HQU4gLSBbU2VtaS1MYXRl
bnQgR0FOOiBMZWFybmluZyB0byBnZW5lcmF0ZSBhbmQgbW9kaWZ5IGZhY2lh
bCBpbWFnZXMgZnJvbSBhdHRyaWJ1dGVzXShodHRwczovL2FyeGl2Lm9yZy9h
YnMvMTcwNC4wMjE2NikgCiogU0xTUiAtIFtTcGFyc2UgTGFiZWwgU21vb3Ro
aW5nIGZvciBTZW1pLXN1cGVydmlzZWQgUGVyc29uIFJlLUlkZW50aWZpY2F0
aW9uXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwOS4wNDk3NikgCiogU04t
RENHQU4gLSBbR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3JrcyBmb3Ig
VW5zdXBlcnZpc2VkIE9iamVjdCBDby1sb2NhbGl6YXRpb25dKGh0dHBzOi8v
YXJ4aXYub3JnL2Ficy8xODA2LjAwMjM2KSAKKiBTTi1HQU4gLSBbU3BlY3Ry
YWwgTm9ybWFsaXphdGlvbiBmb3IgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBO
ZXR3b3Jrc10oaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8wQjhI
WjUwRFBnUjNlU1ZWNllsRjNYelF4U2pRL3ZpZXcpIChbZ2l0aHViXShodHRw
czovL2dpdGh1Yi5jb20vcGZuZXQtcmVzZWFyY2gvY2hhaW5lci1nYW4tbGli
KSkKKiBTTi1QYXRjaEdBTiAtIFtGcmVlLUZvcm0gSW1hZ2UgSW5wYWludGlu
ZyB3aXRoIEdhdGVkIENvbnZvbHV0aW9uXShodHRwczovL2FyeGl2Lm9yZy9h
YnMvMTgwNi4wMzU4OSkgCiogU29ib2xldiBHQU4gLSBbU29ib2xldiBHQU5d
KGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzExLjA0ODk0KSAKKiBTb2NpYWwg
R0FOIC0gW1NvY2lhbCBHQU46IFNvY2lhbGx5IEFjY2VwdGFibGUgVHJhamVj
dG9yaWVzIHdpdGggR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3Jrc10o
aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDMuMTA4OTIpIAoqIFNvZnRtYXgg
R0FOIC0gW1NvZnRtYXggR0FOXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcw
NC4wNjE5MSkgCiogU29QaGllIC0gW1NvUGhpZTogQW4gQXR0ZW50aXZlIEdB
TiBmb3IgUHJlZGljdGluZyBQYXRocyBDb21wbGlhbnQgdG8gU29jaWFsIGFu
ZCBQaHlzaWNhbCBDb25zdHJhaW50c10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJz
LzE4MDYuMDE0ODIpIAoqIHNwZWVjaC1kcml2ZW4gYW5pbWF0aW9uIEdBTiAt
IFtFbmQtdG8tRW5kIFNwZWVjaC1Ecml2ZW4gRmFjaWFsIEFuaW1hdGlvbiB3
aXRoIFRlbXBvcmFsIEdBTnNdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA1
LjA5MzEzKSAKKiBTcGlrZS1HQU4gLSBbU3ludGhlc2l6aW5nIHJlYWxpc3Rp
YyBuZXVyYWwgcG9wdWxhdGlvbiBhY3Rpdml0eSBwYXR0ZXJucyB1c2luZyBH
ZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmtzXShodHRwczovL2FyeGl2
Lm9yZy9hYnMvMTgwMy4wMDMzOCkgCiogU3BsaXR0aW5nIEdBTiAtIFtDbGFz
cy1TcGxpdHRpbmcgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3Jrc10o
aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDkuMDczNTkpIAoqIFNSLUNOTi1W
QUUtR0FOIC0gW1NlbWktUmVjdXJyZW50IENOTi1iYXNlZCBWQUUtR0FOIGZv
ciBTZXF1ZW50aWFsIERhdGEgR2VuZXJhdGlvbl0oaHR0cHM6Ly9hcnhpdi5v
cmcvYWJzLzE4MDYuMDA1MDkpIChbZ2l0aHViXShodHRwczovL2dpdGh1Yi5j
b20vbWFrYmFyaTcvU1ItQ05OLVZBRS1HQU4pKQoqIFNSR0FOIC0gW1Bob3Rv
LVJlYWxpc3RpYyBTaW5nbGUgSW1hZ2UgU3VwZXItUmVzb2x1dGlvbiBVc2lu
ZyBhIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya10oaHR0cHM6Ly9h
cnhpdi5vcmcvYWJzLzE2MDkuMDQ4MDIpIAoqIFNSUEdBTiAtIFtTUlBHQU46
IFBlcmNlcHR1YWwgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3JrIGZv
ciBTaW5nbGUgSW1hZ2UgU3VwZXIgUmVzb2x1dGlvbl0oaHR0cHM6Ly9hcnhp
di5vcmcvYWJzLzE3MTIuMDU5MjcpIAoqIFNTLUdBTiAtIFtTZW1pLXN1cGVy
dmlzZWQgQ29uZGl0aW9uYWwgR0FOc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJz
LzE3MDguMDU3ODkpIAoqIHNzLUluZm9HQU4gLSBbR3VpZGluZyBJbmZvR0FO
IHdpdGggU2VtaS1TdXBlcnZpc2lvbl0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJz
LzE3MDcuMDQ0ODcpIAoqIFNTR0FOIC0gW1NTR0FOOiBTZWN1cmUgU3RlZ2Fu
b2dyYXBoeSBCYXNlZCBvbiBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdv
cmtzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwNy4wMTYxMykgCiogU1NM
LUdBTiAtIFtTZW1pLVN1cGVydmlzZWQgTGVhcm5pbmcgd2l0aCBDb250ZXh0
LUNvbmRpdGlvbmFsIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3Nd
KGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNjExLjA2NDMwdjEpIAoqIFNULUNH
QU4gLSBbU3RhY2tlZCBDb25kaXRpb25hbCBHZW5lcmF0aXZlIEFkdmVyc2Fy
aWFsIE5ldHdvcmtzIGZvciBKb2ludGx5IExlYXJuaW5nIFNoYWRvdyBEZXRl
Y3Rpb24gYW5kIFNoYWRvdyBSZW1vdmFsXShodHRwczovL2FyeGl2Lm9yZy9h
YnMvMTcxMi4wMjQ3OCkgCiogU1QtR0FOIC0gW1N0eWxlIFRyYW5zZmVyIEdl
bmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3M6IExlYXJuaW5nIHRvIFBs
YXkgQ2hlc3MgRGlmZmVyZW50bHldKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8x
NzAyLjA2NzYyKSAKKiBTVC1HQU4gLSBbU1QtR0FOOiBTcGF0aWFsIFRyYW5z
Zm9ybWVyIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3MgZm9yIElt
YWdlIENvbXBvc2l0aW5nXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwMy4w
MTgzNykgCiogU3RhY2tHQU4gLSBbU3RhY2tHQU46IFRleHQgdG8gUGhvdG8t
cmVhbGlzdGljIEltYWdlIFN5bnRoZXNpcyB3aXRoIFN0YWNrZWQgR2VuZXJh
dGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcv
YWJzLzE2MTIuMDMyNDJ2MSkgKFtnaXRodWJdKGh0dHBzOi8vZ2l0aHViLmNv
bS9oYW56aGFuZ2dpdC9TdGFja0dBTikpCiogU3RhaW5HQU4gLSBbU3RhaW5H
QU46IFN0YWluIFN0eWxlIFRyYW5zZmVyIGZvciBEaWdpdGFsIEhpc3RvbG9n
aWNhbCBJbWFnZXNdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA0LjAxNjAx
KSAKKiBTdGFyR0FOIC0gW1N0YXJHQU46IFVuaWZpZWQgR2VuZXJhdGl2ZSBB
ZHZlcnNhcmlhbCBOZXR3b3JrcyBmb3IgTXVsdGktRG9tYWluIEltYWdlLXRv
LUltYWdlIFRyYW5zbGF0aW9uXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcx
MS4wOTAyMCkgKFtnaXRodWJdKGh0dHBzOi8vZ2l0aHViLmNvbS95dW5qZXkv
U3RhckdBTikpCiogU3RhckdBTi1WQyAtIFtTdGFyR0FOLVZDOiBOb24tcGFy
YWxsZWwgbWFueS10by1tYW55IHZvaWNlIGNvbnZlcnNpb24gd2l0aCBzdGFy
IGdlbmVyYXRpdmUgYWR2ZXJzYXJpYWwgbmV0d29ya3MgXShodHRwczovL2Fy
eGl2Lm9yZy9hYnMvMTgwNi4wMjE2OSkgCiogU3RlaW5HQU4gLSBbTGVhcm5p
bmcgRGVlcCBFbmVyZ3kgTW9kZWxzOiBDb250cmFzdGl2ZSBEaXZlcmdlbmNl
IHZzLiBBbW9ydGl6ZWQgTUxFXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcw
Ny4wMDc5NykgCiogU3RlcEdBTiAtIFtJbXByb3ZpbmcgQ29uZGl0aW9uYWwg
U2VxdWVuY2UgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3JrcyBieSBT
dGVwd2lzZSBFdmFsdWF0aW9uXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgw
OC4wNTU5OSkgCiogU3VwZXItRkFOIC0gW1N1cGVyLUZBTjogSW50ZWdyYXRl
ZCBmYWNpYWwgbGFuZG1hcmsgbG9jYWxpemF0aW9uIGFuZCBzdXBlci1yZXNv
bHV0aW9uIG9mIHJlYWwtd29ybGQgbG93IHJlc29sdXRpb24gZmFjZXMgaW4g
YXJiaXRyYXJ5IHBvc2VzIHdpdGggR0FOc10oaHR0cHM6Ly9hcnhpdi5vcmcv
YWJzLzE3MTIuMDI3NjUpIAoqIFNWU0dBTiAtIFtTVlNHQU46IFNpbmdpbmcg
Vm9pY2UgU2VwYXJhdGlvbiB2aWEgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBO
ZXR3b3JrXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcxMC4xMTQyOCkgCiog
U1dHQU4gLSBbU29sdmluZyBBcHByb3hpbWF0ZSBXYXNzZXJzdGVpbiBHQU5z
IHRvIFN0YXRpb25hcml0eV0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDIu
MDgyNDkpIAoqIFN5bmNHQU4gLSBbU3luY0dBTjogU3luY2hyb25pemUgdGhl
IExhdGVudCBTcGFjZSBvZiBDcm9zcy1tb2RhbCBHZW5lcmF0aXZlIEFkdmVy
c2FyaWFsIE5ldHdvcmtzXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgwNC4w
MDQxMCkgCiogU14yR0FOIC0gW0dlbmVyYXRpdmUgSW1hZ2UgTW9kZWxpbmcg
dXNpbmcgU3R5bGUgYW5kIFN0cnVjdHVyZSBBZHZlcnNhcmlhbCBOZXR3b3Jr
c10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE2MDMuMDU2MzF2MikgCiogVDJO
ZXQgLSBbVDJOZXQ6IFN5bnRoZXRpYy10by1SZWFsaXN0aWMgVHJhbnNsYXRp
b24gZm9yIFNvbHZpbmcgU2luZ2xlLUltYWdlIERlcHRoIEVzdGltYXRpb24g
VGFza3NdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA4LjAxNDU0KSAKKiB0
YWJsZS1HQU4gLSBbRGF0YSBTeW50aGVzaXMgYmFzZWQgb24gR2VuZXJhdGl2
ZSBBZHZlcnNhcmlhbCBOZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJz
LzE4MDYuMDMzODQpIAoqIFRBQy1HQU4gLSBbVEFDLUdBTiAtIFRleHQgQ29u
ZGl0aW9uZWQgQXV4aWxpYXJ5IENsYXNzaWZpZXIgR2VuZXJhdGl2ZSBBZHZl
cnNhcmlhbCBOZXR3b3JrXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwMy4w
NjQxMnYyKSAoW2dpdGh1Yl0oaHR0cHM6Ly9naXRodWIuY29tL2Rhc2hheXVz
aG1hbi9UQUMtR0FOKSkKKiBUQU4gLSBbT3V0bGluZSBDb2xvcml6YXRpb24g
dGhyb3VnaCBUYW5kZW0gQWR2ZXJzYXJpYWwgTmV0d29ya3NdKGh0dHBzOi8v
YXJ4aXYub3JnL2Ficy8xNzA0LjA4ODM0KSAKKiB0Y0dBTiAtIFtDcm9zcy1t
b2RhbCBIYWxsdWNpbmF0aW9uIGZvciBGZXctc2hvdCBGaW5lLWdyYWluZWQg
UmVjb2duaXRpb25dKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA2LjA1MTQ3
KSAKKiBURC1HQU4gLSBbVGFzayBEcml2ZW4gR2VuZXJhdGl2ZSBNb2RlbGlu
ZyBmb3IgVW5zdXBlcnZpc2VkIERvbWFpbiBBZGFwdGF0aW9uOiBBcHBsaWNh
dGlvbiB0byBYLXJheSBJbWFnZSBTZWdtZW50YXRpb25dKGh0dHBzOi8vYXJ4
aXYub3JnL2Ficy8xODA2LjA3MjAxKSAKKiB0ZW1wQ3ljbGVHQU4gLSBbSW1w
cm92aW5nIFN1cmdpY2FsIFRyYWluaW5nIFBoYW50b21zIGJ5IEh5cGVycmVh
bGlzbTogRGVlcCBVbnBhaXJlZCBJbWFnZS10by1JbWFnZSBUcmFuc2xhdGlv
biBmcm9tIFJlYWwgU3VyZ2VyaWVzXShodHRwczovL2FyeGl2Lm9yZy9hYnMv
MTgwNi4wMzYyNykgCiogdGVtcG9HQU4gLSBbdGVtcG9HQU46IEEgVGVtcG9y
YWxseSBDb2hlcmVudCwgVm9sdW1ldHJpYyBHQU4gZm9yIFN1cGVyLXJlc29s
dXRpb24gRmx1aWQgRmxvd10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDEu
MDk3MTApIAoqIFRlcXVpbGFHQU4gLSBbVGVxdWlsYUdBTjogSG93IHRvIGVh
c2lseSBpZGVudGlmeSBHQU4gc2FtcGxlc10oaHR0cHM6Ly9hcnhpdi5vcmcv
YWJzLzE4MDcuMDQ5MTkpIAoqIFRleHQyU2hhcGUgLSBbVGV4dDJTaGFwZTog
R2VuZXJhdGluZyBTaGFwZXMgZnJvbSBOYXR1cmFsIExhbmd1YWdlIGJ5IExl
YXJuaW5nIEpvaW50IEVtYmVkZGluZ3NdKGh0dHBzOi8vYXJ4aXYub3JnL2Fi
cy8xODAzLjA4NDk1KSAKKiB0ZXh0R0FOIC0gW0dlbmVyYXRpbmcgVGV4dCB2
aWEgQWR2ZXJzYXJpYWwgVHJhaW5pbmddKGh0dHBzOi8vemhlZ2FuMjcuZ2l0
aHViLmlvL1BhcGVycy90ZXh0R0FOX25pcHMyMDE2X3dvcmtzaG9wLnBkZikg
CiogVGV4dHVyZUdBTiAtIFtUZXh0dXJlR0FOOiBDb250cm9sbGluZyBEZWVw
IEltYWdlIFN5bnRoZXNpcyB3aXRoIFRleHR1cmUgUGF0Y2hlc10oaHR0cHM6
Ly9hcnhpdi5vcmcvYWJzLzE3MDYuMDI4MjMpIAoqIFRHQU4gLSBbVGVtcG9y
YWwgR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXRzXShodHRwczovL2FyeGl2
Lm9yZy9hYnMvMTYxMS4wNjYyNHYxKSAKKiBUR0FOIC0gW1RlbnNvcml6aW5n
IEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0c10oaHR0cHM6Ly9hcnhpdi5v
cmcvYWJzLzE3MTAuMTA3NzIpIAoqIFRHQU4gLSBbVGVuc29yLUdlbmVyYXRp
dmUgQWR2ZXJzYXJpYWwgTmV0d29yayB3aXRoIFR3by1kaW1lbnNpb25hbCBT
cGFyc2UgQ29kaW5nOiBBcHBsaWNhdGlvbiB0byBSZWFsLXRpbWUgSW5kb29y
IExvY2FsaXphdGlvbl0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MTEuMDI2
NjYpIAoqIFRHQU5zLUMgLSBbVG8gQ3JlYXRlIFdoYXQgWW91IFRlbGw6IEdl
bmVyYXRpbmcgVmlkZW9zIGZyb20gQ2FwdGlvbnNdKGh0dHBzOi8vYXJ4aXYu
b3JnL2Ficy8xODA0LjA4MjY0KSAKKiB0aW55LUdBTiAtIFtBbmFseXNpcyBv
ZiBOb25hdXRvbm9tb3VzIEFkdmVyc2FyaWFsIFN5c3RlbXNdKGh0dHBzOi8v
YXJ4aXYub3JnL2Ficy8xODAzLjA1MDQ1KSAKKiBUUC1HQU4gLSBbQmV5b25k
IEZhY2UgUm90YXRpb246IEdsb2JhbCBhbmQgTG9jYWwgUGVyY2VwdGlvbiBH
QU4gZm9yIFBob3RvcmVhbGlzdGljIGFuZCBJZGVudGl0eSBQcmVzZXJ2aW5n
IEZyb250YWwgVmlldyBTeW50aGVzaXNdKGh0dHBzOi8vYXJ4aXYub3JnL2Fi
cy8xNzA0LjA0MDg2KSAKKiBUcmVlR0FOIC0gW1RyZWVHQU46IFN5bnRheC1B
d2FyZSBTZXF1ZW5jZSBHZW5lcmF0aW9uIHdpdGggR2VuZXJhdGl2ZSBBZHZl
cnNhcmlhbCBOZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDgu
MDc1ODIpIAoqIFRyaXBsZS1HQU4gLSBbVHJpcGxlIEdlbmVyYXRpdmUgQWR2
ZXJzYXJpYWwgTmV0c10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDMuMDIy
OTF2MikgCiogdHJpcGxldEdBTiAtIFtUcmlwbGV0R0FOOiBUcmFpbmluZyBH
ZW5lcmF0aXZlIE1vZGVsIHdpdGggVHJpcGxldCBMb3NzXShodHRwczovL2Fy
eGl2Lm9yZy9hYnMvMTcxMS4wNTA4NCkgCiogVFYtR0FOIC0gW1RWLUdBTjog
R2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3JrIEJhc2VkIFRoZXJtYWwg
dG8gVmlzaWJsZSBGYWNlIFJlY29nbml0aW9uXShodHRwczovL2FyeGl2Lm9y
Zy9hYnMvMTcxMi4wMjUxNCkgCiogVHdpbi1HQU4gLSBbVHdpbi1HQU4gLS0g
VW5wYWlyZWQgQ3Jvc3MtRG9tYWluIEltYWdlIFRyYW5zbGF0aW9uIHdpdGgg
V2VpZ2h0LVNoYXJpbmcgR0FOc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4
MDkuMDA5NDYpIAoqIFVHQUNIIC0gW1Vuc3VwZXJ2aXNlZCBHZW5lcmF0aXZl
IEFkdmVyc2FyaWFsIENyb3NzLW1vZGFsIEhhc2hpbmddKGh0dHBzOi8vYXJ4
aXYub3JnL2Ficy8xNzEyLjAwMzU4KSAKKiBVR0FOIC0gW0VuaGFuY2luZyBV
bmRlcndhdGVyIEltYWdlcnkgdXNpbmcgR2VuZXJhdGl2ZSBBZHZlcnNhcmlh
bCBOZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDEuMDQwMTEp
IAoqIFVuaW0yaW0gLSBbVW5zdXBlcnZpc2VkIEltYWdlLXRvLUltYWdlIFRy
YW5zbGF0aW9uIHdpdGggR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3Jr
cyBdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzAxLjAyNjc2KSAoW2dpdGh1
Yl0oaHR0cDovL2dpdGh1Yi5jb20venNkb25naGFvL1Vuc3VwLUltMkltKSkK
KiBVTklUIC0gW1Vuc3VwZXJ2aXNlZCBJbWFnZS10by1pbWFnZSBUcmFuc2xh
dGlvbiBOZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDMuMDA4
NDgpIChbZ2l0aHViXShodHRwczovL2dpdGh1Yi5jb20vbWluZ3l1bGl1dHcv
VU5JVCkpCiogVW5yb2xsZWQgR0FOIC0gW1Vucm9sbGVkIEdlbmVyYXRpdmUg
QWR2ZXJzYXJpYWwgTmV0d29ya3NdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8x
NjExLjAyMTYzKSAoW2dpdGh1Yl0oaHR0cHM6Ly9naXRodWIuY29tL3Bvb2xp
by91bnJvbGxlZF9nYW4pKQoqIFVULVNDQS1HQU4gLSBbU3BhdGlhbCBJbWFn
ZSBTdGVnYW5vZ3JhcGh5IEJhc2VkIG9uIEdlbmVyYXRpdmUgQWR2ZXJzYXJp
YWwgTmV0d29ya10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDQuMDc5Mzkp
IAoqIFVWLUdBTiAtIFtVVi1HQU46IEFkdmVyc2FyaWFsIEZhY2lhbCBVViBN
YXAgQ29tcGxldGlvbiBmb3IgUG9zZS1pbnZhcmlhbnQgRmFjZSBSZWNvZ25p
dGlvbl0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MTIuMDQ2OTUpIAoqIFZB
LUdBTiAtIFtWaXN1YWwgRmVhdHVyZSBBdHRyaWJ1dGlvbiB1c2luZyBXYXNz
ZXJzdGVpbiBHQU5zXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcxMS4wODk5
OCkgCiogVkFDK0dBTiAgLSBbVmVyc2F0aWxlIEF1eGlsaWFyeSBDbGFzc2lm
aWVyIHdpdGggR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3JrIChWQUMr
R0FOKSwgTXVsdGkgQ2xhc3MgU2NlbmFyaW9zXShodHRwczovL2FyeGl2Lm9y
Zy9hYnMvMTgwNi4wNzc1MSkgCiogVkFFLUdBTiAtIFtBdXRvZW5jb2Rpbmcg
YmV5b25kIHBpeGVscyB1c2luZyBhIGxlYXJuZWQgc2ltaWxhcml0eSBtZXRy
aWNdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNTEyLjA5MzAwKSAKKiBWYXJp
R0FOIC0gW011bHRpLVZpZXcgSW1hZ2UgR2VuZXJhdGlvbiBmcm9tIGEgU2lu
Z2xlLVZpZXddKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzA0LjA0ODg2KSAK
KiBWQVctR0FOIC0gW1ZvaWNlIENvbnZlcnNpb24gZnJvbSBVbmFsaWduZWQg
Q29ycG9yYSB1c2luZyBWYXJpYXRpb25hbCBBdXRvZW5jb2RpbmcgV2Fzc2Vy
c3RlaW4gR2VuZXJhdGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3Jrc10oaHR0cHM6
Ly9hcnhpdi5vcmcvYWJzLzE3MDQuMDA4NDkpIAoqIFZFRUdBTiAtIFtWRUVH
QU46IFJlZHVjaW5nIE1vZGUgQ29sbGFwc2UgaW4gR0FOcyB1c2luZyBJbXBs
aWNpdCBWYXJpYXRpb25hbCBMZWFybmluZ10oaHR0cHM6Ly9hcnhpdi5vcmcv
YWJzLzE3MDUuMDc3NjEpIChbZ2l0aHViXShodHRwczovL2dpdGh1Yi5jb20v
YWthc2hnaXQvVkVFR0FOKSkKKiBWR0FOIC0gW0dlbmVyYXRpbmcgVmlkZW9z
IHdpdGggU2NlbmUgRHluYW1pY3NdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8x
NjA5LjAyNjEyKSAoW2dpdGh1Yl0oaHR0cHM6Ly9naXRodWIuY29tL2N2b25k
cmljay92aWRlb2dhbikpCiogVkdBTiAtIFtHZW5lcmF0aXZlIEFkdmVyc2Fy
aWFsIE5ldHdvcmtzIGFzIFZhcmlhdGlvbmFsIFRyYWluaW5nIG9mIEVuZXJn
eSBCYXNlZCBNb2RlbHNdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNjExLjAx
Nzk5KSAoW2dpdGh1Yl0oaHR0cHM6Ly9naXRodWIuY29tL1NodWFuZ2ZlaS92
Z2FuKSkKKiBWR0FOIC0gW1RleHQgR2VuZXJhdGlvbiBCYXNlZCBvbiBHZW5l
cmF0aXZlIEFkdmVyc2FyaWFsIE5ldHMgd2l0aCBMYXRlbnQgVmFyaWFibGVd
KGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzEyLjAwMTcwKSAKKiBWaUdBTiAt
IFtJbWFnZSBHZW5lcmF0aW9uIGFuZCBFZGl0aW5nIHdpdGggVmFyaWF0aW9u
YWwgSW5mbyBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmtzXShodHRw
czovL2FyeGl2Lm9yZy9hYnMvMTcwMS4wNDU2OHYxKSAKKiBWSUdBTiAtIFtW
SUdBTjogTWlzc2luZyBWaWV3IEltcHV0YXRpb24gd2l0aCBHZW5lcmF0aXZl
IEFkdmVyc2FyaWFsIE5ldHdvcmtzXShodHRwczovL2FyeGl2Lm9yZy9hYnMv
MTcwOC4wNjcyNCkgCiogVm9pY2VHQU4gLSBbVm9pY2UgSW1wZXJzb25hdGlv
biB1c2luZyBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5ldHdvcmtzIF0oaHR0
cDovL2FyeGl2Lm9yZy9hYnMvMTgwMi4wNjg0MCkgCiogVk9TLUdBTiAtIFtW
T1MtR0FOOiBBZHZlcnNhcmlhbCBMZWFybmluZyBvZiBWaXN1YWwtVGVtcG9y
YWwgRHluYW1pY3MgZm9yIFVuc3VwZXJ2aXNlZCBEZW5zZSBQcmVkaWN0aW9u
IGluIFZpZGVvc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDMuMDkwOTIp
IAoqIFZSQUwgLSBbVmFyaWFuY2UgUmVndWxhcml6aW5nIEFkdmVyc2FyaWFs
IExlYXJuaW5nXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwNy4wMDMwOSkg
CiogV2F0ZXJHQU4gLSBbV2F0ZXJHQU46IFVuc3VwZXJ2aXNlZCBHZW5lcmF0
aXZlIE5ldHdvcmsgdG8gRW5hYmxlIFJlYWwtdGltZSBDb2xvciBDb3JyZWN0
aW9uIG9mIE1vbm9jdWxhciBVbmRlcndhdGVyIEltYWdlc10oaHR0cHM6Ly9h
cnhpdi5vcmcvYWJzLzE3MDIuMDczOTJ2MSkgCiogV2F2ZUdBTiAtIFtTeW50
aGVzaXppbmcgQXVkaW8gd2l0aCBHZW5lcmF0aXZlIEFkdmVyc2FyaWFsIE5l
dHdvcmtzIF0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4MDIuMDQyMDgpIAoq
IFdhdmVsZXRHTENBLUdBTiAtIFtHbG9iYWwgYW5kIExvY2FsIENvbnNpc3Rl
bnQgV2F2ZWxldC1kb21haW4gQWdlIFN5bnRoZXNpc10oaHR0cHM6Ly9hcnhp
di5vcmcvYWJzLzE4MDkuMDc3NjQpIAoqIHdlR0FOIC0gW0dlbmVyYXRpdmUg
QWR2ZXJzYXJpYWwgTmV0cyBmb3IgTXVsdGlwbGUgVGV4dCBDb3Jwb3JhXSho
dHRwczovL2FyeGl2Lm9yZy9hYnMvMTcxMi4wOTEyNykgCiogV0dBTiAtIFtX
YXNzZXJzdGVpbiBHQU5dKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzAxLjA3
ODc1djIpIChbZ2l0aHViXShodHRwczovL2dpdGh1Yi5jb20vbWFydGluYXJq
b3Zza3kvV2Fzc2Vyc3RlaW5HQU4pKQoqIFdHQU4tQ0xTIC0gW1RleHQgdG8g
SW1hZ2UgU3ludGhlc2lzIFVzaW5nIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwg
TmV0d29ya3NdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xODA1LjAwNjc2KSAK
KiBXR0FOLUdQIC0gW0ltcHJvdmVkIFRyYWluaW5nIG9mIFdhc3NlcnN0ZWlu
IEdBTnNdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzA0LjAwMDI4KSAoW2dp
dGh1Yl0oaHR0cHM6Ly9naXRodWIuY29tL2lndWwyMjIvaW1wcm92ZWRfd2dh
bl90cmFpbmluZykpCiogV0dBTi1MMSAtIFtTdWJzYW1wbGVkIFR1cmJ1bGVu
Y2UgUmVtb3ZhbCBOZXR3b3JrXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTgw
Ny4wNDQxOCkgCiogV1MtR0FOIC0gW1dlYWtseSBTdXBlcnZpc2VkIEdlbmVy
YXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3MgZm9yIDNEIFJlY29uc3RydWN0
aW9uIF0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDUuMTA5MDQpIAoqIFgt
R0FOcyAtIFtYLUdBTnM6IEltYWdlIFJlY29uc3RydWN0aW9uIE1hZGUgRWFz
eSBmb3IgRXh0cmVtZSBDYXNlc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE4
MDguMDQ0MzIpIAoqIFhHQU4gLSBbWEdBTjogVW5zdXBlcnZpc2VkIEltYWdl
LXRvLUltYWdlIFRyYW5zbGF0aW9uIGZvciBtYW55LXRvLW1hbnkgTWFwcGlu
Z3NdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzExLjA1MTM5KSAKKiBaaXBO
ZXQtR0FOIC0gW1ppcE5ldC1HQU46IEluZmVycmluZyBGaW5lLWdyYWluZWQg
TW9iaWxlIFRyYWZmaWMgUGF0dGVybnMgdmlhIGEgR2VuZXJhdGl2ZSBBZHZl
cnNhcmlhbCBOZXVyYWwgTmV0d29ya10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJz
LzE3MTEuMDI0MTMpIAoqIM6xLUdBTiAtIFtWYXJpYXRpb25hbCBBcHByb2Fj
aGVzIGZvciBBdXRvLUVuY29kaW5nIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwg
TmV0d29ya3NdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzA2LjA0OTg3KSAo
W2dpdGh1Yl0oaHR0cHM6Ly9naXRodWIuY29tL3ZpY3Rvci1zaGVwYXJkc29u
L2FscGhhLUdBTikpCiogzrItR0FOIC0gW0FubmVhbGVkIEdlbmVyYXRpdmUg
QWR2ZXJzYXJpYWwgTmV0d29ya3NdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8x
NzA1LjA3NTA1KSAKKiDOlC1HQU4gLSBbVHJpYW5nbGUgR2VuZXJhdGl2ZSBB
ZHZlcnNhcmlhbCBOZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3
MDkuMDY1NDgpIAoK
",,7186,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'shap',74505259,b'A unified approach to explain the output of any machine learning model.',b'Jupyter Notebook',417,7186,,215,False,b'https://api.github.com/repos/slundberg/shap/forks',"Cgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iaHR0cHM6Ly9yYXcu
Z2l0aHVidXNlcmNvbnRlbnQuY29tL3NsdW5kYmVyZy9zaGFwL21hc3Rlci9k
b2NzL2FydHdvcmsvc2hhcF9kaWFncmFtLnBuZyIgd2lkdGg9IjQwMCIgLz4K
PC9wPgoKLS0tCjxhIGhyZWY9Imh0dHBzOi8vdHJhdmlzLWNpLm9yZy9zbHVu
ZGJlcmcvc2hhcCI+PGltZyBzcmM9Imh0dHBzOi8vdHJhdmlzLWNpLm9yZy9z
bHVuZGJlcmcvc2hhcC5zdmc/YnJhbmNoPW1hc3RlciI+PC9hPgpbIVtCaW5k
ZXJdKGh0dHBzOi8vbXliaW5kZXIub3JnL2JhZGdlX2xvZ28uc3ZnKV0oaHR0
cHM6Ly9teWJpbmRlci5vcmcvdjIvZ2gvc2x1bmRiZXJnL3NoYXAvbWFzdGVy
KQoKKipTSEFQIChTSGFwbGV5IEFkZGl0aXZlIGV4UGxhbmF0aW9ucykqKiBp
cyBhIHVuaWZpZWQgYXBwcm9hY2ggdG8gZXhwbGFpbiB0aGUgb3V0cHV0IG9m
IGFueSBtYWNoaW5lIGxlYXJuaW5nIG1vZGVsLiBTSEFQIGNvbm5lY3RzIGdh
bWUgdGhlb3J5IHdpdGggbG9jYWwgZXhwbGFuYXRpb25zLCB1bml0aW5nIHNl
dmVyYWwgcHJldmlvdXMgbWV0aG9kcyBbMS03XSBhbmQgcmVwcmVzZW50aW5n
IHRoZSBvbmx5IHBvc3NpYmxlIGNvbnNpc3RlbnQgYW5kIGxvY2FsbHkgYWNj
dXJhdGUgYWRkaXRpdmUgZmVhdHVyZSBhdHRyaWJ1dGlvbiBtZXRob2QgYmFz
ZWQgb24gZXhwZWN0YXRpb25zIChzZWUgb3VyIFtwYXBlcnNdKCNjaXRhdGlv
bnMpIGZvciBkZXRhaWxzIGFuZCBjaXRhdGlvbnMpLgoKCgojIyBJbnN0YWxs
CgpTSEFQIGNhbiBiZSBpbnN0YWxsZWQgZnJvbSBlaXRoZXIgW1B5UEldKGh0
dHBzOi8vcHlwaS5vcmcvcHJvamVjdC9zaGFwKSBvciBbY29uZGEtZm9yZ2Vd
KGh0dHBzOi8vYW5hY29uZGEub3JnL2NvbmRhLWZvcmdlL3NoYXApOgoKPHBy
ZT4KcGlwIGluc3RhbGwgc2hhcAo8aT5vcjwvaT4KY29uZGEgaW5zdGFsbCAt
YyBjb25kYS1mb3JnZSBzaGFwCjwvcHJlPgoKIyMgVHJlZSBlbnNlbWJsZSBl
eGFtcGxlIHdpdGggVHJlZUV4cGxhaW5lciAoWEdCb29zdC9MaWdodEdCTS9D
YXRCb29zdC9zY2lraXQtbGVhcm4vcHlzcGFyayBtb2RlbHMpCgpXaGlsZSBT
SEFQIHZhbHVlcyBjYW4gZXhwbGFpbiB0aGUgb3V0cHV0IG9mIGFueSBtYWNo
aW5lIGxlYXJuaW5nIG1vZGVsLCB3ZSBoYXZlIGRldmVsb3BlZCBhIGhpZ2gt
c3BlZWQgZXhhY3QgYWxnb3JpdGhtIGZvciB0cmVlIGVuc2VtYmxlIG1ldGhv
ZHMgKFtUcmVlIFNIQVAgYXJYaXYgcGFwZXJdKGh0dHBzOi8vYXJ4aXYub3Jn
L2Ficy8xODAyLjAzODg4KSkuIEZhc3QgQysrIGltcGxlbWVudGF0aW9ucyBh
cmUgc3VwcG9ydGVkIGZvciAqWEdCb29zdCosICpMaWdodEdCTSosICpDYXRC
b29zdCosICpzY2lraXQtbGVhcm4qIGFuZCAqcHlzcGFyayogdHJlZSBtb2Rl
bHM6CgpgYGBweXRob24KaW1wb3J0IHhnYm9vc3QKaW1wb3J0IHNoYXAKCiMg
bG9hZCBKUyB2aXN1YWxpemF0aW9uIGNvZGUgdG8gbm90ZWJvb2sKc2hhcC5p
bml0anMoKQoKIyB0cmFpbiBYR0Jvb3N0IG1vZGVsClgseSA9IHNoYXAuZGF0
YXNldHMuYm9zdG9uKCkKbW9kZWwgPSB4Z2Jvb3N0LnRyYWluKHsibGVhcm5p
bmdfcmF0ZSI6IDAuMDF9LCB4Z2Jvb3N0LkRNYXRyaXgoWCwgbGFiZWw9eSks
IDEwMCkKCiMgZXhwbGFpbiB0aGUgbW9kZWwncyBwcmVkaWN0aW9ucyB1c2lu
ZyBTSEFQIHZhbHVlcwojIChzYW1lIHN5bnRheCB3b3JrcyBmb3IgTGlnaHRH
Qk0sIENhdEJvb3N0LCBzY2lraXQtbGVhcm4gYW5kIHNwYXJrIG1vZGVscykK
ZXhwbGFpbmVyID0gc2hhcC5UcmVlRXhwbGFpbmVyKG1vZGVsKQpzaGFwX3Zh
bHVlcyA9IGV4cGxhaW5lci5zaGFwX3ZhbHVlcyhYKQoKIyB2aXN1YWxpemUg
dGhlIGZpcnN0IHByZWRpY3Rpb24ncyBleHBsYW5hdGlvbiAodXNlIG1hdHBs
b3RsaWI9VHJ1ZSB0byBhdm9pZCBKYXZhc2NyaXB0KQpzaGFwLmZvcmNlX3Bs
b3QoZXhwbGFpbmVyLmV4cGVjdGVkX3ZhbHVlLCBzaGFwX3ZhbHVlc1swLDpd
LCBYLmlsb2NbMCw6XSkKYGBgCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1n
IHdpZHRoPSI4MTEiIHNyYz0iaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRl
bnQuY29tL3NsdW5kYmVyZy9zaGFwL21hc3Rlci9kb2NzL2FydHdvcmsvYm9z
dG9uX2luc3RhbmNlLnBuZyIgLz4KPC9wPgoKPCEtLUlmIHlvdSB3YW50IHRv
IHVzZSBgbWF0cGxvdGxpYmAgYmFja2VuZCBpbiBwbGFjZSBvZiBqYXZhc2Ny
aXB0LCB5b3UgY2FuIGRvIHNvIGFzIHNob3duIGJlbG93LiBZb3UgY2FuIGFs
c28gcm90YXRlIHRoZSBmZWF0dXJlIG5hbWVzIHVzaW5nIGB0ZXh0X3JvdGF0
aW9uYCBwYXJhbWV0ZXIsIGlmIHlvdXIgZGF0YXNldCBoYXMgcmVhbGx5IGxv
bmcgZmVhdHVyZSBuYW1lcy4KYGBgcHl0aG9uCiVtYXRwbG90bGliIGlubGlu
ZQppbXBvcnQgeGdib29zdAppbXBvcnQgc2hhcAoKIyB0cmFpbiBYR0Jvb3N0
IG1vZGVsClgseSA9IHNoYXAuZGF0YXNldHMuYm9zdG9uKCkKCm1vZGVsID0g
eGdib29zdC50cmFpbih7ImxlYXJuaW5nX3JhdGUiOiAwLjAxfSwgeGdib29z
dC5ETWF0cml4KFgsIGxhYmVsPXkpLCAxMDApCiMgZXhwbGFpbiB0aGUgbW9k
ZWwncyBwcmVkaWN0aW9ucyB1c2luZyBTSEFQIHZhbHVlcwojIChzYW1lIHN5
bnRheCB3b3JrcyBmb3IgTGlnaHRHQk0sIENhdEJvb3N0LCBzY2lraXQtbGVh
cm4gYW5kIHNwYXJrIG1vZGVscykKZXhwbGFpbmVyID0gc2hhcC5UcmVlRXhw
bGFpbmVyKG1vZGVsKQpzaGFwX3ZhbHVlcyA9IGV4cGxhaW5lci5zaGFwX3Zh
bHVlcyhYKQojIHZpc3VhbGl6ZSB0aGUgZmlyc3QgcHJlZGljdGlvbidzIGV4
cGxhbmF0aW9uIHVzaW5nIG1hdHBsb3RsaWIgKG5vIGphdmFzY3JpcHQgbmVl
ZGVkKQojIHJvdGF0ZSB0aGUgYW5ub3RhdGlvbnMgc28gdGhhdCB0aGV5IGFy
ZSBsZWdpYmxlIHdoZW4geW91IGhhdmUgcmVhbGx5IGxvbmcgYXR0cmlidXRl
IG5hbWVzCnNoYXAuZm9yY2VfcGxvdCgKICAgIGV4cGxhaW5lci5leHBlY3Rl
ZF92YWx1ZSwgCiAgICBzaGFwX3ZhbHVlc1swLCA6XSwgCiAgICBYLmlsb2Nb
MCwgOl0sIAogICAgbWF0cGxvdGxpYj1UcnVlLCAKICAgIHRleHRfcm90YXRp
b249MzAsIAogICAgc2hvdz1UcnVlCikKYGBgCgo8cCBhbGlnbj0iY2VudGVy
Ij4KICA8aW1nIHdpZHRoPSI4MTEiIHNyYz0iaHR0cHM6Ly9yYXcuZ2l0aHVi
dXNlcmNvbnRlbnQuY29tL3ZhdHNhbi9zaGFwL21hc3Rlci9kb2NzL2FydHdv
cmsvZm9yY2VfcGxvdF9tYXRwbG90bGliX3JvdGF0ZS5wbmciIC8+CjwvcD4t
LT4KClRoZSBhYm92ZSBleHBsYW5hdGlvbiBzaG93cyBmZWF0dXJlcyBlYWNo
IGNvbnRyaWJ1dGluZyB0byBwdXNoIHRoZSBtb2RlbCBvdXRwdXQgZnJvbSB0
aGUgYmFzZSB2YWx1ZSAodGhlIGF2ZXJhZ2UgbW9kZWwgb3V0cHV0IG92ZXIg
dGhlIHRyYWluaW5nIGRhdGFzZXQgd2UgcGFzc2VkKSB0byB0aGUgbW9kZWwg
b3V0cHV0LiBGZWF0dXJlcyBwdXNoaW5nIHRoZSBwcmVkaWN0aW9uIGhpZ2hl
ciBhcmUgc2hvd24gaW4gcmVkLCB0aG9zZSBwdXNoaW5nIHRoZSBwcmVkaWN0
aW9uIGxvd2VyIGFyZSBpbiBibHVlICh0aGVzZSBmb3JjZSBwbG90cyBhcmUg
aW50cm9kdWNlZCBpbiBvdXIgW05hdHVyZSBCTUUgcGFwZXJdKGh0dHBzOi8v
d3d3Lm5hdHVyZS5jb20vYXJ0aWNsZXMvczQxNTUxLTAxOC0wMzA0LTApKS4K
CklmIHdlIHRha2UgbWFueSBleHBsYW5hdGlvbnMgc3VjaCBhcyB0aGUgb25l
IHNob3duIGFib3ZlLCByb3RhdGUgdGhlbSA5MCBkZWdyZWVzLCBhbmQgdGhl
biBzdGFjayB0aGVtIGhvcml6b250YWxseSwgd2UgY2FuIHNlZSBleHBsYW5h
dGlvbnMgZm9yIGFuIGVudGlyZSBkYXRhc2V0IChpbiB0aGUgbm90ZWJvb2sg
dGhpcyBwbG90IGlzIGludGVyYWN0aXZlKToKCmBgYHB5dGhvbgojIHZpc3Vh
bGl6ZSB0aGUgdHJhaW5pbmcgc2V0IHByZWRpY3Rpb25zCnNoYXAuZm9yY2Vf
cGxvdChleHBsYWluZXIuZXhwZWN0ZWRfdmFsdWUsIHNoYXBfdmFsdWVzLCBY
KQpgYGAKCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgd2lkdGg9IjgxMSIg
c3JjPSJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vc2x1bmRi
ZXJnL3NoYXAvbWFzdGVyL2RvY3MvYXJ0d29yay9ib3N0b25fZGF0YXNldC5w
bmciIC8+CjwvcD4KClRvIHVuZGVyc3RhbmQgaG93IGEgc2luZ2xlIGZlYXR1
cmUgZWZmZWN0cyB0aGUgb3V0cHV0IG9mIHRoZSBtb2RlbCB3ZSBjYW4gcGxv
dCB0aGUgU0hBUCB2YWx1ZSBvZiB0aGF0IGZlYXR1cmUgdnMuIHRoZSB2YWx1
ZSBvZiB0aGUgZmVhdHVyZSBmb3IgYWxsIHRoZSBleGFtcGxlcyBpbiBhIGRh
dGFzZXQuIFNpbmNlIFNIQVAgdmFsdWVzIHJlcHJlc2VudCBhIGZlYXR1cmUn
cyByZXNwb25zaWJpbGl0eSBmb3IgYSBjaGFuZ2UgaW4gdGhlIG1vZGVsIG91
dHB1dCwgdGhlIHBsb3QgYmVsb3cgcmVwcmVzZW50cyB0aGUgY2hhbmdlIGlu
IHByZWRpY3RlZCBob3VzZSBwcmljZSBhcyBSTSAodGhlIGF2ZXJhZ2UgbnVt
YmVyIG9mIHJvb21zIHBlciBob3VzZSBpbiBhbiBhcmVhKSBjaGFuZ2VzLiBW
ZXJ0aWNhbCBkaXNwZXJzaW9uIGF0IGEgc2luZ2xlIHZhbHVlIG9mIFJNIHJl
cHJlc2VudHMgaW50ZXJhY3Rpb24gZWZmZWN0cyB3aXRoIG90aGVyIGZlYXR1
cmVzLiBUbyBoZWxwIHJldmVhbCB0aGVzZSBpbnRlcmFjdGlvbnMgYGRlcGVu
ZGVuY2VfcGxvdGAgYXV0b21hdGljYWxseSBzZWxlY3RzIGFub3RoZXIgZmVh
dHVyZSBmb3IgY29sb3JpbmcuIEluIHRoaXMgY2FzZSBjb2xvcmluZyBieSBS
QUQgKGluZGV4IG9mIGFjY2Vzc2liaWxpdHkgdG8gcmFkaWFsIGhpZ2h3YXlz
KSBoaWdobGlnaHRzIHRoYXQgdGhlIGF2ZXJhZ2UgbnVtYmVyIG9mIHJvb21z
IHBlciBob3VzZSBoYXMgbGVzcyBpbXBhY3Qgb24gaG9tZSBwcmljZSBmb3Ig
YXJlYXMgd2l0aCBhIGhpZ2ggUkFEIHZhbHVlLgoKYGBgcHl0aG9uCiMgY3Jl
YXRlIGEgU0hBUCBkZXBlbmRlbmNlIHBsb3QgdG8gc2hvdyB0aGUgZWZmZWN0
IG9mIGEgc2luZ2xlIGZlYXR1cmUgYWNyb3NzIHRoZSB3aG9sZSBkYXRhc2V0
CnNoYXAuZGVwZW5kZW5jZV9wbG90KCJSTSIsIHNoYXBfdmFsdWVzLCBYKQpg
YGAKCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgd2lkdGg9IjU0NCIgc3Jj
PSJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vc2x1bmRiZXJn
L3NoYXAvbWFzdGVyL2RvY3MvYXJ0d29yay9ib3N0b25fZGVwZW5kZW5jZV9w
bG90LnBuZyIgLz4KPC9wPgoKClRvIGdldCBhbiBvdmVydmlldyBvZiB3aGlj
aCBmZWF0dXJlcyBhcmUgbW9zdCBpbXBvcnRhbnQgZm9yIGEgbW9kZWwgd2Ug
Y2FuIHBsb3QgdGhlIFNIQVAgdmFsdWVzIG9mIGV2ZXJ5IGZlYXR1cmUgZm9y
IGV2ZXJ5IHNhbXBsZS4gVGhlIHBsb3QgYmVsb3cgc29ydHMgZmVhdHVyZXMg
YnkgdGhlIHN1bSBvZiBTSEFQIHZhbHVlIG1hZ25pdHVkZXMgb3ZlciBhbGwg
c2FtcGxlcywgYW5kIHVzZXMgU0hBUCB2YWx1ZXMgdG8gc2hvdyB0aGUgZGlz
dHJpYnV0aW9uIG9mIHRoZSBpbXBhY3RzIGVhY2ggZmVhdHVyZSBoYXMgb24g
dGhlIG1vZGVsIG91dHB1dC4gVGhlIGNvbG9yIHJlcHJlc2VudHMgdGhlIGZl
YXR1cmUgdmFsdWUgKHJlZCBoaWdoLCBibHVlIGxvdykuIFRoaXMgcmV2ZWFs
cyBmb3IgZXhhbXBsZSB0aGF0IGEgaGlnaCBMU1RBVCAoJSBsb3dlciBzdGF0
dXMgb2YgdGhlIHBvcHVsYXRpb24pIGxvd2VycyB0aGUgcHJlZGljdGVkIGhv
bWUgcHJpY2UuCgpgYGBweXRob24KIyBzdW1tYXJpemUgdGhlIGVmZmVjdHMg
b2YgYWxsIHRoZSBmZWF0dXJlcwpzaGFwLnN1bW1hcnlfcGxvdChzaGFwX3Zh
bHVlcywgWCkKYGBgCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHdpZHRo
PSI0ODMiIHNyYz0iaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29t
L3NsdW5kYmVyZy9zaGFwL21hc3Rlci9kb2NzL2FydHdvcmsvYm9zdG9uX3N1
bW1hcnlfcGxvdC5wbmciIC8+CjwvcD4KCldlIGNhbiBhbHNvIGp1c3QgdGFr
ZSB0aGUgbWVhbiBhYnNvbHV0ZSB2YWx1ZSBvZiB0aGUgU0hBUCB2YWx1ZXMg
Zm9yIGVhY2ggZmVhdHVyZSB0byBnZXQgYSBzdGFuZGFyZCBiYXIgcGxvdCAo
cHJvZHVjZXMgc3RhY2tlZCBiYXJzIGZvciBtdWx0aS1jbGFzcyBvdXRwdXRz
KToKCmBgYHB5dGhvbgpzaGFwLnN1bW1hcnlfcGxvdChzaGFwX3ZhbHVlcywg
WCwgcGxvdF90eXBlPSJiYXIiKQpgYGAKCjxwIGFsaWduPSJjZW50ZXIiPgog
IDxpbWcgd2lkdGg9IjQ3MCIgc3JjPSJodHRwczovL3Jhdy5naXRodWJ1c2Vy
Y29udGVudC5jb20vc2x1bmRiZXJnL3NoYXAvbWFzdGVyL2RvY3MvYXJ0d29y
ay9ib3N0b25fc3VtbWFyeV9wbG90X2Jhci5wbmciIC8+CjwvcD4KCiMjIERl
ZXAgbGVhcm5pbmcgZXhhbXBsZSB3aXRoIERlZXBFeHBsYWluZXIgKFRlbnNv
ckZsb3cvS2VyYXMgbW9kZWxzKQoKRGVlcCBTSEFQIGlzIGEgaGlnaC1zcGVl
ZCBhcHByb3hpbWF0aW9uIGFsZ29yaXRobSBmb3IgU0hBUCB2YWx1ZXMgaW4g
ZGVlcCBsZWFybmluZyBtb2RlbHMgdGhhdCBidWlsZHMgb24gYSBjb25uZWN0
aW9uIHdpdGggW0RlZXBMSUZUXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcw
NC4wMjY4NSkgZGVzY3JpYmVkIGluIHRoZSBTSEFQIE5JUFMgcGFwZXIuIFRo
ZSBpbXBsZW1lbnRhdGlvbiBoZXJlIGRpZmZlcnMgZnJvbSB0aGUgb3JpZ2lu
YWwgRGVlcExJRlQgYnkgdXNpbmcgYSBkaXN0cmlidXRpb24gb2YgYmFja2dy
b3VuZCBzYW1wbGVzIGluc3RlYWQgb2YgYSBzaW5nbGUgcmVmZXJlbmNlIHZh
bHVlLCBhbmQgdXNpbmcgU2hhcGxleSBlcXVhdGlvbnMgdG8gbGluZWFyaXpl
IGNvbXBvbmVudHMgc3VjaCBhcyBtYXgsIHNvZnRtYXgsIHByb2R1Y3RzLCBk
aXZpc2lvbnMsIGV0Yy4gTm90ZSB0aGF0IHNvbWUgb2YgdGhlc2UgZW5oYW5j
ZW1lbnRzIGhhdmUgYWxzbyBiZWVuIHNpbmNlIGludGVncmF0ZWQgaW50byBE
ZWVwTElGVC4gVGVuc29yRmxvdyBtb2RlbHMgYW5kIEtlcmFzIG1vZGVscyB1
c2luZyB0aGUgVGVuc29yRmxvdyBiYWNrZW5kIGFyZSBzdXBwb3J0ZWQgKHRo
ZXJlIGlzIGFsc28gcHJlbGltaW5hcnkgc3VwcG9ydCBmb3IgUHlUb3JjaCk6
CgpgYGBweXRob24KIyAuLi5pbmNsdWRlIGNvZGUgZnJvbSBodHRwczovL2dp
dGh1Yi5jb20va2VyYXMtdGVhbS9rZXJhcy9ibG9iL21hc3Rlci9leGFtcGxl
cy9tbmlzdF9jbm4ucHkKCmltcG9ydCBzaGFwCmltcG9ydCBudW1weSBhcyBu
cAoKIyBzZWxlY3QgYSBzZXQgb2YgYmFja2dyb3VuZCBleGFtcGxlcyB0byB0
YWtlIGFuIGV4cGVjdGF0aW9uIG92ZXIKYmFja2dyb3VuZCA9IHhfdHJhaW5b
bnAucmFuZG9tLmNob2ljZSh4X3RyYWluLnNoYXBlWzBdLCAxMDAsIHJlcGxh
Y2U9RmFsc2UpXQoKIyBleHBsYWluIHByZWRpY3Rpb25zIG9mIHRoZSBtb2Rl
bCBvbiBmb3VyIGltYWdlcwplID0gc2hhcC5EZWVwRXhwbGFpbmVyKG1vZGVs
LCBiYWNrZ3JvdW5kKQojIC4uLm9yIHBhc3MgdGVuc29ycyBkaXJlY3RseQoj
IGUgPSBzaGFwLkRlZXBFeHBsYWluZXIoKG1vZGVsLmxheWVyc1swXS5pbnB1
dCwgbW9kZWwubGF5ZXJzWy0xXS5vdXRwdXQpLCBiYWNrZ3JvdW5kKQpzaGFw
X3ZhbHVlcyA9IGUuc2hhcF92YWx1ZXMoeF90ZXN0WzE6NV0pCgojIHBsb3Qg
dGhlIGZlYXR1cmUgYXR0cmlidXRpb25zCnNoYXAuaW1hZ2VfcGxvdChzaGFw
X3ZhbHVlcywgLXhfdGVzdFsxOjVdKQpgYGAKCjxwIGFsaWduPSJjZW50ZXIi
PgogIDxpbWcgd2lkdGg9IjgyMCIgc3JjPSJodHRwczovL3Jhdy5naXRodWJ1
c2VyY29udGVudC5jb20vc2x1bmRiZXJnL3NoYXAvbWFzdGVyL2RvY3MvYXJ0
d29yay9tbmlzdF9pbWFnZV9wbG90LnBuZyIgLz4KPC9wPgoKVGhlIHBsb3Qg
YWJvdmUgZXhwbGFpbnMgdGVuIG91dHB1dHMgKGRpZ2l0cyAwLTkpIGZvciBm
b3VyIGRpZmZlcmVudCBpbWFnZXMuIFJlZCBwaXhlbHMgaW5jcmVhc2UgdGhl
IG1vZGVsJ3Mgb3V0cHV0IHdoaWxlIGJsdWUgcGl4ZWxzIGRlY3JlYXNlIHRo
ZSBvdXRwdXQuIFRoZSBpbnB1dCBpbWFnZXMgYXJlIHNob3duIG9uIHRoZSBs
ZWZ0LCBhbmQgYXMgbmVhcmx5IHRyYW5zcGFyZW50IGdyYXlzY2FsZSBiYWNr
aW5ncyBiZWhpbmQgZWFjaCBvZiB0aGUgZXhwbGFuYXRpb25zLiBUaGUgc3Vt
IG9mIHRoZSBTSEFQIHZhbHVlcyBlcXVhbHMgdGhlIGRpZmZlcmVuY2UgYmV0
d2VlbiB0aGUgZXhwZWN0ZWQgbW9kZWwgb3V0cHV0IChhdmVyYWdlZCBvdmVy
IHRoZSBiYWNrZ3JvdW5kIGRhdGFzZXQpIGFuZCB0aGUgY3VycmVudCBtb2Rl
bCBvdXRwdXQuIE5vdGUgdGhhdCBmb3IgdGhlICd6ZXJvJyBpbWFnZSB0aGUg
YmxhbmsgbWlkZGxlIGlzIGltcG9ydGFudCwgd2hpbGUgZm9yIHRoZSAnZm91
cicgaW1hZ2UgdGhlIGxhY2sgb2YgYSBjb25uZWN0aW9uIG9uIHRvcCBtYWtl
cyBpdCBhIGZvdXIgaW5zdGVhZCBvZiBhIG5pbmUuCgoKIyMgRGVlcCBsZWFy
bmluZyBleGFtcGxlIHdpdGggR3JhZGllbnRFeHBsYWluZXIgKFRlbnNvckZs
b3cvS2VyYXMvUHlUb3JjaCBtb2RlbHMpCgpFeHBlY3RlZCBncmFkaWVudHMg
Y29tYmluZXMgaWRlYXMgZnJvbSBbSW50ZWdyYXRlZCBHcmFkaWVudHNdKGh0
dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzAzLjAxMzY1KSwgU0hBUCwgYW5kIFtT
bW9vdGhHcmFkXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwNi4wMzgyNSkg
aW50byBhIHNpbmdsZSBleHBlY3RlZCB2YWx1ZSBlcXVhdGlvbi4gVGhpcyBh
bGxvd3MgYW4gZW50aXJlIGRhdGFzZXQgdG8gYmUgdXNlZCBhcyB0aGUgYmFj
a2dyb3VuZCBkaXN0cmlidXRpb24gKGFzIG9wcG9zZWQgdG8gYSBzaW5nbGUg
cmVmZXJlbmNlIHZhbHVlKSBhbmQgYWxsb3dzIGxvY2FsIHNtb290aGluZy4g
SWYgd2UgYXBwcm94aW1hdGUgdGhlIG1vZGVsIHdpdGggYSBsaW5lYXIgZnVu
Y3Rpb24gYmV0d2VlbiBlYWNoIGJhY2tncm91bmQgZGF0YSBzYW1wbGUgYW5k
IHRoZSBjdXJyZW50IGlucHV0IHRvIGJlIGV4cGxhaW5lZCwgYW5kIHdlIGFz
c3VtZSB0aGUgaW5wdXQgZmVhdHVyZXMgYXJlIGluZGVwZW5kZW50IHRoZW4g
ZXhwZWN0ZWQgZ3JhZGllbnRzIHdpbGwgY29tcHV0ZSBhcHByb3hpbWF0ZSBT
SEFQIHZhbHVlcy4gSW4gdGhlIGV4YW1wbGUgYmVsb3cgd2UgaGF2ZSBleHBs
YWluZWQgaG93IHRoZSA3dGggaW50ZXJtZWRpYXRlIGxheWVyIG9mIHRoZSBW
R0cxNiBJbWFnZU5ldCBtb2RlbCBpbXBhY3RzIHRoZSBvdXRwdXQgcHJvYmFi
aWxpdGllcy4KCmBgYHB5dGhvbgpmcm9tIGtlcmFzLmFwcGxpY2F0aW9ucy52
Z2cxNiBpbXBvcnQgVkdHMTYKZnJvbSBrZXJhcy5hcHBsaWNhdGlvbnMudmdn
MTYgaW1wb3J0IHByZXByb2Nlc3NfaW5wdXQKaW1wb3J0IGtlcmFzLmJhY2tl
bmQgYXMgSwppbXBvcnQgbnVtcHkgYXMgbnAKaW1wb3J0IGpzb24KaW1wb3J0
IHNoYXAKCiMgbG9hZCBwcmUtdHJhaW5lZCBtb2RlbCBhbmQgY2hvb3NlIHR3
byBpbWFnZXMgdG8gZXhwbGFpbgptb2RlbCA9IFZHRzE2KHdlaWdodHM9J2lt
YWdlbmV0JywgaW5jbHVkZV90b3A9VHJ1ZSkKWCx5ID0gc2hhcC5kYXRhc2V0
cy5pbWFnZW5ldDUwKCkKdG9fZXhwbGFpbiA9IFhbWzM5LDQxXV0KCiMgbG9h
ZCB0aGUgSW1hZ2VOZXQgY2xhc3MgbmFtZXMKdXJsID0gImh0dHBzOi8vczMu
YW1hem9uYXdzLmNvbS9kZWVwLWxlYXJuaW5nLW1vZGVscy9pbWFnZS1tb2Rl
bHMvaW1hZ2VuZXRfY2xhc3NfaW5kZXguanNvbiIKZm5hbWUgPSBzaGFwLmRh
dGFzZXRzLmNhY2hlKHVybCkKd2l0aCBvcGVuKGZuYW1lKSBhcyBmOgogICAg
Y2xhc3NfbmFtZXMgPSBqc29uLmxvYWQoZikKCiMgZXhwbGFpbiBob3cgdGhl
IGlucHV0IHRvIHRoZSA3dGggbGF5ZXIgb2YgdGhlIG1vZGVsIGV4cGxhaW5z
IHRoZSB0b3AgdHdvIGNsYXNzZXMKZGVmIG1hcDJsYXllcih4LCBsYXllcik6
CiAgICBmZWVkX2RpY3QgPSBkaWN0KHppcChbbW9kZWwubGF5ZXJzWzBdLmlu
cHV0XSwgW3ByZXByb2Nlc3NfaW5wdXQoeC5jb3B5KCkpXSkpCiAgICByZXR1
cm4gSy5nZXRfc2Vzc2lvbigpLnJ1bihtb2RlbC5sYXllcnNbbGF5ZXJdLmlu
cHV0LCBmZWVkX2RpY3QpCmUgPSBzaGFwLkdyYWRpZW50RXhwbGFpbmVyKAog
ICAgKG1vZGVsLmxheWVyc1s3XS5pbnB1dCwgbW9kZWwubGF5ZXJzWy0xXS5v
dXRwdXQpLAogICAgbWFwMmxheWVyKFgsIDcpLAogICAgbG9jYWxfc21vb3Ro
aW5nPTAgIyBzdGQgZGV2IG9mIHNtb290aGluZyBub2lzZQopCnNoYXBfdmFs
dWVzLGluZGV4ZXMgPSBlLnNoYXBfdmFsdWVzKG1hcDJsYXllcih0b19leHBs
YWluLCA3KSwgcmFua2VkX291dHB1dHM9MikKCiMgZ2V0IHRoZSBuYW1lcyBm
b3IgdGhlIGNsYXNzZXMKaW5kZXhfbmFtZXMgPSBucC52ZWN0b3JpemUobGFt
YmRhIHg6IGNsYXNzX25hbWVzW3N0cih4KV1bMV0pKGluZGV4ZXMpCgojIHBs
b3QgdGhlIGV4cGxhbmF0aW9ucwpzaGFwLmltYWdlX3Bsb3Qoc2hhcF92YWx1
ZXMsIHRvX2V4cGxhaW4sIGluZGV4X25hbWVzKQpgYGAKCjxwIGFsaWduPSJj
ZW50ZXIiPgogIDxpbWcgd2lkdGg9IjUwMCIgc3JjPSJodHRwczovL3Jhdy5n
aXRodWJ1c2VyY29udGVudC5jb20vc2x1bmRiZXJnL3NoYXAvbWFzdGVyL2Rv
Y3MvYXJ0d29yay9ncmFkaWVudF9pbWFnZW5ldF9wbG90LnBuZyIgLz4KPC9w
PgoKUHJlZGljdGlvbnMgZm9yIHR3byBpbnB1dCBpbWFnZXMgYXJlIGV4cGxh
aW5lZCBpbiB0aGUgcGxvdCBhYm92ZS4gUmVkIHBpeGVscyByZXByZXNlbnQg
cG9zaXRpdmUgU0hBUCB2YWx1ZXMgdGhhdCBpbmNyZWFzZSB0aGUgcHJvYmFi
aWxpdHkgb2YgdGhlIGNsYXNzLCB3aGlsZSBibHVlIHBpeGVscyByZXByZXNl
bnQgbmVnYXRpdmUgU0hBUCB2YWx1ZXMgdGhlIHJlZHVjZSB0aGUgcHJvYmFi
aWxpdHkgb2YgdGhlIGNsYXNzLiBCeSB1c2luZyBgcmFua2VkX291dHB1dHM9
MmAgd2UgZXhwbGFpbiBvbmx5IHRoZSB0d28gbW9zdCBsaWtlbHkgY2xhc3Nl
cyBmb3IgZWFjaCBpbnB1dCAodGhpcyBzcGFyZXMgdXMgZnJvbSBleHBsYWlu
aW5nIGFsbCAxLDAwMCBjbGFzc2VzKS4KCiMjIE1vZGVsIGFnbm9zdGljIGV4
YW1wbGUgd2l0aCBLZXJuZWxFeHBsYWluZXIgKGV4cGxhaW5zIGFueSBmdW5j
dGlvbikKCktlcm5lbCBTSEFQIHVzZXMgYSBzcGVjaWFsbHktd2VpZ2h0ZWQg
bG9jYWwgbGluZWFyIHJlZ3Jlc3Npb24gdG8gZXN0aW1hdGUgU0hBUCB2YWx1
ZXMgZm9yIGFueSBtb2RlbC4gQmVsb3cgaXMgYSBzaW1wbGUgZXhhbXBsZSBm
b3IgZXhwbGFpbmluZyBhIG11bHRpLWNsYXNzIFNWTSBvbiB0aGUgY2xhc3Np
YyBpcmlzIGRhdGFzZXQuCgpgYGBweXRob24KaW1wb3J0IHNrbGVhcm4KaW1w
b3J0IHNoYXAKZnJvbSBza2xlYXJuLm1vZGVsX3NlbGVjdGlvbiBpbXBvcnQg
dHJhaW5fdGVzdF9zcGxpdAoKIyBwcmludCB0aGUgSlMgdmlzdWFsaXphdGlv
biBjb2RlIHRvIHRoZSBub3RlYm9vawpzaGFwLmluaXRqcygpCgojIHRyYWlu
IGEgU1ZNIGNsYXNzaWZpZXIKWF90cmFpbixYX3Rlc3QsWV90cmFpbixZX3Rl
c3QgPSB0cmFpbl90ZXN0X3NwbGl0KCpzaGFwLmRhdGFzZXRzLmlyaXMoKSwg
dGVzdF9zaXplPTAuMiwgcmFuZG9tX3N0YXRlPTApCnN2bSA9IHNrbGVhcm4u
c3ZtLlNWQyhrZXJuZWw9J3JiZicsIHByb2JhYmlsaXR5PVRydWUpCnN2bS5m
aXQoWF90cmFpbiwgWV90cmFpbikKCiMgdXNlIEtlcm5lbCBTSEFQIHRvIGV4
cGxhaW4gdGVzdCBzZXQgcHJlZGljdGlvbnMKZXhwbGFpbmVyID0gc2hhcC5L
ZXJuZWxFeHBsYWluZXIoc3ZtLnByZWRpY3RfcHJvYmEsIFhfdHJhaW4sIGxp
bms9ImxvZ2l0IikKc2hhcF92YWx1ZXMgPSBleHBsYWluZXIuc2hhcF92YWx1
ZXMoWF90ZXN0LCBuc2FtcGxlcz0xMDApCgojIHBsb3QgdGhlIFNIQVAgdmFs
dWVzIGZvciB0aGUgU2V0b3NhIG91dHB1dCBvZiB0aGUgZmlyc3QgaW5zdGFu
Y2UKc2hhcC5mb3JjZV9wbG90KGV4cGxhaW5lci5leHBlY3RlZF92YWx1ZVsw
XSwgc2hhcF92YWx1ZXNbMF1bMCw6XSwgWF90ZXN0Lmlsb2NbMCw6XSwgbGlu
az0ibG9naXQiKQpgYGAKPHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyB3aWR0
aD0iODEwIiBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNv
bS9zbHVuZGJlcmcvc2hhcC9tYXN0ZXIvZG9jcy9hcnR3b3JrL2lyaXNfaW5z
dGFuY2UucG5nIiAvPgo8L3A+CgpUaGUgYWJvdmUgZXhwbGFuYXRpb24gc2hv
d3MgZm91ciBmZWF0dXJlcyBlYWNoIGNvbnRyaWJ1dGluZyB0byBwdXNoIHRo
ZSBtb2RlbCBvdXRwdXQgZnJvbSB0aGUgYmFzZSB2YWx1ZSAodGhlIGF2ZXJh
Z2UgbW9kZWwgb3V0cHV0IG92ZXIgdGhlIHRyYWluaW5nIGRhdGFzZXQgd2Ug
cGFzc2VkKSB0b3dhcmRzIHplcm8uIElmIHRoZXJlIHdlcmUgYW55IGZlYXR1
cmVzIHB1c2hpbmcgdGhlIGNsYXNzIGxhYmVsIGhpZ2hlciB0aGV5IHdvdWxk
IGJlIHNob3duIGluIHJlZC4KCklmIHdlIHRha2UgbWFueSBleHBsYW5hdGlv
bnMgc3VjaCBhcyB0aGUgb25lIHNob3duIGFib3ZlLCByb3RhdGUgdGhlbSA5
MCBkZWdyZWVzLCBhbmQgdGhlbiBzdGFjayB0aGVtIGhvcml6b250YWxseSwg
d2UgY2FuIHNlZSBleHBsYW5hdGlvbnMgZm9yIGFuIGVudGlyZSBkYXRhc2V0
LiBUaGlzIGlzIGV4YWN0bHkgd2hhdCB3ZSBkbyBiZWxvdyBmb3IgYWxsIHRo
ZSBleGFtcGxlcyBpbiB0aGUgaXJpcyB0ZXN0IHNldDoKCmBgYHB5dGhvbgoj
IHBsb3QgdGhlIFNIQVAgdmFsdWVzIGZvciB0aGUgU2V0b3NhIG91dHB1dCBv
ZiBhbGwgaW5zdGFuY2VzCnNoYXAuZm9yY2VfcGxvdChleHBsYWluZXIuZXhw
ZWN0ZWRfdmFsdWVbMF0sIHNoYXBfdmFsdWVzWzBdLCBYX3Rlc3QsIGxpbms9
ImxvZ2l0IikKYGBgCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgd2lkdGg9
IjgxMyIgc3JjPSJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20v
c2x1bmRiZXJnL3NoYXAvbWFzdGVyL2RvY3MvYXJ0d29yay9pcmlzX2RhdGFz
ZXQucG5nIiAvPgo8L3A+CgojIyBTSEFQIEludGVyYWN0aW9uIFZhbHVlcwoK
U0hBUCBpbnRlcmFjdGlvbiB2YWx1ZXMgYXJlIGEgZ2VuZXJhbGl6YXRpb24g
b2YgU0hBUCB2YWx1ZXMgdG8gaGlnaGVyIG9yZGVyIGludGVyYWN0aW9ucy4g
RmFzdCBleGFjdCBjb21wdXRhdGlvbiBvZiBwYWlyd2lzZSBpbnRlcmFjdGlv
bnMgYXJlIGltcGxlbWVudGVkIGZvciB0cmVlIG1vZGVscyB3aXRoIGBzaGFw
LlRyZWVFeHBsYWluZXIobW9kZWwpLnNoYXBfaW50ZXJhY3Rpb25fdmFsdWVz
KFgpYC4gVGhpcyByZXR1cm5zIGEgbWF0cml4IGZvciBldmVyeSBwcmVkaWN0
aW9uLCB3aGVyZSB0aGUgbWFpbiBlZmZlY3RzIGFyZSBvbiB0aGUgZGlhZ29u
YWwgYW5kIHRoZSBpbnRlcmFjdGlvbiBlZmZlY3RzIGFyZSBvZmYtZGlhZ29u
YWwuIFRoZXNlIHZhbHVlcyBvZnRlbiByZXZlYWwgaW50ZXJlc3RpbmcgaGlk
ZGVuIHJlbGF0aW9uc2hpcHMsIHN1Y2ggYXMgaG93IHRoZSBpbmNyZWFzZWQg
cmlzayBvZiBkZWF0aCBwZWFrcyBmb3IgbWVuIGF0IGFnZSA2MCAoc2VlIHRo
ZSBOSEFORVMgbm90ZWJvb2sgZm9yIGRldGFpbHMpOgoKPHAgYWxpZ249ImNl
bnRlciI+CiAgPGltZyB3aWR0aD0iNDgzIiBzcmM9Imh0dHBzOi8vcmF3Lmdp
dGh1YnVzZXJjb250ZW50LmNvbS9zbHVuZGJlcmcvc2hhcC9tYXN0ZXIvZG9j
cy9hcnR3b3JrL25oYW5lc19hZ2Vfc2V4X2ludGVyYWN0aW9uLnBuZyIgLz4K
PC9wPgoKIyMgU2FtcGxlIG5vdGVib29rcwoKVGhlIG5vdGVib29rcyBiZWxv
dyBkZW1vbnN0cmF0ZSBkaWZmZXJlbnQgdXNlIGNhc2VzIGZvciBTSEFQLiBM
b29rIGluc2lkZSB0aGUgbm90ZWJvb2tzIGRpcmVjdG9yeSBvZiB0aGUgcmVw
b3NpdG9yeSBpZiB5b3Ugd2FudCB0byB0cnkgcGxheWluZyB3aXRoIHRoZSBv
cmlnaW5hbCBub3RlYm9va3MgeW91cnNlbGYuCgojIyMgVHJlZUV4cGxhaW5l
cgoKQW4gaW1wbGVtZW50YXRpb24gb2YgVHJlZSBTSEFQLCBhIGZhc3QgYW5k
IGV4YWN0IGFsZ29yaXRobSB0byBjb21wdXRlIFNIQVAgdmFsdWVzIGZvciB0
cmVlcyBhbmQgZW5zZW1ibGVzIG9mIHRyZWVzLgoKLSBbKipOSEFORVMgc3Vy
dml2YWwgbW9kZWwgd2l0aCBYR0Jvb3N0IGFuZCBTSEFQIGludGVyYWN0aW9u
IHZhbHVlcyoqXShodHRwczovL3NsdW5kYmVyZy5naXRodWIuaW8vc2hhcC9u
b3RlYm9va3MvTkhBTkVTJTIwSSUyMFN1cnZpdmFsJTIwTW9kZWwuaHRtbCkg
LSBVc2luZyBtb3J0YWxpdHkgZGF0YSBmcm9tIDIwIHllYXJzIG9mIGZvbGxv
d3VwIHRoaXMgbm90ZWJvb2sgZGVtb25zdHJhdGVzIGhvdyB0byB1c2UgWEdC
b29zdCBhbmQgYHNoYXBgIHRvIHVuY292ZXIgY29tcGxleCByaXNrIGZhY3Rv
ciByZWxhdGlvbnNoaXBzLgoKLSBbKipDZW5zdXMgaW5jb21lIGNsYXNzaWZp
Y2F0aW9uIHdpdGggTGlnaHRHQk0qKl0oaHR0cHM6Ly9zbHVuZGJlcmcuZ2l0
aHViLmlvL3NoYXAvbm90ZWJvb2tzL3RyZWVfZXhwbGFpbmVyL0NlbnN1cyUy
MGluY29tZSUyMGNsYXNzaWZpY2F0aW9uJTIwd2l0aCUyMExpZ2h0R0JNLmh0
bWwpIC0gVXNpbmcgdGhlIHN0YW5kYXJkIGFkdWx0IGNlbnN1cyBpbmNvbWUg
ZGF0YXNldCwgdGhpcyBub3RlYm9vayB0cmFpbnMgYSBncmFkaWVudCBib29z
dGluZyB0cmVlIG1vZGVsIHdpdGggTGlnaHRHQk0gYW5kIHRoZW4gZXhwbGFp
bnMgcHJlZGljdGlvbnMgdXNpbmcgYHNoYXBgLgoKLSBbKipMZWFndWUgb2Yg
TGVnZW5kcyBXaW4gUHJlZGljdGlvbiB3aXRoIFhHQm9vc3QqKl0oaHR0cHM6
Ly9zbHVuZGJlcmcuZ2l0aHViLmlvL3NoYXAvbm90ZWJvb2tzL0xlYWd1ZSUy
MG9mJTIwTGVnZW5kcyUyMFdpbiUyMFByZWRpY3Rpb24lMjB3aXRoJTIwWEdC
b29zdC5odG1sKSAtIFVzaW5nIGEgS2FnZ2xlIGRhdGFzZXQgb2YgMTgwLDAw
MCByYW5rZWQgbWF0Y2hlcyBmcm9tIExlYWd1ZSBvZiBMZWdlbmRzIHdlIHRy
YWluIGFuZCBleHBsYWluIGEgZ3JhZGllbnQgYm9vc3RpbmcgdHJlZSBtb2Rl
bCB3aXRoIFhHQm9vc3QgdG8gcHJlZGljdCBpZiBhIHBsYXllciB3aWxsIHdp
biB0aGVpciBtYXRjaC4KCiMjIyBEZWVwRXhwbGFpbmVyCgpBbiBpbXBsZW1l
bnRhdGlvbiBvZiBEZWVwIFNIQVAsIGEgZmFzdGVyIChidXQgb25seSBhcHBy
b3hpbWF0ZSkgYWxnb3JpdGhtIHRvIGNvbXB1dGUgU0hBUCB2YWx1ZXMgZm9y
IGRlZXAgbGVhcm5pbmcgbW9kZWxzIHRoYXQgaXMgYmFzZWQgb24gY29ubmVj
dGlvbnMgYmV0d2VlbiBTSEFQIGFuZCB0aGUgRGVlcExJRlQgYWxnb3JpdGht
LgoKLSBbKipNTklTVCBEaWdpdCBjbGFzc2lmaWNhdGlvbiB3aXRoIEtlcmFz
KipdKGh0dHBzOi8vc2x1bmRiZXJnLmdpdGh1Yi5pby9zaGFwL25vdGVib29r
cy9kZWVwX2V4cGxhaW5lci9Gcm9udCUyMFBhZ2UlMjBEZWVwRXhwbGFpbmVy
JTIwTU5JU1QlMjBFeGFtcGxlLmh0bWwpIC0gVXNpbmcgdGhlIE1OSVNUIGhh
bmR3cml0aW5nIHJlY29nbml0aW9uIGRhdGFzZXQsIHRoaXMgbm90ZWJvb2sg
dHJhaW5zIGEgbmV1cmFsIG5ldHdvcmsgd2l0aCBLZXJhcyBhbmQgdGhlbiBl
eHBsYWlucyBwcmVkaWN0aW9ucyB1c2luZyBgc2hhcGAuCgotIFsqKktlcmFz
IExTVE0gZm9yIElNREIgU2VudGltZW50IENsYXNzaWZpY2F0aW9uKipdKGh0
dHBzOi8vc2x1bmRiZXJnLmdpdGh1Yi5pby9zaGFwL25vdGVib29rcy9kZWVw
X2V4cGxhaW5lci9LZXJhcyUyMExTVE0lMjBmb3IlMjBJTURCJTIwU2VudGlt
ZW50JTIwQ2xhc3NpZmljYXRpb24uaHRtbCkgLSBUaGlzIG5vdGVib29rIHRy
YWlucyBhbiBMU1RNIHdpdGggS2VyYXMgb24gdGhlIElNREIgdGV4dCBzZW50
aW1lbnQgYW5hbHlzaXMgZGF0YXNldCBhbmQgdGhlbiBleHBsYWlucyBwcmVk
aWN0aW9ucyB1c2luZyBgc2hhcGAuIAoKIyMjIEdyYWRpZW50RXhwbGFpbmVy
CgpBbiBpbXBsZW1lbnRhdGlvbiBvZiBleHBlY3RlZCBncmFkaWVudHMgdG8g
YXBwcm94aW1hdGUgU0hBUCB2YWx1ZXMgZm9yIGRlZXAgbGVhcm5pbmcgbW9k
ZWxzLiBJdCBpcyBiYXNlZCBvbiBjb25uZWN0aW9ucyBiZXR3ZWVuIFNIQVAg
YW5kIHRoZSBJbnRlZ3JhdGVkIEdyYWRpZW50cyBhbGdvcml0aG0uIEdyYWRp
ZW50RXhwbGFpbmVyIGlzIHNsb3dlciB0aGFuIERlZXBFeHBsYWluZXIgYW5k
IG1ha2VzIGRpZmZlcmVudCBhcHByb3hpbWF0aW9uIGFzc3VtcHRpb25zLgoK
LSBbKipFeHBsYWluIGFuIEludGVybWVkaWF0ZSBMYXllciBvZiBWR0cxNiBv
biBJbWFnZU5ldCoqXShodHRwczovL3NsdW5kYmVyZy5naXRodWIuaW8vc2hh
cC9ub3RlYm9va3MvZ3JhZGllbnRfZXhwbGFpbmVyL0V4cGxhaW4lMjBhbiUy
MEludGVybWVkaWF0ZSUyMExheWVyJTIwb2YlMjBWR0cxNiUyMG9uJTIwSW1h
Z2VOZXQuaHRtbCkgLSBUaGlzIG5vdGVib29rIGRlbW9uc3RyYXRlcyBob3cg
dG8gZXhwbGFpbiB0aGUgb3V0cHV0IG9mIGEgcHJlLXRyYWluZWQgVkdHMTYg
SW1hZ2VOZXQgbW9kZWwgdXNpbmcgYW4gaW50ZXJuYWwgY29udm9sdXRpb25h
bCBsYXllci4KCiMjIyBMaW5lYXJFeHBsYWluZXIKCkZvciBhIGxpbmVhciBt
b2RlbCB3aXRoIGluZGVwZW5kZW50IGZlYXR1cmVzIHdlIGNhbiBhbmFseXRp
Y2FsbHkgY29tcHV0ZSB0aGUgZXhhY3QgU0hBUCB2YWx1ZXMuIFdlIGNhbiBh
bHNvIGFjY291bnQgZm9yIGZlYXR1cmUgY29ycmVsYXRpb24gaWYgd2UgYXJl
IHdpbGxpbmcgdG8gZXN0aW1hdGUgdGhlIGZlYXR1cmUgY292YXJhaW5jZSBt
YXRyaXguIExpbmVhckV4cGxhaW5lciBzdXBwb3J0cyBib3RoIG9mIHRoZXNl
IG9wdGlvbnMuCgotIFsqKlNlbnRpbWVudCBBbmFseXNpcyB3aXRoIExvZ2lz
dGljIFJlZ3Jlc3Npb24qKl0oaHR0cHM6Ly9zbHVuZGJlcmcuZ2l0aHViLmlv
L3NoYXAvbm90ZWJvb2tzL2xpbmVhcl9leHBsYWluZXIvU2VudGltZW50JTIw
QW5hbHlzaXMlMjB3aXRoJTIwTG9naXN0aWMlMjBSZWdyZXNzaW9uLmh0bWwp
IC0gVGhpcyBub3RlYm9vayBkZW1vbnN0cmF0ZXMgaG93IHRvIGV4cGxhaW4g
YSBsaW5lYXIgbG9naXN0aWMgcmVncmVzc2lvbiBzZW50aW1lbnQgYW5hbHlz
aXMgbW9kZWwuCgojIyMgS2VybmVsRXhwbGFpbmVyCgpBbiBpbXBsZW1lbnRh
dGlvbiBvZiBLZXJuZWwgU0hBUCwgYSBtb2RlbCBhZ25vc3RpYyBtZXRob2Qg
dG8gZXN0aW1hdGUgU0hBUCB2YWx1ZXMgZm9yIGFueSBtb2RlbC4gQmVjYXVz
ZSBpdCBtYWtlcyBub3QgYXNzdW1wdGlvbnMgYWJvdXQgdGhlIG1vZGVsIHR5
cGUsIEtlcm5lbEV4cGxhaW5lciBpcyBzbG93ZXIgdGhhbiB0aGUgb3RoZXIg
bW9kZWwgdHlwZSBzcGVjaWZpYyBhbGdvcml0aG1zLgoKLSBbKipDZW5zdXMg
aW5jb21lIGNsYXNzaWZpY2F0aW9uIHdpdGggc2Npa2l0LWxlYXJuKipdKGh0
dHBzOi8vc2x1bmRiZXJnLmdpdGh1Yi5pby9zaGFwL25vdGVib29rcy9DZW5z
dXMlMjBpbmNvbWUlMjBjbGFzc2lmaWNhdGlvbiUyMHdpdGglMjBzY2lraXQt
bGVhcm4uaHRtbCkgLSBVc2luZyB0aGUgc3RhbmRhcmQgYWR1bHQgY2Vuc3Vz
IGluY29tZSBkYXRhc2V0LCB0aGlzIG5vdGVib29rIHRyYWlucyBhIGstbmVh
cmVzdCBuZWlnaGJvcnMgY2xhc3NpZmllciB1c2luZyBzY2lraXQtbGVhcm4g
YW5kIHRoZW4gZXhwbGFpbnMgcHJlZGljdGlvbnMgdXNpbmcgYHNoYXBgLgoK
LSBbKipJbWFnZU5ldCBWR0cxNiBNb2RlbCB3aXRoIEtlcmFzKipdKGh0dHBz
Oi8vc2x1bmRiZXJnLmdpdGh1Yi5pby9zaGFwL25vdGVib29rcy9JbWFnZU5l
dCUyMFZHRzE2JTIwTW9kZWwlMjB3aXRoJTIwS2VyYXMuaHRtbCkgLSBFeHBs
YWluIHRoZSBjbGFzc2ljIFZHRzE2IGNvbnZvbHV0aW9uYWwgbmVydWFsIG5l
dHdvcmsncyBwcmVkaWN0aW9ucyBmb3IgYW4gaW1hZ2UuIFRoaXMgd29ya3Mg
YnkgYXBwbHlpbmcgdGhlIG1vZGVsIGFnbm9zdGljIEtlcm5lbCBTSEFQIG1l
dGhvZCB0byBhIHN1cGVyLXBpeGVsIHNlZ21lbnRlZCBpbWFnZS4KCi0gWyoq
SXJpcyBjbGFzc2lmaWNhdGlvbioqXShodHRwczovL3NsdW5kYmVyZy5naXRo
dWIuaW8vc2hhcC9ub3RlYm9va3MvSXJpcyUyMGNsYXNzaWZpY2F0aW9uJTIw
d2l0aCUyMHNjaWtpdC1sZWFybi5odG1sKSAtIEEgYmFzaWMgZGVtb25zdHJh
dGlvbiB1c2luZyB0aGUgcG9wdWxhciBpcmlzIHNwZWNpZXMgZGF0YXNldC4g
SXQgZXhwbGFpbnMgcHJlZGljdGlvbnMgZnJvbSBzaXggZGlmZmVyZW50IG1v
ZGVscyBpbiBzY2lraXQtbGVhcm4gdXNpbmcgYHNoYXBgLgoKIyMgRG9jdW1l
bnRhdGlvbiBub3RlYm9va3MKClRoZXNlIG5vdGVib29rcyBjb21wcmVoZW5z
aXZlbHkgZGVtb25zdHJhdGUgaG93IHRvIHVzZSBzcGVjaWZpYyBmdW5jdGlv
bnMgYW5kIG9iamVjdHMuIAoKLSBbYHNoYXAuZGVjaXNpb25fcGxvdGAgYW5k
IGBzaGFwLm11bHRpb3V0cHV0X2RlY2lzaW9uX3Bsb3RgXShodHRwczovL3Ns
dW5kYmVyZy5naXRodWIuaW8vc2hhcC9ub3RlYm9va3MvcGxvdHMvZGVjaXNp
b25fcGxvdC5odG1sKQoKLSBbYHNoYXAuZGVwZW5kZW5jZV9wbG90YF0oaHR0
cHM6Ly9zbHVuZGJlcmcuZ2l0aHViLmlvL3NoYXAvbm90ZWJvb2tzL3Bsb3Rz
L2RlcGVuZGVuY2VfcGxvdC5odG1sKQoKIyMgTWV0aG9kcyBVbmlmaWVkIGJ5
IFNIQVAKCjEuICpMSU1FOiogUmliZWlybywgTWFyY28gVHVsaW8sIFNhbWVl
ciBTaW5naCwgYW5kIENhcmxvcyBHdWVzdHJpbi4gIldoeSBzaG91bGQgaSB0
cnVzdCB5b3U/OiBFeHBsYWluaW5nIHRoZSBwcmVkaWN0aW9ucyBvZiBhbnkg
Y2xhc3NpZmllci4iIFByb2NlZWRpbmdzIG9mIHRoZSAyMm5kIEFDTSBTSUdL
REQgSW50ZXJuYXRpb25hbCBDb25mZXJlbmNlIG9uIEtub3dsZWRnZSBEaXNj
b3ZlcnkgYW5kIERhdGEgTWluaW5nLiBBQ00sIDIwMTYuCgoyLiAqU2hhcGxl
eSBzYW1wbGluZyB2YWx1ZXM6KiBTdHJ1bWJlbGosIEVyaWssIGFuZCBJZ29y
IEtvbm9uZW5rby4gIkV4cGxhaW5pbmcgcHJlZGljdGlvbiBtb2RlbHMgYW5k
IGluZGl2aWR1YWwgcHJlZGljdGlvbnMgd2l0aCBmZWF0dXJlIGNvbnRyaWJ1
dGlvbnMuIiBLbm93bGVkZ2UgYW5kIGluZm9ybWF0aW9uIHN5c3RlbXMgNDEu
MyAoMjAxNCk6IDY0Ny02NjUuCgozLiAqRGVlcExJRlQ6KiBTaHJpa3VtYXIs
IEF2YW50aSwgUGV5dG9uIEdyZWVuc2lkZSwgYW5kIEFuc2h1bCBLdW5kYWpl
LiAiTGVhcm5pbmcgaW1wb3J0YW50IGZlYXR1cmVzIHRocm91Z2ggcHJvcGFn
YXRpbmcgYWN0aXZhdGlvbiBkaWZmZXJlbmNlcy4iIGFyWGl2IHByZXByaW50
IGFyWGl2OjE3MDQuMDI2ODUgKDIwMTcpLgoKNC4gKlFJSToqIERhdHRhLCBB
bnVwYW0sIFNoYXlhayBTZW4sIGFuZCBZYWlyIFppY2suICJBbGdvcml0aG1p
YyB0cmFuc3BhcmVuY3kgdmlhIHF1YW50aXRhdGl2ZSBpbnB1dCBpbmZsdWVu
Y2U6IFRoZW9yeSBhbmQgZXhwZXJpbWVudHMgd2l0aCBsZWFybmluZyBzeXN0
ZW1zLiIgU2VjdXJpdHkgYW5kIFByaXZhY3kgKFNQKSwgMjAxNiBJRUVFIFN5
bXBvc2l1bSBvbi4gSUVFRSwgMjAxNi4KCjUuICpMYXllci13aXNlIHJlbGV2
YW5jZSBwcm9wYWdhdGlvbjoqIEJhY2gsIFNlYmFzdGlhbiwgZXQgYWwuICJP
biBwaXhlbC13aXNlIGV4cGxhbmF0aW9ucyBmb3Igbm9uLWxpbmVhciBjbGFz
c2lmaWVyIGRlY2lzaW9ucyBieSBsYXllci13aXNlIHJlbGV2YW5jZSBwcm9w
YWdhdGlvbi4iIFBsb1Mgb25lIDEwLjcgKDIwMTUpOiBlMDEzMDE0MC4KCjYu
ICpTaGFwbGV5IHJlZ3Jlc3Npb24gdmFsdWVzOiogTGlwb3ZldHNreSwgU3Rh
biwgYW5kIE1pY2hhZWwgQ29ua2xpbi4gIkFuYWx5c2lzIG9mIHJlZ3Jlc3Np
b24gaW4gZ2FtZSB0aGVvcnkgYXBwcm9hY2guIiBBcHBsaWVkIFN0b2NoYXN0
aWMgTW9kZWxzIGluIEJ1c2luZXNzIGFuZCBJbmR1c3RyeSAxNy40ICgyMDAx
KTogMzE5LTMzMC4KCjcuICpUcmVlIGludGVycHJldGVyOiogU2FhYmFzLCBB
bmRvLiBJbnRlcnByZXRpbmcgcmFuZG9tIGZvcmVzdHMuIGh0dHA6Ly9ibG9n
LmRhdGFkaXZlLm5ldC9pbnRlcnByZXRpbmctcmFuZG9tLWZvcmVzdHMvCgoj
IyBDaXRhdGlvbnMKClRoZSBhbGdvcml0aG1zIGFuZCB2aXN1YWxpemF0aW9u
cyB1c2VkIGluIHRoaXMgcGFja2FnZSBjYW1lIHByaW1hcmlseSBvdXQgb2Yg
cmVzZWFyY2ggaW4gW1N1LUluIExlZSdzIGxhYl0oaHR0cHM6Ly9zdWlubGVl
LmNzLndhc2hpbmd0b24uZWR1KSBhdCB0aGUgVW5pdmVyc2l0eSBvZiBXYXNo
aW5ndG9uLiBJZiB5b3UgdXNlIFNIQVAgaW4geW91ciByZXNlYXJjaCB3ZSB3
b3VsZCBhcHByZWNpYXRlIGEgY2l0YXRpb24gdG8gdGhlIGFwcHJvcHJpYXRl
IHBhcGVyKHMpOgoKLSBGb3IgZ2VuZXJhbCB1c2Ugb2YgU0hBUCB5b3UgY2Fu
IHJlYWQvY2l0ZSBvdXIgW05ldXJJUFMgcGFwZXJdKGh0dHA6Ly9wYXBlcnMu
bmlwcy5jYy9wYXBlci83MDYyLWEtdW5pZmllZC1hcHByb2FjaC10by1pbnRl
cnByZXRpbmctbW9kZWwtcHJlZGljdGlvbnMpIChbYmlidGV4XShodHRwczov
L3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vc2x1bmRiZXJnL3NoYXAvbWFz
dGVyL2RvY3MvcmVmZXJlbmNlcy9zaGFwX25pcHMuYmliKSkuIAotIEZvciBU
cmVlRXhwbGFpbmVyIHlvdSBjYW4gKGZvciBub3cpIHJlYWQvY2l0ZSBvdXIg
W2FyWGl2IHBhcGVyXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTkwNS4wNDYx
MCkgKFtiaWJ0ZXhdKGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNv
bS9zbHVuZGJlcmcvc2hhcC9tYXN0ZXIvZG9jcy9yZWZlcmVuY2VzL3RyZWVz
aGFwX2FyeGl2LmJpYikpLgotIEZvciBgZm9yY2VfcGxvdGAgdmlzdWFsaXph
dGlvbnMgYW5kIG1lZGljYWwgYXBwbGljYXRpb25zIHlvdSBjYW4gcmVhZC9j
aXRlIG91ciBbTmF0dXJlIEJpb21lZGljYWwgRW5naW5lZXJpbmcgcGFwZXJd
KGh0dHBzOi8vd3d3Lm5hdHVyZS5jb20vYXJ0aWNsZXMvczQxNTUxLTAxOC0w
MzA0LTApIChbYmlidGV4XShodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVu
dC5jb20vc2x1bmRiZXJnL3NoYXAvbWFzdGVyL2RvY3MvcmVmZXJlbmNlcy9u
YXR1cmVfYm1lLmJpYik7IFtmcmVlIGFjY2Vzc10oaHR0cHM6Ly9yZGN1LmJl
L2JhVmJSKSkuCgo8aW1nIGhlaWdodD0iMSIgd2lkdGg9IjEiIHN0eWxlPSJk
aXNwbGF5Om5vbmUiIHNyYz0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3Ry
P2lkPTE4OTE0NzA5MTg1NTk5MSZldj1QYWdlVmlldyZub3NjcmlwdD0xIiAv
Pgo=
",,7186,"bGFuZ3VhZ2U6IHB5dGhvbgpvczoKLSBsaW51eApweXRob246Ci0gJzMuNicK
YmVmb3JlX2luc3RhbGw6Ci0gc3VkbyBhZGQtYXB0LXJlcG9zaXRvcnkgLXkg
cHBhOnVidW50dS10b29sY2hhaW4tci90ZXN0Ci0gc3VkbyBhcHQtZ2V0IHVw
ZGF0ZQotIHN1ZG8gYXB0LWdldCBpbnN0YWxsIC15IGdjYy00LjkgZysrLTQu
OQotIHN1ZG8gdXBkYXRlLWFsdGVybmF0aXZlcyAtLWluc3RhbGwgL3Vzci9i
aW4vZ2NjIGdjYyAvdXNyL2Jpbi9nY2MtNC45IDYwIC0tc2xhdmUKICAvdXNy
L2Jpbi9nKysgZysrIC91c3IvYmluL2crKy00LjkKLSBzdWRvIGFwdC1nZXQg
aW5zdGFsbCAteSBsaWJnb21wMQppbnN0YWxsOgotIHBpcCBpbnN0YWxsIC4K
LSBwaXAgaW5zdGFsbCB0ZW5zb3JmbG93PT0xLjE0IGtlcmFzIHhnYm9vc3Qg
bWF0cGxvdGxpYiBpcHl0aG9uCnNjcmlwdDogcHl0aG9uIHNldHVwLnB5IG5v
c2V0ZXN0cwpkZXBsb3k6CiAgcHJvdmlkZXI6IHB5cGkKICB1c2VyOiAiX190
b2tlbl9fIgogIHBhc3N3b3JkOgogICAgc2VjdXJlOiBpVkIzNHVSMkNML0hu
K2xYRWNpcHQ0c0dLNWE4aFpFZlc4bzBEZUVaSGg2TlBPK3lra09qVWZhdmxH
QkdGajJZQkhYSG9iZU5EZ05GNjMrZzM3b3hhSXo4VU92cDZNWnRjdXh6TlVC
dVl2emtPU2tPZXZRRnR0TEpDUXVWb2ExZGdmT3VyMHppMlEwVTB4SnpxTlBv
VUVlTDN4MTV5TStXWHJCMCtibFlhQkt0OXkyVnFNenRsSkV4TUd6WlM2TjRj
Y2NtOFlkR1NrdDZkS292VnZ6UjZTaFRUL2RJVm1ldWFWelZrSjZOTFM3YXc4
aTcxSTd6eHhGNytLODZ0bFdtOCtML0x0ZXlKeUxoRU5WTzYxNGVsNlJ4WUZv
S3JMd1l0aElxbkxNd3hwWmt0VmVqeW1rVzFCaGFadmpJVXdxN25xR0dtOUNr
bFpwYkRXTnMyVlArVVVtQzF6aVl1QS9EL3pQUXk4R0k3MTJhWmd1VGxGMGdK
YTFkaXFMa3pEd05JQmNQVjJ4WWxiaXBia0FFeHpnWm5tN3lLczl4M3dSS0R3
MkdKc1lIZUUxTnZOSlI4U043TWVVYklDbWVrSEh6UTZ5cjlCMFpmakhOakxt
QkthRmF2d0I4akVIajB1LzJQQm10Z0xMOGoya0w4aFhvSS9qUG5paGJVUTRu
b2cvV2tHUUNDT2g5NDB6aHE1QXRacnd4eERtd2wyelN3QUppSUNyaTZhaDEw
YysxQXMxa25jcHM0aXAyM2Q3V2J4Y0ZmWXBSYitrbjhOUzlYOU5YMUQ2YzFj
RmdndDk2elBWa1EzQkFXNHZIYVhDS3hxS3c4ZlowY0RZSzNBNklLZHpTYXVM
aVR2OGJWbDd3SS8xeUFUQmtqc0lqVDAwcDV6Zzhqdmw4aksrQlE4bz0KICBv
bjoKICAgIHRhZ3M6IHRydWUKICBkaXN0cmlidXRpb25zOiAic2Rpc3QiICMg
YmRpc3Rfd2hlZWwgYnJlYWtzIGJlY2F1c2UgcGlweSByZWplY3RzIGxpbnV4
IHdoZWVscwogIHNraXBfY2xlYW51cDogdHJ1ZQogIHNraXBfZXhpc3Rpbmc6
IHRydWU=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'GoBooks',35093606,b'List of Golang books',,3,7183,,518,False,b'https://api.github.com/repos/dariubs/GoBooks/forks',"QXdlc29tZSBHbyBCb29rcyBbIVtCdWlsZCBTdGF0dXNdKGh0dHBzOi8vdHJh
dmlzLWNpLm9yZy9kYXJpdWJzL0dvQm9va3Muc3ZnP2JyYW5jaD1tYXN0ZXIp
XShodHRwczovL3RyYXZpcy1jaS5vcmcvZGFyaXVicy9Hb0Jvb2tzKSBbIVtB
d2Vzb21lXShodHRwczovL2Nkbi5yYXdnaXQuY29tL3NpbmRyZXNvcmh1cy9h
d2Vzb21lL2Q3MzA1ZjM4ZDI5ZmVkNzhmYTg1NjUyZTNhNjNlMTU0ZGQ4ZTg4
MjkvbWVkaWEvYmFkZ2Uuc3ZnKV0oaHR0cHM6Ly9naXRodWIuY29tL3NpbmRy
ZXNvcmh1cy9hd2Vzb21lKQo9PT09CiogW0Jvb2tzXSgjYm9va3MpCiAqIFtT
dGFydGVyIEJvb2tzXSgjc3RhcnRlci1ib29rcykKICogW0FkdmFuY2VkIEJv
b2tzXSgjYWR2YW5jZWQtYm9va3MpCiAqIFtXZWIgRGV2ZWxvcG1lbnRdKCN3
ZWItZGV2ZWxvcG1lbnQpCiogW1Jlc291cmNlc10oI3Jlc291cmNlcykKCgoq
KkJvb2tzKioKPT09PQoKKipTdGFydGVyIEJvb2tzKioKLS0tLQoKIyMjIFtU
aGUgTGl0dGxlIEdvIEJvb2tdKGh0dHA6Ly9vcGVubXltaW5kLm5ldC9UaGUt
TGl0dGxlLUdvLUJvb2svKSAqRnJlZSoKCjxpbWcgc3JjPSJodHRwOi8vb3Bl
bm15bWluZC5uZXQvYXNzZXRzL2dvL3RpdGxlLnBuZyIgd2lkdGg9IjEyMHB4
Ii8+CgpUaGUgTGl0dGxlIEdvIEJvb2sgaXMgYSBmcmVlIGludHJvZHVjdGlv
biB0byBHb29nbGUncyBHbyBwcm9ncmFtbWluZyBsYW5ndWFnZS4gSXQncyBh
aW1lZCBhdCBkZXZlbG9wZXJzIHdobyBtaWdodCBub3QgYmUgcXVpdGUgY29t
Zm9ydGFibGUgd2l0aCB0aGUgaWRlYSBvZiBwb2ludGVycyBhbmQgc3RhdGlj
IHR5cGluZy4gSXQncyBsb25nZXIgdGhhbiB0aGUgb3RoZXIgTGl0dGxlIGJv
b2tzLCBidXQgaG9wZWZ1bGx5IHN0aWxsIGNhcHR1cmVzIHRoYXQgbGl0dGxl
IGZlZWxpbmcuCgojIyMgW0FuIEludHJvZHVjdGlvbiB0byBQcm9ncmFtbWlu
ZyBpbiBHb10oaHR0cDovL3d3dy5nb2xhbmctYm9vay5jb20vKSAqRnJlZSoK
CjxpbWcgc3JjPSJodHRwOi8vd3d3LmdvbGFuZy1ib29rLmNvbS9wdWJsaWMv
aW1nL2ludHJvL2NvdmVyLjQxOTQwNDUyMzQucG5nIiB3aWR0aD0iMTIwcHgi
Lz4KClRoaXMgYm9vayBpcyBhIHNob3J0LCBjb25jaXNlIGludHJvZHVjdGlv
biB0byBjb21wdXRlciBwcm9ncmFtbWluZyB1c2luZyB0aGUgbGFuZ3VhZ2Ug
R28uIERlc2lnbmVkIGJ5IEdvb2dsZSwgR28gaXMgYSBnZW5lcmFsIHB1cnBv
c2UgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2Ugd2l0aCBtb2Rlcm4gZmVhdHVyZXMs
IGNsZWFuIHN5bnRheCBhbmQgYSByb2J1c3Qgd2VsbC1kb2N1bWVudGVkIGNv
bW1vbiBsaWJyYXJ5LCBtYWtpbmcgaXQgYW4gaWRlYWwgbGFuZ3VhZ2UgdG8g
bGVhcm4gYXMgeW91ciBmaXJzdCBwcm9ncmFtbWluZyBsYW5ndWFnZS4KClRo
aXMgYm9vayBpcyBmcmVlIHRvIFtyZWFkIG9ubGluZV0oaHR0cDovL3d3dy5n
b2xhbmctYm9vay5jb20vKSBvciBbcGRmIGZvcm1dKGh0dHA6Ly93d3cuZ29s
YW5nLWJvb2suY29tL3B1YmxpYy9wZGYvZ29ib29rLnBkZikuCgojIyMgW0dv
IEJvb3RjYW1wXShodHRwOi8vd3d3LmdvbGFuZ2Jvb3RjYW1wLmNvbS8pICpG
cmVlKgoKPGltZyBzcmM9Imh0dHBzOi8vc29mdGNvdmVyLnMzLmFtYXpvbmF3
cy5jb20vMzgvR29Cb290Y2FtcC9pbWFnZXMvY292ZXItd2ViLnBuZyIgd2lk
dGg9IjEyMHB4Ii8+CgpUaGlzIGNvbXBhbmlvbiBib29rIGNvbnRhaW5zIG1h
dGVyaWFsIGluaXRpYWxseSB3cml0dGVuIHNwZWNpZmljYWxseSBmb3IgdGhp
cyBldmVudCBhcyB3ZWxsIGFzIGNvbnRlbnQgZnJvbSBHb29nbGUgJiB0aGUg
R28gdGVhbSB1bmRlciBDcmVhdGl2ZSBDb21tb25zIEF0dHJpYnV0aW9uIDMu
MCBMaWNlbnNlIGFuZCBjb2RlIGxpY2Vuc2VkIHVuZGVyIGEgQlNEIGxpY2Vu
c2UuCgojIyMgW0xlYXJuaW5nIEdvXShodHRwOi8vd3d3Lm1pZWsubmwvZ28p
ICpGcmVlKgoKPGltZyBzcmM9Imh0dHBzOi8vd3d3Lm1pZWsubmwvZ28vZmln
L2J1bXBlci1pbnZlcnNlLnBuZyIgd2lkdGg9IjEyMHB4Ii8+CgpBIG9ubGlu
ZSBib29rIHRvIHN0YXJ0IGxlYXJuaW5nIEdvbGFuZy4gSXQgZmVhdHVyZXMg
bnVtZXJvdXMgZXhlcmNpc2VzIChhbmQgYW5zd2VycykuCgpUaGUgW21hcmtk
b3duIHNvdXJjZSBpcyBhdmFpbGFibGUgb24gR2l0aHViXShodHRwczovL2dp
dGh1Yi5jb20vbWlla2cvbGVhcm5pbmdnbykuCgojIyMgW0dvIGZvciBKYXZh
c2NyaXB0IERldmVsb3BlcnNdKGh0dHBzOi8vZ2l0aHViLmNvbS9wYXphbXMv
Z28tZm9yLWphdmFzY3JpcHQtZGV2ZWxvcGVycykgKkZyZWUqCgo8aW1nIHNy
Yz0iaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3BhemFtcy9n
by1mb3ItamF2YXNjcmlwdC1kZXZlbG9wZXJzL21hc3Rlci9zcmMvaW1hZ2Vz
L3RodW1iLnBuZyIgd2lkdGg9IjEyMHB4Ii8+CgpUaGlzIGJvb2sgaGVscHMg
SmF2YXNjcmlwdGVycyBiZWNvbWUgR29waGVycy4gT3V0bGluaW5nIHRoZSBk
aWZmZXJlbmNlcyBiZXR3ZWVuIHRoZXNlIGxhbmd1YWdlcyBtYWtlcyBpdCBl
YXNpZXIgdG8gc3dpdGNoIGJhY2sgYW5kIGZvcnRoLCBhbmQgY2FuIGhlbHAg
bWl0aWdhdGUgcG90ZW50aWFsIGlzc3VlcyB3aGVuIGRvaW5nIHNvLgoKIyMj
IFtHbyBpbiBBY3Rpb25dKGh0dHBzOi8vd3d3Lm1hbm5pbmcuY29tL2Jvb2tz
L2dvLWluLWFjdGlvbikKCjxpbWcgc3JjPSJodHRwczovL2ltYWdlcy5tYW5u
aW5nLmNvbS8xMjAvMTYwL3Jlc2l6ZS9ib29rL2MvNDAzN2Q1ZC1lNWU1LTQ5
YmYtYTNjMS00ODBiZTI5MDdlYWEvS2VubmVkeS1HTy1ISS5wbmciIHdpZHRo
PSIxMjBweCI+CgpHbyBpbiBBY3Rpb24gaW50cm9kdWNlcyB0aGUgR28gbGFu
Z3VhZ2UsIGd1aWRpbmcgeW91IGZyb20gaW5xdWlzaXRpdmUgZGV2ZWxvcGVy
IHRvIEdvIGd1cnUuIFRoZSBib29rIGJlZ2lucyBieSBpbnRyb2R1Y2luZyB0
aGUgdW5pcXVlIGZlYXR1cmVzIGFuZCBjb25jZXB0cyBvZiBHby4gKFdlIGFz
c3VtZSB5b3UncmUgdXAgdG8gc3BlZWQgd2l0aCBhbm90aGVyIHByb2dyYW1t
aW5nIGxhbmd1YWdlIGFscmVhZHksIHNvIGRvbid0IGV4cGVjdCB0byBzcGVu
ZCBhIGxvdCBvZiB0aW1lIHJlaGVhcnNpbmcgc3R1ZmYgeW91IGFscmVhZHkg
a25vdy4pIFRoZW4sIHlvdSdsbCBnZXQgaGFuZHMtb24gZXhwZXJpZW5jZSB3
cml0aW5nIHJlYWwtd29ybGQgYXBwbGljYXRpb25zIGluY2x1ZGluZyB3ZWIg
c2l0ZXMgYW5kIG5ldHdvcmsgc2VydmVycywgYXMgd2VsbCBhcyB0ZWNobmlx
dWVzIHRvIG1hbmlwdWxhdGUgYW5kIGNvbnZlcnQgZGF0YSBhdCBzcGVlZHMg
dGhhdCB3aWxsIG1ha2UgeW91ciBmcmllbmRzIGplYWxvdXMuIEluIHRoZSBm
aW5hbCBjaGFwdGVycywgeW91J2xsIGdvIGluLWRlcHRoIHdpdGggdGhlIGxh
bmd1YWdlIGFuZCBzZWUgdGhlIHRyaWNrcyBhbmQgc2VjcmV0cyB0aGF0IHRo
ZSBHbyBtYXN0ZXJzIGFyZSB1c2luZyB0byBtYWtlIHRoZWlyIGFwcGxpY2F0
aW9ucyBwZXJmb3JtLiBGb3IgZXhhbXBsZSwgeW91J2xsIGxlYXJuIHRvIHVz
ZSBHbydzIHBvd2VyZnVsIHJlZmxlY3Rpb24gbGlicmFyaWVzIGFuZCB3b3Jr
IHdpdGggcmVhbC13b3JsZCBleGFtcGxlcyBvZiBpbnRlZ3JhdGlvbiB3aXRo
IEMgY29kZS4KCiMjIyBbR28gUHJvZ3JhbW1pbmcgQmx1ZXByaW50cyAtIDJu
ZCBFZC5dKGh0dHBzOi8vd3d3LnBhY2t0cHViLmNvbS9hcHBsaWNhdGlvbi1k
ZXZlbG9wbWVudC9nby1wcm9ncmFtbWluZy1ibHVlcHJpbnRzLXNlY29uZC1l
ZGl0aW9uKQoKPGltZyBzcmM9Imh0dHBzOi8vd3d3LnBhY2t0cHViLmNvbS9t
ZWRpYS9jYXRhbG9nL3Byb2R1Y3QvY2FjaGUvZTRkNjQzNDNiMWJjNTkzZjFj
NTM0OGZlMDVlZmE0YTYvYi8wL2IwNTU2OS5wbmciIHdpZHRoPSIxMjBweCIv
PgoKVGhpcyBib29rIHNob3dzIHlvdSBob3cgdG8gYnVpbGQgcG93ZXJmdWwg
c3lzdGVtcyBhbmQgZHJvcHMgeW91IGludG8gcmVhbC13b3JsZCBzaXR1YXRp
b25zLiBTY2FsZSwgcGVyZm9ybWFuY2UsIGFuZCBoaWdoIGF2YWlsYWJpbGl0
eSBsaWUgYXQgdGhlIGhlYXJ0IG9mIG91ciBwcm9qZWN0cywgYW5kIHRoZSBs
ZXNzb25zIGxlYXJuZWQgdGhyb3VnaG91dCB0aGlzIGJvb2sgd2lsbCBhcm0g
eW91IHdpdGggZXZlcnl0aGluZyB5b3UgbmVlZCB0byBidWlsZCB3b3JsZC1j
bGFzcyBzb2x1dGlvbnMuCgojIyMgW1Byb2dyYW1taW5nIGluIEdvOiBDcmVh
dGluZyBBcHBsaWNhdGlvbnMgZm9yIHRoZSAyMXN0IENlbnR1cnldKGh0dHA6
Ly93d3cuaW5mb3JtaXQuY29tL3N0b3JlL3Byb2dyYW1taW5nLWluLWdvLWNy
ZWF0aW5nLWFwcGxpY2F0aW9ucy1mb3ItdGhlLTIxc3QtOTc4MDMyMTc3NDYz
NykKCjxpbWcgc3JjPSJodHRwOi8vd3d3LmluZm9ybWl0LmNvbS9TaG93Q292
ZXIuYXNweD9pc2JuPTk3ODAzMjE3NzQ2MzcmdHlwZT1mIiB3aWR0aD0iMTIw
cHgiLz4KCiBQcm9ncmFtbWluZyBpbiBHbyBicmluZ3MgdG9nZXRoZXIgYWxs
IHRoZSBrbm93bGVkZ2UgeW91IG5lZWQgdG8gZXZhbHVhdGUgR28sIHRoaW5r
IGluIEdvLCBhbmQgd3JpdGUgaGlnaC1wZXJmb3JtYW5jZSBzb2Z0d2FyZSB3
aXRoIEdvLiBTdW1tZXJmaWVsZCBwcmVzZW50cyBtdWx0aXBsZSBpZGlvbSBj
b21wYXJpc29ucyBzaG93aW5nIGV4YWN0bHkgaG93IEdvIGltcHJvdmVzIHVw
b24gb2xkZXIgbGFuZ3VhZ2VzLCBjYWxsaW5nIHNwZWNpYWwgYXR0ZW50aW9u
IHRvIEdv4oCZcyBrZXkgaW5ub3ZhdGlvbnMuIEFsb25nIHRoZSB3YXksIGhl
IGV4cGxhaW5zIGV2ZXJ5dGhpbmcgZnJvbSB0aGUgYWJzb2x1dGUgYmFzaWNz
IHRocm91Z2ggR2/igJlzIGxvY2stZnJlZSBjaGFubmVsLWJhc2VkIGNvbmN1
cnJlbmN5IGFuZCBpdHMgZmxleGlibGUgYW5kIHVudXN1YWwgZHVjay10eXBp
bmcgdHlwZS1zYWZlIGFwcHJvYWNoIHRvIG9iamVjdC1vcmllbnRhdGlvbi4K
CgojIyMgW1RoZSBHbyBQcm9ncmFtbWluZyBMYW5ndWFnZV0oaHR0cDovL2dv
cGwuaW8vKQoKPGEgaHJlZj0naHR0cDovL2dvcGwuaW8vJz48aW1nIHNyYz0i
aHR0cDovL2dvcGwuaW8vY292ZXIucG5nIiB3aWR0aD0iMTIwcHgiLz48L2E+
CgoqVGhlIEdvIFByb2dyYW1taW5nIExhbmd1YWdlKiBpcyB0aGUgYXV0aG9y
aXRhdGl2ZSByZXNvdXJjZSBmb3IgYW55CnByb2dyYW1tZXIgd2hvIHdhbnRz
IHRvIGxlYXJuIEdvLgpBbGFuIEEuIEEuIERvbm92YW4gYW5kIEJyaWFuIFcu
IEtlcm5pZ2hhbiBzaG93IHlvdSBob3cgdG8gd3JpdGUgY2xlYXIKYW5kIGlk
aW9tYXRpYyBHbyB0byBzb2x2ZSByZWFsLXdvcmxkIHByb2JsZW1zLgpUaGUg
Ym9vayBkb2VzIG5vdCBhc3N1bWUgcHJpb3Iga25vd2xlZGdlIG9mIEdvIG5v
ciBleHBlcmllbmNlIHdpdGgKYW55IHNwZWNpZmljIGxhbmd1YWdlLCBzbyB5
b3UnbGwgZmluZCBpdCBhY2Nlc3NpYmxlIHdoZXRoZXIgeW91J3JlCm1vc3Qg
Y29tZm9ydGFibGUgd2l0aCBKYXZhU2NyaXB0LCBSdWJ5LCBQeXRob24sIEph
dmEsIG9yIEMrKy4KClRoZSBib29rIGZlYXR1cmVzIGh1bmRyZWRzIG9mIGlu
dGVyZXN0aW5nIGFuZCBwcmFjdGljYWwgZXhhbXBsZXMgb2YKaWRpb21hdGlj
IEdvIGNvZGUgdGhhdCBjb3ZlciB0aGUgd2hvbGUgbGFuZ3VhZ2UsIGl0cyBt
b3N0IGltcG9ydGFudCBsaWJyYXJpZXMsCmFuZCBhIHdpZGUgcmFuZ2Ugb2Yg
YXBwbGljYXRpb25zLgpTb3VyY2UgY29kZSBpcyBmcmVlbHkgYXZhaWxhYmxl
IGZvciBkb3dubG9hZCBmcm9tIHRoZSBib29rJ3MgY29tcGFuaW9uIHdlYiBz
aXRlCltnb3BsLmlvXShodHRwOi8vZ29wbC5pby8pLAphbmQgbWF5IGJlIGNv
bnZlbmllbnRseSBmZXRjaGVkLCBidWlsdCwgYW5kIGluc3RhbGxlZCB1c2lu
ZyB0aGUgYGdvIGdldGAgY29tbWFuZC4KCiMjIyBbSW50cm9kdWNpbmcgR286
IEJ1aWxkIFJlbGlhYmxlLCBTY2FsYWJsZSBQcm9ncmFtc10oaHR0cDovL3No
b3Aub3JlaWxseS5jb20vcHJvZHVjdC8wNjM2OTIwMDQ2NTE2LmRvKQoKPGEg
aHJlZj0iaHR0cDovL3Nob3Aub3JlaWxseS5jb20vcHJvZHVjdC8wNjM2OTIw
MDQ2NTE2LmRvIj48aW1nIHNyYz0iaHR0cDovL2FrYW1haWNvdmVycy5vcmVp
bGx5LmNvbS9pbWFnZXMvMDYzNjkyMDA0NjUxNi9scmcuanBnIiB3aWR0aD0i
MTIwcHgiLz48L2E+CgpQZXJmZWN0IGZvciBiZWdpbm5lcnMgZmFtaWxpYXIg
d2l0aCBwcm9ncmFtbWluZyBiYXNpY3MsIHRoaXMgaGFuZHMtb24gZ3VpZGUg
cHJvdmlkZXMgYW4gZWFzeSBpbnRyb2R1Y3Rpb24gdG8gR28sIHRoZSBnZW5l
cmFsLXB1cnBvc2UgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2UgZnJvbSBHb29nbGUu
IEF1dGhvciBDYWxlYiBEb3hzZXkgY292ZXJzIHRoZSBsYW5ndWFnZSdzIGNv
cmUgZmVhdHVyZXMgd2l0aCBzdGVwLWJ5LXN0ZXAgaW5zdHJ1Y3Rpb25zIGFu
ZCBleGVyY2lzZXMgaW4gZWFjaCBjaGFwdGVyIHRvIGhlbHAgeW91IHByYWN0
aWNlIHdoYXQgeW91IGxlYXJuLgoKIyMjIFtHZXQgUHJvZ3JhbW1pbmcgd2l0
aCBHb10oaHR0cHM6Ly93d3cubWFubmluZy5jb20vYm9va3MvZ2V0LXByb2dy
YW1taW5nLXdpdGgtZ28/YV9haWQ9bmF0aGFueSZhX2JpZD01M2Y2ODgyMSkK
CjxhIGhyZWY9Imh0dHBzOi8vd3d3Lm1hbm5pbmcuY29tL2Jvb2tzL2dldC1w
cm9ncmFtbWluZy13aXRoLWdvP2FfYWlkPW5hdGhhbnkmYV9iaWQ9NTNmNjg4
MjEiPjxpbWcgc3JjPSJodHRwczovL2ltYWdlcy5tYW5uaW5nLmNvbS83MjAv
OTYwL3Jlc2l6ZS9ib29rLzMvZGRkNTZhNi1iYTJiLTRjYTQtYmRhMi01NDA3
NjFiOTFjNTUvR28tWW91bmdtYW5faGktcmVzX1JFVi5wbmciIHdpZHRoPSIx
MjBweCIvPjwvYT4KCipHZXQgUHJvZ3JhbW1pbmcgd2l0aCBHbyogaW50cm9k
dWNlcyB5b3UgdG8gdGhlIHBvd2VyZnVsIEdvIGxhbmd1YWdlIHdpdGhvdXQg
Y29uZnVzaW5nIGphcmdvbiBvciBoaWdoLWxldmVsIHRoZW9yeS4gQnkgd29y
a2luZyB0aHJvdWdoIDMyIHF1aWNrLWZpcmUgbGVzc29ucywgeW91J2xsIHF1
aWNrbHkgcGljayB1cCB0aGUgYmFzaWNzIG9mIHRoZSBpbm5vdmF0aXZlIEdv
IHByb2dyYW1taW5nIGxhbmd1YWdlIQoKIyMjIFtHbyBQcm9ncmFtbWluZyBi
eSBFeGFtcGxlXShodHRwczovL3d3dy5hbWF6b24uY29tL0dvLVByb2dyYW1t
aW5nLUV4YW1wbGUtQWd1cy1LdXJuaWF3YW4tZWJvb2svZHAvQjAwVFdMWlZR
USkKCjxhIGhyZWY9Imh0dHBzOi8vd3d3LmFtYXpvbi5jb20vR28tUHJvZ3Jh
bW1pbmctRXhhbXBsZS1BZ3VzLUt1cm5pYXdhbi1lYm9vay9kcC9CMDBUV0xa
VlFRIj48aW1nIHNyYz0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1h
bWF6b24uY29tL2ltYWdlcy9JLzQxdERvSDlsMEdMLmpwZyIgd2lkdGg9IjEy
MHB4Ii8+PC9hPgoKR28sIGNvbW1vbmx5IHJlZmVycmVkIHRvIGFzIGdvbGFu
ZywgaXMgYSBwcm9ncmFtbWluZyBsYW5ndWFnZSBpbml0aWFsbHkgZGV2ZWxv
cGVkIGF0IEdvb2dsZSBpbiAyMDA3LiBUaGlzIGJvb2sgaGVscHMgeW91IHRv
IGdldCBzdGFydGVkIHdpdGggR28gcHJvZ3JhbW1pbmcuIEl0IGRlc2NyaWJl
cyBhbGwgdGhlIGVsZW1lbnRzIG9mIHRoZSBsYW5ndWFnZSBhbmQgaWxsdXN0
cmF0ZXMgdGhlaXIgdXNlIHdpdGggY29kZSBleGFtcGxlcy4KCiMjIyBbR28g
UmVjaXBlc10oaHR0cDovL3d3dy5hcHJlc3MuY29tL3VzL2Jvb2svOTc4MTQ4
NDIxMTg5MikKCjxhIGhyZWY9Imh0dHA6Ly93d3cuYXByZXNzLmNvbS91cy9i
b29rLzk3ODE0ODQyMTE4OTIiPjxpbWcgc3JjPSJodHRwczovL2ltYWdlcy5z
cHJpbmdlci5jb20vc2d3L2Jvb2tzL21lZGl1bS85NzgxNDg0MjExODkyLmpw
ZyIgd2lkdGg9IjEyMHB4Ii8+PC9hPgoKU29sdmUgeW91ciBHbyBwcm9ibGVt
cyB1c2luZyBhIHByb2JsZW0tc29sdXRpb24gYXBwcm9hY2guIEVhY2ggcmVj
aXBlIGlzIGEgc2VsZi1jb250YWluZWQgYW5zd2VyIHRvIGEgcHJhY3RpY2Fs
IHByb2dyYW1taW5nIHByb2JsZW0gaW4gR28uIEdvIFJlY2lwZXMgY29udGFp
bnMgcmVjaXBlcyB0aGF0IGRlYWwgd2l0aCB0aGUgZnVuZGFtZW50YWxzIG9m
IEdvLCBhbGxvd2luZyB5b3UgdG8gYnVpbGQgc2ltcGxlLCByZWxpYWJsZSwg
YW5kIGVmZmljaWVudCBzb2Z0d2FyZS4gT3RoZXIgdG9waWNzIGluY2x1ZGUg
d29ya2luZyB3aXRoIGRhdGEgdXNpbmcgbW9kZXJuIE5vU1FMIGRhdGFiYXNl
cyBzdWNoIGFzIE1vbmdvREIgYW5kIFJldGhpbmtEQi4gVGhlIGJvb2sgcHJv
dmlkZXMgaW4tZGVwdGggZ3VpZGFuY2UgZm9yIGJ1aWxkaW5nIGhpZ2hseSBz
Y2FsYWJsZSBiYWNrZW5kIEFQSXMgaW4gR28gZm9yIHlvdXIgbW9iaWxlIGNs
aWVudCBhcHBsaWNhdGlvbnMgYW5kIHdlYiBjbGllbnQgYXBwbGljYXRpb25z
LgoKIyMjIFtMZWFybmluZyBHbyBwcm9ncmFtbWluZ10oaHR0cHM6Ly93d3cu
cGFja3RwdWIuY29tL2FwcGxpY2F0aW9uLWRldmVsb3BtZW50L2xlYXJuaW5n
LWdvLXByb2dyYW1taW5nKQoKPGEgaHJlZj0iaHR0cHM6Ly93d3cucGFja3Rw
dWIuY29tL2FwcGxpY2F0aW9uLWRldmVsb3BtZW50L2xlYXJuaW5nLWdvLXBy
b2dyYW1taW5nIj48aW1nIHNyYz0iaHR0cHM6Ly92bGFkaW1pcnZpdmllbi5n
aXRodWIuaW8vbGVhcm5pbmctZ28vZnJvbnQtY292ZXItc21hbGwtMjQzeDMw
MC5qcGciIHdpZHRoPSIxMjBweCIvPjwvYT4KCipMZWFybmluZyBHbyBQcm9n
cmFtbWluZyogaXMgYSBib29rIGludGVuZGVkIHRvIGhlbHAgbmV3LCBhbmQg
c2Vhc29uZWQgcHJvZ3JhbW1lcnMgYWxpa2UsIHRvIGdldCBpbnRvIHRoZSBH
byBwcm9ncmFtbWluZyBsYW5ndWFnZS4gVGhlIGJvb2sgZGlzdGlsbHMgdGhl
IGxhbmd1YWdlIHNwZWNzLCB0aGUgZG9jdW1lbnRhdGlvbnMsIHRoZSBibG9n
cywgdGhlIHZpZGVvcywgc2xpZGVzLCBhbmQgdGhlIGF1dGhvcidzIGV4cGVy
aWVuY2VzIG9mIHdyaXRpbmcgR28gaW50byBjb250ZW50IHRoYXQgY2FyZWZ1
bGx5IHByb3ZpZGVzIHRoZSByaWdodCBhbW91bnQgb2YgZGVwdGggYW5kIGlu
c2lnaHRzIHRvIGhlbHAgeW91IHVuZGVyc3RhbmQgdGhlIGxhbmd1YWdlIGFu
ZCBpdHMgZGVzaWduLgoKIyMjIFtBUEkgRm91bmRhdGlvbnMgaW4gR29dKGh0
dHBzOi8vbGVhbnB1Yi5jb20vYXBpLWZvdW5kYXRpb25zKQoKPGEgaHJlZj0i
aHR0cHM6Ly9sZWFucHViLmNvbS9hcGktZm91bmRhdGlvbnMiPjxpbWcgc3Jj
PSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vdGl0bGVwYWdlcy5sZWFucHVi
LmNvbS9hcGktZm91bmRhdGlvbnMvaGVybz8xNTA0MjkwNzY1IiB3aWR0aD0i
MTIwcHgiLz48L2E+CgpXaXRoIHRoaXMgYm9vayB5b3UnbGwgbGVhcm4gdG8g
dXNlIEdvLCB0YWtpbmcgYWR2YW50YWdlIG9mIGl0J3MgbXVsdGktdGhyZWFk
ZWQgbmF0dXJlLCBhbmQgdHlwZWQgc3ludGF4LiBTdGFydGluZyB5b3VyIEFQ
SSBpbXBsZW1lbnRhdGlvbiBpbiBHbyBpcyB5b3VyIGZpcnN0IHN0ZXAgdG93
YXJkcyB3aGF0IGEgcm9jayBzb2xpZCBBUEkgc2hvdWxkIGJlLgoKKipBZHZh
bmNlZCBCb29rcyoqCi0tLQoKIyMjIFtUZXN0LWRyaXZlbiBkZXZlbG9wbWVu
dCB3aXRoIEdvIF0oaHR0cHM6Ly9sZWFucHViLmNvbS9nb2xhbmctdGRkKSAq
RnJlZSoKCkEgc2hvcnQgZ3VpZGUgdG8gVGVzdC1kcml2ZW4gZGV2ZWxvcG1l
bnQgaW4gZ29sYW5nLiBmcmVlIHRvIFtyZWFkIG9ubGluZV0oaHR0cHM6Ly9s
ZWFucHViLmNvbS9nb2xhbmctdGRkL3JlYWQpLgoKIyMjIFtHbyBwcm9ncmFt
bWluZyBsYW5ndWFnZSBzZWN1cmUgY29kaW5nIHByYWN0aWNlcyBndWlkZV0o
aHR0cHM6Ly9jaGVja21hcnguZ2l0Ym9va3MuaW8vZ28tc2NwLykgKkZyZWUq
CgpUaGUgbWFpbiBnb2FsIG9mIHRoaXMgYm9vayBpcyB0byBoZWxwIGRldmVs
b3BlcnMgYXZvaWQgY29tbW9uIG1pc3Rha2VzIHdoaWxlIGF0IHRoZSBzYW1l
IHRpbWUsIGxlYXJuaW5nIGEgbmV3IHByb2dyYW1taW5nIGxhbmd1YWdlIHRo
cm91Z2ggYSAiaGFuZHMtb24gYXBwcm9hY2giLiBUaGlzIGJvb2sgcHJvdmlk
ZXMgYSBnb29kIGxldmVsIG9mIGRldGFpbCBvbiAiaG93IHRvIGRvIGl0IHNl
Y3VyZWx5IiBzaG93aW5nIHdoYXQga2luZCBvZiBzZWN1cml0eSBwcm9ibGVt
cyBjb3VsZCBhcmlzZSBkdXJpbmcgZGV2ZWxvcG1lbnQuCgojIyMgW05ldHdv
cmsgUHJvZ3JhbW1pbmcgd2l0aCBHb10oaHR0cHM6Ly93d3cuYXByZXNzLmNv
bS91cy9ib29rLzk3ODE0ODQyMjY5MTkpCgo8aW1nIHNyYz0iaHR0cHM6Ly9p
bWFnZXMuc3ByaW5nZXIuY29tL3Nndy9ib29rcy9tZWRpdW0vOTc4MTQ4NDIy
NjkxOS5qcGciIHdpZHRoPSIxMjBweCIvPgoKRGl2ZSBpbnRvIGtleSB0b3Bp
Y3MgaW4gbmV0d29yayBhcmNoaXRlY3R1cmUgYW5kIEdvLCBzdWNoIGFzIGRh
dGEgc2VyaWFsaXphdGlvbiwgYXBwbGljYXRpb24gbGV2ZWwgcHJvdG9jb2xz
LCBjaGFyYWN0ZXIgc2V0cyBhbmQgZW5jb2RpbmdzLiBUaGlzIGJvb2sgY292
ZXJzIG5ldHdvcmsgYXJjaGl0ZWN0dXJlIGFuZCBnaXZlcyBhbiBvdmVydmll
dyBvZiB0aGUgR28gbGFuZ3VhZ2UgYXMgYSBwcmltZXIsIGNvdmVyaW5nIHRo
ZSBsYXRlc3QgR28gcmVsZWFzZS4KCkJleW9uZCB0aGUgZnVuZGFtZW50YWxz
LCBOZXR3b3JrIFByb2dyYW1taW5nIHdpdGggR28gY292ZXJzIGtleSBuZXR3
b3JraW5nIGFuZCBzZWN1cml0eSBpc3N1ZXMgc3VjaCBhcyBIVFRQIGFuZCBI
VFRQUywgdGVtcGxhdGVzLCByZW1vdGUgcHJvY2VkdXJlIGNhbGwgKFJQQyks
IHdlYiBzb2NrZXRzIGluY2x1ZGluZyBIVE1MNSB3ZWIgc29ja2V0cywgYW5k
IG1vcmUuCgojIyMgW01hc3RlcmluZyBDb25jdXJyZW5jeSBpbiBHb10oaHR0
cDovL3Nob3Aub3JlaWxseS5jb20vcHJvZHVjdC85NzgxNzgzOTgzNDgzLmRv
KQoKPGltZyBzcmM9Imh0dHA6Ly9ha2FtYWljb3ZlcnMub3JlaWxseS5jb20v
aW1hZ2VzLzk3ODE3ODM5ODM0ODMvbHJnLmpwZyIgd2lkdGg9IjEyMHB4Ii8+
CgpUaGlzIGJvb2sgd2lsbCB0YWtlIHlvdSB0aHJvdWdoIHRoZSBoaXN0b3J5
IG9mIGNvbmN1cnJlbmN5LCBob3cgR28gdXRpbGl6ZXMgaXQsIGhvdyBHbyBk
aWZmZXJzIGZyb20gb3RoZXIgbGFuZ3VhZ2VzLCBhbmQgdGhlIGZlYXR1cmVz
IGFuZCBzdHJ1Y3R1cmVzIG9mIEdvJ3MgY29uY3VycmVuY3kgY29yZS4gRWFj
aCBzdGVwIG9mIHRoZSB3YXksIHRoZSBib29rIHdpbGwgcHJlc2VudCByZWFs
LCB1c2FibGUgZXhhbXBsZXMgd2l0aCBkZXRhaWxlZCBkZXNjcmlwdGlvbnMg
b2YgdGhlIG1ldGhvZG9sb2dpZXMgdXNlZC4gQnkgdGhlIGVuZCwgeW91IHdp
bGwgZmVlbCBjb21mb3J0YWJsZSBkZXNpZ25pbmcgYSBzYWZlLCBkYXRhLWNv
bnNpc3RlbnQsIGhpZ2gtcGVyZm9ybWFuY2UgY29uY3VycmVudCBhcHBsaWNh
dGlvbiBpbiBHby4KCiMjIyBbR28gaW4gUHJhY3RpY2VdKGh0dHA6Ly93d3cu
bWFubmluZy5jb20vYnV0Y2hlci8pCgo8aW1nIHNyYz0iaHR0cDovL3d3dy5t
YW5uaW5nLmNvbS9idXRjaGVyL2J1dGNoZXJfY292ZXIxNTAuanBnIiB3aWR0
aD0iMTIwcHgiLz4KCkdvIGluIFByYWN0aWNlIGd1aWRlcyB5b3UgdGhyb3Vn
aCBkb3plbnMgb2YgcmVhbC13b3JsZCB0ZWNobmlxdWVzIGluIGtleSBhcmVh
cyBsaWtlIHBhY2thZ2UgbWFuYWdlbWVudCwgbWljcm9zZXJ2aWNlIGNvbW11
bmljYXRpb24sIGFuZCBtb3JlLiBGb2xsb3dpbmcgYSBjb29rYm9vay1zdHls
ZSBQcm9ibGVtL1NvbHV0aW9uL0Rpc2N1c3Npb24gZm9ybWF0LCB0aGlzIHBy
YWN0aWNhbCBoYW5kYm9vayBidWlsZHMgb24gdGhlIGZvdW5kYXRpb25hbCBj
b25jZXB0cyBvZiB0aGUgR28gbGFuZ3VhZ2UgYW5kIGludHJvZHVjZXMgc3Bl
Y2lmaWMgc3RyYXRlZ2llcyB5b3UgY2FuIHVzZSBpbiB5b3VyIGRheS10by1k
YXkgYXBwbGljYXRpb25zLiBZb3UnbGwgbGVhcm4gdGVjaG5pcXVlcyBmb3Ig
YnVpbGRpbmcgd2ViIHNlcnZpY2VzLCB1c2luZyBHbyBpbiB0aGUgY2xvdWQs
IHRlc3RpbmcgYW5kIGRlYnVnZ2luZywgcm91dGluZywgbmV0d29yayBhcHBs
aWNhdGlvbnMsIGFuZCBtdWNoIG1vcmUuCgojIyMgW0EgR28gRGV2ZWxvcGVy
J3MgTm90ZWJvb2tdKGh0dHBzOi8vbGVhbnB1Yi5jb20vR29Ob3RlYm9vay8p
Cgo8aW1nIHNyYz0iaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL3RpdGxlcGFn
ZXMubGVhbnB1Yi5jb20vR29Ob3RlYm9vay9sYXJnZT8xNDI1NTUxMzY2IiAg
d2lkdGg9IjEyMHB4Ii8+CgpBIGRldmVsb3BlcidzIGV4cHJpZW5jZSBpbiBn
b2xhbmcuCgojIyMgW1RoZSBHbyBQcm9ncmFtbWluZyBMYW5ndWFnZSBQaHJh
c2Vib29rXShodHRwOi8vd3d3LmluZm9ybWl0LmNvbS9zdG9yZS9nby1wcm9n
cmFtbWluZy1sYW5ndWFnZS1waHJhc2Vib29rLTk3ODAzMjE4MTcxNDMpCgo8
aW1nIHNyYz0iaHR0cDovL3d3dy5pbmZvcm1pdC5jb20vU2hvd0NvdmVyLmFz
cHg/aXNibj05NzgwMzIxODE3MTQzJnR5cGU9ZiIgIHdpZHRoPSIxMjBweCIv
PgoKVGVzdGVkLCBlYXN5LXRvLWFkYXB0IGNvZGUgZXhhbXBsZXMgaWxsdW1p
bmF0ZSBldmVyeSBzdGVwIG9mIEdvIGRldmVsb3BtZW50LCBoZWxwaW5nIHlv
dSB3cml0ZSBoaWdobHkgc2NhbGFibGUsIGNvbmN1cnJlbnQgc29mdHdhcmUu
IFlvdeKAmWxsIG1hc3RlciBHby1zcGVjaWZpYyBpZGlvbXMgZm9yIHdvcmtp
bmcgd2l0aCBzdHJpbmdzLCBjb2xsZWN0aW9ucywgYXJyYXlzLCBlcnJvciBo
YW5kbGluZywgZ29yb3V0aW5lcywgc2xpY2VzLCBtYXBzLCBjaGFubmVscywg
bnVtYmVycywgZGF0ZXMsIHRpbWVzLCBmaWxlcywgbmV0d29ya2luZywgd2Vi
IGFwcHMsIHRoZSBydW50aW1lLCBhbmQgbW9yZS4KCiMjIyBbR28gRGVzaWdu
IFBhdHRlcm5zXShodHRwczovL3d3dy5wYWNrdHB1Yi5jb20vYXBwbGljYXRp
b24tZGV2ZWxvcG1lbnQvZ28tZGVzaWduLXBhdHRlcm5zKQogCjxpbWcgc3Jj
PSJodHRwczovL3d3dy5wYWNrdHB1Yi5jb20vbWVkaWEvY2F0YWxvZy9wcm9k
dWN0L2NhY2hlL2U0ZDY0MzQzYjFiYzU5M2YxYzUzNDhmZTA1ZWZhNGE2L2Iv
MC9iMDU1NTcucG5nIiB3aWR0aD0iMTIwcHgiLz4KCkxlYXJuIGlkaW9tYXRp
YywgZWZmaWNpZW50LCBjbGVhbiwgYW5kIGV4dGVuc2libGUgR28gZGVzaWdu
IGFuZCBjb25jdXJyZW5jeSBwYXR0ZXJucyBieSB1c2luZyBUREQuCgojIyMg
W0JsYWNrIEhhdCBHb10oaHR0cHM6Ly93d3cubm9zdGFyY2guY29tL2JsYWNr
aGF0Z28pCgpbPGltZyBzcmM9Imh0dHBzOi8vd3d3Lm5vc3RhcmNoLmNvbS9z
aXRlcy9kZWZhdWx0L2ZpbGVzL3N0eWxlcy91Y19wcm9kdWN0X2Z1bGwvcHVi
bGljL2JoZ19jb3Zlci1mcm9udC5wbmciIHdpZHRoPSIxMjBweCIvPl0oaHR0
cHM6Ly93d3cubm9zdGFyY2guY29tL2JsYWNraGF0Z28pCgpJbiBCbGFjayBI
YXQgR28sIHlvdSdsbCBsZWFybiBob3cgdG8gd3JpdGUgcG93ZXJmdWwgYW5k
IGVmZmVjdGl2ZSBwZW5ldHJhdGlvbiB0ZXN0aW5nIHRvb2xzIGluIEdvLCBh
IGxhbmd1YWdlIHJldmVyZWQgZm9yIGl0cyBzcGVlZCBhbmQgc2NhbGFiaWxp
dHkuIFN0YXJ0IG9mZiB3aXRoIGFuIGludHJvZHVjdGlvbiB0byBHbyBmdW5k
YW1lbnRhbHMgbGlrZSBkYXRhIHR5cGVzLCBjb250cm9sIHN0cnVjdHVyZXMs
IGFuZCBlcnJvciBoYW5kbGluZzsgdGhlbiwgZGl2ZSBpbnRvIHRoZSBkZWVw
IGVuZCBvZiBHb+KAmXMgb2ZmZW5zaXZlIGNhcGFiaWxpdGllcy4KCiMjIyBb
Q29uY3VycmVuY3kgaW4gR29dKGh0dHA6Ly9zaG9wLm9yZWlsbHkuY29tL3By
b2R1Y3QvMDYzNjkyMDA0NjE4OS5kbykKCls8aW1nIHNyYz0iaHR0cHM6Ly9j
b3ZlcnMub3JlaWxseXN0YXRpYy5jb20vaW1hZ2VzLzA2MzY5MjAwNDYxODkv
Y2F0LmdpZiIgd2lkdGg9IjEyMHB4Ii8+XShodHRwOi8vc2hvcC5vcmVpbGx5
LmNvbS9wcm9kdWN0LzA2MzY5MjAwNDYxODkuZG8pCgpDb25jdXJyZW5jeSBj
YW4gYmUgbm90b3Jpb3VzbHkgZGlmZmljdWx0IHRvIGdldCByaWdodCwgYnV0
IGZvcnR1bmF0ZWx5LCB0aGUgR28gb3BlbiBzb3VyY2UgcHJvZ3JhbW1pbmcg
bGFuZ3VhZ2UgbWFrZXMgd29ya2luZyB3aXRoIGNvbmN1cnJlbmN5IHRyYWN0
YWJsZSBhbmQgZXZlbiBlYXN5LiBJZiB5b3XigJlyZSBhIGRldmVsb3BlciBm
YW1pbGlhciB3aXRoIEdvLCB0aGlzIHByYWN0aWNhbCBib29rIGRlbW9uc3Ry
YXRlcyBiZXN0IHByYWN0aWNlcyBhbmQgcGF0dGVybnMgdG8gaGVscCB5b3Ug
aW5jb3Jwb3JhdGUgY29uY3VycmVuY3kgaW50byB5b3VyIHN5c3RlbXMuCgoj
IyMgW0hhbmRzLU9uIERlcGVuZGVuY3kgSW5qZWN0aW9uIGluIEdvXShodHRw
czovL2Ftem4udG8vMlE2ZExRQykKCjxpbWcgc3JjPSJodHRwczovL2ltYWdl
cy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTElMkI4RWRp
aHVLTC5fU1g0MDRfQk8xLDIwNCwyMDMsMjAwXy5qcGciIHdpZHRoPSIxMjBw
eCIvPgoKSGFuZHMtT24gRGVwZW5kZW5jeSBJbmplY3Rpb24gaW4gR28gdGFr
ZXMgeW91IG9uIGEgam91cm5leSwgdGVhY2hpbmcgeW91IGFib3V0IHJlZmFj
dG9yaW5nIGV4aXN0aW5nIGNvZGUgdG8gYWRvcHQgZGVwZW5kZW5jeSBpbmpl
Y3Rpb24gKERJKSB1c2luZyB2YXJpb3VzIG1ldGhvZHMgYXZhaWxhYmxlIGlu
IEdvLgoKT2YgdGhlIHNpeCBtZXRob2RzIGludHJvZHVjZWQgaW4gdGhpcyBi
b29rLCBzb21lIGFyZSBjb252ZW50aW9uYWwsIHN1Y2ggYXMgY29uc3RydWN0
b3Igb3IgbWV0aG9kIGluamVjdGlvbiwgYW5kIHNvbWUgdW5jb252ZW50aW9u
YWwsIHN1Y2ggYXMganVzdC1pbi10aW1lIG9yIGNvbmZpZyBpbmplY3Rpb24u
IEVhY2ggbWV0aG9kIGlzIGV4cGxhaW5lZCBpbiBkZXRhaWwsIGZvY3VzaW5n
IG9uIHRoZWlyIHN0cmVuZ3RocyBhbmQgd2Vha25lc3NlcywgYW5kIGlzIGZv
bGxvd2VkIHdpdGggYSBzdGVwLWJ5LXN0ZXAgZXhhbXBsZSBvZiBob3cgdG8g
YXBwbHkgaXQuIFdpdGggcGxlbnR5IG9mIGV4YW1wbGVzLCB5b3Ugd2lsbCBs
ZWFybiBob3cgdG8gbGV2ZXJhZ2UgREkgdG8gdHJhbnNmb3JtIGNvZGUgaW50
byBzb21ldGhpbmcgc2ltcGxlIGFuZCBmbGV4aWJsZS4KCkhhbmRzLU9uIERl
cGVuZGVuY3kgSW5qZWN0aW9uIGluIEdvIHRha2VzIGEgcHJhZ21hdGljIGFw
cHJvYWNoIGFuZCBmb2N1c2VzIGhlYXZpbHkgb24gdGhlIGNvZGUsIHVzZXIg
ZXhwZXJpZW5jZSwgYW5kIGhvdyB0byBhY2hpZXZlIGxvbmctdGVybSBiZW5l
Zml0cyB0aHJvdWdoIGluY3JlbWVudGFsIGNoYW5nZXMuCgoqKldlYiBEZXZl
bG9wbWVudCoqCi0tLS0KIyMjIFtCdWlsZGluZyBXZWIgQXBwcyB3aXRoIEdv
XShodHRwczovL3d3dy5naXRib29rLmNvbS9ib29rL2NvZGVnYW5nc3RhL2J1
aWxkaW5nLXdlYi1hcHBzLXdpdGgtZ28vZGV0YWlscykgKkZyZWUqCgpBIGdv
b2QgcmVzb3VyY2UgZm9yIHN0YXJ0IEJ1aWxkaW5nIFdlYiBBcHBzIHdpdGgg
R28uIEZyZWUgdG8gW3JlYWQgb25saW5lXShodHRwOi8vY29kZWdhbmdzdGEu
Z2l0Ym9va3MuaW8vYnVpbGRpbmctd2ViLWFwcHMtd2l0aC1nby9jb250ZW50
LykuCgojIyMgW0J1aWxkIFdlYiBBcHBsaWNhdGlvbiB3aXRoIEdvbGFuZ10o
aHR0cHM6Ly93d3cuZ2l0Ym9vay5jb20vYm9vay9hc3RheGllL2J1aWxkLXdl
Yi1hcHBsaWNhdGlvbi13aXRoLWdvbGFuZy9kZXRhaWxzKSAqRnJlZSoKCkFu
b3RoZXIgYXdlc29tZSBib29rIGZvciBsZWFybmluZyBXZWIgRGV2ZWxvcG1l
bnQgaW4gR29sYW5nLiBGcmVlIHRvIFtyZWFkIG9ubGluZV0oaHR0cDovL2Fz
dGF4aWUuZ2l0Ym9va3MuaW8vYnVpbGQtd2ViLWFwcGxpY2F0aW9uLXdpdGgt
Z29sYW5nL2NvbnRlbnQvZW4vaW5kZXguaHRtbCkKCiMjIyBbV2ViYXBwcyBp
biBHbyB0aGUgYW50aSB0ZXh0Ym9va10oaHR0cHM6Ly9naXRodWIuY29tL3Ro
ZXdoaXRldHVsaXAvd2ViLWRldi1nb2xhbmctYW50aS10ZXh0Ym9vaykgKkZy
ZWUqCgo8aW1nIHNyYz0iaHR0cHM6Ly9naXRodWIuY29tL3RoZXdoaXRldHVs
aXAvd2ViLWRldi1nb2xhbmctYW50aS10ZXh0Ym9vay9yYXcvbWFzdGVyL2Nv
dmVyLmpwZyIgd2lkdGg9IjEyMHB4Ii8+CgpUaGlzIGJvb2sgd2FzIHdyaXR0
ZW4gdG8gdGVhY2ggaG93IHRvIGRldmVsb3Agd2ViIGFwcGxpY2F0aW9ucyBp
biBHbyBmb3IgcGVvcGxlIHdobyBrbm93IGEgYml0IG9mIEdvIGFuZCBoYXZl
IGJhc2ljIGluZm9ybWF0aW9uIGFib3V0IHdlYiBhcHBsaWNhdGlvbnMgaW4g
Z2VuZXJhbC4gV2UgKHlvdSkgd2lsbCBidWlsZCBhIHdlYmFwcCB3aXRob3V0
IHVzaW5nIGEgdGhpcmQgcGFydHkgZnJhbWV3b3JrIGFuZCB1c2luZyBhcyBm
ZXcgZXh0ZXJuYWwgbGlicmFyaWVzIGFzIHBvc3NpYmxlLiBUaGUgYWR2YW50
YWdlIGlzIHRoYXQgeW91J2xsIGxlYXJuIGEgbG90IHdoZW4geW91IGNvZGUg
d2l0aG91dCBhIGZyYW1ld29yay4KCiMjIyBbTWFzdGVyaW5nIEdvIFdlYiBT
ZXJ2aWNlcyBdKGh0dHA6Ly9zaG9wLm9yZWlsbHkuY29tL3Byb2R1Y3QvOTc4
MTc4Mzk4MTMwNC5kbykKCjxpbWcgc3JjPSJodHRwOi8vYWthbWFpY292ZXJz
Lm9yZWlsbHkuY29tL2ltYWdlcy85NzgxNzgzOTgxMzA0L2xyZy5qcGciIHdp
ZHRoPSIxMjBweCIvPgoKVGhpcyBib29rIHdpbGwgdGFrZSB5b3UgdGhyb3Vn
aCB0aGUgbW9zdCBpbXBvcnRhbnQgYXNwZWN0cyBvZiBkZXNpZ25pbmcsIGJ1
aWxkaW5nLCBhbmQgZGVwbG95aW5nIGEgd2ViIHNlcnZpY2UgdXRpbGl6aW5n
IGlkaW9tYXRpYyBSRVNUIHByYWN0aWNlcyB3aXRoIGEgZm9jdXMgb24gc3Bl
ZWQsIHNlY3VyaXR5LCBhbmQgZmxleGliaWxpdHkuIFlvdSB3aWxsIGJlZ2lu
IGJ5IGJ1aWxkaW5nIHlvdXIgZmlyc3QgQVBJIGluIEdvIHVzaW5nIHRoZSBI
VFRQIHBhY2thZ2UuIFlvdSB3aWxsIGxvb2sgYXQgZGVzaWduaW5nIGFuZCBi
dWlsZGluZyB5b3VyIGFwcGxpY2F0aW9uIGluY2x1ZGluZyBwb3B1bGFyIGRl
c2lnbiBzdHJ1Y3R1cmVzIGxpa2UgTW9kZWwtVmlldy1Db250cm9sbGVyLiBZ
b3Ugd2lsbCBhbHNvIHVuZGVyc3RhbmQgbWV0aG9kcyBmb3IgZGVwbG95aW5n
IGNvZGUgdG8gc3RhZ2luZyBhbmQgZGV2ZWxvcG1lbnQuIEZpbmFsbHksIHlv
dSB3aWxsIHNlZSBob3cgdGhlIHNlY3VyaXR5IGZlYXR1cmVzIGluIEdvIGNh
biBiZSB1c2VkIGZvciBwcm90ZWN0aW9uIGFnYWluc3QgU1FMIGluamVjdGlv
biwgYW5kIHNlbnNpdGl2ZSBkYXRhIGNvbXByb21pc2UuCgojIyMgW0xldmVs
IFVwIFlvdXIgV2ViIEFwcHMgV2l0aCBHb10oaHR0cHM6Ly9sZWFybmFibGUu
Y29tL2Jvb2tzL2xldmVsLXVwLXlvdXItd2ViLWFwcHMtd2l0aC1nbykKCjxp
bWcgc3JjPSJodHRwOi8vYWthbWFpY292ZXJzLm9yZWlsbHkuY29tL2ltYWdl
cy85NzgwOTkyNDYxMjk0L2xyZy5qcGciIHdpZHRoPSIxMjBweCIvPgoKVGhp
cyBib29rIGdpdmVzIHlvdSBhbGwgeW91IG5lZWQgdG8gdXNlIEdvIGluIHlv
dXIgd2ViIGFwcGxpY2F0aW9ucy4gWW914oCZbGwgbGVhcm4gdGhlIGJhc2lj
IGNvbmNlcHRzIOKAlCBsYW5ndWFnZSBzdHJ1Y3R1cmVzLCB0aGUgc3RhbmRh
cmQgbGlicmFyeSwgYW5kIEdvIHRvb2xzIOKAlCB0aGVuIHRhY2tsZSBtb3Jl
IGFkdmFuY2VkIGZlYXR1cmVzIGxpa2UgY29uY3VycmVuY3kgY29uY2VwdHMs
IHRlc3RpbmcgbWV0aG9kb2xvZ2llcywgYW5kIHBhY2thZ2Ugc3RydWN0dXJl
cy4KCkF0IGVhY2ggc3RlcCwgeW914oCZbGwgZ2V0IGFkdmljZSBmb3IgYmV0
dGVyIGNvZGluZyBpbiBHby4gWW914oCZbGwgc2VlIGhvdyB0byBzdHJ1Y3R1
cmUgcHJvamVjdHMsIGhvdyB0byB1c2UgY29uY3VycmVuY3kgZWZmZWN0aXZl
bHksIGFuZCBiZXN0IHByYWN0aWNlcyBmb3IgdGVzdGluZ+KAlGFzIHdlbGwg
YXMgbWFueSBvdGhlciBoaW50cyBhbmQgdGlwcyBnbGVhbmVkIGZyb20gcmVh
bCB3b3JsZCBleHBlcmllbmNlIG9mIGRldmVsb3Bpbmcgd2ViIGFwcGxpY2F0
aW9ucyB3aXRoIEdvLgoKIyMjIFtHbyBXZWIgUHJvZ3JhbW1pbmddKGh0dHA6
Ly93d3cubWFubmluZy5jb20vY2hhbmcvKQoKPGltZyBzcmM9Imh0dHA6Ly93
d3cubWFubmluZy5jb20vY2hhbmcvY2hhbmdfY292ZXIxNTAuanBnIiB3aWR0
aD0iMTIwcHgiLz4KCkdvIFdlYiBQcm9ncmFtbWluZyB0ZWFjaGVzIHlvdSBo
b3cgdG8gYnVpbGQgd2ViIGFwcGxpY2F0aW9ucyBpbiBHbyB1c2luZyBtb2Rl
cm4gZGVzaWduIHByaW5jaXBsZXMuIFlvdSdsbCB3b3JrIHRocm91Z2ggbnVt
ZXJvdXMgZXhhbXBsZXMgdGhhdCBpbnRyb2R1Y2UgY29yZSBjb25jZXB0cyBs
aWtlIHByb2Nlc3NpbmcgcmVxdWVzdHMgYW5kIHNlbmRpbmcgcmVzcG9uc2Vz
LCB0ZW1wbGF0ZSBlbmdpbmVzLCBhbmQgZGF0YSBwZXJzaXN0ZW5jZS4gWW91
J2xsIGFsc28gZGl2ZSBpbnRvIG1vcmUgYWR2YW5jZWQgdG9waWNzLCBzdWNo
IGFzIGNvbmN1cnJlbmN5LCB3ZWIgYXBwbGljYXRpb24gdGVzdGluZyBhbmQg
ZGVwbG95bWVudCBib3RoIHRvIGJhcmVib25lcyBzZXJ2ZXJzIGFuZCBQYWFT
IHByb3ZpZGVycy4KCiMjIyBbQ2xvdWQgTmF0aXZlIEdvOiBCdWlsZGluZyBX
ZWIgQXBwbGljYXRpb25zIGFuZCBNaWNyb3NlcnZpY2VzIGZvciB0aGUgQ2xv
dWQgd2l0aCBHbyBhbmQgUmVhY3RdKGh0dHBzOi8vd3d3LmFtYXpvbi5jb20v
Q2xvdWQtTmF0aXZlLUFwcGxpY2F0aW9ucy1NaWNyb3NlcnZpY2VzLURldmVs
b3BlcnMvZHAvMDY3MjMzNzc5NykKCjxhIGhyZWY9Imh0dHBzOi8vd3d3LmFt
YXpvbi5jb20vQ2xvdWQtTmF0aXZlLUFwcGxpY2F0aW9ucy1NaWNyb3NlcnZp
Y2VzLURldmVsb3BlcnMvZHAvMDY3MjMzNzc5NyI+PGltZyBzcmM9Imh0dHBz
Oi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS81
MW95NU5kOUJvTC5fU1gzODRfQk8xLDIwNCwyMDMsMjAwXy5qcGciIHdpZHRo
PSIxMjBweCIvPjwvYT4KClRvZGF5LCBjb21wYW5pZXMgYW5kIGRldmVsb3Bl
cnMgbmVlZCB0byByZXNwb25kIHRvIGNoYW5naW5nIG1hcmtldHMgYXQgYnJl
YWtuZWNrIHNwZWVkcy4gT3JnYW5pemF0aW9ucyB0aGF0IGFyZW4ndCBidWls
dCBvbiBoaWdobHktYXZhaWxhYmxlLCByYXBpZGx5LWV2b2x2aW5nIHNvZnR3
YXJlIGFyZSBnb2luZyB0aGUgd2F5IG9mIHRoZSBkaW5vc2F1cnMuIENsb3Vk
IE5hdGl2ZSBHbyBicmluZ3MgdG9nZXRoZXIgdGhlIGtub3dsZWRnZSBkZXZl
bG9wZXJzIG5lZWQgdG8gYnVpbGQgbWFzc2l2ZS1zY2FsZSBjbG91ZCBhcHBs
aWNhdGlvbnMgdGhhdCBtZWV0IHRoZSBpbnNhdGlhYmxlIGRlbWFuZHMgb2Yg
dG9kYXkncyBjdXN0b21lcnMgYW5kIG1hcmtldHMuCgojIyMgW1dlYiBEZXZl
bG9wbWVudCB3aXRoIEdvOiBMZWFybiB0byBDcmVhdGUgUmVhbCBXb3JsZCBX
ZWIgQXBwbGljYXRpb25zIHVzaW5nIEdvXShodHRwczovL2d1bXJvYWQuY29t
L2wvd2ViLWRldmVsb3BtZW50LXdpdGgtZ28pCgo8YSBocmVmPSJodHRwczov
L3N0YXRpYy0yLmd1bXJvYWQuY29tL3Jlcy9ndW1yb2FkLzkzODc4NDQ3Nzgz
MTkvYXNzZXRfcHJldmlld3MvNzQ0NjQyNDk4NWI1ZjljYjUzNjg5MTA1ZDI5
NzAyMWQvcmV0aW5hL0NvdmVyMzAwcHBpLnBuZyIgd2lkdGg9IjEyMHB4Ii8+
PC9hPgoKV2ViIERldmVsb3BtZW50IHdpdGggR28gd2FzIHdyaXR0ZW4gdG8g
dGVhY2ggYm90aCBiZWdpbm5lcnMgYW5kIGV4cGVydHMgaG93IHRvIGNyZWF0
ZSBhbmQgZGVwbG95IGEgcmVhbCB3ZWIgYXBwbGljYXRpb24uIFlvdSB3b24n
dCBiZSBidWlsZGluZyBhIGJvaWxlcnBsYXRlIFRPRE8gbGlzdCwgYnV0IHdp
bGwgaW5zdGVhZCBiZSBjcmVhdGluZyBhbmQgZGVwbG95aW5nIGEgcHJvZHVj
dGlvbiByZWFkeSBwaG90byBnYWxsZXJ5IGFwcGxpY2F0aW9uLCBzaW1pbGFy
IHRvIFBpeGllc2V0LCBmcm9tIHNjcmF0Y2guIFRoZSBib29rIGFzc3VtZXMg
bm8gcHJldmlvdXMgd2ViIGRldmVsb3BtZW50IGV4cGVyaWVuY2UgYW5kIGNv
dmVycyBldmVyeXRoaW5nIHlvdSBuZWVkIHRvIGtub3cgdG8gc3VjY2Vzc2Z1
bGx5IGJ1aWxkIHlvdXIgb3duIHdlYiBhcHBsaWNhdGlvbi4KCiMjIyBbR286
IEJ1aWxkaW5nIFdlYiBBcHBsaWNhdGlvbnNdKGh0dHBzOi8vYW16bi5jb20v
QjAxTEQ4SzVDMCkKCjxhIGhyZWY9Imh0dHBzOi8vYW16bi5jb20vQjAxTEQ4
SzVDMCI+PGltZyBzcmM9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMt
YW1hem9uLmNvbS9pbWFnZXMvSS81MXZLQldSenRiTC5qcGciIHdpZHRoPSIx
MjBweCIvPjwvYT4KClRoaXMgY291cnNlIGlzIGFuIGludmFsdWFibGUgcmVz
b3VyY2UgdG8gaGVscCB5b3UgdW5kZXJzdGFuZCBHbydzIHBvd2VyZnVsIGZl
YXR1cmVzIHRvIGJ1aWxkIHNpbXBsZSwgcmVsaWFibGUsIHNlY3VyZSwgYW5k
IGVmZmljaWVudCB3ZWIgYXBwbGljYXRpb25zLgoKIyMjIFtCdWlsZGluZyBN
aWNyb3NlcnZpY2VzIHdpdGggR29dKGh0dHBzOi8vd3d3LnBhY2t0cHViLmNv
bS9hcHBsaWNhdGlvbi1kZXZlbG9wbWVudC9idWlsZGluZy1taWNyb3NlcnZp
Y2VzLWdvKQoKPGltZyBzcmM9Imh0dHBzOi8vd3d3LnBhY2t0cHViLmNvbS9t
ZWRpYS9jYXRhbG9nL3Byb2R1Y3QvY2FjaGUvZTRkNjQzNDNiMWJjNTkzZjFj
NTM0OGZlMDVlZmE0YTYvYi8wL2IwNTUyOC5wbmciIHdpZHRoPSIxMjBweCIv
PgoKV2hldGhlciB5b3UgYXJlIHBsYW5uaW5nIGEgbmV3IGFwcGxpY2F0aW9u
IG9yIHdvcmtpbmcgaW4gYW4gZXhpc3RpbmcgbW9ub2xpdGgsIHRoaXMgYm9v
ayB3aWxsIGV4cGxhaW4gYW5kIGlsbHVzdHJhdGUgd2l0aCBwcmFjdGljYWwg
ZXhhbXBsZXMgaG93IHRlYW1zIG9mIGFsbCBzaXplcyBjYW4gc3RhcnQgc29s
dmluZyBwcm9ibGVtcyB3aXRoIG1pY3Jvc2VydmljZXMuIEl0IHdpbGwgaGVs
cCB5b3UgdW5kZXJzdGFuZCBEb2NrZXIgYW5kIERvY2tlci1Db21wb3NlIGFu
ZCBob3cgaXQgY2FuIGJlIHVzZWQgdG8gaXNvbGF0ZSBtaWNyb3NlcnZpY2Ug
ZGVwZW5kZW5jaWVzIGFuZCBidWlsZCBlbnZpcm9ubWVudHMuIFdlIGZpbmlz
aCBvZmYgYnkgc2hvd2luZyB5b3UgdmFyaW91cyB0ZWNobmlxdWVzIHRvIG1v
bml0b3IsIHRlc3QsIGFuZCBzZWN1cmUgeW91ciBtaWNyb3NlcnZpY2VzLgoK
IyMjIFsxMiBGYWN0b3IgQXBwbGljYXRpb25zIHdpdGggRG9ja2VyIGFuZCBH
b10oaHR0cHM6Ly9sZWFucHViLmNvbS8xMmZhLWRvY2tlci1nb2xhbmcpCgo8
YSBocmVmPSJodHRwczovL2xlYW5wdWIuY29tLzEyZmEtZG9ja2VyLWdvbGFu
ZyI+PGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS90aXRsZXBh
Z2VzLmxlYW5wdWIuY29tLzEyZmEtZG9ja2VyLWdvbGFuZy9oZXJvPzE1MDM4
NDQ2NjIiIHdpZHRoPSIxMjBweCIvPjwvYT4KCkEgYm9vayBmaWxsZWQgd2l0
aCBleGFtcGxlcyBvbiBob3cgdG8gdXNlIERvY2tlciBhbmQgR28gdG8gY3Jl
YXRlIHRoZSB1bHRpbWF0ZSAxMiBGYWN0b3IgYXBwbGljYXRpb25zLiBJdCBn
b2VzIG92ZXIgaW5kaXZpZHVhbCBzdGVwcyBvZiBbVGhlIFR3ZWx2ZS1GYWN0
b3IgQXBwXSgxMmZhY3Rvci5uZXQpIGd1aWRlbGluZXMgYW5kIGhvdyB0byBp
bXBsZW1lbnQgdGhlbSB3aXRoIEdvIGFuZCBEb2NrZXIuCgojIyMgW0J1aWxk
IFNhYVMgYXBwcyBpbiBHb10oaHR0cHM6Ly9idWlsZHNhYXNhcHBpbmdvLmNv
bSkKCjxhIGhyZWY9Imh0dHBzOi8vYnVpbGRzYWFzYXBwaW5nby5jb20iPjxp
bWcgc3JjPSJodHRwczovL2J1aWxkc2Fhc2FwcGluZ28uY29tL3B1YmxpYy9i
YXNhaWcuanBnIiB3aWR0aD0iMTIwIi8+PC9hPgoKVG9nZXRoZXIsIHdlJ2xs
IGJ1aWxkIGEgc3Ryb25nLCBBUEktZmlyc3QsIHJldXNhYmxlIGNvZGViYXNl
IHN1aXRhYmxlIGZvciAKYnVpbGRpbmcgYSBTYWFTIG9yIHZhbmlsbGEgd2Vi
IGFwcGxpY2F0aW9uLiBCeSB0aGUgZW5kIG9mIHRoZSBib29rIHlvdSdsbCBo
YXZlIAphIHNvbGlkIGZyYW1ld29yayB0byB1c2UgYXMgdGhlIHN0YXJ0aW5n
IHBvaW50IGZvciBmdXR1cmUgcHJvamVjdHMuCgojIyMgW0xldCdzIEdvIV0o
aHR0cHM6Ly9sZXRzLWdvLmFsZXhlZHdhcmRzLm5ldC8pCgo8aW1nIHNyYz0i
aHR0cHM6Ly9sZXRzLWdvLmFsZXhlZHdhcmRzLm5ldC9zYW1wbGUvYXNzZXRz
L2ltZy9jb3Zlci5wbmciIHdpZHRoPSIxMjBweCIvPgoKTGV0J3MgR28gdGVh
Y2hlcyB5b3Ugc3RlcC1ieS1zdGVwIGhvdyB0byBjcmVhdGUgZmFzdCwgc2Vj
dXJlIGFuZCBtYWludGFpbmFibGUgd2ViIGFwcGxpY2F0aW9ucyB1c2luZyBH
by4gSXQgZ3VpZGVzIHlvdSB0aHJvdWdoIHRoZSBzdGFydC10by1maW5pc2gg
YnVpbGQgb2YgYSByZWFsLXdvcmxkIGFwcGxpY2F0aW9uIOKAlCBjb3Zlcmlu
ZyB0b3BpY3MgbGlrZSBob3cgdG8gc3RydWN0dXJlIHlvdXIgY29kZSwgbWFu
YWdlIGRlcGVuZGVuY2llcywgYXV0aGVudGljYXRlIGFuZCBhdXRob3JpemUg
dXNlcnMsIHNlY3VyZSB5b3VyIHNlcnZlciBhbmQgdGVzdCB5b3VyIGFwcGxp
Y2F0aW9uLgoKUmVzb3VyY2VzCj09PT0KCiMjIyBbQSB0b3VyIG9mIEdvXSho
dHRwczovL3RvdXIuZ29sYW5nLm9yZy8pCiMjIyBbVmlkZW86IExlYXJuIEdv
IFN5bnRheCBpbiBvbmUgdmlkZW9dKGh0dHA6Ly93d3cueW91dHViZS5jb20v
d2F0Y2g/dj1DRjlTNFFadVYzMCkKIyMjIFtUdXRvcmlhbHM6IEdvIGJ5IEV4
YW1wbGVdKGh0dHBzOi8vZ29ieWV4YW1wbGUuY29tLykKIyMjIFtHbyBGdW5k
YW1lbnRhbHMgVmlkZW8gVHJhaW5pbmddKGh0dHA6Ly9zaG9wLm9yZWlsbHku
Y29tL2NhdGVnb3J5L2xlYXJuaW5nLXBhdGgvZ28tZnVuZGFtZW50YWxzLmRv
KQojIyMgW01vcmUgQm9va3Mgb24gdGhlIEdvIFdpa2ldKGh0dHBzOi8vZ2l0
aHViLmNvbS9nb2xhbmcvZ28vd2lraS9Cb29rcykKIyMjIFtUdXRvcmlhbEVk
Z2UubmV0IENvdXJzZV0oaHR0cHM6Ly90dXRvcmlhbGVkZ2UubmV0L2NvdXJz
ZS9nb2xhbmcvKQojIyMgW0NvdXJzZXJhIFNwZWNpYWxpemF0aW9uOiBQcm9n
cmFtbWluZyB3aXRoIEdvXShodHRwczovL3d3dy5jb3Vyc2VyYS5vcmcvc3Bl
Y2lhbGl6YXRpb25zL2dvb2dsZS1nb2xhbmcvKQojIyMgW0NvdXJzZTogTWFz
dGVyaW5nIEdvIFByb2dyYW1taW5nXShodHRwczovL3d3dy51ZGVteS5jb20v
Y291cnNlL21hc3RlcmluZy1nby1wcm9ncmFtbWluZykKCkNvbnRyaWJ1dGlu
Zwo9PT09CllvdXIgY29udHJpYnV0aW9ucyBhcmUgYWx3YXlzIHdlbGNvbWUs
IGp1c3QgZm9sbG93IFt0aGUgcnVsZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9k
YXJpdWJzL0dvQm9va3MvYmxvYi9tYXN0ZXIvQ09OVFJJQlVUSU5HLm1kKSEK
CkxpY2Vuc2UKPT09PQo8YSByZWw9ImxpY2Vuc2UiIGhyZWY9Imh0dHA6Ly9j
cmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC8iPjxpbWcgYWx0
PSJDcmVhdGl2ZSBDb21tb25zIExpY2Vuc2UiIHN0eWxlPSJib3JkZXItd2lk
dGg6MCIgc3JjPSJodHRwczovL2kuY3JlYXRpdmVjb21tb25zLm9yZy9sL2J5
LzQuMC84OHgzMS5wbmciIC8+PC9hPjxiciAvPlRoaXMgd29yayBpcyBsaWNl
bnNlZCB1bmRlciBhIDxhIHJlbD0ibGljZW5zZSIgaHJlZj0iaHR0cDovL2Ny
ZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4wLyI+Q3JlYXRpdmUg
Q29tbW9ucyBBdHRyaWJ1dGlvbiA0LjAgSW50ZXJuYXRpb25hbCBMaWNlbnNl
PC9hPi4K
",,7183,"bGFuZ3VhZ2U6IHJ1YnkKcnZtOgogIC0gMi41LjMKYmVmb3JlX3NjcmlwdDoK
ICAtIGdlbSBpbnN0YWxsIGF3ZXNvbWVfYm90CnNjcmlwdDoKICAtIGF3ZXNv
bWVfYm90IFJFQURNRS5tZCAtLWFsbG93LWR1cGUgLS1hbGxvdy1yZWRpcmVj
dApub3RpZmljYXRpb25zOgogIGVtYWlsOiBmYWxzZQo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'metrics-graphics',19353482,b'A library optimized for concise and principled data graphics and layouts.',b'JavaScript',153,7180,,219,False,b'https://api.github.com/repos/metricsgraphics/metrics-graphics/forks',"WyFbTGljZW5zZTogTVBMIDIuMF0oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9i
YWRnZS9MaWNlbnNlLU1QTCUyMDIuMC1icmlnaHRncmVlbi5zdmcpXShodHRw
czovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL01QTC0yLjApIFshW0J1aWxk
IFN0YXR1c11bdHJhdmlzLWJhZGdlXV1bdHJhdmlzLWJhZGdlLXVybF0gWyFb
Q0ROSlNdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vY2RuanMvdi9tZXRyaWNz
LWdyYXBoaWNzLnN2ZyldKGh0dHBzOi8vY2RuanMuY29tL2xpYnJhcmllcy9t
ZXRyaWNzLWdyYXBoaWNzKQoKCioqKnRoaXMgcHJvamVjdCBpcyB1bm1haW50
YWluZWQuIHBsZWFzZSBzZWUgdGhpcyBibG9nIHBvc3Q6IGh0dHBzOi8vd2xh
Y2guZ2l0aHViLmlvL2Jsb2cvMjAxOS8wOS9tZXRyaWNzLWdyYXBoaWNzLXN0
ZXBwaW5nLWJhY2stZm9yLWEtd2hpbGUvKioqCgo8YSBocmVmPSJodHRwOi8v
bWV0cmljc2dyYXBoaWNzanMub3JnLyI+PGltZyBzcmM9Imh0dHA6Ly9tZXRy
aWNzZ3JhcGhpY3Nqcy5vcmcvaW1hZ2VzL2xvZ28uc3ZnIiBoc3BhY2U9IjAi
IHZzcGFjZT0iMCIgd2lkdGg9IjQwMCIgaGVpZ2h0PSI2MyI+PC9hPgoKX01l
dHJpY3NHcmFwaGljcy5qc18gaXMgYSBsaWJyYXJ5IG9wdGltaXplZCBmb3Ig
dmlzdWFsaXppbmcgYW5kIGxheWluZyBvdXQgdGltZS1zZXJpZXMgZGF0YS4g
QXQgdW5kZXIgODBLQiAobWluaWZpZWQpLCBpdCBwcm92aWRlcyBhIHNpbXBs
ZSB3YXkgdG8gcHJvZHVjZSBjb21tb24gdHlwZXMgb2YgZ3JhcGhpY3MgaW4g
YSBwcmluY2lwbGVkIGFuZCBjb25zaXN0ZW50IHdheS4gVGhlIGxpYnJhcnkg
Y3VycmVudGx5IHN1cHBvcnRzIGxpbmUgY2hhcnRzLCBzY2F0dGVycGxvdHMs
IGhpc3RvZ3JhbXMsIGJhciBjaGFydHMgYW5kIGRhdGEgdGFibGVzLCBhcyB3
ZWxsIGFzIGZlYXR1cmVzIGxpa2UgcnVnIHBsb3RzIGFuZCBiYXNpYyBsaW5l
YXIgcmVncmVzc2lvbi4KCkEgc2FtcGxlIHNldCBvZiBleGFtcGxlcyBtYXkg
YmUgZm91bmQgb24gW3RoZSBleGFtcGxlcyBwYWdlXShodHRwOi8vbWV0cmlj
c2dyYXBoaWNzanMub3JnKS4gVGhlIGV4YW1wbGUgYmVsb3cgZGVtb25zdHJh
dGVzIGhvdyBlYXN5IGl0IGlzIHRvIHByb2R1Y2UgYSBncmFwaGljLiBPdXIg
Z3JhcGhpY3MgZnVuY3Rpb24gcHJvdmlkZXMgYSByb2J1c3QgbGF5ZXIgb2Yg
aW5kaXJlY3Rpb24sIGFsbG93aW5nIG9uZSB0byBtb3JlIGVmZmljaWVudGx5
IGJ1aWxkLCBzYXksIGEgZGFzaGJvYXJkIG9mIGludGVyYWN0aXZlIGdyYXBo
aWNzLCBlYWNoIG9mIHdoaWNoIG1heSBiZSBwdWxsaW5nIGRhdGEgZnJvbSBh
IGRpZmZlcmVudCBkYXRhIHNvdXJjZS4gRm9yIHRoZSBjb21wbGV0ZSBsaXN0
IG9mIG9wdGlvbnMsIGFuZCBmb3IgZG93bmxvYWQgaW5zdHJ1Y3Rpb25zLCBb
dGFrZSBhIGxvb2sgYXQgdGhlIHNlY3Rpb25zIGJlbG93XShodHRwczovL2dp
dGh1Yi5jb20vbWV0cmljc2dyYXBoaWNzL21ldHJpY3MtZ3JhcGhpY3Mvd2lr
aSkuCgpgYGBqcwpNRy5kYXRhX2dyYXBoaWMoewogICAgdGl0bGU6ICdEb3du
bG9hZHMnLAogICAgZGVzY3JpcHRpb246ICdUaGlzIGdyYXBoaWNzIHNob3dz
IEZpcmVmb3ggR0EgZG93bmxvYWRzIGZvciB0aGUgcGFzdCBzaXggbW9udGhz
LicsCiAgICBkYXRhOiBkb3dubG9hZHNfZGF0YSwgLy8gYW4gYXJyYXkgb2Yg
b2JqZWN0cywgc3VjaCBhcyBbe3ZhbHVlOjEwMCxkYXRlOi4uLn0sLi4uXQog
ICAgd2lkdGg6IDYwMCwKICAgIGhlaWdodDogMjUwLAogICAgdGFyZ2V0OiAn
I2Rvd25sb2FkcycsIC8vIHRoZSBodG1sIGVsZW1lbnQgdGhhdCB0aGUgZ3Jh
cGhpYyBpcyBpbnNlcnRlZCBpbgogICAgeF9hY2Nlc3NvcjogJ2RhdGUnLCAg
Ly8gdGhlIGtleSB0aGF0IGFjY2Vzc2VzIHRoZSB4IHZhbHVlCiAgICB5X2Fj
Y2Vzc29yOiAndmFsdWUnIC8vIHRoZSBrZXkgdGhhdCBhY2Nlc3NlcyB0aGUg
eSB2YWx1ZQp9KQpgYGAKClRoZSBBUEkgaXMgc2ltcGxlLiBBbGwgdGhhdCdz
IG5lZWRlZCB0byBjcmVhdGUgYSBncmFwaGljIGlzIHRvIHNwZWNpZnkgYSBm
ZXcgZGVmYXVsdCBwYXJhbWV0ZXJzIGFuZCB0aGVuLCBpZiBkZXNpcmVkLCBv
dmVycmlkZSBvbmUgb3IgbW9yZSBvZiB0aGUgW29wdGlvbmFsIHBhcmFtZXRl
cnMgb24gb2ZmZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9tZXRyaWNzZ3JhcGhp
Y3MvbWV0cmljcy1ncmFwaGljcy93aWtpL0xpc3Qtb2YtT3B0aW9ucykuIFdl
IGRvbid0IG1haW50YWluIHN0YXRlLiBJbiBvcmRlciB0byB1cGRhdGUgYSBn
cmFwaGljLCBvbmUgd291bGQgY2FsbCBfTUcuZGF0YV9ncmFwaGljXyBvbiB0
aGUgc2FtZSB0YXJnZXQgZWxlbWVudC4KClRoZSBsaWJyYXJ5IGlzIGRhdGEt
c291cmNlIGFnbm9zdGljLiBXaGlsZSBpdCBwcm92aWRlcyBhIG51bWJlciBv
ZiBjb252ZW5pZW5jZSBmdW5jdGlvbnMgYW5kIG9wdGlvbnMgdGhhdCBhbGxv
dyBmb3IgZ3JhcGhpY3MgdG8gYmV0dGVyIGhhbmRsZSB0aGluZ3MgbGlrZSBt
aXNzaW5nIG9ic2VydmF0aW9ucywgaXQgZG9lc24ndCBjYXJlIHdoZXJlIHRo
ZSBkYXRhIGNvbWVzIGZyb20uCgpUaG91Z2ggb3JpZ2luYWxseSBlbnZpc2lv
bmVkIGZvciBNb3ppbGxhIE1ldHJpY3MgZGFzaGJvYXJkIHByb2plY3RzLCB3
ZSBhcmUgbWFraW5nIHRoaXMgcmVwb3NpdG9yeSBwdWJsaWMgZm9yIG90aGVy
cyB0byB1c2UsIGtub3dpbmcgZnVsbCB3ZWxsIHRoYXQgd2UgYXJlIGZhciBm
cm9tIGhhdmluZyB0aGlzIHByb2plY3QgaW4gZ29vZC1lbm91Z2ggc2hhcGUu
IFRha2UgYSBsb29rIGF0IHRoZSBpc3N1ZXMgdG8gc2VlIHRoZSBtaWxlc3Rv
bmVzIGFuZCBvdGhlciB1cGNvbWluZyB3b3JrIG9uIHRoaXMgcmVwb3NpdG9y
eS4gV2UgYXJlIGN1cnJlbnRseSB1c2luZyBzZW1hbnRpYyB2ZXJzaW9uaW5n
LgoKPGEgaHJlZj0iaHR0cDovL21ldHJpY3NncmFwaGljc2pzLm9yZyI+aHR0
cDovL21ldHJpY3NncmFwaGljc2pzLm9yZzwvYT4KCiMjIEltcG9ydGFudCBj
aGFuZ2VzIGluIHYyLjEwClRoZSBsaWJyYXJ5IG5vdyBkZXBlbmRzIG9uIEQz
IDQueC4gVGhlIGltcGFjdCBvbiBNRyB1c2VycyBpcyBtaW5pbWFsLCB0aG91
Z2ggaWYgeW91IGRvIHVzZSBEMyBmb3Igb3RoZXIgd29yaywgaGVyZSBpcyB0
aGUgW2xpc3Qgb2YgY2hhbmdlc10oaHR0cHM6Ly9naXRodWIuY29tL2QzL2Qz
L2Jsb2IvbWFzdGVyL0NIQU5HRVMubWQpIGZyb20gMy54IHRvIDQueC4gUGxl
YXNlIHJlZmVyIHRvIHRoZSBbcmVsZWFzZSBub3Rlc10oaHR0cHM6Ly9naXRo
dWIuY29tL21ldHJpY3NncmFwaGljcy9tZXRyaWNzLWdyYXBoaWNzL3JlbGVh
c2VzL3RhZy92Mi4xMC4wKSBmb3IgZnVydGhlciBkZXRhaWxzLgoKIyMgSW1w
b3J0YW50IGNoYW5nZXMgaW4gdjIuMAoxLiBUaGUgbGlicmFyeSBpcyBub3cg
bmFtZXNwYWNlZC4gYGBkYXRhX2dyYXBoaWNgYCBpcyBub3cgYGBNRy5kYXRh
X2dyYXBoaWNgYCwgYGBjb252ZXJ0X2RhdGVzYGAgaXMgbm93IGBgTUcuY29u
dmVydC5kYXRlYGAsIGBgY2xvbmVgYCBpcyBub3cgYGBNRy5jbG9uZWBgLCBg
YGJ1dHRvbl9sYXlvdXRgYCBpcyBub3cgYGBNRy5idXR0b25fbGF5b3V0YGAg
YW5kIGBgZGF0YV90YWJsZWBgIGlzIG5vdyBgYE1HLmRhdGFfdGFibGVgYC4g
V2UgYWRkZWQgYSBuZXcgY29udmVuaWVuY2UgZnVuY3Rpb24gY2FsbGVkIGBg
TUcuY29udmVydC5udW1iZXJgYC4KMi4gVGhlIGBgcm9sbG92ZXJfY2FsbGJh
Y2tgYCBvcHRpb24gaGFzIGJlZW4gcmVuYW1lZCBgYG1vdXNlb3ZlcmBgIGFu
ZCBleHBhbmRlZCBpbiBvcmRlciB0byBtYWtlIGl0IG1vcmUgY29uc2lzdGVu
dCB3aXRoIG90aGVyIGxpYnJhcmllcy4gV2Ugbm93IGhhdmUgdGhyZWUgY2Fs
bGJhY2sgZnVuY3Rpb25zIGF2YWlsYWJsZTogW21vdXNlb3Zlcl0oaHR0cHM6
Ly9naXRodWIuY29tL21ldHJpY3NncmFwaGljcy9tZXRyaWNzLWdyYXBoaWNz
L3dpa2kvR3JhcGhpYyNtb3VzZW92ZXIpLCBbbW91c2VvdXRdKGh0dHBzOi8v
Z2l0aHViLmNvbS9tZXRyaWNzZ3JhcGhpY3MvbWV0cmljcy1ncmFwaGljcy93
aWtpL0dyYXBoaWMjbW91c2VvdXQpIGFuZCBbbW91c2Vtb3ZlXShodHRwczov
L2dpdGh1Yi5jb20vbWV0cmljc2dyYXBoaWNzL21ldHJpY3MtZ3JhcGhpY3Mv
d2lraS9HcmFwaGljI21vdXNlbW92ZSkuCjMuIENTUyBydWxlcyBoYXZlIGJl
ZW4gcHJlZml4ZWQgYW5kIGluIHNvbWUgY2FzZXMgdXBkYXRlZCBmb3IgY29u
c2lzdGVuY3kuIGBgYWN0aXZlX2RhdGFwb2ludGBgIGZvciBpbnN0YW5jZSBp
cyBub3cgYGBtZy1hY3RpdmUtZGF0YXBvaW50YGAuCgojIyBRdWljay1zdGFy
dCBndWlkZQoxLiBEb3dubG9hZCB0aGUgW2xhdGVzdCByZWxlYXNlXShodHRw
czovL2dpdGh1Yi5jb20vbWV0cmljc2dyYXBoaWNzL21ldHJpY3MtZ3JhcGhp
Y3MvcmVsZWFzZXMpLgoyLiBGb2xsb3cgdGhlIGV4YW1wbGVzIFtoZXJlXSho
dHRwczovL2dpdGh1Yi5jb20vbWV0cmljc2dyYXBoaWNzL21ldHJpY3MtZ3Jh
cGhpY3MvYmxvYi9tYXN0ZXIvZXhhbXBsZXMvaW5kZXguaHRtKSBhbmQgW2hl
cmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9tZXRyaWNzZ3JhcGhpY3MvbWV0cmlj
cy1ncmFwaGljcy9ibG9iL21hc3Rlci9leGFtcGxlcy9qcy9tYWluLmpzKSB0
byBzZWUgaG93IGdyYXBoaWNzIGFyZSBsYWlkIG91dCBhbmQgYnVpbHQuIFRo
ZSBleGFtcGxlcyB1c2UgSlNPTiBkYXRhIGZyb20gW2V4YW1wbGVzL2RhdGFd
KGh0dHBzOi8vZ2l0aHViLmNvbS9tZXRyaWNzZ3JhcGhpY3MvbWV0cmljcy1n
cmFwaGljcy9ibG9iL21hc3Rlci9leGFtcGxlcy9kYXRhKSwgdGhvdWdoIHlv
dSBtYXkgZWFzaWx5IHB1bGwgZGF0YSBmcm9tIGVsc2V3aGVyZS4KCiMjIERl
cGVuZGVuY2llcwpUaGUgbGlicmFyeSBkZXBlbmRzIG9uIFtEM10oaHR0cDov
L2QzanMub3JnKS4gSWYgeW91IHdpc2ggdG8gZW5hYmxlIHRvb2x0aXBzIG9y
IHVzZSBbYnV0dG9uc10oaHR0cHM6Ly9naXRodWIuY29tL21ldHJpY3NncmFw
aGljcy9tZXRyaWNzLWdyYXBoaWNzL3dpa2kvQnV0dG9uLUxheW91dCksIHBs
ZWFzZSBpbmNsdWRlIFtqUXVlcnldKGh0dHA6Ly9qcXVlcnkuY29tLykgYXMg
d2VsbC4gVmVyc2lvbnMgb2YgTUcgb2xkZXIgdGhhbiB2Mi4xMCBkZXBlbmQg
b24gRDMgMywgd2hlcmVhcyBNRyB2Mi4xMCBvbndhcmRzIGRlcGVuZCBvbiBE
MyA0LgoKIyMgQ29udHJpYnV0aW5nCklmIHlvdSB3b3VsZCBsaWtlIHRvIGhl
bHAgZXh0ZW5kIE1ldHJpY3NHcmFwaGljcy5qcyBvciBmaXggYnVncywgcGxl
YXNlIFtmb3JrIHRoZSBsaWJyYXJ5XShodHRwczovL2dpdGh1Yi5jb20vbWV0
cmljc2dyYXBoaWNzL21ldHJpY3MtZ3JhcGhpY3MpIGFuZCBpbnN0YWxsIFtO
b2RlLmpzXShodHRwOi8vbm9kZWpzLm9yZykuIFRoZW4sIGZyb20gdGhlIHBy
b2plY3QncyByb290IGRpcmVjdG9yeSBpbnN0YWxsIFtndWxwXShodHRwOi8v
Z3VscGpzLmNvbSk6CgogICAgbnBtIGluc3RhbGwgZ3VscAoKVGhlbiwgaW5z
dGFsbCB0aGUgbGlicmFyeSdzIGRlcGVuZGVuY2llczoKCiAgICBucG0gaW5z
dGFsbAoKVG8gYnVpbGQgdGhlIGxpYnJhcnkgZnJvbSBzb3VyY2UsIHR5cGU6
CgogICAgZ3VscCBidWlsZDpqcwoKVG8gcnVuIHRlc3RzLCB0eXBlOgoKICAg
IGd1bHAgdGVzdAoKV2UgaGF2ZSBhIGJhc2ljIGRldmVsb3BtZW50IGVudmly
b25tZW50IHdoaWNoIHVzZXMgdGhlIHByb2plY3Qgc291cmNlIHRvCnNlcnZl
IHVwIGFuIGludGVyYWN0aXZlIGV4YW1wbGUuIFRvIHJ1biBpdCwgdHlwZToK
CiAgICBndWxwIHNlcnZlCgpBIGRldmVsb3BtZW50IHNlcnZlciB3aWxsIGJl
IGF2YWlsYWJsZSBhdCBodHRwOi8vbG9jYWxob3N0OjQzMDAuIEp1c3QgcmVs
b2FkCml0IGFzIHlvdSBtYWtlIG1vZGlmaWNhdGlvbnMgdG8gdGhlIGZpbGVz
IGluIGBzcmMvYCAtLSBhbnkgY2hhbmdlcyBtYWRlIHRvCnRoZSBleGFtcGxl
IHNvdXJjZSBhbmQgZGF0YSBzaG91bGQgYmUgcHJlc2VydmVkLgoKVGhlIHdl
YnNpdGUgW21ldHJpY3NncmFwaGljc2pzLm9yZ10oaHR0cHM6Ly9tZXRyaWNz
Z3JhcGhpY3Nqcy5vcmcpIGlzIGF1dG9tYXRpY2FsbHkKdXBsb2FkZWQvdXBk
YXRlZCBieSB0cmF2aXMgY2kgd2hlbiBhIG5ldyB0YWcgaXMgY3JlYXRlZCAo
Y29ycmVzcG9uZGluZyB0byBhCm5ldyByZWxlYXNlKS4gSXQgaXMgc2VydmVk
IGZyb20gZ2l0aHViIHBhZ2VzIHVzaW5nIGEgW25ldGxpZnldKGh0dHBzOi8v
bmV0bGlmeS5jb20pCmNvbmZpZ3VyYXRpb24gbWFpbnRhaW5lZCBhbmQgY29u
dHJvbGxlZCBieSBbV2lsbGlhbSBMYWNoYW5jZV0oaHR0cHM6Ly9naXRodWIu
Y29tL3dsYWNoLykuCgpZb3UgbWlnaHQgYWxzbyBiZSBpbnRlcmVzdGVkIGlu
IHdyaXRpbmcgYWRkb25zIGZvciB0aGUgbGlicmFyeSwgaW4gd2hpY2ggY2Fz
ZSwgW2hhdmUgYSByZWFkIHRocm91Z2ggdGhpcyBwYWdlXShodHRwczovL2dp
dGh1Yi5jb20vbWV0cmljc2dyYXBoaWNzL21ldHJpY3MtZ3JhcGhpY3Mvd2lr
aS9EZXZlbG9waW5nLUFkZG9ucykuCgojIyBSZXNvdXJjZXMKKiBbRXhhbXBs
ZXNdKGh0dHA6Ly9tZXRyaWNzZ3JhcGhpY3Nqcy5vcmcvZXhhbXBsZXMuaHRt
KQoqIFtJbnRlcmFjdGl2ZSBkZW1vXShodHRwOi8vbWV0cmljc2dyYXBoaWNz
anMub3JnL2ludGVyYWN0aXZlLWRlbW8uaHRtKQoqIFtMaXN0IG9mIG9wdGlv
bnNdKGh0dHBzOi8vZ2l0aHViLmNvbS9tZXRyaWNzZ3JhcGhpY3MvbWV0cmlj
cy1ncmFwaGljcy93aWtpL0xpc3Qtb2YtT3B0aW9ucykKKiBbQ29udmVuaWVu
Y2UgZnVuY3Rpb25zXShodHRwczovL2dpdGh1Yi5jb20vbWV0cmljc2dyYXBo
aWNzL21ldHJpY3MtZ3JhcGhpY3Mvd2lraS9Db252ZW5pZW5jZS1GdW5jdGlv
bnMpCiogW0hvb2tzXShodHRwczovL2dpdGh1Yi5jb20vbWV0cmljc2dyYXBo
aWNzL21ldHJpY3MtZ3JhcGhpY3MvYmxvYi9tYXN0ZXIvSE9PS1MubWQpCiog
W0NoYXJ0IHR5cGVzXShodHRwczovL2dpdGh1Yi5jb20vbWV0cmljc2dyYXBo
aWNzL21ldHJpY3MtZ3JhcGhpY3Mvd2lraS9DaGFydC1UeXBlcykKKiBbRGV2
ZWxvcGluZyBhZGRvbnNdKGh0dHBzOi8vZ2l0aHViLmNvbS9tZXRyaWNzZ3Jh
cGhpY3MvbWV0cmljcy1ncmFwaGljcy93aWtpL0RldmVsb3BpbmctQWRkb25z
KQoqIFtCdWlsZGluZyBhIGJ1dHRvbiBsYXlvdXRdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9tZXRyaWNzZ3JhcGhpY3MvbWV0cmljcy1ncmFwaGljcy93aWtpL0J1
dHRvbi1MYXlvdXQpCgojIyBEb3dubG9hZCBwYWNrYWdlClRoZSBkb3dubG9h
ZCBwYWNrYWdlIGluY2x1ZGVzIGV2ZXJ5dGhpbmcgdGhhdCB5b3Ugc2VlIG9u
IFttZXRyaWNzZ3JhcGhpY3Nqcy5vcmddKGh0dHA6Ly9tZXRyaWNzZ3JhcGhp
Y3Nqcy5vcmcpLiBJbiBvcmRlciB0byB1c2UgdGhlIGxpYnJhcnkgaW4geW91
ciBvd24gcHJvamVjdCwgdGhlIG9ubHkgZmlsZXMgdGhhdCB5b3UnbGwgbmVl
ZCBhcmUgdGhlIG9uZXMgdW5kZXIgYGBkaXN0YGAuIFJlbWVtYmVyIHRvIGxv
YWQgYGBEM2BgIGFuZCBgYGpRdWVyeWBgLiBJZiB5b3UgZG9uJ3QgY2FyZSBh
Ym91dCB0b29sdGlwcyBvciB0aGUgYnV0dG9uIGxheW91dCwgeW91IHdvbid0
IG5lZWQgdGhlIGxhdHRlci4gSWYgeW91ciBwcm9qZWN0IHVzZXMgQm9vdHN0
cmFwLCBtYWtlIHN1cmUgeW91IGxvYWQgTWV0cmljc0dyYXBoaWNzLmpzIGFm
dGVyIGl0LgoKIyMgRnJlcXVlbnRseSBhc2tlZCBxdWVzdGlvbnMKX19XaGF0
IGRvZXMgTWV0cmljc0dyYXBoaWNzLmpzIGRvIHRoYXQgbGlicmFyeSB4IGRv
ZXNuJ3QgZG8/X18KCklmIGxpYnJhcnkgeCB3b3JrcyBmb3IgeW91LCB5b3Ug
c2hvdWxkIGtlZXAgdXNpbmcgaXQuIFdlJ3JlIG5vdCBhaW1pbmcgdG8gYmUg
Y29tcGV0aXRpdmUgd2l0aCBsaWJyYXJpZXMgdGhhdCBhbHJlYWR5IGV4aXN0
LiBXZSdyZSBhaW1pbmcgdG8gbWFrZSBhIGxpYnJhcnkgdGhhdCBtZWV0cyBv
dXIgbmVlZHMuIFdlIGFsc28gaGFwcGVuIHRvIHRoaW5rIHRoYXQgdGhlIHdv
cmxkIF9uZWVkc18gYSBwcmluY2lwbGVkIGRhdGEgcHJlc2VudGF0aW9uIGxp
YnJhcnksIGFuZCB0aGF0IG1hbnkgb2Ygb3VyIG5lZWRzIGFyZSB0aGUgc2Ft
ZSBhcyBvdGhlciBmb2xrcycuCgpfX0kgb25seSBzZWUgY29sb3VycyBmb3Ig
dGhlIGZpcnN0IDEwIGxpbmVzIGluIG15IGNoYXJ0LCB3aGF0IGdpdmVzP19f
CgpUaGUgY29sb3JzIGZvciB0aGUgZmlyc3QgdGVuIGxpbmVzLCBhcmVhcyBh
bmQgbGVnZW5kcyBhcmUgZGVmaW5lZCBpbiB0aGUgc3R5bGVzaGVldCBmb3Ig
dGhlIGxpZ2h0IGFuZCBkYXJrIHRoZW1lcy4gRm9yIGFuIGVsZXZlbnRoIGxp
bmUsIHlvdSB3b3VsZCBhZGQgdGhlIGZvbGxvd2luZyBDU1MgcnVsZXM6CgoK
YGBgY3NzCi5tZy1saW5lMTEtY29sb3IgewogICAgc3Ryb2tlOiBsaWdodHBp
bms7Cn0KCi5tZy1hcmVhMTEtY29sb3IgewogICAgZmlsbDogbGlnaHRwaW5r
Owp9CgoubWctaG92ZXItbGluZTExLWNvbG9yIHsKICAgIGZpbGw6IGxpZ2h0
cGluazsKfQoKLm1nLWxpbmUxMS1sZWdlbmQtY29sb3IgewogICAgY29sb3I6
IGxpZ2h0cGluazsKfQpgYGAKCklmIHlvdSdyZSBwbG90dGluZyBtb3JlIHRo
YW4gZml2ZSBsaW5lcyBpbiB0aGUgc2FtZSBjaGFydCBhbmQgdXNpbmcgX2Nv
bG9yXyB0byBlbmNvZGUgc29tZSBkaW1lbnNpb24gb2YgdGhlIGRhdGEsIHRo
ZW4geW91IHByb2JhYmx5IG5lZWQgdG8gcmV0aGluayB0aGUgY2hhcnQuCgpf
X0kgZ2V0IGFuIGVycm9yIHdoZW4gSSBsb2FkIE1HIGFsb25nc2lkZSBsaWJy
YXJ5IHhfXwoKSWYgeW91ciBwcm9qZWN0IHVzZXMgQm9vdHN0cmFwLCBtYWtl
IHN1cmUgeW91IGxvYWQgTWV0cmljc0dyYXBoaWNzLmpzIGFmdGVyIGl0LiBJ
ZiB5b3VyIHByb2plY3QgdXNlcyBqUXVlcnkgVUksIGxvYWQgaXQgYWZ0ZXIg
TWV0cmljc0dyYXBoaWNzLmpzLgoKIyMgR2FsbGVyeQpGZWVsIGZyZWUgdG8g
YWRkIHlvdXIgYWRkb25zIGFuZCB3ZWJzaXRlcyB0byB0aGlzIGxpc3QuCiog
W21nLWNvbG9yLXNjYWxlIChhZGRvbildKGh0dHBzOi8vZ2l0aHViLmNvbS9k
YW5kZWhhdmlsbGFuZC9tZy1jb2xvci1zY2FsZSkKKiBbbWctbGluZS1icnVz
aGluZyAoYWRkb24pXShodHRwczovL2dpdGh1Yi5jb20vZGFuZGVoYXZpbGxh
bmQvbWctbGluZS1icnVzaGluZykKKiBbbWctcmVnaW9ucyAoYWRkb24pXSho
dHRwczovL2dpdGh1Yi5jb20vc2Vuc2V5ZWlvL21nLXJlZ2lvbnMpCiogW1Jh
aWxzIHdyYXBwZXIgZ2VtXShodHRwczovL2dpdGh1Yi5jb20vZGdpbHBlcmV6
L21ldHJpY3MtZ3JhcGhpY3MtcmFpbHMpCiogW1IgcGFja2FnZSAoaHRtbHdp
ZGdldCldKGh0dHBzOi8vZ2l0aHViLmNvbS9ocmJybXN0ci9tZXRyaWNzZ3Jh
cGhpY3MpCiogW1B5dGhvbiBsaWJyYXJ5IC0gdXNpbmcgUHl4bGV5XShodHRw
Oi8vbXVsdGl0aHJlYWRlZC5zdGl0Y2hmaXguY29tL2Jsb2cvMjAxNS8wNy8x
Ni9weXhsZXkpCiogW0FuZ3VsYXIgZGlyZWN0aXZlXShodHRwczovL2dpdGh1
Yi5jb20vZWxtYXJxdWV6L2FuZ3VsYXItbWV0cmljcy1ncmFwaGljcykKKiBb
UmVhY3QgY29tcG9uZW50XShodHRwczovL2dpdGh1Yi5jb20vbWV0cmljc2dy
YXBoaWNzL3JlYWN0LW1ldHJpY3MtZ3JhcGhpY3MpCgojIyBMaWNlbnNlCgpU
aGUgX19NZXRyaWNzR3JhcGhpY3MuanNfXyBjb2RlIGlzIHNoYXJlZCB1bmRl
ciB0aGUgdGVybXMgb2YgdGhlIFtNb3ppbGxhIFB1YmxpYyBMaWNlbnNlIHYy
LjBdKGh0dHA6Ly93d3cubW96aWxsYS5vcmcvTVBMLzIuMC8pLiBTZWUgdGhl
IGBMSUNFTlNFYCBmaWxlIGF0IHRoZSByb290IG9mIHRoZSByZXBvc2l0b3J5
LiBUaGUgY3VycmVudCBsb2dvIGlzIGNvdXJ0ZXN5IG9mIFtGb250IEF3ZXNv
bWVdKGh0dHA6Ly9mb3J0YXdlc29tZS5naXRodWIuaW8vRm9udC1Bd2Vzb21l
LykuCgoKW3RyYXZpcy1iYWRnZV06IGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9t
ZXRyaWNzZ3JhcGhpY3MvbWV0cmljcy1ncmFwaGljcy5zdmc/YnJhbmNoPW1h
c3RlcgpbdHJhdmlzLWJhZGdlLXVybF06IGh0dHBzOi8vdHJhdmlzLWNpLm9y
Zy9tZXRyaWNzZ3JhcGhpY3MvbWV0cmljcy1ncmFwaGljcwo=
",,7180,"c3VkbzogcmVxdWlyZWQKbGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczoKICAt
ICI4IgphZGRvbnM6CiAgICBjaHJvbWU6IHN0YWJsZQpiZWZvcmVfc2NyaXB0
OgogICAgLSBzdWRvIGNob3duIHJvb3QgL29wdC9nb29nbGUvY2hyb21lL2No
cm9tZS1zYW5kYm94CiAgICAtIHN1ZG8gY2htb2QgNDc1NSAvb3B0L2dvb2ds
ZS9jaHJvbWUvY2hyb21lLXNhbmRib3gKc2NyaXB0OgogIC0gbnBtIHJ1biBs
aW50CiAgLSBucG0gcnVuIHRlc3QtY2kKYmVmb3JlX2RlcGxveToKICAtIGNw
IGRpc3QvbWV0cmljc2dyYXBoaWNzLmNzcyBkaXN0L21ldHJpY3NncmFwaGlj
cy5taW4uanMgLgogIC0gY3AgLXIgZXhhbXBsZXMvKiAuCiAgLSBjcCAtciBz
cmMvanMvKiBqcwpkZXBsb3k6CiAgLSBwcm92aWRlcjogbnBtCiAgICBlbWFp
bDogd3JsYWNoQGdtYWlsLmNvbQogICAgYXBpX2tleToKICAgICAgc2VjdXJl
OiBMdFMrN1Y4eU1OTVJlbEhBRnYrbXM3MXBZSnpvY1gralRlUHRVdk5OWTRr
MmoyYjRyVWtCWVUwdlNBbUJiek9uU2FJZjVYOGRYVnp4RXRZYU1JbGlVcjB2
VmJGdm9vSzRHRjZwNFgvMDQzZHEyTVJubTFHVWR0RzRieURkM0psWU55Tm80
UkVnbW5wY0FSTkxmM2JmZmwza1hrYjRKQ3Z4YkFXay95dWoyVjQ9CiAgICBv
bjoKICAgICAgdGFnczogdHJ1ZQogICAgICByZXBvOiBtZXRyaWNzZ3JhcGhp
Y3MvbWV0cmljcy1ncmFwaGljcwogIC0gcHJvdmlkZXI6IHBhZ2VzCiAgICBz
a2lwLWNsZWFudXA6IHRydWUKICAgIGdpdGh1Yi10b2tlbjogJEdJVEhVQl9U
T0tFTgogICAgb246CiAgICAgIHRhZ3M6IHRydWUKICAgICAgYnJhbmNoOiBt
YXN0ZXIK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
