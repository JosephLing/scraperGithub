name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'neural-style',41717707,b'Torch implementation of neural style algorithm',b'Lua',320,17190,,670,False,b'https://api.github.com/repos/jcjohnson/neural-style/forks',"IyBuZXVyYWwtc3R5bGUKClRoaXMgaXMgYSB0b3JjaCBpbXBsZW1lbnRhdGlv
biBvZiB0aGUgcGFwZXIgW0EgTmV1cmFsIEFsZ29yaXRobSBvZiBBcnRpc3Rp
YyBTdHlsZV0oaHR0cDovL2FyeGl2Lm9yZy9hYnMvMTUwOC4wNjU3NikKYnkg
TGVvbiBBLiBHYXR5cywgQWxleGFuZGVyIFMuIEVja2VyLCBhbmQgTWF0dGhp
YXMgQmV0aGdlLgoKVGhlIHBhcGVyIHByZXNlbnRzIGFuIGFsZ29yaXRobSBm
b3IgY29tYmluaW5nIHRoZSBjb250ZW50IG9mIG9uZSBpbWFnZSB3aXRoIHRo
ZSBzdHlsZSBvZiBhbm90aGVyIGltYWdlIHVzaW5nCmNvbnZvbHV0aW9uYWwg
bmV1cmFsIG5ldHdvcmtzLiBIZXJlJ3MgYW4gZXhhbXBsZSB0aGF0IG1hcHMg
dGhlIGFydGlzdGljIHN0eWxlIG9mCltUaGUgU3RhcnJ5IE5pZ2h0XShodHRw
czovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9UaGVfU3RhcnJ5X05pZ2h0KQpv
bnRvIGEgbmlnaHQtdGltZSBwaG90b2dyYXBoIG9mIHRoZSBTdGFuZm9yZCBj
YW1wdXM6Cgo8ZGl2IGFsaWduPSJjZW50ZXIiPgogPGltZyBzcmM9Imh0dHBz
Oi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9qY2pvaG5zb24vbmV1cmFs
LXN0eWxlL21hc3Rlci9leGFtcGxlcy9pbnB1dHMvc3RhcnJ5X25pZ2h0X2dv
b2dsZS5qcGciIGhlaWdodD0iMjIzcHgiPgogPGltZyBzcmM9Imh0dHBzOi8v
cmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9qY2pvaG5zb24vbmV1cmFsLXN0
eWxlL21hc3Rlci9leGFtcGxlcy9pbnB1dHMvaG9vdmVydG93ZXJuaWdodC5q
cGciIGhlaWdodD0iMjIzcHgiPgogPGltZyBzcmM9Imh0dHBzOi8vcmF3Lmdp
dGh1YnVzZXJjb250ZW50LmNvbS9qY2pvaG5zb24vbmV1cmFsLXN0eWxlL21h
c3Rlci9leGFtcGxlcy9vdXRwdXRzL3N0YXJyeV9zdGFuZm9yZF9iaWdnZXIu
cG5nIiB3aWR0aD0iNzEwcHgiPgo8L2Rpdj4KCkFwcGx5aW5nIHRoZSBzdHls
ZSBvZiBkaWZmZXJlbnQgaW1hZ2VzIHRvIHRoZSBzYW1lIGNvbnRlbnQgaW1h
Z2UgZ2l2ZXMgaW50ZXJlc3RpbmcgcmVzdWx0cy4KSGVyZSB3ZSByZXByb2R1
Y2UgRmlndXJlIDIgZnJvbSB0aGUgcGFwZXIsIHdoaWNoIHJlbmRlcnMgYSBw
aG90b2dyYXBoIG9mIHRoZSBUdWJpbmdlbiBpbiBHZXJtYW55IGluIGEKdmFy
aWV0eSBvZiBzdHlsZXM6Cgo8ZGl2IGFsaWduPSJjZW50ZXIiPgo8aW1nIHNy
Yz0iaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2pjam9obnNv
bi9uZXVyYWwtc3R5bGUvbWFzdGVyL2V4YW1wbGVzL2lucHV0cy90dWJpbmdl
bi5qcGciIGhlaWdodD0iMjUwcHgiPgo8aW1nIHNyYz0iaHR0cHM6Ly9yYXcu
Z2l0aHVidXNlcmNvbnRlbnQuY29tL2pjam9obnNvbi9uZXVyYWwtc3R5bGUv
bWFzdGVyL2V4YW1wbGVzL291dHB1dHMvdHViaW5nZW5fc2hpcHdyZWNrLnBu
ZyIgaGVpZ2h0PSIyNTBweCI+Cgo8aW1nIHNyYz0iaHR0cHM6Ly9yYXcuZ2l0
aHVidXNlcmNvbnRlbnQuY29tL2pjam9obnNvbi9uZXVyYWwtc3R5bGUvbWFz
dGVyL2V4YW1wbGVzL291dHB1dHMvdHViaW5nZW5fc3RhcnJ5LnBuZyIgaGVp
Z2h0PSIyNTBweCI+CjxpbWcgc3JjPSJodHRwczovL3Jhdy5naXRodWJ1c2Vy
Y29udGVudC5jb20vamNqb2huc29uL25ldXJhbC1zdHlsZS9tYXN0ZXIvZXhh
bXBsZXMvb3V0cHV0cy90dWJpbmdlbl9zY3JlYW0ucG5nIiBoZWlnaHQ9IjI1
MHB4Ij4KCjxpbWcgc3JjPSJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVu
dC5jb20vamNqb2huc29uL25ldXJhbC1zdHlsZS9tYXN0ZXIvZXhhbXBsZXMv
b3V0cHV0cy90dWJpbmdlbl9zZWF0ZWRfbnVkZS5wbmciIGhlaWdodD0iMjUw
cHgiPgo8aW1nIHNyYz0iaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQu
Y29tL2pjam9obnNvbi9uZXVyYWwtc3R5bGUvbWFzdGVyL2V4YW1wbGVzL291
dHB1dHMvdHViaW5nZW5fY29tcG9zaXRpb25fdmlpLnBuZyIgaGVpZ2h0PSIy
NTBweCI+CjwvZGl2PgoKSGVyZSBhcmUgdGhlIHJlc3VsdHMgb2YgYXBwbHlp
bmcgdGhlIHN0eWxlIG9mIHZhcmlvdXMgcGllY2VzIG9mIGFydHdvcmsgdG8g
dGhpcyBwaG90b2dyYXBoIG9mIHRoZQpnb2xkZW4gZ2F0ZSBicmlkZ2U6CgoK
PGRpdiBhbGlnbj0iY2VudGVyIgo8aW1nIHNyYz0iaHR0cHM6Ly9yYXcuZ2l0
aHVidXNlcmNvbnRlbnQuY29tL2pjam9obnNvbi9uZXVyYWwtc3R5bGUvbWFz
dGVyL2V4YW1wbGVzL2lucHV0cy9nb2xkZW5fZ2F0ZS5qcGciIGhlaWdodD0i
MjAwcHgiPgoKPGltZyBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250
ZW50LmNvbS9qY2pvaG5zb24vbmV1cmFsLXN0eWxlL21hc3Rlci9leGFtcGxl
cy9pbnB1dHMvZnJpZGFfa2FobG8uanBnIiBoZWlnaHQ9IjE2MHB4Ij4KPGlt
ZyBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9qY2pv
aG5zb24vbmV1cmFsLXN0eWxlL21hc3Rlci9leGFtcGxlcy9vdXRwdXRzL2dv
bGRlbl9nYXRlX2thaGxvLnBuZyIgaGVpZ2h0PSIxNjBweCI+CjxpbWcgc3Jj
PSJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vamNqb2huc29u
L25ldXJhbC1zdHlsZS9tYXN0ZXIvZXhhbXBsZXMvaW5wdXRzL2VzY2hlcl9z
cGhlcmUuanBnIiBoZWlnaHQ9IjE2MHB4Ij4KPGltZyBzcmM9Imh0dHBzOi8v
cmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9qY2pvaG5zb24vbmV1cmFsLXN0
eWxlL21hc3Rlci9leGFtcGxlcy9vdXRwdXRzL2dvbGRlbl9nYXRlX2VzY2hl
ci5wbmciIGhlaWdodD0iMTYwcHgiPgo8L2Rpdj4KCjxkaXYgYWxpZ249ImNl
bnRlciI+CjxpbWcgc3JjPSJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVu
dC5jb20vamNqb2huc29uL25ldXJhbC1zdHlsZS9tYXN0ZXIvZXhhbXBsZXMv
aW5wdXRzL3dvbWFuLXdpdGgtaGF0LW1hdGlzc2UuanBnIiBoZWlnaHQ9IjE2
MHB4Ij4KPGltZyBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50
LmNvbS9qY2pvaG5zb24vbmV1cmFsLXN0eWxlL21hc3Rlci9leGFtcGxlcy9v
dXRwdXRzL2dvbGRlbl9nYXRlX21hdGlzc2UucG5nIiBoZWlnaHQ9IjE2MHB4
Ij4KPGltZyBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNv
bS9qY2pvaG5zb24vbmV1cmFsLXN0eWxlL21hc3Rlci9leGFtcGxlcy9pbnB1
dHMvdGhlX3NjcmVhbS5qcGciIGhlaWdodD0iMTYwcHgiPgo8aW1nIHNyYz0i
aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2pjam9obnNvbi9u
ZXVyYWwtc3R5bGUvbWFzdGVyL2V4YW1wbGVzL291dHB1dHMvZ29sZGVuX2dh
dGVfc2NyZWFtLnBuZyIgaGVpZ2h0PSIxNjBweCI+CjwvZGl2PgoKPGRpdiBh
bGlnbj0iY2VudGVyIj4KPGltZyBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1YnVz
ZXJjb250ZW50LmNvbS9qY2pvaG5zb24vbmV1cmFsLXN0eWxlL21hc3Rlci9l
eGFtcGxlcy9pbnB1dHMvc3RhcnJ5X25pZ2h0X2Nyb3AucG5nIiBoZWlnaHQ9
IjE2MHB4Ij4KPGltZyBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250
ZW50LmNvbS9qY2pvaG5zb24vbmV1cmFsLXN0eWxlL21hc3Rlci9leGFtcGxl
cy9vdXRwdXRzL2dvbGRlbl9nYXRlX3N0YXJyeS5wbmciIGhlaWdodD0iMTYw
cHgiPgo8aW1nIHNyYz0iaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQu
Y29tL2pjam9obnNvbi9uZXVyYWwtc3R5bGUvbWFzdGVyL2V4YW1wbGVzL2lu
cHV0cy9zZWF0ZWQtbnVkZS5qcGciIGhlaWdodD0iMTYwcHgiPgo8aW1nIHNy
Yz0iaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2pjam9obnNv
bi9uZXVyYWwtc3R5bGUvbWFzdGVyL2V4YW1wbGVzL291dHB1dHMvZ29sZGVu
X2dhdGVfc2VhdGVkLnBuZyIgaGVpZ2h0PSIxNjBweCI+CjwvZGl2PgoKIyMj
IENvbnRlbnQgLyBTdHlsZSBUcmFkZW9mZgoKVGhlIGFsZ29yaXRobSBhbGxv
d3MgdGhlIHVzZXIgdG8gdHJhZGUtb2ZmIHRoZSByZWxhdGl2ZSB3ZWlnaHQg
b2YgdGhlIHN0eWxlIGFuZCBjb250ZW50IHJlY29uc3RydWN0aW9uIHRlcm1z
LAphcyBzaG93biBpbiB0aGlzIGV4YW1wbGUgd2hlcmUgd2UgcG9ydCB0aGUg
c3R5bGUgb2YgW1BpY2Fzc28ncyAxOTA3IHNlbGYtcG9ydHJhaXRdKGh0dHA6
Ly93d3cud2lraWFydC5vcmcvZW4vcGFibG8tcGljYXNzby9zZWxmLXBvcnRy
YWl0LTE5MDcpIG9udG8gQnJhZCBQaXR0OgoKPGRpdiBhbGlnbj0iY2VudGVy
Ij4KPGltZyBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNv
bS9qY2pvaG5zb24vbmV1cmFsLXN0eWxlL21hc3Rlci9leGFtcGxlcy9pbnB1
dHMvcGljYXNzb19zZWxmcG9ydDE5MDcuanBnIiBoZWlnaHQ9IjIyMHB4Ij4K
PGltZyBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9q
Y2pvaG5zb24vbmV1cmFsLXN0eWxlL21hc3Rlci9leGFtcGxlcy9pbnB1dHMv
YnJhZF9waXR0LmpwZyIgaGVpZ2h0PSIyMjBweCI+CjwvZGl2PgoKPGRpdiBh
bGlnbj0iY2VudGVyIj4KPGltZyBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1YnVz
ZXJjb250ZW50LmNvbS9qY2pvaG5zb24vbmV1cmFsLXN0eWxlL21hc3Rlci9l
eGFtcGxlcy9vdXRwdXRzL3BpdHRfcGljYXNzb19jb250ZW50XzVfc3R5bGVf
MTAucG5nIiBoZWlnaHQ9IjIyMHB4Ij4KPGltZyBzcmM9Imh0dHBzOi8vcmF3
LmdpdGh1YnVzZXJjb250ZW50LmNvbS9qY2pvaG5zb24vbmV1cmFsLXN0eWxl
L21hc3Rlci9leGFtcGxlcy9vdXRwdXRzL3BpdHRfcGljYXNzb19jb250ZW50
XzFfc3R5bGVfMTAucG5nIiBoZWlnaHQ9IjIyMHB4Ij4KPGltZyBzcmM9Imh0
dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9qY2pvaG5zb24vbmV1
cmFsLXN0eWxlL21hc3Rlci9leGFtcGxlcy9vdXRwdXRzL3BpdHRfcGljYXNz
b19jb250ZW50XzAxX3N0eWxlXzEwLnBuZyIgaGVpZ2h0PSIyMjBweCI+Cjxp
bWcgc3JjPSJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vamNq
b2huc29uL25ldXJhbC1zdHlsZS9tYXN0ZXIvZXhhbXBsZXMvb3V0cHV0cy9w
aXR0X3BpY2Fzc29fY29udGVudF8wMDI1X3N0eWxlXzEwLnBuZyIgaGVpZ2h0
PSIyMjBweCI+CjwvZGl2PgoKIyMjIFN0eWxlIFNjYWxlCgpCeSByZXNpemlu
ZyB0aGUgc3R5bGUgaW1hZ2UgYmVmb3JlIGV4dHJhY3Rpbmcgc3R5bGUgZmVh
dHVyZXMsIHdlIGNhbiBjb250cm9sIHRoZSB0eXBlcyBvZiBhcnRpc3RpYwpm
ZWF0dXJlcyB0aGF0IGFyZSB0cmFuc2ZlcmVkIGZyb20gdGhlIHN0eWxlIGlt
YWdlOyB5b3UgY2FuIGNvbnRyb2wgdGhpcyBiZWhhdmlvciB3aXRoIHRoZSBg
LXN0eWxlX3NjYWxlYCBmbGFnLgpCZWxvdyB3ZSBzZWUgdGhyZWUgZXhhbXBs
ZXMgb2YgcmVuZGVyaW5nIHRoZSBHb2xkZW4gR2F0ZSBCcmlkZ2UgaW4gdGhl
IHN0eWxlIG9mIFRoZSBTdGFycnkgTmlnaHQuCkZyb20gbGVmdCB0byByaWdo
dCwgYC1zdHlsZV9zY2FsZWAgaXMgMi4wLCAxLjAsIGFuZCAwLjUuCgo8ZGl2
IGFsaWduPSJjZW50ZXIiPgo8aW1nIHNyYz0iaHR0cHM6Ly9yYXcuZ2l0aHVi
dXNlcmNvbnRlbnQuY29tL2pjam9obnNvbi9uZXVyYWwtc3R5bGUvbWFzdGVy
L2V4YW1wbGVzL291dHB1dHMvZ29sZGVuX2dhdGVfc3RhcnJ5X3NjYWxlMi5w
bmciIGhlaWdodD0xNzVweD4KPGltZyBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1
YnVzZXJjb250ZW50LmNvbS9qY2pvaG5zb24vbmV1cmFsLXN0eWxlL21hc3Rl
ci9leGFtcGxlcy9vdXRwdXRzL2dvbGRlbl9nYXRlX3N0YXJyeV9zY2FsZTEu
cG5nIiBoZWlnaHQ9MTc1cHg+CjxpbWcgc3JjPSJodHRwczovL3Jhdy5naXRo
dWJ1c2VyY29udGVudC5jb20vamNqb2huc29uL25ldXJhbC1zdHlsZS9tYXN0
ZXIvZXhhbXBsZXMvb3V0cHV0cy9nb2xkZW5fZ2F0ZV9zdGFycnlfc2NhbGUw
NS5wbmciIGhlaWdodD0xNzVweD4KPC9kaXY+CgojIyMgTXVsdGlwbGUgU3R5
bGUgSW1hZ2VzCllvdSBjYW4gdXNlIG1vcmUgdGhhbiBvbmUgc3R5bGUgaW1h
Z2UgdG8gYmxlbmQgbXVsdGlwbGUgYXJ0aXN0aWMgc3R5bGVzLgoKQ2xvY2t3
aXNlIGZyb20gdXBwZXIgbGVmdDogIlRoZSBTdGFycnkgTmlnaHQiICsgIlRo
ZSBTY3JlYW0iLCAiVGhlIFNjcmVhbSIgKyAiQ29tcG9zaXRpb24gVklJIiwK
IlNlYXRlZCBOdWRlIiArICJDb21wb3NpdGlvbiBWSUkiLCBhbmQgIlNlYXRl
ZCBOdWRlIiArICJUaGUgU3RhcnJ5IE5pZ2h0IgoKPGRpdiBhbGlnbj0iY2Vu
dGVyIj4KPGltZyBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50
LmNvbS9qY2pvaG5zb24vbmV1cmFsLXN0eWxlL21hc3Rlci9leGFtcGxlcy9v
dXRwdXRzL3R1YmluZ2VuX3N0YXJyeV9zY3JlYW0ucG5nIiBoZWlnaHQ9IjI1
MHB4Ij4KPGltZyBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50
LmNvbS9qY2pvaG5zb24vbmV1cmFsLXN0eWxlL21hc3Rlci9leGFtcGxlcy9v
dXRwdXRzL3R1YmluZ2VuX3NjcmVhbV9jb21wb3NpdGlvbl92aWkucG5nIiBo
ZWlnaHQ9IjI1MHB4Ij4KCjxpbWcgc3JjPSJodHRwczovL3Jhdy5naXRodWJ1
c2VyY29udGVudC5jb20vamNqb2huc29uL25ldXJhbC1zdHlsZS9tYXN0ZXIv
ZXhhbXBsZXMvb3V0cHV0cy90dWJpbmdlbl9zdGFycnlfc2VhdGVkLnBuZyIg
aGVpZ2h0PSIyNTBweCI+CjxpbWcgc3JjPSJodHRwczovL3Jhdy5naXRodWJ1
c2VyY29udGVudC5jb20vamNqb2huc29uL25ldXJhbC1zdHlsZS9tYXN0ZXIv
ZXhhbXBsZXMvb3V0cHV0cy90dWJpbmdlbl9zZWF0ZWRfbnVkZV9jb21wb3Np
dGlvbl92aWkucG5nIiBoZWlnaHQ9IjI1MHB4Ij4KPC9kaXY+CgoKIyMjIFN0
eWxlIEludGVycG9sYXRpb24KV2hlbiB1c2luZyBtdWx0aXBsZSBzdHlsZSBp
bWFnZXMsIHlvdSBjYW4gY29udHJvbCB0aGUgZGVncmVlIHRvIHdoaWNoIHRo
ZXkgYXJlIGJsZW5kZWQ6Cgo8ZGl2IGFsaWduPSJjZW50ZXIiPgo8aW1nIHNy
Yz0iaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2pjam9obnNv
bi9uZXVyYWwtc3R5bGUvbWFzdGVyL2V4YW1wbGVzL291dHB1dHMvZ29sZGVu
X2dhdGVfc3RhcnJ5X3NjcmVhbV8zXzcucG5nIiBoZWlnaHQ9IjE3NXB4Ij4K
PGltZyBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9q
Y2pvaG5zb24vbmV1cmFsLXN0eWxlL21hc3Rlci9leGFtcGxlcy9vdXRwdXRz
L2dvbGRlbl9nYXRlX3N0YXJyeV9zY3JlYW1fNV81LnBuZyIgaGVpZ2h0PSIx
NzVweCI+CjxpbWcgc3JjPSJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVu
dC5jb20vamNqb2huc29uL25ldXJhbC1zdHlsZS9tYXN0ZXIvZXhhbXBsZXMv
b3V0cHV0cy9nb2xkZW5fZ2F0ZV9zdGFycnlfc2NyZWFtXzdfMy5wbmciIGhl
aWdodD0iMTc1cHgiPgo8L2Rpdj4KCgojIyMgVHJhbnNmZXIgc3R5bGUgYnV0
IG5vdCBjb2xvcgpJZiB5b3UgYWRkIHRoZSBmbGFnIGAtb3JpZ2luYWxfY29s
b3JzIDFgIHRoZW4gdGhlIG91dHB1dCBpbWFnZSB3aWxsIHJldGFpbiB0aGUg
Y29sb3JzIG9mIHRoZSBvcmlnaW5hbCBpbWFnZTsKdGhpcyBpcyBzaW1pbGFy
IHRvIFt0aGUgcmVjZW50IGJsb2cgcG9zdCBieSBkZWVwYXJ0LmlvXShodHRw
Oi8vYmxvZy5kZWVwYXJ0LmlvLzIwMTYvMDYvMDQvY29sb3ItaW5kZXBlbmRl
bnQtc3R5bGUtdHJhbnNmZXIvKS4KCjxkaXYgYWxpZ249ImNlbnRlciI+Cjxp
bWcgc3JjPSJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vamNq
b2huc29uL25ldXJhbC1zdHlsZS9tYXN0ZXIvZXhhbXBsZXMvb3V0cHV0cy90
dWJpbmdlbl9zdGFycnkucG5nIiBoZWlnaHQ9IjE4NXB4Ij4KPGltZyBzcmM9
Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9qY2pvaG5zb24v
bmV1cmFsLXN0eWxlL21hc3Rlci9leGFtcGxlcy9vdXRwdXRzL3R1YmluZ2Vu
X3NjcmVhbS5wbmciIGhlaWdodD0iMTg1cHgiPgo8aW1nIHNyYz0iaHR0cHM6
Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2pjam9obnNvbi9uZXVyYWwt
c3R5bGUvbWFzdGVyL2V4YW1wbGVzL291dHB1dHMvdHViaW5nZW5fY29tcG9z
aXRpb25fdmlpLnBuZyIgaGVpZ2h0PSIxODVweCI+Cgo8aW1nIHNyYz0iaHR0
cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2pjam9obnNvbi9uZXVy
YWwtc3R5bGUvbWFzdGVyL2V4YW1wbGVzL291dHB1dHMvb3JpZ2luYWxfY29s
b3IvdHViaW5nZW5fc3RhcnJ5LnBuZyIgaGVpZ2h0PSIxODVweCI+CjxpbWcg
c3JjPSJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vamNqb2hu
c29uL25ldXJhbC1zdHlsZS9tYXN0ZXIvZXhhbXBsZXMvb3V0cHV0cy9vcmln
aW5hbF9jb2xvci90dWJpbmdlbl9zY3JlYW0ucG5nIiBoZWlnaHQ9IjE4NXB4
Ij4KPGltZyBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNv
bS9qY2pvaG5zb24vbmV1cmFsLXN0eWxlL21hc3Rlci9leGFtcGxlcy9vdXRw
dXRzL29yaWdpbmFsX2NvbG9yL3R1YmluZ2VuX2NvbXBvc2l0aW9uX3ZpaS5w
bmciIGhlaWdodD0iMTg1cHgiPgo8L2Rpdj4KCiMjIFNldHVwOgoKRGVwZW5k
ZW5jaWVzOgoqIFt0b3JjaDddKGh0dHBzOi8vZ2l0aHViLmNvbS90b3JjaC90
b3JjaDcpCiogW2xvYWRjYWZmZV0oaHR0cHM6Ly9naXRodWIuY29tL3N6YWdv
cnV5a28vbG9hZGNhZmZlKQoKT3B0aW9uYWwgZGVwZW5kZW5jaWVzOgoqIEZv
ciBDVURBIGJhY2tlbmQ6CiAgKiBDVURBIDYuNSsKICAqIFtjdW5uXShodHRw
czovL2dpdGh1Yi5jb20vdG9yY2gvY3VubikKKiBGb3IgY3VETk4gYmFja2Vu
ZDoKICAqIFtjdWRubi50b3JjaF0oaHR0cHM6Ly9naXRodWIuY29tL3NvdW1p
dGgvY3Vkbm4udG9yY2gpCiogRm9yIE9wZW5DTCBiYWNrZW5kOgogICogW2Ns
dG9yY2hdKGh0dHBzOi8vZ2l0aHViLmNvbS9odWdocGVya2lucy9jbHRvcmNo
KQogICogW2Nsbm5dKGh0dHBzOi8vZ2l0aHViLmNvbS9odWdocGVya2lucy9j
bG5uKQoKQWZ0ZXIgaW5zdGFsbGluZyBkZXBlbmRlbmNpZXMsIHlvdSdsbCBu
ZWVkIHRvIHJ1biB0aGUgZm9sbG93aW5nIHNjcmlwdCB0byBkb3dubG9hZCB0
aGUgVkdHIG1vZGVsOgpgYGAKc2ggbW9kZWxzL2Rvd25sb2FkX21vZGVscy5z
aApgYGAKVGhpcyB3aWxsIGRvd25sb2FkIHRoZSBvcmlnaW5hbCBbVkdHLTE5
IG1vZGVsXShodHRwczovL2dpc3QuZ2l0aHViLmNvbS9rc2ltb255YW4vMzc4
NTE2MmY5NWNkMmQ1ZmVlNzcjZmlsZS1yZWFkbWUtbWQpLgpMZW9uIEdhdHlz
IGhhcyBncmFjaW91c2x5IHByb3ZpZGVkIHRoZSBtb2RpZmllZCB2ZXJzaW9u
IG9mIHRoZSBWR0ctMTkgbW9kZWwgdGhhdCB3YXMgdXNlZCBpbiB0aGVpciBw
YXBlcjsKdGhpcyB3aWxsIGFsc28gYmUgZG93bmxvYWRlZC4gQnkgZGVmYXVs
dCB0aGUgb3JpZ2luYWwgVkdHLTE5IG1vZGVsIGlzIHVzZWQuCgpJZiB5b3Ug
aGF2ZSBhIHNtYWxsZXIgbWVtb3J5IEdQVSB0aGVuIHVzaW5nIE5JTiBJbWFn
ZW5ldCBtb2RlbCB3aWxsIGJlIGJldHRlciBhbmQgZ2l2ZXMgc2xpZ2h0bHkg
d29yc2UgeWV0IGNvbXBhcmFibGUgcmVzdWx0cy4gWW91IGNhbiBnZXQgdGhl
IGRldGFpbHMgb24gdGhlIG1vZGVsIGZyb20gW0JWTEMgQ2FmZmUgTW9kZWxa
b29dKGh0dHBzOi8vZ2l0aHViLmNvbS9CVkxDL2NhZmZlL3dpa2kvTW9kZWwt
Wm9vKSBhbmQgY2FuIGRvd25sb2FkIHRoZSBmaWxlcyBmcm9tIFtOSU4tSW1h
Z2VuZXQgRG93bmxvYWQgTGlua10oaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29t
L2ZvbGRlcnZpZXc/aWQ9MEIwSWVkWVV1bk9RSU5FRnRVaTFRTldWaFZWVSZ1
c3A9ZHJpdmVfd2ViKQoKWW91IGNhbiBmaW5kIGRldGFpbGVkIGluc3RhbGxh
dGlvbiBpbnN0cnVjdGlvbnMgZm9yIFVidW50dSBpbiB0aGUgW2luc3RhbGxh
dGlvbiBndWlkZV0oSU5TVEFMTC5tZCkuCgojIyBVc2FnZQpCYXNpYyB1c2Fn
ZToKYGBgCnRoIG5ldXJhbF9zdHlsZS5sdWEgLXN0eWxlX2ltYWdlIDxpbWFn
ZS5qcGc+IC1jb250ZW50X2ltYWdlIDxpbWFnZS5qcGc+CmBgYAoKT3BlbkNM
IHVzYWdlIHdpdGggTklOIE1vZGVsIChUaGlzIHJlcXVpcmVzIHlvdSBkb3du
bG9hZCB0aGUgTklOIEltYWdlbmV0IG1vZGVsIGZpbGVzIGFzIGRlc2NyaWJl
ZCBhYm92ZSk6CmBgYAp0aCBuZXVyYWxfc3R5bGUubHVhIC1zdHlsZV9pbWFn
ZSBleGFtcGxlcy9pbnB1dHMvcGljYXNzb19zZWxmcG9ydDE5MDcuanBnIC1j
b250ZW50X2ltYWdlIGV4YW1wbGVzL2lucHV0cy9icmFkX3BpdHQuanBnIC1v
dXRwdXRfaW1hZ2UgcHJvZmlsZS5wbmcgLW1vZGVsX2ZpbGUgbW9kZWxzL25p
bl9pbWFnZW5ldF9jb252LmNhZmZlbW9kZWwgLXByb3RvX2ZpbGUgbW9kZWxz
L3RyYWluX3ZhbC5wcm90b3R4dCAtZ3B1IDAgLWJhY2tlbmQgY2xubiAtbnVt
X2l0ZXJhdGlvbnMgMTAwMCAtc2VlZCAxMjMgLWNvbnRlbnRfbGF5ZXJzIHJl
bHUwLHJlbHUzLHJlbHU3LHJlbHUxMiAtc3R5bGVfbGF5ZXJzIHJlbHUwLHJl
bHUzLHJlbHU3LHJlbHUxMiAtY29udGVudF93ZWlnaHQgMTAgLXN0eWxlX3dl
aWdodCAxMDAwIC1pbWFnZV9zaXplIDUxMiAtb3B0aW1pemVyIGFkYW0KYGBg
CgohW09wZW5DTCBOSU4gTW9kZWwgUGljYXNzbyBCcmFkIFBpdHRdKC9leGFt
cGxlcy9vdXRwdXRzL3BpdHRfcGljYXNzb19uaW5fb3BlbmNsLnBuZykKCgpU
byB1c2UgbXVsdGlwbGUgc3R5bGUgaW1hZ2VzLCBwYXNzIGEgY29tbWEtc2Vw
YXJhdGVkIGxpc3QgbGlrZSB0aGlzOgoKYC1zdHlsZV9pbWFnZSBzdGFycnlf
bmlnaHQuanBnLHRoZV9zY3JlYW0uanBnYC4KCk5vdGUgdGhhdCBwYXRocyB0
byBpbWFnZXMgc2hvdWxkIG5vdCBjb250YWluIHRoZSBgfmAgY2hhcmFjdGVy
IHRvIHJlcHJlc2VudCB5b3VyIGhvbWUgZGlyZWN0b3J5OyB5b3Ugc2hvdWxk
IGluc3RlYWQgdXNlIGEgcmVsYXRpdmUKcGF0aCBvciBhIGZ1bGwgYWJzb2x1
dGUgcGF0aC4KCioqT3B0aW9ucyoqOgoqIGAtaW1hZ2Vfc2l6ZWA6IE1heGlt
dW0gc2lkZSBsZW5ndGggKGluIHBpeGVscykgb2Ygb2YgdGhlIGdlbmVyYXRl
ZCBpbWFnZS4gRGVmYXVsdCBpcyA1MTIuCiogYC1zdHlsZV9ibGVuZF93ZWln
aHRzYDogVGhlIHdlaWdodCBmb3IgYmxlbmRpbmcgdGhlIHN0eWxlIG9mIG11
bHRpcGxlIHN0eWxlIGltYWdlcywgYXMgYQogIGNvbW1hLXNlcGFyYXRlZCBs
aXN0LCBzdWNoIGFzIGAtc3R5bGVfYmxlbmRfd2VpZ2h0cyAzLDdgLiBCeSBk
ZWZhdWx0IGFsbCBzdHlsZSBpbWFnZXMKICBhcmUgZXF1YWxseSB3ZWlnaHRl
ZC4KKiBgLWdwdWA6IFplcm8taW5kZXhlZCBJRCBvZiB0aGUgR1BVIHRvIHVz
ZTsgZm9yIENQVSBtb2RlIHNldCBgLWdwdWAgdG8gLTEuCgoqKk9wdGltaXph
dGlvbiBvcHRpb25zKio6CiogYC1jb250ZW50X3dlaWdodGA6IEhvdyBtdWNo
IHRvIHdlaWdodCB0aGUgY29udGVudCByZWNvbnN0cnVjdGlvbiB0ZXJtLiBE
ZWZhdWx0IGlzIDVlMC4KKiBgLXN0eWxlX3dlaWdodGA6IEhvdyBtdWNoIHRv
IHdlaWdodCB0aGUgc3R5bGUgcmVjb25zdHJ1Y3Rpb24gdGVybS4gRGVmYXVs
dCBpcyAxZTIuCiogYC10dl93ZWlnaHRgOiBXZWlnaHQgb2YgdG90YWwtdmFy
aWF0aW9uIChUVikgcmVndWxhcml6YXRpb247IHRoaXMgaGVscHMgdG8gc21v
b3RoIHRoZSBpbWFnZS4KICBEZWZhdWx0IGlzIDFlLTMuIFNldCB0byAwIHRv
IGRpc2FibGUgVFYgcmVndWxhcml6YXRpb24uCiogYC1udW1faXRlcmF0aW9u
c2A6IERlZmF1bHQgaXMgMTAwMC4KKiBgLWluaXRgOiBNZXRob2QgZm9yIGdl
bmVyYXRpbmcgdGhlIGdlbmVyYXRlZCBpbWFnZTsgb25lIG9mIGByYW5kb21g
IG9yIGBpbWFnZWAuCiAgRGVmYXVsdCBpcyBgcmFuZG9tYCB3aGljaCB1c2Vz
IGEgbm9pc2UgaW5pdGlhbGl6YXRpb24gYXMgaW4gdGhlIHBhcGVyOyBgaW1h
Z2VgCiAgaW5pdGlhbGl6ZXMgd2l0aCB0aGUgY29udGVudCBpbWFnZS4KKiBg
LW9wdGltaXplcmA6IFRoZSBvcHRpbWl6YXRpb24gYWxnb3JpdGhtIHRvIHVz
ZTsgZWl0aGVyIGBsYmZnc2Agb3IgYGFkYW1gOyBkZWZhdWx0IGlzIGBsYmZn
c2AuCiAgTC1CRkdTIHRlbmRzIHRvIGdpdmUgYmV0dGVyIHJlc3VsdHMsIGJ1
dCB1c2VzIG1vcmUgbWVtb3J5LiBTd2l0Y2hpbmcgdG8gQURBTSB3aWxsIHJl
ZHVjZSBtZW1vcnkgdXNhZ2U7CiAgd2hlbiB1c2luZyBBREFNIHlvdSB3aWxs
IHByb2JhYmx5IG5lZWQgdG8gcGxheSB3aXRoIG90aGVyIHBhcmFtZXRlcnMg
dG8gZ2V0IGdvb2QgcmVzdWx0cywgZXNwZWNpYWxseQogIHRoZSBzdHlsZSB3
ZWlnaHQsIGNvbnRlbnQgd2VpZ2h0LCBhbmQgbGVhcm5pbmcgcmF0ZTsgeW91
IG1heSBhbHNvIHdhbnQgdG8gbm9ybWFsaXplIGdyYWRpZW50cyB3aGVuCiAg
dXNpbmcgQURBTS4KKiBgLWxlYXJuaW5nX3JhdGVgOiBMZWFybmluZyByYXRl
IHRvIHVzZSB3aXRoIHRoZSBBREFNIG9wdGltaXplci4gRGVmYXVsdCBpcyAx
ZTEuCiogYC1ub3JtYWxpemVfZ3JhZGllbnRzYDogSWYgdGhpcyBmbGFnIGlz
IHByZXNlbnQsIHN0eWxlIGFuZCBjb250ZW50IGdyYWRpZW50cyBmcm9tIGVh
Y2ggbGF5ZXIgd2lsbCBiZQogIEwxIG5vcm1hbGl6ZWQuIElkZWEgZnJvbSBb
YW5kZXJzYmxsL25ldXJhbF9hcnRpc3RpY19zdHlsZV0oaHR0cHM6Ly9naXRo
dWIuY29tL2FuZGVyc2JsbC9uZXVyYWxfYXJ0aXN0aWNfc3R5bGUpLgoKKipP
dXRwdXQgb3B0aW9ucyoqOgoqIGAtb3V0cHV0X2ltYWdlYDogTmFtZSBvZiB0
aGUgb3V0cHV0IGltYWdlLiBEZWZhdWx0IGlzIGBvdXQucG5nYC4KKiBgLXBy
aW50X2l0ZXJgOiBQcmludCBwcm9ncmVzcyBldmVyeSBgcHJpbnRfaXRlcmAg
aXRlcmF0aW9ucy4gU2V0IHRvIDAgdG8gZGlzYWJsZSBwcmludGluZy4KKiBg
LXNhdmVfaXRlcmA6IFNhdmUgdGhlIGltYWdlIGV2ZXJ5IGBzYXZlX2l0ZXJg
IGl0ZXJhdGlvbnMuIFNldCB0byAwIHRvIGRpc2FibGUgc2F2aW5nIGludGVy
bWVkaWF0ZSByZXN1bHRzLgoKKipMYXllciBvcHRpb25zKio6CiogYC1jb250
ZW50X2xheWVyc2A6IENvbW1hLXNlcGFyYXRlZCBsaXN0IG9mIGxheWVyIG5h
bWVzIHRvIHVzZSBmb3IgY29udGVudCByZWNvbnN0cnVjdGlvbi4KICBEZWZh
dWx0IGlzIGByZWx1NF8yYC4KKiBgLXN0eWxlX2xheWVyc2A6IENvbW1hLXNl
cGFyYXRlZCBsaXN0IG9mIGxheWVyIG5hbWVzIHRvIHVzZSBmb3Igc3R5bGUg
cmVjb25zdHJ1Y3Rpb24uCiAgRGVmYXVsdCBpcyBgcmVsdTFfMSxyZWx1Ml8x
LHJlbHUzXzEscmVsdTRfMSxyZWx1NV8xYC4KCioqT3RoZXIgb3B0aW9ucyoq
OgoqIGAtc3R5bGVfc2NhbGVgOiBTY2FsZSBhdCB3aGljaCB0byBleHRyYWN0
IGZlYXR1cmVzIGZyb20gdGhlIHN0eWxlIGltYWdlLiBEZWZhdWx0IGlzIDEu
MC4KKiBgLW9yaWdpbmFsX2NvbG9yc2A6IElmIHlvdSBzZXQgdGhpcyB0byAx
LCB0aGVuIHRoZSBvdXRwdXQgaW1hZ2Ugd2lsbCBrZWVwIHRoZSBjb2xvcnMg
b2YgdGhlIGNvbnRlbnQgaW1hZ2UuCiogYC1wcm90b19maWxlYDogUGF0aCB0
byB0aGUgYGRlcGxveS50eHRgIGZpbGUgZm9yIHRoZSBWR0cgQ2FmZmUgbW9k
ZWwuCiogYC1tb2RlbF9maWxlYDogUGF0aCB0byB0aGUgYC5jYWZmZW1vZGVs
YCBmaWxlIGZvciB0aGUgVkdHIENhZmZlIG1vZGVsLgogIERlZmF1bHQgaXMg
dGhlIG9yaWdpbmFsIFZHRy0xOSBtb2RlbDsgeW91IGNhbiBhbHNvIHRyeSB0
aGUgbm9ybWFsaXplZCBWR0ctMTkgbW9kZWwgdXNlZCBpbiB0aGUgcGFwZXIu
CiogYC1wb29saW5nYDogVGhlIHR5cGUgb2YgcG9vbGluZyBsYXllcnMgdG8g
dXNlOyBvbmUgb2YgYG1heGAgb3IgYGF2Z2AuIERlZmF1bHQgaXMgYG1heGAu
CiAgVGhlIFZHRy0xOSBtb2RlbHMgdXNlcyBtYXggcG9vbGluZyBsYXllcnMs
IGJ1dCB0aGUgcGFwZXIgbWVudGlvbnMgdGhhdCByZXBsYWNpbmcgdGhlc2Ug
bGF5ZXJzIHdpdGggYXZlcmFnZQogIHBvb2xpbmcgbGF5ZXJzIGNhbiBpbXBy
b3ZlIHRoZSByZXN1bHRzLiBJIGhhdmVuJ3QgYmVlbiBhYmxlIHRvIGdldCBn
b29kIHJlc3VsdHMgdXNpbmcgYXZlcmFnZSBwb29saW5nLCBidXQKICB0aGUg
b3B0aW9uIGlzIGhlcmUuCiogYC1iYWNrZW5kYDogYG5uYCwgYGN1ZG5uYCwg
b3IgYGNsbm5gLiBEZWZhdWx0IGlzIGBubmAuIGBjdWRubmAgcmVxdWlyZXMK
ICBbY3Vkbm4udG9yY2hdKGh0dHBzOi8vZ2l0aHViLmNvbS9zb3VtaXRoL2N1
ZG5uLnRvcmNoKSBhbmQgbWF5IHJlZHVjZSBtZW1vcnkgdXNhZ2UuCiAgYGNs
bm5gIHJlcXVpcmVzIFtjbHRvcmNoXShodHRwczovL2dpdGh1Yi5jb20vaHVn
aHBlcmtpbnMvY2x0b3JjaCkgYW5kIFtjbG5uXShodHRwczovL2dpdGh1Yi5j
b20vaHVnaHBlcmtpbnMvY2xubikKKiBgLWN1ZG5uX2F1dG90dW5lYDogV2hl
biB1c2luZyB0aGUgY3VETk4gYmFja2VuZCwgcGFzcyB0aGlzIGZsYWcgdG8g
dXNlIHRoZSBidWlsdC1pbiBjdUROTiBhdXRvdHVuZXIgdG8gc2VsZWN0CiAg
dGhlIGJlc3QgY29udm9sdXRpb24gYWxnb3JpdGhtcyBmb3IgeW91ciBhcmNo
aXRlY3R1cmUuIFRoaXMgd2lsbCBtYWtlIHRoZSBmaXJzdCBpdGVyYXRpb24g
YSBiaXQgc2xvd2VyIGFuZCBjYW4KICB0YWtlIGEgYml0IG1vcmUgbWVtb3J5
LCBidXQgbWF5IHNpZ25pZmljYW50bHkgc3BlZWQgdXAgdGhlIGN1RE5OIGJh
Y2tlbmQuCgojIyBGcmVxdWVudGx5IEFza2VkIFF1ZXN0aW9ucwoKKipQcm9i
bGVtOioqIEdlbmVyYXRlZCBpbWFnZSBoYXMgc2F0dXJhdGlvbiBhcnRpZmFj
dHM6Cgo8aW1nIHNyYz0iaHR0cHM6Ly9jbG91ZC5naXRodWJ1c2VyY29udGVu
dC5jb20vYXNzZXRzLzEzMTA1NzAvOTY5NDY5MC9mYThlODc4Mi01MzI4LTEx
ZTUtOWM5MS0xMWY3YjIxNWFkMTkucG5nIj4KCioqU29sdXRpb246KiogVXBk
YXRlIHRoZSBgaW1hZ2VgIHBhY2tnZSB0byB0aGUgbGF0ZXN0IHZlcnNpb246
IGBsdWFyb2NrcyBpbnN0YWxsIGltYWdlYAoKKipQcm9ibGVtOioqIFJ1bm5p
bmcgd2l0aG91dCBhIEdQVSBnaXZlcyBhbiBlcnJvciBtZXNzYWdlIGNvbXBs
YWluaW5nIGFib3V0IGBjdXRvcmNoYCBub3QgZm91bmQKCioqU29sdXRpb246
KioKUGFzcyB0aGUgZmxhZyBgLWdwdSAtMWAgd2hlbiBydW5uaW5nIGluIENQ
VS1vbmx5IG1vZGUKCioqUHJvYmxlbToqKiBUaGUgcHJvZ3JhbSBydW5zIG91
dCBvZiBtZW1vcnkgYW5kIGRpZXMKCioqU29sdXRpb246KiogVHJ5IHJlZHVj
aW5nIHRoZSBpbWFnZSBzaXplOiBgLWltYWdlX3NpemUgMjU2YCAob3IgbG93
ZXIpLiBOb3RlIHRoYXQgZGlmZmVyZW50IGltYWdlIHNpemVzIHdpbGwgbGlr
ZWx5CnJlcXVpcmUgbm9uLWRlZmF1bHQgdmFsdWVzIGZvciBgLXN0eWxlX3dl
aWdodGAgYW5kIGAtY29udGVudF93ZWlnaHRgIGZvciBvcHRpbWFsIHJlc3Vs
dHMuCklmIHlvdSBhcmUgcnVubmluZyBvbiBhIEdQVSwgeW91IGNhbiBhbHNv
IHRyeSBydW5uaW5nIHdpdGggYC1iYWNrZW5kIGN1ZG5uYCB0byByZWR1Y2Ug
bWVtb3J5IHVzYWdlLgoKKipQcm9ibGVtOioqIEdldCB0aGUgZm9sbG93aW5n
IGVycm9yIG1lc3NhZ2U6CgpgbW9kZWxzL1ZHR19JTFNWUkNfMTlfbGF5ZXJz
X2RlcGxveS5wcm90b3R4dC5jcHUubHVhOjc6IGF0dGVtcHQgdG8gY2FsbCBt
ZXRob2QgJ2NlaWwnIChhIG5pbCB2YWx1ZSlgCgoqKlNvbHV0aW9uOioqIFVw
ZGF0ZSBgbm5gIHBhY2thZ2UgdG8gdGhlIGxhdGVzdCB2ZXJzaW9uOiBgbHVh
cm9ja3MgaW5zdGFsbCBubmAKCioqUHJvYmxlbToqKiBHZXQgYW4gZXJyb3Ig
bWVzc2FnZSBjb21wbGFpbmluZyBhYm91dCBgcGF0aHMuZXh0bmFtZWAKCioq
U29sdXRpb246KiogVXBkYXRlIGB0b3JjaC5wYXRoc2AgcGFja2FnZSB0byB0
aGUgbGF0ZXN0IHZlcnNpb246IGBsdWFyb2NrcyBpbnN0YWxsIHBhdGhzYAoK
KipQcm9ibGVtOioqIE5JTiBJbWFnZW5ldCBtb2RlbCBpcyBub3QgZ2l2aW5n
IGdvb2QgcmVzdWx0cy4gCgoqKlNvbHV0aW9uOioqIE1ha2Ugc3VyZSB0aGUg
Y29ycmVjdCBgLXByb3RvX2ZpbGVgIGlzIHNlbGVjdGVkLiBBbHNvIG1ha2Ug
c3VyZSB0aGUgY29ycmVjdCBwYXJhbWV0ZXJzIGZvciBgLWNvbnRlbnRfbGF5
ZXJzYCBhbmQgYC1zdHlsZV9sYXllcnNgIGFyZSBzZXQuIChTZWUgT3BlbkNM
IHVzYWdlIGV4YW1wbGUgYWJvdmUuKQoKKipQcm9ibGVtOioqIGAtYmFja2Vu
ZCBjdWRubmAgaXMgc2xvd2VyIHRoYW4gZGVmYXVsdCBOTiBiYWNrZW5kCgoq
KlNvbHV0aW9uOioqIEFkZCB0aGUgZmxhZyBgLWN1ZG5uX2F1dG90dW5lYDsg
dGhpcyB3aWxsIHVzZSB0aGUgYnVpbHQtaW4gY3VETk4gYXV0b3R1bmVyIHRv
IHNlbGVjdCB0aGUgYmVzdCBjb252b2x1dGlvbiBhbGdvcml0aG1zLgoKIyMg
TWVtb3J5IFVzYWdlCkJ5IGRlZmF1bHQsIGBuZXVyYWwtc3R5bGVgIHVzZXMg
dGhlIGBubmAgYmFja2VuZCBmb3IgY29udm9sdXRpb25zIGFuZCBMLUJGR1Mg
Zm9yIG9wdGltaXphdGlvbi4KVGhlc2UgZ2l2ZSBnb29kIHJlc3VsdHMsIGJ1
dCBjYW4gYm90aCB1c2UgYSBsb3Qgb2YgbWVtb3J5LiBZb3UgY2FuIHJlZHVj
ZSBtZW1vcnkgdXNhZ2Ugd2l0aCB0aGUgZm9sbG93aW5nOgoKKiAqKlVzZSBj
dUROTioqOiBBZGQgdGhlIGZsYWcgYC1iYWNrZW5kIGN1ZG5uYCB0byB1c2Ug
dGhlIGN1RE5OIGJhY2tlbmQuIFRoaXMgd2lsbCBvbmx5IHdvcmsgaW4gR1BV
IG1vZGUuCiogKipVc2UgQURBTSoqOiBBZGQgdGhlIGZsYWcgYC1vcHRpbWl6
ZXIgYWRhbWAgdG8gdXNlIEFEQU0gaW5zdGVhZCBvZiBMLUJGR1MuIFRoaXMg
c2hvdWxkIHNpZ25pZmljYW50bHkKICByZWR1Y2UgbWVtb3J5IHVzYWdlLCBi
dXQgbWF5IHJlcXVpcmUgdHVuaW5nIG9mIG90aGVyIHBhcmFtZXRlcnMgZm9y
IGdvb2QgcmVzdWx0czsgaW4gcGFydGljdWxhciB5b3Ugc2hvdWxkCiAgcGxh
eSB3aXRoIHRoZSBsZWFybmluZyByYXRlLCBjb250ZW50IHdlaWdodCwgc3R5
bGUgd2VpZ2h0LCBhbmQgYWxzbyBjb25zaWRlciB1c2luZyBncmFkaWVudCBu
b3JtYWxpemF0aW9uLgogIFRoaXMgc2hvdWxkIHdvcmsgaW4gYm90aCBDUFUg
YW5kIEdQVSBtb2Rlcy4KKiAqKlJlZHVjZSBpbWFnZSBzaXplKio6IElmIHRo
ZSBhYm92ZSB0cmlja3MgYXJlIG5vdCBlbm91Z2gsIHlvdSBjYW4gcmVkdWNl
IHRoZSBzaXplIG9mIHRoZSBnZW5lcmF0ZWQgaW1hZ2U7CiAgcGFzcyB0aGUg
ZmxhZyBgLWltYWdlX3NpemUgMjU2YCB0byBnZW5lcmF0ZSBhbiBpbWFnZSBh
dCBoYWxmIHRoZSBkZWZhdWx0IHNpemUuCiAgCldpdGggdGhlIGRlZmF1bHQg
c2V0dGluZ3MsIGBuZXVyYWwtc3R5bGVgIHVzZXMgYWJvdXQgMy41R0Igb2Yg
R1BVIG1lbW9yeSBvbiBteSBzeXN0ZW07CnN3aXRjaGluZyB0byBBREFNIGFu
ZCBjdUROTiByZWR1Y2VzIHRoZSBHUFUgbWVtb3J5IGZvb3RwcmludCB0byBh
Ym91dCAxR0IuCgojIyBTcGVlZApTcGVlZCBjYW4gdmFyeSBhIGxvdCBkZXBl
bmRpbmcgb24gdGhlIGJhY2tlbmQgYW5kIHRoZSBvcHRpbWl6ZXIuCkhlcmUg
YXJlIHNvbWUgdGltZXMgZm9yIHJ1bm5pbmcgNTAwIGl0ZXJhdGlvbnMgd2l0
aCBgLWltYWdlX3NpemU9NTEyYCBvbiBhIE1heHdlbGwgVGl0YW4gWCB3aXRo
IGRpZmZlcmVudCBzZXR0aW5nczoKKiBgLWJhY2tlbmQgbm4gLW9wdGltaXpl
ciBsYmZnc2A6IDYyIHNlY29uZHMKKiBgLWJhY2tlbmQgbm4gLW9wdGltaXpl
ciBhZGFtYDogNDkgc2Vjb25kcwoqIGAtYmFja2VuZCBjdWRubiAtb3B0aW1p
emVyIGxiZmdzYDogNzkgc2Vjb25kcwoqIGAtYmFja2VuZCBjdWRubiAtY3Vk
bm5fYXV0b3R1bmUgLW9wdGltaXplciBsYmZnc2A6IDU4IHNlY29uZHMKKiBg
LWJhY2tlbmQgY3Vkbm4gLWN1ZG5uX2F1dG90dW5lIC1vcHRpbWl6ZXIgYWRh
bWA6IDQ0IHNlY29uZHMKKiBgLWJhY2tlbmQgY2xubiAtb3B0aW1pemVyIGxi
ZmdzYDogMTY5IHNlY29uZHMKKiBgLWJhY2tlbmQgY2xubiAtb3B0aW1pemVy
IGFkYW1gOiAxMDYgc2Vjb25kcyAKCkhlcmUgYXJlIHRoZSBzYW1lIGJlbmNo
bWFya3Mgb24gYSBQYXNjYWwgVGl0YW4gWCB3aXRoIGN1RE5OIDUuMCBvbiBD
VURBIDguMCBSQzoKKiBgLWJhY2tlbmQgbm4gLW9wdGltaXplciBsYmZnc2A6
IDQzIHNlY29uZHMKKiBgLWJhY2tlbmQgbm4gLW9wdGltaXplciBhZGFtYDog
MzYgc2Vjb25kcwoqIGAtYmFja2VuZCBjdWRubiAtb3B0aW1pemVyIGxiZmdz
YDogNDUgc2Vjb25kcwoqIGAtYmFja2VuZCBjdWRubiAtY3Vkbm5fYXV0b3R1
bmUgLW9wdGltaXplciBsYmZnc2A6IDMwIHNlY29uZHMKKiBgLWJhY2tlbmQg
Y3Vkbm4gLWN1ZG5uX2F1dG90dW5lIC1vcHRpbWl6ZXIgYWRhbWA6IDIyIHNl
Y29uZHMKCiMjIE11bHRpLUdQVSBzY2FsaW5nCllvdSBjYW4gdXNlIG11bHRp
cGxlIEdQVXMgdG8gcHJvY2VzcyBpbWFnZXMgYXQgaGlnaGVyIHJlc29sdXRp
b25zOyBkaWZmZXJlbnQgbGF5ZXJzIG9mIHRoZSBuZXR3b3JrIHdpbGwgYmUK
Y29tcHV0ZWQgb24gZGlmZmVyZW50IEdQVXMuIFlvdSBjYW4gY29udHJvbCB3
aGljaCBHUFVzIGFyZSB1c2VkIHdpdGggdGhlIGAtZ3B1YCBmbGFnLCBhbmQg
eW91IGNhbiBjb250cm9sCmhvdyB0byBzcGxpdCBsYXllcnMgYWNyb3NzIEdQ
VXMgdXNpbmcgdGhlIGAtbXVsdGlncHVfc3RyYXRlZ3lgIGZsYWcuCgpGb3Ig
ZXhhbXBsZSBpbiBhIHNlcnZlciB3aXRoIGZvdXIgR1BVcywgeW91IGNhbiBn
aXZlIHRoZSBmbGFnIGAtZ3B1IDAsMSwyLDNgIHRvIHByb2Nlc3Mgb24gR1BV
cyAwLCAxLCAyLCBhbmQKMyBpbiB0aGF0IG9yZGVyOyBieSBhbHNvIGdpdmlu
ZyB0aGUgZmxhZyBgLW11bHRpZ3B1X3N0cmF0ZWd5IDMsNiwxMmAgeW91IGlu
ZGljYXRlIHRoYXQgdGhlIGZpcnN0IHR3byBsYXllcnMKc2hvdWxkIGJlIGNv
bXB1dGVkIG9uIEdQVSAwLCBsYXllcnMgMyB0byA1IHNob3VsZCBiZSBjb21w
dXRlZCBvbiBHUFUgMSwgbGF5ZXJzIDYgdG8gMTEgc2hvdWxkIGJlIGNvbXB1
dGVkIG9uCkdQVSAyLCBhbmQgdGhlIHJlbWFpbmluZyBsYXllcnMgc2hvdWxk
IGJlIGNvbXB1dGVkIG9uIEdQVSAzLiBZb3Ugd2lsbCBuZWVkIHRvIHR1bmUg
dGhlIGAtbXVsdGlncHVfc3RyYXRlZ3lgCmZvciB5b3VyIHNldHVwIGluIG9y
ZGVyIHRvIGFjaGlldmUgbWF4aW1hbCByZXNvbHV0aW9uLgoKV2UgY2FuIGFj
aGlldmUgdmVyeSBoaWdoIHF1YWxpdHkgcmVzdWx0cyBhdCBoaWdoIHJlc29s
dXRpb24gYnkgY29tYmluaW5nIG11bHRpLUdQVSBwcm9jZXNzaW5nIHdpdGgg
bXVsdGlzY2FsZQpnZW5lcmF0aW9uIGFzIGRlc2NyaWJlZCBpbiB0aGUgcGFw
ZXIKPGEgaHJlZj0iaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE2MTEuMDc4NjUi
PioqQ29udHJvbGxpbmcgUGVyY2VwdHVhbCBGYWN0b3JzIGluIE5ldXJhbCBT
dHlsZSBUcmFuc2ZlcioqPC9hPiBieSBMZW9uIEEuIEdhdHlzLCAKQWxleGFu
ZGVyIFMuIEVja2VyLCBNYXR0aGlhcyBCZXRoZ2UsIEFhcm9uIEhlcnR6bWFu
biBhbmQgRWxpIFNoZWNodG1hbi4KCkhlcmUgaXMgYSAzNjIwIHggMTkwNSBp
bWFnZSBnZW5lcmF0ZWQgb24gYSBzZXJ2ZXIgd2l0aCBmb3VyIFBhc2NhbCBU
aXRhbiBYIEdQVXM6Cgo8aW1nIHNyYz0iaHR0cHM6Ly9yYXcuZ2l0aHVidXNl
cmNvbnRlbnQuY29tL2pjam9obnNvbi9uZXVyYWwtc3R5bGUvbWFzdGVyL2V4
YW1wbGVzL291dHB1dHMvc3RhcnJ5X3N0YW5mb3JkX2JpZ2dlci5wbmciIGhl
aWdodD0iNDAwcHgiPgoKVGhlIHNjcmlwdCB1c2VkIHRvIGdlbmVyYXRlIHRo
aXMgaW1hZ2UgPGEgaHJlZj0nZXhhbXBsZXMvbXVsdGlncHVfc2NyaXB0cy9z
dGFycnlfc3RhbmZvcmQuc2gnPmNhbiBiZSBmb3VuZCBoZXJlPC9hPi4KCiMj
IEltcGxlbWVudGF0aW9uIGRldGFpbHMKSW1hZ2VzIGFyZSBpbml0aWFsaXpl
ZCB3aXRoIHdoaXRlIG5vaXNlIGFuZCBvcHRpbWl6ZWQgdXNpbmcgTC1CRkdT
LgoKV2UgcGVyZm9ybSBzdHlsZSByZWNvbnN0cnVjdGlvbnMgdXNpbmcgdGhl
IGBjb252MV8xYCwgYGNvbnYyXzFgLCBgY29udjNfMWAsIGBjb252NF8xYCwg
YW5kIGBjb252NV8xYCBsYXllcnMKYW5kIGNvbnRlbnQgcmVjb25zdHJ1Y3Rp
b25zIHVzaW5nIHRoZSBgY29udjRfMmAgbGF5ZXIuIEFzIGluIHRoZSBwYXBl
ciwgdGhlIGZpdmUgc3R5bGUgcmVjb25zdHJ1Y3Rpb24gbG9zc2VzIGhhdmUK
ZXF1YWwgd2VpZ2h0cy4KCiMjIENpdGF0aW9uCgpJZiB5b3UgZmluZCB0aGlz
IGNvZGUgdXNlZnVsIGZvciB5b3VyIHJlc2VhcmNoLCBwbGVhc2UgY2l0ZToK
CmBgYApAbWlzY3tKb2huc29uMjAxNSwKICBhdXRob3IgPSB7Sm9obnNvbiwg
SnVzdGlufSwKICB0aXRsZSA9IHtuZXVyYWwtc3R5bGV9LAogIHllYXIgPSB7
MjAxNX0sCiAgcHVibGlzaGVyID0ge0dpdEh1Yn0sCiAgam91cm5hbCA9IHtH
aXRIdWIgcmVwb3NpdG9yeX0sCiAgaG93cHVibGlzaGVkID0ge1x1cmx7aHR0
cHM6Ly9naXRodWIuY29tL2pjam9obnNvbi9uZXVyYWwtc3R5bGV9fSwKfQpg
YGAK
",,17190,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
