name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'nedb',9795883,"b'The JavaScript Database, for Node.js, nw.js, electron and the browser'",b'JavaScript',161,10618,,267,False,b'https://api.github.com/repos/louischatriot/nedb/forks',"PGltZyBzcmM9Imh0dHA6Ly9pLmltZ3VyLmNvbS85TzF4SEZiLnBuZyIgc3R5
bGU9IndpZHRoOiAyNSU7IGhlaWdodDogMjUlOyBmbG9hdDogbGVmdDsiPgoK
IyMgVGhlIEphdmFTY3JpcHQgRGF0YWJhc2UKCioqRW1iZWRkZWQgcGVyc2lz
dGVudCBvciBpbiBtZW1vcnkgZGF0YWJhc2UgZm9yIE5vZGUuanMsIG53Lmpz
LCBFbGVjdHJvbiBhbmQgYnJvd3NlcnMsIDEwMCUgSmF2YVNjcmlwdCwgbm8g
YmluYXJ5IGRlcGVuZGVuY3kqKi4gQVBJIGlzIGEgc3Vic2V0IG9mIE1vbmdv
REIncyBhbmQgaXQncyA8YSBocmVmPSIjc3BlZWQiPnBsZW50eSBmYXN0PC9h
Pi4KCioqSU1QT1JUQU5UIE5PVEUqKjogUGxlYXNlIGRvbid0IHN1Ym1pdCBp
c3N1ZXMgZm9yIHF1ZXN0aW9ucyByZWdhcmRpbmcgeW91ciBjb2RlLiBPbmx5
IGFjdHVhbCBidWdzIG9yIGZlYXR1cmUgcmVxdWVzdHMgd2lsbCBiZSBhbnN3
ZXJlZCwgYWxsIG90aGVycyB3aWxsIGJlIGNsb3NlZCB3aXRob3V0IGNvbW1l
bnQuIEFsc28sIHBsZWFzZSBmb2xsb3cgdGhlIDxhIGhyZWY9IiNidWctcmVw
b3J0aW5nLWd1aWRlbGluZXMiPmJ1ZyByZXBvcnRpbmcgZ3VpZGVsaW5lczwv
YT4gYW5kIGNoZWNrIHRoZSA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20v
bG91aXNjaGF0cmlvdC9uZWRiL3dpa2kvQ2hhbmdlLWxvZyIgdGFyZ2V0PSJf
YmxhbmsiPmNoYW5nZSBsb2c8L2E+IGJlZm9yZSBzdWJtaXR0aW5nIGFuIGFs
cmVhZHkgZml4ZWQgYnVnIDopCgojIyBTdXBwb3J0IE5lREIgZGV2ZWxvcG1l
bnQKCjxpbWcgc3JjPSJodHRwOi8vaS5pbWd1ci5jb20vbXB3aTRsZi5qcGci
PgoKTm8gdGltZSB0byA8YSBocmVmPSIjcHVsbC1yZXF1ZXN0cyI+aGVscCBv
dXQ8L2E+PyBZb3UgY2FuIHN1cHBvcnQgTmVEQiBkZXZlbG9wbWVudCBieSBz
ZW5kaW5nIG1vbmV5IG9yIGJpdGNvaW5zIQoKTW9uZXk6IFshW0RvbmF0ZSB0
byBhdXRob3JdKGh0dHBzOi8vd3d3LnBheXBhbG9iamVjdHMuY29tL2VuX1VT
L2kvYnRuL2J0bl9kb25hdGVfU00uZ2lmKV0oaHR0cHM6Ly93d3cucGF5cGFs
LmNvbS9jZ2ktYmluL3dlYnNjcj9jbWQ9X2RvbmF0aW9ucyZidXNpbmVzcz1s
b3VpcyUyZWNoYXRyaW90JTQwZ21haWwlMmVjb20mbGM9VVMmY3VycmVuY3lf
Y29kZT1FVVImYm49UFAlMmREb25hdGlvbnNCRiUzYWJ0bl9kb25hdGVfTEcl
MmVnaWYlM2FOb25Ib3N0ZWRHdWVzdCkKCkJpdGNvaW4gYWRkcmVzczogMWRE
WkxuV3BCYm9kUGlOOHNpenpZcmdhejVpYWhGeWIxCgoKIyMgSW5zdGFsbGF0
aW9uLCB0ZXN0cwpNb2R1bGUgbmFtZSBvbiBucG0gYW5kIGJvd2VyIGlzIGBu
ZWRiYC4KCmBgYApucG0gaW5zdGFsbCBuZWRiIC0tc2F2ZSAgICAjIFB1dCBs
YXRlc3QgdmVyc2lvbiBpbiB5b3VyIHBhY2thZ2UuanNvbgpucG0gdGVzdCAg
ICAgICAgICAgICAgICAgICAjIFlvdSdsbCBuZWVkIHRoZSBkZXYgZGVwZW5k
ZW5jaWVzIHRvIGxhdW5jaCB0ZXN0cwpib3dlciBpbnN0YWxsIG5lZGIgICAg
ICAgICAjIEZvciB0aGUgYnJvd3NlciB2ZXJzaW9ucywgd2hpY2ggd2lsbCBi
ZSBpbiBicm93c2VyLXZlcnNpb24vb3V0CmBgYAoKIyMgQVBJCkl0IGlzIGEg
c3Vic2V0IG9mIE1vbmdvREIncyBBUEkgKHRoZSBtb3N0IHVzZWQgb3BlcmF0
aW9ucykuCgoqIDxhIGhyZWY9IiNjcmVhdGluZ2xvYWRpbmctYS1kYXRhYmFz
ZSI+Q3JlYXRpbmcvbG9hZGluZyBhIGRhdGFiYXNlPC9hPgoqIDxhIGhyZWY9
IiNwZXJzaXN0ZW5jZSI+UGVyc2lzdGVuY2U8L2E+CiogPGEgaHJlZj0iI2lu
c2VydGluZy1kb2N1bWVudHMiPkluc2VydGluZyBkb2N1bWVudHM8L2E+Ciog
PGEgaHJlZj0iI2ZpbmRpbmctZG9jdW1lbnRzIj5GaW5kaW5nIGRvY3VtZW50
czwvYT4KICAqIDxhIGhyZWY9IiNiYXNpYy1xdWVyeWluZyI+QmFzaWMgUXVl
cnlpbmc8L2E+CiAgKiA8YSBocmVmPSIjb3BlcmF0b3JzLWx0LWx0ZS1ndC1n
dGUtaW4tbmluLW5lLWV4aXN0cy1yZWdleCI+T3BlcmF0b3JzICgkbHQsICRs
dGUsICRndCwgJGd0ZSwgJGluLCAkbmluLCAkbmUsICRleGlzdHMsICRyZWdl
eCk8L2E+CiAgKiA8YSBocmVmPSIjYXJyYXktZmllbGRzIj5BcnJheSBmaWVs
ZHM8L2E+CiAgKiA8YSBocmVmPSIjbG9naWNhbC1vcGVyYXRvcnMtb3ItYW5k
LW5vdC13aGVyZSI+TG9naWNhbCBvcGVyYXRvcnMgJG9yLCAkYW5kLCAkbm90
LCAkd2hlcmU8L2E+CiAgKiA8YSBocmVmPSIjc29ydGluZy1hbmQtcGFnaW5h
dGluZyI+U29ydGluZyBhbmQgcGFnaW5hdGluZzwvYT4KICAqIDxhIGhyZWY9
IiNwcm9qZWN0aW9ucyI+UHJvamVjdGlvbnM8L2E+CiogPGEgaHJlZj0iI2Nv
dW50aW5nLWRvY3VtZW50cyI+Q291bnRpbmcgZG9jdW1lbnRzPC9hPgoqIDxh
IGhyZWY9IiN1cGRhdGluZy1kb2N1bWVudHMiPlVwZGF0aW5nIGRvY3VtZW50
czwvYT4KKiA8YSBocmVmPSIjcmVtb3ZpbmctZG9jdW1lbnRzIj5SZW1vdmlu
ZyBkb2N1bWVudHM8L2E+CiogPGEgaHJlZj0iI2luZGV4aW5nIj5JbmRleGlu
ZzwvYT4KKiA8YSBocmVmPSIjYnJvd3Nlci12ZXJzaW9uIj5Ccm93c2VyIHZl
cnNpb248L2E+CgojIyMgQ3JlYXRpbmcvbG9hZGluZyBhIGRhdGFiYXNlCllv
dSBjYW4gdXNlIE5lREIgYXMgYW4gaW4tbWVtb3J5IG9ubHkgZGF0YXN0b3Jl
IG9yIGFzIGEgcGVyc2lzdGVudCBkYXRhc3RvcmUuIE9uZSBkYXRhc3RvcmUg
aXMgdGhlIGVxdWl2YWxlbnQgb2YgYSBNb25nb0RCIGNvbGxlY3Rpb24uIFRo
ZSBjb25zdHJ1Y3RvciBpcyB1c2VkIGFzIGZvbGxvd3MgYG5ldyBEYXRhc3Rv
cmUob3B0aW9ucylgIHdoZXJlIGBvcHRpb25zYCBpcyBhbiBvYmplY3Qgd2l0
aCB0aGUgZm9sbG93aW5nIGZpZWxkczoKCiogYGZpbGVuYW1lYCAob3B0aW9u
YWwpOiBwYXRoIHRvIHRoZSBmaWxlIHdoZXJlIHRoZSBkYXRhIGlzIHBlcnNp
c3RlZC4gSWYgbGVmdCBibGFuaywgdGhlIGRhdGFzdG9yZSBpcyBhdXRvbWF0
aWNhbGx5IGNvbnNpZGVyZWQgaW4tbWVtb3J5IG9ubHkuIEl0IGNhbm5vdCBl
bmQgd2l0aCBhIGB+YCB3aGljaCBpcyB1c2VkIGluIHRoZSB0ZW1wb3Jhcnkg
ZmlsZXMgTmVEQiB1c2VzIHRvIHBlcmZvcm0gY3Jhc2gtc2FmZSB3cml0ZXMu
CiogYGluTWVtb3J5T25seWAgKG9wdGlvbmFsLCBkZWZhdWx0cyB0byBgZmFs
c2VgKTogYXMgdGhlIG5hbWUgaW1wbGllcy4KKiBgdGltZXN0YW1wRGF0YWAg
KG9wdGlvbmFsLCBkZWZhdWx0cyB0byBgZmFsc2VgKTogdGltZXN0YW1wIHRo
ZSBpbnNlcnRpb24gYW5kIGxhc3QgdXBkYXRlIG9mIGFsbCBkb2N1bWVudHMs
IHdpdGggdGhlIGZpZWxkcyBgY3JlYXRlZEF0YCBhbmQgYHVwZGF0ZWRBdGAu
IFVzZXItc3BlY2lmaWVkIHZhbHVlcyBvdmVycmlkZSBhdXRvbWF0aWMgZ2Vu
ZXJhdGlvbiwgdXN1YWxseSB1c2VmdWwgZm9yIHRlc3RpbmcuCiogYGF1dG9s
b2FkYCAob3B0aW9uYWwsIGRlZmF1bHRzIHRvIGBmYWxzZWApOiBpZiB1c2Vk
LCB0aGUgZGF0YWJhc2Ugd2lsbCBhdXRvbWF0aWNhbGx5IGJlIGxvYWRlZCBm
cm9tIHRoZSBkYXRhZmlsZSB1cG9uIGNyZWF0aW9uICh5b3UgZG9uJ3QgbmVl
ZCB0byBjYWxsIGBsb2FkRGF0YWJhc2VgKS4gQW55IGNvbW1hbmQgaXNzdWVk
IGJlZm9yZSBsb2FkIGlzIGZpbmlzaGVkIGlzIGJ1ZmZlcmVkIGFuZCB3aWxs
IGJlIGV4ZWN1dGVkIHdoZW4gbG9hZCBpcyBkb25lLgoqIGBvbmxvYWRgIChv
cHRpb25hbCk6IGlmIHlvdSB1c2UgYXV0b2xvYWRpbmcsIHRoaXMgaXMgdGhl
IGhhbmRsZXIgY2FsbGVkIGFmdGVyIHRoZSBgbG9hZERhdGFiYXNlYC4gSXQg
dGFrZXMgb25lIGBlcnJvcmAgYXJndW1lbnQuIElmIHlvdSB1c2UgYXV0b2xv
YWRpbmcgd2l0aG91dCBzcGVjaWZ5aW5nIHRoaXMgaGFuZGxlciwgYW5kIGFu
IGVycm9yIGhhcHBlbnMgZHVyaW5nIGxvYWQsIGFuIGVycm9yIHdpbGwgYmUg
dGhyb3duLgoqIGBhZnRlclNlcmlhbGl6YXRpb25gIChvcHRpb25hbCk6IGhv
b2sgeW91IGNhbiB1c2UgdG8gdHJhbnNmb3JtIGRhdGEgYWZ0ZXIgaXQgd2Fz
IHNlcmlhbGl6ZWQgYW5kIGJlZm9yZSBpdCBpcyB3cml0dGVuIHRvIGRpc2su
IENhbiBiZSB1c2VkIGZvciBleGFtcGxlIHRvIGVuY3J5cHQgZGF0YSBiZWZv
cmUgd3JpdGluZyBkYXRhYmFzZSB0byBkaXNrLiBUaGlzIGZ1bmN0aW9uIHRh
a2VzIGEgc3RyaW5nIGFzIHBhcmFtZXRlciAob25lIGxpbmUgb2YgYW4gTmVE
QiBkYXRhIGZpbGUpIGFuZCBvdXRwdXRzIHRoZSB0cmFuc2Zvcm1lZCBzdHJp
bmcsICoqd2hpY2ggbXVzdCBhYnNvbHV0ZWx5IG5vdCBjb250YWluIGEgYFxu
YCBjaGFyYWN0ZXIqKiAob3IgZGF0YSB3aWxsIGJlIGxvc3QpLgoqIGBiZWZv
cmVEZXNlcmlhbGl6YXRpb25gIChvcHRpb25hbCk6IGludmVyc2Ugb2YgYGFm
dGVyU2VyaWFsaXphdGlvbmAuIE1ha2Ugc3VyZSB0byBpbmNsdWRlIGJvdGgg
YW5kIG5vdCBqdXN0IG9uZSBvciB5b3UgcmlzayBkYXRhIGxvc3MuIEZvciB0
aGUgc2FtZSByZWFzb24sIG1ha2Ugc3VyZSBib3RoIGZ1bmN0aW9ucyBhcmUg
aW52ZXJzZXMgb2Ygb25lIGFub3RoZXIuIFNvbWUgZmFpbHNhZmUgbWVjaGFu
aXNtcyBhcmUgaW4gcGxhY2UgdG8gcHJldmVudCBkYXRhIGxvc3MgaWYgeW91
IG1pc3VzZSB0aGUgc2VyaWFsaXphdGlvbiBob29rczogTmVEQiBjaGVja3Mg
dGhhdCBuZXZlciBvbmUgaXMgZGVjbGFyZWQgd2l0aG91dCB0aGUgb3RoZXIs
IGFuZCBjaGVja3MgdGhhdCB0aGV5IGFyZSByZXZlcnNlIG9mIG9uZSBhbm90
aGVyIGJ5IHRlc3Rpbmcgb24gcmFuZG9tIHN0cmluZ3Mgb2YgdmFyaW91cyBs
ZW5ndGhzLiBJbiBhZGRpdGlvbiwgaWYgdG9vIG11Y2ggZGF0YSBpcyBkZXRl
Y3RlZCBhcyBjb3JydXB0LCBOZURCIHdpbGwgcmVmdXNlIHRvIHN0YXJ0IGFz
IGl0IGNvdWxkIG1lYW4geW91J3JlIG5vdCB1c2luZyB0aGUgZGVzZXJpYWxp
emF0aW9uIGhvb2sgY29ycmVzcG9uZGluZyB0byB0aGUgc2VyaWFsaXphdGlv
biBob29rIHVzZWQgYmVmb3JlIChzZWUgYmVsb3cpLgoqIGBjb3JydXB0QWxl
cnRUaHJlc2hvbGRgIChvcHRpb25hbCk6IGJldHdlZW4gMCBhbmQgMSwgZGVm
YXVsdHMgdG8gMTAlLiBOZURCIHdpbGwgcmVmdXNlIHRvIHN0YXJ0IGlmIG1v
cmUgdGhhbiB0aGlzIHBlcmNlbnRhZ2Ugb2YgdGhlIGRhdGFmaWxlIGlzIGNv
cnJ1cHQuIDAgbWVhbnMgeW91IGRvbid0IHRvbGVyYXRlIGFueSBjb3JydXB0
aW9uLCAxIG1lYW5zIHlvdSBkb24ndCBjYXJlLgoqIGBjb21wYXJlU3RyaW5n
c2AgKG9wdGlvbmFsKTogZnVuY3Rpb24gY29tcGFyZVN0cmluZ3MoYSwgYikg
Y29tcGFyZXMKICBzdHJpbmdzIGEgYW5kIGIgYW5kIHJldHVybiAtMSwgMCBv
ciAxLiBJZiBzcGVjaWZpZWQsIGl0IG92ZXJyaWRlcwpkZWZhdWx0IHN0cmlu
ZyBjb21wYXJpc29uIHdoaWNoIGlzIG5vdCB3ZWxsIGFkYXB0ZWQgdG8gbm9u
LVVTIGNoYXJhY3RlcnMKaW4gcGFydGljdWxhciBhY2NlbnRlZCBsZXR0ZXJz
LiBOYXRpdmUgYGxvY2FsQ29tcGFyZWAgd2lsbCBtb3N0IG9mIHRoZQp0aW1l
IGJlIHRoZSByaWdodCBjaG9pY2UKKiBgbm9kZVdlYmtpdEFwcE5hbWVgIChv
cHRpb25hbCwgKipERVBSRUNBVEVEKiopOiBpZiB5b3UgYXJlIHVzaW5nIE5l
REIgZnJvbSB3aGl0aGluIGEgTm9kZSBXZWJraXQgYXBwLCBzcGVjaWZ5IGl0
cyBuYW1lICh0aGUgc2FtZSBvbmUgeW91IHVzZSBpbiB0aGUgYHBhY2thZ2Uu
anNvbmApIGluIHRoaXMgZmllbGQgYW5kIHRoZSBgZmlsZW5hbWVgIHdpbGwg
YmUgcmVsYXRpdmUgdG8gdGhlIGRpcmVjdG9yeSBOb2RlIFdlYmtpdCB1c2Vz
IHRvIHN0b3JlIHRoZSByZXN0IG9mIHRoZSBhcHBsaWNhdGlvbidzIGRhdGEg
KGxvY2FsIHN0b3JhZ2UgZXRjLikuIEl0IHdvcmtzIG9uIExpbnV4LCBPUyBY
IGFuZCBXaW5kb3dzLiBOb3cgdGhhdCB5b3UgY2FuIHVzZSBgcmVxdWlyZSgn
bncuZ3VpJykuQXBwLmRhdGFQYXRoYCBpbiBOb2RlIFdlYmtpdCB0byBnZXQg
dGhlIHBhdGggdG8gdGhlIGRhdGEgZGlyZWN0b3J5IGZvciB5b3VyIGFwcGxp
Y2F0aW9uLCB5b3Ugc2hvdWxkIG5vdCB1c2UgdGhpcyBvcHRpb24gYW55bW9y
ZSBhbmQgaXQgd2lsbCBiZSByZW1vdmVkLgoKSWYgeW91IHVzZSBhIHBlcnNp
c3RlbnQgZGF0YXN0b3JlIHdpdGhvdXQgdGhlIGBhdXRvbG9hZGAgb3B0aW9u
LCB5b3UgbmVlZCB0byBjYWxsIGBsb2FkRGF0YWJhc2VgIG1hbnVhbGx5LgpU
aGlzIGZ1bmN0aW9uIGZldGNoZXMgdGhlIGRhdGEgZnJvbSBkYXRhZmlsZSBh
bmQgcHJlcGFyZXMgdGhlIGRhdGFiYXNlLiAqKkRvbid0IGZvcmdldCBpdCEq
KiBJZiB5b3UgdXNlIGEKcGVyc2lzdGVudCBkYXRhc3RvcmUsIG5vIGNvbW1h
bmQgKGluc2VydCwgZmluZCwgdXBkYXRlLCByZW1vdmUpIHdpbGwgYmUgZXhl
Y3V0ZWQgYmVmb3JlIGBsb2FkRGF0YWJhc2VgCmlzIGNhbGxlZCwgc28gbWFr
ZSBzdXJlIHRvIGNhbGwgaXQgeW91cnNlbGYgb3IgdXNlIHRoZSBgYXV0b2xv
YWRgIG9wdGlvbi4KCkFsc28sIGlmIGBsb2FkRGF0YWJhc2VgIGZhaWxzLCBh
bGwgY29tbWFuZHMgcmVnaXN0ZXJlZCB0byB0aGUgZXhlY3V0b3IgYWZ0ZXJ3
YXJkcyB3aWxsIG5vdCBiZSBleGVjdXRlZC4gVGhleSB3aWxsIGJlIHJlZ2lz
dGVyZWQgYW5kIGV4ZWN1dGVkLCBpbiBzZXF1ZW5jZSwgb25seSBhZnRlciBh
IHN1Y2Nlc3NmdWwgYGxvYWREYXRhYmFzZWAuCgpgYGBqYXZhc2NyaXB0Ci8v
IFR5cGUgMTogSW4tbWVtb3J5IG9ubHkgZGF0YXN0b3JlIChubyBuZWVkIHRv
IGxvYWQgdGhlIGRhdGFiYXNlKQp2YXIgRGF0YXN0b3JlID0gcmVxdWlyZSgn
bmVkYicpCiAgLCBkYiA9IG5ldyBEYXRhc3RvcmUoKTsKCgovLyBUeXBlIDI6
IFBlcnNpc3RlbnQgZGF0YXN0b3JlIHdpdGggbWFudWFsIGxvYWRpbmcKdmFy
IERhdGFzdG9yZSA9IHJlcXVpcmUoJ25lZGInKQogICwgZGIgPSBuZXcgRGF0
YXN0b3JlKHsgZmlsZW5hbWU6ICdwYXRoL3RvL2RhdGFmaWxlJyB9KTsKZGIu
bG9hZERhdGFiYXNlKGZ1bmN0aW9uIChlcnIpIHsgICAgLy8gQ2FsbGJhY2sg
aXMgb3B0aW9uYWwKICAvLyBOb3cgY29tbWFuZHMgd2lsbCBiZSBleGVjdXRl
ZAp9KTsKCgovLyBUeXBlIDM6IFBlcnNpc3RlbnQgZGF0YXN0b3JlIHdpdGgg
YXV0b21hdGljIGxvYWRpbmcKdmFyIERhdGFzdG9yZSA9IHJlcXVpcmUoJ25l
ZGInKQogICwgZGIgPSBuZXcgRGF0YXN0b3JlKHsgZmlsZW5hbWU6ICdwYXRo
L3RvL2RhdGFmaWxlJywgYXV0b2xvYWQ6IHRydWUgfSk7Ci8vIFlvdSBjYW4g
aXNzdWUgY29tbWFuZHMgcmlnaHQgYXdheQoKCi8vIFR5cGUgNDogUGVyc2lz
dGVudCBkYXRhc3RvcmUgZm9yIGEgTm9kZSBXZWJraXQgYXBwIGNhbGxlZCAn
bnd0ZXN0JwovLyBGb3IgZXhhbXBsZSBvbiBMaW51eCwgdGhlIGRhdGFmaWxl
IHdpbGwgYmUgfi8uY29uZmlnL253dGVzdC9uZWRiLWRhdGEvc29tZXRoaW5n
LmRiCnZhciBEYXRhc3RvcmUgPSByZXF1aXJlKCduZWRiJykKICAsIHBhdGgg
PSByZXF1aXJlKCdwYXRoJykKICAsIGRiID0gbmV3IERhdGFzdG9yZSh7IGZp
bGVuYW1lOiBwYXRoLmpvaW4ocmVxdWlyZSgnbncuZ3VpJykuQXBwLmRhdGFQ
YXRoLCAnc29tZXRoaW5nLmRiJykgfSk7CgoKLy8gT2YgY291cnNlIHlvdSBj
YW4gY3JlYXRlIG11bHRpcGxlIGRhdGFzdG9yZXMgaWYgeW91IG5lZWQgc2V2
ZXJhbAovLyBjb2xsZWN0aW9ucy4gSW4gdGhpcyBjYXNlIGl0J3MgdXN1YWxs
eSBhIGdvb2QgaWRlYSB0byB1c2UgYXV0b2xvYWQgZm9yIGFsbCBjb2xsZWN0
aW9ucy4KZGIgPSB7fTsKZGIudXNlcnMgPSBuZXcgRGF0YXN0b3JlKCdwYXRo
L3RvL3VzZXJzLmRiJyk7CmRiLnJvYm90cyA9IG5ldyBEYXRhc3RvcmUoJ3Bh
dGgvdG8vcm9ib3RzLmRiJyk7CgovLyBZb3UgbmVlZCB0byBsb2FkIGVhY2gg
ZGF0YWJhc2UgKGhlcmUgd2UgZG8gaXQgYXN5bmNocm9ub3VzbHkpCmRiLnVz
ZXJzLmxvYWREYXRhYmFzZSgpOwpkYi5yb2JvdHMubG9hZERhdGFiYXNlKCk7
CmBgYAoKIyMjIFBlcnNpc3RlbmNlClVuZGVyIHRoZSBob29kLCBOZURCJ3Mg
cGVyc2lzdGVuY2UgdXNlcyBhbiBhcHBlbmQtb25seSBmb3JtYXQsIG1lYW5p
bmcgdGhhdCBhbGwgdXBkYXRlcyBhbmQgZGVsZXRlcyBhY3R1YWxseSByZXN1
bHQgaW4gbGluZXMgYWRkZWQgYXQgdGhlIGVuZCBvZiB0aGUgZGF0YWZpbGUs
IGZvciBwZXJmb3JtYW5jZSByZWFzb25zLiBUaGUgZGF0YWJhc2UgaXMgYXV0
b21hdGljYWxseSBjb21wYWN0ZWQgKGkuZS4gcHV0IGJhY2sgaW4gdGhlIG9u
ZS1saW5lLXBlci1kb2N1bWVudCBmb3JtYXQpIGV2ZXJ5IHRpbWUgeW91IGxv
YWQgZWFjaCBkYXRhYmFzZSB3aXRoaW4geW91ciBhcHBsaWNhdGlvbi4KCllv
dSBjYW4gbWFudWFsbHkgY2FsbCB0aGUgY29tcGFjdGlvbiBmdW5jdGlvbiB3
aXRoIGB5b3VyRGF0YWJhc2UucGVyc2lzdGVuY2UuY29tcGFjdERhdGFmaWxl
YCB3aGljaCB0YWtlcyBubyBhcmd1bWVudC4gSXQgcXVldWVzIGEgY29tcGFj
dGlvbiBvZiB0aGUgZGF0YWZpbGUgaW4gdGhlIGV4ZWN1dG9yLCB0byBiZSBl
eGVjdXRlZCBzZXF1ZW50aWFsbHkgYWZ0ZXIgYWxsIHBlbmRpbmcgb3BlcmF0
aW9ucy4gVGhlIGRhdGFzdG9yZSB3aWxsIGZpcmUgYSBgY29tcGFjdGlvbi5k
b25lYCBldmVudCBvbmNlIGNvbXBhY3Rpb24gaXMgZmluaXNoZWQuCgpZb3Ug
Y2FuIGFsc28gc2V0IGF1dG9tYXRpYyBjb21wYWN0aW9uIGF0IHJlZ3VsYXIg
aW50ZXJ2YWxzIHdpdGggYHlvdXJEYXRhYmFzZS5wZXJzaXN0ZW5jZS5zZXRB
dXRvY29tcGFjdGlvbkludGVydmFsKGludGVydmFsKWAsIGBpbnRlcnZhbGAg
aW4gbWlsbGlzZWNvbmRzIChhIG1pbmltdW0gb2YgNXMgaXMgZW5mb3JjZWQp
LCBhbmQgc3RvcCBhdXRvbWF0aWMgY29tcGFjdGlvbiB3aXRoIGB5b3VyRGF0
YWJhc2UucGVyc2lzdGVuY2Uuc3RvcEF1dG9jb21wYWN0aW9uKClgLgoKS2Vl
cCBpbiBtaW5kIHRoYXQgY29tcGFjdGlvbiB0YWtlcyBhIGJpdCBvZiB0aW1l
IChub3QgdG9vIG11Y2g6IDEzMG1zIGZvciA1MGsgcmVjb3JkcyBvbiBhIHR5
cGljYWwgZGV2ZWxvcG1lbnQgbWFjaGluZSkgYW5kIG5vIG90aGVyIG9wZXJh
dGlvbiBjYW4gaGFwcGVuIHdoZW4gaXQgZG9lcywgc28gbW9zdCBwcm9qZWN0
cyBhY3R1YWxseSBkb24ndCBuZWVkIHRvIHVzZSBpdC4KCkNvbXBhY3Rpb24g
d2lsbCBhbHNvIGltbWVkaWF0ZWx5IHJlbW92ZSBhbnkgZG9jdW1lbnRzIHdo
b3NlIGRhdGEgbGluZSBoYXMgYmVjb21lIGNvcnJ1cHRlZCwgYXNzdW1pbmcg
dGhhdCB0aGUgdG90YWwgcGVyY2VudGFnZSBvZiBhbGwgY29ycnVwdGVkIGRv
Y3VtZW50cyBpbiB0aGF0IGRhdGFiYXNlIHN0aWxsIGZhbGxzIGJlbG93IHRo
ZSBzcGVjaWZpZWQgYGNvcnJ1cHRBbGVydFRocmVzaG9sZGAgb3B0aW9uJ3Mg
dmFsdWUuCgpEdXJhYmlsaXR5IHdvcmtzIHNpbWlsYXJseSB0byBtYWpvciBk
YXRhYmFzZXM6IGNvbXBhY3Rpb24gZm9yY2VzIHRoZSBPUyB0byBwaHlzaWNh
bGx5IGZsdXNoIGRhdGEgdG8gZGlzaywgd2hpbGUgYXBwZW5kcyB0byB0aGUg
ZGF0YSBmaWxlIGRvIG5vdCAodGhlIE9TIGlzIHJlc3BvbnNpYmxlIGZvciBm
bHVzaGluZyB0aGUgZGF0YSkuIFRoYXQgZ3VhcmFudGVlcyB0aGF0IGEgc2Vy
dmVyIGNyYXNoIGNhbiBuZXZlciBjYXVzZSBjb21wbGV0ZSBkYXRhIGxvc3Ms
IHdoaWxlIHByZXNlcnZpbmcgcGVyZm9ybWFuY2UuIFRoZSB3b3JzdCB0aGF0
IGNhbiBoYXBwZW4gaXMgYSBjcmFzaCBiZXR3ZWVuIHR3byBzeW5jcywgY2F1
c2luZyBhIGxvc3Mgb2YgYWxsIGRhdGEgYmV0d2VlbiB0aGUgdHdvIHN5bmNz
LiBVc3VhbGx5IHN5bmNzIGFyZSAzMCBzZWNvbmRzIGFwcGFydCBzbyB0aGF0
J3MgYXQgbW9zdCAzMCBzZWNvbmRzIG9mIGRhdGEuIDxhIGhyZWY9Imh0dHA6
Ly9vbGRibG9nLmFudGlyZXouY29tL3Bvc3QvcmVkaXMtcGVyc2lzdGVuY2Ut
ZGVteXN0aWZpZWQuaHRtbCIgdGFyZ2V0PSJfYmxhbmsiPlRoaXMgcG9zdCBi
eSBBbnRpcmV6IG9uIFJlZGlzIHBlcnNpc3RlbmNlPC9hPiBleHBsYWlucyB0
aGlzIGluIG1vcmUgZGV0YWlscywgTmVEQiBiZWluZyB2ZXJ5IGNsb3NlIHRv
IFJlZGlzIEFPRiBwZXJzaXN0ZW5jZSB3aXRoIGBhcHBlbmRmc3luY2Agb3B0
aW9uIHNldCB0byBgbm9gLgoKCiMjIyBJbnNlcnRpbmcgZG9jdW1lbnRzClRo
ZSBuYXRpdmUgdHlwZXMgYXJlIGBTdHJpbmdgLCBgTnVtYmVyYCwgYEJvb2xl
YW5gLCBgRGF0ZWAgYW5kIGBudWxsYC4gWW91IGNhbiBhbHNvIHVzZQphcnJh
eXMgYW5kIHN1YmRvY3VtZW50cyAob2JqZWN0cykuIElmIGEgZmllbGQgaXMg
YHVuZGVmaW5lZGAsIGl0IHdpbGwgbm90IGJlIHNhdmVkICh0aGlzIGlzIGRp
ZmZlcmVudCBmcm9tIApNb25nb0RCIHdoaWNoIHRyYW5zZm9ybXMgYHVuZGVm
aW5lZGAgaW4gYG51bGxgLCBzb21ldGhpbmcgSSBmaW5kIGNvdW50ZXItaW50
dWl0aXZlKS4KCklmIHRoZSBkb2N1bWVudCBkb2VzIG5vdCBjb250YWluIGFu
IGBfaWRgIGZpZWxkLCBOZURCIHdpbGwgYXV0b21hdGljYWxseSBnZW5lcmF0
ZWQgb25lIGZvciB5b3UgKGEgMTYtY2hhcmFjdGVycyBhbHBoYW51bWVyaWNh
bCBzdHJpbmcpLiBUaGUgYF9pZGAgb2YgYSBkb2N1bWVudCwgb25jZSBzZXQs
IGNhbm5vdCBiZSBtb2RpZmllZC4KCkZpZWxkIG5hbWVzIGNhbm5vdCBiZWdp
biBieSAnJCcgb3IgY29udGFpbiBhICcuJy4KCmBgYGphdmFzY3JpcHQKdmFy
IGRvYyA9IHsgaGVsbG86ICd3b3JsZCcKICAgICAgICAgICAgICAgLCBuOiA1
CiAgICAgICAgICAgICAgICwgdG9kYXk6IG5ldyBEYXRlKCkKICAgICAgICAg
ICAgICAgLCBuZWRiSXNBd2Vzb21lOiB0cnVlCiAgICAgICAgICAgICAgICwg
bm90dGhlcmU6IG51bGwKICAgICAgICAgICAgICAgLCBub3RUb0JlU2F2ZWQ6
IHVuZGVmaW5lZCAgLy8gV2lsbCBub3QgYmUgc2F2ZWQKICAgICAgICAgICAg
ICAgLCBmcnVpdHM6IFsgJ2FwcGxlJywgJ29yYW5nZScsICdwZWFyJyBdCiAg
ICAgICAgICAgICAgICwgaW5mb3M6IHsgbmFtZTogJ25lZGInIH0KICAgICAg
ICAgICAgICAgfTsKCmRiLmluc2VydChkb2MsIGZ1bmN0aW9uIChlcnIsIG5l
d0RvYykgeyAgIC8vIENhbGxiYWNrIGlzIG9wdGlvbmFsCiAgLy8gbmV3RG9j
IGlzIHRoZSBuZXdseSBpbnNlcnRlZCBkb2N1bWVudCwgaW5jbHVkaW5nIGl0
cyBfaWQKICAvLyBuZXdEb2MgaGFzIG5vIGtleSBjYWxsZWQgbm90VG9CZVNh
dmVkIHNpbmNlIGl0cyB2YWx1ZSB3YXMgdW5kZWZpbmVkCn0pOwpgYGAKCllv
dSBjYW4gYWxzbyBidWxrLWluc2VydCBhbiBhcnJheSBvZiBkb2N1bWVudHMu
IFRoaXMgb3BlcmF0aW9uIGlzIGF0b21pYywgbWVhbmluZyB0aGF0IGlmIG9u
ZSBpbnNlcnQgZmFpbHMgZHVlIHRvIGEgdW5pcXVlIGNvbnN0cmFpbnQgYmVp
bmcgdmlvbGF0ZWQsIGFsbCBjaGFuZ2VzIGFyZSByb2xsZWQgYmFjay4KCmBg
YGphdmFzY3JpcHQKZGIuaW5zZXJ0KFt7IGE6IDUgfSwgeyBhOiA0MiB9XSwg
ZnVuY3Rpb24gKGVyciwgbmV3RG9jcykgewogIC8vIFR3byBkb2N1bWVudHMg
d2VyZSBpbnNlcnRlZCBpbiB0aGUgZGF0YWJhc2UKICAvLyBuZXdEb2NzIGlz
IGFuIGFycmF5IHdpdGggdGhlc2UgZG9jdW1lbnRzLCBhdWdtZW50ZWQgd2l0
aCB0aGVpciBfaWQKfSk7CgovLyBJZiB0aGVyZSBpcyBhIHVuaXF1ZSBjb25z
dHJhaW50IG9uIGZpZWxkICdhJywgdGhpcyB3aWxsIGZhaWwKZGIuaW5zZXJ0
KFt7IGE6IDUgfSwgeyBhOiA0MiB9LCB7IGE6IDUgfV0sIGZ1bmN0aW9uIChl
cnIpIHsKICAvLyBlcnIgaXMgYSAndW5pcXVlVmlvbGF0ZWQnIGVycm9yCiAg
Ly8gVGhlIGRhdGFiYXNlIHdhcyBub3QgbW9kaWZpZWQKfSk7CmBgYAoKIyMj
IEZpbmRpbmcgZG9jdW1lbnRzClVzZSBgZmluZGAgdG8gbG9vayBmb3IgbXVs
dGlwbGUgZG9jdW1lbnRzIG1hdGNoaW5nIHlvdSBxdWVyeSwgb3IgYGZpbmRP
bmVgIHRvIGxvb2sgZm9yIG9uZSBzcGVjaWZpYyBkb2N1bWVudC4gWW91IGNh
biBzZWxlY3QgZG9jdW1lbnRzIGJhc2VkIG9uIGZpZWxkIGVxdWFsaXR5IG9y
IHVzZSBjb21wYXJpc29uIG9wZXJhdG9ycyAoYCRsdGAsIGAkbHRlYCwgYCRn
dGAsIGAkZ3RlYCwgYCRpbmAsIGAkbmluYCwgYCRuZWApLiBZb3UgY2FuIGFs
c28gdXNlIGxvZ2ljYWwgb3BlcmF0b3JzIGAkb3JgLCBgJGFuZGAsIGAkbm90
YCBhbmQgYCR3aGVyZWAuIFNlZSBiZWxvdyBmb3IgdGhlIHN5bnRheC4KCllv
dSBjYW4gdXNlIHJlZ3VsYXIgZXhwcmVzc2lvbnMgaW4gdHdvIHdheXM6IGlu
IGJhc2ljIHF1ZXJ5aW5nIGluIHBsYWNlIG9mIGEgc3RyaW5nLCBvciB3aXRo
IHRoZSBgJHJlZ2V4YCBvcGVyYXRvci4KCllvdSBjYW4gc29ydCBhbmQgcGFn
aW5hdGUgcmVzdWx0cyB1c2luZyB0aGUgY3Vyc29yIEFQSSAoc2VlIGJlbG93
KS4KCllvdSBjYW4gdXNlIHN0YW5kYXJkIHByb2plY3Rpb25zIHRvIHJlc3Ry
aWN0IHRoZSBmaWVsZHMgdG8gYXBwZWFyIGluIHRoZSByZXN1bHRzIChzZWUg
YmVsb3cpLgoKIyMjIyBCYXNpYyBxdWVyeWluZwpCYXNpYyBxdWVyeWluZyBt
ZWFucyBhcmUgbG9va2luZyBmb3IgZG9jdW1lbnRzIHdob3NlIGZpZWxkcyBt
YXRjaCB0aGUgb25lcyB5b3Ugc3BlY2lmeS4gWW91IGNhbiB1c2UgcmVndWxh
ciBleHByZXNzaW9uIHRvIG1hdGNoIHN0cmluZ3MuCllvdSBjYW4gdXNlIHRo
ZSBkb3Qgbm90YXRpb24gdG8gbmF2aWdhdGUgaW5zaWRlIG5lc3RlZCBkb2N1
bWVudHMsIGFycmF5cywgYXJyYXlzIG9mIHN1YmRvY3VtZW50cyBhbmQgdG8g
bWF0Y2ggYSBzcGVjaWZpYyBlbGVtZW50IG9mIGFuIGFycmF5LgoKYGBgamF2
YXNjcmlwdAovLyBMZXQncyBzYXkgb3VyIGRhdGFzdG9yZSBjb250YWlucyB0
aGUgZm9sbG93aW5nIGNvbGxlY3Rpb24KLy8geyBfaWQ6ICdpZDEnLCBwbGFu
ZXQ6ICdNYXJzJywgc3lzdGVtOiAnc29sYXInLCBpbmhhYml0ZWQ6IGZhbHNl
LCBzYXRlbGxpdGVzOiBbJ1Bob2JvcycsICdEZWltb3MnXSB9Ci8vIHsgX2lk
OiAnaWQyJywgcGxhbmV0OiAnRWFydGgnLCBzeXN0ZW06ICdzb2xhcicsIGlu
aGFiaXRlZDogdHJ1ZSwgaHVtYW5zOiB7IGdlbmRlcnM6IDIsIGV5ZXM6IHRy
dWUgfSB9Ci8vIHsgX2lkOiAnaWQzJywgcGxhbmV0OiAnSnVwaXRlcicsIHN5
c3RlbTogJ3NvbGFyJywgaW5oYWJpdGVkOiBmYWxzZSB9Ci8vIHsgX2lkOiAn
aWQ0JywgcGxhbmV0OiAnT21pY3JvbiBQZXJzZWkgOCcsIHN5c3RlbTogJ2Z1
dHVyYW1hJywgaW5oYWJpdGVkOiB0cnVlLCBodW1hbnM6IHsgZ2VuZGVyczog
NyB9IH0KLy8geyBfaWQ6ICdpZDUnLCBjb21wbGV0ZURhdGE6IHsgcGxhbmV0
czogWyB7IG5hbWU6ICdFYXJ0aCcsIG51bWJlcjogMyB9LCB7IG5hbWU6ICdN
YXJzJywgbnVtYmVyOiAyIH0sIHsgbmFtZTogJ1BsdXRvbicsIG51bWJlcjog
OSB9IF0gfSB9CgovLyBGaW5kaW5nIGFsbCBwbGFuZXRzIGluIHRoZSBzb2xh
ciBzeXN0ZW0KZGIuZmluZCh7IHN5c3RlbTogJ3NvbGFyJyB9LCBmdW5jdGlv
biAoZXJyLCBkb2NzKSB7CiAgLy8gZG9jcyBpcyBhbiBhcnJheSBjb250YWlu
aW5nIGRvY3VtZW50cyBNYXJzLCBFYXJ0aCwgSnVwaXRlcgogIC8vIElmIG5v
IGRvY3VtZW50IGlzIGZvdW5kLCBkb2NzIGlzIGVxdWFsIHRvIFtdCn0pOwoK
Ly8gRmluZGluZyBhbGwgcGxhbmV0cyB3aG9zZSBuYW1lIGNvbnRhaW4gdGhl
IHN1YnN0cmluZyAnYXInIHVzaW5nIGEgcmVndWxhciBleHByZXNzaW9uCmRi
LmZpbmQoeyBwbGFuZXQ6IC9hci8gfSwgZnVuY3Rpb24gKGVyciwgZG9jcykg
ewogIC8vIGRvY3MgY29udGFpbnMgTWFycyBhbmQgRWFydGgKfSk7CgovLyBG
aW5kaW5nIGFsbCBpbmhhYml0ZWQgcGxhbmV0cyBpbiB0aGUgc29sYXIgc3lz
dGVtCmRiLmZpbmQoeyBzeXN0ZW06ICdzb2xhcicsIGluaGFiaXRlZDogdHJ1
ZSB9LCBmdW5jdGlvbiAoZXJyLCBkb2NzKSB7CiAgLy8gZG9jcyBpcyBhbiBh
cnJheSBjb250YWluaW5nIGRvY3VtZW50IEVhcnRoIG9ubHkKfSk7CgovLyBV
c2UgdGhlIGRvdC1ub3RhdGlvbiB0byBtYXRjaCBmaWVsZHMgaW4gc3ViZG9j
dW1lbnRzCmRiLmZpbmQoeyAiaHVtYW5zLmdlbmRlcnMiOiAyIH0sIGZ1bmN0
aW9uIChlcnIsIGRvY3MpIHsKICAvLyBkb2NzIGNvbnRhaW5zIEVhcnRoCn0p
OwoKLy8gVXNlIHRoZSBkb3Qtbm90YXRpb24gdG8gbmF2aWdhdGUgYXJyYXlz
IG9mIHN1YmRvY3VtZW50cwpkYi5maW5kKHsgImNvbXBsZXRlRGF0YS5wbGFu
ZXRzLm5hbWUiOiAiTWFycyIgfSwgZnVuY3Rpb24gKGVyciwgZG9jcykgewog
IC8vIGRvY3MgY29udGFpbnMgZG9jdW1lbnQgNQp9KTsKCmRiLmZpbmQoeyAi
Y29tcGxldGVEYXRhLnBsYW5ldHMubmFtZSI6ICJKdXBpdGVyIiB9LCBmdW5j
dGlvbiAoZXJyLCBkb2NzKSB7CiAgLy8gZG9jcyBpcyBlbXB0eQp9KTsKCmRi
LmZpbmQoeyAiY29tcGxldGVEYXRhLnBsYW5ldHMuMC5uYW1lIjogIkVhcnRo
IiB9LCBmdW5jdGlvbiAoZXJyLCBkb2NzKSB7CiAgLy8gZG9jcyBjb250YWlu
cyBkb2N1bWVudCA1CiAgLy8gSWYgd2UgaGFkIHRlc3RlZCBhZ2FpbnN0ICJN
YXJzIiBkb2NzIHdvdWxkIGJlIGVtcHR5IGJlY2F1c2Ugd2UgYXJlIG1hdGNo
aW5nIGFnYWluc3QgYSBzcGVjaWZpYyBhcnJheSBlbGVtZW50Cn0pOwoKCi8v
IFlvdSBjYW4gYWxzbyBkZWVwLWNvbXBhcmUgb2JqZWN0cy4gRG9uJ3QgY29u
ZnVzZSB0aGlzIHdpdGggZG90LW5vdGF0aW9uIQpkYi5maW5kKHsgaHVtYW5z
OiB7IGdlbmRlcnM6IDIgfSB9LCBmdW5jdGlvbiAoZXJyLCBkb2NzKSB7CiAg
Ly8gZG9jcyBpcyBlbXB0eSwgYmVjYXVzZSB7IGdlbmRlcnM6IDIgfSBpcyBu
b3QgZXF1YWwgdG8geyBnZW5kZXJzOiAyLCBleWVzOiB0cnVlIH0KfSk7Cgov
LyBGaW5kIGFsbCBkb2N1bWVudHMgaW4gdGhlIGNvbGxlY3Rpb24KZGIuZmlu
ZCh7fSwgZnVuY3Rpb24gKGVyciwgZG9jcykgewp9KTsKCi8vIFRoZSBzYW1l
IHJ1bGVzIGFwcGx5IHdoZW4geW91IHdhbnQgdG8gb25seSBmaW5kIG9uZSBk
b2N1bWVudApkYi5maW5kT25lKHsgX2lkOiAnaWQxJyB9LCBmdW5jdGlvbiAo
ZXJyLCBkb2MpIHsKICAvLyBkb2MgaXMgdGhlIGRvY3VtZW50IE1hcnMKICAv
LyBJZiBubyBkb2N1bWVudCBpcyBmb3VuZCwgZG9jIGlzIG51bGwKfSk7CmBg
YAoKIyMjIyBPcGVyYXRvcnMgKCRsdCwgJGx0ZSwgJGd0LCAkZ3RlLCAkaW4s
ICRuaW4sICRuZSwgJGV4aXN0cywgJHJlZ2V4KQpUaGUgc3ludGF4IGlzIGB7
IGZpZWxkOiB7ICRvcDogdmFsdWUgfSB9YCB3aGVyZSBgJG9wYCBpcyBhbnkg
Y29tcGFyaXNvbiBvcGVyYXRvcjogIAoKKiBgJGx0YCwgYCRsdGVgOiBsZXNz
IHRoYW4sIGxlc3MgdGhhbiBvciBlcXVhbAoqIGAkZ3RgLCBgJGd0ZWA6IGdy
ZWF0ZXIgdGhhbiwgZ3JlYXRlciB0aGFuIG9yIGVxdWFsCiogYCRpbmA6IG1l
bWJlciBvZi4gYHZhbHVlYCBtdXN0IGJlIGFuIGFycmF5IG9mIHZhbHVlcwoq
IGAkbmVgLCBgJG5pbmA6IG5vdCBlcXVhbCwgbm90IGEgbWVtYmVyIG9mCiog
YCRleGlzdHNgOiBjaGVja3Mgd2hldGhlciB0aGUgZG9jdW1lbnQgcG9zc2Vz
IHRoZSBwcm9wZXJ0eSBgZmllbGRgLiBgdmFsdWVgIHNob3VsZCBiZSB0cnVl
IG9yIGZhbHNlCiogYCRyZWdleGA6IGNoZWNrcyB3aGV0aGVyIGEgc3RyaW5n
IGlzIG1hdGNoZWQgYnkgdGhlIHJlZ3VsYXIgZXhwcmVzc2lvbi4gQ29udHJh
cnkgdG8gTW9uZ29EQiwgdGhlIHVzZSBvZiBgJG9wdGlvbnNgIHdpdGggYCRy
ZWdleGAgaXMgbm90IHN1cHBvcnRlZCwgYmVjYXVzZSBpdCBkb2Vzbid0IGdp
dmUgeW91IG1vcmUgcG93ZXIgdGhhbiByZWdleCBmbGFncy4gQmFzaWMgcXVl
cmllcyBhcmUgbW9yZSByZWFkYWJsZSBzbyBvbmx5IHVzZSB0aGUgYCRyZWdl
eGAgb3BlcmF0b3Igd2hlbiB5b3UgbmVlZCB0byB1c2UgYW5vdGhlciBvcGVy
YXRvciB3aXRoIGl0IChzZWUgZXhhbXBsZSBiZWxvdykKCmBgYGphdmFzY3Jp
cHQKLy8gJGx0LCAkbHRlLCAkZ3QgYW5kICRndGUgd29yayBvbiBudW1iZXJz
IGFuZCBzdHJpbmdzCmRiLmZpbmQoeyAiaHVtYW5zLmdlbmRlcnMiOiB7ICRn
dDogNSB9IH0sIGZ1bmN0aW9uIChlcnIsIGRvY3MpIHsKICAvLyBkb2NzIGNv
bnRhaW5zIE9taWNyb24gUGVyc2VpIDgsIHdob3NlIGh1bWFucyBoYXZlIG1v
cmUgdGhhbiA1IGdlbmRlcnMgKDcpLgp9KTsKCi8vIFdoZW4gdXNlZCB3aXRo
IHN0cmluZ3MsIGxleGljb2dyYXBoaWNhbCBvcmRlciBpcyB1c2VkCmRiLmZp
bmQoeyBwbGFuZXQ6IHsgJGd0OiAnTWVyY3VyeScgfX0sIGZ1bmN0aW9uIChl
cnIsIGRvY3MpIHsKICAvLyBkb2NzIGNvbnRhaW5zIE9taWNyb24gUGVyc2Vp
IDgKfSkKCi8vIFVzaW5nICRpbi4gJG5pbiBpcyB1c2VkIGluIHRoZSBzYW1l
IHdheQpkYi5maW5kKHsgcGxhbmV0OiB7ICRpbjogWydFYXJ0aCcsICdKdXBp
dGVyJ10gfX0sIGZ1bmN0aW9uIChlcnIsIGRvY3MpIHsKICAvLyBkb2NzIGNv
bnRhaW5zIEVhcnRoIGFuZCBKdXBpdGVyCn0pOwoKLy8gVXNpbmcgJGV4aXN0
cwpkYi5maW5kKHsgc2F0ZWxsaXRlczogeyAkZXhpc3RzOiB0cnVlIH0gfSwg
ZnVuY3Rpb24gKGVyciwgZG9jcykgewogIC8vIGRvY3MgY29udGFpbnMgb25s
eSBNYXJzCn0pOwoKLy8gVXNpbmcgJHJlZ2V4IHdpdGggYW5vdGhlciBvcGVy
YXRvcgpkYi5maW5kKHsgcGxhbmV0OiB7ICRyZWdleDogL2FyLywgJG5pbjog
WydKdXBpdGVyJywgJ0VhcnRoJ10gfSB9LCBmdW5jdGlvbiAoZXJyLCBkb2Nz
KSB7CiAgLy8gZG9jcyBvbmx5IGNvbnRhaW5zIE1hcnMgYmVjYXVzZSBFYXJ0
aCB3YXMgZXhjbHVkZWQgZnJvbSB0aGUgbWF0Y2ggYnkgJG5pbgp9KTsKYGBg
CgojIyMjIEFycmF5IGZpZWxkcwpXaGVuIGEgZmllbGQgaW4gYSBkb2N1bWVu
dCBpcyBhbiBhcnJheSwgTmVEQiBmaXJzdCB0cmllcyB0byBzZWUgaWYgdGhl
IHF1ZXJ5IHZhbHVlIGlzIGFuIGFycmF5IHRvIHBlcmZvcm0gYW4gZXhhY3Qg
bWF0Y2gsIHRoZW4gd2hldGhlciB0aGVyZSBpcyBhbiBhcnJheS1zcGVjaWZp
YyBjb21wYXJpc29uIGZ1bmN0aW9uIChmb3Igbm93IHRoZXJlIGlzIG9ubHkg
YCRzaXplYCBhbmQgYCRlbGVtTWF0Y2hgKSBiZWluZyB1c2VkLiBJZiBub3Qs
IHRoZSBxdWVyeSBpcyB0cmVhdGVkIGFzIGEgcXVlcnkgb24gZXZlcnkgZWxl
bWVudCBhbmQgdGhlcmUgaXMgYSBtYXRjaCBpZiBhdCBsZWFzdCBvbmUgZWxl
bWVudCBtYXRjaGVzLiAgCgoqIGAkc2l6ZWA6IG1hdGNoIG9uIHRoZSBzaXpl
IG9mIHRoZSBhcnJheQoqIGAkZWxlbU1hdGNoYDogbWF0Y2hlcyBpZiBhdCBs
ZWFzdCBvbmUgYXJyYXkgZWxlbWVudCBtYXRjaGVzIHRoZSBxdWVyeSBlbnRp
cmVseQoKYGBgamF2YXNjcmlwdAovLyBFeGFjdCBtYXRjaApkYi5maW5kKHsg
c2F0ZWxsaXRlczogWydQaG9ib3MnLCAnRGVpbW9zJ10gfSwgZnVuY3Rpb24g
KGVyciwgZG9jcynCoHsKICAvLyBkb2NzIGNvbnRhaW5zIE1hcnMKfSkKZGIu
ZmluZCh7IHNhdGVsbGl0ZXM6IFsnRGVpbW9zJywgJ1Bob2JvcyddIH0sIGZ1
bmN0aW9uIChlcnIsIGRvY3MpwqB7CiAgLy8gZG9jcyBpcyBlbXB0eQp9KQoK
Ly8gVXNpbmcgYW4gYXJyYXktc3BlY2lmaWMgY29tcGFyaXNvbiBmdW5jdGlv
bgovLyAkZWxlbU1hdGNoIG9wZXJhdG9yIHdpbGwgcHJvdmlkZSBtYXRjaCBm
b3IgYSBkb2N1bWVudCwgaWYgYW4gZWxlbWVudCBmcm9tIHRoZSBhcnJheSBm
aWVsZCBzYXRpc2ZpZXMgYWxsIHRoZSBjb25kaXRpb25zIHNwZWNpZmllZCB3
aXRoIHRoZSBgJGVsZW1NYXRjaGAgb3BlcmF0b3IKZGIuZmluZCh7IGNvbXBs
ZXRlRGF0YTogeyBwbGFuZXRzOiB7ICRlbGVtTWF0Y2g6IHsgbmFtZTogJ0Vh
cnRoJywgbnVtYmVyOiAzIH0gfSB9IH0sIGZ1bmN0aW9uIChlcnIsIGRvY3Mp
IHsKICAvLyBkb2NzIGNvbnRhaW5zIGRvY3VtZW50cyB3aXRoIGlkIDUgKGNv
bXBsZXRlRGF0YSkKfSk7CgpkYi5maW5kKHsgY29tcGxldGVEYXRhOiB7IHBs
YW5ldHM6IHsgJGVsZW1NYXRjaDogeyBuYW1lOiAnRWFydGgnLCBudW1iZXI6
IDUgfSB9IH0gfSwgZnVuY3Rpb24gKGVyciwgZG9jcykgewogIC8vIGRvY3Mg
aXMgZW1wdHkKfSk7CgovLyBZb3UgY2FuIHVzZSBpbnNpZGUgI2VsZW1NYXRj
aCBxdWVyeSBhbnkga25vd24gZG9jdW1lbnQgcXVlcnkgb3BlcmF0b3IKZGIu
ZmluZCh7IGNvbXBsZXRlRGF0YTogeyBwbGFuZXRzOiB7ICRlbGVtTWF0Y2g6
IHsgbmFtZTogJ0VhcnRoJywgbnVtYmVyOiB7ICRndDogMiB9IH0gfSB9IH0s
IGZ1bmN0aW9uIChlcnIsIGRvY3MpIHsKICAvLyBkb2NzIGNvbnRhaW5zIGRv
Y3VtZW50cyB3aXRoIGlkIDUgKGNvbXBsZXRlRGF0YSkKfSk7CgovLyBOb3Rl
OiB5b3UgY2FuJ3QgdXNlIG5lc3RlZCBjb21wYXJpc29uIGZ1bmN0aW9ucywg
ZS5nLiB7ICRzaXplOiB7ICRsdDogNSB9IH0gd2lsbCB0aHJvdyBhbiBlcnJv
cgpkYi5maW5kKHsgc2F0ZWxsaXRlczogeyAkc2l6ZTogMiB9IH0sIGZ1bmN0
aW9uIChlcnIsIGRvY3MpIHsKICAvLyBkb2NzIGNvbnRhaW5zIE1hcnMKfSk7
CgpkYi5maW5kKHsgc2F0ZWxsaXRlczogeyAkc2l6ZTogMSB9IH0sIGZ1bmN0
aW9uIChlcnIsIGRvY3MpIHsKICAvLyBkb2NzIGlzIGVtcHR5Cn0pOwoKLy8g
SWYgYSBkb2N1bWVudCdzIGZpZWxkIGlzIGFuIGFycmF5LCBtYXRjaGluZyBp
dCBtZWFucyBtYXRjaGluZyBhbnkgZWxlbWVudCBvZiB0aGUgYXJyYXkKZGIu
ZmluZCh7IHNhdGVsbGl0ZXM6ICdQaG9ib3MnIH0sIGZ1bmN0aW9uIChlcnIs
IGRvY3MpIHsKICAvLyBkb2NzIGNvbnRhaW5zIE1hcnMuIFJlc3VsdCB3b3Vs
ZCBoYXZlIGJlZW4gdGhlIHNhbWUgaWYgcXVlcnkgaGFkIGJlZW4geyBzYXRl
bGxpdGVzOiAnRGVpbW9zJyB9Cn0pOwoKLy8gVGhpcyBhbHNvIHdvcmtzIGZv
ciBxdWVyaWVzIHRoYXQgdXNlIGNvbXBhcmlzb24gb3BlcmF0b3JzCmRiLmZp
bmQoeyBzYXRlbGxpdGVzOiB7ICRsdDogJ0Ftb3MnIH0gfSwgZnVuY3Rpb24g
KGVyciwgZG9jcykgewogIC8vIGRvY3MgaXMgZW1wdHkgc2luY2UgUGhvYm9z
IGFuZCBEZWltb3MgYXJlIGFmdGVyIEFtb3MgaW4gbGV4aWNvZ3JhcGhpY2Fs
IG9yZGVyCn0pOwoKLy8gVGhpcyBhbHNvIHdvcmtzIHdpdGggdGhlICRpbiBh
bmQgJG5pbiBvcGVyYXRvcgpkYi5maW5kKHsgc2F0ZWxsaXRlczogeyAkaW46
IFsnTW9vbicsICdEZWltb3MnXSB9IH0sIGZ1bmN0aW9uIChlcnIsIGRvY3Mp
IHsKICAvLyBkb2NzIGNvbnRhaW5zIE1hcnMgKHRoZSBFYXJ0aCBkb2N1bWVu
dCBpcyBub3QgY29tcGxldGUhKQp9KTsKYGBgCgojIyMjIExvZ2ljYWwgb3Bl
cmF0b3JzICRvciwgJGFuZCwgJG5vdCwgJHdoZXJlCllvdSBjYW4gY29tYmlu
ZSBxdWVyaWVzIHVzaW5nIGxvZ2ljYWwgb3BlcmF0b3JzOiAgCgoqIEZvciBg
JG9yYCBhbmQgYCRhbmRgLCB0aGUgc3ludGF4IGlzIGB7ICRvcDogW3F1ZXJ5
MSwgcXVlcnkyLCAuLi5dIH1gLgoqIEZvciBgJG5vdGAsIHRoZSBzeW50YXgg
aXMgYHsgJG5vdDogcXVlcnkgfWAKKiBGb3IgYCR3aGVyZWAsIHRoZSBzeW50
YXggaXMgYHsgJHdoZXJlOiBmdW5jdGlvbiAoKSB7IC8qIG9iamVjdCBpcyAi
dGhpcyIsIHJldHVybiBhIGJvb2xlYW4gKi8gfSB9YAoKYGBgamF2YXNjcmlw
dApkYi5maW5kKHsgJG9yOiBbeyBwbGFuZXQ6ICdFYXJ0aCcgfSwgeyBwbGFu
ZXQ6ICdNYXJzJyB9XSB9LCBmdW5jdGlvbiAoZXJyLCBkb2NzKSB7CiAgLy8g
ZG9jcyBjb250YWlucyBFYXJ0aCBhbmQgTWFycwp9KTsKCmRiLmZpbmQoeyAk
bm90OiB7IHBsYW5ldDogJ0VhcnRoJyB9IH0sIGZ1bmN0aW9uIChlcnIsIGRv
Y3MpIHsKICAvLyBkb2NzIGNvbnRhaW5zIE1hcnMsIEp1cGl0ZXIsIE9taWNy
b24gUGVyc2VpIDgKfSk7CgpkYi5maW5kKHsgJHdoZXJlOiBmdW5jdGlvbiAo
KSB7IHJldHVybiBPYmplY3Qua2V5cyh0aGlzKSA+IDY7IH0gfSwgZnVuY3Rp
b24gKGVyciwgZG9jcykgewogIC8vIGRvY3Mgd2l0aCBtb3JlIHRoYW4gNiBw
cm9wZXJ0aWVzCn0pOwoKLy8gWW91IGNhbiBtaXggbm9ybWFsIHF1ZXJpZXMs
IGNvbXBhcmlzb24gcXVlcmllcyBhbmQgbG9naWNhbCBvcGVyYXRvcnMKZGIu
ZmluZCh7ICRvcjogW3sgcGxhbmV0OiAnRWFydGgnIH0sIHsgcGxhbmV0OiAn
TWFycycgfV0sIGluaGFiaXRlZDogdHJ1ZSB9LCBmdW5jdGlvbiAoZXJyLCBk
b2NzKSB7CiAgLy8gZG9jcyBjb250YWlucyBFYXJ0aAp9KTsKCmBgYAoKIyMj
IyBTb3J0aW5nIGFuZCBwYWdpbmF0aW5nCklmIHlvdSBkb24ndCBzcGVjaWZ5
IGEgY2FsbGJhY2sgdG8gYGZpbmRgLCBgZmluZE9uZWAgb3IgYGNvdW50YCwg
YSBgQ3Vyc29yYCBvYmplY3QgaXMgcmV0dXJuZWQuIFlvdSBjYW4gbW9kaWZ5
IHRoZSBjdXJzb3Igd2l0aCBgc29ydGAsIGBza2lwYCBhbmQgYGxpbWl0YCBh
bmQgdGhlbiBleGVjdXRlIGl0IHdpdGggYGV4ZWMoY2FsbGJhY2spYC4KCmBg
YGphdmFzY3JpcHQKLy8gTGV0J3Mgc2F5IHRoZSBkYXRhYmFzZSBjb250YWlu
cyB0aGVzZSA0IGRvY3VtZW50cwovLyBkb2MxID0geyBfaWQ6ICdpZDEnLCBw
bGFuZXQ6ICdNYXJzJywgc3lzdGVtOiAnc29sYXInLCBpbmhhYml0ZWQ6IGZh
bHNlLCBzYXRlbGxpdGVzOiBbJ1Bob2JvcycsICdEZWltb3MnXSB9Ci8vIGRv
YzIgPSB7IF9pZDogJ2lkMicsIHBsYW5ldDogJ0VhcnRoJywgc3lzdGVtOiAn
c29sYXInLCBpbmhhYml0ZWQ6IHRydWUsIGh1bWFuczogeyBnZW5kZXJzOiAy
LCBleWVzOiB0cnVlIH0gfQovLyBkb2MzID0geyBfaWQ6ICdpZDMnLCBwbGFu
ZXQ6ICdKdXBpdGVyJywgc3lzdGVtOiAnc29sYXInLCBpbmhhYml0ZWQ6IGZh
bHNlIH0KLy8gZG9jNCA9IHsgX2lkOiAnaWQ0JywgcGxhbmV0OiAnT21pY3Jv
biBQZXJzZWkgOCcsIHN5c3RlbTogJ2Z1dHVyYW1hJywgaW5oYWJpdGVkOiB0
cnVlLCBodW1hbnM6IHsgZ2VuZGVyczogNyB9IH0KCi8vIE5vIHF1ZXJ5IHVz
ZWQgbWVhbnMgYWxsIHJlc3VsdHMgYXJlIHJldHVybmVkIChiZWZvcmUgdGhl
IEN1cnNvciBtb2RpZmllcnMpCmRiLmZpbmQoe30pLnNvcnQoeyBwbGFuZXQ6
IDEgfSkuc2tpcCgxKS5saW1pdCgyKS5leGVjKGZ1bmN0aW9uIChlcnIsIGRv
Y3MpIHsKICAvLyBkb2NzIGlzIFtkb2MzLCBkb2MxXQp9KTsKCi8vIFlvdSBj
YW4gc29ydCBpbiByZXZlcnNlIG9yZGVyIGxpa2UgdGhpcwpkYi5maW5kKHsg
c3lzdGVtOiAnc29sYXInIH0pLnNvcnQoeyBwbGFuZXQ6IC0xIH0pLmV4ZWMo
ZnVuY3Rpb24gKGVyciwgZG9jcykgewogIC8vIGRvY3MgaXMgW2RvYzEsIGRv
YzMsIGRvYzJdCn0pOwoKLy8gWW91IGNhbiBzb3J0IG9uIG9uZSBmaWVsZCwg
dGhlbiBhbm90aGVyLCBhbmQgc28gb24gbGlrZSB0aGlzOgpkYi5maW5kKHt9
KS5zb3J0KHsgZmlyc3RGaWVsZDogMSwgc2Vjb25kRmllbGQ6IC0xIH0pIC4u
LiAgIC8vIFlvdSB1bmRlcnN0YW5kIGhvdyB0aGlzIHdvcmtzIQpgYGAKCiMj
IyMgUHJvamVjdGlvbnMKWW91IGNhbiBnaXZlIGBmaW5kYCBhbmQgYGZpbmRP
bmVgIGFuIG9wdGlvbmFsIHNlY29uZCBhcmd1bWVudCwgYHByb2plY3Rpb25z
YC4gVGhlIHN5bnRheCBpcyB0aGUgc2FtZSBhcyBNb25nb0RCOiBgeyBhOiAx
LCBiOiAxIH1gIHRvIHJldHVybiBvbmx5IHRoZSBgYWAgYW5kIGBiYCBmaWVs
ZHMsIGB7IGE6IDAsIGI6IDAgfWAgdG8gb21pdCB0aGVzZSB0d28gZmllbGRz
LiBZb3UgY2Fubm90IHVzZSBib3RoIG1vZGVzIGF0IHRoZSB0aW1lLCBleGNl
cHQgZm9yIGBfaWRgIHdoaWNoIGlzIGJ5IGRlZmF1bHQgYWx3YXlzIHJldHVy
bmVkIGFuZCB3aGljaCB5b3UgY2FuIGNob29zZSB0byBvbWl0LiBZb3UgY2Fu
IHByb2plY3Qgb24gbmVzdGVkIGRvY3VtZW50cy4KCmBgYGphdmFzY3JpcHQK
Ly8gU2FtZSBkYXRhYmFzZSBhcyBhYm92ZQoKLy8gS2VlcGluZyBvbmx5IHRo
ZSBnaXZlbiBmaWVsZHMKZGIuZmluZCh7IHBsYW5ldDogJ01hcnMnIH0sIHsg
cGxhbmV0OiAxLCBzeXN0ZW06IDEgfSwgZnVuY3Rpb24gKGVyciwgZG9jcykg
ewogIC8vIGRvY3MgaXMgW3sgcGxhbmV0OiAnTWFycycsIHN5c3RlbTogJ3Nv
bGFyJywgX2lkOiAnaWQxJyB9XQp9KTsKCi8vIEtlZXBpbmcgb25seSB0aGUg
Z2l2ZW4gZmllbGRzIGJ1dCByZW1vdmluZyBfaWQKZGIuZmluZCh7IHBsYW5l
dDogJ01hcnMnIH0sIHsgcGxhbmV0OiAxLCBzeXN0ZW06IDEsIF9pZDogMCB9
LCBmdW5jdGlvbiAoZXJyLCBkb2NzKSB7CiAgLy8gZG9jcyBpcyBbeyBwbGFu
ZXQ6ICdNYXJzJywgc3lzdGVtOiAnc29sYXInIH1dCn0pOwoKLy8gT21pdHRp
bmcgb25seSB0aGUgZ2l2ZW4gZmllbGRzIGFuZCByZW1vdmluZyBfaWQKZGIu
ZmluZCh7IHBsYW5ldDogJ01hcnMnIH0sIHsgcGxhbmV0OiAwLCBzeXN0ZW06
IDAsIF9pZDogMCB9LCBmdW5jdGlvbiAoZXJyLCBkb2NzKSB7CiAgLy8gZG9j
cyBpcyBbeyBpbmhhYml0ZWQ6IGZhbHNlLCBzYXRlbGxpdGVzOiBbJ1Bob2Jv
cycsICdEZWltb3MnXSB9XQp9KTsKCi8vIEZhaWx1cmU6IHVzaW5nIGJvdGgg
bW9kZXMgYXQgdGhlIHNhbWUgdGltZQpkYi5maW5kKHsgcGxhbmV0OiAnTWFy
cycgfSwgeyBwbGFuZXQ6IDAsIHN5c3RlbTogMSB9LCBmdW5jdGlvbiAoZXJy
LCBkb2NzKSB7CiAgLy8gZXJyIGlzIHRoZSBlcnJvciBtZXNzYWdlLCBkb2Nz
IGlzIHVuZGVmaW5lZAp9KTsKCi8vIFlvdSBjYW4gYWxzbyB1c2UgaXQgaW4g
YSBDdXJzb3Igd2F5IGJ1dCB0aGlzIHN5bnRheCBpcyBub3QgY29tcGF0aWJs
ZSB3aXRoIE1vbmdvREIKZGIuZmluZCh7IHBsYW5ldDogJ01hcnMnIH0pLnBy
b2plY3Rpb24oeyBwbGFuZXQ6IDEsIHN5c3RlbTogMSB9KS5leGVjKGZ1bmN0
aW9uIChlcnIsIGRvY3MpIHsKICAvLyBkb2NzIGlzIFt7IHBsYW5ldDogJ01h
cnMnLCBzeXN0ZW06ICdzb2xhcicsIF9pZDogJ2lkMScgfV0KfSk7CgovLyBQ
cm9qZWN0IG9uIGEgbmVzdGVkIGRvY3VtZW50CmRiLmZpbmRPbmUoeyBwbGFu
ZXQ6ICdFYXJ0aCcgfSkucHJvamVjdGlvbih7IHBsYW5ldDogMSwgJ2h1bWFu
cy5nZW5kZXJzJzogMSB9KS5leGVjKGZ1bmN0aW9uIChlcnIsIGRvYykgewog
IC8vIGRvYyBpcyB7IHBsYW5ldDogJ0VhcnRoJywgX2lkOiAnaWQyJywgaHVt
YW5zOiB7IGdlbmRlcnM6IDIgfSB9Cn0pOwpgYGAKCgoKIyMjIENvdW50aW5n
IGRvY3VtZW50cwpZb3UgY2FuIHVzZSBgY291bnRgIHRvIGNvdW50IGRvY3Vt
ZW50cy4gSXQgaGFzIHRoZSBzYW1lIHN5bnRheCBhcyBgZmluZGAuIEZvciBl
eGFtcGxlOgoKYGBgamF2YXNjcmlwdAovLyBDb3VudCBhbGwgcGxhbmV0cyBp
biB0aGUgc29sYXIgc3lzdGVtCmRiLmNvdW50KHsgc3lzdGVtOiAnc29sYXIn
IH0sIGZ1bmN0aW9uIChlcnIsIGNvdW50KSB7CiAgLy8gY291bnQgZXF1YWxz
IHRvIDMKfSk7CgovLyBDb3VudCBhbGwgZG9jdW1lbnRzIGluIHRoZSBkYXRh
c3RvcmUKZGIuY291bnQoe30sIGZ1bmN0aW9uIChlcnIsIGNvdW50KSB7CiAg
Ly8gY291bnQgZXF1YWxzIHRvIDQKfSk7CmBgYAoKCiMjIyBVcGRhdGluZyBk
b2N1bWVudHMKYGRiLnVwZGF0ZShxdWVyeSwgdXBkYXRlLCBvcHRpb25zLCBj
YWxsYmFjaylgIHdpbGwgdXBkYXRlIGFsbCBkb2N1bWVudHMgbWF0Y2hpbmcg
YHF1ZXJ5YCBhY2NvcmRpbmcgdG8gdGhlIGB1cGRhdGVgIHJ1bGVzOiAgCiog
YHF1ZXJ5YCBpcyB0aGUgc2FtZSBraW5kIG9mIGZpbmRpbmcgcXVlcnkgeW91
IHVzZSB3aXRoIGBmaW5kYCBhbmQgYGZpbmRPbmVgCiogYHVwZGF0ZWAgc3Bl
Y2lmaWVzIGhvdyB0aGUgZG9jdW1lbnRzIHNob3VsZCBiZSBtb2RpZmllZC4g
SXQgaXMgZWl0aGVyIGEgbmV3IGRvY3VtZW50IG9yIGEgc2V0IG9mIG1vZGlm
aWVycyAoeW91IGNhbm5vdCB1c2UgYm90aCB0b2dldGhlciwgaXQgZG9lc24n
dCBtYWtlIHNlbnNlISkKICAqIEEgbmV3IGRvY3VtZW50IHdpbGwgcmVwbGFj
ZSB0aGUgbWF0Y2hlZCBkb2NzCiAgKiBUaGUgbW9kaWZpZXJzIGNyZWF0ZSB0
aGUgZmllbGRzIHRoZXkgbmVlZCB0byBtb2RpZnkgaWYgdGhleSBkb24ndCBl
eGlzdCwgYW5kIHlvdSBjYW4gYXBwbHkgdGhlbSB0byBzdWJkb2NzLiBBdmFp
bGFibGUgZmllbGQgbW9kaWZpZXJzIGFyZSBgJHNldGAgdG8gY2hhbmdlIGEg
ZmllbGQncyB2YWx1ZSwgYCR1bnNldGAgdG8gZGVsZXRlIGEgZmllbGQsIGAk
aW5jYCB0byBpbmNyZW1lbnQgYSBmaWVsZCdzIHZhbHVlIGFuZCBgJG1pbmAv
YCRtYXhgIHRvIGNoYW5nZSBmaWVsZCdzIHZhbHVlLCBvbmx5IGlmIHByb3Zp
ZGVkIHZhbHVlIGlzIGxlc3MvZ3JlYXRlciB0aGFuIGN1cnJlbnQgdmFsdWUu
IFRvIHdvcmsgb24gYXJyYXlzLCB5b3UgaGF2ZSBgJHB1c2hgLCBgJHBvcGAs
IGAkYWRkVG9TZXRgLCBgJHB1bGxgLCBhbmQgdGhlIHNwZWNpYWwgYCRlYWNo
YCBhbmQgYCRzbGljZWAuIFNlZSBleGFtcGxlcyBiZWxvdyBmb3IgdGhlIHN5
bnRheC4KKiBgb3B0aW9uc2AgaXMgYW4gb2JqZWN0IHdpdGggdHdvIHBvc3Np
YmxlIHBhcmFtZXRlcnMKICAqIGBtdWx0aWAgKGRlZmF1bHRzIHRvIGBmYWxz
ZWApIHdoaWNoIGFsbG93cyB0aGUgbW9kaWZpY2F0aW9uIG9mIHNldmVyYWwg
ZG9jdW1lbnRzIGlmIHNldCB0byB0cnVlCiAgKiBgdXBzZXJ0YCAoZGVmYXVs
dHMgdG8gYGZhbHNlYCkgaWYgeW91IHdhbnQgdG8gaW5zZXJ0IGEgbmV3IGRv
Y3VtZW50IGNvcnJlc3BvbmRpbmcgdG8gdGhlIGB1cGRhdGVgIHJ1bGVzIGlm
IHlvdXIgYHF1ZXJ5YCBkb2Vzbid0IG1hdGNoIGFueXRoaW5nLiBJZiB5b3Vy
IGB1cGRhdGVgIGlzIGEgc2ltcGxlIG9iamVjdCB3aXRoIG5vIG1vZGlmaWVy
cywgaXQgaXMgdGhlIGluc2VydGVkIGRvY3VtZW50LiBJbiB0aGUgb3RoZXIg
Y2FzZSwgdGhlIGBxdWVyeWAgaXMgc3RyaXBwZWQgZnJvbSBhbGwgb3BlcmF0
b3IgcmVjdXJzaXZlbHksIGFuZCB0aGUgYHVwZGF0ZWAgaXMgYXBwbGllZCB0
byBpdC4KICAqIGByZXR1cm5VcGRhdGVkRG9jc2AgKGRlZmF1bHRzIHRvIGBm
YWxzZWAsIG5vdCBNb25nb0RCLWNvbXBhdGlibGUpIGlmIHNldCB0byB0cnVl
IGFuZCB1cGRhdGUgaXMgbm90IGFuIHVwc2VydCwgd2lsbCByZXR1cm4gdGhl
IGFycmF5IG9mIGRvY3VtZW50cyBtYXRjaGVkIGJ5IHRoZSBmaW5kIHF1ZXJ5
IGFuZCB1cGRhdGVkLiBVcGRhdGVkIGRvY3VtZW50cyB3aWxsIGJlIHJldHVy
bmVkIGV2ZW4gaWYgdGhlIHVwZGF0ZSBkaWQgbm90IGFjdHVhbGx5IG1vZGlm
eSB0aGVtLgoqIGBjYWxsYmFja2AgKG9wdGlvbmFsKSBzaWduYXR1cmU6IGAo
ZXJyLCBudW1BZmZlY3RlZCwgYWZmZWN0ZWREb2N1bWVudHMsIHVwc2VydClg
LiAqKldhcm5pbmcqKjogdGhlIEFQSSB3YXMgY2hhbmdlZCBiZXR3ZWVuIHYx
LjcuNCBhbmQgdjEuOC4gUGxlYXNlIHJlZmVyIHRvIHRoZSA8YSBocmVmPSJo
dHRwczovL2dpdGh1Yi5jb20vbG91aXNjaGF0cmlvdC9uZWRiL3dpa2kvQ2hh
bmdlLWxvZyIgdGFyZ2V0PSJfYmxhbmsiPmNoYW5nZSBsb2c8L2E+IHRvIHNl
ZSB0aGUgY2hhbmdlLgogICogRm9yIGFuIHVwc2VydCwgYGFmZmVjdGVkRG9j
dW1lbnRzYCBjb250YWlucyB0aGUgaW5zZXJ0ZWQgZG9jdW1lbnQgYW5kIHRo
ZSBgdXBzZXJ0YCBmbGFnIGlzIHNldCB0byBgdHJ1ZWAuCiAgKiBGb3IgYSBz
dGFuZGFyZCB1cGRhdGUgd2l0aCBgcmV0dXJuVXBkYXRlZERvY3NgIGZsYWcg
c2V0IHRvIGBmYWxzZWAsIGBhZmZlY3RlZERvY3VtZW50c2AgaXMgbm90IHNl
dC4KICAqIEZvciBhIHN0YW5kYXJkIHVwZGF0ZSB3aXRoIGByZXR1cm5VcGRh
dGVkRG9jc2AgZmxhZyBzZXQgdG8gYHRydWVgIGFuZCBgbXVsdGlgIHRvIGBm
YWxzZWAsIGBhZmZlY3RlZERvY3VtZW50c2AgaXMgdGhlIHVwZGF0ZWQgZG9j
dW1lbnQuCiAgKiBGb3IgYSBzdGFuZGFyZCB1cGRhdGUgd2l0aCBgcmV0dXJu
VXBkYXRlZERvY3NgIGZsYWcgc2V0IHRvIGB0cnVlYCBhbmQgYG11bHRpYCB0
byBgdHJ1ZWAsIGBhZmZlY3RlZERvY3VtZW50c2AgaXMgdGhlIGFycmF5IG9m
IHVwZGF0ZWQgZG9jdW1lbnRzLgoKKipOb3RlKio6IHlvdSBjYW4ndCBjaGFu
Z2UgYSBkb2N1bWVudCdzIF9pZC4KCmBgYGphdmFzY3JpcHQKLy8gTGV0J3Mg
dXNlIHRoZSBzYW1lIGV4YW1wbGUgY29sbGVjdGlvbiBhcyBpbiB0aGUgImZp
bmRpbmcgZG9jdW1lbnQiIHBhcnQKLy8geyBfaWQ6ICdpZDEnLCBwbGFuZXQ6
ICdNYXJzJywgc3lzdGVtOiAnc29sYXInLCBpbmhhYml0ZWQ6IGZhbHNlIH0K
Ly8geyBfaWQ6ICdpZDInLCBwbGFuZXQ6ICdFYXJ0aCcsIHN5c3RlbTogJ3Nv
bGFyJywgaW5oYWJpdGVkOiB0cnVlIH0KLy8geyBfaWQ6ICdpZDMnLCBwbGFu
ZXQ6ICdKdXBpdGVyJywgc3lzdGVtOiAnc29sYXInLCBpbmhhYml0ZWQ6IGZh
bHNlIH0KLy8geyBfaWQ6ICdpZDQnLCBwbGFuZXQ6ICdPbWljcm9uIFBlcnNp
YSA4Jywgc3lzdGVtOiAnZnV0dXJhbWEnLCBpbmhhYml0ZWQ6IHRydWUgfQoK
Ly8gUmVwbGFjZSBhIGRvY3VtZW50IGJ5IGFub3RoZXIKZGIudXBkYXRlKHsg
cGxhbmV0OiAnSnVwaXRlcicgfSwgeyBwbGFuZXQ6ICdQbHV0b24nfSwge30s
IGZ1bmN0aW9uIChlcnIsIG51bVJlcGxhY2VkKSB7CiAgLy8gbnVtUmVwbGFj
ZWQgPSAxCiAgLy8gVGhlIGRvYyAjMyBoYXMgYmVlbiByZXBsYWNlZCBieSB7
IF9pZDogJ2lkMycsIHBsYW5ldDogJ1BsdXRvbicgfQogIC8vIE5vdGUgdGhh
dCB0aGUgX2lkIGlzIGtlcHQgdW5jaGFuZ2VkLCBhbmQgdGhlIGRvY3VtZW50
IGhhcyBiZWVuIHJlcGxhY2VkCiAgLy8gKHRoZSAnc3lzdGVtJyBhbmQgaW5o
YWJpdGVkIGZpZWxkcyBhcmUgbm90IGhlcmUgYW55bW9yZSkKfSk7CgovLyBT
ZXQgYW4gZXhpc3RpbmcgZmllbGQncyB2YWx1ZQpkYi51cGRhdGUoeyBzeXN0
ZW06ICdzb2xhcicgfSwgeyAkc2V0OiB7IHN5c3RlbTogJ3NvbGFyIHN5c3Rl
bScgfSB9LCB7IG11bHRpOiB0cnVlIH0sIGZ1bmN0aW9uIChlcnIsIG51bVJl
cGxhY2VkKSB7CiAgLy8gbnVtUmVwbGFjZWQgPSAzCiAgLy8gRmllbGQgJ3N5
c3RlbScgb24gTWFycywgRWFydGgsIEp1cGl0ZXIgbm93IGhhcyB2YWx1ZSAn
c29sYXIgc3lzdGVtJwp9KTsKCi8vIFNldHRpbmcgdGhlIHZhbHVlIG9mIGEg
bm9uLWV4aXN0aW5nIGZpZWxkIGluIGEgc3ViZG9jdW1lbnQgYnkgdXNpbmcg
dGhlIGRvdC1ub3RhdGlvbgpkYi51cGRhdGUoeyBwbGFuZXQ6ICdNYXJzJyB9
LCB7ICRzZXQ6IHsgImRhdGEuc2F0ZWxsaXRlcyI6IDIsICJkYXRhLnJlZCI6
IHRydWUgfSB9LCB7fSwgZnVuY3Rpb24gKCkgewogIC8vIE1hcnMgZG9jdW1l
bnQgbm93IGlzIHsgX2lkOiAnaWQxJywgc3lzdGVtOiAnc29sYXInLCBpbmhh
Yml0ZWQ6IGZhbHNlCiAgLy8gICAgICAgICAgICAgICAgICAgICAgLCBkYXRh
OiB7IHNhdGVsbGl0ZXM6IDIsIHJlZDogdHJ1ZSB9CiAgLy8gICAgICAgICAg
ICAgICAgICAgICAgfQogIC8vIE5vdCB0aGF0IHRvIHNldCBmaWVsZHMgaW4g
c3ViZG9jdW1lbnRzLCB5b3UgSEFWRSB0byB1c2UgZG90LW5vdGF0aW9uCiAg
Ly8gVXNpbmcgb2JqZWN0LW5vdGF0aW9uIHdpbGwganVzdCByZXBsYWNlIHRo
ZSB0b3AtbGV2ZWwgZmllbGQKICBkYi51cGRhdGUoeyBwbGFuZXQ6ICdNYXJz
JyB9LCB7ICRzZXQ6IHsgZGF0YTogeyBzYXRlbGxpdGVzOiAzIH0gfSB9LCB7
fSwgZnVuY3Rpb24gKCkgewogICAgLy8gTWFycyBkb2N1bWVudCBub3cgaXMg
eyBfaWQ6ICdpZDEnLCBzeXN0ZW06ICdzb2xhcicsIGluaGFiaXRlZDogZmFs
c2UKICAgIC8vICAgICAgICAgICAgICAgICAgICAgICwgZGF0YTogeyBzYXRl
bGxpdGVzOiAzIH0KICAgIC8vICAgICAgICAgICAgICAgICAgICAgIH0KICAg
IC8vIFlvdSBsb3N0IHRoZSAiZGF0YS5yZWQiIGZpZWxkIHdoaWNoIGlzIHBy
b2JhYmx5IG5vdCB0aGUgaW50ZW5kZWQgYmVoYXZpb3IKICB9KTsKfSk7Cgov
LyBEZWxldGluZyBhIGZpZWxkCmRiLnVwZGF0ZSh7IHBsYW5ldDogJ01hcnMn
IH0sIHsgJHVuc2V0OiB7IHBsYW5ldDogdHJ1ZSB9IH0sIHt9LCBmdW5jdGlv
biAoKSB7CiAgLy8gTm93IHRoZSBkb2N1bWVudCBmb3IgTWFycyBkb2Vzbid0
IGNvbnRhaW4gdGhlIHBsYW5ldCBmaWVsZAogIC8vIFlvdSBjYW4gdW5zZXQg
bmVzdGVkIGZpZWxkcyB3aXRoIHRoZSBkb3Qgbm90YXRpb24gb2YgY291cnNl
Cn0pOwoKLy8gVXBzZXJ0aW5nIGEgZG9jdW1lbnQKZGIudXBkYXRlKHsgcGxh
bmV0OiAnUGx1dG9uJyB9LCB7IHBsYW5ldDogJ1BsdXRvbicsIGluaGFiaXRl
ZDogZmFsc2UgfSwgeyB1cHNlcnQ6IHRydWUgfSwgZnVuY3Rpb24gKGVyciwg
bnVtUmVwbGFjZWQsIHVwc2VydCkgewogIC8vIG51bVJlcGxhY2VkID0gMSwg
dXBzZXJ0ID0geyBfaWQ6ICdpZDUnLCBwbGFuZXQ6ICdQbHV0b24nLCBpbmhh
Yml0ZWQ6IGZhbHNlIH0KICAvLyBBIG5ldyBkb2N1bWVudCB7IF9pZDogJ2lk
NScsIHBsYW5ldDogJ1BsdXRvbicsIGluaGFiaXRlZDogZmFsc2UgfSBoYXMg
YmVlbiBhZGRlZCB0byB0aGUgY29sbGVjdGlvbgp9KTsKCi8vIElmIHlvdSB1
cHNlcnQgd2l0aCBhIG1vZGlmaWVyLCB0aGUgdXBzZXJ0ZWQgZG9jIGlzIHRo
ZSBxdWVyeSBtb2RpZmllZCBieSB0aGUgbW9kaWZpZXIKLy8gVGhpcyBpcyBz
aW1wbGVyIHRoYW4gaXQgc291bmRzIDopCmRiLnVwZGF0ZSh7IHBsYW5ldDog
J1BsdXRvbicgfSwgeyAkaW5jOiB7IGRpc3RhbmNlOiAzOCB9IH0sIHsgdXBz
ZXJ0OiB0cnVlIH0sIGZ1bmN0aW9uICgpIHsKICAvLyBBIG5ldyBkb2N1bWVu
dCB7IF9pZDogJ2lkNScsIHBsYW5ldDogJ1BsdXRvbicsIGRpc3RhbmNlOiAz
OCB9IGhhcyBiZWVuIGFkZGVkIHRvIHRoZSBjb2xsZWN0aW9uICAKfSk7Cgov
LyBJZiB3ZSBpbnNlcnQgYSBuZXcgZG9jdW1lbnQgeyBfaWQ6ICdpZDYnLCBm
cnVpdHM6IFsnYXBwbGUnLCAnb3JhbmdlJywgJ3BlYXInXSB9IGluIHRoZSBj
b2xsZWN0aW9uLAovLyBsZXQncyBzZWUgaG93IHdlIGNhbiBtb2RpZnkgdGhl
IGFycmF5IGZpZWxkIGF0b21pY2FsbHkKCi8vICRwdXNoIGluc2VydHMgbmV3
IGVsZW1lbnRzIGF0IHRoZSBlbmQgb2YgdGhlIGFycmF5CmRiLnVwZGF0ZSh7
IF9pZDogJ2lkNicgfSwgeyAkcHVzaDogeyBmcnVpdHM6ICdiYW5hbmEnIH0g
fSwge30sIGZ1bmN0aW9uICgpIHsKICAvLyBOb3cgdGhlIGZydWl0cyBhcnJh
eSBpcyBbJ2FwcGxlJywgJ29yYW5nZScsICdwZWFyJywgJ2JhbmFuYSddCn0p
OwoKLy8gJHBvcCByZW1vdmVzIGFuIGVsZW1lbnQgZnJvbSB0aGUgZW5kIChp
ZiB1c2VkIHdpdGggMSkgb3IgdGhlIGZyb250IChpZiB1c2VkIHdpdGggLTEp
IG9mIHRoZSBhcnJheQpkYi51cGRhdGUoeyBfaWQ6ICdpZDYnIH0sIHsgJHBv
cDogeyBmcnVpdHM6IDEgfSB9LCB7fSwgZnVuY3Rpb24gKCkgewogIC8vIE5v
dyB0aGUgZnJ1aXRzIGFycmF5IGlzIFsnYXBwbGUnLCAnb3JhbmdlJ10KICAv
LyBXaXRoIHsgJHBvcDogeyBmcnVpdHM6IC0xIH0gfSwgaXQgd291bGQgaGF2
ZSBiZWVuIFsnb3JhbmdlJywgJ3BlYXInXQp9KTsKCi8vICRhZGRUb1NldCBh
ZGRzIGFuIGVsZW1lbnQgdG8gYW4gYXJyYXkgb25seSBpZiBpdCBpc24ndCBh
bHJlYWR5IGluIGl0Ci8vIEVxdWFsaXR5IGlzIGRlZXAtY2hlY2tlZCAoaS5l
LiAkYWRkVG9TZXQgd2lsbCBub3QgaW5zZXJ0IGFuIG9iamVjdCBpbiBhbiBh
cnJheSBhbHJlYWR5IGNvbnRhaW5pbmcgdGhlIHNhbWUgb2JqZWN0KQovLyBO
b3RlIHRoYXQgaXQgZG9lc24ndCBjaGVjayB3aGV0aGVyIHRoZSBhcnJheSBj
b250YWluZWQgZHVwbGljYXRlcyBiZWZvcmUgb3Igbm90CmRiLnVwZGF0ZSh7
IF9pZDogJ2lkNicgfSwgeyAkYWRkVG9TZXQ6IHsgZnJ1aXRzOiAnYXBwbGUn
IH0gfSwge30sIGZ1bmN0aW9uICgpIHsKICAvLyBUaGUgZnJ1aXRzIGFycmF5
IGRpZG4ndCBjaGFuZ2UKICAvLyBJZiB3ZSBoYWQgdXNlZCBhIGZydWl0IG5v
dCBpbiB0aGUgYXJyYXksIGUuZy4gJ2JhbmFuYScsIGl0IHdvdWxkIGhhdmUg
YmVlbiBhZGRlZCB0byB0aGUgYXJyYXkKfSk7CgovLyAkcHVsbCByZW1vdmVz
IGFsbCB2YWx1ZXMgbWF0Y2hpbmcgYSB2YWx1ZSBvciBldmVuIGFueSBOZURC
IHF1ZXJ5IGZyb20gdGhlIGFycmF5CmRiLnVwZGF0ZSh7IF9pZDogJ2lkNicg
fSwgeyAkcHVsbDogeyBmcnVpdHM6ICdhcHBsZScgfSB9LCB7fSwgZnVuY3Rp
b24gKCkgewogIC8vIE5vdyB0aGUgZnJ1aXRzIGFycmF5IGlzIFsnb3Jhbmdl
JywgJ3BlYXInXQp9KTsKZGIudXBkYXRlKHsgX2lkOiAnaWQ2JyB9LCB7ICRw
dWxsOiB7IGZydWl0czogJGluOiBbJ2FwcGxlJywgJ3BlYXInXSB9IH0sIHt9
LCBmdW5jdGlvbiAoKSB7CiAgLy8gTm93IHRoZSBmcnVpdHMgYXJyYXkgaXMg
WydvcmFuZ2UnXQp9KTsKCi8vICRlYWNoIGNhbiBiZSB1c2VkIHRvICRwdXNo
IG9yICRhZGRUb1NldCBtdWx0aXBsZSB2YWx1ZXMgYXQgb25jZQovLyBUaGlz
IGV4YW1wbGUgd29ya3MgdGhlIHNhbWUgd2F5IHdpdGggJGFkZFRvU2V0CmRi
LnVwZGF0ZSh7IF9pZDogJ2lkNicgfSwgeyAkcHVzaDogeyBmcnVpdHM6IHsg
JGVhY2g6IFsnYmFuYW5hJywgJ29yYW5nZSddIH0gfSB9LCB7fSwgZnVuY3Rp
b24gKCkgewogIC8vIE5vdyB0aGUgZnJ1aXRzIGFycmF5IGlzIFsnYXBwbGUn
LCAnb3JhbmdlJywgJ3BlYXInLCAnYmFuYW5hJywgJ29yYW5nZSddCn0pOwoK
Ly8gJHNsaWNlIGNhbiBiZSB1c2VkIGluIGN1bmp1bmN0aW9uIHdpdGggJHB1
c2ggYW5kICRlYWNoIHRvIGxpbWl0IHRoZSBzaXplIG9mIHRoZSByZXN1bHRp
bmcgYXJyYXkuCi8vIEEgdmFsdWUgb2YgMCB3aWxsIHVwZGF0ZSB0aGUgYXJy
YXkgdG8gYW4gZW1wdHkgYXJyYXkuIEEgcG9zaXRpdmUgdmFsdWUgbiB3aWxs
IGtlZXAgb25seSB0aGUgbiBmaXJzdCBlbGVtZW50cwovLyBBIG5lZ2F0aXZl
IHZhbHVlIC1uIHdpbGwga2VlcCBvbmx5IHRoZSBsYXN0IG4gZWxlbWVudHMu
Ci8vIElmICRzbGljZSBpcyBzcGVjaWZpZWQgYnV0IG5vdCAkZWFjaCwgJGVh
Y2ggaXMgc2V0IHRvIFtdCmRiLnVwZGF0ZSh7IF9pZDogJ2lkNicgfSwgeyAk
cHVzaDogeyBmcnVpdHM6IHsgJGVhY2g6IFsnYmFuYW5hJ10sICRzbGljZTog
MiB9IH0gfSwge30sIGZ1bmN0aW9uICgpIHsKICAvLyBOb3cgdGhlIGZydWl0
cyBhcnJheSBpcyBbJ2FwcGxlJywgJ29yYW5nZSddCn0pOwoKLy8gJG1pbi8k
bWF4IHRvIHVwZGF0ZSBvbmx5IGlmIHByb3ZpZGVkIHZhbHVlIGlzIGxlc3Mv
Z3JlYXRlciB0aGFuIGN1cnJlbnQgdmFsdWUKLy8gTGV0J3Mgc2F5IHRoZSBk
YXRhYmFzZSBjb250YWlucyB0aGlzIGRvY3VtZW50Ci8vIGRvYyA9IHsgX2lk
OiAnaWQnLCBuYW1lOiAnTmFtZScsIHZhbHVlOiA1IH0KZGIudXBkYXRlKHsg
X2lkOiAnaWQxJyB9LCB7ICRtaW46IHsgdmFsdWU6IDIgfSB9LCB7fSwgZnVu
Y3Rpb24gKCkgewogIC8vIFRoZSBkb2N1bWVudCB3aWxsIGJlIHVwZGF0ZWQg
dG8geyBfaWQ6ICdpZCcsIG5hbWU6ICdOYW1lJywgdmFsdWU6IDIgfQp9KTsK
CmRiLnVwZGF0ZSh7IF9pZDogJ2lkMScgfSwgeyAkbWluOiB7IHZhbHVlOiA4
IH0gfSwge30sIGZ1bmN0aW9uICgpIHsKICAvLyBUaGUgZG9jdW1lbnQgd2ls
bCBub3QgYmUgbW9kaWZpZWQKfSk7CmBgYAoKIyMjIFJlbW92aW5nIGRvY3Vt
ZW50cwpgZGIucmVtb3ZlKHF1ZXJ5LCBvcHRpb25zLCBjYWxsYmFjaylgIHdp
bGwgcmVtb3ZlIGFsbCBkb2N1bWVudHMgbWF0Y2hpbmcgYHF1ZXJ5YCBhY2Nv
cmRpbmcgdG8gYG9wdGlvbnNgICAKKiBgcXVlcnlgIGlzIHRoZSBzYW1lIGFz
IHRoZSBvbmVzIHVzZWQgZm9yIGZpbmRpbmcgYW5kIHVwZGF0aW5nCiogYG9w
dGlvbnNgIG9ubHkgb25lIG9wdGlvbiBmb3Igbm93OiBgbXVsdGlgIHdoaWNo
IGFsbG93cyB0aGUgcmVtb3ZhbCBvZiBtdWx0aXBsZSBkb2N1bWVudHMgaWYg
c2V0IHRvIHRydWUuIERlZmF1bHQgaXMgZmFsc2UKKiBgY2FsbGJhY2tgIGlz
IG9wdGlvbmFsLCBzaWduYXR1cmU6IGVyciwgbnVtUmVtb3ZlZAoKYGBgamF2
YXNjcmlwdAovLyBMZXQncyB1c2UgdGhlIHNhbWUgZXhhbXBsZSBjb2xsZWN0
aW9uIGFzIGluIHRoZSAiZmluZGluZyBkb2N1bWVudCIgcGFydAovLyB7IF9p
ZDogJ2lkMScsIHBsYW5ldDogJ01hcnMnLCBzeXN0ZW06ICdzb2xhcicsIGlu
aGFiaXRlZDogZmFsc2UgfQovLyB7IF9pZDogJ2lkMicsIHBsYW5ldDogJ0Vh
cnRoJywgc3lzdGVtOiAnc29sYXInLCBpbmhhYml0ZWQ6IHRydWUgfQovLyB7
IF9pZDogJ2lkMycsIHBsYW5ldDogJ0p1cGl0ZXInLCBzeXN0ZW06ICdzb2xh
cicsIGluaGFiaXRlZDogZmFsc2UgfQovLyB7IF9pZDogJ2lkNCcsIHBsYW5l
dDogJ09taWNyb24gUGVyc2lhIDgnLCBzeXN0ZW06ICdmdXR1cmFtYScsIGlu
aGFiaXRlZDogdHJ1ZSB9CgovLyBSZW1vdmUgb25lIGRvY3VtZW50IGZyb20g
dGhlIGNvbGxlY3Rpb24KLy8gb3B0aW9ucyBzZXQgdG8ge30gc2luY2UgdGhl
IGRlZmF1bHQgZm9yIG11bHRpIGlzIGZhbHNlCmRiLnJlbW92ZSh7IF9pZDog
J2lkMicgfSwge30sIGZ1bmN0aW9uIChlcnIsIG51bVJlbW92ZWQpIHsKICAv
LyBudW1SZW1vdmVkID0gMQp9KTsKCi8vIFJlbW92ZSBtdWx0aXBsZSBkb2N1
bWVudHMKZGIucmVtb3ZlKHsgc3lzdGVtOiAnc29sYXInIH0sIHsgbXVsdGk6
IHRydWUgfSwgZnVuY3Rpb24gKGVyciwgbnVtUmVtb3ZlZCkgewogIC8vIG51
bVJlbW92ZWQgPSAzCiAgLy8gQWxsIHBsYW5ldHMgZnJvbSB0aGUgc29sYXIg
c3lzdGVtIHdlcmUgcmVtb3ZlZAp9KTsKCi8vIFJlbW92aW5nIGFsbCBkb2N1
bWVudHMgd2l0aCB0aGUgJ21hdGNoLWFsbCcgcXVlcnkKZGIucmVtb3ZlKHt9
LCB7IG11bHRpOiB0cnVlIH0sIGZ1bmN0aW9uIChlcnIsIG51bVJlbW92ZWQp
IHsKfSk7CmBgYAoKIyMjIEluZGV4aW5nCk5lREIgc3VwcG9ydHMgaW5kZXhp
bmcuIEl0IGdpdmVzIGEgdmVyeSBuaWNlIHNwZWVkIGJvb3N0IGFuZCBjYW4g
YmUgdXNlZCB0byBlbmZvcmNlIGEgdW5pcXVlIGNvbnN0cmFpbnQgb24gYSBm
aWVsZC4gWW91IGNhbiBpbmRleCBhbnkgZmllbGQsIGluY2x1ZGluZyBmaWVs
ZHMgaW4gbmVzdGVkIGRvY3VtZW50cyB1c2luZyB0aGUgZG90IG5vdGF0aW9u
LiBGb3Igbm93LCBpbmRleGVzIGFyZSBvbmx5IHVzZWQgdG8gc3BlZWQgdXAg
YmFzaWMgcXVlcmllcyBhbmQgcXVlcmllcyB1c2luZyBgJGluYCwgYCRsdGAs
IGAkbHRlYCwgYCRndGAgYW5kIGAkZ3RlYC4gVGhlIGluZGV4ZWQgdmFsdWVz
IGNhbm5vdCBiZSBvZiB0eXBlIGFycmF5IG9mIG9iamVjdC4KClRvIGNyZWF0
ZSBhbiBpbmRleCwgdXNlIGBkYXRhc3RvcmUuZW5zdXJlSW5kZXgob3B0aW9u
cywgY2IpYCwgd2hlcmUgY2FsbGJhY2sgaXMgb3B0aW9uYWwgYW5kIGdldCBw
YXNzZWQgYW4gZXJyb3IgaWYgYW55ICh1c3VhbGx5IGEgdW5pcXVlIGNvbnN0
cmFpbnQgdGhhdCB3YXMgdmlvbGF0ZWQpLiBgZW5zdXJlSW5kZXhgIGNhbiBi
ZSBjYWxsZWQgd2hlbiB5b3Ugd2FudCwgZXZlbiBhZnRlciBzb21lIGRhdGEg
d2FzIGluc2VydGVkLCB0aG91Z2ggaXQncyBiZXN0IHRvIGNhbGwgaXQgYXQg
YXBwbGljYXRpb24gc3RhcnR1cC4gVGhlIG9wdGlvbnMgYXJlOiAgCgoqICoq
ZmllbGROYW1lKiogKHJlcXVpcmVkKTogbmFtZSBvZiB0aGUgZmllbGQgdG8g
aW5kZXguIFVzZSB0aGUgZG90IG5vdGF0aW9uIHRvIGluZGV4IGEgZmllbGQg
aW4gYSBuZXN0ZWQgZG9jdW1lbnQuCiogKip1bmlxdWUqKiAob3B0aW9uYWws
IGRlZmF1bHRzIHRvIGBmYWxzZWApOiBlbmZvcmNlIGZpZWxkIHVuaXF1ZW5l
c3MuIE5vdGUgdGhhdCBhIHVuaXF1ZSBpbmRleCB3aWxsIHJhaXNlIGFuIGVy
cm9yIGlmIHlvdSB0cnkgdG8gaW5kZXggdHdvIGRvY3VtZW50cyBmb3Igd2hp
Y2ggdGhlIGZpZWxkIGlzIG5vdCBkZWZpbmVkLgoqICoqc3BhcnNlKiogKG9w
dGlvbmFsLCBkZWZhdWx0cyB0byBgZmFsc2VgKTogZG9uJ3QgaW5kZXggZG9j
dW1lbnRzIGZvciB3aGljaCB0aGUgZmllbGQgaXMgbm90IGRlZmluZWQuIFVz
ZSB0aGlzIG9wdGlvbiBhbG9uZyB3aXRoICJ1bmlxdWUiIGlmIHlvdSB3YW50
IHRvIGFjY2VwdCBtdWx0aXBsZSBkb2N1bWVudHMgZm9yIHdoaWNoIGl0IGlz
IG5vdCBkZWZpbmVkLgoqICoqZXhwaXJlQWZ0ZXJTZWNvbmRzKiogKG51bWJl
ciBvZiBzZWNvbmRzLCBvcHRpb25hbCk6IGlmIHNldCwgdGhlIGNyZWF0ZWQg
aW5kZXggaXMgYSBUVEwgKHRpbWUgdG8gbGl2ZSkgaW5kZXgsIHRoYXQgd2ls
bCBhdXRvbWF0aWNhbGx5IHJlbW92ZSBkb2N1bWVudHMgd2hlbiB0aGUgc3lz
dGVtIGRhdGUgYmVjb21lcyBsYXJnZXIgdGhhbiB0aGUgZGF0ZSBvbiB0aGUg
aW5kZXhlZCBmaWVsZCBwbHVzIGBleHBpcmVBZnRlclNlY29uZHNgLiBEb2N1
bWVudHMgd2hlcmUgdGhlIGluZGV4ZWQgZmllbGQgaXMgbm90IHNwZWNpZmll
ZCBvciBub3QgYSBgRGF0ZWAgb2JqZWN0IGFyZSBpZ25vcmVkCgpOb3RlOiB0
aGUgYF9pZGAgaXMgYXV0b21hdGljYWxseSBpbmRleGVkIHdpdGggYSB1bmlx
dWUgY29uc3RyYWludCwgbm8gbmVlZCB0byBjYWxsIGBlbnN1cmVJbmRleGAg
b24gaXQuCgpZb3UgY2FuIHJlbW92ZSBhIHByZXZpb3VzbHkgY3JlYXRlZCBp
bmRleCB3aXRoIGBkYXRhc3RvcmUucmVtb3ZlSW5kZXgoZmllbGROYW1lLCBj
YilgLgoKSWYgeW91ciBkYXRhc3RvcmUgaXMgcGVyc2lzdGVudCwgdGhlIGlu
ZGV4ZXMgeW91IGNyZWF0ZWQgYXJlIHBlcnNpc3RlZCBpbiB0aGUgZGF0YWZp
bGUsIHdoZW4geW91IGxvYWQgdGhlIGRhdGFiYXNlIGEgc2Vjb25kIHRpbWUg
dGhleSBhcmUgYXV0b21hdGljYWxseSBjcmVhdGVkIGZvciB5b3UuIE5vIG5l
ZWQgdG8gcmVtb3ZlIGFueSBgZW5zdXJlSW5kZXhgIHRob3VnaCwgaWYgaXQg
aXMgY2FsbGVkIG9uIGEgZGF0YWJhc2UgdGhhdCBhbHJlYWR5IGhhcyB0aGUg
aW5kZXgsIG5vdGhpbmcgaGFwcGVucy4KCmBgYGphdmFzY3JpcHQKZGIuZW5z
dXJlSW5kZXgoeyBmaWVsZE5hbWU6ICdzb21lZmllbGQnIH0sIGZ1bmN0aW9u
IChlcnIpIHsKICAvLyBJZiB0aGVyZSB3YXMgYW4gZXJyb3IsIGVyciBpcyBu
b3QgbnVsbAp9KTsKCi8vIFVzaW5nIGEgdW5pcXVlIGNvbnN0cmFpbnQgd2l0
aCB0aGUgaW5kZXgKZGIuZW5zdXJlSW5kZXgoeyBmaWVsZE5hbWU6ICdzb21l
ZmllbGQnLCB1bmlxdWU6IHRydWUgfSwgZnVuY3Rpb24gKGVycikgewp9KTsK
Ci8vIFVzaW5nIGEgc3BhcnNlIHVuaXF1ZSBpbmRleApkYi5lbnN1cmVJbmRl
eCh7IGZpZWxkTmFtZTogJ3NvbWVmaWVsZCcsIHVuaXF1ZTogdHJ1ZSwgc3Bh
cnNlOiB0cnVlIH0sIGZ1bmN0aW9uIChlcnIpIHsKfSk7CgoKLy8gRm9ybWF0
IG9mIHRoZSBlcnJvciBtZXNzYWdlIHdoZW4gdGhlIHVuaXF1ZSBjb25zdHJh
aW50IGlzIG5vdCBtZXQKZGIuaW5zZXJ0KHsgc29tZWZpZWxkOiAnbmVkYicg
fSwgZnVuY3Rpb24gKGVycikgewogIC8vIGVyciBpcyBudWxsCiAgZGIuaW5z
ZXJ0KHsgc29tZWZpZWxkOiAnbmVkYicgfSwgZnVuY3Rpb24gKGVycikgewog
ICAgLy8gZXJyIGlzIHsgZXJyb3JUeXBlOiAndW5pcXVlVmlvbGF0ZWQnCiAg
ICAvLyAgICAgICAgLCBrZXk6ICduYW1lJwogICAgLy8gICAgICAgICwgbWVz
c2FnZTogJ1VuaXF1ZSBjb25zdHJhaW50IHZpb2xhdGVkIGZvciBrZXkgbmFt
ZScgfQogIH0pOwp9KTsKCi8vIFJlbW92ZSBpbmRleCBvbiBmaWVsZCBzb21l
ZmllbGQKZGIucmVtb3ZlSW5kZXgoJ3NvbWVmaWVsZCcsIGZ1bmN0aW9uIChl
cnIpIHsKfSk7CgovLyBFeGFtcGxlIG9mIHVzaW5nIGV4cGlyZUFmdGVyU2Vj
b25kcyB0byByZW1vdmUgZG9jdW1lbnRzIDEgaG91cgovLyBhZnRlciB0aGVp
ciBjcmVhdGlvbiAoZGIncyB0aW1lc3RhbXBEYXRhIG9wdGlvbiBpcyB0cnVl
IGhlcmUpCmRiLmVuc3VyZUluZGV4KHsgZmllbGROYW1lOiAnY3JlYXRlZEF0
JywgZXhwaXJlQWZ0ZXJTZWNvbmRzOiAzNjAwIH0sIGZ1bmN0aW9uIChlcnIp
IHsKfSk7CgovLyBZb3UgY2FuIGFsc28gdXNlIHRoZSBvcHRpb24gdG8gc2V0
IGFuIGV4cGlyYXRpb24gZGF0ZSBsaWtlIHNvCmRiLmVuc3VyZUluZGV4KHsg
ZmllbGROYW1lOiAnZXhwaXJhdGlvbkRhdGUnLCBleHBpcmVBZnRlclNlY29u
ZHM6IDAgfSwgZnVuY3Rpb24gKGVycikgewogIC8vIE5vdyBhbGwgZG9jdW1l
bnRzIHdpbGwgZXhwaXJlIHdoZW4gc3lzdGVtIHRpbWUgcmVhY2hlcyB0aGUg
ZGF0ZSBpbiB0aGVpcgogIC8vIGV4cGlyYXRpb25EYXRlIGZpZWxkCn0pOwoK
YGBgCgoqKk5vdGU6KiogdGhlIGBlbnN1cmVJbmRleGAgZnVuY3Rpb24gY3Jl
YXRlcyB0aGUgaW5kZXggc3luY2hyb25vdXNseSwgc28gaXQncyBiZXN0IHRv
IHVzZSBpdCBhdCBhcHBsaWNhdGlvbiBzdGFydHVwLiBJdCdzIHF1aXRlIGZh
c3Qgc28gaXQgZG9lc24ndCBpbmNyZWFzZSBzdGFydHVwIHRpbWUgbXVjaCAo
MzUgbXMgZm9yIGEgY29sbGVjdGlvbiBjb250YWluaW5nIDEwLDAwMCBkb2N1
bWVudHMpLgoKCiMjIEJyb3dzZXIgdmVyc2lvbgpUaGUgYnJvd3NlciB2ZXJz
aW9uIGFuZCBpdHMgbWluaWZpZWQgY291bnRlcnBhcnQgYXJlIGluIHRoZSBg
YnJvd3Nlci12ZXJzaW9uL291dGAgZGlyZWN0b3J5LiBZb3Ugb25seSBuZWVk
IHRvIHJlcXVpcmUgYG5lZGIuanNgIG9yIGBuZWRiLm1pbi5qc2AgaW4geW91
ciBIVE1MIGZpbGUgYW5kIHRoZSBnbG9iYWwgb2JqZWN0IGBOZWRiYCBjYW4g
YmUgdXNlZCByaWdodCBhd2F5LCB3aXRoIHRoZSBzYW1lIEFQSSBhcyB0aGUg
c2VydmVyIHZlcnNpb246CgpgYGAKPHNjcmlwdCBzcmM9Im5lZGIubWluLmpz
Ij48L3NjcmlwdD4KPHNjcmlwdD4KICB2YXIgZGIgPSBuZXcgTmVkYigpOyAg
IC8vIENyZWF0ZSBhbiBpbi1tZW1vcnkgb25seSBkYXRhc3RvcmUKICAKICBk
Yi5pbnNlcnQoeyBwbGFuZXQ6ICdFYXJ0aCcgfSwgZnVuY3Rpb24gKGVycikg
ewogICBkYi5maW5kKHt9LCBmdW5jdGlvbiAoZXJyLCBkb2NzKSB7CiAgICAg
Ly8gZG9jcyBjb250YWlucyB0aGUgdHdvIHBsYW5ldHMgRWFydGggYW5kIE1h
cnMKICAgfSk7CiAgfSk7Cjwvc2NyaXB0PgpgYGAKCklmIHlvdSBzcGVjaWZ5
IGEgYGZpbGVuYW1lYCwgdGhlIGRhdGFiYXNlIHdpbGwgYmUgcGVyc2lzdGVu
dCwgYW5kIGF1dG9tYXRpY2FsbHkgc2VsZWN0IHRoZSBiZXN0IHN0b3JhZ2Ug
bWV0aG9kIGF2YWlsYWJsZSAoSW5kZXhlZERCLCBXZWJTUUwgb3IgbG9jYWxT
dG9yYWdlKSBkZXBlbmRpbmcgb24gdGhlIGJyb3dzZXIuIEluIG1vc3QgY2Fz
ZXMgdGhhdCBtZWFucyBhIGxvdCBvZiBkYXRhIGNhbiBiZSBzdG9yZWQsIHR5
cGljYWxseSBpbiBodW5kcmVkcyBvZiBNQi4gKipXQVJOSU5HKio6IHRoZSBz
dG9yYWdlIHN5c3RlbSBjaGFuZ2VkIGJldHdlZW4gdjEuMyBhbmQgdjEuNCBh
bmQgaXMgTk9UIGJhY2stY29tcGF0aWJsZSEgWW91ciBhcHBsaWNhdGlvbiBu
ZWVkcyB0byByZXN5bmMgY2xpZW50LXNpZGUgd2hlbiB5b3UgdXBncmFkZSBO
ZURCLgoKTmVEQiBpcyBjb21wYXRpYmxlIHdpdGggYWxsIG1ham9yIGJyb3dz
ZXJzOiBDaHJvbWUsIFNhZmFyaSwgRmlyZWZveCwgSUU5Ky4gVGVzdHMgYXJl
IGluIHRoZSBgYnJvd3Nlci12ZXJzaW9uL3Rlc3RgIGRpcmVjdG9yeSAoZmls
ZXMgYGluZGV4Lmh0bWxgIGFuZCBgdGVzdFBlcnNpc3RlbmNlLmh0bWxgKS4K
CklmIHlvdSBmb3JrIGFuZCBtb2RpZnkgbmVkYiwgeW91IGNhbiBidWlsZCB0
aGUgYnJvd3NlciB2ZXJzaW9uIGZyb20gdGhlIHNvdXJjZXMsIHRoZSBidWls
ZCBzY3JpcHQgaXMgYGJyb3dzZXItdmVyc2lvbi9idWlsZC5qc2AuCgoKIyMg
UGVyZm9ybWFuY2UKIyMjIFNwZWVkCk5lREIgaXMgbm90IGludGVuZGVkIHRv
IGJlIGEgcmVwbGFjZW1lbnQgb2YgbGFyZ2Utc2NhbGUgZGF0YWJhc2VzIHN1
Y2ggYXMgTW9uZ29EQiwgYW5kIGFzIHN1Y2ggd2FzIG5vdCBkZXNpZ25lZCBm
b3Igc3BlZWQuIFRoYXQgc2FpZCwgaXQgaXMgc3RpbGwgcHJldHR5IGZhc3Qg
b24gdGhlIGV4cGVjdGVkIGRhdGFzZXRzLCBlc3BlY2lhbGx5IGlmIHlvdSB1
c2UgaW5kZXhpbmcuIE9uIGEgdHlwaWNhbCwgbm90LXNvLWZhc3QgZGV2IG1h
Y2hpbmUsIGZvciBhIGNvbGxlY3Rpb24gY29udGFpbmluZyAxMCwwMDAgZG9j
dW1lbnRzLCB3aXRoIGluZGV4aW5nOiAgCiogSW5zZXJ0OiAqKjEwLDY4MCBv
cHMvcyoqCiogRmluZDogKio0MywyOTAgb3BzL3MqKgoqIFVwZGF0ZTogKio4
LDAwMCBvcHMvcyoqCiogUmVtb3ZlOiAqKjExLDc1MCBvcHMvcyoqICAKCllv
dSBjYW4gcnVuIHRoZXNlIHNpbXBsZSBiZW5jaG1hcmtzIGJ5IGV4ZWN1dGlu
ZyB0aGUgc2NyaXB0cyBpbiB0aGUgYGJlbmNobWFya3NgIGZvbGRlci4gUnVu
IHRoZW0gd2l0aCB0aGUgYC0taGVscGAgZmxhZyB0byBzZWUgaG93IHRoZXkg
d29yay4KCiMjIyBNZW1vcnkgZm9vdHByaW50CkEgY29weSBvZiB0aGUgd2hv
bGUgZGF0YWJhc2UgaXMga2VwdCBpbiBtZW1vcnkuIFRoaXMgaXMgbm90IG11
Y2ggb24gdGhlCmV4cGVjdGVkIGtpbmQgb2YgZGF0YXNldHMgKDIwTUIgZm9y
IDEwLDAwMCAyS0IgZG9jdW1lbnRzKS4KCiMjIFVzZSBpbiBvdGhlciBzZXJ2
aWNlcwoqIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9sb3Vpc2NoYXRy
aW90L2Nvbm5lY3QtbmVkYi1zZXNzaW9uIgogIHRhcmdldD0iX2JsYW5rIj5j
b25uZWN0LW5lZGItc2Vzc2lvbjwvYT4gaXMgYSBzZXNzaW9uIHN0b3JlIGZv
cgpDb25uZWN0IGFuZCBFeHByZXNzLCBiYWNrZWQgYnkgbmVkYgoqIElmIHlv
dSBtb3N0bHkgdXNlIE5lREIgZm9yIGxvZ2dpbmcgcHVycG9zZXMgYW5kIGRv
bid0IHdhbnQgdGhlIG1lbW9yeSBmb290cHJpbnQgb2YgeW91ciBhcHBsaWNh
dGlvbiB0byBncm93IHRvbyBsYXJnZSwgeW91IGNhbiB1c2UgPGEgaHJlZj0i
aHR0cHM6Ly9naXRodWIuY29tL2xvdWlzY2hhdHJpb3QvbmVkYi1sb2dnZXIi
IHRhcmdldD0iX2JsYW5rIj5OZURCIExvZ2dlcjwvYT4gdG8gaW5zZXJ0IGRv
Y3VtZW50cyBpbiBhIE5lREItcmVhZGFibGUgZGF0YWJhc2UKKiBJZiB5b3Un
dmUgb3V0Z3Jvd24gTmVEQiwgc3dpdGNoaW5nIHRvIE1vbmdvREIgd29uJ3Qg
YmUgdG9vIGhhcmQgYXMgaXQgaXMgdGhlIHNhbWUgQVBJLiBVc2UgPGEgaHJl
Zj0iaHR0cHM6Ly9naXRodWIuY29tL2xvdWlzY2hhdHJpb3QvbmVkYi10by1t
b25nb2RiIiB0YXJnZXQ9Il9ibGFuayI+dGhpcyB1dGlsaXR5PC9hPiB0byB0
cmFuc2ZlciB0aGUgZGF0YSBmcm9tIGEgTmVEQiBkYXRhYmFzZSB0byBhIE1v
bmdvREIgY29sbGVjdGlvbgoqIEFuIE9ETSBmb3IgTmVEQjogPGEgaHJlZj0i
aHR0cHM6Ly9naXRodWIuY29tL3Njb3R0d3JvYmluc29uL2NhbW8iIHRhcmdl
dD0iX2JsYW5rIj5DYW1vPC9hPgoKIyMgUHVsbCByZXF1ZXN0cwoqKkltcG9y
dGFudDogSSBjb25zaWRlciBOZURCIHRvIGJlIGZlYXR1cmUtY29tcGxldGUs
IGkuZS4gaXQgZG9lcyBldmVyeXRoaW5nIEkgdGhpbmsgaXQgc2hvdWxkIGFu
ZCBub3RoaW5nIG1vcmUuIEFzIGEgZ2VuZXJhbCBydWxlIEkgd2lsbCBub3Qg
YWNjZXB0IHB1bGwgcmVxdWVzdHMgYW55bW9yZSwgZXhjZXB0IGZvciBidWdm
aXhlcyAob2YgY291cnNlKSBvciBpZiBJIGdldCBjb252aW5jZWQgSSBvdmVy
bG9vayBhIHN0cm9uZyB1c2VjYXNlLiBQbGVhc2UgbWFrZSBzdXJlIHRvIG9w
ZW4gYW4gaXNzdWUgYmVmb3JlIHNwZW5kaW5nIHRpbWUgb24gYW55IFBSLioq
CgpJZiB5b3Ugc3VibWl0IGEgcHVsbCByZXF1ZXN0LCB0aGFua3MhIFRoZXJl
IGFyZSBhIGNvdXBsZSBydWxlcyB0byBmb2xsb3cgdGhvdWdoIHRvIG1ha2Ug
aXQgbWFuYWdlYWJsZToKKiBUaGUgcHVsbCByZXF1ZXN0IHNob3VsZCBiZSBh
dG9taWMsIGkuZS4gY29udGFpbiBvbmx5IG9uZSBmZWF0dXJlLiBJZiBpdCBj
b250YWlucyBtb3JlLCBwbGVhc2Ugc3VibWl0IG11bHRpcGxlIHB1bGwgcmVx
dWVzdHMuIFJldmlld2luZyBtYXNzaXZlLCAxMDAwIGxvYysgcHVsbCByZXF1
ZXN0cyBpcyBleHRyZW1lbHkgaGFyZC4KKiBMaWtld2lzZSwgaWYgZm9yIG9u
ZSB1bmlxdWUgZmVhdHVyZSB0aGUgcHVsbCByZXF1ZXN0IGdyb3dzIHRvbyBs
YXJnZSAobW9yZSB0aGFuIDIwMCBsb2MgdGVzdHMgbm90IGluY2x1ZGVkKSwg
cGxlYXNlIGdldCBpbiB0b3VjaCBmaXJzdC4KKiBQbGVhc2Ugc3RpY2sgdG8g
dGhlIGN1cnJlbnQgY29kaW5nIHN0eWxlLiBJdCdzIGltcG9ydGFudCB0aGF0
IHRoZSBjb2RlIHVzZXMgYSBjb2hlcmVudCBzdHlsZSBmb3IgcmVhZGFiaWxp
dHkuCiogRG8gbm90IGluY2x1ZGUgc3lsaXN0aWMgaW1wcm92ZW1lbnRzICgi
aG91c2VrZWVwaW5nIikuIElmIHlvdSB0aGluayBvbmUgcGFydCBkZXNlcnZl
cyBsb3RzIG9mIGhvdXNla2VlcGluZywgdXNlIGEgc2VwYXJhdGUgcHVsbCBy
ZXF1ZXN0IHNvIGFzIG5vdCB0byBwb2xsdXRlIHRoZSBjb2RlLgoqIERvbid0
IGZvcmdldCB0ZXN0cyBmb3IgeW91ciBuZXcgZmVhdHVyZS4gQWxzbyBkb24n
dCBmb3JnZXQgdG8gcnVuIHRoZSB3aG9sZSB0ZXN0IHN1aXRlIGJlZm9yZSBz
dWJtaXR0aW5nIHRvIG1ha2Ugc3VyZSB5b3UgZGlkbid0IGludHJvZHVjZSBy
ZWdyZXNzaW9ucy4KKiBEbyBub3QgYnVpbGQgdGhlIGJyb3dzZXIgdmVyc2lv
biBpbiB5b3VyIGJyYW5jaCwgSSdsbCB0YWtlIGNhcmUgb2YgaXQgb25jZSB0
aGUgY29kZSBpcyBtZXJnZWQuCiogVXBkYXRlIHRoZSByZWFkbWUgYWNjb3Jk
aW5nbHkuCiogTGFzdCBidXQgbm90IGxlYXN0OiBrZWVwIGluIG1pbmQgd2hh
dCBOZURCJ3MgbWluZHNldCBpcyEgVGhlIGdvYWwgaXMgbm90IHRvIGJlIGEg
cmVwbGFjZW1lbnQgZm9yIE1vbmdvREIsIGJ1dCB0byBoYXZlIGEgcHVyZSBK
UyBkYXRhYmFzZSwgZWFzeSB0byB1c2UsIGNyb3NzIHBsYXRmb3JtLCBmYXN0
IGFuZCBleHByZXNzaXZlIGVub3VnaCBmb3IgdGhlIHRhcmdldCBwcm9qZWN0
cyAoc21hbGwgYW5kIHNlbGYgY29udGFpbmVkIGFwcHMgb24gc2VydmVyL2Rl
c2t0b3AvYnJvd3Nlci9tb2JpbGUpLiBTb21ldGltZXMgaXQncyBiZXR0ZXIg
dG8gc2hvb3QgZm9yIHNpbXBsaWNpdHkgdGhhbiBmb3IgQVBJIGNvbXBsZXRl
bmVzcyB3aXRoIHJlZ2FyZHMgdG8gTW9uZ29EQi4KCiMjIEJ1ZyByZXBvcnRp
bmcgZ3VpZGVsaW5lcwpJZiB5b3UgcmVwb3J0IGEgYnVnLCB0aGFuayB5b3Uh
IFRoYXQgc2FpZCBmb3IgdGhlIHByb2Nlc3MgdG8gYmUgbWFuYWdlYWJsZSBw
bGVhc2Ugc3RyaWN0bHkgYWRoZXJlIHRvIHRoZSBmb2xsb3dpbmcgZ3VpZGVs
aW5lcy4gSSdsbCBub3QgYmUgYWJsZSB0byBoYW5kbGUgYnVnIHJlcG9ydHMg
dGhhdCBkb24ndDoKKiBZb3VyIGJ1ZyByZXBvcnQgc2hvdWxkIGJlIGEgc2Vs
Zi1jb250YWluaW5nIGdpc3QgY29tcGxldGUgd2l0aCBhIHBhY2thZ2UuanNv
biBmb3IgYW55IGRlcGVuZGVuY2llcyB5b3UgbmVlZC4gSSBuZWVkIHRvIHJ1
biB0aHJvdWdoIGEgc2ltcGxlIGBnaXQgY2xvbmUgZ2lzdDsgbnBtIGluc3Rh
bGw7IG5vZGUgYnVncmVwb3J0LmpzYCwgbm90aGluZyBtb3JlLgoqIEl0IHNo
b3VsZCB1c2UgYXNzZXJ0aW9ucyB0byBzaG93Y2FzZSB0aGUgZXhwZWN0ZWQg
dnMgYWN0dWFsIGJlaGF2aW9yIGFuZCBiZSBoeXN0ZXJlc2lzLXByb29mLiBJ
dCdzIHF1aXRlIHNpbXBsZSBpbiBmYWN0LCBzZWUgdGhpcyBleGFtcGxlOiBo
dHRwczovL2dpc3QuZ2l0aHViLmNvbS9sb3Vpc2NoYXRyaW90LzIyMGNmNmJk
MjljN2RlMDZhNDg2CiogU2ltcGxpZnkgYXMgbXVjaCBhcyB5b3UgY2FuLiBT
dHJpcCBhbGwgeW91ciBhcHBsaWNhdGlvbi1zcGVjaWZpYyBjb2RlLiBNb3N0
IG9mIHRoZSB0aW1lIHlvdSB3aWxsIHNlZSB0aGF0IHRoZXJlIGlzIG5vIGJ1
ZyBidXQgYW4gZXJyb3IgaW4geW91ciBjb2RlIDopCiogNTAgbGluZXMgbWF4
LiBJZiB5b3UgbmVlZCBtb3JlLCByZWFkIHRoZSBhYm92ZSBwb2ludCBhbmQg
cmV3b3JrIHlvdXIgYnVnIHJlcG9ydC4gSWYgeW91J3JlICoqcmVhbGx5Kiog
Y29udmluY2VkIHlvdSBuZWVkIG1vcmUsIHBsZWFzZSBleHBsYWluIHByZWNp
c2VseSBpbiB0aGUgaXNzdWUuCiogVGhlIGNvZGUgc2hvdWxkIGJlIEphdmFz
Y3JpcHQsIG5vdCBDb2ZmZWVzY3JpcHQuCgojIyMgQml0Y29pbnMKWW91IGRv
bid0IGhhdmUgdGltZT8gWW91IGNhbiBzdXBwb3J0IE5lREIgYnkgc2VuZGlu
ZyBiaXRjb2lucyB0byB0aGlzIGFkZHJlc3M6IDFkRFpMbldwQmJvZFBpTjhz
aXp6WXJnYXo1aWFoRnliMQoKCiMjIExpY2Vuc2UgCgpTZWUgW0xpY2Vuc2Vd
KExJQ0VOU0UpCg==
",,10618,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'history.js',1274749,"b'History.js gracefully supports the HTML5 History/State APIs (pushState, replaceState, onPopState) in all browsers. Including continued support for data, titles, replaceState. Supports jQuery, MooTools and Prototype.  For HTML5 browsers this means that you can modify the URL directly, without needing to use hashes anymore. For HTML4 browsers it will revert back to using the old onhashchange functionality.'",b'JavaScript',233,10617,,335,False,b'https://api.github.com/repos/browserstate/history.js/forks',"TWVtbwo9PT09PT09PT09PT09PT09PT0KV2hpbGUgdGhlcmUgYXJlIHNvbWUg
W2xlZ2l0aW1hdGUgYnVncyBhbmQgZGlmZmVyZW5jZXMgaW4gc3RhdGUgaGFu
ZGxpbmcgZXZlbiBpbiBtb2Rlcm4gYnJvd3NlcnNdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9icm93c2Vyc3RhdGUvaGlzdG9yeS5qcy93aWtpL1RoZS1TdGF0ZS1v
Zi10aGUtSFRNTDUtSGlzdG9yeS1BUEkpLCB0aGV5IGFyZSByZWxhdGl2ZWx5
IHNtYWxsIGVub3VnaCBub3cgdGhhdCB5b3UgY2FuIGp1c3QgdXNlIHRoZSBu
YXRpdmUgSFRNTDUgSGlzdG9yeSBBUEkuIElmIHlvdSBpbnRlbmQgdG8gc3Vw
cG9ydCBsZWdhY3kgYnJvd3NlcnMsIHRoZW4gSGlzdG9yeS5qcyBpcyB5b3Vy
IGJldC4KClRoaXMgbm90aWNlIGlzIGhlcmUgYXMgSGlzdG9yeS5qcyBkb2Vz
IG5vdCByZWNlaXZlIGVub3VnaCBmdW5kaW5nIHRvIGJlIG1haW50YWluZWQs
IHNvIGl0IGV4aXN0cyBvbmx5IGluIGxlZ2FjeSBjb25kaXRpb24gZm9yIGxl
Z2FjeSBicm93c2Vycy4gUGVyaGFwcyBpdCBzdGlsbCB3b3JrcyBmb3IgbW9k
ZXJuIGJyb3dzZXJzLCBidXQgaXQgY291bGQgcmVhbGx5IGRvIHdpdGggbWFp
bnRlbmFuY2UuIE1haW50ZW5hbmNlIGlzIHZlcnkgZGlmZmljdWx0IGFzIHRo
ZSBsaWJyYXJ5IHJlcXVpcmVzIG1hbnVhbCB0ZXN0aW5nIGluIEhUTUw1IGFu
ZCBIVE1MNCBtb2RlcywgYW5kIGZvciBlYWNoIGFkYXB0ZXIsIGFuZCBmb3Ig
ZWFjaCBicm93c2VyLiBTbyB0aGF0IG1lYW5zIGAyXigjIG9mIGFkYXB0ZXJz
KV4oIyBvZiBicm93c2VycyBhbmQgdGhlaXIgdmVyc2lvbnMpYCB0ZXN0cyB0
aGF0IG5lZWQgdG8gYmUgcnVuIGJ5IGEgaHVtYW4uIFRlc3RzIG5lZWQgdG8g
YmUgcnVuIGJ5IGEgaHVtYW4gYXMgY2VydGFpbiBmYWlsdXJlcyByZXF1aXJl
IGJyb3dzZXIgaW50ZXJhY3Rpb25zLCBzdWNoIGFzIG5hdmlnYXRpbmcgZnJv
bSB0aGUgdGVzdCBzdWl0ZSB0byBhIGRpZmZlcmVudCBkb21haW4gYW5kIGJh
Y2sgYWdhaW4sIG9yIGNsaWNraW5nIHRoZSBwaHlzaWNhbCBiYWNrIGJ1dHRv
bnMsIG9yIGNoZWNraW5nIGlmIHRoZSBwaHlzaWNhbCBiYWNrIGJ1dHRvbnMg
YWN0dWFsbHkgd29yay4gVGhpcyB0YWtlcyBhIGxvdCBvZiB0aW1lLgoKRGVz
cGl0ZSBIaXN0b3J5LmpzIGJlaW5nIG9uZSBvZiB0aGUgbW9zdCBwb3B1bGFy
IEphdmFTY3JpcHQgbGlicmFyaWVzIHRoZXJlIGlzLCBhbmQgaGFzIGJlZW4g
dXNlZCBieSBldmVuIG11bHRpLW1pbGxpb24tdXNlciBjb21wYW5pZXMgaW4g
aXRzIHRpbWUgLSB0aGUgcmVhbGl0eSBvZiBlY29ub215IGFuZCBjb21wYW55
IHByYWN0aWNlcyBzZWVtcyB0byBiZSB0aGF0IGNvbXBhbmllcyBwcmVmZXIg
dG8gZm9yayB0aGVpciBvd24gaW50ZXJuYWwgdmVyc2lvbnMgYW5kIGZpeCBs
b2NhbGx5IHdpdGggdGhlaXIgb3duIGRldnMgcmF0aGVyIHRoYW4gZnVuZCBv
cGVuLXNvdXJjZSBtYWludGFpbmVycyB3aGF0IHRoZXkgd291bGQgcGF5IHRo
ZWlyIG93biBkZXZzIHRvIG1ha2UgdGhpbmdzIGJldHRlciBmb3IgZXZlcnlv
bmUsIGluY2x1ZGluZyB0aGVtc2VsdmVzLCB3aGljaCB3b3VsZCBiZSBjaGVh
cGVyIC0gYnV0IG5vLCB0aGF0IHdvdWxkIHJlcXVpcmUgdG9vIG1hbnkgdGll
cnMgb2YgY29tcGFueSBhcHByb3ZhbCB0aGF0IGRvbid0IHVuZGVyc3RhbmQg
dGhlIG5lZWQuCgpBcyBzdWNoLCBpZiB5b3UgYXJlIGFuIG9wZW4tc291cmNl
IGRldmVsb3BlciwgSSdkIHJlY29tbWVuZCBqdXN0IHdvcmtpbmcgb24gb3Bl
bi1zb3VyY2UgcHJvamVjdHMgdGhhdCBhcmUgcGFpZCBmb3IgYnkgeW91ciBv
d24gY29uc3VsdGluZyB3b3JrIG9yIHlvdXIgb3duIGNvbXBhbnkgKGUuZy4g
ZXZlcnkgc3VjY2Vzc2Z1bCBvcGVuLXNvdXJjZSBwcm9qZWN0KS4gQXMgb3Ro
ZXJ3aXNlLCB3aGVuIHRoZXkgYmVjb21lIHBvcHVsYXIsIHlvdSBiZXR0ZXIg
aG9wZSB0aGV5IGFyZSBlYXNpbHkgbWFpbnRhaW5hYmxlIGFuZCB0ZXN0YWJs
ZSwgb3RoZXJ3aXNlIHRoZSBjb3N0IG9mIG1haW50ZW5hbmNlIGlzIGhpZ2hl
ciB0aGFuIHRoZSBmcmVlIHRpbWUgb2YgdGhlIG1haW50YWluZXJzLgoKU28g
d2l0aCBhbGwgdGhhdCBzYWlkLCB0aGlzIHJlcG8gc3RpbGwgZXhpc3RzIGZv
ciBhcmNoaXZhbCBwdXJwb3NlcywgbGVnYWN5IGJyb3dzZXJzLCBhbmQgYSBo
dWIgZm9yIGFuYXJhY2hpc3RpYyBpc3N1ZSAmIGZvcmsgbWFpbnRlbmFuY2Uu
CgpDaGVlcnMsCkJlbmphbWluIEx1cHRvbiwgZm91bmRlciBvZiBCZXZyeSwg
Y3JlYXRvciBvZiBIaXN0b3J5LmpzCgoKV2VsY29tZSB0byBIaXN0b3J5Lmpz
IDxici8+IHYxLjhiMiwgSnVuZSAyMiAyMDEzCj09PT09PT09PT09PT09PT09
PQoKPCEtLSBCQURHRVMvIC0tPgoKPHNwYW4gY2xhc3M9ImJhZGdlLXNsYWNr
aW4iPjxhIGhyZWY9Imh0dHBzOi8vc2xhY2suYmV2cnkubWUiIHRpdGxlPSJK
b2luIHRoaXMgcHJvamVjdCdzIHNsYWNrIGNvbW11bml0eSI+PGltZyBzcmM9
Imh0dHBzOi8vc2xhY2suYmV2cnkubWUvYmFkZ2Uuc3ZnIiBhbHQ9IlNsYWNr
IGNvbW11bml0eSBiYWRnZSIgLz48L2E+PC9zcGFuPgo8c3BhbiBjbGFzcz0i
YmFkZ2UtcGF0cmVvbiI+PGEgaHJlZj0iaHR0cDovL3BhdHJlb24uY29tL2Jl
dnJ5IiB0aXRsZT0iRG9uYXRlIHRvIHRoaXMgcHJvamVjdCB1c2luZyBQYXRy
ZW9uIj48aW1nIHNyYz0iaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS9w
YXRyZW9uLWRvbmF0ZS15ZWxsb3cuc3ZnIiBhbHQ9IlBhdHJlb24gZG9uYXRl
IGJ1dHRvbiIgLz48L2E+PC9zcGFuPgo8c3BhbiBjbGFzcz0iYmFkZ2UtZ3Jh
dGlwYXkiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmdyYXRpcGF5LmNvbS9iZXZy
eSIgdGl0bGU9IkRvbmF0ZSB3ZWVrbHkgdG8gdGhpcyBwcm9qZWN0IHVzaW5n
IEdyYXRpcGF5Ij48aW1nIHNyYz0iaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9i
YWRnZS9ncmF0aXBheS1kb25hdGUteWVsbG93LnN2ZyIgYWx0PSJHcmF0aXBh
eSBkb25hdGUgYnV0dG9uIiAvPjwvYT48L3NwYW4+CjxzcGFuIGNsYXNzPSJi
YWRnZS1mbGF0dHIiPjxhIGhyZWY9Imh0dHBzOi8vZmxhdHRyLmNvbS9wcm9m
aWxlL2JhbHVwdG9uIiB0aXRsZT0iRG9uYXRlIHRvIHRoaXMgcHJvamVjdCB1
c2luZyBGbGF0dHIiPjxpbWcgc3JjPSJodHRwczovL2ltZy5zaGllbGRzLmlv
L2JhZGdlL2ZsYXR0ci1kb25hdGUteWVsbG93LnN2ZyIgYWx0PSJGbGF0dHIg
ZG9uYXRlIGJ1dHRvbiIgLz48L2E+PC9zcGFuPgo8c3BhbiBjbGFzcz0iYmFk
Z2UtcGF5cGFsIj48YSBocmVmPSJodHRwczovL2JldnJ5Lm1lL3BheXBhbCIg
dGl0bGU9IkRvbmF0ZSB0byB0aGlzIHByb2plY3QgdXNpbmcgUGF5cGFsIj48
aW1nIHNyYz0iaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS9wYXlwYWwt
ZG9uYXRlLXllbGxvdy5zdmciIGFsdD0iUGF5UGFsIGRvbmF0ZSBidXR0b24i
IC8+PC9hPjwvc3Bhbj4KPHNwYW4gY2xhc3M9ImJhZGdlLWJpdGNvaW4iPjxh
IGhyZWY9Imh0dHBzOi8vYmV2cnkubWUvYml0Y29pbiIgdGl0bGU9IkRvbmF0
ZSBvbmNlLW9mZiB0byB0aGlzIHByb2plY3QgdXNpbmcgQml0Y29pbiI+PGlt
ZyBzcmM9Imh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvYml0Y29pbi1k
b25hdGUteWVsbG93LnN2ZyIgYWx0PSJCaXRjb2luIGRvbmF0ZSBidXR0b24i
IC8+PC9hPjwvc3Bhbj4KPHNwYW4gY2xhc3M9ImJhZGdlLXdpc2hsaXN0Ij48
YSBocmVmPSJodHRwczovL2JldnJ5Lm1lL3dpc2hsaXN0IiB0aXRsZT0iQnV5
IGFuIGl0ZW0gb24gb3VyIHdpc2hsaXN0IGZvciB1cyI+PGltZyBzcmM9Imh0
dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2Uvd2lzaGxpc3QtZG9uYXRlLXll
bGxvdy5zdmciIGFsdD0iV2lzaGxpc3QgYnJvd3NlIGJ1dHRvbiIgLz48L2E+
PC9zcGFuPgoKPCEtLSAvQkFER0VTIC0tPgoKCgojIyBOZXdzCi0gMjIvMDYv
MjAxMzogQmV0YSAyIG9mIHYxLjggaXMgcmVsZWFzZWQuIEZpeGVzIGFuZCB1
bmNvbXByZXNzZWQgYnVuZGxlZCBmaWxlcy4KLSAzMS8wNS8yMDEzOiBCZXRh
IDEgb2YgdjEuOCBpcyByZWxlYXNlZC4gRml4ZXMuCi0gMTQvMDIvMjAxMzog
QWxwaGEgNCBvZiB2MS44IGlzIHJlbGVhc2VkLiBGaXhlcy4KLSAwNS8wMi8y
MDEzOiBBbHBoYSAzIG9mIHYxLjggaXMgcmVsZWFzZWQuIFRlc3RzIHVwZGF0
ZWQuCi0gMjEvMDEvMjAxMzogQWxwaGEgMiBvZiB2MS44IGlzIHJlbGVhc2Vk
LiBDb3JyZWN0IHN0YXRlY2hhbmdlIGJlaGF2aW91ci4KLSAxOS8wMS8yMDEz
OiBBbHBoYSAxIG9mIHYxLjggaXMgcmVsZWFzZWQuIFN0YXJ0ZWQgdG8gY2F0
ZWdvcml6ZSBvbGQgYmFsdXB0b24ncyBpc3N1ZXMuCgoKIyMjIEhpc3RvcnkK
W1NlZSB0aGUgYEhJU1RPUlkubWRgIGZpbGUgZm9yIGEgZGV0YWlsZWQgbGlz
dCBvZiBmZWF0dXJlcywgY2hhbmdlcywgc29sdmVkIGlzc3VlcyBhbmQgYnVn
c10oaHR0cHM6Ly9naXRodWIuY29tL2Jyb3dzZXJzdGF0ZS9oaXN0b3J5Lmpz
L2Jsb2IvbWFzdGVyL0hJU1RPUlkubWQjZmlsZXMpCgoKIyMjIEludm9sdmUK
UGxlYXNlIGNyZWF0ZSBhbiBpc3N1ZSBpZiBzb21ldGhpbmcgZG9lc24ndCB3
b3JrIG9yIGlmIHRoZXJlIGlzIGEgYnJvd3NlciBzcGVjaWZpYyBidWcuIEkn
bGwgdHJ5IHRvIGZpeCBpdCBhcyBzb29uIGFzIHBvc3NpYmxlLiBQbGVhc2Ug
c2VuZCBtZSB5b3VyIFB1bGwgcmVxdWVzdHMgaWYgeW91IGhhdmUgYSBuaWNl
IHNvbHV0aW9uISBJJ20gYWxzbyBnb2luZyB0byByZXZpZXcgb2xkIGlzc3Vl
cyBpbiBiYWx1cHRvbidzIHJlcG9zaXRvcnkgYW5kIHRyeSB0byBzb2x2ZSB0
aGVtIHRvby4KCgojIyBBaW1zCgotIEZvbGxvdyB0aGUgW0hUTUw1IEhpc3Rv
cnkgQVBJXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi9ET00v
TWFuaXB1bGF0aW5nX3RoZV9icm93c2VyX2hpc3RvcnkpIGFzIG11Y2ggYXMg
cG9zc2libGUKLSBQcm92aWRlIGEgY3Jvc3MtY29tcGF0aWJsZSBleHBlcmll
bmNlIGZvciBhbGwgSFRNTDUgQnJvd3NlcnMgKHRoZXkgYWxsIGltcGxlbWVu
dCB0aGUgSFRNTDUgSGlzdG9yeSBBUEkgYSBsaXR0bGUgYml0IGRpZmZlcmVu
dGx5IGNhdXNpbmcgZGlmZmVyZW50IGJlaGF2aW91cnMgYW5kIHNvbWV0aW1l
cyBidWdzIC0gSGlzdG9yeS5qcyBmaXhlcyB0aGlzIGVuc3VyaW5nIHRoZSBl
eHBlcmllbmNlIGlzIGFzIGV4cGVjdGVkIC8gdGhlIHNhbWUgLyBncmVhdCB0
aHJvdWdob3V0IHRoZSBIVE1MNSBicm93c2VycykKLSBQcm92aWRlIGEgYmFj
a3dhcmRzLWNvbXBhdGlibGUgZXhwZXJpZW5jZSBmb3IgYWxsIEhUTUw0IEJy
b3dzZXJzIHVzaW5nIGEgaGFzaC1mYWxsYmFjayAoaW5jbHVkaW5nIGNvbnRp
bnVlZCBzdXBwb3J0IGZvciB0aGUgSFRNTDUgSGlzdG9yeSBBUEkncyBgZGF0
YWAsIGB0aXRsZWAsIGBwdXNoU3RhdGVgIGFuZCBgcmVwbGFjZVN0YXRlYCkg
d2l0aCB0aGUgb3B0aW9uIHRvIFtyZW1vdmUgSFRNTDQgc3VwcG9ydCBpZiBp
dCBpcyBub3QgcmlnaHQgZm9yIHlvdXIgYXBwbGljYXRpb25dKGh0dHBzOi8v
Z2l0aHViLmNvbS9icm93c2Vyc3RhdGUvaGlzdG9yeS5qcy93aWtpL0ludGVs
bGlnZW50LVN0YXRlLUhhbmRsaW5nKQotIFByb3ZpZGUgYSBmb3J3YXJkcy1j
b21wYXRpYmxlIGV4cGVyaWVuY2UgZm9yIEhUTUw0IFN0YXRlcyB0byBIVE1M
NSBTdGF0ZXMgKHNvIGlmIGEgaGFzaC1mYWxsYmFja2VkIHVybCBpcyBhY2Nl
c3NlZCBieSBhIEhUTUw1IGJyb3dzZXIgaXQgaXMgbmF0dXJhbGx5IHRyYW5z
Zm9ybWVkIGludG8gaXRzIG5vbi1oYXNoZWQgdXJsIGVxdWl2YWxlbnQpCi0g
UHJvdmlkZSBzdXBwb3J0IGZvciBhcyBtYW55IGphdmFzY3JpcHQgZnJhbWV3
b3JrcyBhcyBwb3NzaWJsZSB2aWEgYWRhcHRlcnM7IGVzcGVjaWFsbHkgW0Rv
am9dKGh0dHA6Ly9kb2pvdG9vbGtpdC5vcmcvKSwgW0V4dEpTXShodHRwOi8v
d3d3LnNlbmNoYS5jb20vKSwgW2pRdWVyeV0oaHR0cDovL2pxdWVyeS5jb20v
KSwgW01vb1Rvb2xzXShodHRwOi8vbW9vdG9vbHMubmV0LyksIFtSaWdodC5q
c10oaHR0cDovL3JpZ2h0anMub3JnLykgYW5kIFtaZXB0b10oaHR0cDovL3pl
cHRvanMuY29tLykuCgoKIyMgUXVpY2sgSW5zdGFsbAoKIyMjIFZpYSBBamF4
aWZ5IFNjcmlwdApUbyBhamF4aWZ5IHlvdXIgZW50aXJlIHdlYnNpdGUgd2l0
aCB0aGUgSFRNTDUgSGlzdG9yeSBBUEksIEhpc3RvcnkuanMgYW5kIGpRdWVy
eSB0aGUgW0FqYXhpZnkgc2NyaXB0XShodHRwczovL2dpdGh1Yi5jb20vYnJv
d3NlcnN0YXRlL2FqYXhpZnkpIGlzIGFsbCB5b3UgbmVlZC4gSXQncyB0aGF0
IGVhc3kuCgojIyMgVmlhIEFqYXhpZnkgRXh0ZW5zaW9uCklmIHlvdSBkb24n
dCBoYXZlIGFjY2VzcyB0byB5b3VyIHNlcnZlciwgb3IganVzdCB3YW50IHRv
IHRyeSBvdXQgdGhlIEFqYXhpZnkgc2NyaXB0IGZpcnN0LCB5b3UgY2FuIGlu
c3RhbGwgdGhlIFtIaXN0b3J5LmpzIEl0ISBHb29nbGUgQ2hyb21lIEV4dGVu
c2lvbl0oaHR0cHM6Ly9naXRodWIuY29tL2Jyb3dzZXJzdGF0ZS9oaXN0b3J5
anNpdC5jcngpIHRvIHRyeSBvdXQgSGlzdG9yeS5qcyB2aWEgQWpheGlmeSBv
biBzZWxlY3Qgd2Vic2l0ZXMgd2l0aG91dCBhY3R1YWxseSBpbnN0YWxsaW5n
IEhpc3RvcnkuanMvQWpheGlmeSBvbiB5b3VyIHNlcnZlci4KCiMjIyBWaWEg
UnVieSBPbiBSYWlscyBHZW0KSWYgeW91IGFyZSB1c2luZyBSYWlscywgdGhl
biB0aGUgZWFzaWVzdCB3YXkgZm9yIHlvdSB0byB0cnkgSGlzdG9yeS5qcyB3
b3VsZCBiZSB0byB1c2UgW1dpc2VsaW5rc10oaHR0cHM6Ly9naXRodWIuY29t
L2lnb3ItYWxleGFuZHJvdi93aXNlbGlua3MpIGdlbS4gV2lzZWxpbmtzIGlu
dGVncmF0ZXMgIGludG8gUmFpbHMgYXBwbGljYXRpb24gYW5kIGFsbG93cyB5
b3UgdG8gc3RhcnQgdXNpbmcgSGlzdG9yeS5qcyB3aXRoIHRocmVlIGxpbmVz
IG9mIGNvZGUuCgoKIyMgRGlyZWN0IEluc3RhbGwKCiMjIyBXb3JraW5nIHdp
dGggSGlzdG9yeS5qcyBkaXJlY3RseQoKYGBgIGphdmFzY3JpcHQKKGZ1bmN0
aW9uKHdpbmRvdyx1bmRlZmluZWQpewoKCS8vIEJpbmQgdG8gU3RhdGVDaGFu
Z2UgRXZlbnQKCUhpc3RvcnkuQWRhcHRlci5iaW5kKHdpbmRvdywnc3RhdGVj
aGFuZ2UnLGZ1bmN0aW9uKCl7IC8vIE5vdGU6IFdlIGFyZSB1c2luZyBzdGF0
ZWNoYW5nZSBpbnN0ZWFkIG9mIHBvcHN0YXRlCgkJdmFyIFN0YXRlID0gSGlz
dG9yeS5nZXRTdGF0ZSgpOyAvLyBOb3RlOiBXZSBhcmUgdXNpbmcgSGlzdG9y
eS5nZXRTdGF0ZSgpIGluc3RlYWQgb2YgZXZlbnQuc3RhdGUKCX0pOwoKCS8v
IENoYW5nZSBvdXIgU3RhdGVzCglIaXN0b3J5LnB1c2hTdGF0ZSh7c3RhdGU6
MX0sICJTdGF0ZSAxIiwgIj9zdGF0ZT0xIik7IC8vIGxvZ3Mge3N0YXRlOjF9
LCAiU3RhdGUgMSIsICI/c3RhdGU9MSIKCUhpc3RvcnkucHVzaFN0YXRlKHtz
dGF0ZToyfSwgIlN0YXRlIDIiLCAiP3N0YXRlPTIiKTsgLy8gbG9ncyB7c3Rh
dGU6Mn0sICJTdGF0ZSAyIiwgIj9zdGF0ZT0yIgoJSGlzdG9yeS5yZXBsYWNl
U3RhdGUoe3N0YXRlOjN9LCAiU3RhdGUgMyIsICI/c3RhdGU9MyIpOyAvLyBs
b2dzIHtzdGF0ZTozfSwgIlN0YXRlIDMiLCAiP3N0YXRlPTMiCglIaXN0b3J5
LnB1c2hTdGF0ZShudWxsLCBudWxsLCAiP3N0YXRlPTQiKTsgLy8gbG9ncyB7
fSwgJycsICI/c3RhdGU9NCIKCUhpc3RvcnkuYmFjaygpOyAvLyBsb2dzIHtz
dGF0ZTozfSwgIlN0YXRlIDMiLCAiP3N0YXRlPTMiCglIaXN0b3J5LmJhY2so
KTsgLy8gbG9ncyB7c3RhdGU6MX0sICJTdGF0ZSAxIiwgIj9zdGF0ZT0xIgoJ
SGlzdG9yeS5iYWNrKCk7IC8vIGxvZ3Mge30sICJIb21lIFBhZ2UiLCAiPyIK
CUhpc3RvcnkuZ28oMik7IC8vIGxvZ3Mge3N0YXRlOjN9LCAiU3RhdGUgMyIs
ICI/c3RhdGU9MyIKCn0pKHdpbmRvdyk7CmBgYAoKCiMjIyBIb3cgd291bGQg
dGhlIGFib3ZlIG9wZXJhdGlvbnMgbG9vayBpbiBhIEhUTUw1IEJyb3dzZXI/
CgoxLiB3d3cubXlzaXRlLmNvbQoxLiB3d3cubXlzaXRlLmNvbS8/c3RhdGU9
MQoxLiB3d3cubXlzaXRlLmNvbS8/c3RhdGU9MgoxLiB3d3cubXlzaXRlLmNv
bS8/c3RhdGU9MwoxLiB3d3cubXlzaXRlLmNvbS8/c3RhdGU9NAoxLiB3d3cu
bXlzaXRlLmNvbS8/c3RhdGU9MwoxLiB3d3cubXlzaXRlLmNvbS8/c3RhdGU9
MQoxLiB3d3cubXlzaXRlLmNvbQoxLiB3d3cubXlzaXRlLmNvbS8/c3RhdGU9
MwoKPiBOb3RlOiBUaGVzZSB1cmxzIGFsc28gd29yayBpbiBIVE1MNCBicm93
c2VycyBhbmQgU2VhcmNoIEVuZ2luZXMuIFNvIG5vIG5lZWQgZm9yIHRoZSBo
YXNoYmFuZyAoYCMhYCkgZnJhZ21lbnQtaWRlbnRpZmllciB0aGF0IGdvb2ds
ZSBbInJlY29tbWVuZHMiXShodHRwczovL2dpdGh1Yi5jb20vYnJvd3NlcnN0
YXRlL2hpc3RvcnkuanMvd2lraS9JbnRlbGxpZ2VudC1TdGF0ZS1IYW5kbGlu
ZykuCgoKIyMjIEhvdyB3b3VsZCB0aGV5IGxvb2sgaW4gYSBIVE1MNCBCcm93
c2VyPwoKMS4gd3d3Lm15c2l0ZS5jb20KMS4gd3d3Lm15c2l0ZS5jb20vIz9z
dGF0ZT0xJl9zdWlkPTEKMS4gd3d3Lm15c2l0ZS5jb20vIz9zdGF0ZT0yJl9z
dWlkPTIKMS4gd3d3Lm15c2l0ZS5jb20vIz9zdGF0ZT0zJl9zdWlkPTMKMS4g
d3d3Lm15c2l0ZS5jb20vIz9zdGF0ZT00CjEuIHd3dy5teXNpdGUuY29tLyM/
c3RhdGU9MyZfc3VpZD0zCjEuIHd3dy5teXNpdGUuY29tLyM/c3RhdGU9MSZf
c3VpZD0xCjEuIHd3dy5teXNpdGUuY29tCjEuIHd3dy5teXNpdGUuY29tLyM/
c3RhdGU9MyZfc3VpZD0zCgo+IE5vdGUgMTogVGhlc2UgdXJscyBhbHNvIHdv
cmsgaW4gSFRNTDUgYnJvd3NlcnMgLSB3ZSB1c2UgYHJlcGxhY2VTdGF0ZWAg
dG8gdHJhbnNmb3JtIHRoZXNlIEhUTUw0IHN0YXRlcyBpbnRvIHRoZWlyIEhU
TUw1IGVxdWl2YWxlbnRzIHNvIHRoZSB1c2VyIHdvbid0IGV2ZW4gbm90aWNl
IDotKQo+Cj4gTm90ZSAyOiBUaGVzZSB1cmxzIHdpbGwgYmUgYXV0b21hdGlj
YWxseSB1cmwtZW5jb2RlZCBpbiBJRTYgdG8gcHJldmVudCBjZXJ0YWluIGJy
b3dzZXItc3BlY2lmaWMgYnVncy4KPgo+IE5vdGUgMzogU3VwcG9ydCBmb3Ig
SFRNTDQgYnJvd3NlcnMgKHRoaXMgaGFzaCBmYWxsYmFjaykgaXMgb3B0aW9u
YWwgWy0gd2h5IHN1cHBvcnRpbmcgSFRNTDQgYnJvd3NlcnMgY291bGQgYmUg
ZWl0aGVyIGdvb2Qgb3IgYmFkIGJhc2VkIG9uIG15IGFwcCdzIHVzZSBjYXNl
c10oaHR0cHM6Ly9naXRodWIuY29tL2Jyb3dzZXJzdGF0ZS9oaXN0b3J5Lmpz
L3dpa2kvSW50ZWxsaWdlbnQtU3RhdGUtSGFuZGxpbmcpCgoKIyMjIFdoYXQn
cyB0aGUgZGVhbCB3aXRoIHRoZSBTVUlEcyB1c2VkIGluIHRoZSBIVE1MNCBT
dGF0ZXM/CgotIFNVSURzIChTdGF0ZSBVbmlxdWUgSWRlbnRpZmllcnMpIGFy
ZSB1c2VkIHdoZW4gd2UgdXRpbGlzZSBhIGB0aXRsZWAgYW5kL29yIGBkYXRh
YCBpbiBvdXIgc3RhdGUuIEFkZGluZyBhIFNVSUQgYWxsb3dzIHVzIHRvIGFz
c29jaWF0ZSBwYXJ0aWN1bGFyIHN0YXRlcyB3aXRoIGRhdGEgYW5kIHRpdGxl
cyB3aGlsZSBrZWVwaW5nIHRoZSB1cmxzIGFzIHNpbXBsZSBhcyBwb3NzaWJs
ZSAoZG9uJ3Qgd29ycnkgaXQncyBhbGwgdGVzdGVkLCB3b3JraW5nIGFuZCBh
IGxvdCBzbWFydGVyIHRoYW4gSSdtIG1ha2luZyBpdCBvdXQgdG8gYmUpLgot
IElmIHlvdSBhcmVuJ3QgdXRpbGlzaW5nIGB0aXRsZWAgb3IgYGRhdGFgIHRo
ZW4gd2UgZG9uJ3QgZXZlbiBpbmNsdWRlIGEgU1VJRCAoYXMgdGhlcmUgaXMg
bm8gbmVlZCBmb3IgaXQpIC0gYXMgc2VlbiBieSBTdGF0ZSA0IGFib3ZlIDot
KQotIFdlIGFsc28gc2hyaW5rIHRoZSB1cmxzIHRvIG1ha2Ugc3VyZSB0aGF0
IHRoZSBzbWFsbGVzdCB1cmwgd2lsbCBiZSB1c2VkLiBGb3IgaW5zdGFuY2Ug
d2Ugd2lsbCBhZGp1c3QgYGh0dHA6Ly93d3cubXlzaXRlLmNvbS8jaHR0cDov
L3d3dy5teXNpdGUuY29tL3Byb2plY3RzL0hpc3RvcnkuanNgIHRvIGJlY29t
ZSBgaHR0cDovL3d3dy5teXNpdGUuY29tLyMvcHJvamVjdHMvSGlzdG9yeS5q
c2AgYXV0b21hdGljYWxseS4gKGFnYWluIHRlc3RlZCwgd29ya2luZywgYW5k
IHNtYXJ0ZXIpLgotIEl0IHdvcmtzIHdpdGggZG9tYWlucywgc3ViZG9tYWlu
cywgc3ViZGlyZWN0b3JpZXMsIHdoYXRldmVyIC0gZG9lc24ndCBtYXR0ZXIg
d2hlcmUgeW91IHB1dCBpdC4gSXQncyBzbWFydC4KLSBTYWZhcmkgNSB3aWxs
IGFsc28gaGF2ZSBhIFNVSUQgYXBwZW5kZWQgdG8gdGhlIFVSTCwgaXQgaXMg
ZW50aXJlbHkgdHJhbnNwYXJlbnQgYnV0IGp1c3QgYSB2aXNpYmxlIHNpZGUt
ZWZmZWN0LiBJdCBpcyByZXF1aXJlZCB0byBmaXggYSBidWcgd2l0aCBTYWZh
cmkgNS4KCgojIyMgSXMgdGhlcmUgYSB3b3JraW5nIGRlbW8/CgotIFN1cmUg
aXMsIGdpdmUgaXQgYSBkb3dubG9hZCBhbmQgbmF2aWdhdGUgdG8gdGhlIGRl
bW8gZGlyZWN0b3J5IGluIHlvdXIgYnJvd3NlciA6LSkKLSBJZiB5b3UgYXJl
IGFmdGVyIHNvbWV0aGluZyBhIGJpdCBtb3JlIGFkdmVudHVyb3VzIHRoYW4g
YSBlbmQtdXNlciBkZW1vLCBvcGVuIHVwIHRoZSB0ZXN0cyBkaXJlY3Rvcnkg
aW4geW91ciBicm93c2VyIGFuZCBlZGl0b3IgLSBpdCdsbCByb2NrIHlvdXIg
d29ybGQgYW5kIHNob3cgYWxsIHRoZSB2YXN0IHVzZSBjYXNlcyB0aGF0IEhp
c3RvcnkuanMgc3VwcG9ydHMuCgoKIyMgRG93bmxvYWQgJiBJbnN0YWxsYXRp
b24KCi0gRG93bmxvYWQgSGlzdG9yeS5qcyBhbmQgdXBsb2FkIGl0IHRvIHlv
dXIgd2Vic2VydmVyLiBEb3dubG9hZCBsaW5rczogW3Rhci5nel0oaHR0cHM6
Ly9naXRodWIuY29tL2Jyb3dzZXJzdGF0ZS9oaXN0b3J5LmpzL3RhcmJhbGwv
bWFzdGVyKSBvciBbemlwXShodHRwczovL2dpdGh1Yi5jb20vYnJvd3NlcnN0
YXRlL2hpc3RvcnkuanMvemlwYmFsbC9tYXN0ZXIpCgotIEluY2x1ZGUgSGlz
dG9yeS5qcwoKCS0gRm9yIFtEb2pvXShodHRwOi8vZG9qb3Rvb2xraXQub3Jn
LykgdjEuOCsKCgkJYGBgIGh0bWwKCQk8c2NyaXB0IHNyYz0iaHR0cDovL3d3
dy55b3Vyd2Vic2l0ZS5jb20vaGlzdG9yeS5qcy9zY3JpcHRzL2J1bmRsZWQv
aHRtbDQraHRtbDUvZG9qby5oaXN0b3J5LmpzIj48L3NjcmlwdD4KCQlgYGAK
CQoJLSBGb3IgW0V4dEpzXShodHRwOi8vd3d3LnNlbmNoYS5jb20vKSB2MS44
KwoKCQlgYGAgaHRtbAoJCTxzY3JpcHQgc3JjPSJodHRwOi8vd3d3LnlvdXJ3
ZWJzaXRlLmNvbS9oaXN0b3J5LmpzL3NjcmlwdHMvYnVuZGxlZC9odG1sNCto
dG1sNS9leHRqcy5oaXN0b3J5LmpzIj48L3NjcmlwdD4KCQlgYGAKCQoJLSBG
b3IgW2pRdWVyeV0oaHR0cDovL2pxdWVyeS5jb20vKSB2MS4zKwoKCQlgYGAg
aHRtbAoJCTxzY3JpcHQgc3JjPSJodHRwOi8vd3d3LnlvdXJ3ZWJzaXRlLmNv
bS9oaXN0b3J5LmpzL3NjcmlwdHMvYnVuZGxlZC9odG1sNCtodG1sNS9qcXVl
cnkuaGlzdG9yeS5qcyI+PC9zY3JpcHQ+CgkJYGBgCgoJLSBGb3IgW01vb3Rv
b2xzXShodHRwOi8vbW9vdG9vbHMubmV0LykgdjEuMysKCgkJYGBgIGh0bWwK
CQk8c2NyaXB0IHNyYz0iaHR0cDovL3d3dy55b3Vyd2Vic2l0ZS5jb20vaGlz
dG9yeS5qcy9zY3JpcHRzL2J1bmRsZWQvaHRtbDQraHRtbDUvbW9vdG9vbHMu
aGlzdG9yeS5qcyI+PC9zY3JpcHQ+CgkJYGBgCgoJLSBGb3IgW1JpZ2h0Lmpz
XShodHRwOi8vcmlnaHRqcy5vcmcvKSB2Mi4yKwoKCQlgYGAgaHRtbAoJCTxz
Y3JpcHQgc3JjPSJodHRwOi8vd3d3LnlvdXJ3ZWJzaXRlLmNvbS9oaXN0b3J5
LmpzL3NjcmlwdHMvYnVuZGxlZC9odG1sNCtodG1sNS9yaWdodC5oaXN0b3J5
LmpzIj48L3NjcmlwdD4KCQlgYGAKCgktIEZvciBbWmVwdG9dKGh0dHA6Ly96
ZXB0b2pzLmNvbS8pIHYwLjUrCgoJCWBgYCBodG1sCgkJPHNjcmlwdCBzcmM9
Imh0dHA6Ly93d3cueW91cndlYnNpdGUuY29tL2hpc3RvcnkuanMvc2NyaXB0
cy9idW5kbGVkL2h0bWw0K2h0bWw1L3plcHRvLmhpc3RvcnkuanMiPjwvc2Ny
aXB0PgoJCWBgYAoKCS0gRm9yIGV2ZXJ5dGhpbmcgZWxzZQoKCQlgYGAgaHRt
bAoJCTxzY3JpcHQgc3JjPSJodHRwOi8vd3d3LnlvdXJ3ZWJzaXRlLmNvbS9o
aXN0b3J5LmpzL3NjcmlwdHMvYnVuZGxlZC9odG1sNCtodG1sNS9uYXRpdmUu
aGlzdG9yeS5qcyI+PC9zY3JpcHQ+CgkJYGBgCgo+IE5vdGU6IElmIHlvdSB3
YW50IHRvIG9ubHkgc3VwcG9ydCBIVE1MNSBCcm93c2VycyBhbmQgbm90IEhU
TUw0IEJyb3dzZXJzIChzbyBubyBoYXNoIGZhbGxiYWNrIHN1cHBvcnQpIHRo
ZW4ganVzdCBjaGFuZ2UgdGhlIGAvaHRtbDQraHRtbDUvYCBwYXJ0IGluIHRo
ZSB1cmxzIHRvIGp1c3QgYC9odG1sNS9gLiBTZWUgW1doeSBzdXBwb3J0aW5n
IEhUTUw0IGJyb3dzZXJzIGNvdWxkIGJlIGVpdGhlciBnb29kIG9yIGJhZCBi
YXNlZCBvbiBteSBhcHAncyB1c2UgY2FzZXNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9icm93c2Vyc3RhdGUvaGlzdG9yeS5qcy93aWtpL0ludGVsbGlnZW50LVN0
YXRlLUhhbmRsaW5nKQoKCiMjIEdldCBVcGRhdGVzCgotIEZvciBDb21taXQg
UlNTL0F0b20gVXBkYXRlczoKCS0gWW91IGNhbiBzdWJzY3JpYmUgdmlhIHRo
ZSBbR2l0SHViIENvbW1pdCBBdG9tIEZlZWRdKGh0dHA6Ly9mZWVkcy5mZWVk
YnVybmVyLmNvbS9oaXN0b3J5anMpCi0gRm9yIEdpdEh1YiBOZXdzIEZlZWQg
VXBkYXRlczoKCS0gWW91IGNhbiBjbGljayB0aGUgIndhdGNoIiBidXR0b24g
dXAgdGhlIHRvcCByaWdodCBvZiBIaXN0b3J5LmpzJ3MgW0dpdEh1YiBQcm9q
ZWN0IFBhZ2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9icm93c2Vyc3RhdGUvaGlz
dG9yeS5qcykKCgojIyBHZXQgU3VwcG9ydAoKLSBIaXN0b3J5LmpzIGlzIG1h
aW50YWluZWQgYnkgcGVvcGxlIGxpa2UgeW91LiBJZiB5b3UgZmluZCBhIGJ1
ZywgcmVwb3J0IGl0IHRvIHRoZSBbR2l0SHViIElzc3VlIFRyYWNrZXJdKGh0
dHBzOi8vZ2l0aHViLmNvbS9icm93c2Vyc3RhdGUvaGlzdG9yeS5qcy9pc3N1
ZXMpLiBJZiB5b3UndmUgZml4ZWQgYSBidWcgc3VibWl0IGEgW1B1bGwgUmVx
dWVzdF0oaHR0cHM6Ly9naXRodWIuY29tL2Jyb3dzZXJzdGF0ZS9oaXN0b3J5
LmpzL3B1bGxzKSBhbmQgYWRkIHlvdXIgZm9yayB0byB0aGUgW05ldHdvcmsg
V2lraSBQYWdlXShodHRwczovL2dpdGh1Yi5jb20vYnJvd3NlcnN0YXRlL2hp
c3RvcnkuanMvd2lraS9OZXR3b3JrKS4KCi0gSWYgeW91IHdvdWxkIGxpa2Ug
cGFpZCBzdXBwb3J0IGFuZCB0cmFpbmluZ3MsIG9yIGhhdmUgam9iIG9mZmVy
cywgdGhlbiByZWZlciB0byB0aGUgW05ldHdvcmsgV2lraSBQYWdlXShodHRw
czovL2dpdGh1Yi5jb20vYnJvd3NlcnN0YXRlL2hpc3RvcnkuanMvd2lraS9O
ZXR3b3JrKS4gSWYgeW91IGFyZSBxdWFsaWZpZWQgd2l0aCBIaXN0b3J5Lmpz
LCB0aGVuIGJlIHN1cmUgdG8gYWRkIHlvdXIgZGV0YWlscyB0byB0aGF0IHBh
Z2UgdG9vLgoKLSBJZiB5b3VyIGNvbXBhbnkgdXNlcyBIaXN0b3J5LmpzIG9u
IHlvdXIgcHJvamVjdHMsIGFuZCB3b3VsZCBsaWtlIHRvIHNlZSBpdCBncm93
IGFuZCBwcm9zcGVyIChiZXR0ZXIgZG9jdW1lbnRhdGlvbiwgYnVnZml4ZXMs
IHVwZ3JhZGVzLCBtYWludGVuYW5jZSwgZXRjLikgYW5kIHdvdWxkIGxvdmUg
dG8gYmVjb21lIGEgY29ycG9yYXRlIHNwb25zb3IgdGhlbiBkbyBlbWFpbCBz
cG9uc29yQGJldnJ5Lm1lCgotIElmIHlvdSB3b3VsZCBsaWtlIGZyZWUgc3Vw
cG9ydCBmb3IgSGlzdG9yeS5qcywgdGhlbiBbcG9zdCB5b3VyIHF1ZXN0aW9u
XShodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zL2Fzaykgb24g
W1N0YWNrb3ZlcmZsb3ddKGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hYm91
dCkgYW5kIGJlIHN1cmUgdG8gdXNlIHRoZSBgaGlzdG9yeS5qc2AgdGFnIHdo
ZW4gYXNraW5nIHlvdXIgcXVlc3Rpb24uCgotIElmIHlvdSd2ZSBjcmVhdGVk
IGEgd2Vic2l0ZSB0aGF0IHVzZXMgSGlzdG9yeS5qcywgb3Iga25vdyBvZiBv
bmUsIGJlIHN1cmUgdG8gYWRkIGl0IHRvIHRoZSBbU2hvd2Nhc2UgV2lraSBQ
YWdlXShodHRwczovL2dpdGh1Yi5jb20vYnJvd3NlcnN0YXRlL2hpc3Rvcnku
anMvd2lraS9TaG93Y2FzZSkuCgotIElmIHlvdSdkIGxvdmUgdG8gKzEgb3Ig
bGlrZSB0aGlzIHByb2plY3QsIHRoZW4gYmUgc3VyZSB0byB0d2VldCBhYm91
dCBpdCBhbmQgY2xpY2sgdGhlICJ3YXRjaCIgYnV0dG9uIHVwIHRoZSB0b3Ag
b2YgaXRzIFtQcm9qZWN0IFBhZ2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9icm93
c2Vyc3RhdGUvaGlzdG9yeS5qcykuCgotIEZvciBhbnl0aGluZyBlbHNlLCBy
ZWZlciB0byB0aGUgW0hpc3RvcnkuanMgR2l0SHViIFdpa2kgU2l0ZV0oaHR0
cHM6Ly9naXRodWIuY29tL2Jyb3dzZXJzdGF0ZS9oaXN0b3J5LmpzL3dpa2kp
LgoKVGhhbmtzISBldmVyeSBiaXQgb2YgaGVscCByZWFsbHkgZG9lcyBtYWtl
IGEgZGlmZmVyZW5jZSEKCgoKIyMgQnJvd3NlcnM6IFRlc3RlZCBhbmQgV29y
a2luZyBJbgoKIyMjIEhUTUw1IEJyb3dzZXJzCgotIEZpcmVmb3ggNCsKLSBD
aHJvbWUgOCsKLSBPcGVyYSAxMS41KwotIFNhZmFyaSA1LjArCi0gU2FmYXJp
IGlPUyA0LjMrCgoKIyMjIEhUTUw0IEJyb3dzZXJzCgotIElFIDYsIDcsIDgs
IDksICgxMCkKLSBGaXJlZm94IDMKLSBPcGVyYSAxMCwgMTEuMAotIFNhZmFy
aSA0Ci0gU2FmYXJpIGlPUyA0LjIsIDQuMSwgNC4wLCAzLjIKCgoKIyMgRXhw
b3NlZCBBUEkKCiMjIyBGdW5jdGlvbnMKCiMjIyMgU3RhdGVzCgotIGBIaXN0
b3J5LnB1c2hTdGF0ZShkYXRhLHRpdGxlLHVybClgIDxici8+IFB1c2hlcyBh
IG5ldyBzdGF0ZSB0byB0aGUgYnJvd3NlcjsgYGRhdGFgIGNhbiBiZSBudWxs
IG9yIGFuIG9iamVjdCwgYHRpdGxlYCBjYW4gYmUgbnVsbCBvciBhIHN0cmlu
ZywgYHVybGAgbXVzdCBiZSBhIHN0cmluZwotIGBIaXN0b3J5LnJlcGxhY2VT
dGF0ZShkYXRhLHRpdGxlLHVybClgIDxici8+IFJlcGxhY2VzIHRoZSBleGlz
dGluZyBzdGF0ZSB3aXRoIGEgbmV3IHN0YXRlIHRvIHRoZSBicm93c2VyOyBg
ZGF0YWAgY2FuIGJlIG51bGwgb3IgYW4gb2JqZWN0LCBgdGl0bGVgIGNhbiBi
ZSBudWxsIG9yIGEgc3RyaW5nLCBgdXJsYCBtdXN0IGJlIGEgc3RyaW5nCi0g
YEhpc3RvcnkuZ2V0U3RhdGUoKWAgPGJyLz4gR2V0cyB0aGUgY3VycmVudCBz
dGF0ZSBvZiB0aGUgYnJvd3NlciwgcmV0dXJucyBhbiBvYmplY3Qgd2l0aCBg
ZGF0YWAsIGB0aXRsZWAgYW5kIGB1cmxgCi0gYEhpc3RvcnkuZ2V0U3RhdGVC
eUluZGV4YCA8YnIvPiBHZXRzIGEgc3RhdGUgYnkgdGhlIGluZGV4Ci0gYEhp
c3RvcnkuZ2V0Q3VycmVudEluZGV4YCA8YnIvPiBHZXRzIHRoZSBjdXJyZW50
IGluZGV4Ci0gYEhpc3RvcnkuZ2V0SGFzaCgpYCA8YnIvPiBHZXRzIHRoZSBj
dXJyZW50IGhhc2ggb2YgdGhlIGJyb3dzZXIKCiMjIyMgQWRhcHRlcgoKLSBg
SGlzdG9yeS5BZGFwdGVyLmJpbmQoZWxlbWVudCxldmVudCxjYWxsYmFjaylg
IDxici8+IEEgZnJhbWV3b3JrIGluZGVwZW5kZW50IGV2ZW50IGJpbmRlciwg
eW91IG1heSBlaXRoZXIgdXNlIHRoaXMgb3IgeW91ciBmcmFtZXdvcmsncyBu
YXRpdmUgZXZlbnQgYmluZGVyLgotIGBIaXN0b3J5LkFkYXB0ZXIudHJpZ2dl
cihlbGVtZW50LGV2ZW50KWAgPGJyLz4gQSBmcmFtZXdvcmsgaW5kZXBlbmRl
bnQgZXZlbnQgdHJpZ2dlciwgeW91IG1heSBlaXRoZXIgdXNlIHRoaXMgb3Ig
eW91ciBmcmFtZXdvcmsncyBuYXRpdmUgZXZlbnQgdHJpZ2dlci4KLSBgSGlz
dG9yeS5BZGFwdGVyLm9uRG9tTG9hZChjYWxsYmFjaylgIDxici8+IEEgZnJh
bWV3b3JrIGluZGVwZW5kZW50IG9uRG9tTG9hZCBiaW5kZXIsIHlvdSBtYXkg
ZWl0aGVyIHVzZSB0aGlzIG9yIHlvdXIgZnJhbWV3b3JrJ3MgbmF0aXZlIG9u
RG9tTG9hZCBiaW5kZXIuCgojIyMjIE5hdmlnYXRpb24KCi0gYEhpc3Rvcnku
YmFjaygpYCA8YnIvPiBHbyBiYWNrIG9uY2UgdGhyb3VnaCB0aGUgaGlzdG9y
eSAoc2FtZSBhcyBoaXR0aW5nIHRoZSBicm93c2VyJ3MgYmFjayBidXR0b24p
Ci0gYEhpc3RvcnkuZm9yd2FyZCgpYCA8YnIvPiBHbyBmb3J3YXJkIG9uY2Ug
dGhyb3VnaCB0aGUgaGlzdG9yeSAoc2FtZSBhcyBoaXR0aW5nIHRoZSBicm93
c2VyJ3MgZm9yd2FyZCBidXR0b24pCi0gYEhpc3RvcnkuZ28oWClgIDxici8+
IElmIFggaXMgbmVnYXRpdmUgZ28gYmFjayB0aHJvdWdoIGhpc3RvcnkgWCB0
aW1lcywgaWYgWCBpcyBwb3NpdGl2ZSBnbyBmb3J3YXJkcyB0aHJvdWdoIGhp
c3RvcnkgWCB0aW1lcwoKIyMjIyBEZWJ1ZwoKLSBgSGlzdG9yeS5sb2coLi4u
KWAgPGJyLz4gTG9ncyBtZXNzYWdlcyB0byB0aGUgY29uc29sZSwgdGhlIGxv
ZyBlbGVtZW50LCBhbmQgZmFsbGJhY2tzIHRvIGFsZXJ0IGlmIG5laXRoZXIg
b2YgdGhvc2UgdHdvIGV4aXN0Ci0gYEhpc3RvcnkuZGVidWcoLi4uKWAgPGJy
Lz4gU2FtZSBhcyBgSGlzdG9yeS5sb2dgIGJ1dCBvbmx5IHJ1bnMgaWYgYEhp
c3Rvcnkub3B0aW9ucy5kZWJ1ZyA9PT0gdHJ1ZWAKCgoKIyMjIE9wdGlvbnMK
Ci0gYEhpc3Rvcnkub3B0aW9ucy5oYXNoQ2hhbmdlSW50ZXJ2YWxgIDxici8+
IEhvdyBsb25nIHNob3VsZCB0aGUgaW50ZXJ2YWwgYmUgYmVmb3JlIGhhc2hj
aGFuZ2UgY2hlY2tzCi0gYEhpc3Rvcnkub3B0aW9ucy5zYWZhcmlQb2xsSW50
ZXJ2YWxgIDxici8+IEhvdyBsb25nIHNob3VsZCB0aGUgaW50ZXJ2YWwgYmUg
YmVmb3JlIHNhZmFyaSBwb2xsIGNoZWNrcwotIGBIaXN0b3J5Lm9wdGlvbnMu
ZG91YmxlQ2hlY2tJbnRlcnZhbGAgPGJyLz4gSG93IGxvbmcgc2hvdWxkIHRo
ZSBpbnRlcnZhbCBiZSBiZWZvcmUgd2UgcGVyZm9ybSBhIGRvdWJsZSBjaGVj
awotIGBIaXN0b3J5Lm9wdGlvbnMuZGlzYWJsZVN1aWRgIDxici8+IEZvcmNl
IEhpc3Rvcnkgbm90IHRvIGFwcGVuZCBzdWlkCi0gYEhpc3Rvcnkub3B0aW9u
cy5zdG9yZUludGVydmFsYCA8YnIvPiBIb3cgbG9uZyBzaG91bGQgd2Ugd2Fp
dCBiZXR3ZWVuIHN0b3JlIGNhbGxzCi0gYEhpc3Rvcnkub3B0aW9ucy5idXN5
RGVsYXlgIDxici8+IEhvdyBsb25nIHNob3VsZCB3ZSB3YWl0IGJldHdlZW4g
YnVzeSBldmVudHMKLSBgSGlzdG9yeS5vcHRpb25zLmRlYnVnYCA8YnIvPiBJ
ZiB0cnVlIHdpbGwgZW5hYmxlIGRlYnVnIG1lc3NhZ2VzIHRvIGJlIGxvZ2dl
ZAotIGBIaXN0b3J5Lm9wdGlvbnMuaW5pdGlhbFRpdGxlYCA8YnIvPiBXaGF0
IGlzIHRoZSB0aXRsZSBvZiB0aGUgaW5pdGlhbCBzdGF0ZQotIGBIaXN0b3J5
Lm9wdGlvbnMuaHRtbDRNb2RlYCA8YnIvPiBJZiB0cnVlLCB3aWxsIGZvcmNl
IEhUTWw0IG1vZGUgKGhhc2h0YWdzKQotIGBIaXN0b3J5Lm9wdGlvbnMuZGVs
YXlJbml0YCA8YnIvPiBXYW50IHRvIG92ZXJyaWRlIGRlZmF1bHQgb3B0aW9u
cyBhbmQgY2FsbCBpbml0IG1hbnVhbGx5LgoKCiMjIyBFdmVudHMKCi0gYHdp
bmRvdy5vbnN0YXRlY2hhbmdlYCA8YnIvPiBGaXJlZCB3aGVuIHRoZSBzdGF0
ZSBvZiB0aGUgcGFnZSBjaGFuZ2VzIChkb2VzIG5vdCBpbmNsdWRlIGhhc2gg
Y2hhbmdlcykKLSBgd2luZG93Lm9uYW5jaG9yY2hhbmdlYCA8YnIvPiBGaXJl
ZCB3aGVuIHRoZSBhbmNob3Igb2YgdGhlIHBhZ2UgY2hhbmdlcyAoZG9lcyBu
b3QgaW5jbHVkZSBzdGF0ZSBoYXNoZXMpCgoKIyMgS25vd24gSXNzdWVzCi0g
T3BlcmEgMTEgZmFpbHMgdG8gY3JlYXRlIGhpc3RvcnkgZW50cmllcyB3aGVu
IHVuZGVyIHN0cmVzc2Z1bCBsb2FkcyAoZXZlbnRzIGZpcmUgcGVyZmVjdGx5
LCBqdXN0IHRoZSBoaXN0b3J5IGV2ZW50cyBmYWlsKSAtIHRoZXJlIGlzIG5v
dGhpbmcgd2UgY2FuIGRvIGFib3V0IHRoaXMKLSBNZXJjdXJ5IGlPUyBmYWls
cyB0byBhcHBseSB1cmwgY2hhbmdlcyAoaGFzaGVzIGFuZCBIVE1MNSBIaXN0
b3J5IEFQSSBzdGF0ZXMpIC0gdGhlcmUgaXMgbm90aGluZyB3ZSBjYW4gZG8g
YWJvdXQgdGhpcwoKCiMjIE5vdGVzIG9uIENvbXBhdGliaWxpdHkKCi0gSGlz
dG9yeS5qcyAqKnNvbHZlcyoqIHRoZSBmb2xsb3dpbmcgYnJvd3NlciBidWdz
OgoJLSBIVE1MNSBCcm93c2VycwoJCS0gQ2hyb21lIDggc29tZXRpbWVzIGRv
ZXMgbm90IGNvbnRhaW4gdGhlIGNvcnJlY3Qgc3RhdGUgZGF0YSB3aGVuIHRy
YXZlcnNpbmcgYmFjayB0byB0aGUgaW5pdGlhbCBzdGF0ZQoJCS0gU2FmYXJp
IDUsIFNhZmFyaSBpT1MgNCBhbmQgRmlyZWZveCAzIGFuZCA0IGRvIG5vdCBm
aXJlIHRoZSBgb25oYXNoY2hhbmdlYCBldmVudCB3aGVuIHRoZSBwYWdlIGlz
IGxvYWRlZCB3aXRoIGEgaGFzaAoJCS0gU2FmYXJpIDUgYW5kIFNhZmFyaSBp
T1MgNCBkbyBub3QgZmlyZSB0aGUgYG9ucG9wc3RhdGVgIGV2ZW50IHdoZW4g
dGhlIGhhc2ggaGFzIGNoYW5nZWQgdW5saWtlIHRoZSBvdGhlciBicm93c2Vy
cwoJCS0gU2FmYXJpIDUgYW5kIFNhZmFyaSBpT1MgNCBmYWlsIHRvIHJldHVy
biB0byB0aGUgY29ycmVjdCBzdGF0ZSBvbmNlIGEgaGFzaCBpcyByZXBsYWNl
ZCBieSBhIGByZXBsYWNlU3RhdGVgIGNhbGwgLyBbYnVnIHJlcG9ydF0oaHR0
cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTU2MjQ5KQoJ
CS0gU2FmYXJpIDUgYW5kIFNhZmFyaSBpT1MgNCBzb21ldGltZXMgZmFpbCB0
byBhcHBseSB0aGUgc3RhdGUgY2hhbmdlIHVuZGVyIGJ1c3kgY29uZGl0aW9u
cyAvIFtidWcgcmVwb3J0XShodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93
X2J1Zy5jZ2k/aWQ9NDI5NDApCgkJLSBHb29nbGUgQ2hyb21lIDgsOSwxMCBh
bmQgRmlyZWZveCA0IHByaW9yIHRvIHRoZSBSQyB3aWxsIGFsd2F5cyBmaXJl
IGBvbnBvcHN0YXRlYCBvbmNlIHRoZSBwYWdlIGhhcyBsb2FkZWQgLyBbY2hh
bmdlIHJlY29tbWVuZGF0aW9uXShodHRwOi8vaGFja3MubW96aWxsYS5vcmcv
MjAxMS8wMy9oaXN0b3J5LWFwaS1jaGFuZ2VzLWluLWZpcmVmb3gtNC8pCgkJ
LSBTYWZhcmkgaU9TIDQuMCwgNC4xLCA0LjIgaGF2ZSBhIHdvcmtpbmcgSFRN
TDUgSGlzdG9yeSBBUEkgLSBhbHRob3VnaCB0aGUgYWN0dWFsIGJhY2sgYnV0
dG9ucyBvZiB0aGUgYnJvd3NlcnMgZG8gbm90IHdvcmssIHRoZXJlZm9yZSB3
ZSB0cmVhdCB0aGVtIGFzIEhUTUw0IGJyb3dzZXJzCgkJLSBOb25lIG9mIHRo
ZSBIVE1MNSBicm93c2VycyBhY3R1YWxseSB1dGlsaXNlIHRoZSBgdGl0bGVg
IGFyZ3VtZW50IHRvIHRoZSBgcHVzaFN0YXRlYCBhbmQgYHJlcGxhY2VTdGF0
ZWAgY2FsbHMKCS0gSFRNTDQgQnJvd3NlcnMKCQktIE9sZCBicm93c2VycyBs
aWtlIE1TSUUgNiw3IGFuZCBGaXJlZm94IDIgZG8gbm90IGhhdmUgYSBgb25o
YXNoY2hhbmdlYCBldmVudAoJCS0gTVNJRSA2IGFuZCA3IHNvbWV0aW1lcyBk
byBub3QgYXBwbHkgYSBoYXNoIGV2ZW4gaXQgd2FzIHRvbGQgdG8gKHJlcXVp
cmluZyBhIHNlY29uZCBjYWxsIHRvIHRoZSBhcHBseSBmdW5jdGlvbikKCQkt
IE5vbi1PcGVyYSBIVE1MNCBicm93c2VycyBzb21ldGltZXMgZG8gbm90IGFw
cGx5IHRoZSBoYXNoIHdoZW4gdGhlIGhhc2ggaXMgbm90IGB1cmxlbmNvZGVk
YAoJLSBBbGwgQnJvd3NlcnMKCQktIFN0YXRlIGRhdGEgYW5kIHRpdGxlcyBk
byBub3QgcGVyc2lzdCBvbmNlIHRoZSBzaXRlIGlzIGxlZnQgYW5kIHRoZW4g
cmV0dXJuZWQgKGluY2x1ZGVzIHBhZ2UgcmVmcmVzaGVzKQoJCS0gU3RhdGUg
dGl0bGVzIGFyZSBuZXZlciBhcHBsaWVkIHRvIHRoZSBgZG9jdW1lbnQudGl0
bGVgCi0gUmVwbGFjZVN0YXRlIGZ1bmN0aW9uYWxpdHkgaXMgZW11bGF0ZWQg
aW4gSFRNTDQgYnJvd3NlcnMgYnkgZGlzY2FyZGluZyB0aGUgcmVwbGFjZWQg
c3RhdGUsIHNvIHdoZW4gdGhlIGRpc2NhcmRlZCBzdGF0ZSBpcyBhY2Nlc3Nl
ZCBpdCBpcyBza2lwcGVkIHVzaW5nIHRoZSBhcHByb3ByaWF0ZSBgSGlzdG9y
eS5iYWNrKClgIC8gYEhpc3RvcnkuZm9yd2FyZCgpYCBjYWxsCi0gRGF0YSBw
ZXJzaXN0YW5jZSBhbmQgc3luY2hyb25pc2F0aW9uIHdvcmtzIGxpa2Ugc286
IEV2ZXJ5IHNlY29uZCBvciBzbywgdGhlIFNVSURzIGFuZCBVUkxzIG9mIHRo
ZSBzdGF0ZXMgd2lsbCBzeW5jaHJvbmlzZSBiZXR3ZWVuIHRoZSBzdG9yZSBh
bmQgdGhlIGxvY2FsIHNlc3Npb24uIFdoZW4gYSBuZXcgc2Vzc2lvbiBvcGVu
cyBhIGZhbWlsaWFyIHN0YXRlICh2aWEgdGhlIFNVSUQgb3IgdGhlIFVSTCkg
YW5kIGl0IGlzIG5vdCBmb3VuZCBsb2NhbGx5IHRoZW4gaXQgd2lsbCBhdHRl
bXB0IHRvIGxvYWQgdGhlIGxhc3Qga25vd24gc3RvcmVkIHN0YXRlIHdpdGgg
dGhhdCBpbmZvcm1hdGlvbi4KLSBVUkxzIHdpbGwgYmUgdW5lc2NhcGVkIHRv
IHRoZSBtYXhpbXVtLCBzbyBmb3IgaW5zdGFuY2UgdGhlIFVSTCBgP2tleT1h
JTIwYiUyNTJjYCB3aWxsIGJlY29tZSBgP2tleT1hIGIgY2AuIFRoaXMgaXMg
dG8gZW5zdXJlIGNvbnNpc3RlbmN5IGJldHdlZW4gYnJvd3NlciB1cmwgZW5j
b2RpbmdzLgotIENoYW5naW5nIHRoZSBoYXNoIG9mIHRoZSBwYWdlIGNhdXNl
cyBgb25wb3BzdGF0ZWAgdG8gZmlyZSAodGhpcyBpcyBleHBlY3RlZC9zdGFu
ZGFyZCBmdW5jdGlvbmFsaXR5KS4gVG8gZW5zdXJlIGNvcnJlY3QgY29tcGF0
aWJpbGl0eSBiZXR3ZWVuIEhUTUw1IGFuZCBIVE1MNCBicm93c2VycyB0aGUg
Zm9sbG93aW5nIGV2ZW50cyBoYXZlIGJlZW4gY3JlYXRlZDoKCS0gYHdpbmRv
dy5vbnN0YXRlY2hhbmdlYDogdGhpcyBpcyB0aGUgc2FtZSBhcyB0aGUgYG9u
cG9wc3RhdGVgIGV2ZW50IGV4Y2VwdCBpdCBkb2VzIG5vdCBmaXJlIGZvciB0
cmFkaXRpb25hbCBhbmNob3JzCgktIGB3aW5kb3cub25hbmNob3JjaGFuZ2Vg
OiB0aGlzIGlzIHRoZSBzYW1lIGFzIHRoZSBgb25oYXNoY2hhbmdlYCBldmVu
dCBleGNlcHQgaXQgZG9lcyBub3QgZmlyZSBmb3Igc3RhdGVzCgoKCiMjIExp
Y2Vuc2UKCkxpY2Vuc2VkIHVuZGVyIHRoZSBbTmV3IEJTRCBMaWNlbnNlXSho
dHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvQlNELTMtQ2xhdXNlKQo8
YnIvPkNvcHlyaWdodCAmY29weTsgIDIwMTQrIFtCZXZyeSBQdHkgTHRkXSho
dHRwOi8vYmV2cnkubWUpIDx1c0BiZXZyeS5tZT4KPGJyLz5Db3B5cmlnaHQg
JmNvcHk7ICAyMDExLTIwMTMgW0JlbmphbWluIEFydGh1ciBMdXB0b25dKGh0
dHA6Ly9iYWx1cHRvbi5jb20pIDxiQGx1cHRvbi5jYz4KCkZvciBzdXBwb3J0
IHNlZSB0aGUgW0dldHRpbmcgU3VwcG9ydF0oI2dldC1zdXBwb3J0KSBzZWN0
aW9uLgo=
",,10617,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'blur-admin',55763295,b'AngularJS Bootstrap Admin Panel Framework',b'JavaScript',260,10616,,534,False,b'https://api.github.com/repos/akveo/blur-admin/forks',"WyFbQnVpbGQgU3RhdHVzXShodHRwczovL3RyYXZpcy1jaS5vcmcvYWt2ZW8v
Ymx1ci1hZG1pbi5zdmc/YnJhbmNoPW1hc3RlcildKGh0dHBzOi8vdHJhdmlz
LWNpLm9yZy9ha3Zlby9ibHVyLWFkbWluKQoKIyBCbHVyQWRtaW4gQW5ndWxh
ciBhZG1pbiBwYW5lbCBmcm9udC1lbmQgZnJhbWV3b3JrCgpDdXN0b21pemFi
bGUgYWRtaW4gcGFuZWwgZnJhbWV3b3JrIG1hZGUgd2l0aCA6aGVhcnQ6IGJ5
IFtBa3ZlbyB0ZWFtXShodHRwOi8vYWt2ZW8uY29tLykuIEZvbGxvdyB1cyBv
biBbVHdpdHRlcl0oaHR0cHM6Ly90d2l0dGVyLmNvbS9ha3Zlb19pbmMpIHRv
IGdldCBsYXRlc3QgbmV3cyBhYm91dCB0aGlzIHRlbXBsYXRlIGZpcnN0IQoK
IyMjIERlbW8KKipbTWludCB2ZXJzaW9uIGRlbW9dKGh0dHA6Ly9ha3Zlby5j
b20vYmx1ci1hZG1pbi1taW50LykqKiAgICAgICAgICAgICB8ICAqKltCbHVy
IHZlcnNpb24gZGVtb10oaHR0cDovL2FrdmVvLmNvbS9ibHVyLWFkbWluLykq
Kgo6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTp8Oi0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS06CiFbTWludCB2ZXJzaW9uIGRlbW9dKGh0dHA6Ly9pLmlt
Z3VyLmNvbS9BM1RNdmlKLnBuZykgIHwgICFbQmx1ciB2ZXJzaW9uIGRlbW9d
KGh0dHA6Ly9pLmltZ3VyLmNvbS9FQW9pSzJPLmpwZykKCiMjIEFuZ3VsYXIg
MiB2ZXJzaW9uCkhlcmUgeW91IGNhbiBmaW5kIEFuZ3VsYXIyIGJhc2VkIHZl
cnNpb246IFtuZzItYWRtaW5dKGh0dHBzOi8vZ2l0aHViLmNvbS9ha3Zlby9u
ZzItYWRtaW4pLgoKIyMjIERvY3VtZW50YXRpb24KSW5zdGFsbGF0aW9uLCBj
dXN0b21pemF0aW9uIGFuZCBvdGhlciB1c2VmdWwgYXJ0aWNsZXM6IGh0dHBz
Oi8vYWt2ZW8uZ2l0aHViLmlvL2JsdXItYWRtaW4vCgoqSWYgeW91IGhhdmUg
cHJvYmxlbXMgaW5zdGFsbGluZyBhbmQganVzdCB3YW50IHRvIGRvd25sb2Fk
IEpTIGFuZCBjc3MgZmlsZXMsIHlvdSBjYW4gZmluZCBkb3dubG9hZCBsaW5r
cyBoZXJlKjogaHR0cDovL2FrdmVvLmdpdGh1Yi5pby9ibHVyLWFkbWluL2Fy
dGljbGVzLzA5MS1kb3dubG9hZHMvCgojIyBIb3cgY2FuIEkgc3VwcG9ydCBk
ZXZlbG9wZXJzPwotIFN0YXIgb3VyIEdpdEh1YiByZXBvCi0gQ3JlYXRlIHB1
bGwgcmVxdWVzdHMsIHN1Ym1pdCBidWdzLCBzdWdnZXN0IG5ldyBmZWF0dXJl
cyBvciBkb2N1bWVudGF0aW9uIHVwZGF0ZXMKLSBGb2xsb3cgdXMgb24gW1R3
aXR0ZXJdKGh0dHBzOi8vdHdpdHRlci5jb20vYWt2ZW9faW5jKQotIExpa2Ug
b3VyIHBhZ2Ugb24gW0ZhY2Vib29rXShodHRwczovL3d3dy5mYWNlYm9vay5j
b20vYWt2ZW8vKQoKIyMgQ2FuIEkgaGlyZSB5b3UgZ3V5cz8KWWVzISBXZSBh
cmUgYXZhaWxhYmxlIGZvciBoaXJlLiBWaXNpdCBbb3VyIGhvbWVwYWdlXSho
dHRwOi8vYWt2ZW8uY29tLykgb3Igc2ltcGx5IGxlYXZlIHVzIGEgbm90ZSB0
byBjb250YWN0QGFrdmVvLmNvbS4gV2Ugd2lsbCBiZSBoYXBweSB0byB3b3Jr
IHdpdGggeW91IQoKIyMgRmVhdHVyZXMKKiBSZXNwb25zaXZlIGxheW91dAoq
IEhpZ2ggcmVzb2x1dGlvbgoqIEJvb3RzdHJhcCBDU1MgRnJhbWV3b3JrCiog
U2FzcwoqIEd1bHAgYnVpbGQKKiBBbmd1bGFySlMKKiBKcXVlcnkKKiBDaGFy
dHMgKGFtQ2hhcnQsIENoYXJ0aXN0LCBDaGFydC5qcywgTW9ycmlzKQoqIE1h
cHMgKEdvb2dsZSwgTGVhZmxldCwgYW1NYXApCiogZXRjCgpMaWNlbnNlCi0t
LS0tLS0tLS0tLS0KPGEgaHJlZj0vTElDRU5TRS50eHQgdGFyZ2V0PSJfYmxh
bmsiPk1JVDwvYT4gbGljZW5zZS4KCiMjIyBGcm9tIGFrdmVvCgpFbmpveSEK
V2UncmUgYWx3YXlzIGhhcHB5IHRvIGhlYXIgeW91ciBmZWVkYmFjay4K
",,10616,"c3VkbzogZmFsc2UKCmxhbmd1YWdlOiBub2RlX2pzCgpub2RlX2pzOgogIC0g
IjgiCgphZGRvbnM6CiAgYXB0OgogICAgc291cmNlczoKICAgICAgLSB1YnVu
dHUtdG9vbGNoYWluLXItdGVzdAogICAgcGFja2FnZXM6CiAgICAgIC0gZysr
LTQuOAoKaW5zdGFsbDoKICAtIG5wbSBjb25maWcgc2V0IHNwaW4gZmFsc2UK
ICAtIG5wbSBpbnN0YWxsIC1nIGd1bHAKCiAgLSBucG0gaW5zdGFsbAoKc2Ny
aXB0OgogIC0gZ3VscCBidWlsZAo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'ignite',51452356,"b'The hottest CLI for React Native, boilerplates, plugins, generators, and more!'",b'TypeScript',28,10611,,244,False,b'https://api.github.com/repos/infinitered/ignite/forks',"PHAgYWxpZ249ImNlbnRlciI+PGltZyBzcmM9Imh0dHA6Ly9pcl9wdWJsaWMu
czMuYW1hem9uYXdzLmNvbS9wcm9qZWN0cy9pZ25pdGUvaWduaXRlLWxvZ28t
cmVkLW9uLXdoaXRlLTEwMDB3LmpwZyIgYWx0PSJoZWFkZXIgaW1hZ2UiIHdp
ZHRoPSI1MDBweCI+PC9wPgoKPGEgaHJlZj0iaHR0cHM6Ly9iYWRnZS5mdXJ5
LmlvL2pzL2lnbml0ZS1jbGkiIHRhcmdldD0iX2JsYW5rIj48aW1nIHNyYz0i
aHR0cHM6Ly9iYWRnZS5mdXJ5LmlvL2pzL2lnbml0ZS1jbGkuc3ZnIiBhbHQ9
Im5wbSB2ZXJzaW9uIiBoZWlnaHQ9IjIwIj48L2E+CjxhIGhyZWY9Imh0dHA6
Ly9jb21tdW5pdHkuaW5maW5pdGUucmVkLyI+PGltZyBzcmM9Imh0dHBzOi8v
aW5maW5pdGVyZWRjb21tdW5pdHkuaGVyb2t1YXBwLmNvbS9iYWRnZS5zdmci
PjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly9yZWFjdG5hdGl2ZS5jYyIgdGFyZ2V0
PSJfYmxhbmsiPjxpbWcgc3JjPSJodHRwczovL2ltZy5zaGllbGRzLmlvL2Jh
ZGdlL1JlYWN0JTIwTmF0aXZlJTIwTmV3c2xldHRlci1GZWF0dXJlZC1ibHVl
dmlvbGV0Ij48L2E+CgojIElnbml0ZSBDTEkKCjxwIGFsaWduPSJjZW50ZXIi
PgogIDpmaXJlOiBUaGUgaG90dGVzdCBDTEkgZm9yIFJlYWN0IE5hdGl2ZTog
Ym9pbGVycGxhdGVzLCBwbHVnaW5zLCBnZW5lcmF0b3JzLCBhbmQgbW9yZS4g
OmZpcmU6CiAgPGJyLz4KPC9wPgoKPGltZyB3aWR0aD0iNzk0IiBhbHQ9InNj
cmVlbiBzaG90IDIwMTgtMTItMTQgYXQgOSAyMCAzMSBhbSIgc3JjPSJodHRw
czovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xNDc5MjE1
LzUwMDE3NjY4LWEwNGMwMjAwLWZmODEtMTFlOC05YjYxLWExYWUyODM2Mzc5
OC5wbmciPgoKIyMjIFdoeSBJZ25pdGUgQ0xJPwoKLSAqKkVhc2lseSBzcGlu
IHVwIGEgbmV3IFJlYWN0IE5hdGl2ZSBhcHAqKiB3aXRoIGJlc3QgcHJhY3Rp
Y2VzIGJ1aWx0LWluCi0gKipObyBydW50aW1lISoqIFRoaXMgaXMgYSBkZXZl
bG9wZXIgdG9vbCBvbmx5LCBub3QgYSBsaWJyYXJ5IHlvdSBoYXZlIHRvIGRl
cGVuZCBvbiBhbmQgZmlndXJlIG91dCBob3cgdG8gdXBncmFkZQotICoqQW4g
ZXZlci1leHBhbmRpbmcgbGlzdCBvZiBbYm9pbGVycGxhdGVzXSguL0JPSUxF
UlBMQVRFUy5tZCkgYW5kIFtwbHVnaW5zXSguL1BMVUdJTlMubWQpKiogdG8g
anVtcC1zdGFydCB5b3VyIGFwcAotICoqQW4gYW1hemluZyBbY29tbXVuaXR5
XShodHRwOi8vY29tbXVuaXR5LmluZmluaXRlLnJlZCkqKiBvZiBvdGhlciBJ
Z25pdGUgLyBSZWFjdCBOYXRpdmUgZGV2ZWxvcGVycyB3aGVuIHlvdSBuZWVk
IGhlbHAKLSAqKkJhdHRsZSB0ZXN0ZWQqKiBhbmQgdXNlZCBldmVyeSBkYXkg
YnkgdGhlIGRldmVsb3BlcnMgYXQgSW5maW5pdGUgUmVkIGFuZCB0aG91c2Fu
ZHMgb2YgZGV2ZWxvcGVycyBhcm91bmQgdGhlIHdvcmxkCi0gKipXb3JrcyBv
biBtYWNPUywgV2luZG93cywgYW5kIExpbnV4KiogYmVjYXVzZSBub3QgYWxs
IFJlYWN0IE5hdGl2ZSBkZXZlbG9wZXJzIGFyZSBvbiBvbmUgcGxhdGZvcm0K
LSAqKlNhdmVzIGFuIGF2ZXJhZ2Ugb2YgdHdvIHdlZWtzKiogb24geW91ciBS
ZWFjdCBOYXRpdmUgZGV2ZWxvcG1lbnQKCkFuZCB5b3UgYWxzbyBnZXQgKGJ5
IGRlZmF1bHQpIGFsbCBvZiB0aGUgc3dlZXQsIHN3ZWV0IGdvb2RuZXNzIG9m
IFtvdXIgZGVmYXVsdCBib2lsZXJwbGF0ZSwgQm93c2VyXShodHRwczovL2dp
dGh1Yi5jb20vaW5maW5pdGVyZWQvaWduaXRlLWJvd3NlciksIG9yIGNob29z
ZSBbb25lIG9mIG1hbnkgb3RoZXJzXSguL0JPSUxFUlBMQVRFUy5tZCkuCgo8
aW1nIHdpZHRoPSI5NDZweCIgYWx0PSJJZ25pdGUgc2F2ZWQgbWUgYSBmZXcg
d2Vla3MgKGlmIG5vdCBtb250aHMpIGdldHRpbmcgc3RhcnRlZCB3aXRoIFJl
YWN0IE5hdGl2ZSAtIEpvbiBSdWRkZWxsLiBDb2ZvdW5kZXIgYXQgU3BvcnRz
Qm9vdGguIEpIaXBzdGVyIENvcmUgVGVhbS4iIHNyYz0iaHR0cHM6Ly9pLmlt
Z3VyLmNvbS9ldFJVSzBYLmpwZyI+CgojIyA6YXJyb3dfZG93bjogSW5zdGFs
bAoKRmlyc3QsIG1ha2Ugc3VyZSB5b3UncmUgc2V0IHVwIGZvciBbUmVhY3Qg
TmF0aXZlXShodHRwczovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC1uYXRp
dmUvZG9jcy9nZXR0aW5nLXN0YXJ0ZWQuaHRtbCNjb250ZW50KQoKdGhlbi4u
LgoKTWFrZSBzdXJlIHlvdSBoYXZlIGEgcmVhc29uYWJseSByZWNlbnQgdmVy
c2lvbiBvZiBOb2RlICg3LjYrIG1pbmltdW0pLiBZb3UgY2FuIGNoZWNrIHlv
dXIgdmVyc2lvbiBvZiBub2RlIGJ5IHJ1bm5pbmcKCmBgYHNoCiQgbm9kZSAt
dgpgYGAKCnRoZW4uLi4KCkluc3RhbGwgW1lhcm5dKGh0dHBzOi8veWFybnBr
Zy5jb20vbGFuZy9lbi9kb2NzL2luc3RhbGwvKSBmb3IgeW91ciBzeXN0ZW0u
CgpmaW5hbGx5Li4uCgpgYGBzaAokIHlhcm4gZ2xvYmFsIGFkZCBpZ25pdGUt
Y2xpCiQgaWduaXRlIG5ldyBNeU5ld0FwcE5hbWUKYGBgCgojIyBRdWljayBF
eGFtcGxlCgpJbmZpbml0ZSBSZWQgcHJvdmlkZXMgdHdvIHByaW1hcnkgYm9p
bGVycGxhdGVzOyB0aGV5IGFyZToKCi0gKipBbmRyb3NzKiogLSB0aGUgdHJp
ZWQgYW5kIHRydWUgKFJlYWN0IE5hdmlnYXRpb24sIFJlZHV4LCAmIFJlZHV4
IFNhZ2EpCi0gKipCb3dzZXIqKiAtIHRoZSBsYXRlc3QgYW5kIGdyZWF0ZXN0
IChSZWFjdCBOYXZpZ2F0aW9uLCBNb2JYIFN0YXRlIFRyZWUsICYgVHlwZVNj
cmlwdCkuIFtXaHkgTVNUIG92ZXIgcmVkdXg/XShodHRwczovL2dpdGh1Yi5j
b20vaW5maW5pdGVyZWQvaWduaXRlLWJvd3NlciN3aHktdGhpcy1zdGFjaykK
CiMjIyBVc2UgSWduaXRlIEJvd3NlcjogW0luZmluaXRlIFJlZCBCb3dzZXIg
Ym9pbGVycGxhdGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9pbmZpbml0ZXJlZC9p
Z25pdGUtYm93c2VyKQoKV2F0Y2ggSmFtb24gSG9sbWdyZW4ncyB0YWxrIGF0
IFJlYWN0IExpdmUgQW1zdGVyZGFtIHdoZXJlIGhlIHVzZXMgSWduaXRlIEJv
d3NlciB0byBidWlsZCBhbiBhcHAgaW4gbGVzcyB0aGFuIDMwIG1pbnV0ZXM6
CgpbaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1QYjhNV2tROUdP
Y10oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1QYjhNV2tROUdP
YykKCmBgYHNoCiQgeWFybiBnbG9iYWwgYWRkIGlnbml0ZS1jbGkKJCBpZ25p
dGUgbmV3IFBpenphQXBwCiAgKCBDaG9vc2UgYEJvd3NlcmAgd2hlbiBwcm9t
cHRlZCApCiQgY2QgUGl6emFBcHAKJCBpZ25pdGUgZ2VuZXJhdGUgc2NyZWVu
IHBpenphLWxvY2F0aW9uLWxpc3QKICAoIENob29zZSBgZXhhbXBsZWAgZG9t
YWluIHdoZW4gcHJvbXB0ZWQuIFRoaXMgZGV0ZXJtaW5lcyB3aGVyZSB5b3Vy
IG5ldyBzY3JlZW4gd2lsbCBnbyBpbiB0aGUgZGlyZWN0b3J5IHN0cnVjdHVy
ZS4gKQokIGlnbml0ZSBnZW5lcmF0ZSBjb21wb25lbnQgcGl6emEtbG9jYXRp
b24KICAoIENob29zZSBgZXhhbXBsZWAgZG9tYWluIHdoZW4gcHJvbXB0ZWQu
IFRoaXMgZGV0ZXJtaW5lcyB3aGVyZSB5b3VyIG5ldyBzY3JlZW4gd2lsbCBn
byBpbiB0aGUgZGlyZWN0b3J5IHN0cnVjdHVyZS4gKQokIGlnbml0ZSAtLWhl
bHAKYGBgCgojIyMgVXNlIElnbml0ZSBBbmRyb3NzIFtJbmZpbml0ZSBSZWQg
QW5kcm9zcyBib2lsZXJwbGF0ZV0oaHR0cHM6Ly9naXRodWIuY29tL2luZmlu
aXRlcmVkL2lnbml0ZS1hbmRyb3NzKQoKYGBgc2gKJCB5YXJuIGdsb2JhbCBh
ZGQgaWduaXRlLWNsaQokIGlnbml0ZSBuZXcgUGl6emFBcHAKICAoIENob29z
ZSBBbmRyb3NzIHdoZW4gcHJvbXB0ZWQgKQokIGNkIFBpenphQXBwCiQgaWdu
aXRlIGFkZCBtYXBzCiQgaWduaXRlIGFkZCB2ZWN0b3ItaWNvbnMKJCBpZ25p
dGUgZ2VuZXJhdGUgc2NyZWVuIFBpenphTG9jYXRpb25MaXN0CiQgaWduaXRl
IGdlbmVyYXRlIGNvbXBvbmVudCBQaXp6YUxvY2F0aW9uCiQgaWduaXRlIGdl
bmVyYXRlIG1hcCBTdG9yZUxvY2F0b3IKJCBpZ25pdGUgYWRkIGkxOG4KJCBp
Z25pdGUgcmVtb3ZlIGkxOG4KJCBpZ25pdGUgLS1oZWxwCmBgYAoKIyMgOmNs
aXBib2FyZDogRG9jdW1lbnRhdGlvbiA6Y2xpcGJvYXJkOgoKLSBXYW50IHRv
IGRpdmUgaW50byB0aGUgSWduaXRlIENMSSBkb2N1bWVudGF0aW9uPyBbR28g
aGVyZV0oLi9kb2NzL1JFQURNRS5tZCkKLSBMb29raW5nIGZvciBSZWFjdCBO
YXRpdmUncyBkb2N1bWVudGF0aW9uPyBbR28gaGVyZV0oaHR0cDovL2ZhY2Vi
b29rLmdpdGh1Yi5pby9yZWFjdC1uYXRpdmUvZG9jcy9nZXR0aW5nLXN0YXJ0
ZWQuaHRtbCkuCgojIyA6ZWxlY3RyaWNfcGx1ZzogUGx1Z2lucyA6ZWxlY3Ry
aWNfcGx1ZzoKCkNoZWNrIG91dCB0aGUgbGlzdCBvZiBbUGx1Z2luc10oLi9Q
TFVHSU5TLm1kKS4KCiMjIDpwbGF0ZV93aXRoX2N1dGxlcnk6IEJvaWxlcnBs
YXRlcyA6cGxhdGVfd2l0aF9jdXRsZXJ5OgoKQ2hlY2sgb3V0IHRoZSBsaXN0
IG9mIFtCb2lsZXJwbGF0ZXNdKC4vQk9JTEVSUExBVEVTLm1kKS4KCmBgYHNo
CiQgaWduaXRlIG5ldyBNeU5ld0FwcE5hbWUgLWIgaXItYm9pbGVycGxhdGUK
YGBgCgojIyA6cG9vcDogVHJvdWJsZXNob290aW5nIDpwb29wOgoKSWYgeW91
IHJ1biBpbnRvIHByb2JsZW1zLCBmaXJzdCBzZWFyY2ggdGhlIGlzc3VlcyBp
biB0aGlzIHJlcG9zaXRvcnkuIElmIHlvdSBkb24ndCBmaW5kIGFueXRoaW5n
LCB5b3UgY2FuIGVpdGhlciBbZmlsZSBhbiBpc3N1ZV0oaHR0cHM6Ly9naXRo
dWIuY29tL2luZmluaXRlcmVkL2lnbml0ZS9pc3N1ZXMpIG9yIGNvbWUgdGFs
ayB0byBvdXIgZnJpZW5kbHkgYW5kIGFjdGl2ZSBkZXZlbG9wZXJzIGluIHRo
ZSBJbmZpbml0ZSBSZWQgQ29tbXVuaXR5IFNsYWNrIChbY29tbXVuaXR5Lmlu
ZmluaXRlLnJlZF0oaHR0cDovL2NvbW11bml0eS5pbmZpbml0ZS5yZWQpKS4K
CiMjIDp0ZWxlc2NvcGU6IFdoZXJlIHRvIEdvIEZyb20gSGVyZSA6dGVsZXNj
b3BlOgoKIyMjIyBbV2F0Y2ggYSBsaXZlIGNvZGluZyB0YWxrXShodHRwczov
L3d3dy55b3V0dWJlLmNvbS93YXRjaD92PVBiOE1Xa1E5R09jKSB1c2luZyBJ
Z25pdGUgYW5kIElnbml0ZSBCb3dzZXIKCiMjIyMgW0NvbnRyaWJ1dGUgdG8g
SWduaXRlIENMSV0oaHR0cHM6Ly9naXRodWIuY29tL2luZmluaXRlcmVkL2ln
bml0ZS9ibG9iL21hc3Rlci8uZ2l0aHViL0NPTlRSSUJVVElORy5tZCkgLSBH
ZXR0aW5nIHVwIGFuZCBydW5uaW5nIGZvciB5b3VyIGZpcnN0IHB1bGwgcmVx
dWVzdAoKIyMjIyBbVGFrZSBhIHRvdXIgb2YgSWduaXRlIENMSSBzb3VyY2Ug
Y29kZV0oaHR0cHM6Ly9naXRodWIuY29tL2luZmluaXRlcmVkL2lnbml0ZS9i
bG9iL21hc3Rlci9kb2NzL2FkdmFuY2VkLWd1aWRlcy90b3VyLm1kKQoKIyMj
IyBbR2V0IGluc3BpcmVkIGJ5IGFwcHMgYnVpbHQgd2l0aCBJZ25pdGVdKGh0
dHBzOi8vZ2l0aHViLmNvbS9pbmZpbml0ZXJlZC9pZ25pdGUvYmxvYi9tYXN0
ZXIvZG9jcy9xdWljay1zdGFydC9idWlsdC13aXRoLWlnbml0ZS5tZCkKCiMj
IyMgW0NoYXQgd2l0aCB1cyBvbiB0aGUgSVIgQ29tbXVuaXR5XShodHRwOi8v
Y29tbXVuaXR5LmluZmluaXRlLnJlZCkgLSBJbmZpbml0ZSBSZWQgZGV2cyBz
dGFuZGluZyBieQoKIyMjIyBbV2hvIGFyZSBXZT9dKGh0dHBzOi8vaW5maW5p
dGUucmVkKSAtIExlYXJuIE1vcmUgQWJvdXQgSW5maW5pdGUgUmVkCgojIyMj
IFtQcm9qZWN0IFdlYiBQYWdlXShodHRwczovL2luZmluaXRlLnJlZC9pZ25p
dGUvKSAtIElnbml0ZSBvbiBJbmZpbml0ZSBSZWQKCiMjIyMgW0NoZWNrIG91
dCBHbHVlZ3VuXShodHRwczovL2dpdGh1Yi5jb20vaW5maW5pdGVyZWQvZ2x1
ZWd1bikgLSBJZ25pdGUgQ0xJIGlzIHBvd2VyZWQgYnkgR2x1ZWd1biwgd2hp
Y2ggbGV0cyB5b3UgYnVpbGQgQ0xJIGFwcHMgcGFpbmxlc3NseSEKCiMjIDpo
ZWFydDogU3BlY2lhbCBUaGFua3MgOmhlYXJ0OgoKVGhhbmsgeW91IHRvIHRo
ZSBudW1lcm91cyBbY29udHJpYnV0b3JzIG9mIElnbml0ZSBDTEldKGh0dHBz
Oi8vZ2l0aHViLmNvbS9pbmZpbml0ZXJlZC9pZ25pdGUvZ3JhcGhzL2NvbnRy
aWJ1dG9ycykuIE91ciBhd2UgYW5kIGFwcHJlY2lhdGlvbiBmb3IgdGhlIGZy
aWVuZGxpbmVzcyBvZiBPcGVuIFNvdXJjZSBpcyB0aGUgZnVlbCBmb3IgYWxs
IFtJbmZpbml0ZSBSZWRdKGh0dHBzOi8vaW5maW5pdGUucmVkLykgcHJvamVj
dHMgbGlrZSBJZ25pdGUgQ0xJLgoKIyMgUHJlbWl1bSBTdXBwb3J0CgpbSWdu
aXRlIENMSV0oaHR0cHM6Ly9pbmZpbml0ZS5yZWQvaWduaXRlKSwgYXMgYW4g
b3BlbiBzb3VyY2UgcHJvamVjdCwgaXMgZnJlZSB0byB1c2UgYW5kIGFsd2F5
cyB3aWxsIGJlLiBUbyBoZWxwIHN1cHBvcnQgcHJvdmlkaW5nIElnbml0ZSBD
TEkgYW5kIGJvaWxlcnBsYXRlcyBmb3IgZnJlZSwgW0luZmluaXRlIFJlZF0o
aHR0cHM6Ly9pbmZpbml0ZS5yZWQvKSBvZmZlcnMgcHJlbWl1bSBbUmVhY3Qg
TmF0aXZlXShodHRwczovL2luZmluaXRlLnJlZC9yZWFjdC1uYXRpdmUpIGFw
cCBkZXNpZ24vZGV2ZWxvcG1lbnQgc2VydmljZXMuIEdldCBpbiB0b3VjaCBb
aGVyZV0oaHR0cHM6Ly9pbmZpbml0ZS5yZWQvY29udGFjdCkgb3IgZW1haWwg
dXMgYXQgW2hlbGxvQGluZmluaXRlLnJlZF0obWFpbHRvOmhlbGxvQGluZmlu
aXRlLnJlZCkuCg==
",,10611,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"IyBKYXZhc2NyaXB0IE5vZGUgQ2lyY2xlQ0kgMi4wIGNvbmZpZ3VyYXRpb24g
ZmlsZQojCiMgQ2hlY2sgaHR0cHM6Ly9jaXJjbGVjaS5jb20vZG9jcy8yLjAv
bGFuZ3VhZ2UtamF2YXNjcmlwdC8gZm9yIG1vcmUgZGV0YWlscwojCgpkZWZh
dWx0czogJmRlZmF1bHRzCiAgZG9ja2VyOgogICAgIyBDaG9vc2UgdGhlIHZl
cnNpb24gb2YgTm9kZSB5b3Ugd2FudCBoZXJlCiAgICAtIGltYWdlOiBjaXJj
bGVjaS9ub2RlOjExLjEwLjEKICB3b3JraW5nX2RpcmVjdG9yeTogfi9yZXBv
Cgp2ZXJzaW9uOiAyCmpvYnM6CiAgc2V0dXA6CiAgICA8PDogKmRlZmF1bHRz
CiAgICBzdGVwczoKICAgICAgLSBjaGVja291dAogICAgICAtIHJ1bjoKICAg
ICAgICAgIG5hbWU6IFNldCB1cCBnaXQKICAgICAgICAgIGNvbW1hbmQ6IGdp
dCBjb25maWcgLS1nbG9iYWwgdXNlci5lbWFpbCAicmVhY3RvdHJvbkBleGFt
cGxlLmNvbSIgJiYgZ2l0IGNvbmZpZyAtLWdsb2JhbCB1c2VyLm5hbWUgIlJl
YWN0b3Ryb24gVGVzdGVyIgogICAgICAtIHJlc3RvcmVfY2FjaGU6CiAgICAg
ICAgICBuYW1lOiBSZXN0b3JlIG5vZGUgbW9kdWxlcwogICAgICAgICAga2V5
czoKICAgICAgICAgICAgLSB2MS1kZXBlbmRlbmNpZXMte3sgY2hlY2tzdW0g
InBhY2thZ2UuanNvbiIgfX0KICAgICAgICAgICAgIyBmYWxsYmFjayB0byB1
c2luZyB0aGUgbGF0ZXN0IGNhY2hlIGlmIG5vIGV4YWN0IG1hdGNoIGlzIGZv
dW5kCiAgICAgICAgICAgIC0gdjEtZGVwZW5kZW5jaWVzLQogICAgICAtIHJ1
bjoKICAgICAgICAgIG5hbWU6IEluc3RhbGwgZGVwZW5kZW5jaWVzCiAgICAg
ICAgICBjb21tYW5kOiB5YXJuIGluc3RhbGwKICAgICAgLSBzYXZlX2NhY2hl
OgogICAgICAgICAgbmFtZTogU2F2ZSBub2RlIG1vZHVsZXMKICAgICAgICAg
IHBhdGhzOgogICAgICAgICAgICAtIG5vZGVfbW9kdWxlcwogICAgICAgICAg
a2V5OiB2MS1kZXBlbmRlbmNpZXMte3sgY2hlY2tzdW0gInBhY2thZ2UuanNv
biIgfX0KCiAgdGVzdHM6CiAgICA8PDogKmRlZmF1bHRzCiAgICBzdGVwczoK
ICAgICAgLSBjaGVja291dAogICAgICAtIHJlc3RvcmVfY2FjaGU6CiAgICAg
ICAgICBuYW1lOiBSZXN0b3JlIG5vZGUgbW9kdWxlcwogICAgICAgICAga2V5
czoKICAgICAgICAgICAgLSB2MS1kZXBlbmRlbmNpZXMte3sgY2hlY2tzdW0g
InBhY2thZ2UuanNvbiIgfX0KICAgICAgICAgICAgIyBmYWxsYmFjayB0byB1
c2luZyB0aGUgbGF0ZXN0IGNhY2hlIGlmIG5vIGV4YWN0IG1hdGNoIGlzIGZv
dW5kCiAgICAgICAgICAgIC0gdjEtZGVwZW5kZW5jaWVzLQogICAgICAtIHJ1
bjoKICAgICAgICAgIG5hbWU6IENoYW5nZSBQZXJtaXNzaW9ucwogICAgICAg
ICAgY29tbWFuZDogc3VkbyBjaG93biAtUiAkKHdob2FtaSkgL3Vzci9sb2Nh
bAogICAgICAtIHJ1bjoKICAgICAgICAgIG5hbWU6IEluc3RhbGwgUmVhY3Qg
TmF0aXZlIENMSQogICAgICAgICAgY29tbWFuZDogbnBtIGkgLWcgcmVhY3Qt
bmF0aXZlLWNsaQogICAgICAtIHJ1bjoKICAgICAgICAgIG5hbWU6IExpbmsg
SWduaXRlIENMSQogICAgICAgICAgY29tbWFuZDogbnBtIGxpbmsKICAgICAg
LSBydW46CiAgICAgICAgICAjIFdlIGRvbid0IHdhbnQgdG8gaW5zdGFsbCBD
b2NvYXBvZHMgb24gdWJ1bnR1IHdoZXJlIHdlIHJ1biB0aGUgdGVzdHMuCiAg
ICAgICAgICBuYW1lOiBTZXQgdXAgZHVtbXkgYHBvZGAgY29tbWFuZAogICAg
ICAgICAgY29tbWFuZDogfAogICAgICAgICAgICBzdWRvIGxuIC9iaW4vdHJ1
ZSAvdXNyL2xvY2FsL2Jpbi9wb2QKICAgICAgLSBydW46CiAgICAgICAgICBu
YW1lOiBSdW4gdGVzdHMKICAgICAgICAgIGNvbW1hbmQ6IHlhcm4gY2k6dGVz
dCAjIHRoaXMgY29tbWFuZCB3aWxsIGJlIGFkZGVkIHRvL2ZvdW5kIGluIHlv
dXIgcGFja2FnZS5qc29uIHNjcmlwdHMKCiAgcHVibGlzaDoKICAgIDw8OiAq
ZGVmYXVsdHMKICAgIHN0ZXBzOgogICAgICAtIGNoZWNrb3V0CiAgICAgIC0g
cnVuOiBlY2hvICIvL3JlZ2lzdHJ5Lm5wbWpzLm9yZy86X2F1dGhUb2tlbj0k
TlBNX1RPS0VOIiA+PiB+Ly5ucG1yYwogICAgICAtIHJlc3RvcmVfY2FjaGU6
CiAgICAgICAgICBuYW1lOiBSZXN0b3JlIG5vZGUgbW9kdWxlcwogICAgICAg
ICAga2V5czoKICAgICAgICAgICAgLSB2MS1kZXBlbmRlbmNpZXMte3sgY2hl
Y2tzdW0gInBhY2thZ2UuanNvbiIgfX0KICAgICAgICAgICAgIyBmYWxsYmFj
ayB0byB1c2luZyB0aGUgbGF0ZXN0IGNhY2hlIGlmIG5vIGV4YWN0IG1hdGNo
IGlzIGZvdW5kCiAgICAgICAgICAgIC0gdjEtZGVwZW5kZW5jaWVzLQogICAg
ICAjIFJ1biBzZW1hbnRpYy1yZWxlYXNlIGFmdGVyIGFsbCB0aGUgYWJvdmUg
aXMgc2V0LgogICAgICAtIHJ1bjoKICAgICAgICAgIG5hbWU6IFB1Ymxpc2gg
dG8gTlBNCiAgICAgICAgICBjb21tYW5kOiB5YXJuIGNpOnB1Ymxpc2ggIyB0
aGlzIHdpbGwgYmUgYWRkZWQgdG8geW91ciBwYWNrYWdlLmpzb24gc2NyaXB0
cwoKd29ya2Zsb3dzOgogIHZlcnNpb246IDIKICB0ZXN0X2FuZF9yZWxlYXNl
OgogICAgam9iczoKICAgICAgLSBzZXR1cAogICAgICAtIHRlc3RzOgogICAg
ICAgICAgcmVxdWlyZXM6CiAgICAgICAgICAgIC0gc2V0dXAKICAgICAgLSBw
dWJsaXNoOgogICAgICAgICAgcmVxdWlyZXM6CiAgICAgICAgICAgIC0gdGVz
dHMKICAgICAgICAgIGZpbHRlcnM6CiAgICAgICAgICAgIGJyYW5jaGVzOgog
ICAgICAgICAgICAgIG9ubHk6IG1hc3Rlcgo=
",,,,,,,,,,,,,,,,,,,,,,,
