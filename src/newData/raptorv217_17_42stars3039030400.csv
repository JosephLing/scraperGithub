name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'33-js-concepts',147350463,b'\xf0\x9f\x93\x9c 33 concepts every JavaScript developer should know.',b'JavaScript',8,30394,,1019,False,b'https://api.github.com/repos/leonardomso/33-js-concepts/forks',"77u/PGgxIGFsaWduPSJjZW50ZXIiPgo8YnI+CiAgPGEgaHJlZj0iaHR0cHM6
Ly9naXRodWIuY29tL2xlb25hcmRvbXNvLzMzIj48aW1nIHNyYz0iaHR0cHM6
Ly9pLmltZ3VyLmNvbS9kc0htazZILmpwZyIgYWx0PSIzMyBDb25jZXB0cyBF
dmVyeSBKUyBEZXZlbG9wZXIgU2hvdWxkIEtub3ciIHdpZHRoPTIwMCI+PC9h
PgogIDxicj4KICAgIDxicj4KICAzMyBDb25jZXB0cyBFdmVyeSBKYXZhU2Ny
aXB0IERldmVsb3BlciBTaG91bGQgS25vdwogIDxicj48YnI+CjwvaDE+Cgpb
IVtGb2xsb3cgbWVdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vdHdpdHRlci9m
b2xsb3cvbGVvbmFyZG9tc28uc3ZnP3N0eWxlPWZvci10aGUtYmFkZ2UpXSho
dHRwczovL3R3aXR0ZXIuY29tL2xlb25hcmRvbXNvKQoKIyMgSW50cm9kdWN0
aW9uCgpUaGlzIHJlcG9zaXRvcnkgd2FzIGNyZWF0ZWQgd2l0aCB0aGUgaW50
ZW50aW9uIG9mIGhlbHBpbmcgZGV2ZWxvcGVycyBtYXN0ZXIgdGhlaXIgY29u
Y2VwdHMgaW4gSmF2YVNjcmlwdC4gSXQgaXMgbm90IGEgcmVxdWlyZW1lbnQs
IGJ1dCBhIGd1aWRlIGZvciBmdXR1cmUgc3R1ZGllcy4gSXQgaXMgYmFzZWQg
b24gYW4gYXJ0aWNsZSB3cml0dGVuIGJ5IFtTdGVwaGVuIEN1cnRpc10oaHR0
cHM6Ly90d2l0dGVyLmNvbS9zdGVwaGVudGhlY3VydCkgYW5kIHlvdSBjYW4g
cmVhZCBpdCBbaGVyZV0oaHR0cHM6Ly9tZWRpdW0uY29tL0BzdGVwaGVudGhl
Y3VydC8zMy1mdW5kYW1lbnRhbHMtZXZlcnktamF2YXNjcmlwdC1kZXZlbG9w
ZXItc2hvdWxkLWtub3ctMTNkZDcyMGE5MGQxKS4KCioq8J+agCBDb25zaWRl
cmVkIGJ5IEdpdEh1YiBhcyBvbmUgb2YgdGhlIFt0b3Agb3BlbiBzb3VyY2Ug
cHJvamVjdHMgb2YgMjAxOCFdKGh0dHBzOi8vYmxvZy5naXRodWIuY29tLzIw
MTgtMTItMTMtbmV3LW9wZW4tc291cmNlLXByb2plY3RzLykqKgoKIyMgQ29t
bXVuaXR5CgpGZWVsIGZyZWUgdG8gc3VibWl0IGEgUFIgYWRkaW5nIGEgbGlu
ayB0byB5b3VyIG93biByZWNhcHMgb3IgcmV2aWV3cy4gSWYgeW91IHdhbnQg
dG8gdHJhbnNsYXRlIHRoZSByZXBvIGludG8geW91ciBuYXRpdmUgbGFuZ3Vh
Z2UsIHBsZWFzZSBmZWVsIGZyZWUgdG8gZG8gc28uCgpBbGwgdGhlIHRyYW5z
bGF0aW9ucyBmb3IgdGhpcyByZXBvIHdpbGwgYmUgbGlzdGVkIGJlbG93OgoK
LSBbQ2hpbmVzZV0oaHR0cHM6Ly9naXRodWIuY29tL3N0ZXBoZW50aWFuLzMz
LWpzLWNvbmNlcHRzKSDigJQgUmUgVGlhbgotIFtQb3J0dWd1ZXNlLUJSXSho
dHRwczovL2dpdGh1Yi5jb20vdGlhZ29ib2VpbmcvMzMtanMtY29uY2VwdHMp
IOKAlCBUaWFnbyBCb2VpbmcKLSBbS29yZWFuXShodHRwczovL2dpdGh1Yi5j
b20veWpzMDMwNTcvMzMtanMtY29uY2VwdHMuZ2l0KSDigJQgU3VpbiBMZWUK
LSBbU3BhbmlzaF0oaHR0cHM6Ly9naXRodWIuY29tL2Fkb25pc21lbmRvemFw
ZXJlei8zMy1qcy1jb25jZXB0b3MpIOKAlCBBZG9uaXMgTWVuZG96YQotIFtU
dXJraXNoXShodHRwczovL2dpdGh1Yi5jb20vaWxrZXIwLzMzLWpzLWNvbmNl
cHRzKSDigJQgxLBsa2VyIERlbWlyCi0gW1J1c3NpYW5dKGh0dHBzOi8vZ2l0
aHViLmNvbS9ndW1lbm5paS8zMy1qcy1jb25jZXB0cykg4oCUIE1paGFpbCBH
dW1lbm5paQotIFtUaeG6v25nIFZp4buHdF0oaHR0cHM6Ly9naXRodWIuY29t
L25ndXllbnRyYW5jaHVuZy8zMy1qcy1jb25jZXB0cykg4oCUIE5ndXnhu4Vu
IFRy4bqnbiBDaHVuZwotIFtQb2xpc2hdKGh0dHBzOi8vZ2l0aHViLmNvbS9s
aXAzay8zMy1qcy1jb25jZXB0cykg4oCUIERhd2lkIExpcGluc2tpCi0gW1Bl
cnNpYW5dKGh0dHBzOi8vZ2l0aHViLmNvbS9tYWppZGFsYXZpemFkZWgvMzMt
anMtY29uY2VwdHMpIOKAlCBNYWppZCBBbGF2aXphZGVoCi0gW0luZG9uZXNp
YW5dKGh0dHBzOi8vZ2l0aHViLmNvbS9yaWpkei8zMy1qcy1jb25jZXB0cykg
4oCUIFJpamR6dWFuIFNhbXBvZXJuYQotIFtGcmVuY2hdKGh0dHBzOi8vZ2l0
aHViLmNvbS9yb2Jpbm1ldHJhbC8zMy1jb25jZXB0cy1qcykg4oCUIFJvYmlu
IE3DqXRyYWwKLSBbSGluZGldKGh0dHBzOi8vZ2l0aHViLmNvbS92aWthc2No
YXVoYW4vMzMtanMtY29uY2VwdHMpIOKAlCBWaWthcyBDaGF1aGFuCi0gW0dy
ZWVrXShodHRwczovL2dpdGh1Yi5jb20vRGltaXRyaXNaeC8zMy1qcy1jb25j
ZXB0cykg4oCUIERpbWl0cmlzIFphcmFjaGFuaXMKLSBbSmFwYW5lc2VdKGh0
dHBzOi8vZ2l0aHViLmNvbS9vaW1vMjMvMzMtanMtY29uY2VwdHMpIOKAlCBv
aW1vMjMKLSBbR2VybWFuXShodHRwczovL2dpdGh1Yi5jb20vYnVyaGFubm4v
MzMtanMtY29uY2VwdHMpIOKAlCBidXJoYW5ubgotIFtVa3JhaW5pYW5dKGh0
dHBzOi8vZ2l0aHViLmNvbS9BbmRyZXdTYXZldGNodWsvMzMtanMtY29uY2Vw
dHMtdWtyYWluaWFuLXRyYW5zbGF0aW9uKSDigJQgQW5kcmV3IFNhdmV0Y2h1
awotIFtTaW5oYWxhXShodHRwczovL2dpdGh1Yi5jb20vdWR1ZHNoYS8zMy1q
cy1jb25jZXB0cykg4oCUIFVkYXlhIFNoYW1lbmRyYQotIFtJdGFsaWFuXSho
dHRwczovL2dpdGh1Yi5jb20vRG9uZWFybS8zMy1qcy1jb25jZXB0cykgLSBH
aWFubHVjYSBGaW9yZQoKLS0tCgojIyBUYWJsZSBvZiBDb250ZW50cwoKMS4g
KipbQ2FsbCBTdGFja10oIzEtY2FsbC1zdGFjaykqKgoyLiAqKltQcmltaXRp
dmUgVHlwZXNdKCMyLXByaW1pdGl2ZS10eXBlcykqKgozLiAqKltWYWx1ZSBU
eXBlcyBhbmQgUmVmZXJlbmNlIFR5cGVzXSgjMy12YWx1ZS10eXBlcy1hbmQt
cmVmZXJlbmNlLXR5cGVzKSoqCjQuICoqW0ltcGxpY2l0LCBFeHBsaWNpdCwg
Tm9taW5hbCwgU3RydWN0dXJpbmcgYW5kIER1Y2sgVHlwaW5nXSgjNC1pbXBs
aWNpdC1leHBsaWNpdC1ub21pbmFsLXN0cnVjdHVyaW5nLWFuZC1kdWNrLXR5
cGluZykqKgo1LiAqKls9PSB2cyA9PT0gdnMgdHlwZW9mXSgjNS0tdnMtLXZz
LXR5cGVvZikqKgo2LiAqKltGdW5jdGlvbiBTY29wZSwgQmxvY2sgU2NvcGUg
YW5kIExleGljYWwgU2NvcGVdKCM2LWZ1bmN0aW9uLXNjb3BlLWJsb2NrLXNj
b3BlLWFuZC1sZXhpY2FsLXNjb3BlKSoqCjcuICoqW0V4cHJlc3Npb24gdnMg
U3RhdGVtZW50XSgjNy1leHByZXNzaW9uLXZzLXN0YXRlbWVudCkqKgo4LiAq
KltJSUZFLCBNb2R1bGVzIGFuZCBOYW1lc3BhY2VzXSgjOC1paWZlLW1vZHVs
ZXMtYW5kLW5hbWVzcGFjZXMpKioKOS4gKipbTWVzc2FnZSBRdWV1ZSBhbmQg
RXZlbnQgTG9vcF0oIzktbWVzc2FnZS1xdWV1ZS1hbmQtZXZlbnQtbG9vcCkq
KgoxMC4gKipbc2V0VGltZW91dCwgc2V0SW50ZXJ2YWwgYW5kIHJlcXVlc3RB
bmltYXRpb25GcmFtZV0oIzEwLXNldHRpbWVvdXQtc2V0aW50ZXJ2YWwtYW5k
LXJlcXVlc3RhbmltYXRpb25mcmFtZSkqKgoxMS4gKipbSmF2YVNjcmlwdCBF
bmdpbmVzXSgjMTEtamF2YXNjcmlwdC1lbmdpbmVzKSoqCjEyLiAqKltCaXR3
aXNlIE9wZXJhdG9ycywgVHlwZSBBcnJheXMgYW5kIEFycmF5IEJ1ZmZlcnNd
KCMxMi1iaXR3aXNlLW9wZXJhdG9ycy10eXBlLWFycmF5cy1hbmQtYXJyYXkt
YnVmZmVycykqKgoxMy4gKipbRE9NIGFuZCBMYXlvdXQgVHJlZXNdKCMxMy1k
b20tYW5kLWxheW91dC10cmVlcykqKgoxNC4gKipbRmFjdG9yaWVzIGFuZCBD
bGFzc2VzXSgjMTQtZmFjdG9yaWVzLWFuZC1jbGFzc2VzKSoqCjE1LiAqKlt0
aGlzLCBjYWxsLCBhcHBseSBhbmQgYmluZF0oIzE1LXRoaXMtY2FsbC1hcHBs
eS1hbmQtYmluZCkqKgoxNi4gKipbbmV3LCBDb25zdHJ1Y3RvciwgaW5zdGFu
Y2VvZiBhbmQgSW5zdGFuY2VzXSgjMTYtbmV3LWNvbnN0cnVjdG9yLWluc3Rh
bmNlb2YtYW5kLWluc3RhbmNlcykqKgoxNy4gKipbUHJvdG90eXBlIEluaGVy
aXRhbmNlIGFuZCBQcm90b3R5cGUgQ2hhaW5dKCMxNy1wcm90b3R5cGUtaW5o
ZXJpdGFuY2UtYW5kLXByb3RvdHlwZS1jaGFpbikqKgoxOC4gKipbT2JqZWN0
LmNyZWF0ZSBhbmQgT2JqZWN0LmFzc2lnbl0oIzE4LW9iamVjdGNyZWF0ZS1h
bmQtb2JqZWN0YXNzaWduKSoqCjE5LiAqKlttYXAsIHJlZHVjZSwgZmlsdGVy
XSgjMTktbWFwLXJlZHVjZS1maWx0ZXIpKioKMjAuICoqW1B1cmUgRnVuY3Rp
b25zLCBTaWRlIEVmZmVjdHMgYW5kIFN0YXRlIE11dGF0aW9uXSgjMjAtcHVy
ZS1mdW5jdGlvbnMtc2lkZS1lZmZlY3RzLWFuZC1zdGF0ZS1tdXRhdGlvbikq
KgoyMS4gKipbQ2xvc3VyZXNdKCMyMS1jbG9zdXJlcykqKgoyMi4gKipbSGln
aCBPcmRlciBGdW5jdGlvbnNdKCMyMi1oaWdoLW9yZGVyLWZ1bmN0aW9ucykq
KgoyMy4gKipbUmVjdXJzaW9uXSgjMjMtcmVjdXJzaW9uKSoqCjI0LiAqKltD
b2xsZWN0aW9ucyBhbmQgR2VuZXJhdG9yc10oIzI0LWNvbGxlY3Rpb25zLWFu
ZC1nZW5lcmF0b3JzKSoqCjI1LiAqKltQcm9taXNlc10oIzI1LXByb21pc2Vz
KSoqCjI2LiAqKlthc3luYy9hd2FpdF0oIzI2LWFzeW5jYXdhaXQpKioKMjcu
ICoqW0RhdGEgU3RydWN0dXJlc10oIzI3LWRhdGEtc3RydWN0dXJlcykqKgoy
OC4gKipbRXhwZW5zaXZlIE9wZXJhdGlvbiBhbmQgQmlnIE8gTm90YXRpb25d
KCMyOC1leHBlbnNpdmUtb3BlcmF0aW9uLWFuZC1iaWctby1ub3RhdGlvbikq
KgoyOS4gKipbQWxnb3JpdGhtc10oIzI5LWFsZ29yaXRobXMpKioKMzAuICoq
W0luaGVyaXRhbmNlLCBQb2x5bW9ycGhpc20gYW5kIENvZGUgUmV1c2VdKCMz
MC1pbmhlcml0YW5jZS1wb2x5bW9ycGhpc20tYW5kLWNvZGUtcmV1c2UpKioK
MzEuICoqW0Rlc2lnbiBQYXR0ZXJuc10oIzMxLWRlc2lnbi1wYXR0ZXJucykq
KgozMi4gKipbUGFydGlhbCBBcHBsaWNhdGlvbnMsIEN1cnJ5aW5nLCBDb21w
b3NlIGFuZCBQaXBlXSgjMzItcGFydGlhbC1hcHBsaWNhdGlvbnMtY3Vycnlp
bmctY29tcG9zZS1hbmQtcGlwZSkqKgozMy4gKipbQ2xlYW4gQ29kZV0oIzMz
LWNsZWFuLWNvZGUpKioKCgotLS0KCiMjIDEuIENhbGwgU3RhY2sKCiMjIyBB
cnRpY2xlcwoKICog8J+TnCBbVW5kZXJzdGFuZGluZyBKYXZhc2NyaXB0IENh
bGwgU3RhY2ssIEV2ZW50IExvb3BzIOKAlCBHYXVyYXYgUGFuZHZpYV0oaHR0
cHM6Ly9tZWRpdW0uY29tL0BnYXVyYXYucGFuZHZpYS91bmRlcnN0YW5kaW5n
LWphdmFzY3JpcHQtZnVuY3Rpb24tZXhlY3V0aW9ucy10YXNrcy1ldmVudC1s
b29wLWNhbGwtc3RhY2stbW9yZS1wYXJ0LTEtNTY4M2RlYTFmNWVjKQogKiDw
n5OcIFtVbmRlcnN0YW5kaW5nIHRoZSBKYXZhU2NyaXB0IENhbGwgU3RhY2sg
4oCUIENoYXJsZXMgRnJlZWJvcm5dKGh0dHBzOi8vbWVkaXVtLmZyZWVjb2Rl
Y2FtcC5vcmcvdW5kZXJzdGFuZGluZy10aGUtamF2YXNjcmlwdC1jYWxsLXN0
YWNrLTg2MWU0MWFlNjFkNCkKICog8J+TnCBbSmF2YXNjcmlwdDogV2hhdCBJ
cyBUaGUgRXhlY3V0aW9uIENvbnRleHQ/IFdoYXQgSXMgVGhlIENhbGwgU3Rh
Y2s/IOKAlCBWYWxlbnRpbm8gR2FnbGlhcmRpXShodHRwczovL3d3dy52YWxl
bnRpbm9nLmNvbS9ibG9nL2pzLWV4ZWN1dGlvbi1jb250ZXh0LWNhbGwtc3Rh
Y2svKQogKiDwn5OcIFtXaGF0IGlzIHRoZSBKUyBFdmVudCBMb29wIGFuZCBD
YWxsIFN0YWNrPyDigJQgSmVzcyBUZWxmb3JkXShodHRwczovL2dpc3QuZ2l0
aHViLmNvbS9qZXNzdGVsZm9yZC85YTM1ZDIwYTJhYTA0NGRmOGJmMjQxZTAw
ZDdiYzJkMCkKICog8J+TnCBbQ2FsbCBTdGFjayDigJQgTUROXShodHRwczov
L2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL0dsb3NzYXJ5L0Nh
bGxfc3RhY2spCiAqIPCfk5wgW1VuZGVyc3RhbmRpbmcgRXhlY3V0aW9uIENv
bnRleHQgYW5kIEV4ZWN1dGlvbiBTdGFjayBpbiBKYXZhc2NyaXB0IOKAlCBT
dWtoamluZGVyIEFyb3JhXShodHRwczovL2Jsb2cuYml0c3JjLmlvL3VuZGVy
c3RhbmRpbmctZXhlY3V0aW9uLWNvbnRleHQtYW5kLWV4ZWN1dGlvbi1zdGFj
ay1pbi1qYXZhc2NyaXB0LTFjOWVhODY0MmRkMCkKICog8J+TnCBbSG93IEph
dmFTY3JpcHQgV29ya3M6IEFuIE92ZXJ2aWV3IG9mIHRoZSBFbmdpbmUsIHRo
ZSBSdW50aW1lLCBhbmQgdGhlIENhbGwgU3RhY2sg4oCUIEFsZXhhbmRlciBa
bGF0a292XShodHRwczovL2Jsb2cuc2Vzc2lvbnN0YWNrLmNvbS9ob3ctZG9l
cy1qYXZhc2NyaXB0LWFjdHVhbGx5LXdvcmstcGFydC0xLWIwYmFjYzA3M2Nm
KQogKiDwn5OcIFtUaGUgVWx0aW1hdGUgR3VpZGUgdG8gRXhlY3V0aW9uIENv
bnRleHRzLCBIb2lzdGluZywgU2NvcGVzLCBhbmQgQ2xvc3VyZXMgaW4gSmF2
YVNjcmlwdCDigJQgVHlsZXIgTWNHaW5uaXNdKGh0dHBzOi8vdHlsZXJtY2dp
bm5pcy5jb20vdWx0aW1hdGUtZ3VpZGUtdG8tZXhlY3V0aW9uLWNvbnRleHRz
LWhvaXN0aW5nLXNjb3Blcy1hbmQtY2xvc3VyZXMtaW4tamF2YXNjcmlwdC8p
CgojIyMgVmlkZW9zCgogKiDwn46lIFtKYXZhc2NyaXB0OiB0aGUgQ2FsbCBT
dGFjayBleHBsYWluZWQg4oCUIENvZGluZyBCbG9ja3MgSW5kaWFdKGh0dHBz
Oi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9dzZRR0VpUWNlT00pCiAqIPCf
jqUgW1RoZSBKUyBDYWxsIFN0YWNrIEV4cGxhaW5lZCBJbiA5IE1pbnV0ZXMg
4oCUIENvbHQgU3RlZWxlXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRj
aD92PVc4QWVNclZ0RkxZKQogKiDwn46lIFtKYXZhU2NyaXB0IEV4ZWN1dGlv
biBTdGFjayDigJQgQ29kZWNhZGVteV0oaHR0cHM6Ly93d3cueW91dHViZS5j
b20vd2F0Y2g/dj1qVDBVU0plTkZFQSkKICog8J+OpSBbV2hhdCBpcyB0aGUg
Q2FsbCBTdGFjaz8g4oCUIEVyaWMgVHJhdWJdKGh0dHBzOi8vd3d3LnlvdXR1
YmUuY29tL3dhdGNoP3Y9dzdRV1Fsa0xZX3MpCiAqIPCfjqUgW1RoZSBDYWxs
IFN0YWNrIOKAlCBLZXZpbiBEcnVtbV0oaHR0cHM6Ly93d3cueW91dHViZS5j
b20vd2F0Y2g/dj1RMnNGbXF2cEJlMCkKICog8J+OpSBbVW5kZXJzdGFuZGlu
ZyBKYXZhU2NyaXB0IEV4ZWN1dGlvbiDigJQgQ29kZXNtaXRoXShodHRwczov
L3d3dy55b3V0dWJlLmNvbS93YXRjaD92PVo2YTFjTHlxN0FjJmxpc3Q9UExX
clFabkc4bDBFNGtkMVRfbnl1Vm94UVVhWUVXRmdjRCkKICog8J+OpSBbQ2Fs
bCBTdGFjayAmIEV2ZW50IExvb3Ag4oCUIG1vdmllcyBjb21dKGh0dHBzOi8v
d3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9bWswbHU5TUtCdG8pCiAqIPCfjqUg
W1RoZSBVbHRpbWF0ZSBHdWlkZSB0byBFeGVjdXRpb24gQ29udGV4dHMsIEhv
aXN0aW5nLCBTY29wZXMsIGFuZCBDbG9zdXJlcyBpbiBKYXZhU2NyaXB0IOKA
lCBUeWxlciBNY0dpbm5pc10oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0
Y2g/dj1OdC1xYV9MbFVIMCkKICAqIPCfjqUgW1doYXQgdGhlIGhlY2sgaXMg
dGhlIGV2ZW50IGxvb3AgYW55d2F5PyDigJQgUGhpbGlwIFJvYmVydHNdKGh0
dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9OGFHaFpRa29GYlEpCiAg
KiDwn46lIFtMYSBQSUxBIERFIEVKRUNVQ0nDk04gKENhbGwgU3RhY2spIGRl
IEphdmFTY3JpcHQg4oCUIExhIENvY2luYSBkZWwgQ8OzZGlnb10oaHR0cHM6
Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj15Z0E1VTdXZ3NnOCkKCioqW+Ks
hiBCYWNrIHRvIFRvcF0oI3RhYmxlLW9mLWNvbnRlbnRzKSoqCgotLS0KCiMj
IDIuIFByaW1pdGl2ZSBUeXBlcwoKIyMjIEFydGljbGVzCgogKiDwn5OcIFtI
b3cgbnVtYmVycyBhcmUgZW5jb2RlZCBpbiBKYXZhU2NyaXB0IOKAlCBEci4g
QXhlbCBSYXVzY2htYXllcl0oaHR0cDovLzJhbGl0eS5jb20vMjAxMi8wNC9u
dW1iZXItZW5jb2RpbmcuaHRtbCkKICog8J+TnCBbV2hhdCBZb3UgTmVlZCB0
byBLbm93IEFib3V0IEphdmFTY3JpcHQgTnVtYmVyIFR5cGUg4oCUIE1heCBX
aXphcmQgS10oaHR0cHM6Ly9tZWRpdW0uY29tL2RhaWx5anMvamF2YXNjcmlw
dHMtbnVtYmVyLXR5cGUtOGQ1OTE5OWRiMWI2KQogKiDwn5OcIFtXaGF0IEV2
ZXJ5IEphdmFTY3JpcHQgRGV2ZWxvcGVyIFNob3VsZCBLbm93IEFib3V0IEZs
b2F0aW5nIFBvaW50IE51bWJlcnMg4oCUIENoZXd4eV0oaHR0cHM6Ly9ibG9n
LmNoZXd4eS5jb20vMjAxNC8wMi8yNC93aGF0LWV2ZXJ5LWphdmFzY3JpcHQt
ZGV2ZWxvcGVyLXNob3VsZC1rbm93LWFib3V0LWZsb2F0aW5nLXBvaW50LW51
bWJlcnMvKQogKiDwn5OcIFtUaGUgU2VjcmV0IExpZmUgb2YgSmF2YVNjcmlw
dCBQcmltaXRpdmVzIOKAlCBBbmd1cyBDcm9sbF0oaHR0cHM6Ly9qYXZhc2Ny
aXB0d2VibG9nLndvcmRwcmVzcy5jb20vMjAxMC8wOS8yNy90aGUtc2VjcmV0
LWxpZmUtb2YtamF2YXNjcmlwdC1wcmltaXRpdmVzLykKICog8J+TnCBbUHJp
bWl0aXZlIFR5cGVzIOKAlCBGbG93XShodHRwczovL2Zsb3cub3JnL2VuL2Rv
Y3MvdHlwZXMvcHJpbWl0aXZlcy8pCiAqIPCfk5wgWyhOb3QpIEV2ZXJ5dGhp
bmcgaW4gSmF2YVNjcmlwdCBpcyBhbiBPYmplY3Qg4oCUIERhbmllbCBMaV0o
aHR0cDovL2Jsb2cuYnJldy5jb20uaGsvbm90LWV2ZXJ5dGhpbmctaW4tamF2
YXNjcmlwdC1pcy1hbi1vYmplY3QvKQogKiDwn5OcIFtKYXZhU2NyaXB0IGRh
dGEgdHlwZXMgYW5kIGRhdGEgc3RydWN0dXJlcyDigJQgTUROXShodHRwczov
L2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2Ny
aXB0L0RhdGFfc3RydWN0dXJlcyNQcmltaXRpdmVfdmFsdWVzKQogKiDwn5Oc
IFtEaXZpbmcgRGVlcGVyIGluIEphdmFTY3JpcHRzIE9iamVjdHMg4oCUIEFy
ZmF0IFNhbG1hbl0oaHR0cHM6Ly9ibG9nLmJpdHNyYy5pby9kaXZpbmctZGVl
cGVyLWluLWphdmFzY3JpcHRzLW9iamVjdHMtMzE4YjFlMTNkYzEyKQogKiDw
n5OcIFtUaGUgZGlmZmVyZW5jZXMgYmV0d2VlbiBPYmplY3QuZnJlZXplKCkg
dnMgQ29uc3QgaW4gSmF2YVNjcmlwdCDigJQgQm9sYWppIEF5b2RlamldKGh0
dHBzOi8vbWVkaXVtLmNvbS9AYm9sYWppYXlvZGVqaS90aGUtZGlmZmVyZW5j
ZXMtYmV0d2Vlbi1vYmplY3QtZnJlZXplLXZzLWNvbnN0LWluLWphdmFzY3Jp
cHQtNGVhY2VhNTM0ZDdjKQoKIyMjIFZpZGVvcwoKICog8J+OpSBbSmF2YVNj
cmlwdCBSZWZlcmVuY2UgdnMgUHJpbWl0aXZlIFR5cGVzIOKAlCBBY2FkZW1p
bmRdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9OW9vWVlSTGRn
X2cpCiAqIPCfjqUgW0phdmFTY3JpcHQgUHJpbWl0aXZlIFR5cGVzIOKAlCBT
aW1vbiBTZXogSVRdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9
SHNiV1FzU0NFNVkpCiAqIPCfjqUgW1ZhbHVlIFR5cGVzIGFuZCBSZWZlcmVu
Y2UgVHlwZXMgaW4gSmF2YVNjcmlwdCDigJQgUHJvZ3JhbW1pbmcgd2l0aCBN
b3NoXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWUtX21EeXFt
Mm9VKQogKiDwn46lIFtKYXZhU2NyaXB0IFByaW1pdGl2ZSBEYXRhIFR5cGVz
IOKAlCBBdmVseF0oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1x
dzNqMEEzREl6USkKICog8J+OpSBbRXZlcnl0aGluZyB5b3UgbmV2ZXIgd2Fu
dGVkIHRvIGtub3cgYWJvdXQgSmF2YVNjcmlwdCBudW1iZXJzIOKAlCBCYXJ0
ZWsgU3pvcGthXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PU1x
SEREdFZZSlJJKQogKiDwn46lIFtXaGF0IGFyZSB2YXJpYWJsZXMgaW4gSmF2
YXNjcmlwdD8g4oCUIEpTIEZvciBFdmVyeW9uZV0oaHR0cHM6Ly93d3cueW91
dHViZS5jb20vd2F0Y2g/dj1CNEJibWVpX3RodykKICog8J+OpSBbVElQT1Mg
REUgREFUT1MgUFJJTUlUSVZPUyBlbiBKQVZBU0NSSVBUIC0gTGEgQ29jaW5h
IGRlbCBDw7NkaWdvXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92
PWNDNjVEMnE1ZjhJKQoKKipb4qyGIEJhY2sgdG8gVG9wXSgjdGFibGUtb2Yt
Y29udGVudHMpKioKCi0tLQoKIyMgMy4gVmFsdWUgVHlwZXMgYW5kIFJlZmVy
ZW5jZSBUeXBlcwoKIyMjIEFydGljbGVzCgogKiDwn5OcIFtFeHBsYWluaW5n
IFZhbHVlIHZzLiBSZWZlcmVuY2UgaW4gSmF2YXNjcmlwdCDigJQgQXJuYXYg
QWdnYXJ3YWxdKGh0dHBzOi8vY29kZWJ1cnN0LmlvL2V4cGxhaW5pbmctdmFs
dWUtdnMtcmVmZXJlbmNlLWluLWphdmFzY3JpcHQtNjQ3YTk3NWUxMmEwKQog
KiDwn5OcIFtVbmRlcnN0YW5kIFZhbHVlIGFuZCBSZWZlcmVuY2UgVHlwZXMg
aW4gSmF2YVNjcmlwdCDigJQgWnNvbHQgTmFneV0oaHR0cHM6Ly93d3cuenNv
bHRuYWd5LmV1L3VuZGVyc3RhbmQtdmFsdWUtYW5kLXJlZmVyZW5jZS10eXBl
cy1pbi1qYXZhc2NyaXB0LykKICog8J+TnCBbUHJpbWl0aXZlIFR5cGVzICYg
UmVmZXJlbmNlIFR5cGVzIGluIEphdmFTY3JpcHQg4oCUIEJyYW4gdmFuIGRl
ciBNZWVyXShodHRwczovL2dpc3QuZ2l0aHViLmNvbS9icmFubmVtYW4vN2Zi
MDZkOGE3NGQ3ZTZkNGNiY2Y3NWM1MGZlYzU5OWMpCiAqIPCfk5wgW1ZhbHVl
IFR5cGVzLCBSZWZlcmVuY2UgVHlwZXMgYW5kIFNjb3BlIGluIEphdmFTY3Jp
cHQg4oCUIEJlbiBBc3Rvbl0oaHR0cHM6Ly9tZWRpdW0uY29tL0BiZW5hc3Rv
bnR3ZWV0L2xlc3Nvbi0xYi1qYXZhc2NyaXB0LWZ1bmRhbWVudGFscy0zODBm
NjAxYmE4NTEpCiAqIPCfk5wgW0JhY2sgdG8gcm9vdHM6IEphdmFTY3JpcHQg
VmFsdWUgdnMgUmVmZXJlbmNlIOKAlCBNaXJvIEtvY3prYV0oaHR0cHM6Ly9t
ZWRpdW0uY29tL2RhaWx5anMvYmFjay10by1yb290cy1qYXZhc2NyaXB0LXZh
bHVlLXZzLXJlZmVyZW5jZS04ZmI2OWQ1ODdhMTgpCiAqIPCfk5wgW0dyYXNw
IOKAnEJ5IFZhbHVl4oCdIGFuZCDigJxCeSBSZWZlcmVuY2XigJ0gaW4gSmF2
YVNjcmlwdCDigJQgTMOpbmEgRmF1cmVdKGh0dHBzOi8vaGFja2Vybm9vbi5j
b20vZ3Jhc3AtYnktdmFsdWUtYW5kLWJ5LXJlZmVyZW5jZS1pbi1qYXZhc2Ny
aXB0LTdlZDc1ZWZhMTI5MykKICog8J+TnCBbSmF2YVNjcmlwdCBSZWZlcmVu
Y2UgYW5kIENvcHkgVmFyaWFibGVzIOKAlCBWw610b3IgQ2FwcmV0el0oaHR0
cHM6Ly9oYWNrZXJub29uLmNvbS9qYXZhc2NyaXB0LXJlZmVyZW5jZS1hbmQt
Y29weS12YXJpYWJsZXMtYjAxMDMwNzRmZGYwKQogKiDwn5OcIFtKYXZhU2Ny
aXB0IFByaW1pdGl2ZSB2cyBSZWZlcmVuY2UgVmFsdWVzXShodHRwOi8vd3d3
LmphdmFzY3JpcHR0dXRvcmlhbC5uZXQvamF2YXNjcmlwdC1wcmltaXRpdmUt
dnMtcmVmZXJlbmNlLXZhbHVlcy8pCiAqIPCfk5wgW0phdmFTY3JpcHQgYnkg
UmVmZXJlbmNlIHZzLiBieSBWYWx1ZSDigJQgbnJhYmlub3dpdHpdKGh0dHBz
Oi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzY2MDU2NDAvamF2YXNj
cmlwdC1ieS1yZWZlcmVuY2UtdnMtYnktdmFsdWUpCiAqIPCfk5wgW0phdmFT
Y3JpcHQgSW50ZXJ2aWV3IFByZXA6IFByaW1pdGl2ZSB2cy4gUmVmZXJlbmNl
IFR5cGVzIOKAlCBNaWtlIENyb25pbl0oaHR0cHM6Ly9kZXYudG8vbW9zdGx5
Zm9jdXNlZG1pa2UvamF2YXNjcmlwdC1pbnRlcnZpZXctcHJlcC1wcmltaXRp
dmUtdnMtcmVmZXJlbmNlLXR5cGVzLTNvNGYpCgojIyMgVmlkZW9zCgogKiDw
n46lIFtKYXZhc2NyaXB0IFBhc3MgYnkgVmFsdWUgdnMgUGFzcyBieSBSZWZl
cmVuY2Ug4oCUIHRlY2hzaXRoXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93
YXRjaD92PUUtZEFuRmRxOGs4KQogKiDwn46lIFtKYXZhU2NyaXB0IFZhbHVl
IHZzIFJlZmVyZW5jZSBUeXBlcyDigJQgUHJvZ3JhbW1pbmcgd2l0aCBNb3No
XShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWZEMHRfREtSRWJF
KQoKKipb4qyGIEJhY2sgdG8gVG9wXSgjdGFibGUtb2YtY29udGVudHMpKioK
Ci0tLQoKIyMgNC4gSW1wbGljaXQsIEV4cGxpY2l0LCBOb21pbmFsLCBTdHJ1
Y3R1cmluZyBhbmQgRHVjayBUeXBpbmcKCiMjIyBBcnRpY2xlcwoKICog8J+T
nCBbV2hhdCB5b3UgbmVlZCB0byBrbm93IGFib3V0IEphdmFzY3JpcHQncyBJ
bXBsaWNpdCBDb2VyY2lvbiDigJQgUHJvbWlzZSBUb2NoaV0oaHR0cHM6Ly9k
ZXYudG8vcHJvbWhpemUvd2hhdC15b3UtbmVlZC10by1rbm93LWFib3V0LWph
dmFzY3JpcHRzLWltcGxpY2l0LWNvZXJjaW9uLWUyMykKICog8J+TnCBbSmF2
YVNjcmlwdCBUeXBlIENvZXJjaW9uIEV4cGxhaW5lZCDigJQgQWxleGV5IFNh
bW9zaGtpbl0oaHR0cHM6Ly9tZWRpdW0uZnJlZWNvZGVjYW1wLm9yZy9qcy10
eXBlLWNvZXJjaW9uLWV4cGxhaW5lZC0yN2JhM2Q5YTI4MzkpCiAqIPCfk5wg
W0phdmFzY3JpcHQgQ29lcmNpb24gRXhwbGFpbmVkIOKAlCBCZW4gR2Fycmlz
b25dKGh0dHBzOi8vaGFja2Vybm9vbi5jb20vamF2YXNjcmlwdC1jb2VyY2lv
bi1leHBsYWluZWQtNTQ1Yzg5NTIxM2QzKQogKiDwn5OcIFtXaGF0IGV4YWN0
bHkgaXMgVHlwZSBDb2VyY2lvbiBpbiBKYXZhc2NyaXB0PyAtIFN0YWNrIE92
ZXJmbG93XShodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8x
OTkxNTY4OC93aGF0LWV4YWN0bHktaXMtdHlwZS1jb2VyY2lvbi1pbi1qYXZh
c2NyaXB0KQogKiDwn5OcIFtZb3UgRG9uJ3QgS25vdyBKUzogVHlwZXMgJiBH
cmFtbWFyIFtCb29rXSDigJQgS3lsZSBTaW1wc29uXShodHRwczovL3d3dy5v
cmVpbGx5LmNvbS9saWJyYXJ5L3ZpZXcveW91LWRvbnQta25vdy85NzgxNDkx
OTA1MTU5L2NoMDQuaHRtbCkKICog8J+TnCBbVHlwZSBDb2VyY2lvbiBpbiBK
YXZhU2NyaXB0LCBhbmQgd2h5IGV2ZXJ5b25lIGdldHMgaXQgd3JvbmcuXSho
dHRwczovL3RoZWRldnMubmV0d29yay9ibG9nL3R5cGUtY29lcmNpb24taW4t
amF2YXNjcmlwdC1hbmQtd2h5LWV2ZXJ5b25lLWdldHMtaXQtd3JvbmcpCgog
IyMjIFZpZGVvcwoKICog8J+OpSBbPT0gPyA9PT0gPz8/IC4uLiNAXiUgLSBT
aGlybXVuZyBCaWVsZWZlbGRdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dh
dGNoP3Y9cUd5cXpOMGJqaGMmdCkKICog8J+OpSBbQ29lcmNpb24gaW4gSmF2
YXNjcmlwdCAtIEhpdGVzaCBDaG91ZGhhcnldKGh0dHBzOi8vd3d3LnlvdXR1
YmUuY29tL3dhdGNoP3Y9YjA0UV92eXFFRzgpCiAqIPCfjqUgW0phdmFTY3Jp
cHQgUXVlc3Rpb25zOiBXaGF0IGlzIENvZXJjaW9uPyAtIFN0ZXZlbiBIYW5j
b2NrXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PXo0LTh3TVNQ
SnlJKQogKiDwn46lIFtUeXBpbmc6IFN0YXRpYyB2cyBEeW5hbWljLCBXZWFr
IHZzLiBTdHJvbmcgLSBDb2RleHBhbnNlXShodHRwczovL3d3dy55b3V0dWJl
LmNvbS93YXRjaD92PUM1ZnIwTFpMTUFzKQoKKipb4qyGIEJhY2sgdG8gVG9w
XSgjdGFibGUtb2YtY29udGVudHMpKioKCi0tLQoKIyMgNS4gPT0gdnMgPT09
IHZzIHR5cGVvZgoKIyMjIEFydGljbGVzCgogKiDwn5OcIFtKYXZhU2NyaXB0
IERvdWJsZSBFcXVhbHMgdnMuIFRyaXBsZSBFcXVhbHMg4oCUIEJyYW5kb24g
TW9yZWxsaV0oaHR0cHM6Ly9jb2RlYnVyc3QuaW8vamF2YXNjcmlwdC1kb3Vi
bGUtZXF1YWxzLXZzLXRyaXBsZS1lcXVhbHMtNjFkNGNlNWExMjFhKQogKiDw
n5OcIFtTaG91bGQgSSB1c2UgPT09IG9yID09IGVxdWFsaXR5IGNvbXBhcmlz
b24gb3BlcmF0b3IgaW4gSmF2YVNjcmlwdD8g4oCUIFBhbnUgUGl0a2FtYWtp
XShodHRwczovL2J5dGVhcmNoZXIuY29tL2FydGljbGVzL2VxdWFsaXR5LWNv
bXBhcmlzb24tb3BlcmF0b3ItamF2YXNjcmlwdC8pCiAqIPCfk5wgWz09IHZz
ID09PSBKYXZhU2NyaXB0OiBEb3VibGUgRXF1YWxzIGFuZCBDb2VyY2lvbiDi
gJQgQUogTWV5Z2hhbmldKGh0dHBzOi8vd3d3LmNvZGVtZW50b3IuaW8vamF2
YXNjcmlwdC90dXRvcmlhbC9kb3VibGUtZXF1YWxzLWFuZC1jb2VyY2lvbi1p
bi1qYXZhc2NyaXB0KQogKiDwn5OcIFtXaHkgVXNlIHRoZSBUcmlwbGUtRXF1
YWxzIE9wZXJhdG9yIGluIEphdmFTY3JpcHQ/IOKAlCBMb3VpcyBMYXphcmlz
XShodHRwczovL3d3dy5pbXByZXNzaXZld2Vicy5jb20vd2h5LXVzZS10cmlw
bGUtZXF1YWxzLWphdmFzY2lwdC8pCiAqIPCfk5wgW1doYXQgaXMgdGhlIGRp
ZmZlcmVuY2UgYmV0d2VlbiA9PSBhbmQgPT09IGluIEphdmFTY3JpcHQ/IOKA
lCBDcmFpZyBCdWNrbGVyXShodHRwczovL3d3dy5vcmVpbGx5LmNvbS9sZWFy
bmluZy93aGF0LWlzLXRoZS1kaWZmZXJlbmNlLWJldHdlZW4tYW5kLWluLWph
dmFzY3JpcHQpCiAqIPCfk5wgW1doeSBqYXZhc2NyaXB0J3MgdHlwZW9mIGFs
d2F5cyByZXR1cm4gIm9iamVjdCI/IOKAlCBTdGFjayBPdmVyZmxvd10oaHR0
cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMzc4NzkwMS93aHkt
amF2YXNjcmlwdHMtdHlwZW9mLWFsd2F5cy1yZXR1cm4tb2JqZWN0KQogKiDw
n5OcIFtDaGVja2luZyBUeXBlcyBpbiBKYXZhc2NyaXB0IOKAlCBUb2J5IEhv
XShodHRwOi8vdG9ieWhvLmNvbS8yMDExLzAxLzI4L2NoZWNraW5nLXR5cGVz
LWluLWphdmFzY3JpcHQvKQogKiDwn5OcIFtIb3cgdG8gYmV0dGVyIGNoZWNr
IGRhdGEgdHlwZXMgaW4gSmF2YVNjcmlwdCDigJQgV2ViYmpvY2tlXShodHRw
czovL3dlYmJqb2NrZS5jb20vamF2YXNjcmlwdC1jaGVjay1kYXRhLXR5cGVz
LykKICog8J+TnCBbQ2hlY2tpbmcgZm9yIHRoZSBBYnNlbmNlIG9mIGEgVmFs
dWUgaW4gSmF2YVNjcmlwdCDigJQgVG9tZXIgQWJlcmJhY2hdKGh0dHBzOi8v
dG9tZXJhYmVyYmEuY2gvaHRtbC9wb3N0L2NoZWNraW5nLWZvci10aGUtYWJz
ZW5jZS1vZi1hLXZhbHVlLWluLWphdmFzY3JpcHQuaHRtbCkKCiMjIyBWaWRl
b3MKCiAqIPCfjqUgW0phdmFTY3JpcHQgLSBUaGUgdHlwZW9mIG9wZXJhdG9y
IOKAlCBKYXZhIEJyYWluc10oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0
Y2g/dj1vbF9zdTg4STNrdykKICog8J+OpSBbSmF2YXNjcmlwdCB0eXBlb2Yg
b3BlcmF0b3Ig4oCUIERldkRlbGlnaHRdKGh0dHBzOi8vd3d3LnlvdXR1YmUu
Y29tL3dhdGNoP3Y9cVBZaFRQdF9TYlEpCgoqKlvirIYgQmFjayB0byBUb3Bd
KCN0YWJsZS1vZi1jb250ZW50cykqKgoKLS0tCgojIyA2LiBGdW5jdGlvbiBT
Y29wZSwgQmxvY2sgU2NvcGUgYW5kIExleGljYWwgU2NvcGUKCiMjIyBBcnRp
Y2xlcwoKICog8J+TnCBbWW91IERvbid0IEtub3cgSlM6IFNjb3BlICYgQ2xv
c3VyZXMgW0Jvb2tdIOKAlCBLeWxlIFNpbXBzb25dKGh0dHBzOi8vZ2l0aHVi
LmNvbS9nZXRpZnkvWW91LURvbnQtS25vdy1KUy9ibG9iLzFzdC1lZC9zY29w
ZSUyMCUyNiUyMGNsb3N1cmVzL2NoMy5tZCkKICog8J+TnCBbSmF2YVNjcmlw
dCBGdW5jdGlvbnPigIrigJTigIpVbmRlcnN0YW5kaW5nIFRoZSBCYXNpY3Mg
4oCUIEJyYW5kb24gTW9yZWxsaV0oaHR0cHM6Ly9jb2RlYnVyc3QuaW8vamF2
YXNjcmlwdC1mdW5jdGlvbnMtdW5kZXJzdGFuZGluZy10aGUtYmFzaWNzLTIw
N2RiZjQyZWQ5OSkKICog8J+TnCBbVGhlIGJhdHRsZSBiZXR3ZWVuIEZ1bmN0
aW9uIFNjb3BlIGFuZCBCbG9jayBTY29wZSDigJQgTWFyaXVzIEhlcnJpbmdd
KGh0dHA6Ly93d3cuZGVhZGNvZGVyaXNpbmcuY29tLzIwMTctMDQtMTEtZXM2
LXZhci1sZXQtYW5kLWNvbnN0LXRoZS1iYXR0bGUtYmV0d2Vlbi1mdW5jdGlv
bi1zY29wZS1hbmQtYmxvY2stc2NvcGUvKQogKiDwn5OcIFtFbXVsYXRpbmcg
QmxvY2sgU2NvcGUgaW4gSmF2YVNjcmlwdCDigJQgSm9zaCBDbGFudG9uXSho
dHRwOi8vYWRyaXBvZmphdmFzY3JpcHQuY29tL2Jsb2cvZHJpcHMvZW11bGF0
aW5nLWJsb2NrLXNjb3BlLWluLWphdmFzY3JpcHQuaHRtbCkKICog8J+TnCBb
VGhlIERpZmZlcmVuY2UgQmV0d2VlbiBGdW5jdGlvbiBhbmQgQmxvY2sgU2Nv
cGUgaW4gSmF2YVNjcmlwdCDigJQgSm9zZXBoIENhcmRpbGxvXShodHRwczov
L21lZGl1bS5jb20vQGpvc2VwaGNhcmRpbGxvL3RoZS1kaWZmZXJlbmNlLWJl
dHdlZW4tZnVuY3Rpb24tYW5kLWJsb2NrLXNjb3BlLWluLWphdmFzY3JpcHQt
NDI5NmIyMzIyYWJlKQogKiDwn5OcIFtGdW5jdGlvbiBTY29wZXMgYW5kIEJs
b2NrIFNjb3BlcyBpbiBKYXZhU2NyaXB0IOKAlCBTYW1lciBCdW5hXShodHRw
czovL2VkZ2Vjb2RlcnMuY29tL2Z1bmN0aW9uLXNjb3Blcy1hbmQtYmxvY2st
c2NvcGVzLWluLWphdmFzY3JpcHQtMjViYmQ3ZjI5M2Q3KQogKiDwn5OcIFtV
bmRlcnN0YW5kaW5nIFNjb3BlIGFuZCBDb250ZXh0IGluIEphdmFTY3JpcHQg
fCBSeWFuIE1vcnJdKGh0dHA6Ly9yeWFubW9yci5jb20vdW5kZXJzdGFuZGlu
Zy1zY29wZS1hbmQtY29udGV4dC1pbi1qYXZhc2NyaXB0LykKICog8J+TnCBb
SmF2YVNjcmlwdCBTY29wZSBhbmQgQ2xvc3VyZXMg4oCUIFplbGwgTGlld10o
aHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9qYXZhc2NyaXB0LXNjb3BlLWNsb3N1
cmVzLykKICog8J+TnCBbVW5kZXJzdGFuZGluZyBTY29wZSBpbiBKYXZhU2Ny
aXB0IOKAlCBXaXNzYW0gQWJpcmFjaGVkXShodHRwczovL2RldmVsb3Blci50
ZWxlcmlrLmNvbS90b3BpY3Mvd2ViLWRldmVsb3BtZW50L3VuZGVyc3RhbmRp
bmctc2NvcGUtaW4tamF2YXNjcmlwdC8pCiAqIPCfk5wgW1NwZWFraW5nIEph
dmFTY3JpcHQgLSBWYXJpYWJsZXM6IFNjb3BlcywgRW52aXJvbm1lbnRzLCBh
bmQgQ2xvc3VyZXMg4oCUIERyLiBBeGVsIFJhdXNjaG1heWVyXShodHRwOi8v
c3BlYWtpbmdqcy5jb20vZXM1L2NoMTYuaHRtbCkKICog8J+TnCBbVW5kZXJz
dGFuZGluZyBTY29wZSBpbiBKYXZhU2NyaXB0IOKAlSBIYW1tYWQgQWhtZWRd
KGh0dHBzOi8vc2NvdGNoLmlvL3R1dG9yaWFscy91bmRlcnN0YW5kaW5nLXNj
b3BlLWluLWphdmFzY3JpcHQpCiAqIPCfk5wgW1doZW4gdG8gdXNlIGEgZnVu
Y3Rpb24gZGVjbGFyYXRpb24gdnMuIGEgZnVuY3Rpb24gZXhwcmVzc2lvbiDi
gJUgQW1iZXIgV2lsa2llXShodHRwczovL21lZGl1bS5mcmVlY29kZWNhbXAu
b3JnL3doZW4tdG8tdXNlLWEtZnVuY3Rpb24tZGVjbGFyYXRpb25zLXZzLWEt
ZnVuY3Rpb24tZXhwcmVzc2lvbi03MGYxNTE1MmEwYTApCiAqIPCfk5wgW0Eg
SmF2YVNjcmlwdCBGdW5kYW1lbnRhbHMgQ2hlYXQgU2hlZXQ6IFNjb3BlLCBD
b250ZXh0LCBhbmQg4oCcdGhpc+KAnSDigJUgQWxleGFuZHJhIEZyZW5dKGh0
dHBzOi8vZGV2LnRvL2FsZXhhbmRyYWZyZW4vYS1qYXZhc2NyaXB0LWZ1bmRh
bWVudGFscy1jaGVhdC1zaGVldC1zY29wZS1jb250ZXh0LWFuZC10aGlzLTI4
YWkpCgojIyMgVmlkZW9zCgogKiDwn46lIFtXaGF0IE1ha2VzIEphdmFzY3Jp
cHQgV2VpcmQgLi4uIGFuZCBBd2Vzb21lIHB0LiA0IOKAlCBMZWFybkNvZGUu
YWNhZGVteV0oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1TQndv
RmtSalp2RSkKICog8J+OpSBbVmFyaWFibGUgU2NvcGUgaW4gSmF2YVNjcmlw
dCDigJQgS2lydXBhIENoaW5uYXRoYW1iaV0oaHR0cHM6Ly93d3cueW91dHVi
ZS5jb20vd2F0Y2g/dj1kaHA1N1QzcDc2MCkKICog8J+OpSBbSmF2YVNjcmlw
dCBCbG9jayBTY29wZSBhbmQgRnVuY3Rpb24gU2NvcGUg4oCUIG1tdHV0c10o
aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1hS19udVVBZHI4RSkK
ICog8J+OpSBbV2hhdCB0aGUgSGVjayBpcyBMZXhpY2FsIFNjb3BlPyDigJQg
TldDYWx2YW5rXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PUdo
TkEwcjEwTW1BKQoKKipb4qyGIEJhY2sgdG8gVG9wXSgjdGFibGUtb2YtY29u
dGVudHMpKioKCi0tLQoKIyMgNy4gRXhwcmVzc2lvbiB2cyBTdGF0ZW1lbnQK
CiMjIyBBcnRpY2xlcwoKICog8J+TnCBbQWxsIHlvdSBuZWVkIHRvIGtub3cg
YWJvdXQgSmF2YXNjcmlwdCdzIEV4cHJlc3Npb25zLCBTdGF0ZW1lbnRzIGFu
ZCBFeHByZXNzaW9uIFN0YXRlbWVudHMg4oCUIFByb21pc2UgVG9jaGldKGh0
dHBzOi8vZGV2LnRvL3Byb21oaXplL2phdmFzY3JpcHQtaW4tZGVwdGgtYWxs
LXlvdS1uZWVkLXRvLWtub3ctYWJvdXQtZXhwcmVzc2lvbnMtc3RhdGVtZW50
cy1hbmQtZXhwcmVzc2lvbi1zdGF0ZW1lbnRzLTVrMikKICog8J+TnCBbRnVu
Y3Rpb24gRXhwcmVzc2lvbnMgdnMgRnVuY3Rpb24gRGVjbGFyYXRpb25zIOKA
lCBQYXVsIFdpbGtpbnNdKGh0dHBzOi8vd3d3LnNpdGVwb2ludC5jb20vZnVu
Y3Rpb24tZXhwcmVzc2lvbnMtdnMtZGVjbGFyYXRpb25zLykKICog8J+TnCBb
SmF2YVNjcmlwdCBGdW5jdGlvbiDigJQgRGVjbGFyYXRpb24gdnMgRXhwcmVz
c2lvbiDigJQgUmF2aSBSb3NoYW5dKGh0dHBzOi8vbWVkaXVtLmNvbS9AcmF2
aXJvc2hhbi50YWxrL2phdmFzY3JpcHQtZnVuY3Rpb24tZGVjbGFyYXRpb24t
dnMtZXhwcmVzc2lvbi1mNTg3M2I4YzdiMzgpCiAqIPCfk5wgW0Z1bmN0aW9u
IERlY2xhcmF0aW9ucyB2cy4gRnVuY3Rpb24gRXhwcmVzc2lvbnMg4oCUIE1h
bmRlZXAgU2luZ2hdKGh0dHBzOi8vbWVkaXVtLmNvbS9AbWFuZGVlcDEwMTIv
ZnVuY3Rpb24tZGVjbGFyYXRpb25zLXZzLWZ1bmN0aW9uLWV4cHJlc3Npb25z
LWI0MzY0NjA0MjA1MikKICog8J+TnCBbRnVuY3Rpb24gRGVjbGFyYXRpb25z
IHZzLiBGdW5jdGlvbiBFeHByZXNzaW9ucyDigJQgQW5ndWxzIENyb2xsXSho
dHRwczovL2phdmFzY3JpcHR3ZWJsb2cud29yZHByZXNzLmNvbS8yMDEwLzA3
LzA2L2Z1bmN0aW9uLWRlY2xhcmF0aW9ucy12cy1mdW5jdGlvbi1leHByZXNz
aW9ucy8pCgojIyMgVmlkZW9zCgogKiDwn46lIFtFeHByZXNzaW9ucyB2cy4g
U3RhdGVtZW50cyBpbiBKYXZhU2NyaXB0IOKAlCBIZXhsZXRdKGh0dHBzOi8v
d3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9V1Z5Q3JJMWNIaTgpCiAqIPCfjqUg
W0phdmFTY3JpcHQgLSBFeHByZXNzaW9uIHZzLiBTdGF0ZW1lbnQg4oCUIFdl
YlR1bmluZ3NdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9M2pE
cE5HSmt1cEEpCiAqIPCfjqUgW0Z1bmN0aW9uIFN0YXRlbWVudHMgYW5kIEZ1
bmN0aW9uIEV4cHJlc3Npb25zIOKAlCBDb2RlYWNhZGVteV0oaHR0cHM6Ly93
d3cueW91dHViZS5jb20vd2F0Y2g/dj1vQjVySF85YnFBSSkKCioqW+KshiBC
YWNrIHRvIFRvcF0oI3RhYmxlLW9mLWNvbnRlbnRzKSoqCgotLS0KCiMjIDgu
IElJRkUsIE1vZHVsZXMgYW5kIE5hbWVzcGFjZXMKCiMjIyBBcnRpY2xlcwoK
ICog8J+TnCBbTWFzdGVyaW5nIEltbWVkaWF0ZWx5LUludm9rZWQgRnVuY3Rp
b24gRXhwcmVzc2lvbnMg4oCVIENoYW5kcmEgR3VuZGFtYXJhanVdKGh0dHBz
Oi8vbWVkaXVtLmNvbS9AdnZrY2hhbmRyYS9lc3NlbnRpYWwtamF2YXNjcmlw
dC1tYXN0ZXJpbmctaW1tZWRpYXRlbHktaW52b2tlZC1mdW5jdGlvbi1leHBy
ZXNzaW9ucy02Nzc5MTMzOGRkYzYpCiAqIPCfk5wgW0RvIEVTNiBNb2R1bGVz
IG1ha2UgdGhlIGNhc2Ugb2YgSUlGRXMgb2Jzb2xldGU/XShodHRwczovL2hh
c2hub2RlLmNvbS9wb3N0L2RvLWVzNi1tb2R1bGVzLW1ha2UtdGhlLWNhc2Ut
b2YtaWlmZXMtb2Jzb2xldGUtY2l2OTZ3ZXQ4MHNjcWdjNTM4dW4yMGVzMCkK
ICog8J+TnCBbQSAxMCBtaW51dGUgcHJpbWVyIHRvIEphdmFTY3JpcHQgbW9k
dWxlcywgbW9kdWxlIGZvcm1hdHMsIG1vZHVsZSBsb2FkZXJzIGFuZCBtb2R1
bGUgYnVuZGxlcnMg4oCVIEp1cmdlbiBWYW4gZGUgTW9lcmVdKGh0dHBzOi8v
d3d3Lmp2YW5kZW1vLmNvbS9hLTEwLW1pbnV0ZS1wcmltZXItdG8tamF2YXNj
cmlwdC1tb2R1bGVzLW1vZHVsZS1mb3JtYXRzLW1vZHVsZS1sb2FkZXJzLWFu
ZC1tb2R1bGUtYnVuZGxlcnMvKQogKiDwn5OcIFtNb2R1bGVzIOKAlSBFeHBs
b3JpbmcgSlNdKGh0dHA6Ly9leHBsb3Jpbmdqcy5jb20vZXM2L2NoX21vZHVs
ZXMuaHRtbCkKICog8J+TnCBbRVMgbW9kdWxlczogQSBjYXJ0b29uIGRlZXAt
ZGl2ZSDigJQgTGluIENsYXJrXShodHRwczovL2hhY2tzLm1vemlsbGEub3Jn
LzIwMTgvMDMvZXMtbW9kdWxlcy1hLWNhcnRvb24tZGVlcC1kaXZlLykKICog
8J+TnCBbVW5kZXJzdGFuZGluZyBFUzYgTW9kdWxlcyDigJQgQ3JhaWcgQnVj
a2xlcl0oaHR0cHM6Ly93d3cuc2l0ZXBvaW50LmNvbS91bmRlcnN0YW5kaW5n
LWVzNi1tb2R1bGVzLykKICog8J+TnCBbQW4gb3ZlcnZpZXcgb2YgRVM2IE1v
ZHVsZXMgaW4gSmF2YVNjcmlwdCDigJQgQnJlbnQgR3JhaGFtXShodHRwczov
L2Jsb2cuY2xvdWQ2Ni5jb20vYW4tb3ZlcnZpZXctb2YtZXM2LW1vZHVsZXMt
aW4tamF2YXNjcmlwdC8pCiAqIPCfk5wgW0VTNiBNb2R1bGVzIGluIERlcHRo
IOKAlCBOaWNvbMOhcyBCZXZhY3F1YV0oaHR0cHM6Ly9wb255Zm9vLmNvbS9h
cnRpY2xlcy9lczYtbW9kdWxlcy1pbi1kZXB0aCkKICog8J+TnCBbRVM2IG1v
ZHVsZXMsIE5vZGUuanMgYW5kIHRoZSBNaWNoYWVsIEphY2tzb24gU29sdXRp
b24g4oCUIEFsYmVydG8gR2ltZW5vXShodHRwczovL21lZGl1bS5jb20vZGFp
bHlqcy9lczYtbW9kdWxlcy1ub2RlLWpzLWFuZC10aGUtbWljaGFlbC1qYWNr
c29uLXNvbHV0aW9uLTgyOGRjMjQ0YjhiKQogKiDwn5OcIFtKYXZhU2NyaXB0
IE1vZHVsZXM6IEEgQmVnaW5uZXLigJlzIEd1aWRlIOKAlCBQcmVldGhpIEth
c2lyZWRkeV0oaHR0cHM6Ly9tZWRpdW0uZnJlZWNvZGVjYW1wLm9yZy9qYXZh
c2NyaXB0LW1vZHVsZXMtYS1iZWdpbm5lci1zLWd1aWRlLTc4M2Y3ZDdhNWZj
YykKICog8J+TnCBbVXNpbmcgSmF2YVNjcmlwdCBtb2R1bGVzIG9uIHRoZSB3
ZWJdKGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL3dlYi9mdW5kYW1l
bnRhbHMvcHJpbWVycy9tb2R1bGVzKQogKiDwn5OcIFtKYXZhU2NyaXB0IE1v
ZHVsZXM6IEZyb20gSUlGRXMgdG8gQ29tbW9uSlMgdG8gRVM2IE1vZHVsZXMg
4oCUIFR5bGVyIE1jR2lubmlzXShodHRwczovL21lZGl1bS5mcmVlY29kZWNh
bXAub3JnL2phdmFzY3JpcHQtbW9kdWxlcy1mcm9tLWlpZmVzLXRvLWNvbW1v
bmpzLXRvLWVzNi1tb2R1bGVzLTRkMTBjMTZmNTVkNCkKCiMjIyBWaWRlb3MK
CiAqIPCfjqUgW0ltbWVkaWF0ZWx5IEludm9rZWQgRnVuY3Rpb24gRXhwcmVz
c2lvbiAtIEJlYXUgdGVhY2hlcyBKYXZhU2NyaXB0IOKAlCBmcmVlQ29kZUNh
bXBdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9M2NiaVpWNEgy
MmMpCiAqIPCfjqUgW1VuZGVyc3RhbmRpbmcgSmF2YVNjcmlwdCBJSUZFXSho
dHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PUk1RW50Zk1lSUlRKQog
KiDwn46lIFtKYXZhU2NyaXB0IE1vZHVsZXM6IEVTNiBJbXBvcnQgYW5kIEV4
cG9ydCDigJQgS3lsZSBSb2JpbnNvbl0oaHR0cHM6Ly93d3cueW91dHViZS5j
b20vd2F0Y2g/dj1fM29TV3dhcFBLUSkKICog8J+OpSBbRVM2IC0gTW9kdWxl
cyDigJQgUnlhbiBDaHJpc3RpYW5pXShodHRwczovL3d3dy55b3V0dWJlLmNv
bS93YXRjaD92PWFRcjJiVjFCUHlFKQogKiDwn46lIFtFUzYgTW9kdWxlcyBp
biB0aGUgUmVhbCBXb3JsZCDigJQgU2FtIFRob3JvZ29vZF0oaHR0cHM6Ly93
d3cueW91dHViZS5jb20vd2F0Y2g/dj1mSVA0cGpBcUN0USkKICog8J+OpSBb
RVM2IE1vZHVsZXMg4oCUIFRlbXBsZUNvZGluZ10oaHR0cHM6Ly93d3cueW91
dHViZS5jb20vd2F0Y2g/dj01UDA0T0s2S2xYQSkKCioqW+KshiBCYWNrIHRv
IFRvcF0oI3RhYmxlLW9mLWNvbnRlbnRzKSoqCgotLS0KCiMjIDkuIE1lc3Nh
Z2UgUXVldWUgYW5kIEV2ZW50IExvb3AKCiMjIyBBcnRpY2xlcwoKICog8J+T
nCBbSmF2YVNjcmlwdCBFdmVudCBMb29wIEV4cGxhaW5lZCDigJQgQW5vb3Ag
UmF2ZWVuZHJhbl0oaHR0cHM6Ly9tZWRpdW0uY29tL2Zyb250LWVuZC1oYWNr
aW5nL2phdmFzY3JpcHQtZXZlbnQtbG9vcC1leHBsYWluZWQtNGNkMjZhZjEy
MWQ0KQogKiDwn5OcIFtUaGUgSmF2YVNjcmlwdCBFdmVudCBMb29wOiBFeHBs
YWluZWQg4oCUIEVyaW4gU3dlc29uLUhlYWxleV0oaHR0cHM6Ly9ibG9nLmNh
cmJvbmZpdmUuY29tLzIwMTMvMTAvMjcvdGhlLWphdmFzY3JpcHQtZXZlbnQt
bG9vcC1leHBsYWluZWQvKQogKiDwn5OcIFtXaGF0IGlzIHRoZSBFdmVudCBM
b29wIGluIEphdmFzY3JpcHQg4oCUIFdQIFR1dG9yLmlvXShodHRwczovL3d3
dy53cHR1dG9yLmlvL3dlYi9qcy9qYXZhc2NyaXB0LWV2ZW50LWxvb3ApCiAq
IPCfk5wgW1VuZGVyc3RhbmRpbmcgSlM6IFRoZSBFdmVudCBMb29wIOKAlCBB
bGV4YW5kZXIgS29uZG92XShodHRwczovL2hhY2tlcm5vb24uY29tL3VuZGVy
c3RhbmRpbmctanMtdGhlLWV2ZW50LWxvb3AtOTU5YmVhZTNhYzQwKQogKiDw
n5OcIFtVbmRlcnN0YW5kaW5nIHRoZSBKYXZhU2NyaXB0IEV2ZW50IExvb3Ag
4oCUIEFzaGlzaCBHdXB0YV0oaHR0cHM6Ly93d3cuemVvbGVhcm4uY29tL21h
Z2F6aW5lL3VuZGVyc3RhbmRpbmctdGhlLWphdmFzY3JpcHQtZXZlbnQtbG9v
cCkKICog8J+TnCBbRXZlbnQgTG9vcCBpbiBKYXZhc2NyaXB0IOKAlCBNYW5q
dWxhIER1YmVdKGh0dHBzOi8vY29kZS5saWtlYWdpcmwuaW8vd2hhdC10aGUt
aGVjay1pcy1ldmVudC1sb29wLTFlNDE0ZmNjZWY0OSkKICog8J+TnCBbVGhl
IEphdmFTY3JpcHQgRXZlbnQgTG9vcCDigJQgRmxhdmlvIENvcGVzXShodHRw
czovL2ZsYXZpb2NvcGVzLmNvbS9qYXZhc2NyaXB0LWV2ZW50LWxvb3AvKQog
KiDwn5OcIFtIb3cgSmF2YVNjcmlwdCB3b3JrczogRXZlbnQgbG9vcCDigJQg
QWxleGFuZGVyIFpsYXRrb3ZdKGh0dHBzOi8vYmxvZy5zZXNzaW9uc3RhY2su
Y29tL2hvdy1qYXZhc2NyaXB0LXdvcmtzLWV2ZW50LWxvb3AtYW5kLXRoZS1y
aXNlLW9mLWFzeW5jLXByb2dyYW1taW5nLTUtd2F5cy10by1iZXR0ZXItY29k
aW5nLXdpdGgtMmYwNzdjNDQzOGI1KQogKiDwn5OcIFtUYXNrcywgbWljcm90
YXNrcywgcXVldWVzIGFuZCBzY2hlZHVsZXMg4oCUIEpha2UgQXJjaGliYWxk
XShodHRwczovL2pha2VhcmNoaWJhbGQuY29tLzIwMTUvdGFza3MtbWljcm90
YXNrcy1xdWV1ZXMtYW5kLXNjaGVkdWxlcy8pCiAqIPCfk5wgW1Zpc3VhbGlz
aW5nIHRoZSBKYXZhU2NyaXB0IEV2ZW50IExvb3Agd2l0aCBhIFBpenphIFJl
c3RhdXJhbnQgYW5hbG9neSDigJQgUHJpeWFuc2ggSmFpbl0oaHR0cHM6Ly9k
ZXYudG8vcHJlc3RvNDEyL3Zpc3VhbGlzaW5nLXRoZS1qYXZhc2NyaXB0LWV2
ZW50LWxvb3Atd2l0aC1hLXBpenphLXJlc3RhdXJhbnQtYW5hbG9neS00N2E4
KQoKIyMjIFZpZGVvcwoKICog8J+OpSBbV2hhdCB0aGUgaGVjayBpcyB0aGUg
ZXZlbnQgbG9vcCBhbnl3YXk/IHwgSlNDb25mIEVVIOKAlCBQaGlsaXAgUm9i
ZXJ0c10oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj04YUdoWlFr
b0ZiUSkKICog8J+OpSBbSmF2YVNjcmlwdCBFdmVudCBMb29wIOKAlCBDb21T
Y2llbmNlIFNpbXBsaWZpZWRdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dh
dGNoP3Y9WHpYSU1aTU45azQpCiAqIPCfjqUgW0knbSBzdHVjayBpbiBhbiBF
dmVudCBMb29wIOKAlCBQaGlsaXAgUm9iZXJ0c10oaHR0cHM6Ly93d3cueW91
dHViZS5jb20vd2F0Y2g/dj02TVhSTlhYZ1BfMCkKICog8J+OpSBbSW4gVGhl
IExvb3AgLSBKYWtlIEFyY2hpYmFsZCB8IEpTQ29uZi5Bc2lhIDIwMThdKGh0
dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9Y0NPTDdNQzRQbDApCiAq
IPCfjqUgW0Rlc21pdGlmaWNhbmRvIGVsIEV2ZW50IExvb3AgKFNwYW5pc2gp
XShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PUVxcTJSYjdMellF
KQoKCioqW+KshiBCYWNrIHRvIFRvcF0oI3RhYmxlLW9mLWNvbnRlbnRzKSoq
CgotLS0KCiMjIDEwLiBzZXRUaW1lb3V0LCBzZXRJbnRlcnZhbCBhbmQgcmVx
dWVzdEFuaW1hdGlvbkZyYW1lCgojIyMgQXJ0aWNsZXMKCiAqIPCfk5wgW3Nl
dFRpbWVvdXQgYW5kIHNldEludGVydmFsIOKAlCBKYXZhU2NyaXB0LkluZm9d
KGh0dHBzOi8vamF2YXNjcmlwdC5pbmZvL3NldHRpbWVvdXQtc2V0aW50ZXJ2
YWwpCiAqIPCfk5wgW1doeSBub3QgdG8gdXNlIHNldEludGVydmFsIOKAlCBB
a2Fua3NoYSBTaGFybWFdKGh0dHBzOi8vZGV2LnRvL2FrYW5rc2hhXzk1NjAv
d2h5LW5vdC10by11c2Utc2V0aW50ZXJ2YWwtLTJuYTkpCiAqIPCfk5wgW3Nl
dFRpbWVvdXQgVlMgc2V0SW50ZXJ2YWwg4oCUIERldmVsb2dlcl0oaHR0cHM6
Ly9kZXZlbG9nZXIuY29tL3NldHRpbWVvdXQtdnMtc2V0aW50ZXJ2YWwtY2Zm
ODUxNDI1NTViKQogKiDwn5OcIFtVc2luZyByZXF1ZXN0QW5pbWF0aW9uRnJh
bWUg4oCUIENocmlzIENveWllcl0oaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS91
c2luZy1yZXF1ZXN0YW5pbWF0aW9uZnJhbWUvKQogKiDwn5OcIFtVbmRlcnN0
YW5kaW5nIEphdmFTY3JpcHQncyByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKSDi
gJQgSmF2YVNjcmlwdCBLaXRdKGh0dHA6Ly93d3cuamF2YXNjcmlwdGtpdC5j
b20vamF2YXR1dG9ycy9yZXF1ZXN0YW5pbWF0aW9uZnJhbWUuc2h0bWwpCiAq
IPCfk5wgW0hhbmRsaW5nIHRpbWUgaW50ZXJ2YWxzIGluIEphdmFTY3JpcHQg
LSBBbWl0IE1lcmNoYW50XShodHRwczovL3d3dy5hbWl0bWVyY2hhbnQuY29t
L0hhbmRsaW5nLVRpbWUtSW50ZXJ2YWxzLUluLUphdmFzY3JpcHQvKQoKIyMj
IFZpZGVvcwoKICog8J+OpSBbSmF2YXNjcmlwdDogSG93IHNldFRpbWVvdXQg
YW5kIHNldEludGVydmFsIHdvcmtzIOKAlCBDb2RpbmcgQmxvY2tzIEluZGlh
XShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PTZiUEt5bDhXWVdJ
KQogKiDwn46lIFtzZXRUaW1lb3V0IGFuZCBzZXRJbnRlcnZhbCBpbiBKYXZh
U2NyaXB0IOKAlCB0ZWNoc2l0aF0oaHR0cHM6Ly93d3cueW91dHViZS5jb20v
d2F0Y2g/dj1UYkNnR1dlOExOOCkKICog8J+OpSBbSmF2YVNjcmlwdCBUaW1l
cnMg4oCUIFN0ZXZlIEdyaWZmaXRoXShodHRwczovL3d3dy55b3V0dWJlLmNv
bS93YXRjaD92PTBWVkpTdmxVZ3RnKQogKiDwn46lIFtKYXZhU2NyaXB0IHNl
dFRpbWVvdXQsIHNldEludGVydmFsICYgY2xlYXJJbnRlcnZhbCDigJQgRG9p
bmdJVGVhc3lDaGFubmVsXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRj
aD92PUJWQUx2dnk1YlpZKQogKiDwn46lIFtKYXZhU2NyaXB0IHNldFRpbWVP
dXQgYW5kIHNldEludGVydmFsIEV4cGxhaW5lZCDigJQgVGhlb2RvcmUgQW5k
ZXJzb25dKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9bVZLZnJX
Q09CNjApCgoqKlvirIYgQmFjayB0byBUb3BdKCN0YWJsZS1vZi1jb250ZW50
cykqKgoKLS0tCgojIyAxMS4gSmF2YVNjcmlwdCBFbmdpbmVzCgojIyMgQXJ0
aWNsZXMKCiAqIPCfk5wgW0phdmFTY3JpcHQgRW5naW5lcyDigJQgSmVuIExv
b3Blcl0oaHR0cDovL3d3dy5zb2Z0d2FyZW1hZy5jb20vamF2YXNjcmlwdC1l
bmdpbmVzLykKICog8J+TnCBbVW5kZXJzdGFuZGluZyBIb3cgdGhlIENocm9t
ZSBWOCBFbmdpbmUgVHJhbnNsYXRlcyBKYXZhU2NyaXB0IGludG8gTWFjaGlu
ZSBDb2RlIOKAlCBEcm9pZEhlYWRdKGh0dHBzOi8vbWVkaXVtLmZyZWVjb2Rl
Y2FtcC5vcmcvdW5kZXJzdGFuZGluZy10aGUtY29yZS1vZi1ub2RlanMtdGhl
LXBvd2VyZnVsLWNocm9tZS12OC1lbmdpbmUtNzllN2ViOGFmOTY0KQogKiDw
n5OcIFtVbmRlcnN0YW5kaW5nIFY44oCZcyBCeXRlY29kZSDigJQgRnJhbnpp
c2thIEhpbmtlbG1hbm5dKGh0dHBzOi8vbWVkaXVtLmNvbS9kYWlseWpzL3Vu
ZGVyc3RhbmRpbmctdjhzLWJ5dGVjb2RlLTMxN2Q0NmM5NDc3NSkKICog8J+T
nCBbSG93IHRoZSBWOCBlbmdpbmUgd29ya3M/IOKAlCBUaGliYXVsdCBMYXVy
ZW5zXShodHRwOi8vdGhpYmF1bHRsYXVyZW5zLmdpdGh1Yi5pby9qYXZhc2Ny
aXB0LzIwMTMvMDQvMjkvaG93LXRoZS12OC1lbmdpbmUtd29ya3MvKQogKiDw
n5OcIFtBIEJyaWVmIEhpc3Rvcnkgb2YgR29vZ2xl4oCZcyBWOCBKYXZhc2Ny
aXB0IEVuZ2luZSDigJQgQ2xhaXIgU21pdGhdKGh0dHBzOi8vd3d3Lm1lZGlh
Y3VycmVudC5jb20vYmxvZy9icmllZi1oaXN0b3J5LWdvb2dsZXMtdjgtamF2
YXNjcmlwdC1lbmdpbmUvKQogKiDwn5OcIFtKYXZhU2NyaXB0IGVzc2VudGlh
bHM6IHdoeSB5b3Ugc2hvdWxkIGtub3cgaG93IHRoZSBlbmdpbmUgd29ya3Mg
LSBSYWluZXIgSGFobmVrYW1wXShodHRwczovL21lZGl1bS5mcmVlY29kZWNh
bXAub3JnL2phdmFzY3JpcHQtZXNzZW50aWFscy13aHkteW91LXNob3VsZC1r
bm93LWhvdy10aGUtZW5naW5lLXdvcmtzLWMyY2MwZDMyMTU1MykKICog8J+T
nCBbSmF2YVNjcmlwdCBlbmdpbmUgZnVuZGFtZW50YWxzOiBTaGFwZXMgYW5k
IElubGluZSBDYWNoZXNdKGh0dHBzOi8vbWF0aGlhc2J5bmVucy5iZS9ub3Rl
cy9zaGFwZXMtaWNzKQogKiDwn5OcIFtKYXZhU2NyaXB0IGVuZ2luZSBmdW5k
YW1lbnRhbHM6IG9wdGltaXppbmcgcHJvdG90eXBlc10oaHR0cHM6Ly9tYXRo
aWFzYnluZW5zLmJlL25vdGVzL3Byb3RvdHlwZXMpCiAqIPCfk5wgW0hvdyBW
OCBvcHRpbWl6ZXMgYXJyYXkgb3BlcmF0aW9uc10oaHR0cHM6Ly92OC5kZXYv
YmxvZy9lbGVtZW50cy1raW5kcykKCgojIyMgVmlkZW9zCgogKiDwn46lIFtK
YXZhU2NyaXB0IEVuZ2luZXM6IFRoZSBHb29kIFBhcnRz4oSiIOKAlCBNYXRo
aWFzIEJ5bmVucyAmIEJlbmVkaWt0IE1ldXJlcl0oaHR0cHM6Ly93d3cueW91
dHViZS5jb20vd2F0Y2g/dj01bm1wb2tvUmFaSSkKCioqW+KshiBCYWNrIHRv
IFRvcF0oI3RhYmxlLW9mLWNvbnRlbnRzKSoqCgotLS0KCiMjIDEyLiBCaXR3
aXNlIE9wZXJhdG9ycywgVHlwZSBBcnJheXMgYW5kIEFycmF5IEJ1ZmZlcnMK
CiMjIyBBcnRpY2xlcwoKICog8J+TnCBbUHJvZ3JhbW1pbmcgd2l0aCBKUzog
Qml0d2lzZSBPcGVyYXRpb25zIOKAlCBBbGV4YW5kZXIgS29uZG92XShodHRw
czovL2hhY2tlcm5vb24uY29tL3Byb2dyYW1taW5nLXdpdGgtanMtYml0d2lz
ZS1vcGVyYXRpb25zLTM5M2ViMDc0NWRjNCkKICog8J+TnCBbVXNpbmcgSmF2
YVNjcmlwdOKAmXMgQml0d2lzZSBPcGVyYXRvcnMgaW4gUmVhbCBMaWZlIOKA
lCBpYW4gbV0oaHR0cHM6Ly9jb2RlYnVyc3QuaW8vdXNpbmctamF2YXNjcmlw
dC1iaXR3aXNlLW9wZXJhdG9ycy1pbi1yZWFsLWxpZmUtZjU1MWE3MzFmZjUp
CiAqIPCfk5wgW0phdmFTY3JpcHQgQml0d2lzZSBPcGVyYXRvcnMg4oCUIHcz
cmVzb3VyY2VdKGh0dHBzOi8vd3d3LnczcmVzb3VyY2UuY29tL2phdmFzY3Jp
cHQvb3BlcmF0b3JzL2JpdHdpc2Utb3BlcmF0b3IucGhwKQogKiDwn5OcIFtC
aXR3aXNlIE9wZXJhdG9ycyBpbiBKYXZhc2NyaXB0IOKAlCBKb2UgQ2hhXSho
dHRwczovL21lZGl1bS5jb20vYm90aGVyNy1ibG9nL2JpdHdpc2Utb3BlcmF0
b3JzLWluLWphdmFzY3JpcHQtNjVjNGM2OWJlMGQzKQogKiDwn5OcIFtBIENv
bXByZWhlbnNpdmUgUHJpbWVyIG9uIEJpbmFyeSBDb21wdXRhdGlvbiBhbmQg
Qml0d2lzZSBPcGVyYXRvcnMgaW4gSmF2YXNjcmlwdCDigJQgUGF1bCBCcm93
bl0oaHR0cHM6Ly9tZWRpdW0uY29tL3RlY2h0cnVtZW50L2EtY29tcHJlaGVu
c2l2ZS1wcmltZXItb24tYmluYXJ5LWNvbXB1dGF0aW9uLWFuZC1iaXR3aXNl
LW9wZXJhdG9ycy1pbi1qYXZhc2NyaXB0LTgxYWNmODM0MWYwNCkKICog8J+T
nCBbSG93IGNhbiBJIHVuZGVyc3RhbmQgQml0d2lzZSBvcGVyYXRpb24gaW4g
SmF2YVNjcmlwdD9dKGh0dHBzOi8vd3d3LnF1b3JhLmNvbS9Ib3ctY2FuLUkt
dW5kZXJzdGFuZC1CaXR3aXNlLW9wZXJhdGlvbi1pbi1KYXZhU2NyaXB0KQoK
ICMjIyBWaWRlb3MKCiAqIPCfjqUgW0phdmFTY3JpcHQgQml0d2lzZSBPcGVy
YXRvcnMg4oCUIFByb2dyYW1taW5nIHdpdGggTW9zaF0oaHR0cHM6Ly93d3cu
eW91dHViZS5jb20vd2F0Y2g/dj1tZXN1NzVQVERDOCkKCioqW+KshiBCYWNr
IHRvIFRvcF0oI3RhYmxlLW9mLWNvbnRlbnRzKSoqCgotLS0KCiMjIDEzLiBE
T00gYW5kIExheW91dCBUcmVlcwoKIyMjIEFydGljbGVzCgogKiDwn5OcIFtI
b3cgVG8gVW5kZXJzdGFuZCBhbmQgTW9kaWZ5IHRoZSBET00gaW4gSmF2YVNj
cmlwdCDigJQgVGFuaWEgUmFzY2lhXShodHRwczovL3d3dy5kaWdpdGFsb2Nl
YW4uY29tL2NvbW11bml0eS90dXRvcmlhbHMvaW50cm9kdWN0aW9uLXRvLXRo
ZS1kb20pCiAqIPCfk5wgW1doYXTigJlzIHRoZSBEb2N1bWVudCBPYmplY3Qg
TW9kZWwsIGFuZCB3aHkgeW91IHNob3VsZCBrbm93IGhvdyB0byB1c2UgaXQg
4oCUIExlb25hcmRvIE1hbGRvbmFkb10oaHR0cHM6Ly9tZWRpdW0uZnJlZWNv
ZGVjYW1wLm9yZy93aGF0cy10aGUtZG9jdW1lbnQtb2JqZWN0LW1vZGVsLWFu
ZC13aHkteW91LXNob3VsZC1rbm93LWhvdy10by11c2UtaXQtMWEyZDBiYzU0
MjlkKQogKiDwn5OcIFtKYXZhU2NyaXB0IERPTSBUdXRvcmlhbCB3aXRoIEV4
YW1wbGUg4oCUIEd1cnU5OV0oaHR0cHM6Ly93d3cuZ3VydTk5LmNvbS9ob3ct
dG8tdXNlLWRvbS1hbmQtZXZlbnRzLWluLWphdmFzY3JpcHQuaHRtbCkKICog
8J+TnCBbV2hhdCBpcyB0aGUgRE9NPyDigJQgQ2hyaXMgQ295aWVyXShodHRw
czovL2Nzcy10cmlja3MuY29tL2RvbS8pCiAqIPCfk5wgW1RyYXZlcnNpbmcg
dGhlIERPTSB3aXRoIEphdmFTY3JpcHQg4oCUIFplbGwgTGlld10oaHR0cHM6
Ly96ZWxsd2suY29tL2Jsb2cvZG9tLXRyYXZlcnNhbHMvKQogKiDwn5OcIFtF
bG9xdWVudCBKYXZhU2NyaXB0IFtCb29rXSDigJQgVGhlIERvY3VtZW50IE9i
amVjdCBNb2RlbF0oaHR0cHM6Ly9lbG9xdWVudGphdmFzY3JpcHQubmV0LzE0
X2RvbS5odG1sKQogKiDwn5OcIFtET00gVHJlZV0oaHR0cHM6Ly9qYXZhc2Ny
aXB0LmluZm8vZG9tLW5vZGVzKQogKiDwn5OcIFtIb3cgdG8gdHJhdmVyc2Ug
dGhlIERPTSBpbiBKYXZhc2NyaXB0IOKAlCBWb2ppc2xhdiBHcnVqacSHXSho
dHRwczovL21lZGl1bS5jb20vamF2YXNjcmlwdC1pbi1wbGFpbi1lbmdsaXNo
L2hvdy10by10cmF2ZXJzZS10aGUtZG9tLWluLWphdmFzY3JpcHQtZDY1NTVj
MzM1YjRlKQogKiDwn5OcIFtSZW5kZXIgVHJlZSBDb25zdHJ1Y3Rpb24g4oCU
IElseWEgR3JpZ29yaWtdKGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29t
L3dlYi9mdW5kYW1lbnRhbHMvcGVyZm9ybWFuY2UvY3JpdGljYWwtcmVuZGVy
aW5nLXBhdGgvcmVuZGVyLXRyZWUtY29uc3RydWN0aW9uKQogKiDwn5OcIFtX
aGF0IGV4YWN0bHkgaXMgdGhlIERPTT9dKGh0dHBzOi8vYml0c29mY28uZGUv
d2hhdC1leGFjdGx5LWlzLXRoZS1kb20vKQogKiDwn5OcIFtBIFZhbmlsbGEg
SlMgR3VpZGUgT24gTWFzdGVyaW5nIHRoZSBET00g4oCUIEJyaWFuIFBha10o
aHR0cHM6Ly9kZXYudG8vYm91aG0vYS12YW5pbGxhLWpzLWd1aWRlLW9uLW1h
c3RlcmluZy10aGUtZG9tLTNsOWIpCgogIyMjIFZpZGVvcwoKICog8J+OpSBb
SmF2YVNjcmlwdCBET00g4oCUIFRoZSBOZXQgTmluamFdKGh0dHBzOi8vd3d3
LnlvdXR1YmUuY29tL3dhdGNoP3Y9RklPUmpHdlQwa2spCiAqIPCfjqUgW0ph
dmFTY3JpcHQgRE9NIENyYXNoIENvdXJzZSDigJQgVHJhdmVyc3kgTWVkaWFd
KGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9MGlrNlg0REpLQ2Mp
CgoqKlvirIYgQmFjayB0byBUb3BdKCN0YWJsZS1vZi1jb250ZW50cykqKgoK
LS0tCgojIyAxNC4gRmFjdG9yaWVzIGFuZCBDbGFzc2VzCgojIyMgQXJ0aWNs
ZXMKCiAqIPCfk5wgW0hvdyBUbyBVc2UgQ2xhc3NlcyBpbiBKYXZhU2NyaXB0
IOKAlCBUYW5pYSBSYXNjaWFdKGh0dHBzOi8vd3d3LmRpZ2l0YWxvY2Vhbi5j
b20vY29tbXVuaXR5L3R1dG9yaWFscy91bmRlcnN0YW5kaW5nLWNsYXNzZXMt
aW4tamF2YXNjcmlwdCkKICog8J+TnCBbSmF2YXNjcmlwdCBDbGFzc2VzIOKA
lCBVbmRlciBUaGUgSG9vZCDigJQgTWFqaWRdKGh0dHBzOi8vbWVkaXVtLmNv
bS90ZWNoLXRhamF3YWwvamF2YXNjcmlwdC1jbGFzc2VzLXVuZGVyLXRoZS1o
b29kLTZiMjZkMjY2NzY3NykKICog8J+TnCBbRVM2IENsYXNzZXMg4oCUIE5h
dGhhbmllbCBGb3N0ZXJdKGh0dHBzOi8vd3d3LmphdmFzY3JpcHRqYW51YXJ5
LmNvbS9ibG9nL2VzNi1jbGFzc2VzKQogKiDwn5OcIFtCZXR0ZXIgSmF2YVNj
cmlwdCB3aXRoIEVTNiwgUHQuIElJOiBBIERlZXAgRGl2ZSBpbnRvIENsYXNz
ZXMg4oCVIFBlbGVrZSBTZW5nc3RhY2tlXShodHRwczovL3Njb3RjaC5pby90
dXRvcmlhbHMvYmV0dGVyLWphdmFzY3JpcHQtd2l0aC1lczYtcHQtaWktYS1k
ZWVwLWRpdmUtaW50by1jbGFzc2VzKQogKiDwn5OcIFtVbmRlcnN0YW5kIHRo
ZSBGYWN0b3J5IERlc2lnbiBQYXR0ZXJuIGluIFBsYWluIEphdmFTY3JpcHQg
4oCUIEFkaXR5YSBBZ2Fyd2FsXShodHRwczovL21lZGl1bS5jb20vZnJvbnQt
ZW5kLWhhY2tpbmcvdW5kZXJzdGFuZC10aGUtZmFjdG9yeS1kZXNpZ24tcGF0
dGVybi1pbi1wbGFpbi1qYXZhc2NyaXB0LTIwYjM0OGM4MzJiZCkKICog8J+T
nCBbRmFjdG9yeSBGdW5jdGlvbnMgaW4gSmF2YVNjcmlwdCDigJQgSm9zaCBN
aWxsZXJdKGh0dHBzOi8vYXRlbmRlc2lnbmdyb3VwLmNvbS9ibG9nL2ZhY3Rv
cnktZnVuY3Rpb25zLWphdmFzY3JpcHQpCiAqIPCfk5wgW1RoZSBGYWN0b3J5
IFBhdHRlcm4gaW4gSlMgRVM2IOKAlCBTbnN0c0Rldl0oaHR0cHM6Ly9tZWRp
dW0uY29tL0BTbnRzRGV2L3RoZS1mYWN0b3J5LXBhdHRlcm4taW4tanMtZXM2
LTc4ZjBhZmFkMTdlOSkKICog8J+TnCBbQ2xhc3MgdnMgRmFjdG9yeSBmdW5j
dGlvbjogZXhwbG9yaW5nIHRoZSB3YXkgZm9yd2FyZCDigJQgQ3Jpc3RpIFNh
bGNlc2N1XShodHRwczovL21lZGl1bS5mcmVlY29kZWNhbXAub3JnL2NsYXNz
LXZzLWZhY3RvcnktZnVuY3Rpb24tZXhwbG9yaW5nLXRoZS13YXktZm9yd2Fy
ZC03MzI1OGI2YThkMTUpCiAqIPCfk5wgW0hvdyBFUzYgY2xhc3NlcyByZWFs
bHkgd29yayBhbmQgaG93IHRvIGJ1aWxkIHlvdXIgb3duIOKAlCBSb2JlcnQg
R3Jvc3NlXShodHRwczovL21lZGl1bS5jb20vQHJvYmVydGdyb3NzZS9ob3ct
ZXM2LWNsYXNzZXMtcmVhbGx5LXdvcmstYW5kLWhvdy10by1idWlsZC15b3Vy
LW93bi1mZDYwODVlYjMyNmEpCiAqIPCfk5wgW1VuZGVyc3RhbmRpbmcgYHN1
cGVyYCBpbiBKYXZhU2NyaXB0XShodHRwczovL2pvcmRhbmthc3Blci5jb20v
dW5kZXJzdGFuZGluZy1zdXBlci1pbi1qYXZhc2NyaXB0KQoKICMjIyBWaWRl
b3MKCiAqIPCfjqUgW0phdmFTY3JpcHQgRmFjdG9yeSBGdW5jdGlvbnMg4oCU
IFByb2dyYW1taW5nIHdpdGggTW9zaF0oaHR0cHM6Ly93d3cueW91dHViZS5j
b20vd2F0Y2g/dj1qcGVnWHBRcGIzbykKICog8J+OpSBbRmFjdG9yeSBGdW5j
dGlvbnMgaW4gSmF2YVNjcmlwdCDigJQgRnVuIEZ1biBGdW5jdGlvbl0oaHR0
cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1JbXdyZXpZaHc0dykKICog
8J+OpSBbSmF2YXNjcmlwdCBUdXRvcmlhbCBGdW5jdGlvbiBGYWN0b3JpZXMg
4oCUIENyeXB0byBDaGFuXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRj
aD92PVI3LUl3cEg4MFVFKQoKKipb4qyGIEJhY2sgdG8gVG9wXSgjdGFibGUt
b2YtY29udGVudHMpKioKCi0tLQoKIyMgMTUuIHRoaXMsIGNhbGwsIGFwcGx5
IGFuZCBiaW5kCgojIyMgQXJ0aWNsZXMKCiAqIPCfk5wgW0hvdy10bzogY2Fs
bCgpICwgYXBwbHkoKSBhbmQgYmluZCgpIGluIEphdmFTY3JpcHQg4oCUIE5p
bGFkcmkgU2VraGFyIER1dHRhXShodHRwczovL3d3dy5jb2RlbWVudG9yLmlv
L25pbGFkcmlzZWtoYXJkdXR0YS9ob3ctdG8tY2FsbC1hcHBseS1hbmQtYmlu
ZC1pbi1qYXZhc2NyaXB0LThpMWpjYTZqcCkKICog8J+TnCBbSmF2YVNjcmlw
dOKAmXMgQXBwbHksIENhbGwsIGFuZCBCaW5kIE1ldGhvZHMgYXJlIEVzc2Vu
dGlhbCBmb3IgSmF2YVNjcmlwdCBQcm9mZXNzaW9uYWxzIOKAlCBSaWNoYXJk
IEJvdmVsbF0oaHR0cDovL2phdmFzY3JpcHRpc3NleHkuY29tL2phdmFzY3Jp
cHQtYXBwbHktY2FsbC1hbmQtYmluZC1tZXRob2RzLWFyZS1lc3NlbnRpYWwt
Zm9yLWphdmFzY3JpcHQtcHJvZmVzc2lvbmFscy8pCiAqIPCfk5wgW1dURiBp
cyB0aGlzIC0gVW5kZXJzdGFuZGluZyB0aGUgdGhpcyBrZXl3b3JkLCBjYWxs
LCBhcHBseSwgYW5kIGJpbmQgaW4gSmF2YVNjcmlwdCDigJQgVHlsZXIgTWNH
aW5uaXNdKGh0dHBzOi8vdHlsZXJtY2dpbm5pcy5jb20vdGhpcy1rZXl3b3Jk
LWNhbGwtYXBwbHktYmluZC1qYXZhc2NyaXB0LykKICog8J+TnCBbSmF2YXNj
cmlwdDogY2FsbCgpLCBhcHBseSgpIGFuZCBiaW5kKCkg4oCUIE9tZXIgR29s
ZGJlcmddKGh0dHBzOi8vbWVkaXVtLmNvbS9Ab21lcmdvbGRiZXJnL2phdmFz
Y3JpcHQtY2FsbC1hcHBseS1hbmQtYmluZC1lNWMyNzMwMWY3YmIpCiAqIPCf
k5wgW1RoZSBkaWZmZXJlbmNlIGJldHdlZW4gY2FsbCAvIGFwcGx5IC8gYmlu
ZCDigJQgSXZhbiBTaWZyaW1dKGh0dHBzOi8vbWVkaXVtLmNvbS9AaXZhbnNp
ZnJpbS90aGUtZGlmZmVyZW5jZXMtYmV0d2Vlbi1jYWxsLWFwcGx5LWJpbmQt
Mjc2NzI0YmI4MjViKQogKiDwn5OcIFtNYXN0ZXJpbmcgJ3RoaXMnIGluIEph
dmFTY3JpcHQ6IENhbGxiYWNrcyBhbmQgYmluZCgpLCBhcHBseSgpLCBjYWxs
KCkg4oCUIE1pY2hlbGxlIEdpZW5vd10oaHR0cHM6Ly90aGVuZXdzdGFjay5p
by9tYXN0ZXJpbmctamF2YXNjcmlwdC1jYWxsYmFja3MtYmluZC1hcHBseS1j
YWxsLykKICog8J+TnCBbSmF2YVNjcmlwdOKAmXMgYXBwbHksIGNhbGwsIGFu
ZCBiaW5kIGV4cGxhaW5lZCBieSBob3N0aW5nIGEgY29va291dCDigJQgS2V2
aW4gS29ub25lbmtvXShodHRwczovL2Rldi50by9rYmswMTI1L2phdmFzY3Jp
cHRzLWFwcGx5LWNhbGwtYW5kLWJpbmQtZXhwbGFpbmVkLWJ5LWhvc3Rpbmct
YS1jb29rb3V0LTMyam8pCiAqIPCfk5wgW0hvdyBBTkQgV2hlbiB0byB1c2Ug
YmluZCwgY2FsbCwgYW5kIGFwcGx5IGluIEphdmFzY3JpcHQg4oCUIEVpZ2Vu
IFhdKGh0dHBzOi8vd3d3LmVpZ2VueC5jb20vYmxvZy9odHRwcy9tZWRpdW1j
b20vZWlnZW4teC9ob3ctYW5kLXdoZW4tdG8tdXNlLWJpbmQtY2FsbC1hbmQt
YXBwbHktaW4tamF2YXNjcmlwdC03N2I2ZjQyODk4ZmIpCiAqIPCfk5wgW0ph
dmFTY3JpcHQgLmJpbmQoKSB2cyAuYXBwbHkoKSBhbmQgLmNhbGwoKSDigJQg
SGFjayBTcGFycm93XShodHRwczovL3d3dy5oYWNrc3BhcnJvdy5jb20vamF2
YXNjcmlwdC1iaW5kLXZzLWFwcGx5LWFuZC1jYWxsLmh0bWwpCiAqIPCfk5wg
W2NhbGwoKSDigJQgTUROXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9y
Zy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxf
T2JqZWN0cy9GdW5jdGlvbi9jYWxsKQogKiDwn5OcIFtiaW5kKCkg4oCUIE1E
Tl0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9X
ZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX29iamVjdHMvRnVuY3Rp
b24vYmluZCkKICog8J+TnCBbYXBwbHkoKSDigJQgTUROXShodHRwczovL2Rl
dmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0
L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9GdW5jdGlvbi9hcHBseSkKICog
8J+TnCBbV2hhdCBpcyAndGhpcycgaW4gSmF2YVNjcmlwdD8g4oCUIERhbmll
bCBMaV0oaHR0cDovL2Jsb2cuYnJldy5jb20uaGsvd2hhdC1pcy10aGlzLWlu
LWphdmFzY3JpcHQvKQogKiDwn5OcIFtMZXQgbWUgZXhwbGFpbiB0byB5b3Ug
d2hhdCBpcyBgdGhpc2AuIChKYXZhc2NyaXB0KSDigJQgSmFzb24gWXVdKGh0
dHBzOi8vZGV2LnRvL3ljbWphc29uL2xldC1tZS1leHBsYWluLXRvLXlvdS13
aGF0LWlzLXRoaXMtamF2YXNjcmlwdC00NGphKQogKiDwn5OcIFtVbmRlcnN0
YW5kaW5nIHRoZSDigJx0aGlz4oCdIEtleXdvcmQgaW4gSmF2YVNjcmlwdCDi
gJQgUGF2YW5dKGh0dHBzOi8vbWVkaXVtLmNvbS9xdWljay1jb2RlL3VuZGVy
c3RhbmRpbmctdGhlLXRoaXMta2V5d29yZC1pbi1qYXZhc2NyaXB0LWNiNzZk
NGM3YzVlOCkKICog8J+TnCBbSG93IHRvIHVuZGVyc3RhbmQgdGhlIGtleXdv
cmQgdGhpcyBhbmQgY29udGV4dCBpbiBKYXZhU2NyaXB0IOKAlCBMdWthcyBH
aXNkZXItRHViw6ldKGh0dHBzOi8vbWVkaXVtLmZyZWVjb2RlY2FtcC5vcmcv
aG93LXRvLXVuZGVyc3RhbmQtdGhlLWtleXdvcmQtdGhpcy1hbmQtY29udGV4
dC1pbi1qYXZhc2NyaXB0LWNkNjI0YzZiNzRiOCkKICog8J+TnCBbV2hhdCB0
aGUgaGVjayBpcyB0aGlzIGluIEphdmFzY3JpcHQ/IOKAlCBIcmlkYXllc2gg
U2hhcm1hXShodHRwczovL2Rldi50by9faHJpZGF5c2hhcm1hL3doYXQtdGhl
LWhlY2staXMtdGhpcy1pbi1qYXZhc2NyaXB0LTM3bjEpCiAqIPCfk5wgW1Ro
aXMgYW5kIEJpbmQgSW4gSmF2YXNjcmlwdCDigJQgQnJpYW4gQmFyYm91cl0o
aHR0cHM6Ly9kZXYudG8vc3RlZWx2b2x0YWdlL3RoaXMtYW5kLWJpbmQtaW4t
amF2YXNjcmlwdC0ycGFtKQogKiDwn5OcIFszIFRlY2huaXF1ZXMgZm9yIE1h
aW50YWluaW5nIFlvdXIgU2FuaXR5IFVzaW5nICJUaGlzIiBpbiBKYXZhU2Ny
aXB0IOKAlCBDYXJsXShodHRwczovL2Rldi50by9jYW5kZXJzb245My8zLXRl
Y2huaXF1ZXMtZm9yLW1haW50YWluaW5nLXlvdXItc2FuaXR5LXVzaW5nLXRo
aXMtaW4tamF2YXNjcmlwdC0zaWRmKQogKiDwn5OcIFszTWFzdGVyaW5nIHRo
ZSBKYXZhU2NyaXB0ICJ0aGlzIiBLZXl3b3JkIOKAlCBBYWthc2ggU3JpdmFz
dGF2XShodHRwczovL2Rldi50by9hYWthc2hzci9tYXN0ZXJpbmctdGhlLWph
dmFzY3JpcHQtdGhpcy1rZXl3b3JkLTRwZmEpCgogICMjIyBWaWRlb3MKCiAq
IPCfjqUgW0phdmFTY3JpcHQgY2FsbCwgYXBwbHkgYW5kIGJpbmQg4oCUIHRl
Y2hzaXRoXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWMwbUxS
cHctOXJJKQogKiDwn46lIFtKYXZhU2NyaXB0IFByYWN0aWNhbCBBcHBsaWNh
dGlvbnMgb2YgQ2FsbCwgQXBwbHkgYW5kIEJpbmQgZnVuY3Rpb25z4oCUIHRl
Y2hzaXRoXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PUFZVll4
ZXpyTVdBKQogKiDwn46lIFtKYXZhU2NyaXB0IChjYWxsLCBiaW5kLCBhcHBs
eSkg4oCUIGN1cmlvdXMgYWF0bWFdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29t
L3dhdGNoP3Y9VXkwTk9YTEJyYUUpCiAqIPCfjqUgW1VuZGVyc3RhbmRpbmcg
RnVuY3Rpb25zIGFuZCAndGhpcycgSW4gVGhlIFdvcmxkIG9mIEVTMjAxNyDi
gJQgQnJ5YW4gSHVnaGVzXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRj
aD92PUFPU1lZMV9ucF80KQogKiDwn46lIFtiaW5kIGFuZCB0aGlzIC0gT2Jq
ZWN0IENyZWF0aW9uIGluIEphdmFTY3JpcHQgLSBGdW5GdW5GdW5jdGlvbl0o
aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1HaGJoRDFIUjV2aykK
ICog8J+OpSBbSmF2YVNjcmlwdCBQcmFjdGljYWwgQXBwbGljYXRpb25zIG9m
IENhbGwsIEFwcGx5IGFuZCBCaW5kIGZ1bmN0aW9ucyDigJQgdGVjaHNpdGhd
KGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9QVlWWXhlenJNV0Ep
CiAqIPCfjqUgW0pTIEZ1bmN0aW9uIE1ldGhvZHMgY2FsbCgpLCBhcHBseSgp
LCBhbmQgYmluZCgpIOKAlCBTdGV2ZSBHcmlmZml0aF0oaHR0cHM6Ly93d3cu
eW91dHViZS5jb20vd2F0Y2g/dj11QmRIMGlCMVZETSkKCioqW+KshiBCYWNr
IHRvIFRvcF0oI3RhYmxlLW9mLWNvbnRlbnRzKSoqCgotLS0KCiMjIDE2LiBu
ZXcsIENvbnN0cnVjdG9yLCBpbnN0YW5jZW9mIGFuZCBJbnN0YW5jZXMKCiMj
IyBBcnRpY2xlcwoKICog8J+TnCBbSmF2YVNjcmlwdCBGb3IgQmVnaW5uZXJz
OiB0aGUg4oCYbmV34oCZIG9wZXJhdG9yIOKAlCBCcmFuZG9uIE1vcmVsbGld
KGh0dHBzOi8vY29kZWJ1cnN0LmlvL2phdmFzY3JpcHQtZm9yLWJlZ2lubmVy
cy10aGUtbmV3LW9wZXJhdG9yLWNlZTM1YmViNjY5ZSkKICog8J+TnCBbTGV0
4oCZcyBkZW15c3RpZnkgSmF2YVNjcmlwdOKAmXMg4oCYbmV34oCZIGtleXdv
cmQg4oCUIEN5bnRoaWEgTGVlXShodHRwczovL21lZGl1bS5mcmVlY29kZWNh
bXAub3JnL2RlbXlzdGlmeWluZy1qYXZhc2NyaXB0cy1uZXcta2V5d29yZC04
NzRkZjEyNjE4NGMpCiAqIPCfk5wgW0NvbnN0cnVjdG9yLCBvcGVyYXRvciAi
bmV3IiDigJQgSmF2YVNjcmlwdC5JbmZvXShodHRwczovL2phdmFzY3JpcHQu
aW5mby9jb25zdHJ1Y3Rvci1uZXcpCiAqIPCfk5wgW1VuZGVyc3RhbmRpbmcg
SmF2YVNjcmlwdCBDb25zdHJ1Y3RvcnMg4oCUIEZhcmF6IEtlbGhpbmldKGh0
dHBzOi8vY3NzLXRyaWNrcy5jb20vdW5kZXJzdGFuZGluZy1qYXZhc2NyaXB0
LWNvbnN0cnVjdG9ycy8pCiAqIPCfk5wgW1VzZSBDb25zdHJ1Y3RvciBGdW5j
dGlvbnMg4oCUIE9wZW5jbGFzc3Jvb21zXShodHRwczovL29wZW5jbGFzc3Jv
b21zLmNvbS9lbi9jb3Vyc2VzLzM1MjMyMzEtbGVhcm4tdG8tY29kZS13aXRo
LWphdmFzY3JpcHQvNDM3OTAwNi11c2UtY29uc3RydWN0b3ItZnVuY3Rpb25z
KQogKiDwn5OcIFtCZXlvbmQgYHR5cGVvZmAgYW5kIGBpbnN0YW5jZW9mYDog
c2ltcGxpZnlpbmcgZHluYW1pYyB0eXBlIGNoZWNrcyDigJQgRHIuIEF4ZWwg
UmF1c2NobWF5ZXJdKGh0dHA6Ly8yYWxpdHkuY29tLzIwMTcvMDgvdHlwZS1y
aWdodC5odG1sKQogKiDwn5OcIFtXaGF0IElzIHRoZSBJbnN0YW5jZW9mIE9w
ZXJhdG9yIGluIEphdmFTY3JpcHQg4oCUIGFwcGVuZFRvXShodHRwczovL2Fw
cGVuZHRvLmNvbS8yMDE2LzEwL3doYXQtaXMtdGhlLWluc3RhbmNlb2Ytb3Bl
cmF0b3ItaW4tamF2YXNjcmlwdC8pCiAqIPCfk5wgW0Z1bmN0aW9uIGFuZCBP
YmplY3QsIGluc3RhbmNlcyBvZiBlYWNoIG90aGVyIOKAlCBLaXJvIFJpc2td
KGh0dHBzOi8vamF2YXNjcmlwdHJlZmluZWQuaW8vZnVuY3Rpb24tYW5kLW9i
amVjdC1pbnN0YW5jZXMtb2YtZWFjaC1vdGhlci0xZTEwOTVkNWZhYWMpCgoq
KlvirIYgQmFjayB0byBUb3BdKCN0YWJsZS1vZi1jb250ZW50cykqKgoKLS0t
CgojIyAxNy4gUHJvdG90eXBlIEluaGVyaXRhbmNlIGFuZCBQcm90b3R5cGUg
Q2hhaW4KCiMjIyBBcnRpY2xlcwoKICog8J+TnCBbSmF2YXNjcmlwdCA6IFBy
b3RvdHlwZSB2cyBDbGFzcyDigJQgVmFsZW50aW4gUEFSU1ldKGh0dHBzOi8v
bWVkaXVtLmNvbS9AcGFyc3l2YWwvamF2YXNjcmlwdC1wcm90b3R5cGUtdnMt
Y2xhc3MtYTcwMTVkNTQ3M2IpCiAqIPCfk5wgW0phdmFTY3JpcHQgZW5naW5l
IGZ1bmRhbWVudGFsczogb3B0aW1pemluZyBwcm90b3R5cGVzIOKAlCBNYXRo
aWFzIEJ5bmVuc10oaHR0cHM6Ly9tYXRoaWFzYnluZW5zLmJlL25vdGVzL3By
b3RvdHlwZXMpCiAqIPCfk5wgW0phdmFTY3JpcHQgUHJvdG90eXBlIOKAlCBO
QyBQYXRyb10oaHR0cHM6Ly9jb2RlYnVyc3QuaW8vamF2YXNjcmlwdC1wcm90
b3R5cGUtY2IyOWQ4MmI4ODA5KQogKiDwn5OcIFtQcm90b3R5cGUgaW4gSmF2
YXNjcmlwdCDigJQgU2FuZGVlcCBSYW5qYW5dKGh0dHBzOi8vd3d3LmNvZGVt
ZW50b3IuaW8vc2FuZGVlcHJhbmphbjIwMDcvcHJvdG90eXBlLWluLWphdmFz
Y2lwdC1rbmJ2ZTBscW8pCiAqIPCfk5wgW1Byb3RvdHlwZXMgaW4gSmF2YVNj
cmlwdCDigJQgUnVwZXNoIE1pc2hyYV0oaHR0cHM6Ly9oYWNrZXJub29uLmNv
bS9wcm90b3R5cGVzLWluLWphdmFzY3JpcHQtNWJiYTI5OTBlMDRiKQogKiDw
n5OcIFtQcm90b3R5cGUgaW4gSmF2YVNjcmlwdDogaXTigJlzIHF1aXJreSwg
YnV0IGhlcmXigJlzIGhvdyBpdCB3b3JrcyDigJQgUHJhbmF2IEppbmRhbF0o
aHR0cHM6Ly9tZWRpdW0uZnJlZWNvZGVjYW1wLm9yZy9wcm90b3R5cGUtaW4t
anMtYnVzdGVkLTU1NDdlYzY4ODcyKQogKiDwn5OcIFtJbmhlcml0YW5jZSBh
bmQgdGhlIHByb3RvdHlwZSBjaGFpbiDigJQgTUROXShodHRwczovL2RldmVs
b3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L0lu
aGVyaXRhbmNlX2FuZF90aGVfcHJvdG90eXBlX2NoYWluKQogKiDwn5OcIFtV
bmRlcnN0YW5kaW5nIEphdmFTY3JpcHQ6IFByb3RvdHlwZSBhbmQgSW5oZXJp
dGFuY2Ug4oCUIEFsZXhhbmRlciBLb25kb3ZdKGh0dHBzOi8vaGFja2Vybm9v
bi5jb20vdW5kZXJzdGFuZGluZy1qYXZhc2NyaXB0LXByb3RvdHlwZS1hbmQt
aW5oZXJpdGFuY2UtZDU1YTlhMjNiZGUyKQogKiDwn5OcIFtVbmRlcnN0YW5k
aW5nIENsYXNzZXMgKEVTNSkgYW5kIFByb3RvdHlwYWwgSW5oZXJpdGFuY2Ug
aW4gSmF2YVNjcmlwdCDigJQgSHJpZGF5ZXNoIFNoYXJtYV0oaHR0cHM6Ly9k
ZXYudG8vX2hyaWRheXNoYXJtYS91bmRlcnN0YW5kaW5nLWNsYXNzZXMtZXM1
LWFuZC1wcm90b3R5cGFsLWluaGVyaXRhbmNlLWluLWphdmFzY3JpcHQtbjhk
KQogKiDwn5OcIFtwcm90b3R5cGUsIF9fcHJvdG9fXyBhbmQgUHJvdG90eXBh
bCBpbmhlcml0YW5jZSBpbiBKYXZhU2NyaXB0IOKAlCBWYXJ1biBEZXldKGh0
dHBzOi8vZGV2LnRvL3ZhcnVuZGV5L3Byb3RvdHlwZS1wcm90by1hbmQtcHJv
dG90eXBhbC1pbmhlcml0YW5jZS1pbi1qYXZhc2NyaXB0LTJpbmwpCiAqIPCf
k5wgW1Byb3RvdHlwYWwgSW5oZXJpdGFuY2Ug4oCUIEphdmFTY3JpcHQuSW5m
b10oaHR0cHM6Ly9qYXZhc2NyaXB0LmluZm8vcHJvdG90eXBlLWluaGVyaXRh
bmNlKQogKiDwn5OcIFtIb3cgVG8gV29yayB3aXRoIFByb3RvdHlwZXMgYW5k
IEluaGVyaXRhbmNlIGluIEphdmFTY3JpcHQg4oCUIFRhbmlhIFJhc2NpYV0o
aHR0cHM6Ly93d3cuZGlnaXRhbG9jZWFuLmNvbS9jb21tdW5pdHkvdHV0b3Jp
YWxzL3VuZGVyc3RhbmRpbmctcHJvdG90eXBlcy1hbmQtaW5oZXJpdGFuY2Ut
aW4tamF2YXNjcmlwdCkKICog8J+TnCBbTWFzdGVyIEphdmFTY3JpcHQgUHJv
dG90eXBlcyAmIEluaGVyaXRhbmNlIOKAlCBBcm5hdiBBZ2dhcndhbF0oaHR0
cHM6Ly9jb2RlYnVyc3QuaW8vbWFzdGVyLWphdmFzY3JpcHQtcHJvdG90eXBl
cy1pbmhlcml0YW5jZS1kMGE5YTVhNzVjNGUpCiAqIPCfk5wgW1lvdSBEb24n
dCBLbm93IEpTIFtCb29rXSBDaGFwdGVyIDU6IFByb3RvdHlwZXMg4oCUIEt5
bGUgU2ltcHNvbl0oaHR0cHM6Ly9naXRodWIuY29tL2dldGlmeS9Zb3UtRG9u
dC1Lbm93LUpTL2Jsb2IvbWFzdGVyL3RoaXMlMjAlMjYlMjBvYmplY3QlMjBw
cm90b3R5cGVzL2NoNS5tZCkKICog8J+TnCBbSmF2YVNjcmlwdOKAmXMgUHJv
dG90eXBhbCBJbmhlcml0YW5jZSBFeHBsYWluZWQgVXNpbmcgQ1NTIOKAlCBO
YXNoIFZhaWxdKGh0dHBzOi8vbWVkaXVtLmZyZWVjb2RlY2FtcC5vcmcvdW5k
ZXJzdGFuZGluZy1wcm90b3R5cGFsLWluaGVyaXRhbmNlLWluLWphdmFzY3Jp
cHQtd2l0aC1jc3MtOTNiMmZjZGE3NWU0KQogKiDwn5OcIFtQcm90b3R5cGFs
IEluaGVyaXRhbmNlIGluIEphdmFTY3JpcHQg4oCUIEphbm5pcyBSZWRtYW5u
XShodHRwczovL2dpc3QuZ2l0aHViLmNvbS9kZXJodWVyc3QvYTU4NWM0OTE2
YjFjMzYxY2M2ZjApCiAqIPCfk5wgW0NsYXNzaWNhbCBhbmQgUHJvdG90eXBp
Y2FsIEluaGVyaXRhbmNlIGluIEphdmFTY3JpcHQg4oCUIERhbm55IENvcm5l
bGlzc2VdKGh0dHA6Ly93d3cuY29tcGV0YS5jb20vYmxvZy9jbGFzc2ljYWwt
cHJvdG90eXBpY2FsLWluaGVyaXRhbmNlLWphdmFzY3JpcHQvKQogKiDwn5Oc
IFtEZW15c3RpZnlpbmcgRVM2IENsYXNzZXMgQW5kIFByb3RvdHlwYWwgSW5o
ZXJpdGFuY2Ug4oCVIE5lbyBJZ2hvZGFyb10oaHR0cHM6Ly9zY290Y2guaW8v
dHV0b3JpYWxzL2RlbXlzdGlmeWluZy1lczYtY2xhc3Nlcy1hbmQtcHJvdG90
eXBhbC1pbmhlcml0YW5jZSkKICog8J+TnCBbSW50cm8gVG8gUHJvdG90eXBh
bCBJbmhlcml0YW5jZSDigJQgRGhhcmFuaSBKYXlha2FudGhhbl0oaHR0cHM6
Ly9kZXYudG8vZGFubnkvaW50cm8tdG8tcHJvdG90eXBhbC1pbmhlcml0YW5j
ZS0tLWpzLTlkaSkKICog8J+TnCBbQ2xhc3NlcyBpbiBKYXZhU2NyaXB0IC0g
RXhwbGFpbmVkIOKAlCBEYW5pZWwgTGldKGh0dHA6Ly9ibG9nLmJyZXcuY29t
LmhrL2NsYXNzZXMtaW4tamF2YXNjcmlwdC1leHBsYWluZWQvKQogKiDwn5Oc
IFtZb3UgRG9uJ3QgS25vdyBKUzogdGhpcyAmIE9iamVjdCBQcm90b3R5cGVz
IOKAlCBLeWxlIFNpbXBzb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRpZnkv
WW91LURvbnQtS25vdy1KUy9ibG9iL21hc3Rlci90aGlzJTIwJTI2JTIwb2Jq
ZWN0JTIwcHJvdG90eXBlcy9jaDQubWQpCiAqIPCfk5wgW0xldOKAmXMgQnVp
bGQgUHJvdG90eXBhbCBJbmhlcml0YW5jZSBpbiBKUyDigJQgdmFyLWNoZV0o
aHR0cHM6Ly9kZXYudG8vdmFyY2hlL2xldC1zLWJ1aWxkLXByb3RvdHlwYWwt
aW5oZXJpdGFuY2UtaW4tanMtNTZtbSkKICog8J+TnCBbT2JqZWN0cywgUHJv
dG90eXBlcyBhbmQgQ2xhc3NlcyBpbiBKYXZhU2NyaXB0IOKAlCBBdHRhXSho
dHRwczovL2Rldi50by9hdHRhY29tc2lhbi9vYmplY3RzLXByb3RvdHlwZXMt
YW5kLWNsYXNzZXMtaW4tamF2YXNjcmlwdC0zaTliKQogKiDwn5OcIFtKYXZh
U2NyaXB0IFByb3RvdHlwYWwgSW5oZXJpdGFuY2UgYW5kIE9iamVjdCBDcmVh
dGlvbiDigJQgTmljayBTaG91cF0oaHR0cHM6Ly9kZXYudG8vc2hvdXBuL2ph
dmFzY3JpcHQtcHJvdG90eXBlcy1hbmQtb2JqZWN0LWNyZWF0aW9uLTJvbmgp
CiAqIPCfk5wgW1RoZSBtYWdpY2FsIHdvcmxkIG9mIEphdmFTY3JpcHQgcHJv
dG90eXBlcyDigJQgQmVsw6luXShodHRwczovL2Rldi50by9sYWR5YmVua28v
dGhlLW1hZ2ljYWwtd29ybGQtb2YtamF2YXNjcmlwdC1wcm90b3R5cGVzLTFt
aGcpCgogIyMjIFZpZGVvcwoKICog8J+OpSBbSmF2YXNjcmlwdCBQcm90b3R5
cGUgSW5oZXJpdGFuY2Ug4oCUIEF2ZWx4XShodHRwczovL3d3dy55b3V0dWJl
LmNvbS93YXRjaD92PXNPcnRBanlrNGxRKQogKiDwn46lIFtKYXZhU2NyaXB0
IFByb3RvdHlwZSBJbmhlcml0YW5jZSBFeHBsYWluZWQgcHQuIEkg4oCUIHRl
Y2hzaXRoXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PTdvTldO
bE1ya3BjKQogKiDwn46lIFtKYXZhU2NyaXB0IFByb3RvdHlwZSBJbmhlcml0
YW5jZSBFeHBsYWluZWQgcHQuIElJIOKAlCB0ZWNoc2l0aF0oaHR0cHM6Ly93
d3cueW91dHViZS5jb20vd2F0Y2g/dj11SWxqNl96X3dMOCkKICog8J+OpSBb
SmF2YVNjcmlwdCBQcm90b3R5cGUgSW5oZXJpdGFuY2UgRXhwbGFpbmVkIOKA
lCBLeWxlIFJvYmluc29uXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRj
aD92PXFNTy1MVE9ySmFFKQogKiDwn46lIFtBZHZhbmNlZCBKYXZhc2NyaXB0
IC0gUHJvdG90eXBhbCBJbmhlcml0YW5jZSBJbiAxIE1pbnV0ZV0oaHR0cHM6
Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1HNmw1Q0hsNjdIUSkKICog8J+O
pSBbQW4gT3ZlcnZpZXcgT2YgQ2xhc3NpY2FsIEphdmFzY3JpcHQgQ2xhc3Nl
cyBhbmQgUHJvdG90eXBhbCBJbmhlcml0YW5jZSDigJQgUGVudGFjb2RlXSho
dHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PXBod3p1aUpKUHBRKQog
KiDwn46lIFtPYmplY3QgT3JpZW50ZWQgSmF2YVNjcmlwdCAtIFByb3RvdHlw
ZSDigJQgVGhlIE5ldCBOaW5qYV0oaHR0cHM6Ly93d3cueW91dHViZS5jb20v
d2F0Y2g/dj00amI0QVlFeWhSYykKICog8J+OpSBbUHJvdG90eXBlIGluIEph
dmFTY3JpcHQg4oCUIGt1ZHZlbmthdF0oaHR0cHM6Ly93d3cueW91dHViZS5j
b20vd2F0Y2g/dj0ycmtFYmNwdFI2NCkKICog8J+OpSBbSmF2YVNjcmlwdCBV
c2luZyBQcm90b3R5cGVzIOKAlCBPJ1JlaWxseV0oaHR0cHM6Ly93d3cueW91
dHViZS5jb20vd2F0Y2g/dj1vQ3dDY052YVhBUSkKICog8J+OpSBbQSBCZWdp
bm5lcidzIEd1aWRlIHRvIEphdmFzY3JpcHQncyBQcm90b3R5cGUg4oCUIFR5
bGVyIE1jZ2lubmlzXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92
PVhza01XQlhOYnAwKQogKiDwn46lIFtQcm90b3R5cGVzIGluIEphdmFzY3Jp
cHQgLSBwNS5qcyBUdXRvcmlhbCDigJQgVGhlIENvZGluZyBUcmFpbl0oaHR0
cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1oU19XcWt5VWFoOCkKCgoq
KlvirIYgQmFjayB0byBUb3BdKCN0YWJsZS1vZi1jb250ZW50cykqKgoKLS0t
CgojIyAxOC4gT2JqZWN0LmNyZWF0ZSBhbmQgT2JqZWN0LmFzc2lnbgoKIyMj
IEFydGljbGVzCgogKiDwn5OcIFtPYmplY3QuY3JlYXRlKCkg4oCUIE1ETl0o
aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIv
SmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvT2JqZWN0L2Ny
ZWF0ZSkKICog8J+TnCBbT2JqZWN0LmNyZWF0ZSBpbiBKYXZhU2NyaXB0IOKA
lCBSdXBlc2ggTWlzaHJhXShodHRwczovL2hhY2tlcm5vb24uY29tL29iamVj
dC1jcmVhdGUtaW4tamF2YXNjcmlwdC1mYTg2NzRkZjZlZDIpCiAqIPCfk5wg
W09iamVjdC5jcmVhdGUoKTogdGhlIE5ldyBXYXkgdG8gQ3JlYXRlIE9iamVj
dHMgaW4gSmF2YVNjcmlwdCDigJQgUm9iIEdyYXZlbGxlXShodHRwczovL3d3
dy5odG1sZ29vZGllcy5jb20vYmV5b25kL2phdmFzY3JpcHQvb2JqZWN0LmNy
ZWF0ZS10aGUtbmV3LXdheS10by1jcmVhdGUtb2JqZWN0cy1pbi1qYXZhc2Ny
aXB0Lmh0bWwpCiAqIPCfk5wgW0Jhc2ljIEluaGVyaXRhbmNlIHdpdGggT2Jq
ZWN0LmNyZWF0ZSDigJQgSm9zaHVhIENsYW50b25dKGh0dHA6Ly9hZHJpcG9m
amF2YXNjcmlwdC5jb20vYmxvZy9kcmlwcy9iYXNpYy1pbmhlcml0YW5jZS13
aXRoLW9iamVjdC1jcmVhdGUuaHRtbCkKICog8J+TnCBbT2JqZWN0LmNyZWF0
ZSgpIEluIEphdmFTY3JpcHQg4oCUIEdlZWtzZm9yR2Vla3NdKGh0dHBzOi8v
d3d3LmdlZWtzZm9yZ2Vla3Mub3JnL29iamVjdC1jcmVhdGUtamF2YXNjcmlw
dC8pCiAqIPCfk5wgW1VuZGVyc3RhbmRpbmcgdGhlIGRpZmZlcmVuY2UgYmV0
d2VlbiBPYmplY3QuY3JlYXRlKCkgYW5kIHRoZSBuZXcgb3BlcmF0b3Ig4oCU
IEpvbmF0aGFuIFZveGxhbmRdKGh0dHBzOi8vbWVkaXVtLmNvbS9Aam9uYXRo
YW52b3gwMS91bmRlcnN0YW5kaW5nLXRoZS1kaWZmZXJlbmNlLWJldHdlZW4t
b2JqZWN0LWNyZWF0ZS1hbmQtdGhlLW5ldy1vcGVyYXRvci1iMmEyZjQ3NDkz
NTgpCiAqIPCfk5wgW0phdmFTY3JpcHQgT2JqZWN0IENyZWF0aW9uOiBQYXR0
ZXJucyBhbmQgQmVzdCBQcmFjdGljZXMg4oCUIEplZmYgTW90dF0oaHR0cHM6
Ly93d3cuc2l0ZXBvaW50LmNvbS9qYXZhc2NyaXB0LW9iamVjdC1jcmVhdGlv
bi1wYXR0ZXJucy1iZXN0LXByYWN0aXNlcy8pCiAqIPCfk5wgW0RlYWxpbmcg
V2l0aCBPYmplY3RzIGluIEphdmFTY3JpcHQgV2l0aCBPYmplY3QuYXNzaWdu
LCBPYmplY3Qua2V5cyBhbmQgaGFzT3duUHJvcGVydHldKGh0dHBzOi8vYWxs
aWdhdG9yLmlvL2pzL2RlYWxpbmctd2l0aC1vYmplY3RzLykKICog8J+TnCBb
Q29weWluZyBPYmplY3RzIGluIEphdmFTY3JpcHQg4oCVIE9yaW5hbWkgT2xh
dHVuamldKGh0dHBzOi8vc2NvdGNoLmlvL2Jhci10YWxrL2NvcHlpbmctb2Jq
ZWN0cy1pbi1qYXZhc2NyaXB0KQogKiDwn5OcIFtPYmplY3QuYXNzaWduKCkg
4oCUIE1ETl0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMv
ZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMv
T2JqZWN0L2Fzc2lnbikKICog8J+TnCBbSmF2YVNjcmlwdDogT2JqZWN0LmFz
c2lnbigpIOKAlCBUaGlhZ28gUy4gQWRyaWFub10oaHR0cHM6Ly9jb2RlYnVy
c3QuaW8vamF2YXNjcmlwdC1vYmplY3QtYXNzaWduLWJjOTY5NmRjYmI2ZSkK
ICog8J+TnCBbSG93IHRvIGRlZXAgY2xvbmUgYSBKYXZhU2NyaXB0IE9iamVj
dCDigJQgRmxhdmlvIENvcGVzXShodHRwczovL2ZsYXZpb2NvcGVzLmNvbS9o
b3ctdG8tY2xvbmUtamF2YXNjcmlwdC1vYmplY3QvKQogKiDwn5OcIFtPYmpl
Y3QgQXNzaWdubWVudCB2cy4gUHJpbWl0aXZlIEFzc2lnbm1lbnQgaW4gSmF2
YVNjcmlwdCBmb3IgQmVnaW5uZXJzIOKAlCBOaWNrIFNjaWFsbGldKGh0dHBz
Oi8vZGV2LnRvL25hczV3L29iamVjdC1hc3NpZ25tZW50LXZzLXByaW1pdGl2
ZS1hc3NpZ25tZW50LWluLWphdmFzY3JpcHQtZm9yLWJlZ2lubmVycy0ybW9p
KQoKICMjIyBWaWRlb3MKCiAqIPCfjqUgW09iamVjdC5hc3NpZ24oKSBleHBs
YWluZWQg4oCUIEFhcm9uIFdyaXRlcyBDb2RlXShodHRwczovL3d3dy55b3V0
dWJlLmNvbS93YXRjaD92PWF3N05mWWhSNXJjKQogKiDwn46lIFtPYmplY3Qu
YXNzaWduKCkgTWV0aG9kIOKAlCB0ZWNoc2l0aF0oaHR0cHM6Ly93d3cueW91
dHViZS5jb20vd2F0Y2g/dj05S3k0WDZpbnBpNCkKCioqW+KshiBCYWNrIHRv
IFRvcF0oI3RhYmxlLW9mLWNvbnRlbnRzKSoqCgotLS0KCiMjIDE5LiBtYXAs
IHJlZHVjZSwgZmlsdGVyCgojIyMgQXJ0aWNsZXMKCiAqIPCfk5wgW0phdmFT
Y3JpcHQgRnVuY3Rpb25hbCBQcm9ncmFtbWluZyDigJQgbWFwLCBmaWx0ZXIg
YW5kIHJlZHVjZSDigJQgQm9qYW4gR3ZvemRlcmFjXShodHRwczovL21lZGl1
bS5jb20vanNndXJ1L2phdmFzY3JpcHQtZnVuY3Rpb25hbC1wcm9ncmFtbWlu
Zy1tYXAtZmlsdGVyLWFuZC1yZWR1Y2UtODQ2ZmY5YmE0OTJkKQogKiDwn5Oc
IFtMZWFybiBtYXAsIGZpbHRlciBhbmQgcmVkdWNlIGluIEphdmFzY3JpcHQg
4oCUIEpvw6NvIE1pZ3VlbCBDdW5oYV0oaHR0cHM6Ly9tZWRpdW0uY29tL0Bq
b29taWd1ZWxjdW5oYS9sZWFybi1tYXAtZmlsdGVyLWFuZC1yZWR1Y2UtaW4t
amF2YXNjcmlwdC1lYTU5MDA5NTkzYzQpCiAqIPCfk5wgW0phdmFTY3JpcHTi
gJlzIE1hcCwgUmVkdWNlLCBhbmQgRmlsdGVyIOKAlCBEYW4gTWFydGVuc2Vu
XShodHRwczovL2Rhbm1hcnRlbnNlbi5zdmJ0bGUuY29tL2phdmFzY3JpcHRz
LW1hcC1yZWR1Y2UtYW5kLWZpbHRlcikKICog8J+TnCBbSG93IHRvIFVzZSBN
YXAsIEZpbHRlciwgJiBSZWR1Y2UgaW4gSmF2YVNjcmlwdCDigJQgUGVsZWtl
IFNlbmdzdGFja2VdKGh0dHBzOi8vY29kZS50dXRzcGx1cy5jb20vdHV0b3Jp
YWxzL2hvdy10by11c2UtbWFwLWZpbHRlci1yZWR1Y2UtaW4tamF2YXNjcmlw
dC0tY21zLTI2MjA5KQogKiDwn5OcIFtKYXZhU2NyaXB0IOKAlCBMZWFybiB0
byBDaGFpbiBNYXAsIEZpbHRlciwgYW5kIFJlZHVjZSDigJQgQnJhbmRvbiBN
b3JlbGxpXShodHRwczovL2NvZGVidXJzdC5pby9qYXZhc2NyaXB0LWxlYXJu
LXRvLWNoYWluLW1hcC1maWx0ZXItYW5kLXJlZHVjZS1hY2QyZDA1NjJjZDQp
CiAqIPCfk5wgW0phdmFzY3JpcHQgZGF0YSBzdHJ1Y3R1cmUgd2l0aCBtYXAs
IHJlZHVjZSwgZmlsdGVyIGFuZCBFUzYg4oCUIERlZXBhayBHdXB0YV0oaHR0
cHM6Ly9jb2RlYnVyc3QuaW8vd3JpdGUtYmVhdXRpZnVsLWphdmFzY3JpcHQt
d2l0aC0lQ0UlQkItZnAtZXM2LTM1MGNkNjRhYjViZikKICog8J+TnCBbVW5k
ZXJzdGFuZGluZyBtYXAsIGZpbHRlciBhbmQgcmVkdWNlIGluIEphdmFzY3Jp
cHQg4oCUIEx1dWsgR3J1aWpzXShodHRwczovL2hhY2tlcm5vb24uY29tL3Vu
ZGVyc3RhbmRpbmctbWFwLWZpbHRlci1hbmQtcmVkdWNlLWluLWphdmFzY3Jp
cHQtNWRmMWM3ZWVlNDY0KQogKiDwn5OcIFtGdW5jdGlvbmFsIFByb2dyYW1t
aW5nIGluIEpTOiBtYXAsIGZpbHRlciwgcmVkdWNlIChQdC4gNSkg4oCUIE9t
ZXIgR29sZGJlcmddKGh0dHBzOi8vaGFja2Vybm9vbi5jb20vZnVuY3Rpb25h
bC1wcm9ncmFtbWluZy1pbi1qcy1tYXAtZmlsdGVyLXJlZHVjZS1wdC01LTMw
OGEyMDVmZGQ1ZikKICog8J+TnCBbSmF2YVNjcmlwdDogTWFwLCBGaWx0ZXIs
IFJlZHVjZSDigJQgV2lsbGlhbSBTLiBWaW5jZW50XShodHRwczovL3dzdmlu
Y2VudC5jb20vZnVuY3Rpb25hbC1qYXZhc2NyaXB0LW1hcC1maWx0ZXItcmVk
dWNlLykKICog8J+TnCBbQXJyb3cgRnVuY3Rpb25zOiBGYXQgYW5kIENvbmNp
c2UgU3ludGF4IGluIEphdmFTY3JpcHQg4oCUIEt5bGUgUGVubmVsbF0oaHR0
cHM6Ly93d3cuc2l0ZXBvaW50LmNvbS9lczYtYXJyb3ctZnVuY3Rpb25zLW5l
dy1mYXQtY29uY2lzZS1zeW50YXgtamF2YXNjcmlwdC8pCiAqIPCfk5wgW0ph
dmFTY3JpcHQ6IEFycm93IEZ1bmN0aW9ucyBmb3IgQmVnaW5uZXJzIOKAlCBC
cmFuZG9uIE1vcmVsbGldKGh0dHBzOi8vY29kZWJ1cnN0LmlvL2phdmFzY3Jp
cHQtYXJyb3ctZnVuY3Rpb25zLWZvci1iZWdpbm5lcnMtOTI2OTQ3ZmMwY2Rj
KQogKiDwn5OcIFtXaGVuIChhbmQgd2h5KSB5b3Ugc2hvdWxkIHVzZSBFUzYg
YXJyb3cgZnVuY3Rpb25zIOKAlCBhbmQgd2hlbiB5b3Ugc2hvdWxkbuKAmXQg
4oCUIEN5bnRoaWEgTGVlXShodHRwczovL21lZGl1bS5mcmVlY29kZWNhbXAu
b3JnL3doZW4tYW5kLXdoeS15b3Utc2hvdWxkLXVzZS1lczYtYXJyb3ctZnVu
Y3Rpb25zLWFuZC13aGVuLXlvdS1zaG91bGRudC0zZDg1MWQ3ZjBiMjYpCiAq
IPCfk5wgW0phdmFTY3JpcHQg4oCUIExlYXJuICYgVW5kZXJzdGFuZCBBcnJv
dyBGdW5jdGlvbnMg4oCUIEJyYW5kb24gTW9yZWxsaV0oaHR0cHM6Ly9jb2Rl
YnVyc3QuaW8vamF2YXNjcmlwdC1sZWFybi11bmRlcnN0YW5kLWFycm93LWZ1
bmN0aW9ucy1mZTIwODM1MzM5NDYpCiAqIPCfk5wgWyhKYXZhU2NyaXB0ICk9
PiBBcnJvdyBmdW5jdGlvbnMg4oCUIHNpZ3VdKGh0dHBzOi8vbWVkaXVtLmNv
bS9wb2RpaWhxL2phdmFzY3JpcHQtYXJyb3ctZnVuY3Rpb25zLTI3ZDRjMzMz
NGI4MykKICog8J+TnCBbSmF2YXNjcmlwdC5yZWR1Y2UoKSDigJQgUGF1bCBB
bmRlcnNvbl0oaHR0cHM6Ly9tZWRpdW0uY29tL0BwYW5kZXJzb24uZGV2L2ph
dmFzY3JpcHQtcmVkdWNlLTc5YWFiMDc4ZGEyMykKICog8J+TnCBbV2h5IHlv
dSBzaG91bGQgcmVwbGFjZSBmb3JFYWNoIHdpdGggbWFwIGFuZCBmaWx0ZXIg
aW4gSmF2YVNjcmlwdCDigJQgUm9vcGUgSGFrdWxpbmVuXShodHRwczovL2dv
Zm9yZS5jb20vZW4vd2h5LXlvdS1zaG91bGQtcmVwbGFjZS1mb3JlYWNoLykK
ICog8J+TnCBbU2ltcGxpZnkgeW91ciBKYXZhU2NyaXB0IOKAkyBVc2UgLm1h
cCgpLCAucmVkdWNlKCksIGFuZCAuZmlsdGVyKCkg4oCUIEV0aWVubmUgVGFs
Ym90XShodHRwczovL21lZGl1bS5jb20vcG9rYS10ZWNoYmxvZy9zaW1wbGlm
eS15b3VyLWphdmFzY3JpcHQtdXNlLW1hcC1yZWR1Y2UtYW5kLWZpbHRlci1i
ZDAyYzU5M2NjMmQpCiAqIPCfk5wgW0phdmFTY3JpcHTigJlzIFJlZHVjZSBN
ZXRob2QgRXhwbGFpbmVkIEJ5IEdvaW5nIE9uIGEgRGlldCDigJQgS2V2aW4g
S29ub25lbmtvXShodHRwczovL2Jsb2cuY29kZWFuYWxvZ2llcy5jb20vMjAx
OC8wNy8yNC9qYXZhc2NyaXB0cy1yZWR1Y2UtbWV0aG9kLWV4cGxhaW5lZC1i
eS1nb2luZy1vbi1hLWRpZXQvKQogKiDwn5OcIFtEaWZmZXJlbmNlIGJldHdl
ZW4gbWFwLCBmaWx0ZXIgYW5kIHJlZHVjZSBpbiBKYXZhU2NyaXB0IOKAlCBB
bWlyYXRhIEtob2RhcGFyYXN0XShodHRwczovL21lZGl1bS5jb20vQGFtaXJh
dGFrODgvZGlmZmVyZW5jZS1iZXR3ZWVuLW1hcC1maWx0ZXItYW5kLXJlZHVj
ZS1pbi1qYXZhc2NyaXB0LTgyMmZmNzlkNTE2MCkKICog8J+TnCBbTWFw4oeE
RmlsdGVy4oeEUmVkdWNl4oa7IOKAlCBhc2hheSBtYW5kd2FyeWFdKGh0dHBz
Oi8vaGFja2Vybm9vbi5jb20vbWFwLWZpbHRlci1yZWR1Y2UtZWJiZWQ0YmU0
MjAxKQogKiDwn5OcIFtGaW5kaW5nIFlvdXIgV2F5IFdpdGggLm1hcCgpIOKA
lCBCcmFuZG9uIFdvem5pZXdpY3pdKGh0dHBzOi8vbWVkaXVtLmZyZWVjb2Rl
Y2FtcC5vcmcvZmluZGluZy15b3VyLXdheS13aXRoLW1hcC1hZWNiOGNhMDM4
ZjYpCiAqIPCfk5wgW0hvdyB0byB3cml0ZSB5b3VyIG93biBtYXAsIGZpbHRl
ciBhbmQgcmVkdWNlIGZ1bmN0aW9ucyBpbiBKYXZhU2NyaXB0IOKAlCBIZW1h
bmQgTmFpcl0oaHR0cHM6Ly9tZWRpdW0uZnJlZWNvZGVjYW1wLm9yZy9ob3ct
dG8td3JpdGUteW91ci1vd24tbWFwLWZpbHRlci1hbmQtcmVkdWNlLWZ1bmN0
aW9ucy1pbi1qYXZhc2NyaXB0LWFiMWUzNTY3OWQyNikKICog8J+TnCBbSG93
IHRvIE1hbmlwdWxhdGUgQXJyYXlzIGluIEphdmFTY3JpcHQg4oCUIEJvbGFq
aSBBeW9kZWppXShodHRwczovL3d3dy5mcmVlY29kZWNhbXAub3JnL25ld3Mv
bWFuaXB1bGF0aW5nLWFycmF5cy1pbi1qYXZhc2NyaXB0LykKICog8J+TnCBb
SG93IHRvIHNpbXBsaWZ5IHlvdXIgY29kZWJhc2Ugd2l0aCBtYXAoKSwgcmVk
dWNlKCksIGFuZCBmaWx0ZXIoKSBpbiBKYXZhU2NyaXB0IOKAlCBBbGV4IFBl
cm15YWtvdl0oaHR0cHM6Ly9pdG5leHQuaW8vMTUtdXNlZnVsLWphdmFzY3Jp
cHQtZXhhbXBsZXMtb2YtbWFwLXJlZHVjZS1hbmQtZmlsdGVyLTc0Y2JiYjVl
MGExZikKICog8J+TnCBbLm1hcCgpLCAuZmlsdGVyKCksIGFuZCAucmVkdWNl
KCkg4oCUIEFuZHkgUGlja2xlXShodHRwczovL2Rldi50by9waWNrbGVhdC9t
YXAtZmlsdGVyLWFuZC1yZWR1Y2UtMmVmYikKICog8J+TnCBbTWFwL0ZpbHRl
ci9SZWR1Y2UgQ3Jhc2ggQ291cnNlIOKAlCBDaHJpcyBBY2hhcmRdKGh0dHBz
Oi8vZGV2LnRvL2NocmlzYWNoYXJkL21hcC1maWx0ZXItcmVkdWNlLWNyYXNo
LWNvdXJzZS01Z2FuKQogKiDwn5OcIFtNYXAsIEZpbHRlciBhbmQgUmVkdWNl
IOKAkyBBbmltYXRlZCDigJQgSmF2YVNjcmlwdCBUZWFjaGVyXShodHRwczov
L21lZGl1bS5jb20vQGpzX3R1dC9tYXAtZmlsdGVyLWFuZC1yZWR1Y2UtYW5p
bWF0ZWQtN2ZlMzkxYTM1YTQ3KQogKiDwn5OcIFtNYXAsIEZpbHRlciwgUmVk
dWNlIGFuZCBvdGhlcnMgQXJyYXlzIEl0ZXJhdG9ycyBZb3UgTXVzdCBLbm93
IHRvIEJlY29tZSBhbiBBbGdvcml0aG1zIFdpemFyZCDigJQgTWF1cm8gQm9u
b10oaHR0cHM6Ly9kZXYudG8vdXB0aGVpcm9uczc4L21hcC1maWx0ZXItcmVk
dWNlLWFuZC1vdGhlcnMtYXJyYXlzLWl0ZXJhdG9ycy15b3UtbXVzdC1rbm93
LXRvLWJlY29tZS1hbi1hbGdvcml0aG1zLXdpemFyZC00MjA5KQogKiDwn5Oc
IFtIb3cgdG8gVXNlIEphdmFTY3JpcHTigJlzIC5tYXAsIC5maWx0ZXIsIGFu
ZCAucmVkdWNlIOKAlCBBdmVyeSBEdWZmaW5dKGh0dHBzOi8vbWVkaXVtLmNv
bS9iZXR0ZXItcHJvZ3JhbW1pbmcvaG93LXRvLWphdmFzY3JpcHRzLW1hcC12
cy1maWx0ZXItdnMtcmVkdWNlLTgwZDg3YTVhMGEyNCkKCiAjIyMgVmlkZW9z
CgogKiDwn46lIFtNYXAsIEZpbHRlciBhbmQgUmVkdWNlIOKAlCBMeWRpYSBI
YWxsaWVdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9VVhpWWlp
MFk3TncpCiAqIPCfjqUgW0Z1bmN0aW9uYWwgSmF2YVNjcmlwdDogTWFwLCBm
b3JFYWNoLCBSZWR1Y2UsIEZpbHRlciDigJQgVGhlb2RvcmUgQW5kZXJzb25d
KGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9dnl0ekxsWV93bVUp
CiAqIPCfjqUgW0phdmFTY3JpcHQgQXJyYXkgc3VwZXJwb3dlcnM6IE1hcCwg
RmlsdGVyLCBSZWR1Y2UgKHBhcnQgSSkg4oCUIE1pY2hhZWwgUm9zYXRhXSho
dHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PXFUZWVWZDhoT0ZZKQog
KiDwn46lIFtKYXZhU2NyaXB0IEFycmF5IHN1cGVycG93ZXJzOiBNYXAsIEZp
bHRlciwgUmVkdWNlIChwYXJ0IDIpIOKAlCBNaWNoYWVsIFJvc2F0YV0oaHR0
cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1nSW05eExZdWRMMCkKICog
8J+OpSBbSmF2YVNjcmlwdCBIaWdoZXIgT3JkZXIgRnVuY3Rpb25zIC0gRmls
dGVyLCBNYXAsIFNvcnQgJiBSZWR1Y2Ug4oCUIEVwaWNvcF0oaHR0cHM6Ly93
d3cueW91dHViZS5jb20vd2F0Y2g/dj16WUJlRVB4TlNidykKICog8J+OpSBb
W0FycmF5IE1ldGhvZHMgMi8zXSAuZmlsdGVyICsgLm1hcCArIC5yZWR1Y2Ug
4oCUIENvZGVXaXRoTmlja10oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0
Y2g/dj00cVdscUQweVlUVSkKICog8J+OpSBbQXJyb3cgZnVuY3Rpb25zIGlu
IEphdmFTY3JpcHQgLSBXaGF0LCBXaHkgYW5kIEhvdyDigJQgRnVuIEZ1biBG
dW5jdGlvbl0oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj02c1FE
VGdPcWgtSSkKICog8J+OpSBbTGVhcm5pbmcgRnVuY3Rpb25hbCBQcm9ncmFt
bWluZyB3aXRoIEphdmFTY3JpcHQg4oCUIEFuamFuYSBWYWtpbCAtIEpTVW5j
b25mXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWUtNW9ibTFH
X0ZZJnQ9MTUyMXMpCiAqIPCfjqUgW01hcCAtIFBhcnRlIDIgSmF2YVNjcmlw
dCAtIEZ1biBGdW4gRnVuY3Rpb25dKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29t
L3dhdGNoP3Y9YkNxdGItWjVZR1EmdD0xN3MpCiAqIPCfjqUgW1JlZHVjZSBi
YXNpY3MgLSBQYXJ0IDMgb2YgRlAgaW4gSmF2YVNjcmlwdCAtIEZ1biBGdW4g
RnVuY3Rpb25dKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9V2w5
OGVacGtwLWMpCiAqIPCfjqUgW1JlZHVjZSBBZHZhbmNlZCAtIFBhcnQgNCBv
ZiBGUCBpbiBKYXZhU2NyaXB0IC0gRnVuIEZ1biBGdW5jdGlvbl0oaHR0cHM6
Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj0xRE1vbEoyRnJOWSZ0PTYyMXMp
CgoqKlvirIYgQmFjayB0byBUb3BdKCN0YWJsZS1vZi1jb250ZW50cykqKgoK
LS0tCgojIyAyMC4gUHVyZSBGdW5jdGlvbnMsIFNpZGUgRWZmZWN0cyBhbmQg
U3RhdGUgTXV0YXRpb24KCiMjIyBBcnRpY2xlcwoKICog8J+TnCBbSmF2YXNj
cmlwdCBhbmQgRnVuY3Rpb25hbCBQcm9ncmFtbWluZyDigJQgUHVyZSBGdW5j
dGlvbnMg4oCUIE9tZXIgR29sZGJlcmddKGh0dHBzOi8vaGFja2Vybm9vbi5j
b20vamF2YXNjcmlwdC1hbmQtZnVuY3Rpb25hbC1wcm9ncmFtbWluZy1wdC0z
LXB1cmUtZnVuY3Rpb25zLWQ1NzJiYjUyZTIxYykKICog8J+TnCBbTWFzdGVy
IHRoZSBKYXZhU2NyaXB0IEludGVydmlldzogV2hhdCBpcyBhIFB1cmUgRnVu
Y3Rpb24/IOKAlCBFcmljIEVsbGlvdHRdKGh0dHBzOi8vbWVkaXVtLmNvbS9q
YXZhc2NyaXB0LXNjZW5lL21hc3Rlci10aGUtamF2YXNjcmlwdC1pbnRlcnZp
ZXctd2hhdC1pcy1hLXB1cmUtZnVuY3Rpb24tZDFjMDc2YmVjOTc2KQogKiDw
n5OcIFtKYXZhU2NyaXB0OiBXaGF0IEFyZSBQdXJlIEZ1bmN0aW9ucyBBbmQg
V2h5IFVzZSBUaGVtPyDigJQgSmFtZXMgSmVmZmVyeV0oaHR0cHM6Ly9tZWRp
dW0uY29tL0BqYW1lc2plZmZlcnl1ay9qYXZhc2NyaXB0LXdoYXQtYXJlLXB1
cmUtZnVuY3Rpb25zLTRkNGQ1MzkyZDQ5YykKICog8J+TnCBbUHVyZSBmdW5j
dGlvbnMgaW4gSmF2YVNjcmlwdCDigJQgQG5pY29lc3Blb25dKGh0dHA6Ly93
d3cubmljb2VzcGVvbi5jb20vZW4vMjAxNS8wMS9wdXJlLWZ1bmN0aW9ucy1q
YXZhc2NyaXB0LykKICog8J+TnCBbRnVuY3Rpb25hbCBQcm9ncmFtbWluZzog
UHVyZSBGdW5jdGlvbnMg4oCUIEFybmUgQnJhc3NldXJdKGh0dHBzOi8vd3d3
LnNpdGVwb2ludC5jb20vZnVuY3Rpb25hbC1wcm9ncmFtbWluZy1wdXJlLWZ1
bmN0aW9ucy8pCiAqIPCfk5wgW1B1cmUgRnVuY3Rpb25zIEluIEphdmFzY3Jp
cHQg4oCUIEtydW5hbF0oaHR0cHM6Ly9hcHBkaXZpZGVuZC5jb20vMjAxNy8w
NC8xMC9wdXJlLWZ1bmN0aW9ucy1pbi1qYXZhc2NyaXB0LykKICog8J+TnCBb
TWFraW5nIHlvdXIgSmF2YVNjcmlwdCBQdXJlIOKAlCBKYWNrIEZyYW5rbGlu
XShodHRwczovL2FsaXN0YXBhcnQuY29tL2FydGljbGUvbWFraW5nLXlvdXIt
amF2YXNjcmlwdC1wdXJlKQogKiDwn5OcIFtUbyBtdXRhdGUsIG9yIG5vdCB0
byBtdXRhdGUsIGluIEphdmFTY3JpcHRdKGh0dHBzOi8vc2xlbWdyaW0uY29t
L211dGF0ZS1vci1ub3QtdG8tbXV0YXRlLykKICog8J+TnCBbQXJyYXlzLCBP
YmplY3RzIGFuZCBNdXRhdGlvbnMg4oCUIEZlZGVyaWNvIEtuw7xzc2VsXSho
dHRwczovL21lZGl1bS5jb20vQGZrbnVzc2VsL2FycmF5cy1vYmplY3RzLWFu
ZC1tdXRhdGlvbnMtNmIyMzM0OGI1NGFhKQogKiDwn5OcIFtUaGUgU3RhdGUg
b2YgSW1tdXRhYmlsaXR5IOKAlCBNYWNpZWogU2lrb3JhXShodHRwczovL21l
ZGl1bS5jb20vZGFpbHlqcy90aGUtc3RhdGUtb2YtaW1tdXRhYmlsaXR5LTE2
OWQyY2QxMTMxMCkKICog8J+TnCBbSG93IHRvIGRlYWwgd2l0aCBkaXJ0eSBz
aWRlIGVmZmVjdHMgaW4geW91ciBwdXJlIGZ1bmN0aW9uYWwgSmF2YVNjcmlw
dCDigJQgSmFtZXMgU2luY2xhaXJdKGh0dHBzOi8vanJzaW5jbGFpci5jb20v
YXJ0aWNsZXMvMjAxOC9ob3ctdG8tZGVhbC13aXRoLWRpcnR5LXNpZGUtZWZm
ZWN0cy1pbi15b3VyLXB1cmUtZnVuY3Rpb25hbC1qYXZhc2NyaXB0LykKICog
8J+TnCBbUHJldmVudGluZyBTaWRlIEVmZmVjdHMgaW4gSmF2YVNjcmlwdCDi
gJQgRGF2aWQgV2Fsc2hdKGh0dHBzOi8vZGF2aWR3YWxzaC5uYW1lL3ByZXZl
bnRpbmctc2lkZWVmZmVjdHMtamF2YXNjcmlwdCkKICog8J+TnCBbV2llbGRp
bmcgUHVyZSBGdW5jdGlvbnMgaW4gSmF2YVNjcmlwdCBhbmQgRnVuY3Rpb24g
Q29tcG9zaXRpb24g4oCUIFBlbGVrZSBTZW5nc3RhY2tlCl0oaHR0cHM6Ly9z
Y290Y2guaW8vdHV0b3JpYWxzL3dpZWxkaW5nLXB1cmUtZnVuY3Rpb25zLWlu
LWphdmFzY3JpcHQtYW5kLWZ1bmN0aW9uLWNvbXBvc2l0aW9uKQogKiDwn5Oc
IFtKYXZhU2NyaXB0OiBQdXJlIEZ1bmN0aW9ucyDigJQgV2lsbGlhbSBTLiBW
aW5jZW50XShodHRwczovL3dzdmluY2VudC5jb20vamF2YXNjcmlwdC1wdXJl
LWZ1bmN0aW9ucy8pCiAqIPCfk5wgW0Z1bmN0aW9uYWwgcHJvZ3JhbW1pbmcg
cGFyYWRpZ21zIGluIG1vZGVybiBKYXZhU2NyaXB0OiBQdXJlIGZ1bmN0aW9u
cyDigJQgQWxleGFuZGVyIEtvbmRvdl0oaHR0cHM6Ly9oYWNrZXJub29uLmNv
bS9mdW5jdGlvbmFsLXByb2dyYW1taW5nLXBhcmFkaWdtcy1pbi1tb2Rlcm4t
amF2YXNjcmlwdC1wdXJlLWZ1bmN0aW9ucy03OTdkOWFiYmVlMSkKICog8J+T
nCBbVW5kZXJzdGFuZGluZyBKYXZhc2NyaXB0IE11dGF0aW9uIGFuZCBQdXJl
IEZ1bmN0aW9ucyDigJQgQ2hpZHVtZSBObmFtZGldKGh0dHBzOi8vYmxvZy5i
aXRzcmMuaW8vdW5kZXJzdGFuZGluZy1qYXZhc2NyaXB0LW11dGF0aW9uLWFu
ZC1wdXJlLWZ1bmN0aW9ucy03MjMxY2MyMTgwZDMpCiAqIPCfk5wgW0Z1bmN0
aW9uYWwtaXNoIEphdmFTY3JpcHQg4oCUIERhbmllbCBCcmFpbl0oaHR0cHM6
Ly9tZWRpdW0uY29tL0BibHVlcG51bWUvZnVuY3Rpb25hbC1pc2gtamF2YXNj
cmlwdC0yMDVjMDVkMGVkMDgpCgogIyMjIFZpZGVvcwoKICog8J+OpSBbUHVy
ZSBGdW5jdGlvbnMg4oCUIEhleGxldF0oaHR0cHM6Ly93d3cueW91dHViZS5j
b20vd2F0Y2g/dj1kWjQxRDZMRFNCZykKICog8J+OpSBbUHVyZSBGdW5jdGlv
bnMgLSBGdW5jdGlvbmFsIFByb2dyYW1taW5nIGluIEphdmFTY3JpcHQg4oCU
IFBhdWwgTWNCcmlkZV0oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/
dj1KaF9VenF6el93TSkKICog8J+OpSBbSmF2YVNjcmlwdCBQdXJlIEZ1bmN0
aW9ucyDigJQgU2V0aCBBbGV4YW5kZXJdKGh0dHBzOi8vd3d3LnlvdXR1YmUu
Y29tL3dhdGNoP3Y9ZnJUM0gtZUJtUGMpCiAqIPCfjqUgW0phdmFTY3JpcHQg
UHVyZSB2cyBJbXB1cmUgRnVuY3Rpb25zIEV4cGxhaW5lZCDigJQgVGhlb2Rv
cmUgQW5kZXJzb25dKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9
QUhiUlZKenBCNTQpCiAqIPCfjqUgW1B1cmUgRnVuY3Rpb25zIC0gUHJvZ3Jh
bWHDp8OjbyBGdW5jaW9uYWw6IFBhcnRlIDEgLSBGdW4gRnVuIEZ1bmN0aW9u
XShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PUJNVWlGTVpyN3Zr
KQoKKipb4qyGIEJhY2sgdG8gVG9wXSgjdGFibGUtb2YtY29udGVudHMpKioK
Ci0tLQoKIyMgMjEuIENsb3N1cmVzCgojIyMgQXJ0aWNsZXMKCiAqIPCfk5wg
W0Nsb3N1cmVzIOKAlCBNRE5dKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEu
b3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvQ2xvc3VyZXMpCiAqIPCf
k5wgW0kgbmV2ZXIgdW5kZXJzdG9vZCBKYXZhU2NyaXB0IGNsb3N1cmVzIOKA
lCBPbGl2aWVyIERlIE1ldWxkZXJdKGh0dHBzOi8vbWVkaXVtLmNvbS9kYWls
eWpzL2ktbmV2ZXItdW5kZXJzdG9vZC1qYXZhc2NyaXB0LWNsb3N1cmVzLTk2
NjM3MDMzNjhlOCkKICog8J+TnCBbQ2xvc3VyZSDigJQgSmF2YVNjcmlwdC5J
bmZvXShodHRwczovL2phdmFzY3JpcHQuaW5mby9jbG9zdXJlKQogKiDwn5Oc
IFtVbmRlcnN0YW5kIEphdmFTY3JpcHQgQ2xvc3VyZXMgV2l0aCBFYXNlIOKA
lCBSaWNoYXJkIEJvdmVsbF0oaHR0cDovL2phdmFzY3JpcHRpc3NleHkuY29t
L3VuZGVyc3RhbmQtamF2YXNjcmlwdC1jbG9zdXJlcy13aXRoLWVhc2UvKQog
KiDwn5OcIFtVbmRlcnN0YW5kaW5nIEphdmFTY3JpcHQgQ2xvc3VyZXMg4oCU
IENvZGVzbWl0aF0oaHR0cHM6Ly9jb2RlYnVyc3QuaW8vdW5kZXJzdGFuZGlu
Zy1qYXZhc2NyaXB0LWNsb3N1cmVzLWRhNmFhYjMzMDMwMikKICog8J+TnCBb
VW5kZXJzdGFuZCBDbG9zdXJlcyBpbiBKYXZhU2NyaXB0IOKAlCBCcmFuZG9u
IE1vcmVsbGldKGh0dHBzOi8vY29kZWJ1cnN0LmlvL3VuZGVyc3RhbmQtY2xv
c3VyZXMtaW4tamF2YXNjcmlwdC1kMDc4NTJmYTUxZTcpCiAqIPCfk5wgW0Eg
c2ltcGxlIGd1aWRlIHRvIGhlbHAgeW91IHVuZGVyc3RhbmQgY2xvc3VyZXMg
aW4gSmF2YVNjcmlwdCDigJQgUHJhc2hhbnQgUmFtXShodHRwczovL21lZGl1
bS5mcmVlY29kZWNhbXAub3JnL2phdmFzY3JpcHQtY2xvc3VyZXMtc2ltcGxp
ZmllZC1kMGQyM2ZhMDZiYTQpCiAqIPCfk5wgW1VuZGVyc3RhbmRpbmcgSmF2
YVNjcmlwdCBDbG9zdXJlczogQSBQcmFjdGljYWwgQXBwcm9hY2gg4oCUIFBh
dWwgVXBlbmRvXShodHRwczovL3Njb3RjaC5pby90dXRvcmlhbHMvdW5kZXJz
dGFuZGluZy1qYXZhc2NyaXB0LWNsb3N1cmVzLWEtcHJhY3RpY2FsLWFwcHJv
YWNoKQogKiDwn5OcIFtVbmRlcnN0YW5kaW5nIEphdmFTY3JpcHQ6IENsb3N1
cmVzIOKAlCBBbGV4YW5kZXIgS29uZG92XShodHRwczovL2hhY2tlcm5vb24u
Y29tL3VuZGVyc3RhbmRpbmctamF2YXNjcmlwdC1jbG9zdXJlcy00MTg4ZWRm
NWVhMWIpCiAqIPCfk5wgW0hvdyB0byB1c2UgSmF2YVNjcmlwdCBjbG9zdXJl
cyB3aXRoIGNvbmZpZGVuY2Ug4oCUIEzDqW5hIEZhdXJlXShodHRwczovL2hh
Y2tlcm5vb24uY29tL2hvdy10by11c2UtamF2YXNjcmlwdC1jbG9zdXJlcy13
aXRoLWNvbmZpZGVuY2UtODVjZDFmODQxYTZiKQogKiDwn5OcIFtKYXZhU2Ny
aXB0IGNsb3N1cmVzIGJ5IGV4YW1wbGUg4oCUIHR5bGVyXShodHRwczovL2hv
d2Nob28uY29tL2cvbWdlMm1qaTJtdHEvamF2YXNjcmlwdC1jbG9zdXJlcy1i
eS1leGFtcGxlKQogKiDwn5OcIFtKYXZhU2NyaXB04oCK4oCU4oCKQ2xvc3Vy
ZXMgYW5kIFNjb3BlIOKAlCBBbGV4IEFpdGtlbl0oaHR0cHM6Ly9jb2RlYnVy
c3QuaW8vamF2YXNjcmlwdC1jbG9zdXJlcy1hbmQtc2NvcGUtMzc4NGM3NWI5
MjkwKQogKiDwn5OcIFtEaXNjb3ZlciB0aGUgcG93ZXIgb2YgY2xvc3VyZXMg
aW4gSmF2YVNjcmlwdOKAiuKAlOKAikNyaXN0aSBTYWxjZXNjdV0oaHR0cHM6
Ly9tZWRpdW0uZnJlZWNvZGVjYW1wLm9yZy9kaXNjb3Zlci10aGUtcG93ZXIt
b2YtY2xvc3VyZXMtaW4tamF2YXNjcmlwdC01YzQ3MmE3NzY1ZDcpCiAqIPCf
k5wgW1NpbXBsaWZpZWQgSmF2YVNjcmlwdDogR2V0dGluZyBTdGFydGVkIHdp
dGggQ2xvc3VyZXPigIrigJTigIpDb2RlIExpa2UgQSBHaXJsXShodHRwczov
L2NvZGUubGlrZWFnaXJsLmlvL3NpbXBsaWZpZWQtamF2YXNjcmlwdC1nZXR0
aW5nLXN0YXJ0ZWQtd2l0aC1jbG9zdXJlcy1mNDBmNjUzMTdkMDApCiAqIPCf
k5wgW1RoZSBVbHRpbWF0ZSBHdWlkZSB0byBIb2lzdGluZywgU2NvcGVzLCBh
bmQgQ2xvc3VyZXMgaW4gSmF2YVNjcmlwdOKAiuKAlOKAilR5bGVyIE1jR2lu
bmlzXShodHRwczovL3R5bGVybWNnaW5uaXMuY29tL3VsdGltYXRlLWd1aWRl
LXRvLWV4ZWN1dGlvbi1jb250ZXh0cy1ob2lzdGluZy1zY29wZXMtYW5kLWNs
b3N1cmVzLWluLWphdmFzY3JpcHQvKQogKiDwn5OcIFtHZXR0aW5nIENsb3N1
cmXigIrigJTigIpSZWFsTGlmZUpTXShodHRwOi8vcmVhbGxpZmVqcy5jb20v
dGhlLW1lYXQvZ2V0dGluZy1jbG9zdXJlLykKICog8J+TnCBbVW5kZXJzdGFu
ZGluZyBDbG9zdXJlcyBpbiBKYXZhU2NyaXB04oCK4oCU4oCKU3VraGppbmRl
ciBBcm9yYV0oaHR0cHM6Ly9ibG9nLmJpdHNyYy5pby9hLWJlZ2lubmVycy1n
dWlkZS10by1jbG9zdXJlcy1pbi1qYXZhc2NyaXB0LTk3ZDM3MjI4NGRkYSkK
ICog8J+TnCBbQSBiYXNpYyBndWlkZSB0byBDbG9zdXJlcyBpbiBKYXZhU2Ny
aXB04oCK4oCU4oCKUGFyYXRoYW4gVGhpeWFnYWxpbmdhbV0oaHR0cHM6Ly9t
ZWRpdW0uZnJlZWNvZGVjYW1wLm9yZy9hLWJhc2ljLWd1aWRlLXRvLWNsb3N1
cmVzLWluLWphdmFzY3JpcHQtOWZjOGI3ZTM0NjNlKQogKiDwn5OcIFtDbG9z
dXJlczogVXNpbmcgTWVtb2l6YXRpb27igIrigJTigIpCcmlhbiBCYXJib3Vy
XShodHRwczovL2Rldi50by9zdGVlbHZvbHRhZ2UvY2xvc3VyZXMtdXNpbmct
bWVtb2l6YXRpb24tMzU5NykKICog8J+TnCBbQSBCcmllZiBJbnRyb2R1Y3Rp
b24gdG8gQ2xvc3VyZXMgYW5kIExleGljYWwgU2NvcGluZyBpbiBKYXZhU2Ny
aXB04oCK4oCU4oCKQXNodXRvc2ggSyBTaW5naApdKGh0dHBzOi8vbWVkaXVt
LmNvbS9iZXR0ZXItcHJvZ3JhbW1pbmcvYS1icmllZi1pbnRyb2R1Y3Rpb24t
dG8tY2xvc3VyZXMtYW5kLWxleGljYWwtc2NvcGluZy1pbi1qYXZhc2NyaXB0
LThhNTg2NjQ5NjIzMikKICog8J+TnCBbRGVteXN0aWZ5IENsb3N1cmVz4oCK
4oCU4oCKc3RlcmVvYm9vc3Rlcl0oaHR0cHM6Ly9kZXYudG8vc3RlcmVvYm9v
c3Rlci9kZW15c3RpZnktY2xvc3VyZXMtNWc0MikKCiAjIyMgVmlkZW9zCgog
KiDwn46lIFtKYXZhc2NyaXB0IENsb3N1cmUg4oCUIHRlY2hzaXRoXShodHRw
czovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PTcxQXRhSnBKSHcwKQogKiDw
n46lIFtDbG9zdXJlcyDigJQgRnVuIEZ1biBGdW5jdGlvbl0oaHR0cHM6Ly93
d3cueW91dHViZS5jb20vd2F0Y2g/dj1DUXF3VTJJeHUtVSkKICog8J+OpSBb
Q2xvc3VyZXMgaW4gSmF2YVNjcmlwdCDigJQgdGVjaHNpdGhdKGh0dHBzOi8v
d3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9LXhxSm81VlJQNEEpCiAqIPCfjqUg
W0phdmFTY3JpcHQgQ2xvc3VyZXMgMTAxOiBXaGF0IGlzIGEgY2xvc3VyZT8g
4oCUIEphdmFTY3JpcHQgVHV0b3JpYWxzXShodHRwczovL3d3dy55b3V0dWJl
LmNvbS93YXRjaD92PXlpRWVpTU4yS2hzKQogKiDwn46lIFtDbG9zdXJlcyDi
gJQgZnJlZUNvZGVDYW1wXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRj
aD92PTFKc0p4MXgzNWMwKQogKiDwn46lIFtKYXZhU2NyaXB0IENsb3N1cmVz
IOKAlCBDb2RlV29ya3JdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNo
P3Y9LXJMckdBWEs4V0UpCgoqKlvirIYgQmFjayB0byBUb3BdKCN0YWJsZS1v
Zi1jb250ZW50cykqKgoKLS0tCgojIyAyMi4gSGlnaCBPcmRlciBGdW5jdGlv
bnMKCiMjIyBBcnRpY2xlcwoKICog8J+TnCBbSGlnaGVyLU9yZGVyIEZ1bmN0
aW9ucyDigJQgRWxvcXVlbnQgSmF2YVNjcmlwdCBbQm9va11dKGh0dHBzOi8v
ZWxvcXVlbnRqYXZhc2NyaXB0Lm5ldC8wNV9oaWdoZXJfb3JkZXIuaHRtbCkK
ICog8J+TnCBbSGlnaGVyLU9yZGVyIEZ1bmN0aW9ucyBpbiBKYXZhU2NyaXB0
IOKAlCBNLiBEYXZpZCBHcmVlbl0oaHR0cHM6Ly93d3cuc2l0ZXBvaW50LmNv
bS9oaWdoZXItb3JkZXItZnVuY3Rpb25zLWphdmFzY3JpcHQvKQogKiDwn5Oc
IFtIaWdoZXIgT3JkZXIgRnVuY3Rpb25zOiBVc2luZyBGaWx0ZXIsIE1hcCBh
bmQgUmVkdWNlIGZvciBNb3JlIE1haW50YWluYWJsZSBDb2RlIOKAlCBHdWlk
byBTY2htaXR6XShodHRwczovL21lZGl1bS5mcmVlY29kZWNhbXAub3JnL2hp
Z2hlci1vcmRlci1mdW5jdGlvbnMtaW4tamF2YXNjcmlwdC1kOTEwMWY5Y2Y1
MjgpCiAqIPCfk5wgW0ZpcnN0LWNsYXNzIGFuZCBIaWdoZXIgT3JkZXIgRnVu
Y3Rpb25zOiBFZmZlY3RpdmUgRnVuY3Rpb25hbCBKYXZhU2NyaXB0IOKAlCBI
dWdvIERpIEZyYW5jZXNjb10oaHR0cHM6Ly9oYWNrZXJub29uLmNvbS9lZmZl
Y3RpdmUtZnVuY3Rpb25hbC1qYXZhc2NyaXB0LWZpcnN0LWNsYXNzLWFuZC1o
aWdoZXItb3JkZXItZnVuY3Rpb25zLTcxM2ZkZThkZjUwYSkKICog8J+TnCBb
SGlnaGVyIE9yZGVyIEZ1bmN0aW9ucyBpbiBKYXZhU2NyaXB0IOKAlCBKb2hu
IEhhbm5haF0oaHR0cHM6Ly93d3cubHVsbGFib3QuY29tL2FydGljbGVzL2hp
Z2hlci1vcmRlci1mdW5jdGlvbnMtaW4tamF2YXNjcmlwdCkKICog8J+TnCBb
SGlnaGVyLW9yZGVyIEZ1bmN0aW9ucyDigJQgUmljaGFyZCBCb3ZlbGxdKGh0
dHA6Ly9qYXZhc2NyaXB0aXNzZXh5LmNvbS90YWcvaGlnaGVyLW9yZGVyLWZ1
bmN0aW9ucy8pCiAqIPCfk5wgW0hpZ2hlciBPcmRlciBGdW5jdGlvbnMgaW4g
SmF2YVNjcmlwdCDigJQgWnNvbHQgTmFneV0oaHR0cDovL3d3dy56c29sdG5h
Z3kuZXUvaGlnaGVyLW9yZGVyLWZ1bmN0aW9ucy1pbi1qYXZhc2NyaXB0LykK
ICog8J+TnCBbRnVuIFdpdGggSGlnaGVyIE9yZGVyIEZ1bmN0aW9ucyBJbiBK
YXZhU2NyaXB0IOKAlCBEZXJpY2tdKGh0dHBzOi8vZGVyaWNrYmFpbGV5LmNv
bS8yMDE1LzEwLzIxL2Z1bi13aXRoLWhpZ2hlci1vcmRlci1mdW5jdGlvbnMt
aW4tamF2YXNjcmlwdC8pCiAqIPCfk5wgW0p1c3QgYSByZW1pbmRlciBvbiBo
b3cgdG8gdXNlIGhpZ2ggb3JkZXIgZnVuY3Rpb25zIOKAlCBQZWRybyBGaWxo
b10oaHR0cHM6Ly9naXRodWIuY29tL3BlZHJvYXBmaWxoby9oaWdoLW9yZGVy
LWZ1bmN0aW9ucykKICog8J+TnCBbVW5kZXJzdGFuZGluZyBIaWdoZXItT3Jk
ZXIgRnVuY3Rpb25zIGluIEphdmFTY3JpcHQg4oCUIFN1a2hqaW5kZXIgQXJv
cmFdKGh0dHBzOi8vYmxvZy5iaXRzcmMuaW8vdW5kZXJzdGFuZGluZy1oaWdo
ZXItb3JkZXItZnVuY3Rpb25zLWluLWphdmFzY3JpcHQtNzU0NjE4MDNiYWQp
CgogIyMjIFZpZGVvcwoKICog8J+OpSBbSmF2YVNjcmlwdCBIaWdoZXIgT3Jk
ZXIgRnVuY3Rpb25zICYgQXJyYXlzIOKAlCBUcmF2ZXJzeSBNZWRpYV0oaHR0
cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1yUmdEMXlWd0l2RSkKICog
8J+OpSBbSGlnaGVyIE9yZGVyIEZ1bmN0aW9ucyDigJQgRnVuIEZ1biBGdW5j
dGlvbl0oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1CTVVpRk1a
cjd2aykKICog8J+OpSBbSGlnaGVyIE9yZGVyIEZ1bmN0aW9ucyBpbiBKYXZh
c2NyaXB0IOKAlCBSYWphIFlvZ2FuXShodHRwczovL3d3dy55b3V0dWJlLmNv
bS93YXRjaD92PWRUbHBZbm1CVzlJKQogKiDwn46lIFtIaWdoZXIgT3JkZXIg
SXRlcmF0b3JzIGluIEphdmFTY3JpcHQg4oCUIEZ1biBGdW4gRnVuY3Rpb25d
KGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9R1lSTU5wMVNLWEEp
CiAqIPCfjqUgW0hpZ2hlciBPcmRlciBGdW5jdGlvbnMgaW4gSmF2YVNjcmlw
dCDigJQgVGhlIENvZGluZyBUcmFpbl0oaHR0cHM6Ly93d3cueW91dHViZS5j
b20vd2F0Y2g/dj1INGF3UHN5dWdTMCkKICog8J+OpSBbUGFydCAxOiBBbiBJ
bnRyb2R1Y3Rpb24gdG8gQ2FsbGJhY2tzIGFuZCBIaWdoZXIgT3JkZXIgRnVu
Y3Rpb25zIC0gQ29kZXNtaXRoXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93
YXRjaD92PTdFOGN0b21QUUp3KQogKiDwn46lIFtQYXJ0IDI6IFVuZGVyc3Rh
bmRpbmcgV2h5IFdlIE5lZWQgSGlnaGVyIE9yZGVyIEZ1bmN0aW9ucyAtIENv
ZGVzbWl0aF0oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj0yOE1Y
emlEWmtFNCkKCioqW+KshiBCYWNrIHRvIFRvcF0oI3RhYmxlLW9mLWNvbnRl
bnRzKSoqCgotLS0KCiMjIDIzLiBSZWN1cnNpb24KCiMjIyBBcnRpY2xlcwoK
ICog8J+TnCBbUmVjdXJzaW9uIGluIEphdmFTY3JpcHQg4oCUIEtldmluIEVu
bmlzXShodHRwczovL21lZGl1bS5mcmVlY29kZWNhbXAub3JnL3JlY3Vyc2lv
bi1pbi1qYXZhc2NyaXB0LTE2MDgwMzJjN2ExZikKICog8J+TnCBbVW5kZXJz
dGFuZGluZyBSZWN1cnNpb24gaW4gSmF2YVNjcmlwdCDigJQgWmFrIEZyaXNj
aF0oaHR0cHM6Ly9tZWRpdW0uY29tL0B6ZnJpc2NoL3VuZGVyc3RhbmRpbmct
cmVjdXJzaW9uLWluLWphdmFzY3JpcHQtOTkyZTk2NDQ5ZTAzKQogKiDwn5Oc
IFtMZWFybiBhbmQgVW5kZXJzdGFuZCBSZWN1cnNpb24gaW4gSmF2YVNjcmlw
dCDigJQgQnJhbmRvbiBNb3JlbGxpXShodHRwczovL2NvZGVidXJzdC5pby9s
ZWFybi1hbmQtdW5kZXJzdGFuZC1yZWN1cnNpb24taW4tamF2YXNjcmlwdC1i
NTg4MjE4ZTg3ZWEpCiAqIPCfk5wgW1JlY3Vyc2lvbiBpbiBGdW5jdGlvbmFs
IEphdmFTY3JpcHQg4oCUIE0uIERhdmlkIEdyZWVuXShodHRwczovL3d3dy5z
aXRlcG9pbnQuY29tL3JlY3Vyc2lvbi1mdW5jdGlvbmFsLWphdmFzY3JpcHQv
KQogKiDwn5OcIFtQcm9ncmFtbWluZyB3aXRoIEpTOiBSZWN1cnNpb24g4oCU
IEFsZXhhbmRlciBLb25kb3ZdKGh0dHBzOi8vaGFja2Vybm9vbi5jb20vcHJv
Z3JhbW1pbmctd2l0aC1qcy1yZWN1cnNpb24tMzEzNzFlMmJmODA4KQogKiDw
n5OcIFtBbm9ueW1vdXMgUmVjdXJzaW9uIGluIEphdmFTY3JpcHQg4oCUIHNp
bW9dKGh0dHBzOi8vZGV2LnRvL3NpbW92L2Fub255bW91cy1yZWN1cnNpb24t
aW4tamF2YXNjcmlwdCkKICog8J+TnCBbUmVjdXJzaW9uLCBpdGVyYXRpb24g
YW5kIHRhaWwgY2FsbHMgaW4gSlMg4oCUIGxvdmVyYWpvZWxdKGh0dHA6Ly93
d3cuanN0aXBzLmNvL2VuL2phdmFzY3JpcHQvcmVjdXJzaW9uLWl0ZXJhdGlv
bi1hbmQtdGFpbC1jYWxscy1pbi1qcy8pCiAqIPCfk5wgW1VuZGVyc3RhbmRp
bmcgUmVjdXJzaW9uIGluIEphdmFTY3JpcHQgd2l0aCBDb25maWRlbmNlIOKA
lCBKYXldKGh0dHBzOi8vd3d3LnRoZWNvZGluZ2RlbGlnaHQuY29tL3VuZGVy
c3RhbmRpbmctcmVjdXJzaW9uLWphdmFzY3JpcHQvKQogKiDwn5OcIFtJbnRy
byB0byBSZWN1cnNpb24g4oCUIEJyYWQgTmV3bWFuXShodHRwczovL21lZGl1
bS5jb20vQG5ld21hbmJyYWRtL2ludHJvLXRvLXJlY3Vyc2lvbi05ODRhOGJk
NTBmNGIpCiAqIPCfk5wgW0FjY2lvIFJlY3Vyc2lvbiE6IFlvdXIgTmV3IEZh
dm9yaXRlIEphdmFTY3JpcHQgU3BlbGwg4oCUIExlYW5uZSBDYWJleV0oaHR0
cHM6Ly9tZWRpdW0uY29tL2RhdGFkcml2ZW5pbnZlc3Rvci9hY2Npby1yZWN1
cnNpb24teW91ci1uZXctZmF2b3JpdGUtamF2YXNjcmlwdC1zcGVsbC03ZTEw
ZDMxMjVmYjMpCgogIyMjIFZpZGVvcwoKICog8J+OpSBbUmVjdXJzaW9uIElu
IEphdmFTY3JpcHQg4oCUIHRlY2hzaXRoXShodHRwczovL3d3dy55b3V0dWJl
LmNvbS93YXRjaD92PVZ0RzBXQVV2cTJ3KQogKiDwn46lIFtSZWN1cnNpb24g
4oCUIEZ1biBGdW4gRnVuY3Rpb25dKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29t
L3dhdGNoP3Y9azctTjhSMC1LWTQpCiAqIPCfjqUgW1JlY3Vyc2lvbiBhbmQg
UmVjdXJzaXZlIEZ1bmN0aW9ucyDigJQgSGV4bGV0XShodHRwczovL3d3dy55
b3V0dWJlLmNvbS93YXRjaD92PXZMaEh5R1RrakNzKQogKiDwn46lIFtSZWN1
cnNpb246IFJlY3Vyc2lvbigpIOKAlCBKUyBNb250aGx5IOKAlCBMdWNhcyBk
YSBDb3N0YV0oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1rR1hW
c2Q4cEJMdykKICog8J+OpSBbUmVjdXJzaXZlIEZ1bmN0aW9uIGluIEphdmFT
Y3JpcHQg4oCUIGt1ZHZlbmthdF0oaHR0cHM6Ly93d3cueW91dHViZS5jb20v
d2F0Y2g/dj11eWpzUjllTlRJdykKICog8J+OpSBbV2hhdCBvbiBFYXJ0aCBp
cyBSZWN1cnNpb24/IOKAlCBDb21wdXRlcnBoaWxlXShodHRwczovL3d3dy55
b3V0dWJlLmNvbS93YXRjaD92PU12OU5FWFgxVkhjKQogKiDwn46lIFtKYXZh
c2NyaXB0IFR1dG9yaWFsIDM0OiBJbnRyb2R1Y3Rpb24gVG8gUmVjdXJzaW9u
IOKAlCBjb2RlZGFtbl0oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/
dj05Tk81ZFhTbGJ2OCkKICog8J+OpSBbUmVjdXJzaW9uLCBJdGVyYXRpb24s
IGFuZCBKYXZhU2NyaXB0OiBBIExvdmUgU3RvcnkgfCBKU0hlcm9lcyAyMDE4
IOKAlCBBbmphbmEgVmFraWxdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dh
dGNoP3Y9Rm1pUXI0bmZvUFEpCgoqKlvirIYgQmFjayB0byBUb3BdKCN0YWJs
ZS1vZi1jb250ZW50cykqKgoKLS0tCgojIyAyNC4gQ29sbGVjdGlvbnMgYW5k
IEdlbmVyYXRvcnMKCiMjIyBBcnRpY2xlcwoKICog8J+TnCBbRVM2IEluIERl
cHRoOiBDb2xsZWN0aW9ucyDigJQgSmFzb24gT3JlbmRvcmZmXShodHRwczov
L2hhY2tzLm1vemlsbGEub3JnLzIwMTUvMDYvZXM2LWluLWRlcHRoLWNvbGxl
Y3Rpb25zLykKICog8J+TnCBbRVM2IENvbGxlY3Rpb25zOiBVc2luZyBNYXAs
IFNldCwgV2Vha01hcCwgV2Vha1NldCDigJQgS3lsZSBQZW5uZWxsXShodHRw
czovL3d3dy5zaXRlcG9pbnQuY29tL2VzNi1jb2xsZWN0aW9ucy1tYXAtc2V0
LXdlYWttYXAtd2Vha3NldC8pCiAqIPCfk5wgW0VTNiBXZWFrTWFwcywgU2V0
cywgYW5kIFdlYWtTZXRzIGluIERlcHRoIOKAlCBOaWNvbMOhcyBCZXZhY3F1
YV0oaHR0cHM6Ly9wb255Zm9vLmNvbS9hcnRpY2xlcy9lczYtd2Vha21hcHMt
c2V0cy1hbmQtd2Vha3NldHMtaW4tZGVwdGgpCiAqIPCfk5wgW0ludHJvZHVj
dGlvbiB0byBTZXRzIGluIEphdmFTY3JpcHQg4oCUIEFsbGlnYXRvci5pb10o
aHR0cHM6Ly9hbGxpZ2F0b3IuaW8vanMvc2V0cy1pbnRyb2R1Y3Rpb24vKQog
KiDwn5OcIFtJbnRyb2R1Y3Rpb24gdG8gTWFwcyBpbiBKYXZhU2NyaXB0IOKA
lCBBbGxpZ2F0b3IuaW9dKGh0dHBzOi8vYWxsaWdhdG9yLmlvL2pzL21hcHMt
aW50cm9kdWN0aW9uLykKICog8J+TnCBbTWFwLCBTZXQsIFdlYWtNYXAgYW5k
IFdlYWtTZXQg4oCUIEphdmFTY3JpcHQuSW5mb10oaHR0cHM6Ly9qYXZhc2Ny
aXB0LmluZm8vbWFwLXNldC13ZWFrbWFwLXdlYWtzZXQpCiAqIPCfk5wgW01h
cHMgaW4gRVM2IC0gQSBRdWljayBHdWlkZSDigJQgQmVuIE1pbGRyZW5dKGh0
dHBzOi8vZGV2LnRvL21pbGRyZW5iZW4vbWFwcy1pbi1lczYtLS1hLXF1aWNr
LWd1aWRlLTM1cGspCiAqIPCfk5wgW0VTNiDigJQgU2V0IHZzIEFycmF5IOKA
lCBXaGF0IGFuZCB3aGVuPyDigJQgTWF5YSBTaGF2aW5dKGh0dHBzOi8vbWVk
aXVtLmNvbS9mcm9udC1lbmQtaGFja2luZy9lczYtc2V0LXZzLWFycmF5LXdo
YXQtYW5kLXdoZW4tZWZjMDU1NjU1ZTFhKQogKiDwn5OcIFtFUzYg4oCUIE1h
cCB2cyBPYmplY3Qg4oCUIFdoYXQgYW5kIHdoZW4/IOKAlCBNYXlhIFNoYXZp
bl0oaHR0cHM6Ly9tZWRpdW0uY29tL2Zyb250LWVuZC1oYWNraW5nL2VzNi1t
YXAtdnMtb2JqZWN0LXdoYXQtYW5kLXdoZW4tYjgwNjIxOTMyMzczKQogKiDw
n5OcIFtFUzY6IFdvcmtpbmcgd2l0aCBTZXRzIGluIEphdmFTY3JpcHQg4oCU
IERlYWQgQ29kZSBSaXNpbmddKGh0dHA6Ly93d3cuZGVhZGNvZGVyaXNpbmcu
Y29tL2VzNi13b3JraW5nLXdpdGgtc2V0cy1pbi1qYXZhc2NyaXB0LykKICog
8J+TnCBbQXJyYXkgdnMgU2V0IHZzIE1hcCB2cyBPYmplY3Qg4oCUIFJlYWwt
dGltZSB1c2UgY2FzZXMgaW4gSmF2YXNjcmlwdCAoRVM2L0VTNykg4oCUIFJh
amVzaCBCYWJ1XShodHRwczovL2NvZGVidXJzdC5pby9hcnJheS12cy1zZXQt
dnMtbWFwLXZzLW9iamVjdC1yZWFsLXRpbWUtdXNlLWNhc2VzLWluLWphdmFz
Y3JpcHQtZXM2LTQ3ZWUzMjk1MzI5YikKICog8J+TnCBbSG93IHRvIGNyZWF0
ZSBhbiBhcnJheSBvZiB1bmlxdWUgdmFsdWVzIGluIEphdmFTY3JpcHQgdXNp
bmcgU2V0cyDigJQgQ2xhaXJlIFBhcmtlci1Kb25lc10oaHR0cHM6Ly9kZXYu
dG8vY2xhaXJlcGFya2VyL2hvdy10by1jcmVhdGUtYW4tYXJyYXktb2YtdW5p
cXVlLXZhbHVlcy1pbi1qYXZhc2NyaXB0LXVzaW5nLXNldHMtNWRnNikKICog
8J+TnCBbV2hhdCBZb3UgU2hvdWxkIEtub3cgQWJvdXQgRVM2IE1hcHMg4oCU
IEp1c3QgQ2hyaXNdKGh0dHBzOi8vaGFja2Vybm9vbi5jb20vd2hhdC15b3Ut
c2hvdWxkLWtub3ctYWJvdXQtZXM2LW1hcHMtZGM2NmFmNmI5YTFlKQogKiDw
n5OcIFtFUzYgTWFwcyBpbiBEZXB0aCDigJQgTmljb2zDoXMgQmV2YWNxdWFd
KGh0dHBzOi8vcG9ueWZvby5jb20vYXJ0aWNsZXMvZXM2LW1hcHMtaW4tZGVw
dGgpCiAqIPCfk5wgW0dlbmVyYXRvciDigJQgTUROIHdlYiBkb2NzXShodHRw
czovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZh
U2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9HZW5lcmF0b3IpCiAq
IPCfk5wgW1doYXQgYXJlIEphdmFTY3JpcHQgR2VuZXJhdG9ycyBhbmQgaG93
IHRvIHVzZSB0aGVtIOKAlCBWbGFkaXNsYXYgU3RlcGFub3ZdKGh0dHBzOi8v
Y29kZWJ1cnN0LmlvL3doYXQtYXJlLWphdmFzY3JpcHQtZ2VuZXJhdG9ycy1h
bmQtaG93LXRvLXVzZS10aGVtLWM2ZjI3MTNmZDEyZSkKICog8J+TnCBbVW5k
ZXJzdGFuZGluZyBKYXZhU2NyaXB0IEdlbmVyYXRvcnMgV2l0aCBFeGFtcGxl
cyAg4oCUIEFyZmF0IFNhbG1hbl0oaHR0cHM6Ly9jb2RlYnVyc3QuaW8vdW5k
ZXJzdGFuZGluZy1nZW5lcmF0b3JzLWluLWVzNi1qYXZhc2NyaXB0LXdpdGgt
ZXhhbXBsZXMtNjcyODgzNDAxNmQ1KQogKiDwn5OcIFtUaGUgQmFzaWNzIG9m
IEVTNiBHZW5lcmF0b3JzIOKAlCBLeWxlIFNpbXBzb25dKGh0dHBzOi8vZGF2
aWR3YWxzaC5uYW1lL2VzNi1nZW5lcmF0b3JzKQogKiDwn5OcIFtIZXJlJ3Mg
ZXZlcnl0aGluZyB5b3UnZCB3YW50IHRvIGtub3cgYWJvdXQgRVMyMDE1KyBn
ZW5lcmF0b3JzIOKAlCBMdWNhcyBDaGVuXShodHRwczovL2Rldi50by9wYXJr
cm9vbHVjYXMvaGVyZS1zLWV2ZXJ5dGhpbmcteW91LWQtd2FudC10by1rbm93
LWFib3V0LWVzMjAxNS1nZW5lcmF0b3JzLTEzYW4pCgoKCiAjIyMgVmlkZW9z
CgogKiDwn46lIFtKYXZhU2NyaXB0IEVTNiAvIEVTMjAxNSBTZXQsIE1hcCwg
V2Vha1NldCBhbmQgV2Vha01hcCDigJQgVHJhdmVyc3kgTWVkaWFdKGh0dHBz
Oi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9eWNvaFlTeDVoOXcpCiAqIPCf
jqUgW1RoZSBEaWZmZXJlbmNlcyBiZXR3ZWVuIEVTNiBNYXBzIGFuZCBTZXRz
IOKAlCBTdGV2ZSBHcmlmZml0aF0oaHR0cHM6Ly93d3cueW91dHViZS5jb20v
d2F0Y2g/dj1tNGFiSUNybGRRSSkKICog8J+OpSBbSmF2YXNjcmlwdCBHZW5l
cmF0b3JzIC0gVEhFWSBDSEFOR0UgRVZFUllUSElORyAtIEVTNiBHZW5lcmF0
b3JzIEhhcm1vbnkgR2VuZXJhdG9ycyDigJQgTGVhcm5Db2RlLmFjYWRlbXld
KGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9UU8wN1RIZExXUW8p
CgoqKlvirIYgQmFjayB0byBUb3BdKCN0YWJsZS1vZi1jb250ZW50cykqKgoK
LS0tCgojIyAyNS4gUHJvbWlzZXMKCiMjIyBBcnRpY2xlcwoKICog8J+TnCBb
UHJvbWlzZSDigJQgTUROXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9y
Zy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxf
T2JqZWN0cy9Qcm9taXNlKQogKiDwn5OcIFtKYXZhU2NyaXB0IFByb21pc2Vz
IGZvciBEdW1taWVzIOKAlSBKZWNlbHluIFllZW5dKGh0dHBzOi8vc2NvdGNo
LmlvL3R1dG9yaWFscy9qYXZhc2NyaXB0LXByb21pc2VzLWZvci1kdW1taWVz
KQogKiDwn5OcIFtVbmRlcnN0YW5kaW5nIHByb21pc2VzIGluIEphdmFTY3Jp
cHQg4oCUIEdva3VsIE4gS10oaHR0cHM6Ly9oYWNrZXJub29uLmNvbS91bmRl
cnN0YW5kaW5nLXByb21pc2VzLWluLWphdmFzY3JpcHQtMTNkOTlkZjA2N2Mx
KQogKiDwn5OcIFtNYXN0ZXIgdGhlIEphdmFTY3JpcHQgSW50ZXJ2aWV3OiBX
aGF0IGlzIGEgUHJvbWlzZT8g4oCUIEVyaWMgRWxsaW90dF0oaHR0cHM6Ly9t
ZWRpdW0uY29tL2phdmFzY3JpcHQtc2NlbmUvbWFzdGVyLXRoZS1qYXZhc2Ny
aXB0LWludGVydmlldy13aGF0LWlzLWEtcHJvbWlzZS0yN2ZjNzFlNzcyNjEp
CiAqIPCfk5wgW0FuIE92ZXJ2aWV3IG9mIEphdmFTY3JpcHQgUHJvbWlzZXMg
4oCUIFNhbmRlZXAgUGFuZGFdKGh0dHBzOi8vd3d3LnNpdGVwb2ludC5jb20v
b3ZlcnZpZXctamF2YXNjcmlwdC1wcm9taXNlcy8pCiAqIPCfk5wgW0hvdyB0
byB1c2UgUHJvbWlzZXMgaW4gSmF2YVNjcmlwdCDigJQgUHJhc2hhbnQgUmFt
XShodHRwczovL21lZGl1bS5mcmVlY29kZWNhbXAub3JnL3Byb21pc2VzLWlu
LWphdmFzY3JpcHQtZXhwbGFpbmVkLTI3N2I5ODg1MGRlKQogKiDwn5OcIFtJ
bXBsZW1lbnRpbmcgUHJvbWlzZXMgSW4gSmF2YVNjcmlwdCDigJQgTWFjaWVq
IENpZXNsYXJdKGh0dHBzOi8vbWVkaXVtLmZyZWVjb2RlY2FtcC5vcmcvaG93
LXRvLWltcGxlbWVudC1wcm9taXNlcy1pbi1qYXZhc2NyaXB0LTFjZTI2ODBh
N2Y1MSkKICog8J+TnCBbSmF2YVNjcmlwdDogUHJvbWlzZXMgZXhwbGFpbmVk
IHdpdGggc2ltcGxlIHJlYWwgbGlmZSBhbmFsb2dpZXMg4oCUIFNocnV0aSBL
YXBvb3JdKGh0dHBzOi8vY29kZWJ1cnN0LmlvL2phdmFzY3JpcHQtcHJvbWlz
ZXMtZXhwbGFpbmVkLXdpdGgtc2ltcGxlLXJlYWwtbGlmZS1hbmFsb2dpZXMt
ZGQ2OTA4MDkyMTM4KQogKiDwn5OcIFtQcm9taXNlcyBmb3IgQXN5bmNocm9u
b3VzIFByb2dyYW1taW5nIOKAlCBFeHBsb3JpbmcgSlNdKGh0dHA6Ly9leHBs
b3Jpbmdqcy5jb20vZXM2L2NoX3Byb21pc2VzLmh0bWwpCiAqIPCfk5wgW0ph
dmFTY3JpcHQgUHJvbWlzZXMgRXhwbGFpbmVkIEJ5IEdhbWJsaW5nIEF0IEEg
Q2FzaW5vIOKAlCBLZXZpbiBLb25vbmVua29dKGh0dHBzOi8vYmxvZy5jb2Rl
YW5hbG9naWVzLmNvbS8yMDE4LzA4LzI2L2phdmFzY3JpcHQtcHJvbWlzZXMt
ZXhwbGFpbmVkLWJ5LWdhbWJsaW5nLWF0LWEtY2FzaW5vLykKICog8J+TnCBb
RVM2IFByb21pc2VzOiBQYXR0ZXJucyBhbmQgQW50aS1QYXR0ZXJucyDigJQg
Qm9iYnkgQnJlbm5hbl0oaHR0cHM6Ly9tZWRpdW0uY29tL2RhdGFmaXJlLWlv
L2VzNi1wcm9taXNlcy1wYXR0ZXJucy1hbmQtYW50aS1wYXR0ZXJucy1iYmIy
MWE1ZDA5MTgpCiAqIPCfk5wgW0EgU2ltcGxlIEd1aWRlIHRvIEVTNiBQcm9t
aXNlcyDigJQgQnJhbmRvbiBNb3JlbGxpXShodHRwczovL2NvZGVidXJzdC5p
by9hLXNpbXBsZS1ndWlkZS10by1lczYtcHJvbWlzZXMtZDcxYmFjZDJlMTNh
KQogKiDwn5OcIFtUaGUgRVM2IFByb21pc2VzIOKAlCBNYW5vaiBTaW5naCBO
ZWdpXShodHRwczovL2NvZGVidXJzdC5pby90aGUtZXM2LXByb21pc2VzLTg3
YTk3OWFiMjdlNCkKICog8J+TnCBbRVM2IFByb21pc2VzIGluIERlcHRoIOKA
lCBOaWNvbMOhcyBCZXZhY3F1YV0oaHR0cHM6Ly9wb255Zm9vLmNvbS9hcnRp
Y2xlcy9lczYtcHJvbWlzZXMtaW4tZGVwdGgpCiAqIPCfk5wgW1BsYXlpbmcg
d2l0aCBKYXZhc2NyaXB0IFByb21pc2VzOiBBIENvbXByZWhlbnNpdmUgQXBw
cm9hY2gg4oCUIFJhamVzaCBCYWJ1XShodHRwczovL2NvZGVidXJzdC5pby9w
bGF5aW5nLXdpdGgtamF2YXNjcmlwdC1wcm9taXNlcy1hLWNvbXByZWhlbnNp
dmUtYXBwcm9hY2gtMjVhYjc1MmM3OGMzKQogKiDwn5OcIFtIb3cgdG8gV3Jp
dGUgYSBKYXZhU2NyaXB0IFByb21pc2Ug4oCUIEJyYW5kb24gV296bmlld2lj
el0oaHR0cHM6Ly9tZWRpdW0uZnJlZWNvZGVjYW1wLm9yZy9ob3ctdG8td3Jp
dGUtYS1qYXZhc2NyaXB0LXByb21pc2UtNGVkOGQ0NDI5MmI4KQogKiDwn5Oc
IFtBIENvZGluZyBXcml0ZXLigJlzIEd1aWRlOiBBbiBJbnRyb2R1Y3Rpb24g
VG8gRVM2IFByb21pc2VzIOKAlCBBbmRyZXcgTHldKGh0dHBzOi8vbWVkaXVt
LmNvbS9AYW5kcmV3bHkwNy9hLWNvZGluZy13cml0ZXJzLWd1aWRlLWFuLWlu
dHJvZHVjdGlvbi10by1lczYtcHJvbWlzZXMtOWZmOWY5ZTg4ZjZjKQogKiDw
n5OcIFtBc3luY2hyb25vdXMgSmF2YVNjcmlwdCB8IENhbGxiYWNrcyB8IENs
b3N1cmVzIHwgUHJvbWlzZXMg4oCUIEZ1bGwgU3RhY2sgR2Vla10oaHR0cHM6
Ly9kZXYudG8vZnVsbF9zdGFja2dlZWsvYXN5bmNocm9ub3VzLWphdmFzY3Jp
cHQtY2FsbGJhY2tzLWNsb3N1cmVzLXByb21pc2VzLTM1M2gpCiAqIPCfk5wg
W1VuZGVyc3RhbmRpbmcgUHJvbWlzZXMgaW4gSmF2YVNjcmlwdCDigJQgQ2hy
aXMgTm9yaW5nXShodHRwczovL2Rldi50by9pdG5leHQvcmV2ZXJzZS1lbmdp
bmVlcmluZy11bmRlcnN0YW5kLXByb21pc2VzLTFqZmMpCiAqIPCfk5wgW0Nv
bnZlcnRpbmcgY2FsbGJhY2tzIHRvIHByb21pc2VzIOKAlCBaZWxsIExpZXdd
KGh0dHBzOi8vZGV2LnRvL3plbGx3ay9jb252ZXJ0aW5nLWNhbGxiYWNrcy10
by1wcm9taXNlcy1uaG4pCiAqIPCfk5wgW0phdmFTY3JpcHQgUHJvbWlzZXM6
IFplcm8gVG8gSGVybyBQbHVzIENoZWF0IFNoZWV0IOKAlCBKb3NodWEgU2F1
bmRlcnNdKGh0dHBzOi8vbWVkaXVtLmNvbS9kYWlseWpzL2phdmFzY3JpcHQt
cHJvbWlzZXMtemVyby10by1oZXJvLXBsdXMtY2hlYXQtc2hlZXQtNjRkNzUw
NTFjZmZhKQoKICMjIyBWaWRlb3MKCiAqIPCfjqUgW0xldCdzIExlYXJuIEVT
NiAtIFByb21pc2VzIOKAlCBSeWFuIENocmlzdGlhbmldKGh0dHBzOi8vd3d3
LnlvdXR1YmUuY29tL3dhdGNoP3Y9dlEzTW9YbktmdVEpCiAqIPCfjqUgW0ph
dmFTY3JpcHQgRVM2IC8gRVMyMDE1IFByb21pc2VzIOKAlCBUcmF2ZXJzeSBN
ZWRpYV0oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1YSkVIdUJa
UTVkVSkKICog8J+OpSBbUHJvbWlzZXMg4oCUIEZ1biBGdW4gRnVuY3Rpb25d
KGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9MmQ3czNzcFdBem8p
CiAqIPCfjqUgW0Vycm9yIEhhbmRsaW5nIFByb21pc2VzIGluIEphdmFTY3Jp
cHQg4oCUIEZ1biBGdW4gRnVuY3Rpb25dKGh0dHBzOi8vd3d3LnlvdXR1YmUu
Y29tL3dhdGNoP3Y9ZjhJZ2RuWUl3T1UpCiAqIPCfjqUgW1Byb21pc2VzIFBh
cnQgMSAtIFRvcGljcyBvZiBKYXZhU2NyaXB0L0VTNiDigJQgVGhlIENvZGlu
ZyBUcmFpbl0oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1RTzRO
WGhXb19OTSkKCioqW+KshiBCYWNrIHRvIFRvcF0oI3RhYmxlLW9mLWNvbnRl
bnRzKSoqCgotLS0KCiMjIDI2LiBhc3luYy9hd2FpdAoKIyMjIEFydGljbGVz
CgogKiDwn5OcIFthc3luYy9hd2FpdCDigJQgSmF2YVNjcmlwdC5JbmZvXSho
dHRwczovL2phdmFzY3JpcHQuaW5mby9hc3luYy1hd2FpdCkKICog8J+TnCBb
VW5kZXJzdGFuZGluZyBhc3luYy9hd2FpdCBpbiBKYXZhc2NyaXB0IOKAlCBH
b2t1bCBOIEtdKGh0dHBzOi8vaGFja2Vybm9vbi5jb20vdW5kZXJzdGFuZGlu
Zy1hc3luYy1hd2FpdC1pbi1qYXZhc2NyaXB0LTFkODFiYjA3OWIyYykKICog
8J+TnCBbQXN5bmNocm9ub3VzIFByb2dyYW1taW5nIOKAlCBFbG9xdWVudCBK
YXZhU2NyaXB0XShodHRwczovL2Vsb3F1ZW50amF2YXNjcmlwdC5uZXQvMTFf
YXN5bmMuaHRtbCkKICog8J+TnCBbRXhwbG9yaW5nIEFzeW5jL0F3YWl0IEZ1
bmN0aW9ucyBpbiBKYXZhU2NyaXB0IOKAlCBBbGxpZ2F0b3IuaW9dKGh0dHBz
Oi8vYWxsaWdhdG9yLmlvL2pzL2FzeW5jLWZ1bmN0aW9ucy8pCiAqIPCfk5wg
W0FzeW5jaHJvbm91cyBKYXZhc2NyaXB0IHVzaW5nIGFzeW5jL2F3YWl0IOKA
lCBKb3kgV2FydWd1XShodHRwczovL3Njb3RjaC5pby90dXRvcmlhbHMvYXN5
bmNocm9ub3VzLWphdmFzY3JpcHQtdXNpbmctYXN5bmMtYXdhaXQpCiAqIPCf
k5wgW01vZGVybiBBc3luY2hyb25vdXMgSmF2YVNjcmlwdCB3aXRoIGFzeW5j
L2F3YWl0IOKAlCBGbGF2aW8gQ29wZXNdKGh0dHBzOi8vZmxhdmlvY29wZXMu
Y29tL2phdmFzY3JpcHQtYXN5bmMtYXdhaXQvKQogKiDwn5OcIFtBc3luY2hy
b25vdXMgSmF2YVNjcmlwdDogRnJvbSBDYWxsYmFjayBIZWxsIHRvIEFzeW5j
IGFuZCBBd2FpdCDigJQgRGVtaXIgU2VsbWFub3ZpY10oaHR0cHM6Ly93d3cu
dG9wdGFsLmNvbS9qYXZhc2NyaXB0L2FzeW5jaHJvbm91cy1qYXZhc2NyaXB0
LWFzeW5jLWF3YWl0LXR1dG9yaWFsKQogKiDwn5OcIFtKYXZhc2NyaXB0IOKA
lCBFUzggSW50cm9kdWNpbmcgYXN5bmMvYXdhaXQgRnVuY3Rpb25zIOKAlCBC
ZW4gR2Fycmlzb25dKGh0dHBzOi8vbWVkaXVtLmNvbS9AX2JlbmdhcnJpc29u
L2phdmFzY3JpcHQtZXM4LWludHJvZHVjaW5nLWFzeW5jLWF3YWl0LWZ1bmN0
aW9ucy03YTQ3MWVjN2RlOGEpCiAqIPCfk5wgW0hvdyB0byBlc2NhcGUgYXN5
bmMvYXdhaXQgaGVsbCDigJQgQWRpdHlhIEFnYXJ3YWxdKGh0dHBzOi8vbWVk
aXVtLmZyZWVjb2RlY2FtcC5vcmcvYXZvaWRpbmctdGhlLWFzeW5jLWF3YWl0
LWhlbGwtYzc3YTBmYjcxYzRjKQogKiDwn5OcIFtVbmRlcnN0YW5kaW5nIEph
dmFTY3JpcHTigJlzIGFzeW5jIGF3YWl0IOKAlCBOaWNvbMOhcyBCZXZhY3F1
YV0oaHR0cHM6Ly9wb255Zm9vLmNvbS9hcnRpY2xlcy91bmRlcnN0YW5kaW5n
LWphdmFzY3JpcHQtYXN5bmMtYXdhaXQpCiAqIPCfk5wgW0phdmFTY3JpcHQg
QXN5bmMvQXdhaXQ6IFNlcmlhbCwgUGFyYWxsZWwgYW5kIENvbXBsZXggRmxv
dyDigJQgVGVjaEJyaWpdKGh0dHBzOi8vdGVjaGJyaWouY29tL2phdmFzY3Jp
cHQtYXN5bmMtYXdhaXQtcGFyYWxsZWwtc2VxdWVuY2UpCiAqIPCfk5wgW0Fz
eW5jaHJvbm91cyBQcm9ncmFtbWluZyDigJQgRXhwbG9yaW5nIEpTXShodHRw
Oi8vZXhwbG9yaW5nanMuY29tL2VzNi9jaF9hc3luYy5odG1sKQogKiDwn5Oc
IFtGcm9tIEphdmFTY3JpcHQgUHJvbWlzZXMgdG8gQXN5bmMvQXdhaXQ6IHdo
eSBib3RoZXI/IOKAlCBDaHJpcyBOd2FtYmFdKGh0dHBzOi8vYmxvZy5wdXNo
ZXIuY29tL3Byb21pc2VzLWFzeW5jLWF3YWl0LykKICog8J+TnCBbRmxvdyBD
b250cm9sIGluIE1vZGVybiBKUzogQ2FsbGJhY2tzIHRvIFByb21pc2VzIHRv
IEFzeW5jL0F3YWl0IOKAlCBDcmFpZyBCdWNrbGVyXShodHRwczovL3d3dy5z
aXRlcG9pbnQuY29tL2Zsb3ctY29udHJvbC1jYWxsYmFja3MtcHJvbWlzZXMt
YXN5bmMtYXdhaXQvKQogKiDwn5OcIFtKYXZhU2NyaXB0OiBQcm9taXNlcyBh
bmQgV2h5IEFzeW5jL0F3YWl0IFdpbnMgdGhlIEJhdHRsZSDigJQgTmljayBQ
YXJzb25zXShodHRwczovL2R6b25lLmNvbS9hcnRpY2xlcy9qYXZhc2NyaXB0
LXByb21pc2VzLWFuZC13aHktYXN5bmNhd2FpdC13aW5zLXRoZS1iYSkKICog
8J+TnCBbSG93IFRvIE1hc3RlciBBc3luYy9Bd2FpdCBXaXRoIFRoaXMgUmVh
bCBXb3JsZCBFeGFtcGxlIOKAlCBBZHJpYW4gSGFqZGluXShodHRwczovL21l
ZGl1bS5mcmVlY29kZWNhbXAub3JnL2hvdy10by1tYXN0ZXItYXN5bmMtYXdh
aXQtd2l0aC10aGlzLXJlYWwtd29ybGQtZXhhbXBsZS0xOTEwN2U3NTU4YWQp
CiAqIPCfk5wgW0hvdyB0byBpbXByb3ZlIHlvdXIgYXN5bmNocm9ub3VzIEph
dmFzY3JpcHQgY29kZSB3aXRoIGFzeW5jIGFuZCBhd2FpdCDigJQgSW5kcmVr
IExhc25dKGh0dHBzOi8vbWVkaXVtLmZyZWVjb2RlY2FtcC5vcmcvaW1wcm92
ZS15b3VyLWFzeW5jaHJvbm91cy1qYXZhc2NyaXB0LWNvZGUtd2l0aC1hc3lu
Yy1hbmQtYXdhaXQtYzAyZmMzODEzZWRhKQogKiDwn5OcIFtNYWtpbmcgRmV0
Y2hlcyBFYXN5IFdpdGggQXN5bmMgQXdhaXQg4oCUIE1pY2tleSBTaGVyaWRh
bl0oaHR0cHM6Ly9tZWRpdW0uY29tL0BtaWNrc2hlcmlkYW4uMjQvbWFraW5n
LWZldGNoZXMtZWFzeS13aXRoLWFzeW5jLWF3YWl0LThhMTI0NmVmYTFmNikK
ICog8J+TnCBbNyBSZWFzb25zIFdoeSBKYXZhU2NyaXB0IEFzeW5jL0F3YWl0
IElzIEJldHRlciBUaGFuIFBsYWluIFByb21pc2VzIOKAlCBNb3N0YWZhIEdh
YWZhcl0oaHR0cHM6Ly9kZXYudG8vZ2FmaS83LXJlYXNvbnMtdG8tYWx3YXlz
LXVzZS1hc3luYy1hd2FpdC1vdmVyLXBsYWluLXByb21pc2VzLXR1dG9yaWFs
LTRlajkpCiAqIPCfk5wgW0FzeW5jaHJvbm91cyBPcGVyYXRpb25zIGluIEph
dmFTY3JpcHQg4oCUIEpzY3JhbWJsZXIoaHR0cHM6Ly9kZXYudG8vanNjcmFt
Ymxlci9hc3luY2hyb25vdXMtb3BlcmF0aW9ucy1pbi1qYXZhc2NyaXB0LTJw
NmIpCiAqIPCfk5wgW0FzeW5jL2F3YWl0OiBBIHNsaWdodCBkZXNpZ24gZmxh
dy4g4oCUIEpvZXkoaHR0cHM6Ly9kZXYudG8vam9leWh1Yi9hc3luYy1hd2Fp
dC1hLXNsaWdodC1kZXNpZ24tZmxhdy0yaDJqKQoKICMjIyBWaWRlb3MKCiAq
IPCfjqUgW0FzeW5jICsgQXdhaXQg4oCUIFdlcyBCb3NdKGh0dHBzOi8vd3d3
LnlvdXR1YmUuY29tL3dhdGNoP3Y9OVlrVUN4dmFMRWspCiAqIPCfjqUgW0Fz
eW5jaHJvbnk6IFVuZGVyIHRoZSBIb29kIOKAlCBTaGVsbGV5IFZvaHJdKGh0
dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9U3JOUVM4SjY3emMpCiAq
IPCfjqUgW2FzeW5jL2F3YWl0IGluIEphdmFTY3JpcHQgLSBXaGF0LCBXaHkg
YW5kIEhvdyDigJQgRnVuIEZ1biBGdW5jdGlvbl0oaHR0cHM6Ly93d3cueW91
dHViZS5jb20vd2F0Y2g/dj01NjhnOGh4SkpwNCZpbmRleD0zJmxpc3Q9UEww
elZFR0V2U2FlSEpwcGFSTHJxamVUUG5DSDYpCiAqIPCfjqUgW2FzeW5jL2F3
YWl0IFBhcnQgMSAtIFRvcGljcyBvZiBKYXZhU2NyaXB0L0VTOCDigJQgVGhl
IENvZGluZyBUcmFpbl0oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/
dj1YTzc3RmliOXRTSSZpbmRleD0zJmxpc3Q9UExScXdYLVY3VXU2YktMUFF2
UFJOTkU2NWtCTDYybVZmeCkKICog8J+OpSBbYXN5bmMvYXdhaXQgUGFydCAy
IC0gVG9waWNzIG9mIEphdmFTY3JpcHQvRVM4IOKAlCBUaGUgQ29kaW5nIFRy
YWluXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWNoYXZUaGxO
ejNzJmluZGV4PTQmbGlzdD1QTFJxd1gtVjdVdTZiS0xQUXZQUk5ORTY1a0JM
NjJtVmZ4KQogICog8J+OpSBbQ29tcGxldGUgR3VpZGUgdG8gSlMgQXN5bmMg
JiBBd2FpdCBFUzIwMTcvRVM4IOKAlCBDb2x0IFN0ZWVsZV0oaHR0cHM6Ly93
d3cueW91dHViZS5jb20vd2F0Y2g/dj1rckFZQTRydmJkQSkKCioqW+KshiBC
YWNrIHRvIFRvcF0oI3RhYmxlLW9mLWNvbnRlbnRzKSoqCgotLS0KCiMjIDI3
LiBEYXRhIFN0cnVjdHVyZXMKCiMjIyBBcnRpY2xlcwoKICog8J+TnCBbRGF0
YSBTdHJ1Y3R1cmVzIGluIEphdmFTY3JpcHQg4oCUIFRob24gTHldKGh0dHBz
Oi8vbWVkaXVtLmNvbS9zaWxpY29ud2F0L2RhdGEtc3RydWN0dXJlcy1pbi1q
YXZhc2NyaXB0LTFiOWFlZDBlYTE3YykKICog8J+TnCBbQWxnb3JpdGhtcyBh
bmQgRGF0YSBTdHJ1Y3R1cmVzIGluIEphdmFTY3JpcHQg4oCUIE9sZWtzaWkg
VHJla2hsZWJdKGh0dHBzOi8vaXRuZXh0LmlvL2FsZ29yaXRobXMtYW5kLWRh
dGEtc3RydWN0dXJlcy1pbi1qYXZhc2NyaXB0LWE3MTU0OGY5MDJjYikKICog
8J+TnCBbRGF0YSBTdHJ1Y3R1cmVzOiBPYmplY3RzIGFuZCBBcnJheXMg4oCV
IENocmlzIE53YW1iYV0oaHR0cHM6Ly9zY290Y2guaW8vY291cnNlcy8xMC1u
ZWVkLXRvLWtub3ctamF2YXNjcmlwdC1jb25jZXB0cy9kYXRhLXN0cnVjdHVy
ZXMtb2JqZWN0cy1hbmQtYXJyYXlzKQogKiDwn5OcIFtEYXRhIHN0cnVjdHVy
ZXMgaW4gSmF2YVNjcmlwdCDigJQgQmVub2l0IFZhbGxvbl0oaHR0cDovL2Js
b2cuYmVub2l0dmFsbG9uLmNvbS9kYXRhLXN0cnVjdHVyZXMtaW4tamF2YXNj
cmlwdC9kYXRhLXN0cnVjdHVyZXMtaW4tamF2YXNjcmlwdC8pCiAqIPCfk5wg
W1BsYXlpbmcgd2l0aCBEYXRhIFN0cnVjdHVyZXMgaW4gSmF2YXNjcmlwdCDi
gJQgQW5pc2ggSy5dKGh0dHBzOi8vYmxvZy5jbG91ZGJvb3N0LmlvL3BsYXlp
bmctd2l0aC1kYXRhLXN0cnVjdHVyZXMtaW4tamF2YXNjcmlwdC1zdGFjay1h
NTVlYmU1MGYyOWQpCiAqIPCfk5wgW1RoZSBMaXR0bGUgR3VpZGUgb2YgUXVl
dWUgaW4gSmF2YVNjcmlwdCDigJQgR2VybcOhbiBDdXRyYXJvXShodHRwczov
L2hhY2tlcm5vb24uY29tL3RoZS1saXR0bGUtZ3VpZGUtb2YtcXVldWUtaW4t
amF2YXNjcmlwdC00ZjY3ZTc5MjYwZDkpCiAqIPCfk5wgW0FsbCBhbGdvcml0
aG1zIHdyaXRpbmcgd2l0aCBKYXZhU2NyaXB0IGluIHRoZSBib29rICdBbGdv
cml0aG1zIEZvdXJ0aCBFZGl0aW9uJ10oaHR0cHM6Ly9naXRodWIuY29tL2Jh
cnJldGxlZS9hbGdvcml0aG1zKQogKiDwn5OcIFtDb2xsZWN0aW9uIG9mIGNs
YXNzaWMgY29tcHV0ZXIgc2NpZW5jZSBwYXJhZGlnbXMgaW4gSmF2YVNjcmlw
dF0oaHR0cHM6Ly9naXRodWIuY29tL256YWthcy9jb21wdXRlci1zY2llbmNl
LWluLWphdmFzY3JpcHQpCiAqIPCfk5wgW0FsbCB0aGUgdGhpbmdzIHlvdSBk
aWRuJ3Qga25vdyB5b3Ugd2FudGVkIHRvIGtub3cgYWJvdXQgZGF0YSBzdHJ1
Y3R1cmVzXShodHRwczovL2dpdGh1Yi5jb20vamFtaWVidWlsZHMvaXRzeS1i
aXRzeS1kYXRhLXN0cnVjdHVyZXMpCiAqIPCfk5wgW0phdmFTY3JpcHQgRGF0
YSBTdHJ1Y3R1cmVzOiBTaW5nbHkgTGlua2VkIExpc3Q6IFNldHVwIOKAlCBt
aWt1ODZdKGh0dHBzOi8vZGV2LnRvL21pa3U4Ni9qYXZhc2NyaXB0LWRhdGEt
c3RydWN0dXJlcy1zaW5nbHktbGlua2VkLWxpc3Qtc2V0dXAtNDk1MCkKCiAj
IyMgVmlkZW9zCgogKiDwn46lIFtBbGdvcml0aG1zIGluIEphdmFTY3JpcHQg
4oCUIFNldGggS29jaF0oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/
dj1QeWxRbElTU0g4VSZsaXN0PVBMdWpYNENJZEJHQ2EtNjVOM3VOOENEYlVN
cllzSEJyei0pCiAqIPCfjqUgW0FsZ29yaXRobXMgSW4gSmF2YXNjcmlwdCB8
IEFjZSBZb3VyIEludGVydmlldyDigJQgRWR1b25peCBMZWFybmluZyBTb2x1
dGlvbnNdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9SF9FQlBa
Z2lBYXMmbGlzdD1QTERtdnNscF9WUjB6WVVTdGhfOE82OXA0X2NtdlpFZ0xh
KQogKiDwn46lIFtEYXRhIFN0cnVjdHVyZXMgYW5kIEFsZ29yaXRobXMgaW4g
SmF2YVNjcmlwdCDigJQgZnJlZUNvZGVDYW1wXShodHRwczovL3d3dy55b3V0
dWJlLmNvbS93YXRjaD92PUdqNXFCaGVHT0VvJmxpc3Q9UExXS2poSnRxVkFi
a3NvLUliZ2lpUDQ4bi1PLUpRQTlQSikKICog8J+OpSBbTGVhcm5pbmcgSmF2
YVNjcmlwdCBEYXRhIFN0cnVjdHVyZXMgYW5kIEFsZ29yaXRobXM6IFNvcnRp
bmcg4oCUIFBhY2t0IFZpZGVvXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93
YXRjaD92PVltaF9BdXJyTWJBKQoKKipb4qyGIEJhY2sgdG8gVG9wXSgjdGFi
bGUtb2YtY29udGVudHMpKioKCi0tLQoKIyMgMjguIEV4cGVuc2l2ZSBPcGVy
YXRpb24gYW5kIEJpZyBPIE5vdGF0aW9uCgojIyMgQXJ0aWNsZXMKCiAqIPCf
k5wgW0JpZyBPIE5vdGF0aW9uIGluIEphdmFzY3JpcHQg4oCUIEPDqXNhciBB
bnTDs24gRG9yYW50ZXNdKGh0dHBzOi8vbWVkaXVtLmNvbS9jZXNhcnMtdGVj
aC1pbnNpZ2h0cy9iaWctby1ub3RhdGlvbi1qYXZhc2NyaXB0LTI1Yzc5ZjUw
YjE5YikKICog8J+TnCBbVGltZSBDb21wbGV4aXR5L0JpZyBPIE5vdGF0aW9u
IOKAlCBUaW0gUm9iZXJ0c10oaHR0cHM6Ly9tZWRpdW0uY29tL2phdmFzY3Jp
cHQtc2NlbmUvdGltZS1jb21wbGV4aXR5LWJpZy1vLW5vdGF0aW9uLTFhNDMx
MGMzZWU0YikKICog8J+TnCBbQmlnIE8gaW4gSmF2YVNjcmlwdCDigJQgR2Fi
cmllbGEgTWVkaW5hXShodHRwczovL21lZGl1bS5jb20vQGdtZWRpbmEyMjkv
YmlnLW8taW4tamF2YXNjcmlwdC0zNmZmNjc3NjYwNTEpCiAqIPCfk5wgW0Jp
ZyBPIFNlYXJjaCBBbGdvcml0aG1zIGluIEphdmFTY3JpcHQg4oCUIEJyYWRs
ZXkgQnJhaXRod2FpdGVdKGh0dHA6Ly93d3cuYnJhZG9uY29kZS5jb20vYmxv
Zy8yMDEyLzA0L2JpZy1vLWFsZ29yaXRobS1leGFtcGxlcy1pbi1qYXZhc2Ny
aXB0Lmh0bWwpCiAqIPCfk5wgW1RpbWUgQ29tcGxleGl0eSBBbmFseXNpcyBp
biBKYXZhU2NyaXB0IOKAlCBKZW5uaWZlciBCbGFuZF0oaHR0cHM6Ly93d3cu
amVubmlmZXJibGFuZC5jb20vdGltZS1jb21wbGV4aXR5LWFuYWx5c2lzLWlu
LWphdmFzY3JpcHQvKQogKiDwn5OcIFtBbGdvcml0aG1zIGluIHBsYWluIEVu
Z2xpc2g6IHRpbWUgY29tcGxleGl0eSBhbmQgQmlnLU8gTm90YXRpb24g4oCU
IE1pY2hhZWwgT2xvcnVubmlzb2xhXShodHRwczovL21lZGl1bS5mcmVlY29k
ZWNhbXAub3JnL3RpbWUtaXMtY29tcGxleC1idXQtcHJpY2VsZXNzLWYwYWJk
MDE1MDYzYykKCiMjIyBWaWRlb3MKCiAqIPCfjqUgW0phdmFTY3JpcHQ6IElu
dHJvIHRvIEJpZyBPIE5vdGF0aW9uIGFuZCBGdW5jdGlvbiBSdW50aW1lIOKA
lCBFcmljIFRyYXViXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92
PUhnQTVWT0ZhbjVFKQogKiDwn46lIFtFc3NlbnRpYWwgQmlnIE8gZm9yIEph
dmFTY3JpcHQgRGV2ZWxvcGVycyDigJQgRGF2ZSBTbWl0aF0oaHR0cHM6Ly93
d3cueW91dHViZS5jb20vd2F0Y2g/dj1LYXRsdkNGSFBSbykKICog8J+OpSBb
QmlnIE8gTm90YXRpb24gLSBUaW1lIENvbXBsZXhpdHkgQW5hbHlzaXMg4oCU
IFdlYlR1bmluZ3NdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9
QUxsODZ4SmlURDgpCgoqKlvirIYgQmFjayB0byBUb3BdKCN0YWJsZS1vZi1j
b250ZW50cykqKgoKLS0tCgojIyAyOS4gQWxnb3JpdGhtcwoKIyMjIEFydGlj
bGVzCgogKiDwn5OcIFtEYXRhIFN0cnVjdHVyZXMgYW5kIEFsZ29yaXRobXMg
dXNpbmcgRVM2XShodHRwczovL2dpdGh1Yi5jb20vQ3JpenN0aWFuL2RhdGEt
c3RydWN0dXJlLWFuZC1hbGdvcml0aG1zLXdpdGgtRVM2KQogKiDwn5OcIFtB
bGdvcml0aG1zIGFuZCBkYXRhIHN0cnVjdHVyZXMgaW1wbGVtZW50ZWQgaW4g
SmF2YVNjcmlwdCB3aXRoIGV4cGxhbmF0aW9ucyBhbmQgbGlua3MgdG8gZnVy
dGhlciByZWFkaW5nc10oaHR0cHM6Ly9naXRodWIuY29tL3RyZWtobGViL2ph
dmFzY3JpcHQtYWxnb3JpdGhtcykKICog8J+TnCBbSlM6IEludGVydmlldyBB
bGdvcml0aG1dKGh0dHA6Ly93d3cudGhhdGpzZHVkZS5jb20vaW50ZXJ2aWV3
L2pzMS5odG1sKQogKiDwn5OcIFtBbGdvcml0aG1zIGluIEphdmFTY3JpcHQg
4oCUIFRob24gTHldKGh0dHBzOi8vbWVkaXVtLmNvbS9zaWxpY29ud2F0L2Fs
Z29yaXRobXMtaW4tamF2YXNjcmlwdC1iMGJlZDY4ZjQwMzgpCiAqIPCfk5wg
W0phdmFTY3JpcHQgT2JqZWN0cywgU3F1YXJlIEJyYWNrZXRzIGFuZCBBbGdv
cml0aG1zIOKAlCBEbWl0cmkgR3JhYm92XShodHRwczovL21lZGl1bS5mcmVl
Y29kZWNhbXAub3JnL2phdmFzY3JpcHQtb2JqZWN0cy1zcXVhcmUtYnJhY2tl
dHMtYW5kLWFsZ29yaXRobXMtZTlhMjkxNmRjMTU4KQogKiDwn5OcIFtBdHdv
b2QncyBMYXcgYXBwbGllZCB0byBDUzEwMSAtIENsYXNzaWMgYWxnb3JpdGht
cyBhbmQgZGF0YSBzdHJ1Y3R1cmVzIGltcGxlbWVudGVkIGluIEphdmFTY3Jp
cHRdKGh0dHBzOi8vZ2l0aHViLmNvbS9mZWxpcGVybmIvYWxnb3JpdGhtcy5q
cykKICog8J+TnCBbRGF0YSBTdHJ1Y3R1cmVzIGFuZCBBbGdvcml0aG1zIGxp
YnJhcnkgaW4gSmF2YVNjcmlwdF0oaHR0cHM6Ly9naXRodWIuY29tL3lhbmdz
aHVuL2xhZ28pCiAqIPCfk5wgW0NvbGxlY3Rpb24gb2YgY29tcHV0ZXIgc2Np
ZW5jZSBhbGdvcml0aG1zIGFuZCBkYXRhIHN0cnVjdHVyZXMgd3JpdHRlbiBp
biBKYXZhU2NyaXB0XShodHRwczovL2dpdGh1Yi5jb20vaWRvc2VsYS9hbGdv
cml0aG1zLWluLWphdmFzY3JpcHQpCgoqKlvirIYgQmFjayB0byBUb3BdKCN0
YWJsZS1vZi1jb250ZW50cykqKgoKLS0tCgojIyAzMC4gSW5oZXJpdGFuY2Us
IFBvbHltb3JwaGlzbSBhbmQgQ29kZSBSZXVzZQoKIyMjIEFydGljbGVzCgog
KiDwn5OcIFtDbGFzcyBpbmhlcml0YW5jZSwgc3VwZXIg4oCUIEphdmFTY3Jp
cHQuSW5mb10oaHR0cHM6Ly9qYXZhc2NyaXB0LmluZm8vY2xhc3MtaW5oZXJp
dGFuY2UpCiAqIPCfk5wgW0luaGVyaXRhbmNlIGluIEphdmFTY3JpcHQg4oCU
IE1ETl0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9j
cy9MZWFybi9KYXZhU2NyaXB0L09iamVjdHMvSW5oZXJpdGFuY2UpCiAqIPCf
k5wgW0luaGVyaXRhbmNlIGluIEphdmFTY3JpcHQg4oCUIFJ1cGVzaCBNaXNo
cmFdKGh0dHBzOi8vaGFja2Vybm9vbi5jb20vaW5oZXJpdGFuY2UtaW4tamF2
YXNjcmlwdC0yMWQyYjgyZmZhNmYpCiAqIPCfk5wgW1NpbXBsZSBJbmhlcml0
YW5jZSB3aXRoIEphdmFTY3JpcHQg4oCUIERhdmlkIENhdHVoZV0oaHR0cHM6
Ly93d3cuc2l0ZXBvaW50LmNvbS9zaW1wbGUtaW5oZXJpdGFuY2UtamF2YXNj
cmlwdC8pCiAqIPCfk5wgW0phdmFTY3JpcHQg4oCUIEluaGVyaXRhbmNlLCBk
ZWxlZ2F0aW9uIHBhdHRlcm5zIGFuZCBPYmplY3QgbGlua2luZyDigJQgTkMg
UGF0cm9dKGh0dHBzOi8vY29kZWJ1cnN0LmlvL2phdmFzY3JpcHQtaW5oZXJp
dGFuY2UtMjVmZTYxYWI5Zjg1KQogKiDwn5OcIFtPYmplY3QgT3JpZW50ZWQg
SmF2YVNjcmlwdDogUG9seW1vcnBoaXNtIHdpdGggZXhhbXBsZXMg4oCUIEtu
b2xkdXMgQmxvZ3NdKGh0dHBzOi8vYmxvZy5rbm9sZHVzLmNvbS9vYmplY3Qt
b3JpZW50ZWQtamF2YXNjcmlwdC1wb2x5bW9ycGhpc20td2l0aC1leGFtcGxl
cy8pCiAqIPCfk5wgW1Byb2dyYW0gTGlrZSBQcm90ZXVzIOKAlCBBIGJlZ2lu
bmVy4oCZcyBndWlkZSB0byBwb2x5bW9ycGhpc20gaW4gSmF2YXNjcmlwdCDi
gJQgU2FtIEdhbHNvbl0oaHR0cHM6Ly9tZWRpdW0uY29tL3lsZC1lbmdpbmVl
cmluZy1ibG9nL3Byb2dyYW0tbGlrZS1wcm90ZXVzLWEtYmVnaW5uZXJzLWd1
aWRlLXRvLXBvbHltb3JwaGlzbS1pbi1qYXZhc2NyaXB0LTg2N2JlYTdjOGJl
MikKICog8J+TnCBbT2JqZWN0LW9yaWVudGVkIEphdmFTY3JpcHQ6IEEgRGVl
cCBEaXZlIGludG8gRVM2IENsYXNzZXMg4oCUIEplZmYgTW90dF0oaHR0cHM6
Ly93d3cuc2l0ZXBvaW50LmNvbS9vYmplY3Qtb3JpZW50ZWQtamF2YXNjcmlw
dC1kZWVwLWRpdmUtZXM2LWNsYXNzZXMvKQoKICAjIyMgVmlkZW9zCgogKiDw
n46lIFtJbmhlcml0YW5jZSBpbiBKYXZhU2NyaXB0IOKAlCBrdWR2ZW5rYXRd
KGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9eVhsRlI4MXREQk0p
CiAqIPCfjqUgW0phdmFTY3JpcHQgRVM2IENsYXNzZXMgYW5kIEluaGVyaXRh
bmNlIOKAlCBUcmF2ZXJzeSBNZWRpYV0oaHR0cHM6Ly93d3cueW91dHViZS5j
b20vd2F0Y2g/dj1SQkxJbTVMTXJtYykKICog8J+OpSBbUG9seW1vcnBoaXNt
IGluIEphdmFTY3JpcHQg4oCUIGt1ZHZlbmthdF0oaHR0cHM6Ly93d3cueW91
dHViZS5jb20vd2F0Y2g/dj16ZG92RzljdUVCQSkKCioqW+KshiBCYWNrIHRv
IFRvcF0oI3RhYmxlLW9mLWNvbnRlbnRzKSoqCgotLS0KCiMjIDMxLiBEZXNp
Z24gUGF0dGVybnMKCiMjIyBBcnRpY2xlcwoKICog8J+TnCBbNCBKYXZhU2Ny
aXB0IERlc2lnbiBQYXR0ZXJucyBZb3UgU2hvdWxkIEtub3cg4oCUIERldmFu
IFBhdGVsXShodHRwczovL3Njb3RjaC5pby9iYXItdGFsay80LWphdmFzY3Jp
cHQtZGVzaWduLXBhdHRlcm5zLXlvdS1zaG91bGQta25vdykKICog8J+TnCBb
SmF2YVNjcmlwdCBEZXNpZ24gUGF0dGVybnMg4oCTIEJlZ2lubmVyJ3MgR3Vp
ZGUgdG8gTW9iaWxlIFdlYiBEZXZlbG9wbWVudCDigJQgU291bXlhaml0IFBh
dGhha10oaHR0cHM6Ly9tZWRpdW0uY29tL2JlZ2lubmVycy1ndWlkZS10by1t
b2JpbGUtd2ViLWRldmVsb3BtZW50L2phdmFzY3JpcHQtZGVzaWduLXBhdHRl
cm5zLTI1ZjBmYWFhYTE1KQogKiDwn5OcIFtKYXZhU2NyaXB0IERlc2lnbiBQ
YXR0ZXJucyDigJQgQWthc2ggUGFsXShodHRwczovL21lZGl1bS5jb20vZnJv
bnQtZW5kLWhhY2tpbmcvamF2YXNjcmlwdC1kZXNpZ24tcGF0dGVybnMtZWQ5
ZDRjMTQ0YzgxKQogKiDwn5OcIFtKYXZhc2NyaXB0IERlc2lnbiBQYXR0ZXJu
czogV2hhdCBUaGV5IEFyZSAmIEhvdyBUbyBVc2UgVGhlbSDigJQgUGF0cmlj
ayBTaW1wc29uXShodHRwczovL3NlZXNwYXJrYm94LmNvbS9mb3VuZHJ5L2ph
dmFzY3JpcHRfZGVzaWduX3BhdHRlcm5zKQogKiDwn5OcIFtKYXZhU2NyaXB0
IERlc2lnbiBQYXR0ZXJuczogVW5kZXJzdGFuZGluZyBEZXNpZ24gUGF0dGVy
bnMgaW4gSmF2YVNjcmlwdCAtIFN1a2hqaW5kZXIgQXJvcmFdKGh0dHBzOi8v
YmxvZy5iaXRzcmMuaW8vdW5kZXJzdGFuZGluZy1kZXNpZ24tcGF0dGVybnMt
aW4tamF2YXNjcmlwdC0xMzM0NTIyM2YyZGQpCiAqIPCfk5wgW0FsbCB0aGUg
MjMgKEdvRikgZGVzaWduIHBhdHRlcm5zIGltcGxlbWVudGVkIGluIEphdmFz
Y3JpcHQg4oCUIEZlbGlwZSBCZWxpbmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9m
YmVsaW5lL0Rlc2lnbi1QYXR0ZXJucy1KUykKICog8J+TnCBbVGhlIFBvd2Vy
IG9mIHRoZSBNb2R1bGUgUGF0dGVybiBpbiBKYXZhU2NyaXB0IOKAlCBqc21h
bmlmZXN0XShodHRwczovL21lZGl1bS5jb20vYmV0dGVyLXByb2dyYW1taW5n
L3RoZS1wb3dlci1vZi10aGUtbW9kdWxlLXBhdHRlcm4taW4tamF2YXNjcmlw
dC0zYzczZjdjZDEwZTgpCiAqIPCfk5wgW0xlYXJuaW5nIEphdmFTY3JpcHQg
RGVzaWduIFBhdHRlcm5zIOKAlCBBZGR5IE9zbWFuaSBdKGh0dHBzOi8vYWRk
eW9zbWFuaS5jb20vcmVzb3VyY2VzL2Vzc2VudGlhbGpzZGVzaWducGF0dGVy
bnMvYm9vay8pCiAqIPCfk5wgW0Rlc2lnbiBQYXR0ZXJucyBmb3IgRGV2ZWxv
cGVycyB1c2luZyBKYXZhU2NyaXB0IHB0LiBJIOKAlCBPbGl2ZXIgTWVuc2Fo
XShodHRwczovL2Rldi50by9vbWVuc2FoL2Rlc2lnbi1wYXR0ZXJucy1mb3It
ZGV2ZWxvcGVycy11c2luZy1qYXZhc2NyaXB0LS0tLXBhcnQtb25lLS1iM2Up
CiAqIPCfk5wgW0Rlc2lnbiBQYXR0ZXJucyBmb3IgRGV2ZWxvcGVycyB1c2lu
ZyBKYXZhU2NyaXB0IHB0LiBJSSDigJQgT2xpdmVyIE1lbnNhaF0oaHR0cHM6
Ly9kZXYudG8vb21lbnNhaC9kZXNpZ24tcGF0dGVybnMtZm9yLWRldmVsb3Bl
cnMtdXNpbmctamF2YXNjcmlwdC0tLXBhcnQtdHdvLS0zcDM5KQogKiDwn5Oc
IFtEZXNpZ24gcGF0dGVybnMgaW4gbW9kZXJuIEphdmFTY3JpcHQgZGV2ZWxv
cG1lbnRdKGh0dHBzOi8vbGV2ZWx1cC5naXRjb25uZWN0ZWQuY29tL2Rlc2ln
bi1wYXR0ZXJucy1pbi1tb2Rlcm4tamF2YXNjcmlwdC1kZXZlbG9wbWVudC1l
Yzg0ZDhiZTA2Y2EpCiAqIPCfk5wgW1VuZGVyc3RhbmRpbmcgRGVzaWduIFBh
dHRlcm5zOiBJdGVyYXRvciB1c2luZyBEZXYudG8gYW5kIE1lZGl1bSBzb2Np
YWwgbmV0d29ya3MhIOKAlCBDYXJsb3MgQ2FiYWxsZXJvXShodHRwczovL2Rl
di50by9jYXJsaWxsby91bmRlcnN0YW5kaW5nLWRlc2lnbi1wYXR0ZXJucy1p
dGVyYXRvci11c2luZy1kZXYtdG8tYW5kLW1lZGl1bS1zb2NpYWwtbmV0d29y
a3MtM2JkZCkKICog8J+TnCBbSmF2YVNjcmlwdCBEZXNpZ24gUGF0dGVybnMg
LSBGYWN0b3J5IFBhdHRlcm4g4oCUIEtyaXN0aWphbkZpxaF0cmVrXShodHRw
czovL2Rldi50by9rcmlzdGlqYW5maXN0cmVrL2phdmFzY3JpcHQtZGVzaWdu
LXBhdHRlcm5zLWZhY3RvcnktcGF0dGVybi01NjJwKQoKCiAgIyMjIFZpZGVv
cwoKICog8J+OpSBbSmF2YVNjcmlwdCBEZXNpZ24gUGF0dGVybnMg4oCUIFVk
YWNpdHldKGh0dHBzOi8vd3d3LnVkYWNpdHkuY29tL2NvdXJzZS9qYXZhc2Ny
aXB0LWRlc2lnbi1wYXR0ZXJucy0tdWQ5ODkpCiAqIPCfjqUgW0phdmFTY3Jp
cHQgUGF0dGVybnMgZm9yIDIwMTcg4oCUIFNjb3R0IEFsbGVuXShodHRwczov
L3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWhPN216TzgzTjFRKQoKICoqW+Ks
hiBCYWNrIHRvIFRvcF0oI3RhYmxlLW9mLWNvbnRlbnRzKSoqCgotLS0KCiMj
IDMyLiBQYXJ0aWFsIEFwcGxpY2F0aW9ucywgQ3VycnlpbmcsIENvbXBvc2Ug
YW5kIFBpcGUKCiMjIyBBcnRpY2xlcwoKICog8J+TnCBbVXNlIGZ1bmN0aW9u
IGNvbXBvc2l0aW9uIGluIEphdmFTY3JpcHQg4oCUIFLDqW1pXShodHRwczov
L3d3dy5jb2RlbWVudG9yLmlvL21pY2hlbHJlL3VzZS1mdW5jdGlvbi1jb21w
b3NpdGlvbi1pbi1qYXZhc2NyaXB0LWdrbXhvczVtaikKICog8J+TnCBbQ3Vy
cnlpbmcgaW4gSmF2YVNjcmlwdCBFUzYg4oCUIEFkYW0gQmVuZV0oaHR0cHM6
Ly9ibG9nLmJlbmVzdHVkaW8uY28vY3VycnlpbmctaW4tamF2YXNjcmlwdC1l
czYtNTQwZDJhZDA5NDAwKQogKiDwn5OcIFtDb21wb3NpdGlvbiBhbmQgQ3Vy
cnlpbmcgRWxlZ2FuY2UgaW4gSmF2YVNjcmlwdCDigJQgUHJhZ3lhbiBEYXNd
KGh0dHBzOi8vbWVkaXVtLmNvbS9AcHJhZ3lhbjg4L3dyaXRpbmctbWlkZGxl
d2FyZS1jb21wb3NpdGlvbi1hbmQtY3VycnlpbmctZWxlZ2FuY2UtaW4tamF2
YXNjcmlwdC04YjE1Yzk4YTU0MWIpCiAqIPCfk5wgW0Z1bmN0aW9uYWwgSmF2
YVNjcmlwdDogRnVuY3Rpb24gQ29tcG9zaXRpb24gRm9yIEV2ZXJ5IERheSBV
c2Ug4oCUIEpvZWwgVGhvbXNdKGh0dHBzOi8vaGFja2Vybm9vbi5jb20vamF2
YXNjcmlwdC1mdW5jdGlvbmFsLWNvbXBvc2l0aW9uLWZvci1ldmVyeS1kYXkt
dXNlLTIyNDIxZWY2NWExMCkKICog8J+TnCBbRnVuY3Rpb25hbCBDb21wb3Np
dGlvbjogY29tcG9zZSgpIGFuZCBwaXBlKCkg4oCUIEFudG9uIFBhcmFzXSho
dHRwczovL21lZGl1bS5jb20vQGFjcGFyYXMvd2hhdC1pLWxlYXJuZWQtdG9k
YXktanVseS0yLTIwMTctYWI5YTQ2ZGJmODVmKQogKiDwn5OcIFtXaHkgVGhl
IEhpcHN0ZXJzIENvbXBvc2UgRXZlcnl0aGluZzogRnVuY3Rpb25hbCBDb21w
b3NpbmcgSW4gSmF2YVNjcmlwdCDigJQgQS4gU2hhcmlmXShodHRwOi8vYnVz
eXBlb3BsZXMuZ2l0aHViLmlvL3Bvc3QvZnVuY3Rpb25hbC1jb21wb3Npbmct
amF2YXNjcmlwdC8pCiAqIPCfk5wgW0EgR2VudGxlIEludHJvZHVjdGlvbiB0
byBGdW5jdGlvbmFsIEphdmFTY3JpcHQgcHQgSUlJOiBGdW5jdGlvbnMgZm9y
IG1ha2luZyBmdW5jdGlvbnMg4oCUIEphbWVzIFNpbmNsYWlyXShodHRwczov
L2pyc2luY2xhaXIuY29tL2FydGljbGVzLzIwMTYvZ2VudGxlLWludHJvZHVj
dGlvbi10by1mdW5jdGlvbmFsLWphdmFzY3JpcHQtZnVuY3Rpb25zLykKICog
8J+TnCBbQ3VycnkgQW5kIENvbXBvc2UgKHdoeSB5b3Ugc2hvdWxkIGJlIHVz
aW5nIHNvbWV0aGluZyBsaWtlIHJhbWRhIGluIHlvdXIgY29kZSkg4oCUIGpz
YW5jaGVzbGVhb10oaHR0cHM6Ly9qc2xlYW8ud29yZHByZXNzLmNvbS8yMDE1
LzAyLzIyL2N1cnJ5LWFuZC1jb21wb3NlLXdoeS15b3Utc2hvdWxkLWJlLXVz
aW5nLXNvbWV0aGluZy1saWtlLXJhbWRhLWluLXlvdXItY29kZS8pCiAqIPCf
k5wgW0Z1bmN0aW9uIENvbXBvc2l0aW9uIGluIEphdmFTY3JpcHQgd2l0aCBQ
aXBlIOKAlCBBbmR5IFZhbiBTbGFhcnNdKGh0dHBzOi8vdmFuc2xhYXJzLmlv
L3Bvc3QvY3JlYXRlLXBpcGUtZnVuY3Rpb24vKQogKiDwn5OcIFtQcmFjdGlj
YWwgRnVuY3Rpb25hbCBKYXZhU2NyaXB0IHdpdGggUmFtZGEg4oCUIEFuZHJl
dyBEJ0FtZWxpbywgWXVyaSBUYWtodGV5ZXZdKGh0dHBzOi8vZGV2ZWxvcGVy
LnRlbGVyaWsuY29tL2ZlYXR1cmVkL3ByYWN0aWNhbC1mdW5jdGlvbmFsLWph
dmFzY3JpcHQtcmFtZGEvKQogKiDwn5OcIFtUaGUgYmVhdXR5IGluIFBhcnRp
YWwgQXBwbGljYXRpb24sIEN1cnJ5aW5nLCBhbmQgRnVuY3Rpb24gQ29tcG9z
aXRpb24g4oCUIEpvZWwgVGhvbXNdKGh0dHBzOi8vaGFja2Vybm9vbi5jb20v
dGhlLWJlYXV0eS1pbi1wYXJ0aWFsLWFwcGxpY2F0aW9uLWN1cnJ5aW5nLWFu
ZC1mdW5jdGlvbi1jb21wb3NpdGlvbi1kODg1YmRmMGQ1NzQpCiAqIPCfk5wg
W0N1cnJ5IG9yIFBhcnRpYWwgQXBwbGljYXRpb24/IOKAlCBFcmljIEVsbGlv
dHRdKGh0dHBzOi8vbWVkaXVtLmNvbS9qYXZhc2NyaXB0LXNjZW5lL2N1cnJ5
LW9yLXBhcnRpYWwtYXBwbGljYXRpb24tODE1MDA0NGM3OGI4KQogKiDwn5Oc
IFtQYXJ0aWFsIEFwcGxpY2F0aW9uIGluIEphdmFTY3JpcHQg4oCUIEJlbiBB
bG1hbl0oaHR0cDovL2JlbmFsbWFuLmNvbS9uZXdzLzIwMTIvMDkvcGFydGlh
bC1hcHBsaWNhdGlvbi1pbi1qYXZhc2NyaXB0LykKICog8J+TnCBbUGFydGlh
bCBBcHBsaWNhdGlvbiBvZiBGdW5jdGlvbnMg4oCUIEZ1bmN0aW9uYWwgUmVh
Y3RpdmUgTmluamFdKGh0dHBzOi8vaGFja2Vybm9vbi5jb20vcGFydGlhbC1h
cHBsaWNhdGlvbi1vZi1mdW5jdGlvbnMtZGJlN2Q5YjgwNzYwKQogKiDwn5Oc
IFtDdXJyeWluZyB2cyBQYXJ0aWFsIEFwcGxpY2F0aW9uIOKAlCBEZWVwYWsg
R3VwdGFdKGh0dHBzOi8vY29kZWJ1cnN0LmlvL2phdmFzY3JpcHQtY3Vycnlp
bmctdnMtcGFydGlhbC1hcHBsaWNhdGlvbi00ZGI1YjI0NDJiZTgpCiAqIPCf
k5wgW1BhcnRpYWwgQXBwbGljYXRpb24gaW4gRUNNQVNjcmlwdCAyMDE1IOKA
lCBSYWdhbiBXYWxkXShodHRwOi8vcmFnYW53YWxkLmNvbS8yMDE1LzA0LzAx
L3BhcnRpYWwtYXBwbGljYXRpb24uaHRtbCkKICog8J+TnCBbRnVuY3Rpb25h
bCBDb21wb3NpdGlvbiBpbiBKYXZhc2NyaXB0IOKAlCBKb2UgQ29ydG9wYXNz
aV0oaHR0cHM6Ly9qb2Vjb3J0b3Bhc3NpLmNvbS9hcnRpY2xlcy9mdW5jdGlv
bmFsLWNvbXBvc2l0aW9uLWluLWphdmFzY3JpcHQvKQogKiDwn5OcIFtTbyBZ
b3UgV2FudCB0byBiZSBhIEZ1bmN0aW9uYWwgUHJvZ3JhbW1lciBwdC4gSSDi
gJQgQ2hhcmxlcyBTY2FsZmFuaV0oaHR0cHM6Ly9tZWRpdW0uY29tL0Bjc2Nh
bGZhbmkvc28teW91LXdhbnQtdG8tYmUtYS1mdW5jdGlvbmFsLXByb2dyYW1t
ZXItcGFydC0xLTFmMTVlMzg3ZTUzNikKICog8J+TnCBbU28gWW91IFdhbnQg
dG8gYmUgYSBGdW5jdGlvbmFsIFByb2dyYW1tZXIgcHQuIElJIOKAlCBDaGFy
bGVzIFNjYWxmYW5pXShodHRwczovL21lZGl1bS5jb20vQGNzY2FsZmFuaS9z
by15b3Utd2FudC10by1iZS1hLWZ1bmN0aW9uYWwtcHJvZ3JhbW1lci1wYXJ0
LTItNzAwNTY4MmNlYzRhKQogKiDwn5OcIFtTbyBZb3UgV2FudCB0byBiZSBh
IEZ1bmN0aW9uYWwgUHJvZ3JhbW1lciBwdC4gSUlJIOKAlCBDaGFybGVzIFNj
YWxmYW5pXShodHRwczovL21lZGl1bS5jb20vQGNzY2FsZmFuaS9zby15b3Ut
d2FudC10by1iZS1hLWZ1bmN0aW9uYWwtcHJvZ3JhbW1lci1wYXJ0LTMtMWIw
ZmQxNGViMWE3KQogKiDwn5OcIFtTbyBZb3UgV2FudCB0byBiZSBhIEZ1bmN0
aW9uYWwgUHJvZ3JhbW1lciBwdC4gSVYg4oCUIENoYXJsZXMgU2NhbGZhbmld
KGh0dHBzOi8vbWVkaXVtLmNvbS9AY3NjYWxmYW5pL3NvLXlvdS13YW50LXRv
LWJlLWEtZnVuY3Rpb25hbC1wcm9ncmFtbWVyLXBhcnQtNC0xOGZiZTNlYTll
NDkpCiAqIPCfk5wgW1NvIFlvdSBXYW50IHRvIGJlIGEgRnVuY3Rpb25hbCBQ
cm9ncmFtbWVyIHB0LiBWIOKAlCBDaGFybGVzIFNjYWxmYW5pXShodHRwczov
L21lZGl1bS5jb20vQGNzY2FsZmFuaS9zby15b3Utd2FudC10by1iZS1hLWZ1
bmN0aW9uYWwtcHJvZ3JhbW1lci1wYXJ0LTUtYzcwYWRjOWNmNTZhKQogKiDw
n5OcIFtGdW5jdGlvbmFsLUxpZ2h0IEphdmFTY3JpcHQgQ2hhcHRlciAzOiBN
YW5hZ2luZyBGdW5jdGlvbiBJbnB1dHMg4oCUIEt5bGUgU2ltcHNvbl0oaHR0
cHM6Ly9naXRodWIuY29tL2dldGlmeS9GdW5jdGlvbmFsLUxpZ2h0LUpTL2Js
b2IvbWFzdGVyL21hbnVzY3JpcHQvY2gzLm1kKQogKiDwn5OcIFtBbiBpbnRy
b2R1Y3Rpb24gdG8gdGhlIGJhc2ljIHByaW5jaXBsZXMgb2YgRnVuY3Rpb25h
bCBQcm9ncmFtbWluZyDigJQgVEtdKGh0dHBzOi8vbWVkaXVtLmZyZWVjb2Rl
Y2FtcC5vcmcvYW4taW50cm9kdWN0aW9uLXRvLXRoZS1iYXNpYy1wcmluY2lw
bGVzLW9mLWZ1bmN0aW9uYWwtcHJvZ3JhbW1pbmctYTJjMmExNWM4NCkKICog
8J+TnCBbQ29uY2VwdHMgb2YgRnVuY3Rpb25hbCBQcm9ncmFtbWluZyBpbiBK
YXZhc2NyaXB0IOKAlCBUS10oaHR0cHM6Ly9tZWRpdW0uY29tL3RoZS1yZW5h
aXNzYW5jZS1kZXZlbG9wZXIvY29uY2VwdHMtb2YtZnVuY3Rpb25hbC1wcm9n
cmFtbWluZy1pbi1qYXZhc2NyaXB0LTZiYzg0MjIwZDJhYSkKICog8J+TnCBb
QW4gSW50cm9kdWN0aW9uIHRvIEZ1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgU3R5
bGUgaW4gSmF2YVNjcmlwdCDigJQgSmF2YVNjcmlwdCBUZWFjaGVyXShodHRw
czovL21lZGl1bS5mcmVlY29kZWNhbXAub3JnL2FuLWludHJvZHVjdGlvbi10
by1mdW5jdGlvbmFsLXByb2dyYW1taW5nLXN0eWxlLWluLWphdmFzY3JpcHQt
NzFmY2MwNTBmMDY0KQogKiDwn5OcIFtBIHByYWN0aWNhbCBndWlkZSB0byB3
cml0aW5nIG1vcmUgZnVuY3Rpb25hbCBKYXZhU2NyaXB0IOKAlCBOYWRlZXNo
YSBDYWJyYWxdKGh0dHBzOi8vbWVkaXVtLmZyZWVjb2RlY2FtcC5vcmcvYS1w
cmFjdGljYWwtZ3VpZGUtdG8td3JpdGluZy1tb3JlLWZ1bmN0aW9uYWwtamF2
YXNjcmlwdC1kYjQ5NDA5ZjcxKQogKiDwn5OcIFtBIHNpbXBsZSBleHBsYW5h
dGlvbiBvZiBmdW5jdGlvbmFsIHBpcGUgaW4gSmF2YVNjcmlwdCDigJQgQmVu
IExlc2hdKGh0dHBzOi8vZGV2LnRvL2Jlbmxlc2gvYS1zaW1wbGUtZXhwbGFu
YXRpb24tb2YtZnVuY3Rpb25hbC1waXBlLWluLWphdmFzY3JpcHQtMmhiaikK
CiAgIyMjIFZpZGVvcwoKICog8J+OpSBbQ29tcG9zZSB2cyBQaXBlOiBGdW5j
dGlvbmFsIFByb2dyYW1taW5nIGluIEphdmFTY3JpcHQg4oCUIENoeWxkIFN0
dWRpb3NdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9V2wyZWpK
T3FIVVUpCiAqIPCfjqUgW0phdmFTY3JpcHQgRnVuY3Rpb25hbCBQcm9ncmFt
aW5nOiBDb21wb3NlIOKAlCBUaGVvZG9yZSBBbmRlcnNvbl0oaHR0cHM6Ly93
d3cueW91dHViZS5jb20vd2F0Y2g/dj1qaWdIeG85WVIzMCkKICog8J+OpSBb
RnVuY3Rpb24gQ29tcG9zaXRpb24gLSBGdW5jdGlvbmFsIEphdmFTY3JpcHQg
4oCUIE5XQ2FsdmFua10oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/
dj1tdGg1V3BFYzRRcykKICog8J+OpSBbSmF2YVNjcmlwdCBGdW5jdGlvbiBD
b21wb3NpdGlvbiBFeHBsYWluZWQg4oCUIFRoZW9kb3JlIEFuZGVyc29uXSho
dHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PVVhbTM3QWx6UFl3KQog
KiDwn46lIFtMZXQncyBjb2RlIHdpdGggZnVuY3Rpb24gY29tcG9zaXRpb24g
4oCUIEZ1biBGdW4gRnVuY3Rpb25dKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29t
L3dhdGNoP3Y9VkdCOUhiTDFHSGspCiAqIPCfjqUgW1BhcnRpYWwgQXBwbGlj
YXRpb24gdnMuIEN1cnJ5aW5nIOKAlCBOV0NhbHZhbmtdKGh0dHBzOi8vd3d3
LnlvdXR1YmUuY29tL3dhdGNoP3Y9RHpMa1JzVU4ydkUpCiAqIPCfjqUgW0ph
dmFTY3JpcHQgUGFydGlhbCBBcHBsaWNhdGlvbiDigJQgVGhlb2RvcmUgQW5k
ZXJzb25dKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9amtlYmdI
RWN2YWMpCgoqKlvirIYgQmFjayB0byBUb3BdKCN0YWJsZS1vZi1jb250ZW50
cykqKgoKLS0tCgojIyAzMy4gQ2xlYW4gQ29kZQoKIyMjIEFydGljbGVzCgog
KiDwn5OcIFtDbGVhbiBDb2RlIGNvbmNlcHRzIGFkYXB0ZWQgZm9yIEphdmFT
Y3JpcHQg4oCUIFJ5YW4gTWNEZXJtb3R0XShodHRwczovL2dpdGh1Yi5jb20v
cnlhbm1jZGVybW90dC9jbGVhbi1jb2RlLWphdmFzY3JpcHQpCiAqIPCfk5wg
W0phdmFTY3JpcHQgQ2xlYW4gQ29kaW5nIEJlc3QgUHJhY3RpY2VzIOKAlCBB
bmRyw6FzIFTDs3RoXShodHRwczovL2Jsb2cucmlzaW5nc3RhY2suY29tL2ph
dmFzY3JpcHQtY2xlYW4tY29kaW5nLWJlc3QtcHJhY3RpY2VzLW5vZGUtanMt
YXQtc2NhbGUvKQogKiDwn5OcIFtGdW5jdGlvbiBwYXJhbWV0ZXJzIGluIEph
dmFTY3JpcHQgQ2xlYW4gQ29kZSDigJQgS2V2aW4gUGV0ZXJzXShodHRwczov
L21lZGl1bS5jb20vQGtldmluX3BldGVycy9mdW5jdGlvbi1wYXJhbWV0ZXJz
LWluLWphdmFzY3JpcHQtY2xlYW4tY29kZS00Y2FhYzEwOTE1OWIpCiAqIPCf
k5wgW0tlZXBpbmcgeW91ciBjb2RlIGNsZWFuIOKAlCBTYW11ZWwgSmFtZXNd
KGh0dHBzOi8vY29kZWJ1cnN0LmlvL2tlZXBpbmcteW91ci1jb2RlLWNsZWFu
LWQzMGJjZmZkMWExMCkKICog8J+TnCBbQmVzdCBQcmFjdGljZXMgZm9yIFVz
aW5nIE1vZGVybiBKYXZhU2NyaXB0IFN5bnRheCDigJQgTS4gRGF2aWQgR3Jl
ZW5dKGh0dHBzOi8vd3d3LnNpdGVwb2ludC5jb20vbW9kZXJuLWphdmFzY3Jp
cHQtYmVzdC1wcmFjdGljZXMvKQogKiDwn5OcIFtiZXN0IHByYWN0aWNlcyBm
b3IgY3Jvc3Mgbm9kZS93ZWIgZGV2ZWxvcG1lbnQgLSBKaW1teSBXw6RydGlu
Z10oaHR0cHM6Ly9naXRodWIuY29tL2Nyb3NzLWpzL2Nyb3NzLWpzKQogKiDw
n5OcIFtXcml0aW5nIENsZWFuIENvZGUgLSBEeWxhbiBQYXVsdXNdKGh0dHBz
Oi8vZGV2LnRvL2dhbmRlcnp6L29uLXdyaXRpbmctY2xlYW4tY29kZS01N2Nt
KQogKiDwn5OcIFtXcml0aW5nIENsZWFuIENvZGUgYW5kIFRoZSBQcmFjdGlj
ZSBvZiBQcm9ncmFtbWluZyAtIE5pdHllc2ggQWdhcndhbF0oaHR0cHM6Ly9k
ZXYudG8vbml0eWVzaGFnYS93cml0aW5nLWNsZWFuLWNvZGUtYW5kLXRoZS1w
cmFjdGljZS1vZi1wcm9ncmFtbWluZy1hY3Rpb25hYmxlLWFkdmljZS1mb3It
YmVnaW5uZXJzLTVmMGspCgojIyMgVmlkZW9zCiogIPCfjqUgW0phdmFTY3Jp
cHQgUHJvIFRpcHMgLSBDb2RlIFRoaXMsIE5PVCBUaGF0XShodHRwczovL3d3
dy55b3V0dWJlLmNvbS93YXRjaD92PU11c192d2hUQ3EwKQoKICoqW+KshiBC
YWNrIHRvIFRvcF0oI3RhYmxlLW9mLWNvbnRlbnRzKSoqCg==
",,30394,"bGFuZ3VhZ2U6IHJ1YnkKcnZtOiAyLjQuMQpiZWZvcmVfc2NyaXB0OiBnZW0g
aW5zdGFsbCBhd2Vzb21lX2JvdApzY3JpcHQ6IGF3ZXNvbWVfYm90IFJFQURN
RS5tZCAtLWFsbG93LXJlZGlyZWN0IC0tYWxsb3ctZHVwZSAtLWFsbG93IDk5
OQpub3RpZmljYXRpb25zOgogIGVtYWlsOiBmYWxzZQo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'jQuery-File-Upload',1129010,"b'File Upload widget with multiple file selection, drag&drop support, progress bar, validation and preview images, audio and video for jQuery. Supports cross-domain, chunked and resumable file uploads. Works with any server-side platform (Google App Engine, PHP, Python, Ruby on Rails, Java, etc.) that supports standard HTML form file uploads.'",b'PHP',55,30392,,1756,False,b'https://api.github.com/repos/blueimp/jQuery-File-Upload/forks',"IyBqUXVlcnkgRmlsZSBVcGxvYWQKCiMjIENvbnRlbnRzCgotIFtEZXNjcmlw
dGlvbl0oI2Rlc2NyaXB0aW9uKQotIFtEZW1vXSgjZGVtbykKLSBbRmVhdHVy
ZXNdKCNmZWF0dXJlcykKLSBbU2VjdXJpdHldKCNzZWN1cml0eSkKLSBbU2V0
dXBdKCNzZXR1cCkKLSBbUmVxdWlyZW1lbnRzXSgjcmVxdWlyZW1lbnRzKQog
IC0gW01hbmRhdG9yeSByZXF1aXJlbWVudHNdKCNtYW5kYXRvcnktcmVxdWly
ZW1lbnRzKQogIC0gW09wdGlvbmFsIHJlcXVpcmVtZW50c10oI29wdGlvbmFs
LXJlcXVpcmVtZW50cykKICAtIFtDcm9zcy1kb21haW4gcmVxdWlyZW1lbnRz
XSgjY3Jvc3MtZG9tYWluLXJlcXVpcmVtZW50cykKLSBbQnJvd3NlcnNdKCNi
cm93c2VycykKICAtIFtEZXNrdG9wIGJyb3dzZXJzXSgjZGVza3RvcC1icm93
c2VycykKICAtIFtNb2JpbGUgYnJvd3NlcnNdKCNtb2JpbGUtYnJvd3NlcnMp
CiAgLSBbRXh0ZW5kZWQgYnJvd3NlciBzdXBwb3J0IGluZm9ybWF0aW9uXSgj
ZXh0ZW5kZWQtYnJvd3Nlci1zdXBwb3J0LWluZm9ybWF0aW9uKQotIFtUZXN0
aW5nXSgjdGVzdGluZykKLSBbU3VwcG9ydF0oI3N1cHBvcnQpCi0gW0xpY2Vu
c2VdKCNsaWNlbnNlKQoKIyMgRGVzY3JpcHRpb24KCj4gRmlsZSBVcGxvYWQg
d2lkZ2V0IHdpdGggbXVsdGlwbGUgZmlsZSBzZWxlY3Rpb24sIGRyYWcmYW1w
O2Ryb3Agc3VwcG9ydCwKPiBwcm9ncmVzcyBiYXJzLCB2YWxpZGF0aW9uIGFu
ZCBwcmV2aWV3IGltYWdlcywgYXVkaW8gYW5kIHZpZGVvIGZvciBqUXVlcnku
ICAKPiBTdXBwb3J0cyBjcm9zcy1kb21haW4sIGNodW5rZWQgYW5kIHJlc3Vt
YWJsZSBmaWxlIHVwbG9hZHMgYW5kIGNsaWVudC1zaWRlCj4gaW1hZ2UgcmVz
aXppbmcuICAKPiBXb3JrcyB3aXRoIGFueSBzZXJ2ZXItc2lkZSBwbGF0Zm9y
bSAoUEhQLCBQeXRob24sIFJ1Ynkgb24gUmFpbHMsIEphdmEsCj4gTm9kZS5q
cywgR28gZXRjLikgdGhhdCBzdXBwb3J0cyBzdGFuZGFyZCBIVE1MIGZvcm0g
ZmlsZSB1cGxvYWRzLgoKIyMgRGVtbwoKW0RlbW8gRmlsZSBVcGxvYWRdKGh0
dHBzOi8vYmx1ZWltcC5naXRodWIuaW8valF1ZXJ5LUZpbGUtVXBsb2FkLykK
CiMjIEZlYXR1cmVzCgotICoqTXVsdGlwbGUgZmlsZSB1cGxvYWQ6KiogIAog
IEFsbG93cyB0byBzZWxlY3QgbXVsdGlwbGUgZmlsZXMgYXQgb25jZSBhbmQg
dXBsb2FkIHRoZW0gc2ltdWx0YW5lb3VzbHkuCi0gKipEcmFnICYgRHJvcCBz
dXBwb3J0OioqICAKICBBbGxvd3MgdG8gdXBsb2FkIGZpbGVzIGJ5IGRyYWdn
aW5nIHRoZW0gZnJvbSB5b3VyIGRlc2t0b3Agb3IgZmlsZSBtYW5hZ2VyIGFu
ZAogIGRyb3BwaW5nIHRoZW0gb24geW91ciBicm93c2VyIHdpbmRvdy4KLSAq
KlVwbG9hZCBwcm9ncmVzcyBiYXI6KiogIAogIFNob3dzIGEgcHJvZ3Jlc3Mg
YmFyIGluZGljYXRpbmcgdGhlIHVwbG9hZCBwcm9ncmVzcyBmb3IgaW5kaXZp
ZHVhbCBmaWxlcyBhbmQKICBmb3IgYWxsIHVwbG9hZHMgY29tYmluZWQuCi0g
KipDYW5jZWxhYmxlIHVwbG9hZHM6KiogIAogIEluZGl2aWR1YWwgZmlsZSB1
cGxvYWRzIGNhbiBiZSBjYW5jZWxlZCB0byBzdG9wIHRoZSB1cGxvYWQgcHJv
Z3Jlc3MuCi0gKipSZXN1bWFibGUgdXBsb2FkczoqKiAgCiAgQWJvcnRlZCB1
cGxvYWRzIGNhbiBiZSByZXN1bWVkIHdpdGggYnJvd3NlcnMgc3VwcG9ydGlu
ZyB0aGUgQmxvYiBBUEkuCi0gKipDaHVua2VkIHVwbG9hZHM6KiogIAogIExh
cmdlIGZpbGVzIGNhbiBiZSB1cGxvYWRlZCBpbiBzbWFsbGVyIGNodW5rcyB3
aXRoIGJyb3dzZXJzIHN1cHBvcnRpbmcgdGhlCiAgQmxvYiBBUEkuCi0gKipD
bGllbnQtc2lkZSBpbWFnZSByZXNpemluZzoqKiAgCiAgSW1hZ2VzIGNhbiBi
ZSBhdXRvbWF0aWNhbGx5IHJlc2l6ZWQgb24gY2xpZW50LXNpZGUgd2l0aCBi
cm93c2VycyBzdXBwb3J0aW5nCiAgdGhlIHJlcXVpcmVkIEpTIEFQSXMuCi0g
KipQcmV2aWV3IGltYWdlcywgYXVkaW8gYW5kIHZpZGVvOioqICAKICBBIHBy
ZXZpZXcgb2YgaW1hZ2UsIGF1ZGlvIGFuZCB2aWRlbyBmaWxlcyBjYW4gYmUg
ZGlzcGxheWVkIGJlZm9yZSB1cGxvYWRpbmcKICB3aXRoIGJyb3dzZXJzIHN1
cHBvcnRpbmcgdGhlIHJlcXVpcmVkIEFQSXMuCi0gKipObyBicm93c2VyIHBs
dWdpbnMgKGUuZy4gQWRvYmUgRmxhc2gpIHJlcXVpcmVkOioqICAKICBUaGUg
aW1wbGVtZW50YXRpb24gaXMgYmFzZWQgb24gb3BlbiBzdGFuZGFyZHMgbGlr
ZSBIVE1MNSBhbmQgSmF2YVNjcmlwdCBhbmQKICByZXF1aXJlcyBubyBhZGRp
dGlvbmFsIGJyb3dzZXIgcGx1Z2lucy4KLSAqKkdyYWNlZnVsIGZhbGxiYWNr
IGZvciBsZWdhY3kgYnJvd3NlcnM6KiogIAogIFVwbG9hZHMgZmlsZXMgdmlh
IFhNTEh0dHBSZXF1ZXN0cyBpZiBzdXBwb3J0ZWQgYW5kIHVzZXMgaWZyYW1l
cyBhcyBmYWxsYmFjawogIGZvciBsZWdhY3kgYnJvd3NlcnMuCi0gKipIVE1M
IGZpbGUgdXBsb2FkIGZvcm0gZmFsbGJhY2s6KiogIAogIEFsbG93cyBwcm9n
cmVzc2l2ZSBlbmhhbmNlbWVudCBieSB1c2luZyBhIHN0YW5kYXJkIEhUTUwg
ZmlsZSB1cGxvYWQgZm9ybSBhcwogIHdpZGdldCBlbGVtZW50LgotICoqQ3Jv
c3Mtc2l0ZSBmaWxlIHVwbG9hZHM6KiogIAogIFN1cHBvcnRzIHVwbG9hZGlu
ZyBmaWxlcyB0byBhIGRpZmZlcmVudCBkb21haW4gd2l0aCBjcm9zcy1zaXRl
IFhNTEh0dHBSZXF1ZXN0cwogIG9yIGlmcmFtZSByZWRpcmVjdHMuCi0gKipN
dWx0aXBsZSBwbHVnaW4gaW5zdGFuY2VzOioqICAKICBBbGxvd3MgdG8gdXNl
IG11bHRpcGxlIHBsdWdpbiBpbnN0YW5jZXMgb24gdGhlIHNhbWUgd2VicGFn
ZS4KLSAqKkN1c3RvbWl6YWJsZSBhbmQgZXh0ZW5zaWJsZToqKiAgCiAgUHJv
dmlkZXMgYW4gQVBJIHRvIHNldCBpbmRpdmlkdWFsIG9wdGlvbnMgYW5kIGRl
ZmluZSBjYWxsYmFjayBtZXRob2RzIGZvcgogIHZhcmlvdXMgdXBsb2FkIGV2
ZW50cy4KLSAqKk11bHRpcGFydCBhbmQgZmlsZSBjb250ZW50cyBzdHJlYW0g
dXBsb2FkczoqKiAgCiAgRmlsZXMgY2FuIGJlIHVwbG9hZGVkIGFzIHN0YW5k
YXJkICJtdWx0aXBhcnQvZm9ybS1kYXRhIiBvciBmaWxlIGNvbnRlbnRzCiAg
c3RyZWFtIChIVFRQIFBVVCBmaWxlIHVwbG9hZCkuCi0gKipDb21wYXRpYmxl
IHdpdGggYW55IHNlcnZlci1zaWRlIGFwcGxpY2F0aW9uIHBsYXRmb3JtOioq
ICAKICBXb3JrcyB3aXRoIGFueSBzZXJ2ZXItc2lkZSBwbGF0Zm9ybSAoUEhQ
LCBQeXRob24sIFJ1Ynkgb24gUmFpbHMsIEphdmEsCiAgTm9kZS5qcywgR28g
ZXRjLikgdGhhdCBzdXBwb3J0cyBzdGFuZGFyZCBIVE1MIGZvcm0gZmlsZSB1
cGxvYWRzLgoKIyMgU2VjdXJpdHkKCuKaoO+4jyBQbGVhc2UgcmVhZCB0aGUg
W1ZVTE5FUkFCSUxJVElFU10oVlVMTkVSQUJJTElUSUVTLm1kKSBkb2N1bWVu
dCBmb3IgYSBsaXN0IG9mCmZpeGVkIHZ1bG5lcmFiaWxpdGllcwoKUGxlYXNl
IGFsc28gcmVhZCB0aGUgW1NFQ1VSSVRZXShTRUNVUklUWS5tZCkgZG9jdW1l
bnQgZm9yIGluc3RydWN0aW9ucyBvbiBob3cgdG8Kc2VjdXJlbHkgY29uZmln
dXJlIHlvdXIgV2Vic2VydmVyIGZvciBmaWxlIHVwbG9hZHMuCgojIyBTZXR1
cAoKalF1ZXJ5IEZpbGUgVXBsb2FkIGNhbiBiZSBpbnN0YWxsZWQgdmlhIFtO
UE1dKGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS8pOgoKYGBgc2gKbnBtIGluc3Rh
bGwgYmx1ZWltcC1maWxlLXVwbG9hZApgYGAKClRoaXMgYWxsb3dzIHlvdSB0
byBpbmNsdWRlIFtqcXVlcnkuZmlsZXVwbG9hZC5qc10oanMvanF1ZXJ5LmZp
bGV1cGxvYWQuanMpIGFuZAppdHMgZXh0ZW5zaW9ucyB2aWEgYG5vZGVfbW9k
dWxlc2AsIGUuZzoKCmBgYGh0bWwKPHNjcmlwdCBzcmM9Im5vZGVfbW9kdWxl
cy9ibHVlaW1wLWZpbGUtdXBsb2FkL2pzL2pxdWVyeS5maWxldXBsb2FkLmpz
Ij48L3NjcmlwdD4KYGBgCgpUaGUgd2lkZ2V0IGNhbiB0aGVuIGJlIGluaXRp
YWxpemVkIG9uIGEgZmlsZSB1cGxvYWQgZm9ybSB0aGUgZm9sbG93aW5nIHdh
eToKCmBgYGpzCiQoJyNmaWxldXBsb2FkJykuZmlsZXVwbG9hZCgpOwpgYGAK
CkZvciBmdXJ0aGVyIGluZm9ybWF0aW9uLCBwbGVhc2UgcmVmZXIgdG8gdGhl
IGZvbGxvd2luZyBndWlkZXM6CgotIFtNYWluIGRvY3VtZW50YXRpb24gcGFn
ZV0oaHR0cHM6Ly9naXRodWIuY29tL2JsdWVpbXAvalF1ZXJ5LUZpbGUtVXBs
b2FkL3dpa2kpCi0gW0xpc3Qgb2YgYWxsIGF2YWlsYWJsZSBPcHRpb25zXSho
dHRwczovL2dpdGh1Yi5jb20vYmx1ZWltcC9qUXVlcnktRmlsZS1VcGxvYWQv
d2lraS9PcHRpb25zKQotIFtUaGUgcGx1Z2luIEFQSV0oaHR0cHM6Ly9naXRo
dWIuY29tL2JsdWVpbXAvalF1ZXJ5LUZpbGUtVXBsb2FkL3dpa2kvQVBJKQot
IFtIb3cgdG8gc2V0dXAgdGhlIHBsdWdpbiBvbiB5b3VyIHdlYnNpdGVdKGh0
dHBzOi8vZ2l0aHViLmNvbS9ibHVlaW1wL2pRdWVyeS1GaWxlLVVwbG9hZC93
aWtpL1NldHVwKQotIFtIb3cgdG8gdXNlIG9ubHkgdGhlIGJhc2ljIHBsdWdp
bi5dKGh0dHBzOi8vZ2l0aHViLmNvbS9ibHVlaW1wL2pRdWVyeS1GaWxlLVVw
bG9hZC93aWtpL0Jhc2ljLXBsdWdpbikKCiMjIFJlcXVpcmVtZW50cwoKIyMj
IE1hbmRhdG9yeSByZXF1aXJlbWVudHMKCi0gW2pRdWVyeV0oaHR0cHM6Ly9q
cXVlcnkuY29tLykgdjEuNisKLSBbalF1ZXJ5IFVJIHdpZGdldCBmYWN0b3J5
XShodHRwczovL2FwaS5qcXVlcnl1aS5jb20valF1ZXJ5LndpZGdldC8pIHYx
LjkrCiAgKGluY2x1ZGVkKTogUmVxdWlyZWQgZm9yIHRoZSBiYXNpYyBGaWxl
IFVwbG9hZCBwbHVnaW4sIGJ1dCB2ZXJ5IGxpZ2h0d2VpZ2h0CiAgd2l0aG91
dCBhbnkgb3RoZXIgZGVwZW5kZW5jaWVzIGZyb20gdGhlIGpRdWVyeSBVSSBz
dWl0ZS4KLSBbalF1ZXJ5IElmcmFtZSBUcmFuc3BvcnQgcGx1Z2luXShodHRw
czovL2dpdGh1Yi5jb20vYmx1ZWltcC9qUXVlcnktRmlsZS1VcGxvYWQvYmxv
Yi9tYXN0ZXIvanMvanF1ZXJ5LmlmcmFtZS10cmFuc3BvcnQuanMpCiAgKGlu
Y2x1ZGVkKTogUmVxdWlyZWQgZm9yCiAgW2Jyb3dzZXJzIHdpdGhvdXQgWEhS
IGZpbGUgdXBsb2FkIHN1cHBvcnRdKGh0dHBzOi8vZ2l0aHViLmNvbS9ibHVl
aW1wL2pRdWVyeS1GaWxlLVVwbG9hZC93aWtpL0Jyb3dzZXItc3VwcG9ydCku
CgojIyMgT3B0aW9uYWwgcmVxdWlyZW1lbnRzCgotIFtKYXZhU2NyaXB0IFRl
bXBsYXRlcyBlbmdpbmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9ibHVlaW1wL0ph
dmFTY3JpcHQtVGVtcGxhdGVzKQogIHYzKzogVXNlZCB0byByZW5kZXIgdGhl
IHNlbGVjdGVkIGFuZCB1cGxvYWRlZCBmaWxlcyBmb3IgdGhlIEJhc2ljIFBs
dXMgVUkgYW5kCiAgalF1ZXJ5IFVJIHZlcnNpb25zLgotIFtKYXZhU2NyaXB0
IExvYWQgSW1hZ2UgbGlicmFyeV0oaHR0cHM6Ly9naXRodWIuY29tL2JsdWVp
bXAvSmF2YVNjcmlwdC1Mb2FkLUltYWdlKQogIHYyKzogUmVxdWlyZWQgZm9y
IHRoZSBpbWFnZSBwcmV2aWV3cyBhbmQgcmVzaXppbmcgZnVuY3Rpb25hbGl0
eS4KLSBbSmF2YVNjcmlwdCBDYW52YXMgdG8gQmxvYiBwb2x5ZmlsbF0oaHR0
cHM6Ly9naXRodWIuY29tL2JsdWVpbXAvSmF2YVNjcmlwdC1DYW52YXMtdG8t
QmxvYikKICB2Mys6UmVxdWlyZWQgZm9yIHRoZSBpbWFnZSBwcmV2aWV3cyBh
bmQgcmVzaXppbmcgZnVuY3Rpb25hbGl0eS4KLSBbYmx1ZWltcCBHYWxsZXJ5
XShodHRwczovL2dpdGh1Yi5jb20vYmx1ZWltcC9HYWxsZXJ5KSB2Mis6IFVz
ZWQgdG8gZGlzcGxheSB0aGUKICB1cGxvYWRlZCBpbWFnZXMgaW4gYSBsaWdo
dGJveC4KLSBbQm9vdHN0cmFwXShodHRwczovL2dldGJvb3RzdHJhcC5jb20v
KSB2Mys6IFVzZWQgZm9yIHRoZSBkZW1vIGRlc2lnbi4KLSBbR2x5cGhpY29u
c10oaHR0cHM6Ly9nbHlwaGljb25zLmNvbS8pIEljb24gc2V0IHVzZWQgYnkg
Qm9vdHN0cmFwLgoKIyMjIENyb3NzLWRvbWFpbiByZXF1aXJlbWVudHMKCltD
cm9zcy1kb21haW4gRmlsZSBVcGxvYWRzXShodHRwczovL2dpdGh1Yi5jb20v
Ymx1ZWltcC9qUXVlcnktRmlsZS1VcGxvYWQvd2lraS9Dcm9zcy1kb21haW4t
dXBsb2FkcykKdXNpbmcgdGhlCltJZnJhbWUgVHJhbnNwb3J0IHBsdWdpbl0o
aHR0cHM6Ly9naXRodWIuY29tL2JsdWVpbXAvalF1ZXJ5LUZpbGUtVXBsb2Fk
L2Jsb2IvbWFzdGVyL2pzL2pxdWVyeS5pZnJhbWUtdHJhbnNwb3J0LmpzKQpy
ZXF1aXJlIGEgcmVkaXJlY3QgYmFjayB0byB0aGUgb3JpZ2luIHNlcnZlciB0
byByZXRyaWV2ZSB0aGUgdXBsb2FkIHJlc3VsdHMuIFRoZQpbZXhhbXBsZSBp
bXBsZW1lbnRhdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL2JsdWVpbXAvalF1
ZXJ5LUZpbGUtVXBsb2FkL2Jsb2IvbWFzdGVyL2pzL21haW4uanMpCm1ha2Vz
IHVzZSBvZgpbcmVzdWx0Lmh0bWxdKGh0dHBzOi8vZ2l0aHViLmNvbS9ibHVl
aW1wL2pRdWVyeS1GaWxlLVVwbG9hZC9ibG9iL21hc3Rlci9jb3JzL3Jlc3Vs
dC5odG1sKQphcyBhIHN0YXRpYyByZWRpcmVjdCBwYWdlIGZvciB0aGUgb3Jp
Z2luIHNlcnZlci4KClRoZSByZXBvc2l0b3J5IGFsc28gaW5jbHVkZXMgdGhl
CltqUXVlcnkgWERvbWFpblJlcXVlc3QgVHJhbnNwb3J0IHBsdWdpbl0oaHR0
cHM6Ly9naXRodWIuY29tL2JsdWVpbXAvalF1ZXJ5LUZpbGUtVXBsb2FkL2Js
b2IvbWFzdGVyL2pzL2NvcnMvanF1ZXJ5Lnhkci10cmFuc3BvcnQuanMpLAp3
aGljaCBlbmFibGVzIGxpbWl0ZWQgY3Jvc3MtZG9tYWluIEFKQVggcmVxdWVz
dHMgaW4gTWljcm9zb2Z0IEludGVybmV0IEV4cGxvcmVyCjggYW5kIDkgKElF
IDEwIHN1cHBvcnRzIGNyb3NzLWRvbWFpbiBYSFIgcmVxdWVzdHMpLiAgClRo
ZSBYRG9tYWluUmVxdWVzdCBvYmplY3QgYWxsb3dzIEdFVCBhbmQgUE9TVCBy
ZXF1ZXN0cyBvbmx5IGFuZCBkb2Vzbid0IHN1cHBvcnQKZmlsZSB1cGxvYWRz
LiBJdCBpcyB1c2VkIG9uIHRoZQpbRGVtb10oaHR0cHM6Ly9ibHVlaW1wLmdp
dGh1Yi5pby9qUXVlcnktRmlsZS1VcGxvYWQvKSB0byBkZWxldGUgdXBsb2Fk
ZWQgZmlsZXMKZnJvbSB0aGUgY3Jvc3MtZG9tYWluIGRlbW8gZmlsZSB1cGxv
YWQgc2VydmljZS4KCiMjIEJyb3dzZXJzCgojIyMgRGVza3RvcCBicm93c2Vy
cwoKVGhlIEZpbGUgVXBsb2FkIHBsdWdpbiBpcyByZWd1bGFybHkgdGVzdGVk
IHdpdGggdGhlIGxhdGVzdCBicm93c2VyIHZlcnNpb25zIGFuZApzdXBwb3J0
cyB0aGUgZm9sbG93aW5nIG1pbmltYWwgdmVyc2lvbnM6CgotIEdvb2dsZSBD
aHJvbWUKLSBBcHBsZSBTYWZhcmkgNC4wKwotIE1vemlsbGEgRmlyZWZveCAz
LjArCi0gT3BlcmEgMTEuMCsKLSBNaWNyb3NvZnQgSW50ZXJuZXQgRXhwbG9y
ZXIgNi4wKwoKIyMjIE1vYmlsZSBicm93c2VycwoKVGhlIEZpbGUgVXBsb2Fk
IHBsdWdpbiBoYXMgYmVlbiB0ZXN0ZWQgd2l0aCBhbmQgc3VwcG9ydHMgdGhl
IGZvbGxvd2luZyBtb2JpbGUKYnJvd3NlcnM6CgotIEFwcGxlIFNhZmFyaSBv
biBpT1MgNi4wKwotIEdvb2dsZSBDaHJvbWUgb24gaU9TIDYuMCsKLSBHb29n
bGUgQ2hyb21lIG9uIEFuZHJvaWQgNC4wKwotIERlZmF1bHQgQnJvd3NlciBv
biBBbmRyb2lkIDIuMysKLSBPcGVyYSBNb2JpbGUgMTIuMCsKCiMjIyBFeHRl
bmRlZCBicm93c2VyIHN1cHBvcnQgaW5mb3JtYXRpb24KCkZvciBhIGRldGFp
bGVkIG92ZXJ2aWV3IG9mIHRoZSBmZWF0dXJlcyBzdXBwb3J0ZWQgYnkgZWFj
aCBicm93c2VyIHZlcnNpb24gYW5kCmtub3duIG9wZXJhdGluZyBzeXN0ZW0g
LyBicm93c2VyIGJ1Z3MsIHBsZWFzZSBoYXZlIGEgbG9vayBhdCB0aGUKW0V4
dGVuZGVkIGJyb3dzZXIgc3VwcG9ydCBpbmZvcm1hdGlvbl0oaHR0cHM6Ly9n
aXRodWIuY29tL2JsdWVpbXAvalF1ZXJ5LUZpbGUtVXBsb2FkL3dpa2kvQnJv
d3Nlci1zdXBwb3J0KS4KCiMjIFRlc3RpbmcKClRoZSBwcm9qZWN0IGNvbWVz
IHdpdGggdGhyZWUgc2V0cyBvZiB0ZXN0czoKCjEuIENvZGUgbGludGluZyB1
c2luZyBbRVNMaW50XShodHRwczovL2VzbGludC5vcmcvKS4KMi4gVW5pdCB0
ZXN0cyB1c2luZyBbTW9jaGFdKGh0dHBzOi8vbW9jaGFqcy5vcmcvKS4KMy4g
RW5kLXRvLWVuZCB0ZXN0cyB1c2luZyBbYmx1ZWltcC93ZGlvXShodHRwczov
L2dpdGh1Yi5jb20vYmx1ZWltcC93ZGlvKS4KClRvIHJ1biB0aGUgdGVzdHMs
IGZvbGxvdyB0aGVzZSBzdGVwczoKCjEuIFN0YXJ0IFtEb2NrZXJdKGh0dHBz
Oi8vZG9jcy5kb2NrZXIuY29tLykuCjIuIEluc3RhbGwgZGV2ZWxvcG1lbnQg
ZGVwZW5kZW5jaWVzOgogICBgYGBzaAogICBucG0gaW5zdGFsbAogICBgYGAK
My4gUnVuIHRoZSB0ZXN0czoKICAgYGBgc2gKICAgbnBtIHRlc3QKICAgYGBg
CgojIyBTdXBwb3J0CgpUaGlzIHByb2plY3QgaXMgYWN0aXZlbHkgbWFpbnRh
aW5lZCwgYnV0IHRoZXJlIGlzIG5vIG9mZmljaWFsIHN1cHBvcnQgY2hhbm5l
bC4gIApJZiB5b3UgaGF2ZSBhIHF1ZXN0aW9uIHRoYXQgYW5vdGhlciBkZXZl
bG9wZXIgbWlnaHQgaGVscCB5b3Ugd2l0aCwgcGxlYXNlIHBvc3QKdG8KW1N0
YWNrIE92ZXJmbG93XShodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0
aW9ucy90YWdnZWQvYmx1ZWltcCtqcXVlcnkrZmlsZS11cGxvYWQpCmFuZCB0
YWcgeW91ciBxdWVzdGlvbiB3aXRoIGBibHVlaW1wIGpxdWVyeSBmaWxlIHVw
bG9hZGAuCgojIyBMaWNlbnNlCgpSZWxlYXNlZCB1bmRlciB0aGUgW01JVCBs
aWNlbnNlXShodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL01JVCku
Cg==
",,30392,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"bmFtZTogVGVzdAoKb246IFtwdXNoLCBwdWxsX3JlcXVlc3RdCgpqb2JzOgog
IGxpbnQ6CiAgICBydW5zLW9uOiB1YnVudHUtbGF0ZXN0CiAgICBzdGVwczoK
ICAgICAgLSB1c2VzOiBhY3Rpb25zL2NoZWNrb3V0QHYxCiAgICAgIC0gbmFt
ZTogU2V0dXAgTm9kZS5qcwogICAgICAgIHVzZXM6IGFjdGlvbnMvc2V0dXAt
bm9kZUB2MQogICAgICAgIHdpdGg6CiAgICAgICAgICBub2RlLXZlcnNpb246
IDEyLngKICAgICAgLSBuYW1lOiBucG0gaW5zdGFsbAogICAgICAgIHJ1bjog
bnBtIGluc3RhbGwKICAgICAgICBlbnY6CiAgICAgICAgICBDSTogdHJ1ZQog
ICAgICAtIG5hbWU6IGxpbnQKICAgICAgICBydW46IG5wbSBydW4gbGludAog
ICAgICAgIGVudjoKICAgICAgICAgIENJOiB0cnVlCgogIG1vY2hhOgogICAg
cnVucy1vbjogdWJ1bnR1LWxhdGVzdAogICAgc3RlcHM6CiAgICAgIC0gdXNl
czogYWN0aW9ucy9jaGVja291dEB2MQogICAgICAtIG5hbWU6IGNobW9kCiAg
ICAgICAgcnVuOiBjaG1vZCAtUiA3Nzcgc2VydmVyL3BocC9maWxlcwogICAg
ICAtIG5hbWU6IGRvY2tlci1jb21wb3NlIGJ1aWxkCiAgICAgICAgcnVuOiBk
b2NrZXItY29tcG9zZSBidWlsZCBleGFtcGxlIG1vY2hhCiAgICAgIC0gbmFt
ZTogbW9jaGEKICAgICAgICBydW46IGRvY2tlci1jb21wb3NlIHJ1biAtLXJt
IG1vY2hhCiAgICAgIC0gbmFtZTogZG9ja2VyLWNvbXBvc2UgbG9ncwogICAg
ICAgIGlmOiBhbHdheXMoKQogICAgICAgIHJ1bjogZG9ja2VyLWNvbXBvc2Ug
bG9ncyBleGFtcGxlCiAgICAgIC0gbmFtZTogZG9ja2VyLWNvbXBvc2UgZG93
bgogICAgICAgIGlmOiBhbHdheXMoKQogICAgICAgIHJ1bjogZG9ja2VyLWNv
bXBvc2UgZG93biAtdgoKICB3ZGlvLWNocm9tZToKICAgIHJ1bnMtb246IHVi
dW50dS1sYXRlc3QKICAgIHN0ZXBzOgogICAgICAtIHVzZXM6IGFjdGlvbnMv
Y2hlY2tvdXRAdjEKICAgICAgLSBuYW1lOiBjaG1vZAogICAgICAgIHJ1bjog
Y2htb2QgLVIgNzc3IHNlcnZlci9waHAvZmlsZXMgd2Rpby9yZXBvcnRzCiAg
ICAgIC0gbmFtZTogZG9ja2VyLWNvbXBvc2UgYnVpbGQKICAgICAgICBydW46
IGRvY2tlci1jb21wb3NlIGJ1aWxkIGV4YW1wbGUKICAgICAgLSBuYW1lOiB3
ZGlvIGNocm9tZQogICAgICAgIHJ1bjogZG9ja2VyLWNvbXBvc2UgcnVuIC0t
cm0gd2RpbwogICAgICAtIG5hbWU6IGRvY2tlci1jb21wb3NlIGxvZ3MKICAg
ICAgICBpZjogYWx3YXlzKCkKICAgICAgICBydW46IGRvY2tlci1jb21wb3Nl
IGxvZ3MgZXhhbXBsZQogICAgICAtIG5hbWU6IGRvY2tlci1jb21wb3NlIGRv
d24KICAgICAgICBpZjogYWx3YXlzKCkKICAgICAgICBydW46IGRvY2tlci1j
b21wb3NlIGRvd24gLXYKICAgICAgLSBuYW1lOiBVcGxvYWQgcmVwb3J0cwog
ICAgICAgIGlmOiBhbHdheXMoKQogICAgICAgIHVzZXM6IGFjdGlvbnMvdXBs
b2FkLWFydGlmYWN0QG1hc3RlcgogICAgICAgIHdpdGg6CiAgICAgICAgICBu
YW1lOiByZXBvcnRzCiAgICAgICAgICBwYXRoOiB3ZGlvL3JlcG9ydHMKCiAg
d2Rpby1maXJlZm94OgogICAgcnVucy1vbjogdWJ1bnR1LWxhdGVzdAogICAg
c3RlcHM6CiAgICAgIC0gdXNlczogYWN0aW9ucy9jaGVja291dEB2MQogICAg
ICAtIG5hbWU6IGNobW9kCiAgICAgICAgcnVuOiBjaG1vZCAtUiA3Nzcgc2Vy
dmVyL3BocC9maWxlcyB3ZGlvL3JlcG9ydHMKICAgICAgLSBuYW1lOiBkb2Nr
ZXItY29tcG9zZSBidWlsZAogICAgICAgIHJ1bjogZG9ja2VyLWNvbXBvc2Ug
YnVpbGQgZXhhbXBsZQogICAgICAtIG5hbWU6IHdkaW8gZmlyZWZveAogICAg
ICAgIHJ1bjogZG9ja2VyLWNvbXBvc2UgcnVuIC0tcm0gd2RpbyBmaXJlZm94
CiAgICAgIC0gbmFtZTogZG9ja2VyLWNvbXBvc2UgbG9ncwogICAgICAgIGlm
OiBhbHdheXMoKQogICAgICAgIHJ1bjogZG9ja2VyLWNvbXBvc2UgbG9ncyBl
eGFtcGxlCiAgICAgIC0gbmFtZTogZG9ja2VyLWNvbXBvc2UgZG93bgogICAg
ICAgIGlmOiBhbHdheXMoKQogICAgICAgIHJ1bjogZG9ja2VyLWNvbXBvc2Ug
ZG93biAtdgogICAgICAtIG5hbWU6IFVwbG9hZCByZXBvcnRzCiAgICAgICAg
aWY6IGFsd2F5cygpCiAgICAgICAgdXNlczogYWN0aW9ucy91cGxvYWQtYXJ0
aWZhY3RAbWFzdGVyCiAgICAgICAgd2l0aDoKICAgICAgICAgIG5hbWU6IHJl
cG9ydHMKICAgICAgICAgIHBhdGg6IHdkaW8vcmVwb3J0cwo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
