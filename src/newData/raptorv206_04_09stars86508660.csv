name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'mysql',7083242,"b""Go MySQL Driver is a MySQL driver for Go's (golang) database/sql package""",b'Go',57,8660,,415,False,b'https://api.github.com/repos/go-sql-driver/mysql/forks',"IyBHby1NeVNRTC1Ecml2ZXIKCkEgTXlTUUwtRHJpdmVyIGZvciBHbydzIFtk
YXRhYmFzZS9zcWxdKGh0dHBzOi8vZ29sYW5nLm9yZy9wa2cvZGF0YWJhc2Uv
c3FsLykgcGFja2FnZQoKIVtHby1NeVNRTC1Ecml2ZXIgbG9nb10oaHR0cHM6
Ly9yYXcuZ2l0aHViLmNvbS93aWtpL2dvLXNxbC1kcml2ZXIvbXlzcWwvZ29t
eXNxbF9tLnBuZyAiR29sYW5nIEdvcGhlciBob2xkaW5nIHRoZSBNeVNRTCBE
b2xwaGluIikKCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLQogICogW0ZlYXR1cmVzXSgjZmVhdHVyZXMpCiAgKiBbUmVxdWlyZW1l
bnRzXSgjcmVxdWlyZW1lbnRzKQogICogW0luc3RhbGxhdGlvbl0oI2luc3Rh
bGxhdGlvbikKICAqIFtVc2FnZV0oI3VzYWdlKQogICAgKiBbRFNOIChEYXRh
IFNvdXJjZSBOYW1lKV0oI2Rzbi1kYXRhLXNvdXJjZS1uYW1lKQogICAgICAq
IFtQYXNzd29yZF0oI3Bhc3N3b3JkKQogICAgICAqIFtQcm90b2NvbF0oI3By
b3RvY29sKQogICAgICAqIFtBZGRyZXNzXSgjYWRkcmVzcykKICAgICAgKiBb
UGFyYW1ldGVyc10oI3BhcmFtZXRlcnMpCiAgICAgICogW0V4YW1wbGVzXSgj
ZXhhbXBsZXMpCiAgICAqIFtDb25uZWN0aW9uIHBvb2wgYW5kIHRpbWVvdXRz
XSgjY29ubmVjdGlvbi1wb29sLWFuZC10aW1lb3V0cykKICAgICogW2NvbnRl
eHQuQ29udGV4dCBTdXBwb3J0XSgjY29udGV4dGNvbnRleHQtc3VwcG9ydCkK
ICAgICogW0NvbHVtblR5cGUgU3VwcG9ydF0oI2NvbHVtbnR5cGUtc3VwcG9y
dCkKICAgICogW0xPQUQgREFUQSBMT0NBTCBJTkZJTEUgc3VwcG9ydF0oI2xv
YWQtZGF0YS1sb2NhbC1pbmZpbGUtc3VwcG9ydCkKICAgICogW3RpbWUuVGlt
ZSBzdXBwb3J0XSgjdGltZXRpbWUtc3VwcG9ydCkKICAgICogW1VuaWNvZGUg
c3VwcG9ydF0oI3VuaWNvZGUtc3VwcG9ydCkKICAqIFtUZXN0aW5nIC8gRGV2
ZWxvcG1lbnRdKCN0ZXN0aW5nLS1kZXZlbG9wbWVudCkKICAqIFtMaWNlbnNl
XSgjbGljZW5zZSkKCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLQoKIyMgRmVhdHVyZXMKICAqIExpZ2h0d2VpZ2h0IGFuZCBbZmFz
dF0oaHR0cHM6Ly9naXRodWIuY29tL2dvLXNxbC1kcml2ZXIvc3FsLWJlbmNo
bWFyayAiZ29sYW5nIE15U1FMLURyaXZlciBwZXJmb3JtYW5jZSIpCiAgKiBO
YXRpdmUgR28gaW1wbGVtZW50YXRpb24uIE5vIEMtYmluZGluZ3MsIGp1c3Qg
cHVyZSBHbwogICogQ29ubmVjdGlvbnMgb3ZlciBUQ1AvSVB2NCwgVENQL0lQ
djYsIFVuaXggZG9tYWluIHNvY2tldHMgb3IgW2N1c3RvbSBwcm90b2NvbHNd
KGh0dHBzOi8vZ29kb2Mub3JnL2dpdGh1Yi5jb20vZ28tc3FsLWRyaXZlci9t
eXNxbCNEaWFsRnVuYykKICAqIEF1dG9tYXRpYyBoYW5kbGluZyBvZiBicm9r
ZW4gY29ubmVjdGlvbnMKICAqIEF1dG9tYXRpYyBDb25uZWN0aW9uIFBvb2xp
bmcgKihieSBkYXRhYmFzZS9zcWwgcGFja2FnZSkqCiAgKiBTdXBwb3J0cyBx
dWVyaWVzIGxhcmdlciB0aGFuIDE2TUIKICAqIEZ1bGwgW2BzcWwuUmF3Qnl0
ZXNgXShodHRwczovL2dvbGFuZy5vcmcvcGtnL2RhdGFiYXNlL3NxbC8jUmF3
Qnl0ZXMpIHN1cHBvcnQuCiAgKiBJbnRlbGxpZ2VudCBgTE9ORyBEQVRBYCBo
YW5kbGluZyBpbiBwcmVwYXJlZCBzdGF0ZW1lbnRzCiAgKiBTZWN1cmUgYExP
QUQgREFUQSBMT0NBTCBJTkZJTEVgIHN1cHBvcnQgd2l0aCBmaWxlIFdoaXRl
bGlzdGluZyBhbmQgYGlvLlJlYWRlcmAgc3VwcG9ydAogICogT3B0aW9uYWwg
YHRpbWUuVGltZWAgcGFyc2luZwogICogT3B0aW9uYWwgcGxhY2Vob2xkZXIg
aW50ZXJwb2xhdGlvbgoKIyMgUmVxdWlyZW1lbnRzCiAgKiBHbyAxLjkgb3Ig
aGlnaGVyLiBXZSBhaW0gdG8gc3VwcG9ydCB0aGUgMyBsYXRlc3QgdmVyc2lv
bnMgb2YgR28uCiAgKiBNeVNRTCAoNC4xKyksIE1hcmlhREIsIFBlcmNvbmEg
U2VydmVyLCBHb29nbGUgQ2xvdWRTUUwgb3IgU3BoaW54ICgyLjIuMyspCgot
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCiMjIElu
c3RhbGxhdGlvbgpTaW1wbGUgaW5zdGFsbCB0aGUgcGFja2FnZSB0byB5b3Vy
IFskR09QQVRIXShodHRwczovL2dpdGh1Yi5jb20vZ29sYW5nL2dvL3dpa2kv
R09QQVRIICJHT1BBVEgiKSB3aXRoIHRoZSBbZ28gdG9vbF0oaHR0cHM6Ly9n
b2xhbmcub3JnL2NtZC9nby8gImdvIGNvbW1hbmQiKSBmcm9tIHNoZWxsOgpg
YGBiYXNoCiQgZ28gZ2V0IC11IGdpdGh1Yi5jb20vZ28tc3FsLWRyaXZlci9t
eXNxbApgYGAKTWFrZSBzdXJlIFtHaXQgaXMgaW5zdGFsbGVkXShodHRwczov
L2dpdC1zY20uY29tL2Rvd25sb2Fkcykgb24geW91ciBtYWNoaW5lIGFuZCBp
biB5b3VyIHN5c3RlbSdzIGBQQVRIYC4KCiMjIFVzYWdlCl9HbyBNeVNRTCBE
cml2ZXJfIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIEdvJ3MgYGRhdGFiYXNl
L3NxbC9kcml2ZXJgIGludGVyZmFjZS4gWW91IG9ubHkgbmVlZCB0byBpbXBv
cnQgdGhlIGRyaXZlciBhbmQgY2FuIHVzZSB0aGUgZnVsbCBbYGRhdGFiYXNl
L3NxbGBdKGh0dHBzOi8vZ29sYW5nLm9yZy9wa2cvZGF0YWJhc2Uvc3FsLykg
QVBJIHRoZW4uCgpVc2UgYG15c3FsYCBhcyBgZHJpdmVyTmFtZWAgYW5kIGEg
dmFsaWQgW0RTTl0oI2Rzbi1kYXRhLXNvdXJjZS1uYW1lKSAgYXMgYGRhdGFT
b3VyY2VOYW1lYDoKYGBgZ28KaW1wb3J0ICJkYXRhYmFzZS9zcWwiCmltcG9y
dCBfICJnaXRodWIuY29tL2dvLXNxbC1kcml2ZXIvbXlzcWwiCgpkYiwgZXJy
IDo9IHNxbC5PcGVuKCJteXNxbCIsICJ1c2VyOnBhc3N3b3JkQC9kYm5hbWUi
KQpgYGAKCltFeGFtcGxlcyBhcmUgYXZhaWxhYmxlIGluIG91ciBXaWtpXSho
dHRwczovL2dpdGh1Yi5jb20vZ28tc3FsLWRyaXZlci9teXNxbC93aWtpL0V4
YW1wbGVzICJHby1NeVNRTC1Ecml2ZXIgRXhhbXBsZXMiKS4KCgojIyMgRFNO
IChEYXRhIFNvdXJjZSBOYW1lKQoKVGhlIERhdGEgU291cmNlIE5hbWUgaGFz
IGEgY29tbW9uIGZvcm1hdCwgbGlrZSBlLmcuIFtQRUFSIERCXShodHRwOi8v
cGVhci5waHAubmV0L21hbnVhbC9lbi9wYWNrYWdlLmRhdGFiYXNlLmRiLmlu
dHJvLWRzbi5waHApIHVzZXMgaXQsIGJ1dCB3aXRob3V0IHR5cGUtcHJlZml4
IChvcHRpb25hbCBwYXJ0cyBtYXJrZWQgYnkgc3F1YXJlZCBicmFja2V0cyk6
CmBgYApbdXNlcm5hbWVbOnBhc3N3b3JkXUBdW3Byb3RvY29sWyhhZGRyZXNz
KV1dL2RibmFtZVs/cGFyYW0xPXZhbHVlMSYuLi4mcGFyYW1OPXZhbHVlTl0K
YGBgCgpBIERTTiBpbiBpdHMgZnVsbGVzdCBmb3JtOgpgYGAKdXNlcm5hbWU6
cGFzc3dvcmRAcHJvdG9jb2woYWRkcmVzcykvZGJuYW1lP3BhcmFtPXZhbHVl
CmBgYAoKRXhjZXB0IGZvciB0aGUgZGF0YWJhc2VuYW1lLCBhbGwgdmFsdWVz
IGFyZSBvcHRpb25hbC4gU28gdGhlIG1pbmltYWwgRFNOIGlzOgpgYGAKL2Ri
bmFtZQpgYGAKCklmIHlvdSBkbyBub3Qgd2FudCB0byBwcmVzZWxlY3QgYSBk
YXRhYmFzZSwgbGVhdmUgYGRibmFtZWAgZW1wdHk6CmBgYAovCmBgYApUaGlz
IGhhcyB0aGUgc2FtZSBlZmZlY3QgYXMgYW4gZW1wdHkgRFNOIHN0cmluZzoK
YGBgCgpgYGAKCkFsdGVybmF0aXZlbHksIFtDb25maWcuRm9ybWF0RFNOXSho
dHRwczovL2dvZG9jLm9yZy9naXRodWIuY29tL2dvLXNxbC1kcml2ZXIvbXlz
cWwjQ29uZmlnLkZvcm1hdERTTikgY2FuIGJlIHVzZWQgdG8gY3JlYXRlIGEg
RFNOIHN0cmluZyBieSBmaWxsaW5nIGEgc3RydWN0LgoKIyMjIyBQYXNzd29y
ZApQYXNzd29yZHMgY2FuIGNvbnNpc3Qgb2YgYW55IGNoYXJhY3Rlci4gRXNj
YXBpbmcgaXMgKipub3QqKiBuZWNlc3NhcnkuCgojIyMjIFByb3RvY29sClNl
ZSBbbmV0LkRpYWxdKGh0dHBzOi8vZ29sYW5nLm9yZy9wa2cvbmV0LyNEaWFs
KSBmb3IgbW9yZSBpbmZvcm1hdGlvbiB3aGljaCBuZXR3b3JrcyBhcmUgYXZh
aWxhYmxlLgpJbiBnZW5lcmFsIHlvdSBzaG91bGQgdXNlIGFuIFVuaXggZG9t
YWluIHNvY2tldCBpZiBhdmFpbGFibGUgYW5kIFRDUCBvdGhlcndpc2UgZm9y
IGJlc3QgcGVyZm9ybWFuY2UuCgojIyMjIEFkZHJlc3MKRm9yIFRDUCBhbmQg
VURQIG5ldHdvcmtzLCBhZGRyZXNzZXMgaGF2ZSB0aGUgZm9ybSBgaG9zdFs6
cG9ydF1gLgpJZiBgcG9ydGAgaXMgb21pdHRlZCwgdGhlIGRlZmF1bHQgcG9y
dCB3aWxsIGJlIHVzZWQuCklmIGBob3N0YCBpcyBhIGxpdGVyYWwgSVB2NiBh
ZGRyZXNzLCBpdCBtdXN0IGJlIGVuY2xvc2VkIGluIHNxdWFyZSBicmFja2V0
cy4KVGhlIGZ1bmN0aW9ucyBbbmV0LkpvaW5Ib3N0UG9ydF0oaHR0cHM6Ly9n
b2xhbmcub3JnL3BrZy9uZXQvI0pvaW5Ib3N0UG9ydCkgYW5kIFtuZXQuU3Bs
aXRIb3N0UG9ydF0oaHR0cHM6Ly9nb2xhbmcub3JnL3BrZy9uZXQvI1NwbGl0
SG9zdFBvcnQpIG1hbmlwdWxhdGUgYWRkcmVzc2VzIGluIHRoaXMgZm9ybS4K
CkZvciBVbml4IGRvbWFpbiBzb2NrZXRzIHRoZSBhZGRyZXNzIGlzIHRoZSBh
YnNvbHV0ZSBwYXRoIHRvIHRoZSBNeVNRTC1TZXJ2ZXItc29ja2V0LCBlLmcu
IGAvdmFyL3J1bi9teXNxbGQvbXlzcWxkLnNvY2tgIG9yIGAvdG1wL215c3Fs
LnNvY2tgLgoKIyMjIyBQYXJhbWV0ZXJzCipQYXJhbWV0ZXJzIGFyZSBjYXNl
LXNlbnNpdGl2ZSEqCgpOb3RpY2UgdGhhdCBhbnkgb2YgYHRydWVgLCBgVFJV
RWAsIGBUcnVlYCBvciBgMWAgaXMgYWNjZXB0ZWQgdG8gc3RhbmQgZm9yIGEg
dHJ1ZSBib29sZWFuIHZhbHVlLiBOb3Qgc3VycHJpc2luZ2x5LCBmYWxzZSBj
YW4gYmUgc3BlY2lmaWVkIGFzIGFueSBvZjogYGZhbHNlYCwgYEZBTFNFYCwg
YEZhbHNlYCBvciBgMGAuCgojIyMjIyBgYWxsb3dBbGxGaWxlc2AKCmBgYApU
eXBlOiAgICAgICAgICAgYm9vbApWYWxpZCBWYWx1ZXM6ICAgdHJ1ZSwgZmFs
c2UKRGVmYXVsdDogICAgICAgIGZhbHNlCmBgYAoKYGFsbG93QWxsRmlsZXM9
dHJ1ZWAgZGlzYWJsZXMgdGhlIGZpbGUgV2hpdGVsaXN0IGZvciBgTE9BRCBE
QVRBIExPQ0FMIElORklMRWAgYW5kIGFsbG93cyAqYWxsKiBmaWxlcy4KWypN
aWdodCBiZSBpbnNlY3VyZSEqXShodHRwOi8vZGV2Lm15c3FsLmNvbS9kb2Mv
cmVmbWFuLzUuNy9lbi9sb2FkLWRhdGEtbG9jYWwuaHRtbCkKCiMjIyMjIGBh
bGxvd0NsZWFydGV4dFBhc3N3b3Jkc2AKCmBgYApUeXBlOiAgICAgICAgICAg
Ym9vbApWYWxpZCBWYWx1ZXM6ICAgdHJ1ZSwgZmFsc2UKRGVmYXVsdDogICAg
ICAgIGZhbHNlCmBgYAoKYGFsbG93Q2xlYXJ0ZXh0UGFzc3dvcmRzPXRydWVg
IGFsbG93cyB1c2luZyB0aGUgW2NsZWFydGV4dCBjbGllbnQgc2lkZSBwbHVn
aW5dKGh0dHA6Ly9kZXYubXlzcWwuY29tL2RvYy9lbi9jbGVhcnRleHQtYXV0
aGVudGljYXRpb24tcGx1Z2luLmh0bWwpIGlmIHJlcXVpcmVkIGJ5IGFuIGFj
Y291bnQsIHN1Y2ggYXMgb25lIGRlZmluZWQgd2l0aCB0aGUgW1BBTSBhdXRo
ZW50aWNhdGlvbiBwbHVnaW5dKGh0dHA6Ly9kZXYubXlzcWwuY29tL2RvYy9l
bi9wYW0tYXV0aGVudGljYXRpb24tcGx1Z2luLmh0bWwpLiBTZW5kaW5nIHBh
c3N3b3JkcyBpbiBjbGVhciB0ZXh0IG1heSBiZSBhIHNlY3VyaXR5IHByb2Js
ZW0gaW4gc29tZSBjb25maWd1cmF0aW9ucy4gVG8gYXZvaWQgcHJvYmxlbXMg
aWYgdGhlcmUgaXMgYW55IHBvc3NpYmlsaXR5IHRoYXQgdGhlIHBhc3N3b3Jk
IHdvdWxkIGJlIGludGVyY2VwdGVkLCBjbGllbnRzIHNob3VsZCBjb25uZWN0
IHRvIE15U1FMIFNlcnZlciB1c2luZyBhIG1ldGhvZCB0aGF0IHByb3RlY3Rz
IHRoZSBwYXNzd29yZC4gUG9zc2liaWxpdGllcyBpbmNsdWRlIFtUTFMgLyBT
U0xdKCN0bHMpLCBJUHNlYywgb3IgYSBwcml2YXRlIG5ldHdvcmsuCgojIyMj
IyBgYWxsb3dOYXRpdmVQYXNzd29yZHNgCgpgYGAKVHlwZTogICAgICAgICAg
IGJvb2wKVmFsaWQgVmFsdWVzOiAgIHRydWUsIGZhbHNlCkRlZmF1bHQ6ICAg
ICAgICB0cnVlCmBgYApgYWxsb3dOYXRpdmVQYXNzd29yZHM9ZmFsc2VgIGRp
c2FsbG93cyB0aGUgdXNhZ2Ugb2YgTXlTUUwgbmF0aXZlIHBhc3N3b3JkIG1l
dGhvZC4KCiMjIyMjIGBhbGxvd09sZFBhc3N3b3Jkc2AKCmBgYApUeXBlOiAg
ICAgICAgICAgYm9vbApWYWxpZCBWYWx1ZXM6ICAgdHJ1ZSwgZmFsc2UKRGVm
YXVsdDogICAgICAgIGZhbHNlCmBgYApgYWxsb3dPbGRQYXNzd29yZHM9dHJ1
ZWAgYWxsb3dzIHRoZSB1c2FnZSBvZiB0aGUgaW5zZWN1cmUgb2xkIHBhc3N3
b3JkIG1ldGhvZC4gVGhpcyBzaG91bGQgYmUgYXZvaWRlZCwgYnV0IGlzIG5l
Y2Vzc2FyeSBpbiBzb21lIGNhc2VzLiBTZWUgYWxzbyBbdGhlIG9sZF9wYXNz
d29yZHMgd2lraSBwYWdlXShodHRwczovL2dpdGh1Yi5jb20vZ28tc3FsLWRy
aXZlci9teXNxbC93aWtpL29sZF9wYXNzd29yZHMpLgoKIyMjIyMgYGNoYXJz
ZXRgCgpgYGAKVHlwZTogICAgICAgICAgIHN0cmluZwpWYWxpZCBWYWx1ZXM6
ICAgPG5hbWU+CkRlZmF1bHQ6ICAgICAgICBub25lCmBgYAoKU2V0cyB0aGUg
Y2hhcnNldCB1c2VkIGZvciBjbGllbnQtc2VydmVyIGludGVyYWN0aW9uIChg
IlNFVCBOQU1FUyA8dmFsdWU+ImApLiBJZiBtdWx0aXBsZSBjaGFyc2V0cyBh
cmUgc2V0IChzZXBhcmF0ZWQgYnkgYSBjb21tYSksIHRoZSBmb2xsb3dpbmcg
Y2hhcnNldCBpcyB1c2VkIGlmIHNldHRpbmcgdGhlIGNoYXJzZXQgZmFpbGVz
LiBUaGlzIGVuYWJsZXMgZm9yIGV4YW1wbGUgc3VwcG9ydCBmb3IgYHV0Zjht
YjRgIChbaW50cm9kdWNlZCBpbiBNeVNRTCA1LjUuM10oaHR0cDovL2Rldi5t
eXNxbC5jb20vZG9jL3JlZm1hbi81LjUvZW4vY2hhcnNldC11bmljb2RlLXV0
ZjhtYjQuaHRtbCkpIHdpdGggZmFsbGJhY2sgdG8gYHV0ZjhgIGZvciBvbGRl
ciBzZXJ2ZXJzIChgY2hhcnNldD11dGY4bWI0LHV0ZjhgKS4KClVzYWdlIG9m
IHRoZSBgY2hhcnNldGAgcGFyYW1ldGVyIGlzIGRpc2NvdXJhZ2VkIGJlY2F1
c2UgaXQgaXNzdWVzIGFkZGl0aW9uYWwgcXVlcmllcyB0byB0aGUgc2VydmVy
LgpVbmxlc3MgeW91IG5lZWQgdGhlIGZhbGxiYWNrIGJlaGF2aW9yLCBwbGVh
c2UgdXNlIGBjb2xsYXRpb25gIGluc3RlYWQuCgojIyMjIyBgY29sbGF0aW9u
YAoKYGBgClR5cGU6ICAgICAgICAgICBzdHJpbmcKVmFsaWQgVmFsdWVzOiAg
IDxuYW1lPgpEZWZhdWx0OiAgICAgICAgdXRmOG1iNF9nZW5lcmFsX2NpCmBg
YAoKU2V0cyB0aGUgY29sbGF0aW9uIHVzZWQgZm9yIGNsaWVudC1zZXJ2ZXIg
aW50ZXJhY3Rpb24gb24gY29ubmVjdGlvbi4gSW4gY29udHJhc3QgdG8gYGNo
YXJzZXRgLCBgY29sbGF0aW9uYCBkb2VzIG5vdCBpc3N1ZSBhZGRpdGlvbmFs
IHF1ZXJpZXMuIElmIHRoZSBzcGVjaWZpZWQgY29sbGF0aW9uIGlzIHVuYXZh
aWxhYmxlIG9uIHRoZSB0YXJnZXQgc2VydmVyLCB0aGUgY29ubmVjdGlvbiB3
aWxsIGZhaWwuCgpBIGxpc3Qgb2YgdmFsaWQgY2hhcnNldHMgZm9yIGEgc2Vy
dmVyIGlzIHJldHJpZXZhYmxlIHdpdGggYFNIT1cgQ09MTEFUSU9OYC4KClRo
ZSBkZWZhdWx0IGNvbGxhdGlvbiAoYHV0ZjhtYjRfZ2VuZXJhbF9jaWApIGlz
IHN1cHBvcnRlZCBmcm9tIE15U1FMIDUuNS4gIFlvdSBzaG91bGQgdXNlIGFu
IG9sZGVyIGNvbGxhdGlvbiAoZS5nLiBgdXRmOF9nZW5lcmFsX2NpYCkgZm9y
IG9sZGVyIE15U1FMLgoKQ29sbGF0aW9ucyBmb3IgY2hhcnNldCAidWNzMiIs
ICJ1dGYxNiIsICJ1dGYxNmxlIiwgYW5kICJ1dGYzMiIgY2FuIG5vdCBiZSB1
c2VkIChbcmVmXShodHRwczovL2Rldi5teXNxbC5jb20vZG9jL3JlZm1hbi81
LjcvZW4vY2hhcnNldC1jb25uZWN0aW9uLmh0bWwjY2hhcnNldC1jb25uZWN0
aW9uLWltcGVybWlzc2libGUtY2xpZW50LWNoYXJzZXQpKS4KCgojIyMjIyBg
Y2xpZW50Rm91bmRSb3dzYAoKYGBgClR5cGU6ICAgICAgICAgICBib29sClZh
bGlkIFZhbHVlczogICB0cnVlLCBmYWxzZQpEZWZhdWx0OiAgICAgICAgZmFs
c2UKYGBgCgpgY2xpZW50Rm91bmRSb3dzPXRydWVgIGNhdXNlcyBhbiBVUERB
VEUgdG8gcmV0dXJuIHRoZSBudW1iZXIgb2YgbWF0Y2hpbmcgcm93cyBpbnN0
ZWFkIG9mIHRoZSBudW1iZXIgb2Ygcm93cyBjaGFuZ2VkLgoKIyMjIyMgYGNv
bHVtbnNXaXRoQWxpYXNgCgpgYGAKVHlwZTogICAgICAgICAgIGJvb2wKVmFs
aWQgVmFsdWVzOiAgIHRydWUsIGZhbHNlCkRlZmF1bHQ6ICAgICAgICBmYWxz
ZQpgYGAKCldoZW4gYGNvbHVtbnNXaXRoQWxpYXNgIGlzIHRydWUsIGNhbGxz
IHRvIGBzcWwuUm93cy5Db2x1bW5zKClgIHdpbGwgcmV0dXJuIHRoZSB0YWJs
ZSBhbGlhcyBhbmQgdGhlIGNvbHVtbiBuYW1lIHNlcGFyYXRlZCBieSBhIGRv
dC4gRm9yIGV4YW1wbGU6CgpgYGAKU0VMRUNUIHUuaWQgRlJPTSB1c2VycyBh
cyB1CmBgYAoKd2lsbCByZXR1cm4gYHUuaWRgIGluc3RlYWQgb2YganVzdCBg
aWRgIGlmIGBjb2x1bW5zV2l0aEFsaWFzPXRydWVgLgoKIyMjIyMgYGludGVy
cG9sYXRlUGFyYW1zYAoKYGBgClR5cGU6ICAgICAgICAgICBib29sClZhbGlk
IFZhbHVlczogICB0cnVlLCBmYWxzZQpEZWZhdWx0OiAgICAgICAgZmFsc2UK
YGBgCgpJZiBgaW50ZXJwb2xhdGVQYXJhbXNgIGlzIHRydWUsIHBsYWNlaG9s
ZGVycyAoYD9gKSBpbiBjYWxscyB0byBgZGIuUXVlcnkoKWAgYW5kIGBkYi5F
eGVjKClgIGFyZSBpbnRlcnBvbGF0ZWQgaW50byBhIHNpbmdsZSBxdWVyeSBz
dHJpbmcgd2l0aCBnaXZlbiBwYXJhbWV0ZXJzLiBUaGlzIHJlZHVjZXMgdGhl
IG51bWJlciBvZiByb3VuZHRyaXBzLCBzaW5jZSB0aGUgZHJpdmVyIGhhcyB0
byBwcmVwYXJlIGEgc3RhdGVtZW50LCBleGVjdXRlIGl0IHdpdGggZ2l2ZW4g
cGFyYW1ldGVycyBhbmQgY2xvc2UgdGhlIHN0YXRlbWVudCBhZ2FpbiB3aXRo
IGBpbnRlcnBvbGF0ZVBhcmFtcz1mYWxzZWAuCgoqVGhpcyBjYW4gbm90IGJl
IHVzZWQgdG9nZXRoZXIgd2l0aCB0aGUgbXVsdGlieXRlIGVuY29kaW5ncyBC
SUc1LCBDUDkzMiwgR0IyMzEyLCBHQksgb3IgU0pJUy4gVGhlc2UgYXJlIGJs
YWNrbGlzdGVkIGFzIHRoZXkgbWF5IFtpbnRyb2R1Y2UgYSBTUUwgaW5qZWN0
aW9uIHZ1bG5lcmFiaWxpdHldKGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9h
LzEyMTE4NjAyLzM0MzAxMTgpISoKCiMjIyMjIGBsb2NgCgpgYGAKVHlwZTog
ICAgICAgICAgIHN0cmluZwpWYWxpZCBWYWx1ZXM6ICAgPGVzY2FwZWQgbmFt
ZT4KRGVmYXVsdDogICAgICAgIFVUQwpgYGAKClNldHMgdGhlIGxvY2F0aW9u
IGZvciB0aW1lLlRpbWUgdmFsdWVzICh3aGVuIHVzaW5nIGBwYXJzZVRpbWU9
dHJ1ZWApLiAqIkxvY2FsIiogc2V0cyB0aGUgc3lzdGVtJ3MgbG9jYXRpb24u
IFNlZSBbdGltZS5Mb2FkTG9jYXRpb25dKGh0dHBzOi8vZ29sYW5nLm9yZy9w
a2cvdGltZS8jTG9hZExvY2F0aW9uKSBmb3IgZGV0YWlscy4KCk5vdGUgdGhh
dCB0aGlzIHNldHMgdGhlIGxvY2F0aW9uIGZvciB0aW1lLlRpbWUgdmFsdWVz
IGJ1dCBkb2VzIG5vdCBjaGFuZ2UgTXlTUUwncyBbdGltZV96b25lIHNldHRp
bmddKGh0dHBzOi8vZGV2Lm15c3FsLmNvbS9kb2MvcmVmbWFuLzUuNS9lbi90
aW1lLXpvbmUtc3VwcG9ydC5odG1sKS4gRm9yIHRoYXQgc2VlIHRoZSBbdGlt
ZV96b25lIHN5c3RlbSB2YXJpYWJsZV0oI3N5c3RlbS12YXJpYWJsZXMpLCB3
aGljaCBjYW4gYWxzbyBiZSBzZXQgYXMgYSBEU04gcGFyYW1ldGVyLgoKUGxl
YXNlIGtlZXAgaW4gbWluZCwgdGhhdCBwYXJhbSB2YWx1ZXMgbXVzdCBiZSBb
dXJsLlF1ZXJ5RXNjYXBlXShodHRwczovL2dvbGFuZy5vcmcvcGtnL25ldC91
cmwvI1F1ZXJ5RXNjYXBlKSdlZC4gQWx0ZXJuYXRpdmVseSB5b3UgY2FuIG1h
bnVhbGx5IHJlcGxhY2UgdGhlIGAvYCB3aXRoIGAlMkZgLiBGb3IgZXhhbXBs
ZSBgVVMvUGFjaWZpY2Agd291bGQgYmUgYGxvYz1VUyUyRlBhY2lmaWNgLgoK
IyMjIyMgYG1heEFsbG93ZWRQYWNrZXRgCmBgYApUeXBlOiAgICAgICAgICBk
ZWNpbWFsIG51bWJlcgpEZWZhdWx0OiAgICAgICA0MTk0MzA0CmBgYAoKTWF4
IHBhY2tldCBzaXplIGFsbG93ZWQgaW4gYnl0ZXMuIFRoZSBkZWZhdWx0IHZh
bHVlIGlzIDQgTWlCIGFuZCBzaG91bGQgYmUgYWRqdXN0ZWQgdG8gbWF0Y2gg
dGhlIHNlcnZlciBzZXR0aW5ncy4gYG1heEFsbG93ZWRQYWNrZXQ9MGAgY2Fu
IGJlIHVzZWQgdG8gYXV0b21hdGljYWxseSBmZXRjaCB0aGUgYG1heF9hbGxv
d2VkX3BhY2tldGAgdmFyaWFibGUgZnJvbSBzZXJ2ZXIgKm9uIGV2ZXJ5IGNv
bm5lY3Rpb24qLgoKIyMjIyMgYG11bHRpU3RhdGVtZW50c2AKCmBgYApUeXBl
OiAgICAgICAgICAgYm9vbApWYWxpZCBWYWx1ZXM6ICAgdHJ1ZSwgZmFsc2UK
RGVmYXVsdDogICAgICAgIGZhbHNlCmBgYAoKQWxsb3cgbXVsdGlwbGUgc3Rh
dGVtZW50cyBpbiBvbmUgcXVlcnkuIFdoaWxlIHRoaXMgYWxsb3dzIGJhdGNo
IHF1ZXJpZXMsIGl0IGFsc28gZ3JlYXRseSBpbmNyZWFzZXMgdGhlIHJpc2sg
b2YgU1FMIGluamVjdGlvbnMuIE9ubHkgdGhlIHJlc3VsdCBvZiB0aGUgZmly
c3QgcXVlcnkgaXMgcmV0dXJuZWQsIGFsbCBvdGhlciByZXN1bHRzIGFyZSBz
aWxlbnRseSBkaXNjYXJkZWQuCgpXaGVuIGBtdWx0aVN0YXRlbWVudHNgIGlz
IHVzZWQsIGA/YCBwYXJhbWV0ZXJzIG11c3Qgb25seSBiZSB1c2VkIGluIHRo
ZSBmaXJzdCBzdGF0ZW1lbnQuCgojIyMjIyBgcGFyc2VUaW1lYAoKYGBgClR5
cGU6ICAgICAgICAgICBib29sClZhbGlkIFZhbHVlczogICB0cnVlLCBmYWxz
ZQpEZWZhdWx0OiAgICAgICAgZmFsc2UKYGBgCgpgcGFyc2VUaW1lPXRydWVg
IGNoYW5nZXMgdGhlIG91dHB1dCB0eXBlIG9mIGBEQVRFYCBhbmQgYERBVEVU
SU1FYCB2YWx1ZXMgdG8gYHRpbWUuVGltZWAgaW5zdGVhZCBvZiBgW11ieXRl
YCAvIGBzdHJpbmdgClRoZSBkYXRlIG9yIGRhdGV0aW1lIGxpa2UgYDAwMDAt
MDAtMDAgMDA6MDA6MDBgIGlzIGNvbnZlcnRlZCBpbnRvIHplcm8gdmFsdWUg
b2YgYHRpbWUuVGltZWAuCgoKIyMjIyMgYHJlYWRUaW1lb3V0YAoKYGBgClR5
cGU6ICAgICAgICAgICBkdXJhdGlvbgpEZWZhdWx0OiAgICAgICAgMApgYGAK
CkkvTyByZWFkIHRpbWVvdXQuIFRoZSB2YWx1ZSBtdXN0IGJlIGEgZGVjaW1h
bCBudW1iZXIgd2l0aCBhIHVuaXQgc3VmZml4ICgqIm1zIiosICoicyIqLCAq
Im0iKiwgKiJoIiopLCBzdWNoIGFzICoiMzBzIiosICoiMC41bSIqIG9yICoi
MW0zMHMiKi4KCiMjIyMjIGByZWplY3RSZWFkT25seWAKCmBgYApUeXBlOiAg
ICAgICAgICAgYm9vbApWYWxpZCBWYWx1ZXM6ICAgdHJ1ZSwgZmFsc2UKRGVm
YXVsdDogICAgICAgIGZhbHNlCmBgYAoKCmByZWplY3RSZWFkT25seT10cnVl
YCBjYXVzZXMgdGhlIGRyaXZlciB0byByZWplY3QgcmVhZC1vbmx5IGNvbm5l
Y3Rpb25zLiBUaGlzCmlzIGZvciBhIHBvc3NpYmxlIHJhY2UgY29uZGl0aW9u
IGR1cmluZyBhbiBhdXRvbWF0aWMgZmFpbG92ZXIsIHdoZXJlIHRoZSBteXNx
bApjbGllbnQgZ2V0cyBjb25uZWN0ZWQgdG8gYSByZWFkLW9ubHkgcmVwbGlj
YSBhZnRlciB0aGUgZmFpbG92ZXIuCgpOb3RlIHRoYXQgdGhpcyBzaG91bGQg
YmUgYSBmYWlybHkgcmFyZSBjYXNlLCBhcyBhbiBhdXRvbWF0aWMgZmFpbG92
ZXIgbm9ybWFsbHkKaGFwcGVucyB3aGVuIHRoZSBwcmltYXJ5IGlzIGRvd24s
IGFuZCB0aGUgcmFjZSBjb25kaXRpb24gc2hvdWxkbid0IGhhcHBlbgp1bmxl
c3MgaXQgY29tZXMgYmFjayB1cCBvbmxpbmUgYXMgc29vbiBhcyB0aGUgZmFp
bG92ZXIgaXMga2lja2VkIG9mZi4gT24gdGhlCm90aGVyIGhhbmQsIHdoZW4g
dGhpcyBoYXBwZW5zLCBhIE15U1FMIGFwcGxpY2F0aW9uIGNhbiBnZXQgc3R1
Y2sgb24gYQpyZWFkLW9ubHkgY29ubmVjdGlvbiB1bnRpbCByZXN0YXJ0ZWQu
IEl0IGlzIGhvd2V2ZXIgZmFpcmx5IGVhc3kgdG8gcmVwcm9kdWNlLApmb3Ig
ZXhhbXBsZSwgdXNpbmcgYSBtYW51YWwgZmFpbG92ZXIgb24gQVdTIEF1cm9y
YSdzIE15U1FMLWNvbXBhdGlibGUgY2x1c3Rlci4KCklmIHlvdSBhcmUgbm90
IHJlbHlpbmcgb24gcmVhZC1vbmx5IHRyYW5zYWN0aW9ucyB0byByZWplY3Qg
d3JpdGVzIHRoYXQgYXJlbid0CnN1cHBvc2VkIHRvIGhhcHBlbiwgc2V0dGlu
ZyB0aGlzIG9uIHNvbWUgTXlTUUwgcHJvdmlkZXJzIChzdWNoIGFzIEFXUyBB
dXJvcmEpCmlzIHNhZmVyIGZvciBmYWlsb3ZlcnMuCgpOb3RlIHRoYXQgRVJS
T1IgMTI5MCBjYW4gYmUgcmV0dXJuZWQgZm9yIGEgYHJlYWQtb25seWAgc2Vy
dmVyIGFuZCB0aGlzIG9wdGlvbiB3aWxsCmNhdXNlIGEgcmV0cnkgZm9yIHRo
YXQgZXJyb3IuIEhvd2V2ZXIgdGhlIHNhbWUgZXJyb3IgbnVtYmVyIGlzIHVz
ZWQgZm9yIHNvbWUKb3RoZXIgY2FzZXMuIFlvdSBzaG91bGQgZW5zdXJlIHlv
dXIgYXBwbGljYXRpb24gd2lsbCBuZXZlciBjYXVzZSBhbiBFUlJPUiAxMjkw
CmV4Y2VwdCBmb3IgYHJlYWQtb25seWAgbW9kZSB3aGVuIGVuYWJsaW5nIHRo
aXMgb3B0aW9uLgoKCiMjIyMjIGBzZXJ2ZXJQdWJLZXlgCgpgYGAKVHlwZTog
ICAgICAgICAgIHN0cmluZwpWYWxpZCBWYWx1ZXM6ICAgPG5hbWU+CkRlZmF1
bHQ6ICAgICAgICBub25lCmBgYAoKU2VydmVyIHB1YmxpYyBrZXlzIGNhbiBi
ZSByZWdpc3RlcmVkIHdpdGggW2BteXNxbC5SZWdpc3RlclNlcnZlclB1Yktl
eWBdKGh0dHBzOi8vZ29kb2Mub3JnL2dpdGh1Yi5jb20vZ28tc3FsLWRyaXZl
ci9teXNxbCNSZWdpc3RlclNlcnZlclB1YktleSksIHdoaWNoIGNhbiB0aGVu
IGJlIHVzZWQgYnkgdGhlIGFzc2lnbmVkIG5hbWUgaW4gdGhlIERTTi4KUHVi
bGljIGtleXMgYXJlIHVzZWQgdG8gdHJhbnNtaXQgZW5jcnlwdGVkIGRhdGEs
IGUuZy4gZm9yIGF1dGhlbnRpY2F0aW9uLgpJZiB0aGUgc2VydmVyJ3MgcHVi
bGljIGtleSBpcyBrbm93biwgaXQgc2hvdWxkIGJlIHNldCBtYW51YWxseSB0
byBhdm9pZCBleHBlbnNpdmUgYW5kIHBvdGVudGlhbGx5IGluc2VjdXJlIHRy
YW5zbWlzc2lvbnMgb2YgdGhlIHB1YmxpYyBrZXkgZnJvbSB0aGUgc2VydmVy
IHRvIHRoZSBjbGllbnQgZWFjaCB0aW1lIGl0IGlzIHJlcXVpcmVkLgoKCiMj
IyMjIGB0aW1lb3V0YAoKYGBgClR5cGU6ICAgICAgICAgICBkdXJhdGlvbgpE
ZWZhdWx0OiAgICAgICAgT1MgZGVmYXVsdApgYGAKClRpbWVvdXQgZm9yIGVz
dGFibGlzaGluZyBjb25uZWN0aW9ucywgYWthIGRpYWwgdGltZW91dC4gVGhl
IHZhbHVlIG11c3QgYmUgYSBkZWNpbWFsIG51bWJlciB3aXRoIGEgdW5pdCBz
dWZmaXggKCoibXMiKiwgKiJzIiosICoibSIqLCAqImgiKiksIHN1Y2ggYXMg
KiIzMHMiKiwgKiIwLjVtIiogb3IgKiIxbTMwcyIqLgoKCiMjIyMjIGB0bHNg
CgpgYGAKVHlwZTogICAgICAgICAgIGJvb2wgLyBzdHJpbmcKVmFsaWQgVmFs
dWVzOiAgIHRydWUsIGZhbHNlLCBza2lwLXZlcmlmeSwgcHJlZmVycmVkLCA8
bmFtZT4KRGVmYXVsdDogICAgICAgIGZhbHNlCmBgYAoKYHRscz10cnVlYCBl
bmFibGVzIFRMUyAvIFNTTCBlbmNyeXB0ZWQgY29ubmVjdGlvbiB0byB0aGUg
c2VydmVyLiBVc2UgYHNraXAtdmVyaWZ5YCBpZiB5b3Ugd2FudCB0byB1c2Ug
YSBzZWxmLXNpZ25lZCBvciBpbnZhbGlkIGNlcnRpZmljYXRlIChzZXJ2ZXIg
c2lkZSkgb3IgdXNlIGBwcmVmZXJyZWRgIHRvIHVzZSBUTFMgb25seSB3aGVu
IGFkdmVydGlzZWQgYnkgdGhlIHNlcnZlci4gVGhpcyBpcyBzaW1pbGFyIHRv
IGBza2lwLXZlcmlmeWAsIGJ1dCBhZGRpdGlvbmFsbHkgYWxsb3dzIGEgZmFs
bGJhY2sgdG8gYSBjb25uZWN0aW9uIHdoaWNoIGlzIG5vdCBlbmNyeXB0ZWQu
IE5laXRoZXIgYHNraXAtdmVyaWZ5YCBub3IgYHByZWZlcnJlZGAgYWRkIGFu
eSByZWxpYWJsZSBzZWN1cml0eS4gWW91IGNhbiB1c2UgYSBjdXN0b20gVExT
IGNvbmZpZyBhZnRlciByZWdpc3RlcmluZyBpdCB3aXRoIFtgbXlzcWwuUmVn
aXN0ZXJUTFNDb25maWdgXShodHRwczovL2dvZG9jLm9yZy9naXRodWIuY29t
L2dvLXNxbC1kcml2ZXIvbXlzcWwjUmVnaXN0ZXJUTFNDb25maWcpLgoKCiMj
IyMjIGB3cml0ZVRpbWVvdXRgCgpgYGAKVHlwZTogICAgICAgICAgIGR1cmF0
aW9uCkRlZmF1bHQ6ICAgICAgICAwCmBgYAoKSS9PIHdyaXRlIHRpbWVvdXQu
IFRoZSB2YWx1ZSBtdXN0IGJlIGEgZGVjaW1hbCBudW1iZXIgd2l0aCBhIHVu
aXQgc3VmZml4ICgqIm1zIiosICoicyIqLCAqIm0iKiwgKiJoIiopLCBzdWNo
IGFzICoiMzBzIiosICoiMC41bSIqIG9yICoiMW0zMHMiKi4KCgojIyMjIyBT
eXN0ZW0gVmFyaWFibGVzCgpBbnkgb3RoZXIgcGFyYW1ldGVycyBhcmUgaW50
ZXJwcmV0ZWQgYXMgc3lzdGVtIHZhcmlhYmxlczoKICAqIGA8Ym9vbGVhbl92
YXI+PTx2YWx1ZT5gOiBgU0VUIDxib29sZWFuX3Zhcj49PHZhbHVlPmAKICAq
IGA8ZW51bV92YXI+PTx2YWx1ZT5gOiBgU0VUIDxlbnVtX3Zhcj49PHZhbHVl
PmAKICAqIGA8c3RyaW5nX3Zhcj49JTI3PHZhbHVlPiUyN2A6IGBTRVQgPHN0
cmluZ192YXI+PSc8dmFsdWU+J2AKClJ1bGVzOgoqIFRoZSB2YWx1ZXMgZm9y
IHN0cmluZyB2YXJpYWJsZXMgbXVzdCBiZSBxdW90ZWQgd2l0aCBgJ2AuCiog
VGhlIHZhbHVlcyBtdXN0IGFsc28gYmUgW3VybC5RdWVyeUVzY2FwZV0oaHR0
cDovL2dvbGFuZy5vcmcvcGtnL25ldC91cmwvI1F1ZXJ5RXNjYXBlKSdlZCEK
ICh3aGljaCBpbXBsaWVzIHZhbHVlcyBvZiBzdHJpbmcgdmFyaWFibGVzIG11
c3QgYmUgd3JhcHBlZCB3aXRoIGAlMjdgKS4KCkV4YW1wbGVzOgogICogYGF1
dG9jb21taXQ9MWA6IGBTRVQgYXV0b2NvbW1pdD0xYAogICogW2B0aW1lX3pv
bmU9JTI3RXVyb3BlJTJGUGFyaXMlMjdgXShodHRwczovL2Rldi5teXNxbC5j
b20vZG9jL3JlZm1hbi81LjUvZW4vdGltZS16b25lLXN1cHBvcnQuaHRtbCk6
IGBTRVQgdGltZV96b25lPSdFdXJvcGUvUGFyaXMnYAogICogW2B0eF9pc29s
YXRpb249JTI3UkVQRUFUQUJMRS1SRUFEJTI3YF0oaHR0cHM6Ly9kZXYubXlz
cWwuY29tL2RvYy9yZWZtYW4vNS41L2VuL3NlcnZlci1zeXN0ZW0tdmFyaWFi
bGVzLmh0bWwjc3lzdmFyX3R4X2lzb2xhdGlvbik6IGBTRVQgdHhfaXNvbGF0
aW9uPSdSRVBFQVRBQkxFLVJFQUQnYAoKCiMjIyMgRXhhbXBsZXMKYGBgCnVz
ZXJAdW5peCgvcGF0aC90by9zb2NrZXQpL2RibmFtZQpgYGAKCmBgYApyb290
OnB3QHVuaXgoL3RtcC9teXNxbC5zb2NrKS9teURhdGFiYXNlP2xvYz1Mb2Nh
bApgYGAKCmBgYAp1c2VyOnBhc3N3b3JkQHRjcChsb2NhbGhvc3Q6NTU1NSkv
ZGJuYW1lP3Rscz1za2lwLXZlcmlmeSZhdXRvY29tbWl0PXRydWUKYGBgCgpU
cmVhdCB3YXJuaW5ncyBhcyBlcnJvcnMgYnkgc2V0dGluZyB0aGUgc3lzdGVt
IHZhcmlhYmxlIFtgc3FsX21vZGVgXShodHRwczovL2Rldi5teXNxbC5jb20v
ZG9jL3JlZm1hbi81LjcvZW4vc3FsLW1vZGUuaHRtbCk6CmBgYAp1c2VyOnBh
c3N3b3JkQC9kYm5hbWU/c3FsX21vZGU9VFJBRElUSU9OQUwKYGBgCgpUQ1Ag
dmlhIElQdjY6CmBgYAp1c2VyOnBhc3N3b3JkQHRjcChbZGU6YWQ6YmU6ZWY6
OmNhOmZlXTo4MCkvZGJuYW1lP3RpbWVvdXQ9OTBzJmNvbGxhdGlvbj11dGY4
bWI0X3VuaWNvZGVfY2kKYGBgCgpUQ1Agb24gYSByZW1vdGUgaG9zdCwgZS5n
LiBBbWF6b24gUkRTOgpgYGAKaWQ6cGFzc3dvcmRAdGNwKHlvdXItYW1hem9u
YXdzLXVyaS5jb206MzMwNikvZGJuYW1lCmBgYAoKR29vZ2xlIENsb3VkIFNR
TCBvbiBBcHAgRW5naW5lOgpgYGAKdXNlcjpwYXNzd29yZEB1bml4KC9jbG91
ZHNxbC9wcm9qZWN0LWlkOnJlZ2lvbi1uYW1lOmluc3RhbmNlLW5hbWUpL2Ri
bmFtZQpgYGAKClRDUCB1c2luZyBkZWZhdWx0IHBvcnQgKDMzMDYpIG9uIGxv
Y2FsaG9zdDoKYGBgCnVzZXI6cGFzc3dvcmRAdGNwL2RibmFtZT9jaGFyc2V0
PXV0ZjhtYjQsdXRmOCZzeXNfdmFyPWVzYyU0MHBlZApgYGAKClVzZSB0aGUg
ZGVmYXVsdCBwcm90b2NvbCAodGNwKSBhbmQgaG9zdCAobG9jYWxob3N0OjMz
MDYpOgpgYGAKdXNlcjpwYXNzd29yZEAvZGJuYW1lCmBgYAoKTm8gRGF0YWJh
c2UgcHJlc2VsZWN0ZWQ6CmBgYAp1c2VyOnBhc3N3b3JkQC8KYGBgCgoKIyMj
IENvbm5lY3Rpb24gcG9vbCBhbmQgdGltZW91dHMKVGhlIGNvbm5lY3Rpb24g
cG9vbCBpcyBtYW5hZ2VkIGJ5IEdvJ3MgZGF0YWJhc2Uvc3FsIHBhY2thZ2Uu
IEZvciBkZXRhaWxzIG9uIGhvdyB0byBjb25maWd1cmUgdGhlIHNpemUgb2Yg
dGhlIHBvb2wgYW5kIGhvdyBsb25nIGNvbm5lY3Rpb25zIHN0YXkgaW4gdGhl
IHBvb2wgc2VlIGAqREIuU2V0TWF4T3BlbkNvbm5zYCwgYCpEQi5TZXRNYXhJ
ZGxlQ29ubnNgLCBhbmQgYCpEQi5TZXRDb25uTWF4TGlmZXRpbWVgIGluIHRo
ZSBbZGF0YWJhc2Uvc3FsIGRvY3VtZW50YXRpb25dKGh0dHBzOi8vZ29sYW5n
Lm9yZy9wa2cvZGF0YWJhc2Uvc3FsLykuIFRoZSByZWFkLCB3cml0ZSwgYW5k
IGRpYWwgdGltZW91dHMgZm9yIGVhY2ggaW5kaXZpZHVhbCBjb25uZWN0aW9u
IGFyZSBjb25maWd1cmVkIHdpdGggdGhlIERTTiBwYXJhbWV0ZXJzIFtgcmVh
ZFRpbWVvdXRgXSgjcmVhZHRpbWVvdXQpLCBbYHdyaXRlVGltZW91dGBdKCN3
cml0ZXRpbWVvdXQpLCBhbmQgW2B0aW1lb3V0YF0oI3RpbWVvdXQpLCByZXNw
ZWN0aXZlbHkuCgojIyBgQ29sdW1uVHlwZWAgU3VwcG9ydApUaGlzIGRyaXZl
ciBzdXBwb3J0cyB0aGUgW2BDb2x1bW5UeXBlYCBpbnRlcmZhY2VdKGh0dHBz
Oi8vZ29sYW5nLm9yZy9wa2cvZGF0YWJhc2Uvc3FsLyNDb2x1bW5UeXBlKSBp
bnRyb2R1Y2VkIGluIEdvIDEuOCwgd2l0aCB0aGUgZXhjZXB0aW9uIG9mIFtg
Q29sdW1uVHlwZS5MZW5ndGgoKWBdKGh0dHBzOi8vZ29sYW5nLm9yZy9wa2cv
ZGF0YWJhc2Uvc3FsLyNDb2x1bW5UeXBlLkxlbmd0aCksIHdoaWNoIGlzIGN1
cnJlbnRseSBub3Qgc3VwcG9ydGVkLgoKIyMgYGNvbnRleHQuQ29udGV4dGAg
U3VwcG9ydApHbyAxLjggYWRkZWQgYGRhdGFiYXNlL3NxbGAgc3VwcG9ydCBm
b3IgYGNvbnRleHQuQ29udGV4dGAuIFRoaXMgZHJpdmVyIHN1cHBvcnRzIHF1
ZXJ5IHRpbWVvdXRzIGFuZCBjYW5jZWxsYXRpb24gdmlhIGNvbnRleHRzLgpT
ZWUgW2NvbnRleHQgc3VwcG9ydCBpbiB0aGUgZGF0YWJhc2Uvc3FsIHBhY2th
Z2VdKGh0dHBzOi8vZ29sYW5nLm9yZy9kb2MvZ28xLjgjZGF0YWJhc2Vfc3Fs
KSBmb3IgbW9yZSBkZXRhaWxzLgoKCiMjIyBgTE9BRCBEQVRBIExPQ0FMIElO
RklMRWAgc3VwcG9ydApGb3IgdGhpcyBmZWF0dXJlIHlvdSBuZWVkIGRpcmVj
dCBhY2Nlc3MgdG8gdGhlIHBhY2thZ2UuIFRoZXJlZm9yZSB5b3UgbXVzdCBj
aGFuZ2UgdGhlIGltcG9ydCBwYXRoIChubyBgX2ApOgpgYGBnbwppbXBvcnQg
ImdpdGh1Yi5jb20vZ28tc3FsLWRyaXZlci9teXNxbCIKYGBgCgpGaWxlcyBt
dXN0IGJlIHdoaXRlbGlzdGVkIGJ5IHJlZ2lzdGVyaW5nIHRoZW0gd2l0aCBg
bXlzcWwuUmVnaXN0ZXJMb2NhbEZpbGUoZmlsZXBhdGgpYCAocmVjb21tZW5k
ZWQpIG9yIHRoZSBXaGl0ZWxpc3QgY2hlY2sgbXVzdCBiZSBkZWFjdGl2YXRl
ZCBieSB1c2luZyB0aGUgRFNOIHBhcmFtZXRlciBgYWxsb3dBbGxGaWxlcz10
cnVlYCAoWypNaWdodCBiZSBpbnNlY3VyZSEqXShodHRwOi8vZGV2Lm15c3Fs
LmNvbS9kb2MvcmVmbWFuLzUuNy9lbi9sb2FkLWRhdGEtbG9jYWwuaHRtbCkp
LgoKVG8gdXNlIGEgYGlvLlJlYWRlcmAgYSBoYW5kbGVyIGZ1bmN0aW9uIG11
c3QgYmUgcmVnaXN0ZXJlZCB3aXRoIGBteXNxbC5SZWdpc3RlclJlYWRlckhh
bmRsZXIobmFtZSwgaGFuZGxlcilgIHdoaWNoIHJldHVybnMgYSBgaW8uUmVh
ZGVyYCBvciBgaW8uUmVhZENsb3NlcmAuIFRoZSBSZWFkZXIgaXMgYXZhaWxh
YmxlIHdpdGggdGhlIGZpbGVwYXRoIGBSZWFkZXI6OjxuYW1lPmAgdGhlbi4g
Q2hvb3NlIGRpZmZlcmVudCBuYW1lcyBmb3IgZGlmZmVyZW50IGhhbmRsZXJz
IGFuZCBgRGVyZWdpc3RlclJlYWRlckhhbmRsZXJgIHdoZW4geW91IGRvbid0
IG5lZWQgaXQgYW55bW9yZS4KClNlZSB0aGUgW2dvZG9jIG9mIEdvLU15U1FM
LURyaXZlcl0oaHR0cHM6Ly9nb2RvYy5vcmcvZ2l0aHViLmNvbS9nby1zcWwt
ZHJpdmVyL215c3FsICJnb2xhbmcgbXlzcWwgZHJpdmVyIGRvY3VtZW50YXRp
b24iKSBmb3IgZGV0YWlscy4KCgojIyMgYHRpbWUuVGltZWAgc3VwcG9ydApU
aGUgZGVmYXVsdCBpbnRlcm5hbCBvdXRwdXQgdHlwZSBvZiBNeVNRTCBgREFU
RWAgYW5kIGBEQVRFVElNRWAgdmFsdWVzIGlzIGBbXWJ5dGVgIHdoaWNoIGFs
bG93cyB5b3UgdG8gc2NhbiB0aGUgdmFsdWUgaW50byBhIGBbXWJ5dGVgLCBg
c3RyaW5nYCBvciBgc3FsLlJhd0J5dGVzYCB2YXJpYWJsZSBpbiB5b3VyIHBy
b2dyYW0uCgpIb3dldmVyLCBtYW55IHdhbnQgdG8gc2NhbiBNeVNRTCBgREFU
RWAgYW5kIGBEQVRFVElNRWAgdmFsdWVzIGludG8gYHRpbWUuVGltZWAgdmFy
aWFibGVzLCB3aGljaCBpcyB0aGUgbG9naWNhbCBlcXVpdmFsZW50IGluIEdv
IHRvIGBEQVRFYCBhbmQgYERBVEVUSU1FYCBpbiBNeVNRTC4gWW91IGNhbiBk
byB0aGF0IGJ5IGNoYW5naW5nIHRoZSBpbnRlcm5hbCBvdXRwdXQgdHlwZSBm
cm9tIGBbXWJ5dGVgIHRvIGB0aW1lLlRpbWVgIHdpdGggdGhlIERTTiBwYXJh
bWV0ZXIgYHBhcnNlVGltZT10cnVlYC4gWW91IGNhbiBzZXQgdGhlIGRlZmF1
bHQgW2B0aW1lLlRpbWVgIGxvY2F0aW9uXShodHRwczovL2dvbGFuZy5vcmcv
cGtnL3RpbWUvI0xvY2F0aW9uKSB3aXRoIHRoZSBgbG9jYCBEU04gcGFyYW1l
dGVyLgoKKipDYXV0aW9uOioqIEFzIG9mIEdvIDEuMSwgdGhpcyBtYWtlcyBg
dGltZS5UaW1lYCB0aGUgb25seSB2YXJpYWJsZSB0eXBlIHlvdSBjYW4gc2Nh
biBgREFURWAgYW5kIGBEQVRFVElNRWAgdmFsdWVzIGludG8uIFRoaXMgYnJl
YWtzIGZvciBleGFtcGxlIFtgc3FsLlJhd0J5dGVzYCBzdXBwb3J0XShodHRw
czovL2dpdGh1Yi5jb20vZ28tc3FsLWRyaXZlci9teXNxbC93aWtpL0V4YW1w
bGVzI3Jhd2J5dGVzKS4KCkFsdGVybmF0aXZlbHkgeW91IGNhbiB1c2UgdGhl
IFtgTnVsbFRpbWVgXShodHRwczovL2dvZG9jLm9yZy9naXRodWIuY29tL2dv
LXNxbC1kcml2ZXIvbXlzcWwjTnVsbFRpbWUpIHR5cGUgYXMgdGhlIHNjYW4g
ZGVzdGluYXRpb24sIHdoaWNoIHdvcmtzIHdpdGggYm90aCBgdGltZS5UaW1l
YCBhbmQgYHN0cmluZ2AgLyBgW11ieXRlYC4KCgojIyMgVW5pY29kZSBzdXBw
b3J0ClNpbmNlIHZlcnNpb24gMS4xIEdvLU15U1FMLURyaXZlciBhdXRvbWF0
aWNhbGx5IHVzZXMgdGhlIGNvbGxhdGlvbiBgdXRmOF9nZW5lcmFsX2NpYCBi
eSBkZWZhdWx0LgoKT3RoZXIgY29sbGF0aW9ucyAvIGNoYXJzZXRzIGNhbiBi
ZSBzZXQgdXNpbmcgdGhlIFtgY29sbGF0aW9uYF0oI2NvbGxhdGlvbikgRFNO
IHBhcmFtZXRlci4KClZlcnNpb24gMS4wIG9mIHRoZSBkcml2ZXIgcmVjb21t
ZW5kZWQgYWRkaW5nIGAmY2hhcnNldD11dGY4YCAoYWxpYXMgZm9yIGBTRVQg
TkFNRVMgdXRmOGApIHRvIHRoZSBEU04gdG8gZW5hYmxlIHByb3BlciBVVEYt
OCBzdXBwb3J0LiBUaGlzIGlzIG5vdCBuZWNlc3NhcnkgYW55bW9yZS4gVGhl
IFtgY29sbGF0aW9uYF0oI2NvbGxhdGlvbikgcGFyYW1ldGVyIHNob3VsZCBi
ZSBwcmVmZXJyZWQgdG8gc2V0IGFub3RoZXIgY29sbGF0aW9uIC8gY2hhcnNl
dCB0aGFuIHRoZSBkZWZhdWx0LgoKU2VlIGh0dHA6Ly9kZXYubXlzcWwuY29t
L2RvYy9yZWZtYW4vNS43L2VuL2NoYXJzZXQtdW5pY29kZS5odG1sIGZvciBt
b3JlIGRldGFpbHMgb24gTXlTUUwncyBVbmljb2RlIHN1cHBvcnQuCgojIyBU
ZXN0aW5nIC8gRGV2ZWxvcG1lbnQKVG8gcnVuIHRoZSBkcml2ZXIgdGVzdHMg
eW91IG1heSBuZWVkIHRvIGFkanVzdCB0aGUgY29uZmlndXJhdGlvbi4gU2Vl
IHRoZSBbVGVzdGluZyBXaWtpLVBhZ2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9n
by1zcWwtZHJpdmVyL215c3FsL3dpa2kvVGVzdGluZyAiVGVzdGluZyIpIGZv
ciBkZXRhaWxzLgoKR28tTXlTUUwtRHJpdmVyIGlzIG5vdCBmZWF0dXJlLWNv
bXBsZXRlIHlldC4gWW91ciBoZWxwIGlzIHZlcnkgYXBwcmVjaWF0ZWQuCklm
IHlvdSB3YW50IHRvIGNvbnRyaWJ1dGUsIHlvdSBjYW4gd29yayBvbiBhbiBb
b3BlbiBpc3N1ZV0oaHR0cHM6Ly9naXRodWIuY29tL2dvLXNxbC1kcml2ZXIv
bXlzcWwvaXNzdWVzP3N0YXRlPW9wZW4pIG9yIHJldmlldyBhIFtwdWxsIHJl
cXVlc3RdKGh0dHBzOi8vZ2l0aHViLmNvbS9nby1zcWwtZHJpdmVyL215c3Fs
L3B1bGxzKS4KClNlZSB0aGUgW0NvbnRyaWJ1dGlvbiBHdWlkZWxpbmVzXSho
dHRwczovL2dpdGh1Yi5jb20vZ28tc3FsLWRyaXZlci9teXNxbC9ibG9iL21h
c3Rlci9DT05UUklCVVRJTkcubWQpIGZvciBkZXRhaWxzLgoKLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgojIyBMaWNlbnNlCkdv
LU15U1FMLURyaXZlciBpcyBsaWNlbnNlZCB1bmRlciB0aGUgW01vemlsbGEg
UHVibGljIExpY2Vuc2UgVmVyc2lvbiAyLjBdKGh0dHBzOi8vcmF3LmdpdGh1
Yi5jb20vZ28tc3FsLWRyaXZlci9teXNxbC9tYXN0ZXIvTElDRU5TRSkKCk1v
emlsbGEgc3VtbWFyaXplcyB0aGUgbGljZW5zZSBzY29wZSBhcyBmb2xsb3dz
Ogo+IE1QTDogVGhlIGNvcHlsZWZ0IGFwcGxpZXMgdG8gYW55IGZpbGVzIGNv
bnRhaW5pbmcgTVBMZWQgY29kZS4KCgpUaGF0IG1lYW5zOgogICogWW91IGNh
biAqKnVzZSoqIHRoZSAqKnVuY2hhbmdlZCoqIHNvdXJjZSBjb2RlIGJvdGgg
aW4gcHJpdmF0ZSBhbmQgY29tbWVyY2lhbGx5LgogICogV2hlbiBkaXN0cmli
dXRpbmcsIHlvdSAqKm11c3QgcHVibGlzaCoqIHRoZSBzb3VyY2UgY29kZSBv
ZiBhbnkgKipjaGFuZ2VkIGZpbGVzKiogbGljZW5zZWQgdW5kZXIgdGhlIE1Q
TCAyLjAgdW5kZXIgYSkgdGhlIE1QTCAyLjAgaXRzZWxmIG9yIGIpIGEgY29t
cGF0aWJsZSBsaWNlbnNlIChlLmcuIEdQTCAzLjAgb3IgQXBhY2hlIExpY2Vu
c2UgMi4wKS4KICAqIFlvdSAqKm5lZWRuJ3QgcHVibGlzaCoqIHRoZSBzb3Vy
Y2UgY29kZSBvZiB5b3VyIGxpYnJhcnkgYXMgbG9uZyBhcyB0aGUgZmlsZXMg
bGljZW5zZWQgdW5kZXIgdGhlIE1QTCAyLjAgYXJlICoqdW5jaGFuZ2VkKiou
CgpQbGVhc2UgcmVhZCB0aGUgW01QTCAyLjAgRkFRXShodHRwczovL3d3dy5t
b3ppbGxhLm9yZy9lbi1VUy9NUEwvMi4wL0ZBUS8pIGlmIHlvdSBoYXZlIGZ1
cnRoZXIgcXVlc3Rpb25zIHJlZ2FyZGluZyB0aGUgbGljZW5zZS4KCllvdSBj
YW4gcmVhZCB0aGUgZnVsbCB0ZXJtcyBoZXJlOiBbTElDRU5TRV0oaHR0cHM6
Ly9yYXcuZ2l0aHViLmNvbS9nby1zcWwtZHJpdmVyL215c3FsL21hc3Rlci9M
SUNFTlNFKS4KCiFbR28gR29waGVyIGFuZCBNeVNRTCBEb2xwaGluXShodHRw
czovL3Jhdy5naXRodWIuY29tL3dpa2kvZ28tc3FsLWRyaXZlci9teXNxbC9n
by1teXNxbC1kcml2ZXJfbS5qcGcgIkdvbGFuZyBHb3BoZXIgdHJhbnNwb3J0
aW5nIHRoZSBNeVNRTCBEb2xwaGluIGluIGEgd2hlZWxiYXJyb3ciKQoK
",,8660,"c3VkbzogZmFsc2UKbGFuZ3VhZ2U6IGdvCmdvOgogIC0gMS45LngKICAtIDEu
MTAueAogIC0gMS4xMS54CiAgLSAxLjEyLngKICAtIG1hc3RlcgoKYmVmb3Jl
X2luc3RhbGw6CiAgLSBnbyBnZXQgZ29sYW5nLm9yZy94L3Rvb2xzL2NtZC9j
b3ZlcgogIC0gZ28gZ2V0IGdpdGh1Yi5jb20vbWF0dG4vZ292ZXJhbGxzCgpi
ZWZvcmVfc2NyaXB0OgogIC0gZWNobyAtZSAiW3NlcnZlcl1cbmlubm9kYl9s
b2dfZmlsZV9zaXplPTI1Nk1CXG5pbm5vZGJfYnVmZmVyX3Bvb2xfc2l6ZT01
MTJNQlxubWF4X2FsbG93ZWRfcGFja2V0PTE2TUIiIHwgc3VkbyB0ZWUgLWEg
L2V0Yy9teXNxbC9teS5jbmYKICAtIHN1ZG8gc2VydmljZSBteXNxbCByZXN0
YXJ0CiAgLSAudHJhdmlzL3dhaXRfbXlzcWwuc2gKICAtIG15c3FsIC1lICdj
cmVhdGUgZGF0YWJhc2UgZ290ZXN0OycKCm1hdHJpeDoKICBpbmNsdWRlOgog
ICAgLSBlbnY6IERCPU1ZU1FMOAogICAgICBzdWRvOiByZXF1aXJlZAogICAg
ICBkaXN0OiB0cnVzdHkKICAgICAgZ286IDEuMTAueAogICAgICBzZXJ2aWNl
czoKICAgICAgICAtIGRvY2tlcgogICAgICBiZWZvcmVfaW5zdGFsbDoKICAg
ICAgICAtIGdvIGdldCBnb2xhbmcub3JnL3gvdG9vbHMvY21kL2NvdmVyCiAg
ICAgICAgLSBnbyBnZXQgZ2l0aHViLmNvbS9tYXR0bi9nb3ZlcmFsbHMKICAg
ICAgICAtIGRvY2tlciBwdWxsIG15c3FsOjguMAogICAgICAgIC0gZG9ja2Vy
IHJ1biAtZCAtcCAxMjcuMC4wLjE6MzMwNzozMzA2IC0tbmFtZSBteXNxbGQg
LWUgTVlTUUxfREFUQUJBU0U9Z290ZXN0IC1lIE1ZU1FMX1VTRVI9Z290ZXN0
IC1lIE1ZU1FMX1BBU1NXT1JEPXNlY3JldCAtZSBNWVNRTF9ST09UX1BBU1NX
T1JEPXZlcnlzZWNyZXQKICAgICAgICAgIG15c3FsOjguMCAtLWlubm9kYl9s
b2dfZmlsZV9zaXplPTI1Nk1CIC0taW5ub2RiX2J1ZmZlcl9wb29sX3NpemU9
NTEyTUIgLS1tYXhfYWxsb3dlZF9wYWNrZXQ9MTZNQiAtLWxvY2FsLWluZmls
ZT0xCiAgICAgICAgLSBjcCAudHJhdmlzL2RvY2tlci5jbmYgfi8ubXkuY25m
CiAgICAgICAgLSAudHJhdmlzL3dhaXRfbXlzcWwuc2gKICAgICAgYmVmb3Jl
X3NjcmlwdDoKICAgICAgICAtIGV4cG9ydCBNWVNRTF9URVNUX1VTRVI9Z290
ZXN0CiAgICAgICAgLSBleHBvcnQgTVlTUUxfVEVTVF9QQVNTPXNlY3JldAog
ICAgICAgIC0gZXhwb3J0IE1ZU1FMX1RFU1RfQUREUj0xMjcuMC4wLjE6MzMw
NwogICAgICAgIC0gZXhwb3J0IE1ZU1FMX1RFU1RfQ09OQ1VSUkVOVD0xCgog
ICAgLSBlbnY6IERCPU1ZU1FMNTcKICAgICAgc3VkbzogcmVxdWlyZWQKICAg
ICAgZGlzdDogdHJ1c3R5CiAgICAgIGdvOiAxLjEwLngKICAgICAgc2Vydmlj
ZXM6CiAgICAgICAgLSBkb2NrZXIKICAgICAgYmVmb3JlX2luc3RhbGw6CiAg
ICAgICAgLSBnbyBnZXQgZ29sYW5nLm9yZy94L3Rvb2xzL2NtZC9jb3Zlcgog
ICAgICAgIC0gZ28gZ2V0IGdpdGh1Yi5jb20vbWF0dG4vZ292ZXJhbGxzCiAg
ICAgICAgLSBkb2NrZXIgcHVsbCBteXNxbDo1LjcKICAgICAgICAtIGRvY2tl
ciBydW4gLWQgLXAgMTI3LjAuMC4xOjMzMDc6MzMwNiAtLW5hbWUgbXlzcWxk
IC1lIE1ZU1FMX0RBVEFCQVNFPWdvdGVzdCAtZSBNWVNRTF9VU0VSPWdvdGVz
dCAtZSBNWVNRTF9QQVNTV09SRD1zZWNyZXQgLWUgTVlTUUxfUk9PVF9QQVNT
V09SRD12ZXJ5c2VjcmV0CiAgICAgICAgICBteXNxbDo1LjcgLS1pbm5vZGJf
bG9nX2ZpbGVfc2l6ZT0yNTZNQiAtLWlubm9kYl9idWZmZXJfcG9vbF9zaXpl
PTUxMk1CIC0tbWF4X2FsbG93ZWRfcGFja2V0PTE2TUIgLS1sb2NhbC1pbmZp
bGU9MQogICAgICAgIC0gY3AgLnRyYXZpcy9kb2NrZXIuY25mIH4vLm15LmNu
ZgogICAgICAgIC0gLnRyYXZpcy93YWl0X215c3FsLnNoCiAgICAgIGJlZm9y
ZV9zY3JpcHQ6CiAgICAgICAgLSBleHBvcnQgTVlTUUxfVEVTVF9VU0VSPWdv
dGVzdAogICAgICAgIC0gZXhwb3J0IE1ZU1FMX1RFU1RfUEFTUz1zZWNyZXQK
ICAgICAgICAtIGV4cG9ydCBNWVNRTF9URVNUX0FERFI9MTI3LjAuMC4xOjMz
MDcKICAgICAgICAtIGV4cG9ydCBNWVNRTF9URVNUX0NPTkNVUlJFTlQ9MQoK
ICAgIC0gZW52OiBEQj1NQVJJQTU1CiAgICAgIHN1ZG86IHJlcXVpcmVkCiAg
ICAgIGRpc3Q6IHRydXN0eQogICAgICBnbzogMS4xMC54CiAgICAgIHNlcnZp
Y2VzOgogICAgICAgIC0gZG9ja2VyCiAgICAgIGJlZm9yZV9pbnN0YWxsOgog
ICAgICAgIC0gZ28gZ2V0IGdvbGFuZy5vcmcveC90b29scy9jbWQvY292ZXIK
ICAgICAgICAtIGdvIGdldCBnaXRodWIuY29tL21hdHRuL2dvdmVyYWxscwog
ICAgICAgIC0gZG9ja2VyIHB1bGwgbWFyaWFkYjo1LjUKICAgICAgICAtIGRv
Y2tlciBydW4gLWQgLXAgMTI3LjAuMC4xOjMzMDc6MzMwNiAtLW5hbWUgbXlz
cWxkIC1lIE1ZU1FMX0RBVEFCQVNFPWdvdGVzdCAtZSBNWVNRTF9VU0VSPWdv
dGVzdCAtZSBNWVNRTF9QQVNTV09SRD1zZWNyZXQgLWUgTVlTUUxfUk9PVF9Q
QVNTV09SRD12ZXJ5c2VjcmV0CiAgICAgICAgICBtYXJpYWRiOjUuNSAtLWlu
bm9kYl9sb2dfZmlsZV9zaXplPTI1Nk1CIC0taW5ub2RiX2J1ZmZlcl9wb29s
X3NpemU9NTEyTUIgLS1tYXhfYWxsb3dlZF9wYWNrZXQ9MTZNQiAtLWxvY2Fs
LWluZmlsZT0xCiAgICAgICAgLSBjcCAudHJhdmlzL2RvY2tlci5jbmYgfi8u
bXkuY25mCiAgICAgICAgLSAudHJhdmlzL3dhaXRfbXlzcWwuc2gKICAgICAg
YmVmb3JlX3NjcmlwdDoKICAgICAgICAtIGV4cG9ydCBNWVNRTF9URVNUX1VT
RVI9Z290ZXN0CiAgICAgICAgLSBleHBvcnQgTVlTUUxfVEVTVF9QQVNTPXNl
Y3JldAogICAgICAgIC0gZXhwb3J0IE1ZU1FMX1RFU1RfQUREUj0xMjcuMC4w
LjE6MzMwNwogICAgICAgIC0gZXhwb3J0IE1ZU1FMX1RFU1RfQ09OQ1VSUkVO
VD0xCgogICAgLSBlbnY6IERCPU1BUklBMTBfMQogICAgICBzdWRvOiByZXF1
aXJlZAogICAgICBkaXN0OiB0cnVzdHkKICAgICAgZ286IDEuMTAueAogICAg
ICBzZXJ2aWNlczoKICAgICAgICAtIGRvY2tlcgogICAgICBiZWZvcmVfaW5z
dGFsbDoKICAgICAgICAtIGdvIGdldCBnb2xhbmcub3JnL3gvdG9vbHMvY21k
L2NvdmVyCiAgICAgICAgLSBnbyBnZXQgZ2l0aHViLmNvbS9tYXR0bi9nb3Zl
cmFsbHMKICAgICAgICAtIGRvY2tlciBwdWxsIG1hcmlhZGI6MTAuMQogICAg
ICAgIC0gZG9ja2VyIHJ1biAtZCAtcCAxMjcuMC4wLjE6MzMwNzozMzA2IC0t
bmFtZSBteXNxbGQgLWUgTVlTUUxfREFUQUJBU0U9Z290ZXN0IC1lIE1ZU1FM
X1VTRVI9Z290ZXN0IC1lIE1ZU1FMX1BBU1NXT1JEPXNlY3JldCAtZSBNWVNR
TF9ST09UX1BBU1NXT1JEPXZlcnlzZWNyZXQKICAgICAgICAgIG1hcmlhZGI6
MTAuMSAtLWlubm9kYl9sb2dfZmlsZV9zaXplPTI1Nk1CIC0taW5ub2RiX2J1
ZmZlcl9wb29sX3NpemU9NTEyTUIgLS1tYXhfYWxsb3dlZF9wYWNrZXQ9MTZN
QiAtLWxvY2FsLWluZmlsZT0xCiAgICAgICAgLSBjcCAudHJhdmlzL2RvY2tl
ci5jbmYgfi8ubXkuY25mCiAgICAgICAgLSAudHJhdmlzL3dhaXRfbXlzcWwu
c2gKICAgICAgYmVmb3JlX3NjcmlwdDoKICAgICAgICAtIGV4cG9ydCBNWVNR
TF9URVNUX1VTRVI9Z290ZXN0CiAgICAgICAgLSBleHBvcnQgTVlTUUxfVEVT
VF9QQVNTPXNlY3JldAogICAgICAgIC0gZXhwb3J0IE1ZU1FMX1RFU1RfQURE
Uj0xMjcuMC4wLjE6MzMwNwogICAgICAgIC0gZXhwb3J0IE1ZU1FMX1RFU1Rf
Q09OQ1VSUkVOVD0xCgogICAgLSBvczogb3N4CiAgICAgIG9zeF9pbWFnZTog
eGNvZGUxMC4xCiAgICAgIGFkZG9uczoKICAgICAgICBob21lYnJldzoKICAg
ICAgICAgIHBhY2thZ2VzOgogICAgICAgICAgICAtIG15c3FsCiAgICAgICAg
ICB1cGRhdGU6IHRydWUKICAgICAgZ286IDEuMTIueAogICAgICBiZWZvcmVf
aW5zdGFsbDoKICAgICAgICAtIGdvIGdldCBnb2xhbmcub3JnL3gvdG9vbHMv
Y21kL2NvdmVyCiAgICAgICAgLSBnbyBnZXQgZ2l0aHViLmNvbS9tYXR0bi9n
b3ZlcmFsbHMKICAgICAgYmVmb3JlX3NjcmlwdDoKICAgICAgICAtIGVjaG8g
LWUgIltzZXJ2ZXJdXG5pbm5vZGJfbG9nX2ZpbGVfc2l6ZT0yNTZNQlxuaW5u
b2RiX2J1ZmZlcl9wb29sX3NpemU9NTEyTUJcbm1heF9hbGxvd2VkX3BhY2tl
dD0xNk1CXG5sb2NhbF9pbmZpbGU9MSIgPj4gL3Vzci9sb2NhbC9ldGMvbXku
Y25mCiAgICAgICAgLSBteXNxbC5zZXJ2ZXIgc3RhcnQKICAgICAgICAtIG15
c3FsIC11cm9vdCAtZSAnQ1JFQVRFIFVTRVIgZ290ZXN0IElERU5USUZJRUQg
QlkgInNlY3JldCInCiAgICAgICAgLSBteXNxbCAtdXJvb3QgLWUgJ0dSQU5U
IEFMTCBPTiAqLiogVE8gZ290ZXN0JwogICAgICAgIC0gbXlzcWwgLXVyb290
IC1lICdjcmVhdGUgZGF0YWJhc2UgZ290ZXN0OycKICAgICAgICAtIGV4cG9y
dCBNWVNRTF9URVNUX1VTRVI9Z290ZXN0CiAgICAgICAgLSBleHBvcnQgTVlT
UUxfVEVTVF9QQVNTPXNlY3JldAogICAgICAgIC0gZXhwb3J0IE1ZU1FMX1RF
U1RfQUREUj0xMjcuMC4wLjE6MzMwNgogICAgICAgIC0gZXhwb3J0IE1ZU1FM
X1RFU1RfQ09OQ1VSUkVOVD0xCgpzY3JpcHQ6CiAgLSBnbyB0ZXN0IC12IC1j
b3Zlcm1vZGU9Y291bnQgLWNvdmVycHJvZmlsZT1jb3ZlcmFnZS5vdXQKICAt
IGdvIHZldCAuLy4uLgogIC0gLnRyYXZpcy9nb2ZtdC5zaAphZnRlcl9zY3Jp
cHQ6CiAgLSAkSE9NRS9nb3BhdGgvYmluL2dvdmVyYWxscyAtY292ZXJwcm9m
aWxlPWNvdmVyYWdlLm91dCAtc2VydmljZT10cmF2aXMtY2kK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'ale',67747748,"b'Check syntax in Vim asynchronously and fix files, with Language Server Protocol (LSP) support'",b'Vim script',378,8660,,100,False,b'https://api.github.com/repos/dense-analysis/ale/forks',"IyBBc3luY2hyb25vdXMgTGludCBFbmdpbmUgWyFbVHJhdmlzIENJIEJ1aWxk
IFN0YXR1c10oaHR0cHM6Ly90cmF2aXMtY2kuY29tL2RlbnNlLWFuYWx5c2lz
L2FsZS5zdmc/YnJhbmNoPW1hc3RlcildKGh0dHBzOi8vdHJhdmlzLWNpLmNv
bS9kZW5zZS1hbmFseXNpcy9hbGUpIFshW0FwcFZleW9yIEJ1aWxkIFN0YXR1
c10oaHR0cHM6Ly9jaS5hcHB2ZXlvci5jb20vYXBpL3Byb2plY3RzL3N0YXR1
cy9yMGVmMXh1OHhqbWlrNThkL2JyYW5jaC9tYXN0ZXI/c3ZnPXRydWUpXSho
dHRwczovL2NpLmFwcHZleW9yLmNvbS9wcm9qZWN0L2RlbnNlLWFuYWx5c2lz
L2FsZSkgWyFbSm9pbiB0aGUgY2hhdCBhdCBodHRwczovL2dpdHRlci5pbS92
aW0tYWxlL0xvYmJ5XShodHRwczovL2JhZGdlcy5naXR0ZXIuaW0vdmltLWFs
ZS9Mb2JieS5zdmcpXShodHRwczovL2dpdHRlci5pbS92aW0tYWxlL0xvYmJ5
P3V0bV9zb3VyY2U9YmFkZ2UmdXRtX21lZGl1bT1iYWRnZSZ1dG1fY2FtcGFp
Z249cHItYmFkZ2UmdXRtX2NvbnRlbnQ9YmFkZ2UpCgoKIVtBTEUgTG9nbyBi
eSBNYXJrIEdyZWFsaXNoIC0gaHR0cHM6Ly93d3cuYmhhbGFzaC5jb20vXSho
dHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8zNTE4
MTQyLzU5MTk1OTIwLTJjMzM5NTAwLThiODUtMTFlOS05YzIyLWY2YjdmNjk2
MzdiOC5qcGcpCgpBTEUgKEFzeW5jaHJvbm91cyBMaW50IEVuZ2luZSkgaXMg
YSBwbHVnaW4gcHJvdmlkaW5nIGxpbnRpbmcgKHN5bnRheCBjaGVja2luZwph
bmQgc2VtYW50aWMgZXJyb3JzKSBpbiBOZW9WaW0gMC4yLjArIGFuZCBWaW0g
OCB3aGlsZSB5b3UgZWRpdCB5b3VyIHRleHQgZmlsZXMsCmFuZCBhY3RzIGFz
IGEgVmltIFtMYW5ndWFnZSBTZXJ2ZXIgUHJvdG9jb2xdKGh0dHBzOi8vbGFu
Z3NlcnZlci5vcmcvKSBjbGllbnQuCgo8aW1nIHNyYz0iaHR0cHM6Ly91c2Vy
LWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMzUxODE0Mi81OTE5NTkz
OC0zYTgxYjEwMC04Yjg1LTExZTktOGU4ZC02YTYwMWIxZGI5MDguZ2lmIiBh
bHQ9IkEgbGludGluZyBleGFtcGxlIHdpdGggdGhlIGRhcmtzcGVjdHJ1bSBj
b2xvciBzY2hlbWUgaW4gR1ZpbS4iIHRpdGxlPSJBIGxpbnRpbmcgZXhhbXBs
ZSB3aXRoIHRoZSBkYXJrc3BlY3RydW0gY29sb3Igc2NoZW1lIGluIEdWaW0u
Ij4KCkFMRSBtYWtlcyB1c2Ugb2YgTmVvVmltIGFuZCBWaW0gOCBqb2IgY29u
dHJvbCBmdW5jdGlvbnMgYW5kIHRpbWVycyB0bwpydW4gbGludGVycyBvbiB0
aGUgY29udGVudHMgb2YgdGV4dCBidWZmZXJzIGFuZCByZXR1cm4gZXJyb3Jz
IGFzCnRleHQgaXMgY2hhbmdlZCBpbiBWaW0uIFRoaXMgYWxsb3dzIGZvciBk
aXNwbGF5aW5nIHdhcm5pbmdzIGFuZAplcnJvcnMgaW4gZmlsZXMgYmVpbmcg
ZWRpdGVkIGluIFZpbSBiZWZvcmUgZmlsZXMgaGF2ZSBiZWVuIHNhdmVkCmJh
Y2sgdG8gYSBmaWxlc3lzdGVtLgoKSW4gb3RoZXIgd29yZHMsIHRoaXMgcGx1
Z2luIGFsbG93cyB5b3UgdG8gbGludCB3aGlsZSB5b3UgdHlwZS4KCkFMRSBv
ZmZlcnMgc3VwcG9ydCBmb3IgZml4aW5nIGNvZGUgd2l0aCBjb21tYW5kIGxp
bmUgdG9vbHMgaW4gYSBub24tYmxvY2tpbmcKbWFubmVyIHdpdGggdGhlIGA6
QUxFRml4YCBmZWF0dXJlLCBzdXBwb3J0aW5nIHRvb2xzIGluIG1hbnkgbGFu
Z3VhZ2VzLCBsaWtlCmBwcmV0dGllcmAsIGBlc2xpbnRgLCBgYXV0b3BlcDhg
LCBhbmQgbW9yZS4KCkFMRSBhY3RzIGFzIGEgImxhbmd1YWdlIGNsaWVudCIg
dG8gc3VwcG9ydCBhIHZhcmlldHkgb2YgTGFuZ3VhZ2UgU2VydmVyIFByb3Rv
Y29sCmZlYXR1cmVzLCBpbmNsdWRpbmc6CgoqIERpYWdub3N0aWNzICh2aWEg
TGFuZ3VhZ2UgU2VydmVyIFByb3RvY29sIGxpbnRlcnMpCiogR28gVG8gRGVm
aW5pdGlvbiAoYDpBTEVHb1RvRGVmaW5pdGlvbmApCiogQ29tcGxldGlvbiAo
QnVpbHQgaW4gY29tcGxldGlvbiBzdXBwb3J0LCBvciB3aXRoIERlb3BsZXRl
KQoqIEZpbmRpbmcgcmVmZXJlbmNlcyAoYDpBTEVGaW5kUmVmZXJlbmNlc2Ap
CiogSG92ZXIgaW5mb3JtYXRpb24gKGA6QUxFSG92ZXJgKQoqIFN5bWJvbCBz
ZWFyY2ggKGA6QUxFU3ltYm9sU2VhcmNoYCkKCklmIHlvdSBkb24ndCBjYXJl
IGFib3V0IExhbmd1YWdlIFNlcnZlciBQcm90b2NvbCwgQUxFIHdvbid0IGxv
YWQgYW55IG9mIHRoZSBjb2RlCmZvciB3b3JraW5nIHdpdGggaXQgdW5sZXNz
IG5lZWRlZC4gT25lIG9mIEFMRSdzIGdlbmVyYWwgbWlzc2lvbnMgaXMgdGhh
dCB5b3UKd29uJ3QgcGF5IGZvciB0aGUgZmVhdHVyZXMgdGhhdCB5b3UgZG9u
J3QgdXNlLgoKSWYgeW91IGVuam95IHRoaXMgcGx1Z2luLCBmZWVsIGZyZWUg
dG8gY29udHJpYnV0ZSBvciBjaGVjayBvdXQgdGhlIGF1dGhvcidzCm90aGVy
IGNvbnRlbnQgYXQgW3cwcnAuY29tXShodHRwczovL3cwcnAuY29tKS4KCiMj
IFRhYmxlIG9mIENvbnRlbnRzCgoxLiBbU3VwcG9ydGVkIExhbmd1YWdlcyBh
bmQgVG9vbHNdKCNzdXBwb3J0ZWQtbGFuZ3VhZ2VzKQoyLiBbVXNhZ2VdKCN1
c2FnZSkKICAgIDEuIFtMaW50aW5nXSgjdXNhZ2UtbGludGluZykKICAgIDIu
IFtGaXhpbmddKCN1c2FnZS1maXhpbmcpCiAgICAzLiBbQ29tcGxldGlvbl0o
I3VzYWdlLWNvbXBsZXRpb24pCiAgICA0LiBbR28gVG8gRGVmaW5pdGlvbl0o
I3VzYWdlLWdvLXRvLWRlZmluaXRpb24pCiAgICA1LiBbRmluZCBSZWZlcmVu
Y2VzXSgjdXNhZ2UtZmluZC1yZWZlcmVuY2VzKQogICAgNi4gW0hvdmVyaW5n
XSgjdXNhZ2UtaG92ZXIpCiAgICA3LiBbU3ltYm9sIFNlYXJjaF0oI3VzYWdl
LXN5bWJvbC1zZWFyY2gpCjMuIFtJbnN0YWxsYXRpb25dKCNpbnN0YWxsYXRp
b24pCiAgICAxLiBbSW5zdGFsbGF0aW9uIHdpdGggVmltIHBhY2thZ2UgbWFu
YWdlbWVudF0oI3N0YW5kYXJkLWluc3RhbGxhdGlvbikKICAgIDIuIFtJbnN0
YWxsYXRpb24gd2l0aCBQYXRob2dlbl0oI2luc3RhbGxhdGlvbi13aXRoLXBh
dGhvZ2VuKQogICAgMy4gW0luc3RhbGxhdGlvbiB3aXRoIFZ1bmRsZV0oI2lu
c3RhbGxhdGlvbi13aXRoLXZ1bmRsZSkKICAgIDQuIFtJbnN0YWxsYXRpb24g
d2l0aCBWaW0tUGx1Z10oI2luc3RhbGxhdGlvbi13aXRoLXZpbS1wbHVnKQo0
LiBbQ29udHJpYnV0aW5nXSgjY29udHJpYnV0aW5nKQo1LiBbRkFRXSgjZmFx
KQogICAgMS4gW0hvdyBkbyBJIGRpc2FibGUgcGFydGljdWxhciBsaW50ZXJz
P10oI2ZhcS1kaXNhYmxlLWxpbnRlcnMpCiAgICAyLiBbSG93IGNhbiBJIGtl
ZXAgdGhlIHNpZ24gZ3V0dGVyIG9wZW4/XSgjZmFxLWtlZXAtc2lnbnMpCiAg
ICAzLiBbSG93IGNhbiBJIGNoYW5nZSB0aGUgc2lnbnMgQUxFIHVzZXM/XSgj
ZmFxLWNoYW5nZS1zaWducykKICAgIDQuIFtIb3cgY2FuIEkgY2hhbmdlIG9y
IGRpc2FibGUgdGhlIGhpZ2hsaWdodHMgQUxFIHVzZXM/XSgjZmFxLWNoYW5n
ZS1oaWdobGlnaHRzKQogICAgNS4gW0hvdyBjYW4gSSBzaG93IGVycm9ycyBv
ciB3YXJuaW5ncyBpbiBteSBzdGF0dXNsaW5lP10oI2ZhcS1zdGF0dXNsaW5l
KQogICAgNi4gW0hvdyBjYW4gSSBzaG93IGVycm9ycyBvciB3YXJuaW5ncyBp
biBteSBsaWdodGxpbmU/XSgjZmFxLWxpZ2h0bGluZSkKICAgIDcuIFtIb3cg
Y2FuIEkgY2hhbmdlIHRoZSBmb3JtYXQgZm9yIGVjaG8gbWVzc2FnZXM/XSgj
ZmFxLWVjaG8tZm9ybWF0KQogICAgOC4gW0hvdyBjYW4gSSBleGVjdXRlIHNv
bWUgY29kZSB3aGVuIEFMRSBzdGFydHMgb3Igc3RvcHMgbGludGluZz9dKCNm
YXEtYXV0b2NtZCkKICAgIDkuIFtIb3cgY2FuIEkgbmF2aWdhdGUgYmV0d2Vl
biBlcnJvcnMgcXVpY2tseT9dKCNmYXEtbmF2aWdhdGlvbikKICAgIDEwLiBb
SG93IGNhbiBJIHJ1biBsaW50ZXJzIG9ubHkgd2hlbiBJIHNhdmUgZmlsZXM/
XSgjZmFxLWxpbnQtb24tc2F2ZSkKICAgIDExLiBbSG93IGNhbiBJIHVzZSB0
aGUgcXVpY2tmaXggbGlzdCBpbnN0ZWFkIG9mIHRoZSBsb2NsaXN0P10oI2Zh
cS1xdWlja2ZpeCkKICAgIDEyLiBbSG93IGNhbiBJIGNoZWNrIEpTWCBmaWxl
cyB3aXRoIGJvdGggc3R5bGVsaW50IGFuZCBlc2xpbnQ/XSgjZmFxLWpzeC1z
dHlsZWxpbnQtZXNsaW50KQogICAgMTMuIFtIb3cgY2FuIEkgY2hlY2sgVnVl
IGZpbGVzIHdpdGggRVNMaW50P10oI2ZhcS12dWUtZXNsaW50KQogICAgMTQu
IFtXaWxsIHRoaXMgcGx1Z2luIGVhdCBhbGwgb2YgbXkgbGFwdG9wIGJhdHRl
cnkgcG93ZXI/XSgjZmFxLW15LWJhdHRlcnktaXMtc2FkKQogICAgMTUuIFtI
b3cgY2FuIEkgY29uZmlndXJlIG15IEMgb3IgQysrIHByb2plY3Q/XSgjZmFx
LWMtY29uZmlndXJhdGlvbikKICAgIDE2LiBbSG93IGNhbiBJIGNvbmZpZ3Vy
ZSBBTEUgZGlmZmVyZW50bHkgZm9yIGRpZmZlcmVudCBidWZmZXJzP10oI2Zh
cS1idWZmZXItY29uZmlndXJhdGlvbikKICAgIDE3LiBbSG93IGNhbiBJIGNv
bmZpZ3VyZSB0aGUgaGVpZ2h0IG9mIHRoZSBsaXN0IGluIHdoaWNoIEFMRSBk
aXNwbGF5cyBlcnJvcnM/XSgjZmFxLWxpc3Qtd2luZG93LWhlaWdodCkKICAg
IDE4LiBbSG93IGNhbiBJIHNlZSB3aGF0IEFMRSBoYXMgY29uZmlndXJlZCBm
b3IgdGhlIGN1cnJlbnQgZmlsZT9dKCNmYXEtZ2V0LWluZm8pCgo8YSBuYW1l
PSJzdXBwb3J0ZWQtbGFuZ3VhZ2VzIj48L2E+CgojIyAxLiBTdXBwb3J0ZWQg
TGFuZ3VhZ2VzIGFuZCBUb29scwoKQUxFIHN1cHBvcnRzIGEgd2lkZSB2YXJp
ZXR5IG9mIGxhbmd1YWdlcyBhbmQgdG9vbHMuIFNlZSB0aGUKW2Z1bGwgbGlz
dF0oc3VwcG9ydGVkLXRvb2xzLm1kKSBpbiB0aGUKW1N1cHBvcnRlZCBMYW5n
dWFnZXMgYW5kIFRvb2xzXShzdXBwb3J0ZWQtdG9vbHMubWQpIHBhZ2UuCgo8
YSBuYW1lPSJ1c2FnZSI+PC9hPgoKIyMgMi4gVXNhZ2UKCjxhIG5hbWU9InVz
YWdlLWxpbnRpbmciPjwvYT4KCiMjIyAyLmkgTGludGluZwoKT25jZSB0aGlz
IHBsdWdpbiBpcyBpbnN0YWxsZWQsIHdoaWxlIGVkaXRpbmcgeW91ciBmaWxl
cyBpbiBzdXBwb3J0ZWQKbGFuZ3VhZ2VzIGFuZCB0b29scyB3aGljaCBoYXZl
IGJlZW4gY29ycmVjdGx5IGluc3RhbGxlZCwKdGhpcyBwbHVnaW4gd2lsbCBz
ZW5kIHRoZSBjb250ZW50cyBvZiB5b3VyIHRleHQgYnVmZmVycyB0byBhIHZh
cmlldHkgb2YKcHJvZ3JhbXMgZm9yIGNoZWNraW5nIHRoZSBzeW50YXggYW5k
IHNlbWFudGljcyBvZiB5b3VyIHByb2dyYW1zLiBCeSBkZWZhdWx0LApsaW50
ZXJzIHdpbGwgYmUgcmUtcnVuIGluIHRoZSBiYWNrZ3JvdW5kIHRvIGNoZWNr
IHlvdXIgc3ludGF4IHdoZW4geW91IG9wZW4KbmV3IGJ1ZmZlcnMgb3IgYXMg
eW91IG1ha2UgZWRpdHMgdG8geW91ciBmaWxlcy4KClRoZSBiZWhhdmlvdXIg
b2YgbGludGluZyBjYW4gYmUgY29uZmlndXJlZCB3aXRoIGEgdmFyaWV0eSBv
ZiBvcHRpb25zLApkb2N1bWVudGVkIGluIFt0aGUgVmltIGhlbHAgZmlsZV0o
ZG9jL2FsZS50eHQpLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiB0aGUKb3B0
aW9ucyBBTEUgb2ZmZXJzLCBjb25zdWx0IGA6aGVscCBhbGUtb3B0aW9uc2Ag
Zm9yIGdsb2JhbCBvcHRpb25zIGFuZCBgOmhlbHAKYWxlLWludGVncmF0aW9u
LW9wdGlvbnNgIGZvciBvcHRpb25zIHNwZWNpZmllZCB0byBwYXJ0aWN1bGFy
IGxpbnRlcnMuCgo8YSBuYW1lPSJ1c2FnZS1maXhpbmciPjwvYT4KCiMjIyAy
LmlpIEZpeGluZwoKQUxFIGNhbiBmaXggZmlsZXMgd2l0aCB0aGUgYEFMRUZp
eGAgY29tbWFuZC4gRnVuY3Rpb25zIG5lZWQgdG8gYmUgY29uZmlndXJlZApl
aXRoZXIgaW4gZWFjaCBidWZmZXIgd2l0aCBhIGBiOmFsZV9maXhlcnNgLCBv
ciBnbG9iYWxseSB3aXRoIGBnOmFsZV9maXhlcnNgLgoKVGhlIHJlY29tbWVu
ZGVkIHdheSB0byBjb25maWd1cmUgZml4ZXJzIGlzIHRvIGRlZmluZSBhIExp
c3QgaW4gYW4gZnRwbHVnaW4gZmlsZS4KCmBgYHZpbQoiIEluIH4vLnZpbS9m
dHBsdWdpbi9qYXZhc2NyaXB0LnZpbSwgb3Igc29tZXdoZXJlIHNpbWlsYXIu
CgoiIEZpeCBmaWxlcyB3aXRoIHByZXR0aWVyLCBhbmQgdGhlbiBFU0xpbnQu
CmxldCBiOmFsZV9maXhlcnMgPSBbJ3ByZXR0aWVyJywgJ2VzbGludCddCiIg
RXF1aXZhbGVudCB0byB0aGUgYWJvdmUuCmxldCBiOmFsZV9maXhlcnMgPSB7
J2phdmFzY3JpcHQnOiBbJ3ByZXR0aWVyJywgJ2VzbGludCddfQpgYGAKCllv
dSBjYW4gYWxzbyBjb25maWd1cmUgeW91ciBmaXhlcnMgZnJvbSB2aW1yYyB1
c2luZyBgZzphbGVfZml4ZXJzYCwgYmVmb3JlIG9yCmFmdGVyIEFMRSBoYXMg
YmVlbiBsb2FkZWQuCgpBIGAqYCBpbiBwbGFjZSBvZiB0aGUgZmlsZXR5cGUg
d2lsbCBhcHBseSBhIExpc3Qgb2YgZml4ZXJzIHRvIGFsbCBmaWxlcyB3aGlj
aApkbyBub3QgbWF0Y2ggc29tZSBmaWxldHlwZSBpbiB0aGUgRGljdGlvbmFy
eS4KCk5vdGUgdGhhdCB1c2luZyBhIHBsYWluIExpc3QgZm9yIGBnOmFsZV9m
aXhlcnNgIGlzIG5vdCBzdXBwb3J0ZWQuCgpgYGB2aW0KIiBJbiB+Ly52aW0v
dmltcmMsIG9yIHNvbWV3aGVyZSBzaW1pbGFyLgpsZXQgZzphbGVfZml4ZXJz
ID0gewpcICAgJyonOiBbJ3JlbW92ZV90cmFpbGluZ19saW5lcycsICd0cmlt
X3doaXRlc3BhY2UnXSwKXCAgICdqYXZhc2NyaXB0JzogWydlc2xpbnQnXSwK
XH0KYGBgCgpJZiB5b3Ugd2FudCB0byBhdXRvbWF0aWNhbGx5IGZpeCBmaWxl
cyB3aGVuIHlvdSBzYXZlIHRoZW0sIHlvdSBuZWVkIHRvIHR1cm4KYSBzZXR0
aW5nIG9uIGluIHZpbXJjLgoKYGBgdmltCiIgU2V0IHRoaXMgdmFyaWFibGUg
dG8gMSB0byBmaXggZmlsZXMgd2hlbiB5b3Ugc2F2ZSB0aGVtLgpsZXQgZzph
bGVfZml4X29uX3NhdmUgPSAxCmBgYAoKVGhlIGA6QUxFRml4U3VnZ2VzdGAg
Y29tbWFuZCB3aWxsIHN1Z2dlc3Qgc29tZSBzdXBwb3J0ZWQgdG9vbHMgZm9y
IGZpeGluZyBjb2RlLgpCb3RoIGBnOmFsZV9maXhlcnNgIGFuZCBgYjphbGVf
Zml4ZXJzYCBjYW4gYWxzbyBhY2NlcHQgZnVuY3Rpb25zLCBpbmNsdWRpbmcK
bGFtYmRhIGZ1bmN0aW9ucywgYXMgZml4ZXJzLCBmb3IgZml4aW5nIGZpbGVz
IHdpdGggY3VzdG9tIHRvb2xzLgoKU2VlIGA6aGVscCBhbGUtZml4YCBmb3Ig
Y29tcGxldGUgaW5mb3JtYXRpb24gb24gaG93IHRvIGZpeCBmaWxlcyB3aXRo
IEFMRS4KCjxhIG5hbWU9InVzYWdlLWNvbXBsZXRpb24iPjwvYT4KCiMjIyAy
LmlpaSBDb21wbGV0aW9uCgpBTEUgb2ZmZXJzIHNvbWUgc3VwcG9ydCBmb3Ig
Y29tcGxldGlvbiB2aWEgaGlqYWNraW5nIG9mIG9tbmljb21wbGV0aW9uIHdo
aWxlIHlvdQp0eXBlLiBBbGwgb2YgQUxFJ3MgY29tcGxldGlvbiBpbmZvcm1h
dGlvbiBtdXN0IGNvbWUgZnJvbSBMYW5ndWFnZSBTZXJ2ZXIKUHJvdG9jb2wg
bGludGVycywgb3IgZnJvbSBgdHNzZXJ2ZXJgIGZvciBUeXBlU2NyaXB0LgoK
QUxFIGludGVncmF0ZXMgd2l0aCBbRGVvcGxldGVdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9TaG91Z28vZGVvcGxldGUubnZpbSkgYXMgYQpjb21wbGV0aW9uIHNv
dXJjZSwgbmFtZWQgYCdhbGUnYC4gWW91IGNhbiBjb25maWd1cmUgRGVvcGxl
dGUgdG8gb25seSB1c2UgQUxFIGFzCnRoZSBzb3VyY2Ugb2YgY29tcGxldGlv
biBpbmZvcm1hdGlvbiwgb3IgbWl4IGl0IHdpdGggb3RoZXIgc291cmNlcy4K
CmBgYHZpbQoiIFVzZSBBTEUgYW5kIGFsc28gc29tZSBwbHVnaW4gJ2Zvb2Jh
cicgYXMgY29tcGxldGlvbiBzb3VyY2VzIGZvciBhbGwgY29kZS4KY2FsbCBk
ZW9wbGV0ZSNjdXN0b20jb3B0aW9uKCdzb3VyY2VzJywgewpcICdfJzogWydh
bGUnLCAnZm9vYmFyJ10sClx9KQpgYGAKCkFMRSBhbHNvIG9mZmVycyBpdHMg
b3duIGF1dG9tYXRpYyBjb21wbGV0aW9uIHN1cHBvcnQsIHdoaWNoIGRvZXMg
bm90IHJlcXVpcmUgYW55Cm90aGVyIHBsdWdpbnMsIGFuZCBjYW4gYmUgZW5h
YmxlZCBieSBjaGFuZ2luZyBhIHNldHRpbmcgYmVmb3JlIEFMRSBpcyBsb2Fk
ZWQuCgpgYGB2aW0KIiBFbmFibGUgY29tcGxldGlvbiB3aGVyZSBhdmFpbGFi
bGUuCiIgVGhpcyBzZXR0aW5nIG11c3QgYmUgc2V0IGJlZm9yZSBBTEUgaXMg
bG9hZGVkLgoiCiIgWW91IHNob3VsZCBub3QgdHVybiB0aGlzIHNldHRpbmcg
b24gaWYgeW91IHdpc2ggdG8gdXNlIEFMRSBhcyBhIGNvbXBsZXRpb24KIiBz
b3VyY2UgZm9yIG90aGVyIGNvbXBsZXRpb24gcGx1Z2lucywgbGlrZSBEZW9w
bGV0ZS4KbGV0IGc6YWxlX2NvbXBsZXRpb25fZW5hYmxlZCA9IDEKYGBgCgpB
TEUgcHJvdmlkZXMgYW4gb21uaS1jb21wbGV0aW9uIGZ1bmN0aW9uIHlvdSBj
YW4gdXNlIGZvciB0cmlnZ2VyaW5nCmNvbXBsZXRpb24gbWFudWFsbHkgd2l0
aCBgPEMteD48Qy1vPmAuCgpgYGB2aW0Kc2V0IG9tbmlmdW5jPWFsZSNjb21w
bGV0aW9uI09tbmlGdW5jCmBgYAoKV2hlbiB3b3JraW5nIHdpdGggVHlwZVNj
cmlwdCBmaWxlcywgQUxFIHN1cHBvcnRzIGF1dG9tYXRpYyBpbXBvcnRzIGZy
b20KZXh0ZXJuYWwgbW9kdWxlcy4gVGhpcyBiZWhhdmlvciBpcyBkaXNhYmxl
ZCBieSBkZWZhdWx0IGFuZCBjYW4gYmUgZW5hYmxlZCBieQpzZXR0aW5nOgoK
YGBgdmltCmxldCBnOmFsZV9jb21wbGV0aW9uX3Rzc2VydmVyX2F1dG9pbXBv
cnQgPSAxCmBgYAoKU2VlIGA6aGVscCBhbGUtY29tcGxldGlvbmAgZm9yIG1v
cmUgaW5mb3JtYXRpb24uCgo8YSBuYW1lPSJ1c2FnZS1nby10by1kZWZpbml0
aW9uIj48L2E+CgojIyMgMi5pdiBHbyBUbyBEZWZpbml0aW9uCgpBTEUgc3Vw
cG9ydHMganVtcGluZyB0byB0aGUgZGVmaW5pdGlvbiBvZiB3b3JkcyB1bmRl
ciB5b3VyIGN1cnNvciB3aXRoIHRoZQpgOkFMRUdvVG9EZWZpbml0aW9uYCBj
b21tYW5kIHVzaW5nIGFueSBlbmFibGVkIExhbmd1YWdlIFNlcnZlciBQcm90
b2NvbCBsaW50ZXJzCmFuZCBgdHNzZXJ2ZXJgLgoKU2VlIGA6aGVscCBhbGUt
Z28tdG8tZGVmaW5pdGlvbmAgZm9yIG1vcmUgaW5mb3JtYXRpb24uCgo8YSBu
YW1lPSJ1c2FnZS1maW5kLXJlZmVyZW5jZXMiPjwvYT4KCiMjIyAyLnYgRmlu
ZCBSZWZlcmVuY2VzCgpBTEUgc3VwcG9ydHMgZmluZGluZyByZWZlcmVuY2Vz
IGZvciB3b3JkcyB1bmRlciB5b3VyIGN1cnNvciB3aXRoIHRoZQpgOkFMRUZp
bmRSZWZlcmVuY2VzYCBjb21tYW5kIHVzaW5nIGFueSBlbmFibGVkIExhbmd1
YWdlIFNlcnZlciBQcm90b2NvbCBsaW50ZXJzCmFuZCBgdHNzZXJ2ZXJgLgoK
U2VlIGA6aGVscCBhbGUtZmluZC1yZWZlcmVuY2VzYCBmb3IgbW9yZSBpbmZv
cm1hdGlvbi4KCjxhIG5hbWU9InVzYWdlLWhvdmVyIj48L2E+CgojIyMgMi52
aSBIb3ZlcmluZwoKQUxFIHN1cHBvcnRzICJob3ZlciIgaW5mb3JtYXRpb24g
Zm9yIHByaW50aW5nIGJyaWVmIGluZm9ybWF0aW9uIGFib3V0IHN5bWJvbHMg
YXQKdGhlIGN1cnNvciB0YWtlbiBmcm9tIExhbmd1YWdlIFNlcnZlciBQcm90
b2NvbCBsaW50ZXJzIGFuZCBgdHNzZXJ2ZXJgIHdpdGggdGhlCmBBTEVIb3Zl
cmAgY29tbWFuZC4KClRoZSBpbmZvcm1hdGlvbiBjYW4gYmUgZGlzcGxheWVk
IGluIGEgYGJhbGxvb25gIHRvb2x0aXAgaW4gVmltIG9yIEdWaW0gYnkKaG92
ZXJpbmcgeW91ciBtb3VzZSBvdmVyIHN5bWJvbHMuIE1vdXNlIGhvdmVyaW5n
IGlzIGVuYWJsZWQgYnkgZGVmYXVsdCBpbiBHVmltLAphbmQgbmVlZHMgdG8g
YmUgY29uZmlndXJlZCBmb3IgVmltIDguMSsgaW4gdGVybWluYWxzLgoKU2Vl
IGA6aGVscCBhbGUtaG92ZXJgIGZvciBtb3JlIGluZm9ybWF0aW9uLgoKPGEg
bmFtZT0idXNhZ2Utc3ltYm9sLXNlYXJjaCI+PC9hPgoKIyMjIDIudmlpIFN5
bWJvbCBTZWFyY2gKCkFMRSBzdXBwb3J0cyBzZWFyY2hpbmcgZm9yIHdvcmtz
cGFjZSBzeW1ib2xzIHZpYSBMYW5ndWFnZSBTZXJ2ZXIgUHJvdG9jb2wKbGlu
dGVycyB3aXRoIHRoZSBgQUxFU3ltYm9sU2VhcmNoYCBjb21tYW5kLgoKU2Vh
cmNoIHF1ZXJpZXMgY2FuIGJlIHBlcmZvcm1lZCB0byBmaW5kIGZ1bmN0aW9u
cywgdHlwZXMsIGFuZCBtb3JlIHdoaWNoIGFyZQpzaW1pbGFyIHRvIGEgZ2l2
ZW4gcXVlcnkgc3RyaW5nLgoKU2VlIGA6aGVscCBhbGUtc3ltYm9sLXNlYXJj
aGAgZm9yIG1vcmUgaW5mb3JtYXRpb24uCgo8YSBuYW1lPSJpbnN0YWxsYXRp
b24iPjwvYT4KCiMjIDMuIEluc3RhbGxhdGlvbgoKVG8gaW5zdGFsbCB0aGlz
IHBsdWdpbiwgeW91IHNob3VsZCB1c2Ugb25lIG9mIHRoZSBmb2xsb3dpbmcg
bWV0aG9kcy4KRm9yIFdpbmRvd3MgdXNlcnMsIHJlcGxhY2UgdXNhZ2Ugb2Yg
dGhlIFVuaXggYH4vLnZpbWAgZGlyZWN0b3J5IHdpdGgKYCVVU0VSUFJPRklM
RSVcdmltZmlsZXNgLCBvciBhbm90aGVyIGRpcmVjdG9yeSBpZiB5b3UgaGF2
ZSBjb25maWd1cmVkClZpbSBkaWZmZXJlbnRseS4gT24gV2luZG93cywgeW91
ciBgfi8udmltcmNgIGZpbGUgd2lsbCBiZSBzaW1pbGFybHkKc3RvcmVkIGlu
IGAlVVNFUlBST0ZJTEUlXF92aW1yY2AuCgo8YSBuYW1lPSJzdGFuZGFyZC1p
bnN0YWxsYXRpb24iPjwvYT4KCiMjIyAzLmkuIEluc3RhbGxhdGlvbiB3aXRo
IFZpbSBwYWNrYWdlIG1hbmFnZW1lbnQKCkluIFZpbSA4IGFuZCBOZW9WaW0s
IHlvdSBjYW4gaW5zdGFsbCBwbHVnaW5zIGVhc2lseSB3aXRob3V0IG5lZWRp
bmcgdG8gdXNlCmFueSBvdGhlciB0b29scy4gU2ltcGx5IGNsb25lIHRoZSBw
bHVnaW4gaW50byB5b3VyIGBwYWNrYCBkaXJlY3RvcnkuCgojIyMjIFZpbSA4
IG9uIFVuaXgKCmBgYGJhc2gKbWtkaXIgLXAgfi8udmltL3BhY2svZ2l0LXBs
dWdpbnMvc3RhcnQKZ2l0IGNsb25lIC0tZGVwdGggMSBodHRwczovL2dpdGh1
Yi5jb20vZGVuc2UtYW5hbHlzaXMvYWxlLmdpdCB+Ly52aW0vcGFjay9naXQt
cGx1Z2lucy9zdGFydC9hbGUKYGBgCgojIyMjIE5lb1ZpbSBvbiBVbml4Cgpg
YGBiYXNoCm1rZGlyIC1wIH4vLmxvY2FsL3NoYXJlL252aW0vc2l0ZS9wYWNr
L2dpdC1wbHVnaW5zL3N0YXJ0CmdpdCBjbG9uZSAtLWRlcHRoIDEgaHR0cHM6
Ly9naXRodWIuY29tL2RlbnNlLWFuYWx5c2lzL2FsZS5naXQgfi8ubG9jYWwv
c2hhcmUvbnZpbS9zaXRlL3BhY2svZ2l0LXBsdWdpbnMvc3RhcnQvYWxlCmBg
YAoKIyMjIyBWaW0gOCBvbiBXaW5kb3dzCgpgYGBiYXNoCiMgUnVuIHRoZXNl
IGNvbW1hbmRzIGluIHRoZSAiR2l0IGZvciBXaW5kb3dzIiBCYXNoIHRlcm1p
bmFsCm1rZGlyIC1wIH4vdmltZmlsZXMvcGFjay9naXQtcGx1Z2lucy9zdGFy
dApnaXQgY2xvbmUgLS1kZXB0aCAxIGh0dHBzOi8vZ2l0aHViLmNvbS9kZW5z
ZS1hbmFseXNpcy9hbGUuZ2l0IH4vdmltZmlsZXMvcGFjay9naXQtcGx1Z2lu
cy9zdGFydC9hbGUKYGBgCgojIyMjIEdlbmVyYXRpbmcgVmltIGhlbHAgZmls
ZXMKCllvdSBjYW4gYWRkIHRoZSBmb2xsb3dpbmcgbGluZSB0byB5b3VyIHZp
bXJjIGZpbGVzIHRvIGdlbmVyYXRlIGRvY3VtZW50YXRpb24KdGFncyBhdXRv
bWF0aWNhbGx5LCBpZiB5b3UgZG9uJ3QgaGF2ZSBzb21ldGhpbmcgc2ltaWxh
ciBhbHJlYWR5LCBzbyB5b3UgY2FuIHVzZQp0aGUgYDpoZWxwYCBjb21tYW5k
IHRvIGNvbnN1bHQgQUxFJ3Mgb25saW5lIGRvY3VtZW50YXRpb246CgpgYGB2
aW0KIiBQdXQgdGhlc2UgbGluZXMgYXQgdGhlIHZlcnkgZW5kIG9mIHlvdXIg
dmltcmMgZmlsZS4KCiIgTG9hZCBhbGwgcGx1Z2lucyBub3cuCiIgUGx1Z2lu
cyBuZWVkIHRvIGJlIGFkZGVkIHRvIHJ1bnRpbWVwYXRoIGJlZm9yZSBoZWxw
dGFncyBjYW4gYmUgZ2VuZXJhdGVkLgpwYWNrbG9hZGFsbAoiIExvYWQgYWxs
IG9mIHRoZSBoZWxwdGFncyBub3csIGFmdGVyIHBsdWdpbnMgaGF2ZSBiZWVu
IGxvYWRlZC4KIiBBbGwgbWVzc2FnZXMgYW5kIGVycm9ycyB3aWxsIGJlIGln
bm9yZWQuCnNpbGVudCEgaGVscHRhZ3MgQUxMCmBgYAoKPGEgbmFtZT0iaW5z
dGFsbGF0aW9uLXdpdGgtcGF0aG9nZW4iPjwvYT4KCiMjIyAzLmlpLiBJbnN0
YWxsYXRpb24gd2l0aCBQYXRob2dlbgoKVG8gaW5zdGFsbCB0aGlzIG1vZHVs
ZSB3aXRoIFtQYXRob2dlbl0oaHR0cHM6Ly9naXRodWIuY29tL3Rwb3BlL3Zp
bS1wYXRob2dlbiksCnlvdSBzaG91bGQgY2xvbmUgdGhpcyByZXBvc2l0b3J5
IHRvIHlvdXIgYnVuZGxlIGRpcmVjdG9yeSwgYW5kIGVuc3VyZQp5b3UgaGF2
ZSB0aGUgbGluZSBgZXhlY3V0ZSBwYXRob2dlbiNpbmZlY3QoKWAgaW4geW91
ciBgfi8udmltcmNgIGZpbGUuCllvdSBjYW4gcnVuIHRoZSBmb2xsb3dpbmcg
Y29tbWFuZHMgaW4geW91ciB0ZXJtaW5hbCB0byBkbyBzbzoKCmBgYGJhc2gK
Y2Qgfi8udmltL2J1bmRsZQpnaXQgY2xvbmUgaHR0cHM6Ly9naXRodWIuY29t
L2RlbnNlLWFuYWx5c2lzL2FsZS5naXQKYGBgCgo8YSBuYW1lPSJpbnN0YWxs
YXRpb24td2l0aC12dW5kbGUiPjwvYT4KCiMjIyAzLmlpaS4gSW5zdGFsbGF0
aW9uIHdpdGggVnVuZGxlCgpZb3UgY2FuIGluc3RhbGwgdGhpcyBwbHVnaW4g
dXNpbmcgW1Z1bmRsZV0oaHR0cHM6Ly9naXRodWIuY29tL1Z1bmRsZVZpbS9W
dW5kbGUudmltKQpieSB1c2luZyB0aGUgcGF0aCBvbiBHaXRIdWIgZm9yIHRo
aXMgcmVwb3NpdG9yeS4KCmBgYHZpbQpQbHVnaW4gJ2RlbnNlLWFuYWx5c2lz
L2FsZScKYGBgCgpTZWUgdGhlIFZ1bmRsZSBkb2N1bWVudGF0aW9uIGZvciBt
b3JlIGluZm9ybWF0aW9uLgoKPGEgbmFtZT0iaW5zdGFsbGF0aW9uLXdpdGgt
dmltLXBsdWciPjwvYT4KCiMjIyAzLmlpaWkuIEluc3RhbGxhdGlvbiB3aXRo
IFZpbS1QbHVnCgpZb3UgY2FuIGluc3RhbGwgdGhpcyBwbHVnaW4gdXNpbmcg
W1ZpbS1QbHVnXShodHRwczovL2dpdGh1Yi5jb20vanVuZWd1bm4vdmltLXBs
dWcpCmJ5IGFkZGluZyB0aGUgR2l0SHViIHBhdGggZm9yIHRoaXMgcmVwb3Np
dG9yeSB0byB5b3VyIGB+Ly52aW1yY2AKYW5kIHJ1bm5pbmcgYDpQbHVnSW5z
dGFsbGAuCgpgYGB2aW0KUGx1ZyAnZGVuc2UtYW5hbHlzaXMvYWxlJwpgYGAK
CjxhIG5hbWU9ImNvbnRyaWJ1dGluZyI+PC9hPgoKIyMgNC4gQ29udHJpYnV0
aW5nCgpJZiB5b3Ugd291bGQgbGlrZSB0byBzZWUgc3VwcG9ydCBmb3IgbW9y
ZSBsYW5ndWFnZXMgYW5kIHRvb2xzLCBwbGVhc2UKW2NyZWF0ZSBhbiBpc3N1
ZV0oaHR0cHM6Ly9naXRodWIuY29tL2RlbnNlLWFuYWx5c2lzL2FsZS9pc3N1
ZXMpCm9yIFtjcmVhdGUgYSBwdWxsIHJlcXVlc3RdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9kZW5zZS1hbmFseXNpcy9hbGUvcHVsbHMpLgpJZiB5b3VyIHRvb2wg
Y2FuIHJlYWQgZnJvbSBzdGRpbiBvciB5b3UgaGF2ZSBjb2RlIHRvIHN1Z2dl
c3Qgd2hpY2ggaXMgZ29vZCwKc3VwcG9ydCBjYW4gYmUgaGFwcGlseSBhZGRl
ZCBmb3IgaXQuCgpJZiB5b3UgYXJlIGludGVyZXN0ZWQgaW4gdGhlIGdlbmVy
YWwgZGlyZWN0aW9uIG9mIHRoZSBwcm9qZWN0LCBjaGVjayBvdXQgdGhlClt3
aWtpIGhvbWUgcGFnZV0oaHR0cHM6Ly9naXRodWIuY29tL2RlbnNlLWFuYWx5
c2lzL2FsZS93aWtpKS4gVGhlIHdpa2kgaW5jbHVkZXMKYSBSb2FkbWFwIGZv
ciB0aGUgZnV0dXJlLCBhbmQgbW9yZS4KCklmIHlvdSdkIGxpa2VkIHRvIGRp
c2N1c3MgdGhlIHByb2plY3QgbW9yZSBkaXJlY3RseSwgY2hlY2sgb3V0IHRo
ZSBgI3ZpbS1hbGVgIGNoYW5uZWwKb24gRnJlZW5vZGUuIFdlYiBjaGF0IGlz
IGF2YWlsYWJsZSBbaGVyZV0oaHR0cHM6Ly93ZWJjaGF0LmZyZWVub2RlLm5l
dC8/Y2hhbm5lbHM9dmltLWFsZSkuCgo8YSBuYW1lPSJmYXEiPjwvYT4KCiMj
IDUuIEZBUQoKPGEgbmFtZT0iZmFxLWRpc2FibGUtbGludGVycyI+PC9hPgoK
IyMjIDUuaS4gSG93IGRvIEkgZGlzYWJsZSBwYXJ0aWN1bGFyIGxpbnRlcnM/
CgpCeSBkZWZhdWx0LCBhbGwgYXZhaWxhYmxlIHRvb2xzIGZvciBhbGwgc3Vw
cG9ydGVkIGxhbmd1YWdlcyB3aWxsIGJlIHJ1bi4gSWYgeW91CndhbnQgdG8g
b25seSBzZWxlY3QgYSBzdWJzZXQgb2YgdGhlIHRvb2xzLCB5b3UgY2FuIGRl
ZmluZSBgYjphbGVfbGludGVyc2AgZm9yIGEKc2luZ2xlIGJ1ZmZlciwgb3Ig
YGc6YWxlX2xpbnRlcnNgIGdsb2JhbGx5LgoKVGhlIHJlY29tbWVuZGVkIHdh
eSB0byBjb25maWd1cmUgbGludGVycyBpcyB0byBkZWZpbmUgYSBMaXN0IGlu
IGFuIGZ0cGx1Z2luCmZpbGUuCgpgYGB2aW0KIiBJbiB+Ly52aW0vZnRwbHVn
aW4vamF2YXNjcmlwdC52aW0sIG9yIHNvbWV3aGVyZSBzaW1pbGFyLgoKIiBF
bmFibGUgRVNMaW50IG9ubHkgZm9yIEphdmFTY3JpcHQuCmxldCBiOmFsZV9s
aW50ZXJzID0gWydlc2xpbnQnXQoKIiBFcXVpdmFsZW50IHRvIHRoZSBhYm92
ZS4KbGV0IGI6YWxlX2xpbnRlcnMgPSB7J2phdmFzY3JpcHQnOiBbJ2VzbGlu
dCddfQpgYGAKCllvdSBjYW4gYWxzbyBkZWNsYXJlIHdoaWNoIGxpbnRlcnMg
eW91IHdhbnQgdG8gcnVuIGluIHlvdXIgdmltcmMgZmlsZSwgYmVmb3JlIG9y
CmFmdGVyIEFMRSBoYXMgYmVlbiBsb2FkZWQuCgpgYGB2aW0KIiBJbiB+Ly52
aW0vdmltcmMsIG9yIHNvbWV3aGVyZSBzaW1pbGFyLgpsZXQgZzphbGVfbGlu
dGVycyA9IHsKXCAgICdqYXZhc2NyaXB0JzogWydlc2xpbnQnXSwKXH0KYGBg
CgpGb3IgYWxsIGxhbmd1YWdlcyB1bnNwZWNpZmllZCBpbiB0aGUgZGljdGlv
bmFyeSwgYWxsIHBvc3NpYmxlIGxpbnRlcnMgd2lsbApiZSBydW4gZm9yIHRo
b3NlIGxhbmd1YWdlcywganVzdCBhcyB3aGVuIHRoZSBkaWN0aW9uYXJ5IGlz
IG5vdCBkZWZpbmVkLgpSdW5uaW5nIG1hbnkgbGludGVycyBzaG91bGQgbm90
IHR5cGljYWxseSBvYnN0cnVjdCBlZGl0aW5nIGluIFZpbSwKYXMgdGhleSB3
aWxsIGFsbCBiZSBleGVjdXRlZCBpbiBzZXBhcmF0ZSBwcm9jZXNzZXMgc2lt
dWx0YW5lb3VzbHkuCgpJZiB5b3UgZG9uJ3Qgd2FudCBBTEUgdG8gcnVuIGFu
eXRoaW5nIG90aGVyIHRoYW4gd2hhdCB5b3UndmUgZXhwbGljaXRseSBhc2tl
ZApmb3IsIHlvdSBjYW4gc2V0IGBnOmFsZV9saW50ZXJzX2V4cGxpY2l0YCB0
byBgMWAuCgpgYGB2aW0KIiBPbmx5IHJ1biBsaW50ZXJzIG5hbWVkIGluIGFs
ZV9saW50ZXJzIHNldHRpbmdzLgpsZXQgZzphbGVfbGludGVyc19leHBsaWNp
dCA9IDEKYGBgCgpUaGlzIHBsdWdpbiB3aWxsIGxvb2sgZm9yIGxpbnRlcnMg
aW4gdGhlIFtgYWxlX2xpbnRlcnNgXShhbGVfbGludGVycykgZGlyZWN0b3J5
LgpFYWNoIGRpcmVjdG9yeSB3aXRoaW4gY29ycmVzcG9uZHMgdG8gYSBwYXJ0
aWN1bGFyIGZpbGV0eXBlIGluIFZpbSwgYW5kIGVhY2ggZmlsZQppbiBlYWNo
IGRpcmVjdG9yeSBjb3JyZXNwb25kcyB0byB0aGUgbmFtZSBvZiBhIHBhcnRp
Y3VsYXIgbGludGVyLgoKPGEgbmFtZT0iZmFxLWtlZXAtc2lnbnMiPjwvYT4K
CiMjIyA1LmlpLiBIb3cgY2FuIEkga2VlcCB0aGUgc2lnbiBndXR0ZXIgb3Bl
bj8KCllvdSBjYW4ga2VlcCB0aGUgc2lnbiBndXR0ZXIgb3BlbiBhdCBhbGwg
dGltZXMgYnkgc2V0dGluZyB0aGUKYGc6YWxlX3NpZ25fY29sdW1uX2Fsd2F5
c2AgdG8gMQoKYGBgdmltCmxldCBnOmFsZV9zaWduX2NvbHVtbl9hbHdheXMg
PSAxCmBgYAoKPGEgbmFtZT0iZmFxLWNoYW5nZS1zaWducyI+PC9hPgoKIyMj
IDUuaWlpLiBIb3cgY2FuIEkgY2hhbmdlIHRoZSBzaWducyBBTEUgdXNlcz8K
ClVzZSB0aGVzZSBvcHRpb25zIHRvIHNwZWNpZnkgd2hhdCB0ZXh0IHNob3Vs
ZCBiZSB1c2VkIGZvciBzaWduczoKCmBgYHZpbQpsZXQgZzphbGVfc2lnbl9l
cnJvciA9ICc+PicKbGV0IGc6YWxlX3NpZ25fd2FybmluZyA9ICctLScKYGBg
CgpBTEUgc2V0cyBzb21lIGJhY2tncm91bmQgY29sb3JzIGF1dG9tYXRpY2Fs
bHkgZm9yIHdhcm5pbmdzIGFuZCBlcnJvcnMKaW4gdGhlIHNpZ24gZ3V0dGVy
LCB3aXRoIHRoZSBuYW1lcyBgQUxFRXJyb3JTaWduYCBhbmQgYEFMRVdhcm5p
bmdTaWduYC4KVGhlc2UgY29sb3JzIGNhbiBiZSBjdXN0b21pc2VkLCBvciBl
dmVuIHJlbW92ZWQgY29tcGxldGVseToKCmBgYHZpbQpoaWdobGlnaHQgY2xl
YXIgQUxFRXJyb3JTaWduCmhpZ2hsaWdodCBjbGVhciBBTEVXYXJuaW5nU2ln
bgpgYGAKCjxhIG5hbWU9ImZhcS1jaGFuZ2UtaGlnaGxpZ2h0cyI+PC9hPgoK
IyMjIDUuaXYuIEhvdyBjYW4gSSBjaGFuZ2Ugb3IgZGlzYWJsZSB0aGUgaGln
aGxpZ2h0cyBBTEUgdXNlcz8KCkFMRSdzIGhpZ2hsaWdodHMgcHJvYmxlbXMg
d2l0aCBoaWdobGlnaHQgZ3JvdXBzIHdoaWNoIGxpbmsgdG8gYFNwZWxsQmFk
YCwKYFNwZWxsQ2FwYCwgYGVycm9yYCwgYW5kIGB0b2RvYCBncm91cHMgYnkg
ZGVmYXVsdC4gVGhlIGNoYXJhY3RlcnMgdGhhdCBhcmUKaGlnaGxpZ2h0ZWQg
ZGVwZW5kIG9uIHRoZSBsaW50ZXJzIGJlaW5nIHVzZWQsIGFuZCB0aGUgaW5m
b3JtYXRpb24gcHJvdmlkZWQgdG8KQUxFLgoKSGlnaGxpZ2h0aW5nIGNhbiBi
ZSBkaXNhYmxlZCBjb21wbGV0ZWx5IGJ5IHNldHRpbmcgYGc6YWxlX3NldF9o
aWdobGlnaHRzYCB0bwpgMGAuCgpgYGB2aW0KIiBTZXQgdGhpcyBpbiB5b3Vy
IHZpbXJjIGZpbGUgdG8gZGlzYWJsaW5nIGhpZ2hsaWdodGluZwpsZXQgZzph
bGVfc2V0X2hpZ2hsaWdodHMgPSAwCmBgYAoKWW91IGNhbiBjb250cm9sIGFs
bCBvZiB0aGUgaGlnaGxpZ2h0cyBBTEUgdXNlcywgc2F5IGlmIHlvdSBhcmUg
dXNpbmcgYSBkaWZmZXJlbnQKY29sb3Igc2NoZW1lIHdoaWNoIHByb2R1Y2Vz
IHVnbHkgaGlnaGxpZ2h0cy4gRm9yIGV4YW1wbGU6CgpgYGB2aW0KaGlnaGxp
Z2h0IEFMRVdhcm5pbmcgY3Rlcm1iZz1EYXJrTWFnZW50YQpgYGAKClNlZSBg
OmhlbHAgYWxlLWhpZ2hsaWdodHNgIGZvciBtb3JlIGluZm9ybWF0aW9uLgoK
PGEgbmFtZT0iZmFxLXN0YXR1c2xpbmUiPjwvYT4KCiMjIyA1LnYuIEhvdyBj
YW4gSSBzaG93IGVycm9ycyBvciB3YXJuaW5ncyBpbiBteSBzdGF0dXNsaW5l
PwoKW3ZpbS1haXJsaW5lXShodHRwczovL2dpdGh1Yi5jb20vdmltLWFpcmxp
bmUvdmltLWFpcmxpbmUpIGludGVncmF0ZXMgd2l0aCBBTEUKZm9yIGRpc3Bs
YXlpbmcgZXJyb3IgaW5mb3JtYXRpb24gaW4gdGhlIHN0YXR1cyBiYXIuIElm
IHlvdSB3YW50IHRvIHNlZSB0aGUKc3RhdHVzIGZvciBBTEUgaW4gYSBuaWNl
IGZvcm1hdCwgaXQgaXMgcmVjb21tZW5kZWQgdG8gdXNlIHZpbS1haXJsaW5l
IHdpdGggQUxFLgpUaGUgYWlybGluZSBleHRlbnNpb24gY2FuIGJlIGVuYWJs
ZWQgYnkgYWRkaW5nIHRoZSBmb2xsb3dpbmcgdG8geW91ciB2aW1yYzoKCmBg
YHZpbQoiIFNldCB0aGlzLiBBaXJsaW5lIHdpbGwgaGFuZGxlIHRoZSByZXN0
LgpsZXQgZzphaXJsaW5lI2V4dGVuc2lvbnMjYWxlI2VuYWJsZWQgPSAxCmBg
YAoKSWYgeW91IGRvbid0IHdhbnQgdG8gdXNlIHZpbS1haXJsaW5lLCB5b3Ug
Y2FuIGltcGxlbWVudCB5b3VyIG93biBzdGF0dXNsaW5lCmZ1bmN0aW9uIHdp
dGhvdXQgYWRkaW5nIGFueSBvdGhlciBwbHVnaW5zLiBBTEUgcHJvdmlkZXMg
c29tZSBmdW5jdGlvbnMgdG8KYXNzaXN0IGluIHRoaXMgZW5kZWF2b3VyLCBp
bmNsdWRpbmc6CgoqIGBhbGUjc3RhdHVzbGluZSNDb3VudGA6IFdoaWNoIHJl
dHVybnMgdGhlIG51bWJlciBvZiBwcm9ibGVtcyBmb3VuZCBieSBBTEUKICBm
b3IgYSBzcGVjaWZpZWQgYnVmZmVyLgoqIGBhbGUjc3RhdHVzbGluZSNGaXJz
dFByb2JsZW1gOiBXaGljaCByZXR1cm5zIGEgZGljdGlvbmFyeSBjb250YWlu
aW5nIHRoZQogIGZ1bGwgbG9jbGlzdCBkZXRhaWxzIG9mIHRoZSBmaXJzdCBw
cm9ibGVtIG9mIGEgc3BlY2lmaWVkIHR5cGUgZm91bmQgYnkgQUxFCiAgaW4g
YSBidWZmZXIuIChlLmcuIFRoZSBmaXJzdCBzdHlsZSB3YXJuaW5nIGluIHRo
ZSBjdXJyZW50IGJ1ZmZlci4pCiAgVGhpcyBjYW4gYmUgdXNlZnVsIGZvciBk
aXNwbGF5aW5nIG1vcmUgZGV0YWlsZWQgaW5mb3JtYXRpb24gc3VjaCBhcyB0
aGUKICBsaW5lIG51bWJlciBvZiB0aGUgZmlyc3QgcHJvYmxlbSBpbiBhIGZp
bGUuCgpTYXkgeW91IHdhbnQgdG8gZGlzcGxheSBhbGwgZXJyb3JzIGFzIG9u
ZSBmaWd1cmUsIGFuZCBhbGwgbm9uLWVycm9ycyBhcyBhbm90aGVyCmZpZ3Vy
ZS4gWW91IGNhbiBkbyB0aGUgZm9sbG93aW5nOgoKYGBgdmltCmZ1bmN0aW9u
ISBMaW50ZXJTdGF0dXMoKSBhYm9ydAogICAgbGV0IGw6Y291bnRzID0gYWxl
I3N0YXR1c2xpbmUjQ291bnQoYnVmbnIoJycpKQoKICAgIGxldCBsOmFsbF9l
cnJvcnMgPSBsOmNvdW50cy5lcnJvciArIGw6Y291bnRzLnN0eWxlX2Vycm9y
CiAgICBsZXQgbDphbGxfbm9uX2Vycm9ycyA9IGw6Y291bnRzLnRvdGFsIC0g
bDphbGxfZXJyb3JzCgogICAgcmV0dXJuIGw6Y291bnRzLnRvdGFsID09IDAg
PyAnT0snIDogcHJpbnRmKAogICAgXCAgICclZFcgJWRFJywKICAgIFwgICBh
bGxfbm9uX2Vycm9ycywKICAgIFwgICBhbGxfZXJyb3JzCiAgICBcKQplbmRm
dW5jdGlvbgoKc2V0IHN0YXR1c2xpbmU9JXtMaW50ZXJTdGF0dXMoKX0KYGBg
CgpTZWUgYDpoZWxwIGFsZSNzdGF0dXNsaW5lI0NvdW50KClgIG9yIGA6aGVs
cCBhbGUjc3RhdHVzbGluZSNGaXJzdFByb2JsZW0oKWAKZm9yIG1vcmUgaW5m
b3JtYXRpb24uCgo8YSBuYW1lPSJmYXEtbGlnaHRsaW5lIj48L2E+CgojIyMg
NS52aS4gSG93IGNhbiBJIHNob3cgZXJyb3JzIG9yIHdhcm5pbmdzIGluIG15
IGxpZ2h0bGluZT8KCltsaWdodGxpbmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9p
dGNoeW55L2xpZ2h0bGluZS52aW0pIGRvZXMgbm90IGhhdmUgYnVpbHQtaW4K
c3VwcG9ydCBmb3IgQUxFLCBuZXZlcnRoZWxlc3MgdGhlcmUgaXMgYSBwbHVn
aW4gdGhhdCBhZGRzIHRoaXMgZnVuY3Rpb25hbGl0eTogW21heGltYmF6L2xp
Z2h0bGluZS1hbGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9tYXhpbWJhei9saWdo
dGxpbmUtYWxlKS4KCkZvciBtb3JlIGluZm9ybWF0aW9uLCBjaGVjayBvdXQg
dGhlIHNvdXJjZXMgb2YgdGhhdCBwbHVnaW4sIGA6aGVscCBhbGUjc3RhdHVz
bGluZSNDb3VudCgpYCBhbmQgW2xpZ2h0bGluZSBkb2N1bWVudGF0aW9uXSho
dHRwczovL2dpdGh1Yi5jb20vaXRjaHlueS9saWdodGxpbmUudmltI2FkdmFu
Y2VkLWNvbmZpZ3VyYXRpb24pLgoKPGEgbmFtZT0iZmFxLWVjaG8tZm9ybWF0
Ij48L2E+CgojIyMgNS52aWkuIEhvdyBjYW4gSSBjaGFuZ2UgdGhlIGZvcm1h
dCBmb3IgZWNobyBtZXNzYWdlcz8KClRoZXJlIGFyZSAzIGdsb2JhbCBvcHRp
b25zIHRoYXQgYWxsb3cgY3VzdG9taXppbmcgdGhlIGVjaG9lZCBtZXNzYWdl
LgoKLSBgZzphbGVfZWNob19tc2dfZm9ybWF0YCB3aGVyZToKICAgICogYCVz
YCBpcyB0aGUgZXJyb3IgbWVzc2FnZSBpdHNlbGYKICAgICogYCUuLi5jb2Rl
Li4uJWAgaXMgYW4gb3B0aW9uYWwgZXJyb3IgY29kZSwgYW5kIG1vc3QgY2hh
cmFjdGVycyBjYW4gYmUKICAgICAgd3JpdHRlbiBiZXR3ZWVuIHRoZSBgJWAg
Y2hhcmFjdGVycy4KICAgICogYCVsaW50ZXIlYCBpcyB0aGUgbGludGVyIG5h
bWUKICAgICogYCVzZXZlcml0eSVgIGlzIHRoZSBzZXZlcml0eSB0eXBlCi0g
YGc6YWxlX2VjaG9fbXNnX2Vycm9yX3N0cmAgaXMgdGhlIHN0cmluZyB1c2Vk
IGZvciBlcnJvciBzZXZlcml0eS4KLSBgZzphbGVfZWNob19tc2dfd2Fybmlu
Z19zdHJgIGlzIHRoZSBzdHJpbmcgdXNlZCBmb3Igd2FybmluZyBzZXZlcml0
eS4KClNvIGZvciBleGFtcGxlIHRoaXM6CgpgYGB2aW0KbGV0IGc6YWxlX2Vj
aG9fbXNnX2Vycm9yX3N0ciA9ICdFJwpsZXQgZzphbGVfZWNob19tc2dfd2Fy
bmluZ19zdHIgPSAnVycKbGV0IGc6YWxlX2VjaG9fbXNnX2Zvcm1hdCA9ICdb
JWxpbnRlciVdICVzIFslc2V2ZXJpdHklXScKYGBgCgpXaWxsIGdpdmUgeW91
OgoKIVtFY2hvZWQgbWVzc2FnZV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRo
dWJ1c2VyY29udGVudC5jb20vMzUxODE0Mi81OTE5NTkyNy0zNDhiZDAwMC04
Yjg1LTExZTktODhiNi01MDhhMDk0ZjE1NDgucG5nKQoKU2VlIGA6aGVscCBn
OmFsZV9lY2hvX21zZ19mb3JtYXRgIGZvciBtb3JlIGluZm9ybWF0aW9uLgoK
PGEgbmFtZT0iZmFxLWF1dG9jbWQiPjwvYT4KCiMjIyA1LnZpaWkuIEhvdyBj
YW4gSSBleGVjdXRlIHNvbWUgY29kZSB3aGVuIEFMRSBzdGFydHMgb3Igc3Rv
cHMgbGludGluZz8KCkFMRSBydW5zIGl0cyBvd24gW2F1dG9jbWRdKGh0dHA6
Ly92aW1kb2Muc291cmNlZm9yZ2UubmV0L2h0bWxkb2MvYXV0b2NtZC5odG1s
KQpldmVudHMgd2hlbiBhIGxpbnQgb3IgZml4IGN5Y2xlIGFyZSBzdGFydGVk
IGFuZCBzdG9wcGVkLiBUaGVyZSBpcyBhbHNvIGFuIGV2ZW50CnRoYXQgcnVu
cyB3aGVuIGEgbGludGVyIGpvYiBoYXMgYmVlbiBzdWNjZXNzZnVsbHkgc3Rh
cnRlZC4gVGhlc2UgZXZlbnRzIGNhbiBiZQp1c2VkIHRvIGNhbGwgYXJiaXRy
YXJ5IGZ1bmN0aW9ucyBkdXJpbmcgdGhlc2UgcmVzcGVjdGl2ZSBwYXJ0cyBv
ZiB0aGUgQUxFJ3MKb3BlcmF0aW9uLgoKYGBgdmltCmF1Z3JvdXAgWW91ckdy
b3VwCiAgICBhdXRvY21kIQogICAgYXV0b2NtZCBVc2VyIEFMRUxpbnRQcmUg
ICAgY2FsbCBZb3VyRnVuY3Rpb24oKQogICAgYXV0b2NtZCBVc2VyIEFMRUxp
bnRQb3N0ICAgY2FsbCBZb3VyRnVuY3Rpb24oKQoKICAgIGF1dG9jbWQgVXNl
ciBBTEVKb2JTdGFydGVkIGNhbGwgWW91ckZ1bmN0aW9uKCkKCiAgICBhdXRv
Y21kIFVzZXIgQUxFRml4UHJlICAgICBjYWxsIFlvdXJGdW5jdGlvbigpCiAg
ICBhdXRvY21kIFVzZXIgQUxFRml4UG9zdCAgICBjYWxsIFlvdXJGdW5jdGlv
bigpCmF1Z3JvdXAgRU5ECmBgYAoKPGEgbmFtZT0iZmFxLW5hdmlnYXRpb24i
PjwvYT4KCiMjIyA1Lml4LiBIb3cgY2FuIEkgbmF2aWdhdGUgYmV0d2VlbiBl
cnJvcnMgcXVpY2tseT8KCkFMRSBvZmZlcnMgc29tZSBjb21tYW5kcyB3aXRo
IGA8UGx1Zz5gIGtleWJpbmRzIGZvciBtb3ZpbmcgYmV0d2VlbiB3YXJuaW5n
cyBhbmQKZXJyb3JzIHF1aWNrbHkuIFlvdSBjYW4gbWFwIHRoZSBrZXlzIEN0
cmwraiBhbmQgQ3RybCtrIHRvIG1vdmluZyBiZXR3ZWVuIGVycm9ycwpmb3Ig
ZXhhbXBsZToKCmBgYHZpbQpubWFwIDxzaWxlbnQ+IDxDLWs+IDxQbHVnPihh
bGVfcHJldmlvdXNfd3JhcCkKbm1hcCA8c2lsZW50PiA8Qy1qPiA8UGx1Zz4o
YWxlX25leHRfd3JhcCkKYGBgCgpGb3IgbW9yZSBpbmZvcm1hdGlvbiwgY29u
c3VsdCB0aGUgb25saW5lIGRvY3VtZW50YXRpb24gd2l0aApgOmhlbHAgYWxl
LW5hdmlnYXRpb24tY29tbWFuZHNgLgoKPGEgbmFtZT0iZmFxLWxpbnQtb24t
c2F2ZSI+PC9hPgoKIyMjIDUueC4gSG93IGNhbiBJIHJ1biBsaW50ZXJzIG9u
bHkgd2hlbiBJIHNhdmUgZmlsZXM/CgpBTEUgb2ZmZXJzIGFuIG9wdGlvbiBg
ZzphbGVfbGludF9vbl9zYXZlYCBmb3IgZW5hYmxpbmcgcnVubmluZyB0aGUg
bGludGVycwp3aGVuIGZpbGVzIGFyZSBzYXZlZC4gVGhpcyBvcHRpb24gaXMg
ZW5hYmxlZCBieSBkZWZhdWx0LiBJZiB5b3Ugb25seQp3aXNoIHRvIHJ1biBs
aW50ZXJzIHdoZW4gZmlsZXMgYXJlIHNhdmVkLCB5b3UgY2FuIHR1cm4gdGhl
IG90aGVyCm9wdGlvbnMgb2ZmLgoKYGBgdmltCiIgV3JpdGUgdGhpcyBpbiB5
b3VyIHZpbXJjIGZpbGUKbGV0IGc6YWxlX2xpbnRfb25fdGV4dF9jaGFuZ2Vk
ID0gJ25ldmVyJwpsZXQgZzphbGVfbGludF9vbl9pbnNlcnRfbGVhdmUgPSAw
CiIgWW91IGNhbiBkaXNhYmxlIHRoaXMgb3B0aW9uIHRvbwoiIGlmIHlvdSBk
b24ndCB3YW50IGxpbnRlcnMgdG8gcnVuIG9uIG9wZW5pbmcgYSBmaWxlCmxl
dCBnOmFsZV9saW50X29uX2VudGVyID0gMApgYGAKCklmIGZvciB3aGF0ZXZl
ciByZWFzb24geW91IGRvbid0IHdpc2ggdG8gcnVuIGxpbnRlcnMgYWdhaW4g
d2hlbiB5b3Ugc2F2ZQpmaWxlcywgeW91IGNhbiBzZXQgYGc6YWxlX2xpbnRf
b25fc2F2ZWAgdG8gYDBgLgoKPGEgbmFtZT0iZmFxLXF1aWNrZml4Ij48L2E+
CgojIyMgNS54aS4gSG93IGNhbiBJIHVzZSB0aGUgcXVpY2tmaXggbGlzdCBp
bnN0ZWFkIG9mIHRoZSBsb2NsaXN0PwoKVGhlIHF1aWNrZml4IGxpc3QgY2Fu
IGJlIGVuYWJsZWQgYnkgdHVybmluZyB0aGUgYGc6YWxlX3NldF9xdWlja2Zp
eGAKb3B0aW9uIG9uLiBJZiB5b3Ugd2lzaCB0byBhbHNvIGRpc2FibGUgdGhl
IGxvY2xpc3QsIHlvdSBjYW4gZGlzYWJsZQp0aGUgYGc6YWxlX3NldF9sb2Ns
aXN0YCBvcHRpb24uCgpgYGB2aW0KIiBXcml0ZSB0aGlzIGluIHlvdXIgdmlt
cmMgZmlsZQpsZXQgZzphbGVfc2V0X2xvY2xpc3QgPSAwCmxldCBnOmFsZV9z
ZXRfcXVpY2tmaXggPSAxCmBgYAoKSWYgeW91IHdpc2ggdG8gc2hvdyBWaW0g
d2luZG93cyBmb3IgdGhlIGxvY2xpc3Qgb3IgcXVpY2tmaXggaXRlbXMKd2hl
biBhIGZpbGUgY29udGFpbnMgd2FybmluZ3Mgb3IgZXJyb3JzLCBgZzphbGVf
b3Blbl9saXN0YCBjYW4gYmUKc2V0IHRvIGAxYC4gYGc6YWxlX2tlZXBfbGlz
dF93aW5kb3dfb3BlbmAgY2FuIGJlIHNldCB0byBgMWAKaWYgeW91IHdpc2gg
dG8ga2VlcCB0aGUgd2luZG93IG9wZW4gZXZlbiBhZnRlciBlcnJvcnMgZGlz
YXBwZWFyLgoKYGBgdmltCmxldCBnOmFsZV9vcGVuX2xpc3QgPSAxCiIgU2V0
IHRoaXMgaWYgeW91IHdhbnQgdG8uCiIgVGhpcyBjYW4gYmUgdXNlZnVsIGlm
IHlvdSBhcmUgY29tYmluaW5nIEFMRSB3aXRoCiIgc29tZSBvdGhlciBwbHVn
aW4gd2hpY2ggc2V0cyBxdWlja2ZpeCBlcnJvcnMsIGV0Yy4KbGV0IGc6YWxl
X2tlZXBfbGlzdF93aW5kb3dfb3BlbiA9IDEKYGBgCgpZb3UgY2FuIGFsc28g
c2V0IGBsZXQgZzphbGVfbGlzdF92ZXJ0aWNhbCA9IDFgIHRvIG9wZW4gdGhl
IHdpbmRvd3MgdmVydGljYWxseQppbnN0ZWFkIG9mIHRoZSBkZWZhdWx0IGhv
cml6b250YWxseS4KCjxhIG5hbWU9ImZhcS1qc3gtc3R5bGVsaW50LWVzbGlu
dCI+PC9hPgoKIyMjIDUueGlpLiBIb3cgY2FuIEkgY2hlY2sgSlNYIGZpbGVz
IHdpdGggYm90aCBzdHlsZWxpbnQgYW5kIGVzbGludD8KCklmIHlvdSBjb25m
aWd1cmUgQUxFIG9wdGlvbnMgY29ycmVjdGx5IGluIHlvdXIgdmltcmMgZmls
ZSwgYW5kIGluc3RhbGwKdGhlIHJpZ2h0IHRvb2xzLCB5b3UgY2FuIGNoZWNr
IEpTWCBmaWxlcyB3aXRoIHN0eWxlbGludCBhbmQgZXNsaW50LgoKRmlyc3Qs
IGluc3RhbGwgZXNsaW50IGFuZCBpbnN0YWxsIHN0eWxlbGludCB3aXRoCltz
dHlsZWxpbnQtcHJvY2Vzc29yLXN0eWxlZC1jb21wb25lbnRzXShodHRwczov
L2dpdGh1Yi5jb20vc3R5bGVkLWNvbXBvbmVudHMvc3R5bGVsaW50LXByb2Nl
c3Nvci1zdHlsZWQtY29tcG9uZW50cykuCgpTdXBwb3NpbmcgeW91IGhhdmUg
aW5zdGFsbGVkIGJvdGggdG9vbHMgY29ycmVjdGx5LCBjb25maWd1cmUgeW91
ciAuanN4IGZpbGVzIHNvCmBqc3hgIGlzIGluY2x1ZGVkIGluIHRoZSBmaWxl
dHlwZS4gWW91IGNhbiB1c2UgYW4gYGF1dG9jbWRgIGZvciB0aGlzLgoKYGBg
dmltCmF1Z3JvdXAgRmlsZXR5cGVHcm91cAogICAgYXV0b2NtZCEKICAgIGF1
IEJ1Zk5ld0ZpbGUsQnVmUmVhZCAqLmpzeCBzZXQgZmlsZXR5cGU9amF2YXNj
cmlwdC5qc3gKYXVncm91cCBFTkQKYGBgCgpTdXBwb3NpbmcgdGhlIGZpbGV0
eXBlIGhhcyBiZWVuIHNldCBjb3JyZWN0bHksIHlvdSBjYW4gc2V0IHRoZSBm
b2xsb3dpbmcKb3B0aW9ucyBpbiBhIGpzeC52aW0gZnRwbHVnaW4gZmlsZS4K
CmBgYHZpbQoiIEluIH4vLnZpbS9mdHBsdWdpbi9qc3gudmltLCBvciBzb21l
d2hlcmUgc2ltaWxhci4KbGV0IGI6YWxlX2xpbnRlcl9hbGlhc2VzID0gWydj
c3MnLCAnamF2YXNjcmlwdCddCmxldCBiOmFsZV9saW50ZXJzID0gWydzdHls
ZWxpbnQnLCAnZXNsaW50J10KYGBgCgpPciBpZiB5b3Ugd2FudCwgeW91IGNh
biBjb25maWd1cmUgdGhlIGxpbnRlcnMgZnJvbSB5b3VyIHZpbXJjIGZpbGUu
CgpgYGB2aW0KIiBJbiB+Ly52aW0vdmltcmMsIG9yIHNvbWV3aGVyZSBzaW1p
bGFyLgpsZXQgZzphbGVfbGludGVyX2FsaWFzZXMgPSB7J2pzeCc6IFsnY3Nz
JywgJ2phdmFzY3JpcHQnXX0KbGV0IGc6YWxlX2xpbnRlcnMgPSB7J2pzeCc6
IFsnc3R5bGVsaW50JywgJ2VzbGludCddfQpgYGAKCkFMRSB3aWxsIGFsaWFz
IHRoZSBganN4YCBmaWxldHlwZSBzbyBpdCB1c2VzIHRoZSBgY3NzYCBmaWxl
dHlwZSBsaW50ZXJzLCBhbmQKdXNlIHRoZSBvcmlnaW5hbCBBcnJheSBvZiBz
ZWxlY3RlZCBsaW50ZXJzIGZvciBganN4YCBmcm9tIHRoZSBgZzphbGVfbGlu
dGVyc2AKb2JqZWN0LiBBbGwgYXZhaWxhYmxlIGxpbnRlcnMgd2lsbCBiZSB1
c2VkIGZvciB0aGUgZmlsZXR5cGUgYGphdmFzY3JpcHRgLCBhbmQKbm8gbGlu
dGVyIHdpbGwgYmUgcnVuIHR3aWNlIGZvciB0aGUgc2FtZSBmaWxlLgoKPGEg
bmFtZT0iZmFxLXZ1ZS1lc2xpbnQiPjwvYT4KCiMjIyA1LnhpaWkuIEhvdyBj
YW4gSSBjaGVjayBWdWUgZmlsZXMgd2l0aCBFU0xpbnQ/CgpUbyBjaGVjayBW
dWUgZmlsZXMgd2l0aCBFU0xpbnQsIHlvdXIgRVNMaW50IHByb2plY3QgY29u
ZmlndXJhdGlvbiBmaWxlIG11c3QgYmUKY29uZmlndXJlZCB0byB1c2UgdGhl
IFtWdWUgcGx1Z2luXShodHRwczovL2dpdGh1Yi5jb20vdnVlanMvZXNsaW50
LXBsdWdpbi12dWUpLgpBZnRlciB0aGF0LCB5b3UgbmVlZCB0byBjb25maWd1
cmUgQUxFIHNvIGl0IHdpbGwgcnVuIHRoZSBKYXZhU2NyaXB0IEVTTGludAps
aW50ZXIgb24geW91ciBmaWxlcy4gVGhlIHNldHRpbmdzIHlvdSBuZWVkIGFy
ZSBzaW1pbGFyIHRvIHRoZSBzZXR0aW5ncyBuZWVkZWQKZm9yIGNoZWNraW5n
IEpTWCBjb2RlIHdpdGggYm90aCBzdHlsZWxpbnQgYW5kIEVTTGludCwgaW4g
dGhlIHByZXZpb3VzIHNlY3Rpb24uCgpgYGB2aW0KIiBJbiB+Ly52aW0vZnRw
bHVnaW4vdnVlLnZpbSwgb3Igc29tZXdoZXJlIHNpbWlsYXIuCgoiIFJ1biBi
b3RoIGphdmFzY3JpcHQgYW5kIHZ1ZSBsaW50ZXJzIGZvciB2dWUgZmlsZXMu
CmxldCBiOmFsZV9saW50ZXJfYWxpYXNlcyA9IFsnamF2YXNjcmlwdCcsICd2
dWUnXQoiIFNlbGVjdCB0aGUgZXNsaW50IGFuZCB2bHMgbGludGVycy4KbGV0
IGI6YWxlX2xpbnRlcnMgPSBbJ2VzbGludCcsICd2bHMnXQpgYGAKClJ1biBg
OkFMRUluZm9gIHRvIHNlZSB3aGljaCBsaW50ZXJzIGFyZSBhdmFpbGFibGUg
YWZ0ZXIgdGVsbGluZyBBTEUgdG8gcnVuCkphdmFTY3JpcHQgbGludGVycyBv
biBWdWUgZmlsZXMuIE5vdCBhbGwgbGludGVycyBzdXBwb3J0IGNoZWNraW5n
IFZ1ZSBmaWxlcy4KCklmIHlvdSBkb24ndCB3YW50IHRvIGNvbmZpZ3VyZSB5
b3VyIGxpbnRlcnMgaW4gZnRwbHVnaW4gZmlsZXMgZm9yIHNvbWUgcmVhc29u
LAp5b3UgY2FuIGNvbmZpZ3VyZSB0aGVtIGZyb20geW91ciB2aW1yYyBmaWxl
IGluc3RlYWQuCgpgYGB2aW0KIiBJbiB+Ly52aW0vdmltcmMsIG9yIHNvbWV3
aGVyZSBzaW1pbGFyLgpsZXQgZzphbGVfbGludGVyX2FsaWFzZXMgPSB7J3Z1
ZSc6IFsndnVlJywgJ2phdmFzY3JpcHQnXX0KbGV0IGc6YWxlX2xpbnRlcnMg
PSB7J3Z1ZSc6IFsnZXNsaW50JywgJ3ZscyddfQpgYGAKCjxhIG5hbWU9ImZh
cS1teS1iYXR0ZXJ5LWlzLXNhZCI+PC9hPgoKIyMjIDUueGl2LiBXaWxsIHRo
aXMgcGx1Z2luIGVhdCBhbGwgb2YgbXkgbGFwdG9wIGJhdHRlcnkgcG93ZXI/
CgpBTEUgdGFrZXMgYWR2YW50YWdlIG9mIHRoZSBwb3dlciBvZiB2YXJpb3Vz
IHRvb2xzIHRvIGNoZWNrIHlvdXIgY29kZS4gVGhpcyBvZgpjb3Vyc2UgbWVh
bnMgdGhhdCBDUFUgdGltZSB3aWxsIGJlIHVzZWQgdG8gY29udGludW91c2x5
IGNoZWNrIHlvdXIgY29kZS4gSWYgeW91CmFyZSBjb25jZXJuZWQgYWJvdXQg
dGhlIENQVSB0aW1lIEFMRSB3aWxsIHNwZW5kLCB3aGljaCB3aWxsIG9mIGNv
dXJzZSBpbXBseQpzb21lIGNvc3QgdG8gYmF0dGVyeSBsaWZlLCB5b3UgY2Fu
IGFkanVzdCB5b3VyIHNldHRpbmdzIHRvIG1ha2UgeW91ciBDUFUgZG8KbGVz
cyB3b3JrLgoKRmlyc3QsIGNvbnNpZGVyIGluY3JlYXNpbmcgdGhlIGRlbGF5
IGJlZm9yZSB3aGljaCBBTEUgd2lsbCBydW4gYW55IGxpbnRlcnMKd2hpbGUg
eW91IHR5cGUuIEFMRSB1c2VzIGEgdGltZW91dCB3aGljaCBpcyBjYW5jZWxs
ZWQgYW5kIHJlc2V0IGV2ZXJ5IHRpbWUgeW91CnR5cGUsIGFuZCB0aGlzIGRl
bGF5IGNhbiBiZSBpbmNyZWFzZWQgc28gbGludGVycyBhcmUgcnVuIGxlc3Mg
b2Z0ZW4uIFNlZQpgOmhlbHAgZzphbGVfbGludF9kZWxheWAgZm9yIG1vcmUg
aW5mb3JtYXRpb24uCgpJZiB5b3UgZG9uJ3Qgd2lzaCB0byBydW4gbGludGVy
cyB3aGlsZSB5b3UgdHlwZSwgeW91IGNhbiBkaXNhYmxlIHRoYXQgYmVoYXZp
b3VyLgpTZXQgYGc6YWxlX2xpbnRfb25fdGV4dF9jaGFuZ2VkYCB0byBgbmV2
ZXJgLiBZb3Ugd29uJ3QgZ2V0IGFzIGZyZXF1ZW50IGVycm9yCmNoZWNraW5n
LCBidXQgQUxFIHNob3VsZG4ndCBibG9jayB5b3VyIGFiaWxpdHkgdG8gZWRp
dCBhIGRvY3VtZW50IGFmdGVyIHlvdSBzYXZlCmEgZmlsZSwgc28gdGhlIGFz
eW5jaHJvbm91cyBuYXR1cmUgb2YgdGhlIHBsdWdpbiB3aWxsIHN0aWxsIGJl
IGFuIGFkdmFudGFnZS4KCklmIHlvdSBhcmUgc3RpbGwgY29uY2VybmVkLCB5
b3UgY2FuIHR1cm4gdGhlIGF1dG9tYXRpYyBsaW50aW5nIG9mZiBhbHRvZ2V0
aGVyLAppbmNsdWRpbmcgdGhlIG9wdGlvbiBgZzphbGVfbGludF9vbl9lbnRl
cmAsIGFuZCB5b3UgY2FuIHJ1biBBTEUgbWFudWFsbHkgd2l0aApgOkFMRUxp
bnRgLgoKPGEgbmFtZT0iZmFxLWMtY29uZmlndXJhdGlvbiI+PC9hPgoKIyMj
IDUueHYuIEhvdyBjYW4gSSBjb25maWd1cmUgbXkgQyBvciBDKysgcHJvamVj
dD8KClRoZSBzdHJ1Y3R1cmUgb2YgQyBhbmQgQysrIHByb2plY3RzIHZhcmll
cyB3aWxkbHkgZnJvbSBwcm9qZWN0IHRvIHByb2plY3QsIHdpdGgKbWFueSBk
aWZmZXJlbnQgYnVpbGQgdG9vbHMgYmVpbmcgdXNlZCBmb3IgYnVpbGRpbmcg
dGhlbSwgYW5kIG1hbnkgZGlmZmVyZW50CmZvcm1hdHMgZm9yIHByb2plY3Qg
Y29uZmlndXJhdGlvbiBmaWxlcy4gQUxFIGNhbiBydW4gY29tcGlsZXJzIGVh
c2lseSwgYnV0CkFMRSBjYW5ub3QgZWFzaWx5IGRldGVjdCB3aGljaCBjb21w
aWxlciBmbGFncyB0byB1c2UuCgpTb21lIHRvb2xzIGFuZCBidWlsZCBjb25m
aWd1cmF0aW9ucyBjYW4gZ2VuZXJhdGUKW2NvbXBpbGVfY29tbWFuZHMuanNv
bl0oaHR0cHM6Ly9jbGFuZy5sbHZtLm9yZy9kb2NzL0pTT05Db21waWxhdGlv
bkRhdGFiYXNlLmh0bWwpCmZpbGVzLiBUaGUgYGNwcGNoZWNrYCwgYGNsYW5n
Y2hlY2tgLCBgY2xhbmd0aWR5YCBhbmQgYGNxdWVyeWAgbGludGVycyBjYW4g
cmVhZAp0aGVzZSBmaWxlcyBmb3IgYXV0b21hdGljYWxseSBkZXRlcm1pbmlu
ZyB0aGUgYXBwcm9wcmlhdGUgY29tcGlsZXIgZmxhZ3MgdG8KdXNlLgoKRm9y
IGxpbnRpbmcgd2l0aCBjb21waWxlcnMgbGlrZSBgZ2NjYCBhbmQgYGNsYW5n
YCwgYW5kIHdpdGggb3RoZXIgdG9vbHMsIHlvdQp3aWxsIG5lZWQgdG8gdGVs
bCBBTEUgd2hpY2ggY29tcGlsZXIgZmxhZ3MgdG8gdXNlIHlvdXJzZWxmLiBZ
b3UgY2FuIHVzZQpkaWZmZXJlbnQgb3B0aW9ucyBmb3IgZGlmZmVyZW50IHBy
b2plY3RzIHdpdGggdGhlIGBnOmFsZV9wYXR0ZXJuX29wdGlvbnNgCnNldHRp
bmcuICBDb25zdWx0IHRoZSBkb2N1bWVudGF0aW9uIGZvciB0aGF0IHNldHRp
bmcgZm9yIG1vcmUgaW5mb3JtYXRpb24uCmBiOmFsZV9saW50ZXJzYCBjYW4g
YmUgdXNlZCB0byBzZWxlY3Qgd2hpY2ggdG9vbHMgeW91IHdhbnQgdG8gcnVu
LCBzYXkgaWYgeW91CndhbnQgdG8gdXNlIG9ubHkgYGdjY2AgZm9yIG9uZSBw
cm9qZWN0LCBhbmQgb25seSBgY2xhbmdgIGZvciBhbm90aGVyLgoKWW91IG1h
eSBhbHNvIGNvbmZpZ3VyZSBidWZmZXItbG9jYWwgc2V0dGluZ3MgZm9yIGxp
bnRlcnMgd2l0aCBwcm9qZWN0LXNwZWNpZmljCnZpbXJjIGZpbGVzLiBbbG9j
YWxfdmltcmNdKGh0dHBzOi8vZ2l0aHViLmNvbS9MdWNIZXJtaXR0ZS9sb2Nh
bF92aW1yYykgY2FuIGJlCnVzZWQgZm9yIGV4ZWN1dGluZyBsb2NhbCB2aW1y
YyBmaWxlcyB3aGljaCBjYW4gYmUgc2hhcmVkIGluIHlvdXIgcHJvamVjdC4K
CjxhIG5hbWU9ImZhcS1idWZmZXItY29uZmlndXJhdGlvbiI+PC9hPgoKIyMj
IDUueHZpLiBIb3cgY2FuIEkgY29uZmlndXJlIEFMRSBkaWZmZXJlbnRseSBm
b3IgZGlmZmVyZW50IGJ1ZmZlcnM/CgpBTEUgb2ZmZXJzIHZhcmlvdXMgd2F5
cyB0byBjb25maWd1cmUgd2hpY2ggbGludGVycyBvciBmaXhlcnMgYXJlIHJ1
biwgYW5kCm90aGVyIHNldHRpbmdzLiBGb3IgdGhlIG1ham9yaXR5IG9mIEFM
RSdzIHNldHRpbmdzLCB0aGV5IGNhbiBlaXRoZXIgYmUKY29uZmlndXJlZCBn
bG9iYWxseSB3aXRoIGEgYGc6YCB2YXJpYWJsZSBwcmVmaXgsIG9yIGZvciBh
IHNwZWNpZmljIGJ1ZmZlcgp3aXRoIGEgYGI6YCB2YXJpYWJsZSBwcmVmaXgu
IEZvciBleGFtcGxlLCB5b3UgY2FuIGNvbmZpZ3VyZSBhIFB5dGhvbiBmdHBs
dWdpbgpmaWxlIGxpa2Ugc28uCgpgYGB2aW0KIiBJbiB+Ly52aW0vZnRwbHVn
aW4vcHl0aG9uLnZpbQoKIiBDaGVjayBQeXRob24gZmlsZXMgd2l0aCBmbGFr
ZTggYW5kIHB5bGludC4KbGV0IGI6YWxlX2xpbnRlcnMgPSBbJ2ZsYWtlOCcs
ICdweWxpbnQnXQoiIEZpeCBQeXRob24gZmlsZXMgd2l0aCBhdXRvcGVwOCBh
bmQgeWFwZi4KbGV0IGI6YWxlX2ZpeGVycyA9IFsnYXV0b3BlcDgnLCAneWFw
ZiddCiIgRGlzYWJsZSB3YXJuaW5ncyBhYm91dCB0cmFpbGluZyB3aGl0ZXNw
YWNlIGZvciBQeXRob24gZmlsZXMuCmxldCBiOmFsZV93YXJuX2Fib3V0X3Ry
YWlsaW5nX3doaXRlc3BhY2UgPSAwCmBgYAoKRm9yIGNvbmZpZ3VyaW5nIGZp
bGVzIGJhc2VkIG9uIHJlZ3VsYXIgZXhwcmVzc2lvbiBwYXR0ZXJucyBtYXRj
aGVkIGFnYWluc3QgdGhlCmFic29sdXRlIHBhdGggdG8gYSBmaWxlLCB5b3Ug
Y2FuIHVzZSBgZzphbGVfcGF0dGVybl9vcHRpb25zYC4KCmBgYHZpbQoiIERv
IG5vdCBsaW50IG9yIGZpeCBtaW5pZmllZCBmaWxlcy4KbGV0IGc6YWxlX3Bh
dHRlcm5fb3B0aW9ucyA9IHsKXCAnXC5taW5cLmpzJCc6IHsnYWxlX2xpbnRl
cnMnOiBbXSwgJ2FsZV9maXhlcnMnOiBbXX0sClwgJ1wubWluXC5jc3MkJzog
eydhbGVfbGludGVycyc6IFtdLCAnYWxlX2ZpeGVycyc6IFtdfSwKXH0KIiBJ
ZiB5b3UgY29uZmlndXJlIGc6YWxlX3BhdHRlcm5fb3B0aW9ucyBvdXRzaWRl
IG9mIHZpbXJjLCB5b3UgbmVlZCB0aGlzLgpsZXQgZzphbGVfcGF0dGVybl9v
cHRpb25zX2VuYWJsZWQgPSAxCmBgYAoKQnVmZmVyLWxvY2FsIHZhcmlhYmxl
cyBmb3Igc2V0dGluZ3MgYWx3YXlzIG92ZXJyaWRlIHRoZSBnbG9iYWwgc2V0
dGluZ3MuCgo8YSBuYW1lPSJmYXEtbGlzdC13aW5kb3ctaGVpZ2h0Ij48L2E+
CgojIyMgNS54dmlpLiBIb3cgY2FuIEkgY29uZmlndXJlIHRoZSBoZWlnaHQg
b2YgdGhlIGxpc3QgaW4gd2hpY2ggQUxFIGRpc3BsYXlzIGVycm9ycz8KClRv
IHNldCBhIGRlZmF1bHQgaGVpZ2h0IGZvciB0aGUgZXJyb3IgbGlzdCwgdXNl
IHRoZSBgZzphbGVfbGlzdF93aW5kb3dfc2l6ZWAgdmFyaWFibGUuCgpgYGB2
aW0KIiBTaG93IDUgbGluZXMgb2YgZXJyb3JzIChkZWZhdWx0OiAxMCkKbGV0
IGc6YWxlX2xpc3Rfd2luZG93X3NpemUgPSA1CmBgYAoKPGEgbmFtZT0iZmFx
LWdldC1pbmZvIj48L2E+CgojIyMgNS54dmlpaS4gSG93IGNhbiBJIHNlZSB3
aGF0IEFMRSBoYXMgY29uZmlndXJlZCBmb3IgdGhlIGN1cnJlbnQgZmlsZT8K
ClJ1biB0aGUgZm9sbG93aW5nIHRvIHNlZSB3aGF0IGlzIGN1cnJlbnRseSBj
b25maWd1cmVkOgoKYGBgdmltCjpBTEVJbmZvCmBgYAo=
",,8660,"LS0tCnN1ZG86IHJlcXVpcmVkCnNlcnZpY2VzOgogICAgLSBkb2NrZXIKbGFu
Z3VhZ2U6IGdlbmVyaWMKYnJhbmNoZXM6CiAgb25seToKICAgIC0gbWFzdGVy
CiAgICAtIC9edlxkK1wuXGQrXC4oeHxcZCspJC8KZW52OgogICAgLSBPUFRJ
T05TPS0tdmltLTgwLW9ubHkKICAgIC0gT1BUSU9OUz0tLXZpbS04MS1vbmx5
CiAgICAtIE9QVElPTlM9LS1uZW92aW0tb25seQogICAgLSBPUFRJT05TPS0t
bGludGVycy1vbmx5CnNjcmlwdDogfAogICAgLi9ydW4tdGVzdHMgLXYgJE9Q
VElPTlMK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'eureka',5198041,b'AWS Service registry for resilient mid-tier load balancing and failover.',b'Java',10,8658,,938,False,b'https://api.github.com/repos/Netflix/eureka/forks',"RXVyZWthCj09PT09ClshW0J1aWxkIFN0YXR1c10oaHR0cHM6Ly90cmF2aXMt
Y2kub3JnL05ldGZsaXgvZXVyZWthLnN2Zz9icmFuY2g9bWFzdGVyKV0oaHR0
cHM6Ly90cmF2aXMtY2kub3JnL05ldGZsaXgvZXVyZWthKQoKRXVyZWthIGlz
IGEgUkVTVCAoUmVwcmVzZW50YXRpb25hbCBTdGF0ZSBUcmFuc2ZlcikgYmFz
ZWQgc2VydmljZSB0aGF0IGlzIHByaW1hcmlseSB1c2VkIGluIHRoZSBBV1Mg
Y2xvdWQgZm9yIGxvY2F0aW5nIHNlcnZpY2VzIGZvciB0aGUgcHVycG9zZSBv
ZiBsb2FkIGJhbGFuY2luZyBhbmQgZmFpbG92ZXIgb2YgbWlkZGxlLXRpZXIg
c2VydmVycy4KCkF0IE5ldGZsaXgsIEV1cmVrYSBpcyB1c2VkIGZvciB0aGUg
Zm9sbG93aW5nIHB1cnBvc2VzIGFwYXJ0IGZyb20gcGxheWluZyBhIGNyaXRp
Y2FsIHBhcnQgaW4gbWlkLXRpZXIgbG9hZCBiYWxhbmNpbmcuCgoqIEZvciBh
aWRpbmcgTmV0ZmxpeCBBc2dhcmQgLSBhbiBvcGVuIHNvdXJjZSBzZXJ2aWNl
IHdoaWNoIG1ha2VzIGNsb3VkIGRlcGxveW1lbnRzIGVhc2llciwgaW4gIAog
ICAgKyBGYXN0IHJvbGxiYWNrIG9mIHZlcnNpb25zIGluIGNhc2Ugb2YgcHJv
YmxlbXMgYXZvaWRpbmcgdGhlIHJlLWxhdW5jaCBvZiAxMDAncyBvZiBpbnN0
YW5jZXMgd2hpY2ggCiAgICAgIGNvdWxkIHRha2UgYSBsb25nIHRpbWUuCiAg
ICArIEluIHJvbGxpbmcgcHVzaGVzLCBmb3IgYXZvaWRpbmcgcHJvcGFnYXRp
b24gb2YgYSBuZXcgdmVyc2lvbiB0byBhbGwgaW5zdGFuY2VzIGluIGNhc2Ug
b2YgcHJvYmxlbXMuCgoqIEZvciBvdXIgY2Fzc2FuZHJhIGRlcGxveW1lbnRz
IHRvIHRha2UgaW5zdGFuY2VzIG91dCBvZiB0cmFmZmljIGZvciBtYWludGVu
YW5jZS4KCiogRm9yIG91ciBtZW1jYWNoZWQgY2FjaGluZyBzZXJ2aWNlcyB0
byBpZGVudGlmeSB0aGUgbGlzdCBvZiBub2RlcyBpbiB0aGUgcmluZy4KCiog
Rm9yIGNhcnJ5aW5nIG90aGVyIGFkZGl0aW9uYWwgYXBwbGljYXRpb24gc3Bl
Y2lmaWMgbWV0YWRhdGEgYWJvdXQgc2VydmljZXMgZm9yIHZhcmlvdXMgb3Ro
ZXIgcmVhc29ucy4KCgpCdWlsZGluZwotLS0tLS0tLS0tClRoZSBidWlsZCBy
ZXF1aXJlcyBqYXZhOCBiZWNhdXNlIG9mIHNvbWUgcmVxdWlyZWQgbGlicmFy
aWVzIHRoYXQgYXJlIGphdmE4IChzZXJ2byksIGJ1dCB0aGUgc291cmNlIGFu
ZCB0YXJnZXQgY29tcGF0aWJpbGl0eSBhcmUgc3RpbGwgc2V0IHRvIDEuNy4K
CgpTdXBwb3J0Ci0tLS0tLS0tLS0KW0V1cmVrYSBHb29nbGUgR3JvdXBdKGh0
dHBzOi8vZ3JvdXBzLmdvb2dsZS5jb20vZm9ydW0vP2Zyb21ncm91cHMjIWZv
cnVtL2V1cmVrYV9uZXRmbGl4KQoKCkRvY3VtZW50YXRpb24KLS0tLS0tLS0t
LS0tLS0KUGxlYXNlIHNlZSBbd2lraV0oaHR0cHM6Ly9naXRodWIuY29tL05l
dGZsaXgvZXVyZWthL3dpa2kpIGZvciBkZXRhaWxlZCBkb2N1bWVudGF0aW9u
Lgo=
",,8658,"c3VkbzogZmFsc2UKZGlzdDogdHJ1c3R5Cmxhbmd1YWdlOiBqYXZhCmpkazoK
LSBvcmFjbGVqZGs4Cmluc3RhbGw6IC4vaW5zdGFsbFZpYVRyYXZpcy5zaApz
Y3JpcHQ6IC4vYnVpbGRWaWFUcmF2aXMuc2gKZW52OgogIGdsb2JhbDoKICAt
IHNlY3VyZTogSDVHcmUyRDdUalBwMFV6TWdXQWxINm0vTWlmRGswSkVRUFRM
VTFRcitEbTZmQlNmb3pqWXMxeTI5aGs5YmVNOTM2SURHZGloWVBSb242dDFa
TldYMXZRS0dybXZhMnluTXdYczEyeS9GNkdFRWdqTFJWTHBYK0pBZkFOWnpW
RGNuSWhkV0ViOG1XUTRFU2gwK2kybU9NSkZ3V0ZoR3kyV1F1b2JIQ2tybjNF
PQogIC0gc2VjdXJlOiBlRkNXM0o5elgwZU5NazFQQ0hHeTRFWEZHcDVQaW96
SXl2TzZTQjJrbmEwSnQ2Q2RZM1VBL1NUZ3BSdFJlVDFpVFcvQy9seVliK2g2
SDhGSVN2VGtKaFZLSVREb1ZjT3B3VVhDWXhRZFhFdmhMNjMzejlMWVFjS2V4
cmljS3pQMmhwZVBjbUVHbU5jVk54bjltcklSZG8yOGRzNFhPVDdkcFU1NCta
bUxUcFU9CiAgLSBzZWN1cmU6IFQzUk94YTczYVNTWWR3alBKVXpqcWtNanhI
VitnNHNjZEk1cEp6VElzUTNmd2FvWjNjUHViTFBPeTJwWXg1OWE0TWhwZE51
VDFvci95ci9raFRvUFlIeEhnajlwR1o4SkhMUllqekVFbWZEajJXeWhWV2VZ
Qzg4USs0TmNjMkpTTVQ1bEhLUy9qK04zUjlwWmYvQ3V5OWtleXZMRUtRbFhC
T0JQQmY3TVdjYz0KICAtIHNlY3VyZTogZklYU3gxU0lYSkY4Ly9Rbzl6bUxX
S24rQVBXMXNZeHc4VjFVNDdrZlFUdzNLczJSVGc4Sjd6N2dkUDRZT2JXcnJy
TWpaZ3RDSk9Xb2xDTmRDUEpkOGJ4eXB2OG80WUF3NHcvbkRycy9tN3AwSGNJ
aXJaeXBFR1dZdWp1M2cxSmtaelFrdkNJWElZTWZITDBqbFlNdmpzWTlQam41
cmdwRkdxRVc2bGxvT0NFPQpjYWNoZToKICBkaXJlY3RvcmllczoKICAtICRI
T01FLy5ncmFkbGUvY2FjaGVzCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'tink',20570214,"b'Tink is a multi-language, cross-platform, open source library that provides cryptographic APIs that are secure, easy to use correctly, and hard(er) to misuse.'",b'Java',43,8651,,351,False,b'https://api.github.com/repos/google/tink/forks',"IyBUaW5rCgoqQSBtdWx0aS1sYW5ndWFnZSwgY3Jvc3MtcGxhdGZvcm0gbGli
cmFyeSB0aGF0IHByb3ZpZGVzIGNyeXB0b2dyYXBoaWMgQVBJcyB0aGF0IGFy
ZSBzZWN1cmUsIGVhc3kgdG8gdXNlIGNvcnJlY3RseSwgYW5kIGhhcmQoZXIp
IHRvIG1pc3VzZS4qCgoqKmBVYnVudHVgKiogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIHwgKipgbWFjT1NgKioKLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0t
LS0tLS0tClshW0tva29ybyBVYnVudHVdKGh0dHBzOi8vc3RvcmFnZS5nb29n
bGVhcGlzLmNvbS90aW5rLWtva29yby1idWlsZC1iYWRnZXMvdGluay11YnVu
dHUucG5nKV0oIykgfCBbIVtLb2tvcm8gbWFjT1NdKGh0dHBzOi8vc3RvcmFn
ZS5nb29nbGVhcGlzLmNvbS90aW5rLWtva29yby1idWlsZC1iYWRnZXMvdGlu
ay1tYWNvcy5wbmcpXSgjKQoKIyMgSW5kZXgKCjEuIFtJbnRyb2R1Y3Rpb25d
KCNpbnRyb2R1Y3Rpb24pCjIuIFtHZXR0aW5nIHN0YXJ0ZWRdKCNnZXR0aW5n
LXN0YXJ0ZWQpCjMuIFtPdmVydmlld10oI292ZXJ2aWV3KQozLiBbQ3VycmVu
dCBzdGF0dXNdKCNjdXJyZW50LXN0YXR1cykKNC4gW0xlYXJuIG1vcmVdKCNs
ZWFybi1tb3JlKQo1LiBbQ29udGFjdCBhbmQgbWFpbGluZyBsaXN0XSgjY29u
dGFjdC1hbmQtbWFpbGluZy1saXN0KQo2LiBbTWFpbnRhaW5lcnNdKCNtYWlu
dGFpbmVycykKCiMjIEludHJvZHVjdGlvbgoKVXNpbmcgY3J5cHRvIGluIHlv
dXIgYXBwbGljYXRpb24gW3Nob3VsZG4ndCBoYXZlCnRvXShodHRwczovL3d3
dy51c2VuaXgub3JnL3NpdGVzL2RlZmF1bHQvZmlsZXMvY29uZmVyZW5jZS9w
cm90ZWN0ZWQtZmlsZXMvaG90c2VjMTVfc2xpZGVzX2dyZWVuLnBkZikKZmVl
bCBsaWtlIGp1Z2dsaW5nIGNoYWluc2F3cyBpbiB0aGUgZGFyay4gVGluayBp
cyBhIGNyeXB0byBsaWJyYXJ5IHdyaXR0ZW4gYnkgYQpncm91cCBvZiBjcnlw
dG9ncmFwaGVycyBhbmQgc2VjdXJpdHkgZW5naW5lZXJzIGF0IEdvb2dsZS4g
SXQgd2FzIGJvcm4gb3V0IG9mCm91ciBleHRlbnNpdmUgZXhwZXJpZW5jZSB3
b3JraW5nIHdpdGggR29vZ2xlJ3MgcHJvZHVjdCB0ZWFtcywgW2ZpeGluZwp3
ZWFrbmVzc2VzIGluIGltcGxlbWVudGF0aW9uc10oaHR0cHM6Ly9naXRodWIu
Y29tL2dvb2dsZS93eWNoZXByb29mKSwgYW5kCnByb3ZpZGluZyBzaW1wbGUg
QVBJcyB0aGF0IGNhbiBiZSB1c2VkIHNhZmVseSB3aXRob3V0IG5lZWRpbmcg
YSBjcnlwdG8KYmFja2dyb3VuZC4KClRpbmsgcHJvdmlkZXMgc2VjdXJlIEFQ
SXMgdGhhdCBhcmUgZWFzeSB0byB1c2UgY29ycmVjdGx5IGFuZCBoYXJkKGVy
KSB0byBtaXN1c2UuCkl0IHJlZHVjZXMgY29tbW9uIGNyeXB0byBwaXRmYWxs
cyB3aXRoIHVzZXItY2VudGVyZWQgZGVzaWduLCBjYXJlZnVsCmltcGxlbWVu
dGF0aW9uIGFuZCBjb2RlIHJldmlld3MsIGFuZCBleHRlbnNpdmUgdGVzdGlu
Zy4gQXQgR29vZ2xlLCBUaW5rIGlzCmFscmVhZHkgYmVpbmcgdXNlZCB0byBz
ZWN1cmUgZGF0YSBvZiBtYW55IHByb2R1Y3RzIHN1Y2ggYXMgQWRNb2IsIEdv
b2dsZSBQYXksCkdvb2dsZSBBc3Npc3RhbnQsIEZpcmViYXNlLCB0aGUgQW5k
cm9pZCBTZWFyY2ggQXBwLCBldGMuCgpUbyBnZXQgYSBxdWljayBvdmVydmll
dyBvZiBUaW5rIGRlc2lnbiBwbGVhc2UgdGFrZSBhIGxvb2sgYXQKW3NsaWRl
c10oZG9jcy9UaW5rLWFfY3J5cHRvZ3JhcGhpY19saWJyYXJ5LS1SZWFsV29y
bGRDcnlwdG8yMDE5LnBkZikgZnJvbSBbYQp0YWxrIGFib3V0IFRpbmtdKGh0
dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9cHFldjlyM3JVSnMmdD05
NjY1KSBwcmVzZW50ZWQKYXQgW1JlYWwgV29ybGQgQ3J5cHRvIDIwMTldKGh0
dHBzOi8vcndjLmlhY3Iub3JnLzIwMTkvKS4KCiMjIEdldHRpbmcgc3RhcnRl
ZAoKVGluayBwcmltYXJpbHkgdXNlcyBbQmF6ZWxdKGh0dHBzOi8vYmF6ZWwu
YnVpbGQpIHRvIG1hbmFnZSBidWlsZGluZyBhbmQgdGVzdGluZwp0aGUgcHJv
amVjdC4KClRoZSByZWNvbW1lbmRlZCB3YXkgdG8gZ2V0IHN0YXJ0ZWQgd2l0
aCBUaW5rIGlzIHRvIHVzZQpbQmF6ZWxpc2tdKGh0dHBzOi8vZ2l0aHViLmNv
bS9iYXplbGJ1aWxkL2JhemVsaXNrKS4gVGhpcyB0b29sIGlzIGRldmVsb3Bl
ZCBieQp0aGUgQmF6ZWwgdGVhbSBhbmQgbWFrZXMgaXQgZWFzeSB0byBlbnN1
cmUgdXNhZ2Ugb2YgYSB2ZXJzaW9uIG9mIEJhemVsIHRoYXQncwpjb21wYXRp
YmxlIHdpdGggdGhlIHByb2plY3QuCgpBcyBhIHN0YXJ0aW5nIHBvaW50LCB0
aGUgW2BoZWxsbyB3b3JsZApleGFtcGxlc2BdKGh0dHBzOi8vZ2l0aHViLmNv
bS9nb29nbGUvdGluay90cmVlL21hc3Rlci9leGFtcGxlcy9oZWxsb3dvcmxk
KQpkZW1vbnN0cmF0ZSBwZXJmb3JtaW5nIHNpbXBsZSB0YXNrcyB1c2luZyBU
aW5rIGluIGEgdmFyaWV0eSBvZiBsYW5ndWFnZXMuCgojIyBPdmVydmlldwoK
VGluayBwZXJmb3JtcyBjcnlwdG9ncmFwaGljIHRhc2tzIHZpYSBzby1jYWxs
ZWQgW3ByaW1pdGl2ZXNdKGRvY3MvUFJJTUlUSVZFUy5tZCksCmVhY2ggb2Yg
d2hpY2ggaXMgZGVmaW5lZCB2aWEgYSBjb3JyZXNwb25kaW5nIGludGVyZmFj
ZSB0aGF0IHNwZWNpZmllcyB0aGUKZnVuY3Rpb25hbGl0eSBvZiB0aGUgcHJp
bWl0aXZlLiBGb3IgZXhhbXBsZSwgX3N5bW1ldHJpYyBrZXkgZW5jcnlwdGlv
bl8gaXMKb2ZmZXJlZCB2aWEgYW4gW19BRUFELXByaW1pdGl2ZV8gKEF1dGhl
bnRpY2F0ZWQgRW5jcnlwdGlvbiB3aXRoIEFzc29jaWF0ZWQKRGF0YSldKGRv
Y3MvUFJJTUlUSVZFUy5tZCNhdXRoZW50aWNhdGVkLWVuY3J5cHRpb24td2l0
aC1hc3NvY2lhdGVkLWRhdGEpLCB0aGF0CnN1cHBvcnRzIHR3byBvcGVyYXRp
b25zOgoKKiAgIGBlbmNyeXB0KHBsYWludGV4dCwgYXNzb2NpYXRlZF9kYXRh
KWAsIHdoaWNoIGVuY3J5cHRzIHRoZSBnaXZlbiBgcGxhaW50ZXh0YAogICAg
KHVzaW5nIGBhc3NvY2lhdGVkX2RhdGFgIGFzIGFkZGl0aW9uYWwgQUVBRC1p
bnB1dCkgYW5kIHJldHVybnMgdGhlIHJlc3VsdGluZwogICAgY2lwaGVydGV4
dAoqICAgYGRlY3J5cHQoY2lwaGVydGV4dCwgYXNzb2NpYXRlZF9kYXRhKWAs
IHdoaWNoIGRlY3J5cHRzIHRoZSBnaXZlbgogICAgYGNpcGhlcnRleHRgICh1
c2luZyBgYXNzb2NpYXRlZF9kYXRhYCBhcyBhZGRpdGlvbmFsIEFFQUQtaW5w
dXQpIGFuZCByZXR1cm5zCiAgICB0aGUgcmVzdWx0aW5nIHBsYWludGV4dAoK
QmVmb3JlIGltcGxlbWVudGF0aW9ucyBvZiBwcmltaXRpdmVzIGNhbiBiZSB1
c2VkLCB0aGV5IG11c3QgYmUgcmVnaXN0ZXJlZCBhdApydW50aW1lIHdpdGgg
VGluaywgc28gdGhhdCBUaW5rICJrbm93cyIgdGhlIGRlc2lyZWQgaW1wbGVt
ZW50YXRpb25zLiBIZXJlJ3MgaG93CnlvdSBjYW4gcmVnaXN0ZXIgYWxsIGlt
cGxlbWVudGF0aW9ucyBvZiBhbGwgcHJpbWl0aXZlcyBpbiBUaW5rOgoKYGBg
amF2YQogICAgaW1wb3J0IGNvbS5nb29nbGUuY3J5cHRvLnRpbmsuY29uZmln
LlRpbmtDb25maWc7CgogICAgVGlua0NvbmZpZy5yZWdpc3RlcigpOwpgYGAK
CkFmdGVyIGltcGxlbWVudGF0aW9ucyBvZiBwcmltaXRpdmVzIGhhdmUgYmVl
biByZWdpc3RlcmVkLCB0aGUgYmFzaWMgdXNlIG9mIFRpbmsKcHJvY2VlZHMg
aW4gdGhyZWUgc3RlcHM6CgoxLiAgTG9hZCBvciBnZW5lcmF0ZSB0aGUgY3J5
cHRvZ3JhcGhpYyBrZXkgbWF0ZXJpYWwgKGEgYEtleXNldGAgaW4gVGluayB0
ZXJtcykuCjIuICBVc2UgdGhlIGtleSBtYXRlcmlhbCB0byBnZXQgYW4gaW5z
dGFuY2Ugb2YgdGhlIGNob3NlbiBwcmltaXRpdmUuCjMuICBVc2UgdGhhdCBw
cmltaXRpdmUgdG8gYWNjb21wbGlzaCB0aGUgY3J5cHRvZ3JhcGhpYyB0YXNr
LgoKSGVyZSBpcyBob3cgdGhlc2Ugc3RlcHMgd291bGQgbG9vayBsaWtlIHdo
ZW4gZW5jcnlwdGluZyBvciBkZWNyeXB0aW5nIHdpdGggYW4KQUVBRCBwcmlt
aXRpdmUgaW4gSmF2YToKCmBgYGphdmEKICAgIGltcG9ydCBjb20uZ29vZ2xl
LmNyeXB0by50aW5rLkFlYWQ7CiAgICBpbXBvcnQgY29tLmdvb2dsZS5jcnlw
dG8udGluay5LZXlzZXRIYW5kbGU7CiAgICBpbXBvcnQgY29tLmdvb2dsZS5j
cnlwdG8udGluay5hZWFkLkFlYWRLZXlUZW1wbGF0ZXM7CgogICAgLy8gMS4g
R2VuZXJhdGUgdGhlIGtleSBtYXRlcmlhbC4KICAgIEtleXNldEhhbmRsZSBr
ZXlzZXRIYW5kbGUgPSBLZXlzZXRIYW5kbGUuZ2VuZXJhdGVOZXcoCiAgICAg
ICAgQWVhZEtleVRlbXBsYXRlcy5BRVMxMjhfR0NNKTsKCiAgICAvLyAyLiBH
ZXQgdGhlIHByaW1pdGl2ZS4KICAgIEFlYWQgYWVhZCA9IGtleXNldEhhbmRs
ZS5nZXRQcmltaXRpdmUoQWVhZC5jbGFzcyk7CgogICAgLy8gMy4gVXNlIHRo
ZSBwcmltaXRpdmUuCiAgICBieXRlW10gY2lwaGVydGV4dCA9IGFlYWQuZW5j
cnlwdChwbGFpbnRleHQsIGFzc29jaWF0ZWREYXRhKTsKYGBgCgojIyBDdXJy
ZW50IHN0YXR1cwoKKiAgIFtKYXZhIGFuZCBBbmRyb2lkXShkb2NzL0pBVkEt
SE9XVE8ubWQpLCBbQysrXShkb2NzL0NQUC1IT1dUTy5tZCksCiAgICBbT2Jq
LUNdKGRvY3MvT0JKQy1IT1dUTy5tZCksIGFuZCBbR29dKGRvY3MvR09MQU5H
LUhPV1RPLm1kKSBhcmUgZmllbGQKICAgIHRlc3RlZCBhbmQgcmVhZHkgZm9y
IHByb2R1Y3Rpb24uIFRoZSBsYXRlc3QgdmVyc2lvbiBpcwogICAgWzEuMy4w
LXJjMl0oaHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS90aW5rL3JlbGVhc2Vz
L3RhZy92MS4zLjAtcmMyKSwKICAgIHJlbGVhc2VkIG9uIDIwMTktMTEtMjUu
CgoqICAgVGluayBmb3IgUHl0aG9uIGFuZCBKYXZhU2NyaXB0IGFyZSBpbiBh
Y3RpdmUgZGV2ZWxvcG1lbnQuCgojIyBMZWFybiBtb3JlCgoqICAgW0phdmEg
SE9XLVRPXShkb2NzL0pBVkEtSE9XVE8ubWQpCiogICBbQysrIEhPVy1UT10o
ZG9jcy9DUFAtSE9XVE8ubWQpCiogICBbT2JqLUMgSE9XLVRPXShkb2NzL09C
SkMtSE9XVE8ubWQpCiogICBbR28gSE9XLVRPXShkb2NzL0dPTEFORy1IT1dU
Ty5tZCkKKiAgIFtTZWN1cml0eSBhbmQgVXNhYmlsaXR5IERlc2lnbiBHb2Fs
c10oZG9jcy9TRUNVUklUWS1VU0FCSUxJVFkubWQpCiogICBbU3VwcG9ydGVk
IENyeXB0byBQcmltaXRpdmVzXShkb2NzL1BSSU1JVElWRVMubWQpCiogICBb
S2V5IE1hbmFnZW1lbnRdKGRvY3MvS0VZLU1BTkFHRU1FTlQubWQpCiogICBb
VGlua2V5XShkb2NzL1RJTktFWS5tZCkKKiAgIFtLbm93biBJc3N1ZXNdKGRv
Y3MvS05PV04tSVNTVUVTLm1kKQoqICAgW0ZlYXR1cmUgUm9hZG1hcF0oZG9j
cy9ST0FETUFQLm1kKQoqICAgW0phdmEgSGFja2luZyBHdWlkZV0oZG9jcy9K
QVZBLUhBQ0tJTkcubWQpCgojIyBDb21tdW5pdHktZHJpdmVuIHBvcnRzCgpP
dXQgb2YgdGhlIGJveCBUaW5rIHN1cHBvcnRzIGEgd2lkZSByYW5nZSBvZiBs
YW5ndWFnZXMsIGJ1dCBpdCBzdGlsbCBkb2Vzbid0CnN1cHBvcnQgZXZlcnkg
bGFuZ3VhZ2UuIEZvcnR1bmF0ZWx5LCBzb21lIHVzZXJzIGxpa2UgVGluayBz
byBtdWNoIHRoYXQgdGhleSd2ZQpwb3J0ZWQgaXQgdG8gdGhlaXIgZmF2b3Jp
dGUgbGFuZ3VhZ2VzISBCZWxvdyB5b3UgY2FuIGZpbmQgbm90YWJsZSBwb3J0
cy4KCioqV0FSTklORyoqIFdoaWxlIHdlIHVzdWFsbHkgcmV2aWV3IHRoZXNl
IHBvcnRzLCB1bnRpbCBmdXJ0aGVyIG5vdGljZSwgd2UgZG8gbm90Cm1haW50
YWluIHRoZW0gYW5kIGhhdmUgbm8gcGxhbiB0byBzdXBwb3J0IHRoZW0gaW4g
dGhlIGZvcmVzZWVhYmxlIGZ1dHVyZS4KCiogICBbQyMgKHdpdGggSk5JKV0o
aHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS1wYXkvdGluay1qbmktZXhhbXBs
ZXMpCiogICBbQ2xvanVyZV0oaHR0cHM6Ly9naXRodWIuY29tL3Blcmtzcy90
aW5rbGopCgojIyBDb250YWN0IGFuZCBtYWlsaW5nIGxpc3QKCklmIHlvdSB3
YW50IHRvIGNvbnRyaWJ1dGUsIHBsZWFzZSByZWFkIFtDT05UUklCVVRJTkdd
KGRvY3MvQ09OVFJJQlVUSU5HLm1kKQphbmQgc2VuZCB1cyBwdWxsIHJlcXVl
c3RzLiBZb3UgY2FuIGFsc28gcmVwb3J0IGJ1Z3Mgb3IgZmlsZSBmZWF0dXJl
IHJlcXVlc3RzLgoKSWYgeW91J2QgbGlrZSB0byB0YWxrIHRvIHRoZSBkZXZl
bG9wZXJzIG9yIGdldCBub3RpZmllZCBhYm91dCBtYWpvciBwcm9kdWN0CnVw
ZGF0ZXMsIHlvdSBtYXkgd2FudCB0byBzdWJzY3JpYmUgdG8gb3VyClttYWls
aW5nIGxpc3RdKGh0dHBzOi8vZ3JvdXBzLmdvb2dsZS5jb20vZm9ydW0vIyFm
b3J1bS90aW5rLXVzZXJzKS4KCiMjIE1haW50YWluZXJzCgpUaW5rIGlzIG1h
aW50YWluZWQgYnkgKEEtWik6CgotICAgSGFyaXMgQW5kcmlhbmFraXMKLSAg
IERhbmllbCBCbGVpY2hlbmJhY2hlcgotICAgVGFudWogRGhpcgotICAgVGhh
aSBEdW9uZwotICAgVGhvbWFzIEhvbGVuc3RlaW4KLSAgIENoYXJsZXMgTGVl
Ci0gICBRdWFuIE5ndXllbgotICAgQmFydG9zeiBQcnp5ZGF0ZWsKLSAgIEVu
em8gUHVpZwotICAgVmVyb25pa2EgU2zDrXZvdsOhCi0gICBQYXVsYSBWaWRh
cwotICAgSsO8cmcgV3VsbHNjaGxlZ2VyCg==
",,8651,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'mkdocs',15830664,b'Project documentation with Markdown.',b'Python',86,8651,,210,False,b'https://api.github.com/repos/mkdocs/mkdocs/forks',"IyBNa0RvY3MKClByb2plY3QgZG9jdW1lbnRhdGlvbiB3aXRoIE1hcmtkb3du
LgoKLS0tCgpbIVtQeVBJIFZlcnNpb25dW3B5cGktdi1pbWFnZV1dW3B5cGkt
di1saW5rXQpbIVtCdWlsZCBTdGF0dXNdW3RyYXZpcy1pbWFnZV1dW3RyYXZp
cy1saW5rXQpbIVtXaW5kb3dzIEJ1aWxkIFN0YXR1c11bYXBwdmV5b3ItaW1h
Z2VdXVthcHB2ZXlvci1saW5rXQpbIVtDb3ZlcmFnZSBTdGF0dXNdW2NvZGVj
b3YtaW1hZ2VdXVtjb2RlY292LWxpbmtdClshW0xhbmRzY2FsZSBDb2RlIEhl
YWx0aF1bbGFuZHNjYXBlLWltYWdlXV1bbGFuZHNjYXBlLWxpbmtdCgotIFZp
ZXcgdGhlIFtNa0RvY3MgZG9jdW1lbnRhdGlvbl1bbWtkb2NzXS4KLSBQcm9q
ZWN0IFtyZWxlYXNlIG5vdGVzXVtyZWxlYXNlLW5vdGVzXS4KLSBWaXNpdCB0
aGUgW01rRG9jcyB3aWtpXShodHRwczovL2dpdGh1Yi5jb20vbWtkb2NzL21r
ZG9jcy93aWtpKSBmb3IgY29tbXVuaXR5CiAgcmVzb3VyY2VzLCBpbmNsdWRp
bmcgdGhpcmQgcGFydHkgdGhlbWVzIGFuZCBhIGxpc3Qgb2YgTWtEb2NzIHVz
ZXJzLgotIElSQyBjaGFubmVsOiBgI21rZG9jc2Agb24gZnJlZW5vZGUuCi0g
RGlzY3Vzc2lvbnMgYW5kIHN1cHBvcnQ6IDxodHRwczovL2dyb3Vwcy5nb29n
bGUuY29tL2ZvcnVtLyMhZm9ydW0vbWtkb2NzPgoKIyMgQ29kZSBvZiBDb25k
dWN0CgpFdmVyeW9uZSBpbnRlcmFjdGluZyBpbiB0aGUgTWtEb2NzIHByb2pl
Y3QncyBjb2RlYmFzZXMsIGlzc3VlIHRyYWNrZXJzLCBjaGF0CnJvb21zLCBh
bmQgbWFpbGluZyBsaXN0cyBpcyBleHBlY3RlZCB0byBmb2xsb3cgdGhlIFtQ
eVBBIENvZGUgb2YgQ29uZHVjdF0uCgpbYXBwdmV5b3ItaW1hZ2VdOiBodHRw
czovL2ltZy5zaGllbGRzLmlvL2FwcHZleW9yL2NpL2QwdWdhbC9ta2RvY3Mv
bWFzdGVyLnN2ZwpbYXBwdmV5b3ItbGlua106IGh0dHBzOi8vY2kuYXBwdmV5
b3IuY29tL3Byb2plY3QvZDB1Z2FsL21rZG9jcwpbY29kZWNvdi1pbWFnZV06
IGh0dHBzOi8vY29kZWNvdi5pby9naXRodWIvbWtkb2NzL21rZG9jcy9jb3Zl
cmFnZS5zdmc/YnJhbmNoPW1hc3RlcgpbY29kZWNvdi1saW5rXTogaHR0cHM6
Ly9jb2RlY292LmlvL2dpdGh1Yi9ta2RvY3MvbWtkb2NzP2JyYW5jaD1tYXN0
ZXIKW2xhbmRzY2FwZS1pbWFnZV06IGh0dHBzOi8vbGFuZHNjYXBlLmlvL2dp
dGh1Yi9ta2RvY3MvbWtkb2NzL21hc3Rlci9sYW5kc2NhcGUuc3ZnP3N0eWxl
PWZsYXQKW2xhbmRzY2FwZS1saW5rXTogaHR0cHM6Ly9sYW5kc2NhcGUuaW8v
Z2l0aHViL21rZG9jcy9ta2RvY3MvbWFzdGVyCltweXBpLXYtaW1hZ2VdOiBo
dHRwczovL2ltZy5zaGllbGRzLmlvL3B5cGkvdi9ta2RvY3Muc3ZnCltweXBp
LXYtbGlua106IGh0dHBzOi8vcHlwaS5vcmcvcHJvamVjdC9ta2RvY3MvClt0
cmF2aXMtaW1hZ2VdOiBodHRwczovL2ltZy5zaGllbGRzLmlvL3RyYXZpcy9t
a2RvY3MvbWtkb2NzL21hc3Rlci5zdmcKW3RyYXZpcy1saW5rXTogaHR0cHM6
Ly90cmF2aXMtY2kub3JnL21rZG9jcy9ta2RvY3MKCltta2RvY3NdOiBodHRw
czovL3d3dy5ta2RvY3Mub3JnCltyZWxlYXNlLW5vdGVzXTogaHR0cHM6Ly93
d3cubWtkb2NzLm9yZy9hYm91dC9yZWxlYXNlLW5vdGVzLwoKW1B5UEEgQ29k
ZSBvZiBDb25kdWN0XTogaHR0cHM6Ly93d3cucHlwYS5pby9lbi9sYXRlc3Qv
Y29kZS1vZi1jb25kdWN0Lwo=
",,8651,"c3VkbzogZmFsc2UKbGFuZ3VhZ2U6IHB5dGhvbgpkaXN0OiB0cnVzdHkKCm1h
dHJpeDoKICBpbmNsdWRlOgogICAgIyBEZWZhdWx0IFB5dGhvbgogICAgLSBl
bnY6IFRPWEVOVj1mbGFrZTgKICAgIC0gZW52OiBUT1hFTlY9bWFya2Rvd24t
bGludAogICAgICBiZWZvcmVfaW5zdGFsbDogbnBtIGluc3RhbGwgLWcgbWFy
a2Rvd25saW50LWNsaQogICAgLSBlbnY6IFRPWEVOVj1saW5rY2hlY2tlcgog
ICAgICBweXRob246ICcyLjcnCiAgICAtIGVudjogVE9YRU5WPWpzaGludAog
ICAgICBiZWZvcmVfaW5zdGFsbDogbnBtIGluc3RhbGwgLWcganNoaW50CiAg
ICAtIGVudjogVE9YRU5WPWNzc2xpbnQKICAgICAgYmVmb3JlX2luc3RhbGw6
IG5wbSBpbnN0YWxsIC1nIGNzc2xpbnQKICAgICMgUHl0aG9uIHZlcnNpb24g
c3BlY2lmaWMKICAgIC0gcHl0aG9uOiAnMi43JwogICAgICBlbnY6IFRPWEVO
Vj1weTI3LWludGVncmF0aW9uCiAgICAtIHB5dGhvbjogJzIuNycKICAgICAg
ZW52OiBUT1hFTlY9cHkyNy1taW4tcmVxCiAgICAtIHB5dGhvbjogJzIuNycK
ICAgICAgZW52OiBUT1hFTlY9cHkyNy11bml0dGVzdHMKICAgIC0gcHl0aG9u
OiAnMy40JwogICAgICBlbnY6IFRPWEVOVj1weTM0LWludGVncmF0aW9uCiAg
ICAtIHB5dGhvbjogJzMuNCcKICAgICAgZW52OiBUT1hFTlY9cHkzNC1taW4t
cmVxCiAgICAtIHB5dGhvbjogJzMuNCcKICAgICAgZW52OiBUT1hFTlY9cHkz
NC11bml0dGVzdHMKICAgIC0gcHl0aG9uOiAnMy41JwogICAgICBlbnY6IFRP
WEVOVj1weTM1LWludGVncmF0aW9uCiAgICAtIHB5dGhvbjogJzMuNScKICAg
ICAgZW52OiBUT1hFTlY9cHkzNS1taW4tcmVxCiAgICAtIHB5dGhvbjogJzMu
NScKICAgICAgZW52OiBUT1hFTlY9cHkzNS11bml0dGVzdHMKICAgIC0gcHl0
aG9uOiAnMy42JwogICAgICBlbnY6IFRPWEVOVj1weTM2LWludGVncmF0aW9u
CiAgICAtIHB5dGhvbjogJzMuNicKICAgICAgZW52OiBUT1hFTlY9cHkzNi1t
aW4tcmVxCiAgICAtIHB5dGhvbjogJzMuNicKICAgICAgZW52OiBUT1hFTlY9
cHkzNi11bml0dGVzdHMKICAgIC0gcHl0aG9uOiAnMy43JwogICAgICBlbnY6
IFRPWEVOVj1weTM3LWludGVncmF0aW9uCiAgICAgIGRpc3Q6IHhlbmlhbAog
ICAgICBzdWRvOiB0cnVlCiAgICAtIHB5dGhvbjogJzMuNycKICAgICAgZW52
OiBUT1hFTlY9cHkzNy1taW4tcmVxCiAgICAgIGRpc3Q6IHhlbmlhbAogICAg
ICBzdWRvOiB0cnVlCiAgICAtIHB5dGhvbjogJzMuNycKICAgICAgZW52OiBU
T1hFTlY9cHkzNy11bml0dGVzdHMKICAgICAgZGlzdDogeGVuaWFsCiAgICAg
IHN1ZG86IHRydWUKICAgIC0gcHl0aG9uOiAncHlweScKICAgICAgZW52OiBU
T1hFTlY9cHlweS1pbnRlZ3JhdGlvbgogICAgLSBweXRob246ICdweXB5Jwog
ICAgICBlbnY6IFRPWEVOVj1weXB5LW1pbi1yZXEKICAgIC0gcHl0aG9uOiAn
cHlweScKICAgICAgZW52OiBUT1hFTlY9cHlweS11bml0dGVzdHMKICAgIC0g
cHl0aG9uOiAncHlweTMnCiAgICAgIGVudjogVE9YRU5WPXB5cHkzLWludGVn
cmF0aW9uCiAgICAtIHB5dGhvbjogJ3B5cHkzJwogICAgICBlbnY6IFRPWEVO
Vj1weXB5My1taW4tcmVxCiAgICAtIHB5dGhvbjogJ3B5cHkzJwogICAgICBl
bnY6IFRPWEVOVj1weXB5My11bml0dGVzdHMKCmluc3RhbGw6CiAgLSBwaXAg
aW5zdGFsbCBjb2RlY292CiAgLSBwaXAgaW5zdGFsbCB0b3gKCnNjcmlwdDoK
ICAtIGdpdCBjbGVhbiAtZiAtZCAteAogIC0gdG94CgphZnRlcl9zdWNjZXNz
OiBjb2RlY292CgpkZXBsb3k6CiAgcHJvdmlkZXI6IHB5cGkKICB1c2VyOiBt
a2RvY3NkZXBsb3kKICBkaXN0cmlidXRpb25zOiAic2Rpc3QgYmRpc3Rfd2hl
ZWwiCiAgcGFzc3dvcmQ6CiAgICBzZWN1cmU6IGI0ZjZ5MXh3NUIvUlhYbk91
NkpJYU5jZ09CWjAvQ2tOYU1lRVhzb1FTZXdZWk53b2JMUFlBTFk5V2FhT2Js
YXJ3clZhNU5SRDNlNHg2U29MMS8xTnpReGZoQ05NbjdMODJzc3NtdGV2bksr
bVN1VXA0SVpRYThXS3l6K3hMZm5rMjhUbEhnUWJjdEFVOU5hZVE2R3VFZmxU
UkQ3QnA4K3hKMUM3aCt5QlVudz0KICBvbjoKICAgIHRhZ3M6IHRydWUKICAg
IHJlcG86IG1rZG9jcy9ta2RvY3MKICAgIGNvbmRpdGlvbjogIiRUT1hFTlYg
PSBweTI3LWludGVncmF0aW9uIgo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
