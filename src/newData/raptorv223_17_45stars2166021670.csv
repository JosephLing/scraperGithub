name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'localstack',71948498,b'\xf0\x9f\x92\xbb  A fully functional local AWS cloud stack. Develop and test your cloud & Serverless apps offline!',b'Python',328,21669,,465,False,b'https://api.github.com/repos/localstack/localstack/forks',"WyFbQnVpbGQgU3RhdHVzXShodHRwczovL3RyYXZpcy1jaS5vcmcvbG9jYWxz
dGFjay9sb2NhbHN0YWNrLnN2ZyldKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9s
b2NhbHN0YWNrL2xvY2Fsc3RhY2spIFshW0JhY2tlcnMgb24gT3BlbiBDb2xs
ZWN0aXZlXShodHRwczovL29wZW5jb2xsZWN0aXZlLmNvbS9sb2NhbHN0YWNr
L2JhY2tlcnMvYmFkZ2Uuc3ZnKV0oI2JhY2tlcnMpIFshW1Nwb25zb3JzIG9u
IE9wZW4gQ29sbGVjdGl2ZV0oaHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20v
bG9jYWxzdGFjay9zcG9uc29ycy9iYWRnZS5zdmcpXSgjc3BvbnNvcnMpIFsh
W0NvdmVyYWdlIFN0YXR1c10oaHR0cHM6Ly9jb3ZlcmFsbHMuaW8vcmVwb3Mv
Z2l0aHViL2xvY2Fsc3RhY2svbG9jYWxzdGFjay9iYWRnZS5zdmc/YnJhbmNo
PW1hc3RlcildKGh0dHBzOi8vY292ZXJhbGxzLmlvL2dpdGh1Yi9sb2NhbHN0
YWNrL2xvY2Fsc3RhY2s/YnJhbmNoPW1hc3RlcikKWyFbR2l0dGVyXShodHRw
czovL2ltZy5zaGllbGRzLmlvL2dpdHRlci9yb29tL2xvY2Fsc3RhY2svUGxh
dGZvcm0uc3ZnKV0oaHR0cHM6Ly9naXR0ZXIuaW0vbG9jYWxzdGFjay9QbGF0
Zm9ybSkKWyFbUHlQSSBWZXJzaW9uXShodHRwczovL2JhZGdlLmZ1cnkuaW8v
cHkvbG9jYWxzdGFjay5zdmcpXShodHRwczovL2JhZGdlLmZ1cnkuaW8vcHkv
bG9jYWxzdGFjaykKWyFbUHlQSSBMaWNlbnNlXShodHRwczovL2ltZy5zaGll
bGRzLmlvL3B5cGkvbC9sb2NhbHN0YWNrLnN2ZyldKGh0dHBzOi8vaW1nLnNo
aWVsZHMuaW8vcHlwaS9sL2xvY2Fsc3RhY2suc3ZnKQpbIVtDb2RlIENsaW1h
dGVdKGh0dHBzOi8vY29kZWNsaW1hdGUuY29tL2dpdGh1Yi9sb2NhbHN0YWNr
L2xvY2Fsc3RhY2svYmFkZ2VzL2dwYS5zdmcpXShodHRwczovL2NvZGVjbGlt
YXRlLmNvbS9naXRodWIvbG9jYWxzdGFjay9sb2NhbHN0YWNrKQpbIVtUd2l0
dGVyXShodHRwczovL2ltZy5zaGllbGRzLmlvL3R3aXR0ZXIvdXJsL2h0dHAv
c2hpZWxkcy5pby5zdmc/c3R5bGU9c29jaWFsKV0oaHR0cHM6Ly90d2l0dGVy
LmNvbS9fbG9jYWxzdGFjaykKCiMgTG9jYWxTdGFjayAtIEEgZnVsbHkgZnVu
Y3Rpb25hbCBsb2NhbCBBV1MgY2xvdWQgc3RhY2sKCiFbTG9jYWxTdGFja10o
aHR0cHM6Ly9naXRodWIuY29tL2xvY2Fsc3RhY2svbG9jYWxzdGFjay9yYXcv
bWFzdGVyL2xvY2Fsc3RhY2svZGFzaGJvYXJkL3dlYi9pbWcvbG9jYWxzdGFj
ay5wbmcpCgoqTG9jYWxTdGFjayogcHJvdmlkZXMgYW4gZWFzeS10by11c2Ug
dGVzdC9tb2NraW5nIGZyYW1ld29yayBmb3IgZGV2ZWxvcGluZyBDbG91ZCBh
cHBsaWNhdGlvbnMuCgpDdXJyZW50bHksIHRoZSBmb2N1cyBpcyBwcmltYXJp
bHkgb24gc3VwcG9ydGluZyB0aGUgQVdTIGNsb3VkIHN0YWNrLgoKIyBBbm5v
dW5jZW1lbnRzCgoqICoqMjAxOS0xMC0wOSoqOiAqKkxvY2FsU3RhY2sgUHJv
IGlzIG91dCEqKiBXZSdyZSBpbmNyZWRpYmx5IGV4Y2l0ZWQgdG8gYW5ub3Vu
Y2UgdGhlIGxhdW5jaCBvZiBMb2NhbFN0YWNrIFBybyAtIHRoZSBlbnRlcnBy
aXNlIHZlcnNpb24gb2YgTG9jYWxTdGFjayB3aXRoIGFkZGl0aW9uYWwgQVBJ
cyBhbmQgYWR2YW5jZWQgZmVhdHVyZXMuIENoZWNrIG91dCB0aGUgZnJlZSB0
cmlhbCBhdCBodHRwczovL2xvY2Fsc3RhY2suY2xvdWQKKiAqKjIwMTgtMDEt
MTAqKjogKipIZWxwIHdhbnRlZCEqKiBQbGVhc2UgW2ZpbGwgb3V0IHRoaXMg
c3VydmV5XShodHRwczovL2xhbWJkYXN0dWR5LnR5cGVmb3JtLmNvbS90by9r
RFV2dnk/c291cmNlPWxvY2Fsc3RhY2stZ2l0aHViKSB0byBzdXBwb3J0IGEg
cmVzZWFyY2ggc3R1ZHkgb24gdGhlIHVzYWdlIG9mIFNlcnZlcmxlc3MgYW5k
IEZ1bmN0aW9uLWFzLWEtU2VydmljZSAoRmFhUykgc2VydmljZXMsIGNvbmR1
Y3RlZCBhdCBDaGFsbWVycyBVbml2ZXJzaXR5IG9mIFRlY2hub2xvZ3kuIFRo
ZSBzdXJ2ZXkgb25seSB0YWtlcyA1LTEwIG1pbnV0ZXMgb2YgeW91ciB0aW1l
LiBNYW55IHRoYW5rcyBmb3IgeW91ciBwYXJ0aWNpcGF0aW9uISEKICAqIFRo
ZSByZXN1bHQgZnJvbSB0aGlzIHN0dWR5IGNhbiBiZSBmb3VuZCBbaGVyZV0o
aHR0cHM6Ly9yZXNlYXJjaC5jaGFsbWVycy5zZS9lbi9wdWJsaWNhdGlvbi81
MDgxNDcpCiogKioyMDE3LTA4LTI3Kio6ICoqV2UgbmVlZCB5b3VyIHN1cHBv
cnQhKiogTG9jYWxTdGFjayBpcyBncm93aW5nIGZhc3QsIHdlIG5vdyBoYXZl
IHRob3VzYW5kcyBvZiBkZXZlbG9wZXJzIHVzaW5nIHRoZSBwbGF0Zm9ybSBv
biBhIHJlZ3VsYXIgYmFzaXMuIExhc3QgbW9udGggd2UgaGF2ZSByZWNvcmRl
ZCBhIHN0YWdnZXJpbmcgMTAwayB0ZXN0IHJ1bnMsIHdpdGggMjVrKyBEeW5h
bW9EQiB0YWJsZXMsIDIwaysgU1FTIHF1ZXVlcywgMTVrKyBLaW5lc2lzIHN0
cmVhbXMsIDEzaysgUzMgYnVja2V0cywgYW5kIDEwaysgTGFtYmRhIGZ1bmN0
aW9ucyBjcmVhdGVkIGxvY2FsbHkgLSBmb3IgMCQgY29zdHMgKG1vcmUgZGV0
YWlscyB0byBiZSBwdWJsaXNoZWQgc29vbikuIEJ1ZyBhbmQgZmVhdHVyZSBy
ZXF1ZXN0cyBhcmUgcG91cmluZyBpbiwgYW5kIHdlIG5vdyBuZWVkIHNvbWUg
c3VwcG9ydCBmcm9tIF95b3VfIHRvIGtlZXAgdGhlIG9wZW4gc291cmNlIHZl
cnNpb24gYWN0aXZlbHkgbWFpbnRhaW5lZC4gUGxlYXNlIGNoZWNrIG91dCBb
T3BlbiBDb2xsZWN0aXZlXShodHRwczovL29wZW5jb2xsZWN0aXZlLmNvbS9s
b2NhbHN0YWNrKSBhbmQgYmVjb21lIGEgW2JhY2tlcl0oaHR0cHM6Ly9naXRo
dWIuY29tL2xvY2Fsc3RhY2svbG9jYWxzdGFjayNiYWNrZXJzKSBvciBbc3Vw
cG9ydGVyXShodHRwczovL2dpdGh1Yi5jb20vbG9jYWxzdGFjay9sb2NhbHN0
YWNrI2JhY2tlcnMpIG9mIHRoZSBwcm9qZWN0IHRvZGF5ISBUaGFua3MgZXZl
cnlib2R5IGZvciBjb250cmlidXRpbmcuIOKZpQoqICoqMjAxNy0wNy0yMCoq
OiBQbGVhc2Ugbm90ZTogU3RhcnRpbmcgd2l0aCB2ZXJzaW9uIGAwLjcuMGAs
IHRoZSBEb2NrZXIgaW1hZ2Ugd2lsbCBiZSBwdXNoZWQKYW5kIGtlcHQgdXAg
dG8gZGF0ZSB1bmRlciB0aGUgKipuZXcgbmFtZSoqIGBsb2NhbHN0YWNrL2xv
Y2Fsc3RhY2tgLiAoVGhpcyBtZWFucyB0aGF0IHlvdSBtYXkKaGF2ZSB0byB1
cGRhdGUgeW91ciBDSSBjb25maWd1cmF0aW9ucy4pIFBsZWFzZSByZWZlciB0
byB0aGUgdXBkYXRlZAoqKltFbmQtVXNlciBMaWNlbnNlIEFncmVlbWVudCAo
RVVMQSldKGRvYy9lbmRfdXNlcl9saWNlbnNlX2FncmVlbWVudCkqKiBmb3Ig
dGhlIG5ldyB2ZXJzaW9ucy4KVGhlIG9sZCBEb2NrZXIgaW1hZ2UgKGBhdGxh
c3NpYW5sYWJzL2xvY2Fsc3RhY2tgKSBpcyBzdGlsbCBhdmFpbGFibGUgYnV0
IHdpbGwgbm90IGJlIG1haW50YWluZWQKYW55IGxvbmdlci4KCiMgT3ZlcnZp
ZXcKCkxvY2FsU3RhY2sgc3BpbnMgdXAgdGhlIGZvbGxvd2luZyBjb3JlIENs
b3VkIEFQSXMgb24geW91ciBsb2NhbCBtYWNoaW5lOgoKKiAqKkFQSSBHYXRl
d2F5KiogYXQgaHR0cDovL2xvY2FsaG9zdDo0NTY3CiogKipLaW5lc2lzKiog
YXQgaHR0cDovL2xvY2FsaG9zdDo0NTY4CiogKipEeW5hbW9EQioqIGF0IGh0
dHA6Ly9sb2NhbGhvc3Q6NDU2OQoqICoqRHluYW1vREIgU3RyZWFtcyoqIGF0
IGh0dHA6Ly9sb2NhbGhvc3Q6NDU3MAoqICoqRWxhc3RpY3NlYXJjaCoqIGF0
IGh0dHA6Ly9sb2NhbGhvc3Q6NDU3MQoqICoqUzMqKiBhdCBodHRwOi8vbG9j
YWxob3N0OjQ1NzIKKiAqKkZpcmVob3NlKiogYXQgaHR0cDovL2xvY2FsaG9z
dDo0NTczCiogKipMYW1iZGEqKiBhdCBodHRwOi8vbG9jYWxob3N0OjQ1NzQK
KiAqKlNOUyoqIGF0IGh0dHA6Ly9sb2NhbGhvc3Q6NDU3NQoqICoqU1FTKiog
YXQgaHR0cDovL2xvY2FsaG9zdDo0NTc2CiogKipSZWRzaGlmdCoqIGF0IGh0
dHA6Ly9sb2NhbGhvc3Q6NDU3NwoqICoqRVMgKEVsYXN0aWNzZWFyY2ggU2Vy
dmljZSkqKiBhdCBodHRwOi8vbG9jYWxob3N0OjQ1NzgKKiAqKlNFUyoqIGF0
IGh0dHA6Ly9sb2NhbGhvc3Q6NDU3OQoqICoqUm91dGU1MyoqIGF0IGh0dHA6
Ly9sb2NhbGhvc3Q6NDU4MAoqICoqQ2xvdWRGb3JtYXRpb24qKiBhdCBodHRw
Oi8vbG9jYWxob3N0OjQ1ODEKKiAqKkNsb3VkV2F0Y2gqKiBhdCBodHRwOi8v
bG9jYWxob3N0OjQ1ODIKKiAqKlNTTSoqIGF0IGh0dHA6Ly9sb2NhbGhvc3Q6
NDU4MwoqICoqU2VjcmV0c01hbmFnZXIqKiBhdCBodHRwOi8vbG9jYWxob3N0
OjQ1ODQKKiAqKlN0ZXBGdW5jdGlvbnMqKiBhdCBodHRwOi8vbG9jYWxob3N0
OjQ1ODUKKiAqKkNsb3VkV2F0Y2ggTG9ncyoqIGF0IGh0dHA6Ly9sb2NhbGhv
c3Q6NDU4NgoqICoqRXZlbnRCcmlkZ2UgKENsb3VkV2F0Y2ggRXZlbnRzKSoq
IGF0IGh0dHA6Ly9sb2NhbGhvc3Q6NDU4NwoqICoqU1RTKiogYXQgaHR0cDov
L2xvY2FsaG9zdDo0NTkyCiogKipJQU0qKiBhdCBodHRwOi8vbG9jYWxob3N0
OjQ1OTMKKiAqKkVDMioqIGF0IGh0dHA6Ly9sb2NhbGhvc3Q6NDU5NwoKSW4g
YWRkaXRpb24gdG8gdGhlIGFib3ZlLCB0aGUgWyoqUHJvIHZlcnNpb24qKiBv
ZiBMb2NhbFN0YWNrXShodHRwczovL2xvY2Fsc3RhY2suY2xvdWQvI3ByaWNp
bmcpIHN1cHBvcnRzIGFkZGl0aW9uYWwgQVBJcyBhbmQgYWR2YW5jZWQgZmVh
dHVyZXMsIGluY2x1ZGluZzoKKiAqKkFwcFN5bmMqKgoqICoqQXRoZW5hKioK
KiAqKkNvZ25pdG8qKgoqICoqRWxhc3RpQ2FjaGUqKgoqICoqRUNTL0VLUyoq
CiogKipJb1QqKgoqICoqTGFtYmRhIExheWVycyoqCiogKipSRFMqKgoqICoq
WFJheSoqCiogKipJbnRlcmFjdGl2ZSBVSXMgdG8gbWFuYWdlIHJlc291cmNl
cyoqCiogKipUZXN0IHJlcG9ydCBkYXNoYm9hcmRzKioKKiAuLi5hbmQgbXVj
aCwgbXVjaCBtb3JlIHRvIGNvbWUhCgojIyBXaHkgTG9jYWxTdGFjaz8KCkxv
Y2FsU3RhY2sgYnVpbGRzIG9uIGV4aXN0aW5nIGJlc3Qtb2YtYnJlZWQgbW9j
a2luZy90ZXN0aW5nIHRvb2xzLCBtb3N0IG5vdGFibHkKW2tpbmVzYWxpdGVd
KGh0dHBzOi8vZ2l0aHViLmNvbS9taGFydC9raW5lc2FsaXRlKS9bZHluYWxp
dGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9taGFydC9keW5hbGl0ZSkKYW5kIFtt
b3RvXShodHRwczovL2dpdGh1Yi5jb20vc3B1bGVjL21vdG8pLiBXaGlsZSB0
aGVzZSB0b29scyBhcmUgKmF3ZXNvbWUqICghKSwgdGhleSBsYWNrIGZ1bmN0
aW9uYWxpdHkKZm9yIGNlcnRhaW4gdXNlIGNhc2VzLiBMb2NhbFN0YWNrIGNv
bWJpbmVzIHRoZSB0b29scywgbWFrZXMgdGhlbSBpbnRlcm9wZXJhYmxlLCBh
bmQgYWRkcyBpbXBvcnRhbnQKbWlzc2luZyBmdW5jdGlvbmFsaXR5IG9uIHRv
cCBvZiB0aGVtOgoKKiAqKkVycm9yIGluamVjdGlvbjoqKiBMb2NhbFN0YWNr
IGFsbG93cyB0byBpbmplY3QgZXJyb3JzIGZyZXF1ZW50bHkgb2NjdXJyaW5n
IGluIHJlYWwgQ2xvdWQgZW52aXJvbm1lbnRzLAogIGZvciBpbnN0YW5jZSBg
UHJvdmlzaW9uZWRUaHJvdWdocHV0RXhjZWVkZWRFeGNlcHRpb25gIHdoaWNo
IGlzIHRocm93biBieSBLaW5lc2lzIG9yIER5bmFtb0RCIGlmIHRoZSBhbW91
bnQgb2YKICByZWFkL3dyaXRlIHRocm91Z2hwdXQgaXMgZXhjZWVkZWQuCiog
KipJc29sYXRlZCBwcm9jZXNzZXMqKjogQWxsIHNlcnZpY2VzIGluIExvY2Fs
U3RhY2sgcnVuIGluIHNlcGFyYXRlIHByb2Nlc3Nlcy4gVGhlIG92ZXJoZWFk
IG9mIGFkZGl0aW9uYWwKICBwcm9jZXNzZXMgaXMgbmVnbGlnaWJsZSwgYW5k
IHRoZSBlbnRpcmUgc3RhY2sgY2FuIGVhc2lseSBiZSBleGVjdXRlZCBvbiBh
bnkgZGV2ZWxvcGVyIG1hY2hpbmUgYW5kIENJIHNlcnZlci4KICBJbiBtb3Rv
LCBjb21wb25lbnRzIGFyZSBvZnRlbiBoYXJkLXdpcmVkIGluIFJBTSAoZS5n
Liwgd2hlbiBmb3J3YXJkaW5nIGEgbWVzc2FnZSBvbiBhbiBTTlMgdG9waWMg
dG8gYW4gU1FTIHF1ZXVlLAogIHRoZSBxdWV1ZSBlbmRwb2ludCBpcyBsb29r
ZWQgdXAgaW4gYSBsb2NhbCBoYXNoIG1hcCkuIEluIGNvbnRyYXN0LCBMb2Nh
bFN0YWNrIHNlcnZpY2VzIGxpdmUgaW4gaXNvbGF0aW9uCiAgKHNlcGFyYXRl
IHByb2Nlc3NlcyBhdmFpbGFibGUgdmlhIEhUVFApLCB3aGljaCBmb3N0ZXJz
IHRydWUgZGVjb3VwbGluZyBhbmQgbW9yZSBjbG9zZWx5IHJlc2VtYmxlcyB0
aGUgcmVhbAogIGNsb3VkIGVudmlyb25tZW50LgoqICoqUGx1Z2dhYmxlIHNl
cnZpY2VzKio6IEFsbCBzZXJ2aWNlcyBpbiBMb2NhbFN0YWNrIGFyZSBlYXNp
bHkgcGx1Z2dhYmxlIChhbmQgcmVwbGFjZWFibGUpLCBkdWUgdG8gdGhlIGZh
Y3QgdGhhdAogIHdlIGFyZSB1c2luZyBpc29sYXRlZCBwcm9jZXNzZXMgZm9y
IGVhY2ggc2VydmljZS4gVGhpcyBhbGxvd3MgdXMgdG8ga2VlcCB0aGUgZnJh
bWV3b3JrIHVwLXRvLWRhdGUgYW5kIHNlbGVjdAogIGJlc3Qtb2YtYnJlZWQg
bW9ja3MgZm9yIGVhY2ggaW5kaXZpZHVhbCBzZXJ2aWNlLgoKCiMjIFJlcXVp
cmVtZW50cwoKKiBgcHl0aG9uYCAoYm90aCBQeXRob24gMi54IGFuZCAzLngg
c3VwcG9ydGVkKQoqIGBwaXBgIChweXRob24gcGFja2FnZSBtYW5hZ2VyKQoq
IGBEb2NrZXJgCgojIyBJbnN0YWxsaW5nCgpUaGUgZWFzaWVzdCB3YXkgdG8g
aW5zdGFsbCBMb2NhbFN0YWNrIGlzIHZpYSBgcGlwYDoKCmBgYApwaXAgaW5z
dGFsbCBsb2NhbHN0YWNrCmBgYAoKKipOb3RlKio6IFBsZWFzZSBkbyAqKm5v
dCoqIHVzZSBgc3Vkb2Agb3IgdGhlIGByb290YCB1c2VyIC0gTG9jYWxTdGFj
awpzaG91bGQgYmUgaW5zdGFsbGVkIGFuZCBzdGFydGVkIGVudGlyZWx5IHVu
ZGVyIGEgbG9jYWwgbm9uLXJvb3QgdXNlci4gSWYgeW91IGhhdmUgcHJvYmxl
bXMKd2l0aCBwZXJtaXNzaW9ucyBpbiBNYWNPUyBYIFNpZXJyYSwgaW5zdGFs
bCB3aXRoIGBwaXAgaW5zdGFsbCAtLXVzZXIgbG9jYWxzdGFja2AKCiMjIFJ1
bm5pbmcgaW4gRG9ja2VyCgpCeSBkZWZhdWx0LCBMb2NhbFN0YWNrIGdldHMg
c3RhcnRlZCBpbnNpZGUgYSBEb2NrZXIgY29udGFpbmVyIHVzaW5nIHRoaXMg
Y29tbWFuZDoKCmBgYApsb2NhbHN0YWNrIHN0YXJ0CmBgYAoKKE5vdGUgdGhh
dCBvbiBNYWNPUyB5b3UgbWF5IGhhdmUgdG8gcnVuIGBUTVBESVI9L3ByaXZh
dGUkVE1QRElSIGxvY2Fsc3RhY2sgc3RhcnQgLS1kb2NrZXJgIGlmCmAkVE1Q
RElSYCBjb250YWlucyBhIHN5bWJvbGljIGxpbmsgdGhhdCBjYW5ub3QgYmUg
bW91bnRlZCBieSBEb2NrZXIuKQoKIyMjIFVzaW5nIGBkb2NrZXItY29tcG9z
ZWAKCllvdSBjYW4gYWxzbyB1c2UgdGhlIGBkb2NrZXItY29tcG9zZS55bWxg
IGZpbGUgZnJvbSB0aGUgcmVwb3NpdG9yeSBhbmQgdXNlIHRoaXMgY29tbWFu
ZCAoY3VycmVudGx5IHJlcXVpcmVzIGBkb2NrZXItY29tcG9zZWAgdmVyc2lv
biAyLjErKToKCmBgYApkb2NrZXItY29tcG9zZSB1cApgYGAKCihOb3RlIHRo
YXQgb24gTWFjT1MgeW91IG1heSBoYXZlIHRvIHJ1biBgVE1QRElSPS9wcml2
YXRlJFRNUERJUiBkb2NrZXItY29tcG9zZSB1cGAgaWYKYCRUTVBESVJgIGNv
bnRhaW5zIGEgc3ltYm9saWMgbGluayB0aGF0IGNhbm5vdCBiZSBtb3VudGVk
IGJ5IERvY2tlci4pCgpVc2Ugb24gZXhpc3RpbmcgZG9ja2VyLWNvbXBvc2Ug
cHJvamVjdC4gQWRkIGluIGV4aXN0aW5nIHNlcnZpY2VzLiBUaGUgcHJvamVj
dCBjYW4gYmUgZm91bmQgaW4gZG9ja2VyIGh1Yiwgbm8gbmVlZCB0byBkb3du
bG9hZCBvciBjbG9uZSBzb3VyY2U6CgpgYGAKdmVyc2lvbjogJzIuMScKc2Vy
dmljZXM6Ci4uLgogIGxvY2Fsc3RhY2s6CiAgICBpbWFnZTogbG9jYWxzdGFj
ay9sb2NhbHN0YWNrCiAgICBwb3J0czoKICAgICAgLSAiNDU2Ny00NTg0OjQ1
NjctNDU4NCIKICAgICAgLSAiJHtQT1JUX1dFQl9VSS04MDgwfToke1BPUlRf
V0VCX1VJLTgwODB9IgogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gU0VSVklD
RVM9JHtTRVJWSUNFUy0gfQogICAgICAtIERFQlVHPSR7REVCVUctIH0KICAg
ICAgLSBEQVRBX0RJUj0ke0RBVEFfRElSLSB9CiAgICAgIC0gUE9SVF9XRUJf
VUk9JHtQT1JUX1dFQl9VSS0gfQogICAgICAtIExBTUJEQV9FWEVDVVRPUj0k
e0xBTUJEQV9FWEVDVVRPUi0gfQogICAgICAtIEtJTkVTSVNfRVJST1JfUFJP
QkFCSUxJVFk9JHtLSU5FU0lTX0VSUk9SX1BST0JBQklMSVRZLSB9CiAgICAg
IC0gRE9DS0VSX0hPU1Q9dW5peDovLy92YXIvcnVuL2RvY2tlci5zb2NrCiAg
ICB2b2x1bWVzOgogICAgICAtICIke1RNUERJUjotL3RtcC9sb2NhbHN0YWNr
fTovdG1wL2xvY2Fsc3RhY2siCmBgYAoKVG8gZmFjaWxpdGF0ZSBpbnRlcm9w
ZXJhYmlsaXR5LCBjb25maWd1cmF0aW9uIHZhcmlhYmxlcyBjYW4gYmUgcHJl
Zml4ZWQgd2l0aCBgTE9DQUxTVEFDS19gIGluIGRvY2tlci4gRm9yIGluc3Rh
bmNlLCBzZXR0aW5nIGBMT0NBTFNUQUNLX1NFUlZJQ0VTPXMzYCBpcyBlcXVp
dmFsZW50IHRvIGBTRVJWSUNFUz1zM2AuCgojIyBTdGFydGluZyBsb2NhbGx5
IChub24tRG9ja2VyIG1vZGUpCgpBbHRlcm5hdGl2ZWx5LCB0aGUgaW5mcmFz
dHJ1Y3R1cmUgY2FuIGJlIHNwdW4gdXAgb24gdGhlIGxvY2FsIGhvc3QgbWFj
aGluZSAod2l0aG91dCB1c2luZyBEb2NrZXIpIHVzaW5nIHRoZSBmb2xsb3dp
bmcgY29tbWFuZDoKCmBgYApsb2NhbHN0YWNrIHN0YXJ0IC0taG9zdApgYGAK
CihOb3RlIHRoYXQgdGhpcyB3aWxsIHJlcXVpcmUgW2FkZGl0aW9uYWwgZGVw
ZW5kZW5jaWVzXSgjRGV2ZWxvcGluZyksIGFuZCBjdXJyZW50bHkgaXMgbm90
IHN1cHBvcnRlZCBvbiBzb21lIG9wZXJhdGluZyBzeXN0ZW1zLCBpbmNsdWRp
bmcgV2luZG93cy4pCgpMb2NhbFN0YWNrIHdpbGwgYXR0ZW1wdCB0byBhdXRv
bWF0aWNhbGx5IGZldGNoIHRoZSBtaXNzaW5nIGRlcGVuZGVuY2llcyB3aGVu
IHlvdSBmaXJzdCBzdGFydCBpdCB1cCBpbiAiaG9zdCIgbW9kZTsgYWx0ZXJu
YXRpdmVseSwgeW91IGNhbiB1c2UgdGhlIGBmdWxsYCBwcm9maWxlIHRvIGlu
c3RhbGwgYWxsIGRlcGVuZGVuY2llcyBhdCBgcGlwYCBpbnN0YWxsYXRpb24g
dGltZToKCmBgYApwaXAgaW5zdGFsbCAibG9jYWxzdGFja1tmdWxsXSIKYGBg
CgojIyBDb25maWd1cmF0aW9ucwoKWW91IGNhbiBwYXNzIHRoZSBmb2xsb3dp
bmcgZW52aXJvbm1lbnQgdmFyaWFibGVzIHRvIExvY2FsU3RhY2s6CgoqIGBT
RVJWSUNFU2A6IENvbW1hLXNlcGFyYXRlZCBsaXN0IG9mIHNlcnZpY2UgbmFt
ZXMgYW5kIChvcHRpb25hbCkgcG9ydHMgdGhleSBzaG91bGQgcnVuIG9uLgog
IElmIG5vIHBvcnQgaXMgc3BlY2lmaWVkLCBhIGRlZmF1bHQgcG9ydCBpcyB1
c2VkLiBTZXJ2aWNlIG5hbWVzIGJhc2ljYWxseSBjb3JyZXNwb25kIHRvIHRo
ZQogIFtzZXJ2aWNlIG5hbWVzIG9mIHRoZSBBV1MgQ0xJXShodHRwOi8vZG9j
cy5hd3MuYW1hem9uLmNvbS9jbGkvbGF0ZXN0L3JlZmVyZW5jZS8jYXZhaWxh
YmxlLXNlcnZpY2VzKQogIChga2luZXNpc2AsIGBsYW1iZGFgLCBgc3FzYCwg
ZXRjKSwgYWx0aG91Z2ggTG9jYWxTdGFjayBvbmx5IHN1cHBvcnRzIGEgc3Vi
c2V0IG9mIHRoZW0uCiAgRXhhbXBsZSB2YWx1ZTogYGtpbmVzaXMsbGFtYmRh
OjQ1Njksc3FzOjQ1NzBgIHRvIHN0YXJ0IEtpbmVzaXMgb24gdGhlIGRlZmF1
bHQgcG9ydCwKICBMYW1iZGEgb24gcG9ydCA0NTY5LCBhbmQgU1FTIG9uIHBv
cnQgNDU3MC4gSW4gYWRkaXRpb24sIHRoZSBmb2xsb3dpbmcgc2hvcnRoYW5k
IHZhbHVlcyBjYW4gYmUKICBzcGVjaWZpZWQgdG8gcnVuIGEgcHJlZGVmaW5l
ZCBlbnNlbWJsZSBvZiBzZXJ2aWNlczoKICAtIGBzZXJ2ZXJsZXNzYDogcnVu
IHNlcnZpY2VzIG9mdGVuIHVzZWQgZm9yIFNlcnZlcmxlc3MgYXBwcyAoYGlh
bWAsIGBsYW1iZGFgLCBgZHluYW1vZGJgLCBgYXBpZ2F0ZXdheWAsIGBzM2As
IGBzbnNgKQoqIGBERUZBVUxUX1JFR0lPTmA6IEFXUyByZWdpb24gdG8gdXNl
IHdoZW4gdGFsa2luZyB0byB0aGUgQVBJIChkZWZhdWx0cyB0byBgdXMtZWFz
dC0xYCkuCiogYEhPU1ROQU1FYDogTmFtZSBvZiB0aGUgaG9zdCB0byBleHBv
c2UgdGhlIHNlcnZpY2VzIGludGVybmFsbHkgKGRlZmF1bHRzIHRvIGBsb2Nh
bGhvc3RgKS4KICBVc2UgdGhpcyB0byBjdXN0b21pemUgdGhlIGZyYW1ld29y
ay1pbnRlcm5hbCBjb21tdW5pY2F0aW9uLCBlLmcuLCBpZiBzZXJ2aWNlcyBh
cmUKICBzdGFydGVkIGluIGRpZmZlcmVudCBjb250YWluZXJzIHVzaW5nIGRv
Y2tlci1jb21wb3NlLgoqIGBIT1NUTkFNRV9FWFRFUk5BTGA6IE5hbWUgb2Yg
dGhlIGhvc3QgdG8gZXhwb3NlIHRoZSBzZXJ2aWNlcyBleHRlcm5hbGx5IChk
ZWZhdWx0cyB0byBgbG9jYWxob3N0YCkuCiAgVGhpcyBob3N0IGlzIHVzZWQs
IGUuZy4sIHdoZW4gcmV0dXJuaW5nIHF1ZXVlIFVSTHMgZnJvbSB0aGUgU1FT
IHNlcnZpY2UgdG8gdGhlIGNsaWVudC4KKiBgPFNFUlZJQ0U+X1BPUlRgOiBQ
b3J0IG51bWJlciB0byBiaW5kIGEgc3BlY2lmaWMgc2VydmljZSB0byAoZGVm
YXVsdHMgdG8gc2VydmljZSBwb3J0cyBhYm92ZSkuCiogYDxTRVJWSUNFPl9Q
T1JUX0VYVEVSTkFMYDogUG9ydCBudW1iZXIgdG8gZXhwb3NlIGEgc3BlY2lm
aWMgc2VydmljZSBleHRlcm5hbGx5IChkZWZhdWx0cyB0byBzZXJ2aWNlIHBv
cnRzIGFib3ZlKS4gYFNRU19QT1JUX0VYVEVSTkFMYCwgZm9yIGV4YW1wbGUs
IGlzIHVzZWQgd2hlbiByZXR1cm5pbmcgcXVldWUgVVJMcyBmcm9tIHRoZSBT
UVMgc2VydmljZSB0byB0aGUgY2xpZW50LgoqIGBVU0VfU1NMYDogV2hldGhl
ciB0byB1c2UgYGh0dHBzOi8vLi4uYCBVUkxzIHdpdGggU1NMIGVuY3J5cHRp
b24gKGRlZmF1bHRzIHRvIGBmYWxzZWApLgoqIGBLSU5FU0lTX0VSUk9SX1BS
T0JBQklMSVRZYDogRGVjaW1hbCB2YWx1ZSBiZXR3ZWVuIDAuMCAoZGVmYXVs
dCkgYW5kIDEuMCB0byByYW5kb21seQogIGluamVjdCBgUHJvdmlzaW9uZWRU
aHJvdWdocHV0RXhjZWVkZWRFeGNlcHRpb25gIGVycm9ycyBpbnRvIEtpbmVz
aXMgQVBJIHJlc3BvbnNlcy4KKiBgS0lORVNJU19TSEFSRF9MSU1JVGA6IElu
dGVnZXIgdmFsdWUgKGRlZmF1bHRzIHRvIGAxMDBgKSBvciBgSW5maW5pdHlg
ICh0byBkaXNhYmxlKSwgaW4gd2hpY2ggdG8ga2luZXNhbGl0ZSB3aWxsIHN0
YXJ0IHRocm93aW5nIGV4Y2VwdGlvbnMgdG8gbWltaWNrIHRoZSBbZGVmYXVs
dCBzaGFyZCBsaW1pdF0oaHR0cHM6Ly9kb2NzLmF3cy5hbWF6b24uY29tL3N0
cmVhbXMvbGF0ZXN0L2Rldi9zZXJ2aWNlLXNpemVzLWFuZC1saW1pdHMuaHRt
bCkuCiogYEtJTkVTSVNfTEFURU5DWWA6IEludGVnZXIgdmFsdWUgKGRlZmF1
bHRzIHRvIGA1MDBgKSBvciBgMGAgKHRvIGRpc2FibGUpLCBpbiB3aGljaCB0
byBraW5lc2FsaXRlIHdpbGwgZGVsYXkgcmV0dXJuaW5nIGEgcmVzcG9uc2Ug
aW4gb3JkZXIgdG8gbWltaWNrIGxhdGVuY3kgZnJvbSBhIGxpdmUgQVdTIGNh
bGwuCiogYERZTkFNT0RCX0VSUk9SX1BST0JBQklMSVRZYDogRGVjaW1hbCB2
YWx1ZSBiZXR3ZWVuIDAuMCAoZGVmYXVsdCkgYW5kIDEuMCB0byByYW5kb21s
eQogIGluamVjdCBgUHJvdmlzaW9uZWRUaHJvdWdocHV0RXhjZWVkZWRFeGNl
cHRpb25gIGVycm9ycyBpbnRvIER5bmFtb0RCIEFQSSByZXNwb25zZXMuCiog
YExBTUJEQV9FWEVDVVRPUmA6IE1ldGhvZCB0byB1c2UgZm9yIGV4ZWN1dGlu
ZyBMYW1iZGEgZnVuY3Rpb25zLiBQb3NzaWJsZSB2YWx1ZXMgYXJlOgogICAg
LSBgbG9jYWxgOiBydW4gTGFtYmRhIGZ1bmN0aW9ucyBpbiBhIHRlbXBvcmFy
eSBkaXJlY3Rvcnkgb24gdGhlIGxvY2FsIG1hY2hpbmUKICAgIC0gYGRvY2tl
cmA6IHJ1biBlYWNoIGZ1bmN0aW9uIGludm9jYXRpb24gaW4gYSBzZXBhcmF0
ZSBEb2NrZXIgY29udGFpbmVyCiAgICAtIGBkb2NrZXItcmV1c2VgOiBjcmVh
dGUgb25lIERvY2tlciBjb250YWluZXIgcGVyIGZ1bmN0aW9uIGFuZCByZXVz
ZSBpdCBhY3Jvc3MgaW52b2NhdGlvbnMKCiAgRm9yIGBkb2NrZXJgIGFuZCBg
ZG9ja2VyLXJldXNlYCwgaWYgTG9jYWxTdGFjayBpdHNlbGYgaXMgc3RhcnRl
ZCBpbnNpZGUgRG9ja2VyLCB0aGVuCiAgdGhlIGBkb2NrZXJgIGNvbW1hbmQg
bmVlZHMgdG8gYmUgYXZhaWxhYmxlIGluc2lkZSB0aGUgY29udGFpbmVyICh1
c3VhbGx5IHJlcXVpcmVzIHRvIHJ1biB0aGUKICBjb250YWluZXIgaW4gcHJp
dmlsZWdlZCBtb2RlKS4gRGVmYXVsdCBpcyBgZG9ja2VyYCwgZmFsbGJhY2sg
dG8gYGxvY2FsYCBpZiBEb2NrZXIgaXMgbm90IGF2YWlsYWJsZS4KKiBgTEFN
QkRBX1JFTU9URV9ET0NLRVJgIGRldGVybWluZXMgd2hldGhlciBMYW1iZGEg
Y29kZSBpcyBjb3BpZWQgb3IgbW91bnRlZCBpbnRvIGNvbnRhaW5lcnMuCiAg
UG9zc2libGUgdmFsdWVzIGFyZToKICAgIC0gYHRydWVgIChkZWZhdWx0KTog
eW91ciBMYW1iZGEgZnVuY3Rpb24gZGVmaW5pdGlvbnMgd2lsbCBiZSBwYXNz
ZWQgdG8gdGhlIGNvbnRhaW5lciBieQogICAgICBjb3B5aW5nIHRoZSB6aXAg
ZmlsZSAocG90ZW50aWFsbHkgc2xvd2VyKS4gSXQgYWxsb3dzIGZvciByZW1v
dGUgZXhlY3V0aW9uLCB3aGVyZSB0aGUgaG9zdAogICAgICBhbmQgdGhlIGNs
aWVudCBhcmUgbm90IG9uIHRoZSBzYW1lIG1hY2hpbmUuCiAgICAtIGBmYWxz
ZWA6IHlvdXIgTGFtYmRhIGZ1bmN0aW9uIGRlZmluaXRpb25zIHdpbGwgYmUg
cGFzc2VkIHRvIHRoZSBjb250YWluZXIgYnkgbW91bnRpbmcgYQogICAgICB2
b2x1bWUgKHBvdGVudGlhbGx5IGZhc3RlcikuIFRoaXMgcmVxdWlyZXMgdG8g
aGF2ZSB0aGUgRG9ja2VyIGNsaWVudCBhbmQgdGhlIERvY2tlcgogICAgICBo
b3N0IG9uIHRoZSBzYW1lIG1hY2hpbmUuCiogYExBTUJEQV9ET0NLRVJfTkVU
V09SS2AgU3BlY2lmaWVzIHRoZSBkb2NrZXIgbmV0d29yayBmb3IgdGhlIGNv
bnRhaW5lciBydW5uaW5nIHlvdXIgbGFtYmRhIGZ1bmN0aW9uLgoqIGBMQU1C
REFfQ09OVEFJTkVSX1JFR0lTVFJZYCBVc2UgYW4gYWx0ZXJuYXRpdmUgZG9j
a2VyIHJlZ2lzdHJ5IHRvIHB1bGwgbGFtYmRhIGV4ZWN1dGlvbiBjb250YWlu
ZXJzLiBEZWZhdWx0IGlzIGBsYW1iY2kvbGFtYmRhYC4KKiBgREFUQV9ESVJg
OiBMb2NhbCBkaXJlY3RvcnkgZm9yIHNhdmluZyBwZXJzaXN0ZW50IGRhdGEg
KGN1cnJlbnRseSBvbmx5IHN1cHBvcnRlZCBmb3IgdGhlc2Ugc2VydmljZXM6
CiAgS2luZXNpcywgRHluYW1vREIsIEVsYXN0aWNzZWFyY2gsIFMzKS4gU2V0
IGl0IHRvIGAvdG1wL2xvY2Fsc3RhY2svZGF0YWAgdG8gZW5hYmxlIHBlcnNp
c3RlbmNlCiAgKGAvdG1wL2xvY2Fsc3RhY2tgIGlzIG1vdW50ZWQgaW50byB0
aGUgRG9ja2VyIGNvbnRhaW5lciksIGxlYXZlIGJsYW5rIHRvIGRpc2FibGUK
ICBwZXJzaXN0ZW5jZSAoZGVmYXVsdCkuCiogYFBPUlRfV0VCX1VJYDogUG9y
dCBmb3IgdGhlIFdlYiB1c2VyIGludGVyZmFjZSAoZGFzaGJvYXJkKS4gRGVm
YXVsdCBpcyBgODA4MGAuCiogYDxTRVJWSUNFPl9CQUNLRU5EYDogQ3VzdG9t
IGVuZHBvaW50IFVSTCB0byB1c2UgZm9yIGEgc3BlY2lmaWMgc2VydmljZSwg
d2hlcmUgYDxTRVJWSUNFPmAgaXMgdGhlIHVwcGVyY2FzZQogIHNlcnZpY2Ug
bmFtZSAoY3VycmVudGx5IHdvcmtzIGZvcjogYEFQSUdBVEVXQVlgLCBgQ0xP
VURGT1JNQVRJT05gLCBgRFlOQU1PREJgLCBgRUxBU1RJQ1NFQVJDSGAsCiAg
YEtJTkVTSVNgLCBgUzNgLCBgU05TYCwgYFNRU2ApLiBUaGlzIGFsbG93cyB0
byBlYXNpbHkgaW50ZWdyYXRlIHRoaXJkLXBhcnR5IHNlcnZpY2VzIGludG8g
TG9jYWxTdGFjay4KKiBgRk9SQ0VfTk9OSU5URVJBQ1RJVkVgOiB3aGVuIHJ1
bm5pbmcgd2l0aCBEb2NrZXIsIGRpc2FibGVzIHRoZSBgLS1pbnRlcmFjdGl2
ZWAgYW5kIGAtLXR0eWAgZmxhZ3MuIFVzZWZ1bCB3aGVuIHJ1bm5pbmcgaGVh
ZGxlc3MuCiogYERPQ0tFUl9GTEFHU2A6IEFsbG93cyB0byBwYXNzIGN1c3Rv
bSBmbGFncyAoZS5nLiwgdm9sdW1lIG1vdW50cykgdG8gImRvY2tlciBydW4i
IHdoZW4gcnVubmluZyBMb2NhbFN0YWNrIGluIERvY2tlci4KKiBgRE9DS0VS
X0NNRGA6IFNoZWxsIGNvbW1hbmQgdXNlZCB0byBydW4gRG9ja2VyIGNvbnRh
aW5lcnMsIGUuZy4sIHNldCB0byBgInN1ZG8gZG9ja2VyImAgdG8gcnVuIGFz
IHN1ZG8gKGRlZmF1bHQ6IGBkb2NrZXJgKS4KKiBgU1RBUlRfV0VCYDogRmxh
ZyB0byBjb250cm9sIHdoZXRoZXIgdGhlIFdlYiBBUEkgc2hvdWxkIGJlIHN0
YXJ0ZWQgaW4gRG9ja2VyICh2YWx1ZXM6IGAwYC9gMWA7IGRlZmF1bHQ6IGAx
YCkuCiogYExBTUJEQV9GQUxMQkFDS19VUkxgOiBGYWxsYmFjayBVUkwgdG8g
dXNlIHdoZW4gYSBub24tZXhpc3RpbmcgTGFtYmRhIGlzIGludm9rZWQuIEVp
dGhlciByZWNvcmRzIGludm9jYXRpb25zIGluIER5bmFtb0RCICh2YWx1ZSBg
ZHluYW1vZGI6Ly88dGFibGVfbmFtZT5gKSBvciBmb3J3YXJkcyBpbnZvY2F0
aW9ucyBhcyBhIFBPU1QgcmVxdWVzdCAodmFsdWUgYGh0dHAocyk6Ly8uLi5g
KS4KKiBgRVhUUkFfQ09SU19BTExPV0VEX0hFQURFUlNgOiBDb21tYS1zZXBh
cmF0ZWQgbGlzdCBvZiBoZWFkZXIgbmFtZXMgdG8gYmUgYmUgYWRkZWQgdG8g
YEFjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnNgIENPUlMgaGVhZGVyCiog
YEVYVFJBX0NPUlNfRVhQT1NFX0hFQURFUlNgOiBDb21tYS1zZXBhcmF0ZWQg
bGlzdCBvZiBoZWFkZXIgbmFtZXMgdG8gYmUgYmUgYWRkZWQgdG8gYEFjY2Vz
cy1Db250cm9sLUV4cG9zZS1IZWFkZXJzYCBDT1JTIGhlYWRlcgoqIGBMQU1C
REFfSkFWQV9PUFRTYDogQWxsb3cgcGFzc2luZyBjdXN0b20gSlZNIG9wdGlv
bnMgKGUuZy4sIGAtWG14NTEyTWApIHRvIEphdmEgTGFtYmRhcyBleGVjdXRl
ZCBpbiBEb2NrZXIuIFVzZSBgX2RlYnVnX3BvcnRfYCBwbGFjZWhvbGRlciB0
byBjb25maWd1cmUgdGhlIGRlYnVnIHBvcnQgKGUuZy4sIGAtYWdlbnRsaWI6
amR3cD10cmFuc3BvcnQ9ZHRfc29ja2V0LHNlcnZlcj15LHN1c3BlbmQ9eSxh
ZGRyZXNzPV9kZWJ1Z19wb3J0X2ApLgoKCkFkZGl0aW9uYWxseSwgdGhlIGZv
bGxvd2luZyAqcmVhZC1vbmx5KiBlbnZpcm9ubWVudCB2YXJpYWJsZXMgYXJl
IGF2YWlsYWJsZToKCiogYExPQ0FMU1RBQ0tfSE9TVE5BTUVgOiBOYW1lIG9m
IHRoZSBob3N0IHdoZXJlIExvY2FsU3RhY2sgc2VydmljZXMgYXJlIGF2YWls
YWJsZS4KICBUaGlzIGlzIG5lZWRlZCBpbiBvcmRlciB0byBhY2Nlc3MgdGhl
IHNlcnZpY2VzIGZyb20gd2l0aGluIHlvdXIgTGFtYmRhIGZ1bmN0aW9ucwog
IChlLmcuLCB0byBzdG9yZSBhbiBpdGVtIHRvIER5bmFtb0RCIG9yIFMzIGZy
b20gTGFtYmRhKS4KICBUaGUgdmFyaWFibGUgYExPQ0FMU1RBQ0tfSE9TVE5B
TUVgIGlzIGF2YWlsYWJsZSBmb3IgYm90aCwgbG9jYWwgTGFtYmRhIGV4ZWN1
dGlvbgogIChgTEFNQkRBX0VYRUNVVE9SPWxvY2FsYCkgYW5kIGV4ZWN1dGlv
biBpbnNpZGUgc2VwYXJhdGUgRG9ja2VyIGNvbnRhaW5lcnMgKGBMQU1CREFf
RVhFQ1VUT1I9ZG9ja2VyYCkuCgojIyMgRHluYW1pY2FsbHkgdXBkYXRpbmcg
Y29uZmlndXJhdGlvbiBhdCBydW50aW1lCgpFYWNoIG9mIHRoZSBzZXJ2aWNl
IEFQSXMgbGlzdGVkIFthYm92ZV0oaHR0cHM6Ly9naXRodWIuY29tL2xvY2Fs
c3RhY2svbG9jYWxzdGFjayNvdmVydmlldykgZGVmaW5lcwphIGJhY2tkb29y
IEFQSSB1bmRlciB0aGUgcGF0aCBgLz9fY29uZmlnX2Agd2hpY2ggYWxsb3dz
IHRvIGR5bmFtaWNhbGx5IHVwZGF0ZSBjb25maWd1cmF0aW9uIHZhcmlhYmxl
cwpkZWZpbmVkIGluIFtgY29uZmlnLnB5YF0oaHR0cHM6Ly9naXRodWIuY29t
L2xvY2Fsc3RhY2svbG9jYWxzdGFjay9ibG9iL21hc3Rlci9sb2NhbHN0YWNr
L2NvbmZpZy5weSkuCgpGb3IgZXhhbXBsZSwgdG8gZHluYW1pY2FsbHkgc2V0
IGBLSU5FU0lTX0VSUk9SX1BST0JBQklMSVRZPTFgIGF0IHJ1bnRpbWUsIHVz
ZSB0aGUgZm9sbG93aW5nIGNvbW1hbmQ6CmBgYApjdXJsIC12IC1kICd7InZh
cmlhYmxlIjoiS0lORVNJU19FUlJPUl9QUk9CQUJJTElUWSIsInZhbHVlIjox
fScgJ2h0dHA6Ly9sb2NhbGhvc3Q6NDU2OC8/X2NvbmZpZ18nCmBgYAoKIyMj
IEluaXRpYWxpemluZyBhIGZyZXNoIGluc3RhbmNlCgpXaGVuIGEgY29udGFp
bmVyIGlzIHN0YXJ0ZWQgZm9yIHRoZSBmaXJzdCB0aW1lLCBpdCB3aWxsIGV4
ZWN1dGUgZmlsZXMgd2l0aCBleHRlbnNpb25zIC5zaCB0aGF0IGFyZSBmb3Vu
ZCBpbiBgL2RvY2tlci1lbnRyeXBvaW50LWluaXRhd3MuZGAuIEZpbGVzIHdp
bGwgYmUgZXhlY3V0ZWQgaW4gYWxwaGFiZXRpY2FsIG9yZGVyLiBZb3UgY2Fu
IGVhc2lseSBjcmVhdGUgYXdzIHJlc291cmNlcyBvbiBsb2NhbHN0YWNrIHVz
aW5nIGBhd3Nsb2NhbGAgKG9yIGBhd3NgKSBjbGkgdG9vbCBpbiB0aGUgaW5p
dGlhbGl6YXRpb24gc2NyaXB0cy4KCiMjIEEgbm90ZSBhYm91dCB1c2luZyBj
dXN0b20gU1NMIGNlcnRpZmljYXRlcyAoZm9yIGBVU0VfU1NMPTFgKQoKSWYg
eW91IG5lZWQgdG8gdXNlIHlvdXIgb3duIFNTTCBDZXJ0aWZpY2F0ZSBhbmQg
a2VlcCBpdCBwZXJzaXN0ZW50IGFuZCBub3QgdXNlIHRoZSByYW5kb20gYXV0
b21hdGljIGdlbmVyYXRlZCBDZXJ0aWZpY2F0ZSwgeW91IGNhbiBwbGFjZSBp
bnRvIHRoZSBsb2NhbHN0YWNrIHRlbXBvcmFyeSBkaXJlY3RvcnkgOgoKYGBg
Ci90bXAvbG9jYWxzdGFjay8KYGBgCgp0aGUgdGhyZWUgbmFtZWQgZmlsZXMg
YmVsb3cgOgoKYGBgYmFzaApzZXJ2ZXIudGVzdC5wZW0Kc2VydmVyLnRlc3Qu
cGVtLmNydApzZXJ2ZXIudGVzdC5wZW0ua2V5CmBgYAoKLSB0aGUgZmlsZSBg
c2VydmVyLnRlc3QucGVtYCBtdXN0IGNvbnRhaW5zIHlvdXIga2V5IGZpbGUg
Y29udGVudCwgeW91ciBjZXJ0aWZpY2F0ZSBhbmQgY2hhaW4gY2VydGlmaWNh
dGUgZmlsZXMgY29udGVudHMgKGRvIGEgY2F0IGluIHRoaXMgb3JkZXIpCiAt
IHRoZSBmaWxlIGBzZXJ2ZXIudGVzdC5wZW0uY3J0YCBtdXN0IGNvbnRhaW5z
IHlvdXIgY2VydGlmaWNhdGUgYW5kIGNoYWlucyBmaWxlcyBjb250ZW50cyAo
ZG8gYSAnY2F0JyBpbiB0aGlzIG9yZGVyKQotIHRoZSBmaWxlIHNlcnZlci50
ZXN0LnBlbS5rZXkgbXVzdCBjb250YWlucyB5b3VyIGtleSBmaWxlIGNvbnRl
bnQKKioqCiMjIyBVc2luZyBVU0VfU1NMIGFuZCBvd24gcGVyc2lzdGVudCBj
ZXJ0aWZpY2F0ZSB3aXRoIGRvY2tlci1jb21wb3NlCgpUeXBpY2FsbHkgd2l0
aCBkb2NrZXItY29tcG9zZSB5b3UgY2FuIGFkZCBpbnRvIGRvY2tlci1jb21w
b3NlLnltbCB0aGlzIHZvbHVtZSB0byB0aGUgbG9jYWxzdGFjayBzZXJ2aWNl
cyA6CgpgYGAKdm9sdW1lczoKICAgICAgLSAiJHtQV0R9L2xzX3RtcDovdG1w
L2xvY2Fsc3RhY2siCiAgICAgIC0gIi92YXIvcnVuL2RvY2tlci5zb2NrOi92
YXIvcnVuL2RvY2tlci5zb2NrIgpgYGAKCmxvY2FsIGRpcmVjdG9yeSAqKmxz
X3RtcCoqIG11c3QgY29udGFpbnMgdGhlIHRocmVlIGZpbGVzIChzZXJ2ZXIu
dGVzdC5wZW0sIHNlcnZlci50ZXN0LnBlbS5jcnQsIHNlcnZlci50ZXN0LnBl
bS5rZXkpCgoqKioKCiMjIEFjY2Vzc2luZyB0aGUgaW5mcmFzdHJ1Y3R1cmUg
dmlhIENMSSBvciBjb2RlCgpZb3UgY2FuIHBvaW50IHlvdXIgYGF3c2AgQ0xJ
IHRvIHVzZSB0aGUgbG9jYWwgaW5mcmFzdHJ1Y3R1cmUsIGZvciBleGFtcGxl
OgoKYGBgCmF3cyAtLWVuZHBvaW50LXVybD1odHRwOi8vbG9jYWxob3N0OjQ1
Njgga2luZXNpcyBsaXN0LXN0cmVhbXMKewogICAgIlN0cmVhbU5hbWVzIjog
W10KfQpgYGAKCioqTkVXKio6IENoZWNrIG91dCBbYXdzbG9jYWxdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9sb2NhbHN0YWNrL2F3c2NsaS1sb2NhbCksIGEgdGhp
biBDTEkgd3JhcHBlcgp0aGF0IHJ1bnMgY29tbWFuZHMgZGlyZWN0bHkgYWdh
aW5zdCBMb2NhbFN0YWNrIChubyBuZWVkIHRvIHNwZWNpZnkgYC0tZW5kcG9p
bnQtdXJsYCBhbnltb3JlKS4KSW5zdGFsbCBpdCB2aWEgYHBpcCBpbnN0YWxs
IGF3c2NsaS1sb2NhbGAsIGFuZCB0aGVuIHVzZSBpdCBhcyBmb2xsb3dzOgoK
YGBgCmF3c2xvY2FsIGtpbmVzaXMgbGlzdC1zdHJlYW1zCnsKICAgICJTdHJl
YW1OYW1lcyI6IFtdCn0KYGBgCgoqKlVQREFURSoqOiBVc2UgdGhlIGVudmly
b25tZW50IHZhcmlhYmxlIGAkTE9DQUxTVEFDS19IT1NUTkFNRWAgdG8gZGV0
ZXJtaW5lIHRoZSB0YXJnZXQgaG9zdAppbnNpZGUgeW91ciBMYW1iZGEgZnVu
Y3Rpb24uIFNlZSBbQ29uZmlndXJhdGlvbnNdKCNDb25maWd1cmF0aW9ucykg
c2VjdGlvbiBmb3IgbW9yZSBkZXRhaWxzLgoKIyMjIENsaWVudCBMaWJyYXJp
ZXMKCiogUHl0aG9uOiBodHRwczovL2dpdGh1Yi5jb20vbG9jYWxzdGFjay9s
b2NhbHN0YWNrLXB5dGhvbi1jbGllbnQKICAqIGFsdGVybmF0aXZlbHksIHlv
dSBjYW4gYWxzbyB1c2UgYGJvdG8zYCBhbmQgdXNlIHRoZSBgZW5kcG9pbnRf
dXJsYCBwYXJhbWV0ZXIgd2hlbiBjcmVhdGluZyBhIGNvbm5lY3Rpb24KKiAo
bW9yZSBjb21pbmcgc29vbi4uLikKCiMjIEludGVncmF0aW9uIHdpdGggbm9z
ZXRlc3RzCgpJZiB5b3Ugd2FudCB0byB1c2UgTG9jYWxTdGFjayBpbiB5b3Vy
IGludGVncmF0aW9uIHRlc3RzIChlLmcuLCBub3NldGVzdHMpLCBzaW1wbHkg
ZmlyZSB1cCB0aGUKaW5mcmFzdHJ1Y3R1cmUgaW4geW91ciB0ZXN0IHNldHVw
IG1ldGhvZCBhbmQgdGhlbiBjbGVhbiB1cCBldmVyeXRoaW5nIGluIHlvdXIg
dGVhcmRvd24gbWV0aG9kOgoKYGBgCmZyb20gbG9jYWxzdGFjay5zZXJ2aWNl
cyBpbXBvcnQgaW5mcmEKCmRlZiBzZXR1cCgpOgogICAgaW5mcmEuc3RhcnRf
aW5mcmEoYXN5bmNocm9ub3VzPVRydWUpCgpkZWYgdGVhcmRvd24oKToKICAg
IGluZnJhLnN0b3BfaW5mcmEoKQoKZGVmIG15X2FwcF90ZXN0KCk6CiAgICAj
IGhlcmUgZ29lcyB5b3VyIHRlc3QgbG9naWMKYGBgCgpTZWUgdGhlIGV4YW1w
bGUgdGVzdCBmaWxlIGB0ZXN0cy9pbnRlZ3JhdGlvbi90ZXN0X2ludGVncmF0
aW9uLnB5YCBmb3IgbW9yZSBkZXRhaWxzLgoKIyMgSW50ZWdyYXRpb24gd2l0
aCBTZXJ2ZXJsZXNzCgpZb3UgY2FuIHVzZSB0aGUgW2BzZXJ2ZXJsZXNzLWxv
Y2Fsc3RhY2tgXShodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9zZXJ2
ZXJsZXNzLWxvY2Fsc3RhY2spIHBsdWdpbiB0byBlYXNpbHkgcnVuIFtTZXJ2
ZXJsZXNzXShodHRwczovL3NlcnZlcmxlc3MuY29tL2ZyYW1ld29yay8pIGFw
cGxpY2F0aW9ucyBvbiBMb2NhbFN0YWNrLgpGb3IgbW9yZSBpbmZvcm1hdGlv
biwgcGxlYXNlIGNoZWNrIG91dCB0aGUgcGx1Z2luIHJlcG9zaXRvcnkgaGVy
ZToKaHR0cHM6Ly9naXRodWIuY29tL2xvY2Fsc3RhY2svc2VydmVybGVzcy1s
b2NhbHN0YWNrCgojIyBVc2luZyBsb2NhbCBjb2RlIHdpdGggTGFtYmRhCgpJ
biBvcmRlciB0byBtb3VudCBhIGxvY2FsIGZvbGRlciwgZW5zdXJlIHRoYXQg
YExBTUJEQV9SRU1PVEVfRE9DS0VSYCBpcyBzZXQgdG8gYGZhbHNlYCB0aGVu
IHNldCB0aGUgUzMgYnVja2V0IG5hbWUgdG8gYF9fbG9jYWxfX2AgYW5kIHRo
ZSBTMyBrZXkgdG8geW91ciBsb2NhbCBwYXRoOgoKYGBgCiAgICBhd3Nsb2Nh
bCBsYW1iZGEgY3JlYXRlLWZ1bmN0aW9uIC0tZnVuY3Rpb24tbmFtZSBteUxh
bWJkYSBcCiAgICAgIC0tY29kZSBTM0J1Y2tldD0iX19sb2NhbF9fIixTM0tl
eT0iL215L2xvY2FsL2xhbWJkYS9mb2xkZXIiIFwKICAgICAgLS1oYW5kbGVy
IGluZGV4Lm15SGFuZGxlciBcCiAgICAgIC0tcnVudGltZSBub2RlanM4LjEw
IFwKICAgICAgLS1yb2xlIHdoYXRldmVyCmBgYAoKIyMgSW50ZWdyYXRpb24g
d2l0aCBKYXZhL0pVbml0CgpJbiBvcmRlciB0byB1c2UgTG9jYWxTdGFjayB3
aXRoIEphdmEsIHRoZSBwcm9qZWN0IHNoaXBzIHdpdGggYSBzaW1wbGUgSlVu
aXQgcnVubmVyIGFuZCBhIEpVbml0IDUgZXh0ZW5zaW9uLiBUYWtlIGEgbG9v
awphdCB0aGUgZXhhbXBsZSBKVW5pdCB0ZXN0IGluIGBleHQvamF2YWAuIFdo
ZW4geW91IHJ1biB0aGUgdGVzdCwgYWxsIGRlcGVuZGVuY2llcyBhcmUgYXV0
b21hdGljYWxseQpkb3dubG9hZGVkIGFuZCBpbnN0YWxsZWQgdG8gYSB0ZW1w
b3JhcnkgZGlyZWN0b3J5IGluIHlvdXIgc3lzdGVtLgoKYGBgCi4uLgppbXBv
cnQgY2xvdWQubG9jYWxzdGFjay5Mb2NhbHN0YWNrVGVzdFJ1bm5lcjsKaW1w
b3J0IGNsb3VkLmxvY2Fsc3RhY2suVGVzdFV0aWxzOwoKQFJ1bldpdGgoTG9j
YWxzdGFja1Rlc3RSdW5uZXIuY2xhc3MpCnB1YmxpYyBjbGFzcyBNeUNsb3Vk
QXBwVGVzdCB7CgogIEBUZXN0CiAgcHVibGljIHZvaWQgdGVzdExvY2FsUzNB
UEkoKSB7CiAgICBBbWF6b25TMyBzMyA9IFRlc3RVdGlscy5nZXRDbGllbnRT
MygpCiAgICBMaXN0PEJ1Y2tldD4gYnVja2V0cyA9IHMzLmxpc3RCdWNrZXRz
KCk7CiAgICAuLi4KICB9Cgp9CmBgYAoKT3Igd2l0aCBKVW5pdCA1IDoKCmBg
YApARXh0ZW5kV2l0aChMb2NhbHN0YWNrRXh0ZW5zaW9uLmNsYXNzKQpwdWJs
aWMgY2xhc3MgTXlDbG91ZEFwcFRlc3QgewogICAuLi4KfQpgYGAKCkFkZGl0
aW9uYWxseSwgdGhlcmUgaXMgYSB2ZXJzaW9uIG9mIHRoZSBMb2NhbFN0YWNr
IFRlc3QgUnVubmVyIHdoaWNoIHJ1bnMgaW4gYSBkb2NrZXIgY29udGFpbmVy
Cmluc3RlYWQgb2YgaW5zdGFsbGluZyBMb2NhbFN0YWNrIG9uIHRoZSBjdXJy
ZW50IG1hY2hpbmUuIFRoZSBvbmx5IGRlcGVuZGVuY3kgaXMgdG8gaGF2ZSBk
b2NrZXIKaW5zdGFsbGVkIGxvY2FsbHkuIFRoZSB0ZXN0IHJ1bm5lciB3aWxs
IGF1dG9tYXRpY2FsbHkgcHVsbCB0aGUgaW1hZ2UgYW5kIHN0YXJ0IHRoZSBj
b250YWluZXIgZm9yIHRoZQpkdXJhdGlvbiBvZiB0aGUgdGVzdC4gIFRoZSBj
b250YWluZXIgY2FuIGJlIGNvbmZpZ3VyZWQgYnkgdXNpbmcgdGhlIEBMb2Nh
bHN0YWNrRG9ja2VyUHJvcGVydGllcyBhbm5vdGF0aW9uLgoKYGBgCkBSdW5X
aXRoKExvY2Fsc3RhY2tEb2NrZXJUZXN0UnVubmVyLmNsYXNzKQpATG9jYWxz
dGFja0RvY2tlclByb3BlcnRpZXMoc2VydmljZXMgPSB7ICJzcXMiLCAia2lu
ZXNpczo3NzA3NyIgfSkKcHVibGljIGNsYXNzIE15RG9ja2VyQ2xvdWRBcHBU
ZXN0IHsKCiAgQFRlc3QKICBwdWJsaWMgdm9pZCB0ZXN0S2luZXNpcygpIHsK
ICAgIEFtYXpvbktpbmVzaXMga2luZXNpcyA9IERvY2tlclRlc3RVdGlscy5n
ZXRDbGllbnRLaW5lc2lzKCk7CgogICAgTGlzdFN0cmVhbXNSZXN1bHQgc3Ry
ZWFtcyA9IGtpbmVzaXMubGlzdFN0cmVhbXMoKTsKICAgIC4uLgpgYGAKCk9y
IHdpdGggSlVuaXQgNSA6CgpgYGAKQEV4dGVuZFdpdGgoTG9jYWxzdGFja0Rv
Y2tlckV4dGVuc2lvbi5jbGFzcykKQExvY2Fsc3RhY2tEb2NrZXJQcm9wZXJ0
aWVzKHNlcnZpY2VzID0geyAic3FzIiwgImtpbmVzaXM6NzcwNzciIH0pCnB1
YmxpYyBjbGFzcyBNeURvY2tlckNsb3VkQXBwVGVzdCB7CiAgIC4uLgp9CmBg
YAoKVGhlIExvY2FsU3RhY2sgSlVuaXQgdGVzdCBydW5uZXIgaXMgcHVibGlz
aGVkIGFzIGFuIGFydGlmYWN0IGluIE1hdmVuIENlbnRyYWwuClNpbXBseSBh
ZGQgdGhlIGZvbGxvd2luZyBkZXBlbmRlbmN5IHRvIHlvdXIgYHBvbS54bWxg
IGZpbGU6CgpgYGAKPGRlcGVuZGVuY3k+CiAgICA8Z3JvdXBJZD5jbG91ZC5s
b2NhbHN0YWNrPC9ncm91cElkPgogICAgPGFydGlmYWN0SWQ+bG9jYWxzdGFj
ay11dGlsczwvYXJ0aWZhY3RJZD4KICAgIDx2ZXJzaW9uPjAuMS4yMjwvdmVy
c2lvbj4KPC9kZXBlbmRlbmN5PgpgYGAKCllvdSBjYW4gY29uZmlndXJlIHRo
ZSBEb2NrZXIgYmVoYXZpb3VyIHVzaW5nIHRoZSBgQExvY2Fsc3RhY2tEb2Nr
ZXJQcm9wZXJ0aWVzYCBhbm5vdGF0aW9uIHdpdGggdGhlIGZvbGxvd2luZyBw
YXJhbWV0ZXJzOgoKfCBwcm9wZXJ0eSAgICAgICAgICAgICAgICAgICAgfCB1
c2FnZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgdHlwZSAgICAg
ICAgICAgICAgICAgICAgICAgICB8IGRlZmF1bHQgdmFsdWUgfAp8LS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LXwtLS0tLS0tLS0tLS0tLS18CnwgcHVsbE5ld0ltYWdlICAgICAgICAgICAg
ICAgIHwgRGV0ZXJtaW5lcyBpZiBhIG5ldyBpbWFnZSBpcyBwdWxsZWQgZnJv
bSB0aGUgZG9ja2VyIHJlcG8gYmVmb3JlIHRoZSB0ZXN0cyBhcmUgcnVuLiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGJv
b2xlYW4gICAgICAgICAgICAgICAgICAgICAgfCBmYWxzZSAgICAgICAgIHwK
fCByYW5kb21pemVQb3J0cyAgICAgICAgICAgICAgfCBEZXRlcm1pbmVzIGlm
IHRoZSBjb250YWluZXIgc2hvdWxkIGV4cG9zZSB0aGUgZGVmYXVsdCBsb2Nh
bCBzdGFjayBwb3J0cyAoNDU2Ny00NTgzKSBvciBpZiBpdCBzaG91bGQgZXhw
b3NlIHJhbmRvbWl6ZWQgcG9ydHMuIHwgYm9vbGVhbiAgICAgICAgICAgICAg
ICAgICAgICB8IGZhbHNlICAgICAgICAgfAp8IHNlcnZpY2VzICAgICAgICAg
ICAgICAgICAgICB8IERldGVybWluZXMgd2hpY2ggc2VydmljZXMgc2hvdWxk
IGJlIHJ1biB3aGVuIHRoZSBsb2NhbHN0YWNrIHN0YXJ0cy4gICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgfCBTdHJpbmdbXSAgICAgICAgICAgICAgICAgICAgIHwgQWxsICAgICAg
ICAgICB8CnwgaW1hZ2VUYWcgICAgICAgICAgICAgICAgICAgIHwgVXNlIGEg
c3BlY2lmaWMgaW1hZ2UgdGFnIGZvciBkb2NrZXIgY29udGFpbmVyICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IFN0cmluZyAgICAgICAg
ICAgICAgICAgICAgICAgfCBsYXRlc3QgICAgICAgIHwKfCBob3N0TmFtZVJl
c29sdmVyICAgICAgICAgICAgfCBVc2VkIGZvciBkZXRlcm1pbmluZyB0aGUg
aG9zdCBuYW1lIG9mIHRoZSBtYWNoaW5lIHJ1bm5pbmcgdGhlIGRvY2tlciBj
b250YWluZXJzIHNvIHRoYXQgdGhlIGNvbnRhaW5lcnMgY2FuIGJlIGFkZHJl
c3NlZC4gICAgIHwgSUhvc3ROYW1lUmVzb2x2ZXIgICAgICAgICAgICB8IGxv
Y2FsaG9zdCAgICAgfAp8IGVudmlyb25tZW50VmFyaWFibGVQcm92aWRlciB8
IFVzZWQgZm9yIGluamVjdGluZyBlbnZpcm9ubWVudCB2YXJpYWJsZXMgaW50
byB0aGUgY29udGFpbmVyLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBJRW52aXJv
bm1lbnRWYXJpYWJsZVByb3ZpZGVyIHwgRW1wdHkgTWFwICAgICB8CgpfTkIg
OiBXaGVuIHNwZWNpZnlpbmcgdGhlIHBvcnQgaW4gdGhlIGBzZXJ2aWNlc2Ag
cHJvcGVydHksIHlvdSBjYW5ub3QgdXNlIGByYW5kb21pemVQb3J0cyA9IHRy
dWVgXwoKIyMjIFRyb3VibGVzaG9vdGluZwoKKiBJZiB5b3UncmUgdXNpbmcg
QVdTIEphdmEgbGlicmFyaWVzIHdpdGggS2luZXNpcywgcGxlYXNlLCByZWZl
ciB0byBbQ0JPUiBwcm90b2NvbCBpc3N1ZXMgd2l0aCB0aGUgSmF2YSBTREsg
Z3VpZGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9taGFydC9raW5lc2FsaXRlI2Ni
b3ItcHJvdG9jb2wtaXNzdWVzLXdpdGgtdGhlLWphdmEtc2RrKSBob3cgdG8g
ZGlzYWJsZSBDQk9SIHByb3RvY29sIHdoaWNoIGlzIG5vdCBzdXBwb3J0ZWQg
Ynkga2luZXNhbGl0ZS4KCiogQWNjZXNzaW5nIGxvY2FsIFMzIGZyb20gSmF2
YTogVG8gYXZvaWQgZG9tYWluIG5hbWUgcmVzb2x1dGlvbiBpc3N1ZXMsIHlv
dSBuZWVkIHRvIGVuYWJsZSAqKnBhdGggc3R5bGUgYWNjZXNzKiogb24geW91
ciBjbGllbnQ6CmBgYApzMy5zZXRTM0NsaWVudE9wdGlvbnMoUzNDbGllbnRP
cHRpb25zLmJ1aWxkZXIoKS5zZXRQYXRoU3R5bGVBY2Nlc3ModHJ1ZSkuYnVp
bGQoKSk7Ci8vIFRoZXJlIGlzIGFsc28gYW4gb3B0aW9uIHRvIGRvIHRoaXMg
aWYgeW91J3JlIHVzaW5nIGFueSBvZiB0aGUgY2xpZW50IGJ1aWxkZXIgY2xh
c3NlczoKQW1hem9uUzNDbGllbnRCdWlsZGVyIGJ1aWxkZXIgPSBBbWF6b25T
M0NsaWVudEJ1aWxkZXIuc3RhbmRhcmQoKTsKYnVpbGRlci53aXRoUGF0aFN0
eWxlQWNjZXNzRW5hYmxlZCh0cnVlKTsKLi4uCmBgYAoKKiBNb3VudGluZyB0
aGUgdGVtcC4gZGlyZWN0b3J5OiBOb3RlIHRoYXQgb24gTWFjT1MgeW91IG1h
eSBoYXZlIHRvIHJ1biBgVE1QRElSPS9wcml2YXRlJFRNUERJUiBkb2NrZXIt
Y29tcG9zZSB1cGAgaWYKYCRUTVBESVJgIGNvbnRhaW5zIGEgc3ltYm9saWMg
bGluayB0aGF0IGNhbm5vdCBiZSBtb3VudGVkIGJ5IERvY2tlci4KKFNlZSBk
ZXRhaWxzIGhlcmU6IGh0dHBzOi8vYml0YnVja2V0Lm9yZy9hdGxhc3NpYW4v
bG9jYWxzdGFjay9pc3N1ZXMvNDAvZ2V0dGluZy1tb3VudHMtZmFpbGVkLW9u
LWRvY2tlci1jb21wb3NlLXVwKQoKKiBJZiB5b3UgcnVuIGludG8gZmlsZSBw
ZXJtaXNzaW9uIGlzc3VlcyBvbiBgcGlwIGluc3RhbGxgIHVuZGVyIE1hYyBP
UyAoZS5nLiwgYFBlcm1pc3Npb24gZGVuaWVkOiAnL0xpYnJhcnkvUHl0aG9u
LzIuNy9zaXRlLXBhY2thZ2VzL3NpeC5weSdgKSwgdGhlbiB5b3UgbWF5IGhh
dmUgdG8gcmUtaW5zdGFsbCBgcGlwYCB2aWEgSG9tZWJyZXcgKHNlZSBbdGhp
cyBkaXNjdXNzaW9uIHRocmVhZF0oaHR0cHM6Ly9naXRodWIuY29tL2xvY2Fs
c3RhY2svbG9jYWxzdGFjay9pc3N1ZXMvMjYwI2lzc3VlY29tbWVudC0zMzQ0
NTg2MzEpKS4gQWx0ZXJuYXRpdmVseSwgdHJ5IGluc3RhbGxpbmcKd2l0aCB0
aGUgYC0tdXNlcmAgZmxhZzogYHBpcCBpbnN0YWxsIC0tdXNlciBsb2NhbHN0
YWNrYAoKCiogSWYgeW91IGFyZSBkZXBsb3lpbmcgd2l0aGluIE9wZW5TaGlm
dCwgcGxlYXNlIGJlIGF3YXJlOiB0aGUgcG9kIG11c3QgcnVuIGFzIGByb290
YCwgYW5kIHRoZSB1c2VyIG11c3QgaGF2ZSBjYXBhYmlsaXRpZXMgYWRkZWQg
dG8gdGhlIHJ1bm5pbmcgcG9kLCBpbiBvcmRlciB0byBhbGxvdyBFbGFzdGlj
c2VhcmNoIHRvIGJlIHJ1biBhcyB0aGUgbm9uLXJvb3QgYGxvY2Fsc3RhY2tg
IHVzZXIuCgoqIFRoZSBlbnZpcm9ubWVudCB2YXJpYWJsZSBgbm9fcHJveHlg
IGlzIHJld3JpdHRlbiBieSBMb2NhbFN0YWNrLgooSW50ZXJuYWwgcmVxdWVz
dHMgd2lsbCBnbyBzdHJhaWdodCB2aWEgbG9jYWxob3N0LCBieXBhc3Npbmcg
YW55IHByb3h5IGNvbmZpZ3VyYXRpb24pLgoKKiBGb3IgdHJvdWJsZXNob290
aW5nIExvY2FsU3RhY2sgc3RhcnQgaXNzdWVzLCB5b3UgY2FuIGNoZWNrIGRl
YnVnIGxvZ3MgYnkgcnVubmluZyBgREVCVUc9MSBsb2NhbHN0YWNrIHN0YXJ0
YAoKKiBJbiBjYXNlIHlvdSBnZXQgZXJyb3JzIHJlbGF0ZWQgdG8gbm9kZS9u
b2RlanMsIHlvdSBtYXkgZmluZCAodGhpcyBpc3N1ZSBjb21tZW50OiBodHRw
czovL2dpdGh1Yi5jb20vbG9jYWxzdGFjay9sb2NhbHN0YWNrL2lzc3Vlcy8y
MjcjaXNzdWVjb21tZW50LTMxOTkzODUzMCkgaGVscGZ1bC4KCiogSWYgeW91
IGFyZSB1c2luZyBBV1MgSmF2YSBsaWJyYXJpZXMgYW5kIG5lZWQgdG8gZGlz
YWJsZSBTU0wgY2VydGlmaWNhdGUgY2hlY2tpbmcsIGFkZCBgLURjb20uYW1h
em9uYXdzLnNkay5kaXNhYmxlQ2VydENoZWNraW5nYCB0byB0aGUgamF2YSBp
bnZvY2F0aW9uLgoKIyMgRGV2ZWxvcGluZwoKIyMjIFJlcXVpcmVtZW50cyBm
b3IgZGV2ZWxvcGluZyBvciBzdGFydGluZyBsb2NhbGx5CgpUbyBkZXZlbG9w
IG5ldyBmZWF0dXJlcywgb3IgdG8gc3RhcnQgdGhlIHN0YWNrIGxvY2FsbHkg
KG91dHNpZGUgb2YgRG9ja2VyKSwgdGhlIGZvbGxvd2luZyBhZGRpdGlvbmFs
IHRvb2xzIGFyZSByZXF1aXJlZDoKCiogYG1ha2VgCiogYG5wbWAgKG5vZGUu
anMgcGFja2FnZSBtYW5hZ2VyKQoqIGBqYXZhYC9gamF2YWNgIChKYXZhIDgg
cnVudGltZSBlbnZpcm9ubWVudCBhbmQgY29tcGlsZXIpCiogYG12bmAgKE1h
dmVuLCB0aGUgYnVpbGQgc3lzdGVtIGZvciBKYXZhKQoKIyMjIERldmVsb3Bt
ZW50IEVudmlyb25tZW50CgpJZiB5b3UgcHVsbCB0aGUgcmVwbyBpbiBvcmRl
ciB0byBleHRlbmQvbW9kaWZ5IExvY2FsU3RhY2ssIHJ1biB0aGlzIGNvbW1h
bmQgdG8gaW5zdGFsbAphbGwgdGhlIGRlcGVuZGVuY2llczoKCmBgYAptYWtl
IGluc3RhbGwKYGBgCgpUaGlzIHdpbGwgaW5zdGFsbCB0aGUgcmVxdWlyZWQg
cGlwIGRlcGVuZGVuY2llcyBpbiBhIGxvY2FsIFB5dGhvbiB2aXJ0dWFsZW52
IGRpcmVjdG9yeQpgLnZlbnZgICh5b3VyIGdsb2JhbCBweXRob24gcGFja2Fn
ZXMgd2lsbCByZW1haW4gdW50b3VjaGVkKSwgYXMgd2VsbCBhcyBzb21lIG5v
ZGUgbW9kdWxlcwppbiBgLi9sb2NhbHN0YWNrL25vZGVfbW9kdWxlcy9gLiBE
ZXBlbmRpbmcgb24geW91ciBzeXN0ZW0sIHNvbWUgcGlwL25wbSBtb2R1bGVz
IG1heSByZXF1aXJlCmFkZGl0aW9uYWwgbmF0aXZlIGxpYnMgaW5zdGFsbGVk
LgoKVGhlIE1ha2VmaWxlIGNvbnRhaW5zIGEgdGFyZ2V0IHRvIGNvbnZlbmll
bnRseSBydW4gdGhlIGxvY2FsIGluZnJhc3RydWN0dXJlIGZvciBkZXZlbG9w
bWVudDoKCmBgYAptYWtlIGluZnJhCmBgYAoKQ2hlY2sgb3V0IHRoZQpbZGV2
ZWxvcGVyIGd1aWRlXShodHRwczovL2dpdGh1Yi5jb20vbG9jYWxzdGFjay9s
b2NhbHN0YWNrL3RyZWUvbWFzdGVyL2RvYy9kZXZlbG9wZXJfZ3VpZGVzKSB3
aGljaApjb250YWlucyBhIGZldyBpbnN0cnVjdGlvbnMgb24gaG93IHRvIGdl
dCBzdGFydGVkIHdpdGggZGV2ZWxvcGluZyAoYW5kIGRlYnVnZ2luZykgZmVh
dHVyZXMgZm9yCkxvY2FsU3RhY2suCgojIyBUZXN0aW5nCgpUaGUgcHJvamVj
dCBjb250YWlucyBhIHNldCBvZiB1bml0IGFuZCBpbnRlZ3JhdGlvbiB0ZXN0
cyB0aGF0IGNhbiBiZSBraWNrZWQgb2ZmIHZpYSBhIG1ha2UKdGFyZ2V0OgoK
YGBgCm1ha2UgdGVzdApgYGAKCiMjIFdlYiBEYXNoYm9hcmQKClRoZSBwcm9q
ZWN0cyBhbHNvIGNvbWVzIHdpdGggYSBzaW1wbGUgV2ViIGRhc2hib2FyZCB0
aGF0IGFsbG93cyB0byB2aWV3IHRoZSBkZXBsb3llZCBBV1MKY29tcG9uZW50
cyBhbmQgdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHRoZW0uCgpgYGAKbG9j
YWxzdGFjayB3ZWIKYGBgCgojIyBPdGhlciBVSSBDbGllbnRzCgoqIFtDb21t
YW5kZWVyIGRlc2t0b3AgYXBwXShodHRwczovL2dldGNvbW1hbmRlZXIuY29t
KQoqIFtEeW5hbW9EQiBBZG1pbiBXZWIgVUldKGh0dHBzOi8vd3d3Lm5wbWpz
LmNvbS9wYWNrYWdlL2R5bmFtb2RiLWFkbWluKQoKIyMgQ2hhbmdlIExvZwoK
KiB2MC4xMC41OiBWYXJpb3VzIENsb3VkRm9ybWF0aW9uIGZpeGVzOiBkZXBs
b3ltZW50IG9mIEFQSSBHVyBtZXRob2QgaW50ZWdyYXRpb25zLCBwcm9wZXJs
eSBza2lwIHJlc291cmNlIHVwZGF0ZXMsIExhbWJkYSBTUVMgZXZlbnQgc291
cmNlIG1hcHBpbmcsIGF2b2lkIGR1cGxpY2F0ZSByZXNvdXJjZSBjcmVhdGlv
biwgc3VwcG9ydCBmb3IgQXBpR2F0ZXdheTo6R2F0ZXdheVJlc3BvbnNlIGFu
ZCBFdmVudHM6OlJ1bGUsIGxvZyBncm91cHMgZm9yIExhbWJkYXM7IHN1cHBv
cnQgYWRkaW5nIExhbWJkYSBwb2xpY2llczsgY3VzdG9taXplIERvY2tlciBy
ZWdpc3RyeSBmb3IgTGFtYmRhIGltYWdlczsgc3VwcG9ydCBtdWx0aXBsZSBj
b25maWd1cmF0aW9ucyBpbiBTMyBub3RpZmljYXRpb25zOyBmaXggZW5jb2Rp
bmcgb2Ygbm9uLUFTQ0lJIHJlc3VsdHMgZnJvbSBBUEkgR2F0ZXdheTsgYWxs
b3cgZG9ja2VyLXJldXNlIHRvIHVzZSBtb3VudGVkIHZvbHVtZXM7IHN1cHBv
cnQgcHJlc2lnbmVkIFMzIFVSTCB1cGxvYWQgbm90aWZpY2F0aW9uczsgZml4
IGxvb2t1cCBvZiBQeXRob24gTGFtYmRhIGhhbmRsZXIgaW4gc3ViIGRpcmVj
dG9yaWVzOyB1cGdyYWRlIGtpbmVzYWxpdGU7IGZpeCBkdXBsaWNhdGUgQ09S
UyBoZWFkZXJzOyBmaXggbWFwcGluZyBvZiBMYW1iZGEgdmVyc2lvbnMgYW5k
IEFSTnM7IGZpeCBTTlMgeC1hbXotc25zLW1lc3NhZ2UtdHlwZSBoZWFkZXI7
IHNlbmQgU05TIGNvbmZpcm1hdGlvbiBtZXNzYWdlIGZvciBIVFRQKFMpIHN1
YnNjcmlwdGlvbnM7IGZpeCBEeW5hbW9EQiBsb2NhbCBsaWJzIGZvciBEb2Nr
ZXIgQWxwaW5lOyBhZGQgQ0Ygc3VwcG9ydCBmb3IgU05TIHN1YnNjcmlwdGlv
bnM7IGZpeCBSZWNvcmRJZCBmb3IgZmlyZWhvc2UgcHV0LXJlY29yZC1iYXRj
aDsgZml4IFNRUyBtZXNzYWdlcyB3aXRoIG11bHRpLWJ5dGUgY2hhcmFjdGVy
czsgYXZvaWQgY3JlYXRpbmcgbXVsdGlwbGUgU05TIHN1YnNjcmlwdGlvbnM7
IGFkZCAuYmF0IHNjcmlwdCBhbmQgc3VwcG9ydCBydW5uaW5nIHVuZGVyIFdp
bmRvd3M7IGZpeCBTMyBsb2NhdGlvbiBjb25zdHJhaW50IGZvciBDRgoqIHYw
LjEwLjQ6IEFkZCBjaGVja3MgZm9yIG9wZW4gVURQIHBvcnRzOyBmaXggUzMg
Y2h1bmtlZCBlbmNvZGluZyB1cGxvYWRzOyBmaXggTGF0ZXN0U3RyZWFtTGFi
ZWw7IGZpeCBDT1JTIGhlYWRlcnMgZm9yIFNRUy9TTlM7IHNldCBKYXZhIGxh
bWJkYSBkZWJ1ZyBwb3J0IG9ubHkgd2hlbiBuZWVkZWQ7IGV4cG9zZSBkZWZh
dWx0IHJlZ2lvbiBpbiBhIHV0aWwgZnVuY3Rpb247IGZpeCBNYWNPUyB0bXAg
Zm9sZGVyOyBjbGVhciB0bXAgc3VwZXJ2aXNvcmQgbG9ncyBhdCBjb250YWlu
ZXIgc3RhcnR1cDsgZml4IHNpZ25lZCBoZWFkZXIgcmVxdWVzdHMgZm9yIFMz
OyBleHBvc2UgV2ViIFVJIHZpYSBIVFRQUzsgYWRkIFRpbWVzdGFtcCB0byBT
TlMgbWVzc2FnZXM7IGZpeCBhdHRyaWJ1dGVzIGZvciBTUVMgcXVldWVzIGFk
ZHJlc3NlZCB2aWEgVVJMCiogdjAuMTAuMzogQWxsb3cgc3BlY2lmeWluZyBk
YXRhIHR5cGVzIGZvciBDRiBhdHRyaWJ1dGVzOyBhZGQgQVBJIGZvciBzZXJ2
aWNlIHN0YXR1cyBhbmQgc3RhcnRpbmcgc2VydmljZXMgYXQgcnVudGltZTsg
c3VwcG9ydCBOZXh0U2hhcmRJdGVyYXRvciBpbiBEREIgc3RyZWFtczsgYWRk
IG1vY2sgcmVzcG9uc2VzIGZvciBTMyBlbmNyeXB0aW9uIGFuZCByZXBsaWNh
dGlvbjsgZml4IHJlbmRlcmluZyBvZiByZXNvdXJjZXMgaW4gd2ViIFVJOyBj
dXN0b20gU1FTIHF1ZXVlIGF0dHJpYnV0ZXM7IGZpeCBMYW1iZGEgZG9ja2Vy
IGNvbW1hbmQgYW5kIGltcG9ydHM7IGZpeCBTUVMgcXVldWUgcGh5c2ljYWwg
SUQgaW4gQ0Y7IGFsbG93IHByb3h5IGxpc3RlbmVyIHRvIGRlZmluZSBjdXN0
b20gYmFja2VuZCBwZXIgcmVxdWVzdDsgc3VwcG9ydCBMYW1iZGEgZXZlbnQg
Ym9keSBvdmVyIHN0ZGluOyBleGNsdWRlIGBpbmdlc3QtZ2VvaXBgIEVTIG1v
ZHVsZSB0byBvcHRpbWl6ZSBpbWFnZSBzaXplOyBza2lwIGNoZWNraW5nIE1E
NSBvbiBTMyBjb3B5OyBmaXggRHluYW1vREIgdGFibGUgQVJOIGZvciBDRjsg
Zml4IENGIGRlcGxveW1lbnQgb2YgU3RlcEZ1bmN0aW9uIGFjdGl2aXRpZXM7
IGZpeCB1cGxvYWRpbmcgb2YgSmF2YSBMYW1iZGEgYXMgSkFSIGluIFpJUDsg
Zml4IGluc3RhbGxpbmcgbGlicyBmb3IgcGx1Z2luczsgYWRkZWQgYExBTUJE
QV9KQVZBX09QVFNgIGZvciBKYXZhIExhbWJkYSBkZWJ1Z2dpbmc7IGJ1bXAg
TWF2ZW4gZGVwZW5kZW5jeSB2ZXJzaW9uczsgcmVmYWN0b3IgTGFtYmRhIEFQ
STsgZml4IGJvb2xlYW4gc3RyaW5ncyBpbiBDRiB0ZW1wbGF0ZXM7IGFsbG93
IG92ZXJyaWRpbmcgQVdTIGFjY291bnQgaWQgd2l0aCBgVEVTVF9BV1NfQUND
T1VOVF9JRGA7IGZpeCBpbmNvcnJlY3QgcmVnaW9uIGZvciBBUEkgR1cgcmVz
b3VyY2VzIGNyZWF0ZWQgdmlhIENGOyBmaXggcGVybWlzc2lvbnMgZm9yIGNh
Y2hlIGZpbGVzIGluIGAvdG1wYAoqIHYwLjEwLjI6IEZpeCBsb2dnaW5nIGlz
c3VlIHdpdGggYXN5bmMgTGFtYmRhczsgZml4IGtpbmVzaXMgcmVjb3JkcyBw
cm9jZXNzaW5nOyBhZGQgYmFzaWMgc3VwcG9ydCBmb3IgYFJlZmAgaW4gQ2xv
dWRGb3JtYXRpb247IGZpeCBkZGIgc3RyZWFtcyB1dWlkIGdlbmVyYXRpb247
IHVwZ3JhZGUgdHJhdmlzIENJIHNldHVwOyBmaXggRHluYW1vREIgZXJyb3Ig
bWVzc2FnZXM7IGNhY2hlIHNlcnZlciBwcm9jZXNzZXMKKiB2MC4xMC4wOiBM
YXp5IGxvYWRpbmcgb2YgbGlicmFyaWVzOyBmaXggaGFuZGxpbmcgb2YgcmVn
aW9uczsgYWRkIEFQSSBtdWx0aXNlcnZlcjsgaW1wcm92ZSBDUFUgcHJvZmls
aW5nOyBmaXggRVMgeHBhY2sgaW5zdGFsbGF0aW9uOyBhZGQgYmFzaWMgRXZl
bnRCcmlkZ2Ugc3VwcG9ydDsgcmVmYWN0b3IgTGFtYmRhIEFQSSBhbmQgZXhl
Y3V0b3I7IGFkZCBNZXNzYWdlQXR0cmlidXRlcyBvbiBTTlMgcGF5bG9hZHM7
IHRhZ2dpbmcgZm9yIFNOUzsgYWJpbGl0eSB0byBjdXN0b21pemUgZG9ja2Vy
IGNvbW1hbmQKKiB2MC45LjY6IEFkZCBBUEkgR2F0ZXdheSBTUVMgcHJveHk7
IGZpeCBjb21tYW5kIHRvIHB1c2ggRG9ja2VyIGltYWdlOyBmaXggRG9ja2Vy
IGJyaWRnZSBJUCBjb25maWd1cmF0aW9uOyBmaXggU1NMIGlzc3VlIGluIGRh
c2hib2FyZCBpbmZyYTsgdXBkYXRlcyB0byBSRUFETUUKKiB2MC45LjU6IFJl
ZHVjZSBEb2NrZXIgaW1hZ2Ugc2l6ZSBieSBzcXVhc2hpbmc7IGZpeCByZXNw
b25zZSBib2R5IGZvciBwcmVzaWduZWQgVVJMIFMzIFBVVCByZXF1ZXN0czsg
Zml4IENyZWF0ZURhdGUgcmV0dXJuZWQgYnkgSUFNOyBmaXggYWNjb3VudCBJ
RHMgZm9yIENGIGFuZCBTTlM7IGZpeCB0b3BpYyBjaGVja3MgZm9yIFNNUyB1
c2luZyBTTlM7IGltcHJvdmUgZG9jdW1lbnRhdGlvbiBhcm91bmQgYEBMb2Nh
bHN0YWNrRG9ja2VyUHJvcGVydGllc2A7IGFkZCBiYXNpYyBFQzIgc3VwcG9y
dDsgdXBncmFkZSB0byBFbGFzdGljU2VhcmNoIDYuNzsgc2V0IExhc3QtTW9k
aWZpZWQgaGVhZGVyIGluIFMzOyBwcmVzZXJ2ZSBsb2dpYyB3aXRoIHVwcGVy
Y2FzZSBldmVudCBrZXlzIGluIEphdmE7IGFkZCBzdXBwb3J0IGZvciBub2Rl
anMgMTAueCBMYW1iZGFzCiogdjAuOS40OiBGaXggQVJOcyBpbiBDbG91ZEZv
cm1hdGlvbiBkZXBsb3ltZW50czsgd3JpdGUgc3RkZXJyIHRvIGZpbGUgaW4g
c3VwZXJ2aXNvcmQ7IGZpeCBMYW1iZGEgaW52b2NhdGlvbiB0aW1lczsgZml4
IGNhbm9uaWNhbGl6YXRpb24gb2Ygc2VydmljZSBuYW1lcyB3aGVuIHJ1bm5p
bmcgaW4gRG9ja2VyOyBhZGQgc3VwcG9ydCBmb3IgYEBOZXN0ZWRgIGluIEp1
bml0NTsgYWRkIHN1cHBvcnQgZm9yIGJhdGNoL3RyYW5zYWN0aW9uIGluIER5
bmFtb0RCOyBmaXggb3V0cHV0IGJ1ZmZlcmluZyBmb3Igc3VicHJvY2Vzc2Vz
OyBhc3NpZ24gdW5pcXVlIHBvcnRzIHVuZGVyIGRvY2tlci1yZXVzZTsgY2hl
Y2sgaWYgdG9waWMgQVJOIGV4aXN0cyBiZWZvcmUgcHVibGlzaAoqIHYwLjku
MzogRml4IG91dHB1dCBidWZmZXJpbmcgb2YgY2hpbGQgcHJvY2Vzc2VzOyBu
ZXcgcmVsZWFzZSBvZiBKYXZhIGxpYnM7IGFkZCBpbWFnZVRhZyBhdHRyaWJ1
dGUgZm9yIEphdmEgYW5ub3RhdGlvbgoqIHYwLjkuMjogVXBkYXRlIHRvIFB5
dGhvbiAzIGluIERvY2tlcmZpbGU7IHByZXNlcnZlIGF0dHJpYnV0ZXMgd2hl
biBTTlMgU3Vic2NyaWJlOyBmaXggZXZlbnQgc291cmNlIG1hcHBpbmcgaW4g
TGFtYmRhOyBmaXggQ09SUyBFeHBvc2VIZWFkZXJzOyBzZXQgTGFtYmRhIHRp
bWVvdXQgaW4gc2VjczsgYWRkIHRhZ3Mgc3VwcG9ydCBmb3IgTGFtYmRhL0Zp
cmVob3NlOyBhZGQgbWVzc2FnZSBhdHRyaWJ1dGVzIGZvciBTUVMvTGFtYmRh
OyBmaXggc2hhcmQgY291bnQgc3VwcG9ydCBmb3IgS2luZXNpczsgZml4IHBv
cnQgbWFwcGluZ3MgZm9yIENsb3VkRm9ybWF0aW9uCiogdjAuOS4xOiBEZWZp
bmUgZGVwZW5kZW50IGFuZCBjb21wb3NpdGUgc2VydmljZXMgaW4gY29uZmln
OyBmb3J3YXJkIExhbWJkYSBsb2dzIHRvIENsb3VkV2F0Y2ggTG9nczsgYWRk
IFNRUyBldmVudCBkZXNlcmlhbGl6aW5nIGZvciBMYW1iZGE7IGZpeCBBV1Nf
UFJPWFkgZm9yIEpTT04gbGlzdCBwYXlsb2FkOyBhZGQgU1RBUlRfV0VCIGNv
bmZpZyBwYXJhbWV0ZXI7IHJldHVybiBjb3JyZWN0IGxvY2F0aW9uIGZvciBT
MyBtdWx0aXBhcnQgdXBsb2FkczsgYWRkIHN1cHBvcnQgZm9yIExhbWJkYSBj
dXN0b20gcnVudGltZTsgZml4IGFjY291bnQgSUQgZm9yIElBTSByZXNwb25z
ZXM7IGZpeCB1c2luZyBjb3JyZWN0IFNTTCBjZXJ0OyBsaW1pdCBtZW1vcnkg
dXNhZ2UgZm9yIEphdmEgcHJvY2Vzc2VzOyBmaXggdW5pY29kZSBlbmNvZGlu
ZyBmb3IgU05TIG1lc3NhZ2VzOyBhbGxvdyB1c2luZyBgTE9DQUxTVEFDS19g
IHByZWZpeCBpbiBEb2NrZXIgZW52aXJvbm1lbnQgdmFyaWFibGVzOyBlbmFi
bGUgcmVxdWVzdCBmb3J3YXJkaW5nIGZvciBub24tZXhpc3RpbmcgTGFtYmRh
czsgZml4IGxhcmdlIGRvd25sb2FkcyBmb3IgUzM7IGFkZCBBUEkgZW5kcG9p
bnQgZm9yIGR5bmFtaWNhbGx5IHVwZGF0aW5nIGNvbmZpZyB2YXJpYWJsZXM7
IGZpeCBDbG91ZEZvcm1hdGlvbiBzdGFjayB1cGRhdGUKKiB2MC45LjA6IEVu
aGFuY2UgaW50ZWdyYXRpb24gd2l0aCBTZXJ2ZXJsZXNzOyByZWZhY3RvciBD
bG91ZEZvcm1hdGlvbiBpbXBsZW1lbnRhdGlvbjsgYWRkIHN1cHBvcnQgZm9y
IFN0ZXAgRnVuY3Rpb25zLCBJQU0sIFNUUzsgZml4IENsb3VkRm9ybWF0aW9u
IGludGVncmF0aW9uOyBzdXBwb3J0IG1vdW50aW5nIExhbWJkYSBjb2RlIGxv
Y2FsbHk7IGFkZCBgZG9ja2VyLWVudHJ5cG9pbnQtaW5pdGF3cy5kYCBkaXIg
Zm9yIGluaXRpYWxpemluZyByZXNvdXJjZXM7IGFkZCBTM0V2ZW50IFBhcnNl
ciBmb3IgTGFtYmRhOyBmaXggUzMgY2h1bmsgZW5jb2Rpbmc7IGZpeCBTMyBt
dWx0aXBhcnQgdXBsb2FkIG5vdGlmaWNhdGlvbjsgYWRkIGRvdG5ldGNvcmUy
LjEgYW5kIHJ1YnkyLjUgTGFtYmRhIHJ1bnRpbWVzOyBmaXggaXNzdWVzIHdp
dGggSkRLIDk7IGluc3RhbGwgRVMgcGx1Z2lucyBhdmFpbGFibGUgaW4gQVdT
CiogdjAuOC4xMDogQWRkIGtjbHB5IHRvIHBpcCBwYWNrYWdlOyBmaXggYmFk
Z2VzIGluIFJFQURNRQoqIHYwLjguOTogUmVwbGFjZSBtb3RvLWV4dCB3aXRo
IHVwc3RyZWFtIG1vdG87IGZpeCBTTlMgbWVzc2FnZSBhdHRyaWJ1dGVzOyBm
aXggc3dhZ2dlcjsgbWFrZSBleHRlcm5hbCBTUVMgcG9ydCBjb25maWd1cmFi
bGU7IHN1cHBvcnQgZm9yIFNOUyBEZWxldGVUb3BpYzsgUzMgbm90aWZpY2F0
aW9ucyBmb3IgbXVsdGlwYXJ0IHVwbG9hZHM7IHN1cHBvcnQgcmVxdWVzdENv
bnRleHQgaW4gQVdTX1BST1hZIGludGVncmF0aW9uOyB1cGRhdGUgZG9jcyBm
b3IgU1NMIHVzYWdlCiogdjAuOC44OiBTdXBwb3J0IERvY2tlciBuZXR3b3Jr
IGNvbmZpZyBmb3IgTGFtYmRhIGNvbnRhaW5lcnM7IHN1cHBvcnQgcXVlcnlT
dHJpbmdQYXJhbWV0ZXJzIGZvciBMYW1iZGEgQVdTX1BST1hZIGFwaWdhdGV3
YXk7IGFkZCBBV1MgU2VjcmV0c01hbmFnZXIgc2VydmljZTsgYWRkIFNRUy9M
YW1iZGEgaW50ZWdyYXRpb247IGFkZCBzdXBwb3J0IGZvciBGaXJlaG9zZSBL
aW5lc2lzIHNvdXJjZTsgYWRkIEdldEFsaWFzIHRvIExhbWJkYSBBUEk7IGFk
ZCBmdW5jdGlvbiBwcm9wZXJ0aWVzIHRvIExhbWJkYUNvbnRleHQgZm9yIGlu
dm9jYXRpb25zOyBmaXggZXh0cmFjdGlvbiBvZiBKYXZhIExhbWJkYSBhcmNo
aXZlczsgY2hlY2sgcmVnaW9uIGhlYWRlcnMgZm9yIFNOUzsgZml4IExhbWJk
YSBvdXRwdXQgYnVmZmVyaW5nOyBmaXggUzMgZG93bmxvYWQgb2YgZ3ppcDsg
YnVtcCBFbGFzdGljTVEgdG8gMC4xNC41OyBmaXggTGFtYmRhIHJlc3BvbnNl
IGNvZGVzOyBmaXggc3ludGF4IGlzc3VlcyBmb3IgUHl0aG9uIDMuNwoqIHYw
LjguNzogU3VwcG9ydCAuTmV0IENvcmUgMi4wIGFuZCBub2RlanM4LjEwIExh
bWJkYXM7IHJlZmFjdG9yIEphdmEgbGlicyBhbmQgaW50ZWdyYXRlIHdpdGgg
SlVuaXQgNTsgc3VwcG9ydCB0YWdzIGZvciBFUyBkb21haW5zOyBhZGQgQ2xv
dWRGb3JtYXRpb24gc3VwcG9ydCBmb3IgU05TIHRvcGljczsgZml4IGtpbmVz
aXMgZXJyb3IgaW5qZWN0aW9uOyBmaXggb3ZlcnJpZGUgb2YgYEVTX0pBVkFf
T1BUU2A7IGZpeCBTUVMgQ09SUyBwcmVmbGlnaHQgcmVzcG9uc2U7IGZpeCBT
MyBjb250ZW50IG1kNSBjaGVja3MgYW5kIEhvc3QgaGVhZGVyOyBmaXggRVMg
c3RhcnR1cCBpc3N1ZTsgQnVtcCBlbGFzdGljbXEgdG8gMC4xMy4xMDsgYnVt
cCBraW5lc2FsaXRlIHZlcnNpb24KKiB2MC44LjY6IEZpeGVzIGZvciBXaW5k
b3dzIGluc3RhbGxhdGlvbjsgYnVtcCBFUyB0byA2LjIuMDsgc3VwcG9ydCBm
aWx0ZXIgcG9saWN5IGZvciBTTlM7IHVwZ3JhZGUga2luZXNhbGl0ZTsgcmVm
YWN0b3IgSlVuaXQgcnVubmVyOyBzdXBwb3J0IExhbWJkYSBQdXRGdW5jdGlv
bkNvbmN1cnJlbmN5IGFuZCBHZXRFdmVudFNvdXJjZU1hcHBpbmc7IGZpeGVz
IGZvciBUZXJyYWZvcm07IGFkZCBnb2xhbmcgc3VwcG9ydCB0byBMYW1iZGE7
IGZpeCBmaWxlIHBlcm1pc3Npb24gaXNzdWUgaW4gSmF2YSBMYW1iZGEgdGVz
dHM7IGZpeCBTMyBidWNrZXQgbm90aWZpY2F0aW9uIGNvbmZpZwoqIHYwLjgu
NTogRml4IEREQiBzdHJlYW1zIGV2ZW50IHR5cGU7IGltcGxlbWVudCBDRiBG
bjo6R2V0QVpzOyBhc3luYyBsYW1iZGEgZm9yIEREQiBldmVudHM7IGZpeCBT
MyBjb250ZW50LXR5cGU7IGZpeCBDRiBkZXBsb3llciBmb3IgU1FTOyBmaXgg
UzMgRXhwb3NlUG9ydHM7IGZpeCBtZXNzYWdlIHN1YmplY3QgaW4gU05TOyBz
dXBwb3J0IGZvciBGaXJlaG9zZSAtPiBFUzsgcGFzcyBleHRlcm5hbCBlbnYg
dmFycyB0byBjb250YWluZXJzIGZyb20gSmF2YTsgYWRkIG1vY2sgZm9yIGxp
c3QtcXVldWUtdGFnczsgZW5oYW5jZSBkb2NrZXIgdGVzdCBydW5uZXI7IGZp
eCBXaW5kb3dzIGluc3RhbGxhdGlvbiBpc3N1ZXM7IG5ldyB2ZXJzaW9uIG9m
IEphdmEgbGlicwoqIHYwLjguNDogRml4IGBwaXBlbnZgIGRlcGVuZGVuY3kg
aXNzdWU7IERvY2tlciBKVW5pdCB0ZXN0IHJ1bm5lcjsgUE9KTyB0eXBlIGZv
ciBKYXZhIExhbWJkYSBSZXF1ZXN0SGFuZGxlcjsgSmF2YSBMYW1iZGEgRHlu
YW1vREIgZXZlbnQ7IHJldXNlIERvY2tlciBjb250YWluZXJzIGZvciBMYW1i
ZGEgaW52b2NhdGlvbnM7IEFQSSBHYXRld2F5IHdpbGRjYXJkIHBhdGggc2Vn
bWVudHM7IGZpeCBTTlMgUmF3TWVzc2FnZURlbGl2ZXJ5CiogdjAuOC4zOiBG
aXggRERCIHN0cmVhbSBldmVudHMgZm9yIFVQREFURSBvcGVyYXRpb25zOyBm
aXggRERCIHN0cmVhbXMgc2VxdWVuY2UgbnVtYmVyczsgZml4IHRyYW5zZmVy
LWVuY29kaW5nIGZvciBEREI7IGZpeCByZXF1ZXN0cyB3aXRoIG1pc3Npbmcg
Y29udGVudC1sZW5ndGggaGVhZGVyOyBzdXBwb3J0IG5vbi1hc2NpaSBjb250
ZW50IGluIER5bmFtb0RCIGl0ZW1zOyBtYXAgZXh0ZXJuYWwgcG9ydCBmb3Ig
U1FTIHF1ZXVlIFVSTHM7IGRlZmF1bHQgdG8gTEFNQkRBX1JFTU9URV9ET0NL
RVI9dHJ1ZSBpZiBydW5uaW5nIGluIERvY2tlcjsgUzMgbGlmZWN5Y2xlIHN1
cHBvcnQ7IHJlZHVjZSBEb2NrZXIgaW1hZ2Ugc2l6ZQoqIHYwLjguMjogRml4
IFMzIGJ1Y2tldCBub3RpZmljYXRpb24gY29uZmlndXJhdGlvbjsgQ09SUyBo
ZWFkZXJzIGZvciBBUEkgR2F0ZXdheTsgZml4ID4xMjhrIFMzIG11bHRpcGFy
dCB1cGxvYWRzOyByZXR1cm4gdmFsaWQgU2hhcmRJRHMgaW4gRHluYW1vREIg
U3RyZWFtczsgZml4IGhhcmRjb2RlZCAiZGRibG9jYWwiIER5bmFtb0RCIFRh
YmxlQVJOOyBpbXBvcnQgZGVmYXVsdCBzZXJ2aWNlIHBvcnRzIGZyb20gbG9j
YWxzdGFjay1jbGllbnQ7IGZpeCBTMyBidWNrZXQgcG9saWN5IHJlc3BvbnNl
OyBFeGVjdXRlIGxhbWJkYXMgYXN5bmNocm9ub3VzbHkgaWYgdGhlIHNvdXJj
ZSBpcyBhIHRvcGljCiogdjAuOC4xOiBJbXByb3ZlbWVudHMgaW4gTGFtYmRh
IEFQSTogcHVibGlzaC12ZXJzaW9uLCBsaXN0LXZlcnNpb24sIGZ1bmN0aW9u
IGFsaWFzZXM7IHVzZSBzaW5nbGUgbWFwIHdpdGggTGFtYmRhIGZ1bmN0aW9u
IGRldGFpbHM7IHdvcmthcm91bmQgZm9yIFNRUyAuZmlmbyBxdWV1ZXM7IGFk
ZCB0ZXN0IGZvciBTMyB1cGxvYWQ7IGluaXRpYWwgc3VwcG9ydCBmb3IgU1NN
OyBmaXggcmVnZXggdG8gcmVwbGFjZSBTUVMgcXVldWUgVVJMIGhvc3RuYW1l
czsgdXBkYXRlIGxpbnRlciAoc2luZ2xlIHF1b3Rlcyk7IHVzZSBgZG9ja2Vy
LmZvci5tYWMubG9jYWxob3N0YCB0byBjb25uZWN0IHRvIExvY2FsU3RhY2sg
ZnJvbSBEb2NrZXIgb24gTWFjOyBmaXggYjY0IGVuY29kaW5nIGZvciBKYXZh
IExhbWJkYXM7IGZpeCBwYXRoIG9mIG1vdG9fc2VydmVyIGNvbW1hbmQKKiB2
MC44LjA6IEZpeCByZXF1ZXN0IGRhdGEgaW4gYEdlbmVyaWNQcm94eUhhbmRs
ZXJgOyBhZGQgYCRQT1JUX1dFQl9VSWAgYW5kIGAkSE9TVE5BTUVfRVhURVJO
QUxgIGNvbmZpZ3M7IEFQSSBHYXRld2F5IHBhdGggcGFyYW1ldGVyczsgZW5h
YmxlIGZsYWtlOCBsaW50aW5nOyBhZGQgY29uZmlnIGZvciBzZXJ2aWNlIGJh
Y2tlbmQgVVJMczsgdXNlIEVsYXN0aWNNUSBpbnN0ZWFkIG9mIG1vdG8gZm9y
IFNRUzsgZXhwb3NlIGAkTE9DQUxTVEFDS19IT1NUTkFNRWA7IGN1c3RvbSBl
bnZpcm9ubWVudCB2YXJpYWJsZSBzdXBwb3J0IGZvciBMYW1iZGE7IGltcHJv
dmUgZXJyb3IgbG9nZ2luZyBhbmQgaW5zdGFsbGF0aW9uIGZvciBKYXZhL0pV
bml0OyBhZGQgc3VwcG9ydCBmb3IgUzMgUkVTVCBPYmplY3QgUE9TVAoqIHYw
LjcuNTogRml4IGlzc3VlIHdpdGggaW5jb21wbGV0ZSBwYXJhbGxlbCBkb3du
bG9hZHM7IGJ5cGFzcyBodHRwX3Byb3h5IGZvciBpbnRlcm5hbCByZXF1ZXN0
czsgdXNlIG5hdGl2ZSBQeXRob24gY29kZSB0byB1bnppcCBhcmNoaXZlczsg
ZG93bmxvYWQgS0NMIGNsaWVudCBsaWJzIG9ubHkgZm9yIHRlc3RpbmcgYW5k
IG5vdCBvbiBwaXAgaW5zdGFsbAoqIHYwLjcuNDogUmVmYWN0b3IgQ0xJIGFu
ZCBlbmFibGUgcGx1Z2luczsgc3VwcG9ydCB1bmljb2RlIG5hbWVzIGZvciBT
MzsgZml4IFNRUyBuYW1lcyBjb250YWluaW5nIGEgZG90IGNoYXJhY3Rlcjsg
ZXhlY3V0ZSBKYXZhIExhbWJkYSBmdW5jdGlvbnMgaW4gRG9ja2VyIGNvbnRh
aW5lcnM7IGZpeCBEeW5hbW9EQiBlcnJvciBoYW5kbGluZzsgdXBkYXRlIGRv
Y3MKKiB2MC43LjM6IEV4dHJhY3QgcHJveHkgbGlzdGVuZXJzIGludG8gKHN1
Yi0pY2xhc3NlczsgcHV0IGphdmEgbGlicyBpbnRvIGEgc2luZ2xlICJmYXQi
IGphcjsgZml4IGlzc3VlIHdpdGggbm9uLWRhZW1vbml6ZWQgdGhyZWFkczsg
cmVmYWN0b3IgY29kZSB0byBzdGFydCBmbGFzayBzZXJ2aWNlcwoqIHYwLjcu
MjogRml4IERBVEFfRElSIGNvbmZpZyB3aGVuIHJ1bm5pbmcgaW4gRG9ja2Vy
OyBmaXggTWF2ZW4gZGVwZW5kZW5jaWVzOyByZXR1cm4gJ0NvbnN1bWVkQ2Fw
YWNpdHknIGZyb20gRHluYW1vREIgZ2V0LWl0ZW07IHVzZSBRdWV1ZSBBUk4g
aW5zdGVhZCBvZiBVUkwgZm9yIFMzIGJ1Y2tldCBub3RpZmljYXRpb25zCiog
djAuNy4xOiBGaXggUzMgQVBJIHRvIEdFVCBidWNrZXQgbm90aWZpY2F0aW9u
czsgcmVsZWFzZSBKYXZhIGFydGlmYWN0cyB0byBNYXZlbiBDZW50cmFsOyBm
aXggUzMgZmlsZSBhY2Nlc3MgZnJvbSBTcGFyazsgY3JlYXRlIEREQiBzdHJl
YW0gb24gVXBkYXRlVGFibGU7IHJlbW92ZSBBVUkgZGVwZW5kZW5jeSwgb3B0
aW1pemUgc2l6ZSBvZiBEb2NrZXIgaW1hZ2UKKiB2MC43LjA6IFN1cHBvcnQg
Zm9yIEtpbmVzaXMgaW4gQ2xvdWRGb3JtYXRpb247IGV4dGVuZCBhbmQgaW50
ZWdyYXRlIEphdmEgdGVzdHMgaW4gQ0k7IHB1Ymxpc2ggRG9ja2VyIGltYWdl
IHVuZGVyIG5ldyBuYW1lOyB1cGRhdGUgUkVBRE1FcyBhbmQgbGljZW5zZSBh
Z3JlZW1lbnRzCiogdjAuNi4yOiBNYWpvciByZWZhY3RvcmluZyBvZiBpbnN0
YWxsYXRpb24gcHJvY2VzcywgbGF6eSBsb2FkaW5nIG9mIGRlcGVuZGVuY2ll
cwoqIHYwLjYuMTogQWRkIENPUlMgaGVhZGVyczsgcGxhdGZvcm0gY29tcGF0
aWJpbGl0eSBmaXhlcyAocmVtb3ZlIHNoZWxsIGNvbW1hbmRzIGFuZCBzaCBt
b2R1bGUpOyBhZGQgQ2xvdWRGb3JtYXRpb24gdmFsaWRhdGUtdGVtcGxhdGU7
IGZpeCBMYW1iZGEgZXhlY3V0aW9uIGluIERvY2tlcjsgYmFzaWMgZG9tYWlu
IGhhbmRsaW5nIGluIEVTIEFQSTsgQVBJIEdhdGV3YXkgYXV0aG9yaXplcnMK
KiB2MC42LjA6IExvYWQgc2VydmljZXMgYXMgcGx1Z2luczsgZml4IHNlcnZp
Y2UgZGVmYXVsdCBwb3J0czsgZml4IFNRUy0+U05TIGFuZCBNRDUgb2YgbWVz
c2FnZSBhdHRyaWJ1dGVzOyBmaXggSG9zdCBoZWFkZXIgZm9yIFMzCiogdjAu
NS41OiBFbmFibGUgU1NMIGVuY3J5cHRpb24gZm9yIGFsbCBzZXJ2aWNlIGVu
ZHBvaW50cyAoYFVTRV9TU0xgIGNvbmZpZyk7IGNyZWF0ZSBEb2NrZXIgYmFz
ZSBpbWFnZTsgZml4IGlzc3VlIHdpdGggREFUQV9ESVIKKiB2MC41LjQ6IFJl
bW92ZSBoYXJkY29kZWQgL3RtcC8gZm9yIFdpbmRvd3MtY29tcGF0LjsgdXBk
YXRlIENMSSBhbmQgZG9jczsgZml4IFMzL1NOUyBub3RpZmljYXRpb25zOyBk
aXNhYmxlIEVsYXN0aWNzZWFyY2ggY29tcHJlc3Npb24KKiB2MC41LjM6IEFk
ZCBDbG91ZEZvcm1hdGlvbiBzdXBwb3J0IGZvciBzZXJ2ZXJsZXNzIC8gQVBJ
IEdhdGV3YXkgZGVwbG95bWVudHM7IGZpeCBpbnN0YWxsYXRpb24gdmlhIHB5
cGk7IG1pbm9yIGZpeCBmb3IgSmF2YSAocGFzc2luZyBvZiBlbnZpcm9ubWVu
dCB2YXJpYWJsZXMpCiogdjAuNS4wOiBFeHRlbmQgRHluYW1vREIgU3RyZWFt
cyBBUEk7IGZpeCBrZWVwLWFsaXZlIGNvbm5lY3Rpb24gZm9yIFMzOyBmaXgg
ZGVhZGxvY2sgaW4gbmVzdGVkIExhbWJkYSBleGVjdXRpb25zOyBhZGQgaW50
ZWdyYXRpb24gU05TLT5MYW1iZGE7IENsb3VkRm9ybWF0aW9uIHNlcnZlcmxl
c3MgZXhhbXBsZTsgcmVwbGFjZSBkeW5hbGl0ZSB3aXRoIER5bmFtb0RCTG9j
YWw7IHN1cHBvcnQgTGFtYmRhIGV4ZWN1dGlvbiBpbiByZW1vdGUgRG9ja2Vy
IGNvbnRhaW5lcjsgZml4IENsb3VkV2F0Y2ggbWV0cmljcyBmb3IgTGFtYmRh
IGludm9jYXRpb24gZXJyb3JzCiogdjAuNC4zOiBJbml0aWFsIHN1cHBvcnQg
Zm9yIENsb3VkV2F0Y2ggbWV0cmljcyAoZm9yIExhbWJkYSBmdW5jdGlvbnMp
OyBIVFRQIGZvcndhcmRzIGZvciBBUEkgR2F0ZXdheTsgZml4IFMzIG1lc3Nh
Z2UgYm9keSBzaWduYXR1cmVzOyBkb3dubG9hZCBMYW1iZGEgYXJjaGl2ZSBm
cm9tIFMzIGJ1Y2tldDsgZml4L2V4dGVuZCBFUyB0ZXN0cwoqIHYwLjQuMjog
SW5pdGlhbCBzdXBwb3J0IGZvciBKYXZhIExhbWJkYSBmdW5jdGlvbnM7IENs
b3VkRm9ybWF0aW9uIGRlcGxveW1lbnRzOyBBUEkgR2F0ZXdheSB0ZXN0cwoq
IHYwLjQuMTogUHl0aG9uIDMgY29tcGF0aWJpbGl0eTsgZGF0YSBwZXJzaXN0
ZW5jZTsgYWRkIHNlcS4gbnVtYmVycyBpbiBLaW5lc2lzIGV2ZW50czsgbGlt
aXQgRWxhc3RpY3NlYXJjaCBtZW1vcnkKKiB2MC40LjA6IEV4ZWN1dGUgTGFt
YmRhIGZ1bmN0aW9ucyBpbiBEb2NrZXIgY29udGFpbmVyczsgQ09SUyBoZWFk
ZXJzIGZvciBTMwoqIHYwLjMuMTE6IEFkZCBSb3V0ZTUzLCBTRVMsIENsb3Vk
Rm9ybWF0aW9uOyBEeW5hbW9EQiBmYXVsdCBpbmplY3Rpb247IFVJIHR3ZWFr
czsgcmVmYWN0b3IgY29uZmlnCiogdjAuMy4xMDogQWRkIGluaXRpYWwgc3Vw
cG9ydCBmb3IgUzMgYnVja2V0IG5vdGlmaWNhdGlvbnM7IGZpeCBzdWJwcm9j
ZXNzMzIgaW5zdGFsbGF0aW9uCiogdjAuMy45OiBNYWtlIHNlcnZpY2VzL3Bv
cnRzIGNvbmZpZ3VyYWJsZSB2aWEgJFNFUlZJQ0VTOyBhZGQgdGVzdHMgZm9y
IEZpcmVob3NlK1MzCiogdjAuMy44OiBGaXggRWxhc3RpY3NlYXJjaCB2aWEg
bG9jYWwgYmluZCBhbmQgcHJveHk7IHJlZmFjdG9yaW5nOyBpbXByb3ZlIGVy
cm9yIGxvZ2dpbmcKKiB2MC4zLjU6IEZpeCBsYW1iZGEgaGFuZGxlciBuYW1l
OyBmaXggaG9zdCBuYW1lIGZvciBTMyBBUEk7IGluc3RhbGwgd2ViIGxpYnMg
b24gcGlwIGluc3RhbGwKKiB2MC4zLjQ6IEZpeCBmaWxlIHBlcm1pc3Npb25z
IGluIGJ1aWxkOyBmaXggYW5kIGFkZCBVSSB0byBEb2NrZXIgaW1hZ2U7IGFk
ZCBzdHViIG9mIEVTIEFQSQoqIHYwLjMuMzogQWRkIHZlcnNpb24gdGFncyB0
byBEb2NrZXIgaW1hZ2VzCiogdjAuMy4yOiBBZGQgc3VwcG9ydCBmb3IgUmVk
c2hpZnQgQVBJOyBjb2RlIHJlZmFjdG9yaW5nCiogdjAuMy4xOiBBZGQgRG9j
a2VyZmlsZSBhbmQgcHVzaCBpbWFnZSB0byBEb2NrZXIgSHViCiogdjAuMy4w
OiBBZGQgc2ltcGxlIGludGVncmF0aW9uIGZvciBKVW5pdDsgaW1wcm92ZSBw
cm9jZXNzIHNpZ25hbCBoYW5kbGluZwoqIHYwLjIuMTE6IFJlZmFjdG9yZWQg
dGhlIEFXUyBhc3N1bWUgcm9sZSBmdW5jdGlvbgoqIHYwLjIuMTA6IEFkZGVk
IEFXUyBhc3N1bWUgcm9sZSBmdW5jdGlvbmFsaXR5LgoqIHYwLjIuOTogS2lu
ZXNpcyBlcnJvciByZXNwb25zZSBmb3JtYXR0aW5nCiogdjAuMi43OiBUaHJv
dyBLaW5lc2lzIGVycm9ycyByYW5kb21seQoqIHYwLjIuNjogRGVjb3VwbGUg
U05TL1NRUzogaW50ZXJjZXB0IFNOUyBjYWxscyBhbmQgZm9yd2FyZCB0byBz
dWJzY3JpYmVkIFNRUyBxdWV1ZXMKKiB2MC4yLjU6IFJldHVybiBlcnJvciBy
ZXNwb25zZSBmcm9tIEtpbmVzaXMgaWYgZmxhZyBpcyBzZXQKKiB2MC4yLjQ6
IEFsbG93IExhbWJkYXMgdG8gdXNlIF9fZmlsZV9fIChpbXBvcnQgZnJvbSBm
aWxlIGluc3RlYWQgb2YgZXhlYydpbmcpCiogdjAuMi4zOiBJbXByb3ZlIEtp
bmVzaXMvS0NMIGF1dG8tY2hlY2twb2ludGluZyAobGVhc2VzIGluIEREQikK
KiB2MC4yLjA6IFNwZWVkIHVwIGluc3RhbGxhdGlvbiB0aW1lIGJ5IGxhenkg
bG9hZGluZyBsaWJyYXJpZXMKKiB2MC4xLjE5OiBQYXNzIHNoYXJkX2lkIGlu
IHJlY29yZHMgc2VudCBmcm9tIEtDTCBwcm9jZXNzCiogdjAuMS4xNjogTWlu
b3IgcmVzdHJ1Y3R1cmluZyBhbmQgcmVmYWN0b3JpbmcgKGNyZWF0ZSBzZXBh
cmF0ZSBraW5lc2lzX3V0aWwucHkpCiogdjAuMS4xNDogRml4IEFXUyB0b2tl
bnMgd2hlbiBjcmVhdGluZyBFbGFzdGljc2VhcmNoIGNsaWVudAoqIHYwLjEu
MTE6IEFkZCBzdGFydHVwL2luaXRpYWxpemF0aW9uIG5vdGlmaWNhdGlvbiBm
b3IgS0NMIHByb2Nlc3MKKiB2MC4xLjEwOiBCdW1wIHZlcnNpb24gb2YgYW1h
em9uX2tjbHB5IHRvIDEuNC4xCiogdjAuMS45OiBBZGQgaW5pdGlhbCBzdXBw
b3J0IGZvciBTUVMvU05TCiogdjAuMS44OiBGaXggaW5zdGFsbGF0aW9uIG9m
IEpBUnMgaW4gYW1hem9uX2tjbHB5IGlmIGxvY2Fsc3RhY2sgaXMgaW5zdGFs
bGVkIHRyYW5zaXRpdmVseQoqIHYwLjEuNzogQnVtcCB2ZXJzaW9uIG9mIGFt
YXpvbl9rY2xweSB0byAxLjQuMAoqIHYwLjEuNjogQWRkIHRyYXZpcy1jaSBh
bmQgY292ZXJhbGxzIGNvbmZpZ3VyYXRpb24KKiB2MC4xLjU6IFJlZmFjdG9y
IEVsYXN0aWNzZWFyY2ggdXRpbHM7IGZpeCBidWcgaW4gbWV0aG9kIHRvIGRl
bGV0ZSBhbGwgRVMgaW5kZXhlcwoqIHYwLjEuNDogRW5oYW5jZSBsb2dnaW5n
OyBleHRlbmQgamF2YSBLQ0wgY3JlZGVudGlhbHMgcHJvdmlkZXIgKHN1cHBv
cnQgU1RTIGFzc3VtZWQgcm9sZXMpCiogdjAuMS4yOiBBZGQgY29uZmlndXJh
YmxlIEtDTCBsb2cgb3V0cHV0CiogdjAuMS4wOiBJbml0aWFsIHJlbGVhc2UK
CiMjIENvbnRyaWJ1dGluZwoKV2Ugd2VsY29tZSBmZWVkYmFjaywgYnVnIHJl
cG9ydHMsIGFuZCBwdWxsIHJlcXVlc3RzIQoKRm9yIHB1bGwgcmVxdWVzdHMs
IHBsZWFzZSBzdGljayB0byB0aGUgZm9sbG93aW5nIGd1aWRlbGluZXM6Cgoq
IEFkZCB0ZXN0cyBmb3IgYW55IG5ldyBmZWF0dXJlcyBhbmQgYnVnIGZpeGVz
LiBJZGVhbGx5LCBlYWNoIFBSIHNob3VsZCBpbmNyZWFzZSB0aGUgdGVzdCBj
b3ZlcmFnZS4KKiBGb2xsb3cgdGhlIGV4aXN0aW5nIGNvZGUgc3R5bGUgKGUu
Zy4sIGluZGVudHMpLiBBIFBFUDggY29kZSBsaW50aW5nIHRhcmdldCBpcyBp
bmNsdWRlZCBpbiB0aGUgTWFrZWZpbGUuCiogUHV0IGEgcmVhc29uYWJsZSBh
bW91bnQgb2YgY29tbWVudHMgaW50byB0aGUgY29kZS4KKiBTZXBhcmF0ZSB1
bnJlbGF0ZWQgY2hhbmdlcyBpbnRvIG11bHRpcGxlIHB1bGwgcmVxdWVzdHMu
CiogMSBjb21taXQgcGVyIFBSOiBQbGVhc2Ugc3F1YXNoL3JlYmFzZSBtdWx0
aXBsZSBjb21taXRzIGludG8gb25lIHNpbmdsZSBjb21taXQgKHRvIGtlZXAg
dGhlIGhpc3RvcnkgY2xlYW4pLgoKUGxlYXNlIG5vdGUgdGhhdCBieSBjb250
cmlidXRpbmcgYW55IGNvZGUgb3IgZG9jdW1lbnRhdGlvbiB0byB0aGlzIHJl
cG9zaXRvcnkgKGJ5CnJhaXNpbmcgcHVsbCByZXF1ZXN0cywgb3Igb3RoZXJ3
aXNlKSB5b3UgZXhwbGljaXRseSBhZ3JlZSB0bwp0aGUgWyoqQ29udHJpYnV0
b3IgTGljZW5zZSBBZ3JlZW1lbnQqKl0oZG9jL2NvbnRyaWJ1dG9yX2xpY2Vu
c2VfYWdyZWVtZW50KS4KCiMjIENvbnRyaWJ1dG9ycwoKVGhpcyBwcm9qZWN0
IGV4aXN0cyB0aGFua3MgdG8gYWxsIHRoZSBwZW9wbGUgd2hvIGNvbnRyaWJ1
dGUuCjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9sb2NhbHN0YWNrL2xv
Y2Fsc3RhY2svZ3JhcGhzL2NvbnRyaWJ1dG9ycyI+PGltZyBzcmM9Imh0dHBz
Oi8vb3BlbmNvbGxlY3RpdmUuY29tL2xvY2Fsc3RhY2svY29udHJpYnV0b3Jz
LnN2Zz93aWR0aD04OTAiIC8+PC9hPgoKCiMjIEJhY2tlcnMKClRoYW5rIHlv
dSB0byBhbGwgb3VyIGJhY2tlcnMhIPCfmY8gW1tCZWNvbWUgYSBiYWNrZXJd
KGh0dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL2xvY2Fsc3RhY2sjYmFja2Vy
KV0KCjxhIGhyZWY9Imh0dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL2xvY2Fs
c3RhY2sjYmFja2VycyIgdGFyZ2V0PSJfYmxhbmsiPjxpbWcgc3JjPSJodHRw
czovL29wZW5jb2xsZWN0aXZlLmNvbS9sb2NhbHN0YWNrL2JhY2tlcnMuc3Zn
P3dpZHRoPTg5MCI+PC9hPgoKCiMjIFNwb25zb3JzCgpTdXBwb3J0IHRoaXMg
cHJvamVjdCBieSBiZWNvbWluZyBhIHNwb25zb3IuIFlvdXIgbG9nbyB3aWxs
IHNob3cgdXAgaGVyZSB3aXRoIGEgbGluayB0byB5b3VyIHdlYnNpdGUuIFtb
QmVjb21lIGEgc3BvbnNvcl0oaHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20v
bG9jYWxzdGFjayNzcG9uc29yKV0KCjxhIGhyZWY9Imh0dHBzOi8vb3BlbmNv
bGxlY3RpdmUuY29tL2xvY2Fsc3RhY2svc3BvbnNvci8wL3dlYnNpdGUiIHRh
cmdldD0iX2JsYW5rIj48aW1nIHNyYz0iaHR0cHM6Ly9vcGVuY29sbGVjdGl2
ZS5jb20vbG9jYWxzdGFjay9zcG9uc29yLzAvYXZhdGFyLnN2ZyI+PC9hPgo8
YSBocmVmPSJodHRwczovL29wZW5jb2xsZWN0aXZlLmNvbS9sb2NhbHN0YWNr
L3Nwb25zb3IvMS93ZWJzaXRlIiB0YXJnZXQ9Il9ibGFuayI+PGltZyBzcmM9
Imh0dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL2xvY2Fsc3RhY2svc3BvbnNv
ci8xL2F2YXRhci5zdmciPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly9vcGVuY29s
bGVjdGl2ZS5jb20vbG9jYWxzdGFjay9zcG9uc29yLzIvd2Vic2l0ZSIgdGFy
Z2V0PSJfYmxhbmsiPjxpbWcgc3JjPSJodHRwczovL29wZW5jb2xsZWN0aXZl
LmNvbS9sb2NhbHN0YWNrL3Nwb25zb3IvMi9hdmF0YXIuc3ZnIj48L2E+Cjxh
IGhyZWY9Imh0dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL2xvY2Fsc3RhY2sv
c3BvbnNvci8zL3dlYnNpdGUiIHRhcmdldD0iX2JsYW5rIj48aW1nIHNyYz0i
aHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20vbG9jYWxzdGFjay9zcG9uc29y
LzMvYXZhdGFyLnN2ZyI+PC9hPgo8YSBocmVmPSJodHRwczovL29wZW5jb2xs
ZWN0aXZlLmNvbS9sb2NhbHN0YWNrL3Nwb25zb3IvNC93ZWJzaXRlIiB0YXJn
ZXQ9Il9ibGFuayI+PGltZyBzcmM9Imh0dHBzOi8vb3BlbmNvbGxlY3RpdmUu
Y29tL2xvY2Fsc3RhY2svc3BvbnNvci80L2F2YXRhci5zdmciPjwvYT4KPGEg
aHJlZj0iaHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20vbG9jYWxzdGFjay9z
cG9uc29yLzUvd2Vic2l0ZSIgdGFyZ2V0PSJfYmxhbmsiPjxpbWcgc3JjPSJo
dHRwczovL29wZW5jb2xsZWN0aXZlLmNvbS9sb2NhbHN0YWNrL3Nwb25zb3Iv
NS9hdmF0YXIuc3ZnIj48L2E+CjxhIGhyZWY9Imh0dHBzOi8vb3BlbmNvbGxl
Y3RpdmUuY29tL2xvY2Fsc3RhY2svc3BvbnNvci82L3dlYnNpdGUiIHRhcmdl
dD0iX2JsYW5rIj48aW1nIHNyYz0iaHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5j
b20vbG9jYWxzdGFjay9zcG9uc29yLzYvYXZhdGFyLnN2ZyI+PC9hPgo8YSBo
cmVmPSJodHRwczovL29wZW5jb2xsZWN0aXZlLmNvbS9sb2NhbHN0YWNrL3Nw
b25zb3IvNy93ZWJzaXRlIiB0YXJnZXQ9Il9ibGFuayI+PGltZyBzcmM9Imh0
dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL2xvY2Fsc3RhY2svc3BvbnNvci83
L2F2YXRhci5zdmciPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly9vcGVuY29sbGVj
dGl2ZS5jb20vbG9jYWxzdGFjay9zcG9uc29yLzgvd2Vic2l0ZSIgdGFyZ2V0
PSJfYmxhbmsiPjxpbWcgc3JjPSJodHRwczovL29wZW5jb2xsZWN0aXZlLmNv
bS9sb2NhbHN0YWNrL3Nwb25zb3IvOC9hdmF0YXIuc3ZnIj48L2E+CjxhIGhy
ZWY9Imh0dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL2xvY2Fsc3RhY2svc3Bv
bnNvci85L3dlYnNpdGUiIHRhcmdldD0iX2JsYW5rIj48aW1nIHNyYz0iaHR0
cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20vbG9jYWxzdGFjay9zcG9uc29yLzkv
YXZhdGFyLnN2ZyI+PC9hPgoKIyMgU3RhcmdhemVycyBvdmVyIHRpbWUKClsh
W1N0YXJnYXplcnMgb3ZlciB0aW1lXShodHRwczovL3N0YXJjaGFydC5jYy9s
b2NhbHN0YWNrL2xvY2Fsc3RhY2suc3ZnKV0oaHR0cHM6Ly9zdGFyY2hhcnQu
Y2MvbG9jYWxzdGFjay9sb2NhbHN0YWNrKQoKIyMgTGljZW5zZQoKQ29weXJp
Z2h0IChjKSAyMDE3LTIwMTkgTG9jYWxTdGFjayBtYWludGFpbmVycyBhbmQg
Y29udHJpYnV0b3JzLgoKQ29weXJpZ2h0IChjKSAyMDE2IEF0bGFzc2lhbiBh
bmQgb3RoZXJzLgoKVGhpcyB2ZXJzaW9uIG9mIExvY2FsU3RhY2sgaXMgcmVs
ZWFzZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAo
c2VlIExJQ0VOU0UudHh0KS4KQnkgZG93bmxvYWRpbmcgYW5kIHVzaW5nIHRo
aXMgc29mdHdhcmUgeW91IGFncmVlIHRvIHRoZQpbRW5kLVVzZXIgTGljZW5z
ZSBBZ3JlZW1lbnQgKEVVTEEpXShkb2MvZW5kX3VzZXJfbGljZW5zZV9hZ3Jl
ZW1lbnQpLgoKV2UgYnVpbGQgb24gYSBudW1iZXIgb2YgdGhpcmQtcGFydHkg
c29mdHdhcmUgdG9vbHMsIGluY2x1ZGluZyB0aGUgZm9sbG93aW5nOgoKVGhp
cmQtUGFydHkgc29mdHdhcmUgICAgICB8IAlMaWNlbnNlCi0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCioqUHl0
aG9uL3BpcCBtb2R1bGVzOioqICAgfAphaXJzcGVlZCAgICAgICAgICAgICAg
ICAgIHwgQlNEIExpY2Vuc2UKYW1hem9uX2tjbHB5ICAgICAgICAgICAgICB8
IEFtYXpvbiBTb2Z0d2FyZSBMaWNlbnNlCmJvdG8zICAgICAgICAgICAgICAg
ICAgICAgfCBBcGFjaGUgTGljZW5zZSAyLjAKY292ZXJhZ2UgICAgICAgICAg
ICAgICAgICB8IEFwYWNoZSBMaWNlbnNlIDIuMApkb2NvcHQgICAgICAgICAg
ICAgICAgICAgIHwgTUlUIExpY2Vuc2UKZWxhc3RpY3NlYXJjaCAgICAgICAg
ICAgICB8IEFwYWNoZSBMaWNlbnNlIDIuMApmbGFzayAgICAgICAgICAgICAg
ICAgICAgIHwgQlNEIExpY2Vuc2UKZmxhc2tfc3dhZ2dlciAgICAgICAgICAg
ICB8IE1JVCBMaWNlbnNlCmpzb25wYXRoLXJ3ICAgICAgICAgICAgICAgfCBB
cGFjaGUgTGljZW5zZSAyLjAKbW90byAgICAgICAgICAgICAgICAgICAgICB8
IEFwYWNoZSBMaWNlbnNlIDIuMApub3NlICAgICAgICAgICAgICAgICAgICAg
IHwgR05VIExHUEwKcGVwOCAgICAgICAgICAgICAgICAgICAgICB8IEV4cGF0
IGxpY2Vuc2UKcmVxdWVzdHMgICAgICAgICAgICAgICAgICB8IEFwYWNoZSBM
aWNlbnNlIDIuMApzdWJwcm9jZXNzMzIgICAgICAgICAgICAgIHwgUFNGIExp
Y2Vuc2UKKipOb2RlLmpzL25wbSBtb2R1bGVzOioqICB8CmtpbmVzYWxpdGUg
ICAgICAgICAgICAgICAgfCBNSVQgTGljZW5zZQoqKk90aGVyIHRvb2xzOioq
ICAgICAgICAgIHwKRWxhc3RpY3NlYXJjaCAgICAgICAgICAgICB8IEFwYWNo
ZSBMaWNlbnNlIDIuMAo=
",,21669,"bGFuZ3VhZ2U6IHB5dGhvbgpkaXN0OiB4ZW5pYWwKcHl0aG9uOgogIC0gIjMu
NyIKCnNlcnZpY2VzOgogIC0gZG9ja2VyCgpicmFuY2hlczoKICBvbmx5Ogog
ICAgLSBtYXN0ZXIKCmFkZG9uczoKICBhcHQ6CiAgICBwYWNrYWdlczoKICAg
ICAgLSBvcGVuamRrLTgtanJlLWhlYWRsZXNzCgpiZWZvcmVfaW5zdGFsbDoK
ICAtICJzdWRvIGFwdC1nZXQgcHVyZ2Ugb3Blbmpkay02KiIKICAtICJzdWRv
IGFwdC1nZXQgcHVyZ2Ugb3Blbmpkay03KiIKICAtICJzdWRvIGFwdC1nZXQg
cHVyZ2Ugb3JhY2xlLWphdmE3LSoiCiAgLSAic3VkbyBhcHQtZ2V0IHB1cmdl
IHB5dGhvbjIuNyIKICAtICJudm0gaW5zdGFsbCA2OyBudm0gYWxpYXMgZGVm
YXVsdCBub2RlIgogIC0gInN1ZG8gdXNlcmFkZCBsb2NhbHN0YWNrIC1zIC9i
aW4vYmFzaCIKCmVudjoKICBnbG9iYWw6CiAgICAtIEpBVkFfSE9NRT0vdXNy
L2xpYi9qdm0vamF2YS04LW9wZW5qZGstYW1kNjQKICAgIC0gQk9UT19DT05G
SUc9L2Rldi9udWxsCgppbnN0YWxsOgogIC0gc2V0IC1lCiAgLSAjIGluc3Rh
bGwgdW5kZXIgcHl0aG9uIDMKICAtIFBJUF9DTUQ9cGlwMyBWRU5WX09QVFM9
Ii1wICdgd2hpY2ggcHl0aG9uM2AnIiBtYWtlIGluc3RhbGwtYmFzaWMKICAt
IG1ha2UgaW5pdAogIC0gbWFrZSBwcmVwYXJlLWphdmEtdGVzdHMtaWYtY2hh
bmdlZAogIC0gbm9odXAgZG9ja2VyIHB1bGwgbGFtYmNpL2xhbWJkYTpub2Rl
anM4LjEwID4gL2Rldi9udWxsICYKICAtIG5vaHVwIGRvY2tlciBwdWxsIGxh
bWJjaS9sYW1iZGE6cnVieTIuNSA+IC9kZXYvbnVsbCAmCiAgLSBub2h1cCBk
b2NrZXIgcHVsbCBsYW1iY2kvbGFtYmRhOnB5dGhvbjMuNiA+IC9kZXYvbnVs
bCAmCiAgLSBub2h1cCBkb2NrZXIgcHVsbCBsYW1iY2kvbGFtYmRhOmRvdG5l
dGNvcmUyLjAgPiAvZGV2L251bGwgJgogIC0gbm9odXAgZG9ja2VyIHB1bGwg
bGFtYmNpL2xhbWJkYTpqYXZhOCA+IC9kZXYvbnVsbCAmCgpzY3JpcHQ6CiAg
LSBzZXQgLWUgIyBmYWlsIGZhc3QKICAjIHJ1biB0ZXN0cyB1c2luZyBQeXRo
b24gMyAobGltaXQgdGhlIHNldCBvZiB0ZXN0cyB0byByZWR1Y2UgdGVzdCBk
dXJhdGlvbikKICAtIERFQlVHPTEgTEFNQkRBX0VYRUNVVE9SPWRvY2tlciBV
U0VfU1NMPTEgVEVTVF9FUlJPUl9JTkpFQ1RJT049MSBURVNUX1BBVEg9InRl
c3RzL2ludGVncmF0aW9uL3Rlc3RfbGFtYmRhLnB5IHRlc3RzL2ludGVncmF0
aW9uL3Rlc3RfaW50ZWdyYXRpb24ucHkiIG1ha2UgdGVzdAogICMgcnVuIHRl
c3RzIHVzaW5nIFB5dGhvbiAyCiAgIyAgIE5vdGU6IHdlJ3JlIG5vdCB1c2lu
ZyBtdWx0aXBsZSB2ZXJzaW9ucyBpbiB0aGUgdG9wLWxldmVsICJweXRob24i
IGNvbmZpZ3VyYXRpb24sCiAgIyAgIGJ1dCBpbnN0ZWFkIHJlaW5zdGFsbCB1
c2luZyAyLnggaGVyZSwgYXMgdGhhdCBhbGxvd3MgdXMgdG8gcmUtdXNlIHNv
bWUgY2FjaGVkIGxpYnMgZXRjLgogIC0gIm1ha2UgcmVpbnN0YWxsLXAyID4g
L2Rldi9udWxsIgogIC0gbWFrZSBpbml0CiAgLSBMQU1CREFfRVhFQ1VUT1I9
ZG9ja2VyLXJldXNlIFRFU1RfUEFUSD0idGVzdHMvaW50ZWdyYXRpb24vdGVz
dF9sYW1iZGEucHkgdGVzdHMvaW50ZWdyYXRpb24vdGVzdF9pbnRlZ3JhdGlv
bi5weSIgbWFrZSB0ZXN0CiAgIyBidWlsZCBEb2NrZXIgaW1hZ2UKICAtIG1h
a2UgZG9ja2VyLWJ1aWxkCiAgIyBydW4gSmF2YSB0ZXN0cwogICMgVE9ETzog
cmUtZW5hYmxlIGphdmEgdGVzdHMgd2hlbiBmaXhlZCEKICAjIC0gbWFrZSB0
ZXN0LWphdmEtaWYtY2hhbmdlZDsgdHJ1ZQogICMgcHVzaCBEb2NrZXIgaW1h
Z2UgKGlmIG9uIG1hc3RlciBicmFuY2gpCiAgLSBtYWtlIGRvY2tlci1wdXNo
LW1hc3RlcgoKYWZ0ZXJfc3VjY2VzczoKICAtIG1ha2UgY292ZXJhbGxzIHx8
IHRydWUKCm5vdGlmaWNhdGlvbnM6CiAgZW1haWw6IGZhbHNlCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
