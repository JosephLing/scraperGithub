name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'android-best-practices',22374063,"b""Do's and Don'ts for Android development, by Futurice developers""",,28,18493,,1491,False,b'https://api.github.com/repos/futurice/android-best-practices/forks',"IyBCZXN0IHByYWN0aWNlcyBpbiBBbmRyb2lkIGRldmVsb3BtZW50CgpBdm9p
ZCByZWludmVudGluZyB0aGUgd2hlZWwgYnkgZm9sbG93aW5nIHRoZXNlIGd1
aWRlbGluZXMuIExlc3NvbnMgbGVhcm5lZCBmcm9tIEFuZHJvaWQgZGV2ZWxv
cGVycyBpbiBbRnV0dXJpY2VdKGh0dHA6Ly93d3cuZnV0dXJpY2UuY29tKS4g
SWYgeW91IGFyZSBpbnRlcmVzdGVkIGluIGlPUyBvciBXaW5kb3dzIFBob25l
IGRldmVsb3BtZW50LCBiZSBzdXJlIHRvIGNoZWNrIGFsc28gb3VyIFsqKmlP
UyBHb29kIFByYWN0aWNlcyoqXShodHRwczovL2dpdGh1Yi5jb20vZnV0dXJp
Y2UvaW9zLWdvb2QtcHJhY3RpY2VzKSBhbmQgWyoqV2luZG93cyBBcHAgRGV2
ZWxvcG1lbnQgQmVzdCBQcmFjdGljZXMqKl0oaHR0cHM6Ly9naXRodWIuY29t
L2Z1dHVyaWNlL3dpbmRvd3MtYXBwLWRldmVsb3BtZW50LWJlc3QtcHJhY3Rp
Y2VzKSBkb2N1bWVudHMuCgpbIVtBbmRyb2lkIEFyc2VuYWxdKGh0dHBzOi8v
aW1nLnNoaWVsZHMuaW8vYmFkZ2UvQW5kcm9pZCUyMEFyc2VuYWwtYW5kcm9p
ZC0tYmVzdC0tcHJhY3RpY2VzLWJyaWdodGdyZWVuLnN2Zz9zdHlsZT1mbGF0
KV0oaHR0cHM6Ly9hbmRyb2lkLWFyc2VuYWwuY29tL2RldGFpbHMvMS8xMDkx
KSAKWyFbU3BpY2UgUHJvZ3JhbSBTcG9uc29yZWRdKGh0dHBzOi8vaW1nLnNo
aWVsZHMuaW8vYmFkZ2UvY2hpbGljb3JuLXNwb25zb3JlZC1icmlnaHRncmVl
bi5zdmc/bG9nbz1kYXRhJTNBaW1hZ2UlMkZwbmclM0JiYXNlNjQlMkNpVkJP
UncwS0dnb0FBQUFOU1VoRVVnQUFBQTRBQUFBUENBTUFBQURqeWc1R0FBQUJx
bEJNVkVVQUFBQXptVE0zcEVuJTJGU1RHaFZTWTRaRDQzU1RkT1hrNWxTR0F5
aHo0MWl6OHhrejJIVUNXRkZoVEZGUlV6WkR2YklCMDBaem95Zmo5emxIWTBa
em1NZlkweWRUMHpqajkybDNxamVSM2ROU2tvWnA0eWtFQXpqVDh5bFVCbGdq
MHlpVDB5bUVDa3dLaldxQXlqdXFjZ2hwVXlrRCUyQlVRQ0tvUXlBSGIlMkJn
eWxrQXlsMEV5bmtFem1rQTBtVUEzbWo4Nm9VZzdvVW84bjBrJTJGUyUyQncl
MkZvMHhCbkU1QnBVOUJyMFpLbzFaTG1GWk9qRWhlc0dsanV6bGxxVzUwdEgx
NGFTMTRxbTE3bVg5JTJCeDRHQWdVQ0V4MDJKeVNxT3ZwU1h2SSUyQll2cDJv
cnFtcHplR3JRaCUyQnNyNnlzc2EydHRLNnYwYkt4TUJ5MDFibTR6THU1eXJ5
N3liMjl4NzdCek1QQ3hzTEV6TVhGeHNYR3g4ZkkzUExKMDh2S3lzckt5OHJM
MnMzTXpjek9IOExSMGRIVzE5YlgxOWZaMmRuYTJ0cmMzTnpkM2QzZDN0M2Yz
OSUyRmd0WlRnNE9EaTR1TGo0JTJCUGxHeExsNWVYbTV1Ym5SelBuNSUyQmZv
Nk9qcDZlbnFmbXpxNnVycjYlMkJ2dDdlM3Q3dTN1RHd2dWd3YnU3dTd2Nk9i
djhmRHo4JTJGUDA5UFQyaWdQMjl2YjQlMkJQajZ5Mzc2JTJCdSUyRjclMkJm
djklMkZmMzklMkZ2MyUyQmtBSCUyRkF3ZiUyRnR3RCUyRjl3Q3loMUtmQUFB
QUtYUlNUbE1BQlE0Vkd5a3FMalZDVFZOZ2RYdUhqNUthcTYydnQ3N0V4TlBY
MiUyQmp1OHZYNiUyQnZyNyUyRlA3JTJCJTJGaWlVTWZVQUFBRFRTVVJCVkFq
WEJjRlJUc0l3SEFmZ1glMkZ0dk95amRZRFVzUmtGalRJd2tQdmppT1R5WDkl
MkZBSUp0N0JGNTcwQm9wRWRIT09zdEhTJTJCWDBzNDM5Ukd3bmZ1QjVnU0ZP
WkFnRHFqUU9CaXZ0R2tDYzdqJTJCMmU4WE56ZWZXU3UlMkJzWlVEMVFmb1Rx
MHk2bVpzVVN2SWtSb0dZbkh1NlljNjNwRENqaVNORTJrWUxkQ1VBV1ZtSzR6
c3h6TyUyQlFRRnhOczViNDc5TkhYb3BrYldYOVUzUEF3V0FWU1klMkZwWmYx
dWRRN3JmVXBRMUN6dXJEUHB3bzE2RmYyY01XanVGSFg5cUNWMFkwT2s0SnZo
NjNJQUJVTm5rdGwlMkI2c2dQJTJCQVJJeFNyVCUyRk1oTGxBQUFBQUVsRlRr
U3VRbUNDKV0oaHR0cHM6Ly9zcGljZXByb2dyYW0ub3JnLykKCiMjIFN1bW1h
cnkKCiMjIyMgW1VzZSBHcmFkbGUgYW5kIGl0cyBkZWZhdWx0IHByb2plY3Qg
c3RydWN0dXJlXSgjYnVpbGQtc3lzdGVtKQojIyMjIFtQdXQgcGFzc3dvcmRz
IGFuZCBzZW5zaXRpdmUgZGF0YSBpbiBncmFkbGUucHJvcGVydGllc10oI2dy
YWRsZS1jb25maWd1cmF0aW9uKQojIyMjIFtVc2UgdGhlIEphY2tzb24gbGli
cmFyeSB0byBwYXJzZSBKU09OIGRhdGFdKCNsaWJyYXJpZXMpCiMjIyMgW0Rv
bid0IHdyaXRlIHlvdXIgb3duIEhUVFAgY2xpZW50LCB1c2UgT2tIdHRwIGxp
YnJhcmllc10oI25ldHdvcmtsaWJzKQojIyMjIFtBdm9pZCBHdWF2YSBhbmQg
dXNlIG9ubHkgYSBmZXcgbGlicmFyaWVzIGR1ZSB0byB0aGUgKjY1ayBtZXRo
b2QgbGltaXQqXSgjbWV0aG9kbGltaXRhdGlvbikKIyMjIyBbU2FpbCBjYXJl
ZnVsbHkgd2hlbiBjaG9vc2luZyBiZXR3ZWVuIEFjdGl2aXRpZXMgYW5kIEZy
YWdtZW50c10oI2FjdGl2aXRpZXMtYW5kLWZyYWdtZW50cykKIyMjIyBbTGF5
b3V0IFhNTHMgYXJlIGNvZGUsIG9yZ2FuaXplIHRoZW0gd2VsbF0oI3Jlc291
cmNlcykKIyMjIyBbVXNlIHN0eWxlcyB0byBhdm9pZCBkdXBsaWNhdGUgYXR0
cmlidXRlcyBpbiBsYXlvdXQgWE1Mc10oI3N0eWxlcykKIyMjIyBbVXNlIG11
bHRpcGxlIHN0eWxlIGZpbGVzIHRvIGF2b2lkIGEgc2luZ2xlIGh1Z2Ugb25l
XSgjc3BsaXRzdHlsZXMpCiMjIyMgW0tlZXAgeW91ciBjb2xvcnMueG1sIHNo
b3J0IGFuZCBEUlksIGp1c3QgZGVmaW5lIHRoZSBwYWxldHRlXSgjY29sb3Jz
eG1sKQojIyMjIFtBbHNvIGtlZXAgZGltZW5zLnhtbCBEUlksIGRlZmluZSBn
ZW5lcmljIGNvbnN0YW50c10oI2RpbWVuc3htbCkKIyMjIyBbRG8gbm90IG1h
a2UgYSBkZWVwIGhpZXJhcmNoeSBvZiBWaWV3R3JvdXBzXSgjZGVlcGhpZXJh
cmNoeSkKIyMjIyBbQXZvaWQgY2xpZW50LXNpZGUgcHJvY2Vzc2luZyBmb3Ig
V2ViVmlld3MsIGFuZCBiZXdhcmUgb2YgbGVha3NdKCN3ZWJ2aWV3cykKIyMj
IyBbVXNlIEpVbml0IGZvciB1bml0IHRlc3RzLCBFc3ByZXNzbyBmb3IgY29u
bmVjdGVkIChVSSkgdGVzdHMsIGFuZCBBc3NlcnRKLUFuZHJvaWQgZm9yIGVh
c2llciBhc3NlcnRpb25zIGluIHlvdXIgQW5kcm9pZCB0ZXN0c10oI3Rlc3Qt
ZnJhbWV3b3JrcykKIyMjIyBbQWx3YXlzIHVzZSBQcm9HdWFyZCBvciBEZXhH
dWFyZF0oI3Byb2d1YXJkLWNvbmZpZ3VyYXRpb24pCiMjIyMgW1VzZSBTaGFy
ZWRQcmVmZXJlbmNlcyBmb3Igc2ltcGxlIHBlcnNpc3RlbmNlLCBvdGhlcndp
c2UgQ29udGVudFByb3ZpZGVyc10oI2RhdGEtc3RvcmFnZSkKIyMjIyBbVXNl
IFN0ZXRobyB0byBkZWJ1ZyB5b3VyIGFwcGxpY2F0aW9uXSgjdXNlLXN0ZXRo
bykKIyMjIyBbVXNlIExlYWsgQ2FuYXJ5IHRvIGZpbmQgbWVtb3J5IGxlYWtz
XSgjdXNlLWxlYWtjYW5hcnkpCiMjIyMgW1VzZSBjb250aW51b3VzIGludGVn
cmF0aW9uXSgjdXNlLWNvbnRpbnVvdXMtaW50ZWdyYXRpb24tMSkKCi0tLS0t
LS0tLS0KCiMjIyBBbmRyb2lkIFNESwoKUGxhY2UgeW91ciBbQW5kcm9pZCBT
REtdKGh0dHBzOi8vZGV2ZWxvcGVyLmFuZHJvaWQuY29tL3Nkay9pbnN0YWxs
aW5nL2luZGV4Lmh0bWw/cGtnPXRvb2xzKSBzb21ld2hlcmUgaW4geW91ciBo
b21lIGRpcmVjdG9yeSBvciBzb21lIG90aGVyIGFwcGxpY2F0aW9uLWluZGVw
ZW5kZW50IGxvY2F0aW9uLiBTb21lIGRpc3RyaWJ1dGlvbnMgb2YgSURFcyBp
bmNsdWRlIHRoZSBTREsgd2hlbiBpbnN0YWxsZWQsIGFuZCBtYXkgcGxhY2Ug
aXQgdW5kZXIgdGhlIHNhbWUgZGlyZWN0b3J5IGFzIHRoZSBJREUuIFRoaXMg
Y2FuIGJlIGJhZCB3aGVuIHlvdSBuZWVkIHRvIHVwZ3JhZGUgKG9yIHJlaW5z
dGFsbCkgdGhlIElERSwgYXMgeW91IG1heSBsb3NlIHlvdXIgU0RLIGluc3Rh
bGxhdGlvbiwgZm9yY2luZyBhIGxvbmcgYW5kIHRlZGlvdXMgcmVkb3dubG9h
ZC4KCkFsc28gYXZvaWQgcHV0dGluZyB0aGUgU0RLIGluIGEgc3lzdGVtLWxl
dmVsIGRpcmVjdG9yeSB0aGF0IG1pZ2h0IG5lZWQgcm9vdCBwZXJtaXNzaW9u
cywgdG8gYXZvaWQgcGVybWlzc2lvbnMgaXNzdWVzLgoKIyMjIEJ1aWxkIHN5
c3RlbQoKWW91ciBkZWZhdWx0IG9wdGlvbiBzaG91bGQgYmUgW0dyYWRsZV0o
aHR0cHM6Ly9ncmFkbGUub3JnKSB1c2luZyB0aGUgW0FuZHJvaWQgR3JhZGxl
IHBsdWdpbl0oaHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vc3R1ZGlv
L2J1aWxkL2luZGV4Lmh0bWwpLiAKCkl0IGlzIGltcG9ydGFudCB0aGF0IHlv
dXIgYXBwbGljYXRpb24ncyBidWlsZCBwcm9jZXNzIGlzIGRlZmluZWQgYnkg
eW91ciBHcmFkbGUgZmlsZXMsIHJhdGhlciB0aGFuIGJlaW5nIHJlbGlhbnQg
b24gSURFIHNwZWNpZmljIGNvbmZpZ3VyYXRpb25zLiBUaGlzIGFsbG93cyBm
b3IgY29uc2lzdGVudCBidWlsZHMgYmV0d2VlbiB0b29scyBhbmQgYmV0dGVy
IHN1cHBvcnQgZm9yIGNvbnRpbnVvdXMgaW50ZWdyYXRpb24gc3lzdGVtcy4K
CiMjIyBQcm9qZWN0IHN0cnVjdHVyZQoKQWx0aG91Z2ggR3JhZGxlIG9mZmVy
cyBhIGxhcmdlIGRlZ3JlZSBvZiBmbGV4aWJpbGl0eSBpbiB5b3VyIHByb2pl
Y3Qgc3RydWN0dXJlLCB1bmxlc3MgeW91IGhhdmUgYSBjb21wZWxsaW5nIHJl
YXNvbiB0byBkbyBvdGhlcndpc2UsIHlvdSBzaG91bGQgYWNjZXB0IGl0cyBb
ZGVmYXVsdCBzdHJ1Y3R1cmVdKGh0dHBzOi8vZGV2ZWxvcGVyLmFuZHJvaWQu
Y29tL3N0dWRpby9idWlsZC9pbmRleC5odG1sI3NvdXJjZXNldHMpIGFzIHRo
aXMgc2ltcGxpZnkgeW91ciBidWlsZCBzY3JpcHRzLiAKCiMjIyBHcmFkbGUg
Y29uZmlndXJhdGlvbgoKKipHZW5lcmFsIHN0cnVjdHVyZS4qKiBGb2xsb3cg
W0dvb2dsZSdzIGd1aWRlIG9uIEdyYWRsZSBmb3IgQW5kcm9pZF0oaHR0cHM6
Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vc3R1ZGlvL2J1aWxkL2luZGV4Lmh0
bWwpLgoKKiptaW5TZGtWZXJzaW9uOiAyMSoqIFdlIHJlY29tbWVuZCB0byBo
YXZlIGEgbG9vayBhdCB0aGUgW0FuZHJvaWQgdmVyc2lvbiB1c2FnZSBjaGFy
dF0oaHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vYWJvdXQvZGFzaGJv
YXJkcy9pbmRleC5odG1sI1BsYXRmb3JtKSBiZWZvcmUgZGVmaW5pbmcgdGhl
IG1pbmltdW0gQVBJIHJlcXVpcmVkLiBSZW1lbWJlciB0aGF0IHRoZSBzdGF0
aXN0aWNzIGdpdmVuIGFyZSBnbG9iYWwgc3RhdGlzdGljcyBhbmQgbWF5IGRp
ZmZlciB3aGVuIHRhcmdldGluZyBhIHNwZWNpZmljIHJlZ2lvbmFsL2RlbW9n
cmFwaGljIG1hcmtldC4gSXQgaXMgd29ydGggbWVudGlvbmluZyB0aGF0IHNv
bWUgbWF0ZXJpYWwgZGVzaWduIGZlYXR1cmVzIGFyZSBvbmx5IGF2YWlsYWJs
ZSBvbiBBbmRyb2lkIDUuMCAoQVBJIGxldmVsIDIxKSBhbmQgYWJvdmUuIEFu
ZCBhbHNvLCBmcm9tIEFQSSAyMSwgdGhlIG11bHRpZGV4IHN1cHBvcnQgbGli
cmFyeSBpcyBub3QgbmVlZGVkIGFueW1vcmUuCgoqKlNtYWxsIHRhc2tzLioq
IEluc3RlYWQgb2YgKHNoZWxsLCBQeXRob24sIFBlcmwsIGV0Yykgc2NyaXB0
cywgeW91IGNhbiBtYWtlIHRhc2tzIGluIEdyYWRsZS4gSnVzdCBmb2xsb3cg
W0dyYWRsZSdzIGRvY3VtZW50YXRpb25dKGh0dHA6Ly93d3cuZ3JhZGxlLm9y
Zy9kb2NzL2N1cnJlbnQvdXNlcmd1aWRlL3VzZXJndWlkZV9zaW5nbGUuaHRt
bCNOMTBDQkYpIGZvciBtb3JlIGRldGFpbHMuIEdvb2dsZSBhbHNvIHByb3Zp
ZGVzIHNvbWUgaGVscGZ1bCBbR3JhZGxlIHJlY2lwZXNdKGh0dHBzOi8vZGV2
ZWxvcGVyLmFuZHJvaWQuY29tL3N0dWRpby9idWlsZC9ncmFkbGUtdGlwcy5o
dG1sKSwgc3BlY2lmaWMgdG8gQW5kcm9pZC4KCioqUGFzc3dvcmRzLioqIElu
IHlvdXIgYXBwJ3MgYGJ1aWxkLmdyYWRsZWAgeW91IHdpbGwgbmVlZCB0byBk
ZWZpbmUgdGhlIGBzaWduaW5nQ29uZmlnc2AgZm9yIHRoZSByZWxlYXNlIGJ1
aWxkLiBIZXJlIGlzIHdoYXQgeW91IHNob3VsZCBhdm9pZDoKCl9Eb24ndCBk
byB0aGlzXy4gVGhpcyB3b3VsZCBhcHBlYXIgaW4gdGhlIHZlcnNpb24gY29u
dHJvbCBzeXN0ZW0uCgpgYGBncm9vdnkKc2lnbmluZ0NvbmZpZ3MgewogICAg
cmVsZWFzZSB7CiAgICAgICAgLy8gRE9OJ1QgRE8gVEhJUyEhCiAgICAgICAg
c3RvcmVGaWxlIGZpbGUoIm15YXBwLmtleXN0b3JlIikKICAgICAgICBzdG9y
ZVBhc3N3b3JkICJwYXNzd29yZDEyMyIKICAgICAgICBrZXlBbGlhcyAidGhl
a2V5IgogICAgICAgIGtleVBhc3N3b3JkICJwYXNzd29yZDc4OSIKICAgIH0K
fQpgYGAKCkluc3RlYWQsIG1ha2UgYSBgZ3JhZGxlLnByb3BlcnRpZXNgIGZp
bGUgd2hpY2ggc2hvdWxkIF9ub3RfIGJlIGFkZGVkIHRvIHRoZSB2ZXJzaW9u
IGNvbnRyb2wgc3lzdGVtOgoKYGBgCktFWVNUT1JFX1BBU1NXT1JEPXBhc3N3
b3JkMTIzCktFWV9QQVNTV09SRD1wYXNzd29yZDc4OQpgYGAKClRoYXQgZmls
ZSBpcyBhdXRvbWF0aWNhbGx5IGltcG9ydGVkIGJ5IEdyYWRsZSwgc28geW91
IGNhbiB1c2UgaXQgaW4gYGJ1aWxkLmdyYWRsZWAgYXMgc3VjaDoKCmBgYGdy
b292eQpzaWduaW5nQ29uZmlncyB7CiAgICByZWxlYXNlIHsKICAgICAgICB0
cnkgewogICAgICAgICAgICBzdG9yZUZpbGUgZmlsZSgibXlhcHAua2V5c3Rv
cmUiKQogICAgICAgICAgICBzdG9yZVBhc3N3b3JkIEtFWVNUT1JFX1BBU1NX
T1JECiAgICAgICAgICAgIGtleUFsaWFzICJ0aGVrZXkiCiAgICAgICAgICAg
IGtleVBhc3N3b3JkIEtFWV9QQVNTV09SRAogICAgICAgIH0KICAgICAgICBj
YXRjaCAoZXgpIHsKICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWRVc2Vy
RGF0YUV4Y2VwdGlvbigiWW91IHNob3VsZCBkZWZpbmUgS0VZU1RPUkVfUEFT
U1dPUkQgYW5kIEtFWV9QQVNTV09SRCBpbiBncmFkbGUucHJvcGVydGllcy4i
KQogICAgICAgIH0KICAgIH0KfQpgYGAKCioqUHJlZmVyIE1hdmVuIGRlcGVu
ZGVuY3kgcmVzb2x1dGlvbiB0byBpbXBvcnRpbmcgamFyIGZpbGVzLioqIElm
IHlvdSBleHBsaWNpdGx5IGluY2x1ZGUgamFyIGZpbGVzIGluIHlvdXIgcHJv
amVjdCwgdGhleSB3aWxsIGJlIGEgc3BlY2lmaWMgZnJvemVuIHZlcnNpb24s
IHN1Y2ggYXMgYDIuMS4xYC4gRG93bmxvYWRpbmcgamFycyBhbmQgaGFuZGxp
bmcgdXBkYXRlcyBpcyBjdW1iZXJzb21lIGFuZCBpcyBhIHByb2JsZW0gdGhh
dCBNYXZlbiBhbHJlYWR5IHNvbHZlcyBwcm9wZXJseS4gV2hlcmUgcG9zc2li
bGUsIHlvdSBzaG91bGQgYXR0ZW1wdCB0byB1c2UgTWF2ZW4gdG8gcmVzb2x2
ZSB5b3VyIGRlcGVuZGVuY2llcywgZm9yIGV4YW1wbGU6CgpgYGBncm9vdnkK
ZGVwZW5kZW5jaWVzIHsKICAgIGltcGxlbWVudGF0aW9uICdjb20uc3F1YXJl
dXAub2todHRwOm9raHR0cDM6My44LjAnCn0KYGBgICAgIAoKKipBdm9pZCBN
YXZlbiBkeW5hbWljIGRlcGVuZGVuY3kgcmVzb2x1dGlvbioqCkF2b2lkIHRo
ZSB1c2Ugb2YgZHluYW1pYyBkZXBlbmRlbmN5IHZlcnNpb25zLCBzdWNoIGFz
IGAyLjEuK2AgYXMgdGhpcyBtYXkgcmVzdWx0IGluIGRpZmZlcmVudCBhbmQg
dW5zdGFibGUgYnVpbGRzIG9yIHN1YnRsZSwgdW50cmFja2VkIGRpZmZlcmVu
Y2VzIGluIGJlaGF2aW9yIGJldHdlZW4gYnVpbGRzLiBUaGUgdXNlIG9mIHN0
YXRpYyB2ZXJzaW9ucyBzdWNoIGFzIGAyLjEuMWAgaGVscHMgY3JlYXRlIGEg
bW9yZSBzdGFibGUsIHByZWRpY3RhYmxlIGFuZCByZXBlYXRhYmxlIGRldmVs
b3BtZW50IGVudmlyb25tZW50LgoKKipVc2UgZGlmZmVyZW50IHBhY2thZ2Ug
bmFtZSBmb3Igbm9uLXJlbGVhc2UgYnVpbGRzKioKVXNlIGBhcHBsaWNhdGlv
bklkU3VmZml4YCBmb3IgKmRlYnVnKiBbYnVpbGQgdHlwZV0oaHR0cDovL3Rv
b2xzLmFuZHJvaWQuY29tL3RlY2gtZG9jcy9uZXctYnVpbGQtc3lzdGVtL3Vz
ZXItZ3VpZGUjVE9DLUJ1aWxkLVR5cGVzKSB0byBiZSBhYmxlIHRvIGluc3Rh
bGwgYm90aCAqZGVidWcqIGFuZCAqcmVsZWFzZSogYXBrIG9uIHRoZSBzYW1l
IGRldmljZSAoZG8gdGhpcyBhbHNvIGZvciBjdXN0b20gYnVpbGQgdHlwZXMs
IGlmIHlvdSBuZWVkIGFueSkuIFRoaXMgd2lsbCBiZSBlc3BlY2lhbGx5IHZh
bHVhYmxlIGFmdGVyIHlvdXIgYXBwIGhhcyBiZWVuIHB1Ymxpc2hlZC4KCmBg
YGdyb292eQphbmRyb2lkIHsKICAgIGJ1aWxkVHlwZXMgewogICAgICAgIGRl
YnVnIHsKICAgICAgICAgICAgYXBwbGljYXRpb25JZFN1ZmZpeCAnLmRlYnVn
JwogICAgICAgICAgICB2ZXJzaW9uTmFtZVN1ZmZpeCAnLURFQlVHJwogICAg
ICAgIH0KCiAgICAgICAgcmVsZWFzZSB7CiAgICAgICAgICAgIC8vIC4uLgog
ICAgICAgIH0KICAgIH0KfQpgYGAKClVzZSBkaWZmZXJlbnQgaWNvbnMgdG8g
ZGlzdGluZ3Vpc2ggdGhlIGJ1aWxkcyBpbnN0YWxsZWQgb24gYSBkZXZpY2Xi
gJRmb3IgZXhhbXBsZSB3aXRoIGRpZmZlcmVudCBjb2xvcnMgb3IgYW4gb3Zl
cmxhaWQgICJkZWJ1ZyIgbGFiZWwuIEdyYWRsZSBtYWtlcyB0aGlzIHZlcnkg
ZWFzeTogd2l0aCBkZWZhdWx0IHByb2plY3Qgc3RydWN0dXJlLCBzaW1wbHkg
cHV0ICpkZWJ1ZyogaWNvbiBpbiBgYXBwL3NyYy9kZWJ1Zy9yZXNgIGFuZCAq
cmVsZWFzZSogaWNvbiBpbiBgYXBwL3NyYy9yZWxlYXNlL3Jlc2AuIFlvdSBj
b3VsZCBhbHNvIFtjaGFuZ2UgYXBwIG5hbWVdKGh0dHA6Ly9zdGFja292ZXJm
bG93LmNvbS9xdWVzdGlvbnMvMjQ3ODUyNzAvaG93LXRvLWNoYW5nZS1hcHAt
bmFtZS1wZXItZ3JhZGxlLWJ1aWxkLXR5cGUpIHBlciBidWlsZCB0eXBlLCBh
cyB3ZWxsIGFzICBgdmVyc2lvbk5hbWVgIChhcyBpbiB0aGUgYWJvdmUgZXhh
bXBsZSkuCgoqKlNoYXJlIGRlYnVnIGFwcCBrZXlzdG9yZSBmaWxlKioKU2hh
cmluZyB0aGUgZGVidWcgQVBLIGtleXN0b3JlIGZpbGUgdmlhIHRoZSBhcHAg
cmVwb3NpdG9yeSBzYXZlcyB0aW1lIHdoZW4gdGVzdGluZyBvbiBzaGFyZWQg
ZGV2aWNlcyBhbmQgYXZvaWRzIHRoZSB1bmluc3RhbGxpbmcvcmVpbnN0YWxs
aW5nIG9mIHRoZSBhcHAuIEl0IGFsc28gc2ltcGxpZmllcyB0aGUgcHJvY2Vz
c2luZyBvZiB3b3JraW5nIHdpdGggc29tZSBBbmRyb2lkIFNES3MsIHN1Y2gg
YXMgRmFjZWJvb2ssIHdoaWNoIHJlcXVpcmUgdGhlIHJlZ2lzdHJhdGlvbiBv
ZiBhIHNpbmdsZSBrZXkgc3RvcmUgaGFzaC4gVW5saWtlIHRoZSByZWxlYXNl
IGtleSBmaWxlLCB0aGUgZGVidWcga2V5IGZpbGUgY2FuIHNhZmVseSBiZSBh
ZGRlZCB0byB5b3VyIHJlcG9zaXRvcnkuCgoqKlNoYXJlIGNvZGUgc3R5bGUg
Zm9ybWF0dGluZyBkZWZpbnRpb25zKioKU2hhcmluZyB0aGUgY29kZSBzdHls
ZSBhbmQgZm9ybWF0dGluZyBkZWZpbml0aW9ucyB2aWEgdGhlIGFwcCByZXBv
c2l0b3J5IGhlbHBzIGVuc3VyZSBhIHZpc3VhbGx5IGNvbnNpc3RlbnQgY29k
ZSBiYXNlIGFuZCBtYWtlcyBjb2RlIGNvbXByZWhlbnNpb24gYW5kIHJldmll
d3MgZWFzaWVyLgoKIyMjIEFuZHJvaWQgU3R1ZGlvIGFzIHlvdXIgbWFpbiBJ
REUKClRoZSByZWNvbW1lbmRlZCBJREUgZm9yIEFuZHJvaWQgZGV2ZWxvcG1l
bnQgaXMgW0FuZHJvaWQgU3R1ZGlvXShodHRwczovL2RldmVsb3Blci5hbmRy
b2lkLmNvbS9zZGsvaW5zdGFsbGluZy9zdHVkaW8uaHRtbCkgYmVjYXVzZSBp
dCBpcyBkZXZlbG9wZWQgYW5kIGNvbnN0YW50bHkgdXBkYXRlZCBieSBHb29n
bGUsIGhhcyBnb29kIHN1cHBvcnQgZm9yIEdyYWRsZSwgY29udGFpbnMgYSBy
YW5nZSBvZiB1c2VmdWwgbW9uaXRvcmluZyBhbmQgYW5hbHlzaXMgdG9vbHMg
YW5kIGlzIGZ1bGx5IHRhaWxvcmVkIGZvciBBbmRyb2lkIGRldmVsb3BtZW50
LgoKQXZvaWQgYWRkaW5nIEFuZHJvaWQgU3R1ZGlvJ3Mgc3BlY2lmaWMgY29u
ZmlndXJhdGlvbiBmaWxlcywgc3VjaCBhcyBgLmltbGAgZmlsZXMgdG8gdGhl
IHZlcnNpb24gY29udHJvbCBzeXN0ZW0gYXMgdGhlc2Ugb2Z0ZW4gY29udGFp
biBjb25maWd1cmF0aW9ucyBzcGVjaWZpYyBvZiB5b3VyIGxvY2FsIG1hY2hp
bmUsIHdoaWNoIHdvbid0IHdvcmsgZm9yIHlvdXIgY29sbGVhZ3Vlcy4KCiMj
IyBMaWJyYXJpZXMKCioqW0phY2tzb25dKGh0dHA6Ly93aWtpLmZhc3Rlcnht
bC5jb20vSmFja3NvbkhvbWUpKiogaXMgYSBKYXZhIGxpYnJhcnkgZm9yIEpT
T04gc2VyaWFsaXphdGlvbiBhbmQgZGVzZXJpYWxpemF0aW9uLCBpdCBoYXMg
YSB3aWRlLXNjb3BlZCBhbmQgdmVyc2F0aWxlIEFQSSwgc3VwcG9ydGluZyB2
YXJpb3VzIHdheXMgb2YgcHJvY2Vzc2luZyBKU09OOiBzdHJlYW1pbmcsIGlu
LW1lbW9yeSB0cmVlIG1vZGVsLCBhbmQgdHJhZGl0aW9uYWwgSlNPTi1QT0pP
IGRhdGEgYmluZGluZy4gCgpbR3Nvbl0oaHR0cHM6Ly9jb2RlLmdvb2dsZS5j
b20vcC9nb29nbGUtZ3Nvbi8pIGlzIGFub3RoZXIgcG9wdWxhciBjaG9pY2Ug
YW5kIGJlaW5nIGEgc21hbGxlciBsaWJyYXJ5IHRoYW4gSmFja3NvbiwgeW91
IG1pZ2h0IHByZWZlciBpdCB0byBhdm9pZCA2NWsgbWV0aG9kcyBsaW1pdGF0
aW9uLiBBbHNvLCBpZiB5b3UgYXJlIHVzaW5nICAKCltNb3NoaV0oaHR0cHM6
Ly9naXRodWIuY29tL3NxdWFyZS9tb3NoaSksIGFub3RoZXIgb2YgW1NxdWFy
ZSdzXShodHRwczovL2dpdGh1Yi5jb20vc3F1YXJlKSBvcGVuIHNvdXJjZSBs
aWJyYXJpZXMsIGJ1aWxkcyB1cG9uIGxlYXJuaW5ncyBmcm9tIHRoZSBkZXZl
bG9wbWVudCBvZiBHc29uIGFuZCBhbHNvIGludGVncmF0ZXMgd2VsbCB3aXRo
IEtvdGxpbi4KCjxhIG5hbWU9Im5ldHdvcmtsaWJzIj48L2E+CioqTmV0d29y
a2luZywgY2FjaGluZywgYW5kIGltYWdlcy4qKiBUaGVyZSBhcmUgYSBjb3Vw
bGUgb2YgYmF0dGxlLXByb3ZlbiBzb2x1dGlvbnMgZm9yIHBlcmZvcm1pbmcg
cmVxdWVzdHMgdG8gYmFja2VuZCBzZXJ2ZXJzLCB3aGljaCB5b3Ugc2hvdWxk
IHVzZSByYXRoZXIgdGhhbiBpbXBsZW1lbnRpbmcgeW91ciBvd24gY2xpZW50
LiBXZSByZWNvbW1lbmQgYmFzaW5nIHlvdXIgc3RhY2sgYXJvdW5kIFtPa0h0
dHBdKGh0dHA6Ly9zcXVhcmUuZ2l0aHViLmlvL29raHR0cC8pIGZvciBlZmZp
Y2llbnQgSFRUUCByZXF1ZXN0cyBhbmQgdXNpbmcgW1JldHJvZml0XShodHRw
Oi8vc3F1YXJlLmdpdGh1Yi5pby9yZXRyb2ZpdC8pIHRvIHByb3ZpZGUgYSB0
eXBlc2FmZSBsYXllci4gSWYgeW91IGNob29zZSBSZXRyb2ZpdCwgY29uc2lk
ZXIgW1BpY2Fzc29dKGh0dHA6Ly9zcXVhcmUuZ2l0aHViLmlvL3BpY2Fzc28v
KSBmb3IgbG9hZGluZyBhbmQgY2FjaGluZyBpbWFnZXMuCgpSZXRyb2ZpdCwg
UGljYXNzbyBhbmQgT2tIdHRwIGFyZSBjcmVhdGVkIGJ5IHRoZSBzYW1lIGNv
bXBhbnksIHNvIHRoZXkgY29tcGxlbWVudCBlYWNoIG90aGVyIG5pY2VseSBh
bmQgY29tcGF0YWJpbGl0eSBpc3N1ZXMgYXJlIHVuY29tbW9uLgoKW0dsaWRl
XShodHRwczovL2dpdGh1Yi5jb20vYnVtcHRlY2gvZ2xpZGUpIGlzIGFub3Ro
ZXIgb3B0aW9uIGZvciBsb2FkaW5nIGFuZCBjYWNoaW5nIGltYWdlcy4gSXQg
aGFzIHN1cHBvcnQgZm9yIGFuaW1hdGVkIEdJRnMsIGNpcmN1bGFyIGltYWdl
cyBhbmQgY2xhaW1zIG9mIGJldHRlciBwZXJmb3JtYW5jZSB0aGFuIFBpY2Fz
c28sIGJ1dCBhbHNvIGEgYmlnZ2VyIG1ldGhvZCBjb3VudC4KCioqUnhKYXZh
KiogaXMgYSBsaWJyYXJ5IGZvciBSZWFjdGl2ZSBQcm9ncmFtbWluZywgaW4g
b3RoZXIgd29yZHMsIGhhbmRsaW5nIGFzeW5jaHJvbm91cyBldmVudHMuIEl0
IGlzIGEgcG93ZXJmdWwgcGFyYWRpZ20sIGJ1dCBpdCBhbHNvIGhhcyBhIHN0
ZWVwIGxlYXJuaW5nIGN1cnZlLiBXZSByZWNvbW1lbmQgdGFraW5nIHNvbWUg
Y2F1dGlvbiBiZWZvcmUgdXNpbmcgdGhpcyBsaWJyYXJ5IHRvIGFyY2hpdGVj
dCB0aGUgZW50aXJlIGFwcGxpY2F0aW9uLiBXZSBoYXZlIHdyaXR0ZW4gc29t
ZSBibG9nIHBvc3RzIG9uIGl0OiBbWzFdXShodHRwOi8vYmxvZy5mdXR1cmlj
ZS5jb20vdGVjaC1waWNrLW9mLXRoZS13ZWVrLXJ4LWZvci1uZXQtYW5kLXJ4
amF2YS1mb3ItYW5kcm9pZCksIFtbMl1dKGh0dHA6Ly9ibG9nLmZ1dHVyaWNl
LmNvbS90b3AtNy10aXBzLWZvci1yeGphdmEtb24tYW5kcm9pZCksIFtbM11d
KGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL3N0YWx0ei84NjhlN2U5YmMyYTdi
OGMxZjc1NCksIFtbNF1dKGh0dHA6Ly9ibG9nLmZ1dHVyaWNlLmNvbS9hbmRy
b2lkLWRldmVsb3BtZW50LWhhcy1pdHMtb3duLXN3aWZ0KS4gRm9yIGEgcmVm
ZXJlbmNlIGFwcCwgb3VyIG9wZW4gc291cmNlIGFwcCBbRnJlZXNvdW5kIEFu
ZHJvaWRdKGh0dHBzOi8vZ2l0aHViLmNvbS9mdXR1cmljZS9mcmVlc291bmQt
YW5kcm9pZCkgbWFrZXMgZXh0ZW5zaXZlIHVzZSBvZiBSeEphdmEgMi4KCklm
IHlvdSBoYXZlIG5vIHByZXZpb3VzIGV4cGVyaWVuY2Ugd2l0aCBSeCwgc3Rh
cnQgYnkgYXBwbHlpbmcgaXQgb25seSBmb3IgcmVzcG9uc2VzIGZyb20gYXBw
J3MgYmFja2VuZCBBUElzLiBBbHRlcm5hdGl2ZWx5LCBzdGFydCBieSBhcHBs
eWluZyBpdCBmb3Igc2ltcGxlIFVJIGV2ZW50IGhhbmRsaW5nLCBsaWtlIGNs
aWNrIGV2ZW50cyBvciB0eXBpbmcgZXZlbnRzIG9uIGEgc2VhcmNoIGZpZWxk
LiBJZiB5b3UgYXJlIGNvbmZpZGVudCBpbiB5b3VyIFJ4IHNraWxscyBhbmQg
d2FudCB0byBhcHBseSBpdCB0byB0aGUgd2hvbGUgYXJjaGl0ZWN0dXJlLCB0
aGVuIHdyaXRlIGRvY3VtZW50YXRpb24gb24gYWxsIHRoZSB0cmlja3kgcGFy
dHMuIEtlZXAgaW4gbWluZCB0aGF0IGFub3RoZXIgcHJvZ3JhbW1lciB1bmZh
bWlsaWFyIHRvIFJ4SmF2YSBtaWdodCBoYXZlIGEgdmVyeSBoYXJkIHRpbWUg
bWFpbnRhaW5pbmcgdGhlIHByb2plY3QuIERvIHlvdXIgYmVzdCB0byBoZWxw
IHRoZW0gdW5kZXJzdGFuZCB5b3VyIGNvZGUgYW5kIGFsc28gUnguCgpVc2Ug
W1J4QW5kcm9pZF0oaHR0cHM6Ly9naXRodWIuY29tL1JlYWN0aXZlWC9SeEFu
ZHJvaWQpIGZvciBBbmRyb2lkIHRocmVhZGluZyBzdXBwb3J0IGFuZCBbUnhC
aW5kaW5nXShodHRwczovL2dpdGh1Yi5jb20vSmFrZVdoYXJ0b24vUnhCaW5k
aW5nKSB0byBlYXNpbHkgY3JlYXRlIE9ic2VydmFibGVzIGZyb20gZXhpc3Rp
bmcgQW5kcm9pZCBjb21wb25lbnRzLgoKKipbUmV0cm9sYW1iZGFdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9ldmFudC9ncmFkbGUtcmV0cm9sYW1iZGEpKiogaXMg
YSBKYXZhIGxpYnJhcnkgZm9yIHVzaW5nIExhbWJkYSBleHByZXNzaW9uIHN5
bnRheCBpbiBBbmRyb2lkIGFuZCBvdGhlciBwcmUtSkRLOCBwbGF0Zm9ybXMu
IEl0IGhlbHBzIGtlZXAgeW91ciBjb2RlIHRpZ2h0IGFuZCByZWFkYWJsZSBl
c3BlY2lhbGx5IGlmIHlvdSB1c2UgYSBmdW5jdGlvbmFsIHN0eWxlLCBzdWNo
IGFzIGluIFJ4SmF2YS4KCkFuZHJvaWQgU3R1ZGlvIG9mZmVycyBjb2RlIGFz
c2lzdCBzdXBwb3J0IGZvciBKYXZhIDggbGFtYmRhcy4gSWYgeW91IGFyZSBu
ZXcgdG8gbGFtYmRhcywganVzdCB1c2UgdGhlIGZvbGxvd2luZyB0byBnZXQg
c3RhcnRlZDoKCi0gQW55IGludGVyZmFjZSB3aXRoIGp1c3Qgb25lIG1ldGhv
ZCBpcyAibGFtYmRhIGZyaWVuZGx5IiBhbmQgY2FuIGJlIGZvbGRlZCBpbnRv
IHRoZSBtb3JlIHRpZ2h0IHN5bnRheAotIElmIGluIGRvdWJ0IGFib3V0IHBh
cmFtZXRlcnMgYW5kIHN1Y2gsIHdyaXRlIGEgbm9ybWFsIGFub255bW91cyBp
bm5lciBjbGFzcyBhbmQgdGhlbiBsZXQgQW5kcm9pZCBTdHVkaW8gZm9sZCBp
dCBpbnRvIGEgbGFtYmRhIGZvciB5b3UuCgpOb3RlIHRoYXQgZnJvbSBBbmRy
b2lkIFN0dWRpbyAzLjAsIFtSZXRyb2xhbWJkYSBpcyBubyBsb25nZXIgcmVx
dWlyZWRdKGh0dHBzOi8vZGV2ZWxvcGVyLmFuZHJvaWQuY29tL3N0dWRpby9w
cmV2aWV3L2ZlYXR1cmVzL2phdmE4LXN1cHBvcnQuaHRtbCkuCgo8YSBuYW1l
PSJtZXRob2RsaW1pdGF0aW9uIj48L2E+CioqQmV3YXJlIG9mIHRoZSBkZXgg
bWV0aG9kIGxpbWl0YXRpb24sIGFuZCBhdm9pZCB1c2luZyBtYW55IGxpYnJh
cmllcy4qKiBBbmRyb2lkIGFwcHMsIHdoZW4gcGFja2FnZWQgYXMgYSBkZXgg
ZmlsZSwgaGF2ZSBhIGhhcmQgbGltaXRhdGlvbiBvZiA2NTUzNiByZWZlcmVu
Y2VkIG1ldGhvZHMgW1sxXV0oaHR0cHM6Ly9tZWRpdW0uY29tL0Byb3R4ZWQv
ZGV4LXNreXMtdGhlLWxpbWl0LW5vLTY1ay1tZXRob2RzLWlzLTI4ZTZjYjQw
Y2Y3MSkgW1syXV0oaHR0cDovL2Jsb2cucGVyc2lzdGVudC5pbmZvLzIwMTQv
MDUvcGVyLXBhY2thZ2UtbWV0aG9kLWNvdW50cy1mb3ItYW5kcm9pZHMuaHRt
bCkgW1szXV0oaHR0cDovL2pha2V3aGFydG9uLmNvbS9wbGF5LXNlcnZpY2Vz
LWlzLWEtbW9ub2xpdGgvKS4gWW91IHdpbGwgc2VlIGEgZmF0YWwgZXJyb3Ig
b24gY29tcGlsYXRpb24gaWYgeW91IHBhc3MgdGhlIGxpbWl0LiBGb3IgdGhh
dCByZWFzb24sIHVzZSBhIG1pbmltYWwgYW1vdW50IG9mIGxpYnJhcmllcywg
YW5kIHVzZSB0aGUgW2RleC1tZXRob2QtY291bnRzXShodHRwczovL2dpdGh1
Yi5jb20vbWloYWlwL2RleC1tZXRob2QtY291bnRzKSB0b29sIHRvIGRldGVy
bWluZSB3aGljaCBzZXQgb2YgbGlicmFyaWVzIGNhbiBiZSB1c2VkIGluIG9y
ZGVyIHRvIHN0YXkgdW5kZXIgdGhlIGxpbWl0LiBFc3BlY2lhbGx5IGF2b2lk
IHVzaW5nIHRoZSBHdWF2YSBsaWJyYXJ5LCBzaW5jZSBpdCBjb250YWlucyBv
dmVyIDEzayBtZXRob2RzLgoKIyMjIEFjdGl2aXRpZXMgYW5kIEZyYWdtZW50
cwoKVGhlcmUgaXMgbm8gY29uc2Vuc3VzIGFtb25nIHRoZSBjb21tdW5pdHkg
bm9yIEZ1dHVyaWNlIGRldmVsb3BlcnMgaG93IHRvIGJlc3Qgb3JnYW5pemUg
QW5kcm9pZCBhcmNoaXRlY3R1cmVzIHdpdGggRnJhZ21lbnRzIGFuZCBBY3Rp
dml0aWVzLiBTcXVhcmUgZXZlbiBoYXMgW2EgbGlicmFyeSBmb3IgYnVpbGRp
bmcgYXJjaGl0ZWN0dXJlcyBtb3N0bHkgd2l0aCBWaWV3c10oaHR0cHM6Ly9n
aXRodWIuY29tL3NxdWFyZS9tb3J0YXIpLCBieXBhc3NpbmcgdGhlIG5lZWQg
Zm9yIEZyYWdtZW50cywgYnV0IHRoaXMgc3RpbGwgaXMgbm90IGNvbnNpZGVy
ZWQgYSB3aWRlbHkgcmVjb21tZW5kYWJsZSBwcmFjdGljZSBpbiB0aGUgY29t
bXVuaXR5LgoKQmVjYXVzZSBvZiBBbmRyb2lkIEFQSSdzIGhpc3RvcnksIHlv
dSBjYW4gbG9vc2VseSBjb25zaWRlciBGcmFnbWVudHMgYXMgVUkgcGllY2Vz
IG9mIGEgc2NyZWVuLiBJbiBvdGhlciB3b3JkcywgRnJhZ21lbnRzIGFyZSBu
b3JtYWxseSByZWxhdGVkIHRvIFVJLiBBY3Rpdml0aWVzIGNhbiBiZSBsb29z
ZWx5IGNvbnNpZGVyZWQgdG8gYmUgY29udHJvbGxlcnMsIHRoZXkgYXJlIGVz
cGVjaWFsbHkgaW1wb3J0YW50IGZvciB0aGVpciBsaWZlY3ljbGUgYW5kIGZv
ciBtYW5hZ2luZyBzdGF0ZS4gSG93ZXZlciwgeW91IGFyZSBsaWtlbHkgdG8g
c2VlIHZhcmlhdGlvbiBpbiB0aGVzZSByb2xlczogYWN0aXZpdGllcyBtaWdo
dCB0YWtlIFVJIHJvbGVzIChbZGVsaXZlcmluZyB0cmFuc2l0aW9ucyBiZXR3
ZWVuIHNjcmVlbnNdKGh0dHBzOi8vZGV2ZWxvcGVyLmFuZHJvaWQuY29tL2Fi
b3V0L3ZlcnNpb25zL2xvbGxpcG9wLmh0bWwpKSwgYW5kIFtmcmFnbWVudHMg
bWlnaHQgYmUgdXNlZCBzb2xlbHkgYXMgY29udHJvbGxlcnNdKGh0dHA6Ly9k
ZXZlbG9wZXIuYW5kcm9pZC5jb20vZ3VpZGUvY29tcG9uZW50cy9mcmFnbWVu
dHMuaHRtbCNBZGRpbmdXaXRob3V0VUkpLiBXZSBzdWdnZXN0IHlvdSBzYWls
IGNhcmVmdWxseSwgbWFraW5nIGluZm9ybWVkIGRlY2lzaW9ucyBzaW5jZSB0
aGVyZSBhcmUgZHJhd2JhY2tzIGZvciBjaG9vc2luZyBhIGZyYWdtZW50cy1v
bmx5IGFyY2hpdGVjdHVyZSwgb3IgYWN0aXZpdGllcy1vbmx5LCBvciB2aWV3
cy1vbmx5LiBIZXJlIGlzIHNvbWUgYWR2aWNlIG9uIHdoYXQgdG8gYmUgY2Fy
ZWZ1bCB3aXRoLCBidXQgdGFrZSB0aGVtIHdpdGggYSBncmFpbiBvZiBzYWx0
OgoKLSBBdm9pZCB1c2luZyBbbmVzdGVkIGZyYWdtZW50c10oaHR0cHM6Ly9k
ZXZlbG9wZXIuYW5kcm9pZC5jb20vYWJvdXQvdmVyc2lvbnMvYW5kcm9pZC00
LjIuaHRtbCNOZXN0ZWRGcmFnbWVudHMpIGV4dGVuc2l2ZWx5LCBiZWNhdXNl
IFttYXRyeW9zaGthIGJ1Z3NdKGh0dHA6Ly9kZWx5YW4ubWUvYW5kcm9pZC1z
LW1hdHJ5b3Noa2EtcHJvYmxlbS8pIGNhbiBvY2N1ci4gVXNlIG5lc3RlZCBm
cmFnbWVudHMgb25seSB3aGVuIGl0IG1ha2VzIHNlbnNlIChmb3IgaW5zdGFu
Y2UsIGZyYWdtZW50cyBpbiBhIGhvcml6b250YWxseS1zbGlkaW5nIFZpZXdQ
YWdlciBpbnNpZGUgYSBzY3JlZW4tbGlrZSBmcmFnbWVudCkgb3IgaWYgaXQn
cyBhIHdlbGwtaW5mb3JtZWQgZGVjaXNpb24uCi0gQXZvaWQgcHV0dGluZyB0
b28gbXVjaCBjb2RlIGluIEFjdGl2aXRpZXMuIFdoZW5ldmVyIHBvc3NpYmxl
LCBrZWVwIHRoZW0gYXMgbGlnaHR3ZWlnaHQgY29udGFpbmVycywgZXhpc3Rp
bmcgaW4geW91ciBhcHBsaWNhdGlvbiBwcmltYXJpbHkgZm9yIHRoZSBsaWZl
Y3ljbGUgYW5kIG90aGVyIGltcG9ydGFudCBBbmRyb2lkLWludGVyZmFjaW5n
IEFQSXMuIFByZWZlciBzaW5nbGUtZnJhZ21lbnQgYWN0aXZpdGllcyBpbnN0
ZWFkIG9mIHBsYWluIGFjdGl2aXRpZXMgLSBwdXQgVUkgY29kZSBpbnRvIHRo
ZSBhY3Rpdml0eSdzIGZyYWdtZW50LiBUaGlzIG1ha2VzIGl0IHJldXNhYmxl
IGluIGNhc2UgeW91IG5lZWQgdG8gY2hhbmdlIGl0IHRvIHJlc2lkZSBpbiBh
IHRhYmJlZCBsYXlvdXQsIG9yIGluIGEgbXVsdGktZnJhZ21lbnQgdGFibGV0
IHNjcmVlbi4gQXZvaWQgaGF2aW5nIGFuIGFjdGl2aXR5IHdpdGhvdXQgYSBj
b3JyZXNwb25kaW5nIGZyYWdtZW50LCB1bmxlc3MgeW91IGFyZSBtYWtpbmcg
YW4gaW5mb3JtZWQgZGVjaXNpb24uCgojIyMgSmF2YSBwYWNrYWdlcyBzdHJ1
Y3R1cmUKCldlIHJlY29tbWVuZCB1c2luZyBhICpmZWF0dXJlIGJhc2VkKiBw
YWNrYWdlIHN0cnVjdHVyZSBmb3IgeW91ciBjb2RlLiBUaGlzIGhhcyB0aGUg
Zm9sbG93aW5nIGJlbmVmaXRzOgoKLSBDbGVhcmVyIGZlYXR1cmUgZGVwZW5k
ZW5jeSBhbmQgaW50ZXJmYWNlIGJvdW5kYXJpZXMuCi0gUHJvbW90ZXMgZW5j
YXBzdWxhdGlvbi4KLSBFYXNpZXIgdG8gdW5kZXJzdGFuZCB0aGUgY29tcG9u
ZW50cyB0aGF0IGRlZmluZSB0aGUgZmVhdHVyZS4gIAotIFJlZHVjZXMgcmlz
ayBvZiB1bmtub3dpbmdseSBtb2RpZnlpbmcgdW5yZWxhdGVkIG9yIHNoYXJl
ZCBjb2RlLgotIFNpbXBsZXIgbmF2aWdhdGlvbjogbW9zdCByZWxhdGVkIGNs
YXNzZXMgd2lsbCBiZSBpbiB0aGUgb25lIHBhY2thZ2UuCi0gRWFzaWVyIHRv
IHJlbW92ZSBhIGZlYXR1cmUuCi0gU2ltcGxpZmllcyB0aGUgdHJhbnNpdGlv
biB0byBtb2R1bGUgYmFzZWQgYnVpbGQgc3RydWN0dXJlIChiZXR0ZXIgYnVp
bGQgdGltZXMgYW5kIEluc3RhbnQgQXBwcyBzdXBwb3J0KQoKVGhlIGFsdGVy
bmF0aXZlIGFwcHJvYWNoIG9mIGRlZmluaW5nIHlvdXIgcGFja2FnZXMgYnkg
KmhvdyogYSBmZWF0dXJlIGlzIGJ1aWx0IChieSBwbGFjaW5nIHJlbGF0ZWQg
QWN0aXZpdGllcywgRnJhZ21lbnRzLCBBZGFwdGVycyBldGMgaW4gc2VwYXJh
dGUgcGFja2FnZXMpIGNhbiBsZWFkIHRvIGEgZnJhZ21lbnRlZCBjb2RlIGJh
c2Ugd2l0aCBsZXNzIGltcGxlbWVudGF0aW9uIGZsZXhpYmlsaXR5LiBNb3N0
IGltcG9ydGFudGx5LCBpdCBoaW5kZXJzIHlvdXIgYWJpbGl0eSB0byBjb21w
cmVoZW5kIHlvdXIgY29kZSBiYXNlIGluIHRlcm1zIG9mIGl0cyBwcmltYXJ5
IHJvbGU6IHRvIHByb3ZpZGUgZmVhdHVyZXMgZm9yIHlvdXIgYXBwLiAgIAoK
IyMjIFJlc291cmNlcwoKKipOYW1pbmcuKiogRm9sbG93IHRoZSBjb252ZW50
aW9uIG9mIHByZWZpeGluZyB0aGUgdHlwZSwgYXMgaW4gYHR5cGVfZm9vX2Jh
ci54bWxgLiBFeGFtcGxlczogYGZyYWdtZW50X2NvbnRhY3RfZGV0YWlscy54
bWxgLCBgdmlld19wcmltYXJ5X2J1dHRvbi54bWxgLCBgYWN0aXZpdHlfbWFp
bi54bWxgLgoKKipPcmdhbml6aW5nIGxheW91dCBYTUxzLioqIElmIHlvdSdy
ZSB1bnN1cmUgaG93IHRvIGZvcm1hdCBhIGxheW91dCBYTUwsIHRoZSBmb2xs
b3dpbmcgY29udmVudGlvbiBtYXkgaGVscC4KCi0gT25lIGF0dHJpYnV0ZSBw
ZXIgbGluZSwgaW5kZW50ZWQgYnkgNCBzcGFjZXMKLSBgYW5kcm9pZDppZGAg
YXMgdGhlIGZpcnN0IGF0dHJpYnV0ZSBhbHdheXMKLSBgYW5kcm9pZDpsYXlv
dXRfKioqKmAgYXR0cmlidXRlcyBhdCB0aGUgdG9wCi0gYHN0eWxlYCBhdHRy
aWJ1dGUgYXQgdGhlIGJvdHRvbQotIFRhZyBjbG9zZXIgYC8+YCBvbiBpdHMg
b3duIGxpbmUsIHRvIGZhY2lsaXRhdGUgb3JkZXJpbmcgYW5kIGFkZGluZyBh
dHRyaWJ1dGVzLgotIFJhdGhlciB0aGFuIGhhcmQgY29kaW5nIGBhbmRyb2lk
OnRleHRgLCBjb25zaWRlciB1c2luZyBbRGVzaWdudGltZSBhdHRyaWJ1dGVz
XShodHRwOi8vdG9vbHMuYW5kcm9pZC5jb20vdGlwcy9sYXlvdXQtZGVzaWdu
dGltZS1hdHRyaWJ1dGVzKSBhdmFpbGFibGUgZm9yIEFuZHJvaWQgU3R1ZGlv
LgoKYGBgeG1sCjw/eG1sIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9InV0Zi04
Ij8+CjxMaW5lYXJMYXlvdXQKICAgIHhtbG5zOmFuZHJvaWQ9Imh0dHA6Ly9z
Y2hlbWFzLmFuZHJvaWQuY29tL2Fway9yZXMvYW5kcm9pZCIKICAgIHhtbG5z
OnRvb2xzPSJodHRwOi8vc2NoZW1hcy5hbmRyb2lkLmNvbS90b29scyIKICAg
IGFuZHJvaWQ6bGF5b3V0X3dpZHRoPSJtYXRjaF9wYXJlbnQiCiAgICBhbmRy
b2lkOmxheW91dF9oZWlnaHQ9Im1hdGNoX3BhcmVudCIKICAgIGFuZHJvaWQ6
b3JpZW50YXRpb249InZlcnRpY2FsIgogICAgPgoKICAgIDxUZXh0Vmlldwog
ICAgICAgIGFuZHJvaWQ6aWQ9IkAraWQvbmFtZSIKICAgICAgICBhbmRyb2lk
OmxheW91dF93aWR0aD0ibWF0Y2hfcGFyZW50IgogICAgICAgIGFuZHJvaWQ6
bGF5b3V0X2hlaWdodD0id3JhcF9jb250ZW50IgogICAgICAgIGFuZHJvaWQ6
bGF5b3V0X2FsaWduUGFyZW50UmlnaHQ9InRydWUiCiAgICAgICAgYW5kcm9p
ZDp0ZXh0PSJAc3RyaW5nL25hbWUiCiAgICAgICAgc3R5bGU9IkBzdHlsZS9G
YW5jeVRleHQiCiAgICAgICAgLz4KCiAgICA8aW5jbHVkZSBsYXlvdXQ9IkBs
YXlvdXQvcmV1c2FibGVfcGFydCIgLz4KCjwvTGluZWFyTGF5b3V0PgpgYGAK
CkFzIGEgcnVsZSBvZiB0aHVtYiwgYXR0cmlidXRlcyBgYW5kcm9pZDpsYXlv
dXRfKioqKmAgc2hvdWxkIGJlIGRlZmluZWQgaW4gdGhlIGxheW91dCBYTUws
IHdoaWxlIG90aGVyIGF0dHJpYnV0ZXMgYGFuZHJvaWQ6KioqKmAgc2hvdWxk
IHN0YXkgaW4gYSBzdHlsZSBYTUwuIFRoaXMgcnVsZSBoYXMgZXhjZXB0aW9u
cywgYnV0IGluIGdlbmVyYWwgd29ya3MgZmluZS4gVGhlIGlkZWEgaXMgdG8g
a2VlcCBvbmx5IGxheW91dCAocG9zaXRpb25pbmcsIG1hcmdpbiwgc2l6aW5n
KSBhbmQgY29udGVudCBhdHRyaWJ1dGVzIGluIHRoZSBsYXlvdXQgZmlsZXMs
IHdoaWxlIGtlZXBpbmcgYWxsIGFwcGVhcmFuY2UgZGV0YWlscyAoY29sb3Jz
LCBwYWRkaW5nLCBmb250KSBpbiBzdHlsZXMgZmlsZXMuCgpUaGUgZXhjZXB0
aW9ucyBhcmU6CgotIGBhbmRyb2lkOmlkYCBzaG91bGQgb2J2aW91c2x5IGJl
IGluIHRoZSBsYXlvdXQgZmlsZXMKLSBgYW5kcm9pZDpvcmllbnRhdGlvbmAg
Zm9yIGEgYExpbmVhckxheW91dGAgbm9ybWFsbHkgbWFrZXMgbW9yZSBzZW5z
ZSBpbiBsYXlvdXQgZmlsZXMKLSBgYW5kcm9pZDp0ZXh0YCBzaG91bGQgYmUg
aW4gbGF5b3V0IGZpbGVzIGJlY2F1c2UgaXQgZGVmaW5lcyBjb250ZW50Ci0g
U29tZXRpbWVzIGl0IHdpbGwgbWFrZSBzZW5zZSB0byBtYWtlIGEgZ2VuZXJp
YyBzdHlsZSBkZWZpbmluZyBgYW5kcm9pZDpsYXlvdXRfd2lkdGhgIGFuZCBg
YW5kcm9pZDpsYXlvdXRfaGVpZ2h0YCBidXQgYnkgZGVmYXVsdCB0aGVzZSBz
aG91bGQgYXBwZWFyIGluIHRoZSBsYXlvdXQgZmlsZXMKCjxhIG5hbWU9InN0
eWxlcyI+PC9hPgoqKlVzZSBzdHlsZXMuKiogQWxtb3N0IGV2ZXJ5IHByb2pl
Y3QgbmVlZHMgdG8gcHJvcGVybHkgdXNlIHN0eWxlcywgYmVjYXVzZSBpdCBp
cyB2ZXJ5IGNvbW1vbiB0byBoYXZlIGEgcmVwZWF0ZWQgYXBwZWFyYW5jZSBm
b3IgYSB2aWV3LiBBdCBsZWFzdCB5b3Ugc2hvdWxkIGhhdmUgYSBjb21tb24g
c3R5bGUgZm9yIG1vc3QgdGV4dCBjb250ZW50IGluIHRoZSBhcHBsaWNhdGlv
biwgZm9yIGV4YW1wbGU6CgpgYGB4bWwKPHN0eWxlIG5hbWU9IkNvbnRlbnRU
ZXh0Ij4KICAgIDxpdGVtIG5hbWU9ImFuZHJvaWQ6dGV4dFNpemUiPkBkaW1l
bi9mb250X25vcm1hbDwvaXRlbT4KICAgIDxpdGVtIG5hbWU9ImFuZHJvaWQ6
dGV4dENvbG9yIj5AY29sb3IvYmFzaWNfYmxhY2s8L2l0ZW0+Cjwvc3R5bGU+
CmBgYAoKQXBwbGllZCB0byBUZXh0Vmlld3M6CgpgYGB4bWwKPFRleHRWaWV3
CiAgICBhbmRyb2lkOmxheW91dF93aWR0aD0id3JhcF9jb250ZW50IgogICAg
YW5kcm9pZDpsYXlvdXRfaGVpZ2h0PSJ3cmFwX2NvbnRlbnQiCiAgICBhbmRy
b2lkOnRleHQ9IkBzdHJpbmcvcHJpY2UiCiAgICBzdHlsZT0iQHN0eWxlL0Nv
bnRlbnRUZXh0IgogICAgLz4KYGBgCgpZb3UgcHJvYmFibHkgd2lsbCBuZWVk
IHRvIGRvIHRoZSBzYW1lIGZvciBidXR0b25zLCBidXQgZG9uJ3Qgc3RvcCB0
aGVyZSB5ZXQuIEdvIGJleW9uZCBhbmQgbW92ZSBhIGdyb3VwIG9mIHJlbGF0
ZWQgYW5kIHJlcGVhdGVkIGBhbmRyb2lkOioqKipgIGF0dHJpYnV0ZXMgdG8g
YSBjb21tb24gc3R5bGUuCgo8YSBuYW1lPSJzcGxpdHN0eWxlcyI+PC9hPgoq
KlNwbGl0IGEgbGFyZ2Ugc3R5bGUgZmlsZSBpbnRvIG90aGVyIGZpbGVzLioq
IFlvdSBkb24ndCBuZWVkIHRvIGhhdmUgYSBzaW5nbGUgYHN0eWxlcy54bWxg
IGZpbGUuIEFuZHJvaWQgU0RLIHN1cHBvcnRzIG90aGVyIGZpbGVzIG91dCBv
ZiB0aGUgYm94LCB0aGVyZSBpcyBub3RoaW5nIG1hZ2ljYWwgYWJvdXQgdGhl
IG5hbWUgYHN0eWxlc2AsIHdoYXQgbWF0dGVycyBhcmUgdGhlIFhNTCB0YWdz
IGA8c3R5bGU+YCBpbnNpZGUgdGhlIGZpbGUuIEhlbmNlIHlvdSBjYW4gaGF2
ZSBmaWxlcyBgc3R5bGVzLnhtbGAsIGBzdHlsZXNfaG9tZS54bWxgLCBgc3R5
bGVzX2l0ZW1fZGV0YWlscy54bWxgLCBgc3R5bGVzX2Zvcm1zLnhtbGAuIFVu
bGlrZSByZXNvdXJjZSBkaXJlY3RvcnkgbmFtZXMgd2hpY2ggY2Fycnkgc29t
ZSBtZWFuaW5nIGZvciB0aGUgYnVpbGQgc3lzdGVtLCBmaWxlbmFtZXMgaW4g
YHJlcy92YWx1ZXNgIGNhbiBiZSBhcmJpdHJhcnkuCgo8YSBuYW1lPSJjb2xv
cnN4bWwiPjwvYT4KKipgY29sb3JzLnhtbGAgaXMgYSBjb2xvciBwYWxldHRl
LioqIFRoZXJlIHNob3VsZCBiZSBub3RoaW5nIGluIHlvdXIgYGNvbG9ycy54
bWxgIG90aGVyIHRoYW4gYSBtYXBwaW5nIGZyb20gYSBjb2xvciBuYW1lIHRv
IGFuIFJHQkEgdmFsdWUuIFRoaXMgaGVscHMgYXZvaWQgcmVwZWF0aW5nIFJH
QkEgdmFsdWVzIGFuZCBhcyBzdWNoIHdpbGwgbWFrZSBpdCBlYXN5IHRvIGNo
YW5nZSBvciByZWZhY3RvciBjb2xvcnMsIGFuZCBhbHNvIHdpbGwgbWFrZSBp
dCBleHBsaWNpdCBob3cgbWFueSBkaWZmZXJlbnQgY29sb3JzIGFyZSBiZWlu
ZyB1c2VkLiBOb3JtYWxseSBmb3IgYSBhZXN0aGV0aWMgVUksIGl0IGlzIGlt
cG9ydGFudCB0byByZWR1Y2UgdGhlIHZhcmlldHkgb2YgY29sb3JzIGJlaW5n
IHVzZWQuCiAKKlNvLCBkb24ndCBkZWZpbmUgeW91ciBjb2xvcnMueG1sIGxp
a2UgdGhpczoqCgpgYGB4bWwKPHJlc291cmNlcz4KICAgIDxjb2xvciBuYW1l
PSJidXR0b25fZm9yZWdyb3VuZCI+I0ZGRkZGRjwvY29sb3I+CiAgICA8Y29s
b3IgbmFtZT0iYnV0dG9uX2JhY2tncm91bmQiPiMyQTkxQkQ8L2NvbG9yPgo8
L3Jlc291cmNlcz4gICAgCmBgYAoKSW5zdGVhZCwgZG8gdGhpczoKCmBgYHht
bAo8cmVzb3VyY2VzPgogICAgPCEtLSBncmF5c2NhbGUgLS0+CiAgICA8Y29s
b3IgbmFtZT0id2hpdGUiPiNGRkZGRkY8L2NvbG9yPgogICAKICAgIDwhLS0g
YmFzaWMgY29sb3JzIC0tPgogICAgPGNvbG9yIG5hbWU9ImJsdWUiPiMyQTkx
QkQ8L2NvbG9yPgo8L3Jlc291cmNlcz4KYGBgCgpBc2sgdGhlIGRlc2lnbmVy
IG9mIHRoZSBhcHBsaWNhdGlvbiBmb3IgdGhpcyBwYWxldHRlLiBUaGUgbmFt
ZXMgZG8gbm90IG5lZWQgdG8gYmUgcGxhaW4gY29sb3IgbmFtZXMgYXMgImdy
ZWVuIiwgImJsdWUiLCBldGMuIE5hbWVzIHN1Y2ggYXMgImJyYW5kX3ByaW1h
cnkiLCAiYnJhbmRfc2Vjb25kYXJ5IiwgImJyYW5kX25lZ2F0aXZlIiBhcmUg
dG90YWxseSBhY2NlcHRhYmxlIGFzIHdlbGwuCgpCeSByZWZlcmVuY2luZyB0
aGUgY29sb3IgcGFsZXR0ZSBmcm9tIHlvdXIgc3R5bGVzIGFsbG93cyB5b3Ug
dG8gYWJzdHJhY3QgdGhlIHVuZGVybHlpbmcgY29sb3JzIGZyb20gdGhlaXIg
dXNhZ2UgaW4gdGhlIGFwcCwgYXMgcGVyOgoKLSBgY29sb3JzLnhtbGAgLSBk
ZWZpbmVzIG9ubHkgdGhlIGNvbG9yIHBhbGV0dGUuCi0gYHN0eWxlcy54bWxg
IC0gZGVmaW5lcyBzdHlsZXMgd2hpY2ggcmVmZXJlbmNlIHRoZSBjb2xvciBw
YWxldHRlIGFuZCByZWZsZWN0cyB0aGUgY29sb3IgdXNhZ2UuIChlLmcuIHRo
ZSBidXR0b24gZm9yZWdyb3VuZCBpcyB3aGl0ZSkuCi0gYGFjdGl2aXR5X21h
aW4ueG1sYCAtIHJlZmVyZW5jZXMgdGhlIGFwcHJvcHJpYXRlIHN0eWxlIGlu
IGBzdHlsZXMueG1sYCB0byBjb2xvciB0aGUgYnV0dG9uLgoKSWYgbmVlZGVk
LCBldmVuIGZ1cnRoZXIgc2VwYXJhdGlvbiBiZXR3ZWVuIHVuZGVybHlpbmcg
Y29sb3JzIGFuZCBzdHlsZSB1c2FnZSBjYW4gYmUgYWNoaWV2ZWQgYnkgZGVm
aW5lZCBhbiBhZGRpdGlvbmFsIGNvbG9yIHJlc291cmNlIGZpbGUgd2hpY2gg
cmVmZXJlbmNlcyB0aGUgY29sb3IgcGFsZXR0ZS4gQXMgcGVyOgoKYGBgeG1s
Cjxjb2xvciBuYW1lPSJidXR0b25fZm9yZWdyb3VuZCI+QGNvbG9yL3doaXRl
PC9jb2xvcj4gCjxjb2xvciBuYW1lPSJidXR0b25fYmFja2dyb3VuZCI+QGNv
bG9yL2JsdWU8L2NvbG9yPiAKYGBgCgpUaGVuIGluIHN0eWxlcy54bWw6Cgpg
YGB4bWwKPHN0eWxlIG5hbWU9IkFjY2VwdEJ1dHRvbiI+CiAgICA8aXRlbSBu
YW1lPSJhbmRyb2lkOmZvcmVncm91bmQiPkBjb2xvci9idXR0b25fZm9yZWdy
b3VuZDwvaXRlbT4KICAgIDxpdGVtIG5hbWU9ImFuZHJvaWQ6YmFja2dyb3Vu
ZCI+QGNvbG9yL2J1dHRvbl9iYWNrZ3JvdW5kPC9pdGVtPgo8L3N0eWxlPgpg
YGAKClRoaXMgYXBwcm9hY2ggb2ZmZXJzIGltcHJvdmVkIGNvbG9yIHJlZmFj
dG9yaW5nIGFuZCBtb3JlIHN0YWJsZSBzdHlsZSBkZWZpbml0aW9ucyB3aGVu
IG11bHRpcGxlIHJlbGF0ZWQgc3R5bGVzIHNoYXJlIHNpbWlsYXIgY29sb3Ig
YW5kIHVzYWdlIHByb3BlcnRpZXMuIEhvd2V2ZXIsIGl0IGNvbWVzIGF0IHRo
ZSBjb3N0IG9mIG1haW50YWluaW5nIGFub3RoZXIgc2V0IG9mIGNvbG9yIG1h
cHBpbmdzLiAKCjxhIG5hbWU9ImRpbWVuc3htbCI+PC9hPgoqKlRyZWF0IGRp
bWVucy54bWwgbGlrZSBjb2xvcnMueG1sLioqIFlvdSBzaG91bGQgYWxzbyBk
ZWZpbmUgYSAicGFsZXR0ZSIgb2YgdHlwaWNhbCBzcGFjaW5nIGFuZCBmb250
IHNpemVzLCBmb3IgYmFzaWNhbGx5IHRoZSBzYW1lIHB1cnBvc2VzIGFzIGZv
ciBjb2xvcnMuIEEgZ29vZCBleGFtcGxlIG9mIGEgZGltZW5zIGZpbGU6Cgpg
YGB4bWwKPHJlc291cmNlcz4KCiAgICA8IS0tIGZvbnQgc2l6ZXMgLS0+CiAg
ICA8ZGltZW4gbmFtZT0iZm9udF9sYXJnZXIiPjIyc3A8L2RpbWVuPgogICAg
PGRpbWVuIG5hbWU9ImZvbnRfbGFyZ2UiPjE4c3A8L2RpbWVuPgogICAgPGRp
bWVuIG5hbWU9ImZvbnRfbm9ybWFsIj4xNXNwPC9kaW1lbj4KICAgIDxkaW1l
biBuYW1lPSJmb250X3NtYWxsIj4xMnNwPC9kaW1lbj4KCiAgICA8IS0tIHR5
cGljYWwgc3BhY2luZyBiZXR3ZWVuIHR3byB2aWV3cyAtLT4KICAgIDxkaW1l
biBuYW1lPSJzcGFjaW5nX2h1Z2UiPjQwZHA8L2RpbWVuPgogICAgPGRpbWVu
IG5hbWU9InNwYWNpbmdfbGFyZ2UiPjI0ZHA8L2RpbWVuPgogICAgPGRpbWVu
IG5hbWU9InNwYWNpbmdfbm9ybWFsIj4xNGRwPC9kaW1lbj4KICAgIDxkaW1l
biBuYW1lPSJzcGFjaW5nX3NtYWxsIj4xMGRwPC9kaW1lbj4KICAgIDxkaW1l
biBuYW1lPSJzcGFjaW5nX3RpbnkiPjRkcDwvZGltZW4+CgogICAgPCEtLSB0
eXBpY2FsIHNpemVzIG9mIHZpZXdzIC0tPgogICAgPGRpbWVuIG5hbWU9ImJ1
dHRvbl9oZWlnaHRfdGFsbCI+NjBkcDwvZGltZW4+CiAgICA8ZGltZW4gbmFt
ZT0iYnV0dG9uX2hlaWdodF9ub3JtYWwiPjQwZHA8L2RpbWVuPgogICAgPGRp
bWVuIG5hbWU9ImJ1dHRvbl9oZWlnaHRfc2hvcnQiPjMyZHA8L2RpbWVuPgoK
PC9yZXNvdXJjZXM+CmBgYAoKWW91IHNob3VsZCB1c2UgdGhlIGBzcGFjaW5n
XyoqKipgIGRpbWVuc2lvbnMgZm9yIGxheW91dGluZywgaW4gbWFyZ2lucyBh
bmQgcGFkZGluZ3MsIGluc3RlYWQgb2YgaGFyZC1jb2RlZCB2YWx1ZXMsIG11
Y2ggbGlrZSBzdHJpbmdzIGFyZSBub3JtYWxseSB0cmVhdGVkLiBUaGlzIHdp
bGwgZ2l2ZSBhIGNvbnNpc3RlbnQgbG9vay1hbmQtZmVlbCwgd2hpbGUgbWFr
aW5nIGl0IGVhc2llciB0byBvcmdhbml6ZSBhbmQgY2hhbmdlIHN0eWxlcyBh
bmQgbGF5b3V0cy4KCioqc3RyaW5ncy54bWwqKgoKTmFtZSB5b3VyIHN0cmlu
Z3Mgd2l0aCBrZXlzIHRoYXQgcmVzZW1ibGUgbmFtZXNwYWNlcywgYW5kIGRv
bid0IGJlIGFmcmFpZCBvZiByZXBlYXRpbmcgYSB2YWx1ZSBmb3IgdHdvIG9y
IG1vcmUga2V5cy4gTGFuZ3VhZ2VzIGFyZSBjb21wbGV4LCBzbyBuYW1lc3Bh
Y2VzIGFyZSBuZWNlc3NhcnkgdG8gYnJpbmcgY29udGV4dCBhbmQgYnJlYWsg
YW1iaWd1aXR5LgoKKipCYWQqKgpgYGB4bWwKPHN0cmluZyBuYW1lPSJuZXR3
b3JrX2Vycm9yIj5OZXR3b3JrIGVycm9yPC9zdHJpbmc+CjxzdHJpbmcgbmFt
ZT0iY2FsbF9mYWlsZWQiPkNhbGwgZmFpbGVkPC9zdHJpbmc+CjxzdHJpbmcg
bmFtZT0ibWFwX2ZhaWxlZCI+TWFwIGxvYWRpbmcgZmFpbGVkPC9zdHJpbmc+
CmBgYAoKKipHb29kKioKYGBgeG1sCjxzdHJpbmcgbmFtZT0iZXJyb3JfbWVz
c2FnZV9uZXR3b3JrIj5OZXR3b3JrIGVycm9yPC9zdHJpbmc+CjxzdHJpbmcg
bmFtZT0iZXJyb3JfbWVzc2FnZV9jYWxsIj5DYWxsIGZhaWxlZDwvc3RyaW5n
Pgo8c3RyaW5nIG5hbWU9ImVycm9yX21lc3NhZ2VfbWFwIj5NYXAgbG9hZGlu
ZyBmYWlsZWQ8L3N0cmluZz4KYGBgCgpEb24ndCB3cml0ZSBzdHJpbmcgdmFs
dWVzIGluIGFsbCB1cHBlcmNhc2UuIFN0aWNrIHRvIG5vcm1hbCB0ZXh0IGNv
bnZlbnRpb25zIChlLmcuLCBjYXBpdGFsaXplIGZpcnN0IGNoYXJhY3Rlciku
IElmIHlvdSBuZWVkIHRvIGRpc3BsYXkgdGhlIHN0cmluZyBpbiBhbGwgY2Fw
cywgdGhlbiBkbyB0aGF0IHVzaW5nIGZvciBpbnN0YW5jZSB0aGUgYXR0cmli
dXRlIFtgdGV4dEFsbENhcHNgXShodHRwOi8vZGV2ZWxvcGVyLmFuZHJvaWQu
Y29tL3JlZmVyZW5jZS9hbmRyb2lkL3dpZGdldC9UZXh0Vmlldy5odG1sI2F0
dHJfYW5kcm9pZDp0ZXh0QWxsQ2Fwcykgb24gYSBUZXh0Vmlldy4KCioqQmFk
KioKYGBgeG1sCjxzdHJpbmcgbmFtZT0iZXJyb3JfbWVzc2FnZV9jYWxsIj5D
QUxMIEZBSUxFRDwvc3RyaW5nPgpgYGAKCioqR29vZCoqCmBgYHhtbAo8c3Ry
aW5nIG5hbWU9ImVycm9yX21lc3NhZ2VfY2FsbCI+Q2FsbCBmYWlsZWQ8L3N0
cmluZz4KYGBgCgo8YSBuYW1lPSJkZWVwaGllcmFyY2h5Ij48L2E+CioqQXZv
aWQgYSBkZWVwIGhpZXJhcmNoeSBvZiB2aWV3cy4qKiBTb21ldGltZXMgeW91
IG1pZ2h0IGJlIHRlbXB0ZWQgdG8ganVzdCBhZGQgeWV0IGFub3RoZXIgTGlu
ZWFyTGF5b3V0LCB0byBiZSBhYmxlIHRvIGFjY29tcGxpc2ggYW4gYXJyYW5n
ZW1lbnQgb2Ygdmlld3MuIFRoaXMga2luZCBvZiBzaXR1YXRpb24gbWF5IG9j
Y3VyOgoKYGBgeG1sCjxMaW5lYXJMYXlvdXQKICAgIGFuZHJvaWQ6bGF5b3V0
X3dpZHRoPSJtYXRjaF9wYXJlbnQiCiAgICBhbmRyb2lkOmxheW91dF9oZWln
aHQ9Im1hdGNoX3BhcmVudCIKICAgIGFuZHJvaWQ6b3JpZW50YXRpb249InZl
cnRpY2FsIgogICAgPgoKICAgIDxSZWxhdGl2ZUxheW91dAogICAgICAgIC4u
LgogICAgICAgID4KCiAgICAgICAgPExpbmVhckxheW91dAogICAgICAgICAg
ICAuLi4KICAgICAgICAgICAgPgoKICAgICAgICAgICAgPExpbmVhckxheW91
dAogICAgICAgICAgICAgICAgLi4uCiAgICAgICAgICAgICAgICA+CgogICAg
ICAgICAgICAgICAgPExpbmVhckxheW91dAogICAgICAgICAgICAgICAgICAg
IC4uLgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwv
TGluZWFyTGF5b3V0PgoKICAgICAgICAgICAgPC9MaW5lYXJMYXlvdXQ+Cgog
ICAgICAgIDwvTGluZWFyTGF5b3V0PgoKICAgIDwvUmVsYXRpdmVMYXlvdXQ+
Cgo8L0xpbmVhckxheW91dD4KYGBgCgpFdmVuIGlmIHlvdSBkb24ndCB3aXRu
ZXNzIHRoaXMgZXhwbGljaXRseSBpbiBhIGxheW91dCBmaWxlLCBpdCBtaWdo
dCBlbmQgdXAgaGFwcGVuaW5nIGlmIHlvdSBhcmUgaW5mbGF0aW5nIChpbiBK
YXZhKSB2aWV3cyBpbnRvIG90aGVyIHZpZXdzLgoKQSBjb3VwbGUgb2YgcHJv
YmxlbXMgbWF5IG9jY3VyLiBZb3UgbWlnaHQgZXhwZXJpZW5jZSBwZXJmb3Jt
YW5jZSBwcm9ibGVtcywgYmVjYXVzZSB0aGVyZSBpcyBhIGNvbXBsZXggVUkg
dHJlZSB0aGF0IHRoZSBwcm9jZXNzb3IgbmVlZHMgdG8gaGFuZGxlLiBBbm90
aGVyIG1vcmUgc2VyaW91cyBpc3N1ZSBpcyBhIHBvc3NpYmlsaXR5IG9mIFtT
dGFja092ZXJmbG93RXJyb3JdKGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9x
dWVzdGlvbnMvMjc2MjkyNC9qYXZhLWxhbmctc3RhY2tvdmVyZmxvdy1lcnJv
ci1zdXNwZWN0ZWQtdG9vLW1hbnktdmlld3MpLgoKVGhlcmVmb3JlLCB0cnkg
dG8ga2VlcCB5b3VyIHZpZXdzIGhpZXJhcmNoeSBhcyBmbGF0IGFzIHBvc3Np
YmxlOiBsZWFybiBob3cgdG8gdXNlIFtDb25zdHJhaW50TGF5b3V0XShodHRw
czovL2RldmVsb3Blci5hbmRyb2lkLmNvbS90cmFpbmluZy9jb25zdHJhaW50
LWxheW91dC9pbmRleC5odG1sKSwgaG93IHRvIFtvcHRpbWl6ZSB5b3VyIGxh
eW91dHNdKGh0dHA6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vdHJhaW5pbmcv
aW1wcm92aW5nLWxheW91dHMvb3B0aW1pemluZy1sYXlvdXQuaHRtbCkgYW5k
IHRvIHVzZSB0aGUgW2A8bWVyZ2U+YCB0YWddKGh0dHA6Ly9zdGFja292ZXJm
bG93LmNvbS9xdWVzdGlvbnMvODgzNDg5OC93aGF0LWlzLXRoZS1wdXJwb3Nl
LW9mLWFuZHJvaWRzLW1lcmdlLXRhZy1pbi14bWwtbGF5b3V0cykuCgo8YSBu
YW1lPSJ3ZWJ2aWV3cyI+PC9hPgoqKkJld2FyZSBvZiBwcm9ibGVtcyByZWxh
dGVkIHRvIFdlYlZpZXdzLioqIFdoZW4geW91IG11c3QgZGlzcGxheSBhIHdl
YiBwYWdlLCBmb3IgaW5zdGFuY2UgZm9yIGEgbmV3cyBhcnRpY2xlLCBhdm9p
ZCBkb2luZyBjbGllbnQtc2lkZSBwcm9jZXNzaW5nIHRvIGNsZWFuIHRoZSBI
VE1MLCByYXRoZXIgYXNrIGZvciBhICIqcHVyZSoiIEhUTUwgZnJvbSB0aGUg
YmFja2VuZCBwcm9ncmFtbWVycy4gW1dlYlZpZXdzIGNhbiBhbHNvIGxlYWsg
bWVtb3J5XShodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzMx
MzA2NTQvbWVtb3J5LWxlYWstaW4td2Vidmlldykgd2hlbiB0aGV5IGtlZXAg
YSByZWZlcmVuY2UgdG8gdGhlaXIgQWN0aXZpdHksIGluc3RlYWQgb2YgYmVp
bmcgYm91bmQgdG8gdGhlIEFwcGxpY2F0aW9uQ29udGV4dC4gQXZvaWQgdXNp
bmcgYSBXZWJWaWV3IGZvciBzaW1wbGUgdGV4dHMgb3IgYnV0dG9ucywgcHJl
ZmVyIHRoZSBwbGF0Zm9ybSdzIHdpZGdldHMuCgoKIyMjIFRlc3QgRnJhbWV3
b3JrcwoKKipVc2UgW0pVbml0XShodHRwczovL2RldmVsb3Blci5hbmRyb2lk
LmNvbS90cmFpbmluZy90ZXN0aW5nL3VuaXQtdGVzdGluZy9sb2NhbC11bml0
LXRlc3RzLmh0bWwpIGZvciB1bml0IHRlc3RpbmcqKiBQbGFpbiwgQW5kcm9p
ZCBkZXBlbmRlbmN5LWZyZWUgdW5pdCB0ZXN0aW5nIG9uIHRoZSBKVk0gaXMg
YmVzdCBkb25lIHVzaW5nIFtKdW5pdF0oaHR0cHM6Ly9qdW5pdC5vcmcpLiAK
CioqQXZvaWQgW1JvYm9sZWN0cmljXShodHRwOi8vcm9ib2xlY3RyaWMub3Jn
LykqKiBQcmlvciB0byB0aGUgaW1wcm92ZWQgc3VwcG9ydCBmb3IgSlVuaXQg
aW4gdGhlIEFuZHJvaWQgYnVpbGQgc3lzdGVtLCBSb2JvbGVjdHJpYyB3YXMg
cHJvbW90ZWQgYXMgYSB0ZXN0IGZyYW1ld29yayBzZWVraW5nIHRvIHByb3Zp
ZGUgdGVzdHMgImRpc2Nvbm5lY3RlZCBmcm9tIGRldmljZSIgZm9yIHRoZSBz
YWtlIG9mIGRldmVsb3BtZW50IHNwZWVkLiBIb3dldmVyLCB0ZXN0aW5nIHVu
ZGVyIFJvYm9sZWN0cmljIGlzIGluYWNjdXJhdGUgYW5kIGluY29tcGxldGUg
YXMgaXQgd29ya3MgYnkgcHJvdmlkaW5nIG1vY2sgaW1wbGVtZW50YXRpb25z
IG9mIHRoZSBBbmRyb2lkIHBsYXRmb3JtLCB3aGljaCBwcm92aWRlcyBubyBn
dWFyYW50ZWVzIG9mIGNvcnJlY3RuZXNzLiBJbnN0ZWFkLCB1c2UgYSBjb21i
aW5hdGlvbiBvZiBKVk0gYmFzZWQgdW5pdCB0ZXN0cyBhbmQgZGVkaWNhdGVk
IG9uLWRldmljZSBpbnRlZ3JhdGlvbiB0ZXN0cy4KCioqW0VzcHJlc3NvXSho
dHRwczovL2RldmVsb3Blci5hbmRyb2lkLmNvbS90cmFpbmluZy90ZXN0aW5n
L3VpLXRlc3RpbmcvZXNwcmVzc28tdGVzdGluZy5odG1sKSBtYWtlcyB3cml0
aW5nIFVJIHRlc3RzIGVhc3kuKioKCioqW0Fzc2VydEotQW5kcm9pZF0oaHR0
cDovL3NxdWFyZS5naXRodWIuaW8vYXNzZXJ0ai1hbmRyb2lkLykgYW4gQXNz
ZXJ0SiBleHRlbnNpb24gbGlicmFyeSBtYWtpbmcgYXNzZXJ0aW9ucyBlYXN5
IGluIEFuZHJvaWQgdGVzdHMqKiAgQXNzZXJ0LUogY29tZXMgbW9kdWxlcyBl
YXNpZXIgZm9yIHlvdSB0byB0ZXN0IEFuZHJvaWQgc3BlY2lmaWMgY29tcG9u
ZW50cywgc3VjaCBhcyB0aGUgQW5kcm9pZCBTdXBwb3J0LCBHb29nbGUgUGxh
eSBTZXJ2aWNlcyBhbmQgQXBwY29tcGF0IGxpYnJhcmllcy4KCkEgdGVzdCBh
c3NlcnRpb24gd2lsbCBsb29rIGxpa2U6CgpgYGBqYXZhCi8vIEV4YW1wbGUg
YXNzZXJ0aW9uIHVzaW5nIEFzc2VydEotQW5kcm9pZAphc3NlcnRUaGF0KGxh
eW91dCkuaXNWaXNpYmxlKCkKICAgIC5pc1ZlcnRpY2FsKCkKICAgIC5oYXND
aGlsZENvdW50KDUpOwpgYGAKCiMjIyBFbXVsYXRvcnMKClRoZSBwZXJmb3Jt
YW5jZSBvZiB0aGUgQW5kcm9pZCBTREsgZW11bGF0b3IsIHBhcnRpY3VsYXJs
eSB0aGUgeDg2IHZhcmlhbnQsIGhhcyBpbXByb3ZlbWVudCBtYXJrZWRseSBp
biByZWNlbnQgeWVhcnMgYW5kIGlzIG5vdyBhZGVxdWF0ZSBmb3IgbW9zdCBk
YXktdG8tZGF5IGRldmVsb3BtZW50IHNjZW5hcmlvcy4gSG93ZXZlciwgeW91
IHNob3VsZCBub3QgZGlzY291bnQgdGhlIHZhbHVlIG9mIGVuc3VyaW5nIHlv
dXIgYXBwbGljYXRpb24gYmVoYXZlcyBjb3JyZWN0bHkgb24gcmVhbCBkZXZp
Y2VzLiBPZiBjb3Vyc2UsIHRlc3Rpbmcgb24gYWxsIHBvc3NpYmxlIGRldmlj
ZXMgaXMgbm90IHByYWN0aWNhbCwgc28gcmF0aGVyIGZvY3VzIHlvdXIgZWZm
b3J0cyBvbiBkZXZpY2VzIHdpdGggYSBsYXJnZSBtYXJrZXQgc2hhcmUgYW5k
IHRob3NlIG1vc3QgcmVsZXZhbnQgdG8geW91ciBhcHAuCgojIyMgUHJvZ3Vh
cmQgY29uZmlndXJhdGlvbgoKW1Byb0d1YXJkXShodHRwOi8vcHJvZ3VhcmQu
c291cmNlZm9yZ2UubmV0LykgaXMgbm9ybWFsbHkgdXNlZCBvbiBBbmRyb2lk
IHByb2plY3RzIHRvIHNocmluayBhbmQgb2JmdXNjYXRlIHRoZSBwYWNrYWdl
ZCBjb2RlLgoKV2hldGhlciB5b3UgYXJlIHVzaW5nIFByb0d1YXJkIG9yIG5v
dCBkZXBlbmRzIG9uIHlvdXIgcHJvamVjdCBjb25maWd1cmF0aW9uLiBVc3Vh
bGx5IHlvdSB3b3VsZCBjb25maWd1cmUgR3JhZGxlIHRvIHVzZSBQcm9HdWFy
ZCB3aGVuIGJ1aWxkaW5nIGEgcmVsZWFzZSBBUEsuCgpgYGBncm9vdnkKYnVp
bGRUeXBlcyB7CiAgICBkZWJ1ZyB7CiAgICAgICAgbWluaWZ5RW5hYmxlZCBm
YWxzZQogICAgfQogICAgcmVsZWFzZSB7CiAgICAgICAgc2lnbmluZ0NvbmZp
ZyBzaWduaW5nQ29uZmlncy5yZWxlYXNlCiAgICAgICAgbWluaWZ5RW5hYmxl
ZCB0cnVlCiAgICAgICAgcHJvZ3VhcmRGaWxlcyBnZXREZWZhdWx0UHJvZ3Vh
cmRGaWxlKCdwcm9ndWFyZC1hbmRyb2lkLnR4dCcpLCAncHJvZ3VhcmQtcnVs
ZXMucHJvJwogICAgfQp9CmBgYAoKSW4gb3JkZXIgdG8gZGV0ZXJtaW5lIHdo
aWNoIGNvZGUgaGFzIHRvIGJlIHByZXNlcnZlZCBhbmQgd2hpY2ggY29kZSBj
YW4gYmUgZGlzY2FyZGVkIG9yIG9iZnVzY2F0ZWQsIHlvdSBoYXZlIHRvIHNw
ZWNpZnkgb25lIG9yIG1vcmUgZW50cnkgcG9pbnRzIHRvIHlvdXIgY29kZS4g
VGhlc2UgZW50cnkgcG9pbnRzIGFyZSB0eXBpY2FsbHkgY2xhc3NlcyB3aXRo
IG1haW4gbWV0aG9kcywgYXBwbGV0cywgbWlkbGV0cywgYWN0aXZpdGllcywg
ZXRjLgpBbmRyb2lkIGZyYW1ld29yayB1c2VzIGEgZGVmYXVsdCBjb25maWd1
cmF0aW9uIHdoaWNoIGNhbiBiZSBmb3VuZCBmcm9tIGBTREtfSE9NRS90b29s
cy9wcm9ndWFyZC9wcm9ndWFyZC1hbmRyb2lkLnR4dGAuIFVzaW5nIHRoZSBh
Ym92ZSBjb25maWd1cmF0aW9uLCBjdXN0b20gcHJvamVjdC1zcGVjaWZpYyBQ
cm9HdWFyZCBydWxlcywgYXMgZGVmaW5lZCBpbiBgbXktcHJvamVjdC9hcHAv
cHJvZ3VhcmQtcnVsZXMucHJvYCwgd2lsbCBiZSBhcHBlbmRlZCB0byB0aGUg
ZGVmYXVsdCBjb25maWd1cmF0aW9uLgoKQSBjb21tb24gcHJvYmxlbSByZWxh
dGVkIHRvIFByb0d1YXJkIGlzIHRvIHNlZSB0aGUgYXBwbGljYXRpb24gY3Jh
c2hpbmcgb24gc3RhcnR1cCB3aXRoIGBDbGFzc05vdEZvdW5kRXhjZXB0aW9u
YCBvciBgTm9TdWNoRmllbGRFeGNlcHRpb25gIG9yIHNpbWlsYXIsIGV2ZW4g
dGhvdWdoIHRoZSBidWlsZCBjb21tYW5kIChpLmUuIGBhc3NlbWJsZVJlbGVh
c2VgKSBzdWNjZWVkZWQgd2l0aG91dCB3YXJuaW5ncy4KVGhpcyBtZWFucyBv
bmUgb3V0IG9mIHR3byB0aGluZ3M6CgoxLiBQcm9HdWFyZCBoYXMgcmVtb3Zl
ZCB0aGUgY2xhc3MsIGVudW0sIG1ldGhvZCwgZmllbGQgb3IgYW5ub3RhdGlv
biwgY29uc2lkZXJpbmcgaXQncyBub3QgcmVxdWlyZWQuCjIuIFByb0d1YXJk
IGhhcyBvYmZ1c2NhdGVkIChyZW5hbWVkKSB0aGUgY2xhc3MsIGVudW0gb3Ig
ZmllbGQgbmFtZSwgYnV0IGl0J3MgYmVpbmcgdXNlZCBpbmRpcmVjdGx5IGJ5
IGl0cyBvcmlnaW5hbCBuYW1lLCBpLmUuIHRocm91Z2ggSmF2YSByZWZsZWN0
aW9uLgoKQ2hlY2sgYGFwcC9idWlsZC9vdXRwdXRzL3Byb2d1YXJkL3JlbGVh
c2UvdXNhZ2UudHh0YCB0byBzZWUgaWYgdGhlIG9iamVjdCBpbiBxdWVzdGlv
biBoYXMgYmVlbiByZW1vdmVkLgpDaGVjayBgYXBwL2J1aWxkL291dHB1dHMv
cHJvZ3VhcmQvcmVsZWFzZS9tYXBwaW5nLnR4dGAgdG8gc2VlIGlmIHRoZSBv
YmplY3QgaW4gcXVlc3Rpb24gaGFzIGJlZW4gb2JmdXNjYXRlZC4KCkluIG9y
ZGVyIHRvIHByZXZlbnQgUHJvR3VhcmQgZnJvbSAqc3RyaXBwaW5nIGF3YXkq
IG5lZWRlZCBjbGFzc2VzIG9yIGNsYXNzIG1lbWJlcnMsIGFkZCBhIGBrZWVw
YCBvcHRpb25zIHRvIHlvdXIgUHJvR3VhcmQgY29uZmlnOgpgYGAKLWtlZXAg
Y2xhc3MgY29tLmZ1dHVyaWNlLnByb2plY3QuTXlDbGFzcyB7ICo7IH0KYGBg
CgpUbyBwcmV2ZW50IFByb0d1YXJkIGZyb20gKm9iZnVzY2F0aW5nKiBjbGFz
c2VzIG9yIGNsYXNzIG1lbWJlcnMsIGFkZCBhIGBrZWVwbmFtZXNgOgpgYGAK
LWtlZXBuYW1lcyBjbGFzcyBjb20uZnV0dXJpY2UucHJvamVjdC5NeUNsYXNz
IHsgKjsgfQpgYGAKClJlYWQgbW9yZSBhdCBbUHJvZ3VhcmRdKGh0dHBzOi8v
d3d3Lmd1YXJkc3F1YXJlLmNvbS9lbi9wcm9ndWFyZC9tYW51YWwvZXhhbXBs
ZXMpIGZvciBleGFtcGxlcy4KCioqRWFybHkgaW4geW91ciBwcm9qZWN0LCBt
YWtlIGFuZCB0ZXN0IHJlbGVhc2UgYnVpbGQqKiB0byBjaGVjayB3aGV0aGVy
IFByb0d1YXJkIHJ1bGVzIGFyZSBjb3JyZWN0bHkgcmV0YWluaW5nIHlvdXIg
ZGVwZW5kZW5jaWVzLiBBbHNvIHdoZW5ldmVyIHlvdSBpbmNsdWRlIG5ldyBs
aWJyYXJpZXMgb3IgdXBkYXRlIHRoZWlyIGRlcGVuZGVuY2llcywgbWFrZSBh
IHJlbGVhc2UgYnVpbGQgYW5kIHRlc3QgdGhlIEFQSyBvbiBhIGRldmljZS4g
RG9uJ3Qgd2FpdCB1bnRpbCB5b3VyIGFwcCBpcyBmaW5hbGx5IHZlcnNpb24g
IjEuMCIgdG8gbWFrZSBhIHJlbGVhc2UgYnVpbGQsIHlvdSBtaWdodCBnZXQg
c2V2ZXJhbCB1bnBsZWFzYW50IHN1cnByaXNlcyBhbmQgYSBzaG9ydCB0aW1l
IHRvIGZpeCB0aGVtLgoKKipUaXAuKiogU2F2ZSB0aGUgYG1hcHBpbmcudHh0
YCBmaWxlIGZvciBldmVyeSByZWxlYXNlIHRoYXQgeW91IHB1Ymxpc2ggdG8g
eW91ciB1c2Vycy4gQnkgcmV0YWluaW5nIGEgY29weSBvZiB0aGUgYG1hcHBp
bmcudHh0YCBmaWxlIGZvciBlYWNoIHJlbGVhc2UgYnVpbGQsIHlvdSBlbnN1
cmUgdGhhdCB5b3UgY2FuIGRlYnVnIGEgcHJvYmxlbSBpZiBhIHVzZXIgZW5j
b3VudGVycyBhIGJ1ZyBhbmQgc3VibWl0cyBhbiBvYmZ1c2NhdGVkIHN0YWNr
IHRyYWNlLgoKKipEZXhHdWFyZCoqLiBJZiB5b3UgbmVlZCBoYXJkLWNvcmUg
dG9vbHMgZm9yIG9wdGltaXppbmcsIGFuZCBzcGVjaWFsbHkgb2JmdXNjYXRp
bmcgcmVsZWFzZSBjb2RlLCBjb25zaWRlciBbRGV4R3VhcmRdKGh0dHA6Ly93
d3cuc2Fpa29hLmNvbS9kZXhndWFyZCksIGEgY29tbWVyY2lhbCBzb2Z0d2Fy
ZSBtYWRlIGJ5IHRoZSBzYW1lIHRlYW0gdGhhdCBidWlsdCBQcm9HdWFyZC4g
SXQgY2FuIGFsc28gZWFzaWx5IHNwbGl0IERleCBmaWxlcyB0byBzb2x2ZSB0
aGUgNjVrIG1ldGhvZHMgbGltaXRhdGlvbi4KCiMjIyBEYXRhIHN0b3JhZ2UK
CgojIyMjIFNoYXJlZFByZWZlcmVuY2VzCgpJZiB5b3Ugb25seSBuZWVkIHRv
IHBlcnNpc3Qgc2ltcGxlIHZhbHVlcyBhbmQgeW91ciBhcHBsaWNhdGlvbiBy
dW5zIGluIGEgc2luZ2xlIHByb2Nlc3MgU2hhcmVkUHJlZmVyZW5jZXMgaXMg
cHJvYmFibHkgZW5vdWdoIGZvciB5b3UuIEl0IGlzIGEgZ29vZCBkZWZhdWx0
IG9wdGlvbi4gCgpUaGVyZSBhcmUgc29tZSBzaXR1YXRpb25zIHdoZXJlIFNo
YXJlZFByZWZlcmVuY2VzIGFyZSBub3Qgc3VpdGFibGU6CgoqICpQZXJmb3Jt
YW5jZSo6IFlvdXIgZGF0YSBpcyBjb21wbGV4IG9yIHRoZXJlIGlzIGEgbG90
IG9mIGl0CiogKk11bHRpcGxlIHByb2Nlc3NlcyBhY2Nlc3NpbmcgdGhlIGRh
dGEqOiBZb3UgaGF2ZSB3aWRnZXRzIG9yIHJlbW90ZSBzZXJ2aWNlcyB0aGF0
IHJ1biBpbiB0aGVpciBvd24gcHJvY2Vzc2VzIGFuZCByZXF1aXJlIHN5bmNo
cm9uaXplZCBkYXRhCiogKlJlbGF0aW9uYWwgZGF0YSogRGlzdGluY3QgcGFy
dHMgb2YgeW91ciBkYXRhIGFyZSByZWxhdGlvbmFsIGFuZCB5b3Ugd2FudCB0
byBlbmZvcmNlIHRoYXQgdGhvc2UgcmVsYXRpb25zaGlwcyBhcmUgbWFpbnRh
aW5lZC4KCllvdSBjYW4gYWxzbyBzdG9yZSBtb3JlIGNvbXBsZXggb2JqZWN0
cyBieSBzZXJpYWxpemluZyB0aGVtIHRvIEpTT04gdG8gc3RvcmUgdGhlbSBh
bmQgZGVzZXJpYWxpemluZyB0aGVtIHdoZW4gcmV0cmlldmluZy4gWW91IHNo
b3VsZCBjb25zaWRlciB0aGUgdHJhZGVvZmZzIHdoZW4gZG9pbmcgdGhpcyBh
cyBpdCBtYXkgbm90IGJlIHBhcnRpY3VsYXJseSBwZXJmb3JtYW50LCBub3Ig
bWFpbnRhaW5hYmxlLgoKIyMjIyBDb250ZW50UHJvdmlkZXJzCgpJbiBjYXNl
IFNoYXJlZFByZWZlcmVuY2VzIGFyZSBub3QgZW5vdWdoLCB5b3Ugc2hvdWxk
IHVzZSB0aGUgcGxhdGZvcm0gc3RhbmRhcmQgQ29udGVudFByb3ZpZGVycywg
d2hpY2ggYXJlIGZhc3QgYW5kIHByb2Nlc3Mgc2FmZS4KClRoZSBzaW5nbGUg
cHJvYmxlbSB3aXRoIENvbnRlbnRQcm92aWRlcnMgaXMgdGhlIGFtb3VudCBv
ZiBib2lsZXJwbGF0ZSBjb2RlIHRoYXQgaXMgbmVlZGVkIHRvIHNldCB0aGVt
IHVwLCBhcyB3ZWxsIGFzIGxvdyBxdWFsaXR5IHR1dG9yaWFscy4gSXQgaXMg
cG9zc2libGUsIGhvd2V2ZXIsIHRvIGdlbmVyYXRlIHRoZSBDb250ZW50UHJv
dmlkZXIgYnkgdXNpbmcgYSBsaWJyYXJ5IHN1Y2ggYXMgW1NjaGVtYXRpY10o
aHR0cHM6Ly9naXRodWIuY29tL1NpbW9uVlQvc2NoZW1hdGljKSwgd2hpY2gg
c2lnbmlmaWNhbnRseSByZWR1Y2VzIHRoZSBlZmZvcnQuCgpZb3Ugc3RpbGwg
bmVlZCB0byB3cml0ZSBzb21lIHBhcnNpbmcgY29kZSB5b3Vyc2VsZiB0byBy
ZWFkIHRoZSBkYXRhIG9iamVjdHMgZnJvbSB0aGUgU3FsaXRlIGNvbHVtbnMg
YW5kIHZpY2UgdmVyc2EuIEl0IGlzIHBvc3NpYmxlIHRvIHNlcmlhbGl6ZSB0
aGUgZGF0YSBvYmplY3RzLCBmb3IgaW5zdGFuY2Ugd2l0aCBHc29uLCBhbmQg
b25seSBwZXJzaXN0IHRoZSByZXN1bHRpbmcgc3RyaW5nLiBJbiB0aGlzIHdh
eSB5b3UgbG9zZSBpbiBwZXJmb3JtYW5jZSBidXQgb24gdGhlIG90aGVyIGhh
bmQgeW91IGRvIG5vdCBuZWVkIHRvIGRlY2xhcmUgYSBjb2x1bW4gZm9yIGFs
bCB0aGUgZmllbGRzIG9mIHRoZSBkYXRhIGNsYXNzLgoKIyMjIyBVc2luZyBh
biBPUk0KCldlIGdlbmVyYWxseSBkbyBub3QgcmVjb21tZW5kIHVzaW5nIGFu
IE9iamVjdC1SZWxhdGlvbiBNYXBwaW5nIGxpYnJhcnkgdW5sZXNzIHlvdSBo
YXZlIHVudXN1YWxseSBjb21wbGV4IGRhdGEgYW5kIHlvdSBoYXZlIGEgZGly
ZSBuZWVkLiBUaGV5IHRlbmQgdG8gYmUgY29tcGxleCBhbmQgcmVxdWlyZSB0
aW1lIHRvIGxlYXJuLiBJZiB5b3UgZGVjaWRlIHRvIGdvIHdpdGggYW4gT1JN
IHlvdSBzaG91bGQgcGF5IGF0dGVudGlvbiB0byB3aGV0aGVyIG9yIG5vdCBp
dCBpcyBfcHJvY2VzcyBzYWZlXyBpZiB5b3VyIGFwcGxpY2F0aW9uIHJlcXVp
cmVzIGl0LCBhcyBtYW55IG9mIHRoZSBleGlzdGluZyBPUk0gc29sdXRpb25z
IHN1cnByaXNpbmdseSBhcmUgbm90LgoKIyMjIFVzZSBTdGV0aG8gCgpbU3Rl
dGhvXShodHRwOi8vZmFjZWJvb2suZ2l0aHViLmlvL3N0ZXRoby8pIGlzIGEg
ZGVidWcgYnJpZGdlIGZvciBBbmRyb2lkIGFwcGxpY2F0aW9ucyBmcm9tIEZh
Y2Vib29rIHRoYXQgaW50ZWdyYXRlcyB3aXRoIHRoZSBDaHJvbWUgZGVza3Rv
cCBicm93c2VyJ3MgRGV2ZWxvcGVyIFRvb2xzLiBXaXRoIFN0ZXRobyB5b3Ug
Y2FuIGVhc2lseSBpbnNwZWN0IHlvdXIgYXBwbGljYXRpb24sIG1vc3Qgbm90
YWJseSB0aGUgbmV0d29yayB0cmFmZmljLiBJdCBhbHNvIGFsbG93cyB5b3Ug
dG8gZWFzaWx5IGluc3BlY3QgYW5kIGVkaXQgU1FMaXRlIGRhdGFiYXNlcyBh
bmQgdGhlIHNoYXJlZCBwcmVmZXJlbmNlcyBpbiB5b3VyIGFwcC4gWW91IHNo
b3VsZCwgaG93ZXZlciwgbWFrZSBzdXJlIHRoYXQgU3RldGhvIGlzIG9ubHkg
ZW5hYmxlZCBpbiB0aGUgZGVidWcgYnVpbGQgYW5kIG5vdCBpbiB0aGUgcmVs
ZWFzZSBidWlsZCB2YXJpYW50LiAKCkFub3RoZXIgYWx0ZXJuYXRpdmUgaXMg
W0NodWNrXShodHRwczovL2dpdGh1Yi5jb20vamdpbGZlbHQvY2h1Y2spIHdo
aWNoLCBhbHRob3VnaCBvZmZlcmluZyBzbGlnaHRseSBtb3JlIHNpbXBsaWZp
ZWQgZnVuY3Rpb25hbGl0eSwgaXMgc3RpbGwgdXNlZnVsIGZvciB0ZXN0ZXJz
IGFzIHRoZSBsb2dzIGFyZSBkaXNwbGF5ZWQgb24gdGhlIGRldmljZSwgcmF0
aGVyIHRoYW4gaW4gdGhlIG1vcmUgY29tcGxpY2F0ZWQgY29ubmVjdGVkIENo
cm9tZSBicm93c2VyIHNldHVwIHRoYXQgU3RldGhvIHJlcXVpcmVzLgoKIyMj
IFVzZSBMZWFrQ2FuYXJ5CgpbTGVha0NhbmFyeV0oaHR0cHM6Ly9naXRodWIu
Y29tL3NxdWFyZS9sZWFrY2FuYXJ5KSBpcyBhIGxpYnJhcnkgdGhhdCBtYWtl
cyBydW50aW1lIGRldGVjdGlvbiBhbmQgaWRlbnRpZmljYXRpb24gb2YgbWVt
b3J5IGxlYWtzIGEgbW9yZSByb3V0aW5lIHBhcnQgb2YgeW91ciBhcHBsaWNh
dGlvbiBkZXZlbG9wbWVudCBwcm9jZXNzLiBTZWUgdGhlIGxpYnJhcnkgW3dp
a2ldKGh0dHBzOi8vZ2l0aHViLmNvbS9zcXVhcmUvbGVha2NhbmFyeS93aWtp
KSBmb3IgZGV0YWlscyBvbiBjb25maWd1cmF0aW9uIGFuZCB1c2FnZS4gSnVz
dCByZW1lbWJlciB0byBjb25maWd1cmUgb25seSB0aGUgIm5vLW9wIiBkZXBl
bmRlbmN5IGluIHlvdXIgcmVsZWFzZSBidWlsZCEKCiMjIyBVc2UgY29udGlu
dW91cyBpbnRlZ3JhdGlvbgoKQ29udGludW91cyBpbnRlZ3JhdGlvbiBzeXN0
ZW1zIGxldCB5b3UgYXV0b21hdGljYWxseSBidWlsZCBhbmQgdGVzdCB5b3Vy
IHByb2plY3QgZXZlcnkgdGltZSB5b3UgcHVzaCB1cGRhdGVzIHRvIHZlcnNp
b24gY29udHJvbC4gQ29udGludW91cyBpbnRlZ3JhdGlvbiBhbHNvIHJ1bnMg
c3RhdGljIGNvZGUgYW5hbHlzaXMgdG9vbHMsIGdlbmVyYXRlcyB0aGUgQVBL
IGZpbGVzIGFuZCBkaXN0cmlidXRlcyB0aGVtLgpbTGludF0oaHR0cHM6Ly9k
ZXZlbG9wZXIuYW5kcm9pZC5jb20vc3R1ZGlvL3dyaXRlL2xpbnQuaHRtbCkg
YW5kIFtDaGVja3N0eWxlXShodHRwOi8vY2hlY2tzdHlsZS5zb3VyY2Vmb3Jn
ZS5uZXQvKSBhcmUgdG9vbHMgdGhhdCBlbnN1cmUgdGhlIGNvZGUgcXVhbGl0
eSB3aGlsZSBbRmluZGJ1Z3NdKGh0dHA6Ly9maW5kYnVncy5zb3VyY2Vmb3Jn
ZS5uZXQvKSBsb29rcyBmb3IgYnVncyBpbiB0aGUgY29kZS4KICAgClRoZXJl
IGlzIGEgd2lkZSB2YXJpZXR5IG9mIGNvbnRpbnVvdXMgaW50ZWdyYXRpb24g
c29mdHdhcmUgd2hpY2ggcHJvdmlkZSBkaWZmZXJlbnQgZmVhdHVyZXMuIFBy
aWNpbmcgcGxhbnMgbWlnaHQgYmUgZm9yIGZyZWUgaWYgeW91ciBwcm9qZWN0
IGlzIG9wZW4tc291cmNlZC4KW0plbmtpbnNdKGh0dHBzOi8vamVua2lucy5p
by8pIGlzIGEgZ29vZCBvcHRpb24gaWYgeW91IGhhdmUgYSBsb2NhbCBzZXJ2
ZXIgYXQgeW91ciBkaXNwb3NhbCwgb24gdGhlIG90aGVyIGhhbmQgW1RyYXZp
cyBDSV0oaHR0cHM6Ly90cmF2aXMtY2kub3JnLykgaXMgYWxzbyBhIHJlY29t
bWVuZGVkIGNob2ljZSBpZiB5b3UgcGxhbiB0byB1c2UgYSBjbG91ZC1iYXNl
ZCBjb250aW51b3VzIGludGVncmF0aW9uIHNlcnZpY2UuCgojIyMgVGhhbmtz
IHRvCgpBbnR0aSBMYW1taSwgSm9uaSBLYXJwcGluZW4sIFBldGVyIFRhY2th
Z2UsIFRpbW8gVHVvbWluZW4sIFZlcmEgSXpyYWlsaXQsIFZpaHRvcmkgTcOk
bnR5bMOkLCBNYXJrIFZvaXQsIEFuZHJlIE1lZGVpcm9zLCBQYXVsIEhvdWdo
dG9uIGFuZCBvdGhlciBGdXR1cmljZSBkZXZlbG9wZXJzIGZvciBzaGFyaW5n
IHRoZWlyIGtub3dsZWRnZSBvbiBBbmRyb2lkIGRldmVsb3BtZW50LgoKIyMj
IEFja25vd2xlZGdlbWVudHMKCjxwIGFsaWduPSJjZW50ZXIiPgogwqA8aW1n
IGFsdD0ibG9nbyIgc3JjPSJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVu
dC5jb20vZnV0dXJpY2Uvc3BpY2Vwcm9ncmFtL2doLXBhZ2VzL2Fzc2V0cy9p
bWcvbG9nby9jaGlsaWNvcm5fbm9fdGV4dC0yNTYucG5nIiB3aWR0aD0iMjIw
Ii8+CjwvcD4KClRoaXMgcHJvamVjdCBpcyBzcG9uc29yZWQgYnkgWyoqU3Bp
Y2UgUHJvZ3JhbSoqXShodHRwOi8vc3BpY2Vwcm9ncmFtLm9yZy9jaGlsaWNv
cm4taGlzdG9yeS8pLCBvdXIgb3BlbiBzb3VyY2UgYW5kIHNvY2lhbCBpbXBh
Y3QgcHJvZ3JhbSBtYWRlIHdpdGggbG92ZSBieSBbKipGdXR1cmljZSoqXSho
dHRwOi8vd3d3LmZ1dHVyaWNlLmNvbSkuCgojIyMgTGljZW5zZQoKW0Z1dHVy
aWNlIE95XShodHRwOi8vd3d3LmZ1dHVyaWNlLmNvbSkKQ3JlYXRpdmUgQ29t
bW9ucyBBdHRyaWJ1dGlvbiA0LjAgSW50ZXJuYXRpb25hbCAoQ0MgQlkgNC4w
KQo=
",,18493,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
