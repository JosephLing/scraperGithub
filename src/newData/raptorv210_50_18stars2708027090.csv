name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'es6features',17375436,b'Overview of ECMAScript 6 features',,39,27082,,1274,False,b'https://api.github.com/repos/lukehoban/es6features/forks',"IyBFQ01BU2NyaXB0IDYgPHN1cD5bZ2l0LmlvL2VzNmZlYXR1cmVzXShodHRw
Oi8vZ2l0LmlvL2VzNmZlYXR1cmVzKTwvc3VwPgoKIyMgSW50cm9kdWN0aW9u
CkVDTUFTY3JpcHQgNiwgYWxzbyBrbm93biBhcyBFQ01BU2NyaXB0IDIwMTUs
IGlzIHRoZSBsYXRlc3QgdmVyc2lvbiBvZiB0aGUgRUNNQVNjcmlwdCBzdGFu
ZGFyZC4gIEVTNiBpcyBhIHNpZ25pZmljYW50IHVwZGF0ZSB0byB0aGUgbGFu
Z3VhZ2UsIGFuZCB0aGUgZmlyc3QgdXBkYXRlIHRvIHRoZSBsYW5ndWFnZSBz
aW5jZSBFUzUgd2FzIHN0YW5kYXJkaXplZCBpbiAyMDA5LiBJbXBsZW1lbnRh
dGlvbiBvZiB0aGVzZSBmZWF0dXJlcyBpbiBtYWpvciBKYXZhU2NyaXB0IGVu
Z2luZXMgaXMgW3VuZGVyd2F5IG5vd10oaHR0cDovL2thbmdheC5naXRodWIu
aW8vZXM1LWNvbXBhdC10YWJsZS9lczYvKS4KClNlZSB0aGUgW0VTNiBzdGFu
ZGFyZF0oaHR0cDovL3d3dy5lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEt
MjYyLzYuMC8pIGZvciBmdWxsIHNwZWNpZmljYXRpb24gb2YgdGhlIEVDTUFT
Y3JpcHQgNiBsYW5ndWFnZS4KCkVTNiBpbmNsdWRlcyB0aGUgZm9sbG93aW5n
IG5ldyBmZWF0dXJlczoKLSBbYXJyb3dzXSgjYXJyb3dzKQotIFtjbGFzc2Vz
XSgjY2xhc3NlcykKLSBbZW5oYW5jZWQgb2JqZWN0IGxpdGVyYWxzXSgjZW5o
YW5jZWQtb2JqZWN0LWxpdGVyYWxzKQotIFt0ZW1wbGF0ZSBzdHJpbmdzXSgj
dGVtcGxhdGUtc3RyaW5ncykKLSBbZGVzdHJ1Y3R1cmluZ10oI2Rlc3RydWN0
dXJpbmcpCi0gW2RlZmF1bHQgKyByZXN0ICsgc3ByZWFkXSgjZGVmYXVsdC0t
cmVzdC0tc3ByZWFkKQotIFtsZXQgKyBjb25zdF0oI2xldC0tY29uc3QpCi0g
W2l0ZXJhdG9ycyArIGZvci4ub2ZdKCNpdGVyYXRvcnMtLWZvcm9mKQotIFtn
ZW5lcmF0b3JzXSgjZ2VuZXJhdG9ycykKLSBbdW5pY29kZV0oI3VuaWNvZGUp
Ci0gW21vZHVsZXNdKCNtb2R1bGVzKQotIFttb2R1bGUgbG9hZGVyc10oI21v
ZHVsZS1sb2FkZXJzKQotIFttYXAgKyBzZXQgKyB3ZWFrbWFwICsgd2Vha3Nl
dF0oI21hcC0tc2V0LS13ZWFrbWFwLS13ZWFrc2V0KQotIFtwcm94aWVzXSgj
cHJveGllcykKLSBbc3ltYm9sc10oI3N5bWJvbHMpCi0gW3N1YmNsYXNzYWJs
ZSBidWlsdC1pbnNdKCNzdWJjbGFzc2FibGUtYnVpbHQtaW5zKQotIFtwcm9t
aXNlc10oI3Byb21pc2VzKQotIFttYXRoICsgbnVtYmVyICsgc3RyaW5nICsg
YXJyYXkgKyBvYmplY3QgQVBJc10oI21hdGgtLW51bWJlci0tc3RyaW5nLS1h
cnJheS0tb2JqZWN0LWFwaXMpCi0gW2JpbmFyeSBhbmQgb2N0YWwgbGl0ZXJh
bHNdKCNiaW5hcnktYW5kLW9jdGFsLWxpdGVyYWxzKQotIFtyZWZsZWN0IGFw
aV0oI3JlZmxlY3QtYXBpKQotIFt0YWlsIGNhbGxzXSgjdGFpbC1jYWxscykK
CiMjIEVDTUFTY3JpcHQgNiBGZWF0dXJlcwoKIyMjIEFycm93cwpBcnJvd3Mg
YXJlIGEgZnVuY3Rpb24gc2hvcnRoYW5kIHVzaW5nIHRoZSBgPT5gIHN5bnRh
eC4gIFRoZXkgYXJlIHN5bnRhY3RpY2FsbHkgc2ltaWxhciB0byB0aGUgcmVs
YXRlZCBmZWF0dXJlIGluIEMjLCBKYXZhIDggYW5kIENvZmZlZVNjcmlwdC4g
IFRoZXkgc3VwcG9ydCBib3RoIHN0YXRlbWVudCBibG9jayBib2RpZXMgYXMg
d2VsbCBhcyBleHByZXNzaW9uIGJvZGllcyB3aGljaCByZXR1cm4gdGhlIHZh
bHVlIG9mIHRoZSBleHByZXNzaW9uLiAgVW5saWtlIGZ1bmN0aW9ucywgYXJy
b3dzIHNoYXJlIHRoZSBzYW1lIGxleGljYWwgYHRoaXNgIGFzIHRoZWlyIHN1
cnJvdW5kaW5nIGNvZGUuCgpgYGBKYXZhU2NyaXB0Ci8vIEV4cHJlc3Npb24g
Ym9kaWVzCnZhciBvZGRzID0gZXZlbnMubWFwKHYgPT4gdiArIDEpOwp2YXIg
bnVtcyA9IGV2ZW5zLm1hcCgodiwgaSkgPT4gdiArIGkpOwp2YXIgcGFpcnMg
PSBldmVucy5tYXAodiA9PiAoe2V2ZW46IHYsIG9kZDogdiArIDF9KSk7Cgov
LyBTdGF0ZW1lbnQgYm9kaWVzCm51bXMuZm9yRWFjaCh2ID0+IHsKICBpZiAo
diAlIDUgPT09IDApCiAgICBmaXZlcy5wdXNoKHYpOwp9KTsKCi8vIExleGlj
YWwgdGhpcwp2YXIgYm9iID0gewogIF9uYW1lOiAiQm9iIiwKICBfZnJpZW5k
czogW10sCiAgcHJpbnRGcmllbmRzKCkgewogICAgdGhpcy5fZnJpZW5kcy5m
b3JFYWNoKGYgPT4KICAgICAgY29uc29sZS5sb2codGhpcy5fbmFtZSArICIg
a25vd3MgIiArIGYpKTsKICB9Cn0KYGBgCgpNb3JlIGluZm86IFtNRE4gQXJy
b3cgRnVuY3Rpb25zXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9l
bi9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9GdW5jdGlvbnMvQXJy
b3dfZnVuY3Rpb25zKQoKIyMjIENsYXNzZXMKRVM2IGNsYXNzZXMgYXJlIGEg
c2ltcGxlIHN1Z2FyIG92ZXIgdGhlIHByb3RvdHlwZS1iYXNlZCBPTyBwYXR0
ZXJuLiAgSGF2aW5nIGEgc2luZ2xlIGNvbnZlbmllbnQgZGVjbGFyYXRpdmUg
Zm9ybSBtYWtlcyBjbGFzcyBwYXR0ZXJucyBlYXNpZXIgdG8gdXNlLCBhbmQg
ZW5jb3VyYWdlcyBpbnRlcm9wZXJhYmlsaXR5LiAgQ2xhc3NlcyBzdXBwb3J0
IHByb3RvdHlwZS1iYXNlZCBpbmhlcml0YW5jZSwgc3VwZXIgY2FsbHMsIGlu
c3RhbmNlIGFuZCBzdGF0aWMgbWV0aG9kcyBhbmQgY29uc3RydWN0b3JzLgoK
YGBgSmF2YVNjcmlwdApjbGFzcyBTa2lubmVkTWVzaCBleHRlbmRzIFRIUkVF
Lk1lc2ggewogIGNvbnN0cnVjdG9yKGdlb21ldHJ5LCBtYXRlcmlhbHMpIHsK
ICAgIHN1cGVyKGdlb21ldHJ5LCBtYXRlcmlhbHMpOwoKICAgIHRoaXMuaWRN
YXRyaXggPSBTa2lubmVkTWVzaC5kZWZhdWx0TWF0cml4KCk7CiAgICB0aGlz
LmJvbmVzID0gW107CiAgICB0aGlzLmJvbmVNYXRyaWNlcyA9IFtdOwogICAg
Ly8uLi4KICB9CiAgdXBkYXRlKGNhbWVyYSkgewogICAgLy8uLi4KICAgIHN1
cGVyLnVwZGF0ZSgpOwogIH0KICBnZXQgYm9uZUNvdW50KCkgewogICAgcmV0
dXJuIHRoaXMuYm9uZXMubGVuZ3RoOwogIH0KICBzZXQgbWF0cml4VHlwZSht
YXRyaXhUeXBlKSB7CiAgICB0aGlzLmlkTWF0cml4ID0gU2tpbm5lZE1lc2hb
bWF0cml4VHlwZV0oKTsKICB9CiAgc3RhdGljIGRlZmF1bHRNYXRyaXgoKSB7
CiAgICByZXR1cm4gbmV3IFRIUkVFLk1hdHJpeDQoKTsKICB9Cn0KYGBgCgpN
b3JlIGluZm86IFtNRE4gQ2xhc3Nlc10oaHR0cHM6Ly9kZXZlbG9wZXIubW96
aWxsYS5vcmcvZW4vZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvQ2xh
c3NlcykKCiMjIyBFbmhhbmNlZCBPYmplY3QgTGl0ZXJhbHMKT2JqZWN0IGxp
dGVyYWxzIGFyZSBleHRlbmRlZCB0byBzdXBwb3J0IHNldHRpbmcgdGhlIHBy
b3RvdHlwZSBhdCBjb25zdHJ1Y3Rpb24sIHNob3J0aGFuZCBmb3IgYGZvbzog
Zm9vYCBhc3NpZ25tZW50cywgZGVmaW5pbmcgbWV0aG9kcywgbWFraW5nIHN1
cGVyIGNhbGxzLCBhbmQgY29tcHV0aW5nIHByb3BlcnR5IG5hbWVzIHdpdGgg
ZXhwcmVzc2lvbnMuICBUb2dldGhlciwgdGhlc2UgYWxzbyBicmluZyBvYmpl
Y3QgbGl0ZXJhbHMgYW5kIGNsYXNzIGRlY2xhcmF0aW9ucyBjbG9zZXIgdG9n
ZXRoZXIsIGFuZCBsZXQgb2JqZWN0LWJhc2VkIGRlc2lnbiBiZW5lZml0IGZy
b20gc29tZSBvZiB0aGUgc2FtZSBjb252ZW5pZW5jZXMuCgpgYGBKYXZhU2Ny
aXB0CnZhciBvYmogPSB7CiAgICAvLyBfX3Byb3RvX18KICAgIF9fcHJvdG9f
XzogdGhlUHJvdG9PYmosCiAgICAvLyBTaG9ydGhhbmQgZm9yIOKAmGhhbmRs
ZXI6IGhhbmRsZXLigJkKICAgIGhhbmRsZXIsCiAgICAvLyBNZXRob2RzCiAg
ICB0b1N0cmluZygpIHsKICAgICAvLyBTdXBlciBjYWxscwogICAgIHJldHVy
biAiZCAiICsgc3VwZXIudG9TdHJpbmcoKTsKICAgIH0sCiAgICAvLyBDb21w
dXRlZCAoZHluYW1pYykgcHJvcGVydHkgbmFtZXMKICAgIFsgJ3Byb3BfJyAr
ICgoKSA9PiA0MikoKSBdOiA0Mgp9OwpgYGAKCk1vcmUgaW5mbzogW01ETiBH
cmFtbWFyIGFuZCB0eXBlczogT2JqZWN0IGxpdGVyYWxzXShodHRwczovL2Rl
dmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0
L0d1aWRlL0dyYW1tYXJfYW5kX3R5cGVzI09iamVjdF9saXRlcmFscykKCiMj
IyBUZW1wbGF0ZSBTdHJpbmdzClRlbXBsYXRlIHN0cmluZ3MgcHJvdmlkZSBz
eW50YWN0aWMgc3VnYXIgZm9yIGNvbnN0cnVjdGluZyBzdHJpbmdzLiAgVGhp
cyBpcyBzaW1pbGFyIHRvIHN0cmluZyBpbnRlcnBvbGF0aW9uIGZlYXR1cmVz
IGluIFBlcmwsIFB5dGhvbiBhbmQgbW9yZS4gIE9wdGlvbmFsbHksIGEgdGFn
IGNhbiBiZSBhZGRlZCB0byBhbGxvdyB0aGUgc3RyaW5nIGNvbnN0cnVjdGlv
biB0byBiZSBjdXN0b21pemVkLCBhdm9pZGluZyBpbmplY3Rpb24gYXR0YWNr
cyBvciBjb25zdHJ1Y3RpbmcgaGlnaGVyIGxldmVsIGRhdGEgc3RydWN0dXJl
cyBmcm9tIHN0cmluZyBjb250ZW50cy4KCmBgYEphdmFTY3JpcHQKLy8gQmFz
aWMgbGl0ZXJhbCBzdHJpbmcgY3JlYXRpb24KYEluIEphdmFTY3JpcHQgJ1xu
JyBpcyBhIGxpbmUtZmVlZC5gCgovLyBNdWx0aWxpbmUgc3RyaW5ncwpgSW4g
SmF2YVNjcmlwdCB0aGlzIGlzCiBub3QgbGVnYWwuYAoKLy8gU3RyaW5nIGlu
dGVycG9sYXRpb24KdmFyIG5hbWUgPSAiQm9iIiwgdGltZSA9ICJ0b2RheSI7
CmBIZWxsbyAke25hbWV9LCBob3cgYXJlIHlvdSAke3RpbWV9P2AKCi8vIENv
bnN0cnVjdCBhbiBIVFRQIHJlcXVlc3QgcHJlZml4IGlzIHVzZWQgdG8gaW50
ZXJwcmV0IHRoZSByZXBsYWNlbWVudHMgYW5kIGNvbnN0cnVjdGlvbgpQT1NU
YGh0dHA6Ly9mb28ub3JnL2Jhcj9hPSR7YX0mYj0ke2J9CiAgICAgQ29udGVu
dC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uCiAgICAgWC1DcmVkZW50aWFsczog
JHtjcmVkZW50aWFsc30KICAgICB7ICJmb28iOiAke2Zvb30sCiAgICAgICAi
YmFyIjogJHtiYXJ9fWAobXlPblJlYWR5U3RhdGVDaGFuZ2VIYW5kbGVyKTsK
YGBgCgpNb3JlIGluZm86IFtNRE4gVGVtcGxhdGUgU3RyaW5nc10oaHR0cHM6
Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNj
cmlwdC9SZWZlcmVuY2UvdGVtcGxhdGVfc3RyaW5ncykKCiMjIyBEZXN0cnVj
dHVyaW5nCkRlc3RydWN0dXJpbmcgYWxsb3dzIGJpbmRpbmcgdXNpbmcgcGF0
dGVybiBtYXRjaGluZywgd2l0aCBzdXBwb3J0IGZvciBtYXRjaGluZyBhcnJh
eXMgYW5kIG9iamVjdHMuICBEZXN0cnVjdHVyaW5nIGlzIGZhaWwtc29mdCwg
c2ltaWxhciB0byBzdGFuZGFyZCBvYmplY3QgbG9va3VwIGBmb29bImJhciJd
YCwgcHJvZHVjaW5nIGB1bmRlZmluZWRgIHZhbHVlcyB3aGVuIG5vdCBmb3Vu
ZC4KCmBgYEphdmFTY3JpcHQKLy8gbGlzdCBtYXRjaGluZwp2YXIgW2EsICwg
Yl0gPSBbMSwyLDNdOwoKLy8gb2JqZWN0IG1hdGNoaW5nCnZhciB7IG9wOiBh
LCBsaHM6IHsgb3A6IGIgfSwgcmhzOiBjIH0KICAgICAgID0gZ2V0QVNUTm9k
ZSgpCgovLyBvYmplY3QgbWF0Y2hpbmcgc2hvcnRoYW5kCi8vIGJpbmRzIGBv
cGAsIGBsaHNgIGFuZCBgcmhzYCBpbiBzY29wZQp2YXIge29wLCBsaHMsIHJo
c30gPSBnZXRBU1ROb2RlKCkKCi8vIENhbiBiZSB1c2VkIGluIHBhcmFtZXRl
ciBwb3NpdGlvbgpmdW5jdGlvbiBnKHtuYW1lOiB4fSkgewogIGNvbnNvbGUu
bG9nKHgpOwp9Cmcoe25hbWU6IDV9KQoKLy8gRmFpbC1zb2Z0IGRlc3RydWN0
dXJpbmcKdmFyIFthXSA9IFtdOwphID09PSB1bmRlZmluZWQ7CgovLyBGYWls
LXNvZnQgZGVzdHJ1Y3R1cmluZyB3aXRoIGRlZmF1bHRzCnZhciBbYSA9IDFd
ID0gW107CmEgPT09IDE7CmBgYAoKTW9yZSBpbmZvOiBbTUROIERlc3RydWN0
dXJpbmcgYXNzaWdubWVudF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5v
cmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvT3BlcmF0
b3JzL0Rlc3RydWN0dXJpbmdfYXNzaWdubWVudCkKCiMjIyBEZWZhdWx0ICsg
UmVzdCArIFNwcmVhZApDYWxsZWUtZXZhbHVhdGVkIGRlZmF1bHQgcGFyYW1l
dGVyIHZhbHVlcy4gIFR1cm4gYW4gYXJyYXkgaW50byBjb25zZWN1dGl2ZSBh
cmd1bWVudHMgaW4gYSBmdW5jdGlvbiBjYWxsLiAgQmluZCB0cmFpbGluZyBw
YXJhbWV0ZXJzIHRvIGFuIGFycmF5LiAgUmVzdCByZXBsYWNlcyB0aGUgbmVl
ZCBmb3IgYGFyZ3VtZW50c2AgYW5kIGFkZHJlc3NlcyBjb21tb24gY2FzZXMg
bW9yZSBkaXJlY3RseS4KCmBgYEphdmFTY3JpcHQKZnVuY3Rpb24gZih4LCB5
PTEyKSB7CiAgLy8geSBpcyAxMiBpZiBub3QgcGFzc2VkIChvciBwYXNzZWQg
YXMgdW5kZWZpbmVkKQogIHJldHVybiB4ICsgeTsKfQpmKDMpID09IDE1CmBg
YApgYGBKYXZhU2NyaXB0CmZ1bmN0aW9uIGYoeCwgLi4ueSkgewogIC8vIHkg
aXMgYW4gQXJyYXkKICByZXR1cm4geCAqIHkubGVuZ3RoOwp9CmYoMywgImhl
bGxvIiwgdHJ1ZSkgPT0gNgpgYGAKYGBgSmF2YVNjcmlwdApmdW5jdGlvbiBm
KHgsIHksIHopIHsKICByZXR1cm4geCArIHkgKyB6Owp9Ci8vIFBhc3MgZWFj
aCBlbGVtIG9mIGFycmF5IGFzIGFyZ3VtZW50CmYoLi4uWzEsMiwzXSkgPT0g
NgpgYGAKCk1vcmUgTUROIGluZm86IFtEZWZhdWx0IHBhcmFtZXRlcnNdKGh0
dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0ph
dmFTY3JpcHQvUmVmZXJlbmNlL0Z1bmN0aW9ucy9EZWZhdWx0X3BhcmFtZXRl
cnMpLCBbUmVzdCBwYXJhbWV0ZXJzXShodHRwczovL2RldmVsb3Blci5tb3pp
bGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9G
dW5jdGlvbnMvcmVzdF9wYXJhbWV0ZXJzKSwgW1NwcmVhZCBPcGVyYXRvcl0o
aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIv
SmF2YVNjcmlwdC9SZWZlcmVuY2UvT3BlcmF0b3JzL1NwcmVhZF9vcGVyYXRv
cikKCiMjIyBMZXQgKyBDb25zdApCbG9jay1zY29wZWQgYmluZGluZyBjb25z
dHJ1Y3RzLiAgYGxldGAgaXMgdGhlIG5ldyBgdmFyYC4gIGBjb25zdGAgaXMg
c2luZ2xlLWFzc2lnbm1lbnQuICBTdGF0aWMgcmVzdHJpY3Rpb25zIHByZXZl
bnQgdXNlIGJlZm9yZSBhc3NpZ25tZW50LgoKCmBgYEphdmFTY3JpcHQKZnVu
Y3Rpb24gZigpIHsKICB7CiAgICBsZXQgeDsKICAgIHsKICAgICAgLy8gb2th
eSwgYmxvY2sgc2NvcGVkIG5hbWUKICAgICAgY29uc3QgeCA9ICJzbmVha3ki
OwogICAgICAvLyBlcnJvciwgY29uc3QKICAgICAgeCA9ICJmb28iOwogICAg
fQogICAgLy8gZXJyb3IsIGFscmVhZHkgZGVjbGFyZWQgaW4gYmxvY2sKICAg
IGxldCB4ID0gImlubmVyIjsKICB9Cn0KYGBgCgpNb3JlIE1ETiBpbmZvOiBb
bGV0IHN0YXRlbWVudF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcv
ZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvU3RhdGVtZW50
cy9sZXQpLCBbY29uc3Qgc3RhdGVtZW50XShodHRwczovL2RldmVsb3Blci5t
b3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5j
ZS9TdGF0ZW1lbnRzL2NvbnN0KQoKIyMjIEl0ZXJhdG9ycyArIEZvci4uT2YK
SXRlcmF0b3Igb2JqZWN0cyBlbmFibGUgY3VzdG9tIGl0ZXJhdGlvbiBsaWtl
IENMUiBJRW51bWVyYWJsZSBvciBKYXZhIEl0ZXJhYmxlLiAgR2VuZXJhbGl6
ZSBgZm9yLi5pbmAgdG8gY3VzdG9tIGl0ZXJhdG9yLWJhc2VkIGl0ZXJhdGlv
biB3aXRoIGBmb3IuLm9mYC4gIERvbuKAmXQgcmVxdWlyZSByZWFsaXppbmcg
YW4gYXJyYXksIGVuYWJsaW5nIGxhenkgZGVzaWduIHBhdHRlcm5zIGxpa2Ug
TElOUS4KCmBgYEphdmFTY3JpcHQKbGV0IGZpYm9uYWNjaSA9IHsKICBbU3lt
Ym9sLml0ZXJhdG9yXSgpIHsKICAgIGxldCBwcmUgPSAwLCBjdXIgPSAxOwog
ICAgcmV0dXJuIHsKICAgICAgbmV4dCgpIHsKICAgICAgICBbcHJlLCBjdXJd
ID0gW2N1ciwgcHJlICsgY3VyXTsKICAgICAgICByZXR1cm4geyBkb25lOiBm
YWxzZSwgdmFsdWU6IGN1ciB9CiAgICAgIH0KICAgIH0KICB9Cn0KCmZvciAo
dmFyIG4gb2YgZmlib25hY2NpKSB7CiAgLy8gdHJ1bmNhdGUgdGhlIHNlcXVl
bmNlIGF0IDEwMDAKICBpZiAobiA+IDEwMDApCiAgICBicmVhazsKICBjb25z
b2xlLmxvZyhuKTsKfQpgYGAKCkl0ZXJhdGlvbiBpcyBiYXNlZCBvbiB0aGVz
ZSBkdWNrLXR5cGVkIGludGVyZmFjZXMgKHVzaW5nIFtUeXBlU2NyaXB0XSho
dHRwOi8vdHlwZXNjcmlwdGxhbmcub3JnKSB0eXBlIHN5bnRheCBmb3IgZXhw
b3NpdGlvbiBvbmx5KToKYGBgVHlwZVNjcmlwdAppbnRlcmZhY2UgSXRlcmF0
b3JSZXN1bHQgewogIGRvbmU6IGJvb2xlYW47CiAgdmFsdWU6IGFueTsKfQpp
bnRlcmZhY2UgSXRlcmF0b3IgewogIG5leHQoKTogSXRlcmF0b3JSZXN1bHQ7
Cn0KaW50ZXJmYWNlIEl0ZXJhYmxlIHsKICBbU3ltYm9sLml0ZXJhdG9yXSgp
OiBJdGVyYXRvcgp9CmBgYAoKTW9yZSBpbmZvOiBbTUROIGZvci4uLm9mXSho
dHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9K
YXZhU2NyaXB0L1JlZmVyZW5jZS9TdGF0ZW1lbnRzL2Zvci4uLm9mKQoKIyMj
IEdlbmVyYXRvcnMKR2VuZXJhdG9ycyBzaW1wbGlmeSBpdGVyYXRvci1hdXRo
b3JpbmcgdXNpbmcgYGZ1bmN0aW9uKmAgYW5kIGB5aWVsZGAuICBBIGZ1bmN0
aW9uIGRlY2xhcmVkIGFzIGZ1bmN0aW9uKiByZXR1cm5zIGEgR2VuZXJhdG9y
IGluc3RhbmNlLiAgR2VuZXJhdG9ycyBhcmUgc3VidHlwZXMgb2YgaXRlcmF0
b3JzIHdoaWNoIGluY2x1ZGUgYWRkaXRpb25hbCAgYG5leHRgIGFuZCBgdGhy
b3dgLiAgVGhlc2UgZW5hYmxlIHZhbHVlcyB0byBmbG93IGJhY2sgaW50byB0
aGUgZ2VuZXJhdG9yLCBzbyBgeWllbGRgIGlzIGFuIGV4cHJlc3Npb24gZm9y
bSB3aGljaCByZXR1cm5zIGEgdmFsdWUgKG9yIHRocm93cykuCgpOb3RlOiBD
YW4gYWxzbyBiZSB1c2VkIHRvIGVuYWJsZSDigJhhd2FpdOKAmS1saWtlIGFz
eW5jIHByb2dyYW1taW5nLCBzZWUgYWxzbyBFUzcgYGF3YWl0YCBwcm9wb3Nh
bC4KCmBgYEphdmFTY3JpcHQKdmFyIGZpYm9uYWNjaSA9IHsKICBbU3ltYm9s
Lml0ZXJhdG9yXTogZnVuY3Rpb24qKCkgewogICAgdmFyIHByZSA9IDAsIGN1
ciA9IDE7CiAgICBmb3IgKDs7KSB7CiAgICAgIHZhciB0ZW1wID0gcHJlOwog
ICAgICBwcmUgPSBjdXI7CiAgICAgIGN1ciArPSB0ZW1wOwogICAgICB5aWVs
ZCBjdXI7CiAgICB9CiAgfQp9Cgpmb3IgKHZhciBuIG9mIGZpYm9uYWNjaSkg
ewogIC8vIHRydW5jYXRlIHRoZSBzZXF1ZW5jZSBhdCAxMDAwCiAgaWYgKG4g
PiAxMDAwKQogICAgYnJlYWs7CiAgY29uc29sZS5sb2cobik7Cn0KYGBgCgpU
aGUgZ2VuZXJhdG9yIGludGVyZmFjZSBpcyAodXNpbmcgW1R5cGVTY3JpcHRd
KGh0dHA6Ly90eXBlc2NyaXB0bGFuZy5vcmcpIHR5cGUgc3ludGF4IGZvciBl
eHBvc2l0aW9uIG9ubHkpOgoKYGBgVHlwZVNjcmlwdAppbnRlcmZhY2UgR2Vu
ZXJhdG9yIGV4dGVuZHMgSXRlcmF0b3IgewogICAgbmV4dCh2YWx1ZT86IGFu
eSk6IEl0ZXJhdG9yUmVzdWx0OwogICAgdGhyb3coZXhjZXB0aW9uOiBhbnkp
Owp9CmBgYAoKTW9yZSBpbmZvOiBbTUROIEl0ZXJhdGlvbiBwcm90b2NvbHNd
KGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2Vi
L0phdmFTY3JpcHQvUmVmZXJlbmNlL0l0ZXJhdGlvbl9wcm90b2NvbHMpCgoj
IyMgVW5pY29kZQpOb24tYnJlYWtpbmcgYWRkaXRpb25zIHRvIHN1cHBvcnQg
ZnVsbCBVbmljb2RlLCBpbmNsdWRpbmcgbmV3IFVuaWNvZGUgbGl0ZXJhbCBm
b3JtIGluIHN0cmluZ3MgYW5kIG5ldyBSZWdFeHAgYHVgIG1vZGUgdG8gaGFu
ZGxlIGNvZGUgcG9pbnRzLCBhcyB3ZWxsIGFzIG5ldyBBUElzIHRvIHByb2Nl
c3Mgc3RyaW5ncyBhdCB0aGUgMjFiaXQgY29kZSBwb2ludHMgbGV2ZWwuICBU
aGVzZSBhZGRpdGlvbnMgc3VwcG9ydCBidWlsZGluZyBnbG9iYWwgYXBwcyBp
biBKYXZhU2NyaXB0LgoKYGBgSmF2YVNjcmlwdAovLyBzYW1lIGFzIEVTNS4x
CiLwoK63Ii5sZW5ndGggPT0gMgoKLy8gbmV3IFJlZ0V4cCBiZWhhdmlvdXIs
IG9wdC1pbiDigJh14oCZCiLwoK63Ii5tYXRjaCgvLi91KVswXS5sZW5ndGgg
PT0gMgoKLy8gbmV3IGZvcm0KIlx1ezIwQkI3fSI9PSLwoK63Ij09Ilx1RDg0
Mlx1REZCNyIKCi8vIG5ldyBTdHJpbmcgb3BzCiLwoK63Ii5jb2RlUG9pbnRB
dCgwKSA9PSAweDIwQkI3CgovLyBmb3Itb2YgaXRlcmF0ZXMgY29kZSBwb2lu
dHMKZm9yKHZhciBjIG9mICLwoK63IikgewogIGNvbnNvbGUubG9nKGMpOwp9
CmBgYAoKTW9yZSBpbmZvOiBbTUROIFJlZ0V4cC5wcm90b3R5cGUudW5pY29k
ZV0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9X
ZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvUmVnRXhw
L3VuaWNvZGUpCgojIyMgTW9kdWxlcwpMYW5ndWFnZS1sZXZlbCBzdXBwb3J0
IGZvciBtb2R1bGVzIGZvciBjb21wb25lbnQgZGVmaW5pdGlvbi4gIENvZGlm
aWVzIHBhdHRlcm5zIGZyb20gcG9wdWxhciBKYXZhU2NyaXB0IG1vZHVsZSBs
b2FkZXJzIChBTUQsIENvbW1vbkpTKS4gUnVudGltZSBiZWhhdmlvdXIgZGVm
aW5lZCBieSBhIGhvc3QtZGVmaW5lZCBkZWZhdWx0IGxvYWRlci4gIEltcGxp
Y2l0bHkgYXN5bmMgbW9kZWwg4oCTIG5vIGNvZGUgZXhlY3V0ZXMgdW50aWwg
cmVxdWVzdGVkIG1vZHVsZXMgYXJlIGF2YWlsYWJsZSBhbmQgcHJvY2Vzc2Vk
LgoKYGBgSmF2YVNjcmlwdAovLyBsaWIvbWF0aC5qcwpleHBvcnQgZnVuY3Rp
b24gc3VtKHgsIHkpIHsKICByZXR1cm4geCArIHk7Cn0KZXhwb3J0IHZhciBw
aSA9IDMuMTQxNTkzOwpgYGAKYGBgSmF2YVNjcmlwdAovLyBhcHAuanMKaW1w
b3J0ICogYXMgbWF0aCBmcm9tICJsaWIvbWF0aCI7CmFsZXJ0KCIyz4AgPSAi
ICsgbWF0aC5zdW0obWF0aC5waSwgbWF0aC5waSkpOwpgYGAKYGBgSmF2YVNj
cmlwdAovLyBvdGhlckFwcC5qcwppbXBvcnQge3N1bSwgcGl9IGZyb20gImxp
Yi9tYXRoIjsKYWxlcnQoIjLPgCA9ICIgKyBzdW0ocGksIHBpKSk7CmBgYAoK
U29tZSBhZGRpdGlvbmFsIGZlYXR1cmVzIGluY2x1ZGUgYGV4cG9ydCBkZWZh
dWx0YCBhbmQgYGV4cG9ydCAqYDoKCmBgYEphdmFTY3JpcHQKLy8gbGliL21h
dGhwbHVzcGx1cy5qcwpleHBvcnQgKiBmcm9tICJsaWIvbWF0aCI7CmV4cG9y
dCB2YXIgZSA9IDIuNzE4MjgxODI4NDY7CmV4cG9ydCBkZWZhdWx0IGZ1bmN0
aW9uKHgpIHsKICAgIHJldHVybiBNYXRoLmxvZyh4KTsKfQpgYGAKYGBgSmF2
YVNjcmlwdAovLyBhcHAuanMKaW1wb3J0IGxuLCB7cGksIGV9IGZyb20gImxp
Yi9tYXRocGx1c3BsdXMiOwphbGVydCgiMs+AID0gIiArIGxuKGUpKnBpKjIp
OwpgYGAKCk1vcmUgTUROIGluZm86IFtpbXBvcnQgc3RhdGVtZW50XShodHRw
czovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZh
U2NyaXB0L1JlZmVyZW5jZS9TdGF0ZW1lbnRzL2ltcG9ydCksIFtleHBvcnQg
c3RhdGVtZW50XShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1V
Uy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9TdGF0ZW1lbnRzL2V4
cG9ydCkKCiMjIyBNb2R1bGUgTG9hZGVycwpNb2R1bGUgbG9hZGVycyBzdXBw
b3J0OgotIER5bmFtaWMgbG9hZGluZwotIFN0YXRlIGlzb2xhdGlvbgotIEds
b2JhbCBuYW1lc3BhY2UgaXNvbGF0aW9uCi0gQ29tcGlsYXRpb24gaG9va3MK
LSBOZXN0ZWQgdmlydHVhbGl6YXRpb24KClRoZSBkZWZhdWx0IG1vZHVsZSBs
b2FkZXIgY2FuIGJlIGNvbmZpZ3VyZWQsIGFuZCBuZXcgbG9hZGVycyBjYW4g
YmUgY29uc3RydWN0ZWQgdG8gZXZhbHVhdGUgYW5kIGxvYWQgY29kZSBpbiBp
c29sYXRlZCBvciBjb25zdHJhaW5lZCBjb250ZXh0cy4KCmBgYEphdmFTY3Jp
cHQKLy8gRHluYW1pYyBsb2FkaW5nIOKAkyDigJhTeXN0ZW3igJkgaXMgZGVm
YXVsdCBsb2FkZXIKU3lzdGVtLmltcG9ydCgnbGliL21hdGgnKS50aGVuKGZ1
bmN0aW9uKG0pIHsKICBhbGVydCgiMs+AID0gIiArIG0uc3VtKG0ucGksIG0u
cGkpKTsKfSk7CgovLyBDcmVhdGUgZXhlY3V0aW9uIHNhbmRib3hlcyDigJMg
bmV3IExvYWRlcnMKdmFyIGxvYWRlciA9IG5ldyBMb2FkZXIoewogIGdsb2Jh
bDogZml4dXAod2luZG93KSAvLyByZXBsYWNlIOKAmGNvbnNvbGUubG9n4oCZ
Cn0pOwpsb2FkZXIuZXZhbCgiY29uc29sZS5sb2coJ2hlbGxvIHdvcmxkIScp
OyIpOwoKLy8gRGlyZWN0bHkgbWFuaXB1bGF0ZSBtb2R1bGUgY2FjaGUKU3lz
dGVtLmdldCgnanF1ZXJ5Jyk7ClN5c3RlbS5zZXQoJ2pxdWVyeScsIE1vZHVs
ZSh7JDogJH0pKTsgLy8gV0FSTklORzogbm90IHlldCBmaW5hbGl6ZWQKYGBg
CgojIyMgTWFwICsgU2V0ICsgV2Vha01hcCArIFdlYWtTZXQKRWZmaWNpZW50
IGRhdGEgc3RydWN0dXJlcyBmb3IgY29tbW9uIGFsZ29yaXRobXMuICBXZWFr
TWFwcyBwcm92aWRlcyBsZWFrLWZyZWUgb2JqZWN0LWtleeKAmWQgc2lkZSB0
YWJsZXMuCgpgYGBKYXZhU2NyaXB0Ci8vIFNldHMKdmFyIHMgPSBuZXcgU2V0
KCk7CnMuYWRkKCJoZWxsbyIpLmFkZCgiZ29vZGJ5ZSIpLmFkZCgiaGVsbG8i
KTsKcy5zaXplID09PSAyOwpzLmhhcygiaGVsbG8iKSA9PT0gdHJ1ZTsKCi8v
IE1hcHMKdmFyIG0gPSBuZXcgTWFwKCk7Cm0uc2V0KCJoZWxsbyIsIDQyKTsK
bS5zZXQocywgMzQpOwptLmdldChzKSA9PSAzNDsKCi8vIFdlYWsgTWFwcwp2
YXIgd20gPSBuZXcgV2Vha01hcCgpOwp3bS5zZXQocywgeyBleHRyYTogNDIg
fSk7CndtLnNpemUgPT09IHVuZGVmaW5lZAoKLy8gV2VhayBTZXRzCnZhciB3
cyA9IG5ldyBXZWFrU2V0KCk7CndzLmFkZCh7IGRhdGE6IDQyIH0pOwovLyBC
ZWNhdXNlIHRoZSBhZGRlZCBvYmplY3QgaGFzIG5vIG90aGVyIHJlZmVyZW5j
ZXMsIGl0IHdpbGwgbm90IGJlIGhlbGQgaW4gdGhlIHNldApgYGAKCk1vcmUg
TUROIGluZm86IFtNYXBdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3Jn
L2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9P
YmplY3RzL01hcCksIFtTZXRdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEu
b3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2Jh
bF9PYmplY3RzL1NldCksIFtXZWFrTWFwXShodHRwczovL2RldmVsb3Blci5t
b3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5j
ZS9HbG9iYWxfT2JqZWN0cy9XZWFrTWFwKSwgW1dlYWtTZXRdKGh0dHBzOi8v
ZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3Jp
cHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL1dlYWtTZXQpCgojIyMgUHJv
eGllcwpQcm94aWVzIGVuYWJsZSBjcmVhdGlvbiBvZiBvYmplY3RzIHdpdGgg
dGhlIGZ1bGwgcmFuZ2Ugb2YgYmVoYXZpb3JzIGF2YWlsYWJsZSB0byBob3N0
IG9iamVjdHMuICBDYW4gYmUgdXNlZCBmb3IgaW50ZXJjZXB0aW9uLCBvYmpl
Y3QgdmlydHVhbGl6YXRpb24sIGxvZ2dpbmcvcHJvZmlsaW5nLCBldGMuCgpg
YGBKYXZhU2NyaXB0Ci8vIFByb3h5aW5nIGEgbm9ybWFsIG9iamVjdAp2YXIg
dGFyZ2V0ID0ge307CnZhciBoYW5kbGVyID0gewogIGdldDogZnVuY3Rpb24g
KHJlY2VpdmVyLCBuYW1lKSB7CiAgICByZXR1cm4gYEhlbGxvLCAke25hbWV9
IWA7CiAgfQp9OwoKdmFyIHAgPSBuZXcgUHJveHkodGFyZ2V0LCBoYW5kbGVy
KTsKcC53b3JsZCA9PT0gJ0hlbGxvLCB3b3JsZCEnOwpgYGAKCmBgYEphdmFT
Y3JpcHQKLy8gUHJveHlpbmcgYSBmdW5jdGlvbiBvYmplY3QKdmFyIHRhcmdl
dCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICdJIGFtIHRoZSB0YXJnZXQnOyB9
Owp2YXIgaGFuZGxlciA9IHsKICBhcHBseTogZnVuY3Rpb24gKHJlY2VpdmVy
LCAuLi5hcmdzKSB7CiAgICByZXR1cm4gJ0kgYW0gdGhlIHByb3h5JzsKICB9
Cn07Cgp2YXIgcCA9IG5ldyBQcm94eSh0YXJnZXQsIGhhbmRsZXIpOwpwKCkg
PT09ICdJIGFtIHRoZSBwcm94eSc7CmBgYAoKVGhlcmUgYXJlIHRyYXBzIGF2
YWlsYWJsZSBmb3IgYWxsIG9mIHRoZSBydW50aW1lLWxldmVsIG1ldGEtb3Bl
cmF0aW9uczoKCmBgYEphdmFTY3JpcHQKdmFyIGhhbmRsZXIgPQp7CiAgZ2V0
Oi4uLiwKICBzZXQ6Li4uLAogIGhhczouLi4sCiAgZGVsZXRlUHJvcGVydHk6
Li4uLAogIGFwcGx5Oi4uLiwKICBjb25zdHJ1Y3Q6Li4uLAogIGdldE93blBy
b3BlcnR5RGVzY3JpcHRvcjouLi4sCiAgZGVmaW5lUHJvcGVydHk6Li4uLAog
IGdldFByb3RvdHlwZU9mOi4uLiwKICBzZXRQcm90b3R5cGVPZjouLi4sCiAg
ZW51bWVyYXRlOi4uLiwKICBvd25LZXlzOi4uLiwKICBwcmV2ZW50RXh0ZW5z
aW9uczouLi4sCiAgaXNFeHRlbnNpYmxlOi4uLgp9CmBgYAoKTW9yZSBpbmZv
OiBbTUROIFByb3h5XShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9l
bi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2Jq
ZWN0cy9Qcm94eSkKCiMjIyBTeW1ib2xzClN5bWJvbHMgZW5hYmxlIGFjY2Vz
cyBjb250cm9sIGZvciBvYmplY3Qgc3RhdGUuICBTeW1ib2xzIGFsbG93IHBy
b3BlcnRpZXMgdG8gYmUga2V5ZWQgYnkgZWl0aGVyIGBzdHJpbmdgIChhcyBp
biBFUzUpIG9yIGBzeW1ib2xgLiAgU3ltYm9scyBhcmUgYSBuZXcgcHJpbWl0
aXZlIHR5cGUuIE9wdGlvbmFsIGBkZXNjcmlwdGlvbmAgcGFyYW1ldGVyIHVz
ZWQgaW4gZGVidWdnaW5nIC0gYnV0IGlzIG5vdCBwYXJ0IG9mIGlkZW50aXR5
LiAgU3ltYm9scyBhcmUgdW5pcXVlIChsaWtlIGdlbnN5bSksIGJ1dCBub3Qg
cHJpdmF0ZSBzaW5jZSB0aGV5IGFyZSBleHBvc2VkIHZpYSByZWZsZWN0aW9u
IGZlYXR1cmVzIGxpa2UgYE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHNg
LgoKCmBgYEphdmFTY3JpcHQKdmFyIE15Q2xhc3MgPSAoZnVuY3Rpb24oKSB7
CgogIC8vIG1vZHVsZSBzY29wZWQgc3ltYm9sCiAgdmFyIGtleSA9IFN5bWJv
bCgia2V5Iik7CgogIGZ1bmN0aW9uIE15Q2xhc3MocHJpdmF0ZURhdGEpIHsK
ICAgIHRoaXNba2V5XSA9IHByaXZhdGVEYXRhOwogIH0KCiAgTXlDbGFzcy5w
cm90b3R5cGUgPSB7CiAgICBkb1N0dWZmOiBmdW5jdGlvbigpIHsKICAgICAg
Li4uIHRoaXNba2V5XSAuLi4KICAgIH0KICB9OwoKICByZXR1cm4gTXlDbGFz
czsKfSkoKTsKCnZhciBjID0gbmV3IE15Q2xhc3MoImhlbGxvIikKY1sia2V5
Il0gPT09IHVuZGVmaW5lZApgYGAKCk1vcmUgaW5mbzogW01ETiBTeW1ib2xd
KGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2Vi
L0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL1N5bWJvbCkK
CiMjIyBTdWJjbGFzc2FibGUgQnVpbHQtaW5zCkluIEVTNiwgYnVpbHQtaW5z
IGxpa2UgYEFycmF5YCwgYERhdGVgIGFuZCBET00gYEVsZW1lbnRgcyBjYW4g
YmUgc3ViY2xhc3NlZC4KCk9iamVjdCBjb25zdHJ1Y3Rpb24gZm9yIGEgZnVu
Y3Rpb24gbmFtZWQgYEN0b3JgIG5vdyB1c2VzIHR3by1waGFzZXMgKGJvdGgg
dmlydHVhbGx5IGRpc3BhdGNoZWQpOgotIENhbGwgYEN0b3JbQEBjcmVhdGVd
YCB0byBhbGxvY2F0ZSB0aGUgb2JqZWN0LCBpbnN0YWxsaW5nIGFueSBzcGVj
aWFsIGJlaGF2aW9yCi0gSW52b2tlIGNvbnN0cnVjdG9yIG9uIG5ldyBpbnN0
YW5jZSB0byBpbml0aWFsaXplCgpUaGUga25vd24gYEBAY3JlYXRlYCBzeW1i
b2wgaXMgYXZhaWxhYmxlIHZpYSBgU3ltYm9sLmNyZWF0ZWAuICBCdWlsdC1p
bnMgbm93IGV4cG9zZSB0aGVpciBgQEBjcmVhdGVgIGV4cGxpY2l0bHkuCgpg
YGBKYXZhU2NyaXB0Ci8vIFBzZXVkby1jb2RlIG9mIEFycmF5CmNsYXNzIEFy
cmF5IHsKICAgIGNvbnN0cnVjdG9yKC4uLmFyZ3MpIHsgLyogLi4uICovIH0K
ICAgIHN0YXRpYyBbU3ltYm9sLmNyZWF0ZV0oKSB7CiAgICAgICAgLy8gSW5z
dGFsbCBzcGVjaWFsIFtbRGVmaW5lT3duUHJvcGVydHldXQogICAgICAgIC8v
IHRvIG1hZ2ljYWxseSB1cGRhdGUgJ2xlbmd0aCcKICAgIH0KfQoKLy8gVXNl
ciBjb2RlIG9mIEFycmF5IHN1YmNsYXNzCmNsYXNzIE15QXJyYXkgZXh0ZW5k
cyBBcnJheSB7CiAgICBjb25zdHJ1Y3RvciguLi5hcmdzKSB7IHN1cGVyKC4u
LmFyZ3MpOyB9Cn0KCi8vIFR3by1waGFzZSAnbmV3JzoKLy8gMSkgQ2FsbCBA
QGNyZWF0ZSB0byBhbGxvY2F0ZSBvYmplY3QKLy8gMikgSW52b2tlIGNvbnN0
cnVjdG9yIG9uIG5ldyBpbnN0YW5jZQp2YXIgYXJyID0gbmV3IE15QXJyYXko
KTsKYXJyWzFdID0gMTI7CmFyci5sZW5ndGggPT0gMgpgYGAKCiMjIyBNYXRo
ICsgTnVtYmVyICsgU3RyaW5nICsgQXJyYXkgKyBPYmplY3QgQVBJcwpNYW55
IG5ldyBsaWJyYXJ5IGFkZGl0aW9ucywgaW5jbHVkaW5nIGNvcmUgTWF0aCBs
aWJyYXJpZXMsIEFycmF5IGNvbnZlcnNpb24gaGVscGVycywgU3RyaW5nIGhl
bHBlcnMsIGFuZCBPYmplY3QuYXNzaWduIGZvciBjb3B5aW5nLgoKYGBgSmF2
YVNjcmlwdApOdW1iZXIuRVBTSUxPTgpOdW1iZXIuaXNJbnRlZ2VyKEluZmlu
aXR5KSAvLyBmYWxzZQpOdW1iZXIuaXNOYU4oIk5hTiIpIC8vIGZhbHNlCgpN
YXRoLmFjb3NoKDMpIC8vIDEuNzYyNzQ3MTc0MDM5MDg2Ck1hdGguaHlwb3Qo
MywgNCkgLy8gNQpNYXRoLmltdWwoTWF0aC5wb3coMiwgMzIpIC0gMSwgTWF0
aC5wb3coMiwgMzIpIC0gMikgLy8gMgoKImFiY2RlIi5pbmNsdWRlcygiY2Qi
KSAvLyB0cnVlCiJhYmMiLnJlcGVhdCgzKSAvLyAiYWJjYWJjYWJjIgoKQXJy
YXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcqJykpIC8vIFJl
dHVybnMgYSByZWFsIEFycmF5CkFycmF5Lm9mKDEsIDIsIDMpIC8vIFNpbWls
YXIgdG8gbmV3IEFycmF5KC4uLiksIGJ1dCB3aXRob3V0IHNwZWNpYWwgb25l
LWFyZyBiZWhhdmlvcgpbMCwgMCwgMF0uZmlsbCg3LCAxKSAvLyBbMCw3LDdd
ClsxLCAyLCAzXS5maW5kKHggPT4geCA9PSAzKSAvLyAzClsxLCAyLCAzXS5m
aW5kSW5kZXgoeCA9PiB4ID09IDIpIC8vIDEKWzEsIDIsIDMsIDQsIDVdLmNv
cHlXaXRoaW4oMywgMCkgLy8gWzEsIDIsIDMsIDEsIDJdClsiYSIsICJiIiwg
ImMiXS5lbnRyaWVzKCkgLy8gaXRlcmF0b3IgWzAsICJhIl0sIFsxLCJiIl0s
IFsyLCJjIl0KWyJhIiwgImIiLCAiYyJdLmtleXMoKSAvLyBpdGVyYXRvciAw
LCAxLCAyClsiYSIsICJiIiwgImMiXS52YWx1ZXMoKSAvLyBpdGVyYXRvciAi
YSIsICJiIiwgImMiCgpPYmplY3QuYXNzaWduKFBvaW50LCB7IG9yaWdpbjog
bmV3IFBvaW50KDAsMCkgfSkKYGBgCgpNb3JlIE1ETiBpbmZvOiBbTnVtYmVy
XShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dl
Yi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9OdW1iZXIp
LCBbTWF0aF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMv
ZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMv
TWF0aCksIFtBcnJheS5mcm9tXShodHRwczovL2RldmVsb3Blci5tb3ppbGxh
Lm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9i
YWxfT2JqZWN0cy9BcnJheS9mcm9tKSwgW0FycmF5Lm9mXShodHRwczovL2Rl
dmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0
L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9BcnJheS9vZiksIFtBcnJheS5w
cm90b3R5cGUuY29weVdpdGhpbl0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxs
YS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xv
YmFsX09iamVjdHMvQXJyYXkvY29weVdpdGhpbiksIFtPYmplY3QuYXNzaWdu
XShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dl
Yi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9PYmplY3Qv
YXNzaWduKQoKIyMjIEJpbmFyeSBhbmQgT2N0YWwgTGl0ZXJhbHMKVHdvIG5l
dyBudW1lcmljIGxpdGVyYWwgZm9ybXMgYXJlIGFkZGVkIGZvciBiaW5hcnkg
KGBiYCkgYW5kIG9jdGFsIChgb2ApLgoKYGBgSmF2YVNjcmlwdAowYjExMTEx
MDExMSA9PT0gNTAzIC8vIHRydWUKMG83NjcgPT09IDUwMyAvLyB0cnVlCmBg
YAoKIyMjIFByb21pc2VzClByb21pc2VzIGFyZSBhIGxpYnJhcnkgZm9yIGFz
eW5jaHJvbm91cyBwcm9ncmFtbWluZy4gIFByb21pc2VzIGFyZSBhIGZpcnN0
IGNsYXNzIHJlcHJlc2VudGF0aW9uIG9mIGEgdmFsdWUgdGhhdCBtYXkgYmUg
bWFkZSBhdmFpbGFibGUgaW4gdGhlIGZ1dHVyZS4gIFByb21pc2VzIGFyZSB1
c2VkIGluIG1hbnkgZXhpc3RpbmcgSmF2YVNjcmlwdCBsaWJyYXJpZXMuCgpg
YGBKYXZhU2NyaXB0CmZ1bmN0aW9uIHRpbWVvdXQoZHVyYXRpb24gPSAwKSB7
CiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4g
ewogICAgICAgIHNldFRpbWVvdXQocmVzb2x2ZSwgZHVyYXRpb24pOwogICAg
fSkKfQoKdmFyIHAgPSB0aW1lb3V0KDEwMDApLnRoZW4oKCkgPT4gewogICAg
cmV0dXJuIHRpbWVvdXQoMjAwMCk7Cn0pLnRoZW4oKCkgPT4gewogICAgdGhy
b3cgbmV3IEVycm9yKCJobW0iKTsKfSkuY2F0Y2goZXJyID0+IHsKICAgIHJl
dHVybiBQcm9taXNlLmFsbChbdGltZW91dCgxMDApLCB0aW1lb3V0KDIwMCld
KTsKfSkKYGBgCgpNb3JlIGluZm86IFtNRE4gUHJvbWlzZV0oaHR0cHM6Ly9k
ZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlw
dC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvUHJvbWlzZSkKCiMjIyBSZWZs
ZWN0IEFQSQpGdWxsIHJlZmxlY3Rpb24gQVBJIGV4cG9zaW5nIHRoZSBydW50
aW1lLWxldmVsIG1ldGEtb3BlcmF0aW9ucyBvbiBvYmplY3RzLiAgVGhpcyBp
cyBlZmZlY3RpdmVseSB0aGUgaW52ZXJzZSBvZiB0aGUgUHJveHkgQVBJLCBh
bmQgYWxsb3dzIG1ha2luZyBjYWxscyBjb3JyZXNwb25kaW5nIHRvIHRoZSBz
YW1lIG1ldGEtb3BlcmF0aW9ucyBhcyB0aGUgcHJveHkgdHJhcHMuICBFc3Bl
Y2lhbGx5IHVzZWZ1bCBmb3IgaW1wbGVtZW50aW5nIHByb3hpZXMuCgpgYGBK
YXZhU2NyaXB0Ci8vIE5vIHNhbXBsZSB5ZXQKYGBgCgpNb3JlIGluZm86IFtN
RE4gUmVmbGVjdF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4t
VVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVj
dHMvUmVmbGVjdCkKCiMjIyBUYWlsIENhbGxzCkNhbGxzIGluIHRhaWwtcG9z
aXRpb24gYXJlIGd1YXJhbnRlZWQgdG8gbm90IGdyb3cgdGhlIHN0YWNrIHVu
Ym91bmRlZGx5LiAgTWFrZXMgcmVjdXJzaXZlIGFsZ29yaXRobXMgc2FmZSBp
biB0aGUgZmFjZSBvZiB1bmJvdW5kZWQgaW5wdXRzLgoKYGBgSmF2YVNjcmlw
dApmdW5jdGlvbiBmYWN0b3JpYWwobiwgYWNjID0gMSkgewogICAgJ3VzZSBz
dHJpY3QnOwogICAgaWYgKG4gPD0gMSkgcmV0dXJuIGFjYzsKICAgIHJldHVy
biBmYWN0b3JpYWwobiAtIDEsIG4gKiBhY2MpOwp9CgovLyBTdGFjayBvdmVy
ZmxvdyBpbiBtb3N0IGltcGxlbWVudGF0aW9ucyB0b2RheSwKLy8gYnV0IHNh
ZmUgb24gYXJiaXRyYXJ5IGlucHV0cyBpbiBFUzYKZmFjdG9yaWFsKDEwMDAw
MCkKYGBgCg==
",,27082,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
