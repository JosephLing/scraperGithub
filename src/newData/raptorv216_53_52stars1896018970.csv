name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'gym',57222302,b'A toolkit for developing and comparing reinforcement learning algorithms.',b'Python',91,18967,,965,False,b'https://api.github.com/repos/openai/gym/forks',"KipTdGF0dXM6KiogTWFpbnRlbmFuY2UgKGV4cGVjdCBidWcgZml4ZXMgYW5k
IG1pbm9yIHVwZGF0ZXMpCgpPcGVuQUkgR3ltCioqKioqKioqKioKCioqT3Bl
bkFJIEd5bSBpcyBhIHRvb2xraXQgZm9yIGRldmVsb3BpbmcgYW5kIGNvbXBh
cmluZyByZWluZm9yY2VtZW50IGxlYXJuaW5nIGFsZ29yaXRobXMuKiogVGhp
cyBpcyB0aGUgYGBneW1gYCBvcGVuLXNvdXJjZSBsaWJyYXJ5LCB3aGljaCBn
aXZlcyB5b3UgYWNjZXNzIHRvIGEgc3RhbmRhcmRpemVkIHNldCBvZiBlbnZp
cm9ubWVudHMuCgouLiBpbWFnZTo6IGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9v
cGVuYWkvZ3ltLnN2Zz9icmFuY2g9bWFzdGVyCiAgICA6dGFyZ2V0OiBodHRw
czovL3RyYXZpcy1jaS5vcmcvb3BlbmFpL2d5bQoKYFNlZSBXaGF0J3MgTmV3
IHNlY3Rpb24gYmVsb3cgPCN3aGF0LXMtbmV3PmBfCgpgYGd5bWBgIG1ha2Vz
IG5vIGFzc3VtcHRpb25zIGFib3V0IHRoZSBzdHJ1Y3R1cmUgb2YgeW91ciBh
Z2VudCwgYW5kIGlzIGNvbXBhdGlibGUgd2l0aCBhbnkgbnVtZXJpY2FsIGNv
bXB1dGF0aW9uIGxpYnJhcnksIHN1Y2ggYXMgVGVuc29yRmxvdyBvciBUaGVh
bm8uIFlvdSBjYW4gdXNlIGl0IGZyb20gUHl0aG9uIGNvZGUsIGFuZCBzb29u
IGZyb20gb3RoZXIgbGFuZ3VhZ2VzLgoKSWYgeW91J3JlIG5vdCBzdXJlIHdo
ZXJlIHRvIHN0YXJ0LCB3ZSByZWNvbW1lbmQgYmVnaW5uaW5nIHdpdGggdGhl
CmBkb2NzIDxodHRwczovL2d5bS5vcGVuYWkuY29tL2RvY3M+YF8gb24gb3Vy
IHNpdGUuIFNlZSBhbHNvIHRoZSBgRkFRIDxodHRwczovL2dpdGh1Yi5jb20v
b3BlbmFpL2d5bS93aWtpL0ZBUT5gXy4KCkEgd2hpdGVwYXBlciBmb3IgT3Bl
bkFJIEd5bSBpcyBhdmFpbGFibGUgYXQgaHR0cDovL2FyeGl2Lm9yZy9hYnMv
MTYwNi4wMTU0MCwgYW5kIGhlcmUncyBhIEJpYlRlWCBlbnRyeSB0aGF0IHlv
dSBjYW4gdXNlIHRvIGNpdGUgaXQgaW4gYSBwdWJsaWNhdGlvbjo6CgogIEBt
aXNjezE2MDYuMDE1NDAsCiAgICBBdXRob3IgPSB7R3JlZyBCcm9ja21hbiBh
bmQgVmlja2kgQ2hldW5nIGFuZCBMdWR3aWcgUGV0dGVyc3NvbiBhbmQgSm9u
YXMgU2NobmVpZGVyIGFuZCBKb2huIFNjaHVsbWFuIGFuZCBKaWUgVGFuZyBh
bmQgV29qY2llY2ggWmFyZW1iYX0sCiAgICBUaXRsZSA9IHtPcGVuQUkgR3lt
fSwKICAgIFllYXIgPSB7MjAxNn0sCiAgICBFcHJpbnQgPSB7YXJYaXY6MTYw
Ni4wMTU0MH0sCiAgfQoKLi4gY29udGVudHM6OiAqKkNvbnRlbnRzIG9mIHRo
aXMgZG9jdW1lbnQqKgogICA6ZGVwdGg6IDIKCkJhc2ljcwo9PT09PT0KClRo
ZXJlIGFyZSB0d28gYmFzaWMgY29uY2VwdHMgaW4gcmVpbmZvcmNlbWVudCBs
ZWFybmluZzogdGhlCmVudmlyb25tZW50IChuYW1lbHksIHRoZSBvdXRzaWRl
IHdvcmxkKSBhbmQgdGhlIGFnZW50IChuYW1lbHksIHRoZQphbGdvcml0aG0g
eW91IGFyZSB3cml0aW5nKS4gVGhlIGFnZW50IHNlbmRzIGBhY3Rpb25zYCB0
byB0aGUKZW52aXJvbm1lbnQsIGFuZCB0aGUgZW52aXJvbm1lbnQgcmVwbGll
cyB3aXRoIGBvYnNlcnZhdGlvbnNgIGFuZApgcmV3YXJkc2AgKHRoYXQgaXMs
IGEgc2NvcmUpLgoKVGhlIGNvcmUgYGd5bWAgaW50ZXJmYWNlIGlzIGBFbnYg
PGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVuYWkvZ3ltL2Jsb2IvbWFzdGVyL2d5
bS9jb3JlLnB5PmBfLCB3aGljaCBpcwp0aGUgdW5pZmllZCBlbnZpcm9ubWVu
dCBpbnRlcmZhY2UuIFRoZXJlIGlzIG5vIGludGVyZmFjZSBmb3IgYWdlbnRz
Owp0aGF0IHBhcnQgaXMgbGVmdCB0byB5b3UuIFRoZSBmb2xsb3dpbmcgYXJl
IHRoZSBgYEVudmBgIG1ldGhvZHMgeW91CnNob3VsZCBrbm93OgoKLSBgcmVz
ZXQoc2VsZilgOiBSZXNldCB0aGUgZW52aXJvbm1lbnQncyBzdGF0ZS4gUmV0
dXJucyBgb2JzZXJ2YXRpb25gLgotIGBzdGVwKHNlbGYsIGFjdGlvbilgOiBT
dGVwIHRoZSBlbnZpcm9ubWVudCBieSBvbmUgdGltZXN0ZXAuIFJldHVybnMg
YG9ic2VydmF0aW9uYCwgYHJld2FyZGAsIGBkb25lYCwgYGluZm9gLgotIGBy
ZW5kZXIoc2VsZiwgbW9kZT0naHVtYW4nKWA6IFJlbmRlciBvbmUgZnJhbWUg
b2YgdGhlIGVudmlyb25tZW50LiBUaGUgZGVmYXVsdCBtb2RlIHdpbGwgZG8g
c29tZXRoaW5nIGh1bWFuIGZyaWVuZGx5LCBzdWNoIGFzIHBvcCB1cCBhIHdp
bmRvdy4gCgpTdXBwb3J0ZWQgc3lzdGVtcwotLS0tLS0tLS0tLS0tLS0tLQoK
V2UgY3VycmVudGx5IHN1cHBvcnQgTGludXggYW5kIE9TIFggcnVubmluZyBQ
eXRob24gMi43IG9yIDMuNSAtLSAzLjcuIApXaW5kb3dzIHN1cHBvcnQgaXMg
ZXhwZXJpbWVudGFsIC0gYWxnb3JpdGhtaWMsIHRveV90ZXh0LCBjbGFzc2lj
X2NvbnRyb2wgYW5kIGF0YXJpICpzaG91bGQqIHdvcmsgb24gV2luZG93cyAo
c2VlIG5leHQgc2VjdGlvbiBmb3IgaW5zdGFsbGF0aW9uIGluc3RydWN0aW9u
cyk7IG5ldmVydGhlbGVzcywgcHJvY2VlZCBhdCB5b3VyIG93biByaXNrLgoK
SW5zdGFsbGF0aW9uCj09PT09PT09PT09PQoKWW91IGNhbiBwZXJmb3JtIGEg
bWluaW1hbCBpbnN0YWxsIG9mIGBgZ3ltYGAgd2l0aDoKCi4uIGNvZGU6OiBz
aGVsbAoKICAgIGdpdCBjbG9uZSBodHRwczovL2dpdGh1Yi5jb20vb3BlbmFp
L2d5bS5naXQKICAgIGNkIGd5bQogICAgcGlwIGluc3RhbGwgLWUgLgoKSWYg
eW91IHByZWZlciwgeW91IGNhbiBkbyBhIG1pbmltYWwgaW5zdGFsbCBvZiB0
aGUgcGFja2FnZWQgdmVyc2lvbiBkaXJlY3RseSBmcm9tIFB5UEk6CgouLiBj
b2RlOjogc2hlbGwKCiAgICBwaXAgaW5zdGFsbCBneW0KCllvdSdsbCBiZSBh
YmxlIHRvIHJ1biBhIGZldyBlbnZpcm9ubWVudHMgcmlnaHQgYXdheToKCi0g
YWxnb3JpdGhtaWMKLSB0b3lfdGV4dAotIGNsYXNzaWNfY29udHJvbCAoeW91
J2xsIG5lZWQgYGBweWdsZXRgYCB0byByZW5kZXIgdGhvdWdoKQoKV2UgcmVj
b21tZW5kIHBsYXlpbmcgd2l0aCB0aG9zZSBlbnZpcm9ubWVudHMgYXQgZmly
c3QsIGFuZCB0aGVuIGxhdGVyCmluc3RhbGxpbmcgdGhlIGRlcGVuZGVuY2ll
cyBmb3IgdGhlIHJlbWFpbmluZyBlbnZpcm9ubWVudHMuCgpJbnN0YWxsaW5n
IGV2ZXJ5dGhpbmcKLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgpUbyBpbnN0YWxs
IHRoZSBmdWxsIHNldCBvZiBlbnZpcm9ubWVudHMsIHlvdSdsbCBuZWVkIHRv
IGhhdmUgc29tZSBzeXN0ZW0KcGFja2FnZXMgaW5zdGFsbGVkLiBXZSdsbCBi
dWlsZCBvdXQgdGhlIGxpc3QgaGVyZSBvdmVyIHRpbWU7IHBsZWFzZSBsZXQg
dXMga25vdwp3aGF0IHlvdSBlbmQgdXAgaW5zdGFsbGluZyBvbiB5b3VyIHBs
YXRmb3JtLiBBbHNvLCB0YWtlIGEgbG9vayBhdCB0aGUgZG9ja2VyIGZpbGVz
IChweS5Eb2NrZXJmaWxlKSB0bwpzZWUgdGhlIGNvbXBvc2l0aW9uIG9mIG91
ciBDSS10ZXN0ZWQgaW1hZ2VzLgoKT24gVWJ1bnR1IDE2LjA0IGFuZCAxOC4w
NDoKCi4uIGNvZGU6OiBzaGVsbAogICAgYXB0LWdldCBpbnN0YWxsIC15IGxp
YmdsdTEtbWVzYS1kZXYgbGliZ2wxLW1lc2EtZGV2IGxpYm9zbWVzYTYtZGV2
IHh2ZmIgZmZtcGVnIGN1cmwgcGF0Y2hlbGYgbGliZ2xmdzMgbGliZ2xmdzMt
ZGV2CgoKTXVKb0NvIGhhcyBhIHByb3ByaWV0YXJ5IGRlcGVuZGVuY3kgd2Ug
Y2FuJ3Qgc2V0IHVwIGZvciB5b3UuIEZvbGxvdwp0aGUKYGluc3RydWN0aW9u
cyA8aHR0cHM6Ly9naXRodWIuY29tL29wZW5haS9tdWpvY28tcHkjb2J0YWlu
aW5nLXRoZS1iaW5hcmllcy1hbmQtbGljZW5zZS1rZXk+YF8KaW4gdGhlIGBg
bXVqb2NvLXB5YGAgcGFja2FnZSBmb3IgaGVscC4gIEFzIGFuIGFsdGVybmF0
aXZlIHRvIGBgbXVqb2NvLXB5YGAsIGNvbnNpZGVyIGBQeUJ1bGxldCA8aHR0
cHM6Ly9naXRodWIuY29tL29wZW5haS9neW0vYmxvYi9tYXN0ZXIvZG9jcy9l
bnZpcm9ubWVudHMubWQjcHlidWxsZXQtcm9ib3RpY3MtZW52aXJvbm1lbnRz
PmBfIHdoaWNoIHVzZXMgdGhlIG9wZW4gc291cmNlIEJ1bGxldCBwaHlzaWNz
IGVuZ2luZSBhbmQgaGFzIG5vIGxpY2Vuc2UgcmVxdWlyZW1lbnQuCgpPbmNl
IHlvdSdyZSByZWFkeSB0byBpbnN0YWxsIGV2ZXJ5dGhpbmcsIHJ1biBgYHBp
cCBpbnN0YWxsIC1lICcuW2FsbF0nYGAgKG9yIGBgcGlwIGluc3RhbGwgJ2d5
bVthbGxdJ2BgKS4KClBpcCB2ZXJzaW9uCi0tLS0tLS0tLS0tCgpUbyBydW4g
YGBwaXAgaW5zdGFsbCAtZSAnLlthbGxdJ2BgLCB5b3UnbGwgbmVlZCBhIHNl
bWktcmVjZW50IHBpcC4KUGxlYXNlIG1ha2Ugc3VyZSB5b3VyIHBpcCBpcyBh
dCBsZWFzdCBhdCB2ZXJzaW9uIGBgMS41LjBgYC4gWW91IGNhbgp1cGdyYWRl
IHVzaW5nIHRoZSBmb2xsb3dpbmc6IGBgcGlwIGluc3RhbGwgLS1pZ25vcmUt
aW5zdGFsbGVkCnBpcGBgLiBBbHRlcm5hdGl2ZWx5LCB5b3UgY2FuIG9wZW4g
YHNldHVwLnB5CjxodHRwczovL2dpdGh1Yi5jb20vb3BlbmFpL2d5bS9ibG9i
L21hc3Rlci9zZXR1cC5weT5gXyBhbmQKaW5zdGFsbCB0aGUgZGVwZW5kZW5j
aWVzIGJ5IGhhbmQuCgpSZW5kZXJpbmcgb24gYSBzZXJ2ZXIKLS0tLS0tLS0t
LS0tLS0tLS0tLS0tCgpJZiB5b3UncmUgdHJ5aW5nIHRvIHJlbmRlciB2aWRl
byBvbiBhIHNlcnZlciwgeW91J2xsIG5lZWQgdG8gY29ubmVjdCBhCmZha2Ug
ZGlzcGxheS4gVGhlIGVhc2llc3Qgd2F5IHRvIGRvIHRoaXMgaXMgYnkgcnVu
bmluZyB1bmRlcgpgYHh2ZmItcnVuYGAgKG9uIFVidW50dSwgaW5zdGFsbCB0
aGUgYGB4dmZiYGAgcGFja2FnZSk6CgouLiBjb2RlOjogc2hlbGwKCiAgICAg
eHZmYi1ydW4gLXMgIi1zY3JlZW4gMCAxNDAweDkwMHgyNCIgYmFzaAoKSW5z
dGFsbGluZyBkZXBlbmRlbmNpZXMgZm9yIHNwZWNpZmljIGVudmlyb25tZW50
cwotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tCgpJZiB5b3UnZCBsaWtlIHRvIGluc3RhbGwgdGhlIGRlcGVuZGVu
Y2llcyBmb3Igb25seSBzcGVjaWZpYwplbnZpcm9ubWVudHMsIHNlZSBgc2V0
dXAucHkKPGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVuYWkvZ3ltL2Jsb2IvbWFz
dGVyL3NldHVwLnB5PmBfLiBXZQptYWludGFpbiB0aGUgbGlzdHMgb2YgZGVw
ZW5kZW5jaWVzIG9uIGEgcGVyLWVudmlyb25tZW50IGdyb3VwIGJhc2lzLgoK
RW52aXJvbm1lbnRzCj09PT09PT09PT09PQoKU2VlIGBMaXN0IG9mIEVudmly
b25tZW50cyA8ZG9jcy9lbnZpcm9ubWVudHMubWQ+YF8gYW5kIHRoZSBgZ3lt
IHNpdGUgPGh0dHA6Ly9neW0ub3BlbmFpLmNvbS9lbnZzLz5gXy4KCkZvciBp
bmZvcm1hdGlvbiBvbiBjcmVhdGluZyB5b3VyIG93biBlbnZpcm9ubWVudHMs
IHNlZSBgQ3JlYXRpbmcgeW91ciBvd24gRW52aXJvbm1lbnRzIDxkb2NzL2Ny
ZWF0aW5nLWVudmlyb25tZW50cy5tZD5gXy4KCkV4YW1wbGVzCj09PT09PT09
CgpTZWUgdGhlIGBgZXhhbXBsZXNgYCBkaXJlY3RvcnkuCgotIFJ1biBgZXhh
bXBsZXMvYWdlbnRzL3JhbmRvbV9hZ2VudC5weSA8aHR0cHM6Ly9naXRodWIu
Y29tL29wZW5haS9neW0vYmxvYi9tYXN0ZXIvZXhhbXBsZXMvYWdlbnRzL3Jh
bmRvbV9hZ2VudC5weT5gXyB0byBydW4gYSBzaW1wbGUgcmFuZG9tIGFnZW50
LgotIFJ1biBgZXhhbXBsZXMvYWdlbnRzL2NlbS5weSA8aHR0cHM6Ly9naXRo
dWIuY29tL29wZW5haS9neW0vYmxvYi9tYXN0ZXIvZXhhbXBsZXMvYWdlbnRz
L2NlbS5weT5gXyB0byBydW4gYW4gYWN0dWFsIGxlYXJuaW5nIGFnZW50ICh1
c2luZyB0aGUgY3Jvc3MtZW50cm9weSBtZXRob2QpLgotIFJ1biBgZXhhbXBs
ZXMvc2NyaXB0cy9saXN0X2VudnMgPGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVu
YWkvZ3ltL2Jsb2IvbWFzdGVyL2V4YW1wbGVzL3NjcmlwdHMvbGlzdF9lbnZz
PmBfIHRvIGdlbmVyYXRlIGEgbGlzdCBvZiBhbGwgZW52aXJvbm1lbnRzLgoK
VGVzdGluZwo9PT09PT09CgpXZSBhcmUgdXNpbmcgYHB5dGVzdCA8aHR0cDov
L2RvYy5weXRlc3Qub3JnPmBfIGZvciB0ZXN0cy4gWW91IGNhbiBydW4gdGhl
bSB2aWE6CgouLiBjb2RlOjogc2hlbGwKCiAgICBweXRlc3QKCgouLiBfU2Vl
IFdoYXQncyBOZXcgc2VjdGlvbiBiZWxvdzoKCldoYXQncyBuZXcKPT09PT09
PT09PQotIDIwMTktMTEtMDggKHYwLjE1LjQpCiAgICArIEFkZGVkIG11bHRp
cGxlIGVudiB3cmFwcGVycyAodGhhbmtzIEB6dW94aW5nZG9uZyBhbmQgQGhh
cnRpa2FpbmVuISkKICAgIC0gUmVtb3ZlZCBtdWpvY28gPj0gMi4wIHN1cHBv
cnQgZHVlIHRvIGxhY2sgb2YgdGVzdHMKCi0gMjAxOS0xMC0wOSAodjAuMTUu
MykKICAgICsgVmVjdG9yRW52IG1vZGlmaWNhdGlvbnMgLSB1bmlmaWVkIHRo
ZSBWZWN0b3JFbnYgYXBpIChhZGRlZCByZXNldF9hc3luYywgcmVzZXRfd2Fp
dCwgc3RlcF9hc3luYywgc3RlcF93YWl0IG1ldGhvZHMgdG8gU3luY1ZlY3Rv
ckVudik7IG1vcmUgZmxleGliaWxpdHkgaW4gQXN5bmNWZWN0b3JFbnYgd29y
a2VycwoKLSAyMDE5LTA4LTIzICh2MC4xNS4yKQogICAgKyBNb3JlIFdyYXBw
ZXJzIC0gQXRhcmlQcmVwcm9jZXNzaW5nLCBGcmFtZVN0YWNrLCBHcmF5U2Nh
bGVPYnNlcnZhdGlvbiwgRmlsdGVyT2JzZXJ2YXRpb24sICBGbGF0dGVuRGlj
dE9ic2VydmF0aW9uc1dyYXBwZXIsIFBpeGVsT2JzZXJ2YXRpb25XcmFwcGVy
LCBUcmFuc2Zvcm1SZXdhcmQgKHRoYW5rcyBAenVveGluZ2RvbmcsIEBoYXJ0
aWthaW5lbikKICAgICsgUmVtb3ZlIHJnYl9yZW5kZXJpbmdfdHJhY2tpbmcg
bG9naWMgZnJvbSBtdWpvY28gZW52aXJvbm1lbnRzIChkZWZhdWx0IGJlaGF2
aW9yIHN0YXlzIHRoZSBzYW1lIGZvciB0aGUgLXYzIGVudmlyb25tZW50cywg
cmdiIHJlbmRlcmluZyByZXR1cm5zIGEgdmlldyBmcm9tIHRyYWNraW5nIGNh
bWVyYSkKICAgICsgVmVsb2NpdHkgZ29hbCBjb25zdHJhaW50IGZvciBNb3Vu
dGFpbkNhciAodGhhbmtzIEBhYmhpbmF2c2FnYXIpCiAgICArIFRheGktdjIg
LT4gVGF4aS12MyAoYWRkIG1pc3Npbmcgd2FsbCBpbiB0aGUgbWFwIHRvIHJl
cGxpY2F0ZSBlbnYgYXMgZGVzY3JpYmUgaW4gdGhlIG9yaWdpbmFsIHBhcGVy
LCB0aGFua3MgQGtvYm90aWNzKQogICAgCi0gMjAxOS0wNy0yNiAodjAuMTQu
MCkKICAgICsgV3JhcHBlciBjbGVhbnVwCiAgICArIFNwZWMtcmVsYXRlZCBi
dWcgZml4ZXMKICAgICsgVmVjdG9yRW52IGZpeGVzCgotIDIwMTktMDYtMjEg
KHYwLjEzLjEpCiAgICArIEJ1ZyBmaXggZm9yIEFMRSAwLjYgZGlmZmljdWx0
eSBtb2RlcwogICAgKyBVc2UgbmFycm93IHJhbmdlIGZvciBweWdsZXQgdmVy
c2lvbnMKCi0gMjAxOS0wNi0yMSAodjAuMTMuMCkKICAgICsgVXBncmFkZSB0
byBBTEUgMC42IChhdGFyaS1weSAwLjIuMCkgKHRoYW5rcyBASmVzc2VGYXJl
YnJvISkKCi0gMjAxOS0wNi0yMSAodjAuMTIuNikKICAgICsgQWRkZWQgdmVj
dG9yaXplZCBlbnZpcm9ubWVudHMgKHRoYW5rcyBAdHJpc3RhbmRlbGV1ISku
IFZlY3Rvcml6ZWQgZW52aXJvbm1lbnQgcnVucyBtdWx0aXBsZSBjb3BpZXMg
b2YgYW4gZW52aXJvbm1lbnQgaW4gcGFyYWxsZWwuIFRvIGNyZWF0ZSBhIHZl
Y3Rvcml6ZWQgdmVyc2lvbiBvZiBhbiBlbnZpcm9ubWVudCwgdXNlIGBneW0u
dmVjdG9yLm1ha2UoZW52X2lkLCBudW1fZW52cywgKiprd2FyZ3MpYCwgZm9y
IGluc3RhbmNlLCBgZ3ltLnZlY3Rvci5tYWtlKCdQb25nLXY0JywxNilgLgoK
LSAyMDE5LTA1LTI4ICh2MC4xMi41KQogICAgKyBmaXhlZCBGZXRjaC1zbGlk
ZSBlbnZpcm9ubWVudCB0byBiZSBzb2x2YWJsZS4KCi0gMjAxOS0wNS0yNCAo
djAuMTIuNCkKICAgICsgcmVtb3ZlIHB5b3BlbmdsIGRlcGVuZGVuY3kgYW5k
IHVzZSBtb3JlIG5hcnJvdyBhdGFyaS1weSBhbmQgYm94MmQtcHkgdmVyc2lv
bnMKCi0gMjAxOS0wMy0yNSAodjAuMTIuMSkKICAgICsgcmdiIHJlbmRlcmlu
ZyBpbiBNdUpvQ28gbG9jb21vdGlvbiBgLXYzYCBlbnZpcm9ubWVudHMgbm93
IGNvbWVzIGZyb20gdHJhY2tpbmcgY2FtZXJhIChzbyB0aGF0IGFnZW50IGRv
ZXMgbm90IHJ1biBhd2F5IGZyb20gdGhlIGZpZWxkIG9mIHZpZXcpLiBUaGUg
b2xkIGJlaGF2aW91ciBjYW4gYmUgcmVzdG9yZWQgYnkgcGFzc2luZyByZ2Jf
cmVuZGVyaW5nX3RyYWNraW5nPUZhbHNlIGt3YXJnLiBBbHNvLCBhIHBvdGVu
dGlhbGx5IGJyZWFraW5nIGNoYW5nZSEhISBXcmFwcGVyIGNsYXNzIG5vdyBm
b3J3YXJkcyBtZXRob2RzIGFuZCBhdHRyaWJ1dGVzIHRvIHdyYXBwZWQgZW52
LgoKLSAyMDE5LTAyLTI2ICh2MC4xMi4wKQogICAgKyByZWxlYXNlIG11am9j
byBlbnZpcm9ubWVudHMgdjMgd2l0aCBzdXBwb3J0IGZvciBneW0ubWFrZSBr
d2FyZ3Mgc3VjaCBhcyBgeG1sX2ZpbGVgLCBgY3RybF9jb3N0X3dlaWdodGAs
IGByZXNldF9ub2lzZV9zY2FsZWAgZXRjCgotIDIwMTktMDItMDYgKHYwLjEx
LjApCiAgICArIHJlbW92ZSBneW0uc3BhY2VzLm5wX3JhbmRvbSBjb21tb24g
UFJORzsgdXNlIHBlci1pbnN0YW5jZSBQUk5HIGluc3RlYWQuCiAgICArIHN1
cHBvcnQgZm9yIGt3YXJncyBpbiBneW0ubWFrZQogICAgKyBsb3RzIG9mIGJ1
Z2ZpeGVzCgotIDIwMTgtMDItMjg6IFJlbGVhc2Ugb2YgYSBzZXQgb2YgbmV3
IHJvYm90aWNzIGVudmlyb25tZW50cy4KLSAyMDE4LTAxLTI1OiBNYWRlIHNv
bWUgYWVzdGhldGljIGltcHJvdmVtZW50cyBhbmQgcmVtb3ZlZCB1bm1haW50
YWluZWQgcGFydHMgb2YgZ3ltLiBUaGlzIG1heSBzZWVtIGxpa2UgYSBkb3du
Z3JhZGUgaW4gZnVuY3Rpb25hbGl0eSwgYnV0IGl0IGlzIGFjdHVhbGx5IGEg
bG9uZy1uZWVkZWQgY2xlYW51cCBpbiBwcmVwYXJhdGlvbiBmb3Igc29tZSBn
cmVhdCBuZXcgdGhpbmdzIHRoYXQgd2lsbCBiZSByZWxlYXNlZCBpbiB0aGUg
bmV4dCBtb250aC4KCiAgICArIE5vdyB5b3VyIGBFbnZgIGFuZCBgV3JhcHBl
cmAgc3ViY2xhc3NlcyBzaG91bGQgZGVmaW5lIGBzdGVwYCwgYHJlc2V0YCwg
YHJlbmRlcmAsIGBjbG9zZWAsIGBzZWVkYCByYXRoZXIgdGhhbiB1bmRlcnNj
b3JlZCBtZXRob2QgbmFtZXMuCiAgICArIFJlbW92ZWQgdGhlIGBib2FyZF9n
YW1lYCwgYGRlYnVnZ2luZ2AsIGBzYWZldHlgLCBgcGFyYW1ldGVyX3R1bmlu
Z2AgZW52aXJvbm1lbnRzIHNpbmNlIHRoZXkncmUgbm90IGJlaW5nIG1haW50
YWluZWQgYnkgdXMgYXQgT3BlbkFJLiBXZSBlbmNvdXJhZ2UgYXV0aG9ycyBh
bmQgdXNlcnMgdG8gY3JlYXRlIG5ldyByZXBvc2l0b3JpZXMgZm9yIHRoZXNl
IGVudmlyb25tZW50cy4KICAgICsgQ2hhbmdlZCBgTXVsdGlEaXNjcmV0ZWAg
YWN0aW9uIHNwYWNlIHRvIHJhbmdlIGZyb20gYFswLCAuLi4sIG4tMV1gIHJh
dGhlciB0aGFuIGBbYSwgLi4uLCBiLTFdYC4KICAgICsgTm8gbW9yZSBgcmVu
ZGVyKGNsb3NlPVRydWUpYCwgdXNlIGVudi1zcGVjaWZpYyBtZXRob2RzIHRv
IGNsb3NlIHRoZSByZW5kZXJpbmcuCiAgICArIFJlbW92ZWQgYHNjb3JlYm9h
cmRgIGRpcmVjdG9yeSwgc2luY2Ugc2l0ZSBkb2Vzbid0IGV4aXN0IGFueW1v
cmUuCiAgICArIE1vdmVkIGBneW0vbW9uaXRvcmluZ2AgdG8gYGd5bS93cmFw
cGVycy9tb25pdG9yaW5nYAogICAgKyBBZGQgYGR0eXBlYCB0byBgU3BhY2Vg
LgogICAgKyBOb3QgdXNpbmcgcHl0aG9uJ3MgYnVpbHQtaW4gbW9kdWxlIGFu
eW1vcmUsIHVzaW5nIGBneW0ubG9nZ2VyYAoKLSAyMDE4LTAxLTI0OiBBbGwg
Y29udGludW91cyBjb250cm9sIGVudmlyb25tZW50cyBub3cgdXNlIG11am9j
b19weSA+PSAxLjUwLgogIFZlcnNpb25zIGhhdmUgYmVlbiB1cGRhdGVkIGFj
Y29yZGluZ2x5IHRvIC12MiwgZS5nLiBIYWxmQ2hlZXRhaC12Mi4gUGVyZm9y
bWFuY2UKICBzaG91bGQgYmUgc2ltaWxhciAoc2VlIGh0dHBzOi8vZ2l0aHVi
LmNvbS9vcGVuYWkvZ3ltL3B1bGwvODM0KSBidXQgdGhlcmUgYXJlIGxpa2Vs
eQogIHNvbWUgZGlmZmVyZW5jZXMgZHVlIHRvIGNoYW5nZXMgaW4gTXVKb0Nv
LgotIDIwMTctMDYtMTY6IE1ha2UgZW52LnNwZWMgaW50byBhIHByb3BlcnR5
IHRvIGZpeCBhIGJ1ZyB0aGF0IG9jY3VycwogIHdoZW4geW91IHRyeSB0byBw
cmludCBvdXQgYW4gdW5yZWdpc3RlcmVkIEVudi4KLSAyMDE3LTA1LTEzOiBC
QUNLV0FSRFMgSU5DT01QQVRJQklMSVRZOiBUaGUgQXRhcmkgZW52aXJvbm1l
bnRzIGFyZSBub3cgYXQKICAqdjQqLiBUbyBrZWVwIHVzaW5nIHRoZSBvbGQg
djMgZW52aXJvbm1lbnRzLCBrZWVwIGd5bSA8PSAwLjguMiBhbmQgYXRhcmkt
cHkKICA8PSAwLjAuMjEuIE5vdGUgdGhhdCB0aGUgdjQgZW52aXJvbm1lbnRz
IHdpbGwgbm90IGdpdmUgaWRlbnRpY2FsIHJlc3VsdHMgdG8KICBleGlzdGlu
ZyB2MyByZXN1bHRzLCBhbHRob3VnaCBkaWZmZXJlbmNlcyBhcmUgbWlub3Iu
IFRoZSB2NCBlbnZpcm9ubWVudHMKICBpbmNvcnBvcmF0ZSB0aGUgbGF0ZXN0
IEFyY2FkZSBMZWFybmluZyBFbnZpcm9ubWVudCAoQUxFKSwgaW5jbHVkaW5n
IHNldmVyYWwKICBST00gZml4ZXMsIGFuZCBub3cgaGFuZGxlIGxvYWRpbmcg
YW5kIHNhdmluZyBvZiB0aGUgZW11bGF0b3Igc3RhdGUuIFdoaWxlCiAgc2Vl
ZHMgc3RpbGwgZW5zdXJlIGRldGVybWluaXNtLCB0aGUgZWZmZWN0IG9mIGFu
eSBnaXZlbiBzZWVkIGlzIG5vdCBwcmVzZXJ2ZWQKICBhY3Jvc3MgdGhpcyB1
cGdyYWRlIGJlY2F1c2UgdGhlIHJhbmRvbSBudW1iZXIgZ2VuZXJhdG9yIGlu
IEFMRSBoYXMgY2hhbmdlZC4KICBUaGUgYCpOb0ZyYW1lU2tpcC12NGAgZW52
aXJvbm1lbnRzIHNob3VsZCBiZSBjb25zaWRlcmVkIHRoZSBjYW5vbmljYWwg
QXRhcmkKICBlbnZpcm9ubWVudHMgZnJvbSBub3cgb24uCi0gMjAxNy0wMy0w
NTogQkFDS1dBUkRTIElOQ09NUEFUSUJJTElUWTogVGhlIGBjb25maWd1cmVg
IG1ldGhvZCBoYXMgYmVlbiByZW1vdmVkCiAgZnJvbSBgRW52YC4gYGNvbmZp
Z3VyZWAgd2FzIG5vdCB1c2VkIGJ5IGBneW1gLCBidXQgd2FzIHVzZWQgYnkg
c29tZSBkZXBlbmRlbnQKICBsaWJyYXJpZXMgaW5jbHVkaW5nIGB1bml2ZXJz
ZWAuIFRoZXNlIGxpYnJhcmllcyB3aWxsIG1pZ3JhdGUgYXdheSBmcm9tIHRo
ZQogIGNvbmZpZ3VyZSBtZXRob2QgYnkgdXNpbmcgd3JhcHBlcnMgaW5zdGVh
ZC4gVGhpcyBjaGFuZ2UgaXMgb24gbWFzdGVyIGFuZCB3aWxsIGJlIHJlbGVh
c2VkIHdpdGggMC44LjAuCi0gMjAxNi0xMi0yNzogQkFDS1dBUkRTIElOQ09N
UEFUSUJJTElUWTogVGhlIGd5bSBtb25pdG9yIGlzIG5vdyBhCiAgd3JhcHBl
ci4gUmF0aGVyIHRoYW4gc3RhcnRpbmcgbW9uaXRvcmluZyBhcwogIGBlbnYu
bW9uaXRvci5zdGFydChkaXJlY3RvcnkpYCwgZW52cyBhcmUgbm93IHdyYXBw
ZWQgYXMgZm9sbG93czoKICBgZW52ID0gd3JhcHBlcnMuTW9uaXRvcihlbnYs
IGRpcmVjdG9yeSlgLiBUaGlzIGNoYW5nZSBpcyBvbiBtYXN0ZXIKICBhbmQg
d2lsbCBiZSByZWxlYXNlZCB3aXRoIDAuNy4wLgotIDIwMTYtMTEtMTogU2V2
ZXJhbCBleHBlcmltZW50YWwgY2hhbmdlcyB0byBob3cgYSBydW5uaW5nIG1v
bml0b3IgaW50ZXJhY3RzCiAgd2l0aCBlbnZpcm9ubWVudHMuIFRoZSBtb25p
dG9yIHdpbGwgbm93IHJhaXNlIGFuIGVycm9yIGlmIHJlc2V0KCkgaXMgY2Fs
bGVkCiAgd2hlbiB0aGUgZW52IGhhcyBub3QgcmV0dXJuZWQgZG9uZT1UcnVl
LiBUaGUgbW9uaXRvciB3aWxsIG9ubHkgcmVjb3JkIGNvbXBsZXRlCiAgZXBp
c29kZXMgd2hlcmUgZG9uZT1UcnVlLiBGaW5hbGx5LCB0aGUgbW9uaXRvciBu
byBsb25nZXIgY2FsbHMgc2VlZCgpIG9uIHRoZQogIHVuZGVybHlpbmcgZW52
LCBub3IgZG9lcyBpdCByZWNvcmQgb3IgdXBsb2FkIHNlZWQgaW5mb3JtYXRp
b24uCi0gMjAxNi0xMC0zMTogV2UncmUgZXhwZXJpbWVudGFsbHkgZXhwYW5k
aW5nIHRoZSBlbnZpcm9ubWVudCBJRCBmb3JtYXQKICB0byBpbmNsdWRlIGFu
IG9wdGlvbmFsIHVzZXJuYW1lLgotIDIwMTYtMDktMjE6IFN3aXRjaCB0aGUg
R3ltIGF1dG9tYXRlZCBsb2dnZXIgc2V0dXAgdG8gY29uZmlndXJlIHRoZQog
IHJvb3QgbG9nZ2VyIHJhdGhlciB0aGFuIGp1c3QgdGhlICdneW0nIGxvZ2dl
ci4KLSAyMDE2LTA4LTE3OiBDYWxsaW5nIGBjbG9zZWAgb24gYW4gZW52IHdp
bGwgYWxzbyBjbG9zZSB0aGUgbW9uaXRvcgogIGFuZCBhbnkgcmVuZGVyaW5n
IHdpbmRvd3MuCi0gMjAxNi0wOC0xNzogVGhlIG1vbml0b3Igd2lsbCBubyBs
b25nZXIgd3JpdGUgbWFuaWZlc3QgZmlsZXMgaW4KICByZWFsLXRpbWUsIHVu
bGVzcyBgd3JpdGVfdXBvbl9yZXNldD1UcnVlYCBpcyBwYXNzZWQuCi0gMjAx
Ni0wNS0yODogRm9yIGNvbnRyb2xsZWQgcmVwcm9kdWNpYmlsaXR5LCBlbnZz
IG5vdyBzdXBwb3J0IHNlZWRpbmcKICAoY2YgIzkxIGFuZCAjMTM1KS4gVGhl
IG1vbml0b3IgcmVjb3JkcyB3aGljaCBzZWVkcyBhcmUgdXNlZC4gV2Ugd2ls
bAogIHNvb24gYWRkIHNlZWQgaW5mb3JtYXRpb24gdG8gdGhlIGRpc3BsYXkg
b24gdGhlIHNjb3JlYm9hcmQuCg==
",,18967,"ZGlzdDogeGVuaWFsCmxhbmd1YWdlOiBweXRob24KcHl0aG9uOgogIC0gIjMu
NyIKc2VydmljZXM6CiAgLSBkb2NrZXIKZW52OgogICMgLSBVQlVOVFVfVkVS
PTE0LjA0IC0gcHJvYmxlbXMgd2l0aCBhdGFyaS1weQogIC0gUFlfVkVSPTIu
NwogIC0gUFlfVkVSPTMuNS42CiAgLSBQWV9WRVI9My42LjgKICAtIFBZX1ZF
Uj0zLjcuMwoKaW5zdGFsbDogIiIgIyBzbyB0cmF2aXMgZG9lc24ndCBkbyBw
aXAgaW5zdGFsbCByZXF1aXJlbWVudHMudHh0CnNjcmlwdDoKICAtIGRvY2tl
ciBidWlsZCAtZiBweS5Eb2NrZXJmaWxlIC0tYnVpbGQtYXJnIE1VSk9DT19L
RVk9JE1VSk9DT19LRVkgLS1idWlsZC1hcmcgUFlUSE9OX1ZFUj0kUFlfVkVS
IC10IGd5bS10ZXN0IC4KICAtIGRvY2tlciBydW4gZ3ltLXRlc3QgCgpkZXBs
b3k6CiAgICBwcm92aWRlcjogcHlwaQogICAgdXNlcm5hbWU6ICRUV0lORV9V
U0VSTkFNRQogICAgcGFzc3dvcmQ6ICRUV0lORV9QQVNTV09SRAogICAgb246
CiAgICAgICAgdGFnczogdHJ1ZQogICAgICAgIGNvbmRpdGlvbjogJFBZX1ZF
UiA9IDMuNS42Cg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'GPUImage',3431083,b'An open source iOS framework for GPU-based image and video processing',b'Objective-C',986,18962,,754,False,b'https://api.github.com/repos/BradLarson/GPUImage/forks',"IyBHUFVJbWFnZSAjCgo8ZGl2IHN0eWxlPSJmbG9hdDogcmlnaHQiPjxpbWcg
c3JjPSJodHRwOi8vc3Vuc2V0bGFrZXNvZnR3YXJlLmNvbS9zaXRlcy9kZWZh
dWx0L2ZpbGVzL0dQVUltYWdlTG9nby5wbmciIC8+PC9kaXY+Cgo8YSBocmVm
PSJodHRwczovL3plbm9kby5vcmcvcmVjb3JkLzEwNDE2Iy5VNVlHYUY3NzNN
ZCI+PGltZyBzcmM9Imh0dHBzOi8vemVub2RvLm9yZy9iYWRnZS9kb2kvMTAu
NTI4MS96ZW5vZG8uMTA0MTYuc3ZnIiAvPjwvYT4KCkJyYWQgTGFyc29uCgpo
dHRwOi8vd3d3LnN1bnNldGxha2Vzb2Z0d2FyZS5jb20KCltAYnJhZGxhcnNv
bl0oaHR0cHM6Ly90d2l0dGVyLmNvbS9icmFkbGFyc29uKQoKY29udGFjdEBz
dW5zZXRsYWtlc29mdHdhcmUuY29tCgojIyBPdmVydmlldyAjIwoKVGhlIEdQ
VUltYWdlIGZyYW1ld29yayBpcyBhIEJTRC1saWNlbnNlZCBpT1MgbGlicmFy
eSB0aGF0IGxldHMgeW91IGFwcGx5IEdQVS1hY2NlbGVyYXRlZCBmaWx0ZXJz
IGFuZCBvdGhlciBlZmZlY3RzIHRvIGltYWdlcywgbGl2ZSBjYW1lcmEgdmlk
ZW8sIGFuZCBtb3ZpZXMuIEluIGNvbXBhcmlzb24gdG8gQ29yZSBJbWFnZSAo
cGFydCBvZiBpT1MgNS4wKSwgR1BVSW1hZ2UgYWxsb3dzIHlvdSB0byB3cml0
ZSB5b3VyIG93biBjdXN0b20gZmlsdGVycywgc3VwcG9ydHMgZGVwbG95bWVu
dCB0byBpT1MgNC4wLCBhbmQgaGFzIGEgc2ltcGxlciBpbnRlcmZhY2UuIEhv
d2V2ZXIsIGl0IGN1cnJlbnRseSBsYWNrcyBzb21lIG9mIHRoZSBtb3JlIGFk
dmFuY2VkIGZlYXR1cmVzIG9mIENvcmUgSW1hZ2UsIHN1Y2ggYXMgZmFjaWFs
IGRldGVjdGlvbi4KCkZvciBtYXNzaXZlbHkgcGFyYWxsZWwgb3BlcmF0aW9u
cyBsaWtlIHByb2Nlc3NpbmcgaW1hZ2VzIG9yIGxpdmUgdmlkZW8gZnJhbWVz
LCBHUFVzIGhhdmUgc29tZSBzaWduaWZpY2FudCBwZXJmb3JtYW5jZSBhZHZh
bnRhZ2VzIG92ZXIgQ1BVcy4gT24gYW4gaVBob25lIDQsIGEgc2ltcGxlIGlt
YWdlIGZpbHRlciBjYW4gYmUgb3ZlciAxMDAgdGltZXMgZmFzdGVyIHRvIHBl
cmZvcm0gb24gdGhlIEdQVSB0aGFuIGFuIGVxdWl2YWxlbnQgQ1BVLWJhc2Vk
IGZpbHRlci4KCkhvd2V2ZXIsIHJ1bm5pbmcgY3VzdG9tIGZpbHRlcnMgb24g
dGhlIEdQVSByZXF1aXJlcyBhIGxvdCBvZiBjb2RlIHRvIHNldCB1cCBhbmQg
bWFpbnRhaW4gYW4gT3BlbkdMIEVTIDIuMCByZW5kZXJpbmcgdGFyZ2V0IGZv
ciB0aGVzZSBmaWx0ZXJzLiBJIGNyZWF0ZWQgYSBzYW1wbGUgcHJvamVjdCB0
byBkbyB0aGlzOgoKaHR0cDovL3d3dy5zdW5zZXRsYWtlc29mdHdhcmUuY29t
LzIwMTAvMTAvMjIvZ3B1LWFjY2VsZXJhdGVkLXZpZGVvLXByb2Nlc3Npbmct
bWFjLWFuZC1pb3MKCmFuZCBmb3VuZCB0aGF0IHRoZXJlIHdhcyBhIGxvdCBv
ZiBib2lsZXJwbGF0ZSBjb2RlIEkgaGFkIHRvIHdyaXRlIGluIGl0cyBjcmVh
dGlvbi4gVGhlcmVmb3JlLCBJIHB1dCB0b2dldGhlciB0aGlzIGZyYW1ld29y
ayB0aGF0IGVuY2Fwc3VsYXRlcyBhIGxvdCBvZiB0aGUgY29tbW9uIHRhc2tz
IHlvdSdsbCBlbmNvdW50ZXIgd2hlbiBwcm9jZXNzaW5nIGltYWdlcyBhbmQg
dmlkZW8gYW5kIG1hZGUgaXQgc28gdGhhdCB5b3UgZG9uJ3QgbmVlZCB0byBj
YXJlIGFib3V0IHRoZSBPcGVuR0wgRVMgMi4wIHVuZGVycGlubmluZ3MuCgpU
aGlzIGZyYW1ld29yayBjb21wYXJlcyBmYXZvcmFibHkgdG8gQ29yZSBJbWFn
ZSB3aGVuIGhhbmRsaW5nIHZpZGVvLCB0YWtpbmcgb25seSAyLjUgbXMgb24g
YW4gaVBob25lIDQgdG8gdXBsb2FkIGEgZnJhbWUgZnJvbSB0aGUgY2FtZXJh
LCBhcHBseSBhIGdhbW1hIGZpbHRlciwgYW5kIGRpc3BsYXksIHZlcnN1cyAx
MDYgbXMgZm9yIHRoZSBzYW1lIG9wZXJhdGlvbiB1c2luZyBDb3JlIEltYWdl
LiBDUFUtYmFzZWQgcHJvY2Vzc2luZyB0YWtlcyA0NjAgbXMsIG1ha2luZyBH
UFVJbWFnZSA0MFggZmFzdGVyIHRoYW4gQ29yZSBJbWFnZSBmb3IgdGhpcyBv
cGVyYXRpb24gb24gdGhpcyBoYXJkd2FyZSwgYW5kIDE4NFggZmFzdGVyIHRo
YW4gQ1BVLWJvdW5kIHByb2Nlc3NpbmcuIE9uIGFuIGlQaG9uZSA0UywgR1BV
SW1hZ2UgaXMgb25seSA0WCBmYXN0ZXIgdGhhbiBDb3JlIEltYWdlIGZvciB0
aGlzIGNhc2UsIGFuZCAxMDJYIGZhc3RlciB0aGFuIENQVS1ib3VuZCBwcm9j
ZXNzaW5nLiBIb3dldmVyLCBmb3IgbW9yZSBjb21wbGV4IG9wZXJhdGlvbnMg
bGlrZSBHYXVzc2lhbiBibHVycyBhdCBsYXJnZXIgcmFkaWksIENvcmUgSW1h
Z2UgY3VycmVudGx5IG91dHBhY2VzIEdQVUltYWdlLgoKIyMgTGljZW5zZSAj
IwoKQlNELXN0eWxlLCB3aXRoIHRoZSBmdWxsIGxpY2Vuc2UgYXZhaWxhYmxl
IHdpdGggdGhlIGZyYW1ld29yayBpbiBMaWNlbnNlLnR4dC4KCiMjIFRlY2hu
aWNhbCByZXF1aXJlbWVudHMgIyMKCi0gT3BlbkdMIEVTIDIuMDogQXBwbGlj
YXRpb25zIHVzaW5nIHRoaXMgd2lsbCBub3QgcnVuIG9uIHRoZSBvcmlnaW5h
bCBpUGhvbmUsIGlQaG9uZSAzRywgYW5kIDFzdCBhbmQgMm5kIGdlbmVyYXRp
b24gaVBvZCB0b3VjaGVzCi0gaU9TIDQuMSBhcyBhIGRlcGxveW1lbnQgdGFy
Z2V0ICg0LjAgZGlkbid0IGhhdmUgc29tZSBleHRlbnNpb25zIG5lZWRlZCBm
b3IgbW92aWUgcmVhZGluZykuIGlPUyA0LjMgaXMgbmVlZGVkIGFzIGEgZGVw
bG95bWVudCB0YXJnZXQgaWYgeW91IHdpc2ggdG8gc2hvdyBsaXZlIHZpZGVv
IHByZXZpZXdzIHdoZW4gdGFraW5nIGEgc3RpbGwgcGhvdG8uCi0gaU9TIDUu
MCBTREsgdG8gYnVpbGQKLSBEZXZpY2VzIG11c3QgaGF2ZSBhIGNhbWVyYSB0
byB1c2UgY2FtZXJhLXJlbGF0ZWQgZnVuY3Rpb25hbGl0eSAob2J2aW91c2x5
KQotIFRoZSBmcmFtZXdvcmsgdXNlcyBhdXRvbWF0aWMgcmVmZXJlbmNlIGNv
dW50aW5nIChBUkMpLCBidXQgc2hvdWxkIHN1cHBvcnQgcHJvamVjdHMgdXNp
bmcgYm90aCBBUkMgYW5kIG1hbnVhbCByZWZlcmVuY2UgY291bnRpbmcgaWYg
YWRkZWQgYXMgYSBzdWJwcm9qZWN0IGFzIGV4cGxhaW5lZCBiZWxvdy4gRm9y
IG1hbnVhbCByZWZlcmVuY2UgY291bnRpbmcgYXBwbGljYXRpb25zIHRhcmdl
dGluZyBpT1MgNC54LCB5b3UnbGwgbmVlZCBhZGQgLWZvYmpjLWFyYyB0byB0
aGUgT3RoZXIgTGlua2VyIEZsYWdzIGZvciB5b3VyIGFwcGxpY2F0aW9uIHBy
b2plY3QuCgojIyBHZW5lcmFsIGFyY2hpdGVjdHVyZSAjIwoKR1BVSW1hZ2Ug
dXNlcyBPcGVuR0wgRVMgMi4wIHNoYWRlcnMgdG8gcGVyZm9ybSBpbWFnZSBh
bmQgdmlkZW8gbWFuaXB1bGF0aW9uIG11Y2ggZmFzdGVyIHRoYW4gY291bGQg
YmUgZG9uZSBpbiBDUFUtYm91bmQgcm91dGluZXMuIEhvd2V2ZXIsIGl0IGhp
ZGVzIHRoZSBjb21wbGV4aXR5IG9mIGludGVyYWN0aW5nIHdpdGggdGhlIE9w
ZW5HTCBFUyBBUEkgaW4gYSBzaW1wbGlmaWVkIE9iamVjdGl2ZS1DIGludGVy
ZmFjZS4gVGhpcyBpbnRlcmZhY2UgbGV0cyB5b3UgZGVmaW5lIGlucHV0IHNv
dXJjZXMgZm9yIGltYWdlcyBhbmQgdmlkZW8sIGF0dGFjaCBmaWx0ZXJzIGlu
IGEgY2hhaW4sIGFuZCBzZW5kIHRoZSByZXN1bHRpbmcgcHJvY2Vzc2VkIGlt
YWdlIG9yIHZpZGVvIHRvIHRoZSBzY3JlZW4sIHRvIGEgVUlJbWFnZSwgb3Ig
dG8gYSBtb3ZpZSBvbiBkaXNrLgoKSW1hZ2VzIG9yIGZyYW1lcyBvZiB2aWRl
byBhcmUgdXBsb2FkZWQgZnJvbSBzb3VyY2Ugb2JqZWN0cywgd2hpY2ggYXJl
IHN1YmNsYXNzZXMgb2YgR1BVSW1hZ2VPdXRwdXQuIFRoZXNlIGluY2x1ZGUg
R1BVSW1hZ2VWaWRlb0NhbWVyYSAoZm9yIGxpdmUgdmlkZW8gZnJvbSBhbiBp
T1MgY2FtZXJhKSwgR1BVSW1hZ2VTdGlsbENhbWVyYSAoZm9yIHRha2luZyBw
aG90b3Mgd2l0aCB0aGUgY2FtZXJhKSwgR1BVSW1hZ2VQaWN0dXJlIChmb3Ig
c3RpbGwgaW1hZ2VzKSwgYW5kIEdQVUltYWdlTW92aWUgKGZvciBtb3ZpZXMp
LiBTb3VyY2Ugb2JqZWN0cyB1cGxvYWQgc3RpbGwgaW1hZ2UgZnJhbWVzIHRv
IE9wZW5HTCBFUyBhcyB0ZXh0dXJlcywgdGhlbiBoYW5kIHRob3NlIHRleHR1
cmVzIG9mZiB0byB0aGUgbmV4dCBvYmplY3RzIGluIHRoZSBwcm9jZXNzaW5n
IGNoYWluLgoKRmlsdGVycyBhbmQgb3RoZXIgc3Vic2VxdWVudCBlbGVtZW50
cyBpbiB0aGUgY2hhaW4gY29uZm9ybSB0byB0aGUgR1BVSW1hZ2VJbnB1dCBw
cm90b2NvbCwgd2hpY2ggbGV0cyB0aGVtIHRha2UgaW4gdGhlIHN1cHBsaWVk
IG9yIHByb2Nlc3NlZCB0ZXh0dXJlIGZyb20gdGhlIHByZXZpb3VzIGxpbmsg
aW4gdGhlIGNoYWluIGFuZCBkbyBzb21ldGhpbmcgd2l0aCBpdC4gT2JqZWN0
cyBvbmUgc3RlcCBmdXJ0aGVyIGRvd24gdGhlIGNoYWluIGFyZSBjb25zaWRl
cmVkIHRhcmdldHMsIGFuZCBwcm9jZXNzaW5nIGNhbiBiZSBicmFuY2hlZCBi
eSBhZGRpbmcgbXVsdGlwbGUgdGFyZ2V0cyB0byBhIHNpbmdsZSBvdXRwdXQg
b3IgZmlsdGVyLgoKRm9yIGV4YW1wbGUsIGFuIGFwcGxpY2F0aW9uIHRoYXQg
dGFrZXMgaW4gbGl2ZSB2aWRlbyBmcm9tIHRoZSBjYW1lcmEsIGNvbnZlcnRz
IHRoYXQgdmlkZW8gdG8gYSBzZXBpYSB0b25lLCB0aGVuIGRpc3BsYXlzIHRo
ZSB2aWRlbyBvbnNjcmVlbiB3b3VsZCBzZXQgdXAgYSBjaGFpbiBsb29raW5n
IHNvbWV0aGluZyBsaWtlIHRoZSBmb2xsb3dpbmc6CgogICAgR1BVSW1hZ2VW
aWRlb0NhbWVyYSAtPiBHUFVJbWFnZVNlcGlhRmlsdGVyIC0+IEdQVUltYWdl
VmlldwoKIyMgQWRkaW5nIHRoZSBzdGF0aWMgbGlicmFyeSB0byB5b3VyIGlP
UyBwcm9qZWN0ICMjCgpOb3RlOiBpZiB5b3Ugd2FudCB0byB1c2UgdGhpcyBp
biBhIFN3aWZ0IHByb2plY3QsIHlvdSBuZWVkIHRvIHVzZSB0aGUgc3RlcHMg
aW4gdGhlICJBZGRpbmcgdGhpcyBhcyBhIGZyYW1ld29yayIgc2VjdGlvbiBp
bnN0ZWFkIG9mIHRoZSBmb2xsb3dpbmcuIFN3aWZ0IG5lZWRzIG1vZHVsZXMg
Zm9yIHRoaXJkLXBhcnR5IGNvZGUuCgpPbmNlIHlvdSBoYXZlIHRoZSBsYXRl
c3Qgc291cmNlIGNvZGUgZm9yIHRoZSBmcmFtZXdvcmssIGl0J3MgZmFpcmx5
IHN0cmFpZ2h0Zm9yd2FyZCB0byBhZGQgaXQgdG8geW91ciBhcHBsaWNhdGlv
bi4gU3RhcnQgYnkgZHJhZ2dpbmcgdGhlIEdQVUltYWdlLnhjb2RlcHJvaiBm
aWxlIGludG8geW91ciBhcHBsaWNhdGlvbidzIFhjb2RlIHByb2plY3QgdG8g
ZW1iZWQgdGhlIGZyYW1ld29yayBpbiB5b3VyIHByb2plY3QuIE5leHQsIGdv
IHRvIHlvdXIgYXBwbGljYXRpb24ncyB0YXJnZXQgYW5kIGFkZCBHUFVJbWFn
ZSBhcyBhIFRhcmdldCBEZXBlbmRlbmN5LiBGaW5hbGx5LCB5b3UnbGwgd2Fu
dCB0byBkcmFnIHRoZSBsaWJHUFVJbWFnZS5hIGxpYnJhcnkgZnJvbSB0aGUg
R1BVSW1hZ2UgZnJhbWV3b3JrJ3MgUHJvZHVjdHMgZm9sZGVyIHRvIHRoZSBM
aW5rIEJpbmFyeSBXaXRoIExpYnJhcmllcyBidWlsZCBwaGFzZSBpbiB5b3Vy
IGFwcGxpY2F0aW9uJ3MgdGFyZ2V0LgoKR1BVSW1hZ2UgbmVlZHMgYSBmZXcg
b3RoZXIgZnJhbWV3b3JrcyB0byBiZSBsaW5rZWQgaW50byB5b3VyIGFwcGxp
Y2F0aW9uLCBzbyB5b3UnbGwgbmVlZCB0byBhZGQgdGhlIGZvbGxvd2luZyBh
cyBsaW5rZWQgbGlicmFyaWVzIGluIHlvdXIgYXBwbGljYXRpb24gdGFyZ2V0
OgoKLSBDb3JlTWVkaWEKLSBDb3JlVmlkZW8KLSBPcGVuR0xFUwotIEFWRm91
bmRhdGlvbgotIFF1YXJ0ekNvcmUKCllvdSdsbCBhbHNvIG5lZWQgdG8gZmlu
ZCB0aGUgZnJhbWV3b3JrIGhlYWRlcnMsIHNvIHdpdGhpbiB5b3VyIHByb2pl
Y3QncyBidWlsZCBzZXR0aW5ncyBzZXQgdGhlIEhlYWRlciBTZWFyY2ggUGF0
aHMgdG8gdGhlIHJlbGF0aXZlIHBhdGggZnJvbSB5b3VyIGFwcGxpY2F0aW9u
IHRvIHRoZSBmcmFtZXdvcmsvIHN1YmRpcmVjdG9yeSB3aXRoaW4gdGhlIEdQ
VUltYWdlIHNvdXJjZSBkaXJlY3RvcnkuIE1ha2UgdGhpcyBoZWFkZXIgc2Vh
cmNoIHBhdGggcmVjdXJzaXZlLgoKVG8gdXNlIHRoZSBHUFVJbWFnZSBjbGFz
c2VzIHdpdGhpbiB5b3VyIGFwcGxpY2F0aW9uLCBzaW1wbHkgaW5jbHVkZSB0
aGUgY29yZSBmcmFtZXdvcmsgaGVhZGVyIHVzaW5nIHRoZSBmb2xsb3dpbmc6
CgogICAgI2ltcG9ydCAiR1BVSW1hZ2UuaCIKCkFzIGEgbm90ZTogaWYgeW91
IHJ1biBpbnRvIHRoZSBlcnJvciAiVW5rbm93biBjbGFzcyBHUFVJbWFnZVZp
ZXcgaW4gSW50ZXJmYWNlIEJ1aWxkZXIiIG9yIHRoZSBsaWtlIHdoZW4gdHJ5
aW5nIHRvIGJ1aWxkIGFuIGludGVyZmFjZSB3aXRoIEludGVyZmFjZSBCdWls
ZGVyLCB5b3UgbWF5IG5lZWQgdG8gYWRkIC1PYmpDIHRvIHlvdXIgT3RoZXIg
TGlua2VyIEZsYWdzIGluIHlvdXIgcHJvamVjdCdzIGJ1aWxkIHNldHRpbmdz
LgoKQWxzbywgaWYgeW91IG5lZWQgdG8gZGVwbG95IHRoaXMgdG8gaU9TIDQu
eCwgaXQgYXBwZWFycyB0aGF0IHRoZSBjdXJyZW50IHZlcnNpb24gb2YgWGNv
ZGUgKDQuMykgcmVxdWlyZXMgdGhhdCB5b3Ugd2Vhay1saW5rIHRoZSBDb3Jl
IFZpZGVvIGZyYW1ld29yayBpbiB5b3VyIGZpbmFsIGFwcGxpY2F0aW9uIG9y
IHlvdSBzZWUgY3Jhc2hlcyB3aXRoIHRoZSBtZXNzYWdlICJTeW1ib2wgbm90
IGZvdW5kOiBfQ1ZPcGVuR0xFU1RleHR1cmVDYWNoZUNyZWF0ZSIgd2hlbiB5
b3UgY3JlYXRlIGFuIGFyY2hpdmUgZm9yIHVwbG9hZCB0byB0aGUgQXBwIFN0
b3JlIG9yIGZvciBhZCBob2MgZGlzdHJpYnV0aW9uLiBUbyBkbyB0aGlzLCBn
byB0byB5b3VyIHByb2plY3QncyBCdWlsZCBQaGFzZXMgdGFiLCBleHBhbmQg
dGhlIExpbmsgQmluYXJ5IFdpdGggTGlicmFyaWVzIGdyb3VwLCBhbmQgZmlu
ZCBDb3JlVmlkZW8uZnJhbWV3b3JrIGluIHRoZSBsaXN0LiBDaGFuZ2UgdGhl
IHNldHRpbmcgZm9yIGl0IGluIHRoZSBmYXIgcmlnaHQgb2YgdGhlIGxpc3Qg
ZnJvbSBSZXF1aXJlZCB0byBPcHRpb25hbC4KCkFkZGl0aW9uYWxseSwgdGhp
cyBpcyBhbiBBUkMtZW5hYmxlZCBmcmFtZXdvcmssIHNvIGlmIHlvdSB3YW50
IHRvIHVzZSB0aGlzIHdpdGhpbiBhIG1hbnVhbCByZWZlcmVuY2UgY291bnRl
ZCBhcHBsaWNhdGlvbiB0YXJnZXRpbmcgaU9TIDQueCwgeW91J2xsIG5lZWQg
dG8gYWRkIC1mb2JqYy1hcmMgdG8geW91ciBPdGhlciBMaW5rZXIgRmxhZ3Mg
YXMgd2VsbC4KCiMjIyBCdWlsZGluZyBhIHN0YXRpYyBsaWJyYXJ5IGF0IHRo
ZSBjb21tYW5kIGxpbmUgIyMjCgpJZiB5b3UgZG9uJ3Qgd2FudCB0byBpbmNs
dWRlIHRoZSBwcm9qZWN0IGFzIGEgZGVwZW5kZW5jeSBpbiB5b3VyIGFwcGxp
Y2F0aW9uJ3MgWGNvZGUgcHJvamVjdCwgeW91IGNhbiBidWlsZCBhIHVuaXZl
cnNhbCBzdGF0aWMgbGlicmFyeSBmb3IgdGhlIGlPUyBTaW11bGF0b3Igb3Ig
ZGV2aWNlLiBUbyBkbyB0aGlzLCBydW4gYGJ1aWxkLnNoYCBhdCB0aGUgY29t
bWFuZCBsaW5lLiBUaGUgcmVzdWx0aW5nIGxpYnJhcnkgYW5kIGhlYWRlciBm
aWxlcyB3aWxsIGJlIGxvY2F0ZWQgYXQgYGJ1aWxkL1JlbGVhc2UtaXBob25l
YC4gWW91IG1heSBhbHNvIGNoYW5nZSB0aGUgdmVyc2lvbiBvZiB0aGUgaU9T
IFNESyBieSBjaGFuZ2luZyB0aGUgYElPU1NES19WRVJgIHZhcmlhYmxlIGlu
IGBidWlsZC5zaGAgKGFsbCBhdmFpbGFibGUgdmVyc2lvbnMgY2FuIGJlIGZv
dW5kIHVzaW5nIGB4Y29kZWJ1aWxkIC1zaG93c2Rrc2ApLgoKIyMgQWRkaW5n
IHRoaXMgYXMgYSBmcmFtZXdvcmsgKG1vZHVsZSkgdG8geW91ciBNYWMgb3Ig
aU9TIHByb2plY3QgIyMKClhjb2RlIDYgYW5kIGlPUyA4IHN1cHBvcnQgdGhl
IHVzZSBvZiBmdWxsIGZyYW1ld29ya3MsIGFzIGRvZXMgdGhlIE1hYywgd2hp
Y2ggc2ltcGxpZmllcyB0aGUgcHJvY2VzcyBvZiBhZGRpbmcgdGhpcyB0byB5
b3VyIGFwcGxpY2F0aW9uLiBUbyBhZGQgdGhpcyB0byB5b3VyIGFwcGxpY2F0
aW9uLCBJIHJlY29tbWVuZCBkcmFnZ2luZyB0aGUgLnhjb2RlcHJvaiBwcm9q
ZWN0IGZpbGUgaW50byB5b3VyIGFwcGxpY2F0aW9uJ3MgcHJvamVjdCAoYXMg
eW91IHdvdWxkIGluIHRoZSBzdGF0aWMgbGlicmFyeSB0YXJnZXQpLgoKRm9y
IHlvdXIgYXBwbGljYXRpb24sIGdvIHRvIGl0cyB0YXJnZXQgYnVpbGQgc2V0
dGluZ3MgYW5kIGNob29zZSB0aGUgQnVpbGQgUGhhc2VzIHRhYi4gVW5kZXIg
dGhlIFRhcmdldCBEZXBlbmRlbmNpZXMgZ3JvdXBpbmcsIGFkZCBHUFVJbWFn
ZUZyYW1ld29yayBvbiBpT1MgKG5vdCBHUFVJbWFnZSwgd2hpY2ggYnVpbGRz
IHRoZSBzdGF0aWMgbGlicmFyeSkgb3IgR1BVSW1hZ2Ugb24gdGhlIE1hYy4g
VW5kZXIgdGhlIExpbmsgQmluYXJ5IFdpdGggTGlicmFyaWVzIHNlY3Rpb24s
IGFkZCBHUFVJbWFnZS5mcmFtZXdvcmsuCgpUaGlzIHNob3VsZCBjYXVzZSBH
UFVJbWFnZSB0byBidWlsZCBhcyBhIGZyYW1ld29yay4gVW5kZXIgWGNvZGUg
NiwgdGhpcyB3aWxsIGFsc28gYnVpbGQgYXMgYSBtb2R1bGUsIHdoaWNoIHdp
bGwgYWxsb3cgeW91IHRvIHVzZSB0aGlzIGluIFN3aWZ0IHByb2plY3RzLiBX
aGVuIHNldCB1cCBhcyBhYm92ZSwgeW91IHNob3VsZCBqdXN0IG5lZWQgdG8g
dXNlIAoKICAgIGltcG9ydCBHUFVJbWFnZQoKdG8gcHVsbCBpdCBpbi4KCllv
dSB0aGVuIG5lZWQgdG8gYWRkIGEgbmV3IENvcHkgRmlsZXMgYnVpbGQgcGhh
c2UsIHNldCB0aGUgRGVzdGluYXRpb24gdG8gRnJhbWV3b3JrcywgYW5kIGFk
ZCB0aGUgR1BVSW1hZ2UuZnJhbWV3b3JrIGJ1aWxkIHByb2R1Y3QgdG8gdGhh
dC4gVGhpcyB3aWxsIGFsbG93IHRoZSBmcmFtZXdvcmsgdG8gYmUgYnVuZGxl
ZCB3aXRoIHlvdXIgYXBwbGljYXRpb24gKG90aGVyd2lzZSwgeW91J2xsIHNl
ZSBjcnlwdGljICJkeWxkOiBMaWJyYXJ5IG5vdCBsb2FkZWQ6IEBycGF0aC9H
UFVJbWFnZS5mcmFtZXdvcmsvR1BVSW1hZ2UiIGVycm9ycyBvbiBleGVjdXRp
b24pLgoKIyMjIERvY3VtZW50YXRpb24gIyMjCgpEb2N1bWVudGF0aW9uIGlz
IGdlbmVyYXRlZCBmcm9tIGhlYWRlciBjb21tZW50cyB1c2luZyBhcHBsZWRv
Yy4gVG8gYnVpbGQgdGhlIGRvY3VtZW50YXRpb24sIHN3aXRjaCB0byB0aGUg
IkRvY3VtZW50YXRpb24iIHNjaGVtZSBpbiBYY29kZS4gWW91IHNob3VsZCBl
bnN1cmUgdGhhdCAiQVBQTEVET0NfUEFUSCIgKGEgVXNlci1EZWZpbmVkIGJ1
aWxkIHNldHRpbmcpIHBvaW50cyB0byBhbiBhcHBsZWRvYyBiaW5hcnksIGF2
YWlsYWJsZSBvbiA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vdG9tYXov
YXBwbGVkb2MiPkdpdGh1YjwvYT4gb3IgdGhyb3VnaCA8YSBocmVmPSJodHRw
czovL2dpdGh1Yi5jb20vSG9tZWJyZXcvaG9tZWJyZXciPkhvbWVicmV3PC9h
Pi4gSXQgd2lsbCBhbHNvIGJ1aWxkIGFuZCBpbnN0YWxsIGEgLmRvY3NldCBm
aWxlLCB3aGljaCB5b3UgY2FuIHZpZXcgd2l0aCB5b3VyIGZhdm9yaXRlIGRv
Y3VtZW50YXRpb24gdG9vbC4KCiMjIFBlcmZvcm1pbmcgY29tbW9uIHRhc2tz
ICMjCgojIyMgRmlsdGVyaW5nIGxpdmUgdmlkZW8gIyMjCgpUbyBmaWx0ZXIg
bGl2ZSB2aWRlbyBmcm9tIGFuIGlPUyBkZXZpY2UncyBjYW1lcmEsIHlvdSBj
YW4gdXNlIGNvZGUgbGlrZSB0aGUgZm9sbG93aW5nOgoKCUdQVUltYWdlVmlk
ZW9DYW1lcmEgKnZpZGVvQ2FtZXJhID0gW1tHUFVJbWFnZVZpZGVvQ2FtZXJh
IGFsbG9jXSBpbml0V2l0aFNlc3Npb25QcmVzZXQ6QVZDYXB0dXJlU2Vzc2lv
blByZXNldDY0MHg0ODAgY2FtZXJhUG9zaXRpb246QVZDYXB0dXJlRGV2aWNl
UG9zaXRpb25CYWNrXTsKCXZpZGVvQ2FtZXJhLm91dHB1dEltYWdlT3JpZW50
YXRpb24gPSBVSUludGVyZmFjZU9yaWVudGF0aW9uUG9ydHJhaXQ7CgkKCUdQ
VUltYWdlRmlsdGVyICpjdXN0b21GaWx0ZXIgPSBbW0dQVUltYWdlRmlsdGVy
IGFsbG9jXSBpbml0V2l0aEZyYWdtZW50U2hhZGVyRnJvbUZpbGU6QCJDdXN0
b21TaGFkZXIiXTsKCUdQVUltYWdlVmlldyAqZmlsdGVyZWRWaWRlb1ZpZXcg
PSBbW0dQVUltYWdlVmlldyBhbGxvY10gaW5pdFdpdGhGcmFtZTpDR1JlY3RN
YWtlKDAuMCwgMC4wLCB2aWV3V2lkdGgsIHZpZXdIZWlnaHQpXTsKCgkvLyBB
ZGQgdGhlIHZpZXcgc29tZXdoZXJlIHNvIGl0J3MgdmlzaWJsZQoKCVt2aWRl
b0NhbWVyYSBhZGRUYXJnZXQ6Y3VzdG9tRmlsdGVyXTsKCVtjdXN0b21GaWx0
ZXIgYWRkVGFyZ2V0OmZpbHRlcmVkVmlkZW9WaWV3XTsKCglbdmlkZW9DYW1l
cmEgc3RhcnRDYW1lcmFDYXB0dXJlXTsKClRoaXMgc2V0cyB1cCBhIHZpZGVv
IHNvdXJjZSBjb21pbmcgZnJvbSB0aGUgaU9TIGRldmljZSdzIGJhY2stZmFj
aW5nIGNhbWVyYSwgdXNpbmcgYSBwcmVzZXQgdGhhdCB0cmllcyB0byBjYXB0
dXJlIGF0IDY0MHg0ODAuIFRoaXMgdmlkZW8gaXMgY2FwdHVyZWQgd2l0aCB0
aGUgaW50ZXJmYWNlIGJlaW5nIGluIHBvcnRyYWl0IG1vZGUsIHdoZXJlIHRo
ZSBsYW5kc2NhcGUtbGVmdC1tb3VudGVkIGNhbWVyYSBuZWVkcyB0byBoYXZl
IGl0cyB2aWRlbyBmcmFtZXMgcm90YXRlZCBiZWZvcmUgZGlzcGxheS4gQSBj
dXN0b20gZmlsdGVyLCB1c2luZyBjb2RlIGZyb20gdGhlIGZpbGUgQ3VzdG9t
U2hhZGVyLmZzaCwgaXMgdGhlbiBzZXQgYXMgdGhlIHRhcmdldCBmb3IgdGhl
IHZpZGVvIGZyYW1lcyBmcm9tIHRoZSBjYW1lcmEuIFRoZXNlIGZpbHRlcmVk
IHZpZGVvIGZyYW1lcyBhcmUgZmluYWxseSBkaXNwbGF5ZWQgb25zY3JlZW4g
d2l0aCB0aGUgaGVscCBvZiBhIFVJVmlldyBzdWJjbGFzcyB0aGF0IGNhbiBw
cmVzZW50IHRoZSBmaWx0ZXJlZCBPcGVuR0wgRVMgdGV4dHVyZSB0aGF0IHJl
c3VsdHMgZnJvbSB0aGlzIHBpcGVsaW5lLgoKVGhlIGZpbGwgbW9kZSBvZiB0
aGUgR1BVSW1hZ2VWaWV3IGNhbiBiZSBhbHRlcmVkIGJ5IHNldHRpbmcgaXRz
IGZpbGxNb2RlIHByb3BlcnR5LCBzbyB0aGF0IGlmIHRoZSBhc3BlY3QgcmF0
aW8gb2YgdGhlIHNvdXJjZSB2aWRlbyBpcyBkaWZmZXJlbnQgZnJvbSB0aGF0
IG9mIHRoZSB2aWV3LCB0aGUgdmlkZW8gd2lsbCBlaXRoZXIgYmUgc3RyZXRj
aGVkLCBjZW50ZXJlZCB3aXRoIGJsYWNrIGJhcnMsIG9yIHpvb21lZCB0byBm
aWxsLgoKRm9yIGJsZW5kaW5nIGZpbHRlcnMgYW5kIG90aGVycyB0aGF0IHRh
a2UgaW4gbW9yZSB0aGFuIG9uZSBpbWFnZSwgeW91IGNhbiBjcmVhdGUgbXVs
dGlwbGUgb3V0cHV0cyBhbmQgYWRkIGEgc2luZ2xlIGZpbHRlciBhcyBhIHRh
cmdldCBmb3IgYm90aCBvZiB0aGVzZSBvdXRwdXRzLiBUaGUgb3JkZXIgd2l0
aCB3aGljaCB0aGUgb3V0cHV0cyBhcmUgYWRkZWQgYXMgdGFyZ2V0cyB3aWxs
IGFmZmVjdCB0aGUgb3JkZXIgaW4gd2hpY2ggdGhlIGlucHV0IGltYWdlcyBh
cmUgYmxlbmRlZCBvciBvdGhlcndpc2UgcHJvY2Vzc2VkLgoKQWxzbywgaWYg
eW91IHdpc2ggdG8gZW5hYmxlIG1pY3JvcGhvbmUgYXVkaW8gY2FwdHVyZSBm
b3IgcmVjb3JkaW5nIHRvIGEgbW92aWUsIHlvdSdsbCBuZWVkIHRvIHNldCB0
aGUgYXVkaW9FbmNvZGluZ1RhcmdldCBvZiB0aGUgY2FtZXJhIHRvIGJlIHlv
dXIgbW92aWUgd3JpdGVyLCBsaWtlIGZvciB0aGUgZm9sbG93aW5nOgoKICAg
IHZpZGVvQ2FtZXJhLmF1ZGlvRW5jb2RpbmdUYXJnZXQgPSBtb3ZpZVdyaXRl
cjsKCgojIyMgQ2FwdHVyaW5nIGFuZCBmaWx0ZXJpbmcgYSBzdGlsbCBwaG90
byAjIyMKClRvIGNhcHR1cmUgYW5kIGZpbHRlciBzdGlsbCBwaG90b3MsIHlv
dSBjYW4gdXNlIGEgcHJvY2VzcyBzaW1pbGFyIHRvIHRoZSBvbmUgZm9yIGZp
bHRlcmluZyB2aWRlby4gSW5zdGVhZCBvZiBhIEdQVUltYWdlVmlkZW9DYW1l
cmEsIHlvdSB1c2UgYSBHUFVJbWFnZVN0aWxsQ2FtZXJhOgoKCXN0aWxsQ2Ft
ZXJhID0gW1tHUFVJbWFnZVN0aWxsQ2FtZXJhIGFsbG9jXSBpbml0XTsKCXN0
aWxsQ2FtZXJhLm91dHB1dEltYWdlT3JpZW50YXRpb24gPSBVSUludGVyZmFj
ZU9yaWVudGF0aW9uUG9ydHJhaXQ7CgkKCWZpbHRlciA9IFtbR1BVSW1hZ2VH
YW1tYUZpbHRlciBhbGxvY10gaW5pdF07Cglbc3RpbGxDYW1lcmEgYWRkVGFy
Z2V0OmZpbHRlcl07CglHUFVJbWFnZVZpZXcgKmZpbHRlclZpZXcgPSAoR1BV
SW1hZ2VWaWV3ICopc2VsZi52aWV3OwoJW2ZpbHRlciBhZGRUYXJnZXQ6Zmls
dGVyVmlld107CgoJW3N0aWxsQ2FtZXJhIHN0YXJ0Q2FtZXJhQ2FwdHVyZV07
CgpUaGlzIHdpbGwgZ2l2ZSB5b3UgYSBsaXZlLCBmaWx0ZXJlZCBmZWVkIG9m
IHRoZSBzdGlsbCBjYW1lcmEncyBwcmV2aWV3IHZpZGVvLiBOb3RlIHRoYXQg
dGhpcyBwcmV2aWV3IHZpZGVvIGlzIG9ubHkgcHJvdmlkZWQgb24gaU9TIDQu
MyBhbmQgaGlnaGVyLCBzbyB5b3UgbWF5IG5lZWQgdG8gc2V0IHRoYXQgYXMg
eW91ciBkZXBsb3ltZW50IHRhcmdldCBpZiB5b3Ugd2lzaCB0byBoYXZlIHRo
aXMgZnVuY3Rpb25hbGl0eS4KCk9uY2UgeW91IHdhbnQgdG8gY2FwdHVyZSBh
IHBob3RvLCB5b3UgdXNlIGEgY2FsbGJhY2sgYmxvY2sgbGlrZSB0aGUgZm9s
bG93aW5nOgoKCVtzdGlsbENhbWVyYSBjYXB0dXJlUGhvdG9Qcm9jZXNzZWRV
cFRvRmlsdGVyOmZpbHRlciB3aXRoQ29tcGxldGlvbkhhbmRsZXI6XihVSUlt
YWdlICpwcm9jZXNzZWRJbWFnZSwgTlNFcnJvciAqZXJyb3IpewoJICAgIE5T
RGF0YSAqZGF0YUZvckpQRUdGaWxlID0gVUlJbWFnZUpQRUdSZXByZXNlbnRh
dGlvbihwcm9jZXNzZWRJbWFnZSwgMC44KTsKICAgIAoJICAgIE5TQXJyYXkg
KnBhdGhzID0gTlNTZWFyY2hQYXRoRm9yRGlyZWN0b3JpZXNJbkRvbWFpbnMo
TlNEb2N1bWVudERpcmVjdG9yeSwgTlNVc2VyRG9tYWluTWFzaywgWUVTKTsK
CSAgICBOU1N0cmluZyAqZG9jdW1lbnRzRGlyZWN0b3J5ID0gW3BhdGhzIG9i
amVjdEF0SW5kZXg6MF07CiAgICAKCSAgICBOU0Vycm9yICplcnJvcjIgPSBu
aWw7CgkgICAgaWYgKCFbZGF0YUZvckpQRUdGaWxlIHdyaXRlVG9GaWxlOltk
b2N1bWVudHNEaXJlY3Rvcnkgc3RyaW5nQnlBcHBlbmRpbmdQYXRoQ29tcG9u
ZW50OkAiRmlsdGVyZWRQaG90by5qcGciXSBvcHRpb25zOk5TQXRvbWljV3Jp
dGUgZXJyb3I6JmVycm9yMl0pCgkgICAgewoJICAgICAgICByZXR1cm47Cgkg
ICAgfQoJfV07CgkKVGhlIGFib3ZlIGNvZGUgY2FwdHVyZXMgYSBmdWxsLXNp
emUgcGhvdG8gcHJvY2Vzc2VkIGJ5IHRoZSBzYW1lIGZpbHRlciBjaGFpbiB1
c2VkIGluIHRoZSBwcmV2aWV3IHZpZXcgYW5kIHNhdmVzIHRoYXQgcGhvdG8g
dG8gZGlzayBhcyBhIEpQRUcgaW4gdGhlIGFwcGxpY2F0aW9uJ3MgZG9jdW1l
bnRzIGRpcmVjdG9yeS4KCk5vdGUgdGhhdCB0aGUgZnJhbWV3b3JrIGN1cnJl
bnRseSBjYW4ndCBoYW5kbGUgaW1hZ2VzIGxhcmdlciB0aGFuIDIwNDggcGl4
ZWxzIHdpZGUgb3IgaGlnaCBvbiBvbGRlciBkZXZpY2VzICh0aG9zZSBiZWZv
cmUgdGhlIGlQaG9uZSA0UywgaVBhZCAyLCBvciBSZXRpbmEgaVBhZCkgZHVl
IHRvIHRleHR1cmUgc2l6ZSBsaW1pdGF0aW9ucy4gVGhpcyBtZWFucyB0aGF0
IHRoZSBpUGhvbmUgNCwgd2hvc2UgY2FtZXJhIG91dHB1dHMgc3RpbGwgcGhv
dG9zIGxhcmdlciB0aGFuIHRoaXMsIHdvbid0IGJlIGFibGUgdG8gY2FwdHVy
ZSBwaG90b3MgbGlrZSB0aGlzLiBBIHRpbGluZyBtZWNoYW5pc20gaXMgYmVp
bmcgaW1wbGVtZW50ZWQgdG8gd29yayBhcm91bmQgdGhpcy4gQWxsIG90aGVy
IGRldmljZXMgc2hvdWxkIGJlIGFibGUgdG8gY2FwdHVyZSBhbmQgZmlsdGVy
IHBob3RvcyB1c2luZyB0aGlzIG1ldGhvZC4KCiMjIyBQcm9jZXNzaW5nIGEg
c3RpbGwgaW1hZ2UgIyMjCgpUaGVyZSBhcmUgYSBjb3VwbGUgb2Ygd2F5cyB0
byBwcm9jZXNzIGEgc3RpbGwgaW1hZ2UgYW5kIGNyZWF0ZSBhIHJlc3VsdC4g
VGhlIGZpcnN0IHdheSB5b3UgY2FuIGRvIHRoaXMgaXMgYnkgY3JlYXRpbmcg
YSBzdGlsbCBpbWFnZSBzb3VyY2Ugb2JqZWN0IGFuZCBtYW51YWxseSBjcmVh
dGluZyBhIGZpbHRlciBjaGFpbjoKCglVSUltYWdlICppbnB1dEltYWdlID0g
W1VJSW1hZ2UgaW1hZ2VOYW1lZDpAIkxhbWJlYXUuanBnIl07CgoJR1BVSW1h
Z2VQaWN0dXJlICpzdGlsbEltYWdlU291cmNlID0gW1tHUFVJbWFnZVBpY3R1
cmUgYWxsb2NdIGluaXRXaXRoSW1hZ2U6aW5wdXRJbWFnZV07CglHUFVJbWFn
ZVNlcGlhRmlsdGVyICpzdGlsbEltYWdlRmlsdGVyID0gW1tHUFVJbWFnZVNl
cGlhRmlsdGVyIGFsbG9jXSBpbml0XTsKCglbc3RpbGxJbWFnZVNvdXJjZSBh
ZGRUYXJnZXQ6c3RpbGxJbWFnZUZpbHRlcl07Cglbc3RpbGxJbWFnZUZpbHRl
ciB1c2VOZXh0RnJhbWVGb3JJbWFnZUNhcHR1cmVdOwoJW3N0aWxsSW1hZ2VT
b3VyY2UgcHJvY2Vzc0ltYWdlXTsKCglVSUltYWdlICpjdXJyZW50RmlsdGVy
ZWRWaWRlb0ZyYW1lID0gW3N0aWxsSW1hZ2VGaWx0ZXIgaW1hZ2VGcm9tQ3Vy
cmVudEZyYW1lYnVmZmVyXTsKCk5vdGUgdGhhdCBmb3IgYSBtYW51YWwgY2Fw
dHVyZSBvZiBhbiBpbWFnZSBmcm9tIGEgZmlsdGVyLCB5b3UgbmVlZCB0byBz
ZXQgLXVzZU5leHRGcmFtZUZvckltYWdlQ2FwdHVyZSBpbiBvcmRlciB0byB0
ZWxsIHRoZSBmaWx0ZXIgdGhhdCB5b3UnbGwgYmUgbmVlZGluZyB0byBjYXB0
dXJlIGZyb20gaXQgbGF0ZXIuIEJ5IGRlZmF1bHQsIEdQVUltYWdlIHJldXNl
cyBmcmFtZWJ1ZmZlcnMgd2l0aGluIGZpbHRlcnMgdG8gY29uc2VydmUgbWVt
b3J5LCBzbyBpZiB5b3UgbmVlZCB0byBob2xkIG9uIHRvIGEgZmlsdGVyJ3Mg
ZnJhbWVidWZmZXIgZm9yIG1hbnVhbCBpbWFnZSBjYXB0dXJlLCB5b3UgbmVl
ZCB0byBsZXQgaXQga25vdyBhaGVhZCBvZiB0aW1lLiAKCkZvciBzaW5nbGUg
ZmlsdGVycyB0aGF0IHlvdSB3aXNoIHRvIGFwcGx5IHRvIGFuIGltYWdlLCB5
b3UgY2FuIHNpbXBseSBkbyB0aGUgZm9sbG93aW5nOgoKCUdQVUltYWdlU2Vw
aWFGaWx0ZXIgKnN0aWxsSW1hZ2VGaWx0ZXIyID0gW1tHUFVJbWFnZVNlcGlh
RmlsdGVyIGFsbG9jXSBpbml0XTsKCVVJSW1hZ2UgKnF1aWNrRmlsdGVyZWRJ
bWFnZSA9IFtzdGlsbEltYWdlRmlsdGVyMiBpbWFnZUJ5RmlsdGVyaW5nSW1h
Z2U6aW5wdXRJbWFnZV07CgoKIyMjIFdyaXRpbmcgYSBjdXN0b20gZmlsdGVy
ICMjIwoKT25lIHNpZ25pZmljYW50IGFkdmFudGFnZSBvZiB0aGlzIGZyYW1l
d29yayBvdmVyIENvcmUgSW1hZ2Ugb24gaU9TIChhcyBvZiBpT1MgNS4wKSBp
cyB0aGUgYWJpbGl0eSB0byB3cml0ZSB5b3VyIG93biBjdXN0b20gaW1hZ2Ug
YW5kIHZpZGVvIHByb2Nlc3NpbmcgZmlsdGVycy4gVGhlc2UgZmlsdGVycyBh
cmUgc3VwcGxpZWQgYXMgT3BlbkdMIEVTIDIuMCBmcmFnbWVudCBzaGFkZXJz
LCB3cml0dGVuIGluIHRoZSBDLWxpa2UgT3BlbkdMIFNoYWRpbmcgTGFuZ3Vh
Z2UuIAoKQSBjdXN0b20gZmlsdGVyIGlzIGluaXRpYWxpemVkIHdpdGggY29k
ZSBsaWtlCgoJR1BVSW1hZ2VGaWx0ZXIgKmN1c3RvbUZpbHRlciA9IFtbR1BV
SW1hZ2VGaWx0ZXIgYWxsb2NdIGluaXRXaXRoRnJhZ21lbnRTaGFkZXJGcm9t
RmlsZTpAIkN1c3RvbVNoYWRlciJdOwoKd2hlcmUgdGhlIGV4dGVuc2lvbiB1
c2VkIGZvciB0aGUgZnJhZ21lbnQgc2hhZGVyIGlzIC5mc2guIEFkZGl0aW9u
YWxseSwgeW91IGNhbiB1c2UgdGhlIC1pbml0V2l0aEZyYWdtZW50U2hhZGVy
RnJvbVN0cmluZzogaW5pdGlhbGl6ZXIgdG8gcHJvdmlkZSB0aGUgZnJhZ21l
bnQgc2hhZGVyIGFzIGEgc3RyaW5nLCBpZiB5b3Ugd291bGQgbm90IGxpa2Ug
dG8gc2hpcCB5b3VyIGZyYWdtZW50IHNoYWRlcnMgaW4geW91ciBhcHBsaWNh
dGlvbiBidW5kbGUuCgpGcmFnbWVudCBzaGFkZXJzIHBlcmZvcm0gdGhlaXIg
Y2FsY3VsYXRpb25zIGZvciBlYWNoIHBpeGVsIHRvIGJlIHJlbmRlcmVkIGF0
IHRoYXQgZmlsdGVyIHN0YWdlLiBUaGV5IGRvIHRoaXMgdXNpbmcgdGhlIE9w
ZW5HTCBTaGFkaW5nIExhbmd1YWdlIChHTFNMKSwgYSBDLWxpa2UgbGFuZ3Vh
Z2Ugd2l0aCBhZGRpdGlvbnMgc3BlY2lmaWMgdG8gMi1EIGFuZCAzLUQgZ3Jh
cGhpY3MuIEFuIGV4YW1wbGUgb2YgYSBmcmFnbWVudCBzaGFkZXIgaXMgdGhl
IGZvbGxvd2luZyBzZXBpYS10b25lIGZpbHRlcjoKCgl2YXJ5aW5nIGhpZ2hw
IHZlYzIgdGV4dHVyZUNvb3JkaW5hdGU7CgoJdW5pZm9ybSBzYW1wbGVyMkQg
aW5wdXRJbWFnZVRleHR1cmU7CgoJdm9pZCBtYWluKCkKCXsKCSAgICBsb3dw
IHZlYzQgdGV4dHVyZUNvbG9yID0gdGV4dHVyZTJEKGlucHV0SW1hZ2VUZXh0
dXJlLCB0ZXh0dXJlQ29vcmRpbmF0ZSk7CgkgICAgbG93cCB2ZWM0IG91dHB1
dENvbG9yOwoJICAgIG91dHB1dENvbG9yLnIgPSAodGV4dHVyZUNvbG9yLnIg
KiAwLjM5MykgKyAodGV4dHVyZUNvbG9yLmcgKiAwLjc2OSkgKyAodGV4dHVy
ZUNvbG9yLmIgKiAwLjE4OSk7CgkgICAgb3V0cHV0Q29sb3IuZyA9ICh0ZXh0
dXJlQ29sb3IuciAqIDAuMzQ5KSArICh0ZXh0dXJlQ29sb3IuZyAqIDAuNjg2
KSArICh0ZXh0dXJlQ29sb3IuYiAqIDAuMTY4KTsgICAgCgkgICAgb3V0cHV0
Q29sb3IuYiA9ICh0ZXh0dXJlQ29sb3IuciAqIDAuMjcyKSArICh0ZXh0dXJl
Q29sb3IuZyAqIDAuNTM0KSArICh0ZXh0dXJlQ29sb3IuYiAqIDAuMTMxKTsK
CQlvdXRwdXRDb2xvci5hID0gMS4wOwogICAgCgkJZ2xfRnJhZ0NvbG9yID0g
b3V0cHV0Q29sb3I7Cgl9CgpGb3IgYW4gaW1hZ2UgZmlsdGVyIHRvIGJlIHVz
YWJsZSB3aXRoaW4gdGhlIEdQVUltYWdlIGZyYW1ld29yaywgdGhlIGZpcnN0
IHR3byBsaW5lcyB0aGF0IHRha2UgaW4gdGhlIHRleHR1cmVDb29yZGluYXRl
IHZhcnlpbmcgKGZvciB0aGUgY3VycmVudCBjb29yZGluYXRlIHdpdGhpbiB0
aGUgdGV4dHVyZSwgbm9ybWFsaXplZCB0byAxLjApIGFuZCB0aGUgaW5wdXRJ
bWFnZVRleHR1cmUgdW5pZm9ybSAoZm9yIHRoZSBhY3R1YWwgaW5wdXQgaW1h
Z2UgZnJhbWUgdGV4dHVyZSkgYXJlIHJlcXVpcmVkLgoKVGhlIHJlbWFpbmRl
ciBvZiB0aGUgc2hhZGVyIGdyYWJzIHRoZSBjb2xvciBvZiB0aGUgcGl4ZWwg
YXQgdGhpcyBsb2NhdGlvbiBpbiB0aGUgcGFzc2VkLWluIHRleHR1cmUsIG1h
bmlwdWxhdGVzIGl0IGluIHN1Y2ggYSB3YXkgYXMgdG8gcHJvZHVjZSBhIHNl
cGlhIHRvbmUsIGFuZCB3cml0ZXMgdGhhdCBwaXhlbCBjb2xvciBvdXQgdG8g
YmUgdXNlZCBpbiB0aGUgbmV4dCBzdGFnZSBvZiB0aGUgcHJvY2Vzc2luZyBw
aXBlbGluZS4KCk9uZSB0aGluZyB0byBub3RlIHdoZW4gYWRkaW5nIGZyYWdt
ZW50IHNoYWRlcnMgdG8geW91ciBYY29kZSBwcm9qZWN0IGlzIHRoYXQgWGNv
ZGUgdGhpbmtzIHRoZXkgYXJlIHNvdXJjZSBjb2RlIGZpbGVzLiBUbyB3b3Jr
IGFyb3VuZCB0aGlzLCB5b3UnbGwgbmVlZCB0byBtYW51YWxseSBtb3ZlIHlv
dXIgc2hhZGVyIGZyb20gdGhlIENvbXBpbGUgU291cmNlcyBidWlsZCBwaGFz
ZSB0byB0aGUgQ29weSBCdW5kbGUgUmVzb3VyY2VzIG9uZSBpbiBvcmRlciB0
byBnZXQgdGhlIHNoYWRlciB0byBiZSBpbmNsdWRlZCBpbiB5b3VyIGFwcGxp
Y2F0aW9uIGJ1bmRsZS4KCgojIyMgRmlsdGVyaW5nIGFuZCByZS1lbmNvZGlu
ZyBhIG1vdmllICMjIwoKTW92aWVzIGNhbiBiZSBsb2FkZWQgaW50byB0aGUg
ZnJhbWV3b3JrIHZpYSB0aGUgR1BVSW1hZ2VNb3ZpZSBjbGFzcywgZmlsdGVy
ZWQsIGFuZCB0aGVuIHdyaXR0ZW4gb3V0IHVzaW5nIGEgR1BVSW1hZ2VNb3Zp
ZVdyaXRlci4gR1BVSW1hZ2VNb3ZpZVdyaXRlciBpcyBhbHNvIGZhc3QgZW5v
dWdoIHRvIHJlY29yZCB2aWRlbyBpbiByZWFsdGltZSBmcm9tIGFuIGlQaG9u
ZSA0J3MgY2FtZXJhIGF0IDY0MHg0ODAsIHNvIGEgZGlyZWN0IGZpbHRlcmVk
IHZpZGVvIHNvdXJjZSBjYW4gYmUgZmVkIGludG8gaXQuIEN1cnJlbnRseSwg
R1BVSW1hZ2VNb3ZpZVdyaXRlciBpcyBmYXN0IGVub3VnaCB0byByZWNvcmQg
bGl2ZSA3MjBwIHZpZGVvIGF0IHVwIHRvIDIwIEZQUyBvbiB0aGUgaVBob25l
IDQsIGFuZCBib3RoIDcyMHAgYW5kIDEwODBwIHZpZGVvIGF0IDMwIEZQUyBv
biB0aGUgaVBob25lIDRTIChhcyB3ZWxsIGFzIG9uIHRoZSBuZXcgaVBhZCku
CgpUaGUgZm9sbG93aW5nIGlzIGFuIGV4YW1wbGUgb2YgaG93IHlvdSB3b3Vs
ZCBsb2FkIGEgc2FtcGxlIG1vdmllLCBwYXNzIGl0IHRocm91Z2ggYSBwaXhl
bGxhdGlvbiBmaWx0ZXIsIHRoZW4gcmVjb3JkIHRoZSByZXN1bHQgdG8gZGlz
ayBhcyBhIDQ4MCB4IDY0MCBoLjI2NCBtb3ZpZToKCgltb3ZpZUZpbGUgPSBb
W0dQVUltYWdlTW92aWUgYWxsb2NdIGluaXRXaXRoVVJMOnNhbXBsZVVSTF07
CglwaXhlbGxhdGVGaWx0ZXIgPSBbW0dQVUltYWdlUGl4ZWxsYXRlRmlsdGVy
IGFsbG9jXSBpbml0XTsKCglbbW92aWVGaWxlIGFkZFRhcmdldDpwaXhlbGxh
dGVGaWx0ZXJdOwoKCU5TU3RyaW5nICpwYXRoVG9Nb3ZpZSA9IFtOU0hvbWVE
aXJlY3RvcnkoKSBzdHJpbmdCeUFwcGVuZGluZ1BhdGhDb21wb25lbnQ6QCJE
b2N1bWVudHMvTW92aWUubTR2Il07Cgl1bmxpbmsoW3BhdGhUb01vdmllIFVU
RjhTdHJpbmddKTsKCU5TVVJMICptb3ZpZVVSTCA9IFtOU1VSTCBmaWxlVVJM
V2l0aFBhdGg6cGF0aFRvTW92aWVdOwoKCW1vdmllV3JpdGVyID0gW1tHUFVJ
bWFnZU1vdmllV3JpdGVyIGFsbG9jXSBpbml0V2l0aE1vdmllVVJMOm1vdmll
VVJMIHNpemU6Q0dTaXplTWFrZSg0ODAuMCwgNjQwLjApXTsKCVtwaXhlbGxh
dGVGaWx0ZXIgYWRkVGFyZ2V0Om1vdmllV3JpdGVyXTsKCiAgICBtb3ZpZVdy
aXRlci5zaG91bGRQYXNzdGhyb3VnaEF1ZGlvID0gWUVTOwogICAgbW92aWVG
aWxlLmF1ZGlvRW5jb2RpbmdUYXJnZXQgPSBtb3ZpZVdyaXRlcjsKICAgIFtt
b3ZpZUZpbGUgZW5hYmxlU3luY2hyb25pemVkRW5jb2RpbmdVc2luZ01vdmll
V3JpdGVyOm1vdmllV3JpdGVyXTsKCglbbW92aWVXcml0ZXIgc3RhcnRSZWNv
cmRpbmddOwoJW21vdmllRmlsZSBzdGFydFByb2Nlc3NpbmddOwoKT25jZSBy
ZWNvcmRpbmcgaXMgZmluaXNoZWQsIHlvdSBuZWVkIHRvIHJlbW92ZSB0aGUg
bW92aWUgcmVjb3JkZXIgZnJvbSB0aGUgZmlsdGVyIGNoYWluIGFuZCBjbG9z
ZSBvZmYgdGhlIHJlY29yZGluZyB1c2luZyBjb2RlIGxpa2UgdGhlIGZvbGxv
d2luZzoKCglbcGl4ZWxsYXRlRmlsdGVyIHJlbW92ZVRhcmdldDptb3ZpZVdy
aXRlcl07CglbbW92aWVXcml0ZXIgZmluaXNoUmVjb3JkaW5nXTsKCkEgbW92
aWUgd29uJ3QgYmUgdXNhYmxlIHVudGlsIGl0IGhhcyBiZWVuIGZpbmlzaGVk
IG9mZiwgc28gaWYgdGhpcyBpcyBpbnRlcnJ1cHRlZCBiZWZvcmUgdGhpcyBw
b2ludCwgdGhlIHJlY29yZGluZyB3aWxsIGJlIGxvc3QuCgojIyMgSW50ZXJh
Y3Rpbmcgd2l0aCBPcGVuR0wgRVMgIyMjCgpHUFVJbWFnZSBjYW4gYm90aCBl
eHBvcnQgYW5kIGltcG9ydCB0ZXh0dXJlcyBmcm9tIE9wZW5HTCBFUyB0aHJv
dWdoIHRoZSB1c2Ugb2YgaXRzIEdQVUltYWdlVGV4dHVyZU91dHB1dCBhbmQg
R1BVSW1hZ2VUZXh0dXJlSW5wdXQgY2xhc3NlcywgcmVzcGVjdGl2ZWx5LiBU
aGlzIGxldHMgeW91IHJlY29yZCBhIG1vdmllIGZyb20gYW4gT3BlbkdMIEVT
IHNjZW5lIHRoYXQgaXMgcmVuZGVyZWQgdG8gYSBmcmFtZWJ1ZmZlciBvYmpl
Y3Qgd2l0aCBhIGJvdW5kIHRleHR1cmUsIG9yIGZpbHRlciB2aWRlbyBvciBp
bWFnZXMgYW5kIHRoZW4gZmVlZCB0aGVtIGludG8gT3BlbkdMIEVTIGFzIGEg
dGV4dHVyZSB0byBiZSBkaXNwbGF5ZWQgaW4gdGhlIHNjZW5lLgoKVGhlIG9u
ZSBjYXV0aW9uIHdpdGggdGhpcyBhcHByb2FjaCBpcyB0aGF0IHRoZSB0ZXh0
dXJlcyB1c2VkIGluIHRoZXNlIHByb2Nlc3NlcyBtdXN0IGJlIHNoYXJlZCBi
ZXR3ZWVuIEdQVUltYWdlJ3MgT3BlbkdMIEVTIGNvbnRleHQgYW5kIGFueSBv
dGhlciBjb250ZXh0IHZpYSBhIHNoYXJlIGdyb3VwIG9yIHNvbWV0aGluZyBz
aW1pbGFyLgoKIyMgQnVpbHQtaW4gZmlsdGVycyAjIwoKVGhlcmUgYXJlIGN1
cnJlbnRseSAxMjUgYnVpbHQtaW4gZmlsdGVycywgZGl2aWRlZCBpbnRvIHRo
ZSBmb2xsb3dpbmcgY2F0ZWdvcmllczoKCiMjIyBDb2xvciBhZGp1c3RtZW50
cyAjIyMKCi0gKipHUFVJbWFnZUJyaWdodG5lc3NGaWx0ZXIqKjogQWRqdXN0
cyB0aGUgYnJpZ2h0bmVzcyBvZiB0aGUgaW1hZ2UKICAtICpicmlnaHRuZXNz
KjogVGhlIGFkanVzdGVkIGJyaWdodG5lc3MgKC0xLjAgLSAxLjAsIHdpdGgg
MC4wIGFzIHRoZSBkZWZhdWx0KQoKLSAqKkdQVUltYWdlRXhwb3N1cmVGaWx0
ZXIqKjogQWRqdXN0cyB0aGUgZXhwb3N1cmUgb2YgdGhlIGltYWdlCiAgLSAq
ZXhwb3N1cmUqOiBUaGUgYWRqdXN0ZWQgZXhwb3N1cmUgKC0xMC4wIC0gMTAu
MCwgd2l0aCAwLjAgYXMgdGhlIGRlZmF1bHQpCgotICoqR1BVSW1hZ2VDb250
cmFzdEZpbHRlcioqOiBBZGp1c3RzIHRoZSBjb250cmFzdCBvZiB0aGUgaW1h
Z2UKICAtICpjb250cmFzdCo6IFRoZSBhZGp1c3RlZCBjb250cmFzdCAoMC4w
IC0gNC4wLCB3aXRoIDEuMCBhcyB0aGUgZGVmYXVsdCkKCi0gKipHUFVJbWFn
ZVNhdHVyYXRpb25GaWx0ZXIqKjogQWRqdXN0cyB0aGUgc2F0dXJhdGlvbiBv
ZiBhbiBpbWFnZQogIC0gKnNhdHVyYXRpb24qOiBUaGUgZGVncmVlIG9mIHNh
dHVyYXRpb24gb3IgZGVzYXR1cmF0aW9uIHRvIGFwcGx5IHRvIHRoZSBpbWFn
ZSAoMC4wIC0gMi4wLCB3aXRoIDEuMCBhcyB0aGUgZGVmYXVsdCkKCi0gKipH
UFVJbWFnZUdhbW1hRmlsdGVyKio6IEFkanVzdHMgdGhlIGdhbW1hIG9mIGFu
IGltYWdlCiAgLSAqZ2FtbWEqOiBUaGUgZ2FtbWEgYWRqdXN0bWVudCB0byBh
cHBseSAoMC4wIC0gMy4wLCB3aXRoIDEuMCBhcyB0aGUgZGVmYXVsdCkKCi0g
KipHUFVJbWFnZUxldmVsc0ZpbHRlcioqOiBQaG90b3Nob3AtbGlrZSBsZXZl
bHMgYWRqdXN0bWVudC4gVGhlIG1pbiwgbWF4LCBtaW5PdXQgYW5kIG1heE91
dCBwYXJhbWV0ZXJzIGFyZSBmbG9hdHMgaW4gdGhlIHJhbmdlIFswLCAxXS4g
SWYgeW91IGhhdmUgcGFyYW1ldGVycyBmcm9tIFBob3Rvc2hvcCBpbiB0aGUg
cmFuZ2UgWzAsIDI1NV0geW91IG11c3QgZmlyc3QgY29udmVydCB0aGVtIHRv
IGJlIFswLCAxXS4gVGhlIGdhbW1hL21pZCBwYXJhbWV0ZXIgaXMgYSBmbG9h
dCA+PSAwLiBUaGlzIG1hdGNoZXMgdGhlIHZhbHVlIGZyb20gUGhvdG9zaG9w
LiBJZiB5b3Ugd2FudCB0byBhcHBseSBsZXZlbHMgdG8gUkdCIGFzIHdlbGwg
YXMgaW5kaXZpZHVhbCBjaGFubmVscyB5b3UgbmVlZCB0byB1c2UgdGhpcyBm
aWx0ZXIgdHdpY2UgLSBmaXJzdCBmb3IgdGhlIGluZGl2aWR1YWwgY2hhbm5l
bHMgYW5kIHRoZW4gZm9yIGFsbCBjaGFubmVscy4KCi0gKipHUFVJbWFnZUNv
bG9yTWF0cml4RmlsdGVyKio6IFRyYW5zZm9ybXMgdGhlIGNvbG9ycyBvZiBh
biBpbWFnZSBieSBhcHBseWluZyBhIG1hdHJpeCB0byB0aGVtCiAgLSAqY29s
b3JNYXRyaXgqOiBBIDR4NCBtYXRyaXggdXNlZCB0byB0cmFuc2Zvcm0gZWFj
aCBjb2xvciBpbiBhbiBpbWFnZQogIC0gKmludGVuc2l0eSo6IFRoZSBkZWdy
ZWUgdG8gd2hpY2ggdGhlIG5ldyB0cmFuc2Zvcm1lZCBjb2xvciByZXBsYWNl
cyB0aGUgb3JpZ2luYWwgY29sb3IgZm9yIGVhY2ggcGl4ZWwKCi0gKipHUFVJ
bWFnZVJHQkZpbHRlcioqOiBBZGp1c3RzIHRoZSBpbmRpdmlkdWFsIFJHQiBj
aGFubmVscyBvZiBhbiBpbWFnZQogIC0gKnJlZCo6IE5vcm1hbGl6ZWQgdmFs
dWVzIGJ5IHdoaWNoIGVhY2ggY29sb3IgY2hhbm5lbCBpcyBtdWx0aXBsaWVk
LiBUaGUgcmFuZ2UgaXMgZnJvbSAwLjAgdXAsIHdpdGggMS4wIGFzIHRoZSBk
ZWZhdWx0LgogIC0gKmdyZWVuKjogCiAgLSAqYmx1ZSo6CgotICoqR1BVSW1h
Z2VIdWVGaWx0ZXIqKjogQWRqdXN0cyB0aGUgaHVlIG9mIGFuIGltYWdlCiAg
LSAqaHVlKjogVGhlIGh1ZSBhbmdsZSwgaW4gZGVncmVlcy4gOTAgZGVncmVl
cyBieSBkZWZhdWx0CgotICoqR1BVSW1hZ2VWaWJyYW5jZUZpbHRlcioqOiBB
ZGp1c3RzIHRoZSB2aWJyYW5jZSBvZiBhbiBpbWFnZQogIC0gKnZpYnJhbmNl
KjogVGhlIHZpYnJhbmNlIGFkanVzdG1lbnQgdG8gYXBwbHksIHVzaW5nIDAu
MCBhcyB0aGUgZGVmYXVsdCwgYW5kIGEgc3VnZ2VzdGVkIG1pbi9tYXggb2Yg
YXJvdW5kIC0xLjIgYW5kIDEuMiwgcmVzcGVjdGl2ZWx5LgoKLSAqKkdQVUlt
YWdlV2hpdGVCYWxhbmNlRmlsdGVyKio6IEFkanVzdHMgdGhlIHdoaXRlIGJh
bGFuY2Ugb2YgYW4gaW1hZ2UuCiAgLSAqdGVtcGVyYXR1cmUqOiBUaGUgdGVt
cGVyYXR1cmUgdG8gYWRqdXN0IHRoZSBpbWFnZSBieSwgaW4gwrpLLiBBIHZh
bHVlIG9mIDQwMDAgaXMgdmVyeSBjb29sIGFuZCA3MDAwIHZlcnkgd2FybS4g
VGhlIGRlZmF1bHQgdmFsdWUgaXMgNTAwMC4gTm90ZSB0aGF0IHRoZSBzY2Fs
ZSBiZXR3ZWVuIDQwMDAgYW5kIDUwMDAgaXMgbmVhcmx5IGFzIHZpc3VhbGx5
IHNpZ25pZmljYW50IGFzIHRoYXQgYmV0d2VlbiA1MDAwIGFuZCA3MDAwLgog
IC0gKnRpbnQqOiBUaGUgdGludCB0byBhZGp1c3QgdGhlIGltYWdlIGJ5LiBB
IHZhbHVlIG9mIC0yMDAgaXMgKnZlcnkqIGdyZWVuIGFuZCAyMDAgaXMgKnZl
cnkqIHBpbmsuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIDAuICAKCi0gKipHUFVJ
bWFnZVRvbmVDdXJ2ZUZpbHRlcioqOiBBZGp1c3RzIHRoZSBjb2xvcnMgb2Yg
YW4gaW1hZ2UgYmFzZWQgb24gc3BsaW5lIGN1cnZlcyBmb3IgZWFjaCBjb2xv
ciBjaGFubmVsLgogIC0gKnJlZENvbnRyb2xQb2ludHMqOgogIC0gKmdyZWVu
Q29udHJvbFBvaW50cyo6CiAgLSAqYmx1ZUNvbnRyb2xQb2ludHMqOiAKICAt
ICpyZ2JDb21wb3NpdGVDb250cm9sUG9pbnRzKjogVGhlIHRvbmUgY3VydmUg
dGFrZXMgaW4gYSBzZXJpZXMgb2YgY29udHJvbCBwb2ludHMgdGhhdCBkZWZp
bmUgdGhlIHNwbGluZSBjdXJ2ZSBmb3IgZWFjaCBjb2xvciBjb21wb25lbnQs
IG9yIGZvciBhbGwgdGhyZWUgaW4gdGhlIGNvbXBvc2l0ZS4gVGhlc2UgYXJl
IHN0b3JlZCBhcyBOU1ZhbHVlLXdyYXBwZWQgQ0dQb2ludHMgaW4gYW4gTlNB
cnJheSwgd2l0aCBub3JtYWxpemVkIFggYW5kIFkgY29vcmRpbmF0ZXMgZnJv
bSAwIC0gMS4gVGhlIGRlZmF1bHRzIGFyZSAoMCwwKSwgKDAuNSwwLjUpLCAo
MSwxKS4KCi0gKipHUFVJbWFnZUhpZ2hsaWdodFNoYWRvd0ZpbHRlcioqOiBB
ZGp1c3RzIHRoZSBzaGFkb3dzIGFuZCBoaWdobGlnaHRzIG9mIGFuIGltYWdl
CiAgLSAqc2hhZG93cyo6IEluY3JlYXNlIHRvIGxpZ2h0ZW4gc2hhZG93cywg
ZnJvbSAwLjAgdG8gMS4wLCB3aXRoIDAuMCBhcyB0aGUgZGVmYXVsdC4KICAt
ICpoaWdobGlnaHRzKjogRGVjcmVhc2UgdG8gZGFya2VuIGhpZ2hsaWdodHMs
IGZyb20gMS4wIHRvIDAuMCwgd2l0aCAxLjAgYXMgdGhlIGRlZmF1bHQuCgot
ICoqR1BVSW1hZ2VIaWdobGlnaHRTaGFkb3dUaW50RmlsdGVyKio6IEFsbG93
cyB5b3UgdG8gdGludCB0aGUgc2hhZG93cyBhbmQgaGlnaGxpZ2h0cyBvZiBh
biBpbWFnZSBpbmRlcGVuZGVudGx5IHVzaW5nIGEgY29sb3IgYW5kIGludGVu
c2l0eQogIC0gKnNoYWRvd1RpbnRDb2xvcio6IFNoYWRvdyB0aW50IFJHQiBj
b2xvciAoR1BVVmVjdG9yNCkuIERlZmF1bHQ6IGB7MS4wZiwgMC4wZiwgMC4w
ZiwgMS4wZn1gIChyZWQpLgogIC0gKmhpZ2hsaWdodFRpbnRDb2xvcio6IEhp
Z2hsaWdodCB0aW50IFJHQiBjb2xvciAoR1BVVmVjdG9yNCkuIERlZmF1bHQ6
IGB7MC4wZiwgMC4wZiwgMS4wZiwgMS4wZn1gIChibHVlKS4KICAtICpzaGFk
b3dUaW50SW50ZW5zaXR5KjogU2hhZG93IHRpbnQgaW50ZW5zaXR5LCBmcm9t
IDAuMCB0byAxLjAuIERlZmF1bHQ6IDAuMAogIC0gKmhpZ2hsaWdodFRpbnRJ
bnRlbnNpdHkqOiBIaWdobGlnaHQgdGludCBpbnRlbnNpdHksIGZyb20gMC4w
IHRvIDEuMCwgd2l0aCAwLjAgYXMgdGhlIGRlZmF1bHQuCgotICoqR1BVSW1h
Z2VMb29rdXBGaWx0ZXIqKjogVXNlcyBhbiBSR0IgY29sb3IgbG9va3VwIGlt
YWdlIHRvIHJlbWFwIHRoZSBjb2xvcnMgaW4gYW4gaW1hZ2UuIEZpcnN0LCB1
c2UgeW91ciBmYXZvdXJpdGUgcGhvdG8gZWRpdGluZyBhcHBsaWNhdGlvbiB0
byBhcHBseSBhIGZpbHRlciB0byBsb29rdXAucG5nIGZyb20gR1BVSW1hZ2Uv
ZnJhbWV3b3JrL1Jlc291cmNlcy4gRm9yIHRoaXMgdG8gd29yayBwcm9wZXJs
eSBlYWNoIHBpeGVsIGNvbG9yIG11c3Qgbm90IGRlcGVuZCBvbiBvdGhlciBw
aXhlbHMgKGUuZy4gYmx1ciB3aWxsIG5vdCB3b3JrKS4gSWYgeW91IG5lZWQg
YSBtb3JlIGNvbXBsZXggZmlsdGVyIHlvdSBjYW4gY3JlYXRlIGFzIG1hbnkg
bG9va3VwIHRhYmxlcyBhcyByZXF1aXJlZC4gT25jZSByZWFkeSwgdXNlIHlv
dXIgbmV3IGxvb2t1cC5wbmcgZmlsZSBhcyBhIHNlY29uZCBpbnB1dCBmb3Ig
R1BVSW1hZ2VMb29rdXBGaWx0ZXIuCgotICoqR1BVSW1hZ2VBbWF0b3JrYUZp
bHRlcioqOiBBIHBob3RvIGZpbHRlciBiYXNlZCBvbiBhIFBob3Rvc2hvcCBh
Y3Rpb24gYnkgQW1hdG9ya2E6IGh0dHA6Ly9hbWF0b3JrYS5kZXZpYW50YXJ0
LmNvbS9hcnQvQW1hdG9ya2EtQWN0aW9uLTItMTIxMDY5NjMxIC4gSWYgeW91
IHdhbnQgdG8gdXNlIHRoaXMgZWZmZWN0IHlvdSBoYXZlIHRvIGFkZCBsb29r
dXBfYW1hdG9ya2EucG5nIGZyb20gdGhlIEdQVUltYWdlIFJlc291cmNlcyBm
b2xkZXIgdG8geW91ciBhcHBsaWNhdGlvbiBidW5kbGUuCgotICoqR1BVSW1h
Z2VNaXNzRXRpa2F0ZUZpbHRlcioqOiBBIHBob3RvIGZpbHRlciBiYXNlZCBv
biBhIFBob3Rvc2hvcCBhY3Rpb24gYnkgTWlzcyBFdGlrYXRlOiBodHRwOi8v
bWlzcy1ldGlrYXRlLmRldmlhbnRhcnQuY29tL2FydC9QaG90b3Nob3AtQWN0
aW9uLTE1LTEyMDE1MTk2MSAuIElmIHlvdSB3YW50IHRvIHVzZSB0aGlzIGVm
ZmVjdCB5b3UgaGF2ZSB0byBhZGQgbG9va3VwX21pc3NfZXRpa2F0ZS5wbmcg
ZnJvbSB0aGUgR1BVSW1hZ2UgUmVzb3VyY2VzIGZvbGRlciB0byB5b3VyIGFw
cGxpY2F0aW9uIGJ1bmRsZS4KCi0gKipHUFVJbWFnZVNvZnRFbGVnYW5jZUZp
bHRlcioqOiBBbm90aGVyIGxvb2t1cC1iYXNlZCBjb2xvciByZW1hcHBpbmcg
ZmlsdGVyLiBJZiB5b3Ugd2FudCB0byB1c2UgdGhpcyBlZmZlY3QgeW91IGhh
dmUgdG8gYWRkIGxvb2t1cF9zb2Z0X2VsZWdhbmNlXzEucG5nIGFuZCBsb29r
dXBfc29mdF9lbGVnYW5jZV8yLnBuZyBmcm9tIHRoZSBHUFVJbWFnZSBSZXNv
dXJjZXMgZm9sZGVyIHRvIHlvdXIgYXBwbGljYXRpb24gYnVuZGxlLgoKLSAq
KkdQVUltYWdlU2tpblRvbmVGaWx0ZXIqKjogQSBza2luLXRvbmUgYWRqdXN0
bWVudCBmaWx0ZXIgdGhhdCBhZmZlY3RzIGEgdW5pcXVlIHJhbmdlIG9mIGxp
Z2h0IHNraW4tdG9uZSBjb2xvcnMgYW5kIGFkanVzdHMgdGhlIHBpbmsvZ3Jl
ZW4gb3IgcGluay9vcmFuZ2UgcmFuZ2UgYWNjb3JkaW5nbHkuIERlZmF1bHQg
dmFsdWVzIGFyZSB0YXJnZXR0ZWQgYXQgZmFpciBjYXVjYXNpYW4gc2tpbiwg
YnV0IGNhbiBiZSBhZGp1c3RlZCBhcyByZXF1aXJlZC4KICAtICpza2luVG9u
ZUFkanVzdCo6IEFtb3VudCB0byBhZGp1c3Qgc2tpbiB0b25lLiBEZWZhdWx0
OiAwLjAsIHN1Z2dlc3RlZCBtaW4vbWF4OiAtMC4zIGFuZCAwLjMgcmVzcGVj
dGl2ZWx5LgogIC0gKnNraW5IdWUqOiBTa2luIGh1ZSB0byBiZSBkZXRlY3Rl
ZC4gRGVmYXVsdDogMC4wNSAoZmFpciBjYXVjYXNpYW4gdG8gcmVkZGlzaCBz
a2luKS4KICAtICpza2luSHVlVGhyZXNob2xkKjogQW1vdW50IG9mIHZhcmlh
bmNlIGluIHNraW4gaHVlLiBEZWZhdWx0OiA0MC4wLgogIC0gKm1heEh1ZVNo
aWZ0KjogTWF4aW11bSBhbW91bnQgb2YgaHVlIHNoaWZ0aW5nIGFsbG93ZWQu
IERlZmF1bHQ6IDAuMjUuCiAgLSAqbWF4U2F0dXJhdGlvblNoaWZ0KiA9IE1h
eGltdW0gYW1vdW50IG9mIHNhdHVyYXRpb24gdG8gYmUgc2hpZnRlZCAod2hl
biB1c2luZyBvcmFuZ2UpLiBEZWZhdWx0OiAwLjQuCiAgLSAqdXBwZXJTa2lu
VG9uZUNvbG9yKiA9IGBHUFVJbWFnZVNraW5Ub25lVXBwZXJDb2xvckdyZWVu
YCBvciBgR1BVSW1hZ2VTa2luVG9uZVVwcGVyQ29sb3JPcmFuZ2VgCiAgICAK
LSAqKkdQVUltYWdlQ29sb3JJbnZlcnRGaWx0ZXIqKjogSW52ZXJ0cyB0aGUg
Y29sb3JzIG9mIGFuIGltYWdlCgotICoqR1BVSW1hZ2VHcmF5c2NhbGVGaWx0
ZXIqKjogQ29udmVydHMgYW4gaW1hZ2UgdG8gZ3JheXNjYWxlIChhIHNsaWdo
dGx5IGZhc3RlciBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgc2F0dXJhdGlvbiBm
aWx0ZXIsIHdpdGhvdXQgdGhlIGFiaWxpdHkgdG8gdmFyeSB0aGUgY29sb3Ig
Y29udHJpYnV0aW9uKQoKLSAqKkdQVUltYWdlTW9ub2Nocm9tZUZpbHRlcioq
OiBDb252ZXJ0cyB0aGUgaW1hZ2UgdG8gYSBzaW5nbGUtY29sb3IgdmVyc2lv
biwgYmFzZWQgb24gdGhlIGx1bWluYW5jZSBvZiBlYWNoIHBpeGVsCiAgLSAq
aW50ZW5zaXR5KjogVGhlIGRlZ3JlZSB0byB3aGljaCB0aGUgc3BlY2lmaWMg
Y29sb3IgcmVwbGFjZXMgdGhlIG5vcm1hbCBpbWFnZSBjb2xvciAoMC4wIC0g
MS4wLCB3aXRoIDEuMCBhcyB0aGUgZGVmYXVsdCkKICAtICpjb2xvcio6IFRo
ZSBjb2xvciB0byB1c2UgYXMgdGhlIGJhc2lzIGZvciB0aGUgZWZmZWN0LCB3
aXRoICgwLjYsIDAuNDUsIDAuMywgMS4wKSBhcyB0aGUgZGVmYXVsdC4KCi0g
KipHUFVJbWFnZUZhbHNlQ29sb3JGaWx0ZXIqKjogVXNlcyB0aGUgbHVtaW5h
bmNlIG9mIHRoZSBpbWFnZSB0byBtaXggYmV0d2VlbiB0d28gdXNlci1zcGVj
aWZpZWQgY29sb3JzCiAgLSAqZmlyc3RDb2xvcio6IFRoZSBmaXJzdCBhbmQg
c2Vjb25kIGNvbG9ycyBzcGVjaWZ5IHdoYXQgY29sb3JzIHJlcGxhY2UgdGhl
IGRhcmsgYW5kIGxpZ2h0IGFyZWFzIG9mIHRoZSBpbWFnZSwgcmVzcGVjdGl2
ZWx5LiBUaGUgZGVmYXVsdHMgYXJlICgwLjAsIDAuMCwgMC41KSBhbWQgKDEu
MCwgMC4wLCAwLjApLgogIC0gKnNlY29uZENvbG9yKjogCgotICoqR1BVSW1h
Z2VIYXplRmlsdGVyKio6IFVzZWQgdG8gYWRkIG9yIHJlbW92ZSBoYXplIChz
aW1pbGFyIHRvIGEgVVYgZmlsdGVyKQogIC0gKmRpc3RhbmNlKjogU3RyZW5n
dGggb2YgdGhlIGNvbG9yIGFwcGxpZWQuIERlZmF1bHQgMC4gVmFsdWVzIGJl
dHdlZW4gLS4zIGFuZCAuMyBhcmUgYmVzdC4KICAtICpzbG9wZSo6IEFtb3Vu
dCBvZiBjb2xvciBjaGFuZ2UuIERlZmF1bHQgMC4gVmFsdWVzIGJldHdlZW4g
LS4zIGFuZCAuMyBhcmUgYmVzdC4KCi0gKipHUFVJbWFnZVNlcGlhRmlsdGVy
Kio6IFNpbXBsZSBzZXBpYSB0b25lIGZpbHRlcgogIC0gKmludGVuc2l0eSo6
IFRoZSBkZWdyZWUgdG8gd2hpY2ggdGhlIHNlcGlhIHRvbmUgcmVwbGFjZXMg
dGhlIG5vcm1hbCBpbWFnZSBjb2xvciAoMC4wIC0gMS4wLCB3aXRoIDEuMCBh
cyB0aGUgZGVmYXVsdCkKCi0gKipHUFVJbWFnZU9wYWNpdHlGaWx0ZXIqKjog
QWRqdXN0cyB0aGUgYWxwaGEgY2hhbm5lbCBvZiB0aGUgaW5jb21pbmcgaW1h
Z2UKICAtICpvcGFjaXR5KjogVGhlIHZhbHVlIHRvIG11bHRpcGx5IHRoZSBp
bmNvbWluZyBhbHBoYSBjaGFubmVsIGZvciBlYWNoIHBpeGVsIGJ5ICgwLjAg
LSAxLjAsIHdpdGggMS4wIGFzIHRoZSBkZWZhdWx0KQoKLSAqKkdQVUltYWdl
U29saWRDb2xvckdlbmVyYXRvcioqOiBUaGlzIG91dHB1dHMgYSBnZW5lcmF0
ZWQgaW1hZ2Ugd2l0aCBhIHNvbGlkIGNvbG9yLiBZb3UgbmVlZCB0byBkZWZp
bmUgdGhlIGltYWdlIHNpemUgdXNpbmcgLWZvcmNlUHJvY2Vzc2luZ0F0U2l6
ZToKICAtICpjb2xvcio6IFRoZSBjb2xvciwgaW4gYSBmb3VyIGNvbXBvbmVu
dCBmb3JtYXQsIHRoYXQgaXMgdXNlZCB0byBmaWxsIHRoZSBpbWFnZS4KCi0g
KipHUFVJbWFnZUx1bWluYW5jZVRocmVzaG9sZEZpbHRlcioqOiBQaXhlbHMg
d2l0aCBhIGx1bWluYW5jZSBhYm92ZSB0aGUgdGhyZXNob2xkIHdpbGwgYXBw
ZWFyIHdoaXRlLCBhbmQgdGhvc2UgYmVsb3cgd2lsbCBiZSBibGFjawogIC0g
KnRocmVzaG9sZCo6IFRoZSBsdW1pbmFuY2UgdGhyZXNob2xkLCBmcm9tIDAu
MCB0byAxLjAsIHdpdGggYSBkZWZhdWx0IG9mIDAuNQoKLSAqKkdQVUltYWdl
QWRhcHRpdmVUaHJlc2hvbGRGaWx0ZXIqKjogRGV0ZXJtaW5lcyB0aGUgbG9j
YWwgbHVtaW5hbmNlIGFyb3VuZCBhIHBpeGVsLCB0aGVuIHR1cm5zIHRoZSBw
aXhlbCBibGFjayBpZiBpdCBpcyBiZWxvdyB0aGF0IGxvY2FsIGx1bWluYW5j
ZSBhbmQgd2hpdGUgaWYgYWJvdmUuIFRoaXMgY2FuIGJlIHVzZWZ1bCBmb3Ig
cGlja2luZyBvdXQgdGV4dCB1bmRlciB2YXJ5aW5nIGxpZ2h0aW5nIGNvbmRp
dGlvbnMuCiAgLSAqYmx1clJhZGl1c0luUGl4ZWxzKjogQSBtdWx0aXBsaWVy
IGZvciB0aGUgYmFja2dyb3VuZCBhdmVyYWdpbmcgYmx1ciByYWRpdXMgaW4g
cGl4ZWxzLCB3aXRoIGEgZGVmYXVsdCBvZiA0LgoKLSAqKkdQVUltYWdlQXZl
cmFnZUx1bWluYW5jZVRocmVzaG9sZEZpbHRlcioqOiBUaGlzIGFwcGxpZXMg
YSB0aHJlc2hvbGRpbmcgb3BlcmF0aW9uIHdoZXJlIHRoZSB0aHJlc2hvbGQg
aXMgY29udGludWFsbHkgYWRqdXN0ZWQgYmFzZWQgb24gdGhlIGF2ZXJhZ2Ug
bHVtaW5hbmNlIG9mIHRoZSBzY2VuZS4KICAtICp0aHJlc2hvbGRNdWx0aXBs
aWVyKjogVGhpcyBpcyBhIGZhY3RvciB0aGF0IHRoZSBhdmVyYWdlIGx1bWlu
YW5jZSB3aWxsIGJlIG11bHRpcGxpZWQgYnkgaW4gb3JkZXIgdG8gYXJyaXZl
IGF0IHRoZSBmaW5hbCB0aHJlc2hvbGQgdG8gdXNlLiBCeSBkZWZhdWx0LCB0
aGlzIGlzIDEuMC4KCi0gKipHUFVJbWFnZUhpc3RvZ3JhbUZpbHRlcioqOiBU
aGlzIGFuYWx5emVzIHRoZSBpbmNvbWluZyBpbWFnZSBhbmQgY3JlYXRlcyBh
biBvdXRwdXQgaGlzdG9ncmFtIHdpdGggdGhlIGZyZXF1ZW5jeSBhdCB3aGlj
aCBlYWNoIGNvbG9yIHZhbHVlIG9jY3Vycy4gVGhlIG91dHB1dCBvZiB0aGlz
IGZpbHRlciBpcyBhIDMtcGl4ZWwtaGlnaCwgMjU2LXBpeGVsLXdpZGUgaW1h
Z2Ugd2l0aCB0aGUgY2VudGVyICh2ZXJ0aWNhbCkgcGl4ZWxzIGNvbnRhaW5p
bmcgcGl4ZWxzIHRoYXQgY29ycmVzcG9uZCB0byB0aGUgZnJlcXVlbmN5IGF0
IHdoaWNoIHZhcmlvdXMgY29sb3IgdmFsdWVzIG9jY3VycmVkLiBFYWNoIGNv
bG9yIHZhbHVlIG9jY3VwaWVzIG9uZSBvZiB0aGUgMjU2IHdpZHRoIHBvc2l0
aW9ucywgZnJvbSAwIG9uIHRoZSBsZWZ0IHRvIDI1NSBvbiB0aGUgcmlnaHQu
IFRoaXMgaGlzdG9ncmFtIGNhbiBiZSBnZW5lcmF0ZWQgZm9yIGluZGl2aWR1
YWwgY29sb3IgY2hhbm5lbHMgKGtHUFVJbWFnZUhpc3RvZ3JhbVJlZCwga0dQ
VUltYWdlSGlzdG9ncmFtR3JlZW4sIGtHUFVJbWFnZUhpc3RvZ3JhbUJsdWUp
LCB0aGUgbHVtaW5hbmNlIG9mIHRoZSBpbWFnZSAoa0dQVUltYWdlSGlzdG9n
cmFtTHVtaW5hbmNlKSwgb3IgZm9yIGFsbCB0aHJlZSBjb2xvciBjaGFubmVs
cyBhdCBvbmNlIChrR1BVSW1hZ2VIaXN0b2dyYW1SR0IpLgogIC0gKmRvd25z
YW1wbGluZ0ZhY3Rvcio6IFJhdGhlciB0aGFuIHNhbXBsaW5nIGV2ZXJ5IHBp
eGVsLCB0aGlzIGRpY3RhdGVzIHdoYXQgZnJhY3Rpb24gb2YgdGhlIGltYWdl
IGlzIHNhbXBsZWQuIEJ5IGRlZmF1bHQsIHRoaXMgaXMgMTYgd2l0aCBhIG1p
bmltdW0gb2YgMS4gVGhpcyBpcyBuZWVkZWQgdG8ga2VlcCBmcm9tIHNhdHVy
YXRpbmcgdGhlIGhpc3RvZ3JhbSwgd2hpY2ggY2FuIG9ubHkgcmVjb3JkIDI1
NiBwaXhlbHMgZm9yIGVhY2ggY29sb3IgdmFsdWUgYmVmb3JlIGl0IGJlY29t
ZXMgb3ZlcmxvYWRlZC4KCi0gKipHUFVJbWFnZUhpc3RvZ3JhbUdlbmVyYXRv
cioqOiBUaGlzIGlzIGEgc3BlY2lhbCBmaWx0ZXIsIGluIHRoYXQgaXQncyBw
cmltYXJpbHkgaW50ZW5kZWQgdG8gd29yayB3aXRoIHRoZSBHUFVJbWFnZUhp
c3RvZ3JhbUZpbHRlci4gSXQgZ2VuZXJhdGVzIGFuIG91dHB1dCByZXByZXNl
bnRhdGlvbiBvZiB0aGUgY29sb3IgaGlzdG9ncmFtcyBnZW5lcmF0ZWQgYnkg
R1BVSW1hZ2VIaXN0b2dyYW1GaWx0ZXIsIGJ1dCBpdCBjb3VsZCBiZSByZXB1
cnBvc2VkIHRvIGRpc3BsYXkgb3RoZXIga2luZHMgb2YgdmFsdWVzLiBJdCB0
YWtlcyBpbiBhbiBpbWFnZSBhbmQgbG9va3MgYXQgdGhlIGNlbnRlciAodmVy
dGljYWwpIHBpeGVscy4gSXQgdGhlbiBwbG90cyB0aGUgbnVtZXJpY2FsIHZh
bHVlcyBvZiB0aGUgUkdCIGNvbXBvbmVudHMgaW4gc2VwYXJhdGUgY29sb3Jl
ZCBncmFwaHMgaW4gYW4gb3V0cHV0IHRleHR1cmUuIFlvdSBtYXkgbmVlZCB0
byBmb3JjZSBhIHNpemUgZm9yIHRoaXMgZmlsdGVyIGluIG9yZGVyIHRvIG1h
a2UgaXRzIG91dHB1dCB2aXNpYmxlLgoKLSAqKkdQVUltYWdlQXZlcmFnZUNv
bG9yKio6IFRoaXMgcHJvY2Vzc2VzIGFuIGlucHV0IGltYWdlIGFuZCBkZXRl
cm1pbmVzIHRoZSBhdmVyYWdlIGNvbG9yIG9mIHRoZSBzY2VuZSwgYnkgYXZl
cmFnaW5nIHRoZSBSR0JBIGNvbXBvbmVudHMgZm9yIGVhY2ggcGl4ZWwgaW4g
dGhlIGltYWdlLiBBIHJlZHVjdGlvbiBwcm9jZXNzIGlzIHVzZWQgdG8gcHJv
Z3Jlc3NpdmVseSBkb3duc2FtcGxlIHRoZSBzb3VyY2UgaW1hZ2Ugb24gdGhl
IEdQVSwgZm9sbG93ZWQgYnkgYSBzaG9ydCBhdmVyYWdpbmcgY2FsY3VsYXRp
b24gb24gdGhlIENQVS4gVGhlIG91dHB1dCBmcm9tIHRoaXMgZmlsdGVyIGlz
IG1lYW5pbmdsZXNzLCBidXQgeW91IG5lZWQgdG8gc2V0IHRoZSBjb2xvckF2
ZXJhZ2VQcm9jZXNzaW5nRmluaXNoZWRCbG9jayBwcm9wZXJ0eSB0byBhIGJs
b2NrIHRoYXQgdGFrZXMgaW4gZm91ciBjb2xvciBjb21wb25lbnRzIGFuZCBh
IGZyYW1lIHRpbWUgYW5kIGRvZXMgc29tZXRoaW5nIHdpdGggdGhlbS4KCi0g
KipHUFVJbWFnZUx1bWlub3NpdHkqKjogTGlrZSB0aGUgR1BVSW1hZ2VBdmVy
YWdlQ29sb3IsIHRoaXMgcmVkdWNlcyBhbiBpbWFnZSB0byBpdHMgYXZlcmFn
ZSBsdW1pbm9zaXR5LiBZb3UgbmVlZCB0byBzZXQgdGhlIGx1bWlub3NpdHlQ
cm9jZXNzaW5nRmluaXNoZWRCbG9jayB0byBoYW5kbGUgdGhlIG91dHB1dCBv
ZiB0aGlzIGZpbHRlciwgd2hpY2gganVzdCByZXR1cm5zIGEgbHVtaW5vc2l0
eSB2YWx1ZSBhbmQgYSBmcmFtZSB0aW1lLgoKLSAqKkdQVUltYWdlQ2hyb21h
S2V5RmlsdGVyKio6IEZvciBhIGdpdmVuIGNvbG9yIGluIHRoZSBpbWFnZSwg
c2V0cyB0aGUgYWxwaGEgY2hhbm5lbCB0byAwLiBUaGlzIGlzIHNpbWlsYXIg
dG8gdGhlIEdQVUltYWdlQ2hyb21hS2V5QmxlbmRGaWx0ZXIsIG9ubHkgaW5z
dGVhZCBvZiBibGVuZGluZyBpbiBhIHNlY29uZCBpbWFnZSBmb3IgYSBtYXRj
aGluZyBjb2xvciB0aGlzIGRvZXNuJ3QgdGFrZSBpbiBhIHNlY29uZCBpbWFn
ZSBhbmQganVzdCB0dXJucyBhIGdpdmVuIGNvbG9yIHRyYW5zcGFyZW50Lgog
IC0gKnRocmVzaG9sZFNlbnNpdGl2aXR5KjogSG93IGNsb3NlIGEgY29sb3Ig
bWF0Y2ggbmVlZHMgdG8gZXhpc3QgdG8gdGhlIHRhcmdldCBjb2xvciB0byBi
ZSByZXBsYWNlZCAoZGVmYXVsdCBvZiAwLjQpCiAgLSAqc21vb3RoaW5nKjog
SG93IHNtb290aGx5IHRvIGJsZW5kIGZvciB0aGUgY29sb3IgbWF0Y2ggKGRl
ZmF1bHQgb2YgMC4xKQoKIyMjIEltYWdlIHByb2Nlc3NpbmcgIyMjCgotICoq
R1BVSW1hZ2VUcmFuc2Zvcm1GaWx0ZXIqKjogVGhpcyBhcHBsaWVzIGFuIGFy
Yml0cmFyeSAyLUQgb3IgMy1EIHRyYW5zZm9ybWF0aW9uIHRvIGFuIGltYWdl
CiAgLSAqYWZmaW5lVHJhbnNmb3JtKjogVGhpcyB0YWtlcyBpbiBhIENHQWZm
aW5lVHJhbnNmb3JtIHRvIGFkanVzdCBhbiBpbWFnZSBpbiAyLUQKICAtICp0
cmFuc2Zvcm0zRCo6IFRoaXMgdGFrZXMgaW4gYSBDQVRyYW5zZm9ybTNEIHRv
IG1hbmlwdWxhdGUgYW4gaW1hZ2UgaW4gMy1ECiAgLSAqaWdub3JlQXNwZWN0
UmF0aW8qOiBCeSBkZWZhdWx0LCB0aGUgYXNwZWN0IHJhdGlvIG9mIHRoZSB0
cmFuc2Zvcm1lZCBpbWFnZSBpcyBtYWludGFpbmVkLCBidXQgdGhpcyBjYW4g
YmUgc2V0IHRvIFlFUyB0byBtYWtlIHRoZSB0cmFuc2Zvcm1hdGlvbiBpbmRl
cGVuZGVudCBvZiBhc3BlY3QgcmF0aW8KCi0gKipHUFVJbWFnZUNyb3BGaWx0
ZXIqKjogVGhpcyBjcm9wcyBhbiBpbWFnZSB0byBhIHNwZWNpZmljIHJlZ2lv
biwgdGhlbiBwYXNzZXMgb25seSB0aGF0IHJlZ2lvbiBvbiB0byB0aGUgbmV4
dCBzdGFnZSBpbiB0aGUgZmlsdGVyCiAgLSAqY3JvcFJlZ2lvbio6IEEgcmVj
dGFuZ3VsYXIgYXJlYSB0byBjcm9wIG91dCBvZiB0aGUgaW1hZ2UsIG5vcm1h
bGl6ZWQgdG8gY29vcmRpbmF0ZXMgZnJvbSAwLjAgLSAxLjAuIFRoZSAoMC4w
LCAwLjApIHBvc2l0aW9uIGlzIGluIHRoZSB1cHBlciBsZWZ0IG9mIHRoZSBp
bWFnZS4KCi0gKipHUFVJbWFnZUxhbmN6b3NSZXNhbXBsaW5nRmlsdGVyKio6
IFRoaXMgbGV0cyB5b3UgdXAtIG9yIGRvd25zYW1wbGUgYW4gaW1hZ2UgdXNp
bmcgTGFuY3pvcyByZXNhbXBsaW5nLCB3aGljaCByZXN1bHRzIGluIG5vdGlj
ZWFibHkgYmV0dGVyIHF1YWxpdHkgdGhhbiB0aGUgc3RhbmRhcmQgbGluZWFy
IG9yIHRyaWxpbmVhciBpbnRlcnBvbGF0aW9uLiBTaW1wbHkgdXNlIC1mb3Jj
ZVByb2Nlc3NpbmdBdFNpemU6IHRvIHNldCB0aGUgdGFyZ2V0IG91dHB1dCBy
ZXNvbHV0aW9uIGZvciB0aGUgZmlsdGVyLCBhbmQgdGhlIGltYWdlIHdpbGwg
YmUgcmVzYW1wbGVkIGZvciB0aGF0IG5ldyBzaXplLgoKLSAqKkdQVUltYWdl
U2hhcnBlbkZpbHRlcioqOiBTaGFycGVucyB0aGUgaW1hZ2UKICAtICpzaGFy
cG5lc3MqOiBUaGUgc2hhcnBuZXNzIGFkanVzdG1lbnQgdG8gYXBwbHkgKC00
LjAgLSA0LjAsIHdpdGggMC4wIGFzIHRoZSBkZWZhdWx0KQoKLSAqKkdQVUlt
YWdlVW5zaGFycE1hc2tGaWx0ZXIqKjogQXBwbGllcyBhbiB1bnNoYXJwIG1h
c2sKICAtICpibHVyUmFkaXVzSW5QaXhlbHMqOiBUaGUgYmx1ciByYWRpdXMg
b2YgdGhlIHVuZGVybHlpbmcgR2F1c3NpYW4gYmx1ci4gVGhlIGRlZmF1bHQg
aXMgNC4wLgogIC0gKmludGVuc2l0eSo6IFRoZSBzdHJlbmd0aCBvZiB0aGUg
c2hhcnBlbmluZywgZnJvbSAwLjAgb24gdXAsIHdpdGggYSBkZWZhdWx0IG9m
IDEuMAoKLSAqKkdQVUltYWdlR2F1c3NpYW5CbHVyRmlsdGVyKio6IEEgaGFy
ZHdhcmUtb3B0aW1pemVkLCB2YXJpYWJsZS1yYWRpdXMgR2F1c3NpYW4gYmx1
cgogIC0gKnRleGVsU3BhY2luZ011bHRpcGxpZXIqOiBBIG11bHRpcGxpZXIg
Zm9yIHRoZSBzcGFjaW5nIGJldHdlZW4gdGV4ZWxzLCByYW5naW5nIGZyb20g
MC4wIG9uIHVwLCB3aXRoIGEgZGVmYXVsdCBvZiAxLjAuIEFkanVzdGluZyB0
aGlzIG1heSBzbGlnaHRseSBpbmNyZWFzZSB0aGUgYmx1ciBzdHJlbmd0aCwg
YnV0IHdpbGwgaW50cm9kdWNlIGFydGlmYWN0cyBpbiB0aGUgcmVzdWx0LiBI
aWdobHkgcmVjb21tZW5kIHVzaW5nIG90aGVyIHBhcmFtZXRlcnMgZmlyc3Qs
IGJlZm9yZSB0b3VjaGluZyB0aGlzIG9uZS4KICAtICpibHVyUmFkaXVzSW5Q
aXhlbHMqOiBBIHJhZGl1cyBpbiBwaXhlbHMgdG8gdXNlIGZvciB0aGUgYmx1
ciwgd2l0aCBhIGRlZmF1bHQgb2YgMi4wLiBUaGlzIGFkanVzdHMgdGhlIHNp
Z21hIHZhcmlhYmxlIGluIHRoZSBHYXVzc2lhbiBkaXN0cmlidXRpb24gZnVu
Y3Rpb24uCiAgLSAqYmx1clJhZGl1c0FzRnJhY3Rpb25PZkltYWdlV2lkdGgq
OiAKICAtICpibHVyUmFkaXVzQXNGcmFjdGlvbk9mSW1hZ2VIZWlnaHQqOiBT
ZXR0aW5nIHRoZXNlIHByb3BlcnRpZXMgd2lsbCBhbGxvdyB0aGUgYmx1ciBy
YWRpdXMgdG8gc2NhbGUgd2l0aCB0aGUgc2l6ZSBvZiB0aGUgaW1hZ2UKICAt
ICpibHVyUGFzc2VzKjogVGhlIG51bWJlciBvZiB0aW1lcyB0byBzZXF1ZW50
aWFsbHkgYmx1ciB0aGUgaW5jb21pbmcgaW1hZ2UuIFRoZSBtb3JlIHBhc3Nl
cywgdGhlIHNsb3dlciB0aGUgZmlsdGVyLgoKLSAqKkdQVUltYWdlQm94Qmx1
ckZpbHRlcioqOiBBIGhhcmR3YXJlLW9wdGltaXplZCwgdmFyaWFibGUtcmFk
aXVzIGJveCBibHVyCiAgLSAqdGV4ZWxTcGFjaW5nTXVsdGlwbGllcio6IEEg
bXVsdGlwbGllciBmb3IgdGhlIHNwYWNpbmcgYmV0d2VlbiB0ZXhlbHMsIHJh
bmdpbmcgZnJvbSAwLjAgb24gdXAsIHdpdGggYSBkZWZhdWx0IG9mIDEuMC4g
QWRqdXN0aW5nIHRoaXMgbWF5IHNsaWdodGx5IGluY3JlYXNlIHRoZSBibHVy
IHN0cmVuZ3RoLCBidXQgd2lsbCBpbnRyb2R1Y2UgYXJ0aWZhY3RzIGluIHRo
ZSByZXN1bHQuIEhpZ2hseSByZWNvbW1lbmQgdXNpbmcgb3RoZXIgcGFyYW1l
dGVycyBmaXJzdCwgYmVmb3JlIHRvdWNoaW5nIHRoaXMgb25lLgogIC0gKmJs
dXJSYWRpdXNJblBpeGVscyo6IEEgcmFkaXVzIGluIHBpeGVscyB0byB1c2Ug
Zm9yIHRoZSBibHVyLCB3aXRoIGEgZGVmYXVsdCBvZiAyLjAuIFRoaXMgYWRq
dXN0cyB0aGUgc2lnbWEgdmFyaWFibGUgaW4gdGhlIEdhdXNzaWFuIGRpc3Ry
aWJ1dGlvbiBmdW5jdGlvbi4KICAtICpibHVyUmFkaXVzQXNGcmFjdGlvbk9m
SW1hZ2VXaWR0aCo6IAogIC0gKmJsdXJSYWRpdXNBc0ZyYWN0aW9uT2ZJbWFn
ZUhlaWdodCo6IFNldHRpbmcgdGhlc2UgcHJvcGVydGllcyB3aWxsIGFsbG93
IHRoZSBibHVyIHJhZGl1cyB0byBzY2FsZSB3aXRoIHRoZSBzaXplIG9mIHRo
ZSBpbWFnZQogIC0gKmJsdXJQYXNzZXMqOiBUaGUgbnVtYmVyIG9mIHRpbWVz
IHRvIHNlcXVlbnRpYWxseSBibHVyIHRoZSBpbmNvbWluZyBpbWFnZS4gVGhl
IG1vcmUgcGFzc2VzLCB0aGUgc2xvd2VyIHRoZSBmaWx0ZXIuCgotICoqR1BV
SW1hZ2VTaW5nbGVDb21wb25lbnRHYXVzc2lhbkJsdXJGaWx0ZXIqKjogQSBt
b2RpZmljYXRpb24gb2YgdGhlIEdQVUltYWdlR2F1c3NpYW5CbHVyRmlsdGVy
IHRoYXQgb3BlcmF0ZXMgb25seSBvbiB0aGUgcmVkIGNvbXBvbmVudAogIC0g
KnRleGVsU3BhY2luZ011bHRpcGxpZXIqOiBBIG11bHRpcGxpZXIgZm9yIHRo
ZSBzcGFjaW5nIGJldHdlZW4gdGV4ZWxzLCByYW5naW5nIGZyb20gMC4wIG9u
IHVwLCB3aXRoIGEgZGVmYXVsdCBvZiAxLjAuIEFkanVzdGluZyB0aGlzIG1h
eSBzbGlnaHRseSBpbmNyZWFzZSB0aGUgYmx1ciBzdHJlbmd0aCwgYnV0IHdp
bGwgaW50cm9kdWNlIGFydGlmYWN0cyBpbiB0aGUgcmVzdWx0LiBIaWdobHkg
cmVjb21tZW5kIHVzaW5nIG90aGVyIHBhcmFtZXRlcnMgZmlyc3QsIGJlZm9y
ZSB0b3VjaGluZyB0aGlzIG9uZS4KICAtICpibHVyUmFkaXVzSW5QaXhlbHMq
OiBBIHJhZGl1cyBpbiBwaXhlbHMgdG8gdXNlIGZvciB0aGUgYmx1ciwgd2l0
aCBhIGRlZmF1bHQgb2YgMi4wLiBUaGlzIGFkanVzdHMgdGhlIHNpZ21hIHZh
cmlhYmxlIGluIHRoZSBHYXVzc2lhbiBkaXN0cmlidXRpb24gZnVuY3Rpb24u
CiAgLSAqYmx1clJhZGl1c0FzRnJhY3Rpb25PZkltYWdlV2lkdGgqOiAKICAt
ICpibHVyUmFkaXVzQXNGcmFjdGlvbk9mSW1hZ2VIZWlnaHQqOiBTZXR0aW5n
IHRoZXNlIHByb3BlcnRpZXMgd2lsbCBhbGxvdyB0aGUgYmx1ciByYWRpdXMg
dG8gc2NhbGUgd2l0aCB0aGUgc2l6ZSBvZiB0aGUgaW1hZ2UKICAtICpibHVy
UGFzc2VzKjogVGhlIG51bWJlciBvZiB0aW1lcyB0byBzZXF1ZW50aWFsbHkg
Ymx1ciB0aGUgaW5jb21pbmcgaW1hZ2UuIFRoZSBtb3JlIHBhc3NlcywgdGhl
IHNsb3dlciB0aGUgZmlsdGVyLgoKLSAqKkdQVUltYWdlR2F1c3NpYW5TZWxl
Y3RpdmVCbHVyRmlsdGVyKio6IEEgR2F1c3NpYW4gYmx1ciB0aGF0IHByZXNl
cnZlcyBmb2N1cyB3aXRoaW4gYSBjaXJjdWxhciByZWdpb24KICAtICpibHVy
UmFkaXVzSW5QaXhlbHMqOiBBIHJhZGl1cyBpbiBwaXhlbHMgdG8gdXNlIGZv
ciB0aGUgYmx1ciwgd2l0aCBhIGRlZmF1bHQgb2YgNS4wLiBUaGlzIGFkanVz
dHMgdGhlIHNpZ21hIHZhcmlhYmxlIGluIHRoZSBHYXVzc2lhbiBkaXN0cmli
dXRpb24gZnVuY3Rpb24uCiAgLSAqZXhjbHVkZUNpcmNsZVJhZGl1cyo6IFRo
ZSByYWRpdXMgb2YgdGhlIGNpcmN1bGFyIGFyZWEgYmVpbmcgZXhjbHVkZWQg
ZnJvbSB0aGUgYmx1cgogIC0gKmV4Y2x1ZGVDaXJjbGVQb2ludCo6IFRoZSBj
ZW50ZXIgb2YgdGhlIGNpcmN1bGFyIGFyZWEgYmVpbmcgZXhjbHVkZWQgZnJv
bSB0aGUgYmx1cgogIC0gKmV4Y2x1ZGVCbHVyU2l6ZSo6IFRoZSBzaXplIG9m
IHRoZSBhcmVhIGJldHdlZW4gdGhlIGJsdXJyZWQgcG9ydGlvbiBhbmQgdGhl
IGNsZWFyIGNpcmNsZSAKICAtICphc3BlY3RSYXRpbyo6IFRoZSBhc3BlY3Qg
cmF0aW8gb2YgdGhlIGltYWdlLCB1c2VkIHRvIGFkanVzdCB0aGUgY2lyY3Vs
YXJpdHkgb2YgdGhlIGluLWZvY3VzIHJlZ2lvbi4gQnkgZGVmYXVsdCwgdGhp
cyBtYXRjaGVzIHRoZSBpbWFnZSBhc3BlY3QgcmF0aW8sIGJ1dCB5b3UgY2Fu
IG92ZXJyaWRlIHRoaXMgdmFsdWUuCgotICoqR1BVSW1hZ2VHYXVzc2lhbkJs
dXJQb3NpdGlvbkZpbHRlcioqOiBUaGUgaW52ZXJzZSBvZiB0aGUgR1BVSW1h
Z2VHYXVzc2lhblNlbGVjdGl2ZUJsdXJGaWx0ZXIsIGFwcGx5aW5nIHRoZSBi
bHVyIG9ubHkgd2l0aGluIGEgY2VydGFpbiBjaXJjbGUKICAtICpibHVyU2l6
ZSo6IEEgbXVsdGlwbGllciBmb3IgdGhlIHNpemUgb2YgdGhlIGJsdXIsIHJh
bmdpbmcgZnJvbSAwLjAgb24gdXAsIHdpdGggYSBkZWZhdWx0IG9mIDEuMAog
IC0gKmJsdXJDZW50ZXIqOiBDZW50ZXIgZm9yIHRoZSBibHVyLCBkZWZhdWx0
cyB0byAwLjUsIDAuNQogIC0gKmJsdXJSYWRpdXMqOiBSYWRpdXMgZm9yIHRo
ZSBibHVyLCBkZWZhdWx0cyB0byAxLjAKCi0gKipHUFVJbWFnZWlPU0JsdXJG
aWx0ZXIqKjogQW4gYXR0ZW1wdCB0byByZXBsaWNhdGUgdGhlIGJhY2tncm91
bmQgYmx1ciB1c2VkIG9uIGlPUyA3IGluIHBsYWNlcyBsaWtlIHRoZSBjb250
cm9sIGNlbnRlci4KICAtICpibHVyUmFkaXVzSW5QaXhlbHMqOiBBIHJhZGl1
cyBpbiBwaXhlbHMgdG8gdXNlIGZvciB0aGUgYmx1ciwgd2l0aCBhIGRlZmF1
bHQgb2YgMTIuMC4gVGhpcyBhZGp1c3RzIHRoZSBzaWdtYSB2YXJpYWJsZSBp
biB0aGUgR2F1c3NpYW4gZGlzdHJpYnV0aW9uIGZ1bmN0aW9uLgogIC0gKnNh
dHVyYXRpb24qOiBTYXR1cmF0aW9uIHJhbmdlcyBmcm9tIDAuMCAoZnVsbHkg
ZGVzYXR1cmF0ZWQpIHRvIDIuMCAobWF4IHNhdHVyYXRpb24pLCB3aXRoIDAu
OCBhcyB0aGUgbm9ybWFsIGxldmVsCiAgLSAqZG93bnNhbXBsaW5nKjogVGhl
IGRlZ3JlZSB0byB3aGljaCB0byBkb3duc2FtcGxlLCB0aGVuIHVwc2FtcGxl
IHRoZSBpbmNvbWluZyBpbWFnZSB0byBtaW5pbWl6ZSBjb21wdXRhdGlvbnMg
d2l0aGluIHRoZSBHYXVzc2lhbiBibHVyLCB3aXRoIGEgZGVmYXVsdCBvZiA0
LjAuCgotICoqR1BVSW1hZ2VNZWRpYW5GaWx0ZXIqKjogVGFrZXMgdGhlIG1l
ZGlhbiB2YWx1ZSBvZiB0aGUgdGhyZWUgY29sb3IgY29tcG9uZW50cywgb3Zl
ciBhIDN4MyBhcmVhCgotICoqR1BVSW1hZ2VCaWxhdGVyYWxGaWx0ZXIqKjog
QSBiaWxhdGVyYWwgYmx1ciwgd2hpY2ggdHJpZXMgdG8gYmx1ciBzaW1pbGFy
IGNvbG9yIHZhbHVlcyB3aGlsZSBwcmVzZXJ2aW5nIHNoYXJwIGVkZ2VzCiAg
LSAqdGV4ZWxTcGFjaW5nTXVsdGlwbGllcio6IEEgbXVsdGlwbGllciBmb3Ig
dGhlIHNwYWNpbmcgYmV0d2VlbiB0ZXhlbCByZWFkcywgcmFuZ2luZyBmcm9t
IDAuMCBvbiB1cCwgd2l0aCBhIGRlZmF1bHQgb2YgNC4wCiAgLSAqZGlzdGFu
Y2VOb3JtYWxpemF0aW9uRmFjdG9yKjogQSBub3JtYWxpemF0aW9uIGZhY3Rv
ciBmb3IgdGhlIGRpc3RhbmNlIGJldHdlZW4gY2VudHJhbCBjb2xvciBhbmQg
c2FtcGxlIGNvbG9yLCB3aXRoIGEgZGVmYXVsdCBvZiA4LjAuCgotICoqR1BV
SW1hZ2VUaWx0U2hpZnRGaWx0ZXIqKjogQSBzaW11bGF0ZWQgdGlsdCBzaGlm
dCBsZW5zIGVmZmVjdAogIC0gKmJsdXJSYWRpdXNJblBpeGVscyo6IFRoZSBy
YWRpdXMgb2YgdGhlIHVuZGVybHlpbmcgYmx1ciwgaW4gcGl4ZWxzLiBUaGlz
IGlzIDcuMCBieSBkZWZhdWx0LgogIC0gKnRvcEZvY3VzTGV2ZWwqOiBUaGUg
bm9ybWFsaXplZCBsb2NhdGlvbiBvZiB0aGUgdG9wIG9mIHRoZSBpbi1mb2N1
cyBhcmVhIGluIHRoZSBpbWFnZSwgdGhpcyB2YWx1ZSBzaG91bGQgYmUgbG93
ZXIgdGhhbiBib3R0b21Gb2N1c0xldmVsLCBkZWZhdWx0IDAuNAogIC0gKmJv
dHRvbUZvY3VzTGV2ZWwqOiBUaGUgbm9ybWFsaXplZCBsb2NhdGlvbiBvZiB0
aGUgYm90dG9tIG9mIHRoZSBpbi1mb2N1cyBhcmVhIGluIHRoZSBpbWFnZSwg
dGhpcyB2YWx1ZSBzaG91bGQgYmUgaGlnaGVyIHRoYW4gdG9wRm9jdXNMZXZl
bCwgZGVmYXVsdCAwLjYKICAtICpmb2N1c0ZhbGxPZmZSYXRlKjogVGhlIHJh
dGUgYXQgd2hpY2ggdGhlIGltYWdlIGdldHMgYmx1cnJ5IGF3YXkgZnJvbSB0
aGUgaW4tZm9jdXMgcmVnaW9uLCBkZWZhdWx0IDAuMgoKLSAqKkdQVUltYWdl
M3gzQ29udm9sdXRpb25GaWx0ZXIqKjogUnVucyBhIDN4MyBjb252b2x1dGlv
biBrZXJuZWwgYWdhaW5zdCB0aGUgaW1hZ2UKICAtICpjb252b2x1dGlvbktl
cm5lbCo6IFRoZSBjb252b2x1dGlvbiBrZXJuZWwgaXMgYSAzeDMgbWF0cml4
IG9mIHZhbHVlcyB0byBhcHBseSB0byB0aGUgcGl4ZWwgYW5kIGl0cyA4IHN1
cnJvdW5kaW5nIHBpeGVscy4gVGhlIG1hdHJpeCBpcyBzcGVjaWZpZWQgaW4g
cm93LW1ham9yIG9yZGVyLCB3aXRoIHRoZSB0b3AgbGVmdCBwaXhlbCBiZWlu
ZyBvbmUub25lIGFuZCB0aGUgYm90dG9tIHJpZ2h0IHRocmVlLnRocmVlLiBJ
ZiB0aGUgdmFsdWVzIGluIHRoZSBtYXRyaXggZG9uJ3QgYWRkIHVwIHRvIDEu
MCwgdGhlIGltYWdlIGNvdWxkIGJlIGJyaWdodGVuZWQgb3IgZGFya2VuZWQu
CgotICoqR1BVSW1hZ2VTb2JlbEVkZ2VEZXRlY3Rpb25GaWx0ZXIqKjogU29i
ZWwgZWRnZSBkZXRlY3Rpb24sIHdpdGggZWRnZXMgaGlnaGxpZ2h0ZWQgaW4g
d2hpdGUKICAtICp0ZXhlbFdpZHRoKjogCiAgLSAqdGV4ZWxIZWlnaHQqOiBU
aGVzZSBwYXJhbWV0ZXJzIGFmZmVjdCB0aGUgdmlzaWJpbGl0eSBvZiB0aGUg
ZGV0ZWN0ZWQgZWRnZXMKICAtICplZGdlU3RyZW5ndGgqOiBBZGp1c3RzIHRo
ZSBkeW5hbWljIHJhbmdlIG9mIHRoZSBmaWx0ZXIuIEhpZ2hlciB2YWx1ZXMg
bGVhZCB0byBzdHJvbmdlciBlZGdlcywgYnV0IGNhbiBzYXR1cmF0ZSB0aGUg
aW50ZW5zaXR5IGNvbG9yc3BhY2UuIERlZmF1bHQgaXMgMS4wLgoKLSAqKkdQ
VUltYWdlUHJld2l0dEVkZ2VEZXRlY3Rpb25GaWx0ZXIqKjogUHJld2l0dCBl
ZGdlIGRldGVjdGlvbiwgd2l0aCBlZGdlcyBoaWdobGlnaHRlZCBpbiB3aGl0
ZQogIC0gKnRleGVsV2lkdGgqOiAKICAtICp0ZXhlbEhlaWdodCo6IFRoZXNl
IHBhcmFtZXRlcnMgYWZmZWN0IHRoZSB2aXNpYmlsaXR5IG9mIHRoZSBkZXRl
Y3RlZCBlZGdlcwogIC0gKmVkZ2VTdHJlbmd0aCo6IEFkanVzdHMgdGhlIGR5
bmFtaWMgcmFuZ2Ugb2YgdGhlIGZpbHRlci4gSGlnaGVyIHZhbHVlcyBsZWFk
IHRvIHN0cm9uZ2VyIGVkZ2VzLCBidXQgY2FuIHNhdHVyYXRlIHRoZSBpbnRl
bnNpdHkgY29sb3JzcGFjZS4gRGVmYXVsdCBpcyAxLjAuCgotICoqR1BVSW1h
Z2VUaHJlc2hvbGRFZGdlRGV0ZWN0aW9uRmlsdGVyKio6IFBlcmZvcm1zIFNv
YmVsIGVkZ2UgZGV0ZWN0aW9uLCBidXQgYXBwbGllcyBhIHRocmVzaG9sZCBp
bnN0ZWFkIG9mIGdpdmluZyBncmFkdWFsIHN0cmVuZ3RoIHZhbHVlcwogIC0g
KnRleGVsV2lkdGgqOiAKICAtICp0ZXhlbEhlaWdodCo6IFRoZXNlIHBhcmFt
ZXRlcnMgYWZmZWN0IHRoZSB2aXNpYmlsaXR5IG9mIHRoZSBkZXRlY3RlZCBl
ZGdlcwogIC0gKmVkZ2VTdHJlbmd0aCo6IEFkanVzdHMgdGhlIGR5bmFtaWMg
cmFuZ2Ugb2YgdGhlIGZpbHRlci4gSGlnaGVyIHZhbHVlcyBsZWFkIHRvIHN0
cm9uZ2VyIGVkZ2VzLCBidXQgY2FuIHNhdHVyYXRlIHRoZSBpbnRlbnNpdHkg
Y29sb3JzcGFjZS4gRGVmYXVsdCBpcyAxLjAuCiAgLSAqdGhyZXNob2xkKjog
QW55IGVkZ2UgYWJvdmUgdGhpcyB0aHJlc2hvbGQgd2lsbCBiZSBibGFjaywg
YW5kIGFueXRoaW5nIGJlbG93IHdoaXRlLiBSYW5nZXMgZnJvbSAwLjAgdG8g
MS4wLCB3aXRoIDAuOCBhcyB0aGUgZGVmYXVsdAoKLSAqKkdQVUltYWdlQ2Fu
bnlFZGdlRGV0ZWN0aW9uRmlsdGVyKio6IFRoaXMgdXNlcyB0aGUgZnVsbCBD
YW5ueSBwcm9jZXNzIHRvIGhpZ2hsaWdodCBvbmUtcGl4ZWwtd2lkZSBlZGdl
cwogIC0gKnRleGVsV2lkdGgqOiAKICAtICp0ZXhlbEhlaWdodCo6IFRoZXNl
IHBhcmFtZXRlcnMgYWZmZWN0IHRoZSB2aXNpYmlsaXR5IG9mIHRoZSBkZXRl
Y3RlZCBlZGdlcwogIC0gKmJsdXJSYWRpdXNJblBpeGVscyo6IFRoZSB1bmRl
cmx5aW5nIGJsdXIgcmFkaXVzIGZvciB0aGUgR2F1c3NpYW4gYmx1ci4gRGVm
YXVsdCBpcyAyLjAuCiAgLSAqYmx1clRleGVsU3BhY2luZ011bHRpcGxpZXIq
OiBUaGUgdW5kZXJseWluZyBibHVyIHRleGVsIHNwYWNpbmcgbXVsdGlwbGll
ci4gRGVmYXVsdCBpcyAxLjAuCiAgLSAqdXBwZXJUaHJlc2hvbGQqOiBBbnkg
ZWRnZSB3aXRoIGEgZ3JhZGllbnQgbWFnbml0dWRlIGFib3ZlIHRoaXMgdGhy
ZXNob2xkIHdpbGwgcGFzcyBhbmQgc2hvdyB1cCBpbiB0aGUgZmluYWwgcmVz
dWx0LiBEZWZhdWx0IGlzIDAuNC4KICAtICpsb3dlclRocmVzaG9sZCo6IEFu
eSBlZGdlIHdpdGggYSBncmFkaWVudCBtYWduaXR1ZGUgYmVsb3cgdGhpcyB0
aHJlc2hvbGQgd2lsbCBmYWlsIGFuZCBiZSByZW1vdmVkIGZyb20gdGhlIGZp
bmFsIHJlc3VsdC4gRGVmYXVsdCBpcyAwLjEuCgotICoqR1BVSW1hZ2VIYXJy
aXNDb3JuZXJEZXRlY3Rpb25GaWx0ZXIqKjogUnVucyB0aGUgSGFycmlzIGNv
cm5lciBkZXRlY3Rpb24gYWxnb3JpdGhtIG9uIGFuIGlucHV0IGltYWdlLCBh
bmQgcHJvZHVjZXMgYW4gaW1hZ2Ugd2l0aCB0aG9zZSBjb3JuZXIgcG9pbnRz
IGFzIHdoaXRlIHBpeGVscyBhbmQgZXZlcnl0aGluZyBlbHNlIGJsYWNrLiBU
aGUgY29ybmVyc0RldGVjdGVkQmxvY2sgY2FuIGJlIHNldCwgYW5kIHlvdSB3
aWxsIGJlIHByb3ZpZGVkIHdpdGggYSBsaXN0IG9mIGNvcm5lcnMgKGluIG5v
cm1hbGl6ZWQgMC4uMSBYLCBZIGNvb3JkaW5hdGVzKSB3aXRoaW4gdGhhdCBj
YWxsYmFjayBmb3Igd2hhdGV2ZXIgYWRkaXRpb25hbCBvcGVyYXRpb25zIHlv
dSB3YW50IHRvIHBlcmZvcm0uCiAgLSAqYmx1clJhZGl1c0luUGl4ZWxzKjog
VGhlIHJhZGl1cyBvZiB0aGUgdW5kZXJseWluZyBHYXVzc2lhbiBibHVyLiBU
aGUgZGVmYXVsdCBpcyAyLjAuCiAgLSAqc2Vuc2l0aXZpdHkqOiBBbiBpbnRl
cm5hbCBzY2FsaW5nIGZhY3RvciBhcHBsaWVkIHRvIGFkanVzdCB0aGUgZHlu
YW1pYyByYW5nZSBvZiB0aGUgY29ybmVybmVzcyBtYXBzIGdlbmVyYXRlZCBp
biB0aGUgZmlsdGVyLiBUaGUgZGVmYXVsdCBpcyA1LjAuCiAgLSAqdGhyZXNo
b2xkKjogVGhlIHRocmVzaG9sZCBhdCB3aGljaCBhIHBvaW50IGlzIGRldGVj
dGVkIGFzIGEgY29ybmVyLiBUaGlzIGNhbiB2YXJ5IHNpZ25pZmljYW50bHkg
YmFzZWQgb24gdGhlIHNpemUsIGxpZ2h0aW5nIGNvbmRpdGlvbnMsIGFuZCBp
T1MgZGV2aWNlIGNhbWVyYSB0eXBlLCBzbyBpdCBtaWdodCB0YWtlIGEgbGl0
dGxlIGV4cGVyaW1lbnRhdGlvbiB0byBnZXQgcmlnaHQgZm9yIHlvdXIgY2Fz
ZXMuIERlZmF1bHQgaXMgMC4yMC4KCi0gKipHUFVJbWFnZU5vYmxlQ29ybmVy
RGV0ZWN0aW9uRmlsdGVyKio6IFJ1bnMgdGhlIE5vYmxlIHZhcmlhbnQgb24g
dGhlIEhhcnJpcyBjb3JuZXIgZGV0ZWN0b3IuIEl0IGJlaGF2ZXMgYXMgZGVz
Y3JpYmVkIGFib3ZlIGZvciB0aGUgSGFycmlzIGRldGVjdG9yLgogIC0gKmJs
dXJSYWRpdXNJblBpeGVscyo6IFRoZSByYWRpdXMgb2YgdGhlIHVuZGVybHlp
bmcgR2F1c3NpYW4gYmx1ci4gVGhlIGRlZmF1bHQgaXMgMi4wLgogIC0gKnNl
bnNpdGl2aXR5KjogQW4gaW50ZXJuYWwgc2NhbGluZyBmYWN0b3IgYXBwbGll
ZCB0byBhZGp1c3QgdGhlIGR5bmFtaWMgcmFuZ2Ugb2YgdGhlIGNvcm5lcm5l
c3MgbWFwcyBnZW5lcmF0ZWQgaW4gdGhlIGZpbHRlci4gVGhlIGRlZmF1bHQg
aXMgNS4wLgogIC0gKnRocmVzaG9sZCo6IFRoZSB0aHJlc2hvbGQgYXQgd2hp
Y2ggYSBwb2ludCBpcyBkZXRlY3RlZCBhcyBhIGNvcm5lci4gVGhpcyBjYW4g
dmFyeSBzaWduaWZpY2FudGx5IGJhc2VkIG9uIHRoZSBzaXplLCBsaWdodGlu
ZyBjb25kaXRpb25zLCBhbmQgaU9TIGRldmljZSBjYW1lcmEgdHlwZSwgc28g
aXQgbWlnaHQgdGFrZSBhIGxpdHRsZSBleHBlcmltZW50YXRpb24gdG8gZ2V0
IHJpZ2h0IGZvciB5b3VyIGNhc2VzLiBEZWZhdWx0IGlzIDAuMi4KCi0gKipH
UFVJbWFnZVNoaVRvbWFzaUNvcm5lckRldGVjdGlvbkZpbHRlcioqOiBSdW5z
IHRoZSBTaGktVG9tYXNpIGZlYXR1cmUgZGV0ZWN0b3IuIEl0IGJlaGF2ZXMg
YXMgZGVzY3JpYmVkIGFib3ZlIGZvciB0aGUgSGFycmlzIGRldGVjdG9yLgog
IC0gKmJsdXJSYWRpdXNJblBpeGVscyo6IFRoZSByYWRpdXMgb2YgdGhlIHVu
ZGVybHlpbmcgR2F1c3NpYW4gYmx1ci4gVGhlIGRlZmF1bHQgaXMgMi4wLgog
IC0gKnNlbnNpdGl2aXR5KjogQW4gaW50ZXJuYWwgc2NhbGluZyBmYWN0b3Ig
YXBwbGllZCB0byBhZGp1c3QgdGhlIGR5bmFtaWMgcmFuZ2Ugb2YgdGhlIGNv
cm5lcm5lc3MgbWFwcyBnZW5lcmF0ZWQgaW4gdGhlIGZpbHRlci4gVGhlIGRl
ZmF1bHQgaXMgMS41LgogIC0gKnRocmVzaG9sZCo6IFRoZSB0aHJlc2hvbGQg
YXQgd2hpY2ggYSBwb2ludCBpcyBkZXRlY3RlZCBhcyBhIGNvcm5lci4gVGhp
cyBjYW4gdmFyeSBzaWduaWZpY2FudGx5IGJhc2VkIG9uIHRoZSBzaXplLCBs
aWdodGluZyBjb25kaXRpb25zLCBhbmQgaU9TIGRldmljZSBjYW1lcmEgdHlw
ZSwgc28gaXQgbWlnaHQgdGFrZSBhIGxpdHRsZSBleHBlcmltZW50YXRpb24g
dG8gZ2V0IHJpZ2h0IGZvciB5b3VyIGNhc2VzLiBEZWZhdWx0IGlzIDAuMi4K
Ci0gKipHUFVJbWFnZU5vbk1heGltdW1TdXBwcmVzc2lvbkZpbHRlcioqOiBD
dXJyZW50bHkgdXNlZCBvbmx5IGFzIHBhcnQgb2YgdGhlIEhhcnJpcyBjb3Ju
ZXIgZGV0ZWN0aW9uIGZpbHRlciwgdGhpcyB3aWxsIHNhbXBsZSBhIDEtcGl4
ZWwgYm94IGFyb3VuZCBlYWNoIHBpeGVsIGFuZCBkZXRlcm1pbmUgaWYgdGhl
IGNlbnRlciBwaXhlbCdzIHJlZCBjaGFubmVsIGlzIHRoZSBtYXhpbXVtIGlu
IHRoYXQgYXJlYS4gSWYgaXQgaXMsIGl0IHN0YXlzLiBJZiBub3QsIGl0IGlz
IHNldCB0byAwIGZvciBhbGwgY29sb3IgY29tcG9uZW50cy4KCi0gKipHUFVJ
bWFnZVhZRGVyaXZhdGl2ZUZpbHRlcioqOiBBbiBpbnRlcm5hbCBjb21wb25l
bnQgd2l0aGluIHRoZSBIYXJyaXMgY29ybmVyIGRldGVjdGlvbiBmaWx0ZXIs
IHRoaXMgY2FsY3VsYXRlcyB0aGUgc3F1YXJlZCBkaWZmZXJlbmNlIGJldHdl
ZW4gdGhlIHBpeGVscyB0byB0aGUgbGVmdCBhbmQgcmlnaHQgb2YgdGhpcyBv
bmUsIHRoZSBzcXVhcmVkIGRpZmZlcmVuY2Ugb2YgdGhlIHBpeGVscyBhYm92
ZSBhbmQgYmVsb3cgdGhpcyBvbmUsIGFuZCB0aGUgcHJvZHVjdCBvZiB0aG9z
ZSB0d28gZGlmZmVyZW5jZXMuCgotICoqR1BVSW1hZ2VDcm9zc2hhaXJHZW5l
cmF0b3IqKjogVGhpcyBkcmF3cyBhIHNlcmllcyBvZiBjcm9zc2hhaXJzIG9u
IGFuIGltYWdlLCBtb3N0IG9mdGVuIHVzZWQgZm9yIGlkZW50aWZ5aW5nIG1h
Y2hpbmUgdmlzaW9uIGZlYXR1cmVzLiBJdCBkb2VzIG5vdCB0YWtlIGluIGEg
c3RhbmRhcmQgaW1hZ2UgbGlrZSBvdGhlciBmaWx0ZXJzLCBidXQgYSBzZXJp
ZXMgb2YgcG9pbnRzIGluIGl0cyAtcmVuZGVyQ3Jvc3NoYWlyc0Zyb21BcnJh
eTpjb3VudDogbWV0aG9kLCB3aGljaCBkb2VzIHRoZSBhY3R1YWwgZHJhd2lu
Zy4gWW91IHdpbGwgbmVlZCB0byBmb3JjZSB0aGlzIGZpbHRlciB0byByZW5k
ZXIgYXQgdGhlIHBhcnRpY3VsYXIgb3V0cHV0IHNpemUgeW91IG5lZWQuCiAg
LSAqY3Jvc3NoYWlyV2lkdGgqOiBUaGUgd2lkdGgsIGluIHBpeGVscywgb2Yg
dGhlIGNyb3NzaGFpcnMgdG8gYmUgZHJhd24gb25zY3JlZW4uCgotICoqR1BV
SW1hZ2VEaWxhdGlvbkZpbHRlcioqOiBUaGlzIHBlcmZvcm1zIGFuIGltYWdl
IGRpbGF0aW9uIG9wZXJhdGlvbiwgd2hlcmUgdGhlIG1heGltdW0gaW50ZW5z
aXR5IG9mIHRoZSByZWQgY2hhbm5lbCBpbiBhIHJlY3Rhbmd1bGFyIG5laWdo
Ym9yaG9vZCBpcyB1c2VkIGZvciB0aGUgaW50ZW5zaXR5IG9mIHRoaXMgcGl4
ZWwuIFRoZSByYWRpdXMgb2YgdGhlIHJlY3Rhbmd1bGFyIGFyZWEgdG8gc2Ft
cGxlIG92ZXIgaXMgc3BlY2lmaWVkIG9uIGluaXRpYWxpemF0aW9uLCB3aXRo
IGEgcmFuZ2Ugb2YgMS00IHBpeGVscy4gVGhpcyBpcyBpbnRlbmRlZCBmb3Ig
dXNlIHdpdGggZ3JheXNjYWxlIGltYWdlcywgYW5kIGl0IGV4cGFuZHMgYnJp
Z2h0IHJlZ2lvbnMuCgotICoqR1BVSW1hZ2VSR0JEaWxhdGlvbkZpbHRlcioq
OiBUaGlzIGlzIHRoZSBzYW1lIGFzIHRoZSBHUFVJbWFnZURpbGF0aW9uRmls
dGVyLCBleGNlcHQgdGhhdCB0aGlzIGFjdHMgb24gYWxsIGNvbG9yIGNoYW5u
ZWxzLCBub3QganVzdCB0aGUgcmVkIGNoYW5uZWwuCgotICoqR1BVSW1hZ2VF
cm9zaW9uRmlsdGVyKio6IFRoaXMgcGVyZm9ybXMgYW4gaW1hZ2UgZXJvc2lv
biBvcGVyYXRpb24sIHdoZXJlIHRoZSBtaW5pbXVtIGludGVuc2l0eSBvZiB0
aGUgcmVkIGNoYW5uZWwgaW4gYSByZWN0YW5ndWxhciBuZWlnaGJvcmhvb2Qg
aXMgdXNlZCBmb3IgdGhlIGludGVuc2l0eSBvZiB0aGlzIHBpeGVsLiBUaGUg
cmFkaXVzIG9mIHRoZSByZWN0YW5ndWxhciBhcmVhIHRvIHNhbXBsZSBvdmVy
IGlzIHNwZWNpZmllZCBvbiBpbml0aWFsaXphdGlvbiwgd2l0aCBhIHJhbmdl
IG9mIDEtNCBwaXhlbHMuIFRoaXMgaXMgaW50ZW5kZWQgZm9yIHVzZSB3aXRo
IGdyYXlzY2FsZSBpbWFnZXMsIGFuZCBpdCBleHBhbmRzIGRhcmsgcmVnaW9u
cy4KCi0gKipHUFVJbWFnZVJHQkVyb3Npb25GaWx0ZXIqKjogVGhpcyBpcyB0
aGUgc2FtZSBhcyB0aGUgR1BVSW1hZ2VFcm9zaW9uRmlsdGVyLCBleGNlcHQg
dGhhdCB0aGlzIGFjdHMgb24gYWxsIGNvbG9yIGNoYW5uZWxzLCBub3QganVz
dCB0aGUgcmVkIGNoYW5uZWwuCgotICoqR1BVSW1hZ2VPcGVuaW5nRmlsdGVy
Kio6IFRoaXMgcGVyZm9ybXMgYW4gZXJvc2lvbiBvbiB0aGUgcmVkIGNoYW5u
ZWwgb2YgYW4gaW1hZ2UsIGZvbGxvd2VkIGJ5IGEgZGlsYXRpb24gb2YgdGhl
IHNhbWUgcmFkaXVzLiBUaGUgcmFkaXVzIGlzIHNldCBvbiBpbml0aWFsaXph
dGlvbiwgd2l0aCBhIHJhbmdlIG9mIDEtNCBwaXhlbHMuIFRoaXMgZmlsdGVy
cyBvdXQgc21hbGxlciBicmlnaHQgcmVnaW9ucy4KCi0gKipHUFVJbWFnZVJH
Qk9wZW5pbmdGaWx0ZXIqKjogVGhpcyBpcyB0aGUgc2FtZSBhcyB0aGUgR1BV
SW1hZ2VPcGVuaW5nRmlsdGVyLCBleGNlcHQgdGhhdCB0aGlzIGFjdHMgb24g
YWxsIGNvbG9yIGNoYW5uZWxzLCBub3QganVzdCB0aGUgcmVkIGNoYW5uZWwu
CgotICoqR1BVSW1hZ2VDbG9zaW5nRmlsdGVyKio6IFRoaXMgcGVyZm9ybXMg
YSBkaWxhdGlvbiBvbiB0aGUgcmVkIGNoYW5uZWwgb2YgYW4gaW1hZ2UsIGZv
bGxvd2VkIGJ5IGFuIGVyb3Npb24gb2YgdGhlIHNhbWUgcmFkaXVzLiBUaGUg
cmFkaXVzIGlzIHNldCBvbiBpbml0aWFsaXphdGlvbiwgd2l0aCBhIHJhbmdl
IG9mIDEtNCBwaXhlbHMuIFRoaXMgZmlsdGVycyBvdXQgc21hbGxlciBkYXJr
IHJlZ2lvbnMuCgotICoqR1BVSW1hZ2VSR0JDbG9zaW5nRmlsdGVyKio6IFRo
aXMgaXMgdGhlIHNhbWUgYXMgdGhlIEdQVUltYWdlQ2xvc2luZ0ZpbHRlciwg
ZXhjZXB0IHRoYXQgdGhpcyBhY3RzIG9uIGFsbCBjb2xvciBjaGFubmVscywg
bm90IGp1c3QgdGhlIHJlZCBjaGFubmVsLgoKLSAqKkdQVUltYWdlTG9jYWxC
aW5hcnlQYXR0ZXJuRmlsdGVyKio6IFRoaXMgcGVyZm9ybXMgYSBjb21wYXJp
c29uIG9mIGludGVuc2l0eSBvZiB0aGUgcmVkIGNoYW5uZWwgb2YgdGhlIDgg
c3Vycm91bmRpbmcgcGl4ZWxzIGFuZCB0aGF0IG9mIHRoZSBjZW50cmFsIG9u
ZSwgZW5jb2RpbmcgdGhlIGNvbXBhcmlzb24gcmVzdWx0cyBpbiBhIGJpdCBz
dHJpbmcgdGhhdCBiZWNvbWVzIHRoaXMgcGl4ZWwgaW50ZW5zaXR5LiBUaGUg
bGVhc3Qtc2lnbmlmaWNhbnQgYml0IGlzIHRoZSB0b3AtcmlnaHQgY29tcGFy
aXNvbiwgZ29pbmcgY291bnRlcmNsb2Nrd2lzZSB0byBlbmQgYXQgdGhlIHJp
Z2h0IGNvbXBhcmlzb24gYXMgdGhlIG1vc3Qgc2lnbmlmaWNhbnQgYml0LgoK
LSAqKkdQVUltYWdlTG93UGFzc0ZpbHRlcioqOiBUaGlzIGFwcGxpZXMgYSBs
b3cgcGFzcyBmaWx0ZXIgdG8gaW5jb21pbmcgdmlkZW8gZnJhbWVzLiBUaGlz
IGJhc2ljYWxseSBhY2N1bXVsYXRlcyBhIHdlaWdodGVkIHJvbGxpbmcgYXZl
cmFnZSBvZiBwcmV2aW91cyBmcmFtZXMgd2l0aCB0aGUgY3VycmVudCBvbmVz
IGFzIHRoZXkgY29tZSBpbi4gVGhpcyBjYW4gYmUgdXNlZCB0byBkZW5vaXNl
IHZpZGVvLCBhZGQgbW90aW9uIGJsdXIsIG9yIGJlIHVzZWQgdG8gY3JlYXRl
IGEgaGlnaCBwYXNzIGZpbHRlci4KICAtICpmaWx0ZXJTdHJlbmd0aCo6IFRo
aXMgY29udHJvbHMgdGhlIGRlZ3JlZSBieSB3aGljaCB0aGUgcHJldmlvdXMg
YWNjdW11bGF0ZWQgZnJhbWVzIGFyZSBibGVuZGVkIHdpdGggdGhlIGN1cnJl
bnQgb25lLiBUaGlzIHJhbmdlcyBmcm9tIDAuMCB0byAxLjAsIHdpdGggYSBk
ZWZhdWx0IG9mIDAuNS4KCi0gKipHUFVJbWFnZUhpZ2hQYXNzRmlsdGVyKio6
IFRoaXMgYXBwbGllcyBhIGhpZ2ggcGFzcyBmaWx0ZXIgdG8gaW5jb21pbmcg
dmlkZW8gZnJhbWVzLiBUaGlzIGlzIHRoZSBpbnZlcnNlIG9mIHRoZSBsb3cg
cGFzcyBmaWx0ZXIsIHNob3dpbmcgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiB0
aGUgY3VycmVudCBmcmFtZSBhbmQgdGhlIHdlaWdodGVkIHJvbGxpbmcgYXZl
cmFnZSBvZiBwcmV2aW91cyBvbmVzLiBUaGlzIGlzIG1vc3QgdXNlZnVsIGZv
ciBtb3Rpb24gZGV0ZWN0aW9uLgogIC0gKmZpbHRlclN0cmVuZ3RoKjogVGhp
cyBjb250cm9scyB0aGUgZGVncmVlIGJ5IHdoaWNoIHRoZSBwcmV2aW91cyBh
Y2N1bXVsYXRlZCBmcmFtZXMgYXJlIGJsZW5kZWQgYW5kIHRoZW4gc3VidHJh
Y3RlZCBmcm9tIHRoZSBjdXJyZW50IG9uZS4gVGhpcyByYW5nZXMgZnJvbSAw
LjAgdG8gMS4wLCB3aXRoIGEgZGVmYXVsdCBvZiAwLjUuCgotICoqR1BVSW1h
Z2VNb3Rpb25EZXRlY3RvcioqOiBUaGlzIGlzIGEgbW90aW9uIGRldGVjdG9y
IGJhc2VkIG9uIGEgaGlnaC1wYXNzIGZpbHRlci4gWW91IHNldCB0aGUgbW90
aW9uRGV0ZWN0aW9uQmxvY2sgYW5kIG9uIGV2ZXJ5IGluY29taW5nIGZyYW1l
IGl0IHdpbGwgZ2l2ZSB5b3UgdGhlIGNlbnRyb2lkIG9mIGFueSBkZXRlY3Rl
ZCBtb3ZlbWVudCBpbiB0aGUgc2NlbmUgKGluIG5vcm1hbGl6ZWQgWCxZIGNv
b3JkaW5hdGVzKSBhcyB3ZWxsIGFzIGFuIGludGVuc2l0eSBvZiBtb3Rpb24g
Zm9yIHRoZSBzY2VuZS4KICAtICpsb3dQYXNzRmlsdGVyU3RyZW5ndGgqOiBU
aGlzIGNvbnRyb2xzIHRoZSBzdHJlbmd0aCBvZiB0aGUgbG93IHBhc3MgZmls
dGVyIHVzZWQgYmVoaW5kIHRoZSBzY2VuZXMgdG8gZXN0YWJsaXNoIHRoZSBi
YXNlbGluZSB0aGF0IGluY29taW5nIGZyYW1lcyBhcmUgY29tcGFyZWQgd2l0
aC4gVGhpcyByYW5nZXMgZnJvbSAwLjAgdG8gMS4wLCB3aXRoIGEgZGVmYXVs
dCBvZiAwLjUuCgotICoqR1BVSW1hZ2VIb3VnaFRyYW5zZm9ybUxpbmVEZXRl
Y3RvcioqOiBEZXRlY3RzIGxpbmVzIGluIHRoZSBpbWFnZSB1c2luZyBhIEhv
dWdoIHRyYW5zZm9ybSBpbnRvIHBhcmFsbGVsIGNvb3JkaW5hdGUgc3BhY2Uu
IFRoaXMgYXBwcm9hY2ggaXMgYmFzZWQgZW50aXJlbHkgb24gdGhlIFBDIGxp
bmVzIHByb2Nlc3MgZGV2ZWxvcGVkIGJ5IHRoZSBHcmFwaEBGSVQgcmVzZWFy
Y2ggZ3JvdXAgYXQgdGhlIEJybm8gVW5pdmVyc2l0eSBvZiBUZWNobm9sb2d5
IGFuZCBkZXNjcmliZWQgaW4gdGhlaXIgcHVibGljYXRpb25zOiBNLiBEdWJz
a8OhLCBKLiBIYXZlbCwgYW5kIEEuIEhlcm91dC4gUmVhbC1UaW1lIERldGVj
dGlvbiBvZiBMaW5lcyB1c2luZyBQYXJhbGxlbCBDb29yZGluYXRlcyBhbmQg
T3BlbkdMLiBQcm9jZWVkaW5ncyBvZiBTQ0NHIDIwMTEsIEJyYXRpc2xhdmEs
IFNLLCBwLiA3IChodHRwOi8vbWVkdXNhLmZpdC52dXRici5jei9wdWJsaWMv
ZGF0YS9wYXBlcnMvMjAxMS1TQ0NHLUR1YnNrYS1SZWFsLVRpbWUtTGluZS1E
ZXRlY3Rpb24tVXNpbmctUEMtYW5kLU9wZW5HTC5wZGYpIGFuZCBNLiBEdWJz
a8OhLCBKLiBIYXZlbCwgYW5kIEEuIEhlcm91dC4gUENsaW5lcyDigJQgTGlu
ZSBkZXRlY3Rpb24gdXNpbmcgcGFyYWxsZWwgY29vcmRpbmF0ZXMuIDIwMTEg
SUVFRSBDb25mZXJlbmNlIG9uIENvbXB1dGVyIFZpc2lvbiBhbmQgUGF0dGVy
biBSZWNvZ25pdGlvbiAoQ1ZQUiksIHAuIDE0ODktIDE0OTQgKGh0dHA6Ly9t
ZWR1c2EuZml0LnZ1dGJyLmN6L3B1YmxpYy9kYXRhL3BhcGVycy8yMDExLUNW
UFItRHVic2thLVBDbGluZXMucGRmKS4KICAtICplZGdlVGhyZXNob2xkKjog
QSB0aHJlc2hvbGQgdmFsdWUgZm9yIHdoaWNoIGEgcG9pbnQgaXMgZGV0ZWN0
ZWQgYXMgYmVsb25naW5nIHRvIGFuIGVkZ2UgZm9yIGRldGVybWluaW5nIGxp
bmVzLiBEZWZhdWx0IGlzIDAuOS4KICAtICpsaW5lRGV0ZWN0aW9uVGhyZXNo
b2xkKjogQSB0aHJlc2hvbGQgdmFsdWUgZm9yIHdoaWNoIGEgbG9jYWwgbWF4
aW11bSBpcyBkZXRlY3RlZCBhcyBiZWxvbmdpbmcgdG8gYSBsaW5lIGluIHBh
cmFsbGVsIGNvb3JkaW5hdGUgc3BhY2UuIERlZmF1bHQgaXMgMC4yMC4KICAt
ICpsaW5lc0RldGVjdGVkQmxvY2sqOiBUaGlzIGJsb2NrIGlzIGNhbGxlZCBv
biB0aGUgZGV0ZWN0aW9uIG9mIGxpbmVzLCB1c3VhbGx5IG9uIGV2ZXJ5IHBy
b2Nlc3NlZCBmcmFtZS4gQSBDIGFycmF5IGNvbnRhaW5pbmcgbm9ybWFsaXpl
ZCBzbG9wZXMgYW5kIGludGVyY2VwdHMgaW4gbSwgYiBwYWlycyAoeT1teCti
KSBpcyBwYXNzZWQgaW4sIGFsb25nIHdpdGggYSBjb3VudCBvZiB0aGUgbnVt
YmVyIG9mIGxpbmVzIGRldGVjdGVkIGFuZCB0aGUgY3VycmVudCB0aW1lc3Rh
bXAgb2YgdGhlIHZpZGVvIGZyYW1lLgoKLSAqKkdQVUltYWdlTGluZUdlbmVy
YXRvcioqOiBBIGhlbHBlciBjbGFzcyB0aGF0IGdlbmVyYXRlcyBsaW5lcyB3
aGljaCBjYW4gb3ZlcmxheSB0aGUgc2NlbmUuIFRoZSBjb2xvciBvZiB0aGVz
ZSBsaW5lcyBjYW4gYmUgYWRqdXN0ZWQgdXNpbmcgLXNldExpbmVDb2xvclJl
ZDpncmVlbjpibHVlOgogIC0gKmxpbmVXaWR0aCo6IFRoZSB3aWR0aCBvZiB0
aGUgbGluZXMsIGluIHBpeGVscywgd2l0aCBhIGRlZmF1bHQgb2YgMS4wLgoK
LSAqKkdQVUltYWdlTW90aW9uQmx1ckZpbHRlcioqOiBBcHBsaWVzIGEgZGly
ZWN0aW9uYWwgbW90aW9uIGJsdXIgdG8gYW4gaW1hZ2UKICAtICpibHVyU2l6
ZSo6IEEgbXVsdGlwbGllciBmb3IgdGhlIGJsdXIgc2l6ZSwgcmFuZ2luZyBm
cm9tIDAuMCBvbiB1cCwgd2l0aCBhIGRlZmF1bHQgb2YgMS4wCiAgLSAqYmx1
ckFuZ2xlKjogVGhlIGFuZ3VsYXIgZGlyZWN0aW9uIG9mIHRoZSBibHVyLCBp
biBkZWdyZWVzLiAwIGRlZ3JlZXMgYnkgZGVmYXVsdC4KCi0gKipHUFVJbWFn
ZVpvb21CbHVyRmlsdGVyKio6IEFwcGxpZXMgYSBkaXJlY3Rpb25hbCBtb3Rp
b24gYmx1ciB0byBhbiBpbWFnZQogIC0gKmJsdXJTaXplKjogQSBtdWx0aXBs
aWVyIGZvciB0aGUgYmx1ciBzaXplLCByYW5naW5nIGZyb20gMC4wIG9uIHVw
LCB3aXRoIGEgZGVmYXVsdCBvZiAxLjAKICAtICpibHVyQ2VudGVyKjogVGhl
IG5vcm1hbGl6ZWQgY2VudGVyIG9mIHRoZSBibHVyLiAoMC41LCAwLjUpIGJ5
IGRlZmF1bHQKCiMjIyBCbGVuZGluZyBtb2RlcyAjIyMKCi0gKipHUFVJbWFn
ZUNocm9tYUtleUJsZW5kRmlsdGVyKio6IFNlbGVjdGl2ZWx5IHJlcGxhY2Vz
IGEgY29sb3IgaW4gdGhlIGZpcnN0IGltYWdlIHdpdGggdGhlIHNlY29uZCBp
bWFnZQogIC0gKnRocmVzaG9sZFNlbnNpdGl2aXR5KjogSG93IGNsb3NlIGEg
Y29sb3IgbWF0Y2ggbmVlZHMgdG8gZXhpc3QgdG8gdGhlIHRhcmdldCBjb2xv
ciB0byBiZSByZXBsYWNlZCAoZGVmYXVsdCBvZiAwLjQpCiAgLSAqc21vb3Ro
aW5nKjogSG93IHNtb290aGx5IHRvIGJsZW5kIGZvciB0aGUgY29sb3IgbWF0
Y2ggKGRlZmF1bHQgb2YgMC4xKQoKLSAqKkdQVUltYWdlRGlzc29sdmVCbGVu
ZEZpbHRlcioqOiBBcHBsaWVzIGEgZGlzc29sdmUgYmxlbmQgb2YgdHdvIGlt
YWdlcwogIC0gKm1peCo6IFRoZSBkZWdyZWUgd2l0aCB3aGljaCB0aGUgc2Vj
b25kIGltYWdlIG92ZXJyaWRlcyB0aGUgZmlyc3QgKDAuMCAtIDEuMCwgd2l0
aCAwLjUgYXMgdGhlIGRlZmF1bHQpCgotICoqR1BVSW1hZ2VNdWx0aXBseUJs
ZW5kRmlsdGVyKio6IEFwcGxpZXMgYSBtdWx0aXBseSBibGVuZCBvZiB0d28g
aW1hZ2VzCgotICoqR1BVSW1hZ2VBZGRCbGVuZEZpbHRlcioqOiBBcHBsaWVz
IGFuIGFkZGl0aXZlIGJsZW5kIG9mIHR3byBpbWFnZXMKCi0gKipHUFVJbWFn
ZVN1YnRyYWN0QmxlbmRGaWx0ZXIqKjogQXBwbGllcyBhIHN1YnRyYWN0aXZl
IGJsZW5kIG9mIHR3byBpbWFnZXMKCi0gKipHUFVJbWFnZURpdmlkZUJsZW5k
RmlsdGVyKio6IEFwcGxpZXMgYSBkaXZpc2lvbiBibGVuZCBvZiB0d28gaW1h
Z2VzCgotICoqR1BVSW1hZ2VPdmVybGF5QmxlbmRGaWx0ZXIqKjogQXBwbGll
cyBhbiBvdmVybGF5IGJsZW5kIG9mIHR3byBpbWFnZXMKCi0gKipHUFVJbWFn
ZURhcmtlbkJsZW5kRmlsdGVyKio6IEJsZW5kcyB0d28gaW1hZ2VzIGJ5IHRh
a2luZyB0aGUgbWluaW11bSB2YWx1ZSBvZiBlYWNoIGNvbG9yIGNvbXBvbmVu
dCBiZXR3ZWVuIHRoZSBpbWFnZXMKCi0gKipHUFVJbWFnZUxpZ2h0ZW5CbGVu
ZEZpbHRlcioqOiBCbGVuZHMgdHdvIGltYWdlcyBieSB0YWtpbmcgdGhlIG1h
eGltdW0gdmFsdWUgb2YgZWFjaCBjb2xvciBjb21wb25lbnQgYmV0d2VlbiB0
aGUgaW1hZ2VzCgotICoqR1BVSW1hZ2VDb2xvckJ1cm5CbGVuZEZpbHRlcioq
OiBBcHBsaWVzIGEgY29sb3IgYnVybiBibGVuZCBvZiB0d28gaW1hZ2VzCgot
ICoqR1BVSW1hZ2VDb2xvckRvZGdlQmxlbmRGaWx0ZXIqKjogQXBwbGllcyBh
IGNvbG9yIGRvZGdlIGJsZW5kIG9mIHR3byBpbWFnZXMKCi0gKipHUFVJbWFn
ZVNjcmVlbkJsZW5kRmlsdGVyKio6IEFwcGxpZXMgYSBzY3JlZW4gYmxlbmQg
b2YgdHdvIGltYWdlcwoKLSAqKkdQVUltYWdlRXhjbHVzaW9uQmxlbmRGaWx0
ZXIqKjogQXBwbGllcyBhbiBleGNsdXNpb24gYmxlbmQgb2YgdHdvIGltYWdl
cwoKLSAqKkdQVUltYWdlRGlmZmVyZW5jZUJsZW5kRmlsdGVyKio6IEFwcGxp
ZXMgYSBkaWZmZXJlbmNlIGJsZW5kIG9mIHR3byBpbWFnZXMKCi0gKipHUFVJ
bWFnZUhhcmRMaWdodEJsZW5kRmlsdGVyKio6IEFwcGxpZXMgYSBoYXJkIGxp
Z2h0IGJsZW5kIG9mIHR3byBpbWFnZXMKCi0gKipHUFVJbWFnZVNvZnRMaWdo
dEJsZW5kRmlsdGVyKio6IEFwcGxpZXMgYSBzb2Z0IGxpZ2h0IGJsZW5kIG9m
IHR3byBpbWFnZXMKCi0gKipHUFVJbWFnZUFscGhhQmxlbmRGaWx0ZXIqKjog
QmxlbmRzIHRoZSBzZWNvbmQgaW1hZ2Ugb3ZlciB0aGUgZmlyc3QsIGJhc2Vk
IG9uIHRoZSBzZWNvbmQncyBhbHBoYSBjaGFubmVsCiAgLSAqbWl4KjogVGhl
IGRlZ3JlZSB3aXRoIHdoaWNoIHRoZSBzZWNvbmQgaW1hZ2Ugb3ZlcnJpZGVz
IHRoZSBmaXJzdCAoMC4wIC0gMS4wLCB3aXRoIDEuMCBhcyB0aGUgZGVmYXVs
dCkKCi0gKipHUFVJbWFnZVNvdXJjZU92ZXJCbGVuZEZpbHRlcioqOiBBcHBs
aWVzIGEgc291cmNlIG92ZXIgYmxlbmQgb2YgdHdvIGltYWdlcwoKLSAqKkdQ
VUltYWdlQ29sb3JCdXJuQmxlbmRGaWx0ZXIqKjogQXBwbGllcyBhIGNvbG9y
IGJ1cm4gYmxlbmQgb2YgdHdvIGltYWdlcwoKLSAqKkdQVUltYWdlQ29sb3JE
b2RnZUJsZW5kRmlsdGVyKio6IEFwcGxpZXMgYSBjb2xvciBkb2RnZSBibGVu
ZCBvZiB0d28gaW1hZ2VzCgotICoqR1BVSW1hZ2VOb3JtYWxCbGVuZEZpbHRl
cioqOiBBcHBsaWVzIGEgbm9ybWFsIGJsZW5kIG9mIHR3byBpbWFnZXMKCi0g
KipHUFVJbWFnZUNvbG9yQmxlbmRGaWx0ZXIqKjogQXBwbGllcyBhIGNvbG9y
IGJsZW5kIG9mIHR3byBpbWFnZXMKCi0gKipHUFVJbWFnZUh1ZUJsZW5kRmls
dGVyKio6IEFwcGxpZXMgYSBodWUgYmxlbmQgb2YgdHdvIGltYWdlcwoKLSAq
KkdQVUltYWdlU2F0dXJhdGlvbkJsZW5kRmlsdGVyKio6IEFwcGxpZXMgYSBz
YXR1cmF0aW9uIGJsZW5kIG9mIHR3byBpbWFnZXMKCi0gKipHUFVJbWFnZUx1
bWlub3NpdHlCbGVuZEZpbHRlcioqOiBBcHBsaWVzIGEgbHVtaW5vc2l0eSBi
bGVuZCBvZiB0d28gaW1hZ2VzCgotICoqR1BVSW1hZ2VMaW5lYXJCdXJuQmxl
bmRGaWx0ZXIqKjogQXBwbGllcyBhIGxpbmVhciBidXJuIGJsZW5kIG9mIHR3
byBpbWFnZXMKCi0gKipHUFVJbWFnZVBvaXNzb25CbGVuZEZpbHRlcioqOiBB
cHBsaWVzIGEgUG9pc3NvbiBibGVuZCBvZiB0d28gaW1hZ2VzCiAgLSAqbWl4
KjogTWl4IHJhbmdlcyBmcm9tIDAuMCAob25seSBpbWFnZSAxKSB0byAxLjAg
KG9ubHkgaW1hZ2UgMiBncmFkaWVudHMpLCB3aXRoIDEuMCBhcyB0aGUgbm9y
bWFsIGxldmVsCiAgLSAqbnVtSXRlcmF0aW9ucyo6IFRoZSBudW1iZXIgb2Yg
dGltZXMgdG8gcHJvcGFnYXRlIHRoZSBncmFkaWVudHMuIENyYW5rIHRoaXMg
dXAgdG8gMTAwIG9yIGV2ZW4gMTAwMCBpZiB5b3Ugd2FudCB0byBnZXQgYW55
d2hlcmUgbmVhciBjb252ZXJnZW5jZS4gIFllcywgdGhpcyB3aWxsIGJlIHNs
b3cuCgotICoqR1BVSW1hZ2VNYXNrRmlsdGVyKio6IE1hc2tzIG9uZSBpbWFn
ZSB1c2luZyBhbm90aGVyCgojIyMgVmlzdWFsIGVmZmVjdHMgIyMjCgotICoq
R1BVSW1hZ2VQaXhlbGxhdGVGaWx0ZXIqKjogQXBwbGllcyBhIHBpeGVsbGF0
aW9uIGVmZmVjdCBvbiBhbiBpbWFnZSBvciB2aWRlbwogIC0gKmZyYWN0aW9u
YWxXaWR0aE9mQVBpeGVsKjogSG93IGxhcmdlIHRoZSBwaXhlbHMgYXJlLCBh
cyBhIGZyYWN0aW9uIG9mIHRoZSB3aWR0aCBhbmQgaGVpZ2h0IG9mIHRoZSBp
bWFnZSAoMC4wIC0gMS4wLCBkZWZhdWx0IDAuMDUpCgotICoqR1BVSW1hZ2VQ
b2xhclBpeGVsbGF0ZUZpbHRlcioqOiBBcHBsaWVzIGEgcGl4ZWxsYXRpb24g
ZWZmZWN0IG9uIGFuIGltYWdlIG9yIHZpZGVvLCBiYXNlZCBvbiBwb2xhciBj
b29yZGluYXRlcyBpbnN0ZWFkIG9mIENhcnRlc2lhbiBvbmVzCiAgLSAqY2Vu
dGVyKjogVGhlIGNlbnRlciBhYm91dCB3aGljaCB0byBhcHBseSB0aGUgcGl4
ZWxsYXRpb24sIGRlZmF1bHRpbmcgdG8gKDAuNSwgMC41KQogIC0gKnBpeGVs
U2l6ZSo6IFRoZSBmcmFjdGlvbmFsIHBpeGVsIHNpemUsIHNwbGl0IGludG8g
d2lkdGggYW5kIGhlaWdodCBjb21wb25lbnRzLiBUaGUgZGVmYXVsdCBpcyAo
MC4wNSwgMC4wNSkKCi0gKipHUFVJbWFnZVBvbGthRG90RmlsdGVyKio6IEJy
ZWFrcyBhbiBpbWFnZSB1cCBpbnRvIGNvbG9yZWQgZG90cyB3aXRoaW4gYSBy
ZWd1bGFyIGdyaWQKICAtICpmcmFjdGlvbmFsV2lkdGhPZkFQaXhlbCo6IEhv
dyBsYXJnZSB0aGUgZG90cyBhcmUsIGFzIGEgZnJhY3Rpb24gb2YgdGhlIHdp
ZHRoIGFuZCBoZWlnaHQgb2YgdGhlIGltYWdlICgwLjAgLSAxLjAsIGRlZmF1
bHQgMC4wNSkKICAtICpkb3RTY2FsaW5nKjogV2hhdCBmcmFjdGlvbiBvZiBl
YWNoIGdyaWQgc3BhY2UgaXMgdGFrZW4gdXAgYnkgYSBkb3QsIGZyb20gMC4w
IHRvIDEuMCB3aXRoIGEgZGVmYXVsdCBvZiAwLjkuCgotICoqR1BVSW1hZ2VI
YWxmdG9uZUZpbHRlcioqOiBBcHBsaWVzIGEgaGFsZnRvbmUgZWZmZWN0IHRv
IGFuIGltYWdlLCBsaWtlIG5ld3MgcHJpbnQKICAtICpmcmFjdGlvbmFsV2lk
dGhPZkFQaXhlbCo6IEhvdyBsYXJnZSB0aGUgaGFsZnRvbmUgZG90cyBhcmUs
IGFzIGEgZnJhY3Rpb24gb2YgdGhlIHdpZHRoIGFuZCBoZWlnaHQgb2YgdGhl
IGltYWdlICgwLjAgLSAxLjAsIGRlZmF1bHQgMC4wNSkKCi0gKipHUFVJbWFn
ZUNyb3NzaGF0Y2hGaWx0ZXIqKjogVGhpcyBjb252ZXJ0cyBhbiBpbWFnZSBp
bnRvIGEgYmxhY2stYW5kLXdoaXRlIGNyb3NzaGF0Y2ggcGF0dGVybgogIC0g
KmNyb3NzSGF0Y2hTcGFjaW5nKjogVGhlIGZyYWN0aW9uYWwgd2lkdGggb2Yg
dGhlIGltYWdlIHRvIHVzZSBhcyB0aGUgc3BhY2luZyBmb3IgdGhlIGNyb3Nz
aGF0Y2guIFRoZSBkZWZhdWx0IGlzIDAuMDMuCiAgLSAqbGluZVdpZHRoKjog
QSByZWxhdGl2ZSB3aWR0aCBmb3IgdGhlIGNyb3NzaGF0Y2ggbGluZXMuIFRo
ZSBkZWZhdWx0IGlzIDAuMDAzLgoKLSAqKkdQVUltYWdlU2tldGNoRmlsdGVy
Kio6IENvbnZlcnRzIHZpZGVvIHRvIGxvb2sgbGlrZSBhIHNrZXRjaC4gVGhp
cyBpcyBqdXN0IHRoZSBTb2JlbCBlZGdlIGRldGVjdGlvbiBmaWx0ZXIgd2l0
aCB0aGUgY29sb3JzIGludmVydGVkCiAgLSAqdGV4ZWxXaWR0aCo6IAogIC0g
KnRleGVsSGVpZ2h0KjogVGhlc2UgcGFyYW1ldGVycyBhZmZlY3QgdGhlIHZp
c2liaWxpdHkgb2YgdGhlIGRldGVjdGVkIGVkZ2VzCiAgLSAqZWRnZVN0cmVu
Z3RoKjogQWRqdXN0cyB0aGUgZHluYW1pYyByYW5nZSBvZiB0aGUgZmlsdGVy
LiBIaWdoZXIgdmFsdWVzIGxlYWQgdG8gc3Ryb25nZXIgZWRnZXMsIGJ1dCBj
YW4gc2F0dXJhdGUgdGhlIGludGVuc2l0eSBjb2xvcnNwYWNlLiBEZWZhdWx0
IGlzIDEuMC4KCi0gKipHUFVJbWFnZVRocmVzaG9sZFNrZXRjaEZpbHRlcioq
OiBTYW1lIGFzIHRoZSBza2V0Y2ggZmlsdGVyLCBvbmx5IHRoZSBlZGdlcyBh
cmUgdGhyZXNob2xkZWQgaW5zdGVhZCBvZiBiZWluZyBncmF5c2NhbGUKICAt
ICp0ZXhlbFdpZHRoKjogCiAgLSAqdGV4ZWxIZWlnaHQqOiBUaGVzZSBwYXJh
bWV0ZXJzIGFmZmVjdCB0aGUgdmlzaWJpbGl0eSBvZiB0aGUgZGV0ZWN0ZWQg
ZWRnZXMKICAtICplZGdlU3RyZW5ndGgqOiBBZGp1c3RzIHRoZSBkeW5hbWlj
IHJhbmdlIG9mIHRoZSBmaWx0ZXIuIEhpZ2hlciB2YWx1ZXMgbGVhZCB0byBz
dHJvbmdlciBlZGdlcywgYnV0IGNhbiBzYXR1cmF0ZSB0aGUgaW50ZW5zaXR5
IGNvbG9yc3BhY2UuIERlZmF1bHQgaXMgMS4wLgogIC0gKnRocmVzaG9sZCo6
IEFueSBlZGdlIGFib3ZlIHRoaXMgdGhyZXNob2xkIHdpbGwgYmUgYmxhY2ss
IGFuZCBhbnl0aGluZyBiZWxvdyB3aGl0ZS4gUmFuZ2VzIGZyb20gMC4wIHRv
IDEuMCwgd2l0aCAwLjggYXMgdGhlIGRlZmF1bHQKCi0gKipHUFVJbWFnZVRv
b25GaWx0ZXIqKjogVGhpcyB1c2VzIFNvYmVsIGVkZ2UgZGV0ZWN0aW9uIHRv
IHBsYWNlIGEgYmxhY2sgYm9yZGVyIGFyb3VuZCBvYmplY3RzLCBhbmQgdGhl
biBpdCBxdWFudGl6ZXMgdGhlIGNvbG9ycyBwcmVzZW50IGluIHRoZSBpbWFn
ZSB0byBnaXZlIGEgY2FydG9vbi1saWtlIHF1YWxpdHkgdG8gdGhlIGltYWdl
LgogIC0gKnRleGVsV2lkdGgqOiAKICAtICp0ZXhlbEhlaWdodCo6IFRoZXNl
IHBhcmFtZXRlcnMgYWZmZWN0IHRoZSB2aXNpYmlsaXR5IG9mIHRoZSBkZXRl
Y3RlZCBlZGdlcwogIC0gKnRocmVzaG9sZCo6IFRoZSBzZW5zaXRpdml0eSBv
ZiB0aGUgZWRnZSBkZXRlY3Rpb24sIHdpdGggbG93ZXIgdmFsdWVzIGJlaW5n
IG1vcmUgc2Vuc2l0aXZlLiBSYW5nZXMgZnJvbSAwLjAgdG8gMS4wLCB3aXRo
IDAuMiBhcyB0aGUgZGVmYXVsdAogIC0gKnF1YW50aXphdGlvbkxldmVscyo6
IFRoZSBudW1iZXIgb2YgY29sb3IgbGV2ZWxzIHRvIHJlcHJlc2VudCBpbiB0
aGUgZmluYWwgaW1hZ2UuIERlZmF1bHQgaXMgMTAuMAoKLSAqKkdQVUltYWdl
U21vb3RoVG9vbkZpbHRlcioqOiBUaGlzIHVzZXMgYSBzaW1pbGFyIHByb2Nl
c3MgYXMgdGhlIEdQVUltYWdlVG9vbkZpbHRlciwgb25seSBpdCBwcmVjZWRl
cyB0aGUgdG9vbiBlZmZlY3Qgd2l0aCBhIEdhdXNzaWFuIGJsdXIgdG8gc21v
b3RoIG91dCBub2lzZS4KICAtICp0ZXhlbFdpZHRoKjogCiAgLSAqdGV4ZWxI
ZWlnaHQqOiBUaGVzZSBwYXJhbWV0ZXJzIGFmZmVjdCB0aGUgdmlzaWJpbGl0
eSBvZiB0aGUgZGV0ZWN0ZWQgZWRnZXMKICAtICpibHVyUmFkaXVzSW5QaXhl
bHMqOiBUaGUgcmFkaXVzIG9mIHRoZSB1bmRlcmx5aW5nIEdhdXNzaWFuIGJs
dXIuIFRoZSBkZWZhdWx0IGlzIDIuMC4KICAtICp0aHJlc2hvbGQqOiBUaGUg
c2Vuc2l0aXZpdHkgb2YgdGhlIGVkZ2UgZGV0ZWN0aW9uLCB3aXRoIGxvd2Vy
IHZhbHVlcyBiZWluZyBtb3JlIHNlbnNpdGl2ZS4gUmFuZ2VzIGZyb20gMC4w
IHRvIDEuMCwgd2l0aCAwLjIgYXMgdGhlIGRlZmF1bHQKICAtICpxdWFudGl6
YXRpb25MZXZlbHMqOiBUaGUgbnVtYmVyIG9mIGNvbG9yIGxldmVscyB0byBy
ZXByZXNlbnQgaW4gdGhlIGZpbmFsIGltYWdlLiBEZWZhdWx0IGlzIDEwLjAK
Ci0gKipHUFVJbWFnZUVtYm9zc0ZpbHRlcioqOiBBcHBsaWVzIGFuIGVtYm9z
c2luZyBlZmZlY3Qgb24gdGhlIGltYWdlCiAgLSAqaW50ZW5zaXR5KjogVGhl
IHN0cmVuZ3RoIG9mIHRoZSBlbWJvc3NpbmcsIGZyb20gIDAuMCB0byA0LjAs
IHdpdGggMS4wIGFzIHRoZSBub3JtYWwgbGV2ZWwKCi0gKipHUFVJbWFnZVBv
c3Rlcml6ZUZpbHRlcioqOiBUaGlzIHJlZHVjZXMgdGhlIGNvbG9yIGR5bmFt
aWMgcmFuZ2UgaW50byB0aGUgbnVtYmVyIG9mIHN0ZXBzIHNwZWNpZmllZCwg
bGVhZGluZyB0byBhIGNhcnRvb24tbGlrZSBzaW1wbGUgc2hhZGluZyBvZiB0
aGUgaW1hZ2UuCiAgLSAqY29sb3JMZXZlbHMqOiBUaGUgbnVtYmVyIG9mIGNv
bG9yIGxldmVscyB0byByZWR1Y2UgdGhlIGltYWdlIHNwYWNlIHRvLiBUaGlz
IHJhbmdlcyBmcm9tIDEgdG8gMjU2LCB3aXRoIGEgZGVmYXVsdCBvZiAxMC4K
Ci0gKipHUFVJbWFnZVN3aXJsRmlsdGVyKio6IENyZWF0ZXMgYSBzd2lybCBk
aXN0b3J0aW9uIG9uIHRoZSBpbWFnZQogIC0gKnJhZGl1cyo6IFRoZSByYWRp
dXMgZnJvbSB0aGUgY2VudGVyIHRvIGFwcGx5IHRoZSBkaXN0b3J0aW9uLCB3
aXRoIGEgZGVmYXVsdCBvZiAwLjUKICAtICpjZW50ZXIqOiBUaGUgY2VudGVy
IG9mIHRoZSBpbWFnZSAoaW4gbm9ybWFsaXplZCBjb29yZGluYXRlcyBmcm9t
IDAgLSAxLjApIGFib3V0IHdoaWNoIHRvIHR3aXN0LCB3aXRoIGEgZGVmYXVs
dCBvZiAoMC41LCAwLjUpCiAgLSAqYW5nbGUqOiBUaGUgYW1vdW50IG9mIHR3
aXN0IHRvIGFwcGx5IHRvIHRoZSBpbWFnZSwgd2l0aCBhIGRlZmF1bHQgb2Yg
MS4wCgotICoqR1BVSW1hZ2VCdWxnZURpc3RvcnRpb25GaWx0ZXIqKjogQ3Jl
YXRlcyBhIGJ1bGdlIGRpc3RvcnRpb24gb24gdGhlIGltYWdlCiAgLSAqcmFk
aXVzKjogVGhlIHJhZGl1cyBmcm9tIHRoZSBjZW50ZXIgdG8gYXBwbHkgdGhl
IGRpc3RvcnRpb24sIHdpdGggYSBkZWZhdWx0IG9mIDAuMjUKICAtICpjZW50
ZXIqOiBUaGUgY2VudGVyIG9mIHRoZSBpbWFnZSAoaW4gbm9ybWFsaXplZCBj
b29yZGluYXRlcyBmcm9tIDAgLSAxLjApIGFib3V0IHdoaWNoIHRvIGRpc3Rv
cnQsIHdpdGggYSBkZWZhdWx0IG9mICgwLjUsIDAuNSkKICAtICpzY2FsZSo6
IFRoZSBhbW91bnQgb2YgZGlzdG9ydGlvbiB0byBhcHBseSwgZnJvbSAtMS4w
IHRvIDEuMCwgd2l0aCBhIGRlZmF1bHQgb2YgMC41CgotICoqR1BVSW1hZ2VQ
aW5jaERpc3RvcnRpb25GaWx0ZXIqKjogQ3JlYXRlcyBhIHBpbmNoIGRpc3Rv
cnRpb24gb2YgdGhlIGltYWdlCiAgLSAqcmFkaXVzKjogVGhlIHJhZGl1cyBm
cm9tIHRoZSBjZW50ZXIgdG8gYXBwbHkgdGhlIGRpc3RvcnRpb24sIHdpdGgg
YSBkZWZhdWx0IG9mIDEuMAogIC0gKmNlbnRlcio6IFRoZSBjZW50ZXIgb2Yg
dGhlIGltYWdlIChpbiBub3JtYWxpemVkIGNvb3JkaW5hdGVzIGZyb20gMCAt
IDEuMCkgYWJvdXQgd2hpY2ggdG8gZGlzdG9ydCwgd2l0aCBhIGRlZmF1bHQg
b2YgKDAuNSwgMC41KQogIC0gKnNjYWxlKjogVGhlIGFtb3VudCBvZiBkaXN0
b3J0aW9uIHRvIGFwcGx5LCBmcm9tIC0yLjAgdG8gMi4wLCB3aXRoIGEgZGVm
YXVsdCBvZiAxLjAKCi0gKipHUFVJbWFnZVN0cmV0Y2hEaXN0b3J0aW9uRmls
dGVyKio6IENyZWF0ZXMgYSBzdHJldGNoIGRpc3RvcnRpb24gb2YgdGhlIGlt
YWdlCiAgLSAqY2VudGVyKjogVGhlIGNlbnRlciBvZiB0aGUgaW1hZ2UgKGlu
IG5vcm1hbGl6ZWQgY29vcmRpbmF0ZXMgZnJvbSAwIC0gMS4wKSBhYm91dCB3
aGljaCB0byBkaXN0b3J0LCB3aXRoIGEgZGVmYXVsdCBvZiAoMC41LCAwLjUp
CgotICoqR1BVSW1hZ2VTcGhlcmVSZWZyYWN0aW9uRmlsdGVyKio6IFNpbXVs
YXRlcyB0aGUgcmVmcmFjdGlvbiB0aHJvdWdoIGEgZ2xhc3Mgc3BoZXJlCiAg
LSAqY2VudGVyKjogVGhlIGNlbnRlciBhYm91dCB3aGljaCB0byBhcHBseSB0
aGUgZGlzdG9ydGlvbiwgd2l0aCBhIGRlZmF1bHQgb2YgKDAuNSwgMC41KQog
IC0gKnJhZGl1cyo6IFRoZSByYWRpdXMgb2YgdGhlIGRpc3RvcnRpb24sIHJh
bmdpbmcgZnJvbSAwLjAgdG8gMS4wLCB3aXRoIGEgZGVmYXVsdCBvZiAwLjI1
CiAgLSAqcmVmcmFjdGl2ZUluZGV4KjogVGhlIGluZGV4IG9mIHJlZnJhY3Rp
b24gZm9yIHRoZSBzcGhlcmUsIHdpdGggYSBkZWZhdWx0IG9mIDAuNzEKCi0g
KipHUFVJbWFnZUdsYXNzU3BoZXJlRmlsdGVyKio6IFNhbWUgYXMgdGhlIEdQ
VUltYWdlU3BoZXJlUmVmcmFjdGlvbkZpbHRlciwgb25seSB0aGUgaW1hZ2Ug
aXMgbm90IGludmVydGVkIGFuZCB0aGVyZSdzIGEgbGl0dGxlIGJpdCBvZiBm
cm9zdGluZyBhdCB0aGUgZWRnZXMgb2YgdGhlIGdsYXNzCiAgLSAqY2VudGVy
KjogVGhlIGNlbnRlciBhYm91dCB3aGljaCB0byBhcHBseSB0aGUgZGlzdG9y
dGlvbiwgd2l0aCBhIGRlZmF1bHQgb2YgKDAuNSwgMC41KQogIC0gKnJhZGl1
cyo6IFRoZSByYWRpdXMgb2YgdGhlIGRpc3RvcnRpb24sIHJhbmdpbmcgZnJv
bSAwLjAgdG8gMS4wLCB3aXRoIGEgZGVmYXVsdCBvZiAwLjI1CiAgLSAqcmVm
cmFjdGl2ZUluZGV4KjogVGhlIGluZGV4IG9mIHJlZnJhY3Rpb24gZm9yIHRo
ZSBzcGhlcmUsIHdpdGggYSBkZWZhdWx0IG9mIDAuNzEKCi0gKipHUFVJbWFn
ZVZpZ25ldHRlRmlsdGVyKio6IFBlcmZvcm1zIGEgdmlnbmV0dGluZyBlZmZl
Y3QsIGZhZGluZyBvdXQgdGhlIGltYWdlIGF0IHRoZSBlZGdlcwogIC0gKnZp
Z25ldHRlQ2VudGVyKjogVGhlIGNlbnRlciBmb3IgdGhlIHZpZ25ldHRlIGlu
IHRleCBjb29yZHMgKENHUG9pbnQpLCB3aXRoIGEgZGVmYXVsdCBvZiAwLjUs
IDAuNQogIC0gKnZpZ25ldHRlQ29sb3IqOiBUaGUgY29sb3IgdG8gdXNlIGZv
ciB0aGUgdmlnbmV0dGUgKEdQVVZlY3RvcjMpLCB3aXRoIGEgZGVmYXVsdCBv
ZiBibGFjawogIC0gKnZpZ25ldHRlU3RhcnQqOiBUaGUgbm9ybWFsaXplZCBk
aXN0YW5jZSBmcm9tIHRoZSBjZW50ZXIgd2hlcmUgdGhlIHZpZ25ldHRlIGVm
ZmVjdCBzdGFydHMsIHdpdGggYSBkZWZhdWx0IG9mIDAuNQogIC0gKnZpZ25l
dHRlRW5kKjogVGhlIG5vcm1hbGl6ZWQgZGlzdGFuY2UgZnJvbSB0aGUgY2Vu
dGVyIHdoZXJlIHRoZSB2aWduZXR0ZSBlZmZlY3QgZW5kcywgd2l0aCBhIGRl
ZmF1bHQgb2YgMC43NQoKLSAqKkdQVUltYWdlS3V3YWhhcmFGaWx0ZXIqKjog
S3V3YWhhcmEgaW1hZ2UgYWJzdHJhY3Rpb24sIGRyYXduIGZyb20gdGhlIHdv
cmsgb2YgS3lwcmlhbmlkaXMsIGV0LiBhbC4gaW4gdGhlaXIgcHVibGljYXRp
b24gIkFuaXNvdHJvcGljIEt1d2FoYXJhIEZpbHRlcmluZyBvbiB0aGUgR1BV
IiB3aXRoaW4gdGhlIEdQVSBQcm8gY29sbGVjdGlvbi4gVGhpcyBwcm9kdWNl
cyBhbiBvaWwtcGFpbnRpbmctbGlrZSBpbWFnZSwgYnV0IGl0IGlzIGV4dHJl
bWVseSBjb21wdXRhdGlvbmFsbHkgZXhwZW5zaXZlLCBzbyBpdCBjYW4gdGFr
ZSBzZWNvbmRzIHRvIHJlbmRlciBhIGZyYW1lIG9uIGFuIGlQYWQgMi4gVGhp
cyBtaWdodCBiZSBiZXN0IHVzZWQgZm9yIHN0aWxsIGltYWdlcy4KICAtICpy
YWRpdXMqOiBJbiBpbnRlZ2VyIHNwZWNpZnlpbmcgdGhlIG51bWJlciBvZiBw
aXhlbHMgb3V0IGZyb20gdGhlIGNlbnRlciBwaXhlbCB0byB0ZXN0IHdoZW4g
YXBwbHlpbmcgdGhlIGZpbHRlciwgd2l0aCBhIGRlZmF1bHQgb2YgNC4gQSBo
aWdoZXIgdmFsdWUgY3JlYXRlcyBhIG1vcmUgYWJzdHJhY3RlZCBpbWFnZSwg
YnV0IGF0IHRoZSBjb3N0IG9mIG11Y2ggZ3JlYXRlciBwcm9jZXNzaW5nIHRp
bWUuCgotICoqR1BVSW1hZ2VLdXdhaGFyYVJhZGl1czNGaWx0ZXIqKjogQSBt
b2RpZmllZCB2ZXJzaW9uIG9mIHRoZSBLdXdhaGFyYSBmaWx0ZXIsIG9wdGlt
aXplZCB0byB3b3JrIG92ZXIganVzdCBhIHJhZGl1cyBvZiB0aHJlZSBwaXhl
bHMKCi0gKipHUFVJbWFnZVBlcmxpbk5vaXNlRmlsdGVyKio6IEdlbmVyYXRl
cyBhbiBpbWFnZSBmdWxsIG9mIFBlcmxpbiBub2lzZQogIC0gKmNvbG9yU3Rh
cnQqOgogIC0gKmNvbG9yRmluaXNoKjogVGhlIGNvbG9yIHJhbmdlIGZvciB0
aGUgbm9pc2UgYmVpbmcgZ2VuZXJhdGVkCiAgLSAqc2NhbGUqOiBUaGUgc2Nh
bGluZyBvZiB0aGUgbm9pc2UgYmVpbmcgZ2VuZXJhdGVkCgotICoqR1BVSW1h
Z2VDR0FDb2xvcnNwYWNlRmlsdGVyKio6IFNpbXVsYXRlcyB0aGUgY29sb3Jz
cGFjZSBvZiBhIENHQSBtb25pdG9yCgotICoqR1BVSW1hZ2VNb3NhaWNGaWx0
ZXIqKjogVGhpcyBmaWx0ZXIgdGFrZXMgYW4gaW5wdXQgdGlsZXNldCwgdGhl
IHRpbGVzIG11c3QgYXNjZW5kIGluIGx1bWluYW5jZS4gSXQgbG9va3MgYXQg
dGhlIGlucHV0IGltYWdlIGFuZCByZXBsYWNlcyBlYWNoIGRpc3BsYXkgdGls
ZSB3aXRoIGFuIGlucHV0IHRpbGUgYWNjb3JkaW5nIHRvIHRoZSBsdW1pbmFu
Y2Ugb2YgdGhhdCB0aWxlLiAgVGhlIGlkZWEgd2FzIHRvIHJlcGxpY2F0ZSB0
aGUgQVNDSUkgdmlkZW8gZmlsdGVycyBzZWVuIGluIG90aGVyIGFwcHMsIGJ1
dCB0aGUgdGlsZXNldCBjYW4gYmUgYW55dGhpbmcuCiAgLSAqaW5wdXRUaWxl
U2l6ZSo6CiAgLSAqbnVtVGlsZXMqOiAKICAtICpkaXNwbGF5VGlsZVNpemUq
OgogIC0gKmNvbG9yT24qOgoKLSAqKkdQVUltYWdlSkZBVm9yb25vaUZpbHRl
cioqOiBHZW5lcmF0ZXMgYSBWb3Jvbm9pIG1hcCwgZm9yIHVzZSBpbiBhIGxh
dGVyIHN0YWdlLgogIC0gKnNpemVJblBpeGVscyo6IFNpemUgb2YgdGhlIGlu
ZGl2aWR1YWwgZWxlbWVudHMKCi0gKipHUFVJbWFnZVZvcm9ub2lDb25zdW1l
ckZpbHRlcioqOiBUYWtlcyBpbiB0aGUgVm9yb25vaSBtYXAsIGFuZCB1c2Vz
IHRoYXQgdG8gZmlsdGVyIGFuIGluY29taW5nIGltYWdlLgogIC0gKnNpemVJ
blBpeGVscyo6IFNpemUgb2YgdGhlIGluZGl2aWR1YWwgZWxlbWVudHMKCllv
dSBjYW4gYWxzbyBlYXNpbHkgd3JpdGUgeW91ciBvd24gY3VzdG9tIGZpbHRl
cnMgdXNpbmcgdGhlIEMtbGlrZSBPcGVuR0wgU2hhZGluZyBMYW5ndWFnZSwg
YXMgZGVzY3JpYmVkIGFib3ZlLgoKIyMgU2FtcGxlIGFwcGxpY2F0aW9ucyAj
IwoKU2V2ZXJhbCBzYW1wbGUgYXBwbGljYXRpb25zIGFyZSBidW5kbGVkIHdp
dGggdGhlIGZyYW1ld29yayBzb3VyY2UuIE1vc3QgYXJlIGNvbXBhdGlibGUg
d2l0aCBib3RoIGlQaG9uZSBhbmQgaVBhZC1jbGFzcyBkZXZpY2VzLiBUaGV5
IGF0dGVtcHQgdG8gc2hvdyBvZmYgdmFyaW91cyBhc3BlY3RzIG9mIHRoZSBm
cmFtZXdvcmsgYW5kIHNob3VsZCBiZSB1c2VkIGFzIHRoZSBiZXN0IGV4YW1w
bGVzIG9mIHRoZSBBUEkgd2hpbGUgdGhlIGZyYW1ld29yayBpcyB1bmRlciBk
ZXZlbG9wbWVudC4gVGhlc2UgaW5jbHVkZToKCiMjIyBTaW1wbGVJbWFnZUZp
bHRlciAjIyMKCkEgYnVuZGxlZCBKUEVHIGltYWdlIGlzIGxvYWRlZCBpbnRv
IHRoZSBhcHBsaWNhdGlvbiBhdCBsYXVuY2gsIGEgZmlsdGVyIGlzIGFwcGxp
ZWQgdG8gaXQsIGFuZCB0aGUgcmVzdWx0IHJlbmRlcmVkIHRvIHRoZSBzY3Jl
ZW4uIEFkZGl0aW9uYWxseSwgdGhpcyBzYW1wbGUgc2hvd3MgdHdvIHdheXMg
b2YgdGFraW5nIGluIGFuIGltYWdlLCBmaWx0ZXJpbmcgaXQsIGFuZCBzYXZp
bmcgaXQgdG8gZGlzay4KCiMjIyBTaW1wbGVWaWRlb0ZpbHRlciAjIyMKCkEg
cGl4ZWxsYXRlIGZpbHRlciBpcyBhcHBsaWVkIHRvIGEgbGl2ZSB2aWRlbyBz
dHJlYW0sIHdpdGggYSBVSVNsaWRlciBjb250cm9sIHRoYXQgbGV0cyB5b3Ug
YWRqdXN0IHRoZSBwaXhlbCBzaXplIG9uIHRoZSBsaXZlIHZpZGVvLgoKIyMj
IFNpbXBsZVZpZGVvRmlsZUZpbHRlciAjIyMKCkEgbW92aWUgZmlsZSBpcyBs
b2FkZWQgZnJvbSBkaXNrLCBhbiB1bnNoYXJwIG1hc2sgZmlsdGVyIGlzIGFw
cGxpZWQgdG8gaXQsIGFuZCB0aGUgZmlsdGVyZWQgcmVzdWx0IGlzIHJlLWVu
Y29kZWQgYXMgYW5vdGhlciBtb3ZpZS4KCiMjIyBNdWx0aVZpZXdGaWx0ZXJF
eGFtcGxlICMjIwoKRnJvbSBhIHNpbmdsZSBjYW1lcmEgZmVlZCwgZm91ciB2
aWV3cyBhcmUgcG9wdWxhdGVkIHdpdGggcmVhbHRpbWUgZmlsdGVycyBhcHBs
aWVkIHRvIGNhbWVyYS4gT25lIGlzIGp1c3QgdGhlIHN0cmFpZ2h0IGNhbWVy
YSB2aWRlbywgb25lIGlzIGEgcHJlcHJvZ3JhbW1lZCBzZXBpYSB0b25lLCBh
bmQgdHdvIGFyZSBjdXN0b20gZmlsdGVycyBiYXNlZCBvbiBzaGFkZXIgcHJv
Z3JhbXMuCgojIyMgRmlsdGVyU2hvd2Nhc2UgIyMjCgpUaGlzIGRlbW9uc3Ry
YXRlcyBldmVyeSBmaWx0ZXIgc3VwcGxpZWQgd2l0aCBHUFVJbWFnZS4KCiMj
IyBCZW5jaG1hcmtTdWl0ZSAjIyMKClRoaXMgaXMgdXNlZCB0byB0ZXN0IHRo
ZSBwZXJmb3JtYW5jZSBvZiB0aGUgb3ZlcmFsbCBmcmFtZXdvcmsgYnkgdGVz
dGluZyBpdCBhZ2FpbnN0IENQVS1ib3VuZCByb3V0aW5lcyBhbmQgQ29yZSBJ
bWFnZS4gQmVuY2htYXJrcyBpbnZvbHZpbmcgc3RpbGwgaW1hZ2VzIGFuZCB2
aWRlbyBhcmUgcnVuIGFnYWluc3QgYWxsIHRocmVlLCB3aXRoIHJlc3VsdHMg
ZGlzcGxheWVkIGluLWFwcGxpY2F0aW9uLgoKIyMjIEN1YmVFeGFtcGxlICMj
IwoKVGhpcyBkZW1vbnN0cmF0ZXMgdGhlIGFiaWxpdHkgb2YgR1BVSW1hZ2Ug
dG8gaW50ZXJhY3Qgd2l0aCBPcGVuR0wgRVMgcmVuZGVyaW5nLiBGcmFtZXMg
YXJlIGNhcHR1cmVkIGZyb20gdGhlIGNhbWVyYSwgYSBzZXBpYSBmaWx0ZXIg
YXBwbGllZCB0byB0aGVtLCBhbmQgdGhlbiB0aGV5IGFyZSBmZWQgaW50byBh
IHRleHR1cmUgdG8gYmUgYXBwbGllZCB0byB0aGUgZmFjZSBvZiBhIGN1YmUg
eW91IGNhbiByb3RhdGUgd2l0aCB5b3VyIGZpbmdlci4gVGhpcyBjdWJlIGlu
IHR1cm4gaXMgcmVuZGVyZWQgdG8gYSB0ZXh0dXJlLWJhY2tlZCBmcmFtZWJ1
ZmZlciBvYmplY3QsIGFuZCB0aGF0IHRleHR1cmUgaXMgZmVkIGJhY2sgaW50
byBHUFVJbWFnZSB0byBoYXZlIGEgcGl4ZWxsYXRpb24gZmlsdGVyIGFwcGxp
ZWQgdG8gaXQgYmVmb3JlIHJlbmRlcmluZyB0byBzY3JlZW4uCgpJbiBvdGhl
ciB3b3JkcywgdGhlIHBhdGggb2YgdGhpcyBhcHBsaWNhdGlvbiBpcyBjYW1l
cmEgLT4gc2VwaWEgdG9uZSBmaWx0ZXIgLT4gY3ViZSAtPiBwaXhlbGxhdGlv
biBmaWx0ZXIgLT4gZGlzcGxheS4KCiMjIyBDb2xvck9iamVjdFRyYWNraW5n
ICMjIwoKQSB2ZXJzaW9uIG9mIG15IENvbG9yVHJhY2tpbmcgZXhhbXBsZSBm
cm9tIGh0dHA6Ly93d3cuc3Vuc2V0bGFrZXNvZnR3YXJlLmNvbS8yMDEwLzEw
LzIyL2dwdS1hY2NlbGVyYXRlZC12aWRlby1wcm9jZXNzaW5nLW1hYy1hbmQt
aW9zIHBvcnRlZCBhY3Jvc3MgdG8gdXNlIEdQVUltYWdlLCB0aGlzIGFwcGxp
Y2F0aW9uIHVzZXMgY29sb3IgaW4gYSBzY2VuZSB0byB0cmFjayBvYmplY3Rz
IGZyb20gYSBsaXZlIGNhbWVyYSBmZWVkLiBUaGUgZm91ciB2aWV3cyB5b3Ug
Y2FuIHN3aXRjaCBiZXR3ZWVuIGluY2x1ZGUgdGhlIHJhdyBjYW1lcmEgZmVl
ZCwgdGhlIGNhbWVyYSBmZWVkIHdpdGggcGl4ZWxzIG1hdGNoaW5nIHRoZSBj
b2xvciB0aHJlc2hvbGQgaW4gd2hpdGUsIHRoZSBwcm9jZXNzZWQgdmlkZW8g
d2hlcmUgcG9zaXRpb25zIGFyZSBlbmNvZGVkIGFzIGNvbG9ycyB3aXRoaW4g
dGhlIHBpeGVscyBwYXNzaW5nIHRoZSB0aHJlc2hvbGQgdGVzdCwgYW5kIGZp
bmFsbHkgdGhlIGxpdmUgdmlkZW8gZmVlZCB3aXRoIGEgZG90IHRoYXQgdHJh
Y2tzIHRoZSBzZWxlY3RlZCBjb2xvci4gVGFwcGluZyB0aGUgc2NyZWVuIGNo
YW5nZXMgdGhlIGNvbG9yIHRvIHRyYWNrIHRvIG1hdGNoIHRoZSBjb2xvciBv
ZiB0aGUgcGl4ZWxzIHVuZGVyIHlvdXIgZmluZ2VyLiBUYXBwaW5nIGFuZCBk
cmFnZ2luZyBvbiB0aGUgc2NyZWVuIG1ha2VzIHRoZSBjb2xvciB0aHJlc2hv
bGQgbW9yZSBvciBsZXNzIGZvcmdpdmluZy4gVGhpcyBpcyBtb3N0IG9idmlv
dXMgb24gdGhlIHNlY29uZCwgY29sb3IgdGhyZXNob2xkaW5nIHZpZXcuCgpD
dXJyZW50bHksIGFsbCBwcm9jZXNzaW5nIGZvciB0aGUgY29sb3IgYXZlcmFn
aW5nIGluIHRoZSBsYXN0IHN0ZXAgaXMgZG9uZSBvbiB0aGUgQ1BVLCBzbyB0
aGlzIGlzIHBhcnQgaXMgZXh0cmVtZWx5IHNsb3cuCg==
",,18962,"DQpsYW5ndWFnZTogb2JqZWN0aXZlLWMNCg0KYmVmb3JlX2luc3RhbGw6DQog
ICAgLSBwb2QgLS12ZXJzaW9uDQogICAgLSBwb2Qgc2V0dXAgLS1zaWxlbnQN
CiAgICAtIHBvZCByZXBvIHVwZGF0ZSAtLXNpbGVudA0KDQpzY3JpcHQ6DQog
ICAgLSBwb2QgbGliIGxpbnQNCiAgICAtIHhjdG9vbCAtcHJvamVjdCBmcmFt
ZXdvcmsvR1BVSW1hZ2UueGNvZGVwcm9qIC1zY2hlbWUgJ0dQVUltYWdlJyAt
Y29uZmlndXJhdGlvbiBSZWxlYXNlIC1zZGsgaXBob25lc2ltdWxhdG9yIC1h
cmNoIGkzODYgYnVpbGQNCiAgICAtIHhjdG9vbCAtcHJvamVjdCBmcmFtZXdv
cmsvR1BVSW1hZ2VNYWMueGNvZGVwcm9qIC1zY2hlbWUgJ0dQVUltYWdlJw0K
ICAgIC0geGN0b29sIC1wcm9qZWN0IGV4YW1wbGVzL01hYy9GaWx0ZXJTaG93
Y2FzZS9GaWx0ZXJTaG93Y2FzZS54Y29kZXByb2ogLXNjaGVtZSAnRmlsdGVy
U2hvd2Nhc2UnDQogICAgLSB4Y3Rvb2wgLXByb2plY3QgZXhhbXBsZXMvTWFj
L011bHRpVmlld0ZpbHRlckV4YW1wbGUvTXVsdGlWaWV3RmlsdGVyRXhhbXBs
ZS54Y29kZXByb2ogLXNjaGVtZSAnTXVsdGlWaWV3RmlsdGVyRXhhbXBsZScN
CiAgICAtIHhjdG9vbCAtcHJvamVjdCBleGFtcGxlcy9NYWMvU2ltcGxlUGhv
dG9GaWx0ZXIvU2ltcGxlUGhvdG9GaWx0ZXIueGNvZGVwcm9qIC1zY2hlbWUg
J1NpbXBsZVBob3RvRmlsdGVyJw0KICAgIC0geGN0b29sIC1wcm9qZWN0IGV4
YW1wbGVzL2lPUy9CZW5jaG1hcmtTdWl0ZS9CZW5jaG1hcmtTdWl0ZS54Y29k
ZXByb2ogLXNjaGVtZSAnQmVuY2htYXJrU3VpdGUnIC1jb25maWd1cmF0aW9u
IFJlbGVhc2UgLXNkayBpcGhvbmVzaW11bGF0b3IgLWFyY2ggaTM4NiBidWls
ZA0KICAgIC0geGN0b29sIC1wcm9qZWN0IGV4YW1wbGVzL2lPUy9Db2xvck9i
amVjdFRyYWNraW5nL0NvbG9yT2JqZWN0VHJhY2tpbmcueGNvZGVwcm9qIC1z
Y2hlbWUgJ0NvbG9yT2JqZWN0VHJhY2tpbmcnIC1jb25maWd1cmF0aW9uIFJl
bGVhc2UgLXNkayBpcGhvbmVzaW11bGF0b3IgLWFyY2ggaTM4NiBidWlsZA0K
ICAgIC0geGN0b29sIC1wcm9qZWN0IGV4YW1wbGVzL2lPUy9DdWJlRXhhbXBs
ZS9DdWJlRXhhbXBsZS54Y29kZXByb2ogLXNjaGVtZSAnQ3ViZUV4YW1wbGUn
IC1jb25maWd1cmF0aW9uIFJlbGVhc2UgLXNkayBpcGhvbmVzaW11bGF0b3Ig
LWFyY2ggaTM4NiBidWlsZA0KICAgIC0geGN0b29sIC1wcm9qZWN0IGV4YW1w
bGVzL2lPUy9GZWF0dXJlRXh0cmFjdGlvblRlc3QvRmVhdHVyZUV4dHJhY3Rp
b25UZXN0Lnhjb2RlcHJvaiAtc2NoZW1lICdGZWF0dXJlRXh0cmFjdGlvblRl
c3QnIC1jb25maWd1cmF0aW9uIFJlbGVhc2UgLXNkayBpcGhvbmVzaW11bGF0
b3IgLWFyY2ggaTM4NiBidWlsZA0KICAgIC0geGN0b29sIC1wcm9qZWN0IGV4
YW1wbGVzL2lPUy9GaWx0ZXJTaG93Y2FzZS9GaWx0ZXJTaG93Y2FzZS54Y29k
ZXByb2ogLXNjaGVtZSAnRmlsdGVyU2hvd2Nhc2UnIC1jb25maWd1cmF0aW9u
IFJlbGVhc2UgLXNkayBpcGhvbmVzaW11bGF0b3IgLWFyY2ggaTM4NiBidWls
ZA0KICAgIC0geGN0b29sIC1wcm9qZWN0IGV4YW1wbGVzL2lPUy9NdWx0aVZp
ZXdGaWx0ZXJFeGFtcGxlL011bHRpVmlld0ZpbHRlckV4YW1wbGUueGNvZGVw
cm9qIC1zY2hlbWUgJ011bHRpVmlld0ZpbHRlckV4YW1wbGUnIC1jb25maWd1
cmF0aW9uIFJlbGVhc2UgLXNkayBpcGhvbmVzaW11bGF0b3IgLWFyY2ggaTM4
NiBidWlsZA0KICAgIC0geGN0b29sIC1wcm9qZWN0IGV4YW1wbGVzL2lPUy9S
YXdEYXRhVGVzdC9SYXdEYXRhVGVzdC54Y29kZXByb2ogLXNjaGVtZSAnUmF3
RGF0YVRlc3QnIC1jb25maWd1cmF0aW9uIFJlbGVhc2UgLXNkayBpcGhvbmVz
aW11bGF0b3IgLWFyY2ggaTM4NiBidWlsZA0KICAgIC0geGN0b29sIC1wcm9q
ZWN0IGV4YW1wbGVzL2lPUy9TaW1wbGVJbWFnZUZpbHRlci9TaW1wbGVJbWFn
ZUZpbHRlci54Y29kZXByb2ogLXNjaGVtZSAnU2ltcGxlSW1hZ2VGaWx0ZXIn
IC1jb25maWd1cmF0aW9uIFJlbGVhc2UgLXNkayBpcGhvbmVzaW11bGF0b3Ig
LWFyY2ggaTM4NiBidWlsZA0KICAgIC0geGN0b29sIC1wcm9qZWN0IGV4YW1w
bGVzL2lPUy9TaW1wbGVQaG90b0ZpbHRlci9TaW1wbGVQaG90b0ZpbHRlci54
Y29kZXByb2ogLXNjaGVtZSAnU2ltcGxlUGhvdG9GaWx0ZXInIC1jb25maWd1
cmF0aW9uIFJlbGVhc2UgLXNkayBpcGhvbmVzaW11bGF0b3IgLWFyY2ggaTM4
NiBidWlsZA0KICAgIC0geGN0b29sIC1wcm9qZWN0IGV4YW1wbGVzL2lPUy9T
aW1wbGVWaWRlb0ZpbGVGaWx0ZXIvU2ltcGxlVmlkZW9GaWxlRmlsdGVyLnhj
b2RlcHJvaiAtc2NoZW1lICdTaW1wbGVWaWRlb0ZpbGVGaWx0ZXInIC1jb25m
aWd1cmF0aW9uIFJlbGVhc2UgLXNkayBpcGhvbmVzaW11bGF0b3IgLWFyY2gg
aTM4NiBidWlsZA0KICAgIC0geGN0b29sIC1wcm9qZWN0IGV4YW1wbGVzL2lP
Uy9TaW1wbGVWaWRlb0ZpbHRlci9TaW1wbGVWaWRlb0ZpbHRlci54Y29kZXBy
b2ogLXNjaGVtZSAnU2ltcGxlVmlkZW9GaWx0ZXInIC1jb25maWd1cmF0aW9u
IFJlbGVhc2UgLXNkayBpcGhvbmVzaW11bGF0b3IgLWFyY2ggaTM4NiBidWls
ZA0K
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'new-pac',54544023,b'\xe7\xa7\x91\xe5\xad\xa6/\xe8\x87\xaa\xe7\x94\xb1\xe4\xb8\x8a\xe7\xbd\x91\xef\xbc\x8c\xe5\x85\x8d\xe8\xb4\xb9ss/ssr/v2ray/goflyway\xe8\xb4\xa6\xe5\x8f\xb7\xef\xbc\x8c\xe6\x90\xad\xe5\xbb\xba\xe6\x95\x99\xe7\xa8\x8b',,85,18960,,1199,False,b'https://api.github.com/repos/Alvin9999/new-pac/forks',"Cgroh6rnlLHkuIrnvZHmlrnms5UKPGxpPiBodHRwczovL2dpdGh1Yi5jb20v
QWx2aW45OTk5L25ldy1wYWMvd2lraQoKCg==
",,18960,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
