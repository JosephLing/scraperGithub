name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'WSL',55626935,b'Issues found on WSL',,794,8478,,548,False,b'https://api.github.com/repos/microsoft/WSL/forks',"VGhpcyByZXBvIGlzIGZvciB0aGUgcmVwb3J0aW5nIG9mIGlzc3VlcyBmb3Vu
ZCB3aXRoaW4gYW5kIHdoZW4gdXNpbmcgV2luZG93cyBTdWJzeXN0ZW0gZm9y
IExpbnV4LiBQbGVhc2UgcmVhZCBbQ09OVFJJQlVUSU5HLm1kXShodHRwczov
L2dpdGh1Yi5jb20vTWljcm9zb2Z0L1dTTC9ibG9iL21hc3Rlci9DT05UUklC
VVRJTkcubWQpIGJlZm9yZSBtYWtpbmcgYW4gaXNzdWUgc3VibWlzc2lvbi4g
CgotIERvIG5vdCBvcGVuIEdpdGh1YiBpc3N1ZXMgZm9yIFdpbmRvd3MgY3Jh
c2hlcyAoQlNPRHMpIG9yIHNlY3VyaXR5IGlzc3Vlcy4gUGxlYXNlIGRpcmVj
dCBhbGwgV2luZG93cyBjcmFzaGVzIGFuZCBzZWN1cml0eSBpc3N1ZXMgdG8g
c2VjdXJlQG1pY3Jvc29mdC5jb20uIElzc3VlcyB3aXRoIHNlY3VyaXR5IHZ1
bG5lcmFiaWxpdGllcyBtYXkgYmUgZWRpdGVkIHRvIGhpZGUgdGhlIHZ1bG5l
cmFiaWxpdHkgZGV0YWlscy4KCiMjIFJlcG9ydGluZyBpc3N1ZXMgaW4gV2lu
ZG93cyBDb25zb2xlIG9yIFdTTCB0ZXh0IHJlbmRlcmluZy91c2VyIGV4cGVy
aWVuY2UKTm90ZSB0aGF0IFdTTCBkaXN0cm8ncyBsYXVuY2ggaW4gdGhlIFdp
bmRvd3MgQ29uc29sZSAodW5sZXNzIHlvdSBoYXZlIHRha2VuIHN0ZXBzIHRv
IGxhdW5jaCBhIDNyZCBwYXJ0eSBjb25zb2xlL3Rlcm1pbmFsKS4gVGhlcmVm
b3JlLCAqcGxlYXNlIGZpbGUgVUkvVVggcmVsYXRlZCBpc3N1ZXMgaW4gdGhl
IFtXaW5kb3dzIENvbnNvbGUgaXNzdWUgdHJhY2tlcl0oaHR0cHM6Ly9naXRo
dWIuY29tL21pY3Jvc29mdC9jb25zb2xlKSouIAoKIyMgTGFiZWxzOgoKVGhp
cyBpcyB5b3VyIGJlc3Qgd2F5cyB0byBpbnRlcmFjdCBkaXJlY3RseSB3aXRo
IHRoZSBXaW5kb3dzIFN1YnN5c3RlbSBmb3IgTGludXggdGVhbXMuIFdlIHdp
bGwgYmUgbW9uaXRvcmluZyBhbmQgcmVzcG9uZGluZyB0byBpc3N1ZXMgYXMg
YmVzdCB3ZSBjYW4uIFBsZWFzZSBhdHRlbXB0IHRvIGF2b2lkIGZpbGluZyBk
dXBsaWNhdGVzIG9mIG9wZW4gb3IgY2xvc2VkIGl0ZW1zIHdoZW4gcG9zc2li
bGUuIElzc3VlcyBtYXkgYmUgdGFnZ2VkIHdpdGggd2l0aCB0aGUgZm9sbG93
aW5nIGxhYmVsczoKCi0gKipidWcqKiDigJMgVGhlIGlzc3VlIGNvbnNpZGVy
ZWQgdG8gYmUgYSBidWcgaW50ZXJuYWxseSBieSB0aGUgZGV2IHRlYW0uIFRo
aXMgdGFnIGlzIGdlbmVyYWxseSBmb3IgZ2FwcyBpbiBpbXBsZW1lbnRlZCAo
cmVhZDogaW50ZW5kZWQgdG8gYmUgd29ya2luZykgV1NMIGJlaGF2aW9yLiBU
aGluZ3MgbWFya2VkIHdpdGggKipidWcqKiBoYXZlIGEgY29ycmVzcG9uZGlu
ZyBidWcgaW4gb24gTWljcm9zb2Z04oCZcyBpbnRlcm5hbCBidWcgdHJhY2tp
bmcgc3lzdGVtLiBFeGFtcGxlOiAiZHUgLWggcmVwb3J0cyB3cm9uZyBmaWxl
IHNpemUgb24gRHJ2RnMiIFsoIzE4OTQpXShodHRwczovL2dpdGh1Yi5jb20v
bWljcm9zb2Z0L1dTTC9pc3N1ZXMvMTg5NCkKCi0gKipmZWF0dXJlKiog4oCT
IERlbm90ZXMgc29tZXRoaW5nIHVuZGVyc3Rvb2QgYXMgbm90IHdvcmtpbmcg
YW5kIGlzIG5vdCB5ZXQgaW1wbGVtZW50ZWQuIEV4YW1wbGU6ICJDdWRhIGNh
biBub3QgYmUgaW5zdGFsbGVkIiBbKCMzMjcpXShodHRwczovZ2l0aHViLmNv
bS9taWNyb3NvZnQvV1NML2lzc3Vlcy8zMjcpCgotICoqZml4aW5ib3VuZCoq
IC8gKipmaXhlZGluTk5OTioqIOKAkyBUaGUgYnVnIG9yIGZlYXR1cmUgcmVx
dWVzdCBvcmlnaW5hbGx5IHN1Ym1pdHRlZCBoYXMgYmVlbiBhZGRyZXNzZWQg
aW4gd2hvbGUgb3IgaW4gcGFydC4gUmVsYXRlZCBvciBvbmdvaW5nIGJ1ZyBv
ciBmZWF0dXJlIGdhcHMgc2hvdWxkIGJlIG9wZW5lZCBhcyBhIG5ldyBpc3N1
ZSBzdWJtaXNzaW9uIGlmIG9uZSBkb2VzIG5vdCBhbHJlYWR5IGV4aXN0LgoK
LSAqKmR1cGxpY2F0ZSoqIOKAkyBUaGUgc3VibWlzc2lvbiBpcyBzdWJzdGFu
dGlhbGx5IGR1cGxpY2F0aXZlIG9mIGFuIGV4aXN0aW5nIGlzc3VlLCBhbmQv
b3IgaGFzIHRoZSBzYW1lIHVuZGVybHlpbmcgY2F1c2UuCgotICoqbmVlZC1y
ZXBybyoqIOKAkyBUaGUgaXNzdWUgc3VibWlzc2lvbiBpcyBtaXNzaW5nIGZp
ZWxkcyBmcm9tIHRoZSBpc3N1ZSBbdGVtcGxhdGVdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9NaWNyb3NvZnQvV1NML2Jsb2IvbWFzdGVyL0lTU1VFX1RFTVBMQVRF
Lm1kKSwgY2Fubm90IGJlIHJlcHJvZHVjZWQgd2l0aCB0aGUgaW5mb3JtYXRp
b24gcHJvdmlkZWQsIG9yIGlzIG5vdCBhY3Rpb25hYmxlLgoKLSAqKmRpc2N1
c3Npb24qKiAvICoqcXVlc3Rpb24qKiDigJMgU3VibWlzc2lvbnMgd2hpY2gg
YXJlIG5vdCBhIGJ1ZyByZXBvcnQgb3IgZmVhdHVyZSByZXF1ZXN0LiBFeGFt
cGxlOiBXaW5kb3dzIFN1YnN5c3RlbSBmb3IgTGludXggaXMgbm90IG9wZW4g
c291cmNlIFsoIzE3OCldKGh0dHBzOi8vZ2l0aHViLmNvbS9NaWNyb3NvZnQv
V1NML2lzc3Vlcy8xNzgpCgotICoqYnlkZXNpZ24qKiAvICoqbGludXgtYmVo
YXZpb3IqKiDigJMgRGVub3RlcyB0aGF0IGFuIGlzc3VlIHRoYXQgaXMgY29u
c2lkZXJlZCB3b3JraW5nIGFzIGludGVuZGVkIG9yIHdvdWxkIGJlaGF2ZSBh
bmFsb2dvdXNseSBvbiBhIG5hdGl2ZSBMaW51eCBrZXJuZWwuCgotICoqY29u
c29sZSoqIOKAkyBUaGUgc3VibWlzc2lvbiBzaG91bGQgYmUgZGlyZWN0ZWQg
dG8gdGhlIFtjb25zb2xlIGlzc3VlIHRyYWNrZXJdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9taWNyb3NvZnQvY29uc29sZS9pc3N1ZXMpLgoKLSAqKmRvY3VtZW50
YXRpb24qKiDigJMgVGhlIHN1Ym1pc3Npb24gc2hvdWxkIGJlIGRpcmVjdGVk
IHRvIHRoZSBbV1NMIGRvY3VtZW50YXRpb24gaXNzdWUgdHJhY2tlcl0oaHR0
cHM6Ly9naXRodWIuY29tL01pY3Jvc29mdERvY3MvV1NMKS4KCi0gKip3c2wy
KiogLSBUaGUgaXNzdWUgcmVsYXRlcyBzcGVjaWZpY2FsbHkgdG8gV1NMIDIu
CgotICoqZml4ZWQtaW4td3NsMioqIC0gVGhlIGlzc3VlIGNvdWxkIGJlIHJl
c29sdmVkIGJ5IHN3aXRjaGluZyB0aGUgZGlzdHJvIHRvIHVzZSB0aGUgV1NM
IDIgYXJjaGl0ZWN0dXJlLgoKQWRkaXRpb25hbCB0YWdzIG1heSBiZSB1c2Vk
IHRvIGRlbm90ZSBzcGVjaWZpYyB0eXBlcyBvZiBpc3N1ZXMuCgojIyBDbG9z
aW5nOgoKSXNzdWVzIG1heSBiZSBjbG9zZWQgYnkgdGhlIG9yaWdpbmFsIHBv
c3RlciBhdCBhbnkgdGltZS4gIFdlIHdpbGwgY2xvc2UgaXNzdWVzIGlmOgot
IFRoZSBpc3N1ZSBpcyBub3QgYSBidWcgb3IgZmVhdHVyZSByZXF1ZXN0Ci0g
VGhlIGlzc3VlIGhhcyBiZWVuIGFkZHJlc3NlZAotIFRoZSBpc3N1ZSBpcyBh
IGR1cGxpY2F0ZSBvZiBhbm90aGVyIGlzc3VlCi0gRGlzY3Vzc2lvbnMgb3Ig
cXVlc3Rpb25zIHRoYXQgaGF2ZSByYW4gdGhlaXIgY291cnNlCgojIyMgTWlj
cm9zb2Z0IExpbmtzOgoKLSBbTWljcm9zb2Z0IERvY3NdKGh0dHBzOi8vZG9j
cy5taWNyb3NvZnQuY29tL2VuLXVzL3dpbmRvd3Mvd3NsL2Fib3V0KQotIFtS
ZWxlYXNlIE5vdGVzXShodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11
cy93aW5kb3dzL3dzbC9yZWxlYXNlLW5vdGVzKQotIFtXU0wgQmxvZ10oaHR0
cHM6Ly9ibG9ncy5tc2RuLm1pY3Jvc29mdC5jb20vd3NsKSAoSGlzdG9yaWNh
bCkKLSBbQ29tbWFuZCBMaW5lIEJsb2ddKGh0dHBzOi8vYmxvZ3MubXNkbi5t
aWNyb3NvZnQuY29tL2NvbW1hbmRsaW5lLykgKEFjdGl2ZSkKCiMjIyBDb21t
dW5pdHkgTGlua3M6CgotIFN0YWNrIE92ZXJmbG93OiBodHRwczovL3N0YWNr
b3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy90YWdnZWQvd3NsCi0gQXNrIFVidW50
dTogaHR0cHM6Ly9hc2t1YnVudHUuY29tL3F1ZXN0aW9ucy90YWdnZWQvd3Ns
Ci0gcmVkZGl0OiBodHRwczovL3d3dy5yZWRkaXQuY29tL3IvYmFzaG9udWJ1
bnR1b253aW5kb3dzCi0gTGlzdCBvZiBwcm9ncmFtcyB0aGF0IHdvcmsgYW5k
IGRvbid0IHdvcmsKICAgIC0gaHR0cHM6Ly9naXRodWIuY29tL2V0aGFuaHMv
V1NMLVByb2dyYW1zCiAgICAtIGh0dHBzOi8vZ2l0aHViLmNvbS9kYXZhdHJv
bjUwMDAvY2FuLWktc3Vic3lzdGVtLWl0Ci0gQXdlc29tZSBXU0w6IGh0dHBz
Oi8vZ2l0aHViLmNvbS9zaXJyZWRiZWFyZC9Bd2Vzb21lLVdTTAotIFRpcHMg
YW5kIGd1aWRlcyBmb3IgbmV3IGJhc2ggdXNlcnM6IGh0dHBzOi8vZ2l0aHVi
LmNvbS9hYmVyZ3MvdWJ1bnR1b253aW5kb3dzCgojIyMgVHJvdWJsZXNob290
aW5nOgoKQ29tbW9uIHRyb3VibGVzaG9vdGluZyBpc3N1ZXMgYW5kIHNvbHV0
aW9ucyBhcmUgYXZhaWxhYmxlIG9uIG91ciBbTVNETiBkb2N1bWVudGF0aW9u
XShodHRwczovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9jb21tYW5kbGlu
ZS93c2wvdHJvdWJsZXNob290aW5nKS4K
",,8478,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'caffe2',38066334,"b'Caffe2 is a lightweight, modular, and scalable deep learning framework.'",b'Shell',580,8476,,552,False,b'https://api.github.com/repos/facebookarchive/caffe2/forks',"IyBbU291cmNlIGNvZGUgbm93IGxpdmVzIGluIHRoZSBQeVRvcmNoIHJlcG9z
aXRvcnldKGh0dHBzOi8vZ2l0aHViLmNvbS9weXRvcmNoL3B5dG9yY2gvKS4K
CiMjIENhZmZlMgoKQ2FmZmUyIGlzIGEgbGlnaHR3ZWlnaHQsIG1vZHVsYXIs
IGFuZCBzY2FsYWJsZSBkZWVwIGxlYXJuaW5nIGZyYW1ld29yay4gQnVpbGRp
bmcgb24gdGhlIG9yaWdpbmFsIFtDYWZmZV0oaHR0cDovL2NhZmZlLmJlcmtl
bGV5dmlzaW9uLm9yZyksIENhZmZlMiBpcyBkZXNpZ25lZCB3aXRoIGV4cHJl
c3Npb24sIHNwZWVkLCBhbmQgbW9kdWxhcml0eSBpbiBtaW5kLgoKTGVhcm4g
bW9yZSBhYm91dCBDYWZmZTIgb24gdGhlIFtjYWZmZTIuYWkgd2Vic2l0ZV0o
aHR0cDovL2NhZmZlMi5haS8pCg==
",,8476,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'click',19103692,b'Python composable command line interface toolkit',b'Python',236,8473,,181,False,b'https://api.github.com/repos/pallets/click/forks',"XCQgY2xpY2tcXwo9PT09PT09PT09CgpDbGljayBpcyBhIFB5dGhvbiBwYWNr
YWdlIGZvciBjcmVhdGluZyBiZWF1dGlmdWwgY29tbWFuZCBsaW5lIGludGVy
ZmFjZXMKaW4gYSBjb21wb3NhYmxlIHdheSB3aXRoIGFzIGxpdHRsZSBjb2Rl
IGFzIG5lY2Vzc2FyeS4gSXQncyB0aGUgIkNvbW1hbmQKTGluZSBJbnRlcmZh
Y2UgQ3JlYXRpb24gS2l0Ii4gSXQncyBoaWdobHkgY29uZmlndXJhYmxlIGJ1
dCBjb21lcyB3aXRoCnNlbnNpYmxlIGRlZmF1bHRzIG91dCBvZiB0aGUgYm94
LgoKSXQgYWltcyB0byBtYWtlIHRoZSBwcm9jZXNzIG9mIHdyaXRpbmcgY29t
bWFuZCBsaW5lIHRvb2xzIHF1aWNrIGFuZCBmdW4Kd2hpbGUgYWxzbyBwcmV2
ZW50aW5nIGFueSBmcnVzdHJhdGlvbiBjYXVzZWQgYnkgdGhlIGluYWJpbGl0
eSB0bwppbXBsZW1lbnQgYW4gaW50ZW5kZWQgQ0xJIEFQSS4KCkNsaWNrIGlu
IHRocmVlIHBvaW50czoKCi0gICBBcmJpdHJhcnkgbmVzdGluZyBvZiBjb21t
YW5kcwotICAgQXV0b21hdGljIGhlbHAgcGFnZSBnZW5lcmF0aW9uCi0gICBT
dXBwb3J0cyBsYXp5IGxvYWRpbmcgb2Ygc3ViY29tbWFuZHMgYXQgcnVudGlt
ZQoKCkluc3RhbGxpbmcKLS0tLS0tLS0tLQoKSW5zdGFsbCBhbmQgdXBkYXRl
IHVzaW5nIGBwaXBgXzoKCi4uIGNvZGUtYmxvY2s6OiB0ZXh0CgogICAgJCBw
aXAgaW5zdGFsbCBjbGljawoKQ2xpY2sgc3VwcG9ydHMgUHl0aG9uIDMuNCBh
bmQgbmV3ZXIsIFB5dGhvbiAyLjcsIGFuZCBQeVB5LgoKLi4gX3BpcDogaHR0
cHM6Ly9waXAucHlwYS5pby9lbi9zdGFibGUvcXVpY2tzdGFydC8KCgpBIFNp
bXBsZSBFeGFtcGxlCi0tLS0tLS0tLS0tLS0tLS0KCldoYXQgZG9lcyBpdCBs
b29rIGxpa2U/IEhlcmUgaXMgYW4gZXhhbXBsZSBvZiBhIHNpbXBsZSBDbGlj
ayBwcm9ncmFtOgoKLi4gY29kZS1ibG9jazo6IHB5dGhvbgoKICAgIGltcG9y
dCBjbGljawoKICAgIEBjbGljay5jb21tYW5kKCkKICAgIEBjbGljay5vcHRp
b24oIi0tY291bnQiLCBkZWZhdWx0PTEsIGhlbHA9Ik51bWJlciBvZiBncmVl
dGluZ3MuIikKICAgIEBjbGljay5vcHRpb24oIi0tbmFtZSIsIHByb21wdD0i
WW91ciBuYW1lIiwKICAgICAgICAgICAgICAgICAgaGVscD0iVGhlIHBlcnNv
biB0byBncmVldC4iKQogICAgZGVmIGhlbGxvKGNvdW50LCBuYW1lKToKICAg
ICAgICAiIiJTaW1wbGUgcHJvZ3JhbSB0aGF0IGdyZWV0cyBOQU1FIGZvciBh
IHRvdGFsIG9mIENPVU5UIHRpbWVzLiIiIgogICAgICAgIGZvciBfIGluIHJh
bmdlKGNvdW50KToKICAgICAgICAgICAgY2xpY2suZWNobygiSGVsbG8sICVz
ISIgJSBuYW1lKQoKICAgIGlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CiAg
ICAgICAgaGVsbG8oKQoKQW5kIHdoYXQgaXQgbG9va3MgbGlrZSB3aGVuIHJ1
bjoKCi4uIGNvZGUtYmxvY2s6OiB0ZXh0CgogICAgJCBweXRob24gaGVsbG8u
cHkgLS1jb3VudD0zCiAgICBZb3VyIG5hbWU6IENsaWNrCiAgICBIZWxsbywg
Q2xpY2shCiAgICBIZWxsbywgQ2xpY2shCiAgICBIZWxsbywgQ2xpY2shCgoK
RG9uYXRlCi0tLS0tLQoKVGhlIFBhbGxldHMgb3JnYW5pemF0aW9uIGRldmVs
b3BzIGFuZCBzdXBwb3J0cyBDbGljayBhbmQgb3RoZXIgcG9wdWxhcgpwYWNr
YWdlcy4gSW4gb3JkZXIgdG8gZ3JvdyB0aGUgY29tbXVuaXR5IG9mIGNvbnRy
aWJ1dG9ycyBhbmQgdXNlcnMsIGFuZAphbGxvdyB0aGUgbWFpbnRhaW5lcnMg
dG8gZGV2b3RlIG1vcmUgdGltZSB0byB0aGUgcHJvamVjdHMsIGBwbGVhc2UK
ZG9uYXRlIHRvZGF5YF8uCgouLiBfcGxlYXNlIGRvbmF0ZSB0b2RheTogaHR0
cHM6Ly9wYWxsZXRzcHJvamVjdHMuY29tL2RvbmF0ZQoKCkxpbmtzCi0tLS0t
CgoqICAgV2Vic2l0ZTogaHR0cHM6Ly9wYWxsZXRzcHJvamVjdHMuY29tL3Av
Y2xpY2svCiogICBEb2N1bWVudGF0aW9uOiBodHRwczovL2NsaWNrLnBhbGxl
dHNwcm9qZWN0cy5jb20vCiogICBMaWNlbnNlOiBgQlNEIDxodHRwczovL2dp
dGh1Yi5jb20vcGFsbGV0cy9jbGljay9ibG9iL21hc3Rlci9MSUNFTlNFLnJz
dD5gXwoqICAgUmVsZWFzZXM6IGh0dHBzOi8vcHlwaS5vcmcvcHJvamVjdC9j
bGljay8KKiAgIENvZGU6IGh0dHBzOi8vZ2l0aHViLmNvbS9wYWxsZXRzL2Ns
aWNrCiogICBJc3N1ZSB0cmFja2VyOiBodHRwczovL2dpdGh1Yi5jb20vcGFs
bGV0cy9jbGljay9pc3N1ZXMKKiAgIFRlc3Qgc3RhdHVzOiBodHRwczovL2Rl
di5henVyZS5jb20vcGFsbGV0cy9jbGljay9fYnVpbGQKKiAgIE9mZmljaWFs
IGNoYXQ6IGh0dHBzOi8vZGlzY29yZC5nZy90NnJyUVpICg==
",,8473,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'skynet',5254557,b'A lightweight online game framework',b'C',33,8473,,1283,False,b'https://api.github.com/repos/cloudwu/skynet/forks',"IyMgIVtza3luZXQgbG9nb10oaHR0cHM6Ly9naXRodWIuY29tL2Nsb3Vkd3Uv
c2t5bmV0L3dpa2kvaW1hZ2Uvc2t5bmV0X21ldHJvLmpwZykKClNreW5ldCBp
cyBhIGxpZ2h0d2VpZ2h0IG9ubGluZSBnYW1lIGZyYW1ld29yayB3aGljaCBj
YW4gYmUgdXNlZCBpbiBtYW55IG90aGVyIGZpZWxkcy4KCiMjIEJ1aWxkCgpG
b3IgTGludXgsIGluc3RhbGwgYXV0b2NvbmYgZmlyc3QgZm9yIGplbWFsbG9j
OgoKYGBgCmdpdCBjbG9uZSBodHRwczovL2dpdGh1Yi5jb20vY2xvdWR3dS9z
a3luZXQuZ2l0CmNkIHNreW5ldAptYWtlICdQTEFURk9STScgICMgUExBVEZP
Uk0gY2FuIGJlIGxpbnV4LCBtYWNvc3gsIGZyZWVic2Qgbm93CmBgYAoKT3I6
CgpgYGAKZXhwb3J0IFBMQVQ9bGludXgKbWFrZQpgYGAKCkZvciBGcmVlQlNE
ICwgdXNlIGdtYWtlIGluc3RlYWQgb2YgbWFrZS4KCiMjIFRlc3QKClJ1biB0
aGVzZSBpbiBkaWZmZXJlbnQgY29uc29sZXM6CgpgYGAKLi9za3luZXQgZXhh
bXBsZXMvY29uZmlnCSMgTGF1bmNoIGZpcnN0IHNreW5ldCBub2RlICAoR2F0
ZSBzZXJ2ZXIpIGFuZCBhIHNreW5ldC1tYXN0ZXIgKHNlZSBjb25maWcgZm9y
IHN0YW5kYWxvbmUgb3B0aW9uKQouLzNyZC9sdWEvbHVhIGV4YW1wbGVzL2Ns
aWVudC5sdWEgCSMgTGF1bmNoIGEgY2xpZW50LCBhbmQgdHJ5IHRvIGlucHV0
IGhlbGxvLgpgYGAKCiMjIEFib3V0IEx1YSB2ZXJzaW9uCgpTa3luZXQgbm93
IHVzZXMgYSBtb2RpZmllZCB2ZXJzaW9uIG9mIGx1YSA1LjMuNSAoIGh0dHBz
Oi8vZ2l0aHViLmNvbS9lam95L2x1YS90cmVlL3NreW5ldCApIGZvciBtdWx0
aXBsZSBsdWEgc3RhdGVzLgoKT2ZmaWNpYWwgTHVhIHZlcnNpb25zIGNhbiBh
bHNvIGJlIHVzZWQgYXMgbG9uZyBhcyB0aGUgTWFrZWZpbGUgaXMgZWRpdGVk
LgoKIyMgSG93IFRvIFVzZSAoU29ycnksIGN1cnJlbnRseSBvbmx5IGF2YWls
YWJsZSBpbiBDaGluZXNlKQoKKiBSZWFkIFdpa2kgZm9yIGRvY3VtZW50cyBo
dHRwczovL2dpdGh1Yi5jb20vY2xvdWR3dS9za3luZXQvd2lraQoqIFRoZSBG
QVEgaW4gd2lraSBodHRwczovL2dpdGh1Yi5jb20vY2xvdWR3dS9za3luZXQv
d2lraS9GQVEK
",,8473,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'Magisk',67702184,b'A Magic Mask to Alter Android System Systemless-ly',b'C++',33,8471,,497,False,b'https://api.github.com/repos/topjohnwu/Magisk/forks',"IyBNYWdpc2sKCltEb3dubG9hZHNdKGh0dHBzOi8vZ2l0aHViLmNvbS90b3Bq
b2hud3UvTWFnaXNrL3JlbGVhc2VzKSBcfCBbRG9jdW1lbnRhdGlvbl0oaHR0
cHM6Ly90b3Bqb2hud3UuZ2l0aHViLmlvL01hZ2lzay8pIFx8IFtYREEgVGhy
ZWFkXShodHRwczovL2ZvcnVtLnhkYS1kZXZlbG9wZXJzLmNvbS9hcHBzL21h
Z2lzay9vZmZpY2lhbC1tYWdpc2stdjctdW5pdmVyc2FsLXN5c3RlbWxlc3Mt
dDM0NzM0NDUpCgojIyBJbnRyb2R1Y3Rpb24KCk1hZ2lzayBpcyBhIHN1aXRl
IG9mIG9wZW4gc291cmNlIHRvb2xzIGZvciBjdXN0b21pemluZyBBbmRyb2lk
LCBzdXBwb3J0aW5nIGRldmljZXMgaGlnaGVyIHRoYW4gQW5kcm9pZCA0LjIg
KEFQSSAxNykuIEl0IGNvdmVycyB0aGUgZnVuZGFtZW50YWwgcGFydHMgZm9y
IEFuZHJvaWQgY3VzdG9taXphdGlvbjogcm9vdCwgYm9vdCBzY3JpcHRzLCBT
RUxpbnV4IHBhdGNoZXMsIEFWQjIuMCAvIGRtLXZlcml0eSAvIGZvcmNlZW5j
cnlwdCByZW1vdmFscyBldGMuCgpGdXJ0aGVybW9yZSwgTWFnaXNrIHByb3Zp
ZGVzIGEgKipTeXN0ZW1sZXNzIEludGVyZmFjZSoqIHRvIGFsdGVyIHRoZSBz
eXN0ZW0gKG9yIHZlbmRvcikgYXJiaXRyYXJpbHkgd2hpbGUgdGhlIGFjdHVh
bCBwYXJ0aXRpb25zIHN0YXkgY29tcGxldGVseSBpbnRhY3QuIFdpdGggaXRz
IHN5c3RlbWxlc3MgbmF0dXJlIGFsb25nIHdpdGggc2V2ZXJhbCBvdGhlciBo
YWNrcywgTWFnaXNrIGNhbiBoaWRlIG1vZGlmaWNhdGlvbnMgZnJvbSBuZWFy
bHkgYW55IHN5c3RlbSBpbnRlZ3JpdHkgdmVyaWZpY2F0aW9ucyB1c2VkIGlu
IGJhbmtpbmcgYXBwcywgY29ycG9yYXRpb24gbW9uaXRvcmluZyBhcHBzLCBn
YW1lIGNoZWF0IGRldGVjdGlvbnMsIGFuZCBtb3N0IGltcG9ydGFudGx5IFtH
b29nbGUncyBTYWZldHlOZXQgQVBJXShodHRwczovL2RldmVsb3Blci5hbmRy
b2lkLmNvbS90cmFpbmluZy9zYWZldHluZXQvaW5kZXguaHRtbCkuCgojIyBC
dWcgUmVwb3J0cwoKKipNYWtlIHN1cmUgdG8gaW5zdGFsbCB0aGUgbGF0ZXN0
IFtDYW5hcnkgQnVpbGRdKGh0dHBzOi8vZm9ydW0ueGRhLWRldmVsb3BlcnMu
Y29tL2FwcHMvbWFnaXNrL2Rldi1tYWdpc2stY2FuYXJ5LWNoYW5uZWwtYmxl
ZWRpbmctZWRnZS10MzgzOTMzNykgYmVmb3JlIHJlcG9ydGluZyBhbnkgYnVn
cyEqKiAqKkRPIE5PVCoqIHJlcG9ydCBidWdzIHRoYXQgYXJlIGFscmVhZHkg
Zml4ZWQgdXBzdHJlYW0uIEZvbGxvdyB0aGUgaW5zdHJ1Y3Rpb25zIGluIHRo
ZSBbQ2FuYXJ5IENoYW5uZWwgWERBIFRocmVhZF0oaHR0cHM6Ly9mb3J1bS54
ZGEtZGV2ZWxvcGVycy5jb20vYXBwcy9tYWdpc2svZGV2LW1hZ2lzay1jYW5h
cnktY2hhbm5lbC1ibGVlZGluZy1lZGdlLXQzODM5MzM3KSwgYW5kIHJlcG9y
dCBhIGJ1ZyBlaXRoZXIgYnkgW29wZW5pbmcgYW4gaXNzdWUgb24gR2l0SHVi
XShodHRwczovL2dpdGh1Yi5jb20vdG9wam9obnd1L01hZ2lzay9pc3N1ZXMp
IG9yIGRpcmVjdGx5IGluIHRoZSB0aHJlYWQuCgojIyBCdWlsZGluZyBFbnZp
cm9ubWVudCBSZXF1aXJlbWVudHMKCi0gIFB5dGhvbiAzOiBydW4gYGJ1aWxk
LnB5YCBzY3JpcHQKLSAgSmF2YSBEZXZlbG9wbWVudCBLaXQgKEpESykgODog
Q29tcGlsZSBNYWdpc2sgTWFuYWdlciBhbmQgc2lnbiB6aXBzCi0gIExhdGVz
dCBBbmRyb2lkIFNESzogc2V0IGBBTkRST0lEX0hPTUVgIGVudmlyb25tZW50
IHZhcmlhYmxlIHRvIHRoZSBwYXRoIHRvIEFuZHJvaWQgU0RLCi0gIEFuZHJv
aWQgTkRLOiBJbnN0YWxsIE5ESyBhbG9uZyB3aXRoIFNESyAoYCRBTkRST0lE
X0hPTUUvbmRrLWJ1bmRsZWApLCBvciBvcHRpb25hbGx5IHNwZWNpZnkgYSBj
dXN0b20gcGF0aCBgQU5EUk9JRF9OREtfSE9NRWAKLSAgKFdpbmRvd3MgT25s
eSkgUHl0aG9uIHBhY2thZ2UgQ29sb3JhbWE6IEluc3RhbGwgd2l0aCBgcGlw
IGluc3RhbGwgY29sb3JhbWFgLCB1c2VkIGZvciBBTlNJIGNvbG9yIGNvZGVz
CgojIyBCdWlsZGluZyBOb3RlcyBhbmQgSW5zdHJ1Y3Rpb25zCgotICBDbG9u
ZSBzb3VyY2VzIHdpdGggc3VibW9kdWxlczogYGdpdCBjbG9uZSAtLXJlY3Vy
c2Utc3VibW9kdWxlcyBodHRwczovL2dpdGh1Yi5jb20vdG9wam9obnd1L01h
Z2lzay5naXRgCi0gIEJ1aWxkaW5nIGlzIHN1cHBvcnRlZCBvbiBtYWNPUywg
TGludXgsIGFuZCBXaW5kb3dzLiBPZmZpY2lhbCByZWxlYXNlcyBhcmUgYnVp
bHQgYW5kIHRlc3RlZCB3aXRoIFtGcmFua2VOREtdKGh0dHBzOi8vZ2l0aHVi
LmNvbS90b3Bqb2hud3UvRnJhbmtlTkRLKTsgcG9pbnQgYEFORFJPSURfTkRL
X0hPTUVgIHRvIEZyYW5rZU5ESyBpZiB5b3Ugd2FudCB0byB1c2UgaXQgZm9y
IGNvbXBpbGluZy4KLSAgU2V0IGNvbmZpZ3VyYXRpb25zIGluIGBjb25maWcu
cHJvcGAuIEEgc2FtcGxlIGZpbGUgYGNvbmZpZy5wcm9wLnNhbXBsZWAgaXMg
cHJvdmlkZWQgYXMgYW4gZXhhbXBsZS4KLSAgUnVuIGBidWlsZC5weWAgd2l0
aCBhcmd1bWVudCBgLWhgIHRvIHNlZSB0aGUgYnVpbHQtaW4gaGVscCBtZXNz
YWdlLiBUaGUgYC1oYCBvcHRpb24gYWxzbyB3b3JrcyBmb3IgZWFjaCBzdXBw
b3J0ZWQgYWN0aW9ucywgZS5nLiBgLi9idWlsZC5weSBiaW5hcnkgLWhgCi0g
IEJ5IGRlZmF1bHQsIGBidWlsZC5weWAgYnVpbGQgYmluYXJpZXMgYW5kIE1h
Z2lzayBNYW5hZ2VyIGluIGRlYnVnIG1vZGUuIElmIHlvdSB3YW50IHRvIGJ1
aWxkIE1hZ2lzayBNYW5hZ2VyIGluIHJlbGVhc2UgbW9kZSAodmlhIHRoZSBg
LXIsIC0tcmVsZWFzZWAgZmxhZyksIHlvdSBuZWVkIGEgSmF2YSBLZXlzdG9y
ZSBmaWxlIGByZWxlYXNlLWtleS5qa3NgIChvbmx5IGBKS1NgIGZvcm1hdCBp
cyBzdXBwb3J0ZWQpIHRvIHNpZ24gQVBLcyBhbmQgemlwcy4gRm9yIG1vcmUg
aW5mb3JtYXRpb24sIGNoZWNrIG91dCBbR29vZ2xlJ3MgT2ZmaWNpYWwgRG9j
dW1lbnRhdGlvbl0oaHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vc3R1
ZGlvL3B1Ymxpc2gvYXBwLXNpZ25pbmcuaHRtbCNzaWduaW5nLW1hbnVhbGx5
KS4KCiMjIFRyYW5zbGF0aW9ucwoKRGVmYXVsdCBzdHJpbmcgcmVzb3VyY2Vz
IGZvciBNYWdpc2sgTWFuYWdlciBhbmQgaXRzIHN0dWIgQVBLIGFyZSBsb2Nh
dGVkIGhlcmU6CgotIGBhcHAvc3JjL21haW4vcmVzL3ZhbHVlcy9zdHJpbmdz
LnhtbGAKLSBgc3R1Yi9zcmMvbWFpbi9yZXMvdmFsdWVzL3N0cmluZ3MueG1s
YAoKVHJhbnNsYXRlIGVhY2ggYW5kIHBsYWNlIHRoZW0gaW4gdGhlIHJlc3Bl
Y3RpdmUgbG9jYXRpb25zIChgW21vZHVsZV0vc3JjL21haW4vcmVzL3ZhbHVl
cy1bbGFuZ10vc3RyaW5ncy54bWxgKS4KCiMjIFNpZ25hdHVyZSBWZXJpZmlj
YXRpb24KCk9mZmljaWFsIHJlbGVhc2UgemlwcyBhbmQgQVBLcyBhcmUgc2ln
bmVkIHdpdGggbXkgcGVyc29uYWwgcHJpdmF0ZSBrZXkuIFlvdSBjYW4gdmVy
aWZ5IHRoZSBrZXkgY2VydGlmaWNhdGUgdG8gbWFrZSBzdXJlIHRoZSBiaW5h
cmllcyB5b3UgZG93bmxvYWRlZCBhcmUgbm90IG1hbmlwdWxhdGVkIGluIGFu
eXdheS4KCmBgYCBiYXNoCiMgVXNlIHRoZSBrZXl0b29sIGNvbW1hbmQgZnJv
bSBKREsgdG8gcHJpbnQgY2VydGlmaWNhdGVzCmtleXRvb2wgLXByaW50Y2Vy
dCAtamFyZmlsZSA8QVBLIG9yIE1hZ2lzayB6aXA+CgojIFRoZSBvdXRwdXQg
c2hvdWxkIGNvbnRhaW4gdGhlIGZvbGxvd2luZyBzaWduYXR1cmUKT3duZXI6
IENOPUpvaG4gV3UsIEw9VGFpcGVpLCBDPVRXCklzc3VlcjogQ049Sm9obiBX
dSwgTD1UYWlwZWksIEM9VFcKU2VyaWFsIG51bWJlcjogNTA1MTQ4NzkKVmFs
aWQgZnJvbTogU3VuIEF1ZyAxNCAxMzoyMzo0NCBFRFQgMjAxNiB1bnRpbDog
VHVlIEp1bCAyMSAxMzoyMzo0NCBFRFQgMjExNgpDZXJ0aWZpY2F0ZSBmaW5n
ZXJwcmludHM6CgkgTUQ1OiAgQ0U6REE6Njg6QzE6RTE6NzQ6NzE6MEE6RUY6
NTg6ODk6N0Q6QUU6NkU6QUI6NEYKCSBTSEExOiBEQzowRjoyQjo2MTpDQjpE
NzpFOTpEMzpEQjpCRTowNjowQjoyQjo4NzowRDo0NjpCQjowNjowMjoxMQoJ
IFNIQTI1NjogQjQ6Q0I6ODM6QjQ6REE6RDk6OUY6OTk6N0Q6QkU6ODc6MkY6
MDE6M0E6QTE6NkM6MTQ6RUU6QzQ6MUQ6MTY6NzA6MjE6RjM6NzE6Rjc6RTE6
MzM6MEY6Mjc6M0U6RTYKCSBTaWduYXR1cmUgYWxnb3JpdGhtIG5hbWU6IFNI
QTI1NndpdGhSU0EKCSBWZXJzaW9uOiAzCmBgYAoKIyMgTGljZW5zZQoKICAg
IE1hZ2lzaywgaW5jbHVkaW5nIGFsbCBnaXQgc3VibW9kdWxlcyBhcmUgZnJl
ZSBzb2Z0d2FyZToKICAgIHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9v
ciBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZQogICAgR05VIEdl
bmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVl
IFNvZnR3YXJlIEZvdW5kYXRpb24sCiAgICBlaXRoZXIgdmVyc2lvbiAzIG9m
IHRoZSBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2
ZXJzaW9uLgoKICAgIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0
aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLAogICAgYnV0IFdJVEhP
VVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2Fy
cmFudHkgb2YKICAgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBB
IFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUKICAgIEdOVSBHZW5lcmFs
IFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuCgogICAgWW91IHNo
b3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwg
UHVibGljIExpY2Vuc2UKICAgIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAg
SWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+Lgo=
",,8471,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'art-of-node',8936633,b':snowflake: a short introduction to node.js',b'JavaScript',13,8470,,311,False,b'https://api.github.com/repos/maxogden/art-of-node/forks',"77u/IyBUaGUgQXJ0IG9mIE5vZGUKIyMgQW4gaW50cm9kdWN0aW9uIHRvIE5v
ZGUuanMKClRoaXMgZG9jdW1lbnQgaXMgaW50ZW5kZWQgZm9yIHJlYWRlcnMg
d2hvIGtub3cgYXQgbGVhc3QgYSBsaXR0bGUgYml0IG9mIGEgY291cGxlIG9m
IHRoaW5nczoKCi0gYSBzY3JpcHRpbmcgbGFuZ3VhZ2UgbGlrZSBKYXZhU2Ny
aXB0LCBSdWJ5LCBQeXRob24sIFBlcmwsIGV0Yy4gSWYgeW91IGFyZW4ndCBh
IHByb2dyYW1tZXIgeWV0IHRoZW4gaXQgaXMgcHJvYmFibHkgZWFzaWVyIHRv
IHN0YXJ0IGJ5IHJlYWRpbmcgW0phdmFTY3JpcHQgZm9yIENhdHNdKGh0dHA6
Ly9qc2ZvcmNhdHMuY29tLykuIDpjYXQyOgotIGdpdCBhbmQgZ2l0aHViLiBU
aGVzZSBhcmUgdGhlIG9wZW4gc291cmNlIGNvbGxhYm9yYXRpb24gdG9vbHMg
dGhhdCBwZW9wbGUgaW4gdGhlIG5vZGUgY29tbXVuaXR5IHVzZSB0byBzaGFy
ZSBtb2R1bGVzLiBZb3UganVzdCBuZWVkIHRvIGtub3cgdGhlIGJhc2ljcy4g
SGVyZSBhcmUgdGhyZWUgZ3JlYXQgaW50cm8gdHV0b3JpYWxzOiBbMV0oaHR0
cHM6Ly9naXRodWIuY29tL2psb3JkL2dpdC1pdC1lbGVjdHJvbiNyZWFkbWUp
LCBbMl0oaHR0cDovL2VyaWNzdGVpbmJvcm4uY29tL2dpdGh1Yi1mb3ItY2F0
cy8jLyksIFszXShodHRwOi8vb3BlbnNvdXJjZXJlci5kaXkub3JnLykKCiMj
IFRhYmxlIG9mIGNvbnRlbnRzCgotIFtMZWFybiBub2RlIGludGVyYWN0aXZl
bHldKCNsZWFybi1ub2RlLWludGVyYWN0aXZlbHkpCi0gW1VuZGVyc3RhbmRp
bmcgbm9kZV0oI3VuZGVyc3RhbmRpbmctbm9kZSkKLSBbQ29yZSBtb2R1bGVz
XSgjY29yZS1tb2R1bGVzKQotIFtDYWxsYmFja3NdKCNjYWxsYmFja3MpCi0g
W0V2ZW50c10oI2V2ZW50cykKLSBbU3RyZWFtc10oI3N0cmVhbXMpCi0gW01v
ZHVsZXMgYW5kIG5wbV0oI21vZHVsZXMpCi0gW0NsaWVudCBzaWRlIGRldmVs
b3BtZW50IHdpdGggbnBtXSgjY2xpZW50LXNpZGUtZGV2ZWxvcG1lbnQtd2l0
aC1ucG0pCi0gW0dvaW5nIHdpdGggdGhlIGdyYWluXSgjZ29pbmctd2l0aC10
aGUtZ3JhaW4pCgojIyBMZWFybiBub2RlIGludGVyYWN0aXZlbHkKCkluIGFk
ZGl0aW9uIHRvIHJlYWRpbmcgdGhpcyBndWlkZSBpdCdzIHN1cGVyIGltcG9y
dGFudCB0byBhbHNvIGJ1c3Qgb3V0IHlvdXIgZmF2b3JpdGUgdGV4dCBlZGl0
b3IgYW5kIGFjdHVhbGx5IHdyaXRlIHNvbWUgbm9kZSBjb2RlLiBJIGFsd2F5
cyBmaW5kIHRoYXQgd2hlbiBJIGp1c3QgcmVhZCBzb21lIGNvZGUgaW4gYSBi
b29rIGl0IG5ldmVyIHJlYWxseSBjbGlja3MsIGJ1dCBsZWFybmluZyBieSB3
cml0aW5nIGNvZGUgaXMgYSBnb29kIHdheSB0byBncmFzcCBuZXcgcHJvZ3Jh
bW1pbmcgY29uY2VwdHMuCgojIyMgTm9kZVNjaG9vbC5pbwoKW05vZGVTY2hv
b2wuaW9dKGh0dHA6Ly9ub2Rlc2Nob29sLmlvLykgaXMgYSBzZXJpZXMgb2Yg
ZnJlZSArIG9wZW4gc291cmNlIGludGVyYWN0aXZlIHdvcmtzaG9wcyB0aGF0
IHRlYWNoIHlvdSB0aGUgcHJpbmNpcGxlcyBvZiBOb2RlLmpzIGFuZCBiZXlv
bmQuCgpbTGVhcm4gWW91IFRoZSBOb2RlLmpzXShodHRwczovL2dpdGh1Yi5j
b20vd29ya3Nob3BwZXIvbGVhcm55b3Vub2RlI2xlYXJuLXlvdS10aGUtbm9k
ZWpzLWZvci1tdWNoLXdpbikgaXMgdGhlIGludHJvZHVjdG9yeSBOb2RlU2No
b29sLmlvIHdvcmtzaG9wLiBJdCdzIGEgc2V0IG9mIHByb2dyYW1taW5nIHBy
b2JsZW1zIHRoYXQgaW50cm9kdWNlIHlvdSB0byBjb21tb24gbm9kZSBwYXR0
ZXJucy4gSXQgY29tZXMgcGFja2FnZWQgYXMgYSBjb21tYW5kIGxpbmUgcHJv
Z3JhbS4KClshW2xlYXJueW91bm9kZV0oaHR0cHM6Ly9naXRodWIuY29tL3J2
YWdnL2xlYXJueW91bm9kZS9yYXcvbWFzdGVyL2xlYXJueW91bm9kZS5wbmcp
XShodHRwczovL2dpdGh1Yi5jb20vcnZhZ2cvbGVhcm55b3Vub2RlI2xlYXJu
LXlvdS10aGUtbm9kZWpzLWZvci1tdWNoLXdpbikKCllvdSBjYW4gaW5zdGFs
bCBpdCB3aXRoIG5wbToKCmBgYAojIGluc3RhbGwKbnBtIGluc3RhbGwgbGVh
cm55b3Vub2RlIC1nCgojIHN0YXJ0IHRoZSBtZW51CmxlYXJueW91bm9kZQpg
YGAKCiMjIFVuZGVyc3RhbmRpbmcgbm9kZQoKTm9kZS5qcyBpcyBhbiBvcGVu
IHNvdXJjZSBwcm9qZWN0IGRlc2lnbmVkIHRvIGhlbHAgeW91IHdyaXRlIEph
dmFTY3JpcHQgcHJvZ3JhbXMgdGhhdCB0YWxrIHRvIG5ldHdvcmtzLCBmaWxl
IHN5c3RlbXMgb3Igb3RoZXIgSS9PIChpbnB1dC9vdXRwdXQsIHJlYWRpbmcv
d3JpdGluZykgc291cmNlcy4gVGhhdCdzIGl0ISBJdCBpcyBqdXN0IGEgc2lt
cGxlIGFuZCBzdGFibGUgSS9PIHBsYXRmb3JtIHRoYXQgeW91IGFyZSBlbmNv
dXJhZ2VkIHRvIGJ1aWxkIG1vZHVsZXMgb24gdG9wIG9mLgoKV2hhdCBhcmUg
c29tZSBleGFtcGxlcyBvZiBJL08/IEhlcmUgaXMgYSBkaWFncmFtIG9mIGFu
IGFwcGxpY2F0aW9uIHRoYXQgSSBtYWRlIHdpdGggbm9kZSB0aGF0IHNob3dz
IG1hbnkgSS9PIHNvdXJjZXM6CgohW3NlcnZlciBkaWFncmFtXShzZXJ2ZXIt
ZGlhZ3JhbS5wbmcpCgpJZiB5b3UgZG9uJ3QgdW5kZXJzdGFuZCBhbGwgb2Yg
dGhlIGRpZmZlcmVudCB0aGluZ3MgaW4gdGhlIGRpYWdyYW0gaXQgaXMgY29t
cGxldGVseSBva2F5LiBUaGUgcG9pbnQgaXMgdG8gc2hvdyB0aGF0IGEgc2lu
Z2xlIG5vZGUgcHJvY2VzcyAodGhlIGhleGFnb24gaW4gdGhlIG1pZGRsZSkg
Y2FuIGFjdCBhcyB0aGUgYnJva2VyIGJldHdlZW4gYWxsIG9mIHRoZSBkaWZm
ZXJlbnQgSS9PIGVuZHBvaW50cyAob3JhbmdlIGFuZCBwdXJwbGUgcmVwcmVz
ZW50IEkvTykuCgpVc3VhbGx5IGJ1aWxkaW5nIHRoZXNlIGtpbmRzIG9mIHN5
c3RlbXMgaXMgZWl0aGVyOgoKLSBkaWZmaWN1bHQgdG8gY29kZSBidXQgeWll
bGRzIHN1cGVyIGZhc3QgcmVzdWx0cyAobGlrZSB3cml0aW5nIHlvdXIgd2Vi
IHNlcnZlcnMgZnJvbSBzY3JhdGNoIGluIEMpCi0gZWFzeSB0byBjb2RlIGJ1
dCBub3QgdmVyeSBzcGVlZHkvcm9idXN0IChsaWtlIHdoZW4gc29tZW9uZSB0
cmllcyB0byB1cGxvYWQgYSA1R0IgZmlsZSBhbmQgeW91ciBzZXJ2ZXIgY3Jh
c2hlcykKCk5vZGUncyBnb2FsIGlzIHRvIHN0cmlrZSBhIGJhbGFuY2UgYmV0
d2VlbiB0aGVzZSB0d286IHJlbGF0aXZlbHkgZWFzeSB0byB1bmRlcnN0YW5k
IGFuZCB1c2UgYW5kIGZhc3QgZW5vdWdoIGZvciBtb3N0IHVzZSBjYXNlcy4K
Ck5vZGUgaXNuJ3QgZWl0aGVyIG9mIHRoZSBmb2xsb3dpbmc6CgogIC0gQSB3
ZWIgZnJhbWV3b3JrIChsaWtlIFJhaWxzIG9yIERqYW5nbywgdGhvdWdoIGl0
IGNhbiBiZSB1c2VkIHRvIG1ha2Ugc3VjaCB0aGluZ3MpCiAgLSBBIHByb2dy
YW1taW5nIGxhbmd1YWdlIChpdCB1c2VzIEphdmFTY3JpcHQgYnV0IG5vZGUg
aXNuJ3QgaXRzIG93biBsYW5ndWFnZSkKICAKSW5zdGVhZCwgbm9kZSBpcyBz
b21ld2hlcmUgaW4gdGhlIG1pZGRsZS4gSXQgaXM6CgogIC0gRGVzaWduZWQg
dG8gYmUgc2ltcGxlIGFuZCB0aGVyZWZvcmUgcmVsYXRpdmVseSBlYXN5IHRv
IHVuZGVyc3RhbmQgYW5kIHVzZQogIC0gVXNlZnVsIGZvciBJL08gYmFzZWQg
cHJvZ3JhbXMgdGhhdCBuZWVkIHRvIGJlIGZhc3QgYW5kL29yIGhhbmRsZSBs
b3RzIG9mIGNvbm5lY3Rpb25zCiAgCkF0IGEgbG93ZXIgbGV2ZWwsIG5vZGUg
Y2FuIGJlIGRlc2NyaWJlZCBhcyBhIHRvb2wgZm9yIHdyaXRpbmcgdHdvIG1h
am9yIHR5cGVzIG9mIHByb2dyYW1zOiAKCiAgLSBOZXR3b3JrIHByb2dyYW1z
IHVzaW5nIHRoZSBwcm90b2NvbHMgb2YgdGhlIHdlYjogSFRUUCwgVENQLCBV
RFAsIEROUyBhbmQgU1NMCiAgLSBQcm9ncmFtcyB0aGF0IHJlYWQgYW5kIHdy
aXRlIGRhdGEgdG8gdGhlIGZpbGVzeXN0ZW0gb3IgbG9jYWwgcHJvY2Vzc2Vz
L21lbW9yeQoKV2hhdCBpcyBhbiAiSS9PIGJhc2VkIHByb2dyYW0iPyBIZXJl
IGFyZSBzb21lIGNvbW1vbiBJL08gc291cmNlczoKCiAgLSBEYXRhYmFzZXMg
KGUuZy4gTXlTUUwsIFBvc3RncmVTUUwsIE1vbmdvREIsIFJlZGlzLCBDb3Vj
aERCKQogIC0gQVBJcyAoZS5nLiBUd2l0dGVyLCBGYWNlYm9vaywgQXBwbGUg
UHVzaCBOb3RpZmljYXRpb25zKQogIC0gSFRUUC9XZWJTb2NrZXQgY29ubmVj
dGlvbnMgKGZyb20gdXNlcnMgb2YgYSB3ZWIgYXBwKQogIC0gRmlsZXMgKGlt
YWdlIHJlc2l6ZXIsIHZpZGVvIGVkaXRvciwgaW50ZXJuZXQgcmFkaW8pCgpO
b2RlIGRvZXMgSS9PIGluIGEgd2F5IHRoYXQgaXMgW2FzeW5jaHJvbm91c10o
aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQXN5bmNocm9ub3VzX0kv
Tykgd2hpY2ggbGV0cyBpdCBoYW5kbGUgbG90cyBvZiBkaWZmZXJlbnQgdGhp
bmdzIHNpbXVsdGFuZW91c2x5LiBGb3IgZXhhbXBsZSwgaWYgeW91IGdvIGRv
d24gdG8gYSBmYXN0IGZvb2Qgam9pbnQgYW5kIG9yZGVyIGEgY2hlZXNlYnVy
Z2VyIHRoZXkgd2lsbCBpbW1lZGlhdGVseSB0YWtlIHlvdXIgb3JkZXIgYW5k
IHRoZW4gbWFrZSB5b3Ugd2FpdCBhcm91bmQgdW50aWwgdGhlIGNoZWVzZWJ1
cmdlciBpcyByZWFkeS4gSW4gdGhlIG1lYW50aW1lIHRoZXkgY2FuIHRha2Ug
b3RoZXIgb3JkZXJzIGFuZCBzdGFydCBjb29raW5nIGNoZWVzZWJ1cmdlcnMg
Zm9yIG90aGVyIHBlb3BsZS4gSW1hZ2luZSBpZiB5b3UgaGFkIHRvIHdhaXQg
YXQgdGhlIHJlZ2lzdGVyIGZvciB5b3VyIGNoZWVzZWJ1cmdlciwgYmxvY2tp
bmcgYWxsIG90aGVyIHBlb3BsZSBpbiBsaW5lIGZyb20gb3JkZXJpbmcgd2hp
bGUgdGhleSBjb29rZWQgeW91ciBidXJnZXIhIFRoaXMgaXMgY2FsbGVkICoq
YmxvY2tpbmcgSS9PKiogYmVjYXVzZSBhbGwgSS9PIChjb29raW5nIGNoZWVz
ZWJ1cmdlcnMpIGhhcHBlbnMgb25lIGF0IGEgdGltZS4gTm9kZSwgb24gdGhl
IG90aGVyIGhhbmQsIGlzICoqbm9uLWJsb2NraW5nKiosIHdoaWNoIG1lYW5z
IGl0IGNhbiBjb29rIG1hbnkgY2hlZXNlYnVyZ2VycyBhdCBvbmNlLgoKSGVy
ZSBhcmUgc29tZSBmdW4gdGhpbmdzIG1hZGUgZWFzeSB3aXRoIG5vZGUgdGhh
bmtzIHRvIGl0cyBub24tYmxvY2tpbmcgbmF0dXJlOgogIAogIC0gQ29udHJv
bCBbZmx5aW5nIHF1YWRjb3B0ZXJzXShodHRwOi8vd3d3Lm5vZGVjb3B0ZXIu
Y29tLykKICAtIFdyaXRlIElSQyBjaGF0IGJvdHMKICAtIENyZWF0ZSBbd2Fs
a2luZyBiaXBlZCByb2JvdHNdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dh
dGNoP3Y9amYtY0VCM1UyVVEpCgojIyBDb3JlIG1vZHVsZXMKCkZpcnN0bHkg
SSB3b3VsZCByZWNvbW1lbmQgdGhhdCB5b3UgZ2V0IG5vZGUgaW5zdGFsbGVk
IG9uIHlvdXIgY29tcHV0ZXIuIFRoZSBlYXNpZXN0IHdheSBpcyB0byB2aXNp
dCBbbm9kZWpzLm9yZ10oaHR0cDovL25vZGVqcy5vcmcpIGFuZCBjbGljayBg
SW5zdGFsbGAuCgpOb2RlIGhhcyBhIHNtYWxsIGNvcmUgZ3JvdXAgb2YgbW9k
dWxlcyAoY29tbW9ubHkgcmVmZXJyZWQgdG8gYXMgJ25vZGUgY29yZScpIHRo
YXQgYXJlIHByZXNlbnRlZCBhcyB0aGUgcHVibGljIEFQSSB0aGF0IHlvdSBh
cmUgaW50ZW5kZWQgdG8gd3JpdGUgcHJvZ3JhbXMgd2l0aC4gRm9yIHdvcmtp
bmcgd2l0aCBmaWxlIHN5c3RlbXMgdGhlcmUgaXMgdGhlIGBmc2AgbW9kdWxl
IGFuZCBmb3IgbmV0d29ya3MgdGhlcmUgYXJlIG1vZHVsZXMgbGlrZSBgbmV0
YCAoVENQKSwgYGh0dHBgLCBgZGdyYW1gIChVRFApLgoKSW4gYWRkaXRpb24g
dG8gYGZzYCBhbmQgbmV0d29yayBtb2R1bGVzIHRoZXJlIGFyZSBhIG51bWJl
ciBvZiBvdGhlciBiYXNlIG1vZHVsZXMgaW4gbm9kZSBjb3JlLiBUaGVyZSBp
cyBhIG1vZHVsZSBmb3IgYXN5bmNocm9ub3VzbHkgcmVzb2x2aW5nIEROUyBx
dWVyaWVzIGNhbGxlZCBgZG5zYCwgYSBtb2R1bGUgZm9yIGdldHRpbmcgT1Mg
c3BlY2lmaWMgaW5mb3JtYXRpb24gbGlrZSB0aGUgdG1wZGlyIGxvY2F0aW9u
IGNhbGxlZCBgb3NgLCBhIG1vZHVsZSBmb3IgYWxsb2NhdGluZyBiaW5hcnkg
Y2h1bmtzIG9mIG1lbW9yeSBjYWxsZWQgYGJ1ZmZlcmAsIHNvbWUgbW9kdWxl
cyBmb3IgcGFyc2luZyB1cmxzIGFuZCBwYXRocyAoYHVybGAsIGBxdWVyeXN0
cmluZ2AsIGBwYXRoYCksIGV0Yy4gTW9zdCBpZiBub3QgYWxsIG9mIHRoZSBt
b2R1bGVzIGluIG5vZGUgY29yZSBhcmUgdGhlcmUgdG8gc3VwcG9ydCBub2Rl
J3MgbWFpbiB1c2UgY2FzZTogd3JpdGluZyBmYXN0IHByb2dyYW1zIHRoYXQg
dGFsayB0byBmaWxlIHN5c3RlbXMgb3IgbmV0d29ya3MuCgpOb2RlIGhhbmRs
ZXMgSS9PIHdpdGg6IGNhbGxiYWNrcywgZXZlbnRzLCBzdHJlYW1zIGFuZCBt
b2R1bGVzLiBJZiB5b3UgbGVhcm4gaG93IHRoZXNlIGZvdXIgdGhpbmdzIHdv
cmsgdGhlbiB5b3Ugd2lsbCBiZSBhYmxlIHRvIGdvIGludG8gYW55IG1vZHVs
ZSBpbiBub2RlIGNvcmUgYW5kIGhhdmUgYSBiYXNpYyB1bmRlcnN0YW5kaW5n
IGFib3V0IGhvdyB0byBpbnRlcmZhY2Ugd2l0aCBpdC4KCiMjIENhbGxiYWNr
cwoKVGhpcyBpcyB0aGUgbW9zdCBpbXBvcnRhbnQgdG9waWMgdG8gdW5kZXJz
dGFuZCBpZiB5b3Ugd2FudCB0byB1bmRlcnN0YW5kIGhvdyB0byB1c2Ugbm9k
ZS4gTmVhcmx5IGV2ZXJ5dGhpbmcgaW4gbm9kZSB1c2VzIGNhbGxiYWNrcy4g
VGhleSB3ZXJlbid0IGludmVudGVkIGJ5IG5vZGUsIHRoZXkgYXJlIGp1c3Qg
cGFydCBvZiB0aGUgSmF2YVNjcmlwdCBsYW5ndWFnZS4KCkNhbGxiYWNrcyBh
cmUgZnVuY3Rpb25zIHRoYXQgYXJlIGV4ZWN1dGVkIGFzeW5jaHJvbm91c2x5
LCBvciBhdCBhIGxhdGVyIHRpbWUuIEluc3RlYWQgb2YgdGhlIGNvZGUgcmVh
ZGluZyB0b3AgdG8gYm90dG9tIHByb2NlZHVyYWxseSwgYXN5bmMgcHJvZ3Jh
bXMgbWF5IGV4ZWN1dGUgZGlmZmVyZW50IGZ1bmN0aW9ucyBhdCBkaWZmZXJl
bnQgdGltZXMgYmFzZWQgb24gdGhlIG9yZGVyIGFuZCBzcGVlZCB0aGF0IGVh
cmxpZXIgZnVuY3Rpb25zIGxpa2UgaHR0cCByZXF1ZXN0cyBvciBmaWxlIHN5
c3RlbSByZWFkcyBoYXBwZW4uCgpUaGUgZGlmZmVyZW5jZSBjYW4gYmUgY29u
ZnVzaW5nIHNpbmNlIGRldGVybWluaW5nIGlmIGEgZnVuY3Rpb24gaXMgYXN5
bmNocm9ub3VzIG9yIG5vdCBkZXBlbmRzIGEgbG90IG9uIGNvbnRleHQuIEhl
cmUgaXMgYSBzaW1wbGUgc3luY2hyb25vdXMgZXhhbXBsZSwgbWVhbmluZyB5
b3UgY2FuIHJlYWQgdGhlIGNvZGUgdG9wIHRvIGJvdHRvbSBqdXN0IGxpa2Ug
YSBib29rOgoKYGBganMKdmFyIG15TnVtYmVyID0gMQpmdW5jdGlvbiBhZGRP
bmUoKSB7IG15TnVtYmVyKysgfSAvLyBkZWZpbmUgdGhlIGZ1bmN0aW9uCmFk
ZE9uZSgpIC8vIHJ1biB0aGUgZnVuY3Rpb24KY29uc29sZS5sb2cobXlOdW1i
ZXIpIC8vIGxvZ3Mgb3V0IDIKYGBgCgpUaGUgY29kZSBoZXJlIGRlZmluZXMg
YSBmdW5jdGlvbiBhbmQgdGhlbiBvbiB0aGUgbmV4dCBsaW5lIGNhbGxzIHRo
YXQgZnVuY3Rpb24sIHdpdGhvdXQgd2FpdGluZyBmb3IgYW55dGhpbmcuIFdo
ZW4gdGhlIGZ1bmN0aW9uIGlzIGNhbGxlZCBpdCBpbW1lZGlhdGVseSBhZGRz
IDEgdG8gdGhlIG51bWJlciwgc28gd2UgY2FuIGV4cGVjdCB0aGF0IGFmdGVy
IHdlIGNhbGwgdGhlIGZ1bmN0aW9uIHRoZSBudW1iZXIgc2hvdWxkIGJlIDIu
IFRoaXMgaXMgdGhlIGV4cGVjdGF0aW9uIG9mIHN5bmNocm9ub3VzIGNvZGUg
LSBpdCBzZXF1ZW50aWFsbHkgcnVucyB0b3AgdG8gYm90dG9tLgoKTm9kZSwg
aG93ZXZlciwgdXNlcyBtb3N0bHkgYXN5bmNocm9ub3VzIGNvZGUuIExldCdz
IHVzZSBub2RlIHRvIHJlYWQgb3VyIG51bWJlciBmcm9tIGEgZmlsZSBjYWxs
ZWQgYG51bWJlci50eHRgOgoKYGBganMKdmFyIGZzID0gcmVxdWlyZSgnZnMn
KSAvLyByZXF1aXJlIGlzIGEgc3BlY2lhbCBmdW5jdGlvbiBwcm92aWRlZCBi
eSBub2RlCnZhciBteU51bWJlciA9IHVuZGVmaW5lZCAvLyB3ZSBkb24ndCBr
bm93IHdoYXQgdGhlIG51bWJlciBpcyB5ZXQgc2luY2UgaXQgaXMgc3RvcmVk
IGluIGEgZmlsZQoKZnVuY3Rpb24gYWRkT25lKCkgewogIGZzLnJlYWRGaWxl
KCdudW1iZXIudHh0JywgZnVuY3Rpb24gZG9uZVJlYWRpbmcoZXJyLCBmaWxl
Q29udGVudHMpIHsKICAgIG15TnVtYmVyID0gcGFyc2VJbnQoZmlsZUNvbnRl
bnRzKQogICAgbXlOdW1iZXIrKwogIH0pCn0KCmFkZE9uZSgpCgpjb25zb2xl
LmxvZyhteU51bWJlcikgLy8gbG9ncyBvdXQgdW5kZWZpbmVkIC0tIHRoaXMg
bGluZSBnZXRzIHJ1biBiZWZvcmUgcmVhZEZpbGUgaXMgZG9uZQpgYGAKCldo
eSBkbyB3ZSBnZXQgYHVuZGVmaW5lZGAgd2hlbiB3ZSBsb2cgb3V0IHRoZSBu
dW1iZXIgdGhpcyB0aW1lPyBJbiB0aGlzIGNvZGUgd2UgdXNlIHRoZSBgZnMu
cmVhZEZpbGVgIG1ldGhvZCwgd2hpY2ggaGFwcGVucyB0byBiZSBhbiBhc3lu
Y2hyb25vdXMgbWV0aG9kLiBVc3VhbGx5IHRoaW5ncyB0aGF0IGhhdmUgdG8g
dGFsayB0byBoYXJkIGRyaXZlcyBvciBuZXR3b3JrcyB3aWxsIGJlIGFzeW5j
aHJvbm91cy4gSWYgdGhleSBqdXN0IGhhdmUgdG8gYWNjZXNzIHRoaW5ncyBp
biBtZW1vcnkgb3IgZG8gc29tZSB3b3JrIG9uIHRoZSBDUFUgdGhleSB3aWxs
IGJlIHN5bmNocm9ub3VzLiBUaGUgcmVhc29uIGZvciB0aGlzIGlzIHRoYXQg
SS9PIGlzIHJlYWxseXl5IHJlYWxseXl5IHNsb293d3d3LiBBIGJhbGxwYXJr
IGZpZ3VyZSB3b3VsZCBiZSB0aGF0IHRhbGtpbmcgdG8gYSBoYXJkIGRyaXZl
IGlzIGFib3V0IDEwMCwwMDAgdGltZXMgc2xvd2VyIHRoYW4gdGFsa2luZyB0
byBtZW1vcnkgKGUuZy4gUkFNKS4KCldoZW4gd2UgcnVuIHRoaXMgcHJvZ3Jh
bSBhbGwgb2YgdGhlIGZ1bmN0aW9ucyBhcmUgaW1tZWRpYXRlbHkgZGVmaW5l
ZCwgYnV0IHRoZXkgZG9uJ3QgYWxsIGV4ZWN1dGUgaW1tZWRpYXRlbHkuIFRo
aXMgaXMgYSBmdW5kYW1lbnRhbCB0aGluZyB0byB1bmRlcnN0YW5kIGFib3V0
IGFzeW5jIHByb2dyYW1taW5nLiBXaGVuIGBhZGRPbmVgIGlzIGNhbGxlZCBp
dCBraWNrcyBvZmYgYSBgcmVhZEZpbGVgIGFuZCB0aGVuIG1vdmVzIG9uIHRv
IHRoZSBuZXh0IHRoaW5nIHRoYXQgaXMgcmVhZHkgdG8gZXhlY3V0ZS4gSWYg
dGhlcmUgaXMgbm90aGluZyB0byBleGVjdXRlIG5vZGUgd2lsbCBlaXRoZXIg
d2FpdCBmb3IgcGVuZGluZyBmcy9uZXR3b3JrIG9wZXJhdGlvbnMgdG8gZmlu
aXNoIG9yIGl0IHdpbGwgc3RvcCBydW5uaW5nIGFuZCBleGl0IHRvIHRoZSBj
b21tYW5kIGxpbmUuCgpXaGVuIGByZWFkRmlsZWAgaXMgZG9uZSByZWFkaW5n
IHRoZSBmaWxlICh0aGlzIG1heSB0YWtlIGFueXdoZXJlIGZyb20gbWlsbGlz
ZWNvbmRzIHRvIHNlY29uZHMgdG8gbWludXRlcyBkZXBlbmRpbmcgb24gaG93
IGZhc3QgdGhlIGhhcmQgZHJpdmUgaXMpIGl0IHdpbGwgcnVuIHRoZSBgZG9u
ZVJlYWRpbmdgIGZ1bmN0aW9uIGFuZCBnaXZlIGl0IGFuIGVycm9yIChpZiB0
aGVyZSB3YXMgYW4gZXJyb3IpIGFuZCB0aGUgZmlsZSBjb250ZW50cy4KClRo
ZSByZWFzb24gd2UgZ290IGB1bmRlZmluZWRgIGFib3ZlIGlzIHRoYXQgbm93
aGVyZSBpbiBvdXIgY29kZSBleGlzdHMgbG9naWMgdGhhdCB0ZWxscyB0aGUg
YGNvbnNvbGUubG9nYCBzdGF0ZW1lbnQgdG8gd2FpdCB1bnRpbCB0aGUgYHJl
YWRGaWxlYCBzdGF0ZW1lbnQgZmluaXNoZXMgYmVmb3JlIGl0IHByaW50cyBv
dXQgdGhlIG51bWJlci4KCklmIHlvdSBoYXZlIHNvbWUgY29kZSB0aGF0IHlv
dSB3YW50IHRvIGJlIGFibGUgdG8gZXhlY3V0ZSBvdmVyIGFuZCBvdmVyIGFn
YWluLCBvciBhdCBhIGxhdGVyIHRpbWUsIHRoZSBmaXJzdCBzdGVwIGlzIHRv
IHB1dCB0aGF0IGNvZGUgaW5zaWRlIGEgZnVuY3Rpb24uIFRoZW4geW91IGNh
biBjYWxsIHRoZSBmdW5jdGlvbiB3aGVuZXZlciB5b3Ugd2FudCB0byBydW4g
eW91ciBjb2RlLiBJdCBoZWxwcyB0byBnaXZlIHlvdXIgZnVuY3Rpb25zIGRl
c2NyaXB0aXZlIG5hbWVzLgoKQ2FsbGJhY2tzIGFyZSBqdXN0IGZ1bmN0aW9u
cyB0aGF0IGdldCBleGVjdXRlZCBhdCBzb21lIGxhdGVyIHRpbWUuIFRoZSBr
ZXkgdG8gdW5kZXJzdGFuZGluZyBjYWxsYmFja3MgaXMgdG8gcmVhbGl6ZSB0
aGF0IHRoZXkgYXJlIHVzZWQgd2hlbiB5b3UgZG9uJ3Qga25vdyAqKndoZW4q
KiBzb21lIGFzeW5jIG9wZXJhdGlvbiB3aWxsIGNvbXBsZXRlLCBidXQgeW91
IGRvIGtub3cgKip3aGVyZSoqIHRoZSBvcGVyYXRpb24gd2lsbCBjb21wbGV0
ZSDigJQgdGhlIGxhc3QgbGluZSBvZiB0aGUgYXN5bmMgZnVuY3Rpb24hIFRo
ZSB0b3AtdG8tYm90dG9tIG9yZGVyIHRoYXQgeW91IGRlY2xhcmUgY2FsbGJh
Y2tzIGRvZXMgbm90IG5lY2Vzc2FyaWx5IG1hdHRlciwgb25seSB0aGUgbG9n
aWNhbC9oaWVyYXJjaGljYWwgbmVzdGluZyBvZiB0aGVtLiBGaXJzdCB5b3Ug
c3BsaXQgeW91ciBjb2RlIHVwIGludG8gZnVuY3Rpb25zLCBhbmQgdGhlbiB1
c2UgY2FsbGJhY2tzIHRvIGRlY2xhcmUgaWYgb25lIGZ1bmN0aW9uIGRlcGVu
ZHMgb24gYW5vdGhlciBmdW5jdGlvbiBmaW5pc2hpbmcuCgpUaGUgYGZzLnJl
YWRGaWxlYCBtZXRob2QgaXMgcHJvdmlkZWQgYnkgbm9kZSwgaXMgYXN5bmNo
cm9ub3VzLCBhbmQgaGFwcGVucyB0byB0YWtlIGEgbG9uZyB0aW1lIHRvIGZp
bmlzaC4gQ29uc2lkZXIgd2hhdCBpdCBkb2VzOiBpdCBoYXMgdG8gZ28gdG8g
dGhlIG9wZXJhdGluZyBzeXN0ZW0sIHdoaWNoIGluIHR1cm4gaGFzIHRvIGdv
IHRvIHRoZSBmaWxlIHN5c3RlbSwgd2hpY2ggbGl2ZXMgb24gYSBoYXJkIGRy
aXZlIHRoYXQgbWF5IG9yIG1heSBub3QgYmUgc3Bpbm5pbmcgYXQgdGhvdXNh
bmRzIG9mIHJldm9sdXRpb25zIHBlciBtaW51dGUuIFRoZW4gaXQgaGFzIHRv
IHVzZSBhIG1hZ25ldGljIGhlYWQgdG8gcmVhZCBkYXRhIGFuZCBzZW5kIGl0
IGJhY2sgdXAgdGhyb3VnaCB0aGUgbGF5ZXJzIGJhY2sgaW50byB5b3VyIGph
dmFzY3JpcHQgcHJvZ3JhbS4gWW91IGdpdmUgYHJlYWRGaWxlYCBhIGZ1bmN0
aW9uIChrbm93biBhcyBhIGNhbGxiYWNrKSB0aGF0IGl0IHdpbGwgY2FsbCBh
ZnRlciBpdCBoYXMgcmV0cmlldmVkIHRoZSBkYXRhIGZyb20gdGhlIGZpbGUg
c3lzdGVtLiBJdCBwdXRzIHRoZSBkYXRhIGl0IHJldHJpZXZlZCBpbnRvIGEg
amF2YXNjcmlwdCB2YXJpYWJsZSBhbmQgY2FsbHMgeW91ciBmdW5jdGlvbiAo
Y2FsbGJhY2spIHdpdGggdGhhdCB2YXJpYWJsZS4gSW4gdGhpcyBjYXNlIHRo
ZSB2YXJpYWJsZSBpcyBjYWxsZWQgYGZpbGVDb250ZW50c2AgYmVjYXVzZSBp
dCBjb250YWlucyB0aGUgY29udGVudHMgb2YgdGhlIGZpbGUgdGhhdCB3YXMg
cmVhZC4KClRoaW5rIG9mIHRoZSByZXN0YXVyYW50IGV4YW1wbGUgYXQgdGhl
IGJlZ2lubmluZyBvZiB0aGlzIHR1dG9yaWFsLiBBdCBtYW55IHJlc3RhdXJh
bnRzIHlvdSBnZXQgYSBudW1iZXIgdG8gcHV0IG9uIHlvdXIgdGFibGUgd2hp
bGUgeW91IHdhaXQgZm9yIHlvdXIgZm9vZC4gVGhlc2UgYXJlIGEgbG90IGxp
a2UgY2FsbGJhY2tzLiBUaGV5IHRlbGwgdGhlIHNlcnZlciB3aGF0IHRvIGRv
IGFmdGVyIHlvdXIgY2hlZXNlYnVyZ2VyIGlzIGRvbmUuCgpMZXQncyBwdXQg
b3VyIGBjb25zb2xlLmxvZ2Agc3RhdGVtZW50IGludG8gYSBmdW5jdGlvbiBh
bmQgcGFzcyBpdCBpbiBhcyBhIGNhbGxiYWNrOgoKYGBganMKdmFyIGZzID0g
cmVxdWlyZSgnZnMnKQp2YXIgbXlOdW1iZXIgPSB1bmRlZmluZWQKCmZ1bmN0
aW9uIGFkZE9uZShjYWxsYmFjaykgewogIGZzLnJlYWRGaWxlKCdudW1iZXIu
dHh0JywgZnVuY3Rpb24gZG9uZVJlYWRpbmcoZXJyLCBmaWxlQ29udGVudHMp
IHsKICAgIG15TnVtYmVyID0gcGFyc2VJbnQoZmlsZUNvbnRlbnRzKQogICAg
bXlOdW1iZXIrKwogICAgY2FsbGJhY2soKQogIH0pCn0KCmZ1bmN0aW9uIGxv
Z015TnVtYmVyKCkgewogIGNvbnNvbGUubG9nKG15TnVtYmVyKQp9CgphZGRP
bmUobG9nTXlOdW1iZXIpCmBgYAoKTm93IHRoZSBgbG9nTXlOdW1iZXJgIGZ1
bmN0aW9uIGNhbiBnZXQgcGFzc2VkIGluIGFzIGFuIGFyZ3VtZW50IHRoYXQg
d2lsbCBiZWNvbWUgdGhlIGBjYWxsYmFja2AgdmFyaWFibGUgaW5zaWRlIHRo
ZSBgYWRkT25lYCBmdW5jdGlvbi4gQWZ0ZXIgYHJlYWRGaWxlYCBpcyBkb25l
IHRoZSBgY2FsbGJhY2tgIHZhcmlhYmxlIHdpbGwgYmUgaW52b2tlZCAoYGNh
bGxiYWNrKClgKS4gT25seSBmdW5jdGlvbnMgY2FuIGJlIGludm9rZWQsIHNv
IGlmIHlvdSBwYXNzIGluIGFueXRoaW5nIG90aGVyIHRoYW4gYSBmdW5jdGlv
biBpdCB3aWxsIGNhdXNlIGFuIGVycm9yLgoKV2hlbiBhIGZ1bmN0aW9uIGdl
dHMgaW52b2tlZCBpbiBqYXZhc2NyaXB0IHRoZSBjb2RlIGluc2lkZSB0aGF0
IGZ1bmN0aW9uIHdpbGwgaW1tZWRpYXRlbHkgZ2V0IGV4ZWN1dGVkLiBJbiB0
aGlzIGNhc2Ugb3VyIGxvZyBzdGF0ZW1lbnQgd2lsbCBleGVjdXRlIHNpbmNl
IGBjYWxsYmFja2AgaXMgYWN0dWFsbHkgYGxvZ015TnVtYmVyYC4gUmVtZW1i
ZXIsIGp1c3QgYmVjYXVzZSB5b3UgKmRlZmluZSogYSBmdW5jdGlvbiBpdCBk
b2Vzbid0IG1lYW4gaXQgd2lsbCBleGVjdXRlLiBZb3UgaGF2ZSB0byAqaW52
b2tlKiBhIGZ1bmN0aW9uIGZvciB0aGF0IHRvIGhhcHBlbi4KClRvIGJyZWFr
IGRvd24gdGhpcyBleGFtcGxlIGV2ZW4gbW9yZSwgaGVyZSBpcyBhIHRpbWVs
aW5lIG9mIGV2ZW50cyB0aGF0IGhhcHBlbiB3aGVuIHdlIHJ1biB0aGlzIHBy
b2dyYW06CgotIDE6IFRoZSBjb2RlIGlzIHBhcnNlZCwgd2hpY2ggbWVhbnMg
aWYgdGhlcmUgYXJlIGFueSBzeW50YXggZXJyb3JzIHRoZXkgd291bGQgbWFr
ZSB0aGUgcHJvZ3JhbSBicmVhay4gRHVyaW5nIHRoaXMgaW5pdGlhbCBwaGFz
ZSwgYGZzYCBhbmQgYG15TnVtYmVyYCBhcmUgZGVjbGFyZWQgYXMgdmFyaWFi
bGVzIHdoaWxlIGBhZGRPbmVgIGFuZCBgbG9nTXlOdW1iZXJgIGFyZSBkZWNs
YXJlZCBhcyBmdW5jdGlvbnMuIE5vdGUgdGhhdCB0aGVzZSBhcmUganVzdCBk
ZWNsYXJhdGlvbnMuIE5laXRoZXIgZnVuY3Rpb24gaGFzIGJlZW4gY2FsbGVk
IG5vciBpbnZva2VkIHlldC4KLSAyOiBXaGVuIHRoZSBsYXN0IGxpbmUgb2Yg
b3VyIHByb2dyYW0gZ2V0cyBleGVjdXRlZCBgYWRkT25lYCBpcyBpbnZva2Vk
IHdpdGggdGhlIGBsb2dNeU51bWJlcmAgZnVuY3Rpb24gcGFzc2VkIGFzIGl0
cyBgY2FsbGJhY2tgIGFyZ3VtZW50LiBJbnZva2luZyBgYWRkT25lYCB3aWxs
IGZpcnN0IHJ1biB0aGUgYXN5bmNocm9ub3VzIGBmcy5yZWFkRmlsZWAgZnVu
Y3Rpb24uIFRoaXMgcGFydCBvZiB0aGUgcHJvZ3JhbSB0YWtlcyBhIHdoaWxl
IHRvIGZpbmlzaC4KLSAzOiBXaXRoIG5vdGhpbmcgdG8gZG8sIG5vZGUgaWRs
ZXMgZm9yIGEgYml0IGFzIGl0IHdhaXRzIGZvciBgcmVhZEZpbGVgIHRvIGZp
bmlzaC4gSWYgdGhlcmUgd2FzIGFueXRoaW5nIGVsc2UgdG8gZG8gZHVyaW5n
IHRoaXMgdGltZSwgbm9kZSB3b3VsZCBiZSBhdmFpbGFibGUgZm9yIHdvcmsu
Ci0gNDogQXMgc29vbiBhcyBgcmVhZEZpbGVgIGZpbmlzaGVzIGl0IGV4ZWN1
dGVzIGl0cyBjYWxsYmFjaywgYGRvbmVSZWFkaW5nYCwgd2hpY2ggcGFyc2Vz
IGBmaWxlQ29udGVudHNgIGZvciBhbiBpbnRlZ2VyIGNhbGxlZCBgbXlOdW1i
ZXJgLCBpbmNyZW1lbnRzIGBteU51bWJlcmAgYW5kIHRoZW4gaW1tZWRpYXRl
bHkgaW52b2tlcyB0aGUgZnVuY3Rpb24gdGhhdCBgYWRkT25lYCBwYXNzZWQg
aW4gKGl0cyBjYWxsYmFjayksIGBsb2dNeU51bWJlcmAuCgpQZXJoYXBzIHRo
ZSBtb3N0IGNvbmZ1c2luZyBwYXJ0IG9mIHByb2dyYW1taW5nIHdpdGggY2Fs
bGJhY2tzIGlzIGhvdyBmdW5jdGlvbnMgYXJlIGp1c3Qgb2JqZWN0cyB0aGF0
IGNhbiBiZSBzdG9yZWQgaW4gdmFyaWFibGVzIGFuZCBwYXNzZWQgYXJvdW5k
IHdpdGggZGlmZmVyZW50IG5hbWVzLiBHaXZpbmcgc2ltcGxlIGFuZCBkZXNj
cmlwdGl2ZSBuYW1lcyB0byB5b3VyIHZhcmlhYmxlcyBpcyBpbXBvcnRhbnQg
aW4gbWFraW5nIHlvdXIgY29kZSByZWFkYWJsZSBieSBvdGhlcnMuIEdlbmVy
YWxseSBzcGVha2luZyBpbiBub2RlIHByb2dyYW1zIHdoZW4geW91IHNlZSBh
IHZhcmlhYmxlIGxpa2UgYGNhbGxiYWNrYCBvciBgY2JgIHlvdSBjYW4gYXNz
dW1lIGl0IGlzIGEgZnVuY3Rpb24uCgpZb3UgbWF5IGhhdmUgaGVhcmQgdGhl
IHRlcm1zICdldmVudGVkIHByb2dyYW1taW5nJyBvciAnZXZlbnQgbG9vcCcu
IFRoZXkgcmVmZXIgdG8gdGhlIHdheSB0aGF0IGByZWFkRmlsZWAgaXMgaW1w
bGVtZW50ZWQuIE5vZGUgZmlyc3QgZGlzcGF0Y2hlcyB0aGUgYHJlYWRGaWxl
YCBvcGVyYXRpb24gYW5kIHRoZW4gd2FpdHMgZm9yIGByZWFkRmlsZWAgdG8g
c2VuZCBpdCBhbiBldmVudCB0aGF0IGl0IGhhcyBjb21wbGV0ZWQuIFdoaWxl
IGl0IGlzIHdhaXRpbmcgbm9kZSBjYW4gZ28gY2hlY2sgb24gb3RoZXIgdGhp
bmdzLiBJbnNpZGUgbm9kZSB0aGVyZSBpcyBhIGxpc3Qgb2YgdGhpbmdzIHRo
YXQgYXJlIGRpc3BhdGNoZWQgYnV0IGhhdmVuJ3QgcmVwb3J0ZWQgYmFjayB5
ZXQsIHNvIG5vZGUgbG9vcHMgb3ZlciB0aGUgbGlzdCBhZ2FpbiBhbmQgYWdh
aW4gY2hlY2tpbmcgdG8gc2VlIGlmIHRoZXkgYXJlIGZpbmlzaGVkLiBBZnRl
ciB0aGV5IGZpbmlzaGVkIHRoZXkgZ2V0ICdwcm9jZXNzZWQnLCBlLmcuIGFu
eSBjYWxsYmFja3MgdGhhdCBkZXBlbmRlZCBvbiB0aGVtIGZpbmlzaGluZyB3
aWxsIGdldCBpbnZva2VkLgoKSGVyZSBpcyBhIHBzZXVkb2NvZGUgdmVyc2lv
biBvZiB0aGUgYWJvdmUgZXhhbXBsZToKCmBgYGpzCmZ1bmN0aW9uIGFkZE9u
ZSh0aGVuUnVuVGhpc0Z1bmN0aW9uKSB7CiAgd2FpdEFNaW51dGVBc3luYyhm
dW5jdGlvbiB3YWl0ZWRBTWludXRlKCkgewogICAgdGhlblJ1blRoaXNGdW5j
dGlvbigpCiAgfSkKfQoKYWRkT25lKGZ1bmN0aW9uIHRoaXNHZXRzUnVuQWZ0
ZXJBZGRPbmVGaW5pc2hlcygpIHt9KQpgYGAKCkltYWdpbmUgeW91IGhhZCAz
IGFzeW5jIGZ1bmN0aW9ucyBgYWAsIGBiYCBhbmQgYGNgLiBFYWNoIG9uZSB0
YWtlcyAxIG1pbnV0ZSB0byBydW4gYW5kIGFmdGVyIGl0IGZpbmlzaGVzIGl0
IGNhbGxzIGEgY2FsbGJhY2sgKHRoYXQgZ2V0cyBwYXNzZWQgaW4gdGhlIGZp
cnN0IGFyZ3VtZW50KS4gSWYgeW91IHdhbnRlZCB0byB0ZWxsIG5vZGUgJ3N0
YXJ0IHJ1bm5pbmcgYSwgdGhlbiBydW4gYiBhZnRlciBhIGZpbmlzaGVzLCBh
bmQgdGhlbiBydW4gYyBhZnRlciBiIGZpbmlzaGVzJyBpdCB3b3VsZCBsb29r
IGxpa2UgdGhpczoKCmBgYGpzCmEoZnVuY3Rpb24oKSB7CiAgYihmdW5jdGlv
bigpIHsKICAgIGMoKQogIH0pCn0pCmBgYAoKV2hlbiB0aGlzIGNvZGUgZ2V0
cyBleGVjdXRlZCwgYGFgIHdpbGwgaW1tZWRpYXRlbHkgc3RhcnQgcnVubmlu
ZywgdGhlbiBhIG1pbnV0ZSBsYXRlciBpdCB3aWxsIGZpbmlzaCBhbmQgY2Fs
bCBgYmAsIHRoZW4gYSBtaW51dGUgbGF0ZXIgaXQgd2lsbCBmaW5pc2ggYW5k
IGNhbGwgYGNgIGFuZCBmaW5hbGx5IDMgbWludXRlcyBsYXRlciBub2RlIHdp
bGwgc3RvcCBydW5uaW5nIHNpbmNlIHRoZXJlIHdvdWxkIGJlIG5vdGhpbmcg
bW9yZSB0byBkby4gVGhlcmUgYXJlIGRlZmluaXRlbHkgbW9yZSBlbGVnYW50
IHdheXMgdG8gd3JpdGUgdGhlIGFib3ZlIGV4YW1wbGUsIGJ1dCB0aGUgcG9p
bnQgaXMgdGhhdCBpZiB5b3UgaGF2ZSBjb2RlIHRoYXQgaGFzIHRvIHdhaXQg
Zm9yIHNvbWUgb3RoZXIgYXN5bmMgY29kZSB0byBmaW5pc2ggdGhlbiB5b3Ug
ZXhwcmVzcyB0aGF0IGRlcGVuZGVuY3kgYnkgcHV0dGluZyB5b3VyIGNvZGUg
aW4gZnVuY3Rpb25zIHRoYXQgZ2V0IHBhc3NlZCBhcm91bmQgYXMgY2FsbGJh
Y2tzLgoKVGhlIGRlc2lnbiBvZiBub2RlIHJlcXVpcmVzIHlvdSB0byB0aGlu
ayBub24tbGluZWFybHkuIENvbnNpZGVyIHRoaXMgbGlzdCBvZiBvcGVyYXRp
b25zOgoKYGBgCnJlYWQgYSBmaWxlCnByb2Nlc3MgdGhhdCBmaWxlCmBgYAoK
SWYgeW91IHdlcmUgdG8gdHVybiB0aGlzIGludG8gcHNldWRvY29kZSB5b3Ug
d291bGQgZW5kIHVwIHdpdGggdGhpczoKCmBgYAp2YXIgZmlsZSA9IHJlYWRG
aWxlKCkKcHJvY2Vzc0ZpbGUoZmlsZSkKYGBgCgpUaGlzIGtpbmQgb2YgbGlu
ZWFyIChzdGVwLWJ5LXN0ZXAsIGluIG9yZGVyKSBjb2RlIGlzbid0IHRoZSB3
YXkgdGhhdCBub2RlIHdvcmtzLiBJZiB0aGlzIGNvZGUgd2VyZSB0byBnZXQg
ZXhlY3V0ZWQgdGhlbiBgcmVhZEZpbGVgIGFuZCBgcHJvY2Vzc0ZpbGVgIHdv
dWxkIGJvdGggZ2V0IGV4ZWN1dGVkIGF0IHRoZSBzYW1lIGV4YWN0IHRpbWUu
IFRoaXMgZG9lc24ndCBtYWtlIHNlbnNlIHNpbmNlIGByZWFkRmlsZWAgd2ls
bCB0YWtlIGEgd2hpbGUgdG8gY29tcGxldGUuIEluc3RlYWQgeW91IG5lZWQg
dG8gZXhwcmVzcyB0aGF0IGBwcm9jZXNzRmlsZWAgZGVwZW5kcyBvbiBgcmVh
ZEZpbGVgIGZpbmlzaGluZy4gVGhpcyBpcyBleGFjdGx5IHdoYXQgY2FsbGJh
Y2tzIGFyZSBmb3IhIEFuZCBiZWNhdXNlIG9mIHRoZSB3YXkgdGhhdCBKYXZh
U2NyaXB0IHdvcmtzIHlvdSBjYW4gd3JpdGUgdGhpcyBkZXBlbmRlbmN5IG1h
bnkgZGlmZmVyZW50IHdheXM6CgpgYGBqcwp2YXIgZnMgPSByZXF1aXJlKCdm
cycpCmZzLnJlYWRGaWxlKCdtb3ZpZS5tcDQnLCBmaW5pc2hlZFJlYWRpbmcp
CgpmdW5jdGlvbiBmaW5pc2hlZFJlYWRpbmcoZXJyb3IsIG1vdmllRGF0YSkg
ewogIGlmIChlcnJvcikgcmV0dXJuIGNvbnNvbGUuZXJyb3IoZXJyb3IpCiAg
Ly8gZG8gc29tZXRoaW5nIHdpdGggdGhlIG1vdmllRGF0YQp9CmBgYAoKQnV0
IHlvdSBjb3VsZCBhbHNvIHN0cnVjdHVyZSB5b3VyIGNvZGUgbGlrZSB0aGlz
IGFuZCBpdCB3b3VsZCBzdGlsbCB3b3JrOgoKYGBganMKdmFyIGZzID0gcmVx
dWlyZSgnZnMnKQoKZnVuY3Rpb24gZmluaXNoZWRSZWFkaW5nKGVycm9yLCBt
b3ZpZURhdGEpIHsKICBpZiAoZXJyb3IpIHJldHVybiBjb25zb2xlLmVycm9y
KGVycm9yKQogIC8vIGRvIHNvbWV0aGluZyB3aXRoIHRoZSBtb3ZpZURhdGEK
fQoKZnMucmVhZEZpbGUoJ21vdmllLm1wNCcsIGZpbmlzaGVkUmVhZGluZykK
YGBgCgpPciBldmVuIGxpa2UgdGhpczoKCmBgYGpzCnZhciBmcyA9IHJlcXVp
cmUoJ2ZzJykKCmZzLnJlYWRGaWxlKCdtb3ZpZS5tcDQnLCBmdW5jdGlvbiBm
aW5pc2hlZFJlYWRpbmcoZXJyb3IsIG1vdmllRGF0YSkgewogIGlmIChlcnJv
cikgcmV0dXJuIGNvbnNvbGUuZXJyb3IoZXJyb3IpCiAgLy8gZG8gc29tZXRo
aW5nIHdpdGggdGhlIG1vdmllRGF0YQp9KQpgYGAKCiMjIEV2ZW50cwoKSW4g
bm9kZSBpZiB5b3UgcmVxdWlyZSB0aGUgW2V2ZW50c10oaHR0cHM6Ly9ub2Rl
anMub3JnL2FwaS9ldmVudHMuaHRtbCkgbW9kdWxlIHlvdSBjYW4gdXNlIHRo
ZSBzby1jYWxsZWQgJ2V2ZW50IGVtaXR0ZXInIHRoYXQgbm9kZSBpdHNlbGYg
dXNlcyBmb3IgYWxsIG9mIGl0cyBBUElzIHRoYXQgZW1pdCB0aGluZ3MuCgpF
dmVudHMgYXJlIGEgY29tbW9uIHBhdHRlcm4gaW4gcHJvZ3JhbW1pbmcsIGtu
b3duIG1vcmUgd2lkZWx5IGFzIHRoZSBbJ29ic2VydmVyIHBhdHRlcm4nXSho
dHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9PYnNlcnZlcl9wYXR0ZXJu
KSBvciAncHViL3N1YicgKHB1Ymxpc2gvc3Vic2NyaWJlKS4gV2hlcmVhcyBj
YWxsYmFja3MgYXJlIGEgb25lLXRvLW9uZSByZWxhdGlvbnNoaXAgYmV0d2Vl
biB0aGUgdGhpbmcgd2FpdGluZyBmb3IgdGhlIGNhbGxiYWNrIGFuZCB0aGUg
dGhpbmcgY2FsbGluZyB0aGUgY2FsbGJhY2ssIGV2ZW50cyBhcmUgdGhlIHNh
bWUgZXhhY3QgcGF0dGVybiBleGNlcHQgd2l0aCBhIG1hbnktdG8tbWFueSBB
UEkuCgpUaGUgZWFzaWVzdCB3YXkgdG8gdGhpbmsgYWJvdXQgZXZlbnRzIGlz
IHRoYXQgdGhleSBsZXQgeW91IHN1YnNjcmliZSB0byB0aGluZ3MuIFlvdSBj
YW4gc2F5ICd3aGVuIFggZG8gWScsIHdoZXJlYXMgd2l0aCBwbGFpbiBjYWxs
YmFja3MgaXQgaXMgJ2RvIFggdGhlbiBZJy4KCkhlcmUgYXJlIGZldyBjb21t
b24gdXNlIGNhc2VzIGZvciB1c2luZyBldmVudHMgaW5zdGVhZCBvZiBwbGFp
biBjYWxsYmFja3M6CgotIENoYXQgcm9vbSB3aGVyZSB5b3Ugd2FudCB0byBi
cm9hZGNhc3QgbWVzc2FnZXMgdG8gbWFueSBsaXN0ZW5lcnMKLSBHYW1lIHNl
cnZlciB0aGF0IG5lZWRzIHRvIGtub3cgd2hlbiBuZXcgcGxheWVycyBjb25u
ZWN0LCBkaXNjb25uZWN0LCBtb3ZlLCBzaG9vdCBhbmQganVtcAotIEdhbWUg
ZW5naW5lIHdoZXJlIHlvdSB3YW50IHRvIGxldCBnYW1lIGRldmVsb3BlcnMg
c3Vic2NyaWJlIHRvIGV2ZW50cyBsaWtlIGAub24oJ2p1bXAnLCBmdW5jdGlv
bigpIHt9KWAKLSBBIGxvdyBsZXZlbCB3ZWIgc2VydmVyIHRoYXQgd2FudHMg
dG8gZXhwb3NlIGFuIEFQSSB0byBlYXNpbHkgaG9vayBpbnRvIGV2ZW50cyB0
aGF0IGhhcHBlbiBsaWtlIGAub24oJ2luY29taW5nUmVxdWVzdCcpYCBvciBg
Lm9uKCdzZXJ2ZXJFcnJvcicpYAoKSWYgd2Ugd2VyZSB0cnlpbmcgdG8gd3Jp
dGUgYSBtb2R1bGUgdGhhdCBjb25uZWN0cyB0byBhIGNoYXQgc2VydmVyIHVz
aW5nIG9ubHkgY2FsbGJhY2tzIGl0IHdvdWxkIGxvb2sgbGlrZSB0aGlzOgoK
YGBganMKdmFyIGNoYXRDbGllbnQgPSByZXF1aXJlKCdteS1jaGF0LWNsaWVu
dCcpCgpmdW5jdGlvbiBvbkNvbm5lY3QoKSB7CiAgLy8gaGF2ZSB0aGUgVUkg
c2hvdyB3ZSBhcmUgY29ubmVjdGVkCn0KCmZ1bmN0aW9uIG9uQ29ubmVjdGlv
bkVycm9yKGVycm9yKSB7CiAgLy8gc2hvdyBlcnJvciB0byB0aGUgdXNlcgp9
CgpmdW5jdGlvbiBvbkRpc2Nvbm5lY3QoKSB7CiAvLyB0ZWxsIHVzZXIgdGhh
dCB0aGV5IGhhdmUgYmVlbiBkaXNjb25uZWN0ZWQKfQoKZnVuY3Rpb24gb25N
ZXNzYWdlKG1lc3NhZ2UpIHsKIC8vIHNob3cgdGhlIGNoYXQgcm9vbSBtZXNz
YWdlIGluIHRoZSBVSQp9CgpjaGF0Q2xpZW50LmNvbm5lY3QoCiAgJ2h0dHA6
Ly9teWNoYXRzZXJ2ZXIuY29tJywKICBvbkNvbm5lY3QsCiAgb25Db25uZWN0
aW9uRXJyb3IsCiAgb25EaXNjb25uZWN0LAogIG9uTWVzc2FnZQopCmBgYAoK
QXMgeW91IGNhbiBzZWUgdGhpcyBpcyByZWFsbHkgY3VtYmVyc29tZSBiZWNh
dXNlIG9mIGFsbCBvZiB0aGUgZnVuY3Rpb25zIHRoYXQgeW91IGhhdmUgdG8g
cGFzcyBpbiBhIHNwZWNpZmljIG9yZGVyIHRvIHRoZSBgLmNvbm5lY3RgIGZ1
bmN0aW9uLiBXcml0aW5nIHRoaXMgd2l0aCBldmVudHMgd291bGQgbG9vayBs
aWtlIHRoaXM6CgpgYGBqcwp2YXIgY2hhdENsaWVudCA9IHJlcXVpcmUoJ215
LWNoYXQtY2xpZW50JykuY29ubmVjdCgpCgpjaGF0Q2xpZW50Lm9uKCdjb25u
ZWN0JywgZnVuY3Rpb24oKSB7CiAgLy8gaGF2ZSB0aGUgVUkgc2hvdyB3ZSBh
cmUgY29ubmVjdGVkCn0pIAoKY2hhdENsaWVudC5vbignY29ubmVjdGlvbkVy
cm9yJywgZnVuY3Rpb24oKSB7CiAgLy8gc2hvdyBlcnJvciB0byB0aGUgdXNl
cgp9KQoKY2hhdENsaWVudC5vbignZGlzY29ubmVjdCcsIGZ1bmN0aW9uKCkg
ewogIC8vIHRlbGwgdXNlciB0aGF0IHRoZXkgaGF2ZSBiZWVuIGRpc2Nvbm5l
Y3RlZAp9KQoKY2hhdENsaWVudC5vbignbWVzc2FnZScsIGZ1bmN0aW9uKCkg
ewogIC8vIHNob3cgdGhlIGNoYXQgcm9vbSBtZXNzYWdlIGluIHRoZSBVSQp9
KQpgYGAKClRoaXMgYXBwcm9hY2ggaXMgc2ltaWxhciB0byB0aGUgcHVyZS1j
YWxsYmFjayBhcHByb2FjaCBidXQgaW50cm9kdWNlcyB0aGUgYC5vbmAgbWV0
aG9kLCB3aGljaCBzdWJzY3JpYmVzIGEgY2FsbGJhY2sgdG8gYW4gZXZlbnQu
IFRoaXMgbWVhbnMgeW91IGNhbiBjaG9vc2Ugd2hpY2ggZXZlbnRzIHlvdSB3
YW50IHRvIHN1YnNjcmliZSB0byBmcm9tIHRoZSBgY2hhdENsaWVudGAuIFlv
dSBjYW4gYWxzbyBzdWJzY3JpYmUgdG8gdGhlIHNhbWUgZXZlbnQgbXVsdGlw
bGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgY2FsbGJhY2tzOgoKYGBganMKdmFy
IGNoYXRDbGllbnQgPSByZXF1aXJlKCdteS1jaGF0LWNsaWVudCcpLmNvbm5l
Y3QoKQpjaGF0Q2xpZW50Lm9uKCdtZXNzYWdlJywgbG9nTWVzc2FnZSkKY2hh
dENsaWVudC5vbignbWVzc2FnZScsIHN0b3JlTWVzc2FnZSkKCmZ1bmN0aW9u
IGxvZ01lc3NhZ2UobWVzc2FnZSkgewogIGNvbnNvbGUubG9nKG1lc3NhZ2Up
Cn0KCmZ1bmN0aW9uIHN0b3JlTWVzc2FnZShtZXNzYWdlKSB7CiAgbXlEYXRh
YmFzZS5zYXZlKG1lc3NhZ2UpCn0KYGBgCgojIyBTdHJlYW1zCgpFYXJseSBv
biBpbiB0aGUgbm9kZSBwcm9qZWN0IHRoZSBmaWxlIHN5c3RlbSBhbmQgbmV0
d29yayBBUElzIGhhZCB0aGVpciBvd24gc2VwYXJhdGUgcGF0dGVybnMgZm9y
IGRlYWxpbmcgd2l0aCBzdHJlYW1pbmcgSS9PLiBGb3IgZXhhbXBsZSwgZmls
ZXMgaW4gYSBmaWxlIHN5c3RlbSBoYXZlIHRoaW5ncyBjYWxsZWQgJ2ZpbGUg
ZGVzY3JpcHRvcnMnIHNvIHRoZSBgZnNgIG1vZHVsZSBoYWQgdG8gaGF2ZSBl
eHRyYSBsb2dpYyB0byBrZWVwIHRyYWNrIG9mIHRoZXNlIHRoaW5ncyB3aGVy
ZWFzIHRoZSBuZXR3b3JrIG1vZHVsZXMgZGlkbid0IGhhdmUgc3VjaCBhIGNv
bmNlcHQuIERlc3BpdGUgbWlub3IgZGlmZmVyZW5jZXMgaW4gc2VtYW50aWNz
IGxpa2UgdGhlc2UsIGF0IGEgZnVuZGFtZW50YWwgbGV2ZWwgYm90aCBncm91
cHMgb2YgY29kZSB3ZXJlIGR1cGxpY2F0aW5nIGEgbG90IG9mIGZ1bmN0aW9u
YWxpdHkgd2hlbiBpdCBjYW1lIHRvIHJlYWRpbmcgZGF0YSBpbiBhbmQgb3V0
LiBUaGUgdGVhbSB3b3JraW5nIG9uIG5vZGUgcmVhbGl6ZWQgdGhhdCBpdCB3
b3VsZCBiZSBjb25mdXNpbmcgdG8gaGF2ZSB0byBsZWFybiB0d28gc2V0cyBv
ZiBzZW1hbnRpY3MgdG8gZXNzZW50aWFsbHkgZG8gdGhlIHNhbWUgdGhpbmcg
c28gdGhleSBtYWRlIGEgbmV3IEFQSSBjYWxsZWQgdGhlIGBTdHJlYW1gIGFu
ZCBtYWRlIGFsbCB0aGUgbmV0d29yayBhbmQgZmlsZSBzeXN0ZW0gY29kZSB1
c2UgaXQuIAoKVGhlIHdob2xlIHBvaW50IG9mIG5vZGUgaXMgdG8gbWFrZSBp
dCBlYXN5IHRvIGRlYWwgd2l0aCBmaWxlIHN5c3RlbXMgYW5kIG5ldHdvcmtz
IHNvIGl0IG1hZGUgc2Vuc2UgdG8gaGF2ZSBvbmUgcGF0dGVybiB0aGF0IHdh
cyB1c2VkIGV2ZXJ5d2hlcmUuIFRoZSBnb29kIG5ld3MgaXMgdGhhdCBtb3N0
IG9mIHRoZSBwYXR0ZXJucyBsaWtlIHRoZXNlICh0aGVyZSBhcmUgb25seSBh
IGZldyBhbnl3YXkpIGhhdmUgYmVlbiBmaWd1cmVkIG91dCBhdCB0aGlzIHBv
aW50IGFuZCBpdCBpcyB2ZXJ5IHVubGlrZWx5IHRoYXQgbm9kZSB3aWxsIGNo
YW5nZSB0aGF0IG11Y2ggaW4gdGhlIGZ1dHVyZS4KClRoZXJlIGFyZSBhbHJl
YWR5IHR3byBncmVhdCByZXNvdXJjZXMgdGhhdCB5b3UgY2FuIHVzZSB0byBs
ZWFybiBhYm91dCBub2RlIHN0cmVhbXMuIE9uZSBpcyB0aGUgc3RyZWFtLWFk
dmVudHVyZSAoc2VlIHRoZSBMZWFybiBOb2RlIEludGVyYWN0aXZlbHkgc2Vj
dGlvbikgYW5kIHRoZSBvdGhlciBpcyBhIHJlZmVyZW5jZSBjYWxsZWQgdGhl
IFN0cmVhbSBIYW5kYm9vay4KCiMjIyBTdHJlYW0gSGFuZGJvb2sKCltzdHJl
YW0taGFuZGJvb2tdKGh0dHBzOi8vZ2l0aHViLmNvbS9zdWJzdGFjay9zdHJl
YW0taGFuZGJvb2sjaW50cm9kdWN0aW9uKSBpcyBhIGd1aWRlLCBzaW1pbGFy
IHRvIHRoaXMgb25lLCB0aGF0IGNvbnRhaW5zIGEgcmVmZXJlbmNlIGZvciBl
dmVyeXRoaW5nIHlvdSBjb3VsZCBwb3NzaWJseSBuZWVkIHRvIGtub3cgYWJv
dXQgc3RyZWFtcy4KClshW3N0cmVhbS1oYW5kYm9va10oc3RyZWFtLWhhbmRi
b29rLnBuZyldKGh0dHBzOi8vZ2l0aHViLmNvbS9zdWJzdGFjay9zdHJlYW0t
aGFuZGJvb2spCgojIyBNb2R1bGVzCgpOb2RlIGNvcmUgaXMgbWFkZSB1cCBv
ZiBhYm91dCB0d28gZG96ZW4gbW9kdWxlcywgc29tZSBsb3dlciBsZXZlbCBv
bmVzIGxpa2UgYGV2ZW50c2AgYW5kIGBzdHJlYW1gIHNvbWUgaGlnaGVyIGxl
dmVsIG9uZXMgbGlrZSBgaHR0cGAgYW5kIGBjcnlwdG9gLgoKVGhpcyBkZXNp
Z24gaXMgaW50ZW50aW9uYWwuIE5vZGUgY29yZSBpcyBzdXBwb3NlZCB0byBi
ZSBzbWFsbCwgYW5kIHRoZSBtb2R1bGVzIGluIGNvcmUgc2hvdWxkIGJlIGZv
Y3VzZWQgb24gcHJvdmlkaW5nIHRvb2xzIGZvciB3b3JraW5nIHdpdGggY29t
bW9uIEkvTyBwcm90b2NvbHMgYW5kIGZvcm1hdHMgaW4gYSB3YXkgdGhhdCBp
cyBjcm9zcy1wbGF0Zm9ybS4KCkZvciBldmVyeXRoaW5nIGVsc2UgdGhlcmUg
aXMgW25wbV0oaHR0cHM6Ly93d3cubnBtanMuY29tLykuIEFueW9uZSBjYW4g
Y3JlYXRlIGEgbmV3IG5vZGUgbW9kdWxlIHRoYXQgYWRkcyBzb21lIGZ1bmN0
aW9uYWxpdHkgYW5kIHB1Ymxpc2ggaXQgdG8gbnBtLiBBcyBvZiB0aGUgdGlt
ZSBvZiB0aGlzIHdyaXRpbmcgdGhlcmUgYXJlIDM0LDAwMCBtb2R1bGVzIG9u
IG5wbS4KCiMjIyBIb3cgdG8gZmluZCBhIG1vZHVsZQoKSW1hZ2luZSB5b3Ug
YXJlIHRyeWluZyB0byBjb252ZXJ0IFBERiBmaWxlcyBpbnRvIFRYVCBmaWxl
cy4gVGhlIGJlc3QgcGxhY2UgdG8gc3RhcnQgaXMgYnkgZG9pbmcgYG5wbSBz
ZWFyY2ggcGRmYDoKCiFbcGRmc2VhcmNoXShucG0tc2VhcmNoLnBuZykKClRo
ZXJlIGFyZSBhIHRvbiBvZiByZXN1bHRzISBucG0gaXMgcXVpdGUgcG9wdWxh
ciBhbmQgeW91IHdpbGwgdXN1YWxseSBiZSBhYmxlIHRvIGZpbmQgbXVsdGlw
bGUgcG90ZW50aWFsIHNvbHV0aW9ucy4gSWYgeW91IGdvIHRocm91Z2ggZWFj
aCBtb2R1bGUgYW5kIHdoaXR0bGUgZG93biB0aGUgcmVzdWx0cyBpbnRvIGEg
bW9yZSBuYXJyb3cgc2V0IChmaWx0ZXJpbmcgb3V0IHRoaW5ncyBsaWtlIFBE
RiBnZW5lcmF0aW9uIG1vZHVsZXMpIHlvdSdsbCBlbmQgdXAgd2l0aCB0aGVz
ZToKCi0gW2h1bW11c10oaHR0cHM6Ly9naXRodWIuY29tL2dhbGthaGFuYS9I
dW1tdXNKUy93aWtpL0ZlYXR1cmVzKSAtIGMrKyBwZGYgbWFuaXB1bGF0b3IK
LSBbbWltZW9ncmFwaF0oaHR0cHM6Ly9naXRodWIuY29tL3N0ZWVsVGhyZWFk
L21pbWVvZ3JhcGgpIC0gYXBpIG9uIGEgY29uZ2xvbWVyYXRpb24gb2YgdG9v
bHMgKHBvcHBsZXIsIHRlc3NlcmFjdCwgaW1hZ2VtYWdpY2sgZXRjKQotIFtw
ZGZ0b3RleHRqc10oaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvcGRm
dG90ZXh0anMpIC0gd3JhcHBlciBhcm91bmQgW3BkZnRvdGV4dF0oaHR0cHM6
Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvUGRmdG90ZXh0KQotIFtwZGYtdGV4
dC1leHRyYWN0XShodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9wZGYt
dGV4dC1leHRyYWN0KSAtIGFub3RoZXIgd3JhcHBlciBhcm91bmQgcGRmdG90
ZXh0Ci0gW3BkZi1leHRyYWN0XShodHRwczovL3d3dy5ucG1qcy5jb20vcGFj
a2FnZS9wZGYtZXh0cmFjdCkgLSB3cmFwcGVyIGFyb3VuZCBwZGZ0b3RleHQs
IHBkZnRrLCB0ZXNzZXJhY3QsIGdob3N0c2NyaXB0Ci0gW3BkZnV0aWxzXSho
dHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9wZGZ1dGlscykgLSBwb3Bw
bGVyIHdyYXBwZXIKLSBbc2Npc3NvcnNdKGh0dHBzOi8vd3d3Lm5wbWpzLmNv
bS9wYWNrYWdlL3NjaXNzb3JzKSAtIHBkZnRrLCBnaG9zdHNjcmlwdCB3cmFw
cGVyIHcvIGhpZ2ggbGV2ZWwgYXBpCi0gW3RleHRyYWN0XShodHRwczovL3d3
dy5ucG1qcy5jb20vcGFja2FnZS90ZXh0cmFjdCkgLSBwZGZ0b3RleHQgd3Jh
cHBlcgotIFtwZGZpaWpzXShodHRwczovL2dpdGh1Yi5jb20vZmFnYm9rZm9y
bGFnZXQvcGRmaWlqcykgLSBwZGYgdG8gaW52ZXJ0ZWQgaW5kZXggdXNpbmcg
dGV4dGlpanMgYW5kIHBvcHBsZXIKLSBbcGRmMmpzb25dKGh0dHBzOi8vZ2l0
aHViLmNvbS9tb2Rlc3R5L3BkZjJqc29uL2Jsb2IvbWFzdGVyL3JlYWRtZS5t
ZCkgLSBwdXJlIGpzIHBkZiB0byBqc29uCgpBIGxvdCBvZiB0aGUgbW9kdWxl
cyBoYXZlIG92ZXJsYXBwaW5nIGZ1bmN0aW9uYWxpdHkgYnV0IHByZXNlbnQg
YWx0ZXJuYXRlIEFQSXMgYW5kIG1vc3Qgb2YgdGhlbSByZXF1aXJlIGV4dGVy
bmFsIGRlcGVuZGVuY2llcyAobGlrZSBgYXB0LWdldCBpbnN0YWxsIHBvcHBs
ZXJgKS4KCkhlcmUgYXJlIHNvbWUgZGlmZmVyZW50IHdheXMgdG8gaW50ZXJw
cmV0IHRoZSBtb2R1bGVzOgoKLSBgcGRmMmpzb25gIGlzIHRoZSBvbmx5IG9u
ZSB0aGF0IGlzIHdyaXR0ZW4gaW4gcHVyZSBKYXZhU2NyaXB0LCB3aGljaCBt
ZWFucyBpdCBpcyB0aGUgZWFzaWVzdCB0byBpbnN0YWxsLCBlc3BlY2lhbGx5
IG9uIGxvdyBwb3dlciBkZXZpY2VzIGxpa2UgdGhlIHJhc3BiZXJyeSBwaSBv
ciBvbiBXaW5kb3dzIHdoZXJlIG5hdGl2ZSBjb2RlIG1pZ2h0IG5vdCBiZSBj
cm9zcyBwbGF0Zm9ybS4KLSBtb2R1bGVzIGxpa2UgYG1pbWVvZ3JhcGhgLCBg
aHVtbXVzYCBhbmQgYHBkZi1leHRyYWN0YCBlYWNoIGNvbWJpbmUgbXVsdGlw
bGUgbG93ZXIgbGV2ZWwgbW9kdWxlcyB0byBleHBvc2UgYSBoaWdoIGxldmVs
IEFQSQotIGEgbG90IG9mIG1vZHVsZXMgc2VlbSB0byBzaXQgb24gdG9wIG9m
IHRoZSBgcGRmdG90ZXh0YC9gcG9wcGxlcmAgdW5peCBjb21tYW5kIGxpbmUg
dG9vbHMKCkxldHMgY29tcGFyZSB0aGUgZGlmZmVyZW5jZXMgYmV0d2VlbiBg
cGRmdG90ZXh0anNgIGFuZCBgcGRmLXRleHQtZXh0cmFjdGAsIGJvdGggb2Yg
d2hpY2ggYXJlIGFyZSB3cmFwcGVycyBhcm91bmQgdGhlIGBwZGZ0b3RleHRg
IHV0aWxpdHkuCgohW3BkZi1tb2R1bGVzXShwZGYtbW9kdWxlcy5wbmcpCgpC
b3RoIG9mIHRoZXNlOgoKLSB3ZXJlIHVwZGF0ZWQgcmVsYXRpdmVseSByZWNl
bnRseQotIGhhdmUgZ2l0aHViIHJlcG9zaXRvcmllcyBsaW5rZWQgKHRoaXMg
aXMgdmVyeSBpbXBvcnRhbnQhKQotIGhhdmUgUkVBRE1FcwotIGhhdmUgYXQg
bGVhc3Qgc29tZSBudW1iZXIgb2YgcGVvcGxlIGluc3RhbGxpbmcgdGhlbSBl
dmVyeSB3ZWVrCi0gYXJlIGxpYmVyYWxseSBsaWNlbnNlZCAoYW55b25lIGNh
biB1c2UgdGhlbSkKCkp1c3QgbG9va2luZyBhdCB0aGUgYHBhY2thZ2UuanNv
bmAgKyBtb2R1bGUgc3RhdGlzdGljcyBpdCdzIGhhcmQgdG8gZ2V0IGEgZmVl
bGluZyBhYm91dCB3aGljaCBvbmUgbWlnaHQgYmUgdGhlIHJpZ2h0IGNob2lj
ZS4gTGV0J3MgY29tcGFyZSB0aGUgUkVBRE1FczoKCiFbcGRmLXJlYWRtZXNd
KHBkZi1yZWFkbWVzLnBuZykKCkJvdGggaGF2ZSBzaW1wbGUgZGVzY3JpcHRp
b25zLCBDSSBiYWRnZXMsIGluc3RhbGxhdGlvbiBpbnN0cnVjdGlvbnMsIGNs
ZWFyIGV4YW1wbGVzIGFuZCBpbnN0cnVjdGlvbnMgZm9yIHJ1bm5pbmcgdGhl
IHRlc3RzLiBHcmVhdCEgQnV0IHdoaWNoIG9uZSBkbyB3ZSB1c2U/IExldCdz
IGNvbXBhcmUgdGhlIGNvZGU6CgohW3BkZi1jb2RlXShwZGYtY29kZS5wbmcp
CgpgcGRmdG90ZXh0anNgIGlzIGFyb3VuZCAxMTAgbGluZXMgb2YgY29kZSwg
YW5kIGBwZGYtdGV4dC1leHRyYWN0YCBpcyBhcm91bmQgNDAsIGJ1dCBib3Ro
IGVzc2VudGlhbGx5IGJvaWwgZG93biB0byB0aGlzIGxpbmU6CgpgYGAKdmFy
IGNoaWxkID0gc2hlbGwuZXhlYygncGRmdG90ZXh0ICcgKyBzZWxmLm9wdGlv
bnMuYWRkaXRpb25hbC5qb2luKCcgJykpOwpgYGAKCkRvZXMgdGhpcyBtYWtl
IG9uZSBhbnkgYmV0dGVyIHRoYW4gdGhlIG90aGVyPyBIYXJkIHRvIHNheSEg
SXQncyBpbXBvcnRhbnQgdG8gYWN0dWFsbHkgKnJlYWQqIHRoZSBjb2RlIGFu
ZCBtYWtlIHlvdXIgb3duIGNvbmNsdXNpb25zLiBJZiB5b3UgZmluZCBhIG1v
ZHVsZSB5b3UgbGlrZSwgdXNlIGBucG0gc3RhciBtb2R1bGVuYW1lYCB0byBn
aXZlIG5wbSBmZWVkYmFjayBhYm91dCBtb2R1bGVzIHRoYXQgeW91IGhhZCBh
IHBvc2l0aXZlIGV4cGVyaWVuY2Ugd2l0aC4KCiMjIyBNb2R1bGFyIGRldmVs
b3BtZW50IHdvcmtmbG93CgpucG0gaXMgZGlmZmVyZW50IGZyb20gbW9zdCBw
YWNrYWdlIG1hbmFnZXJzIGluIHRoYXQgaXQgaW5zdGFsbHMgbW9kdWxlcyBp
bnRvIGEgZm9sZGVyIGluc2lkZSBvZiBvdGhlciBleGlzdGluZyBtb2R1bGVz
LiBUaGUgcHJldmlvdXMgc2VudGVuY2UgbWlnaHQgbm90IG1ha2Ugc2Vuc2Ug
cmlnaHQgbm93IGJ1dCBpdCBpcyB0aGUga2V5IHRvIG5wbSdzIHN1Y2Nlc3Mu
CgpNYW55IHBhY2thZ2UgbWFuYWdlcnMgaW5zdGFsbCB0aGluZ3MgZ2xvYmFs
bHkuIEZvciBpbnN0YW5jZSwgaWYgeW91IGBhcHQtZ2V0IGluc3RhbGwgY291
Y2hkYmAgb24gRGViaWFuIExpbnV4IGl0IHdpbGwgdHJ5IHRvIGluc3RhbGwg
dGhlIGxhdGVzdCBzdGFibGUgdmVyc2lvbiBvZiBDb3VjaERCLiBJZiB5b3Ug
YXJlIHRyeWluZyB0byBpbnN0YWxsIENvdWNoREIgYXMgYSBkZXBlbmRlbmN5
IG9mIHNvbWUgb3RoZXIgcGllY2Ugb2Ygc29mdHdhcmUgYW5kIHRoYXQgc29m
dHdhcmUgbmVlZHMgYW4gb2xkZXIgdmVyc2lvbiBvZiBDb3VjaERCLCB5b3Ug
aGF2ZSB0byB1bmluc3RhbGwgdGhlIG5ld2VyIHZlcnNpb24gb2YgQ291Y2hE
QiBhbmQgdGhlbiBpbnN0YWxsIHRoZSBvbGRlciB2ZXJzaW9uLiBZb3UgY2Fu
J3QgaGF2ZSB0d28gdmVyc2lvbnMgb2YgQ291Y2hEQiBpbnN0YWxsZWQgYmVj
YXVzZSBEZWJpYW4gb25seSBrbm93cyBob3cgdG8gaW5zdGFsbCB0aGluZ3Mg
aW50byBvbmUgcGxhY2UuCgpJdCdzIG5vdCBqdXN0IERlYmlhbiB0aGF0IGRv
ZXMgdGhpcy4gTW9zdCBwcm9ncmFtbWluZyBsYW5ndWFnZSBwYWNrYWdlIG1h
bmFnZXJzIHdvcmsgdGhpcyB3YXkgdG9vLiBUbyBhZGRyZXNzIHRoZSBnbG9i
YWwgZGVwZW5kZW5jaWVzIHByb2JsZW0gZGVzY3JpYmVkIGFib3ZlIHRoZXJl
IGhhdmUgYmVlbiB2aXJ0dWFsIGVudmlyb25tZW50IGRldmVsb3BlZCBsaWtl
IFt2aXJ0dWFsZW52XShodHRwOi8vcHl0aG9uLWd1aWRlLnJlYWR0aGVkb2Nz
Lm9yZy9lbi9sYXRlc3QvZGV2L3ZpcnR1YWxlbnZzLykgZm9yIFB5dGhvbiBv
ciBbYnVuZGxlcl0oaHR0cDovL2J1bmRsZXIuaW8vKSBmb3IgUnVieS4gVGhl
c2UganVzdCBzcGxpdCB5b3VyIGVudmlyb25tZW50IHVwIGluIHRvIG1hbnkg
dmlydHVhbCBlbnZpcm9ubWVudHMsIG9uZSBmb3IgZWFjaCBwcm9qZWN0LCBi
dXQgaW5zaWRlIGVhY2ggZW52aXJvbm1lbnQgZGVwZW5kZW5jaWVzIGFyZSBz
dGlsbCBnbG9iYWxseSBpbnN0YWxsZWQuIFZpcnR1YWwgZW52aXJvbm1lbnRz
IGRvbid0IGFsd2F5cyBzb2x2ZSB0aGUgcHJvYmxlbSwgc29tZXRpbWVzIHRo
ZXkganVzdCBtdWx0aXBseSBpdCBieSBhZGRpbmcgYWRkaXRpb25hbCBsYXll
cnMgb2YgY29tcGxleGl0eS4KCldpdGggbnBtIGluc3RhbGxpbmcgZ2xvYmFs
IG1vZHVsZXMgaXMgYW4gYW50aS1wYXR0ZXJuLiBKdXN0IGxpa2UgaG93IHlv
dSBzaG91bGRuJ3QgdXNlIGdsb2JhbCB2YXJpYWJsZXMgaW4geW91ciBKYXZh
U2NyaXB0IHByb2dyYW1zIHlvdSBhbHNvIHNob3VsZG4ndCBpbnN0YWxsIGds
b2JhbCBtb2R1bGVzICh1bmxlc3MgeW91IG5lZWQgYSBtb2R1bGUgd2l0aCBh
biBleGVjdXRhYmxlIGJpbmFyeSB0byBzaG93IHVwIGluIHlvdXIgZ2xvYmFs
IGBQQVRIYCwgYnV0IHlvdSBkb24ndCBhbHdheXMgbmVlZCB0byBkbyB0aGlz
IC0tIG1vcmUgb24gdGhpcyBsYXRlcikuCgojIyMjIEhvdyBgcmVxdWlyZWAg
d29ya3MKCldoZW4geW91IGNhbGwgYHJlcXVpcmUoJ3NvbWVfbW9kdWxlJylg
IGluIG5vZGUgaGVyZSBpcyB3aGF0IGhhcHBlbnM6CgoxLiBpZiBhIGZpbGUg
Y2FsbGVkIGBzb21lX21vZHVsZS5qc2AgZXhpc3RzIGluIHRoZSBjdXJyZW50
IGZvbGRlciBub2RlIHdpbGwgbG9hZCB0aGF0LCBvdGhlcndpc2U6CjIuIG5v
ZGUgbG9va3MgaW4gdGhlIGN1cnJlbnQgZm9sZGVyIGZvciBhIGBub2RlX21v
ZHVsZXNgIGZvbGRlciB3aXRoIGEgYHNvbWVfbW9kdWxlYCBmb2xkZXIgaW4g
aXQKMy4gaWYgaXQgZG9lc24ndCBmaW5kIGl0LCBpdCB3aWxsIGdvIHVwIG9u
ZSBmb2xkZXIgYW5kIHJlcGVhdCBzdGVwIDIKClRoaXMgY3ljbGUgcmVwZWF0
cyB1bnRpbCBub2RlIHJlYWNoZXMgdGhlIHJvb3QgZm9sZGVyIG9mIHRoZSBm
aWxlc3lzdGVtLCBhdCB3aGljaCBwb2ludCBpdCB3aWxsIHRoZW4gY2hlY2sg
YW55IGdsb2JhbCBtb2R1bGUgZm9sZGVycyAoZS5nLiBgL3Vzci9sb2NhbC9u
b2RlX21vZHVsZXNgIG9uIE1hYyBPUykgYW5kIGlmIGl0IHN0aWxsIGRvZXNu
J3QgZmluZCBgc29tZV9tb2R1bGVgIGl0IHdpbGwgdGhyb3cgYW4gZXhjZXB0
aW9uLgoKSGVyZSdzIGEgdmlzdWFsIGV4YW1wbGU6CgohW21vZC1kaWFncmFt
LTAxXShtb2QtZGlhZ3JhbS0wMS5wbmcpCgpXaGVuIHRoZSBjdXJyZW50IHdv
cmtpbmcgZGlyZWN0b3J5IGlzIGBzdWJzdWJmb2xkZXJgIGFuZCBgcmVxdWly
ZSgnZm9vJylgIGlzIGNhbGxlZCwgbm9kZSB3aWxsIGxvb2sgZm9yIHRoZSBm
b2xkZXIgY2FsbGVkIGBzdWJzdWJmb2xkZXIvbm9kZV9tb2R1bGVzYC4gSW4g
dGhpcyBjYXNlIGl0IHdvbid0IGZpbmQgaXQgLS0gdGhlIGZvbGRlciB0aGVy
ZSBpcyBtaXN0YWtlbmx5IGNhbGxlZCBgbXlfbW9kdWxlc2AuIFRoZW4gbm9k
ZSB3aWxsIGdvIHVwIG9uZSBmb2xkZXIgYW5kIHRyeSBhZ2FpbiwgbWVhbmlu
ZyBpdCB0aGVuIGxvb2tzIGZvciBgc3ViZm9sZGVyX0Ivbm9kZV9tb2R1bGVz
YCwgd2hpY2ggYWxzbyBkb2Vzbid0IGV4aXN0LiBUaGlyZCB0cnkgaXMgYSBj
aGFybSwgdGhvdWdoLCBhcyBgZm9sZGVyL25vZGVfbW9kdWxlc2AgZG9lcyBl
eGlzdCAqYW5kKiBoYXMgYSBmb2xkZXIgY2FsbGVkIGBmb29gIGluc2lkZSBv
ZiBpdC4gSWYgYGZvb2Agd2Fzbid0IGluIHRoZXJlIG5vZGUgd291bGQgY29u
dGludWUgaXRzIHNlYXJjaCB1cCB0aGUgZGlyZWN0b3J5IHRyZWUuCgpOb3Rl
IHRoYXQgaWYgY2FsbGVkIGZyb20gYHN1YmZvbGRlcl9CYCBub2RlIHdpbGwg
bmV2ZXIgZmluZCBgc3ViZm9sZGVyX0Evbm9kZV9tb2R1bGVzYCwgaXQgY2Fu
IG9ubHkgc2VlIGBmb2xkZXIvbm9kZV9tb2R1bGVzYCBvbiBpdHMgd2F5IHVw
IHRoZSB0cmVlLgoKT25lIG9mIHRoZSBiZW5lZml0cyBvZiBucG0ncyBhcHBy
b2FjaCBpcyB0aGF0IG1vZHVsZXMgY2FuIGluc3RhbGwgdGhlaXIgZGVwZW5k
ZW50IG1vZHVsZXMgYXQgc3BlY2lmaWMga25vd24gd29ya2luZyB2ZXJzaW9u
cy4gSW4gdGhpcyBjYXNlIHRoZSBtb2R1bGUgYGZvb2AgaXMgcXVpdGUgcG9w
dWxhciAtIHRoZXJlIGFyZSB0aHJlZSBjb3BpZXMgb2YgaXQsIGVhY2ggb25l
IGluc2lkZSBpdHMgcGFyZW50IG1vZHVsZSBmb2xkZXIuIFRoZSByZWFzb25p
bmcgZm9yIHRoaXMgY291bGQgYmUgdGhhdCBlYWNoIHBhcmVudCBtb2R1bGUg
bmVlZGVkIGEgZGlmZmVyZW50IHZlcnNpb24gb2YgYGZvb2AsIGUuZy4gJ2Zv
bGRlcicgbmVlZHMgYGZvb0AwLjAuMWAsIGBzdWJmb2xkZXJfQWAgbmVlZHMg
YGZvb0AwLjIuMWAgZXRjLgoKSGVyZSdzIHdoYXQgaGFwcGVucyB3aGVuIHdl
IGZpeCB0aGUgZm9sZGVyIG5hbWluZyBlcnJvciBieSBjaGFuZ2luZyBgbXlf
bW9kdWxlc2AgdG8gdGhlIGNvcnJlY3QgbmFtZSBgbm9kZV9tb2R1bGVzYDoK
CiFbbW9kLWRpYWdyYW0tMDJdKG1vZC1kaWFncmFtLTAyLnBuZykKClRvIHRl
c3Qgb3V0IHdoaWNoIG1vZHVsZSBhY3R1YWxseSBnZXRzIGxvYWRlZCBieSBu
b2RlLCB5b3UgY2FuIHVzZSB0aGUgYHJlcXVpcmUucmVzb2x2ZSgnc29tZV9t
b2R1bGUnKWAgY29tbWFuZCwgd2hpY2ggd2lsbCBzaG93IHlvdSB0aGUgcGF0
aCB0byB0aGUgbW9kdWxlIHRoYXQgbm9kZSBmaW5kcyBhcyBhIHJlc3VsdCBv
ZiB0aGUgdHJlZSBjbGltYmluZyBwcm9jZXNzLiBgcmVxdWlyZS5yZXNvbHZl
YCBjYW4gYmUgdXNlZnVsIHdoZW4gZG91YmxlLWNoZWNraW5nIHRoYXQgdGhl
IG1vZHVsZSB0aGF0IHlvdSAqdGhpbmsqIGlzIGdldHRpbmcgbG9hZGVkIGlz
ICphY3R1YWxseSogZ2V0dGluZyBsb2FkZWQgLS0gc29tZXRpbWVzIHRoZXJl
IGlzIGFub3RoZXIgdmVyc2lvbiBvZiB0aGUgc2FtZSBtb2R1bGUgY2xvc2Vy
IHRvIHlvdXIgY3VycmVudCB3b3JraW5nIGRpcmVjdG9yeSB0aGFuIHRoZSBv
bmUgeW91IGludGVuZCB0byBsb2FkLgoKIyMjIEhvdyB0byB3cml0ZSBhIG1v
ZHVsZQoKTm93IHRoYXQgeW91IGtub3cgaG93IHRvIGZpbmQgbW9kdWxlcyBh
bmQgcmVxdWlyZSB0aGVtIHlvdSBjYW4gc3RhcnQgd3JpdGluZyB5b3VyIG93
biBtb2R1bGVzLgoKIyMjIyBUaGUgc2ltcGxlc3QgcG9zc2libGUgbW9kdWxl
CgpOb2RlIG1vZHVsZXMgYXJlIHJhZGljYWxseSBsaWdodHdlaWdodC4gSGVy
ZSBpcyBvbmUgb2YgdGhlIHNpbXBsZXN0IHBvc3NpYmxlIG5vZGUgbW9kdWxl
czoKCmBwYWNrYWdlLmpzb25gOgpgYGBqcwp7CiAgIm5hbWUiOiAibnVtYmVy
LW9uZSIsCiAgInZlcnNpb24iOiAiMS4wLjAiCn0KYGBgCgpgaW5kZXguanNg
OgpgYGBqcwptb2R1bGUuZXhwb3J0cyA9IDEKYGBgCgpCeSBkZWZhdWx0IG5v
ZGUgdHJpZXMgdG8gbG9hZCBgbW9kdWxlL2luZGV4LmpzYCB3aGVuIHlvdSBg
cmVxdWlyZSgnbW9kdWxlJylgLCBhbnkgb3RoZXIgZmlsZSBuYW1lIHdvbid0
IHdvcmsgdW5sZXNzIHlvdSBzZXQgdGhlIGBtYWluYCBmaWVsZCBvZiBgcGFj
a2FnZS5qc29uYCB0byBwb2ludCB0byBpdC4KClB1dCBib3RoIG9mIHRob3Nl
IGZpbGVzIGluIGEgZm9sZGVyIGNhbGxlZCBgbnVtYmVyLW9uZWAgKHRoZSBg
bmFtZWAgaW4gYHBhY2thZ2UuanNvbmAgbXVzdCBtYXRjaCB0aGUgZm9sZGVy
IG5hbWUpIGFuZCB5b3UnbGwgaGF2ZSBhIHdvcmtpbmcgbm9kZSBtb2R1bGUu
CgpDYWxsaW5nIHRoZSBmdW5jdGlvbiBgcmVxdWlyZSgnbnVtYmVyLW9uZScp
YCByZXR1cm5zIHRoZSB2YWx1ZSBvZiB3aGF0ZXZlciBgbW9kdWxlLmV4cG9y
dHNgIGlzIHNldCB0byBpbnNpZGUgdGhlIG1vZHVsZToKCiFbc2ltcGxlLW1v
ZHVsZV0oc2ltcGxlLW1vZHVsZS5wbmcpCgpBbiBldmVuIHF1aWNrZXIgd2F5
IHRvIGNyZWF0ZSBhIG1vZHVsZSBpcyB0byBydW4gdGhlc2UgY29tbWFuZHM6
CgpgYGBzaApta2RpciBteV9tb2R1bGUKY2QgbXlfbW9kdWxlCmdpdCBpbml0
CmdpdCByZW1vdGUgYWRkIGdpdEBnaXRodWIuY29tOnlvdXJ1c2VybmFtZS9t
eV9tb2R1bGUuZ2l0Cm5wbSBpbml0CmBgYAoKUnVubmluZyBgbnBtIGluaXRg
IHdpbGwgY3JlYXRlIGEgdmFsaWQgYHBhY2thZ2UuanNvbmAgZm9yIHlvdSBh
bmQgaWYgeW91IHJ1biBpdCBpbiBhbiBleGlzdGluZyBgZ2l0YCByZXBvIGl0
IHdpbGwgc2V0IHRoZSBgcmVwb3NpdG9yaWVzYCBmaWVsZCBpbnNpZGUgYHBh
Y2thZ2UuanNvbmAgYXV0b21hdGljYWxseSBhcyB3ZWxsIQoKIyMjIyBBZGRp
bmcgZGVwZW5kZW5jaWVzCgpBIG1vZHVsZSBjYW4gbGlzdCBhbnkgb3RoZXIg
bW9kdWxlcyBmcm9tIG5wbSBvciBHaXRIdWIgaW4gdGhlIGBkZXBlbmRlbmNp
ZXNgIGZpZWxkIG9mIGBwYWNrYWdlLmpzb25gLiBUbyBpbnN0YWxsIHRoZSBg
cmVxdWVzdGAgbW9kdWxlIGFzIGEgbmV3IGRlcGVuZGVuY3kgYW5kIGF1dG9t
YXRpY2FsbHkgYWRkIGl0IHRvIGBwYWNrYWdlLmpzb25gIHJ1biB0aGlzIGZy
b20geW91ciBtb2R1bGUgcm9vdCBkaXJlY3Rvcnk6CgpgYGBzaApucG0gaW5z
dGFsbCAtLXNhdmUgcmVxdWVzdApgYGAKClRoaXMgaW5zdGFsbHMgYSBjb3B5
IG9mIGByZXF1ZXN0YCBpbnRvIHRoZSBjbG9zZXN0IGBub2RlX21vZHVsZXNg
IGZvbGRlciBhbmQgbWFrZXMgb3VyIGBwYWNrYWdlLmpzb25gIGxvb2sgc29t
ZXRoaW5nIGxpa2UgdGhpczoKCmBgYAp7CiAgImlkIjogIm51bWJlci1vbmUi
LAogICJ2ZXJzaW9uIjogIjEuMC4wIiwKICAiZGVwZW5kZW5jaWVzIjogewog
ICAgInJlcXVlc3QiOiAifjIuMjIuMCIKICB9Cn0KYGBgCgpCeSBkZWZhdWx0
IGBucG0gaW5zdGFsbGAgd2lsbCBncmFiIHRoZSBsYXRlc3QgcHVibGlzaGVk
IHZlcnNpb24gb2YgYSBtb2R1bGUuCgojIyBDbGllbnQgc2lkZSBkZXZlbG9w
bWVudCB3aXRoIG5wbQoKQSBjb21tb24gbWlzY29uY2VwdGlvbiBhYm91dCBu
cG0gaXMgdGhhdCBzaW5jZSBpdCBoYXMgJ05vZGUnIGluIHRoZSBuYW1lIHRo
YXQgaXQgbXVzdCBvbmx5IGJlIHVzZWQgZm9yIHNlcnZlciBzaWRlIEpTIG1v
ZHVsZXMuIFRoaXMgaXMgY29tcGxldGVseSB1bnRydWUhIG5wbSBhY3R1YWxs
eSBzdGFuZHMgZm9yIE5vZGUgUGFja2FnZWQgTW9kdWxlcywgZS5nLiBtb2R1
bGVzIHRoYXQgTm9kZSBwYWNrYWdlcyB0b2dldGhlciBmb3IgeW91LiBUaGUg
bW9kdWxlcyB0aGVtc2VsdmVzIGNhbiBiZSB3aGF0ZXZlciB5b3Ugd2FudCAt
LSB0aGV5IGFyZSBqdXN0IGEgZm9sZGVyIG9mIGZpbGVzIHdyYXBwZWQgdXAg
aW4gYSAudGFyLmd6LCBhbmQgYSBmaWxlIGNhbGxlZCBgcGFja2FnZS5qc29u
YCB0aGF0IGRlY2xhcmVzIHRoZSBtb2R1bGUgdmVyc2lvbiBhbmQgYSBsaXN0
IG9mIGFsbCBtb2R1bGVzIHRoYXQgYXJlIGRlcGVuZGVuY2llcyBvZiB0aGUg
bW9kdWxlIChhcyB3ZWxsIGFzIHRoZWlyIHZlcnNpb24gbnVtYmVycyBzbyB0
aGUgd29ya2luZyB2ZXJzaW9ucyBnZXQgaW5zdGFsbGVkIGF1dG9tYXRpY2Fs
bHkpLiBJdCdzIHR1cnRsZXMgYWxsIHRoZSB3YXkgZG93biAtIG1vZHVsZSBk
ZXBlbmRlbmNpZXMgYXJlIGp1c3QgbW9kdWxlcywgYW5kIHRob3NlIG1vZHVs
ZXMgY2FuIGhhdmUgZGVwZW5kZW5jaWVzIGV0Yy4gZXRjLiBldGMuCgpbYnJv
d3NlcmlmeV0oaHR0cDovL2Jyb3dzZXJpZnkub3JnLykgaXMgYSB1dGlsaXR5
IHdyaXR0ZW4gaW4gTm9kZSB0aGF0IHRyaWVzIHRvIGNvbnZlcnQgYW55IG5v
ZGUgbW9kdWxlIGludG8gY29kZSB0aGF0IGNhbiBiZSBydW4gaW4gYnJvd3Nl
cnMuIE5vdCBhbGwgbW9kdWxlcyB3b3JrIChicm93c2VycyBjYW4ndCBkbyB0
aGluZ3MgbGlrZSBob3N0IGFuIEhUVFAgc2VydmVyKSwgYnV0IGEgbG90IG9m
IG1vZHVsZXMgb24gTlBNICp3aWxsKiB3b3JrLgoKVG8gdHJ5IG91dCBucG0g
aW4gdGhlIGJyb3dzZXIgeW91IGNhbiB1c2UgW1JlcXVpcmVCaW5dKGh0dHA6
Ly9yZXF1aXJlYmluLmNvbS8pLCBhbiBhcHAgSSBtYWRlIHRoYXQgdGFrZXMg
YWR2YW50YWdlIG9mIFtCcm93c2VyaWZ5LUNETl0oaHR0cHM6Ly9naXRodWIu
Y29tL2pmaGJyb29rL3d6cmQuaW4pLCB3aGljaCBpbnRlcm5hbGx5IHVzZXMg
YnJvd3NlcmlmeSBidXQgcmV0dXJucyB0aGUgb3V0cHV0IHRocm91Z2ggSFRU
UCAoaW5zdGVhZCBvZiB0aGUgY29tbWFuZCBsaW5lIC0tIHdoaWNoIGlzIGhv
dyBicm93c2VyaWZ5IGlzIHVzdWFsbHkgdXNlZCkuCgpUcnkgcHV0dGluZyB0
aGlzIGNvZGUgaW50byBSZXF1aXJlQmluIGFuZCB0aGVuIGhpdCB0aGUgcHJl
dmlldyBidXR0b246CgpgYGBqcwp2YXIgcmV2ZXJzZSA9IHJlcXVpcmUoJ2Fz
Y2lpLWFydC1yZXZlcnNlJykKCi8vIG1ha2VzIGEgdmlzaWJsZSBIVE1MIGNv
bnNvbGUKcmVxdWlyZSgnY29uc29sZS1sb2cnKS5zaG93KHRydWUpCgp2YXIg
Y29vbGJlYXIgPQogICIgICAgKCctXi0vJykgIFxuIiArCiAgIiAgICBgb19f
bycgXSAgXG4iICsKICAiICAgIChfWV8pIF8vICBcbiIgKwogICIgIF8uLmAt
LSctLmAsIFxuIiArCiAgIiAoX18pXywtLShfXykgXG4iICsKICAiICAgICA3
OiAgIDsgMSBcbiIgKwogICIgICBfLyxgLS4tJyA6IFxuIiArCiAgIiAgKF8s
KS1+fihfLCkgXG4iCgpzZXRJbnRlcnZhbChmdW5jdGlvbigpIHsgY29uc29s
ZS5sb2coY29vbGJlYXIpIH0sIDEwMDApCgpzZXRUaW1lb3V0KGZ1bmN0aW9u
KCkgewogIHNldEludGVydmFsKGZ1bmN0aW9uKCkgeyBjb25zb2xlLmxvZyhy
ZXZlcnNlKGNvb2xiZWFyKSkgfSwgMTAwMCkKfSwgNTAwKQpgYGAKCk9yIGNo
ZWNrIG91dCBhIFttb3JlIGNvbXBsaWNhdGVkIGV4YW1wbGVdKGh0dHA6Ly9y
ZXF1aXJlYmluLmNvbS8/Z2lzdD02NzliNThkNDIzN2VhY2EzNzE3MykgKGZl
ZWwgZnJlZSB0byBjaGFuZ2UgdGhlIGNvZGUgYW5kIHNlZSB3aGF0IGhhcHBl
bnMpOgoKWyFbcmVxdWlyZWJpbl0ocmVxdWlyZWJpbi5wbmcpXShodHRwOi8v
cmVxdWlyZWJpbi5jb20vZW1iZWQ/Z2lzdD02NzliNThkNDIzN2VhY2EzNzE3
MykKCiMjIEdvaW5nIHdpdGggdGhlIGdyYWluCgpMaWtlIGFueSBnb29kIHRv
b2wsIG5vZGUgaXMgYmVzdCBzdWl0ZWQgZm9yIGEgY2VydGFpbiBzZXQgb2Yg
dXNlIGNhc2VzLiBGb3IgZXhhbXBsZTogUmFpbHMsIHRoZSBwb3B1bGFyIHdl
YiBmcmFtZXdvcmssIGlzIGdyZWF0IGZvciBtb2RlbGluZyBjb21wbGV4IFti
dXNpbmVzcyBsb2dpY10oaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kv
QnVzaW5lc3NfbG9naWMpLCBlLmcuIHVzaW5nIGNvZGUgdG8gcmVwcmVzZW50
IHJlYWwgbGlmZSBidXNpbmVzcyBvYmplY3RzIGxpa2UgYWNjb3VudHMsIGxv
YW4sIGl0aW5lcmFyaWVzLCBhbmQgaW52ZW50b3JpZXMuIFdoaWxlIGl0IGlz
IHRlY2huaWNhbGx5IHBvc3NpYmxlIHRvIGRvIHRoZSBzYW1lIHR5cGUgb2Yg
dGhpbmcgdXNpbmcgbm9kZSwgdGhlcmUgd291bGQgYmUgZGVmaW5pdGUgZHJh
d2JhY2tzIHNpbmNlIG5vZGUgaXMgZGVzaWduZWQgZm9yIHNvbHZpbmcgSS9P
IHByb2JsZW1zIGFuZCBpdCBkb2Vzbid0IGtub3cgbXVjaCBhYm91dCAnYnVz
aW5lc3MgbG9naWMnLiBFYWNoIHRvb2wgZm9jdXNlcyBvbiBkaWZmZXJlbnQg
cHJvYmxlbXMuIEhvcGVmdWxseSB0aGlzIGd1aWRlIHdpbGwgaGVscCB5b3Ug
Z2FpbiBhbiBpbnR1aXRpdmUgdW5kZXJzdGFuZGluZyBvZiB0aGUgc3RyZW5n
dGhzIG9mIG5vZGUgc28gdGhhdCB5b3Uga25vdyB3aGVuIGl0IGNhbiBiZSB1
c2VmdWwgdG8geW91LgoKIyMjIFdoYXQgaXMgb3V0c2lkZSBvZiBub2RlJ3Mg
c2NvcGU/CgpGdW5kYW1lbnRhbGx5IG5vZGUgaXMganVzdCBhIHRvb2wgdXNl
ZCBmb3IgbWFuYWdpbmcgSS9PIGFjcm9zcyBmaWxlIHN5c3RlbXMgYW5kIG5l
dHdvcmtzLCBhbmQgaXQgbGVhdmVzIG90aGVyIG1vcmUgZmFuY3kgZnVuY3Rp
b25hbGl0eSB1cCB0byB0aGlyZCBwYXJ0eSBtb2R1bGVzLiBIZXJlIGFyZSBz
b21lIHRoaW5ncyB0aGF0IGFyZSBvdXRzaWRlIHRoZSBzY29wZSBvZiBub2Rl
OgoKIyMjIyBXZWIgZnJhbWV3b3JrcwoKVGhlcmUgYXJlIGEgbnVtYmVyIG9m
IHdlYiBmcmFtZXdvcmtzIGJ1aWx0IG9uIHRvcCBvZiBub2RlIChmcmFtZXdv
cmsgbWVhbmluZyBhIGJ1bmRsZSBvZiBzb2x1dGlvbnMgdGhhdCBhdHRlbXB0
cyB0byBhZGRyZXNzIHNvbWUgaGlnaCBsZXZlbCBwcm9ibGVtIGxpa2UgbW9k
ZWxpbmcgYnVzaW5lc3MgbG9naWMpLCBidXQgbm9kZSBpcyBub3QgYSB3ZWIg
ZnJhbWV3b3JrLiBXZWIgZnJhbWV3b3JrcyB0aGF0IGFyZSB3cml0dGVuIHVz
aW5nIG5vZGUgZG9uJ3QgYWx3YXlzIG1ha2UgdGhlIHNhbWUga2luZCBvZiBk
ZWNpc2lvbnMgYWJvdXQgYWRkaW5nIGNvbXBsZXhpdHksIGFic3RyYWN0aW9u
cyBhbmQgdHJhZGVvZmZzIHRoYXQgbm9kZSBkb2VzIGFuZCBtYXkgaGF2ZSBv
dGhlciBwcmlvcml0aWVzLgoKIyMjIyBMYW5ndWFnZSBzeW50YXgKCk5vZGUg
dXNlcyBKYXZhU2NyaXB0IGFuZCBkb2Vzbid0IGNoYW5nZSBhbnl0aGluZyBh
Ym91dCBpdC4gRmVsaXggR2Vpc2VuZMO2cmZlciBoYXMgYSBwcmV0dHkgZ29v
ZCB3cml0ZS11cCBvZiB0aGUgJ25vZGUgc3R5bGUnIFtoZXJlXShodHRwczov
L2dpdGh1Yi5jb20vZmVsaXhnZS9ub2RlLXN0eWxlLWd1aWRlKS4KCiMjIyMg
TGFuZ3VhZ2UgYWJzdHJhY3Rpb24KCldoZW4gcG9zc2libGUgbm9kZSB3aWxs
IHVzZSB0aGUgc2ltcGxlc3QgcG9zc2libGUgd2F5IG9mIGFjY29tcGxpc2hp
bmcgc29tZXRoaW5nLiBUaGUgJ2ZhbmNpZXInIHlvdSBtYWtlIHlvdXIgSmF2
YVNjcmlwdCB0aGUgbW9yZSBjb21wbGV4aXR5IGFuZCB0cmFkZW9mZnMgeW91
IGludHJvZHVjZS4gUHJvZ3JhbW1pbmcgaXMgaGFyZCwgZXNwZWNpYWxseSBp
biBKUyB3aGVyZSB0aGVyZSBhcmUgMTAwMCBzb2x1dGlvbnMgdG8gZXZlcnkg
cHJvYmxlbSEgSXQgaXMgZm9yIHRoaXMgcmVhc29uIHRoYXQgbm9kZSB0cmll
cyB0byBhbHdheXMgcGljayB0aGUgc2ltcGxlc3QsIG1vc3QgdW5pdmVyc2Fs
IG9wdGlvbi4gSWYgeW91IGFyZSBzb2x2aW5nIGEgcHJvYmxlbSB0aGF0IGNh
bGxzIGZvciBhIGNvbXBsZXggc29sdXRpb24gYW5kIHlvdSBhcmUgdW5zYXRp
c2ZpZWQgd2l0aCB0aGUgJ3ZhbmlsbGEgSlMgc29sdXRpb25zJyB0aGF0IG5v
ZGUgaW1wbGVtZW50cywgeW91IGFyZSBmcmVlIHRvIHNvbHZlIGl0IGluc2lk
ZSB5b3VyIGFwcCBvciBtb2R1bGUgdXNpbmcgd2hpY2hldmVyIGFic3RyYWN0
aW9ucyB5b3UgcHJlZmVyLgoKQSBncmVhdCBleGFtcGxlIG9mIHRoaXMgaXMg
bm9kZSdzIHVzZSBvZiBjYWxsYmFja3MuIEVhcmx5IG9uIG5vZGUgZXhwZXJp
bWVudGVkIHdpdGggYSBmZWF0dXJlIGNhbGxlZCAncHJvbWlzZXMnIHRoYXQg
YWRkZWQgYSBudW1iZXIgb2YgZmVhdHVyZXMgdG8gbWFrZSBhc3luYyBjb2Rl
IGFwcGVhciBtb3JlIGxpbmVhci4gSXQgd2FzIHRha2VuIG91dCBvZiBub2Rl
IGNvcmUgZm9yIGEgZmV3IHJlYXNvbnM6CgotIHRoZXkgYXJlIG1vcmUgY29t
cGxleCB0aGFuIGNhbGxiYWNrcwotIHRoZXkgY2FuIGJlIGltcGxlbWVudGVk
IGluIHVzZXJsYW5kIChkaXN0cmlidXRlZCBvbiBucG0gYXMgdGhpcmQgcGFy
dHkgbW9kdWxlcykKCkNvbnNpZGVyIG9uZSBvZiB0aGUgbW9zdCB1bml2ZXJz
YWwgYW5kIGJhc2ljIHRoaW5ncyB0aGF0IG5vZGUgZG9lczogcmVhZGluZyBh
IGZpbGUuIFdoZW4geW91IHJlYWQgYSBmaWxlIHlvdSB3YW50IHRvIGtub3cg
d2hlbiBlcnJvcnMgaGFwcGVuLCBsaWtlIHdoZW4geW91ciBoYXJkIGRyaXZl
IGRpZXMgaW4gdGhlIG1pZGRsZSBvZiB5b3VyIHJlYWQuIElmIG5vZGUgaGFk
IHByb21pc2VzIGV2ZXJ5b25lIHdvdWxkIGhhdmUgdG8gYnJhbmNoIHRoZWly
IGNvZGUgbGlrZSB0aGlzOgoKYGBganMKZnMucmVhZEZpbGUoJ21vdmllLm1w
NCcpCiAgLnRoZW4oZnVuY3Rpb24oZGF0YSkgewogICAgLy8gZG8gc3R1ZmYg
d2l0aCBkYXRhCiAgfSkKICAuZXJyb3IoZnVuY3Rpb24oZXJyb3IpIHsKICAg
IC8vIGhhbmRsZSBlcnJvcgogIH0pCmBgYAoKVGhpcyBhZGRzIGNvbXBsZXhp
dHksIGFuZCBub3QgZXZlcnlvbmUgd2FudHMgdGhhdC4gSW5zdGVhZCBvZiB0
d28gc2VwYXJhdGUgZnVuY3Rpb25zIG5vZGUganVzdCB1c2VzIGEgc2luZ2xl
IGNhbGxiYWNrIGZ1bmN0aW9uLiBIZXJlIGFyZSB0aGUgcnVsZXM6CgotIFdo
ZW4gdGhlcmUgaXMgbm8gZXJyb3IgcGFzcyBudWxsIGFzIHRoZSBmaXJzdCBh
cmd1bWVudAotIFdoZW4gdGhlcmUgaXMgYW4gZXJyb3IsIHBhc3MgaXQgYXMg
dGhlIGZpcnN0IGFyZ3VtZW50Ci0gVGhlIHJlc3Qgb2YgdGhlIGFyZ3VtZW50
cyBjYW4gYmUgdXNlZCBmb3IgYW55dGhpbmcgKHVzdWFsbHkgZGF0YSBvciBy
ZXNwb25zZXMgc2luY2UgbW9zdCBzdHVmZiBpbiBub2RlIGlzIHJlYWRpbmcg
b3Igd3JpdGluZyB0aGluZ3MpCgpIZW5jZSwgdGhlIG5vZGUgY2FsbGJhY2sg
c3R5bGU6CgpgYGBqcwpmcy5yZWFkRmlsZSgnbW92aWUubXA0JywgZnVuY3Rp
b24oZXJyLCBkYXRhKSB7CiAgLy8gaGFuZGxlIGVycm9yLCBkbyBzdHVmZiB3
aXRoIGRhdGEKfSkKYGBgCgojIyMjIFRocmVhZHMvZmliZXJzL25vbi1ldmVu
dC1iYXNlZCBjb25jdXJyZW5jeSBzb2x1dGlvbnMKCk5vdGU6IElmIHlvdSBk
b24ndCBrbm93IHdoYXQgdGhlc2UgdGhpbmdzIG1lYW4gdGhlbiB5b3Ugd2ls
bCBsaWtlbHkgaGF2ZSBhbiBlYXNpZXIgdGltZSBsZWFybmluZyBub2RlLCBz
aW5jZSB1bmxlYXJuaW5nIHRoaW5ncyBpcyBqdXN0IGFzIG11Y2ggd29yayBh
cyBsZWFybmluZyB0aGluZ3MuCgpOb2RlIHVzZXMgdGhyZWFkcyBpbnRlcm5h
bGx5IHRvIG1ha2UgdGhpbmdzIGZhc3QgYnV0IGRvZXNuJ3QgZXhwb3NlIHRo
ZW0gdG8gdGhlIHVzZXIuIElmIHlvdSBhcmUgYSB0ZWNobmljYWwgdXNlciB3
b25kZXJpbmcgd2h5IG5vZGUgaXMgZGVzaWduZWQgdGhpcyB3YXkgdGhlbiB5
b3Ugc2hvdWxkIDEwMCUgcmVhZCBhYm91dCBbdGhlIGRlc2lnbiBvZiBsaWJ1
dl0oaHR0cDovL25pa2hpbG0uZ2l0aHViLmlvL3V2Ym9vay8pLCB0aGUgQysr
IEkvTyBsYXllciB0aGF0IG5vZGUgaXMgYnVpbHQgb24gdG9wIG9mLgoKIyMg
TGljZW5zZQoKIVtDQ0JZXShDQ0JZLnBuZykKCkNyZWF0aXZlIENvbW1vbnMg
QXR0cmlidXRpb24gTGljZW5zZSAoZG8gd2hhdGV2ZXIsIGp1c3QgYXR0cmli
dXRlIG1lKQpodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9i
eS8yLjAvCgpEb25hdGUgaWNvbiBpcyBmcm9tIHRoZSBbTm91biBQcm9qZWN0
XShodHRwczovL3RoZW5vdW5wcm9qZWN0LmNvbS90ZXJtL2RvbmF0ZS8yODUv
KQo=
",,8470,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
