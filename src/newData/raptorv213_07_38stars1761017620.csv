name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'aria2',1116542,"b'aria2 is a lightweight multi-protocol & multi-source, cross platform download utility operated in command-line. It supports HTTP/HTTPS, FTP, SFTP, BitTorrent and Metalink.'",b'C++',644,17613,,673,False,b'https://api.github.com/repos/aria2/aria2/forks',"YXJpYTIgLSBUaGUgdWx0cmEgZmFzdCBkb3dubG9hZCB1dGlsaXR5Cj09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoKRGlzY2xhaW1l
cgotLS0tLS0tLS0tClRoaXMgcHJvZ3JhbSBjb21lcyB3aXRoIG5vIHdhcnJh
bnR5LgpZb3UgbXVzdCB1c2UgdGhpcyBwcm9ncmFtIGF0IHlvdXIgb3duIHJp
c2suCgpJbnRyb2R1Y3Rpb24KLS0tLS0tLS0tLS0tCgphcmlhMiBpcyBhIHV0
aWxpdHkgZm9yIGRvd25sb2FkaW5nIGZpbGVzLiBUaGUgc3VwcG9ydGVkIHBy
b3RvY29scyBhcmUKSFRUUChTKSwgRlRQLCBTRlRQLCBCaXRUb3JyZW50LCBh
bmQgTWV0YWxpbmsuIGFyaWEyIGNhbiBkb3dubG9hZCBhCmZpbGUgZnJvbSBt
dWx0aXBsZSBzb3VyY2VzL3Byb3RvY29scyBhbmQgdHJpZXMgdG8gdXRpbGl6
ZSB5b3VyIG1heGltdW0KZG93bmxvYWQgYmFuZHdpZHRoLiBJdCBzdXBwb3J0
cyBkb3dubG9hZGluZyBhIGZpbGUgZnJvbQpIVFRQKFMpL0ZUUC9TRlRQIGFu
ZCBCaXRUb3JyZW50IGF0IHRoZSBzYW1lIHRpbWUsIHdoaWxlIHRoZSBkYXRh
CmRvd25sb2FkZWQgZnJvbSBIVFRQKFMpL0ZUUC9TRlRQIGlzIHVwbG9hZGVk
IHRvIHRoZSBCaXRUb3JyZW50CnN3YXJtLiBVc2luZyBNZXRhbGluaydzIGNo
dW5rIGNoZWNrc3VtcywgYXJpYTIgYXV0b21hdGljYWxseSB2YWxpZGF0ZXMK
Y2h1bmtzIG9mIGRhdGEgd2hpbGUgZG93bmxvYWRpbmcgYSBmaWxlIGxpa2Ug
Qml0VG9ycmVudC4KClRoZSBwcm9qZWN0IHBhZ2UgaXMgbG9jYXRlZCBhdCBo
dHRwczovL2FyaWEyLmdpdGh1Yi5pby8uCgpTZWUgYGFyaWEyIE9ubGluZSBN
YW51YWwKPGh0dHBzOi8vYXJpYTIuZ2l0aHViLmlvL21hbnVhbC9lbi9odG1s
Lz5gXyAoYFJ1c3NpYW4gdHJhbnNsYXRpb24KPGh0dHBzOi8vYXJpYTIuZ2l0
aHViLmlvL21hbnVhbC9ydS9odG1sLz5gXywgYFBvcnR1Z3Vlc2UKdHJhbnNs
YXRpb24gPGh0dHBzOi8vYXJpYTIuZ2l0aHViLmlvL21hbnVhbC9wdC9odG1s
Lz5gXykgdG8gbGVhcm4KaG93IHRvIHVzZSBhcmlhMi4KCkZlYXR1cmVzCi0t
LS0tLS0tCgpIZXJlIGlzIGEgbGlzdCBvZiBmZWF0dXJlczoKCiogQ29tbWFu
ZC1saW5lIGludGVyZmFjZQoqIERvd25sb2FkIGZpbGVzIHRocm91Z2ggSFRU
UChTKS9GVFAvU0ZUUC9CaXRUb3JyZW50CiogU2VnbWVudGVkIGRvd25sb2Fk
aW5nCiogTWV0YWxpbmsgdmVyc2lvbiA0IChSRkMgNTg1NCkgc3VwcG9ydChI
VFRQL0ZUUC9TRlRQL0JpdFRvcnJlbnQpCiogTWV0YWxpbmsgdmVyc2lvbiAz
LjAgc3VwcG9ydChIVFRQL0ZUUC9TRlRQL0JpdFRvcnJlbnQpCiogTWV0YWxp
bmsvSFRUUCAoUkZDIDYyNDkpIHN1cHBvcnQKKiBIVFRQLzEuMSBpbXBsZW1l
bnRhdGlvbgoqIEhUVFAgUHJveHkgc3VwcG9ydAoqIEhUVFAgQkFTSUMgYXV0
aGVudGljYXRpb24gc3VwcG9ydAoqIEhUVFAgUHJveHkgYXV0aGVudGljYXRp
b24gc3VwcG9ydAoqIFdlbGwta25vd24gZW52aXJvbm1lbnQgdmFyaWFibGVz
IGZvciBwcm94eTogYGBodHRwX3Byb3h5YGAsCiAgYGBodHRwc19wcm94eWBg
LCBgYGZ0cF9wcm94eWBgLCBgYGFsbF9wcm94eWBgIGFuZCBgYG5vX3Byb3h5
YGAKKiBIVFRQIGd6aXAsIGRlZmxhdGUgY29udGVudCBlbmNvZGluZyBzdXBw
b3J0CiogVmVyaWZ5IHBlZXIgdXNpbmcgZ2l2ZW4gdHJ1c3RlZCBDQSBjZXJ0
aWZpY2F0ZSBpbiBIVFRQUwoqIENsaWVudCBjZXJ0aWZpY2F0ZSBhdXRoZW50
aWNhdGlvbiBpbiBIVFRQUwoqIENodW5rZWQgdHJhbnNmZXIgZW5jb2Rpbmcg
c3VwcG9ydAoqIExvYWQgQ29va2llcyBmcm9tIGZpbGUgdXNpbmcgdGhlIEZp
cmVmb3gzIGZvcm1hdCwgQ2hyb21pdW0vR29vZ2xlIENocm9tZQogIGFuZCB0
aGUgTW96aWxsYS9GaXJlZm94CiAgKDEueC8yLngpL05ldHNjYXBlIGZvcm1h
dC4KKiBTYXZlIENvb2tpZXMgaW4gdGhlIE1vemlsbGEvRmlyZWZveCAoMS54
LzIueCkvTmV0c2NhcGUgZm9ybWF0LgoqIEN1c3RvbSBIVFRQIEhlYWRlciBz
dXBwb3J0CiogUGVyc2lzdGVudCBDb25uZWN0aW9ucyBzdXBwb3J0CiogRlRQ
L1NGVFAgdGhyb3VnaCBIVFRQIFByb3h5CiogRG93bmxvYWQvVXBsb2FkIHNw
ZWVkIHRocm90dGxpbmcKKiBCaXRUb3JyZW50IGV4dGVuc2lvbnM6IEZhc3Qg
ZXh0ZW5zaW9uLCBESFQsIFBFWCwgTVNFL1BTRSwKICBNdWx0aS1UcmFja2Vy
LCBVRFAgdHJhY2tlcgoqIEJpdFRvcnJlbnQgYFdFQi1TZWVkaW5nIDxodHRw
Oi8vZ2V0cmlnaHQuY29tL3NlZWR0b3JyZW50Lmh0bWw+YF8uCiAgYXJpYTIg
cmVxdWVzdHMgY2h1bmtzIG1vcmUgdGhhbiBwaWVjZSBzaXplIHRvIHJlZHVj
ZSB0aGUgcmVxdWVzdAogIG92ZXJoZWFkLiBJdCBhbHNvIHN1cHBvcnRzIHBp
cGVsaW5lZCByZXF1ZXN0cyB3aXRoIHBpZWNlIHNpemUuCiogQml0VG9ycmVu
dCBMb2NhbCBQZWVyIERpc2NvdmVyeQoqIFJlbmFtZS9jaGFuZ2UgdGhlIGRp
cmVjdG9yeSBzdHJ1Y3R1cmUgb2YgQml0VG9ycmVudCBkb3dubG9hZHMKICBj
b21wbGV0ZWx5CiogSlNPTi1SUEMgKG92ZXIgSFRUUCBhbmQgV2ViU29ja2V0
KS9YTUwtUlBDIGludGVyZmFjZQoqIFJ1biBhcyBhIGRhZW1vbiBwcm9jZXNz
CiogU2VsZWN0aXZlIGRvd25sb2FkIGluIG11bHRpLWZpbGUgdG9ycmVudC9N
ZXRhbGluawoqIENodW5rIGNoZWNrc3VtIHZhbGlkYXRpb24gaW4gTWV0YWxp
bmsKKiBDYW4gZGlzYWJsZSBzZWdtZW50ZWQgZG93bmxvYWRpbmcgaW4gTWV0
YWxpbmsKKiBOZXRyYyBzdXBwb3J0CiogQ29uZmlndXJhdGlvbiBmaWxlIHN1
cHBvcnQKKiBEb3dubG9hZCBVUklzIGZvdW5kIGluIGEgdGV4dCBmaWxlIG9y
IHN0ZGluIGFuZCB0aGUgZGVzdGluYXRpb24KICBkaXJlY3RvcnkgYW5kIG91
dHB1dCBmaWxlIG5hbWUgY2FuIGJlIHNwZWNpZmllZCBvcHRpb25hbGx5Ciog
UGFyYW1ldGVyaXplZCBVUkkgc3VwcG9ydAoqIElQdjYgc3VwcG9ydCB3aXRo
IEhhcHB5IEV5ZWJhbGxzCiogRGlzayBjYWNoZSB0byByZWR1Y2UgZGlzayBh
Y3Rpdml0eQoKClZlcnNpb25pbmcgYW5kIHJlbGVhc2Ugc2NoZWR1bGUKLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKV2UgdXNlIDMgbnVtYmVy
cyBmb3IgYXJpYTIgdmVyc2lvbjogTUFKT1IuTUlOT1IuUEFUQ0guICBXZSB3
aWxsIHNoaXAKTUlOT1IgdXBkYXRlIG9uIDE1dGggb2YgZXZlcnkgbW9udGgu
ICBXZSBtYXkgc2tpcCBhIHJlbGVhc2UgaWYgd2UgaGF2ZQpubyBjaGFuZ2Vz
IHNpbmNlIHRoZSBsYXN0IHJlbGVhc2UuICBUaGUgZmVhdHVyZSBhbmQgZG9j
dW1lbnRhdGlvbgpmcmVlemUgaGFwcGVucyAxMCBkYXlzIGJlZm9yZSB0aGUg
cmVsZWFzZSBkYXkgKDV0aCBkYXkgb2YgdGhlIG1vbnRoKQpmb3IgdHJhbnNs
YXRpb24gdGVhbXMuICBXZSB3aWxsIHJhaXNlIGFuIGlzc3VlIGFib3V0IHRo
ZSB1cGNvbWluZwpyZWxlYXNlIGFyb3VuZCB0aGF0IGRheS4KCldlIG1heSBy
ZWxlYXNlIFBBVENIIHJlbGVhc2VzIGJldHdlZW4gcmVndWxhciByZWxlYXNl
cyBpZiB3ZSBoYXZlCnNlY3VyaXR5IGlzc3Vlcy4KCk1BSk9SIHZlcnNpb24g
d2lsbCBzdGF5IGF0IDEgZm9yIHRoZSB0aW1lIGJlaW5nLgoKSG93IHRvIGdl
dCBzb3VyY2UgY29kZQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgpXZSBtYWlu
dGFpbiB0aGUgc291cmNlIGNvZGUgYXQgR2l0aHViOgpodHRwczovL2dpdGh1
Yi5jb20vYXJpYTIvYXJpYTIKClRvIGdldCB0aGUgbGF0ZXN0IHNvdXJjZSBj
b2RlLCBydW4gZm9sbG93aW5nIGNvbW1hbmQ6OgoKICAgICQgZ2l0IGNsb25l
IGh0dHBzOi8vZ2l0aHViLmNvbS9hcmlhMi9hcmlhMi5naXQKClRoaXMgd2ls
bCBjcmVhdGUgYXJpYTIgZGlyZWN0b3J5IGluIHlvdXIgY3VycmVudCBkaXJl
Y3RvcnkgYW5kIHNvdXJjZQpmaWxlcyBhcmUgc3RvcmVkIHRoZXJlLgoKRGVw
ZW5kZW5jeQotLS0tLS0tLS0tCgoKPT09PT09PT09PT09PT09PT09PT09PT09
ID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KZmVh
dHVyZXMgICAgICAgICAgICAgICAgICBkZXBlbmRlbmN5Cj09PT09PT09PT09
PT09PT09PT09PT09PSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09CkhUVFBTICAgICAgICAgICAgICAgICAgICBPU1ggb3IgR251
VExTIG9yIE9wZW5TU0wgb3IgV2luZG93cwpTRlRQICAgICAgICAgICAgICAg
ICAgICAgbGlic3NoMgpCaXRUb3JyZW50ICAgICAgICAgICAgICAgTm9uZS4g
T3B0aW9uYWw6IGxpYm5ldHRsZStsaWJnbXAgb3IgbGliZ2NyeXB0CiAgICAg
ICAgICAgICAgICAgICAgICAgICBvciBPcGVuU1NMIChzZWUgbm90ZSkKTWV0
YWxpbmsgICAgICAgICAgICAgICAgIGxpYnhtbDIgb3IgRXhwYXQuCkNoZWNr
c3VtICAgICAgICAgICAgICAgICBOb25lLiBPcHRpb25hbDogT1NYIG9yIGxp
Ym5ldHRsZSBvciBsaWJnY3J5cHQKICAgICAgICAgICAgICAgICAgICAgICAg
IG9yIE9wZW5TU0wgb3IgV2luZG93cyAoc2VlIG5vdGUpCmd6aXAsIGRlZmxh
dGUgaW4gSFRUUCAgICB6bGliCkFzeW5jIEROUyAgICAgICAgICAgICAgICBD
LUFyZXMKRmlyZWZveDMvQ2hyb21pdW0gY29va2llIGxpYnNxbGl0ZTMKWE1M
LVJQQyAgICAgICAgICAgICAgICAgIGxpYnhtbDIgb3IgRXhwYXQuCkpTT04t
UlBDIG92ZXIgV2ViU29ja2V0ICBsaWJuZXR0bGUgb3IgbGliZ2NyeXB0IG9y
IE9wZW5TU0wKPT09PT09PT09PT09PT09PT09PT09PT09ID09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KCgouLiBub3RlOjoKCiAg
bGlieG1sMiBoYXMgcHJlY2VkZW5jZSBvdmVyIEV4cGF0IGlmIGJvdGggbGli
cmFyaWVzIGFyZSBpbnN0YWxsZWQuCiAgSWYgeW91IHByZWZlciBFeHBhdCwg
cnVuIGNvbmZpZ3VyZSB3aXRoIGBgLS13aXRob3V0LWxpYnhtbDJgYC4KCi4u
IG5vdGU6OgoKICBPbiBBcHBsZSBPU1ggdGhlIE9TLWxldmVsIFNTTC9UTFMg
c3VwcG9ydCB3aWxsIGJlIHByZWZlcnJlZC4gSGVuY2UKICBuZWl0aGVyIEdu
dVRMUyBub3IgT3BlblNTTCBhcmUgcmVxdWlyZWQgb24gdGhhdCBwbGF0Zm9y
bS4gSWYgeW91J2QKICBsaWtlIHRvIGRpc2FibGUgdGhpcyBiZWhhdmlvciwg
cnVuIGNvbmZpZ3VyZSB3aXRoCiAgYGAtLXdpdGhvdXQtYXBwbGV0bHNgYC4K
CiAgR251VExTIGhhcyBwcmVjZWRlbmNlIG92ZXIgT3BlblNTTCBpZiBib3Ro
IGxpYnJhcmllcyBhcmUgaW5zdGFsbGVkLgogIElmIHlvdSBwcmVmZXIgT3Bl
blNTTCwgcnVuIGNvbmZpZ3VyZSB3aXRoIGBgLS13aXRob3V0LWdudXRsc2Bg
CiAgYGAtLXdpdGgtb3BlbnNzbGBgLgoKICBPbiBXaW5kb3dzIHRoZXJlIGlz
IFNTTCBpbXBsZW1lbnRhdGlvbiBhdmFpbGFibGUgdGhhdCBpcyBiYXNlZCBv
bgogIHRoZSBuYXRpdmUgV2luZG93cyBTU0wgY2FwYWJpbGl0aWVzIChTY2hh
bm5lbCkgYW5kIGl0IHdpbGwgYmUKICBwcmVmZXJyZWQuICBIZW5jZSBuZWl0
aGVyIEdudVRMUyBub3IgT3BlblNTTCBhcmUgcmVxdWlyZWQgb24gdGhhdAog
IHBsYXRmb3JtLiAgSWYgeW91J2QgbGlrZSB0byBkaXNhYmxlIHRoaXMgYmVo
YXZpb3IsIHJ1biBjb25maWd1cmUKICB3aXRoIGBgLS13aXRob3V0LXdpbnRs
c2BgLgoKLi4gbm90ZTo6CgogIE9uIEFwcGxlIE9TWCB0aGUgT1MtbGV2ZWwg
Y2hlY2tzdW0gc3VwcG9ydCB3aWxsIGJlIHByZWZlcnJlZCwKICB1bmxlc3Mg
YXJpYTIgaXMgY29uZmlndXJlZCB3aXRoIGBgLS13aXRob3V0LWFwcGxldGxz
YGAuCgogIGxpYm5ldHRsZSBoYXMgcHJlY2VkZW5jZSBvdmVyIGxpYmdjcnlw
dCBpZiBib3RoIGxpYnJhcmllcyBhcmUKICBpbnN0YWxsZWQuICBJZiB5b3Ug
cHJlZmVyIGxpYmdjcnlwdCwgcnVuIGNvbmZpZ3VyZSB3aXRoCiAgYGAtLXdp
dGhvdXQtbGlibmV0dGxlIC0td2l0aC1saWJnY3J5cHRgYC4gSWYgT3BlblNT
TCBpcyBzZWxlY3RlZCBvdmVyCiAgR251VExTLCBuZWl0aGVyIGxpYm5ldHRs
ZSBub3IgbGliZ2NyeXB0IHdpbGwgYmUgdXNlZC4KCiAgSWYgbm9uZSBvZiB0
aGUgb3B0aW9uYWwgZGVwZW5kZW5jaWVzIGFyZSBpbnN0YWxsZWQsIGFuIGlu
dGVybmFsCiAgaW1wbGVtZW50YXRpb24gdGhhdCBvbmx5IHN1cHBvcnRzIG1k
NSBhbmQgc2hhMSB3aWxsIGJlIHVzZWQuCgogIE9uIFdpbmRvd3MgdGhlcmUg
aXMgU1NMIGltcGxlbWVudGF0aW9uIGF2YWlsYWJsZSB0aGF0IGlzIGJhc2Vk
IG9uCiAgdGhlIG5hdGl2ZSBXaW5kb3dzIGNhcGFiaWxpdGllcyBhbmQgaXQg
d2lsbCBiZSBwcmVmZXJyZWQsIHVubGVzcwogIGFyaWEyIGlzIGNvbmZpZ3Vy
ZWQgd2l0aCBgYC0td2l0aG91dC13aW50bHNgYC4KCkEgdXNlciBjYW4gaGF2
ZSBvbmUgb2YgdGhlIGZvbGxvd2luZyBjb25maWd1cmF0aW9ucyBmb3IgU1NM
IGFuZCBjcnlwdG8KbGlicmFyaWVzOgoKKiBPcGVuU1NMCiogR251VExTICsg
bGliZ2NyeXB0CiogR251VExTICsgbGlibmV0dGxlCiogQXBwbGUgVExTIChP
U1ggb25seSkKKiBXaW5kb3dzIFRMUyAoV2luZG93cyBvbmx5KQoKWW91IGNh
biBkaXNhYmxlIEJpdFRvcnJlbnQgYW5kIE1ldGFsaW5rIHN1cHBvcnQgYnkg
cHJvdmlkaW5nCmBgLS1kaXNhYmxlLWJpdHRvcnJlbnRgYCBhbmQgYGAtLWRp
c2FibGUtbWV0YWxpbmtgYCB0byB0aGUgY29uZmlndXJlCnNjcmlwdCByZXNw
ZWN0aXZlbHkuCgpJbiBvcmRlciB0byBlbmFibGUgYXN5bmMgRE5TIHN1cHBv
cnQsIHlvdSBuZWVkIGMtYXJlcy4KCiogYy1hcmVzOiBodHRwOi8vYy1hcmVz
LmhheHguc2UvCgpIb3cgdG8gYnVpbGQKLS0tLS0tLS0tLS0tCgphcmlhMiBp
cyBwcmltYXJpbHkgd3JpdHRlbiBpbiBDKysuIEluaXRpYWxseSBpdCB3YXMg
d3JpdHRlbiBiYXNlZCBvbgpDKys5OC9DKyswMyBzdGFuZGFyZCBmZWF0dXJl
cy4gV2UgYXJlIG5vdyBtaWdyYXRpbmcgYXJpYTIgdG8gQysrMTEKc3RhbmRh
cmQuIFRoZSBjdXJyZW50IHNvdXJjZSBjb2RlIHJlcXVpcmVzIEMrKzExIGF3
YXJlIGNvbXBpbGVyLiBGb3IKd2VsbC1rbm93biBjb21waWxlcnMsIHN1Y2gg
YXMgZysrIGFuZCBjbGFuZywgdGhlIGBgLXN0ZD1jKysxMWBgIG9yCmBgLXN0
ZD1jKysweGBgIGZsYWcgbXVzdCBiZSBzdXBwb3J0ZWQuCgpJbiBvcmRlciB0
byBidWlsZCBhcmlhMiBmcm9tIHRoZSBzb3VyY2UgcGFja2FnZSwgeW91IG5l
ZWQgZm9sbG93aW5nCmRldmVsb3BtZW50IHBhY2thZ2VzIChwYWNrYWdlIG5h
bWUgbWF5IHZhcnkgZGVwZW5kaW5nIG9uIHRoZQpkaXN0cmlidXRpb24geW91
IHVzZSk6CgoqIGxpYmdudXRscy1kZXYgICAgKFJlcXVpcmVkIGZvciBIVFRQ
UywgQml0VG9ycmVudCwgQ2hlY2tzdW0gc3VwcG9ydCkKKiBuZXR0bGUtZGV2
ICAgICAgIChSZXF1aXJlZCBmb3IgQml0VG9ycmVudCwgQ2hlY2tzdW0gc3Vw
cG9ydCkKKiBsaWJnbXAtZGV2ICAgICAgIChSZXF1aXJlZCBmb3IgQml0VG9y
cmVudCkKKiBsaWJzc2gyLTEtZGV2ICAgIChSZXF1aXJlZCBmb3IgU0ZUUCBz
dXBwb3J0KQoqIGxpYmMtYXJlcy1kZXYgICAgKFJlcXVpcmVkIGZvciBhc3lu
YyBETlMgc3VwcG9ydCkKKiBsaWJ4bWwyLWRldiAgICAgIChSZXF1aXJlZCBm
b3IgTWV0YWxpbmsgc3VwcG9ydCkKKiB6bGliMWctZGV2ICAgICAgIChSZXF1
aXJlZCBmb3IgZ3ppcCwgZGVmbGF0ZSBkZWNvZGluZyBzdXBwb3J0IGluIEhU
VFApCiogbGlic3FsaXRlMy1kZXYgICAoUmVxdWlyZWQgZm9yIEZpcmVmb3gz
L0Nocm9taXVtIGNvb2tpZSBzdXBwb3J0KQoqIHBrZy1jb25maWcgICAgICAg
KFJlcXVpcmVkIHRvIGRldGVjdCBpbnN0YWxsZWQgbGlicmFyaWVzKQoKWW91
IGNhbiB1c2UgbGliZ2NyeXB0LWRldiBpbnN0ZWFkIG9mIG5ldHRsZS1kZXYg
YW5kIGxpYmdtcC1kZXY6CgoqIGxpYmdwZy1lcnJvci1kZXYgKFJlcXVpcmVk
IGZvciBCaXRUb3JyZW50LCBDaGVja3N1bSBzdXBwb3J0KQoqIGxpYmdjcnlw
dC1kZXYgICAgKFJlcXVpcmVkIGZvciBCaXRUb3JyZW50LCBDaGVja3N1bSBz
dXBwb3J0KQoKWW91IGNhbiB1c2UgbGlic3NsLWRldiBpbnN0ZWFkIG9mCmxp
YmdudXRscy1kZXYsIG5ldHRsZS1kZXYsIGxpYmdtcC1kZXYsIGxpYmdwZy1l
cnJvci1kZXYgYW5kIGxpYmdjcnlwdC1kZXY6CgoqIGxpYnNzbC1kZXYgICAg
ICAgKFJlcXVpcmVkIGZvciBIVFRQUywgQml0VG9ycmVudCwgQ2hlY2tzdW0g
c3VwcG9ydCkKCllvdSBjYW4gdXNlIGxpYmV4cGF0MS1kZXYgaW5zdGVhZCBv
ZiBsaWJ4bWwyLWRldjoKCiogbGliZXhwYXQxLWRldiAgICAoUmVxdWlyZWQg
Zm9yIE1ldGFsaW5rIHN1cHBvcnQpCgpPbiBGZWRvcmEgeW91IG5lZWQgdGhl
IGZvbGxvd2luZyBwYWNrYWdlczogZ2NjLCBnY2MtYysrLCBrZXJuZWwtZGV2
ZWwsCmxpYmdjcnlwdC1kZXZlbCwgbGlieG1sMi1kZXZlbCwgb3BlbnNzbC1k
ZXZlbCwgZ2V0dGV4dC1kZXZlbCwgY3BwdW5pdAoKSWYgeW91IGRvd25sb2Fk
ZWQgc291cmNlIGNvZGUgZnJvbSBnaXQgcmVwb3NpdG9yeSwgeW91IGhhdmUg
dG8gaW5zdGFsbApmb2xsb3dpbmcgcGFja2FnZXMgdG8gZ2V0IGF1dG9jb25m
IG1hY3JvczoKCiogbGlieG1sMi1kZXYKKiBsaWJjcHB1bml0LWRldgoqIGF1
dG9jb25mCiogYXV0b21ha2UKKiBhdXRvdG9vbHMtZGV2CiogYXV0b3BvaW50
CiogbGlidG9vbAoKQW5kIHJ1biBmb2xsb3dpbmcgY29tbWFuZCB0byBnZW5l
cmF0ZSBjb25maWd1cmUgc2NyaXB0IGFuZCBvdGhlciBmaWxlcwpuZWNlc3Nh
cnkgdG8gYnVpbGQgdGhlIHByb2dyYW06OgoKICAgICQgYXV0b3JlY29uZiAt
aQoKQWxzbyB5b3UgbmVlZCBgU3BoaW54IDxodHRwOi8vc3BoaW54LWRvYy5v
cmcvPmBfIHRvIGJ1aWxkIG1hbiBwYWdlLgoKSWYgeW91IGFyZSBidWlsZGlu
ZyBhcmlhMiBmb3IgTWFjIE9TIFgsIHRha2UgYSBsb29rIGF0CnRoZSBtYWtl
cmVsZWFzZS1vc3gubWsgR05VIE1ha2UgbWFrZWZpbGUuCgpUaGUgcXVpY2tl
c3Qgd2F5IHRvIGJ1aWxkIGFyaWEyIGlzIGZpcnN0IHJ1biBjb25maWd1cmUg
c2NyaXB0OjoKCiAgICAkIC4vY29uZmlndXJlCgpUbyBidWlsZCBzdGF0aWNh
bGx5IGxpbmtlZCBhcmlhMiwgdXNlIGBgQVJJQTJfU1RBVElDPXllc2BgCmNv
bW1hbmQtbGluZSBvcHRpb246OgoKICAgICQgLi9jb25maWd1cmUgQVJJQTJf
U1RBVElDPXllcwoKQWZ0ZXIgY29uZmlndXJhdGlvbiBpcyBkb25lLCBydW4g
YGBtYWtlYGAgdG8gY29tcGlsZSB0aGUgcHJvZ3JhbTo6CgogICAgJCBtYWtl
CgpTZWUgYENyb3NzLWNvbXBpbGluZyBXaW5kb3dzIGJpbmFyeWBfIHRvIGNy
ZWF0ZSBhIFdpbmRvd3MgYmluYXJ5LgpTZWUgYENyb3NzLWNvbXBpbGluZyBB
bmRyb2lkIGJpbmFyeWBfIHRvIGNyZWF0ZSBhbiBBbmRyb2lkIGJpbmFyeS4K
ClRoZSBjb25maWd1cmUgc2NyaXB0IGNoZWNrcyBhdmFpbGFibGUgbGlicmFy
aWVzIGFuZCBlbmFibGVzIGFzIG1hbnkKZmVhdHVyZXMgYXMgcG9zc2libGUg
ZXhjZXB0IGZvciBleHBlcmltZW50YWwgZmVhdHVyZXMgbm90IGVuYWJsZWQg
YnkKZGVmYXVsdC4KClNpbmNlIDEuMS4wLCBhcmlhMiBjaGVja3MgdGhlIGNl
cnRpZmljYXRlIG9mIEhUVFBTIHNlcnZlcnMgYnkgZGVmYXVsdC4KSWYgeW91
IGJ1aWxkIHdpdGggT3BlblNTTCBvciB0aGUgcmVjZW50IHZlcnNpb24gb2Yg
R251VExTIHdoaWNoIGhhcwpgYGdudXRsc19jZXJ0aWZpY2F0ZV9zZXRfeDUw
OV9zeXN0ZW1fdHJ1c3QoKWBgIGZ1bmN0aW9uIGFuZCB0aGUKbGlicmFyeSBp
cyBwcm9wZXJseSBjb25maWd1cmVkIHRvIGxvY2F0ZSB0aGUgc3lzdGVtLXdp
ZGUgQ0EKY2VydGlmaWNhdGVzIHN0b3JlLCBhcmlhMiB3aWxsIGF1dG9tYXRp
Y2FsbHkgbG9hZCB0aG9zZSBjZXJ0aWZpY2F0ZXMKYXQgdGhlIHN0YXJ0dXAu
IElmIGl0IGlzIG5vdCB0aGUgY2FzZSwgSSByZWNvbW1lbmQgdG8gc3VwcGx5
IHRoZSBwYXRoCnRvIHRoZSBDQSBidW5kbGUgZmlsZS4gRm9yIGV4YW1wbGUs
IGluIERlYmlhbiB0aGUgcGF0aCB0byBDQSBidW5kbGUKZmlsZSBpcyAnL2V0
Yy9zc2wvY2VydHMvY2EtY2VydGlmaWNhdGVzLmNydCcgKGluIGNhLWNlcnRp
ZmljYXRlcwpwYWNrYWdlKS4gVGhpcyBtYXkgdmFyeSBkZXBlbmRpbmcgb24g
eW91ciBkaXN0cmlidXRpb24uIFlvdSBjYW4gZ2l2ZQppdCB0byBjb25maWd1
cmUgc2NyaXB0IHVzaW5nIGBgLS13aXRoLWNhLWJ1bmRsZSBvcHRpb25gYDo6
CgogICAgJCAuL2NvbmZpZ3VyZSAtLXdpdGgtY2EtYnVuZGxlPScvZXRjL3Nz
bC9jZXJ0cy9jYS1jZXJ0aWZpY2F0ZXMuY3J0JwogICAgJCBtYWtlCgpXaXRo
b3V0IGBgLS13aXRoLWNhLWJ1bmRsZWBgIG9wdGlvbiwgeW91IHdpbGwgZW5j
b3VudGVyIHRoZSBlcnJvciB3aGVuCmFjY2Vzc2luZyBIVFRQUyBzZXJ2ZXJz
IGJlY2F1c2UgdGhlIGNlcnRpZmljYXRlIGNhbm5vdCBiZSB2ZXJpZmllZAp3
aXRob3V0IENBIGJ1bmRsZS4gSW4gc3VjaCBjYXNlLCB5b3UgY2FuIHNwZWNp
ZnkgdGhlIENBIGJ1bmRsZSBmaWxlCnVzaW5nIGFyaWEyJ3MgYGAtLWNhLWNl
cnRpZmljYXRlYGAgb3B0aW9uLiAgSWYgeW91IGRvbid0IGhhdmUgQ0EgYnVu
ZGxlCmZpbGUgaW5zdGFsbGVkLCB0aGVuIHRoZSBsYXN0IHJlc29ydCBpcyBk
aXNhYmxlIHRoZSBjZXJ0aWZpY2F0ZQp2YWxpZGF0aW9uIHVzaW5nIGBgLS1j
aGVjay1jZXJ0aWZpY2F0ZT1mYWxzZWBgLgoKVXNpbmcgdGhlIG5hdGl2ZSBP
U1ggKEFwcGxlVExTKSBhbmQvb3IgV2luZG93cyAoV2luVExTKSBpbXBsZW1l
bnRhdGlvbgp3aWxsIGF1dG9tYXRpY2FsbHkgdXNlIHRoZSBzeXN0ZW0gY2Vy
dGlmaWNhdGUgc3RvcmUsIHNvCmBgLS13aXRoLWNhLWJ1bmRsZWBgIGlzIG5v
dCBuZWNlc3NhcnkgYW5kIHdpbGwgYmUgaWdub3JlZCB3aGVuIHVzaW5nCnRo
ZXNlIGltcGxlbWVudGF0aW9ucy4KCkJ5IGRlZmF1bHQsIHRoZSBiYXNoX2Nv
bXBsZXRpb24gZmlsZSBuYW1lZCBgYGFyaWEyY2BgIGlzIGluc3RhbGxlZCB0
bwp0aGUgZGlyZWN0b3J5IGBgJHByZWZpeC9zaGFyZS9kb2MvYXJpYTIvYmFz
aF9jb21wbGV0aW9uYGAuICBUbyBjaGFuZ2UKdGhlIGluc3RhbGwgZGlyZWN0
b3J5IG9mIHRoZSBmaWxlLCB1c2UgYGAtLXdpdGgtYmFzaGNvbXBsZXRpb25k
aXJgYApvcHRpb24uCgpBZnRlciBhIGBgbWFrZWBgIHRoZSBleGVjdXRhYmxl
IGlzIGxvY2F0ZWQgYXQgYGBzcmMvYXJpYTJjYGAuCgphcmlhMiB1c2VzIENw
cFVuaXQgZm9yIGF1dG9tYXRlZCB1bml0IHRlc3RpbmcuIFRvIHJ1biB0aGUg
dW5pdCB0ZXN0OjoKCiAgICAkIG1ha2UgY2hlY2sKCkNyb3NzLWNvbXBpbGlu
ZyBXaW5kb3dzIGJpbmFyeQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0KCkluIHRoaXMgc2VjdGlvbiwgd2UgZGVzY3JpYmUgaG93IHRvIGJ1aWxk
IGEgV2luZG93cyBiaW5hcnkgdXNpbmcgYQptaW5ndy13NjQgKGh0dHA6Ly9t
aW5ndy13NjQub3JnL2Rva3UucGhwKSBjcm9zcy1jb21waWxlciBvbiBEZWJp
YW4KTGludXguIFRoZSBNaW5HVyAoaHR0cDovL3d3dy5taW5ndy5vcmcvKSBt
YXkgbm90IGJlIGFibGUgdG8gYnVpbGQKYXJpYTIuCgpUaGUgZWFzaWVzdCB3
YXkgdG8gYnVpbGQgV2luZG93cyBiaW5hcnkgaXMgdXNlIERvY2tlcmZpbGUu
bWluZ3cuICBTZWUKRG9ja2VyZmlsZS5taW5ndyBob3cgdG8gYnVpbGQgYmlu
YXJ5LiAgSWYgeW91IGNhbm5vdCB1c2UgRG9ja2VyZmlsZSwKdGhlbiBjb250
aW51ZSB0byByZWFkIGZvbGxvd2luZyBwYXJhZ3JhcGhzLgoKQmFzaWNhbGx5
LCBhZnRlciBjb21waWxpbmcgYW5kIGluc3RhbGxpbmcgZGVwZW5kZWQgbGli
cmFyaWVzLCB5b3UgY2FuCmRvIGNyb3NzLWNvbXBpbGUganVzdCBwYXNzaW5n
IGFwcHJvcHJpYXRlIGBgLS1ob3N0YGAgb3B0aW9uIGFuZApzcGVjaWZ5aW5n
IGBgQ1BQRkxBR1NgYCwgYGBMREZMQUdTYGAgYW5kIGBgUEtHX0NPTkZJR19M
SUJESVJgYAp2YXJpYWJsZXMgdG8gY29uZmlndXJlLiBGb3IgY29udmVuaWVu
Y2UgYW5kIGxvd2VyaW5nIG91ciBvd24KZGV2ZWxvcG1lbnQgY29zdCwgd2Ug
cHJvdmlkZSBlYXNpZXIgd2F5IHRvIGNvbmZpZ3VyZSB0aGUgYnVpbGQKc2V0
dGluZ3MuCgpgYG1pbmd3LWNvbmZpZ2BgIHNjcmlwdCBpcyBhIGNvbmZpZ3Vy
ZSBzY3JpcHQgd3JhcHBlciBmb3IgbWluZ3ctdzY0LgpXZSB1c2UgaXQgdG8g
Y3JlYXRlIG9mZmljaWFsIFdpbmRvd3MgYnVpbGQuICBUaGlzIHNjcmlwdCBh
c3N1bWVzCmZvbGxvd2luZyBsaWJyYXJpZXMgaGF2ZSBiZWVuIGJ1aWx0IGZv
ciBjcm9zcy1jb21waWxlOgoKKiBjLWFyZXMKKiBleHBhdAoqIHNxbGl0ZTMK
KiB6bGliCiogbGlic3NoMgoqIGNwcHVuaXQKClNvbWUgZW52aXJvbm1lbnQg
dmFyaWFibGVzIGNhbiBiZSBhZGp1c3RlZCB0byBjaGFuZ2UgYnVpbGQgc2V0
dGluZ3M6CgpgYEhPU1RgYAogIGNyb3NzLWNvbXBpbGUgdG8gYnVpbGQgcHJv
Z3JhbXMgdG8gcnVuIG9uIGBgSE9TVGBgLiBJdCBkZWZhdWx0cyB0bwogIGBg
aTY4Ni13NjQtbWluZ3czMmBgLiBUbyBidWlsZCA2NGJpdCBiaW5hcnksIHNw
ZWNpZnkKICBgYHg4Nl82NC13NjQtbWluZ3czMmBgLgoKYGBQUkVGSVhgYAog
IFByZWZpeCB0byB0aGUgZGlyZWN0b3J5IHdoZXJlIGRlcGVuZGVudCBsaWJy
YXJpZXMgYXJlIGluc3RhbGxlZC4gIEl0CiAgZGVmYXVsdHMgdG8gYGAvdXNy
L2xvY2FsLyRIT1NUYGAuIGBgLUkkUFJFRklYL2luY2x1ZGVgYCB3aWxsIGJl
CiAgYWRkZWQgdG8gYGBDUFBGTEFHU2BgLiBgYC1MJFBSRUZJWC9saWJgYCB3
aWxsIGJlIGFkZGVkIHRvCiAgYGBMREZMQUdTYGAuIGBgJFBSRUZJWC9saWIv
cGtnY29uZmlnYGAgd2lsbCBiZSBzZXQgdG8KICBgYFBLR19DT05GSUdfTElC
RElSYGAuCgpGb3IgZXhhbXBsZSwgdG8gYnVpbGQgNjRiaXQgYmluYXJ5IGRv
IHRoaXM6OgoKICAgICQgSE9TVD14ODZfNjQtdzY0LW1pbmd3MzIgLi9taW5n
dy1jb25maWcKCklmIHlvdSB3YW50IGxpYmFyaWEyIGRsbCB3aXRoIGBgLS1l
bmFibGUtbGliYXJpYTJgYCwgdGhlbiBkb24ndCB1c2UKYGBBUklBMl9TVEFU
SUM9eWVzYGAgYW5kIHByZXBhcmUgdGhlIERMTCB2ZXJzaW9uIG9mIGV4dGVy
bmFsCmxpYnJhcmllcy4KCkNyb3NzLWNvbXBpbGluZyBBbmRyb2lkIGJpbmFy
eQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCkluIHRoaXMgc2Vj
dGlvbiwgd2UgZGVzY3JpYmUgaG93IHRvIGJ1aWxkIEFuZHJvaWQgYmluYXJ5
IHVzaW5nIEFuZHJvaWQKTkRLIGNyb3NzLWNvbXBpbGVyIG9uIERlYmlhbiBM
aW51eC4KCkF0IHRoZSB0aW1lIG9mIHRoaXMgd3JpdGluZywgQW5kcm9pZCBO
REsgcjIwIHNob3VsZCBjb21waWxlIGFyaWEyCndpdGhvdXQgZXJyb3JzLgoK
YGBhbmRyb2lkLWNvbmZpZ2BgIHNjcmlwdCBpcyBhIGNvbmZpZ3VyZSBzY3Jp
cHQgd3JhcHBlciBmb3IgQW5kcm9pZApidWlsZC4gIFdlIHVzZSBpdCB0byBj
cmVhdGUgb2ZmaWNpYWwgQW5kcm9pZCBidWlsZC4gIFRoaXMgc2NyaXB0CmFz
c3VtZXMgdGhlIGZvbGxvd2luZyBsaWJyYXJpZXMgaGF2ZSBiZWVuIGJ1aWx0
IGZvciBjcm9zcy1jb21waWxlOgoKKiBjLWFyZXMKKiBvcGVuc3NsCiogZXhw
YXQKKiB6bGliCiogbGlic3NoMgoKV2hlbiBidWlsZGluZyB0aGUgYWJvdmUg
bGlicmFyaWVzLCBtYWtlIHN1cmUgdGhhdCBkaXNhYmxlIHNoYXJlZApsaWJy
YXJ5IGFuZCBlbmFibGUgb25seSBzdGF0aWMgbGlicmFyeS4gV2UgYXJlIGdv
aW5nIHRvIGxpbmsgdGhvc2UKbGlicmFyaWVzIHN0YXRpY2FsbHkuCgpgYGFu
ZHJvaWQtY29uZmlnYGAgYXNzdW1lcyB0aGF0IGBgJEFORFJPSURfSE9NRWBg
IGFuZCBgYCROREtgYAplbnZpcm9ubWVudCB2YXJpYWJsZXMgYXJlIGRlZmlu
ZWQuCgpXZSBjdXJyZW50bHkgdXNlIEFuZHJvaWQgTkRLIHIyMC4gIGBgJE5E
S2BgIHNob3VsZCBwb2ludCB0byB0aGUKZGlyZWN0b3J5IHRvIEFucm9pZCBO
REsuICBUaGUgYnVpbGQgdG9vbHMgd2lsbCBiZSBmb3VuZCB1bmRlcgpgYCRO
REsvdG9vbGNoYWlucy9sbHZtL3ByZWJ1aWx0L2xpbnV4LXg4Nl82NC9iaW4v
YGAuCgpBbGwgdGhlIGRlcGVuZGVudCBsaWJyYXJpZXMgbXVzdCBiZSBpbnN0
YWxsZWQgdW5kZXIKYGAkQU5EUk9JRF9IT01FL3Vzci9sb2NhbGBgLgoKQWZ0
ZXIgYGBhbmRyb2lkLWNvbmZpZ2BgLCBydW4gYGBtYWtlYGAgdG8gY29tcGls
ZSBzb3VyY2VzLgoKQnVpbGRpbmcgZG9jdW1lbnRhdGlvbgotLS0tLS0tLS0t
LS0tLS0tLS0tLS0tCgpgU3BoaW54IDxodHRwOi8vc3BoaW54LWRvYy5vcmcv
PmBfIGlzIHVzZWQgdG8gYnVpbGQgdGhlCmRvY3VtZW50YXRpb24uIGFyaWEy
IG1hbiBwYWdlcyB3aWxsIGJlIGJ1aWxkIHdoZW4geW91IHJ1biBgYG1ha2Vg
YCBpZgp0aGV5IGFyZSBub3QgdXAtdG8tZGF0ZS4gIFlvdSBjYW4gYWxzbyBi
dWlsZCBIVE1MIHZlcnNpb24gb2YgYXJpYTIgbWFuCnBhZ2UgYnkgYGBtYWtl
IGh0bWxgYC4gVGhlIEhUTUwgdmVyc2lvbiBtYW51YWwgaXMgYWxzbyBhdmFp
bGFibGUgYXQKYG9ubGluZSA8aHR0cHM6Ly9hcmlhMi5naXRodWIuaW8vbWFu
dWFsL2VuL2h0bWwvPmBfIChgUnVzc2lhbgp0cmFuc2xhdGlvbiA8aHR0cHM6
Ly9hcmlhMi5naXRodWIuaW8vbWFudWFsL3J1L2h0bWwvPmBfLCBgUG9ydHVn
dWVzZQp0cmFuc2xhdGlvbiA8aHR0cHM6Ly9hcmlhMi5naXRodWIuaW8vbWFu
dWFsL3B0L2h0bWwvPmBfKS4KCkJpdFRvcnJlbnQKLS0tLS0tLS0tLS0KCkFi
b3V0IGZpbGUgbmFtZXMKfn5+fn5+fn5+fn5+fn5+fgpUaGUgZmlsZSBuYW1l
IG9mIHRoZSBkb3dubG9hZGVkIGZpbGUgaXMgZGV0ZXJtaW5lZCBhcyBmb2xs
b3dzOgoKc2luZ2xlLWZpbGUgbW9kZQogICAgSWYgIm5hbWUiIGtleSBpcyBw
cmVzZW50IGluIC50b3JyZW50IGZpbGUsIGZpbGUgbmFtZSBpcyB0aGUgdmFs
dWUKICAgIG9mICJuYW1lIiBrZXkuIE90aGVyd2lzZSwgZmlsZSBuYW1lIGlz
IHRoZSBiYXNlIG5hbWUgb2YgLnRvcnJlbnQKICAgIGZpbGUgYXBwZW5kZWQg
YnkgIi5maWxlIi4gRm9yIGV4YW1wbGUsIC50b3JyZW50IGZpbGUgaXMKICAg
ICJ0ZXN0LnRvcnJlbnQiLCB0aGVuIGZpbGUgbmFtZSBpcyAidGVzdC50b3Jy
ZW50LmZpbGUiLiAgVGhlCiAgICBkaXJlY3RvcnkgdG8gc3RvcmUgdGhlIGRv
d25sb2FkZWQgZmlsZSBjYW4gYmUgc3BlY2lmaWVkIGJ5IC1kCiAgICBvcHRp
b24uCgptdWx0aS1maWxlIG1vZGUKICAgIFRoZSBjb21wbGV0ZSBkaXJlY3Rv
cnkvZmlsZSBzdHJ1Y3R1cmUgbWVudGlvbmVkIGluIC50b3JyZW50IGZpbGUK
ICAgIGlzIGNyZWF0ZWQuICBUaGUgZGlyZWN0b3J5IHRvIHN0b3JlIHRoZSB0
b3AgZGlyZWN0b3J5IG9mCiAgICBkb3dubG9hZGVkIGZpbGVzIGNhbiBiZSBz
cGVjaWZpZWQgYnkgLWQgb3B0aW9uLgoKQmVmb3JlIGRvd25sb2FkIHN0YXJ0
cywgYSBjb21wbGV0ZSBkaXJlY3Rvcnkgc3RydWN0dXJlIGlzIGNyZWF0ZWQg
aWYKbmVlZGVkLiBCeSBkZWZhdWx0LCBhcmlhMiBvcGVucyBhdCBtb3N0IDEw
MCBmaWxlcyBtZW50aW9uZWQgaW4KLnRvcnJlbnQgZmlsZSwgYW5kIGRpcmVj
dGx5IHdyaXRlcyB0byBhbmQgcmVhZHMgZnJvbSB0aGVzZSBmaWxlcy4gClRo
ZSBudW1iZXIgb2YgZmlsZXMgdG8gb3BlbiBzaW11bHRhbmVvdXNseSBjYW4g
YmUgY29udHJvbGxlZCBieQpgYC0tYnQtbWF4LW9wZW4tZmlsZXNgYCBvcHRp
b24uCgpESFQKfn5+CgphcmlhMiBzdXBwb3J0cyBtYWlubGluZSBjb21wYXRp
YmxlIERIVC4gQnkgZGVmYXVsdCwgdGhlIHJvdXRpbmcgdGFibGUKZm9yIElQ
djQgREhUIGlzIHNhdmVkIHRvIGBgJFhER19DQUNIRV9IT01FL2FyaWEyL2Ro
dC5kYXRgYCBhbmQgdGhlCnJvdXRpbmcgdGFibGUgZm9yIElQdjYgREhUIGlz
IHNhdmVkIHRvCmBgJFhER19DQUNIRV9IT01FL2FyaWEyL2RodDYuZGF0YGAg
dW5sZXNzIGZpbGVzIGV4aXN0IGF0CmBgJEhPTUUvLmFyaWEyL2RodC5kYXRg
YCBvciBgYCRIT01FLy5hcmlhMi9kaHQ2LmRhdGBgLiBhcmlhMiB1c2VzIHNh
bWUKcG9ydCBudW1iZXIgdG8gbGlzdGVuIG9uIGZvciBib3RoIElQdjQgYW5k
IElQdjYgREhULgoKVURQIHRyYWNrZXIKfn5+fn5+fn5+fn4KClVEUCB0cmFj
a2VyIHN1cHBvcnQgaXMgZW5hYmxlZCB3aGVuIElQdjQgREhUIGlzIGVuYWJs
ZWQuICBUaGUgcG9ydApudW1iZXIgb2YgVURQIHRyYWNrZXIgaXMgc2hhcmVk
IHdpdGggREhULiBVc2UgYGAtLWRodC1saXN0ZW4tcG9ydGBgCm9wdGlvbiB0
byBjaGFuZ2UgdGhlIHBvcnQgbnVtYmVyLgoKT3RoZXIgdGhpbmdzIHNob3Vs
ZCBiZSBub3RlZAp+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+CgoqIGBg
LW9gYCBvcHRpb24gaXMgdXNlZCB0byBjaGFuZ2UgdGhlIGZpbGUgbmFtZSBv
ZiAudG9ycmVudCBmaWxlIGl0c2VsZiwKICBub3QgYSBmaWxlIG5hbWUgb2Yg
YSBmaWxlIGluIC50b3JyZW50IGZpbGUuIEZvciB0aGlzIHB1cnBvc2UsIHVz
ZQogIGBgLS1pbmRleC1vdXRgYCBvcHRpb24gaW5zdGVhZC4KKiBUaGUgcG9y
dCBudW1iZXJzIHRoYXQgYXJpYTIgdXNlcyBieSBkZWZhdWx0IGFyZSA2ODgx
LTY5OTkgZm9yIFRDUAogIGFuZCBVRFAuCiogYXJpYTIgZG9lc24ndCBjb25m
aWd1cmUgcG9ydC1mb3J3YXJkaW5nIGF1dG9tYXRpY2FsbHkuIFBsZWFzZQog
IGNvbmZpZ3VyZSB5b3VyIHJvdXRlciBvciBmaXJld2FsbCBtYW51YWxseS4K
KiBUaGUgbWF4aW11bSBudW1iZXIgb2YgcGVlcnMgaXMgNTUuIFRoaXMgbGlt
aXQgbWF5IGJlIGV4Y2VlZGVkIHdoZW4KICBkb3dubG9hZCByYXRlIGlzIGxv
dy4gVGhpcyBkb3dubG9hZCByYXRlIGNhbiBiZSBhZGp1c3RlZCB1c2luZwog
IGBgLS1idC1yZXF1ZXN0LXBlZXItc3BlZWQtbGltaXRgYCBvcHRpb24uCiog
QXMgb2YgcmVsZWFzZSAwLjEwLjAsIGFyaWEyIHN0b3BzIHNlbmRpbmcgcmVx
dWVzdCBtZXNzYWdlIGFmdGVyCiAgc2VsZWN0aXZlIGRvd25sb2FkIGNvbXBs
ZXRlcy4KCk1ldGFsaW5rCi0tLS0tLS0tCgpUaGUgY3VycmVudCBpbXBsZW1l
bnRhdGlvbiBzdXBwb3J0cyBIVFRQKFMpL0ZUUC9TRlRQL0JpdFRvcnJlbnQu
ICBUaGUKb3RoZXIgUDJQIHByb3RvY29scyBhcmUgaWdub3JlZC4gQm90aCBN
ZXRhbGluazQgKFJGQyA1ODU0KSBhbmQKTWV0YWxpbmsgdmVyc2lvbiAzLjAg
ZG9jdW1lbnRzIGFyZSBzdXBwb3J0ZWQuCgpGb3IgY2hlY2tzdW0gdmVyaWZp
Y2F0aW9uLCBtZDUsIHNoYS0xLCBzaGEtMjI0LCBzaGEtMjU2LCBzaGEtMzg0
IGFuZApzaGEtNTEyIGFyZSBzdXBwb3J0ZWQuIElmIG11bHRpcGxlIGhhc2gg
YWxnb3JpdGhtcyBhcmUgcHJvdmlkZWQsIGFyaWEyCnVzZXMgc3Ryb25nZXIg
b25lLiBJZiB3aG9sZSBmaWxlIGNoZWNrc3VtIHZlcmlmaWNhdGlvbiBmYWls
cywgYXJpYTIKZG9lc24ndCByZXRyeSB0aGUgZG93bmxvYWQgYW5kIGp1c3Qg
ZXhpdHMgd2l0aCBub24temVybyByZXR1cm4gY29kZS4KClRoZSBzdXBwb3J0
ZWQgdXNlciBwcmVmZXJlbmNlcyBhcmUgdmVyc2lvbiwgbGFuZ3VhZ2UsIGxv
Y2F0aW9uLApwcm90b2NvbCBhbmQgb3MuCgpJZiBjaHVuayBjaGVja3N1bXMg
YXJlIHByb3ZpZGVkIGluIE1ldGFsaW5rIGZpbGUsIGFyaWEyIGF1dG9tYXRp
Y2FsbHkKdmFsaWRhdGVzIGNodW5rcyBvZiBkYXRhIGR1cmluZyBkb3dubG9h
ZC4gVGhpcyBiZWhhdmlvciBjYW4gYmUgdHVybmVkCm9mZiBieSBhIGNvbW1h
bmQtbGluZSBvcHRpb24uCgpJZiBzaWduYXR1cmUgaXMgaW5jbHVkZWQgaW4g
YSBNZXRhbGluayBmaWxlLCBhcmlhMiBzYXZlcyBpdCBhcyBhIGZpbGUKYWZ0
ZXIgdGhlIGNvbXBsZXRpb24gb2YgdGhlIGRvd25sb2FkLiAgVGhlIGZpbGUg
bmFtZSBpcyBkb3dubG9hZApmaWxlIG5hbWUgKyAiLnNpZyIuIElmIHNhbWUg
ZmlsZSBhbHJlYWR5IGV4aXN0cywgdGhlIHNpZ25hdHVyZSBmaWxlIGlzCm5v
dCBzYXZlZC4KCkluIE1ldGFsaW5rNCwgbXVsdGktZmlsZSB0b3JyZW50IGNv
dWxkIGFwcGVhciBpbiBtZXRhbGluazptZXRhdXJsCmVsZW1lbnQuICBTaW5j
ZSBhcmlhMiBjYW5ub3QgZG93bmxvYWQgMiBzYW1lIHRvcnJlbnRzIGF0IHRo
ZSBzYW1lCnRpbWUsIGFyaWEyIGdyb3VwcyBmaWxlcyBpbiBtZXRhbGluazpm
aWxlIGVsZW1lbnQgd2hpY2ggaGFzIHNhbWUKQml0VG9ycmVudCBtZXRhdXJs
IGFuZCBkb3dubG9hZHMgdGhlbSBmcm9tIGEgc2luZ2xlIEJpdFRvcnJlbnQg
c3dhcm0uClRoaXMgaXMgYmFzaWNhbGx5IG11bHRpLWZpbGUgdG9ycmVudCBk
b3dubG9hZCB3aXRoIGZpbGUgc2VsZWN0aW9uLCBzbwp0aGUgYWRqYWNlbnQg
ZmlsZXMgd2hpY2ggaXMgbm90IGluIE1ldGFsaW5rIGRvY3VtZW50IGJ1dCBz
aGFyZXMgc2FtZQpwaWVjZSB3aXRoIHNlbGVjdGVkIGZpbGUgYXJlIGFsc28g
Y3JlYXRlZC4KCklmIHJlbGF0aXZlIFVSSSBpcyBzcGVjaWZpZWQgaW4gbWV0
YWxpbms6dXJsIG9yIG1ldGFsaW5rOm1ldGF1cmwKZWxlbWVudCwgYXJpYTIg
dXNlcyB0aGUgVVJJIG9mIE1ldGFsaW5rIGZpbGUgYXMgYmFzZSBVUkkgdG8g
cmVzb2x2ZQp0aGUgcmVsYXRpdmUgVVJJLiBJZiByZWxhdGl2ZSBVUkkgaXMg
Zm91bmQgaW4gTWV0YWxpbmsgZmlsZSB3aGljaCBpcwpyZWFkIGZyb20gbG9j
YWwgZGlzaywgYXJpYTIgdXNlcyB0aGUgdmFsdWUgb2YgYGAtLW1ldGFsaW5r
LWJhc2UtdXJpYGAKb3B0aW9uIGFzIGJhc2UgVVJJLiBJZiB0aGlzIG9wdGlv
biBpcyBub3Qgc3BlY2lmaWVkLCB0aGUgcmVsYXRpdmUgVVJJCndpbGwgYmUg
aWdub3JlZC4KCk1ldGFsaW5rL0hUVFAKLS0tLS0tLS0tLS0tLQoKVGhlIGN1
cnJlbnQgaW1wbGVtZW50YXRpb24gb25seSB1c2VzIHJlbD1kdXBsaWNhdGUg
bGlua3Mgb25seS4gIGFyaWEyCnVuZGVyc3RhbmRzIERpZ2VzdCBoZWFkZXIg
ZmllbGRzIGFuZCBjaGVjayB3aGV0aGVyIGl0IG1hdGNoZXMgdGhlCmRpZ2Vz
dCB2YWx1ZSBmcm9tIG90aGVyIHNvdXJjZXMuIElmIGl0IGRpZmZlcnMsIGRy
b3AgY29ubmVjdGlvbi4KYXJpYTIgYWxzbyB1c2VzIHRoaXMgZGlnZXN0IHZh
bHVlIHRvIHBlcmZvcm0gY2hlY2tzdW0gdmVyaWZpY2F0aW9uCmFmdGVyIGRv
d25sb2FkIGZpbmlzaGVkLiBhcmlhMiByZWNvZ25pemVzIGdlbyB2YWx1ZS4g
VG8gdGVsbCBhcmlhMgp3aGljaCBsb2NhdGlvbiB5b3UgcHJlZmVyLCB5b3Ug
Y2FuIHVzZSBgYC0tbWV0YWxpbmstbG9jYXRpb25gYCBvcHRpb24uCgpuZXRy
YwotLS0tLQoKbmV0cmMgc3VwcG9ydCBpcyBlbmFibGVkIGJ5IGRlZmF1bHQg
Zm9yIEhUVFAoUykvRlRQL1NGVFAuICBUbyBkaXNhYmxlCm5ldHJjIHN1cHBv
cnQsIHNwZWNpZnkgLW4gY29tbWFuZC1saW5lIG9wdGlvbi4gIFlvdXIgLm5l
dHJjIGZpbGUKc2hvdWxkIGhhdmUgY29ycmVjdCBwZXJtaXNzaW9ucyg2MDAp
LgoKV2ViU29ja2V0Ci0tLS0tLS0tLQoKVGhlIFdlYlNvY2tldCBzZXJ2ZXIg
ZW1iZWRkZWQgaW4gYXJpYTIgaW1wbGVtZW50cyB0aGUgc3BlY2lmaWNhdGlv
bgpkZWZpbmVkIGluIFJGQyA2NDU1LiBUaGUgc3VwcG9ydGVkIHByb3RvY29s
IHZlcnNpb24gaXMgMTMuCgpsaWJhcmlhMgotLS0tLS0tLQoKVGhlIGxpYmFy
aWEyIGlzIGEgQysrIGxpYnJhcnkgd2hpY2ggb2ZmZXJzIGFyaWEyIGZ1bmN0
aW9uYWxpdHkgdG8gdGhlCmNsaWVudCBjb2RlLiBDdXJyZW50bHksIGxpYmFy
aWEyIGlzIG5vdCBidWlsdCBieSBkZWZhdWx0LiBUbyBlbmFibGUKbGliYXJp
YTIsIHVzZSBgYC0tZW5hYmxlLWxpYmFyaWEyYGAgY29uZmlndXJlIG9wdGlv
bi4gIEJ5IGRlZmF1bHQsCm9ubHkgdGhlIHNoYXJlZCBsaWJyYXJ5IGlzIGJ1
aWx0LiBUbyBidWlsZCBzdGF0aWMgbGlicmFyeSwgdXNlCmBgLS1lbmFibGUt
c3RhdGljYGAgY29uZmlndXJlIG9wdGlvbiBhcyB3ZWxsLiBTZWUgbGliYXJp
YTIKZG9jdW1lbnRhdGlvbiB0byBrbm93IGhvdyB0byB1c2UgQVBJLgoKUmVm
ZXJlbmNlcwotLS0tLS0tLS0tCgoqIGBhcmlhMiBPbmxpbmUgTWFudWFsIDxo
dHRwczovL2FyaWEyLmdpdGh1Yi5pby9tYW51YWwvZW4vaHRtbC8+YF8KKiBo
dHRwczovL2FyaWEyLmdpdGh1Yi5pby8KKiBgUkZDIDk1OSBGSUxFIFRSQU5T
RkVSIFBST1RPQ09MIChGVFApIDxodHRwOi8vdG9vbHMuaWV0Zi5vcmcvaHRt
bC9yZmM5NTk+YF8KKiBgUkZDIDE3MzggVW5pZm9ybSBSZXNvdXJjZSBMb2Nh
dG9ycyAoVVJMKSA8aHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMTcz
OD5gXwoqIGBSRkMgMjQyOCBGVFAgRXh0ZW5zaW9ucyBmb3IgSVB2NiBhbmQg
TkFUcyA8aHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMjQyOD5gXwoq
IGBSRkMgMjYxNiBIeXBlcnRleHQgVHJhbnNmZXIgUHJvdG9jb2wgLS0gSFRU
UC8xLjEgPGh0dHA6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzI2MTY+YF8K
KiBgUkZDIDM2NTkgRXh0ZW5zaW9ucyB0byBGVFAgPGh0dHA6Ly90b29scy5p
ZXRmLm9yZy9odG1sL3JmYzM2NTk+YF8KKiBgUkZDIDM5ODYgVW5pZm9ybSBS
ZXNvdXJjZSBJZGVudGlmaWVyIChVUkkpOiBHZW5lcmljIFN5bnRheCA8aHR0
cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMzk4Nj5gXwoqIGBSRkMgNDAz
OCBBcHBsaWNhdGlvbiBBc3BlY3RzIG9mIElQdjYgVHJhbnNpdGlvbiA8aHR0
cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNDAzOD5gXwoqIGBSRkMgNTg1
NCBUaGUgTWV0YWxpbmsgRG93bmxvYWQgRGVzY3JpcHRpb24gRm9ybWF0IDxo
dHRwOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM1ODU0PmBfCiogYFJGQyA2
MjQ5IE1ldGFsaW5rL0hUVFA6IE1pcnJvcnMgYW5kIEhhc2hlcyA8aHR0cDov
L3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNjI0OT5gXwoqIGBSRkMgNjI2NSBI
VFRQIFN0YXRlIE1hbmFnZW1lbnQgTWVjaGFuaXNtIDxodHRwOi8vdG9vbHMu
aWV0Zi5vcmcvaHRtbC9yZmM2MjY1PmBfCiogYFJGQyA2MjY2IFVzZSBvZiB0
aGUgQ29udGVudC1EaXNwb3NpdGlvbiBIZWFkZXIgRmllbGQgaW4gdGhlIEh5
cGVydGV4dCBUcmFuc2ZlciBQcm90b2NvbCAoSFRUUCkgPGh0dHA6Ly90b29s
cy5pZXRmLm9yZy9odG1sL3JmYzYyNjY+YF8KKiBgUkZDIDY0NTUgVGhlIFdl
YlNvY2tldCBQcm90b2NvbCA8aHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwv
cmZjNjQ1NT5gXwoqIGBSRkMgNjU1NSBIYXBweSBFeWViYWxsczogU3VjY2Vz
cyB3aXRoIER1YWwtU3RhY2sgSG9zdHMgPGh0dHA6Ly90b29scy5pZXRmLm9y
Zy9odG1sL3JmYzY1NTU+YF8KCiogYFRoZSBCaXRUb3JyZW50IFByb3RvY29s
IFNwZWNpZmljYXRpb24gPGh0dHA6Ly93d3cuYml0dG9ycmVudC5vcmcvYmVw
cy9iZXBfMDAwMy5odG1sPmBfCiogYEJpdFRvcnJlbnQ6IERIVCBQcm90b2Nv
bCA8aHR0cDovL3d3dy5iaXR0b3JyZW50Lm9yZy9iZXBzL2JlcF8wMDA1Lmh0
bWw+YF8KKiBgQml0VG9ycmVudDogRmFzdCBFeHRlbnNpb24gPGh0dHA6Ly93
d3cuYml0dG9ycmVudC5vcmcvYmVwcy9iZXBfMDAwNi5odG1sPmBfCiogYEJp
dFRvcnJlbnQ6IElQdjYgVHJhY2tlciBFeHRlbnNpb24gPGh0dHA6Ly93d3cu
Yml0dG9ycmVudC5vcmcvYmVwcy9iZXBfMDAwNy5odG1sPmBfCiogYEJpdFRv
cnJlbnQ6IEV4dGVuc2lvbiBmb3IgUGVlcnMgdG8gU2VuZCBNZXRhZGF0YSBG
aWxlcyA8aHR0cDovL3d3dy5iaXR0b3JyZW50Lm9yZy9iZXBzL2JlcF8wMDA5
Lmh0bWw+YF8KKiBgQml0VG9ycmVudDogRXh0ZW5zaW9uIFByb3RvY29sIDxo
dHRwOi8vd3d3LmJpdHRvcnJlbnQub3JnL2JlcHMvYmVwXzAwMTAuaHRtbD5g
XwoqIGBCaXRUb3JyZW50OiBNdWx0aXRyYWNrZXIgTWV0YWRhdGEgRXh0ZW5z
aW9uIDxodHRwOi8vd3d3LmJpdHRvcnJlbnQub3JnL2JlcHMvYmVwXzAwMTIu
aHRtbD5gXwoqIGBCaXRUb3JyZW50OiBVRFAgVHJhY2tlciBQcm90b2NvbCBm
b3IgQml0VG9ycmVudCA8aHR0cDovL3d3dy5iaXR0b3JyZW50Lm9yZy9iZXBz
L2JlcF8wMDE1Lmh0bWw+YF8KICBhbmQgYEJpdFRvcnJlbnQgdWRwLXRyYWNr
ZXIgcHJvdG9jb2wgc3BlY2lmaWNhdGlvbiA8aHR0cDovL3d3dy5yYXN0ZXJi
YXIuY29tL3Byb2R1Y3RzL2xpYnRvcnJlbnQvdWRwX3RyYWNrZXJfcHJvdG9j
b2wuaHRtbD5gXy4KKiBgQml0VG9ycmVudDogV2ViU2VlZCAtIEhUVFAvRlRQ
IFNlZWRpbmcgKEdldFJpZ2h0IHN0eWxlKSA8aHR0cDovL3d3dy5iaXR0b3Jy
ZW50Lm9yZy9iZXBzL2JlcF8wMDE5Lmh0bWw+YF8KKiBgQml0VG9ycmVudDog
UHJpdmF0ZSBUb3JyZW50cyA8aHR0cDovL3d3dy5iaXR0b3JyZW50Lm9yZy9i
ZXBzL2JlcF8wMDI3Lmh0bWw+YF8KKiBgQml0VG9ycmVudDogQml0VG9ycmVu
dCBESFQgRXh0ZW5zaW9ucyBmb3IgSVB2NiA8aHR0cDovL3d3dy5iaXR0b3Jy
ZW50Lm9yZy9iZXBzL2JlcF8wMDMyLmh0bWw+YF8KKiBgQml0VG9ycmVudDog
TWVzc2FnZSBTdHJlYW0gRW5jcnlwdGlvbiA8aHR0cDovL3dpa2kudnV6ZS5j
b20vdy9NZXNzYWdlX1N0cmVhbV9FbmNyeXB0aW9uPmBfCiogYEthZGVtbGlh
OiBBIFBlZXItdG8tcGVlciBJbmZvcm1hdGlvbiBTeXN0ZW0gQmFzZWQgb24g
dGhlICBYT1IgTWV0cmljIDxodHRwczovL3Bkb3MuY3NhaWwubWl0LmVkdS9+
cGV0YXIvcGFwZXJzL21heW1vdW5rb3Yta2FkZW1saWEtbG5jcy5wZGY+YF8K
",,17613,"ZGlzdDogdHJ1c3R5Cmxhbmd1YWdlOiBjcHAKY2FjaGU6IGNjYWNoZQptYXRy
aXg6CiAgaW5jbHVkZToKICAgIC0gb3M6IGxpbnV4CiAgICAgIGNvbXBpbGVy
OiBnY2MKICAgIC0gb3M6IGxpbnV4CiAgICAgIGNvbXBpbGVyOiBjbGFuZwog
ICAgLSBvczogb3N4CiAgICAgIG9zeF9pbWFnZTogeGNvZGU4LjMKICAgICAg
Y29tcGlsZXI6IGNsYW5nCnN1ZG86IHJlcXVpcmVkCmFkZG9uczoKICBhcHQ6
CiAgICBzb3VyY2VzOgogICAgLSB1YnVudHUtdG9vbGNoYWluLXItdGVzdAog
ICAgcGFja2FnZXM6CiAgICAtIGcrKy03CiAgICAtIGF1dG9jb25mCiAgICAt
IGF1dG9tYWtlCiAgICAtIGF1dG90b29scy1kZXYKICAgIC0gYXV0b3BvaW50
CiAgICAtIGxpYnRvb2wKICAgIC0gcGtnLWNvbmZpZwogICAgLSBsaWJzc2wt
ZGV2CiAgICAtIGxpYmMtYXJlcy1kZXYKICAgIC0gbGlieG1sMi1kZXYKICAg
IC0gemxpYjFnLWRldgogICAgLSBsaWJzcWxpdGUzLWRldgogICAgLSBsaWJz
c2gyLTEtZGV2CiAgICAtIGxpYmNwcHVuaXQtZGV2CmJlZm9yZV9pbnN0YWxs
OgogIC0gJENDIC0tdmVyc2lvbgogIC0gaWYgW1sgIiRUUkFWSVNfT1NfTkFN
RSIgPT0gIm9zeCIgXV07IHRoZW4gYnJldyB1cGRhdGUgOyBmaQogICMgZ21w
IGlzIGFscmVhZHkgaW5zdGFsbGVkCiAgLSBpZiBbWyAiJFRSQVZJU19PU19O
QU1FIiA9PSAib3N4IiBdXTsgdGhlbiBicmV3IGluc3RhbGwgLS1mb3JjZSBj
cHB1bml0IGdldHRleHQgb3BlbnNzbCBsaWJzc2gyIGMtYXJlcyBzcWxpdGUz
IGNjYWNoZSA7IGZpCiAgLSBpZiBbWyAiJFRSQVZJU19PU19OQU1FIiA9PSAi
b3N4IiBdXTsgdGhlbiBicmV3IGxpbmsgLS1mb3JjZSBjcHB1bml0IGdldHRl
eHQgb3BlbnNzbCBsaWJzc2gyIGMtYXJlcyBzcWxpdGUzIGNjYWNoZSA7IGZp
CiAgLSBpZiBbICIkQ1hYIiA9ICJnKysiIF07IHRoZW4gZXhwb3J0IENYWD0i
ZysrLTciIENDPSJnY2MtNyI7IGZpCiAgLSBpZiBbICIkQ1hYIiA9ICJjbGFu
ZysrIiBdOyB0aGVuIGV4cG9ydCBDWFg9IiRDWFggLVF1bnVzZWQtYXJndW1l
bnRzIiBDQz0iJENDIC1RdW51c2VkLWFyZ3VtZW50cyI7IGZpCiAgLSAkQ0Mg
LS12ZXJzaW9uCmJlZm9yZV9zY3JpcHQ6CiAgLSBhdXRvcmVjb25mIC1pCiAg
LSBhdXRvbWFrZQogIC0gYXV0b2NvbmYKICAtIGlmIFtbICIkVFJBVklTX09T
X05BTUUiID09ICJvc3giIF1dOyB0aGVuIC4vY29uZmlndXJlIC0td2l0aG91
dC1vcGVuc3NsIC0td2l0aG91dC1nbnV0bHMgLS13aXRoLWFwcGxldGxzIC0t
ZGlzYWJsZS1ubHMgQ1BQRkxBR1M9LWZzYW5pdGl6ZT1hZGRyZXNzIExERkxB
R1M9LWZzYW5pdGl6ZT1hZGRyZXNzOyBmaQogIC0gaWYgW1sgIiRUUkFWSVNf
T1NfTkFNRSIgIT0gIm9zeCIgXV07IHRoZW4gLi9jb25maWd1cmUgQ1BQRkxB
R1M9LWZzYW5pdGl6ZT1hZGRyZXNzIExERkxBR1M9Ii1mc2FuaXRpemU9YWRk
cmVzcyAtZnVzZS1sZD1nb2xkIjsgZmkKc2NyaXB0OgogIC0gbWFrZSBDQz0i
Y2NhY2hlICRDQyIgQ1hYPSJjY2FjaGUgJENYWCIgY2hlY2sK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
