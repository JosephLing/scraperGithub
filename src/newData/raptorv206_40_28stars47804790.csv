name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'keras-yolo3',127846381,b'A Keras implementation of YOLOv3 (Tensorflow backend)',b'Python',376,4790,,171,False,b'https://api.github.com/repos/qqwweee/keras-yolo3/forks',"IyBrZXJhcy15b2xvMwoKWyFbbGljZW5zZV0oaHR0cHM6Ly9pbWcuc2hpZWxk
cy5pby9naXRodWIvbGljZW5zZS9tYXNoYXBlL2FwaXN0YXR1cy5zdmcpXShM
SUNFTlNFKQoKIyMgSW50cm9kdWN0aW9uCgpBIEtlcmFzIGltcGxlbWVudGF0
aW9uIG9mIFlPTE92MyAoVGVuc29yZmxvdyBiYWNrZW5kKSBpbnNwaXJlZCBi
eSBbYWxsYW56ZWxlbmVyL1lBRDJLXShodHRwczovL2dpdGh1Yi5jb20vYWxs
YW56ZWxlbmVyL1lBRDJLKS4KCgotLS0KCiMjIFF1aWNrIFN0YXJ0CgoxLiBE
b3dubG9hZCBZT0xPdjMgd2VpZ2h0cyBmcm9tIFtZT0xPIHdlYnNpdGVdKGh0
dHA6Ly9wanJlZGRpZS5jb20vZGFya25ldC95b2xvLykuCjIuIENvbnZlcnQg
dGhlIERhcmtuZXQgWU9MTyBtb2RlbCB0byBhIEtlcmFzIG1vZGVsLgozLiBS
dW4gWU9MTyBkZXRlY3Rpb24uCgpgYGAKd2dldCBodHRwczovL3BqcmVkZGll
LmNvbS9tZWRpYS9maWxlcy95b2xvdjMud2VpZ2h0cwpweXRob24gY29udmVy
dC5weSB5b2xvdjMuY2ZnIHlvbG92My53ZWlnaHRzIG1vZGVsX2RhdGEveW9s
by5oNQpweXRob24geW9sb192aWRlby5weSBbT1BUSU9OUy4uLl0gLS1pbWFn
ZSwgZm9yIGltYWdlIGRldGVjdGlvbiBtb2RlLCBPUgpweXRob24geW9sb192
aWRlby5weSBbdmlkZW9fcGF0aF0gW291dHB1dF9wYXRoIChvcHRpb25hbCld
CmBgYAoKRm9yIFRpbnkgWU9MT3YzLCBqdXN0IGRvIGluIGEgc2ltaWxhciB3
YXksIGp1c3Qgc3BlY2lmeSBtb2RlbCBwYXRoIGFuZCBhbmNob3IgcGF0aCB3
aXRoIGAtLW1vZGVsIG1vZGVsX2ZpbGVgIGFuZCBgLS1hbmNob3JzIGFuY2hv
cl9maWxlYC4KCiMjIyBVc2FnZQpVc2UgLS1oZWxwIHRvIHNlZSB1c2FnZSBv
ZiB5b2xvX3ZpZGVvLnB5OgpgYGAKdXNhZ2U6IHlvbG9fdmlkZW8ucHkgWy1o
XSBbLS1tb2RlbCBNT0RFTF0gWy0tYW5jaG9ycyBBTkNIT1JTXQogICAgICAg
ICAgICAgICAgICAgICBbLS1jbGFzc2VzIENMQVNTRVNdIFstLWdwdV9udW0g
R1BVX05VTV0gWy0taW1hZ2VdCiAgICAgICAgICAgICAgICAgICAgIFstLWlu
cHV0XSBbLS1vdXRwdXRdCgpwb3NpdGlvbmFsIGFyZ3VtZW50czoKICAtLWlu
cHV0ICAgICAgICBWaWRlbyBpbnB1dCBwYXRoCiAgLS1vdXRwdXQgICAgICAg
VmlkZW8gb3V0cHV0IHBhdGgKCm9wdGlvbmFsIGFyZ3VtZW50czoKICAtaCwg
LS1oZWxwICAgICAgICAgc2hvdyB0aGlzIGhlbHAgbWVzc2FnZSBhbmQgZXhp
dAogIC0tbW9kZWwgTU9ERUwgICAgICBwYXRoIHRvIG1vZGVsIHdlaWdodCBm
aWxlLCBkZWZhdWx0IG1vZGVsX2RhdGEveW9sby5oNQogIC0tYW5jaG9ycyBB
TkNIT1JTICBwYXRoIHRvIGFuY2hvciBkZWZpbml0aW9ucywgZGVmYXVsdAog
ICAgICAgICAgICAgICAgICAgICBtb2RlbF9kYXRhL3lvbG9fYW5jaG9ycy50
eHQKICAtLWNsYXNzZXMgQ0xBU1NFUyAgcGF0aCB0byBjbGFzcyBkZWZpbml0
aW9ucywgZGVmYXVsdAogICAgICAgICAgICAgICAgICAgICBtb2RlbF9kYXRh
L2NvY29fY2xhc3Nlcy50eHQKICAtLWdwdV9udW0gR1BVX05VTSAgTnVtYmVy
IG9mIEdQVSB0byB1c2UsIGRlZmF1bHQgMQogIC0taW1hZ2UgICAgICAgICAg
ICBJbWFnZSBkZXRlY3Rpb24gbW9kZSwgd2lsbCBpZ25vcmUgYWxsIHBvc2l0
aW9uYWwgYXJndW1lbnRzCmBgYAotLS0KCjQuIE11bHRpR1BVIHVzYWdlOiB1
c2UgYC0tZ3B1X251bSBOYCB0byB1c2UgTiBHUFVzLiBJdCBpcyBwYXNzZWQg
dG8gdGhlIFtLZXJhcyBtdWx0aV9ncHVfbW9kZWwoKV0oaHR0cHM6Ly9rZXJh
cy5pby91dGlscy8jbXVsdGlfZ3B1X21vZGVsKS4KCiMjIFRyYWluaW5nCgox
LiBHZW5lcmF0ZSB5b3VyIG93biBhbm5vdGF0aW9uIGZpbGUgYW5kIGNsYXNz
IG5hbWVzIGZpbGUuICAKICAgIE9uZSByb3cgZm9yIG9uZSBpbWFnZTsgIAog
ICAgUm93IGZvcm1hdDogYGltYWdlX2ZpbGVfcGF0aCBib3gxIGJveDIgLi4u
IGJveE5gOyAgCiAgICBCb3ggZm9ybWF0OiBgeF9taW4seV9taW4seF9tYXgs
eV9tYXgsY2xhc3NfaWRgIChubyBzcGFjZSkuICAKICAgIEZvciBWT0MgZGF0
YXNldCwgdHJ5IGBweXRob24gdm9jX2Fubm90YXRpb24ucHlgICAKICAgIEhl
cmUgaXMgYW4gZXhhbXBsZToKICAgIGBgYAogICAgcGF0aC90by9pbWcxLmpw
ZyA1MCwxMDAsMTUwLDIwMCwwIDMwLDUwLDIwMCwxMjAsMwogICAgcGF0aC90
by9pbWcyLmpwZyAxMjAsMzAwLDI1MCw2MDAsMgogICAgLi4uCiAgICBgYGAK
CjIuIE1ha2Ugc3VyZSB5b3UgaGF2ZSBydW4gYHB5dGhvbiBjb252ZXJ0LnB5
IC13IHlvbG92My5jZmcgeW9sb3YzLndlaWdodHMgbW9kZWxfZGF0YS95b2xv
X3dlaWdodHMuaDVgICAKICAgIFRoZSBmaWxlIG1vZGVsX2RhdGEveW9sb193
ZWlnaHRzLmg1IGlzIHVzZWQgdG8gbG9hZCBwcmV0cmFpbmVkIHdlaWdodHMu
CgozLiBNb2RpZnkgdHJhaW4ucHkgYW5kIHN0YXJ0IHRyYWluaW5nLiAgCiAg
ICBgcHl0aG9uIHRyYWluLnB5YCAgCiAgICBVc2UgeW91ciB0cmFpbmVkIHdl
aWdodHMgb3IgY2hlY2twb2ludCB3ZWlnaHRzIHdpdGggY29tbWFuZCBsaW5l
IG9wdGlvbiBgLS1tb2RlbCBtb2RlbF9maWxlYCB3aGVuIHVzaW5nIHlvbG9f
dmlkZW8ucHkKICAgIFJlbWVtYmVyIHRvIG1vZGlmeSBjbGFzcyBwYXRoIG9y
IGFuY2hvciBwYXRoLCB3aXRoIGAtLWNsYXNzZXMgY2xhc3NfZmlsZWAgYW5k
IGAtLWFuY2hvcnMgYW5jaG9yX2ZpbGVgLgoKSWYgeW91IHdhbnQgdG8gdXNl
IG9yaWdpbmFsIHByZXRyYWluZWQgd2VpZ2h0cyBmb3IgWU9MT3YzOiAgCiAg
ICAxLiBgd2dldCBodHRwczovL3BqcmVkZGllLmNvbS9tZWRpYS9maWxlcy9k
YXJrbmV0NTMuY29udi43NGAgIAogICAgMi4gcmVuYW1lIGl0IGFzIGRhcmtu
ZXQ1My53ZWlnaHRzICAKICAgIDMuIGBweXRob24gY29udmVydC5weSAtdyBk
YXJrbmV0NTMuY2ZnIGRhcmtuZXQ1My53ZWlnaHRzIG1vZGVsX2RhdGEvZGFy
a25ldDUzX3dlaWdodHMuaDVgICAKICAgIDQuIHVzZSBtb2RlbF9kYXRhL2Rh
cmtuZXQ1M193ZWlnaHRzLmg1IGluIHRyYWluLnB5CgotLS0KCiMjIFNvbWUg
aXNzdWVzIHRvIGtub3cKCjEuIFRoZSB0ZXN0IGVudmlyb25tZW50IGlzCiAg
ICAtIFB5dGhvbiAzLjUuMgogICAgLSBLZXJhcyAyLjEuNQogICAgLSB0ZW5z
b3JmbG93IDEuNi4wCgoyLiBEZWZhdWx0IGFuY2hvcnMgYXJlIHVzZWQuIElm
IHlvdSB1c2UgeW91ciBvd24gYW5jaG9ycywgcHJvYmFibHkgc29tZSBjaGFu
Z2VzIGFyZSBuZWVkZWQuCgozLiBUaGUgaW5mZXJlbmNlIHJlc3VsdCBpcyBu
b3QgdG90YWxseSB0aGUgc2FtZSBhcyBEYXJrbmV0IGJ1dCB0aGUgZGlmZmVy
ZW5jZSBpcyBzbWFsbC4KCjQuIFRoZSBzcGVlZCBpcyBzbG93ZXIgdGhhbiBE
YXJrbmV0LiBSZXBsYWNpbmcgUElMIHdpdGggb3BlbmN2IG1heSBoZWxwIGEg
bGl0dGxlLgoKNS4gQWx3YXlzIGxvYWQgcHJldHJhaW5lZCB3ZWlnaHRzIGFu
ZCBmcmVlemUgbGF5ZXJzIGluIHRoZSBmaXJzdCBzdGFnZSBvZiB0cmFpbmlu
Zy4gT3IgdHJ5IERhcmtuZXQgdHJhaW5pbmcuIEl0J3MgT0sgaWYgdGhlcmUg
aXMgYSBtaXNtYXRjaCB3YXJuaW5nLgoKNi4gVGhlIHRyYWluaW5nIHN0cmF0
ZWd5IGlzIGZvciByZWZlcmVuY2Ugb25seS4gQWRqdXN0IGl0IGFjY29yZGlu
ZyB0byB5b3VyIGRhdGFzZXQgYW5kIHlvdXIgZ29hbC4gQW5kIGFkZCBmdXJ0
aGVyIHN0cmF0ZWd5IGlmIG5lZWRlZC4KCjcuIEZvciBzcGVlZGluZyB1cCB0
aGUgdHJhaW5pbmcgcHJvY2VzcyB3aXRoIGZyb3plbiBsYXllcnMgdHJhaW5f
Ym90dGxlbmVjay5weSBjYW4gYmUgdXNlZC4gSXQgd2lsbCBjb21wdXRlIHRo
ZSBib3R0bGVuZWNrIGZlYXR1cmVzIG9mIHRoZSBmcm96ZW4gbW9kZWwgZmly
c3QgYW5kIHRoZW4gb25seSB0cmFpbnMgdGhlIGxhc3QgbGF5ZXJzLiBUaGlz
IG1ha2VzIHRyYWluaW5nIG9uIENQVSBwb3NzaWJsZSBpbiBhIHJlYXNvbmFi
bGUgdGltZS4gU2VlIFt0aGlzXShodHRwczovL2Jsb2cua2VyYXMuaW8vYnVp
bGRpbmctcG93ZXJmdWwtaW1hZ2UtY2xhc3NpZmljYXRpb24tbW9kZWxzLXVz
aW5nLXZlcnktbGl0dGxlLWRhdGEuaHRtbCkgZm9yIG1vcmUgaW5mb3JtYXRp
b24gb24gYm90dGxlbmVjayBmZWF0dXJlcy4K
",,4790,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'fission',66050533,b'Fast and Simple Serverless Functions for Kubernetes',b'Go',195,4789,,146,False,b'https://api.github.com/repos/fission/fission/forks',"IyBGaXNzaW9uOiBTZXJ2ZXJsZXNzIEZ1bmN0aW9ucyBmb3IgS3ViZXJuZXRl
cwoKWyFbQnVpbGQgU3RhdHVzXShodHRwczovL3RyYXZpcy1jaS5vcmcvZmlz
c2lvbi9maXNzaW9uLnN2Zz9icmFuY2g9bWFzdGVyKV0oaHR0cHM6Ly90cmF2
aXMtY2kub3JnL2Zpc3Npb24vZmlzc2lvbikKWyFbR28gUmVwb3J0IENhcmRd
KGh0dHBzOi8vZ29yZXBvcnRjYXJkLmNvbS9iYWRnZS9naXRodWIuY29tL2Zp
c3Npb24vZmlzc2lvbildKGh0dHBzOi8vZ29yZXBvcnRjYXJkLmNvbS9yZXBv
cnQvZ2l0aHViLmNvbS9maXNzaW9uL2Zpc3Npb24pClshW0Zpc3Npb24gU2xh
Y2tdKGh0dHA6Ly9zbGFjay5maXNzaW9uLmlvL2JhZGdlLnN2ZyldKGh0dHA6
Ly9zbGFjay5maXNzaW9uLmlvKQoKW2Zpc3Npb24uaW9dKGh0dHA6Ly9maXNz
aW9uLmlvKSBbQGZpc3Npb25pb10oaHR0cDovL3R3aXR0ZXIuY29tL2Zpc3Np
b25pbykKCkZpc3Npb24gaXMgYSBmYXN0IHNlcnZlcmxlc3MgZnJhbWV3b3Jr
IGZvciBLdWJlcm5ldGVzIHdpdGggYSBmb2N1cyBvbgpkZXZlbG9wZXIgcHJv
ZHVjdGl2aXR5IGFuZCBoaWdoIHBlcmZvcm1hbmNlLgoKRmlzc2lvbiBvcGVy
YXRlcyBvbiBfanVzdCB0aGUgY29kZV86IERvY2tlciBhbmQgS3ViZXJuZXRl
cyBhcmUKYWJzdHJhY3RlZCBhd2F5IHVuZGVyIG5vcm1hbCBvcGVyYXRpb24s
IHRob3VnaCB5b3UgY2FuIHVzZSBib3RoIHRvCmV4dGVuZCBGaXNzaW9uIGlm
IHlvdSB3YW50IHRvLgoKRmlzc2lvbiBpcyBleHRlbnNpYmxlIHRvIGFueSBs
YW5ndWFnZTsgdGhlIGNvcmUgaXMgd3JpdHRlbiBpbiBHbywgYW5kCmxhbmd1
YWdlLXNwZWNpZmljIHBhcnRzIGFyZSBpc29sYXRlZCBpbiBzb21ldGhpbmcg
Y2FsbGVkCl9lbnZpcm9ubWVudHNfIChtb3JlIGJlbG93KS4gIEZpc3Npb24g
Y3VycmVudGx5IHN1cHBvcnRzIE5vZGVKUywgUHl0aG9uLCBSdWJ5LCBHbywg
ClBIUCwgQmFzaCwgYW5kIGFueSBMaW51eCBleGVjdXRhYmxlLCB3aXRoIG1v
cmUgbGFuZ3VhZ2VzIGNvbWluZyBzb29uLgoKIyBQZXJmb3JtYW5jZTogMTAw
bXNlYyBjb2xkIHN0YXJ0CgpGaXNzaW9uIG1haW50YWlucyBhIHBvb2wgb2Yg
Indhcm0iIGNvbnRhaW5lcnMgdGhhdCBlYWNoIGNvbnRhaW4gYQpzbWFsbCBk
eW5hbWljIGxvYWRlci4gIFdoZW4gYSBmdW5jdGlvbiBpcyBmaXJzdCBjYWxs
ZWQsCmkuZS4gImNvbGQtc3RhcnRlZCIsIGEgcnVubmluZyBjb250YWluZXIg
aXMgY2hvc2VuIGFuZCB0aGUgZnVuY3Rpb24gaXMKbG9hZGVkLiAgVGhpcyBw
b29sIGlzIHdoYXQgbWFrZXMgRmlzc2lvbiBmYXN0OiBjb2xkLXN0YXJ0IGxh
dGVuY2llcwphcmUgdHlwaWNhbGx5IGFib3V0IDEwMG1zZWMuCgojIEt1YmVy
bmV0ZXMgaXMgdGhlIHJpZ2h0IHBsYWNlIGZvciBTZXJ2ZXJsZXNzCgpXZSdy
ZSBidWlsdCBvbiBLdWJlcm5ldGVzIGJlY2F1c2Ugd2UgdGhpbmsgYW55IG5v
bi10cml2aWFsIGFwcCB3aWxsCnVzZSBhIGNvbWJpbmF0aW9uIG9mIHNlcnZl
cmxlc3MgZnVuY3Rpb25zIGFuZCBtb3JlIGNvbnZlbnRpb25hbAptaWNyb3Nl
cnZpY2VzLCBhbmQgS3ViZXJuZXRlcyBpcyBhIGdyZWF0IGZyYW1ld29yayB0
byBicmluZyB0aGVzZQp0b2dldGhlciBzZWFtbGVzc2x5LgoKQnVpbGRpbmcg
b24gS3ViZXJuZXRlcyBhbHNvIG1lYW5zIHRoYXQgYW55dGhpbmcgeW91IGRv
IGZvciBvcGVyYXRpb25zCm9uIHlvdXIgS3ViZXJuZXRlcyBjbHVzdGVyICZt
ZGFzaDsgc3VjaCBhcyBtb25pdG9yaW5nIG9yIGxvZwphZ2dyZWdhdGlvbiAm
bWRhc2g7IGFsc28gaGVscHMgd2l0aCBvcHMgb24geW91ciBGaXNzaW9uIGRl
cGxveW1lbnQuCgojIEdldHRpbmcgc3RhcnRlZCBhbmQgZG9jdW1lbnRhdGlv
bgoKIyMgRmlzc2lvbiBDb25jZXB0cwoKVmlzaXQgW2NvbmNlcHRzXShodHRw
czovL2RvY3MuZmlzc2lvbi5pby9kb2NzL2NvbmNlcHRzLykgZm9yIG1vcmUg
ZGV0YWlscy4KCiMjIERvY3VtZW50YXRpb25zCgpZb3UgY2FuIGxlYXJuIG1v
cmUgYWJvdXQgRmlzc2lvbiBhbmQgZ2V0IHN0YXJ0ZWQgZnJvbSBbRmlzc2lv
biBEb2NzXShodHRwczovL2RvY3MuZmlzc2lvbi5pby9kb2NzKS4KKiBTZWUg
dGhlIFtpbnN0YWxsYXRpb24gZ3VpZGVdKGh0dHBzOi8vZG9jcy5maXNzaW9u
LmlvL2RvY3MvaW5zdGFsbGF0aW9uLykgZm9yIGluc3RhbGxpbmcgYW5kIHJ1
bm5pbmcgRmlzc2lvbi4KKiBTZWUgdGhlIFt0cm91Ymxlc2hvb3RpbmcgZ3Vp
ZGVdKGh0dHBzOi8vZG9jcy5maXNzaW9uLmlvL2RvY3MvdHJvdWJsZS1zaG9v
dGluZy8pIGZvciBkZWJ1Z2dpbmcgeW91ciBmdW5jdGlvbnMgYW5kIEZpc3Np
b24gaW5zdGFsbGF0aW9uLgoKIyMgVXNhZ2UKCmBgYGJhc2gKICAjIEFkZCB0
aGUgc3RvY2sgTm9kZUpTIGVudiB0byB5b3VyIEZpc3Npb24gZGVwbG95bWVu
dAogICQgZmlzc2lvbiBlbnYgY3JlYXRlIC0tbmFtZSBub2RlanMgLS1pbWFn
ZSBmaXNzaW9uL25vZGUtZW52CgogICMgQSBqYXZhc2NyaXB0IG9uZS1saW5l
ciB0aGF0IHByaW50cyAiaGVsbG8gd29ybGQiCiAgJCBjdXJsIGh0dHBzOi8v
cmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9maXNzaW9uL2Zpc3Npb24vbWFz
dGVyL2V4YW1wbGVzL25vZGVqcy9oZWxsby5qcyA+IGhlbGxvLmpzCgogICMg
VXBsb2FkIHlvdXIgZnVuY3Rpb24gY29kZSB0byBmaXNzaW9uCiAgJCBmaXNz
aW9uIGZ1bmN0aW9uIGNyZWF0ZSAtLW5hbWUgaGVsbG8gLS1lbnYgbm9kZWpz
IC0tY29kZSBoZWxsby5qcwoKICAjIE1hcCBHRVQgL2hlbGxvIHRvIHlvdXIg
bmV3IGZ1bmN0aW9uCiAgJCBmaXNzaW9uIHJvdXRlIGNyZWF0ZSAtLW1ldGhv
ZCBHRVQgLS11cmwgL2hlbGxvIC0tZnVuY3Rpb24gaGVsbG8KCiAgIyBSdW4g
dGhlIGZ1bmN0aW9uLiAgVGhpcyB0YWtlcyBhYm91dCAxMDBtc2VjIHRoZSBm
aXJzdCB0aW1lLgogICQgZmlzc2lvbiBmdW5jdGlvbiB0ZXN0IC0tbmFtZSBo
ZWxsbwogIEhlbGxvLCB3b3JsZCEKYGBgCgojIENvbnRyaWJ1dGluZwoKIyMg
QnVpbGRpbmcgRmlzc2lvbgpTZWUgdGhlIFtjb21waWxhdGlvbiBndWlkZV0o
aHR0cHM6Ly9kb2NzLmZpc3Npb24uaW8vZG9jcy9jb250cmlidXRpbmcvKS4K
CiMjIENvbnRhY3QKUmVhY2ggdXMgb24gW3NsYWNrXShodHRwOi8vc2xhY2su
Zmlzc2lvbi5pbykgb3IgW3R3aXR0ZXJdKGh0dHBzOi8vdHdpdHRlci5jb20v
Zmlzc2lvbmlvKS4KCkZpc3Npb24gaXMgYSBwcm9qZWN0IGJ5IFttYW55IGNv
bnRyaWJ1dG9yc10oaHR0cHM6Ly9naXRodWIuY29tL2Zpc3Npb24vZmlzc2lv
bi9ncmFwaHMvY29udHJpYnV0b3JzKS4KCiMjIENvbW11bml0eSBtZWV0aW5n
IAoKQSByZWd1bGFyIGNvbW11bml0eSBtZWV0aW5nIHRha2VzIHBsYWNlIGV2
ZXJ5IG90aGVyIFRodXJzZGF5IGF0IDA4OjMwIEFNIFBUIChQYWNpZmljIFRp
bWUpLiBbQ29udmVydCB0byB5b3VyIGxvY2FsIHRpbWV6b25lXShodHRwOi8v
d3d3LnRoZXRpbWV6b25lY29udmVydGVyLmNvbS8/dD0wODozMCZ0ej1QVCUy
MCUyOFBhY2lmaWMlMjBUaW1lJTI5KS4KCiMgT2ZmaWNpYWwgUmVsZWFzZXMK
Ck9mZmljaWFsIHJlbGVhc2VzIG9mIEZpc3Npb24gY2FuIGJlIGZvdW5kIG9u
IFt0aGUgcmVsZWFzZXMgcGFnZV0oaHR0cHM6Ly9naXRodWIuY29tL2Zpc3Np
b24vZmlzc2lvbi9yZWxlYXNlcykuIApQbGVhc2Ugbm90ZSB0aGF0IGl0IGlz
IHN0cm9uZ2x5IHJlY29tbWVuZGVkIHRoYXQgeW91IHVzZSBvZmZpY2lhbCBy
ZWxlYXNlcyBvZiBGaXNzaW9uLCBhcyB1bnJlbGVhc2VkIHZlcnNpb25zIGZy
b20gCnRoZSBtYXN0ZXIgYnJhbmNoIGFyZSBzdWJqZWN0IHRvIGNoYW5nZXMg
YW5kIGluY29tcGF0aWJpbGl0aWVzIHRoYXQgd2lsbCBub3QgYmUgc3VwcG9y
dGVkIGluIHRoZSBvZmZpY2lhbCByZWxlYXNlcy4gCkJ1aWxkcyBmcm9tIHRo
ZSBtYXN0ZXIgYnJhbmNoIGNhbiBoYXZlIGZ1bmN0aW9uYWxpdHkgY2hhbmdl
ZCBhbmQgZXZlbiByZW1vdmVkIGF0IGFueSB0aW1lIHdpdGhvdXQgY29tcGF0
aWJpbGl0eSBzdXBwb3J0IAphbmQgd2l0aG91dCBwcmlvciBub3RpY2UuCgoj
IExpY2Vuc2luZwoKRmlzc2lvbiBpcyB1bmRlciB0aGUgQXBhY2hlIDIuMCBs
aWNlbnNlLgo=
",,4789,"c3VkbzogcmVxdWlyZWQKCmRpc3Q6IHRydXN0eQoKYnJhbmNoZXM6CiAgb25s
eToKICAgIC0gbWFzdGVyCgpsYW5ndWFnZTogZ28KCmdvOgogIC0gMS4xMi54
CgplbnY6CiAgLSBLVUJFQ09ORklHPSR7SE9NRX0vLmt1YmUvY29uZmlnIFBB
VEg9JEhPTUUvazhzY2xpOiRIT01FL3Rvb2w6JEhPTUUvZ29vZ2xlLWNsb3Vk
LXNkay9iaW46JHtQQVRIfSBHTzExMU1PRFVMRT1vbiBET0NLRVJfQ0FDSEVf
RElSPSR7SE9NRX0vZG9ja2VyLwoKY2FjaGU6CiAgZGlyZWN0b3JpZXM6CiAg
ICAtICRIT01FL2dvb2dsZS1jbG91ZC1zZGsvCiAgICAtICRIT01FL2s4c2Ns
aQogICAgLSAkSE9NRS90b29sCiAgICAtICRIT01FLy5jYWNoZS9nby1idWls
ZAogICAgLSAkSE9NRS9nb3BhdGgvcGtnL21vZAoKc2VydmljZXM6CiAgLSBk
b2NrZXIKCmJlZm9yZV9pbnN0YWxsOgogIC0gc3VkbyBhcHQtZ2V0IHVwZGF0
ZQojICAtIHN1ZG8gYXB0LWdldCAteSAtbyBEcGtnOjpPcHRpb25zOjo9Ii0t
Zm9yY2UtY29uZm5ldyIgaW5zdGFsbCBkb2NrZXItY2UKICAtIHN1ZG8gYXB0
LWdldCAteSBpbnN0YWxsIGFwYWNoZTItdXRpbHMgcGFyYWxsZWwgcmVhbHBh
dGgKICAtIHN1ZG8gc3lzY3RsIG5ldC5pcHY2LmNvbmYuYWxsLmRpc2FibGVf
aXB2Nj0wCgppbnN0YWxsOgogIC0gaGFjay90cmF2aXMta3ViZS1zZXR1cC5z
aAoKYmVmb3JlX3NjcmlwdDoKICAtIGNkICR7VFJBVklTX0JVSUxEX0RJUn0K
ICAtIGdvIG1vZCBkb3dubG9hZAogIC0gaGFjay92ZXJpZnktc3RhdGljY2hl
Y2suc2gKICAtIGhhY2svdmVyaWZ5LWdvZm10LnNoCiAgLSBoYWNrL3Zlcmlm
eS1nb3ZldC5zaAogIC0gaGVsbSBsaW50IGNoYXJ0cy9maXNzaW9uLWFsbC8g
Y2hhcnRzL2Zpc3Npb24tY29yZS8KICAtIGhhY2svcnVudGVzdHMuc2gKICAt
IHRlc3QvYnVpbGQuc2gKCnNjcmlwdDoKICAtIGNkICR7VFJBVklTX0JVSUxE
X0RJUn0KICAtIHRlc3QvdGVzdC5zaAogIC0gdGVzdC91cGdyYWRlL2Zpc3Np
b25fdXBncmFkZV90ZXN0LnNoCgphZnRlcl9zY3JpcHQ6CiAgLSBiYXNoIDwo
Y3VybCAtcyBodHRwczovL2NvZGVjb3YuaW8vYmFzaCkKICAtIGt1YmVjdGwg
LS1uYW1lc3BhY2UgZGVmYXVsdCBkZWxldGUgY29uZmlnbWFwIC1sIHRyYXZp
c0lEPSR7VFJBVklTX0JVSUxEX0lEfSAjIHJlbW92ZSBpbi10ZXN0IGNvbmZp
Z21hcCB0byBpbmRpY2F0ZSB0aGlzIENJIGJ1aWxkIGZpbmlzaGVkCgpub3Rp
ZmljYXRpb25zOgogIHNsYWNrOgogICAgcm9vbXM6CiAgICAgIHNlY3VyZTog
WVozNHZzZncxVHRmdEp5cGcxTXlQNCtpaE9OSTRnYXhlUzNGZ2hCUWxpNitF
ZXpqemN4T1h5ajVWRCt4MHVjWGZEZVRhRHJGZm1WTjBTQUdPYk9vWlVFK2Vh
OUtBb1RvNTB0UkxhRDlrd09UQUNpZWtaYWxDNHV1Qmd1SDBEMS9BNnZsYlU4
ZGNoc3I5bXZJaGJpc0c2bVRuY2RQdHFHWVlIdHlCUW1lNm5nbW1IYlZBUUZa
Y0lCSG1OdURiL0hXaFNyOEtNRXV5QjYrbUJYTFlFTEhuWG5mMjZjT2hkR05h
YWdxQ09KVGllbVg4NVJHd0l1T1B4eUJoS0RGTUx5SG9oRFQ3RkpNSC9xaWp2
ZUU2WWdPWVRRQzVuWWMyTnAxS3ZDN2hRa0l1NG51eWN6eVlsck5RbC9UV3Yr
U1ZJOFBqSXMwUFl1Q3VEM2dVcW9WRWk4ZDk0SGJyT1B6RkVwYndEUzlQNHFM
MzlER21jbzFRNTZWcXhlNnNSSTB2RFdQYjVnQ1AxbFNnczNQTUVDVm43V29y
L3BUdmNMK0MrVTJqTHdXSlVsMHZieVdDTDduZ2wvM2lUc3NWN3FCcFVySTdP
Y2x3cDhMclFvOWZQajBETDRnRTlyTmFucEVXalE2eVBHYXlzSUwxekxIdFJn
aGhtNTJBMjJOSkdwNzFqa1MyS0VwTGk2WldGWWpNZXVYdzVlT1FGaHFGbHp5
UkpPbUxZYTNCNjA3VExXdXlvMkwyQ3hBZk1tcTBGR2ZlbXZya0xaSVd0bFFL
SzR5OUltcHNVUndhR1QyWEN0VGhGdEhsNzd3RXNzOTEzbkMrVDJkWDNPNUJs
MFVteEZkNVMzbVZNMTA5SThjNGxEb3N4bkFqUmZTOU1oZUZsckcwZ2pTSlNC
Q3c1N3g3ZjA9CiAgICBvbl9zdWNjZXNzOiBjaGFuZ2UKICAgIG9uX2ZhaWx1
cmU6IGFsd2F5cwo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'jsonschema2pojo',10873724,"b'Generate Java types from JSON or JSON Schema and annotates those types for data-binding with Jackson, Gson, etc'",b'Java',127,4787,,206,False,b'https://api.github.com/repos/joelittlejohn/jsonschema2pojo/forks',"IyBqc29uc2NoZW1hMnBvam8gWyFbQnVpbGQgU3RhdHVzXShodHRwczovL3Ry
YXZpcy1jaS5vcmcvam9lbGl0dGxlam9obi9qc29uc2NoZW1hMnBvam8uc3Zn
P2JyYW5jaD1tYXN0ZXIpXShodHRwczovL3RyYXZpcy1jaS5vcmcvam9lbGl0
dGxlam9obi9qc29uc2NoZW1hMnBvam8pIFshW01hdmVuIENlbnRyYWxdKGh0
dHBzOi8vbWF2ZW4tYmFkZ2VzLmhlcm9rdWFwcC5jb20vbWF2ZW4tY2VudHJh
bC9vcmcuanNvbnNjaGVtYTJwb2pvL2pzb25zY2hlbWEycG9qby9iYWRnZS5z
dmcpXShodHRwOi8vc2VhcmNoLm1hdmVuLm9yZy8jc2VhcmNoJTdDZ2ElN0Mx
JTdDZyUzQSUyMm9yZy5qc29uc2NoZW1hMnBvam8lMjIpCgpfanNvbnNjaGVt
YTJwb2pvXyBnZW5lcmF0ZXMgSmF2YSB0eXBlcyBmcm9tIEpTT04gU2NoZW1h
IChvciBleGFtcGxlIEpTT04pIGFuZCBjYW4gYW5ub3RhdGUgdGhvc2UgdHlw
ZXMgZm9yIGRhdGEtYmluZGluZyB3aXRoIEphY2tzb24gMS54LCBKYWNrc29u
IDIueCBvciBHc29uLgoKKipfKk5vdGU6Kl8gdGhlcmUgYXJlIGJyZWFraW5n
IGNoYW5nZXMgYmV0d2VlbiAwLjUuMSBhbmQgMS4wLjAuIENoZWNrIHRoZSBb
Y2hhbmdlIGxvZ10oaHR0cHM6Ly9naXRodWIuY29tL2pvZWxpdHRsZWpvaG4v
anNvbnNjaGVtYTJwb2pvL2Jsb2IvbWFzdGVyL0NIQU5HRUxPRy5tZCkuIEFu
eXRoaW5nIG1hcmtlZCBpbiBib2xkIGluIHRoZSAxLjAuMCBhbHBoYSwgYmV0
YSBhbmQgZmluYWwgcmVsZWFzZSBpcyBhIGJyZWFraW5nIGNoYW5nZS4qKgoK
IyMjIFtUcnkganNvbnNjaGVtYTJwb2pvIG9ubGluZV0oaHR0cDovL2pzb25z
Y2hlbWEycG9qby5vcmcvKTxicj5vciBgYnJldyBpbnN0YWxsIGpzb25zY2hl
bWEycG9qb2AKCllvdSBjYW4gdXNlIGpzb25zY2hlbWEycG9qbyBhcyBhIE1h
dmVuIHBsdWdpbiwgYW4gQW50IHRhc2ssIGEgY29tbWFuZCBsaW5lIHV0aWxp
dHksIGEgR3JhZGxlIHBsdWdpbiBvciBlbWJlZGRlZCB3aXRoaW4geW91ciBv
d24gSmF2YSBhcHAuIFRoZSBbR2V0dGluZyBTdGFydGVkXShodHRwczovL2dp
dGh1Yi5jb20vam9lbGl0dGxlam9obi9qc29uc2NoZW1hMnBvam8vd2lraS9H
ZXR0aW5nLVN0YXJ0ZWQpIGd1aWRlIHdpbGwgc2hvdyB5b3UgaG93LgoKQSB2
ZXJ5IHNpbXBsZSBNYXZlbiBleGFtcGxlOgpgYGB4bWwKPHBsdWdpbj4KICAg
IDxncm91cElkPm9yZy5qc29uc2NoZW1hMnBvam88L2dyb3VwSWQ+CiAgICA8
YXJ0aWZhY3RJZD5qc29uc2NoZW1hMnBvam8tbWF2ZW4tcGx1Z2luPC9hcnRp
ZmFjdElkPgogICAgPHZlcnNpb24+MS4wLjE8L3ZlcnNpb24+CiAgICA8Y29u
ZmlndXJhdGlvbj4KICAgICAgICA8c291cmNlRGlyZWN0b3J5PiR7YmFzZWRp
cn0vc3JjL21haW4vcmVzb3VyY2VzL3NjaGVtYTwvc291cmNlRGlyZWN0b3J5
PgogICAgICAgIDx0YXJnZXRQYWNrYWdlPmNvbS5leGFtcGxlLnR5cGVzPC90
YXJnZXRQYWNrYWdlPgogICAgPC9jb25maWd1cmF0aW9uPgogICAgPGV4ZWN1
dGlvbnM+CiAgICAgICAgPGV4ZWN1dGlvbj4KICAgICAgICAgICAgPGdvYWxz
PgogICAgICAgICAgICAgICAgPGdvYWw+Z2VuZXJhdGU8L2dvYWw+CiAgICAg
ICAgICAgIDwvZ29hbHM+CiAgICAgICAgPC9leGVjdXRpb24+CiAgICA8L2V4
ZWN1dGlvbnM+CjwvcGx1Z2luPgpgYGAKClVzZWZ1bCBwYWdlczoKICAqICoq
W0dldHRpbmcgc3RhcnRlZF0oaHR0cHM6Ly9naXRodWIuY29tL2pvZWxpdHRs
ZWpvaG4vanNvbnNjaGVtYTJwb2pvL3dpa2kvR2V0dGluZy1TdGFydGVkKSoq
CiAgKiAqKltIb3cgdG8gY29udHJpYnV0ZV0oaHR0cHM6Ly9naXRodWIuY29t
L2pvZWxpdHRsZWpvaG4vanNvbnNjaGVtYTJwb2pvL2Jsb2IvbWFzdGVyL0NP
TlRSSUJVVElORy5tZCkqKgogICogW1JlZmVyZW5jZV0oaHR0cHM6Ly9naXRo
dWIuY29tL2pvZWxpdHRsZWpvaG4vanNvbnNjaGVtYTJwb2pvL3dpa2kvUmVm
ZXJlbmNlKQogICogW0xhdGVzdCBKYXZhZG9jc10oaHR0cHM6Ly9qb2VsaXR0
bGVqb2huLmdpdGh1Yi5pby9qc29uc2NoZW1hMnBvam8vamF2YWRvY3MvMS4w
LjEvKQogICogW0RvY3VtZW50YXRpb24gZm9yIHRoZSBNYXZlbiBwbHVnaW5d
KGh0dHBzOi8vam9lbGl0dGxlam9obi5naXRodWIuaW8vanNvbnNjaGVtYTJw
b2pvL3NpdGUvMS4wLjEvZ2VuZXJhdGUtbW9qby5odG1sKQogICogW0RvY3Vt
ZW50YXRpb24gZm9yIHRoZSBBbnQgdGFza10oaHR0cHM6Ly9qb2VsaXR0bGVq
b2huLmdpdGh1Yi5pby9qc29uc2NoZW1hMnBvam8vc2l0ZS8xLjAuMS9Kc29u
c2NoZW1hMlBvam9UYXNrLmh0bWwpCgpQcm9qZWN0IHJlc291cmNlczoKICAq
IFtEb3dubG9hZHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9qb2VsaXR0bGVqb2hu
L2pzb25zY2hlbWEycG9qby9yZWxlYXNlcykKICAqIFtNYWlsaW5nIGxpc3Rd
KGh0dHBzOi8vZ3JvdXBzLmdvb2dsZS5jb20vZm9ydW0vIyFmb3J1bS9qc29u
c2NoZW1hMnBvam8tdXNlcnMpCgpMaWNlbnNlZCB1bmRlciB0aGUgW0FwYWNo
ZSBMaWNlbnNlLCBWZXJzaW9uIDIuMF0oaHR0cDovL3d3dy5hcGFjaGUub3Jn
L2xpY2Vuc2VzL0xJQ0VOU0UtMi4wKS4KCjxhIGhyZWY9Imh0dHBzOi8vd3d3
LnlvdXJraXQuY29tIj48aW1nIHNyYz0iaHR0cHM6Ly93d3cueW91cmtpdC5j
b20vaW1hZ2VzL3lrbG9nby5wbmciIGFsdD0iWW91cktpdCIgdGl0bGU9Illv
dXJLaXQiIGFsaWduPSJyaWdodCIgd2lkdGg9IjE4NSIvPjwvYT4KClNwZWNp
YWwgdGhhbmtzIHRvIFlvdXJLaXQsIHdobyBzdXBwb3J0IHRoaXMgcHJvamVj
dCB0aHJvdWdoIGEgZnJlZSBsaWNlbnNlIGZvciB0aGVpciBmdWxsLWZlYXR1
cmVkIFtZb3VyS2l0IEphdmEgUHJvZmlsZXJdKGh0dHBzOi8vd3d3LnlvdXJr
aXQuY29tL2phdmEvcHJvZmlsZXIpLgo=
",,4787,"bGFuZ3VhZ2U6IGphdmEKb3M6IGxpbnV4CgpqZGs6IG9wZW5qZGs4CgpiZWZv
cmVfY2FjaGU6CiAgLSBybSAtZiAgJEhPTUUvLmdyYWRsZS9jYWNoZXMvbW9k
dWxlcy0yL21vZHVsZXMtMi5sb2NrCiAgLSBybSAtZnIgJEhPTUUvLmdyYWRs
ZS9jYWNoZXMvKi9wbHVnaW4tcmVzb2x1dGlvbi8KICAtIHJtIC1mciAkSE9N
RS8uZ3JhZGxlL2NhY2hlcy8qL3NjcmlwdHMvCgpjYWNoZToKICBkaXJlY3Rv
cmllczoKICAgIC0gIiRIT01FLy5tMiIKICAgIC0gIiRIT01FLy5ncmFkbGUv
Y2FjaGVzLyIKICAgIC0gIiRIT01FLy5ncmFkbGUvd3JhcHBlci8iCgpzY3Jp
cHQ6CiAgLSBtdm4gdmVyaWZ5
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'AndroidStaggeredGrid',15057216,b'An Android staggered grid view which supports multiple columns with rows of varying sizes.',b'Java',108,4786,,319,False,b'https://api.github.com/repos/etsy/AndroidStaggeredGrid/forks',"CkFuZHJvaWRTdGFnZ2VyZWRHcmlkCj09PT09PT09PT09PT09PT09PT09PQoK
CiMjTm90aWNlIC0gRGVwcmVjYXRlZCAtIDA5LTIwMTUKClRoaXMgbGlicmFy
eSBoYXMgYmVlbiBkZXByZWNhdGVkLiBXZSB3aWxsIG5vIGxvbmdlciBiZSBz
aGlwcGluZyBhbnkgdXBkYXRlcyBvciBhcHByb3ZpbmcgY29tbXVuaXR5IHB1
bGwgcmVxdWVzdHMgZm9yIHRoaXMgcHJvamVjdC4KCldoaWxlIHRoZSBjb2Rl
IHdpbGwgcmVtYWluIGZvciBhbnlvbmUgd2hvIHdpc2hlcyB0byB1c2UgaXQs
IHdlIHN1Z2dlc3QgeW91IHByZWZlciB1c2luZyBHb29nbGUncyBvd24gW2BS
ZWN5Y2xlclZpZXcgYF0oaHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20v
cmVmZXJlbmNlL2FuZHJvaWQvc3VwcG9ydC92Ny93aWRnZXQvUmVjeWNsZXJW
aWV3Lmh0bWwpIHdpdGggdGhlaXIgW2BTdGFnZ2VyZWRHcmlkTGF5b3V0TWFu
YWdlcmBdKGh0dHBzOi8vZGV2ZWxvcGVyLmFuZHJvaWQuY29tL3JlZmVyZW5j
ZS9hbmRyb2lkL3N1cHBvcnQvdjcvd2lkZ2V0L1N0YWdnZXJlZEdyaWRMYXlv
dXRNYW5hZ2VyLmh0bWwpLiBXZSBhcmUgZG9pbmcgdGhlIHNhbWUgaW50ZXJu
YWxseSBhdCBFdHN5LgoKVGhhbmtzIHRvIGV2ZXJ5b25lIHdobyB1c2VkIHRo
ZSBsaWJyYXJ5IGFuZCBzdWJtaXR0ZWQgY29kZSBvciBpc3N1ZXMgdG8gaW1w
cm92ZSBpdC4KCiMjQWJvdXQKCkFuIEFuZHJvaWQgc3RhZ2dlcmVkIGdyaWQg
dmlldyB3aGljaCBzdXBwb3J0cyBtdWx0aXBsZSBjb2x1bW5zIHdpdGggcm93
cyBvZiB2YXJ5aW5nIHNpemVzLgoKVGhlIGBTdGFnZ2VyZWRHcmlkVmlld2Ag
d2FzIGRldmVsb3BlZCBkdWUgdG8gcmVxdWlyZW1lbnRzIGZvciB0aGUgRXRz
eSBhcHAgbm90IG1ldCBieSBhbnkgZXhpc3RpbmcgQW5kcm9pZCBsaWJyYXJp
ZXMuCk5hbWVseSBhIHN0YWJsZSBpbXBsZW1lbnRhdGlvbiB3aXRoIHRoZSBh
YmlsaXR5IHRvIGhhdmUgYSBkaWZmZXJlbnQgbnVtYmVyIG9mIGNvbHVtbnMg
aW4gbGFuZHNjYXBlICYgcG9ydHJhaXQsCnRvIHN5bmMgZ3JpZCBwb3NpdGlv
biBhY3Jvc3Mgb3JpZW50YXRpb24gY2hhbmdlcyBhbmQgc3VwcG9ydCBmb3Ig
aGVhZGVycyAmIGZvb3RlcnMuCgohW1N0YWdnZXJlZCBHcmlkIFNhbXBsZSBJ
bWFnZV1bMV0KCiMjRmVhdHVyZXMKCiAqIENvbmZpZ3VyYWJsZSBjb2x1bW4g
Y291bnQgZm9yIHBvcnRyYWl0IGFuZCBsYW5kc2NhcGUgb3JpZW50YXRpb25z
LgogKiBTeW5jJ2Qgcm93IHBvc2l0aW9uIGFjcm9zcyBvcmllbnRhdGlvbiBj
aGFuZ2VzLgogKiBDb25maWd1cmFibGUgaXRlbSBtYXJnaW4uCiAqIFN1cHBv
cnQgZm9yIGhlYWRlcnMgJiBmb290ZXJzLgogKiBJbnRlcm5hbCBwYWRkaW5n
IHRoYXQgZG9lcyBub3QgYWZmZWN0IHRoZSBoZWFkZXIgJiBmb290ZXIuCiAq
IEV4dGVuZHMgW2BBYnNMaXN0Vmlld2BdKGh0dHA6Ly9kZXZlbG9wZXIuYW5k
cm9pZC5jb20vcmVmZXJlbmNlL2FuZHJvaWQvd2lkZ2V0L0Fic0xpc3RWaWV3
Lmh0bWwpIC0gIm1vc3RseSIKICogU3VwcG9ydHMgW2BBYnNMaXN0Vmlldy5P
blNjcm9sbExpc3RlbmVyYF0oaHR0cDovL2RldmVsb3Blci5hbmRyb2lkLmNv
bS9yZWZlcmVuY2UvYW5kcm9pZC93aWRnZXQvQWJzTGlzdFZpZXcuT25TY3Jv
bGxMaXN0ZW5lci5odG1sKQoKIyNTZXR1cAoKVGhlIGxpYnJhcnkgd2FzIGJ1
aWx0IGZvciBhbmQgdGVzdGVkIG9uIEFuZHJvaWQgdmVyc2lvbiAyLjMuMyhT
REsgMTApIGFuZCBhYm92ZS4gSXQgY291bGQgYmUgbW9kaWZpZWQgdG8gc3Vw
cG9ydCBvbGRlciB2ZXJzaW9ucyBpZiByZXF1aXJlZC4KClRoZSBzaW1wbGVz
dCB3YXkgdG8gdXNlIEFuZHJvaWRTdGFnZ2VyZWRHcmlkIGlzIHRvIGFkZCB0
aGUgbGlicmFyeSBhcyBhIGdyYWRsZSBhYXIgZGVwZW5kZW5jeSB0byB5b3Vy
IGJ1aWxkLiBTZWUgdGhlIFtDSEFOR0VMT0cubWRdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9ldHN5L0FuZHJvaWRTdGFnZ2VyZWRHcmlkL2Jsb2IvbWFzdGVyL0NI
QU5HRUxPRy5tZCkgZm9yIHRoZSBsYXRlc3QgdmVyc2lvbiBudW1iZXIuCgpg
YGAKcmVwb3NpdG9yaWVzIHsKICAgIG1hdmVuQ2VudHJhbCgpCn0KCmRlcGVu
ZGVuY2llcyB7CiAgICBjb21waWxlICdjb20uZXRzeS5hbmRyb2lkLmdyaWQ6
bGlicmFyeTp4LngueCcgLy8gc2VlIGNoYW5nZWxvZwp9CmBgYAoKQWx0ZXJu
YXRpdmVseSBpbXBvcnQgdGhlIGAvbGlicmFyeWAgcHJvamVjdCBpbnRvIHlv
dXIgQW5kcm9pZCBTdHVkaW8gcHJvamVjdCBhbmQgYWRkIGl0IGFzIGEgZGVw
ZW5kZW5jeSBpbiB5b3VyIGBidWlsZC5ncmFkbGVgLgoKVGhlIGxpYnJhcnkg
aXMgY3VycmVudGx5IGNvbmZpZ3VyZWQgdG8gYmUgYnVpbHQgdmlhIEdyYWRs
ZSBvbmx5LiBJdCBoYXMgdGhlIGZvbGxvd2luZyBkZXBlbmRlbmNpZXM6Cgog
KiBBbmRyb2lkIEdyYWRsZSBwbHVnaW4gdjAuOS4yIC0gYGNvbS5hbmRyb2lk
LnRvb2xzLmJ1aWxkOmdyYWRsZTowLjkuMmAKICogQW5kcm9pZCBTdXBwb3J0
IExpYnJhcnkgdjE5LjEgLSBgY29tLmFuZHJvaWQuc3VwcG9ydDpzdXBwb3J0
LXY0OjE5LjEuK2AKClN0aWxsIHVzZSBFY2xpcHNlL2J1aWxkaW5nIHdpdGgg
QW50PyBZb3UgY2FuIHN0aWxsIHVzZSBBbmRyb2lkU3RhZ2dlcmVkR3JpZCwg
aXQncyBqdXN0IGEgZmV3IGV4dHJhIHN0ZXBzIChsZWZ0IHVwIHRvIHRoZSBy
ZWFkZXIpLgoKIyNVc2FnZQoKKlBsZWFzZSBzZWUgdGhlIGAvc2FtcGxlYCBh
cHAgZm9yIGEgbW9yZSBkZXRhaWxlZCBjb2RlIGV4YW1wbGUgb2YgaG93IHRv
IHVzZSB0aGUgbGlicmFyeS4qCgoxLiBBZGQgdGhlIGBTdGFnZ2VyZWRHcmlk
Vmlld2AgdG8gdGhlIGxheW91dCB5b3Ugd2FudCB0byBzaG93LgogICAgYGBg
eG1sCgogICAgICAgIDxjb20uZXRzeS5hbmRyb2lkLmdyaWQuU3RhZ2dlcmVk
R3JpZFZpZXcKICAgICAgICAgICAgeG1sbnM6YW5kcm9pZD0iaHR0cDovL3Nj
aGVtYXMuYW5kcm9pZC5jb20vYXBrL3Jlcy9hbmRyb2lkIgogICAgICAgICAg
ICB4bWxuczphcHA9Imh0dHA6Ly9zY2hlbWFzLmFuZHJvaWQuY29tL2Fway9y
ZXMtYXV0byIKICAgICAgICAgICAgYW5kcm9pZDppZD0iQCtpZC9ncmlkX3Zp
ZXciCiAgICAgICAgICAgIGFuZHJvaWQ6bGF5b3V0X3dpZHRoPSJtYXRjaF9w
YXJlbnQiCiAgICAgICAgICAgIGFuZHJvaWQ6bGF5b3V0X2hlaWdodD0ibWF0
Y2hfcGFyZW50IgogICAgICAgICAgICBhcHA6aXRlbV9tYXJnaW49IjhkcCIK
ICAgICAgICAgICAgYXBwOmNvbHVtbl9jb3VudD0iQGludGVnZXIvY29sdW1u
X2NvdW50IiAvPgogICAgYGBgCjIuIENvbmZpZ3VyZSBhdHRyaWJ1dGVzLgog
KiBgaXRlbV9tYXJnaW5gIC0gVGhlIG1hcmdpbiBhcm91bmQgZWFjaCBncmlk
IGl0ZW0gKGRlZmF1bHQgMGRwKS4KICogYGNvbHVtbl9jb3VudGAgLSBUaGUg
bnVtYmVyIG9mIGNvbHVtbnMgZGlzcGxheWVkLiBXaWxsIG92ZXJyaWRlIGNv
bHVtbl9jb3VudF9wb3J0cmFpdCBhbmQgY29sdW1uX2NvdW50X2xhbmRzY2Fw
ZSBpZiBwcmVzZW50IChkZWZhdWx0IDApCiAqIGBjb2x1bW5fY291bnRfcG9y
dHJhaXRgIC0gVGhlIG51bWJlciBvZiBjb2x1bW5zIGRpc3BsYXllZCB3aGVu
IHRoZSBncmlkIGlzIGluIHBvcnRyYWl0IChkZWZhdWx0IDIpLgogKiBgY29s
dW1uX2NvdW50X2xhbmRzY2FwZWAgLSBUaGUgbnVtYmVyIG9mIGNvbHVtbnMg
ZGlzcGxheWVkIHdoZW4gdGhlIGdyaWQgaXMgaW4gbGFuZHNjYXBlIChkZWZh
dWx0IDMpLgogKiBgZ3JpZF9wYWRkaW5nTGVmdGAgLSBQYWRkaW5nIHRvIHRo
ZSBsZWZ0IG9mIHRoZSBncmlkLiBEb2VzIG5vdCBhcHBseSB0byBoZWFkZXJz
IGFuZCBmb290ZXJzIChkZWZhdWx0IDApLgogKiBgZ3JpZF9wYWRkaW5nUmln
aHRgIC0gUGFkZGluZyB0byB0aGUgcmlnaHQgb2YgdGhlIGdyaWQuIERvZXMg
bm90IGFwcGx5IHRvIGhlYWRlcnMgYW5kIGZvb3RlcnMgKGRlZmF1bHQgMCku
CiAqIGBncmlkX3BhZGRpbmdUb3BgIC0gUGFkZGluZyB0byB0aGUgdG9wIG9m
IHRoZSBncmlkLiBEb2VzIG5vdCBhcHBseSB0byBoZWFkZXJzIGFuZCBmb290
ZXJzIChkZWZhdWx0IDApLgogKiBgZ3JpZF9wYWRkaW5nQm90dG9tYCAtIFBh
ZGRpbmcgdG8gdGhlIGJvdHRvbSBvZiB0aGUgZ3JpZC4gRG9lcyBub3QgYXBw
bHkgdG8gaGVhZGVycyBhbmQgZm9vdGVycyAoZGVmYXVsdCAwKS4KMy4gU2V0
dXAgYW4gYWRhcHRlciBqdXN0IGxpa2UgeW91IHdvdWxkIHdpdGggYSBgR3Jp
ZFZpZXdgL2BMaXN0Vmlld2AuCiAgICBgYGBqYXZhCiAgICBMaXN0QWRhcHRl
ciBhZGFwdGVyID0gLi4uOwoKICAgIFN0YWdnZXJlZEdyaWRWaWV3IGdyaWRW
aWV3ID0gKFN0YWdnZXJlZEdyaWRWaWV3KSBmaW5kVmlld0J5SWQoUi5pZC5n
cmlkX3ZpZXcpOwoKICAgIGdyaWRWaWV3LnNldEFkYXB0ZXIoYWRhcHRlcik7
CiAgICBgYGAKKipOT1RFOioqCkFzIGNvbHVtbiB3aWR0aHMgY2hhbmdlIG9u
IG9yaWVudGF0aW9uIGNoYW5nZSwgdGhlIGdyaWQgdmlldyBleHBlY3RzIHRo
YXQgYWxsIGNoaWxkcmVuCm1haW50YWluIHRoZWlyIG93biB3aWR0aCB0byBo
ZWlnaHQgcmF0aW8uIFRvIGFzc2lzdCB3aXRoIHRoaXMgdGhlIHByb2plY3Qg
aW5jbHVkZXMgdGhlCmBEeW5hbWljSGVpZ2h0SW1hZ2VWaWV3YCBhcyBhbiBl
eGFtcGxlIG9mIGEgdmlldyB0aGF0IG1lYXN1cmVzIGl0cyBoZWlnaHQgYmFz
ZWQgb24gaXRzIHdpZHRoLgoKIyNUT0RPCgpUaGUgYFN0YWdnZXJlZEdyaWRW
aWV3YCBkb2VzIG5vdCBzdXBwb3J0IHRoZSBmb2xsb3dpbmc6CgogKiBJdGVt
IHNlbGVjdG9yIGRyYXdhYmxlcwogKiBJdGVtIGxvbmcgcHJlc3MgZXZlbnQK
ICogU2Nyb2xsIGJhcnMKICogUm93IGRpdmlkZXJzCiAqIEVkZ2UgZWZmZWN0
CiAqIEZhZGluZyBlZGdlCiAqIE92ZXJzY3JvbGwKCiMjTGljZW5zZQoKICAg
IENvcHlyaWdodCAoYykgMjAxMyBFdHN5CgogICAgTGljZW5zZWQgdW5kZXIg
dGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNl
Iik7CiAgICB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBj
b21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAgICBZb3UgbWF5IG9idGFp
biBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKCiAgICAgICBodHRwOi8vd3d3
LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKCiAgICBVbmxlc3Mg
cmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdy
aXRpbmcsIHNvZnR3YXJlCiAgICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGlj
ZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAogICAg
V0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQs
IGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiAgICBTZWUgdGhlIExpY2Vu
c2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlz
c2lvbnMgYW5kCiAgICBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4K
ClsxXTogaHR0cDovL2YuY2wubHkvaXRlbXMvMnoxQjBZME0wRzBPMmsxbDNK
MDMvVHJlbmRpbmcucG5nCg==
",,4786,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'mean',15508537,"b'MEAN.JS - Full-Stack JavaScript Using MongoDB, Express, AngularJS, and Node.js - '",b'JavaScript',161,4786,,329,False,b'https://api.github.com/repos/meanjs/mean/forks',"WyFbTUVBTi5KUyBMb2dvXShodHRwOi8vbWVhbmpzLm9yZy9pbWcvbG9nby1z
bWFsbC5wbmcpXShodHRwOi8vbWVhbmpzLm9yZy8pCgpbIVtHaXR0ZXJdKGh0
dHBzOi8vYmFkZ2VzLmdpdHRlci5pbS9Kb2luJTIwQ2hhdC5zdmcpXShodHRw
czovL2dpdHRlci5pbS9tZWFuanMvbWVhbj91dG1fc291cmNlPWJhZGdlJnV0
bV9tZWRpdW09YmFkZ2UmdXRtX2NhbXBhaWduPXByLWJhZGdlJnV0bV9jb250
ZW50PWJhZGdlKQpbIVtCdWlsZCBTdGF0dXNdKGh0dHBzOi8vdHJhdmlzLWNp
Lm9yZy9tZWFuanMvbWVhbi5zdmc/YnJhbmNoPW1hc3RlcildKGh0dHBzOi8v
dHJhdmlzLWNpLm9yZy9tZWFuanMvbWVhbikKWyFbRGVwZW5kZW5jaWVzIFN0
YXR1c10oaHR0cHM6Ly9kYXZpZC1kbS5vcmcvbWVhbmpzL21lYW4uc3ZnKV0o
aHR0cHM6Ly9kYXZpZC1kbS5vcmcvbWVhbmpzL21lYW4pClshW0NvdmVyYWdl
IFN0YXR1c10oaHR0cHM6Ly9jb3ZlcmFsbHMuaW8vcmVwb3MvbWVhbmpzL21l
YW4vYmFkZ2Uuc3ZnP2JyYW5jaD1tYXN0ZXImc2VydmljZT1naXRodWIpXSho
dHRwczovL2NvdmVyYWxscy5pby9naXRodWIvbWVhbmpzL21lYW4/YnJhbmNo
PW1hc3RlcikKWyFbS25vd24gVnVsbmVyYWJpbGl0aWVzXShodHRwczovL3Nu
eWsuaW8vdGVzdC9naXRodWIvbWVhbmpzL21lYW4vYmFkZ2Uuc3ZnKV0oaHR0
cHM6Ly9zbnlrLmlvL3Rlc3QvZ2l0aHViL21lYW5qcy9tZWFuKQoKTUVBTi5K
UyBpcyBhIGZ1bGwtc3RhY2sgSmF2YVNjcmlwdCBvcGVuLXNvdXJjZSBzb2x1
dGlvbiwgd2hpY2ggcHJvdmlkZXMgYSBzb2xpZCBzdGFydGluZyBwb2ludCBm
b3IgW01vbmdvREJdKGh0dHA6Ly93d3cubW9uZ29kYi5vcmcvKSwgW05vZGUu
anNdKGh0dHA6Ly93d3cubm9kZWpzLm9yZy8pLCBbRXhwcmVzc10oaHR0cDov
L2V4cHJlc3Nqcy5jb20vKSwgYW5kIFtBbmd1bGFySlNdKGh0dHA6Ly9hbmd1
bGFyanMub3JnLykgYmFzZWQgYXBwbGljYXRpb25zLiBUaGUgaWRlYSBpcyB0
byBzb2x2ZSB0aGUgY29tbW9uIGlzc3VlcyB3aXRoIGNvbm5lY3RpbmcgdGhv
c2UgZnJhbWV3b3JrcywgYnVpbGQgYSByb2J1c3QgZnJhbWV3b3JrIHRvIHN1
cHBvcnQgZGFpbHkgZGV2ZWxvcG1lbnQgbmVlZHMsIGFuZCBoZWxwIGRldmVs
b3BlcnMgdXNlIGJldHRlciBwcmFjdGljZXMgd2hpbGUgd29ya2luZyB3aXRo
IHBvcHVsYXIgSmF2YVNjcmlwdCBjb21wb25lbnRzLgoKIyMgQmVmb3JlIFlv
dSBCZWdpbgpCZWZvcmUgeW91IGJlZ2luIHdlIHJlY29tbWVuZCB5b3UgcmVh
ZCBhYm91dCB0aGUgYmFzaWMgYnVpbGRpbmcgYmxvY2tzIHRoYXQgYXNzZW1i
bGUgYSBNRUFOLkpTIGFwcGxpY2F0aW9uOgoqIE1vbmdvREIgLSBHbyB0aHJv
dWdoIFtNb25nb0RCIE9mZmljaWFsIFdlYnNpdGVdKGh0dHA6Ly9tb25nb2Ri
Lm9yZy8pIGFuZCBwcm9jZWVkIHRvIHRoZWlyIFtPZmZpY2lhbCBNYW51YWxd
KGh0dHA6Ly9kb2NzLm1vbmdvZGIub3JnL21hbnVhbC8pLCB3aGljaCBzaG91
bGQgaGVscCB5b3UgdW5kZXJzdGFuZCBOb1NRTCBhbmQgTW9uZ29EQiBiZXR0
ZXIuCiogRXhwcmVzcyAtIFRoZSBiZXN0IHdheSB0byB1bmRlcnN0YW5kIGV4
cHJlc3MgaXMgdGhyb3VnaCBpdHMgW09mZmljaWFsIFdlYnNpdGVdKGh0dHA6
Ly9leHByZXNzanMuY29tLyksIHdoaWNoIGhhcyBhIFtHZXR0aW5nIFN0YXJ0
ZWRdKGh0dHA6Ly9leHByZXNzanMuY29tL3N0YXJ0ZXIvaW5zdGFsbGluZy5o
dG1sKSBndWlkZSwgYXMgd2VsbCBhcyBhbiBbRXhwcmVzc0pTXShodHRwOi8v
ZXhwcmVzc2pzLmNvbS9lbi9ndWlkZS9yb3V0aW5nLmh0bWwpIGd1aWRlIGZv
ciBnZW5lcmFsIGV4cHJlc3MgdG9waWNzLiBZb3UgY2FuIGFsc28gZ28gdGhy
b3VnaCB0aGlzIFtTdGFja092ZXJmbG93IFRocmVhZF0oaHR0cDovL3N0YWNr
b3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy84MTQ0MjE0L2xlYXJuaW5nLWV4cHJl
c3MtZm9yLW5vZGUtanMpIGZvciBtb3JlIHJlc291cmNlcy4KKiBBbmd1bGFy
SlMgLSBBbmd1bGFyJ3MgW09mZmljaWFsIFdlYnNpdGVdKGh0dHA6Ly9hbmd1
bGFyanMub3JnLykgaXMgYSBncmVhdCBzdGFydGluZyBwb2ludC4gWW91IGNh
biBhbHNvIHVzZSBbVGhpbmtzdGVyIFBvcHVsYXIgR3VpZGVdKGh0dHA6Ly93
d3cudGhpbmtzdGVyLmlvLyksIGFuZCBbRWdnaGVhZCBWaWRlb3NdKGh0dHBz
Oi8vZWdnaGVhZC5pby8pLgoqIE5vZGUuanMgLSBTdGFydCBieSBnb2luZyB0
aHJvdWdoIFtOb2RlLmpzIE9mZmljaWFsIFdlYnNpdGVdKGh0dHA6Ly9ub2Rl
anMub3JnLykgYW5kIHRoaXMgW1N0YWNrT3ZlcmZsb3cgVGhyZWFkXShodHRw
Oi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzIzNTM4MTgvaG93LWRv
LWktZ2V0LXN0YXJ0ZWQtd2l0aC1ub2RlLWpzKSwgd2hpY2ggc2hvdWxkIGdl
dCB5b3UgZ29pbmcgd2l0aCB0aGUgTm9kZS5qcyBwbGF0Zm9ybSBpbiBubyB0
aW1lLgoKCiMjIFByZXJlcXVpc2l0ZXMKTWFrZSBzdXJlIHlvdSBoYXZlIGlu
c3RhbGxlZCBhbGwgb2YgdGhlIGZvbGxvd2luZyBwcmVyZXF1aXNpdGVzIG9u
IHlvdXIgZGV2ZWxvcG1lbnQgbWFjaGluZToKKiBHaXQgLSBbRG93bmxvYWQg
JiBJbnN0YWxsIEdpdF0oaHR0cHM6Ly9naXQtc2NtLmNvbS9kb3dubG9hZHMp
LiBPU1ggYW5kIExpbnV4IG1hY2hpbmVzIHR5cGljYWxseSBoYXZlIHRoaXMg
YWxyZWFkeSBpbnN0YWxsZWQuCiogTm9kZS5qcyAtIFtEb3dubG9hZCAmIElu
c3RhbGwgTm9kZS5qc10oaHR0cHM6Ly9ub2RlanMub3JnL2VuL2Rvd25sb2Fk
LykgYW5kIHRoZSBucG0gcGFja2FnZSBtYW5hZ2VyLiBJZiB5b3UgZW5jb3Vu
dGVyIGFueSBwcm9ibGVtcywgeW91IGNhbiBhbHNvIHVzZSB0aGlzIFtHaXRI
dWIgR2lzdF0oaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vaXNhYWNzLzU3OTgx
NCkgdG8gaW5zdGFsbCBOb2RlLmpzLgoqIE1vbmdvREIgLSBbRG93bmxvYWQg
JiBJbnN0YWxsIE1vbmdvREJdKGh0dHA6Ly93d3cubW9uZ29kYi5vcmcvZG93
bmxvYWRzKSwgYW5kIG1ha2Ugc3VyZSBpdCdzIHJ1bm5pbmcgb24gdGhlIGRl
ZmF1bHQgcG9ydCAoMjcwMTcpLgoqIEJvd2VyIC0gWW91J3JlIGdvaW5nIHRv
IHVzZSB0aGUgW0Jvd2VyIFBhY2thZ2UgTWFuYWdlcl0oaHR0cDovL2Jvd2Vy
LmlvLykgdG8gbWFuYWdlIHlvdXIgZnJvbnQtZW5kIHBhY2thZ2VzLiBNYWtl
IHN1cmUgeW91J3ZlIGluc3RhbGxlZCBOb2RlLmpzIGFuZCBucG0gZmlyc3Qs
IHRoZW4gaW5zdGFsbCBib3dlciBnbG9iYWxseSB1c2luZyBucG06CgpgYGBi
YXNoCiQgbnBtIGluc3RhbGwgLWcgYm93ZXIKYGBgCgojIyBEb3dubG9hZGlu
ZyBNRUFOLkpTClRoZXJlIGFyZSBzZXZlcmFsIHdheXMgeW91IGNhbiBnZXQg
dGhlIE1FQU4uSlMgYm9pbGVycGxhdGU6CgojIyMgQ2xvbmluZyBUaGUgR2l0
SHViIFJlcG9zaXRvcnkKVGhlIHJlY29tbWVuZGVkIHdheSB0byBnZXQgTUVB
Ti5qcyBpcyB0byB1c2UgZ2l0IHRvIGRpcmVjdGx5IGNsb25lIHRoZSBNRUFO
LkpTIHJlcG9zaXRvcnk6CgpgYGBiYXNoCiQgZ2l0IGNsb25lIGh0dHBzOi8v
Z2l0aHViLmNvbS9tZWFuanMvbWVhbi5naXQgbWVhbmpzCmBgYAoKVGhpcyB3
aWxsIGNsb25lIHRoZSBsYXRlc3QgdmVyc2lvbiBvZiB0aGUgTUVBTi5KUyBy
ZXBvc2l0b3J5IHRvIGEgKiptZWFuanMqKiBmb2xkZXIuCgojIyMgRG93bmxv
YWRpbmcgVGhlIFJlcG9zaXRvcnkgWmlwIEZpbGUKQW5vdGhlciB3YXkgdG8g
dXNlIHRoZSBNRUFOLkpTIGJvaWxlcnBsYXRlIGlzIHRvIGRvd25sb2FkIGEg
emlwIGNvcHkgZnJvbSB0aGUgW21hc3RlciBicmFuY2ggb24gR2l0SHViXSho
dHRwczovL2dpdGh1Yi5jb20vbWVhbmpzL21lYW4vYXJjaGl2ZS9tYXN0ZXIu
emlwKS4gWW91IGNhbiBhbHNvIGRvIHRoaXMgdXNpbmcgdGhlIGB3Z2V0YCBj
b21tYW5kOgoKYGBgYmFzaAokIHdnZXQgaHR0cHM6Ly9naXRodWIuY29tL21l
YW5qcy9tZWFuL2FyY2hpdmUvbWFzdGVyLnppcCAtTyBtZWFuanMuemlwOyB1
bnppcCBtZWFuanMuemlwOyBybSBtZWFuanMuemlwCmBgYAoKRG9uJ3QgZm9y
Z2V0IHRvIHJlbmFtZSAqKm1lYW4tbWFzdGVyKiogYWZ0ZXIgeW91ciBwcm9q
ZWN0IG5hbWUuCgojIyMgWW8gR2VuZXJhdG9yCkFub3RoZXIgd2F5IHdvdWxk
IGJlIHRvIHVzZSB0aGUgW09mZmljaWFsIFlvIEdlbmVyYXRvcl0oaHR0cDov
L21lYW5qcy5vcmcvZ2VuZXJhdG9yLmh0bWwpLCB3aGljaCBnZW5lcmF0ZXMg
YSBjb3B5IG9mIHRoZSBNRUFOLkpTIDAuNC54IGJvaWxlcnBsYXRlIGFuZCBz
dXBwbGllcyBhbiBhcHBsaWNhdGlvbiBnZW5lcmF0b3IgdG8gZWFzZSB5b3Vy
IGRhaWx5IGRldmVsb3BtZW50IGN5Y2xlcy4KCiMjIFF1aWNrIEluc3RhbGwK
T25jZSB5b3UndmUgZG93bmxvYWRlZCB0aGUgYm9pbGVycGxhdGUgYW5kIGlu
c3RhbGxlZCBhbGwgdGhlIHByZXJlcXVpc2l0ZXMsIHlvdSdyZSBqdXN0IGEg
ZmV3IHN0ZXBzIGF3YXkgZnJvbSBzdGFydGluZyB0byBkZXZlbG9wIHlvdXIg
TUVBTiBhcHBsaWNhdGlvbi4KClRoZSBib2lsZXJwbGF0ZSBjb21lcyBwcmUt
YnVuZGxlZCB3aXRoIGEgYHBhY2thZ2UuanNvbmAgYW5kIGBib3dlci5qc29u
YCBmaWxlcyB0aGF0IGNvbnRhaW4gdGhlIGxpc3Qgb2YgbW9kdWxlcyB5b3Ug
bmVlZCB0byBzdGFydCB5b3VyIGFwcGxpY2F0aW9uLgoKVG8gaW5zdGFsbCB0
aGUgZGVwZW5kZW5jaWVzLCBydW4gdGhpcyBpbiB0aGUgYXBwbGljYXRpb24g
Zm9sZGVyIGZyb20gdGhlIGNvbW1hbmQtbGluZToKCmBgYGJhc2gKJCBucG0g
aW5zdGFsbApgYGAKClRoaXMgY29tbWFuZCBkb2VzIGEgZmV3IHRoaW5nczoK
KiBGaXJzdCBpdCB3aWxsIGluc3RhbGwgdGhlIGRlcGVuZGVuY2llcyBuZWVk
ZWQgZm9yIHRoZSBhcHBsaWNhdGlvbiB0byBydW4uCiogSWYgeW91J3JlIHJ1
bm5pbmcgaW4gYSBkZXZlbG9wbWVudCBlbnZpcm9ubWVudCwgaXQgd2lsbCB0
aGVuIGFsc28gaW5zdGFsbCBkZXZlbG9wbWVudCBkZXBlbmRlbmNpZXMgbmVl
ZGVkIGZvciB0ZXN0aW5nIGFuZCBydW5uaW5nIHlvdXIgYXBwbGljYXRpb24u
CiogV2hlbiB0aGUgbnBtIHBhY2thZ2VzIGluc3RhbGwgcHJvY2VzcyBpcyBv
dmVyLCBucG0gd2lsbCBpbml0aWF0ZSBhIGJvd2VyIGluc3RhbGwgY29tbWFu
ZCB0byBpbnN0YWxsIGFsbCB0aGUgZnJvbnQtZW5kIG1vZHVsZXMgbmVlZGVk
IGZvciB0aGUgYXBwbGljYXRpb24KKiBUbyB1cGRhdGUgdGhlc2UgcGFja2Fn
ZXMgbGF0ZXIgb24sIGp1c3QgcnVuIGBucG0gdXBkYXRlYAoKIyMgUnVubmlu
ZyBZb3VyIEFwcGxpY2F0aW9uCgpSdW4geW91ciBhcHBsaWNhdGlvbiB1c2lu
ZyBucG06CgpgYGBiYXNoCiQgbnBtIHN0YXJ0CmBgYAoKWW91ciBhcHBsaWNh
dGlvbiBzaG91bGQgcnVuIG9uIHBvcnQgMzAwMCB3aXRoIHRoZSAqZGV2ZWxv
cG1lbnQqIGVudmlyb25tZW50IGNvbmZpZ3VyYXRpb24sIHNvIGluIHlvdXIg
YnJvd3NlciBqdXN0IGdvIHRvIFtodHRwOi8vbG9jYWxob3N0OjMwMDBdKGh0
dHA6Ly9sb2NhbGhvc3Q6MzAwMCkKClRoYXQncyBpdCEgWW91ciBhcHBsaWNh
dGlvbiBzaG91bGQgYmUgcnVubmluZy4gVG8gcHJvY2VlZCB3aXRoIHlvdXIg
ZGV2ZWxvcG1lbnQsIGNoZWNrIHRoZSBvdGhlciBzZWN0aW9ucyBpbiB0aGlz
IGRvY3VtZW50YXRpb24uCklmIHlvdSBlbmNvdW50ZXIgYW55IHByb2JsZW1z
LCB0cnkgdGhlIFRyb3VibGVzaG9vdGluZyBzZWN0aW9uLgoKRXhwbG9yZSBg
Y29uZmlnL2Vudi9kZXZlbG9wbWVudC5qc2AgZm9yIGRldmVsb3BtZW50IGVu
dmlyb25tZW50IGNvbmZpZ3VyYXRpb24gb3B0aW9ucy4KCiMjIyBSdW5uaW5n
IGluIFByb2R1Y3Rpb24gbW9kZQpUbyBydW4geW91ciBhcHBsaWNhdGlvbiB3
aXRoICpwcm9kdWN0aW9uKiBlbnZpcm9ubWVudCBjb25maWd1cmF0aW9uOgoK
YGBgYmFzaAokIG5wbSBydW4gc3RhcnQ6cHJvZApgYGAKCkV4cGxvcmUgYGNv
bmZpZy9lbnYvcHJvZHVjdGlvbi5qc2AgZm9yIHByb2R1Y3Rpb24gZW52aXJv
bm1lbnQgY29uZmlndXJhdGlvbiBvcHRpb25zLgoKIyMjIFJ1bm5pbmcgd2l0
aCBVc2VyIFNlZWQKVG8gaGF2ZSBkZWZhdWx0IGFjY291bnQocykgc2VlZGVk
IGF0IHJ1bnRpbWU6CgpJbiBEZXZlbG9wbWVudDoKYGBgYmFzaApNT05HT19T
RUVEPXRydWUgbnBtIHN0YXJ0CmBgYApJdCB3aWxsIHRyeSB0byBzZWVkIHRo
ZSB1c2VycyAndXNlcicgYW5kICdhZG1pbicuIElmIG9uZSBvZiB0aGUgdXNl
ciBhbHJlYWR5IGV4aXN0cywgaXQgd2lsbCBkaXNwbGF5IGFuIGVycm9yIG1l
c3NhZ2Ugb24gdGhlIGNvbnNvbGUuIEp1c3QgZ3JhYiB0aGUgcGFzc3dvcmRz
IGZyb20gdGhlIGNvbnNvbGUuCgpJbiBQcm9kdWN0aW9uOgpgYGBiYXNoCk1P
TkdPX1NFRUQ9dHJ1ZSBucG0gc3RhcnQ6cHJvZApgYGAKVGhpcyB3aWxsIHNl
ZWQgdGhlIGFkbWluIHVzZXIgb25lIHRpbWUgaWYgdGhlIHVzZXIgZG9lcyBu
b3QgYWxyZWFkeSBleGlzdC4gWW91IGhhdmUgdG8gY29weSB0aGUgcGFzc3dv
cmQgZnJvbSB0aGUgY29uc29sZSBhbmQgc2F2ZSBpdC4KCiMjIyBSdW5uaW5n
IHdpdGggVExTIChTU0wpCkFwcGxpY2F0aW9uIHdpbGwgc3RhcnQgYnkgZGVm
YXVsdCB3aXRoIHNlY3VyZSBjb25maWd1cmF0aW9uIChTU0wgbW9kZSkgdHVy
bmVkIG9uIGFuZCBsaXN0ZW4gb24gcG9ydCA4NDQzLgpUbyBydW4geW91ciBh
cHBsaWNhdGlvbiBpbiBhIHNlY3VyZSBtYW5uZXIgeW91J2xsIG5lZWQgdG8g
dXNlIE9wZW5TU0wgYW5kIGdlbmVyYXRlIGEgc2V0IG9mIHNlbGYtc2lnbmVk
IGNlcnRpZmljYXRlcy4gVW5peC1iYXNlZCB1c2VycyBjYW4gdXNlIHRoZSBm
b2xsb3dpbmcgY29tbWFuZDoKCmBgYGJhc2gKJCBucG0gcnVuIGdlbmVyYXRl
LXNzbC1jZXJ0cwpgYGAKCldpbmRvd3MgdXNlcnMgY2FuIGZvbGxvdyBpbnN0
cnVjdGlvbnMgZm91bmQgW2hlcmVdKGh0dHA6Ly93d3cud2Vic2Vuc2UuY29t
L3N1cHBvcnQvYXJ0aWNsZS9rYmFydGljbGUvSG93LXRvLXVzZS1PcGVuU1NM
LWFuZC1NaWNyb3NvZnQtQ2VydGlmaWNhdGlvbi1BdXRob3JpdHkpLgpBZnRl
ciB5b3UndmUgZ2VuZXJhdGVkIHRoZSBrZXkgYW5kIGNlcnRpZmljYXRlLCBw
bGFjZSB0aGVtIGluIHRoZSAqY29uZmlnL3NzbGNlcnRzKiBmb2xkZXIuCgpG
aW5hbGx5LCBleGVjdXRlIHByb2QgdGFzayBgbnBtIHJ1biBzdGFydDpwcm9k
YAoqIGVuYWJsZS9kaXNhYmxlIFNTTCBtb2RlIGluIHByb2R1Y3Rpb24gZW52
aXJvbm1lbnQgY2hhbmdlIHRoZSBgc2VjdXJlYCBvcHRpb24gaW4gYGNvbmZp
Zy9lbnYvcHJvZHVjdGlvbi5qc2AKCgojIyBUZXN0aW5nIFlvdXIgQXBwbGlj
YXRpb24KWW91IGNhbiBydW4gdGhlIGZ1bGwgdGVzdCBzdWl0ZSBpbmNsdWRl
ZCB3aXRoIE1FQU4uSlMgd2l0aCB0aGUgdGVzdCB0YXNrOgoKYGBgYmFzaAok
IG5wbSB0ZXN0CmBgYApUaGlzIHdpbGwgcnVuIGJvdGggdGhlIHNlcnZlci1z
aWRlIHRlc3RzIChsb2NhdGVkIGluIHRoZSBgYXBwL3Rlc3RzL2AgZGlyZWN0
b3J5KSBhbmQgdGhlIGNsaWVudC1zaWRlIHRlc3RzIChsb2NhdGVkIGluIHRo
ZSBgcHVibGljL21vZHVsZXMvKi90ZXN0cy9gKS4KClRvIGV4ZWN1dGUgb25s
eSB0aGUgc2VydmVyIHRlc3RzLCBydW4gdGhlIHRlc3Q6c2VydmVyIHRhc2s6
CgpgYGBiYXNoCiQgbnBtIHJ1biB0ZXN0OnNlcnZlcgpgYGAKClRvIGV4ZWN1
dGUgb25seSB0aGUgc2VydmVyIHRlc3RzIGFuZCBydW4gYWdhaW4gb25seSBj
aGFuZ2VkIHRlc3RzLCBydW4gdGhlIHRlc3Q6c2VydmVyOndhdGNoIHRhc2s6
CgpgYGBiYXNoCiQgbnBtIHJ1biB0ZXN0OnNlcnZlcjp3YXRjaApgYGAKCkFu
ZCB0byBydW4gb25seSB0aGUgY2xpZW50IHRlc3RzLCBydW4gdGhlIHRlc3Q6
Y2xpZW50IHRhc2s6CgpgYGBiYXNoCiQgbnBtIHJ1biB0ZXN0OmNsaWVudApg
YGAKCiMjIFJ1bm5pbmcgeW91ciBhcHBsaWNhdGlvbiB3aXRoIEd1bHAKClRo
ZSBNRUFOLkpTIHByb2plY3QgaW50ZWdyYXRlcyBHdWxwIGFzIGJ1aWxkIHRv
b2xzIGFuZCB0YXNrIGF1dG9tYXRpb24uCgpXZSBoYXZlIHdyYXBwZWQgR3Vs
cCB0YXNrcyB3aXRoIG5wbSBzY3JpcHRzIHNvIHRoYXQgcmVnYXJkbGVzcyBv
ZiB0aGUgYnVpbGQgdG9vbCBydW5uaW5nIHRoZSBwcm9qZWN0IGlzIHRyYW5z
cGFyZW50IHRvIHlvdS4KClRvIHVzZSBHdWxwIGRpcmVjdGx5LCB5b3UgbmVl
ZCB0byBmaXJzdCBpbnN0YWxsIGl0IGdsb2JhbGx5OgoKYGBgYmFzaAokIG5w
bSBpbnN0YWxsIGd1bHAgLWcKYGBgCgpUaGVuIHN0YXJ0IHRoZSBkZXZlbG9w
bWVudCBlbnZpcm9ubWVudCB3aXRoOgoKYGBgYmFzaAokIGd1bHAKYGBgCgpU
byBydW4geW91ciBhcHBsaWNhdGlvbiB3aXRoICpwcm9kdWN0aW9uKiBlbnZp
cm9ubWVudCBjb25maWd1cmF0aW9uLCBleGVjdXRlIGd1bHAgYXMgZm9sbG93
czoKCmBgYGJhc2gKJCBndWxwIHByb2QKYGBgCgpJdCBpcyBhbHNvIHBvc3Np
YmxlIHRvIHJ1biBhbnkgR3VscCB0YXNrcyB1c2luZyBucG0ncyBydW4gY29t
bWFuZCBhbmQgdGhlcmVmb3JlIHVzZSBsb2NhbGx5IGluc3RhbGxlZCB2ZXJz
aW9uIG9mIGd1bHAsIGZvciBleGFtcGxlOiBgbnBtIHJ1biBndWxwIGVzbGlu
dGAKCiMjIERldmVsb3BtZW50IGFuZCBkZXBsb3ltZW50IFdpdGggRG9ja2Vy
CgoqIEluc3RhbGwgW0RvY2tlcl0oaHR0cHM6Ly9kb2NzLmRvY2tlci5jb20v
aW5zdGFsbGF0aW9uLyNpbnN0YWxsYXRpb24pCiogSW5zdGFsbCBbQ29tcG9z
ZV0oaHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vY29tcG9zZS9pbnN0YWxsLykK
CiogTG9jYWwgZGV2ZWxvcG1lbnQgYW5kIHRlc3Rpbmcgd2l0aCBjb21wb3Nl
OgpgYGBiYXNoCiQgZG9ja2VyLWNvbXBvc2UgdXAKYGBgCgoqIExvY2FsIGRl
dmVsb3BtZW50IGFuZCB0ZXN0aW5nIHdpdGgganVzdCBEb2NrZXI6CmBgYGJh
c2gKJCBkb2NrZXIgYnVpbGQgLXQgbWVhbiAuCiQgZG9ja2VyIHJ1biAtcCAy
NzAxNzoyNzAxNyAtZCAtLW5hbWUgZGIgbW9uZ28KJCBkb2NrZXIgcnVuIC1w
IDMwMDA6MzAwMCAtLWxpbmsgZGI6ZGJfMSBtZWFuCiQKYGBgCgoqIFRvIGVu
YWJsZSBsaXZlIHJlbG9hZCwgZm9yd2FyZCBwb3J0IDM1NzI5IGFuZCBtb3Vu
dCAvYXBwIGFuZCAvcHVibGljIGFzIHZvbHVtZXM6CmBgYGJhc2gKJCBkb2Nr
ZXIgcnVuIC1wIDMwMDA6MzAwMCAtcCAzNTcyOTozNTcyOSAtdiAvVXNlcnMv
bWRsL3dvcmtzcGFjZS9tZWFuLXN0YWNrL21lYW4vcHVibGljOi9ob21lL21l
YW4vcHVibGljIC12IC9Vc2Vycy9tZGwvd29ya3NwYWNlL21lYW4tc3RhY2sv
bWVhbi9hcHA6L2hvbWUvbWVhbi9hcHAgLS1saW5rIGRiOmRiXzEgbWVhbgpg
YGAKCiMjIyBQcm9kdWN0aW9uIGRlcGxveSB3aXRoIERvY2tlcgoKKiBQcm9k
dWN0aW9uIGRlcGxveW1lbnQgd2l0aCBjb21wb3NlOgpgYGBiYXNoCiQgZG9j
a2VyLWNvbXBvc2UgLWYgZG9ja2VyLWNvbXBvc2UtcHJvZHVjdGlvbi55bWwg
dXAgLWQKYGBgCgoqIFByb2R1Y3Rpb24gZGVwbG95bWVudCB3aXRoIGp1c3Qg
RG9ja2VyOgpgYGBiYXNoCiQgZG9ja2VyIGJ1aWxkIC10IG1lYW4gLWYgRG9j
a2VyZmlsZS1wcm9kdWN0aW9uIC4KJCBkb2NrZXIgcnVuIC1wIDI3MDE3OjI3
MDE3IC1kIC0tbmFtZSBkYiBtb25nbwokIGRvY2tlciBydW4gLXAgMzAwMDoz
MDAwIC0tbGluayBkYjpkYl8xIG1lYW4KYGBgCgojIyBEZXBsb3lpbmcgdG8g
UEFBUwoKIyMjICBEZXBsb3lpbmcgTUVBTkpTIFRvIEhlcm9rdQoKQnkgY2xp
Y2tpbmcgdGhlIGJ1dHRvbiBiZWxvdyB5b3UgY2FuIHNpZ251cCBmb3IgSGVy
b2t1IGFuZCBkZXBsb3kgYSB3b3JraW5nIGNvcHkgb2YgTUVBTkpTIHRvIHRo
ZSBjbG91ZCB3aXRob3V0IGhhdmluZyB0byBkbyB0aGUgc3RlcHMgYWJvdmUu
CgpbIVtEZXBsb3ldKGh0dHBzOi8vd3d3Lmhlcm9rdWNkbi5jb20vZGVwbG95
L2J1dHRvbi5zdmcpXShodHRwczovL2hlcm9rdS5jb20vZGVwbG95KQoKIyMj
IEFtYXpvbiBTMyBjb25maWd1cmF0aW9uCgpUbyBzYXZlIHRoZSBwcm9maWxl
IGltYWdlcyB0byBTMywgc2ltcGx5IHNldCB0aG9zZSBlbnZpcm9ubWVudCB2
YXJpYWJsZXM6ClVQTE9BRFNfU1RPUkFHRTogczMKUzNfQlVDS0VUOiB0aGUg
bmFtZSBvZiB0aGUgYnVja2V0IHdoZXJlIHRoZSBpbWFnZXMgd2lsbCBiZSBz
YXZlZApTM19BQ0NFU1NfS0VZX0lEOiBZb3VyIFMzIGFjY2VzcyBrZXkKUzNf
U0VDUkVUX0FDQ0VTU19LRVk6IFlvdXIgUzMgYWNjZXNzIGtleSBwYXNzd29y
ZAoKIyMgR2V0dGluZyBTdGFydGVkIFdpdGggTUVBTi5KUwpZb3UgaGF2ZSB5
b3VyIGFwcGxpY2F0aW9uIHJ1bm5pbmcsIGJ1dCB0aGVyZSBpcyBhIGxvdCBv
ZiBzdHVmZiB0byB1bmRlcnN0YW5kLiBXZSByZWNvbW1lbmQgeW91IGdvIG92
ZXIgdGhlIFtPZmZpY2lhbCBEb2N1bWVudGF0aW9uXShodHRwOi8vbWVhbmpz
Lm9yZy9kb2NzLmh0bWwpLgpJbiB0aGUgZG9jcyB3ZSdsbCB0cnkgdG8gZXhw
bGFpbiBib3RoIGdlbmVyYWwgY29uY2VwdHMgb2YgTUVBTiBjb21wb25lbnRz
IGFuZCBnaXZlIHlvdSBzb21lIGd1aWRlbGluZXMgdG8gaGVscCB5b3UgaW1w
cm92ZSB5b3VyIGRldmVsb3BtZW50IHByb2Nlc3MuIFdlIHRyaWVkIGNvdmVy
aW5nIGFzIG1hbnkgYXNwZWN0cyBhcyBwb3NzaWJsZSwgYW5kIHdpbGwga2Vl
cCBpdCB1cGRhdGVkIGJ5IHlvdXIgcmVxdWVzdC4gWW91IGNhbiBhbHNvIGhl
bHAgdXMgZGV2ZWxvcCBhbmQgaW1wcm92ZSB0aGUgZG9jdW1lbnRhdGlvbiBi
eSBjaGVja2luZyBvdXQgdGhlICpnaC1wYWdlcyogYnJhbmNoIG9mIHRoaXMg
cmVwb3NpdG9yeS4KCiMjIENvbW11bml0eQoqIFVzZSB0aGUgW09mZmljaWFs
IFdlYnNpdGVdKGh0dHA6Ly9tZWFuanMub3JnKSB0byBsZWFybiBhYm91dCBj
aGFuZ2VzIGFuZCB0aGUgcm9hZG1hcC4KKiBKb2luICNtZWFuanMgb24gZnJl
ZW5vZGUuCiogRGlzY3VzcyBpdCBpbiB0aGUgbmV3IFtHb29nbGUgR3JvdXBd
KGh0dHBzOi8vZ3JvdXBzLmdvb2dsZS5jb20vZC9mb3J1bS9tZWFuanMpCiog
UGluZyB1cyBvbiBbVHdpdHRlcl0oaHR0cDovL3R3aXR0ZXIuY29tL21lYW5q
c29yZykgYW5kIFtGYWNlYm9va10oaHR0cDovL2ZhY2Vib29rLmNvbS9tZWFu
anMpCgojIyBDb250cmlidXRpbmcKV2Ugd2VsY29tZSBwdWxsIHJlcXVlc3Rz
IGZyb20gdGhlIGNvbW11bml0eSEgSnVzdCBiZSBzdXJlIHRvIHJlYWQgdGhl
IFtjb250cmlidXRpbmddKGh0dHBzOi8vZ2l0aHViLmNvbS9tZWFuanMvbWVh
bi9ibG9iL21hc3Rlci9DT05UUklCVVRJTkcubWQpIGRvYyB0byBnZXQgc3Rh
cnRlZC4KCiMjIENyZWRpdHMKSW5zcGlyZWQgYnkgdGhlIGdyZWF0IHdvcmsg
b2YgW01hZGh1c3VkaGFuIFNyaW5pdmFzYV0oaHR0cHM6Ly9naXRodWIuY29t
L21hZGh1bXMvKQpUaGUgTUVBTiBuYW1lIHdhcyBjb2luZWQgYnkgW1ZhbGVy
aSBLYXJwb3ZdKGh0dHA6Ly9ibG9nLm1vbmdvZGIub3JnL3Bvc3QvNDkyNjI4
NjY5MTEvdGhlLW1lYW4tc3RhY2stbW9uZ29kYi1leHByZXNzanMtYW5ndWxh
cmpzLWFuZCkuCgojIyBMaWNlbnNlCltUaGUgTUlUIExpY2Vuc2VdKExJQ0VO
U0UubWQpCg==
",,4786,"bGFuZ3VhZ2U6IG5vZGVfanMKZGlzdDogeGVuaWFsCnN1ZG86IHJlcXVpcmVk
Cm5vZGVfanM6CiAgLSAnOCcKICAtICc5JwogIC0gJzEwJwogIC0gJzExJwog
IC0gJzEyJwptYXRyaXg6CiAgZmFzdF9maW5pc2g6IHRydWUKICBhbGxvd19m
YWlsdXJlczoKICAgIC0gb3M6IHdpbmRvd3MKb3M6CiAgLSBsaW51eAogIC0g
b3N4CiAgLSB3aW5kb3dzCmNhY2hlOgogIGRpcmVjdG9yaWVzOgogICAgLSBu
b2RlX21vZHVsZXMKICAgIC0gL3Vzci9sb2NhbC9DZWxsYXIKZW52OgogIC0g
Tk9ERV9FTlY9dHJhdmlzCnNlcnZpY2VzOgogIC0gbW9uZ29kYgogIC0geHZm
YgphZGRvbnM6CiAgYXB0OgogICAgcGFja2FnZXM6CiAgICAgIC0gZysrCiAg
ICAgIC0gZ2NjCiAgICAgIC0gY2xhbmcKICBjaHJvbWU6IHN0YWJsZQpiZWZv
cmVfaW5zdGFsbDoKICAtIGlmIFsgIiRUUkFWSVNfT1NfTkFNRSIgPSAib3N4
IiBdOyB0aGVuIGJyZXcgdXBkYXRlICYmIGJyZXcgdGFwIG1vbmdvZGIvYnJl
dyAmJiBicmV3IGluc3RhbGwgbW9uZ29kYi1jb21tdW5pdHlANC4yICYmIGJy
ZXcgc2VydmljZXMgc3RhcnQgbW9uZ29kYi1jb21tdW5pdHlANC4yOyBmaQog
IC0gaWYgWyAiJFRSQVZJU19PU19OQU1FIiA9ICJ3aW5kb3dzIiBdOyB0aGVu
IGNob2NvIGluc3RhbGwgbW9uZ29kYjsgZmkKICAtIGlmIFsgIiRUUkFWSVNf
T1NfTkFNRSIgPSAid2luZG93cyIgXTsgdGhlbiBta2RpciAiQzpcZGF0YVxk
YiI7IGZpCiAgLSBpZiBbICIkVFJBVklTX09TX05BTUUiID0gIndpbmRvd3Mi
IF07IHRoZW4gIkM6XFByb2dyYW0gRmlsZXNcTW9uZ29EQlxTZXJ2ZXJcNC4y
XGJpblxtb25nb2QuZXhlIiAtLWRicGF0aD0iYzpcZGF0YVxkYiI7IGZpCiMg
ICAtIG5wbSBpbnN0YWxsIHdlYmRyaXZlci1tYW5hZ2VyIC1nICYmIHdlYmRy
aXZlci1tYW5hZ2VyIHVwZGF0ZQogIC0gbnBtIGluc3RhbGwgbnNwIC1nCiMg
IC0gbnBtIGluc3RhbGwgc255ayAtZwogIC0gJ2V4cG9ydCBQQVRIPSRQQVRI
Oi91c3IvbGliL2Nocm9taXVtLWJyb3dzZXIvJwogIC0gJ2V4cG9ydCBESVNQ
TEFZPTo5OS4wJwojIGJlZm9yZV9zY3JpcHQ6CiMgIC0gc255ayBhdXRoICRT
TllLX1RPS0VOCiMgIC0gc255ayB0ZXN0CmFmdGVyX3NjcmlwdDoKICAtIG5z
cCBjaGVjawojICAtIHNueWsgdGVzdAogIC0gZ3VscCB0ZXN0OmNvdmVyYWdl
CiAgLSBucG0gaW5zdGFsbCBsY292LXJlc3VsdC1tZXJnZXJAfjEuMi4wIC1n
CiAgLSBsY292LXJlc3VsdC1tZXJnZXIgJ2NvdmVyYWdlLyoqL2xjb3YuaW5m
bycgfCBub2RlX21vZHVsZXMvY292ZXJhbGxzL2Jpbi9jb3ZlcmFsbHMuanMK
bm90aWZpY2F0aW9uczoKICB3ZWJob29rczoKICAgIHVybHM6CiAgICAgIC0g
JEdJVFRFUl9JTV9VUkwKICAgIG9uX3N1Y2Nlc3M6IGNoYW5nZSAgIyBvcHRp
b25zOiBbYWx3YXlzfG5ldmVyfGNoYW5nZV0gZGVmYXVsdDogYWx3YXlzCiAg
ICBvbl9mYWlsdXJlOiBhbHdheXMgICMgb3B0aW9uczogW2Fsd2F5c3xuZXZl
cnxjaGFuZ2VdIGRlZmF1bHQ6IGFsd2F5cwogICAgb25fc3RhcnQ6IG5ldmVy
ICAgICAjIG9wdGlvbnM6IFthbHdheXN8bmV2ZXJ8Y2hhbmdlXSBkZWZhdWx0
OiBhbHdheXMK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'progress',14621066,"b'Linux tool to show progress for cp, mv, dd, ... (formerly known as cv)'",b'C',40,4786,,126,False,b'https://api.github.com/repos/Xfennec/progress/forks',"cHJvZ3Jlc3MgLSBDb3JldXRpbHMgUHJvZ3Jlc3MgVmlld2VyIFshW0J1aWxk
IFN0YXR1c10oaHR0cHM6Ly90cmF2aXMtY2kub3JnL1hmZW5uZWMvcHJvZ3Jl
c3Muc3ZnP2JyYW5jaD1tYXN0ZXIpXShodHRwczovL3RyYXZpcy1jaS5vcmcv
WGZlbm5lYy9wcm9ncmVzcykKPT09PT09PT09PT09PT09PT09PT09CgpXaGF0
IGlzIGl0PwotLS0tLS0tLS0tLQoKVGhpcyB0b29sIGNhbiBiZSBkZXNjcmli
ZWQgYXMgYSAqKlRpbnkqKiwgRGlydHksIExpbnV4LWFuZC1PU1gtT25seSBD
IGNvbW1hbmQKdGhhdCBsb29rcyBmb3IgY29yZXV0aWxzIGJhc2ljIGNvbW1h
bmRzIChjcCwgbXYsIGRkLCB0YXIsIGd6aXAvZ3VuemlwLApjYXQsIGV0Yy4p
IGN1cnJlbnRseSBydW5uaW5nIG9uIHlvdXIgc3lzdGVtIGFuZCBkaXNwbGF5
cyB0aGUKKipwZXJjZW50YWdlKiogb2YgY29waWVkIGRhdGEuIEl0IGNhbiBh
bHNvIHNob3cgKiplc3RpbWF0ZWQgdGltZSoqIGFuZCAqKnRocm91Z2hwdXQq
KiwKYW5kIHByb3ZpZGVzIGEgInRvcC1saWtlIiBtb2RlIChtb25pdG9yaW5n
KS4KCiFbcHJvZ3Jlc3Mgc2NyZWVuc2hvdCB3aXRoIGNwIGFuZCBtdl0oaHR0
cHM6Ly9yYXcuZ2l0aHViLmNvbS9YZmVubmVjL3Byb2dyZXNzL21hc3Rlci9j
YXB0dXJlLnBuZykKCl8oQWZ0ZXIgbWFueSByZXF1ZXN0czogdGhlIGNvbG9y
cyBpbiB0aGUgc2hlbGwgY29tZSBmcm9tIFtwb3dlcmxpbmUtc2hlbGxdKGh0
dHBzOi8vZ2l0aHViLmNvbS9taWxrYmlraXMvcG93ZXJsaW5lLXNoZWxsKS4g
VHJ5IGl0LCBpdCdzIGNvb2wuKV8KCkZvcm1lcmx5IGtub3duIGFzIGN2IChD
b3JldXRpbHMgVmlld2VyKS4KCkhvdyBkbyB5b3UgYnVpbGQgaXQ/Ci0tLS0t
LS0tLS0tLS0tLS0tLS0tCgogICAgbWFrZSAmJiBtYWtlIGluc3RhbGwKCkl0
IGRlcGVuZHMgb24gbGlicmFyeSBuY3Vyc2VzLCB5b3UgbWF5IGhhdmUgdG8g
aW5zdGFsbCBjb3JyZXNwb25kaW5nIHBhY2thZ2VzIChtYXkgYmUgc29tZXRo
aW5nIGxpa2UgJ2xpYm5jdXJzZXM1LWRldicgb3IgJ25jdXJzZXMtZGV2ZWwn
KS4KCkhvdyBkbyB5b3UgcnVuIGl0PwotLS0tLS0tLS0tLS0tLS0tLS0KCkp1
c3QgbGF1bmNoIHRoZSBiaW5hcnksIGBwcm9ncmVzc2AuCgoKV2hhdCBjYW4g
SSBkbyB3aXRoIGl0PwotLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgpBIGZldyBl
eGFtcGxlcy4gWW91IGNhbjoKCiogbW9uaXRvciBhbGwgY3VycmVudCBhbmQg
dXBjb21pbmcgaW5zdGFuY2VzIG9mIGNvcmV1dGlscyBjb21tYW5kcyBpbgog
IGEgc2ltcGxlIHdpbmRvdzoKCiAgICAgICAgd2F0Y2ggcHJvZ3Jlc3MgLXEK
Ciogc2VlIGhvdyB5b3VyIGRvd25sb2FkIGlzIHByb2dyZXNzaW5nOgoKICAg
ICAgICB3YXRjaCBwcm9ncmVzcyAtd2MgZmlyZWZveAoKKiBsb29rIGF0IHlv
dXIgV2ViIHNlcnZlciBhY3Rpdml0eToKCiAgICAgICAgcHJvZ3Jlc3MgLWMg
aHR0cGQKCiogbGF1bmNoIGFuZCBtb25pdG9yIGFueSBoZWF2eSBjb21tYW5k
IHVzaW5nIGAkIWA6CgogICAgICAgIGNwIGJpZ2ZpbGUgbmV3ZmlsZSAmIHBy
b2dyZXNzIC1tcCAkIQoKYW5kIG11Y2ggbW9yZS4KCkhvdyBkb2VzIGl0IHdv
cms/Ci0tLS0tLS0tLS0tLS0tLS0tCgpJdCBzaW1wbHkgc2NhbnMgYC9wcm9j
YCBmb3IgaW50ZXJlc3RpbmcgY29tbWFuZHMsIGFuZCB0aGVuIGxvb2tzIGF0
CmRpcmVjdG9yaWVzIGBmZGAgYW5kIGBmZGluZm9gIHRvIGZpbmQgb3BlbmVk
IGZpbGVzIGFuZCBzZWVrIHBvc2l0aW9ucywKYW5kIHJlcG9ydHMgc3RhdHVz
IGZvciB0aGUgbGFyZ2VzdCBmaWxlLgoKSXQncyB2ZXJ5IGxpZ2h0LCBhbmQg
Y29tcGF0aWJsZSB3aXRoIHZpcnR1YWxseSBhbnkgY29tbWFuZC4K
",,4786,"b3M6CiAgLSBsaW51eAogIC0gb3N4CgpsYW5ndWFnZTogYwoKY29tcGlsZXI6
CiAgLSBnY2MKICAtIGNsYW5nCgpzY3JpcHQ6IG1ha2UKCm5vdGlmaWNhdGlv
bnM6CiAgZW1haWw6CiAgICBvbl9zdWNjZXNzOiBuZXZlcgogICAgb25fZmFp
bHVyZTogYWx3YXlzCgo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'evil-icons',25975629,"b'Simple and clean SVG icon pack with the code to support Rails, Sprockets, Node.js, Gulp, Grunt and CDN'",b'Ruby',25,4785,,123,False,b'https://api.github.com/repos/evil-icons/evil-icons/forks',"WyFbQ2lyY2xlIENJXShodHRwczovL2NpcmNsZWNpLmNvbS9naC9vdXRwdW5r
L2V2aWwtaWNvbnMuc3ZnP3N0eWxlPXN2ZyldKGh0dHBzOi8vY2lyY2xlY2ku
Y29tL2doL291dHB1bmsvZXZpbC1pY29ucykKCiFbXShodHRwOi8vZXZpbC1p
Y29ucy5pby9hc3NldHMvaW1hZ2VzL2V2aWwtaWNvbnMucG5nKQoKRnJlZSDi
gJhwbHVnIGFuZCBwbGF54oCZIHNldCBvZiBTVkcgaWNvbnMgZGVzaWduZWQg
c3BlY2lmaWNhbGx5IGZvciB3ZWIgcHJvamVjdHMuIEF2YWlsYWJsZSBhcyBh
IFJ1YnkgZ2VtLCBhIE5vZGUuanMgcGFja2FnZSBhbmQgR3J1bnQvR3VscCBw
bHVnaW5zLiBKdXN0IHVzZSBpY29uIG5hbWVzIHdpdGggeW91ciB0ZW1wbGF0
ZXMgYW5kIHN0eWxlcyDigJQgYW5kIGFsbCB0aGUgcmVzdCB3aWxsIGJlIGRv
bmUgYXV0b21hZ2ljYWxseS4KCltldmlsLWljb25zLmlvXShodHRwOi8vZXZp
bC1pY29ucy5pbykKCk1hZGUgYnkgW0FsZXhhbmRlciBNYWR5YW5raW5dIGFu
ZCBbUm9tYW4gU2hhbWluXS4KCjxhIGhyZWY9Imh0dHBzOi8vZXZpbG1hcnRp
YW5zLmNvbS8/dXRtX3NvdXJjZT1ldmlsLWljb25zIj4KPGltZyBzcmM9Imh0
dHBzOi8vZXZpbG1hcnRpYW5zLmNvbS9iYWRnZXMvc3BvbnNvcmVkLWJ5LWV2
aWwtbWFydGlhbnMuc3ZnIiBhbHQ9IlNwb25zb3JlZCBieSBFdmlsIE1hcnRp
YW5zIiB3aWR0aD0iMjM2IiBoZWlnaHQ9IjU0Ij4KPC9hPgoKW0FsZXhhbmRl
ciBNYWR5YW5raW5dOiAgaHR0cHM6Ly90d2l0dGVyLmNvbS9vdXRwdW5rCltS
b21hbiBTaGFtaW5dOiAgICAgICAgIGh0dHBzOi8vdHdpdHRlci5jb20vcm9t
YW5zaGFtaW4KCiMjIFVzYWdlCgoqIFtTdXBwb3J0ZWQgYnJvd3NlcnNdKCNz
dXBwb3J0ZWQtYnJvd3NlcnMpCiogW0dydW50XSgjZ3J1bnQpCiogW0d1bHBd
KCNndWxwKQoqIFtDRE5dKCNjZG4pCiogW1JhaWxzXSgjcmFpbHMpCiogW1Np
bmF0cmFdKCNzaW5hdHJhKQoqIFtNaWRkbGVtYW5dKCNtaWRkbGVtYW4pCiog
W25wbV0oI25wbSkKKiBbUmVhY3RdKCNyZWFjdCkKKiBbU3R5bGluZ10oI3N0
eWxpbmcpCgojIyMgU3VwcG9ydGVkIGJyb3dzZXJzCldlIHN1cHBvcnQgSUUg
OSssIEZpcmVmb3gsIENocm9tZSwgU2FmYXJpIChkZXNrdG9wIGFuZCBtb2Jp
bGUpLCBPcGVyYSwgQW5kcm9pZCA0Ky4KaHR0cDovL2Nhbml1c2UuY29tLyNz
ZWFyY2g9aW5saW5lJTIwc3ZnCgojIyMgR3J1bnQKVXNlIHRoZSBbR3J1bnQg
cGx1Z2luXS4KW0dydW50IHBsdWdpbl06IGh0dHBzOi8vZ2l0aHViLmNvbS9v
dXRwdW5rL2dydW50LWV2aWwtaWNvbnMKCiMjIyBHdWxwClVzZSB0aGUgW0d1
bHAgcGx1Z2luXS4KW0d1bHAgcGx1Z2luXTogaHR0cHM6Ly9naXRodWIuY29t
L291dHB1bmsvZ3VscC1ldmlsLWljb25zCgojIyMgQ0ROCgpKdXN0IGluY2x1
ZGUgdGhlIGFzc2V0cyBpbnRvIHlvdXIgcGFnZSBmcm9tIENETjoKCmBgYGh0
bWwKPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2Nkbi5q
c2RlbGl2ci5uZXQvbnBtL2V2aWwtaWNvbnNAMS45LjAvYXNzZXRzL2V2aWwt
aWNvbnMubWluLmNzcyI+CjxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2Rl
bGl2ci5uZXQvbnBtL2V2aWwtaWNvbnNAMS45LjAvYXNzZXRzL2V2aWwtaWNv
bnMubWluLmpzIj48L3NjcmlwdD4KYGBgCgoKQW5kIHVzZSB0aGUgaWNvbnMg
bGlrZSB0aGlzOgoKYGBgaHRtbAo8ZGl2IGRhdGEtaWNvbj0iZWktYXJjaGl2
ZSI+PC9kaXY+CjxkaXYgZGF0YS1pY29uPSJlaS1jaGFydCIgZGF0YS1zaXpl
PSJzIj48L2Rpdj4KPGRpdiBkYXRhLWljb249ImVpLWNoZWNrIiBkYXRhLXNp
emU9Im0iPjwvZGl2Pgo8ZGl2IGRhdGEtaWNvbj0iZWktc3Bpbm5lciIgZGF0
YS1zaXplPSJtIj48L2Rpdj4KPGRpdiBkYXRhLWljb249ImVpLWNhcnQiIGRh
dGEtc2l6ZT0ibCIgY2xhc3M9ImZvbyI+PC9kaXY+CmBgYAoKIyMjIFJhaWxz
CgpBZGQgdGhlIGAnZXZpbF9pY29ucydgIGdlbSB0byB5b3VyIEdlbWZpbGU6
CmBgYHJ1YnkKZ2VtICdldmlsX2ljb25zJwpgYGAKCkFkZCB0aGUgRXZpbCBJ
Y29ucyByZXF1aXJlIHRvIHlvdXIgYGFwcGxpY2F0aW9uLmNzc2A6CmBgYGNz
cwovKgogKj0gcmVxdWlyZSBldmlsLWljb25zCiAqLwpgYGAKCk5leHQsIHlv
dSBoYXZlIHRvIHJlbmRlciB0aGUgZXZpbC1pY29ucyBzcHJpdGUgaW4geW91
ciB0ZW1wbGF0ZSAob3IsIGluIHlvdXIgbGF5b3V0KToKYGBgZXJiCjwlPSBl
dmlsX2ljb25zX3Nwcml0ZSAlPgpgYGAKCkZpbmFsbHksIHlvdSBjYW4gcmVu
ZGVyIHRoZSBpY29uIHVzaW5nIHRoZSBgZXZpbF9pY29uYCBoZWxwZXIuCkhl
cmUgYXJlIHNvbWUgZXhhbXBsZXM6CmBgYGVyYgo8JT0gZXZpbF9pY29uICdl
aS1zZWFyY2gnICU+CjwlPSBldmlsX2ljb24gJ2VpLWFycm93LXJpZ2h0Jywg
c2l6ZTogOm0gJT4KPCU9IGV2aWxfaWNvbiAnZWktZW52ZWxvcGUnLCBzaXpl
OiA6bCwgY2xhc3M6ICJjdXN0b20tY2xhc3MiICU+CmBgYAoKCiMjIyBTaW5h
dHJhCgpBZGQgdGhlIGAnZXZpbF9pY29ucydgIGdlbSB0byB5b3VyIEdlbWZp
bGU6CmBgYHJ1YnkKZ2VtICdldmlsX2ljb25zJwpgYGAKQW5kIHJlcXVpcmUg
aXQ6CmBgYApyZXF1aXJlICdldmlsX2ljb25zJwpgYGAKCkFkZCB0aGUgaGVs
cGVycyB0byB5b3VyIGFwcGxpY2F0aW9uOgpgYGBydWJ5CmhlbHBlcnMgRXZp
bEljb25zOjpIZWxwZXJzCmBgYAoKTmV4dCwgeW91IGhhdmUgdG8gcmVuZGVy
IHRoZSBldmlsLWljb25zIHNwcml0ZSBpbiB5b3VyIHRlbXBsYXRlIChvciwg
aW4geW91ciBsYXlvdXQpOgpgYGBlcmIKPCU9IGV2aWxfaWNvbnNfc3ByaXRl
ICU+CmBgYAoKRmluYWxseSwgeW91IGNhbiByZW5kZXIgdGhlIGljb24gdXNp
bmcgdGhlIGBldmlsX2ljb25gIGhlbHBlci4KSGVyZSBhcmUgc29tZSBleGFt
cGxlczoKYGBgZXJiCjwlPSBldmlsX2ljb24gJ2VpLXNlYXJjaCcgJT4KPCU9
IGV2aWxfaWNvbiAnZWktYXJyb3ctcmlnaHQnLCBzaXplOiA6bSAlPgo8JT0g
ZXZpbF9pY29uICdlaS1lbnZlbG9wZScsIHNpemU6IDpsLCBjbGFzczogImN1
c3RvbS1jbGFzcyIgJT4KYGBgCgpJbiBvcmRlciB0byB1c2UgdGhlIHN0eWxl
c2hlZXRzLCB5b3UgaGF2ZSB0byBhZGQgU3Byb2NrZXRzIHRvIHlvdXIgYXBw
bGljYXRpb24uCkFkZCBgc2luYXRyYS1hc3NldC1waXBlbGluZWAgdG8geW91
ciBHZW1maWxlOgpgYGBydWJ5CmdlbSAnc2luYXRyYS1hc3NldC1waXBlbGlu
ZScKYGBgCgpBbmQgcmVnaXN0ZXIgaXQ6CmBgYHJ1YnkKcmVxdWlyZSAnc2lu
YXRyYS9hc3NldF9waXBlbGluZScKcmVnaXN0ZXIgU2luYXRyYTo6QXNzZXRQ
aXBlbGluZQpgYGAKCkZpbmFsbHksIGFkZCB0aGUgRXZpbCBJY29ucyByZXF1
aXJlIHRvIHlvdXIgYGFwcGxpY2F0aW9uLmNzc2A6CmBgYGNzcwovKgogKj0g
cmVxdWlyZSBldmlsLWljb25zCiAqLwpgYGAKCkFsc28sIHlvdSBjYW4gdGFr
ZSBhIGxvb2sgYXQgW2V4YW1wbGUgYXBwXSBieSBbQGFkZXJ5YWJpbl0uCltl
eGFtcGxlIGFwcF06IGh0dHBzOi8vZ2l0aHViLmNvbS9hZGVyeWFiaW4vZXZp
bF9pY29uc19zaW5hdHJhX2V4YW1wbGUvCltAYWRlcnlhYmluXTogaHR0cHM6
Ly9naXRodWIuY29tL2FkZXJ5YWJpbgoKCiMjIyBNaWRkbGVtYW4KCkFkZCB0
aGUgYCdldmlsX2ljb25zJ2AgZ2VtIHRvIHlvdXIgR2VtZmlsZToKYGBgcnVi
eQpnZW0gJ2V2aWxfaWNvbnMnCmBgYAoKQWRkIHRoZSBFdmlsIEljb25zIHJl
cXVpcmUgdG8geW91ciBtYWluIGNzcyBmaWxlIGVnLgpgc291cmNlL3N0eWxl
c2hlZXRzL3N0eWxlcy5jc3NgYDoKCmBgYGNzcwovKgogKj0gcmVxdWlyZSBl
dmlsLWljb25zCiAqLwpgYGAKCkFkZCBmb2xsb3dpbmcgdG8geW91ciBgY29u
ZmlnLnJiYCB0byByZWdpc3RlciBFdmlsIEljb25zIGhlbHBlcnM6CgpgYGBy
dWJ5CnJlcXVpcmUgJ2V2aWxfaWNvbnMnCmhlbHBlcnMgRXZpbEljb25zOjpI
ZWxwZXJzCgphZnRlcl9jb25maWd1cmF0aW9uIGRvCiAgc3Byb2NrZXRzLmFw
cGVuZF9wYXRoKEV2aWxJY29ucy5hc3NldHNfZGlyKQplbmQKYGBgCgpOZXh0
LCB5b3UgaGF2ZSB0byByZW5kZXIgZXZpbC1pY29ucyBzcHJpdGUgaW4geW91
ciBsYXlvdXQgc2ltaWxhciB0byB0aGUKW1JhaWxzIHVzYWdlXSgjcmFpbHMp
OgoKYGBgZXJiCjwlPSBldmlsX2ljb25zX3Nwcml0ZSAlPgpgYGAKCkFuZCBm
aW5hbGx5IGBldmlsX2ljb25gIGhlbHBlciByZW5kZXJzIGljb25zIGp1c3Qg
bGlrZSB3aXRoIHRoZSBbUmFpbHNdKCNyYWlscyk6CgpgYGBlcmIKPCU9IGV2
aWxfaWNvbiAnZWktc2VhcmNoJyAlPgo8JT0gZXZpbF9pY29uICdlaS1hcnJv
dy1yaWdodCcsIHNpemU6IDptICU+CjwlPSBldmlsX2ljb24gJ2VpLWVudmVs
b3BlJywgc2l6ZTogOmwsIGNsYXNzOiAiY3VzdG9tLWNsYXNzIiAlPgpgYGAK
CgojIyBucG0KCkFkZCB0aGUgYCdldmlsLWljb25zJ2AgcGFja2FnZSB0byB5
b3VyIHByb2plY3Q6CmBgYGJhc2gKbnBtIGluc3RhbGwgZXZpbC1pY29ucwpg
YGAKCkFkZCB0aGUgRXZpbCBJY29ucyBzdHlsZXMgdG8geW91ciBwYWdlczoK
YGBgaHRtbAo8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3Nz
IiBocmVmPSIuL25vZGVfbW9kdWxlcy9ldmlsLWljb25zL2Fzc2V0cy9ldmls
LWljb25zLmNzcyI+CmBgYAoKUmVxdWlyZSBgZXZpbC1pY29uc2AgaW4geW91
ciBKYXZhU2NyaXB0IGNvZGU6CmBgYGpzCnZhciBpY29ucyA9IHJlcXVpcmUo
ImV2aWwtaWNvbnMiKQpgYGAKCkZpbmFsbHksIHlvdSBjYW4gcmVuZGVyIHRo
ZSBpY29ucyBpbiB5b3VyIHBhZ2UgdXNpbmcgaGVscGVycy4KSGVyZSBhcmUg
c29tZSBleGFtcGxlczoKYGBganMKLyogQSBzdHJpbmcgd2l0aCBTVkcgc3By
aXRlICovCmljb25zLnNwcml0ZTsKCi8qIEljb25zIHJlbmRlcmluZyAqLwpp
Y29ucy5pY29uKCJlaS1zZWFyY2giKTsKaWNvbnMuaWNvbigiZWktYXJyb3ct
cmlnaHQiLCB7c2l6ZTogIm0ifSk7Cmljb25zLmljb24oImVpLWVudmVsb3Bl
Iiwge3NpemU6ICJsIiwgY2xhc3M6ICJjdXN0b20tY2xhc3MifSk7CmBgYAoK
IyMjIFJlYWN0ClVzZSB0aGUgW1JlYWN0IGNvbXBvbmVudF0oaHR0cHM6Ly9n
aXRodWIuY29tL3NhdWxob3dhcmQvcmVhY3QtZXZpbC1pY29ucykuCgojIyMg
U3R5bGluZwoKRXZlcnkgaWNvbiBoYXMgdGhlIGAuaWNvbmAgY2xhc3MgYW5k
IGl0cyBtb2RpZmllciBpbmNsdWRpbmcgdGhlIGljb24gbmFtZS4gRm9yIGV4
YW1wbGUsIHRoZSBGYWNlYm9vayBpY29uIGhhcyB0aGUgYC5pY29uLS1laS1z
Yy1mYWNlYm9va2AgbW9kaWZpZXIuCgpBbHNvLCBhbiBpY29uIG1heSBoYXZl
IGEgc2l6ZSBtb2RpZmllci4gQnV0IHdlIGRvIHJlY29tbWVuZCB0byBjaGFu
Z2UgdGhlIHNpemUgdXNpbmcgaGVscGVyJ3MgYHNpemVgIHBhcmFtZXRlciBp
bnN0ZWFkLiBFdmlsIEljb25zIGhhdmUgc29tZSBwcmVkZWZpbmVkIHNpemVz
OiBgc2AgKDI1eDI1LCBkZWZhdWx0KSwgYG1gICg1MMOXNTApLCBgbGAgKDEw
MMOXMTAwKSwgYHhsYCAoMTUww5cxNTApIGFuZCBgeHhsYCAoMjAww5cyMDAp
LiBZb3UgbWF5IHdhbnQgdG8gYWRkIG1vcmUgc2l6ZXMsIHdlIHJlY29tbWVu
ZCBrZWVwaW5nIHRoZSBzaXplcyBtdWx0aXBsZSB0byAyNS4KYGBganMKaWNv
bnMuaWNvbigiZWktYXJyb3ctcmlnaHQiLCB7c2l6ZTogIm0ifSkKYGBgCgpB
bHNvLCB5b3UgbWF5IHdhbnQgdG8gYWRkIGEgY3VzdG9tIGNsYXNzIGZvciBh
biBpY29uLgpZb3UgY2FuIGRvIHRoaXMgdXNpbmcgdGhlIGBjbGFzc2AgcGFy
YW1ldGVyOgpgYGBqcwppY29ucy5pY29uKCJlaS1lbnZlbG9wZSIsIHtjbGFz
czogImN1c3RvbS1jbGFzcyJ9KQpgYGAKCkFuIGljb24ncyBjb2xvciBjYW4g
YmUgY2hhbmdlZCBpbiBDU1M6CmBgYGNzcwouaWNvbiB7CiAgZmlsbDogZ3Jl
ZW47Cn0KLmljb24tLWVpLXNjLWZhY2Vib29rIHsKICBmaWxsOiBibHVlOwp9
CmBgYAoKCiMjIFJvYWRtYXAKKiBDdXN0b20gaWNvbnMKKiBNb3JlIHN0eWxl
cwo=
",,4785,"bGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczoKICAtICIwLjEwIgogIC0gImlv
anMtdjEuOC4xIgppbnN0YWxsOgogIC0gIm5wbSBpbnN0YWxsIgo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'cardslib',12984746,b'Android Library to build a UI Card',b'Java',188,4785,,324,False,b'https://api.github.com/repos/gabrielemariotti/cardslib/forks',"IyBDYXJkIExpYnJhcnkKVHJhdmlzIG1hc3RlcjogWyFbQnVpbGQgU3RhdHVz
XShodHRwczovL3RyYXZpcy1jaS5vcmcvZ2FicmllbGVtYXJpb3R0aS9jYXJk
c2xpYi5zdmc/YnJhbmNoPW1hc3RlcildKGh0dHBzOi8vdHJhdmlzLWNpLm9y
Zy9nYWJyaWVsZW1hcmlvdHRpL2NhcmRzbGliKQpUcmF2aXMgZGV2OiBbIVtC
dWlsZCBTdGF0dXNdKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9nYWJyaWVsZW1h
cmlvdHRpL2NhcmRzbGliLnN2Zz9icmFuY2g9ZGV2KV0oaHR0cHM6Ly90cmF2
aXMtY2kub3JnL2dhYnJpZWxlbWFyaW90dGkvY2FyZHNsaWIpCgoKKipDYXJk
IExpYnJhcnkqKiBwcm92aWRlcyBhbiBlYXN5IHdheSB0byBkaXNwbGF5IGEg
VUkgQ2FyZCB1c2luZyB0aGUgKipPZmZpY2lhbCBHb29nbGUgQ2FyZFZpZXcq
KiBpbiB5b3VyIEFuZHJvaWQgYXBwLgoKQmVmb3JlIHVzaW5nIHRoaXMgbGli
cmFyeSBJIHJlY29tbWVuZCB0aGF0IHlvdSBjaGVjayBvdXQgdGhlIG5ldyBH
b29nbGUgTWF0ZXJpYWwgR3VpZGVsaW5lcy5Eb24ndCBvdmVyIGNhcmRpZnkg
eW91ciBVSS4KCiFbU2NyZWVuXSgvZGVtby9pbWFnZXMvY2FyZHN2Ml9zbWFs
bC5wbmcpCgoKIyMgRXhhbXBsZXMKCgohW1NjcmVlbl0oL2RlbW8vaW1hZ2Vz
L2RlbW9fZ3BsYXkucG5nKQoKKiAqKlNhbXBsZSoqIGFwcGxpY2F0aW9uOiBU
aGUgZGVtbyBpcyBhIHNob3djYXNlIG9mIHRoZSBmdW5jdGlvbmFsaXR5IG9m
IHRoZSBsaWJyYXJ5LgoKCSBbIVtHZXQgaXQgb24gR29vZ2xlIFBsYXldKGh0
dHA6Ly93d3cuYW5kcm9pZC5jb20vaW1hZ2VzL2JyYW5kL2dldF9pdF9vbl9w
bGF5X2xvZ29fc21hbGwucG5nKV0oaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20v
c3RvcmUvYXBwcy9kZXRhaWxzP2lkPWl0LmdtYXJpb3R0aS5jYXJkc2xpYi5k
ZW1vKQoJIAoqICoqRXh0cmFzKiogYXBwbGljYXRpb246IFRoZSBkZW1vLWV4
dHJhcyBjb250YWlucyBzb21lIGV4YW1wbGVzIG9mIGludGVncmF0aW9uIHdp
dGggb3RoZXIgbGlicmFyaWVzCgkKCVshW0dldCBpdCBvbiBHb29nbGUgUGxh
eV0oaHR0cDovL3d3dy5hbmRyb2lkLmNvbS9pbWFnZXMvYnJhbmQvZ2V0X2l0
X29uX3BsYXlfbG9nb19zbWFsbC5wbmcpXShodHRwczovL3BsYXkuZ29vZ2xl
LmNvbS9zdG9yZS9hcHBzL2RldGFpbHM/aWQ9aXQuZ21hcmlvdHRpLmNhcmRz
bGliLmRlbW8uZXh0cmFzKQoKICAKIyMgU3VwcG9ydApKb2luIHRoZSBbKipH
b29nbGUrIENvbW11bml0eSoqXShodHRwczovL3BsdXMuZ29vZ2xlLmNvbS91
LzAvY29tbXVuaXRpZXMvMTExODAwMDQwNjkwNzM4MzcyODAzKTogCgpbIVtK
b2luIHRoZSBHb29nbGUrIENvbW11bml0eV0oL2RlbW8vaW1hZ2VzL2crNjQu
cG5nKV0oaHR0cHM6Ly9wbHVzLmdvb2dsZS5jb20vdS8wL2NvbW11bml0aWVz
LzExMTgwMDA0MDY5MDczODM3MjgwMykKCQphIHBsYWNlIHRvIGRpc2N1c3Mg
dGhlIGxpYnJhcnksIHNoYXJlIHNjcmVlbnNob3RzLCBhc2sgZm9yIHRpcHMs
IHRhbGsgd2l0aCB0aGUgYXV0aG9yLi4uLu+7vwoKKipJZiB5b3Ugd291bGQg
bGlrZSwgeW91IGNhbiBzdXBwb3J0IG15IHdvcmssIGRvbmF0aW5nIHRocm91
Z2ggdGhlIGRlbW8gYXBwLioqCgoKIyMgRG9jCgpTZWUgdGhlICoqW0NhcmQg
TGlicmFyeSBHdWlkZV0oL2RvYy9HVUlERS5tZCkqKiB0byBrbm93IGFsbCBj
YXJkIGxpYnJhcnkgZmVhdHVyZXMgYW5kIGFsbCBjdXN0b21pemF0aW9ucy4K
VGhlIEd1aWRlIHByb3ZpZGVzIGFuIGV4dGVuc2l2ZSBkb2MsIHdpdGggYWxs
IHRpcHMgYW5kIGZ1bGwgZXhhbXBsZXMuICoqRG9uJ3QgbWlzcyBpdCoqLgoK
CiMjIFNldHVwCgpDYXJkIExpYnJhcnkgaXMgcHVzaGVkIHRvIE1hdmVuIENl
bnRyYWwgYXMgYW4gQUFSLCBzbyB5b3UganVzdCBuZWVkIHRvIGFkZCB0aGUg
Zm9sbG93aW5nIGRlcGVuZGVuY3kgdG8geW91ciBgYnVpbGQuZ3JhZGxlYC4K
CiAgICBkZXBlbmRlbmNpZXMgewogICAgICAgIC8vQ29yZQogICAgICAgIGNv
bXBpbGUgJ2NvbS5naXRodWIuZ2FicmllbGVtYXJpb3R0aS5jYXJkczpjYXJk
c2xpYi1jb3JlOjIuMS4wJwogICAgICAgIAogICAgICAgIC8vT3B0aW9uYWwg
Zm9yIGJ1aWx0LWluIGNhcmRzCiAgICAgICAgY29tcGlsZSAnY29tLmdpdGh1
Yi5nYWJyaWVsZW1hcmlvdHRpLmNhcmRzOmNhcmRzbGliLWNhcmRzOjIuMS4w
JwogICAgICAgICAgICAgICAgCiAgICAgICAgLy9PcHRpb25hbCBmb3IgUmVj
eWNsZXJWaWV3CiAgICAgICAgY29tcGlsZSAnY29tLmdpdGh1Yi5nYWJyaWVs
ZW1hcmlvdHRpLmNhcmRzOmNhcmRzbGliLXJlY3ljbGVydmlldzoyLjEuMCcK
ICAgICAgICAgIAogICAgICAgIC8vT3B0aW9uYWwgZm9yIHN0YWdnZXJlZCBn
cmlkIHZpZXcKICAgICAgICBjb21waWxlICdjb20uZ2l0aHViLmdhYnJpZWxl
bWFyaW90dGkuY2FyZHM6Y2FyZHNsaWItZXh0cmEtc3RhZ2dlcmVkZ3JpZDoy
LjEuMCcKICAgICAgICAgCiAgICAgICAgLy9PcHRpb25hbCBmb3IgZHJhZyBh
bmQgZHJvcAogICAgICAgIGNvbXBpbGUgJ2NvbS5naXRodWIuZ2FicmllbGVt
YXJpb3R0aS5jYXJkczpjYXJkc2xpYi1leHRyYS1kcmFnZHJvcDoyLjEuMCcK
ICAgICAgICAKICAgICAgICAvL09wdGlvbmFsIGZvciB0d293YXkgIChjb21p
bmcgc29vbikKICAgICAgICAvL2NvbXBpbGUgJ2NvbS5naXRodWIuZ2Ficmll
bGVtYXJpb3R0aS5jYXJkczpjYXJkc2xpYi1leHRyYS10d293YXk6Mi4xLjAn
CiAgICAgICAgCiAgICB9CgpJZiB5b3Ugd291bGQgbGlrZSB0byB1c2UgdGhl
IGxhc3QgKip2MSBzdGFibGUgdmVyc2lvbioqIHlvdSBjYW4gdXNlOgogICAg
CiAgICBkZXBlbmRlbmNpZXMgewogICAgICAgIC8vQ29yZSBjYXJkIGxpYnJh
cnkKICAgICAgICBjb21waWxlICdjb20uZ2l0aHViLmdhYnJpZWxlbWFyaW90
dGkuY2FyZHM6bGlicmFyeToxLjkuMScKCiAgICAgICAgLy9FeHRyYSBjYXJk
IGxpYnJhcnksIGl0IGlzIHJlcXVpcmVkIG9ubHkgaWYgeW91IHdhbnQgdG8g
dXNlIGludGVncmF0aW9ucyB3aXRoIG90aGVyIGxpYnJhcmllcwogICAgICAg
IGNvbXBpbGUgJ2NvbS5naXRodWIuZ2FicmllbGVtYXJpb3R0aS5jYXJkczps
aWJyYXJ5LWV4dHJhOjEuOS4xJwogICAgfQoKCiMjIENoYW5nZUxvZwoKKiBb
Q2hhbmdlbG9nOl0oQ0hBTkdFTE9HLm1kKSBBIGNvbXBsZXRlIGNoYW5nZWxv
ZwoKCkFja25vd2xlZGdlbWVudHMKLS0tLS0tLS0tLS0tLS0tLS0tLS0KCiog
VGhhbmtzIHRvIFtSb21hbiBOdXJpa11bMV0gZm9yIFtBbmRyb2lkLVN3aXBl
VG9EaXNtaXNzXVsyXSBjbGFzc2VzIGFuZCBbVW5kb0JhckNvbnRyb2xsZXJd
WzNdIGNsYXNzZXMuCiogVGhhbmtzIHRvIFtOaWVrIEhhYXJtYW5dWzRdIGZv
ciBzb21lIGlkZWFzIGFuZCBjb2RlIHRha2VuIGZyb20gaGlzIFtMaXN0Vmll
d0FuaW1hdGlvbnNdWzVdLgoqIFRoYW5rcyB0byBbQ2hyaXMgQmFuZXNdWzZd
IGZvciBbRm9yZWdyb3VuZExpbmVhckxheW91dF1bN10gY2xhc3MgKFNlZSB0
aGlzIFtwb3N0XVs4XSBmb3IgbW9yZSBpbmZvKS4KKiBUaGFua3MgdG8gW1Rh
eWxvciBMaW5nXVs5XSBmb3IgZHJhZyBhbmQgZHJvcCBpY29uLgoqIFRoYW5r
cyB0byBbRnJhbmtpZSBTYXJkb11bMTBdIGZvciBzb21lIGlkZWFzIGFuZCBj
b2RlIHRha2VuIGZyb20gaGlzIFtMaW5lYXJMaXN0Vmlld11bMTFdCiogVGhh
bmtzIHRvIEdvb2dsZSBmb3IgY29kZSBhbmQgaWRlYSBmcm9tIFtHb29nbGUg
SU8gMTRdWzEyXQoKQ3JlZGl0cwotLS0tLS0tCgpBdXRob3I6IEdhYnJpZWxl
IE1hcmlvdHRpIChnYWJyaS5tYXJpb3R0aUBnbWFpbC5jb20pCgo8YSBocmVm
PSJodHRwczovL3BsdXMuZ29vZ2xlLmNvbS91LzAvMTE0NDMyNTE3OTIzNDIz
MDQ1MjA4Ij4KICA8aW1nIGFsdD0iRm9sbG93IG1lIG9uIEdvb2dsZSsiCiAg
ICAgICBzcmM9Imh0dHBzOi8vZ2l0aHViLmNvbS9nYWJyaWVsZW1hcmlvdHRp
L2NhcmRzbGliL3Jhdy9tYXN0ZXIvZGVtby9pbWFnZXMvZys2NC5wbmciIC8+
CjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9HYWJNYXJpb1Bv
d2VyIj4KICA8aW1nIGFsdD0iRm9sbG93IG1lIG9uIFR3aXR0ZXIiCiAgICAg
ICBzcmM9Imh0dHBzOi8vZ2l0aHViLmNvbS9nYWJyaWVsZW1hcmlvdHRpL2Nh
cmRzbGliL3Jhdy9tYXN0ZXIvZGVtby9pbWFnZXMvdHdpdHRlcjY0LnBuZyIg
Lz4KPC9hPgo8YSBocmVmPSJodHRwOi8vaXQubGlua2VkaW4uY29tL2luL2dh
YnJpZWxlbWFyaW90dGkiPgogIDxpbWcgYWx0PSJGb2xsb3cgbWUgb24gTGlu
a2VkSW4iCiAgICAgICBzcmM9Imh0dHBzOi8vZ2l0aHViLmNvbS9nYWJyaWVs
ZW1hcmlvdHRpL2NhcmRzbGliL3Jhdy9tYXN0ZXIvZGVtby9pbWFnZXMvbGlu
a2VkaW4ucG5nIiAvPgo8L2E+CgpMaWNlbnNlCi0tLS0tLS0KCiAgICBDb3B5
cmlnaHQgMjAxMy0yMDE0IEdhYnJpZWxlIE1hcmlvdHRpCgogICAgTGljZW5z
ZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhl
ICJMaWNlbnNlIik7CiAgICB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4
Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAgICBZb3Ug
bWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKCiAgICAgICBo
dHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKCiAg
ICBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVk
IHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAgICBkaXN0cmlidXRlZCB1bmRl
ciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJB
U0lTLAogICAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0Yg
QU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiAgICBTZWUg
dGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5p
bmcgcGVybWlzc2lvbnMgYW5kCiAgICBsaW1pdGF0aW9ucyB1bmRlciB0aGUg
TGljZW5zZS4KCgotLS0KCgpHb29nbGUgYW5kIHRoZSBHb29nbGUgTWFwcyBs
b2dvIGFyZSByZWdpc3RlcmVkIHRyYWRlbWFya3Mgb2YgR29vZ2xlIEluYy4s
IHVzZWQgd2l0aCBwZXJtaXNzaW9uLgoKIFsxXTogaHR0cHM6Ly9wbHVzLmdv
b2dsZS5jb20vdS8wLytSb21hbk51cmlrL2Fib3V0CiBbMl06IGh0dHBzOi8v
Z2l0aHViLmNvbS9yb21hbm51cmlrL0FuZHJvaWQtU3dpcGVUb0Rpc21pc3MK
IFszXTogaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC9yb21hbm51cmlrLWNv
ZGUvc291cmNlL2Jyb3dzZS8jZ2l0JTJGbWlzYyUyRnVuZG9iYXIKIFs0XTog
aHR0cHM6Ly9wbHVzLmdvb2dsZS5jb20vK05pZWtIYWFybWFuCiBbNV06IGh0
dHBzOi8vZ2l0aHViLmNvbS9uaGFhcm1hbi9MaXN0Vmlld0FuaW1hdGlvbnMK
IFs2XTogaHR0cHM6Ly9wbHVzLmdvb2dsZS5jb20vK0NocmlzQmFuZXMKIFs3
XTogaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vY2hyaXNiYW5lcy85MDkxNzU0
CiBbOF06IGh0dHBzOi8vcGx1cy5nb29nbGUuY29tLytBbmRyb2lkRGV2ZWxv
cGVycy9wb3N0cy9hSFBWRHRyNm1jcAogWzldOiBodHRwczovL3BsdXMuZ29v
Z2xlLmNvbS8rVGF5bG9yTGluZwogWzEwXTogaHR0cHM6Ly9wbHVzLmdvb2ds
ZS5jb20vK0ZyYW5raWVTYXJkbwogWzExXTogaHR0cHM6Ly9naXRodWIuY29t
L2ZyYW5raWVzYXJkby9MaW5lYXJMaXN0VmlldwogWzEyXTogaHR0cHM6Ly9n
aXRodWIuY29tL2dvb2dsZS9pb3NjaGVk
",,4785,"bGFuZ3VhZ2U6IGFuZHJvaWQKYW5kcm9pZDoKICBjb21wb25lbnRzOgogICAg
ICAjIFRoZSBCdWlsZFRvb2xzIHZlcnNpb24gdXNlZCBieSB5b3VyIHByb2pl
Y3QKICAgICAgLSBidWlsZC10b29scy0yMi4wLjEKICAgICAgIyBUaGUgU0RL
IHZlcnNpb24gdXNlZCB0byBjb21waWxlIHlvdXIgcHJvamVjdAogICAgICAt
IGFuZHJvaWQtMjIKICAgICAgIyBBZGRpdGlvbmFsIGNvbXBvbmVudHMKICAg
ICAgLSBleHRyYS1hbmRyb2lkLW0ycmVwb3NpdG9yeQoKCmJyYW5jaGVzOgog
IG9ubHk6CiAgICAtIG1hc3RlcgogICAgLSBkZXYKCm5vdGlmaWNhdGlvbnM6
CiAgZW1haWw6IGZhbHNlCgpiZWZvcmVfaW5zdGFsbDoKCiAgIyBmb3IgZ3Jh
ZGxlIG91dHB1dCBzdHlsZQogIC0gZXhwb3J0IFRFUk09ZHVtYgoKICAjIGVu
dmlyb25tZW50IGluZm8KICAtIC4vZ3JhZGxldyAtdgogIC0gdW5hbWUgLWEK
CiMgTGV0J3MgdHJ5IHRvIGJ1aWxkLi4uCiNpbnN0YWxsOiAuL2dyYWRsZXcg
Y2xlYW4gYnVpbGQKc2NyaXB0OiAuL2dyYWRsZXcgY2hlY2s=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'DisableWinTracking',40093782,b'Uses some known methods that attempt to minimize tracking in Windows 10',b'Python',9,4785,,308,False,b'https://api.github.com/repos/10se1ucgo/DisableWinTracking/forks',"IyBEaXNhYmxlV2luVHJhY2tpbmcKCkEgdG9vbCB0aGF0IEkgY3JlYXRlZCB0
byB1c2Ugc29tZSBvZiB0aGUga25vd24gbWV0aG9kcyBvZiBkaXNhYmxpbmcg
dHJhY2tpbmcgaW4gV2luZG93cyAxMC4KCjwhLS0gIVtzY3JlZW5zaG90XSho
dHRwczovL2kuaW1ndXIuY29tL3FmQzJlbE4ucG5nKSAtLT4KIVtzY3JlZW5z
aG90XShodHRwOi8vaS5pbWd1ci5jb20vV0lOVXhBai5wbmcpCgojIyBDWVJJ
TExJQyBMQU5HVUFHRVMgV0FSTklORwoKIyMg0J/QoNCV0JTQo9Cf0KDQldCW
0JTQldCd0JjQlSDQlNCb0K8g0JrQmNCg0JjQm9Cb0JjQp9CV0KHQmtCY0KUg
0K/Ql9Cr0JrQntCSCgoqKlNsYXZpYyBsYW5ndWFnZXM6IEJlbGFydXNpYW4s
IEJ1bGdhcmlhbiwgTWFjZWRvbmlhbiwgUnVzc2lhbiwgUnVzeW4sIFNlcmJv
LUNyb2F0aWFuIChmb3IgU3RhbmRhcmQgU2VyYmlhbiwgQm9zbmlhbiwgYW5k
IE1vbnRlbmVncmluKSwgVWtyYWluaWFuLioqCgoqKtCh0LvQsNCy0Y/QvdGB
0LrQuNC1INGP0LfRi9C60Lg6INCx0LXQu9C+0YDRg9GB0YHQutC40LksINCx
0L7Qu9Cz0LDRgNGB0LrQuNC5LCDQvNCw0LrQtdC00L7QvdGB0LrQuNC5LCDR
gNGD0YHRgdC60LjQuSwg0YDRg9GB0LjQvdGB0LrQuNC5LCDRgdC10YDQsdC+
0YXQvtGA0LLQsNGC0YHQutC40LkgKNC00LvRjyDRgdGC0LDQvdC00LDRgNGC
0L3QvtCz0L4g0YHQtdGA0LHRgdC60L7Qs9C+LCDQsdC+0YHQvdC40LnRgdC6
0L7Qs9C+INC4INGH0LXRgNC90L7Qs9C+0YDRgdC60L7Qs9C+KSwg0YPQutGA
0LDQuNC90YHQutC40LkuKioKClRoaXMgcHJvZ3JhbSBjYW5ub3QgcnVuIGNv
cnJlY3RseSBmcm9tIGEgZmlsZSBwYXRoIHRoYXQgY29udGFpbnMgQ3lyaWxs
aWMgY2hhcmFjdGVycy4gTWFrZSBzdXJlIHRvIHJ1biBpdCBmcm9tIHlvdXIg
cm9vdCBmb2xkZXIgKHVzdWFsbHkgQzovICkgc28gdGhhdCB5b3UgZG9uJ3Qg
Z2V0IHJ1bnRpbWUgZXJyb3JzLgoK0K3RgtCwINC/0YDQvtCz0YDQsNC80LzQ
sCDQvdC1INC80L7QttC10YIg0YDQsNCx0L7RgtCw0YLRjCDQutC+0YDRgNC1
0LrRgtC90L4sINC10YHQu9C4INCyINC/0YPRgtC4INC6INGE0LDQudC70YMg
0LXRgdGC0Ywg0LrQuNGA0LjQu9C70LjRh9C10YHQutC40LUg0YHQuNC80LLQ
vtC70YsuINCe0LHRj9C30LDRgtC10LvRjNC90L4g0LfQsNC/0YPRgdGC0LjR
gtC1INC10LPQviDQuNC3INC60L7RgNC90LXQstC+0Lkg0L/QsNC/0LrQuCAo
INC+0LHRi9GH0L3QviBDOi8gKSwg0YfRgtC+0LHRiyDQstGLINC90LUg0L/Q
vtC70YPRh9Cw0LvQuCDQvtGI0LjQsdC+0Log0LLQviDQstGA0LXQvNGPINCy
0YvQv9C+0LvQvdC10L3QuNGPLgoKIyMgRE9XTkxPQUQKCltET1dOTE9BRCBF
WEUgSEVSRV0oaHR0cHM6Ly9naXRodWIuY29tLzEwc2UxdWNnby9EaXNhYmxl
V2luVHJhY2tpbmcvcmVsZWFzZXMvKQoKKipOb3RlOioqIFdpbmRvd3MgRGVm
ZW5kZXIgbWF5IHJlcG9ydCB0aGUgRVhFIGFzIGEgdHJvamFuIChXaW4zMi9Q
b2N5eC5DIWNsKSwgYW5kIG1heSB0aGVyZWZvcmUgcHJldmVudCB5b3UgZnJv
bSBleHRyYWN0aW5nIHRoZSBFWEUgdG8gYW55d2hlcmUgb24geW91ciBjb21w
dXRlci4gU2V0IHVwIGFuIGV4Y2x1c2lvbiBpbiAqKlNldHRpbmdzID4gVXBk
YXRlICYgU2VjdXJpdHkgPiBXaW5kb3dzIERlZmVuZGVyID4gRXhjbHVzaW9u
cyoqIGJ5IGFkZGluZyB0aGUgZm9sZGVyIHlvdSBpbnRlbmQgdG8gZXh0cmFj
dCB0aGUgRVhFIHRvLgoKIyMgSG93IHRvIFVzZQoKWW91IGNhbiBlaXRoZXI6
CgpBLiBbUnVuIHRoZSBiaW5hcnkgdXBsb2FkZWQgdG8gdGhlIFJlbGVhc2Ug
dGFiIGFzIGFuIEFkbWluaXN0cmF0b3IgYW5kIHNlbGVjdCB3aGljaCBvcHRp
b25zIHlvdSdkIGxpa2VdKGh0dHBzOi8vZ2l0aHViLmNvbS8xMHNlMXVjZ28v
RGlzYWJsZVdpblRyYWNraW5nL3JlbGVhc2VzLykKCkIuIEluc3RhbGwgUHl0
aG9uIGFuZCB0aGUgZGVwZW5kZW5jaWVzIGxpc3RlZCBiZWxvdyBhbmQgcnVu
IHRoZSBzY3JpcHQgZnJvbSBhbiBlbGV2YXRlZCBjb21tYW5kIHByb21wdCBh
bmQgc2VsZWN0IHdoaWNoIG9wdGlvbnMgeW91J2QgbGlrZSAgCgojIyMjIFNp
bGVudAoKRWl0aGVyIGNhbiBiZSBydW4gd2l0aCB0aGUgLXNpbGVudCBhcmd1
bWVudCBhcyBvZiB2My4xLiBUaGlzIHdpbGwgcGVyZm9ybSBhbGwgYXZhaWxh
YmxlIG9wdGlvbnMgb2YgdGhlIHZlcnNpb24geW91J3JlIHVzaW5nLgoKKipZ
b3Ugc3RpbGwgbmVlZCB0byBydW4gaXQgYXMgYWRtaW5pc3RyYXRvci4qKgoK
IyMgRGVwZW5kZW5jaWVzClRoaXMgaXMgb25seSB0byBydW4gdGhlIHNjcmlw
dCBmcm9tIHNvdXJjZSwgW2Rvd25sb2FkIHRoZSBleGUgaGVyZV0oaHR0cHM6
Ly9naXRodWIuY29tLzEwc2UxdWNnby9EaXNhYmxlV2luVHJhY2tpbmcvcmVs
ZWFzZXMvKQoqIFRlc3RlZCBvbiBQeXRob24gMy43LjIgc2luY2UgRGlzYWJs
ZVdpblRyYWNraW5nIDMuMi40IChjb21taXQgWzlmMWQyYWFdKGh0dHBzOi8v
Z2l0aHViLmNvbS8xMHNlMXVjZ28vRGlzYWJsZVdpblRyYWNraW5nL2NvbW1p
dC85ZjFkMmFhNThjZWM3NjMwNmMzZGM2ODg3ZTdjOWM5Mjc2OTkzNmZlKSkK
KiBbd3hQeXRob25dKGh0dHA6Ly93eHB5dGhvbi5vcmcvZG93bmxvYWQucGhw
KQoqIFtQeVdpbjMyXShodHRwOi8vc291cmNlZm9yZ2UubmV0L3Byb2plY3Rz
L3B5d2luMzIvZmlsZXMvcHl3aW4zMi8pCiogV2luZG93cyAxMCAoRHVoKQoK
IyMgTWV0aG9kcyBVc2VkCgojIyMjIFRlbGVtZXRyeQoKU2V0IHRoZSBgQWxs
b3dUZWxlbWV0cnlgIHN0cmluZyBpbiBgSEtFWV9MT0NBTF9NQUNISU5FXFNP
RlRXQVJFXFBvbGljaWVzXE1pY3Jvc29mdFxXaW5kb3dzXERhdGFDb2xsZWN0
aW9uYCB0byBgMGAKCiMjIyMgRGlhZ1RyYWNrIExvZwoKQ2xlYXJzIGFuZCBk
aXNhYmxlcyB3cml0aW5nIHRvIHRoZSBsb2cgbG9jYXRlZCBpbiBgQzpcUHJv
Z3JhbURhdGFcTWljcm9zb2Z0XERpYWdub3Npc1xFVExMb2dzXEF1dG9Mb2dn
ZXJgCgojIyMjIFNlcnZpY2VzCgpZb3UgY2FuIGRlbGV0ZSBvciBkaXNhYmxl
IHRoZSAyIHNlcnZpY2VzIGJlbG93OgoqIGBEaWFnVHJhY2tgIChha2EuIENv
bm5lY3RlZCBVc2VyIEV4cGVyaWVuY2VzIGFuZCBUZWxlbWV0cnkpIERpYWdu
b3N0aWNzIFRyYWNraW5nIFNlcnZpY2UKKiBgZG13YXBwdXNoc3ZjYCBXQVAg
UHVzaCBNZXNzYWdlIFJvdXRpbmcgU2VydmljZQoKQWN0aW9uOgoqIERlbGV0
ZTogUmVtb3ZlIGJvdGggc2VydmljZXMKKiBEaXNhYmxlOiBTZXQgdGhlIGBT
dGFydGAgcmVnaXN0cnkga2V5IGZvciBib3RoIHNlcnZpY2VzIHRvIGA0YCAo
RGlzYWJsZWQpIExvY2F0ZWQgYXQgYEhLRVlfTE9DQUxfTUFDSElORVxTWVNU
RU1cQ3VycmVudENvbnRyb2xTZXRcU2VydmljZXNcYAoKIyMjIyBIT1NUUwoK
QXBwZW5kIGtub3duIHRyYWNraW5nIGRvbWFpbnMgdG8gdGhlIGBIT1NUU2Ag
ZmlsZSBsb2NhdGVkIGluIGBDOlxXaW5kb3dzXFN5c3RlbTMyXGRyaXZlcnNc
ZXRjYAoKIyMjIyBJUCBCbG9ja2luZwoKQmxvY2tzIGtub3duIHRyYWNraW5n
IElQcyB3aXRoIHRoZSBXaW5kb3dzIEZpcmV3YWxsLiBUaGUgcnVsZXMgYXJl
IG5hbWVkIFRyYWNraW5nSVBYLCByZXBsYWNpbmcgWCB3aXRoIHRoZSBJUCBu
dW1iZXJzLgoKIyMjIyBXaW5kb3dzIERlZmVuZGVyCgpEaXNhYmxlcyB0aGUg
Zm9sbG93aW5nOgotIEF1dG9tYXRpYyBTYW1wbGUgU3VibWlzc2lvbgotIERl
bGl2ZXJ5IE9wdGltaXphdGlvbiBEb3dubG9hZCBNb2RlCiAKIyMjIyBXaWZp
U2Vuc2UKRGlzYWJsZXMgdGhlIGZvbGxvd2luZzoKLSBDcmVkZW50aWFsIFNo
YXJlCi0gT3Blbi1uZXNzCgojIyMjIE9uZURyaXZlCgpSdW5zIGBDOlxXaW5k
b3dzXFN5c1dPVzY0XE9uZURyaXZlU2V0dXAuZXhlIC91bmluc3RhbGxgICg2
NCBiaXQpIG9yICAKYEM6XFdpbmRvd3NcU3lzdGVtMzJcT25lRHJpdmVTZXR1
cC5leGUgL3VuaW5zdGFsbGAgKDMyIGJpdCkKCkFsc28gZGlzYWJsZXMgcmVn
aXN0cnkgZW50cmllcyB0aGF0IGtlZXAgdGhlIE9uZURyaXZlIEljb24gcGlu
bmVkIHRvIHlvdXIgV2luZG93cyBFeHBsb3JlciBsaXN0OgohW09uZURyaXZl
IEV4YW1wbGUgSW1hZ2VdKGh0dHA6Ly9pLmltZ3VyLmNvbS8yNnlmbkdELnBu
ZykKCiMjIyMgWGJveCBEVlIKCkFjdGlvbjoKKiBEaXNhYmxlOiBTZXQgdGhl
IGBHYW1lRFZSX0VuYWJsZWRgIHJlZ2lzdHJ5IGtleSBmb3IgYm90aCBzZXJ2
aWNlcyB0byBgMGAgKERpc2FibGVkKSBMb2NhdGVkIGF0IGBIS0VZX0NVUlJF
TlRfVVNFUlxTeXN0ZW1cR2FtZUNvbmZpZ1N0b3JlYAoqIERpc2FibGU6IFNl
dCB0aGUgYEFsbG93R2FtZURWUmAgcmVnaXN0cnkga2V5IGZvciBib3RoIHNl
cnZpY2VzIHRvIGAwYCAoRGlzYWJsZWQpIExvY2F0ZWQgYXQgYEhLRVlfTE9D
QUxfTUFDSElORVxTT0ZUV0FSRVxQb2xpY2llc1xNaWNyb3NvZnRcV2luZG93
c1xHYW1lRFZSYAoKVGhpcyBhY3Rpb24gcmVxdWlyZXMgcmVib290IGNvbXB1
dGVyIGZvciBjb21wbGV0ZWx5IGFwcGx5aW5nLgoKIyMgRGVsZXRlIFNlcnZp
Y2VzIHZzIERpc2FibGUgU2VydmljZXM/CgpTZWxlY3RpbmcgIkRpc2FibGUi
IHdpbGwgc2ltcGx5IHN0b3AgdGhlIHNlcnZpY2VzIGZyb20gYmVpbmcgYWJs
ZSB0byBydW4uClNlbGVjdGluZyB0aGUgIkRlbGV0ZSIgY2hvaWNlIHdpbGwg
Y29tcGxldGVseSBkZWxldGUgdGhlIHRyYWNraW5nIHNlcnZpY2VzLgoKIyMg
TGljZW5zZQoKYGBgCkNvcHlyaWdodCAoQykgMTBzZTF1Y2dvIDIwMTYKClRo
aXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJp
YnV0ZSBpdCBhbmQvb3IgbW9kaWZ5Cml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0
aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5
CnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9u
IDMgb2YgdGhlIExpY2Vuc2UsIG9yCihhdCB5b3VyIG9wdGlvbikgYW55IGxh
dGVyIHZlcnNpb24uCgpUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4g
dGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwKYnV0IFdJVEhPVVQg
QU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFu
dHkgb2YKTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElD
VUxBUiBQVVJQT1NFLiAgU2VlIHRoZQpHTlUgR2VuZXJhbCBQdWJsaWMgTGlj
ZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgoKWW91IHNob3VsZCBoYXZlIHJlY2Vp
dmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UK
YWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDov
L3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uCmBgYAo=
",,4785,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'rest-client',404319,"b'Simple HTTP and REST client for Ruby, inspired by microframework syntax for specifying actions.'",b'Ruby',98,4785,,103,False,b'https://api.github.com/repos/rest-client/rest-client/forks',"IyBSRVNUIENsaWVudCAtLSBzaW1wbGUgRFNMIGZvciBhY2Nlc3NpbmcgSFRU
UCBhbmQgUkVTVCByZXNvdXJjZXMKClshW0dlbSBEb3dubG9hZHNdKGh0dHBz
Oi8vaW1nLnNoaWVsZHMuaW8vZ2VtL2R0L3Jlc3QtY2xpZW50LnN2ZyldKGh0
dHBzOi8vcnVieWdlbXMub3JnL2dlbXMvcmVzdC1jbGllbnQpClshW0J1aWxk
IFN0YXR1c10oaHR0cHM6Ly90cmF2aXMtY2kub3JnL3Jlc3QtY2xpZW50L3Jl
c3QtY2xpZW50LnN2Zz9icmFuY2g9bWFzdGVyKV0oaHR0cHM6Ly90cmF2aXMt
Y2kub3JnL3Jlc3QtY2xpZW50L3Jlc3QtY2xpZW50KQpbIVtDb2RlIENsaW1h
dGVdKGh0dHBzOi8vY29kZWNsaW1hdGUuY29tL2dpdGh1Yi9yZXN0LWNsaWVu
dC9yZXN0LWNsaWVudC5zdmcpXShodHRwczovL2NvZGVjbGltYXRlLmNvbS9n
aXRodWIvcmVzdC1jbGllbnQvcmVzdC1jbGllbnQpClshW0lubGluZSBkb2Nz
XShodHRwOi8vaW5jaC1jaS5vcmcvZ2l0aHViL3Jlc3QtY2xpZW50L3Jlc3Qt
Y2xpZW50LnN2Zz9icmFuY2g9bWFzdGVyKV0oaHR0cDovL3d3dy5ydWJ5ZG9j
LmluZm8vZ2l0aHViL3Jlc3QtY2xpZW50L3Jlc3QtY2xpZW50L21hc3RlcikK
WyFbSm9pbiB0aGUgY2hhdCBhdCBodHRwczovL2dpdHRlci5pbS9ydWJ5LXJl
c3QtY2xpZW50L2NvbW11bml0eV0oaHR0cHM6Ly9iYWRnZXMuZ2l0dGVyLmlt
L3J1YnktcmVzdC1jbGllbnQvY29tbXVuaXR5LnN2ZyldKGh0dHBzOi8vZ2l0
dGVyLmltL3J1YnktcmVzdC1jbGllbnQvY29tbXVuaXR5P3V0bV9zb3VyY2U9
YmFkZ2UmdXRtX21lZGl1bT1iYWRnZSZ1dG1fY2FtcGFpZ249cHItYmFkZ2Um
dXRtX2NvbnRlbnQ9YmFkZ2UpCgpBIHNpbXBsZSBIVFRQIGFuZCBSRVNUIGNs
aWVudCBmb3IgUnVieSwgaW5zcGlyZWQgYnkgdGhlIFNpbmF0cmEncyBtaWNy
b2ZyYW1ld29yayBzdHlsZQpvZiBzcGVjaWZ5aW5nIGFjdGlvbnM6IGdldCwg
cHV0LCBwb3N0LCBkZWxldGUuCgoqIE1haW4gcGFnZTogaHR0cHM6Ly9naXRo
dWIuY29tL3Jlc3QtY2xpZW50L3Jlc3QtY2xpZW50CiogTWFpbGluZyBsaXN0
OiBodHRwczovL2dyb3Vwcy5pby9nL3Jlc3QtY2xpZW50CgojIyMgTmV3IG1h
aWxpbmcgbGlzdAoKV2UgaGF2ZSBhIG5ldyBlbWFpbCBsaXN0IGZvciBhbm5v
dW5jZW1lbnRzLCBob3N0ZWQgYnkgR3JvdXBzLmlvLgoKKiBTdWJzY3JpYmUg
b24gdGhlIHdlYjogaHR0cHM6Ly9ncm91cHMuaW8vZy9yZXN0LWNsaWVudAoK
KiBTdWJzY3JpYmUgYnkgc2VuZGluZyBhbiBlbWFpbDogbWFpbHRvOnJlc3Qt
Y2xpZW50K3N1YnNjcmliZUBncm91cHMuaW8KCiogT3BlbiBkaXNjdXNzaW9u
IHN1Ymdyb3VwOiBodHRwczovL2dyb3Vwcy5pby9nL3Jlc3QtY2xpZW50K2Rp
c2N1c3MKClRoZSBvbGQgTGlicmVsaXN0IG1haWxpbmcgbGlzdCBpcyAqZGVm
dW5jdCosIGFzIExpYnJlbGlzdCBhcHBlYXJzIHRvIGJlIGJyb2tlbgphbmQg
bm90IGFjY2VwdGluZyBuZXcgbWFpbC4gVGhlIG9sZCBhcmNoaXZlcyBhcmUg
c3RpbGwgdXAsIGJ1dCBoYXZlIGJlZW4KaW1wb3J0ZWQgaW50byB0aGUgbmV3
IGxpc3QgYXJjaGl2ZXMgYXMgd2VsbC4KaHR0cDovL2xpYnJlbGlzdC5jb20v
YnJvd3Nlci9yZXN0LmNsaWVudAoKIyMgUmVxdWlyZW1lbnRzCgpNUkkgUnVi
eSAyLjAgYW5kIG5ld2VyIGFyZSBzdXBwb3J0ZWQuIEFsdGVybmF0aXZlIGlu
dGVycHJldGVycyBjb21wYXRpYmxlIHdpdGgKMi4wKyBzaG91bGQgd29yayBh
cyB3ZWxsLgoKRWFybGllciBSdWJ5IHZlcnNpb25zIHN1Y2ggYXMgMS44Ljcs
IDEuOS4yLCBhbmQgMS45LjMgYXJlIG5vIGxvbmdlciBzdXBwb3J0ZWQuIFRo
ZXNlCnZlcnNpb25zIG5vIGxvbmdlciBoYXZlIGFueSBvZmZpY2lhbCBzdXBw
b3J0LCBhbmQgZG8gbm90IHJlY2VpdmUgc2VjdXJpdHkKdXBkYXRlcy4KClRo
ZSByZXN0LWNsaWVudCBnZW0gZGVwZW5kcyBvbiB0aGVzZSBvdGhlciBnZW1z
IGZvciB1c2FnZSBhdCBydW50aW1lOgoKKiBbbWltZS10eXBlc10oaHR0cDov
L3J1YnlnZW1zLm9yZy9nZW1zL21pbWUtdHlwZXMpCiogW25ldHJjXShodHRw
Oi8vcnVieWdlbXMub3JnL2dlbXMvbmV0cmMpCiogW2h0dHAtYWNjZXB0XSho
dHRwczovL3J1YnlnZW1zLm9yZy9nZW1zL2h0dHAtYWNjZXB0KQoqIFtodHRw
LWNvb2tpZV0oaHR0cHM6Ly9ydWJ5Z2Vtcy5vcmcvZ2Vtcy9odHRwLWNvb2tp
ZSkKClRoZXJlIGFyZSBhbHNvIHNldmVyYWwgZGV2ZWxvcG1lbnQgZGVwZW5k
ZW5jaWVzLiBJdCdzIHJlY29tbWVuZGVkIHRvIHVzZQpbYnVuZGxlcl0oaHR0
cDovL2J1bmRsZXIuaW8vKSB0byBtYW5hZ2UgdGhlc2UgZGVwZW5kZW5jaWVz
IGZvciBoYWNraW5nIG9uCnJlc3QtY2xpZW50LgoKIyMjIFVwZ3JhZGluZyB0
byByZXN0LWNsaWVudCAyLjAgZnJvbSAxLngKClVzZXJzIGFyZSBlbmNvdXJh
Z2VkIHRvIHVwZ3JhZGUgdG8gcmVzdC1jbGllbnQgMi4wLCB3aGljaCBjbGVh
bnMgdXAgYSBudW1iZXIgb2YKQVBJIHdhcnRzIGFuZCB3cmlua2xlcywgbWFr
aW5nIHJlc3QtY2xpZW50IGdlbmVyYWxseSBtb3JlIHVzZWZ1bC4gVXNhZ2Ug
aXMKbGFyZ2VseSBjb21wYXRpYmxlLCBzbyBtYW55IGFwcGxpY2F0aW9ucyB3
aWxsIGJlIGFibGUgdG8gdXBncmFkZSB3aXRoIG5vCmNoYW5nZXMuCgpPdmVy
dmlldyBvZiBzaWduaWZpY2FudCBjaGFuZ2VzOgoKKiByZXF1aXJlcyBSdWJ5
ID49IDIuMAoqIGBSZXN0Q2xpZW50OjpSZXNwb25zZWAgb2JqZWN0cyBhcmUg
YSBzdWJjbGFzcyBvZiBgU3RyaW5nYCByYXRoZXIgdGhhbiBhCiAgRnJhbmtl
bnN0ZWluIG1vbnN0ZXIuIEFuZCBgI2JvZHlgIG9yIGAjdG9fc2AgcmV0dXJu
IGEgdHJ1ZSBgU3RyaW5nYCBvYmplY3QuCiogY2xlYW51cCBvZiBleGNlcHRp
b24gY2xhc3NlcywgaW5jbHVkaW5nIG5ldyBgUmVzdENsaWVudDo6RXhjZXB0
aW9uczo6VGltZW91dGAKKiBpbXByb3ZlbWVudHMgdG8gaGFuZGxpbmcgb2Yg
cmVkaXJlY3RzOiByZXNwb25zZXMgYW5kIGhpc3RvcnkgYXJlIHByb3Blcmx5
CiAgZXhwb3NlZAoqIG1ham9yIGNoYW5nZXMgdG8gY29va2llIHN1cHBvcnQ6
IGNvb2tpZSBqYXJzIGFyZSB1c2VkIGZvciBicm93c2VyLWxpa2UKICBiZWhh
dmlvciB0aHJvdWdob3V0CiogZW5jb2Rpbmc6IENvbnRlbnQtVHlwZSBjaGFy
c2V0IHJlc3BvbnNlIGhlYWRlcnMgYXJlIHVzZWQgdG8gYXV0b21hdGljYWxs
eSBzZXQKICB0aGUgZW5jb2Rpbmcgb2YgdGhlIHJlc3BvbnNlIHN0cmluZwoq
IEhUVFAgcGFyYW1zOiBoYW5kbGluZyBvZiBHRVQvUE9TVCBwYXJhbXMgaXMg
bW9yZSBjb25zaXN0ZW50IGFuZCBzb3BoaXN0aWNhdGVkCiAgZm9yIGRlZXBs
eSBuZXN0ZWQgaGFzaCBvYmplY3RzLCBhbmQgYFBhcmFtc0FycmF5YCBjYW4g
YmUgdXNlZCB0byBwYXNzIG9yZGVyZWQKICBwYXJhbXMKKiBpbXByb3ZlZCBw
cm94eSBzdXBwb3J0IHdpdGggcGVyLXJlcXVlc3QgcHJveHkgY29uZmlndXJh
dGlvbiwgcGx1cyB0aGUgYWJpbGl0eQogIHRvIGRpc2FibGUgcHJveGllcyBz
ZXQgYnkgZW52aXJvbm1lbnQgdmFyaWFibGVzCiogZGVmYXVsdCByZXF1ZXN0
IGhlYWRlcnM6IHJlc3QtY2xpZW50IHNldHMgYEFjY2VwdDogKi8qYCBhbmQK
ICBgVXNlci1BZ2VudDogcmVzdC1jbGllbnQvLi4uYAoKU2VlIFtoaXN0b3J5
Lm1kXSguL2hpc3RvcnkubWQpIGZvciBhIG1vcmUgY29tcGxldGUgZGVzY3Jp
cHRpb24gb2YgY2hhbmdlcy4KCiMjIFVzYWdlOiBSYXcgVVJMCgpCYXNpYyB1
c2FnZToKCmBgYHJ1YnkKcmVxdWlyZSAncmVzdC1jbGllbnQnCgpSZXN0Q2xp
ZW50LmdldCh1cmwsIGhlYWRlcnM9e30pCgpSZXN0Q2xpZW50LnBvc3QodXJs
LCBwYXlsb2FkLCBoZWFkZXJzPXt9KQpgYGAKCkluIHRoZSBoaWdoIGxldmVs
IGhlbHBlcnMsIG9ubHkgUE9TVCwgUEFUQ0gsIGFuZCBQVVQgdGFrZSBhIHBh
eWxvYWQgYXJndW1lbnQuClRvIHBhc3MgYSBwYXlsb2FkIHdpdGggb3RoZXIg
SFRUUCB2ZXJicyBvciB0byBwYXNzIG1vcmUgYWR2YW5jZWQgb3B0aW9ucywg
dXNlCmBSZXN0Q2xpZW50OjpSZXF1ZXN0LmV4ZWN1dGVgIGluc3RlYWQuCgpN
b3JlIGRldGFpbGVkIGV4YW1wbGVzOgoKYGBgcnVieQpyZXF1aXJlICdyZXN0
LWNsaWVudCcKClJlc3RDbGllbnQuZ2V0ICdodHRwOi8vZXhhbXBsZS5jb20v
cmVzb3VyY2UnCgpSZXN0Q2xpZW50LmdldCAnaHR0cDovL2V4YW1wbGUuY29t
L3Jlc291cmNlJywge3BhcmFtczoge2lkOiA1MCwgJ2ZvbycgPT4gJ2Jhcid9
fQoKUmVzdENsaWVudC5nZXQgJ2h0dHBzOi8vdXNlcjpwYXNzd29yZEBleGFt
cGxlLmNvbS9wcml2YXRlL3Jlc291cmNlJywge2FjY2VwdDogOmpzb259CgpS
ZXN0Q2xpZW50LnBvc3QgJ2h0dHA6Ly9leGFtcGxlLmNvbS9yZXNvdXJjZScs
IHtwYXJhbTE6ICdvbmUnLCBuZXN0ZWQ6IHtwYXJhbTI6ICd0d28nfX0KClJl
c3RDbGllbnQucG9zdCAiaHR0cDovL2V4YW1wbGUuY29tL3Jlc291cmNlIiwg
eyd4JyA9PiAxfS50b19qc29uLCB7Y29udGVudF90eXBlOiA6anNvbiwgYWNj
ZXB0OiA6anNvbn0KClJlc3RDbGllbnQuZGVsZXRlICdodHRwOi8vZXhhbXBs
ZS5jb20vcmVzb3VyY2UnCgo+PiByZXNwb25zZSA9IFJlc3RDbGllbnQuZ2V0
ICdodHRwOi8vZXhhbXBsZS5jb20vcmVzb3VyY2UnCj0+IDxSZXN0Q2xpZW50
OjpSZXNwb25zZSAyMDAgIjwhZG9jdHlwZSBoLi4uIj4KPj4gcmVzcG9uc2Uu
Y29kZQo9PiAyMDAKPj4gcmVzcG9uc2UuY29va2llcwo9PiB7IkZvbyI9PiJC
QVIiLCAiUVVVWCI9PiJRVVVVVVgifQo+PiByZXNwb25zZS5oZWFkZXJzCj0+
IHs6Y29udGVudF90eXBlPT4idGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04Iiwg
OmNhY2hlX2NvbnRyb2w9PiJwcml2YXRlIiAuLi4gfQo+PiByZXNwb25zZS5i
b2R5Cj0+ICI8IWRvY3R5cGUgaHRtbD5cbjxodG1sPlxuPGhlYWQ+XG4gICAg
PHRpdGxlPkV4YW1wbGUgRG9tYWluPC90aXRsZT5cblxuIC4uLiIKClJlc3RD
bGllbnQucG9zdCggdXJsLAogIHsKICAgIDp0cmFuc2ZlciA9PiB7CiAgICAg
IDpwYXRoID0+ICcvZm9vL2JhcicsCiAgICAgIDpvd25lciA9PiAndGhhdF9n
dXknLAogICAgICA6Z3JvdXAgPT4gJ3Rob3NlX2d1eXMnCiAgICB9LAogICAg
IDp1cGxvYWQgPT4gewogICAgICA6ZmlsZSA9PiBGaWxlLm5ldyhwYXRoLCAn
cmInKQogICAgfQogIH0pCmBgYAojIyBQYXNzaW5nIGFkdmFuY2VkIG9wdGlv
bnMKClRoZSB0b3AgbGV2ZWwgaGVscGVyIG1ldGhvZHMgbGlrZSBSZXN0Q2xp
ZW50LmdldCBhY2NlcHQgYSBoZWFkZXJzIGhhc2ggYXMKdGhlaXIgbGFzdCBh
cmd1bWVudCBhbmQgZG9uJ3QgYWxsb3cgcGFzc2luZyBtb3JlIGNvbXBsZXgg
b3B0aW9ucy4gQnV0IHRoZXNlCmhlbHBlcnMgYXJlIGp1c3QgdGhpbiB3cmFw
cGVycyBhcm91bmQgYFJlc3RDbGllbnQ6OlJlcXVlc3QuZXhlY3V0ZWAuCgpg
YGBydWJ5ClJlc3RDbGllbnQ6OlJlcXVlc3QuZXhlY3V0ZShtZXRob2Q6IDpn
ZXQsIHVybDogJ2h0dHA6Ly9leGFtcGxlLmNvbS9yZXNvdXJjZScsCiAgICAg
ICAgICAgICAgICAgICAgICAgICAgICB0aW1lb3V0OiAxMCkKClJlc3RDbGll
bnQ6OlJlcXVlc3QuZXhlY3V0ZShtZXRob2Q6IDpnZXQsIHVybDogJ2h0dHA6
Ly9leGFtcGxlLmNvbS9yZXNvdXJjZScsCiAgICAgICAgICAgICAgICAgICAg
ICAgICAgICBzc2xfY2FfZmlsZTogJ215Y2EucGVtJywKICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIHNzbF9jaXBoZXJzOiAnQUVTR0NNOiFhTlVMTCcp
CmBgYApZb3UgY2FuIGFsc28gdXNlIHRoaXMgdG8gcGFzcyBhIHBheWxvYWQg
Zm9yIEhUVFAgdmVyYnMgbGlrZSBERUxFVEUsIHdoZXJlIHRoZQpgUmVzdENs
aWVudC5kZWxldGVgIGhlbHBlciBkb2Vzbid0IGFjY2VwdCBhIHBheWxvYWQu
CgpgYGBydWJ5ClJlc3RDbGllbnQ6OlJlcXVlc3QuZXhlY3V0ZShtZXRob2Q6
IDpkZWxldGUsIHVybDogJ2h0dHA6Ly9leGFtcGxlLmNvbS9yZXNvdXJjZScs
CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXlsb2FkOiAnZm9vJywg
aGVhZGVyczoge215aGVhZGVyOiAnYmFyJ30pCmBgYAoKRHVlIHRvIHVuZm9y
dHVuYXRlIGNob2ljZXMgaW4gdGhlIG9yaWdpbmFsIEFQSSwgdGhlIHBhcmFt
cyB1c2VkIHRvIHBvcHVsYXRlIHRoZQpxdWVyeSBzdHJpbmcgYXJlIGFjdHVh
bGx5IHRha2VuIG91dCBvZiB0aGUgaGVhZGVycyBoYXNoLiBTbyBpZiB5b3Ug
d2FudCB0byBwYXNzCmJvdGggdGhlIHBhcmFtcyBoYXNoIGFuZCBtb3JlIGNv
bXBsZXggb3B0aW9ucywgdXNlIHRoZSBzcGVjaWFsIGtleQpgOnBhcmFtc2Ag
aW4gdGhlIGhlYWRlcnMgaGFzaC4gVGhpcyBkZXNpZ24gbWF5IGNoYW5nZSBp
biBhIGZ1dHVyZSBtYWpvcgpyZWxlYXNlLgoKYGBgcnVieQpSZXN0Q2xpZW50
OjpSZXF1ZXN0LmV4ZWN1dGUobWV0aG9kOiA6Z2V0LCB1cmw6ICdodHRwOi8v
ZXhhbXBsZS5jb20vcmVzb3VyY2UnLAogICAgICAgICAgICAgICAgICAgICAg
ICAgICAgdGltZW91dDogMTAsIGhlYWRlcnM6IHtwYXJhbXM6IHtmb286ICdi
YXInfX0pCgrinpQgR0VUIGh0dHA6Ly9leGFtcGxlLmNvbS9yZXNvdXJjZT9m
b289YmFyCmBgYAoKIyMgTXVsdGlwYXJ0CgpZZWFoLCB0aGF0J3MgcmlnaHQh
ICBUaGlzIGRvZXMgbXVsdGlwYXJ0IHNlbmRzIGZvciB5b3UhCgpgYGBydWJ5
ClJlc3RDbGllbnQucG9zdCAnL2RhdGEnLCA6bXlmaWxlID0+IEZpbGUubmV3
KCIvcGF0aC90by9pbWFnZS5qcGciLCAncmInKQpgYGAKClRoaXMgZG9lcyB0
d28gdGhpbmdzIGZvciB5b3U6CgotIEF1dG8tZGV0ZWN0cyB0aGF0IHlvdSBo
YXZlIGEgRmlsZSB2YWx1ZSBzZW5kcyBpdCBhcyBtdWx0aXBhcnQKLSBBdXRv
LWRldGVjdHMgdGhlIG1pbWUgb2YgdGhlIGZpbGUgYW5kIHNldHMgaXQgaW4g
dGhlIEhFQUQgb2YgdGhlIHBheWxvYWQgZm9yIGVhY2ggZW50cnkKCklmIHlv
dSBhcmUgc2VuZGluZyBwYXJhbXMgdGhhdCBkbyBub3QgY29udGFpbiBhIEZp
bGUgb2JqZWN0IGJ1dCB0aGUgcGF5bG9hZCBuZWVkcyB0byBiZSBtdWx0aXBh
cnQgdGhlbjoKCmBgYHJ1YnkKUmVzdENsaWVudC5wb3N0ICcvZGF0YScsIHs6
Zm9vID0+ICdiYXInLCA6bXVsdGlwYXJ0ID0+IHRydWV9CmBgYAoKIyMgVXNh
Z2U6IEFjdGl2ZVJlc291cmNlLVN0eWxlCgpgYGBydWJ5CnJlc291cmNlID0g
UmVzdENsaWVudDo6UmVzb3VyY2UubmV3ICdodHRwOi8vZXhhbXBsZS5jb20v
cmVzb3VyY2UnCnJlc291cmNlLmdldAoKcHJpdmF0ZV9yZXNvdXJjZSA9IFJl
c3RDbGllbnQ6OlJlc291cmNlLm5ldyAnaHR0cHM6Ly9leGFtcGxlLmNvbS9w
cml2YXRlL3Jlc291cmNlJywgJ3VzZXInLCAncGFzcycKcHJpdmF0ZV9yZXNv
dXJjZS5wdXQgRmlsZS5yZWFkKCdwaWMuanBnJyksIDpjb250ZW50X3R5cGUg
PT4gJ2ltYWdlL2pwZycKYGBgCgpTZWUgUmVzdENsaWVudDo6UmVzb3VyY2Ug
bW9kdWxlIGRvY3MgZm9yIGRldGFpbHMuCgojIyBVc2FnZTogUmVzb3VyY2Ug
TmVzdGluZwoKYGBgcnVieQpzaXRlID0gUmVzdENsaWVudDo6UmVzb3VyY2Uu
bmV3KCdodHRwOi8vZXhhbXBsZS5jb20nKQpzaXRlWydwb3N0cy8xL2NvbW1l
bnRzJ10ucG9zdCAnR29vZCBhcnRpY2xlLicsIDpjb250ZW50X3R5cGUgPT4g
J3RleHQvcGxhaW4nCmBgYApTZWUgYFJlc3RDbGllbnQ6OlJlc291cmNlYCBk
b2NzIGZvciBkZXRhaWxzLgoKIyMgRXhjZXB0aW9ucyAoc2VlIGh0dHA6Ly93
d3cudzMub3JnL1Byb3RvY29scy9yZmMyNjE2L3JmYzI2MTYtc2VjMTAuaHRt
bCkKCi0gZm9yIHJlc3VsdCBjb2RlcyBiZXR3ZWVuIGAyMDBgIGFuZCBgMjA3
YCwgYSBgUmVzdENsaWVudDo6UmVzcG9uc2VgIHdpbGwgYmUgcmV0dXJuZWQK
LSBmb3IgcmVzdWx0IGNvZGVzIGAzMDFgLCBgMzAyYCBvciBgMzA3YCwgdGhl
IHJlZGlyZWN0aW9uIHdpbGwgYmUgZm9sbG93ZWQgaWYgdGhlIHJlcXVlc3Qg
aXMgYSBgR0VUYCBvciBhIGBIRUFEYAotIGZvciByZXN1bHQgY29kZSBgMzAz
YCwgdGhlIHJlZGlyZWN0aW9uIHdpbGwgYmUgZm9sbG93ZWQgYW5kIHRoZSBy
ZXF1ZXN0IHRyYW5zZm9ybWVkIGludG8gYSBgR0VUYAotIGZvciBvdGhlciBj
YXNlcywgYSBgUmVzdENsaWVudDo6RXhjZXB0aW9uV2l0aFJlc3BvbnNlYCBo
b2xkaW5nIHRoZSBSZXNwb25zZSB3aWxsIGJlIHJhaXNlZDsgYSBzcGVjaWZp
YyBleGNlcHRpb24gY2xhc3Mgd2lsbCBiZSB0aHJvd24gZm9yIGtub3duIGVy
cm9yIGNvZGVzCi0gY2FsbCBgLnJlc3BvbnNlYCBvbiB0aGUgZXhjZXB0aW9u
IHRvIGdldCB0aGUgc2VydmVyJ3MgcmVzcG9uc2UKCmBgYHJ1YnkKPj4gUmVz
dENsaWVudC5nZXQgJ2h0dHA6Ly9leGFtcGxlLmNvbS9ub25leGlzdGVudCcK
RXhjZXB0aW9uOiBSZXN0Q2xpZW50OjpOb3RGb3VuZDogNDA0IE5vdCBGb3Vu
ZAoKPj4gYmVnaW4KICAgICBSZXN0Q2xpZW50LmdldCAnaHR0cDovL2V4YW1w
bGUuY29tL25vbmV4aXN0ZW50JwogICByZXNjdWUgUmVzdENsaWVudDo6RXhj
ZXB0aW9uV2l0aFJlc3BvbnNlID0+IGUKICAgICBlLnJlc3BvbnNlCiAgIGVu
ZAo9PiA8UmVzdENsaWVudDo6UmVzcG9uc2UgNDA0ICI8IWRvY3R5cGUgaC4u
LiI+CmBgYAoKIyMjIE90aGVyIGV4Y2VwdGlvbnMKCldoaWxlIG1vc3QgZXhj
ZXB0aW9ucyBoYXZlIGJlZW4gY29sbGVjdGVkIHVuZGVyIGBSZXN0Q2xpZW50
OjpSZXF1ZXN0RmFpbGVkYCBha2EKYFJlc3RDbGllbnQ6OkV4Y2VwdGlvbldp
dGhSZXNwb25zZWAsIHRoZXJlIGFyZSBhIGZldyBxdWlya3kgZXhjZXB0aW9u
cyB0aGF0CmhhdmUgYmVlbiBrZXB0IGZvciBiYWNrd2FyZHMgY29tcGF0aWJp
bGl0eS4KClJlc3RDbGllbnQgd2lsbCBwcm9wYWdhdGUgdXAgZXhjZXB0aW9u
cyBsaWtlIHNvY2tldCBlcnJvcnMgd2l0aG91dCBtb2RpZmljYXRpb246Cgpg
YGBydWJ5Cj4+IFJlc3RDbGllbnQuZ2V0ICdodHRwOi8vbG9jYWxob3N0OjEy
MzQ1JwpFeGNlcHRpb246IEVycm5vOjpFQ09OTlJFRlVTRUQ6IENvbm5lY3Rp
b24gcmVmdXNlZCAtIGNvbm5lY3QoMikgZm9yICJsb2NhbGhvc3QiIHBvcnQg
MTIzNDUKYGBgCgpSZXN0Q2xpZW50IGhhbmRsZXMgYSBmZXcgc3BlY2lmaWMg
ZXJyb3IgY2FzZXMgc2VwYXJhdGVseSBpbiBvcmRlciB0byBnaXZlCmJldHRl
ciBlcnJvciBtZXNzYWdlcy4gVGhlc2Ugd2lsbCBob3BlZnVsbHkgYmUgY2xl
YW5lZCB1cCBpbiBhIGZ1dHVyZSBtYWpvcgpyZWxlYXNlLgoKYFJlc3RDbGll
bnQ6OlNlcnZlckJyb2tlQ29ubmVjdGlvbmAgaXMgdHJhbnNsYXRlZCBmcm9t
IGBFT0ZFcnJvcmAgdG8gZ2l2ZSBhCmJldHRlciBlcnJvciBtZXNzYWdlLgoK
YFJlc3RDbGllbnQ6OlNTTENlcnRpZmljYXRlTm90VmVyaWZpZWRgIGlzIHJh
aXNlZCB3aGVuIEhUVFBTIHZhbGlkYXRpb24gZmFpbHMuCk90aGVyIGBPcGVu
U1NMOjpTU0w6OlNTTEVycm9yYCBlcnJvcnMgYXJlIHJhaXNlZCBhcyBpcy4K
CiMjIyBSZWRpcmVjdGlvbgoKQnkgZGVmYXVsdCwgcmVzdC1jbGllbnQgd2ls
bCBmb2xsb3cgSFRUUCAzMHggcmVkaXJlY3Rpb24gcmVxdWVzdHMuCgpfX05l
dyBpbiAyLjA6X18gYFJlc3RDbGllbnQ6OlJlc3BvbnNlYCBleHBvc2VzIGEg
YCNoaXN0b3J5YCBtZXRob2QgdGhhdCByZXR1cm5zCmEgbGlzdCBvZiBlYWNo
IHJlc3BvbnNlIHJlY2VpdmVkIGluIGEgcmVkaXJlY3Rpb24gY2hhaW4uCgpg
YGBydWJ5Cj4+IHIgPSBSZXN0Q2xpZW50LmdldCgnaHR0cDovL2h0dHBiaW4u
b3JnL3JlZGlyZWN0LzInKQo9PiA8UmVzdENsaWVudDo6UmVzcG9uc2UgMjAw
ICJ7XG4gIFwiYXJnc1wiOi4uLiI+CgojIHNlZSBlYWNoIHJlc3BvbnNlIGlu
IHRoZSByZWRpcmVjdCBjaGFpbgo+PiByLmhpc3RvcnkKPT4gWzxSZXN0Q2xp
ZW50OjpSZXNwb25zZSAzMDIgIjwhRE9DVFlQRSBILi4uIj4sIDxSZXN0Q2xp
ZW50OjpSZXNwb25zZSAzMDIgIiI+XQoKIyBzZWUgZWFjaCByZXF1ZXN0ZWQg
VVJMCj4+IHIucmVxdWVzdC51cmwKPT4gImh0dHA6Ly9odHRwYmluLm9yZy9n
ZXQiCj4+IHIuaGlzdG9yeS5tYXAge3x4fCB4LnJlcXVlc3QudXJsfQo9PiBb
Imh0dHA6Ly9odHRwYmluLm9yZy9yZWRpcmVjdC8yIiwgImh0dHA6Ly9odHRw
YmluLm9yZy9yZWxhdGl2ZS1yZWRpcmVjdC8xIl0KYGBgCgojIyMjIE1hbnVh
bGx5IGZvbGxvd2luZyByZWRpcmVjdGlvbgoKVG8gZGlzYWJsZSBhdXRvbWF0
aWMgcmVkaXJlY3Rpb24sIHNldCBgOm1heF9yZWRpcmVjdHMgPT4gMGAuCgpf
X05ldyBpbiAyLjA6X18gUHJpb3IgdmVyc2lvbnMgb2YgcmVzdC1jbGllbnQg
d291bGQgcmFpc2UKYFJlc3RDbGllbnQ6Ok1heFJlZGlyZWN0c1JlYWNoZWRg
LCB3aXRoIG5vIGVhc3kgd2F5IHRvIGFjY2VzcyB0aGUgc2VydmVyJ3MKcmVz
cG9uc2UuIEluIDIuMCwgcmVzdC1jbGllbnQgcmFpc2VzIHRoZSBub3JtYWwK
YFJlc3RDbGllbnQ6OkV4Y2VwdGlvbldpdGhSZXNwb25zZWAgYXMgaXQgd291
bGQgd2l0aCBhbnkgb3RoZXIgbm9uLUhUVFAtMjB4CnJlc3BvbnNlLgoKYGBg
cnVieQo+PiBSZXN0Q2xpZW50OjpSZXF1ZXN0LmV4ZWN1dGUobWV0aG9kOiA6
Z2V0LCB1cmw6ICdodHRwOi8vaHR0cGJpbi5vcmcvcmVkaXJlY3QvMScpCj0+
IFJlc3RDbGllbnQ6OlJlc3BvbnNlIDIwMCAie1xuICAiYXJncyI6Li4uIgoK
Pj4gUmVzdENsaWVudDo6UmVxdWVzdC5leGVjdXRlKG1ldGhvZDogOmdldCwg
dXJsOiAnaHR0cDovL2h0dHBiaW4ub3JnL3JlZGlyZWN0LzEnLCBtYXhfcmVk
aXJlY3RzOiAwKQpSZXN0Q2xpZW50OjpGb3VuZDogMzAyIEZvdW5kCmBgYAoK
VG8gbWFudWFsbHkgZm9sbG93IHJlZGlyZWN0aW9uLCB5b3UgY2FuIGNhbGwg
YFJlc3BvbnNlI2ZvbGxvd19yZWRpcmVjdGlvbmAuIE9yCnlvdSBjb3VsZCBv
ZiBjb3Vyc2UgaW5zcGVjdCB0aGUgcmVzdWx0IGFuZCBjaG9vc2UgY3VzdG9t
IGJlaGF2aW9yLgoKYGBgcnVieQo+PiBSZXN0Q2xpZW50OjpSZXF1ZXN0LmV4
ZWN1dGUobWV0aG9kOiA6Z2V0LCB1cmw6ICdodHRwOi8vaHR0cGJpbi5vcmcv
cmVkaXJlY3QvMScsIG1heF9yZWRpcmVjdHM6IDApClJlc3RDbGllbnQ6OkZv
dW5kOiAzMDIgRm91bmQKPj4gYmVnaW4KICAgICAgIFJlc3RDbGllbnQ6OlJl
cXVlc3QuZXhlY3V0ZShtZXRob2Q6IDpnZXQsIHVybDogJ2h0dHA6Ly9odHRw
YmluLm9yZy9yZWRpcmVjdC8xJywgbWF4X3JlZGlyZWN0czogMCkKICAgcmVz
Y3VlIFJlc3RDbGllbnQ6OkV4Y2VwdGlvbldpdGhSZXNwb25zZSA9PiBlcnIK
ICAgZW5kCj4+IGVycgo9PiAjPFJlc3RDbGllbnQ6OkZvdW5kOiAzMDIgRm91
bmQ+Cj4+IGVyci5yZXNwb25zZQo9PiBSZXN0Q2xpZW50OjpSZXNwb25zZSAz
MDIgIjwhRE9DVFlQRSBILi4uIgo+PiBlcnIucmVzcG9uc2UuaGVhZGVyc1s6
bG9jYXRpb25dCj0+ICIvZ2V0Igo+PiBlcnIucmVzcG9uc2UuZm9sbG93X3Jl
ZGlyZWN0aW9uCj0+IFJlc3RDbGllbnQ6OlJlc3BvbnNlIDIwMCAie1xuICAi
YXJncyI6Li4uIgpgYGAKCiMjIFJlc3VsdCBoYW5kbGluZwoKVGhlIHJlc3Vs
dCBvZiBhIGBSZXN0Q2xpZW50OjpSZXF1ZXN0YCBpcyBhIGBSZXN0Q2xpZW50
OjpSZXNwb25zZWAgb2JqZWN0LgoKX19OZXcgaW4gMi4wOl9fIGBSZXN0Q2xp
ZW50OjpSZXNwb25zZWAgb2JqZWN0cyBhcmUgbm93IGEgc3ViY2xhc3Mgb2Yg
YFN0cmluZ2AuClByZXZpb3VzbHksIHRoZXkgd2VyZSBhIHJlYWwgU3RyaW5n
IG9iamVjdCB3aXRoIHJlc3BvbnNlIGZ1bmN0aW9uYWxpdHkgbWl4ZWQKaW4s
IHdoaWNoIHdhcyB2ZXJ5IGNvbmZ1c2luZyB0byB3b3JrIHdpdGguCgpSZXNw
b25zZSBvYmplY3RzIGhhdmUgc2V2ZXJhbCB1c2VmdWwgbWV0aG9kcy4gKFNl
ZSB0aGUgY2xhc3MgcmRvYyBmb3IgbW9yZSBkZXRhaWxzLikKCi0gYFJlc3Bv
bnNlI2NvZGVgOiBUaGUgSFRUUCByZXNwb25zZSBjb2RlCi0gYFJlc3BvbnNl
I2JvZHlgOiBUaGUgcmVzcG9uc2UgYm9keSBhcyBhIHN0cmluZy4gKEFLQSAu
dG9fcykKLSBgUmVzcG9uc2UjaGVhZGVyc2A6IEEgaGFzaCBvZiBIVFRQIHJl
c3BvbnNlIGhlYWRlcnMKLSBgUmVzcG9uc2UjcmF3X2hlYWRlcnNgOiBBIGhh
c2ggb2YgSFRUUCByZXNwb25zZSBoZWFkZXJzIGFzIHVucHJvY2Vzc2VkIGFy
cmF5cwotIGBSZXNwb25zZSNjb29raWVzYDogQSBoYXNoIG9mIEhUVFAgY29v
a2llcyBzZXQgYnkgdGhlIHNlcnZlcgotIGBSZXNwb25zZSNjb29raWVfamFy
YDogPGVtPk5ldyBpbiAxLjg8L2VtPiBBbiBIVFRQOjpDb29raWVKYXIgb2Yg
Y29va2llcwotIGBSZXNwb25zZSNyZXF1ZXN0YDogVGhlIFJlc3RDbGllbnQ6
OlJlcXVlc3Qgb2JqZWN0IHVzZWQgdG8gbWFrZSB0aGUgcmVxdWVzdAotIGBS
ZXNwb25zZSNoaXN0b3J5YDogPGVtPk5ldyBpbiAyLjA8L2VtPiBJZiByZWRp
cmVjdGlvbiB3YXMgZm9sbG93ZWQsIGEgbGlzdCBvZiBwcmlvciBSZXNwb25z
ZSBvYmplY3RzCgpgYGBydWJ5ClJlc3RDbGllbnQuZ2V0KCdodHRwOi8vZXhh
bXBsZS5jb20nKQrinpQgPFJlc3RDbGllbnQ6OlJlc3BvbnNlIDIwMCAiPCFk
b2N0eXBlIGguLi4iPgoKYmVnaW4KIFJlc3RDbGllbnQuZ2V0KCdodHRwOi8v
ZXhhbXBsZS5jb20vbm90Zm91bmQnKQpyZXNjdWUgUmVzdENsaWVudDo6RXhj
ZXB0aW9uV2l0aFJlc3BvbnNlID0+IGVycgogIGVyci5yZXNwb25zZQplbmQK
4p6UIDxSZXN0Q2xpZW50OjpSZXNwb25zZSA0MDQgIjwhZG9jdHlwZSBoLi4u
Ij4KYGBgCgojIyMgUmVzcG9uc2UgY2FsbGJhY2tzLCBlcnJvciBoYW5kbGlu
ZwoKQSBibG9jayBjYW4gYmUgcGFzc2VkIHRvIHRoZSBSZXN0Q2xpZW50IG1l
dGhvZC4gVGhpcyBibG9jayB3aWxsIHRoZW4gYmUgY2FsbGVkIHdpdGggdGhl
IFJlc3BvbnNlLgpSZXNwb25zZS5yZXR1cm4hIGNhbiBiZSBjYWxsZWQgdG8g
aW52b2tlIHRoZSBkZWZhdWx0IHJlc3BvbnNlJ3MgYmVoYXZpb3IuCgpgYGBy
dWJ5CiMgRG9uJ3QgcmFpc2UgZXhjZXB0aW9ucyBidXQgcmV0dXJuIHRoZSBy
ZXNwb25zZQo+PiBSZXN0Q2xpZW50LmdldCgnaHR0cDovL2V4YW1wbGUuY29t
L25vbmV4aXN0ZW50Jykge3xyZXNwb25zZSwgcmVxdWVzdCwgcmVzdWx0fCBy
ZXNwb25zZSB9Cj0+IDxSZXN0Q2xpZW50OjpSZXNwb25zZSA0MDQgIjwhZG9j
dHlwZSBoLi4uIj4KYGBgCgpgYGBydWJ5CiMgTWFuYWdlIGEgc3BlY2lmaWMg
ZXJyb3IgY29kZQpSZXN0Q2xpZW50LmdldCgnaHR0cDovL2V4YW1wbGUuY29t
L3Jlc291cmNlJykgeyB8cmVzcG9uc2UsIHJlcXVlc3QsIHJlc3VsdCwgJmJs
b2NrfAogIGNhc2UgcmVzcG9uc2UuY29kZQogIHdoZW4gMjAwCiAgICBwICJJ
dCB3b3JrZWQgISIKICAgIHJlc3BvbnNlCiAgd2hlbiA0MjMKICAgIHJhaXNl
IFNvbWVDdXN0b21FeGNlcHRpb25JZllvdVdhbnQKICBlbHNlCiAgICByZXNw
b25zZS5yZXR1cm4hKCZibG9jaykKICBlbmQKfQpgYGAKCkJ1dCBub3RlIHRo
YXQgaXQgbWF5IGJlIG1vcmUgc3RyYWlnaHRmb3J3YXJkIHRvIHVzZSBleGNl
cHRpb25zIHRvIGhhbmRsZQpkaWZmZXJlbnQgSFRUUCBlcnJvciByZXNwb25z
ZSBjYXNlczoKCmBgYHJ1YnkKYmVnaW4KICByZXNwID0gUmVzdENsaWVudC5n
ZXQoJ2h0dHA6Ly9leGFtcGxlLmNvbS9yZXNvdXJjZScpCnJlc2N1ZSBSZXN0
Q2xpZW50OjpVbmF1dGhvcml6ZWQsIFJlc3RDbGllbnQ6OkZvcmJpZGRlbiA9
PiBlcnIKICBwdXRzICdBY2Nlc3MgZGVuaWVkJwogIHJldHVybiBlcnIucmVz
cG9uc2UKcmVzY3VlIFJlc3RDbGllbnQ6OkltQVRlYXBvdCA9PiBlcnIKICBw
dXRzICdUaGUgc2VydmVyIGlzIGEgdGVhcG90ISAjIFJGQyAyMzI0JwogIHJl
dHVybiBlcnIucmVzcG9uc2UKZWxzZQogIHB1dHMgJ0l0IHdvcmtlZCEnCiAg
cmV0dXJuIHJlc3AKZW5kCmBgYAoKRm9yIEdFVCBhbmQgSEVBRCByZXF1ZXN0
cywgcmVzdC1jbGllbnQgYXV0b21hdGljYWxseSBmb2xsb3dzIHJlZGlyZWN0
aW9uLiBGb3IKb3RoZXIgSFRUUCB2ZXJicywgY2FsbCBgLmZvbGxvd19yZWRp
cmVjdGlvbmAgb24gdGhlIHJlc3BvbnNlIG9iamVjdCAod29ya3MgYm90aApp
biBibG9jayBmb3JtIGFuZCBpbiBleGNlcHRpb24gZm9ybSkuCgpgYGBydWJ5
CiMgRm9sbG93IHJlZGlyZWN0aW9ucyBmb3IgYWxsIHJlcXVlc3QgdHlwZXMg
YW5kIG5vdCBvbmx5IGZvciBnZXQgYW5kIGhlYWQKIyBSRkMgOiAiSWYgdGhl
IDMwMSwgMzAyIG9yIDMwNyBzdGF0dXMgY29kZSBpcyByZWNlaXZlZCBpbiBy
ZXNwb25zZSB0byBhIHJlcXVlc3Qgb3RoZXIgdGhhbiBHRVQgb3IgSEVBRCwK
IyAgICAgICAgdGhlIHVzZXIgYWdlbnQgTVVTVCBOT1QgYXV0b21hdGljYWxs
eSByZWRpcmVjdCB0aGUgcmVxdWVzdCB1bmxlc3MgaXQgY2FuIGJlIGNvbmZp
cm1lZCBieSB0aGUgdXNlciwKIyAgICAgICAgc2luY2UgdGhpcyBtaWdodCBj
aGFuZ2UgdGhlIGNvbmRpdGlvbnMgdW5kZXIgd2hpY2ggdGhlIHJlcXVlc3Qg
d2FzIGlzc3VlZC4iCgojIGJsb2NrIHN0eWxlClJlc3RDbGllbnQucG9zdCgn
aHR0cDovL2V4YW1wbGUuY29tL3JlZGlyZWN0JywgJ2JvZHknKSB7IHxyZXNw
b25zZSwgcmVxdWVzdCwgcmVzdWx0fAogIGNhc2UgcmVzcG9uc2UuY29kZQog
IHdoZW4gMzAxLCAzMDIsIDMwNwogICAgcmVzcG9uc2UuZm9sbG93X3JlZGly
ZWN0aW9uCiAgZWxzZQogICAgcmVzcG9uc2UucmV0dXJuIQogIGVuZAp9Cgoj
IGV4Y2VwdGlvbiBzdHlsZSBieSBleHBsaWNpdCBjbGFzc2VzCmJlZ2luCiAg
UmVzdENsaWVudC5wb3N0KCdodHRwOi8vZXhhbXBsZS5jb20vcmVkaXJlY3Qn
LCAnYm9keScpCnJlc2N1ZSBSZXN0Q2xpZW50OjpNb3ZlZFBlcm1hbmVudGx5
LAogICAgICAgUmVzdENsaWVudDo6Rm91bmQsCiAgICAgICBSZXN0Q2xpZW50
OjpUZW1wb3JhcnlSZWRpcmVjdCA9PiBlcnIKICBlcnIucmVzcG9uc2UuZm9s
bG93X3JlZGlyZWN0aW9uCmVuZAoKIyBleGNlcHRpb24gc3R5bGUgYnkgcmVz
cG9uc2UgY29kZQpiZWdpbgogIFJlc3RDbGllbnQucG9zdCgnaHR0cDovL2V4
YW1wbGUuY29tL3JlZGlyZWN0JywgJ2JvZHknKQpyZXNjdWUgUmVzdENsaWVu
dDo6RXhjZXB0aW9uV2l0aFJlc3BvbnNlID0+IGVycgogIGNhc2UgZXJyLmh0
dHBfY29kZQogIHdoZW4gMzAxLCAzMDIsIDMwNwogICAgZXJyLnJlc3BvbnNl
LmZvbGxvd19yZWRpcmVjdGlvbgogIGVsc2UKICAgIHJhaXNlCiAgZW5kCmVu
ZApgYGAKCiMjIE5vbi1ub3JtYWxpemVkIFVSSXMKCklmIHlvdSBuZWVkIHRv
IG5vcm1hbGl6ZSBVUklzLCBlLmcuIHRvIHdvcmsgd2l0aCBJbnRlcm5hdGlv
bmFsIFJlc291cmNlIElkZW50aWZpZXJzIChJUklzKSwKdXNlIHRoZSBBZGRy
ZXNzYWJsZSBnZW0gKGh0dHBzOi8vZ2l0aHViLmNvbS9zcG9ya21vbmdlci9h
ZGRyZXNzYWJsZS8pIGluIHlvdXIgY29kZToKCmBgYHJ1YnkKICByZXF1aXJl
ICdhZGRyZXNzYWJsZS91cmknCiAgUmVzdENsaWVudC5nZXQoQWRkcmVzc2Fi
bGU6OlVSSS5wYXJzZSgiaHR0cDovL3d3dy7oqbnlp4bmlq8uY29tLyIpLm5v
cm1hbGl6ZS50b19zdHIpCmBgYAoKIyMgTG93ZXItbGV2ZWwgYWNjZXNzCgpG
b3IgY2FzZXMgbm90IGNvdmVyZWQgYnkgdGhlIGdlbmVyYWwgQVBJLCB5b3Ug
Y2FuIHVzZSB0aGUgYFJlc3RDbGllbnQ6OlJlcXVlc3RgIGNsYXNzLCB3aGlj
aCBwcm92aWRlcyBhIGxvd2VyLWxldmVsIEFQSS4KCllvdSBjYW46CgotIHNw
ZWNpZnkgc3NsIHBhcmFtZXRlcnMKLSBvdmVycmlkZSBjb29raWVzCi0gbWFu
dWFsbHkgaGFuZGxlIHRoZSByZXNwb25zZSAoZS5nLiB0byBvcGVyYXRlIG9u
IGl0IGFzIGEgc3RyZWFtIHJhdGhlciB0aGFuIHJlYWRpbmcgaXQgYWxsIGlu
dG8gbWVtb3J5KQoKU2VlIGBSZXN0Q2xpZW50OjpSZXF1ZXN0YCdzIGRvY3Vt
ZW50YXRpb24gZm9yIG1vcmUgaW5mb3JtYXRpb24uCgojIyMgU3RyZWFtaW5n
IHJlcXVlc3QgcGF5bG9hZAoKUmVzdENsaWVudCB3aWxsIHRyeSB0byBzdHJl
YW0gYW55IGZpbGUtbGlrZSBwYXlsb2FkIHJhdGhlciB0aGFuIHJlYWRpbmcg
aXQgaW50bwptZW1vcnkuIFRoaXMgaGFwcGVucyB0aHJvdWdoIGBSZXN0Q2xp
ZW50OjpQYXlsb2FkOjpTdHJlYW1lZGAsIHdoaWNoIGlzCmF1dG9tYXRpY2Fs
bHkgY2FsbGVkIGludGVybmFsbHkgYnkgYFJlc3RDbGllbnQ6OlBheWxvYWQu
Z2VuZXJhdGVgIG9uIGFueXRoaW5nCndpdGggYSBgcmVhZGAgbWV0aG9kLgoK
YGBgcnVieQo+PiByID0gUmVzdENsaWVudC5wdXQoJ2h0dHA6Ly9odHRwYmlu
Lm9yZy9wdXQnLCBGaWxlLm9wZW4oJy90bXAvZm9vLnR4dCcsICdyJyksCiAg
ICAgICAgICAgICAgICAgICAgICBjb250ZW50X3R5cGU6ICd0ZXh0L3BsYWlu
JykKPT4gPFJlc3RDbGllbnQ6OlJlc3BvbnNlIDIwMCAie1xuICBcImFyZ3Nc
IjouLi4iPgpgYGAKCkluIE11bHRpcGFydCByZXF1ZXN0cywgUmVzdENsaWVu
dCB3aWxsIGFsc28gc3RyZWFtIGZpbGUgaGFuZGxlcyBwYXNzZWQgYXMgSGFz
aAoob3IgX19uZXcgaW4gMi4xX18gUGFyYW1zQXJyYXkpLgoKYGBgcnVieQo+
PiByID0gUmVzdENsaWVudC5wdXQoJ2h0dHA6Ly9odHRwYmluLm9yZy9wdXQn
LAogICAgICAgICAgICAgICAgICAgICAge2ZpbGVfYTogRmlsZS5vcGVuKCdh
LnR4dCcsICdyJyksCiAgICAgICAgICAgICAgICAgICAgICAgZmlsZV9iOiBG
aWxlLm9wZW4oJ2IudHh0JywgJ3InKX0pCj0+IDxSZXN0Q2xpZW50OjpSZXNw
b25zZSAyMDAgIntcbiAgXCJhcmdzXCI6Li4uIj4KCiMgcmVjZWl2ZWQgYnkg
c2VydmVyIGFzIHR3byBmaWxlIHVwbG9hZHMgd2l0aCBtdWx0aXBhcnQvZm9y
bS1kYXRhCj4+IEpTT04ucGFyc2UocilbJ2ZpbGVzJ10ua2V5cwo9PiBbJ2Zp
bGVfYScsICdmaWxlX2InXQpgYGAKCiMjIyBTdHJlYW1pbmcgcmVzcG9uc2Vz
CgpOb3JtYWxseSwgd2hlbiB5b3UgdXNlIGBSZXN0Q2xpZW50LmdldGAgb3Ig
dGhlIGxvd2VyIGxldmVsCmBSZXN0Q2xpZW50OjpSZXF1ZXN0LmV4ZWN1dGUg
bWV0aG9kOiA6Z2V0YCB0byByZXRyaWV2ZSBkYXRhLCB0aGUgZW50aXJlCnJl
c3BvbnNlIGlzIGJ1ZmZlcmVkIGluIG1lbW9yeSBhbmQgcmV0dXJuZWQgYXMg
dGhlIHJlc3BvbnNlIHRvIHRoZSBjYWxsLgoKSG93ZXZlciwgaWYgeW91IGFy
ZSByZXRyaWV2aW5nIGEgbGFyZ2UgYW1vdW50IG9mIGRhdGEsIGZvciBleGFt
cGxlIGEgRG9ja2VyCmltYWdlLCBhbiBpc28sIG9yIGFueSBvdGhlciBsYXJn
ZSBmaWxlLCB5b3UgbWF5IHdhbnQgdG8gc3RyZWFtIHRoZSByZXNwb25zZQpk
aXJlY3RseSB0byBkaXNrIHJhdGhlciB0aGFuIGxvYWRpbmcgaXQgaW4gbWVt
b3J5LiBJZiB5b3UgaGF2ZSBhIHZlcnkgbGFyZ2UKZmlsZSwgaXQgbWF5IGJl
Y29tZSAqaW1wb3NzaWJsZSogdG8gbG9hZCBpdCBpbnRvIG1lbW9yeS4KClRo
ZXJlIGFyZSB0d28gbWFpbiB3YXlzIHRvIGRvIHRoaXM6CgojIyMjIGByYXdf
cmVzcG9uc2VgLCBzYXZlcyBpbnRvIFRlbXBmaWxlCgpJZiB5b3UgcGFzcyBg
cmF3X3Jlc3BvbnNlOiB0cnVlYCB0byBgUmVzdENsaWVudDo6UmVxdWVzdC5l
eGVjdXRlYCwgaXQgd2lsbCBzYXZlCnRoZSByZXNwb25zZSBib2R5IHRvIGEg
dGVtcG9yYXJ5IGZpbGUgKHVzaW5nIGBUZW1wZmlsZWApIGFuZCByZXR1cm4g
YQpgUmVzdENsaWVudDo6UmF3UmVzcG9uc2VgIG9iamVjdCByYXRoZXIgdGhh
biBhIGBSZXN0Q2xpZW50OjpSZXNwb25zZWAuCgpOb3RlIHRoYXQgdGhlIHRl
bXBmaWxlIGNyZWF0ZWQgYnkgYFRlbXBmaWxlLm5ld2Agd2lsbCBiZSBpbiBg
RGlyLnRtcGRpcmAKKHVzdWFsbHkgYC90bXAvYCksIHdoaWNoIHlvdSBjYW4g
b3ZlcnJpZGUgdG8gc3RvcmUgdGVtcG9yYXJ5IGZpbGVzIGluIGEKZGlmZmVy
ZW50IGxvY2F0aW9uLiBUaGlzIGZpbGUgd2lsbCBiZSB1bmxpbmtlZCB3aGVu
IGl0IGlzIGRlcmVmZXJlbmNlZC4KCklmIGxvZ2dpbmcgaXMgZW5hYmxlZCwg
dGhpcyB3aWxsIGFsc28gcHJpbnQgZG93bmxvYWQgcHJvZ3Jlc3MuCl9fTmV3
IGluIDIuMTpfXyBDdXN0b21pemUgdGhlIGludGVydmFsIHdpdGggYDpzdHJl
YW1fbG9nX3BlcmNlbnRgIChkZWZhdWx0cyB0bwoxMCBmb3IgcHJpbnRpbmcg
YSBtZXNzYWdlIGV2ZXJ5IDEwJSBjb21wbGV0ZSkuCgpGb3IgZXhhbXBsZToK
CmBgYHJ1YnkKPj4gcmF3ID0gUmVzdENsaWVudDo6UmVxdWVzdC5leGVjdXRl
KAogICAgICAgICAgIG1ldGhvZDogOmdldCwKICAgICAgICAgICB1cmw6ICdo
dHRwOi8vcmVsZWFzZXMudWJ1bnR1LmNvbS8xNi4wNC4yL3VidW50dS0xNi4w
NC4yLWRlc2t0b3AtYW1kNjQuaXNvJywKICAgICAgICAgICByYXdfcmVzcG9u
c2U6IHRydWUpCj0+IDxSZXN0Q2xpZW50OjpSYXdSZXNwb25zZSBAY29kZT0y
MDAsIEBmaWxlPSM8VGVtcGZpbGU6L3RtcC9yZXN0LWNsaWVudC4yMDE3MDUy
Mi01MzQ2LTFwcHRqbTE+LCBAcmVxdWVzdD08UmVzdENsaWVudDo6UmVxdWVz
dCBAbWV0aG9kPSJnZXQiLCBAdXJsPSJodHRwOi8vcmVsZWFzZXMudWJ1bnR1
LmNvbS8xNi4wNC4yL3VidW50dS0xNi4wNC4yLWRlc2t0b3AtYW1kNjQuaXNv
Ij4+Cj4+IHJhdy5maWxlLnNpemUKPT4gMTU1NDE4NjI0MAo+PiByYXcuZmls
ZS5wYXRoCj0+ICIvdG1wL3Jlc3QtY2xpZW50LjIwMTcwNTIyLTUzNDYtMXBw
dGptMSIKcmF3LmZpbGUucGF0aAo9PiAiL3RtcC9yZXN0LWNsaWVudC4yMDE3
MDUyMi01MzQ2LTFwcHRqbTEiCgo+PiByZXF1aXJlICdkaWdlc3Qvc2hhMScK
Pj4gRGlnZXN0OjpTSEExLmZpbGUocmF3LmZpbGUucGF0aCkuaGV4ZGlnZXN0
Cj0+ICI0Mzc1YjczZTNhMWFhMzA1YTM2MzIwZmZkNzQ4NDY4MjkyMjI2MmIz
IgpgYGAKCiMjIyMgYGJsb2NrX3Jlc3BvbnNlYCwgcmVjZWl2ZXMgcmF3IE5l
dDo6SFRUUFJlc3BvbnNlCgpJZiB5b3Ugd2FudCB0byBzdHJlYW0gdGhlIGRh
dGEgZnJvbSB0aGUgcmVzcG9uc2UgdG8gYSBmaWxlIGFzIGl0IGNvbWVzLCBy
YXRoZXIKdGhhbiBlbnRpcmVseSBpbiBtZW1vcnksIHlvdSBjYW4gYWxzbyBw
YXNzIGBSZXN0Q2xpZW50OjpSZXF1ZXN0LmV4ZWN1dGVgIGEKcGFyYW1ldGVy
IGA6YmxvY2tfcmVzcG9uc2VgIHRvIHdoaWNoIHlvdSBwYXNzIGEgYmxvY2sv
cHJvYy4gVGhpcyBibG9jayByZWNlaXZlcwp0aGUgcmF3IHVubW9kaWZpZWQg
TmV0OjpIVFRQUmVzcG9uc2Ugb2JqZWN0IGZyb20gTmV0OjpIVFRQLCB3aGlj
aCB5b3UgY2FuIHVzZQp0byBzdHJlYW0gZGlyZWN0bHkgdG8gYSBmaWxlIGFz
IGVhY2ggY2h1bmsgaXMgcmVjZWl2ZWQuCgpOb3RlIHRoYXQgdGhpcyBieXBh
c3NlcyBhbGwgdGhlIHVzdWFsIEhUVFAgc3RhdHVzIGNvZGUgaGFuZGxpbmcs
IHNvIHlvdSB3aWxsCndhbnQgdG8gZG8geW91IG93biBjaGVja2luZyBmb3Ig
SFRUUCAyMHggcmVzcG9uc2UgY29kZXMsIHJlZGlyZWN0cywgZXRjLgoKVGhl
IGZvbGxvd2luZyBpcyBhbiBleGFtcGxlOgoKYGBgYHJ1YnkKRmlsZS5vcGVu
KCcvc29tZS9vdXRwdXQvZmlsZScsICd3Jykge3xmfAogIGJsb2NrID0gcHJv
YyB7IHxyZXNwb25zZXwKICAgIHJlc3BvbnNlLnJlYWRfYm9keSBkbyB8Y2h1
bmt8CiAgICAgIGYud3JpdGUgY2h1bmsKICAgIGVuZAogIH0KICBSZXN0Q2xp
ZW50OjpSZXF1ZXN0LmV4ZWN1dGUobWV0aG9kOiA6Z2V0LAogICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICB1cmw6ICdodHRwOi8vZXhhbXBsZS5jb20v
c29tZS9yZWFsbHkvYmlnL2ZpbGUuaW1nJywKICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgYmxvY2tfcmVzcG9uc2U6IGJsb2NrKQp9CmBgYGAKCiMj
IFNoZWxsCgpUaGUgcmVzdGNsaWVudCBzaGVsbCBjb21tYW5kIGdpdmVzIGFu
IElSQiBzZXNzaW9uIHdpdGggUmVzdENsaWVudCBhbHJlYWR5IGxvYWRlZDoK
CmBgYHJ1YnkKJCByZXN0Y2xpZW50Cj4+IFJlc3RDbGllbnQuZ2V0ICdodHRw
Oi8vZXhhbXBsZS5jb20nCmBgYAoKU3BlY2lmeSBhIFVSTCBhcmd1bWVudCBm
b3IgZ2V0L3Bvc3QvcHV0L2RlbGV0ZSBvbiB0aGF0IHJlc291cmNlOgoKYGBg
cnVieQokIHJlc3RjbGllbnQgaHR0cDovL2V4YW1wbGUuY29tCj4+IHB1dCAn
L3Jlc291cmNlJywgJ2RhdGEnCmBgYAoKQWRkIGEgdXNlciBhbmQgcGFzc3dv
cmQgZm9yIGF1dGhlbnRpY2F0ZWQgcmVzb3VyY2VzOgoKYGBgcnVieQokIHJl
c3RjbGllbnQgaHR0cHM6Ly9leGFtcGxlLmNvbSB1c2VyIHBhc3MKPj4gZGVs
ZXRlICcvcHJpdmF0ZS9yZXNvdXJjZScKYGBgCgpDcmVhdGUgfi8ucmVzdGNs
aWVudCBmb3IgbmFtZWQgc2Vzc2lvbnM6CgpgYGBydWJ5CiAgc2luYXRyYToK
ICAgIHVybDogaHR0cDovL2xvY2FsaG9zdDo0NTY3CiAgcmFjazoKICAgIHVy
bDogaHR0cDovL2xvY2FsaG9zdDo5MjkyCiAgcHJpdmF0ZV9zaXRlOgogICAg
dXJsOiBodHRwOi8vZXhhbXBsZS5jb20KICAgIHVzZXJuYW1lOiB1c2VyCiAg
ICBwYXNzd29yZDogcGFzcwpgYGAKClRoZW4gaW52b2tlOgoKYGBgcnVieQok
IHJlc3RjbGllbnQgcHJpdmF0ZV9zaXRlCmBgYAoKVXNlIGFzIGEgb25lLW9m
ZiwgY3VybC1zdHlsZToKCmBgYHJ1YnkKJCByZXN0Y2xpZW50IGdldCBodHRw
Oi8vZXhhbXBsZS5jb20vcmVzb3VyY2UgPiBvdXRwdXRfYm9keQoKJCByZXN0
Y2xpZW50IHB1dCBodHRwOi8vZXhhbXBsZS5jb20vcmVzb3VyY2UgPCBpbnB1
dF9ib2R5CmBgYAoKIyMgTG9nZ2luZwoKVG8gZW5hYmxlIGxvZ2dpbmcgZ2xv
YmFsbHkgeW91IGNhbjoKCi0gc2V0IFJlc3RDbGllbnQubG9nIHdpdGggYSBS
dWJ5IExvZ2dlcgoKYGBgcnVieQpSZXN0Q2xpZW50LmxvZyA9IFNURE9VVApg
YGAKCi0gb3Igc2V0IGFuIGVudmlyb25tZW50IHZhcmlhYmxlIHRvIGF2b2lk
IG1vZGlmeWluZyB0aGUgY29kZSAoaW4gdGhpcyBjYXNlIHlvdSBjYW4gdXNl
IGEgZmlsZSBuYW1lLCAic3Rkb3V0IiBvciAic3RkZXJyIik6CgpgYGBydWJ5
CiQgUkVTVENMSUVOVF9MT0c9c3Rkb3V0IHBhdGgvdG8vbXkvcHJvZ3JhbQpg
YGAKCllvdSBjYW4gYWxzbyBzZXQgaW5kaXZpZHVhbCBsb2dnZXJzIHdoZW4g
aW5zdGFudGlhdGluZyBhIFJlc291cmNlIG9yIG1ha2luZyBhbgppbmRpdmlk
dWFsIHJlcXVlc3Q6CgpgYGBydWJ5CnJlc291cmNlID0gUmVzdENsaWVudDo6
UmVzb3VyY2UubmV3ICdodHRwOi8vZXhhbXBsZS5jb20vcmVzb3VyY2UnLCBs
b2c6IExvZ2dlci5uZXcoU1RET1VUKQpgYGAKCmBgYHJ1YnkKUmVzdENsaWVu
dDo6UmVxdWVzdC5leGVjdXRlKG1ldGhvZDogOmdldCwgdXJsOiAnaHR0cDov
L2V4YW1wbGUuY29tL2ZvbycsIGxvZzogTG9nZ2VyLm5ldyhTVERFUlIpKQpg
YGAKCkFsbCBvcHRpb25zIHByb2R1Y2UgbG9ncyBsaWtlIHRoaXM6CgpgYGBy
dWJ5ClJlc3RDbGllbnQuZ2V0ICJodHRwOi8vc29tZS9yZXNvdXJjZSIKIyA9
PiAyMDAgT0sgfCB0ZXh0L2h0bWwgMjUwIGJ5dGVzClJlc3RDbGllbnQucHV0
ICJodHRwOi8vc29tZS9yZXNvdXJjZSIsICJwYXlsb2FkIgojID0+IDQwMSBV
bmF1dGhvcml6ZWQgfCBhcHBsaWNhdGlvbi94bWwgMzQwIGJ5dGVzCmBgYAoK
Tm90ZSB0aGF0IHRoZXNlIGxvZ3MgYXJlIHZhbGlkIFJ1YnksIHNvIHlvdSBj
YW4gcGFzdGUgdGhlbSBpbnRvIHRoZSBgcmVzdGNsaWVudGAKc2hlbGwgb3Ig
YSBzY3JpcHQgdG8gcmVwbGF5IHlvdXIgc2VxdWVuY2Ugb2YgcmVzdCBjYWxs
cy4KCiMjIFByb3h5CgpBbGwgY2FsbHMgdG8gUmVzdENsaWVudCwgaW5jbHVk
aW5nIFJlc291cmNlcywgd2lsbCB1c2UgdGhlIHByb3h5IHNwZWNpZmllZCBi
eQpgUmVzdENsaWVudC5wcm94eWA6CgpgYGBydWJ5ClJlc3RDbGllbnQucHJv
eHkgPSAiaHR0cDovL3Byb3h5LmV4YW1wbGUuY29tLyIKUmVzdENsaWVudC5n
ZXQgImh0dHA6Ly9zb21lL3Jlc291cmNlIgojID0+IHJlc3BvbnNlIGZyb20g
c29tZS9yZXNvdXJjZSBhcyBwcm94aWVkIHRocm91Z2ggcHJveHkuZXhhbXBs
ZS5jb20KYGBgCgpPZnRlbiB0aGUgcHJveHkgVVJMIGlzIHNldCBpbiBhbiBl
bnZpcm9ubWVudCB2YXJpYWJsZSwgc28geW91IGNhbiBkbyB0aGlzIHRvCnVz
ZSB3aGF0ZXZlciBwcm94eSB0aGUgc3lzdGVtIGlzIGNvbmZpZ3VyZWQgdG8g
dXNlOgoKYGBgcnVieQogIFJlc3RDbGllbnQucHJveHkgPSBFTlZbJ2h0dHBf
cHJveHknXQpgYGAKCl9fTmV3IGluIDIuMDpfXyBTcGVjaWZ5IGEgcGVyLXJl
cXVlc3QgcHJveHkgYnkgcGFzc2luZyB0aGUgOnByb3h5IG9wdGlvbiB0bwpS
ZXN0Q2xpZW50OjpSZXF1ZXN0LiBUaGlzIHdpbGwgb3ZlcnJpZGUgYW55IHBy
b3hpZXMgc2V0IGJ5IGVudmlyb25tZW50IHZhcmlhYmxlCm9yIGJ5IHRoZSBn
bG9iYWwgYFJlc3RDbGllbnQucHJveHlgIHZhbHVlLgoKYGBgcnVieQpSZXN0
Q2xpZW50OjpSZXF1ZXN0LmV4ZWN1dGUobWV0aG9kOiA6Z2V0LCB1cmw6ICdo
dHRwOi8vZXhhbXBsZS5jb20nLAogICAgICAgICAgICAgICAgICAgICAgICAg
ICAgcHJveHk6ICdodHRwOi8vcHJveHkuZXhhbXBsZS5jb20nKQojID0+IHNp
bmdsZSByZXF1ZXN0IHByb3hpZWQgdGhyb3VnaCB0aGUgcHJveHkKYGBgCgpU
aGlzIGNhbiBiZSB1c2VkIHRvIGRpc2FibGUgdGhlIHVzZSBvZiBhIHByb3h5
IGZvciBhIHBhcnRpY3VsYXIgcmVxdWVzdC4KCmBgYHJ1YnkKUmVzdENsaWVu
dC5wcm94eSA9ICJodHRwOi8vcHJveHkuZXhhbXBsZS5jb20vIgpSZXN0Q2xp
ZW50OjpSZXF1ZXN0LmV4ZWN1dGUobWV0aG9kOiA6Z2V0LCB1cmw6ICdodHRw
Oi8vZXhhbXBsZS5jb20nLCBwcm94eTogbmlsKQojID0+IHNpbmdsZSByZXF1
ZXN0IHNlbnQgd2l0aG91dCBhIHByb3h5CmBgYAoKIyMgUXVlcnkgcGFyYW1l
dGVycwoKUmVzdC1jbGllbnQgY2FuIHJlbmRlciBhIGhhc2ggYXMgSFRUUCBx
dWVyeSBwYXJhbWV0ZXJzIGZvciBHRVQvSEVBRC9ERUxFVEUKcmVxdWVzdHMg
b3IgYXMgSFRUUCBwb3N0IGRhdGEgaW4gYHgtd3d3LWZvcm0tdXJsZW5jb2Rl
ZGAgZm9ybWF0IGZvciBQT1NUCnJlcXVlc3RzLgoKX19OZXcgaW4gMi4wOl9f
IEV2ZW4gdGhvdWdoIHRoZXJlIGlzIG5vIHN0YW5kYXJkIHNwZWNpZnlpbmcg
aG93IHRoaXMgc2hvdWxkCndvcmssIHJlc3QtY2xpZW50IGZvbGxvd3MgYSBz
aW1pbGFyIGNvbnZlbnRpb24gdG8gdGhlIG9uZSB1c2VkIGJ5IFJhY2sgLyBS
YWlscwpzZXJ2ZXJzIGZvciBoYW5kbGluZyBhcnJheXMsIG5lc3RlZCBoYXNo
ZXMsIGFuZCBudWxsIHZhbHVlcy4KClRoZSBpbXBsZW1lbnRhdGlvbiBpbgpb
Li9saWIvcmVzdC1jbGllbnQvdXRpbHMucmJdKFJlc3RDbGllbnQ6OlV0aWxz
LmVuY29kZV9xdWVyeV9zdHJpbmcpCmNsb3NlbHkgZm9sbG93cwpbUmFjazo6
VXRpbHMuYnVpbGRfbmVzdGVkX3F1ZXJ5XShodHRwOi8vd3d3LnJ1Ynlkb2Mu
aW5mby9nZW1zL3JhY2svUmFjay9VdGlscyNidWlsZF9uZXN0ZWRfcXVlcnkt
Y2xhc3NfbWV0aG9kKSwKYnV0IHRyZWF0cyBlbXB0eSBhcnJheXMgYW5kIGhh
c2hlcyBhcyBgbmlsYC4gKFJhY2sgZHJvcHMgdGhlbSBlbnRpcmVseSwgd2hp
Y2gKaXMgY29uZnVzaW5nIGJlaGF2aW9yLikKCklmIHlvdSBkb24ndCBsaWtl
IHRoaXMgYmVoYXZpb3IgYW5kIHdhbnQgbW9yZSBjb250cm9sLCBqdXN0IHNl
cmlhbGl6ZSBwYXJhbXMKeW91cnNlbGYgKGUuZy4gd2l0aCBgVVJJLmVuY29k
ZV93d3dfZm9ybWApIGFuZCBhZGQgdGhlIHF1ZXJ5IHN0cmluZyB0byB0aGUg
VVJMCmRpcmVjdGx5IGZvciBHRVQgcGFyYW1ldGVycyBvciBwYXNzIHRoZSBw
YXlsb2FkIGFzIGEgc3RyaW5nIGZvciBQT1NUIHJlcXVlc3RzLgoKQmFzaWMg
R0VUIHBhcmFtczoKYGBgcnVieQpSZXN0Q2xpZW50LmdldCgnaHR0cHM6Ly9o
dHRwYmluLm9yZy9nZXQnLCBwYXJhbXM6IHtmb286ICdiYXInLCBiYXo6ICdx
dXgnfSkKIyBHRVQgImh0dHBzOi8vaHR0cGJpbi5vcmcvZ2V0P2Zvbz1iYXIm
YmF6PXF1eCIKYGBgCgpCYXNpYyBgeC13d3ctZm9ybS11cmxlbmNvZGVkYCBQ
T1NUIHBhcmFtczoKYGBgcnVieQo+PiByID0gUmVzdENsaWVudC5wb3N0KCdo
dHRwczovL2h0dHBiaW4ub3JnL3Bvc3QnLCB7Zm9vOiAnYmFyJywgYmF6OiAn
cXV4J30pCiMgUE9TVCAiaHR0cHM6Ly9odHRwYmluLm9yZy9wb3N0IiwgZGF0
YTogImZvbz1iYXImYmF6PXF1eCIKPT4gPFJlc3RDbGllbnQ6OlJlc3BvbnNl
IDIwMCAie1xuICBcImFyZ3NcIjouLi4iPgo+PiBKU09OLnBhcnNlKHIuYm9k
eSkKPT4geyJhcmdzIj0+e30sCiAgICAiZGF0YSI9PiIiLAogICAgImZpbGVz
Ij0+e30sCiAgICAiZm9ybSI9PnsiYmF6Ij0+InF1eCIsICJmb28iPT4iYmFy
In0sCiAgICAiaGVhZGVycyI9PgogICAgeyJBY2NlcHQiPT4iKi8qIiwKICAg
ICAgICAiQWNjZXB0LUVuY29kaW5nIj0+Imd6aXAsIGRlZmxhdGUiLAogICAg
ICAgICJDb250ZW50LUxlbmd0aCI9PiIxNSIsCiAgICAgICAgIkNvbnRlbnQt
VHlwZSI9PiJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiLAog
ICAgICAgICJIb3N0Ij0+Imh0dHBiaW4ub3JnIn0sCiAgICAianNvbiI9Pm5p
bCwKICAgICJ1cmwiPT4iaHR0cHM6Ly9odHRwYmluLm9yZy9wb3N0In0KYGBg
CgpKU09OIHBheWxvYWQ6IHJlc3QtY2xpZW50IGRvZXMgbm90IHNwZWFrIEpT
T04gbmF0aXZlbHksIHNvIHNlcmlhbGl6ZSB5b3VyCnBheWxvYWQgdG8gYSBz
dHJpbmcgYmVmb3JlIHBhc3NpbmcgaXQgdG8gcmVzdC1jbGllbnQuCmBgYHJ1
YnkKPj4gcGF5bG9hZCA9IHsnbmFtZScgPT4gJ25ld3JlcG8nLCAnZGVzY3Jp
cHRpb24nOiAnQSBuZXcgcmVwbyd9Cj4+IFJlc3RDbGllbnQucG9zdCgnaHR0
cHM6Ly9hcGkuZ2l0aHViLmNvbS91c2VyL3JlcG9zJywgcGF5bG9hZC50b19q
c29uLCBjb250ZW50X3R5cGU6IDpqc29uKQo9PiA8UmVzdENsaWVudDo6UmVz
cG9uc2UgMjAxICJ7XCJpZFwiOjc1MTQ5Li4uIj4KYGBgCgpBZHZhbmNlZCBH
RVQgcGFyYW1zIChhcnJheXMpOgpgYGBydWJ5Cj4+IHIgPSBSZXN0Q2xpZW50
LmdldCgnaHR0cHM6Ly9odHRwLXBhcmFtcy5oZXJva3VhcHAuY29tL2dldCcs
IHBhcmFtczoge2ZvbzogWzEsMiwzXX0pCiMgR0VUICJodHRwczovL2h0dHAt
cGFyYW1zLmhlcm9rdWFwcC5jb20vZ2V0P2Zvb1tdPTEmZm9vW109MiZmb29b
XT0zIgo9PiA8UmVzdENsaWVudDo6UmVzcG9uc2UgMjAwICJNZXRob2Q6IEdF
VC4uLiI+Cj4+IHB1dHMgci5ib2R5CnF1ZXJ5X3N0cmluZzogImZvb1tdPTEm
Zm9vW109MiZmb29bXT0zIgpkZWNvZGVkOiAgICAgICJmb29bXT0xJmZvb1td
PTImZm9vW109MyIKCkdFVDoKICB7ImZvbyI9PlsiMSIsICIyIiwgIjMiXX0K
YGBgCgpBZHZhbmNlZCBHRVQgcGFyYW1zIChuZXN0ZWQgaGFzaGVzKToKYGBg
cnVieQo+PiByID0gUmVzdENsaWVudC5nZXQoJ2h0dHBzOi8vaHR0cC1wYXJh
bXMuaGVyb2t1YXBwLmNvbS9nZXQnLCBwYXJhbXM6IHtvdXRlcjoge2Zvbzog
MTIzLCBiYXI6IDQ1Nn19KQojIEdFVCAiaHR0cHM6Ly9odHRwLXBhcmFtcy5o
ZXJva3VhcHAuY29tL2dldD9vdXRlcltmb29dPTEyMyZvdXRlcltiYXJdPTQ1
NiIKPT4gPFJlc3RDbGllbnQ6OlJlc3BvbnNlIDIwMCAiTWV0aG9kOiBHRVQu
Li4iPgo+PiBwdXRzIHIuYm9keQouLi4KcXVlcnlfc3RyaW5nOiAib3V0ZXJb
Zm9vXT0xMjMmb3V0ZXJbYmFyXT00NTYiCmRlY29kZWQ6ICAgICAgIm91dGVy
W2Zvb109MTIzJm91dGVyW2Jhcl09NDU2IgoKR0VUOgogIHsib3V0ZXIiPT57
ImZvbyI9PiIxMjMiLCAiYmFyIj0+IjQ1NiJ9fQpgYGAKCl9fTmV3IGluIDIu
MDpfXyBUaGUgbmV3IGBSZXN0Q2xpZW50OjpQYXJhbXNBcnJheWAgY2xhc3Mg
YWxsb3dzIGNhbGxlcnMgdG8KcHJvdmlkZSBvcmRlcmluZyBldmVuIHRvIHN0
cnVjdHVyZWQgcGFyYW1ldGVycy4gVGhpcyBpcyB1c2VmdWwgZm9yIHVudXN1
YWwKY2FzZXMgd2hlcmUgdGhlIHNlcnZlciB0cmVhdHMgdGhlIG9yZGVyIG9m
IHBhcmFtZXRlcnMgYXMgc2lnbmlmaWNhbnQgb3IgeW91CndhbnQgdG8gcGFz
cyBhIHBhcnRpY3VsYXIga2V5IG11bHRpcGxlIHRpbWVzLgoKTXVsdGlwbGUg
ZmllbGRzIHdpdGggdGhlIHNhbWUgbmFtZSB1c2luZyBQYXJhbXNBcnJheToK
YGBgcnVieQo+PiBSZXN0Q2xpZW50LmdldCgnaHR0cHM6Ly9odHRwYmluLm9y
Zy9nZXQnLCBwYXJhbXM6CiAgICAgICAgICAgICAgICAgIFJlc3RDbGllbnQ6
OlBhcmFtc0FycmF5Lm5ldyhbWzpmb28sIDFdLCBbOmZvbywgMl1dKSkKIyBH
RVQgImh0dHBzOi8vaHR0cGJpbi5vcmcvZ2V0P2Zvbz0xJmZvbz0yIgpgYGAK
Ck5lc3RlZCBQYXJhbXNBcnJheToKYGBgcnVieQo+PiBSZXN0Q2xpZW50Lmdl
dCgnaHR0cHM6Ly9odHRwYmluLm9yZy9nZXQnLCBwYXJhbXM6CiAgICAgICAg
ICAgICAgICAgIHtmb286IFJlc3RDbGllbnQ6OlBhcmFtc0FycmF5Lm5ldyhb
WzphLCAxXSwgWzphLCAyXV0pfSkKIyBHRVQgImh0dHBzOi8vaHR0cGJpbi5v
cmcvZ2V0P2Zvb1thXT0xJmZvb1thXT0yIgpgYGAKCiMjIEhlYWRlcnMKClJl
cXVlc3QgaGVhZGVycyBjYW4gYmUgc2V0IGJ5IHBhc3NpbmcgYSBydWJ5IGhh
c2ggY29udGFpbmluZyBrZXlzIGFuZCB2YWx1ZXMKcmVwcmVzZW50aW5nIGhl
YWRlciBuYW1lcyBhbmQgdmFsdWVzOgoKYGBgcnVieQojIEdFVCByZXF1ZXN0
IHdpdGggbW9kaWZpZWQgaGVhZGVycwpSZXN0Q2xpZW50LmdldCAnaHR0cDov
L2V4YW1wbGUuY29tL3Jlc291cmNlJywgezpBdXRob3JpemF0aW9uID0+ICdC
ZWFyZXIgY1QwZmViRm9ENWx4QWxOQVhIbzZnJ30KCiMgUE9TVCByZXF1ZXN0
IHdpdGggbW9kaWZpZWQgaGVhZGVycwpSZXN0Q2xpZW50LnBvc3QgJ2h0dHA6
Ly9leGFtcGxlLmNvbS9yZXNvdXJjZScsIHs6Zm9vID0+ICdiYXInLCA6YmF6
ID0+ICdxdXgnfSwgezpBdXRob3JpemF0aW9uID0+ICdCZWFyZXIgY1QwZmVi
Rm9ENWx4QWxOQVhIbzZnJ30KCiMgREVMRVRFIHJlcXVlc3Qgd2l0aCBtb2Rp
ZmllZCBoZWFkZXJzClJlc3RDbGllbnQuZGVsZXRlICdodHRwOi8vZXhhbXBs
ZS5jb20vcmVzb3VyY2UnLCB7OkF1dGhvcml6YXRpb24gPT4gJ0JlYXJlciBj
VDBmZWJGb0Q1bHhBbE5BWEhvNmcnfQpgYGAKCiMjIFRpbWVvdXRzCgpCeSBk
ZWZhdWx0IHRoZSB0aW1lb3V0IGZvciBhIHJlcXVlc3QgaXMgNjAgc2Vjb25k
cy4gVGltZW91dHMgZm9yIHlvdXIgcmVxdWVzdCBjYW4KYmUgYWRqdXN0ZWQg
Ynkgc2V0dGluZyB0aGUgYHRpbWVvdXQ6YCB0byB0aGUgbnVtYmVyIG9mIHNl
Y29uZHMgdGhhdCB5b3Ugd291bGQgbGlrZQp0aGUgcmVxdWVzdCB0byB3YWl0
LiBTZXR0aW5nIGB0aW1lb3V0OmAgd2lsbCBvdmVycmlkZSBib3RoIGByZWFk
X3RpbWVvdXQ6YCBhbmQgYG9wZW5fdGltZW91dDpgLgoKYGBgcnVieQpSZXN0
Q2xpZW50OjpSZXF1ZXN0LmV4ZWN1dGUobWV0aG9kOiA6Z2V0LCB1cmw6ICdo
dHRwOi8vZXhhbXBsZS5jb20vcmVzb3VyY2UnLAogICAgICAgICAgICAgICAg
ICAgICAgICAgICAgdGltZW91dDogMTIwKQpgYGAKCkFkZGl0aW9uYWxseSwg
eW91IGNhbiBzZXQgYHJlYWRfdGltZW91dDpgIGFuZCBgb3Blbl90aW1lb3V0
OmAgc2VwYXJhdGVseS4KCmBgYHJ1YnkKUmVzdENsaWVudDo6UmVxdWVzdC5l
eGVjdXRlKG1ldGhvZDogOmdldCwgdXJsOiAnaHR0cDovL2V4YW1wbGUuY29t
L3Jlc291cmNlJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRf
dGltZW91dDogMTIwLCBvcGVuX3RpbWVvdXQ6IDI0MCkKYGBgCgojIyBDb29r
aWVzCgpSZXF1ZXN0IGFuZCBSZXNwb25zZSBvYmplY3RzIGtub3cgYWJvdXQg
SFRUUCBjb29raWVzLCBhbmQgd2lsbCBhdXRvbWF0aWNhbGx5CmV4dHJhY3Qg
YW5kIHNldCBoZWFkZXJzIGZvciB0aGVtIGFzIG5lZWRlZDoKCmBgYHJ1YnkK
cmVzcG9uc2UgPSBSZXN0Q2xpZW50LmdldCAnaHR0cDovL2V4YW1wbGUuY29t
L2FjdGlvbl93aGljaF9zZXRzX3Nlc3Npb25faWQnCnJlc3BvbnNlLmNvb2tp
ZXMKIyA9PiB7Il9hcHBsaWNhdGlvTl9zZXNzaW9uX2lkIiA9PiAiMTIzNCJ9
CgpyZXNwb25zZTIgPSBSZXN0Q2xpZW50LnBvc3QoCiAgJ2h0dHA6Ly9sb2Nh
bGhvc3Q6MzAwMC8nLAogIHs6cGFyYW0xID0+ICJmb28ifSwKICB7OmNvb2tp
ZXMgPT4gezpzZXNzaW9uX2lkID0+ICIxMjM0In19CikKIyAuLi5yZXNwb25z
ZSBib2R5CmBgYAojIyMgRnVsbCBjb29raWUgamFyIHN1cHBvcnQgKG5ldyBp
biAxLjgpCgpUaGUgb3JpZ2luYWwgY29va2llIGltcGxlbWVudGF0aW9uIHdh
cyB2ZXJ5IG5haXZlIGFuZCBpZ25vcmVkIG1vc3Qgb2YgdGhlCmNvb2tpZSBS
RkMgc3RhbmRhcmRzLgpfX05ldyBpbiAxLjhfXzogIEFuIEhUVFA6OkNvb2tp
ZUphciBvZiBjb29raWVzCgpSZXNwb25zZSBvYmplY3RzIG5vdyBjYXJyeSBh
IGNvb2tpZV9qYXIgbWV0aG9kIHRoYXQgZXhwb3NlcyBhbiBIVFRQOjpDb29r
aWVKYXIKb2YgY29va2llcywgd2hpY2ggc3VwcG9ydHMgZnVsbCBzdGFuZGFy
ZHMgY29tcGxpYW50IGJlaGF2aW9yLgoKIyMgU1NML1RMUyBzdXBwb3J0CgpW
YXJpb3VzIG9wdGlvbnMgYXJlIHN1cHBvcnRlZCBmb3IgY29uZmlndXJpbmcg
cmVzdC1jbGllbnQncyBUTFMgc2V0dGluZ3MuIEJ5CmRlZmF1bHQsIHJlc3Qt
Y2xpZW50IHdpbGwgdmVyaWZ5IGNlcnRpZmljYXRlcyB1c2luZyB0aGUgc3lz
dGVtJ3MgQ0Egc3RvcmUgb24KYWxsIHBsYXRmb3Jtcy4gKFRoaXMgaXMgaW50
ZW5kZWQgdG8gYmUgc2ltaWxhciB0byBob3cgYnJvd3NlcnMgYmVoYXZlLikg
WW91IGNhbgpzcGVjaWZ5IGFuIDpzc2xfY2FfZmlsZSwgOnNzbF9jYV9wYXRo
LCBvciA6c3NsX2NlcnRfc3RvcmUgdG8gY3VzdG9taXplIHRoZQpjZXJ0aWZp
Y2F0ZSBhdXRob3JpdGllcyBhY2NlcHRlZC4KCiMjIyBTU0wgQ2xpZW50IENl
cnRpZmljYXRlcwoKYGBgcnVieQpSZXN0Q2xpZW50OjpSZXNvdXJjZS5uZXco
CiAgJ2h0dHBzOi8vZXhhbXBsZS5jb20nLAogIDpzc2xfY2xpZW50X2NlcnQg
ID0+ICBPcGVuU1NMOjpYNTA5OjpDZXJ0aWZpY2F0ZS5uZXcoRmlsZS5yZWFk
KCJjZXJ0LnBlbSIpKSwKICA6c3NsX2NsaWVudF9rZXkgICA9PiAgT3BlblNT
TDo6UEtleTo6UlNBLm5ldyhGaWxlLnJlYWQoImtleS5wZW0iKSwgInBhc3Nw
aHJhc2UsIGlmIGFueSIpLAogIDpzc2xfY2FfZmlsZSAgICAgID0+ICAiY2Ff
Y2VydGlmaWNhdGUucGVtIiwKICA6dmVyaWZ5X3NzbCAgICAgICA9PiAgT3Bl
blNTTDo6U1NMOjpWRVJJRllfUEVFUgopLmdldApgYGAKU2VsZi1zaWduZWQg
Y2VydGlmaWNhdGVzIGNhbiBiZSBnZW5lcmF0ZWQgd2l0aCB0aGUgb3BlbnNz
bCBjb21tYW5kLWxpbmUgdG9vbC4KCiMjIEhvb2sKClJlc3RDbGllbnQuYWRk
X2JlZm9yZV9leGVjdXRpb25fcHJvYyBhZGQgYSBQcm9jIHRvIGJlIGNhbGxl
ZCBiZWZvcmUgZWFjaCBleGVjdXRpb24uCkl0J3MgaGFuZHkgaWYgeW91IG5l
ZWQgZGlyZWN0IGFjY2VzcyB0byB0aGUgSFRUUCByZXF1ZXN0LgoKRXhhbXBs
ZToKCmBgYHJ1YnkKIyBBZGQgb2F1dGggc3VwcG9ydCB1c2luZyB0aGUgb2F1
dGggZ2VtCnJlcXVpcmUgJ29hdXRoJwphY2Nlc3NfdG9rZW4gPSAuLi4KClJl
c3RDbGllbnQuYWRkX2JlZm9yZV9leGVjdXRpb25fcHJvYyBkbyB8cmVxLCBw
YXJhbXN8CiAgYWNjZXNzX3Rva2VuLnNpZ24hIHJlcQplbmQKClJlc3RDbGll
bnQuZ2V0ICdodHRwOi8vZXhhbXBsZS5jb20nCmBgYAoKIyMgTW9yZQoKTmVl
ZCBjYWNoaW5nLCBtb3JlIGFkdmFuY2VkIGxvZ2dpbmcgb3IgYW55IGFiaWxp
dHkgcHJvdmlkZWQgYnkgUmFjayBtaWRkbGV3YXJlPwoKSGF2ZSBhIGxvb2sg
YXQgcmVzdC1jbGllbnQtY29tcG9uZW50czogaHR0cDovL2dpdGh1Yi5jb20v
Y3JvaHIvcmVzdC1jbGllbnQtY29tcG9uZW50cwoKIyMgQ3JlZGl0cwp8IHwg
fAp8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXwtLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS18Cnwg
KipSRVNUIENsaWVudCBUZWFtKiogICAgfCBBbmR5IEJyb2R5ICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKfCAqKkNy
ZWF0b3IqKiAgICAgICAgICAgICB8IEFkYW0gV2lnZ2lucyAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAp8ICoqTWFpbnRh
aW5lcnMgRW1lcml0aSoqIHwgTGF3cmVuY2UgTGVvbmFyZCBHaWxiZXJ0LCBN
YXR0aGV3IE1hbm5pbmcsIEp1bGllbiBLaXJjaCB8CnwgKipNYWpvciBjb250
cmlidXRpb25zKiogfCBCbGFrZSBNaXplcmFueSwgSnVsaWVuIEtpcmNoICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIHwKCkEgZ3JlYXQgbWFueSBnZW5l
cm91cyBmb2xrcyBoYXZlIGNvbnRyaWJ1dGVkIGZlYXR1cmVzIGFuZCBwYXRj
aGVzLgpTZWUgQVVUSE9SUyBmb3IgdGhlIGZ1bGwgbGlzdC4KCiMjIExlZ2Fs
CgpSZWxlYXNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2U6IGh0dHBzOi8vb3Bl
bnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUCgpQaG90byBvZiB0aGUgSW50ZXJu
YXRpb25hbCBTcGFjZSBTdGF0aW9uIHdhcyBwcm9kdWNlZCBieSBOQVNBIGFu
ZCBpcyBpbiB0aGUKcHVibGljIGRvbWFpbi4KCkNvZGUgZm9yIHJlYWRpbmcg
V2luZG93cyByb290IGNlcnRpZmljYXRlIHN0b3JlIGRlcml2ZWQgZnJvbSB3
b3JrIGJ5IFB1cHBldDsKdXNlZCB1bmRlciB0ZXJtcyBvZiB0aGUgQXBhY2hl
IExpY2Vuc2UsIFZlcnNpb24gMi4wLgo=
",,4785,"IyBBdmFpbGFibGUgcnVieSB2ZXJzaW9uczogaHR0cDovL3J1Ymllcy50cmF2
aXMtY2kub3JnLwoKbGFuZ3VhZ2U6IHJ1YnkKc3VkbzogZmFsc2UKCm9zOgog
IC0gbGludXgKIyAgLSBvc3gKCnJ2bToKICAtICIyLjEiICMgbGF0ZXN0IDIu
MS54CiAgLSAiMi4yLjEwIgogIC0gIjIuMy44IgogIC0gIjIuNC42IgogIC0g
IjIuNS41IgogIC0gIjIuNi4zIgogIC0gInJ1YnktaGVhZCIKICAtICJqcnVi
eS05LjEuOS4wIgogIC0gImpydWJ5LWhlYWQiCgpjYWNoZTogYnVuZGxlcgoK
c2NyaXB0OgogIC0gYnVuZGxlIGV4ZWMgcmFrZSB0ZXN0CiAgLSBidW5kbGUg
ZXhlYyByYWtlIHJ1Ym9jb3AKCmJyYW5jaGVzOgogIGV4Y2VwdDoKICAgIC0g
InJlYWRtZS1lZGl0cyIKCmJlZm9yZV9pbnN0YWxsOgogICMgSW5zdGFsbCBy
dWJ5Z2VtcyA8IDMuMCBzbyB0aGF0IHdlIGNhbiBzdXBwb3J0IHJ1YnkgPCAy
LjMKICAjIGh0dHBzOi8vZ2l0aHViLmNvbS9ydWJ5Z2Vtcy9ydWJ5Z2Vtcy9p
c3N1ZXMvMjUzNAogIC0gZ2VtIGluc3RhbGwgcnVieWdlbXMtdXBkYXRlIC12
ICc8MycgJiYgdXBkYXRlX3J1YnlnZW1zCiAgIyBidW5kbGVyIGluc3RhbGxh
dGlvbiBuZWVkZWQgZm9yIGpydWJ5LWhlYWQKICAjIGh0dHBzOi8vZ2l0aHVi
LmNvbS90cmF2aXMtY2kvdHJhdmlzLWNpL2lzc3Vlcy81ODYxCiAgIyBzdGlj
ayB0byBidW5kbGVyIDEueCBpbiBvcmRlciB0byBzdXBwb3J0IHJ1YnkgPCAy
LjMKICAtIGdlbSBpbnN0YWxsIGJ1bmRsZXIgLXYgJ34+IDEuMTcnCgojIFRy
YXZpcyBtYWNPUyBzdXBwb3J0IGlzIHByZXR0eSBqYW5reS4gVGhlc2UgYXJl
IHNvbWUgaGFja3MgdG8gaW5jbHVkZSB0ZXN0cwojIG9ubHkgb24gdmVyc2lv
bnMgdGhhdCBhY3R1YWxseSB3b3JrLiBXZSB0ZXN0IG9uIG1hY09TIGJlY2F1
c2UgQXBwbGUgbW9ua2V5CiMgcGF0Y2hlcyBPcGVuU1NMIHRvIGhhdmUgZGlm
ZmVyZW50IGJlaGF2aW9yLCBhbmQgd2Ugd2FudCB0byBlbnN1cmUgdGhhdCBT
U0wKIyB2ZXJpZmljYXRpb24gYXQgbGVhc3QgaXMgYnJva2VuIGluIHRoZSBl
eHBlY3RlZCB3YXlzIG9uIG1hY09TLgojIChsYXN0IHRlc3RlZDogMjAxOS0w
OCkKbWF0cml4OgogICMgZXhjbHVkZToge30KICBpbmNsdWRlOgogICAgIyB0
ZXN0IG9ubHkgYSBmZXcgdmVyc2lvbnMgb24gbWFjCiAgICAtIG9zOiBvc3gK
ICAgICAgcnZtOiAyLjYuMwogICAgLSBvczogb3N4CiAgICAgIHJ2bTogcnVi
eS1oZWFkCiAgICAtIG9zOiBvc3gKICAgICAgcnZtOiBqcnVieS05LjEuOS4w
CiAgICAtIG9zOiBvc3gKICAgICAgcnZtOiBqcnVieS1oZWFkCgogIGFsbG93
X2ZhaWx1cmVzOgogICAgLSBydm06ICdydWJ5LWhlYWQnCgogICMgcmV0dXJu
IHJlc3VsdHMgYXMgc29vbiBhcyBtYW5kYXRvcnkgdmVyc2lvbnMgYXJlIGRv
bmUKICBmYXN0X2ZpbmlzaDogdHJ1ZQo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'colorbox',142146,"b'A light-weight, customizable lightbox plugin for jQuery'",b'JavaScript',251,4784,,254,False,b'https://api.github.com/repos/jackmoore/colorbox/forks',"IyMgQWJvdXQgQ29sb3Jib3g6CkEgY3VzdG9taXphYmxlIGxpZ2h0Ym94IHBs
dWdpbiBmb3IgalF1ZXJ5LiAgU2VlIHRoZSBbcHJvamVjdCBwYWdlXShodHRw
Oi8vamFja2xtb29yZS5jb20vY29sb3Jib3gvKSBmb3IgZG9jdW1lbnRhdGlv
biBhbmQgYSBkZW1vbnN0cmF0aW9uLCBhbmQgdGhlIFtGQVFdKGh0dHA6Ly9q
YWNrbG1vb3JlLmNvbS9jb2xvcmJveC9mYXEvKSBmb3Igc29sdXRpb25zIGFu
ZCBleGFtcGxlcyB0byBjb21tb24gaXNzdWVzLiAgUmVsZWFzZWQgdW5kZXIg
dGhlIFtNSVQgbGljZW5zZV0oaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9s
aWNlbnNlcy9taXQtbGljZW5zZS5waHApLgoKIyMgQ2hhbmdlbG9nOgoKIyMj
IyMgVmVyc2lvbiAxLjYuNCAtIDIwMTYvMDUvMTAKCiogRml4ZWQgYnVnIHdo
ZXJlIHVzaW5nIHRoZSBpbmxpbmUgcHJvcGVydHkgd291bGQgZHVwbGljYXRl
IHRhcmdldCBlbGVtZW50cywgaWYgdGhlIHNlbGVjdG9yIG1hdGNoZWQgbXVs
dGlwbGUgZWxlbWVudHMuCgojIyMjIyBWZXJzaW9uIDEuNi4zIC0gMjAxNS8w
Ny8yNwoKKiBGaXhlZCByZWdyZXNzaW9uIHRoYXQgY2F1c2VkIGVycm9yIGlu
IElFOCB3aGVuIHRoZSBjYWxjdWxhdGVkIGluaXRpYWwgc2l6ZSB3YXMgbmVn
YXRpdmUuIEZpeGVzICM3NDEKCiMjIyMjIFZlcnNpb24gMS42LjIgLSAyMDE1
LzA3LzEzCgoqIEZpeGVkIGlmcmFtZSBhdHRyaWJ1dGUgbmFtZSAoYWxsb3dG
dWxsU2NyZWVuIHRvIGFsbG93RnVsbHNjcmVlbikuIEZpeGVzICM3MzcKCiMj
IyMjIFZlcnNpb24gMS42LjEgLSAyMDE1LzA1LzE0CgoqIFJlcGxhY2VkIHRo
ZSBpbmxpbmUgb25jbGljayBoYW5kbGVyIGZvciBjYm94UGhvdG8gd2l0aCBh
IG5hbWVzcGFjZWQgZXZlbnQgZm9yIGVhc2llciB1bmJpbmRpbmcuICBGaXhl
cyAjNzE5LgoKIyMjIyMgVmVyc2lvbiAxLjYuMCAtIDIwMTUvMDMvMDMKCiog
QWRkZWQgdHdvIG5ldyBwcm9wZXJ0aWVzIHRoYXQgZXhwb3NlIGhvdyBgPGlt
Zz5gIGFuZCBgPGlmcmFtZT5gIGVsZW1lbnRzIGFyZSBjcmVhdGVkLCB0byBn
aXZlIHVzZXJzIGRpcmVjdCBjb250cm9sIG92ZXIgdGhvc2UgZWxlbWVudHMu
IEZpeGVzICM3MDAuCgojIyMjIyBWZXJzaW9uIDEuNS4xNSAtIDIwMTUvMDIv
MjUKCiogQWRkaW5nIHRvIE5QTSwgbWVyZ2VkIHdoaXRlLXNwYWNlIGNsZWFu
dXAgJiBuZXcgbGFuZ3VhZ2UgZmlsZS4KCiMjIyMjIFZlcnNpb24gMS41LjE0
IC0gMjAxNC85LzkKCiogV2hlbiBvcGVuaW5nLCBhcHBlbmQgQ29sb3Jib3gg
dG8gdGhlIERPTSBpZiBpdCB3YXMgZGV0YWNoZWQgZm9yIHdoYXRldmVyIHJl
YXNvbi4gIEZpeGVzICM2NDUuCgojIyMjIyBWZXJzaW9uIDEuNS4xMyAtIDIw
MTQvOC80CgoqIEZpeGVkIHJlZ3Jlc3Npb24gaW50cm9kdWNlZCB3aXRoIHYx
LjUuMTIgd2l0aCBsZWdhY3kgdmVyc2lvbnMgb2YgalF1ZXJ5ICgxLjN4LTEu
NngpLiAgUmVmZXJlbmNlcyAjNjI4LgoKIyMjIyMgVmVyc2lvbiAxLjUuMTIg
LSAyMDE0LzcvMzEKCiogQWxsb3dlZCBzZXR0aW5nIHRoZSBvdmVybGF5IG9w
YWNpdHkgdmlhIENTUywgYnkgc2V0dGluZyBDb2xvcmJveCdzIG9wYWNpdHkg
cHJvcGVydHkgdG8gZmFsc2UuICBSZWZlcmVuY2VzICM2MjguCgojIyMjIyBW
ZXJzaW9uIDEuNS4xMSAtIDIwMTQvNy8zMQoKKiBGaXhlZCBidWcgd2hlcmUg
c2V0dGluZyBvcGFjaXR5IHRvIDAgd2FzIGlnbm9yZWQuIEZpeGVzICM2Mjgu
CgojIyMjIyBWZXJzaW9uIDEuNS4xMCAtIDIwMTQvNi8yNgoKKiBNaW5vciBt
aXNjLiB0d2Vha3MgKG1lcmdpbmcgcHVsbCByZXF1ZXN0cyAjNjExLCAjNjEy
LCAjNjE1LCAjNjE5LCAjNjIwKS4KCiMjIyMjIFZlcnNpb24gMS41LjkgLSAy
MDE0LzQvMjUKCiogRml4ZWQgaW5saW5lIGNvbnRlbnQgYnVnIHdoZW4gdXNp
bmcgY2hpbGQgc2VsZWN0b3JzLiAgRml4ZXMgIzU5OQoKIyMjIyMgVmVyc2lv
biAxLjUuOCAtIDIwMTQvNC8xNQoKKiBGaXhlZCBhY2NpZGVudGFsIGxlYWsg
b2YgZ2xvYmFsIHZhcmlhYmxlLiAgUmVmZXJlbmNlcyAjNTkxCiogRW5hYmxl
ZCBzdHJpY3QgbW9kZS4gRml4ZXMgIzU5NwoKIyMjIyMgVmVyc2lvbiAxLjUu
NyAtIDIwMTQvNC8xNQoKKiBGaXggcG90ZW50aWFsIGVycm9yIHdoZW4gY2Fs
bGluZyBDb2xvcmJveCBkaXJlY3RseS4gUmVmZXJlbmNlcyAjNTkxCiogUG90
ZW50aWFsbHkgd29ya2VkIGFyb3VuZCBicm93c2VyIGxpbWl0YXRpb24gb2Yg
cmVwb3J0aW5nIHRoYXQgYW4gaW1hZ2UgaGVpZ2h0IGFuZCB3aWR0aCBpcyAw
IGltbWVkaWF0ZWx5IGFmdGVyIG9ubG9hZC4gIEZpeGVzICM1MzUKCiMjIyMj
IFZlcnNpb24gMS41LjYgLSAyMDE0LzQvNAoKKiBBcHBsaWVkIG1heFdpZHRo
IGFuZCBtYXhIZWlnaHQgdG8gdGhlIGluaXRpYWxXaWR0aCBhbmQgaW5pdGlh
bEhlaWdodC4gIEZpeGVzICMzOTEKCiMjIyMjIFZlcnNpb24gMS41LjUgLSAy
MDE0LzMvMTMKCiogQWxsb3cgc2V0dGluZyB0aGUgb3ZlcmxheSBvcGFjaXR5
IHRocm91Z2ggQ1NTLCByYXRoZXIgdGhhbiBoYXZpbmcgdG8gdXNlIENvbG9y
Ym94J3Mgb3BhY2l0eSBwcm9wZXJ0eS4gIEZpeGVzICM1ODAKCiMjIyMjIFZl
cnNpb24gMS41LjQgLSAyMDE0LzMvNwoKKiBGaXhlZCBwb3RlbnRpYWwgaXNz
dWUgd2hlcmUgSUU5KyB3b3VsZG4ndCBjbG9zZSB0aGUgbW9kYWwgd2hlbiBj
bGlja2luZyBvbiB0aGUgb3ZlcmxheS4gIEZpeGVzICM1NzYKCiMjIyMjIFZl
cnNpb24gMS41LjMgLSAyMDE0LzMvNAoKKiBBZGRlZCBhY2Nlc3MgdG8gc2V0
dGluZ3Mgb2JqZWN0IGluIGNhbGxiYWNrcy4KCiMjIyMjIFZlcnNpb24gMS41
LjIgLSAyMDE0LzIvMjgKCiogQWRkZWQgc3ZnIHRvIGltYWdlIHR5cGVzIHJl
Z2V4LgoKIyMjIyMgVmVyc2lvbiAxLjUuMSAtIDIwMTQvMi8yNwoKKiBGaXhl
ZCByZWdyZXNzaW9uIHRoYXQgYnJva2UgZGlyZWN0IGNhbGxzIHRvIENvbG9y
Ym94LCBpZS4gJC5jb2xvcmJveCjigKYpCgojIyMjIyBWZXJzaW9uIDEuNS4w
IC0gMjAxNC8yLzI3CgoqIENoYW5nZWQgd2hlbiB0aGUgY2xhc3NOYW1lIGlz
IGFwcGxpZWQ6IGltbWVkaWF0ZWx5IG9uIG9wZW4sIGJ1dCBvbmx5IHVwZGF0
ZWQgaW1tZWRpYXRlbHkgcHJpb3IgdG8gdHJhbnNpdGlvbi4gIEZpeGVzICM1
NjUKKiBGaXhlZCBwb3RlbnRpYWwgc3R5bGUgZmxhc2ggaWYgI2Nib3hMb2Fk
ZWRDb250ZW50IGlzIGdpdmVuIGEgYmFja2dyb3VuZC4gIEZpeGVzICM1NjcK
KiBNaXNjLiBjb2RlIGNsZWFudXAKCiMjIyMjIFZlcnNpb24gMS40LjM3IC0g
MjAxNC8yLzExCgoqIEZpeGVkIHBvdGVudGlhbCBlcnJvciB3aGVuIHJlc2l6
aW5nLiAgRml4ZXMgIzI1NAoqIEFkZGVkIE1pY3Jvc29mdCdzIEpQRUcgWFIg
dG8gcGhvdG8gZGV0ZWN0aW9uIHJlZ2V4LgoKIyMjIyMgVmVyc2lvbiAxLjQu
MzMgLSAyMDEzLzEwLzMxCgoqIEZpeGVkIGFuIGlzc3VlIHdoZXJlIHByaXZh
dGUgZXZlbnRzIHByb3BhZ2F0ZWQgdG8gdGhlIGRvY3VtZW50IGluIHZlcnNp
b25zIG9mIGpRdWVyeSBwcmlvciB0byAxLjcuICBGaXhlcyAjNTI1LCBGaXhl
cyAjNTI2CgojIyMjIyBWZXJzaW9uIDEuNC4zMiAtIDIwMTMvMTAvMTYKCiog
VXBkYXRlZCBzdHlsZXNoZWV0cyB0byBhdm9pZCBpc3N1ZSB3aXRoIHVzaW5n
IGBkaXYge21heC13aWR0aDoxMDAlfWAgKEZpeGVzICM1MjApCgojIyMjIyBW
ZXJzaW9uIDEuNC4zMSAtIDIwMTMvOS8yNQoKKiBVc2VkIHNldEF0dHJpYnV0
ZSB0byBzZXQgbG9uZGVzYywgc28gdGhhdCB0aGUgdmFsdWUgaXMgYWNjZXNz
aWJsZSB2aWEgRE9NIE5vZGUgbG9uZ0Rlc2MgcHJvcGVydHkgIzUwOAoKIyMj
IyMgVmVyc2lvbiAxLjQuMzAgLSAyMDEzLzkvMjQKCiogQWRkZWQgbG9uZ2Rl
c2MgYW5kIGFyaWEtZGVzY3JpYmVkYnkgYXR0cmlidXRlcyB0byBwaG90b3Mu
ICBGaXhlcyAjNTA4CgojIyMjIyBWZXJzaW9uIDEuNC4yOSAtIDIwMTMvOS8x
MAoKKiBGaXhlZCBhIHNsaWRlc2hvdyByZWdyZXNzaW9uIGZyb20gMS40LjI3
CiogRml4ZWQgYSBwb3RlbnRpYWwgaXNzdWUgd2l0aCB0aGUgc3RhcnRpbmcg
c2l6ZSBvZiAjY2JveExvYWRlZENvbnRlbnQKCiMjIyMjIFZlcnNpb24gMS40
LjI4IC0gMjAxMy85LzQKCiogRml4ZWQgYSBwb3RlbnRpYWwgaXNzdWUgd2l0
aCB1c2luZyB0aGUgb3BlbiBwcm9wZXJ0eSB3aXRoIG1peGVkIHNsaWRlc2hv
dyBhbmQgbm9uLXNsaWRlc2hvdyBncm91cHMKCiMjIyMjIFZlcnNpb24gMS40
LjI3IC0gMjAxMy83LzE2CgoqIEZpeGVkIGEgd2lkdGggY2FsY3VsYXRpb24g
aXNzdWUgcmVsYXRpbmcgdG8gdXNpbmcgbWFyZ2luOmF1dG8gb24gI2Nib3hM
b2FkZWRDb250ZW50LgoKIyMjIyMgVmVyc2lvbiAxLjQuMjYgLSAyMDEzLzYv
MzAKCiogRml4ZWQgYSByZWdyZXNzaW9uIGluIElFNyBhbmQgSUU4IHRoYXQg
d2FzIGNhdXNpbmcgYW4gZXJyb3IuCgojIyMjIyBWZXJzaW9uIDEuNC4yNSAt
IDIwMTMvNi8yOAoKKiBVc2UgYW4gYW5pbWF0aW9uIHNwZWVkIG9mIHplcm8g
YmV0d2VlbiBzYW1lLXNpemVkIGNvbnRlbnQgKGZpeGVkKS4KKiBSZW1vdmVk
IHRlbXBvcmFyeSBmaXggZm9yIGpRdWVyeSBVSSAxLjgKCiMjIyMjIFZlcnNp
b24gMS40LjI0IC0gMjAxMy82LzI0CgoqIEFkZGVkIGNsb3NlQnV0dG9uIG9w
dGlvbi4gIFNldCB0byBmYWxzZSB0byByZW1vdmUgdGhlIGNsb3NlIGJ1dHRv
bi4KCiMjIyMjIFZlcnNpb24gMS40LjIzIC0gMjAxMy82LzIzCgoqIEJ1Z2Zp
eCBsb2FkaW5nIG92ZXJsYXkvZ3JhcGhpYyBhcHBlbmQgb3JkZXIKCiMjIyMj
IFZlcnNpb24gMS40LjIyIC0gMjAxMy82LzE5CgoqIFVwZGF0ZWQgbWFuaWZl
c3QgZmlsZXMgZm9yIHRoZSBqUXVlcnkgcGx1Z2luIHJlcG9zaXRvcnkgYW5k
IEJvd2VyIChubyBjaGFuZ2VzIHRvIHBsdWdpbikKCiMjIyMjIFZlcnNpb24g
MS40LjIxIC0gMjAxMy82LzYKCiogUmVwbGFjZWQgbmV3IEltYWdlKCkgd2l0
aCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKSB0byBhdm9pZCBhIHBv
dGVudGlhbCBidWcgaW4gQ2hyb21lIDI3LgoKIyMjIyMgVmVyc2lvbiAxLjQu
MjAgLSAyMDEzLzYvNQoKKiBGaXhpbmcgYnVnL3R5cG8gZnJvbSBsYXN0IHVw
ZGF0ZS4KCiMjIyMjIFZlcnNpb24gMS40LjE5IC0gMjAxMy82LzMKCiogRml4
ZWQgYnVnIHdoZXJlIENvbG9yYm94IHdhcyBjYXB0dXJpbmcgY3RybCtjbGlj
ayBvbiBhc3NpZ25lZCBsaW5rcyBvbiB3aW5kb3dzIGJyb3dzZXJzIHdpdGgg
alF1ZXJ5IDEuNyssIHJhdGhlciB0aGFuIGlnbm9yaW5nLgoKIyMjIyMgVmVy
c2lvbiAxLjQuMTggLSAyMDEzLzUvMzAKCiogRml4ZWQgYSBzY3JvbGwgcG9z
aXRpb24gaXNzdWUgd2hlbiB1c2luZyAkLmNvbG9yYm94LnJlc2l6ZSgpCgoj
IyMjIyBWZXJzaW9uIDEuNC4xNyAtIDIwMTMvNS8yMwoKKiBQb3NzaWJsZSBm
aXggZm9yIGEgQ2hyb21lIDI3IGlzc3VlIChodHRwczovL2dpdGh1Yi5jb20v
amFja21vb3JlL2NvbG9yYm94L3B1bGwvNDM4I2lzc3VlY29tbWVudC0xODMz
NDgwNCkKCiMjIyMjIFZlcnNpb24gMS40LjE2IC0gMjAxMy81LzIwCgoqIEFk
ZGVkIHRyYXBGb2N1cyBzZXR0aW5nIHRvIGFsbG93IGRpc2FibGluZyBvZiBm
b2N1cyB0cmFwcGluZwoKIyMjIyMgVmVyc2lvbiAxLjQuMTUgLSAyMDEzLzQv
MjIKCiogQWRkZWQgLndlYnAgdG8gbGlzdCBvZiByZWNvZ25pemVkIGltYWdl
IGV4dGVuc2lvbnMKCiMjIyMjIFZlcnNpb24gMS40LjE0IC0gMjAxMy80LzE2
CgoqIEFkZGVkIGZhZGVPdXQgcHJvcGVydHkgdG8gY29udHJvbCB0aGUgY2xv
c2luZyBmYWRlT3V0IHNwZWVkLgoqIFJlbW92ZWQgbG9uZ2Rlc2MgYXR0cmli
dXRlIGZvciBub3cuCgojIyMjIyBWZXJzaW9uIDEuNC4xMyAtIDIwMTMvNC8x
MQoKKiBGaXhlZCBhbiBlcnJvciBpbnZvbHZpbmcgSUU3L0lFOCBhbmQgbGVn
YWN5IHZlcnNpb25zIG9mIGpRdWVyeQoKIyMjIyMgVmVyc2lvbiAxLjQuMTIg
LSAyMDEzLzQvOQoKKiBGaXhlZCBhIHBvdGVudGlhbCBjb25mbGljdCB3aXRo
IFR3aXR0ZXIgQm9vdHN0cmFwIGRlZmF1bHQgaW1nIHN0eWxlcy4KCiMjIyMj
IFZlcnNpb24gMS40LjExIC0gMjAxMy80LzkKCiogQWRkZWQgYHR5cGU9J2J1
dHRvbidgIHRvIGJ1dHRvbnMgdG8gcHJldmVudCBhY2NpZGVudGFsIGZvcm0g
c3VibWlzc2lvbgoqIEFkZGVkIGFsdCBhbmQgbG9uZ2Rlc2MgYXR0cmlidXRl
cyB0byBwaG90byBjb250ZW50IGlmIHRoZXkgYXJlIHByZXNlbnQgb24gdGhl
IGNhbGxpbmcgZWxlbWVudC4KCiMjIyMjIFZlcnNpb24gMS40LjEwIC0gMjAx
My80LzIKCiogQmV0dGVyICdvbGQgSUUnIGZlYXR1cmUgZGV0ZWN0aW9uIHRo
YXQgZml4ZXMgYW4gZXJyb3Igd2l0aCBqUXVlcnkgMi4wLjBwcmUuCgojIyMj
IyBWZXJzaW9uIDEuNC45IC0gMjAxMy80LzIKCiogRml4ZXMgYnVnIGludHJv
ZHVjZWQgaW4gcHJldmlvdXMgdmVyc2lvbi4KCiMjIyMjIFZlcnNpb24gMS40
LjggLSAyMDEzLzQvMgoKKiBEcm9wcGVkIElFNiBzdXBwb3J0LgoqIEZpeGVk
IG90aGVyIGlzc3VlcyB3aXRoICQuY29sb3Jib3gucmVtb3ZlLgoKIyMjIyMg
VmVyc2lvbiAxLjQuNyAtIDIwMTMvNC8xCgoqIFByZXZlbnRlZCBhbiBlcnJv
ciBpZiAkLmNvbG9yYm94LnJlbW92ZSBpcyBjYWxsZWQgZHVyaW5nIHRoZSB0
cmFuc2l0aW9uLgoKIyMjIyMgVmVyc2lvbiAxLjQuNiAtIDIwMTMvMy8xOQoK
KiBNaW5vciBjaGFuZ2UgdG8gd29yayBhcm91bmQgYSBqUXVlcnkgMS40LjIg
YnVnIGZvciBsZWdhY3kgdXNlcnMuCgojIyMjIyBWZXJzaW9uIDEuNC41IC0g
MjAxMy8zLzEwCgoqIE1pbm9yIGNoYW5nZSB0byBhcHBseSB0aGUgY2xvc2Ug
YW5kIGNsYXNzTmFtZSBwcm9wZXJ0aWVzIHNvb25lci4KCiMjIyMjIFZlcnNp
b24gMS40LjQgLSAyMDEzLzMvMTAKCiogRml4ZWQgYW4gaXNzdWUgd2l0aCBw
ZXJjZW50LWJhc2VkIGhlaWdodHMgaW4gaU9TCiogRml4ZWQgYW4gaXNzdWUg
d2l0aCBhamF4IHJlcXVlc3RzIGJlaW5nIGFwcGxpZWQgYXQgdGhlIHdyb25n
IHRpbWUuCgojIyMjIyBWZXJzaW9uIDEuNC4zIC0gMjAxMy8yLzE4CgoqIE1h
ZGUgaW1hZ2UgcHJlbG9hZGluZyBhd2FyZSBvZiByZXRpbmEgc2V0dGluZ3Mu
CgojIyMjIyBWZXJzaW9uIDEuNC4yIC0gMjAxMy8yLzE4CgoqIFJlbW92ZWQg
JC5jb250YWlucyBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIGpRdWVyeSAxLjMu
eAoKIyMjIyMgVmVyc2lvbiAxLjQuMSAtIDIwMTMvMi8xNAoKKiBJZ25vcmVk
IGxlZnQgYW5kIHJpZ2h0IGFycm93IGtleXByZXNzZXMgaWYgY29tYmluZWQg
d2l0aCB0aGUgYWx0IGtleS4KCiMjIyMjIFZlcnNpb24gMS40LjAgLSAyMDEz
LzIvMTIKCiogQmV0dGVyIGFjY2Vzc2liaWxpdHk6CgkqIFJlcGxhY2VkIGRp
diBjb250cm9scyB3aXRoIGJ1dHRvbnMKCSogVGFiYmVkIG5hdmlnYXRpb24g
Y29uZmluZWQgdG8gbW9kYWwgd2luZG93CgkqIEFkZGVkIGFyaWEgcm9sZQoK
IyMjIyMgVmVyc2lvbiAxLjMuMzQgLSAyMDEzLzIvNAoKKiBVcGRhdGVkIG1h
bmlmZXN0IGZvciBwbHVnaW5zLmpxdWVyeS5jb20KCiMjIyMjIFZlcnNpb24g
MS4zLjMzIC0gMjAxMy8yLzQKCiogQWRkZWQgcmV0aW5hIGRpc3BsYXkgcHJv
cGVydGllczogcmV0aW5hSW1hZ2UsIHJldGluYVVybCwgcmV0aW5hU3VmZml4
CiogRml4ZWQgaWZyYW1lIHNjcm9sbGluZyBvbiBpT1MgZGV2aWNlcy4KCiMj
IyMjIFZlcnNpb24gMS4zLjMyIC0gMjAxMy8xLzMxCgoqIEltcHJvdmVkIGlu
dGVybmFsIGV2ZW50IHN1YnNjcmliaW5nICYgZml4ZWQgZXZlbnQgYnVnIGlu
dHJvZHVjZWQgaW4gdjEuMy4yMQoKIyMjIyMgVmVyc2lvbiAxLjMuMzEgLSAy
MDEzLzEvMjgKCiogRml4ZWQgYSBzaXplLWNhbGN1bGF0aW9uIGJ1ZyBpbnRy
b2R1Y2VkIGluIHRoZSBwcmV2aW91cyBjb21taXQuCgojIyMjIyBWZXJzaW9u
IDEuMy4zMCAtIDIwMTMvMS8yNQoKKiBEZWxheWVkIGJvcmRlci13aWR0aCBj
YWxjdWxhdGlvbnMgdW50aWwgYWZ0ZXIgb3BlbmluZywgdG8gYXZvaWQgYSBi
dWcgaW4gRkYgd2hlbiB1c2luZyBDb2xvcmJveCBpbiBhIGhpZGRlbiBpZnJh
bWUuCgojIyMjIyBWZXJzaW9uIDEuMy4yOSAtIDIwMTMvMS8yNAoKKiBGaXhl
cyBidWcgd2l0aCBidWJibGluZyBkZWxlZ2F0ZWQgZXZlbnRzLCBpbnRyb2R1
Y2VkIGluIHRoZSBwcmV2aW91cyBjb21taXQuCgojIyMjIyBWZXJzaW9uIDEu
My4yOCAtIDIwMTMvMS8yNAoKKiBGaXhlZCBjb21wYXRpYmlsaXR5IGlzc3Vl
IHdpdGggb2xkIHZlcnNpb25zIG9mIGpRdWVyeSAoMS4zLjItMS40LjIpCgoj
IyMjIyBWZXJzaW9uIDEuMy4yNyAtIDIwMTMvMS8yMwoKKiBBZGRlZCBjbGFz
c05hbWUgcHJvcGVydHkuCgojIyMjIyBWZXJzaW9uIDEuMy4yNiAtIDIwMTMv
MS8yMwoKKiBNaW5vciBidWdmaXg6IGNsZWFyIHRoZSBvbmxvYWQgZXZlbnQg
aGFuZGxlciBhZnRlciBwaG90byBoYXMgbG9hZGVkLgoKIyMjIyMgVmVyc2lv
biAxLjMuMjUgLSAyMDEzLzEvMjMKCiogUmVtb3ZlZCBncnVudCBmaWxlICYg
YWRkZWQgQm93ZXIgY29tcG9uZW50Lmpzb24uCgojIyMjIyBWZXJzaW9uIDEu
My4yNCAtIDIwMTMvMS8yMgoKKiBBZGRlZCBnZW5lcmF0ZWQgZmlsZXMgKGpx
dWVyeS5jb2xvcmJveC5qcyAvIGpxdWVyeS5jb2xvcmJveC1taW4uanMpIGJh
Y2sgdG8gdGhlIHJlcG9zaXRvcnkuCgojIyMjIyBWZXJzaW9uIDEuMy4yMyAt
IDIwMTMvMS8xOAoKKiBNaW5vciBidWdmaXggZm9yIGNhbGxpbmcgQ29sb3Ji
b3ggb24gZW1wdHkgalF1ZXJ5IGNvbGxlY3Rpb25zIHdpdGhvdXQgYSBzZWxl
Y3Rvci4KCiMjIyMjIFZlcnNpb24gMS4zLjIyIC0gMjAxMy8xLzE3CgoqIFJl
Y29tbWl0IGZvciBwbHVnaW5zLmpxdWVyeS5jb20KCiMjIyMjIFZlcnNpb24g
MS4zLjIxIC0gMjAxMy8xLzE1CkZpbGVzIENoYW5nZWQ6ICouanMKCiogRml4
ZWQgY29tcGF0aWJpbGl0eSBpc3N1ZXMgd2l0aCBqUXVlcnkgMS45CgojIyMj
IyBWZXJzaW9uIDEuMy4yMCAtIEF1Z3VzdCAxNSAyMDEyCkZpbGVzIENoYW5n
ZWQ6anF1ZXJ5LmNvbG9yYm94LmpzCgoqIEFkZGVkIHRlbXBvcmFyeSB3b3Jr
YXJvdW5kIGZvciBqUXVlcnktVUkgMS44IGJ1ZyAoaHR0cDovL2J1Z3MuanF1
ZXJ5LmNvbS90aWNrZXQvMTIyNzMpCiogQWRkZWQgKi5qcGUgZXh0ZW5zaW9u
IHRvIHRoZSBsaXN0IG9mIGltYWdlIHR5cGVzLgoKIyMjIyMgVmVyc2lvbiAx
LjMuMTkgLSBEZWNlbWJlciAwOCAyMDExCkZpbGVzIENoYW5nZWQ6anF1ZXJ5
LmNvbG9yYm94LmpzLCBjb2xvcmJveC5jc3MgKGFsbCkKCiogRml4ZWQgYnVn
IHJlbGF0ZWQgdG8gdXNpbmcgdGhlICdmaXhlZCcgcHJvcGVydHkuCiogT3B0
aW1pemVkIHRoZSBzZXR1cCBwcm9jZWR1cmUgdG8gYmUgbW9yZSBlZmZpY2ll
bnQuCiogUmVtb3ZlZCAkLmNvbG9yYm94LmluaXQoKSBhcyBpdCB3aWxsIG5v
IGxvbmdlciBiZSBuZWVkZWQgKHdpbGwgc2VsZi1pbml0IHdoZW4gY2FsbGVk
KS4KKiBSZW1vdmVkIHVzZSBvZiAkLmJyb3dzZXIuCgojIyMjIyBWZXJzaW9u
IDEuMy4xOCAtIE9jdG9iZXIgMDcgMjAxMQpGaWxlcyBDaGFuZ2VkOmpxdWVy
eS5jb2xvcmJveC5qcy9qcXVlcnkuY29sb3Jib3gtbWluLmpzLCBjb2xvcmJv
eC5jc3MgKGFsbCkgYW5kIGV4YW1wbGUgMSdzIGNvbnRyb2xzLnBuZwoKKiBG
aXhlZCBhIHJlZ3Jlc3Npb24gd2hlcmUgRmxhc2ggY29udGVudCBkaXNwbGF5
ZWQgaW4gQ29sb3Jib3ggd291bGQgYmUgcmVsb2FkZWQgaWYgdGhlIGJyb3dz
ZXIgd2luZG93IHdhcyByZXNpemVkLgoqIEFkZGVkIHNhZmV0eSBjaGVjayB0
byBtYWtlIHN1cmUgdGhhdCBDb2xvcmJveCdzIG1hcmt1cCBpcyBvbmx5IGFk
ZGVkIHRvIHRoZSBET00gYSBzaW5nbGUgdGltZSwgZXZlbiBpZiAkLmNvbG9y
Ym94LmluaXQoKSBpcyBjYWxsZWQgbXVsdGlwbGUgdGltZXMuICBUaGlzIHdp
bGwgYWxsb3cgc2l0ZSBvd25lcnMgdG8gbWFudWFsbHkgaW5pdGlhbGl6ZSBD
b2xvcmJveCBpZiB0aGV5IG5lZWQgaXQgYmVmb3JlIHRoZSBET00gaGFzIGZp
bmlzaGVkIGxvYWRpbmcuCiogVXBkYXRlZCB0aGUgZXhhbXBsZSBpbmRleC5o
dG1sIGZpbGVzIHRvIGJlIEhUTUw1IGNvbXBsaWFudC4KKiBDaGFuZ2VkIHRo
ZSBzbGlkZXNob3cgYmVoYXZpb3Igc28gdGhhdCBpdCBpbW1lZGlhdGVseSBt
b3ZlcyB0byB0aGUgbmV4dCBzbGlkZSB3aGVuIHRoZSBzbGlkZXNob3cgaXMg
c3RhcnRlZC4KKiBNaW5vciByZWdleCBidWdmaXggdG8gYWxsb3cgYXV0b21h
dGljIGRldGVjdGlvbiBvZiBpbWFnZSBVUkxzIHRoYXQgaW5jbHVkZSBmcmFn
bWVudHMuCgojIyMjIyBWZXJzaW9uIDEuMy4xNyAtIE1heSAxMSAyMDExCkZp
bGVzIENoYW5nZWQ6anF1ZXJ5LmNvbG9yYm94LmpzL2pxdWVyeS5jb2xvcmJv
eC1taW4uanMKCiogQWRkZWQgcHJvcGVydGllcyAidG9wIiwgImJvdHRvbSIs
ICJsZWZ0IiBhbmQgInJpZ2h0IiB0byBzcGVjaWZ5IGEgcG9zaXRpb24gcmVs
YXRpdmUgdG8gdGhlIHZpZXdwb3J0LCByYXRoZXIgdGhhbiB1c2luZyB0aGUg
ZGVmYXVsdCBjZW50ZXJpbmcuCiogQWRkZWQgcHJvcGVydHkgImRhdGEiIHRv
IHNwZWNpZnkgR0VUIG9yIFBPU1QgZGF0YSB3aGVuIHVzaW5nIEFqYXguICBD
b2xvcmJveCdzIGFqYXggZnVuY3Rpb25hbGl0eSBpcyBoYW5kbGVkIGJ5IGpR
dWVyeSdzIC5sb2FkKCkgbWV0aG9kLCBzbyB0aGUgZGF0YSBwcm9wZXJ0eSB3
b3JrcyB0aGUgc2FtZSB3YXkgYXMgaXQgZG9lcyB3aXRoIC5sb2FkKCkuCiog
QWRkZWQgcHJvcGVydHkgImZpeGVkIiB3aGljaCBjYW4gcHJvdmlkZSBmaXhl
ZCBwb3NpdGlvbmluZyBmb3IgQ29sb3Jib3gsIHJhdGhlciB0aGFuIGFic29s
dXRlIHBvc2l0aW9uaW5nLiAgVGhpcyB3aWxsIGFsbG93IENvbG9yYm94IHRv
IHJlbWFpbiBpbiBhIGZpeGVkIHBvc2l0aW9uIHdpdGhpbiB0aGUgdmlzaXRv
cnMgdmlld3BvcnQsIGRlc3BpdGUgc2Nyb2xsaW5nLiAgSUU2IHN1cHBvcnQg
Zm9yIHRoaXMgd2FzIG5vdCBhZGRlZCwgaXQgd2lsbCBjb250aW51ZSB0byB1
c2UgdGhlIGRlZmF1bHQgYWJzb2x1dGUgcG9zaXRpb25pbmcuCiogRml4ZWQg
Q2xlYXJUeXBlIHByb2JsZW0gd2l0aCBJRTcuCiogTWlub3IgZml4ZXMuCgoj
IyMjIyBWZXJzaW9uIDEuMy4xNiAtIE1hcmNoIDAxIDIwMTEKRmlsZXMgQ2hh
bmdlZDpqcXVlcnkuY29sb3Jib3guanMvanF1ZXJ5LmNvbG9yYm94LW1pbi5q
cywgY29sb3Jib3guY3NzIChhbGwpIGFuZCBleGFtcGxlIDQgYmFja2dyb3Vu
ZCBwbmcgZmlsZXMKCiogQmV0dGVyIElFIHJlbGF0ZWQgdHJhbnNwYXJlbmN5
IHdvcmthcm91bmRzLiAgSUU3IGFuZCB1cCBub3cgdXNlcyB0aGUgc2FtZSBi
YWNrZ3JvdW5kIGltYWdlIHNwcml0ZSBhcyBvdGhlciBicm93c2Vycy4KKiBB
ZGRlZCBlcnJvciBoYW5kbGluZyBmb3IgYnJva2VuIGltYWdlIGxpbmtzLiBB
IG1lc3NhZ2Ugd2lsbCBiZSBkaXNwbGF5ZWQgdGVsbGluZyB0aGUgdXNlciB0
aGF0IHRoZSBpbWFnZSBjb3VsZCBub3QgYmUgbG9hZGVkLgoqIEFkZGVkIG5l
dyBwcm9wZXJ0eTogJ2Zhc3RJZnJhbWUnIGFuZCBzZXQgaXQgdG8gdHJ1ZSBi
eSBkZWZhdWx0LiAgU2V0dGluZyB0byBmYXN0SWZyYW1lOmZhbHNlIHdpbGwg
ZGVsYXkgdGhlIGxvYWRpbmcgZ3JhcGhpYyByZW1vdmFsIGFuZCBvbkNvbXBs
ZXRlIGV2ZW50IHVudGlsIGlmcmFtZSBoYXMgY29tcGxldGVseSBsb2FkZWQu
CiogQWJpbGl0eSB0byByZWRlZmluZSAkLmNvbG9yYm94LmNsb3NlIChvciBw
cmV2LCBvciBuZXh0KSBhdCBhbnkgdGltZS4KCiMjIyMjIFZlcnNpb24gMS4z
LjE1IC0gT2N0b2JlciAyNyAyMDEwCkZpbGVzIENoYW5nZWQ6IGpxdWVyeS5j
b2xvcmJveC5qcy9qcXVlcnkuY29sb3Jib3gtbWluLmpzCgoqIE1pbm9yIGZp
eGVzIGZvciBzcGVjaWZpYyBjYXNlcy4KCiMjIyMjIFZlcnNpb24gMS4zLjE0
IC0gT2N0b2JlciAyNyAyMDEwCkZpbGVzIENoYW5nZWQ6IGpxdWVyeS5jb2xv
cmJveC5qcy9qcXVlcnkuY29sb3Jib3gtbWluLmpzCgoqIEluIElFNiwgY2xv
c2luZyBhbiBpZnJhbWUgd2hlbiB1c2luZyBIVFRQUyBubyBsb25nZXIgZ2Vu
ZXJhdGVzIGEgc2VjdXJpdHkgd2FybmluZy4KCiMjIyMjIFZlcnNpb24gMS4z
LjEzIC0gT2N0b2JlciAyMiAyMDEwCkZpbGVzIENoYW5nZWQ6IGpxdWVyeS5j
b2xvcmJveC5qcy9qcXVlcnkuY29sb3Jib3gtbWluLmpzCgoqIENoYW5nZWQg
dGhlIGluZGV4Lmh0bWwgZXhhbXBsZSBmaWxlcyB0byB1c2UgWW91VHViZSdz
IG5ldyBlbWJlZGRlZCBsaW5rIGZvcm1hdC4KKiBCeSBkZWZhdWx0LCBDb2xv
cmJveCByZXR1cm5zIGZvY3VzIHRvIHRoZSBlbGVtZW50IGl0IHdhcyBsYXVu
Y2hlZCBmcm9tIG9uY2UgaXQgY2xvc2VzLiAgVGhpcyBjYW4gbm93IGJlIGRp
c2FibGVkIGJ5IHNldHRpbmcgdGhlICdyZXR1cm5Gb2N1cycgcHJvcGVydHkg
dG8gZmFsc2UuICBGb2N1cyB3YXMgY2F1c2luZyBwcm9ibGVtcyBmb3Igc29t
ZSB1c2VycyB3aG8gaGFkIHRoZWlyIGFuY2hvciBlbGVtZW50cyBpbnNpZGUg
YW5pbWF0ZWQgY29udGFpbmVycy4KKiBNaW5vciBidWcgZml4IGludm9sdmVk
IGluIHVzaW5nIGEgY29tYmluYXRpb24gb2Ygc2xpZGVzaG93IGFuZCBub24t
c2xpZGVzaG93IGNvbnRlbnQuCgojIyMjIyBWZXJzaW9uIDEuMy4xMiAtIE9j
dG9iZXIgMjAgMjAxMApGaWxlcyBDaGFuZ2VkOiBqcXVlcnkuY29sb3Jib3gu
anMvanF1ZXJ5LmNvbG9yYm94LW1pbi5qcwoKKiBNaW5vciBidWcgZml4IGlu
dm9sdmVkIGluIHByZWxvYWRpbmcgaW1hZ2VzIHdoZW4gdXNpbmcgYSBmdW5j
dGlvbiBhcyBhIHZhbHVlIGZvciB0aGUgaHJlZiBwcm9wZXJ0eS4KCiMjIyMj
IFZlcnNpb24gMS4zLjExIC0gT2N0b2JlciAxOSAyMDEwCkZpbGVzIENoYW5n
ZWQ6IGpxdWVyeS5jb2xvcmJveC5qcy9qcXVlcnkuY29sb3Jib3gtbWluLmpz
CgoqIEZpeGVkIHRoZSBzbGlkZXNob3cgZnVuY3Rpb25hbGl0eSB0aGF0IGJy
b2tlIHdpdGggMS4zLjEwCiogVGhlIHNsaWRlc2hvdyBub3cgcmVzcGVjdHMg
dGhlIGxvb3AgcHJvcGVydHkuCgojIyMjIyBWZXJzaW9uIDEuMy4xMCAtIE9j
dG9iZXIgMTYgMjAxMApGaWxlcyBDaGFuZ2VkOiBqcXVlcnkuY29sb3Jib3gu
anMvanF1ZXJ5LmNvbG9yYm94LW1pbi5qcwoKKiBGaXhlZCBjb21wYXRpYmls
aXR5IHdpdGggalF1ZXJ5IDEuNC4zCiogVGhlICdvcGVuJyBwcm9wZXJ0eSBu
b3cgYWNjZXB0cyBhIGZ1bmN0aW9uIGFzIGEgdmFsdWUsIGxpa2UgYWxsIG9m
IHRoZSBvdGhlciBwcm9wZXJ0aWVzLgoqIFByZWxvYWRpbmcgbm93IGxvYWRz
IHRoZSBjb3JyZWN0IGhyZWYgZm9yIGltYWdlcyB3aGVuIHVzaW5nIGEgZHlu
YW1pYyAoZnVuY3Rpb24pIHZhbHVlIGZvciB0aGUgaHJlZiBwcm9wZXJ0eS4K
KiBGaXhlZCBidWcgaW4gU2FmYXJpIDMgZm9yIFdpbiB3aGVyZSBDb2xvcmJv
eCBjZW50ZXJlZCBvbiB0aGUgZG9jdW1lbnQsIHJhdGhlciB0aGFuIHRoZSB2
aXNpdG9yJ3Mgdmlld3BvcnQuCiogTWF5IGhhdmUgZml4ZWQgYW4gaXNzdWUg
aW4gT3BlcmEgMTAuNisgd2hlcmUgQ29sb3Jib3ggd291bGQgcmFyZWx5L3Jh
bmRvbWx5IGZyZWV6ZSB1cCB3aGlsZSBzd2l0Y2hpbmcgYmV0d2VlbiBwaG90
b3MgaW4gYSBncm91cC4KKiBTb21lIGZ1bmN0aW9uYWxpdHkgYmV0dGVyIGVu
Y2Fwc3VsYXRlZCAmIG1pbm9yIHBlcmZvcm1hbmNlIGltcHJvdmVtZW50cy4K
CiMjIyMjIFZlcnNpb24gMS4zLjkgLSBKdWx5IDcgMjAxMApGaWxlcyBDaGFu
Z2VkOiBqcXVlcnkuY29sb3Jib3guanMvanF1ZXJ5LmNvbG9yYm94LW1pbi5q
cy8gYWxsIGNvbG9yYm94LmNzcyAodGhlIGNvcmUgc3R5bGVzKQoKKiBGaXhl
ZCBhIHByb2JsZW0gd2hlcmUgaWZyYW1lZCB5b3V0dWJlIHZpZGVvcyB3b3Vs
ZCBjYXVzZSBhIHNlY3VyaXR5IGFsZXJ0IGluIElFLgoqIE1vcmUgY29kZSBp
cyBldmVudCBkcml2ZW4gbm93LCBtYWtpbmcgdGhlIHNvdXJjZSBlYXNpZXIg
dG8gZ3Jhc3AuCiogUmVtb3ZlZCBzb21lIHVubmVjZXNzYXJ5IHN0eWxlIGZy
b20gdGhlIGNvcmUgQ1NTLgoKIyMjIyMgVmVyc2lvbiAxLjMuOCAtIEp1bmUg
MjEgMjAxMApGaWxlcyBDaGFuZ2VkOiBqcXVlcnkuY29sb3Jib3guanMvanF1
ZXJ5LmNvbG9yYm94LW1pbi5qcwoKKiBGaXhlZCBhIGJ1ZyBpbiBDaHJvbWUg
d2hlcmUgaXQgd291bGQgc29tZXRpbWVzIHJlbmRlciBwaG90b3MgYXQgMCBi
eSAwIHdpZHRoIGFuZCBoZWlnaHQgKGJlaGF2aW9yIGludHJvZHVjZWQgaW4g
cmVjZW50IHVwZGF0ZSB0byBDaHJvbWUpLgoqIEZpeGVkIGEgYnVnIHdoZXJl
IHRoZSBvbkNsb3NlZCBjYWxsYmFjayB3b3VsZCBmaXJlIHR3aWNlIChvbmx5
IGFmZmVjdGVkIDEuMy43KS4KKiBGaXhlZCBhIGJ1ZyBpbiBJRTcgdGhhdCBl
eGlzdGVkIHdpdGggc29tZSBpZnJhbWVkIHdlYnNpdGVzIHRoYXQgdXNlIEpT
IHRvIHJlcG9zaXRpb24gdGhlIHZpZXdwb3J0IGNhdXNlZCBDb2xvcmJveCB0
byBtb3ZlIG91dCBvZiBwb3NpdGlvbi4KKiBBYnN0cmFjdGVkIHRoZSBpZGVu
dGlmaWVycyAoSFRNTCBpZHMgJiBjbGFzc2VzLCBhbmQgSlMgcGx1Z2luIG5h
bWUsIG1ldGhvZCwgYW5kIGV2ZW50cykgc28gdGhhdCB0aGUgcGx1Z2luIGNh
biBiZSBlYXNpbHkgcmVicmFuZGVkLgoqIFNtYWxsIGNoYW5nZXMgdG8gaW1w
cm92ZSBlaXRoZXIgY29kZSByZWFkYWJpbGl0eSBvciBjb21wcmVzc2lvbi4K
CiMjIyMjIFZlcnNpb24gMS4zLjcgLSBKdW5lIDEzIDIwMTAKRmlsZXMgQ2hh
bmdlZDoganF1ZXJ5LmNvbG9yYm94LmpzL2pxdWVyeS5jb2xvcmJveC1taW4u
anMvaW5kZXguaHRtbAoKKiAkLmNvbG9yYm94IGNhbiBub3cgYmUgdXNlZCBm
b3IgZGlyZWN0IGNhbGxzIGFuZCBhY2Nlc3NpbmcgcHVibGljIG1ldGhvZHMu
IEV4YW1wbGU6ICQuY29sb3Jib3guY2xvc2UoKTsKKiBSZXNpemUgbm93IGFj
Y2VwdHMgJ3dpZHRoJywgJ2lubmVyV2lkdGgnLCAnaGVpZ2h0JyBhbmQgJ2lu
bmVySGVpZ2h0Jy4gRXhhbXBsZTogJC5jb2xvcmJveC5yZXNpemUoe3dpZHRo
OiIxMDAlIn0pCiogQWRkZWQgb3B0aW9uIChsb29wOmZhbHNlKSB0byBkaXNh
YmxlIGxvb3BpbmcgaW4gYSBncm91cC4KKiBBZGRlZCBvcHRpb25zIChlc2NL
ZXk6ZmFsc2UsIGFycm93S2V5OmZhbHNlKSB0byBkaXNhYmxlIGVzYy1rZXkg
YW5kIGFycm93LWtleSBiaW5kaW5ncy4KKiBBZGRlZCBtZXRob2QgZm9yIHJl
bW92aW5nIENvbG9yYm94IGZyb20gYSBkb2N1bWVudDogJC5jb2xvcmJveC5y
ZW1vdmUoKTsKKiBGaXhlZCBhIGJ1ZyB3aGVyZSBpZnJhbWVkIFVSTHMgd291
bGQgYmUgdHJ1bmNhdGVkIGlmIHRoZXkgY29udGFpbmVkIGFuIHVuZW5jb2Rl
ZCBhcG9zdHJvcGhlLgoqIE5vdyB1c2VzIHRoZSBleGFjdCBocmVmIHNwZWNp
ZmllZCBvbiBhbiBhbmNob3IsIHJhdGhlciB0aGFuIHRoZSB2ZXJzaW9uIHJl
dHVybmVkIGJ5ICd0aGlzLmhyZWYnLiBUaGlzIHdhcyBjYXVzaW5nICIjZXhh
bXBsZSIgdG8gYmUgbm9ybWFsaXplZCB0byAiaHR0cDovL2RvbWFpbi8jZXhh
bXBsZSIgd2hpY2ggaW50ZXJmZXJlZCB3aXRoIGhvdyBzb21lIHVzZXJzIHdl
cmUgc2V0dGluZyB1cCBsaW5rcyB0byBpbmxpbmUgY29udGVudC4KKiBDaGFu
Z2VkIGV4YW1wbGUgZG9jdW1lbnRzIG92ZXIgdG8gSFRNTDUuCgojIyMjIyBW
ZXJzaW9uIDEuMy42IC0gSmFuIDEzIDIwMTAKRmlsZXMgQ2hhbmdlZDoganF1
ZXJ5LmNvbG9yYm94LmpzL2pxdWVyeS5jb2xvcmJveC1taW4uanMKCiogU21h
bGwgY2hhbmdlIHRvIG1ha2UgQ29sb3Jib3ggY29tcGF0aWJsZSB3aXRoIGpR
dWVyeSAxLjQKCiMjIyMjIFZlcnNpb24gMS4zLjUgLSBEZWNlbWJlciAxNSAy
MDA5CkZpbGVzIENoYW5nZWQ6IGpxdWVyeS5jb2xvcmJveC5qcy9qcXVlcnku
Y29sb3Jib3gtbWluLmpzCgoqIEZpeGVkIGEgYnVnIGludHJvZHVjZWQgaW4g
MS4zLjQgd2l0aCBJRTcncyBkaXNwbGF5IG9mIGV4YW1wbGUgMiBhbmQgMywg
YW5kIGF1dG8td2lkdGggaW4gT3BlcmEuCiogRml4ZWQgYSBidWcgaW50cm9k
dWNlZCBpbiAxLjMuNCB3aGVyZSBjb2xvcmJveCBjb3VsZCBub3QgYmUgbGF1
bmNoZWQgYnkgdHJpZ2dlcmluZyBhbiBlbGVtZW50J3MgY2xpY2sgZXZlbnQg
dGhyb3VnaCBKYXZhU2NyaXB0LgoqIE1pbm9yIHJlZmluZW1lbnRzLgoKIyMj
IyMgVmVyc2lvbiAxLjMuNCAtIERlY2VtYmVyIDUgMjAwOQpGaWxlcyBDaGFu
Z2VkOiBqcXVlcnkuY29sb3Jib3guanMvanF1ZXJ5LmNvbG9yYm94LW1pbi5q
cwoKKiBFdmVudCBkZWxlZ2F0aW9uIGlzIG5vdyB1c2VkIGZvciBlbGVtZW50
cyB0aGF0IENvbG9yYm94IGlzIGFzc2lnbmVkIHRvLCByYXRoZXIgdGhhbiBp
bmRpdmlkdWFsIGNsaWNrIGV2ZW50cy4KKiBBZGRpdGlvbmFsIGNhbGxiYWNr
cyBoYXZlIGJlZW4gYWRkZWQgdG8gcmVwcmVzZW50IG90aGVyIHN0YWdlcyBv
ZiBDb2xvcmJveCdzIGxpZmVjeWNsZS4gQXZhaWxhYmxlIGNhbGxiYWNrcywg
aW4gb3JkZXIgb2YgdGhlaXIgZXhlY3V0aW9uOiBvbk9wZW4sIG9uTG9hZCwg
b25Db21wbGV0ZSwgb25DbGVhbnVwLCBvbkNsb3NlZCBUaGVzZSB0YWtlIHBs
YWNlIGF0IHRoZSBzYW1lIHRpbWUgYXMgdGhlIGV2ZW50IGhvb2tzLCBidXQg
d2lsbCBiZSBiZXR0ZXIgc3VpdGVkIHRoYW4gdGhlIGhvb2tzIGZvciB0YXJn
ZXRpbmcgc3BlY2lmaWMgaW5zdGFuY2VzIG9mIENvbG9yYm94LgoqIEFqYXgg
Y29udGVudCBpcyBub3cgaW1tZWRpYXRlbHkgYWRkZWQgdG8gdGhlIERPTSB0
byBiZSBtb3JlIGNvbXBhdGlibGUgaWYgdGhhdCBjb250ZW50IGNvbnRhaW5z
IHNjcmlwdCB0YWdzLgoqIEZvY3VzIGlzIG5vdyByZXR1cm5lZCB0byB0aGUg
Y2FsbGluZyBlbGVtZW50IG9uIGNsb3NpbmcuCiogRml4ZWQgYSBidWcgd2hl
cmUgbWF4SGVpZ2h0IGFuZCBtYXhXaWR0aCBkaWQgbm90IHdvcmsgZm9yIG5v
bi1waG90byBjb250ZW50LgoqIERpcmVjdCBjYWxscyBubyBsb25nZXIgbmVl
ZCAnb3Blbjp0cnVlJywgaXQgaXMgYXNzdW1lZC4gIEV4YW1wbGU6IGAkLmNv
bG9yYm94KHtodG1sOic8cD5IaTwvcD4nfSk7YAoKIyMjIyMgVmVyc2lvbiAx
LjMuMyAtIE5vdmVtYmVyIDcgMjAwOQpGaWxlcyBDaGFuZ2VkOiBqcXVlcnku
Y29sb3Jib3guanMvanF1ZXJ5LmNvbG9yYm94LW1pbi5qcwoKKiBDaGFuZ2Vk
ICQuY29sb3Jib3guZWxlbWVudCgpIHRvIHJldHVybiBhIGpRdWVyeSBvYmpl
Y3QgcmF0aGVyIHRoZSBET00gZWxlbWVudC4KKiBqUXVlcnkuY29sb3Jib3gt
bWluLmpzIGlzIGNvbXByZXNzZWQgd2l0aCBHb29nbGUncyBDbG9zdXJlIENv
bXBpbGVyIHJhdGhlciB0aGFuIFlVSSBDb21wcmVzc29yLgoKIyMjIyMgVmVy
c2lvbiAxLjMuMiAtIE9jdG9iZXIgMjcgMjAwOQpGaWxlcyBDaGFuZ2VkOiBq
cXVlcnkuY29sb3Jib3guanMvanF1ZXJ5LmNvbG9yYm94LW1pbi5qcwoKKiBB
ZGRlZCAnaW5uZXJXaWR0aCcgYW5kICdpbm5lckhlaWdodCcgb3B0aW9ucyB0
byBhbGxvdyBwZW9wbGUgdG8gZWFzaWx5IHNldCB0aGUgc2l6ZSBkaW1lbnNp
b25zIGZvciBDb2xvcmJveCwgd2l0aG91dCBoYXZpbmcgdG8gYW50aWNpcGF0
ZSB0aGUgc2l6ZSBvZiB0aGUgYm9yZGVycyBhbmQgYnV0dG9ucy4KKiBSZW5h
bWVkICdzY3JvbGxiYXJzJyBvcHRpb24gdG8gJ3Njcm9sbGluZycgdG8gYmUg
aW4ga2VlcGluZyB3aXRoIHRoZSBleGlzdGluZyBIVE1MIGF0dHJpYnV0ZS4g
VGhlIG9wdGlvbiBub3cgYWxzbyBhcHBsaWVzIHRvIGlmcmFtZXMuCiogQnVn
IGZpeDogSW4gU2FmYXJpLCBwb3NpdGlvbmluZyBvY2Nhc2lvbmFsbHkgaW5j
b3JyZWN0IHdoZW4gdXNpbmcgJzEwMCUnIGRpbWVuc2lvbnMuCiogQnVnIGZp
eDogSW4gSUU2LCB0aGUgYmFja2dyb3VuZCBvdmVybGF5IGlzIGJyaWVmbHkg
bm90IGZ1bGwgc2l6ZSB3aGVuIGZpcnN0IHZpZXdpbmcuCiogQnVnIGZpeDog
SW4gRmlyZWZveCwgb3BlbmluZyBDb2xvcmJveCBjYXVzZXMgYSBzcGxpdCBz
ZWNvbmQgc2hpZnQgd2l0aCBhIHNtYWxsIG1pbm9yaXR5IG9mIHdlYnBhZ2Ug
bGF5b3V0cy4KKiBTaW1wbGlmaWVkIGNvZGUgaW4gYSBmZXcgYXJlYXMuCgoj
IyMjIyBWZXJzaW9uIDEuMy4xIC0gU2VwdGVtYmVyIDE2IDIwMDkKRmlsZXMg
Q2hhbmdlZDoganF1ZXJ5LmNvbG9yYm94LmpzL2pxdWVyeS5jb2xvcmJveC1t
aW4uanMvY29sb3Jib3guY3NzL2NvbG9yYm94LWllLmNzcyhyZW1vdmVkKQoK
KiBSZW1vdmVkIHRoZSBJRS1vbmx5IHN0eWxlc2hlZXRzIGFuZCBjb25kaXRp
b25hbCBjb21tZW50cyBmb3IgZXhhbXBsZSBzdHlsZXMgMSAmIDQuICBBbGwg
Q1NTIGlzIGhhbmRsZWQgYnkgYSBzaW5nbGUgQ1NTIGZpbGUgZm9yIGFsbCBl
eGFtcGxlcy4KKiBSZW1vdmVkIHVzZXItYWdlbnQgc25pZmZpbmcgZnJvbSB0
aGUganMgYW5kIHJlcGxhY2VkIGl0IHdpdGggZmVhdHVyZSBkZXRlY3Rpb24u
ICBUaGlzIHdpbGwgYWxsb3cgY29ycmVjdCByZW5kZXJpbmcgZm9yIHZpc2l0
b3JzIG1hc2tpbmcgdGhlaXIgYWdlbnQgdHlwZS4KCiMjIyMjIFZlcnNpb24g
MS4zLjAgLSBTZXB0ZW1iZXIgMTUgMjAwOQpGaWxlcyBDaGFuZ2VkOiBqcXVl
cnkuY29sb3Jib3guanMvanF1ZXJ5LmNvbG9yYm94LW1pbi5qcy9jb2xvcmJv
eC5jc3MKCiogQWRkZWQgJC5jb2xvcmJveC5yZXNpemUoKSBtZXRob2QgdG8g
YWxsb3cgQ29sb3Jib3ggdG8gcmVzaXplIGl0J3MgaGVpZ2h0IGlmIGl0J3Mg
Y29udGVudHMgY2hhbmdlLgoqIEFkZGVkICdzY3JvbGxiYXJzJyBvcHRpb24g
dG8gYWxsb3cgdXNlcnMgdG8gdHVybiBvZmYgc2Nyb2xsYmFycyB3aGVuIHVz
aW5nIHRoZSByZXNpemUoKSBtZXRob2QuCiogUmVuYW1lZCB0aGUgJ3Jlc2l6
ZScgb3B0aW9uIHRvIGJlIGxlc3MgYW1iaWd1b3VzLiAgSXQncyBub3cgJ3Nj
YWxlUGhvdG9zJy4KKiBSZW5hbWVkIHRoZSAnY2JveF9jbG9zZScgZXZlbnQg
dG8gYmUgbGVzcyBhbWJpZ3VvdXMuICBJdCdzIG5vdyAnY2JveF9jbGVhbnVw
Jy4gIEl0IGlzIHRoZSBmaXJzdCB0aGluZyB0byBoYXBwZW4gaW4gdGhlIGNs
b3NlIG1ldGhvZCB3aGlsZSB0aGUgJ2Nib3hfY2xvc2VkJyBldmVudCBpcyB0
aGUgbGFzdCB0byBoYXBwZW4uCiogRml4ZWQgYSBidWcgd2l0aCB0aGUgc2xp
ZGVzaG93IG1vdXNlb3ZlciBncmFwaGljcyB0aGF0IGFwcGVhcmVkIGFmdGVy
IENvbG9yYm94IGlzIG9wZW5lZCBhIDJuZCB0aW1lLgoqIEZpeGVkIGEgYnVn
IHdoZXJlIENsZWFyVHlwZSBtYXkgbm90IHdvcmsgaW4gSUU2JjcgaWYgdXNp
bmcgdGhlIGZhZGUgdHJhbnNpdGlvbi4KKiBNaW5vciBjb2RlIG9wdGltaXph
dGlvbnMgdG8gaW5jcmVhc2UgY29tcHJlc3Npb24uCgojIyMjIyBWZXJzaW9u
IDEuMi45IC0gQXVndXN0IDcgMjAwOQpGaWxlcyBDaGFuZ2VkOiBqcXVlcnku
Y29sb3Jib3guanMvanF1ZXJ5LmNvbG9yYm94LW1pbi5qcwoKKiBNaW5vciBj
aGFuZ2UgdG8gZW5hYmxlIHVzZSB3aXRoICQuZ2V0U2NyaXB0KCk7CiogTWlu
b3IgY2hhbmdlIHRvIHRoZSB0aW1pbmcgb2YgdGhlICdjYm94X2xvYWQnIGV2
ZW50IHNvIHRoYXQgaXQgaXMgbW9yZSB1c2VmdWwuCiogQWRkZWQgYSBkaXJl
Y3QgbGluayB0byBhIFlvdVR1YmUgdmlkZW8gdG8gdGhlIGV4YW1wbGVzLgoK
IyMjIyMgVmVyc2lvbiAxLjIuOCAtIEF1Z3VzdCA1IDIwMDkKRmlsZXMgQ2hh
bmdlZDoganF1ZXJ5LmNvbG9yYm94LmpzL2pxdWVyeS5jb2xvcmJveC1taW4u
anMKCiogRml4ZWQgYSBidWcgd2l0aCB0aGUgb3ZlcmxheSBpbiBJRTYKKiBG
aXhlZCBhIGJ1ZyB3aGVyZSBsZWZ0ICYgcmlnaHQga2V5cHJlc3MgZXZlbnRz
IG1pZ2h0IGJlIHByZW1hdHVyZWx5IHVuYm91bmQuCgojIyMjIyBWZXJzaW9u
IDEuMi43IC0gSnVseSAzMSAyMDA5CkZpbGVzIENoYW5nZWQ6IGpxdWVyeS5j
b2xvcmJveC5qcy9qcXVlcnkuY29sb3Jib3gtbWluLmpzLCBleGFtcGxlIHN0
eWxlc2hlZXRzIGFuZCBiYWNrZ3JvdW5kIGltYWdlcyAoY29yZSBzdHlsZXMg
aGF2ZSBub3QgY2hhbmdlZCBhbmQgdGhlIHVwZGF0ZXMgd2lsbCBub3QgYWZm
ZWN0IGV4aXN0aW5nIHVzZXIgdGhlbWVzIC8gb2xkIGV4YW1wbGUgdGhlbWVz
KQoKKiBDb2RlIGNsZWFudXAgYW5kIHJlZHVjdGlvbiwgYmV0dGVyIG9yZ2Fu
aXphdGlvbiBhbmQgZG9jdW1lbnRhdGlvbiBpbiB0aGUgZnVsbCBzb3VyY2Uu
CiogQWRkZWQgYWJpbGl0eSB0byB1c2UgZnVuY3Rpb25zIGluIHBsYWNlIG9m
IHN0YXRpYyB2YWx1ZXMgZm9yIENvbG9yYm94J3Mgb3B0aW9ucyAodGhhbmtz
IEtlbiEpLgoqIEFkZGVkIGFuIG9wdGlvbiBmb3Igc3RyYWlnaHQgSFRNTC4g
IEV4YW1wbGU6IGAkLmNvbG9yYm94KHtodG1sOic8cD5Ib3dkeTwvcD4nLCBv
cGVuOnRydWV9KWAKKiBBZGRlZCBhbiBldmVudCBmb3IgdGhlIGJlZ2lubmlu
ZyBvZiB0aGUgY2xvc2luZyBwcm9jZXNzLiAgVGhpcyBpcyBpbiBhZGRpdGlv
biB0byB0aGUgZXZlbnQgdGhhdCBhbHJlYWR5IGV4aXN0ZWQgZm9yIHdoZW4g
Q29sb3Jib3ggaGFkIGNvbXBsZXRlbHkgY2xvc2VkLiAgJ2Nib3hfY2xvc2Un
IGFuZCAnY2JveF9jbG9zZWQnIHJlc3BlY3RpdmVseS4KKiBGaXhlZCBhIG1p
bm9yIGJ1ZyBpbiBJRTYgdGhhdCB3b3VsZCBjYXVzZSBhIGJyaWVmIGNvbnRl
bnQgc2hpZnQgaW4gdGhlIHBhcmVudCBkb2N1bWVudCB3aGVuIG9wZW5pbmcg
Q29sb3Jib3guCiogRml4ZWQgYSBtaW5vciBidWcgaW4gSUU2IHRoYXQgd291
bGQgcmV2ZWFsIHNlbGVjdCBlbGVtZW50cyB0aGF0IGhhZCBhIGhpZGRlbiB2
aXNpYmlsaXR5IGFmdGVyIGNsb3NpbmcgQ29sb3Jib3guCiogVGhlICdlc2Mn
IGtleSBpcyB1bmJvdW5kIG5vdyB3aGVuIENvbG9yYm94IGlzIG5vdCBvcGVu
LCB0byBhdm9pZCBhbnkgcG90ZW50aWFsIGNvbmZsaWN0cy4KKiBVc2VkIGJh
Y2tncm91bmQgc3ByaXRlcyBmb3IgZXhhbXBsZXMgMSAmIDQuICBQdXQgSUUt
b25seSAobm9uLXNwcml0ZSkgYmFja2dyb3VuZCBpbWFnZXMgaW4gYSBzZXBh
cmF0ZSBmb2xkZXIuCiogRXhhbXBsZSB0aGVtZXMgMSwgMywgJiA0IHJlY2Vp
dmVkIHNsaWdodCB2aXN1YWwgdHdlYWtzLgoqIE9wdGltaXplZCBwbmdzIGZv
ciBzbWFsbGVyIGZpbGUgc2l6ZS4KKiBBZGRlZCBzbGljZXMsIGdyaWQsIGFu
ZCBjb3JyZWN0IHNpemluZyB0byB0aGUgQWRvYmUgSWxsdXN0cmF0b3IgZmls
ZSwgYWxsIHRoZW1lIGZpbGVzIGFyZSBub3cgZXhwb3J0IHJlYWR5IQoKIyMj
IyMgVmVyc2lvbiAxLjIuNiAtIEp1bHkgMTUgMjAwOQpGaWxlcyBDaGFuZ2Vk
OiBqcXVlcnkuY29sb3Jib3guanMvanF1ZXJ5LmNvbG9yYm94LW1pbi5qcwoK
KiBGaXhlZCBhIGJ1ZyB3aXRoIGZpeGVkIHdpZHRoL2hlaWdodCBpbWFnZXMg
aW4gT3BlcmEgOS42NC4KKiBGaXhlZCBhIGJ1ZyB3aXRoIHRyeWluZyB0byBz
ZXQgYSB2YWx1ZSBmb3IgcmVsIGR1cmluZyBhIGRpcmVjdCBjYWxsIHRvIENv
bG9yYm94LiBFeGFtcGxlOiBgJC5jb2xvcmJveCh7cmVsOidmb28nLCBvcGVu
OnRydWV9KTtgCiogQ2hhbmdlZCBob3cgaHJlZi9yZWwvdGl0bGUgc2V0dGlu
Z3MgYXJlIGRldGVybWluZWQgdG8gYXZvaWQgdXNlcnMgaGF2aW5nIHRvIG1h
bnVhbGx5IHVwZGF0ZSBDb2xvcmJveCBzZXR0aW5ncyBpZiB0aGV5IHVzZSBK
YXZhU2NyaXB0IHRvIHVwZGF0ZSBhbnkgb2YgdGhvc2UgYXR0cmlidXRlcywg
YWZ0ZXIgQ29sb3Jib3ggaGFzIGJlZW4gZGVmaW5lZC4KKiBGaXhlZCBhIEZG
MyBidWcgd2hlcmUgdGhlIGJhY2sgYnV0dG9uIHdhcyBkaXNhYmxlZCBhZnRl
ciBjbG9zaW5nIGFuIGlmcmFtZS4KCiMjIyMjIFZlcnNpb24gMS4yLjUgLSBK
dW5lIDIzIDIwMDkKRmlsZXMgQ2hhbmdlZDoganF1ZXJ5LmNvbG9yYm94Lmpz
L2pxdWVyeS5jb2xvcmJveC1taW4uanMKCiogQ2hhbmdlZCB0aGUgcG9pbnQg
YXQgd2hpY2ggaWZyYW1lIHNyY3MgYXJlIHNldCAodG8gZWxpbWluYXRlIHRo
ZSBuZWVkIHRvIHJlZnJlc2ggdGhlIGlmcmFtZSBvbmNlIGl0IGhhcyBiZWVu
IGFkZGVkIHRvIHRoZSBET00pLgoqIFJlbW92ZWQgdW5uZWNlc3NhcnkgcmV0
dXJuIHZhbHVlcyBmb3IgYSB2ZXJ5IHNsaWdodCBjb2RlIHJlZHVjdGlvbi4K
CiMjIyMjIFZlcnNpb24gMS4yLjQgLSBKdW5lIDkgMjAwOQpGaWxlcyBDaGFu
Z2VkOiBqcXVlcnkuY29sb3Jib3guanMsIGpxdWVyeS5jb2xvcmJveC1taW4u
anMKCiogRml4ZWQgYW4gaXNzdWUgd2hlcmUgQ29sb3Jib3ggbWF5IG5vdCBj
bG9zZSBjb21wbGV0ZWx5IGlmIGl0IGlzIGNsb3NlZCBkdXJpbmcgYSB0cmFu
c2l0aW9uIGFuaW1hdGlvbi4KKiBNaW5vciBjb2RlIHJlZHVjdGlvbi4KCiMj
IyMjIFZlcnNpb24gMS4yLjMgLSBKdW5lIDQgMjAwOQoqIEZpeGVkIGEgcG5n
IHRyYW5zcGFyZW5jeSBzdGFja2luZyBpc3N1ZSBpbiBJRS4KKiBNb3JlIGFj
Y3VyYXRlIEFqYXggYXV0by1zaXppbmcgaWYgdGhlIHVzZXIgd2FzIGRlcGVu
ZGluZyBvbiB0aGUgI2Nib3hMb2FkZWRDb250ZW50IElEIGZvciBDU1Mgc3R5
bGluZy4KKiBBZGRlZCBhIHB1YmxpYyBmdW5jdGlvbiBmb3IgcmV0dXJuaW5n
IHRoZSBjdXJyZW50IGh0bWwgZWxlbWVudCB0aGF0IENvbG9yYm94IGlzIGFz
c29jaWF0ZWQgd2l0aC4gRXhhbXBsZSB1c2U6IHZhciB0aGF0ID0gJC5jb2xv
cmJveC5lbGVtZW50KCk7CiogQWRkZWQgYmljdWJpYyBzY2FsaW5nIGZvciBy
ZXNpemVkIGltYWdlcyBpbiB0aGUgb3JpZ2luYWwgSUU3LgoqIFJlbW92ZWQg
dGhlIElFNiBzdHlsZXNoZWV0IGFuZCBwbmcgZmlsZXMgZnJvbSBFeGFtcGxl
IDMuICBJdCBub3cgdXNlcyB0aGUgc2FtZSBwbmcgZmlsZSBmb3IgdGhlIGNv
bnRyb2xzIHRoYXQgdGhlIHJlc3Qgb2YgdGhlIGJyb3dzZXJzIHVzZSAoYW4g
YWxwaGEgdHJhbnNwYXJlbmN5IFBORzgpLiAgVGhpcyBleGFtcGxlIG5vdyBv
bmx5IGhhcyAyIGdyYXBoaWNzIGZpbGVzIGFuZCAxIHN0eWxlc2hlZXQuCgoj
IyMjIyBWZXJzaW9uIDEuMi4yIC0gTWF5IDI4IDIwMDkKKiBGaXhlZCBhbiBp
c3N1ZSB3aXRoIHRoZSAncmVzaXplJyBvcHRpb24uCgojIyMjIyBWZXJzaW9u
IDEuMi4xIC0gTWF5IDI4IDIwMDkKKiBOb3RlOiBJZiB5b3UgYXJlIHVwZ3Jh
ZGluZywgdXBkYXRlIHlvdXIganF1ZXJ5LmNvbG9yYm94LmpzIGFuZCBjb2xv
cmJveC5jc3MgZmlsZXMuCiogQWRkZWQgcGhvdG8gcmVzaXppbmcuCiogQWRk
ZWQgYSBtYXhpbXVtIHdpZHRoIGFuZCBtYXhpbXVtIGhlaWdodC4gRXhhbXBs
ZToge2hlaWdodDo4MDAsIG1heEhlaWdodDonMTAwJSd9LCB3b3VsZCBhbGxv
dyB0aGUgYm94IHRvIGJlIGEgbWF4aW11bSBwb3RlbnRpYWwgaGVpZ2h0IG9m
IDgwMHB4LCBpbnN0ZWFkIG9mIGEgZml4ZWQgaGVpZ2h0IG9mIDgwMHB4LiAg
V2l0aCBtYXhIZWlnaHQgb2YgMTAwJSB0aGUgaGVpZ2h0IG9mIENvbG9yYm94
IGNhbm5vdCBleGNlZWQgdGhlIGhlaWdodCBvZiB0aGUgYnJvd3NlciB3aW5k
b3cuCiogQWRkZWQgJ3JlbCcgc2V0dGluZyB0byBhZGQgdGhlIGFiaWxpdHkg
dG8gc2V0IGFuIGFsdGVybmF0aXZlIHJlbCBmb3IgYW55IENvbG9yYm94IGNh
bGwuICBUaGlzIGFsbG93cyB0aGUgdXNlciB0byBncm91cCBhbnkgY29tYmlu
YXRpb24gb2YgZWxlbWVudHMgdG9nZXRoZXIgZm9yIGEgZ2FsbGVyeSwgb3Ig
dG8gb3ZlcnJpZGUgYW4gZXhpc3RpbmcgcmVsLiBhdHRyaWJ1dGUgc28gdGhv
c2UgZWxlbWVudCBhcmUgbm90IGdyb3VwZWQgdG9nZXRoZXIsIHdpdGhvdXQg
aGF2aW5nIHRvIGFsdGVyIHRoZWlyIHJlbCBpbiB0aGUgSFRNTC4KKiBBZGRl
ZCBhICdwaG90bycgc2V0dGluZyB0byBmb3JjZSBDb2xvcmJveCB0byBkaXNw
bGF5IGEgbGluayBhcyBhIHBob3RvLiAgVXNlIHRoaXMgd2hlbiBhdXRvbWF0
aWMgcGhvdG8gZGV0ZWN0aW9uIGZhaWxzIChzdWNoIGFzIHVzaW5nIGEgdXJs
IGxpa2UgJ3Bob3RvLnBocCcgaW5zdGVhZCBvZiAncGhvdG8uanBnJywgJ3Bo
b3RvLmpwZyMxJywgb3IgJ3Bob3RvLmpwZz9waWM9MScpCiogUmVtb3ZlZCB0
aGUgbmVlZCB0byBldmVyIGNyZWF0ZSBkaXNwb3NhYmxlIGVsZW1lbnRzIHRv
IGNhbGwgY29sb3Jib3ggb24uICBDb2xvcmJveCBjYW4gbm93IGJlIGNhbGxl
ZCBkaXJlY3RseSwgd2l0aG91dCBiZWluZyBhc3NvY2lhdGVkIHdpdGggYW55
IGV4aXN0aW5nIGVsZW1lbnQsIGJ5IHVzaW5nIHRoZSBmb2xsb3dpbmcgZm9y
bWF0OgogIGAkLmNvbG9yYm94KHtvcGVuOnRydWUsIGhyZWY6J3lvdXJMaW5r
Lnh4eCd9KTtgCiogQ29sb3Jib3ggc2V0dGluZ3MgYXJlIG5vdyBwZXJzaXN0
ZW50IGFuZCB1bmlxdWUgZm9yIGVhY2ggZWxlbWVudC4gIFRoaXMgYWxsb3dz
IGZvciBleHRyZW1lbHkgZmxleGlibGUgb3B0aW9ucyBmb3IgaW5kaXZpZHVh
bCBlbGVtZW50cy4gIFlvdSBjb3VsZCB1c2UgdGhpcyB0byBjcmVhdGUgYSBn
YWxsZXJ5IGluIHdoaWNoIGVhY2ggcGFnZSBpbiB0aGUgZ2FsbGVyeSBoYXMg
ZGlmZmVyZW50IHNldHRpbmdzLiAgT25lIGNvdWxkIGJlIGEgcGhvdG8gd2l0
aCBhIGZhZGUgdHJhbnNpdGlvbiwgbmV4dCBjb3VsZCBiZSBhbiBpbmxpbmUg
ZWxlbWVudCB3aXRoIGFuIGVsYXN0aWMgdHJhbnNpdGlvbiB3aXRoIGEgc2V0
IHdpZHRoIGFuZCBoZWlnaHQsIGV0Yy4KKiBGb3IgdXNlciBjYWxsYmFja3Ms
ICd0aGlzJyBub3cgcmVmZXJzIHRvIHRoZSBlbGVtZW50IGNvbG9yYm94IHdh
cyBvcGVuZWQgZnJvbS4KKiBGaXhlZCBhIG1pbm9yIGdyb3VwaW5nIGlzc3Vl
IHdpdGggSUU2LCB3aGVuIHRyYW5zaXRpb24gdHlwZSBpcyBzZXQgdG8gJ25v
bmUnLgoqIEFkZGVkIGFuIEFkb2JlIElsbHVzdHJhdG9yIGZpbGUgdGhhdCBj
b250YWlucyB0aGUgYm9yZGVycyBhbmQgYnV0dG9ucyB1c2VkIGluIHRoZSB2
YXJpb3VzIGV4YW1wbGVzLgoKIyMjIyMgVmVyc2lvbiAxLjIgLSBNYXkgMTMg
MjAwOQoqIEFkZGVkIGEgc2xpZGVzaG93IGZlYXR1cmUuCiogQWRkZWQgcmUt
cG9zaXRpb25pbmcgb24gYnJvd3NlciByZXNpemUuICBJZiB0aGUgYnJvd3Nl
ciBpcyByZXNpemVkLCBDb2xvcmJveCB3aWxsIHJlY2VudGVyIGl0c2VsZiBv
bnNjcmVlbi4KKiBBZGRlZCBob29rcyBmb3Iga2V5IGV2ZW50czogY2JveF9v
cGVuLCBjYm94X2xvYWQsIGNib3hfY29tcGxldGUsIGNib3hfY2xvc2VkLgoq
IEZpeGVkIGFuIElFIHRyYW5zcGFyZW5jeS1zdGFja2luZyBwcm9ibGVtLCB3
aGVyZSB0cmFuc3BhcmVudCBQTkdzIHdvdWxkIHNob3cgdGhyb3VnaCB0byB0
aGUgYmFja2dyb3VuZCBvdmVybGF5LgoqIEZpeGVkIGFuIElFIGlmcmFtZSBp
c3N1ZSB3aGVyZSB0aGUgaWZhbWUgbWlnaHQgc2hpZnQgdXAgYW5kIHRvIHRo
ZSBsZWZ0IHVuZGVyIGNlcnRhaW4gY2lyY3Vtc3RhbmNlcy4KKiBGaXhlZCBh
biBJRTYgYnVnIHdoZXJlIHRoZSBsb2FkaW5nIG92ZXJsYXkgd2FzIG5vdCBh
dCBmdWxsIGhlaWdodC4KKiBSZW1vdmVkIHRoZSBkZWxheSBpbiBzd2l0Y2hp
bmcgYmV0d2VlbiBzYW1lLXNpemVkIGdhbGxlcnkgY29udGVudCB3aGVuIHVz
aW5nIHRyYW5zaXRpb25zLgoqIENoYW5nZWQgaG93IGlmcmFtZXMgYXJlIGxv
YWRlZCB0byBtYWtlIGl0IG1vcmUgY29tcGF0aWJsZSB3aXRoIGlmcmFtZWQg
cGFnZXMgdGhhdCB1c2UgRE9NIGRlcGVuZGVudCBKYXZhU2NyaXB0LgoqIENo
YW5nZWQgaG93IHRoZSBKUyBpcyBzdHJ1Y3R1cmVkIHRvIGJlIGJldHRlciBv
cmdhbml6ZWQgYW5kIGluY3JlYXNlIGNvbXByZXNzaW9uLiAgSW5jcmVhc2Vk
IGRvY3VtZW50YXRpb24uCiogQ2hhbmdlZCBDU1MgOmhvdmVyIHN0YXRlcyB0
byBhIC5ob3ZlciBjbGFzcy4gIFRoaXMgc2lkZXN0ZXBzIGEgbWlub3IgSUU4
IGJ1ZyB3aXRoIGNzcyBob3ZlciBzdGF0ZXMgYW5kIGFsbG93cyBlYXNpZXIg
YWNjZXNzIHRvIGhvdmVyIHN0YXRlIHVzZXIgc3R5bGVzIGZyb20gdGhlIEph
dmFTY3JpcHQuCiogQ2hhbmdlZDogZWxlbWVudHMgYWRkZWQgdG8gdGhlIERP
TSBoYXZlIG5ldyBJRCdzLiAgVGhlIG5hbWluZyBpcyBtb3JlIGNvbnNpc3Rl
bnQgYW5kIGxlc3MgbGlrZWx5IHRvIGNhdXNlIGNvbmZsaWN0cyB3aXRoIGV4
aXN0aW5nIHdlYnNpdGUgc3R5bGVzaGVldHMuICBBbGwgc3R5bGVzaGVldHMg
aGF2ZSBiZWVuIHVwZGF0ZWQuCiogQ2hhbmdlZCB0aGUgYmVoYXZpb3IgZm9y
IHByZXYvbmV4dCBsaW5rcyBzbyB0aGF0IENvbG9yYm94IGRvZXMgbm90IGdl
dCBodW5nIHVwIG9uIGJyb2tlbiBsaW5rcy4gIEEgdmlzaXRvciBjYW4gbm93
IHNraXAgdGhyb3VnaCBicm9rZW4gb3IgbG9uZy1sb2FkaW5nIGxpbmtzIGJ5
IGNsaWNraW5nIHByZXYvbmV4dCBidXR0b25zLgoqIENoYW5nZWQgdGhlIG5h
bWluZyBvZiB2YXJpYWJsZXMgaW4gdGhlIHBhcmFtZXRlciBtYXAgdG8gYmUg
bW9yZSBjb25jaXNlIGFuZCBpbnR1aXRpdmUuCiogUmVtb3ZlZCBjb2xvcmJv
eC5jc3MuICBDb21iaW5lZCB0aGUgY29sb3Jib3guY3NzIHN0eWxlcyB3aXRo
IGpxdWVyeS5jb2xvcmJveC5qczogdGhlIGNzcyBmaWxlIHdhcyBub3QgbGFy
Z2UgZW5vdWdoIHRvIHdhcnJhbnQgYmVpbmcgYSBzZXBhcmF0ZSBmaWxlLgoK
IyMjIyMgVmVyc2lvbiAxLjEuNiAtIEFwcmlsIDI4IDIwMDkKKiBQcmV2ZW50
ZWQgdGhlIGRlZmF1bHQgYWN0aW9uIG9mIHRoZSBuZXh0ICYgcHJldmlvdXMg
YW5jaG9ycyBhbmQgdGhlIGxlZnQgYW5kIHJpZ2h0IGtleXMgZm9yIGdhbGxl
cnkgbW9kZS4KKiBGaXhlZCBhIGJ1ZyB3aGVyZSB0aGUgdGl0bGUgZWxlbWVu
dCB3YXMgYmVpbmcgYWRkZWQgYmFjayB0byB0aGUgRE9NIHdoZW4gY2xvc2lu
ZyBDb2xvcmJveCB3aGlsZSB1c2luZyBpbmxpbmUgY29udGVudC4KKiBGaXhl
ZCBhIGJ1ZyB3aGVyZSBJRTcgd291bGQgY3Jhc2ggZm9yIGV4YW1wbGUgMi4K
KiBTbWFsbGVyIGZpbGVzaXplOiByZW1vdmVkIGEgc21hbGwgYW1vdW50IG9m
IHVudXNlZCBjb2RlIGFuZCByZXdyb3RlIHRoZSBIVE1MIGluamVjdGlvbiB3
aXRoIGxlc3Mgc3ludGF4LgoqIEFkZGVkIGEgcHVibGljIG1ldGhvZCBmb3Ig
Y2xvc2luZyBDb2xvcmJveDogJC5jb2xvcmJveC5jbG9zZSgpLiAgVGhpcyB3
aWxsIGFsbG93IGlmcmFtZSB1c2VycyB0byBhZGQgYW4gZXZlbnQgdG8gY2xv
c2UgQ29sb3Jib3ggd2l0aG91dCBoYXZpbmcgdG8gY3JlYXRlIGFuIGFkZGl0
aW9uYWwgZnVuY3Rpb24uCgojIyMjIyBWZXJzaW9uIDEuMS41IC0gQXByaWwg
MTEgMjAwOQoqIEZpeGVkIG1pbm9yIGlzc3VlcyB3aXRoIGV4aXRpbmcgQ29s
b3Jib3guCiAKIyMjIyMgVmVyc2lvbiAxLjEuNCAtIEFwcmlsIDA4IDIwMDkK
KiBGaXhlZCBhIGJ1ZyBpbiB0aGUgZmFkZSB0cmFuc2l0aW9uIHdoZXJlIENv
bG9yYm94IG5vdCBjbG9zZSBjb21wbGV0ZWx5IGlmIGluc3RydWN0ZWQgdG8g
Y2xvc2UgZHVyaW5nIHRoZSBmYWRlLWluIHBvcnRpb24gb2YgdGhlIHRyYW5z
aXRpb24uCgojIyMjIyBWZXJzaW9uIDEuMS4zIC0gQXByaWwgMDYgMjAwOQoq
IEZpeGVkIGFuIElFNiY3IGlzc3VlIHdpdGggdXNpbmcgQ29sb3Jib3ggdG8g
ZGlzcGxheSBhbmltYXRlZCBHSUZzLgoKIyMjIyMgVmVyc2lvbiAxLjEuMiAt
IEFwcmlsIDA1IDIwMDkKKiBBZGRlZCBhYmlsaXR5IHRvIGNoYW5nZSBjb250
ZW50IHdoZW4gQ29sb3Jib3ggaXMgYWxyZWFkeSBvcGVuLgoqIEFkZGVkIHZl
cnRpY2FsIHBob3RvIGNlbnRlcmluZyBub3cgd29ya3MgZm9yIGFsbCBicm93
c2VycyAodGhpcyBmZWF0dXJlIHByZXZpb3VzbHkgZXhjbHVkZWQgSUU2Jjcp
LgoqIEFkZGVkIG5hbWVzcGFjaW5nIHRvIHRoZSBlc2Mta2V5IGtleWRvd24g
ZXZlbnQgZm9yIHBlb3BsZSB3aG8gd2FudCB0byBkaXNhYmxlIGl0OiAia2V5
ZG93bi5jb2xvckNsb3NlIgoqIEFkZGVkICd0aXRsZScgc2V0dGluZyB0byBh
ZGQgdGhlIGFiaWxpdHkgdG8gc2V0IGFuIGFsdGVybmF0aXZlIHRpdGxlIGZv
ciBhbnkgQ29sb3Jib3ggY2FsbC4KKiBGaXhlZCByb2xsb3ZlciBuYXZpZ2F0
aW9uIGlzc3VlIHdpdGggSUU4LiAoQWRkZWQgSlMtYmFzZWQgcm9sbG92ZXIg
c3RhdGUgZHVlIHRvIGEgYnJvd3Nlci1idWcuKQoqIEZpeGVkIGFuIG92ZXJm
bG93IGlzc3VlIGZvciB3aGVuIHRoZSBmaXhlZCB3aWR0aC9oZWlnaHQgaXMg
c21hbGxlciB0aGFuIHRoZSBzaXplIG9mIGEgcGhvdG8uCiogRml4ZWQgYSBi
dWcgaW4gdGhlIGZhZGUgdHJhbnNpdGlvbiB3aGVyZSB0aGUgYm9yZGVyIHdv
dWxkIHN0aWxsIGNvbWUgdXAgaWYgQ29sb3Jib3ggd2FzIGNsb3NlZCBtaWQt
dHJhbnNpdGlvbi4KKiBTd2l0Y2ggZnJvbSBKU01pbiB0byBZdWkgQ29tcHJl
c3NvciBmb3IgbWluaWZpY2F0aW9uLiAgTWluaWZpZWQgY29kZSBub3cgdW5k
ZXIgN0tCLgoKIyMjIyMgVmVyc2lvbiAxLjEuMSAtIE1hcmNoIDMxIDIwMDkK
KiBNb3JlIHJvYnVzdCBpbWFnZSBkZXRlY3Rpb24gcmVnZXguICBOb3cgZGV0
ZWN0cyBpbWFnZSBmaWxlIHR5cGVzIHdpdGggdXJsIGZyYWdtZW50cyBhbmQv
b3IgcXVlcnkgc3RyaW5ncy4KKiBBZGRlZCAnbm9mb2xsb3cnIGV4Y2VwdGlv
biB0byByZWwgZ3JvdXBpbmcuCiogQ2hhbmdlZCBob3cgaW1hZ2VzIGFyZSBs
b2FkZWQgaW50byB0aGUgRE9NIHRvIHByZXZlbnQgcHJlbWF0dXJlIHNpemUg
Y2FsY3VsYXRpb24gYnkgQ29sb3Jib3guCiogQWRkZWQgdGltZXN0YW1wIHRv
IGlmcmFtZSBuYW1lIHRvIHByZXZlbnQgY2FjaGluZyAtIHRoaXMgd2FzIGEg
cHJvYmxlbSBpbiBzb21lIGJyb3dzZXJzIGlmIHRoZSB1c2VyIGhhZCBtdWx0
aXBsZSBpZnJhbWVzIGFuZCB0aGUgdmlzaXRvciBsZWZ0IHRoZSBwYWdlIGFu
ZCBjYW1lIGJhY2ssIG9yIGlmIHRoZXkgcmVmcmVzaGVkIHRoZSBwYWdlLgoK
IyMjIyMgVmVyc2lvbiAxLjEuMCAtIE1hcmNoIDIxIDIwMDkKKiBBbmltYXRp
b24gaXMgbm93IG11Y2ggc21vb3RoZXIgYW5kIGxlc3MgcmVzb3VyY2UgaW50
ZW5zaXZlLgoqIEFkZGVkIHN1cHBvcnQgZm9yICUgc2l6aW5nLgoqIENhbGxi
YWNrIG9wdGlvbiBhZGRlZC4KKiBJbmxpbmUgY29udGVudCBub3cgcHJlc2Vy
dmVzIEphdmFTY3JpcHQgZXZlbnRzLCBhbmQgY2hhbmdlcyBtYWRlIHdoaWxl
IENvbG9yYm94IGlzIG9wZW4gYXJlIGFsc28gcHJlc2VydmVkLgoqIEFkZGVk
ICdocmVmJyBzZXR0aW5nIHRvIGFkZCB0aGUgYWJpbGl0eSB0byBzZXQgYW4g
YWx0ZXJuYXRpdmUgaHJlZiBmb3IgYW55IGFuY2hvciwgb3IgdG8gYXNzaWdu
IHRoZSBDb2xvcmJveCBldmVudCB0byBub24tYW5jaG9ycy4gCiAgRXhhbXBs
ZTogJCgnYnV0dG9uJykuY29sb3Jib3goeydocmVmJzoncHJvY2Vzcy5waHAn
fSkKICBFeGFtcGxlOiAkKCdhW2hyZWY9J2h0dHA6Ly9tc24uY29tJ10pLmNv
bG9yYm94KHsnaHJlZic6J2h0dHA6Ly9nb29nbGUuY29tJywgaWZyYW1lOnRy
dWV9KTsKKiBQaG90b3MgYXJlIG5vdyBob3Jpem9udGFsbHkgY2VudGVyZWQg
aWYgdGhleSBhcmUgc21hbGxlciB0aGFuIHRoZSBsaWdodGJveCBzaXplLiAg
QWxzbyB2ZXJ0aWNhbGx5IGNlbnRlcmVkIGZvciBicm93c2VycyBuZXdlciB0
aGFuIElFNy4KKiBCdXR0b25zIGluIHRoZSBleGFtcGxlcyBhcmUgbm93IGlu
Y2x1ZGVkIGluIHRoZSAncHJvdGVjdGVkIHpvbmUnLiAgVGhlIGxpZ2h0Ym94
IHdpbGwgbmV2ZXIgZXhwYW5kIGl0J3MgYm9yZGVycyBvciBidXR0b25zIGJl
eW9uZCBhbiBhY2Nlc3NpYmxlIGFyZWEgb2YgdGhlIHNjcmVlbi4KKiBLZXlw
cmVzcyBldmVudHMgZG9uJ3QgcXVldWUgdXAgYnkgaG9sZGluZyBkb3duIHRo
ZSBhcnJvdyBrZXlzLgoqIEFkZGVkIG9wdGlvbiB0byBjbG9zZSBDb2xvcmJv
eCBieSBjbGlja2luZyBvbiB0aGUgYmFja2dyb3VuZCBvdmVybGF5LgoqIEFk
ZGVkICdub25lJyB0cmFuc2l0aW9uIHNldHRpbmcuCiogQ2hhbmdlZCAnY29u
dGVudElmcmFtZScgYW5kICdjb250ZW50SW5saW5lJyB0byAnaW5saW5lJyBh
bmQgJ2lmcmFtZScuICBSZW1vdmVkICdjb250ZW50QWpheCcgYmVjYXVzZSBp
dCAgaXMgYXV0b21hdGljYWxseSBhc3N1bWVkIGZvciBub24taW1hZ2UgZmls
ZSB0eXBlcy4KKiBDaGFuZ2VkICdjb250ZW50V2lkdGgnIGFuZCAnY29udGVu
dEhlaWdodCcgdG8gJ2ZpeGVkV2lkdGgnIGFuZCAnZml4ZWRIZWlnaHQnLiAg
VGhlc2Ugc2l6ZXMgbm93IHJlZmxlY3QgIHRoZSB0b3RhbCBzaXplIG9mIHRo
ZSBsaWdodGJveCwgbm90IGp1c3QgdGhlIGlubmVyIGNvbnRlbnQuICBUaGlz
IGlzIHNvIHVzZXJzIGNhbiBhY2N1cmF0ZWx5IGFudGljaXBhdGUgICUgc2l6
ZXMgd2l0aG91dCBmZWFyIG9mIGNyZWF0aW5nIHNjcm9sbGJhcnMuCiogQ2xp
Y2tpbmcgb24gYSBwaG90byB3aWxsIG5vdyBzd2l0Y2ggdG8gdGhlIG5leHQg
cGhvdG8gaW4gYSBzZXQuCiogTG9hZGluZy5naWYgaXMgbW9yZSBzdGFibGUg
aW4gaXQncyBwb3NpdGlvbi4KKiBBZGRlZCBhIG1pbmlmaWVkIHZlcnNpb24u
CiogQ29kZSBwYXNzZXMgSlNMaW50LgoKIyMjIyMgVmVyc2lvbiAxLjAuNSAt
IE1hcmNoIDExIDIwMDkKKiBSZWRvOiBGaXhlZCBhIGJ1ZyB3aGVyZSBJRSB3
b3VsZCBjdXQgb2ZmIHRoZSBib3R0b20gcG9ydGlvbiBvZiBhIHBob3RvLCBp
ZiB0aGUgcGhvdG8gd2FzIGxhcmdlciB0aGFuIHRoZSBkb2N1bWVudCBkaW1l
bnNpb25zLgoKIyMjIyMgVmVyc2lvbiAxLjAuNCAtIE1hcmNoIDEwIDIwMDkK
KiBBZGRlZCBhbiBvcHRpb24gdG8gYWxsb3cgdXNlcnMgdG8gYXV0b21hdGlj
YWxseSBvcGVuIHRoZSBsaWdodGJveC4gRXhhbXBsZSB1c2FnZTogJCgiLmNv
bG9yYm94IikuY29sb3Jib3goe29wZW46dHJ1ZX0pOwoqIEZpeGVkIGEgYnVn
IHdoZXJlIElFIHdvdWxkIGN1dCBvZmYgdGhlIGJvdHRvbSBwb3J0aW9uIG9m
IGEgcGhvdG8sIGlmIHRoZSBwaG90byB3YXMgbGFyZ2VyIHRoYW4gdGhlIGRv
Y3VtZW50IGRpbWVuc2lvbnMuCgojIyMjIyBWZXJzaW9uIDEuMC4zIC0gTWFy
Y2ggMDkgMjAwOQoqIEZpeGVkIHZlcnRpY2FsIGNlbnRlcmluZyBmb3IgU2Fm
YXJpIDMuMC54LgoKIyMjIyMgVmVyc2lvbiAxLjAuMiAtIE1hcmNoIDA2IDIw
MDkKKiBDb3JyZWN0ZWQgYSB0eXBvLgoqIENoYW5nZWQgdGhlIGNvbnRlbnQt
dHlwZSBjaGVjayBzbyB0aGF0IGl0IGRvZXMgbm90IGFzc3VtZSBhbGwgbGlu
a3MgdG8gcGhvdG9zIHNob3VsZCBhY3R1YWxseSBkaXNwbGF5IHBob3Rvcy4g
VGhpcyBhbGxvd3MgZm9yIEFqYXgvaW5saW5lL2FuZCBpZnJhbWUgY2FsbHMg
b24gYW5jaG9ycyBsaW5raW5nIHRvIHBpY3R1cmUgZmlsZSB0eXBlcy4KCiMj
IyMjIFZlcnNpb24gMS4wLjEgLSBNYXJjaCAwNSAyMDA5CiogRml4ZWQga2V5
ZG93biBldmVudHMgKGVzYywgbGVmdCBhcnJvdywgcmlnaHQgYXJyb3cpIGZv
ciBXZWJraXQgYnJvd3NlcnMuCgojIyMjIyBWZXJzaW9uIDEuMCAtIE1hcmNo
IDAzIDIwMDkKKiBGaXJzdCByZWxlYXNlCg==
",,4784,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'dsa.js-data-structures-algorithms-javascript',77558427,b'Data Structures and Algorithms explained and implemented in JavaScript',b'JavaScript',0,4781,,82,False,b'https://api.github.com/repos/amejiarosario/dsa.js-data-structures-algorithms-javascript/forks',"IVtpbWFnZV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVu
dC5jb20vNDE4NjA1LzU5NTU3MjU4LTEwNzQyODgwLThmYTMtMTFlOS04NGZi
LTRkNjZhOWQ4OWZhYS5wbmcpCgojIERhdGEgU3RydWN0dXJlcyBhbmQgQWxn
b3JpdGhtcyBpbiBKYXZhU2NyaXB0CgpbIVtDaXJjbGVDSV0oaHR0cHM6Ly9p
bWcuc2hpZWxkcy5pby9jaXJjbGVjaS9idWlsZC9naXRodWIvYW1lamlhcm9z
YXJpby9kc2EuanMtZGF0YS1zdHJ1Y3R1cmVzLWFsZ29yaXRobXMtamF2YXNj
cmlwdC9tYXN0ZXIuc3ZnKV0oaHR0cHM6Ly9jaXJjbGVjaS5jb20vZ2gvYW1l
amlhcm9zYXJpby9kc2EuanMtZGF0YS1zdHJ1Y3R1cmVzLWFuZC1hbGdvcml0
aG1zLWluLWphdmFzY3JpcHQpIFshW05QTSB2ZXJzaW9uXShodHRwczovL2Jh
ZGdlLmZ1cnkuaW8vanMvZHNhLmpzLnN2ZyldKGh0dHBzOi8vYmFkZ2UuZnVy
eS5pby9qcy9kc2EuanMpIFshW2NoYXRdKGh0dHBzOi8vZHNhanMtc2xhY2tp
bi5oZXJva3VhcHAuY29tL2JhZGdlLnN2ZyldKGh0dHBzOi8vZHNhanMtc2xh
Y2tpbi5oZXJva3VhcHAuY29tKQoKPiBUaGlzIGlzIHRoZSBjb2RpbmcgaW1w
bGVtZW50YXRpb25zIG9mIHRoZSBbRFNBLmpzIGJvb2tdKGh0dHBzOi8vYm9v
a3MuYWRyaWFubWVqaWEuY29tL2RzYWpzLWRhdGEtc3RydWN0dXJlcy1hbGdv
cml0aG1zLWphdmFzY3JpcHQvKSBhbmQgdGhlIHJlcG8gZm9yIHRoZSBOUE0g
cGFja2FnZS4KCj4gSW4gdGhpcyByZXBvc2l0b3J5LCB5b3UgY2FuIGZpbmQg
dGhlIGltcGxlbWVudGF0aW9uIG9mIGFsZ29yaXRobXMgYW5kIGRhdGEgc3Ry
dWN0dXJlcyBpbiBKYXZhU2NyaXB0LiAgVGhpcyBtYXRlcmlhbCBjYW4gYmUg
dXNlZCBhcyBhIHJlZmVyZW5jZSBtYW51YWwgZm9yIGRldmVsb3BlcnMsIG9y
IHlvdSBjYW4gcmVmcmVzaCBzcGVjaWZpYyB0b3BpY3MgYmVmb3JlIGFuIGlu
dGVydmlldy4gQWxzbywgeW91IGNhbiBmaW5kIGlkZWFzIHRvIHNvbHZlIHBy
b2JsZW1zIG1vcmUgZWZmaWNpZW50bHkuCgo8IS0tIChDaGVjayBvdXQgdGhl
IFRpbWUgQ29tcGxleGl0eSBDaGVhdHNoZWV0KSAtLT4KCgo8IS0tClshW0Np
cmNsZUNJXShodHRwczovL2NpcmNsZWNpLmNvbS9naC9hbWVqaWFyb3Nhcmlv
L2RzYS5qcy1kYXRhLXN0cnVjdHVyZXMtYW5kLWFsZ29yaXRobXMtaW4tamF2
YXNjcmlwdC5zdmc/c3R5bGU9c3ZnKV0oaHR0cHM6Ly9jaXJjbGVjaS5jb20v
Z2gvYW1lamlhcm9zYXJpby9kc2EuanMtZGF0YS1zdHJ1Y3R1cmVzLWFuZC1h
bGdvcml0aG1zLWluLWphdmFzY3JpcHQpClshW0NvZGUgU3R5bGUgQWlyYm5i
XShodHRwczovL2ltZy5zaGllbGRzLmlvL2JhZGdlL2NvZGUlMjBzdHlsZS1B
aXJibmItYnJpZ2h0Z3JlZW4uc3ZnKV0oaHR0cHM6Ly9naXRodWIuY29tL2Fp
cmJuYi9qYXZhc2NyaXB0KQpbIVtQUnMgV2VsY29tZV0oaHR0cHM6Ly9pbWcu
c2hpZWxkcy5pby9iYWRnZS9QUnMtd2VsY29tZS1icmlnaHRncmVlbi5zdmcp
XShodHRwOi8vbWFrZWFwdWxscmVxdWVzdC5jb20pClshW1Byb2R1Y3RIdW50
XShodHRwczovL2ltZy5zaGllbGRzLmlvL2JhZGdlL3Byb2R1Y3QlMjBodW50
LXZvdGUtb3JhbmdlLnN2ZyldKGh0dHBzOi8vd3d3LnByb2R1Y3RodW50LmNv
bS9wb3N0cy9kc2EtanMpCmh0dHBzOi8vYnVuZGxlcGhvYmlhLmNvbS9yZXN1
bHQ/cD1kc2EuanMKaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9idW5kbGVwaG9i
aWEvbWluL2RzYS5qcy5zdmcgLSAxNi43a0IKaHR0cHM6Ly9pbWcuc2hpZWxk
cy5pby9naXRodWIvcmVwby1zaXplL2FtZWppYXJvc2FyaW8vZHNhLmpzLnN2
ZyAtIDk4LjEgTUIKLS0+CgohW0ludGVyYWN0aXZlIERhdGEgU3RydWN0dXJl
c10oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20v
NDE4NjA1LzQ2MTE4ODkwLWJhNzIxMTgwLWMxZDYtMTFlOC04MmJjLTZhNjcx
NDI4YjQyMi5wbmcpCjwhLS0gW10oaHR0cHM6Ly9lbWJlZC5rdW11LmlvLzg1
ZjFhNGRlNWZiODQzMGExMGExYmY5YzUxMThlMDE1KSAtLT4KCgojIyBUYWJs
ZSBvZiBDb250ZW50cwoKPCEtLSBTVEFSVCBkb2N0b2MgZ2VuZXJhdGVkIFRP
QyBwbGVhc2Uga2VlcCBjb21tZW50IGhlcmUgdG8gYWxsb3cgYXV0byB1cGRh
dGUgLS0+CjwhLS0gRE9OJ1QgRURJVCBUSElTIFNFQ1RJT04sIElOU1RFQUQg
UkUtUlVOIGRvY3RvYyBUTyBVUERBVEUgLS0+CgoKLSBbSW5zdGFsbGF0aW9u
XSgjaW5zdGFsbGF0aW9uKQotIFtGZWF0dXJlc10oI2ZlYXR1cmVzKQotIFtX
aGF0J3MgSW5zaWRlXSgjd2hhdHMtaW5zaWRlKQogIC0gW/Cfk4ggQWxnb3Jp
dGhtcyBBbmFseXNpc10oIy1hbGdvcml0aG1zLWFuYWx5c2lzKQogIC0gW/Cf
pZ4gTGluZWFyIERhdGEgU3RydWN0dXJlc10oIy1saW5lYXItZGF0YS1zdHJ1
Y3R1cmVzKQogIC0gW/CfjLIgTm9uLUxpbmVhciBEYXRhIFN0cnVjdHVyZXNd
KCMtbm9uLWxpbmVhci1kYXRhLXN0cnVjdHVyZXMpCiAgLSBb4pqSIEFsZ29y
aXRobXMgVGVjaG5pcXVlc10oIyVFMiU5QSU5Mi1hbGdvcml0aG1zLXRlY2hu
aXF1ZXMpCi0gW0Jvb2tdKCNib29rKQotIFtGQVFdKCNmYXEpCi0gW1N1cHBv
cnRdKCNzdXBwb3J0KQotIFtMaWNlbnNlXSgjbGljZW5zZSkKCgo8IS0tIEVO
RCBkb2N0b2MgZ2VuZXJhdGVkIFRPQyBwbGVhc2Uga2VlcCBjb21tZW50IGhl
cmUgdG8gYWxsb3cgYXV0byB1cGRhdGUgLS0+CgoKIyMgSW5zdGFsbGF0aW9u
CgpZb3UgY2FuIGNsb25lIHRoZSByZXBvIG9yIGluc3RhbGwgdGhlIGNvZGUg
ZnJvbSBOUE06CgpgYGBzaApucG0gaW5zdGFsbCBkc2EuanMKYGBgCgphbmQg
dGhlbiB5b3UgY2FuIGltcG9ydCBpdCBpbnRvIHlvdXIgcHJvZ3JhbXMgb3Ig
Q0xJCgpgYGBqcwpjb25zdCB7IExpbmtlZExpc3QsIFF1ZXVlLCBTdGFjayB9
ID0gcmVxdWlyZSgnZHNhLmpzJyk7CmBgYAoKRm9yIGEgZnVsbCBsaXN0IG9m
IGFsbCB0aGUgZXhwb3NlZCBkYXRhIHN0cnVjdHVyZXMgYW5kIGFsZ29yaXRo
bXMgW3NlZV0oc3JjL2luZGV4LmpzKS4KCgojIyBGZWF0dXJlcwoKQWxnb3Jp
dGhtcyBhcmUgYW4gZXNzZW50aWFsIHRvb2xib3ggZm9yIGV2ZXJ5IHByb2dy
YW1tZXIuCgpZb3UgdXN1YWxseSBuZWVkIGFsZ29yaXRobXMgd2hlbiB5b3Ug
aGF2ZSB0byBzb3J0IGRhdGEsIHNlYXJjaCBmb3IgYSB2YWx1ZSwgdHJhbnNm
b3JtIGRhdGEsIHNjYWxlIHlvdXIgY29kZSB0byBtYW55IHVzZXJzLCB0byBu
YW1lIGEgZmV3LgpBbGdvcml0aG1zIGFyZSBqdXN0IHRoZSBzdGVwIHlvdSBm
b2xsb3cgdG8gc29sdmUgYSBwcm9ibGVtIHdoaWxlIGRhdGEgc3RydWN0dXJl
cyBhcmUgd2hlcmUgeW91IHN0b3JlIHRoZSBkYXRhIGZvciBsYXRlciBtYW5p
cHVsYXRpb24uIEJvdGggY29tYmluZWQgY3JlYXRlIHByb2dyYW1zLgoKPiBB
bGdvcml0aG1zICsgRGF0YSBTdHJ1Y3R1cmVzID0gUHJvZ3JhbXMuCgpNb3N0
IHByb2dyYW1taW5nIGxhbmd1YWdlcyBhbmQgbGlicmFyaWVzIGluZGVlZCBw
cm92aWRlIGltcGxlbWVudGF0aW9ucyBmb3IgYmFzaWMgZGF0YSBzdHJ1Y3R1
cmVzIGFuZCBhbGdvcml0aG1zLgpIb3dldmVyLCB0byBtYWtlIHVzZSBvZiBk
YXRhIHN0cnVjdHVyZXMgcHJvcGVybHksIHlvdSBoYXZlIHRvIGtub3cgdGhl
IHRyYWRlb2ZmcyBzbyB5b3UgY2FuIGNob29zZSB0aGUgYmVzdCB0b29sIGZv
ciB0aGUgam9iLgoKVGhpcyBtYXRlcmlhbCBpcyBnb2luZyB0byB0ZWFjaCB5
b3UgdG86CgotIPCfm6AgQXBwbHkgc3RyYXRlZ2llcyB0byB0YWNrbGUgYWxn
b3JpdGhtIHF1ZXN0aW9ucy4gTmV2ZXIgdG8gZ2V0IHN0dWNrIGFnYWluLiBB
Y2UgdGhvc2UgaW50ZXJ2aWV3cyEKLSDinILvuI8gQ29uc3RydWN0IGVmZmlj
aWVudCBhbGdvcml0aG1zLiBMZWFybiBob3cgdG8gYnJlYWsgZG93biBwcm9i
bGVtcyBpbiBtYW5hZ2VhYmxlIHBpZWNlcy4KLSDwn6egIEltcHJvdmUgeW91
ciBwcm9ibGVtLXNvbHZpbmcgc2tpbGxzIGFuZCBiZWNvbWUgYSBzdHJvbmdl
ciBkZXZlbG9wZXIgYnkgdW5kZXJzdGFuZGluZyBmdW5kYW1lbnRhbCBjb21w
dXRlciBzY2llbmNlIGNvbmNlcHRzLgotIPCfpJMgQ292ZXIgZXNzZW50aWFs
IHRvcGljcywgc3VjaCBhcyBiaWcgTyB0aW1lLCBkYXRhIHN0cnVjdHVyZXMs
IGFuZCBtdXN0LWtub3cgYWxnb3JpdGhtcy4gSW1wbGVtZW50IDEwKyBkYXRh
IHN0cnVjdHVyZXMgZnJvbSBzY3JhdGNoLgoKIyMgV2hhdCdzIEluc2lkZQoK
QWxsIHRoZSBjb2RlIGFuZCBleHBsYW5hdGlvbnMgYXJlIGF2YWlsYWJsZSBv
biB0aGlzIHJlcG8uIFlvdSBjYW4gZGlnIHRocm91Z2ggdGhlIGxpbmtzIGFu
ZCBjb2RlIGV4YW1wbGVzIGZyb20gdGhlIChbc3JjIGZvbGRlcl0oc3JjKSku
IEhvd2V2ZXIsIHRoZSBpbmxpbmUgY29kZSBleGFtcGxlcyBhcmUgbm90IGV4
cGFuZGVkIChiZWNhdXNlIG9mIEdpdGh1YidzIGFzY2lpZG9jIGxpbWl0YXRp
b25zKSwgYnV0IHlvdSBjYW4gZm9sbG93IHRoZSBwYXRoIGFuZCBzZWUgdGhl
IGltcGxlbWVudGF0aW9uLgoKX05vdGU6IElmIHlvdSBwcmVmZXIgdG8gY29u
c3VtZSB0aGUgaW5mb3JtYXRpb24gbW9yZSBsaW5lYXJseSB0aGVuIHRoZSBb
Ym9vayBmb3JtYXRdKGh0dHBzOi8vYm9va3MuYWRyaWFubWVqaWEuY29tL2Rz
YWpzLWRhdGEtc3RydWN0dXJlcy1hbGdvcml0aG1zLWphdmFzY3JpcHQvKSB3
b3VsZCBiZSBtb3JlIGFwcHJvcHJpYXRlIGZvciB5b3UuXwoKVGhlIHRvcGlj
cyBhcmUgZGl2aWRlZCBpbnRvIGZvdXIgbWFpbiBjYXRlZ29yaWVzIGFzIHlv
dSBjYW4gc2VlIGJlbG93OgoKXyhZb3UgY2FuIGNsaWNrIG9uIHRoZSB0cmlh
bmdsZSDir4ggdG8gZXhwYW5kIHRoZSB0b3BpY3MpXwoKIyMjIPCfk4ggW0Fs
Z29yaXRobXMgQW5hbHlzaXNdKGJvb2svcGFydDAxLWFsZ29yaXRobXMtYW5h
bHlzaXMuYXNjKQoKPCEtLSAtIENvbXB1dGVyIFNjaWVuY2UgbnVnZ2V0cyB3
aXRob3V0IGFsbCB0aGUgbXVtYm8tanVtYm8uCi0gTGVhcm4gaG93IHRvIGNv
bXBhcmUgYWxnb3JpdGhtcyB1c2luZyBCaWcgTyBub3RhdGlvbi4KLSA4IGV4
YW1wbGVzIHRvIGV4cGxhaW4gd2l0aCBjb2RlIGhvdyB0byBjYWxjdWxhdGUg
dGltZSBjb21wbGV4aXR5LiAtLT4KCjxibG9ja3F1b3RlPgoKPGRldGFpbHM+
CiAgPHN1bW1hcnk+CiAgICBDb21wdXRlciBTY2llbmNlIG51Z2dldHMgd2l0
aG91dCBhbGwgdGhlIG11bWJvLWp1bWJvCiAgPC9zdW1tYXJ5PgoKLS0tCgoj
IyMgW0NvbXB1dGVyIFNjaWVuY2UgbnVnZ2V0cyB3aXRob3V0IGFsbCB0aGUg
bXVtYm8tanVtYm9dKGJvb2svY29udGVudC9wYXJ0MDEvYWxnb3JpdGhtcy1h
bmFseXNpcy5hc2MpCgojIyMjIExlYXJuIHRvIGNhbGN1bGF0ZSBydW4gdGlt
ZSBmcm9tIGNvZGUgZXhhbXBsZXMKCiFbVHJhbnNsYXRpbmcgbGluZXMgb2Yg
Y29kZSB0byBhbiBhcHByb3hpbWF0ZSBudW1iZXIgb2Ygb3BlcmF0aW9uc10o
Ym9vay9pbWFnZXMvaW1hZ2U0LnBuZykKCi0tLQoKPC9kZXRhaWxzPgoKPGRl
dGFpbHM+CiAgPHN1bW1hcnk+CiAgICBMZWFybiBob3cgdG8gY29tcGFyZSBh
bGdvcml0aG1zIHVzaW5nIEJpZyBPIG5vdGF0aW9uLgogIDwvc3VtbWFyeT4K
Ci0tLQoKIyMjIFtMZWFybiBob3cgdG8gY29tcGFyZSBhbGdvcml0aG1zIHVz
aW5nIEJpZyBPIG5vdGF0aW9uLl0oYm9vay9jb250ZW50L3BhcnQwMS9iaWct
by1leGFtcGxlcy5hc2MjZmluZGluZy1pZi1hbi1hcnJheS1pcy1lbXB0eSkK
CiMjIyMgQ29tcGFyaW5nIGFsZ29yaXRobXMgdXNpbmcgQmlnIE8gbm90YXRp
b24KCkxldCdzIHNheSB5b3Ugd2FudCB0byBmaW5kIHRoZSBkdXBsaWNhdGVz
IG9uIGFuIGFycmF5LgpVc2luZyBCaWcgTyBub3RhdGlvbiwgd2UgY2FuIGNv
bXBhcmUgZGlmZmVyZW50IGltcGxlbWVudGF0aW9ucyB0aGF0IGRvIHRoZSBz
YW1lIGJ1dAp0aGV5IHRha2UgZGlmZmVyZW50IHRpbWUgdG8gY29tcGxldGUu
CgotIFtPcHRpbWFsIHNvbHV0aW9uIHVzaW5nIGEgbWFwXShib29rL2NvbnRl
bnQvcGFydDAxL2JpZy1vLWV4YW1wbGVzLmFzYyNsaW5lYXItZXhhbXBsZSkK
LSBbRmluZGluZyBkdXBsaWNhdGVzIGluIGFuIGFycmF5IChuYcOvdmUgYXBw
cm9hY2gpXShib29rL2NvbnRlbnQvcGFydDAxL2JpZy1vLWV4YW1wbGVzLmFz
YyNxdWFkcmF0aWMtZXhhbXBsZSkKCi0tLQoKPC9kZXRhaWxzPgoKPGRldGFp
bHM+CiAgPHN1bW1hcnk+CiAgICA4IGV4YW1wbGVzIHRvIGV4cGxhaW4gd2l0
aCBjb2RlIGhvdyB0byBjYWxjdWxhdGUgdGltZSBjb21wbGV4aXR5CiAgPC9z
dW1tYXJ5PgoKLS0tCgpbOCBleGFtcGxlcyB0byBleHBsYWluIHdpdGggY29k
ZSBob3cgdG8gY2FsY3VsYXRlIHRpbWUgY29tcGxleGl0eV0oYm9vay9jb250
ZW50L3BhcnQwMS9iaWctby1leGFtcGxlcy5hc2Mjc3VtbWFyeSkKCiMjIyMg
TW9zdCBjb21tb24gdGltZSBjb21wbGV4aXRpZXMKClshW2ltYWdlXShodHRw
czovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS80MTg2MDUv
NTk2MTczNDItMmE3MTUwODAtOTBmNC0xMWU5LTlkZTktOTMxNWZiMDEzM2Y5
LnBuZyldKGJvb2svY29udGVudC9wYXJ0MDEvYmlnLW8tZXhhbXBsZXMuYXNj
I3N1bW1hcnkpCgo8IS0tIC0gQ29uc3RhbnQgdGltZTogX08oMSlfCi0gTG9n
YXJpdGhtaWMgdGltZTogX08obG9nIG4pXwotIExpbmVhciB0aW1lOiBfTyhu
KV8KLSBMaW5lYXJpdGhtaWMgdGltZTogX08obiBsb2cgbilfCi0gUXVhZHJh
dGljIHRpbWU6IF9PKG5eMl4pXwotIEN1YmljIHRpbWU6IF9PKG5eM14pXwot
IEV4cG9uZW50aWFsIHRpbWU6IF9PKDJebl4pXwotIEZhY3RvcmlhbCB0aW1l
OiBfTyhuISlfIC0tPgoKIyMjIyBUaW1lIGNvbXBsZXhpdHkgZ3JhcGgKCiFb
TW9zdCBjb21tb24gdGltZSBjb21wbGV4aXRpZXNdKGJvb2svaW1hZ2VzL2lt
YWdlNS5wbmcpCgotLS0KCjwvZGV0YWlscz4KPC9ibG9ja3F1b3RlPgoKIyMj
IPCfpZ4gW0xpbmVhciBEYXRhIFN0cnVjdHVyZXNdKGJvb2svcGFydDAyLWxp
bmVhci1kYXRhLXN0cnVjdHVyZXMuYXNjKQoKPCEtLSAtIFVuZGVyc3RhbmQg
dGhlIGlucyBhbmQgb3V0cyBvZiB0aGUgbW9zdCBjb21tb24gZGF0YSBzdHJ1
Y3R1cmVzLgotIFdoZW4gdG8gdXNlIGFuIEFycmF5IG9yIExpbmtlZCBMaXN0
LiBLbm93IHRoZSB0cmFkZW9mZnMuCi0gQnVpbGQgYSBTdGFjayBhbmQgYSBR
dWV1ZSBmcm9tIHNjcmF0Y2guIC0tPgoKPGJsb2NrcXVvdGU+CgogIDxkZXRh
aWxzPgogICAgPHN1bW1hcnk+CiAgICAgIFVuZGVyc3RhbmQgdGhlIGlucyBh
bmQgb3V0cyBvZiB0aGUgbW9zdCBjb21tb24gZGF0YSBzdHJ1Y3R1cmVzLgog
ICAgPC9zdW1tYXJ5PgoKLS0tCgojIyMjIFtVbmRlcnN0YW5kIHRoZSBpbnMg
YW5kIG91dHMgb2YgdGhlIG1vc3QgY29tbW9uIGRhdGEgc3RydWN0dXJlc10o
Ym9vay9wYXJ0MDItbGluZWFyLWRhdGEtc3RydWN0dXJlcy5hc2MpCgoKLSBb
QXJyYXlzXShib29rL2NvbnRlbnQvcGFydDAyL2FycmF5LmFzYyk6IEJ1aWx0
LWluIGluIG1vc3QgbGFuZ3VhZ2VzIHNvIG5vdCBpbXBsZW1lbnRlZCBoZXJl
LiBbQXJyYXkgVGltZSBjb21wbGV4aXR5XShib29rL2NvbnRlbnQvcGFydDAy
L2FycmF5LmFzYyNhcnJheS1jb21wbGV4aXR5KQogICAgPCEtLSBbUG9zdF0o
aHR0cHM6Ly9hZHJpYW5tZWppYS5jb20vYmxvZy8yMDE4LzA0LzI4L2RhdGEt
c3RydWN0dXJlcy10aW1lLWNvbXBsZXhpdHktZm9yLWJlZ2lubmVycy1hcnJh
eXMtaGFzaG1hcHMtbGlua2VkLWxpc3RzLXN0YWNrcy1xdWV1ZXMtdHV0b3Jp
YWwvI0FycmF5KS4gLS0+CgotIFtMaW5rZWQgTGlzdF0oYm9vay9jb250ZW50
L3BhcnQwMi9saW5rZWQtbGlzdC5hc2MpOiBlYWNoIGRhdGEgbm9kZSBoYXMg
YSBsaW5rIHRvIHRoZSBuZXh0IChhbmQKICAgIHByZXZpb3VzKS4KICAgIFtD
b2RlXShzcmMvZGF0YS1zdHJ1Y3R1cmVzL2xpbmtlZC1saXN0cy9saW5rZWQt
bGlzdC5qcykKICAgIHwKICAgIFtMaW5rZWQgTGlzdCBUaW1lIENvbXBsZXhp
dHldKGJvb2svY29udGVudC9wYXJ0MDIvbGlua2VkLWxpc3QuYXNjI2xpbmtl
ZC1saXN0LWNvbXBsZXhpdHktdnMtYXJyYXktY29tcGxleGl0eSkKICAgIDwh
LS0gW1Bvc3RdKGh0dHBzOi8vYWRyaWFubWVqaWEuY29tL2Jsb2cvMjAxOC8w
NC8yOC9kYXRhLXN0cnVjdHVyZXMtdGltZS1jb21wbGV4aXR5LWZvci1iZWdp
bm5lcnMtYXJyYXlzLWhhc2htYXBzLWxpbmtlZC1saXN0cy1zdGFja3MtcXVl
dWVzLXR1dG9yaWFsLyNMaW5rZWQtTGlzdHMpIC0tPgoKLSBbUXVldWVdKGJv
b2svY29udGVudC9wYXJ0MDIvcXVldWUuYXNjKTogZGF0YSBmbG93cyBpbiBh
ICJmaXJzdC1pbiwgZmlyc3Qtb3V0IiAoRklGTykgbWFubmVyLgogICAgW0Nv
ZGVdKHNyYy9kYXRhLXN0cnVjdHVyZXMvcXVldWVzL3F1ZXVlLmpzKQogICAg
fAogICAgW1F1ZXVlIFRpbWUgQ29tcGxleGl0eV0oYm9vay9jb250ZW50L3Bh
cnQwMi9xdWV1ZS5hc2MjcXVldWUtY29tcGxleGl0eSkKICAgIDwhLS0gW1Bv
c3RdKGh0dHBzOi8vYWRyaWFubWVqaWEuY29tL2Jsb2cvMjAxOC8wNC8yOC9k
YXRhLXN0cnVjdHVyZXMtdGltZS1jb21wbGV4aXR5LWZvci1iZWdpbm5lcnMt
YXJyYXlzLWhhc2htYXBzLWxpbmtlZC1saXN0cy1zdGFja3MtcXVldWVzLXR1
dG9yaWFsLyNRdWV1ZXMpIC0tPgoKLSBbU3RhY2tdKGJvb2svY29udGVudC9w
YXJ0MDIvc3RhY2suYXNjKTogZGF0YSBmbG93cyBpbiBhICJsYXN0LWluLCBm
aXJzdC1vdXQiIChMSUZPKSBtYW5uZXIuCiAgICBbQ29kZV0oc3JjL2RhdGEt
c3RydWN0dXJlcy9zdGFja3Mvc3RhY2suanMpCiAgICB8CiAgICBbU3RhY2sg
VGltZSBDb21wbGV4aXR5XShib29rL2NvbnRlbnQvcGFydDAyL3N0YWNrLmFz
YyNzdGFjay1jb21wbGV4aXR5KQogICAgPCEtLSBbUG9zdF0oaHR0cHM6Ly9h
ZHJpYW5tZWppYS5jb20vYmxvZy8yMDE4LzA0LzI4L2RhdGEtc3RydWN0dXJl
cy10aW1lLWNvbXBsZXhpdHktZm9yLWJlZ2lubmVycy1hcnJheXMtaGFzaG1h
cHMtbGlua2VkLWxpc3RzLXN0YWNrcy1xdWV1ZXMtdHV0b3JpYWwvI1N0YWNr
cykgLS0+CgotLS0KCiAgPC9kZXRhaWxzPgogIDxkZXRhaWxzPgogICAgPHN1
bW1hcnk+CiAgICAgIFdoZW4gdG8gdXNlIGFuIEFycmF5IG9yIExpbmtlZCBM
aXN0LiBLbm93IHRoZSB0cmFkZW9mZnMuCiAgICA8L3N1bW1hcnk+CgotLS0K
CiMjIyMgW1doZW4gdG8gdXNlIGFuIEFycmF5IG9yIExpbmtlZCBMaXN0LiBL
bm93IHRoZSB0cmFkZW9mZnNdKGJvb2svY29udGVudC9wYXJ0MDIvYXJyYXkt
dnMtbGlzdC12cy1xdWV1ZS12cy1zdGFjay5hc2MpCgpVc2UgQXJyYXlzIHdo
ZW7igKYKLSBZb3UgbmVlZCB0byBhY2Nlc3MgZGF0YSBpbiByYW5kb20gb3Jk
ZXIgZmFzdCAodXNpbmcgYW4gaW5kZXgpLgotIFlvdXIgZGF0YSBpcyBtdWx0
aS1kaW1lbnNpb25hbCAoZS5nLiwgbWF0cml4LCB0ZW5zb3IpLgotIHdoZW4g
dGhlcmUgaXMgYSBsaW1pdCBvbiBtZW1vcnkgYXMgdGhlIHJlcXVpcmVtZW50
IG9mIG1lbW9yeSBpcyBsZXNzIGR1ZSB0byBhY3R1YWwgZGF0YSBiZWluZyBz
dG9yZWQgd2l0aGluIHRoZSBpbmRleCBpbiB0aGUgYXJyYXkuCgpVc2UgTGlu
a2VkIExpc3RzIHdoZW46Ci0gWW91IHdpbGwgYWNjZXNzIHlvdXIgZGF0YSBz
ZXF1ZW50aWFsbHkuCi0gWW91IHdhbnQgdG8gc2F2ZSBtZW1vcnkgYW5kIG9u
bHkgYWxsb2NhdGUgbWVtb3J5IGFzIHlvdSBuZWVkIGl0LgotIFlvdSB3YW50
IGNvbnN0YW50IHRpbWUgdG8gcmVtb3ZlL2FkZCBmcm9tIGV4dHJlbWVzIG9m
IHRoZSBsaXN0LgotIHdoZW4gc2l6ZSByZXF1aXJlbWVudCBpcyB1bmtub3du
IC0gZHluYW1pYyBzaXplIGFkdmFudGFnZQoKLS0tCgogIDwvZGV0YWlscz4K
ICA8ZGV0YWlscz4KICAgIDxzdW1tYXJ5PgogICAgICBCdWlsZCBhIExpc3Qs
IFN0YWNrLCBhbmQgYSBRdWV1ZS4KICAgIDwvc3VtbWFyeT4KCiAgLS0tCgog
ICMjIyMgW0J1aWxkIGEgTGlzdCwgU3RhY2sgYW5kIGEgUXVldWUgZnJvbSBz
Y3JhdGNoXShib29rL3BhcnQwMi1saW5lYXItZGF0YS1zdHJ1Y3R1cmVzLmFz
YykKCiAgQnVpbGQgYW55IG9mIHRoZXNlIGRhdGEgc3RydWN0dXJlcyBmcm9t
IHNjcmF0Y2g6CiAgLSBbTGlua2VkIExpc3RdKHNyYy9kYXRhLXN0cnVjdHVy
ZXMvbGlua2VkLWxpc3RzL2xpbmtlZC1saXN0LmpzKQogIC0gW1N0YWNrXShz
cmMvZGF0YS1zdHJ1Y3R1cmVzL3N0YWNrcy9zdGFjay5qcykKICAtIFtRdWV1
ZV0oc3JjL2RhdGEtc3RydWN0dXJlcy9xdWV1ZXMvcXVldWUuanMpCgogIC0t
LQoKICA8L2RldGFpbHM+CjwvYmxvY2txdW90ZT4KCiMjIyDwn4yyIFtOb24t
TGluZWFyIERhdGEgU3RydWN0dXJlc10oYm9vay9wYXJ0MDMtZ3JhcGgtZGF0
YS1zdHJ1Y3R1cmVzLmFzYykKPCEtLSAtIFVuZGVyc3RhbmQgb25lIG9mIHRo
ZSBtb3N0IHZlcnNhdGlsZSBkYXRhIHN0cnVjdHVyZSBvZiBhbGw6IE1hcHMg
LS0+CjwhLS0gLSBLbm93IHRoZSBwcm9wZXJ0aWVzIG9mIEdyYXBocyBhbmQg
VHJlZXMuIC0tPgo8IS0tIC0gSW1wbGVtZW50IGEgYmluYXJ5IHNlYXJjaCB0
cmVlIGZvciBmYXN0IGxvb2t1cHMuIC0tPgoKPGJsb2NrcXVvdGU+CiAgPGRl
dGFpbHM+CiAgICA8c3VtbWFyeT4KICAgICAgVW5kZXJzdGFuZCBvbmUgb2Yg
dGhlIG1vc3QgdmVyc2F0aWxlIGRhdGEgc3RydWN0dXJlIG9mIGFsbDogTWFw
cwogICAgPC9zdW1tYXJ5PgoKLS0tCgojIyMjIFtIYXNoTWFwc10oYm9vay9j
b250ZW50L3BhcnQwMy9tYXAuYXNjKQoKTGVhcm4gaG93IHRvIGltcGxlbWVu
dCBkaWZmZXJlbnQgdHlwZXMgb2YgTWFwcyBzdWNoIGFzOgotIFtIYXNoTWFw
XShib29rL2NvbnRlbnQvcGFydDAzL2hhc2htYXAuYXNjKQotIFtUcmVlTWFw
XShib29rL2NvbnRlbnQvcGFydDAzL3RyZWVtYXAuYXNjKQoKQWxzbywgW2xl
YXJuIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIGRpZmZlcmVudCBNYXBz
IGltcGxlbWVudGF0aW9uc10oYm9vay9jb250ZW50L3BhcnQwMy90aW1lLWNv
bXBsZXhpdHktZ3JhcGgtZGF0YS1zdHJ1Y3R1cmVzLmFzYyk6CgotIGBIYXNo
TWFwYCBpcyBtb3JlIHRpbWUtZWZmaWNpZW50LiBBIGBUcmVlTWFwYCBpcyBt
b3JlIHNwYWNlLWVmZmljaWVudC4KLSBgVHJlZU1hcGAgc2VhcmNoIGNvbXBs
ZXhpdHkgaXMgKk8obG9nIG4pKiwgd2hpbGUgYW4gb3B0aW1pemVkIGBIYXNo
TWFwYCBpcyAqTygxKSogb24gYXZlcmFnZS4KLSBgSGFzaE1hcGDigJlzIGtl
eXMgYXJlIGluIGluc2VydGlvbiBvcmRlciAob3IgcmFuZG9tIGRlcGVuZGlu
ZyBvbiB0aGUgaW1wbGVtZW50YXRpb24pLiBgVHJlZU1hcGDigJlzIGtleXMg
YXJlIGFsd2F5cyBzb3J0ZWQuCi0gYFRyZWVNYXBgIG9mZmVycyBzb21lIHN0
YXRpc3RpY2FsIGRhdGEgZm9yIGZyZWUgc3VjaCBhczogZ2V0IG1pbmltdW0s
IGdldCBtYXhpbXVtLCBtZWRpYW4sIGZpbmQgcmFuZ2VzIG9mIGtleXMuIGBI
YXNoTWFwYCBkb2VzbuKAmXQuCi0gYFRyZWVNYXBgIGhhcyBhIGd1YXJhbnRl
ZSBhbHdheXMgYW4gKk8obG9nIG4pKiwgd2hpbGUgYEhhc2hNYXBgcyBoYXMg
YW4gYW1vcnRpemVkIHRpbWUgb2YgKk8oMSkqIGJ1dCBpbiB0aGUgcmFyZSBj
YXNlIG9mIGEgcmVoYXNoLCBpdCB3b3VsZCB0YWtlIGFuICpPKG4pKi4KCi0t
LQoKICA8L2RldGFpbHM+CgogIDxkZXRhaWxzPgogICAgPHN1bW1hcnk+CiAg
ICBLbm93IHRoZSBwcm9wZXJ0aWVzIG9mIEdyYXBocyBhbmQgVHJlZXMuCiAg
ICA8L3N1bW1hcnk+CgotLS0KCiMjIyMgW0tub3cgdGhlIHByb3BlcnRpZXMg
b2YgR3JhcGhzIGFuZCBUcmVlc10oYm9vay9wYXJ0MDMtZ3JhcGgtZGF0YS1z
dHJ1Y3R1cmVzLmFzYykKCiMjIyMjIFtHcmFwaHNdKGJvb2svY29udGVudC9w
YXJ0MDMvZ3JhcGguYXNjKQoKS25vdyBhbGwgdGhlIGdyYXBocyBwcm9wZXJ0
aWVzIHdpdGggbWFueSBpbWFnZXMgYW5kIGlsbHVzdHJhdGlvbnMuCgohW2dy
YXBoIGV4YW1wbGUgd2l0aCBVU0EgYWlycG9ydHNdKGJvb2svaW1hZ2VzL2lt
YWdlNDYucG5nKQoKICoqR3JhcGhzKio6IGRhdGEgKipub2RlcyoqIHRoYXQg
Y2FuIGhhdmUgYSBjb25uZWN0aW9uIG9yICoqZWRnZSoqIHRvCiAgICB6ZXJv
IG9yIG1vcmUgYWRqYWNlbnQgbm9kZXMuIFVubGlrZSB0cmVlcywgbm9kZXMg
Y2FuIGhhdmUgbXVsdGlwbGUKICAgIHBhcmVudHMsIGxvb3BzLgogICAgW0Nv
ZGVdKHNyYy9kYXRhLXN0cnVjdHVyZXMvZ3JhcGhzL2dyYXBoLmpzKQogICAg
fAogICAgW0dyYXBoIFRpbWUgQ29tcGxleGl0eV0oYm9vay9jb250ZW50L3Bh
cnQwMy9ncmFwaC5hc2MjZ3JhcGgtY29tcGxleGl0eSkKCiMjIyMgW1RyZWVz
XShib29rL2NvbnRlbnQvcGFydDAzL3RyZWUtaW50cm8uYXNjKQoKTGVhcm4g
YWxsIHRoZSBkaWZmZXJlbnQga2luZHMgb2YgdHJlZXMgYW5kIHRoZWlyIHBy
b3BlcnRpZXMuCgohW3RyZWUgZGF0YSBzdHJ1Y3R1cmUgcHJvcGVydGllc10o
Ym9vay9pbWFnZXMvaW1hZ2UzMS5qcGcpCgotICoqVHJlZXMqKjogZGF0YSBu
b2RlcyBoYXMgemVybyBvciBtb3JlIGFkamFjZW50IG5vZGVzIGEuay5hLgog
ICAgY2hpbGRyZW4uIEVhY2ggbm9kZSBjYW4gb25seSBoYXZlIG9uZSBwYXJl
bnQgbm9kZSBvdGhlcndpc2UgaXMgYQogICAgZ3JhcGggbm90IGEgdHJlZS4K
ICAgIFtDb2RlXShzcmMvZGF0YS1zdHJ1Y3R1cmVzL3RyZWVzKQogICAgfAog
ICAgW0RvY3NdKGJvb2svY29udGVudC9wYXJ0MDMvdHJlZS1pbnRyby5hc2Mp
CiAgICA8IS0tIFtQb3N0XShodHRwczovL2Fkcmlhbm1lamlhLmNvbS9ibG9n
LzIwMTgvMDYvMTEvZGF0YS1zdHJ1Y3R1cmVzLWZvci1iZWdpbm5lcnMtdHJl
ZXMtYmluYXJ5LXNlYXJjaC10cmVlLXR1dG9yaWFsLykgLS0+CgogICAgLSAq
KkJpbmFyeSBUcmVlcyoqOiBzYW1lIGFzIGEgdHJlZSBidXQgb25seSBjYW4g
aGF2ZSB0d28gY2hpbGRyZW4gYXQKICAgICAgICBtb3N0LgogICAgICAgIFtD
b2RlXShzcmMvZGF0YS1zdHJ1Y3R1cmVzL3RyZWVzKQogICAgICAgIHwKICAg
ICAgICBbRG9jc10oYm9vay9jb250ZW50L3BhcnQwMy90cmVlLWludHJvLmFz
YyNiaW5hcnktdHJlZSkKICAgICAgICA8IS0tIFtQb3N0XShodHRwczovL2Fk
cmlhbm1lamlhLmNvbS9ibG9nLzIwMTgvMDYvMTEvZGF0YS1zdHJ1Y3R1cmVz
LWZvci1iZWdpbm5lcnMtdHJlZXMtYmluYXJ5LXNlYXJjaC10cmVlLXR1dG9y
aWFsLyNCaW5hcnktVHJlZXMpIC0tPgoKICAgIC0gKipCaW5hcnkgU2VhcmNo
IFRyZWVzKiogKEJTVCk6IHNhbWUgYXMgYSBiaW5hcnkgdHJlZSwgYnV0IHRo
ZQogICAgICAgIG5vZGVzIHZhbHVlIGtlZXAgdGhpcyBvcmRlciBgbGVmdCA8
IHBhcmVudCA8IHJpZ2h0YC4KICAgICAgICBbQ29kZV0oc3JjL2RhdGEtc3Ry
dWN0dXJlcy90cmVlcy9iaW5hcnktc2VhcmNoLXRyZWUuanMpCiAgICAgICAg
fAogICAgICAgIFtCU1QgVGltZSBjb21wbGV4aXR5XShib29rL2NvbnRlbnQv
cGFydDAzL2JpbmFyeS1zZWFyY2gtdHJlZS5hc2MjdHJlZS1jb21wbGV4aXR5
KQogICAgICAgIDwhLS0gW1Bvc3RdKGh0dHBzOi8vYWRyaWFubWVqaWEuY29t
L2Jsb2cvMjAxOC8wNi8xMS9kYXRhLXN0cnVjdHVyZXMtZm9yLWJlZ2lubmVy
cy10cmVlcy1iaW5hcnktc2VhcmNoLXRyZWUtdHV0b3JpYWwvI0JpbmFyeS1T
ZWFyY2gtVHJlZS1CU1QpIC0tPgoKICAgIC0gKipBVkwgVHJlZXMqKjogU2Vs
Zi1iYWxhbmNlZCBCU1QgdG8gbWF4aW1pemUgbG9va3VwIHRpbWUuCiAgICAg
ICAgW0NvZGVdKHNyYy9kYXRhLXN0cnVjdHVyZXMvdHJlZXMvYXZsLXRyZWUu
anMpCiAgICAgICAgfAogICAgICAgIFtBVkwgVHJlZSBkb2NzXShib29rL0Mt
QVZMLXRyZWUuYXNjKQogICAgICAgIHwKICAgICAgICBbU2VsZi1iYWxhbmNp
bmcgJiB0cmVlIHJvdGF0aW9ucyBkb2NzXShib29rL0Itc2VsZi1iYWxhbmNp
bmctYmluYXJ5LXNlYXJjaC10cmVlcy5hc2MpCiAgICAgICAgPCEtLSBbUG9z
dF0oaHR0cHM6Ly9hZHJpYW5tZWppYS5jb20vYmxvZy8yMDE4LzA3LzE2L3Nl
bGYtYmFsYW5jZWQtYmluYXJ5LXNlYXJjaC10cmVlcy13aXRoLWF2bC10cmVl
LWRhdGEtc3RydWN0dXJlLWZvci1iZWdpbm5lcnMvKSAtLT4KCiAgICAtICoq
UmVkLUJsYWNrIFRyZWVzKio6IFNlbGYtYmFsYW5jZWQgQlNUIGxvb3NlciB0
aGFuIEFWTCB0bwogICAgICAgIG1heGltaXplIGluc2VydGlvbiBzcGVlZC4K
ICAgICAgICBbQ29kZV0oc3JjL2RhdGEtc3RydWN0dXJlcy90cmVlcy9yZWQt
YmxhY2stdHJlZS5qcykKCi0tLQoKICA8L2RldGFpbHM+CgogIDxkZXRhaWxz
PgogICAgPHN1bW1hcnk+CiAgICAgIEltcGxlbWVudCBhIGJpbmFyeSBzZWFy
Y2ggdHJlZSBmb3IgZmFzdCBsb29rdXBzLgogICAgPC9zdW1tYXJ5PgoKLS0t
CgojIyMjIFtJbXBsZW1lbnQgYSBiaW5hcnkgc2VhcmNoIHRyZWUgZm9yIGZh
c3QgbG9va3Vwc10oYm9vay9jb250ZW50L3BhcnQwMy9iaW5hcnktc2VhcmNo
LXRyZWUuYXNjKQoKLSBMZWFybiBob3cgdG8gYWRkL3JlbW92ZS91cGRhdGUg
dmFsdWVzIGluIGEgdHJlZToKIVtpbnNlcnRpbmcgbm9kZSBpbiBhIHRyZWVd
KGJvb2svaW1hZ2VzL2ltYWdlMzYucG5nKQoKLSBbSG93IHRvIG1ha2UgYSB0
cmVlIGJhbGFuY2VkP10oYm9vay9CLXNlbGYtYmFsYW5jaW5nLWJpbmFyeS1z
ZWFyY2gtdHJlZXMuYXNjKQoKRnJvbSB1bmJhbGFuY2VkIEJTVCB0byBiYWxh
bmNlZCBCU1QKYGBgCjEgICAgICAgICAgICAgICAgICAgICAgICAgICAyCiAg
XCAgICAgICAgICAgICAgICAgICAgICAgLyAgIFwKICAgMiAgICAgICAgPT4g
ICAgICAgICAgIDEgICAgIDMKICAgIFwKICAgICAzCmBgYAoKCi0tLQoKICA8
L2RldGFpbHM+CjwvYmxvY2txdW90ZT4KCiMjIyDimpIgW0FsZ29yaXRobWlj
IFRvb2xib3hdKGJvb2svcGFydDA0LWFsZ29yaXRobWljLXRvb2xib3guYXNj
KQoKPCEtLSAtIE5ldmVyIGdldCBzdHVjayBzb2x2aW5nIGEgcHJvYmxlbSB3
aXRoIDcgc2ltcGxlIHN0ZXBzLiAtLT4KPCEtLSAtIE1hc3RlciB0aGUgbW9z
dCBwb3B1bGFyIHNvcnRpbmcgYWxnb3JpdGhtcyAobWVyZ2Ugc29ydCwgcXVp
Y2tzb3J0LCBpbnNlcnRpb24gc29ydCwgZXRjLikgLS0+CjwhLS0gLSBMZWFy
biBkaWZmZXJlbnQgYXBwcm9hY2hlcyB0byBzb2x2ZSBwcm9ibGVtcyBzdWNo
IGFzIGRpdmlkZSBhbmQgY29ucXVlciwgZHluYW1pYyBwcm9ncmFtbWluZywg
Z3JlZWR5IGFsZ29yaXRobXMsIGFuZCBiYWNrdHJhY2tpbmcuIC0tPgoKPGJs
b2NrcXVvdGU+CiAgPGRldGFpbHM+CiAgICA8c3VtbWFyeT4KICAgICAgTmV2
ZXIgZ2V0IHN0dWNrIHNvbHZpbmcgYSBwcm9ibGVtIHdpdGggNyBzaW1wbGUg
c3RlcHMKICAgIDwvc3VtbWFyeT4KCi0tLQoKIyMjIyBbTmV2ZXIgZ2V0IHN0
dWNrIHNvbHZpbmcgYSBwcm9ibGVtIHdpdGggOCBzaW1wbGUgc3RlcHNdKGJv
b2svcGFydDA0LWFsZ29yaXRobWljLXRvb2xib3guYXNjKQoKMS4gVW5kZXJz
dGFuZCB0aGUgcHJvYmxlbQoxLiBCdWlsZCBhIHNpbXBsZSBleGFtcGxlIChu
byBlZGdlIGNhc2VzIHlldCkKMS4gQnJhaW5zdG9ybSBzb2x1dGlvbnMgKGdy
ZWVkeSBhbGdvcml0aG0sIERpdmlkZSBhbmQgQ29ucXVlciwgQmFja3RyYWNr
aW5nLCBicnV0ZSBmb3JjZSkKMS4gVGVzdCB5b3VyIGFuc3dlciBvbiB0aGUg
c2ltcGxlIGV4YW1wbGUgKG1lbnRhbGx5KQoxLiBPcHRpbWl6ZSB0aGUgc29s
dXRpb24KMS4gV3JpdGUgQ29kZSwgeWVzLCBub3cgeW91IGNhbiBjb2RlLgox
LiBUZXN0IHlvdXIgd3JpdHRlbiBjb2RlCjEuIEFuYWx5c2UgdGhlIGNvbXBs
ZXhpdHksIGJvdGggc3BhY2UgYW5kIHRpbWUgYW5kIG1ha2Ugc3VyZSB0byBv
cHRpbWlzZSBmdXJ0aGVyLgoKRnVsbCBkZXRhaWxzIFtoZXJlXShib29rL3Bh
cnQwNC1hbGdvcml0aG1pYy10b29sYm94LmFzYykKCi0tLQoKICA8L2RldGFp
bHM+CiAgPGRldGFpbHM+CiAgICA8c3VtbWFyeT4KICAgICAgTWFzdGVyIHRo
ZSBtb3N0IHBvcHVsYXIgc29ydGluZyBhbGdvcml0aG1zIChtZXJnZSBzb3J0
LCBxdWlja3NvcnQsIGluc2VydGlvbiBzb3J0LCBldGMuKQogICAgPC9zdW1t
YXJ5PgoKLS0tCgojIyMjIFtNYXN0ZXIgdGhlIG1vc3QgcG9wdWxhciBzb3J0
aW5nIGFsZ29yaXRobXNdKGJvb2svY29udGVudC9wYXJ0MDQvc29ydGluZy1h
bGdvcml0aG1zLmFzYykKCldlIGFyZSBnb2luZyB0byBleHBsb3JlIHRocmVl
IGVzc2VudGlhbCBzb3J0aW5nIGFsZ29yaXRobXMgTyhuXjIpLCB3aGljaCBo
YXZlIGxvdyBvdmVyaGVhZDoKICAtIEJ1YmJsZSBTb3J0LgogICAgW0NvZGVd
KHNyYy9hbGdvcml0aG1zL3NvcnRpbmcvYnViYmxlLXNvcnQuanMpCiAgICB8
CiAgICBbRG9jc10oYm9vay9jb250ZW50L3BhcnQwNC9idWJibGUtc29ydC5h
c2MpCgogIC0gSW5zZXJ0aW9uIFNvcnQuCiAgICBbQ29kZV0oc3JjL2FsZ29y
aXRobXMvc29ydGluZy9pbnNlcnRpb24tc29ydC5qcykKICAgIHwKICAgIFtE
b2NzXShib29rL2NvbnRlbnQvcGFydDA0L2luc2VydGlvbi1zb3J0LmFzYykK
CiAgLSBTZWxlY3Rpb24gU29ydC4KICAgIFtDb2RlXShzcmMvYWxnb3JpdGht
cy9zb3J0aW5nL3NlbGVjdGlvbi1zb3J0LmpzKQogICAgfAogICAgW0RvY3Nd
KGJvb2svY29udGVudC9wYXJ0MDQvc2VsZWN0aW9uLXNvcnQuYXNjKQoKYW5k
IHRoZW4gZGlzY3VzcyBlZmZpY2llbnQgc29ydGluZyBhbGdvcml0aG1zIE8o
biBsb2cgbikgc3VjaCBhczoKICAtIE1lcmdlIFNvcnQuCiAgICBbQ29kZV0o
c3JjL2FsZ29yaXRobXMvc29ydGluZy9tZXJnZS1zb3J0LmpzKQogICAgfAog
ICAgW0RvY3NdKGJvb2svY29udGVudC9wYXJ0MDQvbWVyZ2Utc29ydC5hc2Mp
CgogIC0gUXVpY2tzb3J0LgogICAgW0NvZGVdKHNyYy9hbGdvcml0aG1zL3Nv
cnRpbmcvcXVpY2stc29ydC5qcykKICAgIHwKICAgIFtEb2NzXShib29rL2Nv
bnRlbnQvcGFydDA0L3F1aWNrLXNvcnQuYXNjKQoKLS0tCgogIDwvZGV0YWls
cz4KICA8ZGV0YWlscz4KICAgIDxzdW1tYXJ5PgogICAgICBMZWFybiBkaWZm
ZXJlbnQgYXBwcm9hY2hlcyB0byBzb2x2ZSBwcm9ibGVtcyBzdWNoIGFzIGRp
dmlkZSBhbmQgY29ucXVlciwgZHluYW1pYyBwcm9ncmFtbWluZywgZ3JlZWR5
IGFsZ29yaXRobXMsIGFuZCBiYWNrdHJhY2tpbmcuCiAgICA8L3N1bW1hcnk+
CgotLS0KCiMjIyMgW0xlYXJuIGRpZmZlcmVudCBhcHByb2FjaGVzIHRvIHNv
bHZlIGFsZ29yaXRobWljIHByb2JsZW1zXShib29rL3BhcnQwNC1hbGdvcml0
aG1pYy10b29sYm94LmFzYykKCldlIGFyZSBnb2luZyB0byBkaXNjdXNzIHRo
ZSBmb2xsb3dpbmcgdGVjaG5pcXVlcyBmb3Igc29sdmluZyBhbGdvcml0aG1z
IHByb2JsZW1zOgotIFtHcmVlZHkgQWxnb3JpdGhtc10oYm9vay9jb250ZW50
L3BhcnQwNC9ncmVlZHktYWxnb3JpdGhtcy5hc2MpOiBtYWtlcyBncmVlZHkg
Y2hvaWNlcyB1c2luZyBoZXVyaXN0aWNzIHRvIGZpbmQgdGhlIGJlc3Qgc29s
dXRpb24gd2l0aG91dCBsb29raW5nIGJhY2suCi0gW0R5bmFtaWMgUHJvZ3Jh
bW1pbmddKGJvb2svY29udGVudC9wYXJ0MDQvZHluYW1pYy1wcm9ncmFtbWlu
Zy5hc2MpOiBhIHRlY2huaXF1ZSBmb3Igc3BlZWRpbmcgdXAgcmVjdXJzaXZl
IGFsZ29yaXRobXMgd2hlbiB0aGVyZSBhcmUgbWFueSBfb3ZlcmxhcHBpbmcg
c3VicHJvYmxlbXNfLiBJdCB1c2VzIF9tZW1vaXphdGlvbl8gdG8gYXZvaWQg
ZHVwbGljYXRpbmcgd29yay4KLSBbRGl2aWRlIGFuZCBDb25xdWVyXShib29r
L2NvbnRlbnQvcGFydDA0L2RpdmlkZS1hbmQtY29ucXVlci5hc2MpOiBfZGl2
aWRlXyBwcm9ibGVtcyBpbnRvIHNtYWxsZXIgcGllY2VzLCBfY29ucXVlcl8g
ZWFjaCBzdWJwcm9ibGVtIGFuZCB0aGVuIF9qb2luXyB0aGUgcmVzdWx0cy4K
LSBbQmFja3RyYWNraW5nXShib29rL2NvbnRlbnQvcGFydDA0L2JhY2t0cmFj
a2luZy5hc2MpOiBzZWFyY2ggX2FsbCAob3Igc29tZSlfIHBvc3NpYmxlIHBh
dGhzLiBIb3dldmVyLCBpdCBzdG9wcyBhbmQgX2dvIGJhY2tfIGFzIHNvb24g
YXMgbm90aWNlIHRoZSBjdXJyZW50IHNvbHV0aW9uIGlzIG5vdCB3b3JraW5n
LgotIF9CcnV0ZSBGb3JjZV86IGdlbmVyYXRlIGFsbCBwb3NzaWJsZSBzb2x1
dGlvbnMgYW5kIHRyaWVzIGFsbCBvZiB0aGVtLiAoVXNlIGl0IGFzIGEgbGFz
dCByZXNvcnQgb3IgYXMgdGhlIHN0YXJ0aW5nIHBvaW50KS4KCi0tLQoKICA8
L2RldGFpbHM+CjwvYmxvY2txdW90ZT4KCiMjIEZBUQoKPGRldGFpbHM+CiAg
ICA8c3VtbWFyeT5Ib3cgd291bGQgSSBhcHBseSB0aGVzZSB0byBteSBkYXkt
dG8tZGF5IHdvcms/PC9zdW1tYXJ5PgogICAgPHA+CiAgICBBcyBhIHByb2dy
YW1tZXIsIHdlIGhhdmUgdG8gc29sdmUgcHJvYmxlbXMgZXZlcnkgZGF5LiBJ
ZiB5b3Ugd2FudCB0byBzb2x2ZSBwcm9ibGVtcyB3ZWxsLCB0aGVuIGl0J3Mg
Z29vZCB0byBrbm93IGFib3V0IGEgYnJvYWQgcmFuZ2Ugb2Ygc29sdXRpb25z
LiBBIGxvdCBvZiB0aW1lcywgaXQncyBtb3JlIGVmZmljaWVudCB0byBsZWFy
biBleGlzdGluZyByZXNvdXJjZXMgdGhhbiBzdHVtYmxlIHVwb24gdGhlIGFu
c3dlciB5b3Vyc2VsZi4gVGhlIG1vcmUgdG9vbHMgYW5kIHByYWN0aWNlIHlv
dSBoYXZlLCB0aGUgYmV0dGVyLiBUaGlzIGJvb2sgaGVscHMgeW91IHVuZGVy
c3RhbmQgdGhlIHRyYWRlb2ZmcyBhbW9uZyBkYXRhIHN0cnVjdHVyZXMgYW5k
IHJlYXNvbiBhYm91dCBhbGdvcml0aG1zIHBlcmZvcm1hbmNlLgogICAgPC9w
Pgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KICAgIDxzdW1tYXJ5PldoeSB5b3Ug
Y3JlYXRlZCB0aGlzIHJlcG8vYm9vaz88L3N1bW1hcnk+CiAgICA8cD4KICAg
ICAgICBUaGVyZSBhcmUgbm90IG1hbnkgYm9va3MgYWJvdXQgQWxnb3JpdGht
cyBpbiBKYXZhU2NyaXB0LiBUaGlzIG1hdGVyaWFsIGZpbGxzIHRoZSBnYXAu
CiAgICAgICAgQWxzbywgaXQncyBnb29kIHByYWN0aWNlIDopCiAgICA8L3A+
CjwvZGV0YWlscz4KCjxkZXRhaWxzPgogICAgPHN1bW1hcnk+SXMgdGhlcmUg
YW55b25lIEkgY2FuIGNvbnRhY3QgaWYgSSBoYXZlIHF1ZXN0aW9ucyBhYm91
dCBzb21ldGhpbmcgaW4gcGFydGljdWxhcj8KICAgIDwvc3VtbWFyeT4KICAg
IDxwPgogICAgWWVzLCBvcGVuIGFuIGlzc3VlIG9yIGFzayBxdWVzdGlvbnMg
b24gdGhlIFtzbGFjayBjaGFubmVsXShodHRwczovL2RzYWpzLXNsYWNraW4u
aGVyb2t1YXBwLmNvbSkuCiAgICA8L3A+CjwvZGV0YWlscz4KCiMjIEJvb2sK
ClRoaXMgcHJvamVjdCBpcyBhbHNvIGF2YWlsYWJsZSBpbiBhIFtib29rXSho
dHRwczovL2Jvb2tzLmFkcmlhbm1lamlhLmNvbS9kc2Fqcy1kYXRhLXN0cnVj
dHVyZXMtYWxnb3JpdGhtcy1qYXZhc2NyaXB0LykuIFlvdSB3aWxsIGdldCBh
IG5pY2VseSBmb3JtYXR0ZWQgUERGIHdpdGggMTgwKyBwYWdlcyArIGVQdWIg
YW5kIE1vYmkgdmVyc2lvbi4KClshW2RzYS5qcyBib29rXShodHRwczovL2Jv
b2tzLmFkcmlhbm1lamlhLmNvbS9kc2Fqcy1kYXRhLXN0cnVjdHVyZXMtYWxn
b3JpdGhtcy1qYXZhc2NyaXB0L2ltYWdlcy9kc2Fqcy1jb3Zlci0zMjBoMi5w
bmcpXShodHRwczovL2Jvb2tzLmFkcmlhbm1lamlhLmNvbS9kc2Fqcy1kYXRh
LXN0cnVjdHVyZXMtYWxnb3JpdGhtcy1qYXZhc2NyaXB0LykKCiMjIFN1cHBv
cnQKClJlYWNoIG91dCB0byBtZSBhdCBvbmUgb2YgdGhlIGZvbGxvd2luZyBw
bGFjZXMhCgotIFR3aXR0ZXIgYXQgPGEgaHJlZj0iaHR0cDovL3R3aXR0ZXIu
Y29tL2FtZWppYXJvc2FyaW8iIHRhcmdldD0iX2JsYW5rIj5gQGFtZWppYXJv
c2FyaW9gPC9hPgotIENoYXQgb24gPGEgaHJlZj0iaHR0cHM6Ly9kc2Fqcy1z
bGFja2luLmhlcm9rdWFwcC5jb20iIHRhcmdldD0iX2JsYW5rIj5gZHNhanMu
c2xhY2suY29tYDwvYT4KCiMjIExpY2Vuc2UKClshW0xpY2Vuc2VdKGh0dHBz
Oi8vaW1nLnNoaWVsZHMuaW8vOmxpY2Vuc2UtbWl0LWJsdWUuc3ZnP3N0eWxl
PWZsYXQtc3F1YXJlKV0oTElDRU5TRSkKCiFbXShodHRwczovL2RhdGEudXhl
cmFuYWx5dGljcy5jb20vaW1hZ2UxLnBuZz91eGE9Z2l0aHViLWRzYWpzKQo=
",,4781,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"IyBVc2UgdGhlIGxhdGVzdCAyLjEgdmVyc2lvbiBvZiBDaXJjbGVDSSBwaXBl
bGluZSBwcm9jZXNzaW5nIGVuZ2luZSwgc2VlIGh0dHBzOi8vY2lyY2xlY2ku
Y29tL2RvY3MvMi4wL2NvbmZpZ3VyYXRpb24tcmVmZXJlbmNlLwp2ZXJzaW9u
OiAyICMgdXNlIENpcmNsZUNJIDIuMApqb2JzOiAjIGEgY29sbGVjdGlvbiBv
ZiBzdGVwcwogIGJ1aWxkOiAjIHJ1bnMgbm90IHVzaW5nIFdvcmtmbG93cyBt
dXN0IGhhdmUgYSBgYnVpbGRgIGpvYiBhcyBlbnRyeSBwb2ludAogICAgZG9j
a2VyOiAjIHJ1biB0aGUgc3RlcHMgd2l0aCBEb2NrZXIKICAgICAgLSBpbWFn
ZTogY2lyY2xlY2kvbm9kZTpsdHMgIyAuLi53aXRoIHRoaXMgaW1hZ2UgYXMg
dGhlIHByaW1hcnkgY29udGFpbmVyOyB0aGlzIGlzIHdoZXJlIGFsbCBgc3Rl
cHNgIHdpbGwgcnVuCiAgICBzdGVwczoKICAgICAgLSBjaGVja291dAogICAg
ICAtIHJ1bjoKICAgICAgICAgIG5hbWU6IHVwZGF0ZS1ucG0KICAgICAgICAg
IGNvbW1hbmQ6ICdzdWRvIG5wbSBpbnN0YWxsIC1nIG5wbUBsYXRlc3QnCiAg
ICAgIC0gcnVuOgogICAgICAgICAgbmFtZTogbm9kZSB2ZXJzaW9uCiAgICAg
ICAgICBjb21tYW5kOiBub2RlIC12CiAgICAgIC0gcnVuOgogICAgICAgICAg
bmFtZTogTlBNIHZlcnNpb24KICAgICAgICAgIGNvbW1hbmQ6IG5wbSAtdgoK
ICAgICAgLSByZXN0b3JlX2NhY2hlOiAjIHNwZWNpYWwgc3RlcCB0byByZXN0
b3JlIHRoZSBkZXBlbmRlbmN5IGNhY2hlCiAgICAgICAgICAjIFJlYWQgYWJv
dXQgY2FjaGluZyBkZXBlbmRlbmNpZXM6IGh0dHBzOi8vY2lyY2xlY2kuY29t
L2RvY3MvMi4wL2NhY2hpbmcvCiAgICAgICAgICBrZXlzOgogICAgICAgICAg
ICAjIEZpbmQgYSBjYWNoZSBjb3JyZXNwb25kaW5nIHRvIHRoaXMgc3BlY2lm
aWMgcGFja2FnZS1sb2NrLmpzb24gY2hlY2tzdW0KICAgICAgICAgICAgLSBu
cG0tdjEte3sgY2hlY2tzdW0gInBhY2thZ2UtbG9jay5qc29uIiB9fQogICAg
ICAgICAgICAjIEZpbmQgdGhlIG1vc3QgcmVjZW50bHkgZ2VuZXJhdGVkIGNh
Y2hlIHVzZWQgZnJvbSBhbnkgYnJhbmNoCiAgICAgICAgICAgIC0gbnBtLXYx
LQogICAgICAtIHJ1bjoKICAgICAgICAgIG5hbWU6IG5wbSBpbnN0YWxsCiAg
ICAgICAgICBjb21tYW5kOiBucG0gaW5zdGFsbAoKICAgICAgLSBzYXZlX2Nh
Y2hlOiAjIHNwZWNpYWwgc3RlcCB0byBzYXZlIHRoZSBkZXBlbmRlbmN5IGNh
Y2hlCiAgICAgICAgICBrZXk6IG5wbS12MS17eyBjaGVja3N1bSAicGFja2Fn
ZS1sb2NrLmpzb24iIH19CiAgICAgICAgICBwYXRoczoKICAgICAgICAgICAg
LSAuL25vZGVfbW9kdWxlcwoKICAgICAgLSBydW46ICMgcnVuIHRlc3RzCiAg
ICAgICAgICBuYW1lOiBydW4gdGVzdHMKICAgICAgICAgIGNvbW1hbmQ6IG5w
bSBydW4gY2kKCiAgICAgIC0gc3RvcmVfYXJ0aWZhY3RzOiAjIHNwZWNpYWwg
c3RlcCB0byBzYXZlIHRlc3QgcmVzdWx0cyBhcyBhcyBhcnRpZmFjdAogICAg
ICAgICAgIyBVcGxvYWQgdGVzdCBzdW1tYXJ5IGZvciBkaXNwbGF5IGluIEFy
dGlmYWN0czogaHR0cHM6Ly9jaXJjbGVjaS5jb20vZG9jcy8yLjAvYXJ0aWZh
Y3RzLwogICAgICAgICAgcGF0aDogdGVzdC1yZXN1bHRzLnhtbAogICAgICAg
ICAgcHJlZml4OiB0ZXN0cwogICAgICAtIHN0b3JlX2FydGlmYWN0czogIyBm
b3IgZGlzcGxheSBpbiBBcnRpZmFjdHM6IGh0dHBzOi8vY2lyY2xlY2kuY29t
L2RvY3MvMi4wL2FydGlmYWN0cy8KICAgICAgICAgIHBhdGg6IGNvdmVyYWdl
CiAgICAgICAgICBwcmVmaXg6IGNvdmVyYWdlCiAgICAgIC0gc3RvcmVfdGVz
dF9yZXN1bHRzOiAjIGZvciBkaXNwbGF5IGluIFRlc3QgU3VtbWFyeTogaHR0
cHM6Ly9jaXJjbGVjaS5jb20vZG9jcy8yLjAvY29sbGVjdC10ZXN0LWRhdGEv
CiAgICAgICAgICBwYXRoOiB0ZXN0LXJlc3VsdHMueG1sCgogIGRvY3M6CiAg
ICBkb2NrZXI6CiAgICAgIC0gaW1hZ2U6IGNpcmNsZWNpL3J1Ynk6Mi41LjMt
c3RyZXRjaC1ub2RlCiAgICBlbnZpcm9ubWVudDoKICAgICAgTk9LT0dJUklf
VVNFX1NZU1RFTV9MSUJSQVJJRVM6IHRydWUKICAgIHN0ZXBzOgogICAgICAt
IGFkZF9zc2hfa2V5czoKICAgICAgICAgIGZpbmdlcnByaW50czoKICAgICAg
ICAgICAgLSAiYjU6NDA6MzY6ZWU6M2M6NTI6MjU6ZGQ6Yzc6NDE6ZjM6MTA6
ZDE6Y2U6Zjk6MzMiCiAgICAgIC0gY2hlY2tvdXQKICAgICAgLSBydW46CiAg
ICAgICAgICBuYW1lOiBjaGVja291dCByZXBvIGFuZCBzdWJtb2R1bGVzCiAg
ICAgICAgICBjb21tYW5kOiBnaXQgc3VibW9kdWxlIHVwZGF0ZSAtLWluaXQg
LS1yZWN1cnNpdmUKICAgICAgLSBydW46CiAgICAgICAgICBuYW1lOiBidW5k
bGVyIHZlcnNpb24KICAgICAgICAgIGNvbW1hbmQ6IGJ1bmRsZSAtdgogICAg
ICAtIHJ1bjoKICAgICAgICAgIG5hbWU6IHJ1YnkgdmVyc2lvbgogICAgICAg
ICAgY29tbWFuZDogcnVieSAtdgogICAgICAtIHJ1bjoKICAgICAgICAgIG5h
bWU6IG5vZGUgdmVyc2lvbgogICAgICAgICAgY29tbWFuZDogbm9kZSAtdgog
ICAgICAtIHJ1bjoKICAgICAgICAgIG5hbWU6IE5QTSB2ZXJzaW9uCiAgICAg
ICAgICBjb21tYW5kOiBucG0gLXYKCiAgICAgIC0gcnVuOiBzdWRvIGFwdC1n
ZXQgdXBkYXRlCgogICAgICAtIHJ1bjoKICAgICAgICAgIG5hbWU6IGdyYXBo
dml6IGZvciBkb3QgZGlhZ3JhbXMKICAgICAgICAgIGNvbW1hbmQ6IHN1ZG8g
YXB0LWdldCAtcXEgLXkgaW5zdGFsbCBncmFwaHZpegoKICAgICAgLSBydW46
CiAgICAgICAgICBuYW1lOiBCdW5kbGUgSW5zdGFsbC5wcmUgLSBuZWVkZWQg
Zm9yIG1hdGhlbWF0aWNhbCAtPiAnYXNjaWlkb2N0b3ItbWF0aGVtYXRpY2Fs
JyBnZW0KICAgICAgICAgIGNvbW1hbmQ6IHN1ZG8gYXB0LWdldCAtcXEgLXkg
aW5zdGFsbCBjbWFrZSBiaXNvbiBmbGV4IGxpYmZmaS1kZXYgbGlieG1sMi1k
ZXYgbGliZ2RrLXBpeGJ1ZjIuMC1kZXYgbGliY2Fpcm8yLWRldiBsaWJwYW5n
bzEuMC1kZXYgdHRmLWx5eAoKICAgICAgLSBydW46CiAgICAgICAgICBuYW1l
OiBCdW5kbGUgSW5zdGFsbC5wcmUgLSBpbnN0YWxsIEdyYXBoaWNzTWFnaWNr
IGZvciAncHJhd24tZ21hZ2ljaycgZ2VtCiAgICAgICAgICBjb21tYW5kOiBz
dWRvIGFwdC1nZXQgLXFxIC15IGluc3RhbGwgZ3JhcGhpY3NtYWdpY2staW1h
Z2VtYWdpY2stY29tcGF0IGdyYXBoaWNzbWFnaWNrLWxpYm1hZ2ljay1kZXYt
Y29tcGF0CgogICAgICAjIFJlc3RvcmUgYnVuZGxlIGNhY2hlCiAgICAgIC0g
cmVzdG9yZV9jYWNoZToKICAgICAgICAgIGtleXM6CiAgICAgICAgICAgIC0g
Z2VtZmlsZS12MS17eyBjaGVja3N1bSAiYm9vay9jb25maWcvR2VtZmlsZS5s
b2NrIiB9fQogICAgICAgICAgICAtIGdlbWZpbGUtdjEtCgogICAgICAtIHJ1
bjoKICAgICAgICAgIG5hbWU6IEJ1bmRsZSBJbnN0YWxsCiAgICAgICAgICBj
b21tYW5kOiBjZCBib29rL2NvbmZpZyAmJiBidW5kbGUgY2hlY2sgLS1wYXRo
IHZlbmRvci9idW5kbGUgfHwgKCBidW5kbGUgaW5zdGFsbCAtLXBhdGggdmVu
ZG9yL2J1bmRsZSApCgogICAgICAjIFN0b3JlIGJ1bmRsZSBjYWNoZQogICAg
ICAtIHNhdmVfY2FjaGU6CiAgICAgICAgICBrZXk6IGdlbWZpbGUtdjEte3sg
Y2hlY2tzdW0gImJvb2svY29uZmlnL0dlbWZpbGUubG9jayIgfX0KICAgICAg
ICAgIHBhdGhzOgogICAgICAgICAgICAtIGJvb2svY29uZmlnL3ZlbmRvci9i
dW5kbGUKCiAgICAgIC0gcnVuOgogICAgICAgICAgbmFtZTogZ2VuZXJhdGUg
UERGCiAgICAgICAgICBjb21tYW5kOiBjZCBib29rL2NvbmZpZyAmJiBtYWtl
IFZFUlNJT049IiQobnB4IC1jICdlY2hvICIkbnBtX3BhY2thZ2VfdmVyc2lv
biInKSIKCiAgICAgIC0gc3RvcmVfYXJ0aWZhY3RzOgogICAgICAgICAgcGF0
aDogYm9vay9kaXN0CiAgICAgICAgICBkZXN0aW5hdGlvbjogYm9vawoKd29y
a2Zsb3dzOgogIHZlcnNpb246IDIKICBidWlsZF9hbmRfZG9jczoKICAgIGpv
YnM6CiAgICAgIC0gYnVpbGQKICAgICAgLSBkb2NzCg==
",,,,,,,,,,,,,,,,,,,,,,,
b'keycloak',11125589,b'Open Source Identity and Access Management For Modern Applications and Services',b'Java',68,4780,,281,False,b'https://api.github.com/repos/keycloak/keycloak/forks',"IyBLZXljbG9hawoKS2V5Y2xvYWsgaXMgYW4gT3BlbiBTb3VyY2UgSWRlbnRp
dHkgYW5kIEFjY2VzcyBNYW5hZ2VtZW50IHNvbHV0aW9uIGZvciBtb2Rlcm4g
QXBwbGljYXRpb25zIGFuZCBTZXJ2aWNlcy4KClRoaXMgcmVwb3NpdG9yeSBj
b250YWlucyB0aGUgc291cmNlIGNvZGUgZm9yIHRoZSBLZXljbG9hayBTZXJ2
ZXIsIEphdmEgYWRhcHRlcnMgYW5kIHRoZSBKYXZhU2NyaXB0IGFkYXB0ZXIu
CgoKIyMgSGVscCBhbmQgRG9jdW1lbnRhdGlvbgoKKiBbRG9jdW1lbnRhdGlv
bl0oaHR0cHM6Ly93d3cua2V5Y2xvYWsub3JnL2RvY3VtZW50YXRpb24uaHRt
bCkKKiBbVXNlciBNYWlsaW5nIExpc3RdKGh0dHBzOi8vbGlzdHMuamJvc3Mu
b3JnL21haWxtYW4vbGlzdGluZm8va2V5Y2xvYWstdXNlcikgLSBNYWlsaW5n
IGxpc3QgZm9yIGhlbHAgYW5kIGdlbmVyYWwgcXVlc3Rpb25zIGFib3V0IEtl
eWNsb2FrCiogW0pJUkFdKGh0dHBzOi8vaXNzdWVzLmpib3NzLm9yZy9wcm9q
ZWN0cy9LRVlDTE9BSykgLSBJc3N1ZSB0cmFja2VyIGZvciBidWdzIGFuZCBm
ZWF0dXJlIHJlcXVlc3RzCgoKIyMgUmVwb3J0aW5nIFNlY3VyaXR5IFZ1bG5l
cmFiaWxpdGllcwoKSWYgeW91J3ZlIGZvdW5kIGEgc2VjdXJpdHkgdnVsbmVy
YWJpbGl0eSwgcGxlYXNlIGxvb2sgYXQgdGhlIFtpbnN0cnVjdGlvbnMgb24g
aG93IHRvIHByb3Blcmx5IHJlcG9ydCBpdF0oaHR0cDovL3d3dy5rZXljbG9h
ay5vcmcvc2VjdXJpdHkuaHRtbCkKCgojIyBSZXBvcnRpbmcgYW4gaXNzdWUK
CklmIHlvdSBiZWxpZXZlIHlvdSBoYXZlIGRpc2NvdmVyZWQgYSBkZWZlY3Qg
aW4gS2V5Y2xvYWsgcGxlYXNlIG9wZW4gYW4gaXNzdWUgaW4gb3VyIFtJc3N1
ZSBUcmFja2VyXShodHRwczovL2lzc3Vlcy5qYm9zcy5vcmcvcHJvamVjdHMv
S0VZQ0xPQUspLgpQbGVhc2UgcmVtZW1iZXIgdG8gcHJvdmlkZSBhIGdvb2Qg
c3VtbWFyeSwgZGVzY3JpcHRpb24gYXMgd2VsbCBhcyBzdGVwcyB0byByZXBy
b2R1Y2UgdGhlIGlzc3VlLgoKCiMjIEdldHRpbmcgc3RhcnRlZAoKVG8gcnVu
IEtleWNsb2FrIGRvd25sb2FkIHRoZSBkaXN0cmlidXRpb24gZnJvbSBvdXIg
W3dlYnNpdGVdKGh0dHBzOi8vd3d3LmtleWNsb2FrLm9yZy9kb3dubG9hZHMu
aHRtbCkuIFVuemlwIGFuZCBydW46CgogICAgYmluL3N0YW5kYWxvbmUuW3No
fGJhdF0gCgpBbHRlcm5hdGl2ZWx5LCB5b3UgY2FuIHVzZSB0aGUgRG9ja2Vy
IGltYWdlIGJ5IHJ1bm5pbmc6CgogICAgZG9ja2VyIHJ1biBqYm9zcy9rZXlj
bG9hawogICAgCkZvciBtb3JlIGRldGFpbHMgcmVmZXIgdG8gdGhlIFtLZXlj
bG9hayBEb2N1bWVudGF0aW9uXShodHRwczovL3d3dy5rZXljbG9hay5vcmcv
ZG9jdW1lbnRhdGlvbi5odG1sKS4KCgojIyBCdWlsZGluZyBmcm9tIFNvdXJj
ZQoKVG8gYnVpbGQgZnJvbSBzb3VyY2UgcmVmZXIgdG8gdGhlIFtidWlsZGlu
ZyBhbmQgd29ya2luZyB3aXRoIHRoZSBjb2RlIGJhc2VdKGRvY3MvYnVpbGRp
bmcubWQpIGd1aWRlLgoKCiMjIyBUZXN0aW5nCgpUbyBydW4gdGVzdHMgcmVm
ZXIgdG8gdGhlIFtydW5uaW5nIHRlc3RzXShkb2NzL3Rlc3RzLm1kKSBndWlk
ZS4KCgojIyMgV3JpdGluZyBUZXN0cwoKVG8gd3JpdGUgdGVzdHMgcmVmZXIg
dG8gdGhlIFt3cml0aW5nIHRlc3RzXShkb2NzL3Rlc3RzLWRldmVsb3BtZW50
Lm1kKSBndWlkZS4KCgojIyBDb250cmlidXRpbmcKCkJlZm9yZSBjb250cmli
dXRpbmcgdG8gS2V5Y2xvYWsgcGxlYXNlIHJlYWQgb3VyIFtjb250cmlidXRp
bmcgZ3VpZGVsaW5lc10oQ09OVFJJQlVUSU5HLm1kKS4KCgojIyBPdGhlciBL
ZXljbG9hayBQcm9qZWN0cwoKKiBbS2V5Y2xvYWtdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9rZXljbG9hay9rZXljbG9haykgLSBLZXljbG9hayBTZXJ2ZXIgYW5k
IEphdmEgYWRhcHRlcnMKKiBbS2V5Y2xvYWsgRG9jdW1lbnRhdGlvbl0oaHR0
cHM6Ly9naXRodWIuY29tL2tleWNsb2FrL2tleWNsb2FrLWRvY3VtZW50YXRp
b24pIC0gRG9jdW1lbnRhdGlvbiBmb3IgS2V5Y2xvYWsKKiBbS2V5Y2xvYWsg
UXVpY2tTdGFydHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9rZXljbG9hay9rZXlj
bG9hay1xdWlja3N0YXJ0cykgLSBRdWlja1N0YXJ0cyBmb3IgZ2V0dGluZyBz
dGFydGVkIHdpdGggS2V5Y2xvYWsKKiBbS2V5Y2xvYWsgQ29udGFpbmVyc10o
aHR0cHM6Ly9naXRodWIuY29tL2tleWNsb2FrL2tleWNsb2FrLWNvbnRhaW5l
cnMpIC0gQ29udGFpbmVyIGltYWdlcyBmb3IgS2V5Y2xvYWsKKiBbS2V5Y2xv
YWsgR2F0ZWtlZXBlcl0oaHR0cHM6Ly9naXRodWIuY29tL2tleWNsb2FrL2tl
eWNsb2FrLWdhdGVrZWVwZXIpIC0gUHJveHkgc2VydmljZSB0byBzZWN1cmUg
YXBwcyBhbmQgc2VydmljZXMgd2l0aCBLZXljbG9hawoqIFtLZXljbG9hayBO
b2RlLmpzIENvbm5lY3RdKGh0dHBzOi8vZ2l0aHViLmNvbS9rZXljbG9hay9r
ZXljbG9hay1ub2RlanMtY29ubmVjdCkgLSBOb2RlLmpzIGFkYXB0ZXIgZm9y
IEtleWNsb2FrCiogW0tleWNsb2FrIE5vZGUuanMgQWRtaW4gQ2xpZW50XSho
dHRwczovL2dpdGh1Yi5jb20va2V5Y2xvYWsva2V5Y2xvYWstbm9kZWpzLWFk
bWluLWNsaWVudCkgLSBOb2RlLmpzIGxpYnJhcnkgZm9yIEtleWNsb2FrIEFk
bWluIFJFU1QgQVBJCgoKIyMgTGljZW5zZQoKKiBbQXBhY2hlIExpY2Vuc2Us
IFZlcnNpb24gMi4wXShodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2Vz
L0xJQ0VOU0UtMi4wKQo=
",,4780,"bGFuZ3VhZ2U6IGphdmEKCmNhY2hlOgogIGRpcmVjdG9yaWVzOgogICAgLSAk
SE9NRS8ubTIKCmJlZm9yZV9jYWNoZToKICAtIHJtIC1yZiAkSE9NRS8ubTIv
cmVwb3NpdG9yeS9vcmcva2V5Y2xvYWsKCmVudjoKICBnbG9iYWw6CiAgICAt
IE1BVkVOX1NLSVBfUkM9dHJ1ZQogICAgLSBNQVZFTl9PUFRTPSItWG1zNTEy
bSAtWG14MTUzNm0iCiAgbWF0cml4OgogICAgLSBURVNUUz11bml0CiAgICAt
IFRFU1RTPXNlcnZlci1ncm91cDEKICAgIC0gVEVTVFM9c2VydmVyLWdyb3Vw
MgogICAgLSBURVNUUz1zZXJ2ZXItZ3JvdXAzCiAgICAtIFRFU1RTPXNlcnZl
ci1ncm91cDQKICAgIC0gVEVTVFM9YWRhcHRlci10ZXN0cwogICAgLSBURVNU
Uz1hZGFwdGVyLXRlc3RzLWF1dGh6CiAgICAtIFRFU1RTPWNyb3NzZGMtc2Vy
dmVyCiAgICAtIFRFU1RTPWNyb3NzZGMtYWRhcHRlcgogICAgLSBURVNUUz1i
cm9rZXIKCmpkazoKICAtIG9wZW5qZGs4CgppbnN0YWxsOiB0cnVlCgpiZWZv
cmVfaW5zdGFsbDoKICAtICJleHBvcnQgUEhBTlRPTUpTX1ZFUlNJT049Mi4x
LjEiCiAgLSAicGhhbnRvbWpzIC0tdmVyc2lvbiIKICAtICJleHBvcnQgUEFU
SD0kUFdEL3RyYXZpc19waGFudG9tanMvcGhhbnRvbWpzLSRQSEFOVE9NSlNf
VkVSU0lPTi1saW51eC14ODZfNjQvYmluOiRQQVRIIgogIC0gInBoYW50b21q
cyAtLXZlcnNpb24iCiAgLSAiaWYgWyAkKHBoYW50b21qcyAtLXZlcnNpb24p
ICE9ICckUEhBTlRPTUpTX1ZFUlNJT04nIF07IHRoZW4gcm0gLXJmICRQV0Qv
dHJhdmlzX3BoYW50b21qczsgbWtkaXIgLXAgJFBXRC90cmF2aXNfcGhhbnRv
bWpzOyBmaSIKICAtICJpZiBbICQocGhhbnRvbWpzIC0tdmVyc2lvbikgIT0g
JyRQSEFOVE9NSlNfVkVSU0lPTicgXTsgdGhlbiB3Z2V0IGh0dHBzOi8vZ2l0
aHViLmNvbS9NZWRpdW0vcGhhbnRvbWpzL3JlbGVhc2VzL2Rvd25sb2FkL3Yk
UEhBTlRPTUpTX1ZFUlNJT04vcGhhbnRvbWpzLSRQSEFOVE9NSlNfVkVSU0lP
Ti1saW51eC14ODZfNjQudGFyLmJ6MiAtTyAkUFdEL3RyYXZpc19waGFudG9t
anMvcGhhbnRvbWpzLSRQSEFOVE9NSlNfVkVSU0lPTi1saW51eC14ODZfNjQu
dGFyLmJ6MjsgZmkiCiAgLSAiaWYgWyAkKHBoYW50b21qcyAtLXZlcnNpb24p
ICE9ICckUEhBTlRPTUpTX1ZFUlNJT04nIF07IHRoZW4gdGFyIC14dmYgJFBX
RC90cmF2aXNfcGhhbnRvbWpzL3BoYW50b21qcy0kUEhBTlRPTUpTX1ZFUlNJ
T04tbGludXgteDg2XzY0LnRhci5iejIgLUMgJFBXRC90cmF2aXNfcGhhbnRv
bWpzOyBmaSIKICAtICJwaGFudG9tanMgLS12ZXJzaW9uIgoKYmVmb3JlX3Nj
cmlwdDoKICAtIGV4cG9ydCAtZiB0cmF2aXNfZm9sZAoKc2NyaXB0OiAKICAt
IC4vdHJhdmlzLXJ1bi10ZXN0cy5zaCAkVEVTVFMKCmFmdGVyX3N1Y2Nlc3M6
CiAgLSAudHJhdmlzL2RvY2tlci1odWItbWFzdGVyLXRyaWdnZXIuc2gKCnN1
ZG86IGZhbHNlCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'follow-me-install-kubernetes-cluster',87710748,b'\xe5\x92\x8c\xe6\x88\x91\xe4\xb8\x80\xe6\xad\xa5\xe6\xad\xa5\xe9\x83\xa8\xe7\xbd\xb2 kubernetes \xe9\x9b\x86\xe7\xbe\xa4',b'Shell',137,4780,,325,False,b'https://api.github.com/repos/opsnull/follow-me-install-kubernetes-cluster/forks',"IyDlkozmiJHkuIDmraXmraXpg6jnvbIga3ViZXJuZXRlcyDpm4bnvqQKCiFb
ZGFzaGJvYXJkLWhvbWVdKC4vaW1hZ2VzL2Rhc2hib2FyZC1ob21lLnBuZykK
CuacrOezu+WIl+aWh+aho+S7i+e7jeS9v+eUqOS6jOi/m+WItumDqOe9suac
gOaWsCBga3ViZXJuZXRlcyB2MS4xNC4yYCDpm4bnvqTnmoTmiYDmnInmraXp
qqTvvIzogIzkuI3mmK/kvb/nlKggYGt1YmVhZG1gIOetieiHquWKqOWMluaW
ueW8j+adpemDqOe9sumbhue+pOOAggoK5Zyo6YOo572y55qE6L+H56iL5Lit
77yM5bCG6K+m57uG5YiX5Ye65ZCE57uE5Lu255qE5ZCv5Yqo5Y+C5pWw77yM
5a6D5Lus55qE5ZCr5LmJ5ZKM5Y+v6IO96YGH5Yiw55qE6Zeu6aKY44CCCgrp
g6jnvbLlrozmiJDlkI7vvIzkvaDlsIbnkIbop6Pns7vnu5/lkITnu4Tku7bn
moTkuqTkupLljp/nkIbvvIzov5vogIzog73lv6vpgJ/op6PlhrPlrp7pmYXp
l67popjjgIIKCuaJgOS7peacrOaWh+aho+S4u+imgemAguWQiOS6jumCo+S6
m+acieS4gOWumiBrdWJlcm5ldGVzIOWfuuehgO+8jOaDs+mAmui/h+S4gOat
peatpemDqOe9sueahOaWueW8j+adpeWtpuS5oOWSjOS6huino+ezu+e7n+mF
jee9ruOAgei/kOihjOWOn+eQhueahOS6uuOAggoK5pys57O75YiX57O75paH
5qGj6YCC55So5LqOIGBDZW50T1MgN2DjgIFgVWJ1bnR1IDE2LjA0YCDlj4rk
u6XkuIrniYjmnKzns7vnu5/vvIwqKumaj+edgOWQhOe7hOS7tueahOabtOaW
sOiAjOabtOaWsCoq77yM5pyJ5Lu75L2V6Zeu6aKY5qyi6L+O5o+QIGlzc3Vl
77yBCgrnlLHkuo7lkK/nlKjkuoYgYHg1MDlgIOivgeS5puWPjOWQkeiupOiv
geOAgWBSQkFDYCDmjojmnYPnrYnkuKXmoLznmoTlronlhajmnLrliLbvvIzl
u7rorq4qKuS7juWktOW8gOWni+mDqOe9sioq77yM5ZCm5YiZ5Y+v6IO95Lya
6K6k6K+B44CB5o6I5p2D562J5aSx6LSl77yBCgojIyDljoblj7LniYjmnKwK
CisgW3YxLjYuMl0oaHR0cHM6Ly9naXRodWIuY29tL29wc251bGwvZm9sbG93
LW1lLWluc3RhbGwta3ViZXJuZXRlcy1jbHVzdGVyL3RyZWUvdjEuNi4yKe+8
muW3suWBnOatouabtOaWsO+8mworIFt2MS44LnhdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9vcHNudWxsL2ZvbGxvdy1tZS1pbnN0YWxsLWt1YmVybmV0ZXMtY2x1
c3Rlci90cmVlL3YxLjgueCnvvJrnu6fnu63mm7TmlrDvvJsKKyBbdjEuMTAu
eF0oaHR0cHM6Ly9naXRodWIuY29tL29wc251bGwvZm9sbG93LW1lLWluc3Rh
bGwta3ViZXJuZXRlcy1jbHVzdGVyL3RyZWUvdjEuMTAueCnvvJrnu6fnu63m
m7TmlrDvvJsKKyBbdjEuMTIueF0oaHR0cHM6Ly9naXRodWIuY29tL29wc251
bGwvZm9sbG93LW1lLWluc3RhbGwta3ViZXJuZXRlcy1jbHVzdGVyL3RyZWUv
djEuMTIueCnvvJrnu6fnu63mm7TmlrDvvJsKCiMjIOatpemqpOWIl+ihqAoK
MS4gWzAwLue7hOS7tueJiOacrOWSjOmFjee9ruetlueVpV0oMDAu57uE5Lu2
54mI5pys5ZKM6YWN572u562W55WlLm1kKQoxLiBbMDEu57O757uf5Yid5aeL
5YyW5ZKM5YWo5bGA5Y+Y6YePXSgwMS7ns7vnu5/liJ3lp4vljJblkozlhajl
sYDlj5jph48ubWQpCjEuIFswMi7liJvlu7pDQeivgeS5puWSjOenmOmSpV0o
MDIu5Yib5bu6Q0Hor4Hkuablkoznp5jpkqUubWQpCQkJCjEuIFswMy7pg6jn
vbJrdWJlY3Rs5ZG95Luk6KGM5bel5YW3XSgwMy7pg6jnvbJrdWJlY3Rs5ZG9
5Luk6KGM5bel5YW3Lm1kKQkJCQoxLiBbMDQu6YOo572yZXRjZOmbhue+pF0o
MDQu6YOo572yZXRjZOmbhue+pC5tZCkJCQkJCjEuIFswNS7pg6jnvbJmbGFu
bmVs572R57ucXSgwNS7pg6jnvbJmbGFubmVs572R57ucLm1kKQkJCjEuIFsw
Ni5hcGlzZXJ2ZXLpq5jlj6/nlKjkuYtuZ2lueOS7o+eQhi5tZF0oMDYtMC5h
cGlzZXJ2ZXLpq5jlj6/nlKjkuYtuZ2lueOS7o+eQhi5tZCkKMS4gWzA2LTEu
6YOo572ybWFzdGVy6IqC54K5XSgwNi0xLumDqOe9sm1hc3RlcuiKgueCuS5t
ZCkKICAgIDEuIFswNi0yLmFwaXNlcnZlcumbhue+pF0oMDYtMi5hcGlzZXJ2
ZXLpm4bnvqQubWQpCQogICAgMS4gWzA2LTMuY29udHJvbGxlci1tYW5hZ2Vy
6ZuG576kXSgwNi0zLmNvbnRyb2xsZXItbWFuYWdlcumbhue+pC5tZCkKICAg
IDEuIFswNi00LnNjaGVkdWxlcumbhue+pF0oMDYtNC5zY2hlZHVsZXLpm4bn
vqQubWQpCQkKMS4gWzA3LumDqOe9sndvcmtlcuiKgueCuV0oMDctMC7pg6jn
vbJ3b3JrZXLoioLngrkubWQpCiAgICAxLiBbMDctMS5kb2NrZXJdKDA3LTEu
ZG9ja2VyLm1kKQkJCQkJCiAgICAxLiBbMDctMi5rdWJlbGV0XSgwNy0yLmt1
YmVsZXQubWQpCQkJCQogICAgMS4gWzA3LTMua3ViZS1wcm94eV0oMDctMy5r
dWJlLXByb3h5Lm1kKQkJCQoxLiBbMDgu6aqM6K+B6ZuG576k5Yqf6IO9XSgw
OC7pqozor4Hpm4bnvqTlip/og70ubWQpCQkJCjEuIFswOS7pg6jnvbLpm4bn
vqTmj5Lku7ZdKDA5LTAu6YOo572y6ZuG576k5o+S5Lu2Lm1kKQogICAgMS4g
WzA5LTEuZG5z5o+S5Lu2XSgwOS0xLmRuc+aPkuS7ti5tZCkKICAgIDEuIFsw
OS0yLmRhc2hib2FyZOaPkuS7tl0oMDktMi5kYXNoYm9hcmTmj5Lku7YubWQp
CiAgICAxLiBbMDktMy5tZXRyaWNzLXNlcnZlcuaPkuS7tl0oMDktMy5tZXRy
aWNzLXNlcnZlcuaPkuS7ti5tZCkKICAgIDEuIFswOS00LkVGS+aPkuS7tl0o
MDktNC5FRkvmj5Lku7YubWQpCQkJCjEuIFsxMC7pg6jnvbJEb2NrZXItUmVn
aXN0cnldKDEwLumDqOe9skRvY2tlci1SZWdpc3RyeS5tZCkJCjEuIFsxMS7p
g6jnvbJIYXJib3ItUmVnaXN0cnldKDExLumDqOe9skhhcmJvci1SZWdpc3Ry
eS5tZCkJCjEuIFsxMi7muIXnkIbpm4bnvqRdKDEyLua4heeQhumbhue+pC5t
ZCkKMS4gW0Eu5rWP6KeI5Zmo6K6/6ZeuYXBpc2VydmVy5a6J5YWo56uv5Y+j
XShBLua1j+iniOWZqOiuv+mXrmt1YmUtYXBpc2VydmVy5a6J5YWo56uv5Y+j
Lm1kKQoxLiBbQi7moKHpqoxUTFPor4HkuaZdKEIu5qCh6aqMVExT6K+B5Lmm
Lm1kKQoKIyMg5Zyo57q/6ZiF6K+7CgorIOW7uuiuru+8mltHaXRCb29rXSho
dHRwczovL2s4cy1pbnN0YWxsLm9wc251bGwuY29tLykKKyBbR2l0aHViXSho
dHRwczovL3d3dy5naXRib29rLmNvbS9ib29rL29wc251bGwvZm9sbG93LW1l
LWluc3RhbGwta3ViZXJuZXRlcy1jbHVzdGVyKQoKIyMg55S15a2Q5LmmCgor
IHBkZiDmoLzlvI8gW+S4i+i9vV0oaHR0cHM6Ly93d3cuZ2l0Ym9vay5jb20v
ZG93bmxvYWQvcGRmL2Jvb2svb3BzbnVsbC9mb2xsb3ctbWUtaW5zdGFsbC1r
dWJlcm5ldGVzLWNsdXN0ZXIpCisgZXB1YiDmoLzlvI8gW+S4i+i9vV0oaHR0
cHM6Ly93d3cuZ2l0Ym9vay5jb20vZG93bmxvYWQvZXB1Yi9ib29rL29wc251
bGwvZm9sbG93LW1lLWluc3RhbGwta3ViZXJuZXRlcy1jbHVzdGVyKQoKIyMg
5omT6LWPCgrlpoLmnpzkvaDop4nlvpfov5nku73mlofmoaPlr7nkvaDmnInl
uK7liqnvvIzor7flvq7kv6Hmiavmj4/kuIvmlrnnmoTkuoznu7TnoIHov5vo
oYzmjZDotaDvvIzliqDmsrnlkI7nmoQgb3BzbnVsbCDlsIbkvJrlkozkvaDl
iIbkuqvmm7TlpJrnmoTljp/liJvmlZnnqIvvvIzosKLosKLvvIEKCjxwIGFs
aWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSJodHRwczovL2dpdGh1Yi5jb20v
b3BzbnVsbC9mb2xsb3ctbWUtaW5zdGFsbC1rdWJlcm5ldGVzLWNsdXN0ZXIv
YmxvYi9tYXN0ZXIvaW1hZ2VzL3dlaXhpbl9xci5qcGc/cmF3PXRydWUiIGFs
dD0id2VpeGluX3FyLmpwZyIvPgo8L3A+CgojIyDlub/lkYrkvY0KCue7tOaK
pOS4gOS4quW8gOa6kOmhueebrumcgOimgeW+iOWkmuaXtumXtOWSjOeyvuWK
m++8jOivt+eCueWHu+S4i+mdoueahOi1nuWKqeWVhuW5v+WRiu+8jOe7mSBv
cHNudWxsIOWKoOadryBjb2ZmZWUg5ZCn77yM6LCi6LCi77yBCQoKKioqCgoj
IyMgS3ViZU9wZXJhdG9yIC0gSzhzIOmbhue+pOinhOWIkuOAgemDqOe9suWP
iueuoeeQhuW5s+WPsCDvvIjotZ7liqnmjqjlub/vvIkKCltLdWJlT3BlcmF0
b3JdKGh0dHBzOi8va3ViZW9wZXJhdG9yLmlvLykg5piv5LiA5Liq5byA5rqQ
6aG555uu77yM6YCa6L+HIFdlYiBVSSDlnKggVk13YXJl44CBT3BlblN0YWNr
44CB54mp55CG5py65LiK5LiA6ZSu6YOo572y5ZKM566h55CG55Sf5Lqn57qn
5Yir55qEIEt1YmVybmV0ZXMg6ZuG576k44CCCgotICBbOnR2Ojgg5YiG6ZKf
5ryU56S66KeG6aKRXSggaHR0cHM6Ly9rdWJlb3BlcmF0b3ItMTI1NjU3NzYw
MC5maWxlLm15cWNsb3VkLmNvbS92aWRlby9LdWJlT3BlcmF0b3IyLjEubXA0
Ke+8muivpue7hua8lOekuiBLdWJlT3BlcmF0b3Ig55qE5Yqf6IO944CCCi0g
IFs6Ym9va3M65a6J6KOF5Y+K5L2/55So5paH5qGjXShodHRwczovL2RvY3Mu
a3ViZW9wZXJhdG9yLmlvLynvvJrljIXmi6wgS3ViZU9wZXJhdG9yIOWuieij
heaWh+aho+OAgeS9v+eUqOaWh+aho+OAgeWKn+iDveaIquWxj+OAgeW4uOin
gemXrumimOetieOAggoKIVtrdWJlb3BlcmF0b3ItdWldKGh0dHBzOi8vcmF3
LmdpdGh1YnVzZXJjb250ZW50LmNvbS9LdWJlT3BlcmF0b3Ivd2Vic2l0ZS9t
YXN0ZXIvaW1hZ2VzL2t1YmVvcGVyYXRvci11aS5qcGcpCgoqKioKCiMjIOeJ
iOadgwoKQ29weXJpZ2h0IDIwMTctMjAxOSB6aGFuZ2p1biAoZ2Vla2FyZEBx
cS5jb20pCgrnn6Xor4blhbHkuqsg572y5ZCNLemdnuWVhuS4muaAp+S9v+eU
qC3nm7jlkIzmlrnlvI/lhbHkuqsgNC4w77yIQ0MgQlktTkMtU0EgNC4w77yJ
77yM6K+m5oOF6KeBIFtMSUNFTlNFXShMSUNFTlNFKSDmlofku7bjgIIK
",,4780,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
