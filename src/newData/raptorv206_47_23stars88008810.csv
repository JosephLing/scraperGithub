name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'blessed',7855340,b'A high-level terminal interface library for node.js.',b'JavaScript',226,8809,,122,False,b'https://api.github.com/repos/chjj/blessed/forks',"IyBibGVzc2VkCgpBIGN1cnNlcy1saWtlIGxpYnJhcnkgd2l0aCBhIGhpZ2gg
bGV2ZWwgdGVybWluYWwgaW50ZXJmYWNlIEFQSSBmb3Igbm9kZS5qcy4KCiFb
Ymxlc3NlZF0oaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2No
amovYmxlc3NlZC9tYXN0ZXIvaW1nL3YwLjEuMC0zLmdpZikKCkJsZXNzZWQg
aXMgb3ZlciAxNiwwMDAgbGluZXMgb2YgY29kZSBhbmQgdGVybWluYWwgZ29v
ZG5lc3MuIEl0J3MgY29tcGxldGVseQppbXBsZW1lbnRlZCBpbiBqYXZhc2Ny
aXB0LCBhbmQgaXRzIGdvYWwgY29uc2lzdHMgb2YgdHdvIHRoaW5nczoKCjEu
IFJlaW1wbGVtZW50IG5jdXJzZXMgZW50aXJlbHkgYnkgcGFyc2luZyBhbmQg
Y29tcGlsaW5nIHRlcm1pbmZvIGFuZCB0ZXJtY2FwLAphbmQgZXhwb3Npbmcg
YSBgUHJvZ3JhbWAgb2JqZWN0IHdoaWNoIGNhbiBvdXRwdXQgZXNjYXBlIHNl
cXVlbmNlcyBjb21wYXRpYmxlCndpdGggX2FueV8gdGVybWluYWwuCgoyLiBJ
bXBsZW1lbnQgYSB3aWRnZXQgQVBJIHdoaWNoIGlzIGhlYXZpbHkgb3B0aW1p
emVkIGZvciB0ZXJtaW5hbHMuCgpUaGUgYmxlc3NlZCByZW5kZXJlciBtYWtl
cyB1c2Ugb2YgQ1NSIChjaGFuZ2Utc2Nyb2xsLXJlZ2lvbiksIGFuZCBCQ0UK
KGJhY2stY29sb3ItZXJhc2UpLiBJdCBkcmF3cyB0aGUgc2NyZWVuIHVzaW5n
IHRoZSBwYWludGVyJ3MgYWxnb3JpdGhtIGFuZCBpcwpzcGVkIHVwIHdpdGgg
c21hcnQgY3Vyc29yIG1vdmVtZW50cyBhbmQgYSBzY3JlZW4gZGFtYWdlIGJ1
ZmZlci4gVGhpcyBtZWFucwpyZW5kZXJpbmcgb2YgeW91ciBhcHBsaWNhdGlv
biB3aWxsIGJlIGV4dHJlbWVseSBlZmZpY2llbnQ6IGJsZXNzZWQgb25seSBk
cmF3cwp0aGUgY2hhbmdlcyAoZGFtYWdlKSB0byB0aGUgc2NyZWVuLgoKQmxl
c3NlZCBpcyBhcmd1YWJseSBhcyBhY2N1cmF0ZSBhcyBuY3Vyc2VzLCBidXQg
ZXZlbiBtb3JlIG9wdGltaXplZCBpbiBzb21lCndheXMuIFRoZSB3aWRnZXQg
bGlicmFyeSBnaXZlcyB5b3UgYW4gQVBJIHdoaWNoIGlzIHJlbWluaXNjZW50
IG9mIHRoZSBET00uCkFueW9uZSBpcyBhYmxlIHRvIG1ha2UgYW4gYXdlc29t
ZSB0ZXJtaW5hbCBhcHBsaWNhdGlvbiB3aXRoIGJsZXNzZWQuIFRoZXJlIGFy
ZQp0ZXJtaW5hbCB3aWRnZXQgbGlicmFyaWVzIGZvciBvdGhlciBwbGF0Zm9y
bXMgKHByaW1hcmlseSBbcHl0aG9uXVt1cndpZF0gYW5kCltwZXJsXVtjdXJz
ZXMtdWldKSwgYnV0IGJsZXNzZWQgaXMgcG9zc2libHkgdGhlIG1vc3QgRE9N
LWxpa2UgKGRhcmUgSSBzYXkgdGhlCm1vc3QgdXNlci1mcmllbmRseT8pLgoK
Qmxlc3NlZCBoYXMgYmVlbiB1c2VkIHRvIGltcGxlbWVudCBvdGhlciBwb3B1
bGFyIGxpYnJhcmllcyBhbmQgcHJvZ3JhbXMuCkV4YW1wbGVzIGluY2x1ZGU6
IHRoZSBbc2xhcCB0ZXh0IGVkaXRvcl1bc2xhcF0gYW5kIFtibGVzc2VkLWNv
bnRyaWJdW2NvbnRyaWJdLgpUaGUgYmxlc3NlZCBBUEkgaXRzZWxmIGhhcyBn
b25lIG9uIHRvIGluc3BpcmUgW3Rlcm11aV1bdGVybXVpXSBmb3IgR28uCgoj
IyBJbnN0YWxsCgpgYGAgYmFzaAokIG5wbSBpbnN0YWxsIGJsZXNzZWQKYGBg
CgojIyBFeGFtcGxlCgpUaGlzIHdpbGwgcmVuZGVyIGEgYm94IHdpdGggbGlu
ZSBib3JkZXJzIGNvbnRhaW5pbmcgdGhlIHRleHQgYCdIZWxsbyB3b3JsZCEn
YCwKcGVyZmVjdGx5IGNlbnRlcmVkIGhvcml6b250YWxseSBhbmQgdmVydGlj
YWxseS4KCl9fTk9URV9fOiBJdCBpcyByZWNvbW1lbmQgeW91IHVzZSBlaXRo
ZXIgYHNtYXJ0Q1NSYCBvciBgZmFzdENTUmAgYXMgYQpgYmxlc3NlZC5zY3Jl
ZW5gIG9wdGlvbi4gVGhpcyB3aWxsIGVuYWJsZSBDU1Igd2hlbiBzY3JvbGxp
bmcgdGV4dCBpbiBlbGVtZW50cwpvciB3aGVuIG1hbmlwdWxhdGluZyBsaW5l
cy4KCmBgYCBqcwp2YXIgYmxlc3NlZCA9IHJlcXVpcmUoJ2JsZXNzZWQnKTsK
Ci8vIENyZWF0ZSBhIHNjcmVlbiBvYmplY3QuCnZhciBzY3JlZW4gPSBibGVz
c2VkLnNjcmVlbih7CiAgc21hcnRDU1I6IHRydWUKfSk7CgpzY3JlZW4udGl0
bGUgPSAnbXkgd2luZG93IHRpdGxlJzsKCi8vIENyZWF0ZSBhIGJveCBwZXJm
ZWN0bHkgY2VudGVyZWQgaG9yaXpvbnRhbGx5IGFuZCB2ZXJ0aWNhbGx5Lgp2
YXIgYm94ID0gYmxlc3NlZC5ib3goewogIHRvcDogJ2NlbnRlcicsCiAgbGVm
dDogJ2NlbnRlcicsCiAgd2lkdGg6ICc1MCUnLAogIGhlaWdodDogJzUwJScs
CiAgY29udGVudDogJ0hlbGxvIHtib2xkfXdvcmxkey9ib2xkfSEnLAogIHRh
Z3M6IHRydWUsCiAgYm9yZGVyOiB7CiAgICB0eXBlOiAnbGluZScKICB9LAog
IHN0eWxlOiB7CiAgICBmZzogJ3doaXRlJywKICAgIGJnOiAnbWFnZW50YScs
CiAgICBib3JkZXI6IHsKICAgICAgZmc6ICcjZjBmMGYwJwogICAgfSwKICAg
IGhvdmVyOiB7CiAgICAgIGJnOiAnZ3JlZW4nCiAgICB9CiAgfQp9KTsKCi8v
IEFwcGVuZCBvdXIgYm94IHRvIHRoZSBzY3JlZW4uCnNjcmVlbi5hcHBlbmQo
Ym94KTsKCi8vIEFkZCBhIHBuZyBpY29uIHRvIHRoZSBib3gKdmFyIGljb24g
PSBibGVzc2VkLmltYWdlKHsKICBwYXJlbnQ6IGJveCwKICB0b3A6IDAsCiAg
bGVmdDogMCwKICB0eXBlOiAnb3ZlcmxheScsCiAgd2lkdGg6ICdzaHJpbmsn
LAogIGhlaWdodDogJ3NocmluaycsCiAgZmlsZTogX19kaXJuYW1lICsgJy9t
eS1wcm9ncmFtLWljb24ucG5nJywKICBzZWFyY2g6IGZhbHNlCn0pOwoKLy8g
SWYgb3VyIGJveCBpcyBjbGlja2VkLCBjaGFuZ2UgdGhlIGNvbnRlbnQuCmJv
eC5vbignY2xpY2snLCBmdW5jdGlvbihkYXRhKSB7CiAgYm94LnNldENvbnRl
bnQoJ3tjZW50ZXJ9U29tZSBkaWZmZXJlbnQge3JlZC1mZ31jb250ZW50ey9y
ZWQtZmd9LnsvY2VudGVyfScpOwogIHNjcmVlbi5yZW5kZXIoKTsKfSk7Cgov
LyBJZiBib3ggaXMgZm9jdXNlZCwgaGFuZGxlIGBlbnRlcmAvYHJldHVybmAg
YW5kIGdpdmUgdXMgc29tZSBtb3JlIGNvbnRlbnQuCmJveC5rZXkoJ2VudGVy
JywgZnVuY3Rpb24oY2gsIGtleSkgewogIGJveC5zZXRDb250ZW50KCd7cmln
aHR9RXZlbiBkaWZmZXJlbnQge2JsYWNrLWZnfWNvbnRlbnR7L2JsYWNrLWZn
fS57L3JpZ2h0fVxuJyk7CiAgYm94LnNldExpbmUoMSwgJ2JhcicpOwogIGJv
eC5pbnNlcnRMaW5lKDEsICdmb28nKTsKICBzY3JlZW4ucmVuZGVyKCk7Cn0p
OwoKLy8gUXVpdCBvbiBFc2NhcGUsIHEsIG9yIENvbnRyb2wtQy4Kc2NyZWVu
LmtleShbJ2VzY2FwZScsICdxJywgJ0MtYyddLCBmdW5jdGlvbihjaCwga2V5
KSB7CiAgcmV0dXJuIHByb2Nlc3MuZXhpdCgwKTsKfSk7CgovLyBGb2N1cyBv
dXIgZWxlbWVudC4KYm94LmZvY3VzKCk7CgovLyBSZW5kZXIgdGhlIHNjcmVl
bi4Kc2NyZWVuLnJlbmRlcigpOwpgYGAKCiMjIERvY3VtZW50YXRpb24KCiMj
IyBXaWRnZXRzCgotIFtCYXNlIE5vZGVzXSgjYmFzZS1ub2RlcykKICAtIFtO
b2RlXSgjbm9kZS1mcm9tLWV2ZW50ZW1pdHRlcikgKGFic3RyYWN0KQogIC0g
W1NjcmVlbl0oI3NjcmVlbi1mcm9tLW5vZGUpCiAgLSBbRWxlbWVudF0oI2Vs
ZW1lbnQtZnJvbS1ub2RlKSAoYWJzdHJhY3QpCi0gW0JveGVzXSgjYm94ZXMp
CiAgLSBbQm94XSgjYm94LWZyb20tZWxlbWVudCkKICAtIFtUZXh0XSgjdGV4
dC1mcm9tLWVsZW1lbnQpCiAgLSBbTGluZV0oI2xpbmUtZnJvbS1ib3gpCiAg
LSBbU2Nyb2xsYWJsZUJveF0oI3Njcm9sbGFibGVib3gtZnJvbS1ib3gpIChk
ZXByZWNhdGVkKQogIC0gW1Njcm9sbGFibGVUZXh0XSgjc2Nyb2xsYWJsZXRl
eHQtZnJvbS1zY3JvbGxhYmxlYm94KSAoZGVwcmVjYXRlZCkKICAtIFtCaWdU
ZXh0XSgjYmlndGV4dC1mcm9tLWJveCkKLSBbTGlzdHNdKCNsaXN0cykKICAt
IFtMaXN0XSgjbGlzdC1mcm9tLWJveCkKICAtIFtGaWxlTWFuYWdlcl0oI2Zp
bGVtYW5hZ2VyLWZyb20tbGlzdCkKICAtIFtMaXN0VGFibGVdKCNsaXN0dGFi
bGUtZnJvbS1saXN0KQogIC0gW0xpc3RiYXJdKCNsaXN0YmFyLWZyb20tYm94
KQotIFtGb3Jtc10oI2Zvcm1zKQogIC0gW0Zvcm1dKCNmb3JtLWZyb20tYm94
KQogIC0gW0lucHV0XSgjaW5wdXQtZnJvbS1ib3gpIChhYnN0cmFjdCkKICAt
IFtUZXh0YXJlYV0oI3RleHRhcmVhLWZyb20taW5wdXQpCiAgLSBbVGV4dGJv
eF0oI3RleHRib3gtZnJvbS10ZXh0YXJlYSkKICAtIFtCdXR0b25dKCNidXR0
b24tZnJvbS1pbnB1dCkKICAtIFtDaGVja2JveF0oI2NoZWNrYm94LWZyb20t
aW5wdXQpCiAgLSBbUmFkaW9TZXRdKCNyYWRpb3NldC1mcm9tLWJveCkKICAt
IFtSYWRpb0J1dHRvbl0oI3JhZGlvYnV0dG9uLWZyb20tY2hlY2tib3gpCi0g
W1Byb21wdHNdKCNwcm9tcHRzKQogIC0gW1Byb21wdF0oI3Byb21wdC1mcm9t
LWJveCkKICAtIFtRdWVzdGlvbl0oI3F1ZXN0aW9uLWZyb20tYm94KQogIC0g
W01lc3NhZ2VdKCNtZXNzYWdlLWZyb20tYm94KQogIC0gW0xvYWRpbmddKCNs
b2FkaW5nLWZyb20tYm94KQotIFtEYXRhIERpc3BsYXldKCNkYXRhLWRpc3Bs
YXkpCiAgLSBbUHJvZ3Jlc3NCYXJdKCNwcm9ncmVzc2Jhci1mcm9tLWlucHV0
KQogIC0gW0xvZ10oI2xvZy1mcm9tLXNjcm9sbGFibGV0ZXh0KQogIC0gW1Rh
YmxlXSgjdGFibGUtZnJvbS1ib3gpCi0gW1NwZWNpYWwgRWxlbWVudHNdKCNz
cGVjaWFsLWVsZW1lbnRzKQogIC0gW1Rlcm1pbmFsXSgjdGVybWluYWwtZnJv
bS1ib3gpCiAgLSBbSW1hZ2VdKCNpbWFnZS1mcm9tLWJveCkKICAtIFtBTlNJ
SW1hZ2VdKCNhbnNpaW1hZ2UtZnJvbS1ib3gpCiAgLSBbT3ZlcmxheUltYWdl
XSgjb3ZlcmxheWltYWdlLWZyb20tYm94KQogIC0gW1ZpZGVvXSgjdmlkZW8t
ZnJvbS1ib3gpCiAgLSBbTGF5b3V0XSgjbGF5b3V0LWZyb20tZWxlbWVudCkK
CiMjIyBPdGhlcgoKLSBbSGVscGVyc10oI2hlbHBlcnMpCgojIyMgTWVjaGFu
aWNzCgotIFtDb250ZW50ICYgVGFnc10oI2NvbnRlbnQtLXRhZ3MpCiAgLSBb
Q29sb3JzXSgjY29sb3JzKQogIC0gW0F0dHJpYnV0ZXNdKCNhdHRyaWJ1dGVz
KQogIC0gW0FsaWdubWVudF0oI2FsaWdubWVudCkKICAtIFtFc2NhcGluZ10o
I2VzY2FwaW5nKQogIC0gW1NHUiBTZXF1ZW5jZXNdKCNzZ3Itc2VxdWVuY2Vz
KQotIFtTdHlsZV0oI3N0eWxlKQogIC0gW0NvbG9yc10oI2NvbG9ycy0xKQog
IC0gW0F0dHJpYnV0ZXNdKCNhdHRyaWJ1dGVzLTEpCiAgLSBbVHJhbnNwYXJl
bmN5XSgjdHJhbnNwYXJlbmN5KQogIC0gW1NoYWRvd10oI3NoYWRvdykKICAt
IFtFZmZlY3RzXSgjZWZmZWN0cykKLSBbRXZlbnRzXSgjZXZlbnRzKQogIC0g
W0V2ZW50IEJ1YmJsaW5nXSgjZXZlbnQtYnViYmxpbmcpCi0gW1BvaXNpdGlv
bmluZ10oI3Bvc2l0aW9uaW5nKQotIFtSZW5kZXJpbmddKCNyZW5kZXJpbmcp
Ci0gW0FydGlmaWNpYWwgQ3Vyc29yc10oI2FydGlmaWNpYWwtY3Vyc29ycykK
LSBbTXVsdGlwbGUgU2NyZWVuc10oI211bHRpcGxlLXNjcmVlbnMpCi0gW1Nl
cnZlciBTaWRlIFVzYWdlXSgjc2VydmVyLXNpZGUtdXNhZ2UpCgojIyMgTm90
ZXMKCi0gW1dpbmRvd3MgQ29tcGF0aWJpbGl0eV0oI3dpbmRvd3MtY29tcGF0
aWJpbGl0eSkKLSBbTG93LWxldmVsIFVzYWdlXSgjbG93LWxldmVsLXVzYWdl
KQotIFtUZXN0aW5nXSgjdGVzdGluZykKLSBbRXhhbXBsZXNdKCNleGFtcGxl
cykKLSBbRkFRXSgjZmFxKQoKCiMjIFdpZGdldHMKCkJsZXNzZWQgY29tZXMg
d2l0aCBhIG51bWJlciBvZiBoaWdoLWxldmVsIHdpZGdldHMgc28geW91IGNh
biBhdm9pZCBhbGwgdGhlCm5hc3R5IGxvdy1sZXZlbCB0ZXJtaW5hbCBzdHVm
Zi4KCgojIyMgQmFzZSBOb2RlcwoKCiMjIyMgTm9kZSAoZnJvbSBFdmVudEVt
aXR0ZXIpCgpUaGUgYmFzZSBub2RlIHdoaWNoIGV2ZXJ5dGhpbmcgaW5oZXJp
dHMgZnJvbS4KCiMjIyMjIE9wdGlvbnM6CgotIF9fc2NyZWVuX18gLSBUaGUg
c2NyZWVuIHRvIGJlIGFzc29jaWF0ZWQgd2l0aC4KLSBfX3BhcmVudF9fIC0g
VGhlIGRlc2lyZWQgcGFyZW50LgotIF9fY2hpbGRyZW5fXyAtIEFuIGFycnJh
eSBvZiBjaGlsZHJlbi4KCiMjIyMjIFByb3BlcnRpZXM6CgotIEluaGVyaXRz
IGFsbCBmcm9tIEV2ZW50RW1pdHRlci4KLSBfX3R5cGVfXyAtIFR5cGUgb2Yg
dGhlIG5vZGUgKGUuZy4gYGJveGApLgotIF9fb3B0aW9uc19fIC0gT3JpZ2lu
YWwgb3B0aW9ucyBvYmplY3QuCi0gX19wYXJlbnRfXyAtIFBhcmVudCBub2Rl
LgotIF9fc2NyZWVuX18gLSBQYXJlbnQgc2NyZWVuLgotIF9fY2hpbGRyZW5f
XyAtIEFycmF5IG9mIG5vZGUncyBjaGlsZHJlbi4KLSBfX2RhdGEsIF8sICRf
XyAtIEFuIG9iamVjdCBmb3IgYW55IG1pc2NlbGxhbm91cyB1c2VyIGRhdGEu
Ci0gX19pbmRleF9fIC0gUmVuZGVyIGluZGV4IChkb2N1bWVudCBvcmRlciBp
bmRleCkgb2YgdGhlIGxhc3QgcmVuZGVyIGNhbGwuCgojIyMjIyBFdmVudHM6
CgotIEluaGVyaXRzIGFsbCBmcm9tIEV2ZW50RW1pdHRlci4KLSBfX2Fkb3B0
X18gLSBSZWNlaXZlZCB3aGVuIG5vZGUgaXMgYWRkZWQgdG8gYSBwYXJlbnQu
Ci0gX19yZW1vdmVfXyAtIFJlY2VpdmVkIHdoZW4gbm9kZSBpcyByZW1vdmVk
IGZyb20gaXQncyBjdXJyZW50IHBhcmVudC4KLSBfX3JlcGFyZW50X18gLSBS
ZWNlaXZlZCB3aGVuIG5vZGUgZ2FpbnMgYSBuZXcgcGFyZW50LgotIF9fYXR0
YWNoX18gLSBSZWNlaXZlZCB3aGVuIG5vZGUgaXMgYXR0YWNoZWQgdG8gdGhl
IHNjcmVlbiBkaXJlY3RseSBvcgogIHNvbWV3aGVyZSBpbiBpdHMgYW5jZXN0
cnkuCi0gX19kZXRhY2hfXyAtIFJlY2VpdmVkIHdoZW4gbm9kZSBpcyBkZXRh
Y2hlZCBmcm9tIHRoZSBzY3JlZW4gZGlyZWN0bHkgb3IKICBzb21ld2hlcmUg
aW4gaXRzIGFuY2VzdHJ5LgoKIyMjIyMgTWV0aG9kczoKCi0gSW5oZXJpdHMg
YWxsIGZyb20gRXZlbnRFbWl0dGVyLgotIF9fcHJlcGVuZChub2RlKV9fIC0g
UHJlcGVuZCBhIG5vZGUgdG8gdGhpcyBub2RlJ3MgY2hpbGRyZW4uCi0gX19h
cHBlbmQobm9kZSlfXyAtIEFwcGVuZCBhIG5vZGUgdG8gdGhpcyBub2RlJ3Mg
Y2hpbGRyZW4uCi0gX19yZW1vdmUobm9kZSlfXyAtIFJlbW92ZSBjaGlsZCBu
b2RlIGZyb20gbm9kZS4KLSBfX2luc2VydChub2RlLCBpKV9fIC0gSW5zZXJ0
IGEgbm9kZSB0byB0aGlzIG5vZGUncyBjaGlsZHJlbiBhdCBpbmRleCBgaWAu
Ci0gX19pbnNlcnRCZWZvcmUobm9kZSwgcmVmTm9kZSlfXyAtIEluc2VydCBh
IG5vZGUgdG8gdGhpcyBub2RlJ3MgY2hpbGRyZW4KICBiZWZvcmUgdGhlIHJl
ZmVyZW5jZSBub2RlLgotIF9faW5zZXJ0QWZ0ZXIobm9kZSwgcmVmTm9kZSlf
XyAtIEluc2VydCBhIG5vZGUgZnJvbSBub2RlIGFmdGVyIHRoZSByZWZlcmVu
Y2UKICBub2RlLgotIF9fZGV0YWNoKClfXyAtIFJlbW92ZSBub2RlIGZyb20g
aXRzIHBhcmVudC4KLSBfX2VtaXREZXNjZW5kYW50cyh0eXBlLCBhcmdzLi4u
LCBbaXRlcmF0b3JdKV9fIC0gRW1pdCBldmVudCBmb3IgZWxlbWVudCwgYW5k
CiAgcmVjdXJzaXZlbHkgZW1pdCBzYW1lIGV2ZW50IGZvciBhbGwgZGVzY2Vu
ZGFudHMuCi0gX19nZXQobmFtZSwgW2RlZmF1bHRdKV9fIC0gR2V0IHVzZXIg
cHJvcGVydHkgd2l0aCBhIHBvdGVudGlhbCBkZWZhdWx0IHZhbHVlLgotIF9f
c2V0KG5hbWUsIHZhbHVlKV9fIC0gU2V0IHVzZXIgcHJvcGVydHkgdG8gdmFs
dWUuCgoKIyMjIyBTY3JlZW4gKGZyb20gTm9kZSkKClRoZSBzY3JlZW4gb24g
d2hpY2ggZXZlcnkgb3RoZXIgbm9kZSByZW5kZXJzLgoKIyMjIyMgT3B0aW9u
czoKCi0gX19wcm9ncmFtX18gLSBUaGUgYmxlc3NlZCBgUHJvZ3JhbWAgdG8g
YmUgYXNzb2NpYXRlZCB3aXRoLiBXaWxsIGJlCiAgYXV0b21hdGljYWxseSBp
bnN0YW50aWF0ZWQgaWYgbm9uZSBpcyBwcm92aWRlZC4KLSBfX3NtYXJ0Q1NS
X18gLSBBdHRlbXB0IHRvIHBlcmZvcm0gQ1NSIG9wdGltaXphdGlvbiBvbiBh
bGwgcG9zc2libGUgZWxlbWVudHMKICAobm90IGp1c3QgZnVsbC13aWR0aCBv
bmVzLCBlbGVtZW50cyB3aXRoIHVuaWZvcm0gY2VsbHMgdG8gdGhlaXIgc2lk
ZXMpLgogIFRoaXMgaXMga25vd24gdG8gY2F1c2UgZmxpY2tlcmluZyB3aXRo
IGVsZW1lbnRzIHRoYXQgYXJlIG5vdCBmdWxsLXdpZHRoLAogIGhvd2V2ZXIs
IGl0IGlzIG1vcmUgb3B0aW1hbCBmb3IgdGVybWluYWwgcmVuZGVyaW5nLgot
IF9fZmFzdENTUl9fIC0gRG8gQ1NSIG9uIGFueSBlbGVtZW50IHdpdGhpbiAy
MCBjb2xzIG9mIHRoZSBzY3JlZW4gZWRnZSBvbgogIGVpdGhlciBzaWRlLiBG
YXN0ZXIgdGhhbiBgc21hcnRDU1JgLCBidXQgbWF5IGNhdXNlIGZsaWNrZXJp
bmcgZGVwZW5kaW5nIG9uCiAgd2hhdCBpcyBvbiBlYWNoIHNpZGUgb2YgdGhl
IGVsZW1lbnQuCi0gX191c2VCQ0VfXyAtIEF0dGVtcHQgdG8gcGVyZm9ybSBg
YmFja19jb2xvcl9lcmFzZWAgb3B0aW1pemF0aW9ucyBmb3IgdGVybWluYWxz
CiAgdGhhdCBzdXBwb3J0IGl0LiBJdCB3aWxsIGFsc28gd29yayB3aXRoIHRl
cm1pbmFscyB0aGF0IGRvbid0IHN1cHBvcnQgaXQsIGJ1dAogIG9ubHkgb24g
bGluZXMgd2l0aCB0aGUgZGVmYXVsdCBiYWNrZ3JvdW5kIGNvbG9yLiBBcyBp
dCBzdGFuZHMgd2l0aCB0aGUgY3VycmVudAogIGltcGxlbWVudGF0aW9uLCBp
dCdzIHVuY2VydGFpbiBob3cgbXVjaCB0ZXJtaW5hbCBwZXJmb3JtYW5jZSB0
aGlzIGFkZHMgYXQgdGhlCiAgY29zdCBvZiBvdmVyaGVhZCB3aXRoaW4gbm9k
ZS4KLSBfX3Jlc2l6ZVRpbWVvdXRfXyAtIEFtb3VudCBvZiB0aW1lIChpbiBt
cykgdG8gcmVkcmF3IHRoZSBzY3JlZW4gYWZ0ZXIgdGhlCiAgdGVybWluYWwg
aXMgcmVzaXplZCAoRGVmYXVsdDogMzAwKS4KLSBfX3RhYlNpemVfXyAtIFRo
ZSB3aWR0aCBvZiB0YWJzIHdpdGhpbiBhbiBlbGVtZW50J3MgY29udGVudC4K
LSBfX2F1dG9QYWRkaW5nX18gLSBBdXRvbWF0aWNhbGx5IHBvc2l0aW9uIGNo
aWxkIGVsZW1lbnRzIHdpdGggYm9yZGVyIGFuZAogIHBhZGRpbmcgaW4gbWlu
ZCAoX19OT1RFX186IHRoaXMgaXMgYSByZWNvbW1lbmRlZCBvcHRpb24uIEl0
IG1heSBiZWNvbWUKICBkZWZhdWx0IGluIHRoZSBmdXR1cmUpLgotIF9fY3Vy
c29yLmFydGlmaWNpYWxfXyAtIEhhdmUgYmxlc3NlZCBkcmF3IGEgY3VzdG9t
IGN1cnNvciBhbmQgaGlkZSB0aGUKICB0ZXJtaW5hbCBjdXJzb3IgKF9fZXhw
ZXJpbWVudGFsX18pLgotIF9fY3Vyc29yLnNoYXBlX18gLSBTaGFwZSBvZiB0
aGUgY3Vyc29yLiBDYW4gYmU6IGJsb2NrLCB1bmRlcmxpbmUsIG9yIGxpbmUu
Ci0gX19jdXJzb3IuYmxpbmtfXyAtIFdoZXRoZXIgdGhlIGN1cnNvciBibGlu
a3MuCi0gX19jdXJzb3IuY29sb3JfXyAtIENvbG9yIG9mIHRoZSBjb2xvci4g
QWNjZXB0cyBhbnkgdmFsaWQgY29sb3IgdmFsdWUgKGBudWxsYAogIGlzIGRl
ZmF1bHQpLgotIF9fbG9nX18gLSBDcmVhdGUgYSBsb2cgZmlsZS4gU2VlIGBs
b2dgIG1ldGhvZC4KLSBfX2R1bXBfXyAtIER1bXAgYWxsIG91dHB1dCBhbmQg
aW5wdXQgdG8gZGVzaXJlZCBmaWxlLiBDYW4gYmUgdXNlZCB0b2dldGhlcgog
IHdpdGggYGxvZ2Agb3B0aW9uIGlmIHNldCBhcyBhIGJvb2xlYW4uCi0gX19k
ZWJ1Z19fIC0gRGVidWcgbW9kZS4gRW5hYmxlcyB1c2FnZSBvZiB0aGUgYGRl
YnVnYCBtZXRob2QuIEFsc28gY3JlYXRlcyBhCiAgZGVidWcgY29uc29sZSB3
aGljaCB3aWxsIGRpc3BsYXkgd2hlbiBwcmVzc2luZyBGMTIuIEl0IHdpbGwg
ZGlzcGxheSBhbGwgbG9nCiAgYW5kIGRlYnVnIG1lc3NhZ2VzLgotIF9faWdu
b3JlTG9ja2VkX18gLSBBcnJheSBvZiBrZXlzIGluIHRoZWlyIGZ1bGwgZm9y
bWF0IChlLmcuIGBDLWNgKSB0byBpZ25vcmUKICB3aGVuIGtleXMgYXJlIGxv
Y2tlZCBvciBncmFiYmVkLiBVc2VmdWwgZm9yIGNyZWF0aW5nIGEga2V5IHRo
YXQgd2lsbCBfYWx3YXlzXwogIGV4aXQgbm8gbWF0dGVyIHdoZXRoZXIgdGhl
IGtleXMgYXJlIGxvY2tlZC4KLSBfX2RvY2tCb3JkZXJzX18gLSBBdXRvbWF0
aWNhbGx5ICJkb2NrIiBib3JkZXJzIHdpdGggb3RoZXIgZWxlbWVudHMgaW5z
dGVhZCBvZgogIG92ZXJsYXBwaW5nLCBkZXBlbmRpbmcgb24gcG9zaXRpb24g
KF9fZXhwZXJpbWVudGFsX18pLiBGb3IgZXhhbXBsZToKICBUaGVzZSBib3Jk
ZXItb3ZlcmxhcHBlZCBlbGVtZW50czoKYGBgCuKUjOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUjOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
kArilIIgYm94MSAgICDilIIgYm94MiAgICDilIIK4pSU4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSU4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSYCmBgYAogIEJlY29tZToKYGBgCuKUjOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUrOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUkArilIIg
Ym94MSAgICDilIIgYm94MiAgICDilIIK4pSU4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pS04pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSYCmBg
YAotIF9faWdub3JlRG9ja0NvbnRyYXN0X18gLSBOb3JtYWxseSwgZG9ja2Fi
bGUgYm9yZGVycyB3aWxsIG5vdCBkb2NrIGlmIHRoZQogIGNvbG9ycyBvciBh
dHRyaWJ1dGVzIGFyZSBkaWZmZXJlbnQuIFRoaXMgb3B0aW9uIHdpbGwgYWxs
b3cgdGhlbSB0byBkb2NrCiAgcmVnYXJkbGVzcy4gSXQgbWF5IHByb2R1Y2Ug
c29tZSBvZGQgbG9va2luZyBtdWx0aS1jb2xvcmVkIGJvcmRlcnMgdGhvdWdo
LgotIF9fZnVsbFVuaWNvZGVfXyAtIEFsbG93IGZvciByZW5kZXJpbmcgb2Yg
RWFzdCBBc2lhbiBkb3VibGUtd2lkdGggY2hhcmFjdGVycywKICB1dGYtMTYg
c3Vycm9nYXRlIHBhaXJzLCBhbmQgdW5pY29kZSBjb21iaW5pbmcgY2hhcmFj
dGVycy4gVGhpcyBhbGxvd3MgeW91IHRvCiAgZGlzcGxheSB0ZXh0IGFib3Zl
IHRoZSBiYXNpYyBtdWx0aWxpbmd1YWwgcGxhbmUuIFRoaXMgaXMgYmVoaW5k
IGFuIG9wdGlvbgogIGJlY2F1c2UgaXQgbWF5IGFmZmVjdCBwZXJmb3JtYW5j
ZSBzbGlnaHRseSBuZWdhdGl2ZWx5LiBXaXRob3V0IHRoaXMgb3B0aW9uCiAg
ZW5hYmxlZCwgYWxsIGRvdWJsZS13aWR0aCwgc3Vycm9nYXRlIHBhaXIsIGFu
ZCBjb21iaW5pbmcgY2hhcmFjdGVycyB3aWxsIGJlCiAgcmVwbGFjZWQgYnkg
YCc/PydgLCBgJz8nYCwgYCcnYCByZXNwZWN0aXZlbHkuIChOT1RFOiBpVGVy
bTIgY2Fubm90IGRpc3BsYXkKICBjb21iaW5pbmcgY2hhcmFjdGVycyBwcm9w
ZXJseS4gQmxlc3NlZCBzaW1wbHkgcmVtb3ZlcyB0aGVtIGZyb20gYW4gZWxl
bWVudCdzCiAgY29udGVudCBpZiBpVGVybTIgaXMgZGV0ZWN0ZWQpLgotIF9f
c2VuZEZvY3VzX18gLSBTZW5kIGZvY3VzIGV2ZW50cyBhZnRlciBtb3VzZSBp
cyBlbmFibGVkLgotIF9fd2FybmluZ3NfXyAtIERpc3BsYXkgd2FybmluZ3Mg
KHN1Y2ggYXMgdGhlIG91dHB1dCBub3QgYmVpbmcgYSBUVFksIHNpbWlsYXIK
ICB0byBuY3Vyc2VzKS4KLSBfX2ZvcmNlVW5pY29kZV9fIC0gRm9yY2UgYmxl
c3NlZCB0byB1c2UgdW5pY29kZSBldmVuIGlmIGl0IGlzIG5vdCBkZXRlY3Rl
ZAogIHZpYSB0ZXJtaW5mbywgZW52IHZhcmlhYmxlcywgb3Igd2luZG93cyBj
b2RlIHBhZ2UuIElmIHZhbHVlIGlzIGB0cnVlYCB1bmljb2RlCiAgaXMgZm9y
Y2VkLiBJZiB2YWx1ZSBpcyBgZmFsc2VgIG5vbi11bmljb2RlIGlzIGZvcmNl
ZCAoZGVmYXVsdDogYG51bGxgKS4KLSBfX2lucHV0L291dHB1dF9fIC0gSW5w
dXQgYW5kIG91dHB1dCBzdHJlYW1zLiBgcHJvY2Vzcy5zdGRpbmAvYHByb2Nl
c3Muc3Rkb3V0YAogIGJ5IGRlZmF1bHQsIGhvd2V2ZXIsIGl0IGNvdWxkIGJl
IGEgYG5ldC5Tb2NrZXRgIGlmIHlvdSB3YW50IHRvIG1ha2UgYSBwcm9ncmFt
CiAgdGhhdCBydW5zIG92ZXIgdGVsbmV0IG9yIHNvbWV0aGluZyBvZiB0aGF0
IG5hdHVyZS4KLSBfX3Rlcm1pbmFsX18gLSBgVEVSTWAgbmFtZSB1c2VkIGZv
ciB0ZXJtaW5mbyBwYXJzaW5nLiBUaGUgYCRURVJNYCBlbnYgdmFyaWFibGUg
aXMKICB1c2VkIGJ5IGRlZmF1bHQuCi0gX190aXRsZV9fIC0gU2V0IHRoZSB0
ZXJtaW5hbCB3aW5kb3cgdGl0bGUgaWYgcG9zc2libGUuCgojIyMjIyBQcm9w
ZXJ0aWVzOgoKLSBJbmhlcml0cyBhbGwgZnJvbSBOb2RlLgotIF9fcHJvZ3Jh
bV9fIC0gVGhlIGJsZXNzZWQgUHJvZ3JhbSBvYmplY3QuCi0gX190cHV0X18g
LSBUaGUgYmxlc3NlZCBUcHV0IG9iamVjdCAob25seSBhdmFpbGFibGUgaWYg
eW91IHBhc3NlZCBgdHB1dDogdHJ1ZWAKICB0byB0aGUgUHJvZ3JhbSBjb25z
dHJ1Y3Rvci4pCi0gX19mb2N1c2VkX18gLSBUb3Agb2YgdGhlIGZvY3VzIGhp
c3Rvcnkgc3RhY2suCi0gX193aWR0aF9fIC0gV2lkdGggb2YgdGhlIHNjcmVl
biAoc2FtZSBhcyBgcHJvZ3JhbS5jb2xzYCkuCi0gX19oZWlnaHRfXyAtIEhl
aWdodCBvZiB0aGUgc2NyZWVuIChzYW1lIGFzIGBwcm9ncmFtLnJvd3NgKS4K
LSBfX2NvbHNfXyAtIFNhbWUgYXMgYHNjcmVlbi53aWR0aGAuCi0gX19yb3dz
X18gLSBTYW1lIGFzIGBzY3JlZW4uaGVpZ2h0YC4KLSBfX2xlZnRfXyAtIFJl
bGF0aXZlIGxlZnQgb2Zmc2V0LCBhbHdheXMgemVyby4KLSBfX3JpZ2h0X18g
LSBSZWxhdGl2ZSByaWdodCBvZmZzZXQsIGFsd2F5cyB6ZXJvLgotIF9fdG9w
X18gLSBSZWxhdGl2ZSB0b3Agb2Zmc2V0LCBhbHdheXMgemVyby4KLSBfX2Jv
dHRvbV9fIC0gUmVsYXRpdmUgYm90dG9tIG9mZnNldCwgYWx3YXlzIHplcm8u
Ci0gX19hbGVmdF9fIC0gQWJzb2x1dGUgbGVmdCBvZmZzZXQsIGFsd2F5cyB6
ZXJvLgotIF9fYXJpZ2h0X18gLSBBYnNvbHV0ZSByaWdodCBvZmZzZXQsIGFs
d2F5cyB6ZXJvLgotIF9fYXRvcF9fIC0gQWJzb2x1dGUgdG9wIG9mZnNldCwg
YWx3YXlzIHplcm8uCi0gX19hYm90dG9tX18gLSBBYnNvbHV0ZSBib3R0b20g
b2Zmc2V0LCBhbHdheXMgemVyby4KLSBfX2dyYWJLZXlzX18gLSBXaGV0aGVy
IHRoZSBmb2N1c2VkIGVsZW1lbnQgZ3JhYnMgYWxsIGtleXByZXNzZXMuCi0g
X19sb2NrS2V5c19fIC0gUHJldmVudCBrZXlwcmVzc2VzIGZyb20gYmVpbmcg
cmVjZWl2ZWQgYnkgYW55IGVsZW1lbnQuCi0gX19ob3Zlcl9fIC0gVGhlIGN1
cnJlbnRseSBob3ZlcmVkIGVsZW1lbnQuIE9ubHkgc2V0IGlmIG1vdXNlIGV2
ZW50cyBhcmUgYm91bmQuCi0gX190ZXJtaW5hbF9fIC0gU2V0IG9yIGdldCB0
ZXJtaW5hbCBuYW1lLiBgU2V0YCBjYWxscyBgc2NyZWVuLnNldFRlcm1pbmFs
KClgCiAgaW50ZXJuYWxseS4KLSBfX3RpdGxlX18gLSBTZXQgb3IgZ2V0IHdp
bmRvdyB0aXRsZS4KCiMjIyMjIEV2ZW50czoKCi0gSW5oZXJpdHMgYWxsIGZy
b20gTm9kZS4KLSBfX3Jlc2l6ZV9fIC0gUmVjZWl2ZWQgb24gc2NyZWVuIHJl
c2l6ZS4KLSBfX21vdXNlX18gLSBSZWNlaXZlZCBvbiBtb3VzZSBldmVudHMu
Ci0gX19rZXlwcmVzc19fIC0gUmVjZWl2ZWQgb24ga2V5IGV2ZW50cy4KLSBf
X2VsZW1lbnQgW25hbWVdX18gLSBHbG9iYWwgZXZlbnRzIHJlY2VpdmVkIGZv
ciBhbGwgZWxlbWVudHMuCi0gX19rZXkgW25hbWVdX18gLSBSZWNlaXZlZCBv
biBrZXkgZXZlbnQgZm9yIFtuYW1lXS4KLSBfX2ZvY3VzLCBibHVyX18gLSBS
ZWNlaXZlZCB3aGVuIHRoZSB0ZXJtaW5hbCB3aW5kb3cgZm9jdXNlcy9ibHVy
cy4gUmVxdWlyZXMgYQogIHRlcm1pbmFsIHN1cHBvcnRpbmcgdGhlIGZvY3Vz
IHByb3RvY29sIGFuZCBmb2N1cyBuZWVkcyB0byBiZSBwYXNzZWQgdG8KICBw
cm9ncmFtLmVuYWJsZU1vdXNlKCkuCi0gX19wcmVyZW5kZXJfXyAtIFJlY2Vp
dmVkIGJlZm9yZSByZW5kZXIuCi0gX19yZW5kZXJfXyAtIFJlY2VpdmVkIG9u
IHJlbmRlci4KLSBfX3dhcm5pbmdfXyAtIFJlY2VpdmVkIHdoZW4gYmxlc3Nl
ZCBub3RpY2VzIHNvbWV0aGluZyB1bnRvd2FyZCAob3V0cHV0IGlzIG5vdAog
IGEgdHR5LCB0ZXJtaW5mbyBub3QgZm91bmQsIGV0YykuCi0gX19kZXN0cm95
X18gLSBSZWNlaXZlZCB3aGVuIHRoZSBzY3JlZW4gaXMgZGVzdHJveWVkIChv
bmx5IHVzZWZ1bCB3aGVuIHVzaW5nCiAgbXVsdGlwbGUgc2NyZWVucykuCgoj
IyMjIyBNZXRob2RzOgoKLSBJbmhlcml0cyBhbGwgZnJvbSBOb2RlLgotIF9f
bG9nKG1zZywgLi4uKV9fIC0gV3JpdGUgc3RyaW5nIHRvIHRoZSBsb2cgZmls
ZSBpZiBvbmUgd2FzIGNyZWF0ZWQuCi0gX19kZWJ1Zyhtc2csIC4uLilfXyAt
IFNhbWUgYXMgdGhlIGxvZyBtZXRob2QsIGJ1dCBvbmx5IGdldHMgY2FsbGVk
IGlmIHRoZQogIGBkZWJ1Z2Agb3B0aW9uIHdhcyBzZXQuCi0gX19hbGxvYygp
X18gLSBBbGxvY2F0ZSBhIG5ldyBwZW5kaW5nIHNjcmVlbiBidWZmZXIgYW5k
IGEgbmV3IG91dHB1dCBzY3JlZW4KICBidWZmZXIuCi0gX19yZWFsbG9jKClf
XyAtIFJlYWxsb2NhdGUgdGhlIHNjcmVlbiBidWZmZXJzIGFuZCBjbGVhciB0
aGUgc2NyZWVuLgotIF9fZHJhdyhzdGFydCwgZW5kKV9fIC0gRHJhdyB0aGUg
c2NyZWVuIGJhc2VkIG9uIHRoZSBjb250ZW50cyBvZiB0aGUgc2NyZWVuCiAg
YnVmZmVyLgotIF9fcmVuZGVyKClfXyAtIFJlbmRlciBhbGwgY2hpbGQgZWxl
bWVudHMsIHdyaXRpbmcgYWxsIGRhdGEgdG8gdGhlIHNjcmVlbgogIGJ1ZmZl
ciBhbmQgZHJhd2luZyB0aGUgc2NyZWVuLgotIF9fY2xlYXJSZWdpb24oeDEs
IHgyLCB5MSwgeTIpX18gLSBDbGVhciBhbnkgcmVnaW9uIG9uIHRoZSBzY3Jl
ZW4uCi0gX19maWxsUmVnaW9uKGF0dHIsIGNoLCB4MSwgeDIsIHkxLCB5Milf
XyAtIEZpbGwgYW55IHJlZ2lvbiB3aXRoIGEgY2hhcmFjdGVyCiAgb2YgYSBj
ZXJ0YWluIGF0dHJpYnV0ZS4KLSBfX2ZvY3VzT2Zmc2V0KG9mZnNldClfXyAt
IEZvY3VzIGVsZW1lbnQgYnkgb2Zmc2V0IG9mIGZvY3VzYWJsZSBlbGVtZW50
cy4KLSBfX2ZvY3VzUHJldmlvdXMoKV9fIC0gRm9jdXMgcHJldmlvdXMgZWxl
bWVudCBpbiB0aGUgaW5kZXguCi0gX19mb2N1c05leHQoKV9fIC0gRm9jdXMg
bmV4dCBlbGVtZW50IGluIHRoZSBpbmRleC4KLSBfX2ZvY3VzUHVzaChlbGVt
ZW50KV9fIC0gUHVzaCBlbGVtZW50IG9uIHRoZSBmb2N1cyBzdGFjayAoZXF1
aXZhbGVudCB0bwogIGBzY3JlZW4uZm9jdXNlZCA9IGVsYCkuCi0gX19mb2N1
c1BvcCgpX18gLSBQb3AgZWxlbWVudCBvZmYgdGhlIGZvY3VzIHN0YWNrLgot
IF9fc2F2ZUZvY3VzKClfXyAtIFNhdmUgdGhlIGZvY3VzZWQgZWxlbWVudC4K
LSBfX3Jlc3RvcmVGb2N1cygpX18gLSBSZXN0b3JlIHRoZSBzYXZlZCBmb2N1
c2VkIGVsZW1lbnQuCi0gX19yZXdpbmRGb2N1cygpX18gLSAiUmV3aW5kIiBm
b2N1cyB0byB0aGUgbGFzdCB2aXNpYmxlIGFuZCBhdHRhY2hlZCBlbGVtZW50
LgotIF9fa2V5KG5hbWUsIGxpc3RlbmVyKV9fIC0gQmluZCBhIGtleXByZXNz
IGxpc3RlbmVyIGZvciBhIHNwZWNpZmljIGtleS4KLSBfX29uY2VLZXkobmFt
ZSwgbGlzdGVuZXIpX18gLSBCaW5kIGEga2V5cHJlc3MgbGlzdGVuZXIgZm9y
IGEgc3BlY2lmaWMga2V5CiAgb25jZS4KLSBfX3Vua2V5KG5hbWUsIGxpc3Rl
bmVyKV9fIC0gUmVtb3ZlIGEga2V5cHJlc3MgbGlzdGVuZXIgZm9yIGEgc3Bl
Y2lmaWMga2V5LgotIF9fc3Bhd24oZmlsZSwgYXJncywgb3B0aW9ucylfXyAt
IFNwYXduIGEgcHJvY2VzcyBpbiB0aGUgZm9yZWdyb3VuZCwgcmV0dXJuIHRv
CiAgYmxlc3NlZCBhcHAgYWZ0ZXIgZXhpdC4KLSBfX2V4ZWMoZmlsZSwgYXJn
cywgb3B0aW9ucywgY2FsbGJhY2spX18gLSBTcGF3biBhIHByb2Nlc3MgaW4g
dGhlIGZvcmVncm91bmQsCiAgcmV0dXJuIHRvIGJsZXNzZWQgYXBwIGFmdGVy
IGV4aXQuIEV4ZWN1dGVzIGNhbGxiYWNrIG9uIGVycm9yIG9yIGV4aXQuCi0g
X19yZWFkRWRpdG9yKFtvcHRpb25zXSwgY2FsbGJhY2spX18gLSBSZWFkIGRh
dGEgZnJvbSB0ZXh0IGVkaXRvci4KLSBfX3NldEVmZmVjdHMoZWwsIGZlbCwg
b3Zlciwgb3V0LCBlZmZlY3RzLCB0ZW1wKV9fIC0gU2V0IGVmZmVjdHMgYmFz
ZWQgb24KICB0d28gZXZlbnRzIGFuZCBhdHRyaWJ1dGVzLgotIF9faW5zZXJ0
TGluZShuLCB5LCB0b3AsIGJvdHRvbSlfXyAtIEluc2VydCBhIGxpbmUgaW50
byB0aGUgc2NyZWVuICh1c2luZyBjc3I6CiAgdGhpcyBieXBhc3NlcyB0aGUg
b3V0cHV0IGJ1ZmZlcikuCi0gX19kZWxldGVMaW5lKG4sIHksIHRvcCwgYm90
dG9tKV9fIC0gRGVsZXRlIGEgbGluZSBmcm9tIHRoZSBzY3JlZW4gKHVzaW5n
IGNzcjoKICB0aGlzIGJ5cGFzc2VzIHRoZSBvdXRwdXQgYnVmZmVyKS4KLSBf
X2luc2VydEJvdHRvbSh0b3AsIGJvdHRvbSlfXyAtIEluc2VydCBhIGxpbmUg
YXQgdGhlIGJvdHRvbSBvZiB0aGUgc2NyZWVuLgotIF9faW5zZXJ0VG9wKHRv
cCwgYm90dG9tKV9fIC0gSW5zZXJ0IGEgbGluZSBhdCB0aGUgdG9wIG9mIHRo
ZSBzY3JlZW4uCi0gX19kZWxldGVCb3R0b20odG9wLCBib3R0b20pX18gLSBE
ZWxldGUgYSBsaW5lIGF0IHRoZSBib3R0b20gb2YgdGhlIHNjcmVlbi4KLSBf
X2RlbGV0ZVRvcCh0b3AsIGJvdHRvbSlfXyAtIERlbGV0ZSBhIGxpbmUgYXQg
dGhlIHRvcCBvZiB0aGUgc2NyZWVuLgotIF9fZW5hYmxlTW91c2UoW2VsXSlf
XyAtIEVuYWJsZSBtb3VzZSBldmVudHMgZm9yIHRoZSBzY3JlZW4gYW5kIG9w
dGlvbmFsbHkgYW4KICBlbGVtZW50IChhdXRvbWF0aWNhbGx5IGNhbGxlZCB3
aGVuIGEgZm9ybSBvZiBvbignbW91c2UnKSBpcyBib3VuZCkuCi0gX19lbmFi
bGVLZXlzKFtlbF0pX18gLSBFbmFibGUga2V5cHJlc3MgZXZlbnRzIGZvciB0
aGUgc2NyZWVuIGFuZCBvcHRpb25hbGx5CiAgYW4gZWxlbWVudCAoYXV0b21h
dGljYWxseSBjYWxsZWQgd2hlbiBhIGZvcm0gb2Ygb24oJ2tleXByZXNzJykg
aXMgYm91bmQpLgotIF9fZW5hYmxlSW5wdXQoW2VsXSlfXyAtIEVuYWJsZSBr
ZXkgYW5kIG1vdXNlIGV2ZW50cy4gQ2FsbHMgYm90IGVuYWJsZU1vdXNlCiAg
YW5kIGVuYWJsZUtleXMuCi0gX19jb3B5VG9DbGlwYm9hcmQodGV4dClfXyAt
IEF0dGVtcHQgdG8gY29weSB0ZXh0IHRvIGNsaXBib2FyZCB1c2luZyBpVGVy
bTIncwogIHByb3ByaWV0YXJ5IHNlcXVlbmNlLiBSZXR1cm5zIHRydWUgaWYg
c3VjY2Vzc2Z1bC4KLSBfX2N1cnNvclNoYXBlKHNoYXBlLCBibGluaylfXyAt
IEF0dGVtcHQgdG8gY2hhbmdlIGN1cnNvciBzaGFwZS4gV2lsbCBub3Qgd29y
awogIGluIGFsbCB0ZXJtaW5hbHMgKHNlZSBhcnRpZmljaWFsIGN1cnNvcnMg
Zm9yIGEgc29sdXRpb24gdG8gdGhpcykuIFJldHVybnMKICB0cnVlIGlmIHN1
Y2Nlc3NmdWwuCi0gX19jdXJzb3JDb2xvcihjb2xvcilfXyAtIEF0dGVtcHQg
dG8gY2hhbmdlIGN1cnNvciBjb2xvci4gUmV0dXJucyB0cnVlIGlmCiAgc3Vj
Y2Vzc2Z1bC4KLSBfX2N1cnNvclJlc2V0KClfXyAtIEF0dGVtcHQgdG8gcmVz
ZXQgY3Vyc29yLiBSZXR1cm5zIHRydWUgaWYgc3VjY2Vzc2Z1bC4KLSBfX3Nj
cmVlbnNob3QoW3hpLCB4bCwgeWksIHlsXSlfXyAtIFRha2UgYW4gU0dSIHNj
cmVlbnNob3Qgb2YgdGhlIHNjcmVlbgogIHdpdGhpbiB0aGUgcmVnaW9uLiBS
ZXR1cm5zIGEgc3RyaW5nIGNvbnRhaW5pbmcgb25seSBjaGFyYWN0ZXJzIGFu
ZCBTR1IgY29kZXMuCiAgQ2FuIGJlIGRpc3BsYXllZCBieSBzaW1wbHkgZWNo
b2luZyBpdCBpbiBhIHRlcm1pbmFsLgotIF9fZGVzdHJveSgpX18gLSBEZXN0
cm95IHRoZSBzY3JlZW4gb2JqZWN0IGFuZCByZW1vdmUgaXQgZnJvbSB0aGUg
Z2xvYmFsIGxpc3QuCiAgQWxzbyByZW1vdmUgYWxsIGdsb2JhbCBldmVudHMg
cmVsZXZhbnQgdG8gdGhlIHNjcmVlbiBvYmplY3QuIElmIGFsbCBzY3JlZW4K
ICBvYmplY3RzIGFyZSBkZXN0cm95ZWQsIHRoZSBub2RlIHByb2Nlc3MgaXMg
ZXNzZW50aWFsbHkgcmVzZXQgdG8gaXRzIGluaXRpYWwKICBzdGF0ZS4KLSBf
X3NldFRlcm1pbmFsKHRlcm0pX18gLSBSZXNldCB0aGUgdGVybWluYWwgdG8g
YHRlcm1gLiBSZWxvYWRzIHRlcm1pbmZvLgoKCiMjIyMgRWxlbWVudCAoZnJv
bSBOb2RlKQoKVGhlIGJhc2UgZWxlbWVudC4KCiMjIyMjIE9wdGlvbnM6Cgot
IF9fZmcsIGJnLCBib2xkLCB1bmRlcmxpbmVfXyAtIEF0dHJpYnV0ZXMuCi0g
X19zdHlsZV9fIC0gTWF5IGNvbnRhaW4gYXR0cmlidXRlcyBpbiB0aGUgZm9y
bWF0IG9mOgpgYGAganMKICB7CiAgICBmZzogJ2JsdWUnLAogICAgYmc6ICdi
bGFjaycsCiAgICBib3JkZXI6IHsKICAgICAgZmc6ICdibHVlJwogICAgfSwK
ICAgIHNjcm9sbGJhcjogewogICAgICBiZzogJ2JsdWUnCiAgICB9LAogICAg
Zm9jdXM6IHsKICAgICAgYmc6ICdyZWQnCiAgICB9LAogICAgaG92ZXI6IHsK
ICAgICAgYmc6ICdyZWQnCiAgICB9CiAgfQpgYGAKLSBfX2JvcmRlcl9fIC0g
Qm9yZGVyIG9iamVjdCwgc2VlIGJlbG93LgotIF9fY29udGVudF9fIC0gRWxl
bWVudCdzIHRleHQgY29udGVudC4KLSBfX2NsaWNrYWJsZV9fIC0gRWxlbWVu
dCBpcyBjbGlja2FibGUuCi0gX19pbnB1dCwga2V5YWJsZV9fIC0gRWxlbWVu
dCBpcyBmb2N1c2FibGUgYW5kIGNhbiByZWNlaXZlIGtleSBpbnB1dC4KLSBf
X2ZvY3VzZWRfXyAtIEVsZW1lbnQgaXMgZm9jdXNlZC4KLSBfX2hpZGRlbl9f
IC0gV2hldGhlciB0aGUgZWxlbWVudCBpcyBoaWRkZW4uCi0gX19sYWJlbF9f
IC0gQSBzaW1wbGUgdGV4dCBsYWJlbCBmb3IgdGhlIGVsZW1lbnQuCi0gX19o
b3ZlclRleHRfXyAtIEEgZmxvYXRpbmcgdGV4dCBsYWJlbCBmb3IgdGhlIGVs
ZW1lbnQgd2hpY2ggYXBwZWFycyBvbiBtb3VzZW92ZXIuCi0gX19hbGlnbl9f
IC0gVGV4dCBhbGlnbm1lbnQ6IGBsZWZ0YCwgYGNlbnRlcmAsIG9yIGByaWdo
dGAuCi0gX192YWxpZ25fXyAtIFZlcnRpY2FsIHRleHQgYWxpZ25tZW50OiBg
dG9wYCwgYG1pZGRsZWAsIG9yIGBib3R0b21gLgotIF9fc2hyaW5rX18gLSBT
aHJpbmsvZmxleC9ncm93IHRvIGNvbnRlbnQgYW5kIGNoaWxkIGVsZW1lbnRz
LiBXaWR0aC9oZWlnaHQKICBkdXJpbmcgcmVuZGVyLgotIF9fcGFkZGluZ19f
IC0gQW1vdW50IG9mIHBhZGRpbmcgb24gdGhlIGluc2lkZSBvZiB0aGUgZWxl
bWVudC4gQ2FuIGJlIGEgbnVtYmVyCiAgb3IgYW4gb2JqZWN0IGNvbnRhaW5p
bmcgdGhlIHByb3BlcnRpZXM6IGBsZWZ0YCwgYHJpZ2h0YCwgYHRvcGAsIGFu
ZCBgYm90dG9tYC4KLSBfX3dpZHRoLCBoZWlnaHRfXyAtIFdpZHRoL2hlaWdo
dCBvZiB0aGUgZWxlbWVudCwgY2FuIGJlIGEgbnVtYmVyLCBwZXJjZW50YWdl
CiAgKGAwLTEwMCVgKSwgb3Iga2V5d29yZCAoYGhhbGZgIG9yIGBzaHJpbmtg
KS4gUGVyY2VudGFnZXMgY2FuIGFsc28gaGF2ZQogIG9mZnNldHMgKGA1MCUr
MWAsIGA1MCUtMWApLgotIF9fbGVmdCwgcmlnaHQsIHRvcCwgYm90dG9tX18g
LSBPZmZzZXRzIG9mIHRoZSBlbGVtZW50IF9fcmVsYXRpdmUgdG8gaXRzCiAg
cGFyZW50X18uIENhbiBiZSBhIG51bWJlciwgcGVyY2VudGFnZSAoYDAtMTAw
JWApLCBvciBrZXl3b3JkIChgY2VudGVyYCkuCiAgYHJpZ2h0YCBhbmQgYGJv
dHRvbWAgZG8gbm90IGFjY2VwdCBrZXl3b3Jkcy4gUGVyY2VudGFnZXMgY2Fu
IGFsc28gaGF2ZQogIG9mZnNldHMgKGA1MCUrMWAsIGA1MCUtMWApLgotIF9f
cG9zaXRpb25fXyAtIENhbiBjb250YWluIHRoZSBhYm92ZSBvcHRpb25zLgot
IF9fc2Nyb2xsYWJsZV9fIC0gV2hldGhlciB0aGUgZWxlbWVudCBpcyBzY3Jv
bGxhYmxlIG9yIG5vdC4KLSBfX2NoX18gLSBCYWNrZ3JvdW5kIGNoYXJhY3Rl
ciAoZGVmYXVsdCBpcyB3aGl0ZXNwYWNlIGAgYCkuCi0gX19kcmFnZ2FibGVf
XyAtIEFsbG93IHRoZSBlbGVtZW50IHRvIGJlIGRyYWdnZWQgd2l0aCB0aGUg
bW91c2UuCi0gX19zaGFkb3dfXyAtIERyYXcgYSB0cmFuc2x1Y2VudCBvZmZz
ZXQgc2hhZG93IGJlaGluZCB0aGUgZWxlbWVudC4KCiMjIyMjIFByb3BlcnRp
ZXM6CgotIEluaGVyaXRzIGFsbCBmcm9tIE5vZGUuCi0gX19uYW1lX18gLSBO
YW1lIG9mIHRoZSBlbGVtZW50LiBVc2VmdWwgZm9yIGZvcm0gc3VibWlzc2lv
bi4KLSBfX2JvcmRlcl9fIC0gQm9yZGVyIG9iamVjdC4KICAtIF9fdHlwZV9f
IC0gVHlwZSBvZiBib3JkZXIgKGBsaW5lYCBvciBgYmdgKS4gYGJnYCBieSBk
ZWZhdWx0LgogIC0gX19jaF9fIC0gQ2hhcmFjdGVyIHRvIHVzZSBpZiBgYmdg
IHR5cGUsIGRlZmF1bHQgaXMgc3BhY2UuCiAgLSBfX2JnLCBmZ19fIC0gQm9y
ZGVyIGZvcmVncm91bmQgYW5kIGJhY2tncm91bmQsIG11c3QgYmUgbnVtYmVy
cyAoLTEgZm9yCiAgICBkZWZhdWx0KS4KICAtIF9fYm9sZCwgdW5kZXJsaW5l
X18gLSBCb3JkZXIgYXR0cmlidXRlcy4KLSBfX3N0eWxlX18gLSBDb250YWlu
cyBhdHRyaWJ1dGVzIChlLmcuIGBmZy9iZy91bmRlcmxpbmVgKS4gU2VlIGFi
b3ZlLgotIF9fcG9zaXRpb25fXyAtIFJhdyB3aWR0aCwgaGVpZ2h0LCBhbmQg
b2Zmc2V0cy4KLSBfX2NvbnRlbnRfXyAtIFJhdyB0ZXh0IGNvbnRlbnQuCi0g
X19oaWRkZW5fXyAtIFdoZXRoZXIgdGhlIGVsZW1lbnQgaXMgaGlkZGVuIG9y
IG5vdC4KLSBfX3Zpc2libGVfXyAtIFdoZXRoZXIgdGhlIGVsZW1lbnQgaXMg
dmlzaWJsZSBvciBub3QuCi0gX19kZXRhY2hlZF9fIC0gV2hldGhlciB0aGUg
ZWxlbWVudCBpcyBhdHRhY2hlZCB0byBhIHNjcmVlbiBpbiBpdHMgYW5jZXN0
cnkKICBzb21ld2hlcmUuCi0gX19mZywgYmdfXyAtIEZvcmVncm91bmQgYW5k
IGJhY2tncm91bmQsIG11c3QgYmUgbnVtYmVycyAoLTEgZm9yIGRlZmF1bHQp
LgotIF9fYm9sZCwgdW5kZXJsaW5lX18gLSBBdHRyaWJ1dGVzLgotIF9fd2lk
dGhfXyAtIENhbGN1bGF0ZWQgd2lkdGguCi0gX19oZWlnaHRfXyAtIENhbGN1
bGF0ZWQgaGVpZ2h0LgotIF9fbGVmdF9fIC0gQ2FsY3VsYXRlZCByZWxhdGl2
ZSBsZWZ0IG9mZnNldC4KLSBfX3JpZ2h0X18gLSBDYWxjdWxhdGVkIHJlbGF0
aXZlIHJpZ2h0IG9mZnNldC4KLSBfX3RvcF9fIC0gQ2FsY3VsYXRlZCByZWxh
dGl2ZSB0b3Agb2Zmc2V0LgotIF9fYm90dG9tX18gLSBDYWxjdWxhdGVkIHJl
bGF0aXZlIGJvdHRvbSBvZmZzZXQuCi0gX19hbGVmdF9fIC0gQ2FsY3VsYXRl
ZCBhYnNvbHV0ZSBsZWZ0IG9mZnNldC4KLSBfX2FyaWdodF9fIC0gQ2FsY3Vs
YXRlZCBhYnNvbHV0ZSByaWdodCBvZmZzZXQuCi0gX19hdG9wX18gLSBDYWxj
dWxhdGVkIGFic29sdXRlIHRvcCBvZmZzZXQuCi0gX19hYm90dG9tX18gLSBD
YWxjdWxhdGVkIGFic29sdXRlIGJvdHRvbSBvZmZzZXQuCi0gX19kcmFnZ2Fi
bGVfXyAtIFdoZXRoZXIgdGhlIGVsZW1lbnQgaXMgZHJhZ2dhYmxlLiBTZXQg
dG8gdHJ1ZSB0byBhbGxvdwogIGRyYWdnaW5nLgoKIyMjIyMgRXZlbnRzOgoK
LSBJbmhlcml0cyBhbGwgZnJvbSBOb2RlLgotIF9fYmx1ciwgZm9jdXNfXyAt
IFJlY2VpdmVkIHdoZW4gYW4gZWxlbWVudCBpcyBmb2N1c2VkIG9yIHVuZm9j
dXNlZC4KLSBfX21vdXNlX18gLSBSZWNlaXZlZCBvbiBtb3VzZSBldmVudHMg
Zm9yIHRoaXMgZWxlbWVudC4KICAtIF9fbW91c2Vkb3duLCBtb3VzZXVwX18g
LSBNb3VzZSBidXR0b24gd2FzIHByZXNzZWQgb3IgcmVsZWFzZWQuCiAgLSBf
X3doZWVsZG93biwgd2hlZWx1cF9fIC0gV2hlZWwgd2FzIHNjcm9sbGVkIGRv
d24gb3IgdXAuCiAgLSBfX21vdXNlb3ZlciwgbW91c2VvdXRfXyAtIEVsZW1l
bnQgd2FzIGhvdmVyZWQgb3IgdW5ob3ZlcmVkLgogIC0gX19tb3VzZW1vdmVf
XyAtIE1vdXNlIHdhcyBtb3ZlZCBzb21ld2hlcmUgb24gdGhpcyBlbGVtZW50
LgogIC0gX19jbGlja19fIC0gRWxlbWVudCB3YXMgY2xpY2tlZCAoc2xpZ2h0
bHkgc21hcnRlciB0aGFuIG1vdXNldXApLgotIF9fa2V5cHJlc3NfXyAtIFJl
Y2VpdmVkIG9uIGtleSBldmVudHMgZm9yIHRoaXMgZWxlbWVudC4KLSBfX21v
dmVfXyAtIFJlY2VpdmVkIHdoZW4gdGhlIGVsZW1lbnQgaXMgbW92ZWQuCi0g
X19yZXNpemVfXyAtIFJlY2VpdmVkIHdoZW4gdGhlIGVsZW1lbnQgaXMgcmVz
aXplZC4KLSBfX2tleSBbbmFtZV1fXyAtIFJlY2VpdmVkIG9uIGtleSBldmVu
dCBmb3IgW25hbWVdLgotIF9fcHJlcmVuZGVyX18gLSBSZWNlaXZlZCBiZWZv
cmUgYSBjYWxsIHRvIHJlbmRlci4KLSBfX3JlbmRlcl9fIC0gUmVjZWl2ZWQg
YWZ0ZXIgYSBjYWxsIHRvIHJlbmRlci4KLSBfX2hpZGVfXyAtIFJlY2VpdmVk
IHdoZW4gZWxlbWVudCBiZWNvbWVzIGhpZGRlbi4KLSBfX3Nob3dfXyAtIFJl
Y2VpdmVkIHdoZW4gZWxlbWVudCBpcyBzaG93bi4KLSBfX2Rlc3Ryb3lfXyAt
IFJlY2VpdmVkIHdoZW4gZWxlbWVudCBpcyBkZXN0cm95ZWQuCgojIyMjIyBN
ZXRob2RzOgoKLSBJbmhlcml0cyBhbGwgZnJvbSBOb2RlLgotIE5vdGU6IElm
IHRoZSBgc2Nyb2xsYWJsZWAgb3B0aW9uIGlzIGVuYWJsZWQsIEVsZW1lbnQg
aW5oZXJpdHMgYWxsIG1ldGhvZHMKICBmcm9tIFNjcm9sbGFibGVCb3guCi0g
X19yZW5kZXIoKV9fIC0gV3JpdGUgY29udGVudCBhbmQgY2hpbGRyZW4gdG8g
dGhlIHNjcmVlbiBidWZmZXIuCi0gX19oaWRlKClfXyAtIEhpZGUgZWxlbWVu
dC4KLSBfX3Nob3coKV9fIC0gU2hvdyBlbGVtZW50LgotIF9fdG9nZ2xlKClf
XyAtIFRvZ2dsZSBoaWRkZW4vc2hvd24uCi0gX19mb2N1cygpX18gLSBGb2N1
cyBlbGVtZW50LgotIF9fa2V5KG5hbWUsIGxpc3RlbmVyKV9fIC0gQmluZCBh
IGtleXByZXNzIGxpc3RlbmVyIGZvciBhIHNwZWNpZmljIGtleS4KLSBfX29u
Y2VLZXkobmFtZSwgbGlzdGVuZXIpX18gLSBCaW5kIGEga2V5cHJlc3MgbGlz
dGVuZXIgZm9yIGEgc3BlY2lmaWMga2V5CiAgb25jZS4KLSBfX3Vua2V5KG5h
bWUsIGxpc3RlbmVyKV9fIC0gUmVtb3ZlIGEga2V5cHJlc3MgbGlzdGVuZXIg
Zm9yIGEgc3BlY2lmaWMga2V5LgotIF9fb25TY3JlZW5FdmVudCh0eXBlLCBo
YW5kbGVyKV9fIC0gU2FtZSBhc2BlbC5vbignc2NyZWVuJywgLi4uKWAgZXhj
ZXB0IHRoaXMKICB3aWxsIGF1dG9tYXRpY2FsbHkga2VlcCB0cmFjayBvZiB3
aGljaCBsaXN0ZW5lcnMgYXJlIGJvdW5kIHRvIHRoZSBzY3JlZW4KICBvYmpl
Y3QuIEZvciB1c2Ugd2l0aCBgcmVtb3ZlU2NyZWVuRXZlbnQoKWAsIGBmcmVl
KClgLCBhbmQgYGRlc3Ryb3koKWAuCi0gX19yZW1vdmVTY3JlZW5FdmVudCh0
eXBlLCBoYW5kbGVyKV9fIC0gU2FtZSBhc2BlbC5yZW1vdmVMaXN0ZW5lcign
c2NyZWVuJywKICAuLi4pYCBleGNlcHQgdGhpcyB3aWxsIGF1dG9tYXRpY2Fs
bHkga2VlcCB0cmFjayBvZiB3aGljaCBsaXN0ZW5lcnMgYXJlIGJvdW5kCiAg
dG8gdGhlIHNjcmVlbiBvYmplY3QuIEZvciB1c2Ugd2l0aCBgb25TY3JlZW5F
dmVudCgpYCwgYGZyZWUoKWAsIGFuZAogIGBkZXN0cm95KClgLgotIF9fZnJl
ZSgpX18gLSBGcmVlIHVwIHRoZSBlbGVtZW50LiBBdXRvbWF0aWNhbGx5IHVu
YmluZCBhbGwgZXZlbnRzIHRoYXQgbWF5CiAgaGF2ZSBiZWVuIGJvdW5kIHRv
IHRoZSBzY3JlZW4gb2JqZWN0LiBUaGlzIHByZXZlbnRzIG1lbW9yeSBsZWFr
cy4gRm9yIHVzZQogIHdpdGggYG9uU2NyZWVuRXZlbnQoKWAsIGByZW1vdmVT
Y3JlZW5FdmVudCgpYCwgYW5kIGBkZXN0cm95KClgLgotIF9fZGVzdHJveSgp
X18gLSBTYW1lIGFzIHRoZSBgZGV0YWNoKClgIG1ldGhvZCwgZXhjZXB0IHRo
aXMgd2lsbCBhdXRvbWF0aWNhbGx5CiAgY2FsbCBgZnJlZSgpYCBhbmQgdW5i
aW5kIGFueSBzY3JlZW4gZXZlbnRzIHRvIHByZXZlbnQgbWVtb3J5IGxlYWtz
LiAgZm9yIHVzZQogIHdpdGggYG9uU2NyZWVuRXZlbnQoKWAsIGByZW1vdmVT
Y3JlZW5FdmVudCgpYCwgYW5kIGBmcmVlKClgLgotIF9fc2V0SW5kZXgoeilf
XyAtIFNldCB0aGUgei1pbmRleCBvZiB0aGUgZWxlbWVudCAoY2hhbmdlcyBy
ZW5kZXJpbmcgb3JkZXIpLgotIF9fc2V0RnJvbnQoKV9fIC0gUHV0IHRoZSBl
bGVtZW50IGluIGZyb250IG9mIGl0cyBzaWJsaW5ncy4KLSBfX3NldEJhY2so
KV9fIC0gUHV0IHRoZSBlbGVtZW50IGluIGJhY2sgb2YgaXRzIHNpYmxpbmdz
LgotIF9fc2V0TGFiZWwodGV4dC9vcHRpb25zKV9fIC0gU2V0IHRoZSBsYWJl
bCB0ZXh0IGZvciB0aGUgdG9wLWxlZnQgY29ybmVyLgogIEV4YW1wbGUgb3B0
aW9uczogYHt0ZXh0Oidmb28nLHNpZGU6J2xlZnQnfWAKLSBfX3JlbW92ZUxh
YmVsKClfXyAtIFJlbW92ZSB0aGUgbGFiZWwgY29tcGxldGVseS4KLSBfX3Nl
dEhvdmVyKHRleHQvb3B0aW9ucylfXyAtIFNldCBhIGhvdmVyIHRleHQgYm94
IHRvIGZvbGxvdyB0aGUgY3Vyc29yLgogIFNpbWlsYXIgdG8gdGhlICJ0aXRs
ZSIgRE9NIGF0dHJpYnV0ZSBpbiB0aGUgYnJvd3Nlci4KICBFeGFtcGxlIG9w
dGlvbnM6IGB7dGV4dDonZm9vJ31gCi0gX19yZW1vdmVIb3ZlcigpX18gLSBS
ZW1vdmUgdGhlIGhvdmVyIGxhYmVsIGNvbXBsZXRlbHkuCi0gX19lbmFibGVN
b3VzZSgpX18gLSBFbmFibGUgbW91c2UgZXZlbnRzIGZvciB0aGUgZWxlbWVu
dCAoYXV0b21hdGljYWxseSBjYWxsZWQKICB3aGVuIGEgZm9ybSBvZiBvbign
bW91c2UnKSBpcyBib3VuZCkuCi0gX19lbmFibGVLZXlzKClfXyAtIEVuYWJs
ZSBrZXlwcmVzcyBldmVudHMgZm9yIHRoZSBlbGVtZW50IChhdXRvbWF0aWNh
bGx5CiAgY2FsbGVkIHdoZW4gYSBmb3JtIG9mIG9uKCdrZXlwcmVzcycpIGlz
IGJvdW5kKS4KLSBfX2VuYWJsZUlucHV0KClfXyAtIEVuYWJsZSBrZXkgYW5k
IG1vdXNlIGV2ZW50cy4gQ2FsbHMgYm90IGVuYWJsZU1vdXNlIGFuZAogIGVu
YWJsZUtleXMuCi0gX19lbmFibGVEcmFnKClfXyAtIEVuYWJsZSBkcmFnZ2lu
ZyBvZiB0aGUgZWxlbWVudC4KLSBfX2Rpc2FibGVEcmFnKClfXyAtIERpc2Fi
bGUgZHJhZ2dpbmcgb2YgdGhlIGVsZW1lbnQuCi0gX19zY3JlZW5zaG90KFt4
aSwgeGwsIHlpLCB5bF0pX18gLSBUYWtlIGFuIFNHUiBzY3JlZW5zaG90IG9m
IHRoZSBlbGVtZW50CiAgd2l0aGluIHRoZSByZWdpb24uIFJldHVybnMgYSBz
dHJpbmcgY29udGFpbmluZyBvbmx5IGNoYXJhY3RlcnMgYW5kIFNHUiBjb2Rl
cy4KICBDYW4gYmUgZGlzcGxheWVkIGJ5IHNpbXBseSBlY2hvaW5nIGl0IGlu
IGEgdGVybWluYWwuCgojIyMjIyMgQ29udGVudCBNZXRob2RzCgpNZXRob2Rz
IGZvciBkZWFsaW5nIHdpdGggdGV4dCBjb250ZW50LCBsaW5lIGJ5IGxpbmUu
IFVzZWZ1bCBmb3Igd3JpdGluZyBhCnRleHQgZWRpdG9yLCBpcmMgY2xpZW50
LCBldGMuCgpOb3RlOiBBbGwgb2YgdGhlc2UgbWV0aG9kcyBkZWFsIHdpdGgg
cHJlLWFsaWduZWQsIHByZS13cmFwcGVkIHRleHQuIElmIHlvdSB1c2UKZGVs
ZXRlVG9wKCkgb24gYSBib3ggd2l0aCBhIHdyYXBwZWQgbGluZSBhdCB0aGUg
dG9wLCBpdCBtYXkgcmVtb3ZlIDMtNCAicmVhbCIKbGluZXMgKHJvd3MpIGRl
cGVuZGluZyBvbiBob3cgbG9uZyB0aGUgb3JpZ2luYWwgbGluZSB3YXMuCgpU
aGUgYGxpbmVzYCBwYXJhbWV0ZXIgY2FuIGJlIGEgc3RyaW5nIG9yIGFuIGFy
cmF5IG9mIHN0cmluZ3MuIFRoZSBgbGluZWAKcGFyYW1ldGVyIG11c3QgYmUg
YSBzdHJpbmcuCgotIF9fc2V0Q29udGVudCh0ZXh0KV9fIC0gU2V0IHRoZSBj
b250ZW50LiBOb3RlOiBXaGVuIHRleHQgaXMgaW5wdXQsIGl0IHdpbGwgYmUK
ICBzdHJpcHBlZCBvZiBhbGwgbm9uLVNHUiBlc2NhcGUgY29kZXMsIHRhYnMg
d2lsbCBiZSByZXBsYWNlZCB3aXRoIDggc3BhY2VzLAogIGFuZCB0YWdzIHdp
bGwgYmUgcmVwbGFjZWQgd2l0aCBTR1IgY29kZXMgKGlmIGVuYWJsZWQpLgot
IF9fZ2V0Q29udGVudCgpX18gLSBSZXR1cm4gY29udGVudCwgc2xpZ2h0bHkg
ZGlmZmVyZW50IGZyb20gYGVsLmNvbnRlbnRgLgogIEFzc3VtZSB0aGUgYWJv
dmUgZm9ybWF0dGluZy4KLSBfX3NldFRleHQodGV4dClfXyAtIFNpbWlsYXIg
dG8gYHNldENvbnRlbnRgLCBidXQgaWdub3JlIHRhZ3MgYW5kIHJlbW92ZSBl
c2NhcGUKICBjb2Rlcy4KLSBfX2dldFRleHQoKV9fIC0gU2ltaWxhciB0byBg
Z2V0Q29udGVudGAsIGJ1dCByZXR1cm4gY29udGVudCB3aXRoIHRhZ3MgYW5k
CiAgZXNjYXBlIGNvZGVzIHJlbW92ZWQuCi0gX19pbnNlcnRMaW5lKGksIGxp
bmVzKV9fIC0gSW5zZXJ0IGEgbGluZSBpbnRvIHRoZSBib3gncyBjb250ZW50
LgotIF9fZGVsZXRlTGluZShpKV9fIC0gRGVsZXRlIGEgbGluZSBmcm9tIHRo
ZSBib3gncyBjb250ZW50LgotIF9fZ2V0TGluZShpKV9fIC0gR2V0IGEgbGlu
ZSBmcm9tIHRoZSBib3gncyBjb250ZW50LgotIF9fZ2V0QmFzZUxpbmUoaSlf
XyAtIEdldCBhIGxpbmUgZnJvbSB0aGUgYm94J3MgY29udGVudCBmcm9tIHRo
ZSB2aXNpYmxlIHRvcC4KLSBfX3NldExpbmUoaSwgbGluZSlfXyAtIFNldCBh
IGxpbmUgaW4gdGhlIGJveCdzIGNvbnRlbnQuCi0gX19zZXRCYXNlTGluZShp
LCBsaW5lKV9fIC0gU2V0IGEgbGluZSBpbiB0aGUgYm94J3MgY29udGVudCBm
cm9tIHRoZSB2aXNpYmxlCiAgdG9wLgotIF9fY2xlYXJMaW5lKGkpX18gLSBD
bGVhciBhIGxpbmUgZnJvbSB0aGUgYm94J3MgY29udGVudC4KLSBfX2NsZWFy
QmFzZUxpbmUoaSlfXyAtIENsZWFyIGEgbGluZSBmcm9tIHRoZSBib3gncyBj
b250ZW50IGZyb20gdGhlIHZpc2libGUKICB0b3AuCi0gX19pbnNlcnRUb3Ao
bGluZXMpX18gLSBJbnNlcnQgYSBsaW5lIGF0IHRoZSB0b3Agb2YgdGhlIGJv
eC4KLSBfX2luc2VydEJvdHRvbShsaW5lcylfXyAtIEluc2VydCBhIGxpbmUg
YXQgdGhlIGJvdHRvbSBvZiB0aGUgYm94LgotIF9fZGVsZXRlVG9wKClfXyAt
IERlbGV0ZSBhIGxpbmUgYXQgdGhlIHRvcCBvZiB0aGUgYm94LgotIF9fZGVs
ZXRlQm90dG9tKClfXyAtIERlbGV0ZSBhIGxpbmUgYXQgdGhlIGJvdHRvbSBv
ZiB0aGUgYm94LgotIF9fdW5zaGlmdExpbmUobGluZXMpX18gLSBVbnNoaWZ0
IGEgbGluZSBvbnRvIHRoZSB0b3Agb2YgdGhlIGNvbnRlbnQuCi0gX19zaGlm
dExpbmUoaSlfXyAtIFNoaWZ0IGEgbGluZSBvZmYgdGhlIHRvcCBvZiB0aGUg
Y29udGVudC4KLSBfX3B1c2hMaW5lKGxpbmVzKV9fIC0gUHVzaCBhIGxpbmUg
b250byB0aGUgYm90dG9tIG9mIHRoZSBjb250ZW50LgotIF9fcG9wTGluZShp
KV9fIC0gUG9wIGEgbGluZSBvZmYgdGhlIGJvdHRvbSBvZiB0aGUgY29udGVu
dC4KLSBfX2dldExpbmVzKClfXyAtIEFuIGFycmF5IGNvbnRhaW5pbmcgdGhl
IGNvbnRlbnQgbGluZXMuCi0gX19nZXRTY3JlZW5MaW5lcygpX18gLSBBbiBh
cnJheSBjb250YWluaW5nIHRoZSBsaW5lcyBhcyB0aGV5IGFyZSBkaXNwbGF5
ZWQgb24KICB0aGUgc2NyZWVuLgotIF9fc3RyV2lkdGgodGV4dClfXyAtIEdl
dCBhIHN0cmluZydzIGRpc3BsYXllZCB3aWR0aCwgdGFraW5nIGludG8gYWNj
b3VudAogIGRvdWJsZS13aWR0aCwgc3Vycm9nYXRlIHBhaXJzLCBjb21iaW5p
bmcgY2hhcmFjdGVycywgdGFncywgYW5kIFNHUiBlc2NhcGUKICBjb2Rlcy4K
CgojIyMgQm94ZXMKCgojIyMjIEJveCAoZnJvbSBFbGVtZW50KQoKQSBib3gg
ZWxlbWVudCB3aGljaCBkcmF3cyBhIHNpbXBsZSBib3ggY29udGFpbmluZyBg
Y29udGVudGAgb3Igb3RoZXIgZWxlbWVudHMuCgojIyMjIyBPcHRpb25zOgoK
LSBJbmhlcml0cyBhbGwgZnJvbSBFbGVtZW50LgoKIyMjIyMgUHJvcGVydGll
czoKCi0gSW5oZXJpdHMgYWxsIGZyb20gRWxlbWVudC4KCiMjIyMjIEV2ZW50
czoKCi0gSW5oZXJpdHMgYWxsIGZyb20gRWxlbWVudC4KCiMjIyMjIE1ldGhv
ZHM6CgotIEluaGVyaXRzIGFsbCBmcm9tIEVsZW1lbnQuCgoKIyMjIyBUZXh0
IChmcm9tIEVsZW1lbnQpCgpBbiBlbGVtZW50IHNpbWlsYXIgdG8gQm94LCBi
dXQgZ2VhcmVkIHRvd2FyZHMgcmVuZGVyaW5nIHNpbXBsZSB0ZXh0IGVsZW1l
bnRzLgoKIyMjIyMgT3B0aW9uczoKCi0gSW5oZXJpdHMgYWxsIGZyb20gRWxl
bWVudC4KLSBfX2ZpbGxfXyAtIEZpbGwgdGhlIGVudGlyZSBsaW5lIHdpdGgg
Y2hvc2VuIGJnIHVudGlsIHBhcmVudCBiZyBlbmRzLCBldmVuIGlmCiAgdGhl
cmUgaXMgbm90IGVub3VnaCB0ZXh0IHRvIGZpbGwgdGhlIGVudGlyZSB3aWR0
aC4gX18oZGVwcmVjYXRlZClfXwotIF9fYWxpZ25fXyAtIFRleHQgYWxpZ25t
ZW50OiBgbGVmdGAsIGBjZW50ZXJgLCBvciBgcmlnaHRgLgoKSW5oZXJpdHMg
YWxsIG9wdGlvbnMsIHByb3BlcnRpZXMsIGV2ZW50cywgYW5kIG1ldGhvZHMg
ZnJvbSBFbGVtZW50LgoKCiMjIyMgTGluZSAoZnJvbSBCb3gpCgpBIHNpbXBs
ZSBsaW5lIHdoaWNoIGNhbiBiZSBgbGluZWAgb3IgYGJnYCBzdHlsZWQuCgoj
IyMjIyBPcHRpb25zOgoKLSBJbmhlcml0cyBhbGwgZnJvbSBCb3guCi0gX19v
cmllbnRhdGlvbl9fIC0gQ2FuIGJlIGB2ZXJ0aWNhbGAgb3IgYGhvcml6b250
YWxgLgotIF9fdHlwZSwgYmcsIGZnLCBjaF9fIC0gVHJlYXRlZCB0aGUgc2Ft
ZSBhcyBhIGJvcmRlciBvYmplY3QuCiAgKGF0dHJpYnV0ZXMgY2FuIGJlIGNv
bnRhaW5lZCBpbiBgc3R5bGVgKS4KCkluaGVyaXRzIGFsbCBvcHRpb25zLCBw
cm9wZXJ0aWVzLCBldmVudHMsIGFuZCBtZXRob2RzIGZyb20gQm94LgoKCiMj
IyMgU2Nyb2xsYWJsZUJveCAoZnJvbSBCb3gpCgpfX0RFUFJFQ0FURURfXyAt
IFVzZSBCb3ggd2l0aCB0aGUgYHNjcm9sbGFibGVgIG9wdGlvbiBpbnN0ZWFk
LgoKQSBib3ggd2l0aCBzY3JvbGxhYmxlIGNvbnRlbnQuCgojIyMjIyBPcHRp
b25zOgoKLSBJbmhlcml0cyBhbGwgZnJvbSBCb3guCi0gX19iYXNlTGltaXRf
XyAtIEEgbGltaXQgdG8gdGhlIGNoaWxkQmFzZS4gRGVmYXVsdCBpcyBgSW5m
aW5pdHlgLgotIF9fYWx3YXlzU2Nyb2xsX18gLSBBIG9wdGlvbiB3aGljaCBj
YXVzZXMgdGhlIGlnbm9yaW5nIG9mIGBjaGlsZE9mZnNldGAuIFRoaXMKICBp
biB0dXJuIGNhdXNlcyB0aGUgY2hpbGRCYXNlIHRvIGNoYW5nZSBldmVyeSB0
aW1lIHRoZSBlbGVtZW50IGlzIHNjcm9sbGVkLgotIF9fc2Nyb2xsYmFyX18g
LSBPYmplY3QgZW5hYmxpbmcgYSBzY3JvbGxiYXIuCi0gX19zY3JvbGxiYXIu
c3R5bGVfXyAtIFN0eWxlIG9mIHRoZSBzY3JvbGxiYXIuCi0gX19zY3JvbGxi
YXIudHJhY2tfXyAtIFN0eWxlIG9mIHRoZSBzY3JvbGxiYXIgdHJhY2sgaWYg
cHJlc2VudCAodGFrZXMgcmVndWxhcgogIHN0eWxlIG9wdGlvbnMpLgoKIyMj
IyMgUHJvcGVydGllczoKCi0gSW5oZXJpdHMgYWxsIGZyb20gQm94LgotIF9f
Y2hpbGRCYXNlX18gLSBUaGUgb2Zmc2V0IG9mIHRoZSB0b3Agb2YgdGhlIHNj
cm9sbCBjb250ZW50LgotIF9fY2hpbGRPZmZzZXRfXyAtIFRoZSBvZmZzZXQg
b2YgdGhlIGNob3NlbiBpdGVtL2xpbmUuCgojIyMjIyBFdmVudHM6CgotIElu
aGVyaXRzIGFsbCBmcm9tIEJveC4KLSBfX3Njcm9sbF9fIC0gUmVjZWl2ZWQg
d2hlbiB0aGUgZWxlbWVudCBpcyBzY3JvbGxlZC4KCiMjIyMjIE1ldGhvZHM6
CgotIF9fc2Nyb2xsKG9mZnNldClfXyAtIFNjcm9sbCB0aGUgY29udGVudCBi
eSBhIHJlbGF0aXZlIG9mZnNldC4KLSBfX3Njcm9sbFRvKGluZGV4KV9fIC0g
U2Nyb2xsIHRoZSBjb250ZW50IHRvIGFuIGFic29sdXRlIGluZGV4LgotIF9f
c2V0U2Nyb2xsKGluZGV4KV9fIC0gU2FtZSBhcyBgc2Nyb2xsVG9gLgotIF9f
c2V0U2Nyb2xsUGVyYyhwZXJjKV9fIC0gU2V0IHRoZSBjdXJyZW50IHNjcm9s
bCBpbmRleCBpbiBwZXJjZW50YWdlICgwLTEwMCkuCi0gX19nZXRTY3JvbGwo
KV9fIC0gR2V0IHRoZSBjdXJyZW50IHNjcm9sbCBpbmRleCBpbiBsaW5lcy4K
LSBfX2dldFNjcm9sbEhlaWdodCgpX18gLSBHZXQgdGhlIGFjdHVhbCBoZWln
aHQgb2YgdGhlIHNjcm9sbGluZyBhcmVhLgotIF9fZ2V0U2Nyb2xsUGVyYygp
X18gLSBHZXQgdGhlIGN1cnJlbnQgc2Nyb2xsIGluZGV4IGluIHBlcmNlbnRh
Z2UuCi0gX19yZXNldFNjcm9sbCgpX18gLSBSZXNldCB0aGUgc2Nyb2xsIGlu
ZGV4IHRvIGl0cyBpbml0aWFsIHN0YXRlLgoKCiMjIyMgU2Nyb2xsYWJsZVRl
eHQgKGZyb20gU2Nyb2xsYWJsZUJveCkKCl9fREVQUkVDQVRFRF9fIC0gVXNl
IEJveCB3aXRoIHRoZSBgc2Nyb2xsYWJsZWAgYW5kIGBhbHdheXNTY3JvbGxg
IG9wdGlvbnMKaW5zdGVhZC4KCkEgc2Nyb2xsYWJsZSB0ZXh0IGJveCB3aGlj
aCBjYW4gZGlzcGxheSBhbmQgc2Nyb2xsIHRleHQsIGFzIHdlbGwgYXMgaGFu
ZGxlCnByZS1leGlzdGluZyBuZXdsaW5lcyBhbmQgZXNjYXBlIGNvZGVzLgoK
IyMjIyMgT3B0aW9uczoKCi0gSW5oZXJpdHMgYWxsIGZyb20gU2Nyb2xsYWJs
ZUJveC4KLSBfX21vdXNlX18gLSBXaGV0aGVyIHRvIGVuYWJsZSBhdXRvbWF0
aWMgbW91c2Ugc3VwcG9ydCBmb3IgdGhpcyBlbGVtZW50LgotIF9fa2V5c19f
IC0gVXNlIHByZWRlZmluZWQga2V5cyBmb3IgbmF2aWdhdGluZyB0aGUgdGV4
dC4KLSBfX3ZpX18gLSBVc2Ugdmkga2V5cyB3aXRoIHRoZSBga2V5c2Agb3B0
aW9uLgoKIyMjIyMgUHJvcGVydGllczoKCi0gSW5oZXJpdHMgYWxsIGZyb20g
U2Nyb2xsYWJsZUJveC4KCiMjIyMjIEV2ZW50czoKCi0gSW5oZXJpdHMgYWxs
IGZyb20gU2Nyb2xsYWJsZUJveC4KCiMjIyMjIE1ldGhvZHM6CgotIEluaGVy
aXRzIGFsbCBmcm9tIFNjcm9sbGFibGVCb3guCgoKIyMjIyBCaWdUZXh0IChm
cm9tIEJveCkKCkEgYm94IHdoaWNoIGNhbiByZW5kZXIgY29udGVudCBkcmF3
biBhcyA4eDE0IGNlbGwgY2hhcmFjdGVycyB1c2luZyB0aGUgdGVybWludXMK
Zm9udC4KCiMjIyMjIE9wdGlvbnM6CgotIEluaGVyaXRzIGFsbCBmcm9tIEJv
eC4KLSBfX2ZvbnRfXyAtIGJkZi0+anNvbiBmb250IGZpbGUgdG8gdXNlIChz
ZWUgW3R0eXN0dWRpb11bdHR5c3R1ZGlvXSBmb3IKICBpbnN0cnVjdGlvbnMg
b24gY29tcGlsaW5nIEJERnMgdG8gSlNPTikuCi0gX19mb250Qm9sZF9fIC0g
YmRmLT5qc29uIGJvbGQgZm9udCBmaWxlIHRvIHVzZSAoc2VlIFt0dHlzdHVk
aW9dW3R0eXN0dWRpb10KICBmb3IgaW5zdHJ1Y3Rpb25zIG9uIGNvbXBpbGlu
ZyBCREZzIHRvIEpTT04pLgotIF9fZmNoX18gLSBmb3JlZ3JvdW5kIGNoYXJh
Y3Rlci4gKGRlZmF1bHQ6IGAnICdgKQoKIyMjIyMgUHJvcGVydGllczoKCi0g
SW5oZXJpdHMgYWxsIGZyb20gQm94LgoKIyMjIyMgRXZlbnRzOgoKLSBJbmhl
cml0cyBhbGwgZnJvbSBCb3guCgojIyMjIyBNZXRob2RzOgoKLSBJbmhlcml0
cyBhbGwgZnJvbSBCb3guCgoKIyMjIExpc3RzCgoKIyMjIyBMaXN0IChmcm9t
IEJveCkKCkEgc2Nyb2xsYWJsZSBsaXN0IHdoaWNoIGNhbiBkaXNwbGF5IHNl
bGVjdGFibGUgaXRlbXMuCgojIyMjIyBPcHRpb25zOgoKLSBJbmhlcml0cyBh
bGwgZnJvbSBCb3guCi0gX19zdHlsZS5zZWxlY3RlZF9fIC0gU3R5bGUgZm9y
IGEgc2VsZWN0ZWQgaXRlbS4KLSBfX3N0eWxlLml0ZW1fXyAtIFN0eWxlIGZv
ciBhbiB1bnNlbGVjdGVkIGl0ZW0uCi0gX19tb3VzZV9fIC0gV2hldGhlciB0
byBhdXRvbWF0aWNhbGx5IGVuYWJsZSBtb3VzZSBzdXBwb3J0IGZvciB0aGlz
IGxpc3QKICAoYWxsb3dzIGNsaWNraW5nIGl0ZW1zKS4KLSBfX2tleXNfXyAt
IFVzZSBwcmVkZWZpbmVkIGtleXMgZm9yIG5hdmlnYXRpbmcgdGhlIGxpc3Qu
Ci0gX192aV9fIC0gVXNlIHZpIGtleXMgd2l0aCB0aGUgYGtleXNgIG9wdGlv
bi4KLSBfX2l0ZW1zX18gLSBBbiBhcnJheSBvZiBzdHJpbmdzIHdoaWNoIGJl
Y29tZSB0aGUgbGlzdCdzIGl0ZW1zLgotIF9fc2VhcmNoX18gLSBBIGZ1bmN0
aW9uIHRoYXQgaXMgY2FsbGVkIHdoZW4gYHZpYCBtb2RlIGlzIGVuYWJsZWQg
YW5kIHRoZSBrZXkKICBgL2AgaXMgcHJlc3NlZC4gVGhpcyBmdW5jdGlvbiBh
Y2NlcHRzIGEgY2FsbGJhY2sgZnVuY3Rpb24gd2hpY2ggc2hvdWxkIGJlCiAg
Y2FsbGVkIHdpdGggdGhlIHNlYXJjaCBzdHJpbmcuIFRoZSBzZWFyY2ggc3Ry
aW5nIGlzIHRoZW4gdXNlZCB0byBqdW1wIHRvIGFuCiAgaXRlbSB0aGF0IGlz
IGZvdW5kIGluIGBpdGVtc2AuCi0gX19pbnRlcmFjdGl2ZV9fIC0gV2hldGhl
ciB0aGUgbGlzdCBpcyBpbnRlcmFjdGl2ZSBhbmQgY2FuIGhhdmUgaXRlbXMg
c2VsZWN0ZWQKICAoRGVmYXVsdDogdHJ1ZSkuCi0gX19pbnZlcnRTZWxlY3Rl
ZF9fIC0gV2hldGhlciB0byBhdXRvbWF0aWNhbGx5IG92ZXJyaWRlIHRhZ3Mg
YW5kIGludmVydCBmZyBvZgogIGl0ZW0gd2hlbiBzZWxlY3RlZCAoRGVmYXVs
dDogYHRydWVgKS4KCiMjIyMjIFByb3BlcnRpZXM6CgotIEluaGVyaXRzIGFs
bCBmcm9tIEJveC4KCiMjIyMjIEV2ZW50czoKCi0gSW5oZXJpdHMgYWxsIGZy
b20gQm94LgotIF9fc2VsZWN0X18gLSBSZWNlaXZlZCB3aGVuIGFuIGl0ZW0g
aXMgc2VsZWN0ZWQuCi0gX19jYW5jZWxfXyAtIExpc3Qgd2FzIGNhbmNlbGVk
ICh3aGVuIGBlc2NgIGlzIHByZXNzZWQgd2l0aCB0aGUgYGtleXNgIG9wdGlv
bikuCi0gX19hY3Rpb25fXyAtIEVpdGhlciBhIHNlbGVjdCBvciBhIGNhbmNl
bCBldmVudCB3YXMgcmVjZWl2ZWQuCgojIyMjIyBNZXRob2RzOgoKLSBJbmhl
cml0cyBhbGwgZnJvbSBCb3guCi0gX19hZGQvYWRkSXRlbSh0ZXh0KV9fIC0g
QWRkIGFuIGl0ZW0gYmFzZWQgb24gYSBzdHJpbmcuCi0gX19yZW1vdmVJdGVt
KGNoaWxkKV9fIC0gUmVtb3ZlcyBhbiBpdGVtIGZyb20gdGhlIGxpc3QuIENo
aWxkIGNhbiBiZSBhbgogIGVsZW1lbnQsIGluZGV4LCBvciBzdHJpbmcuCi0g
X19wdXNoSXRlbShjaGlsZClfXyAtIFB1c2ggYW4gaXRlbSBvbnRvIHRoZSBs
aXN0LgotIF9fcG9wSXRlbSgpX18gLSBQb3AgYW4gaXRlbSBvZmYgdGhlIGxp
c3QuCi0gX191bnNoaWZ0SXRlbShjaGlsZClfXyAtIFVuc2hpZnQgYW4gaXRl
bSBvbnRvIHRoZSBsaXN0LgotIF9fc2hpZnRJdGVtKClfXyAtIFNoaWZ0IGFu
IGl0ZW0gb2ZmIHRoZSBsaXN0LgotIF9faW5zZXJ0SXRlbShpLCBjaGlsZClf
XyAtIEluc2VydHMgYW4gaXRlbSB0byB0aGUgbGlzdC4gQ2hpbGQgY2FuIGJl
IGFuCiAgZWxlbWVudCwgaW5kZXgsIG9yIHN0cmluZy4KLSBfX2dldEl0ZW0o
Y2hpbGQpX18gLSBSZXR1cm5zIHRoZSBpdGVtIGVsZW1lbnQuIENoaWxkIGNh
biBiZSBhbiBlbGVtZW50LAogIGluZGV4LCBvciBzdHJpbmcuCi0gX19zZXRJ
dGVtKGNoaWxkLCBjb250ZW50KV9fIC0gU2V0IGl0ZW0gdG8gY29udGVudC4K
LSBfX3NwbGljZUl0ZW0oaSwgbiwgaXRlbTEsIC4uLilfXyAtIFJlbW92ZSBh
bmQgaW5zZXJ0IGl0ZW1zIHRvIHRoZSBsaXN0LgotIF9fY2xlYXJJdGVtcygp
X18gLSBDbGVhcnMgYWxsIGl0ZW1zIGZyb20gdGhlIGxpc3QuCi0gX19zZXRJ
dGVtcyhpdGVtcylfXyAtIFNldHMgdGhlIGxpc3QgaXRlbXMgdG8gbXVsdGlw
bGUgc3RyaW5ncy4KLSBfX2dldEl0ZW1JbmRleChjaGlsZClfXyAtIFJldHVy
bnMgdGhlIGl0ZW0gaW5kZXggZnJvbSB0aGUgbGlzdC4gQ2hpbGQgY2FuIGJl
CiAgYW4gZWxlbWVudCwgaW5kZXgsIG9yIHN0cmluZy4KLSBfX3NlbGVjdChp
bmRleClfXyAtIFNlbGVjdCBhbiBpbmRleCBvZiBhbiBpdGVtLgotIF9fbW92
ZShvZmZzZXQpX18gLSBTZWxlY3QgaXRlbSBiYXNlZCBvbiBjdXJyZW50IG9m
ZnNldC4KLSBfX3VwKGFtb3VudClfXyAtIFNlbGVjdCBpdGVtIGFib3ZlIHNl
bGVjdGVkLgotIF9fZG93bihhbW91bnQpX18gLSBTZWxlY3QgaXRlbSBiZWxv
dyBzZWxlY3RlZC4KLSBfX3BpY2soY2FsbGJhY2spX18gLSBTaG93L2ZvY3Vz
IGxpc3QgYW5kIHBpY2sgYW4gaXRlbS4gVGhlIGNhbGxiYWNrIGlzCiAgZXhl
Y3V0ZWQgd2l0aCB0aGUgcmVzdWx0LgotIF9fZnV6enlGaW5kKFtzdHJpbmcv
cmVnZXgvY2FsbGJhY2tdKV9fIC0gRmluZCBhbiBpdGVtIGJhc2VkIG9uIGl0
cyB0ZXh0CiAgY29udGVudC4KCgojIyMjIEZpbGVNYW5hZ2VyIChmcm9tIExp
c3QpCgpBIHZlcnkgc2ltcGxlIGZpbGUgbWFuYWdlciBmb3Igc2VsZWN0aW5n
IGZpbGVzLgoKIyMjIyMgT3B0aW9uczoKCi0gSW5oZXJpdHMgYWxsIGZyb20g
TGlzdC4KLSBfX2N3ZF9fIC0gQ3VycmVudCB3b3JraW5nIGRpcmVjdG9yeS4K
CiMjIyMjIFByb3BlcnRpZXM6CgotIEluaGVyaXRzIGFsbCBmcm9tIExpc3Qu
Ci0gX19jd2RfXyAtIEN1cnJlbnQgd29ya2luZyBkaXJlY3RvcnkuCgojIyMj
IyBFdmVudHM6CgotIEluaGVyaXRzIGFsbCBmcm9tIExpc3QuCi0gX19jZF9f
IC0gRGlyZWN0b3J5IHdhcyBzZWxlY3RlZCBhbmQgbmF2aWdhdGVkIHRvLgot
IF9fZmlsZV9fIC0gRmlsZSB3YXMgc2VsZWN0ZWQuCgojIyMjIyBNZXRob2Rz
OgoKLSBJbmhlcml0cyBhbGwgZnJvbSBMaXN0LgotIF9fcmVmcmVzaChbY3dk
XSwgW2NhbGxiYWNrXSlfXyAtIFJlZnJlc2ggdGhlIGZpbGUgbGlzdCAocGVy
Zm9ybSBhIGByZWFkZGlyYCBvbiBgY3dkYAogIGFuZCB1cGRhdGUgdGhlIGxp
c3QgaXRlbXMpLgotIF9fcGljayhbY3dkXSwgY2FsbGJhY2spX18gLSBQaWNr
IGEgc2luZ2xlIGZpbGUgYW5kIHJldHVybiB0aGUgcGF0aCBpbiB0aGUgY2Fs
bGJhY2suCi0gX19yZXNldChbY3dkXSwgW2NhbGxiYWNrXSlfXyAtIFJlc2V0
IGJhY2sgdG8gb3JpZ2luYWwgY3dkLgoKCiMjIyMgTGlzdFRhYmxlIChmcm9t
IExpc3QpCgpBIHN0eWxpemVkIHRhYmxlIG9mIHRleHQgZWxlbWVudHMgd2l0
aCBhIGxpc3QuCgojIyMjIyBPcHRpb25zOgoKLSBJbmhlcml0cyBhbGwgZnJv
bSBMaXN0LgotIF9fcm93cy9kYXRhX18gLSBBcnJheSBvZiBhcnJheSBvZiBz
dHJpbmdzIHJlcHJlc2VudGluZyByb3dzLgotIF9fcGFkX18gLSBTcGFjZXMg
dG8gYXR0ZW1wdCB0byBwYWQgb24gdGhlIHNpZGVzIG9mIGVhY2ggY2VsbC4g
YDJgIGJ5IGRlZmF1bHQ6CiAgb25lIHNwYWNlIG9uIGVhY2ggc2lkZSAob25s
eSB1c2VmdWwgaWYgdGhlIHdpZHRoIGlzIHNocnVua2VuKS4KLSBfX25vQ2Vs
bEJvcmRlcnNfXyAtIERvIG5vdCBkcmF3IGlubmVyIGNlbGxzLgotIF9fc3R5
bGUuaGVhZGVyX18gLSBIZWFkZXIgc3R5bGUuCi0gX19zdHlsZS5jZWxsX18g
LSBDZWxsIHN0eWxlLgoKIyMjIyMgUHJvcGVydGllczoKCi0gSW5oZXJpdHMg
YWxsIGZyb20gTGlzdC4KCiMjIyMjIEV2ZW50czoKCi0gSW5oZXJpdHMgYWxs
IGZyb20gTGlzdC4KCiMjIyMjIE1ldGhvZHM6CgotIEluaGVyaXRzIGFsbCBm
cm9tIExpc3QuCi0gX19zZXRSb3dzL3NldERhdGEocm93cylfXyAtIFNldCBy
b3dzIGluIHRhYmxlLiBBcnJheSBvZiBhcnJheXMgb2Ygc3RyaW5ncy4KYGBg
IGpzCiAgdGFibGUuc2V0RGF0YShbCiAgICBbICdBbmltYWxzJywgICdGb29k
cycgIF0sCiAgICBbICdFbGVwaGFudCcsICdBcHBsZScgIF0sCiAgICBbICdC
aXJkJywgICAgICdPcmFuZ2UnIF0KICBdKTsKYGBgCgoKIyMjIyBMaXN0YmFy
IChmcm9tIEJveCkKCkEgaG9yaXpvbnRhbCBsaXN0LiBVc2VmdWwgZm9yIGEg
bWFpbiBtZW51IGJhci4KCiMjIyMjIE9wdGlvbnM6CgotIEluaGVyaXRzIGFs
bCBmcm9tIEJveC4KLSBfX3N0eWxlLnNlbGVjdGVkX18gLSBTdHlsZSBmb3Ig
YSBzZWxlY3RlZCBpdGVtLgotIF9fc3R5bGUuaXRlbV9fIC0gU3R5bGUgZm9y
IGFuIHVuc2VsZWN0ZWQgaXRlbS4KLSBfX2NvbW1hbmRzL2l0ZW1zX18gLSBT
ZXQgYnV0dG9ucyB1c2luZyBhbiBvYmplY3Qgd2l0aCBrZXlzIGFzIHRpdGxl
cyBvZgogIGJ1dHRvbnMsIGNvbnRhaW5pbmcgb2Ygb2JqZWN0cyBjb250YWlu
aW5nIGtleXMgb2YgYGtleXNgIGFuZCBgY2FsbGJhY2tgLgotIF9fYXV0b0Nv
bW1hbmRLZXlzX18gLSBBdXRvbWF0aWNhbGx5IGJpbmQgbGlzdCBidXR0b25z
IHRvIGtleXMgMC05LgoKIyMjIyMgUHJvcGVydGllczoKCi0gSW5oZXJpdHMg
YWxsIGZyb20gQm94LgoKIyMjIyMgRXZlbnRzOgoKLSBJbmhlcml0cyBhbGwg
ZnJvbSBCb3guCgojIyMjIyBNZXRob2RzOgoKLSBJbmhlcml0cyBhbGwgZnJv
bSBCb3guCi0gX19zZXRJdGVtcyhjb21tYW5kcylfXyAtIFNldCBjb21tYW5k
cyAoc2VlIGBjb21tYW5kc2Agb3B0aW9uIGFib3ZlKS4KLSBfX2FkZC9hZGRJ
dGVtL2FwcGVuZEl0ZW0oaXRlbSwgY2FsbGJhY2spX18gLSBBcHBlbmQgYW4g
aXRlbSB0byB0aGUgYmFyLgotIF9fc2VsZWN0KG9mZnNldClfXyAtIFNlbGVj
dCBhbiBpdGVtIG9uIHRoZSBiYXIuCi0gX19yZW1vdmVJdGVtKGNoaWxkKV9f
IC0gUmVtb3ZlIGl0ZW0gZnJvbSB0aGUgYmFyLgotIF9fbW92ZShvZmZzZXQp
X18gLSBNb3ZlIHJlbGF0aXZlbHkgYWNyb3NzIHRoZSBiYXIuCi0gX19tb3Zl
TGVmdChvZmZzZXQpX18gLSBNb3ZlIGxlZnQgcmVsYXRpdmVseSBhY3Jvc3Mg
dGhlIGJhci4KLSBfX21vdmVSaWdodChvZmZzZXQpX18gLSBNb3ZlIHJpZ2h0
IHJlbGF0aXZlbHkgYWNyb3NzIHRoZSBiYXIuCi0gX19zZWxlY3RUYWIoaW5k
ZXgpX18gLSBTZWxlY3QgYnV0dG9uIGFuZCBleGVjdXRlIGl0cyBjYWxsYmFj
ay4KCgojIyMgRm9ybXMKCgojIyMjIEZvcm0gKGZyb20gQm94KQoKQSBmb3Jt
IHdoaWNoIGNhbiBjb250YWluIGZvcm0gZWxlbWVudHMuCgojIyMjIyBPcHRp
b25zOgoKLSBJbmhlcml0cyBhbGwgZnJvbSBCb3guCi0gX19rZXlzX18gLSBB
bGxvdyBkZWZhdWx0IGtleXMgKHRhYiwgdmkga2V5cywgZW50ZXIpLgotIF9f
dmlfXyAtIEFsbG93IHZpIGtleXMuCgojIyMjIyBQcm9wZXJ0aWVzOgoKLSBJ
bmhlcml0cyBhbGwgZnJvbSBCb3guCi0gX19zdWJtaXNzaW9uX18gLSBMYXN0
IHN1Ym1pdHRlZCBkYXRhLgoKIyMjIyMgRXZlbnRzOgoKLSBJbmhlcml0cyBh
bGwgZnJvbSBCb3guCi0gX19zdWJtaXRfXyAtIEZvcm0gaXMgc3VibWl0dGVk
LiBSZWNlaXZlcyBhIGRhdGEgb2JqZWN0LgotIF9fY2FuY2VsX18gLSBGb3Jt
IGlzIGRpc2NhcmRlZC4KLSBfX3Jlc2V0X18gLSBGb3JtIGlzIGNsZWFyZWQu
CgojIyMjIyBNZXRob2RzOgoKLSBJbmhlcml0cyBhbGwgZnJvbSBCb3guCi0g
X19mb2N1c05leHQoKV9fIC0gRm9jdXMgbmV4dCBmb3JtIGVsZW1lbnQuCi0g
X19mb2N1c1ByZXZpb3VzKClfXyAtIEZvY3VzIHByZXZpb3VzIGZvcm0gZWxl
bWVudC4KLSBfX3N1Ym1pdCgpX18gLSBTdWJtaXQgdGhlIGZvcm0uCi0gX19j
YW5jZWwoKV9fIC0gRGlzY2FyZCB0aGUgZm9ybS4KLSBfX3Jlc2V0KClfXyAt
IENsZWFyIHRoZSBmb3JtLgoKCiMjIyMgSW5wdXQgKGZyb20gQm94KQoKQSBm
b3JtIGlucHV0LgoKCiMjIyMgVGV4dGFyZWEgKGZyb20gSW5wdXQpCgpBIGJv
eCB3aGljaCBhbGxvd3MgbXVsdGlsaW5lIHRleHQgaW5wdXQuCgojIyMjIyBP
cHRpb25zOgoKLSBJbmhlcml0cyBhbGwgZnJvbSBJbnB1dC4KLSBfX2tleXNf
XyAtIFVzZSBwcmUtZGVmaW5lZCBrZXlzIChgaWAgb3IgYGVudGVyYCBmb3Ig
aW5zZXJ0LCBgZWAgZm9yIGVkaXRvciwKICBgQy1lYCBmb3IgZWRpdG9yIHdo
aWxlIGluc2VydGluZykuCi0gX19tb3VzZV9fIC0gVXNlIHByZS1kZWZpbmVk
IG1vdXNlIGV2ZW50cyAocmlnaHQtY2xpY2sgZm9yIGVkaXRvcikuCi0gX19p
bnB1dE9uRm9jdXNfXyAtIENhbGwgYHJlYWRJbnB1dCgpYCB3aGVuIHRoZSBl
bGVtZW50IGlzIGZvY3VzZWQuCiAgQXV0b21hdGljYWxseSB1bmZvY3VzLgoK
IyMjIyMgUHJvcGVydGllczoKCi0gSW5oZXJpdHMgYWxsIGZyb20gSW5wdXQu
Ci0gX192YWx1ZV9fIC0gVGhlIGlucHV0IHRleHQuIF9fcmVhZC1vbmx5X18u
CgojIyMjIyBFdmVudHM6CgotIEluaGVyaXRzIGFsbCBmcm9tIElucHV0Lgot
IF9fc3VibWl0X18gLSBWYWx1ZSBpcyBzdWJtaXR0ZWQgKGVudGVyKS4KLSBf
X2NhbmNlbF9fIC0gVmFsdWUgaXMgZGlzY2FyZWQgKGVzY2FwZSkuCi0gX19h
Y3Rpb25fXyAtIEVpdGhlciBzdWJtaXQgb3IgY2FuY2VsLgoKIyMjIyMgTWV0
aG9kczoKCi0gSW5oZXJpdHMgYWxsIGZyb20gSW5wdXQuCi0gX19zdWJtaXRf
XyAtIFN1Ym1pdCB0aGUgdGV4dGFyZWEgKGVtaXRzIGBzdWJtaXRgKS4KLSBf
X2NhbmNlbF9fIC0gQ2FuY2VsIHRoZSB0ZXh0YXJlYSAoZW1pdHMgYGNhbmNl
bGApLgotIF9fcmVhZElucHV0KGNhbGxiYWNrKV9fIC0gR3JhYiBrZXkgZXZl
bnRzIGFuZCBzdGFydCByZWFkaW5nIHRleHQgZnJvbSB0aGUKICBrZXlib2Fy
ZC4gVGFrZXMgYSBjYWxsYmFjayB3aGljaCByZWNlaXZlcyB0aGUgZmluYWwg
dmFsdWUuCi0gX19yZWFkRWRpdG9yKGNhbGxiYWNrKV9fIC0gT3BlbiB0ZXh0
IGVkaXRvciBpbiBgJEVESVRPUmAsIHJlYWQgdGhlIG91dHB1dCBmcm9tCiAg
dGhlIHJlc3VsdGluZyBmaWxlLiBUYWtlcyBhIGNhbGxiYWNrIHdoaWNoIHJl
Y2VpdmVzIHRoZSBmaW5hbCB2YWx1ZS4KLSBfX2dldFZhbHVlKClfXyAtIFRo
ZSBzYW1lIGFzIGB0aGlzLnZhbHVlYCwgZm9yIG5vdy4KLSBfX2NsZWFyVmFs
dWUoKV9fIC0gQ2xlYXIgaW5wdXQuCi0gX19zZXRWYWx1ZSh0ZXh0KV9fIC0g
U2V0IHZhbHVlLgoKCiMjIyMgVGV4dGJveCAoZnJvbSBUZXh0YXJlYSkKCkEg
Ym94IHdoaWNoIGFsbG93cyB0ZXh0IGlucHV0LgoKIyMjIyMgT3B0aW9uczoK
Ci0gSW5oZXJpdHMgYWxsIGZyb20gVGV4dGFyZWEuCi0gX19zZWNyZXRfXyAt
IENvbXBsZXRlbHkgaGlkZSB0ZXh0LgotIF9fY2Vuc29yX18gLSBSZXBsYWNl
IHRleHQgd2l0aCBhc3Rlcmlza3MgKGAqYCkuCgojIyMjIyBQcm9wZXJ0aWVz
OgoKLSBJbmhlcml0cyBhbGwgZnJvbSBUZXh0YXJlYS4KLSBfX3NlY3JldF9f
IC0gQ29tcGxldGVseSBoaWRlIHRleHQuCi0gX19jZW5zb3JfXyAtIFJlcGxh
Y2UgdGV4dCB3aXRoIGFzdGVyaXNrcyAoYCpgKS4KCiMjIyMjIEV2ZW50czoK
Ci0gSW5oZXJpdHMgYWxsIGZyb20gVGV4dGFyZWEuCgojIyMjIyBNZXRob2Rz
OgoKLSBJbmhlcml0cyBhbGwgZnJvbSBUZXh0YXJlYS4KCgojIyMjIEJ1dHRv
biAoZnJvbSBJbnB1dCkKCkEgYnV0dG9uIHdoaWNoIGNhbiBiZSBmb2N1c2Vk
IGFuZCBhbGxvd3Mga2V5IGFuZCBtb3VzZSBpbnB1dC4KCiMjIyMjIE9wdGlv
bnM6CgotIEluaGVyaXRzIGFsbCBmcm9tIElucHV0LgoKIyMjIyMgUHJvcGVy
dGllczoKCi0gSW5oZXJpdHMgYWxsIGZyb20gSW5wdXQuCgojIyMjIyBFdmVu
dHM6CgotIEluaGVyaXRzIGFsbCBmcm9tIElucHV0LgotIF9fcHJlc3NfXyAt
IFJlY2VpdmVkIHdoZW4gdGhlIGJ1dHRvbiBpcyBjbGlja2VkL3ByZXNzZWQu
CgojIyMjIyBNZXRob2RzOgoKLSBJbmhlcml0cyBhbGwgZnJvbSBJbnB1dC4K
LSBfX3ByZXNzKClfXyAtIFByZXNzIGJ1dHRvbi4gRW1pdHMgYHByZXNzYC4K
CgojIyMjIENoZWNrYm94IChmcm9tIElucHV0KQoKQSBjaGVja2JveCB3aGlj
aCBjYW4gYmUgdXNlZCBpbiBhIGZvcm0gZWxlbWVudC4KCiMjIyMjIE9wdGlv
bnM6CgotIEluaGVyaXRzIGFsbCBmcm9tIElucHV0LgotIF9fY2hlY2tlZF9f
IC0gV2hldGhlciB0aGUgZWxlbWVudCBpcyBjaGVja2VkIG9yIG5vdC4KLSBf
X21vdXNlX18gLSBFbmFibGUgbW91c2Ugc3VwcG9ydC4KCiMjIyMjIFByb3Bl
cnRpZXM6CgotIEluaGVyaXRzIGFsbCBmcm9tIElucHV0LgotIF9fdGV4dF9f
IC0gVGhlIHRleHQgbmV4dCB0byB0aGUgY2hlY2tib3ggKGRvIG5vdCB1c2Ug
c2V0Q29udGVudCwgdXNlCiAgYGNoZWNrLnRleHQgPSAnJ2ApLgotIF9fY2hl
Y2tlZF9fIC0gV2hldGhlciB0aGUgZWxlbWVudCBpcyBjaGVja2VkIG9yIG5v
dC4KLSBfX3ZhbHVlX18gLSBTYW1lIGFzIGBjaGVja2VkYC4KCiMjIyMjIEV2
ZW50czoKCi0gSW5oZXJpdHMgYWxsIGZyb20gSW5wdXQuCi0gX19jaGVja19f
IC0gUmVjZWl2ZWQgd2hlbiBlbGVtZW50IGlzIGNoZWNrZWQuCi0gX191bmNo
ZWNrX18gcmVjZWl2ZWQgd2hlbiBlbGVtZW50IGlzIHVuY2hlY2tlZC4KCiMj
IyMjIE1ldGhvZHM6CgotIEluaGVyaXRzIGFsbCBmcm9tIElucHV0LgotIF9f
Y2hlY2soKV9fIC0gQ2hlY2sgdGhlIGVsZW1lbnQuCi0gX191bmNoZWNrKClf
XyAtIFVuY2hlY2sgdGhlIGVsZW1lbnQuCi0gX190b2dnbGUoKV9fIC0gVG9n
Z2xlIGNoZWNrZWQgc3RhdGUuCgoKIyMjIyBSYWRpb1NldCAoZnJvbSBCb3gp
CgpBbiBlbGVtZW50IHdyYXBwaW5nIFJhZGlvQnV0dG9ucy4gUmFkaW9CdXR0
b25zIHdpdGhpbiB0aGlzIGVsZW1lbnQgd2lsbCBiZQptdXR1YWxseSBleGNs
dXNpdmUgd2l0aCBlYWNoIG90aGVyLgoKIyMjIyMgT3B0aW9uczoKCi0gSW5o
ZXJpdHMgYWxsIGZyb20gQm94LgoKIyMjIyMgUHJvcGVydGllczoKCi0gSW5o
ZXJpdHMgYWxsIGZyb20gQm94LgoKIyMjIyMgRXZlbnRzOgoKLSBJbmhlcml0
cyBhbGwgZnJvbSBCb3guCgojIyMjIyBNZXRob2RzOgoKLSBJbmhlcml0cyBh
bGwgZnJvbSBCb3guCgoKIyMjIyBSYWRpb0J1dHRvbiAoZnJvbSBDaGVja2Jv
eCkKCkEgcmFkaW8gYnV0dG9uIHdoaWNoIGNhbiBiZSB1c2VkIGluIGEgZm9y
bSBlbGVtZW50LgoKIyMjIyMgT3B0aW9uczoKCi0gSW5oZXJpdHMgYWxsIGZy
b20gQ2hlY2tib3guCgojIyMjIyBQcm9wZXJ0aWVzOgoKLSBJbmhlcml0cyBh
bGwgZnJvbSBDaGVja2JveC4KCiMjIyMjIEV2ZW50czoKCi0gSW5oZXJpdHMg
YWxsIGZyb20gQ2hlY2tib3guCgojIyMjIyBNZXRob2RzOgoKLSBJbmhlcml0
cyBhbGwgZnJvbSBDaGVja2JveC4KCgojIyMgUHJvbXB0cwoKCiMjIyMgUHJv
bXB0IChmcm9tIEJveCkKCkEgcHJvbXB0IGJveCBjb250YWluaW5nIGEgdGV4
dCBpbnB1dCwgb2theSwgYW5kIGNhbmNlbCBidXR0b25zIChhdXRvbWF0aWNh
bGx5CmhpZGRlbikuCgojIyMjIyBPcHRpb25zOgoKLSBJbmhlcml0cyBhbGwg
ZnJvbSBCb3guCgojIyMjIyBQcm9wZXJ0aWVzOgoKLSBJbmhlcml0cyBhbGwg
ZnJvbSBCb3guCgojIyMjIyBFdmVudHM6CgotIEluaGVyaXRzIGFsbCBmcm9t
IEJveC4KCiMjIyMjIE1ldGhvZHM6CgotIEluaGVyaXRzIGFsbCBmcm9tIEJv
eC4KLSBfX2lucHV0L3NldElucHV0L3JlYWRJbnB1dCh0ZXh0LCB2YWx1ZSwg
Y2FsbGJhY2spX18gLSBTaG93IHRoZSBwcm9tcHQgYW5kCiAgd2FpdCBmb3Ig
dGhlIHJlc3VsdCBvZiB0aGUgdGV4dGJveC4gU2V0IHRleHQgYW5kIGluaXRp
YWwgdmFsdWUuCgoKIyMjIyBRdWVzdGlvbiAoZnJvbSBCb3gpCgpBIHF1ZXN0
aW9uIGJveCBjb250YWluaW5nIG9rYXkgYW5kIGNhbmNlbCBidXR0b25zIChh
dXRvbWF0aWNhbGx5IGhpZGRlbikuCgojIyMjIyBPcHRpb25zOgoKLSBJbmhl
cml0cyBhbGwgZnJvbSBCb3guCgojIyMjIyBQcm9wZXJ0aWVzOgoKLSBJbmhl
cml0cyBhbGwgZnJvbSBCb3guCgojIyMjIyBFdmVudHM6CgotIEluaGVyaXRz
IGFsbCBmcm9tIEJveC4KCiMjIyMjIE1ldGhvZHM6CgotIEluaGVyaXRzIGFs
bCBmcm9tIEJveC4KLSBfX2FzayhxdWVzdGlvbiwgY2FsbGJhY2spX18gLSBB
c2sgYSBgcXVlc3Rpb25gLiBgY2FsbGJhY2tgIHdpbGwgeWllbGQgdGhlCiAg
cmVzdWx0LgoKCiMjIyMgTWVzc2FnZSAoZnJvbSBCb3gpCgpBIGJveCBjb250
YWluaW5nIGEgbWVzc2FnZSB0byBiZSBkaXNwbGF5ZWQgKGF1dG9tYXRpY2Fs
bHkgaGlkZGVuKS4KCiMjIyMjIE9wdGlvbnM6CgotIEluaGVyaXRzIGFsbCBm
cm9tIEJveC4KCiMjIyMjIFByb3BlcnRpZXM6CgotIEluaGVyaXRzIGFsbCBm
cm9tIEJveC4KCiMjIyMjIEV2ZW50czoKCi0gSW5oZXJpdHMgYWxsIGZyb20g
Qm94LgoKIyMjIyMgTWV0aG9kczoKCi0gSW5oZXJpdHMgYWxsIGZyb20gQm94
LgotIF9fbG9nL2Rpc3BsYXkodGV4dCwgW3RpbWVdLCBjYWxsYmFjaylfXyAt
IERpc3BsYXkgYSBtZXNzYWdlIGZvciBhIHRpbWUKICAoZGVmYXVsdCBpcyAz
IHNlY29uZHMpLiBTZXQgdGltZSB0byAwIGZvciBhIHBlcnBldHVhbCBtZXNz
YWdlIHRoYXQgaXMKICBkaXNtaXNzZWQgb24ga2V5cHJlc3MuCi0gX19lcnJv
cih0ZXh0LCBbdGltZV0sIGNhbGxiYWNrKV9fIC0gRGlzcGxheSBhbiBlcnJv
ciBpbiB0aGUgc2FtZSB3YXkuCgoKIyMjIyBMb2FkaW5nIChmcm9tIEJveCkK
CkEgYm94IHdpdGggYSBzcGlubmluZyBsaW5lIHRvIGRlbm90ZSBsb2FkaW5n
IChhdXRvbWF0aWNhbGx5IGhpZGRlbikuCgojIyMjIyBPcHRpb25zOgoKLSBJ
bmhlcml0cyBhbGwgZnJvbSBCb3guCgojIyMjIyBQcm9wZXJ0aWVzOgoKLSBJ
bmhlcml0cyBhbGwgZnJvbSBCb3guCgojIyMjIyBFdmVudHM6CgotIEluaGVy
aXRzIGFsbCBmcm9tIEJveC4KCiMjIyMjIE1ldGhvZHM6CgotIEluaGVyaXRz
IGFsbCBmcm9tIEJveC4KLSBfX2xvYWQodGV4dClfXyAtIERpc3BsYXkgdGhl
IGxvYWRpbmcgYm94IHdpdGggYSBtZXNzYWdlLiBXaWxsIGxvY2sga2V5cyB1
bnRpbAogIGBzdG9wYCBpcyBjYWxsZWQuCi0gX19zdG9wKClfXyAtIEhpZGUg
bG9hZGluZyBib3guIFVubG9jayBrZXlzLgoKCiMjIyBEYXRhIERpc3BsYXkK
CgojIyMjIFByb2dyZXNzQmFyIChmcm9tIElucHV0KQoKQSBwcm9ncmVzcyBi
YXIgYWxsb3dpbmcgdmFyaW91cyBzdHlsZXMuIFRoaXMgY2FuIGFsc28gYmUg
dXNlZCBhcyBhIGZvcm0gaW5wdXQuCgojIyMjIyBPcHRpb25zOgoKLSBJbmhl
cml0cyBhbGwgZnJvbSBJbnB1dC4KLSBfX29yaWVudGF0aW9uX18gLSBDYW4g
YmUgYGhvcml6b250YWxgIG9yIGB2ZXJ0aWNhbGAuCi0gX19zdHlsZS5iYXJf
XyAtIFN0eWxlIG9mIHRoZSBiYXIgY29udGVudHMgaXRzZWxmLgotIF9fcGNo
X18gLSBUaGUgY2hhcmFjdGVyIHRvIGZpbGwgdGhlIGJhciB3aXRoIChkZWZh
dWx0IGlzIHNwYWNlKS4KLSBfX2ZpbGxlZF9fIC0gVGhlIGFtb3VudCBmaWxs
ZWQgKDAgLSAxMDApLgotIF9fdmFsdWVfXyAtIFNhbWUgYXMgYGZpbGxlZGAu
Ci0gX19rZXlzX18gLSBFbmFibGUga2V5IHN1cHBvcnQuCi0gX19tb3VzZV9f
IC0gRW5hYmxlIG1vdXNlIHN1cHBvcnQuCgojIyMjIyBQcm9wZXJ0aWVzOgoK
LSBJbmhlcml0cyBhbGwgZnJvbSBJbnB1dC4KCiMjIyMjIEV2ZW50czoKCi0g
SW5oZXJpdHMgYWxsIGZyb20gSW5wdXQuCi0gX19yZXNldF9fIC0gQmFyIHdh
cyByZXNldC4KLSBfX2NvbXBsZXRlX18gLSBCYXIgaGFzIGNvbXBsZXRlbHkg
ZmlsbGVkLgoKIyMjIyMgTWV0aG9kczoKCi0gSW5oZXJpdHMgYWxsIGZyb20g
SW5wdXQuCi0gX19wcm9ncmVzcyhhbW91bnQpX18gLSBQcm9ncmVzcyB0aGUg
YmFyIGJ5IGEgZmlsbCBhbW91bnQuCi0gX19zZXRQcm9ncmVzcyhhbW91bnQp
X18gLSBTZXQgcHJvZ3Jlc3MgdG8gc3BlY2lmaWMgYW1vdW50LgotIF9fcmVz
ZXQoKV9fIC0gUmVzZXQgdGhlIGJhci4KCgojIyMjIExvZyAoZnJvbSBTY3Jv
bGxhYmxlVGV4dCkKCkEgbG9nIHBlcm1hbmVudGx5IHNjcm9sbGVkIHRvIHRo
ZSBib3R0b20uCgojIyMjIyBPcHRpb25zOgoKLSBJbmhlcml0cyBhbGwgZnJv
bSBTY3JvbGxhYmxlVGV4dC4KLSBfX3Njcm9sbGJhY2tfXyAtIEFtb3VudCBv
ZiBzY3JvbGxiYWNrIGFsbG93ZWQuIERlZmF1bHQ6IEluZmluaXR5LgotIF9f
c2Nyb2xsT25JbnB1dF9fIC0gU2Nyb2xsIHRvIGJvdHRvbSBvbiBpbnB1dCBl
dmVuIGlmIHRoZSB1c2VyIGhhcyBzY3JvbGxlZAogIHVwLiBEZWZhdWx0OiBm
YWxzZS4KCiMjIyMjIFByb3BlcnRpZXM6CgotIEluaGVyaXRzIGFsbCBmcm9t
IFNjcm9sbGFibGVUZXh0LgotIF9fc2Nyb2xsYmFja19fIC0gQW1vdW50IG9m
IHNjcm9sbGJhY2sgYWxsb3dlZC4gRGVmYXVsdDogSW5maW5pdHkuCi0gX19z
Y3JvbGxPbklucHV0X18gLSBTY3JvbGwgdG8gYm90dG9tIG9uIGlucHV0IGV2
ZW4gaWYgdGhlIHVzZXIgaGFzIHNjcm9sbGVkCiAgdXAuIERlZmF1bHQ6IGZh
bHNlLgoKIyMjIyMgRXZlbnRzOgoKLSBJbmhlcml0cyBhbGwgZnJvbSBTY3Jv
bGxhYmxlVGV4dC4KLSBfX2xvZ19fIC0gRW1pdHRlZCBvbiBhIGxvZyBsaW5l
LiBQYXNzZXMgaW4gbGluZS4KCiMjIyMjIE1ldGhvZHM6CgotIEluaGVyaXRz
IGFsbCBmcm9tIFNjcm9sbGFibGVUZXh0LgotIF9fbG9nL2FkZCh0ZXh0KV9f
IC0gQWRkIGEgbG9nIGxpbmUuCgoKIyMjIyBUYWJsZSAoZnJvbSBCb3gpCgpB
IHN0eWxpemVkIHRhYmxlIG9mIHRleHQgZWxlbWVudHMuCgojIyMjIyBPcHRp
b25zOgoKLSBJbmhlcml0cyBhbGwgZnJvbSBCb3guCi0gX19yb3dzL2RhdGFf
XyAtIEFycmF5IG9mIGFycmF5IG9mIHN0cmluZ3MgcmVwcmVzZW50aW5nIHJv
d3MuCi0gX19wYWRfXyAtIFNwYWNlcyB0byBhdHRlbXB0IHRvIHBhZCBvbiB0
aGUgc2lkZXMgb2YgZWFjaCBjZWxsLiBgMmAgYnkgZGVmYXVsdDoKICBvbmUg
c3BhY2Ugb24gZWFjaCBzaWRlIChvbmx5IHVzZWZ1bCBpZiB0aGUgd2lkdGgg
aXMgc2hydW5rZW4pLgotIF9fbm9DZWxsQm9yZGVyc19fIC0gRG8gbm90IGRy
YXcgaW5uZXIgY2VsbHMuCi0gX19maWxsQ2VsbEJvcmRlcnNfXyAtIEZpbGwg
Y2VsbCBib3JkZXJzIHdpdGggdGhlIGFkamFjZW50IGJhY2tncm91bmQgY29s
b3IuCi0gX19zdHlsZS5oZWFkZXJfXyAtIEhlYWRlciBzdHlsZS4KLSBfX3N0
eWxlLmNlbGxfXyAtIENlbGwgc3R5bGUuCgojIyMjIyBQcm9wZXJ0aWVzOgoK
LSBJbmhlcml0cyBhbGwgZnJvbSBCb3guCgojIyMjIyBFdmVudHM6CgotIElu
aGVyaXRzIGFsbCBmcm9tIEJveC4KCiMjIyMjIE1ldGhvZHM6CgotIEluaGVy
aXRzIGFsbCBmcm9tIEJveC4KLSBfX3NldFJvd3Mvc2V0RGF0YShyb3dzKV9f
IC0gU2V0IHJvd3MgaW4gdGFibGUuIEFycmF5IG9mIGFycmF5cyBvZiBzdHJp
bmdzLgpgYGAganMKICB0YWJsZS5zZXREYXRhKFsKICAgIFsgJ0FuaW1hbHMn
LCAgJ0Zvb2RzJyAgXSwKICAgIFsgJ0VsZXBoYW50JywgJ0FwcGxlJyAgXSwK
ICAgIFsgJ0JpcmQnLCAgICAgJ09yYW5nZScgXQogIF0pOwpgYGAKCgojIyMg
U3BlY2lhbCBFbGVtZW50cwoKCiMjIyMgVGVybWluYWwgKGZyb20gQm94KQoK
QSBib3ggd2hpY2ggc3BpbnMgdXAgYSBwc2V1ZG8gdGVybWluYWwgYW5kIHJl
bmRlcnMgdGhlIG91dHB1dC4gVXNlZnVsIGZvcgp3cml0aW5nIGEgdGVybWlu
YWwgbXVsdGlwbGV4ZXIsIG9yIHNvbWV0aGluZyBzaW1pbGFyIHRvIGFuIG1j
LWxpa2UgZmlsZQptYW5hZ2VyLiBSZXF1aXJlcyB0ZXJtLmpzIGFuZCBwdHku
anMgdG8gYmUgaW5zdGFsbGVkLiBTZWUKYGV4YW1wbGUvbXVsdGlwbGV4Lmpz
YCBmb3IgYW4gZXhhbXBsZSB0ZXJtaW5hbCBtdWx0aXBsZXhlci4KCiMjIyMj
IE9wdGlvbnM6CgotIEluaGVyaXRzIGFsbCBmcm9tIEJveC4KLSBfX2hhbmRs
ZXJfXyAtIEhhbmRsZXIgZm9yIGlucHV0IGRhdGEuCi0gX19zaGVsbF9fIC0g
TmFtZSBvZiBzaGVsbC4gYCRTSEVMTGAgYnkgZGVmYXVsdC4KLSBfX2FyZ3Nf
XyAtIEFyZ3MgZm9yIHNoZWxsLgotIF9fY3Vyc29yX18gLSBDYW4gYmUgYGxp
bmVgLCBgdW5kZXJsaW5lYCwgYW5kIGBibG9ja2AuCi0gX190ZXJtaW5hbF9f
IC0gVGVybWluYWwgbmFtZSAoRGVmYXVsdDogYHh0ZXJtYCkuCi0gX19lbnZf
XyAtIE9iamVjdCBmb3IgcHJvY2VzcyBlbnYuCi0gT3RoZXIgb3B0aW9ucyBz
aW1pbGFyIHRvIHRlcm0uanMnLgoKIyMjIyMgUHJvcGVydGllczoKCi0gSW5o
ZXJpdHMgYWxsIGZyb20gQm94LgotIF9fdGVybV9fIC0gUmVmZXJlbmNlIHRv
IHRoZSBoZWFkbGVzcyB0ZXJtLmpzIHRlcm1pbmFsLgotIF9fcHR5X18gLSBS
ZWZlcmVuY2UgdG8gdGhlIHB0eS5qcyBwc2V1ZG8gdGVybWluYWwuCgojIyMj
IyBFdmVudHM6CgotIEluaGVyaXRzIGFsbCBmcm9tIEJveC4KLSBfX3RpdGxl
X18gLSBXaW5kb3cgdGl0bGUgZnJvbSB0ZXJtaW5hbC4KLSBPdGhlciBldmVu
dHMgc2ltaWxhciB0byBTY3JvbGxhYmxlQm94LgoKIyMjIyMgTWV0aG9kczoK
Ci0gSW5oZXJpdHMgYWxsIGZyb20gQm94LgotIF9fd3JpdGUoZGF0YSlfXyAt
IFdyaXRlIGRhdGEgdG8gdGhlIHRlcm1pbmFsLgotIF9fc2NyZWVuc2hvdChb
eGksIHhsLCB5aSwgeGxdKV9fIC0gTmVhcmx5IGlkZW50aWNhbCB0byBgZWxl
bWVudC5zY3JlZW5zaG90YCwKICBob3dldmVyLCB0aGUgc3BlY2lmaWVkIHJl
Z2lvbiBpbmNsdWRlcyB0aGUgdGVybWluYWwncyBfZW50aXJlXyBzY3JvbGxi
YWNrLAogIHJhdGhlciB0aGFuIGp1c3Qgd2hhdCBpcyB2aXNpYmxlIG9uIHRo
ZSBzY3JlZW4uCi0gT3RoZXIgbWV0aG9kcyBzaW1pbGFyIHRvIFNjcm9sbGFi
bGVCb3guCgoKIyMjIyBJbWFnZSAoZnJvbSBCb3gpCgpEaXNwbGF5IGFuIGlt
YWdlIGluIHRoZSB0ZXJtaW5hbCAoanBlZywgcG5nLCBnaWYpIHVzaW5nIGVp
dGhlciBibGVzc2VkJ3MKaW50ZXJuYWwgcG5nL2dpZi10by10ZXJtaW5hbCBy
ZW5kZXJlciAodXNpbmcgYSBbQU5TSUltYWdlIGVsZW1lbnRdKCNhbnNpaW1h
Z2UtZnJvbS1ib3gpKSBvcgp1c2luZyBgdzNtaW1nZGlzcGxheWAgKHVzaW5n
IGEgW092ZXJsYXlJbWFnZSBlbGVtZW50XSgjb3ZlcmxheWltYWdlLWZyb20t
Ym94KSkuCgojIyMjIyBPcHRpb25zOgoKLSBJbmhlcml0cyBhbGwgZnJvbSBC
b3guCi0gX19maWxlX18gLSBQYXRoIHRvIGltYWdlLgotIF9fdHlwZV9fIC0g
YGFuc2lgIG9yIGBvdmVybGF5YC4gV2hldGhlciB0byByZW5kZXIgdGhlIGZp
bGUgYXMgQU5TSSBhcnQgb3IKICB1c2luZyBgdzNtYCB0byBvdmVybGF5LiBT
ZWUgdGhlIFtBTlNJSW1hZ2UgZWxlbWVudF0oI2Fuc2lpbWFnZS1mcm9tLWJv
eCkgZm9yCiAgbW9yZSBpbmZvcm1hdGlvbi9vcHRpb25zLiAoX19kZWZhdWx0
X186IGBhbnNpYCkuCgojIyMjIyBQcm9wZXJ0aWVzOgoKLSBJbmhlcml0cyBh
bGwgZnJvbSBCb3guCi0gU2VlIFtBTlNJSW1hZ2UgZWxlbWVudF0oI2Fuc2lp
bWFnZS1mcm9tLWJveCkKLSBTZWUgW092ZXJsYXlJbWFnZSBlbGVtZW50XSgj
b3ZlcmxheWltYWdlLWZyb20tYm94KQoKIyMjIyMgRXZlbnRzOgoKLSBJbmhl
cml0cyBhbGwgZnJvbSBCb3guCi0gU2VlIFtBTlNJSW1hZ2UgZWxlbWVudF0o
I2Fuc2lpbWFnZS1mcm9tLWJveCkKLSBTZWUgW092ZXJsYXlJbWFnZSBlbGVt
ZW50XSgjb3ZlcmxheWltYWdlLWZyb20tYm94KQoKIyMjIyMgTWV0aG9kczoK
Ci0gSW5oZXJpdHMgYWxsIGZyb20gQm94LgotIFNlZSBbQU5TSUltYWdlIGVs
ZW1lbnRdKCNhbnNpaW1hZ2UtZnJvbS1ib3gpCi0gU2VlIFtPdmVybGF5SW1h
Z2UgZWxlbWVudF0oI292ZXJsYXlpbWFnZS1mcm9tLWJveCkKCgojIyMjIEFO
U0lJbWFnZSAoZnJvbSBCb3gpCgpDb252ZXJ0IGFueSBgLnBuZ2AgZmlsZSAo
b3IgYC5naWZgLCBzZWUgYmVsb3cpIHRvIGFuIEFOU0kgaW1hZ2UgYW5kIGRp
c3BsYXkgaXQKYXMgYW4gZWxlbWVudC4gVGhpcyBkaWZmZXJzIGZyb20gdGhl
IGBPdmVybGF5SW1hZ2VgIGVsZW1lbnQgaW4gdGhhdCBpdCB1c2VzCmJsZXNz
ZWQncyBpbnRlcm5hbCBQTkcvR0lGIHBhcnNlciBhbmQgZG9lcyBub3QgcmVx
dWlyZSBleHRlcm5hbCBkZXBlbmRlbmNpZXMuCgpCbGVzc2VkIHVzZXMgYW4g
aW50ZXJuYWwgZnJvbS1zY3JhdGNoIFBORy9HSUYgcmVhZGVyIGJlY2F1c2Ug
bm8gb3RoZXIgamF2YXNjcmlwdApQTkcgcmVhZGVyIHN1cHBvcnRzIEFkYW03
IGludGVybGFjZWQgaW1hZ2VzIChtdWNoIGxlc3MgcGFzcyB0aGUgcG5nIHRl
c3QKc3VpdGUpLgoKVGhlIGJsZXNzZWQgUE5HIHJlYWRlciBzdXBwb3J0cyBh
ZGFtNyBkZWludGVybGFjaW5nLCBhbmltYXRpb24gKEFQTkcpLCBhbGwKY29s
b3IgdHlwZXMsIGJpdCBkZXB0aHMgMS0zMiwgYWxwaGEsIGFscGhhIHBhbGV0
dGVzLCBhbmQgb3V0cHV0cyBzY2FsZWQgYml0bWFwcwooY2VsbG1hcHMpIGlu
IGJsZXNzZWQgZm9yIGVmZmljaWVudCByZW5kZXJpbmcgdG8gdGhlIHNjcmVl
biBidWZmZXIuIEl0IGFsc28KdXNlcyBzb21lIGNvZGUgZnJvbSBsaWJjYWNh
L2xpYmN1Y3VsIHRvIGFkZCBkZW5zaXR5IEFTQ0lJIGNoYXJhY3RlcnMgaW4g
b3JkZXIKdG8gZ2l2ZSB0aGUgaW1hZ2UgbW9yZSBkZXRhaWwgaW4gdGhlIHRl
cm1pbmFsLgoKSWYgYSBjb3JydXB0IFBORyBvciBhIG5vbi1QTkcgaXMgcGFz
c2VkIGluLCBibGVzc2VkIHdpbGwgZGlzcGxheSBlcnJvciB0ZXh0IGluCnRo
ZSBlbGVtZW50LgoKYC5naWZgIGZpbGVzIGFyZSBhbHNvIHN1cHBvcnRlZCB2
aWEgYSBqYXZhc2NyaXB0IGltcGxlbWVudGF0aW9uICh0aGV5IGFyZQppbnRl
cm5hbGx5IGNvbnZlcnRlZCB0byBiaXRtYXBzIGFuZCBmZWQgdG8gdGhlIFBO
RyByZW5kZXJlcikuIEFueSBvdGhlciBpbWFnZQpmb3JtYXQgaXMgc3VwcG9y
dCBvbmx5IGlmIHRoZSB1c2VyIGhhcyBpbWFnZW1hZ2ljayAoYGNvbnZlcnRg
IGFuZCBgaWRlbnRpZnlgKQppbnN0YWxsZWQuCgojIyMjIyBPcHRpb25zOgoK
LSBJbmhlcml0cyBhbGwgZnJvbSBCb3guCi0gX19maWxlX18gLSBVUkwgb3Ig
cGF0aCB0byBQTkcvR0lGIGZpbGUuIENhbiBhbHNvIGJlIGEgYnVmZmVyLgot
IF9fc2NhbGVfXyAtIFNjYWxlIGNlbGxtYXAgZG93biAoYDAtMS4wYCkgZnJv
bSBpdHMgb3JpZ2luYWwgcGl4ZWwgd2lkdGgvaGVpZ2h0CiAgKERlZmF1bHQ6
IGAxLjBgKS4KLSBfX3dpZHRoL2hlaWdodF9fIC0gVGhpcyBkaWZmZXJzIGZy
b20gb3RoZXIgZWxlbWVudCdzIGB3aWR0aGAgb3IgYGhlaWdodGAgaW4KICB0
aGF0IG9ubHkgb25lIG9mIHRoZW0gaXMgbmVlZGVkOiBibGVzc2VkIHdpbGwg
bWFpbnRhaW4gdGhlIGFzcGVjdCByYXRpbyBvZgogIHRoZSBpbWFnZSBhcyBp
dCBzY2FsZXMgZG93biB0byB0aGUgcHJvcGVyIG51bWJlciBvZiBjZWxscy4g
X19OT1RFX186IFBORy9HSUYncwogIGFyZSBhbHdheXMgYXV0b21hdGljYWxs
eSBzaHJ1bmtlbiB0byBzaXplIChiYXNlZCBvbiBzY2FsZSkgaWYgYSBgd2lk
dGhgIG9yCiAgYGhlaWdodGAgaXMgbm90IGdpdmVuLgotIF9fYXNjaWlfXyAt
IEFkZCB2YXJpb3VzICJkZW5zaXR5IiBBU0NJSSBjaGFyYWN0ZXJzIG92ZXIg
dGhlIHJlbmRlcmluZyB0byBnaXZlCiAgdGhlIGltYWdlIG1vcmUgZGV0YWls
LCBzaW1pbGFyIHRvIGxpYmNhY2EvbGliY3VjdWwgKHRoZSBsaWJyYXJ5IG1w
bGF5ZXIgdXNlcwogIHRvIGRpc3BsYXkgdmlkZW9zIGluIHRoZSB0ZXJtaW5h
bCkuCi0gX19hbmltYXRlX18gLSBXaGV0aGVyIHRvIGFuaW1hdGUgaWYgdGhl
IGltYWdlIGlzIGFuIEFQTkcvYW5pbWF0aW5nIEdJRi4gSWYKICBmYWxzZSwg
b25seSBkaXNwbGF5IHRoZSBmaXJzdCBmcmFtZSBvciBJREFUIChEZWZhdWx0
OiBgdHJ1ZWApLgotIF9fc3BlZWRfXyAtIFNldCB0aGUgc3BlZWQgb2YgYW5p
bWF0aW9uLiBTbG93ZXI6IGAwLjAtMS4wYC4gRmFzdGVyOiBgMS0xMDAwYC4K
ICBJdCBjYW5ub3QgZ28gZmFzdGVyIHRoYW4gMSBmcmFtZSBwZXIgbWlsbGlz
ZWNvbmQsIHNvIDEwMDAgaXMgdGhlIGZhc3Rlc3QuCiAgKERlZmF1bHQ6IDEu
MCkKLSBfX29wdGltaXphdGlvbl9fIC0gYG1lbWAgb3IgYGNwdWAuIElmIG9w
dGltaXppbmcgZm9yIG1lbW9yeSwgYW5pbWF0aW9uIGZyYW1lcwogIHdpbGwg
YmUgcmVuZGVyZWQgdG8gYml0bWFwcyBfYXMgdGhlIGFuaW1hdGlvbiBwbGF5
c18sIHVzaW5nIGxlc3MgbWVtb3J5LgogIE9wdGltaXppbmcgZm9yIGNwdSB3
aWxsIHByZWNvbXBpbGUgYWxsIGJpdG1hcHMgYmVmb3JlaGFuZCwgd2hpY2gg
bWF5IGJlCiAgZmFzdGVyLCBidXQgbWlnaHQgYWxzbyBPT00gdGhlIHByb2Nl
c3Mgb24gbGFyZ2UgaW1hZ2VzLiAoRGVmYXVsdDogYG1lbWApLgoKIyMjIyMg
UHJvcGVydGllczoKCi0gSW5oZXJpdHMgYWxsIGZyb20gQm94LgotIF9faW1n
X18gLSBJbWFnZSBvYmplY3QgZnJvbSB0aGUgcG5nIHJlYWRlci4KLSBfX2lt
Zy53aWR0aF9fIC0gUGl4ZWwgd2lkdGguCi0gX19pbWcuaGVpZ2h0X18gLSBQ
aXhlbCBoZWlnaHQuCi0gX19pbWcuYm1wX18gLSBJbWFnZSBiaXRtYXAuCi0g
X19pbWcuY2VsbG1hcF9fIC0gSW1hZ2UgY2VsbG1hcCAoYml0bWFwIHNjYWxl
ZCBkb3duIHRvIGNlbGwgc2l6ZSkuCgojIyMjIyBFdmVudHM6CgotIEluaGVy
aXRzIGFsbCBmcm9tIEJveC4KCiMjIyMjIE1ldGhvZHM6CgotIEluaGVyaXRz
IGFsbCBmcm9tIEJveC4KLSBfX3NldEltYWdlKGZpbGUpX18gLSBTZXQgdGhl
IGltYWdlIGluIHRoZSBib3ggdG8gYSBuZXcgcGF0aC4gRmlsZSBjYW4gYmUg
YQogIHBhdGgsIHVybCwgb3IgYnVmZmVyLgotIF9fY2xlYXJJbWFnZSgpX18g
LSBDbGVhciB0aGUgaW1hZ2UuCi0gX19wbGF5KClfXyAtIFBsYXkgYW5pbWF0
aW9uIGlmIGl0IGhhcyBiZWVuIHBhdXNlZCBvciBzdG9wcGVkLgotIF9fcGF1
c2UoKV9fIC0gUGF1c2UgYW5pbWF0aW9uLgotIF9fc3RvcCgpX18gLSBTdG9w
IGFuaW1hdGlvbi4KCgojIyMjIE92ZXJsYXlJbWFnZSAoZnJvbSBCb3gpCgpE
aXNwbGF5IGFuIGltYWdlIGluIHRoZSB0ZXJtaW5hbCAoanBlZywgcG5nLCBn
aWYpIHVzaW5nIHczbWltZ2Rpc3BsYXkuIFJlcXVpcmVzCnczbSB0byBiZSBp
bnN0YWxsZWQuIFgxMSByZXF1aXJlZDogd29ya3MgaW4geHRlcm0sIHVyeHZ0
LCBhbmQgcG9zc2libHkgb3RoZXIKdGVybWluYWxzLgoKIyMjIyMgT3B0aW9u
czoKCi0gSW5oZXJpdHMgYWxsIGZyb20gQm94LgotIF9fZmlsZV9fIC0gUGF0
aCB0byBpbWFnZS4KLSBfX2Fuc2lfXyAtIFJlbmRlciB0aGUgZmlsZSBhcyBB
TlNJIGFydCBpbnN0ZWFkIG9mIHVzaW5nIGB3M21gIHRvIG92ZXJsYXkKICBJ
bnRlcm5hbGx5IHVzZXMgdGhlIEFOU0lJbWFnZSBlbGVtZW50LiBTZWUgdGhl
IFtBTlNJSW1hZ2UgZWxlbWVudF0oI2Fuc2lpbWFnZS1mcm9tLWJveCkgZm9y
CiAgbW9yZSBpbmZvcm1hdGlvbi9vcHRpb25zLiAoRGVmYXVsdDogYHRydWVg
KS4KLSBfX3czbV9fIC0gUGF0aCB0byB3M21pbWdkaXNwbGF5LiBJZiBhIHBy
b3BlciBgdzNtaW1nZGlzcGxheWAgcGF0aCBpcyBub3QKICBnaXZlbiwgYmxl
c3NlZCB3aWxsIHNlYXJjaCB0aGUgZW50aXJlIGRpc2sgZm9yIHRoZSBiaW5h
cnkuCi0gX19zZWFyY2hfXyAtIFdoZXRoZXIgdG8gc2VhcmNoIGAvdXNyYCwg
YC9iaW5gLCBhbmQgYC9saWJgIGZvcgogIGB3M21pbWdkaXNwbGF5YCAoRGVm
YXVsdDogYHRydWVgKS4KCiMjIyMjIFByb3BlcnRpZXM6CgotIEluaGVyaXRz
IGFsbCBmcm9tIEJveC4KCiMjIyMjIEV2ZW50czoKCi0gSW5oZXJpdHMgYWxs
IGZyb20gQm94LgoKIyMjIyMgTWV0aG9kczoKCi0gSW5oZXJpdHMgYWxsIGZy
b20gQm94LgotIF9fc2V0SW1hZ2UoaW1nLCBbY2FsbGJhY2tdKV9fIC0gU2V0
IHRoZSBpbWFnZSBpbiB0aGUgYm94IHRvIGEgbmV3IHBhdGguCi0gX19jbGVh
ckltYWdlKFtjYWxsYmFja10pX18gLSBDbGVhciB0aGUgY3VycmVudCBpbWFn
ZS4KLSBfX2ltYWdlU2l6ZShpbWcsIFtjYWxsYmFja10pX18gLSBHZXQgdGhl
IHNpemUgb2YgYW4gaW1hZ2UgZmlsZSBpbiBwaXhlbHMuCi0gX190ZXJtU2l6
ZShbY2FsbGJhY2tdKV9fIC0gR2V0IHRoZSBzaXplIG9mIHRoZSB0ZXJtaW5h
bCBpbiBwaXhlbHMuCi0gX19nZXRQaXhlbFJhdGlvKFtjYWxsYmFja10pX18g
LSBHZXQgdGhlIHBpeGVsIHRvIGNlbGwgcmF0aW8gZm9yIHRoZSB0ZXJtaW5h
bC4KLSBfTm90ZTpfIEFsbCBtZXRob2RzIGFib3ZlIGNhbiBiZSBzeW5jaHJv
bm91cyBhcyBsb25nIGFzIHRoZSBob3N0IHZlcnNpb24gb2YKICBub2RlIHN1
cHBvcnRzIGBzcGF3blN5bmNgLgoKCiMjIyMgVmlkZW8gKGZyb20gQm94KQoK
QSBib3ggd2hpY2ggc3BpbnMgdXAgYSBwc2V1ZG8gdGVybWluYWwgaW4gb3Jk
ZXIgdG8gcmVuZGVyIGEgdmlkZW8gdmlhIGBtcGxheWVyCi12byBjYWNhYCBv
ciBgbXB2IC0tdm8gY2FjYWAuIFJlcXVpcmVzIGBtcGxheWVyYCBvciBgbXB2
YCB0byBiZSBpbnN0YWxsZWQgd2l0aApsaWJjYWNhIHN1cHBvcnQuCgojIyMj
IyBPcHRpb25zOgoKLSBJbmhlcml0cyBhbGwgZnJvbSBCb3guCi0gX19maWxl
X18gLSBWaWRlbyB0byBwbGF5LgotIF9fc3RhcnRfXyAtIFN0YXJ0IHRpbWUg
aW4gc2Vjb25kcy4KCiMjIyMjIFByb3BlcnRpZXM6CgotIEluaGVyaXRzIGFs
bCBmcm9tIEJveC4KLSBfX3R0eV9fIC0gVGhlIHRlcm1pbmFsIGVsZW1lbnQg
cnVubmluZyBgbXBsYXllcmAgb3IgYG1wdmAuCgojIyMjIyBFdmVudHM6Cgot
IEluaGVyaXRzIGFsbCBmcm9tIEJveC4KCiMjIyMjIE1ldGhvZHM6CgotIElu
aGVyaXRzIGFsbCBmcm9tIEJveC4KCgojIyMjIExheW91dCAoZnJvbSBFbGVt
ZW50KQoKQSBsYXlvdXQgd2hpY2ggY2FuIHBvc2l0aW9uIGNoaWxkcmVuIGF1
dG9tYXRpY2FsbHkgYmFzZWQgb24gYSBgcmVuZGVyZXJgIG1ldGhvZAooX19l
eHBlcmltZW50YWxfXyAtIHRoZSBtZWNoYW5pY3Mgb2YgdGhpcyBlbGVtZW50
IG1heSBiZSBjaGFuZ2VkIGluIHRoZQpmdXR1cmUhKS4KCkJ5IGRlZmF1bHQs
IHRoZSBMYXlvdXQgZWxlbWVudCBhdXRvbWF0aWNhbGx5IHBvc2l0aW9ucyBj
aGlsZHJlbiBhcyBpZiB0aGV5IHdlcmUKYGRpc3BsYXk6IGlubGluZS1ibG9j
aztgIGluIENTUy4KCiMjIyMjIE9wdGlvbnM6CgotIEluaGVyaXRzIGFsbCBm
cm9tIEVsZW1lbnQuCi0gX19yZW5kZXJlcl9fIC0gQSBjYWxsYmFjayB3aGlj
aCBpcyBjYWxsZWQgcmlnaHQgYmVmb3JlIHRoZSBjaGlsZHJlbiBhcmUKICBp
dGVyYXRlZCBvdmVyIHRvIGJlIHJlbmRlcmVkLiBTaG91bGQgcmV0dXJuIGFu
IGl0ZXJhdG9yIGNhbGxiYWNrIHdoaWNoIGlzCiAgY2FsbGVkIG9uIGVhY2gg
Y2hpbGQgZWxlbWVudDogX19pdGVyYXRvcihlbCwgaSlfXy4KLSBfX2xheW91
dF9fIC0gVXNpbmcgdGhlIGRlZmF1bHQgcmVuZGVyZXIsIGl0IHByb3ZpZGVz
IHR3byBsYXlvdXRzOiBpbmxpbmUsIGFuZAogIGdyaWQuIGBpbmxpbmVgIGlz
IHRoZSBkZWZhdWx0IGFuZCB3aWxsIHJlbmRlciBha2luIHRvIGBpbmxpbmUt
YmxvY2tgLiBgZ3JpZGAKICB3aWxsIGNyZWF0ZSBhbiBhdXRvbWF0aWMgZ3Jp
ZCBiYXNlZCBvbiBlbGVtZW50IGRpbWVuc2lvbnMuIFRoZSBncmlkIGNlbGxz
JwogIHdpZHRoIGFuZCBoZWlnaHQgYXJlIGFsd2F5cyBkZXRlcm1pbmVkIGJ5
IHRoZSBsYXJnZXN0IGNoaWxkcmVuIGluIHRoZSBsYXlvdXQuCgojIyMjIyBQ
cm9wZXJ0aWVzOgoKLSBJbmhlcml0cyBhbGwgZnJvbSBFbGVtZW50LgoKIyMj
IyMgRXZlbnRzOgoKLSBJbmhlcml0cyBhbGwgZnJvbSBFbGVtZW50LgoKIyMj
IyMgTWV0aG9kczoKCi0gSW5oZXJpdHMgYWxsIGZyb20gRWxlbWVudC4KLSBf
X3JlbmRlcmVyKGNvb3JkcylfXyAtIEEgY2FsbGJhY2sgd2hpY2ggaXMgY2Fs
bGVkIHJpZ2h0IGJlZm9yZSB0aGUgY2hpbGRyZW4KICBhcmUgaXRlcmF0ZWQg
b3ZlciB0byBiZSByZW5kZXJlZC4gU2hvdWxkIHJldHVybiBhbiBpdGVyYXRv
ciBjYWxsYmFjayB3aGljaCBpcwogIGNhbGxlZCBvbiBlYWNoIGNoaWxkIGVs
ZW1lbnQ6IF9faXRlcmF0b3IoZWwsIGkpX18uCi0gX19pc1JlbmRlcmVkKGVs
KV9fIC0gQ2hlY2sgdG8gc2VlIGlmIGEgcHJldmlvdXMgY2hpbGQgZWxlbWVu
dCBoYXMgYmVlbgogIHJlbmRlcmVkIGFuZCBpcyB2aXNpYmxlIG9uIHNjcmVl
bi4gVGhpcyBpcyBfX29ubHlfXyB1c2VmdWwgZm9yIGNoZWNraW5nIGNoaWxk
CiAgZWxlbWVudHMgdGhhdCBoYXZlIGFscmVhZHkgYmVlbiBhdHRlbXB0ZWQg
dG8gYmUgcmVuZGVyZWQhIHNlZSB0aGUgZXhhbXBsZQogIGJlbG93LgotIF9f
Z2V0TGFzdChpKV9fIC0gR2V0IHRoZSBsYXN0IHJlbmRlcmVkIGFuZCB2aXNp
YmxlIGNoaWxkIGVsZW1lbnQgYmFzZWQgb24gYW4KICBpbmRleC4gVGhpcyBp
cyB1c2VmdWwgZm9yIGJhc2luZyB0aGUgcG9zaXRpb24gb2YgdGhlIGN1cnJl
bnQgY2hpbGQgZWxlbWVudCBvbgogIHRoZSBwb3NpdGlvbiBvZiB0aGUgbGFz
dCBjaGlsZCBlbGVtZW50LgotIF9fZ2V0TGFzdENvb3JkcyhpKV9fIC0gR2V0
IHRoZSBsYXN0IHJlbmRlcmVkIGFuZCB2aXNpYmxlIGNoaWxkIGVsZW1lbnQg
Y29vcmRzCiAgYmFzZWQgb24gYW4gaW5kZXguIFRoaXMgaXMgdXNlZnVsIGZv
ciBiYXNpbmcgdGhlIHBvc2l0aW9uIG9mIHRoZSBjdXJyZW50CiAgY2hpbGQg
ZWxlbWVudCBvbiB0aGUgcG9zaXRpb24gb2YgdGhlIGxhc3QgY2hpbGQgZWxl
bWVudC4gU2VlIHRoZSBleGFtcGxlCiAgYmVsb3cuCgojIyMjIyBSZW5kZXJp
bmcgYSBMYXlvdXQgZm9yIGNoaWxkIGVsZW1lbnRzCgojIyMjIyMgTm90ZXMK
CllvdSBtdXN0IF9fYWx3YXlzX18gZ2l2ZSBgTGF5b3V0YCBhIHdpZHRoIGFu
ZCBoZWlnaHQuIFRoaXMgaXMgYSBjaGlja2VuLWFuZC1lZ2cKcHJvYmxlbTog
Ymxlc3NlZCBjYW5ub3QgY2FsY3VsYXRlIHRoZSB3aWR0aCBhbmQgaGVpZ2h0
IGR5bmFtaWNhbGx5IF9iZWZvcmVfIHRoZQpjaGlsZHJlbiBhcmUgcG9zaXRp
b25lZC4KCmBib3JkZXJgIGFuZCBgcGFkZGluZ2AgYXJlIGFscmVhZHkgY2Fs
Y3VsYXRlZCBpbnRvIHRoZSBgY29vcmRzYCBvYmplY3QgdGhlCmByZW5kZXJl
cmAgcmVjZWl2ZXMsIHNvIHRoZXJlIGlzIG5vIG5lZWQgdG8gYWNjb3VudCBm
b3IgaXQgaW4geW91ciByZW5kZXJlci4KClRyeSB0byBzZXQgcG9zaXRpb24g
Zm9yIGNoaWxkcmVuIHVzaW5nIGBlbC5wb3NpdGlvbmAuIGBlbC5wb3NpdGlv
bmAgaXMgdGhlIG1vc3QKcHJpbWl0aXZlICJ0by1iZS1yZW5kZXJlZCIgd2F5
IHRvIHNldCBjb29yZGluYXRlcy4gU2V0dGluZyBgZWwubGVmdGAgZGlyZWN0
bHkKaGFzIG1vcmUgZHluYW1pYyBiZWhhdmlvciB3aGljaCBtYXkgaW50ZXJm
ZXJlIHdpdGggcmVuZGVyaW5nLgoKU29tZSBkZWZpbml0aW9ucyBmb3IgYGNv
b3Jkc2AgKG90aGVyd2lzZSBrbm93biBhcyBgZWwubHBvc2ApOgoKLSBgY29v
cmRzLnhpYCAtIHRoZSBhYnNvbHV0ZSB4IGNvb3JkaW5hdGUgb2YgdGhlIF9f
bGVmdF9fIHNpZGUgb2YgYSByZW5kZXJlZAogIGVsZW1lbnQuIEl0IGlzIGFi
c29sdXRlOiByZWxhdGl2ZSB0byB0aGUgc2NyZWVuIGl0c2VsZi4KLSBgY29v
cmRzLnhsYCAtIHRoZSBhYnNvbHV0ZSB4IGNvb3JkaW5hdGUgb2YgdGhlIF9f
cmlnaHRfXyBzaWRlIG9mIGEgcmVuZGVyZWQKICBlbGVtZW50LiBJdCBpcyBh
YnNvbHV0ZTogcmVsYXRpdmUgdG8gdGhlIHNjcmVlbiBpdHNlbGYuCi0gYGNv
b3Jkcy55aWAgLSB0aGUgYWJzb2x1dGUgeSBjb29yZGluYXRlIG9mIHRoZSBf
X3RvcF9fIHNpZGUgb2YgYSByZW5kZXJlZAogIGVsZW1lbnQuIEl0IGlzIGFi
c29sdXRlOiByZWxhdGl2ZSB0byB0aGUgc2NyZWVuIGl0c2VsZi4KLSBgY29v
cmRzLnlsYCAtIHRoZSBhYnNvbHV0ZSB5IGNvb3JkaW5hdGUgb2YgdGhlIF9f
Ym90dG9tX18gc2lkZSBvZiBhIHJlbmRlcmVkCiAgZWxlbWVudC4gSXQgaXMg
YWJzb2x1dGU6IHJlbGF0aXZlIHRvIHRoZSBzY3JlZW4gaXRzZWxmLgoKTm90
ZSBhZ2FpbjogdGhlIGBjb29yZHNgIHRoZSByZW5kZXJlciByZWNlaXZlcyBm
b3IgdGhlIExheW91dCBhbHJlYWR5IGhhcwpib3JkZXIgYW5kIHBhZGRpbmcg
c3VidHJhY3RlZCwgc28geW91IGRvIG5vdCBoYXZlIHRvIGFjY291bnQgZm9y
IHRoZXNlLiBUaGUKY2hpbGRyZW4gZG8gbm90LgoKIyMjIyMjIEV4YW1wbGUK
CkhlcmUgaXMgYW4gZXhhbXBsZSBvZiBob3cgdG8gcHJvdmlkZSBhIHJlbmRl
cmVyLiBOb3RlIHRoYXQgdGhpcyBpcyBhbHNvIHRoZQpkZWZhdWx0IHJlbmRl
cmVyIGlmIG5vbmUgaXMgcHJvdmlkZWQuIFRoaXMgcmVuZGVyZXIgd2lsbCBy
ZW5kZXIgZWFjaCBjaGlsZCBhcwp0aG91Z2ggdGhleSB3ZXJlIGBkaXNwbGF5
OiBpbmxpbmUtYmxvY2s7YCBpbiBDU1MsIGFzIGlmIHRoZXJlIHdlcmUgYQpk
eW5hbWljYWxseSBzaXplZCBob3Jpem9udGFsIGdyaWQgZnJvbSBsZWZ0IHRv
IHJpZ2h0LgoKYGBgIGpzCnZhciBsYXlvdXQgPSBibGVzc2VkLmxheW91dCh7
CiAgcGFyZW50OiBzY3JlZW4sCiAgdG9wOiAnY2VudGVyJywKICBsZWZ0OiAn
Y2VudGVyJywKICB3aWR0aDogJzUwJScsCiAgaGVpZ2h0OiAnNTAlJywKICBi
b3JkZXI6ICdsaW5lJywKICBzdHlsZTogewogICAgYmc6ICdyZWQnLAogICAg
Ym9yZGVyOiB7CiAgICAgIGZnOiAnYmx1ZScKICAgIH0KICB9LAogIC8vIE5P
VEU6IFRoaXMgaXMgYWxyZWFkeSB0aGUgZGVmYXVsdCByZW5kZXJlciBpZiBu
b25lIGlzIHByb3ZpZGVkIQogIHJlbmRlcmVyOiBmdW5jdGlvbihjb29yZHMp
IHsKICAgIHZhciBzZWxmID0gdGhpczsKCiAgICAvLyBUaGUgY29vcmRpbmF0
ZXMgb2YgdGhlIGxheW91dCBlbGVtZW50CiAgICB2YXIgd2lkdGggPSBjb29y
ZHMueGwgLSBjb29yZHMueGkKICAgICAgLCBoZWlnaHQgPSBjb29yZHMueWwg
LSBjb29yZHMueWkKICAgICAgLCB4aSA9IGNvb3Jkcy54aQogICAgICAsIHhs
ID0gY29vcmRzLnhsCiAgICAgICwgeWkgPSBjb29yZHMueWkKICAgICAgLCB5
bCA9IGNvb3Jkcy55bDsKCiAgICAvLyBUaGUgY3VycmVudCByb3cgb2Zmc2V0
IGluIGNlbGxzICh3aGljaCByb3cgYXJlIHdlIG9uPykKICAgIHZhciByb3dP
ZmZzZXQgPSAwOwoKICAgIC8vIFRoZSBpbmRleCBvZiB0aGUgZmlyc3QgY2hp
bGQgaW4gdGhlIHJvdwogICAgdmFyIHJvd0luZGV4ID0gMDsKCiAgICByZXR1
cm4gZnVuY3Rpb24gaXRlcmF0b3IoZWwsIGkpIHsKICAgICAgLy8gTWFrZSBv
dXIgY2hpbGRyZW4gc2hyaW5rYWJsZS4gSWYgdGhleSBkb24ndCBoYXZlIGEg
aGVpZ2h0LCBmb3IKICAgICAgLy8gZXhhbXBsZSwgY2FsY3VsYXRlIGl0IGZv
ciB0aGVtLgogICAgICBlbC5zaHJpbmsgPSB0cnVlOwoKICAgICAgLy8gRmlu
ZCB0aGUgcHJldmlvdXMgcmVuZGVyZWQgY2hpbGQncyBjb29yZGluYXRlcwog
ICAgICB2YXIgbGFzdCA9IHNlbGYuZ2V0TGFzdENvb3JkcyhpKTsKCiAgICAg
IC8vIElmIHRoZXJlIGlzIG5vIHByZXZpb3VzbHkgcmVuZGVyZWQgZWxlbWVu
dCwgd2UgYXJlIG9uIHRoZSBmaXJzdCBjaGlsZC4KICAgICAgaWYgKCFsYXN0
KSB7CiAgICAgICAgZWwucG9zaXRpb24ubGVmdCA9IDA7CiAgICAgICAgZWwu
cG9zaXRpb24udG9wID0gMDsKICAgICAgfSBlbHNlIHsKICAgICAgICAvLyBP
dGhlcndpc2UsIGZpZ3VyZSBvdXQgd2hlcmUgdG8gcGxhY2UgdGhpcyBjaGls
ZC4gV2UnbGwgc3RhcnQgYnkKICAgICAgICAvLyBzZXR0aW5nIGl0J3MgYGxl
ZnRgL2B4YCBjb29yZGluYXRlIHRvIHJpZ2h0IGFmdGVyIHRoZSBwcmV2aW91
cwogICAgICAgIC8vIHJlbmRlcmVkIGVsZW1lbnQuIFRoaXMgY2hpbGQgd2ls
bCBlbmQgdXAgZGlyZWN0bHkgdG8gdGhlIHJpZ2h0IG9mIGl0LgogICAgICAg
IGVsLnBvc2l0aW9uLmxlZnQgPSBsYXN0LnhsIC0geGk7CgogICAgICAgIC8v
IElmIG91ciBjaGlsZCBkb2VzIG5vdCBvdmVybGFwIHRoZSByaWdodCBzaWRl
IG9mIHRoZSBMYXlvdXQsIHNldCBpdCdzCiAgICAgICAgLy8gYHRvcGAvYHlg
IHRvIHRoZSBjdXJyZW50IGByb3dPZmZzZXRgICh0aGUgY29vcmRpbmF0ZSBm
b3IgdGhlIGN1cnJlbnQKICAgICAgICAvLyByb3cpLgogICAgICAgIGlmIChl
bC5wb3NpdGlvbi5sZWZ0ICsgZWwud2lkdGggPD0gd2lkdGgpIHsKICAgICAg
ICAgIGVsLnBvc2l0aW9uLnRvcCA9IHJvd09mZnNldDsKICAgICAgICB9IGVs
c2UgewogICAgICAgICAgLy8gT3RoZXJ3aXNlIHdlIG5lZWQgdG8gc3RhcnQg
YSBuZXcgcm93IGFuZCBjYWxjdWxhdGUgYSBuZXcKICAgICAgICAgIC8vIGBy
b3dPZmZzZXRgIGFuZCBgcm93SW5kZXhgICh0aGUgaW5kZXggb2YgdGhlIGNo
aWxkIG9uIHRoZSBjdXJyZW50CiAgICAgICAgICAvLyByb3cpLgogICAgICAg
ICAgcm93T2Zmc2V0ICs9IHNlbGYuY2hpbGRyZW4uc2xpY2Uocm93SW5kZXgs
IGkpLnJlZHVjZShmdW5jdGlvbihvdXQsIGVsKSB7CiAgICAgICAgICAgIGlm
ICghc2VsZi5pc1JlbmRlcmVkKGVsKSkgcmV0dXJuIG91dDsKICAgICAgICAg
ICAgb3V0ID0gTWF0aC5tYXgob3V0LCBlbC5scG9zLnlsIC0gZWwubHBvcy55
aSk7CiAgICAgICAgICAgIHJldHVybiBvdXQ7CiAgICAgICAgICB9LCAwKTsK
ICAgICAgICAgIHJvd0luZGV4ID0gaTsKICAgICAgICAgIGVsLnBvc2l0aW9u
LmxlZnQgPSAwOwogICAgICAgICAgZWwucG9zaXRpb24udG9wID0gcm93T2Zm
c2V0OwogICAgICAgIH0KICAgICAgfQoKICAgICAgLy8gSWYgb3VyIGNoaWxk
IG92ZXJmbG93cyB0aGUgTGF5b3V0LCBkbyBub3QgcmVuZGVyIGl0IQogICAg
ICAvLyBEaXNhYmxlIHRoaXMgZmVhdHVyZSBmb3Igbm93LgogICAgICBpZiAo
ZWwucG9zaXRpb24udG9wICsgZWwuaGVpZ2h0ID4gaGVpZ2h0KSB7CiAgICAg
ICAgLy8gUmV0dXJuaW5nIGZhbHNlIHRlbGxzIGJsZXNzZWQgdG8gaWdub3Jl
IHRoaXMgY2hpbGQuCiAgICAgICAgLy8gcmV0dXJuIGZhbHNlOwogICAgICB9
CiAgICB9OwogIH0KfSk7Cgpmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKysp
IHsKICBibGVzc2VkLmJveCh7CiAgICBwYXJlbnQ6IGxheW91dCwKICAgIHdp
ZHRoOiBpICUgMiA9PT0gMCA/IDEwIDogMjAsCiAgICBoZWlnaHQ6IGkgJSAy
ID09PSAwID8gNSA6IDEwLAogICAgYm9yZGVyOiAnbGluZScKICB9KTsKfQpg
YGAKCgojIyMgT3RoZXIKCgojIyMjIEhlbHBlcnMKCkFsbCBoZWxwZXJzIHJl
c2lkZSBvbiBgYmxlc3NlZC5oZWxwZXJzYCBvciBgYmxlc3NlZGAuCgotIF9f
bWVyZ2UoYSwgYilfXyAtIE1lcmdlIG9iamVjdHMgYGFgIGFuZCBgYmAgaW50
byBvYmplY3QgYGFgLgotIF9fYXNvcnQob2JqKV9fIC0gU29ydCBhcnJheSBh
bHBoYWJldGljYWxseSBieSBgbmFtZWAgcHJvcC4KLSBfX2hzb3J0KG9iailf
XyAtIFNvcnQgYXJyYXkgbnVtZXJpY2FsbHkgYnkgYGluZGV4YCBwcm9wLgot
IF9fZmluZEZpbGUoc3RhcnQsIHRhcmdldClfXyAtIEZpbmQgYSBmaWxlIGF0
IGBzdGFydGAgZGlyZWN0b3J5IHdpdGggbmFtZQogIGB0YXJnZXRgLgotIF9f
ZXNjYXBlKHRleHQpX18gLSBFc2NhcGUgY29udGVudCdzIHRhZ3MgdG8gYmUg
cGFzc2VkIGludG8gYGVsLnNldENvbnRlbnQoKWAuCiAgRXhhbXBsZTogYGJv
eC5zZXRDb250ZW50KCdlc2NhcGVkIHRhZzogJyArIGJsZXNzZWQuZXNjYXBl
KCd7Ym9sZH17L2JvbGR9JykpO2AKLSBfX3BhcnNlVGFncyh0ZXh0KV9fIC0g
UGFyc2UgdGFncyBpbnRvIFNHUiBlc2NhcGUgY29kZXMuCi0gX19nZW5lcmF0
ZVRhZ3Moc3R5bGUsIHRleHQpX18gLSBHZW5lcmF0ZSB0ZXh0IHRhZ3MgYmFz
ZWQgb24gYHN0eWxlYCBvYmplY3QuCi0gX19hdHRyVG9CaW5hcnkoc3R5bGUs
IGVsZW1lbnQpX18gLSBDb252ZXJ0IGBzdHlsZWAgYXR0cmlidXRlcyB0byBi
aW5hcnkKICBmb3JtYXQuCi0gX19zdHJpcFRhZ3ModGV4dClfXyAtIFN0cmlw
IHRleHQgb2YgdGFncyBhbmQgU0dSIHNlcXVlbmNlcy4KLSBfX2NsZWFuVGFn
cyh0ZXh0KV9fIC0gU3RyaXAgdGV4dCBvZiB0YWdzLCBTR1IgZXNjYXBlIGNv
ZGUsIGFuZAogIGxlYWRpbmcvdHJhaWxpbmcgd2hpdGVzcGFjZS4KLSBfX2Ry
b3BVbmljb2RlKHRleHQpX18gLSBEcm9wIHRleHQgb2YgYW55ID5VK0ZGRkYg
Y2hhcmFjdGVycy4KCgojIyMgTWVjaGFuaWNzCgoKIyMjIyBDb250ZW50ICYg
VGFncwoKRXZlcnkgZWxlbWVudCBjYW4gaGF2ZSB0ZXh0IGNvbnRlbnQgdmlh
IGBzZXRDb250ZW50YC4gSWYgYHRhZ3M6IHRydWVgIHdhcwpwYXNzZWQgdG8g
dGhlIGVsZW1lbnQncyBjb25zdHJ1Y3RvciwgdGhlIGNvbnRlbnQgY2FuIGNv
bnRhaW4gdGFncy4gRm9yIGV4YW1wbGU6CgpgYGAganMKYm94LnNldENvbnRl
bnQoJ2hlbGxvIHtyZWQtZmd9e2dyZWVuLWJnfXtib2xkfXdvcmxkey9ib2xk
fXsvZ3JlZW4tYmd9ey9yZWQtZmd9Jyk7CmBgYAoKVG8gbWFrZSB0aGlzIG1v
cmUgY29uY2lzZSBgey99YCBjYW5jZWxzIGFsbCBjaGFyYWN0ZXIgYXR0cmli
dXRlcy4KCmBgYCBqcwpib3guc2V0Q29udGVudCgnaGVsbG8ge3JlZC1mZ317
Z3JlZW4tYmd9e2JvbGR9d29ybGR7L30nKTsKYGBgCgoKIyMjIyMgQ29sb3Jz
CgpCbGVzc2VkIHRhZ3Mgc3VwcG9ydCB0aGUgYmFzaWMgMTYgY29sb3JzIGZv
ciBjb2xvcnMsIGFzIHdlbGwgYXMgdXAgdG8gMjU2CmNvbG9ycy4KCmBgYCBq
cwpib3guc2V0Q29udGVudCgnaGVsbG8ge3JlZC1mZ317Z3JlZW4tYmd9d29y
bGR7L30nKTsKYGBgCgpUYWdzIGNhbiBhbHNvIHVzZSBoZXggY29sb3JzICh3
aGljaCB3aWxsIGJlIHJlZHVjZWQgdG8gdGhlIG1vc3QgYWNjdXJhdGUKdGVy
bWluYWwgY29sb3IpOgoKYGBgIGpzCmJveC5zZXRDb250ZW50KCdoZWxsbyB7
I2ZmMDAwMC1mZ317IzAwZmYwMC1iZ313b3JsZHsvfScpOwpgYGAKCgojIyMj
IyBBdHRyaWJ1dGVzCgpCbGVzc2VkIHN1cHBvcnRzIGFsbCB0ZXJtaW5hbCBh
dHRyaWJ1dGVzLCBpbmNsdWRpbmcgYGJvbGRgLCBgdW5kZXJsaW5lYCwKYGJs
aW5rYCwgYGludmVyc2VgLCBhbmQgYGludmlzaWJsZWAuCgpgYGAganMKYm94
LnNldENvbnRlbnQoJ2hlbGxvIHtib2xkfXdvcmxkey9ib2xkfScpOwpgYGAK
CgojIyMjIyBBbGlnbm1lbnQKCk5ld2xpbmVzIGFuZCBhbGlnbm1lbnQgYXJl
IGFsc28gcG9zc2libGUgaW4gY29udGVudC4KCmBgYCBqcwpib3guc2V0Q29u
dGVudCgnaGVsbG9cbicKICArICd7cmlnaHR9d29ybGR7L3JpZ2h0fVxuJwog
ICsgJ3tjZW50ZXJ9Zm9vey9jZW50ZXJ9XG4nKTsKICArICdsZWZ0e3x9cmln
aHQnKTsKYGBgCgpUaGlzIHdpbGwgcHJvZHVjZSBhIGJveCB0aGF0IGxvb2tz
IGxpa2U6CgpgYGAKfCBoZWxsbyAgICAgICAgICAgICAgICAgfAp8ICAgICAg
ICAgICAgICAgICB3b3JsZCB8CnwgICAgICAgICAgZm9vICAgICAgICAgIHwK
fCBsZWZ0ICAgICAgICAgICAgcmlnaHQgfApgYGAKCgojIyMjIyBFc2NhcGlu
ZwoKRXNjYXBpbmcgY2FuIGVpdGhlciBiZSBkb25lIHVzaW5nIGBibGVzc2Vk
LmVzY2FwZSgpYAoKYGBgCmJveC5zZXRDb250ZW50KCdoZXJlIGlzIGFuIGVz
Y2FwZWQgdGFnOiAnICsgYmxlc3NlZC5lc2NhcGUoJ3tib2xkfXsvYm9sZH0n
KSk7CmBgYAoKT3Igd2l0aCB0aGUgc3BlY2lhbCBge29wZW59YCBhbmQgYHtj
bG9zZX1gIHRhZ3M6CgpgYGAKYm94LnNldENvbnRlbnQoJ2hlcmUgaXMgYW4g
ZXNjYXBlZCB0YWc6IHtvcGVufWJvbGR7Y2xvc2V9e29wZW59L2JvbGR7Y2xv
c2V9Jyk7CmBgYAoKRWl0aGVyIHdpbGwgcHJvZHVjZToKCmBgYApoZXJlIGlz
IGFuIGVzY2FwZWQgdGFnOiB7Ym9sZH17L2JvbGR9CmBgYAoKCiMjIyMjIFNH
UiBTZXF1ZW5jZXMKCkNvbnRlbnQgY2FuIGFsc28gaGFuZGxlIFNHUiBlc2Nh
cGUgY29kZXMuIFRoaXMgbWVhbnMgaWYgeW91IGdvdCBvdXRwdXQgZnJvbSBh
CnByb2dyYW0sIHNheSBgZ2l0IGxvZ2AgZm9yIGV4YW1wbGUsIHlvdSBjYW4g
ZmVlZCBpdCBkaXJlY3RseSB0byBhbiBlbGVtZW50J3MKY29udGVudCBhbmQg
dGhlIGNvbG9ycyB3aWxsIGJlIHBhcnNlZCBhcHByb3ByaWF0ZWx5LgoKVGhp
cyBtZWFucyB0aGF0IHdoaWxlIGB7cmVkLWZnfWZvb3svcmVkLWZnfWAgcHJv
ZHVjZXMgYF5bWzMxbWZvb15bWzM5bWAsIHlvdQpjb3VsZCBqdXN0IGZlZWQg
YF5bWzMxbWZvb15bWzM5bWAgZGlyZWN0bHkgdG8gdGhlIGNvbnRlbnQuCgoK
IyMjIyBTdHlsZQoKVGhlIHN0eWxlIG9wdGlvbiBjb250cm9scyBtb3N0IG9m
IHRoZSB2aXN1YWwgYXNwZWN0cyBvZiBhbiBlbGVtZW50LgoKYGBgIGpzCiAg
c3R5bGU6IHsKICAgIGZnOiAnYmx1ZScsCiAgICBiZzogJ2JsYWNrJywKICAg
IGJvbGQ6IHRydWUsCiAgICB1bmRlcmxpbmU6IGZhbHNlLAogICAgYmxpbms6
IGZhbHNlLAogICAgaW52ZXJzZTogZmFsc2UsCiAgICBpbnZpc2libGU6IGZh
bHNlLAogICAgdHJhbnNwYXJlbnQ6IGZhbHNlLAogICAgYm9yZGVyOiB7CiAg
ICAgIGZnOiAnYmx1ZScsCiAgICAgIGJnOiAncmVkJwogICAgfSwKICAgIHNj
cm9sbGJhcjogewogICAgICBiZzogJ2JsdWUnCiAgICB9LAogICAgZm9jdXM6
IHsKICAgICAgYmc6ICdyZWQnCiAgICB9LAogICAgaG92ZXI6IHsKICAgICAg
Ymc6ICdyZWQnCiAgICB9CiAgfQpgYGAKCgojIyMjIyBDb2xvcnMKCkNvbG9y
cyBjYW4gYmUgdGhlIG5hbWVzIG9mIGFueSBvZiB0aGUgMTYgYmFzaWMgdGVy
bWluYWwgY29sb3JzLCBhbG9uZyB3aXRoIGhleAp2YWx1ZXMgKGUuZy4gYCNm
ZjAwMDBgKSBmb3IgMjU2IGNvbG9yIHRlcm1pbmFscy4gSWYgMjU2IG9yIDg4
IGNvbG9ycyBpcyBub3QKc3VwcG9ydGVkLiBCbGVzc2VkIHdpdGggcmVkdWNl
IHRoZSBjb2xvciB0byB3aGF0ZXZlciBpcyBhdmFpbGFibGUuCgoKIyMjIyMg
QXR0cmlidXRlcwoKQmxlc3NlZCBzdXBwb3J0cyBhbGwgdGVybWluYWwgYXR0
cmlidXRlcywgaW5jbHVkaW5nIGBib2xkYCwgYHVuZGVybGluZWAsCmBibGlu
a2AsIGBpbnZlcnNlYCwgYW5kIGBpbnZpc2libGVgLiBBdHRyaWJ1dGVzIGFy
ZSByZXByZXNlbnRlZCBhcyBib29scyBpbiB0aGUKYHN0eWxlYCBvYmplY3Qu
CgoKIyMjIyMgVHJhbnNwYXJlbmN5CgpCbGVzc2VkIGNhbiBzZXQgdGhlIG9w
YWNpdHkgb2YgYW4gZWxlbWVudCB0byA1MCUgdXNpbmcgYHN0eWxlLnRyYW5z
cGFyZW50ID0KdHJ1ZTtgLiBXaGlsZSB0aGlzIHNlZW1zIGxpa2UgaXQgbm9y
bWFsbHkgc2hvdWxkbid0IGJlIHBvc3NpYmxlIGluIGEgdGVybWluYWwsCmJs
ZXNzZWQgd2lsbCB1c2UgYSBjb2xvciBibGVuZGluZyBhbGdvcml0aG0gdG8g
YmxlbmQgdGhlIGVsZW1lbnQgb2YgdGhlCmZvcmVtb3N0IGVsZW1lbnQgd2l0
aCB0aGUgYmFja2dyb3VuZCBiZWhpbmQgaXQuIE9idmlvdXNseSBjaGFyYWN0
ZXJzIGNhbm5vdCBiZQpibGVuZGVkLCBidXQgYmFja2dyb3VuZCBjb2xvcnMg
Y2FuLgoKCiMjIyMjIFNoYWRvdwoKVHJhbnNsdWNlbnQgc2hhZG93cyBhcmUg
YWxzbyBhbiBvcHRpb24gd2hlbiBpdCBjb21lcyB0byBzdHlsaW5nIGFuIGVs
ZW1lbnQuClRoaXMgb3B0aW9uIHdpbGwgY3JlYXRlIGEgNTAlIG9wYWNpdHkg
Mi1jZWxsIHdpZGUsIDEtY2VsbCBoaWdoIHNoYWRvdyBvZmZzZXQgdG8KdGhl
IGJvdHRvbS1yaWdodC4KCmBgYCBqcwpzaGFkb3c6IHRydWUKYGBgCgoKIyMj
IyMgRWZmZWN0cwoKQmxlc3NlZCBzdXBwb3J0cyBob3ZlciBhbmQgZm9jdXMg
c3R5bGVzLiAoSG92ZXIgaXMgb25seSB1c2VmdWwgaXMgbW91c2UgaW5wdXQK
aXMgZW5hYmxlZCkuCgpgYGAganMKICBzdHlsZTogewogICAgaG92ZXI6IHsK
ICAgICAgYmc6ICdyZWQnCiAgICB9LAogICAgZm9jdXM6IHsKICAgICAgYm9y
ZGVyOiB7CiAgICAgICAgZmc6ICdibHVlJwogICAgICB9CiAgICB9CiAgfQpg
YGAKCgojIyMjIyBTY3JvbGxiYXIKCk9uIHNjcm9sbGFibGUgZWxlbWVudHMs
IGJsZXNzZWQgd2lsbCBzdXBwb3J0IHN0eWxlIG9wdGlvbnMgZm9yIHRoZSBz
Y3JvbGxiYXIsCnN1Y2ggYXM6CgpgYGAganMKc3R5bGU6IHsKICBzY3JvbGxi
YXI6IHsKICAgIGJnOiAncmVkJywKICAgIGZnOiAnYmx1ZScKICB9Cn0KYGBg
CgpBcyBhIG1haW4gb3B0aW9uLCBzY3JvbGxiYXIgd2lsbCBlaXRoZXIgdGFr
ZSBhIGJvb2wgb3IgYW4gb2JqZWN0OgoKYGBgIGpzCnNjcm9sbGJhcjogewog
IGNoOiAnICcKfQpgYGAKCk9yOgoKYGBgIGpzCnNjcm9sbGJhcjogdHJ1ZQpg
YGAKCgojIyMjIEV2ZW50cwoKRXZlbnRzIGluIEJsZXNzZWQgd29yayBzaW1p
bGFyIHRvIHRoZSB0cmFkaXRpb25hbCBub2RlLmpzIG1vZGVsLCB3aXRoIG9u
ZQppbXBvcnRhbnQgZGlmZmVyZW5jZTogdGhleSBoYXZlIGEgY29uY2VwdCBv
ZiBhIHRyZWUgYW5kIGV2ZW50IGJ1YmJsaW5nLgoKCiMjIyMjIEV2ZW50IEJ1
YmJsaW5nCgpFdmVudHMgY2FuIGJ1YmJsZSBpbiBibGVzc2VkLiBGb3IgZXhh
bXBsZToKClJlY2VpdmluZyBhbGwgY2xpY2sgZXZlbnRzIGZvciBgYm94YCAo
YSBub3JtYWwgZXZlbnQgbGlzdGVuZXIpOgoKYGBgIGpzCmJveC5vbignY2xp
Y2snLCBmdW5jdGlvbihtb3VzZSkgewogIGJveC5zZXRDb250ZW50KCdZb3Ug
Y2xpY2tlZCAnICsgbW91c2UueCArICcsICcgKyBtb3VzZS55ICsgJy4nKTsK
ICBzY3JlZW4ucmVuZGVyKCk7Cn0pOwpgYGAKClJlY2VpdmluZyBhbGwgY2xp
Y2sgZXZlbnRzIGZvciBgYm94YCwgYXMgd2VsbCBhcyBhbGwgb2YgaXRzIGNo
aWxkcmVuOgoKYGBgIGpzCmJveC5vbignZWxlbWVudCBjbGljaycsIGZ1bmN0
aW9uKGVsLCBtb3VzZSkgewogIGJveC5zZXRDb250ZW50KCdZb3UgY2xpY2tl
ZCAnCiAgICArIGVsLnR5cGUgKyAnIGF0ICcgKyBtb3VzZS54ICsgJywgJyAr
IG1vdXNlLnkgKyAnLicpOwogIHNjcmVlbi5yZW5kZXIoKTsKICBpZiAoZWwg
PT09IGJveCkgewogICAgcmV0dXJuIGZhbHNlOyAvLyBDYW5jZWwgcHJvcGFn
YXRpb24uCiAgfQp9KTsKYGBgCgpgZWxgIGdldHMgcGFzc2VkIGluIGFzIHRo
ZSBmaXJzdCBhcmd1bWVudC4gSXQgcmVmZXJzIHRvIHRoZSB0YXJnZXQgZWxl
bWVudCB0aGUKZXZlbnQgb2NjdXJyZWQgb24uIFJldHVybmluZyBgZmFsc2Vg
IHdpbGwgY2FuY2VsIHByb3BhZ2F0aW9uIHVwIHRoZSB0cmVlLgoKCiMjIyMg
UG9zaXRpb25pbmcKCk9mZnNldHMgbWF5IGJlIGEgbnVtYmVyLCBhIHBlcmNl
bnRhZ2UgKGUuZy4gYDUwJWApLCBvciBhIGtleXdvcmQgKGUuZy4KYGNlbnRl
cmApLgoKRGltZW5zaW9ucyBtYXkgYmUgYSBudW1iZXIsIG9yIGEgcGVyY2Vu
dGFnZSAoZS5nLiBgNTAlYCkuCgpQb3NpdGlvbnMgYXJlIHRyZWF0ZWQgYWxt
b3N0IF9leGFjdGx5XyB0aGUgc2FtZSBhcyB0aGV5IGFyZSBpbiBDU1MvQ1NT
T00gd2hlbgphbiBlbGVtZW50IGhhcyB0aGUgYHBvc2l0aW9uOiBhYnNvbHV0
ZWAgQ1NTIHByb3BlcnR5LgoKV2hlbiBhbiBlbGVtZW50IGlzIGNyZWF0ZWQs
IGl0IGNhbiBiZSBnaXZlbiBjb29yZGluYXRlcyBpbiBpdHMgY29uc3RydWN0
b3I6CgpgYGAganMKdmFyIGJveCA9IGJsZXNzZWQuYm94KHsKICBsZWZ0OiAn
Y2VudGVyJywKICB0b3A6ICdjZW50ZXInLAogIGJnOiAneWVsbG93JywKICB3
aWR0aDogJzUwJScsCiAgaGVpZ2h0OiAnNTAlJwp9KTsKYGBgCgpUaGlzIHRl
bGxzIGJsZXNzZWQgdG8gY3JlYXRlIGEgYm94LCBwZXJmZWN0bHkgY2VudGVy
ZWQgX19yZWxhdGl2ZSB0byBpdHMKcGFyZW50X18sIDUwJSBhcyB3aWRlIGFu
ZCA1MCUgYXMgdGFsbCBhcyBpdHMgcGFyZW50LgoKUGVyY2VudGFnZXMgY2Fu
IGFsc28gaGF2ZSBvZmZzZXRzIGFwcGxpZWQgdG8gdGhlbToKCmBgYCBqcwog
IC4uLgogIGhlaWdodDogJzUwJS0xJywKICBsZWZ0OiAnNDUlKzEnLAogIC4u
LgpgYGAKClRvIGFjY2VzcyB0aGUgY2FsY3VsYXRlZCBvZmZzZXRzLCByZWxh
dGl2ZSB0byB0aGUgcGFyZW50OgoKYGBgIGpzCmNvbnNvbGUubG9nKGJveC5s
ZWZ0KTsKY29uc29sZS5sb2coYm94LnRvcCk7CmBgYAoKVG8gYWNjZXNzIHRo
ZSBjYWxjdWxhdGVkIG9mZnNldHMsIGFic29sdXRlIChyZWxhdGl2ZSB0byB0
aGUgc2NyZWVuKToKCmBgYCBqcwpjb25zb2xlLmxvZyhib3guYWxlZnQpOwpj
b25zb2xlLmxvZyhib3guYXRvcCk7CmBgYAoKCiMjIyMjIE92ZXJsYXBwaW5n
IG9mZnNldHMgYW5kIGRpbWVuc2lvbnMgZ3JlYXRlciB0aGFuIHBhcmVudHMn
CgpUaGlzIHN0aWxsIG5lZWRzIHRvIGJlIHRlc3RlZCBhIGJpdCwgYnV0IGl0
IHNob3VsZCB3b3JrLgoKCiMjIyMgUmVuZGVyaW5nCgpUbyBhY3R1YWxseSBy
ZW5kZXIgdGhlIHNjcmVlbiBidWZmZXIsIHlvdSBtdXN0IGNhbGwgYHJlbmRl
cmAuCgpgYGAganMKYm94LnNldENvbnRlbnQoJ0hlbGxvIHsjMGZlMWFiLWZn
fXdvcmxkey99LicpOwpzY3JlZW4ucmVuZGVyKCk7CmBgYAoKRWxlbWVudHMg
YXJlIHJlbmRlcmVkIHdpdGggdGhlIGxvd2VyIGVsZW1lbnRzIGluIHRoZSBj
aGlsZHJlbiBhcnJheSBiZWluZwpwYWludGVkIGZpcnN0LiBJbiB0ZXJtcyBv
ZiB0aGUgcGFpbnRlcidzIGFsZ29yaXRobSwgdGhlIGxvd2VzdCBpbmRpY2ll
cyBpbiB0aGUKYXJyYXkgYXJlIHRoZSBmdXJ0aGVzdCBhd2F5LCBqdXN0IGxp
a2UgaW4gdGhlIERPTS4KCgojIyMjIEFydGlmaWNpYWwgQ3Vyc29ycwoKVGVy
bWluYWwgY3Vyc29ycyBjYW4gYmUgdHJpY2t5LiBUaGV5IGFsbCBoYXZlIGRp
ZmZlcmVudCBjdXN0b20gZXNjYXBlIGNvZGVzIHRvCmFsdGVyLiBBcyBhbiBf
ZXhwZXJpbWVudGFsXyBhbHRlcm5hdGl2ZSwgYmxlc3NlZCBjYW4gZHJhdyBh
IGN1cnNvciBmb3IgeW91LAphbGxvd2luZyB5b3UgdG8gaGF2ZSBhIGN1c3Rv
bSBjdXJzb3IgdGhhdCB5b3UgY29udHJvbC4KCmBgYCBqcwp2YXIgc2NyZWVu
ID0gYmxlc3NlZC5zY3JlZW4oewogIGN1cnNvcjogewogICAgYXJ0aWZpY2lh
bDogdHJ1ZSwKICAgIHNoYXBlOiAnbGluZScsCiAgICBibGluazogdHJ1ZSwK
ICAgIGNvbG9yOiBudWxsIC8vIG51bGwgZm9yIGRlZmF1bHQKICB9Cn0pOwpg
YGAKClRoYXQncyBpdC4gSXQncyBjb250cm9sbGVkIHRoZSBzYW1lIHdheSBh
cyB0aGUgcmVndWxhciBjdXJzb3IuCgpUbyBjcmVhdGUgYSBjdXN0b20gY3Vy
c29yOgoKYGBgIGpzCnZhciBzY3JlZW4gPSBibGVzc2VkLnNjcmVlbih7CiAg
Y3Vyc29yOiB7CiAgICBhcnRpZmljaWFsOiB0cnVlLAogICAgc2hhcGU6IHsK
ICAgICAgYmc6ICdyZWQnLAogICAgICBmZzogJ3doaXRlJywKICAgICAgYm9s
ZDogdHJ1ZSwKICAgICAgY2g6ICcjJwogICAgfSwKICAgIGJsaW5rOiB0cnVl
CiAgfQp9KTsKYGBgCgoKIyMjIyBNdWx0aXBsZSBTY3JlZW5zCgpCbGVzc2Vk
IHN1cHBvcnRzIHRoZSBhYmlsaXR5IHRvIGNyZWF0ZSBtdWx0aXBsZSBzY3Jl
ZW5zLiBUaGlzIG1heSBub3Qgc2VlbQp1c2VmdWwgYXQgZmlyc3QsIGJ1dCBp
ZiB5b3UncmUgd3JpdGluZyBhIHByb2dyYW0gdGhhdCBzZXJ2ZXMgdGVybWlu
YWwKaW50ZXJmYWNlcyBvdmVyIGh0dHAsIHRlbG5ldCwgb3IgYW55IG90aGVy
IHByb3RvY29sLCB0aGlzIGNhbiBiZSB2ZXJ5IHVzZWZ1bC4KCiMjIyMjIFNl
cnZlciBTaWRlIFVzYWdlCgpBIHNpbXBsZSB0ZWxuZXQgc2VydmVyIG1pZ2h0
IGxvb2sgbGlrZSB0aGlzIChzZWUgZXhhbXBsZXMvYmxlc3NlZC10ZWxuZXQu
anMgZm9yCmEgZnVsbCBleGFtcGxlKToKCmBgYCBqcwp2YXIgYmxlc3NlZCA9
IHJlcXVpcmUoJ2JsZXNzZWQnKTsKdmFyIHRlbG5ldCA9IHJlcXVpcmUoJ3Rl
bG5ldDInKTsKCnRlbG5ldCh7IHR0eTogdHJ1ZSB9LCBmdW5jdGlvbihjbGll
bnQpIHsKICBjbGllbnQub24oJ3Rlcm0nLCBmdW5jdGlvbih0ZXJtaW5hbCkg
ewogICAgc2NyZWVuLnRlcm1pbmFsID0gdGVybWluYWw7CiAgICBzY3JlZW4u
cmVuZGVyKCk7CiAgfSk7CgogIGNsaWVudC5vbignc2l6ZScsIGZ1bmN0aW9u
KHdpZHRoLCBoZWlnaHQpIHsKICAgIGNsaWVudC5jb2x1bW5zID0gd2lkdGg7
CiAgICBjbGllbnQucm93cyA9IGhlaWdodDsKICAgIGNsaWVudC5lbWl0KCdy
ZXNpemUnKTsKICB9KTsKCiAgdmFyIHNjcmVlbiA9IGJsZXNzZWQuc2NyZWVu
KHsKICAgIHNtYXJ0Q1NSOiB0cnVlLAogICAgaW5wdXQ6IGNsaWVudCwKICAg
IG91dHB1dDogY2xpZW50LAogICAgdGVybWluYWw6ICd4dGVybS0yNTZjb2xv
cicsCiAgICBmdWxsVW5pY29kZTogdHJ1ZQogIH0pOwoKICBjbGllbnQub24o
J2Nsb3NlJywgZnVuY3Rpb24oKSB7CiAgICBpZiAoIXNjcmVlbi5kZXN0cm95
ZWQpIHsKICAgICAgc2NyZWVuLmRlc3Ryb3koKTsKICAgIH0KICB9KTsKCiAg
c2NyZWVuLmtleShbJ0MtYycsICdxJ10sIGZ1bmN0aW9uKGNoLCBrZXkpIHsK
ICAgIHNjcmVlbi5kZXN0cm95KCk7CiAgfSk7CgogIHNjcmVlbi5vbignZGVz
dHJveScsIGZ1bmN0aW9uKCkgewogICAgaWYgKGNsaWVudC53cml0YWJsZSkg
ewogICAgICBjbGllbnQuZGVzdHJveSgpOwogICAgfQogIH0pOwoKICBzY3Jl
ZW4uZGF0YS5tYWluID0gYmxlc3NlZC5ib3goewogICAgcGFyZW50OiBzY3Jl
ZW4sCiAgICBsZWZ0OiAnY2VudGVyJywKICAgIHRvcDogJ2NlbnRlcicsCiAg
ICB3aWR0aDogJzgwJScsCiAgICBoZWlnaHQ6ICc5MCUnLAogICAgYm9yZGVy
OiAnbGluZScsCiAgICBjb250ZW50OiAnV2VsY29tZSB0byBteSBzZXJ2ZXIu
IEhlcmUgaXMgeW91ciBvd24gcHJpdmF0ZSBzZXNzaW9uLicKICB9KTsKCiAg
c2NyZWVuLnJlbmRlcigpOwp9KS5saXN0ZW4oMjMwMCk7CmBgYAoKT25jZSB5
b3UndmUgd3JpdHRlbiBzb21ldGhpbmcgc2ltaWxhciBhbmQgc3RhcnRlZCBp
dCwgeW91IGNhbiBzaW1wbHkgdGVsbmV0CmludG8geW91ciBibGVzc2VkIGFw
cDoKCmBgYCBiYXNoCiQgdGVsbmV0IGxvY2FsaG9zdCAyMzAwCmBgYAoKQ3Jl
YXRpbmcgYSBuZXRjYXQgc2VydmVyIHdvdWxkIGFsc28gd29yayBhcyBsb25n
IGFzIHlvdSBkaXNhYmxlIGxpbmUgYnVmZmVyaW5nCmFuZCB0ZXJtaW5hbCBl
Y2hvIG9uIHRoZSBjb21tYW5kbGluZSB2aWEgYHN0dHlgOgpgJCBzdHR5IC1p
Y2Fub24gLWVjaG87IG5jYXQgbG9jYWxob3N0IDIzMDA7IHN0dHkgaWNhbm9u
IGVjaG9gCgpPciBieSB1c2luZyBuZXRjYXQncyBgLXRgIG9wdGlvbjogYCQg
bmNhdCAtdCBsb2NhbGhvc3QgMjMwMGAKCkNyZWF0aW5nIGEgc3RyZWFtaW5n
IGh0dHAgMS4xIHNlcnZlciB0aGFuIHJ1bnMgaW4gdGhlIHRlcm1pbmFsIGlz
IHBvc3NpYmxlIGJ5CmN1cmxpbmcgaXQgd2l0aCBzcGVjaWFsIGFyZ3VtZW50
czogYCQgY3VybCAtc1NOVC4gbG9jYWxob3N0OjgwODBgLgoKVGhlcmUgYXJl
IGN1cnJlbnRseSBubyBleGFtcGxlcyBvZiBuZXRjYXQvbmMvbmNhdCBvciBo
dHRwLT5jdXJsIHNlcnZlcnMgeWV0LgoKLS0tCgpUaGUgYGJsZXNzZWQuc2Ny
ZWVuYCBjb25zdHJ1Y3RvciBjYW4gYWNjZXB0IGBpbnB1dGAsIGBvdXRwdXRg
LCBhbmQgYHRlcm1gCmFyZ3VtZW50cyB0byBhaWQgd2l0aCB0aGlzLiBUaGUg
bXVsdGlwbGUgc2NyZWVucyB3aWxsIGJlIG1hbmFnZWQgaW50ZXJuYWxseSBi
eQpibGVzc2VkLiBUaGUgcHJvZ3JhbW1lciBqdXN0IGhhcyB0byBrZWVwIHRy
YWNrIG9mIHRoZSByZWZlcmVuY2VzLCBob3dldmVyLCB0bwphdm9pZCBhbWJp
Z3VpdHksIGl0J3MgcG9zc2libGUgdG8gZXhwbGljaXRseSBkaWN0YXRlIHdo
aWNoIHNjcmVlbiBhIG5vZGUgaXMKcGFydCBvZiBieSB1c2luZyB0aGUgYHNj
cmVlbmAgb3B0aW9uIHdoZW4gY3JlYXRpbmcgYW4gZWxlbWVudC4KClRoZSBg
c2NyZWVuLmRlc3Ryb3koKWAgbWV0aG9kIGlzIGFsc28gY3J1Y2lhbDogdGhp
cyB3aWxsIGNsZWFuIHVwIGFsbCBldmVudApsaXN0ZW5lcnMgdGhlIHNjcmVl
biBoYXMgYm91bmQgYW5kIG1ha2Ugc3VyZSBpdCBzdG9wcyBsaXN0ZW5pbmcg
b24gdGhlIGV2ZW50Cmxvb3AuIE1ha2UgYWJzb2x1dGVseSBjZXJ0YWluIHRv
IHJlbWVtYmVyIHRvIGNsZWFuIHVwIHlvdXIgc2NyZWVucyBvbmNlIHlvdSdy
ZQpkb25lIHdpdGggdGhlbS4KCkEgdHJpY2t5IHBhcnQgaXMgbWFraW5nIHN1
cmUgdG8gaW5jbHVkZSB0aGUgYWJpbGl0eSBmb3IgdGhlIGNsaWVudCB0byBz
ZW5kIHRoZQpURVJNIHdoaWNoIGlzIHJlc2V0IG9uIHRoZSBzZXJ2ZXJzaWRl
LCBhbmQgdGhlIHRlcm1pbmFsIHNpemUsIHdoaWNoIGlzIHNob3VsZAphbHNv
IGJlIHJlc2V0IG9uIHRoZSBzZXJ2ZXJzaWRlLiBCb3RoIG9mIHRoZXNlIGNh
cGFiaWxpdGllcyBhcmUgZGVtb25zdHJhdGVkCmFib3ZlLgoKRm9yIGEgd29y
a2luZyBleGFtcGxlIG9mIGEgYmxlc3NlZCB0ZWxuZXQgc2VydmVyLCBzZWUK
YGV4YW1wbGVzL2JsZXNzZWQtdGVsbmV0LmpzYC4KCgojIyMgTm90ZXMKCgoj
IyMjIFdpbmRvd3MgQ29tcGF0aWJpbGl0eQoKQ3VycmVudGx5IHRoZXJlIGlz
IG5vIGBtb3VzZWAgb3IgYHJlc2l6ZWAgZXZlbnQgc3VwcG9ydCBvbiBXaW5k
b3dzLgoKV2luZG93cyB1c2VycyB3aWxsIG5lZWQgdG8gZXhwbGljaXRseSBz
ZXQgYHRlcm1gIHdoZW4gY3JlYXRpbmcgYSBzY3JlZW4gbGlrZSBzbwooX19O
T1RFX186IFRoaXMgaXMgbm8gbG9uZ2VyIG5lY2Vzc2FyeSBhcyBvZiB0aGUg
bGF0ZXN0IHZlcnNpb25zIG9mIGJsZXNzZWQuClRoaXMgaXMgbm93IGhhbmRs
ZWQgYXV0b21hdGljYWxseSk6CgpgYGAganMKdmFyIHNjcmVlbiA9IGJsZXNz
ZWQuc2NyZWVuKHsgdGVybWluYWw6ICd3aW5kb3dzLWFuc2knIH0pOwpgYGAK
CgojIyMjIExvdy1sZXZlbCBVc2FnZQoKVGhpcyB3aWxsIGFjdHVhbGx5IHBh
cnNlIHRoZSB4dGVybSB0ZXJtaW5mbyBhbmQgY29tcGlsZSBldmVyeQpzdHJp
bmcgY2FwYWJpbGl0eSB0byBhIGphdmFzY3JpcHQgZnVuY3Rpb246CgpgYGAg
anMKdmFyIGJsZXNzZWQgPSByZXF1aXJlKCdibGVzc2VkJyk7Cgp2YXIgdHB1
dCA9IGJsZXNzZWQudHB1dCh7CiAgdGVybWluYWw6ICd4dGVybS0yNTZjb2xv
cicsCiAgZXh0ZW5kZWQ6IHRydWUKfSk7Cgpwcm9jZXNzLnN0ZG91dC53cml0
ZSh0cHV0LnNldGFmKDQpICsgJ0hlbGxvJyArIHRwdXQuc2dyMCgpICsgJ1xu
Jyk7CmBgYAoKVG8gcGxheSBhcm91bmQgd2l0aCBpdCBvbiB0aGUgY29tbWFu
ZCBsaW5lLCBpdCB3b3JrcyBqdXN0IGxpa2UgdHB1dDoKCmBgYCBiYXNoCiQg
dHB1dC5qcyBzZXRhZiAyCiQgdHB1dC5qcyBzZ3IwCiQgZWNobyAiJCh0cHV0
LmpzIHNldGFmIDIpSGVsbG8gV29ybGQkKHRwdXQuanMgc2dyMCkiCmBgYAoK
VGhlIG1haW4gZnVuY3Rpb25hbGl0eSBpcyBleHBvc2VkIGluIHRoZSBtYWlu
IGBibGVzc2VkYCBtb2R1bGU6CgpgYGAganMKdmFyIGJsZXNzZWQgPSByZXF1
aXJlKCdibGVzc2VkJykKICAsIHByb2dyYW0gPSBibGVzc2VkLnByb2dyYW0o
KTsKCnByb2dyYW0ua2V5KCdxJywgZnVuY3Rpb24oY2gsIGtleSkgewogIHBy
b2dyYW0uY2xlYXIoKTsKICBwcm9ncmFtLmRpc2FibGVNb3VzZSgpOwogIHBy
b2dyYW0uc2hvd0N1cnNvcigpOwogIHByb2dyYW0ubm9ybWFsQnVmZmVyKCk7
CiAgcHJvY2Vzcy5leGl0KDApOwp9KTsKCnByb2dyYW0ub24oJ21vdXNlJywg
ZnVuY3Rpb24oZGF0YSkgewogIGlmIChkYXRhLmFjdGlvbiA9PT0gJ21vdXNl
bW92ZScpIHsKICAgIHByb2dyYW0ubW92ZShkYXRhLngsIGRhdGEueSk7CiAg
ICBwcm9ncmFtLmJnKCdyZWQnKTsKICAgIHByb2dyYW0ud3JpdGUoJ3gnKTsK
ICAgIHByb2dyYW0uYmcoJyFyZWQnKTsKICB9Cn0pOwoKcHJvZ3JhbS5hbHRl
cm5hdGVCdWZmZXIoKTsKcHJvZ3JhbS5lbmFibGVNb3VzZSgpOwpwcm9ncmFt
LmhpZGVDdXJzb3IoKTsKcHJvZ3JhbS5jbGVhcigpOwoKcHJvZ3JhbS5tb3Zl
KDEsIDEpOwpwcm9ncmFtLmJnKCdibGFjaycpOwpwcm9ncmFtLndyaXRlKCdI
ZWxsbyB3b3JsZCcsICdibHVlIGZnJyk7CnByb2dyYW0uc2V0eCgocHJvZ3Jh
bS5jb2xzIC8gMiB8IDApIC0gNCk7CnByb2dyYW0uZG93big1KTsKcHJvZ3Jh
bS53cml0ZSgnSGkgYWdhaW4hJyk7CnByb2dyYW0uYmcoJyFibGFjaycpOwpw
cm9ncmFtLmZlZWQoKTsKYGBgCgoKIyMjIyBUZXN0aW5nCgpNb3N0IHRlc3Rz
IGNvbnRhaW5lZCBpbiB0aGUgYHRlc3QvYCBkaXJlY3RvcnkgYXJlIGludGVy
YWN0aXZlLiBJdCdzIHVwIHRvIHRoZQpwcm9ncmFtbWVyIHRvIGRldGVybWlu
ZSB3aGV0aGVyIHRoZSB0ZXN0IGlzIHByb3Blcmx5IGRpc3BsYXllZC4gSW4g
dGhlIGZ1dHVyZQppdCBtaWdodCBiZSBiZXR0ZXIgdG8gZG8gc29tZXRoaW5n
IHNpbWlsYXIgdG8gdnR0ZXN0LgoKCiMjIyMgRXhhbXBsZXMKCkV4YW1wbGVz
IGNhbiBiZSBmb3VuZCBpbiBgZXhhbXBsZXMvYC4KCgojIyMjIEZBUQoKMS4g
V2h5IGRvZXNuJ3QgdGhlIExpbnV4IGNvbnNvbGUgcmVuZGVyIGxpbmVzIGNv
cnJlY3RseSBvbiBVYnVudHU/CiAgLSBZb3UgbmVlZCB0byBpbnN0YWxsIHRo
ZSBgbmN1cnNlcy1iYXNlYCBwYWNrYWdlIF9fYW5kX18gdGhlIGBuY3Vyc2Vz
LXRlcm1gCiAgICBwYWNrYWdlLiAoIzk4KQoyLiBXaHkgZG8gdmVydGljYWwg
bGluZXMgbG9vayBjaG9wcGVkIHVwIGluIGlUZXJtMj8KICAtIEFsbCBBQ1Mg
dmVydGljYWwgbGluZXMgbG9vayB0aGlzIHdheSBpbiBpVGVybTIgd2l0aCB0
aGUgZGVmYXVsdCBmb250LgozLiBXaHkgY2FuJ3QgSSB1c2UgbXkgbW91c2Ug
aW4gVGVybWluYWwuYXBwPwogIC0gVGVybWluYWwuYXBwIGRvZXMgbm90IHN1
cHBvcnQgbW91c2UgZXZlbnRzLgo0LiBXaHkgZG9lc24ndCB0aGUgT3Zlcmxh
eUltYWdlIGVsZW1lbnQgYXBwZWFyIGluIG15IHRlcm1pbmFsPwogIC0gVGhl
IE92ZXJsYXlJbWFnZSBlbGVtZW50IHVzZXMgdzNtIHRvIGRpc3BsYXkgaW1h
Z2VzLiBUaGlzIGdlbmVyYWxseSBvbmx5CiAgICB3b3JrcyBvbiBYMTEreHRl
cm0vdXJ4dnQsIGJ1dCBpdCBfbWF5XyB3b3JrIG9uIG90aGVyIHVuaXggdGVy
bWluYWxzLgo1LiBXaHkgY2FuJ3QgbXkgbW91c2UgY2xpY2tzIHJlZ2lzdGVy
IGJleW9uZCAyNTUgY2VsbHM/CiAgLSBPbGRlciB2ZXJzaW9ucyBvZiBWVEUg
ZG8gbm90IHN1cHBvcnQgYW55IG1vZGVybiBtb3VzZSBwcm90b2NvbC4gT24g
dG9wIG9mCiAgICB0aGF0LCB0aGUgb2xkIFgxMCBwcm90b2NvbCBpdCBfZG9l
c18gaW1wbGVtZW50IGlzIGJ1Z2dlZC4gVGhyb3VnaCBzZXZlcmFsCiAgICB3
b3JrYXJvdW5kcyB3ZSd2ZSBtYW5hZ2VkIHRvIGdldCB0aGUgY2VsbCBsaW1p
dCBmcm9tIGAxMjdgIHRvIGAyNTVgLiBJZgogICAgeW91J3JlIG5vdCBoYXBw
eSB3aXRoIHRoaXMsIHlvdSBtYXkgd2FudCB0byBsb29rIGludG8gdXNpbmcg
eHRlcm0gb3IgdXJ4dnQsCiAgICBvciBhIHRlcm1pbmFsIHdoaWNoIHVzZXMg
YSBtb2Rlcm4gVlRFLCBsaWtlIGdub21lLXRlcm1pbmFsLgo2LiBJcyBibGVz
c2VkIGVmZmljaWVudD8KICAtIFllcy4gQmxlc3NlZCBpbXBsZW1lbnRzIENT
UiBhbmQgdXNlcyB0aGUgcGFpbnRlcidzIGFsZ29yaXRobSB0byByZW5kZXIg
dGhlCiAgICBzY3JlZW4uIEl0IG1haW50YWlucyB0d28gc2NyZWVuIGJ1ZmZl
cnMgc28gaXQgb25seSBuZWVkcyB0byByZW5kZXIgd2hhdAogICAgaGFzIGNo
YW5nZWQgb24gdGhlIHRlcm1pbmFsIHNjcmVlbi4KNy4gV2lsbCBibGVzc2Vk
IHdvcmsgd2l0aCBhbGwgdGVybWluYWxzPwogIC0gWWVzLiBCbGVzc2VkIGhh
cyBhIHRlcm1pbmZvL3Rlcm1jYXAgcGFyc2VyIGFuZCBjb21waWxlciB0aGF0
IHdhcyB3cml0dGVuCiAgICBmcm9tIHNjcmF0Y2guIEl0IHNob3VsZCB3b3Jr
IHdpdGggZXZlcnkgdGVybWluYWwgYXMgbG9uZyBhcyBhIHRlcm1pbmZvCiAg
ICBmaWxlIGlzIHByb3ZpZGVkLiBJZiB5b3Ugbm90aWNlIGFueSBjb21wYXRp
YmlsaXR5IGlzc3VlcyBpbiB5b3VyIHRlcm1pYWwsCiAgICBkbyBub3QgaGVz
aXRhdGUgdG8gcG9zdCBhbiBpc3N1ZS4KOC4gV2hhdCBpcyAiY3Vyc2VzIiBh
bmQgIm5jdXJzZXMiPwogIC0gWyJjdXJzZXMiXVtjdXJzZXNdIHdhcyBhbiBv
bGQgbGlicmFyeSB3cml0dGVuIGluIHRoZSBlYXJseSBkYXlzIG9mIHVuaXgK
ICAgIHdoaWNoIGFsbG93ZWQgYSBwcm9ncmFtbWVyIHRvIGVhc2lseSBtYW5p
cHVsYXRlIHRoZSBjdXJzb3IgaW4gb3JkZXIgdG8KICAgIHJlbmRlciB0aGUg
c2NyZWVuLiBbIm5jdXJzZXMiXVtuY3Vyc2VzXSBpcyBhIGZyZWUgcmVpbXBs
ZW1lbnRhdGlvbiBvZgogICAgY3Vyc2VzLiBJdCBpbXByb3ZlZCB1cG9uIGl0
IHF1aXRlIGEgYml0IGJ5IGZvY3VzaW5nIG1vcmUgb24gdGVybWluYWwKICAg
IGNvbXBhdGliaWxpdHkgYW5kIGlzIG5vdyB0aGUgc3RhbmRhcmQgbGlicmFy
eSBmb3IgaW1wbGVtZW50aW5nIHRlcm1pbmFsCiAgICBwcm9ncmFtcy4gQmxl
c3NlZCB1c2VzIG5laXRoZXIgb2YgdGhlc2UsIGFuZCBpbnN0ZWFkIGhhbmRs
ZXMgdGVybWluYWwKICAgIGNvbXBhdGliaWxpdHkgaXRzZWxmLgo5LiBXaGF0
IGlzIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gYmxlc3NlZCBhbmQgYmxlc3Nl
ZC1jb250cmliPwogIC0gYmxlc3NlZCBpcyBhIG1ham9yIHBpZWNlIG9mIGNv
ZGUgd2hpY2ggcmVpbXBsZW1lbnRzIGN1cnNlcyBmcm9tIHRoZSBncm91bmQK
ICAgIHVwLiBBIFVJIEFQSSBpcyB0aGVuIGxheWVyZWQgb24gdG9wIG9mIHRo
aXMuIFtibGVzc2VkLWNvbnRyaWJdW2NvbnRyaWJdIGlzCiAgICBhIHBvcHVs
YXIgbGlicmFyeSBidWlsdCBvbiB0b3Agb2YgYmxlc3NlZCB3aGljaCBtYWtl
cyBjbGV2ZXIgdXNlIG9mIG1vZHVsZXMKICAgIHRvIGltcGxlbWVudCB1c2Vm
dWwgd2lkZ2V0cyBsaWtlIGdyYXBocywgYXNjaWkgYXJ0LCBhbmQgc28gb24u
CjEwLiBBcmUgdGhlcmUgYmxlc3NlZC1saWtlIHNvbHV0aW9ucyBmb3Igbm9u
LWphdmFzY3JpcHQgcGxhdGZvcm1zPwogIC0gWWVzLiBUaGVyZSBhcmUgc29t
ZSBmYW50YXN0aWMgc29sdXRpb25zIG91dCB0aGVyZS4KICAgIC0gUGVybDog
W0N1cnNlczo6VUldW2N1cnNlcy11aV0KICAgIC0gUHl0aG9uOiBbVXJ3aWRd
W3Vyd2lkXQogICAgLSBHbzogW3Rlcm11aV1bdGVybXVpXSAmIFt0ZXJtYm94
LWdvXVt0ZXJtYm94XQoKCiMjIENvbnRyaWJ1dGlvbiBhbmQgTGljZW5zZSBB
Z3JlZW1lbnQKCklmIHlvdSBjb250cmlidXRlIGNvZGUgdG8gdGhpcyBwcm9q
ZWN0LCB5b3UgYXJlIGltcGxpY2l0bHkgYWxsb3dpbmcgeW91ciBjb2RlCnRv
IGJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4gWW91IGFy
ZSBhbHNvIGltcGxpY2l0bHkgdmVyaWZ5aW5nIHRoYXQKYWxsIGNvZGUgaXMg
eW91ciBvcmlnaW5hbCB3b3JrLiBgPC9sZWdhbGVzZT5gCgoKIyMgTGljZW5z
ZQoKQ29weXJpZ2h0IChjKSAyMDEzLTIwMTUsIENocmlzdG9waGVyIEplZmZy
ZXkuIChNSVQgTGljZW5zZSkKClNlZSBMSUNFTlNFIGZvciBtb3JlIGluZm8u
Cgpbc2xhcF06IGh0dHBzOi8vZ2l0aHViLmNvbS9zbGFwLWVkaXRvci9zbGFw
Cltjb250cmliXTogaHR0cHM6Ly9naXRodWIuY29tL3lhcm9ubi9ibGVzc2Vk
LWNvbnRyaWIKW3Rlcm11aV06IGh0dHBzOi8vZ2l0aHViLmNvbS9naXphay90
ZXJtdWkKW2N1cnNlc106IGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtp
L0N1cnNlc18ocHJvZ3JhbW1pbmdfbGlicmFyeSkKW25jdXJzZXNdOiBodHRw
czovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9OY3Vyc2VzClt1cndpZF06IGh0
dHA6Ly91cndpZC5vcmcvcmVmZXJlbmNlL2luZGV4Lmh0bWwKW2N1cnNlcy11
aV06IGh0dHA6Ly9zZWFyY2guY3Bhbi5vcmcvfm1keGkvQ3Vyc2VzLVVJLTAu
OTYwOS9saWIvQ3Vyc2VzL1VJLnBtClt0ZXJtYm94XTogaHR0cHM6Ly9naXRo
dWIuY29tL25zZi90ZXJtYm94LWdvClt0dHlzdHVkaW9dOiBodHRwczovL2dp
dGh1Yi5jb20vY2hqai90dHlzdHVkaW8jY2hvb3NpbmctYS1uZXctZm9udC1m
b3IteW91ci10ZXJtaW5hbC1yZWNvcmRpbmcK
",,8809,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'intellij-community',2489216,b'IntelliJ IDEA Community Edition',,134,8806,,471,False,b'https://api.github.com/repos/JetBrains/intellij-community/forks',"IyBJbnRlbGxpSiBJREVBIENvbW11bml0eSBFZGl0aW9uIFshW29mZmljaWFs
IEpldEJyYWlucyBwcm9qZWN0XShodHRwOi8vamIuZ2cvYmFkZ2VzL29mZmlj
aWFsLnN2ZyldKGh0dHBzOi8vY29uZmx1ZW5jZS5qZXRicmFpbnMuY29tL2Rp
c3BsYXkvQUxML0pldEJyYWlucytvbitHaXRIdWIpClRoZXNlIGluc3RydWN0
aW9ucyB3aWxsIGhlbHAgeW91IGJ1aWxkIEludGVsbGlKIElERUEgQ29tbXVu
aXR5IEVkaXRpb24gZnJvbSBzb3VyY2UgY29kZSwgd2hpY2ggaXMgdGhlIGJh
c2lzIGZvciBJbnRlbGxpSiBQbGF0Zm9ybSBkZXZlbG9wbWVudC4KVGhlIGZv
bGxvd2luZyBjb252ZW50aW9ucyB3aWxsIGJlIHVzZWQgdG8gcmVmZXIgdG8g
ZGlyZWN0b3JpZXMgb24geW91ciBtYWNoaW5lOgoqIGA8VVNFUl9IT01FPmAg
aXMgeW91ciBob21lIGRpcmVjdG9yeS4KKiBgPElERUFfSE9NRT5gIGlzIHRo
ZSByb290IGRpcmVjdG9yeSBmb3IgdGhlIEludGVsbGlKIHNvdXJjZSBjb2Rl
LgoqIGA8SkRLXzE2X0hPTUU+YCBpcyB0aGUgcm9vdCBkaXJlY3RvcnkgZm9y
IHRoZSAxLjYgSkRLLCB3aGljaCBpcyBvcHRpb25hbC4KKiBgPEpES18xOF9I
T01FPmAgaXMgdGhlIHJvb3QgZGlyZWN0b3J5IGZvciB0aGUgMS44IEpESy4K
CiMjIEdldHRpbmcgSW50ZWxsaUogSURFQSBDb21tdW5pdHkgRWRpdGlvbiBT
b3VyY2UgQ29kZQpJbnRlbGxpSiBJREVBIENvbW11bml0eSBFZGl0aW9uIHNv
dXJjZSBjb2RlIGlzIGF2YWlsYWJsZSBmcm9tIGBnaXRodWIuY29tL0pldEJy
YWlucy9pbnRlbGxpai1jb21tdW5pdHlgIGJ5IGVpdGhlciBjbG9uaW5nIG9y
CmRvd25sb2FkaW5nIGEgemlwIGZpbGUgKGJhc2VkIG9uIGEgYnJhbmNoKSBp
bnRvIGA8SURFQV9IT01FPmAuIFRoZSBkZWZhdWx0IGlzIHRoZSAqbWFzdGVy
KiBicmFuY2guIAoKVGhlIG1hc3RlciBicmFuY2ggY29udGFpbnMgdGhlIHNv
dXJjZSBjb2RlIHdoaWNoIHdpbGwgYmUgdXNlZCB0byBjcmVhdGUgdGhlIG5l
eHQgbWFqb3IgdmVyc2lvbiBvZiBJbnRlbGxpSiBJREVBLiBUaGUgYnJhbmNo
IG5hbWVzCmFuZCBidWlsZCBudW1iZXJzIGZvciBvbGRlciByZWxlYXNlcyBv
ZiBJbnRlbGxpSiBJREVBIGNhbiBiZSBmb3VuZCBvbiB0aGUgcGFnZSBvZgpb
QnVpbGQgTnVtYmVyIFJhbmdlc10oaHR0cDovL3d3dy5qZXRicmFpbnMub3Jn
L2ludGVsbGlqL3Nkay9kb2NzL2Jhc2ljcy9nZXR0aW5nX3N0YXJ0ZWQvYnVp
bGRfbnVtYmVyX3Jhbmdlcy5odG1sKS4KCklmIHlvdSBpbnRlbmQgdG8gbWFr
ZSBvcGVuIHNvdXJjZSBjb250cmlidXRpb25zIHRvIHRoZSBJbnRlbGxpSiBQ
bGF0Zm9ybSwKc2VlIFtDb250cmlidXRpbmcgdG8gdGhlIEludGVsbGlKIFBy
b2plY3RdKGh0dHA6Ly93d3cuamV0YnJhaW5zLm9yZy9kaXNwbGF5L0lKT1Mv
Q29udHJpYnV0ZSkgZm9yIG1vcmUgaW5mb3JtYXRpb24uCgpfKipTcGVlZCBU
aXA6KipfIElmIHRoZSBjb21wbGV0ZSByZXBvc2l0b3J5IGhpc3RvcnkgaXNu
J3QgbmVlZGVkIHRoZW4gdXNpbmcgYSBzaGFsbG93IGNsb25lIChgZ2l0IGNs
b25lIC0tZGVwdGggMWApIHdpbGwgc2F2ZSBzaWduaWZpY2FudCB0aW1lLgoK
VGhlc2UgR2l0IG9wZXJhdGlvbnMgY2FuIGFsc28gYmUgZG9uZSB0aHJvdWdo
IHRoZSBbSW50ZWxsaUogSURFQSB1c2VyIGludGVyZmFjZV0oaHR0cHM6Ly93
d3cuamV0YnJhaW5zLmNvbS9oZWxwL2lkZWEvdXNpbmctZ2l0LWludGVncmF0
aW9uLmh0bWwpLgoKSW50ZWxsaUogSURFQSBDb21tdW5pdHkgRWRpdGlvbiBy
ZXF1aXJlcyBhZGRpdGlvbmFsIEFuZHJvaWQgbW9kdWxlcyBmcm9tIHNlcGFy
YXRlIEdpdCByZXBvc2l0b3JpZXMuIFRvIGNsb25lIHRoZXNlIHJlcG9zaXRv
cmllcywKcnVuIG9uZSBvZiB0aGUgYGdldFBsdWdpbnNgIHNjcmlwdHMgbG9j
YXRlZCBpbiB0aGUgYDxJREVBX0hPTUU+YCBkaXJlY3RvcnkuIFRoZXNlIHNj
cmlwdHMgY2xvbmUgdGhlaXIgcmVzcGVjdGl2ZSAqbWFzdGVyKiBicmFuY2hl
cy4KKiBgZ2V0UGx1Z2lucy5zaGAgZm9yIExpbnV4IG9yIG1hY09TLgoqIGBn
ZXRQbHVnaW5zLmJhdGAgZm9yIFdpbmRvd3MuCgpfKipOb3RlOioqXyBBbHdh
eXMgYGdpdCBjaGVja291dGAgdGhlIGBpbnRlbGxpai1jb21tdW5pdHlgLCBg
YW5kcm9pZGAsIGFuZCBgYW5kcm9pZC90b29scy1iYXNlYCBHaXQgcmVwb3Np
dG9yaWVzIHRvIHRoZSBzYW1lIGJyYW5jaGVzL3RhZ3MuIAoKIyMgQnVpbGRp
bmcgSW50ZWxsaUogQ29tbXVuaXR5IEVkaXRpb24KVmVyc2lvbiAyMDE4LjIg
b3IgbmV3ZXIgb2YgSW50ZWxsaUogSURFQSBDb21tdW5pdHkgRWRpdGlvbiBv
ciBJbnRlbGxpSiBJREVBIFVsdGltYXRlIEVkaXRpb24gaXMgcmVxdWlyZWQg
dG8gYnVpbGQgYW5kIGRldmVsb3AKZm9yIHRoZSBJbnRlbGxpSiBQbGF0Zm9y
bS4KCiMjIyBPcGVuaW5nIHRoZSBJbnRlbGxpSiBTb3VyY2UgQ29kZSBmb3Ig
QnVpbGQKVXNpbmcgSW50ZWxsaUogSURFQSAqKkZpbGUgfCBPcGVuKiosIHNl
bGVjdCB0aGUgYDxJREVBX0hPTUU+YCBkaXJlY3RvcnkuIAoqIElmIEludGVs
bGlKIElERUEgZGlzcGxheXMgYW4gZXJyb3IgYWJvdXQgYSBtaXNzaW5nIG9y
IG91dCBvZiBkYXRlIHJlcXVpcmVkIHBsdWdpbiAoZS5nLiBLb3RsaW4pLAog
IFtlbmFibGUsIHVwZ3JhZGUsIG9yIGluc3RhbGwgdGhhdCBwbHVnaW5dKGh0
dHBzOi8vd3d3LmpldGJyYWlucy5jb20vaGVscC9pZGVhL21hbmFnaW5nLXBs
dWdpbnMuaHRtbCkgYW5kIHJlc3RhcnQgSW50ZWxsaUogSURFQS4KKiBJZiBJ
bnRlbGxpSiBJREVBIGRpc3BsYXlzIGFuZCBlcnJvciBhYm91dCBhIEdyYWRs
ZSBjb25maWd1cmF0aW9uIG5vdCBmb3VuZCwKICBbcmVmcmVzaCB0aGUgR3Jh
ZGxlIHByb2plY3RzXShodHRwczovL3d3dy5qZXRicmFpbnMuY29tL2hlbHAv
aWRlYS9qZXRncmFkbGUtdG9vbC13aW5kb3cuaHRtbCkuIAoKIyMjIEludGVs
bGlKIEJ1aWxkIENvbmZpZ3VyYXRpb24KSkRLIHZlcnNpb24gMS44ICh1OTEg
b3IgbmV3ZXIpIGlzIHJlcXVpcmVkIGZvciBidWlsZGluZyBhbmQgZGV2ZWxv
cGluZyBmb3IgSW50ZWxsaUogSURFQSBDb21tdW5pdHkgRWRpdGlvbi4KMS4g
VXNpbmcgSW50ZWxsaUogSURFQSwgW2NvbmZpZ3VyZV0oaHR0cHM6Ly93d3cu
amV0YnJhaW5zLmNvbS9oZWxwL2lkZWEvc2RrLmh0bWwpIGEgSkRLIG5hbWVk
ICIqKjEuOCoqIiwgcG9pbnRpbmcgdG8gYDxKREtfMThfSE9NRT5gLgogICAq
IElmIG5vdCBhbHJlYWR5IHByZXNlbnQsIGFkZCBgPEpES18xOF9IT01FPi9s
aWIvdG9vbHMuamFyYCBbdG8gdGhlIENsYXNzcGF0aF0oaHR0cHM6Ly93d3cu
amV0YnJhaW5zLmNvbS9oZWxwL2lkZWEvc2RrLmh0bWwjbWFuYWdlX3Nka3Mp
IHRhYgogICAgIGZvciB0aGUgKioxLjgqKiBKREsuCjIuIEFsc28gY29uZmln
dXJlIGEgSkRLIG5hbWVkICIqKklERUEgamRrKioiIChjYXNlIHNlbnNpdGl2
ZSksIHBvaW50aW5nIHRvIGA8SkRLXzE2X0hPTUU+YC4gSWYgeW91IGRvbuKA
mXQgd2FudCB0byBpbnN0YWxsIEpESyAxLjYKICAgdGhlbiB5b3UgbWF5IGNv
bmZpZ3VyZSAqKklERUEgamRrKiogdG8gcG9pbnQgdG8gYDxKREtfMThfSE9N
RT5gLiBIb3dldmVyLCB5b3UgbXVzdCBiZSBjYXJlZnVsIHRvIGF2b2lkIHVz
aW5nIEphdmEgOCBBUElzCiAgIGluIEludGVsbGlKIElERUEgQ29tbXVuaXR5
IEVkaXRpb24gbW9kdWxlcyB0aGF0IHVzZSAqKklERUEgamRrKiouIAogICAq
IElmIG5vdCBhbHJlYWR5IHByZXNlbnQsIGFkZCB0aGUgY29ycmVzcG9uZGlu
ZyBwYXRoIGZvciB0b29scy5qYXIgdG8gdGhlIENsYXNzcGF0aCBmb3IgIioq
SURFQSBqZGsqKiIgSkRLLgozLiBJZiB0aGUgX01hdmVuIEludGVncmF0aW9u
XyBwbHVnaW4gaXMgZGlzYWJsZWQsIFthZGQgdGhlIHBhdGggdmFyaWFibGVd
KGh0dHBzOi8vd3d3LmpldGJyYWlucy5jb20vaGVscC9pZGVhL3dvcmtpbmct
d2l0aC1wcm9qZWN0cy5odG1sI3BhdGgtdmFyaWFibGVzKQogICAiKipNQVZF
Tl9SRVBPU0lUT1JZKioiIHBvaW50aW5nIHRvIGA8VVNFUl9IT01FPi8ubTIv
cmVwb3NpdG9yeWAgZGlyZWN0b3J5Lgo0LiBfKipTcGVlZCBUaXA6KipfIElm
IHlvdSBoYXZlIGVub3VnaCBSQU0gb24geW91ciBjb21wdXRlciwKICAgW2Nv
bmZpZ3VyZSB0aGUgY29tcGlsZXIgc2V0dGluZ3NdKGh0dHBzOi8vd3d3Lmpl
dGJyYWlucy5jb20vaGVscC9pZGVhL3NwZWNpZnlpbmctY29tcGlsYXRpb24t
c2V0dGluZ3MuaHRtbCkKICAgdG8gZW5hYmxlIHRoZSAiQ29tcGlsZSBpbmRl
cGVuZGVudCBtb2R1bGVzIGluIHBhcmFsbGVsIiBvcHRpb24uIEFsc28gc2V0
IHRoZSAiVXNlci1sb2NhbCBidWlsZCBwcm9jZXNzIFZNIG9wdGlvbnMiIHRv
IGAtWG14MkdgLgogICBUaGVzZSBjaGFuZ2VzIHdpbGwgZ3JlYXRseSByZWR1
Y2UgdGhlIGNvbXBpbGUgdGltZS4KCiMjIyBCdWlsZGluZyB0aGUgSW50ZWxs
aUogQXBwbGljYXRpb24gU291cmNlIENvZGUKVG8gYnVpbGQgSW50ZWxsaUog
SURFQSBDb21tdW5pdHkgRWRpdGlvbiBmcm9tIHNvdXJjZSwgY2hvb3NlICoq
QnVpbGQgfCBCdWlsZCBQcm9qZWN0KiogZnJvbSB0aGUgbWFpbiBtZW51LgoK
VG8gYnVpbGQgaW5zdGFsbGF0aW9uIHBhY2thZ2VzLCBydW4gdGhlIGBhbnRg
IGNvbW1hbmQgaW4gYDxJREVBX0hPTUU+YCBkaXJlY3RvcnkuIFNlZSB0aGUg
YGJ1aWxkLnhtbGAgZmlsZSBmb3IgZGV0YWlscy4KCiMjIFJ1bm5pbmcgSW50
ZWxsaUogSURFQQpUbyBydW4gdGhlIEludGVsbGlKIElERUEgYnVpbHQgZnJv
bSBzb3VyY2UsIGNob29zZSAqKlJ1biB8IFJ1bioqIGZyb20gdGhlIG1haW4g
bWVudS4gVGhpcyB3aWxsIHVzZSB0aGUgcHJlY29uZmlndXJlZCBydW4gY29u
ZmlndXJhdGlvbiAiKipJREVBKioiLgoKVG8gcnVuIHRlc3RzIG9uIHRoZSBi
dWlsZCwgYXBwbHkgdGhlc2Ugc2V0dGluZyB0byB0aGUgKipSdW4gfCBFZGl0
IFJ1biBDb25maWd1cmF0aW9ucy4uLiB8IERlZmF1bHRzIHwgSlVuaXQqKiBj
b25maWd1cmF0aW9uIHRhYjoKICAqIFdvcmtpbmcgZGlyOiBgPElERUFfSE9N
RT4vYmluYAogICogVk0gb3B0aW9uczogCiAgICAqIGAtZWFgIAogICAgKiBg
LURqYXZhLnN5c3RlbS5jbGFzcy5sb2FkZXI9Y29tLmludGVsbGlqLnV0aWwu
bGFuZy5VcmxDbGFzc0xvYWRlcmAgCiAgICAqIGAtRGlkZWEuY29uZmlnLnBh
dGg9Li4vdGVzdC1jb25maWdgCiAgICAqIGAtRGlkZWEuc3lzdGVtLnBhdGg9
Li4vdGVzdC1zeXN0ZW1gCiAKWW91IGNhbiBmaW5kIG90aGVyIGhlbHBmdWwg
aW5mb3JtYXRpb24gYXQgW2h0dHA6Ly93d3cuamV0YnJhaW5zLm9yZ10oaHR0
cDovL3d3dy5qZXRicmFpbnMub3JnKS4KVGhlIFtjb250cmlidXRlIHNlY3Rp
b25dKGh0dHA6Ly93d3cuamV0YnJhaW5zLm9yZy9kaXNwbGF5L0lKT1MvQ29u
dHJpYnV0ZSkgb2YgdGhhdCBzaXRlIGRlc2NyaWJlcyBob3cgeW91IGNhbiBj
b250cmlidXRlIHRvIEludGVsbGlKIElERUEu
",,8806,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'luxon',47118129,b'\xe2\x8f\xb1 A library for working with dates and times in JS',b'JavaScript',20,8802,,107,False,b'https://api.github.com/repos/moment/luxon/forks',"IyBMdXhvbgoKWyFbTUlUIExpY2Vuc2VdW2xpY2Vuc2UtaW1hZ2VdXVtsaWNl
bnNlXSBbIVtCdWlsZCBTdGF0dXNdW3RyYXZpcy1pbWFnZV1dW3RyYXZpcy11
cmxdIFshW05QTSB2ZXJzaW9uXVtucG0tdmVyc2lvbi1pbWFnZV1dW25wbS11
cmxdIFshW0NvdmVyYWdlIFN0YXR1c11bdGVzdC1jb3ZlcmFnZS1pbWFnZV1d
W3Rlc3QtY292ZXJhZ2UtdXJsXSBbIVtEb2MgY292ZXJhZ2VdW2RvYy1jb3Zl
cmFnZS1pbWFnZV1dW2RvYy11cmxdIFshW1BScyB3ZWxjb21lXVtjb250cmli
dXRpbmctaW1hZ2VdXVtjb250cmlidXRpbmctdXJsXQoKTHV4b24gaXMgYSBs
aWJyYXJ5IGZvciB3b3JraW5nIHdpdGggZGF0ZXMgYW5kIHRpbWVzIGluIEph
dmFzY3JpcHQuCgpgYGBqcwpEYXRlVGltZS5sb2NhbCgpLnNldFpvbmUoJ0Ft
ZXJpY2EvTmV3X1lvcmsnKS5taW51cyh7IHdlZWtzOiAxIH0pLmVuZE9mKCdk
YXknKS50b0lTTygpOwpgYGAKCiMjIEZlYXR1cmVzCiAqIERhdGVUaW1lLCBE
dXJhdGlvbiwgYW5kIEludGVydmFsIHR5cGVzLgogKiBJbW11dGFibGUsIGNo
YWluYWJsZSwgdW5hbWJpZ3VvdXMgQVBJLgogKiBQYXJzaW5nIGFuZCBmb3Jt
YXR0aW5nIGZvciBjb21tb24gYW5kIGN1c3RvbSBmb3JtYXRzLgogKiBOYXRp
dmUgdGltZSB6b25lIGFuZCBJbnRsIHN1cHBvcnQgKG5vIGxvY2FsZSBvciB0
eiBmaWxlcykuCgojIyBEb3dubG9hZC9pbnN0YWxsCgpbRG93bmxvYWQvaW5z
dGFsbCBpbnN0cnVjdGlvbnNdKGh0dHBzOi8vbW9tZW50LmdpdGh1Yi5pby9s
dXhvbi9kb2NzL21hbnVhbC9pbnN0YWxsLmh0bWwpCgojIyBEb2N1bWVudGF0
aW9uCgoqIFtHZW5lcmFsIGRvY3VtZW50YXRpb25dW2RvYy11cmxdCiogW0FQ
SSBkb2NzXShodHRwczovL21vbWVudC5naXRodWIuaW8vbHV4b24vZG9jcy9p
ZGVudGlmaWVycy5odG1sKQoqIFtRdWljayB0b3VyXShodHRwczovL21vbWVu
dC5naXRodWIuaW8vbHV4b24vZG9jcy9tYW51YWwvdG91ci5odG1sKQoqIFtG
b3IgTW9tZW50IHVzZXJzXShodHRwczovL21vbWVudC5naXRodWIuaW8vbHV4
b24vZG9jcy9tYW51YWwvbW9tZW50Lmh0bWwpCiogW1doeSBkb2VzIEx1eG9u
IGV4aXN0P10oaHR0cHM6Ly9tb21lbnQuZ2l0aHViLmlvL2x1eG9uL2RvY3Mv
bWFudWFsL3doeS5odG1sKQoqIFtBIHF1aWNrIGRlbW9dKGh0dHBzOi8vbW9t
ZW50LmdpdGh1Yi5pby9sdXhvbi9kZW1vL2dsb2JhbC5odG1sKQoKIyMgRGV2
ZWxvcG1lbnQKClNlZSBbY29udHJpYnV0aW5nXShjb250cmlidXRpbmcubWQp
LgoKIVtQaGFzZXJzIHRvIHN0dW5dW3BoYXNlcnMtaW1hZ2VdCgpbbGljZW5z
ZS1pbWFnZV06IGh0dHA6Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS9saWNlbnNl
LU1JVC1ibHVlLnN2ZwpbbGljZW5zZV06IGxpY2Vuc2UubWQKClt0cmF2aXMt
dXJsXTogaHR0cDovL3RyYXZpcy1jaS5vcmcvbW9tZW50L2x1eG9uClt0cmF2
aXMtaW1hZ2VdOiBodHRwczovL2FwaS50cmF2aXMtY2kub3JnL21vbWVudC9s
dXhvbi5zdmc/YnJhbmNoPW1hc3RlcgoKW25wbS11cmxdOiBodHRwczovL25w
bWpzLm9yZy9wYWNrYWdlL2x1eG9uCltucG0tdmVyc2lvbi1pbWFnZV06IGh0
dHBzOi8vYmFkZ2UuZnVyeS5pby9qcy9sdXhvbi5zdmcKCltkb2MtdXJsXTog
aHR0cHM6Ly9tb21lbnQuZ2l0aHViLmlvL2x1eG9uL2RvY3MvCltkb2MtY292
ZXJhZ2UtaW1hZ2VdOiBodHRwczovL21vbWVudC5naXRodWIuaW8vbHV4b24v
ZG9jcy9iYWRnZS5zdmcKClt0ZXN0LWNvdmVyYWdlLXVybF06IGh0dHBzOi8v
Y29kZWNvdi5pby9naC9tb21lbnQvbHV4b24KW3Rlc3QtY292ZXJhZ2UtaW1h
Z2VdOiBodHRwczovL2NvZGVjb3YuaW8vZ2gvbW9tZW50L2x1eG9uL2JyYW5j
aC9tYXN0ZXIvZ3JhcGgvYmFkZ2Uuc3ZnCgpbY29udHJpYnV0aW5nLXVybF06
IGh0dHBzOi8vbW9tZW50LmdpdGh1Yi5pby9sdXhvbi9kb2NzL21hbnVhbC9j
b250cmlidXRpbmcuaHRtbApbY29udHJpYnV0aW5nLWltYWdlXTogaHR0cHM6
Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS9QUnMtd2VsY29tZS1icmlnaHRncmVl
bi5zdmcKCltwaGFzZXJzLWltYWdlXTogaHR0cHM6Ly9pbWcuc2hpZWxkcy5p
by9iYWRnZS9waGFzZXJzLXN0dW4tYnJpZ2h0Z3JlZW4uc3ZnCg==
",,8802,"c3VkbzogdHJ1ZQpsYW5ndWFnZTogamF2YXNjcmlwdApzZXJ2aWNlczoKIC0g
ZG9ja2VyCmJlZm9yZV9pbnN0YWxsOgogIC0gZG9ja2VyIHB1bGwgaWNhbWJy
b24vbHV4b24KICAtIC4vZG9ja2VyL25wbSBpbnN0YWxsCnNjcmlwdDoKICAt
IC4vZG9ja2VyL25wbSBydW4gYnVpbGQKICAtIC4vZG9ja2VyL25wbSBydW4g
bGludAogIC0gLi9kb2NrZXIvbnBtIHJ1biB0ZXN0CiAgLSAuL2RvY2tlci9u
cG0gcnVuIGRvY3MKICAtIC4vZG9ja2VyL25wbSBydW4gY2hlY2stZG9jLWNv
dmVyYWdlCiAgLSBiYXNoIDwoY3VybCAtcyBodHRwczovL2NvZGVjb3YuaW8v
YmFzaCkKCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
