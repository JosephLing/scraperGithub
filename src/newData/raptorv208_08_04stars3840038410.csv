name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'nvm',612230,b'Node Version Manager - POSIX-compliant bash script to manage multiple active node.js versions',b'Shell',294,38404,,858,False,b'https://api.github.com/repos/nvm-sh/nvm/forks',"IyBOb2RlIFZlcnNpb24gTWFuYWdlciBbIVtCdWlsZCBTdGF0dXNdKGh0dHBz
Oi8vdHJhdmlzLWNpLm9yZy9udm0tc2gvbnZtLnN2Zz9icmFuY2g9bWFzdGVy
KV1bM10gWyFbbnZtIHZlcnNpb25dKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8v
YmFkZ2UvdmVyc2lvbi12MC4zNS4xLXllbGxvdy5zdmcpXVs0XSBbIVtDSUkg
QmVzdCBQcmFjdGljZXNdKGh0dHBzOi8vYmVzdHByYWN0aWNlcy5jb3JlaW5m
cmFzdHJ1Y3R1cmUub3JnL3Byb2plY3RzLzY4NC9iYWRnZSldKGh0dHBzOi8v
YmVzdHByYWN0aWNlcy5jb3JlaW5mcmFzdHJ1Y3R1cmUub3JnL3Byb2plY3Rz
LzY4NCkKCjwhLS0gU1RBUlQgZG9jdG9jIGdlbmVyYXRlZCBUT0MgcGxlYXNl
IGtlZXAgY29tbWVudCBoZXJlIHRvIGFsbG93IGF1dG8gdXBkYXRlIC0tPgo8
IS0tIERPTidUIEVESVQgVEhJUyBTRUNUSU9OLCBJTlNURUFEIFJFLVJVTiBk
b2N0b2MgVE8gVVBEQVRFIC0tPgojIyBUYWJsZSBvZiBDb250ZW50cwoKLSBb
SW5zdGFsbGF0aW9uIGFuZCBVcGRhdGVdKCNpbnN0YWxsYXRpb24tYW5kLXVw
ZGF0ZSkKICAtIFtJbnN0YWxsICYgVXBkYXRlIHNjcmlwdF0oI2luc3RhbGwt
LXVwZGF0ZS1zY3JpcHQpCiAgICAtIFtBbnNpYmxlXSgjYW5zaWJsZSkKICAt
IFtWZXJpZnkgaW5zdGFsbGF0aW9uXSgjdmVyaWZ5LWluc3RhbGxhdGlvbikK
ICAtIFtJbXBvcnRhbnQgTm90ZXNdKCNpbXBvcnRhbnQtbm90ZXMpCiAgLSBb
R2l0IGluc3RhbGxdKCNnaXQtaW5zdGFsbCkKICAtIFtNYW51YWwgSW5zdGFs
bF0oI21hbnVhbC1pbnN0YWxsKQogIC0gW01hbnVhbCB1cGdyYWRlXSgjbWFu
dWFsLXVwZ3JhZGUpCi0gW1VzYWdlXSgjdXNhZ2UpCiAgLSBbTG9uZy10ZXJt
IHN1cHBvcnRdKCNsb25nLXRlcm0tc3VwcG9ydCkKICAtIFtNaWdyYXRpbmcg
Z2xvYmFsIHBhY2thZ2VzIHdoaWxlIGluc3RhbGxpbmddKCNtaWdyYXRpbmct
Z2xvYmFsLXBhY2thZ2VzLXdoaWxlLWluc3RhbGxpbmcpCiAgLSBbRGVmYXVs
dCBnbG9iYWwgcGFja2FnZXMgZnJvbSBmaWxlIHdoaWxlIGluc3RhbGxpbmdd
KCNkZWZhdWx0LWdsb2JhbC1wYWNrYWdlcy1mcm9tLWZpbGUtd2hpbGUtaW5z
dGFsbGluZykKICAtIFtpby5qc10oI2lvanMpCiAgLSBbU3lzdGVtIHZlcnNp
b24gb2Ygbm9kZV0oI3N5c3RlbS12ZXJzaW9uLW9mLW5vZGUpCiAgLSBbTGlz
dGluZyB2ZXJzaW9uc10oI2xpc3RpbmctdmVyc2lvbnMpCiAgICAtIFtTdXBw
cmVzc2luZyBjb2xvcml6ZWQgb3V0cHV0XSgjc3VwcHJlc3NpbmctY29sb3Jp
emVkLW91dHB1dCkKICAtIFsubnZtcmNdKCNudm1yYykKICAtIFtEZWVwZXIg
U2hlbGwgSW50ZWdyYXRpb25dKCNkZWVwZXItc2hlbGwtaW50ZWdyYXRpb24p
CiAgICAtIFtiYXNoXSgjYmFzaCkKICAgICAgLSBbQXV0b21hdGljYWxseSBj
YWxsIGBudm0gdXNlYF0oI2F1dG9tYXRpY2FsbHktY2FsbC1udm0tdXNlKQog
ICAgLSBbenNoXSgjenNoKQogICAgICAtIFtDYWxsaW5nIGBudm0gdXNlYCBh
dXRvbWF0aWNhbGx5IGluIGEgZGlyZWN0b3J5IHdpdGggYSBgLm52bXJjYCBm
aWxlXSgjY2FsbGluZy1udm0tdXNlLWF1dG9tYXRpY2FsbHktaW4tYS1kaXJl
Y3Rvcnktd2l0aC1hLW52bXJjLWZpbGUpCi0gW0xpY2Vuc2VdKCNsaWNlbnNl
KQotIFtSdW5uaW5nIHRlc3RzXSgjcnVubmluZy10ZXN0cykKLSBbQmFzaCBj
b21wbGV0aW9uXSgjYmFzaC1jb21wbGV0aW9uKQogIC0gW1VzYWdlXSgjdXNh
Z2UtMSkKLSBbQ29tcGF0aWJpbGl0eSBJc3N1ZXNdKCNjb21wYXRpYmlsaXR5
LWlzc3VlcykKLSBbSW5zdGFsbGluZyBudm0gb24gQWxwaW5lIExpbnV4XSgj
aW5zdGFsbGluZy1udm0tb24tYWxwaW5lLWxpbnV4KQotIFtSZW1vdmFsXSgj
cmVtb3ZhbCkKICAtIFtNYW51YWwgVW5pbnN0YWxsXSgjbWFudWFsLXVuaW5z
dGFsbCkKLSBbRG9ja2VyIGZvciBkZXZlbG9wbWVudCBlbnZpcm9ubWVudF0o
I2RvY2tlci1mb3ItZGV2ZWxvcG1lbnQtZW52aXJvbm1lbnQpCi0gW1Byb2Js
ZW1zXSgjcHJvYmxlbXMpCi0gW01hYyBPUyAidHJvdWJsZXNob290aW5nIl0o
I21hYy1vcy10cm91Ymxlc2hvb3RpbmcpCgo8IS0tIEVORCBkb2N0b2MgZ2Vu
ZXJhdGVkIFRPQyBwbGVhc2Uga2VlcCBjb21tZW50IGhlcmUgdG8gYWxsb3cg
YXV0byB1cGRhdGUgLS0+CgojIyBJbnN0YWxsYXRpb24gYW5kIFVwZGF0ZQoK
IyMjIEluc3RhbGwgJiBVcGRhdGUgc2NyaXB0CgpUbyAqKmluc3RhbGwqKiBv
ciAqKnVwZGF0ZSoqIG52bSwgeW91IHNob3VsZCBydW4gdGhlIFtpbnN0YWxs
IHNjcmlwdF1bMl0uIFRvIGRvIHRoYXQsIHlvdSBtYXkgZWl0aGVyIGRvd25s
b2FkIGFuZCBydW4gdGhlIHNjcmlwdCBtYW51YWxseSwgb3IgdXNlIHRoZSBm
b2xsb3dpbmcgY1VSTCBvciBXZ2V0IGNvbW1hbmQ6CmBgYHNoCmN1cmwgLW8t
IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9udm0tc2gvbnZt
L3YwLjM1LjEvaW5zdGFsbC5zaCB8IGJhc2gKYGBgCmBgYHNoCndnZXQgLXFP
LSBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vbnZtLXNoL252
bS92MC4zNS4xL2luc3RhbGwuc2ggfCBiYXNoCmBgYAoKUnVubmluZyBlaXRo
ZXIgb2YgdGhlIGFib3ZlIGNvbW1hbmRzIGRvd25sb2FkcyBhIHNjcmlwdCBh
bmQgcnVucyBpdC4gVGhlIHNjcmlwdCBjbG9uZXMgdGhlIG52bSByZXBvc2l0
b3J5IHRvIGB+Ly5udm1gLCBhbmQgYWRkcyB0aGUgc291cmNlIGxpbmVzIGZy
b20gdGhlIHNuaXBwZXQgYmVsb3cgdG8geW91ciBwcm9maWxlIChgfi8uYmFz
aF9wcm9maWxlYCwgYH4vLnpzaHJjYCwgYH4vLnByb2ZpbGVgLCBvciBgfi8u
YmFzaHJjYCkuCgo8YSBpZD0icHJvZmlsZV9zbmlwcGV0Ij48L2E+CmBgYHNo
CmV4cG9ydCBOVk1fRElSPSIkKFsgLXogIiR7WERHX0NPTkZJR19IT01FLX0i
IF0gJiYgcHJpbnRmICVzICIke0hPTUV9Ly5udm0iIHx8IHByaW50ZiAlcyAi
JHtYREdfQ09ORklHX0hPTUV9L252bSIpIgpbIC1zICIkTlZNX0RJUi9udm0u
c2giIF0gJiYgXC4gIiROVk1fRElSL252bS5zaCIgIyBUaGlzIGxvYWRzIG52
bQpgYGAKCjxzdWI+KipOb3RlOioqIElmIHRoZSBlbnZpcm9ubWVudCB2YXJp
YWJsZSBgJFhER19DT05GSUdfSE9NRWAgaXMgcHJlc2VudCwgaXQgd2lsbCBw
bGFjZSB0aGUgYG52bWAgZmlsZXMgdGhlcmUuPC9zdWI+CgoqKk5vdGU6Kiog
WW91IGNhbiBhZGQgYC0tbm8tdXNlYCB0byB0aGUgZW5kIG9mIHRoZSBhYm92
ZSBzY3JpcHQgKC4uLmBudm0uc2ggLS1uby11c2VgKSB0byBwb3N0cG9uZSB1
c2luZyBgbnZtYCB1bnRpbCB5b3UgbWFudWFsbHkgW2B1c2VgXSgjdXNhZ2Up
IGl0LgoKWW91IGNhbiBjdXN0b21pemUgdGhlIGluc3RhbGwgc291cmNlLCBk
aXJlY3RvcnksIHByb2ZpbGUsIGFuZCB2ZXJzaW9uIHVzaW5nIHRoZSBgTlZN
X1NPVVJDRWAsIGBOVk1fRElSYCwgYFBST0ZJTEVgLCBhbmQgYE5PREVfVkVS
U0lPTmAgdmFyaWFibGVzLgpFZzogYGN1cmwgLi4uIHwgTlZNX0RJUj0icGF0
aC90by9udm0iYC4gRW5zdXJlIHRoYXQgdGhlIGBOVk1fRElSYCBkb2VzIG5v
dCBjb250YWluIGEgdHJhaWxpbmcgc2xhc2guCgo8c3ViPipOQi4gVGhlIGlu
c3RhbGxlciBjYW4gdXNlIGBnaXRgLCBgY3VybGAsIG9yIGB3Z2V0YCB0byBk
b3dubG9hZCBgbnZtYCwgd2hhdGV2ZXIgaXMgYXZhaWxhYmxlLio8L3N1Yj4K
CioqTm90ZToqKiBPbiBMaW51eCwgYWZ0ZXIgcnVubmluZyB0aGUgaW5zdGFs
bCBzY3JpcHQsIGlmIHlvdSBnZXQgYG52bTogY29tbWFuZCBub3QgZm91bmRg
IG9yIHNlZSBubyBmZWVkYmFjayBmcm9tIHlvdXIgdGVybWluYWwgYWZ0ZXIg
eW91IHR5cGUgYGNvbW1hbmQgLXYgbnZtYCwgc2ltcGx5IGNsb3NlIHlvdXIg
Y3VycmVudCB0ZXJtaW5hbCwgb3BlbiBhIG5ldyB0ZXJtaW5hbCwgYW5kIHRy
eSB2ZXJpZnlpbmcgYWdhaW4uCgoqKk5vdGU6KiogU2luY2UgT1MgWCAxMC45
LCBgL3Vzci9iaW4vZ2l0YCBoYXMgYmVlbiBwcmVzZXQgYnkgWGNvZGUgY29t
bWFuZCBsaW5lIHRvb2xzLCB3aGljaCBtZWFucyB3ZSBjYW4ndCBwcm9wZXJs
eSBkZXRlY3QgaWYgR2l0IGlzIGluc3RhbGxlZCBvciBub3QuIFlvdSBuZWVk
IHRvIG1hbnVhbGx5IGluc3RhbGwgdGhlIFhjb2RlIGNvbW1hbmQgbGluZSB0
b29scyBiZWZvcmUgcnVubmluZyB0aGUgaW5zdGFsbCBzY3JpcHQsIG90aGVy
d2lzZSwgaXQnbGwgZmFpbC4gKHNlZSBbIzE3ODJdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9udm0tc2gvbnZtL2lzc3Vlcy8xNzgyKSkKCioqTm90ZToqKiBPbiBP
UyBYLCBpZiB5b3UgZ2V0IGBudm06IGNvbW1hbmQgbm90IGZvdW5kYCBhZnRl
ciBydW5uaW5nIHRoZSBpbnN0YWxsIHNjcmlwdCwgb25lIG9mIHRoZSBmb2xs
b3dpbmcgbWlnaHQgYmUgdGhlIHJlYXNvbjoKCiAgLSBZb3VyIHN5c3RlbSBt
YXkgbm90IGhhdmUgYSBgLmJhc2hfcHJvZmlsZWAgZmlsZSB3aGVyZSB0aGUg
Y29tbWFuZCBpcyBzZXQgdXAuIENyZWF0ZSBvbmUgd2l0aCBgdG91Y2ggfi8u
YmFzaF9wcm9maWxlYCBhbmQgcnVuIHRoZSBpbnN0YWxsIHNjcmlwdCBhZ2Fp
bgogIC0gWW91IG1pZ2h0IG5lZWQgdG8gcmVzdGFydCB5b3VyIHRlcm1pbmFs
IGluc3RhbmNlLiBUcnkgb3BlbmluZyBhIG5ldyB0YWIvd2luZG93IGluIHlv
dXIgdGVybWluYWwgYW5kIHJldHJ5LgoKSWYgdGhlIGFib3ZlIGRvZXNuJ3Qg
Zml4IHRoZSBwcm9ibGVtLCB5b3UgbWF5IHRyeSB0aGUgZm9sbG93aW5nOgog
IC0gT3BlbiB5b3VyIGAuYmFzaF9wcm9maWxlYCAob3IgYH4vLnpzaHJjYCwg
YH4vLnByb2ZpbGVgLCBvciBgfi8uYmFzaHJjYCkgYW5kIGFkZCB0aGUgZm9s
bG93aW5nIGxpbmUgb2YgY29kZTogYHNvdXJjZSB+Lzx5b3VyX3Byb2ZpbGVf
ZmlsZT5gLiBFLmcuIGBzb3VyY2Ugfi8uYmFzaHJjYCBvciBgc291cmNlIH4v
LnpzaHJjYC4KICAtIElmIHRoZSBhYm92ZSBkb24ndCB3b3JrLCB0cnkgYWRk
aW5nIHRoZSBbc25pcHBldCBmcm9tIHRoZSBpbnN0YWxsIHNlY3Rpb25dKCNw
cm9maWxlX3NuaXBwZXQpIHRoYXQgZmluZHMgdGhlIGNvcnJlY3QgbnZtIGRp
cmVjdG9yeSBhbmQgbG9hZHMgbnZtLCB0byB5b3VyIHByb2ZpbGUgKGB+Ly5i
YXNoX3Byb2ZpbGVgLCBgfi8uenNocmNgLCBgfi8ucHJvZmlsZWAsIG9yIGB+
Ly5iYXNocmNgKS4KCi0gRm9yIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgdGhp
cyBpc3N1ZSBhbmQgcG9zc2libGUgd29ya2Fyb3VuZHMsIHBsZWFzZSBbcmVm
ZXIgaGVyZV0oaHR0cHM6Ly9naXRodWIuY29tL252bS1zaC9udm0vaXNzdWVz
LzU3NikKCiMjIyMgQW5zaWJsZQogIFlvdSBjYW4gdXNlIGEgdGFzazoKCmBg
YAotIG5hbWU6IG52bQogIHNoZWxsOiA+CiAgICBjdXJsIC1vLSBodHRwczov
L3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vbnZtLXNoL252bS92MC4zNS4x
L2luc3RhbGwuc2ggfCBiYXNoCiAgYXJnczoKICAgIGNyZWF0ZXM6ICJ7eyBh
bnNpYmxlX2Vudi5IT01FIH19Ly5udm0vbnZtLnNoIgpgYGAKCiMjIyBWZXJp
ZnkgaW5zdGFsbGF0aW9uCgpUbyB2ZXJpZnkgdGhhdCBudm0gaGFzIGJlZW4g
aW5zdGFsbGVkLCBkbzoKCmBgYHNoCmNvbW1hbmQgLXYgbnZtCmBgYAoKd2hp
Y2ggc2hvdWxkIG91dHB1dCBgbnZtYCBpZiB0aGUgaW5zdGFsbGF0aW9uIHdh
cyBzdWNjZXNzZnVsLiBQbGVhc2Ugbm90ZSB0aGF0IGB3aGljaCBudm1gIHdp
bGwgbm90IHdvcmssIHNpbmNlIGBudm1gIGlzIGEgc291cmNlZCBzaGVsbCBm
dW5jdGlvbiwgbm90IGFuIGV4ZWN1dGFibGUgYmluYXJ5LgoKIyMjIEltcG9y
dGFudCBOb3RlcwoKSWYgeW91J3JlIHJ1bm5pbmcgYSBzeXN0ZW0gd2l0aG91
dCBwcmVwYWNrYWdlZCBiaW5hcnkgYXZhaWxhYmxlLCB3aGljaCBtZWFucyB5
b3UncmUgZ29pbmcgdG8gaW5zdGFsbCBub2RlanMgb3IgaW8uanMgZnJvbSBp
dHMgc291cmNlIGNvZGUsIHlvdSBuZWVkIHRvIG1ha2Ugc3VyZSB5b3VyIHN5
c3RlbSBoYXMgYSBDKysgY29tcGlsZXIuIEZvciBPUyBYLCBYY29kZSB3aWxs
IHdvcmssIGZvciBEZWJpYW4vVWJ1bnR1IGJhc2VkIEdOVS9MaW51eCwgdGhl
IGBidWlsZC1lc3NlbnRpYWxgIGFuZCBgbGlic3NsLWRldmAgcGFja2FnZXMg
d29yay4KCioqTm90ZToqKiBgbnZtYCBkb2VzIG5vdCBzdXBwb3J0IFdpbmRv
d3MgKHNlZSBbIzI4NF0oaHR0cHM6Ly9naXRodWIuY29tL252bS1zaC9udm0v
aXNzdWVzLzI4NCkpLCBidXQgbWF5IHdvcmsgaW4gV1NMIChXaW5kb3dzIFN1
YnN5c3RlbSBmb3IgTGludXgpIGRlcGVuZGluZyBvbiB0aGUgdmVyc2lvbiBv
ZiBXU0wuIEZvciBXaW5kb3dzLCB0d28gYWx0ZXJuYXRpdmVzIGV4aXN0LCB3
aGljaCBhcmUgbmVpdGhlciBzdXBwb3J0ZWQgbm9yIGRldmVsb3BlZCBieSB1
czoKCiAgLSBbbnZtLXdpbmRvd3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9jb3Jl
eWJ1dGxlci9udm0td2luZG93cykKICAtIFtub2Rpc3RdKGh0dHBzOi8vZ2l0
aHViLmNvbS9tYXJjZWxrbGVoci9ub2Rpc3QpCgoqKk5vdGU6KiogYG52bWAg
ZG9lcyBub3Qgc3VwcG9ydCBbRmlzaF0gZWl0aGVyIChzZWUgWyMzMDNdKGh0
dHBzOi8vZ2l0aHViLmNvbS9udm0tc2gvbnZtL2lzc3Vlcy8zMDMpKS4gQWx0
ZXJuYXRpdmVzIGV4aXN0LCB3aGljaCBhcmUgbmVpdGhlciBzdXBwb3J0ZWQg
bm9yIGRldmVsb3BlZCBieSB1czoKCiAgLSBbYmFzc10oaHR0cHM6Ly9naXRo
dWIuY29tL2VkYy9iYXNzKSBhbGxvd3MgeW91IHRvIHVzZSB1dGlsaXRpZXMg
d3JpdHRlbiBmb3IgQmFzaCBpbiBmaXNoIHNoZWxsCiAgLSBbZmFzdC1udm0t
ZmlzaF0oaHR0cHM6Ly9naXRodWIuY29tL2JyaWdhbmQvZmFzdC1udm0tZmlz
aCkgb25seSB3b3JrcyB3aXRoIHZlcnNpb24gbnVtYmVycyAobm90IGFsaWFz
ZXMpIGJ1dCBkb2Vzbid0IHNpZ25pZmljYW50bHkgc2xvdyB5b3VyIHNoZWxs
IHN0YXJ0dXAKICAtIFtwbHVnaW4tbnZtXShodHRwczovL2dpdGh1Yi5jb20v
ZGVyZWtzdGF2aXMvcGx1Z2luLW52bSkgcGx1Z2luIGZvciBbT2ggTXkgRmlz
aF0oaHR0cHM6Ly9naXRodWIuY29tL29oLW15LWZpc2gvb2gtbXktZmlzaCks
IHdoaWNoIG1ha2VzIG52bSBhbmQgaXRzIGNvbXBsZXRpb25zIGF2YWlsYWJs
ZSBpbiBmaXNoIHNoZWxsCiAgLSBbZm5tXShodHRwczovL2dpdGh1Yi5jb20v
ZmlzaGVybWFuL2ZubSkgLSBbZmlzaGVybWFuXShodHRwczovL2dpdGh1Yi5j
b20vZmlzaGVybWFuL2Zpc2hlcm1hbiktYmFzZWQgdmVyc2lvbiBtYW5hZ2Vy
IGZvciBmaXNoCiAgLSBbZmlzaC1udm1dKGh0dHBzOi8vZ2l0aHViLmNvbS9G
YWJpb0FudHVuZXMvZmlzaC1udm0pIC0gV3JhcHBlciBhcm91bmQgbnZtIGZv
ciBmaXNoLCBkZWxheXMgc291cmNpbmcgbnZtIHVudGlsIGl0J3MgYWN0dWFs
bHkgdXNlZC4KCioqTm90ZToqKiBXZSBzdGlsbCBoYXZlIHNvbWUgcHJvYmxl
bXMgd2l0aCBGcmVlQlNELCBiZWNhdXNlIHRoZXJlIGlzIG5vIG9mZmljaWFs
IHByZS1idWlsdCBiaW5hcnkgZm9yIEZyZWVCU0QsIGFuZCBidWlsZGluZyBm
cm9tIHNvdXJjZSBtYXkgbmVlZCBbcGF0Y2hlc10oaHR0cHM6Ly93d3cuZnJl
c2hwb3J0cy5vcmcvd3d3L25vZGUvZmlsZXMvcGF0Y2gtZGVwc192OF9zcmNf
YmFzZV9wbGF0Zm9ybV9wbGF0Zm9ybS1wb3NpeC5jYyk7IHNlZSB0aGUgaXNz
dWUgdGlja2V0OgoKICAtIFtbIzkwMF0gW0J1Z10gbm9kZWpzIG9uIEZyZWVC
U0QgbWF5IG5lZWQgdG8gYmUgcGF0Y2hlZF0oaHR0cHM6Ly9naXRodWIuY29t
L252bS1zaC9udm0vaXNzdWVzLzkwMCkKICAtIFtub2RlanMvbm9kZSMzNzE2
XShodHRwczovL2dpdGh1Yi5jb20vbm9kZWpzL25vZGUvaXNzdWVzLzM3MTYp
CgoqKk5vdGU6KiogT24gT1MgWCwgaWYgeW91IGRvIG5vdCBoYXZlIFhjb2Rl
IGluc3RhbGxlZCBhbmQgeW91IGRvIG5vdCB3aXNoIHRvIGRvd25sb2FkIHRo
ZSB+NC4zR0IgZmlsZSwgeW91IGNhbiBpbnN0YWxsIHRoZSBgQ29tbWFuZCBM
aW5lIFRvb2xzYC4gWW91IGNhbiBjaGVjayBvdXQgdGhpcyBibG9nIHBvc3Qg
b24gaG93IHRvIGp1c3QgdGhhdDoKCiAgLSBbSG93IHRvIEluc3RhbGwgQ29t
bWFuZCBMaW5lIFRvb2xzIGluIE9TIFggTWF2ZXJpY2tzICYgWW9zZW1pdGUg
KFdpdGhvdXQgWGNvZGUpXShodHRwOi8vb3N4ZGFpbHkuY29tLzIwMTQvMDIv
MTIvaW5zdGFsbC1jb21tYW5kLWxpbmUtdG9vbHMtbWFjLW9zLXgvKQoKKipO
b3RlOioqIE9uIE9TIFgsIGlmIHlvdSBoYXZlL2hhZCBhICJzeXN0ZW0iIG5v
ZGUgaW5zdGFsbGVkIGFuZCB3YW50IHRvIGluc3RhbGwgbW9kdWxlcyBnbG9i
YWxseSwga2VlcCBpbiBtaW5kIHRoYXQ6CgogIC0gV2hlbiB1c2luZyBgbnZt
YCB5b3UgZG8gbm90IG5lZWQgYHN1ZG9gIHRvIGdsb2JhbGx5IGluc3RhbGwg
YSBtb2R1bGUgd2l0aCBgbnBtIC1nYCwgc28gaW5zdGVhZCBvZiBkb2luZyBg
c3VkbyBucG0gaW5zdGFsbCAtZyBncnVudGAsIGRvIGluc3RlYWQgYG5wbSBp
bnN0YWxsIC1nIGdydW50YAogIC0gSWYgeW91IGhhdmUgYW4gYH4vLm5wbXJj
YCBmaWxlLCBtYWtlIHN1cmUgaXQgZG9lcyBub3QgY29udGFpbiBhbnkgYHBy
ZWZpeGAgc2V0dGluZ3MgKHdoaWNoIGlzIG5vdCBjb21wYXRpYmxlIHdpdGgg
YG52bWApCiAgLSBZb3UgY2FuIChidXQgc2hvdWxkIG5vdD8pIGtlZXAgeW91
ciBwcmV2aW91cyAic3lzdGVtIiBub2RlIGluc3RhbGwsIGJ1dCBgbnZtYCB3
aWxsIG9ubHkgYmUgYXZhaWxhYmxlIHRvIHlvdXIgdXNlciBhY2NvdW50ICh0
aGUgb25lIHVzZWQgdG8gaW5zdGFsbCBudm0pLiBUaGlzIG1pZ2h0IGNhdXNl
IHZlcnNpb24gbWlzbWF0Y2hlcywgYXMgb3RoZXIgdXNlcnMgd2lsbCBiZSB1
c2luZyBgL3Vzci9sb2NhbC9saWIvbm9kZV9tb2R1bGVzLypgIFZTIHlvdXIg
dXNlciBhY2NvdW50IHVzaW5nIGB+Ly5udm0vdmVyc2lvbnMvbm9kZS92WC5Y
LlgvbGliL25vZGVfbW9kdWxlcy8qYAoKSG9tZWJyZXcgaW5zdGFsbGF0aW9u
IGlzIG5vdCBzdXBwb3J0ZWQuIElmIHlvdSBoYXZlIGlzc3VlcyB3aXRoIGhv
bWVicmV3LWluc3RhbGxlZCBgbnZtYCwgcGxlYXNlIGBicmV3IHVuaW5zdGFs
bGAgaXQsIGFuZCBpbnN0YWxsIGl0IHVzaW5nIHRoZSBpbnN0cnVjdGlvbnMg
YmVsb3csIGJlZm9yZSBmaWxpbmcgYW4gaXNzdWUuCgoqKk5vdGU6KiogSWYg
eW91J3JlIHVzaW5nIGB6c2hgIHlvdSBjYW4gZWFzaWx5IGluc3RhbGwgYG52
bWAgYXMgYSB6c2ggcGx1Z2luLiBJbnN0YWxsIFtgenNoLW52bWBdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9sdWtlY2hpbGRzL3pzaC1udm0pIGFuZCBydW4gYG52
bSB1cGdyYWRlYCB0byB1cGdyYWRlLgoKKipOb3RlOioqIEdpdCB2ZXJzaW9u
cyBiZWZvcmUgdjEuNyBtYXkgZmFjZSBhIHByb2JsZW0gb2YgY2xvbmluZyBg
bnZtYCBzb3VyY2UgZnJvbSBHaXRIdWIgdmlhIGh0dHBzIHByb3RvY29sLCBh
bmQgdGhlcmUgaXMgYWxzbyBkaWZmZXJlbnQgYmVoYXZpb3Igb2YgZ2l0IGJl
Zm9yZSB2MS42LCBhbmQgZ2l0IHByaW9yIHRvIFt2MS4xNy4xMF0oaHR0cHM6
Ly9naXRodWIuY29tL2dpdC9naXQvY29tbWl0LzVhN2Q1YjY4M2Y4NjlkM2Uz
ODg0YTg5Nzc1MjQxYWZhNTE1ZGE5ZTcpIGNhbiBub3QgY2xvbmUgdGFncywg
c28gdGhlIG1pbmltdW0gcmVxdWlyZWQgZ2l0IHZlcnNpb24gaXMgdjEuNy4x
MC4gSWYgeW91IGFyZSBpbnRlcmVzdGVkIGluIHRoZSBwcm9ibGVtIHdlIG1l
bnRpb25lZCBoZXJlLCBwbGVhc2UgcmVmZXIgdG8gR2l0SHViJ3MgW0hUVFBT
IGNsb25pbmcgZXJyb3JzXShodHRwczovL2hlbHAuZ2l0aHViLmNvbS9hcnRp
Y2xlcy9odHRwcy1jbG9uaW5nLWVycm9ycy8pIGFydGljbGUuCgojIyMgR2l0
IGluc3RhbGwKCklmIHlvdSBoYXZlIGBnaXRgIGluc3RhbGxlZCAocmVxdWly
ZXMgZ2l0IHYxLjcuMTArKToKCjEuIGNsb25lIHRoaXMgcmVwbyBpbiB0aGUg
cm9vdCBvZiB5b3VyIHVzZXIgcHJvZmlsZQogIC0gYGNkIH4vYCBmcm9tIGFu
eXdoZXJlIHRoZW4gYGdpdCBjbG9uZSBodHRwczovL2dpdGh1Yi5jb20vbnZt
LXNoL252bS5naXQgLm52bWAKMS4gYGNkIH4vLm52bWAgYW5kIGNoZWNrIG91
dCB0aGUgbGF0ZXN0IHZlcnNpb24gd2l0aCBgZ2l0IGNoZWNrb3V0IHYwLjM1
LjFgCjEuIGFjdGl2YXRlIGBudm1gIGJ5IHNvdXJjaW5nIGl0IGZyb20geW91
ciBzaGVsbDogYC4gbnZtLnNoYAoKTm93IGFkZCB0aGVzZSBsaW5lcyB0byB5
b3VyIGB+Ly5iYXNocmNgLCBgfi8ucHJvZmlsZWAsIG9yIGB+Ly56c2hyY2Ag
ZmlsZSB0byBoYXZlIGl0IGF1dG9tYXRpY2FsbHkgc291cmNlZCB1cG9uIGxv
Z2luOgooeW91IG1heSBoYXZlIHRvIGFkZCB0byBtb3JlIHRoYW4gb25lIG9m
IHRoZSBhYm92ZSBmaWxlcykKCmBgYHNoCmV4cG9ydCBOVk1fRElSPSIkSE9N
RS8ubnZtIgpbIC1zICIkTlZNX0RJUi9udm0uc2giIF0gJiYgXC4gIiROVk1f
RElSL252bS5zaCIgICMgVGhpcyBsb2FkcyBudm0KWyAtcyAiJE5WTV9ESVIv
YmFzaF9jb21wbGV0aW9uIiBdICYmIFwuICIkTlZNX0RJUi9iYXNoX2NvbXBs
ZXRpb24iICAjIFRoaXMgbG9hZHMgbnZtIGJhc2hfY29tcGxldGlvbgpgYGAK
CiMjIyBNYW51YWwgSW5zdGFsbAoKRm9yIGEgZnVsbHkgbWFudWFsIGluc3Rh
bGwsIGV4ZWN1dGUgdGhlIGZvbGxvd2luZyBsaW5lcyB0byBmaXJzdCBjbG9u
ZSB0aGUgYG52bWAgcmVwb3NpdG9yeSBpbnRvIGAkSE9NRS8ubnZtYCwgYW5k
IHRoZW4gbG9hZCBgbnZtYDoKCmBgYHNoCmV4cG9ydCBOVk1fRElSPSIkSE9N
RS8ubnZtIiAmJiAoCiAgZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS9u
dm0tc2gvbnZtLmdpdCAiJE5WTV9ESVIiCiAgY2QgIiROVk1fRElSIgogIGdp
dCBjaGVja291dCBgZ2l0IGRlc2NyaWJlIC0tYWJicmV2PTAgLS10YWdzIC0t
bWF0Y2ggInZbMC05XSoiICQoZ2l0IHJldi1saXN0IC0tdGFncyAtLW1heC1j
b3VudD0xKWAKKSAmJiBcLiAiJE5WTV9ESVIvbnZtLnNoIgpgYGAKCk5vdyBh
ZGQgdGhlc2UgbGluZXMgdG8geW91ciBgfi8uYmFzaHJjYCwgYH4vLnByb2Zp
bGVgLCBvciBgfi8uenNocmNgIGZpbGUgdG8gaGF2ZSBpdCBhdXRvbWF0aWNh
bGx5IHNvdXJjZWQgdXBvbiBsb2dpbjoKKHlvdSBtYXkgaGF2ZSB0byBhZGQg
dG8gbW9yZSB0aGFuIG9uZSBvZiB0aGUgYWJvdmUgZmlsZXMpCgpgYGBzaApl
eHBvcnQgTlZNX0RJUj0iJEhPTUUvLm52bSIKWyAtcyAiJE5WTV9ESVIvbnZt
LnNoIiBdICYmIFwuICIkTlZNX0RJUi9udm0uc2giICMgVGhpcyBsb2FkcyBu
dm0KYGBgCgojIyMgTWFudWFsIHVwZ3JhZGUKCkZvciBtYW51YWwgdXBncmFk
ZSB3aXRoIGBnaXRgIChyZXF1aXJlcyBnaXQgdjEuNy4xMCspOgoKMS4gY2hh
bmdlIHRvIHRoZSBgJE5WTV9ESVJgCjEuIHB1bGwgZG93biB0aGUgbGF0ZXN0
IGNoYW5nZXMKMS4gY2hlY2sgb3V0IHRoZSBsYXRlc3QgdmVyc2lvbgoxLiBh
Y3RpdmF0ZSB0aGUgbmV3IHZlcnNpb24KCmBgYHNoCigKICBjZCAiJE5WTV9E
SVIiCiAgZ2l0IGZldGNoIC0tdGFncyBvcmlnaW4KICBnaXQgY2hlY2tvdXQg
YGdpdCBkZXNjcmliZSAtLWFiYnJldj0wIC0tdGFncyAtLW1hdGNoICJ2WzAt
OV0qIiAkKGdpdCByZXYtbGlzdCAtLXRhZ3MgLS1tYXgtY291bnQ9MSlgCikg
JiYgXC4gIiROVk1fRElSL252bS5zaCIKYGBgCgojIyBVc2FnZQoKVG8gZG93
bmxvYWQsIGNvbXBpbGUsIGFuZCBpbnN0YWxsIHRoZSBsYXRlc3QgcmVsZWFz
ZSBvZiBub2RlLCBkbyB0aGlzOgoKYGBgc2gKbnZtIGluc3RhbGwgbm9kZSAj
ICJub2RlIiBpcyBhbiBhbGlhcyBmb3IgdGhlIGxhdGVzdCB2ZXJzaW9uCmBg
YAoKVG8gaW5zdGFsbCBhIHNwZWNpZmljIHZlcnNpb24gb2Ygbm9kZToKCmBg
YHNoCm52bSBpbnN0YWxsIDYuMTQuNCAjIG9yIDEwLjEwLjAsIDguOS4xLCBl
dGMKYGBgCgpUaGUgZmlyc3QgdmVyc2lvbiBpbnN0YWxsZWQgYmVjb21lcyB0
aGUgZGVmYXVsdC4gTmV3IHNoZWxscyB3aWxsIHN0YXJ0IHdpdGggdGhlIGRl
ZmF1bHQgdmVyc2lvbiBvZiBub2RlIChlLmcuLCBgbnZtIGFsaWFzIGRlZmF1
bHRgKS4KCllvdSBjYW4gbGlzdCBhdmFpbGFibGUgdmVyc2lvbnMgdXNpbmcg
YGxzLXJlbW90ZWA6CgpgYGBzaApudm0gbHMtcmVtb3RlCmBgYAoKQW5kIHRo
ZW4gaW4gYW55IG5ldyBzaGVsbCBqdXN0IHVzZSB0aGUgaW5zdGFsbGVkIHZl
cnNpb246CgpgYGBzaApudm0gdXNlIG5vZGUKYGBgCgpPciB5b3UgY2FuIGp1
c3QgcnVuIGl0OgoKYGBgc2gKbnZtIHJ1biBub2RlIC0tdmVyc2lvbgpgYGAK
Ck9yLCB5b3UgY2FuIHJ1biBhbnkgYXJiaXRyYXJ5IGNvbW1hbmQgaW4gYSBz
dWJzaGVsbCB3aXRoIHRoZSBkZXNpcmVkIHZlcnNpb24gb2Ygbm9kZToKCmBg
YHNoCm52bSBleGVjIDQuMiBub2RlIC0tdmVyc2lvbgpgYGAKCllvdSBjYW4g
YWxzbyBnZXQgdGhlIHBhdGggdG8gdGhlIGV4ZWN1dGFibGUgdG8gd2hlcmUg
aXQgd2FzIGluc3RhbGxlZDoKCmBgYHNoCm52bSB3aGljaCA1LjAKYGBgCgpJ
biBwbGFjZSBvZiBhIHZlcnNpb24gcG9pbnRlciBsaWtlICIwLjEwIiBvciAi
NS4wIiBvciAiNC4yLjEiLCB5b3UgY2FuIHVzZSB0aGUgZm9sbG93aW5nIHNw
ZWNpYWwgZGVmYXVsdCBhbGlhc2VzIHdpdGggYG52bSBpbnN0YWxsYCwgYG52
bSB1c2VgLCBgbnZtIHJ1bmAsIGBudm0gZXhlY2AsIGBudm0gd2hpY2hgLCBl
dGM6CgogIC0gYG5vZGVgOiB0aGlzIGluc3RhbGxzIHRoZSBsYXRlc3QgdmVy
c2lvbiBvZiBbYG5vZGVgXShodHRwczovL25vZGVqcy5vcmcvZW4vKQogIC0g
YGlvanNgOiB0aGlzIGluc3RhbGxzIHRoZSBsYXRlc3QgdmVyc2lvbiBvZiBb
YGlvLmpzYF0oaHR0cHM6Ly9pb2pzLm9yZy9lbi8pCiAgLSBgc3RhYmxlYDog
dGhpcyBhbGlhcyBpcyBkZXByZWNhdGVkLCBhbmQgb25seSB0cnVseSBhcHBs
aWVzIHRvIGBub2RlYCBgdjAuMTJgIGFuZCBlYXJsaWVyLiBDdXJyZW50bHks
IHRoaXMgaXMgYW4gYWxpYXMgZm9yIGBub2RlYC4KICAtIGB1bnN0YWJsZWA6
IHRoaXMgYWxpYXMgcG9pbnRzIHRvIGBub2RlYCBgdjAuMTFgIC0gdGhlIGxh
c3QgInVuc3RhYmxlIiBub2RlIHJlbGVhc2UsIHNpbmNlIHBvc3QtMS4wLCBh
bGwgbm9kZSB2ZXJzaW9ucyBhcmUgc3RhYmxlLiAoaW4gU2VtVmVyLCB2ZXJz
aW9ucyBjb21tdW5pY2F0ZSBicmVha2FnZSwgbm90IHN0YWJpbGl0eSkuCgoj
IyMgTG9uZy10ZXJtIHN1cHBvcnQKCk5vZGUgaGFzIGEgW3NjaGVkdWxlXSho
dHRwczovL2dpdGh1Yi5jb20vbm9kZWpzL1JlbGVhc2UjcmVsZWFzZS1zY2hl
ZHVsZSkgZm9yIGxvbmctdGVybSBzdXBwb3J0IChMVFMpIFlvdSBjYW4gcmVm
ZXJlbmNlIExUUyB2ZXJzaW9ucyBpbiBhbGlhc2VzIGFuZCBgLm52bXJjYCBm
aWxlcyB3aXRoIHRoZSBub3RhdGlvbiBgbHRzLypgIGZvciB0aGUgbGF0ZXN0
IExUUywgYW5kIGBsdHMvYXJnb25gIGZvciBMVFMgcmVsZWFzZXMgZnJvbSB0
aGUgImFyZ29uIiBsaW5lLCBmb3IgZXhhbXBsZS4gSW4gYWRkaXRpb24sIHRo
ZSBmb2xsb3dpbmcgY29tbWFuZHMgc3VwcG9ydCBMVFMgYXJndW1lbnRzOgoK
ICAtIGBudm0gaW5zdGFsbCAtLWx0c2AgLyBgbnZtIGluc3RhbGwgLS1sdHM9
YXJnb25gIC8gYG52bSBpbnN0YWxsICdsdHMvKidgIC8gYG52bSBpbnN0YWxs
IGx0cy9hcmdvbmAKICAtIGBudm0gdW5pbnN0YWxsIC0tbHRzYCAvIGBudm0g
dW5pbnN0YWxsIC0tbHRzPWFyZ29uYCAvIGBudm0gdW5pbnN0YWxsICdsdHMv
KidgIC8gYG52bSB1bmluc3RhbGwgbHRzL2FyZ29uYAogIC0gYG52bSB1c2Ug
LS1sdHNgIC8gYG52bSB1c2UgLS1sdHM9YXJnb25gIC8gYG52bSB1c2UgJ2x0
cy8qJ2AgLyBgbnZtIHVzZSBsdHMvYXJnb25gCiAgLSBgbnZtIGV4ZWMgLS1s
dHNgIC8gYG52bSBleGVjIC0tbHRzPWFyZ29uYCAvIGBudm0gZXhlYyAnbHRz
LyonYCAvIGBudm0gZXhlYyBsdHMvYXJnb25gCiAgLSBgbnZtIHJ1biAtLWx0
c2AgLyBgbnZtIHJ1biAtLWx0cz1hcmdvbmAgLyBgbnZtIHJ1biAnbHRzLyon
YCAvIGBudm0gcnVuIGx0cy9hcmdvbmAKICAtIGBudm0gbHMtcmVtb3RlIC0t
bHRzYCAvIGBudm0gbHMtcmVtb3RlIC0tbHRzPWFyZ29uYCBgbnZtIGxzLXJl
bW90ZSAnbHRzLyonYCAvIGBudm0gbHMtcmVtb3RlIGx0cy9hcmdvbmAKICAt
IGBudm0gdmVyc2lvbi1yZW1vdGUgLS1sdHNgIC8gYG52bSB2ZXJzaW9uLXJl
bW90ZSAtLWx0cz1hcmdvbmAgLyBgbnZtIHZlcnNpb24tcmVtb3RlICdsdHMv
KidgIC8gYG52bSB2ZXJzaW9uLXJlbW90ZSBsdHMvYXJnb25gCgpBbnkgdGlt
ZSB5b3VyIGxvY2FsIGNvcHkgb2YgYG52bWAgY29ubmVjdHMgdG8gaHR0cHM6
Ly9ub2RlanMub3JnLCBpdCB3aWxsIHJlLWNyZWF0ZSB0aGUgYXBwcm9wcmlh
dGUgbG9jYWwgYWxpYXNlcyBmb3IgYWxsIGF2YWlsYWJsZSBMVFMgbGluZXMu
IFRoZXNlIGFsaWFzZXMgKHN0b3JlZCB1bmRlciBgJE5WTV9ESVIvYWxpYXMv
bHRzYCksIGFyZSBtYW5hZ2VkIGJ5IGBudm1gLCBhbmQgeW91IHNob3VsZCBu
b3QgbW9kaWZ5LCByZW1vdmUsIG9yIGNyZWF0ZSB0aGVzZSBmaWxlcyAtIGV4
cGVjdCB5b3VyIGNoYW5nZXMgdG8gYmUgdW5kb25lLCBhbmQgZXhwZWN0IG1l
ZGRsaW5nIHdpdGggdGhlc2UgZmlsZXMgdG8gY2F1c2UgYnVncyB0aGF0IHdp
bGwgbGlrZWx5IG5vdCBiZSBzdXBwb3J0ZWQuCgojIyMgTWlncmF0aW5nIGds
b2JhbCBwYWNrYWdlcyB3aGlsZSBpbnN0YWxsaW5nCgpJZiB5b3Ugd2FudCB0
byBpbnN0YWxsIGEgbmV3IHZlcnNpb24gb2YgTm9kZS5qcyBhbmQgbWlncmF0
ZSBucG0gcGFja2FnZXMgZnJvbSBhIHByZXZpb3VzIHZlcnNpb246CgpgYGBz
aApudm0gaW5zdGFsbCBub2RlIC0tcmVpbnN0YWxsLXBhY2thZ2VzLWZyb209
bm9kZQpgYGAKClRoaXMgd2lsbCBmaXJzdCB1c2UgIm52bSB2ZXJzaW9uIG5v
ZGUiIHRvIGlkZW50aWZ5IHRoZSBjdXJyZW50IHZlcnNpb24geW91J3JlIG1p
Z3JhdGluZyBwYWNrYWdlcyBmcm9tLiBUaGVuIGl0IHJlc29sdmVzIHRoZSBu
ZXcgdmVyc2lvbiB0byBpbnN0YWxsIGZyb20gdGhlIHJlbW90ZSBzZXJ2ZXIg
YW5kIGluc3RhbGxzIGl0LiBMYXN0bHksIGl0IHJ1bnMgIm52bSByZWluc3Rh
bGwtcGFja2FnZXMiIHRvIHJlaW5zdGFsbCB0aGUgbnBtIHBhY2thZ2VzIGZy
b20geW91ciBwcmlvciB2ZXJzaW9uIG9mIE5vZGUgdG8gdGhlIG5ldyBvbmUu
CgpZb3UgY2FuIGFsc28gaW5zdGFsbCBhbmQgbWlncmF0ZSBucG0gcGFja2Fn
ZXMgZnJvbSBzcGVjaWZpYyB2ZXJzaW9ucyBvZiBOb2RlIGxpa2UgdGhpczoK
CmBgYHNoCm52bSBpbnN0YWxsIDYgLS1yZWluc3RhbGwtcGFja2FnZXMtZnJv
bT01Cm52bSBpbnN0YWxsIHY0LjIgLS1yZWluc3RhbGwtcGFja2FnZXMtZnJv
bT1pb2pzCmBgYAoKTm90ZSB0aGF0IHJlaW5zdGFsbGluZyBwYWNrYWdlcyBf
ZXhwbGljaXRseSBkb2VzIG5vdCB1cGRhdGUgdGhlIG5wbSB2ZXJzaW9uXyDi
gJQgdGhpcyBpcyB0byBlbnN1cmUgdGhhdCBucG0gaXNuJ3QgYWNjaWRlbnRh
bGx5IHVwZ3JhZGVkIHRvIGEgYnJva2VuIHZlcnNpb24gZm9yIHRoZSBuZXcg
bm9kZSB2ZXJzaW9uLgoKVG8gdXBkYXRlIG5wbSBhdCB0aGUgc2FtZSB0aW1l
IGFkZCB0aGUgYC0tbGF0ZXN0LW5wbWAgZmxhZywgbGlrZSB0aGlzOgoKYGBg
c2gKbnZtIGluc3RhbGwgbHRzLyogLS1yZWluc3RhbGwtcGFja2FnZXMtZnJv
bT1kZWZhdWx0IC0tbGF0ZXN0LW5wbQpgYGAKCm9yLCB5b3UgY2FuIGF0IGFu
eSB0aW1lIHJ1biB0aGUgZm9sbG93aW5nIGNvbW1hbmQgdG8gZ2V0IHRoZSBs
YXRlc3Qgc3VwcG9ydGVkIG5wbSB2ZXJzaW9uIG9uIHRoZSBjdXJyZW50IG5v
ZGUgdmVyc2lvbjoKYGBgc2gKbnZtIGluc3RhbGwtbGF0ZXN0LW5wbQpgYGAK
CklmIHlvdSd2ZSBhbHJlYWR5IGdvdHRlbiBhbiBlcnJvciB0byB0aGUgZWZm
ZWN0IG9mICJucG0gZG9lcyBub3Qgc3VwcG9ydCBOb2RlLmpzIiwgeW91J2xs
IG5lZWQgdG8gKDEpIHJldmVydCB0byBhIHByZXZpb3VzIG5vZGUgdmVyc2lv
biAoYG52bSBsc2AgJiBgbnZtIHVzZSA8eW91ciBsYXRlc3QgX3dvcmtpbmdf
IHZlcnNpb24gZnJvbSB0aGUgbHM+YCwgKDIpIGRlbGV0ZSB0aGUgbmV3bHkg
Y3JlYXRlZCBub2RlIHZlcnNpb24gKGBudm0gdW5pbnN0YWxsIDx5b3VyIF9i
cm9rZW5fIHZlcnNpb24gb2Ygbm9kZSBmcm9tIHRoZSBscz5gKSwgdGhlbiAo
MykgcmVydW4geW91ciBgbnZtIGluc3RhbGxgIHdpdGggdGhlIGAtLWxhdGVz
dC1ucG1gIGZsYWcuCgoKIyMjIERlZmF1bHQgZ2xvYmFsIHBhY2thZ2VzIGZy
b20gZmlsZSB3aGlsZSBpbnN0YWxsaW5nCgpJZiB5b3UgaGF2ZSBhIGxpc3Qg
b2YgZGVmYXVsdCBwYWNrYWdlcyB5b3Ugd2FudCBpbnN0YWxsZWQgZXZlcnkg
dGltZSB5b3UgaW5zdGFsbCBhIG5ldyB2ZXJzaW9uLCB3ZSBzdXBwb3J0IHRo
YXQgdG9vIC0tIGp1c3QgYWRkIHRoZSBwYWNrYWdlIG5hbWVzLCBvbmUgcGVy
IGxpbmUsIHRvIHRoZSBmaWxlIGAkTlZNX0RJUi9kZWZhdWx0LXBhY2thZ2Vz
YC4gWW91IGNhbiBhZGQgYW55dGhpbmcgbnBtIHdvdWxkIGFjY2VwdCBhcyBh
IHBhY2thZ2UgYXJndW1lbnQgb24gdGhlIGNvbW1hbmQgbGluZS4KCmBgYHNo
CiMgJE5WTV9ESVIvZGVmYXVsdC1wYWNrYWdlcwoKcmltcmFmCm9iamVjdC1p
bnNwZWN0QDEuMC4yCnN0ZXZlbWFvL2xlZnQtcGFkCmBgYAoKIyMjIGlvLmpz
CgpJZiB5b3Ugd2FudCB0byBpbnN0YWxsIFtpby5qc10oaHR0cHM6Ly9naXRo
dWIuY29tL2lvanMvaW8uanMvKToKCmBgYHNoCm52bSBpbnN0YWxsIGlvanMK
YGBgCgpJZiB5b3Ugd2FudCB0byBpbnN0YWxsIGEgbmV3IHZlcnNpb24gb2Yg
aW8uanMgYW5kIG1pZ3JhdGUgbnBtIHBhY2thZ2VzIGZyb20gYSBwcmV2aW91
cyB2ZXJzaW9uOgoKYGBgc2gKbnZtIGluc3RhbGwgaW9qcyAtLXJlaW5zdGFs
bC1wYWNrYWdlcy1mcm9tPWlvanMKYGBgCgpUaGUgc2FtZSBndWlkZWxpbmVz
IG1lbnRpb25lZCBmb3IgbWlncmF0aW5nIG5wbSBwYWNrYWdlcyBpbiBub2Rl
IGFyZSBhcHBsaWNhYmxlIHRvIGlvLmpzLgoKIyMjIFN5c3RlbSB2ZXJzaW9u
IG9mIG5vZGUKCklmIHlvdSB3YW50IHRvIHVzZSB0aGUgc3lzdGVtLWluc3Rh
bGxlZCB2ZXJzaW9uIG9mIG5vZGUsIHlvdSBjYW4gdXNlIHRoZSBzcGVjaWFs
IGRlZmF1bHQgYWxpYXMgInN5c3RlbSI6CgpgYGBzaApudm0gdXNlIHN5c3Rl
bQpudm0gcnVuIHN5c3RlbSAtLXZlcnNpb24KYGBgCgojIyMgTGlzdGluZyB2
ZXJzaW9ucwoKSWYgeW91IHdhbnQgdG8gc2VlIHdoYXQgdmVyc2lvbnMgYXJl
IGluc3RhbGxlZDoKCmBgYHNoCm52bSBscwpgYGAKCklmIHlvdSB3YW50IHRv
IHNlZSB3aGF0IHZlcnNpb25zIGFyZSBhdmFpbGFibGUgdG8gaW5zdGFsbDoK
CmBgYHNoCm52bSBscy1yZW1vdGUKYGBgCgojIyMjIFN1cHByZXNzaW5nIGNv
bG9yaXplZCBvdXRwdXQKCmBudm0gbHNgLCBgbnZtIGxzLXJlbW90ZWAgYW5k
IGBudm0gYWxpYXNgIHVzdWFsbHkgcHJvZHVjZSBjb2xvcml6ZWQgb3V0cHV0
LiBZb3UgY2FuIGRpc2FibGUgY29sb3JzIHdpdGggdGhlIGAtLW5vLWNvbG9y
c2Agb3B0aW9uIChvciBieSBzZXR0aW5nIHRoZSBlbnZpcm9ubWVudCB2YXJp
YWJsZSBgVEVSTT1kdW1iYCk6CgpgYGBzaApudm0gbHMgLS1uby1jb2xvcnMK
VEVSTT1kdW1iIG52bSBscwpgYGAKClRvIHJlc3RvcmUgeW91ciBQQVRILCB5
b3UgY2FuIGRlYWN0aXZhdGUgaXQ6CgpgYGBzaApudm0gZGVhY3RpdmF0ZQpg
YGAKClRvIHNldCBhIGRlZmF1bHQgTm9kZSB2ZXJzaW9uIHRvIGJlIHVzZWQg
aW4gYW55IG5ldyBzaGVsbCwgdXNlIHRoZSBhbGlhcyAnZGVmYXVsdCc6Cgpg
YGBzaApudm0gYWxpYXMgZGVmYXVsdCBub2RlCmBgYAoKVG8gdXNlIGEgbWly
cm9yIG9mIHRoZSBub2RlIGJpbmFyaWVzLCBzZXQgYCROVk1fTk9ERUpTX09S
R19NSVJST1JgOgoKYGBgc2gKZXhwb3J0IE5WTV9OT0RFSlNfT1JHX01JUlJP
Uj1odHRwczovL25vZGVqcy5vcmcvZGlzdApudm0gaW5zdGFsbCBub2RlCgpO
Vk1fTk9ERUpTX09SR19NSVJST1I9aHR0cHM6Ly9ub2RlanMub3JnL2Rpc3Qg
bnZtIGluc3RhbGwgNC4yCmBgYAoKVG8gdXNlIGEgbWlycm9yIG9mIHRoZSBp
by5qcyBiaW5hcmllcywgc2V0IGAkTlZNX0lPSlNfT1JHX01JUlJPUmA6Cgpg
YGBzaApleHBvcnQgTlZNX0lPSlNfT1JHX01JUlJPUj1odHRwczovL2lvanMu
b3JnL2Rpc3QKbnZtIGluc3RhbGwgaW9qcy12MS4wLjMKCk5WTV9JT0pTX09S
R19NSVJST1I9aHR0cHM6Ly9pb2pzLm9yZy9kaXN0IG52bSBpbnN0YWxsIGlv
anMtdjEuMC4zCmBgYAoKYG52bSB1c2VgIHdpbGwgbm90LCBieSBkZWZhdWx0
LCBjcmVhdGUgYSAiY3VycmVudCIgc3ltbGluay4gU2V0IGAkTlZNX1NZTUxJ
TktfQ1VSUkVOVGAgdG8gInRydWUiIHRvIGVuYWJsZSB0aGlzIGJlaGF2aW9y
LCB3aGljaCBpcyBzb21ldGltZXMgdXNlZnVsIGZvciBJREVzLiBOb3RlIHRo
YXQgdXNpbmcgYG52bWAgaW4gbXVsdGlwbGUgc2hlbGwgdGFicyB3aXRoIHRo
aXMgZW52aXJvbm1lbnQgdmFyaWFibGUgZW5hYmxlZCBjYW4gY2F1c2UgcmFj
ZSBjb25kaXRpb25zLgoKIyMjIC5udm1yYwoKWW91IGNhbiBjcmVhdGUgYSBg
Lm52bXJjYCBmaWxlIGNvbnRhaW5pbmcgYSBub2RlIHZlcnNpb24gbnVtYmVy
IChvciBhbnkgb3RoZXIgc3RyaW5nIHRoYXQgYG52bWAgdW5kZXJzdGFuZHM7
IHNlZSBgbnZtIC0taGVscGAgZm9yIGRldGFpbHMpIGluIHRoZSBwcm9qZWN0
IHJvb3QgZGlyZWN0b3J5IChvciBhbnkgcGFyZW50IGRpcmVjdG9yeSkuCkFm
dGVyd2FyZHMsIGBudm0gdXNlYCwgYG52bSBpbnN0YWxsYCwgYG52bSBleGVj
YCwgYG52bSBydW5gLCBhbmQgYG52bSB3aGljaGAgd2lsbCB1c2UgdGhlIHZl
cnNpb24gc3BlY2lmaWVkIGluIHRoZSBgLm52bXJjYCBmaWxlIGlmIG5vIHZl
cnNpb24gaXMgc3VwcGxpZWQgb24gdGhlIGNvbW1hbmQgbGluZS4KCkZvciBl
eGFtcGxlLCB0byBtYWtlIG52bSBkZWZhdWx0IHRvIHRoZSBsYXRlc3QgNS45
IHJlbGVhc2UsIHRoZSBsYXRlc3QgTFRTIHZlcnNpb24sIG9yIHRoZSBsYXRl
c3Qgbm9kZSB2ZXJzaW9uIGZvciB0aGUgY3VycmVudCBkaXJlY3Rvcnk6Cgpg
YGBzaAokIGVjaG8gIjUuOSIgPiAubnZtcmMKCiQgZWNobyAibHRzLyoiID4g
Lm52bXJjICMgdG8gZGVmYXVsdCB0byB0aGUgbGF0ZXN0IExUUyB2ZXJzaW9u
CgokIGVjaG8gIm5vZGUiID4gLm52bXJjICMgdG8gZGVmYXVsdCB0byB0aGUg
bGF0ZXN0IHZlcnNpb24KYGBgCgpUaGVuIHdoZW4geW91IHJ1biBudm06Cgpg
YGBzaAokIG52bSB1c2UKRm91bmQgJy9wYXRoL3RvL3Byb2plY3QvLm52bXJj
JyB3aXRoIHZlcnNpb24gPDUuOT4KTm93IHVzaW5nIG5vZGUgdjUuOS4xIChu
cG0gdjMuNy4zKQpgYGAKCmBudm0gdXNlYCBldC4gYWwuIHdpbGwgdHJhdmVy
c2UgZGlyZWN0b3J5IHN0cnVjdHVyZSB1cHdhcmRzIGZyb20gdGhlIGN1cnJl
bnQgZGlyZWN0b3J5IGxvb2tpbmcgZm9yIHRoZSBgLm52bXJjYCBmaWxlLiBJ
biBvdGhlciB3b3JkcywgcnVubmluZyBgbnZtIHVzZWAgZXQuIGFsLiBpbiBh
bnkgc3ViZGlyZWN0b3J5IG9mIGEgZGlyZWN0b3J5IHdpdGggYW4gYC5udm1y
Y2Agd2lsbCByZXN1bHQgaW4gdGhhdCBgLm52bXJjYCBiZWluZyB1dGlsaXpl
ZC4KClRoZSBjb250ZW50cyBvZiBhIGAubnZtcmNgIGZpbGUgKiptdXN0Kiog
YmUgdGhlIGA8dmVyc2lvbj5gIChhcyBkZXNjcmliZWQgYnkgYG52bSAtLWhl
bHBgKSBmb2xsb3dlZCBieSBhIG5ld2xpbmUuIE5vIHRyYWlsaW5nIHNwYWNl
cyBhcmUgYWxsb3dlZCwgYW5kIHRoZSB0cmFpbGluZyBuZXdsaW5lIGlzIHJl
cXVpcmVkLgoKIyMjIERlZXBlciBTaGVsbCBJbnRlZ3JhdGlvbgoKWW91IGNh
biB1c2UgW2Bhdm5gXShodHRwczovL2dpdGh1Yi5jb20vd2J5b3VuZy9hdm4p
IHRvIGRlZXBseSBpbnRlZ3JhdGUgaW50byB5b3VyIHNoZWxsIGFuZCBhdXRv
bWF0aWNhbGx5IGludm9rZSBgbnZtYCB3aGVuIGNoYW5naW5nIGRpcmVjdG9y
aWVzLiBgYXZuYCBpcyAqKm5vdCoqIHN1cHBvcnRlZCBieSB0aGUgYG52bWAg
ZGV2ZWxvcG1lbnQgdGVhbS4gUGxlYXNlIFtyZXBvcnQgaXNzdWVzIHRvIHRo
ZSBgYXZuYCB0ZWFtXShodHRwczovL2dpdGh1Yi5jb20vd2J5b3VuZy9hdm4v
aXNzdWVzL25ldykuCgpJZiB5b3UgcHJlZmVyIGEgbGlnaHRlci13ZWlnaHQg
c29sdXRpb24sIHRoZSByZWNpcGVzIGJlbG93IGhhdmUgYmVlbiBjb250cmli
dXRlZCBieSBgbnZtYCB1c2Vycy4gVGhleSBhcmUgKipub3QqKiBzdXBwb3J0
ZWQgYnkgdGhlIGBudm1gIGRldmVsb3BtZW50IHRlYW0uIFdlIGFyZSwgaG93
ZXZlciwgYWNjZXB0aW5nIHB1bGwgcmVxdWVzdHMgZm9yIG1vcmUgZXhhbXBs
ZXMuCgojIyMjIGJhc2gKCiMjIyMjIEF1dG9tYXRpY2FsbHkgY2FsbCBgbnZt
IHVzZWAKClB1dCB0aGUgZm9sbG93aW5nIGF0IHRoZSBlbmQgb2YgeW91ciBg
JEhPTUUvLmJhc2hyY2A6CgpgYGBiYXNoCmZpbmQtdXAgKCkgewogICAgcGF0
aD0kKHB3ZCkKICAgIHdoaWxlIFtbICIkcGF0aCIgIT0gIiIgJiYgISAtZSAi
JHBhdGgvJDEiIF1dOyBkbwogICAgICAgIHBhdGg9JHtwYXRoJS8qfQogICAg
ZG9uZQogICAgZWNobyAiJHBhdGgiCn0KCmNkbnZtKCl7CiAgICBjZCAiJEAi
OwogICAgbnZtX3BhdGg9JChmaW5kLXVwIC5udm1yYyB8IHRyIC1kICdbOnNw
YWNlOl0nKQoKICAgICMgSWYgdGhlcmUgYXJlIG5vIC5udm1yYyBmaWxlLCB1
c2UgdGhlIGRlZmF1bHQgbnZtIHZlcnNpb24KICAgIGlmIFtbICEgJG52bV9w
YXRoID0gKlteWzpzcGFjZTpdXSogXV07IHRoZW4KCiAgICAgICAgZGVjbGFy
ZSBkZWZhdWx0X3ZlcnNpb247CiAgICAgICAgZGVmYXVsdF92ZXJzaW9uPSQo
bnZtIHZlcnNpb24gZGVmYXVsdCk7CgogICAgICAgICMgSWYgdGhlcmUgaXMg
bm8gZGVmYXVsdCB2ZXJzaW9uLCBzZXQgaXQgdG8gYG5vZGVgCiAgICAgICAg
IyBUaGlzIHdpbGwgdXNlIHRoZSBsYXRlc3QgdmVyc2lvbiBvbiB5b3VyIG1h
Y2hpbmUKICAgICAgICBpZiBbWyAkZGVmYXVsdF92ZXJzaW9uID09ICJOL0Ei
IF1dOyB0aGVuCiAgICAgICAgICAgIG52bSBhbGlhcyBkZWZhdWx0IG5vZGU7
CiAgICAgICAgICAgIGRlZmF1bHRfdmVyc2lvbj0kKG52bSB2ZXJzaW9uIGRl
ZmF1bHQpOwogICAgICAgIGZpCgogICAgICAgICMgSWYgdGhlIGN1cnJlbnQg
dmVyc2lvbiBpcyBub3QgdGhlIGRlZmF1bHQgdmVyc2lvbiwgc2V0IGl0IHRv
IHVzZSB0aGUgZGVmYXVsdCB2ZXJzaW9uCiAgICAgICAgaWYgW1sgJChudm0g
Y3VycmVudCkgIT0gIiRkZWZhdWx0X3ZlcnNpb24iIF1dOyB0aGVuCiAgICAg
ICAgICAgIG52bSB1c2UgZGVmYXVsdDsKICAgICAgICBmaQoKICAgICAgICBl
bGlmIFtbIC1zICRudm1fcGF0aC8ubnZtcmMgJiYgLXIgJG52bV9wYXRoLy5u
dm1yYyBdXTsgdGhlbgogICAgICAgIGRlY2xhcmUgbnZtX3ZlcnNpb24KICAg
ICAgICBudm1fdmVyc2lvbj0kKDwiJG52bV9wYXRoIi8ubnZtcmMpCgogICAg
ICAgIGRlY2xhcmUgbG9jYWxseV9yZXNvbHZlZF9udm1fdmVyc2lvbgogICAg
ICAgICMgYG52bSBsc2Agd2lsbCBjaGVjayBhbGwgbG9jYWxseS1hdmFpbGFi
bGUgdmVyc2lvbnMKICAgICAgICAjIElmIHRoZXJlIGFyZSBtdWx0aXBsZSBt
YXRjaGluZyB2ZXJzaW9ucywgdGFrZSB0aGUgbGF0ZXN0IG9uZQogICAgICAg
ICMgUmVtb3ZlIHRoZSBgLT5gIGFuZCBgKmAgY2hhcmFjdGVycyBhbmQgc3Bh
Y2VzCiAgICAgICAgIyBgbG9jYWxseV9yZXNvbHZlZF9udm1fdmVyc2lvbmAg
d2lsbCBiZSBgTi9BYCBpZiBubyBsb2NhbCB2ZXJzaW9ucyBhcmUgZm91bmQK
ICAgICAgICBsb2NhbGx5X3Jlc29sdmVkX252bV92ZXJzaW9uPSQobnZtIGxz
IC0tbm8tY29sb3JzICIkbnZtX3ZlcnNpb24iIHwgdGFpbCAtMSB8IHRyIC1k
ICdcLT4qJyB8IHRyIC1kICdbOnNwYWNlOl0nKQoKICAgICAgICAjIElmIGl0
IGlzIG5vdCBhbHJlYWR5IGluc3RhbGxlZCwgaW5zdGFsbCBpdAogICAgICAg
ICMgYG52bSBpbnN0YWxsYCB3aWxsIGltcGxpY2l0bHkgdXNlIHRoZSBuZXds
eS1pbnN0YWxsZWQgdmVyc2lvbgogICAgICAgIGlmIFtbICIkbG9jYWxseV9y
ZXNvbHZlZF9udm1fdmVyc2lvbiIgPT0gIk4vQSIgXV07IHRoZW4KICAgICAg
ICAgICAgbnZtIGluc3RhbGwgIiRudm1fdmVyc2lvbiI7CiAgICAgICAgZWxp
ZiBbWyAkKG52bSBjdXJyZW50KSAhPSAiJGxvY2FsbHlfcmVzb2x2ZWRfbnZt
X3ZlcnNpb24iIF1dOyB0aGVuCiAgICAgICAgICAgIG52bSB1c2UgIiRudm1f
dmVyc2lvbiI7CiAgICAgICAgZmkKICAgIGZpCn0KYWxpYXMgY2Q9J2NkbnZt
JwpgYGAKClRoaXMgYWxpYXMgd291bGQgc2VhcmNoICd1cCcgZnJvbSB5b3Vy
IGN1cnJlbnQgZGlyZWN0b3J5IGluIG9yZGVyIHRvIGRldGVjdCBhIGAubnZt
cmNgIGZpbGUuIElmIGl0IGZpbmRzIGl0LCBpdCB3aWxsIHN3aXRjaCB0byB0
aGF0IHZlcnNpb247IGlmIG5vdCwgaXQgd2lsbCB1c2UgdGhlIGRlZmF1bHQg
dmVyc2lvbi4KCiMjIyMgenNoCgojIyMjIyBDYWxsaW5nIGBudm0gdXNlYCBh
dXRvbWF0aWNhbGx5IGluIGEgZGlyZWN0b3J5IHdpdGggYSBgLm52bXJjYCBm
aWxlCgpQdXQgdGhpcyBpbnRvIHlvdXIgYCRIT01FLy56c2hyY2AgdG8gY2Fs
bCBgbnZtIHVzZWAgYXV0b21hdGljYWxseSB3aGVuZXZlciB5b3UgZW50ZXIg
YSBkaXJlY3RvcnkgdGhhdCBjb250YWlucyBhbgpgLm52bXJjYCBmaWxlIHdp
dGggYSBzdHJpbmcgdGVsbGluZyBudm0gd2hpY2ggbm9kZSB0byBgdXNlYDoK
CmBgYHpzaAojIHBsYWNlIHRoaXMgYWZ0ZXIgbnZtIGluaXRpYWxpemF0aW9u
IQphdXRvbG9hZCAtVSBhZGQtenNoLWhvb2sKbG9hZC1udm1yYygpIHsKICBs
b2NhbCBub2RlX3ZlcnNpb249IiQobnZtIHZlcnNpb24pIgogIGxvY2FsIG52
bXJjX3BhdGg9IiQobnZtX2ZpbmRfbnZtcmMpIgoKICBpZiBbIC1uICIkbnZt
cmNfcGF0aCIgXTsgdGhlbgogICAgbG9jYWwgbnZtcmNfbm9kZV92ZXJzaW9u
PSQobnZtIHZlcnNpb24gIiQoY2F0ICIke252bXJjX3BhdGh9IikiKQoKICAg
IGlmIFsgIiRudm1yY19ub2RlX3ZlcnNpb24iID0gIk4vQSIgXTsgdGhlbgog
ICAgICBudm0gaW5zdGFsbAogICAgZWxpZiBbICIkbnZtcmNfbm9kZV92ZXJz
aW9uIiAhPSAiJG5vZGVfdmVyc2lvbiIgXTsgdGhlbgogICAgICBudm0gdXNl
CiAgICBmaQogIGVsaWYgWyAiJG5vZGVfdmVyc2lvbiIgIT0gIiQobnZtIHZl
cnNpb24gZGVmYXVsdCkiIF07IHRoZW4KICAgIGVjaG8gIlJldmVydGluZyB0
byBudm0gZGVmYXVsdCB2ZXJzaW9uIgogICAgbnZtIHVzZSBkZWZhdWx0CiAg
ZmkKfQphZGQtenNoLWhvb2sgY2hwd2QgbG9hZC1udm1yYwpsb2FkLW52bXJj
CmBgYAoKIyMgTGljZW5zZQoKbnZtIGlzIHJlbGVhc2VkIHVuZGVyIHRoZSBN
SVQgbGljZW5zZS4KCgpDb3B5cmlnaHQgKEMpIDIwMTAgVGltIENhc3dlbGwg
YW5kIEpvcmRhbiBIYXJiYW5kCgpQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFu
dGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcg
YSBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1l
bnRhdGlvbiBmaWxlcyAodGhlICJTb2Z0d2FyZSIpLCB0byBkZWFsIGluIHRo
ZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0
aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2Rp
ZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBh
bmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVy
bWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVk
IHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9u
czoKClRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1p
c3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbCBjb3BpZXMg
b3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLgoKVEhF
IFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFO
VFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IgSU1QTElFRCwgSU5DTFVESU5H
IEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFO
VEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFO
RCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRI
T1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENM
QUlNLCBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBB
TiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklT
SU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNP
RlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNP
RlRXQVJFLgoKIyMgUnVubmluZyB0ZXN0cwoKVGVzdHMgYXJlIHdyaXR0ZW4g
aW4gW1VyY2hpbl0uIEluc3RhbGwgVXJjaGluIChhbmQgb3RoZXIgZGVwZW5k
ZW5jaWVzKSBsaWtlIHNvOgoKICAgIG5wbSBpbnN0YWxsCgpUaGVyZSBhcmUg
c2xvdyB0ZXN0cyBhbmQgZmFzdCB0ZXN0cy4gVGhlIHNsb3cgdGVzdHMgZG8g
dGhpbmdzIGxpa2UgaW5zdGFsbCBub2RlCmFuZCBjaGVjayB0aGF0IHRoZSBy
aWdodCB2ZXJzaW9ucyBhcmUgdXNlZC4gVGhlIGZhc3QgdGVzdHMgZmFrZSB0
aGlzIHRvIHRlc3QKdGhpbmdzIGxpa2UgYWxpYXNlcyBhbmQgdW5pbnN0YWxs
aW5nLiBGcm9tIHRoZSByb290IG9mIHRoZSBudm0gZ2l0IHJlcG9zaXRvcnks
CnJ1biB0aGUgZmFzdCB0ZXN0cyBsaWtlIHRoaXM6CgogICAgbnBtIHJ1biB0
ZXN0L2Zhc3QKClJ1biB0aGUgc2xvdyB0ZXN0cyBsaWtlIHRoaXM6CgogICAg
bnBtIHJ1biB0ZXN0L3Nsb3cKClJ1biBhbGwgb2YgdGhlIHRlc3RzIGxpa2Ug
dGhpczoKCiAgICBucG0gdGVzdAoKTm90YSBiZW5lOiBBdm9pZCBydW5uaW5n
IG52bSB3aGlsZSB0aGUgdGVzdHMgYXJlIHJ1bm5pbmcuCgojIyBCYXNoIGNv
bXBsZXRpb24KClRvIGFjdGl2YXRlLCB5b3UgbmVlZCB0byBzb3VyY2UgYGJh
c2hfY29tcGxldGlvbmA6CgpgYGBzaApbWyAtciAkTlZNX0RJUi9iYXNoX2Nv
bXBsZXRpb24gXV0gJiYgXC4gJE5WTV9ESVIvYmFzaF9jb21wbGV0aW9uCmBg
YAoKUHV0IHRoZSBhYm92ZSBzb3VyY2luZyBsaW5lIGp1c3QgYmVsb3cgdGhl
IHNvdXJjaW5nIGxpbmUgZm9yIG52bSBpbiB5b3VyIHByb2ZpbGUgKGAuYmFz
aHJjYCwgYC5iYXNoX3Byb2ZpbGVgKS4KCiMjIyBVc2FnZQoKbnZtOgo+ICQg
bnZtIDxrYmQ+VGFiPC9rYmQ+CgpgYGAKYWxpYXMgICAgICAgICAgICAgICBk
ZWFjdGl2YXRlICAgICAgICAgIGluc3RhbGwgICAgICAgICAgICAgbHMgICAg
ICAgICAgICAgICAgICBydW4gICAgICAgICAgICAgICAgIHVubG9hZApjbGVh
ci1jYWNoZSAgICAgICAgIGV4ZWMgICAgICAgICAgICAgICAgbGlzdCAgICAg
ICAgICAgICAgICBscy1yZW1vdGUgICAgICAgICAgIHVuYWxpYXMgICAgICAg
ICAgICAgdXNlCmN1cnJlbnQgICAgICAgICAgICAgaGVscCAgICAgICAgICAg
ICAgICBsaXN0LXJlbW90ZSAgICAgICAgIHJlaW5zdGFsbC1wYWNrYWdlcyAg
dW5pbnN0YWxsICAgICAgICAgICB2ZXJzaW9uCmBgYAoKbnZtIGFsaWFzOgo+
ICQgbnZtIGFsaWFzIDxrYmQ+VGFiPC9rYmQ+CgpgYGAKZGVmYXVsdApgYGAK
Cj4gJCBudm0gYWxpYXMgbXlfYWxpYXMgPGtiZD5UYWI8L2tiZD4KCmBgYAp2
MC42LjIxICAgICAgICB2MC44LjI2ICAgICAgIHYwLjEwLjI4CmBgYAoKbnZt
IHVzZToKPiAkIG52bSB1c2UgPGtiZD5UYWI8L2tiZD4KCmBgYApteV9hbGlh
cyAgICAgICAgZGVmYXVsdCAgICAgICAgdjAuNi4yMSAgICAgICAgdjAuOC4y
NiAgICAgICB2MC4xMC4yOApgYGAKCm52bSB1bmluc3RhbGw6Cj4gJCBudm0g
dW5pbnN0YWxsIDxrYmQ+VGFiPC9rYmQ+CgpgYGAKbXlfYWxpYXMgICAgICAg
IGRlZmF1bHQgICAgICAgIHYwLjYuMjEgICAgICAgIHYwLjguMjYgICAgICAg
djAuMTAuMjgKYGBgCgojIyBDb21wYXRpYmlsaXR5IElzc3VlcwoKYG52bWAg
d2lsbCBlbmNvdW50ZXIgc29tZSBpc3N1ZXMgaWYgeW91IGhhdmUgc29tZSBu
b24tZGVmYXVsdCBzZXR0aW5ncyBzZXQuIChzZWUgWyM2MDZdKC8uLi8uLi9p
c3N1ZXMvNjA2KSkKVGhlIGZvbGxvd2luZyBhcmUga25vd24gdG8gY2F1c2Ug
aXNzdWVzOgoKSW5zaWRlIGB+Ly5ucG1yY2A6CgpgYGBzaApwcmVmaXg9J3Nv
bWUvcGF0aCcKYGBgCgpFbnZpcm9ubWVudCBWYXJpYWJsZXM6CgpgYGBzaAok
TlBNX0NPTkZJR19QUkVGSVgKJFBSRUZJWApgYGAKClNoZWxsIHNldHRpbmdz
OgoKYGBgc2gKc2V0IC1lCmBgYAoKIyMgSW5zdGFsbGluZyBudm0gb24gQWxw
aW5lIExpbnV4CgpJbiBvcmRlciB0byBwcm92aWRlIHRoZSBiZXN0IHBlcmZv
cm1hbmNlIChhbmQgb3RoZXIgb3B0aW1pc2F0aW9ucyksIG52bSB3aWxsIGRv
d25sb2FkIGFuZCBpbnN0YWxsIHByZS1jb21waWxlZCBiaW5hcmllcyBmb3Ig
Tm9kZSAoYW5kIG5wbSkgd2hlbiB5b3UgcnVuIGBudm0gaW5zdGFsbCBYYC4g
VGhlIE5vZGUgcHJvamVjdCBjb21waWxlcywgdGVzdHMgYW5kIGhvc3RzL3By
b3ZpZGVzIHRoZXNlIHByZS1jb21waWxlZCBiaW5hcmllcyB3aGljaCBhcmUg
YnVpbHQgZm9yIG1haW5zdHJlYW0vdHJhZGl0aW9uYWwgTGludXggZGlzdHJp
YnV0aW9ucyAoc3VjaCBhcyBEZWJpYW4sIFVidW50dSwgQ2VudE9TLCBSZWRI
YXQgZXQgYWwpLgoKQWxwaW5lIExpbnV4LCB1bmxpa2UgbWFpbnN0cmVhbS90
cmFkaXRpb25hbCBMaW51eCBkaXN0cmlidXRpb25zLCBpcyBiYXNlZCBvbiBb
QnVzeUJveF0oaHR0cHM6Ly93d3cuYnVzeWJveC5uZXQvKSwgYSB2ZXJ5IGNv
bXBhY3QgKH41TUIpIExpbnV4IGRpc3RyaWJ1dGlvbi4gQnVzeUJveCAoYW5k
IHRodXMgQWxwaW5lIExpbnV4KSB1c2VzIGEgZGlmZmVyZW50IEMvQysrIHN0
YWNrIHRvIG1vc3QgbWFpbnN0cmVhbS90cmFkaXRpb25hbCBMaW51eCBkaXN0
cmlidXRpb25zIC0gW211c2xdKGh0dHBzOi8vd3d3Lm11c2wtbGliYy5vcmcv
KS4gVGhpcyBtYWtlcyBiaW5hcnkgcHJvZ3JhbXMgYnVpbHQgZm9yIHN1Y2gg
bWFpbnN0cmVhbS90cmFkaXRpb25hbCBpbmNvbXBhdGlibGUgd2l0aCBBbHBp
bmUgTGludXgsIHRodXMgd2UgY2Fubm90IHNpbXBseSBgbnZtIGluc3RhbGwg
WGAgb24gQWxwaW5lIExpbnV4IGFuZCBleHBlY3QgdGhlIGRvd25sb2FkZWQg
YmluYXJ5IHRvIHJ1biBjb3JyZWN0bHkgLSB5b3UnbGwgbGlrZWx5IHNlZSAi
Li4uZG9lcyBub3QgZXhpc3QiIGVycm9ycyBpZiB5b3UgdHJ5IHRoYXQuCgpU
aGVyZSBpcyBhIGAtc2AgZmxhZyBmb3IgYG52bSBpbnN0YWxsYCB3aGljaCBy
ZXF1ZXN0cyBudm0gZG93bmxvYWQgTm9kZSBzb3VyY2UgYW5kIGNvbXBpbGUg
aXQgbG9jYWxseS4KCklmIGluc3RhbGxpbmcgbnZtIG9uIEFscGluZSBMaW51
eCAqaXMqIHN0aWxsIHdoYXQgeW91IHdhbnQgb3IgbmVlZCB0byBkbywgeW91
IHNob3VsZCBiZSBhYmxlIHRvIGFjaGlldmUgdGhpcyBieSBydW5uaW5nIHRo
ZSBmb2xsb3dpbmcgZnJvbSB5b3UgQWxwaW5lIExpbnV4IHNoZWxsOgoKYGBg
c2gKYXBrIGFkZCAtVSBjdXJsIGJhc2ggY2EtY2VydGlmaWNhdGVzIG9wZW5z
c2wgbmN1cnNlcyBjb3JldXRpbHMgcHl0aG9uMiBtYWtlIGdjYyBnKysgbGli
Z2NjIGxpbnV4LWhlYWRlcnMgZ3JlcCB1dGlsLWxpbnV4IGJpbnV0aWxzIGZp
bmR1dGlscwpjdXJsIC1vLSBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVu
dC5jb20vbnZtLXNoL252bS92MC4zNS4xL2luc3RhbGwuc2ggfCBiYXNoCmBg
YAoKVGhlIE5vZGUgcHJvamVjdCBoYXMgc29tZSBkZXNpcmUgYnV0IG5vIGNv
bmNyZXRlIHBsYW5zIChkdWUgdG8gdGhlIG92ZXJoZWFkcyBvZiBidWlsZGlu
ZywgdGVzdGluZyBhbmQgc3VwcG9ydCkgdG8gb2ZmZXIgQWxwaW5lLWNvbXBh
dGlibGUgYmluYXJpZXMuCgpBcyBhIHBvdGVudGlhbCBhbHRlcm5hdGl2ZSwg
QG1oYXJ0IChhIE5vZGUgY29udHJpYnV0b3IpIGhhcyBzb21lIFtEb2NrZXIg
aW1hZ2VzIGZvciBBbHBpbmUgTGludXggd2l0aCBOb2RlIGFuZCBvcHRpb25h
bGx5LCBucG0sIHByZS1pbnN0YWxsZWRdKGh0dHBzOi8vZ2l0aHViLmNvbS9t
aGFydC9hbHBpbmUtbm9kZSkuCgojIyBSZW1vdmFsCgojIyMgTWFudWFsIFVu
aW5zdGFsbAoKVG8gcmVtb3ZlIGBudm1gIG1hbnVhbGx5LCBleGVjdXRlIHRo
ZSBmb2xsb3dpbmc6CgpgYGBzaAokIHJtIC1yZiAiJE5WTV9ESVIiCmBgYAoK
RWRpdCBgfi8uYmFzaHJjYCAob3Igb3RoZXIgc2hlbGwgcmVzb3VyY2UgY29u
ZmlnKSBhbmQgcmVtb3ZlIHRoZSBsaW5lcyBiZWxvdzoKCmBgYHNoCmV4cG9y
dCBOVk1fRElSPSIkSE9NRS8ubnZtIgpbIC1zICIkTlZNX0RJUi9udm0uc2gi
IF0gJiYgXC4gIiROVk1fRElSL252bS5zaCIgIyBUaGlzIGxvYWRzIG52bQpb
WyAtciAkTlZNX0RJUi9iYXNoX2NvbXBsZXRpb24gXV0gJiYgXC4gJE5WTV9E
SVIvYmFzaF9jb21wbGV0aW9uCmBgYAoKIyMgRG9ja2VyIGZvciBkZXZlbG9w
bWVudCBlbnZpcm9ubWVudAoKVG8gbWFrZSB0aGUgZGV2ZWxvcG1lbnQgYW5k
IHRlc3Rpbmcgd29yayBlYXNpZXIsIHdlIGhhdmUgYSBEb2NrZXJmaWxlIGZv
ciBkZXZlbG9wbWVudCB1c2FnZSwgd2hpY2ggaXMgYmFzZWQgb24gVWJ1bnR1
IDE0LjA0IGJhc2UgaW1hZ2UsIHByZXBhcmVkIHdpdGggZXNzZW50aWFsIGFu
ZCB1c2VmdWwgdG9vbHMgZm9yIGBudm1gIGRldmVsb3BtZW50LCB0byBidWls
ZCB0aGUgZG9ja2VyIGltYWdlIG9mIHRoZSBlbnZpcm9ubWVudCwgcnVuIHRo
ZSBkb2NrZXIgY29tbWFuZCBhdCB0aGUgcm9vdCBvZiBgbnZtYCByZXBvc2l0
b3J5OgoKYGBgc2gKJCBkb2NrZXIgYnVpbGQgLXQgbnZtLWRldiAuCmBgYAoK
VGhpcyB3aWxsIHBhY2thZ2UgeW91ciBjdXJyZW50IG52bSByZXBvc2l0b3J5
IHdpdGggb3VyIHByZS1kZWZpbmVkIGRldmVsb3BtZW50IGVudmlyb25tZW50
IGludG8gYSBkb2NrZXIgaW1hZ2UgbmFtZWQgYG52bS1kZXZgLCBvbmNlIGl0
J3MgYnVpbHQgd2l0aCBzdWNjZXNzLCB2YWxpZGF0ZSB5b3VyIGltYWdlIHZp
YSBgZG9ja2VyIGltYWdlc2A6CgpgYGBzaAokIGRvY2tlciBpbWFnZXMKClJF
UE9TSVRPUlkgICAgICAgICBUQUcgICAgICAgICAgICAgICAgIElNQUdFIElE
ICAgICAgICAgICAgQ1JFQVRFRCAgICAgICAgICAgICBTSVpFCm52bS1kZXYg
ICAgICAgICAgICBsYXRlc3QgICAgICAgICAgICAgIDljYTRjNTdhOTdkOCAg
ICAgICAgNyBkYXlzIGFnbyAgICAgICAgICA2NTAgTUIKYGBgCgpJZiB5b3Ug
Z290IG5vIGVycm9yIG1lc3NhZ2UsIG5vdyB5b3UgY2FuIGVhc2lseSBpbnZv
bHZlIGluOgoKYGBgc2gKJCBkb2NrZXIgcnVuIC1oIG52bS1kZXYgLWl0IG52
bS1kZXYKCm52bUBudm0tZGV2On4vLm52bSQKYGBgCgpQbGVhc2Ugbm90ZSB0
aGF0IGl0J2xsIHRha2UgYWJvdXQgOCBtaW51dGVzIHRvIGJ1aWxkIHRoZSBp
bWFnZSBhbmQgdGhlIGltYWdlIHNpemUgd291bGQgYmUgYWJvdXQgNjUwTUIs
IHNvIGl0J3Mgbm90IHN1aXRhYmxlIGZvciBwcm9kdWN0aW9uIHVzYWdlLgoK
Rm9yIG1vcmUgaW5mb3JtYXRpb24gYW5kIGRvY3VtZW50YXRpb24gYWJvdXQg
ZG9ja2VyLCBwbGVhc2UgcmVmZXIgdG8gaXRzIG9mZmljaWFsIHdlYnNpdGU6
CgogIC0gaHR0cHM6Ly93d3cuZG9ja2VyLmNvbS8KICAtIGh0dHBzOi8vZG9j
cy5kb2NrZXIuY29tLwoKIyMgUHJvYmxlbXMKCiAgLSBJZiB5b3UgdHJ5IHRv
IGluc3RhbGwgYSBub2RlIHZlcnNpb24gYW5kIHRoZSBpbnN0YWxsYXRpb24g
ZmFpbHMsIGJlIHN1cmUgdG8gcnVuIGBudm0gY2FjaGUgY2xlYXJgIHRvIGRl
bGV0ZSBjYWNoZWQgbm9kZSBkb3dubG9hZHMsIG9yIHlvdSBtaWdodCBnZXQg
YW4gZXJyb3IgbGlrZSB0aGUgZm9sbG93aW5nOgoKICAgIGN1cmw6ICgzMykg
SFRUUCBzZXJ2ZXIgZG9lc24ndCBzZWVtIHRvIHN1cHBvcnQgYnl0ZSByYW5n
ZXMuIENhbm5vdCByZXN1bWUuCgogIC0gV2hlcmUncyBteSBgc3VkbyBub2Rl
YD8gQ2hlY2sgb3V0IFsjNDNdKGh0dHBzOi8vZ2l0aHViLmNvbS9udm0tc2gv
bnZtL2lzc3Vlcy80MykKCiAgLSBBZnRlciB0aGUgdjAuOC42IHJlbGVhc2Ug
b2Ygbm9kZSwgbnZtIHRyaWVzIHRvIGluc3RhbGwgZnJvbSBiaW5hcnkgcGFj
a2FnZXMuIEJ1dCBpbiBzb21lIHN5c3RlbXMsIHRoZSBvZmZpY2lhbCBiaW5h
cnkgcGFja2FnZXMgZG9uJ3Qgd29yayBkdWUgdG8gaW5jb21wYXRpYmlsaXR5
IG9mIHNoYXJlZCBsaWJzLiBJbiBzdWNoIGNhc2VzLCB1c2UgYC1zYCBvcHRp
b24gdG8gZm9yY2UgaW5zdGFsbCBmcm9tIHNvdXJjZToKCmBgYHNoCm52bSBp
bnN0YWxsIC1zIDAuOC42CmBgYAoKICAtIElmIHNldHRpbmcgdGhlIGBkZWZh
dWx0YCBhbGlhcyBkb2VzIG5vdCBlc3RhYmxpc2ggdGhlIG5vZGUgdmVyc2lv
biBpbiBuZXcgc2hlbGxzIChpLmUuIGBudm0gY3VycmVudGAgeWllbGRzIGBz
eXN0ZW1gKSwgZW5zdXJlIHRoYXQgdGhlIHN5c3RlbSdzIG5vZGUgYFBBVEhg
IGlzIHNldCBiZWZvcmUgdGhlIGBudm0uc2hgIHNvdXJjZSBsaW5lIGluIHlv
dXIgc2hlbGwgcHJvZmlsZSAoc2VlIFsjNjU4XShodHRwczovL2dpdGh1Yi5j
b20vbnZtLXNoL252bS9pc3N1ZXMvNjU4KSkKCiMjIE1hYyBPUyAidHJvdWJs
ZXNob290aW5nIgoKKipudm0gbm9kZSB2ZXJzaW9uIG5vdCBmb3VuZCBpbiB2
aW0gc2hlbGwqKgoKSWYgeW91IHNldCBub2RlIHZlcnNpb24gdG8gYSB2ZXJz
aW9uIG90aGVyIHRoYW4geW91ciBzeXN0ZW0gbm9kZSB2ZXJzaW9uIGBudm0g
dXNlIDYuMi4xYCBhbmQgb3BlbiB2aW0gYW5kIHJ1biBgOiFub2RlIC12YCB5
b3Ugc2hvdWxkIHNlZSBgdjYuMi4xYCBpZiB5b3Ugc2VlIHlvdXIgc3lzdGVt
IHZlcnNpb24gYHYwLjEyLjdgLiBZb3UgbmVlZCB0byBydW46CgpgYGBzaGVs
bApzdWRvIGNobW9kIHVnby14IC91c3IvbGliZXhlYy9wYXRoX2hlbHBlcgpg
YGAKCk1vcmUgb24gdGhpcyBpc3N1ZSBpbiBbZG90cGhpbGVzL2RvdHpzaF0o
aHR0cHM6Ly9naXRodWIuY29tL2RvdHBoaWxlcy9kb3R6c2gjbWFjLW9zLXgp
LgoKWzFdOiBodHRwczovL2dpdGh1Yi5jb20vbnZtLXNoL252bS5naXQKWzJd
OiBodHRwczovL2dpdGh1Yi5jb20vbnZtLXNoL252bS9ibG9iL3YwLjM1LjEv
aW5zdGFsbC5zaApbM106IGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9udm0tc2gv
bnZtCls0XTogaHR0cHM6Ly9naXRodWIuY29tL252bS1zaC9udm0vcmVsZWFz
ZXMvdGFnL3YwLjM1LjEKW1VyY2hpbl06IGh0dHBzOi8vZ2l0aHViLmNvbS9z
Y3JhcGVyd2lraS91cmNoaW4KW0Zpc2hdOiBodHRwOi8vZmlzaHNoZWxsLmNv
bQo=
",,38404,"bGFuZ3VhZ2U6IGdlbmVyaWMKZGlzdDogeGVuaWFsCnN1ZG86IHJlcXVpcmVk
CmFkZG9uczoKICBhcHQ6CiAgICBwYWNrYWdlczoKICAgICAgLSB6c2gKICAg
ICMgIC0ga3NoCiAgICAjICAtIGdjYy00LjgKICAgICMgIC0gZysrLTQuOAoK
Y2FjaGU6CiAgY2NhY2hlOiB0cnVlCiAgZGlyZWN0b3JpZXM6CiAgICAtICRI
T01FLy5ucG0KICAgIC0gJFRSQVZJU19CVUlMRF9ESVIvLmNhY2hlCiAgICAt
ICRUUkFWSVNfQlVJTERfRElSL25vZGVfbW9kdWxlcwpiZWZvcmVfaW5zdGFs
bDoKICAtICRTSEVMTCAtLXZlcnNpb24gMj4gL2Rldi9udWxsIHx8IGRwa2cg
LXMgJFNIRUxMIDI+IC9kZXYvbnVsbCB8fCB3aGljaCAkU0hFTEwKICAtIGN1
cmwgLS12ZXJzaW9uCiAgLSB3Z2V0IC0tdmVyc2lvbgogIC0gc2hlbGxjaGVj
ayAtLXZlcnNpb24KaW5zdGFsbDoKICAtIGlmIFsgLXogIiR7U0hFTExDSEVD
Sy19IiBdOyB0aGVuIG52bSBpbnN0YWxsIG5vZGUgJiYgbnBtIGluc3RhbGwg
JiYgbnBtIHBydW5lICYmIG5wbSBscyB1cmNoaW4gZG9jdG9jIGVjbGludCBk
b2NrZXJmaWxlX2xpbnQ7IGZpCiAgLSAnWyAteiAiJFdJVEhPVVRfQ1VSTCIg
XSB8fCBzdWRvIGFwdC1nZXQgcmVtb3ZlIGN1cmwgLXknCnNjcmlwdDoKICAt
IGlmIFsgLW4gIiR7TUFLRV9SRUxFQVNFLX0iIF07IHRoZW4gZXhwb3J0IEdJ
VF9FRElUT1I9InNlZCAtaSAnMSBzL14vOTkuOTkuOTkgbWFrZSByZWxlYXNl
IHRlc3QvJyIgJiYgZ2l0IGZldGNoIC0tdW5zaGFsbG93IC0tdGFncyAmJiBl
Y2hvIHByb2NlZWQgfCBtYWtlIFRBRz05OS45OS45OSByZWxlYXNlIDsgZmkK
ICAtIGlmIFsgLW4gIiR7RE9DVE9DQ0hFQ0stfSIgXTsgdGhlbiBjcCBSRUFE
TUUubWQgUkVBRE1FLm1kLm9yaWcgJiYgbnBtIHJ1biBkb2N0b2MgJiYgZGlm
ZiAtcSBSRUFETUUubWQgUkVBRE1FLm1kLm9yaWcgOyBmaQogIC0gaWYgWyAt
biAiJHtFQ0xJTlQtfSIgXTsgdGhlbiBucG0gcnVuIGVjbGludCA7IGZpCiAg
LSBpZiBbIC1uICIke0RPQ0tFUkZJTEVfTElOVC19IiBdOyB0aGVuIG5wbSBy
dW4gZG9ja2VyZmlsZV9saW50IDsgZmkKICAtIGlmIFsgLW4gIiR7U0hFTExD
SEVDSy19IiBdOyB0aGVuIHNoZWxsY2hlY2sgLXMgYmFzaCBudm0uc2ggJiYg
c2hlbGxjaGVjayAtcyBzaCBudm0uc2ggJiYgc2hlbGxjaGVjayAtcyBkYXNo
IG52bS5zaCAmJiBzaGVsbGNoZWNrIC1zIGtzaCBudm0uc2ggOyBmaQogIC0g
aWYgWyAtbiAiJHtTSEVMTENIRUNLLX0iIF07IHRoZW4gc2hlbGxjaGVjayAt
cyBiYXNoIGluc3RhbGwuc2ggYmFzaF9jb21wbGV0aW9uIG52bS1leGVjIDsg
ZmkKICAtIGlmIFsgLW4gIiR7U0hFTEwtfSIgXSAmJiBbIC1uICIke1RFU1Rf
U1VJVEV9IiBdOyB0aGVuIGlmIFsgIiR7VEVTVF9TVUlURX0iID0gJ2luc3Rh
bGxhdGlvbl9pb2pzJyBdOyB0aGVuIHRyYXZpc19yZXRyeSBtYWtlIFRFU1Rf
U1VJVEU9JFRFU1RfU1VJVEUgVVJDSElOPSIkKG5wbSBiaW4pL3VyY2hpbiIg
dGVzdC0kU0hFTEwgOyBlbHNlIG1ha2UgVEVTVF9TVUlURT0kVEVTVF9TVUlU
RSBVUkNISU49IiQobnBtIGJpbikvdXJjaGluIiB0ZXN0LSRTSEVMTDsgZmk7
IGZpCmJlZm9yZV9jYWNoZToKICAtIGlmIFsgLW4gIiRXSVRIT1VUX0NVUkwi
IF07IHRoZW4gc3VkbyBhcHQtZ2V0IGluc3RhbGwgY3VybCAteSA7IGZpCiAg
LSBpZiBbIC1uICIke05PREUtfSIgXTsgdGhlbiAuIG52bS5zaCAmJiBzZXQg
LWV4ICYmIG52bSBpbnN0YWxsIC0tbGF0ZXN0LW5wbSAiJHtOT0RFfSIgJiYg
bnBtIC0tdmVyc2lvbjsgZmkKZW52OgogIGdsb2JhbDoKICAgIC0gQ1hYPWcr
KwogICAgLSBDQz1nY2MKICAgIC0gUEFUSD0iJChlY2hvICRQQVRIIHwgc2Vk
ICdzLzo6LzovJykiCiAgICAtIFBBVEg9Ii91c3IvbGliL2NjYWNoZS86JFBB
VEgiCiAgICAtIE5WTV9ESVI9IiR7VFJBVklTX0JVSUxEX0RJUn0iCiAgbWF0
cml4OgogICAgLSBNQUtFX1JFTEVBU0U9dHJ1ZQogICAgLSBET0NUT0NDSEVD
Sz10cnVlCiAgICAtIFNIRUxMQ0hFQ0s9dHJ1ZQogICAgLSBFQ0xJTlQ9dHJ1
ZQogICAgLSBET0NLRVJGSUxFX0xJTlQ9dHJ1ZQogICAgLSBTSEVMTD1iYXNo
IFRFU1RfU1VJVEU9aW5zdGFsbF9zY3JpcHQKICAgIC0gU0hFTEw9c2ggVEVT
VF9TVUlURT1mYXN0CiAgICAtIFNIRUxMPWRhc2ggVEVTVF9TVUlURT1mYXN0
CiAgICAtIFNIRUxMPWJhc2ggVEVTVF9TVUlURT1mYXN0CiAgICAtIFNIRUxM
PXpzaCBURVNUX1NVSVRFPWZhc3QKICAjICAtIFNIRUxMPWtzaCBURVNUX1NV
SVRFPWZhc3QKICAgIC0gU0hFTEw9c2ggVEVTVF9TVUlURT1zb3VyY2luZwog
ICAgLSBTSEVMTD1kYXNoIFRFU1RfU1VJVEU9c291cmNpbmcKICAgIC0gU0hF
TEw9YmFzaCBURVNUX1NVSVRFPXNvdXJjaW5nCiAgICAtIFNIRUxMPXpzaCBU
RVNUX1NVSVRFPXNvdXJjaW5nCiAgIyAgLSBTSEVMTD1rc2ggVEVTVF9TVUlU
RT1zb3VyY2luZwogICAgLSBTSEVMTD1zaCBURVNUX1NVSVRFPXNsb3cKICAg
IC0gU0hFTEw9ZGFzaCBURVNUX1NVSVRFPXNsb3cKICAgIC0gU0hFTEw9YmFz
aCBURVNUX1NVSVRFPXNsb3cKICAgIC0gU0hFTEw9enNoIFRFU1RfU1VJVEU9
c2xvdwogICMgIC0gU0hFTEw9a3NoIFRFU1RfU1VJVEU9c2xvdwogICAgLSBT
SEVMTD1zaCBURVNUX1NVSVRFPWluc3RhbGxhdGlvbl9ub2RlCiAgICAtIFNI
RUxMPXNoIFRFU1RfU1VJVEU9aW5zdGFsbGF0aW9uX25vZGUgV0lUSE9VVF9D
VVJMPTEKICAgIC0gU0hFTEw9ZGFzaCBURVNUX1NVSVRFPWluc3RhbGxhdGlv
bl9ub2RlCiAgICAtIFNIRUxMPWRhc2ggVEVTVF9TVUlURT1pbnN0YWxsYXRp
b25fbm9kZSBXSVRIT1VUX0NVUkw9MQogICAgLSBTSEVMTD1iYXNoIFRFU1Rf
U1VJVEU9aW5zdGFsbGF0aW9uX25vZGUKICAgIC0gU0hFTEw9YmFzaCBURVNU
X1NVSVRFPWluc3RhbGxhdGlvbl9ub2RlIFdJVEhPVVRfQ1VSTD0xCiAgICAt
IFNIRUxMPXpzaCBURVNUX1NVSVRFPWluc3RhbGxhdGlvbl9ub2RlCiAgICAt
IFNIRUxMPXpzaCBURVNUX1NVSVRFPWluc3RhbGxhdGlvbl9ub2RlIFdJVEhP
VVRfQ1VSTD0xCiAgIyAgLSBTSEVMTD1rc2ggVEVTVF9TVUlURT1pbnN0YWxs
YXRpb25fbm9kZQogICMgIC0gU0hFTEw9a3NoIFRFU1RfU1VJVEU9aW5zdGFs
bGF0aW9uX25vZGUgV0lUSE9VVF9DVVJMPTEKICAgIC0gU0hFTEw9c2ggVEVT
VF9TVUlURT1pbnN0YWxsYXRpb25faW9qcwogICAgLSBTSEVMTD1zaCBURVNU
X1NVSVRFPWluc3RhbGxhdGlvbl9pb2pzIFdJVEhPVVRfQ1VSTD0xCiAgICAt
IFNIRUxMPWRhc2ggVEVTVF9TVUlURT1pbnN0YWxsYXRpb25faW9qcwogICAg
LSBTSEVMTD1kYXNoIFRFU1RfU1VJVEU9aW5zdGFsbGF0aW9uX2lvanMgV0lU
SE9VVF9DVVJMPTEKICAgIC0gU0hFTEw9YmFzaCBURVNUX1NVSVRFPWluc3Rh
bGxhdGlvbl9pb2pzCiAgICAtIFNIRUxMPWJhc2ggVEVTVF9TVUlURT1pbnN0
YWxsYXRpb25faW9qcyBXSVRIT1VUX0NVUkw9MQogICAgLSBTSEVMTD16c2gg
VEVTVF9TVUlURT1pbnN0YWxsYXRpb25faW9qcwogICAgLSBTSEVMTD16c2gg
VEVTVF9TVUlURT1pbnN0YWxsYXRpb25faW9qcyBXSVRIT1VUX0NVUkw9MQog
ICMgIC0gU0hFTEw9a3NoIFRFU1RfU1VJVEU9aW5zdGFsbGF0aW9uX2lvanMK
ICAjICAtIFNIRUxMPWtzaCBURVNUX1NVSVRFPWluc3RhbGxhdGlvbl9pb2pz
IFdJVEhPVVRfQ1VSTD0xCiAgICAtIE5PREU9MTAgVEVTVD0ibnZtIGluc3Rh
bGwtbGF0ZXN0LW5wbSIKICAgIC0gTk9ERT05IFRFU1Q9Im52bSBpbnN0YWxs
LWxhdGVzdC1ucG0iCiAgICAtIE5PREU9OCBURVNUPSJudm0gaW5zdGFsbC1s
YXRlc3QtbnBtIgogICAgLSBOT0RFPTcgVEVTVD0ibnZtIGluc3RhbGwtbGF0
ZXN0LW5wbSIKICAgIC0gTk9ERT02IFRFU1Q9Im52bSBpbnN0YWxsLWxhdGVz
dC1ucG0iCiAgICAtIE5PREU9NSBURVNUPSJudm0gaW5zdGFsbC1sYXRlc3Qt
bnBtIgogICAgLSBOT0RFPTUuOSBURVNUPSJudm0gaW5zdGFsbC1sYXRlc3Qt
bnBtIgogICAgLSBOT0RFPTQgVEVTVD0ibnZtIGluc3RhbGwtbGF0ZXN0LW5w
bSIKICAgIC0gTk9ERT00LjYgVEVTVD0ibnZtIGluc3RhbGwtbGF0ZXN0LW5w
bSIKICAgIC0gTk9ERT00LjUgVEVTVD0ibnZtIGluc3RhbGwtbGF0ZXN0LW5w
bSIKICAgIC0gTk9ERT00LjQgVEVTVD0ibnZtIGluc3RhbGwtbGF0ZXN0LW5w
bSIKICAgIC0gTk9ERT0yIFRFU1Q9Im52bSBpbnN0YWxsLWxhdGVzdC1ucG0i
Cg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
