name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'puppeteer-recorder',144624857,b'Puppeteer recorder is a Chrome extension that records your browser interactions and generates a  Puppeteer script. ',b'JavaScript',5,6330,,111,False,b'https://api.github.com/repos/checkly/puppeteer-recorder/forks',"IyBQdXBwZXRlZXIgUmVjb3JkZXIKClshW0J1aWxkIFN0YXR1c10oaHR0cHM6
Ly90cmF2aXMtY2kub3JnL2NoZWNrbHkvcHVwcGV0ZWVyLXJlY29yZGVyLnN2
Zz9icmFuY2g9ZGV2ZWxvcCldKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9jaGVj
a2x5L3B1cHBldGVlci1yZWNvcmRlcikKClshW2NvZmZlZV0oaHR0cHM6Ly93
d3cuYnV5bWVhY29mZmVlLmNvbS9hc3NldHMvaW1nL2N1c3RvbV9pbWFnZXMv
b3JhbmdlX2ltZy5wbmcpXShodHRwczovL3d3dy5idXltZWFjb2ZmZWUuY29t
L1VKR2VqY05saSkKCiFbXShzcmMvaW1hZ2VzL3JlY29yZGVyLnBuZykKUHVw
cGV0ZWVyIHJlY29yZGVyIGlzIGEgQ2hyb21lIGV4dGVuc2lvbiB0aGF0IHJl
Y29yZHMgeW91ciBicm93c2VyIGludGVyYWN0aW9ucyBhbmQgZ2VuZXJhdGVz
IGEgCltQdXBwZXRlZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9Hb29nbGVDaHJv
bWUvcHVwcGV0ZWVyKSBzY3JpcHQuIEluc3RhbGwgaXQgZnJvbSB0aGUgW0No
cm9tZSBXZWJzdG9yZV0oaHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJz
dG9yZS9kZXRhaWwvcHVwcGV0ZWVyLXJlY29yZGVyL2RqZWVnaWdnZWdsZWFk
a2tiZ29wb29uaGppbWdlaGRhKS4KVGhpcyBwcm9qZWN0IGlzIHByZXR0eSBm
cmVzaCwgYnV0IGRvZXMgdGhlIGZvbGxvd2luZyBhbHJlYWR5OgoKLSBSZWNv
cmRzIGNsaWNrcyBhbmQgdHlwZSBldmVudHMuCi0gQWRkIHdhaXRGb3JOYXZp
Z2F0aW9uLCBzZXRWaWV3UG9ydCBhbmQgb3RoZXIgdXNlZnVsIGNsYXVzZXMu
IAotIEdlbmVyYXRlcyBhIFB1cHBldGVlciBzY3JpcHQuCi0gU2hvd3Mgd2hp
Y2ggZXZlbnRzIGFyZSBiZWluZyByZWNvcmRlZC4KLSBDb3B5IHRvIGNsaXBi
b2FyZC4KLSBPZmZlcnMgY29uZmlndXJhdGlvbiBvcHRpb25zLgotIEFsbG93
cyBkYXRhLWlkIGNvbmZpZ3VyYXRpb24gZm9yIGVsZW1lbnQgc2VsZWN0aW9u
LgoKPiBOb3RlOiB3ZSBvbmx5IHJlY29yZCBjZXJ0YWluIGV2ZW50cy4gU2Vl
IGBkb20tZXZlbnRzLXRvLXJlY29yZC5qc2AgaW4gdGhlIGNvZGUtZ2VuZXJh
dG9yIGZvbGRlciBmb3Igd2hpY2ggZXZlbnRzLiBUaGlzIGNvbGxlY3Rpb24g
d2lsbCBiZSBleHBhbmRlZCBpbiBmdXR1cmUgcmVsZWFzZXMuCgojIyBVc2Fn
ZQoKLSBDbGljayB0aGUgaWNvbiBhbmQgaGl0IFJlY29yZC4KLSBIaXQgPGti
ZD50YWI8L2tiZD4gYWZ0ZXIgeW91IGZpbmlzaCB0eXBpbmcgaW4gYW4gYGlu
cHV0YCBlbGVtZW50LgotIENsaWNrIGxpbmtzLCBpbnB1dHMgYW5kIG90aGVy
IGVsZW1lbnRzLgotIFdhaXQgZm9yIGZ1bGwgcGFnZSBsb2FkIG9uIGVhY2gg
bmF2aWdhdGlvbi4gVGhlIGljb24gd2lsbCBzd2l0Y2ggZnJvbSAhW10oc3Jj
L2ltYWdlcy9pY29uX3JlYy5wbmcpIHRvICFbXShzcmMvaW1hZ2VzL2ljb25f
d2FpdC5wbmcpLgotIENsaWNrIFBhdXNlIHdoZW4geW91IHdhbnQgdG8gbmF2
aWdhdGUgd2l0aG91dCByZWNvcmRpbmcgYW55dGhpbmcuIEhpdCBSZXN1bWUg
dG8gY29udGludWUgcmVjb3JkaW5nLiAKIyMgQmFja2dyb3VuZAoKV3JpdGlu
ZyBQdXBwZXRlZXIgc2NyaXB0cyBmb3Igc2NyYXBpbmcsIHRlc3RpbmcgYW5k
IG1vbml0b3JpbmcgY2FuIGJlIHRyaWNreS4gQSByZWNvcmRlciAvIGNvZGUg
Z2VuZXJhdG9yIGNhbiBiZSBoZWxwZnVsLApldmVuIGlmIHRoZSBjb2RlIGlz
bid0IHBlcmZlY3QuIFRoaXMgcHJvamVjdCBidWlsZHMgb24gb3RoZXIgcHJv
amVjdHMgKHNlZSBbZGlzY2xhaW1lcl0oI3VzZXItY29udGVudC1jcmVkaXRz
LS1kaXNjbGFpbWVyKSAKYmVsb3cpIGJ1dCBhZGRzIGV4dGVuc2liaWxpdHks
IGNvbmZpZ3VyYWJpbGl0eSBhbmQgYSBzbW9vdGhlciBVSS4KCiMjIERldmVs
b3BtZW50CgoxLiBSdW46IGBnaXQgY2xvbmUgaHR0cHM6Ly9naXRodWIuY29t
L2NoZWNrbHkvcHVwcGV0ZWVyLXJlY29yZGVyLmdpdGAKMi4gQnVpbGQgdGhl
IHByb2plY3Q6IGBjZCBwdXBwZXRlZXItcmVjb3JkZXIgJiYgbnBtIGkgJiYg
bnBtIHJ1biBkZXZgCjIuIE5hdmlnYXRlIHRvIGNocm9tZTovL2V4dGVuc2lv
bnMKMy4gTWFrZSBzdXJlICdEZXZlbG9wZXIgbW9kZScgaXMgY2hlY2tlZAo0
LiBDbGljayBMb2FkIHVucGFja2VkIGV4dGVuc2lvbi4uLgo1LiBCcm93c2Ug
dG8gcHVwcGV0ZWVyLXJlY29yZGVyL2J1aWxkIGFuZCBjbGljayBTZWxlY3QK
CiMjIEN1dHRpbmcgYSBSZWxlYXNlCgotIGJ1bXAgdmVyc2lvbnMgaW4gYHBh
Y2thZ2UuanNvbmAgYW5kIGBtYW5pZmVzdC5qc29uYAotIHRhZyB0aGUgY29k
ZSB3aXRoIHRoZSB2ZXJzaW9uLCBpLmUuIGBnaXQgdGFnIHYwLjQuMGAKLSBw
dXNoIHdpdGggdGFncyBgZ2l0IHB1c2ggLS10YWdzYAoKTm93IGdlbmVyYXRl
IGEgcmVsZWFzZSB3aXRoICoqZ3JlbioqLiBNYWtlIHN1cmUgYWxsIGlzc3Vl
cyBhc3NvY2lhdGVkIHdpdGggdGhlIG5ldyB2ZXJzaW9uIGFyZSBsaW5rZWQg
dG8gYSBtaWxlc3RvbmUKd2l0aCB0aGUgbmFtZSBvZiB0aGUgdGFnLgoKYGBg
CmdyZW4gcmVsZWFzZSAtLW92ZXJyaWRlIC0tZGF0YS1zb3VyY2U9bWlsZXN0
b25lcyAtLW1pbGVzdG9uZS1tYXRjaD0ie3t0YWdfbmFtZX19IgpgYGAKCiMj
IENyZWRpdHMgJiBkaXNjbGFpbWVyCgpQdXBwZXRlZXIgcmVjb3JkZXIgaXMg
dGhlIHNwaXJpdHVhbCBzdWNjZXNzb3IgJiBsb3ZlIGNoaWxkIG9mIHNlZ21l
bnQuaW8ncyAKW0RheWRyZWFtXShodHRwczovL2dpdGh1Yi5jb20vc2VnbWVu
dGlvL2RheWRyZWFtKSBhbmQgW3VpIHJlY29yZGVyXShodHRwczovL2dpdGh1
Yi5jb20veWd1YW4vdWktcmVjb3JkZXIpLgoKIyMgTGljZW5zZQpBcGFjaGUg
Mgo=
",,6330,"bGFuZ3VhZ2U6IG5vZGVfanMKZGlzdDogdHJ1c3R5CmFkZG9uczoKICBhcHQ6
CiAgICBwYWNrYWdlczoKICAgICMgVGhpcyBpcyByZXF1aXJlZCB0byBydW4g
bmV3IGNocm9tZSBvbiBvbGQgdHJ1c3R5CiAgICAtIGxpYm5zczMKY2FjaGU6
CiAgZGlyZWN0b3JpZXM6CiAgLSBub2RlX21vZHVsZXMKbm9kZV9qczoKLSAi
OC4xMS40IgojIGFsbG93IGhlYWRmdWwgdGVzdHMKYmVmb3JlX2luc3RhbGw6
Ci0gImV4cG9ydCBESVNQTEFZPTo5OS4wIgotICJzaCAtZSAvZXRjL2luaXQu
ZC94dmZiIHN0YXJ0IgotIHNsZWVwIDMgIyBnaXZlIHh2ZmIgc29tZSB0aW1l
IHRvIHN0YXJ0CgppbnN0YWxsOgotIG5wbSBpbnN0YWxsCnNjcmlwdDoKLSBu
cG0gcnVuIGJ1aWxkCi0gTk9ERV9FTlY9cHJvZHVjdGlvbiBucG0gdGVzdAo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'AndResGuard',44050066,b'proguard resource for Android  by wechat team',b'Java',77,6328,,271,False,b'https://api.github.com/repos/shwenzhang/AndResGuard/forks',"IyBBbmRSZXNHdWFyZAoKWyFbQnVpbGQgU3RhdHVzXShodHRwczovL3RyYXZp
cy1jaS5vcmcvc2h3ZW56aGFuZy9BbmRSZXNHdWFyZC5zdmc/YnJhbmNoPW1h
c3RlcildKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9zaHdlbnpoYW5nL0FuZFJl
c0d1YXJkKQpbICFbRG93bmxvYWRdKGh0dHBzOi8vYXBpLmJpbnRyYXkuY29t
L3BhY2thZ2VzL3dlbW9iaWxlZGV2L21hdmVuL2NvbS50ZW5jZW50Lm1tJTNB
QW5kUmVzR3VhcmQtY29yZS9pbWFnZXMvZG93bmxvYWQuc3ZnKSBdKGh0dHBz
Oi8vYmludHJheS5jb20vd2Vtb2JpbGVkZXYvbWF2ZW4vY29tLnRlbmNlbnQu
bW0lM0FBbmRSZXNHdWFyZC1jb3JlL19sYXRlc3RWZXJzaW9uKQpbIVtBbmRy
b2lkIEFyc2VuYWxdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvQW5k
cm9pZCUyMEFyc2VuYWwtQW5kUmVzR3VhcmQtZ3JlZW4uc3ZnP3N0eWxlPXRy
dWUpXShodHRwczovL2FuZHJvaWQtYXJzZW5hbC5jb20vZGV0YWlscy8xLzMw
MzQpCgoqUmVhZCB0aGlzIGluIG90aGVyIGxhbmd1YWdlczogW0VuZ2xpc2hd
KFJFQURNRS5tZCksIFvnroDkvZPkuK3mloddKFJFQURNRS56aC1jbi5tZCku
KgoKYEFuZFJlc0d1YXJkYCBpcyBhIHRvb2xpbmcgZm9yIHJlZHVjaW5nIHlv
dXIgYXBrIHNpemUsIGl0IHdvcmtzIGxpa2UgdGhlIGBQcm9HdWFyZGAgZm9y
IEphdmEgc291cmNlIGNvZGUsIGJ1dCBvbmx5IGFpbSBhdCB0aGUgcmVzb3Vy
Y2UgZmlsZXMuIEl0IGNoYW5nZXMgYHJlcy9kcmF3YWJsZS93ZWNoYXRgIHRv
IGByL2QvYWAsIGFuZCByZW5hbWVzIHRoZSByZXNvdXJjZSBmaWxlIGB3ZWNo
YXQucG5nYCB0byBgYS5wbmdgLiBGaW5hbGx5LCBpdCByZXBhY2thZ2VzIHRo
ZSBhcGsgd2l0aCA3emlwLCB3aGljaCBjYW4gcmVkdWNlIHRoZSBwYWNrYWdl
IHNpemUgb2J2aW91c2x5LgoKYEFuZFJlc0d1YXJkYCBpcyBmYXN0LCBhbmQg
aXQgZG9lcyAqKk5PVCoqIG5lZWQgdGhlIHNvdXJjZSBjb2Rlcy4gSW5wdXQg
YW4gQW5kcm9pZCBhcGssIHRoZW4gd2UgY2FuIGdldCBhICdSZXNHdWFyZCcg
YXBrIGluIGEgZmV3IHNlY29uZHMuCgpTb21lIHVzZXMgb2YgYEFuZFJlc0d1
YXJkYCBhcmU6CgoxLiBPYmZ1c2NhdGUgYW5kcm9pZCByZXNvdXJjZXMuIEl0
IGNvbnRhaW5zIGFsbCB0aGUgcmVzb3VyY2UgdHlwZShzdWNoIGFzIGRyYXdh
Ymxl44CBbGF5b3V044CBc3RyaW5nLi4uKS4gSXQgY2FuIHByZXZlbnQgeW91
ciBhcGsgZnJvbSBiZWluZyByZXZlcnNlZCBieSBgQXBrdG9vbGAuCgoyLiBT
aHJpbmtpbmcgdGhlIGFwayBzaXplLiBJdCBjYW4gcmVkdWNlIHRoZSBgcmVz
b3VyY2VzLmFyc2NgIGFuZCB0aGUgcGFja2FnZSBzaXplIG9idmlvdXNseS4K
CjMuIFJlcGFja2FnZSB3aXRoIGA3emlwYC4gSXQgc3VwcG9ydHMgcmVwYWNr
YWdlIGFwayB3aXRoIGA3emlwYCwgYW5kIHdlIGNhbiBzcGVjaWZ5IHRoZSBj
b21wcmVzc2lvbiBtZXRob2QgZm9yIGVhY2ggZmlsZS4KCmBBbmRSZXNHdWFy
ZGAgaXMgYSBjb21tYW5kLWxpbmUgdG9vbCwgaXQgc3VwcG9ydHMgV2luZG93
cywgTGludXggYW5kIE1hYy4gV2Ugc3VnZ2VzdCB5b3UgdG8gdXNlIDd6aXAg
aW4gTGludXggb3IgTWFjIHBsYXRmb3JtIGZvciBhIGhpZ2hlciBjb21wcmVz
c2lvbiByYXRpby4KCiMjIEhvdyB0byB1c2UKIyMjIFdpdGggR3JhZGxlClRo
aXMgaGFzIGJlZW4gcmVsZWFzZWQgb24gYEJpbnRyYXlgCmBgYGdyYWRsZQph
cHBseSBwbHVnaW46ICdBbmRSZXNHdWFyZCcKCmJ1aWxkc2NyaXB0IHsKICAg
IHJlcG9zaXRvcmllcyB7CiAgICAgICAgamNlbnRlcigpCiAgICAgICAgZ29v
Z2xlKCkKICAgIH0KICAgIGRlcGVuZGVuY2llcyB7CiAgICAgICAgY2xhc3Nw
YXRoICdjb20udGVuY2VudC5tbTpBbmRSZXNHdWFyZC1ncmFkbGUtcGx1Z2lu
OjEuMi4xNycKICAgIH0KfQoKYW5kUmVzR3VhcmQgewogICAgLy8gbWFwcGlu
Z0ZpbGUgPSBmaWxlKCIuL3Jlc291cmNlX21hcHBpbmcudHh0IikKICAgIG1h
cHBpbmdGaWxlID0gbnVsbAogICAgdXNlN3ppcCA9IHRydWUKICAgIHVzZVNp
Z24gPSB0cnVlCiAgICAvLyBJdCB3aWxsIGtlZXAgdGhlIG9yaWdpbiBwYXRo
IG9mIHlvdXIgcmVzb3VyY2VzIHdoZW4gaXQncyB0cnVlCiAgICBrZWVwUm9v
dCA9IGZhbHNlCiAgICAvLyBJZiBzZXQsIG5hbWUgY29sdW1uIGluIGFyc2Mg
dGhvc2UgbmVlZCB0byBwcm9ndWFyZCB3aWxsIGJlIGtlcHQgdG8gdGhpcyB2
YWx1ZQogICAgZml4ZWRSZXNOYW1lID0gImFyZyIKICAgIC8vIEl0IHdpbGwg
bWVyZ2UgdGhlIGR1cGxpY2F0ZWQgcmVzb3VyY2VzLCBidXQgZG9uJ3QgcmVs
eSBvbiB0aGlzIGZlYXR1cmUgdG9vIG11Y2guCiAgICAvLyBpdCdzIGFsd2F5
cyBiZXR0ZXIgdG8gcmVtb3ZlIGR1cGxpY2F0ZWQgcmVzb3VyY2UgZnJvbSBy
ZXBvCiAgICBtZXJnZUR1cGxpY2F0ZWRSZXMgPSB0cnVlCiAgICB3aGl0ZUxp
c3QgPSBbCiAgICAgICAgLy8geW91ciBpY29uCiAgICAgICAgIlIuZHJhd2Fi
bGUuaWNvbiIsCiAgICAgICAgLy8gZm9yIGZhYnJpYwogICAgICAgICJSLnN0
cmluZy5jb20uY3Jhc2hseXRpY3MuKiIsCiAgICAgICAgLy8gZm9yIGdvb2ds
ZS1zZXJ2aWNlcwogICAgICAgICJSLnN0cmluZy5nb29nbGVfYXBwX2lkIiwK
ICAgICAgICAiUi5zdHJpbmcuZ2NtX2RlZmF1bHRTZW5kZXJJZCIsCiAgICAg
ICAgIlIuc3RyaW5nLmRlZmF1bHRfd2ViX2NsaWVudF9pZCIsCiAgICAgICAg
IlIuc3RyaW5nLmdhX3RyYWNraW5nSWQiLAogICAgICAgICJSLnN0cmluZy5m
aXJlYmFzZV9kYXRhYmFzZV91cmwiLAogICAgICAgICJSLnN0cmluZy5nb29n
bGVfYXBpX2tleSIsCiAgICAgICAgIlIuc3RyaW5nLmdvb2dsZV9jcmFzaF9y
ZXBvcnRpbmdfYXBpX2tleSIKICAgIF0KICAgIGNvbXByZXNzRmlsZVBhdHRl
cm4gPSBbCiAgICAgICAgIioucG5nIiwKICAgICAgICAiKi5qcGciLAogICAg
ICAgICIqLmpwZWciLAogICAgICAgICIqLmdpZiIsCiAgICBdCiAgICBzZXZl
bnppcCB7CiAgICAgICAgYXJ0aWZhY3QgPSAnY29tLnRlbmNlbnQubW06U2V2
ZW5aaXA6MS4yLjE3JwogICAgICAgIC8vcGF0aCA9ICIvdXNyL2xvY2FsL2Jp
bi83emEiCiAgICB9CgogICAgLyoqCiAgICAqIE9wdGlvbmFsOiBpZiBmaW5h
bEFwa0JhY2t1cFBhdGggaXMgbnVsbCwgQW5kUmVzR3VhcmQgd2lsbCBvdmVy
d3JpdGUgZmluYWwgYXBrCiAgICAqIHRvIHRoZSBwYXRoIHdoaWNoIGFzc2Vt
YmxlW1Rhc2tdIHdyaXRlIHRvCiAgICAqKi8KICAgIC8vIGZpbmFsQXBrQmFj
a3VwUGF0aCA9ICIke3Byb2plY3Qucm9vdERpcn0vZmluYWwuYXBrIgoKICAg
IC8qKgogICAgKiBPcHRpb25hbDogU3BlY2lmaWVzIHRoZSBuYW1lIG9mIHRo
ZSBtZXNzYWdlIGRpZ2VzdCBhbGdvcml0aG0gdG8gdXNlciB3aGVuIGRpZ2Vz
dGluZyB0aGUgZW50cmllcyBvZiBKQVIgZmlsZQogICAgKiBPbmx5IHdvcmtz
IGluIFYxc2lnbmluZywgZGVmYXVsdCB2YWx1ZSBpcyAiU0hBLTEiCiAgICAq
Ki8KICAgIC8vIGRpZ2VzdGFsZyA9ICJTSEEtMjU2Igp9CmBgYAoKIyMjIFdp
bGRjYXJkClRoZSB3aGl0ZUxpc3QgYW5kIGNvbXByZXNzRmlsZVBhdHRlcm4g
c3VwcG9ydCB3aWxkY2FyZCBpbmNsdWRlID8gKiArLgoKYGBgCj8JWmVybyBv
ciBvbmUgY2hhcmFjdGVyCioJWmVybyBvciBtb3JlIG9mIGNoYXJhY3Rlcgor
CU9uZSBvciBtb3JlIG9mIGNoYXJhY3RlcgpgYGAKCiMjIyBXaGl0ZUxpc3QK
WW91IG5lZWQgcHV0IGFsbCByZXNvdXJjZSB3aGljaCBhY2Nlc3MgdmlhIGBn
ZXRJZGVudGlmaWVyYCBpbnRvIHdoaXRlTGlzdC4KKipZb3UgY2FuIGZpbmQg
bW9yZSB3aGl0c0xpc3QgY29uZmlncyBvZiB0aGlyZC1wYXJ0IFNESyBpbiBb
d2hpdGVfbGlzdC5tZF0oZG9jL3doaXRlX2xpc3QubWQpLiBXZWxjb21lIFBS
IHlvdXIgY29uZmlncyB3aGljaCBpcyBub3QgaW5jbHVkZWQgaW4gd2hpdGVf
bGlzdC5tZCoqCgpUaGUgd2hpdGVMaXN0IG9ubHkgd29ya3Mgb24gdGhlIHNw
ZWNzTmFtZSBvZiByZXNvdXJjZXMsIGl0IHdvdWxkbid0IGtlZXAgdGhlIHBh
dGggb2YgcmVzb3VyY2UuCklmIHlvdSB3YW5uYSBrZWVwaW5nIHRoZSBwYXRo
LCBwbGVhc2UgdXNlIGBtYXBwaW5nRmlsZWAgdG8gaW1wbGVtZW50IGl0LgoK
Rm9yIGV4YW1wbGUsIHdlIHdhbm5hIGtlZXBpbmcgdGhlIHBhdGggb2YgaWNv
biwgd2UgbmVlZCBhZGQgYmVsb3cgaW50byBvdXIgYG1hcHBpbmdGaWxlYC4K
YGBgCnJlcyBwYXRoIG1hcHBpbmc6CiAgICByZXMvbWlwbWFwLWhkcGktdjQg
LT4gcmVzL21pcG1hcC1oZHBpLXY0CiAgICByZXMvbWlwbWFwLW1kcGktdjQg
LT4gcmVzL21pcG1hcC1tZHBpLXY0CiAgICByZXMvbWlwbWFwLXhoZHBpLXY0
IC0+IHJlcy9taXBtYXAteGhkcGktdjQKICAgIHJlcy9taXBtYXAteHhoZHBp
LXY0IC0+IHJlcy9taXBtYXAteHhoZHBpLXY0CiAgICByZXMvbWlwbWFwLXh4
eGhkcGktdjQgLT4gcmVzL21pcG1hcC14eHhoZHBpLXY0CmBgYAoKIyMjIEhv
dyB0byBMYXVuY2gKSWYgeW91IGFyZSB1c2luZyBgQW5kcm9pZCBTdHVkaW9g
LCB5b3UgY2FuIGZpbmQgdGhlIGdlbmVyYXRlIHRhc2sgb3B0aW9uIGluIGBg
YGFuZHJlc2d1YXJkYGBgIGdyb3VwLgpPciBhbHRlcm5hdGl2ZWx5LCB5b3Ug
cnVuIGBgYC4vZ3JhZGxldyByZXNndWFyZFtCdWlsZFR5cGUgfCBGbGF2b3Jd
YGBgIGluIHlvdXIgdGVybWluYWwuIFRoZSBmb3JtYXQgb2YgdGFzayBuYW1l
IGlzIGFzIHNhbWUgYXMgYGFzc2VtYmxlYC4KCiMjIyBTZXZlbnppcApUaGUg
YHNldmVuemlwYCBpbiBncmFkbGUgZmlsZSBjYW4gYmUgc2V0IGJ5IGBwYXRo
YCBvciBgYXJ0aWZhY3RgLiBNdWx0aXBsZSBhc3NpZ25tZW50cyBhcmUgYWxs
b3dlZCwgYnV0IHRoZSB3aW5uZXIgaXMgKiphbHdheXMqKiBgcGF0aGAuCgoj
IyMgUmVzdWx0CklmIGZpbmFsQXBrQmFja3VwUGF0aCBpcyBudWxsLCBBbmRS
ZXNHdWFyZCB3aWxsIG92ZXJ3cml0ZSBmaW5hbCBBUEsgdG8gdGhlIHBhdGgg
d2hpY2ggYXNzZW1ibGVbVGFza10gd3JpdGUuIE90aGVyd2lzZSwgaXQgd2ls
bCBzdG9yZSBpbiB0aGUgcGF0aCB5b3UgYXNzaWduZWQuCgojIyMgT3RoZXIK
W0xvb2tpbmcgZm9yIG1vcmUgZGV0YWlsXShkb2MvaG93X3RvX3dvcmsubWQp
CgoKIyMgS25vd24gSXNzdWUKMS4gVGhlIGZpcnN0IGVsZW1lbnQgb2YgbGlz
dCB3aGljaCByZXR1cm5lZCBieSBgQXNzZXRNYW5hZ2VyI2xpc3QoU3RyaW5n
IHBhdGgpYCBpcyBlbXB0eSBzdHJpbmcgd2hlbiB5b3UncmUgdXNpbmcgdGhl
IEFQSyB3aGljaCBpcyBjb21wcmVzc2VkIGJ5IDd6aXAuIFsjMTYyXShodHRw
czovL2dpdGh1Yi5jb20vc2h3ZW56aGFuZy9BbmRSZXNHdWFyZC9pc3N1ZXMv
MTYyKQoKIyMgQmVzdCBQcmFjdGlzZQoxLiBEbyAqKk5PVCoqIGFkZCBgcmVz
b3VyY2VzLmFyc2NgIGludG8gYGNvbXByZXNzRmlsZVBhdHRlcm5gIHVubGVz
cyB0aGUgYXBwIHNpemUgaXMgcmVhbGx5IG1hdHRlciB0byB5b3UuKFsjODRd
KGh0dHBzOi8vZ2l0aHViLmNvbS9zaHdlbnpoYW5nL0FuZFJlc0d1YXJkL2lz
c3Vlcy84NCkgWyMyMzNdKGh0dHBzOi8vZ2l0aHViLmNvbS9zaHdlbnpoYW5n
L0FuZFJlc0d1YXJkL2lzc3Vlcy8yMzMpKQoyLiBEbyAqKk5PVCoqIGVuYWJs
ZSA3emlwIGNvbXByZXNzaW9uKGB1c2U3emlwYCkgd2hlbiB5b3UgZGlzdHJp
YnV0ZSB5b3VyIEFQUCBvbiBHb29nbGUgUGxheS4gSXQnbGwgcHJldmVudCB0
aGUgZmlsZS1ieS1maWxlIHBhdGNoIHdoZW4gdXBkYXRpbmcgeW91ciBBUFAu
IChbIzIzM10oaHR0cHM6Ly9naXRodWIuY29tL3Nod2VuemhhbmcvQW5kUmVz
R3VhcmQvaXNzdWVzLzIzMykpCgoKIyMgVGhhbmtzCltBcGt0b29sXShodHRw
czovL2dpdGh1Yi5jb20vaUJvdFBlYWNoZXMvQXBrdG9vbCkgQ29ubm9yIFR1
bWJsZXNvbgoKW3Yyc2lnXShodHRwczovL2dpdGh1Yi5jb20vc2h3ZW56aGFu
Zy9BbmRSZXNHdWFyZC9wdWxsLzEzMykgQGpvbnlDaGluYTE2Mgo=
",,6328,"bGFuZ3VhZ2U6IGphdmEKZGlzdDogdHJ1c3R5CnNjcmlwdDogIi4vZ3JhZGxl
dyBjaGVjayIKamRrOgogIC0gb3JhY2xlamRrOApub3RpZmljYXRpb25zOgog
IHdlYmhvb2tzOgogICAgdXJsczoKICAgICAgLSBodHRwczovL3dlYmhvb2tz
LmdpdHRlci5pbS9lL2NiYjUyMDdmYWZmZjkyYTAyMWI3CiAgICBvbl9zdWNj
ZXNzOiBjaGFuZ2UgICMgb3B0aW9uczogW2Fsd2F5c3xuZXZlcnxjaGFuZ2Vd
IGRlZmF1bHQ6IGFsd2F5cwogICAgb25fZmFpbHVyZTogYWx3YXlzICAjIG9w
dGlvbnM6IFthbHdheXN8bmV2ZXJ8Y2hhbmdlXSBkZWZhdWx0OiBhbHdheXMK
ICAgIG9uX3N0YXJ0OiBuZXZlciAgICAgIyBvcHRpb25zOiBbYWx3YXlzfG5l
dmVyfGNoYW5nZV0gZGVmYXVsdDogYWx3YXlz
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'anypixel',60266911,b'A web-friendly way for anyone to build unusual displays',b'C',8,6328,,232,False,b'https://api.github.com/repos/googlecreativelab/anypixel/forks',"IVtpbWddKGh0dHBzOi8vZ2l0aHViLmNvbS9nb29nbGVjcmVhdGl2ZWxhYi9h
bnlwaXhlbC9ibG9iL21hc3Rlci9oZWFkZXIucG5nKQoKW0FueVBpeGVsLmpz
XShodHRwOi8vZ29vZ2xlY3JlYXRpdmVsYWIuZ2l0aHViLmlvL2FueXBpeGVs
KSBpcyBhbiBvcGVuLXNvdXJjZSBzb2Z0d2FyZSBhbmQgaGFyZHdhcmUgbGli
cmFyeSB0aGF0IG1ha2VzIGl0IHBvc3NpYmxlIHRvIHVzZSB0aGUgd2ViIHRv
IGNyZWF0ZSBiaWcsIHVudXN1YWwsIGludGVyYWN0aXZlIGRpc3BsYXlzLiBB
bnlvbmUgY2FuIGZvcmsgdGhlIGNvZGUgYW5kIHRoZSBzY2hlbWF0aWNzIHRv
IGNyZWF0ZSB0aGVpciBvd24gZGlzcGxheSBhdCBhbnkgc2NhbGUuCgpUaGUg
Zmlyc3QgZGlzcGxheSB1c2luZyB0aGlzIHBsYXRmb3JtIGlzIGluIHRoZSA4
dGggQXZlbnVlIGxvYmJ5IGF0IHRoZSBHb29nbGUgTllDIG9mZmljZS4gVG8g
Y3JlYXRlIHRoaXMgaW5zdGFsbGF0aW9uLCB3ZSB1c2VkIDU4ODAgb2ZmLXRo
ZS1zaGVsZiBhcmNhZGUgYnV0dG9ucyB3aXRoIExFRHMgaW5zaWRlIHRoZW0g
YXMgb3VyIHBpeGVscy4gQW55UGl4ZWwuanPigJkgc3RyYWlnaHRmb3J3YXJk
IGhhcmR3YXJlL3NvZnR3YXJlIGZyYW1ld29yayBtYWtlcyBpdCBlYXN5IHRv
IGJ1aWxkIGFueSBkaXNwbGF5IHdoZXJlIGVhY2ggcGl4ZWwgaXMgYW4gaW50
ZXJhY3RpdmUgZWxlbWVudC4KCiFbYnV0dG9ud2FsbF0oaHR0cHM6Ly9naXRo
dWIuY29tL2dvb2dsZWNyZWF0aXZlbGFiL2FueXBpeGVsL2Jsb2IvbWFzdGVy
L2J1dHRvbndhbGwuanBnKQoKIyMgV2hhdCBZb3UnbGwgRmluZAotICoqL2hh
cmR3YXJlKiogLSBFQUdMRSBzY2hlbWF0aWNzLCBib2FyZCBsYXlvdXRzLCBD
QUQgZmlsZXMsIHdpcmluZyBkaWFncmFtcywgYW5kIGJsdWVwcmludHMuCi0g
KiovZmlybXdhcmUqKiAtIG1pY3JvY29udHJvbGxlciBjb2RlLCB3cml0dGVu
IGZvciB0aGUgU1RNMzIgZmFtaWx5IG9mIGRldmljZXMuCi0gKiovYmFja2Vu
ZCoqIC0gbm9kZS5qcyBhbmQgY2hyb21lIGFwcGxpY2F0aW9ucyBmb3IgY29t
bXVuaWNhdGluZyB3aXRoIHRoZSBoYXJkd2FyZS4KLSAqKi9mcm9udGVuZCoq
IC0gdGhlIGFwcCBmcmFtZXdvcmssIGFuIGluLWJyb3dzZXIgcHJldmlld2Vy
LCBhbmQgMTIgZXhhbXBsZSBhcHBzIHdyaXR0ZW4gYnkgR29vZ2xlcnMgYW5k
IGZyaWVuZHMgd29ybGR3aWRlLgotICoqL3JwaS1leGFtcGxlKiogLSBhIHNp
bXBsZSBzdGFydGVyIGV4YW1wbGUgY29ubmVjdGluZyBhIFJhc3BiZXJyeSBQ
aSB3aXRoIEFueVBpeGVsIHRvIGEgc2luZ2xlIGJ1dHRvbiBmb3Igcm91bmQg
dHJpcCBjb21tdW5pY2F0aW9uLgoKIyMgR2V0dGluZyBTdGFydGVkCgojIyMg
Q2hlY2sgb3V0IHRoZSBleGFtcGxlcyAKV2UndmUgaW5jbHVkZWQgMTIgZXhh
bXBsZSBhcHBzIHdyaXR0ZW4gYnkgR29vZ2xlcnMgYW5kIGZyaWVuZHMgZm9y
IHRoZSA4dGggQXZlbnVlIGxvYmJ5IGRpc3BsYXkgaW4gTllDLiBUbyBjaGVj
ayB0aGVtIG91dCwgaW5zdGFsbCB0aGUgW3ByZXZpZXdlcl0oaHR0cHM6Ly9n
aXRodWIuY29tL2dvb2dsZWNyZWF0aXZlbGFiL2FueXBpeGVsL3RyZWUvbWFz
dGVyL2Zyb250ZW5kL3ByZXZpZXdlcikgYW5kIHJ1biBvbmUgb2YgdGhlIFtl
eGFtcGxlc10oaHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZWNyZWF0aXZlbGFi
L2FueXBpeGVsL3RyZWUvbWFzdGVyL2Zyb250ZW5kL2V4YW1wbGVzKS4KCiMj
IyBCdWlsZCB5b3VyIG93biBhcHAgCkJ1aWxkaW5nIHlvdXIgb3duIGFwcCBp
cyBlYXN5IHdpdGggdGhlIEFueXBpeGVsIGZyYW1ld29yay4gVG8gZ2V0IHN0
YXJ0ZWQsIGNoZWNrIG91dCB0aGUgW2ZyYW1ld29yayBkb2N1bWVudGF0aW9u
XShodHRwczovL2dpdGh1Yi5jb20vZ29vZ2xlY3JlYXRpdmVsYWIvYW55cGl4
ZWwvdHJlZS9tYXN0ZXIvZnJvbnRlbmQvZnJhbWV3b3JrKSBhbmQgdGhlIFtl
eGFtcGxlIGFwcF0oaHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZWNyZWF0aXZl
bGFiL2FueXBpeGVsL3RyZWUvbWFzdGVyL2Zyb250ZW5kL2V4YW1wbGVzL2dl
dHRpbmctc3RhcnRlZCk6CgpgYGBqcwp2YXIgYW55cGl4ZWwgPSByZXF1aXJl
KCdhbnlwaXhlbCcpOyAKdmFyIGN0eCA9IGFueXBpeGVsLmNhbnZhcy5nZXRD
b250ZXh0MkQoKTsKCnZhciBjb2xvcnMgPSBbJyNGMDAnLCAnIzBGMCcsICcj
MDBGJ107CgovKiogIAogKiAqIExpc3RlbiBmb3Igb25CdXR0b25Eb3duIGV2
ZW50cyBhbmQgZHJhdyBhIDJ4MiByZWN0YW5nbGUgYXQgdGhlIGV2ZW50IHNp
dGUKICovCmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ29uQnV0dG9uRG93
bicsIGZ1bmN0aW9uKGV2ZW50KSB7ICAgCgljdHguZmlsbFN0eWxlID0gY29s
b3JzW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGNvbG9ycy5sZW5ndGgp
XTsKCWN0eC5maWxsUmVjdChldmVudC5kZXRhaWwueCAtIDEsIGV2ZW50LmRl
dGFpbC55IC0gMSwgMiwgMik7Cn0pOyAKYGBgCgojIyBDb250cmlidXRvcnMK
LSBbSmVyZW15IEFiZWxdKGh0dHBzOi8vZ2l0aHViLmNvbS9qZXJlbXlhYmVs
KQotIFtLeWxlIFBoaWxsaXBzXShodHRwczovL2dpdGh1Yi5jb20vaGFwdGlj
ZGF0YSkKLSBbTmljayBGb3gtR2llZ10oaHR0cHM6Ly9naXRodWIuY29tL24x
Y2tmZykKLSBbSmVyYW15IE1vcnJpbGxdKGh0dHBzOi8vZ2l0aHViLmNvbS90
aGVjZXJlbW9ueSkKLSBbTWFubnkgVGFuXShodHRwczovL2dpdGh1Yi5jb20v
bWFubnl0YW4pCi0gW0ZlbGl4IFdvaXR6ZWxdKGh0dHBzOi8vZ2l0aHViLmNv
bS9mbGV4aTIzKQotIFtBbmRlcnMgSG9mZl0oaHR0cHM6Ly9naXRodWIuY29t
L2luY29udmVyZ2VudCkKLSBbRGltaXRyeSBCZW50c2lvbm92XShodHRwczov
L2dpdGh1Yi5jb20vZGltaXRyeSkKLSBbTmljayBTdGFobG5lY2tlcl0oaHR0
cHM6Ly9naXRodWIuY29tL1N0YWhsbmVja3IpCi0gW05pY2sgSm9uYXNdKGh0
dHBzOi8vZ2l0aHViLmNvbS9uaWNrLWpvbmFzKQotIFtQYXRyaWNrIE1pbGxl
cl0oaHR0cHM6Ly9naXRodWIuY29tL3BhdHJpY2tkbWlsbGVyKQoKCiMjIE5v
dGUKVGhpcmQgcGFydHkgZGlyZWN0b3JpZXMgbWF5IGhhdmUgZGlmZmVyZW50
IChub24tQXBhY2hlIDIuMCkgbGljZW5zZXMuCg==
",,6328,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'redux-actions',38395154,b'Flux Standard Action utilities for Redux.',b'JavaScript',55,6325,,74,False,b'https://api.github.com/repos/redux-utilities/redux-actions/forks',"IyByZWR1eC1hY3Rpb25zCgpbIVtCdWlsZCBTdGF0dXNdKGh0dHBzOi8vdHJh
dmlzLWNpLm9yZy9yZWR1eC11dGlsaXRpZXMvcmVkdXgtYWN0aW9ucy5zdmc/
YnJhbmNoPW1hc3RlcildKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9yZWR1eC11
dGlsaXRpZXMvcmVkdXgtYWN0aW9ucykKWyFbY29kZWNvdl0oaHR0cHM6Ly9j
b2RlY292LmlvL2doL3JlZHV4LXV0aWxpdGllcy9yZWR1eC1hY3Rpb25zL2Jy
YW5jaC9tYXN0ZXIvZ3JhcGgvYmFkZ2Uuc3ZnKV0oaHR0cHM6Ly9jb2RlY292
LmlvL2doL3JlZHV4LXV0aWxpdGllcy9yZWR1eC1hY3Rpb25zKQpbIVtucG1d
KGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vbnBtL3YvcmVkdXgtYWN0aW9ucy5z
dmcpXShodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9yZWR1eC1hY3Rp
b25zKQpbIVtucG1dKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vbnBtL2RtL3Jl
ZHV4LWFjdGlvbnMuc3ZnKV0oaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2th
Z2UvcmVkdXgtYWN0aW9ucykKCj4gW0ZsdXggU3RhbmRhcmQgQWN0aW9uXSho
dHRwczovL2dpdGh1Yi5jb20vYWNkbGl0ZS9mbHV4LXN0YW5kYXJkLWFjdGlv
bikgdXRpbGl0aWVzIGZvciBSZWR1eAoKIyMjIFRhYmxlIG9mIENvbnRlbnRz
CgotIFtHZXR0aW5nIFN0YXJ0ZWRdKCNnZXR0aW5nLXN0YXJ0ZWQpCiAgLSBb
SW5zdGFsbGF0aW9uXSgjaW5zdGFsbGF0aW9uKQogIC0gW1VzYWdlXSgjdXNh
Z2UpCi0gW0RvY3VtZW50YXRpb25dKCNkb2N1bWVudGF0aW9uKQoKIyBHZXR0
aW5nIFN0YXJ0ZWQKCiMjIEluc3RhbGxhdGlvbgoKYGBgYmFzaAokIG5wbSBp
bnN0YWxsIC0tc2F2ZSByZWR1eC1hY3Rpb25zCmBgYAoKb3IKCmBgYGJhc2gK
JCB5YXJuIGFkZCByZWR1eC1hY3Rpb25zCmBgYAoKVGhlIFtucG1dKGh0dHBz
Oi8vd3d3Lm5wbWpzLmNvbSkgcGFja2FnZSBwcm92aWRlcyBhIFtDb21tb25K
U10oaHR0cDovL3dlYnBhY2suZ2l0aHViLmlvL2RvY3MvY29tbW9uanMuaHRt
bCkgYnVpbGQgZm9yIHVzZSBpbiBOb2RlLmpzLCBhbmQgd2l0aCBidW5kbGVy
cyBsaWtlIFtXZWJwYWNrXShodHRwOi8vd2VicGFjay5naXRodWIuaW8vKSBh
bmQgW0Jyb3dzZXJpZnldKGh0dHA6Ly9icm93c2VyaWZ5Lm9yZy8pLiBJdCBh
bHNvIGluY2x1ZGVzIGFuIFtFUyBtb2R1bGVzXShodHRwOi8vanNtb2R1bGVz
LmlvLykgYnVpbGQgdGhhdCB3b3JrcyB3ZWxsIHdpdGggW1JvbGx1cF0oaHR0
cDovL3JvbGx1cGpzLm9yZy8pIGFuZCBbV2VicGFjazJdKGh0dHBzOi8vd2Vi
cGFjay5qcy5vcmcpJ3MgdHJlZS1zaGFraW5nLgoKVGhlIFtVTURdKGh0dHBz
Oi8vdW5wa2cuY29tL3JlZHV4LWFjdGlvbnNAbGF0ZXN0L2Rpc3QpIGJ1aWxk
IGV4cG9ydHMgYSBnbG9iYWwgY2FsbGVkIGB3aW5kb3cuUmVkdXhBY3Rpb25z
YCBpZiB5b3UgYWRkIGl0IHRvIHlvdXIgcGFnZSB2aWEgYSBgPHNjcmlwdD5g
IHRhZy4gV2UgX2RvbuKAmXRfIHJlY29tbWVuZCBVTUQgYnVpbGRzIGZvciBh
bnkgc2VyaW91cyBhcHBsaWNhdGlvbiwgYXMgbW9zdCBvZiB0aGUgbGlicmFy
aWVzIGNvbXBsZW1lbnRhcnkgdG8gUmVkdXggYXJlIG9ubHkgYXZhaWxhYmxl
IG9uIFtucG1dKGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9zZWFyY2g/cT1yZWR1
eCkuCgojIyBVc2FnZQoKYGBganMKaW1wb3J0IHsgY3JlYXRlQWN0aW9ucywg
aGFuZGxlQWN0aW9ucywgY29tYmluZUFjdGlvbnMgfSBmcm9tICdyZWR1eC1h
Y3Rpb25zJzsKCmNvbnN0IGRlZmF1bHRTdGF0ZSA9IHsgY291bnRlcjogMTAg
fTsKCmNvbnN0IHsgaW5jcmVtZW50LCBkZWNyZW1lbnQgfSA9IGNyZWF0ZUFj
dGlvbnMoewogIElOQ1JFTUVOVDogKGFtb3VudCA9IDEpID0+ICh7IGFtb3Vu
dCB9KSwKICBERUNSRU1FTlQ6IChhbW91bnQgPSAxKSA9PiAoeyBhbW91bnQ6
IC1hbW91bnQgfSkKfSk7Cgpjb25zdCByZWR1Y2VyID0gaGFuZGxlQWN0aW9u
cygKICB7CiAgICBbY29tYmluZUFjdGlvbnMoaW5jcmVtZW50LCBkZWNyZW1l
bnQpXTogKAogICAgICBzdGF0ZSwKICAgICAgeyBwYXlsb2FkOiB7IGFtb3Vu
dCB9IH0KICAgICkgPT4gewogICAgICByZXR1cm4geyAuLi5zdGF0ZSwgY291
bnRlcjogc3RhdGUuY291bnRlciArIGFtb3VudCB9OwogICAgfQogIH0sCiAg
ZGVmYXVsdFN0YXRlCik7CgpleHBvcnQgZGVmYXVsdCByZWR1Y2VyOwpgYGAK
CltTZWUgdGhlIGZ1bGwgQVBJIGRvY3VtZW50YXRpb24uXShodHRwczovL3Jl
ZHV4LWFjdGlvbnMuanMub3JnLykKCiMjIERvY3VtZW50YXRpb24KCi0gW0lu
dHJvZHVjdGlvbl0oaHR0cHM6Ly9yZWR1eC1hY3Rpb25zLmpzLm9yZy9pbnRy
b2R1Y3Rpb24pCi0gW0FQSV0oaHR0cHM6Ly9yZWR1eC1hY3Rpb25zLmpzLm9y
Zy9hcGkpCi0gW0V4dGVybmFsIFJlc291cmNlc10oaHR0cHM6Ly9yZWR1eC1h
Y3Rpb25zLmpzLm9yZy9leHRlcm5hbHJlc291cmNlcykKLSBbQ2hhbmdlbG9n
XShodHRwczovL3JlZHV4LWFjdGlvbnMuanMub3JnL2NoYW5nZWxvZykKLSBb
Q29udHJpYnV0b3JzXShodHRwczovL2dpdGh1Yi5jb20vcmVkdXgtdXRpbGl0
aWVzL3JlZHV4LWFjdGlvbnMvZ3JhcGhzL2NvbnRyaWJ1dG9ycykK
",,6325,"bGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczogMTEKc2NyaXB0OgogIC0geWFy
biBmb3JtYXQ6Y2hlY2sKICAtIHlhcm4gbGludAogIC0geWFybiB0ZXN0CmFm
dGVyX3N1Y2Nlc3M6CiAgLSBucHggY29kZWNvdgpjYWNoZToKICBkaXJlY3Rv
cmllczoKICAtICIkSE9NRS8ubnBtIgo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'node-fs-extra',2791348,"b'Node.js: extra methods for the fs object like copy(), remove(), mkdirs()'",b'JavaScript',41,6322,,80,False,b'https://api.github.com/repos/jprichardson/node-fs-extra/forks',"Tm9kZS5qczogZnMtZXh0cmEKPT09PT09PT09PT09PT09PT0KCmBmcy1leHRy
YWAgYWRkcyBmaWxlIHN5c3RlbSBtZXRob2RzIHRoYXQgYXJlbid0IGluY2x1
ZGVkIGluIHRoZSBuYXRpdmUgYGZzYCBtb2R1bGUgYW5kIGFkZHMgcHJvbWlz
ZSBzdXBwb3J0IHRvIHRoZSBgZnNgIG1ldGhvZHMuIEl0IGFsc28gdXNlcyBb
YGdyYWNlZnVsLWZzYF0oaHR0cHM6Ly9naXRodWIuY29tL2lzYWFjcy9ub2Rl
LWdyYWNlZnVsLWZzKSB0byBwcmV2ZW50IGBFTUZJTEVgIGVycm9ycy4gSXQg
c2hvdWxkIGJlIGEgZHJvcCBpbiByZXBsYWNlbWVudCBmb3IgYGZzYC4KClsh
W25wbSBQYWNrYWdlXShodHRwczovL2ltZy5zaGllbGRzLmlvL25wbS92L2Zz
LWV4dHJhLnN2ZyldKGh0dHBzOi8vd3d3Lm5wbWpzLm9yZy9wYWNrYWdlL2Zz
LWV4dHJhKQpbIVtMaWNlbnNlXShodHRwczovL2ltZy5zaGllbGRzLmlvL25w
bS9sL2V4cHJlc3Muc3ZnKV0oaHR0cHM6Ly9naXRodWIuY29tL2pwcmljaGFy
ZHNvbi9ub2RlLWZzLWV4dHJhL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpClshW2J1
aWxkIHN0YXR1c10oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby90cmF2aXMvanBy
aWNoYXJkc29uL25vZGUtZnMtZXh0cmEvbWFzdGVyLnN2ZyldKGh0dHA6Ly90
cmF2aXMtY2kub3JnL2pwcmljaGFyZHNvbi9ub2RlLWZzLWV4dHJhKQpbIVt3
aW5kb3dzIEJ1aWxkIHN0YXR1c10oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9h
cHB2ZXlvci9jaS9qcHJpY2hhcmRzb24vbm9kZS1mcy1leHRyYS9tYXN0ZXIu
c3ZnP2xhYmVsPXdpbmRvd3MlMjBidWlsZCldKGh0dHBzOi8vY2kuYXBwdmV5
b3IuY29tL3Byb2plY3QvanByaWNoYXJkc29uL25vZGUtZnMtZXh0cmEvYnJh
bmNoL21hc3RlcikKWyFbZG93bmxvYWRzIHBlciBtb250aF0oaHR0cDovL2lt
Zy5zaGllbGRzLmlvL25wbS9kbS9mcy1leHRyYS5zdmcpXShodHRwczovL3d3
dy5ucG1qcy5vcmcvcGFja2FnZS9mcy1leHRyYSkKWyFbQ292ZXJhZ2UgU3Rh
dHVzXShodHRwczovL2ltZy5zaGllbGRzLmlvL2NvdmVyYWxscy9naXRodWIv
anByaWNoYXJkc29uL25vZGUtZnMtZXh0cmEvbWFzdGVyLnN2ZyldKGh0dHBz
Oi8vY292ZXJhbGxzLmlvL2dpdGh1Yi9qcHJpY2hhcmRzb24vbm9kZS1mcy1l
eHRyYSkKWyFbSmF2YVNjcmlwdCBTdHlsZSBHdWlkZV0oaHR0cHM6Ly9pbWcu
c2hpZWxkcy5pby9iYWRnZS9jb2RlX3N0eWxlLXN0YW5kYXJkLWJyaWdodGdy
ZWVuLnN2ZyldKGh0dHBzOi8vc3RhbmRhcmRqcy5jb20pCgpXaHk/Ci0tLS0K
CkkgZ290IHRpcmVkIG9mIGluY2x1ZGluZyBgbWtkaXJwYCwgYHJpbXJhZmAs
IGFuZCBgbmNwYCBpbiBtb3N0IG9mIG15IHByb2plY3RzLgoKCgoKSW5zdGFs
bGF0aW9uCi0tLS0tLS0tLS0tLQoKICAgIG5wbSBpbnN0YWxsIGZzLWV4dHJh
CgoKClVzYWdlCi0tLS0tCgpgZnMtZXh0cmFgIGlzIGEgZHJvcCBpbiByZXBs
YWNlbWVudCBmb3IgbmF0aXZlIGBmc2AuIEFsbCBtZXRob2RzIGluIGBmc2Ag
YXJlIGF0dGFjaGVkIHRvIGBmcy1leHRyYWAuIEFsbCBgZnNgIG1ldGhvZHMg
cmV0dXJuIHByb21pc2VzIGlmIHRoZSBjYWxsYmFjayBpc24ndCBwYXNzZWQu
CgpZb3UgZG9uJ3QgZXZlciBuZWVkIHRvIGluY2x1ZGUgdGhlIG9yaWdpbmFs
IGBmc2AgbW9kdWxlIGFnYWluOgoKYGBganMKY29uc3QgZnMgPSByZXF1aXJl
KCdmcycpIC8vIHRoaXMgaXMgbm8gbG9uZ2VyIG5lY2Vzc2FyeQpgYGAKCnlv
dSBjYW4gbm93IGRvIHRoaXM6CgpgYGBqcwpjb25zdCBmcyA9IHJlcXVpcmUo
J2ZzLWV4dHJhJykKYGBgCgpvciBpZiB5b3UgcHJlZmVyIHRvIG1ha2UgaXQg
Y2xlYXIgdGhhdCB5b3UncmUgdXNpbmcgYGZzLWV4dHJhYCBhbmQgbm90IGBm
c2AsIHlvdSBtYXkgd2FudAp0byBuYW1lIHlvdXIgYGZzYCB2YXJpYWJsZSBg
ZnNlYCBsaWtlIHNvOgoKYGBganMKY29uc3QgZnNlID0gcmVxdWlyZSgnZnMt
ZXh0cmEnKQpgYGAKCnlvdSBjYW4gYWxzbyBrZWVwIGJvdGgsIGJ1dCBpdCdz
IHJlZHVuZGFudDoKCmBgYGpzCmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKQpj
b25zdCBmc2UgPSByZXF1aXJlKCdmcy1leHRyYScpCmBgYAoKU3luYyB2cyBB
c3luYyB2cyBBc3luYy9Bd2FpdAotLS0tLS0tLS0tLS0tCk1vc3QgbWV0aG9k
cyBhcmUgYXN5bmMgYnkgZGVmYXVsdC4gQWxsIGFzeW5jIG1ldGhvZHMgd2ls
bCByZXR1cm4gYSBwcm9taXNlIGlmIHRoZSBjYWxsYmFjayBpc24ndCBwYXNz
ZWQuCgpTeW5jIG1ldGhvZHMgb24gdGhlIG90aGVyIGhhbmQgd2lsbCB0aHJv
dyBpZiBhbiBlcnJvciBvY2N1cnMuCgpBbHNvIEFzeW5jL0F3YWl0IHdpbGwg
dGhyb3cgYW4gZXJyb3IgaWYgb25lIG9jY3Vycy4KCkV4YW1wbGU6CgpgYGBq
cwpjb25zdCBmcyA9IHJlcXVpcmUoJ2ZzLWV4dHJhJykKCi8vIEFzeW5jIHdp
dGggcHJvbWlzZXM6CmZzLmNvcHkoJy90bXAvbXlmaWxlJywgJy90bXAvbXlu
ZXdmaWxlJykKICAudGhlbigoKSA9PiBjb25zb2xlLmxvZygnc3VjY2VzcyEn
KSkKICAuY2F0Y2goZXJyID0+IGNvbnNvbGUuZXJyb3IoZXJyKSkKCi8vIEFz
eW5jIHdpdGggY2FsbGJhY2tzOgpmcy5jb3B5KCcvdG1wL215ZmlsZScsICcv
dG1wL215bmV3ZmlsZScsIGVyciA9PiB7CiAgaWYgKGVycikgcmV0dXJuIGNv
bnNvbGUuZXJyb3IoZXJyKQogIGNvbnNvbGUubG9nKCdzdWNjZXNzIScpCn0p
CgovLyBTeW5jOgp0cnkgewogIGZzLmNvcHlTeW5jKCcvdG1wL215ZmlsZScs
ICcvdG1wL215bmV3ZmlsZScpCiAgY29uc29sZS5sb2coJ3N1Y2Nlc3MhJykK
fSBjYXRjaCAoZXJyKSB7CiAgY29uc29sZS5lcnJvcihlcnIpCn0KCi8vIEFz
eW5jL0F3YWl0Ogphc3luYyBmdW5jdGlvbiBjb3B5RmlsZXMgKCkgewogIHRy
eSB7CiAgICBhd2FpdCBmcy5jb3B5KCcvdG1wL215ZmlsZScsICcvdG1wL215
bmV3ZmlsZScpCiAgICBjb25zb2xlLmxvZygnc3VjY2VzcyEnKQogIH0gY2F0
Y2ggKGVycikgewogICAgY29uc29sZS5lcnJvcihlcnIpCiAgfQp9Cgpjb3B5
RmlsZXMoKQpgYGAKCgpNZXRob2RzCi0tLS0tLS0KCiMjIyBBc3luYwoKLSBb
Y29weV0oZG9jcy9jb3B5Lm1kKQotIFtlbXB0eURpcl0oZG9jcy9lbXB0eURp
ci5tZCkKLSBbZW5zdXJlRmlsZV0oZG9jcy9lbnN1cmVGaWxlLm1kKQotIFtl
bnN1cmVEaXJdKGRvY3MvZW5zdXJlRGlyLm1kKQotIFtlbnN1cmVMaW5rXShk
b2NzL2Vuc3VyZUxpbmsubWQpCi0gW2Vuc3VyZVN5bWxpbmtdKGRvY3MvZW5z
dXJlU3ltbGluay5tZCkKLSBbbWtkaXJwXShkb2NzL2Vuc3VyZURpci5tZCkK
LSBbbWtkaXJzXShkb2NzL2Vuc3VyZURpci5tZCkKLSBbbW92ZV0oZG9jcy9t
b3ZlLm1kKQotIFtvdXRwdXRGaWxlXShkb2NzL291dHB1dEZpbGUubWQpCi0g
W291dHB1dEpzb25dKGRvY3Mvb3V0cHV0SnNvbi5tZCkKLSBbcGF0aEV4aXN0
c10oZG9jcy9wYXRoRXhpc3RzLm1kKQotIFtyZWFkSnNvbl0oZG9jcy9yZWFk
SnNvbi5tZCkKLSBbcmVtb3ZlXShkb2NzL3JlbW92ZS5tZCkKLSBbd3JpdGVK
c29uXShkb2NzL3dyaXRlSnNvbi5tZCkKCiMjIyBTeW5jCgotIFtjb3B5U3lu
Y10oZG9jcy9jb3B5LXN5bmMubWQpCi0gW2VtcHR5RGlyU3luY10oZG9jcy9l
bXB0eURpci1zeW5jLm1kKQotIFtlbnN1cmVGaWxlU3luY10oZG9jcy9lbnN1
cmVGaWxlLXN5bmMubWQpCi0gW2Vuc3VyZURpclN5bmNdKGRvY3MvZW5zdXJl
RGlyLXN5bmMubWQpCi0gW2Vuc3VyZUxpbmtTeW5jXShkb2NzL2Vuc3VyZUxp
bmstc3luYy5tZCkKLSBbZW5zdXJlU3ltbGlua1N5bmNdKGRvY3MvZW5zdXJl
U3ltbGluay1zeW5jLm1kKQotIFtta2RpcnBTeW5jXShkb2NzL2Vuc3VyZURp
ci1zeW5jLm1kKQotIFtta2RpcnNTeW5jXShkb2NzL2Vuc3VyZURpci1zeW5j
Lm1kKQotIFttb3ZlU3luY10oZG9jcy9tb3ZlLXN5bmMubWQpCi0gW291dHB1
dEZpbGVTeW5jXShkb2NzL291dHB1dEZpbGUtc3luYy5tZCkKLSBbb3V0cHV0
SnNvblN5bmNdKGRvY3Mvb3V0cHV0SnNvbi1zeW5jLm1kKQotIFtwYXRoRXhp
c3RzU3luY10oZG9jcy9wYXRoRXhpc3RzLXN5bmMubWQpCi0gW3JlYWRKc29u
U3luY10oZG9jcy9yZWFkSnNvbi1zeW5jLm1kKQotIFtyZW1vdmVTeW5jXShk
b2NzL3JlbW92ZS1zeW5jLm1kKQotIFt3cml0ZUpzb25TeW5jXShkb2NzL3dy
aXRlSnNvbi1zeW5jLm1kKQoKCioqTk9URToqKiBZb3UgY2FuIHN0aWxsIHVz
ZSB0aGUgbmF0aXZlIE5vZGUuanMgbWV0aG9kcy4gVGhleSBhcmUgcHJvbWlz
aWZpZWQgYW5kIGNvcGllZCBvdmVyIHRvIGBmcy1leHRyYWAuIFNlZSBbbm90
ZXMgb24gYGZzLnJlYWQoKWAgJiBgZnMud3JpdGUoKWBdKGRvY3MvZnMtcmVh
ZC13cml0ZS5tZCkKCiMjIyBXaGF0IGhhcHBlbmVkIHRvIGB3YWxrKClgIGFu
ZCBgd2Fsa1N5bmMoKWA/CgpUaGV5IHdlcmUgcmVtb3ZlZCBmcm9tIGBmcy1l
eHRyYWAgaW4gdjIuMC4wLiBJZiB5b3UgbmVlZCB0aGUgZnVuY3Rpb25hbGl0
eSwgYHdhbGtgIGFuZCBgd2Fsa1N5bmNgIGFyZSBhdmFpbGFibGUgYXMgc2Vw
YXJhdGUgcGFja2FnZXMsIFtga2xhd2BdKGh0dHBzOi8vZ2l0aHViLmNvbS9q
cHJpY2hhcmRzb24vbm9kZS1rbGF3KSBhbmQgW2BrbGF3LXN5bmNgXShodHRw
czovL2dpdGh1Yi5jb20vbWFuaWRsb3Uvbm9kZS1rbGF3LXN5bmMpLgoKClRo
aXJkIFBhcnR5Ci0tLS0tLS0tLS0tCgoKIyMjIFR5cGVTY3JpcHQKCklmIHlv
dSBsaWtlIFR5cGVTY3JpcHQsIHlvdSBjYW4gdXNlIGBmcy1leHRyYWAgd2l0
aCBpdDogaHR0cHM6Ly9naXRodWIuY29tL0RlZmluaXRlbHlUeXBlZC9EZWZp
bml0ZWx5VHlwZWQvdHJlZS9tYXN0ZXIvdHlwZXMvZnMtZXh0cmEKCgojIyMg
RmlsZSAvIERpcmVjdG9yeSBXYXRjaGluZwoKSWYgeW91IHdhbnQgdG8gd2F0
Y2ggZm9yIGNoYW5nZXMgdG8gZmlsZXMgb3IgZGlyZWN0b3JpZXMsIHRoZW4g
eW91IHNob3VsZCB1c2UgW2Nob2tpZGFyXShodHRwczovL2dpdGh1Yi5jb20v
cGF1bG1pbGxyL2Nob2tpZGFyKS4KCiMjIyBPYnRhaW4gRmlsZXN5c3RlbSAo
RGV2aWNlcywgUGFydGl0aW9ucykgSW5mb3JtYXRpb24KCltmcy1maWxlc3lz
dGVtXShodHRwczovL2dpdGh1Yi5jb20vYXJ0aHVyaW50ZWxsaWdlbmNlL25v
ZGUtZnMtZmlsZXN5c3RlbSkgYWxsb3dzIHlvdSB0byByZWFkIHRoZSBzdGF0
ZSBvZiB0aGUgZmlsZXN5c3RlbSBvZiB0aGUgaG9zdCBvbiB3aGljaCBpdCBp
cyBydW4uIEl0IHJldHVybnMgaW5mb3JtYXRpb24gYWJvdXQgYm90aCB0aGUg
ZGV2aWNlcyBhbmQgdGhlIHBhcnRpdGlvbnMgKHZvbHVtZXMpIG9mIHRoZSBz
eXN0ZW0uCgojIyMgTWlzYy4KCi0gW2ZzLWV4dHJhLWRlYnVnXShodHRwczov
L2dpdGh1Yi5jb20vamR4Y29kZS9mcy1leHRyYS1kZWJ1ZykgLSBTZW5kIHlv
dXIgZnMtZXh0cmEgY2FsbHMgdG8gW2RlYnVnXShodHRwczovL25wbWpzLm9y
Zy9wYWNrYWdlL2RlYnVnKS4KLSBbbWZzXShodHRwczovL2dpdGh1Yi5jb20v
Y2Fkb3JuL21mcykgLSBNb25pdG9yIHlvdXIgZnMtZXh0cmEgY2FsbHMuCgoK
CkhhY2tpbmcgb24gZnMtZXh0cmEKLS0tLS0tLS0tLS0tLS0tLS0tLQoKV2Fu
bmEgaGFjayBvbiBgZnMtZXh0cmFgPyBHcmVhdCEgWW91ciBoZWxwIGlzIG5l
ZWRlZCEgW2ZzLWV4dHJhIGlzIG9uZSBvZiB0aGUgbW9zdCBkZXBlbmRlZCB1
cG9uIE5vZGUuanMgcGFja2FnZXNdKGh0dHA6Ly9ub2RlaS5jby9ucG0vZnMt
ZXh0cmEucG5nP2Rvd25sb2Fkcz10cnVlJmRvd25sb2FkUmFuaz10cnVlJnN0
YXJzPXRydWUpLiBUaGlzIHByb2plY3QKdXNlcyBbSmF2YVNjcmlwdCBTdGFu
ZGFyZCBTdHlsZV0oaHR0cHM6Ly9naXRodWIuY29tL2Zlcm9zcy9zdGFuZGFy
ZCkgLSBpZiB0aGUgbmFtZSBvciBzdHlsZSBjaG9pY2VzIGJvdGhlciB5b3Us
CnlvdSdyZSBnb25uYSBoYXZlIHRvIGdldCBvdmVyIGl0IDopIElmIGBzdGFu
ZGFyZGAgaXMgZ29vZCBlbm91Z2ggZm9yIGBucG1gLCBpdCdzIGdvb2QgZW5v
dWdoIGZvciBgZnMtZXh0cmFgLgoKWyFbanMtc3RhbmRhcmQtc3R5bGVdKGh0
dHBzOi8vY2RuLnJhd2dpdC5jb20vZmVyb3NzL3N0YW5kYXJkL21hc3Rlci9i
YWRnZS5zdmcpXShodHRwczovL2dpdGh1Yi5jb20vZmVyb3NzL3N0YW5kYXJk
KQoKV2hhdCdzIG5lZWRlZD8KLSBGaXJzdCwgdGFrZSBhIGxvb2sgYXQgZXhp
c3RpbmcgaXNzdWVzLiBUaG9zZSBhcmUgcHJvYmFibHkgZ29pbmcgdG8gYmUg
d2hlcmUgdGhlIHByaW9yaXR5IGxpZXMuCi0gTW9yZSB0ZXN0cyBmb3IgZWRn
ZSBjYXNlcy4gU3BlY2lmaWNhbGx5IG9uIGRpZmZlcmVudCBwbGF0Zm9ybXMu
IFRoZXJlIGNhbiBuZXZlciBiZSBlbm91Z2ggdGVzdHMuCi0gSW1wcm92ZSB0
ZXN0IGNvdmVyYWdlLiBTZWUgY292ZXJhbGxzIG91dHB1dCBmb3IgbW9yZSBp
bmZvLgoKTm90ZTogSWYgeW91IG1ha2UgYW55IGJpZyBjaGFuZ2VzLCAqKnlv
dSBzaG91bGQgZGVmaW5pdGVseSBmaWxlIGFuIGlzc3VlIGZvciBkaXNjdXNz
aW9uIGZpcnN0LioqCgojIyMgUnVubmluZyB0aGUgVGVzdCBTdWl0ZQoKZnMt
ZXh0cmEgY29udGFpbnMgaHVuZHJlZHMgb2YgdGVzdHMuCgotIGBucG0gcnVu
IGxpbnRgOiBydW5zIHRoZSBsaW50ZXIgKFtzdGFuZGFyZF0oaHR0cDovL3N0
YW5kYXJkanMuY29tLykpCi0gYG5wbSBydW4gdW5pdGA6IHJ1bnMgdGhlIHVu
aXQgdGVzdHMKLSBgbnBtIHRlc3RgOiBydW5zIGJvdGggdGhlIGxpbnRlciBh
bmQgdGhlIHRlc3RzCgoKIyMjIFdpbmRvd3MKCklmIHlvdSBydW4gdGhlIHRl
c3RzIG9uIHRoZSBXaW5kb3dzIGFuZCByZWNlaXZlIGEgbG90IG9mIHN5bWJv
bGljIGxpbmsgYEVQRVJNYCBwZXJtaXNzaW9uIGVycm9ycywgaXQncwpiZWNh
dXNlIG9uIFdpbmRvd3MgeW91IG5lZWQgZWxldmF0ZWQgcHJpdmlsZWdlIHRv
IGNyZWF0ZSBzeW1ib2xpYyBsaW5rcy4gWW91IGNhbiBhZGQgdGhpcyB0byB5
b3VyIFdpbmRvd3MncwphY2NvdW50IGJ5IGZvbGxvd2luZyB0aGUgaW5zdHJ1
Y3Rpb25zIGhlcmU6IGh0dHA6Ly9zdXBlcnVzZXIuY29tL3F1ZXN0aW9ucy8x
MDQ4NDUvcGVybWlzc2lvbi10by1tYWtlLXN5bWJvbGljLWxpbmtzLWluLXdp
bmRvd3MtNwpIb3dldmVyLCBJIGRpZG4ndCBoYXZlIG11Y2ggbHVjayBkb2lu
ZyB0aGlzLgoKU2luY2UgSSBkZXZlbG9wIG9uIE1hYyBPUyBYLCBJIHVzZSBW
TVdhcmUgRnVzaW9uIGZvciBXaW5kb3dzIHRlc3RpbmcuIEkgY3JlYXRlIGEg
c2hhcmVkIGZvbGRlciB0aGF0IEkgbWFwIHRvIGEgZHJpdmUgb24gV2luZG93
cy4KSSBvcGVuIHRoZSBgTm9kZS5qcyBjb21tYW5kIHByb21wdGAgYW5kIHJ1
biBhcyBgQWRtaW5pc3RyYXRvcmAuIEkgdGhlbiBtYXAgdGhlIG5ldHdvcmsg
ZHJpdmUgcnVubmluZyB0aGUgZm9sbG93aW5nIGNvbW1hbmQ6CgogICAgbmV0
IHVzZSB6OiAiXFx2bXdhcmUtaG9zdFxTaGFyZWQgRm9sZGVycyIKCkkgY2Fu
IHRoZW4gbmF2aWdhdGUgdG8gbXkgYGZzLWV4dHJhYCBkaXJlY3RvcnkgYW5k
IHJ1biB0aGUgdGVzdHMuCgoKTmFtaW5nCi0tLS0tLQoKSSBwdXQgYSBsb3Qg
b2YgdGhvdWdodCBpbnRvIHRoZSBuYW1pbmcgb2YgdGhlc2UgZnVuY3Rpb25z
LiBJbnNwaXJlZCBieSBAY29vbGFqODYncyByZXF1ZXN0LiBTbyBoZSBkZXNl
cnZlcyBtdWNoIG9mIHRoZSBjcmVkaXQgZm9yIHJhaXNpbmcgdGhlIGlzc3Vl
LiBTZWUgZGlzY3Vzc2lvbihzKSBoZXJlOgoKKiBodHRwczovL2dpdGh1Yi5j
b20vanByaWNoYXJkc29uL25vZGUtZnMtZXh0cmEvaXNzdWVzLzIKKiBodHRw
czovL2dpdGh1Yi5jb20vZmxhdGlyb24vdXRpbGUvaXNzdWVzLzExCiogaHR0
cHM6Ly9naXRodWIuY29tL3J5YW5tY2dyYXRoL3dyZW5jaC1qcy9pc3N1ZXMv
MjkKKiBodHRwczovL2dpdGh1Yi5jb20vc3Vic3RhY2svbm9kZS1ta2RpcnAv
aXNzdWVzLzE3CgpGaXJzdCwgSSBiZWxpZXZlIHRoYXQgaW4gYXMgbWFueSBj
YXNlcyBhcyBwb3NzaWJsZSwgdGhlIFtOb2RlLmpzIG5hbWluZyBzY2hlbWVz
XShodHRwOi8vbm9kZWpzLm9yZy9hcGkvZnMuaHRtbCkgc2hvdWxkIGJlIGNo
b3Nlbi4gSG93ZXZlciwgdGhlcmUgYXJlIHByb2JsZW1zIHdpdGggdGhlIE5v
ZGUuanMgb3duIG5hbWluZyBzY2hlbWVzLgoKRm9yIGV4YW1wbGUsIGBmcy5y
ZWFkRmlsZSgpYCBhbmQgYGZzLnJlYWRkaXIoKWA6IHRoZSAqKkYqKiBpcyBj
YXBpdGFsaXplZCBpbiAqRmlsZSogYW5kIHRoZSAqKmQqKiBpcyBub3QgY2Fw
aXRhbGl6ZWQgaW4gKmRpciouIFBlcmhhcHMgYSBiaXQgcGVkYW50aWMsIGJ1
dCB0aGV5IHNob3VsZCBzdGlsbCBiZSBjb25zaXN0ZW50LiBBbHNvLCBOb2Rl
LmpzIGhhcyBjaG9zZW4gYSBsb3Qgb2YgUE9TSVggbmFtaW5nIHNjaGVtZXMs
IHdoaWNoIEkgYmVsaWV2ZSBpcyBncmVhdC4gU2VlOiBgZnMubWtkaXIoKWAs
IGBmcy5ybWRpcigpYCwgYGZzLmNob3duKClgLCBldGMuCgpXZSBoYXZlIGEg
ZGlsZW1tYSB0aG91Z2guIEhvdyBkbyB5b3UgY29uc2lzdGVudGx5IG5hbWUg
bWV0aG9kcyB0aGF0IHBlcmZvcm0gdGhlIGZvbGxvd2luZyBQT1NJWCBjb21t
YW5kczogYGNwYCwgYGNwIC1yYCwgYG1rZGlyIC1wYCwgYW5kIGBybSAtcmZg
PwoKTXkgcGVyc3BlY3RpdmU6IHdoZW4gaW4gZG91YnQsIGVyciBvbiB0aGUg
c2lkZSBvZiBzaW1wbGljaXR5LiBBIGRpcmVjdG9yeSBpcyBqdXN0IGEgaGll
cmFyY2hpY2FsIGdyb3VwaW5nIG9mIGRpcmVjdG9yaWVzIGFuZCBmaWxlcy4g
Q29uc2lkZXIgdGhhdCBmb3IgYSBtb21lbnQuIFNvIHdoZW4geW91IHdhbnQg
dG8gY29weSBpdCBvciByZW1vdmUgaXQsIGluIG1vc3QgY2FzZXMgeW91J2xs
IHdhbnQgdG8gY29weSBvciByZW1vdmUgYWxsIG9mIGl0cyBjb250ZW50cy4g
V2hlbiB5b3Ugd2FudCB0byBjcmVhdGUgYSBkaXJlY3RvcnksIGlmIHRoZSBk
aXJlY3RvcnkgdGhhdCBpdCdzIHN1cHBvc2UgdG8gYmUgY29udGFpbmVkIGlu
IGRvZXMgbm90IGV4aXN0LCB0aGVuIGluIG1vc3QgY2FzZXMgeW91J2xsIHdh
bnQgdG8gY3JlYXRlIHRoYXQgdG9vLgoKU28sIGlmIHlvdSB3YW50IHRvIHJl
bW92ZSBhIGZpbGUgb3IgYSBkaXJlY3RvcnkgcmVnYXJkbGVzcyBvZiB3aGV0
aGVyIGl0IGhhcyBjb250ZW50cywganVzdCBjYWxsIGBmcy5yZW1vdmUocGF0
aClgLiBJZiB5b3Ugd2FudCB0byBjb3B5IGEgZmlsZSBvciBhIGRpcmVjdG9y
eSB3aGV0aGVyIGl0IGhhcyBjb250ZW50cywganVzdCBjYWxsIGBmcy5jb3B5
KHNvdXJjZSwgZGVzdGluYXRpb24pYC4gSWYgeW91IHdhbnQgdG8gY3JlYXRl
IGEgZGlyZWN0b3J5IHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciBpdHMgcGFyZW50
IGRpcmVjdG9yaWVzIGV4aXN0LCBqdXN0IGNhbGwgYGZzLm1rZGlycyhwYXRo
KWAgb3IgYGZzLm1rZGlycChwYXRoKWAuCgoKQ3JlZGl0Ci0tLS0tLQoKYGZz
LWV4dHJhYCB3b3VsZG4ndCBiZSBwb3NzaWJsZSB3aXRob3V0IHVzaW5nIHRo
ZSBtb2R1bGVzIGZyb20gdGhlIGZvbGxvd2luZyBhdXRob3JzOgoKLSBbSXNh
YWMgU2hsdWV0ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9pc2FhY3MpCi0gW0No
YXJsaWUgTWNDb25uZWxdKGh0dHBzOi8vZ2l0aHViLmNvbS9hdmlhbmZsdSkK
LSBbSmFtZXMgSGFsbGlkYXldKGh0dHBzOi8vZ2l0aHViLmNvbS9zdWJzdGFj
aykKLSBbQW5kcmV3IEtlbGxleV0oaHR0cHM6Ly9naXRodWIuY29tL2FuZHJl
d3JrKQoKCgoKTGljZW5zZQotLS0tLS0tCgpMaWNlbnNlZCB1bmRlciBNSVQK
CkNvcHlyaWdodCAoYykgMjAxMS0yMDE3IFtKUCBSaWNoYXJkc29uXShodHRw
czovL2dpdGh1Yi5jb20vanByaWNoYXJkc29uKQoKWzFdOiBodHRwOi8vbm9k
ZWpzLm9yZy9kb2NzL2xhdGVzdC9hcGkvZnMuaHRtbAoKCltqc29uZmlsZV06
IGh0dHBzOi8vZ2l0aHViLmNvbS9qcHJpY2hhcmRzb24vbm9kZS1qc29uZmls
ZQo=
",,6322,"bGFuZ3VhZ2U6IG5vZGVfanMKb3M6CiAgLSBsaW51eAogIC0gb3N4Cm5vZGVf
anM6CiAgLSA2CiAgLSA4CiAgLSA5CiAgLSAxMAogIC0gMTEKICAtIDEyCmVu
djogVEVTVF9TVUlURT11bml0Cm1hdHJpeDoKICBleGNsdWRlOgogICAgLSBv
czogbGludXgKICAgICAgbm9kZV9qczogMTIKICBpbmNsdWRlOgogICAgLSBv
czogbGludXgKICAgICAgbm9kZV9qczogMTIKICAgICAgZW52OiBURVNUX1NV
SVRFPWZ1bGwtY2kKc2NyaXB0OiBucG0gcnVuLXNjcmlwdCAkVEVTVF9TVUlU
RQphZnRlcl9zdWNjZXNzOgogIC0gaWYgWyAkVEVTVF9TVUlURSA9IGZ1bGwt
Y2kgXTsgdGhlbiBucG0gcnVuIGNvdmVyYWxsczsgZmkKY2FjaGU6CiAgZGly
ZWN0b3JpZXM6CiAgICAtIG5vZGVfbW9kdWxlcwo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'gunicorn',390510,"b""gunicorn 'Green Unicorn' is a WSGI HTTP Server for UNIX, fast clients and sleepy applications.""",b'Python',187,6322,,238,False,b'https://api.github.com/repos/benoitc/gunicorn/forks',"R3VuaWNvcm4KLS0tLS0tLS0KCi4uIGltYWdlOjogaHR0cHM6Ly9pbWcuc2hp
ZWxkcy5pby9weXBpL3YvZ3VuaWNvcm4uc3ZnP3N0eWxlPWZsYXQKICAgIDph
bHQ6IFB5UEkgdmVyc2lvbgogICAgOnRhcmdldDogaHR0cHM6Ly9weXBpLnB5
dGhvbi5vcmcvcHlwaS9ndW5pY29ybgoKLi4gaW1hZ2U6OiBodHRwczovL2lt
Zy5zaGllbGRzLmlvL3B5cGkvcHl2ZXJzaW9ucy9ndW5pY29ybi5zdmcKICAg
IDphbHQ6IFN1cHBvcnRlZCBQeXRob24gdmVyc2lvbnMKICAgIDp0YXJnZXQ6
IGh0dHBzOi8vcHlwaS5weXRob24ub3JnL3B5cGkvZ3VuaWNvcm4KCi4uIGlt
YWdlOjogaHR0cHM6Ly90cmF2aXMtY2kub3JnL2Jlbm9pdGMvZ3VuaWNvcm4u
c3ZnP2JyYW5jaD1tYXN0ZXIKICAgIDphbHQ6IEJ1aWxkIFN0YXR1cwogICAg
OnRhcmdldDogaHR0cHM6Ly90cmF2aXMtY2kub3JnL2Jlbm9pdGMvZ3VuaWNv
cm4KCkd1bmljb3JuICdHcmVlbiBVbmljb3JuJyBpcyBhIFB5dGhvbiBXU0dJ
IEhUVFAgU2VydmVyIGZvciBVTklYLiBJdCdzIGEgcHJlLWZvcmsKd29ya2Vy
IG1vZGVsIHBvcnRlZCBmcm9tIFJ1YnkncyBVbmljb3JuXyBwcm9qZWN0LiBU
aGUgR3VuaWNvcm4gc2VydmVyIGlzIGJyb2FkbHkKY29tcGF0aWJsZSB3aXRo
IHZhcmlvdXMgd2ViIGZyYW1ld29ya3MsIHNpbXBseSBpbXBsZW1lbnRlZCwg
bGlnaHQgb24gc2VydmVyCnJlc291cmNlIHVzYWdlLCBhbmQgZmFpcmx5IHNw
ZWVkeS4KCkZlZWwgZnJlZSB0byBqb2luIHVzIGluIGAjZ3VuaWNvcm5gXyBv
biBGcmVlbm9kZV8uCgpEb2N1bWVudGF0aW9uCi0tLS0tLS0tLS0tLS0KClRo
ZSBkb2N1bWVudGF0aW9uIGlzIGhvc3RlZCBhdCBodHRwOi8vZG9jcy5ndW5p
Y29ybi5vcmcuCgpJbnN0YWxsYXRpb24KLS0tLS0tLS0tLS0tCgpHdW5pY29y
biByZXF1aXJlcyAqKlB5dGhvbiAzLnggPj0gMy41KiouCgpJbnN0YWxsIGZy
b20gUHlQSTo6CgogICAgJCBwaXAgaW5zdGFsbCBndW5pY29ybgoKClVzYWdl
Ci0tLS0tCgpCYXNpYyB1c2FnZTo6CgogICAgJCBndW5pY29ybiBbT1BUSU9O
U10gQVBQX01PRFVMRQoKV2hlcmUgYGBBUFBfTU9EVUxFYGAgaXMgb2YgdGhl
IHBhdHRlcm4gYGAkKE1PRFVMRV9OQU1FKTokKFZBUklBQkxFX05BTUUpYGAu
IFRoZQptb2R1bGUgbmFtZSBjYW4gYmUgYSBmdWxsIGRvdHRlZCBwYXRoLiBU
aGUgdmFyaWFibGUgbmFtZSByZWZlcnMgdG8gYSBXU0dJCmNhbGxhYmxlIHRo
YXQgc2hvdWxkIGJlIGZvdW5kIGluIHRoZSBzcGVjaWZpZWQgbW9kdWxlLgoK
RXhhbXBsZSB3aXRoIHRlc3QgYXBwOjoKCiAgICAkIGNkIGV4YW1wbGVzCiAg
ICAkIGd1bmljb3JuIC0td29ya2Vycz0yIHRlc3Q6YXBwCgoKQ29udHJpYnV0
aW5nCi0tLS0tLS0tLS0tLQoKU2VlIGBvdXIgY29tcGxldGUgY29udHJpYnV0
b3IncyBndWlkZSA8Q09OVFJJQlVUSU5HLm1kPmBfIGZvciBtb3JlIGRldGFp
bHMuCgoKTGljZW5zZQotLS0tLS0tCgpHdW5pY29ybiBpcyByZWxlYXNlZCB1
bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSB0aGUgTElDRU5TRV8gZmlsZSBm
b3IgbW9yZQpkZXRhaWxzLgoKLi4gX1VuaWNvcm46IGh0dHBzOi8vYm9nb21p
cHMub3JnL3VuaWNvcm4vCi4uIF9gI2d1bmljb3JuYDogaHR0cHM6Ly93ZWJj
aGF0LmZyZWVub2RlLm5ldC8/Y2hhbm5lbHM9Z3VuaWNvcm4KLi4gX0ZyZWVu
b2RlOiBodHRwczovL2ZyZWVub2RlLm5ldC8KLi4gX0xJQ0VOU0U6IGh0dHBz
Oi8vZ2l0aHViLmNvbS9iZW5vaXRjL2d1bmljb3JuL2Jsb2IvbWFzdGVyL0xJ
Q0VOU0UK
",,6322,"c3VkbzogZmFsc2UKbGFuZ3VhZ2U6IHB5dGhvbgptYXRyaXg6CiAgaW5jbHVk
ZToKICAgIC0gcHl0aG9uOiAzLjgKICAgICAgZW52OiBUT1hFTlY9bGludAog
ICAgICBkaXN0OiB4ZW5pYWwKICAgICAgc3VkbzogdHJ1ZQogICAgLSBweXRo
b246IDMuNQogICAgICBlbnY6IFRPWEVOVj1weTM1CiAgICAtIHB5dGhvbjog
My42CiAgICAgIGVudjogVE9YRU5WPXB5MzYKICAgIC0gcHl0aG9uOiAzLjcK
ICAgICAgZW52OiBUT1hFTlY9cHkzNwogICAgICBkaXN0OiB4ZW5pYWwKICAg
ICAgc3VkbzogdHJ1ZQogICAgLSBweXRob246IHB5cHkzCiAgICAgIGVudjog
VE9YRU5WPXB5cHkzCiAgICAgIGRpc3Q6IHhlbmlhbAogICAgLSBweXRob246
IDMuOAogICAgICBlbnY6IFRPWEVOVj1weTM4CiAgICAgIGRpc3Q6IHhlbmlh
bAogICAgICBzdWRvOiB0cnVlCiAgICAtIHB5dGhvbjogMy44CiAgICAgIGVu
djogVE9YRU5WPWRvY3MtbGludAogICAgICBkaXN0OiB4ZW5pYWwKICAgICAg
c3VkbzogdHJ1ZQppbnN0YWxsOiBwaXAgaW5zdGFsbCB0b3gKIyBUT0RPOiBo
dHRwczovL2dpdGh1Yi5jb20vdG94LWRldi90b3gvaXNzdWVzLzE0OQpzY3Jp
cHQ6IHRveCAtLXJlY3JlYXRlCmNhY2hlOgogIGRpcmVjdG9yaWVzOgogICAg
LSAudG94CiAgICAtICRIT01FLy5jYWNoZS9waXAK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'node-canvas',948957,b'Node canvas is a Cairo backed Canvas implementation for NodeJS.',b'C++',165,6321,,295,False,b'https://api.github.com/repos/Automattic/node-canvas/forks',"IyBub2RlLWNhbnZhcwoKWyFbQnVpbGQgU3RhdHVzXShodHRwczovL3RyYXZp
cy1jaS5vcmcvQXV0b21hdHRpYy9ub2RlLWNhbnZhcy5zdmc/YnJhbmNoPW1h
c3RlcildKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9BdXRvbWF0dGljL25vZGUt
Y2FudmFzKQpbIVtOUE0gdmVyc2lvbl0oaHR0cHM6Ly9iYWRnZS5mdXJ5Lmlv
L2pzL2NhbnZhcy5zdmcpXShodHRwOi8vYmFkZ2UuZnVyeS5pby9qcy9jYW52
YXMpCgpub2RlLWNhbnZhcyBpcyBhIFtDYWlyb10oaHR0cDovL2NhaXJvZ3Jh
cGhpY3Mub3JnLyktYmFja2VkIENhbnZhcyBpbXBsZW1lbnRhdGlvbiBmb3Ig
W05vZGUuanNdKGh0dHA6Ly9ub2RlanMub3JnKS4KCiMjIEluc3RhbGxhdGlv
bgoKYGBgYmFzaAokIG5wbSBpbnN0YWxsIGNhbnZhcwpgYGAKCkJ5IGRlZmF1
bHQsIGJpbmFyaWVzIGZvciBtYWNPUywgTGludXggYW5kIFdpbmRvd3Mgd2ls
bCBiZSBkb3dubG9hZGVkLiBJZiB5b3Ugd2FudCB0byBidWlsZCBmcm9tIHNv
dXJjZSwgdXNlIGBucG0gaW5zdGFsbCAtLWJ1aWxkLWZyb20tc291cmNlYCBh
bmQgc2VlIHRoZSAqKkNvbXBpbGluZyoqIHNlY3Rpb24gYmVsb3cuCgpUaGUg
bWluaW11bSB2ZXJzaW9uIG9mIE5vZGUuanMgcmVxdWlyZWQgaXMgKio2LjAu
MCoqLgoKIyMjIENvbXBpbGluZwoKSWYgeW91IGRvbid0IGhhdmUgYSBzdXBw
b3J0ZWQgT1Mgb3IgcHJvY2Vzc29yIGFyY2hpdGVjdHVyZSwgb3IgeW91IHVz
ZSBgLS1idWlsZC1mcm9tLXNvdXJjZWAsIHRoZSBtb2R1bGUgd2lsbCBiZSBj
b21waWxlZCBvbiB5b3VyIHN5c3RlbS4gVGhpcyByZXF1aXJlcyBzZXZlcmFs
IGRlcGVuZGVuY2llcywgaW5jbHVkaW5nIENhaXJvIGFuZCBQYW5nby4KCkZv
ciBkZXRhaWxlZCBpbnN0YWxsYXRpb24gaW5mb3JtYXRpb24sIHNlZSB0aGUg
W3dpa2ldKGh0dHBzOi8vZ2l0aHViLmNvbS9BdXRvbWF0dGljL25vZGUtY2Fu
dmFzL3dpa2kvX3BhZ2VzKS4gT25lLWxpbmUgaW5zdGFsbGF0aW9uIGluc3Ry
dWN0aW9ucyBmb3IgY29tbW9uIE9TZXMgYXJlIGJlbG93LiBOb3RlIHRoYXQg
bGliZ2lmL2dpZmxpYiwgbGlicnN2ZyBhbmQgbGlianBlZyBhcmUgb3B0aW9u
YWwgYW5kIG9ubHkgcmVxdWlyZWQgaWYgeW91IG5lZWQgR0lGLCBTVkcgYW5k
IEpQRUcgc3VwcG9ydCwgcmVzcGVjdGl2ZWx5LiBDYWlybyB2MS4xMC4wIG9y
IGxhdGVyIGlzIHJlcXVpcmVkLgoKT1MgfCBDb21tYW5kCi0tLS0tIHwgLS0t
LS0KT1MgWCB8IFVzaW5nIFtIb21lYnJld10oaHR0cHM6Ly9icmV3LnNoLyk6
PGJyLz5gYnJldyBpbnN0YWxsIHBrZy1jb25maWcgY2Fpcm8gcGFuZ28gbGli
cG5nIGpwZWcgZ2lmbGliIGxpYnJzdmdgClVidW50dSB8IGBzdWRvIGFwdC1n
ZXQgaW5zdGFsbCBidWlsZC1lc3NlbnRpYWwgbGliY2Fpcm8yLWRldiBsaWJw
YW5nbzEuMC1kZXYgbGlianBlZy1kZXYgbGliZ2lmLWRldiBsaWJyc3ZnMi1k
ZXZgCkZlZG9yYSB8IGBzdWRvIHl1bSBpbnN0YWxsIGdjYy1jKysgY2Fpcm8t
ZGV2ZWwgcGFuZ28tZGV2ZWwgbGlianBlZy10dXJiby1kZXZlbCBnaWZsaWIt
ZGV2ZWxgClNvbGFyaXMgfCBgcGtnaW4gaW5zdGFsbCBjYWlybyBwYW5nbyBw
a2ctY29uZmlnIHhwcm90byByZW5kZXJwcm90byBrYnByb3RvIHhleHRwcm90
b2AKT3BlbkJTRCB8IGBkb2FzIHBrZ19hZGQgY2Fpcm8gcGFuZ28gcG5nIGpw
ZWcgZ2lmbGliYApXaW5kb3dzIHwgU2VlIHRoZSBbd2lraV0oaHR0cHM6Ly9n
aXRodWIuY29tL0F1dG9tYXR0aWMvbm9kZS1jYW52YXMvd2lraS9JbnN0YWxs
YXRpb246LVdpbmRvd3MpCk90aGVycyB8IFNlZSB0aGUgW3dpa2ldKGh0dHBz
Oi8vZ2l0aHViLmNvbS9BdXRvbWF0dGljL25vZGUtY2FudmFzL3dpa2kpCgoq
Kk1hYyBPUyBYIHYxMC4xMSs6KiogSWYgeW91IGhhdmUgcmVjZW50bHkgdXBk
YXRlZCB0byBNYWMgT1MgWCB2MTAuMTErIGFuZCBhcmUgZXhwZXJpZW5jaW5n
IHRyb3VibGUgd2hlbiBjb21waWxpbmcsIHJ1biB0aGUgZm9sbG93aW5nIGNv
bW1hbmQ6IGB4Y29kZS1zZWxlY3QgLS1pbnN0YWxsYC4gUmVhZCBtb3JlIGFi
b3V0IHRoZSBwcm9ibGVtIFtvbiBTdGFjayBPdmVyZmxvd10oaHR0cDovL3N0
YWNrb3ZlcmZsb3cuY29tL2EvMzI5MjkwMTIvMTQ4MDcyKS4KSWYgeW91IGhh
dmUgeGNvZGUgMTAuMCBvciBoaWdoZXIgaW5zdGFsbGVkLCBpbiBvcmRlciB0
byBidWlsZCBmcm9tIHNvdXJjZSB5b3UgbmVlZCBOUE0gNi40LjEgb3IgaGln
aGVyLgoKIyMgUXVpY2sgRXhhbXBsZQoKYGBgamF2YXNjcmlwdApjb25zdCB7
IGNyZWF0ZUNhbnZhcywgbG9hZEltYWdlIH0gPSByZXF1aXJlKCdjYW52YXMn
KQpjb25zdCBjYW52YXMgPSBjcmVhdGVDYW52YXMoMjAwLCAyMDApCmNvbnN0
IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpCgovLyBXcml0ZSAiQXdl
c29tZSEiCmN0eC5mb250ID0gJzMwcHggSW1wYWN0JwpjdHgucm90YXRlKDAu
MSkKY3R4LmZpbGxUZXh0KCdBd2Vzb21lIScsIDUwLCAxMDApCgovLyBEcmF3
IGxpbmUgdW5kZXIgdGV4dAp2YXIgdGV4dCA9IGN0eC5tZWFzdXJlVGV4dCgn
QXdlc29tZSEnKQpjdHguc3Ryb2tlU3R5bGUgPSAncmdiYSgwLDAsMCwwLjUp
JwpjdHguYmVnaW5QYXRoKCkKY3R4LmxpbmVUbyg1MCwgMTAyKQpjdHgubGlu
ZVRvKDUwICsgdGV4dC53aWR0aCwgMTAyKQpjdHguc3Ryb2tlKCkKCi8vIERy
YXcgY2F0IHdpdGggbGltZSBoZWxtZXQKbG9hZEltYWdlKCdleGFtcGxlcy9p
bWFnZXMvbGltZS1jYXQuanBnJykudGhlbigoaW1hZ2UpID0+IHsKICBjdHgu
ZHJhd0ltYWdlKGltYWdlLCA1MCwgMCwgNzAsIDcwKQoKICBjb25zb2xlLmxv
ZygnPGltZyBzcmM9IicgKyBjYW52YXMudG9EYXRhVVJMKCkgKyAnIiAvPicp
Cn0pCmBgYAoKIyMgVXBncmFkaW5nIGZyb20gMi54CgpTZWUgdGhlIFtjaGFu
Z2Vsb2ddKGh0dHBzOi8vZ2l0aHViLmNvbS9BdXRvbWF0dGljL25vZGUtY2Fu
dmFzL2Jsb2IvbWFzdGVyL0NIQU5HRUxPRy5tZCkgZm9yIGEgZ3VpZGUgdG8g
dXBncmFkaW5nIGZyb20gMS54IHRvIDIueC4KCkZvciB2ZXJzaW9uIDEueCBk
b2N1bWVudGF0aW9uLCBzZWUgW3RoZSB2MS54IGJyYW5jaF0oaHR0cHM6Ly9n
aXRodWIuY29tL0F1dG9tYXR0aWMvbm9kZS1jYW52YXMvdHJlZS92MS54KS4K
CiMjIERvY3VtZW50YXRpb24KClRoaXMgcHJvamVjdCBpcyBhbiBpbXBsZW1l
bnRhdGlvbiBvZiB0aGUgV2ViIENhbnZhcyBBUEkgYW5kIGltcGxlbWVudHMg
dGhhdCBBUEkgYXMgY2xvc2VseSBhcyBwb3NzaWJsZS4gRm9yIEFQSSBkb2N1
bWVudGF0aW9uLCBwbGVhc2UgdmlzaXQgW01vemlsbGEgV2ViIENhbnZhcyBB
UEldKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3Mv
V2ViL0FQSS9DYW52YXNfQVBJKS4gKFNlZSBbQ29tcGF0aWJpbGl0eSBTdGF0
dXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9BdXRvbWF0dGljL25vZGUtY2FudmFz
L3dpa2kvQ29tcGF0aWJpbGl0eS1TdGF0dXMpIGZvciB0aGUgY3VycmVudCBB
UEkgY29tcGxpYW5jZS4pIEFsbCB1dGlsaXR5IG1ldGhvZHMgYW5kIG5vbi1z
dGFuZGFyZCBBUElzIGFyZSBkb2N1bWVudGVkIGJlbG93LgoKIyMjIFV0aWxp
dHkgbWV0aG9kcwoKKiBbY3JlYXRlQ2FudmFzKCldKCNjcmVhdGVjYW52YXMp
CiogW2NyZWF0ZUltYWdlRGF0YSgpXSgjY3JlYXRlaW1hZ2VkYXRhKQoqIFts
b2FkSW1hZ2UoKV0oI2xvYWRpbWFnZSkKKiBbcmVnaXN0ZXJGb250KCldKCNy
ZWdpc3RlcmZvbnQpCgojIyMgTm9uLXN0YW5kYXJkIEFQSXMKCiogW0ltYWdl
I3NyY10oI2ltYWdlc3JjKQoqIFtJbWFnZSNkYXRhTW9kZV0oI2ltYWdlZGF0
YW1vZGUpCiogW0NhbnZhcyN0b0J1ZmZlcigpXSgjY2FudmFzdG9idWZmZXIp
CiogW0NhbnZhcyNjcmVhdGVQTkdTdHJlYW0oKV0oI2NhbnZhc2NyZWF0ZXBu
Z3N0cmVhbSkKKiBbQ2FudmFzI2NyZWF0ZUpQRUdTdHJlYW0oKV0oI2NhbnZh
c2NyZWF0ZWpwZWdzdHJlYW0pCiogW0NhbnZhcyNjcmVhdGVQREZTdHJlYW0o
KV0oI2NhbnZhc2NyZWF0ZXBkZnN0cmVhbSkKKiBbQ2FudmFzI3RvRGF0YVVS
TCgpXSgjY2FudmFzdG9kYXRhdXJsKQoqIFtDYW52YXNSZW5kZXJpbmdDb250
ZXh0MkQjcGF0dGVyblF1YWxpdHldKCNjYW52YXNyZW5kZXJpbmdjb250ZXh0
MmRwYXR0ZXJucXVhbGl0eSkKKiBbQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJE
I3F1YWxpdHldKCNjYW52YXNyZW5kZXJpbmdjb250ZXh0MmRxdWFsaXR5KQoq
IFtDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQjdGV4dERyYXdpbmdNb2RlXSgj
Y2FudmFzcmVuZGVyaW5nY29udGV4dDJkdGV4dGRyYXdpbmdtb2RlKQoqIFtD
YW52YXNSZW5kZXJpbmdDb250ZXh0MkQjZ2xvYmFsQ29tcG9zaXRlT3BlcmF0
b3IgPSAnc2F0dXJhdGUnXSgjY2FudmFzcmVuZGVyaW5nY29udGV4dDJkZ2xv
YmFsY29tcG9zaXRlb3BlcmF0b3ItLXNhdHVyYXRlKQoqIFtDYW52YXNSZW5k
ZXJpbmdDb250ZXh0MkQjYW50aWFsaWFzXSgjY2FudmFzcmVuZGVyaW5nY29u
dGV4dDJkYW50aWFsaWFzKQoKIyMjIGNyZWF0ZUNhbnZhcygpCgo+IGBgYHRz
Cj4gY3JlYXRlQ2FudmFzKHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVy
LCB0eXBlPzogJ1BERid8J1NWRycpID0+IENhbnZhcwo+IGBgYAoKQ3JlYXRl
cyBhIENhbnZhcyBpbnN0YW5jZS4gVGhpcyBtZXRob2Qgd29ya3MgaW4gYm90
aCBOb2RlLmpzIGFuZCBXZWIgYnJvd3NlcnMsIHdoZXJlIHRoZXJlIGlzIG5v
IENhbnZhcyBjb25zdHJ1Y3Rvci4gKFNlZSBgYnJvd3Nlci5qc2AgZm9yIHRo
ZSBpbXBsZW1lbnRhdGlvbiB0aGF0IHJ1bnMgaW4gYnJvd3NlcnMuKQoKYGBg
anMKY29uc3QgeyBjcmVhdGVDYW52YXMgfSA9IHJlcXVpcmUoJ2NhbnZhcycp
CmNvbnN0IG15Y2FudmFzID0gY3JlYXRlQ2FudmFzKDIwMCwgMjAwKQpjb25z
dCBteVBERmNhbnZhcyA9IGNyZWF0ZUNhbnZhcyg2MDAsIDgwMCwgJ3BkZicp
IC8vIHNlZSAiUERGIFN1cHBvcnQiIHNlY3Rpb24KYGBgCgojIyMgY3JlYXRl
SW1hZ2VEYXRhKCkKCj4gYGBgdHMKPiBjcmVhdGVJbWFnZURhdGEod2lkdGg6
IG51bWJlciwgaGVpZ2h0OiBudW1iZXIpID0+IEltYWdlRGF0YQo+IGNyZWF0
ZUltYWdlRGF0YShkYXRhOiBVaW50OENsYW1wZWRBcnJheSwgd2lkdGg6IG51
bWJlciwgaGVpZ2h0PzogbnVtYmVyKSA9PiBJbWFnZURhdGEKPiAvLyBmb3Ig
YWx0ZXJuYXRpdmUgcGl4ZWwgZm9ybWF0czoKPiBjcmVhdGVJbWFnZURhdGEo
ZGF0YTogVWludDE2QXJyYXksIHdpZHRoOiBudW1iZXIsIGhlaWdodD86IG51
bWJlcikgPT4gSW1hZ2VEYXRhCj4gYGBgCgpDcmVhdGVzIGFuIEltYWdlRGF0
YSBpbnN0YW5jZS4gVGhpcyBtZXRob2Qgd29ya3MgaW4gYm90aCBOb2RlLmpz
IGFuZCBXZWIgYnJvd3NlcnMuCgpgYGBqcwpjb25zdCB7IGNyZWF0ZUltYWdl
RGF0YSB9ID0gcmVxdWlyZSgnY2FudmFzJykKY29uc3Qgd2lkdGggPSAyMCwg
aGVpZ2h0ID0gMjAKY29uc3QgYXJyYXlTaXplID0gd2lkdGggKiBoZWlnaHQg
KiA0CmNvbnN0IG15ZGF0YSA9IGNyZWF0ZUltYWdlRGF0YShuZXcgVWludDhD
bGFtcGVkQXJyYXkoYXJyYXlTaXplKSwgd2lkdGgpCmBgYAoKIyMjIGxvYWRJ
bWFnZSgpCgo+IGBgYHRzCj4gbG9hZEltYWdlKCkgPT4gUHJvbWlzZTxJbWFn
ZT4KPiBgYGAKCkNvbnZlbmllbmNlIG1ldGhvZCBmb3IgbG9hZGluZyBpbWFn
ZXMuIFRoaXMgbWV0aG9kIHdvcmtzIGluIGJvdGggTm9kZS5qcyBhbmQgV2Vi
IGJyb3dzZXJzLgoKYGBganMKY29uc3QgeyBsb2FkSW1hZ2UgfSA9IHJlcXVp
cmUoJ2NhbnZhcycpCmNvbnN0IG15aW1nID0gbG9hZEltYWdlKCdodHRwOi8v
c2VydmVyLmNvbS9pbWFnZS5wbmcnKQoKbXlpbWcudGhlbigoKSA9PiB7CiAg
Ly8gZG8gc29tZXRoaW5nIHdpdGggaW1hZ2UKfSkuY2F0Y2goZXJyID0+IHsK
ICBjb25zb2xlLmxvZygnb2ggbm8hJywgZXJyKQp9KQoKLy8gb3Igd2l0aCBh
c3luYy9hd2FpdDoKY29uc3QgbXlpbWcgPSBhd2FpdCBsb2FkSW1hZ2UoJ2h0
dHA6Ly9zZXJ2ZXIuY29tL2ltYWdlLnBuZycpCi8vIGRvIHNvbWV0aGluZyB3
aXRoIGltYWdlCmBgYAoKIyMjIHJlZ2lzdGVyRm9udCgpCgo+IGBgYHRzCj4g
cmVnaXN0ZXJGb250KHBhdGg6IHN0cmluZywgeyBmYW1pbHk6IHN0cmluZywg
d2VpZ2h0Pzogc3RyaW5nLCBzdHlsZT86IHN0cmluZyB9KSA9PiB2b2lkCj4g
YGBgCgpUbyB1c2UgYSBmb250IGZpbGUgdGhhdCBpcyBub3QgaW5zdGFsbGVk
IGFzIGEgc3lzdGVtIGZvbnQsIHVzZSBgcmVnaXN0ZXJGb250KClgIHRvIHJl
Z2lzdGVyIHRoZSBmb250IHdpdGggQ2FudmFzLiAqVGhpcyBtdXN0IGJlIGRv
bmUgYmVmb3JlIHRoZSBDYW52YXMgaXMgY3JlYXRlZC4qCgpgYGBqcwpjb25z
dCB7IHJlZ2lzdGVyRm9udCwgY3JlYXRlQ2FudmFzIH0gPSByZXF1aXJlKCdj
YW52YXMnKQpyZWdpc3RlckZvbnQoJ2NvbWljc2Fucy50dGYnLCB7IGZhbWls
eTogJ0NvbWljIFNhbnMnIH0pCgpjb25zdCBjYW52YXMgPSBjcmVhdGVDYW52
YXMoNTAwLCA1MDApCmNvbnN0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcy
ZCcpCgpjdHguZm9udCA9ICcxMnB4ICJDb21pYyBTYW5zIicKY3R4LmZpbGxU
ZXh0KCdFdmVyeW9uZSBoYXRlcyB0aGlzIGZvbnQgOignLCAyNTAsIDEwKQpg
YGAKClRoZSBzZWNvbmQgYXJndW1lbnQgaXMgYW4gb2JqZWN0IHdpdGggcHJv
cGVydGllcyB0aGF0IHJlc2VtYmxlIHRoZSBDU1MgcHJvcGVydGllcyB0aGF0
IGFyZSBzcGVjaWZpZWQgaW4gYEBmb250LWZhY2VgIHJ1bGVzLiBZb3UgbXVz
dCBzcGVjaWZ5IGF0IGxlYXN0IGBmYW1pbHlgLiBgd2VpZ2h0YCwgYW5kIGBz
dHlsZWAgYXJlIG9wdGlvbmFsIGFuZCBkZWZhdWx0IHRvIGAnbm9ybWFsJ2Au
CgojIyMgSW1hZ2Ujc3JjCgo+IGBgYHRzCj4gaW1nLnNyYzogc3RyaW5nfEJ1
ZmZlcgo+IGBgYAoKQXMgaW4gYnJvd3NlcnMsIGBpbWcuc3JjYCBjYW4gYmUg
c2V0IHRvIGEgYGRhdGE6YCBVUkkgb3IgYSByZW1vdGUgVVJMLiBJbiBhZGRp
dGlvbiwgbm9kZS1jYW52YXMgYWxsb3dzIHNldHRpbmcgYHNyY2AgdG8gYSBs
b2NhbCBmaWxlIHBhdGggb3IgYEJ1ZmZlcmAgaW5zdGFuY2UuCgpgYGBqYXZh
c2NyaXB0CmNvbnN0IHsgSW1hZ2UgfSA9IHJlcXVpcmUoJ2NhbnZhcycpCgov
LyBGcm9tIGEgYnVmZmVyOgpmcy5yZWFkRmlsZSgnaW1hZ2VzL3NxdWlkLnBu
ZycsIChlcnIsIHNxdWlkKSA9PiB7CiAgaWYgKGVycikgdGhyb3cgZXJyCiAg
Y29uc3QgaW1nID0gbmV3IEltYWdlKCkKICBpbWcub25sb2FkID0gKCkgPT4g
Y3R4LmRyYXdJbWFnZShpbWcsIDAsIDApCiAgaW1nLm9uZXJyb3IgPSBlcnIg
PT4geyB0aHJvdyBlcnIgfQogIGltZy5zcmMgPSBzcXVpZAp9KQoKLy8gRnJv
bSBhIGxvY2FsIGZpbGUgcGF0aDoKY29uc3QgaW1nID0gbmV3IEltYWdlKCkK
aW1nLm9ubG9hZCA9ICgpID0+IGN0eC5kcmF3SW1hZ2UoaW1nLCAwLCAwKQpp
bWcub25lcnJvciA9IGVyciA9PiB7IHRocm93IGVyciB9CmltZy5zcmMgPSAn
aW1hZ2VzL3NxdWlkLnBuZycKCi8vIEZyb20gYSByZW1vdGUgVVJMOgppbWcu
c3JjID0gJ2h0dHA6Ly9waWNzdW0ucGhvdG9zLzIwMC8zMDAnCi8vIC4uLiBh
cyBhYm92ZQoKLy8gRnJvbSBhIGBkYXRhOmAgVVJJOgppbWcuc3JjID0gJ2Rh
dGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFB
QVVBQUFBRkNBWUFBQUNOYnlibEFBQUFIRWxFUVZRSTEyUDQvLzgvdzM4R0lB
WERJQktFMERIeGdsak5CQUFPOVRYTDBZNE9Id0FBQUFCSlJVNUVya0pnZ2c9
PScKLy8gLi4uIGFzIGFib3ZlCmBgYAoKKk5vdGU6IEluIHNvbWUgY2FzZXMs
IGBpbWcuc3JjPWAgaXMgY3VycmVudGx5IHN5bmNocm9ub3VzLiBIb3dldmVy
LCB5b3Ugc2hvdWxkIGFsd2F5cyB1c2UgYGltZy5vbmxvYWRgIGFuZCBgaW1n
Lm9uZXJyb3JgLCBhcyB3ZSBpbnRlbmQgdG8gbWFrZSBgaW1nLnNyYz1gIGFs
d2F5cyBhc3luY2hyb25vdXMgYXMgaXQgaXMgaW4gYnJvd3NlcnMuIFNlZSBo
dHRwczovL2dpdGh1Yi5jb20vQXV0b21hdHRpYy9ub2RlLWNhbnZhcy9pc3N1
ZXMvMTAwNy4qCgojIyMgSW1hZ2UjZGF0YU1vZGUKCj4gYGBgdHMKPiBpbWcu
ZGF0YU1vZGU6IG51bWJlcgo+IGBgYAoKQXBwbGllcyB0byBKUEVHIGltYWdl
cyBkcmF3biB0byBQREYgY2FudmFzZXMgb25seS4KClNldHRpbmcgYGltZy5k
YXRhTW9kZSA9IEltYWdlLk1PREVfTUlNRWAgb3IgYEltYWdlLk1PREVfTUlN
RXxJbWFnZS5NT0RFX0lNQUdFYCBlbmFibGVzIE1JTUUgZGF0YSB0cmFja2lu
ZyBvZiBpbWFnZXMuIFdoZW4gTUlNRSBkYXRhIGlzIHRyYWNrZWQsIFBERiBj
YW52YXNlcyBjYW4gZW1iZWQgSlBFR3MgZGlyZWN0bHkgaW50byB0aGUgb3V0
cHV0LCByYXRoZXIgdGhhbiByZS1lbmNvZGluZyBpbnRvIFBORy4gVGhpcyBj
YW4gZHJhc3RpY2FsbHkgcmVkdWNlIGZpbGVzaXplIGFuZCBzcGVlZCB1cCBy
ZW5kZXJpbmcuCgpgYGBqYXZhc2NyaXB0CmNvbnN0IHsgSW1hZ2UsIGNyZWF0
ZUNhbnZhcyB9ID0gcmVxdWlyZSgnY2FudmFzJykKY29uc3QgY2FudmFzID0g
Y3JlYXRlQ2FudmFzKHcsIGgsICdwZGYnKQpjb25zdCBpbWcgPSBuZXcgSW1h
Z2UoKQppbWcuZGF0YU1vZGUgPSBJbWFnZS5NT0RFX0lNQUdFIC8vIE9ubHkg
aW1hZ2UgZGF0YSB0cmFja2VkCmltZy5kYXRhTW9kZSA9IEltYWdlLk1PREVf
TUlNRSAvLyBPbmx5IG1pbWUgZGF0YSB0cmFja2VkCmltZy5kYXRhTW9kZSA9
IEltYWdlLk1PREVfTUlNRSB8IEltYWdlLk1PREVfSU1BR0UgLy8gQm90aCBh
cmUgdHJhY2tlZApgYGAKCklmIHdvcmtpbmcgd2l0aCBhIG5vbi1QREYgY2Fu
dmFzLCBpbWFnZSBkYXRhICptdXN0KiBiZSB0cmFja2VkOyBvdGhlcndpc2Ug
dGhlIG91dHB1dCB3aWxsIGJlIGp1bmsuCgpFbmFibGluZyBtaW1lIGRhdGEg
dHJhY2tpbmcgaGFzIG5vIGJlbmVmaXRzIChvbmx5IGEgc2xvdyBkb3duKSB1
bmxlc3MgeW91IGFyZSBnZW5lcmF0aW5nIGEgUERGLgoKIyMjIENhbnZhcyN0
b0J1ZmZlcigpCgo+IGBgYHRzCj4gY2FudmFzLnRvQnVmZmVyKChlcnI6IEVy
cm9yfG51bGwsIHJlc3VsdDogQnVmZmVyKSA9PiB2b2lkLCBtaW1lVHlwZT86
IHN0cmluZywgY29uZmlnPzogYW55KSA9PiB2b2lkCj4gY2FudmFzLnRvQnVm
ZmVyKG1pbWVUeXBlPzogc3RyaW5nLCBjb25maWc/OiBhbnkpID0+IEJ1ZmZl
cgo+IGBgYAoKQ3JlYXRlcyBhIFtgQnVmZmVyYF0oaHR0cHM6Ly9ub2RlanMu
b3JnL2FwaS9idWZmZXIuaHRtbCkgb2JqZWN0IHJlcHJlc2VudGluZyB0aGUg
aW1hZ2UgY29udGFpbmVkIGluIHRoZSBjYW52YXMuCgoqICoqY2FsbGJhY2sq
KiBJZiBwcm92aWRlZCwgdGhlIGJ1ZmZlciB3aWxsIGJlIHByb3ZpZGVkIGlu
IHRoZSBjYWxsYmFjayBpbnN0ZWFkIG9mIGJlaW5nIHJldHVybmVkIGJ5IHRo
ZSBmdW5jdGlvbi4gSW52b2tlZCB3aXRoIGFuIGVycm9yIGFzIHRoZSBmaXJz
dCBhcmd1bWVudCBpZiBlbmNvZGluZyBmYWlsZWQsIG9yIHRoZSByZXN1bHRp
bmcgYnVmZmVyIGFzIHRoZSBzZWNvbmQgYXJndW1lbnQgaWYgaXQgc3VjY2Vl
ZGVkLiBOb3Qgc3VwcG9ydGVkIGZvciBtaW1lVHlwZSBgcmF3YCBvciBmb3Ig
UERGIG9yIFNWRyBjYW52YXNlcy4KKiAqKm1pbWVUeXBlKiogQSBzdHJpbmcg
aW5kaWNhdGluZyB0aGUgaW1hZ2UgZm9ybWF0LiBWYWxpZCBvcHRpb25zIGFy
ZSBgaW1hZ2UvcG5nYCwgYGltYWdlL2pwZWdgIChpZiBub2RlLWNhbnZhcyB3
YXMgYnVpbHQgd2l0aCBKUEVHIHN1cHBvcnQpLCBgcmF3YCAodW5lbmNvZGVk
IGRhdGEgaW4gQkdSQSBvcmRlciBvbiBsaXR0bGUtZW5kaWFuIChtb3N0KSBz
eXN0ZW1zLCBBUkdCIG9uIGJpZy1lbmRpYW4gc3lzdGVtczsgdG9wLXRvLWJv
dHRvbSksIGBhcHBsaWNhdGlvbi9wZGZgIChmb3IgUERGIGNhbnZhc2VzKSBh
bmQgYGltYWdlL3N2Zyt4bWxgIChmb3IgU1ZHIGNhbnZhc2VzKS4gRGVmYXVs
dHMgdG8gYGltYWdlL3BuZ2AgZm9yIGltYWdlIGNhbnZhc2VzLCBvciB0aGUg
Y29ycmVzcG9uZGluZyB0eXBlIGZvciBQREYgb3IgU1ZHIGNhbnZhcy4KKiAq
KmNvbmZpZyoqCiAgKiBGb3IgYGltYWdlL2pwZWdgLCBhbiBvYmplY3Qgc3Bl
Y2lmeWluZyB0aGUgcXVhbGl0eSAoMCB0byAxKSwgaWYgcHJvZ3Jlc3NpdmUg
Y29tcHJlc3Npb24gc2hvdWxkIGJlIHVzZWQgYW5kL29yIGlmIGNocm9tYSBz
dWJzYW1wbGluZyBzaG91bGQgYmUgdXNlZDogYHtxdWFsaXR5OiAwLjc1LCBw
cm9ncmVzc2l2ZTogZmFsc2UsIGNocm9tYVN1YnNhbXBsaW5nOiB0cnVlfWAu
IEFsbCBwcm9wZXJ0aWVzIGFyZSBvcHRpb25hbC4KCiAgKiBGb3IgYGltYWdl
L3BuZ2AsIGFuIG9iamVjdCBzcGVjaWZ5aW5nIHRoZSBaTElCIGNvbXByZXNz
aW9uIGxldmVsIChiZXR3ZWVuIDAgYW5kIDkpLCB0aGUgY29tcHJlc3Npb24g
ZmlsdGVyKHMpLCB0aGUgcGFsZXR0ZSAoaW5kZXhlZCBQTkdzIG9ubHkpLCB0
aGUgdGhlIGJhY2tncm91bmQgcGFsZXR0ZSBpbmRleCAoaW5kZXhlZCBQTkdz
IG9ubHkpIGFuZC9vciB0aGUgcmVzb2x1dGlvbiAocHBpKTogYHtjb21wcmVz
c2lvbkxldmVsOiA2LCBmaWx0ZXJzOiBjYW52YXMuUE5HX0FMTF9GSUxURVJT
LCBwYWxldHRlOiB1bmRlZmluZWQsIGJhY2tncm91bmRJbmRleDogMCwgcmVz
b2x1dGlvbjogdW5kZWZpbmVkfWAuIEFsbCBwcm9wZXJ0aWVzIGFyZSBvcHRp
b25hbC4KCiAgICBOb3RlIHRoYXQgdGhlIFBORyBmb3JtYXQgZW5jb2RlcyB0
aGUgcmVzb2x1dGlvbiBpbiBwaXhlbHMgcGVyIG1ldGVyLCBzbyBpZiB5b3Ug
c3BlY2lmeSBgOTZgLCB0aGUgZmlsZSB3aWxsIGVuY29kZSAzNzgwIHBwbSAo
fjk2LjAxIHBwaSkuIFRoZSByZXNvbHV0aW9uIGlzIHVuZGVmaW5lZCBieSBk
ZWZhdWx0IHRvIG1hdGNoIGNvbW1vbiBicm93c2VyIGJlaGF2aW9yLgoKICAq
IEZvciBgYXBwbGljYXRpb24vcGRmYCwgYW4gb2JqZWN0IHNwZWNpZnlpbmcg
b3B0aW9uYWwgZG9jdW1lbnQgbWV0YWRhdGE6IGB7dGl0bGU6IHN0cmluZywg
YXV0aG9yOiBzdHJpbmcsIHN1YmplY3Q6IHN0cmluZywga2V5d29yZHM6IHN0
cmluZywgY3JlYXRvcjogc3RyaW5nLCBjcmVhdGlvbkRhdGU6IERhdGUsIG1v
ZERhdGU6IERhdGV9YC4gQWxsIHByb3BlcnRpZXMgYXJlIG9wdGlvbmFsIGFu
ZCBkZWZhdWx0IHRvIGB1bmRlZmluZWRgLCBleGNlcHQgZm9yIGBjcmVhdGlv
bkRhdGVgLCB3aGljaCBkZWZhdWx0cyB0byB0aGUgY3VycmVudCBkYXRlLiAq
QWRkaW5nIG1ldGFkYXRhIHJlcXVpcmVzIENhaXJvIDEuMTYuMCBvciBsYXRl
ci4qCgogICAgRm9yIGEgZGVzY3JpcHRpb24gb2YgdGhlc2UgcHJvcGVydGll
cywgc2VlIHBhZ2UgNTUwIG9mIFtQREYgMzIwMDAtMToyMDA4XShodHRwczov
L3d3dy5hZG9iZS5jb20vY29udGVudC9kYW0vYWNvbS9lbi9kZXZuZXQvYWNy
b2JhdC9wZGZzL1BERjMyMDAwXzIwMDgucGRmKS4KCiAgICBOb3RlIHRoYXQg
dGhlcmUgaXMgbm8gc3RhbmRhcmQgc2VwYXJhdG9yIGZvciBga2V5d29yZHNg
LiBBIHNwYWNlIGlzIHJlY29tbWVuZGVkIGJlY2F1c2UgaXQgaXMgaW4gY29t
bW9uIHVzZSBieSBvdGhlciBhcHBsaWNhdGlvbnMsIGFuZCBDYWlybyB3aWxs
IGVuY2xvc2UgdGhlIGxpc3Qgb2Yga2V5d29yZHMgaW4gcXVvdGVzIGlmIGEg
Y29tbWEgb3Igc2VtaWNvbG9uIGlzIHVzZWQuCgoqKlJldHVybiB2YWx1ZSoq
CgpJZiBubyBjYWxsYmFjayBpcyBwcm92aWRlZCwgYSBbYEJ1ZmZlcmBdKGh0
dHBzOi8vbm9kZWpzLm9yZy9hcGkvYnVmZmVyLmh0bWwpLiBJZiBhIGNhbGxi
YWNrIGlzIHByb3ZpZGVkLCBub25lLgoKIyMjIyBFeGFtcGxlcwoKYGBganMK
Ly8gRGVmYXVsdDogYnVmIGNvbnRhaW5zIGEgUE5HLWVuY29kZWQgaW1hZ2UK
Y29uc3QgYnVmID0gY2FudmFzLnRvQnVmZmVyKCkKCi8vIFBORy1lbmNvZGVk
LCB6bGliIGNvbXByZXNzaW9uIGxldmVsIDMgZm9yIGZhc3RlciBjb21wcmVz
c2lvbiBidXQgYmlnZ2VyIGZpbGVzLCBubyBmaWx0ZXJpbmcKY29uc3QgYnVm
MiA9IGNhbnZhcy50b0J1ZmZlcignaW1hZ2UvcG5nJywgeyBjb21wcmVzc2lv
bkxldmVsOiAzLCBmaWx0ZXJzOiBjYW52YXMuUE5HX0ZJTFRFUl9OT05FIH0p
CgovLyBKUEVHLWVuY29kZWQsIDUwJSBxdWFsaXR5CmNvbnN0IGJ1ZjMgPSBj
YW52YXMudG9CdWZmZXIoJ2ltYWdlL2pwZWcnLCB7IHF1YWxpdHk6IDAuNSB9
KQoKLy8gQXN5bmNocm9ub3VzIFBORwpjYW52YXMudG9CdWZmZXIoKGVyciwg
YnVmKSA9PiB7CiAgaWYgKGVycikgdGhyb3cgZXJyIC8vIGVuY29kaW5nIGZh
aWxlZAogIC8vIGJ1ZiBpcyBQTkctZW5jb2RlZCBpbWFnZQp9KQoKY2FudmFz
LnRvQnVmZmVyKChlcnIsIGJ1ZikgPT4gewogIGlmIChlcnIpIHRocm93IGVy
ciAvLyBlbmNvZGluZyBmYWlsZWQKICAvLyBidWYgaXMgSlBFRy1lbmNvZGVk
IGltYWdlIGF0IDk1JSBxdWFsaXR5Cn0sICdpbWFnZS9qcGVnJywgeyBxdWFs
aXR5OiAwLjk1IH0pCgovLyBCR1JBIHBpeGVsIHZhbHVlcywgbmF0aXZlLWVu
ZGlhbgpjb25zdCBidWY0ID0gY2FudmFzLnRvQnVmZmVyKCdyYXcnKQpjb25z
dCB7IHN0cmlkZSwgd2lkdGggfSA9IGNhbnZhcwovLyBJbiBtZW1vcnksIHRo
aXMgaXMgYGNhbnZhcy5oZWlnaHQgKiBjYW52YXMuc3RyaWRlYCBieXRlcyBs
b25nLgovLyBUaGUgdG9wIHJvdyBvZiBwaXhlbHMsIGluIEJHUkEgb3JkZXIg
b24gbGl0dGxlLWVuZGlhbiBoYXJkd2FyZSwKLy8gbGVmdC10by1yaWdodCwg
aXM6CmNvbnN0IHRvcFBpeGVsc0JHUkFMZWZ0VG9SaWdodCA9IGJ1ZjQuc2xp
Y2UoMCwgd2lkdGggKiA0KQovLyBBbmQgdGhlIHRoaXJkIHJvdyBpczoKY29u
c3Qgcm93MyA9IGJ1ZjQuc2xpY2UoMiAqIHN0cmlkZSwgMiAqIHN0cmlkZSAr
IHdpZHRoICogNCkKCi8vIFNWRyBhbmQgUERGIGNhbnZhc2VzCmNvbnN0IG15
Q2FudmFzID0gY3JlYXRlQ2FudmFzKHcsIGgsICdwZGYnKQpteUNhbnZhcy50
b0J1ZmZlcigpIC8vIHJldHVybnMgYSBidWZmZXIgY29udGFpbmluZyBhIFBE
Ri1lbmNvZGVkIGNhbnZhcwovLyBXaXRoIG9wdGlvbmFsIG1ldGFkYXRhOgpt
eUNhbnZhcy50b0J1ZmZlcignYXBwbGljYXRpb24vcGRmJywgewogIHRpdGxl
OiAnbXkgcGljdHVyZScsCiAga2V5d29yZHM6ICdub2RlLmpzIGRlbW8gY2Fp
cm8nLAogIGNyZWF0aW9uRGF0ZTogbmV3IERhdGUoKQp9KQpgYGAKCiMjIyBD
YW52YXMjY3JlYXRlUE5HU3RyZWFtKCkKCj4gYGBgdHMKPiBjYW52YXMuY3Jl
YXRlUE5HU3RyZWFtKGNvbmZpZz86IGFueSkgPT4gUmVhZGFibGVTdHJlYW0K
PiBgYGAKCkNyZWF0ZXMgYSBbYFJlYWRhYmxlU3RyZWFtYF0oaHR0cHM6Ly9u
b2RlanMub3JnL2FwaS9zdHJlYW0uaHRtbCNzdHJlYW1fY2xhc3Nfc3RyZWFt
X3JlYWRhYmxlKSB0aGF0IGVtaXRzIFBORy1lbmNvZGVkIGRhdGEuCgoqIGBj
b25maWdgIEFuIG9iamVjdCBzcGVjaWZ5aW5nIHRoZSBaTElCIGNvbXByZXNz
aW9uIGxldmVsIChiZXR3ZWVuIDAgYW5kIDkpLCB0aGUgY29tcHJlc3Npb24g
ZmlsdGVyKHMpLCB0aGUgcGFsZXR0ZSAoaW5kZXhlZCBQTkdzIG9ubHkpIGFu
ZC9vciB0aGUgYmFja2dyb3VuZCBwYWxldHRlIGluZGV4IChpbmRleGVkIFBO
R3Mgb25seSk6IGB7Y29tcHJlc3Npb25MZXZlbDogNiwgZmlsdGVyczogY2Fu
dmFzLlBOR19BTExfRklMVEVSUywgcGFsZXR0ZTogdW5kZWZpbmVkLCBiYWNr
Z3JvdW5kSW5kZXg6IDAsIHJlc29sdXRpb246IHVuZGVmaW5lZH1gLiBBbGwg
cHJvcGVydGllcyBhcmUgb3B0aW9uYWwuCgojIyMjIEV4YW1wbGVzCgpgYGBq
YXZhc2NyaXB0CmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKQpjb25zdCBvdXQg
PSBmcy5jcmVhdGVXcml0ZVN0cmVhbShfX2Rpcm5hbWUgKyAnL3Rlc3QucG5n
JykKY29uc3Qgc3RyZWFtID0gY2FudmFzLmNyZWF0ZVBOR1N0cmVhbSgpCnN0
cmVhbS5waXBlKG91dCkKb3V0Lm9uKCdmaW5pc2gnLCAoKSA9PiAgY29uc29s
ZS5sb2coJ1RoZSBQTkcgZmlsZSB3YXMgY3JlYXRlZC4nKSkKYGBgCgpUbyBl
bmNvZGUgaW5kZXhlZCBQTkdzIGZyb20gY2FudmFzZXMgd2l0aCBgcGl4ZWxG
b3JtYXQ6ICdBOCdgIG9yIGAnQTEnYCwgcHJvdmlkZSBhbiBvcHRpb25zIG9i
amVjdDoKCmBgYGpzCmNvbnN0IHBhbGV0dGUgPSBuZXcgVWludDhDbGFtcGVk
QXJyYXkoWwogIC8vciAgICBnICAgIGIgICAgYQogICAgMCwgIDUwLCAgNTAs
IDI1NSwgLy8gaW5kZXggMQogICAxMCwgIDkwLCAgOTAsIDI1NSwgLy8gaW5k
ZXggMgogIDEyNywgMTI3LCAyNTUsIDI1NQogIC8vIC4uLgpdKQpjYW52YXMu
Y3JlYXRlUE5HU3RyZWFtKHsKICBwYWxldHRlOiBwYWxldHRlLAogIGJhY2tn
cm91bmRJbmRleDogMCAvLyBvcHRpb25hbCwgZGVmYXVsdHMgdG8gMAp9KQpg
YGAKCiMjIyBDYW52YXMjY3JlYXRlSlBFR1N0cmVhbSgpCgo+IGBgYHRzCj4g
Y2FudmFzLmNyZWF0ZUpQRUdTdHJlYW0oY29uZmlnPzogYW55KSA9PiBSZWFk
YWJsZVN0cmVhbQo+IGBgYAoKQ3JlYXRlcyBhIFtgUmVhZGFibGVTdHJlYW1g
XShodHRwczovL25vZGVqcy5vcmcvYXBpL3N0cmVhbS5odG1sI3N0cmVhbV9j
bGFzc19zdHJlYW1fcmVhZGFibGUpIHRoYXQgZW1pdHMgSlBFRy1lbmNvZGVk
IGRhdGEuCgoqTm90ZTogQXQgdGhlIG1vbWVudCwgYGNyZWF0ZUpQRUdTdHJl
YW0oKWAgaXMgc3luY2hyb25vdXMgdW5kZXIgdGhlIGhvb2QuIFRoYXQgaXMs
IGl0IHJ1bnMgaW4gdGhlIG1haW4gdGhyZWFkLCBub3QgaW4gdGhlIGxpYnV2
IHRocmVhZHBvb2wuKgoKKiBgY29uZmlnYCBhbiBvYmplY3Qgc3BlY2lmeWlu
ZyB0aGUgcXVhbGl0eSAoMCB0byAxKSwgaWYgcHJvZ3Jlc3NpdmUgY29tcHJl
c3Npb24gc2hvdWxkIGJlIHVzZWQgYW5kL29yIGlmIGNocm9tYSBzdWJzYW1w
bGluZyBzaG91bGQgYmUgdXNlZDogYHtxdWFsaXR5OiAwLjc1LCBwcm9ncmVz
c2l2ZTogZmFsc2UsIGNocm9tYVN1YnNhbXBsaW5nOiB0cnVlfWAuIEFsbCBw
cm9wZXJ0aWVzIGFyZSBvcHRpb25hbC4KCiMjIyMgRXhhbXBsZXMKCmBgYGph
dmFzY3JpcHQKY29uc3QgZnMgPSByZXF1aXJlKCdmcycpCmNvbnN0IG91dCA9
IGZzLmNyZWF0ZVdyaXRlU3RyZWFtKF9fZGlybmFtZSArICcvdGVzdC5qcGVn
JykKY29uc3Qgc3RyZWFtID0gY2FudmFzLmNyZWF0ZUpQRUdTdHJlYW0oKQpz
dHJlYW0ucGlwZShvdXQpCm91dC5vbignZmluaXNoJywgKCkgPT4gIGNvbnNv
bGUubG9nKCdUaGUgSlBFRyBmaWxlIHdhcyBjcmVhdGVkLicpKQoKLy8gRGlz
YWJsZSAyeDIgY2hyb21hU3Vic2FtcGxpbmcgZm9yIGRlZXBlciBjb2xvcnMg
YW5kIHVzZSBhIGhpZ2hlciBxdWFsaXR5CmNvbnN0IHN0cmVhbSA9IGNhbnZh
cy5jcmVhdGVKUEVHU3RyZWFtKHsKICBxdWFsaXR5OiAwLjk1LAogIGNocm9t
YVN1YnNhbXBsaW5nOiBmYWxzZQp9KQpgYGAKCiMjIyBDYW52YXMjY3JlYXRl
UERGU3RyZWFtKCkKCj4gYGBgdHMKPiBjYW52YXMuY3JlYXRlUERGU3RyZWFt
KGNvbmZpZz86IGFueSkgPT4gUmVhZGFibGVTdHJlYW0KPiBgYGAKCiogYGNv
bmZpZ2AgYW4gb2JqZWN0IHNwZWNpZnlpbmcgb3B0aW9uYWwgZG9jdW1lbnQg
bWV0YWRhdGE6IGB7dGl0bGU6IHN0cmluZywgYXV0aG9yOiBzdHJpbmcsIHN1
YmplY3Q6IHN0cmluZywga2V5d29yZHM6IHN0cmluZywgY3JlYXRvcjogc3Ry
aW5nLCBjcmVhdGlvbkRhdGU6IERhdGUsIG1vZERhdGU6IERhdGV9YC4gU2Vl
IGB0b0J1ZmZlcigpYCBmb3IgbW9yZSBpbmZvcm1hdGlvbi4gKkFkZGluZyBt
ZXRhZGF0YSByZXF1aXJlcyBDYWlybyAxLjE2LjAgb3IgbGF0ZXIuKgoKQXBw
bGllcyB0byBQREYgY2FudmFzZXMgb25seS4gQ3JlYXRlcyBhIFtgUmVhZGFi
bGVTdHJlYW1gXShodHRwczovL25vZGVqcy5vcmcvYXBpL3N0cmVhbS5odG1s
I3N0cmVhbV9jbGFzc19zdHJlYW1fcmVhZGFibGUpIHRoYXQgZW1pdHMgdGhl
IGVuY29kZWQgUERGLiBgY2FudmFzLnRvQnVmZmVyKClgIGFsc28gcHJvZHVj
ZXMgYW4gZW5jb2RlZCBQREYsIGJ1dCBgY3JlYXRlUERGU3RyZWFtKClgIGNh
biBiZSB1c2VkIHRvIHJlZHVjZSBtZW1vcnkgdXNhZ2UuCgojIyMgQ2FudmFz
I3RvRGF0YVVSTCgpCgpUaGlzIGlzIGEgc3RhbmRhcmQgQVBJLCBidXQgc2V2
ZXJhbCBub24tc3RhbmRhcmQgY2FsbHMgYXJlIHN1cHBvcnRlZC4gVGhlIGZ1
bGwgbGlzdCBvZiBzdXBwb3J0ZWQgY2FsbHMgaXM6CgpgYGBqcwpkYXRhVXJs
ID0gY2FudmFzLnRvRGF0YVVSTCgpIC8vIGRlZmF1bHRzIHRvIFBORwpkYXRh
VXJsID0gY2FudmFzLnRvRGF0YVVSTCgnaW1hZ2UvcG5nJykKZGF0YVVybCA9
IGNhbnZhcy50b0RhdGFVUkwoJ2ltYWdlL2pwZWcnKQpkYXRhVXJsID0gY2Fu
dmFzLnRvRGF0YVVSTCgnaW1hZ2UvanBlZycsIHF1YWxpdHkpIC8vIHF1YWxp
dHkgZnJvbSAwIHRvIDEKY2FudmFzLnRvRGF0YVVSTCgoZXJyLCBwbmcpID0+
IHsgfSkgLy8gZGVmYXVsdHMgdG8gUE5HCmNhbnZhcy50b0RhdGFVUkwoJ2lt
YWdlL3BuZycsIChlcnIsIHBuZykgPT4geyB9KQpjYW52YXMudG9EYXRhVVJM
KCdpbWFnZS9qcGVnJywgKGVyciwganBlZykgPT4geyB9KSAvLyBzeW5jIEpQ
RUcgaXMgbm90IHN1cHBvcnRlZApjYW52YXMudG9EYXRhVVJMKCdpbWFnZS9q
cGVnJywgey4uLm9wdHN9LCAoZXJyLCBqcGVnKSA9PiB7IH0pIC8vIHNlZSBD
YW52YXMjY3JlYXRlSlBFR1N0cmVhbSBmb3IgdmFsaWQgb3B0aW9ucwpjYW52
YXMudG9EYXRhVVJMKCdpbWFnZS9qcGVnJywgcXVhbGl0eSwgKGVyciwganBl
ZykgPT4geyB9KSAvLyBzcGVjLWZvbGxvd2luZzsgcXVhbGl0eSBmcm9tIDAg
dG8gMQpgYGAKCiMjIyBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQjcGF0dGVy
blF1YWxpdHkKCj4gYGBgdHMKPiBjb250ZXh0LnBhdHRlcm5RdWFsaXR5OiAn
ZmFzdCd8J2dvb2QnfCdiZXN0J3wnbmVhcmVzdCd8J2JpbGluZWFyJwo+IGBg
YAoKRGVmYXVsdHMgdG8gYCdnb29kJ2AuIEFmZmVjdHMgcGF0dGVybiAoZ3Jh
ZGllbnQsIGltYWdlLCBldGMuKSByZW5kZXJpbmcgcXVhbGl0eS4KCiMjIyBD
YW52YXNSZW5kZXJpbmdDb250ZXh0MkQjcXVhbGl0eQoKPiBgYGB0cwo+IGNv
bnRleHQucXVhbGl0eTogJ2Zhc3QnfCdnb29kJ3wnYmVzdCd8J25lYXJlc3Qn
fCdiaWxpbmVhcicKPiBgYGAKCkRlZmF1bHRzIHRvIGAnZ29vZCdgLiBMaWtl
IGBwYXR0ZXJuUXVhbGl0eWAsIGJ1dCBhcHBsaWVzIHRvIHRyYW5zZm9ybWF0
aW9ucyBhZmZlY3RpbmcgbW9yZSB0aGFuIGp1c3QgcGF0dGVybnMuCgojIyMg
Q2FudmFzUmVuZGVyaW5nQ29udGV4dDJEI3RleHREcmF3aW5nTW9kZQoKPiBg
YGB0cwo+IGNvbnRleHQudGV4dERyYXdpbmdNb2RlOiAncGF0aCd8J2dseXBo
Jwo+IGBgYAoKRGVmYXVsdHMgdG8gYCdwYXRoJ2AuIFRoZSBlZmZlY3QgZGVw
ZW5kcyBvbiB0aGUgY2FudmFzIHR5cGU6CgoqICoqU3RhbmRhcmQgKGltYWdl
KSoqIGBnbHlwaGAgYW5kIGBwYXRoYCBib3RoIHJlc3VsdCBpbiByYXN0ZXJp
emVkIHRleHQuIEdseXBoIG1vZGUgaXMgZmFzdGVyIHRoYW4gYHBhdGhgLCBi
dXQgbWF5IHJlc3VsdCBpbiBsb3dlci1xdWFsaXR5IHRleHQsIGVzcGVjaWFs
bHkgd2hlbiByb3RhdGVkIG9yIHRyYW5zbGF0ZWQuCgoqICoqUERGKiogYGds
eXBoYCB3aWxsIGVtYmVkIHRleHQgaW5zdGVhZCBvZiBwYXRocyBpbnRvIHRo
ZSBQREYuIFRoaXMgaXMgZmFzdGVyIHRvIGVuY29kZSwgZmFzdGVyIHRvIG9w
ZW4gd2l0aCBQREYgdmlld2VycywgeWllbGRzIGEgc21hbGxlciBmaWxlIHNp
emUgYW5kIG1ha2VzIHRoZSB0ZXh0IHNlbGVjdGFibGUuIFRoZSBzdWJzZXQg
b2YgdGhlIGZvbnQgbmVlZGVkIHRvIHJlbmRlciB0aGUgZ2x5cGhzIHdpbGwg
YmUgZW1iZWRkZWQgaW4gdGhlIFBERi4gVGhpcyBpcyB1c3VhbGx5IHRoZSBt
b2RlIHlvdSB3YW50IHRvIHVzZSB3aXRoIFBERiBjYW52YXNlcy4KCiogKipT
VkcqKiBgZ2x5cGhgIGRvZXMgKm5vdCogY2F1c2UgYDx0ZXh0PmAgZWxlbWVu
dHMgdG8gYmUgcHJvZHVjZWQgYXMgb25lIG1pZ2h0IGV4cGVjdCAoW2NhaXJv
IGJ1Z10oaHR0cHM6Ly9naXRsYWIuZnJlZWRlc2t0b3Aub3JnL2NhaXJvL2Nh
aXJvL2lzc3Vlcy8yNTMpKS4gUmF0aGVyLCBgZ2x5cGhgIHdpbGwgY3JlYXRl
IGEgYDxkZWZzPmAgc2VjdGlvbiB3aXRoIGEgYDxzeW1ib2w+YCBmb3IgZWFj
aCBnbHlwaCwgdGhlbiB0aG9zZSBnbHlwaHMgYmUgcmV1c2VkIHZpYSBgPHVz
ZT5gIGVsZW1lbnRzLiBgcGF0aGAgbW9kZSBjcmVhdGVzIGEgYDxwYXRoPmAg
ZWxlbWVudCBmb3IgZWFjaCB0ZXh0IHN0cmluZy4gYGdseXBoYCBtb2RlIGlz
IGZhc3RlciBhbmQgeWllbGRzIGEgc21hbGxlciBmaWxlIHNpemUuCgpJbiBg
Z2x5cGhgIG1vZGUsIGBjdHguc3Ryb2tlVGV4dCgpYCBhbmQgYGN0eC5maWxs
VGV4dCgpYCBiZWhhdmUgdGhlIHNhbWUgKGFzaWRlIGZyb20gdXNpbmcgdGhl
IHN0cm9rZSBhbmQgZmlsbCBzdHlsZSwgcmVzcGVjdGl2ZWx5KS4KClRoaXMg
cHJvcGVydHkgaXMgdHJhY2tlZCBhcyBwYXJ0IG9mIHRoZSBjYW52YXMgc3Rh
dGUgaW4gc2F2ZS9yZXN0b3JlLgoKIyMjIENhbnZhc1JlbmRlcmluZ0NvbnRl
eHQyRCNnbG9iYWxDb21wb3NpdGVPcGVyYXRpb24gPSAnc2F0dXJhdGUnCgpJ
biBhZGRpdGlvbiB0byBhbGwgb2YgdGhlIHN0YW5kYXJkIGdsb2JhbCBjb21w
b3NpdGUgb3BlcmF0aW9ucyBkZWZpbmVkIGJ5IHRoZSBDYW52YXMgc3BlY2lm
aWNhdGlvbiwgdGhlIFsnc2F0dXJhdGUnXShodHRwczovL3d3dy5jYWlyb2dy
YXBoaWNzLm9yZy9vcGVyYXRvcnMvI3NhdHVyYXRlKSBvcGVyYXRpb24gaXMg
YWxzbyBhdmFpbGFibGUuCgojIyMgQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJE
I2FudGlhbGlhcwoKPiBgYGB0cwo+IGNvbnRleHQuYW50aWFsaWFzOiAnZGVm
YXVsdCd8J25vbmUnfCdncmF5J3wnc3VicGl4ZWwnCj4gYGBgCgpTZXRzIHRo
ZSBhbnRpLWFsaWFzaW5nIG1vZGUuCgojIyBQREYgT3V0cHV0IFN1cHBvcnQK
Cm5vZGUtY2FudmFzIGNhbiBjcmVhdGUgUERGIGRvY3VtZW50cyBpbnN0ZWFk
IG9mIGltYWdlcy4gVGhlIGNhbnZhcyB0eXBlIG11c3QgYmUgc2V0IHdoZW4g
Y3JlYXRpbmcgdGhlIGNhbnZhcyBhcyBmb2xsb3dzOgoKYGBganMKY29uc3Qg
Y2FudmFzID0gY3JlYXRlQ2FudmFzKDIwMCwgNTAwLCAncGRmJykKYGBgCgpB
biBhZGRpdGlvbmFsIG1ldGhvZCBgLmFkZFBhZ2UoKWAgaXMgdGhlbiBhdmFp
bGFibGUgdG8gY3JlYXRlIG11bHRpcGxlIHBhZ2UgUERGczoKCmBgYGpzCi8v
IE9uIGZpcnN0IHBhZ2UKY3R4LmZvbnQgPSAnMjJweCBIZWx2ZXRpY2EnCmN0
eC5maWxsVGV4dCgnSGVsbG8gV29ybGQnLCA1MCwgODApCgpjdHguYWRkUGFn
ZSgpCi8vIE5vdyBvbiBzZWNvbmQgcGFnZQpjdHguZm9udCA9ICcyMnB4IEhl
bHZldGljYScKY3R4LmZpbGxUZXh0KCdIZWxsbyBXb3JsZCAyJywgNTAsIDgw
KQoKY2FudmFzLnRvQnVmZmVyKCkgLy8gcmV0dXJucyBhIFBERiBmaWxlCmNh
bnZhcy5jcmVhdGVQREZTdHJlYW0oKSAvLyByZXR1cm5zIGEgUmVhZGFibGVT
dHJlYW0gdGhhdCBlbWl0cyBhIFBERgovLyBXaXRoIG9wdGlvbmFsIGRvY3Vt
ZW50IG1ldGFkYXRhIChyZXF1aXJlcyBDYWlybyAxLjE2LjApOgpjYW52YXMu
dG9CdWZmZXIoJ2FwcGxpY2F0aW9uL3BkZicsIHsKICB0aXRsZTogJ215IHBp
Y3R1cmUnLAogIGtleXdvcmRzOiAnbm9kZS5qcyBkZW1vIGNhaXJvJywKICBj
cmVhdGlvbkRhdGU6IG5ldyBEYXRlKCkKfSkKYGBgCgpJdCBpcyBhbHNvIHBv
c3NpYmxlIHRvIGNyZWF0ZSBwYWdlcyB3aXRoIGRpZmZlcmVudCBzaXplcyBi
eSBwYXNzaW5nIGB3aWR0aGAgYW5kIGBoZWlnaHRgIHRvIHRoZSBgLmFkZFBh
Z2UoKWAgbWV0aG9kOgoKYGBganMKY3R4LmZvbnQgPSAnMjJweCBIZWx2ZXRp
Y2EnCmN0eC5maWxsVGV4dCgnSGVsbG8gV29ybGQnLCA1MCwgODApCmN0eC5h
ZGRQYWdlKDQwMCwgODAwKQoKY3R4LmZpbGxUZXh0KCdIZWxsbyBXb3JsZCAy
JywgNTAsIDgwKQpgYGAKClNlZSBhbHNvOgoKKiBbSW1hZ2UjZGF0YU1vZGVd
KCNpbWFnZWRhdGFtb2RlKSBmb3IgZW1iZWRkaW5nIEpQRUdzIGluIFBERnMK
KiBbQ2FudmFzI2NyZWF0ZVBERlN0cmVhbSgpXSgjY2FudmFzY3JlYXRlcGRm
c3RyZWFtKSBmb3IgY3JlYXRpbmcgUERGIHN0cmVhbXMKKiBbQ2FudmFzUmVu
ZGVyaW5nQ29udGV4dDJEI3RleHREcmF3aW5nTW9kZV0oI2NhbnZhc3JlbmRl
cmluZ2NvbnRleHQyZHRleHRkcmF3aW5nbW9kZSkKICBmb3IgZW1iZWRkaW5n
IHRleHQgaW5zdGVhZCBvZiBwYXRocwoKIyMgU1ZHIE91dHB1dCBTdXBwb3J0
Cgpub2RlLWNhbnZhcyBjYW4gY3JlYXRlIFNWRyBkb2N1bWVudHMgaW5zdGVh
ZCBvZiBpbWFnZXMuIFRoZSBjYW52YXMgdHlwZSBtdXN0IGJlIHNldCB3aGVu
IGNyZWF0aW5nIHRoZSBjYW52YXMgYXMgZm9sbG93czoKCmBgYGpzCmNvbnN0
IGNhbnZhcyA9IGNyZWF0ZUNhbnZhcygyMDAsIDUwMCwgJ3N2ZycpCi8vIFVz
ZSB0aGUgbm9ybWFsIHByaW1pdGl2ZXMuCmZzLndyaXRlRmlsZVN5bmMoJ291
dC5zdmcnLCBjYW52YXMudG9CdWZmZXIoKSkKYGBgCgojIyBTVkcgSW1hZ2Ug
U3VwcG9ydAoKSWYgbGlicnN2ZyBpcyBhdmFpbGFibGUgd2hlbiBub2RlLWNh
bnZhcyBpcyBpbnN0YWxsZWQsIG5vZGUtY2FudmFzIGNhbiByZW5kZXIgU1ZH
IGltYWdlcyB0byB5b3VyIGNhbnZhcyBjb250ZXh0LiBUaGlzIGN1cnJlbnRs
eSB3b3JrcyBieSByYXN0ZXJpemluZyB0aGUgU1ZHIGltYWdlIChpLmUuIGRy
YXdpbmcgYW4gU1ZHIGltYWdlIHRvIGFuIFNWRyBjYW52YXMgd2lsbCBub3Qg
cHJlc2VydmUgdGhlIFNWRyBkYXRhKS4KCmBgYGpzCmNvbnN0IGltZyA9IG5l
dyBJbWFnZSgpCmltZy5vbmxvYWQgPSAoKSA9PiBjdHguZHJhd0ltYWdlKGlt
ZywgMCwgMCkKaW1nLm9uZXJyb3IgPSBlcnIgPT4geyB0aHJvdyBlcnIgfQpp
bWcuc3JjID0gJy4vZXhhbXBsZS5zdmcnCmBgYAoKIyMgSW1hZ2UgcGl4ZWwg
Zm9ybWF0cyAoZXhwZXJpbWVudGFsKQoKbm9kZS1jYW52YXMgaGFzIGV4cGVy
aW1lbnRhbCBzdXBwb3J0IGZvciBhZGRpdGlvbmFsIHBpeGVsIGZvcm1hdHMs
IHJvdWdobHkgZm9sbG93aW5nIHRoZSBbQ2FudmFzIGNvbG9yIHNwYWNlIHBy
b3Bvc2FsXShodHRwczovL2dpdGh1Yi5jb20vV0lDRy9jYW52YXMtY29sb3It
c3BhY2UvYmxvYi9tYXN0ZXIvQ2FudmFzQ29sb3JTcGFjZVByb3Bvc2FsLm1k
KS4KCmBgYGpzCmNvbnN0IGNhbnZhcyA9IGNyZWF0ZUNhbnZhcygyMDAsIDIw
MCkKY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJywgeyBwaXhl
bEZvcm1hdDogJ0E4JyB9KQpgYGAKCkJ5IGRlZmF1bHQsIGNhbnZhc2VzIGFy
ZSBjcmVhdGVkIGluIHRoZSBgUkdCQTMyYCBmb3JtYXQsIHdoaWNoIGNvcnJl
c3BvbmRzIHRvIHRoZSBuYXRpdmUgSFRNTCBDYW52YXMgYmVoYXZpb3IuIEVh
Y2ggcGl4ZWwgaXMgMzIgYml0cy4gVGhlIEphdmFTY3JpcHQgQVBJcyB0aGF0
IGludm9sdmUgcGl4ZWwgZGF0YSAoYGdldEltYWdlRGF0YWAsIGBwdXRJbWFn
ZURhdGFgKSBzdG9yZSB0aGUgY29sb3JzIGluIHRoZSBvcmRlciB7cmVkLCBn
cmVlbiwgYmx1ZSwgYWxwaGF9IHdpdGhvdXQgYWxwaGEgcHJlLW11bHRpcGxp
Y2F0aW9uLiAoVGhlIEMrKyBBUEkgc3RvcmVzIHRoZSBjb2xvcnMgaW4gdGhl
IG9yZGVyIHthbHBoYSwgcmVkLCBncmVlbiwgYmx1ZX0gaW4gbmF0aXZlLVtl
bmRpYW5dKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0VuZGlhbm5l
c3MpIG9yZGVyaW5nLCB3aXRoIGFscGhhIHByZS1tdWx0aXBsaWNhdGlvbi4p
CgpUaGVzZSBhZGRpdGlvbmFsIHBpeGVsIGZvcm1hdHMgaGF2ZSBleHBlcmlt
ZW50YWwgc3VwcG9ydDoKCiogYFJHQjI0YCBMaWtlIGBSR0JBMzJgLCBidXQg
dGhlIDggYWxwaGEgYml0cyBhcmUgYWx3YXlzIG9wYXF1ZS4gVGhpcyBmb3Jt
YXQgaXMgYWx3YXlzIHVzZWQgaWYgdGhlIGBhbHBoYWAgY29udGV4dCBhdHRy
aWJ1dGUgaXMgc2V0IHRvIGZhbHNlIChpLmUuIGBjYW52YXMuZ2V0Q29udGV4
dCgnMmQnLCB7YWxwaGE6IGZhbHNlfSlgKS4gVGhpcyBmb3JtYXQgY2FuIGJl
IGZhc3RlciB0aGFuIGBSR0JBMzJgIGJlY2F1c2UgdHJhbnNwYXJlbmN5IGRv
ZXMgbm90IG5lZWQgdG8gYmUgY2FsY3VsYXRlZC4KKiBgQThgIEVhY2ggcGl4
ZWwgaXMgOCBiaXRzLiBUaGlzIGZvcm1hdCBjYW4gZWl0aGVyIGJlIHVzZWQg
Zm9yIGNyZWF0aW5nIGdyYXlzY2FsZSBpbWFnZXMgKHRyZWF0aW5nIGVhY2gg
Ynl0ZSBhcyBhbiBhbHBoYSB2YWx1ZSksIG9yIGZvciBjcmVhdGluZyBpbmRl
eGVkIFBOR3MgKHRyZWF0aW5nIGVhY2ggYnl0ZSBhcyBhIHBhbGV0dGUgaW5k
ZXgpIChzZWUgW3RoZSBleGFtcGxlIHVzaW5nIGFscGhhIHZhbHVlcyB3aXRo
IGBmaWxsU3R5bGVgXShleGFtcGxlcy9pbmRleGVkLXBuZy1hbHBoYS5qcykg
YW5kIFt0aGUgZXhhbXBsZSB1c2luZyBgaW1hZ2VEYXRhYF0oZXhhbXBsZXMv
aW5kZXhlZC1wbmctaW1hZ2UtZGF0YS5qcykpLgoqIGBSR0IxNl81NjVgIEVh
Y2ggcGl4ZWwgaXMgMTYgYml0cywgd2l0aCByZWQgaW4gdGhlIHVwcGVyIDUg
Yml0cywgZ3JlZW4gaW4gdGhlIG1pZGRsZSA2IGJpdHMsIGFuZCBibHVlIGlu
IHRoZSBsb3dlciA1IGJpdHMsIGluIG5hdGl2ZSBwbGF0Zm9ybSBlbmRpYW5u
ZXNzLiBTb21lIGhhcmR3YXJlIGRldmljZXMgYW5kIGZyYW1lIGJ1ZmZlcnMg
dXNlIHRoaXMgZm9ybWF0LiBOb3RlIHRoYXQgUE5HIGRvZXMgbm90IHN1cHBv
cnQgdGhpcyBmb3JtYXQ7IHdoZW4gY3JlYXRpbmcgYSBQTkcsIHRoZSBpbWFn
ZSB3aWxsIGJlIGNvbnZlcnRlZCB0byAyNC1iaXQgUkdCLiBUaGlzIGZvcm1h
dCBpcyB0aHVzIHN1Ym9wdGltYWwgZm9yIGdlbmVyYXRpbmcgUE5Hcy4gYElt
YWdlRGF0YWAgaW5zdGFuY2VzIGZvciB0aGlzIG1vZGUgdXNlIGEgYFVpbnQx
NkFycmF5YCBpbnN0ZWFkIG9mIGEgYFVpbnQ4Q2xhbXBlZEFycmF5YC4KKiBg
QTFgIEVhY2ggcGl4ZWwgaXMgMSBiaXQsIGFuZCBwaXhlbHMgYXJlIHBhY2tl
ZCB0b2dldGhlciBpbnRvIDMyLWJpdCBxdWFudGl0aWVzLiBUaGUgb3JkZXJp
bmcgb2YgdGhlIGJpdHMgbWF0Y2hlcyB0aGUgZW5kaWFubmVzcyBvZiB0aGUK
ICBwbGF0Zm9ybTogb24gYSBsaXR0bGUtZW5kaWFuIG1hY2hpbmUsIHRoZSBm
aXJzdCBwaXhlbCBpcyB0aGUgbGVhc3Qtc2lnbmlmaWNhbnQgYml0LiBUaGlz
IGZvcm1hdCBjYW4gYmUgdXNlZCBmb3IgY3JlYXRpbmcgc2luZ2xlLWNvbG9y
IGltYWdlcy4gKlN1cHBvcnQgZm9yIHRoaXMgZm9ybWF0IGlzIGluY29tcGxl
dGUsIHNlZSBub3RlIGJlbG93LioKKiBgUkdCMzBgIEVhY2ggcGl4ZWwgaXMg
MzAgYml0cywgd2l0aCByZWQgaW4gdGhlIHVwcGVyIDEwLCBncmVlbiBpbiB0
aGUgbWlkZGxlIDEwLCBhbmQgYmx1ZSBpbiB0aGUgbG93ZXIgMTAuIChSZXF1
aXJlcyBDYWlybyAxLjEyIG9yIGxhdGVyLikgKlN1cHBvcnQgZm9yIHRoaXMg
Zm9ybWF0IGlzIGluY29tcGxldGUsIHNlZSBub3RlIGJlbG93LioKCk5vdGVz
IGFuZCBjYXZlYXRzOgoKKiBVc2luZyBhIG5vbi1kZWZhdWx0IGZvcm1hdCBj
YW4gYWZmZWN0IHRoZSBiZWhhdmlvciBvZiBBUElzIHRoYXQgaW52b2x2ZSBw
aXhlbCBkYXRhOgoKICAqIGBjb250ZXh0MmQuY3JlYXRlSW1hZ2VEYXRhYCBU
aGUgc2l6ZSBvZiB0aGUgYXJyYXkgcmV0dXJuZWQgZGVwZW5kcyBvbiB0aGUg
bnVtYmVyIG9mIGJpdCBwZXIgcGl4ZWwgZm9yIHRoZSB1bmRlcmx5aW5nIGlt
YWdlIGRhdGEgZm9ybWF0LCBwZXIgdGhlIGFib3ZlIGRlc2NyaXB0aW9ucy4K
ICAqIGBjb250ZXh0MmQuZ2V0SW1hZ2VEYXRhYCBUaGUgZm9ybWF0IG9mIHRo
ZSBhcnJheSByZXR1cm5lZCBkZXBlbmRzIG9uIHRoZSB1bmRlcmx5aW5nIGlt
YWdlIG1vZGUsIHBlciB0aGUgYWJvdmUgZGVzY3JpcHRpb25zLiBCZSBhd2Fy
ZSBvZiBwbGF0Zm9ybSBlbmRpYW5uZXNzLCB3aGljaCBjYW4gYmUgZGV0ZXJt
aW5lZCB1c2luZyBub2RlLmpzJ3MgW2Bvcy5lbmRpYW5uZXNzKClgXShodHRw
czovL25vZGVqcy5vcmcvYXBpL29zLmh0bWwjb3Nfb3NfZW5kaWFubmVzcykK
ICAgIGZ1bmN0aW9uLgogICogYGNvbnRleHQyZC5wdXRJbWFnZURhdGFgIEFz
IGFib3ZlLgoKKiBgQTFgIGFuZCBgUkdCMzBgIGRvIG5vdCB5ZXQgc3VwcG9y
dCBgZ2V0SW1hZ2VEYXRhYCBvciBgcHV0SW1hZ2VEYXRhYC4gSGF2ZSBhIHVz
ZSBjYXNlIGFuZC9vciBvcGluaW9uIG9uIHdvcmtpbmcgd2l0aCB0aGVzZSBm
b3JtYXRzPyBPcGVuIGFuIGlzc3VlIGFuZCBsZXQgdXMga25vdyEgKFNlZSAj
OTM1LikKCiogYEExYCwgYEE4YCwgYFJHQjMwYCBhbmQgYFJHQjE2XzU2NWAg
d2l0aCBzaGFkb3cgYmx1cnMgbWF5IGNyYXNoIG9yIG5vdCByZW5kZXIgcHJv
cGVybHkuCgoqIFRoZSBgSW1hZ2VEYXRhKHdpZHRoLCBoZWlnaHQpYCBhbmQg
YEltYWdlRGF0YShVaW50OENsYW1wZWRBcnJheSwgd2lkdGgpYCBjb25zdHJ1
Y3RvcnMgYXNzdW1lIDQgYnl0ZXMgcGVyIHBpeGVsLiBUbyBjcmVhdGUgYW4g
YEltYWdlRGF0YWAgaW5zdGFuY2Ugd2l0aCBhIGRpZmZlcmVudCBudW1iZXIg
b2YgYnl0ZXMgcGVyIHBpeGVsLCB1c2UgYG5ldyBJbWFnZURhdGEobmV3IFVp
bnQ4Q2xhbXBlZEFycmF5KHNpemUpLCB3aWR0aCwgaGVpZ2h0KWAgb3IgYG5l
dyBJbWFnZURhdGEobmV3IFVpbnQxNkNsYW1wZWRBcnJheShzaXplKSwgd2lk
dGgsIGhlaWdodClgLgoKIyMgVGVzdGluZwoKRmlyc3QgbWFrZSBzdXJlIHlv
dSd2ZSBidWlsdCB0aGUgbGF0ZXN0IHZlcnNpb24uIEdldCBhbGwgdGhlIGRl
cHMgeW91IG5lZWQgKHNlZSBbY29tcGlsaW5nXSgjY29tcGlsaW5nKSBhYm92
ZSksIGFuZCBydW46CgpgYGAKbnBtIGluc3RhbGwgLS1idWlsZC1mcm9tLXNv
dXJjZQpgYGAKCkZvciB2aXN1YWwgdGVzdHM6IGBucG0gcnVuIHRlc3Qtc2Vy
dmVyYCBhbmQgcG9pbnQgeW91ciBicm93c2VyIHRvIGh0dHA6Ly9sb2NhbGhv
c3Q6NDAwMC4KCkZvciB1bml0IHRlc3RzOiBgbnBtIHJ1biB0ZXN0YC4KCiMj
IEJlbmNobWFya3MKCkJlbmNobWFya3MgbGl2ZSBpbiB0aGUgYGJlbmNobWFy
a3NgIGRpcmVjdG9yeS4KCiMjIEV4YW1wbGVzCgpFeGFtcGxlcyBsaW5lIGlu
IHRoZSBgZXhhbXBsZXNgIGRpcmVjdG9yeS4gTW9zdCBwcm9kdWNlIGEgcG5n
IGltYWdlIG9mIHRoZSBzYW1lIG5hbWUsIGFuZCBvdGhlcnMgc3VjaCBhcyAq
bGl2ZS1jbG9jay5qcyogbGF1bmNoIGFuIEhUVFAgc2VydmVyIHRvIGJlIHZp
ZXdlZCBpbiB0aGUgYnJvd3Nlci4KCiMjIE9yaWdpbmFsIEF1dGhvcnMKCiAg
LSBUSiBIb2xvd2F5Y2h1ayAoW3RqXShodHRwOi8vZ2l0aHViLmNvbS90aikp
CiAgLSBOYXRoYW4gUmFqbGljaCAoW1Rvb1RhbGxOYXRlXShodHRwOi8vZ2l0
aHViLmNvbS9Ub29UYWxsTmF0ZSkpCiAgLSBSb2QgVmFnZyAoW3J2YWdnXSho
dHRwOi8vZ2l0aHViLmNvbS9ydmFnZykpCiAgLSBKdXJpeSBaYXl0c2V2IChb
a2FuZ2F4XShodHRwOi8vZ2l0aHViLmNvbS9rYW5nYXgpKQoKIyMgTGljZW5z
ZQoKIyMjIG5vZGUtY2FudmFzCgooVGhlIE1JVCBMaWNlbnNlKQoKQ29weXJp
Z2h0IChjKSAyMDEwIExlYXJuQm9vc3QsIGFuZCBjb250cmlidXRvcnMgJmx0
O2RldkBsZWFybmJvb3N0LmNvbSZndDsKCkNvcHlyaWdodCAoYykgMjAxNCBB
dXRvbWF0dGljLCBJbmMgYW5kIGNvbnRyaWJ1dG9ycyAmbHQ7ZGV2QGF1dG9t
YXR0aWMuY29tJmd0OwoKUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwg
ZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29w
eSBvZgp0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRp
b24gZmlsZXMgKHRoZSAnU29mdHdhcmUnKSwgdG8gZGVhbCBpbgp0aGUgU29m
dHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQg
bGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvCnVzZSwgY29weSwgbW9kaWZ5LCBt
ZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29y
IHNlbGwgY29waWVzIG9mCnRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBw
ZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBk
byBzbywKc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CgpU
aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9u
IG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGwKY29waWVzIG9yIHN1
YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KClRIRSBTT0ZU
V0FSRSBJUyBQUk9WSURFRCAnQVMgSVMnLCBXSVRIT1VUIFdBUlJBTlRZIE9G
IEFOWSBLSU5ELCBFWFBSRVNTIE9SCklNUExJRUQsIElOQ0xVRElORyBCVVQg
Tk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklM
SVRZLCBGSVRORVNTCkZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9O
SU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBP
UgpDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwg
REFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIKSU4gQU4gQUNU
SU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBG
Uk9NLCBPVVQgT0YgT1IgSU4KQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FS
RSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FS
RS4KCiMjIyBCTVAgcGFyc2VyCgpTZWUgW2xpY2Vuc2VdKHNyYy9ibXAvTElD
RU5TRS5tZCkK
",,6321,"bGFuZ3VhZ2U6IG5vZGVfanMKaW5zdGFsbDoKICAtIG5wbSBpbnN0YWxsIC0t
YnVpbGQtZnJvbS1zb3VyY2UKbm9kZV9qczoKICAtICcxMicKICAtICcxMCcK
ICAtICc4JwogIC0gJzYnCmFkZG9uczoKICBhcHQ6CiAgICBzb3VyY2VzOgog
ICAgICAtIHVidW50dS10b29sY2hhaW4tci10ZXN0CiAgICBwYWNrYWdlczoK
ICAgICAgLSBsaWJjYWlybzItZGV2CiAgICAgIC0gbGlianBlZzgtZGV2CiAg
ICAgIC0gbGlicGFuZ28xLjAtZGV2CiAgICAgIC0gbGliZ2lmLWRldgogICAg
ICAtIGxpYnJzdmcyLWRldgogICAgICAtIGcrKy00LjkKZW52OgogIC0gQ1hY
PWcrKy00LjkKc2NyaXB0OgogIC0gbm9kZV92ZXJzaW9uPSQobm9kZSAtdik7
IGlmIFsgJHtub2RlX3ZlcnNpb246MToyfSA9IDEwIF07IHRoZW4gbnBtIHJ1
biBkdHNsaW50OyBmaQogIC0gbnBtIHRlc3QK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'test-your-sysadmin-skills',144152935,b'A collection of Linux Sysadmin Test Questions and Answers. Test your knowledge and skills in different fields with these Q/A.',,3,6321,,308,False,b'https://api.github.com/repos/trimstray/test-your-sysadmin-skills/forks',"PHAgYWxpZ249ImNlbnRlciI+CiAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIu
Y29tL3RyaW1zdHJheS90ZXN0LXlvdXItc3lzYWRtaW4tc2tpbGxzIj4KICAg
IDxpbWcgc3JjPSJodHRwczovL2dpdGh1Yi5jb20vdHJpbXN0cmF5L3Rlc3Qt
eW91ci1zeXNhZG1pbi1za2lsbHMvYmxvYi9tYXN0ZXIvc3RhdGljL2ltZy9z
eXNhZG1pbl9wcmV2aWV3LnBuZyIgYWx0PSJNYXN0ZXIiPgogIDwvYT4KPC9w
PgoKPGJyPgoKPHAgYWxpZ249ImNlbnRlciI+OnN0YXI6PC9wPgoKPHAgYWxp
Z249ImNlbnRlciI+PHN1cD4iPGk+QSBncmVhdCBBZG1pbiBkb2Vzbid0IG5l
ZWQgdG8ga25vdyBldmVyeXRoaW5nLCBidXQgdGhleSBzaG91bGQgYmUgYWJs
ZSB0byBjb21lIHVwIHdpdGggYW1hemluZyBzb2x1dGlvbnMgdG8gaW1wb3Nz
aWJsZSBwcm9qZWN0cy48L2k+IiAtIGN3aGVlbGVyMzMgKFNlcnZlckZhdWx0
KTwvc3VwPjwvcD4KCjxwIGFsaWduPSJjZW50ZXIiPjpzdGFyOjwvcD4KCjxw
IGFsaWduPSJjZW50ZXIiPjxzdXA+IjxpPk15IHNraWxscyBhcmUgbWFraW5n
IHRoaW5ncyB3b3JrLCBub3Qga25vd2luZyBhIGJpbGxpb24gZmFjdHMuIFsu
Li5dIElmIEkgbmVlZCB0byBmaXggYSBzeXN0ZW0gSeKAmWxsIGlkZW50aWZ5
IHRoZSBwcm9ibGVtLCBjaGVjayB0aGUgbG9ncyBhbmQgbG9vayB1cCB0aGUg
ZXJyb3JzLiBJZiBJIG5lZWQgdG8gaW1wbGVtZW50IGEgc29sdXRpb24gSeKA
mWxsIHJlc2VhcmNoIHRoZSByaWdodCBzb2x1dGlvbiwgaW1wbGVtZW50IGFu
ZCBkb2N1bWVudCBpdCwgdGhlIGxhdGVyIG9uIG9ubHkgcmVhbGx5IGhhdmUg
YSBnZW5lcmFsIGlkZWEgb2YgaG93IGl0IHdvcmtzIHVubGVzcyBJIGludGVy
YWN0IHdpdGggaXQgZnJlcXVlbnRseS4uLiBpdOKAmXMgd2h5IGl04oCZcyBk
b2N1bWVudGVkLjwvaT4iIC0gU3BhcmNyeXB0IChSZWRkaXQpPC9zdXA+PC9w
PgoKPGJyPgoKPHAgYWxpZ249ImNlbnRlciI+CiAgPGEgaHJlZj0iaHR0cHM6
Ly9naXRodWIuY29tL3RyaW1zdHJheS90ZXN0LXlvdXItc3lzYWRtaW4tc2tp
bGxzL3B1bGxzIj4KICAgIDxpbWcgc3JjPSJodHRwczovL2ltZy5zaGllbGRz
LmlvL2JhZGdlL1BScy13ZWxjb21lLWJyaWdodGdyZWVuLnN2Zz9sb25nQ2Fj
aGU9dHJ1ZSIgYWx0PSJQdWxsIFJlcXVlc3RzIj4KICA8L2E+CiAgPGEgaHJl
Zj0iaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLyI+CiAgICA8aW1nIHNy
Yz0iaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS9MaWNlbnNlLUdOVS1i
bHVlLnN2Zz9sb25nQ2FjaGU9dHJ1ZSIgYWx0PSJMaWNlbnNlIj4KICA8L2E+
CjwvcD4KCjxkaXYgYWxpZ249ImNlbnRlciI+CiAgPHN1Yj5DcmVhdGVkIGJ5
CiAgPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS90cmltc3RyYXkiPnRy
aW1zdHJheTwvYT4gYW5kCiAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29t
L3RyaW1zdHJheS90ZXN0LXlvdXItc3lzYWRtaW4tc2tpbGxzL2dyYXBocy9j
b250cmlidXRvcnMiPmNvbnRyaWJ1dG9yczwvYT4KPC9kaXY+Cgo8YnI+Cgoq
KioqCgo8YnI+Cgo6aW5mb3JtYXRpb25fc291cmNlOiAmbmJzcDtUaGlzIHBy
b2plY3QgY29udGFpbnMgKioyODQqKiB0ZXN0IHF1ZXN0aW9ucyBhbmQgYW5z
d2VycyB0aGF0IGNhbiBiZSB1c2VkIGFzIGEgdGVzdCB5b3VyIGtub3dsZWRn
ZSBvciBkdXJpbmcgYW4gaW50ZXJ2aWV3L2V4YW0gZm9yIHBvc2l0aW9uIHN1
Y2ggYXMgKipMaW51eCAoXCpuaXgpIFN5c3RlbSBBZG1pbmlzdHJhdG9yKiou
Cgo6aGVhdnlfY2hlY2tfbWFyazogJm5ic3A7VGhlIGFuc3dlcnMgYXJlIG9u
bHkgKipleGFtcGxlcyoqIGFuZCBkbyBub3QgZXhoYXVzdCB0aGUgd2hvbGUg
dG9waWMuIE1vc3Qgb2YgdGhlbSBjb250YWlucyAqKnVzZWZ1bCByZXNvdXJj
ZXMqKiBmb3IgYSBkZWVwZXIgdW5kZXJzdGFuZGluZy4KCjp3YXJuaW5nOiAm
bmJzcDtRdWVzdGlvbnMgbWFya2VkICoqYCoqKmAqKiBkb24ndCBoYXZlIGFu
c3dlciB5ZXQgb3IgYW5zd2VyIGlzIGluY29tcGxldGUgLSAqKm1ha2UgYSBw
dWxsIHJlcXVlc3QgdG8gYWRkIHRoZW0qKiEKCjp0cmFmZmljX2xpZ2h0OiAm
bmJzcDtJZiB5b3UgZmluZCBzb21ldGhpbmcgd2hpY2ggZG9lc24ndCBtYWtl
IHNlbnNlLCBvciBzb21ldGhpbmcgZG9lc24ndCBzZWVtIHJpZ2h0LCAqKnBs
ZWFzZSBtYWtlIGEgcHVsbCByZXF1ZXN0KiogYW5kIHBsZWFzZSBhZGQgdmFs
aWQgYW5kIHdlbGwtcmVhc29uZWQgZXhwbGFuYXRpb25zIGFib3V0IHlvdXIg
Y2hhbmdlcyBvciBjb21tZW50cy4KCjpib29rczogJm5ic3A7SW4gb3JkZXIg
dG8gaW1wcm92ZSB5b3VyIGtub3dsZWRnZS9za2lsbHMgcGxlYXNlIHNlZSBb
ZGV2b3BzLWludGVydmlldy1xdWVzdGlvbnNdKGh0dHBzOi8vZ2l0aHViLmNv
bS9icmVnbWFuLWFyaWUvZGV2b3BzLWludGVydmlldy1xdWVzdGlvbnMpLiBJ
dCBsb29rcyByZWFsbHkgaW50ZXJlc3RpbmcuCgo8YnI+Cgo8cCBhbGlnbj0i
Y2VudGVyIj4KICDCuyA8Yj48Y29kZT48YSBocmVmPSJodHRwczovL2dpdGh1
Yi5jb20vdHJpbXN0cmF5L3Rlc3QteW91ci1zeXNhZG1pbi1za2lsbHMvaXNz
dWVzIj5BbGwgc3VnZ2VzdGlvbnMgYXJlIHdlbGNvbWU8L2E+PC9jb2RlPjwv
Yj4gwqsKPC9wPgoKPGJyPgoKIyMgVGFibGUgb2YgQ29udGVudHMKCnwgPGI+
PHU+VGhlIHR5cGUgb2YgY2hhcHRlcjwvdT48L2I+IHwgPGI+PHU+TnVtYmVy
IG9mIHF1ZXN0aW9uczwvdT48L2I+IHwgPGI+PHU+U2hvcnQgZGVzY3JpcHRp
b248L3U+PC9iPiB8CnwgOi0tLSAgICAgICAgIHwgOi0tLSAgICAgICAgIHwg
Oi0tLSAgICAgICAgIHwKfCA8Yj5bSW50cm9kdWN0aW9uXSgjaW50cm9kdWN0
aW9uKTwvYj4gfHx8CnwgOnNtYWxsX29yYW5nZV9kaWFtb25kOiBbU2ltcGxl
IFF1ZXN0aW9uc10oI3NpbXBsZS1xdWVzdGlvbnMpIHwgMTQgcXVlc3Rpb25z
IHwgUmVsYXhlZCwgZnVuIGFuZCBzaW1wbGUgLSBhcmUgZ3JlYXQgZm9yIHN0
YXJ0aW5nIGV2ZXJ5dGhpbmcuIHwKfCA8Yj5bR2VuZXJhbCBLbm93bGVkZ2Vd
KCNnZW5lcmFsLWtub3dsZWRnZSk8L2I+IHx8fAp8IDpzbWFsbF9vcmFuZ2Vf
ZGlhbW9uZDogW0p1bmlvciBTeXNhZG1pbl0oI2p1bmlvci1zeXNhZG1pbikg
fCA2NSBxdWVzdGlvbnMgfCBSZWFzb25hYmx5IHNpbXBsZSBhbmQgc3RyYWln
aHQgYmFzZWQgb24gYmFzaWMga25vd2xlZGdlLiB8CnwgOnNtYWxsX29yYW5n
ZV9kaWFtb25kOiBbUmVndWxhciBTeXNhZG1pbl0oI3JlZ3VsYXItc3lzYWRt
aW4pIHwgOTQgcXVlc3Rpb25zIHwgVGhlIG1pZCBsZXZlbCBvZiBxdWVzdGlv
bnMgaWYgdGhhdCB5b3UgaGF2ZSBzb3VuZCBrbm93bGVkZ2UuIHwKfCA6c21h
bGxfb3JhbmdlX2RpYW1vbmQ6IFtTZW5pb3IgU3lzYWRtaW5dKCNzZW5pb3It
c3lzYWRtaW4pIHwgOTkgcXVlc3Rpb25zIHwgSGFyZCBxdWVzdGlvbnMgYW5k
IHJpZGRsZXMuIENoZWNrIGl0IGlmIHlvdSB3YW50IHRvIGJlIGdvb2QuIHwK
fCA8Yj5bU2VjcmV0IEtub3dsZWRnZV0oI3NlY3JldC1rbm93bGVkZ2UpPC9i
PiB8fAp8IDpzbWFsbF9vcmFuZ2VfZGlhbW9uZDogW0d1cnUgU3lzYWRtaW5d
KCNndXJ1LXN5c2FkbWluKSB8IDEyIHF1ZXN0aW9ucyB8IFJlYWxseSBkZWVw
IHF1ZXN0aW9ucyBhcmUgdG8gZ2V0IHRvIGtub3cgR3VydSBTeXNhZG1pbi4g
fAoKPGJyPgoKIyMgPGEgbmFtZT0iaW50cm9kdWN0aW9uIj5JbnRyb2R1Y3Rp
b248L2E+CgojIyMgOmRpYW1vbmRfc2hhcGVfd2l0aF9hX2RvdF9pbnNpZGU6
IDxhIG5hbWU9InNpbXBsZS1xdWVzdGlvbnMiPlNpbXBsZSBRdWVzdGlvbnM8
L2E+CgotIDxiPldoYXQgZGlkIHlvdSBsZWFybiB0aGlzIHdlZWs/PC9iPgot
IDxiPldoYXQgZXhjaXRlcyBvciBpbnRlcmVzdHMgeW91IGFib3V0IHRoZSBz
eXNhZG1pbiB3b3JsZD88L2I+Ci0gPGI+V2hhdCBpcyBhIHJlY2VudCB0ZWNo
bmljYWwgY2hhbGxlbmdlIHlvdSBleHBlcmllbmNlZCBhbmQgaG93IGRpZCB5
b3Ugc29sdmUgaXQ/PC9iPgotIDxiPlRlbGwgbWUgYWJvdXQgdGhlIGxhc3Qg
bWFqb3IgcHJvamVjdCB5b3UgZmluaXNoZWQuPC9iPgotIDxiPkRvIHlvdSBj
b250cmlidXRlIHRvIGFueSBvcGVuIHNvdXJjZSBwcm9qZWN0cz88L2I+Ci0g
PGI+RGVzY3JpYmUgdGhlIHNldHVwIG9mIHlvdXIgaG9tZWxhYi48L2I+Ci0g
PGI+V2hhdCBwZXJzb25hbCBhY2hpZXZlbWVudCBhcmUgeW91IG1vc3QgcHJv
dWQgb2Y/PC9iPgotIDxiPlRlbGwgbWUgYWJvdXQgdGhlIGJpZ2dlc3QgbWlz
dGFrZSB5b3UndmUgbWFkZS4gSG93IHdvdWxkIHlvdSBkbyBpdCBkaWZmZXJl
bnRseSB0b2RheT88L2I+Ci0gPGI+V2hhdCBzb2Z0d2FyZSB0b29scyBhcmUg
eW91IGdvaW5nIHRvIGluc3RhbGwgb24gdGhlIGZpcnN0IGRheSBhdCBhIG5l
dyBqb2I/PC9iPgotIDxiPlRlbGwgbWUgYWJvdXQgaG93IHlvdSBtYW5hZ2Ug
eW91ciBrbm93bGVkZ2UgZGF0YWJhc2UgKGUuZy4gd2lraXMsIGZpbGVzLCBw
b3J0YWxzKS48L2I+Ci0gPGI+V2hhdCBuZXdzIHNvdXJjZXMgZG8geW91IGNo
ZWNrIGRhaWx5PyAoc3lzYWRtaW4sIHNlY3VyaXR5LXJlbGF0ZWQgb3Igb3Ro
ZXIpPC9iPgotIDxiPllvdXIgTk9DIHRlYW0gaGFzIGEgbmV3IGJ1ZGdldCBm
b3Igc3lzYWRtaW4gY2VydGlmaWNhdGlvbnMuIFdoYXQgY2VydGlmaWNhdGUg
d291bGQgeW91IGxpa2UgYW5kIHdoeT88L2I+Ci0gPGI+SG93IGRvIHlvdSBp
bnRlcmFjdCB3aXRoIGRldmVsb3BlcnM6ICp1cyB2cy4gdGhlbSogb3IgKmFs
bCBwdWxsaW5nIHRvZ2V0aGVyIHdpdGggYSBkaWZmZXJlbnQgYXBwcm9hY2gq
PzwvYj4KLSA8Yj5XaGljaCBzeXNhZG1pbiBxdWVzdGlvbiB3b3VsZCB5b3Ug
YXNrLCBpZiB5b3Ugd2VyZSBpbnRlcnZpZXdpbmcgbWUsIHRvIGtub3csIGhv
dyBnb29kIEknbSB3aXRoIG5vbi1zdGFuZGFyZCBzaXR1YXRpb25zPzwvYj4K
CiMjIDxhIG5hbWU9ImdlbmVyYWwta25vd2xlZGdlIj5HZW5lcmFsIEtub3ds
ZWRnZTwvYT4KCiMjIyA6ZGlhbW9uZF9zaGFwZV93aXRoX2FfZG90X2luc2lk
ZTogPGEgbmFtZT0ianVuaW9yLXN5c2FkbWluIj5KdW5pb3IgU3lzYWRtaW48
L2E+CgojIyMjIyMgU3lzdGVtIFF1ZXN0aW9ucyAoMzcpCgo8ZGV0YWlscz4K
PHN1bW1hcnk+PGI+R2l2ZSBzb21lIGV4YW1wbGVzIG9mIExpbnV4IGRpc3Ry
aWJ1dGlvbi4gV2hhdCBpcyB5b3VyIGZhdm9yaXRlIGRpc3RybyBhbmQgd2h5
PzwvYj48L3N1bW1hcnk+PGJyPgotIFJlZCBIYXQgRW50ZXJwcmlzZSBMaW51
eAotIEZlZG9yYQotIENlbnRPUwotIERlYmlhbgotIFVidW50dQotIE1pbnQK
LSBTVVNFIExpbnV4IEVudGVycHJpc2UgU2VydmVyIChTTEVTKQotIFNVU0Ug
TGludXggRW50ZXJwcmlzZSBEZXNrdG9wIChTTEVEKQotIFNsYWNrd2FyZQot
IEFyY2gKLSBLYWxpCi0gQmFja2JveAoKTXkgZmF2b3JpdGUgTGludXggZGlz
dHJpYnV0aW9uOgoKLSAqKkFyY2ggTGludXgqKiwgd2hpY2ggb2ZmZXJzIGEg
bmljZSBtaW5pbWFsaXN0IGJhc2Ugc3lzdGVtIG9uIHdoaWNoIG9uZSBjYW4g
YnVpbGQgYSBjdXN0b20gb3BlcmF0aW5nIHN5c3RlbS4gVGhlIGJlYXV0eSBv
ZiBpdCB0b28gaXMgdGhhdCBpdCBoYXMgdGhlIEFyY2ggVXNlciBSZXBvc2l0
b3J5IChBVVIpLCB3aGljaCB3aGVuIGNvbWJpbmVkIHdpdGggaXRzIG9mZmlj
aWFsIGJpbmFyeSByZXBvc2l0b3JpZXMgYWxsb3dzIGl0IHRvIHByb2JhYmx5
IGhhdmUgdGhlIGxhcmdlc3QgcmVwb3NpdG9yaWVzIG9mIGFueSBkaXN0cmli
dXRpb24uIEl0cyBwYWNrYWdpbmcgcHJvY2VzcyBpcyBhbHNvIHZlcnkgc2lt
cGxlLCB3aGljaCBtZWFucyBpZiBvbmUgd2FudHMgYSBwYWNrYWdlIG5vdCBp
biBpdHMgb2ZmaWNpYWwgcmVwb3NpdG9yaWVzIG9yIHRoZSBBVVIsIGl0IHNo
b3VsZCBiZSBlYXN5IHRvIG1ha2UgaXQgZm9yIG9uZXNlbGYuCi0gKipMaW51
eCBNaW50KiosIHdoaWNoIGlzIGFsc28gYnVpbHQgZnJvbSBVYnVudHUgTFRT
IHJlbGVhc2VzLCBidXQgZmVhdHVyZXMgZWRpdGlvbnMgZmVhdHVyaW5nIGEg
ZmV3IGRpZmZlcmVudCBkZXNrdG9wIGVudmlyb25tZW50cywgaW5jbHVkaW5n
IENpbm5hbW9uLCBNQVRFIGFuZCBYZmNlLiBNaW50IGlzIHF1aXRlIHBvbGlz
aGVkIGFuZCBpdHMgYWVzdGhldGljcyBhcmUgcmF0aGVyIGFwcGVhbGluZywg
SSBlc3BlY2lhbGx5IGxpa2UgaXRzIG5ldyBpY29uIHRoZW1lLCBhbHRob3Vn
aCBJIGRvIHF1aXRlIGRpc2xpa2UgaXRzIEdUSysgdGhlbWUgKHRvbyBibGFu
ZCB0byBteSB0YXN0ZSkuIEnigJl2ZSBhbHNvIGZvdW5kIGEgYnVnIGluIGl0
cyBsYXRlc3QgcmVsZWFzZSBNaW50IDE5LCB0aGF0IGlzIGdldHRpbmcgcXVp
dGUgaXJyaXRhdGluZyBhcyBJIGFza2VkIGZvciB3aXRoIGl0IG92ZXIgYSBm
b3J0bmlnaHQgYWdvIG9uIHRoZWlyIGZvcnVtcyBhbmQgSSBoYXZlIHJlY2Vp
dmVkIG5vIHJlcGxpZXMgc28gZmFyIGFuZCBpdCBpcyBhIGJ1ZyB0aGF0IG1h
a2VzIG15IGxpZmUgb24gaXQgbW9yZSBkaWZmaWN1bHQuCi0gKipLYWxpIExp
bnV4KiosIGlzIGEgRGViaWFuLWJhc2VkIExpbnV4IGRpc3RyaWJ1dGlvbiBh
aW1lZCBhdCBhZHZhbmNlZCBQZW5ldHJhdGlvbiBUZXN0aW5nIGFuZCBTZWN1
cml0eSBBdWRpdGluZy4gS2FsaSBjb250YWlucyBzZXZlcmFsIGh1bmRyZWQg
dG9vbHMgd2hpY2ggYXJlIGdlYXJlZCB0b3dhcmRzIHZhcmlvdXMgaW5mb3Jt
YXRpb24gc2VjdXJpdHkgdGFza3MsIHN1Y2ggYXMgUGVuZXRyYXRpb24gVGVz
dGluZywgU2VjdXJpdHkgcmVzZWFyY2gsIENvbXB1dGVyIEZvcmVuc2ljcyBh
bmQgUmV2ZXJzZSBFbmdpbmVlcmluZy4KClVzZWZ1bCByZXNvdXJjZXM6Cgot
IFtMaXN0IG9mIExpbnV4IGRpc3RyaWJ1dGlvbnNdKGh0dHBzOi8vZW4ud2lr
aXBlZGlhLm9yZy93aWtpL0xpc3Rfb2ZfTGludXhfZGlzdHJpYnV0aW9ucykK
LSBbV2hhdCBpcyB5b3VyIGZhdm9yaXRlIExpbnV4IGRpc3RybyBhbmQgd2h5
P10oaHR0cHM6Ly93d3cucXVvcmEuY29tL1doYXQtaXMteW91ci1mYXZvcml0
ZS1MaW51eC1kaXN0cm8tYW5kLXdoeSkKCjwvZGV0YWlscz4KCjxkZXRhaWxz
Pgo8c3VtbWFyeT48Yj5XaGF0IGFyZSB0aGUgZGlmZmVyZW5jZXMgYmV0d2Vl
biBVbml4LCBMaW51eCwgQlNELCBhbmQgR05VPzwvYj48L3N1bW1hcnk+PGJy
PgoKKipHTlUqKiBpc24ndCByZWFsbHkgYW4gT1MuIEl0J3MgbW9yZSBvZiBh
IHNldCBvZiBydWxlcyBvciBwaGlsb3NvcGhpZXMgdGhhdCBnb3Zlcm4gZnJl
ZSBzb2Z0d2FyZSwgdGhhdCBhdCB0aGUgc2FtZSB0aW1lIGdhdmUgYmlydGgg
dG8gYSBidW5jaCBvZiB0b29scyB3aGlsZSB0cnlpbmcgdG8gY3JlYXRlIGFu
IE9TLiBTbyAqKkdOVSoqIHRvb2xzIGFyZSBiYXNpY2FsbHkgb3BlbiB2ZXJz
aW9ucyBvZiB0b29scyB0aGF0IGFscmVhZHkgZXhpc3RlZCwgYnV0IHdlcmUg
cmVpbXBsZW1lbnRlZCB0byBjb25mb3JtIHRvIHByaW5jaXBhbHMgb2Ygb3Bl
biBzb2Z0d2FyZS4gKipHTlUvTGludXgqKiBpcyBhIG1lc2ggb2YgdGhvc2Ug
dG9vbHMgYW5kIHRoZSAqKkxpbnV4IGtlcm5lbCoqIHRvIGZvcm0gYSBjb21w
bGV0ZSBPUywgYnV0IHRoZXJlIGFyZSBvdGhlciBHTlVzLCBlLmcuICoqR05V
L0h1cmQqKi4KCioqVW5peCoqIGFuZCAqKkJTRCoqIGFyZSAib2xkZXIiIGlt
cGxlbWVudGF0aW9ucyBvZiBQT1NJWCB0aGF0IGFyZSB2YXJpb3VzIGxldmVs
cyBvZiAiY2xvc2VkIHNvdXJjZSIuICoqVW5peCoqIGlzIHVzdWFsbHkgdG90
YWxseSBjbG9zZWQgc291cmNlLCBidXQgdGhlcmUgYXJlIGFzIG1hbnkgZmxh
dm9ycyBvZiAqKlVuaXgqKiBhcyB0aGVyZSBhcmUgKipMaW51eCoqIChpZiBu
b3QgbW9yZSkuICoqQlNEKiogaXMgbm90IHVzdWFsbHkgY29uc2lkZXJlZCAi
b3BlbiIsIGJ1dCBpdCB3YXMgY29uc2lkZXJlZCB0byBiZSB2ZXJ5IG9wZW4g
d2hlbiBpdCB3YXMgcmVsZWFzZWQuIEl0cyBsaWNlbnNpbmcgYWxzbyBhbGxv
d2VkIGZvciBjb21tZXJjaWFsIHVzZSB3aXRoIGZhciBmZXdlciByZXN0cmlj
dGlvbnMgdGhhbiB0aGUgbW9yZSAib3BlbiIgbGljZW5zZXMgb2YgdGhlIHRp
bWUgYWxsb3dlZC4KCioqTGludXgqKiBpcyB0aGUgbmV3ZXN0IG9mIHRoZSBm
b3VyLiBTdHJpY3RseSBzcGVha2luZywgaXQncyAianVzdCBhIGtlcm5lbCI7
IGhvd2V2ZXIsIGluIGdlbmVyYWwsIGl0J3MgdGhvdWdodCBvZiBhcyBhIGZ1
bGwgT1Mgd2hlbiBjb21iaW5lZCB3aXRoIEdOVSBUb29scyBhbmQgc2V2ZXJh
bCBvdGhlciBjb3JlIGNvbXBvbmVudHMuCgpUaGUgbWFpbiBnb3Zlcm5pbmcg
ZGlmZmVyZW5jZXMgYmV0d2VlbiB0aGVzZSBhcmUgdGhlaXIgaWRlYWxzLiAq
KlVuaXgqKiwgKipMaW51eCoqLCBhbmQgKipCU0QqKiBoYXZlIGRpZmZlcmVu
dCBpZGVhbHMgdGhhdCB0aGV5IGltcGxlbWVudC4gVGhleSBhcmUgYWxsIFBP
U0lYLCBhbmQgYXJlIGFsbCBiYXNpY2FsbHkgaW50ZXJjaGFuZ2VhYmxlLiBU
aGV5IGRvIHNvbHZlIHNvbWUgb2YgdGhlIHNhbWUgcHJvYmxlbXMgaW4gZGlm
ZmVyZW50IHdheXMuIFNvIG90aGVyIHRoZW4gaWRlYWxzIGFuZCBob3cgdGhl
eSBjaG9vc2UgdG8gaW1wbGVtZW50IFBPU0lYIHN0YW5kYXJkcywgdGhlcmUg
aXMgbGl0dGxlIGRpZmZlcmVuY2UuCgpGb3IgbW9yZSBpbmZvIEkgc3VnZ2Vz
dCB5b3VyIHJlYWQgYSBicmllZiBhcnRpY2xlIG9uIHRoZSBjcmVhdGlvbiBv
ZiAqKkdOVSoqLCAqKk9TUyoqLCAqKkxpbnV4KiosICoqQlNEKiosIGFuZCAq
KlVOSVgqKi4gVGhleSB3aWxsIGJlIHNsYW50ZWQgdG93YXJkcyB0aGVpciBp
bmRpdmlkdWFsIGlkZWFzLCBidXQgdGhvc2UgYXJ0aWNsZXMgc2hvdWxkIGdp
dmUgeW91IGEgYmV0dGVyIGlkZWEgb2YgdGhlIGRpZmZlcmVuY2VzLgoKVXNl
ZnVsIHJlc291cmNlczoKCi0gW1doYXQgaXMgdGhlIGRpZmZlcmVuY2UgYmV0
d2VlbiBVbml4LCBMaW51eCwgQlNEIGFuZCBHTlU/IChvcmlnaW5hbCldKGh0
dHBzOi8vdW5peC5zdGFja2V4Y2hhbmdlLmNvbS9xdWVzdGlvbnMvMTA0NzE0
L3doYXQtaXMtdGhlLWRpZmZlcmVuY2UtYmV0d2Vlbi11bml4LWxpbnV4LWJz
ZC1hbmQtZ251KQotIFtUaGUgR3JlYXQgRGViYXRlOiBJcyBpdCBMaW51eCBv
ciBHTlUvTGludXg/XShodHRwczovL3d3dy5ob3d0b2dlZWsuY29tLzEzOTI4
Ny90aGUtZ3JlYXQtZGViYXRlLWlzLWl0LWxpbnV4LW9yLWdudWxpbnV4LykK
CjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5XaGF0IGlzIGEg
Q0xJPyBUZWxsIG1lIGFib3V0IHlvdXIgZmF2b3JpdGUgQ0xJIHRvb2xzLCB0
aXBzLCBhbmQgaGFja3MuPC9iPjwvc3VtbWFyeT48YnI+CgoqKkNMSSoqIGlz
IGFuIGFjcm9ueW0gZm9yIENvbW1hbmQgTGluZSBJbnRlcmZhY2Ugb3IgQ29t
bWFuZCBMYW5ndWFnZSBJbnRlcnByZXRlci4gVGhlIGNvbW1hbmQgbGluZSBp
cyBvbmUgb2YgdGhlIG1vc3QgcG93ZXJmdWwgd2F5cyB0byBjb250cm9sIHlv
dXIgc3lzdGVtL2NvbXB1dGVyLgoKSW4gVW5peCBsaWtlIHN5c3RlbXMsICoq
Q0xJKiogaXMgdGhlIGludGVyZmFjZSBieSB3aGljaCBhIHVzZXIgY2FuIHR5
cGUgY29tbWFuZHMgZm9yIHRoZSBzeXN0ZW0gdG8gZXhlY3V0ZS4gVGhlICoq
Q0xJKiogaXMgdmVyeSBwb3dlcmZ1bCwgYnV0IGlzIG5vdCB2ZXJ5IGVycm9y
LXRvbGVyYW50LgoKVGhlICoqQ0xJKiogYWxsb3dzIHlvdSB0byBkbyBtYW5p
cHVsYXRpb25zIHdpdGggeW91ciBzeXN0ZW3igJlzIGludGVybmFscyBhbmQg
d2l0aCBjb2RlIGluIGEgbXVjaCBtb3JlIGZpbmUtdHVuZWQgd2F5LiBJdCBv
ZmZlcnMgZ3JlYXRlciBmbGV4aWJpbGl0eSBhbmQgY29udHJvbCB0aGFuIGEg
R1VJIHJlZ2FyZGxlc3Mgb2Ygd2hhdCBPUyBpcyB1c2VkLiBNYW55IHByb2dy
YW1zIHRoYXQgeW91IG1pZ2h0IHdhbnQgdG8gdXNlIGluIHlvdXIgc29mdHdh
cmUgdGhhdCBhcmUgaG9zdGVkIG9uIHNheSBHaXRodWIgYWxzbyByZXF1aXJl
IHJ1bm5pbmcgc29tZSBjb21tYW5kcyBvbiB0aGUgKipDTEkqKiBpbiBvcmRl
ciB0byBnZXQgdGhlbSBydW5uaW5nLgoKKipNeSBmYXZvcml0ZSB0b29scyoq
CgotIGBzY3JlZW5gIC0gZnJlZSB0ZXJtaW5hbCBtdWx0aXBsZXhlciwgSSBj
YW4gc3RhcnQgYSBzZXNzaW9uIGFuZCBNeSB0ZXJtaW5hbHMgd2lsbCBiZSBz
YXZlZCBldmVuIHdoZW4geW91IGNvbm5lY3Rpb24gaXMgbG9zdCwgc28geW91
IGNhbiByZXN1bWUgbGF0ZXIgb3IgZnJvbSBob21lCi0gYHNzaGAgLSB0aGUg
bW9zdCB2YWx1YWJsZSBvdmVyLWFsbCBjb21tYW5kIHRvIGxlYXJuLCBJIGNh
biB1c2UgaXQgdG8gZG8gc29tZSBhbWF6aW5nIHRoaW5nczoKICAqIG1vdW50
IGEgZmlsZSBzeXN0ZW0gb3ZlciB0aGUgaW50ZXJuZXQgd2l0aCBgc3NoZnNg
CiAgKiBmb3J3YXJkIGNvbW1hbmRzOiBydW5zIGFnYWluc3QgYSBgcnN5bmNg
IHNlcnZlciB3aXRoIG5vIGByc3luY2AgZGVhbW9uIGJ5IHN0YXJ0aW5nIG9u
ZSBpdHNlbGYgdmlhIHNzaAogICogcnVuIGluIGJhdGNoIGZpbGVzOiBJIGNh
biByZWRpcmVjdCB0aGUgb3V0cHV0IGZyb20gdGhlIHJlbW90ZSBjb21tYW5k
IGFuZCB1c2UgaXQgd2l0aGluIGxvY2FsIGJhdGNoIGZpbGUKLSBgdmkvdmlt
YCAtIGlzIHRoZSBtb3N0IHBvcHVsYXIgYW5kIHBvd2VyZnVsIHRleHQgZWRp
dG9yLCBpdCdzIHVuaXZlcnNhbCwgaXQncyB3b3JrIHZlcnkgZmFzdCwgZXZl
biBvbiBsYXJnZSBmaWxlcwotIGBiYXNoLWNvbXBsZXRpb25gIC0gY29udGFp
bnMgYSBudW1iZXIgb2YgcHJlZGVmaW5lZCBjb21wbGV0aW9uIHJ1bGVzIGZv
ciBzaGVsbAoKKipUaXBzICYgSGFja3MqKgoKLSBzZWFyY2hlcyB0aGUgY29t
bWFuZCBoaXN0b3J5IHdpdGggYENUUkwgKyBSYAotIGBwb3BkL3B1c2hkYCBh
bmQgb3RoZXIgc2hlbGwgYnVpbHRpbnMgd2hpY2ggYWxsb3cgeW91IG1hbmlw
dWxhdGUgdGhlIGRpcmVjdG9yeSBzdGFjawotIGVkaXRpbmcga2V5Ym9hcmQg
c2hvcnRjdXRzIGxpa2UgYSBgQ1RSTCArIFVgLCBgQ1RSTCArIEVgCi0gY29t
YmluYXRpb25zIHdpbGwgYmUgYXV0by1leHBhbmRlZDoKICAqIGAhKmAgLSBh
bGwgYXJndW1lbnRzIG9mIGxhc3QgY29tbWFuZAogICogYCEhYCAtIHRoZSB3
aG9sZSBvZiBsYXN0IGNvbW1hbmQKICAqIGAhc3NoYCAtIGxhc3QgY29tbWFu
ZCBzdGFydGluZyB3aXRoIHNzaAoKVXNlZnVsIHJlc291cmNlczoKCi0gW0Nv
bW1hbmQgTGluZSBJbnRlcmZhY2UgRGVmaW5pdGlvbl0oaHR0cDovL3d3dy5s
aW5mby5vcmcvY29tbWFuZF9saW5lX2ludGVyZmFjZS5odG1sKQotIFtXaGF0
IGlzIHlvdXIgc2luZ2xlIG1vc3QgZmF2b3JpdGUgY29tbWFuZC1saW5lIHRy
aWNrIHVzaW5nIEJhc2g/XShodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1
ZXN0aW9ucy82ODM3Mi93aGF0LWlzLXlvdXItc2luZ2xlLW1vc3QtZmF2b3Jp
dGUtY29tbWFuZC1saW5lLXRyaWNrLXVzaW5nLWJhc2gvNjk3MTYpCi0gW1do
YXQgYXJlIHlvdXIgZmF2b3JpdGUgY29tbWFuZCBsaW5lIGZlYXR1cmVzIG9y
IHRyaWNrcz9dKGh0dHBzOi8vdW5peC5zdGFja2V4Y2hhbmdlLmNvbS9xdWVz
dGlvbnMvNi93aGF0LWFyZS15b3VyLWZhdm9yaXRlLWNvbW1hbmQtbGluZS1m
ZWF0dXJlcy1vci10cmlja3MpCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1
bW1hcnk+PGI+V2hhdCBpcyB5b3VyIGZhdm9yaXRlIHNoZWxsIGFuZCB3aHk/
PC9iPjwvc3VtbWFyeT48YnI+CgoqKkJBU0gqKiBpcyBteSBmYXZvcml0ZS4g
SXTigJlzIHJlYWxseSBhIHByZWZlcmVudGlhbCBraW5kIG9mIHRoaW5nLCB3
aGVyZSBJIGxvdmUgdGhlIHN5bnRheCBhbmQgaXQganVzdCAiY2xpY2tzIiBm
b3IgbWUuIFRoZSBpbnB1dC9vdXRwdXQgcmVkaXJlY3Rpb24gc3ludGF4IChg
Pj5gLCBgPDwgMj4mMWAsIGAyPmAsIGAxPmAsIGV0YykgaXMgc2ltaWxhciB0
byBDKysgd2hpY2ggbWFrZXMgaXQgZWFzaWVyIGZvciBtZSB0byByZWNvZ25p
emUuCgpJIGFsc28gbGlrZSB0aGUgKipaU0gqKiBzaGVsbCwgYmVjYXVzZSBp
cyBtdWNoIG1vcmUgY3VzdG9taXphYmxlIHRoYW4gKipCQVNIKiouIEl0IGhh
cyB0aGUgT2gtTXktWnNoIGZyYW1ld29yaywgcG93ZXJmdWwgY29udGV4dCBi
YXNlZCB0YWIgY29tcGxldGlvbiwgcGF0dGVybiBtYXRjaGluZy9nbG9iYmlu
ZyBvbiBzdGVyb2lkcywgbG9hZGFibGUgbW9kdWxlcyBhbmQgbW9yZS4KClVz
ZWZ1bCByZXNvdXJjZXM6CgotIFtDb21wYXJpc29uIG9mIGNvbW1hbmQgc2hl
bGxzXShodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Db21wYXJpc29u
X29mX2NvbW1hbmRfc2hlbGxzKQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+Cjxz
dW1tYXJ5PjxiPkhvdyBkbyB5b3UgZ2V0IGhlbHAgb24gdGhlIGNvbW1hbmQg
bGluZT8gKioqPC9iPjwvc3VtbWFyeT48YnI+CgotIGBtYW5gIFtjb21tYW5k
bmFtZV0gY2FuIGJlIHVzZWQgdG8gc2VlIGEgZGVzY3JpcHRpb24gb2YgYSBj
b21tYW5kIChleC46IGBtYW4gbGVzc2AsIGBtYW4gY2F0YCkKCi0gYC1oYCBv
ciBgLS1oZWxwYCBzb21lIHByb2dyYW1zIHdpbGwgaW1wbGVtZW50IHByaW50
aW5nIGluc3RydWN0aW9ucyB3aGVuIHBhc3NlZCB0aGlzIHBhcmFtZXRlciAo
ZXguOiBgcHl0aG9uIC1oYCBhbmQgYHB5dGhvbiAtLWhlbHBgKQoKPC9kZXRh
aWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPllvdXIgZmlyc3QgNSBjb21t
YW5kcyBvbiBhICpuaXggc2VydmVyIGFmdGVyIGxvZ2luLjwvYj48L3N1bW1h
cnk+PGJyPgoKLSBgd2AgLSBhIGxvdCBvZiBncmVhdCBpbmZvcm1hdGlvbiBp
biB0aGVyZSB3aXRoIHRoZSBzZXJ2ZXIgdXB0aW1lCi0gYHRvcGAgLSB5b3Ug
Y2FuIHNlZSBhbGwgcnVubmluZyBwcm9jZXNzZXMsIHRoZW4gb3JkZXIgdGhl
bSBieSBDUFUsIG1lbW9yeSB1dGlsaXphdGlvbiBhbmQgbW9yZQotIGBuZXRz
dGF0YCAtIHRvIGtub3cgb24gd2hhdCBwb3J0IGFuZCBJUCB5b3VyIHNlcnZl
ciBpcyBsaXN0ZW5pbmcgb24gYW5kIHdoYXQgcHJvY2Vzc2VzIGFyZSB1c2lu
ZyB0aG9zZQotIGBkZmAgLSByZXBvcnRzIHRoZSBhbW91bnQgb2YgYXZhaWxh
YmxlIGRpc2sgc3BhY2UgYmVpbmcgdXNlZCBieSBmaWxlIHN5c3RlbXMKLSBg
aGlzdG9yeWAgLSB0ZWxsIHlvdSB3aGF0IHdhcyBwcmV2aW91c2x5IHJ1biBi
eSB0aGUgdXNlciB5b3UgYXJlIGN1cnJlbnRseSBjb25uZWN0ZWQgdG8KClVz
ZWZ1bCByZXNvdXJjZXM6CgotIFtGaXJzdCA1IENvbW1hbmRzIFdoZW4gSSBD
b25uZWN0IG9uIGEgTGludXggU2VydmVyIChvcmlnaW5hbCldKGh0dHBzOi8v
d3d3LmxpbnV4LmNvbS9ibG9nL2ZpcnN0LTUtY29tbWFuZHMtd2hlbi1pLWNv
bm5lY3QtbGludXgtc2VydmVyKQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+Cjxz
dW1tYXJ5PjxiPldoYXQgZG8gdGhlIGZpZWxkcyBpbiA8Y29kZT5scyAtYWw8
L2NvZGU+IG91dHB1dCBtZWFuPzwvYj48L3N1bW1hcnk+PGJyPgoKSW4gdGhl
IG9yZGVyIG9mIG91dHB1dDoKCmBgYGJhc2gKLXJ3eHJ3LXItLSAgICAxICAg
IHJvb3QgICByb290IDIwNDggICAgSmFuIDEzIDA3OjExIGRiLmR1bXAKYGBg
CgotIGZpbGUgcGVybWlzc2lvbnMsCi0gbnVtYmVyIG9mIGxpbmtzLAotIG93
bmVyIG5hbWUsCi0gb3duZXIgZ3JvdXAsCi0gZmlsZSBzaXplLAotIHRpbWUg
b2YgbGFzdCBtb2RpZmljYXRpb24sCi0gZmlsZS9kaXJlY3RvcnkgbmFtZQoK
RmlsZSBwZXJtaXNzaW9ucyBpcyBkaXNwbGF5ZWQgYXMgZm9sbG93aW5nOgoK
LSBmaXJzdCBjaGFyYWN0ZXIgaXMgYC1gIG9yIGBsYCBvciBgZGAsIGBkYCBp
bmRpY2F0ZXMgYSBkaXJlY3RvcnksIGEgYC1gIHJlcHJlc2VudHMgYSBmaWxl
LCBgbGAgaXMgYSBzeW1saW5rIChvciBzb2Z0IGxpbmspIC0gc3BlY2lhbCB0
eXBlIG9mIGZpbGUKLSB0aHJlZSBzZXRzIG9mIGNoYXJhY3RlcnMsIHRocmVl
IHRpbWVzLCBpbmRpY2F0aW5nIHBlcm1pc3Npb25zIGZvciBvd25lciwgZ3Jv
dXAgYW5kIG90aGVyOgogIC0gYHJgID0gcmVhZGFibGUKICAtIGB3YCA9IHdy
aXRhYmxlCiAgLSBgeGAgPSBleGVjdXRhYmxlCgpJbiB5b3VyIGV4YW1wbGUg
YC1yd3hydy1yLS1gLCB0aGlzIG1lYW5zIHRoZSBsaW5lIGRpc3BsYXllZCBp
czoKCi0gYSByZWd1bGFyIGZpbGUgKGRpc3BsYXllZCBhcyBgLWApCi0gcmVh
ZGFibGUsIHdyaXRhYmxlIGFuZCBleGVjdXRhYmxlIGJ5IG93bmVyIChgcnd4
YCkKLSByZWFkYWJsZSwgd3JpdGFibGUsIGJ1dCBub3QgZXhlY3V0YWJsZSBi
eSBncm91cCAoYHJ3LWApCi0gcmVhZGFibGUgYnV0IG5vdCB3cml0YWJsZSBv
ciBleGVjdXRhYmxlIGJ5IG90aGVyIChgci0tYCkKClVzZWZ1bCByZXNvdXJj
ZXM6CgotIFtXaGF0IGRvIHRoZSBmaWVsZHMgaW4gbHMgLWFsIG91dHB1dCBt
ZWFuPyAob3JpZ2luYWwpXShodHRwczovL3VuaXguc3RhY2tleGNoYW5nZS5j
b20vcXVlc3Rpb25zLzEwMzExNC93aGF0LWRvLXRoZS1maWVsZHMtaW4tbHMt
YWwtb3V0cHV0LW1lYW4pCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1h
cnk+PGI+SG93IGRvIHlvdSBnZXQgYSBsaXN0IG9mIGxvZ2dlZC1pbiB1c2Vy
cz88L2I+PC9zdW1tYXJ5Pjxicj4KCkZvciBhIHN1bW1hcnkgb2YgbG9nZ2Vk
LWluIHVzZXJzLCBpbmNsdWRpbmcgZWFjaCBsb2dpbiBvZiBhIHVzZXJuYW1l
LCB0aGUgdGVybWluYWwgdXNlcnMgYXJlIGF0dGFjaGVkIHRvLCB0aGUgZGF0
ZS90aW1lIHRoZXkgbG9nZ2VkIGluLCBhbmQgcG9zc2libHkgdGhlIGNvbXB1
dGVyIGZyb20gd2hpY2ggdGhleSBhcmUgbWFraW5nIHRoZSBjb25uZWN0aW9u
LCBlbnRlcjoKCmBgYGJhc2gKIyBJdCB1c2VzIC92YXIvcnVuL3V0bXAgYW5k
IC92YXIvbG9nL3d0bXAgZmlsZXMgdG8gZ2V0IHRoZSBkZXRhaWxzLgp3aG8K
YGBgCgpGb3IgZXh0ZW5zaXZlIGluZm9ybWF0aW9uLCBpbmNsdWRpbmcgdXNl
cm5hbWUsIHRlcm1pbmFsLCBJUCBudW1iZXIgb2YgdGhlIHNvdXJjZSBjb21w
dXRlciwgdGhlIHRpbWUgdGhlIGxvZ2luIGJlZ2FuLCBhbnkgaWRsZSB0aW1l
LCBwcm9jZXNzIENQVSBjeWNsZXMsIGpvYiBDUFUgY3ljbGVzLCBhbmQgdGhl
IGN1cnJlbnRseSBydW5uaW5nIGNvbW1hbmQsIGVudGVyOgoKYGBgYmFzaAoj
IEl0IHVzZXMgL3Zhci9ydW4vdXRtcCwgYW5kIHRoZWlyIHByb2Nlc3NlcyAv
cHJvYy4KdwpgYGAKCkFsc28gaW1wb3J0YW50IGZvciBkaXNwbGF5cyBhIGxp
c3Qgb2YgbGFzdCBsb2dnZWQgaW4gdXNlcnMsIGVudGVyOgoKYGBgYmFzaAoj
IEl0IHVzZXMgL3Zhci9sb2cvd3RtcC4KbGFzdApgYGAKClVzZWZ1bCByZXNv
dXJjZXM6CgotIFs0IFdheXMgdG8gSWRlbnRpZnkgV2hvIGlzIExvZ2dlZC1J
biBvbiBZb3VyIExpbnV4IFN5c3RlbV0oaHR0cHM6Ly93d3cudGhlZ2Vla3N0
dWZmLmNvbS8yMDA5LzAzLzQtd2F5cy10by1pZGVudGlmeS13aG8taXMtbG9n
Z2VkLWluLW9uLXlvdXItbGludXgtc3lzdGVtLykKCjwvZGV0YWlscz4KCjxk
ZXRhaWxzPgo8c3VtbWFyeT48Yj5XaGF0IGlzIHRoZSBhZHZhbnRhZ2Ugb2Yg
ZXhlY3V0aW5nIHRoZSBydW5uaW5nIHByb2Nlc3NlcyBpbiB0aGUgYmFja2dy
b3VuZD8gSG93IGNhbiB5b3UgZG8gdGhhdD88L2I+PC9zdW1tYXJ5Pjxicj4K
ClRoZSBtb3N0IHNpZ25pZmljYW50IGFkdmFudGFnZSBvZiBleGVjdXRpbmcg
dGhlIHJ1bm5pbmcgcHJvY2VzcyBpbiB0aGUgYmFja2dyb3VuZCBpcyB0aGF0
IHlvdSBjYW4gZG8gYW55IG90aGVyIHRhc2sgc2ltdWx0YW5lb3VzbHkgd2hp
bGUgb3RoZXIgcHJvY2Vzc2VzIGFyZSBydW5uaW5nIGluIHRoZSBiYWNrZ3Jv
dW5kLiBTbywgbW9yZSBwcm9jZXNzZXMgY2FuIGJlIGNvbXBsZXRlZCBpbiB0
aGUgYmFja2dyb3VuZCB3aGlsZSB5b3UgYXJlIHdvcmtpbmcgb24gZGlmZmVy
ZW50IHByb2Nlc3Nlcy4gSXQgY2FuIGJlIGFjaGlldmVkIGJ5IGFkZGluZyBh
IHNwZWNpYWwgY2hhcmFjdGVyIGAmYCBhdCB0aGUgZW5kIG9mIHRoZSBjb21t
YW5kLgoKR2VuZXJhbGx5IGFwcGxpY2F0aW9ucyB0aGF0IHRha2UgdG9vIGxv
bmcgdG8gZXhlY3V0ZSBhbmQgZG9lc24ndCByZXF1aXJlIHVzZXIgaW50ZXJh
Y3Rpb24gYXJlIHNlbnQgdG8gYmFja2dyb3VuZCBzbyB0aGF0IHdlIGNhbiBj
b250aW51ZSBvdXIgd29yayBpbiB0ZXJtaW5hbC4KCkZvciBleGFtcGxlIGlm
IHlvdSB3YW50IHRvIGRvd25sb2FkIHNvbWV0aGluZyBpbiBiYWNrZ3JvdW5k
LCB5b3UgY2FuOgoKYGBgYmFzaAp3Z2V0IGh0dHBzOi8vdXJsLXRvLWRvd25s
b2FkLmNvbS9kb3dubG9hZC50YXIuZ3ogJgpgYGAKCldoZW4geW91IHJ1biB0
aGUgYWJvdmUgY29tbWFuZCB5b3UgZ2V0IHRoZSBmb2xsb3dpbmcgb3V0cHV0
OgoKYGBgYmFzaApbMV0gMjIwMwpgYGAKCkhlcmUgMSBpcyB0aGUgc2VyaWFs
IG51bWJlciBvZiBqb2IgYW5kIDIyMDMgaXMgUElEIG9mIHRoZSBqb2IuCgpZ
b3UgY2FuIHNlZSB0aGUgam9icyBydW5uaW5nIGluIGJhY2tncm91bmQgdXNp
bmcgdGhlIGZvbGxvd2luZyBjb21tYW5kOgoKYGBgYmFzaApqb2JzCmBgYAoK
V2hlbiB5b3UgZXhlY3V0ZSBqb2IgaW4gYmFja2dyb3VuZCBpdCBnaXZlIHlv
dSBhIFBJRCBvZiBqb2IsIHlvdSBjYW4ga2lsbCB0aGUgam9iIHJ1bm5pbmcg
aW4gYmFja2dyb3VuZCB1c2luZyB0aGUgZm9sbG93aW5nIGNvbW1hbmQ6Cgpg
YGBiYXNoCmtpbGwgUElECmBgYAoKUmVwbGFjZSB0aGUgUElEIHdpdGggdGhl
IFBJRCBvZiB0aGUgam9iLiBJZiB5b3UgaGF2ZSBvbmx5IG9uZSBqb2IgcnVu
bmluZyB5b3UgY2FuIGJyaW5nIGl0IHRvIGZvcmVncm91bmQgdXNpbmc6Cgpg
YGBiYXNoCmZnCmBgYAoKSWYgeW91IGhhdmUgbXVsdGlwbGUgam9icyBydW5u
aW5nIGluIGJhY2tncm91bmQgeW91IGNhbiBicmluZyBhbnkgam9iIGluIGZv
cmVncm91bmQgdXNpbmc6CgpgYGBiYXNoCmZnICUjCmBgYAoKUmVwbGFjZSB0
aGUgYCNgIHdpdGggc2VyaWFsIG51bWJlciBvZiB0aGUgam9iLgoKVXNlZnVs
IHJlc291cmNlczoKCi0gW0hvdyBkbyBJIHJ1biBhIFVuaXggcHJvY2VzcyBp
biB0aGUgYmFja2dyb3VuZD9dKGh0dHBzOi8va2IuaXUuZWR1L2QvYWZueikK
LSBbSm9iIENvbnRyb2wgQ29tbWFuZHNdKGh0dHA6Ly90bGRwLm9yZy9MRFAv
YWJzL2h0bWwveDk2NDQuaHRtbCkKLSBbV2hhdCBpcy9hcmUgdGhlIGFkdmFu
dGFnZShzKSBvZiBydW5uaW5nIGFwcGxpY2F0aW9ucyBpbiBiYWNrZ3JvdW5k
P10oaHR0cHM6Ly91bml4LnN0YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy8x
NjIxODYvd2hhdC1pcy1hcmUtdGhlLWFkdmFudGFnZXMtb2YtcnVubmluZy1h
cHBsaWNhdGlvbnMtaW4tYmFja2dvdW5kKQoKPC9kZXRhaWxzPgoKPGRldGFp
bHM+CjxzdW1tYXJ5PjxiPkJlZm9yZSB5b3UgY2FuIG1hbmFnZSBwcm9jZXNz
ZXMsIHlvdSBtdXN0IGJlIGFibGUgdG8gaWRlbnRpZnkgdGhlbS4gV2hpY2gg
dG9vbHMgd2lsbCB5b3UgdXNlPyAqKio8L2I+PC9zdW1tYXJ5Pjxicj4KClRv
IGJlIGNvbXBsZXRlZC4KCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFy
eT48Yj5SdW5uaW5nIHRoZSBjb21tYW5kIGFzIHJvb3QgdXNlci4gSXQgaXMg
YSBnb29kIG9yIGJhZCBwcmFjdGljZXM/PC9iPjwvc3VtbWFyeT48YnI+CgpS
dW5uaW5nIChldmVyeXRoaW5nKSBhcyByb290IGlzIGJhZCBiZWNhdXNlOgoK
LSAqKlN0dXBpZGl0eSoqOiBub3RoaW5nIHByZXZlbnRzIHlvdSBmcm9tIG1h
a2luZyBhIGNhcmVsZXNzIG1pc3Rha2UuIElmIHlvdSB0cnkgdG8gY2hhbmdl
IHRoZSBzeXN0ZW0gaW4gYW55IHBvdGVudGlhbGx5IGhhcm1mdWwgd2F5LCB5
b3UgbmVlZCB0byB1c2Ugc3Vkbywgd2hpY2ggZW5zdXJlcyBhIHBhdXNlICh3
aGlsZSB5b3UncmUgZW50ZXJpbmcgdGhlIHBhc3N3b3JkKSB0byBlbnN1cmUg
dGhhdCB5b3UgYXJlbid0IGFib3V0IHRvIG1ha2UgYSBtaXN0YWtlLgoKLSAq
KlNlY3VyaXR5Kio6IGhhcmRlciB0byBoYWNrIGlmIHlvdSBkb24ndCBrbm93
IHRoZSBhZG1pbiB1c2VyJ3MgbG9naW4gYWNjb3VudC4gcm9vdCBtZWFucyB5
b3UgYWxyZWFkeSBoYXZlIG9uZSBoYWxmIG9mIHRoZSB3b3JraW5nIHNldCBv
ZiBhZG1pbiBjcmVkZW50aWFscy4KCi0gKipZb3UgZG9uJ3QgcmVhbGx5IG5l
ZWQgaXQqKjogaWYgeW91IG5lZWQgdG8gcnVuIHNldmVyYWwgY29tbWFuZHMg
YXMgcm9vdCwgYW5kIHlvdSdyZSBhbm5veWVkIGJ5IGhhdmluZyB0byBlbnRl
ciB5b3VyIHBhc3N3b3JkIHNldmVyYWwgdGltZXMgd2hlbiBgc3Vkb2AgaGFz
IGV4cGlyZWQsIGFsbCB5b3UgbmVlZCB0byBkbyBpcyBgc3VkbyAtaWAgYW5k
IHlvdSBhcmUgbm93IHJvb3QuIFdhbnQgdG8gcnVuIHNvbWUgY29tbWFuZHMg
dXNpbmcgcGlwZXM/IFRoZW4gdXNlIGBzdWRvIHNoIC1jICJjb21tYW5kMSB8
IGNvbW1hbmQyImAuCgotICoqWW91IGNhbiBhbHdheXMgdXNlIGl0IGluIHRo
ZSByZWNvdmVyeSBjb25zb2xlKio6IHRoZSByZWNvdmVyeSBjb25zb2xlIGFs
bG93cyB5b3UgdG8gcmVjb3ZlciBmcm9tIGEgbWFqb3IgbWlzdGFrZSwgb3Ig
Zml4IGEgcHJvYmxlbSBjYXVzZWQgYnkgYW4gYXBwICh3aGljaCB5b3Ugc3Rp
bGwgaGFkIHRvIHJ1biBhcyBgc3Vkb2ApLiBVYnVudHUgZG9lc24ndCBoYXZl
IGEgcGFzc3dvcmQgZm9yIHRoZSByb290IGFjY291bnQgaW4gdGhpcyBjYXNl
LCBidXQgeW91IGNhbiBzZWFyY2ggb25saW5lIGZvciBjaGFuZ2luZyB0aGF0
IC0gdGhpcyB3aWxsIG1ha2UgaXQgaGFyZGVyIGZvciBhbnlvbmUgdGhhdCBo
YXMgcGh5c2ljYWwgYWNjZXNzIHRvIHlvdXIgYm94IHRvIGJlIGFibGUgdG8g
ZG8gaGFybS4KClVzZWZ1bCByZXNvdXJjZXM6CgotIFtXaHkgaXMgaXQgYmFk
IHRvIGxvZyBpbiBhcyByb290PyAob3JpZ2luYWwpXShodHRwczovL2Fza3Vi
dW50dS5jb20vcXVlc3Rpb25zLzE2MTc4L3doeS1pcy1pdC1iYWQtdG8tbG9n
LWluLWFzLXJvb3QpCi0gW1doYXQncyB3cm9uZyB3aXRoIGFsd2F5cyBiZWlu
ZyByb290P10oaHR0cHM6Ly9zZXJ2ZXJmYXVsdC5jb20vcXVlc3Rpb25zLzU3
OTYyL3doYXRzLXdyb25nLXdpdGgtYWx3YXlzLWJlaW5nLXJvb3QpCi0gW1do
eSB5b3Ugc2hvdWxkIGF2b2lkIHJ1bm5pbmcgYXBwbGljYXRpb25zIGFzIHJv
b3RdKGh0dHBzOi8vYmVuY2FuZS5jb20vMjAxMi8wMi8yMC93aHkteW91LXNo
b3VsZC1hdm9pZC1ydW5uaW5nLWFwcGxpY2F0aW9ucy1hcy1yb290LykKCjwv
ZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5Ib3cgdG8gY2hlY2sg
bWVtb3J5IHN0YXRzIGFuZCBDUFUgc3RhdHM/PC9iPjwvc3VtbWFyeT48YnI+
CgpZb3UnZCB1c2UgYHRvcC9odG9wYCBmb3IgYm90aC4gVXNpbmcgYGZyZWVg
IGFuZCBgdm1zdGF0YCBjb21tYW5kIHdlIGNhbiBkaXNwbGF5IHRoZSBwaHlz
aWNhbCBhbmQgdmlydHVhbCBtZW1vcnkgc3RhdGlzdGljcyByZXNwZWN0aXZl
bHkuIFdpdGggdGhlIGhlbHAgb2YgYHNhcmAgY29tbWFuZCB3ZSBzZWUgdGhl
IENQVSB1dGlsaXphdGlvbiAmIG90aGVyIHN0YXRzIChidXQgYHNhcmAgaXNu
J3QgZXZlbiBpbnN0YWxsZWQgaW4gbW9zdCBzeXN0ZW1zKS4KClVzZWZ1bCBy
ZXNvdXJjZXM6CgotIFtIb3cgZG8gSSBGaW5kIE91dCBMaW51eCBDUFUgVXRp
bGl6YXRpb24/XShodHRwczovL3d3dy5jeWJlcmNpdGkuYml6L3RpcHMvaG93
LWRvLWktZmluZC1vdXQtbGludXgtY3B1LXV0aWxpemF0aW9uLmh0bWwpCi0g
WzE2IExpbnV4IHNlcnZlciBtb25pdG9yaW5nIGNvbW1hbmRzIHlvdSByZWFs
bHkgbmVlZCB0byBrbm93XShodHRwczovL3d3dy5ocGUuY29tL3VzL2VuL2lu
c2lnaHRzL2FydGljbGVzLzE2LWxpbnV4LXNlcnZlci1tb25pdG9yaW5nLWNv
bW1hbmRzLXlvdS1yZWFsbHktbmVlZC10by1rbm93LTE3MDMuaHRtbCkKCjwv
ZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5XaGF0IGlzIGxvYWQg
YXZlcmFnZT88L2I+PC9zdW1tYXJ5Pjxicj4KCkxpbnV4ICoqbG9hZCBhdmVy
YWdlcyoqIGFyZSAic3lzdGVtIGxvYWQgYXZlcmFnZXMiIHRoYXQgc2hvdyB0
aGUgcnVubmluZyB0aHJlYWQgKHRhc2spIGRlbWFuZCBvbiB0aGUgc3lzdGVt
IGFzIGFuIGF2ZXJhZ2UgbnVtYmVyIG9mIHJ1bm5pbmcgcGx1cyB3YWl0aW5n
IHRocmVhZHMuIFRoaXMgbWVhc3VyZXMgZGVtYW5kLCB3aGljaCBjYW4gYmUg
Z3JlYXRlciB0aGFuIHdoYXQgdGhlIHN5c3RlbSBpcyBjdXJyZW50bHkgcHJv
Y2Vzc2luZy4gTW9zdCB0b29scyBzaG93IHRocmVlIGF2ZXJhZ2VzLCBmb3Ig
MSwgNSwgYW5kIDE1IG1pbnV0ZXMuCgpUaGVzZSAzIG51bWJlcnMgYXJlIG5v
dCB0aGUgbnVtYmVycyBmb3IgdGhlIGRpZmZlcmVudCBDUFVzLiBUaGVzZSBu
dW1iZXJzIGFyZSBtZWFuIHZhbHVlcyBvZiB0aGUgbG9hZCBudW1iZXIgZm9y
IGEgZ2l2ZW4gcGVyaW9kIG9mIHRpbWUgKG9mIHRoZSBsYXN0IDEsIDUgYW5k
IDE1IG1pbnV0ZXMpLgoKKipMb2FkIGF2ZXJhZ2UqKiBpcyB1c3VhbGx5IGRl
c2NyaWJlZCBhcyAiYXZlcmFnZSBsZW5ndGggb2YgcnVuIHF1ZXVlIi4gU28g
ZmV3IENQVS1jb25zdW1pbmcgcHJvY2Vzc2VzIG9yIHRocmVhZHMgY2FuIHJh
aXNlICoqbG9hZCBhdmVyYWdlKiogYWJvdmUgMS4gVGhlcmUgaXMgbm8gcHJv
YmxlbSBpZiAqKmxvYWQgYXZlcmFnZSoqIGlzIGxlc3MgdGhhbiB0b3RhbCBu
dW1iZXIgb2YgQ1BVIGNvcmVzLiBCdXQgaWYgaXQgZ2V0cyBoaWdoZXIgdGhh
biBudW1iZXIgb2YgQ1BVcywgdGhpcyBtZWFucyBzb21lIHRocmVhZHMvcHJv
Y2Vzc2VzIHdpbGwgc3RheSBpbiBxdWV1ZSwgcmVhZHkgdG8gcnVuLCBidXQg
d2FpdGluZyBmb3IgZnJlZSBDUFUuCgpJdCBpcyBtZWFudCB0byBnaXZlIHlv
dSBhbiBpZGVhIG9mIHRoZSBzdGF0ZSBvZiB0aGUgc3lzdGVtLCBhdmVyYWdl
ZCBvdmVyIHNldmVyYWwgcGVyaW9kcyBvZiB0aW1lLiBTaW5jZSBpdCBpcyBh
dmVyYWdlZCwgaXQgdGFrZXMgdGltZSBmb3IgaXQgdG8gZ28gYmFjayB0byAw
IGFmdGVyIGEgaGVhdnkgbG9hZCB3YXMgcGxhY2VkIG9uIHRoZSBzeXN0ZW0u
CgpTb21lIGludGVycHJldGF0aW9uczoKCi0gaWYgdGhlIGF2ZXJhZ2VzIGFy
ZSAwLjAsIHRoZW4geW91ciBzeXN0ZW0gaXMgaWRsZQotIGlmIHRoZSAxIG1p
bnV0ZSBhdmVyYWdlIGlzIGhpZ2hlciB0aGFuIHRoZSA1IG9yIDE1IG1pbnV0
ZSBhdmVyYWdlcywgdGhlbiBsb2FkIGlzIGluY3JlYXNpbmcKLSBpZiB0aGUg
MSBtaW51dGUgYXZlcmFnZSBpcyBsb3dlciB0aGFuIHRoZSA1IG9yIDE1IG1p
bnV0ZSBhdmVyYWdlcywgdGhlbiBsb2FkIGlzIGRlY3JlYXNpbmcKLSBpZiB0
aGV5IGFyZSBoaWdoZXIgdGhhbiB5b3VyIENQVSBjb3VudCwgdGhlbiB5b3Ug
bWlnaHQgaGF2ZSBhIHBlcmZvcm1hbmNlIHByb2JsZW0gKGl0IGRlcGVuZHMp
CgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbTGludXggTG9hZCBBdmVyYWdlczog
U29sdmluZyB0aGUgTXlzdGVyeSAob3JpZ2luYWwpXShodHRwOi8vd3d3LmJy
ZW5kYW5ncmVnZy5jb20vYmxvZy8yMDE3LTA4LTA4L2xpbnV4LWxvYWQtYXZl
cmFnZXMuaHRtbCkKLSBbTGludXggbG9hZCBhdmVyYWdlIC0gdGhlIGRlZmlu
aXRpdmUgc3VtbWFyeV0oaHR0cDovL2Jsb2cuYW5ndWxvc29saWRvLnB0LzIw
MTUvMDQvbGludXgtbG9hZC1hdmVyYWdlLWRlZmluaXRpdmUtc3VtbWFyeS5o
dG1sKQotIFtIb3cgQ1BVIGxvYWQgYXZlcmFnZXMgd29yayAoYW5kIHVzaW5n
IHRoZW0gdG8gdHJpYWdlIHdlYnNlcnZlciBwZXJmb3JtYW5jZSEpXShodHRw
czovL2p2bnMuY2EvYmxvZy8yMDE2LzAyLzA3L2NwdS1sb2FkLWF2ZXJhZ2Vz
LykKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5XaGVyZSBp
cyBteSBwYXNzd29yZCBzdG9yZWQgb24gTGludXgvVW5peD88L2I+PC9zdW1t
YXJ5Pjxicj4KClRoZSBwYXNzd29yZHMgYXJlIG5vdCBzdG9yZWQgYW55d2hl
cmUgb24gdGhlIHN5c3RlbSBhdCBhbGwuIFdoYXQgaXMgc3RvcmVkIGluIGAv
ZXRjL3NoYWRvd2AgYXJlIHNvIGNhbGxlZCBoYXNoZXMgb2YgdGhlIHBhc3N3
b3Jkcy4KCkEgaGFzaCBvZiBzb21lIHRleHQgaXMgY3JlYXRlZCBieSBwZXJm
b3JtaW5nIGEgc28gY2FsbGVkIG9uZSB3YXkgZnVuY3Rpb24gb24gdGhlIHRl
eHQgKHBhc3N3b3JkKSwgdGh1cyBjcmVhdGluZyBhIHN0cmluZyB0byBjaGVj
ayBhZ2FpbnN0LiBCeSBkZXNpZ24gaXQgaXMgImltcG9zc2libGUiIChjb21w
dXRhdGlvbmFsbHkgaW5mZWFzaWJsZSkgdG8gcmV2ZXJzZSB0aGF0IHByb2Nl
c3MuCgpPbGRlciBVbml4IHZhcmlhbnRzIHN0b3JlZCB0aGUgZW5jcnlwdGVk
IHBhc3N3b3JkcyBpbiBgL2V0Yy9wYXNzd2RgIGFsb25nIHdpdGggb3RoZXIg
aW5mb3JtYXRpb24gYWJvdXQgZWFjaCBhY2NvdW50LgoKTmV3ZXIgb25lcyBz
aW1wbHkgaGF2ZSBhIGAqYCBpbiB0aGUgcmVsZXZhbnQgZmllbGQgaW4gYC9l
dGMvcGFzc3dkYCBhbmQgdXNlIGAvZXRjL3NoYWRvd2AgdG8gc3RvcmUgdGhl
IHBhc3N3b3JkLCBpbiBwYXJ0IHRvIGVuc3VyZSBub2JvZHkgZ2V0cyByZWFk
IGFjY2VzcyB0byB0aGUgcGFzc3dvcmRzIHdoZW4gdGhleSBvbmx5IG5lZWQg
dGhlIG90aGVyIHN0dWZmIChgc2hhZG93YCBpcyB1c3VhbGx5IHByb3RlY3Rl
ZCBtb3JlIHN0cm9uZ2x5IHRoYW4gYHBhc3N3ZGApLgoKRm9yIG1vcmUgaW5m
byBjb25zdWx0IGBtYW4gY3J5cHRgLCBgbWFuIHNoYWRvd2AsIGBtYW4gcGFz
c3dkYC4KClVzZWZ1bCByZXNvdXJjZXM6CgotIFtXaGVyZSBpcyBteSBwYXNz
d29yZCBzdG9yZWQgb24gTGludXg/XShodHRwczovL3NlY3VyaXR5LnN0YWNr
ZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy8zNzA1MC93aGVyZS1pcy1teS1wYXNz
d29yZC1zdG9yZWQtb24tbGludXgpCi0gW1doZXJlIGFyZSB0aGUgcGFzc3dv
cmRzIG9mIHRoZSB1c2VycyBsb2NhdGVkIGluIExpbnV4P10oaHR0cHM6Ly93
d3cuY3liZXJjaXRpLmJpei9mYXEvd2hlcmUtYXJlLXRoZS1wYXNzd29yZHMt
b2YtdGhlLXVzZXJzLWxvY2F0ZWQtaW4tbGludXgvKQotIFtMaW51eCBQYXNz
d29yZCAmIFNoYWRvdyBGaWxlIEZvcm1hdHNdKGh0dHBzOi8vd3d3LnRsZHAu
b3JnL0xEUC9sYW1lL0xBTUUvbGludXgtYWRtaW4tbWFkZS1lYXN5L3NoYWRv
dy1maWxlLWZvcm1hdHMuaHRtbCkKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8
c3VtbWFyeT48Yj5Ib3cgdG8gcmVjdXJzaXZlbHkgY2hhbmdlIHBlcm1pc3Np
b25zIGZvciBhbGwgZGlyZWN0b3JpZXMgZXhjZXB0IGZpbGVzIGFuZCBmb3Ig
YWxsIGZpbGVzIGV4Y2VwdCBkaXJlY3Rvcmllcz88L2I+PC9zdW1tYXJ5Pjxi
cj4KClRvIGNoYW5nZSBhbGwgdGhlIGRpcmVjdG9yaWVzIGUuZy4gdG8gKio3
NTUqKiAoYGRyd3hyLXhyLXhgKToKCmBgYGJhc2gKZmluZCAvb3B0L2RhdGEg
LXR5cGUgZCAtZXhlYyBjaG1vZCA3NTUge30gXDsKYGBgCgpUbyBjaGFuZ2Ug
YWxsIHRoZSBmaWxlcyBlLmcuIHRvICoqNjQ0KiogKGAtcnctci0tci0tYCk6
CgpgYGBiYXNoCmZpbmQgL29wdC9kYXRhIC10eXBlIGYgLWV4ZWMgY2htb2Qg
NjQ0IHt9IFw7CmBgYAoKVXNlZnVsIHJlc291cmNlczoKCi0gW0hvdyBkbyBJ
IHNldCBjaG1vZCBmb3IgYSBmb2xkZXIgYW5kIGFsbCBvZiBpdHMgc3ViZm9s
ZGVycyBhbmQgZmlsZXM/IChvcmlnaW5hbCldKGh0dHBzOi8vc3RhY2tvdmVy
Zmxvdy5jb20vcXVlc3Rpb25zLzM3NDAxNTIvaG93LWRvLWktc2V0LWNobW9k
LWZvci1hLWZvbGRlci1hbmQtYWxsLW9mLWl0cy1zdWJmb2xkZXJzLWFuZC1m
aWxlcz9ycT0xKQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5Pjxi
PkV2ZXJ5IGNvbW1hbmQgZmFpbHMgd2l0aCA8Y29kZT5jb21tYW5kIG5vdCBm
b3VuZDwvY29kZT4uIEhvdyB0byB0cmFjZSB0aGUgc291cmNlIG9mIHRoZSBl
cnJvciBhbmQgcmVzb2x2ZSBpdD88L2I+PC9zdW1tYXJ5Pjxicj4KCkl0IGxv
b2tzIHRoYXQgYXQgb25lIHBvaW50IG9yIGFub3RoZXIgYXJlIG92ZXJ3cml0
aW5nIHRoZSBkZWZhdWx0IGBQQVRIYCBlbnZpcm9ubWVudCB2YXJpYWJsZS4g
VGhlIHR5cGUgb2YgZXJyb3JzIHlvdSBoYXZlLCBpbmRpY2F0ZXMgdGhhdCBg
UEFUSGAgZG9lcyBub3QgY29udGFpbiBlLmcuIGAvYmluYCwgd2hlcmUgdGhl
IGNvbW1hbmRzIChpbmNsdWRpbmcgYmFzaCkgcmVzaWRlLgoKT25lIHdheSB0
byBiZWdpbiBkZWJ1Z2dpbmcgeW91ciBiYXNoIHNjcmlwdCBvciBjb21tYW5k
IHdvdWxkIGJlIHRvIHN0YXJ0IGEgc3Vic2hlbGwgd2l0aCB0aGUgYC14YCBv
cHRpb246CgpgYGBiYXNoCmJhc2ggLS1sb2dpbiAteApgYGAKClRoaXMgd2ls
bCBzaG93IHlvdSBldmVyeSBjb21tYW5kLCBhbmQgaXRzIGFyZ3VtZW50cywg
d2hpY2ggaXMgZXhlY3V0ZWQgd2hlbiBzdGFydGluZyB0aGF0IHNoZWxsLgoK
QWxzbyB2ZXJ5IGhlbHBmdWwgaXMgc2hvdyBgUEFUSGAgdmFyaWFibGUgdmFs
dWVzOgoKYGBgYmFzaAplY2hvICRQQVRICmBgYAoKSWYgeW91IHJ1biB0aGlz
OgoKYGBgYmFzaApQQVRIPS9iaW46L3NiaW46L3Vzci9iaW46L3Vzci9zYmlu
CmBgYAoKbW9zdCBjb21tYW5kcyBzaG91bGQgc3RhcnQgd29ya2luZyAtIGFu
ZCB0aGVuIHlvdSBjYW4gZWRpdCBgfi8uYmFzaF9wcm9maWxlYCBpbnN0ZWFk
IG9mIGB+Ly5iYXNocmNgIGFuZCBmaXggd2hhdGV2ZXIgaXMgcmVzZXR0aW5n
IGBQQVRIYCB0aGVyZS4gRGVmYXVsdCBgUEFUSGAgdmFyaWFibGUgdmFsdWVz
IGZvciAqKnJvb3QqKiBhbmQgb3RoZXIgdXNlcnMgaXMgaW4gYC9ldGMvcHJv
ZmlsZWAgZmlsZS4KClVzZWZ1bCByZXNvdXJjZToKCi0gW0hvdyB0byBjb3Jy
ZWN0bHkgYWRkIGEgcGF0aCB0byBQQVRIP10oaHR0cHM6Ly91bml4LnN0YWNr
ZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy8yNjA0Ny9ob3ctdG8tY29ycmVjdGx5
LWFkZC1hLXBhdGgtdG8tcGF0aCkKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8
c3VtbWFyeT48Yj5Zb3UgdHlwaW5nIDxjb2RlPkNUUkwgKyBDPC9jb2RlPiBi
dXQgeW91ciBzY3JpcHQgc3RpbGwgcnVubmluZy4gSG93IGRvIHlvdSBzdG9w
IGl0PyAqKio8L2I+PC9zdW1tYXJ5Pjxicj4KClRvIGJlIGNvbXBsZXRlZC4K
ClVzZWZ1bCByZXNvdXJjZXM6CgotIFtIb3cgdG8ga2lsbCBhIHNjcmlwdCBy
dW5uaW5nIGluIHRlcm1pbmFsLCB3aXRob3V0IGNsb3NpbmcgdGVybWluYWwg
KEN0cmwgKyBDIGRvZXNuJ3Qgd29yayk/IChvcmlnaW5hbCldKGh0dHBzOi8v
YXNrdWJ1bnR1LmNvbS9xdWVzdGlvbnMvNTIwMTA3L2hvdy10by1raWxsLWEt
c2NyaXB0LXJ1bm5pbmctaW4tdGVybWluYWwtd2l0aG91dC1jbG9zaW5nLXRl
cm1pbmFsLWN0cmwtYy1kb2UpCi0gW1doYXQncyB0aGUgZGlmZmVyZW5jZSBi
ZXR3ZWVuIF5DIGFuZCBeRCBmb3IgVW5peC9NYWMgT1MgWCB0ZXJtaW5hbD9d
KGh0dHBzOi8vc3VwZXJ1c2VyLmNvbS9xdWVzdGlvbnMvMTY5MDUxL3doYXRz
LXRoZS1kaWZmZXJlbmNlLWJldHdlZW4tYy1hbmQtZC1mb3ItdW5peC1tYWMt
b3MteC10ZXJtaW5hbCkKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFy
eT48Yj5XaGF0IGlzIDxjb2RlPmdyZXA8L2NvZGU+IGNvbW1hbmQ/IEhvdyB0
byBtYXRjaCBtdWx0aXBsZSBzdHJpbmdzIGluIHRoZSBzYW1lIGxpbmU/PC9i
Pjwvc3VtbWFyeT48YnI+CgpUaGUgYGdyZXBgIHV0aWxpdGllcyBhcmUgYSBm
YW1pbHkgb2YgVW5peCB0b29scywgaW5jbHVkaW5nIGBlZ3JlcGAgYW5kIGBm
Z3JlcGAuCgpgZ3JlcGAgc2VhcmNoZXMgZmlsZSBwYXR0ZXJucy4gSWYgeW91
IGFyZSBsb29raW5nIGZvciBhIHNwZWNpZmljIHBhdHRlcm4gaW4gdGhlIG91
dHB1dCBvZiBhbm90aGVyIGNvbW1hbmQsIGBncmVwYCBoaWdobGlnaHRzIHRo
ZSByZWxldmFudCBsaW5lcy4gVXNlIHRoaXMgZ3JlcCBjb21tYW5kIGZvciBz
ZWFyY2hpbmcgbG9nIGZpbGVzLCBzcGVjaWZpYyBwcm9jZXNzZXMsIGFuZCBt
b3JlLgoKRm9yIG1hdGNoIG11bHRpcGxlIHN0cmluZ3M6CgpgYGBiYXNoCmdy
ZXAgLUUgInN0cmluZzF8c3RyaW5nMiIgZmlsZW5hbWUKYGBgCgpvcgoKYGBg
YmFzaApncmVwIC1lICJzdHJpbmcxIiAtZSAic3RyaW5nMiIgZmlsZW5hbWUK
YGBgCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbV2hhdCBpcyBncmVwLCBhbmQg
aG93IGRvIEkgdXNlIGl0PyAob3JpZ2luYWwpXShodHRwczovL2tiLml1LmVk
dS9kL2FmaXkpCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+
RXhwbGFpbiB0aGUgZmlsZSBjb250ZW50IGNvbW1hbmRzIGFsb25nIHdpdGgg
dGhlIGRlc2NyaXB0aW9uLjwvYj48L3N1bW1hcnk+PGJyPgoKLSBgaGVhZGA6
IHRvIGNoZWNrIHRoZSBzdGFydGluZyBvZiBhIGZpbGUuCi0gYHRhaWxgOiB0
byBjaGVjayB0aGUgZW5kaW5nIG9mIHRoZSBmaWxlLiBJdCBpcyB0aGUgcmV2
ZXJzZSBvZiBoZWFkIGNvbW1hbmQuCi0gYGNhdGA6IHVzZWQgdG8gdmlldywg
Y3JlYXRlLCBjb25jYXRlbmF0ZSB0aGUgZmlsZXMuCi0gYG1vcmVgOiB1c2Vk
IHRvIGRpc3BsYXkgdGhlIHRleHQgaW4gdGhlIHRlcm1pbmFsIHdpbmRvdyBp
biBwYWdlciBmb3JtLgotIGBsZXNzYDogdXNlZCB0byB2aWV3IHRoZSB0ZXh0
IGluIHRoZSBiYWNrd2FyZCBkaXJlY3Rpb24gYW5kIGFsc28gcHJvdmlkZXMg
c2luZ2xlIGxpbmUgbW92ZW1lbnQuCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBb
Vmlld2luZyB0ZXh0IGZpbGVzIGZyb20gdGhlIHNoZWxsIHByb21wdF0oaHR0
cHM6Ly9hY2Nlc3MucmVkaGF0LmNvbS9kb2N1bWVudGF0aW9uL2VuLVVTL1Jl
ZF9IYXRfRW50ZXJwcmlzZV9MaW51eC80L2h0bWwvU3RlcF9ieV9TdGVwX0d1
aWRlL3MxLXZpZXdpbmd0ZXh0LXRlcm1pbmFsLmh0bWwpCgo8L2RldGFpbHM+
Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+U0lHSFVQLCBTSUdJTlQsIFNJR0tJ
TEwsIGFuZCBTSUdURVJNIFBPU0lYIHNpZ25hbHMuIEV4cGxhaW4uPC9iPjwv
c3VtbWFyeT48YnI+CgotICoqU0lHSFVQKiogLSBpcyBzZW50IHRvIGEgcHJv
Y2VzcyB3aGVuIGl0cyBjb250cm9sbGluZyB0ZXJtaW5hbCBpcyBjbG9zZWQu
IEl0IHdhcyBvcmlnaW5hbGx5IGRlc2lnbmVkIHRvIG5vdGlmeSB0aGUgcHJv
Y2VzcyBvZiBhIHNlcmlhbCBsaW5lIGRyb3AgKGEgaGFuZ3VwKS4gTWFueSBk
YWVtb25zIHdpbGwgcmVsb2FkIHRoZWlyIGNvbmZpZ3VyYXRpb24gZmlsZXMg
YW5kIHJlb3BlbiB0aGVpciBsb2dmaWxlcyBpbnN0ZWFkIG9mIGV4aXRpbmcg
d2hlbiByZWNlaXZpbmcgdGhpcyBzaWduYWwuCi0gKipTSUdJTlQqKiAtIGlz
IHNlbnQgdG8gYSBwcm9jZXNzIGJ5IGl0cyBjb250cm9sbGluZyB0ZXJtaW5h
bCB3aGVuIGEgdXNlciB3aXNoZXMgdG8gaW50ZXJydXB0IHRoZSBwcm9jZXNz
LiBUaGlzIGlzIHR5cGljYWxseSBpbml0aWF0ZWQgYnkgcHJlc3NpbmcgYEN0
cmwrQ2AsIGJ1dCBvbiBzb21lIHN5c3RlbXMsIHRoZSAiZGVsZXRlIiBjaGFy
YWN0ZXIgb3IgImJyZWFrIiBrZXkgY2FuIGJlIHVzZWQuCi0gKipTSUdLSUxM
KiogLSBpcyBzZW50IHRvIGEgcHJvY2VzcyB0byBjYXVzZSBpdCB0byB0ZXJt
aW5hdGUgaW1tZWRpYXRlbHkgKGtpbGwpLiBJbiBjb250cmFzdCB0byAqKlNJ
R1RFUk0qKiBhbmQgKipTSUdJTlQqKiwgdGhpcyBzaWduYWwgY2Fubm90IGJl
IGNhdWdodCBvciBpZ25vcmVkLCBhbmQgdGhlIHJlY2VpdmluZyBwcm9jZXNz
IGNhbm5vdCBwZXJmb3JtIGFueSBjbGVhbi11cCB1cG9uIHJlY2VpdmluZyB0
aGlzIHNpZ25hbC4KLSAqKlNJR1RFUk0qKiAtIGlzIHNlbnQgdG8gYSBwcm9j
ZXNzIHRvIHJlcXVlc3QgaXRzIHRlcm1pbmF0aW9uLiBVbmxpa2UgdGhlICoq
U0lHS0lMTCoqIHNpZ25hbCwgaXQgY2FuIGJlIGNhdWdodCBhbmQgaW50ZXJw
cmV0ZWQgb3IgaWdub3JlZCBieSB0aGUgcHJvY2Vzcy4gVGhpcyBhbGxvd3Mg
dGhlIHByb2Nlc3MgdG8gcGVyZm9ybSBuaWNlIHRlcm1pbmF0aW9uIHJlbGVh
c2luZyByZXNvdXJjZXMgYW5kIHNhdmluZyBzdGF0ZSBpZiBhcHByb3ByaWF0
ZS4gKipTSUdJTlQqKiBpcyBuZWFybHkgaWRlbnRpY2FsIHRvICoqU0lHVEVS
TSoqLgoKVXNlZnVsIHJlc291cmNlczoKCi0gW1BPU0lYIHNpZ25hbHNdKGh0
dHBzOi8vZHNhLmNzLnRzaW5naHVhLmVkdS5jbi9vai9zdGF0aWMvdW5peF9z
aWduYWwuaHRtbCkKLSBbSW50cm9kdWN0aW9uIFRvIFVuaXggU2lnbmFscyBQ
cm9ncmFtbWluZ10oaHR0cDovL3RpdGFuaWEuY3RpZS5tb25hc2guZWR1LmF1
L3NpZ25hbHMvKQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5Pjxi
PldoYXQgZG9lcyA8Y29kZT5raWxsPC9jb2RlPiBjb21tYW5kIGRvPzwvYj48
L3N1bW1hcnk+PGJyPgoKSW4gVW5peCBhbmQgVW5peC1saWtlIG9wZXJhdGlu
ZyBzeXN0ZW1zLCBga2lsbGAgaXMgYSBjb21tYW5kIHVzZWQgdG8gc2VuZCBh
IHNpZ25hbCB0byBhIHByb2Nlc3MuIEJ5IGRlZmF1bHQsIHRoZSBtZXNzYWdl
IHNlbnQgaXMgdGhlIHRlcm1pbmF0aW9uIHNpZ25hbCwgd2hpY2ggcmVxdWVz
dHMgdGhhdCB0aGUgcHJvY2VzcyBleGl0LiBCdXQgYGtpbGxgIGlzIHNvbWV0
aGluZyBvZiBhIG1pc25vbWVyOyB0aGUgc2lnbmFsIHNlbnQgbWF5IGhhdmUg
bm90aGluZyB0byBkbyB3aXRoIHByb2Nlc3Mga2lsbGluZy4KClVzZWZ1bCBy
ZXNvdXJjZXM6CgotIFtNYXN0ZXJpbmcgdGhlICJLaWxsIiBDb21tYW5kIGlu
IExpbnV4XShodHRwczovL3d3dy5tYWtldGVjaGVhc2llci5jb20va2lsbC1j
b21tYW5kLWluLWxpbnV4LykKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3Vt
bWFyeT48Yj5XaGF0IGlzIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gPGNvZGU+
cm08L2NvZGU+IGFuZCA8Y29kZT5ybSAtcmY8L2NvZGU+PzwvYj48L3N1bW1h
cnk+PGJyPgoKYHJtYCBvbmx5IGRlbGV0ZXMgdGhlIG5hbWVkIGZpbGVzIChh
bmQgbm90IGRpcmVjdG9yaWVzKS4gV2l0aCBgLXJmYCBhcyB5b3Ugc2F5OgoK
LSBgLXJgLCBgLVJgLCBgLS1yZWN1cnNpdmVgIHJlY3Vyc2l2ZWx5IGRlbGV0
ZXMgY29udGVudCBvZiBhIGRpcmVjdG9yeSwgaW5jbHVkaW5nIGhpZGRlbiBm
aWxlcyBhbmQgc3ViIGRpcmVjdG9yaWVzCi0gYC1mYCwgYC0tZm9yY2VgIGln
bm9yZSBub25leGlzdGVudCBmaWxlcywgbmV2ZXIgcHJvbXB0CgpVc2VmdWwg
cmVzb3VyY2VzOgoKLSBbV2hhdCBpcyB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVu
IGBybSAtcmAgYW5kIGBybSAtZmA/XShodHRwczovL3N1cGVydXNlci5jb20v
cXVlc3Rpb25zLzExMjYyMDYvd2hhdC1pcy10aGUtZGlmZmVyZW5jZS1iZXR3
ZWVuLXJtLXItYW5kLXJtLWYpCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1
bW1hcnk+PGI+SG93IGRvIEkgPGNvZGU+Z3JlcDwvY29kZT4gcmVjdXJzaXZl
bHk/IEV4cGxhaW4gb24gc2V2ZXJhbCBleGFtcGxlcy4gKioqPC9iPjwvc3Vt
bWFyeT4KClRvIGJlIGNvbXBsZXRlZC4KCjwvZGV0YWlscz4KCjxkZXRhaWxz
Pgo8c3VtbWFyeT48Yj48Y29kZT5hcmNoaXZlLnRnejwvY29kZT4gaGFzIH4z
MCBHQi4gSG93IGRvIHlvdSBsaXN0IGNvbnRlbnQgb2YgaXQgYW5kIGV4dHJh
Y3Qgb25seSBvbmUgZmlsZT88L2I+PC9zdW1tYXJ5Pjxicj4KCmBgYGJhc2gK
IyBsaXN0IG9mIGNvbnRlbnQKdGFyIHRmIGFyY2hpdmUudGd6CgojIGV4dHJh
Y3QgZmlsZQp0YXIgeGYgYXJjaGl2ZS50Z3ogZmlsZW5hbWUKYGBgCgpVc2Vm
dWwgcmVzb3VyY2VzOgoKLSBbTGlzdCB0aGUgY29udGVudHMgb2YgYSB0YXIg
b3IgdGFyLmd6IGZpbGVdKGh0dHBzOi8vd3d3LmN5YmVyY2l0aS5iaXovZmFx
L2xpc3QtdGhlLWNvbnRlbnRzLW9mLWEtdGFyLW9yLXRhcmd6LWZpbGUvKQot
IFtIb3cgdG8gZXh0cmFjdCBzcGVjaWZpYyBmaWxlKHMpIGZyb20gdGFyLmd6
XShodHRwczovL3VuaXguc3RhY2tleGNoYW5nZS5jb20vcXVlc3Rpb25zLzYx
NDYxL2hvdy10by1leHRyYWN0LXNwZWNpZmljLWZpbGVzLWZyb20tdGFyLWd6
KQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPkV4ZWN1dGUg
Y29tYmluZSBtdWx0aXBsZSBzaGVsbCBjb21tYW5kcyBpbiBvbmUgbGluZS48
L2I+PC9zdW1tYXJ5Pjxicj4KCklmIHlvdSB3YW50IHRvIGV4ZWN1dGUgZWFj
aCBjb21tYW5kIG9ubHkgaWYgdGhlIHByZXZpb3VzIG9uZSBzdWNjZWVkZWQs
IHRoZW4gY29tYmluZSB0aGVtIHVzaW5nIHRoZSBgJiZgIG9wZXJhdG9yOgoK
YGBgYmFzaApjZCAvbXlfZm9sZGVyICYmIHJtICouamFyICYmIHN2biBjbyBw
YXRoIHRvIHJlcG8gJiYgbXZuIGNvbXBpbGUgcGFja2FnZSBpbnN0YWxsCmBg
YAoKSWYgb25lIG9mIHRoZSBjb21tYW5kcyBmYWlscywgdGhlbiBhbGwgb3Ro
ZXIgY29tbWFuZHMgZm9sbG93aW5nIGl0IHdvbid0IGJlIGV4ZWN1dGVkLgoK
SWYgeW91IHdhbnQgdG8gZXhlY3V0ZSBhbGwgY29tbWFuZHMgcmVnYXJkbGVz
cyBvZiB3aGV0aGVyIHRoZSBwcmV2aW91cyBvbmVzIGZhaWxlZCBvciBub3Qs
IHNlcGFyYXRlIHRoZW0gd2l0aCBzZW1pY29sb25zOgoKYGBgYmFzaApjZCAv
bXlfZm9sZGVyOyBybSAqLmphcjsgc3ZuIGNvIHBhdGggdG8gcmVwbzsgbXZu
IGNvbXBpbGUgcGFja2FnZSBpbnN0YWxsCmBgYAoKSW4geW91ciBjYXNlLCBJ
IHRoaW5rIHlvdSB3YW50IHRoZSBmaXJzdCBjYXNlIHdoZXJlIGV4ZWN1dGlv
biBvZiB0aGUgbmV4dCBjb21tYW5kIGRlcGVuZHMgb24gdGhlIHN1Y2Nlc3Mg
b2YgdGhlIHByZXZpb3VzIG9uZS4KCllvdSBjYW4gYWxzbyBwdXQgYWxsIGNv
bW1hbmRzIGluIGEgc2NyaXB0IGFuZCBleGVjdXRlIHRoYXQgaW5zdGVhZDoK
CmBgYGJhc2gKIyEgL2Jpbi9zaApjZCAvbXlfZm9sZGVyIFwKJiYgcm0gKi5q
YXIgXAomJiBzdm4gY28gcGF0aCB0byByZXBvIFwKJiYgbXZuIGNvbXBpbGUg
cGFja2FnZSBpbnN0YWxsCmBgYAoKVXNlZnVsIHJlc291cmNlczoKCi0gW0V4
ZWN1dGUgY29tYmluZSBtdWx0aXBsZSBsaW51eCBjb21tYW5kcyBpbiBvbmUg
bGluZSAob3JpZ2luYWwpXShodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1
ZXN0aW9ucy8xMzA3NzI0MS9leGVjdXRlLWNvbWJpbmUtbXVsdGlwbGUtbGlu
dXgtY29tbWFuZHMtaW4tb25lLWxpbmUpCgo8L2RldGFpbHM+Cgo8ZGV0YWls
cz4KPHN1bW1hcnk+PGI+V2hhdCBzeW1ib2xpYyByZXByZXNlbnRhdGlvbiBj
YW4geW91IHBhc3MgdG8gPGNvZGU+Y2htb2Q8L2NvZGU+IHRvIGdpdmUgYWxs
IHVzZXJzIGV4ZWN1dGUgYWNjZXNzIHRvIGEgZmlsZSB3aXRob3V0IGFmZmVj
dGluZyBvdGhlciBwZXJtaXNzaW9ucz88L2I+PC9zdW1tYXJ5Pjxicj4KCmBg
YGJhc2gKY2htb2QgYSt4IC9wYXRoL3RvL2ZpbGUKYGBgCgotIGBhYCAtIGZv
ciBhbGwgdXNlcnMKLSBgeGAgLSBmb3IgZXhlY3V0aW9uIHBlcm1pc3Npb24K
LSBgcmAgLSBmb3IgcmVhZCBwZXJtaXNzaW9uCi0gYHdgIC0gZm9yIHdyaXRl
IHBlcm1pc3Npb24KClVzZWZ1bCByZXNvdXJjZXM6Ci0gW0hvdyB0byBTZXQg
RmlsZSBQZXJtaXNzaW9ucyBVc2luZyBjaG1vZF0oaHR0cHM6Ly93d3cud2Fz
aGluZ3Rvbi5lZHUvY29tcHV0aW5nL3VuaXgvcGVybWlzc2lvbnMuaHRtbCkK
LSBbV2hhdCBkb2VzICJjaG1vZCAreCB5b3VyX2ZpbGVfbmFtZSIgZG8gYW5k
IGhvdyBkbyBJIHVzZSBpdD9dKGh0dHBzOi8vYXNrdWJ1bnR1LmNvbS9xdWVz
dGlvbnMvNDQzNzg5L3doYXQtZG9lcy1jaG1vZC14LWZpbGVuYW1lLWRvLWFu
ZC1ob3ctZG8taS11c2UtaXQpCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1
bW1hcnk+PGI+SG93IGNhbiBJIHN5bmMgdHdvIGxvY2FsIGRpcmVjdG9yaWVz
PzwvYj48L3N1bW1hcnk+PGJyPgoKVG8gc3luYyB0aGUgY29udGVudHMgb2Yg
KipkaXIxKiogdG8gKipkaXIyKiogb24gdGhlIHNhbWUgc3lzdGVtLCB0eXBl
OgoKYGBgYmFzaApyc3luYyAtYXYgLS1wcm9ncmVzcyAtLWRlbGV0ZSBkaXIx
LyBkaXIyCmBgYAoKLSBgLWFgLCBgLS1hcmNoaXZlYCAtIGFyY2hpdmUgbW9k
ZQotIGAtLWRlbGV0ZWAgLSBkZWxldGUgZXh0cmFuZW91cyBmaWxlcyBmcm9t
IGRlc3QgZGlycwotIGAtdmAsIGAtLXZlcmJvc2VgIC0gdmVyYm9zZSBtb2Rl
IChpbmNyZWFzZSB2ZXJib3NpdHkpCi0gYC0tcHJvZ3Jlc3NgIC0gc2hvdyBw
cm9ncmVzcyBkdXJpbmcgdHJhbnNmZXIKClVzZWZ1bCByZXNvdXJjZXM6Cgot
IFtIb3cgY2FuIEkgc3luYyB0d28gbG9jYWwgZGlyZWN0b3JpZXM/IChvcmln
aW5hbF0oaHR0cHM6Ly91bml4LnN0YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9u
cy8zOTI1MzYvaG93LWNhbi1pLXN5bmMtdHdvLWxvY2FsLWRpcmVjdG9yaWVz
KQotIFtTeW5jaHJvbml6aW5nIGZvbGRlcnMgd2l0aCByc3luY10oaHR0cHM6
Ly93d3cuanZld2ViLm5ldC9lbi9hcmNoaXZlcy8yMDEwLzExL3N5bmNocm9u
aXppbmctZm9sZGVycy13aXRoLXJzeW5jLmh0bWwpCgo8L2RldGFpbHM+Cgo8
ZGV0YWlscz4KPHN1bW1hcnk+PGI+TWFueSBiYXNpYyBtYWludGVuYW5jZSB0
YXNrcyByZXF1aXJlIHlvdSB0byBlZGl0IGNvbmZpZyBmaWxlcy4gRXhwbGFp
biB3YXlzIHRvIHVuZG8gdGhlIGNoYW5nZXMgeW91IG1ha2UuPC9iPjwvc3Vt
bWFyeT48YnI+CgotIG1hbnVhbGx5IGJhY2t1cCBvZiBhIGZpbGUgYmVmb3Jl
IGVkaXRpbmcgKHdpdGggYnJhY2UgZXhwYW5zaW9uIGxpa2UgdGhpczogYGNw
IGZpbGVuYW1leywub3JpZ31gKQotIG1hbnVhbCBjb3B5IG9mIHRoZSBkaXJl
Y3Rvcnkgc3RydWN0dXJlIHdoZXJlIGZpbGUgaXMgc3RvcmVkIChlLmcuIGBj
cGAsIGByc3luY2Agb3IgYHRhcmApCi0gbWFrZSBhIGJhY2t1cCBvZiBvcmln
aW5hbCBmaWxlIGluIHlvdXIgZWRpdG9yIChlLmcuIHNldCBydWxlcyBpbiB5
b3VyIGVkaXRvciBjb25maWd1cmF0aW9uIGZpbGUpCi0gdGhlIGJlc3Qgc29s
dXRpb24gaXMgdG8gdXNlIGBnaXRgIChvciBhbnkgb3RoZXIgdmVyc2lvbiBj
b250cm9sKSB0byBrZWVwIHRyYWNrIG9mIGNvbmZpZ3VyYXRpb24gZmlsZXMg
KGUuZy4gYGV0Y2tlZXBlcmAgZm9yIGAvZXRjYCBkaXJlY3RvcnkpCgpVc2Vm
dWwgcmVzb3VyY2VzOgoKLSBbQmFja3VwIGZpbGUgd2l0aCAuYmFrIGJlZm9y
ZSBmaWxlbmFtZSBleHRlbnNpb25dKGh0dHBzOi8vdW5peC5zdGFja2V4Y2hh
bmdlLmNvbS9xdWVzdGlvbnMvNjYzNzYvYmFja3VwLWZpbGUtd2l0aC1iYWst
YmVmb3JlLWZpbGVuYW1lLWV4dGVuc2lvbikKLSBbSXMgaXQgYSBnb29kIGlk
ZWEgdG8gdXNlIGdpdCBmb3IgY29uZmlndXJhdGlvbiBmaWxlIHZlcnNpb24g
Y29udHJvbGxpbmc/XShodHRwczovL3N1cGVydXNlci5jb20vcXVlc3Rpb25z
LzEwMzcyMTEvaXMtaXQtYS1nb29kLWlkZWEtdG8tdXNlLWdpdC1mb3ItY29u
ZmlndXJhdGlvbi1maWxlLXZlcnNpb24tY29udHJvbGxpbmcpCgo8L2RldGFp
bHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+WW91IGhhdmUgdG8gZmluZCBh
bGwgZmlsZXMgbGFyZ2VyIHRoYW4gMjBNQi4gSG93IHlvdSBkbyBpdD88L2I+
PC9zdW1tYXJ5Pjxicj4KCmBgYGJhc2gKZmluZCAvIC10eXBlIGYgLXNpemUg
KzIwTQpgYGAKClVzZWZ1bCByZXNvdXJjZXM6CgotIFtIb3cgY2FuIEkgZmlu
ZCBmaWxlcyB0aGF0IGFyZSBiaWdnZXIvc21hbGxlciB0aGFuIHggYnl0ZXM/
XShodHRwczovL3N1cGVydXNlci5jb20vcXVlc3Rpb25zLzIwNDU2NC9ob3ct
Y2FuLWktZmluZC1maWxlcy10aGF0LWFyZS1iaWdnZXItc21hbGxlci10aGFu
LXgtYnl0ZXMpCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+
V2h5IGRvIHdlIHVzZSA8Y29kZT5zdWRvIHN1IC08L2NvZGU+IGFuZCBub3Qg
anVzdCA8Y29kZT5zdWRvIHN1PC9jb2RlPj88L2I+PC9zdW1tYXJ5Pjxicj4K
CmBzdWRvYCBpcyBpbiBtb3N0IG1vZGVybiBMaW51eCBkaXN0cmlidXRpb25z
IHdoZXJlIChidXQgbm90IGFsd2F5cykgdGhlIHJvb3QgdXNlciBpcyBkaXNh
YmxlZCBhbmQgaGFzIG5vIHBhc3N3b3JkIHNldC4gVGhlcmVmb3JlIHlvdSBj
YW5ub3Qgc3dpdGNoIHRvIHRoZSByb290IHVzZXIgd2l0aCBgc3VgICh5b3Ug
Y2FuIHRyeSkuIFlvdSBoYXZlIHRvIGNhbGwgYHN1ZG9gIHdpdGggcm9vdCBw
cml2aWxlZ2VzOiBgc3VkbyBzdWAuCgpgc3VgIGp1c3Qgc3dpdGNoZXMgdGhl
IHVzZXIsIHByb3ZpZGluZyBhIG5vcm1hbCBzaGVsbCB3aXRoIGFuIGVudmly
b25tZW50IG5lYXJseSB0aGUgc2FtZSBhcyB3aXRoIHRoZSBvbGQgdXNlci4K
CmBzdSAtYCBpbnZva2VzIGEgbG9naW4gc2hlbGwgYWZ0ZXIgc3dpdGNoaW5n
IHRoZSB1c2VyLiBBIGxvZ2luIHNoZWxsIHJlc2V0cyBtb3N0IGVudmlyb25t
ZW50IHZhcmlhYmxlcywgcHJvdmlkaW5nIGEgY2xlYW4gYmFzZS4KClVzZWZ1
bCByZXNvdXJjZXM6CgotIFtzdSB2cyBzdWRvIC1zIHZzIHN1ZG8gLWkgdnMg
c3VkbyBiYXNoXShodHRwczovL3VuaXguc3RhY2tleGNoYW5nZS5jb20vcXVl
c3Rpb25zLzM1MzM4L3N1LXZzLXN1ZG8tcy12cy1zdWRvLWktdnMtc3Vkby1i
YXNoKQotIFtXaHkgZG8gd2UgdXNlIHN1IC0gYW5kIG5vdCBqdXN0IHN1PyAo
b3JpZ2luYWwpXShodHRwczovL3VuaXguc3RhY2tleGNoYW5nZS5jb20vcXVl
c3Rpb25zLzcwMTMvd2h5LWRvLXdlLXVzZS1zdS1hbmQtbm90LWp1c3Qtc3Up
Cgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+SG93IHRvIGZp
bmQgZmlsZXMgdGhhdCBoYXZlIGJlZW4gbW9kaWZpZWQgb24geW91ciBzeXN0
ZW0gaW4gdGhlIHBhc3QgNjAgbWludXRlcz88L2I+PC9zdW1tYXJ5Pjxicj4K
CmBgYGJhc2gKZmluZCAvIC1tbWluIC02MCAtdHlwZSBmCmBgYAoKVXNlZnVs
IHJlc291cmNlczoKCi0gW0dldCBhbGwgZmlsZXMgbW9kaWZpZWQgaW4gbGFz
dCAzMCBkYXlzIGluIGEgZGlyZWN0b3J5IChvcmlnbmFsKV0oaHR0cHM6Ly9z
dGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMjMwNzAyNDUvZ2V0LWFsbC1m
aWxlcy1tb2RpZmllZC1pbi1sYXN0LTMwLWRheXMtaW4tYS1kaXJlY3Rvcnkp
Cgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+V2hhdCBhcmUg
dGhlIG1haW4gcmVhc29ucyBmb3Iga2VlcGluZyBvbGQgbG9nIGZpbGVzPzwv
Yj48L3N1bW1hcnk+PGJyPgoKVGhleSBhcmUgZXNzZW50aWFsIHRvIGludmVz
dGlnYXRlIGlzc3VlcyBvbiB0aGUgc3lzdGVtLiAqKkxvZyBtYW5hZ2VtZW50
KiogaXMgYWJzb2x1dGVseSBjcml0aWNhbCBmb3IgSVQgc2VjdXJpdHkuCgpT
ZXJ2ZXJzLCBmaXJld2FsbHMsIGFuZCBvdGhlciBJVCBlcXVpcG1lbnQga2Vl
cCBsb2cgZmlsZXMgdGhhdCByZWNvcmQgaW1wb3J0YW50IGV2ZW50cyBhbmQg
dHJhbnNhY3Rpb25zLiBUaGlzIGluZm9ybWF0aW9uIGNhbiBwcm92aWRlIGlt
cG9ydGFudCBjbHVlcyBhYm91dCBob3N0aWxlIGFjdGl2aXR5IGFmZmVjdGlu
ZyB5b3VyIG5ldHdvcmsgZnJvbSB3aXRoaW4gYW5kIHdpdGhvdXQuIExvZyBk
YXRhIGNhbiBhbHNvIHByb3ZpZGUgaW5mb3JtYXRpb24gZm9yIGlkZW50aWZ5
aW5nIGFuZCB0cm91Ymxlc2hvb3RpbmcgZXF1aXBtZW50IHByb2JsZW1zIGlu
Y2x1ZGluZyBjb25maWd1cmF0aW9uIHByb2JsZW1zIGFuZCBoYXJkd2FyZSBm
YWlsdXJlLgoKSXTigJlzIHlvdXIgc2VydmVy4oCZcyByZWNvcmQgb2Ygd2hv
4oCZcyBjb21lIHRvIHlvdXIgc2l0ZSwgd2hlbiwgYW5kIGV4YWN0bHkgd2hh
dCB0aGV5IGxvb2tlZCBhdC4gSXTigJlzIGluY3JlZGlibHkgZGV0YWlsZWQs
IHNob3dpbmc6CgotIHdoZXJlIGZvbGtzIGNhbWUgZnJvbQotIHdoYXQgYnJv
d3NlciB0aGV5IHdlcmUgdXNpbmcKLSBleGFjdGx5IHdoaWNoIGZpbGVzIHRo
ZXkgbG9va2VkIGF0Ci0gaG93IGxvbmcgaXQgdG9vayB0byBsb2FkIGVhY2gg
ZmlsZQotIGFuZCBhIHdob2xlIGJ1bmNoIG9mIG90aGVyIG5lcmR5IHN0dWZm
CgpGYWN0b3JzIHRvIGNvbnNpZGVyOgoKLSBsZWdhbCByZXF1aXJlbWVudHMg
Zm9yIHJldGVudGlvbiBvciBkZXN0cnVjdGlvbgotIGNvbXBhbnkgcG9saWNp
ZXMgZm9yIHJldGVudGlvbiBhbmQgZGVzdHJ1Y3Rpb24KLSBob3cgbG9uZyB0
aGUgbG9ncyBhcmUgdXNlZnVsCi0gd2hhdCBxdWVzdGlvbnMgeW91J3JlIGhv
cGluZyB0byBhbnN3ZXIgZnJvbSB0aGUgbG9ncwotIGhvdyBtdWNoIHNwYWNl
IHRoZXkgdGFrZSB1cAoKQnkgY29sbGVjdGluZyBhbmQgYW5hbHl6aW5nIGxv
Z3MsIHlvdSBjYW4gdW5kZXJzdGFuZCB3aGF0IHRyYW5zcGlyZXMgd2l0aGlu
IHlvdXIgbmV0d29yay4gRWFjaCBsb2cgZmlsZSBjb250YWlucyBtYW55IHBp
ZWNlcyBvZiBpbmZvcm1hdGlvbiB0aGF0IGNhbiBiZSBpbnZhbHVhYmxlLCBl
c3BlY2lhbGx5IGlmIHlvdSBrbm93IGhvdyB0byByZWFkIHRoZW0gYW5kIGFu
YWx5emUgdGhlbS4KClVzZWZ1bCByZXNvdXJjZXM6CgotIFtIb3cgbG9uZyBk
byB5b3Uga2VlcCBsb2cgZmlsZXM/XShodHRwczovL3NlcnZlcmZhdWx0LmNv
bS9xdWVzdGlvbnMvMTM1MzY1L2hvdy1sb25nLWRvLXlvdS1rZWVwLWxvZy1m
aWxlcykKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5XaGF0
IGlzIGFuIGluY3JlbWVudGFsIGJhY2t1cD88L2I+PC9zdW1tYXJ5Pjxicj4K
CkFuIGluY3JlbWVudGFsIGJhY2t1cCBpcyBhIHR5cGUgb2YgYmFja3VwIHRo
YXQgb25seSBjb3BpZXMgZmlsZXMgdGhhdCBoYXZlIGNoYW5nZWQgc2luY2Ug
dGhlIHByZXZpb3VzIGJhY2t1cC4KClVzZWZ1bCByZXNvdXJjZXM6CgotIFtX
aGF0IElzIEluY3JlbWVudGFsIEJhY2t1cD9dKGh0dHBzOi8vd3d3Lm5ha2l2
by5jb20vYmxvZy93aGF0LWlzLWluY3JlbWVudGFsLWJhY2t1cC8pCgo8L2Rl
dGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+V2hhdCBpcyBSQUlEPyBX
aGF0IGlzIFJBSUQwLCBSQUlEMSwgUkFJRDUsIFJBSUQ2LCBSQUlEMTA/IDwv
Yj48L3N1bW1hcnk+PGJyPgoKQSAqKlJBSUQqKiAoUmVkdW5kYW50IEFycmF5
IG9mIEluZXhwZW5zaXZlIERpc2tzKSBpcyBhIHRlY2hub2xvZ3kgdGhhdCBp
cyB1c2VkIHRvIGluY3JlYXNlIHRoZSBwZXJmb3JtYW5jZSBhbmQvb3IgcmVs
aWFiaWxpdHkgb2YgZGF0YSBzdG9yYWdlLgoKLSAqKlJBSUQwKio6IEFsc28g
a25vd24gYXMgZGlzayAqKnN0cmlwaW5nKiosIGlzIGEgdGVjaG5pcXVlIHRo
YXQgYnJlYWtzIHVwIGEgZmlsZSBhbmQgc3ByZWFkcyB0aGUgZGF0YSBhY3Jv
c3MgYWxsIHRoZSBkaXNrIGRyaXZlcyBpbiBhIFJBSUQgZ3JvdXAuIFRoZXJl
IGFyZSBubyBzYWZlZ3VhcmRzIGFnYWluc3QgZmFpbHVyZQotICoqUkFJRDEq
KjogQSBwb3B1bGFyIGRpc2sgc3Vic3lzdGVtIHRoYXQgaW5jcmVhc2VzIHNh
ZmV0eSBieSB3cml0aW5nIHRoZSBzYW1lIGRhdGEgb24gdHdvIGRyaXZlcy4g
Q2FsbGVkICIqKm1pcnJvcmluZyoqLCIgUkFJRCAxIGRvZXMgbm90IGluY3Jl
YXNlIHdyaXRlIHBlcmZvcm1hbmNlLCBidXQgcmVhZCBwZXJmb3JtYW5jZSBt
YXkgZXF1YWwgdXAgdG8gdGhlIHN1bSBvZiBlYWNoIGRpc2tzJyBwZXJmb3Jt
YW5jZS4gSG93ZXZlciwgaWYgb25lIGRyaXZlIGZhaWxzLCB0aGUgc2Vjb25k
IGRyaXZlIGlzIHVzZWQsIGFuZCB0aGUgZmFpbGVkIGRyaXZlIGlzIG1hbnVh
bGx5IHJlcGxhY2VkLiBBZnRlciByZXBsYWNlbWVudCwgdGhlIFJBSUQgY29u
dHJvbGxlciBkdXBsaWNhdGVzIHRoZSBjb250ZW50cyBvZiB0aGUgd29ya2lu
ZyBkcml2ZSBvbnRvIHRoZSBuZXcgb25lCi0gKipSQUlENSoqOiBJdCBpcyBk
aXNrIHN1YnN5c3RlbSB0aGF0IGluY3JlYXNlcyBzYWZldHkgYnkgY29tcHV0
aW5nIHBhcml0eSBkYXRhIGFuZCBpbmNyZWFzaW5nIHNwZWVkIGJ5IGludGVy
bGVhdmluZyBkYXRhIGFjcm9zcyB0aHJlZSBvciBtb3JlIGRyaXZlcyAoKipz
dHJpcGluZyoqKS4gVXBvbiBmYWlsdXJlIG9mIGEgc2luZ2xlIGRyaXZlLCBz
dWJzZXF1ZW50IHJlYWRzIGNhbiBiZSBjYWxjdWxhdGVkIGZyb20gdGhlIGRp
c3RyaWJ1dGVkIHBhcml0eSBzdWNoIHRoYXQgbm8gZGF0YSBpcyBsb3N0Ci0g
KipSQUlENioqOiBSQUlEIDYgZXh0ZW5kcyBSQUlEIDUgYnkgYWRkaW5nIGFu
b3RoZXIgcGFyaXR5IGJsb2NrLiBJdCByZXF1aXJlcyBhIG1pbmltdW0gb2Yg
Zm91ciBkaXNrcyBhbmQgY2FuIGNvbnRpbnVlIHRvIGV4ZWN1dGUgcmVhZCBh
bmQgd3JpdGUgb2YgYW55IHR3byBjb25jdXJyZW50IGRpc2sgZmFpbHVyZXMu
IFJBSUQgNiBkb2VzIG5vdCBoYXZlIGEgcGVyZm9ybWFuY2UgcGVuYWx0eSBm
b3IgcmVhZCBvcGVyYXRpb25zLCBidXQgaXQgZG9lcyBoYXZlIGEgcGVyZm9y
bWFuY2UgcGVuYWx0eSBvbiB3cml0ZSBvcGVyYXRpb25zIGJlY2F1c2Ugb2Yg
dGhlIG92ZXJoZWFkIGFzc29jaWF0ZWQgd2l0aCBwYXJpdHkgY2FsY3VsYXRp
b25zCi0gKipSQUlEMTAqKjogQWxzbyBrbm93biBhcyAqKlJBSUQgMSswKios
IGlzIGEgUkFJRCBjb25maWd1cmF0aW9uIHRoYXQgY29tYmluZXMgZGlzayBt
aXJyb3JpbmcgYW5kIGRpc2sgc3RyaXBpbmcgdG8gcHJvdGVjdCBkYXRhLiBJ
dCByZXF1aXJlcyBhIG1pbmltdW0gb2YgZm91ciBkaXNrcywgYW5kIHN0cmlw
ZXMgZGF0YSBhY3Jvc3MgbWlycm9yZWQgcGFpcnMuIEFzIGxvbmcgYXMgb25l
IGRpc2sgaW4gZWFjaCBtaXJyb3JlZCBwYWlyIGlzIGZ1bmN0aW9uYWwsIGRh
dGEgY2FuIGJlIHJldHJpZXZlZC4gSWYgdHdvIGRpc2tzIGluIHRoZSBzYW1l
IG1pcnJvcmVkIHBhaXIgZmFpbCwgYWxsIGRhdGEgd2lsbCBiZSBsb3N0IGJl
Y2F1c2UgdGhlcmUgaXMgbm8gcGFyaXR5IGluIHRoZSBzdHJpcGVkIHNldHMK
ClVzZWZ1bCByZXNvdXJjZXM6CgotIFtSQUlEXShodHRwczovL3d3dy5wcmVw
cmVzc3VyZS5jb20vbGlicmFyeS90ZWNobm9sb2d5L3JhaWQpCgo8L2RldGFp
bHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+SG93IGlzIGEgdXNlcuKAmXMg
ZGVmYXVsdCBncm91cCBkZXRlcm1pbmVkPyBIb3cgd291bGQgeW91IGNoYW5n
ZSBpdD8gPC9iPjwvc3VtbWFyeT48YnI+CgpgYGBiYXNoCnVzZXJhZGQgLW0g
LWcgaW5pdGlhbF9ncm91cCB1c2VybmFtZQpgYGAKCmAtZy8tLWdpZGA6IGRl
ZmluZXMgdGhlIGdyb3VwIG5hbWUgb3IgbnVtYmVyIG9mIHRoZSB1c2VyJ3Mg
aW5pdGlhbCBsb2dpbiBncm91cC4gSWYgc3BlY2lmaWVkLCB0aGUgZ3JvdXAg
bmFtZSBtdXN0IGV4aXN0OyBpZiBhIGdyb3VwIG51bWJlciBpcyBwcm92aWRl
ZCwgaXQgbXVzdCByZWZlciB0byBhbiBhbHJlYWR5IGV4aXN0aW5nIGdyb3Vw
LgoKSWYgbm90IHNwZWNpZmllZCwgdGhlIGJlaGF2aW91ciBvZiB1c2VyYWRk
IHdpbGwgZGVwZW5kIG9uIHRoZSBgVVNFUkdST1VQU19FTkFCYCB2YXJpYWJs
ZSBjb250YWluZWQgaW4gYC9ldGMvbG9naW4uZGVmc2AuIFRoZSBkZWZhdWx0
IGJlaGF2aW91ciAoYFVTRVJHUk9VUFNfRU5BQiB5ZXNgKSBpcyB0byBjcmVh
dGUgYSBncm91cCB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgdGhlIHVzZXJuYW1l
LCB3aXRoICoqR0lEKiogZXF1YWwgdG8gKipVSUQqKi4KClVzZWZ1bCByZXNv
dXJjZXM6CgotIFtIb3cgY2FuIEkgY2hhbmdlIGEgdXNlcidzIGRlZmF1bHQg
Z3JvdXAgaW4gTGludXg/XShodHRwczovL3VuaXguc3RhY2tleGNoYW5nZS5j
b20vcXVlc3Rpb25zLzI2Njc1L2hvdy1jYW4taS1jaGFuZ2UtYS11c2Vycy1k
ZWZhdWx0LWdyb3VwLWluLWxpbnV4KQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+
CjxzdW1tYXJ5PjxiPldoYXQgaXMgeW91ciBiZXN0IGNvbW1hbmQgbGluZSB0
ZXh0IGVkaXRvciBmb3IgZGFpbHkgd29ya2luZyBhbmQgc2NyaXB0aW5nPyAq
Kio8L2I+PC9zdW1tYXJ5Pjxicj4KClRvIGJlIGNvbXBsZXRlZC4KCjwvZGV0
YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5XaHkgd291bGQgeW91IHdh
bnQgdG8gbW91bnQgc2VydmVycyBpbiBhIHJhY2s/PC9iPjwvc3VtbWFyeT48
YnI+CgotIFByb3RlY3RpbmcgSGFyZHdhcmUKLSBQcm9wZXIgQ29vbGluZwot
IE9yZ2FuaXplZCBXb3Jrc3BhY2UKLSBCZXR0ZXIgUG93ZXIgTWFuYWdlbWVu
dAotIENsZWFuZXIgRW52aXJvbm1lbnQKClVzZWZ1bCByZXNvdXJjZXM6Cgot
IFs1IFJlYXNvbnMgdG8gUmFja21vdW50IFlvdXIgUENdKGh0dHBzOi8vd3d3
LnJhY2tzb2x1dGlvbnMuY29tL25ld3MvY3VzdG9tLXByb2plY3RzLzUtcmVh
c29ucy10by1yYWNrbW91bnQtcGMvKQoKPC9kZXRhaWxzPgoKIyMjIyMjIE5l
dHdvcmsgUXVlc3Rpb25zICgyMykKCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5E
cmF3IG1lIGEgc2ltcGxlIG5ldHdvcmsgZGlhZ3JhbTogeW91IGhhdmUgMjAg
c3lzdGVtcywgMSByb3V0ZXIsIDQgc3dpdGNoZXMsIDUgc2VydmVycywgYW5k
IGEgc21hbGwgSVAgYmxvY2suICoqKjwvYj48L3N1bW1hcnk+PGJyPgoKVG8g
YmUgY29tcGxldGVkLgoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5
PjxiPldoYXQgYXJlIHRoZSBtb3N0IGltcG9ydGFudCB0aGluZ3MgdG8gdW5k
ZXJzdGFuZCBhYm91dCB0aGUgT1NJIChvciBhbnkgb3RoZXIpIG1vZGVsPzwv
Yj48L3N1bW1hcnk+PGJyPgoKVGhlIG1vc3QgaW1wb3J0YW50IHRoaW5ncyB0
byB1bmRlcnN0YW5kIGFib3V0IHRoZSAqKk9TSSoqIChvciBhbnkgb3RoZXIp
IG1vZGVsIGFyZToKCi0gd2UgY2FuIGRpdmlkZSB1cCB0aGUgcHJvdG9jb2xz
IGludG8gbGF5ZXJzCi0gbGF5ZXJzIHByb3ZpZGUgZW5jYXBzdWxhdGlvbgot
IGxheWVycyBwcm92aWRlIGFic3RyYWN0aW9uCi0gbGF5ZXJzIGRlY291cGxl
IGZ1bmN0aW9ucyBmcm9tIG90aGVycwoKVXNlZnVsIHJlc291cmNlczoKCi0g
W09TSSBNb2RlbCBhbmQgTmV0d29ya2luZyBQcm90b2NvbHMgUmVsYXRpb25z
aGlwXShodHRwczovL25ldHdvcmtlbmdpbmVlcmluZy5zdGFja2V4Y2hhbmdl
LmNvbS9xdWVzdGlvbnMvNjM4MC9vc2ktbW9kZWwtYW5kLW5ldHdvcmtpbmct
cHJvdG9jb2xzLXJlbGF0aW9uc2hpcCkKCjwvZGV0YWlscz4KCjxkZXRhaWxz
Pgo8c3VtbWFyeT48Yj5XaGF0IGlzIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4g
YSBWTEFOIGFuZCBhIHN1Ym5ldD8gRG8geW91IG5lZWQgYSBWTEFOIHRvIHNl
dHVwIGEgc3VibmV0PzwvYj48L3N1bW1hcnk+PGJyPgoKKipWTEFOcyoqIGFu
ZCAqKnN1Ym5ldHMqKiBzb2x2ZSBkaWZmZXJlbnQgcHJvYmxlbXMuICoqVkxB
TnMqKiB3b3JrIGF0IExheWVyIDIsIHRoZXJlYnkgYWx0ZXJpbmcgYnJvYWRj
YXN0IGRvbWFpbnMgKGZvciBpbnN0YW5jZSkuIFdoZXJlYXMgKipzdWJuZXRz
KiogYXJlIExheWVyIDMgaW4gdGhlIGN1cnJlbnQgY29udGV4dC4KCioqU3Vi
bmV0KiogLSBpcyBhIHJhbmdlIG9mIElQIGFkZHJlc3NlcyBkZXRlcm1pbmVk
IGJ5IHBhcnQgb2YgYW4gYWRkcmVzcyAob2Z0ZW4gY2FsbGVkIHRoZSBuZXR3
b3JrIGFkZHJlc3MpIGFuZCBhIHN1Ym5ldCBtYXNrIChuZXRtYXNrKS4gRm9y
IGV4YW1wbGUsIGlmIHRoZSBuZXRtYXNrIGlzIGAyNTUuMjU1LjI1NS4wYCAo
b3IgYC8yNGAgZm9yIHNob3J0KSwgYW5kIHRoZSBuZXR3b3JrIGFkZHJlc3Mg
aXMgYDE5Mi4xNjguMTAuMGAsIHRoZW4gdGhhdCBkZWZpbmVzIGEgcmFuZ2Ug
b2YgSVAgYWRkcmVzc2VzIGAxOTIuMTY4LjEwLjBgIHRocm91Z2ggYDE5Mi4x
NjguMTAuMjU1YC4gU2hvcnRoYW5kIGZvciB3cml0aW5nIHRoYXQgaXMgYDE5
Mi4xNjguMTAuMC8yNGAuCgoqKlZMQU4qKiAtIGEgZ29vZCB3YXkgdG8gdGhp
bmsgb2YgdGhpcyBpcyAic3dpdGNoIHBhcnRpdGlvbmluZy4iIExldCdzIHNh
eSB5b3UgaGF2ZSBhbiA4IHBvcnQgc3dpdGNoIHRoYXQgaXMgVkxBTi1hYmxl
LiBZb3UgY2FuIGFzc2lnbiA0IHBvcnRzIHRvIG9uZSAqKlZMQU4qKiAoc2F5
IGBWTEFOIDFgKSBhbmQgNCBwb3J0cyB0byBhbm90aGVyICoqVkxBTioqIChz
YXkgYFZMQU4gMmApLiBgVkxBTiAxYCB3b24ndCBzZWUgYW55IG9mIGBWTEFO
IDInc2AgdHJhZmZpYyBhbmQgdmljZSB2ZXJzYSwgbG9naWNhbGx5LCB5b3Ug
bm93IGhhdmUgdHdvIHNlcGFyYXRlIHN3aXRjaGVzLiBOb3JtYWxseSBvbiBh
IHN3aXRjaCwgaWYgdGhlIHN3aXRjaCBoYXNuJ3Qgc2VlbiBhIE1BQyBhZGRy
ZXNzIGl0IHdpbGwgImZsb29kIiB0aGUgdHJhZmZpYyB0byBhbGwgb3RoZXIg
cG9ydHMuICoqVkxBTnMqKiBwcmV2ZW50IHRoaXMuCgpTdWJuZXQgaXMgbm90
aGluZyBtb3JlIHRoYW4gYW4gSVAgYWRkcmVzcyByYW5nZSBvZiBJUCBhZGRy
ZXNzZXMgdGhhdCBoZWxwIGhvc3RzIGNvbW11bmljYXRlIG92ZXIgbGF5ZXIg
MiBhbmQgMy4gRWFjaCBzdWJuZXQgZG9lcyBub3QgcmVxdWlyZSBpdHMgb3du
ICoqVkxBTioqLiAqKlZMQU5zKiogYXJlIGltcGxlbWVudGVkIGZvciBpc29s
YXRpb24gKGFyZSBzYW5kYm94IGZvciBsYXllciB0d28gY29tbXVuaWNhdGlv
biwgbm8gMiBzeXN0ZW1zIG9mIDIgZGlmZmVyZW50ICoqVkxBTnMqKiBtYXkg
Y29tbXVuaWNhdGUgYnV0IGl0IGNhbiBiZSBkb25lIHRocm91Z2ggKipJbnRl
ciBWTEFOIHJvdXRpbmcqKiksIGVhc2Ugb2YgbWFuYWdlbWVudCBhbmQgc2Vj
dXJpdHkuCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbV2hhdCBpcyB0aGUgZGlm
ZmVyZW5jZSBiZXR3ZWVuIGEgVkxBTiBhbmQgYSBzdWJuZXQ/IChvcmlnaW5h
bCldKGh0dHBzOi8vc3VwZXJ1c2VyLmNvbS9xdWVzdGlvbnMvMzUzNjY0L3do
YXQtaXMtdGhlLWRpZmZlcmVuY2UtYmV0d2Vlbi1hLXZsYW4tYW5kLWEtc3Vi
bmV0KQotIFtWTEFOUyB2cy4gc3VibmV0cyBmb3IgbmV0d29yayBzZWN1cml0
eSBhbmQgc2VnbWVudGF0aW9uXShodHRwczovL25ldHdvcmtlbmdpbmVlcmlu
Zy5zdGFja2V4Y2hhbmdlLmNvbS9xdWVzdGlvbnMvNDY4OTkvdmxhbnMtdnMt
c3VibmV0cy1mb3ItbmV0d29yay1zZWN1cml0eS1hbmQtc2VnbWVudGF0aW9u
KQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPkxpc3QgNSBj
b21tb24gbmV0d29yayBwb3J0cyB5b3Ugc2hvdWxkIGtub3cuPC9iPjwvc3Vt
bWFyeT48YnI+Cgo8dGFibGUgc3R5bGU9IndpZHRoOjEwMCUiPgogIDx0cj4K
ICAgIDx0aD5TRVJWSUNFPC90aD4KICAgIDx0aD5QT1JUPC90aD4KICA8L3Ry
PgogIDx0cj4KICAgIDx0ZD5TTVRQPC90ZD4KICAgIDx0ZD4yNTwvdGQ+CiAg
PC90cj4KICA8dHI+CiAgICA8dGQ+RlRQPC90ZD4KICAgIDx0ZD4yMCBmb3Ig
ZGF0YSB0cmFuc2ZlciBhbmQgMjEgZm9yIGNvbm5lY3Rpb24gZXN0YWJsaXNo
ZWQ8L3RkPgogIDwvdHI+CiAgPHRyPgogICAgPHRkPkROUzwvdGQ+CiAgICA8
dGQ+NTM8L3RkPgogIDwvdHI+CiAgPHRyPgogICAgPHRkPkRIQ1A8L3RkPgog
ICAgPHRkPjY3L1VEUCBmb3IgREhDUCBzZXJ2ZXIsIDY4L1VEUCBmb3IgREhD
UCBjbGllbnQ8L3RkPgogIDwvdHI+CiAgPHRyPgogICAgPHRkPlNTSDwvdGQ+
CiAgICA8dGQ+MjI8L3RkPgogIDwvdHI+CjwvdGFibGU+CgpVc2VmdWwgcmVz
b3VyY2VzOgoKLSBbUmVkIEhhdCBFbnRlcnByaXNlIExpbnV4IDQ6IFNlY3Vy
aXR5IEd1aWRlIC0gQ29tbW9uIFBvcnRzXShodHRwczovL3dlYi5taXQuZWR1
L3JoZWwtZG9jLzQvUkgtRE9DUy9yaGVsLXNnLWVuLTQvY2gtcG9ydHMuaHRt
bCkKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5XaGF0IFBP
UCBhbmQgSU1BUCBhcmUsIGFuZCBob3cgdG8gY2hvb3NlIHdoaWNoIG9mIHRo
ZW0geW91IHNob3VsZCBpbXBsZW1lbnQ/PC9iPjwvc3VtbWFyeT48YnI+CgpQ
T1AgYW5kIElNQVAgYXJlIGJvdGggcHJvdG9jb2xzIGZvciByZXRyaWV2aW5n
IG1lc3NhZ2VzIGZyb20gYSBtYWlsIHNlcnZlciB0byBhIG1haWwgY2xpZW50
LgoKKipQT1AqKiAoX1Bvc3QgT2ZmaWNlIFByb3RvY29sXykgdXNlcyBhIG9u
ZSB3YXkgcHVzaCBmcm9tIG1haWwgc2VydmVyIHRvIGNsaWVudC4gQnkgZGVm
YXVsdCB0aGlzIHdpbGwgc2VuZCBtZXNzYWdlcyB0byB0aGUgUE9QIG1haWwg
Y2xpZW50IGFuZCByZW1vdmUgdGhlbSBmcm9tIHRoZSBtYWlsIHNlcnZlciwg
dGhvdWdoIGl0IGlzIHBvc3NpYmxlIHRvIGNvbmZpZ3VyZSB0aGUgbWFpbCBz
ZXJ2ZXIgdG8gcmV0YWluIGFsbCBtZXNzYWdlcy4gQW55IGFjdGlvbnMgeW91
IHRha2Ugb24gdGhlIG1lc3NhZ2UgaW4geW91ciBtYWlsIGNsaWVudCAobGFi
ZWxpbmcsIGRlbGV0aW5nLCBtb3ZpbmcgdG8gYSBmb2xkZXIpIHdpbGwgbm90
IGJlIHJlZmxlY3RlZCBvbiB0aGUgbWFpbCBzZXJ2ZXIsIGFuZCB0aHVzIGlu
YWNjZXNzaWJsZSB0byBvdGhlciBtYWlsIGNsaWVudHMgcHVsbGluZyBmcm9t
IHRoZSBtYWlsIHNlcnZlci4gUE9QIHVzZXMgbGl0dGxlIHN0b3JhZ2Ugc3Bh
Y2Ugb24gdGhlIG1haWwgc2VydmVyIGFuZCBjYW4gYmUgc2VlbiBhcyBtb3Jl
IHNlY3VyZSBzaW5jZSBtZXNzYWdlcyBvbmx5IGV4aXN0IG9uIG9uZSBtYWls
IGNsaWVudCBpbnN0ZWFkIG9mIHRoZSBtYWlsIHNlcnZlciBhbmQgbXVsdGlw
bGUgY2xpZW50cy4KCioqSU1BUCoqIChfSW50ZXJuZXQgTWVzc2FnZSBBY2Nl
c3MgUHJvdG9jb2xfKSB1c2VzIHR3byB3YXkgY29tbXVuaWNhdGlvbiBiZXR3
ZWVuIG1haWwgc2VydmVyIGFuZCBjbGllbnQuIERlbGV0aW5nIG9yIGxhYmVs
aW5nIGEgbWVzc2FnZSBpbiB5b3VyIG1haWwgY2xpZW50IGNvbmZpZ3VyZWQg
d2l0aCBJTUFQIHdpbGwgYWxzbyBkZWxldGUgb3IgbGFiZWwgdGhlIG1lc3Nh
Z2Ugb24gdGhlIG1haWwgc2VydmVyLiBJTUFQIGFsbG93cyBmb3IgYSBzaW1p
bGFyIGV4cGVyaWVuY2Ugd2hlbiBhY2Nlc3NpbmcgbWFpbCBhY3Jvc3MgZGlm
ZmVyZW50IGNsaWVudHMgb3IgZGV2aWNlcyBzaW5jZSBtZXNzYWdlcyBjYW4g
ZXhpc3RpbmcgaW4gdGhlIHNhbWUgc3RhdGUgYWNyb3NzIG11bHRpcGxlIGRl
dmljZXMuIElNQVAgY2FuIGFsc28gc2F2ZSBkaXNrIHNwYWNlIG9uIHRoZSBt
YWlsIGNsaWVudCBieSBzZWxlY3RpdmVseSBzeW5jaW5nIG1lc3NhZ2VzLCBk
ZWxldGluZyBvbGRlciBtZXNzYWdlcyBmcm9tIHRoZSBtYWlsIGNsaWVudCBz
aW5jZSBpdCBjYW4gc3luYyB0aGVtIGZyb20gdGhlIG1haWwgc2VydmVyIGxh
dGVyIGFzIG5lZWRlZC4KCkNob29zZSBJTUFQIGlmIHlvdSBuZWVkIHRvIGFj
Y2VzcyBtZXNzYWdlcyBhY3Jvc3MgbXVsdGlwbGUgZGV2aWNlcyBhbmQgeW91
IHdhbnQgdG8gc2F2ZSBkaXNrIHNwYWNlIG9uIHlvdXIgY2xpZW50IGRldmlj
ZS4gQ2hvb3NlIFBPUCBpZiB5b3Ugd2FudCB0byBzYXZlIGRpc2sgc3BhY2Ug
b24geW91ciBtYWlsIHNlcnZlciwgb25seSBhY2Nlc3MgbWVzc2FnZXMgZnJv
bSBvbmUgY2xpZW50IGRldmljZSwgYW5kIGVuc3VyZSB0aGF0IG1lc3NhZ2Vz
IGRvIG5vdCBleGlzdCBvbiBtdWx0aXBsZSBzeXN0ZW1zLgoKPC9kZXRhaWxz
PgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPkhvdyB0byBjaGVjayBkZWZhdWx0
IHJvdXRlIGFuZCByb3V0aW5nIHRhYmxlPzwvYj48L3N1bW1hcnk+PGJyPgoK
VXNpbmcgdGhlIGNvbW1hbmRzIGBuZXRzdGF0IC1ucmAsIGByb3V0ZSAtbmAg
b3IgYGlwIHJvdXRlIHNob3dgIHdlIGNhbiBzZWUgdGhlIGRlZmF1bHQgcm91
dGUgYW5kIHJvdXRpbmcgdGFibGVzLgoKVXNlZnVsIHJlc291cmNlczoKCi0g
W0hvdyB0byBjaGVjayByb3V0ZXMgKHJvdXRpbmcgdGFibGUpIGluIGxpbnV4
XShodHRwczovL2hvd3RvLmxpbnRlbC5pbi9ob3ctdG8tY2hlY2stcm91dGVz
LXJvdXRpbmctdGFibGUtaW4tbGludXgvKQotIFtGcmVlQlNEIFNldCBhIERl
ZmF1bHQgUm91dGUvR2F0ZXdheV0oaHR0cHM6Ly93d3cuY3liZXJjaXRpLmJp
ei9mYXEvZnJlZWJzZC1zZXR1cC1kZWZhdWx0LXJvdXRpbmctd2l0aC1yb3V0
ZS1jb21tYW5kLykKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48
Yj5XaGF0IGlzIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gMTI3LjAuMC4xIGFu
ZCBsb2NhbGhvc3Q/PC9iPjwvc3VtbWFyeT48YnI+CgpXZWxsLCB0aGUgbW9z
dCBsaWtlbHkgZGlmZmVyZW5jZSBpcyB0aGF0IHlvdSBzdGlsbCBoYXZlIHRv
IGRvIGFuIGFjdHVhbCBsb29rdXAgb2YgbG9jYWxob3N0IHNvbWV3aGVyZS4K
CklmIHlvdSB1c2UgYDEyNy4wLjAuMWAsIHRoZW4gKGludGVsbGlnZW50KSBz
b2Z0d2FyZSB3aWxsIGp1c3QgdHVybiB0aGF0IGRpcmVjdGx5IGludG8gYW4g
SVAgYWRkcmVzcyBhbmQgdXNlIGl0LiBTb21lIGltcGxlbWVudGF0aW9ucyBv
ZiBgZ2V0aG9zdGJ5bmFtZWAgd2lsbCBkZXRlY3QgdGhlIGRvdHRlZCBmb3Jt
YXQgKGFuZCBwcmVzdW1hYmx5IHRoZSBlcXVpdmFsZW50IElQdjYgZm9ybWF0
KSBhbmQgbm90IGRvIGEgbG9va3VwIGF0IGFsbC4KCk90aGVyd2lzZSwgdGhl
IG5hbWUgaGFzIHRvIGJlIHJlc29sdmVkLiBBbmQgdGhlcmUncyBubyBndWFy
YW50ZWUgdGhhdCB5b3VyIGhvc3RzIGZpbGUgd2lsbCBhY3R1YWxseSBiZSB1
c2VkIGZvciB0aGF0IHJlc29sdXRpb24gKGZpcnN0LCBvciBhdCBhbGwpIHNv
IGBsb2NhbGhvc3RgIG1heSBiZWNvbWUgYSB0b3RhbGx5IGRpZmZlcmVudCBJ
UCBhZGRyZXNzLgoKQnkgdGhhdCBJIG1lYW4gdGhhdCwgb24gc29tZSBzeXN0
ZW1zLCBhIGxvY2FsIGhvc3RzIGZpbGUgY2FuIGJlIGJ5cGFzc2VkLiBUaGUg
YGhvc3QuY29uZmAgZmlsZSBjb250cm9scyB0aGlzIG9uIExpbnV4IChhbmQg
bWFueSBvdGhlciBVbmljZXMpLgoKSWYgeW91IHVzZSBhIFVuaXggZG9tYWlu
IHNvY2tldCBpdCdsbCBiZSBzbGlnaHRseSBmYXN0ZXIgdGhhbiB1c2luZyBU
Q1AvSVAgKGJlY2F1c2Ugb2YgdGhlIGxlc3Mgb3ZlcmhlYWQgeW91IGhhdmUp
LiBXaW5kb3dzIGlzIHVzaW5nIFRDUC9JUCBhcyBhIGRlZmF1bHQsIHdoZXJl
YXMgTGludXggdHJpZXMgdG8gdXNlIGEgVW5peCBEb21haW4gU29ja2V0IGlm
IHlvdSBjaG9vc2UgbG9jYWxob3N0IGFuZCBUQ1AvSVAgaWYgeW91IHRha2Ug
YDEyNy4wLjAuMWAuCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbV2hhdCBpcyB0
aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIDEyNy4wLjAuMSBhbmQgbG9jYWxob3N0
P10oaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNzM4MjYw
Mi93aGF0LWlzLXRoZS1kaWZmZXJlbmNlLWJldHdlZW4tMTI3LTAtMC0xLWFu
ZC1sb2NhbGhvc3QpCi0gW2xvY2FsaG9zdCB2cy4gMTI3LjAuMC4xXShodHRw
czovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8zNzE1OTI1L2xvY2Fs
aG9zdC12cy0xMjctMC0wLTEpCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1
bW1hcnk+PGI+V2hpY2ggcG9ydCBpcyB1c2VkIGZvciA8Y29kZT5waW5nPC9j
b2RlPiBjb21tYW5kPzwvYj48L3N1bW1hcnk+PGJyPgoKYHBpbmdgIHVzZXMg
KipJQ01QKiosIHNwZWNpZmljYWxseSAqKklDTVAgZWNobyByZXF1ZXN0Kiog
YW5kICoqSUNNUCBlY2hvIHJlcGx5KiogcGFja2V0cy4gVGhlcmUgaXMgbm8g
J3BvcnQnIGFzc29jaWF0ZWQgd2l0aCAqKklDTVAqKi4gUG9ydHMgYXJlIGFz
c29jaWF0ZWQgd2l0aCB0aGUgdHdvIElQIHRyYW5zcG9ydCBsYXllciBwcm90
b2NvbHMsIFRDUCBhbmQgVURQLiAqKklDTVAqKiwgVENQLCBhbmQgVURQIGFy
ZSAic2libGluZ3MiOyB0aGV5IGFyZSBub3QgYmFzZWQgb24gZWFjaCBvdGhl
ciwgYnV0IGFyZSB0aHJlZSBzZXBhcmF0ZSBwcm90b2NvbHMgdGhhdCBydW4g
b24gdG9wIG9mIElQLgoKKipJQ01QKiogcGFja2V0cyBhcmUgaWRlbnRpZmll
ZCBieSB0aGUgJ3Byb3RvY29sJyBmaWVsZCBpbiB0aGUgSVAgZGF0YWdyYW0g
aGVhZGVyLiAqKklDTVAqKiBkb2VzIG5vdCB1c2UgZWl0aGVyIFVEUCBvciBU
Q1AgY29tbXVuaWNhdGlvbnMgc2VydmljZXMsIGl0IHVzZXMgcmF3IElQIGNv
bW11bmljYXRpb25zIHNlcnZpY2VzLiBUaGlzIG1lYW5zIHRoYXQgdGhlICoq
SUNNUCoqIG1lc3NhZ2UgaXMgY2FycmllZCBkaXJlY3RseSBpbiBhbiBJUCBk
YXRhZ3JhbSBkYXRhIGZpZWxkLiBgcmF3YCBjb21lcyBmcm9tIGhvdyB0aGlz
IGlzIGltcGxlbWVudGVkIGluIHNvZnR3YXJlLCB0byBjcmVhdGUgYW5kIHNl
bmQgYW4gKipJQ01QKiogbWVzc2FnZSwgb25lIG9wZW5zIGEgYHJhd2Agc29j
a2V0LCBidWlsZHMgYSBidWZmZXIgY29udGFpbmluZyB0aGUgKipJQ01QKiog
bWVzc2FnZSwgYW5kIHRoZW4gd3JpdGVzIHRoZSBidWZmZXIgY29udGFpbmlu
ZyB0aGUgbWVzc2FnZSB0byB0aGUgcmF3IHNvY2tldC4KClRoZSBJUCBwcm90
b2NvbCB2YWx1ZSBmb3IgKipJQ01QKiogaXMgMS4gVGhlIHByb3RvY29sIGZp
ZWxkIGlzIHBhcnQgb2YgdGhlIElQIGhlYWRlciBhbmQgaWRlbnRpZmllcyB3
aGF0IGlzIGluIHRoZSBkYXRhIHBvcnRpb24gb2YgdGhlIElQIGRhdGFncmFt
LgoKSG93ZXZlciwgeW91IGNvdWxkIHVzZSBgbm1hcGAgdG8gc2VlIHdoZXRo
ZXIgcG9ydHMgYXJlIG9wZW4gb3Igbm90OgoKYGBgYmFzaApubWFwIC1wIDgw
IGV4YW1wbGUuY29tCmBgYAoKVXNlZnVsIHJlc291cmNlczoKCi0gW1Bpbmcg
UG9ydCBOdW1iZXJdKGh0dHBzOi8vbmV0d29ya2VuZ2luZWVyaW5nLnN0YWNr
ZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy80MjQ2My9waW5nLXBvcnQtbnVtYmVy
KQotIFtJcyBpdCBwb3NzaWJsZSB0byBwaW5nIGFuIGFkZHJlc3M6cG9ydD9d
KGh0dHBzOi8vc3VwZXJ1c2VyLmNvbS9xdWVzdGlvbnMvNzY5NTQxL2lzLWl0
LXBvc3NpYmxlLXRvLXBpbmctYW4tYWRkcmVzc3BvcnQpCgo8L2RldGFpbHM+
Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+U2VydmVyIEEgY2FuJ3QgdGFsayB0
byBTZXJ2ZXIgQi4gRGVzY3JpYmUgcG9zc2libGUgcmVhc29ucyBpbiBhIGZl
dyBzdGVwcy48L2I+PC9zdW1tYXJ5Pjxicj4KClRvIHRyb3VibGVzaG9vdCBj
b21tdW5pY2F0aW9uIHByb2JsZW1zIGJldHdlZW4gc2VydmVycywgaXQgaXMg
YmV0dGVyIHRvIGlkZWFsbHkgZm9sbG93IHRoZSBUQ1AvSVAgc3RhY2s6Cgox
LiAqKkFwcGxpY2F0aW9uIExheWVyKio6IGFyZSB0aGUgc2VydmljZXMgdXAg
YW5kIHJ1bm5pbmcgb24gYm90aCBzZXJ2ZXJzPyBBcmUgdGhleSBjb3JyZWN0
bHkgY29uZmlndXJlZCAoZWcuIGJpbmQgdGhlIGNvcnJlY3QgSVAgYW5kIGNv
cnJlY3QgcG9ydCk/IERvIGFwcGxpY2F0aW9uIGFuZCBzeXN0ZW0gbG9ncyBz
aG93IG1lYW5pbmdmdWwgZXJyb3JzPwoKMi4gKipUcmFuc3BvcnQgTGF5ZXIq
KjogYXJlIHRoZSBwb3J0cyB1c2VkIGJ5IHRoZSBhcHBsaWNhdGlvbiBvcGVu
ICh0cnkgdGVsbmV0ISk/IElzIGl0IHBvc3NpYmxlIHRvIHBpbmcgdGhlIHNl
cnZlcj8KCjMuICoqTmV0d29yayBMYXllcioqOiBpcyB0aGVyZSBhIGZpcmV3
YWxsIG9uIHRoZSBuZXR3b3JrIG9yIG9uIHRoZSBPUyBjb3JyZWN0bHkgY29u
ZmlndXJlZD8gSXMgdGhlIElQIHN0YWNrIGNvcnJlY3RseSBjb25maWd1cmVk
IChJUCwgcm91dGVzLCBkbnMsIGV0Yy4pPyBBcmUgc3dpdGNoZXMgYW5kIHJv
dXRlcnMgd29ya2luZyAoY2hlY2sgdGhlIEFSUCB0YWJsZSEpPwoKNC4gKipQ
aHlzaWNhbCBMYXllcioqOiBhcmUgdGhlIHNlcnZlcnMgY29ubmVjdGVkIHRv
IGEgbmV0d29yaz8gQXJlIHBhY2tldHMgYmVpbmcgbG9zdD8KCjwvZGV0YWls
cz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5XaHkgd29u4oCZdCB0aGUgaG9z
dG5hbWVzIHJlc29sdmUgb24geW91ciBzZXJ2ZXI/IEZpeCB0aGlzIGlzc3Vl
LiAqKio8L2I+PC9zdW1tYXJ5Pjxicj4KClRvIGJlIGNvbXBsZXRlZC4KCjwv
ZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5Ib3cgdG8gcmVzb2x2
ZSB0aGUgZG9tYWluIG5hbWUgKHVzaW5nIGV4dGVybmFsIGRucykgd2l0aCBD
TEk/IENhbiBJUHMgYmUgcmVzb2x2ZWQgdG8gZG9tYWluIG5hbWVzPzwvYj48
L3N1bW1hcnk+PGJyPgoKRXhhbXBsZXMgZm9yIHJlc29sdmUgSVAgYWRkcmVz
cyB0byBkb21haW4gbmFtZToKCmBgYGJhc2gKIyB3aXRoIGhvc3QgY29tbWFu
ZDoKaG9zdCBkb21haW4uY29tIDguOC44LjgKCiMgd2l0aCBkaWcgY29tbWFu
ZDoKZGlnIEA5LjkuOS45IGdvb2dsZS5jb20KCiMgd2l0aCBuc2xvb2t1cCBj
b21tYW5kOgpuc2xvb2t1cCBkb21haW4uY29tIDguOC44LjgKYGBgCgpZb3Ug
Y2FuIChzb21ldGltZXMpIHJlc29sdmUgYW4gSVAgQWRkcmVzcyBiYWNrIHRv
IGEgaG9zdG5hbWUuIElQIEFkZHJlc3MgY2FuIGJlIHN0b3JlZCBhZ2FpbnN0
IGEgKipQVFIqKiByZWNvcmQuIFlvdSBjYW4gdGhlbiBkbzoKCmBgYGJhc2gK
ZGlnIEEgPGhvc3RuYW1lPgpgYGAKClRvIGxvb2t1cCB0aGUgSVB2NCBhZGRy
ZXNzIGZvciBhIGhvc3QsIG9yOgoKYGBgYmFzaApkaWcgQUFBQSA8aG9zdG5h
bWU+CmBgYAoKVG8gbG9va3VwIHRoZSBJUHY2IGFkZHJlc3MgZm9yIGEgaG9z
dCwgb3I6CgpgYGBiYXNoCmRpZyBQVFIgWlpaLllZWS5YWFguV1dXLmluLWFk
ZHIuYXJwYS4KYGBgCgpUbyBsb29rdXAgdGhlIGhvc3RuYW1lIGZvciBJUHY0
IGFkZHJlc3MgYFdXVy5YWFguWVlZLlpaWmAgKG5vdGUgdGhlIG9jdGV0cyBh
cmUgcmV2ZXJzZWQpLCBvcjoKCmBgYGJhc2gKZGlnIFBUUiBiLmEuOS44Ljcu
Ni41LjAuMC4wLjAuMC4wLjAuMC4wLjAuMC4wLjAuMC4wLjAuMC44LmIuZC4w
LjEuMC4wLjIuaXA2LmFycGEuCmBgYAoKVXNlZnVsIHJlc291cmNlczoKCi0g
W0hvdyBjYW4gSSByZXNvbHZlIGEgaG9zdG5hbWUgdG8gYW4gSVAgYWRkcmVz
cyBpbiBhIEJhc2ggc2NyaXB0P10oaHR0cHM6Ly91bml4LnN0YWNrZXhjaGFu
Z2UuY29tL3F1ZXN0aW9ucy8yMDc4NC9ob3ctY2FuLWktcmVzb2x2ZS1hLWhv
c3RuYW1lLXRvLWFuLWlwLWFkZHJlc3MtaW4tYS1iYXNoLXNjcmlwdCkKLSBb
SG93IFRvIFJlc29sdmUgSVAgQWRkcmVzc2VzIFRvIERvbWFpbiBOYW1lcz9d
KGh0dHBzOi8vc3VwZXJ1c2VyLmNvbS9xdWVzdGlvbnMvMzE1Njg3L2hvdy10
by1yZXNvbHZlLWlwLWFkZHJlc3Nlcy10by1kb21haW4tbmFtZXMpCgo8L2Rl
dGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+SG93IHRvIHRlc3QgcG9y
dCBjb25uZWN0aXZpdHkgd2l0aCA8Y29kZT50ZWxuZXQ8L2NvZGU+IG9yIDxj
b2RlPm5jPC9jb2RlPj88L2I+PC9zdW1tYXJ5Pjxicj4KCmBgYGJhc2gKIyB3
aXRoIHRlbG5ldCBjb21tYW5kOgp0ZWxuZXQgY29kZTQyLmV4YW1wbGUuY29t
IDU0MzIKCiMgd2l0aCBuYyAobmV0Y2F0KSBjb21tYW5kOgpuYyAtdnogY29k
ZTQyLmV4YW1wbGUuY29tIDU0MzIKYGBgCgo8L2RldGFpbHM+Cgo8ZGV0YWls
cz4KPHN1bW1hcnk+PGI+V2h5IHNob3VsZCB5b3UgYXZvaWQgPGNvZGU+dGVs
bmV0PC9jb2RlPiB0byBhZG1pbmlzdGVyIGEgc3lzdGVtIHJlbW90ZWx5Pzwv
Yj48L3N1bW1hcnk+PGJyPgoKTW9kZXJuIG9wZXJhdGluZyBzeXN0ZW1zIGhh
dmUgdHVybmVkIG9mZiBhbGwgcG90ZW50aWFsbHkgaW5zZWN1cmUgc2Vydmlj
ZXMgYnkgZGVmYXVsdC4gT24gdGhlIG90aGVyIGhhbmQsIHNvbWUgdmVuZG9y
cyBvZiBuZXR3b3JrIGRldmljZXMgc3RpbGwgYWxsb3cgdG8gZXN0YWJsaXNo
IGNvbW11bmljYXRpb24gdXNpbmcgdGhlIHRlbG5ldCBwcm90b2NvbC4KCioq
VGVsbmV0KiogdXNlcyBtb3N0IGluc2VjdXJlIG1ldGhvZCBmb3IgY29tbXVu
aWNhdGlvbi4gSXQgc2VuZHMgZGF0YSBhY3Jvc3MgdGhlIG5ldHdvcmsgaW4g
cGxhaW4gdGV4dCBmb3JtYXQgYW5kIGFueWJvZHkgY2FuIGVhc2lseSBmaW5k
IG91dCB0aGUgcGFzc3dvcmQgdXNpbmcgdGhlIG5ldHdvcmsgdG9vbC4KCklu
IHRoZSBjYXNlIG9mICoqVGVsbmV0KiosIHRoZXNlIGluY2x1ZGUgdGhlIHBh
c3Npbmcgb2YgbG9naW4gY3JlZGVudGlhbHMgaW4gcGxhaW4gdGV4dCwgd2hp
Y2ggbWVhbnMgYW55b25lIHJ1bm5pbmcgYSBzbmlmZmVyIG9uIHlvdXIgbmV0
d29yayBjYW4gZmluZCB0aGUgaW5mb3JtYXRpb24gaGUgbmVlZHMgdG8gdGFr
ZSBjb250cm9sIG9mIGEgZGV2aWNlIGluIGEgZmV3IHNlY29uZHMgYnkgZWF2
ZXNkcm9wcGluZyBvbiBhICoqVGVsbmV0KiogbG9naW4gc2Vzc2lvbi4KClVz
ZWZ1bCByZXNvdXJjZXM6CgotIFtUZWxuZXQgYW5kIFNTSCBhcyBhIHNlY3Vy
ZSBhbHRlcm5hdGl2ZV0oaHR0cHM6Ly93d3cuc3NoLmNvbS9zc2gvdGVsbmV0
KQotIFtIb3cgdG8gdGVsbmV0IHRvIGFuIElQIGFkZHJlc3Mgb24gYSBzcGVj
aWZpYyBwb3J0P10oaHR0cHM6Ly9zdXBlcnVzZXIuY29tL3F1ZXN0aW9ucy8z
MzkxMDcvaG93LXRvLXRlbG5ldC10by1hbi1pcC1hZGRyZXNzLW9uLWEtc3Bl
Y2lmaWMtcG9ydCkKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48
Yj5XaGF0IGlzIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gPGNvZGU+d2dldDwv
Y29kZT4gYW5kIDxjb2RlPmN1cmw8L2NvZGU+PzwvYj48L3N1bW1hcnk+PGJy
PgoKVGhlIG1haW4gZGlmZmVyZW5jZXMgYXJlOiBgd2dldCdzYCBtYWpvciBz
dHJvbmcgc2lkZSBjb21wYXJlZCB0byBgY3VybGAgaXMgaXRzIGFiaWxpdHkg
dG8gZG93bmxvYWQgcmVjdXJzaXZlbHkuIGB3Z2V0YCBpcyBjb21tYW5kIGxp
bmUgb25seS4gYGN1cmxgIHN1cHBvcnRzIEZUUCwgRlRQUywgSFRUUCwgSFRU
UFMsIFNDUCwgU0ZUUCwgVEZUUCwgVEVMTkVULCBESUNULCBMREFQLCBMREFQ
UywgRklMRSwgUE9QMywgSU1BUCwgU01UUCwgUlRNUCBhbmQgUlRTUC4KClVz
ZWZ1bCByZXNvdXJjZXM6CgotIFtXaGF0IGlzIHRoZSBkaWZmZXJlbmNlIGJl
dHdlZW4gY3VybCBhbmQgd2dldD8gKG9yaWdpbmFsKV0oaHR0cHM6Ly91bml4
LnN0YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy80NzQzNC93aGF0LWlzLXRo
ZS1kaWZmZXJlbmNlLWJldHdlZW4tY3VybC1hbmQtd2dldCkKCjwvZGV0YWls
cz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5XaGF0IGlzIFNTSCBhbmQgaG93
IGRvZXMgaXQgd29yaz88L2I+PC9zdW1tYXJ5Pjxicj4KCioqU1NIKiogc3Rh
bmRzIGZvciAqKlNlY3VyZSBTaGVsbCoqLiBJdCBpcyBhIHByb3RvY29sIHRo
YXQgbGV0cyB5b3UgZHJvcCBmcm9tIGEgc2VydmVyICJBIiBpbnRvIGEgc2hl
bGwgc2Vzc2lvbiB0byBhIHNlcnZlciAiQiIuIEl0IGFsbG93cyB5b3UgaW50
ZXJhY3Qgd2l0aCB5b3VyIHNlcnZlciAiQiIuCgpBbiAqKlNTSCoqIGNvbm5l
Y3Rpb24gdG8gYmUgZXN0YWJsaXNoZWQsIHRoZSByZW1vdGUgbWFjaGluZSAo
c2VydmVyIEEpIG11c3QgYmUgcnVubmluZyBhIHBpZWNlIG9mIHNvZnR3YXJl
IGNhbGxlZCBhbiAqKlNTSCoqIGRhZW1vbiBhbmQgdGhlIHVzZXIncyBjb21w
dXRlciAoc2VydmVyIEIpIG11c3QgaGF2ZSBhbiAqKlNTSCoqIGNsaWVudC4K
ClRoZSAqKlNTSCoqIGRhZW1vbiBhbmQgKipTU0gqKiBjbGllbnQgbGlzdGVu
IGZvciBjb25uZWN0aW9ucyBvbiBhIHNwZWNpZmljIG5ldHdvcmsgcG9ydCAo
ZGVmYXVsdCAyMiksIGF1dGhlbnRpY2F0ZXMgY29ubmVjdGlvbiByZXF1ZXN0
cywgYW5kIHNwYXducyB0aGUgYXBwcm9wcmlhdGUgZW52aXJvbm1lbnQgaWYg
dGhlIHVzZXIgcHJvdmlkZXMgdGhlIGNvcnJlY3QgY3JlZGVudGlhbHMuCgpV
c2VmdWwgcmVzb3VyY2VzOgoKLSBbVW5kZXJzdGFuZGluZyB0aGUgU1NIIEVu
Y3J5cHRpb24gYW5kIENvbm5lY3Rpb24gUHJvY2Vzc10oaHR0cHM6Ly93d3cu
ZGlnaXRhbG9jZWFuLmNvbS9jb21tdW5pdHkvdHV0b3JpYWxzL3VuZGVyc3Rh
bmRpbmctdGhlLXNzaC1lbmNyeXB0aW9uLWFuZC1jb25uZWN0aW9uLXByb2Nl
c3MpCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+TW9zdCB0
dXRvcmlhbHMgc3VnZ2VzdCB1c2luZyBTU0gga2V5IGF1dGhlbnRpY2F0aW9u
IHJhdGhlciB0aGFuIHBhc3N3b3JkIGF1dGhlbnRpY2F0aW9uLiBXaHkgaXQg
aXMgY29uc2lkZXJlZCBtb3JlIHNlY3VyZT88L2I+PC9zdW1tYXJ5Pjxicj4K
CkFuICoqU1NIIGtleSoqIGlzIGFuIGFjY2VzcyBjcmVkZW50aWFsIGluIHRo
ZSBTU0ggcHJvdG9jb2wuIEl0cyBmdW5jdGlvbiBpcyBzaW1pbGFyIHRvIHRo
YXQgb2YgdXNlciBuYW1lcyBhbmQgcGFzc3dvcmRzLCBidXQgdGhlIGtleXMg
YXJlIHByaW1hcmlseSB1c2VkIGZvciBhdXRvbWF0ZWQgcHJvY2Vzc2VzIGFu
ZCBmb3IgaW1wbGVtZW50aW5nIHNpbmdsZSBzaWduLW9uIGJ5IHN5c3RlbSBh
ZG1pbmlzdHJhdG9ycyBhbmQgcG93ZXIgdXNlcnMuCgpJbnN0ZWFkIG9mIHJl
cXVpcmluZyBhIHVzZXIncyBwYXNzd29yZCwgaXQgaXMgcG9zc2libGUgdG8g
Y29uZmlybSB0aGUgY2xpZW50J3MgaWRlbnRpdHkgYnkgdXNpbmcgYXN5bW1l
dHJpYyBjcnlwdG9ncmFwaHkgYWxnb3JpdGhtcywgd2l0aCBwdWJsaWMgYW5k
IHByaXZhdGUga2V5cy4KCklmIHlvdXIgU1NIIHNlcnZpY2Ugb25seSBhbGxv
d3MgcHVibGljLWtleSBhdXRoZW50aWNhdGlvbiwgYW4gYXR0YWNrZXIgbmVl
ZHMgYSBjb3B5IG9mIGEgcHJpdmF0ZSBrZXkgY29ycmVzcG9uZGluZyB0byBh
IHB1YmxpYyBrZXkgc3RvcmVkIG9uIHRoZSBzZXJ2ZXIuCgpJZiB5b3VyIFNT
SCBzZXJ2aWNlIGFsbG93cyBwYXNzd29yZCBiYXNlZCBhdXRoZW50aWNhdGlv
biwgdGhlbiB5b3VyIEludGVybmV0IGNvbm5lY3RlZCBTU0ggc2VydmVyIHdp
bGwgYmUgaGFtbWVyZWQgZGF5IGFuZCBuaWdodCBieSBib3QtbmV0cyB0cnlp
bmcgdG8gZ3Vlc3MgdXNlci1uYW1lcyBhbmQgcGFzc3dvcmRzLiBUaGUgYm90
IG5ldCBuZWVkcyBubyBpbmZvcm1hdGlvbiwgaXQgY2FuIGp1c3QgdHJ5IHBv
cHVsYXIgbmFtZXMgYW5kIHBvcHVsYXIgcGFzc3dvcmRzLiBBcGFydCBmcm9t
IGFueXRoaW5nIGVsc2UgdGhpcyBjbG9ncyB5b3VyIGxvZ3MuCgpVc2VmdWwg
cmVzb3VyY2VzOgoKLSBbS2V5LUJhc2VkIEF1dGhlbnRpY2F0aW9uIChQdWJs
aWMgS2V5IEF1dGhlbnRpY2F0aW9uKV0oaHR0cDovL3d3dy5jcnlwdG8taXQu
bmV0L2VuZy90b29scy9rZXktYmFzZWQtYXV0aGVudGljYXRpb24uaHRtbCkK
LSBbU1NIIHBhc3N3b3JkIHZzLiBrZXkgYXV0aGVudGljYXRpb25dKGh0dHBz
Oi8vc2VjdXJpdHkuc3RhY2tleGNoYW5nZS5jb20vcXVlc3Rpb25zLzMzMzgx
L3NzaC1wYXNzd29yZC12cy1rZXktYXV0aGVudGljYXRpb24pCgo8L2RldGFp
bHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+V2hhdCBpcyBhIHBhY2tldCBm
aWx0ZXIgYW5kIGhvdyBkb2VzIGl0IHdvcms/PC9iPjwvc3VtbWFyeT48YnI+
CgoqKlBhY2tldCBmaWx0ZXJpbmcqKiBpcyBhIGZpcmV3YWxsIHRlY2huaXF1
ZSB1c2VkIHRvIGNvbnRyb2wgbmV0d29yayBhY2Nlc3MgYnkgbW9uaXRvcmlu
ZyBvdXRnb2luZyBhbmQgaW5jb21pbmcgcGFja2V0cyBhbmQgYWxsb3dpbmcg
dGhlbSB0byBwYXNzIG9yIGhhbHQgYmFzZWQgb24gdGhlIHNvdXJjZSBhbmQg
ZGVzdGluYXRpb24gSW50ZXJuZXQgUHJvdG9jb2wgKElQKSBhZGRyZXNzZXMs
IHByb3RvY29scyBhbmQgcG9ydHMuCgpQYWNrZXQgZmlsdGVyaW5nIGlzIGFw
cHJvcHJpYXRlIHdoZXJlIHRoZXJlIGFyZSBtb2Rlc3Qgc2VjdXJpdHkgcmVx
dWlyZW1lbnRzLiBUaGUgaW50ZXJuYWwgKHByaXZhdGUpIG5ldHdvcmtzIG9m
IG1hbnkgb3JnYW5pemF0aW9ucyBhcmUgbm90IGhpZ2hseSBzZWdtZW50ZWQu
IEhpZ2hseSBzb3BoaXN0aWNhdGVkIGZpcmV3YWxscyBhcmUgbm90IG5lY2Vz
c2FyeSBmb3IgaXNvbGF0aW5nIG9uZSBwYXJ0IG9mIHRoZSBvcmdhbml6YXRp
b24gZnJvbSBhbm90aGVyLgoKSG93ZXZlciBpdCBpcyBwcnVkZW50IHRvIHBy
b3ZpZGUgc29tZSBzb3J0IG9mIHByb3RlY3Rpb24gb2YgdGhlIHByb2R1Y3Rp
b24gbmV0d29yayBmcm9tIGEgbGFiIG9yIGV4cGVyaW1lbnRhbCBuZXR3b3Jr
LiBBIHBhY2tldCBmaWx0ZXJpbmcgZGV2aWNlIGlzIGEgdmVyeSBhcHByb3By
aWF0ZSBtZWFzdXJlIGZvciBwcm92aWRpbmcgaXNvbGF0aW9uIG9mIG9uZSBz
dWJuZXQgZnJvbSBhbm90aGVyLgoKT3BlcmF0aW5nIGF0IHRoZSBuZXR3b3Jr
IGxheWVyIGFuZCB0cmFuc3BvcnQgbGF5ZXIgb2YgdGhlIFRDUC9JUCBwcm90
b2NvbCBzdGFjaywgZXZlcnkgcGFja2V0IGlzIGV4YW1pbmVkIGFzIGl0IGVu
dGVycyB0aGUgcHJvdG9jb2wgc3RhY2suIFRoZSBuZXR3b3JrIGFuZCB0cmFu
c3BvcnQgaGVhZGVycyBhcmUgZXhhbWluZWQgY2xvc2VseSBmb3IgdGhlIGZv
bGxvd2luZyBpbmZvcm1hdGlvbjoKCi0gKipwcm90b2NvbCAoSVAgaGVhZGVy
LCBuZXR3b3JrIGxheWVyKSoqIC0gaW4gdGhlIElQIGhlYWRlciwgYnl0ZSA5
IChyZW1lbWJlciB0aGUgYnl0ZSBjb3VudCBiZWdpbnMgd2l0aCB6ZXJvKSBp
ZGVudGlmaWVzIHRoZSBwcm90b2NvbCBvZiB0aGUgcGFja2V0LiBNb3N0IGZp
bHRlciBkZXZpY2VzIGhhdmUgdGhlIGNhcGFiaWxpdHkgdG8gZGlmZmVyZW50
aWF0ZSBiZXR3ZWVuIFRDUCwgVVBELCBhbmQgSUNNUC4KLSAqKnNvdXJjZSBh
ZGRyZXNzIChJUCBoZWFkZXIsIG5ldHdvcmsgbGF5ZXIpKiogLSB0aGUgc291
cmNlIGFkZHJlc3MgaXMgdGhlIDMyLWJpdCBJUCBhZGRyZXNzIG9mIHRoZSBo
b3N0IHdoaWNoIGNyZWF0ZWQgdGhlIHBhY2tldC4KLSAqKmRlc3RpbmF0aW9u
IGFkZHJlc3MgKElQIGhlYWRlciwgbmV0d29yayBsYXllcikqKiAtIHRoZSBk
ZXN0aW5hdGlvbiBhZGRyZXNzIGlzIHRoZSAzMi1iaXQgSVAgYWRkcmVzcyBv
ZiB0aGUgaG9zdCB0aGUgcGFja2V0IGlzIGRlc3RpbmVkIGZvci4KLSAqKnNv
dXJjZSBwb3J0IChUQ1Agb3IgVURQIGhlYWRlciwgdHJhbnNwb3J0IGxheWVy
KSoqIC0gZWFjaCBlbmQgb2YgYSBUQ1Agb3IgVURQIG5ldHdvcmsgY29ubmVj
dGlvbiBpcyBib3VuZCB0byBhIHBvcnQuIFRDUCBwb3J0cyBhcmUgc2VwYXJh
dGUgYW5kIGRpc3RpbmN0IGZyb20gVURQIHBvcnRzLiBQb3J0cyBudW1iZXJl
ZCBiZWxvdyAxMDI0IGFyZSByZXNlcnZlZCDigJMgdGhleSBoYXZlIGEgc3Bl
Y2lmaWNhbGx5IGRlZmluZWQgdXNlLiBQb3J0cyBudW1iZXJlZCBhYm92ZSAx
MDI0IChpbmNsdXNpdmUpIGFyZSBrbm93biBhcyBlcGhlbWVyYWwgcG9ydHMu
IFRoZXkgY2FuIGJlIHVzZWQgaG93ZXZlciBhIHZlbmRvciBjaG9vc2VzLiBG
b3IgYSBsaXN0IG9mICJ3ZWxsIGtub3duIiBwb3J0cywgcmVmZXIgdG8gUkZQ
MTcwMC4gVGhlIHNvdXJjZSBwb3J0IGlzIGEgcHNldWRvLXJhbmRvbWx5IGFz
c2lnbmVkIGVwaGVtZXJhbCBwb3J0IG51bWJlci4gVGh1cyBpdCBpcyBvZnRl
biBub3QgdmVyeSB1c2VmdWwgdG8gZmlsdGVyIG9uIHRoZSBzb3VyY2UgcG9y
dC4KLSAqKmRlc3RpbmF0aW9uIHBvcnQgKFRDUCBvciBVRFAgaGVhZGVyLCB0
cmFuc3BvcnQgbGF5ZXIpKiogLSB0aGUgZGVzdGluYXRpb24gcG9ydCBudW1i
ZXIgaW5kaWNhdGVzIGEgcG9ydCB0aGF0IHRoZSBwYWNrZXQgaXMgc2VudCB0
by4gRWFjaCBzZXJ2aWNlIG9uIHRoZSBkZXN0aW5hdGlvbiBob3N0IGxpc3Rl
bnMgdG8gYSBwb3J0LiBTb21lIHdlbGwta25vd24gcG9ydHMgdGhhdCBtaWdo
dCBiZSBmaWx0ZXJlZCBhcmUgMjAvVENQIGFuZCAyMS9UQ1AgLSBmdHAgY29u
bmVjdGlvbi9kYXRhLCAyMy9UQ1AgLSB0ZWxuZXQsIDgwL1RDUCAtIGh0dHAs
IGFuZCA1My9UQ1AgLSBETlMgem9uZSB0cmFuc2ZlcnMuCi0gKipjb25uZWN0
aW9uIHN0YXR1cyAoVENQIGhlYWRlciwgdHJhbnNwb3J0IGxheWVyKSoqIC0g
dGhlIGNvbm5lY3Rpb24gc3RhdHVzIHRlbGxzIHdoZXRoZXIgdGhlIHBhY2tl
dCBpcyB0aGUgZmlyc3QgcGFja2V0IG9mIHRoZSBuZXR3b3JrIHNlc3Npb24u
IFRoZSBBQ0sgYml0IGluIHRoZSBUQ1AgaGVhZGVyIGlzIHNldCB0byDigJxm
YWxzZeKAnSBvciAwIGlmIHRoaXMgaXMgdGhlIGZpcnN0IHBhY2tldCBpbiB0
aGUgc2Vzc2lvbi4gSXQgaXMgc2ltcGxlIHRvIGRpc2FsbG93IGEgaG9zdCBm
cm9tIGVzdGFibGlzaGluZyBhIGNvbm5lY3Rpb24gYnkgcmVqZWN0aW5nIG9y
IGRpc2NhcmRpbmcgYW55IHBhY2tldHMgd2hpY2ggaGF2ZSB0aGUgQUNLIGJp
dCBzZXQgdG8gImZhbHNlIiBvciAwLgoKVXNlZnVsIHJlc291cmNlczoKCi0g
W0J1aWxkaW5nIEludGVybmV0IEZpcmV3YWxscyAtIFBhY2tldCBGaWx0ZXJp
bmddKGh0dHA6Ly93ZWIuZGV1LmVkdS50ci9zdGF0aWMvb3JlaWx5L25ldHdv
cmtpbmcvZmlyZXdhbGwvY2gwNl8wMS5odG0pCgo8L2RldGFpbHM+Cgo8ZGV0
YWlscz4KPHN1bW1hcnk+PGI+V2hhdCBhcmUgdGhlIGFkdmFudGFnZXMgb2Yg
dXNpbmcgYSByZXZlcnNlIHByb3h5IHNlcnZlcj88L2I+PC9zdW1tYXJ5Pjxi
cj4KCioqSGlkZSB0aGUgdG9wb2xvZ3kgYW5kIGNoYXJhY3RlcmlzdGljcyBv
ZiB5b3VyIGJhY2stZW5kIHNlcnZlcnMqKgoKVGhlICoqcmV2ZXJzZSBwcm94
eSBzZXJ2ZXIqKiBjYW4gaGlkZSB0aGUgcHJlc2VuY2UgYW5kIGNoYXJhY3Rl
cmlzdGljcyBvZiB0aGUgb3JpZ2luIHNlcnZlci4gSXQgYWN0cyBhcyBhbiBp
bnRlcm1lZGlhdGUgYmV0d2VlbiBpbnRlcm5ldCBjbG91ZCBhbmQgd2ViIHNl
cnZlci4gSXQgaXMgZ29vZCBmb3Igc2VjdXJpdHkgcmVhc29uIGVzcGVjaWFs
bHkgd2hlbiB5b3UgYXJlIHVzaW5nIHdlYiBob3N0aW5nIHNlcnZpY2VzLgoK
KipBbGxvd3MgdHJhbnNwYXJlbnQgbWFpbnRlbmFuY2Ugb2YgYmFja2VuZCBz
ZXJ2ZXJzKioKCkNoYW5nZXMgeW91IG1ha2UgdG8gc2VydmVycyBydW5uaW5n
IGJlaGluZCBhIHJldmVyc2UgcHJveHkgYXJlIGdvaW5nIHRvIGJlIGNvbXBs
ZXRlbHkgdHJhbnNwYXJlbnQgdG8geW91ciBlbmQgdXNlcnMuCgoqKkxvYWQg
QmFsYW5jaW5nKioKClRoZSByZXZlcnNlIHByb3h5IHdpbGwgdGhlbiBlbmZv
cmNlIGEgbG9hZCBiYWxhbmNpbmcgYWxnb3JpdGhtIGxpa2Ugcm91bmQgcm9i
aW4sIHdlaWdodGVkIHJvdW5kIHJvYmluLCBsZWFzdCBjb25uZWN0aW9ucywg
d2VpZ2h0ZWQgbGVhc3QgY29ubmVjdGlvbnMsIG9yIHJhbmRvbSwgdG8gZGlz
dHJpYnV0ZSB0aGUgbG9hZCBhbW9uZyB0aGUgc2VydmVycyBpbiB0aGUgY2x1
c3Rlci4KCldoZW4gYSBzZXJ2ZXIgZ29lcyBkb3duLCB0aGUgc3lzdGVtIHdp
bGwgYXV0b21hdGljYWxseSBmYWlsb3ZlciB0byB0aGUgbmV4dCBzZXJ2ZXIg
dXAgYW5kIHVzZXJzIGNhbiBjb250aW51ZSB3aXRoIHRoZWlyIHNlY3VyZSBm
aWxlIHRyYW5zZmVyIGFjdGl2aXRpZXMuCgoqKlNTTCBvZmZsb2FkaW5nL3Rl
cm1pbmF0aW9uKioKCkhhbmRsZXMgaW5jb21pbmcgSFRUUFMgY29ubmVjdGlv
bnMsIGRlY3J5cHRpbmcgdGhlIHJlcXVlc3RzIGFuZCBwYXNzaW5nIHVuZW5j
cnlwdGVkIHJlcXVlc3RzIG9uIHRvIHRoZSB3ZWIgc2VydmVycy4KCioqSVAg
bWFza2luZyoqCgpVc2luZyBhIHNpbmdsZSBpcCBidXQgZGlmZmVyZW50IFVS
THMgdG8gcm91dGUgdG8gZGlmZmVyZW50IGJhY2sgZW5kIHNlcnZlcnMuCgpV
c2VmdWwgcmVzb3VyY2VzOgoKLSBbVGhlIEJlbmVmaXRzIG9mIGEgUmV2ZXJz
ZSBQcm94eV0oaHR0cHM6Ly9kem9uZS5jb20vYXJ0aWNsZXMvYmVuZWZpdHMt
cmV2ZXJzZS1wcm94eSkKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFy
eT48Yj5XaGF0IGlzIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gYSByb3V0ZXIg
YW5kIGEgZ2F0ZXdheT8gV2hhdCBpcyB0aGUgZGVmYXVsdCBnYXRld2F5Pzwv
Yj48L3N1bW1hcnk+PGJyPgoKKipSb3V0ZXIqKiBkZXNjcmliZXMgdGhlIGdl
bmVyYWwgdGVjaG5pY2FsIGZ1bmN0aW9uIChsYXllci0zIGZvcndhcmRpbmcp
IG9yIGEgaGFyZHdhcmUgZGV2aWNlIGludGVuZGVkIGZvciB0aGF0IHB1cnBv
c2UsIHdoaWxlIGdhdGV3YXkgZGVzY3JpYmVzIHRoZSBmdW5jdGlvbiBmb3Ig
dGhlIGxvY2FsIHNlZ21lbnQgKHByb3ZpZGluZyBjb25uZWN0aXZpdHkgdG8g
ZWxzZXdoZXJlKS4gWW91IGNvdWxkIGFsc28gc3RhdGUgdGhhdCAiX3lvdSBz
ZXQgdXAgYSByb3V0ZXIgYXMgZ2F0ZXdheV8iLiBBbm90aGVyIHRlcm0gaXMg
aG9wIHdoaWNoIGRlc2NyaWJlcyB0aGUgZm9yd2FyZGluZyBpbiBiZXR3ZWVu
IHN1Ym5ldHMuCgpUaGUgdGVybSAqKmRlZmF1bHQgZ2F0ZXdheSoqIGlzIHVz
ZWQgdG8gbWVhbiB0aGUgcm91dGVyIG9uIHlvdXIgTEFOIHdoaWNoIGhhcyB0
aGUgcmVzcG9uc2liaWxpdHkgb2YgYmVpbmcgdGhlIGZpcnN0IHBvaW50IG9m
IGNvbnRhY3QgZm9yIHRyYWZmaWMgdG8gY29tcHV0ZXJzIG91dHNpZGUgdGhl
IExBTi4KCkl0J3MganVzdCBhIG1hdHRlciBvZiBwZXJzcGVjdGl2ZSwgdGhl
IGRldmljZSBpcyB0aGUgc2FtZS4KClVzZWZ1bCByZXNvdXJjZXM6CgotIFtE
aWZmZXJlbmNlIGJldHdlZW4gcm91dGVyIGFuZCBnYXRld2F5IChvcmlnbmFs
KV0oaHR0cHM6Ly9uZXR3b3JrZW5naW5lZXJpbmcuc3RhY2tleGNoYW5nZS5j
b20vcXVlc3Rpb25zLzUxNDI2L2RpZmZlcmVuY2UtYmV0d2Vlbi1yb3V0ZXIt
YW5kLWdhdGV3YXkpCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+
PGI+RXhwbGFpbiB0aGUgZnVuY3Rpb24gb2YgZWFjaCBvZiB0aGUgZm9sbG93
aW5nIEROUyByZWNvcmRzOiBTT0EsIFBUUiwgQSwgTVgsIGFuZCBDTkFNRS48
L2I+PC9zdW1tYXJ5Pjxicj4KCioqRE5TIHJlY29yZHMqKiBhcmUgYmFzaWNh
bGx5IG1hcHBpbmcgZmlsZXMgdGhhdCB0ZWxsIHRoZSBETlMgc2VydmVyIHdo
aWNoIElQIGFkZHJlc3MgZWFjaCBkb21haW4gaXMgYXNzb2NpYXRlZCB3aXRo
LCBhbmQgaG93IHRvIGhhbmRsZSByZXF1ZXN0cyBzZW50IHRvIGVhY2ggZG9t
YWluLiBTb21lICoqRE5TIHJlY29yZHMqKiBzeW50YXggdGhhdCBhcmUgY29t
bW9ubHkgdXNlZCBpbiBuZWFybHkgYWxsIEROUyByZWNvcmQgY29uZmlndXJh
dGlvbnMgYXJlIGBBYCwgYEFBQUFgLCBgQ05BTUVgLCBgTVhgLCBgUFRSYCwg
YE5TYCwgYFNPQWAsIGBTUlZgLCBgVFhUYCwgYW5kIGBOQVBUUmAuCgotICoq
U09BKiogLSBBIFN0YXJ0IE9mIEF1dGhvcml0eQotICoqQSoqIC0gQWRkcmVz
cyBNYXBwaW5nIHJlY29yZHMKLSAqKkFBQUEqKiAtIElQIFZlcnNpb24gNiBB
ZGRyZXNzIHJlY29yZHMKLSAqKkNOQU1FKiogLSBDYW5vbmljYWwgTmFtZSBy
ZWNvcmRzCi0gKipNWCoqIC0gTWFpbCBleGNoYW5nZXIgcmVjb3JkCi0gKipO
UyoqIC0gTmFtZSBTZXJ2ZXIgcmVjb3JkcwotICoqUFRSKiogLSBSZXZlcnNl
LWxvb2t1cCBQb2ludGVyIHJlY29yZHMKClVzZWZ1bCByZXNvdXJjZXM6Cgot
IFtMaXN0IG9mIEROUyByZWNvcmQgdHlwZXNdKGh0dHBzOi8vZW4ud2lraXBl
ZGlhLm9yZy93aWtpL0xpc3Rfb2ZfRE5TX3JlY29yZF90eXBlcykKCjwvZGV0
YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5XaHkgY291bGRuJ3QgTUFD
IGFkZHJlc3NlcyBiZSB1c2VkIGluc3RlYWQgb2YgSVB2NC82IGZvciBuZXR3
b3JraW5nPzwvYj48L3N1bW1hcnk+PGJyPgoKVGhlICoqT1NJKiogbW9kZWwg
ZXhwbGFpbnMgd2h5IGl0IGRvZXNuJ3QgbWFrZSBzZW5zZSB0byBtYWtlIHJv
dXRpbmcsIGEgKipsYXllciAzKiogY29uY2VwdCwgZGVjaXNpb25zIGJhc2Vk
IG9uIGEgcGh5c2ljYWwsICoqbGF5ZXIgMioqLCBtZWNoYW5pc20uCgpNb2Rl
cm4gbmV0d29ya2luZyBpcyBicm9rZW4gaW50byBtYW55IGRpZmZlcmVudCBs
YXllcnMgdG8gYWNjb21wbGlzaCB5b3VyIGVuZCB0byBlbmQgY29tbXVuaWNh
dGlvbi4gWW91ciBuZXR3b3JrIGNhcmQgKHdoYXQgaXMgYWRkcmVzc2VkIGJ5
IHRoZSBtYWMgYWRkcmVzcyAtIHBoeXNpY2FsIGFkZHJlc3MpIG5lZWRzIHRv
IG9ubHkgYmUgcmVzcG9uc2libGUgZm9yIGNvbW11bmljYXRpbmcgd2l0aCBw
ZWVycyBvbiBpdCdzIHBoeXNpY2FsIG5ldHdvcmsuCgpUaGUgY29tbXVuaWNh
dGlvbiB0aGF0IHlvdSBhcmUgYWxsb3dlZCB0byBhY2NvbXBsaXNoIHdpdGgg
eW91ciAqKk1BQyoqIGFkZHJlc3MgaXMgZ29pbmcgdG8gYmUgbGltaXRlZCB0
byBvdGhlciBkZXZpY2VzIHRoYXQgcmVzaWRlIHdpdGhpbiBwaHlzaWNhbCBj
b250YWN0IHRvIHlvdXIgbWFjaGluZS4gT24gdGhlIGludGVybmV0LCBmb3Ig
ZXhhbXBsZSwgeW91IGFyZSBub3QgcGh5c2ljYWxseSBjb25uZWN0ZWQgdG8g
ZWFjaCBtYWNoaW5lLiBUaGF0J3Mgd2h5IHdlIG1ha2UgdXNlIG9mICoqVENQ
L0lQKiogKGEgKipsYXllciAzKiosIGxvZ2ljYWwgYWRkcmVzcykgbWVjaGFu
aXNtIHdoZW4gd2UgbmVlZCB0byBjb21tdW5pY2F0ZSB3aXRoIGEgbWFjaGlu
ZSB0aGF0IHdlIGFyZSBub3QgcGh5c2ljYWxseSBjb25uZWN0ZWQgdG8uCgoq
KklQKiogaXMgYW4gYXJiaXRyYXJ5IG51bWJlcmluZyBzY2hlbWUgaW1wb3Nl
ZCBpbiBhIGhpZXJhcmNoaWNhbCBmYXNoaW9uIG9uIGEgZ3JvdXAgb2YgY29t
cHV0ZXJzIHRvIGxvZ2ljYWxseSBkaXN0aW5ndWlzaCB0aGVtIGFzIGEgZ3Jv
dXAgKHRoYXQncyB3aGF0IGEgc3VibmV0IGlzKS4gU2VuZGluZyBtZXNzYWdl
cyBiZXR3ZWVuIHRob3NlIGdyb3VwcyBpcyBkb25lIGJ5IHJvdXRpbmcgdGFi
bGVzLCB0aGVtc2VsdmVzIGRpdmlkZWQgaW50byBtdWx0aXBsZSBsZXZlbHMg
c28gdGhhdCB3ZSBkb24ndCBoYXZlIHRvIGtlZXAgdHJhY2sgb2YgZXZlcnkg
c2luZ2xlIHN1Ym5ldC4KCkl0J3MgYWxzbyBwcmV0dHkgZWFzeSB0byByZWxh
dGUgdGhpcyB0byBhbm90aGVyIHBhaXIgb2Ygc3lzdGVtcy4gWW91IGhhdmUg
YSBTdGF0ZSBJc3N1ZWQgSUQgTnVtYmVyLCB3aHkgd291bGQgeW91IG5lZWQg
YSBtYWlsaW5nIGFkZHJlc3MgaWYgdGhhdCBJRCBudW1iZXIgaXMgYWxyZWFk
eSB1bmlxdWUgdG8ganVzdCB5b3U/IFlvdSBuZWVkIHRoZSBtYWlsaW5nIGFk
ZHJlc3MgYmVjYXVzZSBpdCdzIGFuIGFyYml0cmFyeSBzeXN0ZW0gdGhhdCBk
ZXNjcmliZXMgd2hlcmUgdGhlIHVuaXF1ZSBkZXN0aW5hdGlvbiBmb3IgY29t
bXVuaWNhdGlvbnMgdG8geW91IHNob3VsZCBnby4KCk9uIHRoZSBvdGhlciBo
YW5kLCB0aGUgZGlzdHJpYnV0aW9uIG9mICoqTUFDKiogYWRkcmVzc2VzIGFj
cm9zcyB0aGUgbmV0d29yayBpcyByYW5kb20gYW5kIGNvbXBsZXRlbHkgdW5y
ZWxhdGVkIHRvIHRvcG9sb2d5LiBSb3V0ZXMgZ3JvdXBpbmcgd291bGQgYmUg
aW1wb3NzaWJsZSwgZXZlcnkgcm91dGVyIHdvdWxkIG5lZWQgdG8ga2VlcCB0
cmFjayBvZiByb3V0ZXMgZm9yIGV2ZXJ5IHNpbmdsZSBkZXZpY2UgdGhhdCBy
ZWxheXMgdHJhZmZpYyB0cm91Z2ggaXQuIFRoYXQgaXMgd2hhdCAqKmxheWVy
IDIqKiBzd2l0Y2hlcyBkbywgYW5kIHRoYXQgZG9lcyBub3Qgc2NhbGUgd2Vs
bCBiZXlvbmQgYSBjZXJ0YWluIG51bWJlciBvZiBob3N0cy4KClVzZWZ1bCBy
ZXNvdXJjZXM6CgotIFtXaHkgY291bGRuJ3QgTUFDIGFkZHJlc3NlcyBiZSB1
c2VkIGluc3RlYWQgb2YgSVB2NHw2IGZvciBuZXR3b3JraW5nPyAob3JpZ2lu
YWwpXShodHRwczovL3NlcnZlcmZhdWx0LmNvbS9xdWVzdGlvbnMvNDEwNjI2
L3doeS1jb3VsZG50LW1hYy1hZGRyZXNzZXMtYmUtdXNlZC1pbnN0ZWFkLW9m
LWlwdjQ2LWZvci1uZXR3b3JraW5nKQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+
CjxzdW1tYXJ5PjxiPldoYXQgaXMgdGhlIHNtYWxsZXN0IElQdjQgc3VibmV0
IG1hc2sgdGhhdCBjYW4gYmUgYXBwbGllZCB0byBhIG5ldHdvcmsgY29udGFp
bmluZyB1cCB0byAzMCBkZXZpY2VzPzwvYj48L3N1bW1hcnk+PGJyPgoKV2hl
dGhlciB5b3UgaGF2ZSBhIHN0YW5kYXJkIGAvMjRgIFZMQU4gZm9yIGVuZCB1
c2VycywgYSBgLzMwYCBmb3IgcG9pbnQtdG8tcG9pbnQgbGlua3MsIG9yIHNv
bWV0aGluZyBpbiBiZXR3ZWVuIGFuZCBzdWJuZXQgdGhhdCBtdXN0IGNvbnRh
aW4gdXAgdG8gMzAgZGV2aWNlcyB3b3JrcyBvdXQgdG8gYmUgYSBgLzI3YCAt
IG9yIGEgc3VibmV0IG1hc2sgb2YgYDI1NS4yNTUuMjU1LjIyNGAuCgpVc2Vm
dWwgcmVzb3VyY2VzOgoKLSBbSG93IGRvIHlvdSBjYWxjdWxhdGUgdGhlIHBy
ZWZpeCwgbmV0d29yaywgc3VibmV0LCBhbmQgaG9zdCBudW1iZXJzP10oaHR0
cHM6Ly9uZXR3b3JrZW5naW5lZXJpbmcuc3RhY2tleGNoYW5nZS5jb20vcXVl
c3Rpb25zLzcxMDYvaG93LWRvLXlvdS1jYWxjdWxhdGUtdGhlLXByZWZpeC1u
ZXR3b3JrLXN1Ym5ldC1hbmQtaG9zdC1udW1iZXJzKQotIFtUaGUgc2xhc2gg
YWZ0ZXIgYW4gSVAgQWRkcmVzcyAtIENJRFIgTm90YXRpb25dKGh0dHBzOi8v
bmV0d29ya2VuZ2luZWVyaW5nLnN0YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9u
cy8zNjk3L3RoZS1zbGFzaC1hZnRlci1hbi1pcC1hZGRyZXNzLWNpZHItbm90
YXRpb24pCi0gW1doeSBhcmUgdGhlcmUgMyByYW5nZXMgb2YgcHJpdmF0ZSBJ
UHY0IGFkZHJlc3Nlcz9dKGh0dHBzOi8vbmV0d29ya2VuZ2luZWVyaW5nLnN0
YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy8zMjExOS93aHktYXJlLXRoZXJl
LTMtcmFuZ2VzLW9mLXByaXZhdGUtaXB2NC1hZGRyZXNzZXMpCi0gW0lQIENh
bGN1bGF0b3JdKGh0dHA6Ly9qb2RpZXMuZGUvaXBjYWxjKQoKPC9kZXRhaWxz
PgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPldoYXQgYXJlIHNvbWUgY29tbW9u
IEhUVFAgc3RhdHVzIGNvZGVzPzwvYj48L3N1bW1hcnk+PGJyPgoKLSAqKjF4
eCoqIC0gSW5mb3JtYXRpb25hbCByZXNwb25zZXMgLSBjb21tdW5pY2F0ZXMg
dHJhbnNmZXIgcHJvdG9jb2wtbGV2ZWwgaW5mb3JtYXRpb24KLSAqKjJ4eCoq
IC0gU3VjY2VzcyAtIGluZGljYXRlcyB0aGF0IHRoZSBjbGllbnTigJlzIHJl
cXVlc3Qgd2FzIGFjY2VwdGVkIHN1Y2Nlc3NmdWxseQotICoqM3h4KiogLSBS
ZWRpcmVjdGlvbiAtIGluZGljYXRlcyB0aGF0IHRoZSBjbGllbnQgbXVzdCB0
YWtlIHNvbWUgYWRkaXRpb25hbCBhY3Rpb24gaW4gb3JkZXIgdG8gY29tcGxl
dGUgdGhlaXIgcmVxdWVzdAotICoqNHh4KiogLSBDbGllbnQgc2lkZSBlcnJv
ciAtIHRoaXMgY2F0ZWdvcnkgb2YgZXJyb3Igc3RhdHVzIGNvZGVzIHBvaW50
cyB0aGUgZmluZ2VyIGF0IGNsaWVudHMKLSAqKjV4eCoqIC0gU2VydmVyIHNp
ZGUgZXJyb3IgLSB0aGUgc2VydmVyIHRha2VzIHJlc3BvbnNpYmlsaXR5IGZv
ciB0aGVzZSBlcnJvciBzdGF0dXMgY29kZXMKClVzZWZ1bCByZXNvdXJjZXM6
CgotIFtIVFRQIFN0YXR1cyBDb2Rlc10oaHR0cHM6Ly9odHRwc3RhdHVzZXMu
Y29tLykKCjwvZGV0YWlscz4KCiMjIyMjIyBEZXZvcHMgUXVlc3Rpb25zICg1
KQoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPldoYXQgaXMgRGV2T3BzPyBXaGlj
aCBpcyBtb3JlIGltcG9ydGFudCB0byB0aGUgc3VjY2VzcyBvZiBhbnkgRGV2
T3BzIGNvbW11bml0eTogaG93IHBlb3BsZSBjb21tdW5pY2F0ZSBvciB0aGUg
dG9vbHMgdGhhdCB5b3UgY2hvb3NlIHRvIGRlcGxveT8gKioqPC9iPjwvc3Vt
bWFyeT48YnI+CgoqKkRldk9wcyoqIGlzIGEgY29oZXNpdmUgdGVhbSB0aGF0
IGVuZ2FnZXMgaW4gYm90aCBEZXZlbG9wbWVudCBhbmQgT3BlcmF0aW9ucyB0
YXNrcywgb3IgaXQncyBpbmRpdmlkdWFsIE9wZXJhdGlvbnMgYW5kIERldmVs
b3BtZW50IHRlYW1zIHRoYXQgd29yayB2ZXJ5IGNsb3NlbHkgdG9nZXRoZXIu
IEl0J3MgbW9yZSBvZiBhICJ3YXkiIG9mIHdvcmtpbmcgY29sbGFib3JhdGl2
ZWx5IHdpdGggb3RoZXIgZGVwYXJ0bWVudHMgdG8gYWNoaWV2ZSBjb21tb24g
Z29hbHMuCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+V2hh
dCBpcyBhIHZlcnNpb24gY29udHJvbD8gQXJlIHlvdXIgY29tbWl0IG1lc3Nh
Z2VzIGdvb2QgbG9va2luZz88L2I+PC9zdW1tYXJ5Pjxicj4KCkl0IGlzIGEg
c3lzdGVtIHRoYXQgcmVjb3JkcyBjaGFuZ2VzIHRvIGEgZmlsZSBvciBzZXQg
b2YgZmlsZXMgb3ZlciB0aW1lIHNvIHRoYXQgeW91IGNhbiByZWNhbGwgc3Bl
Y2lmaWMgdmVyc2lvbnMgbGF0ZXIuIFZlcnNpb24gY29udHJvbCBzeXN0ZW1z
IGNvbnNpc3Qgb2YgYSBjZW50cmFsIHNoYXJlZCByZXBvc2l0b3J5IHdoZXJl
IHRlYW1tYXRlcyBjYW4gY29tbWl0IGNoYW5nZXMgdG8gYSBmaWxlIG9yIHNl
dCBvZiBmaWxlLiBUaGVuIHlvdSBjYW4gbWVudGlvbiB0aGUgdXNlcyBvZiB2
ZXJzaW9uIGNvbnRyb2wuCgpWZXJzaW9uIGNvbnRyb2wgYWxsb3dzIHlvdSB0
bzoKCi0gcmV2ZXJ0IGZpbGVzIGJhY2sgdG8gYSBwcmV2aW91cyBzdGF0ZQot
IHJldmVydCB0aGUgZW50aXJlIHByb2plY3QgYmFjayB0byBhIHByZXZpb3Vz
IHN0YXRlCi0gY29tcGFyZSBjaGFuZ2VzIG92ZXIgdGltZQotIHNlZSB3aG8g
bGFzdCBtb2RpZmllZCBzb21ldGhpbmcgdGhhdCBtaWdodCBiZSBjYXVzaW5n
IGEgcHJvYmxlbQotIHdobyBpbnRyb2R1Y2VkIGFuIGlzc3VlIGFuZCB3aGVu
CgpUaGUgc2V2ZW4gcnVsZXMgb2YgYSBncmVhdCBjb21taXQgbWVzc2FnZToK
Ci0gc2VwYXJhdGUgc3ViamVjdCBmcm9tIGJvZHkgd2l0aCBhIGJsYW5rIGxp
bmUKLSBsaW1pdCB0aGUgc3ViamVjdCBsaW5lIHRvIDUwIGNoYXJhY3RlcnMK
LSBjYXBpdGFsaXplIHRoZSBzdWJqZWN0IGxpbmUKLSBkbyBub3QgZW5kIHRo
ZSBzdWJqZWN0IGxpbmUgd2l0aCBhIHBlcmlvZAotIHVzZSB0aGUgaW1wZXJh
dGl2ZSBtb29kIGluIHRoZSBzdWJqZWN0IGxpbmUKLSB3cmFwIHRoZSBib2R5
IGF0IDcyIGNoYXJhY3RlcnMKLSB1c2UgdGhlIGJvZHkgdG8gZXhwbGFpbiB3
aGF0IGFuZCB3aHkgdnMuIGhvdwoKVXNlZnVsIHJlc291cmNlczoKCi0gW0dl
dHRpbmcgU3RhcnRlZCAtIEFib3V0IFZlcnNpb24gQ29udHJvbCAob3JpZ2lu
YWwpXShodHRwczovL2dpdC1zY20uY29tL2Jvb2svZW4vdjIvR2V0dGluZy1T
dGFydGVkLUFib3V0LVZlcnNpb24tQ29udHJvbCkKCjwvZGV0YWlscz4KCjxk
ZXRhaWxzPgo8c3VtbWFyeT48Yj5FeHBsYWluIHNvbWUgYmFzaWMgPGNvZGU+
Z2l0PC9jb2RlPiBjb21tYW5kcy48L2I+PC9zdW1tYXJ5Pjxicj4KCi0gYGdp
dCBpbml0YCAtIGNyZWF0ZSBhIG5ldyBsb2NhbCByZXBvc2l0b3J5Ci0gYGdp
dCBjb21taXQgLW0gIm1lc3NhZ2UiYCAtIGNvbW1pdCBjaGFuZ2VzIHRvIGhl
YWQKLSBgZ2l0IHN0YXR1c2AgLSBsaXN0IHRoZSBmaWxlcyB5b3UndmUgYWRk
ZWQgd2l0aCBgZ2l0IGFkZGAgYW5kIGFsc28gY29tbWl0IGFueSBmaWxlcyB5
b3UndmUgY2hhbmdlZCBzaW5jZSB0aGVuCi0gYGdpdCBwdXNoIG9yaWdpbiBt
YXN0ZXJgIC0gc2VuZCBjaGFuZ2VzIHRvIHRoZSBtYXN0ZXIgYnJhbmNoIG9m
IHlvdXIgcmVtb3RlIHJlcG9zaXRvcnkKCjwvZGV0YWlscz4KCjxkZXRhaWxz
Pgo8c3VtbWFyeT48Yj5FeHBsYWluIGEgc2ltcGxlIENvbnRpbnVvdXMgSW50
ZWdyYXRpb24gcGlwZWxpbmUuPC9iPjwvc3VtbWFyeT48YnI+CgotIGNsb25l
IHJlcG9zaXRvcnkKLSBkZXBsb3kgc3RhZ2UgKFFBKQotIHRlc3RpbmcgZW52
aXJvbm1lbnQgKFFBKQotIGRlcGxveSBzdGFnZSAoUFJPRCkKCjwvZGV0YWls
cz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5FeHBsYWluIHNvbWUgYmFzaWMg
PGNvZGU+ZG9ja2VyPC9jb2RlPiBjb21tYW5kcy48L2I+PC9zdW1tYXJ5Pjxi
cj4KCi0gYGRvY2tlciBwc2AgLSBzaG93IHJ1bm5pbmcgY29udGFpbmVycwot
IGBkb2NrZXIgcHMgLWFgIC0gc2hvdyBhbGwgY29udGFpbmVycwotIGBkb2Nr
ZXIgaW1hZ2VzYCAtIHNob3cgZG9ja2VyIGltYWdlcwotIGBkb2NrZXIgbG9n
cyA8Y29udGFpbmVyLWlkfGNvbnRhaW5lci1uYW1lPmAgLSBnZXQgbG9ncyBm
cm9tIGNvbnRhaW5lcgotIGBkb2NrZXIgbmV0d29yayBsc2AgLSBzaG93IGFs
bCBkb2NrZXIgbmV0d29ya3MKLSBgZG9ja2VyIHZvbHVtZXMgbHNgIC0gc2hv
dyBhbGwgZG9ja2VyIHZvbHVtZXMKLSBgZG9ja2VyIGV4ZWMgLWl0IDxjb250
YWluZXItaWR8Y29udGFpbmVyLW5hbWU+IGJhc2hgIC0gZXhlY3V0ZSBiYXNo
IGluIGNvbnRhaW5lciB3aXRoIGludGVyYWN0aXZlIHNoZWxsCgo8L2RldGFp
bHM+CgojIyMjIyMgQ3liZXIgU2VjdXJpdHkgUXVlc3Rpb25zICgxKQoKPGRl
dGFpbHM+CjxzdW1tYXJ5PjxiPldoYXQgaXMgYSBTZWN1cml0eSBNaXNjb25m
aWd1cmF0aW9uPzwvYj48L3N1bW1hcnk+PGJyPgoKKipTZWN1cml0eSBtaXNj
b25maWd1cmF0aW9uKiogaXMgYSB2dWxuZXJhYmlsaXR5IHdoZW4gYSBkZXZp
Y2UvYXBwbGljYXRpb24vbmV0d29yayBpcyBjb25maWd1cmVkIGluIGEgd2F5
IHdoaWNoIGNhbiBiZSBleHBsb2l0ZWQgYnkgYW4gYXR0YWNrZXIgdG8gdGFr
ZSBhZHZhbnRhZ2Ugb2YgaXQuIFRoaXMgY2FuIGJlIGFzIHNpbXBsZSBhcyBs
ZWF2aW5nIHRoZSBkZWZhdWx0IHVzZXJuYW1lL3Bhc3N3b3JkIHVuY2hhbmdl
ZCBvciB0b28gc2ltcGxlIGZvciBkZXZpY2UgYWNjb3VudHMgZXRjLgoKPC9k
ZXRhaWxzPgoKIyMjIDpkaWFtb25kX3NoYXBlX3dpdGhfYV9kb3RfaW5zaWRl
OiA8YSBuYW1lPSJyZWd1bGFyLXN5c2FkbWluIj5SZWd1bGFyIFN5c2FkbWlu
PC9hPgoKIyMjIyMjIFN5c3RlbSBRdWVzdGlvbnMgKDYwKQoKPGRldGFpbHM+
CjxzdW1tYXJ5PjxiPlRlbGwgbWUgYWJvdXQgeW91ciBleHBlcmllbmNlIHdp
dGggdGhlIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzPyAqKio8L2I+PC9zdW1t
YXJ5Pjxicj4KClRvIGJlIGNvbXBsZXRlZC4KCjwvZGV0YWlscz4KCjxkZXRh
aWxzPgo8c3VtbWFyeT48Yj5XaGljaCBkaXN0cmlidXRpb24gd291bGQgeW91
IHNlbGVjdCBmb3IgcnVubmluZyBhIG1ham9yIHdlYiBzZXJ2ZXI/ICoqKjwv
Yj48L3N1bW1hcnk+PGJyPgoKVG8gYmUgY29tcGxldGVkLgoKPC9kZXRhaWxz
PgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPkV4cGxhaW4gaW4gYSBmZXcgcG9p
bnRzIHRoZSBib290IHByb2Nlc3Mgb2YgdGhlIExpbnV4IHN5c3RlbS48L2I+
PC9zdW1tYXJ5Pjxicj4KCioqQklPUyoqOiBGdWxsIGZvcm0gb2YgQklPUyBp
cyBCYXNpYyBJbnB1dCBvciBPdXRwdXQgU3lzdGVtIHRoYXQgcGVyZm9ybXMg
aW50ZWdyaXR5IGNoZWNrcyBhbmQgaXQgd2lsbCBzZWFyY2ggYW5kIGxvYWQg
YW5kIHRoZW4gaXQgd2lsbCBleGVjdXRlIHRoZSBib290bG9hZGVyLgoKKipC
b290bG9hZGVyKio6IFNpbmNlIHRoZSBlYXJsaWVyIHBoYXNlcyBhcmUgbm90
IHNwZWNpZmljIHRvIHRoZSBvcGVyYXRpbmcgc3lzdGVtLCB0aGUgQklPUy1i
YXNlZCBib290IHByb2Nlc3MgZm9yIHg4NiBhbmQgeDg2LTY0IGFyY2hpdGVj
dHVyZXMgaXMgY29uc2lkZXJlZCB0byBzdGFydCB3aGVuIHRoZSBtYXN0ZXIg
Ym9vdCByZWNvcmQgKE1CUikgY29kZSBpcyBleGVjdXRlZCBpbiByZWFsIG1v
ZGUgYW5kIHRoZSBmaXJzdC1zdGFnZSBib290IGxvYWRlciBpcyBsb2FkZWQu
IEluIFVFRkkgc3lzdGVtcywgYSBwYXlsb2FkLCBzdWNoIGFzIHRoZSBMaW51
eCBrZXJuZWwsIGNhbiBiZSBleGVjdXRlZCBkaXJlY3RseS4gVGh1cyBubyBi
b290IGxvYWRlciBpcyBuZWNlc3NhcnkuIFNvbWUgcG9wdWxhciBib290bG9h
ZGVyczogKipHUlVCKiosICoqU3lzbGludXgvSXNvbGludXgqKiBvciAqKkxp
bG8qKi4KCioqS2VybmVsKio6IFRoZSBrZXJuZWwgaW4gTGludXggaGFuZGxl
cyBhbGwgb3BlcmF0aW5nIHN5c3RlbSBwcm9jZXNzZXMsIHN1Y2ggYXMgbWVt
b3J5IG1hbmFnZW1lbnQsIHRhc2sgc2NoZWR1bGluZywgSS9PLCBpbnRlcnBy
b2Nlc3MgY29tbXVuaWNhdGlvbiwgYW5kIG92ZXJhbGwgc3lzdGVtIGNvbnRy
b2wuIFRoaXMgaXMgbG9hZGVkIGluIHR3byBzdGFnZXMgLSBpbiB0aGUgZmly
c3Qgc3RhZ2UsIHRoZSBrZXJuZWwgKGFzIGEgY29tcHJlc3NlZCBpbWFnZSBm
aWxlKSBpcyBsb2FkZWQgaW50byBtZW1vcnkgYW5kIGRlY29tcHJlc3NlZCwg
YW5kIGEgZmV3IGZ1bmRhbWVudGFsIGZ1bmN0aW9ucyBzdWNoIGFzIGJhc2lj
IG1lbW9yeSBtYW5hZ2VtZW50IGFyZSBzZXQgdXAuCgoqKkluaXQqKjogSXMg
dGhlIHBhcmVudCBvZiBhbGwgcHJvY2Vzc2VzIG9uIHRoZSBzeXN0ZW0sIGl0
IGlzIGV4ZWN1dGVkIGJ5IHRoZSBrZXJuZWwgYW5kIGlzIHJlc3BvbnNpYmxl
IGZvciBzdGFydGluZyBhbGwgb3RoZXIgcHJvY2Vzc2VzLgoKLSBgU3lzViBp
bml0YCAtIGluaXQncyBqb2IgaXMgInRvIGdldCBldmVyeXRoaW5nIHJ1bm5p
bmcgdGhlIHdheSBpdCBzaG91bGQgYmUgb25jZSB0aGUga2VybmVsIGlzIGZ1
bGx5IHJ1bm5pbmcuIEVzc2VudGlhbGx5IGl0IGVzdGFibGlzaGVzIGFuZCBv
cGVyYXRlcyB0aGUgZW50aXJlIHVzZXIgc3BhY2UuIFRoaXMgaW5jbHVkZXMg
Y2hlY2tpbmcgYW5kIG1vdW50aW5nIGZpbGUgc3lzdGVtcywgc3RhcnRpbmcg
dXAgbmVjZXNzYXJ5IHVzZXIgc2VydmljZXMsIGFuZCB1bHRpbWF0ZWx5IHN3
aXRjaGluZyB0byBhIHVzZXItZW52aXJvbm1lbnQgd2hlbiBzeXN0ZW0gc3Rh
cnR1cCBpcyBjb21wbGV0ZWQuCi0gYHN5c3RlbWRgIC0gdGhlIGRldmVsb3Bl
cnMgb2Ygc3lzdGVtZCBhaW1lZCB0byByZXBsYWNlIHRoZSBMaW51eCBpbml0
IHN5c3RlbSBpbmhlcml0ZWQgZnJvbSBVbml4IFN5c3RlbSBWLiBMaWtlIGlu
aXQsIHN5c3RlbWQgaXMgYSBkYWVtb24gdGhhdCBtYW5hZ2VzIG90aGVyIGRh
ZW1vbnMuIEFsbCBkYWVtb25zLCBpbmNsdWRpbmcgc3lzdGVtZCwgYXJlIGJh
Y2tncm91bmQgcHJvY2Vzc2VzLiBTeXN0ZW1kIGlzIHRoZSBmaXJzdCBkYWVt
b24gdG8gc3RhcnQgKGR1cmluZyBib290aW5nKSBhbmQgdGhlIGxhc3QgZGFl
bW9uIHRvIHRlcm1pbmF0ZSAoZHVyaW5nIHNodXRkb3duKS4KLSBgcnVuaW5p
dGAgLSBydW5pbml0IGlzIGFuIGluaXQgc2NoZW1lIGZvciBVbml4LWxpa2Ug
b3BlcmF0aW5nIHN5c3RlbXMgdGhhdCBpbml0aWFsaXplcywgc3VwZXJ2aXNl
cywgYW5kIGVuZHMgcHJvY2Vzc2VzIHRocm91Z2hvdXQgdGhlIG9wZXJhdGlu
ZyBzeXN0ZW0uIEl0IGlzIGEgcmVpbXBsZW1lbnRhdGlvbiBvZiB0aGUgZGFl
bW9udG9vbHMgcHJvY2VzcyBzdXBlcnZpc2lvbiB0b29sa2l0IHRoYXQgcnVu
cyBvbiB0aGUgTGludXgsIE1hYyBPUyBYLCBcKkJTRCwgYW5kIFNvbGFyaXMg
b3BlcmF0aW5nIHN5c3RlbXMuCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbQW5h
bHl6aW5nIHRoZSBMaW51eCBib290IHByb2Nlc3NdKGh0dHBzOi8vb3BlbnNv
dXJjZS5jb20vYXJ0aWNsZS8xOC8xL2FuYWx5emluZy1saW51eC1ib290LXBy
b2Nlc3MpCi0gW1N5c3RlbWQgQm9vdCBQcm9jZXNzIGEgQ2xvc2UgTG9vayBp
biBMaW51eF0oaHR0cHM6Ly9saW5veGlkZS5jb20vbGludXgtaG93LXRvL3N5
c3RlbWQtYm9vdC1wcm9jZXNzLykKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8
c3VtbWFyeT48Yj5Ib3cgYW5kIHdoeSBMaW51eCBkYWVtb25zIGRyb3AgcHJp
dmlsZWdlcz8gV2h5IHNvbWUgZGFlbW9ucyBuZWVkIHJvb3QgcGVybWlzc2lv
bnMgdG8gc3RhcnQ/IEV4cGxhaW4uICoqKjwvYj48L3N1bW1hcnk+CgpUbyBi
ZSBjb21wbGV0ZWQuCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+
PGI+V2h5IGlzIGEgbG9hZCBvZiAxLjAwIG5vdCBpZGVhbCBvbiBhIHNpbmds
ZS1jb3JlIG1hY2hpbmU/PC9iPjwvc3VtbWFyeT48YnI+CgpUaGUgcHJvYmxl
bSB3aXRoIGEgbG9hZCBvZiAxLjAwIGlzIHRoYXQgeW91IGhhdmUgbm8gaGVh
ZHJvb20uIEluIHByYWN0aWNlLCBtYW55IHN5c2FkbWlucyB3aWxsIGRyYXcg
YSBsaW5lIGF0IDAuNzAuCgpUaGUgIk5lZWQgdG8gTG9vayBpbnRvIGl0IiBS
dWxlIG9mIFRodW1iOiAwLjcwIElmIHlvdXIgbG9hZCBhdmVyYWdlIGlzIHN0
YXlpbmcgYWJvdmUgPiAwLjcwLCBpdCdzIHRpbWUgdG8gaW52ZXN0aWdhdGUg
YmVmb3JlIHRoaW5ncyBnZXQgd29yc2UuCgpUaGUgIkZpeCB0aGlzIG5vdyIg
UnVsZSBvZiBUaHVtYjogMS4wMC4gSWYgeW91ciBsb2FkIGF2ZXJhZ2Ugc3Rh
eXMgYWJvdmUgMS4wMCwgZmluZCB0aGUgcHJvYmxlbSBhbmQgZml4IGl0IG5v
dy4gT3RoZXJ3aXNlLCB5b3UncmUgZ29pbmcgdG8gZ2V0IHdva2VuIHVwIGlu
IHRoZSBtaWRkbGUgb2YgdGhlIG5pZ2h0LCBhbmQgaXQncyBub3QgZ29pbmcg
dG8gYmUgZnVuLgoKUnVsZSBvZiBUaHVtYjogNS4wLiBJZiB5b3VyIGxvYWQg
YXZlcmFnZSBpcyBhYm92ZSA1LjAwLCB5b3UgY291bGQgYmUgaW4gc2VyaW91
cyB0cm91YmxlLCB5b3VyIGJveCBpcyBlaXRoZXIgaGFuZ2luZyBvciBzbG93
aW5nIHdheSBkb3duLCBhbmQgdGhpcyB3aWxsIChpbmV4cGxpY2FibHkpIGhh
cHBlbiBpbiB0aGUgd29yc3QgcG9zc2libGUgdGltZSBsaWtlIGluIHRoZSBt
aWRkbGUgb2YgdGhlIG5pZ2h0IG9yIHdoZW4geW91J3JlIHByZXNlbnRpbmcg
YXQgYSBjb25mZXJlbmNlLiBEb24ndCBsZXQgaXQgZ2V0IHRoZXJlLgoKVXNl
ZnVsIHJlc291cmNlczoKCi0gW1Byb3BlciB3YXkgb2YgaW50ZXJwcmV0aW5n
IHN5c3RlbSBsb2FkIG9uIGEgNCBjb3JlIDggdGhyZWFkIHByb2Nlc3Nvcl0o
aHR0cHM6Ly9zZXJ2ZXJmYXVsdC5jb20vcXVlc3Rpb25zLzYxODEzMC9wcm9w
ZXItd2F5LW9mLWludGVycHJldGluZy1zeXN0ZW0tbG9hZC1vbi1hLTQtY29y
ZS04LXRocmVhZC1wcm9jZXNzb3IpCi0gW1VuZGVyc3RhbmRpbmcgTGludXgg
Q1BVIExvYWQgLSB3aGVuIHNob3VsZCB5b3UgYmUgd29ycmllZD9dKGh0dHA6
Ly9ibG9nLnNjb3V0YXBwLmNvbS9hcnRpY2xlcy8yMDA5LzA3LzMxL3VuZGVy
c3RhbmRpbmctbG9hZC1hdmVyYWdlcykKCjwvZGV0YWlscz4KCjxkZXRhaWxz
Pgo8c3VtbWFyeT48Yj5XaGF0IGRvZXMgaXQgbWVhbiB3aGVuIHRoZSBlZmZl
Y3RpdmUgdXNlciBpcyByb290LCBidXQgdGhlIHJlYWwgdXNlciBJRCBpcyBz
dGlsbCB5b3VyIG5hbWU/PC9iPjwvc3VtbWFyeT48YnI+CgpUaGUgKipyZWFs
IHVzZXIgSUQqKiBpcyB3aG8geW91IHJlYWxseSBhcmUgKHRoZSB1c2VyIHdo
byBvd25zIHRoZSBwcm9jZXNzKSwgYW5kIHRoZSAqKmVmZmVjdGl2ZSB1c2Vy
IElEKiogaXMgd2hhdCB0aGUgb3BlcmF0aW5nIHN5c3RlbSBsb29rcyBhdCB0
byBtYWtlIGEgZGVjaXNpb24gd2hldGhlciBvciBub3QgeW91IGFyZSBhbGxv
d2VkIHRvIGRvIHNvbWV0aGluZyAobW9zdCBvZiB0aGUgdGltZSwgdGhlcmUg
YXJlIHNvbWUgZXhjZXB0aW9ucykuCgpXaGVuIHlvdSBsb2cgaW4sIHRoZSBs
b2dpbiBzaGVsbCBzZXRzIGJvdGggdGhlICoqcmVhbCBhbmQgZWZmZWN0aXZl
IHVzZXIgSUQqKiB0byB0aGUgc2FtZSB2YWx1ZSAoeW91ciAqKnJlYWwgdXNl
ciBJRCoqKSBhcyBzdXBwbGllZCBieSB0aGUgcGFzc3dvcmQgZmlsZS4KCklm
LCBmb3IgaW5zdGFuY2UsIHlvdSBleGVjdXRlIHNldHVpZCwgYW5kIGJlc2lk
ZXMgcnVubmluZyBhcyBhbm90aGVyIHVzZXIgKGUuZy4gKipyb290KiopIHRo
ZSBzZXR1aWQgcHJvZ3JhbSBpcyBhbHNvIHN1cHBvc2VkIHRvIGRvIHNvbWV0
aGluZyBvbiB5b3VyIGJlaGFsZi4KCkFmdGVyIGV4ZWN1dGluZyBzZXR1aWQs
IGl0IHdpbGwgaGF2ZSB5b3VyICoqcmVhbCBJRCoqIChzaW5jZSB5b3UncmUg
dGhlIHByb2Nlc3Mgb3duZXIpIGFuZCB0aGUgZWZmZWN0aXZlIHVzZXIgaWQg
b2YgdGhlIGZpbGUgb3duZXIgKGZvciBleGFtcGxlICoqcm9vdCoqKSBzaW5j
ZSBpdCBpcyBzZXR1aWQuCgpMZXQncyB1c2UgdGhlIGNhc2Ugb2YgYHBhc3N3
ZGA6CgpgYGBiYXNoCi1yd3NyLXhyLXggMSByb290IHJvb3QgNDUzOTYgbWF5
IDI1ICAyMDEyIC91c3IvYmluL3Bhc3N3ZApgYGAKCldoZW4gdXNlcjIgd2Fu
dHMgdG8gY2hhbmdlIHRoZWlyIHBhc3N3b3JkLCB0aGV5IGV4ZWN1dGUgYC91
c3IvYmluL3Bhc3N3ZGAuCgpUaGUgKipSVUlEKiogd2lsbCBiZSB1c2VyMiBi
dXQgdGhlICoqRVVJRCoqIG9mIHRoYXQgcHJvY2VzcyB3aWxsIGJlIHJvb3Qu
Cgp1c2VyMiBjYW4gdXNlIG9ubHkgcGFzc3dkIHRvIGNoYW5nZSB0aGVpciBv
d24gcGFzc3dvcmQsIGJlY2F1c2UgaW50ZXJuYWxseSBwYXNzd2QgY2hlY2tz
IHRoZSAqKlJVSUQqKiBhbmQsIGlmIGl0IGlzIG5vdCByb290LCBpdHMgYWN0
aW9ucyB3aWxsIGJlIGxpbWl0ZWQgdG8gcmVhbCB1c2VyJ3MgcGFzc3dvcmQu
CgpJdCdzIG5lY2Vzc2FyeSB0aGF0IHRoZSAqKkVVSUQqKiBiZWNvbWVzIHJv
b3QgaW4gdGhlIGNhc2Ugb2YgcGFzc3dkIGJlY2F1c2UgdGhlIHByb2Nlc3Mg
bmVlZHMgdG8gd3JpdGUgdG8gYC9ldGMvcGFzc3dkYCBhbmQvb3IgYC9ldGMv
c2hhZG93YC4KClVzZWZ1bCByZXNvdXJjZXM6CgotIFtEaWZmZXJlbmNlIGJl
dHdlZW4gUmVhbCBVc2VyIElELCBFZmZlY3RpdmUgVXNlciBJRCBhbmQgU2F2
ZWQgVXNlciBJRD8gKG9yaWdpbmFsKV0oaHR0cHM6Ly9zdGFja292ZXJmbG93
LmNvbS9xdWVzdGlvbnMvMzA0OTM0MjQvd2hhdC1pcy10aGUtZGlmZmVyZW5j
ZS1iZXR3ZWVuLWEtcHJvY2Vzcy1waWQtcHBpZC11aWQtZXVpZC1naWQtYW5k
LWVnaWQpCi0gW1doYXQgaXMgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBhIHBp
ZCwgcHBpZCwgdWlkLCBldWlkLCBnaWQgYW5kIGVnaWQ/XShodHRwczovL3N0
YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8zMDQ5MzQyNC93aGF0LWlzLXRo
ZS1kaWZmZXJlbmNlLWJldHdlZW4tYS1wcm9jZXNzLXBpZC1wcGlkLXVpZC1l
dWlkLWdpZC1hbmQtZWdpZCkKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3Vt
bWFyeT48Yj5EZXZlbG9wZXIgYWRkZWQgY3JvbiBqb2Igd2hpY2ggZ2VuZXJh
dGUgbWFzc2l2ZSBsb2cgZmlsZXMuIEhvdyBkbyB5b3UgcHJldmVudCB0aGVt
IGZyb20gZ2V0dGluZyBzbyBiaWc/PC9iPjwvc3VtbWFyeT48YnI+CgpVc2lu
ZyBgbG9ncm90YXRlYCBpcyB0aGUgdXN1YWwgd2F5IG9mIGRlYWxpbmcgd2l0
aCBsb2dmaWxlcy4gQnV0IGluc3RlYWQgb2YgYWRkaW5nIGNvbnRlbnQgdG8g
YC9ldGMvbG9ncm90YXRlLmNvbmZgIHlvdSBzaG91bGQgYWRkIHlvdXIgb3du
IGpvYiB0byBgL2V0Yy9sb2dyb3RhdGUuZC9gLCBvdGhlcndpc2UgeW91IHdv
dWxkIGhhdmUgdG8gbG9vayBhdCBtb3JlIGRpZmZzIG9mIGNvbmZpZ3VyYXRp
b24gZmlsZXMgZHVyaW5nIHJlbGVhc2UgdXBncmFkZXMuCgpJZiBpdCdzIGFj
dGl2ZWx5IGJlaW5nIHdyaXR0ZW4gdG8geW91IGRvbid0IHJlYWxseSBoYXZl
IG11Y2ggeW91IGNhbiBkbyBieSB3YXkgb2YgdHJ1bmNhdGUuIFlvdXIgb25s
eSBvcHRpb25zIGFyZSB0byB0cnVuY2F0ZSB0aGUgZmlsZToKCmBgYGJhc2gK
OiA+L3Zhci9sb2cvbWFzc2l2ZS1sb2dmaWxlCmBgYAoKSXQncyB2ZXJ5IGhl
bHBmdWwsIGJlY2F1c2UgaXQncyB0cnVuY2F0ZSB0aGUgZmlsZSB3aXRob3V0
IGRpc3J1cHRpbmcgdGhlIHByb2Nlc3Nlcy4KClVzZWZ1bCByZXNvdXJjZXM6
CgotIFtIb3cgdG8gVXNlIGxvZ3JvdGF0ZSB0byBNYW5hZ2UgTG9nIEZpbGVz
XShodHRwczovL3d3dy5saW5vZGUuY29tL2RvY3MvdXB0aW1lL2xvZ3MvdXNl
LWxvZ3JvdGF0ZS10by1tYW5hZ2UtbG9nLWZpbGVzLykKLSBbU3lzdGVtIGxv
Z2dpbmddKGh0dHBzOi8vd3d3LmlibS5jb20vZGV2ZWxvcGVyd29ya3MvbGli
cmFyeS9sLWxwaWMxLTEwOC0yL2luZGV4Lmh0bWwpCgo8L2RldGFpbHM+Cgo8
ZGV0YWlscz4KPHN1bW1hcnk+PGI+SG93IHRoZSBMaW51eCBrZXJuZWwgY3Jl
YXRlcywgbWFuYWdlcyBhbmQgZGVsZXRlcyB0aGUgcHJvY2Vzc2VzIGluIHRo
ZSBzeXN0ZW0/ICoqKjwvYj48L3N1bW1hcnk+PGJyPgoKVG8gYmUgY29tcGxl
dGVkLgoKVXNlZnVsIHJlc291cmNlczoKCi0gW0xpbnV4IFByb2Nlc3Nlc10o
aHR0cHM6Ly93d3cudGxkcC5vcmcvTERQL3Rsay9rZXJuZWwvcHJvY2Vzc2Vz
Lmh0bWwpCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+RXhw
bGFpbiB0aGUgc2VsZWN0ZWQgaW5mb3JtYXRpb24geW91IGNhbiBzZWUgaW4g
PGNvZGU+dG9wPC9jb2RlPiBhbmQgPGNvZGU+aHRvcDwvY29kZT4uIEhvdyB0
byBkaWFnbm9zZSBsb2FkLCBoaWdoIHVzZXIgdGltZSBhbmQgb3V0LW9mLW1l
bW9yeSBwcm9ibGVtcyB3aXRoIHRoZXNlIHRvb2xzPyAqKio8L2I+PC9zdW1t
YXJ5Pjxicj4KClRvIGJlIGNvbXBsZXRlZC4KClVzZWZ1bCByZXNvdXJjZXM6
CgotIFt0b3AgZXhwbGFpbmVkIHZpc3VhbGx5XShodHRwczovL3d3dy5zdmVu
bmQuYmUvdG9wLWV4cGxhaW5lZC12aXN1YWxseS8pCi0gW2h0b3AgRXhwbGFp
bmVkIFZpc3VhbGx5XShodHRwczovL2NvZGVhaG95LmNvbS8yMDE3LzAxLzIw
L2hodG9wLWV4cGxhaW5lZC12aXN1YWxseS8pCi0gW0V4cGxhbmF0aW9uIG9m
IGV2ZXJ5dGhpbmcgeW91IGNhbiBzZWUgaW4gaHRvcC90b3Agb24gTGludXhd
KGh0dHBzOi8vcGV0ZXJpcy5yb2Nrcy9ibG9nL2h0b3AvKQoKPC9kZXRhaWxz
PgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPkhvdyB3b3VsZCB5b3UgcmVjb2du
aXplIGEgcHJvY2VzcyB0aGF0IGlzIGhvZ2dpbmcgcmVzb3VyY2VzPyA8L2I+
PC9zdW1tYXJ5Pjxicj4KCmB0b3BgIHdvcmtzIHJlYXNvbmFibHkgd2VsbCwg
YXMgbG9uZyBhcyB5b3UgbG9vayBhdCB0aGUgcmlnaHQgbnVtYmVycy4KLSAq
Kk0qKiBTb3J0cyBieSBjdXJyZW50IHJlc2lkZW50IG1lbW9yeSB1c2FnZQot
ICoqVCoqIFNvcnRzIGJ5IHRvdGFsICggb3IgY3VtbXVsYXRpdmUpIENQVSB1
c2FnZQotICoqUCoqIFNvcnRzIGJ5IGN1cnJlbnQgQ1BVIHVzYWdlICh0aGlz
IGlzIHRoZSBkZWZhdWx0IHJlZnJlc2gpCi0gKio/KiogRGlzcGxheXMgYSB1
c2FnZSBzdW1tYXJ5IGZvciBhbGwgdG9wIGNvbW1hbmRzCgpUaGlzIGlzIHZl
cnkgaW1wb3J0YW50IGluZm9ybWF0aW9uIHRvIG9idGFpbiB3aGVuIHByb2Js
ZW0gc29sdmluZyB3aHkgYSBjb21wdXRlciBwcm9jZXNzIGlzIHJ1bm5pbmcg
c2xvd2x5IGFuZCBtYWtpbmcgZGVjaXNpb25zIG9uIHdoYXQgcHJvY2Vzc2Vz
IHRvIGtpbGwvc29mdHdhcmUgdG8gdW5pbnN0YWxsLgoKVXNlZnVsIHJlc291
cmNlczoKCi0gW0hvdyB0byBmaW5kIHRoZSBwcm9jZXNzKGVzKSB3aGljaCBh
cmUgaG9nZ2luZyB0aGUgbWFjaGluZV0oaHR0cHM6Ly9zdXBlcnVzZXIuY29t
L3F1ZXN0aW9ucy8zMjYzMDAvaG93LXRvLWZpbmQtdGhlLXByb2Nlc3Nlcy13
aGljaC1hcmUtaG9nZ2luZy10aGUtbWFjaGluZSkKCjwvZGV0YWlscz4KCjxk
ZXRhaWxzPgo8c3VtbWFyeT48Yj5Zb3UgbmVlZCB0byB1cGdyYWRlIDxjb2Rl
Pm50cGQ8L2NvZGU+IHNlcnZpY2UgYXQgMjAwIHNlcnZlcnMuIFdoYXQgaXMg
dGhlIGJlc3Qgd2F5IHRvIGdvIGFib3V0IHVwZ3JhZGluZyBhbGwgb2YgdGhl
c2UgdG8gdGhlIGxhdGVzdD88L2I+PC9zdW1tYXJ5Pjxicj4KCkJ5IHVzaW5n
ICoqSW5mcmFzdHJ1Y3R1cmUgYXMgYSBDb2RlKiogYXBwcm9hY2gsIHRoZXJl
IGFyZSBtdWx0aXBsZSBnb29kIHdheXM6CgoxLiAqKkNvbmZpZ3VyYXRpb24g
U3luY2hyb25pemF0aW9uIENoYW5nZSBNYW5hZ2VtZW50IE1vZGVsKio6CgpU
aGVyZSBhcmUgQ29uZmlndXJhdGlvbiBNYW5hZ2VtZW50IFRvb2xzIChBbnNp
YmxlLCBDaGVmLCBQdXBwZXQsIFNhbHRzdGFjaywgLi4uKSwgdGhhdCBjYW4g
YmUgdXNlZCB0byBhdXRvbWF0aWNhbGx5IHVwZGF0ZSBgbnRwZGAgc2Vydmlj
ZSBvbiBhbGwgc2VydmVycy4gVG8ga2VlcCBzeXN0ZW1zIHN0YWJsZSwgc3lz
dGVtIHBhY2thZ2VzIG9uIHNlcnZlcnMgYXJlIHVzdWFsbHkgYXV0by11cGRh
dGVkIHdpdGggb25seSBzZWN1cml0eSB1cGRhdGVzLiBNYWpvciBvciBtaW5v
ciB2ZXJzaW9ucyBvZiBwYWNrYWdlcyBhcmUgdXN1YWxseSB2ZXJzaW9uIGxv
Y2tlZCBpbiBjb25maWd1cmF0aW9uIGRlZmluaXRpb25zIHRvIHByZXZlbnQg
bWlzY29uZmlndXJhdGlvbiBvZiB0aGUgc2VydmljZS4gQ2hhbmdlIGlzIHRo
ZW4gZGVwbG95ZWQgYnkgY2hhbmdpbmcgYG50cGRgIHZlcnNpb24gaW4gY29u
ZmlndXJhdGlvbiBkZWZpbml0aW9uLgoKV2l0aCB0aGlzIGFwcHJvYWNoLCBp
dCBpcyBpbXBvcnRhbnQgdG8gYmUgY2FyZWZ1bCB3aGVuIGRlcGxveWluZyBj
aGFuZ2VzIGludG8gaW5mcmFzdHJ1Y3R1cmUgbWFzc2l2ZWx5LiBUaGUgcGlw
ZWxpbmUgb2YgZGVwbG95bWVudCBzaG91bGQgaW5jbHVkZSBVbml0LCBJbnRl
Z3JhdGlvbiBhbmQgU3lzdGVtIHRlc3RzLCBhbmQgZXZlbnR1YWxseSBiZSBm
aXJzdCBkZXBsb3llZCBpbnRvIFN0YWdpbmcgZW52aXJvbm1lbnQgdG8gcHJv
dmUgY29uZmlndXJhdGlvbi4gSWYgdGVzdHMgcHJvdmUgY29uZmlndXJhdGlv
biBjb3JyZWN0bmVzcywgZGVwbG95bWVudCBzaG91bGQgYmUgZG9uZSBieSBp
bmNyZW1lbnRhbCByb2xsb3V0IHdpdGggYWJpbGl0eSB0byByb2xsYmFjayBp
biBjYXNlIG9mIGVycm9ycyBvciBmYWlsdXJlLgoKMi4gKipJbW11dGFibGUg
U2VydmVycyBNb2RlbCoqOgoKSW4gSW1tdXRhYmxlIFNlcnZlciBtb2RlbCwg
d2hvbGUgdW5pdCAoc2VydmVyLCBjb250YWluZXIpIGlzIHJlcGxhY2VkIGJ5
IG5ldyB1cGRhdGVkIGltYWdlIHJhdGhlciB0aGFuIG1ha2luZyBjaGFuZ2Vz
IHRvIHJ1bm5pbmcgc2VydmVyICh0aGlzIGVsaW1pbmF0ZXMgY29uZmlndXJh
dGlvbiBkcmlmdCkuIFdpdGggdGhpcyBhcHByb2FjaCB5b3UgdXN1YWxseSBi
dWlsZCBzZXJ2ZXIgaW1hZ2Ugd2l0aCB0b29scyBsaWtlIFBhY2tlciBvciBE
b2NrZXIgd2l0aCBEb2NrZXJmaWxlLiBUaGlzIGltYWdlIGlzIHRoZW4gdGVz
dGVkIGFuZCBkZXBsb3llZCBzaW1pbGFybHkgYXMgaW4gb3B0aW9uIGFib3Zl
ICgxLiksIGJ1dCBub3cgdXNpbmcgdGVjaG5pcXVlcyBzdWNoIGFzIENhbmFy
eSBSZWxlYXNlLCB3aGljaCBhbHNvIGhhcyBhYmlsaXR5IHRvIGluY3JlbWVu
dGFsIHJvbGxvdXQgYW5kIHJvbGxiYWNrLgoKVXNlZnVsIHJlc291cmNlczoK
Ci0gW0luZnJhc3RydWN0dXJlIGFzIGEgQ29kZSAtIENoYXB0ZXIgODogUGF0
dGVybnMgZm9yIFVwZGF0aW5nIGFuZCBDaGFuZ2luZyBTZXJ2ZXJzXShodHRw
Oi8vc2hvcC5vcmVpbGx5LmNvbS9wcm9kdWN0LzA2MzY5MjAwMzkyOTcuZG8p
Cgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+SG93IHRvIHBl
cm1hbmVudGx5IHNldCA8Y29kZT4kUEFUSDwvY29kZT4gb24gTGludXgvVW5p
eD8gV2h5IGlzIHRoaXMgdmFyaWFibGUgc28gaW1wb3J0YW50PyAqKio8L2I+
PC9zdW1tYXJ5PgoKVG8gYmUgY29tcGxldGVkLgoKPC9kZXRhaWxzPgoKPGRl
dGFpbHM+CjxzdW1tYXJ5PjxiPldoZW4geW91ciBzZXJ2ZXIgaXMgYm9vdGlu
ZyB1cCBzb21lIGVycm9ycyBhcHBlYXJzIG9uIHRoZSBjb25zb2xlLiBIb3cg
dG8gZXhhbWluZSBib290IG1lc3NhZ2VzIGFuZCB3aGVyZSBhcmUgdGhleSBz
dG9yZWQ/PC9iPjwvc3VtbWFyeT48YnI+CgpZb3VyIGNvbnNvbGUgaGFzIHR3
byB0eXBlcyBvZiBtZXNzYWdlczoKCi0gKipnZW5lcmF0ZWQgYnkgdGhlIGtl
cm5lbCoqICh2aWEgcHJpbnRrKQotICoqZ2VuZXJhdGVkIGJ5IHVzZXJzcGFj
ZSoqICh1c3VhbGx5IHlvdXIgaW5pdCBzeXN0ZW0pCgpLZXJuZWwgbWVzc2Fn
ZXMgYXJlIGFsd2F5cyBzdG9yZWQgaW4gdGhlICoqa21zZyoqIGJ1ZmZlciwg
dmlzaWJsZSB2aWEgYGRtZXNnYCBjb21tYW5kLiBUaGV5J3JlIGFsc28gb2Z0
ZW4gY29waWVkIHRvIHlvdXIgKipzeXNsb2cqKi4gVGhpcyBhbHNvIGFwcGxp
ZXMgdG8gdXNlcnNwYWNlIG1lc3NhZ2VzIHdyaXR0ZW4gdG8gYC9kZXYva21z
Z2AsIGJ1dCB0aG9zZSBhcmUgZmFpcmx5IHJhcmUuCgpNZWFud2hpbGUsIHdo
ZW4gdXNlcnNwYWNlIHdyaXRlcyBpdHMgZmFuY3kgYm9vdCBzdGF0dXMgdGV4
dCB0byBgL2Rldi9jb25zb2xlYCBvciBgL2Rldi90dHkxYCwgaXQncyBub3Qg
c3RvcmVkIGFueXdoZXJlIGF0IGFsbC4gSXQganVzdCBnb2VzIHRvIHRoZSBz
Y3JlZW4gYW5kIHRoYXQncyBpdC4KCmBkbWVzZ2AgaXMgdXNlZCB0byByZXZp
ZXcgYm9vdCBtZXNzYWdlcyBjb250YWluZWQgaW4gdGhlIGtlcm5lbCByaW5n
IGJ1ZmZlci4gQSByaW5nIGJ1ZmZlciBpcyBhIGJ1ZmZlciBvZiBmaXhlZCBz
aXplIGZvciB3aGljaCBhbnkgbmV3IGRhdGEgYWRkZWQgdG8gaXQgb3Zlcndy
aXRlcyB0aGUgb2xkZXN0IGRhdGEgaW4gaXQuCgpJdCBzaG93cyBvcGVyYXRp
b25zIG9uY2UgdGhlIGJvb3QgcHJvY2VzcyBoYXMgY29tcGxldGVkLCBzdWNo
IGFzIGNvbW1hbmQgbGluZSBvcHRpb25zIHBhc3NlZCB0byB0aGUga2VybmVs
OyBoYXJkd2FyZSBjb21wb25lbnRzIGRldGVjdGVkLCBldmVudHMgd2hlbiBh
IG5ldyBVU0IgZGV2aWNlIGlzIGFkZGVkLCBvciBlcnJvcnMgbGlrZSBOSUMg
KE5ldHdvcmsgSW50ZXJmYWNlIENhcmQpIGZhaWx1cmUgYW5kIHRoZSBkcml2
ZXJzIHJlcG9ydCBubyBsaW5rIGFjdGl2aXR5IGRldGVjdGVkIG9uIHRoZSBu
ZXR3b3JrIGFuZCBzbyBtdWNoIG1vcmUuCgpJZiBzeXN0ZW0gbG9nZ2luZyBp
cyBkb25lIHZpYSB0aGUgam91cm5hbCBjb21wb25lbnQgeW91IHNob3VsZCB1
c2UgYGpvdXJuYWxjdGxgLiBJdCBzaG93cyBtZXNzYWdlcyBpbmNsdWRlIGtl
cm5lbCBhbmQgYm9vdCBtZXNzYWdlczsgbWVzc2FnZXMgZnJvbSBzeXNsb2cg
b3IgdmFyaW91cyBzZXJ2aWNlcy4KCkJvb3QgaXNzdWVzL2Vycm9ycyBjYWxs
cyBmb3IgYSBzeXN0ZW0gYWRtaW5pc3RyYXRvciB0byBsb29rIGludG8gY2Vy
dGFpbiBpbXBvcnRhbnQgZmlsZXMgaW4gY29uanVuY3Rpb24gd2l0aCBwYXJ0
aWN1bGFyIGNvbW1hbmRzIChoYW5kbGVkIGRpZmZlcmVudGx5IGJ5IGRpZmZl
cmVudCB2ZXJzaW9ucyBvZiBMaW51eCk6CgotIGAvdmFyL2xvZy9ib290Lmxv
Z2AgLSBzeXN0ZW0gYm9vdCBsb2csIGl0IGNvbnRhaW5zIGFsbCB0aGF0IHVu
Zm9sZGVkIGR1cmluZyB0aGUgc3lzdGVtIGJvb3QKLSBgL3Zhci9sb2cvbWVz
c2FnZXNgIC0gc3RvcmVzIGdsb2JhbCBzeXN0ZW0gbWVzc2FnZXMsIGluY2x1
ZGluZyB0aGUgbWVzc2FnZXMgdGhhdCBhcmUgbG9nZ2VkIGR1cmluZyBzeXN0
ZW0gYm9vdAotIGAvdmFyL2xvZy9kbWVzZ2AgLSBjb250YWlucyBrZXJuZWwg
cmluZyBidWZmZXIgaW5mb3JtYXRpb24KClVzZWZ1bCByZXNvdXJjZXM6Cgot
IFtIb3cgdG8gdmlldyBhbGwgYm9vdCBtZXNzYWdlcyBpbiBMaW51eCBhZnRl
ciBib290aW5nPyAob3JpZ2luYWwpXShodHRwczovL3N1cGVydXNlci5jb20v
cXVlc3Rpb25zLzExODg0MDcvaG93LXRvLXZpZXctYWxsLWJvb3QtbWVzc2Fn
ZXMtaW4tbGludXgtYWZ0ZXItYm9vdGluZykKLSBbRGlmZmVyZW5jZXMgaW4g
L3Zhci9sb2cve3N5c2xvZyxkbWVzZyxtZXNzYWdlc30gbG9nIGZpbGVzXSho
dHRwczovL3N1cGVydXNlci5jb20vcXVlc3Rpb25zLzU2NTkyNy9kaWZmZXJl
bmNlcy1pbi12YXItbG9nLXN5c2xvZy1kbWVzZy1tZXNzYWdlcy1sb2ctZmls
ZXMpCi0gW0hvdyBjYW4gdGhlIG1lc3NhZ2VzIHRoYXQgc2Nyb2xsIGJ5IHdo
ZW4gYm9vdGluZyBhIERlYmlhbiBzeXN0ZW0gYmUgcmV2aWV3ZWQgbGF0ZXI/
XShodHRwczovL3NlcnZlcmZhdWx0LmNvbS9xdWVzdGlvbnMvNTE2NDExL2Fs
bC1kZWJpYW4tYm9vdC1tZXNzYWdlcykKCjwvZGV0YWlscz4KCjxkZXRhaWxz
Pgo8c3VtbWFyeT48Yj5Td2FwIHVzYWdlIHRvbyBoaWdoLiBXaGF0IGFyZSB0
aGUgcmVhc29ucyBmb3IgdGhpcyBhbmQgaG93IHRvIHJlc29sdmUgc3dhcHBp
bmcgcHJvYmxlbXM/PC9iPjwvc3VtbWFyeT48YnI+CgoqKlN3YXAqKiBzcGFj
ZSBpcyBhIHJlc3RyaWN0ZWQgYW1vdW50IG9mIHBoeXNpY2FsIG1lbW9yeSB0
aGF0IGlzIGFsbG9jYXRlZCBmb3IgdXNlIGJ5IHRoZSBvcGVyYXRpbmcgc3lz
dGVtIHdoZW4gYXZhaWxhYmxlIG1lbW9yeSBoYXMgYmVlbiBmdWxseSB1dGls
aXplZC4gSXQgaXMgbWVtb3J5IG1hbmFnZW1lbnQgdGhhdCBpbnZvbHZlcyBz
d2FwcGluZyBzZWN0aW9ucyBvZiBtZW1vcnkgdG8gYW5kIGZyb20gcGh5c2lj
YWwgc3RvcmFnZS4KCklmIHRoZSBzeXN0ZW0gbmVlZHMgbW9yZSBtZW1vcnkg
cmVzb3VyY2VzIGFuZCB0aGUgUkFNIGlzIGZ1bGwsIGluYWN0aXZlIHBhZ2Vz
IGluIG1lbW9yeSBhcmUgbW92ZWQgdG8gdGhlIHN3YXAgc3BhY2UuIFdoaWxl
IHN3YXAgc3BhY2UgY2FuIGhlbHAgbWFjaGluZXMgd2l0aCBhIHNtYWxsIGFt
b3VudCBvZiBSQU0sIGl0IHNob3VsZCBub3QgYmUgY29uc2lkZXJlZCBhIHJl
cGxhY2VtZW50IGZvciBtb3JlIFJBTS4gKipTd2FwKiogc3BhY2UgaXMgbG9j
YXRlZCBvbiBoYXJkIGRyaXZlcywgd2hpY2ggaGF2ZSBhIHNsb3dlciBhY2Nl
c3MgdGltZSB0aGFuIHBoeXNpY2FsIG1lbW9yeS4KCldvcmtsb2FkIGluY3Jl
YXNlcyB5b3VyIFJBTSBkZW1hbmQuIFlvdSBhcmUgcnVubmluZyBhIHdvcmts
b2FkIHRoYXQgcmVxdWlyZXMgbW9yZSBtZW1vcnkuIFVzYWdlIG9mIHRoZSBl
bnRpcmUgc3dhcCBpbmRpY2F0ZXMgdGhhdC4gQWxzbywgY2hhbmdpbmcgYHN3
YXBwaW5lc3NgIHRvICoqMSoqIG1pZ2h0IG5vdCBiZSBhIHdpc2UgZGVjaXNp
b24uIFNldHRpbmcgYHN3YXBwaW5lc3NgIHRvICoqMSoqIGRvZXMgbm90IGlu
ZGljYXRlIHRoYXQgc3dhcHBpbmcgd2lsbCBub3QgYmUgZG9uZS4gSXQganVz
dCBpbmRpY2F0ZXMgaG93IGFnZ3Jlc3NpdmUga2VybmVsIHdpbGwgYmUgaW4g
cmVzcGVjdCBvZiBzd2FwcGluZywgaXQgZG9lcyBub3QgZWxpbWluYXRlIHN3
YXBwaW5nLiBTd2FwcGluZyB3aWxsIGhhcHBlbiBpZiBuZWVkcyB0byBiZSBk
b25lLgoKLSAqKkluY3JlYXNpbmcgdGhlIHNpemUgb2YgdGhlIHN3YXAgc3Bh
Y2UqKiAtIGZpcnN0bHksIHlvdSdkIGhhdmUgaW5jcmVhc2VkIGRpc2sgdXNl
LiBJZiB5b3VyIGRpc2tzIGFyZW4ndCBmYXN0IGVub3VnaCB0byBrZWVwIHVw
LCB0aGVuIHlvdXIgc3lzdGVtIG1pZ2h0IGVuZCB1cCB0aHJhc2hpbmcsIGFu
ZCB5b3UnZCBleHBlcmllbmNlIHNsb3dkb3ducyBhcyBkYXRhIGlzIHN3YXBw
ZWQgaW4gYW5kIG91dCBvZiBtZW1vcnkuIFRoaXMgd291bGQgcmVzdWx0IGlu
IGEgYm90dGxlbmVjay4KCi0gKipBZGRpbmcgbW9yZSBSQU0qKiAtIHRoZSBy
ZWFsIHNvbHV0aW9uIGlzIHRvIGFkZCBtb3JlIG1lbW9yeS4gVGhlcmUncyBu
byBzdWJzdGl0dXRlIGZvciBSQU0sIGFuZCBpZiB5b3UgaGF2ZSBlbm91Z2gg
bWVtb3J5LCB5b3UnbGwgc3dhcCBsZXNzLgoKRm9yIG1vbml0b3Jpbmcgc3dh
cCBzcGFjZSB1c2FnZToKCi0gYGNhdCAvcHJvYy9zd2Fwc2AgLSB0byBzZWUg
dG90YWwgYW5kIHVzZWQgc3dhcCBzaXplCi0gYGdyZXAgU3dhcFRvdGFsIC9w
cm9jL21lbWluZm9gIC0gdG8gc2hvdyB0b3RhbCBzd2FwIHNwYWNlCi0gYGZy
ZWVgIC0gdG8gZGlzcGxheSB0aGUgYW1vdW50IG9mIGZyZWUgYW5kIHVzZWQg
c3lzdGVtIG1lbW9yeSAoYWxzbyBzd2FwKQotIGB2bXN0YXRgIC0gdG8gY2hl
Y2sgc3dhcHBpbmcgc3RhdGlzdGljcwotIGB0b3BgLCBgaHRvcGAtIHRvIGNo
ZWNrIHN3YXAgc3BhY2UgdXNhZ2UKLSBgYXRvcGAgLSB0byBzaG93IGlzIHRo
YXQgeW91ciBzeXN0ZW0gaXMgb3ZlcmNvbW1pdHRpbmcgbWVtb3J5Ci0gb3Ig
dXNlIG9uZS1saW5lciBzaGVsbCBjb21tYW5kIHRvIGxpc3QgYWxsIGFwcGxp
Y2F0aW9ucyB3aXRoIGhvdyBtdWNoIHN3YXAgc3BhY2Ugc2VhcmNoIGlzIHVz
aW5nIGluIGtpbG9ieXRlczoKYGBgYmFzaApmb3IgX2ZkIGluIC9wcm9jLyov
c3RhdHVzIDsgZG8KICBhd2sgJy9WbVN3YXB8TmFtZS97cHJpbnRmICQyICIg
IiAkM31FTkR7IHByaW50ICIifScgJF9mZApkb25lIHwgc29ydCAtayAyIC1u
IC1yIHwgbGVzcwpgYGAKClVzZWZ1bCByZXNvdXJjZXM6CgotIFtMaW51eCBh
dGUgbXkgcmFtIV0oaHR0cHM6Ly93d3cubGludXhhdGVteXJhbS5jb20vKQot
IFtIb3cgdG8gZmluZCBvdXQgd2hpY2ggcHJvY2Vzc2VzIGFyZSB1c2luZyBz
d2FwIHNwYWNlIGluIExpbnV4P10oaHR0cHM6Ly9zdGFja292ZXJmbG93LmNv
bS9xdWVzdGlvbnMvNDc5OTUzL2hvdy10by1maW5kLW91dC13aGljaC1wcm9j
ZXNzZXMtYXJlLXVzaW5nLXN3YXAtc3BhY2UtaW4tbGludXgpCi0gWzggVXNl
ZnVsIENvbW1hbmRzIHRvIE1vbml0b3IgU3dhcCBTcGFjZSBVc2FnZSBpbiBM
aW51eF0oaHR0cHM6Ly93d3cudGVjbWludC5jb20vY29tbWFuZHMtdG8tbW9u
aXRvci1zd2FwLXNwYWNlLXVzYWdlLWluLWxpbnV4LykKLSBbV2hhdCBpcyB0
aGUgZGFuZ2VyIGluIGhhdmluZyBhIGZ1bGx5IHVzZWQgU1dBUCBpbiBhbiBV
YnVudHUgc2VydmVyP10oaHR0cHM6Ly9zZXJ2ZXJmYXVsdC5jb20vcXVlc3Rp
b25zLzQ5OTMwMS93aGF0LWlzLXRoZS1kYW5nZXItaW4taGF2aW5nLWEtZnVs
bHktdXNlZC1zd2FwLWluLWFuLXVidW50dS1zZXJ2ZXIpCi0gW0hvdyB0byBl
bXB0eSBzd2FwIGlmIHRoZXJlIGlzIGZyZWUgUkFNP10oaHR0cHM6Ly9hc2t1
YnVudHUuY29tL3F1ZXN0aW9ucy8xMzU3L2hvdy10by1lbXB0eS1zd2FwLWlm
LXRoZXJlLWlzLWZyZWUtcmFtKQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+Cjxz
dW1tYXJ5PjxiPldoYXQgaXMgdW1hc2s/IEhvdyB0byBzZXQgaXQgcGVybWFu
ZW50bHkgZm9yIGEgdXNlcj88L2I+PC9zdW1tYXJ5Pjxicj4KCk9uIExpbnV4
IGFuZCBvdGhlciBVbml4LWxpa2Ugb3BlcmF0aW5nIHN5c3RlbXMsIG5ldyBm
aWxlcyBhcmUgY3JlYXRlZCB3aXRoIGEgZGVmYXVsdCBzZXQgb2YgcGVybWlz
c2lvbnMuIFNwZWNpZmljYWxseSwgYSBuZXcgZmlsZSdzIHBlcm1pc3Npb25z
IG1heSBiZSByZXN0cmljdGVkIGluIGEgc3BlY2lmaWMgd2F5IGJ5IGFwcGx5
aW5nIGEgcGVybWlzc2lvbnMgIm1hc2siIGNhbGxlZCB0aGUgYHVtYXNrYC4g
VGhlIGB1bWFza2AgY29tbWFuZCBpcyB1c2VkIHRvIHNldCB0aGlzIG1hc2ss
IG9yIHRvIHNob3cgeW91IGl0cyBjdXJyZW50IHZhbHVlLgoKUGVybWFuZW50
bHkgY2hhbmdlIChzZXQgZS5nLiBgdW1hc2sgMDJgKToKCi0gYH4vLnByb2Zp
bGVgCi0gYH4vLmJhc2hyY2AKLSBgfi8uenNocmNgCi0gYH4vLmNzaHJjYAoK
VXNlZnVsIHJlc291cmNlczoKCi0gW1doYXQgaXMgVW1hc2sgYW5kIEhvdyBU
byBTZXR1cCBEZWZhdWx0IHVtYXNrIFVuZGVyIExpbnV4P10oaHR0cHM6Ly93
d3cuY3liZXJjaXRpLmJpei90aXBzL3VuZGVyc3RhbmRpbmctbGludXgtdW5p
eC11bWFzay12YWx1ZS11c2FnZS5odG1sKQoKPC9kZXRhaWxzPgoKPGRldGFp
bHM+CjxzdW1tYXJ5PjxiPkV4cGxhaW4gdGhlIGRpZmZlcmVuY2VzIGFtb25n
IHRoZSBmb2xsb3dpbmcgdW1hc2sgdmFsdWVzOiAwMDAsIDAwMiwgMDIyLCAw
MjcsIDA3NywgYW5kIDI3Ny48L2I+PC9zdW1tYXJ5Pjxicj4KCjx0YWJsZSBz
dHlsZT0id2lkdGg6MTAwJSI+CiAgPHRyPgogICAgPHRoPlVtYXNrPC90aD4K
ICAgIDx0aD5GaWxlIHJlc3VsdDwvdGg+CiAgICA8dGg+RGlyZWN0b3J5IHJl
c3VsdDwvdGg+CiAgPC90cj4KICA8dHI+CiAgICA8dGQ+MDAwPC90ZD4KICAg
IDx0ZD42NjYgcnctIHJ3LSBydy08L3RkPgogICAgPHRkPjc3NyByd3ggcnd4
IHJ3eDwvdGQ+CiAgPC90cj4KIDx0cj4KICAgIDx0ZD4wMDI8L3RkPgogICAg
PHRkPjY2NCBydy0gcnctIHItLTwvdGQ+CiAgICA8dGQ+Nzc1IHJ3eCByd3gg
ci14PC90ZD4KICA8L3RyPgogIDx0cj4KICAgIDx0ZD4wMjI8L3RkPgogICAg
PHRkPjY0NCBydy0gci0tIHItLTwvdGQ+CiAgICA8dGQ+NzU1IHJ3eCByLXgg
ci14PC90ZD4KICA8L3RyPgo8dHI+CiAgICA8dGQ+MDI3PC90ZD4KICAgIDx0
ZD42NDAgcnctIHItLSAtLS08L3RkPgogICAgPHRkPjc1MCByd3ggci14IC0t
LTwvdGQ+CiAgPC90cj4KPHRyPgogICAgPHRkPjA3NzwvdGQ+CiAgICA8dGQ+
NjAwIHJ3LS0tLSAtLS08L3RkPgogICAgPHRkPjcwMCByd3ggLS0tIC0tLTwv
dGQ+CiAgPC90cj4KPHRyPgogICAgPHRkPjI3NzwvdGQ+CiAgICA8dGQ+NDAw
IHItLSAtLS0gLS0tPC90ZD4KICAgIDx0ZD41MDAgci14IC0tLSAtLS08L3Rk
PgogIDwvdHI+CjwvdGFibGU+CgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbV2hh
dCBpcyBVbWFzayBhbmQgSG93IFRvIFNldHVwIERlZmF1bHQgdW1hc2sgVW5k
ZXIgTGludXg/XShodHRwczovL3d3dy5jeWJlcmNpdGkuYml6L3RpcHMvdW5k
ZXJzdGFuZGluZy1saW51eC11bml4LXVtYXNrLXZhbHVlLXVzYWdlLmh0bWwp
Cgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+V2hhdCBpcyB0
aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIGEgc3ltYm9saWMgbGluayBhbmQgYSBo
YXJkIGxpbms/PC9iPjwvc3VtbWFyeT48YnI+CgpVbmRlcm5lYXRoIHRoZSBm
aWxlIHN5c3RlbSBmaWxlcyBhcmUgcmVwcmVzZW50ZWQgYnkgaW5vZGVzIChv
ciBpcyBpdCBtdWx0aXBsZSBpbm9kZXMgbm90IHN1cmUpCgotIGEgZmlsZSBp
biB0aGUgZmlsZSBzeXN0ZW0gaXMgYmFzaWNhbGx5IGEgbGluayB0byBhbiBp
bm9kZQotIGEgaGFyZCBsaW5rIHRoZW4ganVzdCBjcmVhdGVzIGFub3RoZXIg
ZmlsZSB3aXRoIGEgbGluayB0byB0aGUgc2FtZSB1bmRlcmx5aW5nIGlub2Rl
CgpXaGVuIHlvdSBkZWxldGUgYSBmaWxlIGl0IHJlbW92ZXMgb25lIGxpbmsg
dG8gdGhlIHVuZGVybHlpbmcgaW5vZGUuIFRoZSBpbm9kZSBpcyBvbmx5IGRl
bGV0ZWQgKG9yIGRlbGV0YWJsZS9vdmVyLXdyaXRhYmxlKSB3aGVuIGFsbCBs
aW5rcyB0byB0aGUgaW5vZGUgaGF2ZSBiZWVuIGRlbGV0ZWQuCgotIGEgc3lt
Ym9saWMgbGluayBpcyBhIGxpbmsgdG8gYW5vdGhlciBuYW1lIGluIHRoZSBm
aWxlIHN5c3RlbQoKT25jZSBhIGhhcmQgbGluayBoYXMgYmVlbiBtYWRlIHRo
ZSBsaW5rIGlzIHRvIHRoZSBpbm9kZS4gZGVsZXRpbmcgcmVuYW1pbmcgb3Ig
bW92aW5nIHRoZSBvcmlnaW5hbCBmaWxlIHdpbGwgbm90IGFmZmVjdCB0aGUg
aGFyZCBsaW5rIGFzIGl0IGxpbmtzIHRvIHRoZSB1bmRlcmx5aW5nIGlub2Rl
LiBBbnkgY2hhbmdlcyB0byB0aGUgZGF0YSBvbiB0aGUgaW5vZGUgaXMgcmVm
bGVjdGVkIGluIGFsbCBmaWxlcyB0aGF0IHJlZmVyIHRvIHRoYXQgaW5vZGUu
CgpOb3RlOiBIYXJkIGxpbmtzIGFyZSBvbmx5IHZhbGlkIHdpdGhpbiB0aGUg
c2FtZSBmaWxlIHN5c3RlbS4gU3ltYm9saWMgbGlua3MgY2FuIHNwYW4gZmls
ZSBzeXN0ZW1zIGFzIHRoZXkgYXJlIHNpbXBseSB0aGUgbmFtZSBvZiBhbm90
aGVyIGZpbGUuCgpEaWZmZXJlbmNlczoKCi0gKipIYXJkbGluayoqIGNhbm5v
dCBiZSBjcmVhdGVkIGZvciBkaXJlY3Rvcmllcy4gSGFyZCBsaW5rIGNhbiBv
bmx5IGJlIGNyZWF0ZWQgZm9yIGEgZmlsZQotICoqU29mdGxpbmsqKiBhbHNv
IHRlcm1lZCBhIHN5bWJvbGljIGxpbmtzIG9yIHN5bWxpbmtzIGNhbiBsaW5r
IHRvIGEgZGlyZWN0b3J5CgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbV2hhdCBp
cyB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIGEgaGFyZCBsaW5rIGFuZCBhIHN5
bWJvbGljIGxpbms/XShodHRwczovL21lZGl1bS5jb20vQHdlbmR5bWF5b3Jn
YXNlZ3VyYS93aGF0LWlzLXRoZS1kaWZmZXJlbmNlLWJldHdlZW4tYS1oYXJk
LWxpbmstYW5kLWEtc3ltYm9saWMtbGluay04YzA0OTMwNDFiNjIpCgo8L2Rl
dGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+SG93IGRvZXMgdGhlIHN0
aWNreSBiaXQgd29yaz8gVGhlIDxjb2RlPlNVSUQvR1VJRDwvY29kZT4gaXMg
dGhlIHNhbWU/PC9iPjwvc3VtbWFyeT48YnI+CgpUaGlzIGlzIHByb2JhYmx5
IG9uZSBvZiBteSBtb3N0IGlya3NvbWUgdGhpbmdzIHRoYXQgcGVvcGxlIG1l
c3MgdXAgYWxsIHRoZSB0aW1lLiBUaGUgKipTVUlEL0dVSUQqKiBiaXQgYW5k
IHRoZSAqKnN0aWNreS1iaXQqKiBhcmUgMiBjb21wbGV0ZWx5IGRpZmZlcmVu
dCB0aGluZ3MuCgpJZiB5b3UgZG8gYSBgbWFuIGNobW9kYCB5b3UgY2FuIHJl
YWQgYWJvdXQgdGhlICoqU1VJRCoqIGFuZCAqKnN0aWNreS1iaXRzKiouCgoq
KlNVSUQvR1VJRCoqCgpXaGF0IHRoZSBhYm92ZSBtYW4gcGFnZSBpcyB0cnlp
bmcgdG8gc2F5IGlzIHRoYXQgdGhlIHBvc2l0aW9uIHRoYXQgdGhlIHggYml0
IHRha2VzIGluIHRoZSByd3hyd3hyd3ggZm9yIHRoZSB1c2VyIG9jdGFsICgx
c3QgZ3JvdXAgb2Ygcnd4KSBhbmQgdGhlIGdyb3VwIG9jdGFsICgybmQgZ3Jv
dXAgb2Ygcnd4KSBjYW4gdGFrZSBhbiBhZGRpdGlvbmFsIHN0YXRlIHdoZXJl
IHRoZSB4IGJlY29tZXMgYW4gcy4gV2hlbiB0aGlzIG9jY3VycyB0aGlzIGZp
bGUgd2hlbiBleGVjdXRlZCAoaWYgaXQncyBhIHByb2dyYW0gYW5kIG5vdCBq
dXN0IGEgc2hlbGwgc2NyaXB0KSB3aWxsIHJ1biB3aXRoIHRoZSBwZXJtaXNz
aW9ucyBvZiB0aGUgb3duZXIgb3IgdGhlIGdyb3VwIG9mIHRoZSBmaWxlLgoK
U28gaWYgdGhlIGZpbGUgaXMgb3duZWQgYnkgcm9vdCBhbmQgdGhlICoqU1VJ
RCoqIGJpdCBpcyB0dXJuZWQgb24sIHRoZSBwcm9ncmFtIHdpbGwgcnVuIGFz
IHJvb3QuIEV2ZW4gaWYgeW91IGV4ZWN1dGUgaXQgYXMgYSByZWd1bGFyIHVz
ZXIuIFRoZSBzYW1lIHRoaW5nIGFwcGxpZXMgdG8gdGhlICoqR1VJRCoqIGJp
dC4KCkV4YW1wbGVzOgoKKipubyBzdWlkL2d1aWQqKiAtIGp1c3QgdGhlIGJp
dHMgYHJ3eHIteHIteGAgYXJlIHNldC4KCmBgYGJhc2gKbHMgLWx0IGIucGwK
LXJ3eHIteHIteCAxIHJvb3Qgcm9vdCAxNzkgSmFuICA5IDAxOjAxIGIucGwK
YGBgCgoqKnN1aWQgJiB1c2VyJ3MgZXhlY3V0YWJsZSBiaXQgZW5hYmxlZCAo
bG93ZXJjYXNlIHMpKiogLSB0aGUgYml0cyBgcndzci14LXIteGAgYXJlIHNl
dC4KCmBgYGJhc2gKY2htb2QgdStzIGIucGwKbHMgLWx0IGIucGwKLXJ3c3It
eHIteCAxIHJvb3Qgcm9vdCAxNzkgSmFuICA5IDAxOjAxIGIucGwKYGBgCgoq
KnN1aWQgZW5hYmxlZCAmIGV4ZWN1dGFibGUgYml0IGRpc2FibGVkICh1cHBl
cmNhc2UgUykqKiAtIHRoZSBiaXRzIGByd1NyLXhyLXhgIGFyZSBzZXQuCgpg
YGBiYXNoCmNobW9kIHUteCBiLnBsCmxzIC1sdCBiLnBsCi1yd1NyLXhyLXgg
MSByb290IHJvb3QgMTc5IEphbiAgOSAwMTowMSBiLnBsCmBgYAoKKipndWlk
ICYgZ3JvdXAncyBleGVjdXRhYmxlIGJpdCBlbmFibGVkIChsb3dlcmNhc2Ug
cykqKiAtIHRoZSBiaXRzIGByd3hyLXNyLXhgIGFyZSBzZXQuCgpgYGBiYXNo
CmNobW9kIGcrcyBiLnBsCmxzIC1sdCBiLnBsCi1yd3hyLXNyLXggMSByb290
IHJvb3QgMTc5IEphbiAgOSAwMTowMSBiLnBsCmBgYAoKKipndWlkIGVuYWJs
ZWQgJiBleGVjdXRhYmxlIGJpdCBkaXNhYmxlZCAodXBwZXJjYXNlIFMpKiog
LSB0aGUgYml0cyBgcnd4ci1Tci14YCBhcmUgc2V0LgoKYGBgYmFzaApjaG1v
ZCBnLXggYi5wbApscyAtbHQgYi5wbAotcnd4ci1Tci14IDEgcm9vdCByb290
IDE3OSBKYW4gIDkgMDE6MDEgYi5wbApgYGAKCioqc3RpY2t5IGJpdCoqCgpU
aGUgc3RpY2t5IGJpdCBvbiB0aGUgb3RoZXIgaGFuZCBpcyBkZW5vdGVkIGFz
IGB0YCwgc3VjaCBhcyB3aXRoIHRoZSBgL3RtcGAgZGlyZWN0b3J5OgoKYGBg
YmFzaApscyAtbCAvfGdyZXAgdG1wCmRyd3hyd3hyd3QuIDE2OCByb290IHJv
b3QgMjg2NzIgSnVuIDE0IDA4OjM2IHRtcApgYGAKClRoaXMgYml0IHNob3Vs
ZCBoYXZlIGFsd2F5cyBiZWVuIGNhbGxlZCB0aGUgX3Jlc3RyaWN0ZWQgZGVs
ZXRpb24gYml0XyBnaXZlbiB0aGF0J3Mgd2hhdCBpdCByZWFsbHkgY29ubm90
ZXMuIFdoZW4gdGhpcyBtb2RlIGJpdCBpcyBlbmFibGVkLCBpdCBtYWtlcyBh
IGRpcmVjdG9yeSBzdWNoIHRoYXQgdXNlcnMgY2FuIG9ubHkgZGVsZXRlIGZp
bGVzICYgZGlyZWN0b3JpZXMgd2l0aGluIGl0IHRoYXQgdGhleSBhcmUgdGhl
IG93bmVycyBvZi4KClVzZWZ1bCByZXNvdXJjZXM6CgotIFtIb3cgZG9lcyB0
aGUgc3RpY2t5IGJpdCB3b3JrPyAob3JpZ2luYWwpXShodHRwczovL3VuaXgu
c3RhY2tleGNoYW5nZS5jb20vcXVlc3Rpb25zLzc5Mzk1L2hvdy1kb2VzLXRo
ZS1zdGlja3ktYml0LXdvcmspCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1
bW1hcnk+PGI+V2hhdCBkb2VzIDxjb2RlPkxDX0FMTD1DPC9jb2RlPiBiZWZv
cmUgY29tbWFuZCBkbz8gSW4gd2hhdCBjYXNlcyBpdCB3aWxsIGJlIHVzZWZ1
bD88L2I+PC9zdW1tYXJ5Pjxicj4KCmBMQ19BTExgIGlzIHRoZSBlbnZpcm9u
bWVudCB2YXJpYWJsZSB0aGF0IG92ZXJyaWRlcyBhbGwgdGhlIG90aGVyIGxv
Y2FsaXNhdGlvbiBzZXR0aW5ncy4gVGhpcyBzZXRzIGFsbCBgTENfYCB0eXBl
IHZhcmlhYmxlcyBhdCBvbmNlIHRvIGEgc3BlY2lmaWVkIGxvY2FsZS4KClRo
ZSBtYWluIHJlYXNvbiB0byBzZXQgYExDX0FMTD1DYCBiZWZvcmUgY29tbWFu
ZCBpcyB0aGF0IGZpbmUgdG8gc2ltcGx5IGdldCBFbmdsaXNoIG91dHB1dCAo
Z2VuZXJhbCBjaGFuZ2UgdGhlIGxvY2FsZSB1c2VkIGJ5IHRoZSBjb21tYW5k
KS4KCk9uIHRoZSBvdGhlciBoYW5kLCBhbHNvIGltcG9ydGFudCBpcyB0byBp
bmNyZWFzZSB0aGUgc3BlZWQgb2YgY29tbWFuZCBleGVjdXRpb24gd2l0aCBg
TENfQUxMPUNgIGUuZy4gYGdyZXBgIG9yIGBmZ3JlcGAuIFVzaW5nIHRoZSBg
TENfQUxMPUNgIGxvY2FsZSBpbmNyZWFzZWQgb3VyIHBlcmZvcm1hbmNlIGFu
ZCBicm91Z2h0IGNvbW1hbmQgZXhlY3V0aW9uIHRpbWUgZG93bi4KCkZvciBl
eGFtcGxlLCBpZiB5b3Ugc2V0IGBMQ19BTEw9ZW5fVVMudXRmOGAgeW91ciBz
eXN0ZW0gb3BlbmVkIG11bHRpcGxlIGZpbGVzIGZyb20gdGhlIGAvdXNyL2xp
Yi9sb2NhbGVgIGRpcmVjdG9yeS4gRm9yIGBMQ19BTEw9Q2AgYSBtaW5pbXVt
IGFtb3VudCBvZiBvcGVuIGFuZCByZWFkIG9wZXJhdGlvbnMgaXMgcGVyZm9y
bWVkLgoKSWYgeW91IHdhbnQgdG8gcmVzdG9yZSBhbGwgeW91ciBub3JtYWwg
KG9yaWdpbmFsKSBsb2NhbGUgc2V0dGluZ3MgZm9yIHRoZSBzZXNzaW9uOgoK
YGBgYmFzaApMQ19BTEw9CmBgYAoKSWYgYExDX0FMTGAgZG9lcyBub3Qgd29y
aywgdHJ5IHVzaW5nIGBMQU5HYCAoaWYgdGhhdCBzdGlsbCBkb2VzIG5vdCB3
b3JrLCB0cnkgYExBTkdVQUdFYCk6CgpgYGBiYXNoCkxBTkc9QyBkYXRlICsl
QQpNb25kYXkKYGBgCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbV2hhdCBkb2Vz
IExDX0FMTD1DIGRvPyAob3JpZ2luYWwpXShodHRwczovL3VuaXguc3RhY2tl
eGNoYW5nZS5jb20vcXVlc3Rpb25zLzg3NzQ1L3doYXQtZG9lcy1sYy1hbGwt
Yy1kbykKLSBbU3BlZWQgdXAgZ3JlcCBzZWFyY2hlcyB3aXRoIExDX0FMTD1D
XShodHRwczovL3d3dy5pbm1vdGlvbmhvc3RpbmcuY29tL3N1cHBvcnQvd2Vi
c2l0ZS9zc2gvc3BlZWQtdXAtZ3JlcC1zZWFyY2hlcy13aXRoLWxjLWFsbCkK
CjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5Ib3cgdG8gbWFr
ZSBoaWdoIGF2YWlsYWJpbGl0eSBvZiB3ZWIgYXBwbGljYXRpb24/ICoqKjwv
Yj48L3N1bW1hcnk+CgpUbyBiZSBjb21wbGV0ZWQuCgo8L2RldGFpbHM+Cgo8
ZGV0YWlscz4KPHN1bW1hcnk+PGI+WW91IGFyZSBjb25maWd1cmluZyBhIG5l
dyBzZXJ2ZXIuIE9uZSBvZiB0aGUgc3RlcHMgaXMgc2V0dGluZyB0aGUgcGVy
bWlzc2lvbnMgdG8gdGhlIGFwcCBkaXJlY3Rvcmllcy4gV2hhdCBzdGVwcyB3
aWxsIHlvdSB0YWtlIGFuZCB3aGF0IG1pc3Rha2VzIHRvIGF2b2lkPzwvYj48
L3N1bW1hcnk+PGJyPgoKKioxKSBNYWluIHJlcXVpcmVtZW50cyAtIHJlbWVt
YmVyIGFib3V0IHRoaXMqKgoKLSB3aGljaCB1c2VycyBoYXZlIGFjY2VzcyB0
byB0aGUgYXBwIGZpbGVzeXN0ZW0KLSBwZXJtaXNzaW9ucyBmb3Igd2ViIHNl
cnZlcnMsIGUuZy4gQXBhY2hlIGFuZCBhcHAgc2VydmVycyBlLmcuIHV3c2dp
Ci0gcGVybWlzc2lvbnMgZm9yIHNwZWNpZmljIGRpcmVjdG9yaWVzIGxpa2Ug
YSAqKnVwbG9hZHMqKiwgKipjYWNoZSoqIGFuZCBtYWluIGFwcCBkaXJlY3Rv
cnkgbGlrZSBhIGAvdmFyL3d3dy9hcHAwMS9odG1sYAotIGNvcnJlY3QgYHVt
YXNrYCB2YWx1ZSBmb3IgdXNlcnMgYW5kICoqc3VpZCoqLyoqc2dpZCoqIChv
bmx5IGZvciBzcGVjaWZpYyBzaXR1YXRpb25zKQotIHBlcm1pc3Npb25zIGZv
ciBhbGwgZnV0dXJlIGZpbGVzIGFuZCBkaXJlY3RvcmllcwotIHBlcm1pc3Np
b25zIGZvciBjcm9uIGpvYnMgYW5kIHNjcmlwdHMKCioqMikgQXBwbGljYXRp
b24gZGlyZWN0b3JpZXMqKgoKYC92YXIvd3d3YCBjb250YWlucyBhIGRpcmVj
dG9yeSBmb3IgZWFjaCB3ZWJzaXRlIChpc29sYXRpb24gb2YgdGhlIGFwcHMp
LCBlLmcuIGAvdmFyL3d3dy9hcHAwMWAsIGAvdmFyL3d3dy9hcHAwMmAKCmBg
YGJhc2gKbWtkaXIgL3Zhci93d3cve2FwcDAxLGFwcDAyfQpgYGAKCioqMykg
QXBwbGljYXRpb24gb3duZXIgYW5kIGdyb3VwKioKCkVhY2ggYXBwbGljYXRp
b24gaGFzIGEgZGVzaWduYXRlZCAqKm93bmVyKiogKGUuZy4gKip1MDEtcHJv
ZCoqLCAqKnUwMi1wcm9kKiopIGFuZCAqKmdyb3VwKiogKGUuZy4gKipnMDEt
cHJvZCoqLCAqKmcwMi1wcm9kKiopIHdoaWNoIGFyZSBzZXQgYXMgdGhlIG93
bmVyIG9mIGFsbCBmaWxlcyBhbmQgZGlyZWN0b3JpZXMgaW4gdGhlIHdlYnNp
dGUncyBkaXJlY3Rvcnk6CgpgYGBiYXNoCmNob3duIC1SIHUwMS1wcm9kOmcw
MS1wcm9kIC92YXIvd3d3L2FwcDAxCmNob3duIC1SIHUwMi1wcm9kOmcwMi1w
cm9kIC92YXIvd3d3L2FwcDAyCmBgYAoKKio0KSBEZXZlbG9wZXJzIG93bmVy
IGFuZCBncm91cCoqCgpBbGwgb2YgdGhlIHVzZXJzIHRoYXQgbWFpbnRhaW4g
dGhlIHdlYnNpdGUgaGF2ZSBvd24gZ3JvdXBzIGFuZCB0aGV5J3JlIGF0dGFj
aCB0byBhcHBsaWNhdGlvbiBncm91cDoKCmBgYGJhc2gKaWQgYWxpY2UKdWlk
PTIwMDAoYWxpY2UpIGdpZD00MDAwKGFsaWNlKSBncm91cHM9ODAwMChnMDEt
cHJvZCkKaWQgYm9iCnVpZD0yMDAxKGJvYikgZ2lkPTQwMDEoYm9iKSBncm91
cHM9ODAwMChnMDEtcHJvZCksODAwMShnMDItcHJvZCkKYGBgCgpTbyAqKmFs
aWNlKiogdXNlciBoYXMgc3RhbmRhcmQgcHJpdmlsZWdlcyBmb3IgYC92YXIv
d3d3L2FwcDAxYCBhbmQgKipib2IqKiB1c2VyIGhhcyBzdGFuZGFyZCBwcml2
aWxlZ2VzIGZvciBgL3Zhci93d3cvYXBwMDFgIGFuZCBgL3Zhci93d3cvYXBw
MDJgLgoKKio1KSBXZWIgc2VydmVyIG93bmVyIGFuZCBncm91cCoqCgpBbnkg
ZmlsZXMgb3IgZGlyZWN0b3JpZXMgdGhhdCBuZWVkIHRvIGJlIHdyaXR0ZW4g
YnkgdGhlIHdlYnNlcnZlciBoYXZlIHRoZWlyIG93bmVyLiBJZiB0aGUgd2Vi
IHNlcnZlcnMgaXMgQXBhY2hlLCBkZWZhdWx0IG93bmVyL2dyb3VwIGFyZSAq
KmFwYWNoZTphcGFjaGUqKiBvciAqKnd3dy1kYXRhOnd3dy1kYXRhKiogYW5k
IGZvciBOZ2lueCBpdCB3aWxsIGJlICoqbmdpbng6bmdpbngqKi4gRG9uJ3Qg
Y2hhbmdlIHRoZXNlIHNldHRpbmdzLgoKSWYgYXBwbGljYXRpb25zIHdvcmtz
IHdpdGggYXBwIHNlcnZlcnMgbGlrZSBhICoqdXdzZ2kqKiBvciAqKnBocC1m
cG0qKiBzaG91bGQgc2V0IHRoZSBhcHByb3ByaWF0ZSB1c2VyIGFuZCBncm91
cCAoZS5nLiBmb3IgKiphcHAwMSoqIGl0IHdpbGwgYmUgKip1MDEtcHJvZDpn
MDEtcHJvZCoqKSBpbiBzcGVjaWZpYyBjb25maWcgZmlsZXMuCgoqKjYpIFBl
cm1pc3Npb25zKioKClNldCBwcm9wZXJseSBwZXJtaXNzaW9ucyB3aXRoICoq
QWNjZXNzIENvbnRyb2wgTGlzdHMqKjoKCmBgYGJhc2gKIyBGb3Igd2ViIHNl
cnZlcgpzZXRmYWNsIC1SZG0gImc6YXBhY2hlOnJ3eCIgL3Zhci93d3cvYXBw
MDEKc2V0ZmFjbCAtUm0gImc6YXBhY2hlOnJ3eCIgL3Zhci93d3cvYXBwMDEK
CiMgRm9yIGRldmVsb3BlcnMKc2V0ZmFjbCAtUmRtICJnOmcwMS1wcm9kOnJ3
eCIgL3Zhci93d3cvYXBwMDEKc2V0ZmFjbCAtUm0gImc6ZzAxLXByb2Q6cnd4
IiAvdmFyL3d3dy9hcHAwMQpgYGAKCklmIHlvdSB1c2UgKipTRUxpbnV4Kiog
cmVtZW1iZXIgYWJvdXQgc2VjdXJpdHkgY29udGV4dDoKCmBgYGJhc2gKY2hj
b24gLVIgc3lzdGVtX3U6b2JqZWN0X3I6aHR0cGRfc3lzX2NvbnRlbnRfdCAv
dmFyL3d3dy9hcHAwMQpgYGAKCioqNykgU2VjdXJpdHkgbWlzdGFrZXMqKgoK
LSAqKnJvb3QqKiBvd25lciBmb3IgZmlsZXMgYW5kIGRpcmVjdG9yaWVzCi0g
Kipyb290KiogbmV2ZXIgZXhlY3V0ZXMgYW55IGZpbGVzIGluIHdlYnNpdGUg
ZGlyZWN0b3J5LCBhbmQgc2hvdWxkbid0IGJlIGNyZWF0aW5nIGZpbGVzIGlu
IHRoZXJlCi0gdG8gd2lkZSBwZXJtaXNzaW9ucyBsaWtlIGEgKio3NzcqKiBz
byBzb21lIGNyaXRpY2FsIGZpbGVzIG1heSBiZSB3b3JsZC13cml0YWJsZSBh
bmQgd29ybGQtcmVhZGFibGUKLSBhdm9pZCBjcmVhdGluZyBtYWludGVuYW5j
ZSBzY3JpcHRzIG9yIG90aGVyIGNyaXRpY2FsIGZpbGVzIHdpdGggc3VpZCBy
b290CgpJZiB5b3UgYWxsb3cgeW91ciBzaXRlIHRvIG1vZGlmeSB0aGUgZmls
ZXMgd2hpY2ggZm9ybSB0aGUgY29kZSBydW5uaW5nIHlvdXIgc2l0ZSwgeW91
IG1ha2UgaXQgbXVjaCBlYXNpZXIgZm9yIHNvbWVvbmUgdG8gdGFrZSBvdmVy
IHlvdXIgc2VydmVyLgoKQSBmaWxlIHVwbG9hZCB0b29sIGFsbG93cyB1c2Vy
cyB0byB1cGxvYWQgYSBmaWxlIHdpdGggYW55IG5hbWUgYW5kIGFueSBjb250
ZW50cy4gVGhpcyBhbGxvd3MgYSB1c2VyIHRvIHVwbG9hZCBhIG1haWwgcmVs
YXkgUEhQIHNjcmlwdCB0byB5b3VyIHNpdGUsIHdoaWNoIHRoZXkgY2FuIHBs
YWNlIHdoZXJldmVyIHRoZXkgd2FudCB0byB0dXJuIHlvdXIgc2VydmVyIGlu
dG8gYSBtYWNoaW5lIHRvIGZvcndhcmQgdW5zb2xpY2l0ZWQgY29tbWVyY2lh
bCBlbWFpbC4gVGhpcyBzY3JpcHQgY291bGQgYWxzbyBiZSB1c2VkIHRvIHJl
YWQgZXZlcnkgZW1haWwgYWRkcmVzcyBvdXQgb2YgeW91ciBkYXRhYmFzZSwg
b3Igb3RoZXIgcGVyc29uYWwgaW5mb3JtYXRpb24uCgpJZiB0aGUgbWFsaWNp
b3VzIHVzZXIgY2FuIHVwbG9hZCBhIGZpbGUgd2l0aCBhbnkgbmFtZSBidXQg
bm90IGNvbnRyb2wgdGhlIGNvbnRlbnRzLCB0aGVuIHRoZXkgY291bGQgZWFz
aWx5IHVwbG9hZCBhIGZpbGUgd2hpY2ggb3ZlcndyaXRlcyB5b3VyIGBpbmRl
eC5waHBgIChvciBhbm90aGVyIGNyaXRpY2FsIGZpbGUpIGFuZCBicmVha3Mg
eW91ciBzaXRlLgoKVXNlZnVsIHJlc291cmNlczoKCi0gW0hvdyB0byBzZXR1
cCBsaW51eCBwZXJtaXNzaW9ucyBmb3IgdGhlIFdXVyBmb2xkZXI/XShodHRw
czovL3NlcnZlcmZhdWx0LmNvbS9xdWVzdGlvbnMvMTI0ODAwL2hvdy10by1z
ZXR1cC1saW51eC1wZXJtaXNzaW9ucy1mb3ItdGhlLXd3dy1mb2xkZXIpCi0g
W1doYXQgcGVybWlzc2lvbnMgc2hvdWxkIG15IHdlYnNpdGUgZmlsZXMvZm9s
ZGVycyBoYXZlIG9uIGEgTGludXggd2Vic2VydmVyP10oaHR0cHM6Ly9zZXJ2
ZXJmYXVsdC5jb20vcXVlc3Rpb25zLzM1NzEwOC93aGF0LXBlcm1pc3Npb25z
LXNob3VsZC1teS13ZWJzaXRlLWZpbGVzLWZvbGRlcnMtaGF2ZS1vbi1hLWxp
bnV4LXdlYnNlcnZlcikKLSBbU2VjdXJpdHkgUGl0ZmFsbHMgb2Ygc2V0Z2lk
IFByb2dyYW1zXShodHRwczovL3d3dy5hZ3dhLm5hbWUvYmxvZy9wb3N0L3Nl
Y3VyaXR5X3BpdGZhbGxzX29mX3NldGdpZF9wcm9ncmFtcykKCjwvZGV0YWls
cz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5XaGF0IHN0ZXBzIHdpbGwgYmUg
dGFrZW4gYnkgaW5pdCB3aGVuIHlvdSBydW4gPGNvZGU+dGVsaW5pdCAxPC9j
b2RlPiBmcm9tIHJ1biBsZXZlbCAzPyBXaGF0IHdpbGwgYmUgdGhlIGZpbmFs
IHJlc3VsdCBvZiB0aGlzPyBJZiB5b3UgdXNlIDxjb2RlPnRlbGluaXQgNjwv
Y29kZT4gaW5zdGVhZCBvZiA8Y29kZT5yZWJvb3Q8L2NvZGU+IGNvbW1hbmQg
eW91ciBzZXJ2ZXIgd2lsbCBiZSByZXN0YXJ0ZWQ/ICoqKjwvYj48L3N1bW1h
cnk+PGJyPgoKVG8gYmUgY29tcGxldGVkLgoKVXNlZnVsIHJlc291cmNlczoK
Ci0gW1doYXQgZGlmZmVyZW5jZXMgaXQgd2lsbCBtYWtlLCBpZiBpIHVzZSDi
gJx0ZWxpbml0IDbigJ0gaW5zdGVhZCBvZiDigJxyZWJvb3TigJ0gY29tbWFu
ZCB0byByZXN0YXJ0IG15IGNvbXB1dGVyP10oaHR0cHM6Ly91bml4LnN0YWNr
ZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy80MzQ1NjAvd2hhdC1kaWZmZXJlbmNl
cy1pdC13aWxsLW1ha2UtaWYtaS11c2UtdGVsaW5pdC02LWluc3RlYWQtb2Yt
cmVib290LWNvbW1hbmQpCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1h
cnk+PGI+SSBoYXZlIGZvcmdvdHRlbiB0aGUgcm9vdCBwYXNzd29yZCEgV2hh
dCBkbyBJIGRvIGluIEJTRD8gV2hhdCBpcyB0aGUgcHVycG9zZSBvZiBib290
aW5nIGludG8gc2luZ2xlIHVzZXIgbW9kZT88L2I+PC9zdW1tYXJ5Pjxicj4K
ClJlc3RhcnQgdGhlIHN5c3RlbSwgdHlwZSBgYm9vdCAtc2AgYXQgdGhlIGBC
b290OmAgcHJvbXB0IHRvIGVudGVyICoqc2luZ2xlLXVzZXIgbW9kZSoqLgoK
QXQgdGhlIHF1ZXN0aW9uIGFib3V0IHRoZSBzaGVsbCB0byB1c2UsIGhpdCBg
RW50ZXJgIHdoaWNoIHdpbGwgZGlzcGxheSBhIGAjYCBwcm9tcHQuCgpFbnRl
ciBgbW91bnQgLXVydyAvYCB0byByZW1vdW50IHRoZSByb290IGZpbGUgc3lz
dGVtIHJlYWQvd3JpdGUsIHRoZW4gcnVuIGBtb3VudCAtYWAgdG8gcmVtb3Vu
dCBhbGwgdGhlIGZpbGUgc3lzdGVtcy4KClJ1biBgcGFzc3dkIHJvb3RgIHRv
IGNoYW5nZSB0aGUgcm9vdCBwYXNzd29yZCB0aGVuIHJ1biBgZXhpdGAgdG8g
Y29udGludWUgYm9vdGluZy4KCioqU2luZ2xlIHVzZXIgbW9kZSoqIHNob3Vs
ZCBiYXNpY2FsbHkgbGV0IHlvdSBsb2cgaW4gd2l0aCByb290IGFjY2VzcyAm
IGNoYW5nZSBqdXN0IGFib3V0IGFueXRoaW5nLiBGb3IgZXhhbXBsZSwgeW91
IG1pZ2h0IHVzZSBzaW5nbGUtdXNlciBtb2RlIHdoZW4geW91IGFyZSByZXN0
b3JpbmcgYSBkYW1hZ2VkIG1hc3RlciBkYXRhYmFzZSBvciBhIHN5c3RlbSBk
YXRhYmFzZSwgb3Igd2hlbiB5b3UgYXJlIGNoYW5naW5nIHNlcnZlciBjb25m
aWd1cmF0aW9uIG9wdGlvbnMgKGUuZy4gcGFzc3dvcmQgcmVjb3ZlcnkpLgoK
VXNlZnVsIHJlc291cmNlczoKCi0gW0ZyZWVCU0QgUmVzZXQgb3IgUmVjb3Zl
ciBSb290IFBhc3N3b3JkXShodHRwczovL3d3dy5jeWJlcmNpdGkuYml6L3Rp
cHMvaG93dG8tZnJlZWJzZC1yZXNldC1yZWNvdmVyLXJvb3QtcGFzc3dvcmQu
aHRtbCkKLSBbU2luZ2xlIFVzZXIgTW9kZSBEZWZpbml0aW9uXShodHRwOi8v
d3d3LmxpbmZvLm9yZy9zaW5nbGVfdXNlcl9tb2RlLmh0bWwpCgo8L2RldGFp
bHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+SG93IGNvdWxkIHlvdSBtb2Rp
ZnkgYSB0ZXh0IGZpbGUgd2l0aG91dCBpbnZva2luZyBhIHRleHQgZWRpdG9y
PzwvYj48L3N1bW1hcnk+PGJyPgoKRm9yIGV4YW1wbGU6PGJyPgoKYGBgYmFz
aAojIGNhdCAgPmZpbGVuYW1lIC4uLiAtIG92ZXJ3cml0ZSBmaWxlCiMgY2F0
ID4+ZmlsZW5hbWUgLi4uIC0gYXBwZW5kIHRvIGZpbGUKY2F0ID4gZmlsZW5h
bWUgPDwgX19FT0ZfXwpkYXRhCl9fRU9GX18KYGBgCgo8L2RldGFpbHM+Cgo8
ZGV0YWlscz4KPHN1bW1hcnk+PGI+SG93IHRvIGNoYW5nZSB0aGUga2VybmVs
IHBhcmFtZXRlcnM/IFdoYXQga2VybmVsIG9wdGlvbnMgbWlnaHQgeW91IG5l
ZWQgdG8gdHVuZT8gKioqPC9iPjwvc3VtbWFyeT48YnI+CgpUbyBzZXQgdGhl
IGtlcm5lbCBwYXJhbWV0ZXJzIGluIFVuaXgtbGlrZSwgZmlyc3QgZWRpdCB0
aGUgZmlsZSBgL2V0Yy9zeXNjdGwuY29uZmAgYWZ0ZXIgbWFraW5nIHRoZSBj
aGFuZ2VzIHNhdmUgdGhlIGZpbGUgYW5kIHJ1biB0aGUgY29tbWFuZCBgc3lz
Y3RsIC1wYCwgdGhpcyBjb21tYW5kIHdpbGwgbWFrZSB0aGUgY2hhbmdlcyBw
ZXJtYW5lbnRseSB3aXRob3V0IHJlYm9vdGluZyB0aGUgbWFjaGluZS4KClVz
ZWZ1bCByZXNvdXJjZXM6CgotIFtIb3cgdG8gQ2hhbmdlIEtlcm5lbCBSdW50
aW1lIFBhcmFtZXRlcnMgaW4gYSBQZXJzaXN0ZW50IGFuZCBOb24tUGVyc2lz
dGVudCBXYXldKGh0dHBzOi8vd3d3LnRlY21pbnQuY29tL2NoYW5nZS1tb2Rp
ZnktbGludXgta2VybmVsLXJ1bnRpbWUtcGFyYW1ldGVycy8pCgo8L2RldGFp
bHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+RXhwbGFpbiB0aGUgPGNvZGU+
L3Byb2M8L2NvZGU+IGZpbGVzeXN0ZW0uPC9iPjwvc3VtbWFyeT48YnI+Cgpg
L3Byb2NgIGlzIGEgdmlydHVhbCBmaWxlIHN5c3RlbSB0aGF0IHByb3ZpZGVz
IGRldGFpbGVkIGluZm9ybWF0aW9uIGFib3V0IGtlcm5lbCwgaGFyZHdhcmUg
YW5kIHJ1bm5pbmcgcHJvY2Vzc2VzLgoKU2luY2UgYC9wcm9jYCBjb250YWlu
cyB2aXJ0dWFsIGZpbGVzLCBpdCBpcyBjYWxsZWQgdmlydHVhbCBmaWxlIHN5
c3RlbS4gVGhlc2UgdmlydHVhbCBmaWxlcyBoYXZlIHVuaXF1ZSBxdWFsaXRp
ZXMuIE1vc3Qgb2YgdGhlbSBhcmUgbGlzdGVkIGFzIHplcm8gYnl0ZXMgaW4g
c2l6ZS4KClZpcnR1YWwgZmlsZXMgc3VjaCBhcyBgL3Byb2MvaW50ZXJydXB0
c2AsIGAvcHJvYy9tZW1pbmZvYCwgYC9wcm9jL21vdW50c2AgYW5kIGAvcHJv
Yy9wYXJ0aXRpb25zYCBwcm92aWRlIGFuIHVwLXRvLXRoZS1tb21lbnQgZ2xp
bXBzZSBvZiB0aGUgc3lzdGVt4oCZcyBoYXJkd2FyZS4gT3RoZXJzOiBgL3By
b2MvZmlsZXN5c3RlbXNgIGZpbGUgYW5kIHRoZSBgL3Byb2Mvc3lzL2AgZGly
ZWN0b3J5IHByb3ZpZGUgc3lzdGVtIGNvbmZpZ3VyYXRpb24gaW5mb3JtYXRp
b24gYW5kIGludGVyZmFjZXMuCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbTGlu
dXggRmlsZXN5c3RlbSBIaWVyYXJjaHkgLSAvcHJvY10oaHR0cHM6Ly93d3cu
dGxkcC5vcmcvTERQL0xpbnV4LUZpbGVzeXN0ZW0tSGllcmFyY2h5L2h0bWwv
cHJvYy5odG1sKQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5Pjxi
PkRlc2NyaWJlIHlvdXIgZGF0YSBiYWNrdXAgcHJvY2Vzcy4gSG93IG9mdGVu
IHNob3VsZCB5b3UgdGVzdCB5b3VyIGJhY2t1cHM/ICoqKjwvYj48L3N1bW1h
cnk+PGJyPgoKVG8gYmUgY29tcGxldGVkLgoKPC9kZXRhaWxzPgoKPGRldGFp
bHM+CjxzdW1tYXJ5PjxiPkV4cGxhaW4gdGhyZWUgdHlwZXMgb2Ygam91cm5h
bGluZyBpbiBleHQzL2V4dDQuPC9iPjwvc3VtbWFyeT48YnI+CgpUaGVyZSBh
cmUgdGhyZWUgdHlwZXMgb2Ygam91cm5hbGluZyBhdmFpbGFibGUgaW4gKipl
eHQzL2V4dDQqKiBmaWxlIHN5c3RlbXM6CgotICoqSm91cm5hbCoqIC0gbWV0
YWRhdGEgYW5kIGNvbnRlbnQgYXJlIHNhdmVkIGluIHRoZSBqb3VybmFsCi0g
KipPcmRlcmVkKiogLSBvbmx5IG1ldGFkYXRhIGlzIHNhdmVkIGluIHRoZSBq
b3VybmFsLiBNZXRhZGF0YSBhcmUgIGpvdXJuYWxlZCBvbmx5IGFmdGVyIHdy
aXRpbmcgdGhlIGNvbnRlbnQgdG8gZGlzay4gVGhpcyBpcyB0aGUgZGVmYXVs
dAotICoqV3JpdGViYWNrKiogLSBvbmx5IG1ldGFkYXRhIGlzIHNhdmVkIGlu
IHRoZSBqb3VybmFsLiBNZXRhZGF0YSBtaWdodCBiZSAgam91cm5hbGVkIGVp
dGhlciBiZWZvcmUgb3IgYWZ0ZXIgdGhlIGNvbnRlbnQgaXMgd3JpdHRlbiB0
byB0aGUgZGlzawoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5Pjxi
PldoYXQgaXMgYW4gaW5vZGU/IEhvdyB0byBmaW5kIGZpbGUncyBpbm9kZSBu
dW1iZXIgYW5kIGhvdyBjYW4geW91IHVzZSBpdD88L2I+PC9zdW1tYXJ5Pjxi
cj4KCkFuICoqaW5vZGUqKiBpcyBhIGRhdGEgc3RydWN0dXJlIG9uIGEgZmls
ZXN5c3RlbSBvbiBMaW51eCBhbmQgb3RoZXIgVW5peC1saWtlIG9wZXJhdGlu
ZyBzeXN0ZW1zIHRoYXQgc3RvcmVzIGFsbCB0aGUgaW5mb3JtYXRpb24gYWJv
dXQgYSBmaWxlIGV4Y2VwdCBpdHMgbmFtZSBhbmQgaXRzIGFjdHVhbCBkYXRh
LiBBIGRhdGEgc3RydWN0dXJlIGlzIGEgd2F5IG9mIHN0b3JpbmcgZGF0YSBz
byB0aGF0IGl0IGNhbiBiZSB1c2VkIGVmZmljaWVudGx5LgoKQSBVbml4IGZp
bGUgaXMgc3RvcmVkIGluIHR3byBkaWZmZXJlbnQgcGFydHMgb2YgdGhlIGRp
c2sgLSB0aGUgZGF0YSBibG9ja3MgYW5kIHRoZSBpbm9kZXMuIEkgd29uJ3Qg
Z2V0IGludG8gc3VwZXJibG9ja3MgYW5kIG90aGVyIGVzb3RlcmljIGluZm9y
bWF0aW9uLiBUaGUgZGF0YSBibG9ja3MgY29udGFpbiB0aGUgImNvbnRlbnRz
IiBvZiB0aGUgZmlsZS4gVGhlIGluZm9ybWF0aW9uIGFib3V0IHRoZSBmaWxl
IGlzIHN0b3JlZCBlbHNld2hlcmUgLSBpbiB0aGUgaW5vZGUuCgpBIGZpbGUn
cyBpbm9kZSBudW1iZXIgY2FuIGVhc2lseSBiZSBmb3VuZCBieSB1c2luZyB0
aGUgYGxzYCBjb21tYW5kLCB3aGljaCBieSBkZWZhdWx0IGxpc3RzIHRoZSBv
YmplY3RzIChpLmUuIGZpbGVzLCBsaW5rcyBhbmQgZGlyZWN0b3JpZXMpIGlu
IHRoZSBjdXJyZW50IGRpcmVjdG9yeSAoaS5lLiB0aGUgZGlyZWN0b3J5IGlu
IHdoaWNoIHRoZSB1c2VyIGlzIGN1cnJlbnRseSB3b3JraW5nKSwgd2l0aCBp
dHMgYC1pYCBvcHRpb24uIFRodXMsIGZvciBleGFtcGxlLCB0aGUgZm9sbG93
aW5nIHdpbGwgc2hvdyB0aGUgbmFtZSBvZiBlYWNoIG9iamVjdCBpbiB0aGUg
Y3VycmVudCBkaXJlY3RvcnkgdG9nZXRoZXIgd2l0aCBpdHMgaW5vZGUgbnVt
YmVyOgoKYGBgYmFzaApscyAtaQpgYGAKCmBkZidzYCBgLWlgIG9wdGlvbiBp
bnN0cnVjdHMgaXQgdG8gc3VwcGx5IGluZm9ybWF0aW9uIGFib3V0IGlub2Rl
cyBvbiBlYWNoIGZpbGVzeXN0ZW0gcmF0aGVyIHRoYW4gYWJvdXQgYXZhaWxh
YmxlIHNwYWNlLiBTcGVjaWZpY2FsbHksIGl0IHRlbGxzIGRmIHRvIHJldHVy
biBmb3IgZWFjaCBtb3VudGVkIGZpbGVzeXN0ZW0gdGhlIHRvdGFsIG51bWJl
ciBvZiBpbm9kZXMsIHRoZSBudW1iZXIgb2YgZnJlZSBpbm9kZXMsIHRoZSBu
dW1iZXIgb2YgdXNlZCBpbm9kZXMgYW5kIHRoZSBwZXJjZW50YWdlIG9mIGlu
b2RlcyB1c2VkLiBUaGlzIG9wdGlvbiBjYW4gYmUgdXNlZCB0b2dldGhlciB3
aXRoIHRoZSBgLWhgIG9wdGlvbiBhcyBmb2xsb3dzIHRvIG1ha2UgdGhlIG91
dHB1dCBlYXNpZXIgdG8gcmVhZDoKCmBgYGJhc2gKZGYgLWhpCmBgYAoKKipG
aW5kaW5nIGZpbGVzIGJ5IGlub2RlcyoqCgpJZiB5b3Uga25vdyB0aGUgaW5v
ZGUsIHlvdSBjYW4gZmluZCBpdCB1c2luZyB0aGUgZmluZCBjb21tYW5kOgoK
YGBgYmFzaApmaW5kIC4gLWludW0gNDM1MzA0IC1wcmludApgYGAKCioqRGVs
ZXRpbmcgZmlsZXMgd2l0aCBzdHJhbmdlIG5hbWVzKioKClNvbWV0aW1lcyBm
aWxlcyBhcmUgY3JlYXRlZCB3aXRoIHN0cmFuZ2UgY2hhcmFjdGVycyBpbiB0
aGUgZmlsZW5hbWUuIFRoZSBVbml4IGZpbGUgc3lzdGVtIHdpbGwgYWxsb3cg
YW55IGNoYXJhY3RlciBhcyBwYXJ0IG9mIGEgZmlsZW5hbWUgZXhjZXB0IGZv
ciBhIG51bGwgKEFTQ0lJIDAwMCkgb3IgYSAiLyIuIEV2ZXJ5IG90aGVyIGNo
YXJhY3RlciBpcyBhbGxvd2VkLgoKVXNlcnMgY2FuIGNyZWF0ZSBmaWxlcyB3
aXRoIGNoYXJhY3RlcnMgdGhhdCBtYWtlIGl0IGRpZmZpY3VsdCB0byBzZWUg
dGhlIGRpcmVjdG9yeSBvciBmaWxlLiBUaGV5IGNhbiBjcmVhdGUgdGhlIGRp
cmVjdG9yeSAiLi4gIiB3aXRoIGEgc3BhY2UgYXQgdGhlIGVuZCwgb3IgY3Jl
YXRlIGEgZmlsZSB0aGF0IGhhcyBhIGJhY2tzcGFjZSBpbiB0aGUgbmFtZSwg
dXNpbmc6CgpgYGBiYXNoCnRvdWNoIGBwcmludGYgImFhXGJiImAKYGBgCgpO
b3cgd2hhdCB3aGF0IGhhcHBlbnMgd2hlbiB5b3UgdXNlIHRoZSBgbHNgIGNv
bW1hbmQ6CgpgYGBiYXNoCmxzCmFhP2IKbHMgfCBncmVwICdhJwphYgpgYGAK
Ck5vdGUgdGhhdCB3aGVuIGBsc2Agc2VuZHMgdGhlIHJlc3VsdCB0byBhIHRl
cm1pbmFsLCBpdCBwbGFjZXMgYSAiKio/KioiIGluIHRoZSBmaWxlbmFtZSB0
byBzaG93IGFuIHVucHJpbnRhYmxlIGNoYXJhY3Rlci4KCllvdSBjYW4gZ2V0
IHJpZCBvZiB0aGlzIGZpbGUgYnkgdXNpbmcgYHJtIC1pICpgIGFuZCBpdCB3
aWxsIHByb21wdCB5b3UgYmVmb3JlIGl0IGRlbGV0ZXMgZWFjaCBmaWxlLiBC
dXQgeW91IGNhbiBhbHNvIHVzZSBgZmluZGAgdG8gcmVtb3ZlIHRoZSBmaWxl
LCBvbmNlIHlvdSBrbm93IHRoZSBpbm9kZSBudW1iZXIuCgpgYGBiYXNoCmxz
IC1pCjQzNTMwNCBhYT9iCmZpbmQgLiAtaW51bSA0MzUzMDQgLWRlbGV0ZQpg
YGAKClVzZWZ1bCByZXNvdXJjZXM6CgotIFtVbmRlcnN0YW5kIFVOSVgvTGlu
dXggSW5vZGVzIEJhc2ljcyB3aXRoIEV4YW1wbGVzXShodHRwczovL3d3dy50
aGVnZWVrc3R1ZmYuY29tLzIwMTIvMDEvbGludXgtaW5vZGVzLykKLSBbV2hh
dCBpcyBhbiBpbm9kZSBhcyBkZWZpbmVkIGJ5IFBPU0lYP10oaHR0cHM6Ly91
bml4LnN0YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy8zODcwODcvd2hhdC1p
cy1hbi1pbm9kZS1hcy1kZWZpbmVkLWJ5LXBvc2l4LzM4NzA5MykKCjwvZGV0
YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj48Y29kZT5scyAtbDwvY29k
ZT4gc2hvd3MgZmlsZSBhdHRyaWJ1dGVzIGFzIHF1ZXN0aW9uIG1hcmtzLiBX
aGF0IHRoaXMgbWVhbnMgYW5kIHdoYXQgc3RlcHMgd2lsbCB5b3UgdGFrZSB0
byByZW1vdmUgdW51c2VkICJ6b21iaWUiIGZpbGVzPzwvYj48L3N1bW1hcnk+
PGJyPgoKVGhpcyBwcm9ibGVtIG1heSBiZSBtb3JlIGRpZmZpY3VsdCB0byBz
b2x2ZSBiZWNhdXNlIHNldmVyYWwgc3RlcHMgbWF5IGJlIHJlcXVpcmVkIC0g
c29tZXRpbWVzIHlvdSBoYXZlIGdldCBgdGVzdC9maWxlOiBQZXJtaXNzaW9u
IGRlbmllZGAsIGB0ZXN0L2ZpbGU6IE5vIHN1Y2ggZmlsZSBvciBkaXJlY3Rv
cnlgIG9yIGB0ZXN0L2ZpbGU6IElucHV0L291dHB1dCBlcnJvcmAuCgpUaGF0
IGhhcHBlbnMgd2hlbiB0aGUgdXNlciBjYW4ndCBkbyBhIGBzdGF0KClgIG9u
IHRoZSBmaWxlcyAod2hpY2ggcmVxdWlyZXMgZXhlY3V0ZSBwZXJtaXNzaW9u
cyksIGJ1dCBjYW4gcmVhZCB0aGUgZGlyZWN0b3J5IGVudHJpZXMgKHdoaWNo
IHJlcXVpcmVzIHJlYWQgYWNjZXNzIG9uIHRoZSBkaXJlY3RvcnkpLiBTbyB5
b3UgZ2V0IGEgbGlzdCBvZiBmaWxlcyBpbiB0aGUgZGlyZWN0b3J5LCBidXQg
Y2FuJ3QgZ2V0IGFueSBpbmZvcm1hdGlvbiBvbiB0aGUgZmlsZXMgYmVjYXVz
ZSB0aGV5IGNhbid0IGJlIHJlYWQuIElmIHlvdSBoYXZlIGEgZGlyZWN0b3J5
IHdoaWNoIGhhcyByZWFkIHBlcm1pc3Npb24gYnV0IG5vdCBleGVjdXRlLCB5
b3UnbGwgc2VlIHRoaXMuCgpTb21lIHByb2Nlc3NlcyBsaWtlIGEgYHJzeW5j
YCBnZW5lcmF0ZXMgdGVtcG9yYXJ5IGZpbGVzIHRoYXQgZ2V0IGNyZWF0ZWQg
YW5kIGRyb3BwZWQgZmFzdCB3aGljaCB3aWxsIGNhdXNlIGVycm9ycyBpZiB5
b3UgdHJ5IHRvIGNhbGwgb3RoZXIgc2ltcGxlIGZpbGUgbWFuYWdlbWVudCBj
b21tYW5kcyBsaWtlIGBybWAsIGBtdmAgZXRjLgoKRXhhbXBsZSBvZiBvdXRw
dXQ6CgpgYGBiYXNoCj8/Pz8/Pz8/Pz8gPyA/ICAgICAgICA/ICAgICAgICAg
ICAgICAgPyAgICAgICAgICAgID8gc2Vzc19rZWU2ZnU5YWc3dGlwaDJqYWUK
YGBgCgoxKSBjaGFuZ2UgcGVybWlzc2lvbnM6IGBjaG1vZCAwNzc3IHNlc3Nf
a2VlNmZ1OWFnN3RpcGgyamFlYCBhbmQgdHJ5IHJlbW92ZQoyKSBjaGFuZ2Ug
b3duZXI6IGBjaG93biByb290OnJvb3Qgc2Vzc19rZWU2ZnU5YWc3dGlwaDJq
YWVgIGFuZCB0cnkgcmVtb3ZlCjMpIGNoYW5nZSBwZXJtaXNzaW9ucyBhbmQg
b3duZXIgZm9yIGRpcmVjdG9yeTogYGNobW9kIC1SIDA3NzcgZGlyLyAmJiBj
aG93biAtUiByb290OnJvb3QgZGlyL2AgYW5kIHRyeSByZW1vdmUKNCkgcmVj
cmVhdGUgZmlsZTogYHRvdWNoIHNlc3Nfa2VlNmZ1OWFnN3RpcGgyamFlYCBh
bmQgdHJ5IHJlbW92ZQo1KSB3YXRjaCBvdXQgZm9yIG90aGVyIHJ1bm5pbmcg
cHJvY2Vzc2VzIG9uIHRoZSBzZXJ2ZXIgZm9yIGV4YW1wbGUgYHJzeW5jYCwg
c29tZXRpbWVzIHlvdSBjYW4gc2VlIHRoaXMgYXMgYSB0cmFuc2llbnQgZXJy
b3Igd2hlbiBhbiBORlMgc2VydmVyIGlzIGhlYXZpbHkgb3ZlcmxvYWRlZAo2
KSBmaW5kIGZpbGUgaW5vZGU6IGBscyAtaWAsIGFuZCB0cnkgcmVtb3ZlOiBg
ZmluZCAuIC1pbnVtIDxpbm9kZV9udW0+IC1kZWxldGVgCjcpIHJlbW91bnQg
KGlmIHBvc3NpYmxlKSB5b3VyIGZpbGVzeXN0ZW0KOCkgYm9vdCBzeXN0ZW0g
aW50byBzaW5nbGUtdXNlciBtb2RlIGFuZCByZXBhaXIgeW91ciBmaWxlc3lz
dGVtIHdpdGggYGZzY2tgCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbUXVlc3Rp
b24gbWFya3Mgc2hvd2luZyBpbiBscyBvZiBkaXJlY3RvcnkuIElPIGVycm9y
cyB0b28uXShodHRwczovL3NlcnZlcmZhdWx0LmNvbS9xdWVzdGlvbnMvNjU2
MTYvcXVlc3Rpb24tbWFya3Mtc2hvd2luZy1pbi1scy1vZi1kaXJlY3Rvcnkt
aW8tZXJyb3JzLXRvbykKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFy
eT48Yj5UbyBMVk0gb3Igbm90IHRvIExWTS4gV2hhdCBiZW5lZml0cyBkb2Vz
IGl0IHByb3ZpZGU/PC9iPjwvc3VtbWFyeT48YnI+CgotIExWTSBtYWtlcyBp
dCBxdWl0ZSBlYXN5IHRvIG1vdmUgZmlsZSBzeXN0ZW1zIGFyb3VuZAotIHlv
dSBjYW4gZXh0ZW5kIGEgdm9sdW1lIGdyb3VwIG9udG8gYSBuZXcgcGh5c2lj
YWwgdm9sdW1lCi0gbW92ZSBhbnkgbnVtYmVyIG9mIGxvZ2ljYWwgdm9sdW1l
cyBvZiBhbiBvbGQgcGh5c2ljYWwgb25lCi0gcmVtb3ZlIHRoYXQgdm9sdW1l
IGZyb20gdGhlIHZvbHVtZSBncm91cCB3aXRob3V0IG5lZWRpbmcgdG8gdW5t
b3VudCBhbnkgcGFydGl0aW9ucwotIHlvdSBjYW4gYWxzbyBtYWtlIHNuYXBz
aG90cyBvZiBsb2dpY2FsIHZvbHVtZXMgZm9yIG1ha2luZyBiYWNrdXBzCi0g
TFZNIGhhcyBidWlsdCBpbiBtaXJyb3Jpbmcgc3VwcG9ydCBzbyB5b3UgY2Fu
IGhhdmUgYSBsb2dpY2FsIHZvbHVtZSBtaXJyb3JlZCBhY3Jvc3MgbXVsdGlw
bGUgcGh5c2ljYWwgdm9sdW1lcwotIExWTSBldmVuIHN1cHBvcnRzIFRSSU0K
ClVzZWZ1bCByZXNvdXJjZXM6CgotIFtXaGF0IGlzIExWTSBhbmQgd2hhdCBp
cyBpdCB1c2VkIGZvcj9dKGh0dHBzOi8vYXNrdWJ1bnR1LmNvbS9xdWVzdGlv
bnMvMzU5Ni93aGF0LWlzLWx2bS1hbmQtd2hhdC1pcy1pdC11c2VkLWZvcikK
CjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5Ib3cgdG8gaW5j
cmVhc2UgdGhlIHNpemUgb2YgTFZNIHBhcnRpdGlvbj88L2I+PC9zdW1tYXJ5
Pjxicj4KClVzZSB0aGUgYGx2ZXh0ZW5kYCBjb21tYW5kIGZvciByZXNpemUg
TFZNIHBhcnRpdGlvbi4KCi0gZXh0ZW5kaW5nIHRoZSBzaXplIGJ5IDUwME1C
OgoKYGBgYmFzaApsdmV4dGVuZCAtTCArNTAwTSAvZGV2L3Zncm91cC9sdm9s
dW1lCmBgYAoKLSBleHRlbmRpbmcgYWxsIGF2YWlsYWJsZSBmcmVlIHNwYWNl
OgoKYGBgYmFzaApsdmV4dGVuZCAtbCArMTAwJUZSRUUgL2Rldi92Z3JvdXAv
bHZvbHVtZQpgYGAKCmFuZCBgcmVzaXplMmZzYCBvciBgeGZzX2dyb3dmc2Ag
dG8gcmVzaXplIGZpbGVzeXN0ZW06CgotIGZvciBleHQgZmlsZXN5c3RlbXM6
CgpgYGBiYXNoCnJlc2l6ZTJmcyAvZGV2L3Zncm91cC9sdm9sdW1lCmBgYAoK
LSBmb3IgeGZzIGZpbGVzeXN0ZW06CgpgYGBiYXNoCnhmc19ncm93ZnMgbW91
bnRwb2ludF9mb3JfL2Rldi92Z3JvdXAvbHZvbHVtZQpgYGAKClVzZWZ1bCBy
ZXNvdXJjZXM6CgotIFtFeHRlbmRpbmcgYSBsb2dpY2FsIHZvbHVtZV0oaHR0
cHM6Ly93d3cudGxkcC5vcmcvSE9XVE8vTFZNLUhPV1RPL2V4dGVuZGx2Lmh0
bWwpCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+V2hhdCBp
cyBhIHpvbWJpZS9kZWZ1bmN0IHByb2Nlc3M/PC9iPjwvc3VtbWFyeT48YnI+
CgpJcyBhIHByb2Nlc3MgdGhhdCBoYXMgY29tcGxldGVkIGV4ZWN1dGlvbiAo
dmlhIHRoZSBgZXhpdGAgc3lzdGVtIGNhbGwpIGJ1dCBzdGlsbCBoYXMgYW4g
ZW50cnkgaW4gdGhlIHByb2Nlc3MgdGFibGU6IGl0IGlzIGEgcHJvY2VzcyBp
biB0aGUgIioqVGVybWluYXRlZCBzdGF0ZSoqIi4KClByb2Nlc3NlcyBtYXJr
ZWQgKipkZWZ1bmN0KiogYXJlIGRlYWQgcHJvY2Vzc2VzIChzby1jYWxsZWQg
InpvbWJpZXMiKSB0aGF0IHJlbWFpbiBiZWNhdXNlIHRoZWlyIHBhcmVudCBo
YXMgbm90IGRlc3Ryb3llZCB0aGVtIHByb3Blcmx5LiBUaGVzZSBwcm9jZXNz
ZXMgd2lsbCBiZSBkZXN0cm95ZWQgYnkgaW5pdCBpZiB0aGUgcGFyZW50IHBy
b2Nlc3MgZXhpdHMuCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbV2hhdCBpcyBh
IDxkZWZ1bmN0PiBwcm9jZXNzLCBhbmQgd2h5IGRvZXNuJ3QgaXQgZ2V0IGtp
bGxlZD9dKGh0dHBzOi8vYXNrdWJ1bnR1LmNvbS9xdWVzdGlvbnMvMjAxMzAz
L3doYXQtaXMtYS1kZWZ1bmN0LXByb2Nlc3MtYW5kLXdoeS1kb2VzbnQtaXQt
Z2V0LWtpbGxlZCkKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48
Yj5XaGF0IGlzIHRoZSBwcm9wZXIgd2F5IHRvIHVwZ3JhZGUvdXBkYXRlIGEg
c3lzdGVtIGluIHByb2R1Y3Rpb24/IERvIHlvdSBhdXRvbWF0ZSB0aGVzZSBw
cm9jZXNzZXM/IERvIHlvdSBzZXQgZG93bnRpbWUgZm9yIHRoZW0/IFdyaXRl
IHJlY29tbWVuZGF0aW9ucy4gKioqPC9iPjwvc3VtbWFyeT48YnI+CgpUbyBi
ZSBjb21wbGV0ZWQuCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+
PGI+WW91ciBmcmllbmQgZHVyaW5nIGNvbmZpZ3VyYXRpb24gb2YgdGhlIE15
U1FMIHNlcnZlciBhc2tlZCB5b3U6IDxpPlNob3VsZCBJIHJ1biA8Y29kZT5z
dWRvIG15c3FsX3NlY3VyZV9pbnN0YWxsYXRpb248L2NvZGU+IGFmdGVyIGlu
c3RhbGxpbmcgbXlzcWw/PC9pPiBXaGF0IGRvIHlvdSB0aGluayBhYm91dCBp
dD8gPC9iPjwvc3VtbWFyeT48YnI+CgpJdCB3b3VsZCBiZSBiZXR0ZXIgaWYg
eW91IHJ1biBjb21tYW5kIGFzIGl0IHByb3ZpZGVzIG1hbnkgc2VjdXJpdHkg
b3B0aW9ucyBsaWtlOgoKLSBZb3UgY2FuIHNldCBhIHBhc3N3b3JkIGZvciBy
b290IGFjY291bnRzCi0gWW91IGNhbiByZW1vdmUgcm9vdCBhY2NvdW50cyB0
aGF0IGFyZSBhY2Nlc3NpYmxlIGZyb20gb3V0c2lkZSB0aGUgbG9jYWwgaG9z
dAotIFlvdSBjYW4gcmVtb3ZlIGFub255bW91cy11c2VyIGFjY291bnRzCi0g
WW91IGNhbiByZW1vdmUgdGhlIHRlc3QgZGF0YWJhc2UsIHdoaWNoIGJ5IGRl
ZmF1bHQgY2FuIGJlIGFjY2Vzc2VkIGJ5IGFub255bW91cyB1c2VycwoKVXNl
ZnVsIHJlc291cmNlczoKCi0gW1doYXQgaXMgUHVycG9zZSBvZiB1c2luZyBt
eXNxbF9zZWN1cmVfaW5zdGFsbGF0aW9uP10oaHR0cHM6Ly9zdGFja292ZXJm
bG93LmNvbS9xdWVzdGlvbnMvMjA3NjA5MDgvd2hhdC1pcy1wdXJwb3NlLW9m
LXVzaW5nLW15c3FsLXNlY3VyZS1pbnN0YWxsYXRpb24pCgo8L2RldGFpbHM+
Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+UHJlc2VudCBhbmQgZXhwbGFpbiB0
aGUgZ29vZCB3YXlzIG9mIHVzaW5nIHRoZSA8Y29kZT5raWxsPC9jb2RlPiBj
b21tYW5kLjwvYj48L3N1bW1hcnk+PGJyPgoKU3BlYWtpbmcgb2Yga2lsbGlu
ZyBwcm9jZXNzZXMgbmV2ZXIgdXNlIGBraWxsIC05L1NJR0tJTExgIHVubGVz
cyBhYnNvbHV0ZWx5IG1hbmRhdG9yeS4gVGhpcyBraWxsIGNhbiBjYXVzZSBw
cm9ibGVtcyBiZWNhdXNlIG9mIGl0cyBicnV0ZSBmb3JjZS4KCkFsd2F5cyB0
cnkgdG8gdXNlIHRoZSBmb2xsb3dpbmcgc2ltcGxlIHByb2NlZHVyZToKCi0g
Zmlyc3QsIHNlbmQgKipTSUdURVJNKiogKGBraWxsIC0xNWApIHNpZ25hbCBm
aXJzdCB3aGljaCB0ZWxscyB0aGUgcHJvY2VzcyB0byBzaHV0ZG93biBhbmQg
aXMgZ2VuZXJhbGx5IGFjY2VwdGVkIGFzIHRoZSBzaWduYWwgdG8gdXNlIHdo
ZW4gc2h1dHRpbmcgZG93biBjbGVhbmx5IChidXQgcmVtZW1iZXIgdGhhdCB0
aGlzIHNpZ25hbCBjYW4gYmUgaWdub3JlZCkuCi0gbmV4dCB0cnkgdG8gc2Vu
ZCAqKlNJR0hVUCoqIChga2lsbCAtMWApIHNpZ25hbCB3aGljaCBpcyBjb21t
b25seSB1c2VkIHRvIHRlbGwgYSBwcm9jZXNzIHRvIHNodXRkb3duIGFuZCBy
ZXN0YXJ0LCB0aGlzIHNpZ25hbCBjYW4gYWxzbyBiZSBjYXVnaHQgYW5kIGln
bm9yZWQgYnkgYSBwcm9jZXNzLgoKVGhlIGZhciBtYWpvcml0eSBvZiB0aGUg
dGltZSwgdGhpcyBpcyBhbGwgeW91IG5lZWQgLSBhbmQgaXMgbXVjaCBjbGVh
bmVyLgoKVXNlZnVsIHJlc291cmNlczoKCi0gW1doZW4gc2hvdWxkIEkgbm90
IGtpbGwgLTkgYSBwcm9jZXNzP10oaHR0cHM6Ly91bml4LnN0YWNrZXhjaGFu
Z2UuY29tL3F1ZXN0aW9ucy84OTE2L3doZW4tc2hvdWxkLWktbm90LWtpbGwt
OS1hLXByb2Nlc3MpCi0gW1NJR1RFUk0gdnMuIFNJR0tJTExdKGh0dHBzOi8v
bWFqb3IuaW8vMjAxMC8wMy8xOC9zaWd0ZXJtLXZzLXNpZ2tpbGwvKQoKPC9k
ZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPldoYXQgaXMgPGNvZGU+
c3RyYWNlPC9jb2RlPiBjb21tYW5kIGFuZCBob3cgc2hvdWxkIGJlIHVzZWQ/
IEV4cGxhaW4gZXhhbXBsZSBvZiBjb25uZWN0IHRvIGFuIGFscmVhZHkgcnVu
bmluZyBwcm9jZXNzLjwvYj48L3N1bW1hcnk+PGJyPgoKYHN0cmFjZWAgaXMg
YSBwb3dlcmZ1bCBjb21tYW5kIGxpbmUgdG9vbCBmb3IgZGVidWdnaW5nIGFu
ZCB0cm91Ymxlc2hvb3RpbmcgcHJvZ3JhbXMgaW4gVW5peC1saWtlIG9wZXJh
dGluZyBzeXN0ZW1zIHN1Y2ggYXMgTGludXguIEl0IGNhcHR1cmVzIGFuZCBy
ZWNvcmRzIGFsbCBzeXN0ZW0gY2FsbHMgbWFkZSBieSBhIHByb2Nlc3MgYW5k
IHRoZSBzaWduYWxzIHJlY2VpdmVkIGJ5IHRoZSBwcm9jZXNzLgoKKipTdHJh
Y2UgT3ZlcnZpZXcqKgoKYHN0cmFjZWAgY2FuIGJlIHNlZW4gYXMgYSBsaWdo
dCB3ZWlnaHQgZGVidWdnZXIuIEl0IGFsbG93cyBhIHByb2dyYW1tZXIvdXNl
ciB0byBxdWlja2x5IGZpbmQgb3V0IGhvdyBhIHByb2dyYW0gaXMgaW50ZXJh
Y3Rpbmcgd2l0aCB0aGUgT1MuIEl0IGRvZXMgdGhpcyBieSBtb25pdG9yaW5n
IHN5c3RlbSBjYWxscyBhbmQgc2lnbmFscy4KCioqVXNlcyoqCgpHb29kIGZv
ciB3aGVuIHlvdSBkb24ndCBoYXZlIHNvdXJjZSBjb2RlIG9yIGRvbid0IHdh
bnQgdG8gYmUgYm90aGVyZWQgdG8gcmVhbGx5IGdvIHRocm91Z2ggaXQuIEFs
c28sIHVzZWZ1bCBmb3IgeW91ciBvd24gY29kZSBpZiB5b3UgZG9uJ3QgZmVl
bCBsaWtlIG9wZW5pbmcgdXAgKipHREIqKiwgYnV0IGFyZSBqdXN0IGludGVy
ZXN0ZWQgaW4gdW5kZXJzdGFuZGluZyBleHRlcm5hbCBpbnRlcmFjdGlvbi4K
CioqRXhhbXBsZSBvZiBhdHRhY2ggdG8gdGhlIHByb2Nlc3MqKgoKYHN0cmFj
ZSAtcCA8UElEPmAgLSB0byBhdHRhY2ggYSBwcm9jZXNzIHRvIHN0cmFjZS4K
CmBzdHJhY2UgLWUgdHJhY2U9cmVhZCx3cml0ZSAtcCA8UElEPmAgLSBieSB0
aGlzIHlvdSBjYW4gYWxzbyB0cmFjZSBhIHByb2Nlc3MvcHJvZ3JhbSBmb3Ig
YW4gZXZlbnQsIGxpa2UgcmVhZCBhbmQgd3JpdGUgKGluIHRoaXMgZXhhbXBs
ZSkuIFNvIGhlcmUgaXQgd2lsbCBwcmludCBhbGwgc3VjaCBldmVudHMgdGhh
dCBpbmNsdWRlIHJlYWQgYW5kIHdyaXRlIHN5c3RlbSBjYWxscyBieSB0aGUg
cHJvY2Vzcy4KCk90aGVyIHN1Y2ggZXhhbXBsZXMKCi0gYC1lIHRyYWNlPW5l
dHdvcmtgIC0gdHJhY2UgYWxsIHRoZSBuZXR3b3JrIHJlbGF0ZWQgc3lzdGVt
IGNhbGxzLgotIGAtZSB0cmFjZT1zaWduYWxgIC0gdHJhY2UgYWxsIHNpZ25h
bCByZWxhdGVkIHN5c3RlbSBjYWxscy4KLSBgLWUgdHJhY2U9aXBjYCAtIHRy
YWNlIGFsbCBJUEMgcmVsYXRlZCBzeXN0ZW0gY2FsbHMuCi0gYC1lIHRyYWNl
PWRlc2NgIC0gdHJhY2UgYWxsIGZpbGUgZGVzY3JpcHRvciByZWxhdGVkIHN5
c3RlbSBjYWxscy4KLSBgLWUgdHJhY2U9bWVtb3J5YCAtIHRyYWNlIGFsbCBt
ZW1vcnkgbWFwcGluZyByZWxhdGVkIHN5c3RlbSBjYWxscy4KClVzZWZ1bCBy
ZXNvdXJjZXM6CgotIFtIb3cgc2hvdWxkIHN0cmFjZSBiZSB1c2VkPyAob3Jp
Z2luYWwpXShodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8x
NzQ5NDIvaG93LXNob3VsZC1zdHJhY2UtYmUtdXNlZCkKLSBbSG93IGRvZXMg
c3RyYWNlIGNvbm5lY3QgdG8gYW4gYWxyZWFkeSBydW5uaW5nIHByb2Nlc3M/
IChvcmlnaW5hbCldKGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rp
b25zLzc0ODIwNzYvaG93LWRvZXMtc3RyYWNlLWNvbm5lY3QtdG8tYW4tYWxy
ZWFkeS1ydW5uaW5nLXByb2Nlc3MpCi0gW3N0cmFjZTogZm9yIGZ1biwgcHJv
Zml0LCBhbmQgZGVidWdnaW5nXShodHRwOi8vdGltZXRvYmxlZWQuY29tL2hl
bGxvLXdvcmxkLykKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48
Yj5XaGVuIHdvdWxkIHlvdSB1c2UgYWNjZXNzIGNvbnRyb2wgbGlzdHMgaW5z
dGVhZCBvZiBvciBpbiBjb25qdW5jdGlvbiB3aXRoIHRoZSA8Y29kZT5jaG1v
ZDwvY29kZT4gY29tbWFuZD8gKioqPC9iPjwvc3VtbWFyeT48YnI+CgpUbyBi
ZSBjb21wbGV0ZWQuCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+
PGI+V2hpY2ggYWxnb3JpdGhtcyBhcmUgc3VwcG9ydGVkIGluIDxjb2RlPi9l
dGMvc2hhZG93PC9jb2RlPiBmaWxlPzwvYj48L3N1bW1hcnk+PGJyPgoKVHlw
aWNhbCBjdXJyZW50IGFsZ29yaXRobXMgYXJlOgoKLSBNRDUKLSBTSEEtMSAo
YWxzbyBjYWxsZWQgU0hBKQoKYm90aCBzaG91bGQgbm90IGJlIHVzZWQgZm9y
IGNyeXB0b2dyYXBoaWMvc2VjdXJpdHkgcHVycG9zZXMgYW55IG1vcmUhIQoK
LSBTSEEtMjU2Ci0gU0hBLTUxMgotIFNIQS0zIChLRUNDQUsgd2FzIGFubm91
bmNlZCB0aGUgd2lubmVyIGluIHRoZSBjb21wZXRpdGlvbiBmb3IgYSBuZXcg
ZmVkZXJhbCBhcHByb3ZlZCBoYXNoIGFsZ29yaXRobSBpbiBPY3RvYmVyIDIw
MTIpCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbV2hhdCBpcyB0aGUgYWxnb3Jp
dGhtIHVzZWQgdG8gZW5jcnlwdCBMaW51eCBwYXNzd29yZHM/XShodHRwczov
L2NyeXB0by5zdGFja2V4Y2hhbmdlLmNvbS9xdWVzdGlvbnMvNDA4NDEvd2hh
dC1pcy10aGUtYWxnb3JpdGhtLXVzZWQtdG8tZW5jcnlwdC1saW51eC1wYXNz
d29yZHMpCi0gW0hvdyB0byBmaW5kIHRoZSBoYXNoaW5nIGFsZ29yaXRobSB1
c2VkIHRvIG9iZnVzY2F0ZSBwYXNzd29yZHM/XShodHRwczovL3VuaXguc3Rh
Y2tleGNoYW5nZS5jb20vcXVlc3Rpb25zLzQzMDE0MS9ob3ctdG8tZmluZC10
aGUtaGFzaGluZy1hbGdvcml0aG0tdXNlZC10by1vYmZ1c2NhdGUtcGFzc3dv
cmRzKQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPldoYXQg
aXMgdGhlIHVzZSBvZiB1bGltaXQgaW4gVW5peC1saWtlIHN5c3RlbXM/PC9i
Pjwvc3VtbWFyeT48YnI+CgpNb3N0IFVuaXgtbGlrZSBvcGVyYXRpbmcgc3lz
dGVtcywgaW5jbHVkaW5nIExpbnV4IGFuZCBCU0QsIHByb3ZpZGUgd2F5cyB0
byBsaW1pdCBhbmQgY29udHJvbCB0aGUgdXNhZ2Ugb2Ygc3lzdGVtIHJlc291
cmNlcyBzdWNoIGFzIHRocmVhZHMsIGZpbGVzLCBhbmQgbmV0d29yayBjb25u
ZWN0aW9ucyBvbiBhIHBlci1wcm9jZXNzIGFuZCBwZXItdXNlciBiYXNpcy4g
VGhlc2UgIioqdWxpbWl0cyoqIiBwcmV2ZW50IHNpbmdsZSB1c2VycyBmcm9t
IHVzaW5nIHRvbyBtYW55IHN5c3RlbSByZXNvdXJjZXMuCgo8L2RldGFpbHM+
Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+V2hhdCBhcmUgc29mdCBsaW1pdHMg
YW5kIGhhcmQgbGltaXRzPzwvYj48L3N1bW1hcnk+PGJyPgoKKipIYXJkIGxp
bWl0KiogaXMgdGhlIG1heGltdW0gYWxsb3dlZCB0byBhIHVzZXIsIHNldCBi
eSB0aGUgc3VwZXJ1c2VyIG9yIHJvb3QuIFRoaXMgdmFsdWUgaXMgc2V0IGlu
IHRoZSBmaWxlIGAvZXRjL3NlY3VyaXR5L2xpbWl0cy5jb25mYC4gVGhlIHVz
ZXIgY2FuIGluY3JlYXNlIHRoZSAqKnNvZnQgbGltaXQqKiBvbiB0aGVpciBv
d24gaW4gdGltZXMgb2YgbmVlZGluZyBtb3JlIHJlc291cmNlcywgYnV0IGNh
bm5vdCBzZXQgdGhlICoqc29mdCBsaW1pdCoqIGhpZ2hlciB0aGFuIHRoZSAq
KmhhcmQgbGltaXQqKi4KCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFy
eT48Yj5EdXJpbmcgY29uZmlndXJhdGlvbiBIQVByb3h5IHRvIHdvcmtpbmcg
d2l0aCBSZWRpcyB5b3UgZ2V0IDxjb2RlPkdlbmVyYWwgc29ja2V0IGVycm9y
IChQZXJtaXNzaW9uIGRlbmllZCk8L2NvZGU+IGZyb20gbG9nLiBTRUxpbnV4
IGlzIGVuYWJsZS4gRXhwbGFpbiBiYXNpYyBTRUxpbnV4IHRyb3VibGVzaG9v
dGluZyBpbiBDTEkuICoqKjwvYj48L3N1bW1hcnk+PGJyPgoKVXNlZnVsIHJl
c291cmNlczoKCi0gW0Jhc2ljIFNFTGludXggVHJvdWJsZXNob290aW5nIGlu
IENMSV0oaHR0cHM6Ly9hY2Nlc3MucmVkaGF0LmNvbS9hcnRpY2xlcy8yMTkx
MzMxKQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPllvdSBo
YXZlIGNvbmZpZ3VyZWQgYW4gUlNBIGtleSBsb2dpbiBidXQgeW91ciBzZXJ2
ZXIgc2hvdyA8Y29kZT5TZXJ2ZXIgcmVmdXNlZCBvdXIga2V5PC9jb2RlPiBh
cyBleHBlY3RlZC4gV2hlcmUgd2lsbCB5b3UgbG9vayBmb3IgdGhlIGNhdXNl
IG9mIHRoZSBwcm9ibGVtPzwvYj48L3N1bW1hcnk+PGJyPgoKKipTZXJ2ZXIg
c2lkZSoqCgpTZXR0aW5nIGBMb2dMZXZlbCBWRVJCT1NFYCBpbiBmaWxlIGAv
ZXRjL3NzaC9zc2hkX2NvbmZpZ2AgaXMgcHJvYmFibHkgd2hhdCB5b3UgbmVl
ZCwgYWx0aG91Z2ggdGhlcmUgYXJlIGhpZ2hlciBsZXZlbHM6CgpTU0ggYXV0
aCBmYWlsdXJlcyBhcmUgbG9nZ2VkIGluIGAvdmFyL2xvZy9hdXRoLmxvZ2As
IGAvdmFyL2xvZy9zZWN1cmVgIG9yIGAvdmFyL2xvZy9hdWRpdC9hdWRpdC5s
b2dgLgoKVGhlIGZvbGxvd2luZyBzaG91bGQgZ2l2ZSB5b3Ugb25seSBzc2gg
cmVsYXRlZCBsb2cgbGluZXMgKGZvciBleGFtcGxlKToKCmBgYGJhc2gKZ3Jl
cCAnc3NoZCcgL3Zhci9sb2cvYXV0aC5sb2cKYGBgCgpOZXh0LCB0aGUgbW9z
dCBzaW1wbGUgY29tbWFuZCB0byBsaXN0IGFsbCBmYWlsZWQgU1NIIGxvZ2lu
cyBpcyB0aGUgb25lIHNob3duIGJlbG93OgoKYGBgYmFzaApncmVwICJGYWls
ZWQgcGFzc3dvcmQiIC92YXIvbG9nL2F1dGgubG9nCmBgYAoKYWxzbyB1c2Vm
dWwgaXM6CgpgYGBiYXNoCmdyZXAgIkZhaWxlZFx8RmFpbHVyZSIgL3Zhci9s
b2cvYXV0aC5sb2cKYGBgCgpPbiBuZXdlciBMaW51eCBkaXN0cmlidXRpb25z
IHlvdSBjYW4gcXVlcnkgdGhlIHJ1bnRpbWUgbG9nIGZpbGUgbWFpbnRhaW5l
ZCBieSBTeXN0ZW1kIGRhZW1vbiB2aWEgYGpvdXJuYWxjdGxgIGNvbW1hbmQg
KGBzc2guc2VydmljZWAgb3IgYHNzaGQuc2VydmljZWApLiBGb3IgZXhhbXBs
ZToKCmBgYGJhc2gKam91cm5hbGN0bCBfU1lTVEVNRF9VTklUPXNzaC5zZXJ2
aWNlIHwgZWdyZXAgIkZhaWxlZHxGYWlsdXJlIgpgYGAKCioqQ2xpZW50IHNp
ZGUqKgoKQWxzbyB5b3Ugc2hvdWxkIHJ1biBTU0ggY2xpZW50IHdpdGggYC12
fC0tdmVyYm9zZWAgLSBpdCBpcyBpbiBmaXJzdCBsZXZlbCBvZiB2ZXJib3Np
dHkuIE5leHQsIHlvdSBjYW4gZW5hYmxlIGFkZGl0aW9uYWwgKGxldmVsIDIg
YW5kIDMpIHZlcmJvc2l0eSBmb3IgZXZlbiBtb3JlIGRlYnVnZ2luZyBtZXNz
YWdlcyBhcyBzaG93biB3aXRoIGUuZy4gYC12dmAuCgpVc2VmdWwgcmVzb3Vy
Y2VzOgoKLSBbRW5hYmxlIERlYnVnZ2luZyBNb2RlIGluIFNTSCB0byBUcm91
Ymxlc2hvb3QgQ29ubmVjdGl2aXR5IElzc3Vlc10oaHR0cHM6Ly93d3cudGVj
bWludC5jb20vZW5hYmxlLWRlYnVnZ2luZy1tb2RlLWluLXNzaC8pCgo8L2Rl
dGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+V2h5IGRvIG1vc3QgZGlz
dHJvcyB1c2UgZXh0NCwgYXMgb3Bwb3NlZCB0byBYRlMgb3Igb3RoZXIgZmls
ZXN5c3RlbXM/IFdoeSBhcmUgdGhlcmUgc28gbWFueSBvZiB0aGVtPyAqKio8
L2I+PC9zdW1tYXJ5Pjxicj4KClRvIGJlIGNvbXBsZXRlZC4KCjwvZGV0YWls
cz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5BIHByb2plY3QgbWFuYWdlciBu
ZWVkcyBhIG5ldyBTUUwgU2VydmVyLiBXaGF0IGRvIHlvdSBhc2sgaGVyL2hp
cz8gKioqPC9iPjwvc3VtbWFyeT48YnI+CgpJIHdhbnQgdGhlIERCQSB0byBh
c2sgcXVlc3Rpb25zIGxpa2U6CgotIEhvdyBiaWcgd2lsbCB0aGUgZGF0YWJh
c2UgYmU/ICh3aGV0aGVyIHdlIGNhbiBhZGQgdGhlIGRhdGFiYXNlIHRvIGFu
IGV4aXN0aW5nIHNlcnZlcikKLSBIb3cgY3JpdGljYWwgaXMgdGhlIGRhdGFi
YXNlPyAoYWJvdXQgY2x1c3RlcmluZywgZGlzYXN0ZXIgcmVjb3ZlcnksIGhp
Z2ggYXZhaWxhYmlsaXR5KQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1t
YXJ5PjxiPkNyZWF0ZSBhIGZpbGUgd2l0aCAxMDAgbGluZXMgd2l0aCByYW5k
b20gdmFsdWVzLjwvYj48L3N1bW1hcnk+PGJyPgoKRm9yIGV4YW1wbGU6Cgpg
YGBiYXNoCmNhdCAvZGV2L3VyYW5kb20gfCB0ciAtZGMgJ2EtekEtWjAtOScg
fCBmb2xkIC13IDMyIHwgaGVhZCAtbiAxMDAgPiAvcGF0aC90by9maWxlCmBg
YAoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPkhvdyB0byBy
dW4gc2NyaXB0IGFzIGFub3RoZXIgdXNlciB3aXRob3V0IHBhc3N3b3JkPzwv
Yj48L3N1bW1hcnk+PGJyPgoKRm9yIGV4YW1wbGUgKHdpdGggYHZpc3Vkb2Ag
Y29tbWFuZCk6CgpgYGBiYXNoCnVzZXIxIEFMTD0odXNlcjIpIE5PUEFTU1dE
OiAvb3B0L3NjcmlwdHMvYmluL2dlbmVyYXRlLnNoCmBgYAoKVGhlIGNvbW1h
bmQgcGF0aHMgbXVzdCBiZSBhYnNvbHV0ZSEgVGhlbiBjYWxsIGBzdWRvIC11
IHVzZXIyIC9vcHQvc2NyaXB0cy9iaW4vZ2VuZXJhdGUuc2hgIGZyb20gYSB1
c2VyMSBzaGVsbC4KCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48
Yj5Ib3cgdG8gY2hlY2sgaWYgcnVubmluZyBhcyByb290IGluIGEgYmFzaCBz
Y3JpcHQ/IFdoYXQgc2hvdWxkIHlvdSB3YXRjaCBvdXQgZm9yPzwvYj48L3N1
bW1hcnk+PGJyPgoKSW4gYSBiYXNoIHNjcmlwdCwgeW91IGhhdmUgc2V2ZXJh
bCB3YXlzIHRvIGNoZWNrIGlmIHRoZSBydW5uaW5nIHVzZXIgaXMgcm9vdC4K
CkFzIGEgd2FybmluZywgZG8gbm90IGNoZWNrIGlmIGEgdXNlciBpcyByb290
IGJ5IHVzaW5nIHRoZSByb290IHVzZXJuYW1lLiBOb3RoaW5nIGd1YXJhbnRl
ZXMgdGhhdCB0aGUgdXNlciB3aXRoIElEIDAgaXMgY2FsbGVkIHJvb3QuIEl0
J3MgYSB2ZXJ5IHN0cm9uZyBjb252ZW50aW9uIHRoYXQgaXMgYnJvYWRseSBm
b2xsb3dlZCBidXQgYW55Ym9keSBjb3VsZCByZW5hbWUgdGhlIHN1cGVydXNl
ciBhbm90aGVyIG5hbWUuCgpJIHRoaW5rIHRoZSBiZXN0IHdheSB3aGVuIHVz
aW5nIGJhc2ggaXMgdG8gdXNlIGAkRVVJRGAgYmVjYXVzZSBgJFVJRGAgY291
bGQgYmUgY2hhbmdlZCBhbmQgbm90IHJlZmxlY3QgdGhlIHJlYWwgdXNlciBy
dW5uaW5nIHRoZSBzY3JpcHQuCgpgYGBiYXNoCmlmICgoICRFVUlEICE9IDAg
KSk7IHRoZW4KICBlY2hvICJQbGVhc2UgcnVuIGFzIHJvb3QiCiAgZXhpdApm
aQpgYGAKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPkNhbiB5
b3UgZ2l2ZSBhIHBhcnRpY3VsYXIgZXhhbXBsZSB3aGVuIGlzIGluZGljYXRl
ZCB0byB1c2UgPGNvZGU+bm9ib2R5PC9jb2RlPiBhY2NvdW50PyBUZWxsIG1l
IHRoZSBkaWZmZXJlbmNlcyBydW5uaW5nIGh0dHBkIHNlcnZpY2UgYXMgYSA8
Y29kZT5ub2JvZHk8L2NvZGU+IGFuZCA8Y29kZT53d3ctZGF0YTwvY29kZT4g
YWNjb3VudHMuPC9iPjwvc3VtbWFyeT48YnI+CgpJbiBtYW55IFVuaXggdmFy
aWFudHMsIGBub2JvZHlgIGlzIHRoZSBjb252ZW50aW9uYWwgbmFtZSBvZiBh
IHVzZXIgYWNjb3VudCB3aGljaCBvd25zIG5vIGZpbGVzLCBpcyBpbiBubyBw
cml2aWxlZ2VkIGdyb3VwcywgYW5kIGhhcyBubyBhYmlsaXRpZXMgZXhjZXB0
IHRob3NlIHdoaWNoIGV2ZXJ5IG90aGVyIHVzZXIgaGFzLgoKSXQgaXMgY29t
bW9uIHRvIHJ1biBkYWVtb25zIGFzIGBub2JvZHlgLCBlc3BlY2lhbGx5IHNl
cnZlcnMsIGluIG9yZGVyIHRvIGxpbWl0IHRoZSBkYW1hZ2UgdGhhdCBjb3Vs
ZCBiZSBkb25lIGJ5IGEgbWFsaWNpb3VzIHVzZXIgd2hvIGdhaW5lZCBjb250
cm9sIG9mIHRoZW0uCgpIb3dldmVyLCB0aGUgdXNlZnVsbmVzcyBvZiB0aGlz
IHRlY2huaXF1ZSBpcyByZWR1Y2VkIGlmIG1vcmUgdGhhbiBvbmUgZGFlbW9u
IGlzIHJ1biBsaWtlIHRoaXMsIGJlY2F1c2UgdGhlbiBnYWluaW5nIGNvbnRy
b2wgb2Ygb25lIGRhZW1vbiB3b3VsZCBwcm92aWRlIGNvbnRyb2wgb2YgdGhl
bSBhbGwuIFRoZSByZWFzb24gaXMgdGhhdCBgbm9ib2R5YC1vd25lZCBwcm9j
ZXNzZXMgaGF2ZSB0aGUgYWJpbGl0eSB0byBzZW5kIHNpZ25hbHMgdG8gZWFj
aCBvdGhlciBhbmQgZXZlbiBkZWJ1ZyBlYWNoIG90aGVyLCBhbGxvd2luZyB0
aGVtIHRvIHJlYWQgb3IgZXZlbiBtb2RpZnkgZWFjaCBvdGhlcidzIG1lbW9y
eS4KCioqV2hlbiBzaG91bGQgSSB1c2UgYG5vYm9keWAgYWNjb3VudD8qKgoK
V2hlbiBwZXJtaXNzaW9ucyBhcmVuJ3QgcmVxdWlyZWQgZm9yIGEgcHJvZ3Jh
bSdzIG9wZXJhdGlvbnMuIFRoaXMgaXMgbW9zdCBub3RhYmxlIHdoZW4gdGhl
cmUgaXNuJ3QgZXZlciBnb2luZyB0byBiZSBhbnkgZGlzayBhY3Rpdml0eS4K
CkEgcmVhbCB3b3JsZCBleGFtcGxlIG9mIHRoaXMgaXMgKiptZW1jYWNoZWQq
KiAoYSBrZXktdmFsdWUgaW4tbWVtb3J5IGNhY2hlL2RhdGFiYXNlL3RoaW5n
KSwgc2l0dGluZyBvbiBteSBjb21wdXRlciBhbmQgbXkgc2VydmVyIHJ1bm5p
bmcgdW5kZXIgdGhlIGBub2JvZHlgIGFjY291bnQuIFdoeT8gQmVjYXVzZSBp
dCBqdXN0IGRvZXNuJ3QgbmVlZCBhbnkgcGVybWlzc2lvbnMgYW5kIHRvIGdp
dmUgaXQgYW4gYWNjb3VudCB0aGF0IGRpZCBoYXZlIHdyaXRlIGFjY2VzcyB0
byBmaWxlcyB3b3VsZCBqdXN0IGJlIGEgbmVlZGxlc3Mgcmlzay4KCkEgZ29v
ZCBleGFtcGxlIGFyZSBhbHNvIHdlYiBzZXJ2ZXJzLiBJbWFnaW5lIGlmIEFw
YWNoZSByYW4gYXMgcm9vdCBhbmQgc29tZW9uZSBmb3VuZCBhIHdheSB0byBz
ZW5kIGN1c3RvbSBjb21tYW5kcyB0byB0aGUgY29uc29sZSB0aHJvdWdoIEFw
YWNoZSB3b3VsZCBoYXZlIGFjY2VzcyB0byB5b3VyIGVudGlyZSBzeXN0ZW0u
Cgpgbm9ib2R5YCBhY2NvdW50IGFsc28gaXMgdXNlZCBhcyBhIHJlc3RyaWN0
ZWQgc2hlbGwgZm9yIGdpdmluZyB1c2VycyBmaWxlc3lzdGVtIGFjY2VzcyB3
aXRob3V0IGFuIGFjdHVhbCBzaGVsbCBsaWtlIGJhc2guIFRoaXMgc2hvdWxk
IHByZXZlbnQgdGhlbSBmcm9tIGJlaW5nIGFibGUgdG8gZXhlY3V0ZSB0aGlu
Z3MuCgoqKmBub2JvZHlgIG9yIGB3d3ctZGF0YWAgZm9yIGh0dHBkIChBcGFj
aGUpKioKClVwb24gc3RhcnRpbmcgQXBhY2hlIG5lZWRzIHJvb3QgYWNjZXNz
LCBidXQgaXQgcXVpY2tseSBkcm9wcyB0aGlzIGFuZCBhc3N1bWVzIHRoZSBp
ZGVudGl0eSBvZiBhIG5vbiBwcml2aWxlZ2VkIHVzZXIuIFRoaXMgdXNlciBj
YW4gZWl0aGVyIGJlIGBub2JvZHlgIG9yIGBhcGFjaGVgLCBvciBgd3d3LWRh
dGFgLgoKU2V2ZXJhbCBhcHBsaWNhdGlvbnMgdXNlIHRoZSB1c2VyIGBub2Jv
ZHlgIGFzIGEgZGVmYXVsdC4gRm9yIGV4YW1wbGUgeW91IHByb2JhYmx5IG5l
dmVyIHJlYWxseSB3YW50IHNheSB0aGUgQXBhY2hlIHNlcnZpY2UgdG8gYmUg
b3ZlcndyaXRpbmcgZmlsZXMgdGhhdCBiZWxvbmcgdG8gYmluZC4gSGF2aW5n
IGEgcGVyLXNlcnZpY2UgYWNjb3VudCB0ZW5kcyB0byBiZSBhIHZlcnkgZ29v
ZCBpZGVhLgoKR2V0dGluZyBBcGFjaGUgdG8gcnVuIGFzIGBub2JvZHk6bm9i
b2R5YCBpcyBwcmV0dHkgZWFzeSwganVzdCB1cGRhdGUgdGhlIHVzZXIgYW5k
IGdyb3VwIHNldHRpbmdzLiBCdXQgYXMgSSBtZW50aW9uZWQgYWJvdmUgSSBk
b24ndCByZWFsbHkgcmVjb21tZW5kIHRoYXQgcGFydGljdWxhciB1c2VyL2dy
b3VwLiBJdCBpcyBlbnRpcmVseSBwb3NzaWJsZSB0aGF0IHlvdSBtYXkgYmUg
dGVtcHRlZCB0byBhZGQgYSBzZXJ2aWNlIHRvIHRoZSBzeXN0ZW0gYXQgc29t
ZSB0aW1lIGluIHRoZSBmdXR1cmUgdGhhdCBhbHNvIHJ1bnMgYXMgYG5vYm9k
eWAsIGFuZCB5b3Ugd2lsbCBmb3JnZXQgdGhhdCBoYXZlIGdpdmVuIHdyaXRl
IGFjY2VzcyBvbiB0aGUgZmlsZXN5c3RlbSB0byB0aGUgdXNlciBgbm9ib2R5
YC4KCiBJZiBzb21laG93LCBgbm9ib2R5YCB3ZXJlIHRvIGJlY29tZSBjb21w
cm9taXNlZCB0aGV5IGNvdWxkIHBvdGVudGlhbGx5IGhhdmUgbW9yZSBpbXBh
Y3QgdGhhbiBpZiBhbiBhcHBsaWNhdGlvbiBpc29sYXRlIHVzZXIsIHN1Y2gg
YXMgYHd3dy1kYXRhYC4gT2YgY291cnNlIGEgbG90IG9mIHRoaXMgd2lsbCBk
ZXBlbmQgb24gdGhlIGZpbGUgYW5kIGdyb3VwIHBlcm1pc3Npb25zLiBgbm9i
b2R5YCB1c2VzIHRoZSBwZXJtaXNzaW9ucyBvZiBvdGhlcnMsIHdoaWxlIGFu
IGFwcGxpY2F0aW9uIHNwZWNpZmljIHVzZXIgY291bGQgYmUgY29uZmlndXJl
ZCB0byBhbGxvdyBmaWxlIHJlYWQgYWNjZXNzLCBidXQgb3RoZXIgY291bGQg
c3RpbGwgYmUgZGVuaWVkLgoKVXNlZnVsIHJlc291cmNlczoKCi0gW1doYXQg
aXMgbm9ib2R5IHVzZXIgYW5kIGdyb3VwP10oaHR0cHM6Ly91bml4LnN0YWNr
ZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy8xODY1Njgvd2hhdC1pcy1ub2JvZHkt
dXNlci1hbmQtZ3JvdXApCi0gW1RoZSBMaW51eCBhbmQgVW5peCBOb2JvZHkg
VXNlcl0oaHR0cDovL2xpbnV4Zy5uZXQvdGhlLWxpbnV4LWFuZC11bml4LW5v
Ym9keS11c2VyLykKLSBbV2hhdCBpcyB0aGUgcHVycG9zZSBvZiB0aGUgJ25v
Ym9keScgdXNlcj9dKGh0dHBzOi8vYXNrdWJ1bnR1LmNvbS9xdWVzdGlvbnMv
MzI5NzE0L3doYXQtaXMtdGhlLXB1cnBvc2Utb2YtdGhlLW5vYm9keS11c2Vy
KQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPklzIHRoZXJl
IGEgd2F5IHRvIHJlZGlyZWN0IG91dHB1dCB0byBhIGZpbGUgYW5kIGhhdmUg
aXQgZGlzcGxheSBvbiBzdGRvdXQ/PC9iPjwvc3VtbWFyeT48YnI+CgpUaGUg
Y29tbWFuZCB5b3Ugd2FudCBpcyBuYW1lZCB0ZWU6CgpgZm9vIHwgdGVlIG91
dHB1dC5maWxlYAoKRm9yIGV4YW1wbGUsIGlmIHlvdSBvbmx5IGNhcmUgYWJv
dXQgc3Rkb3V0OgoKYGxzIC1hIHwgdGVlIG91dHB1dC5maWxlYAoKSWYgeW91
IHdhbnQgdG8gaW5jbHVkZSBzdGRlcnIsIGRvOgoKYHByb2dyYW0gW2FyZ3Vt
ZW50cy4uLl0gMj4mMSB8IHRlZSBvdXRmaWxlYAoKYDI+JjFgIHJlZGlyZWN0
cyBjaGFubmVsIDIgKHN0ZGVyci9zdGFuZGFyZCBlcnJvcikgaW50byBjaGFu
bmVsIDEgKHN0ZG91dC9zdGFuZGFyZCBvdXRwdXQpLCBzdWNoIHRoYXQgYm90
aCBpcyB3cml0dGVuIGFzIHN0ZG91dC4gSXQgaXMgYWxzbyBkaXJlY3RlZCB0
byB0aGUgZ2l2ZW4gb3V0cHV0IGZpbGUgYXMgb2YgdGhlIHRlZSBjb21tYW5k
LgoKRnVydGhlcm1vcmUsIGlmIHlvdSB3YW50IHRvIGFwcGVuZCB0byB0aGUg
bG9nIGZpbGUsIHVzZSBgdGVlIC1hYCBhczoKCmBwcm9ncmFtIFthcmd1bWVu
dHMuLi5dIDI+JjEgfCB0ZWUgLWEgb3V0ZmlsZWAKCjwvZGV0YWlscz4KCjxk
ZXRhaWxzPgo8c3VtbWFyeT48Yj5XaGF0IGlzIHRoZSBwcmVmZXJyZWQgYmFz
aCBzaGViYW5nIGFuZCB3aHk/IFdoYXQgaXMgdGhlIGRpZmZlcmVuY2UgYmV0
d2VlbiBleGVjdXRpbmcgYSBmaWxlIHVzaW5nIDxjb2RlPi4vc2NyaXB0PC9j
b2RlPiBvciA8Y29kZT5iYXNoIHNjcmlwdDwvY29kZT4/PC9iPjwvc3VtbWFy
eT48YnI+CgpZb3Ugc2hvdWxkIHVzZSBgIyEvdXNyL2Jpbi9lbnYgYmFzaGAg
Zm9yIHBvcnRhYmlsaXR5OiBkaWZmZXJlbnQgXCpuaXhlcyBwdXQgYmFzaCBp
biBkaWZmZXJlbnQgcGxhY2VzLCBhbmQgdXNpbmcgYC91c3IvYmluL2VudmAg
aXMgYSB3b3JrYXJvdW5kIHRvIHJ1biB0aGUgZmlyc3QgYmFzaCBmb3VuZCBv
biB0aGUgYFBBVEhgLgoKUnVubmluZyBgLi9zY3JpcHRgIGRvZXMgZXhhY3Rs
eSB0aGF0LCBhbmQgcmVxdWlyZXMgZXhlY3V0ZSBwZXJtaXNzaW9uIG9uIHRo
ZSBmaWxlLCBidXQgaXMgYWdub3N0aWMgdG8gd2hhdCB0eXBlIG9mIGEgcHJv
Z3JhbSBpdCBpcy4gSXQgbWlnaHQgYmUgYSAqKmJhc2ggc2NyaXB0KiosIGFu
ICoqc2ggc2NyaXB0KiosIG9yIGEgKipQZXJsKiosICoqUHl0aG9uKiosICoq
YXdrKiosIG9yICoqZXhwZWN0IHNjcmlwdCoqLCBvciBhbiBhY3R1YWwgKipi
aW5hcnkgZXhlY3V0YWJsZSoqLiBSdW5uaW5nIGBiYXNoIHNjcmlwdGAgd291
bGQgZm9yY2UgaXQgdG8gYmUgcnVuIHVuZGVyIGBzaGAsIGluc3RlYWQgb2Yg
YW55dGhpbmcgZWxzZS4KClVzZWZ1bCByZXNvdXJjZXM6CgotIFtXaGF0IGlz
IHRoZSBwcmVmZXJyZWQgQmFzaCBzaGViYW5nPyAob3JpZ2luYWwpXShodHRw
czovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xMDM3NjIwNi93aGF0
LWlzLXRoZS1wcmVmZXJyZWQtYmFzaC1zaGViYW5nKQoKPC9kZXRhaWxzPgoK
PGRldGFpbHM+CjxzdW1tYXJ5PjxiPllvdSBtdXN0IHJ1biBjb21tYW5kIHRo
YXQgd2lsbCBiZSBwZXJmb3JtZWQgZm9yIGEgdmVyeSBsb25nIHRpbWUuIEhv
dyB0byBwcmV2ZW50IGtpbGxpbmcgdGhpcyBwcm9jZXNzIGFmdGVyIHRoZSBz
c2ggc2Vzc2lvbiBkcm9wcz88L2I+PC9zdW1tYXJ5Pjxicj4KClVzZSBgbm9o
dXBgIHRvIG1ha2UgeW91ciBwcm9jZXNzIGlnbm9yZSB0aGUgaGFuZ3VwIHNp
Z25hbDoKCmBgYGJhc2gKbm9odXAgbG9uZy1ydW5uaW5nLXByb2Nlc3MgJgpl
eGl0CmBgYAoKb3IgeW91IHdhbnQgdG8gYmUgdXNpbmcgKipHTlUgU2NyZWVu
Kio6CgpgYGBiYXNoCnNjcmVlbiAtZCAtbSBsb25nLXJ1bm5pbmctcHJvY2Vz
cwpleGl0CmBgYAoKVXNlZnVsIHJlc291cmNlczoKCi0gWzUgV2F5cyB0byBL
ZWVwIFJlbW90ZSBTU0ggU2Vzc2lvbnMgYW5kIFByb2Nlc3NlcyBSdW5uaW5n
IEFmdGVyIERpc2Nvbm5lY3Rpb25dKGh0dHBzOi8vd3d3LnRlY21pbnQuY29t
L2tlZXAtcmVtb3RlLXNzaC1zZXNzaW9ucy1ydW5uaW5nLWFmdGVyLWRpc2Nv
bm5lY3Rpb24vKQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5Pjxi
PldoYXQgaXMgdGhlIG1haW4gcHVycG9zZSBvZiB0aGUgaW50ZXJtZWRpYXRl
IGNlcnRpZmljYXRpb24gYXV0aG9yaXRpZXM/PC9iPjwvc3VtbWFyeT48YnI+
CgpUbyBmaW5kIG91dCB0aGUgbWFpbiBwdXJwb3NlIG9mIGFuIGludGVybWVk
aWF0ZSBDQSwgeW91IHNob3VsZCBmaXJzdCBsZWFybiBhYm91dCAqKlJvb3Qg
Q0FzKiosICoqSW50ZXJtZWRpYXRlIENBcyoqLCBhbmQgdGhlICoqU1NMIENl
cnRpZmljYXRlIENoYWluIFRydXN0KiouCgoqKlJvb3QgQ0FzKiogYXJlIHBy
aW1hcnkgQ0FzIHdoaWNoIHR5cGljYWxseSBkb27igJl0IGRpcmVjdGx5IHNp
Z24gZW5kIGVudGl0eS9zZXJ2ZXIgY2VydGlmaWNhdGVzLiBUaGV5IGlzc3Vl
IFJvb3QgY2VydGlmaWNhdGVzIHdoaWNoIGFyZSB1c3VhbGx5IHByZS1pbnN0
YWxsZWQgd2l0aGluIGFsbCBicm93c2VycywgbW9iaWxlcywgYW5kIGFwcGxp
Y2F0aW9ucy4gVGhlIHByaXZhdGUga2V5IG9mIHRoZXNlIGNlcnRpZmljYXRl
cyBpcyB1c2VkIHRvIHNpZ24gb3RoZXIgc3Vic2VxdWVudCBjZXJ0aWZpY2F0
ZXMgY2FsbGVkIGludGVybWVkaWF0ZSBjZXJ0aWZpY2F0ZXMuIFJvb3QgQ0Fz
IGFyZSB1c3VhbGx5IGtlcHQgIm9mZmxpbmXigJ0gYW5kIGluIGEgaGlnaGx5
IHNlY3VyZSBlbnZpcm9ubWVudCB3aXRoIHN0cmluZ2VudGx5IGxpbWl0ZWQg
YWNjZXNzLgoKKipJbnRlcm1lZGlhdGVzIENBcyoqIGFyZSBDQXMgdGhhdCBz
dWJvcmRpbmF0ZSB0byB0aGUgUm9vdCBDQSBieSBvbmUgb3IgbW9yZSBsZXZl
bHMsIGJlaW5nIHRydXN0ZWQgYnkgdGhlc2UgdG8gc2lnbiBjZXJ0aWZpY2F0
ZXMgb24gdGhlaXIgYmVoYWxmLiBUaGUgcHVycG9zZSBvZiBjcmVhdGluZyBh
bmQgdXNpbmcgSW50ZXJtZWRpYXRlIENBcyBpcyBwcmltYXJpbHkgZm9yIHNl
Y3VyaXR5IGJlY2F1c2UgaWYgdGhlIGludGVybWVkaWF0ZSBwcml2YXRlIGtl
eSBpcyBjb21wcm9taXNlZCwgdGhlbiB0aGUgUm9vdCBDQSBjYW4gcmV2b2tl
IHRoZSBpbnRlcm1lZGlhdGUgY2VydGlmaWNhdGUgYW5kIGNyZWF0ZSBhIG5l
dyBvbmUgd2l0aCBhIG5ldyBjcnlwdG9ncmFwaGljIGtleSBwYWlyLgoKKipT
U0wgQ2VydGlmaWNhdGUgQ2hhaW4gVHJ1c3QqKiBpcyB0aGUgbGlzdCBvZiBT
U0wgY2VydGlmaWNhdGVzLCBmcm9tIHRoZSByb290IGNlcnRpZmljYXRlIHRv
IHRoZSBlbmQgZW50aXR5L3NlcnZlciBjZXJ0aWZpY2F0ZS4gRm9yIGFuIFNT
TCBDZXJ0aWZpY2F0ZSB0byBiZSB0cnVzdGVkLCBpdCBtdXN0IGJlIGlzc3Vl
ZCBieSBhIHRydXN0ZWQgQ0FzIHdoaWNoIGlzIGluY2x1ZGVkIGluIHRoZSB0
cnVzdGVkIENBIGxpc3Qgb2YgdGhlIGNvbm5lY3RpbmcgZGV2aWNlIChicm93
c2VyLCBtb2JpbGUsIGFuZCBhcHBsaWNhdGlvbikuIFRoZXJlZm9yZSwgdGhl
IGNvbm5lY3RpbmcgZGV2aWNlIHdpbGwgdGVzdCB0aGUgdHJ1c3R3b3J0aGlu
ZXNzIG9mIGVhY2ggU1NMIENlcnRpZmljYXRlIGluIHRoZSBDaGFpbiBUcnVz
dCB1bnRpbCBpdCBtYXRjaGVzIHRoZSBvbmUgaXNzdWVkIGJ5IGEgdHJ1c3Rl
ZCBDQS4KClRoZSAqKlJvb3QtSW50ZXJtZWRpYXRlIENBKiogc3RydWN0dXJl
IGlzIGNyZWF0ZWQgYnkgZWFjaCBtYWpvciBDQSB0byBwcm90ZWN0IGFnYWlu
c3QgdGhlIGRpc2FzdHJvdXMgZWZmZWN0cyBvZiBhIHJvb3Qga2V5IGNvbXBy
b21pc2UuIElmIGEgcm9vdCBrZXkgaXMgY29tcHJvbWlzZWQsIGl0IHdvdWxk
IHJlbmRlciB0aGUgcm9vdCBhbmQgYWxsIHN1Ym9yZGluYXRlZCBjZXJ0aWZp
Y2F0ZXMgdW50cnVzdHdvcnRoeS4gRm9yIHRoaXMgcmVhc29uLCBjcmVhdGlu
ZyBhbiBJbnRlcm1lZGlhdGUgQ0EgaXMgYSBiZXN0IHByYWN0aWNlIHRvIGVu
c3VyZSBhIHJpZ29yb3VzIHByb3RlY3Rpb24gb2YgdGhlIHByaW1hcnkgcm9v
dCBrZXkuCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbSG93IGNlcnRpZmljYXRl
IGNoYWlucyB3b3JrXShodHRwczovL2tub3dsZWRnZS5kaWdpY2VydC5jb20v
c29sdXRpb24vU08xNjI5Ny5odG1sKQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+
CjxzdW1tYXJ5PjxiPkhvdyB0byByZWxvYWQgUG9zdGdyZVNRTCBhZnRlciBj
b25maWd1cmF0aW9uIGNoYW5nZXM/PC9iPjwvc3VtbWFyeT48YnI+CgpTb2x1
dGlvbiAxOgoKYGBgYmFzaApzeXN0ZW1jdGwgcmVsb2FkIHBvc3RncmVzcWwK
YGBgCgpTb2x1dGlvbiAyOgoKYGBgCnN1IC0gcG9zdGdyZXMKL3Vzci9iaW4v
cGdfY3RsIHJlbG9hZApgYGAKClNvbHV0aW9uIDM6CgpgYGAKU0VMRUNUIHBn
X3JlbG9hZF9jb25mKCk7CmBgYAoKPC9kZXRhaWxzPgoKPGRldGFpbHM+Cjxz
dW1tYXJ5PjxiPllvdSBoYXZlIGFkZGVkIHNldmVyYWwgYWxpYXNlcyB0byA8
Y29kZT4ucHJvZmlsZTwvY29kZT4uIEhvdyB0byByZWxvYWQgc2hlbGwgd2l0
aG91dCBleGl0PzwvYj48L3N1bW1hcnk+PGJyPgoKVGhlIGJlc3Qgd2F5IGlz
IGBleGVjICRTSEVMTCAtbGAgYmVjYXVzZSBgZXhlY2AgcmVwbGFjZXMgdGhl
IGN1cnJlbnQgcHJvY2VzcyB3aXRoIGEgbmV3IG9uZS4gQWxzbyBnb29kIChi
dXQgb3RoZXIpIHNvbHV0aW9uIGlzIGAuIH4vLnByb2ZpbGVgLgoKVXNlZnVs
IHJlc291cmNlczoKCi0gW0hvdyB0byByZWxvYWQgLmJhc2hfcHJvZmlsZSBm
cm9tIHRoZSBjb21tYW5kIGxpbmU/XShodHRwczovL3N0YWNrb3ZlcmZsb3cu
Y29tL3F1ZXN0aW9ucy80NjA4MTg3L2hvdy10by1yZWxvYWQtYmFzaC1wcm9m
aWxlLWZyb20tdGhlLWNvbW1hbmQtbGluZSkKCjwvZGV0YWlscz4KCjxkZXRh
aWxzPgo8c3VtbWFyeT48Yj5Ib3cgdG8gZXhpdCB3aXRob3V0IHNhdmluZyBz
aGVsbCBoaXN0b3J5PzwvYj48L3N1bW1hcnk+PGJyPgoKYGBgYmFzaApraWxs
IC05ICQkCmBgYAoKb3IKCmBgYGJhc2gKdW5zZXQgSElTVEZJTEUgJiYgZXhp
dApgYGAKClVzZWZ1bCByZXNvdXJjZXM6CgotIFtIb3cgZG8gSSBjbG9zZSBh
IHRlcm1pbmFsIHdpdGhvdXQgc2F2aW5nIHRoZSBoaXN0b3J5P10oaHR0cHM6
Ly91bml4LnN0YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy8yNTA0OS9ob3ct
ZG8taS1jbG9zZS1hLXRlcm1pbmFsLXdpdGhvdXQtc2F2aW5nLXRoZS1oaXN0
b3J5KQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPldoYXQg
aXMgdGhpcyBVSUQgMCB0b29yIGFjY291bnQ/IEhhdmUgSSBiZWVuIGNvbXBy
b21pc2VkPzwvYj48L3N1bW1hcnk+PGJyPgoKKip0b29yKiogaXMgYW4gYWx0
ZXJuYXRpdmUgc3VwZXJ1c2VyIGFjY291bnQsIHdoZXJlIHRvb3IgaXMgcm9v
dCBzcGVsbGVkIGJhY2t3YXJkcy4gSXQgaXMgaW50ZW5kZWQgdG8gYmUgdXNl
ZCB3aXRoIGEgbm9uLXN0YW5kYXJkIHNoZWxsIHNvIHRoZSBkZWZhdWx0IHNo
ZWxsIGZvciByb290IGRvZXMgbm90IG5lZWQgdG8gY2hhbmdlLgoKVGhpcyBp
cyBpbXBvcnRhbnQgYXMgc2hlbGxzIHdoaWNoIGFyZSBub3QgcGFydCBvZiB0
aGUgYmFzZSBkaXN0cmlidXRpb24sIGJ1dCBhcmUgaW5zdGVhZCBpbnN0YWxs
ZWQgZnJvbSBwb3J0cyBvciBwYWNrYWdlcywgYXJlIGluc3RhbGxlZCBpbiBg
L3Vzci9sb2NhbC9iaW5gIHdoaWNoLCBieSBkZWZhdWx0LCByZXNpZGVzIG9u
IGEgZGlmZmVyZW50IGZpbGUgc3lzdGVtLiBJZiByb290J3Mgc2hlbGwgaXMg
bG9jYXRlZCBpbiBgL3Vzci9sb2NhbC9iaW5gIGFuZCB0aGUgZmlsZSBzeXN0
ZW0gY29udGFpbmluZyBgL3Vzci9sb2NhbC9iaW5gKSBpcyBub3QgbW91bnRl
ZCwgcm9vdCB3aWxsIG5vdCBiZSBhYmxlIHRvIGxvZyBpbiB0byBmaXggYSBw
cm9ibGVtIGFuZCB3aWxsIGhhdmUgdG8gcmVib290IGludG8gc2luZ2xlLXVz
ZXIgbW9kZSBpbiBvcmRlciB0byBlbnRlciB0aGUgcGF0aCB0byBhIHNoZWxs
LgoKU29tZSBwZW9wbGUgdXNlIHRvb3IgZm9yIGRheS10by1kYXkgcm9vdCB0
YXNrcyB3aXRoIGEgbm9uLXN0YW5kYXJkIHNoZWxsLCBsZWF2aW5nIHJvb3Qs
IHdpdGggYSBzdGFuZGFyZCBzaGVsbCwgZm9yIHNpbmdsZS11c2VyIG1vZGUg
b3IgZW1lcmdlbmNpZXMuIEJ5IGRlZmF1bHQsIGEgdXNlciBjYW5ub3QgbG9n
IGluIHVzaW5nIHRvb3IgYXMgaXQgZG9lcyBub3QgaGF2ZSBhIHBhc3N3b3Jk
LCBzbyBsb2cgaW4gYXMgcm9vdCBhbmQgc2V0IGEgcGFzc3dvcmQgZm9yIHRv
b3IgYmVmb3JlIHVzaW5nIGl0IHRvIGxvZ2luLgoKVXNlZnVsIHJlc291cmNl
czoKCi0gW1RoZSByb290IGFjY291bnQgKGFuZCB0b29yKV0oaHR0cHM6Ly9h
ZG1pbmlzdHJhdG9zcGhlcmUud29yZHByZXNzLmNvbS8yMDA3LzEwLzA0L3Ro
ZS1yb290LWFjY291bnQtYW5kLXRvb3IvKQoKPC9kZXRhaWxzPgoKPGRldGFp
bHM+CjxzdW1tYXJ5PjxiPklzIHRoZXJlIGFuIGVhc3kgd2F5IHRvIHNlYXJj
aCBpbnNpZGUgMTAwMHMgb2YgZmlsZXMgaW4gYSBjb21wbGV4IGRpcmVjdG9y
eSBzdHJ1Y3R1cmUgdG8gZmluZCBmaWxlcyB3aGljaCBjb250YWluIGEgc3Bl
Y2lmaWMgc3RyaW5nPzwvYj48L3N1bW1hcnk+PGJyPgoKRm9yIGV4YW1wbGUg
dXNlIGBmZ3JlcGA6CgpgYGBiYXNoCmZncmVwICogLVIgInN0cmluZyIKYGBg
CgpvcjoKCmBgYGJhc2gKZ3JlcCAtaW5zciAicGF0dGVybiIgKgpgYGAKCi0g
YC1pYCBpZ25vcmUgY2FzZSBkaXN0aW5jdGlvbnMgaW4gYm90aCB0aGUgKipQ
QVRURVJOKiogYW5kIHRoZSBpbnB1dCBmaWxlcwotIGAtbmAgIHByZWZpeCBl
YWNoIGxpbmUgb2Ygb3V0cHV0IHdpdGggdGhlIDEtYmFzZWQgbGluZSBudW1i
ZXIgd2l0aGluIGl0cyBpbnB1dCBmaWxlCi0gYC1zYCBzdXBwcmVzcyBlcnJv
ciBtZXNzYWdlcyBhYm91dCBub25leGlzdGVudCBvciB1bnJlYWRhYmxlIGZp
bGVzLgotIGAtcmAgcmVhZCBhbGwgZmlsZXMgdW5kZXIgZWFjaCBkaXJlY3Rv
cnksIHJlY3Vyc2l2ZWx5LgoKVXNlZnVsIHJlc291cmNlczoKCi0gW0hvdyB0
byBncmVwIGEgc3RyaW5nIGluIGEgZGlyZWN0b3J5IGFuZCBhbGwgaXRzIHN1
YmRpcmVjdG9yaWVzIGZpbGVzIGluIExJTlVYP10oaHR0cHM6Ly9zdGFja292
ZXJmbG93LmNvbS9xdWVzdGlvbnMvMTU2MjIzMjgvaG93LXRvLWdyZXAtYS1z
dHJpbmctaW4tYS1kaXJlY3RvcnktYW5kLWFsbC1pdHMtc3ViZGlyZWN0b3Jp
ZXMtZmlsZXMtaW4tbGludXgpCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1
bW1hcnk+PGI+SG93IHRvIGZpbmQgb3V0IHRoZSBkeW5hbWljIGxpYnJhcmll
cyBleGVjdXRhYmxlcyBsb2FkcyB3aGVuIHJ1bj88L2I+PC9zdW1tYXJ5Pjxi
cj4KCllvdSBjYW4gZG8gdGhpcyB3aXRoIGBsZGRgIGNvbW1hbmQ6CgpgYGBi
YXNoCmxkZCAvYmluL2xzCmBgYAoKPC9kZXRhaWxzPgoKPGRldGFpbHM+Cjxz
dW1tYXJ5PjxiPllvdSBoYXZlIHRoZSB0YXNrIG9mIHN5bmMgdGhlIHRlc3Rp
bmcgYW5kIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzLiBXaGF0IHN0ZXBzIHdp
bGwgeW91IHRha2U/PC9iPjwvc3VtbWFyeT48YnI+CgpJdCdzIGVhc3kgdG8g
Z2V0IGRyYWdnZWQgZG93biBpbnRvIGJpa2VzaGVkZGluZyBhYm91dCBjbG9u
aW5nIGVudmlyb25tZW50cyBhbmQgbWlzcyB0aGUgcmVhbCBwb2ludDoKCi0g
b25seSBwcm9kdWN0aW9uIGlzIHByb2R1Y3Rpb24KCmFuZCBldmVyeSB0aW1l
IHlvdSBkZXBsb3kgdGhlcmUgeW91IGFyZSB0ZXN0aW5nIGEgdW5pcXVlIGNv
bWJpbmF0aW9uIG9mIGRlcGxveSBjb2RlICsgc29mdHdhcmUgKyBlbnZpcm9u
bWVudC4KCkV2ZXJ5IG9uY2UgaW4gYSB3aGlsZSBhIGdvb2Qgc29sdXRpb24g
aXMgcmVndWxhciBjbG9uaW5nIG9mIHRoZSBwcm9kdWN0aW9uIHNlcnZlcnMg
dG8gY3JlYXRlIHRlc3Rpbmcgc2VydmVycy4gWW91IGNhbiBjcmVhdGUgaW5z
dGFuY2VzIHdpdGggYW4gZXhhY3QgY29weSBvZiB5b3VyIHByb2R1Y3Rpb24g
ZW52aXJvbm1lbnQgdW5kZXIgYSBkZXYvdGVzdCB3aXRoIHNuYXBzaG90cywg
Zm9yIGV4YW1wbGU6CgotIGdlbmVyYXRlIGEgc25hcHNob3Qgb2YgcHJvZHVj
dGlvbgotIGNvcHkgdGhlIHNuYXBzaG90IHRvIHN0YWdpbmcgKG9yIG90aGVy
KQotIGNyZWF0ZSBhIG5ldyBkaXNrIHVzaW5nIHRoaXMgc25hcHNob3QKClN1
cmUsIHlvdSBjYW4gc3BpbiB1cCBjbG9uZXMgb2YgdmFyaW91cyBzeXN0ZW0g
Y29tcG9uZW50cyBvciBlbnRpcmUgc3lzdGVtcywgYW5kIGNhcHR1cmUgcmVh
bCB0cmFmZmljIHRvIHJlcGxheSBvZmZsaW5lICh0aGUgZ29sZCBzdGFuZGFy
ZCBvZiBzeXN0ZW1zIHRlc3RpbmcpLiBCdXQgbWFueSBzeXN0ZW1zIGFyZSB0
b28gYmlnLCBjb21wbGV4LCBhbmQgY29zdC1wcm9oaWJpdGl2ZSB0byBjbG9u
ZS4KCkJlZm9yZSBlbnZpcm9ubWVudCBzeW5jaHJvbml6YXRpb24gYSBnb29k
IHdheSBpcyBrZWVwaW5nIHRyYWNrIG9mIGV2ZXJ5IGNoYW5nZSB0aGF0IHlv
dSBtYWtlIHRvIHRoZSB0ZXN0aW5nIGVudmlyb25tZW50IGFuZCBwcm92aWRl
IGEgd2F5IGZvciBwcm9wYWdhdGluZyB0aGlzIHRvIHRoZSBwcm9kdWN0aW9u
IGVudmlyb25tZW50LCBzbyB0aGF0IHlvdSBkbyBub3Qgc2tpcCBhbnkgc3Rl
cCBhbmQgZG8gaXQgYXMgc21vb3RobHkgYXMgcG9zc2libGUuCgpBbHNvIHN0
cnVjdHVyZSBjb21wYXJpc29uIHRvb2wgb3IgZGVwbG95IHNjcmlwdHMgdGhh
dCB1cGRhdGUgdGhlIHRlc3RpbmcgZW52aXJvbm1lbnQgZnJvbSBwcm9kdWN0
aW9uIGVudmlyb25tZW50IGlzIGEgZ29vZCBzb2x1dGlvbi4KCioqUHJlc3lu
YyB0YXNrcyoqCgpGaXJzdCBvZiBhbGwgaXMgaW5mb3JtaW5nIGRldmVsb3Bl
cnMgYW5kIGNsaWVudHMgYWJvdXQgbm90IG1ha2luZyBjaGFuZ2VzIG9uIHRo
ZSB0ZXN0IGVudmlyb25tZW50IChpZiBwb3NzaWJsZSwgZGlzYWJsaW5nIHRl
c3QgZG9tYWlucyB0aGF0IHRhcmdldCB0aGlzIGVudmlyb25tZW50IG9yIHNl
dCBzdGF0aWMgcGFnZXMgd2l0aCBpbmZvcm1hdGlvbiBhYm91dCBzeW5jaHJv
bml6YXRpb24pLgoKSXQgaXMgYWxzbyBpbXBvcnRhbnQgdG8gbWFrZSBiYWNr
dXAvc25hcHNob3RzIG9mIGJvdGggZW52aXJvbm1lbnRzLgoKKipEYXRhYmFz
ZSBzZXJ2ZXJzKioKCi0gc3luYy91cGRhdGUgc3lzdGVtIHZlcnNpb24gKGUu
Zy4gcGFja2FnZXMpCi0gY3JlYXRlIGR1bXAgZmlsZSBmcm9tIGRhdGFiYXNl
IG9uIHByb2R1Y3Rpb24gZGIgc2VydmVyCi0gaW1wb3J0IGR1bXAgZmlsZSBv
biB0ZXN0aW5nIGRiIHNlcnZlcgotIGlmIG5lY2Vzc2FyeSwgc3luY3MgbG9n
aW4gcGVybWlzc2lvbnMsIHJvbGVzLCBkYXRhYmFzZSBwZXJtaXNzaW9ucywg
b3BlbiBjb25uZWN0aW9ucyB0byB0aGUgZGF0YWJhc2UgYW5kIG90aGVyCgoq
KldlYi9BcHAgc2VydmVycyoqCgotIHN5bmMvdXBkYXRlIHN5c3RlbSB2ZXJz
aW9uIChlLmcuIHBhY2thZ2VzKQotIGlmIG5lY2Vzc2FyeSwgdXBkYXRlZCBr
ZXJuZWwgcGFyYW1ldGVycywgZmlyZXdhbGwgcnVsZXMgYW5kIG90aGVyCi0g
c3luYy91cGRhdGUgY29uZmlndXJhdGlvbiBmaWxlcyBvZiBhbGwgcnVubmlu
Zy9pbXBvcnRhbnQgc2VydmljZXMKLSBzeW5jL3VwZGF0ZSB1c2VyIGFjY291
bnRzIChlLmcuIHBlcm1pc3Npb25zKSBhbmQgdGhlaXIgaG9tZSBkaXJlY3Rv
cmllcwotIGRlcGxveSBwcm9qZWN0IGZyb20gZ2l0L3N2biByZXBvc2l0b3J5
Ci0gc3luYy91cGRhdGUgaW1wb3J0YW50IGRpcmVjdG9yaWVzIGV4aXN0aW5n
IGluIHByb2plY3QsIGUuZy4gKipzdGF0aWMqKiwgKiphc3NldCoqIGFuZCBv
dGhlcgotIHN5bmMvdXBkYXRlIHBlcm1pc3Npb25zIGZvciBwcm9qZWN0IGRp
cmVjdG9yeQotIHJlbW92ZS91cGRhdGUgYWxsIHdlYmhvb2tzCi0gdXBkYXRl
IGNyb24gam9icwoKKipPdGhlcnMgdGFza3MqKgoKLSB1cGRhdGVkIGNvbmZp
Z3VyYXRpb25zIG9mIGxvYWQgYmFsYW5jZXJzIGZvciB0ZXN0aW5nIGRvbWFp
bnMgYW5kIHNwZWNpZmljIHVybHMKLSB1cGRhdGVkIGNvbmZpZ3VyYXRpb25z
IG9mIHF1ZXVlcywgc2Vzc2lvbiBhbmQgc3RvcmFnZSBpbnN0YW5jZXMKClVz
ZWZ1bCByZXNvdXJjZXM6CgotIFtLZWVwaW5nIHRlc3RpbmcgYW5kIHByb2R1
Y3Rpb24gc2VydmVyIGVudmlyb25tZW50cyBjbGVhbiwgaW4gc3luYywgYW5k
IGNvbnNpc3RlbnRdKGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rp
b25zLzYzOTY2OC9rZWVwaW5nLXRlc3RpbmctYW5kLXByb2R1Y3Rpb24tc2Vy
dmVyLWVudmlyb25tZW50cy1jbGVhbi1pbi1zeW5jLWFuZC1jb25zaXN0ZW4p
Cgo8L2RldGFpbHM+CgojIyMjIyMgTmV0d29yayBRdWVzdGlvbnMgKDI0KQoK
PGRldGFpbHM+CjxzdW1tYXJ5PjxiPkNvbmZpZ3VyZSBhIHZpcnR1YWwgaW50
ZXJmYWNlIG9uIHlvdXIgd29ya3N0YXRpb24uICoqKjwvYj48L3N1bW1hcnk+
PGJyPgoKVG8gYmUgY29tcGxldGVkLgoKPC9kZXRhaWxzPgoKPGRldGFpbHM+
CjxzdW1tYXJ5PjxiPkFjY29yZGluZyB0byBhbiBIVFRQIG1vbml0b3IsIGEg
d2Vic2l0ZSBpcyBkb3duLiBZb3UncmUgYWJsZSB0byB0ZWxuZXQgdG8gdGhl
IHBvcnQsIHNvIGhvdyBkbyB5b3UgcmVzb2x2ZSBpdD88L2I+PC9zdW1tYXJ5
Pjxicj4KCklmIHlvdSBjYW4gdGVsbmV0IHRvIHRoZSBwb3J0LCB0aGlzIG1l
YW5zIHRoYXQgdGhlIHNlcnZpY2UgbGlzdGVuaW5nIG9uIHRoZSBwb3J0IGlz
IHJ1bm5pbmcgYW5kIHlvdSBjYW4gY29ubmVjdCB0byBpdCAoaXQncyBub3Qg
YSBuZXR3b3JraW5nIHByb2JsZW0pLiBJdCBpcyBnb29kIHRvIGNoZWNrIHRo
aXMgd2F5IGZvciB0aGUgSVAgYWRkcmVzcyB0byB3aGljaCB0aGUgZG9tYWlu
IGlzIHJlc29sdmVkIGFuZCB1c2luZyB0aGUgc2FtZSBkb21haW4gdG8gdGVz
dCBjb25uZWN0aW9uLgoKRmlyc3Qgb2YgYWxsIGNoZWNrIGlmIHlvdXIgc2l0
ZSBpcyBvbmxpbmUgZnJvbSBhIG90aGVyIGxvY2F0aW9uLiBJdCB0aGVuIGxl
dHMgeW91IGtub3cgaWYgdGhlIHNpdGUgaXMgZG93biBldmVyeXdoZXJlLCBv
ciBpZiBvbmx5IHlvdXIgbmV0d29yayBpcyB1bmFibGUgdG8gdmlldyBpdC4g
SXQgaXMgYWxzbyBhIGdvb2QgaWRlYSB0byBjaGVjayB3aGF0IHRoZSB3ZWIg
YnJvd3NlciByZXR1cm5zLgoKKipJZiBvbmx5IElQIGNvbm5lY3Rpb24gd29y
a2luZyoqCgotIHlvdSBjYW4gdXNlIHdob2lzIHRvIHNlZSB3aGF0IEROUyBz
ZXJ2ZXJzIHNlcnZlIHVwIHRoZSBob3N0bmFtZSB0byB0aGUgc2l0ZTogYHdo
b2lzIHd3dy5leGFtcGxlLmNvbWAKLSB5b3UgY2FuIHVzZSB0b29scyBsaWtl
IGBkaWdgIG9yIGBob3N0YCB0byB0ZXN0IEROUyB0byBzZWUgaWYgdGhlIGhv
c3QgbmFtZSBpcyByZXNvbHZpbmc6IGBob3N0IHd3dy5leGFtcGxlLm9yZyBk
bnMuZXhhbXBsZS5vcmdgCi0geW91IGNhbiBhbHNvIGNoZWNrIGdsb2JhbCBw
dWJsaWMgZG5zIHNlcnZlcnM6IGBob3N0IHd3dy5leGFtcGxlLmNvbSA5Ljku
OS45YAoKSWYgZG9tYWluIG5vdCByZXNvbHZlZCBpdCdzIHByb2JhYmx5IHBy
b2JsZW0gd2l0aCBETlMgc2VydmVycy4KCioqSWYgZG9tYWluIHJlc29sdmVk
IHByb3Blcmx5KioKCi0gaW52ZXN0aWdhdGUgdGhlIGxvZyBmaWxlcyBhbmQg
cmVzb2x2ZSB0aGUgaXNzdWUgcmVnYXJkaW5nIHRvIHRoZSBsb2dzLCBpdCdz
IHRoZSBiZXN0IHdheSB0byBzaG93IHdoYXQncyB3cm9uZwotIGNoZWNrIHRo
ZSBodHRwIHN0YXR1cyBjb2RlLCB1c3VhbGx5IGl0IHdpbGwgYmUgdGhlIHJl
c3BvbnNlIHdpdGggdGhlIDV4eCwgbWF5YmUgc2VydmVyIGlzIG92ZXJsb2Fk
IGJlY2F1c2UgY2xpZW50cyBtYWtpbmcgbG90J3Mgb2YgY29ubmVjdGlvbiB0
byB0aGUgd2Vic2l0ZSBvciBzcGVjaWZpYyB1cmw/IG1heWJlIHlvdXIgY2Fj
aGluZyBydWxlcyBub3Qgd29ya2luZyBwcm9wZXJseT8KLSBjaGVjayB3ZWIv
cHJveHkgc2VydmVyIGNvbmZpZ3VyYXRpb24gKGUuZy4gYG5naW54IC10IC1j
IDwvcGF0aC90by9uZ2lueC5jb25mPmApLCBtYXliZSBhbm90aGVyIHN5c2Fk
bWluIGhhcyBtYWRlIHNvbWUgY2hhbmdlcyB0byB0aGUgZG9tYWluIGNvbmZp
Z3VyYXRpb24/Ci0gbWF5YmUgc29tZXRoaW5nIG9uIHRoZSBzZXJ2ZXIgaGFz
IGNyYXNoZWQ/IG1heWJlIHJ1biBvdXQgb2Ygc3BhY2Ugb3IgcnVuIG91dCBv
ZiBtZW1vcnk/Ci0gbWF5YmUgaXQncyBhIHByb2dyYW1taW5nIGVycm9yIG9u
IHRoZSB3ZWJzaXRlPwoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5
PjxiPkxvYWQgYmFsYW5jaW5nIGNhbiBkcmFtYXRpY2FsbHkgaW1wYWN0IHNl
cnZlciBwZXJmb3JtYW5jZS4gRGlzY3VzcyBzZXZlcmFsIGxvYWQgYmFsYW5j
aW5nIG1lY2hhbmlzbXMuICoqKjwvYj48L3N1bW1hcnk+PGJyPgoKVG8gYmUg
Y29tcGxldGVkLgoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5Pjxi
Pkxpc3QgZXhhbXBsZXMgb2YgbmV0d29yayB0cm91Ymxlc2hvb3RpbmcgdG9v
bHMgdGhhdCBjYW4gZGVncmFkZSBkdXJpbmcgRE5TIGlzc3Vlcy4gKioqPC9i
Pjwvc3VtbWFyeT48YnI+CgpUbyBiZSBjb21wbGV0ZWQuCgo8L2RldGFpbHM+
Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+RXhwbGFpbiBkaWZmZXJlbmNlIGJl
dHdlZW4gSFRUUCAxLjEgYW5kIEhUVFAgMi4wLjwvYj48L3N1bW1hcnk+PGJy
PgoKPGI+SFRUUC8yPC9iPiBzdXBwb3J0cyBxdWVyaWVzIG11bHRpcGxleGlu
ZywgaGVhZGVycyBjb21wcmVzc2lvbiwgcHJpb3JpdHkgYW5kIG1vcmUgaW50
ZWxsaWdlbnQgcGFja2V0IHN0cmVhbWluZyBtYW5hZ2VtZW50LiBUaGlzIHJl
c3VsdHMgaW4gcmVkdWNlZCBsYXRlbmN5IGFuZCBhY2NlbGVyYXRlcyBjb250
ZW50IGRvd25sb2FkIG9uIG1vZGVybiB3ZWIgcGFnZXMuCgpLZXkgZGlmZmVy
ZW5jZXMgd2l0aCAqKkhUVFAvMS4xKio6CgotIGl0IGlzIGJpbmFyeSwgaW5z
dGVhZCBvZiB0ZXh0dWFsCi0gZnVsbHkgbXVsdGlwbGV4ZWQsIGluc3RlYWQg
b2Ygb3JkZXJlZCBhbmQgYmxvY2tpbmcKLSBjYW4gdGhlcmVmb3JlIHVzZSBv
bmUgY29ubmVjdGlvbiBmb3IgcGFyYWxsZWxpc20KLSB1c2VzIGhlYWRlciBj
b21wcmVzc2lvbiB0byByZWR1Y2Ugb3ZlcmhlYWQKLSBhbGxvd3Mgc2VydmVy
cyB0byAicHVzaCIgcmVzcG9uc2VzIHByb2FjdGl2ZWx5IGludG8gY2xpZW50
IGNhY2hlcwoKVXNlZnVsIHJlc291cmNlczoKCi0gW1doYXQgaXMgSFRUUC8y
IC0gVGhlIFVsdGltYXRlIEd1aWRlXShodHRwczovL2tpbnN0YS5jb20vbGVh
cm4vd2hhdC1pcy1odHRwMi8pCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1
bW1hcnk+PGI+RGV2IHRlYW0gcmVwb3J0cyBhbiBlcnJvcjogPGNvZGU+UE9T
VCBodHRwOi8vd3MuaW50L2FwaS92MS9TdWJtaXQvIHJlc3VsdGVkIGluIGEg
NDEzIFJlcXVlc3QgRW50aXR5IFRvbyBMYXJnZTwvY29kZT4uIFdoYXQncyB3
cm9uZz88L2I+PC9zdW1tYXJ5Pjxicj4KCioqTW9kaWZ5IE5HSU5YIGNvbmZp
Z3VyYXRpb24gZmlsZSBmb3IgZG9tYWluKioKClNldCBjb3JyZWN0IGBjbGll
bnRfbWF4X2JvZHlfc2l6ZWAgdmFyaWFibGUgdmFsdWU6CgpgYGBiYXNoCmNs
aWVudF9tYXhfYm9keV9zaXplIDIwTTsKYGBgCgpSZXN0YXJ0IE5naW54IHRv
IGFwcGx5IHRoZSBjaGFuZ2VzLgoKKipNb2RpZnkgcGhwLmluaSBmaWxlIGZv
ciB1cGxvYWQgbGltaXRzKioKCkl04oCZcyBub3QgbmVlZGVkIG9uIGFsbCBj
b25maWd1cmF0aW9ucywgYnV0IHlvdSBtYXkgYWxzbyBoYXZlIHRvIG1vZGlm
eSB0aGUgUEhQIHVwbG9hZCBzZXR0aW5ncyBhcyB3ZWxsIHRvIGVuc3VyZSB0
aGF0IG5vdGhpbmcgaXMgZ29pbmcgb3V0IG9mIGxpbWl0IGJ5IHBocCBjb25m
aWd1cmF0aW9ucy4KCk5vdyBmaW5kIGZvbGxvd2luZyBkaXJlY3RpdmVzIG9u
ZSBieSBvbmU6CgpgYGBiYXNoCnVwbG9hZF9tYXhfZmlsZXNpemUKcG9zdF9t
YXhfc2l6ZQpgYGAKCmFuZCBpbmNyZWFzZSBpdHMgbGltaXQgdG8gMjBNLCBi
eSBkZWZhdWx0IHRoZXkgYXJlIDhNIGFuZCAyTToKCmBgYGJhc2gKdXBsb2Fk
X21heF9maWxlc2l6ZSA9IDIwTQpwb3N0X21heF9zaXplID0gMjBNCmBgYAoK
RmluYWxseSBzYXZlIGl0IGFuZCByZXN0YXJ0IFBIUC4KClVzZWZ1bCByZXNv
dXJjZXM6CgotIFs0MTMgUmVxdWVzdCBFbnRpdHkgVG9vIExhcmdlIGluIE5n
aW54IHdpdGggY2xpZW50X21heF9ib2R5X3NpemUgc2V0XShodHRwczovL3Nl
cnZlcmZhdWx0LmNvbS9xdWVzdGlvbnMvODE0NzY3LzQxMy1yZXF1ZXN0LWVu
dGl0eS10b28tbGFyZ2UtaW4tbmdpbngtd2l0aC1jbGllbnQtbWF4LWJvZHkt
c2l6ZS1zZXQpCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+
V2hhdCBpcyBoYW5kc2hha2UgbWVjaGFuaXNtIGFuZCB3aHkgZG8gd2UgbmVl
ZCAzIHdheSBoYW5kc2hha2U/PC9iPjwvc3VtbWFyeT48YnI+CgoqKkhhbmRz
aGFraW5nKiogYmVnaW5zIHdoZW4gb25lIGRldmljZSBzZW5kcyBhIG1lc3Nh
Z2UgdG8gYW5vdGhlciBkZXZpY2UgaW5kaWNhdGluZyB0aGF0IGl0IHdhbnRz
IHRvIGVzdGFibGlzaCBhIGNvbW11bmljYXRpb25zIGNoYW5uZWwuIFRoZSB0
d28gZGV2aWNlcyB0aGVuIHNlbmQgc2V2ZXJhbCBtZXNzYWdlcyBiYWNrIGFu
ZCBmb3J0aCB0aGF0IGVuYWJsZSB0aGVtIHRvIGFncmVlIG9uIGEgY29tbXVu
aWNhdGlvbnMgcHJvdG9jb2wuCgpBICoqdGhyZWUtd2F5IGhhbmRzaGFrZSoq
IGlzIGEgbWV0aG9kIHVzZWQgaW4gYSBUQ1AvSVAgbmV0d29yayB0byBjcmVh
dGUgYSBjb25uZWN0aW9uIGJldHdlZW4gYSBsb2NhbCBob3N0L2NsaWVudCBh
bmQgc2VydmVyLiBJdCBpcyBhIHRocmVlLXN0ZXAgbWV0aG9kIHRoYXQgcmVx
dWlyZXMgYm90aCB0aGUgY2xpZW50IGFuZCBzZXJ2ZXIgdG8gZXhjaGFuZ2Ug
YFNZTmAgYW5kIGBBQ0tgIChgU1lOYCwgYFNZTi1BQ0tgLCBgQUNLYCkgcGFj
a2V0cyBiZWZvcmUgYWN0dWFsIGRhdGEgY29tbXVuaWNhdGlvbiBiZWdpbnMu
CgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbV2h5IGRvIHdlIG5lZWQgYSAzLXdh
eSBoYW5kc2hha2U/IFdoeSBub3QganVzdCAyLXdheT9dKGh0dHBzOi8vbmV0
d29ya2VuZ2luZWVyaW5nLnN0YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy8y
NDA2OC93aHktZG8td2UtbmVlZC1hLTMtd2F5LWhhbmRzaGFrZS13aHktbm90
LWp1c3QtMi13YXkpCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+
PGI+V2h5IGlzIFVEUCBmYXN0ZXIgdGhhbiBUQ1A/PC9iPjwvc3VtbWFyeT48
YnI+CgoqKlVEUCoqIGlzIGZhc3RlciB0aGFuICoqVENQKiosIGFuZCB0aGUg
c2ltcGxlIHJlYXNvbiBpcyBiZWNhdXNlIGl0cyBub25leGlzdGVudCBhY2tu
b3dsZWRnZSBwYWNrZXQgKGBBQ0tgKSB0aGF0IHBlcm1pdHMgYSBjb250aW51
b3VzIHBhY2tldCBzdHJlYW0sIGluc3RlYWQgb2YgVENQIHRoYXQgYWNrbm93
bGVkZ2VzIGEgc2V0IG9mIHBhY2tldHMsIGNhbGN1bGF0ZWQgYnkgdXNpbmcg
dGhlIFRDUCB3aW5kb3cgc2l6ZSBhbmQgcm91bmQtdHJpcCB0aW1lIChgUlRU
YCkuCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbVURQIHZzIFRDUCwgaG93IG11
Y2ggZmFzdGVyIGlzIGl0P10oaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9x
dWVzdGlvbnMvNDc5MDMvdWRwLXZzLXRjcC1ob3ctbXVjaC1mYXN0ZXItaXMt
aXQpCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+V2hpY2gs
IGluIHlvdXIgb3BpbmlvbiwgYXJlIHRoZSA1IG1vc3QgaW1wb3J0YW50IE9w
ZW5TU0ggcGFyYW1ldGVycyB0aGF0IGltcHJvdmUgdGhlIHNlY3VyaXR5PyAq
Kio8L2I+PC9zdW1tYXJ5Pjxicj4KClRvIGJlIGNvbXBsZXRlZC4KClVzZWZ1
bCByZXNvdXJjZXM6CgotIFtPcGVuU1NIIHNlY3VyaXR5IGFuZCBoYXJkZW5p
bmddKGh0dHBzOi8vbGludXgtYXVkaXQuY29tL2F1ZGl0LWFuZC1oYXJkZW4t
eW91ci1zc2gtY29uZmlndXJhdGlvbi8pCgo8L2RldGFpbHM+Cgo8ZGV0YWls
cz4KPHN1bW1hcnk+PGI+V2hhdCBpcyBOQVQ/IFdoYXQgaXMgaXQgdXNlZCBm
b3I/PC9iPjwvc3VtbWFyeT48YnI+CgpJdCBlbmFibGVzIHByaXZhdGUgSVAg
bmV0d29ya3MgdGhhdCB1c2UgdW5yZWdpc3RlcmVkIElQIGFkZHJlc3NlcyB0
byBjb25uZWN0IHRvIHRoZSBJbnRlcm5ldC4gKipOQVQqKiBvcGVyYXRlcyBv
biBhIHJvdXRlciwgdXN1YWxseSBjb25uZWN0aW5nIHR3byBuZXR3b3JrcyB0
b2dldGhlciwgYW5kIHRyYW5zbGF0ZXMgdGhlIHByaXZhdGUgKG5vdCBnbG9i
YWxseSB1bmlxdWUpIGFkZHJlc3NlcyBpbiB0aGUgaW50ZXJuYWwgbmV0d29y
ayBpbnRvIGxlZ2FsIGFkZHJlc3NlcywgYmVmb3JlIHBhY2tldHMgYXJlIGZv
cndhcmRlZCB0byBhbm90aGVyIG5ldHdvcmsuCgpXb3Jrc3RhdGlvbnMgb3Ig
b3RoZXIgY29tcHV0ZXJzIHJlcXVpcmluZyBzcGVjaWFsIGFjY2VzcyBvdXRz
aWRlIHRoZSBuZXR3b3JrIGNhbiBiZSBhc3NpZ25lZCBzcGVjaWZpYyBleHRl
cm5hbCBJUHMgdXNpbmcgKipOQVQqKiwgYWxsb3dpbmcgdGhlbSB0byBjb21t
dW5pY2F0ZSB3aXRoIGNvbXB1dGVycyBhbmQgYXBwbGljYXRpb25zIHRoYXQg
cmVxdWlyZSBhIHVuaXF1ZSBwdWJsaWMgSVAgYWRkcmVzcy4gKipOQVQqKiBp
cyBhbHNvIGEgdmVyeSBpbXBvcnRhbnQgYXNwZWN0IG9mIGZpcmV3YWxsIHNl
Y3VyaXR5LgoKVXNlZnVsIHJlc291cmNlczoKCi0gW05ldHdvcmsgQWRkcmVz
cyBUcmFuc2xhdGlvbiAoTkFUKSBDb25jZXB0c10oaHR0cDovL3d3dy5maXJl
d2FsbC5jeC9uZXR3b3JraW5nLXRvcGljcy9uZXR3b3JrLWFkZHJlc3MtdHJh
bnNsYXRpb24tbmF0LzIyNy1uYXQtY29uY2VwdHMuaHRtbCkKCjwvZGV0YWls
cz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5XaGF0IGlzIHRoZSBwdXJwb3Nl
IG9mIFNwYW5uaW5nIFRyZWU/PC9iPjwvc3VtbWFyeT48YnI+CgpUaGlzIHBy
b3RvY29sIG9wZXJhdGVzIGF0IGxheWVyIDIgb2YgdGhlIE9TSSBtb2RlbCB3
aXRoIHRoZSBwdXJwb3NlIG9mIHByZXZlbnRpbmcgbG9vcHMgb24gdGhlIG5l
dHdvcmsuIFdpdGhvdXQgKipTVFAqKiwgYSByZWR1bmRhbnQgc3dpdGNoIGRl
cGxveW1lbnQgd291bGQgY3JlYXRlIGJyb2FkY2FzdCBzdG9ybXMgdGhhdCBj
cmlwcGxlIGV2ZW4gdGhlIG1vc3Qgcm9idXN0IG5ldHdvcmtzLiBUaGVyZSBh
cmUgc2V2ZXJhbCBpdGVyYXRpb25zIGJhc2VkIG9uIHRoZSBvcmlnaW5hbCBJ
RUVFIDgwMi4xRCBzdGFuZGFyZDsgZWFjaCBvcGVyYXRlcyBzbGlnaHRseSBk
aWZmZXJlbnQgdGhhbiB0aGUgb3RoZXJzIHdoaWxlIGxhcmdlbHkgYWNjb21w
bGlzaGluZyB0aGUgc2FtZSBsb29wLWZyZWUgZ29hbC4KCjwvZGV0YWlscz4K
CjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5Ib3cgdG8gY2hlY2sgd2hpY2ggcG9y
dHMgYXJlIGxpc3RlbmluZyBvbiBteSBMaW51eCBTZXJ2ZXI/PC9iPjwvc3Vt
bWFyeT48YnI+CgpVc2UgdGhlOgoKLSBgbHNvZiAtaWAKLSBgc3MgLWxgCi0g
YG5ldHN0YXQgLWF0bmAgLSBmb3IgdGNwCi0gYG5ldHN0YXQgLWF1bmAgLSBm
b3IgdWRwCi0gYG5ldHN0YXQgLXR1bGFwbmAKCjwvZGV0YWlscz4KCjxkZXRh
aWxzPgo8c3VtbWFyeT48Yj5XaGF0IG1lYW4gPGNvZGU+SG9zdCBrZXkgdmVy
aWZpY2F0aW9uIGZhaWxlZDwvY29kZT4gd2hlbiB5b3UgY29ubmVjdCB0byB0
aGUgcmVtb3RlIGhvc3Q/IERvIHlvdSBhY2NlcHQgaXQgYXV0b21hdGljYWxs
eT88L2I+PC9zdW1tYXJ5Pjxicj4KCmBIb3N0IGtleSB2ZXJpZmljYXRpb24g
ZmFpbGVkYCBtZWFucyB0aGF0IHRoZSBob3N0IGtleSBvZiB0aGUgcmVtb3Rl
IGhvc3Qgd2FzIGNoYW5nZWQuIFRoaXMgY2FuIGVhc2lseSBoYXBwZW4gd2hl
biBjb25uZWN0aW5nIHRvIGEgY29tcHV0ZXIgd2hvJ3MgaG9zdCBrZXlzIGlu
IGAvZXRjL3NzaGAgaGF2ZSBjaGFuZ2VkIGlmIHRoYXQgY29tcHV0ZXIgd2Fz
IHVwZ3JhZGVkIHdpdGhvdXQgY29weWluZyBpdHMgb2xkIGhvc3Qga2V5cy4g
VGhlIGhvc3Qga2V5cyBoZXJlIGFyZSBwcm9vZiB3aGVuIHlvdSByZWNvbm5l
Y3QgdG8gYSByZW1vdGUgY29tcHV0ZXIgd2l0aCBzc2ggdGhhdCB5b3UgYXJl
IHRhbGtpbmcgdG8gdGhlIHNhbWUgY29tcHV0ZXIgeW91IGNvbm5lY3RlZCB0
byB0aGUgZmlyc3QgdGltZSB5b3UgYWNjZXNzZWQgaXQuCgpXaGVuZXZlciB5
b3UgY29ubmVjdCB0byBhIHNlcnZlciB2aWEgU1NILCB0aGF0IHNlcnZlcidz
IHB1YmxpYyBrZXkgaXMgc3RvcmVkIGluIHlvdXIgaG9tZSBkaXJlY3Rvcnkg
KG9yIHBvc3NpYmx5IGluIHlvdXIgbG9jYWwgYWNjb3VudCBzZXR0aW5ncyBp
ZiB1c2luZyBhIE1hYyBvciBXaW5kb3dzIGRlc2t0b3ApIGZpbGUgY2FsbGVk
ICoqa25vd25faG9zdHMqKi4gV2hlbiB5b3UgcmVjb25uZWN0IHRvIHRoZSBz
YW1lIHNlcnZlciwgdGhlIFNTSCBjb25uZWN0aW9uIHdpbGwgdmVyaWZ5IHRo
ZSBjdXJyZW50IHB1YmxpYyBrZXkgbWF0Y2hlcyB0aGUgb25lIHlvdSBoYXZl
IHNhdmVkIGluIHlvdXIgKiprbm93bl9ob3N0cyoqIGZpbGUuIElmIHRoZSBz
ZXJ2ZXIncyBrZXkgaGFzIGNoYW5nZWQgc2luY2UgdGhlIGxhc3QgdGltZSB5
b3UgY29ubmVjdGVkIHRvIGl0LCB5b3Ugd2lsbCByZWNlaXZlIHRoZSBhYm92
ZSBlcnJvci4KCkRvbid0IGRlbGV0ZSB0aGUgZW50aXJlICoqa25vd25faG9z
dHMqKiBmaWxlIGFzIHJlY29tbWVuZGVkIGJ5IHNvbWUgcGVvcGxlLCB0aGlz
IHRvdGFsbHkgdm9pZHMgdGhlIHBvaW50IG9mIHRoZSB3YXJuaW5nLiBJdCdz
IGEgc2VjdXJpdHkgZmVhdHVyZSB0byB3YXJuIHlvdSB0aGF0IGEgbWFuIGlu
IHRoZSBtaWRkbGUgYXR0YWNrIG1heSBoYXZlIGhhcHBlbmVkLgoKQmVmb3Jl
IGFjY2VwdGluZyB0aGUgbmV3IGhvc3Qga2V5LCBjb250YWN0IHlvdXIvb3Ro
ZXIgc3lzdGVtIGFkbWluaXN0cmF0b3IgZm9yIHZlcmlmaWNhdGlvbi4KClVz
ZWZ1bCByZXNvdXJjZXM6CgotIFtHaXQgZXJyb3I6ICJIb3N0IEtleSBWZXJp
ZmljYXRpb24gRmFpbGVkIiB3aGVuIGNvbm5lY3RpbmcgdG8gcmVtb3RlIHJl
cG9zaXRvcnldKGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25z
LzEzMzYzNTUzL2dpdC1lcnJvci1ob3N0LWtleS12ZXJpZmljYXRpb24tZmFp
bGVkLXdoZW4tY29ubmVjdGluZy10by1yZW1vdGUtcmVwb3NpdG9yeSkKCjwv
ZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5Ib3cgdG8gc2VuZCBh
biBIVFRQIHJlcXVlc3QgdXNpbmcgPGNvZGU+dGVsbmV0PC9jb2RlPj88L2I+
PC9zdW1tYXJ5Pjxicj4KCkZvciBleGFtcGxlOgoKYGBgYmFzaAp0ZWxuZXQg
ZXhhbXBsZS5jb20gODAKVHJ5aW5nIDE5Mi4xNjguMjUyLjEwLi4uCkNvbm5l
Y3RlZCB0byBleGFtcGxlLmNvbS4KRXNjYXBlIGNoYXJhY3RlciBpcyAnXl0n
LgpHRVQgL3F1ZXN0aW9ucyBIVFRQLzEuMApIb3N0OiBleGFtcGxlLmNvbQoK
SFRUUC8xLjEgMjAwIE9LCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFy
c2V0PXV0Zi04Ci4uLgpgYGAKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3Vt
bWFyeT48Yj5Ib3cgZG8geW91IGtpbGwgcHJvZ3JhbSB1c2luZyBlLmcuIDgw
IHBvcnQgaW4gTGludXg/PC9iPjwvc3VtbWFyeT48YnI+CgpUbyBsaXN0IGFu
eSBwcm9jZXNzIGxpc3RlbmluZyB0byB0aGUgcG9ydCA4MDoKCmBgYGJhc2gK
IyB3aXRoIGxzb2YKbHNvZiAtaTo4MAoKIyB3aXRoIGZ1c2VyCmZ1c2VyIDgw
L3RjcApgYGAKClRvIGtpbGwgYW55IHByb2Nlc3MgbGlzdGVuaW5nIHRvIHRo
ZSBwb3J0IDgwOgoKYGBgYmFzaApraWxsICQobHNvZiAtdCAtaTo4MCkKYGBg
CgpvciBtb3JlIHZpb2xlbnRseToKCmBgYGJhc2gKa2lsbCAtOSAkKGxzb2Yg
LXQgLWk6ODApCmBgYAoKb3Igd2l0aCBgZnVzZXJgIGNvbW1hbmQ6CgpgYGBi
YXNoCmZ1c2VyIC1rIDgwL3RjcApgYGAKClVzZWZ1bCByZXNvdXJjZXM6Cgot
IFtIb3cgdG8ga2lsbCBhIHByb2Nlc3MgcnVubmluZyBvbiBwYXJ0aWN1bGFy
IHBvcnQgaW4gTGludXg/XShodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1
ZXN0aW9ucy8xMTU4MzU2Mi9ob3ctdG8ta2lsbC1hLXByb2Nlc3MtcnVubmlu
Zy1vbi1wYXJ0aWN1bGFyLXBvcnQtaW4tbGludXgvMzI1OTI5NjUpCi0gW0Zp
bmRpbmcgdGhlIFBJRCBvZiB0aGUgcHJvY2VzcyB1c2luZyBhIHNwZWNpZmlj
IHBvcnQ/XShodHRwczovL3VuaXguc3RhY2tleGNoYW5nZS5jb20vcXVlc3Rp
b25zLzEwNjU2MS9maW5kaW5nLXRoZS1waWQtb2YtdGhlLXByb2Nlc3MtdXNp
bmctYS1zcGVjaWZpYy1wb3J0KQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+Cjxz
dW1tYXJ5PjxiPllvdSBnZXQgPGNvZGU+Y3VybDogKDU2KSBUQ1AgY29ubmVj
dGlvbiByZXNldCBieSBwZWVyPC9jb2RlPi4gV2hhdCBzdGVwcyB3aWxsIHlv
dSB0YWtlIHRvIHNvbHZlIHRoaXMgcHJvYmxlbT88L2I+PC9zdW1tYXJ5Pjxi
cj4KCi0gY2hlY2sgaWYgdGhlIFVSTCBpcyBjb3JyZWN0LCBtYXliZSB5b3Ug
c2hvdWxkIGFkZCBgd3d3YCBvciBzZXQgY29ycmVjdGx5IGBIb3N0OmAgaGVh
ZGVyPyBDaGVjayBhbHNvIHNjaGVtZSAoaHR0cCBvciBodHRwcykKLSBjaGVj
ayB0aGUgZG9tYWluIGlzIHJlc29sdmluZyBpbnRvIGEgY29ycmVjdCBJUCBh
ZGRyZXNzCi0gZW5hYmxlIGRlYnVnIHRyYWNpbmcgd2l0aCBgLS10cmFjZS1h
c2NpaSBjdXJsLmR1bXBgLiBgUmVjdiBmYWlsdXJlYCBpcyBhIHJlYWxseSBn
ZW5lcmljIGVycm9yIHNvIGl0cyBoYXJkIGZvciBtb3JlIGluZm8KLSB1c2Ug
ZXh0ZXJuYWwgcHJveHkgd2l0aCBgLS1wcm94eWAgZm9yIGRlYnVnIGNvbm5l
Y3Rpb24gZnJvbSBleHRlcm5hbCBpcAotIHVzZSBuZXR3b3JrIHNuaWZmZXIg
KGUuZy4gYHRjcGR1bXBgKSBmb3IgZGVidWcgY29ubmVjdGlvbiBpbiB0aGUg
bG93ZXIgVENQL0lQIGxheWVycwotIGNoZWNrIGZpcmV3YWxsIHJ1bGVzIG9u
IHRoZSBwcm9kdWN0aW9uIGVudmlyb25tZW50IGFuZCBvbiB0aGUgZXhpdCBw
b2ludCBvZiB5b3VyIG5ldHdvcmssIGFsc28gY2hlY2sgeW91ciBOQVQgcnVs
ZXMKLSBjaGVjayBNVFUgc2l6ZSBvZiBwYWNrZXRzIHRyYXZlbGluZyBvdmVy
IHlvdXIgbmV0d29yawotIGNoZWNrIFNTTCB2ZXJzaW9uIHdpdGggc3NsL3Rs
cyBgY3VybGAgcGFyYW1zIGlmIHlvdSBjb25uZWN0aW5nIHRvIGh0dHBzIHBy
b3RvY29sCi0gaXQgbWF5IGJlIGEgcHJvYmxlbSBvbiB0aGUgY2xpZW50IHNp
ZGUgZS5nLiB0aGUgbmV0ZmlsdGVyIGRyb3Agb3IgbGltaXQgIGNvbm5lY3Rp
b25zIGZyb20geW91ciBJUCBhZGRyZXNzIHRvIHRoZSBkb21haW4KClVzZWZ1
bCByZXNvdXJjZXM6CgotIFtDVVJMIEVSUk9SOiBSZWN2IGZhaWx1cmU6IENv
bm5lY3Rpb24gcmVzZXQgYnkgcGVlciAtIFBIUCBDdXJsXShodHRwczovL3N0
YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xMDI4NTcwMC9jdXJsLWVycm9y
LXJlY3YtZmFpbHVyZS1jb25uZWN0aW9uLXJlc2V0LWJ5LXBlZXItcGhwLWN1
cmwpCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+SG93IHRv
IGFsbG93IHRyYWZmaWMgdG8vZnJvbSBzcGVjaWZpYyBJUCB3aXRoIGlwdGFi
bGVzPzwvYj48L3N1bW1hcnk+PGJyPgoKRm9yIGV4YW1wbGU6CgpgYGBiYXNo
Ci9zYmluL2lwdGFibGVzIC1BIElOUFVUIC1wIHRjcCAtcyBYWFguWFhYLlhY
WC5YWFggLWogQUNDRVBUCi9zYmluL2lwdGFibGVzIC1BIE9VVFBVVCAtcCB0
Y3AgLWQgIFhYWC5YWFguWFhYLlhYWCAtaiBBQ0NFUFQKYGBgCgo8L2RldGFp
bHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+SG93IHRvIGJsb2NrIGFidXNp
dmUgSVAgYWRkcmVzc2VzIHdpdGggPGNvZGU+cGY8L2NvZGU+IGluIE9wZW5C
U0Q/PC9iPjwvc3VtbWFyeT48YnI+CgpUaGUgYmVzdCB3YXkgdG8gZG8gdGhp
cyBpcyB0byBkZWZpbmUgYSB0YWJsZSBhbmQgY3JlYXRlIGEgcnVsZSB0byBi
bG9jayB0aGUgaG9zdHMsIGluIGBwZi5jb25mYDoKCmBgYGJhc2gKdGFibGUg
PGJhZGhvc3RzPiBwZXJzaXN0CmJsb2NrIG9uIGZ4cDAgZnJvbSA8YmFkaG9z
dHM+IHRvIGFueQpgYGAKCkFuZCB0aGVuIGR5bmFtaWNhbGx5IGFkZC9kZWxl
dGUgSVAgYWRkcmVzc2VzIGZyb20gaXQ6CgpgYGBiYXNoCnBmY3RsIC10IGJh
ZGhvc3RzIC1UIGFkZCAxLjIuMy40CnBmY3RsIC10IGJhZGhvc3RzIC1UIGRl
bGV0ZSAxLjIuMy40CmBgYAoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1t
YXJ5PjxiPldoZW4gZG9lcyB0aGUgd2ViIHNlcnZlciBsaWtlIEFwYWNoZSBv
ciBOZ2lueCB3cml0ZSBpbmZvIHRvIGxvZyBmaWxlPyBCZWZvcmUgb3IgYWZ0
ZXIgc2VydmluZyB0aGUgcmVxdWVzdD88L2I+PC9zdW1tYXJ5Pjxicj4KCkJv
dGggc2VydmVycyBwcm92aWRlcyB2ZXJ5IGNvbXByZWhlbnNpdmUgYW5kIGZs
ZXhpYmxlIGxvZ2dpbmcgY2FwYWJpbGl0aWVzIC0gZm9yIGxvZ2dpbmcgZXZl
cnl0aGluZyB0aGF0IGhhcHBlbnMgb24geW91ciBzZXJ2ZXIsIGZyb20gdGhl
IGluaXRpYWwgcmVxdWVzdCwgdGhyb3VnaCB0aGUgVVJMIG1hcHBpbmcgcHJv
Y2VzcywgdG8gdGhlIGZpbmFsIHJlc29sdXRpb24gb2YgdGhlIGNvbm5lY3Rp
b24sIGluY2x1ZGluZyBhbnkgZXJyb3JzIHRoYXQgbWF5IGhhdmUgb2NjdXJy
ZWQgaW4gdGhlIHByb2Nlc3MuCgoqKkFwYWNoZSoqCgpUaGUgQXBhY2hlIHNl
cnZlciBhY2Nlc3MgbG9nIHJlY29yZHMgYWxsIHJlcXVlc3RzIHByb2Nlc3Nl
ZCBieSB0aGUgc2VydmVyIChhZnRlciB0aGUgcmVxdWVzdCBoYXMgYmVlbiBj
b21wbGV0ZWQpLgoKKipOZ2lueCoqCgpOR0lOWCB3cml0ZXMgaW5mb3JtYXRp
b24gYWJvdXQgY2xpZW50IHJlcXVlc3RzIGluIHRoZSBhY2Nlc3MgbG9nIHJp
Z2h0IGFmdGVyIHRoZSByZXF1ZXN0IGlzIHByb2Nlc3NlZC4KClVzZWZ1bCBy
ZXNvdXJjZXM6CgotIFtXaGVuIGRvZXMgQXBhY2hlIGxvZyB0byBhY2Nlc3Mu
bG9nIC0gYmVmb3JlIG9yIGFmdGVyIHNlcnZpbmcgdGhlIHJlcXVlc3Q/XSho
dHRwczovL3dlYm1hc3RlcnMuc3RhY2tleGNoYW5nZS5jb20vcXVlc3Rpb25z
LzY1NTY2L3doZW4tZG9lcy1hcGFjaGUtbG9nLXRvLWFjY2Vzcy1sb2ctYmVm
b3JlLW9yLWFmdGVyLXNlcnZpbmctdGhlLXJlcXVlc3QpCi0gW25naW54IGxv
ZyByZXF1ZXN0IGJlZm9yZSBwcm9jZXNzaW5nXShodHRwczovL3NlcnZlcmZh
dWx0LmNvbS9xdWVzdGlvbnMvNjkzMDQ5L25naW54LWxvZy1yZXF1ZXN0LWJl
Zm9yZS1wcm9jZXNzaW5nKQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1t
YXJ5PjxiPkFuYWx5c2Ugd2ViIHNlcnZlciBsb2cgYW5kIHNob3cgb25seSA8
Y29kZT41eHg8L2NvZGU+IGh0dHAgY29kZXMuIFdoYXQgZXh0ZXJuYWwgdG9v
bHMgZG8geW91IHVzZT88L2I+PC9zdW1tYXJ5Pjxicj4KCmBgYGJhc2gKdGFp
bCAtbiAxMDAgLWYgL3BhdGgvdG8vbG9nZmlsZSB8IGdyZXAgIkhUVFAvWzEt
Ml0uWzAtMV1cIiBbNV0iCmBgYAoKRXhhbXBsZXMgb2YgaHR0cC9odHRwcyBs
b2cgbWFuYWdlbWVudCB0b29sczoKCi0gKipnb2FjY2VzcyoqIC0gaXMgYW4g
b3BlbiBzb3VyY2UgcmVhbC10aW1lIHdlYiBsb2cgYW5hbHl6ZXIgYW5kIGlu
dGVyYWN0aXZlIHZpZXdlciB0aGF0IHJ1bnMgaW4gYSB0ZXJtaW5hbCBpbiAq
bml4IHN5c3RlbXMgb3IgdGhyb3VnaCB5b3VyIGJyb3dzZXIKLSAqKmdyYXls
b2cqKiAtIGlzIGEgZnJlZSBhbmQgb3Blbi1zb3VyY2UgbG9nIG1hbmFnZW1l
bnQgcGxhdGZvcm0gdGhhdCBzdXBwb3J0cyBpbi1kZXB0aCBsb2cgY29sbGVj
dGlvbiBhbmQgYW5hbHlzaXMKClVzZWZ1bCByZXNvdXJjZXM6CgotIFtCZXN0
IExvZyBNYW5hZ2VtZW50IFRvb2xzOiA1MSBVc2VmdWwgVG9vbHMgZm9yIExv
ZyBNYW5hZ2VtZW50LCBNb25pdG9yaW5nLCBBbmFseXRpY3MsIGFuZCBNb3Jl
XShodHRwczovL3N0YWNraWZ5LmNvbS9iZXN0LWxvZy1tYW5hZ2VtZW50LXRv
b2xzLykKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5EZXZl
bG9wZXIgdXNlcyBwcml2YXRlIGtleSBvbiB0aGUgc2VydmVyIHRvIGRlcGxv
eSBhcHAgdGhyb3VnaCBzc2guIFdoeSBpdCBpcyBpbmNvcnJlY3QgYmVoYXZp
b3IgYW5kIHdoYXQgaXMgdGhlIGJldHRlciAoYnV0IG5vdCBpZGVhbCkgc29s
dXRpb24gaW4gc3VjaCBzaXR1YXRpb25zPzwvYj48L3N1bW1hcnk+PGJyPgoK
WW91IGhhdmUgdGhlIHByaXZhdGUga2V5IGZvciB5b3VyIHBlcnNvbmFsIGFj
Y291bnQuIFRoZSBzZXJ2ZXIgbmVlZHMgeW91ciBwdWJsaWMga2V5IHNvIHRo
YXQgaXQgY2FuIHZlcmlmeSB0aGF0IHlvdXIgcHJpdmF0ZSBrZXkgZm9yIHRo
ZSBhY2NvdW50IHlvdSBhcmUgdHJ5aW5nIHRvIHVzZSBpcyBhdXRob3JpemVk
LgoKVGhlIHdob2xlIHBvaW50IHdpdGggcHJpdmF0ZSBrZXlzIGlzIHRoYXQg
dGhleSBhcmUgcHJpdmF0ZSwgbWVhbmluZyBvbmx5IHlvdSBoYXZlIHlvdXIg
cHJpdmF0ZSBrZXkuIElmIHNvbWVvbmUgdGFrZXMgb3ZlciB5b3VyIHByaXZh
dGUga2V5LCBpdCB3aWxsIGJlIGFibGUgdG8gaW1wZXJzb25hdGUgeW91IGFu
eSB0aW1lIGhlIHdhbnRzLgoKQSBiZXR0ZXIgc29sdXRpb25zIGlzIHRoZSB1
c2Ugb2Ygc3NoIGtleSBmb3J3YXJkaW5nLiBBbiBlc3NlbmNlLCB5b3UgbmVl
ZCB0byBjcmVhdGUgYSBgfi8uc3NoL2NvbmZpZ2AgZmlsZSwgaWYgaXQgZG9l
c24ndCBleGlzdC4gVGhlbiwgYWRkIHRoZSBob3N0cyAoZWl0aGVyIGRvbWFp
biBuYW1lIG9yIElQIGFkZHJlc3MgaW4gdGhlIGZpbGUgYW5kIHNldCBgRm9y
d2FyZEFnZW50IHllc2ApLiBFeGFtcGxlOgoKYGBgYmFzaApIb3N0IGdpdC5l
eGFtcGxlLmNvbQogICAgVXNlciBqb2huCiAgICBQcmVmZXJyZWRBdXRoZW50
aWNhdGlvbnMgcHVibGlja2V5CiAgICBJZGVudGl0eUZpbGUgfi8uc3NoL2lk
X3JzYS5naXQuZXhhbXBsZS5jb20KICAgIEZvcndhcmRBZ2VudCB5ZXMKYGBg
CgpZb3VyIHJlbW90ZSBzZXJ2ZXIgbXVzdCBhbGxvdyBTU0ggYWdlbnQgZm9y
d2FyZGluZyBvbiBpbmJvdW5kIGNvbm5lY3Rpb25zIGFuZCB5b3VyIGxvY2Fs
IGBzc2gtYWdlbnRgIG11c3QgYmUgcnVubmluZy4KCkZvcndhcmRpbmcgYW4g
c3NoIGFnZW50IGNhcnJpZXMgaXRzIG93biBzZWN1cml0eSByaXNrLiBJZiBz
b21lb25lIG9uIHRoZSByZW1vdGUgbWFjaGluZSBjYW4gZ2FpbiBhY2Nlc3Mg
dG8geW91ciBmb3J3YXJkZWQgc3NoIGFnZW50IGNvbm5lY3Rpb24sIHRoZXkg
Y2FuIHN0aWxsIG1ha2UgdXNlIG9mIHlvdXIga2V5cy4gSG93ZXZlciwgdGhp
cyBpcyBiZXR0ZXIgdGhhbiBzdG9yaW5nIGtleXMgb24gcmVtb3RlIG1hY2hp
bmVzOiB0aGUgYXR0YWNrZXIgY2FuIG9ubHkgdXNlIHRoZSBzc2ggYWdlbnQg
Y29ubmVjdGlvbiwgbm90IHRoZSBrZXkgaXRzZWxmLiBUaHVzLCBvbmx5IHdo
aWxlIHlvdSdyZSBsb2dnZWQgaW50byB0aGUgcmVtb3RlIG1hY2hpbmUgY2Fu
IHRoZXkgZG8gYW55dGhpbmcuIElmIHlvdSBzdG9yZSB0aGUga2V5IG9uIHRo
ZSByZW1vdGUgbWFjaGluZSwgdGhleSBjYW4gbWFrZSBhIGNvcHkgb2YgaXQg
YW5kIHVzZSBpdCB3aGVuZXZlciB0aGV5IHdhbnQuCgpJZiB5b3UgdXNlIHNz
aCBrZXlzIHJlbWVtYmVyIGFib3V0IHBhc3NwaHJhc2VzIHdoaWNoIGlzIHN0
cm9uZ2x5IHJlY29tbWVuZGVkIHRvIHJlZHVjZSByaXNrIG9mIGtleXMgYWNj
aWRlbnRhbGx5IGxlYWtpbmcuCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbSG93
IHRvIGZvcndhcmQgbG9jYWwga2V5cGFpciBpbiBhIFNTSCBzZXNzaW9uP10o
aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMTIyNTc5Njgv
aG93LXRvLWZvcndhcmQtbG9jYWwta2V5cGFpci1pbi1hLXNzaC1zZXNzaW9u
KQotIFtVc2luZyBTU0ggYWdlbnQgZm9yd2FyZGluZ10oaHR0cHM6Ly9kZXZl
bG9wZXIuZ2l0aHViLmNvbS92My9ndWlkZXMvdXNpbmctc3NoLWFnZW50LWZv
cndhcmRpbmcvKQotIFtTU0ggQWdlbnQgRm9yd2FyZGluZyBjb25zaWRlcmVk
IGhhcm1mdWxdKGh0dHBzOi8vaGVpcGVpLmdpdGh1Yi5pby8yMDE1LzAyLzI2
L1NTSC1BZ2VudC1Gb3J3YXJkaW5nLWNvbnNpZGVyZWQtaGFybWZ1bC8pCi0g
W1NlY3VyaXR5IENvbnNpZGVyYXRpb24gd2hpbGUgdXNpbmcgc3NoLWFnZW50
XShodHRwczovL3d3dy5jb21tYW5kcHJvbXB0LmNvbS9ibG9nL3NlY3VyaXR5
X2NvbnNpZGVyYXRpb25zX3doaWxlX3VzaW5nX3NzaC1hZ2VudC8pCgo8L2Rl
dGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+V2hhdCBpcyB0aGUgZGlm
ZmVyZW5jZSBiZXR3ZWVuIENPUlMgYW5kIENTUHM/PC9iPjwvc3VtbWFyeT48
YnI+CgoqKkNPUlMqKiBhbGxvd3MgdGhlICoqU2FtZSBPcmlnaW4gUG9saWN5
KiogdG8gYmUgcmVsYXhlZCBmb3IgYSBkb21haW4uCgplLmcuIG5vcm1hbGx5
IGlmIHRoZSB1c2VyIGxvZ3MgaW50byBib3RoIGBleGFtcGxlLmNvbWAgYW5k
IGBleGFtcGxlLm9yZ2AsIHRoZSBTYW1lIE9yaWdpbiBQb2xpY3kgcHJldmVu
dHMgYGV4YW1wbGUuY29tYCBmcm9tIG1ha2luZyBhbiBBSkFYIHJlcXVlc3Qg
dG8gYGV4YW1wbGUub3JnL2N1cnJlbnRfdXNlci9mdWxsX3VzZXJfZGV0YWls
c2AgYW5kIGdhaW5pbmcgYWNjZXNzIHRvIHRoZSByZXNwb25zZS4KClRoaXMg
aXMgdGhlIGRlZmF1bHQgcG9saWN5IG9mIHRoZSB3ZWIgYW5kIHByZXZlbnRz
IHRoZSB1c2VyJ3MgZGF0YSBmcm9tIGJlaW5nIGxlYWtlZCB3aGVuIGxvZ2dl
ZCBpbnRvIG11bHRpcGxlIHNpdGVzIGF0IHRoZSBzYW1lIHRpbWUuCgpOb3cg
d2l0aCAqKkNPUlMqKiwgYGV4YW1wbGUub3JnYCBjb3VsZCBzZXQgYSBwb2xp
Y3kgdG8gc2F5IGl0IHdpbGwgYWxsb3cgdGhlIG9yaWdpbiBgaHR0cHM6Ly9l
eGFtcGxlLmNvbWAgdG8gcmVhZCByZXNwb25zZXMgbWFkZSBieSBBSkFYLiBU
aGlzIHdvdWxkIGJlIGRvbmUgaWYgYm90aCBgZXhhbXBsZS5jb21gIGFuZCBg
ZXhhbXBsZS5vcmdgIGFyZSByYW4gYnkgdGhlIHNhbWUgY29tcGFueSBhbmQg
ZGF0YSBzaGFyaW5nIGJldHdlZW4gdGhlIG9yaWdpbnMgaXMgdG8gYmUgYWxs
b3dlZCBpbiB0aGUgdXNlcidzIGJyb3dzZXIuIEl0IG9ubHkgYWZmZWN0cyB0
aGUgY2xpZW50LXNpZGUgb2YgdGhpbmdzLCBub3QgdGhlIHNlcnZlci1zaWRl
LgoKKipDU1BzKiogb24gdGhlIG90aGVyIGhhbmQgc2V0IGEgcG9saWN5IG9m
IHdoYXQgY29udGVudCBjYW4gcnVuIG9uIHRoZSBjdXJyZW50IHNpdGUuIEZv
ciBleGFtcGxlLCBpZiBKYXZhU2NyaXB0IGNhbiBiZSBleGVjdXRlZCBpbmxp
bmUsIG9yIHdoaWNoIGRvbWFpbnMgYC5qc2AgZmlsZXMgY2FuIGJlIGxvYWRl
ZCBmcm9tLiBUaGlzIGNhbiBiZSBiZW5lZmljaWFsIHRvIGFjdCBhcyBhbm90
aGVyIGxpbmUgb2YgZGVmZW5zZSBhZ2FpbnN0ICoqWFNTKiogYXR0YWNrcywg
d2hlcmUgdGhlIGF0dGFja2VyIHdpbGwgdHJ5IGFuZCBpbmplY3Qgc2NyaXB0
IGludG8gdGhlIEhUTUwgcGFnZS4gTm9ybWFsbHkgb3V0cHV0IHdvdWxkIGJl
IGVuY29kZWQsIGhvd2V2ZXIgc2F5IHRoZSBkZXZlbG9wZXIgaGFkIGZvcmdv
dHRlbiBvbmx5IG9uIG9uZSBvdXRwdXQgZmllbGQuIEJlY2F1c2UgdGhlIHBv
bGljeSBpcyBwcmV2ZW50aW5nIGluLWxpbmUgc2NyaXB0IGZyb20gZXhlY3V0
aW5nLCB0aGUgYXR0YWNrIGlzIHRod2FydGVkLgoKVXNlZnVsIHJlc291cmNl
czoKCi0gW1doYXQgaXMgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBDT1JTIGFu
ZCBDU1BzPyAob3JpZ2luYWwpXShodHRwczovL3N0YWNrb3ZlcmZsb3cuY29t
L3F1ZXN0aW9ucy8zOTQ4ODI0MS93aGF0LWlzLXRoZS1kaWZmZXJlbmNlLWJl
dHdlZW4tY29ycy1hbmQtY3NwcykKLSBbQ1NQLCBTUkkgYW5kIENPUlNdKGh0
dHBzOi8vY29sb3JibGluZHByb2dyYW1taW5nLmNvbS9jc3Atc3JpLWFuZC1j
b3JzKQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPkV4cGxh
aW4gZm91ciB0eXBlcyBvZiByZXNwb25zZXMgZnJvbSBmaXJld2FsbCB3aGVu
IHNjYW5uaW5nIHdpdGggPGNvZGU+bm1hcDwvY29kZT4uPC9iPjwvc3VtbWFy
eT48YnI+CgpUaGVyZSBtaWdodCBiZSBmb3VyIHR5cGVzIG9mIHJlc3BvbnNl
czoKCi0gKipPcGVuIHBvcnQqKiAtIGZldyBwb3J0cyBpbiB0aGUgY2FzZSBv
ZiB0aGUgZmlyZXdhbGwKLSAqKkNsb3NlZCBwb3J0KiogLSBtb3N0IHBvcnRz
IGFyZSBjbG9zZWQgYmVjYXVzZSBvZiB0aGUgZmlyZXdhbGwKLSAqKkZpbHRl
cmVkKiogLSBgbm1hcGAgaXMgbm90IHN1cmUgd2hldGhlciB0aGUgcG9ydCBp
cyBvcGVuIG9yIG5vdAotICoqVW5maWx0ZXJlZCoqIC0gYG5tYXBgIGNhbiBh
Y2Nlc3MgdGhlIHBvcnQgYnV0IGlzIHN0aWxsIGNvbmZ1c2VkIGFib3V0IHRo
ZSBvcGVuIHN0YXR1cyBvZiB0aGUgcG9ydAoKVXNlZnVsIHJlc291cmNlczoK
Ci0gW05NQVAgLSBDbG9zZWQgdnMgRmlsdGVyZWRdKGh0dHBzOi8vc2VjdXJp
dHkuc3RhY2tleGNoYW5nZS5jb20vcXVlc3Rpb25zLzE4MjUwNC9ubWFwLWNs
b3NlZC12cy1maWx0ZXJlZCkKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3Vt
bWFyeT48Yj5XaGF0IGRvZXMgYSA8Y29kZT50Y3BkdW1wPC9jb2RlPiBkbz8g
SG93IHRvIGNhcHR1cmUgb25seSBpbmNvbWluZyB0cmFmZmljIHRvIHlvdXIg
aW50ZXJmYWNlPzwvYj48L3N1bW1hcnk+PGJyPgoKYHRjcGR1bXBgIGlzIGEg
bW9zdCBwb3dlcmZ1bCBhbmQgd2lkZWx5IHVzZWQgY29tbWFuZC1saW5lIHBh
Y2tldHMgc25pZmZlciBvciBwYWNrYWdlIGFuYWx5emVyIHRvb2wgd2hpY2gg
aXMgdXNlZCB0byBjYXB0dXJlIG9yIGZpbHRlciBUQ1AvSVAgcGFja2V0cyB0
aGF0IHJlY2VpdmVkIG9yIHRyYW5zZmVycmVkIG92ZXIgYSBuZXR3b3JrIG9u
IGEgc3BlY2lmaWMgaW50ZXJmYWNlLgoKYHRjcGR1bXBgIHB1dHMgeW91ciBu
ZXR3b3JrIGNhcmQgaW50byBwcm9taXNjdW91cyBtb2RlLCB3aGljaCBiYXNp
Y2FsbHkgdGVsbHMgaXQgdG8gYWNjZXB0IGV2ZXJ5IHBhY2tldCBpdCByZWNl
aXZlcy4gSXQgYWxsb3dzIHRoZSB1c2VyIHRvIHNlZSBhbGwgdHJhZmZpYyBi
ZWluZyBwYXNzZWQgb3ZlciB0aGUgbmV0d29yay4gV2lyZXNoYXJrIHVzZXMg
cGNhcCB0byBjYXB0dXJlIHBhY2tldHMuCgpJZiB5b3Ugd2FudCB0byB2aWV3
IG9ubHkgcGFja2V0cyB0aGF0IGNvbWUgdG8geW91ciBpbnRlcmZhY2UgeW91
IHNob3VsZDoKCi0gYC1RIGluYCAtIGZvciBMaW51eCBgdGNwZHVtcGAgdmVy
c2lvbgotIGAtRCBpbmAgLSBmb3IgQlNEIGB0Y3BkdW1wYCB2ZXJzaW9uCgpC
b3RoIHBhcmFtcyBzZXQgc2VuZC9yZWNlaXZlIGRpcmVjdGlvbiBkaXJlY3Rp
b24gZm9yIHdoaWNoIHBhY2tldHMgc2hvdWxkIGJlIGNhcHR1cmVkLgoKYGBg
YmFzaAp0Y3BkdW1wIC1uZWkgZXRoMCAtUSBpbiBob3N0IDE5Mi4xNjguMjUy
LjEyNSBhbmQgcG9ydCA4MDgwCmBgYAoKPC9kZXRhaWxzPgoKIyMjIyMjIERl
dm9wcyBRdWVzdGlvbnMgKDcpCgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+V2hp
Y2ggYXJlIHRoZSB0b3AgRGV2T3BzIHRvb2xzPyBXaGljaCB0b29scyBoYXZl
IHlvdSB3b3JrZWQgb24/PC9iPjwvc3VtbWFyeT48YnI+CgpUaGUgbW9zdCBw
b3B1bGFyIERldk9wcyB0b29scyBhcmUgbWVudGlvbmVkIGJlbG93OgoKLSAq
KkdpdCoqIDogVmVyc2lvbiBDb250cm9sIFN5c3RlbSB0b29sCi0gKipKZW5r
aW5zKiogOiBDb250aW51b3VzIEludGVncmF0aW9uIHRvb2wKLSAqKlNlbGVu
aXVtKiogOiBDb250aW51b3VzIFRlc3RpbmcgdG9vbAotICoqUHVwcGV0Kios
ICoqQ2hlZioqLCAqKkFuc2libGUqKiA6IENvbmZpZ3VyYXRpb24gTWFuYWdl
bWVudCBhbmQgRGVwbG95bWVudCB0b29scwotICoqTmFnaW9zKiogOiBDb250
aW51b3VzIE1vbml0b3JpbmcgdG9vbAotICoqRG9ja2VyKiogOiBDb250YWlu
ZXJpemF0aW9uIHRvb2wKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFy
eT48Yj5Ib3cgZG8gYWxsIHRoZXNlIHRvb2xzIHdvcmsgdG9nZXRoZXI/PC9i
Pjwvc3VtbWFyeT48YnI+CgpUaGUgbW9zdCBwb3B1bGFyIERldk9wcyB0b29s
cyBhcmUgbWVudGlvbmVkIGJlbG93OgoKLSBEZXZlbG9wZXJzIGRldmVsb3Ag
dGhlIGNvZGUgYW5kIHRoaXMgc291cmNlIGNvZGUgaXMgbWFuYWdlZCBieSBW
ZXJzaW9uIENvbnRyb2wgU3lzdGVtIHRvb2xzIGxpa2UgR2l0IGV0Yy4KLSBE
ZXZlbG9wZXJzIHNlbmQgdGhpcyBjb2RlIHRvIHRoZSBHaXQgcmVwb3NpdG9y
eSBhbmQgYW55IGNoYW5nZXMgbWFkZSBpbiB0aGUgY29kZSBpcyBjb21taXR0
ZWQgdG8gdGhpcyBSZXBvc2l0b3J5Ci0gSmVua2lucyBwdWxscyB0aGlzIGNv
ZGUgZnJvbSB0aGUgcmVwb3NpdG9yeSB1c2luZyB0aGUgR2l0IHBsdWdpbiBh
bmQgYnVpbGQgaXQgdXNpbmcgdG9vbHMgbGlrZSBBbnQgb3IgTWF2ZW4KLSBD
b25maWd1cmF0aW9uIG1hbmFnZW1lbnQgdG9vbHMgbGlrZSBwdXBwZXQgZGVw
bG95cyAmIHByb3Zpc2lvbnMgdGVzdGluZyBlbnZpcm9ubWVudCBhbmQgdGhl
biBKZW5raW5zIHJlbGVhc2VzIHRoaXMgY29kZSBvbiB0aGUgdGVzdCBlbnZp
cm9ubWVudCBvbiB3aGljaCB0ZXN0aW5nIGlzIGRvbmUgdXNpbmcgdG9vbHMg
bGlrZSBzZWxlbml1bQotIE9uY2UgdGhlIGNvZGUgaXMgdGVzdGVkLCBKZW5r
aW5zIHNlbmQgaXQgZm9yIGRlcGxveW1lbnQgb24gdGhlIHByb2R1Y3Rpb24g
c2VydmVyIChldmVuIHByb2R1Y3Rpb24gc2VydmVyIGlzIHByb3Zpc2lvbmVk
ICYgbWFpbnRhaW5lZCBieSB0b29scyBsaWtlIHB1cHBldCkKLSBBZnRlciBk
ZXBsb3ltZW50IEl0IGlzIGNvbnRpbnVvdXNseSBtb25pdG9yZWQgYnkgdG9v
bHMgbGlrZSBOYWdpb3MKLSBEb2NrZXIgY29udGFpbmVycyBwcm92aWRlcyB0
ZXN0aW5nIGVudmlyb25tZW50IHRvIHRlc3QgdGhlIGJ1aWxkIGZlYXR1cmVz
Cgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+V2hhdCBhcmUg
cGxheWJvb2tzIGluIEFuc2libGU/PC9iPjwvc3VtbWFyeT48YnI+CgpQbGF5
Ym9va3MgYXJlIEFuc2libGXigJlzIGNvbmZpZ3VyYXRpb24sIGRlcGxveW1l
bnQsIGFuZCBvcmNoZXN0cmF0aW9uIGxhbmd1YWdlLgoKVGhleSBjYW4gZGVz
Y3JpYmUgYSBwb2xpY3kgeW91IHdhbnQgeW91ciByZW1vdGUgc3lzdGVtcyB0
byBlbmZvcmNlLCBvciBhIHNldCBvZiBzdGVwcyBpbiBhIGdlbmVyYWwgSVQg
cHJvY2Vzcy4gUGxheWJvb2tzIGFyZSBkZXNpZ25lZCB0byBiZSBodW1hbi1y
ZWFkYWJsZSBhbmQgYXJlIGRldmVsb3BlZCBpbiBhIGJhc2ljIHRleHQgbGFu
Z3VhZ2UuCgpBdCBhIGJhc2ljIGxldmVsLCBwbGF5Ym9va3MgY2FuIGJlIHVz
ZWQgdG8gbWFuYWdlIGNvbmZpZ3VyYXRpb25zIG9mIGFuZCBkZXBsb3ltZW50
cyB0byByZW1vdGUgbWFjaGluZXMuCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4K
PHN1bW1hcnk+PGI+V2hhdCBpcyBOUlBFIChOYWdpb3MgUmVtb3RlIFBsdWdp
biBFeGVjdXRvcikgaW4gTmFnaW9zPzwvYj48L3N1bW1hcnk+PGJyPgoKVGhl
ICoqTlJQRSoqIGFkZG9uIGlzIGRlc2lnbmVkIHRvIGFsbG93IHlvdSB0byBl
eGVjdXRlIE5hZ2lvcyBwbHVnaW5zIG9uIHJlbW90ZSBMaW51eC9Vbml4IG1h
Y2hpbmVzLiBUaGUgbWFpbiByZWFzb24gZm9yIGRvaW5nIHRoaXMgaXMgdG8g
YWxsb3cgTmFnaW9zIHRvIG1vbml0b3IgImxvY2FsIiByZXNvdXJjZXMgKGxp
a2UgQ1BVIGxvYWQsIG1lbW9yeSB1c2FnZSwgZXRjLikgb24gcmVtb3RlIG1h
Y2hpbmVzLgoKU2luY2UgdGhlc2UgcHVibGljIHJlc291cmNlcyBhcmUgbm90
IHVzdWFsbHkgZXhwb3NlZCB0byBleHRlcm5hbCBtYWNoaW5lcywgYW4gYWdl
bnQgbGlrZSAqKk5SUEUqKiBtdXN0IGJlIGluc3RhbGxlZCBvbiB0aGUgcmVt
b3RlIExpbnV4L1VuaXggbWFjaGluZXMuCgo8L2RldGFpbHM+Cgo8ZGV0YWls
cz4KPHN1bW1hcnk+PGI+V2hhdCBpcyB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVu
IEFjdGl2ZSBhbmQgUGFzc2l2ZSBjaGVjayBpbiBOYWdpb3M/PC9iPjwvc3Vt
bWFyeT48YnI+CgpUaGUgbWFqb3IgZGlmZmVyZW5jZSBiZXR3ZWVuIEFjdGl2
ZSBhbmQgUGFzc2l2ZSBjaGVja3MgaXMgdGhhdCBBY3RpdmUgY2hlY2tzIGFy
ZSBpbml0aWF0ZWQgYW5kIHBlcmZvcm1lZCBieSBOYWdpb3MsIHdoaWxlIHBh
c3NpdmUgY2hlY2tzIGFyZSBwZXJmb3JtZWQgYnkgZXh0ZXJuYWwgYXBwbGlj
YXRpb25zLgoKUGFzc2l2ZSBjaGVja3MgYXJlIHVzZWZ1bCBmb3IgbW9uaXRv
cmluZyBzZXJ2aWNlcyB0aGF0IGFyZToKCi0gYXN5bmNocm9ub3VzIGluIG5h
dHVyZSBhbmQgY2Fubm90IGJlIG1vbml0b3JlZCBlZmZlY3RpdmVseSBieSBw
b2xsaW5nIHRoZWlyIHN0YXR1cyBvbiBhIHJlZ3VsYXJseSBzY2hlZHVsZWQg
YmFzaXMuCi0gbG9jYXRlZCBiZWhpbmQgYSBmaXJld2FsbCBhbmQgY2Fubm90
IGJlIGNoZWNrZWQgYWN0aXZlbHkgZnJvbSB0aGUgbW9uaXRvcmluZyBob3N0
LgoKVGhlIG1haW4gZmVhdHVyZXMgb2YgQWN0aXZlcyBjaGVja3MgYXJlIGFz
IGZvbGxvd3M6CgotIGFjdGl2ZSBjaGVja3MgYXJlIGluaXRpYXRlZCBieSB0
aGUgTmFnaW9zIHByb2Nlc3MuCi0gYWN0aXZlIGNoZWNrcyBhcmUgcnVuIG9u
IGEgcmVndWxhcmx5IHNjaGVkdWxlZCBiYXNpcy4KCjwvZGV0YWlscz4KCjxk
ZXRhaWxzPgo8c3VtbWFyeT48Yj5Ib3cgdG8gPGNvZGU+Z2l0IGNsb25lPC9j
b2RlPiBpbmNsdWRpbmcgc3VibW9kdWxlcz88L2I+PC9zdW1tYXJ5Pjxicj4K
CkZvciBleGFtcGxlOgoKYGBgYmFzaAojIFdpdGggLWo4IC0gcGVyZm9ybWFu
Y2Ugb3B0aW1pemF0aW9uCmdpdCBjbG9uZSAtLXJlY3Vyc2Utc3VibW9kdWxl
cyAtajggZ2l0Oi8vZ2l0aHViLmNvbS9mb28vYmFyLmdpdAoKIyBGb3IgYWxy
ZWFkeSBjbG9uZWQgcmVwb3Mgb3Igb2xkZXIgR2l0IHZlcnNpb25zCmdpdCBj
bG9uZSBnaXQ6Ly9naXRodWIuY29tL2Zvby9iYXIuZ2l0CmNkIGJhcgpnaXQg
c3VibW9kdWxlIHVwZGF0ZSAtLWluaXQgLS1yZWN1cnNpdmUKYGBgCgo8L2Rl
dGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+TWVudGlvbiB3aGF0IGFy
ZSB0aGUgYWR2YW50YWdlcyBvZiB1c2luZyBSZWRpcz8gV2hhdCBpcyA8Y29k
ZT5yZWRpcy1jbGk8L2NvZGU+PyA8L2I+PC9zdW1tYXJ5Pjxicj4KCi0gaXQg
cHJvdmlkZXMgaGlnaCBzcGVlZCAoZXhjZXB0aW9uYWxseSBmYXN0ZXIgdGhh
biBvdGhlcnMpCi0gaXQgc3VwcG9ydHMgYSBzZXJ2ZXItc2lkZSBsb2NraW5n
Ci0gaXQgaGFzIGdvdCBsb3RzIG9mIGNsaWVudCBsaWIKLSBpdCBoYXMgZ290
IGNvbW1hbmQgbGV2ZWwgQXRvbWljIE9wZXJhdGlvbiAodHggb3BlcmF0aW9u
KQotIHN1cHBvcnRzIGZvciByaWNoIGRhdGEgdHlwZXMgbGlrZSBoYXNoZXMs
IHNldHMsIGJpdG1hcHMKCmByZWRpcy1jbGlgIGlzIHRoZSAqKlJlZGlzKiog
Y29tbWFuZCBsaW5lIGludGVyZmFjZSwgYSBzaW1wbGUgcHJvZ3JhbSB0aGF0
IGFsbG93cyB0byBzZW5kIGNvbW1hbmRzIHRvICoqUmVkaXMqKiwgYW5kIHJl
YWQgdGhlIHJlcGxpZXMgc2VudCBieSB0aGUgc2VydmVyLCBkaXJlY3RseSBm
cm9tIHRoZSB0ZXJtaW5hbC4KClVzZWZ1bCByZXNvdXJjZXM6CgotIFsxMCBB
ZHZhbnRhZ2VzIG9mIFJlZGlzXShodHRwczovL2R6b25lLmNvbS9hcnRpY2xl
cy8xMC10cmFpdHMtb2YtcmVkaXMpCgo8L2RldGFpbHM+CgojIyMjIyMgQ3li
ZXIgU2VjdXJpdHkgUXVlc3Rpb25zICg0KQoKPGRldGFpbHM+CjxzdW1tYXJ5
PjxiPldoYXQgaXMgWFNTLCBob3cgd2lsbCB5b3UgbWl0aWdhdGUgaXQ/PC9i
Pjwvc3VtbWFyeT48YnI+CgoqKkNyb3NzIFNpdGUgU2NyaXB0aW5nKiogaXMg
YSBKYXZhU2NyaXB0IHZ1bG5lcmFiaWxpdHkgaW4gdGhlIHdlYiBhcHBsaWNh
dGlvbnMuIFRoZSBlYXNpZXN0IHdheSB0byBleHBsYWluIHRoaXMgaXMgYSBj
YXNlIHdoZW4gYSB1c2VyIGVudGVycyBhIHNjcmlwdCBpbiB0aGUgY2xpZW50
IHNpZGUgaW5wdXQgZmllbGRzIGFuZCB0aGF0IGlucHV0IGdldHMgcHJvY2Vz
c2VkIHdpdGhvdXQgZ2V0dGluZyB2YWxpZGF0ZWQuIFRoaXMgbGVhZHMgdG8g
dW50cnVzdGVkIGRhdGEgZ2V0dGluZyBzYXZlZCBhbmQgZXhlY3V0ZWQgb24g
dGhlIGNsaWVudCBzaWRlLgoKQ291bnRlcm1lYXN1cmVzIG9mIFhTUyBhcmUg
aW5wdXQgdmFsaWRhdGlvbiwgaW1wbGVtZW50aW5nIGEgQ1NQIChDb250ZW50
IHNlY3VyaXR5IHBvbGljeSkgYW5kIG90aGVyLgoKPC9kZXRhaWxzPgoKPGRl
dGFpbHM+CjxzdW1tYXJ5PjxiPkhJRFMgdnMgTklEUyBhbmQgd2hpY2ggb25l
IGlzIGJldHRlciBhbmQgd2h5PzwvYj48L3N1bW1hcnk+PGJyPgoKKipISURT
KiogaXMgaG9zdCBpbnRydXNpb24gZGV0ZWN0aW9uIHN5c3RlbSBhbmQgKipO
SURTKiogaXMgbmV0d29yayBpbnRydXNpb24gZGV0ZWN0aW9uIHN5c3RlbS4g
Qm90aCB0aGUgc3lzdGVtcyB3b3JrIG9uIHRoZSBzaW1pbGFyIGxpbmVzLiBJ
dOKAmXMganVzdCB0aGF0IHRoZSBwbGFjZW1lbnQgaW4gZGlmZmVyZW50LiAq
KkhJRFMqKiBpcyBwbGFjZWQgb24gZWFjaCBob3N0IHdoZXJlYXMgKipOSURT
KiogaXMgcGxhY2VkIGluIHRoZSBuZXR3b3JrLiBGb3IgYW4gZW50ZXJwcmlz
ZSwgKipOSURTKiogaXMgcHJlZmVycmVkIGFzICoqSElEUyoqIGlzIGRpZmZp
Y3VsdCB0byBtYW5hZ2UsIHBsdXMgaXQgY29uc3VtZXMgcHJvY2Vzc2luZyBw
b3dlciBvZiB0aGUgaG9zdCBhcyB3ZWxsLgoKPC9kZXRhaWxzPgoKPGRldGFp
bHM+CjxzdW1tYXJ5PjxiPldoYXQgaXMgY29tcGxpYW5jZT88L2I+PC9zdW1t
YXJ5Pjxicj4KCkFiaWRpbmcgYnkgYSBzZXQgb2Ygc3RhbmRhcmRzIHNldCBi
eSBhIGdvdmVybm1lbnQvSW5kZXBlbmRlbnQgcGFydHkvb3JnYW5pc2F0aW9u
LCBlLmcuIGFuIGluZHVzdHJ5IHdoaWNoIHN0b3JlcywgcHJvY2Vzc2VzIG9y
IHRyYW5zbWl0cyBQYXltZW50IHJlbGF0ZWQgaW5mb3JtYXRpb24gbmVlZHMg
dG8gYmUgY29tcGxpZWQgd2l0aCBQQ0kgRFNTIChQYXltZW50IGNhcmQgSW5k
dXN0cnkgRGF0YSBTZWN1cml0eSBTdGFuZGFyZCkuIE90aGVyIGNvbXBsaWFu
Y2UgZXhhbXBsZXMgY2FuIGJlIGFuIG9yZ2FuaXNhdGlvbiBjb21wbHlpbmcg
d2l0aCBpdHMgb3duIHBvbGljaWVzLgoKPC9kZXRhaWxzPgoKPGRldGFpbHM+
CjxzdW1tYXJ5PjxiPldoYXQgaXMgYSBXQUYgYW5kIHdoYXQgYXJlIGl0cyB0
eXBlcz88L2I+PC9zdW1tYXJ5Pjxicj4KCioqV0FGKiogc3RhbmRzIGZvciB3
ZWIgYXBwbGljYXRpb24gZmlyZXdhbGwuIEl0IGlzIHVzZWQgdG8gcHJvdGVj
dCB0aGUgYXBwbGljYXRpb24gYnkgZmlsdGVyaW5nIGxlZ2l0aW1hdGUgdHJh
ZmZpYyBmcm9tIG1hbGljaW91cyB0cmFmZmljLiAqKldBRioqIGNhbiBiZSBl
aXRoZXIgYSBib3ggdHlwZSBvciBjbG91ZCBiYXNlZC4KCjwvZGV0YWlscz4K
CiMjIyA6ZGlhbW9uZF9zaGFwZV93aXRoX2FfZG90X2luc2lkZTogPGEgbmFt
ZT0ic2VuaW9yLXN5c2FkbWluIj5TZW5pb3IgU3lzYWRtaW48L2E+CgojIyMj
IyMgU3lzdGVtIFF1ZXN0aW9ucyAoNjEpCgo8ZGV0YWlscz4KPHN1bW1hcnk+
PGI+RXhwbGFpbiB0aGUgY3VycmVudCBhcmNoaXRlY3R1cmUgeW914oCZcmUg
cmVzcG9uc2libGUgZm9yIGFuZCBwb2ludCBvdXQgd2hlcmUgaXTigJlzIHNj
YWxhYmxlIG9yIGZhdWx0LXRvbGVyYW50LiAqKio8L2I+PC9zdW1tYXJ5Pjxi
cj4KClRvIGJlIGNvbXBsZXRlZC4KCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8
c3VtbWFyeT48Yj5UZWxsIG1lIGhvdyBjb2RlIGdldHMgZGVwbG95ZWQgaW4g
eW91ciBjdXJyZW50IHByb2R1Y3Rpb24uICoqKjwvYj48L3N1bW1hcnk+PGJy
PgoKVG8gYmUgY29tcGxldGVkLgoKPC9kZXRhaWxzPgoKPGRldGFpbHM+Cjxz
dW1tYXJ5PjxiPldoYXQgYXJlIHRoZSBkaWZmZXJlbnQgdHlwZXMgb2Yga2Vy
bmVscz8gRXhwbGFpbi48L2I+PC9zdW1tYXJ5Pjxicj4KCioqTW9ub2xpdGhp
YyBLZXJuZWxzKioKCkVhcmxpZXIgaW4gdGhpcyB0eXBlIG9mIGtlcm5lbCBh
cmNoaXRlY3R1cmUsIGFsbCB0aGUgYmFzaWMgc3lzdGVtIHNlcnZpY2VzIGxp
a2UgYSBwcm9jZXNzIGFuZCBtZW1vcnkgbWFuYWdlbWVudCwgaW50ZXJydXB0
IGhhbmRsaW5nIGV0YyB3ZXJlIHBhY2thZ2VkIGludG8gYSBzaW5nbGUgbW9k
dWxlIGluIGtlcm5lbCBzcGFjZS4gVGhpcyB0eXBlIG9mIGFyY2hpdGVjdHVy
ZSBsZWQgdG8gc29tZSBzZXJpb3VzIGRyYXdiYWNrcyBsaWtlOgoKLSB0aGUg
c2l6ZSBvZiB0aGUga2VybmVsLCB3aGljaCB3YXMgaHVnZQotIHBvb3IgbWFp
bnRhaW5hYmlsaXR5LCB3aGljaCBtZWFucyBidWcgZml4aW5nIG9yIGFkZGl0
aW9uIG9mIG5ldyBmZWF0dXJlcyByZXN1bHRlZCBpbiByZWNvbXBpbGF0aW9u
IG9mIHRoZSB3aG9sZSBrZXJuZWwgd2hpY2ggY291bGQgY29uc3VtZSBob3Vy
cwoKSW4gYSBtb2Rlcm4gZGF5IGFwcHJvYWNoIHRvIG1vbm9saXRoaWMgYXJj
aGl0ZWN0dXJlLCB0aGUga2VybmVsIGNvbnNpc3RzIG9mIGRpZmZlcmVudCBt
b2R1bGVzIHdoaWNoIGNhbiBiZSBkeW5hbWljYWxseSBsb2FkZWQgYW5kIHVu
bG9hZGVkLiBUaGlzIG1vZHVsYXIgYXBwcm9hY2ggYWxsb3dzIGVhc3kgZXh0
ZW5zaW9uIG9mIE9TJ3MgY2FwYWJpbGl0aWVzLiBXaXRoIHRoaXMgYXBwcm9h
Y2gsIG1haW50YWluYWJpbGl0eSBvZiBrZXJuZWwgYmVjYW1lIHZlcnkgZWFz
eSBhcyBvbmx5IHRoZSBjb25jZXJuZWQgbW9kdWxlIG5lZWRzIHRvIGJlIGxv
YWRlZCBhbmQgdW5sb2FkZWQgZXZlcnkgdGltZSB0aGVyZSBpcyBhIGNoYW5n
ZSBvciBidWcgZml4IGluIGEgcGFydGljdWxhciBtb2R1bGUuCgpMaW51eCBm
b2xsb3dzIHRoZSBtb25vbGl0aGljIG1vZHVsYXIgYXBwcm9hY2guCgoqKk1p
Y3Jva2VybmVscyoqCgpUaGlzIGFyY2hpdGVjdHVyZSBtYWpvcmx5IGNhdGVy
cyB0byB0aGUgcHJvYmxlbSBvZiBldmVyIGdyb3dpbmcgc2l6ZSBvZiBrZXJu
ZWwgY29kZSB3aGljaCB3ZSBjb3VsZCBub3QgY29udHJvbCBpbiB0aGUgbW9u
b2xpdGhpYyBhcHByb2FjaC4gVGhpcyBhcmNoaXRlY3R1cmUgYWxsb3dzIHNv
bWUgYmFzaWMgc2VydmljZXMgbGlrZSBkZXZpY2UgZHJpdmVyIG1hbmFnZW1l
bnQsIHByb3RvY29sIHN0YWNrLCBmaWxlIHN5c3RlbSBldGMgdG8gcnVuIGlu
IHVzZXIgc3BhY2UuCgpJbiB0aGlzIGFyY2hpdGVjdHVyZSwgYWxsIHRoZSBi
YXNpYyBPUyBzZXJ2aWNlcyB3aGljaCBhcmUgbWFkZSBwYXJ0IG9mIHVzZXIg
c3BhY2UgYXJlIG1hZGUgdG8gcnVuIGFzIHNlcnZlcnMgd2hpY2ggYXJlIHVz
ZWQgYnkgb3RoZXIgcHJvZ3JhbXMgaW4gdGhlIHN5c3RlbSB0aHJvdWdoIGlu
dGVyIHByb2Nlc3MgY29tbXVuaWNhdGlvbiAoSVBDKS4KCkV4YW1wbGU6IFdl
IGhhdmUgc2VydmVycyBmb3IgZGV2aWNlIGRyaXZlcnMsIG5ldHdvcmsgcHJv
dG9jb2wgc3RhY2tzLCBmaWxlIHN5c3RlbXMsIGdyYXBoaWNzLCBldGMuIE1p
Y3Jva2VybmVsIHNlcnZlcnMgYXJlIGVzc2VudGlhbGx5IGRhZW1vbiBwcm9n
cmFtcyBsaWtlIGFueSBvdGhlcnMsIGV4Y2VwdCB0aGF0IHRoZSBrZXJuZWwg
Z3JhbnRzIHNvbWUgb2YgdGhlbSBwcml2aWxlZ2VzIHRvIGludGVyYWN0IHdp
dGggcGFydHMgb2YgcGh5c2ljYWwgbWVtb3J5IHRoYXQgYXJlIG90aGVyd2lz
ZSBvZmYgbGltaXRzIHRvIG1vc3QgcHJvZ3JhbXMuCgoqKkh5YnJpZCBLZXJu
ZWxzIChNb2R1bGFyIEtlcm5lbHMpKioKClRoaXMgaXMgYSBjb21iaW5hdGlv
biBvZiB0aGUgYWJvdmUgdHdvLCB3aGVyZSB0aGUga2V5IGlkZWEgaXMgdGhh
dCBPcGVyYXRpbmcgU3lzdGVtIHNlcnZpY2VzIGFyZSBpbiBLZXJuZWwgU3Bh
Y2UsIGFuZCB0aGVyZSBpcyBubyBtZXNzYWdlIHBhc3NpbmcsIG5vIHBlcmZv
cm1hbmNlIG92ZXJoZWFkIGFuZCBubyByZWxpYWJpbGl0eSBiZW5lZml0cywg
b2YgaGF2aW5nIHNlcnZpY2VzIGluIHVzZXIgc3BhY2UuCgpUaGlzIGlzIHVz
ZWQgYnkgTWljcm9zb2Z0J3MgTlQga2VybmVscywgYWxsIHRoZSB3YXkgdXAg
dG8gdGhlIGxhdGVzdCBXaW5kb3dzIHZlcnNpb24uCgpVc2VmdWwgcmVzb3Vy
Y2VzOgoKLSBbQW4gSW50cm9kdWN0aW9uIHRvIEtlcm5lbHMuIFRoZSBIZWFy
dCBvZiBDb21wdXRpbmcgRGV2aWNlcy4gKG9yaWdpbmFsKV0oaHR0cHM6Ly9r
ZWV0bWFsaW4ud2l4c2l0ZS5jb20va2VldG1hbGluL3NpbmdsZS1wb3N0LzIw
MTcvMDgvMjQvQW4tSW50cm9kdWN0aW9uLXRvLUtlcm5lbHMtVGhlLUhlYXJ0
LW9mLUNvbXB1dGluZy1EZXZpY2VzKQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+
CjxzdW1tYXJ5PjxiPlRoZSBwcm9ncmFtIHJldHVybnMgdGhlIGVycm9yIG9m
IHRoZSBtaXNzaW5nIGxpYnJhcnkuIEhvdyB0byBwcm92aWRlIGR5bmFtaWNh
bGx5IGxpbmthYmxlIGxpYnJhcmllcz88L2I+PC9zdW1tYXJ5Pjxicj4KCkVu
dmlyb25tZW50IHZhcmlhYmxlIGBMRF9MSUJSQVJZX1BBVEhgIGlzIGEgY29s
b24tc2VwYXJhdGVkIHNldCBvZiBkaXJlY3RvcmllcyB3aGVyZSBsaWJyYXJp
ZXMgc2hvdWxkIGJlIHNlYXJjaGVkIGZvciBmaXJzdCwgYmVmb3JlIHRoZSBz
dGFuZGFyZCBzZXQgb2YgZGlyZWN0b3JpZXM7IHRoaXMgaXMgdXNlZnVsIHdo
ZW4gZGVidWdnaW5nIGEgbmV3IGxpYnJhcnkgb3IgdXNpbmcgYSBub25zdGFu
ZGFyZCBsaWJyYXJ5IGZvciBzcGVjaWFsIHB1cnBvc2VzLgoKVGhlIGJlc3Qg
d2F5IHRvIHVzZSBgTERfTElCUkFSWV9QQVRIYCBpcyB0byBzZXQgaXQgb24g
dGhlIGNvbW1hbmQgbGluZSBvciBzY3JpcHQgaW1tZWRpYXRlbHkgYmVmb3Jl
IGV4ZWN1dGluZyB0aGUgcHJvZ3JhbS4gVGhpcyB3YXkgdGhlIG5ldyBgTERf
TElCUkFSWV9QQVRIYCBpc29sYXRlZCBmcm9tIHRoZSByZXN0IG9mIHlvdXIg
c3lzdGVtLgoKRXhhbXBsZSBvZiB1c2U6CgpgYGBiYXNoCmV4cG9ydCBMRF9M
SUJSQVJZX1BBVEg9Ii9saXN0L29mL2xpYnJhcnkvcGF0aHM6L2Fub3RoZXIv
cGF0aCIgLi9wcm9ncmFtCmBgYAoKVXNlZnVsIHJlc291cmNlczoKCi0gW0hv
dyB0byBjb3JyZWN0bHkgdXNlIExEX0xJQlJBUllfUEFUSF0oaHR0cDovL3dp
cmVkcmV2b2x1dGlvbi5jb20vc3lzdGVtLWFkbWluaXN0cmF0aW9uL2hvdy10
by1jb3JyZWN0bHktdXNlLWxkX2xpYnJhcnlfcGF0aCkKCjwvZGV0YWlscz4K
CjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5Xcml0ZSB0aGUgbW9zdCBpbXBvcnRh
bnQgcnVsZXMgZm9yIHVzaW5nIHJvb3QgcHJpdmlsZWdlcyBzYWZlbHkgZm9y
IG5vdmljZSBhZG1pbmlzdHJhdG9ycy4gKioqPC9iPjwvc3VtbWFyeT48YnI+
CgpUbyBiZSBjb21wbGV0ZWQuCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1
bW1hcnk+PGI+V2hhdCBpcyB0aGUgYWR2YW50YWdlIG9mIHN5bmNocm9uaXpp
bmcgVUlEL0dJRCBhY3Jvc3MgbXVsdGlwbGUgc3lzdGVtcz88L2I+PC9zdW1t
YXJ5Pjxicj4KClRoZXJlIGFyZSBzZXZlcmFsIHByaW5jaXBsZSByZWFzb25z
IHdoeSB5b3Ugd2FudCB0byBjby1vcmRpbmF0ZSB0aGUgKip1c2VyL1VJRCoq
IGFuZCAqKmdyb3VwL0dJRCoqIG1hbmFnZW1lbnQgYWNyb3NzIHlvdXIgbmV0
d29yay4KClRoZSBmaXJzdCBpcyByZWxhdGl2ZWx5IG9idmlvdXMgLSBpdCBo
YXMgdG8gZG8gd2l0aCB1c2VyIGFuZCBhZG1pbmlzdHJhdGl2ZSBjb252ZW5p
ZW5jZS4KCklmIGVhY2ggb2YgeW91ciB1c2VycyBhcmUgZXhwZWN0ZWQgdG8g
aGF2ZSByZWxhdGl2ZWx5IHVuaWZvcm0gYWNjZXNzIHRvIHRoZSBzeXN0ZW1z
IHRocm91Z2hvdXQgdGhlIG5ldHdvcmssIHRoZW4gdGhleSdsbCBleHBlY3Qg
dGhlIHNhbWUgdXNlcm5hbWUgYW5kIHBhc3N3b3JkIHRvIHdvcmsgb24gZWFj
aCBzeXN0ZW0gdGhhdCB0aGV5IGFyZSBzdXBwb3NlZCB0byB1c2UuIElmIHRo
ZXkgY2hhbmdlIHRoZWlyIHBhc3N3b3JkIHRoZXkgd2lsbCBleHBlY3QgdGhh
dCBjaGFuZ2UgdG8gYmUgZ2xvYmFsLgoKSXQgYWxzbyBoYXMgYSByZWxhdGlv
bnNoaXAgd2l0aCBuYW1lcyBhbmQgZ3JvdXAgbmFtZXMgaW4gVW5peCBhbmQg
TGludXguIFRoZXkgYXJlIG1hcHBlZCBpbnRvIG51bWVyaWMgZm9ybXMgKCoq
VUlEJ3MqKiBhbmQgKipHSUQncyoqIHJlc3BlY3RpdmVseSkuIEFsbCBmaWxl
IG93bmVyc2hpcCAoaW5vZGVzKSBhbmQgcHJvY2Vzc2VzIHVzZSB0aGVzZSBu
dW1lcmljcyBmb3IgYWxsIGFjY2VzcyBhbmQgaWRlbnRpdHkgZGV0ZXJtaW5h
dGlvbiB0aHJvdWdob3V0IHRoZSBrZXJuZWwgYW5kIGRyaXZlcnMuIFRoZXNl
IG51bWVyaWMgdmFsdWVzIGFyZSByZXZlcnNlIG1hcHBlZCBiYWNrIHRvIHRo
ZWlyIGNvcnJlc3BvbmRpbmcgcHJpbmNpcGxlIHN5bWJvbGljIHJlcHJlc2Vu
dGF0aW9ucyAodGhlIG5hbWVzKSBieSB0aGUgdXRpbGl0aWVzIHRoYXQgZGlz
cGxheSBvciBwcm9jZXNzIHRoYXQgaW5mb3JtYXRpb24uCgpJdCBpcyBhbHNv
IHJlY29tbWVuZGVkIHRoYXQgeW91IGFkb3B0IGEgcG9saWN5IHRoYXQgKipV
SUQncyoqIGFyZSBub3QgcmUtdXNlZC4gV2hlbiBhIHVzZXIgbGVhdmVzIHlv
dXIgb3JnYW5pemF0aW9uIHlvdSAicmV0aXJlIiB0aGVpciAqKlVJRCoqIChk
aXNhYmxpbmcgdGhlaXIgYWNjZXNzIGJ5IFwqJ2luZyBvdXQgdGhlaXIgcGFz
c3dkLCByZW1vdmluZyB0aGVtIGZyb20gdGhlIGdyb3VwcyBtYXBzLCBzZXR0
aW5nIHRoZWlyICJzaGVsbCIgdG8gc29tZSBgL2Jpbi9kZW5pZWRgIGJpbmFy
eSBhbmQgdGhlaXIgaG9tZSBkaXJlY3RvcnkgdG8gYSBzZWN1cmVkIF9ncmF2
ZXlhcmRfIC0gSSB1c2UgYC9ob21lLy5ncmF2ZXlhcmRgIG9uIG15IHN5c3Rl
bXMpLgoKVGhlIHJlYXNvbiBmb3IgdGhpcyBtYXkgbm90IGJlIG9idmlvdXMu
IEhvd2V2ZXIsIGlmIHlvdSBhcmUgbWFpbnRhaW5pbmcgYXJjaGl2YWwgYmFj
a3VwcyBmb3Igc2V2ZXJhbCB5ZWFycyAob3IgaW5kZWZpbml0ZWx5KSB5b3Un
bGwgd2FudCB0byBhdm9pZCBhbnkgYW1iaWd1aXRpZXMgYW5kIGNvbmZ1c2lv
biB0aGF0IG1pZ2h0IHJlc3VsdCBmcm9tIHJlc3RvcmluZyBvbmUgKGxvbmcg
Z29uZSkgdXNlcidzIGZpbGVzIGFuZCBmaW5kaW5nIHRoZW0gb3duZWQgYnkg
b25lIG9mIHlvdXIgbmV3IHVzZXJzLgoKVXNlZnVsIHJlc291cmNlczoKCi0g
W1VJRC9HSUQgU3luY2hyb25pemF0aW9uIGFuZCBNYW5hZ2VtZW50IChvcmln
aW5hbCldKGh0dHBzOi8vbGludXhnYXpldHRlLm5ldC9pc3N1ZTMxL3RhZ191
aWRnaWQuaHRtbCkKLSBbV2hhdCdzIHRoZSBhZHZhbnRhZ2Ugb2Ygc3luY2hy
b25pemluZyBVSUQvR0lEIGFjcm9zcyBMaW51eCBtYWNoaW5lcz9dKGh0dHBz
Oi8vc2VydmVyZmF1bHQuY29tL3F1ZXN0aW9ucy82MDM5ODcvd2hhdHMtdGhl
LWFkdmFudGFnZS1vZi1zeW5jaHJvbml6aW5nLXVpZC1naWQtYWNyb3NzLWxp
bnV4LW1hY2hpbmVzKQotIFtIb3cgY2FuIEkga2VlcCB1c2VyIGFjY291bnRz
IGNvbnNpc3RlbnQgYWNyb3NzIG11bHRpcGxlIG1hY2hpbmVzP10oaHR0cHM6
Ly91bml4LnN0YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy8xNDEwMjMvaG93
LWNhbi1pLWtlZXAtdXNlci1hY2Njb3VudHMtY29uc2lzdGVudC1hY2Nyb3Nz
LW11bHRpcGxlLW1hY2hpbmVzKQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+Cjxz
dW1tYXJ5PjxiPldoYXQgcHJpbmNpcGxlcyB0byBmb2xsb3cgZm9yIHN1Y2Nl
c3NmdWwgc3lzdGVtIHBlcmZvcm1hbmNlIHR1bmluZz8gKioqPC9iPjwvc3Vt
bWFyeT48YnI+CgpUbyBiZSBjb21wbGV0ZWQuCgpVc2VmdWwgcmVzb3VyY2Vz
OgoKLSBbQW4gSW50cm9kdWN0aW9uIHRvIFBlcmZvcm1hbmNlIFR1bmluZ10o
aHR0cHM6Ly93d3cub3JlaWxseS5jb20vbGlicmFyeS92aWV3L3N5c3RlbS1w
ZXJmb3JtYW5jZS10dW5pbmcvMDU5NjAwMjg0WC9jaDAxLmh0bWwpCgo8L2Rl
dGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+RGVzY3JpYmUgc3RhcnQt
dXAgY29uZmlndXJhdGlvbiBmaWxlcyBhbmQgZGlyZWN0b3J5IGluIEJTRCBz
eXN0ZW1zLjwvYj48L3N1bW1hcnk+PGJyPgoKSW4gQlNEIHRoZSBwcmltYXJ5
IHN0YXJ0LXVwIGNvbmZpZ3VyYXRpb24gZmlsZSBpcyBgL2V0Yy9kZWZhdWx0
cy9yYy5jb25mYC4gU3lzdGVtIHN0YXJ0dXAgc2NyaXB0cyBzdWNoIGFzIGAv
ZXRjL3JjYCBhbmQgYC9ldGMvcmMuZGAganVzdCBpbmNsdWRlIHRoaXMgZmls
ZS4KCklmIHlvdSB3YW50IHRvIGFkZCBvdGhlciBwcm9ncmFtcyB0byBzeXN0
ZW0gc3RhcnR1cCB5b3UgbmVlZCB0byBjaGFuZ2UgYC9ldGMvcmMuY29uZmAg
ZmlsZSBpbnN0ZWFkIG9mIGAvZXRjL2RlZmF1bHRzL3JjLmNvbmZgLgoKPC9k
ZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPkNQVSBzcGVudCB0aGUg
bW9zdCBvZiB0aGUgdGltZSBmb3IgYSBJTyBvcGVyYXRpb25zIHRvIGNvbXBs
ZXRlLiBXaGljaCB0b29scyBkbyB5b3UgdXNlIGZvciBkaWFnbm9zZSB3aGF0
IHByb2Nlc3MoZXMpIGRpZCBleGFjdGx5IHdhaXQgZm9yIElPPyBIb3cgdG8g
bWluaW1pemUgSU8gd2FpdCB0aW1lPyAqKio8L2I+PC9zdW1tYXJ5Pjxicj4K
ClRvIGJlIGNvbXBsZXRlZC4KClVzZWZ1bCByZXNvdXJjZXM6CgotIFtDYW4g
YW55b25lIGV4cGxhaW4gcHJlY2lzZWx5IHdoYXQgSU9XYWl0IGlzP10oaHR0
cHM6Ly9zZXJ2ZXJmYXVsdC5jb20vcXVlc3Rpb25zLzEyNjc5L2Nhbi1hbnlv
bmUtZXhwbGFpbi1wcmVjaXNlbHktd2hhdC1pb3dhaXQtaXMpCgo8L2RldGFp
bHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+VGhlIEp1bmlvciBkZXYgYWNj
aWRlbnRhbGx5IGRlc3Ryb3llZCBwcm9kdWN0aW9uIGRhdGFiYXNlLiBIb3cg
Y2FuIHlvdSBwcmV2ZW50IHN1Y2ggc2l0dWF0aW9ucz88L2I+PC9zdW1tYXJ5
Pjxicj4KCioqQ3JlYXRlIGRpc2FzdGVyIHJlY292ZXJ5IHBsYW4qKgoKRGlz
YXN0ZXIgcmVjb3ZlcnkgYW5kIGJ1c2luZXNzIGNvbnRpbnVpdHkgcGxhbm5p
bmcgYXJlIGludGVncmFsIHBhcnRzIG9mIHRoZSBvdmVyYWxsIHJpc2sgbWFu
YWdlbWVudCBmb3IgYW4gb3JnYW5pemF0aW9uLiBJcyBhIGRvY3VtZW50ZWQg
cHJvY2VzcyBvciBzZXQgb2YgcHJvY2VkdXJlcyB0byByZWNvdmVyIGFuZCBw
cm90ZWN0IGEgYnVzaW5lc3MgSVQgaW5mcmFzdHJ1Y3R1cmUuCgpJZiB5b3Ug
ZG9u4oCZdCBoYXZlIGEgcmVjb3Zlcnkgc29sdXRpb24sIHRoZW4geW91ciBy
ZXN0b3JhdGlvbiBlZmZvcnRzIHdpbGwgYmVjb21lIHJlYnVpbGRpbmcgZWZm
b3J0cywgc3RhcnRpbmcgZnJvbSBzY3JhdGNoIHRvIHJlY3JlYXRlIHdoYXRl
dmVyIHdhcyBsb3N0LgoKWW91IHNob3VsZCB1c2UgY29tbW9ubHkgb2NjdXJy
aW5nIHJlYWwgbGlmZSBkYXRhIGRpc2FzdGVyIHNjZW5hcmlvcyB0byBzaW11
bGF0ZSB3aGF0IHlvdXIgYmFja3VwcyB3aWxsIGFuZCB3b27igJl0IGRvIGlu
IGEgY3Jpc2lzLgoKKipDcmVhdGUgZGlzYXN0ZXIgcmVjb3ZlcnkgY2VudGVy
KioKCkFzIGEgcmVzdWx0LCBpbiB0aGUgZXZlbnQgb2YgdW5wbGFubmVkIGlu
dGVycnVwdGlvbnMgaW4gdGhlIGZ1bmN0aW9uaW5nIG9mIHRoZSBwcmltYXJ5
IGxvY2F0aW9uLCBzZXJ2aWNlIGFuZCBhbGwgb3BlcmF0aW9uYWwgYWN0aXZp
dGllcyBhcmUgc3dpdGNoZWQgdG8gdGhlIGJhY2t1cCBjZW50ZXIgYW5kIHRo
ZXJlZm9yZSB0aGUgdW5hdmFpbGFiaWxpdHkgb2Ygc2VydmljZXMgaXMgbGlt
aXRlZCB0byB0aGUgYWJzb2x1dGUgbWluaW11bS4KCkRvZXMgdGhlIGZhY2ls
aXR5IGhhdmUgc3VmZmljaWVudCBiYW5kd2lkdGggb3B0aW9ucyBhbmQgcG93
ZXIgdG8gc2NhbGUgYW5kIGRlYWwgd2l0aCB0aGUgaW5jcmVhc2VkIGxvYWQg
ZHVyaW5nIGEgbWFqb3IgZGlzYXN0ZXI/IEFyZSByZXNvdXJjZXMgYXZhaWxh
YmxlIHRvIHBlcmlvZGljYWxseSB0ZXN0IGZhaWxvdmVyPwoKKipDcmVhdGUg
cmVndWxhciBiYWNrdXBzIGFuZCB0ZXN0ZWQgaXQhKioKCkJhY2t1cHMgYXJl
IGEgd2F5IHRvIHByb3RlY3QgdGhlIGludmVzdG1lbnQgaW4gZGF0YS4gQnkg
aGF2aW5nIHNldmVyYWwgY29waWVzIG9mIHRoZSBkYXRhLCBpdCBkb2VzIG5v
dCBtYXR0ZXIgYXMgbXVjaCBpZiBvbmUgaXMgZGVzdHJveWVkICh0aGUgY29z
dCBpcyBvbmx5IHRoYXQgb2YgdGhlIHJlc3RvcmF0aW9uIG9mIHRoZSBsb3N0
IGRhdGEgZnJvbSB0aGUgYmFja3VwKS4KCldoZW4geW91IGxvc2UgZGF0YSwg
b25lIHRoaW5nIGlzIGNlcnRhaW46IGRvd250aW1lLgoKVG8gYXNzdXJlIHRo
ZSB2YWxpZGl0eSBhbmQgaW50ZWdyaXR5IG9mIGFueSBiYWNrdXAsIGl0J3Mg
ZXNzZW50aWFsIHRvIGNhcnJ5IG91dCByZWd1bGFyIHJlc3RvcmF0aW9uIHRl
c3RzLiBJZGVhbGx5LCBhIHRlc3Qgc2hvdWxkIGJlIGNvbmR1Y3RlZCBhZnRl
ciBldmVyeSBiYWNrdXAgY29tcGxldGVzIHRvIGVuc3VyZSBkYXRhIGNhbiBi
ZSBzdWNjZXNzZnVsbHkgc2VjdXJlZCBhbmQgcmVjb3ZlcmVkLiBIb3dldmVy
LCB0aGlzIG9mdGVuIGlzbid0IHByYWN0aWNhbCBkdWUgdG8gYSBsYWNrIG9m
IGF2YWlsYWJsZSByZXNvdXJjZXMgb3IgdGltZSBjb25zdHJhaW50cy4KCk1h
a2UgYmFja3VwcyBvZiBlbnRpcmUgdmlydHVhbCBtYWNoaW5lcyBhbmQgaW1w
b3J0YW50IGNvbXBvbmVudHMgaW4gdGhlIG1pZGRsZSBvZiB0aGVtLgoKKipD
cmVhdGUgc25hcHNob3RzOiB2bSwgZGlza3Mgb3IgbHZtKioKClNuYXBzaG90
cyBhcmUgcGVyZmVjdCBpZiB5b3Ugd2FudCB0byByZWNvdmVyIGEgc2VydmVy
IGZyb20gYSBwcmV2aW91cyBzdGF0ZSBidXQgaXQncyBvbmx5IGEgInF1aWNr
IG1ldGhvZCIsIGl0IGNhbm5vdCByZXN0b3JlIHRoZSBzeXN0ZW0gYWZ0ZXIg
dG9vIG1hbnkgaXRlbXMgY2hhbmdlZC4KCkNyZWF0ZSB0aGVtIGFsd2F5cyBi
ZWZvcmUgbWFraW5nIGNoYW5nZXMgb24gcHJvZHVjdGlvbiBlbnZpcm9ubWVu
dHMgKGFuZCBub3Qgb25seSkuCgpEaXNrIHNuYXBzaG90cyBhcmUgdXNlZCB0
byBnZW5lcmF0ZSBhIHNuYXBzaG90IG9mIGFuIGVudGlyZSBkaXNrLiBUaGVz
ZSBzbmFwc2hvdHMgZG9uJ3QgbWFrZSBpdCBlYXN5IHRvIHJlc3RvcmUgaW5k
aXZpZHVhbCBjaHVua3Mgb2YgZGF0YSAoZS5nLiBhIGxvc3QgdXNlciBhY2Nv
dW50KSwgdGhvdWdoIGl0J3MgcG9zc2libGUuIFRoZSBwcmltYXJ5IHB1cnBv
c2UgaXMgdG8gcmVzdG9yZSBlbnRpcmUgZGlza3MgaW4gY2FzZSBvZiBkaXNr
IGZhaWx1cmUuCgpUaGUgTFZNIHNuYXBzaG90cyBjYW4gYmUgcHJpbWFyaWx5
IHVzZWQgdG8gZWFzaWx5IGNvcHkgZGF0YSBmcm9tIHByb2R1Y3Rpb24gZW52
aXJvbm1lbnQgdG8gc3RhZ2luZyBlbnZpcm9ubWVudC4KClJlbWVtYmVyOiBT
bmFwc2hvdHMgYXJlIG5vdCBiYWNrdXBzIQoKKipEZXZlbG9wbWVudCBhbmQg
dGVzdGluZyBlbnZpcm9ubWVudHMqKgoKQSBwcm9kdWN0aW9uIGVudmlyb25t
ZW50IGlzIHRoZSByZWFsIGluc3RhbmNlIG9mIHRoZSBhcHBsaWNhdGlvbiBh
bmQgaXRzIGRhdGFiYXNlIHVzZWQgYnkgdGhlIGNvbXBhbnkgb3IgdGhlIGNs
aWVudHMuIFRoZSBwcm9kdWN0aW9uIGRhdGFiYXNlIGhhcyBhbGwgdGhlIHJl
YWwgZGF0YS4KClNldHRpbmcgdXAgZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRz
IGJhc2VkIGRpcmVjdGx5IG9uIHRoZSBwcm9kdWN0aW9uIGRhdGFiYXNlLCBp
bnN0ZWFkIG9mIHVzaW5nIGEgYmFja3VwIGZvciB0aGlzIChyZW1vdmluZyB0
aGUgbmVlZCBmb3IgdGhlIGFib3ZlKS4gRGV2IGFuZCB0ZXN0IGVudmlyb25t
ZW50IHRoYXQgeW91ciBlbmdpbmVlcnMgY2FuIGdldCB0byBhbmQgYSBwcm9k
IGVudmlyb25tZW50IHRoYXQgb25seSBhIGZldyBwZW9wbGUgY2FuIHB1c2gg
dXBkYXRlcyB0byBmb2xsb3dpbmcgYW4gYXBwcm92ZWQgY2hhbmdlLgoKQWxs
IGVudmlyb25tZW50cyBzdWNoIGFzIHByb2QsIGRldiBhbmQgdGVzdCBzaG91
bGQgaGF2ZSBvbmUgbWFqb3IgZGlmZmVyZW5jZTogYXV0aG9yaXphdGlvbiBk
YXRhIGZvciBzZXJ2aWNlcy4gRm9yIGV4YW1wbGUgcG9zdGdyZXMgZGF0YWJh
c2UgaW5zdGFuY2Ugb24gdGVzdGluZyBlbnZpcm9ubWVudCBzaG91bGQgYmUg
Y29uc2lzdGVudCAoaWYgcG9zc2libGUpIHdpdGggdGhlIHByb2R1Y3Rpb24g
YmFzZSwgaG93ZXZlciwgaW4gb3JkZXIgdG8gZWxpbWluYXRlIGVycm9ycyBv
ZiBkYXRhYmFzZSBuYW1lcyBhbmQgbG9naW5zIGFuZCBwYXNzd29yZHMgZm9y
IGF1dGhvcml6YXRpb24gc2hvdWxkIGJlIGRpZmZlcmVudC4KCioqU2luZ2xl
IHBvaW50IG9mIGZhaWx1cmUqKgoKVGhlIGdlbmVyYWwgbWV0aG9kIHRvIGF2
b2lkIHNpbmdsZSBwb2ludHMgb2YgZmFpbHVyZXMgaXMgdG8gcHJvdmlkZSBy
ZWR1bmRhbnQgY29tcG9uZW50cyBmb3IgZWFjaCBuZWNlc3NhcnkgcmVzb3Vy
Y2UsIHNvIHNlcnZpY2UgY2FuIGNvbnRpbnVlIGlmIGEgY29tcG9uZW50IGZh
aWxzLgoKKipTeW5jaHJvbml6YXRpb24gYW5kIHJlcGxpY2F0aW9uIHByb2Nl
c3MgZm9yIGRhdGFiYXNlcyoqCgpUaGUgcmVwbGljYXRpb24gcHJvY2VkdXJl
IGlzIHN1cGVyIGZyYWdpbGUgYW5kIHByb25lIHRvIGVycm9yLgoKQSBnb29k
IGlkZWEgaXMgYWxzbyBzbGlnaHRseSBsb25nZXIgZGVsYXkgb2YgZGF0YSBy
ZXBsaWNhdGlvbiAoZS5nLiBmb3IgRFJDKS4gQXMgaW4gcmVwbGljYXMsIHRo
ZSBkYXRhIGNoYW5nZXMgd2lsbCB1c3VhbGx5IGJlIHJlcGxpY2F0ZWQgd2l0
aGluIG1pbnV0ZXMsIHNvIHRoZSBsb3N0IGRhdGEgd29u4oCZdCBiZSBvbiB0
aGUgcmVwbGljYSBkYXRhYmFzZSBlaXRoZXIgb25jZSB0aGF0IGhhcHBlbnMu
CgoqKkNyZWF0ZSBkYXRhYmFzZSBtb2RlbCB3aXRoIHVzZXJzLCByb2xlcyBh
bmQgcmlnaHRzLCB1c2UgZGlmZmVyZW50IG1ldGhvZHMgb2YgcHJvdGVjdGlv
bioqCgpPbmx5IHZlcnkgYWR2YW5jZWQgZGV2cyBoYXZlIHBlcm1pc3Npb25z
IGZvciBkYiBhZG1pbiBhY2Nlc3MuIFRoZSBvdGhlciByZWFsbHkgZG9uJ3Qg
bmVlZCB3cml0ZSBhY2Nlc3MgdG8gY2xvbmUgYSBkYXRhYmFzZS4gT24gdGhl
IG90aGVyIGhhbmQganVzdCBkb24ndCBnaXZlIGEgZGV2ZWxvcGVyIHdyaXRl
IGFjY2VzcyB0byBwcm9kLgoKVGhlIHByb2R1Y3Rpb24gZGF0YWJhc2Ugc2hv
dWxkIHJlZnVzZSBjb25uZWN0aW9ucyBmcm9tIGFueSBzZXJ2ZXIgYW5kIHBj
IHdoaWNoIGlzbid0IHRoZSBvbmUgcnVubmluZyB0aGUgcHJvZHVjdGlvbiBh
cHBsaWNhdGlvbiwgZXZlbiBpZiBpdCBwcm92aWRlcyBhIHZhbGlkIHVzZXJu
YW1lL3Bhc3N3b3JkLgoKSG93IHRoZSBoZWxsIGRldmVsb3BtZW50IG1hY2hp
bmVzIGNhbiBhY2Nlc3MgYSBwcm9kdWN0aW9uIGRhdGFiYXNlIHJpZ2h0IGxp
a2UgdGhhdD8gSG93IGFib3V0IGEgc2ltcGxlIGZpcmV3YWxsIHJ1bGUgdG8g
anVzdCBsZXQgdGhlIHNlcnZlcnMgbmVlZGluZyB0aGUgREIgZGF0YSBhY2Nl
c3MgdGhlIGRhdGFiYXNlPwoKKipDcmVhdGUgc3VtbWFyeS9wb3N0bW9ydGVt
IGRvY3VtZW50cyBhZnRlciBmYWlsdXJlcyoqCgpUaGUgcG9zdC1tb3J0ZW0g
YXVkaWVuY2UgaW5jbHVkZXMgY3VzdG9tZXJzLCBkaXJlY3QgcmVwb3J0cywg
cGVlcnMsIHRoZSBjb21wYW55J3MgZXhlY3V0aXZlIHRlYW0gYW5kIG9mdGVu
IGludmVzdG9ycy4KCkV4cGxhaW4gd2hhdCBjYXVzZWQgdGhlIG91dGFnZSBv
biBhIHRpbWVsaW5lLiBFdmVyeSBpbmNpZGVudCBiZWdpbnMgd2l0aCBhIHNw
ZWNpZmljIHRyaWdnZXIgYXQgYSBzcGVjaWZpYyB0aW1lLCB3aGljaCBvZnRl
biBjYXVzZXMgc29tZSB1bmV4cGVjdGVkIGJlaGF2aW9yLiBGb3IgZXhhbXBs
ZSwgb3VyIHNlcnZlcnMgd2VyZSByZWJvb3RlZCBhbmQgd2UgZXhwZWN0ZWQg
dGhlbSB0byBjb21lIGJhY2sgdXAgaW50YWN0LCB3aGljaCBkaWRuJ3QgaGFw
cGVuLgoKRnVydGhlcm1vcmUsIGV2ZXJ5IGluY2lkZW50IGhhcyBhIHJvb3Qg
Y2F1c2U6IHRoZSByZWJvb3QgaXRzZWxmIHdhcyB0cmlnZ2VyLCBob3dldmVy
IGEgYnVnIGluIHRoZSBkcml2ZXIgY2F1c2VkIHRoZSBhY3R1YWwgb3V0YWdl
LiBGaW5hbGx5LCB0aGVyZSBhcmUgY29uc2VxdWVuY2VzIHRvIGV2ZXJ5IGlu
Y2lkZW50LCB0aGUgbW9zdCBvYnZpb3VzIG9uZSBpcyB0aGF0IHRoZSBzaXRl
IGdvZXMgZG93bi4KClRoZSBwb3N0LW1vcnRlbSBhbnN3ZXJzIHRoZSBzaW5n
bGUgbW9zdCBpbXBvcnRhbnQgcXVlc3Rpb24gb2Ygd2hhdCBjb3VsZCBoYXZl
IHByZXZlbnRlZCB0aGUgb3V0YWdlLgoKRGVzcGl0ZSBob3cgcGFpbmZ1bCBh
biBvdXRhZ2UgbWF5IGhhdmUgYmVlbiwgdGhlIHdvcnN0IHRoaW5nIHlvdSBj
YW4gZG8gaXMgdG8gYnVyeSBpdCBhbmQgbmV2ZXIgcHJvcGVybHkgY2xvc2Ug
dGhlIGluY2lkZW50IGluIGEgY2xlYXIgYW5kIHRyYW5zcGFyZW50IHdheS4K
CioqSWYgeW91IGFsc28gbWFkZSBhIGJpZyBtaXN0YWtlLi4uKioKCiAgPiAi
Kkh1bWFucyBhcmUganVzdCBhcGVzIHdpdGggYmlnZ2VyIGNvbXB1dGVycy4q
IiAtIGFmcmljYW5fY2hlZXRhaCAoUmVkZGl0KQogID4KICA+ICIqSSd2ZSBj
b21lIHRvIGFwcHJlY2lhdGUgbm90IGhhdmluZyBhY2Nlc3MgdG8gdGhpbmdz
IEkgZG9uJ3QgYWJzb2x1dGVseSBuZWVkLioiIC0gd2FybV92YW5pbGxhX3N1
Z2FyIChSZWRkaXQpCiAgPgogID4gRG9jdW1lbnQgd2hhdGV2ZXIgaGFwcGVu
ZWQgc29tZXdoZXJlLiBXcml0ZSBzZXR1cCBndWlkZXMuIEZhaWx1cmUgaXMg
aW5zdHJ1Y3RpdmUuCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbQWNjaWRlbnRh
bGx5IGRlc3Ryb3llZCBwcm9kdWN0aW9uIGRhdGFiYXNlIG9uIGZpcnN0IGRh
eSBvZiBhIGpvYi4uLl0oaHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL2NzY2Fy
ZWVycXVlc3Rpb25zL2NvbW1lbnRzLzZlejhhZy9hY2NpZGVudGFsbHlfZGVz
dHJveWVkX3Byb2R1Y3Rpb25fZGF0YWJhc2Vfb24vKQotIFtQb3N0bW9ydGVt
IG9mIGRhdGFiYXNlIG91dGFnZSBvZiBKYW51YXJ5IDMxXShodHRwczovL2Fi
b3V0LmdpdGxhYi5jb20vMjAxNy8wMi8xMC9wb3N0bW9ydGVtLW9mLWRhdGFi
YXNlLW91dGFnZS1vZi1qYW51YXJ5LTMxLykKLSBbSG93IHRvIHdyaXRlIGFu
IEluY2lkZW50IFJlcG9ydC9Qb3N0bW9ydGVtXShodHRwczovL3N5c2FkbWlu
Y2FzdHMuY29tL2VwaXNvZGVzLzIwLWhvdy10by13cml0ZS1hbi1pbmNpZGVu
dC1yZXBvcnQtcG9zdG1vcnRlbSkKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8
c3VtbWFyeT48Yj5Ib3cgdG8gYWRkIG5ldyBkaXNrIGluIExpbnV4IHNlcnZl
ciB3aXRob3V0IHJlYm9vdGluZz8gSG93IHRvIHJlc2NhbiBhbmQgYWRkIGl0
IGluIExWTT88L2I+PC9zdW1tYXJ5Pjxicj4KClRvIGJlIGNvbXBsZXRlZC4K
ClVzZWZ1bCByZXNvdXJjZXM6CgotIFtIb3cgdG8gQWRkIE5ldyBEaXNrIGlu
IExpbnV4IENlbnRPUyA3IFdpdGhvdXQgUmVib290aW5nXShodHRwczovL2xp
bm94aWRlLmNvbS9saW51eC1ob3ctdG8vYWRkLW5ldy1kaXNrLWNlbnRvcy03
LXdpdGhvdXQtcmVib290aW5nLykKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8
c3VtbWFyeT48Yj5FeHBsYWluIGVhY2ggc3lzdGVtIGNhbGxzIHVzZWQgZm9y
IHByb2Nlc3MgbWFuYWdlbWVudCBpbiBMaW51eC48L2I+PC9zdW1tYXJ5Pjxi
cj4KClRoZXJlIGFyZSBzb21lIHN5c3RlbSBjYWxscyBmb3IgcHJvY2VzcyBt
YW5hZ2VtZW50LiBUaGVzZSBhcmUgYXMgZm9sbG93czoKCi0gYGZvcmsoKWA6
IGl0IGlzIHVzZWQgdG8gY3JlYXRlIGEgbmV3IHByb2Nlc3MKLSBgZXhlYygp
YDogaXQgaXMgdXNlZCB0byBleGVjdXRlIGEgbmV3IHByb2Nlc3MKLSBgd2Fp
dCgpYDogaXQgaXMgdXNlZCB0byBtYWtlIHRoZSBwcm9jZXNzIHRvIHdhaXQK
LSBgZXhpdCgpYDogaXQgaXMgdXNlZCB0byBleGl0IG9yIHRlcm1pbmF0ZSB0
aGUgcHJvY2VzcwotIGBnZXRwaWQoKWA6IGl0IGlzIHVzZWQgdG8gZmluZCB0
aGUgdW5pcXVlIHByb2Nlc3MgSUQKLSBgZ2V0cHBpZCgpYDogaXQgaXMgdXNl
ZCB0byBjaGVjayB0aGUgcGFyZW50IHByb2Nlc3MgSUQKLSBgbmljZSgpYDog
aXQgaXMgdXNlZCB0byBiaWFzIHRoZSBjdXJyZW50bHkgcnVubmluZyBwcm9j
ZXNzIHByb3BlcnR5CgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbU3lzdGVtIENh
bGxzXShodHRwOi8vZmFjdWx0eS5zYWxpbmEuay1zdGF0ZS5lZHUvdGltL29z
c2cvSW50cm9kdWN0aW9uL3N5c19jYWxscy5odG1sKQoKPC9kZXRhaWxzPgoK
PGRldGFpbHM+CjxzdW1tYXJ5PjxiPkNhbuKAmXQgbW91bnQgdGhlIHJvb3Qg
ZmlsZSBzeXN0ZW0uIFdoeT8gKioqPC9iPjwvc3VtbWFyeT48YnI+CgpUbyBi
ZSBjb21wbGV0ZWQuCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbV2hhdCBkb2Vz
ICJtb3VudGluZyBhIHJvb3QgZmlsZSBzeXN0ZW0iIG1lYW4gZXhhY3RseT9d
KGh0dHBzOi8vc3VwZXJ1c2VyLmNvbS9xdWVzdGlvbnMvMTkzOTE4L3doYXQt
ZG9lcy1tb3VudGluZy1hLXJvb3QtZmlsZS1zeXN0ZW0tbWVhbi1leGFjdGx5
KQotIFtIb3cgZG9lcyBhIGtlcm5lbCBtb3VudCB0aGUgcm9vdCBwYXJ0aXRp
b24/XShodHRwczovL3VuaXguc3RhY2tleGNoYW5nZS5jb20vcXVlc3Rpb25z
Lzk5NDQvaG93LWRvZXMtYS1rZXJuZWwtbW91bnQtdGhlLXJvb3QtcGFydGl0
aW9uKQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPllvdSBo
YXZlIHRvIGRlbGV0ZSAxMDBHQiBmaWxlcy4gV2hpY2ggbWV0aG9kIHdpbGwg
YmUgdGhlIG1vc3Qgb3B0aW1hbD8gKioqPC9iPjwvc3VtbWFyeT48YnI+CgpU
byBiZSBjb21wbGV0ZWQuCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbSXMgdGhl
cmUgYSB3YXkgdG8gZGVsZXRlIDEwMEdCIGZpbGUgb24gTGludXggd2l0aG91
dCB0aHJhc2hpbmcgSU8vbG9hZD9dKGh0dHBzOi8vc2VydmVyZmF1bHQuY29t
L3F1ZXN0aW9ucy8zMzY5MTcvaXMtdGhlcmUtYS13YXktdG8tZGVsZXRlLTEw
MGdiLWZpbGUtb24tbGludXgtd2l0aG91dC10aHJhc2hpbmctaW8tbG9hZCkK
LSBbcm0gb24gYSBkaXJlY3Rvcnkgd2l0aCBtaWxsaW9ucyBvZiBmaWxlc10o
aHR0cHM6Ly9zZXJ2ZXJmYXVsdC5jb20vcXVlc3Rpb25zLzE4MzgyMS9ybS1v
bi1hLWRpcmVjdG9yeS13aXRoLW1pbGxpb25zLW9mLWZpbGVzKQoKPC9kZXRh
aWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPkV4cGxhaW4gaW50ZXJydXB0
cyBhbmQgaW50ZXJydXB0IGhhbmRsZXJzIGluIExpbnV4LjwvYj48L3N1bW1h
cnk+PGJyPgoKSGVyZSdzIGEgaGlnaC1sZXZlbCB2aWV3IG9mIHRoZSBsb3ct
bGV2ZWwgcHJvY2Vzc2luZy4gSSdtIGRlc2NyaWJpbmcgYSBzaW1wbGUgdHlw
aWNhbCBhcmNoaXRlY3R1cmUsIHJlYWwgYXJjaGl0ZWN0dXJlcyBjYW4gYmUg
bW9yZSBjb21wbGV4IG9yIGRpZmZlciBpbiB3YXlzIHRoYXQgZG9uJ3QgbWF0
dGVyIGF0IHRoaXMgbGV2ZWwgb2YgZGV0YWlsLgoKV2hlbiBhbiAqKmludGVy
cnVwdCoqIG9jY3VycywgdGhlIHByb2Nlc3NvciBsb29rcyBpZiBpbnRlcnJ1
cHRzIGFyZSBtYXNrZWQuIElmIHRoZXkgYXJlLCBub3RoaW5nIGhhcHBlbnMg
dW50aWwgdGhleSBhcmUgdW5tYXNrZWQuIFdoZW4gaW50ZXJydXB0cyBiZWNv
bWUgdW5tYXNrZWQsIGlmIHRoZXJlIGFyZSBhbnkgcGVuZGluZyBpbnRlcnJ1
cHRzLCB0aGUgcHJvY2Vzc29yIHBpY2tzIG9uZS4KClRoZW4gdGhlIHByb2Nl
c3NvciBleGVjdXRlcyB0aGUgaW50ZXJydXB0IGJ5IGJyYW5jaGluZyB0byBh
IHBhcnRpY3VsYXIgYWRkcmVzcyBpbiBtZW1vcnkuIFRoZSBjb2RlIGF0IHRo
YXQgYWRkcmVzcyBpcyBjYWxsZWQgdGhlICoqaW50ZXJydXB0IGhhbmRsZXIq
Ki4gV2hlbiB0aGUgcHJvY2Vzc29yIGJyYW5jaGVzIHRoZXJlLCBpdCBtYXNr
cyBpbnRlcnJ1cHRzIChzbyB0aGUgaW50ZXJydXB0IGhhbmRsZXIgaGFzIGV4
Y2x1c2l2ZSBjb250cm9sKSBhbmQgc2F2ZXMgdGhlIGNvbnRlbnRzIG9mIHNv
bWUgcmVnaXN0ZXJzIGluIHNvbWUgcGxhY2UgKHR5cGljYWxseSBvdGhlciBy
ZWdpc3RlcnMpLgoKVGhlIGludGVycnVwdCBoYW5kbGVyIGRvZXMgd2hhdCBp
dCBtdXN0IGRvLCB0eXBpY2FsbHkgYnkgY29tbXVuaWNhdGluZyB3aXRoIHRo
ZSBwZXJpcGhlcmFsIHRoYXQgdHJpZ2dlcmVkIHRoZSBpbnRlcnJ1cHQgdG8g
c2VuZCBvciByZWNlaXZlIGRhdGEuIElmIHRoZSBpbnRlcnJ1cHQgd2FzIHJh
aXNlZCBieSB0aGUgdGltZXIsIHRoZSBoYW5kbGVyIG1pZ2h0IHRyaWdnZXIg
dGhlIE9TIHNjaGVkdWxlciwgdG8gc3dpdGNoIHRvIGEgZGlmZmVyZW50IHRo
cmVhZC4gV2hlbiB0aGUgaGFuZGxlciBmaW5pc2hlcyBleGVjdXRpbmcsIGl0
IGV4ZWN1dGVzIGEgc3BlY2lhbCByZXR1cm4tZnJvbS1pbnRlcnJ1cHQgaW5z
dHJ1Y3Rpb24gdGhhdCByZXN0b3JlcyB0aGUgc2F2ZWQgcmVnaXN0ZXJzIGFu
ZCB1bm1hc2tzIGludGVycnVwdHMuCgpUaGUgaW50ZXJydXB0IGhhbmRsZXIg
bXVzdCBydW4gcXVpY2tseSwgYmVjYXVzZSBpdCdzIHByZXZlbnRpbmcgYW55
IG90aGVyIGludGVycnVwdCBmcm9tIHJ1bm5pbmcuIEluIHRoZSBMaW51eCBr
ZXJuZWwsIGludGVycnVwdCBwcm9jZXNzaW5nIGlzIGRpdmlkZWQgaW4gdHdv
IHBhcnRzOgoKLSBUaGUgInRvcCBoYWxmIiBpcyB0aGUgaW50ZXJydXB0IGhh
bmRsZXIuIEl0IGRvZXMgdGhlIG1pbmltdW0gbmVjZXNzYXJ5LCB0eXBpY2Fs
bHkgY29tbXVuaWNhdGUgd2l0aCB0aGUgaGFyZHdhcmUgYW5kIHNldCBhIGZs
YWcgc29tZXdoZXJlIGluIGtlcm5lbCBtZW1vcnkuCi0gVGhlICJib3R0b20g
aGFsZiIgZG9lcyBhbnkgb3RoZXIgbmVjZXNzYXJ5IHByb2Nlc3NpbmcsIGZv
ciBleGFtcGxlIGNvcHlpbmcgZGF0YSBpbnRvIHByb2Nlc3MgbWVtb3J5LCB1
cGRhdGluZyBrZXJuZWwgZGF0YSBzdHJ1Y3R1cmVzLCBldGMuIEl0IGNhbiB0
YWtlIGl0cyB0aW1lIGFuZCBldmVuIGJsb2NrIHdhaXRpbmcgZm9yIHNvbWUg
b3RoZXIgcGFydCBvZiB0aGUgc3lzdGVtIHNpbmNlIGl0IHJ1bnMgd2l0aCBp
bnRlcnJ1cHRzIGVuYWJsZWQuCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbSG93
IGlzIGFuIEludGVycnVwdCBoYW5kbGVkIGluIExpbnV4PyAob3JpZ2luYWwp
XShodHRwczovL3VuaXguc3RhY2tleGNoYW5nZS5jb20vcXVlc3Rpb25zLzU3
ODgvaG93LWlzLWFuLWludGVycnVwdC1oYW5kbGVkLWluLWxpbnV4KQotIFtJ
bnRlcnJ1cHRzIGFuZCBJbnRlcnJ1cHQgSGFuZGxlcnNdKGh0dHBzOi8vbm90
ZXMuc2hpY2hhby5pby9sa2QvY2g3LykKCjwvZGV0YWlscz4KCjxkZXRhaWxz
Pgo8c3VtbWFyeT48Yj5XaGF0IGNvbnNpZGVyYXRpb25zIGNvbWUgaW50byBw
bGF5IHdoZW4gZGVzaWduaW5nIGEgaGlnaGx5IGF2YWlsYWJsZSBhcHBsaWNh
dGlvbiwgYm90aCBhdCB0aGUgYXJjaGl0ZWN0dXJlIGxldmVsIGFuZCB0aGUg
YXBwbGljYXRpb24gbGV2ZWw/ICoqKjwvYj48L3N1bW1hcnk+PGJyPgoKVG8g
YmUgY29tcGxldGVkLgoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5
PjxiPldoYXQgZmllbGRzIGFyZSBzdG9yZWQgaW4gYW4gaW5vZGU/PC9iPjwv
c3VtbWFyeT48YnI+CgpXaXRoaW4gYSBQT1NJWCBzeXN0ZW0sIGEgZmlsZSBo
YXMgdGhlIGZvbGxvd2luZyBhdHRyaWJ1dGVzIHdoaWNoIG1heSBiZSByZXRy
aWV2ZWQgYnkgdGhlIHN0YXQgc3lzdGVtIGNhbGw6CgotICoqRGV2aWNlIElE
KiogKHRoaXMgaWRlbnRpZmllcyB0aGUgZGV2aWNlIGNvbnRhaW5pbmcgdGhl
IGZpbGU7IHRoYXQgaXMsIHRoZSBzY29wZSBvZiB1bmlxdWVuZXNzIG9mIHRo
ZSBzZXJpYWwgbnVtYmVyKS4KRmlsZSBzZXJpYWwgbnVtYmVycwotIFRoZSAq
KmZpbGUgbW9kZSoqIHdoaWNoIGRldGVybWluZXMgdGhlIGZpbGUgdHlwZSBh
bmQgaG93IHRoZSBmaWxlJ3Mgb3duZXIsIGl0cyBncm91cCwgYW5kIG90aGVy
cyBjYW4gYWNjZXNzIHRoZSBmaWxlCi0gQSAqKmxpbmsgY291bnQqKiB0ZWxs
aW5nIGhvdyBtYW55IGhhcmQgbGlua3MgcG9pbnQgdG8gdGhlIGlub2RlCi0g
VGhlICoqVXNlciBJRCoqIG9mIHRoZSBmaWxlJ3Mgb3duZXIKLSBUaGUgKipH
cm91cCBJRCoqIG9mIHRoZSBmaWxlCi0gVGhlICoqZGV2aWNlIElEKiogb2Yg
dGhlIGZpbGUgaWYgaXQgaXMgYSBkZXZpY2UgZmlsZS4KLSBUaGUgKipzaXpl
IG9mIHRoZSBmaWxlKiogaW4gYnl0ZXMKLSAqKlRpbWVzdGFtcHMqKiB0ZWxs
aW5nIHdoZW4gdGhlIGlub2RlIGl0c2VsZiB3YXMgbGFzdCBtb2RpZmllZCAo
Y3RpbWUsIGlub2RlIGNoYW5nZSB0aW1lKSwgdGhlIGZpbGUgY29udGVudCBs
YXN0IG1vZGlmaWVkIChtdGltZSwgbW9kaWZpY2F0aW9uIHRpbWUpLCBhbmQg
bGFzdCBhY2Nlc3NlZCAoYXRpbWUsIGFjY2VzcyB0aW1lKQotIFRoZSBwcmVm
ZXJyZWQgKipJL08gYmxvY2sgc2l6ZSoqCi0gVGhlICoqbnVtYmVyIG9mIGJs
b2NrcyoqIGFsbG9jYXRlZCB0byB0aGlzIGZpbGUKClVzZWZ1bCByZXNvdXJj
ZXM6CgotIFtJbm9kZXMgLSBhbiBJbnRyb2R1Y3Rpb25dKGh0dHA6Ly93d3cu
Z3J5bW9pcmUuY29tL1VuaXgvSW5vZGVzLmh0bWwpCgo8L2RldGFpbHM+Cgo8
ZGV0YWlscz4KPHN1bW1hcnk+PGI+T3JkaW5hcnkgdXNlcnMgYXJlIGFibGUg
dG8gcmVhZCA8Y29kZT4vZXRjL3Bhc3N3ZDwvY29kZT4uIElzIGl0IGEgc2Vj
dXJpdHkgaG9sZT8gRG8geW91IGtub3cgb3RoZXIgcGFzc3dvcmQgc2hhZG93
aW5nIHNjaGVtZT88L2I+PC9zdW1tYXJ5Pjxicj4KClR5cGljYWxseSwgdGhl
IF9oYXNoZWQgcGFzc3dvcmRzXyBhcmUgc3RvcmVkIGluIGAvZXRjL3NoYWRv
d2Agb24gbW9zdCBMaW51eCBzeXN0ZW1zOgoKYGBgYmFzaAotcnctci0tLS0t
IDEgcm9vdCBzaGFkb3cgMTM0OSAyMDE2LTA3LTAzIDAzOjU0IC9ldGMvc2hh
ZG93CmBgYAoKVGhleSBhcmUgc3RvcmVkIGluIGAvZXRjL21hc3Rlci5wYXNz
d2RgIG9uIEJTRCBzeXN0ZW1zLgoKUHJvZ3JhbXMgdGhhdCBuZWVkIHRvIHBl
cmZvcm0gYXV0aGVudGljYXRpb24gc3RpbGwgbmVlZCB0byBydW4gd2l0aCBg
cm9vdGAgcHJpdmlsZWdlczoKCmBgYGJhc2gKLXJ3c3IteHIteCAxIHJvb3Qg
cm9vdCA0Mjc5MiAyMDE2LTAyLTE0IDE0OjEzIC91c3IvYmluL3Bhc3N3ZApg
YGAKCklmIHlvdSBkaXNsaWtlIHRoZSBgc2V0dWlkIHJvb3RgIHByb2dyYW1z
IGFuZCBvbmUgc2luZ2xlIGZpbGUgY29udGFpbmluZyBhbGwgdGhlIGhhc2hl
ZCBwYXNzd29yZHMgb24geW91ciBzeXN0ZW0sIHlvdSBjYW4gcmVwbGFjZSBp
dCB3aXRoIHRoZSAqKk9wZW53YWxsIFRDQiBQQU0gbW9kdWxlKiouIFRoaXMg
cHJvdmlkZXMgZXZlcnkgc2luZ2xlIHVzZXIgd2l0aCB0aGVpciBvd24gZmls
ZSBmb3Igc3RvcmluZyB0aGVpciBoYXNoZWQgcGFzc3dvcmQgLSBhcyBhIHJl
c3VsdCB0aGUgbnVtYmVyIG9mIGBzZXR1aWQgcm9vdGAgcHJvZ3JhbXMgb24g
dGhlIHN5c3RlbSBjYW4gYmUgZHJhc3RpY2FsbHkgcmVkdWNlZC4KClVzZWZ1
bCByZXNvdXJjZXM6CgotIFtPcmRpbmFyeSB1c2VycyBhcmUgYWJsZSB0byBy
ZWFkIC9ldGMvcGFzc3dkLCBpcyB0aGlzIGEgc2VjdXJpdHkgaG9sZT8gKG9y
aWdpbmFsKV0oaHR0cHM6Ly9zZXJ2ZXJmYXVsdC5jb20vcXVlc3Rpb25zLzI4
NjY1NC9vcmRpbmFyeS11c2Vycy1hcmUtYWJsZS10by1yZWFkLWV0Yy1wYXNz
d2QtaXMtdGhpcy1hLXNlY3VyaXR5LWhvbGUvMjg2NjU3IzI4NjY1NykKLSBb
dGNiIC0gdGhlIGFsdGVybmF0aXZlIHRvIC9ldGMvc2hhZG93XShodHRwczov
L3d3dy5vcGVud2FsbC5jb20vdGNiLykKLSBbV2h5IHNoYWRvdyB5b3VyIHBh
c3N3ZCBmaWxlP10oaHR0cHM6Ly93d3cudGxkcC5vcmcvSE9XVE8vU2hhZG93
LVBhc3N3b3JkLUhPV1RPLTIuaHRtbCkKCjwvZGV0YWlscz4KCjxkZXRhaWxz
Pgo8c3VtbWFyeT48Yj5XaGF0IGFyZSBzb21lIG9mIHRoZSBiZW5lZml0cyBv
ZiB1c2luZyBzeXN0ZW1kIG92ZXIgU3lzViBpbml0PyAqKio8L2I+PC9zdW1t
YXJ5Pjxicj4KClRvIGJlIGNvbXBsZXRlZC4KCjwvZGV0YWlscz4KCjxkZXRh
aWxzPgo8c3VtbWFyeT48Yj5Ib3cgZG8geW91IHJ1biBjb21tYW5kIGV2ZXJ5
IHRpbWUgYSBmaWxlIGlzIG1vZGlmaWVkPzwvYj48L3N1bW1hcnk+PGJyPgoK
Rm9yIGV4YW1wbGU6CgpgYGBiYXNoCndoaWxlIGlub3RpZnl3YWl0IC1lIGNs
b3NlX3dyaXRlIGZpbGVuYW1lIDsgZG8KCiAgZWNobyAiY2hhbmdlZCIgPj4g
L3Zhci9sb2cvY2hhbmdlZAoKZG9uZQpgYGAKCjwvZGV0YWlscz4KCjxkZXRh
aWxzPgo8c3VtbWFyeT48Yj5Zb3UgbmVlZCB0byBjb3B5IGEgbGFyZ2UgYW1v
dW50IG9mIGRhdGEuIEV4cGxhaW4gdGhlIG1vc3QgZWZmZWN0aXZlIHdheS4g
KioqPC9iPjwvc3VtbWFyeT48YnI+CgpUbyBiZSBjb21wbGV0ZWQuCgpVc2Vm
dWwgcmVzb3VyY2VzOgoKLSBbQ29weWluZyBhIGxhcmdlIGRpcmVjdG9yeSB0
cmVlIGxvY2FsbHk/IGNwIG9yIHJzeW5jP10oaHR0cHM6Ly9zZXJ2ZXJmYXVs
dC5jb20vcXVlc3Rpb25zLzQzMDE0L2NvcHlpbmctYS1sYXJnZS1kaXJlY3Rv
cnktdHJlZS1sb2NhbGx5LWNwLW9yLXJzeW5jKQoKPC9kZXRhaWxzPgoKPGRl
dGFpbHM+CjxzdW1tYXJ5PjxiPlRlbGwgbWUgYWJvdXQgdGhlIGRhbmdlcnMg
YW5kIGNhdmVhdHMgb2YgTFZNLjwvYj48L3N1bW1hcnk+PGJyPgoKKipSaXNr
cyBvZiB1c2luZyBMVk0qKgoKLSBWdWxuZXJhYmxlIHRvIHdyaXRlIGNhY2hp
bmcgaXNzdWVzIHdpdGggU1NEIG9yIFZNIGh5cGVydmlzb3IKLSBIYXJkZXIg
dG8gcmVjb3ZlciBkYXRhIGR1ZSB0byBtb3JlIGNvbXBsZXggb24tZGlzayBz
dHJ1Y3R1cmVzCi0gSGFyZGVyIHRvIHJlc2l6ZSBmaWxlc3lzdGVtcyBjb3Jy
ZWN0bHkKLSBTbmFwc2hvdHMgYXJlIGhhcmQgdG8gdXNlLCBzbG93IGFuZCBi
dWdneQotIFJlcXVpcmVzIHNvbWUgc2tpbGwgdG8gY29uZmlndXJlIGNvcnJl
Y3RseSBnaXZlbiB0aGVzZSBpc3N1ZXMKClVzZWZ1bCByZXNvdXJjZXM6Cgot
IFtMVk0gZGFuZ2VycyBhbmQgY2F2ZWF0cyAob3JpZ2luYWwpXShodHRwczov
L3NlcnZlcmZhdWx0LmNvbS9xdWVzdGlvbnMvMjc5NTcxL2x2bS1kYW5nZXJz
LWFuZC1jYXZlYXRzKQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5
PjxiPlB5dGhvbiBkZXYgdGVhbSBpbiB5b3VyIGNvbXBhbnkgaGF2ZSBhIGRp
bGVtbWEgd2hhdCB0byBjaG9vc2U6IHV3c2dpIG9yIGd1bmljb3JuLiBXaGF0
IGFyZSB0aGUgcHJvcy9jb25zIG9mIGVhY2ggb2YgdGhlIHNvbHV0aW9ucyBm
cm9tIHRoZSBhZG1pbidzIHBlcnNwZWN0aXZlPyAqKio8L2I+PC9zdW1tYXJ5
Pjxicj4KClRvIGJlIGNvbXBsZXRlZC4KClVzZWZ1bCByZXNvdXJjZXM6Cgot
IFt1V1NHSSB2cy4gR3VuaWNvcm4sIG9yIEhvdyB0byBNYWtlIFB5dGhvbiBH
byBGYXN0ZXIgdGhhbiBOb2RlXShodHRwczovL2Jsb2cua2dyaWZmcy5jb20v
MjAxMi8xMi8xOC91d3NnaS12cy1ndW5pY29ybi12cy1ub2RlLWJlbmNobWFy
a3MuaHRtbCkKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5X
aGF0IGlmIDxjb2RlPmtpbGwgLTk8L2NvZGU+IGRvZXMgbm90IHdvcms/IERl
c2NyaWJlIGV4Y2VwdGlvbnMgZm9yIHdoaWNoIHRoZSB1c2Ugb2YgU0lHS0lM
TCBpcyBpbnN1ZmZpY2llbnQuPC9iPjwvc3VtbWFyeT48YnI+Cgpga2lsbCAt
OWAgKGBTSUdLSUxMYCkgYWx3YXlzIHdvcmtzLCBwcm92aWRlZCB5b3UgaGF2
ZSB0aGUgcGVybWlzc2lvbiB0byBraWxsIHRoZSBwcm9jZXNzLiBCYXNpY2Fs
bHkgZWl0aGVyIHRoZSBwcm9jZXNzIG11c3QgYmUgc3RhcnRlZCBieSB5b3Ug
YW5kIG5vdCBiZSBzZXR1aWQgb3Igc2V0Z2lkLCBvciB5b3UgbXVzdCBiZSBy
b290LiBUaGVyZSBpcyBvbmUgZXhjZXB0aW9uOiBldmVuIHJvb3QgY2Fubm90
IHNlbmQgYSBmYXRhbCBzaWduYWwgdG8gUElEIDEgKHRoZSBpbml0IHByb2Nl
c3MpLgoKSG93ZXZlciBga2lsbCAtOWAgaXMgbm90IGd1YXJhbnRlZWQgdG8g
d29yayBpbW1lZGlhdGVseS4gQWxsIHNpZ25hbHMsIGluY2x1ZGluZyBgU0lH
S0lMTGAsIGFyZSBkZWxpdmVyZWQgYXN5bmNocm9ub3VzbHk6IHRoZSBrZXJu
ZWwgbWF5IHRha2UgaXRzIHRpbWUgdG8gZGVsaXZlciB0aGVtLiBVc3VhbGx5
LCBkZWxpdmVyaW5nIGEgc2lnbmFsIHRha2VzIGF0IG1vc3QgYSBmZXcgbWlj
cm9zZWNvbmRzLCBqdXN0IHRoZSB0aW1lIGl0IHRha2VzIGZvciB0aGUgdGFy
Z2V0IHRvIGdldCBhIHRpbWUgc2xpY2UuIEhvd2V2ZXIsIGlmIHRoZSB0YXJn
ZXQgaGFzIGJsb2NrZWQgdGhlIHNpZ25hbCwgdGhlIHNpZ25hbCB3aWxsIGJl
IHF1ZXVlZCB1bnRpbCB0aGUgdGFyZ2V0IHVuYmxvY2tzIGl0LgoKTm9ybWFs
bHksIHByb2Nlc3NlcyBjYW5ub3QgYmxvY2sgYFNJR0tJTExgLiBCdXQga2Vy
bmVsIGNvZGUgY2FuLCBhbmQgcHJvY2Vzc2VzIGV4ZWN1dGUga2VybmVsIGNv
ZGUgd2hlbiB0aGV5IGNhbGwgc3lzdGVtIGNhbGxzLgoKQSBwcm9jZXNzIGJs
b2NrZWQgaW4gYSBzeXN0ZW0gY2FsbCBpcyBpbiB1bmludGVycnVwdGlibGUg
c2xlZXAuIFRoZSBgcHNgIG9yIGB0b3BgIGNvbW1hbmQgd2lsbCAob24gbW9z
dCB1bmljZXMpIHNob3cgaXQgaW4gc3RhdGUgKipEKiouCgpUbyByZW1vdmUg
YSAqKkQqKiBTdGF0ZSBQcm9jZXNzLCBzaW5jZSBpdCBpcyB1bmludGVycnVw
dGlibGUsIG9ubHkgYSBtYWNoaW5lIHJlYm9vdCBjYW4gc29sdmUgdGhlIHBy
b2JsZW0gaW4gY2FzZSBpdHMgbm90IGF1dG9tYXRpY2FsbHkgaGFuZGxlZCBi
eSB0aGUgc3lzdGVtLgoKVXN1YWxseSB0aGVyZSBpcyBhIHZlcnkgZmV3IGNo
YW5jZSB0aGF0IGEgcHJvY2VzcyBzdGF5cyBpbiAqKkQqKiBTdGF0ZSBmb3Ig
bG9uZy4gQW5kIGlmIGl0IGRvZXMgdGhlbiB0aGVyZSBpcyBzb21ldGhpbmcg
bm90IHByb3Blcmx5IGJlaW5nIGhhbmRsZWQgaW4gdGhlIHN5c3RlbS4gVGhp
cyBjYW4gYmUgYSBwb3RlbnRpYWwgYnVnIGFzIHdlbGwuCgpBIGNsYXNzaWNh
bCBjYXNlIG9mIGxvbmcgdW5pbnRlcnJ1cHRpYmxlIHNsZWVwIGlzIHByb2Nl
c3NlcyBhY2Nlc3NpbmcgZmlsZXMgb3ZlciBORlMgd2hlbiB0aGUgc2VydmVy
IGlzIG5vdCByZXNwb25kaW5nOyBtb2Rlcm4gaW1wbGVtZW50YXRpb25zIHRl
bmQgbm90IHRvIGltcG9zZSB1bmludGVycnVwdGlibGUgc2xlZXAgKGUuZy4g
dW5kZXIgTGludXgsIHRoZSBpbnRyIG1vdW50IG9wdGlvbiBhbGxvd3MgYSBz
aWduYWwgdG8gaW50ZXJydXB0IE5GUyBmaWxlIGFjY2Vzc2VzKS4KCllvdSBt
YXkgc29tZXRpbWVzIHNlZSBlbnRyaWVzIG1hcmtlZCAqKloqKiAob3IgKipI
KiogdW5kZXIgTGludXgpIGluIHRoZSBgcHNgIG9yIGB0b3BgIG91dHB1dC4g
VGhlc2UgYXJlIHRlY2huaWNhbGx5IG5vdCBwcm9jZXNzZXMsIHRoZXkgYXJl
IHpvbWJpZSBwcm9jZXNzZXMsIHdoaWNoIGFyZSBub3RoaW5nIG1vcmUgdGhh
biBhbiBlbnRyeSBpbiB0aGUgcHJvY2VzcyB0YWJsZSwga2VwdCBhcm91bmQg
c28gdGhhdCB0aGUgcGFyZW50IHByb2Nlc3MgY2FuIGJlIG5vdGlmaWVkIG9m
IHRoZSBkZWF0aCBvZiBpdHMgY2hpbGQuIFRoZXkgd2lsbCBnbyBhd2F5IHdo
ZW4gdGhlIHBhcmVudCBwcm9jZXNzIHBheXMgYXR0ZW50aW9uIChvciBkaWVz
KS4KClN1bW1hcnkgZXhjZXB0aW9uczoKCi0gWm9tYmllIHByb2Nlc3NlcyBj
YW5ub3QgYmUga2lsbGVkIHNpbmNlIHRoZXkgYXJlIGFscmVhZHkgZGVhZCBh
bmQgd2FpdGluZyBmb3IgdGhlaXIgcGFyZW50IHByb2Nlc3NlcyB0byByZWFw
IHRoZW0KLSBQcm9jZXNzZXMgdGhhdCBhcmUgaW4gdGhlIGJsb2NrZWQgc3Rh
dGUgd2lsbCBub3QgZGllIHVudGlsIHRoZXkgd2FrZSB1cCBhZ2FpbgotIFRo
ZSBpbml0IHByb2Nlc3MgaXMgc3BlY2lhbDogSXQgZG9lcyBub3QgZ2V0IHNp
Z25hbHMgdGhhdCBpdCBkb2VzIG5vdCB3YW50IHRvIGhhbmRsZSwgYW5kIHRo
dXMgaXQgY2FuIGlnbm9yZSAqKlNJR0tJTEwqKi4gQW4gZXhjZXB0aW9uIGZy
b20gdGhpcyBleGNlcHRpb24gaXMgd2hpbGUgaW5pdCBpcyBwdHJhY2VkIG9u
IExpbnV4Ci0gQW4gdW5pbnRlcnJ1cHRpYmx5IHNsZWVwaW5nIHByb2Nlc3Mg
bWF5IG5vdCB0ZXJtaW5hdGUgKGFuZCBmcmVlIGl0cyByZXNvdXJjZXMpIGV2
ZW4gd2hlbiBzZW50ICoqU0lHS0lMTCoqLiBUaGlzIGlzIG9uZSBvZiB0aGUg
ZmV3IGNhc2VzIGluIHdoaWNoIGEgVW5peCBzeXN0ZW0gbWF5IGhhdmUgdG8g
YmUgcmVib290ZWQgdG8gc29sdmUgYSB0ZW1wb3Jhcnkgc29mdHdhcmUgcHJv
YmxlbQoKVXNlZnVsIHJlc291cmNlczoKCi0gW1doYXQgaWYga2lsbCAtOSBk
b2VzIG5vdCB3b3JrPyAob3JpZ2luYWwpXShodHRwczovL3VuaXguc3RhY2tl
eGNoYW5nZS5jb20vcXVlc3Rpb25zLzU2NDIvd2hhdC1pZi1raWxsLTktZG9l
cy1ub3Qtd29yaykKLSBbSG93IHRvIGtpbGwgYSBwcm9jZXNzIGluIExpbnV4
IGlmIGtpbGwgLTkgaGFzIG5vIGVmZmVjdF0oaHR0cHM6Ly9zZXJ2ZXJmYXVs
dC5jb20vcXVlc3Rpb25zLzQ1ODI2MS9ob3ctdG8ta2lsbC1hLXByb2Nlc3Mt
aW4tbGludXgtaWYta2lsbC05LWhhcy1uby1lZmZlY3QpCi0gW1doZW4gc2hv
dWxkIEkgbm90IGtpbGwgLTkgYSBwcm9jZXNzP10oaHR0cHM6Ly91bml4LnN0
YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy84OTE2L3doZW4tc2hvdWxkLWkt
bm90LWtpbGwtOS1hLXByb2Nlc3MpCi0gW1NJR1RFUk0gdnMuIFNJR0tJTExd
KGh0dHBzOi8vbWFqb3IuaW8vMjAxMC8wMy8xOC9zaWd0ZXJtLXZzLXNpZ2tp
bGwvKQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPkRpZmZl
cmVuY2UgYmV0d2VlbiA8Y29kZT5ub2h1cDwvY29kZT4sIDxjb2RlPmRpc293
bjwvY29kZT4sIGFuZCA8Y29kZT4mPC9jb2RlPi4gV2hhdCBoYXBwZW5zIHdo
ZW4gdXNpbmcgYWxsIHRvZ2V0aGVyPzwvYj48L3N1bW1hcnk+PGJyPgoKLSBg
JmAgcHV0cyB0aGUgam9iIGluIHRoZSBiYWNrZ3JvdW5kLCB0aGF0IGlzLCBt
YWtlcyBpdCBibG9jayBvbiBhdHRlbXB0aW5nIHRvIHJlYWQgaW5wdXQsIGFu
ZCBtYWtlcyB0aGUgc2hlbGwgbm90IHdhaXQgZm9yIGl0cyBjb21wbGV0aW9u
Ci0gYGRpc293bmAgcmVtb3ZlcyB0aGUgcHJvY2VzcyBmcm9tIHRoZSBzaGVs
bCdzIGpvYiBjb250cm9sLCBidXQgaXQgc3RpbGwgbGVhdmVzIGl0IGNvbm5l
Y3RlZCB0byB0aGUgdGVybWluYWwuIE9uZSBvZiB0aGUgcmVzdWx0cyBpcyB0
aGF0IHRoZSBzaGVsbCB3b24ndCBzZW5kIGl0IGEgKipTSUdIVVAqKi4gT2J2
aW91c2x5LCBpdCBjYW4gb25seSBiZSBhcHBsaWVkIHRvIGJhY2tncm91bmQg
am9icywgYmVjYXVzZSB5b3UgY2Fubm90IGVudGVyIGl0IHdoZW4gYSBmb3Jl
Z3JvdW5kIGpvYiBpcyBydW5uaW5nCi0gYG5vaHVwYCBkaXNjb25uZWN0cyB0
aGUgcHJvY2VzcyBmcm9tIHRoZSB0ZXJtaW5hbCwgcmVkaXJlY3RzIGl0cyBv
dXRwdXQgdG8gYG5vaHVwLm91dGAgYW5kIHNoaWVsZHMgaXQgZnJvbSAqKlNJ
R0hVUCoqLiBPbmUgb2YgdGhlIGVmZmVjdHMgKHRoZSBuYW1pbmcgb25lKSBp
cyB0aGF0IHRoZSBwcm9jZXNzIHdvbid0IHJlY2VpdmUgYW55IHNlbnQgKipT
SUdIVVAqKi4gSXQgaXMgY29tcGxldGVseSBpbmRlcGVuZGVudCBmcm9tIGpv
YiBjb250cm9sIGFuZCBjb3VsZCBpbiBwcmluY2lwbGUgYmUgdXNlZCBhbHNv
IGZvciBmb3JlZ3JvdW5kIGpvYnMgKGFsdGhvdWdoIHRoYXQncyBub3QgdmVy
eSB1c2VmdWwpCgpJZiB5b3UgdXNlIGFsbCB0aHJlZSB0b2dldGhlciwgdGhl
IHByb2Nlc3MgaXMgcnVubmluZyBpbiB0aGUgYmFja2dyb3VuZCwgaXMgcmVt
b3ZlZCBmcm9tIHRoZSBzaGVsbCdzIGpvYiBjb250cm9sIGFuZCBpcyBlZmZl
Y3RpdmVseSBkaXNjb25uZWN0ZWQgZnJvbSB0aGUgdGVybWluYWwuCgpVc2Vm
dWwgcmVzb3VyY2VzOgoKLSBbRGlmZmVyZW5jZSBiZXR3ZWVuIG5vaHVwLCBk
aXNvd24gYW5kICYgKG9yaWdpbmFsKV0oaHR0cHM6Ly91bml4LnN0YWNrZXhj
aGFuZ2UuY29tL3F1ZXN0aW9ucy8zODg2L2RpZmZlcmVuY2UtYmV0d2Vlbi1u
b2h1cC1kaXNvd24tYW5kKQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1t
YXJ5PjxiPldoYXQgaXMgdGhlIG1haW4gYWR2YW50YWdlIG9mIHVzaW5nIDxj
b2RlPmNocm9vdDwvY29kZT4/IFdoZW4gYW5kICB3aHkgZG8gd2UgdXNlIGl0
PyBXaGF0IGlzIHRoZSBwdXJwb3NlIG9mIHRoZSBtb3VudCBkZXYsIHByb2Ms
IHN5cyBpbiBhIGNocm9vdCBlbnZpcm9ubWVudD88L2I+PC9zdW1tYXJ5Pjxi
cj4KCkFuIGFkdmFudGFnZSBvZiBoYXZpbmcgYSBjaHJvb3QgZW52aXJvbm1l
bnQgaXMgdGhlIGZpbGUtc3lzdGVtIGlzIHRvdGFsbHkgaXNvbGF0ZWQgZnJv
bSB0aGUgcGh5c2ljYWwgaG9zdC4gYGNocm9vdGAgaGFzIGEgc2VwYXJhdGUg
ZmlsZS1zeXN0ZW0gaW5zaWRlIHRoZSBmaWxlLXN5c3RlbSwgdGhlIGRpZmZl
cmVuY2UgaXMgaXRzIHVzZXMgYSBuZXdseSBjcmVhdGVkIHJvb3QoLykgYXMg
aXRzIHJvb3QgZGlyZWN0b3J5LgoKQSBjaHJvb3QgamFpbCBpcyBhIHdheSB0
byBpc29sYXRlIGEgcHJvY2VzcyBhbmQgaXRzIGNoaWxkcmVuIGZyb20gdGhl
IHJlc3Qgb2YgdGhlIHN5c3RlbS4gSXQgc2hvdWxkIG9ubHkgYmUgdXNlZCBm
b3IgcHJvY2Vzc2VzIHRoYXQgZG9uJ3QgcnVuIGFzIHJvb3QsIGFzIHJvb3Qg
dXNlcnMgY2FuIGJyZWFrIG91dCBvZiB0aGUgamFpbCB2ZXJ5IGVhc2lseS4K
ClRoZSBpZGVhIGlzIHRoYXQgeW91IGNyZWF0ZSBhIGRpcmVjdG9yeSB0cmVl
IHdoZXJlIHlvdSBjb3B5IG9yIGxpbmsgaW4gYWxsIHRoZSBzeXN0ZW0gZmls
ZXMgbmVlZGVkIGZvciBhIHByb2Nlc3MgdG8gcnVuLiBZb3UgdGhlbiB1c2Ug
dGhlIGBjaHJvb3QoKWAgc3lzdGVtIGNhbGwgdG8gY2hhbmdlIHRoZSByb290
IGRpcmVjdG9yeSB0byBiZSBhdCB0aGUgYmFzZSBvZiB0aGlzIG5ldyB0cmVl
IGFuZCBzdGFydCB0aGUgcHJvY2VzcyBydW5uaW5nIGluIHRoYXQgY2hyb290
J2QgZW52aXJvbm1lbnQuIFNpbmNlIGl0IGNhbid0IGFjdHVhbGx5IHJlZmVy
ZW5jZSBwYXRocyBvdXRzaWRlIHRoZSBtb2RpZmllZCByb290LCBpdCBjYW4n
dCBwZXJmb3JtIG9wZXJhdGlvbnMgKHJlYWQvd3JpdGUgZXRjLikgbWFsaWNp
b3VzbHkgb24gdGhvc2UgbG9jYXRpb25zLgoKT24gTGludXgsIHVzaW5nIGEg
YmluZCBtb3VudHMgaXMgYSBncmVhdCB3YXkgdG8gcG9wdWxhdGUgdGhlIGNo
cm9vdCB0cmVlLiBVc2luZyB0aGF0LCB5b3UgY2FuIHB1bGwgaW4gZm9sZGVy
cyBsaWtlIGAvbGliYCBhbmQgYC91c3IvbGliYCB3aGlsZSBub3QgcHVsbGlu
ZyBpbiBgL3VzcmAsIGZvciBleGFtcGxlLiBKdXN0IGJpbmQgdGhlIGRpcmVj
dG9yeSB0cmVlcyB5b3Ugd2FudCB0byBkaXJlY3RvcmllcyB5b3UgY3JlYXRl
IGluIHRoZSBqYWlsIGRpcmVjdG9yeS4KCkNocm9vdCBlbnZpcm9ubWVudCBp
cyB1c2VmdWwgZm9yOgoKLSByZWluc3RhbGwgYm9vdGxvYWRlcgotIHJlc2V0
IGEgZm9yZ290dGVuIHBhc3N3b3JkCi0gcGVyZm9ybSBhIGtlcm5lbCB1cGdy
YWRlIChvciBkb3duZ3JhZGUpCi0gcmVidWlsZCB5b3VyIGluaXRyYW1kaXNr
Ci0gZml4IHlvdXIgKiovZXRjL2ZzdGFiKioKLSByZWluc3RhbGwgcGFja2Fn
ZXMgdXNpbmcgeW91ciBwYWNrYWdlIG1hbmFnZXIKLSB3aGF0ZXZlcgoKV2hl
biB3b3JraW5nIGluIGEgY2hyb290ZWQgZW52aXJvbm1lbnQsIHRoZXJlIGlz
IGEgZmV3IHNwZWNpYWwgZmlsZSBzeXN0ZW1zIHRoYXQgbmVlZHMgdG8gYmUg
bW91bnRlZCBzbyBhbGwgcHJvZ3JhbXMgYmVoYXZlIHByb3Blcmx5LgoKTGlt
aXRhdGlvbiBpcyB0aGF0IGAvZGV2YCwgYC9zeXNgIGFuZCBgL3Byb2NgIGFy
ZSBub3QgbW91bnRlZCBieSBkZWZhdWx0IGJ1dCBuZWVkZWQgZm9yIG1hbnkg
dGFza3MuCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbSXRzIGFsbCBhYm91dCBD
aHJvb3RdKGh0dHBzOi8vbWVkaXVtLmNvbS9AaXRzZXJhbmdhL2Nocm9vdC0z
MTZkYzNjODk1ODQpCi0gW0Jlc3QgUHJhY3RpY2VzIGZvciBVTklYIGNocm9v
dCgpIE9wZXJhdGlvbnNdKGh0dHA6Ly93d3cudW5peHdpei5uZXQvdGVjaHRp
cHMvY2hyb290LXByYWN0aWNlcy5odG1sKQotIFtJcyB0aGVyZSBhbiBlYXNp
ZXIgd2F5IHRvIGNocm9vdCB0aGFuIGJpbmQtbW91bnRpbmc/XShodHRwczov
L2Fza3VidW50dS5jb20vcXVlc3Rpb25zLzMyNDE4L2lzLXRoZXJlLWFuLWVh
c2llci13YXktdG8tY2hyb290LXRoYW4tYmluZC1tb3VudGluZykKLSBbV2hh
dCdzIHRoZSBwcm9wZXIgd2F5IHRvIHByZXBhcmUgY2hyb290IHRvIHJlY292
ZXIgYSBicm9rZW4gTGludXggaW5zdGFsbGF0aW9uP10oaHR0cHM6Ly9zdXBl
cnVzZXIuY29tL3F1ZXN0aW9ucy8xMTExNTIvd2hhdHMtdGhlLXByb3Blci13
YXktdG8tcHJlcGFyZS1jaHJvb3QtdG8tcmVjb3Zlci1hLWJyb2tlbi1saW51
eC1pbnN0YWxsYXRpb24pCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1h
cnk+PGI+V2hhdCBhcmUgc2VnbWVudGF0aW9uIGZhdWx0cyAoc2VnZmF1bHRz
KSwgYW5kIGhvdyBjYW4gaWRlbnRpZnkgd2hhdCdzIGNhdXNpbmcgdGhlbT88
L2I+PC9zdW1tYXJ5Pjxicj4KCkEgKipzZWdtZW50YXRpb24gZmF1bHQqKiAo
YWthIF9zZWdmYXVsdF8pIGlzIGEgY29tbW9uIGNvbmRpdGlvbiB0aGF0IGNh
dXNlcyBwcm9ncmFtcyB0byBjcmFzaC4gU2VnZmF1bHRzIGFyZSBjYXVzZWQg
YnkgYSBwcm9ncmFtIHRyeWluZyB0byByZWFkIG9yIHdyaXRlIGFuIGlsbGVn
YWwgbWVtb3J5IGxvY2F0aW9uLgoKUHJvZ3JhbSBtZW1vcnkgaXMgZGl2aWRl
ZCBpbnRvIGRpZmZlcmVudCBzZWdtZW50czoKCi0gYSB0ZXh0IHNlZ21lbnQg
Zm9yIHByb2dyYW0gaW5zdHJ1Y3Rpb25zCi0gYSBkYXRhIHNlZ21lbnQgZm9y
IHZhcmlhYmxlcyBhbmQgYXJyYXlzIGRlZmluZWQgYXQgY29tcGlsZSB0aW1l
Ci0gYSBzdGFjayBzZWdtZW50IGZvciB0ZW1wb3JhcnkgKG9yIGF1dG9tYXRp
YykgdmFyaWFibGVzIGRlZmluZWQgaW4gc3Vicm91dGluZXMgYW5kIGZ1bmN0
aW9ucwotIGEgaGVhcCBzZWdtZW50IGZvciB2YXJpYWJsZXMgYWxsb2NhdGVk
IGR1cmluZyBydW50aW1lIGJ5IGZ1bmN0aW9ucywgc3VjaCBhcyBgbWFsbG9j
YCAoaW4gQykKCkluIHByYWN0aWNlLCBzZWdmYXVsdHMgYXJlIGFsbW9zdCBh
bHdheXMgZHVlIHRvIHRyeWluZyB0byByZWFkIG9yIHdyaXRlIGEgbm9uLWV4
aXN0ZW50IGFycmF5IGVsZW1lbnQsIG5vdCBwcm9wZXJseSBkZWZpbmluZyBh
IHBvaW50ZXIgYmVmb3JlIHVzaW5nIGl0LCBvciAoaW4gQyBwcm9ncmFtcykg
YWNjaWRlbnRhbGx5IHVzaW5nIGEgdmFyaWFibGUncyB2YWx1ZSBhcyBhbiBh
ZGRyZXNzLiBUaHVzLCB3aGVuIFByb2Nlc3MgQSByZWFkcyBtZW1vcnkgbG9j
YXRpb24gMHg4NzcsIGl0IHJlYWRzIGluZm9ybWF0aW9uIHJlc2lkaW5nIGF0
IGEgZGlmZmVyZW50IHBoeXNpY2FsIGxvY2F0aW9uIGluIFJBTSB0aGFuIHdo
ZW4gUHJvY2VzcyBCIHJlYWRzIGl0cyBvd24gMHg4NzcuCgpBbGwgbW9kZXJu
IG9wZXJhdGluZyBzeXN0ZW1zIHN1cHBvcnQgYW5kIHVzZSBzZWdtZW50YXRp
b24sIGFuZCBzbyBhbGwgY2FuIHByb2R1Y2UgYSBzZWdtZW50YXRpb24gZmF1
bHQuCgpTZWdtZW50YXRpb24gZmF1bHQgY2FuIGFsc28gb2NjdXIgdW5kZXIg
Zm9sbG93aW5nIGNpcmN1bXN0YW5jZXM6CgotIGEgYnVnZ3kgcHJvZ3JhbS9j
b21tYW5kLCB3aGljaCBjYW4gYmUgb25seSBmaXhlZCBieSBhcHBseWluZyBw
YXRjaAotIGl0IGNhbiBhbHNvIGFwcGVhciB3aGVuIHlvdSB0cnkgdG8gYWNj
ZXNzIGFuIGFycmF5IGJleW9uZCB0aGUgZW5kIG9mIGFuIGFycmF5IHVuZGVy
IEMgcHJvZ3JhbW1pbmcKLSBpbnNpZGUgYSBjaHJvb3RlZCBqYWlsIHRoaXMg
Y2FuIG9jY3VyIHdoZW4gY3JpdGljYWwgc2hhcmVkIGxpYnMsIGNvbmZpZyBm
aWxlIG9yIGAvZGV2L2AgZW50cnkgbWlzc2luZwotIHNvbWV0aW1lIGhhcmR3
YXJlIG9yIGZhdWx0eSBtZW1vcnkgb3IgZHJpdmVyIGNhbiBhbHNvIGNyZWF0
ZSBwcm9ibGVtCi0gbWFpbnRhaW4gc3VnZ2VzdGVkIGVudmlyb25tZW50IGZv
ciBhbGwgY29tcHV0ZXIgZXF1aXBtZW50IChvdmVyaGVhdGluZyBjYW4gYWxz
byBnZW5lcmF0ZSB0aGlzIHByb2JsZW0pCgpUbyBkZWJ1ZyB0aGlzIGtpbmQg
b2YgZXJyb3IgdHJ5IG9uZSBvciBhbGwgb2YgdGhlIGZvbGxvd2luZyB0ZWNo
bmlxdWVzOgoKLSBlbmFibGUgY29yZSBmaWxlczogYCQgdWxpbWl0IC1jIHVu
bGltaXRlZGAKLSByZXByb2R1Y2UgdGhlIGNyYXNoOiBgJCAuLzxwcm9ncmFt
PmAKLSBkZWJ1ZyBjcmFzaCB3aXRoIGdkYjogYCQgZ2RiIDxwcm9ncmFtPiBb
Y29yZSBmaWxlXWAKLSBvciBydW4gYExEX1BSRUxPQUQ9Li4ucGF0aC10by4u
Li9saWJTZWdGYXVsdC5zbyA8cHJvZ3JhbT5gIHRvIGdldCBhIHJlcG9ydCB3
aXRoIGJhY2t0cmFjZSwgbG9hZGVkIGxpYnMsIGV0YwoKQWxzbzoKCi0gbWFr
ZSBzdXJlIGNvcnJlY3QgaGFyZHdhcmUgaW5zdGFsbGVkIGFuZCBjb25maWd1
cmVkCi0gYWx3YXlzIGFwcGx5IGFsbCBwYXRjaGVzIGFuZCB1c2UgdXBkYXRl
ZCBzeXN0ZW0KLSBtYWtlIHN1cmUgYWxsIGRlcGVuZGVuY2llcyBpbnN0YWxs
ZWQgaW5zaWRlIGphaWwKLSB0dXJuIG9uIGNvcmUgZHVtcGluZyBmb3Igc3Vw
cG9ydGVkIHNlcnZpY2VzIHN1Y2ggYXMgQXBhY2hlCi0gdXNlIGBzdHJhY2Vg
IHdoaWNoIGlzIGEgdXNlZnVsIGRpYWdub3N0aWMsIGluc3RydWN0aW9uYWws
IGFuZCBkZWJ1Z2dpbmcgdG9vbAoKU29tZXRpbWVzIHNlZ21lbnRhdGlvbiBm
YXVsdHMgYXJlIG5vdCBjYXVzZWQgYnkgYnVncyBpbiB0aGUgcHJvZ3JhbSBi
dXQgYXJlIGNhdXNlZCBpbnN0ZWFkIGJ5IHN5c3RlbSBtZW1vcnkgbGltaXRz
IGJlaW5nIHNldCB0b28gbG93LiBVc3VhbGx5IGl0IGlzIHRoZSBsaW1pdCBv
biBzdGFjayBzaXplIHRoYXQgY2F1c2VzIHRoaXMga2luZCBvZiBwcm9ibGVt
IChzdGFjayBvdmVyZmxvd3MpLiBUbyBjaGVjayBtZW1vcnkgbGltaXRzLCB1
c2UgdGhlIGB1bGltaXRgIGNvbW1hbmQgaW4gYmFzaC4KClVzZWZ1bCByZXNv
dXJjZXM6CgotIFtXaGF0IGFyZSBzZWdtZW50YXRpb24gZmF1bHRzIChzZWdm
YXVsdHMpLCBhbmQgaG93IGNhbiBJIGlkZW50aWZ5IHdoYXQncyBjYXVzaW5n
IHRoZW0/IChvcmlnaW5hbCldKGh0dHBzOi8va2IuaXUuZWR1L2QvYXFzaikK
LSBbV2hhdCBpcyBhIHNlZ21lbnRhdGlvbiBmYXVsdCBvbiBMaW51eD9dKGh0
dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzMyMDA1MjYvd2hh
dC1pcy1hLXNlZ21lbnRhdGlvbi1mYXVsdC1vbi1saW51eCkKLSBbU2VnbWVu
dGF0aW9uIGZhdWx0IHdoZW4gY2FsbGluZyBhIHJlY3Vyc2l2ZSBiYXNoIGZ1
bmN0aW9uXShodHRwczovL3VuaXguc3RhY2tleGNoYW5nZS5jb20vcXVlc3Rp
b25zLzI5NjY0MS9zZWdtZW50YXRpb24tZmF1bHQtd2hlbi1jYWxsaW5nLWEt
cmVjdXJzaXZlLWJhc2gtZnVuY3Rpb24pCi0gW1Ryb3VibGVzaG9vdGluZyBT
ZWdtZW50YXRpb24gVmlvbGF0aW9ucy9GYXVsdHNdKGh0dHA6Ly93ZWIubWl0
LmVkdS8xMC4wMDEvV2ViL1RpcHMvdGlwc19vbl9zZWdtZW50YXRpb24uaHRt
bCkKLSBbQ2FuIG9uZSB1c2UgbGliU2VnRmF1bHQuc28gdG8gZ2V0IGJhY2t0
cmFjZXMgZm9yIFNJR0FCUlQ/XShodHRwczovL3N0YWNrb3ZlcmZsb3cuY29t
L3F1ZXN0aW9ucy8xODcwNjQ5Ni9jYW4tb25lLXVzZS1saWJzZWdmYXVsdC1z
by10by1nZXQtYmFja3RyYWNlcy1mb3Itc2lnYWJydCkKCjwvZGV0YWlscz4K
CjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5PbmUgb2YgdGhlIHByb2Nlc3NlcyBy
dW5zIHNsb3dseS4gSG93IHRvIGNoZWNrIGhvdyBsb25nIGhhcyBiZWVuIHJ1
bm5pbmcgYW5kIHdoaWNoIHRvb2xzIHdpbGwgeW91IHVzZT88L2I+PC9zdW1t
YXJ5Pjxicj4KClRvIGJlIGNvbXBsZXRlZC4KClVzZWZ1bCByZXNvdXJjZXM6
CgotIFtIb3cgdG8gY2hlY2sgaG93IGxvbmcgYSBwcm9jZXNzIGhhcyBiZWVu
IHJ1bm5pbmc/XShodHRwczovL3VuaXguc3RhY2tleGNoYW5nZS5jb20vcXVl
c3Rpb25zLzc4NzAvaG93LXRvLWNoZWNrLWhvdy1sb25nLWEtcHJvY2Vzcy1o
YXMtYmVlbi1ydW5uaW5nKQotIFtMaW51eCBob3cgbG9uZyBhIHByb2Nlc3Mg
aGFzIGJlZW4gcnVubmluZz9dKGh0dHBzOi8vd3d3LmN5YmVyY2l0aS5iaXov
ZmFxL2hvdy10by1jaGVjay1ob3ctbG9uZy1hLXByb2Nlc3MtaGFzLWJlZW4t
cnVubmluZy8pCi0gW0hvdyB0byBzZWUgc3lzdGVtIGNhbGwgdGhhdCBleGVj
dXRlZCBpbiBjdXJyZW50IHRpbWUgYnkgcHJvY2Vzcz9dKGh0dHBzOi8vc3Rh
Y2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzQyNjc3NzI0L2hvdy10by1zZWUt
c3lzdGVtLWNhbGwtdGhhdC1leGVjdXRlZC1pbi1jdXJyZW50LXRpbWUtYnkt
cHJvY2VzcykKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5X
aGF0IGlzIGEgZmlsZSBkZXNjcmlwdG9yIGluIExpbnV4PzwvYj48L3N1bW1h
cnk+PGJyPgoKSW4gVW5peCBhbmQgcmVsYXRlZCBjb21wdXRlciBvcGVyYXRp
bmcgc3lzdGVtcywgYSBmaWxlIGRlc2NyaXB0b3IgKEZELCBsZXNzIGZyZXF1
ZW50bHkgZmlsZGVzKSBpcyBhbiBhYnN0cmFjdCBpbmRpY2F0b3IgKGhhbmRs
ZSkgdXNlZCB0byBhY2Nlc3MgYSBmaWxlIG9yIG90aGVyIGlucHV0L291dHB1
dCByZXNvdXJjZSwgc3VjaCBhcyBhIHBpcGUgb3IgbmV0d29yayBzb2NrZXQu
IEZpbGUgZGVzY3JpcHRvcnMgZm9ybSBwYXJ0IG9mIHRoZSBQT1NJWCBhcHBs
aWNhdGlvbiBwcm9ncmFtbWluZyBpbnRlcmZhY2UuCgo8L2RldGFpbHM+Cgo8
ZGV0YWlscz4KPHN1bW1hcnk+PGI+V2hpY2ggd2F5IG9mIGFkZGl0aW9uYWxs
eSBmZWVkaW5nIHJhbmRvbSBlbnRyb3B5IHBvb2wgd291bGQgeW91IHN1Z2dl
c3QgZm9yIHByb2R1Y2luZyByYW5kb20gcGFzc3dvcmRzPyBIb3cgdG8gaW1w
cm92ZSBpdD88L2I+PC9zdW1tYXJ5Pjxicj4KCllvdSBzaG91bGQgdXNlIGAv
ZGV2L3VyYW5kb21gLCBub3QgYC9kZXYvcmFuZG9tYC4gVGhlIHR3byBkaWZm
ZXJlbmNlcyBiZXR3ZWVuIGAvZGV2L3JhbmRvbWAgYW5kIGAvZGV2L3VyYW5k
b21gIGFyZToKCiAtIGAvZGV2L3JhbmRvbWAgbWlnaHQgYmUgdGhlb3JldGlj
YWxseSBiZXR0ZXIgX2luIHRoZSBjb250ZXh0IG9mIGFuIGluZm9ybWF0aW9u
LXRoZW9yZXRpY2FsbHkgc2VjdXJlIGFsZ29yaXRobV8uIFRoaXMgaXMgdGhl
IGtpbmQgb2YgYWxnb3JpdGhtIHdoaWNoIGlzIHNlY3VyZSBhZ2FpbnN0IHRv
ZGF5J3MgdGVjaG5vbG9neSwgYW5kIGFsc28gdG9tb3Jyb3cncyB0ZWNobm9s
b2d5LCBhbmQgdGVjaG5vbG9neSB1c2VkIGJ5IGFsaWVucywgYW5kIEdvZCdz
IG93biBpUGFkIGFzIHdlbGwuCgogLSBgL2Rldi91cmFuZG9tYCB3aWxsIG5v
dCBibG9jaywgd2hpbGUgYC9kZXYvcmFuZG9tYCBtYXkgZG8gc28uIGAvZGV2
L3JhbmRvbWAgbWFpbnRhaW5zIGEgY291bnRlciBvZiAiaG93IG11Y2ggZW50
cm9weSBpdCBzdGlsbCBoYXMiIHVuZGVyIHRoZSBhc3N1bXB0aW9uIHRoYXQg
YW55IGJpdHMgaXQgaGFzIHByb2R1Y2VkIGlzIGEgbG9zdCBlbnRyb3B5IGJp
dC4gQmxvY2tpbmcgaW5kdWNlcyB2ZXJ5IHJlYWwgaXNzdWVzLCBlLmcuIGEg
c2VydmVyIHdoaWNoIGZhaWxzIHRvIGJvb3QgYWZ0ZXIgYW4gYXV0b21hdGVk
IGluc3RhbGwgYmVjYXVzZSBpdCBpcyBzdGFsbGluZyBvbiBpdHMgU1NIIHNl
cnZlciBrZXkgY3JlYXRpb24uCgpTbyB5b3Ugd2FudCB0byB1c2UgYC9kZXYv
dXJhbmRvbWAgYW5kIHN0b3AgdG8gd29ycnkgYWJvdXQgdGhpcyBlbnRyb3B5
IGJ1c2luZXNzLgoKVGhlIHRyaWNrIGlzIHRoYXQgYC9kZXYvdXJhbmRvbWAg
bmV2ZXIgYmxvY2tzLCBldmVyLCBldmVuIHdoZW4gaXQgc2hvdWxkOiBgL2Rl
di91cmFuZG9tYCBpcyBzZWN1cmUgYXMgbG9uZyBhcyBpdCBoYXMgcmVjZWl2
ZWQgZW5vdWdoIGJ5dGVzIG9mICJpbml0aWFsIGVudHJvcHkiIHNpbmNlIHRo
ZSBsYXN0IGJvb3QgKDMyIHJhbmRvbSBieXRlcyBhcmUgZW5vdWdoKS4gQSBu
b3JtYWwgTGludXggaW5zdGFsbGF0aW9uIHdpbGwgY3JlYXRlIGEgcmFuZG9t
IHNlZWQgKGZyb20gYC9kZXYvcmFuZG9tYCkgdXBvbiBpbnN0YWxsYXRpb24s
IGFuZCBzYXZlIGl0IG9uIHRoZSBkaXNrLiBVcG9uIGVhY2ggcmVib290LCB0
aGUgc2VlZCB3aWxsIGJlIHJlYWQsIGZlZCBpbnRvIGAvZGV2L3VyYW5kb21g
LCBhbmQgYSBuZXcgc2VlZCBpbW1lZGlhdGVseSBnZW5lcmF0ZWQgKGZyb20g
YC9kZXYvdXJhbmRvbWApIHRvIHJlcGxhY2UgaXQuIFRodXMsIHRoaXMgZ3Vh
cmFudGVlcyB0aGF0IGAvZGV2L3VyYW5kb21gIHdpbGwgYWx3YXlzIGhhdmUg
ZW5vdWdoIGluaXRpYWwgZW50cm9weSB0byBwcm9kdWNlIGNyeXB0b2dyYXBo
aWNhbGx5IHN0cm9uZyBhbGVhLCBwZXJmZWN0bHkgc3VmZmljaWVudCBmb3Ig
YW55IG11bmRhbmUgY3J5cHRvZ3JhcGhpYyBqb2IsIGluY2x1ZGluZyBwYXNz
d29yZCBnZW5lcmF0aW9uLgoKU2hvdWxkIGFueSBvZiB0aGVzZSBkYWVtb25z
IHJlcXVpcmUgcmFuZG9tbmVzcyB3aGVuIGFsbCBhdmFpbGFibGUgZW50cm9w
eSBoYXMgYmVlbiBleGhhdXN0ZWQsIHRoZXkgbWF5IHBhdXNlIHRvIHdhaXQg
Zm9yIG1vcmUsIHdoaWNoIGNhbiBjYXVzZSBleGNlc3NpdmUgZGVsYXlzIGlu
IHlvdXIgYXBwbGljYXRpb24uIEV2ZW4gd29yc2UsIHNpbmNlIG1vc3QgbW9k
ZXJuIGFwcGxpY2F0aW9ucyB3aWxsIGVpdGhlciByZXNvcnQgdG8gdXNpbmcg
aXRzIG93biByYW5kb20gc2VlZCBjcmVhdGVkIGF0IHByb2dyYW0gaW5pdGlh
bGl6YXRpb24sIG9yIHRvIHVzaW5nIGAvZGV2L3VyYW5kb21gIHRvIGF2b2lk
IGJsb2NraW5nLCB5b3VyIGFwcGxpY2F0aW9ucyB3aWxsIHN1ZmZlciBmcm9t
IGxvd2VyIHF1YWxpdHkgcmFuZG9tIGRhdGEuIFRoaXMgY2FuIGFmZmVjdCB0
aGUgaW50ZWdyaXR5IG9mIHlvdXIgc2VjdXJlIGNvbW11bmljYXRpb25zLCBh
bmQgY2FuIGluY3JlYXNlIHRoZSBjaGFuY2Ugb2YgY3J5cHRvYW5hbHlzaXMg
b24geW91ciBwcml2YXRlIGRhdGEuCgpUbyBjaGVjayB0aGUgYW1vdW50IG9m
IGJ5dGVzIG9mIGVudHJvcHkgY3VycmVudGx5IGF2YWlsYWJsZSwgdXNlOgoK
YGBgYmFzaApjYXQgL3Byb2Mvc3lzL2tlcm5lbC9yYW5kb20vZW50cm9weV9h
dmFpbApgYGAKCioqcm5nLXRvb2xzKioKCkZlZG9yYS9SaC9DZW50b3MgdHlw
ZXM6IGBzdWRvIHl1bSBpbnN0YWxsIHJuZy10b29sc2AuCgpPbiBkZWIgdHlw
ZXM6IGBzdWRvIGFwdC1nZXQgaW5zdGFsbCBybmctdG9vbHNgIHRvIHNldCBp
dCB1cC4KClRoZW4gcnVuIGBzdWRvIHJuZ2QgLXIgL2Rldi91cmFuZG9tYCBi
ZWZvcmUgZ2VuZXJhdGluZyB0aGUga2V5cy4KCioqaGF2ZWdlZCoqCgpGZWRv
cmEvUmgvQ2VudG9zIHR5cGVzOiBgc3VkbyB5dW0gaW5zdGFsbCBoYXZlZ2Vk
YCBhbmQgYWRkIGAvdXNyL2xvY2FsL3NiaW4vaGF2ZWdlZCAtdyAxMDI0YCB0
byBgL2V0Yy9yYy5sb2NhbGAuCgpPbiBkZWIgdHlwZXM6IGBzdWRvIGFwdC1n
ZXQgaW5zdGFsbCBoYXZlZ2VkYCBhbmQgYWRkIGBEQUVNT05fQVJHUz0iLXcg
MTAyNCJgIHRvIGAvZXRjL2RlZmF1bHQvaGF2ZWdlZGAgdG8gc2V0IGl0IHVw
LgoKVGhlbiBydW4gYHN1ZG8gcm5nZCAtciAvZGV2L3VyYW5kb21gIGJlZm9y
ZSBnZW5lcmF0aW5nIHRoZSBrZXlzLgoKVXNlZnVsIHJlc291cmNlczoKCi0g
W0ZlZWRpbmcgL2Rldi9yYW5kb20gZW50cm9weSBwb29sPyAob3JpZ2luYWwp
XShodHRwczovL3NlY3VyaXR5LnN0YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9u
cy84OS9mZWVkaW5nLWRldi1yYW5kb20tZW50cm9weS1wb29sKQotIFtHUEcg
ZG9lcyBub3QgaGF2ZSBlbm91Z2ggZW50cm9weV0oaHR0cHM6Ly9zZXJ2ZXJm
YXVsdC5jb20vcXVlc3Rpb25zLzIxNDYwNS9ncGctZG9lcy1ub3QtaGF2ZS1l
bm91Z2gtZW50cm9weSkKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFy
eT48Yj5XaGF0IGlzIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gPGNvZGU+L3Ni
aW4vbm9sb2dpbjwvY29kZT4sIDxjb2RlPi9iaW4vZmFsc2U8L2NvZGU+LCBh
bmQgPGNvZGU+L2Jpbi90cnVlPC9jb2RlPj88L2I+PC9zdW1tYXJ5Pjxicj4K
CldoZW4gYC9zYmluL25vbG9naW5gIGlzIHNldCBhcyB0aGUgc2hlbGwsIGlm
IHVzZXIgd2l0aCB0aGF0IHNoZWxsIGxvZ3MgaW4sIHRoZXknbGwgZ2V0IGEg
cG9saXRlIG1lc3NhZ2Ugc2F5aW5nICdUaGlzIGFjY291bnQgaXMgY3VycmVu
dGx5IG5vdCBhdmFpbGFibGUnLgoKYC9iaW4vZmFsc2VgIGlzIGp1c3QgYSBi
aW5hcnkgdGhhdCBpbW1lZGlhdGVseSBleGl0cywgcmV0dXJuaW5nIGZhbHNl
LCB3aGVuIGl0J3MgY2FsbGVkLCBzbyB3aGVuIHNvbWVvbmUgd2hvIGhhcyBm
YWxzZSBhcyBzaGVsbCBsb2dzIGluLCB0aGV5J3JlIGltbWVkaWF0ZWx5IGxv
Z2dlZCBvdXQgd2hlbiBmYWxzZSBleGl0cy4gU2V0dGluZyB0aGUgc2hlbGwg
dG8gYC9iaW4vdHJ1ZWAgaGFzIHRoZSBzYW1lIGVmZmVjdCBvZiBub3QgYWxs
b3dpbmcgc29tZW9uZSB0byBsb2cgaW4gYnV0IGZhbHNlIGlzIHByb2JhYmx5
IHVzZWQgYXMgYSBjb252ZW50aW9uIG92ZXIgdHJ1ZSBzaW5jZSBpdCdzIG11
Y2ggYmV0dGVyIGF0IGNvbnZleWluZyB0aGUgY29uY2VwdCB0aGF0IHBlcnNv
biBkb2Vzbid0IGhhdmUgYSBzaGVsbC4KCmAvYmluL25vbG9naW5gIGlzIHRo
ZSBtb3JlIHVzZXItZnJpZW5kbHkgb3B0aW9uLCB3aXRoIGEgY3VzdG9taXph
YmxlIG1lc3NhZ2UgZ2l2ZW4gdG8gdGhlIHVzZXIgdHJ5aW5nIHRvIGxvZyBp
biwgc28geW91IHdvdWxkIHRoZW9yZXRpY2FsbHkgd2FudCB0byB1c2UgdGhh
dDsgYnV0IGJvdGggbm9sb2dpbiBhbmQgZmFsc2Ugd2lsbCBoYXZlIHRoZSBz
YW1lIGVuZCByZXN1bHQgb2Ygc29tZW9uZSBub3QgaGF2aW5nIGEgc2hlbGwg
YW5kIG5vdCBiZWluZyBhYmxlIHRvIHNzaCBpbi4KClVzZWZ1bCByZXNvdXJj
ZXM6CgotIFtXaGF0J3MgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiAvc2Jpbi9u
b2xvZ2luIGFuZCAvYmluL2ZhbHNlXShodHRwczovL3VuaXguc3RhY2tleGNo
YW5nZS5jb20vcXVlc3Rpb25zLzEwODUyL3doYXRzLXRoZS1kaWZmZXJlbmNl
LWJldHdlZW4tc2Jpbi1ub2xvZ2luLWFuZC1iaW4tZmFsc2UpCi0gW1doeSBk
byBzb21lIHN5c3RlbSB1c2VycyBoYXZlIC91c3IvYmluL2ZhbHNlIGFzIHRo
ZWlyIHNoZWxsP10oaHR0cHM6Ly9zdXBlcnVzZXIuY29tL3F1ZXN0aW9ucy8x
MTgzMzExL3doeS1kby1zb21lLXN5c3RlbS11c2Vycy1oYXZlLXVzci1iaW4t
ZmFsc2UtYXMtdGhlaXItc2hlbGwpCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4K
PHN1bW1hcnk+PGI+V2hpY2ggc3ltcHRvbXMgbWlnaHQgYmUgc3VmZmVyaW5n
IGZyb20gYSBkaXNrIGJvdHRsZW5lY2s/ICoqKjwvYj48L3N1bW1hcnk+PGJy
PgoKVG8gYmUgY29tcGxldGVkLgoKPC9kZXRhaWxzPgoKPGRldGFpbHM+Cjxz
dW1tYXJ5PjxiPldoYXQgaXMgdGhlIG1lYW5pbmcgb2YgdGhlIGVycm9yIDxj
b2RlPm1heHByb2MgbGltaXQgZXhjZWVkZWQgYnkgdWlkICVpIC4uLjwvY29k
ZT4gaW4gRnJlZUJTRD88L2I+PC9zdW1tYXJ5Pjxicj4KClRoZSBGcmVlQlNE
IGtlcm5lbCB3aWxsIG9ubHkgYWxsb3cgYSBjZXJ0YWluIG51bWJlciBvZiBw
cm9jZXNzZXMgdG8gZXhpc3QgYXQgb25lIHRpbWUuIFRoZSBudW1iZXIgaXMg
YmFzZWQgb24gdGhlICoqa2Vybi5tYXh1c2VycyoqIHZhcmlhYmxlLgoKKipr
ZXJuLm1heHVzZXJzKiogYWxzbyBhZmZlY3RzIHZhcmlvdXMgb3RoZXIgaW4t
a2VybmVsIGxpbWl0cywgc3VjaCBhcyBuZXR3b3JrIGJ1ZmZlcnMuIElmIHRo
ZSBtYWNoaW5lIGlzIGhlYXZpbHkgbG9hZGVkLCBpbmNyZWFzZSAqKmtlcm4u
bWF4dXNlcnMqKi4gVGhpcyB3aWxsIGluY3JlYXNlIHRoZXNlIG90aGVyIHN5
c3RlbSBsaW1pdHMgaW4gYWRkaXRpb24gdG8gdGhlIG1heGltdW0gbnVtYmVy
IG9mIHByb2Nlc3Nlcy4KClRvIGFkanVzdCB0aGUgKiprZXJuLm1heHVzZXJz
KiogdmFsdWUsIHNlZSB0aGUgRmlsZS9Qcm9jZXNzIExpbWl0cyBzZWN0aW9u
IG9mIHRoZSBIYW5kYm9vay4gV2hpbGUgdGhhdCBzZWN0aW9uIHJlZmVycyB0
byBvcGVuIGZpbGVzLCB0aGUgc2FtZSBsaW1pdHMgYXBwbHkgdG8gcHJvY2Vz
c2VzLgoKSWYgdGhlIG1hY2hpbmUgaXMgbGlnaHRseSBsb2FkZWQgYnV0IHJ1
bm5pbmcgYSB2ZXJ5IGxhcmdlIG51bWJlciBvZiBwcm9jZXNzZXMsIGFkanVz
dCB0aGUgKiprZXJuLm1heHByb2MqKiB0dW5hYmxlIGJ5IGRlZmluaW5nIGl0
IGluIGAvYm9vdC9sb2FkZXIuY29uZmAuCgo8L2RldGFpbHM+Cgo8ZGV0YWls
cz4KPHN1bW1hcnk+PGI+SG93IHRvIHJlYWQgYSBmaWxlIGxpbmUgYnkgbGlu
ZSBhbmQgYXNzaWduaW5nIHRoZSB2YWx1ZSB0byBhIHZhcmlhYmxlPzwvYj48
L3N1bW1hcnk+PGJyPgoKRm9yIGV4YW1wbGU6CgpgYGBiYXNoCndoaWxlIElG
Uz0nJyByZWFkIC1yIGxpbmUgfHwgW1sgLW4gIiRsaW5lIiBdXSA7IGRvCiAg
ZWNobyAiVGV4dCByZWFkIGZyb20gZmlsZTogJGxpbmUiCmRvbmUgPCAiL3Bh
dGgvdG8vZmlsZW5hbWUiCmBgYAoKRXhwbGFuYXRpb246CgotIGBJRlM9Jydg
IChvciBgSUZTPWApIHByZXZlbnRzIGxlYWRpbmcvdHJhaWxpbmcgd2hpdGVz
cGFjZSBmcm9tIGJlaW5nIHRyaW1tZWQuCi0gYC1yYCBwcmV2ZW50cyBiYWNr
c2xhc2ggZXNjYXBlcyBmcm9tIGJlaW5nIGludGVycHJldGVkLgotIGB8fCBb
WyAtbiAkbGluZSBdXWAgcHJldmVudHMgdGhlIGxhc3QgbGluZSBmcm9tIGJl
aW5nIGlnbm9yZWQgaWYgaXQgZG9lc24ndCBlbmQgd2l0aCBhIGBcbmAgKHNp
bmNlICByZWFkIHJldHVybnMgYSBub24temVybyBleGl0IGNvZGUgd2hlbiBp
dCBlbmNvdW50ZXJzIEVPRikuCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbUmVh
ZCBhIGZpbGUgbGluZSBieSBsaW5lIGFzc2lnbmluZyB0aGUgdmFsdWUgdG8g
YSB2YXJpYWJsZV0oaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlv
bnMvMTA5Mjk0NTMvcmVhZC1hLWZpbGUtbGluZS1ieS1saW5lLWFzc2lnbmlu
Zy10aGUtdmFsdWUtdG8tYS12YXJpYWJsZSkKCjwvZGV0YWlscz4KCjxkZXRh
aWxzPgo8c3VtbWFyeT48Yj5UaGUgY2xpZW50IHJlcG9ydHMgdGhhdCBoaXMg
c2l0ZSByZWNlaXZlZCBhIGdyYWRlIEIgaW4gdGhlIHNzbGxhYnMgc2Nhbm5l
ci4gUHJlcGFyZSBhIGNoZWNrbGlzdCBvZiBiZXN0IHByYWN0aWNlIGZvciBz
c2wgY29uZmlndXJhdGlvbi4gKioqPC9iPjwvc3VtbWFyeT48YnI+CgpVc2Vm
dWwgcmVzb3VyY2VzOgoKLSBbR2V0dGluZyBhIFBlcmZlY3QgU1NMIExhYnMg
U2NvcmVdKGh0dHBzOi8vbWljaGFlbC5sdXN0ZmllbGQubmV0L25naW54L2dl
dHRpbmctYS1wZXJmZWN0LXNzbC1sYWJzLXNjb3JlKQotIFsxNyBzbWFsbCBz
dWdnZXN0aW9ucyBob3cgdG8gaW1wcm92ZSBzc2xsYWJzLmNvbS9zc2x0ZXN0
L10oaHR0cHM6Ly9jb21tdW5pdHkucXVhbHlzLmNvbS90aHJlYWQvMTQwMjMp
Ci0gW0hvdyBkbyB5b3Ugc2NvcmUgQSsgd2l0aCAxMDAgb24gYWxsIGNhdGVn
b3JpZXMgb24gU1NMIExhYnMgdGVzdCB3aXRoIExldCdzIEVuY3J5cHQgYW5k
IE5naW54P10oaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMv
NDE5MzAwNjAvaG93LWRvLXlvdS1zY29yZS1hLXdpdGgtMTAwLW9uLWFsbC1j
YXRlZ29yaWVzLW9uLXNzbC1sYWJzLXRlc3Qtd2l0aC1sZXRzLWVuY3J5KQoK
PC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPldoYXQgZG9lcyBD
UFUganVtcHMgbWVhbj88L2I+PC9zdW1tYXJ5Pjxicj4KCkFuIE9TIGlzIGEg
dmVyeSBidXN5IHRoaW5nLCBwYXJ0aWN1bGFybHkgc28gd2hlbiB5b3UgaGF2
ZSBpdCBkb2luZyBzb21ldGhpbmcgKGFuZCBldmVuIHdoZW4geW91IGFyZW4n
dCkuIEFuZCB3aGVuIHdlIGFyZSBsb29raW5nIGF0IGFuIGFjdGl2ZSBlbnRl
cnByaXNlIGVudmlyb25tZW50LCBzb21ldGhpbmcgaXMgYWx3YXlzIGdvaW5n
IG9uLgoKTW9zdCBvZiB0aGlzIGFjdGl2aXR5IGlzICJidXJzdHkiLCBtZWFu
aW5nIHByb2Nlc3NlcyBhcmUgdHlwaWNhbGx5IHF1aWVzY2VudCB3aXRoIHNo
b3J0IHBlcmlvZHMgb2YgaW50ZW5zZSBhY3Rpdml0eS4gVGhpcyBpcyBjZXJ0
YWlubHkgdHJ1ZSBvZiBhbnkgdHlwZSBvZiBuZXR3b3JrLWJhc2VkIGFjdGl2
aXR5IChlLmcuIHByb2Nlc3NpbmcgUEhQIHJlcXVlc3RzKSwgYnV0IGFsc28g
YXBwbGllcyB0byBPUyBtYWludGVuYW5jZSAoZS5nLiBmaWxlIHN5c3RlbSBt
YWludGVuYW5jZSwgcGFnZSByZWNsYW1hdGlvbiwgZGlzayBJL08gcmVxdWVz
dHMpLgoKSWYgeW91IHRha2UgYSBzaXR1YXRpb24gd2hlcmUgeW91IGhhdmUg
YSBsb3Qgb2Ygc3VjaCBidXJzdHkgcHJvY2Vzc2VzLCB5b3UgZ2V0IGEgdmVy
eSBpcnJlZ3VsYXIgYW5kIHNwaWt5IENQVSB1c2FnZSBwbG90LgoKQXMgYDUw
MCAtIEludGVybmFsIFNlcnZlciBFcnJvcmAgc2F5cywgdGhlIGhpZ2ggbnVt
YmVyIG9mIGNvbnRleHQgc3dpdGNoZXMgYXJlIGdvaW5nIHRvIG1ha2UgdGhl
IHNpdHVhdGlvbiBldmVuIHdvcnNlLgoKVXNlZnVsIHJlc291cmNlczoKCi0g
W1doYXQgZG9lcyAiQ1BVIGp1bXBz4oCdIG1lYW4/IChvcmlnaW5hbCldKGh0
dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzMyMTg1NjA3L3do
YXQtZG9lcy1jcHUtanVtcHMtbWVhbikKCjwvZGV0YWlscz4KCjxkZXRhaWxz
Pgo8c3VtbWFyeT48Yj5Ib3cgZG8geW91IHRyYWNlIGEgc3lzdGVtIGNhbGwg
aW4gTGludXg/IEV4cGxhaW4gdGhlIHBvc3NpYmxlIG1ldGhvZHMuPC9iPjwv
c3VtbWFyeT48YnI+CgoqKlN5c3RlbVRhcCoqCgpUaGlzIGlzIHRoZSBtb3N0
IHBvd2VyZnVsIG1ldGhvZC4gSXQgY2FuIGV2ZW4gc2hvdyB0aGUgY2FsbCBh
cmd1bWVudHM6CgpVc2FnZToKCmBgYGJhc2gKc3VkbyBhcHQtZ2V0IGluc3Rh
bGwgc3lzdGVtdGFwCnN1ZG8gc3RhcCAtZSAncHJvYmUgc3lzY2FsbC5ta2Rp
ciB7IHByaW50ZigiJXNbJWRdIC0+ICVzKCVzKVxuIiwgZXhlY25hbWUoKSwg
cGlkKCksIG5hbWUsIGFyZ3N0cikgfScKYGBgCgpUaGVuIG9uIGFub3RoZXIg
dGVybWluYWw6CgpgYGBiYXNoCnN1ZG8gcm0gLXJmIC90bXAvYSAvdG1wL2IK
bWtkaXIgL3RtcC9hCm1rZGlyIC90bXAvYgpgYGAKClNhbXBsZSBvdXRwdXQ6
CgpgYGBiYXNoCm1rZGlyWzQ1OTBdIC0+IG1rZGlyKCIvdG1wL2EiLCAwNzc3
KQpta2Rpcls0NTkzXSAtPiBta2RpcigiL3RtcC9iIiwgMDc3NykKYGBgCgoq
KmBzdHJhY2VgIHdpdGggYC1mfC1mZmAgcGFyYW1zKioKCllvdSBjYW4gdXNl
IHRoZSBgLWZgIGFuZCBgLWZmYCBvcHRpb24uIFNvbWV0aGluZyBsaWtlIHRo
aXM6CgpgYGBiYXNoCnN0cmFjZSAtZiAtZSB0cmFjZT1wcm9jZXNzIGJhc2gg
LWMgJ2xzOyA6CmBgYAoKLSBgLWZgIDogVHJhY2UgY2hpbGQgcHJvY2Vzc2Vz
IGFzIHRoZXkgYXJlIGNyZWF0ZWQgYnkgY3VycmVudGx5IHRyYWNlZCBwcm9j
ZXNzZXMgYXMgYSByZXN1bHQgb2YgdGhlIGZvcmsoMikgc3lzdGVtIGNhbGwu
CgotIGAtZmZgIDogSWYgdGhlIGAtb2AgZmlsZW5hbWUgb3B0aW9uIGlzIGlu
IGVmZmVjdCwgZWFjaCBwcm9jZXNzZXMgdHJhY2UgaXMgd3JpdHRlbiB0byBm
aWxlbmFtZS5waWQgd2hlcmUgcGlkIGlzIHRoZSBudW1lcmljIHByb2Nlc3Mg
aWQgb2YgZWFjaCBwcm9jZXNzLiBUaGlzIGlzIGluY29tcGF0aWJsZSB3aXRo
IGAtY2AsIHNpbmNlIG5vIHBlci1wcm9jZXNzIGNvdW50cyBhcmUga2VwdC4K
CioqYGx0cmFjZSAtU2Agc2hvd3MgYm90aCBzeXN0ZW0gY2FsbHMgYW5kIGxp
YnJhcnkgY2FsbHMqKgoKVGhpcyBhd2Vzb21lIHRvb2wgdGhlcmVmb3JlIGdp
dmVzIGV2ZW4gZnVydGhlciB2aXNpYmlsaXR5IGludG8gd2hhdCBleGVjdXRh
YmxlcyBhcmUgZG9pbmcuCgoqKmBmdHJhY2VgIG1pbmltYWwgcnVubmFibGUg
ZXhhbXBsZSoqCgpIZXJlIGdvZXMgYSBtaW5pbWFsIHJ1bm5hYmxlIGV4YW1w
bGUuIFJ1biB3aXRoIGBzdWRvYDoKCmBgYGJhc2gKIyEvYmluL3NoCnNldCAt
ZXV4CgpkPWRlYnVnL3RyYWNpbmcKCm1rZGlyIC1wIGRlYnVnCmlmICEgbW91
bnRwb2ludCAtcSBkZWJ1ZzsgdGhlbgogIG1vdW50IC10IGRlYnVnZnMgbm9k
ZXYgZGVidWcKZmkKCiMgU3RvcCB0cmFjaW5nLgplY2hvIDAgPiAiJHtkfS90
cmFjaW5nX29uIgoKIyBDbGVhciBwcmV2aW91cyB0cmFjZXMuCmVjaG8gPiAi
JHtkfS90cmFjZSIKCiMgRmluZCB0aGUgdHJhY2VyIG5hbWUuCmNhdCAiJHtk
fS9hdmFpbGFibGVfdHJhY2VycyIKCiMgRGlzYWJsZSB0cmFjaW5nIGZ1bmN0
aW9ucywgc2hvdyBvbmx5IHN5c3RlbSBjYWxsIGV2ZW50cy4KZWNobyBub3Ag
PiAiJHtkfS9jdXJyZW50X3RyYWNlciIKCiMgRmluZCB0aGUgZXZlbnQgbmFt
ZSB3aXRoLgpncmVwIG1rZGlyICIke2R9L2F2YWlsYWJsZV9ldmVudHMiCgoj
IEVuYWJsZSB0cmFjaW5nIG1rZGlyLgojIEJvdGggc3RhdGVtZW50cyBiZWxv
dyBzZWVtIHRvIGRvIHRoZSBleGFjdCBzYW1lIHRoaW5nLAojIGp1c3Qgd2l0
aCBkaWZmZXJlbnQgaW50ZXJmYWNlcy4KIyBodHRwczovL3d3dy5rZXJuZWwu
b3JnL3N0YXRpYy9odG1sL3Y0LjE4L3RyYWNlL2V2ZW50cy5odG1sCmVjaG8g
c3lzX2VudGVyX21rZGlyID4gIiR7ZH0vc2V0X2V2ZW50IgojIGVjaG8gMSA+
ICIke2R9L2V2ZW50cy9zeXNjYWxscy9zeXNfZW50ZXJfbWtkaXIvZW5hYmxl
IgoKIyBTdGFydCB0cmFjaW5nLgplY2hvIDEgPiAiJHtkfS90cmFjaW5nX29u
IgoKIyBHZW5lcmF0ZSB0d28gbWtkaXIgY2FsbHMgYnkgdHdvIGRpZmZlcmVu
dCBwcm9jZXNzZXMuCnJtIC1yZiAvdG1wL2EgL3RtcC9iCm1rZGlyIC90bXAv
YQpta2RpciAvdG1wL2IKCiMgVmlldyB0aGUgdHJhY2UuCmNhdCAiJHtkfS90
cmFjZSIKCiMgU3RvcCB0cmFjaW5nLgplY2hvIDAgPiAiJHtkfS90cmFjaW5n
X29uIgoKdW1vdW50IGRlYnVnCmBgYAoKU2FtcGxlIG91dHB1dDoKCmBgYGJh
c2gKIyB0cmFjZXI6IG5vcAojCiMgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICBfLS0tLS09PiBpcnFzLW9mZiBodHRwczovL3NvdXJjZXdhcmUub3Jn
L3N5c3RlbXRhcC9kb2N1bWVudGF0aW9uLmh0bWwKIyAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgLyBfLS0tLT0+IG5lZWQtcmVzY2hlZAojICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIHwgLyBfLS0tPT4gaGFyZGlycS9zb2Z0
aXJxCiMgICAgICAgICAgICAgICAgICAgICAgICAgICAgfHwgLyBfLS09PiBw
cmVlbXB0LWRlcHRoCiMgICAgICAgICAgICAgICAgICAgICAgICAgICAgfHx8
IC8gICAgIGRlbGF5CiMgICAgICAgICAgIFRBU0stUElEICAgQ1BVIyAgfHx8
fCAgICBUSU1FU1RBTVAgIEZVTkNUSU9OCiMgICAgICAgICAgICAgIHwgfCAg
ICAgICB8ICAgfHx8fCAgICAgICB8ICAgICAgICAgfAogICAgICAgICAgICBt
a2Rpci01NjE5ICBbMDA1XSAuLi4uIDEwMjQ5LjI2MjUzMTogc3lzX21rZGly
KHBhdGhuYW1lOiA3ZmZmOTNjYmZjYjAsIG1vZGU6IDFmZikKICAgICAgICAg
ICAgbWtkaXItNTYyMCAgWzAwM10gLi4uLiAxMDI0OS4yNjQ2MTM6IHN5c19t
a2RpcihwYXRobmFtZTogN2ZmY2RjOTFlY2IwLCBtb2RlOiAxZmYpCmBgYAoK
T25lIGNvb2wgdGhpbmcgYWJvdXQgdGhpcyBtZXRob2QgaXMgdGhhdCBpdCBz
aG93cyB0aGUgZnVuY3Rpb24gY2FsbCBmb3IgYWxsIHByb2Nlc3NlcyBvbiB0
aGUgc3lzdGVtIGF0IG9uY2UsIGFsdGhvdWdoIHlvdSBjYW4gYWxzbyBmaWx0
ZXIgUElEcyBvZiBpbnRlcmVzdCB3aXRoIGBzZXRfZnRyYWNlX3BpZGAuCgpV
c2VmdWwgcmVzb3VyY2VzOgoKLSBbSG93IGRvIEkgdHJhY2UgYSBzeXN0ZW0g
Y2FsbCBpbiBMaW51eD8gKG9yaWdpbmFsKV0oaHR0cHM6Ly9zdGFja292ZXJm
bG93LmNvbS9xdWVzdGlvbnMvMjk4NDAyMTMvaG93LWRvLWktdHJhY2UtYS1z
eXN0ZW0tY2FsbC1pbi1saW51eCkKLSBbRG9lcyBmdHJhY2UgYWxsb3cgY2Fw
dHVyZSBvZiBzeXN0ZW0gY2FsbCBhcmd1bWVudHMgdG8gdGhlIExpbnV4IGtl
cm5lbCwgb3Igb25seSBmdW5jdGlvbiBuYW1lcz9dKGh0dHBzOi8vc3RhY2tv
dmVyZmxvdy5jb20vcXVlc3Rpb25zLzI3NjA4NzUyL2RvZXMtZnRyYWNlLWFs
bG93LWNhcHR1cmUtb2Ytc3lzdGVtLWNhbGwtYXJndW1lbnRzLXRvLXRoZS1s
aW51eC1rZXJuZWwtb3Itb25seSkKLSBbSG93IHRvIHRyYWNlIGp1c3Qgc3lz
dGVtIGNhbGwgZXZlbnRzIHdpdGggZnRyYWNlIHdpdGhvdXQgc2hvd2luZyBh
bnkgb3RoZXIgZnVuY3Rpb25zIGluIHRoZSBMaW51eCBrZXJuZWw/XShodHRw
czovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy81Mjc2NDU0NC9ob3ct
dG8tdHJhY2UtanVzdC1zeXN0ZW0tY2FsbC1ldmVudHMtd2l0aC1mdHJhY2Ut
d2l0aG91dC1zaG93aW5nLWFueS1vdGhlci1mdW5jdCkKLSBbV2hhdCBzeXN0
ZW0gY2FsbCBpcyB1c2VkIHRvIGxvYWQgbGlicmFyaWVzIGluIExpbnV4P10o
aHR0cHM6Ly91bml4LnN0YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy8yMjY1
MjQvd2hhdC1zeXN0ZW0tY2FsbC1pcy11c2VkLXRvLWxvYWQtbGlicmFyaWVz
LWluLWxpbnV4KQoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5Pjxi
PkhvdyB0byByZW1vdmUgYWxsIGZpbGVzIGV4Y2VwdCBzb21lIGZyb20gYSBk
aXJlY3Rvcnk/PC9iPjwvc3VtbWFyeT48YnI+CgpTb2x1dGlvbiAxIC0gd2l0
aCBgZXh0Z2xvYmA6CgpgYGBiYXNoCnNob3B0IC1zIGV4dGdsb2IKcm0gISh0
ZXh0ZmlsZS50eHR8YmFja3VwLnRhci5nenxzY3JpcHQucGhwfGRhdGFiYXNl
LnNxbHxpbmZvLnR4dCkKYGBgCgpTb2x1dGlvbiAyIC0gd2l0aCBgZmluZGA6
CgpgYGBiYXNoCmZpbmQgLiAtdHlwZSBmIC1ub3QgLW5hbWUgJyp0eHQnIC1w
cmludDAgfCB4YXJncyAtMCBybSAtLQpgYGAKCjwvZGV0YWlscz4KCjxkZXRh
aWxzPgo8c3VtbWFyeT48Yj5Ib3cgdG8gY2hlY2sgaWYgYSBzdHJpbmcgY29u
dGFpbnMgYSBzdWJzdHJpbmcgaW4gQmFzaD88L2I+PC9zdW1tYXJ5Pjxicj4K
CllvdSBjYW4gdXNlIGAqYCAod2lsZGNhcmRzKSBvdXRzaWRlIGEgY2FzZSBz
dGF0ZW1lbnQsIHRvbywgaWYgeW91IHVzZSBkb3VibGUgYnJhY2tldHM6Cgpg
YGBiYXNoCnN0cmluZz0nc29tZSB0ZXh0JwppZiBbWyAkc3RyaW5nID0gKiJN
eSBsb25nIiogXV0gOyB0aGVuCiAgdHJ1ZQpmaQpgYGAKCjwvZGV0YWlscz4K
CjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5FeHBsYWluIGRpZmZlcmVuY2VzIGJl
dHdlZW4gPGNvZGU+Mj4mLTwvY29kZT4sIDxjb2RlPjI+L2Rldi9udWxsPC9j
b2RlPiwgPGNvZGU+fCY8L2NvZGU+LCA8Y29kZT4mPi9kZXYvbnVsbDwvY29k
ZT4sIGFuZCA8Y29kZT4+L2Rldi9udWxsIDI+JjE8L2NvZGU+LjwvYj48L3N1
bW1hcnk+PGJyPgoKLSBhICoqbnVtYmVyIDEqKiA9IHN0YW5kYXJkIG91dCAo
aS5lLiBgU1RET1VUYCkKLSBhICoqbnVtYmVyIDIqKiA9IHN0YW5kYXJkIGVy
cm9yIChpLmUuIGBTVERFUlJgKQotIGlmIGEgbnVtYmVyIGlzbid0IGV4cGxp
Y2l0bHkgZ2l2ZW4sIHRoZW4gKipudW1iZXIgMSoqIGlzIGFzc3VtZWQgYnkg
dGhlIHNoZWxsIChiYXNoKQoKRmlyc3QgbGV0J3MgdGFja2xlIHRoZSBmdW5j
dGlvbiBvZiB0aGVzZS4KCmAyPiYtYAoKVGhlIGdlbmVyYWwgZm9ybSBvZiB0
aGlzIG9uZSBpcyBgTT4mLWAsIHdoZXJlICoqIk0iKiogaXMgYSBmaWxlIGRl
c2NyaXB0b3IgbnVtYmVyLiBUaGlzIHdpbGwgY2xvc2Ugb3V0cHV0IGZvciB3
aGljaGV2ZXIgZmlsZSBkZXNjcmlwdG9yIGlzIHJlZmVyZW5jZWQsIGkuZS4g
KioiTSIqKi4KCmAyPi9kZXYvbnVsbGAKClRoZSBnZW5lcmFsIGZvcm0gb2Yg
dGhpcyBvbmUgaXMgYE0+L2Rldi9udWxsYCwgd2hlcmUgKioiTSIqKiBpcyBh
IGZpbGUgZGVzY3JpcHRvciBudW1iZXIuIFRoaXMgd2lsbCByZWRpcmVjdCB0
aGUgZmlsZSBkZXNjcmlwdG9yLCAqKiJNIioqLCB0byBgL2Rldi9udWxsYC4K
CmAyPiYxYAoKVGhlIGdlbmVyYWwgZm9ybSBvZiB0aGlzIG9uZSBpcyBgTT4m
TmAsIHdoZXJlICoqIk0iKiogJiAqKiJOIioqIGFyZSBmaWxlIGRlc2NyaXB0
b3IgbnVtYmVycy4gSXQgY29tYmluZXMgdGhlIG91dHB1dCBvZiBmaWxlIGRl
c2NyaXB0b3JzICoqIk0iKiogYW5kICoqIk4iKiogaW50byBhIHNpbmdsZSBz
dHJlYW0uCgpgfCZgCgpUaGlzIGlzIGp1c3QgYW4gYWJicmV2aWF0aW9uIGZv
ciBgMj4mMSB8YC4gSXQgd2FzIGFkZGVkIGluIEJhc2ggNC4KCmAmPi9kZXYv
bnVsbGAKClRoaXMgaXMganVzdCBhbiBhYmJyZXZpYXRpb24gZm9yIGA+L2Rl
di9udWxsIDI+JjFgLiBJdCByZWRpcmVjdHMgZmlsZSBkZXNjcmlwdG9yIDIg
KGBTVERFUlJgKSBhbmQgZGVzY3JpcHRvciAxIChgU1RET1VUYCkgdG8gYC9k
ZXYvbnVsbGAuCgpgPi9kZXYvbnVsbGAKClRoaXMgaXMganVzdCBhbiBhYmJy
ZXZpYXRpb24gZm9yIGAxPi9kZXYvbnVsbGAuIEl0IHJlZGlyZWN0cyBmaWxl
IGRlc2NyaXB0b3IgMSAoYFNURE9VVGApIHRvIGAvZGV2L251bGxgLgoKVXNl
ZnVsIHJlc291cmNlczoKCi0gW0RpZmZlcmVuY2UgYmV0d2VlbiAyPiYtLCAy
Pi9kZXYvbnVsbCwgfCYsICY+L2Rldi9udWxsIGFuZCA+L2Rldi9udWxsIDI+
JjFdKGh0dHBzOi8vdW5peC5zdGFja2V4Y2hhbmdlLmNvbS9xdWVzdGlvbnMv
NzA5NjMvZGlmZmVyZW5jZS1iZXR3ZWVuLTItMi1kZXYtbnVsbC1kZXYtbnVs
bC1hbmQtZGV2LW51bGwtMjEpCi0gW0NoYXB0ZXIgMjAuIEkvTyBSZWRpcmVj
dGlvbl0oaHR0cDovL3d3dy50bGRwLm9yZy9MRFAvYWJzL2h0bWwvaW8tcmVk
aXJlY3Rpb24uaHRtbCkKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFy
eT48Yj5Ib3cgdG8gcmVkaXJlY3Qgc3RkZXJyIGFuZCBzdGRvdXQgdG8gZGlm
ZmVyZW50IGZpbGVzIGluIHRoZSBzYW1lIGxpbmU/PC9iPjwvc3VtbWFyeT48
YnI+CgpKdXN0IGFkZCB0aGVtIGluIG9uZSBsaW5lIGBjb21tYW5kIDI+PiBl
cnJvciAxPj4gb3V0cHV0YC4KCkhvd2V2ZXIsIG5vdGUgdGhhdCBgPj5gIGlz
IGZvciBhcHBlbmRpbmcgaWYgdGhlIGZpbGUgYWxyZWFkeSBoYXMgZGF0YS4g
V2hlcmVhcywgYD5gIHdpbGwgb3ZlcndyaXRlIGFueSBleGlzdGluZyBkYXRh
IGluIHRoZSBmaWxlLgoKU28sIGBjb21tYW5kIDI+IGVycm9yIDE+IG91dHB1
dGAgaWYgeW91IGRvIG5vdCB3YW50IHRvIGFwcGVuZC4KCkp1c3QgZm9yIGNv
bXBsZXRpb24ncyBzYWtlLCB5b3UgY2FuIHdyaXRlIGAxPmAgYXMganVzdCBg
PmAgc2luY2UgdGhlIGRlZmF1bHQgZmlsZSBkZXNjcmlwdG9yIGlzIHRoZSBv
dXRwdXQuIHNvIGAxPmAgYW5kIGA+YCBpcyB0aGUgc2FtZSB0aGluZy4KClNv
LCBgY29tbWFuZCAyPiBlcnJvciAxPiBvdXRwdXRgIGJlY29tZXMsIGBjb21t
YW5kIDI+IGVycm9yID4gb3V0cHV0YC4KCjwvZGV0YWlscz4KCjxkZXRhaWxz
Pgo8c3VtbWFyeT48Yj5Mb2FkIGF2ZXJhZ2VzIGFyZSBhYm92ZSAzMCBvbiBh
IHNlcnZlciB3aXRoIDI0IGNvcmVzIGJ1dCBDUFUgc2hvd3MgYXJvdW5kIDcw
IHBlcmNlbnQgaWRsZS4gT25lIG9mIHRoZSBjb21tb24gY2F1c2VzIG9mIHRo
aXMgY29uZGl0aW9uIGlzPyBIb3cgdG8gZGVidWcgYW5kIGZpeGVkPzwvYj48
L3N1bW1hcnk+PGJyPgoKUmVxdWVzdHMgd2hpY2ggaW52b2x2ZSBkaXNrIEkv
TyBjYW4gYmUgc2xvd2VkIGdyZWF0bHkgaWYgY3B1KHMpIG5lZWRzIHRvIHdh
aXQgb24gdGhlIGRpc2sgdG8gcmVhZCBvciB3cml0ZSBkYXRhLiBJL08gV2Fp
dCwgaXMgdGhlIHBlcmNlbnRhZ2Ugb2YgdGltZSB0aGUgQ1BVIGhhcyB0byB3
YWl0IG9uIGRpc2suCgpMZXRzIGxvb2tzIGF0IGhvdyB3ZSBjYW4gY29uZmly
bSBpZiBkaXNrIEkvTyBpcyBzbG93aW5nIGRvd24gYXBwbGljYXRpb24gcGVy
Zm9ybWFuY2UgYnkgdXNpbmcgYSBmZXcgdGVybWluYWwgY29tbWFuZCBsaW5l
IHRvb2xzIChgdG9wYCwgYGF0b3BgIGFuZCBgaW90b3BgKS4KCkV4YW1wbGUg
b2YgZGVidWc6CgotIGFuc3dlcmluZyB3aGV0aGVyIG9yIG5vdCBJL08gaXMg
Y2F1c2luZyBzeXN0ZW0gc2xvd25lc3MKLSBmaW5kaW5nIHdoaWNoIGRpc2sg
aXMgYmVpbmcgd3JpdHRlbiB0bwotIGZpbmRpbmcgdGhlIHByb2Nlc3NlcyB0
aGF0IGFyZSBjYXVzaW5nIGhpZ2ggSS9PCi0gcHJvY2VzcyBsaXN0ICoqc3Rh
dGUqKgotIGZpbmRpbmcgd2hhdCBmaWxlcyBhcmUgYmVpbmcgd3JpdHRlbiB0
b28gaGVhdmlseQotIGRvIHlvdSBzZWUgeW91ciBjb3B5IHByb2Nlc3MgcHV0
IGluICoqRCoqIHN0YXRlIHdhaXRpbmcgZm9yIEkvTyB3b3JrIHRvIGJlIGRv
bmUgYnkgcGRmbHVzaD8KLSBkbyB5b3Ugc2VlIGhlYXZ5IHN5bmNocm9ub3Vz
IHdyaXRlIGFjdGl2aXR5IG9uIHlvdXIgZGlza3M/CgphbHNvOgoKLSB1c2lu
ZyBgdG9wYCBjb21tYW5kIC0gbG9hZCBhdmVyYWdlcyBhbmQgd2EgKHdhaXQg
dGltZSkKLSB1c2luZyBgYXRvcGAgY29tbWFuZCB0byBtb25pdG9yIERTSyAo
ZGlzaykgSS9PIHN0YXRzCi0gdXNpbmcgYGlvdG9wYCBjb21tYW5kIGZvciBy
ZWFsLXRpbWUgaW5zaWdodCBvbiBkaXNrIHJlYWQvd3JpdGVzCgpGb3IgaW1w
cm92ZW1lbnQgcGVyZm9ybWFuY2U6CgotIGNoZWNrIGRyaXZlIGFycmF5IGNv
bmZpZ3VyYXRpb24KLSBjaGVjayBkaXNrIHF1ZXVpbmcgYWxnb3JpdGhtcyBh
bmQgdHVuaW5nIHRoZW0KLSB0dW5pbmcgZ2VuZXJhbCBibG9jayBJL08gcGFy
YW1ldGVycwotIHR1bmluZyB2aXJ0dWFsIG1lbW9yeSBtYW5hZ2VtZW50IHRv
IGltcHJvdmUgSS9PIHBlcmZvcm1hbmNlCi0gY2hlY2sgYW5kIHR1bmluZyBt
b3VudCBvcHRpb25zIGFuZCBmaWxlc3lzdGVtIHBhcmFtcyAoYWxzbyByZXNw
b25zaWJsZSBmb3IgY2FjaGUpCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbTGlu
dXggc2VydmVyIHBlcmZvcm1hbmNlOiBJcyBkaXNrIEkvTyBzbG93aW5nIHlv
dXIgYXBwbGljYXRpb24/IChvcmlnaW5hbCldKGh0dHBzOi8vaGF5ZGVuamFt
ZXMuaW8vbGludXgtc2VydmVyLXBlcmZvcm1hbmNlLWRpc2staW8tc2xvd2lu
Zy1hcHBsaWNhdGlvbi8pCi0gW1Ryb3VibGVzaG9vdGluZyBIaWdoIEkvTyBX
YWl0IGluIExpbnV4XShodHRwczovL2JlbmNhbmUuY29tLzIwMTIvMDgvMDYv
dHJvdWJsZXNob290aW5nLWhpZ2gtaW8td2FpdC1pbi1saW51eC8pCi0gW0Rl
YnVnZ2luZyBMaW51eCBJL08gbGF0ZW5jeV0oaHR0cHM6Ly9zdXBlcnVzZXIu
Y29tL3F1ZXN0aW9ucy8zOTY2OTYvZGVidWdnaW5nLWxpbnV4LWktby1sYXRl
bmN5KQotIFtIb3cgZG8gcGRmbHVzaCwga2pvdXJuYWxkLCBzd2FwZCwgZXRj
IGludGVyb3BlcmF0ZT9dKGh0dHBzOi8vdW5peC5zdGFja2V4Y2hhbmdlLmNv
bS9xdWVzdGlvbnMvNzY5NzAvaG93LWRvLXBkZmx1c2gta2pvdXJuYWxkLXN3
YXBkLWV0Yy1pbnRlcm9wZXJhdGUpCi0gWzUgd2F5cyB0byBpbXByb3ZlIEhE
RCBzcGVlZCBvbiBMaW51eF0oaHR0cHM6Ly90aGVjb2RlYXJ0aXN0LmJsb2dz
cG90LmNvbS8yMDEyLzA2L2ltcHJvdmluZy1oZGQtcGVyZm9ybWFuY2UtbGlu
dXguaHRtbCkKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5I
b3cgdG8gZW5mb3JjZSBhdXRob3JpemF0aW9uIG1ldGhvZHMgaW4gU1NIPyBJ
biB3aGF0IHNpdHVhdGlvbnMgaXQgd291bGQgYmUgdXNlZnVsPzwvYj48L3N1
bW1hcnk+PGJyPgoKRm9yY2UgbG9naW4gd2l0aCBhIHBhc3N3b3JkOgoKYGBg
YmFzaApzc2ggLW8gUHJlZmVycmVkQXV0aGVudGljYXRpb25zPXBhc3N3b3Jk
IC1vIFB1YmtleUF1dGhlbnRpY2F0aW9uPW5vIHVzZXJAcmVtb3RlX2hvc3QK
YGBgCgpGb3JjZSBsb2dpbiB1c2luZyB0aGUga2V5OgoKYGBgYmFzaApzc2gg
LW8gUHJlZmVycmVkQXV0aGVudGljYXRpb25zPXB1YmxpY2tleSAtbyBQdWJr
ZXlBdXRoZW50aWNhdGlvbj15ZXMgLWkgaWRfcnNhIHVzZXJAcmVtb3RlX2hv
c3QKYGBgCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbSG93IHRvIGZvcmNlIHNz
aCBjbGllbnQgdG8gdXNlIG9ubHkgcGFzc3dvcmQgYXV0aD9dKGh0dHBzOi8v
dW5peC5zdGFja2V4Y2hhbmdlLmNvbS9xdWVzdGlvbnMvMTUxMzgvaG93LXRv
LWZvcmNlLXNzaC1jbGllbnQtdG8tdXNlLW9ubHktcGFzc3dvcmQtYXV0aCkK
CjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5HZXR0aW5nIDxj
b2RlPlRvbyBtYW55IE9wZW4gZmlsZXM8L2NvZGU+IGVycm9yIGZvciBQb3N0
Z3Jlcy4gSG93IHRvIHJlc29sdmUgaXQ/PC9iPjwvc3VtbWFyeT48YnI+CgpG
aXhlZCB0aGUgaXNzdWUgYnkgcmVkdWNpbmcgYG1heF9maWxlc19wZXJfcHJv
Y2Vzc2AgZS5nLiB0byAyMDAgZnJvbSBkZWZhdWx0IDEwMDAuIFRoaXMgcGFy
YW1ldGVyIGlzIGluIGBwb3N0Z3Jlc3FsLmNvbmZgIGZpbGUgYW5kIHRoaXMg
c2V0cyB0aGUgbWF4aW11bSBudW1iZXIgb2Ygc2ltdWx0YW5lb3VzbHkgb3Bl
biBmaWxlcyBhbGxvd2VkIHRvIGVhY2ggc2VydmVyIHN1YnByb2Nlc3MuCgpV
c3VhbGx5IHBlb3BsZSBzdGFydCB0byBlZGl0IGAvZXRjL3NlY3VyaXR5L2xp
bWl0cy5jb25mYCBmaWxlLCBidXQgZm9yZ2V0IHRoYXQgdGhpcyBmaWxlIG9u
bHkgYXBwbHkgdG8gdGhlIGFjdGl2ZWx5IGxvZ2dlZCBpbiB1c2VycyB0aHJv
dWdoIHRoZSBQQU0gc3lzdGVtLgoKPC9kZXRhaWxzPgoKPGRldGFpbHM+Cjxz
dW1tYXJ5PjxiPkluIHdoYXQgY2lyY3Vtc3RhbmNlIGNhbiA8Y29kZT5kZjwv
Y29kZT4gYW5kIDxjb2RlPmR1PC9jb2RlPiBkaXNhZ3JlZSBvbiBhdmFpbGFi
bGUgZGlzayBzcGFjZT8gSG93IGRvIHlvdSBzb2x2ZSBpdD88L2I+PC9zdW1t
YXJ5Pjxicj4KCmBkdWAgY2hlY2tzIHVzYWdlIG9mIGRpcmVjdG9yaWVzLCBi
dXQgYGRmYCBjaGVja3MgZnJlZSdkIGlub2RlcywgYW5kIGZpbGVzIGNhbiBi
ZSBoZWxkIG9wZW4gYW5kIHRha2Ugc3BhY2UgYWZ0ZXIgdGhleSdyZSBkZWxl
dGVkLgoKKipTb2x1dGlvbiAxKioKCkNoZWNrIGZvciBmaWxlcyBvbiBsb2Nh
dGVkIHVuZGVyIG1vdW50IHBvaW50cy4gRnJlcXVlbnRseSBpZiB5b3UgbW91
bnQgYSBkaXJlY3RvcnkgKHNheSBhIHNhbWJhZnMpIG9udG8gYSBmaWxlc3lz
dGVtIHRoYXQgYWxyZWFkeSBoYWQgYSBmaWxlIG9yIGRpcmVjdG9yaWVzIHVu
ZGVyIGl0LCB5b3UgbG9zZSB0aGUgYWJpbGl0eSB0byBzZWUgdGhvc2UgZmls
ZXMsIGJ1dCB0aGV5J3JlIHN0aWxsIGNvbnN1bWluZyBzcGFjZSBvbiB0aGUg
dW5kZXJseWluZyBkaXNrLgoKSSd2ZSBoYWQgZmlsZSBjb3BpZXMgd2hpbGUg
aW4gc2luZ2xlIHVzZXIgbW9kZSBkdW1wIGZpbGVzIGludG8gZGlyZWN0b3Jp
ZXMgdGhhdCBJIGNvdWxkbid0IHNlZSBleGNlcHQgaW4gc2luZ2xlIHVzZXJt
b2RlIChkdWUgdG8gb3RoZXIgZGlyZWN0b3J5IHN5c3RlbXMgYmVpbmcgbW91
bnRlZCBvbiB0b3Agb2YgdGhlbSkuCgoqKlNvbHV0aW9uIDIqKgoKT24gdGhl
IG90aGVyIGhhbmQgYGRmIC1oYCBhbmQgYGR1IC1zaGAgY291bGQgbWlzbWF0
Y2hlZCBieSBhYm91dCA1MCUgb2YgdGhlIGhhcmQgZGlzayBzaXplLiBUaGlz
IHdhcyBjYXVzZWQgYnkgZS5nLiBBcGFjaGUgKGh0dHBkKSBrZWVwaW5nIGxh
cmdlIGxvZyBmaWxlcyBpbiBtZW1vcnkgd2hpY2ggaGFkIGJlZW4gZGVsZXRl
ZCBmcm9tIGRpc2suCgpUaGlzIHdhcyB0cmFja2VkIGRvd24gYnkgcnVubmlu
ZyBgbHNvZiB8IGdyZXAgIi92YXIiIHwgZ3JlcCBkZWxldGVkYCB3aGVyZSBg
L3ZhcmAgd2FzIHRoZSBwYXJ0aXRpb24gSSBuZWVkZWQgdG8gY2xlYW4gdXAu
CgpUaGUgb3V0cHV0IHNob3dlZCBsaW5lcyBsaWtlIHRoaXM6CgpgYGAKaHR0
cGQgICAgIDMyNjE3ICAgIG5vYm9keSAgMTA2dyAgICAgIFJFRyAgICAgICAg
OSw0IDE4MzUyMjI5NDQgICAgIDY4ODE2NiAvdmFyL2xvZy9hcGFjaGUvYXdz
dGF0c19sb2cgKGRlbGV0ZWQpCmBgYAoKVGhlIHNpdHVhdGlvbiB3YXMgdGhl
biByZXNvbHZlZCBieSByZXN0YXJ0aW5nIEFwYWNoZSAoYHNlcnZpY2UgaHR0
cGQgcmVzdGFydGApIGFuZCBjbGVhcmVkIG9mIGRpc2sgc3BhY2UsIGJ5IGFs
bG93aW5nIHRoZSBsb2NrcyBvbiBkZWxldGVkIGZpbGVzIHRvIGJlIGNsZWFy
ZWQuCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbV2h5IGR1IGFuZCBkZiBkaXNw
bGF5IGRpZmZlcmVudCB2YWx1ZXMgaW4gTGludXggYW5kIFVuaXhdKGh0dHBz
Oi8vbGludXhzaGVsbGFjY291bnQuYmxvZ3Nwb3QuY29tLzIwMDgvMTIvd2h5
LWR1LWFuZC1kZi1kaXNwbGF5LWRpZmZlcmVudC12YWx1ZXMuaHRtbCkKCjwv
ZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5XaGF0IGlzIHRoZSBk
aWZmZXJlbmNlIGJldHdlZW4gZW5jcnlwdGlvbiBhbmQgaGFzaGluZz88L2I+
PC9zdW1tYXJ5Pjxicj4KCioqSGFzaGluZyoqOiBGaW5hbGx5LCBoYXNoaW5n
IGlzIGEgZm9ybSBvZiBjcnlwdG9ncmFwaGljIHNlY3VyaXR5IHdoaWNoIGRp
ZmZlcnMgZnJvbSAqKmVuY3J5cHRpb24qKiB3aGVyZWFzICoqZW5jcnlwdGlv
bioqIGlzIGEgdHdvIHN0ZXAgcHJvY2VzcyB1c2VkIHRvIGZpcnN0IGVuY3J5
cHQgYW5kIHRoZW4gZGVjcnlwdCBhIG1lc3NhZ2UsICoqaGFzaGluZyoqIGNv
bmRlbnNlcyBhIG1lc3NhZ2UgaW50byBhbiBpcnJldmVyc2libGUgZml4ZWQt
bGVuZ3RoIHZhbHVlLCBvciBoYXNoLgoKPC9kZXRhaWxzPgoKPGRldGFpbHM+
CjxzdW1tYXJ5PjxiPlNob3VsZCB0aGUgcm9vdCBjZXJ0aWZpY2F0ZSBnbyBv
biB0aGUgc2VydmVyPzwvYj48L3N1bW1hcnk+PGJyPgoKKipTZWxmLXNpZ25l
ZCByb290IGNlcnRpZmljYXRlcyoqIG5lZWQgbm90L3Nob3VsZCBub3QgYmUg
aW5jbHVkZWQgaW4gd2ViIHNlcnZlciBjb25maWd1cmF0aW9uLiBUaGV5IHNl
cnZlIG5vIHB1cnBvc2UgKGNsaWVudHMgd2lsbCBhbHdheXMgaWdub3JlIHRo
ZW0pIGFuZCB0aGV5IGluY3VyIGEgc2xpZ2h0IHBlcmZvcm1hbmNlIChsYXRl
bmN5KSBwZW5hbHR5IGJlY2F1c2UgdGhleSBpbmNyZWFzZSB0aGUgc2l6ZSBv
ZiB0aGUgU1NMIGhhbmRzaGFrZS4KCklmIHRoZSBjbGllbnQgZG9lcyBub3Qg
aGF2ZSB0aGUgcm9vdCBpbiB0aGVpciB0cnVzdCBzdG9yZSwgdGhlbiBpdCB3
b24ndCB0cnVzdCB0aGUgd2ViIHNpdGUsIGFuZCB0aGVyZSBpcyBubyB3YXkg
dG8gd29yayBhcm91bmQgdGhhdCBwcm9ibGVtLiBIYXZpbmcgdGhlIHdlYiBz
ZXJ2ZXIgc2VuZCB0aGUgcm9vdCBjZXJ0aWZpY2F0ZSB3aWxsIG5vdCBoZWxw
IC0gdGhlIHJvb3QgY2VydGlmaWNhdGUgaGFzIHRvIGNvbWUgZnJvbSBhIHRy
dXN0ZWQgM3JkIHBhcnR5IChpbiBtb3N0IGNhc2VzIHRoZSBicm93c2VyIHZl
bmRvcikuCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbU1NMIHJvb3QgY2VydGlm
aWNhdGUgb3B0aW9uYWw/XShodHRwczovL3NlY3VyaXR5LnN0YWNrZXhjaGFu
Z2UuY29tL3F1ZXN0aW9ucy82NTMzMi9zc2wtcm9vdC1jZXJ0aWZpY2F0ZS1v
cHRpb25hbCkKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5I
b3cgdG8gbG9nIGFsbCBjb21tYW5kcyBydW4gYnkgcm9vdCBvbiBwcm9kdWN0
aW9uIHNlcnZlcnM/PC9iPjwvc3VtbWFyeT48YnI+CgpgYXVkaXRkYCBpcyB0
aGUgY29ycmVjdCB0b29sIGZvciB0aGUgam9iIGhlcmU6CgoxLiBBZGQgdGhl
c2UgMiBsaW5lcyB0byBgL2V0Yy9hdWRpdC9hdWRpdC5ydWxlc2A6CgpgYGBi
YXNoCi1hIGV4aXQsYWx3YXlzIC1GIGFyY2g9YjY0IC1GIGV1aWQ9MCAtUyBl
eGVjdmUKLWEgZXhpdCxhbHdheXMgLUYgYXJjaD1iMzIgLUYgZXVpZD0wIC1T
IGV4ZWN2ZQpgYGAKClRoZXNlIHdpbGwgdHJhY2sgYWxsIGNvbW1hbmRzIHJ1
biBieSByb290IChldWlkPTApLiBXaHkgdHdvIHJ1bGVzPyBUaGUgZXhlY3Zl
IHN5c2NhbGwgbXVzdCBiZSB0cmFja2VkIGluIGJvdGggMzIgYW5kIDY0IGJp
dCBjb2RlLgoKMi4gVG8gZ2V0IHJpZCBvZiBgYXVpZD00Mjk0OTY3Mjk1YCBt
ZXNzYWdlcyBpbiBsb2dzLCBhZGQgYGF1ZGl0PTFgIHRvIHRoZSBrZXJuZWwn
cyBjbWRsaW5lIChieSBlZGl0aW5nIGAvZXRjL2RlZmF1bHQvZ3J1YmApCgoz
LiBQbGFjZSB0aGUgbGluZQoKYGBgYmFzaApzZXNzaW9uICByZXF1aXJlZCAg
ICAgICAgICAgICAgICBwYW1fbG9naW51aWQuc28KYGBgCgppbiBhbGwgUEFN
IGNvbmZpZyBmaWxlcyB0aGF0IGFyZSByZWxldmFudCB0byBsb2dpbiAoYC9l
dGMvcGFtLmQve2xvZ2luLGtkbSxzc2hkfWApLCBidXQgbm90IGluIHRoZSBm
aWxlcyB0aGF0IGFyZSByZWxldmFudCB0byBzdSBvciBzdWRvLiBUaGlzIHdp
bGwgYWxsb3cgYXVkaXRkIHRvIGdldCB0aGUgY2FsbGluZyB1c2VyJ3MgdWlk
IGNvcnJlY3RseSB3aGVuIGNhbGxpbmcgc3VkbyBvciBzdS4KClJlc3RhcnQg
eW91ciBzeXN0ZW0gbm93LgoKTGV0J3MgbG9naW4gYW5kIHJ1biBzb21lIGNv
bW1hbmRzOgoKYGBgYmFzaAokIGlkIC11CjEwMDAKJCBzdWRvIGxzIC8KYmlu
ICBib290ICBkYXRhICBkZXYgIGV0YyAgaG9tZSAgaW5pdHJkLmltZyAgaW5p
dHJkLmltZy5vbGQgIGxpYiAgbGliMzIgIGxpYjY0ICBsb3N0K2ZvdW5kICBt
ZWRpYSAgbW50ICBvcHQgIHByb2MgIHJvb3QgIHJ1biAgc2JpbiAgc2NyYXRj
aCAgc2VMaW51eCAgc3J2ICBzeXMgIHRtcCAgdXNyICB2YXIgIHZtbGludXog
IHZtbGludXoub2xkCiQgc3VkbyBzdSAtCiMgbHMgL2V0YwpbLi4uXQpgYGAK
Ck5vdyByZWFkIGAvdmFyL2xvZy9hdWRpdC9hdWRpdGQubG9nYCBmb3Igc2hv
dyB3aGF0IGhhcyBiZWVuIGxvZ2dlZCBpbi4KClVzZWZ1bCByZXNvdXJjZXM6
CgotIFtMb2cgYWxsIGNvbW1hbmRzIHJ1biBieSBhZG1pbnMgb24gcHJvZHVj
dGlvbiBzZXJ2ZXJzXShodHRwczovL3NlcnZlcmZhdWx0LmNvbS9xdWVzdGlv
bnMvNDcwNzU1L2xvZy1hbGwtY29tbWFuZHMtcnVuLWJ5LWFkbWlucy1vbi1w
cm9kdWN0aW9uLXNlcnZlcnMpCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1
bW1hcnk+PGI+SG93IHRvIHByZXZlbnQgPGNvZGU+ZGQ8L2NvZGU+IGZyb20g
ZnJlZXppbmcgeW91ciBzeXN0ZW0/PC9iPjwvc3VtbWFyeT48YnI+CgpUcnkg
dXNpbmcgaW9uaWNlOgoKYGBgYmFzaAppb25pY2UgLWMzIGRkIGlmPS9kZXYv
emVybyBvZj1maWxlCmBgYAoKVGhpcyBzdGFydCB0aGUgYGRkYCBwcm9jZXNz
IHdpdGggdGhlICJpZGxlIiBJTyBwcmlvcml0eTogaXQgb25seSBnZXRzIGRp
c2sgdGltZSB3aGVuIG5vIG90aGVyIHByb2Nlc3MgaXMgdXNpbmcgZGlzayBJ
TyBmb3IgYSBjZXJ0YWluIGFtb3VudCBvZiB0aW1lLgoKT2YgY291cnNlIHRo
aXMgY2FuIHN0aWxsIGZsb29kIHRoZSBidWZmZXIgY2FjaGUgYW5kIGNhdXNl
IGZyZWV6ZXMgd2hpbGUgdGhlIHN5c3RlbSBmbHVzaGVzIG91dCB0aGUgY2Fj
aGUgdG8gZGlzay4gVGhlcmUgYXJlIHR1bmFibGVzIHVuZGVyIGAvcHJvYy9z
eXMvdm0vYCB0byBpbmZsdWVuY2UgdGhpcywgcGFydGljdWxhcmx5IHRoZSBg
ZGlydHlfKmAgZW50cmllcy4KCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3Vt
bWFyeT48Yj5Ib3cgdG8gbGltaXQgcHJvY2Vzc2VzIHRvIG5vdCBleGNlZWQg
bW9yZSB0aGFuIFglIG9mIENQVSB1c2FnZT88L2I+PC9zdW1tYXJ5Pjxicj4K
CioqbmljZS9yZW5pY2UqKgoKbmljZSBpcyBhIGdyZWF0IHRvb2wgZm9yICdv
bmUgb2ZmJyB0d2Vha3MgdG8gYSBzeXN0ZW06CgpgYGBiYXNoCm5pY2UgQ09N
TUFORApgYGAKCioqY3B1bGltaXQqKgoKY3B1bGltaXQgaWYgeW91IG5lZWQg
dG8gcnVuIGEgQ1BVIGludGVuc2l2ZSBqb2IgYW5kIGhhdmluZyBmcmVlIENQ
VSB0aW1lIGlzIGVzc2VudGlhbCBmb3IgdGhlIHJlc3BvbnNpdmVuZXNzIG9m
IGEgc3lzdGVtOgoKYGBgYmFzaApjcHVsaW1pdCAtbCA1MCBDT01NQU5ECmBg
YAoKKipjZ3JvdXBzKioKCmNncm91cHMgYXBwbHkgbGltaXRzIHRvIGEgc2V0
IG9mIHByb2Nlc3NlcywgcmF0aGVyIHRoYW4gdG8ganVzdCBvbmU6CgpgYGBi
YXNoCmNnY3JlYXRlIC1nIGNwdTovY3B1bGltaXRlZApjZ3NldCAtciBjcHUu
c2hhcmVzPTUxMiBjcHVsaW1pdGVkCmNnZXhlYyAtZyBjcHU6Y3B1bGltaXRl
ZCBDT01NQU5EXzEKY2dleGVjIC1nIGNwdTpjcHVsaW1pdGVkIENPTU1BTkRf
MgpjZ2V4ZWMgLWcgY3B1OmNwdWxpbWl0ZWQgQ09NTUFORF8zCmBgYAoKPC9k
ZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPkhvdyBtb3VudCBhIHRl
bXBvcmFyeSByYW0gcGFydGl0aW9uPzwvYj48L3N1bW1hcnk+PGJyPgoKYGBg
YmFzaAojIC10IC0gZmlsZXN5c3RlbSB0eXBlCiMgLW8gLSBtb3VudCBvcHRp
b25zCm1vdW50IC10IHRtcGZzIHRtcGZzIC9tbnQgLW8gc2l6ZT02NE0KYGBg
Cgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+SG93IHRvIGtp
bGxzIGEgcHJvY2VzcyB0aGF0IGlzIGxvY2tpbmcgYSBmaWxlPzwvYj48L3N1
bW1hcnk+PGJyPgoKYGBgYmFzaApmdXNlciAtayBmaWxlbmFtZQpgYGAKCjwv
ZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5PdGhlciBhZG1pbiB0
cnlpbmcgdG8gZGVidWcgYSBzZXJ2ZXIgYWNjaWRlbnRhbGx5IHR5cGVkOiA8
Y29kZT5jaG1vZCAteCAvYmluL2NobW9kPC9jb2RlPi4gSG93IHRvIHJlc2V0
IHBlcm1pc3Npb25zIGJhY2sgdG8gZGVmYXVsdD88L2I+PC9zdW1tYXJ5Pjxi
cj4KCmBgYGJhc2gKIyAxOgpjcCAvYmluL2xzIGNobW9kLjAxCmNwIC9iaW4v
Y2htb2QgY2htb2QuMDEKLi9jaG1vZC4wMSA3MDAgZmlsZQoKIyAyOgovYmlu
L2J1c3lib3ggY2htb2QgMDcwMCAvYmluL2NobW9kCgojIDM6CnNldGZhY2wg
LS1zZXQgdTo6cnd4LGc6Oi0tLSxvOjotLS0gL2Jpbi9jaG1vZAoKIyA0Ogov
dXNyL2xpYi9sZCouc28gL2Jpbi9jaG1vZCAwNzAwIC9iaW4vY2htb2QKYGBg
CgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBbV2hhdCBjYW4geW91IGRvIHdoZW4g
eW91IGNhbid0IGNobW9kIGNobW9kP10oaHR0cHM6Ly93d3cubmV0d29ya3dv
cmxkLmNvbS9hcnRpY2xlLzMwMDIyODYvb3BlcmF0aW5nLXN5c3RlbXMvd2hh
dC1jYW4teW91LWRvLXdoZW4teW91LWNhbnQtY2htb2QtY2htb2QuaHRtbCkK
CjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj48Y29kZT5ncnVi
PjwvY29kZT4gdnMgPGNvZGU+Z3J1Yi1yZXNjdWU+PC9jb2RlPi4gRXhwbGFp
bi48L2I+PC9zdW1tYXJ5Pjxicj4KCi0gYGdydWI+YCAtIHRoaXMgaXMgdGhl
IG1vZGUgdG8gd2hpY2ggaXQgcGFzc2VzIGlmIHlvdSBmaW5kIGV2ZXJ5dGhp
bmcgeW91IG5lZWQgdG8gcnVuIHRoZSBzeXN0ZW0gaW4gYWRkaXRpb24gdG8g
dGhlIGNvbmZpZ3VyYXRpb24gZmlsZS4gV2l0aCB0aGlzIG1vZGUsIHdlIGhh
dmUgYWNjZXNzIHRvIG1vc3QgKGlmIG5vdCBhbGwpIG1vZHVsZXMgYW5kIGNv
bW1hbmRzLiBUaGlzIG1vZGUgY2FuIGJlIGNhbGxlZCBmcm9tIHRoZSBtZW51
IGJ5IHByZXNzaW5nIHRoZSAnYycga2V5Ci0gYGdydWItcmVzY3VlYCAtIHRo
aXMgaXMgdGhlIG1vZGUgdG8gd2hpY2ggaXQgcGFzc2VzIGlmIGl0IGlzIGlt
cG9zc2libGUgdG8gZmluZCBpdHMgb3duIGRpcmVjdG9yeSAoZXNwZWNpYWxs
eSB0aGUgZGlyZWN0b3J5IHdpdGggbW9kdWxlcyBhbmQgYWRkaXRpb25hbCBj
b21tYW5kcywgZS5nLiBkaXJlY3RvcnkgYC9ib290L2dydWIvaTM4Ni1wY2Ap
LCBpZiBpdHMgY29udGVudHMgYXJlIGRhbWFnZWQgb3IgaWYgbm8gbm9ybWFs
IG1vZHVsZSBpcyBmb3VuZCwgY29udGFpbnMgb25seSBiYXNpYyBjb21tYW5k
cwoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPkhvdyB0byBj
aGVjayB3aGV0aGVyIHRoZSBwcml2YXRlIGtleSBhbmQgdGhlIGNlcnRpZmlj
YXRlIG1hdGNoPzwvYj48L3N1bW1hcnk+PGJyPgoKYGBgYmFzaAoob3BlbnNz
bCByc2EgLW5vb3V0IC1tb2R1bHVzIC1pbiBwcml2YXRlLmtleSB8IG9wZW5z
c2wgbWQ1IDsgb3BlbnNzbCB4NTA5IC1ub291dCAtbW9kdWx1cyAtaW4gY2Vy
dGlmaWNhdGUuY3J0IHwgb3BlbnNzbCBtZDUpIHwgdW5pcQpgYGAKCjwvZGV0
YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5Ib3cgdG8gYWRkIG5ldyB1
c2VyIHdpdGhvdXQgdXNpbmcgPGNvZGU+dXNlcmFkZDwvY29kZT4vPGNvZGU+
YWRkdXNlcjwvY29kZT4gY29tbWFuZHM/PC9iPjwvc3VtbWFyeT48YnI+Cgox
LiBBZGQgYW4gZW50cnkgb2YgdXNlciBkZXRhaWxzIGluIDxjb2RlPi9ldGMv
cGFzc3dkPC9jb2RlPiB3aXRoIGB2aXB3YDoKCmBgYGJhc2gKIyB1c2VybmFt
ZTpwYXNzd29yZDpVSUQ6R0lEOkNvbW1lbnRzOkhvbWVfRGlyZWN0b3J5Okxv
Z2luIFNoZWxsCnVzZXI6eDo1MDE6NTAxOnRlc3QgdXNlcjovaG9tZS91c2Vy
Oi9iaW4vYmFzaApgYGAKCiAgPiBCZSBjYXJlZnVsIHdpdGggdGhlIHN5bnRh
eC4gRG8gbm90IGVkaXQgZGlyZWN0bHkgd2l0aCBhbiBlZGl0b3IuIGB2aXB3
YCBsb2NrcyB0aGUgZmlsZSwgc28gdGhhdCBvdGhlciBjb21tYW5kcyB3b24n
dCB0cnkgdG8gdXBkYXRlIGl0IGF0IHRoZSBzYW1lIHRpbWUuCgoyLiBZb3Ug
d2lsbCBoYXZlIHRvIGNyZWF0ZSBhIGdyb3VwIHdpdGggc2FtZSBuYW1lIGlu
IDxjb2RlPi9ldGMvZ3JvdXA8L2NvZGU+IHdpdGggYHZpZ3JgIChzaW1pbGFy
IHRvb2wgZm9yIGB2aXB3YCk6CgpgYGBiYXNoCnVzZXI6eDo1MDE6CmBgYAoK
My4gQXNzaWduIGEgcGFzc3dvcmQgdG8gdGhlIHVzZXI6CgpgYGBiYXNoCnBh
c3N3ZCB1c2VyCmBgYAoKNC4gQ3JlYXRlIHRoZSBob21lIGRpcmVjdG9yeSBv
ZiB0aGUgdXNlciB3aXRoIG1rZGlyOgoKYGBgYmFzaApta2RpciAtbSAwNzAw
IC9ob21lL3VzZXIKYGBgCgo1LiBDb3B5IHRoZSBmaWxlcyBmcm9tIGAvZXRj
L3NrZWxgIHRvIHRoZSBuZXcgaG9tZSBkaXJlY3Rvcnk6CgpgYGBiYXNoCnJz
eW5jIC1hdiAtLWRlbGV0ZSAvZXRjL3NrZWwvIC9ob21lL3VzZXIKYGBgCgo2
LiBGaXggb3duZXJzaGlwcyBhbmQgcGVybWlzc2lvbnMgd2l0aCBgY2hvd25g
IGFuZCBgY2htb2RgOgoKYGBgYmFzaApjaG93biAtUiB1c2VyOnVzZXIgL2hv
bWUvdXNlcgpjaG1vZCAtUiBnby1yd3ggL2hvbWUvdXNlcgpgYGAKClVzZWZ1
bCByZXNvdXJjZXM6CgotIFtXaGF0IHN0ZXBzIHRvIGFkZCBhIHVzZXIgdG8g
YSBzeXN0ZW0gd2l0aG91dCB1c2luZyB1c2VyYWRkL2FkZHVzZXI/XShodHRw
czovL3VuaXguc3RhY2tleGNoYW5nZS5jb20vcXVlc3Rpb25zLzE1MzIyNS93
aGF0LXN0ZXBzLXRvLWFkZC1hLXVzZXItdG8tYS1zeXN0ZW0td2l0aG91dC11
c2luZy11c2VyYWRkLWFkZHVzZXIpCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4K
PHN1bW1hcnk+PGI+V2h5IGRvIHdlIG5lZWQgPGNvZGU+bWt0ZW1wPC9jb2Rl
PiBjb21tYW5kPyBQcmVzZW50IGFuIGV4YW1wbGUgb2YgdXNlLjwvYj48L3N1
bW1hcnk+PGJyPgoKPGNvZGU+bWt0ZW1wPC9jb2RlPiByYW5kb21pemVzIHRo
ZSBuYW1lLiBJdCBpcyB2ZXJ5IGltcG9ydGFudCBmcm9tIHRoZSBzZWN1cml0
eSBwb2ludCBvZiB2aWV3LgoKSnVzdCBpbWFnaW5lIHRoYXQgeW91IGRvIHNv
bWV0aGluZyBsaWtlOgoKYGBgYmFzaAplY2hvICJyYW5kb21fc3RyaW5nIiA+
IC90bXAvdGVtcC1maWxlCmBgYAoKaW4geW91ciByb290LXJ1bm5pbmcgc2Ny
aXB0LiBBbmQgc29tZW9uZSAod2hvIGhhcyByZWFkIHlvdXIgc2NyaXB0KSBk
b2VzCgpgYGBiYXNoCmxuIC1zIC9ldGMvcGFzc3dkIC90bXAvdGVtcC1maWxl
CmBgYAoKVGhlIDxjb2RlPm1rdGVtcDwvY29kZT4gY29tbWFuZCBjb3VsZCBo
ZWxwIHlvdSBpbiB0aGlzIHNpdHVhdGlvbjoKCmBgYGJhc2gKVEVNUD0kKG1r
dGVtcCAvdG1wL3RlbXAtZmlsZS5YWFhYWFhYWCkKZWNobyAicmFuZG9tX3N0
cmluZyIgPiAke1RFTVB9CmBgYAoKTm93IHRoaXMgPGNvZGU+bG4gL2V0Yy9w
YXNzd2Q8L2NvZGU+IGF0dGFjayB3aWxsIG5vdCB3b3JrLgoKPC9kZXRhaWxz
PgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPklzIGl0IHNhZmUgdG8gYXR0YWNo
IHRoZSA8Y29kZT5zdHJhY2U8L2NvZGU+IHRvIGEgcnVubmluZyBwcm9jZXNz
IG9uIHRoZSBwcm9kdWN0aW9uPyBXaGF0IGFyZSB0aGUgY29uc2VxdWVuY2Vz
PzwvYj48L3N1bW1hcnk+PGJyPgoKYHN0cmFjZWAgaXMgdGhlIHN5c3RlbSBj
YWxsIHRyYWNlciBmb3IgTGludXguIEl0IGN1cnJlbnRseSB1c2VzIHRoZSBh
cmNhbmUgYHB0cmFjZSgpYCAocHJvY2VzcyB0cmFjZSkgZGVidWdnaW5nIGlu
dGVyZmFjZSwgd2hpY2ggb3BlcmF0ZXMgaW4gYSB2aW9sZW50IG1hbm5lcjog
KipwYXVzaW5nIHRoZSB0YXJnZXQgcHJvY2VzcyoqIGZvciBlYWNoIHN5c2Nh
bGwgc28gdGhhdCB0aGUgZGVidWdnZXIgY2FuIHJlYWQgc3RhdGUuIEFuZCBk
b2luZyB0aGlzIHR3aWNlOiB3aGVuIHRoZSBzeXNjYWxsIGJlZ2lucywgYW5k
IHdoZW4gaXQgZW5kcy4KClRoaXMgbWVhbnMgYHN0cmFjZWAgcGF1c2VzIHlv
dXIgYXBwbGljYXRpb24gdHdpY2UgZm9yIGVhY2ggc3lzY2FsbCwgYW5kIGNv
bnRleHQtc3dpdGNoZXMgZWFjaCB0aW1lIGJldHdlZW4gdGhlIGFwcGxpY2F0
aW9uIGFuZCBgc3RyYWNlYC4gSXQncyBsaWtlIHB1dHRpbmcgdHJhZmZpYyBt
ZXRlcmluZyBsaWdodHMgb24geW91ciBhcHBsaWNhdGlvbi4KCkNvbnM6Cgot
IGNhbiBjYXVzZSBzaWduaWZpY2FudCBhbmQgc29tZXRpbWVzIG1hc3NpdmUg
cGVyZm9ybWFuY2Ugb3ZlcmhlYWQsIGluIHRoZSB3b3JzdCBjYXNlLCBzbG93
aW5nIHRoZSB0YXJnZXQgYXBwbGljYXRpb24gYnkgb3ZlciAxMDB4LiBUaGlz
IG1heSBub3Qgb25seSBtYWtlIGl0IHVuc3VpdGFibGUgZm9yIHByb2R1Y3Rp
b24gdXNlLCBidXQgYW55IHRpbWluZyBpbmZvcm1hdGlvbiBtYXkgYWxzbyBi
ZSBzbyBkaXN0b3J0ZWQgYXMgdG8gYmUgbWlzbGVhZGluZwotIGNhbid0IHRy
YWNlIG11bHRpcGxlIHByb2Nlc3NlcyBzaW11bHRhbmVvdXNseSAod2l0aCB0
aGUgZXhjZXB0aW9uIG9mIGZvbGxvd2VkIGNoaWxkcmVuKQotIHZpc2liaWxp
dHkgaXMgbGltaXRlZCB0byB0aGUgc3lzdGVtIGNhbGwgaW50ZXJmYWNlCgpV
c2VmdWwgcmVzb3VyY2VzOgoKLSBbc3RyYWNlIFdvdyBNdWNoIFN5c2NhbGwg
KG9yaWdpbmFsKV0oaHR0cDovL3d3dy5icmVuZGFuZ3JlZ2cuY29tL2Jsb2cv
MjAxNC0wNS0xMS9zdHJhY2Utd293LW11Y2gtc3lzY2FsbC5odG1sKQoKPC9k
ZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPldoYXQgaXMgdGhlIGVh
c2llc3QsIHNhZmVzdCBhbmQgbW9zdCBwb3J0YWJsZSB3YXkgdG8gcmVtb3Zl
IDxjb2RlPi1yZjwvY29kZT4gZGlyZWN0b3J5IGVudHJ5PzwvYj48L3N1bW1h
cnk+PGJyPgoKVGhleSdyZSBlZmZlY3RpdmUgYnV0IG5vdCBvcHRpbWFsbHkg
cG9ydGFibGU6CgotIDxjb2RlPnJtIC0tIC1mcjwvY29kZT4KLSA8Y29kZT5w
ZXJsIC1sZSAndW5saW5rKCItZnIiKTsnPC9jb2RlPgoKUGVvcGxlIHdobyBn
byBvbiBhYm91dCBzaGVsbCBjb21tYW5kIGxpbmUgcXVvdGluZyBhbmQgY2hh
cmFjdGVyIGVzY2FwaW5nIGFyZSBhbG1vc3QgYXMgZGFuZ2Vyb3VzIGFzIHRo
b3NlIHdobyBzaW1wbHkgZG9uJ3QgZXZlbiByZWNvZ25pemUgd2h5IGEgZmls
ZSBuYW1lIGxpa2UgdGhhdCBwb3NlcyBhbnkgcHJvYmxlbSBhdCBhbGwuCgpU
aGUgbW9zdCBwb3J0YWJsZSBzb2x1dGlvbjoKCmBgYGJhc2gKcm0gLi8tZnIK
YGBgCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+V3JpdGUg
YSBzaW1wbGUgYmFzaCBzY3JpcHQgKG9yIHBhaXIgb2Ygc2NyaXB0cykgdG8g
YmFja3VwIGFuZCByZXN0b3JlIHlvdXIgc3lzdGVtLiAqKio8L2I+PC9zdW1t
YXJ5Pjxicj4KClRvIGJlIGNvbXBsZXRlZC4KCjwvZGV0YWlscz4KCjxkZXRh
aWxzPgo8c3VtbWFyeT48Yj5XaGF0IGFyZSBzYWx0ZWQgaGFzaGVzPyBHZW5l
cmF0ZSB0aGUgcGFzc3dvcmQgd2l0aCBzYWx0IGZvciB0aGUgPGNvZGU+L2V0
Yy9zaGFkb3c8L2NvZGU+IGZpbGUuPC9iPjwvc3VtbWFyeT48YnI+CgoqKlNh
bHQqKiBhdCBpdHMgbW9zdCBmdW5kYW1lbnRhbCBsZXZlbCBpcyByYW5kb20g
ZGF0YS4gV2hlbiBhIHByb3Blcmx5IHByb3RlY3RlZCBwYXNzd29yZCBzeXN0
ZW0gcmVjZWl2ZXMgYSBuZXcgcGFzc3dvcmQsIGl0IHdpbGwgY3JlYXRlIGEg
aGFzaGVkIHZhbHVlIGZvciB0aGF0IHBhc3N3b3JkLCBjcmVhdGUgYSBuZXcg
cmFuZG9tIHNhbHQgdmFsdWUsIGFuZCB0aGVuIHN0b3JlIHRoYXQgY29tYmlu
ZWQgdmFsdWUgaW4gaXRzIGRhdGFiYXNlLiBUaGlzIGhlbHBzIGRlZmVuZCBh
Z2FpbnN0IGRpY3Rpb25hcnkgYXR0YWNrcyBhbmQga25vd24gaGFzaCBhdHRh
Y2tzLgoKRm9yIGV4YW1wbGUsIGlmIGEgdXNlciB1c2VzIHRoZSBzYW1lIHBh
c3N3b3JkIG9uIHR3byBkaWZmZXJlbnQgc3lzdGVtcywgaWYgdGhleSB1c2Vk
IHRoZSBzYW1lIGhhc2hpbmcgYWxnb3JpdGhtLCB0aGV5IGNvdWxkIGVuZCB1
cCB3aXRoIHRoZSBzYW1lIGhhc2ggdmFsdWUuIEhvd2V2ZXIsIGlmIGV2ZW4g
b25lIG9mIHRoZSBzeXN0ZW1zIHVzZXMgc2FsdCB3aXRoIGl0cyBoYXNoZXMs
IHRoZSB2YWx1ZXMgd2lsbCBiZSBkaWZmZXJlbnQuCgpUaGUgZW5jcnlwdGVk
IHBhc3N3b3JkcyBpbiBgL2V0Yy9zaGFkb3dgIGZpbGUgYXJlIHN0b3JlZCBp
biB0aGUgZm9sbG93aW5nIGZvcm1hdDoKCmBgYGJhc2gKJElEJFNBTFQkRU5D
UllQVEVECmBgYAoKVGhlIGAkSURgIGluZGljYXRlcyB0aGUgdHlwZSBvZiBl
bmNyeXB0aW9uLCB0aGUgYCRTQUxUYCBpcyBhIHJhbmRvbSAodXAgdG8gMTYg
Y2hhcmFjdGVycykgc3RyaW5nIGFuZCBgJEVOQ1JZUFRFRGAgaXMgYSBwYXNz
d29yZOKAmXMgaGFzaC4KCjx0YWJsZSBzdHlsZT0id2lkdGg6MTAwJSI+CiAg
PHRyPgogICAgPHRoPkhhc2ggVHlwZTwvdGg+CiAgICA8dGg+SUQ8L3RoPgog
ICAgPHRoPkhhc2ggTGVuZ3RoPC90aD4KICA8L3RyPgogIDx0cj4KICAgIDx0
ZD5NRDU8L3RkPgogICAgPHRkPiQxPC90ZD4KICAgIDx0ZD4yMiBjaGFyYWN0
ZXJzPC90ZD4KICA8L3RyPgogIDx0cj4KICAgIDx0ZD5TSEEtMjU2PC90ZD4K
ICAgIDx0ZD4kNTwvdGQ+CiAgICA8dGQ+NDMgY2hhcmFjdGVyczwvdGQ+CiAg
PC90cj4KICA8dHI+CiAgICA8dGQ+U0hBLTUxMjwvdGQ+CiAgICA8dGQ+JDY8
L3RkPgogICAgPHRkPjg2IGNoYXJhY3RlcnM8L3RkPgogIDwvdHI+CjwvdGFi
bGU+CgpVc2UgdGhlIGJlbG93IGNvbW1hbmRzIGZyb20gdGhlIExpbnV4IHNo
ZWxsIHRvIGdlbmVyYXRlIGhhc2hlZCBwYXNzd29yZCBmb3IgYC9ldGMvc2hh
ZG93YCB3aXRoIHRoZSByYW5kb20gc2FsdDoKCi0gR2VuZXJhdGUgKipNRDUq
KiBwYXNzd29yZCBoYXNoCgpgYGBiYXNoCnB5dGhvbiAtYyAiaW1wb3J0IHJh
bmRvbSxzdHJpbmcsY3J5cHQ7IHJhbmRvbXNhbHQgPSAnJy5qb2luKHJhbmRv
bS5zYW1wbGUoc3RyaW5nLmFzY2lpX2xldHRlcnMsOCkpOyBwcmludCBjcnlw
dC5jcnlwdCgnTXlTZWNyZXRQYXNzd29yZCcsICdcJDFcJCVzXCQnICUgcmFu
ZG9tc2FsdCkiCmBgYAoKLSBHZW5lcmF0ZSAqKlNIQS0yNTYqKiBwYXNzd29y
ZCBoYXNoCgpgYGBiYXNoCnB5dGhvbiAtYyAiaW1wb3J0IHJhbmRvbSxzdHJp
bmcsY3J5cHQ7IHJhbmRvbXNhbHQgPSAnJy5qb2luKHJhbmRvbS5zYW1wbGUo
c3RyaW5nLmFzY2lpX2xldHRlcnMsOCkpOyBwcmludCBjcnlwdC5jcnlwdCgn
TXlTZWNyZXRQYXNzd29yZCcsICdcJDVcJCVzXCQnICUgcmFuZG9tc2FsdCki
CmBgYAoKLSBHZW5lcmF0ZSAqKlNIQS01MTIqKiBwYXNzd29yZCBoYXNoCgpg
YGBiYXNoCnB5dGhvbiAtYyAiaW1wb3J0IHJhbmRvbSxzdHJpbmcsY3J5cHQ7
IHJhbmRvbXNhbHQgPSAnJy5qb2luKHJhbmRvbS5zYW1wbGUoc3RyaW5nLmFz
Y2lpX2xldHRlcnMsOCkpOyBwcmludCBjcnlwdC5jcnlwdCgnTXlTZWNyZXRQ
YXNzd29yZCcsICdcJDZcJCVzXCQnICUgcmFuZG9tc2FsdCkiCmBgYAoKPC9k
ZXRhaWxzPgoKIyMjIyMjIE5ldHdvcmsgUXVlc3Rpb25zICgyNykKCjxkZXRh
aWxzPgo8c3VtbWFyeT48Yj5DcmVhdGUgU1BGIHJlY29yZHMgZm9yIHlvdXIg
c2l0ZSB0byBoZWxwIGNvbnRyb2wgc3BhbS4gKioqPC9iPjwvc3VtbWFyeT48
YnI+CgpUbyBiZSBjb21wbGV0ZWQuCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4K
PHN1bW1hcnk+PGI+V2hhdCBpcyB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIGFu
IGF1dGhvcml0YXRpdmUgYW5kIGEgbm9uYXV0aG9yaXRhdGl2ZSBhbnN3ZXIg
dG8gYSBETlMgcXVlcnk/ICoqKjwvYj48L3N1bW1hcnk+PGJyPgoKQW4gYXV0
aG9yaXRhdGl2ZSBETlMgcXVlcnkgYW5zd2VyIGNvbWVzIGZyb20gdGhlIHNl
cnZlciB0aGF0IGNvbnRhaW5zIHRoZSB6b25lIGZpbGVzIGZvciB0aGUgZG9t
YWluIHF1ZXJpZWQuIFRoaXMgaXMgdGhlIG5hbWUgc2VydmVyIHRoYXQgdGhl
IGRvbWFpbiBhZG1pbmlzdHJhdG9yIHNldCB1cCB0aGUgRE5TIHJlY29yZHMg
b24uIEEgbm9uYXV0aG9yaWF0aXZlIGFuc3dlciBjb21lcyBmcm9tIGEgbmFt
ZSBzZXJ2ZXIgdGhhdCBkb2VzIG5vdCBob3N0IHRoZSBkb21haW4gem9uZSBm
aWxlcyAoZm9yIGV4YW1wbGUsIGEgY29tbW9ubHkgdXNlZCBuYW1lIHNlcnZl
ciBoYXMgdGhlIGFuc3dlciBjYWNoZWQgc3VjaCBhcyBHb29nbGUncyA4Ljgu
OC44IG9yIE9wZW5ETlMgMjA4LjY3LjIyMi4yMjIpLgoKPC9kZXRhaWxzPgoK
PGRldGFpbHM+CjxzdW1tYXJ5PjxiPklmIHlvdSB0cnkgcmVzb2x2ZSBob3N0
bmFtZSB5b3UgZ2V0IDxjb2RlPk5YRE9NQUlOPC9jb2RlPiBmcm9tIDxjb2Rl
Pmhvc3Q8L2NvZGU+IGNvbW1hbmQuIFlvdXIgPGNvZGU+cmVzb2x2LmNvbmY8
L2NvZGU+IHN0b3JlcyB0d28gbmFtZXNlcnZlcnMgYnV0IG9ubHkgc2Vjb25k
IG9mIHRoaXMgc3RvcmUgdGhpcyBkb21haW4gbmFtZS4gV2h5IGRpZCBub3Qg
dGhlIGxvY2FsIHJlc29sdmVyIGNoZWNrIHRoZSBzZWNvbmQgbmFtZXNlcnZl
cj88L2I+PC9zdW1tYXJ5Pjxicj4KCioqTlhET01BSU4qKiBpcyBub3RoaW5n
IGJ1dCBub24tZXhpc3RlbnQgSW50ZXJuZXQgb3IgSW50cmFuZXQgZG9tYWlu
IG5hbWUuIElmIGRvbWFpbiBuYW1lIGlzIHVuYWJsZSB0byByZXNvbHZlZCB1
c2luZyB0aGUgRE5TLCBhIGNvbmRpdGlvbiBjYWxsZWQgdGhlICoqTlhET01B
SU4qKiBvY2N1cnJlZC4KClRoZSBkZWZhdWx0IGJlaGF2aW9yIGZvciBgcmVz
b2x2LmNvbmZgIGFuZCB0aGUgYHJlc29sdmVyYCBpcyB0byB0cnkgdGhlIHNl
cnZlcnMgaW4gdGhlIG9yZGVyIGxpc3RlZC4gVGhlIHJlc29sdmVyIHdpbGwg
b25seSB0cnkgdGhlIG5leHQgbmFtZXNlcnZlciBpZiB0aGUgZmlyc3QgbmFt
ZXNlcnZlciB0aW1lcyBvdXQuCgpUaGUgYWxnb3JpdGhtIHVzZWQgaXMgdG8g
dHJ5IGEgbmFtZSBzZXJ2ZXIsIGFuZCBpZiB0aGUgcXVlcnkgdGltZXMgb3V0
LCB0cnkgdGhlIG5leHQsIHVudGlsIG91dCBvZiBuYW1lIHNlcnZlcnMsIHRo
ZW4gcmVwZWF0IHRyeWluZyBhbGwgdGhlIG5hbWUgc2VydmVycyB1bnRpbCBh
IG1heGltdW0gbnVtYmVyIG9mIHJldHJpZXMgYXJlIG1hZGUuCgpJZiBhIG5h
bWVzZXJ2ZXIgcmVzcG9uZHMgd2l0aCAqKlNFUlZGQUlMKiogb3IgYSByZWZl
cnJhbCAoKipub2ZhaWwqKikgb3IgdGVybWluYXRlIHF1ZXJ5ICgqKmZhaWwq
KikgYWxzbyBvbmx5IHRoZSBmaXJzdCBkbnMgc2VydmVyIHdpbGwgYmUgdXNl
ZC4KCkV4YW1wbGU6CgpgYGAKbmFtZXNlcnZlciAxOTIuMTY4LjI1MC4yMCAg
ICMgaXQncyBub3QgYSBkbnMKbmFtZXNlcnZlciA4LjguOC44ICAgICAgICAg
ICMgbm90IHN0b3JlIGdhdGUudGVzdC5pbnQKbmFtZXNlcnZlciAxMjcuMC4w
LjEgICAgICAgICMgc3RvcmUgZ2F0ZS50ZXN0LmludApgYGAKCnNvIGlmIHlv
dSBjaGVjazoKCmBgYApob3N0IC12IC10IGEgZ2F0ZS50ZXN0LmludApUcnlp
bmcgImdhdGUudGVzdC5pbnQiICAgICAgICAgICAgICAgICAgICAgICAgIyB0
cnlpbmcgZmlyc3QgZG5zICgxOTIuMTY4LjI1MC4yMCkgYnV0IHJlc3BvbnNl
IGlzIHRpbWUgb3V0LCBzbyB0cnkgdGhlIG5leHQgbmFtZXNlcnZlcgpIb3N0
IGdhdGUudGVzdC5pbnQgbm90IGZvdW5kOiAzKE5YRE9NQUlOKSAgICAgIyBv
ayBidXQgcmVzcG9uc2UgaXMgTlhET01BSU4gKG5vdCBmb3VuZCB0aGlzIGRv
bWFpbiBuYW1lKQpSZWNlaXZlZCA4OCBieXRlcyBmcm9tIDguOC44LjgjNTMg
aW4gNDMgbXMKUmVjZWl2ZWQgODggYnl0ZXMgZnJvbSA4LjguOC44IzUzIGlu
IDQzIG1zCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAjIHNvIHRoZSBsYXN0IHNlcnZlciBpbiB0aGUgbGlzdCB3YXMg
bm90IGFza2VkCmBgYAoKVG8gYXZvaWQgdGhpcyB5b3UgY2FuIHVzZSBlLmcu
IGBuc2xvb2t1cGAgY29tbWFuZCB3aGljaCB3aWxsIHVzZSB0aGUgc2Vjb25k
IG5hbWVzZXJ2ZXIgaWYgaXQgcmVjZWl2ZXMgYSAqKlNFUlZGQUlMKiogZnJv
bSB0aGUgZmlyc3QgbmFtZXNlcnZlci4KClVzZWZ1bCByZXNvdXJjZXM6Cgot
IFtTZWNvbmQgbmFtZXNlcnZlciBpbiAvZXRjL3Jlc29sdi5jb25mIG5vdCBw
aWNrZWQgdXAgYnkgd2dldF0oaHR0cHM6Ly9zZXJ2ZXJmYXVsdC5jb20vcXVl
c3Rpb25zLzM5ODgzNy9zZWNvbmQtbmFtZXNlcnZlci1pbi1ldGMtcmVzb2x2
LWNvbmYtbm90LXBpY2tlZC11cC1ieS13Z2V0KQoKPC9kZXRhaWxzPgoKPGRl
dGFpbHM+CjxzdW1tYXJ5PjxiPkV4cGxvcmUgdGhlIGN1cnJlbnQgTVRBIGNv
bmZpZ3VyYXRpb24gYXQgeW91ciBzaXRlLiBXaGF0IGFyZSBzb21lIG9mIHRo
ZSBzcGVjaWFsIGZlYXR1cmVzIG9mIHRoZSBNVEEgdGhhdCBhcmUgaW4gdXNl
PyAqKio8L2I+PC9zdW1tYXJ5Pjxicj4KClRvIGJlIGNvbXBsZXRlZC4KCjwv
ZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5Ib3cgdG8gZmluZCBh
IGRvbWFpbiBiYXNlZCBvbiB0aGUgSVAgYWRkcmVzcz8gV2hhdCB0ZWNobmlx
dWVzL3Rvb2xzIGNhbiB5b3UgdXNlPyAqKio8L2I+PC9zdW1tYXJ5Pjxicj4K
ClRvIGJlIGNvbXBsZXRlZC4KCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3Vt
bWFyeT48Yj5JcyBpdCBwb3NzaWJsZSB0byBoYXZlIFNTTCBjZXJ0aWZpY2F0
ZSBmb3IgSVAgYWRkcmVzcywgbm90IGRvbWFpbiBuYW1lPzwvYj48L3N1bW1h
cnk+PGJyPgoKSXQgaXMgcG9zc2libGUgKGJ1dCByYXJlbHkgdXNlZCkgYXMg
bG9uZyBhcyBpdCBpcyBhIHB1YmxpYyBJUCBhZGRyZXNzLgoKQW4gU1NMIGNl
cnRpZmljYXRlIGlzIHR5cGljYWxseSBpc3N1ZWQgdG8gYSBGdWxseSBRdWFs
aWZpZWQgRG9tYWluIE5hbWUgKEZRRE4pIHN1Y2ggYXMgYGh0dHBzOi8vd3d3
LmRvbWFpbi5jb21gLiBIb3dldmVyLCBzb21lIG9yZ2FuaXphdGlvbnMgbmVl
ZCBhbiBTU0wgY2VydGlmaWNhdGUgaXNzdWVkIHRvIGEgcHVibGljIElQIGFk
ZHJlc3MuIFRoaXMgb3B0aW9uIGFsbG93cyB5b3UgdG8gc3BlY2lmeSBhIHB1
YmxpYyBJUCBhZGRyZXNzIGFzIHRoZSBDb21tb24gTmFtZSBpbiB5b3VyIENl
cnRpZmljYXRlIFNpZ25pbmcgUmVxdWVzdCAoQ1NSKS4gVGhlIGlzc3VlZCBj
ZXJ0aWZpY2F0ZSBjYW4gdGhlbiBiZSB1c2VkIHRvIHNlY3VyZSBjb25uZWN0
aW9ucyBkaXJlY3RseSB3aXRoIHRoZSBwdWJsaWMgSVAgYWRkcmVzcyAoZS5n
LiBgaHR0cHM6Ly8xLjEuMS4xYC4pLgoKQWNjb3JkaW5nIHRvIHRoZSBDQSBC
cm93c2VyIGZvcnVtLCB0aGVyZSBtYXkgYmUgY29tcGF0aWJpbGl0eSBpc3N1
ZXMgd2l0aCBjZXJ0aWZpY2F0ZXMgZm9yIElQIGFkZHJlc3NlcyB1bmxlc3Mg
dGhlIElQIGFkZHJlc3MgaXMgaW4gYm90aCB0aGUgY29tbW9uTmFtZSBhbmQg
c3ViamVjdEFsdE5hbWUgZmllbGRzLiBUaGlzIGlzIGR1ZSB0byBsZWdhY3kg
U1NMIGltcGxlbWVudGF0aW9ucyB3aGljaCBhcmUgbm90IGFsaWduZWQgd2l0
aCBSRkMgNTI4MCwgbm90YWJseSwgV2luZG93cyBPUyBwcmlvciB0byBXaW5k
b3dzIDEwLgoKVXNlZnVsIHJlc291cmNlczoKCi0gW0FyZSBTU0wgY2VydGlm
aWNhdGVzIGJvdW5kIHRvIHRoZSBzZXJ2ZXJzIGlwIGFkZHJlc3M/XShodHRw
czovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xMDk1NzgwL2FyZS1z
c2wtY2VydGlmaWNhdGVzLWJvdW5kLXRvLXRoZS1zZXJ2ZXJzLWlwLWFkZHJl
c3MpCi0gW1NTTCBjZXJ0aWZpY2F0ZSBmb3IgYSBwdWJsaWMgSVAgYWRkcmVz
cz9dKGh0dHBzOi8vc2VydmVyZmF1bHQuY29tL3F1ZXN0aW9ucy8xOTM3NzUv
c3NsLWNlcnRpZmljYXRlLWZvci1hLXB1YmxpYy1pcC1hZGRyZXNzKQoKPC9k
ZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPkhvdyBkbyB5b3UgZG8g
bG9hZCB0ZXN0aW5nIGFuZCBjYXBhY2l0eSBwbGFubmluZyBmb3Igd2Vic2l0
ZXM/ICoqKjwvYj48L3N1bW1hcnk+PGJyPgoKVG8gYmUgY29tcGxldGVkLgoK
VXNlZnVsIHJlc291cmNlczoKCi0gW0hvdyBkbyB5b3UgZG8gbG9hZCB0ZXN0
aW5nIGFuZCBjYXBhY2l0eSBwbGFubmluZyBmb3Igd2ViIHNpdGVzPyAob3Jp
Z2luYWwpXShodHRwczovL3NlcnZlcmZhdWx0LmNvbS9xdWVzdGlvbnMvMzUw
NDU0L2hvdy1kby15b3UtZG8tbG9hZC10ZXN0aW5nLWFuZC1jYXBhY2l0eS1w
bGFubmluZy1mb3Itd2ViLXNpdGVzKQotIFtDYW4geW91IGhlbHAgbWUgd2l0
aCBteSBjYXBhY2l0eSBwbGFubmluZz9dKGh0dHBzOi8vc2VydmVyZmF1bHQu
Y29tL3F1ZXN0aW9ucy8zODQ2ODYvY2FuLXlvdS1oZWxwLW1lLXdpdGgtbXkt
Y2FwYWNpdHktcGxhbm5pbmcpCi0gW0hvdyBkbyB5b3UgZG8gbG9hZCB0ZXN0
aW5nIGFuZCBjYXBhY2l0eSBwbGFubmluZyBmb3IgZGF0YWJhc2VzP10oaHR0
cHM6Ly9zZXJ2ZXJmYXVsdC5jb20vcXVlc3Rpb25zLzM1MDQ1OC9ob3ctZG8t
eW91LWRvLWxvYWQtdGVzdGluZy1hbmQtY2FwYWNpdHktcGxhbm5pbmctZm9y
LWRhdGFiYXNlcykKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48
Yj5EZXZlbG9wZXIgcmVwb3J0cyBhIHByb2JsZW0gd2l0aCBjb25uZWN0aXZp
dHkgdG8gdGhlIHJlbW90ZSBzZXJ2aWNlLiBVc2UgPGNvZGU+L2RldjwvY29k
ZT4gZm9yIHRyb3VibGVzaG9vdGluZy48L2I+PC9zdW1tYXJ5Pjxicj4KCmBg
YGJhc2gKIyA8aG9zdD4gLSBzZXQgcmVtb3RlIGhvc3QKIyA8cG9ydD4gLSBz
ZXQgZGVzdGluYXRpb24gcG9ydAoKIyAxCnRpbWVvdXQgMSBiYXNoIC1jICI8
L2Rldi90Y3AvPGhvc3Q+Lzxwb3J0PiIgPi9kZXYvbnVsbCAyPiYxIDsgZWNo
byAkPwoKIyAyCnRpbWVvdXQgMSBiYXNoIC1jICdjYXQgPCAvZGV2L251bGwg
PiA8L2Rldi90Y3AvPGhvc3Q+Lzxwb3J0PicgOyBlY2hvICQ/CgojIDIKJj4g
ZWNobyA+ICI8L2Rldi90Y3AvPGhvc3Q+Lzxwb3J0PiIKYGBgCgpVc2VmdWwg
cmVzb3VyY2VzOgoKLSBbQWR2YW5jZWQgQmFzaC1TY3JpcHRpbmcgR3VpZGUg
LSAvZGV2XShodHRwOi8vd3d3LnRsZHAub3JnL0xEUC9hYnMvaHRtbC9kZXZy
ZWYxLmh0bWwjREVWVENQKQotIFsvZGV2L3RjcCBhcyBhIHdlYXBvbl0oaHR0
cHM6Ly9zZWN1cml0eXJlbGlrcy53b3JkcHJlc3MuY29tLzIwMTAvMDgvMjAv
ZGV2dGNwLWFzLWEtd2VhcG9uLykKLSBbVGVzdCBmcm9tIHNoZWxsIHNjcmlw
dCBpZiByZW1vdGUgVENQIHBvcnQgaXMgb3Blbl0oaHR0cHM6Ly9zdGFja292
ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDkyMjk0My90ZXN0LWZyb20tc2hlbGwt
c2NyaXB0LWlmLXJlbW90ZS10Y3AtcG9ydC1pcy1vcGVuKQoKPC9kZXRhaWxz
PgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPkhvdyBkbyBJIG1lYXN1cmUgcmVx
dWVzdCBhbmQgcmVzcG9uc2UgdGltZXMgYXQgb25jZSB1c2luZyA8Y29kZT5j
dXJsPC9jb2RlPj88L2I+PC9zdW1tYXJ5Pjxicj4KCmBjdXJsYCBzdXBwb3J0
cyBmb3JtYXR0ZWQgb3V0cHV0IGZvciB0aGUgZGV0YWlscyBvZiB0aGUgcmVx
dWVzdCAoc2VlIHRoZSBgY3VybGAgbWFucGFnZSBmb3IgZGV0YWlscywgdW5k
ZXIgYC13fCAtd3JpdGUtb3V0ICdmb3JtYXQnYCkuIEZvciBvdXIgcHVycG9z
ZXMgd2XigJlsbCBmb2N1cyBqdXN0IG9uIHRoZSB0aW1pbmcgZGV0YWlscyB0
aGF0IGFyZSBwcm92aWRlZC4KCjEuIENyZWF0ZSBhIG5ldyBmaWxlLCBgY3Vy
bC1mb3JtYXQudHh0YCwgYW5kIHBhc3RlIGluOgoKYGBgYmFzaAogICAgdGlt
ZV9uYW1lbG9va3VwOiAgJXt0aW1lX25hbWVsb29rdXB9XG4KICAgICAgIHRp
bWVfY29ubmVjdDogICV7dGltZV9jb25uZWN0fVxuCiAgICB0aW1lX2FwcGNv
bm5lY3Q6ICAle3RpbWVfYXBwY29ubmVjdH1cbgogICB0aW1lX3ByZXRyYW5z
ZmVyOiAgJXt0aW1lX3ByZXRyYW5zZmVyfVxuCiAgICAgIHRpbWVfcmVkaXJl
Y3Q6ICAle3RpbWVfcmVkaXJlY3R9XG4KIHRpbWVfc3RhcnR0cmFuc2Zlcjog
ICV7dGltZV9zdGFydHRyYW5zZmVyfVxuCiAgICAgICAgICAgICAgICAgICAg
LS0tLS0tLS0tLVxuCiAgICAgICAgIHRpbWVfdG90YWw6ICAle3RpbWVfdG90
YWx9XG4KYGBgCgoyLiBNYWtlIGEgcmVxdWVzdDoKCmBgYGJhc2gKY3VybCAt
dyAiQGN1cmwtZm9ybWF0LnR4dCIgLW8gL2Rldi9udWxsIC1zICJodHRwOi8v
ZXhhbXBsZS5jb20vIgpgYGAKCldoYXQgdGhpcyBkb2VzOgoKLSBgLXcgIkBj
dXJsLWZvcm1hdC50eHQiYCAtIHRlbGxzIGNVUkwgdG8gdXNlIG91ciBmb3Jt
YXQgZmlsZQotIGAtbyAvZGV2L251bGxgIC0gcmVkaXJlY3RzIHRoZSBvdXRw
dXQgb2YgdGhlIHJlcXVlc3QgdG8gL2Rldi9udWxsCi0gYC1zYCAtIHRlbGxz
IGNVUkwgbm90IHRvIHNob3cgYSBwcm9ncmVzcyBtZXRlcgpgaHR0cDovL2V4
YW1wbGUuY29tL2AgaXMgdGhlIFVSTCB3ZSBhcmUgcmVxdWVzdGluZy4gVXNl
IHF1b3RlcyBwYXJ0aWN1bGFybHkgaWYgeW91ciBVUkwgaGFzICImIiBxdWVy
eSBzdHJpbmcgcGFyYW1ldGVycwoKPC9kZXRhaWxzPgoKPGRldGFpbHM+Cjxz
dW1tYXJ5PjxiPllvdSBuZWVkIHRvIG1vdmUgZXh0NCBqb3VybmFsIG9uIGFu
b3RoZXIgZGlzay9wYXJ0aXRpb24uIFdoYXQgYXJlIHRoZSByZWFzb25zIGZv
ciB0aGlzPyAqKio8L2I+PC9zdW1tYXJ5Pjxicj4KClRvIGJlIGNvbXBsZXRl
ZC4KClVzZWZ1bCByZXNvdXJjZXM6CgotIFtleHQ0OiB1c2luZyBleHRlcm5h
bCBqb3VybmFsIHRvIG9wdGltaXplIHBlcmZvcm1hbmNlXShodHRwczovL3Jh
aWQ2LmNvbS5hdS9wb3N0cy9mc19leHQ0X2V4dGVybmFsX2pvdXJuYWwvKQot
IFtIb3cgdG8gbW92ZSBhbiBleHQ0IGpvdXJuYWxdKGh0dHBzOi8vdW5peC5z
dGFja2V4Y2hhbmdlLmNvbS9xdWVzdGlvbnMvMjc4OTk4L2hvdy10by1tb3Zl
LWFuLWV4dDQtam91cm5hbCkKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3Vt
bWFyeT48Yj5Eb2VzIGhhdmluZyBWYXJuaXNoIGluIGZyb250IG9mIHlvdXIg
d2Vic2l0ZS9hcHAgbWVhbiB5b3UgZG9uJ3QgbmVlZCB0byBjYXJlIGFib3V0
IGxvYWQgYmFsYW5jaW5nIG9yIHJlZHVuZGFuY3k/PC9iPjwvc3VtbWFyeT48
YnI+CgpJdCBkZXBlbmRzLiBWYXJuaXNoIGlzIGEgY2FjaGUgc2VydmVyLCBz
byBpdHMgcHVycG9zZSBpcyB0byBjYWNoZSBjb250ZW50cyBhbmQgdG8gYWN0
IGFzIGEgcmV2ZXJzZSBwcm94eSwgdG8gc3BlZWQgdXAgcmV0cmlldmFsIG9m
IGRhdGEgYW5kIHRvIGxlc3NlbiB0aGUgbG9hZCBvbiB0aGUgd2Vic2VydmVy
LgpWYXJuaXNoIGNhbiBiZSBhbHNvIGNvbmZpZ3VyZWQgYXMgYSBsb2FkLWJh
bGFuY2VyIGZvciBtdWx0aXBsZSB3ZWIgc2VydmVycywgYnV0IGlmIHdlIHVz
ZSBqdXN0IG9uZSBWYXJuaXNoIHNlcnZlciwgdGhpcyB3aWxsIGJlY29tZSBv
dXIgc2luZ2xlIHBvaW50IG9mIGZhaWx1cmUgb24gb3VyIGluZnJhc3RydWN0
dXJlLgoKQSBiZXR0ZXIgc29sdXRpb24gdG8gZW5zdXJlIGxvYWQtYmFsYW5j
aW5nIG9yIHJlZHVuZGFuY3kgd2lsbCBiZSBhIGNsdXN0ZXIgb2YgYXQgbGVh
c3QgdHdvIFZhcm5pc2ggaW5zdGFuY2VzLCBpbiBhY3RpdmUtYWN0aXZlIG1v
ZGUgb3IgYWN0aXZlLXBhc3NpdmUgbW9kZS4KCjwvZGV0YWlscz4KCjxkZXRh
aWxzPgo8c3VtbWFyeT48Yj5XaGF0IGFyZSBoaXRzLCBtaXNzZXMsIGFuZCBo
aXQtZm9yLXBhc3MgaW4gVmFybmlzaCBDYWNoZT88L2I+PC9zdW1tYXJ5Pjxi
cj4KCkEgKipoaXQqKiBpcyBhIHJlcXVlc3Qgd2hpY2ggaXMgc3VjY2Vzc2Z1
bGx5IHNlcnZlZCBmcm9tIHRoZSBjYWNoZSwgYSAqKm1pc3MqKiBpcyBhIHJl
cXVlc3QgdGhhdCBnb2VzIHRocm91Z2ggdGhlIGNhY2hlIGJ1dCBmaW5kcyBh
biBlbXB0eSBjYWNoZSBhbmQgdGhlcmVmb3JlIGhhcyB0byBiZSBmZXRjaGVk
IGZyb20gdGhlIG9yaWdpbiwgdGhlICoqaGl0LWZvci1wYXNzKiogY29tZXMg
aW4gd2hlbiBWYXJuaXNoIENhY2hlIHJlYWxpemVzIHRoYXQgb25lIG9mIHRo
ZSBvYmplY3RzIGl0IGhhcyByZXF1ZXN0ZWQgaXMgdW5jYWNoZWFibGUgYW5k
IHdpbGwgcmVzdWx0IGluIGEgcGFzcy4KClVzZWZ1bCByZXNvdXJjZXM6Cgot
IFtWQ0wgcnVsZXMgZm9yIGhpdHNdKGh0dHBzOi8vYm9vay52YXJuaXNoLXNv
ZnR3YXJlLmNvbS80LjAvY2hhcHRlcnMvVkNMX1N1YnJvdXRpbmVzLmh0bWwj
dmNsLXZjbC1oaXQpCi0gW1ZDTCBydWxlcyBmb3IgaGl0LWZvci1wYXNzXSho
dHRwczovL2Jvb2sudmFybmlzaC1zb2Z0d2FyZS5jb20vNC4wL2NoYXB0ZXJz
L1ZDTF9TdWJyb3V0aW5lcy5odG1sI2hpdC1mb3ItcGFzcykKLSBbRXhhbXBs
ZSBvZiB0aGUgdXNlXShodHRwczovL2Jvb2sudmFybmlzaC1zb2Z0d2FyZS5j
b20vNC4wL2NoYXB0ZXJzL1ZDTF9CYXNpY3MuaHRtbCN2Y2wtYmFja2VuZC1y
ZXNwb25zZSkKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5X
aGF0IGlzIGEgcmVhc29uYWJsZSBUVEwgZm9yIGNhY2hlZCBjb250ZW50IGdp
dmVuIHRoZSBmb2xsb3dpbmcgcGFyYW1ldGVycz8gKioqPC9iPjwvc3VtbWFy
eT48YnI+CgpUbyBiZSBjb21wbGV0ZWQuCgo8L2RldGFpbHM+Cgo8ZGV0YWls
cz4KPHN1bW1hcnk+PGI+RGV2ZWxvcGVyIHNheXM6IDxpPjxjb2RlPmh0YWNj
ZXNzPC9jb2RlPiBpcyBmdWxsIG9mIG1hZ2ljIGFuZCBpdCBzaG91bGQgYmUg
dXNlZDwvaT4uIFdoYXQgaXMgeW91ciBvcGluaW9uIGFib3V0IHVzaW5nIDxj
b2RlPmh0YWNjZXNzPC9jb2RlPiBmaWxlcz8gSG93IGhhcyB0aGlzIGVmZmVj
dCBvbiB0aGUgd2ViIGFwcDwvYj48L3N1bW1hcnk+PGJyPgoKYC5odGFjY2Vz
c2AgZmlsZXMgd2VyZSBib3JuIG91dCBvZiBhbiBlcmEgd2hlbiBzaGFyZWQg
aG9zdGluZyB3YXMgY29tbW9uwq1wbGFjZToKCi0gc3lzYWRtaW5zIG5lZWRl
ZCBhIHdheSB0byBhbGxvdyBtdWx0aXBsZSBjbGllbnRzIHRvIGFjY2VzcyB0
aGVpciBzZXJ2ZXIgdW5kZXIgZGlmZmVyZW50IGFjY291bnRzLCB3aXRoIGRp
ZmZlcmVudCBjb25maWd1cmF0aW9ucyBmb3IgdGhlaXIgd2Viwq1zaXRlcy4K
ClRoZSBgLmh0YWNjZXNzYCBmaWxlIGFsbG93ZWQgdGhlbSB0byBtb2RpZnkg
aG93IEFwYWNoZSB3b3JrcyB3aXRob3V0IGhhdmluZyBhY2Nlc3MgdG8gdGhl
IGVudGlyZSBzZXJ2ZXIuIFRoZXNlIGZpbGVzIGNhbiByZXNpZGUgaW4gYW55
IGFuZCBldmVyeSBkaXJlY3RvcnkgaW4gdGhlIGRpcmVjdG9yeSB0cmVlIG9m
IHRoZSB3ZWJzaXRlIGFuZCBwcm92aWRlIGZlYXR1cmVzIHRvIHRoZSBkaXJl
Y3RvcnkgYW5kIHRoZSBmaWxlcyBhbmQgZm9sZGVycyBpbnNpZGUgaXQuCgoq
Kkl04oCZcyBob3JyaWJsZSBmb3IgcGVyZm9ybWFuY2UqKgoKRm9yIGAuaHRh
Y2Nlc3NgIHRvIHdvcmsgQXBhY2hlIG5lZWRzIHRvIGNoZWNrIEVWRVJZIGRp
cmVjdG9yeSBpbiB0aGUgcmVxdWVzdGVkIHBhdGggZm9yIHRoZSBleGlzdGVu
Y2Ugb2YgYSBgLmh0YWNjZXNzYCBmaWxlIGFuZCBpZiBpdCBleGlzdHMgaXQg
cmVhZHMgRVZFUlkgb25lIG9mIHRoZW0gYW5kIHBhcnNlcyBpdC4gVGhpcyBo
YXBwZW5zIGZvciBFVkVSWSByZXF1ZXN0LiBSZW1lbWJlciB0aGF0IHRoZSBz
ZWNvbmQgeW91IGNoYW5nZSB0aGF0IGZpbGUsIGl04oCZcyBlZmZlY3RpdmUu
IFRoaXMgaXMgYmVjYXVzZSBBcGFjaGUgcmVhZHMgaXQgZXZlcnkgdGltZS4K
CkV2ZXJ5IHNpbmdsZSByZXF1ZXN0IHRoZSB3ZWLCrXNlcnZlciBoYW5kbGVz
4oCJLeKAiWV2ZW4gZm9yIHRoZSBsb3dsaWVzdCBgLnBuZ2Agb3IgYC5jc3Ng
IGZpbGXigIkt4oCJY2F1c2VzIEFwYWNoZSB0bzoKCi0gbG9vayBmb3IgYSBg
Lmh0YWNjZXNzYCBmaWxlIGluIHRoZSBkaXJlY3Rvcnkgb2YgdGhlIGN1cnJl
bnQgcmVxdWVzdAotIHRoZW4gbG9vayBmb3IgYSBgLmh0YWNjZXNzYCBmaWxl
IGluIGV2ZXJ5IGRpcmVjdG9yeSBmcm9tIHRoZXJlIHVwIHRvIHRoZSBzZXJ2
ZXIgcm9vdAotIGNvYWxlc2NlIGFsbCBvZiB0aGVzZSBgLmh0YWNjZXNzYCBm
aWxlcyB0b2dldGhlcgotIHJlY29uZmlndXJlIHRoZSB3ZWLCrXNlcnZlciB1
c2luZyB0aGUgbmV3IHNldHRpbmdzCi0gZmluYWxseSwgZGVsaXZlciB0aGUg
ZmlsZQoKRXZlcnkgd2Viwq1wYWdlIGNhbiBnZW5lcmF0ZSBkb3plbnMgb2Yg
cmVxdWVzdHMuIFRoaXMgaXMgb3ZlcsKtaGVhZCB5b3UgZG9u4oCZdCBuZWVk
LCBhbmQgd2hhdOKAmXMgbW9yZSwgaXTigJlzIGNvbXBsZXRlbHkgdW5uZWNl
c3NhcnkuCgoqKlNlY3VyaXR5IGFuZCBwZXJtaXNzaW9uIGxvc3MqKgoKQWxs
b3dpbmcgaW5kaXZpZHVhbCB1c2VycyB0byBtb2RpZnkgdGhlIGNvbmZpZ3Vy
YXRpb24gb2YgYSBzZXJ2ZXIgdXNpbmcgYC5odGFjY2Vzc2AgY2FuIGNhdXNl
IHNlY3VyaXR5IGNvbmNlcm5zIGlmIG5vdCB0YWtlbiBjYXJlIHByb3Blcmx5
LiBJZiB5b3UgYWRkIGFueSBkaXJlY3RpdmUgaW4gdGhlIGAuaHRhY2Nlc3Ng
IGZpbGUsIGl0IHdpbGwgYmUgY29uc2lkZXJlZCBhcyB0aGV5IGFyZSBhZGRl
ZCB0byBBcGFjaGUgY29uZmlndXJhdGlvbiBmaWxlLgoKVGhpcyBtZWFucyBp
dCBtYXkgYmUgcG9zc2libGUgZm9yIG5vbi1hZG1pbnMgdG8gd3JpdGUgdGhl
c2UgZmlsZXMgYW5kIHRodXMgJ3VuZG8nIGFsbCBvZiB5b3VyIHNlY3VyaXR5
LiBJZiB5b3UgbmVlZCB0byBkbyBzb21ldGhpbmcgdGhhdCBpcyB0ZW1wb3Jh
cnksIGAuaHRhY2Nlc3NgIGlzIGEgZ29vZCBwbGFjZSB0byBkbyBpdCwgaWYg
eW91IG5lZWQgdG8gZG8gc29tZXRoaW5nIG1vcmUgcGVybWFuZW50LCBqdXN0
IHB1dCBpdCBpbiB5b3VyIGAvZXRjL2FwYWNoZS9zaXRlcy1hdmFpbGFibGUv
c2l0ZS5jb25mYCAob3IgYGh0dHBkLmNvbmZgIG9yIHdoYXRldmVyIHlvdXIg
c2VydmVyIGNhbGxzKS4KCioqU3VtbWFyeSoqCgpZb3Ugc2hvdWxkIGF2b2lk
IHVzaW5nIGAuaHRhY2Nlc3NgIGZpbGVzIGNvbXBsZXRlbHkgaWYgeW91IGhh
dmUgYWNjZXNzIHRvIGh0dHBkIG1haW4gc2VydmVyIGNvbmZpZyBmaWxlLiBJ
ZiBpdCB3b3JrZWQgaW4gYC5odGFjY2Vzc2AsIGl0IHdpbGwgd29yayBpbiB5
b3VyIHZpcnR1YWwgaG9zdCBgLmNvbmZgIGZpbGUgYXMgd2VsbC4KCklmIHlv
dSBjYW5ub3QgYXZvaWQgdXNpbmcgYC5odGFjY2Vzc2AgZmlsZXMsIHlvdSBz
aG91bGQgZm9sbG93IHRoZXNlIHJ1bGVzLgoKLSB1c2Ugb25seSBvbmUgYC5o
dGFjY2Vzc2AgZmlsZSBvciBhcyBmZXcgYXMgcG9zc2libGUKLSBwbGFjZSB0
aGUgYC5odGFjY2Vzc2AgZmlsZSBpbiB0aGUgc2l0ZSByb290IGRpcmVjdG9y
eQotIGtlZXAgeW91ciBgLmh0YWNjZXNzYCBmaWxlIHNob3J0IGFuZCBzaW1w
bGUKClVzZWZ1bCByZXNvdXJjZXM6CgotIFtMaWtlIEFwYWNoZTogLmh0YWNj
ZXNzXShodHRwczovL3d3dy5uZ2lueC5jb20vcmVzb3VyY2VzL3dpa2kvc3Rh
cnQvdG9waWNzL2V4YW1wbGVzL2xpa2VhcGFjaGUtaHRhY2Nlc3MvKQotIFtE
b24ndCBVc2UgLmh0YWNjZXNzIFVubGVzcyBZb3UgTXVzdF0oaHR0cHM6Ly93
d3cuZGFuaWVsbW9yZWxsLmNvbS9ndWlkZXMvaHRhY2Nlc3Mtc2VvL2Jhc2lj
cy9kb250LXVzZS1odGFjY2Vzcy11bmxlc3MteW91LW11c3QpCgo8L2RldGFp
bHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+SXMgaXQgc2FmZSB0byB1c2Ug
U05JIFNTTCBpbiBwcm9kdWN0aW9uPyBIb3cgdG8gdGVzdCBjb25uZWN0aW9u
IHdpdGggYW5kIHdpdGhvdXQgaXQ/IEluIHdoaWNoIGNhc2VzIGl0IGlzIHVz
ZWZ1bD88L2I+PC9zdW1tYXJ5Pjxicj4KCldpdGggPGI+T3BlblNTTDwvYj46
CgpgYGBiYXNoCiMgVGVzdGluZyBjb25uZWN0aW9uIHRvIHJlbW90ZSBob3N0
ICh3aXRoIFNOSSBzdXBwb3J0KQplY2hvIHwgb3BlbnNzbCBzX2NsaWVudCAt
c2hvd2NlcnRzIC1zZXJ2ZXJuYW1lIGdvb2dsZS5jb20gLWNvbm5lY3QgZ29v
Z2xlLmNvbTo0NDMKIyBUZXN0aW5nIGNvbm5lY3Rpb24gdG8gcmVtb3RlIGhv
c3QgKHdpdGhvdXQgU05JIHN1cHBvcnQpCmVjaG8gfCBvcGVuc3NsIHNfY2xp
ZW50IC1jb25uZWN0IGdvb2dsZS5jb206NDQzIC1zaG93Y2VydHMKYGBgCgpX
aXRoIDxiPkdudVRMUzwvYj46CgpgYGBiYXNoCiMgVGVzdGluZyBjb25uZWN0
aW9uIHRvIHJlbW90ZSBob3N0ICh3aXRoIFNOSSBzdXBwb3J0KQpnbnV0bHMt
Y2xpIC1wIDQ0MyBnb29nbGUuY29tCiMgVGVzdGluZyBjb25uZWN0aW9uIHRv
IHJlbW90ZSBob3N0ICh3aXRob3V0IFNOSSBzdXBwb3J0KQpnbnV0bHMtY2xp
IC0tZGlzYWJsZS1zbmkgLXAgNDQzIGdvb2dsZS5jb20KYGBgCgo8L2RldGFp
bHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+SG93IGFyZSBjb29raWVzIHBh
c3NlZCBpbiB0aGUgSFRUUCBwcm90b2NvbD88L2I+PC9zdW1tYXJ5Pjxicj4K
ClRoZSBzZXJ2ZXIgc2VuZHMgdGhlIGZvbGxvd2luZyBpbiBpdHMgcmVzcG9u
c2UgaGVhZGVyIHRvIHNldCBhIGNvb2tpZSBmaWVsZDoKCmBTZXQtQ29va2ll
Om5hbWU9dmFsdWVgCgpJZiB0aGVyZSBpcyBhIGNvb2tpZSBzZXQsIHRoZW4g
dGhlIGJyb3dzZXIgc2VuZHMgdGhlIGZvbGxvd2luZyBpbiBpdHMgcmVxdWVz
dCBoZWFkZXI6CgpgQ29va2llOm5hbWU9dmFsdWVgCgo8L2RldGFpbHM+Cgo8
ZGV0YWlscz4KPHN1bW1hcnk+PGI+SG93IHRvIHByZXZlbnQgcHJvY2Vzc2lu
ZyByZXF1ZXN0cyBpbiB3ZWIgc2VydmVyIHdpdGggdW5kZWZpbmVkIHNlcnZl
ciBuYW1lcz8gTm8gZGVmaW5lZCBkZWZhdWx0IHNlcnZlciBuYW1lIHJ1bGUg
Y2FuIGJlIHNlY3VyaXR5IGlzc3VlPyAqKio8L2I+PC9zdW1tYXJ5Pjxicj4K
ClRvIGJlIGNvbXBsZXRlZC4KCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3Vt
bWFyeT48Yj5Zb3Ugc2hvdWxkIHJld3JpdGUgUE9TVCB3aXRoIHBheWxvYWQg
dG8gYW4gZXh0ZXJuYWwgQVBJIGJ1dCB0aGUgUE9TVCByZXF1ZXN0cyBsb29z
ZSB0aGUgcGFyYW1ldGVycyBwYXNzZWQgb24gdGhlIFVSTC4gSG93IHRvIGZp
eCB0aGlzIHByb2JsZW0gKGUuZy4gaW4gTmdpbngpIGFuZCB3aGF0IGFyZSB0
aGUgcmVhc29ucyBmb3IgdGhpcyBiZWhhdmlvcj88L2I+PC9zdW1tYXJ5Pjxi
cj4KClRoZSBpc3N1ZSBpcyB0aGF0IGV4dGVybmFsIHJlZGlyZWN0cyB3aWxs
IG5ldmVyIHJlc2VuZCAqKlBPU1QqKiBkYXRhLiBUaGlzIGlzIHdyaXR0ZW4g
aW50byB0aGUgSFRUUCBzcGVjIChjaGVjayB0aGUgYDN4eGAgc2VjdGlvbiku
IEFueSBjbGllbnQgdGhhdCBkb2VzIGRvIHRoaXMgaXMgdmlvbGF0aW5nIHRo
ZSBzcGVjLgoKKipQT1NUKiogZGF0YSBpcyBwYXNzZWQgaW4gdGhlIGJvZHkg
b2YgdGhlIHJlcXVlc3QsIHdoaWNoIGdldHMgZHJvcHBlZCBpZiB5b3UgZG8g
YSBzdGFuZGFyZCByZWRpcmVjdC4KCkxvb2sgYXQgdGhpczoKCmBgYAogICAr
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSst
LS0tLS0tLS0tLSstLS0tLS0tLS0tLSsKICAgfCAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICB8IFBlcm1hbmVudCB8IFRlbXBv
cmFyeSB8CiAgICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tKy0tLS0tLS0tLS0tKy0tLS0tLS0tLS0tKwogICB8IEFsbG93
cyBjaGFuZ2luZyB0aGUgcmVxdWVzdCBtZXRob2QgZnJvbSAgIHwgMzAxICAg
ICAgIHwgMzAyICAgICAgIHwKICAgfCBQT1NUIHRvIEdFVCAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICB8ICAgICAgICAgICB8
CiAgIHwgRG9lcyBub3QgYWxsb3cgY2hhbmdpbmcgdGhlIHJlcXVlc3QgICAg
ICAgfCAzMDggICAgICAgfCAzMDcgICAgICAgfAogICB8IG1ldGhvZCBmcm9t
IFBPU1QgdG8gR0VUICAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgIHwg
ICAgICAgICAgIHwKICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0rLS0tLS0tLS0tLS0rLS0tLS0tLS0tLS0rCmBgYAoK
WW91IGNhbiB0cnkgd2l0aCB0aGUgSFRUUCBzdGF0dXMgY29kZSAqKjMwNyoq
LCBhIFJGQyBjb21wbGlhbnQgYnJvd3NlciBzaG91bGQgcmVwZWF0IHRoZSBw
b3N0IHJlcXVlc3QuIFlvdSBqdXN0IG5lZWQgdG8gd3JpdGUgYSBOZ2lueCBy
ZXdyaXRlIHJ1bGUgd2l0aCBIVFRQIHN0YXR1cyBjb2RlICoqMzA3Kiogb3Ig
KiozMDgqKjoKCmBgYGJhc2gKbG9jYXRpb24gLyB7CiAgICBwcm94eV9wYXNz
ICAgICAgICAgICAgICBodHRwOi8vbG9jYWxob3N0OjgwOwogICAgY2xpZW50
X21heF9ib2R5X3NpemUgICAgMTBtOwp9Cgpsb2NhdGlvbiAvYXBpIHsKICAg
ICMgSFRUUCAzMDcgb25seSBmb3IgUE9TVCBtZXRob2QuCiAgICBpZiAoJHJl
cXVlc3RfbWV0aG9kID0gUE9TVCkgewogICAgICAgIHJldHVybiAzMDcgaHR0
cHM6Ly9hcGkuZXhhbXBsZS5jb20/cmVxdWVzdF91cmk7CiAgICB9CgogICAg
IyBZb3UgY2FuIGtlZXAgdGhpcyBmb3Igbm9uLVBPU1QgcmVxdWVzdHMuCiAg
ICByZXdyaXRlIF4gaHR0cHM6Ly9hcGkuZXhhbXBsZS5jb20/cmVxdWVzdF91
cmkgcGVybWFuZW50OwoKICAgIGNsaWVudF9tYXhfYm9keV9zaXplICAgIDEw
bTsKfQpgYGAKCkhUVFAgU3RhdHVzIGNvZGUgKiozMDcqKiBvciAqKjMwOCoq
IHNob3VsZCBiZSB1c2VkIGluc3RlYWQgb2YgKiozMDEqKiBiZWNhdXNlIGl0
IGNoYW5nZXMgdGhlIHJlcXVlc3QgbWV0aG9kIGZyb20gKipQT1NUKiogdG8g
KipHRVQqKi4KClVzZWZ1bCByZXNvdXJjZXM6CgotIFtSZWRpcmVjdGlvbiBv
biBBcGFjaGUgKE1haW50YWluIFBPU1QgcGFyYW1zKV0oaHR0cHM6Ly9zdGFj
a292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMTcyOTUwODUvcmVkaXJlY3Rpb24t
b24tYXBhY2hlLW1haW50YWluLXBvc3QtcGFyYW1zKQotIFtXaHkgZG9lc24n
dCBIVFRQIGhhdmUgUE9TVCByZWRpcmVjdD9dKGh0dHBzOi8vc29mdHdhcmVl
bmdpbmVlcmluZy5zdGFja2V4Y2hhbmdlLmNvbS9xdWVzdGlvbnMvOTk4OTQv
d2h5LWRvZXNudC1odHRwLWhhdmUtcG9zdC1yZWRpcmVjdCkKCjwvZGV0YWls
cz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5XaGF0IGlzIHRoZSBwcm9wZXIg
d2F5IHRvIHRlc3QgTkZTIHBlcmZvcm1hbmNlPyBQcmVwYXJlIGEgc2hvcnQg
Y2hlY2tsaXN0Lgo8L2I+PC9zdW1tYXJ5Pjxicj4KClRoZSBiZXN0IGJlbmNo
bWFyayBpcyBhbHdheXMgInRoZSBhcHBsaWNhdGlvbihzKSB0aGF0IHlvdSBu
b3JtYWxseSB1c2UiLiBUaGUgbG9hZCBvbiBhIE5GUyBzeXN0ZW0gd2hlbiB5
b3UgaGF2ZSAyMCBwZW9wbGUgc2ltdWx0YW5lb3VzbHkgY29tcGlsaW5nIGEg
TGludXgga2VybmVsIGlzIGNvbXBsZXRlbHkgZGlmZmVyZW50IGZyb20gYSBi
dW5jaCBvZiBwZW9wbGUgbG9nZ2luZyBpbiBhdCB0aGUgc2FtZSB0aW1lIG9y
IHRoZSBhY2NvdW50cyB1c2VzIGFzICJob21lIGRpcmVjdG9yaWVzIGZvciB0
aGUgbG9jYWwgd2ViLXNlcnZlciIuCgpCdXQgd2UgaGF2ZSBzb21lIGdvb2Qg
dG9vbHMgZm9yIHRlc3RpbmcgdGhpcy4KCi0gPGI+Ym9vbmllPC9iPiAtIGEg
Y2xhc3NpY2FsIHBlcmZvcm1hbmNlcyBldmFsdWF0aW9uIHRvb2wgdGVzdHMu
IFRoZSBtYWluIHByb2dyYW0gdGVzdHMgZGF0YWJhc2UgdHlwZSBhY2Nlc3Mg
dG8gYSBzaW5nbGUgZmlsZSAob3IgYSBzZXQgb2YgZmlsZXMgaWYgeW91IHdp
c2ggdG8gdGVzdCBtb3JlIHRoYW4gMUcgb2Ygc3RvcmFnZSksIGFuZCBpdCB0
ZXN0cyBjcmVhdGlvbiwgcmVhZGluZywgYW5kIGRlbGV0aW5nIG9mIHNtYWxs
IGZpbGVzIHdoaWNoIGNhbiBzaW11bGF0ZSB0aGUgdXNhZ2Ugb2YgcHJvZ3Jh
bXMgc3VjaCBhcyBTcXVpZCwgSU5OLCBvciBNYWlsZGlyIGZvcm1hdCBlbWFp
bC4KLSA8Yj5EQmVuY2g8L2I+IC0gd2FzIHdyaXR0ZW4gdG8gYWxsb3cgaW5k
ZXBlbmRlbnQgZGV2ZWxvcGVycyB0byBkZWJ1ZyBhbmQgdGVzdCBTQU1CQS4g
SXQgaXMgaGVhdmlseSBpbnNwaXJlZCBvZiB0aGUgb3JpZ2luYWwgU0FNQkEg
dG9vbC4KLSA8Yj5JT1pvbmU8L2I+IC0gcGVyZm9ybWFuY2UgdGVzdHMgc3Vp
dGUuIFBPU0lYIGFuZCA2NCBiaXRzIGNvbXBsaWFudC4gVGhpcyB0ZXN0cyBp
cyB0aGUgZmlsZSBzeXN0ZW0gdGVzdCBmcm9tIHRoZSBMLlMuRS4gTWFpbiBm
ZWF0dXJlczogUE9TSVggYXN5bmMgSS9PLCBNbWFwKCkgZmlsZSBJL08sIE5v
cm1hbCBmaWxlIEkvTyBTaW5nbGUgc3RyZWFtIG1lYXN1cmVtZW50LCBNdWx0
aXBsZSBzdHJlYW0gbWVhc3VyZW1lbnQsIERpc3RyaWJ1dGVkIGZpbGUgc2Vy
dmVyIG1lYXN1cmVtZW50cyAoQ2x1c3RlcikgUE9TSVggcHRocmVhZHMsIE11
bHRpLXByb2Nlc3MgbWVhc3VyZW1lbnQgc2VsZWN0YWJsZSBtZWFzdXJlbWVu
dHMgd2l0aCBmc3luYywgT19TWU5DIExhdGVuY3kgcGxvdHMuCgo8L2RldGFp
bHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+WW91IG5lZWQgdG8gYmxvY2sg
c2V2ZXJhbCBJUHMgZnJvbSB0aGUgc2FtZSBzdWJuZXQuIFdoYXQgaXMgdGhl
IG1vc3QgZWZmaWNpZW50IHdheSBmb3IgdGhlIHN5c3RlbSB0byB0cmF2ZXJz
ZSB0aGUgaXB0YWJsZXMgcnVsZSBzZXQgb3IgdGhlIGJsYWNrLWhvbGUgcm91
dGU/PC9iPjwvc3VtbWFyeT48YnI+CgpJZiB5b3UgaGF2ZSBhIHN5c3RlbSB3
aXRoIHRob3VzYW5kcyBvZiByb3V0ZXMgZGVmaW5lZCBpbiB0aGUgcm91dGlu
ZyB0YWJsZSBhbmQgbm90aGluZyBpbiB0aGUgaXB0YWJsZXMgcnVsZXMgdGhh
biBpdCBtaWdodCBhY3R1YWxseSBiZSBtb3JlIGVmZmljaWVudCB0byBpbnB1
dCBhbiBpcHRhYmxlcyBydWxlLgoKSW4gbW9zdCBzeXN0ZW1zIGhvd2V2ZXIg
dGhlIHJvdXRpbmcgdGFibGUgaXMgZmFpcmx5IHNtYWxsLCBpbiBjYXNlcyBs
aWtlIHRoaXMgaXQgaXMgYWN0dWFsbHkgbW9yZSBlZmZpY2llbnQgdG8gdXNl
IG51bGwgcm91dGVzLiBUaGlzIGlzIGVzcGVjaWFsbHkgdHJ1ZSBpZiB5b3Ug
YWxyZWFkeSBoYXZlIGV4dGVuc2l2ZSBpcHRhYmxlcyBydWxlcyBpbiBwbGFj
ZS4KCkFzc3VtaW5nIHlvdSdyZSBibG9ja2luZyBiYXNlZCBvbiBzb3VyY2Ug
YWRkcmVzcyBhbmQgbm90IGRlc3RpbmF0aW9uLCB0aGVuIGRvaW5nIHRoZSAq
KkRST1AqKiBpbiAqKnJhdy9QUkVST1VUSU5HKiogd291bGQgd29yayB3ZWxs
IGFzIHlvdSB3b3VsZCBlc3NlbnRpYWxseSBiZSBhYmxlIHRvIGRyb3AgdGhl
IHBhY2tldCBiZWZvcmUgYW55IHJvdXRpbmcgZGVjaXNpb24gaXMgbWFkZS4K
ClJlbWVtYmVyIGhvd2V2ZXIgdGhhdCBpcHRhYmxlcyBydWxlcyBhcmUgZXNz
ZW50aWFsbHkgYSBsaW5rZWQtbGlzdCBhbmQgZm9yIG9wdGltdW0gcGVyZm9y
bWFuY2Ugd2hlbiBibG9ja2luZyBhIG51bWJlciBvZiBhZGRyZXNzZXMgeW91
IHNob3VsZCB1c2UgYW4gYGlwc2V0YC4KCk9uIHRoZSBvdGhlciBoYW5kIGlm
IGJsb2NraW5nIGJ5IGRlc3RpbmF0aW9uLCB0aGVyZSBpcyBsaWtlbHkgbGl0
dGxlIGRpZmZlcmVuY2UgYmV0d2VlbiBibG9ja2luZyBhdCB0aGUgcm91dGlu
ZyB0YWJsZSB2cyBpcHRhYmxlcyAqKkVYQ0VQVCoqIGlmIHNvdXJjZSBJUHMg
YXJlIHNwb29mZWQgaW4gd2hpY2ggY2FzZSB0aGUgYmxhY2tob2xlZCBlbnRy
aWVzIG1heSBjb25zdW1lIHJvdXRpbmcgY2FjaGUgcmVzb3VyY2VzOyBpbiB0
aGlzIGNhc2UsICoqcmF3L1BSRVJPVVRJTkcqKiByZW1haW5zIHByZWZlcmFi
bGUuCgpZb3VyIG91dGdvaW5nIHJvdXRlIGlzbid0IGdvaW5nIHRvIG1hdHRl
ciB1bnRpbCB5b3UgdHJ5IHRvIHNlbmQgYSBwYWNrZXQgYmFjayB0byB0aGUg
YXR0YWNrZXIuIEJ5IHRoYXQgdGltZSB5b3Ugd2lsbCBoYXZlIGFscmVhZHkg
aW5jdXJyZWQgbW9zdCBvZiB0aGUgY29zdCBvZiBzb2NrZXQgc2V0dXAgYW5k
IG1heSBldmVuIGhhdmUgYSB0aHJlYWQgYmxvY2tpbmcgd2FpdGluZyBmb3Ig
dGhlIGtlcm5lbCB0byBjb25jbHVkZSB5b3UgaGF2ZSBubyByb3V0ZSB0byBo
b3N0LCBwbHVzIHdoYXRldmVyIGVycm9yIGhhbmRsaW5nIHlvdXIgc2VydmVy
IHByb2Nlc3MgZG9lcyB3aGVuIGl0IGNvbmNsdWRlcyB0aGVyZSdzIGEgbmV0
d29yayBwcm9ibGVtLgoKaXB0YWJsZXMgb3IgYW5vdGhlciBmaXJld2FsbCB3
aWxsIGFsbG93IHlvdSB0byBibG9jayB0aGUgaW5jb21pbmcgdHJhZmZpYyBh
bmQgZGlzY2FyZCBpdCBiZWZvcmUgaXQgcmVhY2hlcyB0aGUgZGFlbW9uIHBy
b2Nlc3Mgb24geW91ciBzZXJ2ZXIuIEl0IHNlZW1zIGNsZWFybHkgc3VwZXJp
b3IgaW4gdGhpcyB1c2UgY2FzZS4KCmBgYGJhc2gKaXB0YWJsZXMgLUEgSU5Q
VVQgLXMgMTkyLjE2OC4yMDAuMC8yNCAtaiBEUk9QCmBgYAoKV2hlbiB5b3Ug
ZGVmaW5lIGEgcm91dGUgb24gYSBMaW51eC9Vbml4IHN5c3RlbSBpdCB0ZWxs
cyB0aGUgc3lzdGVtIGluIG9yZGVyIHRvIGNvbW11bmljYXRlIHdpdGggdGhl
IHNwZWNpZmllZCBJUCBhZGRyZXNzIHlvdSB3aWxsIG5lZWQgdG8gcm91dGUg
eW91ciBuZXR3b3JrIGNvbW11bmljYXRpb24gdG8gdGhpcyBzcGVjaWZpYyBw
bGFjZS4KCldoZW4geW91IGRlZmluZSBhIG51bGwgcm91dGUgaXQgc2ltcGx5
IHRlbGxzIHRoZSBzeXN0ZW0gdG8gZHJvcCB0aGUgbmV0d29yayBjb21tdW5p
Y2F0aW9uIHRoYXQgaXMgZGVzaWduYXRlZCB0byB0aGUgc3BlY2lmaWVkIElQ
IGFkZHJlc3MuIFdoYXQgdGhpcyBtZWFucyBpcyBhbnkgVENQIGJhc2VkIG5l
dHdvcmsgY29tbXVuaWNhdGlvbiB3aWxsIG5vdCBiZSBhYmxlIHRvIGJlIGVz
dGFibGlzaGVkIGFzIHlvdXIgc2VydmVyIHdpbGwgbm8gbG9uZ2VyIGJlIGFi
bGUgdG8gc2VuZCBhbiBTWU4vQUNLIHJlcGx5LiBBbnkgVURQIGJhc2VkIG5l
dHdvcmsgY29tbXVuaWNhdGlvbiBob3dldmVyIHdpbGwgc3RpbGwgYmUgcmVj
ZWl2ZWQ7IGhvd2V2ZXIgeW91ciBzeXN0ZW0gd2lsbCBubyBsb25nZXIgc2Vu
ZCBhbnkgcmVzcG9uc2UgdG8gdGhlIG9yaWdpbmF0aW5nIElQLgoKV2hpbGUg
aXB0YWJsZXMgY2FuIGFjY2VwdCB0ZW5zIG9mIHRob3VzYW5kcyBvZiBydWxl
cyBpbiBhIGNoYWluLCB0aGUgY2hhaW5zIGFyZSB3YWxrZWQgc2VxdWVudGlh
bGx5IHVudGlsIGEgbWF0Y2ggaXMgZm91bmQgb24gZXZlcnkgcGFja2V0LiBT
bywgbG90cyBvZiBydWxlcyBjYW4gbGVhZCB0byB0aGUgc3lzdGVtIHNwZW5k
aW5nIGFtYXppbmcgYW1vdW50cyBvZiBDUFUgdGltZSB3YWxraW5nIHRocm91
Z2ggdGhlIHJ1bGVzLgoKVGhlIHJvdXRpbmcgcnVsZXMgYXJlIG11Y2ggc2lt
cGxlciB0aGFuIGlwdGFibGVzLiBXaXRoIGlwdGFibGVzLCBhIG1hdGNoIGNh
biBiZSBiYXNlZCBvbiBtYW55IGRpZmZlcmVudCB2YXJpYWJsZXMgaW5jbHVk
aW5nIHByb3RvY29scywgc291cmNlIGFuZCBkZXN0aW5hdGlvbiBwYWNrZXRz
LCBhbmQgZXZlbiBvdGhlciBwYWNrZXRzIHRoYXQgd2VyZSBzZW50IGJlZm9y
ZSB0aGUgY3VycmVudCBwYWNrZXQuCgpJbiByb3V0aW5nLCBhbGwgdGhhdCBt
YXR0ZXJzIGlzIHRoZSByZW1vdGUgSVAgYWRkcmVzcywgc28gaXQncyB2ZXJ5
IGVhc3kgdG8gb3B0aW1pemUuIEFsc28sIG1hbnkgc3lzdGVtcyBoYXZlIGEg
bG90IG9mIHJvdXRpbmcgcnVsZXMuIEEgdHlwaWNhbCBzeXN0ZW0gbWF5IG9u
bHkgaGF2ZSA1IG9yIDEwLCBidXQgc29tZXRoaW5nIHRoYXQncyBhY3Rpbmcg
YXMgYSBCR1Agcm91dGVyIGNhbiBoYXZlIHRlbnMgb2YgdGhvdXNhbmRzLiBT
bywgZm9yIGEgdmVyeSBsb25nIHRpbWUgdGhlcmUgaGF2ZSBiZWVuIGV4dGVu
c2l2ZSBvcHRpbWl6YXRpb25zIGluIHNlbGVjdGluZyB0aGUgcmlnaHQgcm91
dGUgZm9yIGEgcGFydGljdWxhciBwYWNrZXQuCgpJbiBsZXNzIHRlY2huaWNh
bCB0ZXJtcyB0aGlzIG1lYW5zIHlvdXIgc3lzdGVtIHdpbGwgcmVjZWl2ZSBk
YXRhIGZyb20gdGhlIGF0dGFja2VycyBidXQgbm8gbG9uZ2VyIHJlc3BvbmQg
dG8gaXQuCgpgYGBiYXNoCmlwIHJvdXRlIGFkZCBibGFja2hvbGUgMTkyLjE2
OC4yMDAuMC8yNApgYGAKCm9yCgpgYGBiYXNoCmlwIHJvdXRlIGFkZCAxOTIu
MTY4LjIwMC4wLzI0IHZpYSAxMjcuMC4wLjEKYGBgCgpVc2VmdWwgcmVzb3Vy
Y2VzOgoKLSBbVGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBpcHRhYmxlcyBEUk9Q
IGFuZCBudWxsLXJvdXRpbmcuXShodHRwczovL3d3dy50dW1teS5jb20vYmxv
Z3MvMjAwNi8wNy8yNy90aGUtZGlmZmVyZW5jZS1iZXR3ZWVuLWlwdGFibGVz
LWRyb3AtYW5kLW51bGwtcm91dGluZy8pCgo8L2RldGFpbHM+Cgo8ZGV0YWls
cz4KPHN1bW1hcnk+PGI+SG93IHRvIHJ1biA8Y29kZT5zY3A8L2NvZGU+IHdp
dGggYSBzZWNvbmQgcmVtb3RlIGhvc3Q/PC9iPjwvc3VtbWFyeT48YnI+CgpX
aXRoIGBzc2hgOgoKYGBgYmFzaApzc2ggdXNlcjFAcmVtb3RlMSAnc3NoIHVz
ZXIyQHJlbW90ZTIgImNhdCBmaWxlIicgPiBmaWxlCmBgYAoKV2l0aCBgdGFy
YCAod2l0aCBjb21wcmVzc2lvbik6CgpgYGBiYXNoCnNzaCB1c2VyMUByZW1v
dGUxICdzc2ggdXNlcjJAcmVtb3RlMiAiY2QgcGF0aDI7IHRhciBjaiBmaWxl
IicgfCB0YXIgeGoKYGBgCgpXaXRoIGBzc2hgIGFuZCBwb3J0IGZvcndhcmRp
bmcgdHVubmVsOgoKYGBgYmFzaAojIEZpcnN0LCBvcGVuIHRoZSB0dW5uZWwK
c3NoIC1MIDEyMzQ6cmVtb3RlMjoyMiAtcCA0NTY3OCB1c2VyMUByZW1vdGUx
CgojIFRoZW4sIHVzZSB0aGUgdHVubmVsIHRvIGNvcHkgdGhlIGZpbGUgZGly
ZWN0bHkgZnJvbSByZW1vdGUyCnNjcCAtUCAxMjM0IHVzZXIyQGxvY2FsaG9z
dDpmaWxlIC4KYGBgCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+
PGI+SG93IGNhbiB5b3UgcmVkdWNlIGxvYWQgdGltZSBvZiBhIGR5bmFtaWMg
d2Vic2l0ZT88L2I+PC9zdW1tYXJ5Pjxicj4KCi0gd2VicGFnZSBvcHRpbWl6
YXRpb24KLSBjYWNoZWQgd2ViIHBhZ2VzCi0gcXVhbGl0eSB3ZWIgaG9zdGlu
ZwotIGNvbXByZXNzZWQgdGV4dCBmaWxlcwotIGFwYWNoZS9uZ2lueCB0dW5p
bmcKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5XaGF0IHR5
cGVzIG9mIGRucyBjYWNoZSB3b3JraW5nIHdoZW4geW91IHR5cGUgYXBpLmV4
YW1wbGUuY29tIGluIHlvdXIgYnJvd3NlciBhbmQgcHJlc3MgcmV0dXJuPzwv
Yj48L3N1bW1hcnk+PGJyPgoKQnJvd3NlciBjaGVja3MgaWYgdGhlIGRvbWFp
biBpcyBpbiBpdHMgY2FjaGUgKHRvIHNlZSB0aGUgRE5TIENhY2hlIGluIENo
cm9tZSwgZ28gdG8gYGNocm9tZTovL25ldC1pbnRlcm5hbHMvI2Ruc2ApLiBX
aGVuIHRoaXMgY2FjaGUgZmFpbHMsIGl0IHNpbXBseSBhc2tzIHRoZSBPUyB0
byByZXNvbHZlIHRoZSBkb21haW4uCgpUaGUgT1MgcmVzb2x2ZXIgaGFzIGl0
J3Mgb3duIGNhY2hlIHdoaWNoIGl0IHdpbGwgY2hlY2suIElmIGl0IGZhaWxz
IHRoaXMsIGl0IHJlc29ydHMgdG8gYXNraW5nIHRoZSBPUyBjb25maWd1cmVk
IEROUyBzZXJ2ZXJzLgoKVGhlIE9TIGNvbmZpZ3VyZWQgRE5TIHNlcnZlcnMg
d2lsbCB0eXBpY2FsbHkgYmUgY29uZmlndXJlZCBieSBESENQIGZyb20gdGhl
IHJvdXRlciB3aGVyZSB0aGUgRE5TIHNlcnZlcnMgYXJlIGxpa2VseSB0byBi
ZSB0aGUgSVNQJ3MgRE5TIHNlcnZlcnMgY29uZmlndXJlZCBieSBESENQIGZy
b20gdGhlIGludGVybmV0IGdhdGV3YXkgdG8gdGhlIHJvdXRlci4KCkluIHRo
ZSBldmVudCB0aGUgcm91dGVyIGhhcyBpdCdzIG93biBETlMgc2VydmVycywg
aXQgbWF5IGhhdmUgaXQncyBvd24gY2FjaGUgb3RoZXJ3aXNlIHlvdSBzaG91
bGQgYmUgZGlyZWN0ZWQgc3RyYWlnaHQgdG8geW91ciBJU1AncyBETlMgc2Vy
dmVycyBtb3N0IHR5cGljYWxseSBhcyBzb29uIGFzIHRoZSBPUyBjYWNoZSB3
YXMgZm91bmQgdG8gYmUgZW1wdHkuCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBb
V2hhdCBoYXBwZW5zIHdoZW4uLi5dKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGV4
L3doYXQtaGFwcGVucy13aGVuKQotIFtETlMgRXhwbGFpbmVkIC0gSG93IFlv
dXIgQnJvd3NlciBGaW5kcyBXZWJzaXRlc10oaHR0cHM6Ly9zY290Y2guaW8v
dHV0b3JpYWxzL2Rucy1leHBsYWluZWQtaG93LXlvdXItYnJvd3Nlci1maW5k
cy13ZWJzaXRlcykKLSBbRmlyZWZveCBpbnZhbGlkYXRlIGRucyBjYWNoZV0o
aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMTMwNjM0OTYv
ZmlyZWZveC1pbnZhbGlkYXRlLWRucy1jYWNoZSkKCjwvZGV0YWlscz4KCjxk
ZXRhaWxzPgo8c3VtbWFyeT48Yj5XaGF0IGlzIHRoZSBkaWZmZXJlbmNlIGJl
dHdlZW4gPGNvZGU+Q2FjaGUtQ29udHJvbDogbWF4LWFnZT0wPC9jb2RlPiBh
bmQgPGNvZGU+Q2FjaGUtQ29udHJvbDogbm8tY2FjaGU8L2NvZGU+PzwvYj48
L3N1bW1hcnk+PGJyPgoKKipXaGVuIHNlbnQgYnkgdGhlIG9yaWdpbiBzZXJ2
ZXIqKgoKYG1heC1hZ2U9MGAgc2ltcGx5IHRlbGxzIGNhY2hlcyAoYW5kIHVz
ZXIgYWdlbnRzKSB0aGUgcmVzcG9uc2UgaXMgc3RhbGUgZnJvbSB0aGUgZ2V0
LWdvIGFuZCBzbyB0aGV5IFNIT1VMRCByZXZhbGlkYXRlIHRoZSByZXNwb25z
ZSAoZS5nLiB3aXRoIHRoZSBJZi1Ob3QtTW9kaWZpZWQgaGVhZGVyKSBiZWZv
cmUgdXNpbmcgYSBjYWNoZWQgY29weSwgd2hlcmVhcywgYG5vLWNhY2hlYCB0
ZWxscyB0aGVtIHRoZXkgTVVTVCByZXZhbGlkYXRlIGJlZm9yZSB1c2luZyBh
IGNhY2hlZCBjb3B5LgoKSW4gb3RoZXIgd29yZHMsIGNhY2hlcyBtYXkgc29t
ZXRpbWVzIGNob29zZSB0byB1c2UgYSBzdGFsZSByZXNwb25zZSAoYWx0aG91
Z2ggSSBiZWxpZXZlIHRoZXkgaGF2ZSB0byB0aGVuIGFkZCBhIFdhcm5pbmcg
aGVhZGVyKSwgYnV0IGBuby1jYWNoZWAgc2F5cyB0aGV5J3JlIG5vdCBhbGxv
d2VkIHRvIHVzZSBhIHN0YWxlIHJlc3BvbnNlIG5vIG1hdHRlciB3aGF0LiBN
YXliZSB5b3UnZCB3YW50IHRoZSBTSE9VTEQtcmV2YWxpZGF0ZSBiZWhhdmlv
ciB3aGVuIGJhc2ViYWxsIHN0YXRzIGFyZSBnZW5lcmF0ZWQgaW4gYSBwYWdl
LCBidXQgeW91J2Qgd2FudCB0aGUgTVVTVC1yZXZhbGlkYXRlIGJlaGF2aW9y
IHdoZW4geW91J3ZlIGdlbmVyYXRlZCB0aGUgcmVzcG9uc2UgdG8gYW4gZS1j
b21tZXJjZSBwdXJjaGFzZS4KCioqV2hlbiBzZW50IGJ5IHRoZSB1c2VyIGFn
ZW50KioKCklmIGEgdXNlciBhZ2VudCBzZW5kcyBhIHJlcXVlc3Qgd2l0aCBg
Q2FjaGUtQ29udHJvbDogbWF4LWFnZT0wYCAoYWthLiAiZW5kLXRvLWVuZCBy
ZXZhbGlkYXRpb24iKSwgdGhlbiBlYWNoIGNhY2hlIGFsb25nIHRoZSB3YXkg
d2lsbCByZXZhbGlkYXRlIGl0cyBjYWNoZSBlbnRyeSAoZS5nLiB3aXRoIHRo
ZSBJZi1Ob3QtTW9kaWZpZWQgaGVhZGVyKSBhbGwgdGhlIHdheSB0byB0aGUg
b3JpZ2luIHNlcnZlci4gSWYgdGhlIHJlcGx5IGlzIHRoZW4gMzA0IChOb3Qg
TW9kaWZpZWQpLCB0aGUgY2FjaGVkIGVudGl0eSBjYW4gYmUgdXNlZC4KCk9u
IHRoZSBvdGhlciBoYW5kLCBzZW5kaW5nIGEgcmVxdWVzdCB3aXRoIGBDYWNo
ZS1Db250cm9sOiBuby1jYWNoZWAgKGFrYS4gImVuZC10by1lbmQgcmVsb2Fk
IikgZG9lc24ndCByZXZhbGlkYXRlIGFuZCB0aGUgc2VydmVyIE1VU1QgTk9U
IHVzZSBhIGNhY2hlZCBjb3B5IHdoZW4gcmVzcG9uZGluZy4KCjwvZGV0YWls
cz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5XaGF0IGFyZSB0aGUgc2VjdXJp
dHkgcmlza3Mgb2Ygc2V0dGluZyA8Y29kZT5BY2Nlc3MtQ29udHJvbC1BbGxv
dy1PcmlnaW48L2NvZGU+PzwvYj48L3N1bW1hcnk+PGJyPgoKQnkgcmVzcG9u
ZGluZyB3aXRoIDxjb2RlPkFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbjog
KjwvY29kZT4sIHRoZSByZXF1ZXN0ZWQgcmVzb3VyY2UgYWxsb3dzIHNoYXJp
bmcgd2l0aCBldmVyeSBvcmlnaW4uIFRoaXMgYmFzaWNhbGx5IG1lYW5zIHRo
YXQgYW55IHNpdGUgY2FuIHNlbmQgYW4gWEhSIHJlcXVlc3QgdG8geW91ciBz
aXRlIGFuZCBhY2Nlc3MgdGhlIHNlcnZlcuKAmXMgcmVzcG9uc2Ugd2hpY2gg
d291bGQgbm90IGJlIHRoZSBjYXNlIGlmIHlvdSBoYWRu4oCZdCBpbXBsZW1l
bnRlZCB0aGlzIENPUlMgcmVzcG9uc2UuCgpTbyBhbnkgc2l0ZSBjYW4gbWFr
ZSBhIHJlcXVlc3QgdG8geW91ciBzaXRlIG9uIGJlaGFsZiBvZiB0aGVpciB2
aXNpdG9ycyBhbmQgcHJvY2VzcyBpdHMgcmVzcG9uc2UuIElmIHlvdSBoYXZl
IHNvbWV0aGluZyBpbXBsZW1lbnRlZCBsaWtlIGFuIGF1dGhlbnRpY2F0aW9u
IG9yIGF1dGhvcml6YXRpb24gc2NoZW1lIHRoYXQgaXMgYmFzZWQgb24gc29t
ZXRoaW5nIHRoYXQgaXMgYXV0b21hdGljYWxseSBwcm92aWRlZCBieSB0aGUg
YnJvd3NlciAoY29va2llcywgY29va2llLWJhc2VkIHNlc3Npb25zLCBldGMu
KSwgdGhlIHJlcXVlc3RzIHRyaWdnZXJlZCBieSB0aGUgdGhpcmQgcGFydHkg
c2l0ZXMgd2lsbCB1c2UgdGhlbSB0b28uCgo8L2RldGFpbHM+Cgo8ZGV0YWls
cz4KPHN1bW1hcnk+PGI+Q3JlYXRlIGEgc2luZ2xlLXVzZSBUQ1Agb3IgVURQ
IHByb3h5IHdpdGggPGNvZGU+bmV0Y2F0PC9jb2RlPi48L2I+PC9zdW1tYXJ5
Pjxicj4KCmBgYGJhc2gKIyMjIFRDUCAtPiBUQ1AKbmMgLWwgLXAgMjAwMCAt
YyAibmMgW2lwfGhvc3RuYW1lXSAzMDAwIgoKIyMjIFRDUCAtPiBVRFAKbmMg
LWwgLXAgMjAwMCAtYyAibmMgLXUgW2lwfGhvc3RuYW1lXSAzMDAwIgoKIyMj
IFVEUCAtPiBVRFAKbmMgLWwgLXUgLXAgMjAwMCAtYyAibmMgLXUgW2lwfGhv
c3RuYW1lXSAzMDAwIgoKIyMjIFVEUCAtPiBUQ1AKbmMgLWwgLXUgLXAgMjAw
MCAtYyAibmMgW2lwfGhvc3RuYW1lXSAzMDAwIgpgYGAKCjwvZGV0YWlscz4K
CjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5FeHBsYWluIDMgdGVjaG5pcXVlcyBm
b3IgYXZvaWRpbmcgZmlyZXdhbGxzIHdpdGggPGNvZGU+bm1hcDwvY29kZT4u
PC9iPjwvc3VtbWFyeT48YnI+CgoqKlVzZSBEZWNveSBhZGRyZXNzZXMqKgoK
YGBgYmFzaAojIEdlbmVyYXRlcyBhIHJhbmRvbSBudW1iZXIgb2YgZGVjb3lz
LgpubWFwIC1EIFJORDoxMCBbdGFyZ2V0XQoKIyBNYW51YWxseSBzcGVjaWZ5
IHRoZSBJUCBhZGRyZXNzZXMgb2YgdGhlIGRlY295cy4Kbm1hcCAtRCBkZWNv
eTEsZGVjb3kyLGRlY295MwpgYGAKCkluIHRoaXMgdHlwZSBvZiBzY2FuIHlv
dSBjYW4gaW5zdHJ1Y3QgTm1hcCB0byBzcG9vZiBwYWNrZXRzIGZyb20gb3Ro
ZXIgaG9zdHMuSW4gdGhlIGZpcmV3YWxsIGxvZ3MgaXQgd2lsbCBiZSBub3Qg
b25seSBvdXIgSVAgYWRkcmVzcyBidXQgYWxzbyBhbmQgdGhlIElQIGFkZHJl
c3NlcyBvZiB0aGUgZGVjb3lzIHNvIGl0IHdpbGwgYmUgbXVjaCBoYXJkZXIg
dG8gZGV0ZXJtaW5lIGZyb20gd2hpY2ggc3lzdGVtIHRoZSBzY2FuIHN0YXJ0
ZWQuCgoqKlNvdXJjZSBwb3J0IG51bWJlciBzcGVjaWZpY2F0aW9uKioKCmBg
YGJhc2gKbm1hcCAtLXNvdXJjZS1wb3J0IDUzIFt0YXJnZXRdCmBgYAoKQSBj
b21tb24gZXJyb3IgdGhhdCBtYW55IGFkbWluaXN0cmF0b3JzIGFyZSBkb2lu
ZyB3aGVuIGNvbmZpZ3VyaW5nIGZpcmV3YWxscyBpcyB0byBzZXQgdXAgYSBy
dWxlIHRvIGFsbG93IGFsbCBpbmNvbWluZyB0cmFmZmljIHRoYXQgY29tZXMg
ZnJvbSBhIHNwZWNpZmljIHBvcnQgbnVtYmVyLlRoZSA8Y29kZT4tLXNvdXJj
ZS1wb3J0PC9jb2RlPiBvcHRpb24gb2YgTm1hcCBjYW4gYmUgdXNlZCB0byBl
eHBsb2l0IHRoaXMgbWlzY29uZmlndXJhdGlvbi5Db21tb24gcG9ydHMgdGhh
dCB5b3UgY2FuIHVzZSBmb3IgdGhpcyB0eXBlIG9mIHNjYW4gYXJlOiAyMCwg
NTMgYW5kIDY3LgoKKipBcHBlbmQgUmFuZG9tIERhdGEqKgoKYGBgYmFzaApu
bWFwIC0tZGF0YS1sZW5ndGggMjUgW3RhcmdldF0KYGBgCgpNYW55IGZpcmV3
YWxscyBhcmUgaW5zcGVjdGluZyBwYWNrZXRzIGJ5IGxvb2tpbmcgYXQgdGhl
aXIgc2l6ZSBpbiBvcmRlciB0byBpZGVudGlmeSBhIHBvdGVudGlhbCBwb3J0
IHNjYW4uVGhpcyBpcyBiZWNhdXNlIG1hbnkgc2Nhbm5lcnMgYXJlIHNlbmRp
bmcgcGFja2V0cyB0aGF0IGhhdmUgc3BlY2lmaWMgc2l6ZS5JbiBvcmRlciB0
byBhdm9pZCB0aGF0IGtpbmQgb2YgZGV0ZWN0aW9uIHlvdSBjYW4gdXNlIHRo
ZSBjb21tYW5kIDxjb2RlPi0tZGF0YS1sZW5ndGg8L2NvZGU+IHRvIGFkZCBh
ZGRpdGlvbmFsIGRhdGEgYW5kIHRvIHNlbmQgcGFja2V0cyB3aXRoIGRpZmZl
cmVudCBzaXplIHRoYW4gdGhlIGRlZmF1bHQuCgoqKlRDUCBBQ0sgU2Nhbioq
CgpgYGBiYXNoCm5tYXAgLXNBIFt0YXJnZXRdCmBgYAoKSXQgaXMgYWx3YXlz
IGdvb2QgdG8gc2VuZCB0aGUgQUNLIHBhY2tldHMgcmF0aGVyIHRoYW4gdGhl
IFNZTiBwYWNrZXRzIGJlY2F1c2UgaWYgdGhlcmUgaXMgYW55IGFjdGl2ZSBm
aXJld2FsbCB3b3JraW5nIG9uIHRoZSByZW1vdGUgY29tcHV0ZXIgdGhlbiBi
ZWNhdXNlIG9mIHRoZSBBQ0sgcGFja2V0cyB0aGUgZmlyZXdhbGwgY2Fubm90
IGNyZWF0ZSB0aGUgbG9nLCBzaW5jZSBmaXJld2FsbHMgdHJlYXQgQUNLIHBh
Y2tldCBhcyB0aGUgcmVzcG9uc2Ugb2YgdGhlIFNZTiBwYWNrZXQuCgpVc2Vm
dWwgcmVzb3VyY2VzOgoKLSBbTm1hcCAtIFRlY2huaXF1ZXMgZm9yIEF2b2lk
aW5nIEZpcmV3YWxsc10oaHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxMi8w
NC8wMi9ubWFwLXRlY2huaXF1ZXMtZm9yLWF2b2lkaW5nLWZpcmV3YWxscy8p
Cgo8L2RldGFpbHM+CgojIyMjIyMgRGV2b3BzIFF1ZXN0aW9ucyAoNSkKCjxk
ZXRhaWxzPgo8c3VtbWFyeT48Yj5FeHBsYWluIGhvdyBGbGFwIERldGVjdGlv
biB3b3JrcyBpbiBOYWdpb3M/PC9iPjwvc3VtbWFyeT48YnI+CgoqKkZsYXBw
aW5nKiogb2NjdXJzIHdoZW4gYSBzZXJ2aWNlIG9yIGhvc3QgY2hhbmdlcyBz
dGF0ZSB0b28gZnJlcXVlbnRseSwgdGhpcyBjYXVzZXMgbG90IG9mIHByb2Js
ZW0gYW5kIHJlY292ZXJ5IG5vdGlmaWNhdGlvbnMuCgpPbmNlIHlvdSBoYXZl
IGRlZmluZWQgKipGbGFwcGluZyoqLCBleHBsYWluIGhvdyBOYWdpb3MgZGV0
ZWN0cyAqKkZsYXBwaW5nKiouIFdoZW5ldmVyIE5hZ2lvcyBjaGVja3MgdGhl
IHN0YXR1cyBvZiBhIGhvc3Qgb3Igc2VydmljZSwgaXQgd2lsbCBjaGVjayB0
byBzZWUgaWYgaXQgaGFzIHN0YXJ0ZWQgb3Igc3RvcHBlZCBmbGFwcGluZy4K
Ck5hZ2lvcyBmb2xsb3dzIHRoZSBiZWxvdyBnaXZlbiBwcm9jZWR1cmUgdG8g
ZG8gdGhhdDoKCi0gc3RvcmluZyB0aGUgcmVzdWx0cyBvZiB0aGUgbGFzdCAy
MSBjaGVja3Mgb2YgdGhlIGhvc3Qgb3Igc2VydmljZSBhbmFseXppbmcgdGhl
IGhpc3RvcmljYWwgY2hlY2sgcmVzdWx0cyBhbmQgZGV0ZXJtaW5lIHdoZXJl
IHN0YXRlIGNoYW5nZXMvdHJhbnNpdGlvbnMgb2NjdXIKLSB1c2luZyB0aGUg
c3RhdGUgdHJhbnNpdGlvbnMgdG8gZGV0ZXJtaW5lIGEgcGVyY2VudCBzdGF0
ZSBjaGFuZ2UgdmFsdWUgKGEgbWVhc3VyZSBvZiBjaGFuZ2UpIGZvciB0aGUg
aG9zdCBvciBzZXJ2aWNlCi0gY29tcGFyaW5nIHRoZSBwZXJjZW50IHN0YXRl
IGNoYW5nZSB2YWx1ZSBhZ2FpbnN0IGxvdyBhbmQgaGlnaCBmbGFwcGluZyB0
aHJlc2hvbGRzCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+
V2hhdCBhcmUgdGhlIGFkdmFudGFnZXMgdGhhdCBDb250YWluZXJpemF0aW9u
IHByb3ZpZGVzIG92ZXIgVmlydHVhbGl6YXRpb24/PC9iPjwvc3VtbWFyeT48
YnI+CgpCZWxvdyBhcmUgdGhlIGFkdmFudGFnZXMgb2YgY29udGFpbmVyaXph
dGlvbiBvdmVyIHZpcnR1YWxpemF0aW9uOgoKLSBjb250YWluZXJzIHByb3Zp
ZGUgcmVhbC10aW1lIHByb3Zpc2lvbmluZyBhbmQgc2NhbGFiaWxpdHkgYnV0
IFZNcyBwcm92aWRlIHNsb3cgcHJvdmlzaW9uaW5nCi0gY29udGFpbmVycyBh
cmUgbGlnaHR3ZWlnaHQgd2hlbiBjb21wYXJlZCB0byBWTXMKLSBWTXMgaGF2
ZSBsaW1pdGVkIHBlcmZvcm1hbmNlIHdoZW4gY29tcGFyZWQgdG8gY29udGFp
bmVycwotIGNvbnRhaW5lcnMgaGF2ZSBiZXR0ZXIgcmVzb3VyY2UgdXRpbGl6
YXRpb24gY29tcGFyZWQgdG8gVk1zCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4K
PHN1bW1hcnk+PGI+SXMgdGhlIHdheSBvZiBkaXN0cmlidXRpbmcgRG9ja2Vy
IGFwcHMgKGUuZy4gQXBhY2hlLCBNeVNRTCkgZnJvbSBEb2NrZXIgSHViIGlz
IGdvb2QgZm9yIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzPyBEZXNjcmliZSBz
ZWN1cml0eSBwcm9ibGVtcyBhbmQgcG9zc2libGUgc29sdXRpb25zLiAqKio8
L2I+PC9zdW1tYXJ5Pjxicj4KClRvIGJlIGNvbXBsZXRlZC4KCjwvZGV0YWls
cz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5Tb21lIG9mIHRoZSBjb21tb24g
dXNlIGNhc2VzIG9mIExYQyBhbmQgTFhEIGNvbWUgZnJvbSB0aGUgZm9sbG93
aW5nIHJlcXVpcmVtZW50cy4uLiBFeHBsYWluLjwvYj48L3N1bW1hcnk+PGJy
PgoKLSB0aGUgbmVlZCBmb3IgYW4gaXNvbGF0ZWQgZGV2ZWxvcG1lbnQgZW52
aXJvbm1lbnQgd2l0aG91dCBwb2xsdXRpbmcgeW91ciBob3N0IG1hY2hpbmUK
LSBpc29sYXRpb24gd2l0aGluIHByb2R1Y3Rpb24gc2VydmVycyBhbmQgdGhl
IHBvc3NpYmlsaXR5IHRvIHJ1biBtb3JlIHRoYW4gb25lIHNlcnZpY2UgaW4g
aXRzIG93biBjb250YWluZXIKLSBhIG5lZWQgdG8gdGVzdCB0aGluZ3Mgd2l0
aCBtb3JlIHRoYW4gb25lIHZlcnNpb24gb2YgdGhlIHNhbWUgc29mdHdhcmUg
b3IgZGlmZmVyZW50IG9wZXJhdGluZyBzeXN0ZW0gZW52aXJvbm1lbnRzCi0g
ZXhwZXJpbWVudGluZyB3aXRoIGRpZmZlcmVudCBhbmQgbmV3IHJlbGVhc2Vz
IG9mIEdOVS9MaW51eCBkaXN0cmlidXRpb25zIHdpdGhvdXQgaGF2aW5nIHRv
IGluc3RhbGwgdGhlbSBvbiBhIHBoeXNpY2FsIGhvc3QgbWFjaGluZQotIHRy
eWluZyBvdXQgYSBzb2Z0d2FyZSBvciBkZXZlbG9wbWVudCBzdGFjayB0aGF0
IG1heSBvciBtYXkgbm90IGJlIHVzZWQgYWZ0ZXIgc29tZSBwbGF5aW5nIGFy
b3VuZAotIGluc3RhbGxpbmcgbWFueSB0eXBlcyBvZiBzb2Z0d2FyZSBpbiB5
b3VyIHByaW1hcnkgZGV2ZWxvcG1lbnQgbWFjaGluZSBvciBwcm9kdWN0aW9u
IHNlcnZlciBhbmQgbWFpbnRhaW5pbmcgdGhlbSBvbiBhIGxvbmdlciBydW4K
LSBkb2luZyBhIGRyeSBydW4gb2YgYW55IGluc3RhbGxhdGlvbiBvciBtYWlu
dGVuYW5jZSB0YXNrIGJlZm9yZSBhY3R1YWxseSBleGVjdXRpbmcgaXQgb24g
cHJvZHVjdGlvbiBtYWNoaW5lcwotIGJldHRlciB1dGlsaXphdGlvbiBhbmQg
cHJvdmlzaW9uaW5nIG9mIHNlcnZlciByZXNvdXJjZXMgd2l0aCBtdWx0aXBs
ZSBzZXJ2aWNlcyBydW5uaW5nIGZvciBkaWZmZXJlbnQgdXNlcnMgb3IgY2xp
ZW50cwotIGhpZ2gtZGVuc2l0eSB2aXJ0dWFsIHByaXZhdGUgc2VydmVyIChW
UFMpIGhvc3RpbmcsIHdoZXJlIGlzb2xhdGlvbiB3aXRob3V0IHRoZSBjb3N0
IG9mIGZ1bGwgdmlydHVhbGl6YXRpb24gaXMgbmVlZGVkCi0gZWFzeSBhY2Nl
c3MgdG8gaG9zdCBoYXJkd2FyZSBmcm9tIGEgY29udGFpbmVyLCBjb21wYXJl
ZCB0byBjb21wbGljYXRlZCBhY2Nlc3MgbWV0aG9kcyBmcm9tIHZpcnR1YWwg
bWFjaGluZXMKLSBtdWx0aXBsZSBidWlsZCBlbnZpcm9ubWVudHMgd2l0aCBk
aWZmZXJlbnQgY3VzdG9taXphdGlvbnMgaW4gcGxhY2UKCjwvZGV0YWlscz4K
CjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5Zb3UgaGF2ZSB0byBwcmVwYXJlIGEg
UmVkaXMgY2x1c3Rlci4gSG93IHdpbGwgeW91IGVuc3VyZSBzZWN1cml0eT88
L2I+PC9zdW1tYXJ5Pjxicj4KCi0gcHJvdGVjdCBhIGdpdmVuIFJlZGlzIGlu
c3RhbmNlIGZyb20gb3V0c2lkZSBhY2Nlc3NlcyB2aWEgZmlyZXdhbGwKLSBi
aW5kaW5nIGl0IHRvIDEyNy4wLjAuMSBpZiBvbmx5IGxvY2FsIGNsaWVudHMg
YXJlIGFjY2Vzc2luZyBpdAotIHNhbmRib3hlZCBlbnZpcm9ubWVudAotIGVu
YWJsaW5nICoqQVVUSCoqCi0gZW5hYmxpbmcgKipQcm90ZWN0ZWQgTW9kZSoq
Ci0gZGF0YSBlbmNyeXB0aW9uIHN1cHBvcnQgKGUuZy4gYHNwaXBlZGApCi0g
ZGlzYWJsaW5nIG9mIHNwZWNpZmljIGNvbW1hbmRzCi0gdXNlcnMgKipBQ0xz
KioKClVzZWZ1bCByZXNvdXJjZXM6CgotIFtSZWRpcyBTZWN1cml0eV0oaHR0
cHM6Ly9yZWRpcy5pby90b3BpY3Mvc2VjdXJpdHkpCi0gW0EgZmV3IHRoaW5n
cyBhYm91dCBSZWRpcyBzZWN1cml0eV0oaHR0cDovL2FudGlyZXouY29tL25l
d3MvOTYpCgo8L2RldGFpbHM+CgojIyMjIyMgQ3liZXIgU2VjdXJpdHkgUXVl
c3Rpb25zICg1KQoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPldoYXQgaXMgT1dB
U1AgQXBwbGljYXRpb24gU2VjdXJpdHkgVmVyaWZpY2F0aW9uIFN0YW5kYXJk
PyBFeHBsYWluIGluIGEgZmV3IHBvaW50cy4gKioqPC9iPjwvc3VtbWFyeT48
YnI+CgpUbyBiZSBjb21wbGV0ZWQuCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4K
PHN1bW1hcnk+PGI+V2hhdCBpcyBDU1JGPzwvYj48L3N1bW1hcnk+PGJyPgoK
KipDcm9zcyBTaXRlIFJlcXVlc3QgRm9yZ2VyeSoqIGlzIGEgd2ViIGFwcGxp
Y2F0aW9uIHZ1bG5lcmFiaWxpdHkgaW4gd2hpY2ggdGhlIHNlcnZlciBkb2Vz
IG5vdCBjaGVjayB3aGV0aGVyIHRoZSByZXF1ZXN0IGNhbWUgZnJvbSBhIHRy
dXN0ZWQgY2xpZW50IG9yIG5vdC4gVGhlIHJlcXVlc3QgaXMganVzdCBwcm9j
ZXNzZWQgZGlyZWN0bHkuIEl0IGNhbiBiZSBmdXJ0aGVyIGZvbGxvd2VkIGJ5
IHRoZSB3YXlzIHRvIGRldGVjdCB0aGlzLCBleGFtcGxlcyBhbmQgY291bnRl
cm1lYXN1cmVzLgoKPC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5Pjxi
PldoYXQgaXMgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBwb2xpY2llcywgcHJv
Y2Vzc2VzIGFuZCBndWlkZWxpbmVzPzwvYj48L3N1bW1hcnk+PGJyPgoKQXMg
KipzZWN1cml0eSBwb2xpY3kqKiBkZWZpbmVzIHRoZSBzZWN1cml0eSBvYmpl
Y3RpdmVzIGFuZCB0aGUgc2VjdXJpdHkgZnJhbWV3b3JrIG9mIGFuIG9yZ2Fu
aXNhdGlvbi4gQSAqKnByb2Nlc3MqKiBpcyBhIGRldGFpbGVkIHN0ZXAgYnkg
c3RlcCBob3cgdG8gZG9jdW1lbnQgdGhhdCBzcGVjaWZpZXMgdGhlIGV4YWN0
IGFjdGlvbiB3aGljaCB3aWxsIGJlIG5lY2Vzc2FyeSB0byBpbXBsZW1lbnQg
aW1wb3J0YW50IHNlY3VyaXR5IG1lY2hhbmlzbS4gKipHdWlkZWxpbmVzKiog
YXJlIHJlY29tbWVuZGF0aW9ucyB3aGljaCBjYW4gYmUgY3VzdG9taXplZCBh
bmQgdXNlZCBpbiB0aGUgY3JlYXRpb24gb2YgcHJvY2VkdXJlcy4KCjwvZGV0
YWlscz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5XaGF0IGlzIGEgZmFsc2Ug
cG9zaXRpdmUgYW5kIGZhbHNlIG5lZ2F0aXZlIGluIGNhc2Ugb2YgSURTPzwv
Yj48L3N1bW1hcnk+PGJyPgoKV2hlbiB0aGUgZGV2aWNlIGdlbmVyYXRlZCBh
biBhbGVydCBmb3IgYW4gaW50cnVzaW9uIHdoaWNoIGhhcyBhY3R1YWxseSBu
b3QgaGFwcGVuZWQ6IHRoaXMgaXMgKipmYWxzZSBwb3NpdGl2ZSoqIGFuZCBp
ZiB0aGUgZGV2aWNlIGhhcyBub3QgZ2VuZXJhdGVkIGFueSBhbGVydCBhbmQg
dGhlIGludHJ1c2lvbiBoYXMgYWN0dWFsbHkgaGFwcGVuZWQsIHRoaXMgaXMg
dGhlIGNhc2Ugb2YgYSAqKmZhbHNlIG5lZ2F0aXZlKiouCgo8L2RldGFpbHM+
Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+MTAgcXVpY2sgcG9pbnRzIGFib3V0
IHdlYiBzZXJ2ZXIgaGFyZGVuaW5nLjwvYj48L3N1bW1hcnk+PGJyPgoKRXhh
bXBsZToKCi0gaWYgbWFjaGluZSBpcyBhIG5ldyBpbnN0YWxsLCBwcm90ZWN0
IGl0IGZyb20gaG9zdGlsZSBuZXR3b3JrIHRyYWZmaWMsIHVudGlsIHRoZSBv
cGVyYXRpbmcgc3lzdGVtIGlzIGluc3RhbGxlZCBhbmQgaGFyZGVuZWQKLSBj
cmVhdGUgYSBzZXBhcmF0ZSBwYXJ0aXRpb24gd2l0aCB0aGUgYG5vZGV2YCwg
YG5vc3VpZGAsIGFuZCBgbm9leGVjYCBvcHRpb25zIHNldCBmb3IgYC90bXBg
Ci0gY3JlYXRlIHNlcGFyYXRlIHBhcnRpdGlvbnMgZm9yIGAvdmFyYCwgYC92
YXIvbG9nYCwgYC92YXIvbG9nL2F1ZGl0YCwgYW5kIGAvaG9tZWAKLSBlbmFi
bGUgcmFuZG9taXplZCB2aXJ0dWFsIG1lbW9yeSByZWdpb24gcGxhY2VtZW50
Ci0gcmVtb3ZlIGxlZ2FjeSBzZXJ2aWNlcyAoZS5nLiBgdGVsbmV0LXNlcnZl
cmAsIGByc2hgLCBgcmxvZ2luYCwgYHJjcGAsIGB5cHNlcnZgLCBgeXBiaW5k
YCwgYHRmdHBgLCBgdGZ0cC1zZXJ2ZXJgLCBgdGFsa2AsIGB0YWxrLXNlcnZl
cmApLgotIGxpbWl0IGNvbm5lY3Rpb25zIHRvIHNlcnZpY2VzIHJ1bm5pbmcg
b24gdGhlIGhvc3QgdG8gYXV0aG9yaXplZCB1c2VycyBvZiB0aGUgc2Vydmlj
ZSB2aWEgZmlyZXdhbGxzIGFuZCBvdGhlciBhY2Nlc3MgY29udHJvbCB0ZWNo
bm9sb2dpZXMKLSBkaXNhYmxlIHNvdXJjZSByb3V0ZWQgcGFja2V0IGFjY2Vw
dGFuY2UKLSBlbmFibGUgKipUQ1AvU1lOKiogY29va2llcwotIGRpc2FibGUg
U1NIIHJvb3QgbG9naW4KLSBpbnN0YWxsIGFuZCBjb25maWd1cmUgKipBSURF
KioKLSBpbnN0YWxsIGFuZCBjb25maWd1cmUgKipPU3NlYyBISURTKioKLSBj
b25maWd1cmUgKipTRUxpbnV4KioKLSBhbGwgYWRtaW5pc3RyYXRvciBvciBy
b290IGFjY2VzcyBtdXN0IGJlIGxvZ2dlZAotIGludGVncml0eSBjaGVja2lu
ZyBvZiBzeXN0ZW0gYWNjb3VudHMsIGdyb3VwIG1lbWJlcnNoaXBzLCBhbmQg
dGhlaXIgYXNzb2NpYXRlZCBwcml2aWxlZ2VzIHNob3VsZCBiZSBlbmFibGVk
IGFuZCB0ZXN0ZWQKLSBzZXQgcGFzc3dvcmQgY3JlYXRpb24gcmVxdWlyZW1l
bnRzIChlLmcuIHdpdGggUEFNKQoKVXNlZnVsIHJlc291cmNlczoKCi0gW1Nl
Y3VyaXR5IEhhcmRlbiBDZW50T1MgN10oaHR0cHM6Ly9oaWdob24uY29mZmVl
L2Jsb2cvc2VjdXJpdHktaGFyZGVuLWNlbnRvcy03LykKLSBbQ2VudE9TIDcg
U2VydmVyIEhhcmRlbmluZyBHdWlkZV0oaHR0cHM6Ly93d3cubGlzZW5ldC5j
b20vMjAxNy9jZW50b3MtNy1zZXJ2ZXItaGFyZGVuaW5nLWd1aWRlLykKCjwv
ZGV0YWlscz4KCiMjIDxhIG5hbWU9InNlY3JldC1rbm93bGVkZ2UiPlNlY3Jl
dCBLbm93bGVkZ2U8L2E+CgojIyMgOmRpYW1vbmRfc2hhcGVfd2l0aF9hX2Rv
dF9pbnNpZGU6IDxhIG5hbWU9Imd1cnUtc3lzYWRtaW4iPkd1cnUgU3lzYWRt
aW48L2E+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+RXhwbGFpbiB3aGF0IGlz
IEV2ZW50LURyaXZlbiBhcmNoaXRlY3R1cmUgYW5kIGhvdyBpdCBpbXByb3Zl
cyBwZXJmb3JtYW5jZT8gKioqPC9iPjwvc3VtbWFyeT48YnI+CgpUbyBiZSBj
b21wbGV0ZWQuCgo8L2RldGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+
QW4gYXBwbGljYXRpb24gZW5jb3VudGVycyBzb21lIHBlcmZvcm1hbmNlIGlz
c3Vlcy4gWW91IHNob3VsZCB0byBmaW5kIHRoZSBjb2RlIHdlIGhhdmUgdG8g
b3B0aW1pemUuIEhvdyB0byBwcm9maWxlIGFwcCBpbiBMaW51eCBlbnZpcm9u
bWVudD88L2I+PC9zdW1tYXJ5Pjxicj4KCj4gSWRlYWxseSwgSSBuZWVkIGFu
IGFwcCB0aGF0IHdpbGwgYXR0YWNoIHRvIGEgcHJvY2VzcyBhbmQgbG9nIHBl
cmlvZGljIHNuYXBzaG90cyBvZjogbWVtb3J5IHVzYWdlIG51bWJlciBvZiB0
aHJlYWRzIENQVSB1c2FnZS4KCjEuIFlvdSBjYW4gdXNlIGB0b3BgaW4gYmF0
Y2ggbW9kZS4gSXQgcnVucyBpbiB0aGUgYmF0Y2ggbW9kZSBlaXRoZXIgdW50
aWwgaXQgaXMga2lsbGVkIG9yIHVudGlsIE4gaXRlcmF0aW9ucyBpcyBkb25l
OgoKYGBgYmFzaAp0b3AgLWIgLXAgYHBpZG9mIGEub3V0YApgYGAKCm9yCgpg
YGBiYXNoCnRvcCAtYiAtcCBgcGlkb2YgYS5vdXRgIC1uIDEwMApgYGAKCjIu
IFlvdSBjYW4gdXNlIHBzIChmb3IgaW5zdGFuY2UgaW4gYSBzaGVsbCBzY3Jp
cHQpOgoKYGBgYmFzaApwcyAtLWZvcm1hdCBwaWQscGNwdSxjcHV0aW1lLGV0
aW1lLHNpemUsdnN6LGNtZCAtcCBgcGlkb2YgYS5vdXRgCmBgYAoKPiBJIG5l
ZWQgc29tZSBtZWFucyBvZiByZWNvcmRpbmcgdGhlIHBlcmZvcm1hbmNlIG9m
IGFuIGFwcGxpY2F0aW9uIG9uIGEgTGludXggbWFjaGluZS4KCjEuIFRvIHJl
Y29yZCBwZXJmb3JtYW5jZSBkYXRhOgoKYGBgYmFzaApwZXJmIHJlY29yZCAt
cCBgcGlkb2YgYS5vdXRgCmBgYAoKb3IgdG8gcmVjb3JkIGZvciAxMCBzZWNz
OgoKYGBgYmFzaApwZXJmIHJlY29yZCAtcCBgcGlkb2YgYS5vdXRgIHNsZWVw
IDEwCmBgYAoKb3IgdG8gcmVjb3JkIHdpdGggY2FsbCBncmFwaCAoKToKCmBg
YGJhc2gKcGVyZiByZWNvcmQgLWcgLXAgYHBpZG9mIGEub3V0YApgYGAKCjIp
IFRvIGFuYWx5emUgdGhlIHJlY29yZGVkIGRhdGEKCmBgYGJhc2gKcGVyZiBy
ZXBvcnQgLS1zdGRpbwpwZXJmIHJlcG9ydCAtLXN0ZGlvIC0tc29ydD1kc28g
LWcgbm9uZQpwZXJmIHJlcG9ydCAtLXN0ZGlvIC1nIG5vbmUKcGVyZiByZXBv
cnQgLS1zdGRpbyAtZwpgYGAKCioqVGhpcyBpcyBhbiBleGFtcGxlIG9mIHBy
b2ZpbGluZyBhIHRlc3QgcHJvZ3JhbSoqCgoxLiBJIHJ1biBteSB0ZXN0IHBy
b2dyYW0gKGMrKyk6CgpgYGBiYXNoCi4vbXlfdGVzdCAxMDAwMDAwMDAKYGBg
CgoyLiBUaGVuIEkgcmVjb3JkIHBlcmZvcm1hbmNlIGRhdGEgb2YgYSBydW5u
aW5nIHByb2Nlc3M6CgpgYGBiYXNoCnBlcmYgcmVjb3JkIC1nICAtcCBgcGlk
b2YgbXlfdGVzdGAgLW8gLi9teV90ZXN0LnBlcmYuZGF0YSBzbGVlcCAzMApg
YGAKCjMuIFRoZW4gSSBhbmFseXplIGxvYWQgcGVyIG1vZHVsZToKCmBgYGJh
c2gKcGVyZiByZXBvcnQgLS1zdGRpbyAtZyBub25lIC0tc29ydCBjb21tLGRz
byAtaSAuL215X3Rlc3QucGVyZi5kYXRhCgojIE92ZXJoZWFkICBDb21tYW5k
ICAgICAgICAgICAgICAgICBTaGFyZWQgT2JqZWN0CiMgLi4uLi4uLi4gIC4u
Li4uLi4gIC4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4KIwogICAgNzAu
MDYlICBteV90ZXN0ICBteV90ZXN0CiAgICAyOC4zMyUgIG15X3Rlc3QgIGxp
YnRjbWFsbG9jX21pbmltYWwuc28uMC4xLjAKICAgICAxLjYxJSAgbXlfdGVz
dCAgW2tlcm5lbC5rYWxsc3ltc10KYGBgCgo0LiBUaGVuIGxvYWQgcGVyIGZ1
bmN0aW9uIGlzIGFuYWx5emVkOgoKYGBgYmFzaApwZXJmIHJlcG9ydCAtLXN0
ZGlvIC1nIG5vbmUgLWkgLi9teV90ZXN0LnBlcmYuZGF0YSB8IGMrK2ZpbHQK
CiMgT3ZlcmhlYWQgIENvbW1hbmQgICAgICAgICAgICAgICAgIFNoYXJlZCBP
YmplY3QgICAgICAgICAgICAgICAgICAgICAgIFN5bWJvbAojIC4uLi4uLi4u
ICAuLi4uLi4uICAuLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uICAuLi4u
Li4uLi4uLi4uLi4uLi4uLi4uLi4uLi4KIwogICAgMjkuMzAlICBteV90ZXN0
ICBteV90ZXN0ICAgICAgICAgICAgICAgICAgICAgICBbLl0gZjIobG9uZykK
ICAgIDI5LjE0JSAgbXlfdGVzdCAgbXlfdGVzdCAgICAgICAgICAgICAgICAg
ICAgICAgWy5dIGYxKGxvbmcpCiAgICAxNS4xNyUgIG15X3Rlc3QgIGxpYnRj
bWFsbG9jX21pbmltYWwuc28uMC4xLjAgIFsuXSBvcGVyYXRvciBuZXcodW5z
aWduZWQgbG9uZykKICAgIDEzLjE2JSAgbXlfdGVzdCAgbGlidGNtYWxsb2Nf
bWluaW1hbC5zby4wLjEuMCAgWy5dIG9wZXJhdG9yIGRlbGV0ZSh2b2lkKikK
ICAgICA5LjQ0JSAgbXlfdGVzdCAgbXlfdGVzdCAgICAgICAgICAgICAgICAg
ICAgICAgWy5dIHByb2Nlc3NfcmVxdWVzdChsb25nKQogICAgIDEuMDElICBt
eV90ZXN0ICBteV90ZXN0ICAgICAgICAgICAgICAgICAgICAgICBbLl0gb3Bl
cmF0b3IgZGVsZXRlKHZvaWQqKUBwbHQKICAgICAwLjk3JSAgbXlfdGVzdCAg
bXlfdGVzdCAgICAgICAgICAgICAgICAgICAgICAgWy5dIG9wZXJhdG9yIG5l
dyh1bnNpZ25lZCBsb25nKUBwbHQKICAgICAwLjIwJSAgbXlfdGVzdCAgbXlf
dGVzdCAgICAgICAgICAgICAgICAgICAgICAgWy5dIG1haW4KICAgICAwLjE5
JSAgbXlfdGVzdCAgW2tlcm5lbC5rYWxsc3ltc10gICAgICAgICAgICAgW2td
IGFwaWNfdGltZXJfaW50ZXJydXB0CiAgICAgMC4xNiUgIG15X3Rlc3QgIFtr
ZXJuZWwua2FsbHN5bXNdICAgICAgICAgICAgIFtrXSBfc3Bpbl9sb2NrCiAg
ICAgMC4xMyUgIG15X3Rlc3QgIFtrZXJuZWwua2FsbHN5bXNdICAgICAgICAg
ICAgIFtrXSBuYXRpdmVfd3JpdGVfbXNyX3NhZmUKCiAgLi4uCmBgYAoKNS4g
VGhlbiBjYWxsIGNoYWlucyBhcmUgYW5hbHl6ZWQ6CgpgYGBiYXNoCnBlcmYg
cmVwb3J0IC0tc3RkaW8gLWcgZ3JhcGggLWkgLi9teV90ZXN0LnBlcmYuZGF0
YSB8IGMrK2ZpbHQKCiMgT3ZlcmhlYWQgIENvbW1hbmQgICAgICAgICAgICAg
ICAgIFNoYXJlZCBPYmplY3QgICAgICAgICAgICAgICAgICAgICAgIFN5bWJv
bAojIC4uLi4uLi4uICAuLi4uLi4uICAuLi4uLi4uLi4uLi4uLi4uLi4uLi4u
Li4uLi4uICAuLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4KIwogICAgMjku
MzAlICBteV90ZXN0ICBteV90ZXN0ICAgICAgICAgICAgICAgICAgICAgICBb
Ll0gZjIobG9uZykKICAgICAgICAgICAgfAogICAgICAgICAgICAtLS0gZjIo
bG9uZykKICAgICAgICAgICAgICAgfAogICAgICAgICAgICAgICAgLS0yOS4w
MSUtLSBwcm9jZXNzX3JlcXVlc3QobG9uZykKICAgICAgICAgICAgICAgICAg
ICAgICAgICBtYWluCiAgICAgICAgICAgICAgICAgICAgICAgICAgX19saWJj
X3N0YXJ0X21haW4KCiAgICAyOS4xNCUgIG15X3Rlc3QgIG15X3Rlc3QgICAg
ICAgICAgICAgICAgICAgICAgIFsuXSBmMShsb25nKQogICAgICAgICAgICB8
CiAgICAgICAgICAgIC0tLSBmMShsb25nKQogICAgICAgICAgICAgICB8CiAg
ICAgICAgICAgICAgIHwtLTE1LjA1JS0tIHByb2Nlc3NfcmVxdWVzdChsb25n
KQogICAgICAgICAgICAgICB8ICAgICAgICAgIG1haW4KICAgICAgICAgICAg
ICAgfCAgICAgICAgICBfX2xpYmNfc3RhcnRfbWFpbgogICAgICAgICAgICAg
ICB8CiAgICAgICAgICAgICAgICAtLTEzLjc5JS0tIGYyKGxvbmcpCiAgICAg
ICAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc19yZXF1ZXN0KGxvbmcpCiAg
ICAgICAgICAgICAgICAgICAgICAgICAgbWFpbgogICAgICAgICAgICAgICAg
ICAgICAgICAgIF9fbGliY19zdGFydF9tYWluCgogIC4uLgpgYGAKClNvIGF0
IHRoaXMgcG9pbnQgeW91IGtub3cgd2hlcmUgeW91ciBwcm9ncmFtIHNwZW5k
cyB0aW1lLgoKQWxzbyB0aGUgc2ltcGxlIHdheSB0byBkbyBhcHAgcHJvZmls
ZSBpcyB0byB1c2UgdGhlIGBwc3RhY2tgIHV0aWxpdHkgb3IgYGxzc3RhY2tg
LgoKT3RoZXIgdG9vbCBpcyBWYWxncmluZC4gU28gdGhpcyBpcyB3aGF0IEkg
cmVjb21tZW5kLiBSdW4gcHJvZ3JhbSBmaXJzdDoKCmBgYGJhc2gKdmFsZ3Jp
bmQgLS10b29sPWNhbGxncmluZCAtLWR1bXAtaW5zdHI9eWVzIC12IC0taW5z
dHItYXRzdGFydD1ubyAuL2JpbmFyeSA+IHRtcApgYGAKCk5vdyB3aGVuIGl0
IHdvcmtzIGFuZCB3ZSB3YW50IHRvIHN0YXJ0IHByb2ZpbGluZyB3ZSBzaG91
bGQgcnVuIGluIGFub3RoZXIgd2luZG93OgoKYGBgYmFzaApjYWxsZ3JpbmRf
Y29udHJvbCAtaSBvbgpgYGAKClRoaXMgdHVybnMgcHJvZmlsaW5nIG9uLiBU
byB0dXJuIGl0IG9mZiBhbmQgc3RvcCB3aG9sZSB0YXNrIHdlIG1pZ2h0IHVz
ZToKCmBgYGJhc2gKY2FsbGdyaW5kX2NvbnRyb2wgLWsKYGBgCgpOb3cgd2Ug
aGF2ZSBzb21lIGZpbGVzIG5hbWVkIGNhbGxncmluZC5vdXQuKiBpbiBjdXJy
ZW50IGRpcmVjdG9yeS4gVG8gc2VlIHByb2ZpbGluZyByZXN1bHRzIHVzZToK
CmBgYGJhc2gKa2NhY2hlZ3JpbmQgY2FsbGdyaW5kLm91dC4qCmBgYAoKSSBy
ZWNvbW1lbmQgaW4gbmV4dCB3aW5kb3cgdG8gY2xpY2sgb24gKipTZWxmKiog
Y29sdW1uIGhlYWRlciwgb3RoZXJ3aXNlIGl0IHNob3dzIHRoYXQgYG1haW4o
KWAgaXMgbW9zdCB0aW1lIGNvbnN1bWluZyB0YXNrLgoKVXNlZnVsIHJlc291
cmNlczoKCi0gW1RyYWNpbmcgcHJvY2Vzc2VzIGZvciBmdW4gYW5kIHByb2Zp
dF0oaHR0cDovL3RlY2hibG9nLnJvc2VkdS5vcmcvdHJhY2luZy1wcm9jZXNz
ZXMtZm9yLWZ1bi1hbmQtcHJvZml0Lmh0bWwpCgo8L2RldGFpbHM+Cgo8ZGV0
YWlscz4KPHN1bW1hcnk+PGI+VXNpbmcgYSBMaW51eCBzeXN0ZW0gd2l0aCBh
IGxpbWl0ZWQgbnVtYmVyIG9mIHBhY2thZ2VzIGluc3RhbGxlZCwgYW5kIHRl
bG5ldCBpcyBub3QgYXZhaWxhYmxlLiBVc2Ugc3lzZnMgdmlydHVhbCBmaWxl
c3lzdGVtIHRvIHRlc3QgY29ubmVjdGlvbiBvbiBhbGwgaW50ZXJmYWNlcyAo
d2l0aG91dCBsb29wYmFjaykuPC9iPjwvc3VtbWFyeT48YnI+CgpGb3IgZXhh
bXBsZToKCmBgYGJhc2gKIyEvdXNyL2Jpbi9iYXNoCgpmb3IgaWZhY2UgaW4g
JChscyAvc3lzL2NsYXNzL25ldC8gfCBncmVwIC12IGxvKSA7IGRvCgogIGlm
IFtbICQoY2F0IC9zeXMvY2xhc3MvbmV0LyRpZmFjZS9jYXJyaWVyKSA9IDEg
XV0gOyB0aGVuIHN0YXRlPTEgOyBmaQoKZG9uZQoKaWYgW1sgJHN0YXRlIC1u
ZSAwIF1dIDsgdGhlbiBlY2hvICJub3QgY29ubmVjdGlvbiIgPiAvZGV2L3N0
ZGVyciA7IGV4aXQgOyBmaQpgYGAKCjwvZGV0YWlscz4KCjxkZXRhaWxzPgo8
c3VtbWFyeT48Yj5Xcml0ZSB0d28gZ29sZGVuIHJ1bGVzIGZvciByZWR1Y2lu
ZyB0aGUgaW1wYWN0IG9mIGhhY2tlZCBzeXN0ZW0uPC9iPjwvc3VtbWFyeT48
YnI+CgoxKSAqKlRoZSBwcmluY2lwbGUgb2YgbGVhc3QgcHJpdmlsZWdlKioK
CllvdSBzaG91bGQgY29uZmlndXJlIHNlcnZpY2VzIHRvIHJ1biBhcyBhIHVz
ZXIgd2l0aCB0aGUgbGVhc3QgcG9zc2libGUgcmlnaHRzIG5lY2Vzc2FyeSB0
byBjb21wbGV0ZSB0aGUgc2VydmljZSdzIHRhc2tzLiBUaGlzIGNhbiBjb250
YWluIGEgaGFja2VyIGV2ZW4gYWZ0ZXIgdGhleSBicmVhayBpbiB0byBhIG1h
Y2hpbmUuCgpBcyBhbiBleGFtcGxlLCBhIGhhY2tlciBicmVha2luZyBpbnRv
IGEgc3lzdGVtIHVzaW5nIGEgemVyby1kYXkgZXhwbG9pdCBvZiB0aGUgQXBh
Y2hlIHdlYnNlcnZlciBzZXJ2aWNlIGlzIGhpZ2hseSBsaWtlbHkgdG8gYmUg
bGltaXRlZCB0byBqdXN0IHRoZSBzeXN0ZW0gbWVtb3J5IGFuZCBmaWxlIHJl
c291cmNlcyB0aGF0IGNhbiBiZSBhY2Nlc3NlZCBieSB0aGF0IHByb2Nlc3Mu
IFRoZSBoYWNrZXIgd291bGQgYmUgYWJsZSB0byBkb3dubG9hZCB5b3VyIGh0
bWwgYW5kIHBocCBzb3VyY2UgZmlsZXMsIGFuZCBwcm9iYWJseSBsb29rIGlu
dG8geW91ciBteXNxbCBkYXRhYmFzZSwgYnV0IHRoZXkgc2hvdWxkIG5vdCBi
ZSBhYmxlIHRvIGdldCByb290IG9yIGV4dGVuZCB0aGVpciBpbnRydXNpb24g
YmV5b25kIGFwYWNoZS1hY2Nlc3NpYmxlIGZpbGVzLgoKTWFueSBkZWZhdWx0
IEFwYWNoZSB3ZWJzZXJ2ZXIgaW5zdGFsbGF0aW9ucyBjcmVhdGUgdGhlICdh
cGFjaGUnIHVzZXIgYW5kIGdyb3VwIGJ5IGRlZmF1bHQgYW5kIHlvdSBjYW4g
ZWFzaWx5IGNvbmZpZ3VyZSB0aGUgbWFpbiBBcGFjaGUgY29uZmlndXJhdGlv
biBmaWxlIChgaHR0cGQuY29uZmApIHRvIHJ1biBhcGFjaGUgdXNpbmcgdGhv
c2UgZ3JvdXBzLgoKMikgKipUaGUgcHJpbmNpcGxlIG9mIHNlcGFyYXRpb24g
b2YgcHJpdmlsZWdlcyoqCgpJZiB5b3VyIHdlYiBzaXRlIG9ubHkgbmVlZHMg
cmVhZC1vbmx5IGFjY2VzcyB0byB0aGUgZGF0YWJhc2UsIHRoZW4gY3JlYXRl
IGFuIGFjY291bnQgdGhhdCBvbmx5IGhhcyByZWFkLW9ubHkgcGVybWlzc2lv
bnMsIGFuZCBvbmx5IHRvIHRoYXQgZGF0YWJhc2UuCgoqKlNFbGludXgqKiBp
cyBhIGdvb2QgY2hvaWNlIGZvciBjcmVhdGluZyBjb250ZXh0IGZvciBzZWN1
cml0eSwgYGFwcC1hcm1vcmAgaXMgYW5vdGhlciB0b29sLiAqKkJhc3RpbGxl
Kiogd2FzIGEgcHJldmlvdXMgY2hvaWNlIGZvciBoYXJkZW5pbmcuCgpSZWR1
Y2UgdGhlIGNvbnNlcXVlbmNlIG9mIGFueSBhdHRhY2ssIGJ5IHNlcGFyYXRp
bmcgdGhlIHBvd2VyIG9mIHRoZSBzZXJ2aWNlIHRoYXQgaGFzIGJlZW4gY29t
cHJvbWlzZWQgaW50byBpdCBvd24gIkJveCIuCgozKSAqKldoaXRlbGlzdCwg
ZG9uJ3QgYmxhY2tsaXN0KioKCllvdSdyZSBkZXNjcmliaW5nIGEgYmxhY2ts
aXN0IGFwcHJvYWNoLiBBIHdoaXRlbGlzdCBhcHByb2FjaCB3b3VsZCBiZSBt
dWNoIHNhZmVyLgoKQW4gZXhjbHVzaXZlIGNsdWIgd2lsbCBuZXZlciB0cnkg
dG8gbGlzdCBldmVyeW9uZSB3aG8gY2FuJ3QgY29tZSBpbjsgdGhleSB3aWxs
IGxpc3QgZXZlcnlvbmUgd2hvIGNhbiBjb21lIGluIGFuZCBleGNsdWRlIHRo
b3NlIG5vdCBvbiB0aGUgbGlzdC4KClNpbWlsYXJseSwgdHJ5aW5nIHRvIGxp
c3QgZXZlcnl0aGluZyB0aGF0IHNob3VsZG4ndCBhY2Nlc3MgYSBtYWNoaW5l
IGlzIGRvb21lZC4gUmVzdHJpY3RpbmcgYWNjZXNzIHRvIGEgc2hvcnQgbGlz
dCBvZiBwcm9ncmFtcy9JUCBhZGRyZXNzZXMvdXNlcnMgd291bGQgYmUgbW9y
ZSBlZmZlY3RpdmUuCgpPZiBjb3Vyc2UsIGxpa2UgYW55dGhpbmcgZWxzZSwg
dGhpcyBpbnZvbHZlcyBzb21lIHRyYWRlLW9mZnMuIFNwZWNpZmljYWxseSwg
YSB3aGl0ZWxpc3QgaXMgbWFzc2l2ZWx5IGluY29udmVuaWVudCBhbmQgcmVx
dWlyZXMgY29uc3RhbnQgbWFpbnRlbmFuY2UuCgpUbyBnbyBldmVuIGZ1cnRo
ZXIgaW4gdGhlIHRyYWRlb2ZmLCB5b3UgY2FuIGdldCBncmVhdCBzZWN1cml0
eSBieSBkaXNjb25uZWN0aW5nIHRoZSBtYWNoaW5lIGZyb20gdGhlIG5ldHdv
cmsuCgoqKkFsc28gaW50ZXJlc3RpbmcgYXJlKio6CgpVc2UgdGhlIHRvb2xz
IGF2YWlsYWJsZS4gSXQncyBoaWdobHkgdW5saWtlbHkgdGhhdCB5b3UgY2Fu
IGRvIGFzIHdlbGwgYXMgdGhlIGd1eXMgd2hvIGFyZSBzZWN1cml0eSBleHBl
cnRzLCBzbyB1c2UgdGhlaXIgdGFsZW50cyB0byBwcm90ZWN0IHlvdXJzZWxm
LgoKLSBwdWJsaWMga2V5IGVuY3J5cHRpb24gcHJvdmlkZXMgZXhjZWxsZW50
IHNlY3VyaXR5Ci0gZW5mb3JjZSBwYXNzd29yZCBjb21wbGV4aXR5Ci0gdW5k
ZXJzdGFuZCB3aHkgeW91IGFyZSBtYWtpbmcgZXhjZXB0aW9ucyB0byB0aGUg
cnVsZXMgYWJvdmUgLSByZXZpZXcgeW91ciBleGNlcHRpb25zIHJlZ3VsYXJs
eQotIGhvbGQgc29tZW9uZSB0byBhY2NvdW50IGZvciBmYWlsdXJlLCBpdCBr
ZWVwcyB5b3Ugb24geW91ciB0b2VzCgpVc2VmdWwgcmVzb3VyY2VzOgoKLSBb
SG93IHRvIHByZXZlbnQgemVybyBkYXkgYXR0YWNrcyAob3JpZ2luYWwpXSho
dHRwczovL3NlcnZlcmZhdWx0LmNvbS9xdWVzdGlvbnMvMzkxMzcwL2hvdy10
by1wcmV2ZW50LXplcm8tZGF5LWF0dGFja3MpCgo8L2RldGFpbHM+Cgo8ZGV0
YWlscz4KPHN1bW1hcnk+PGI+WW91J3JlIG9uIGEgc2VjdXJpdHkgY29uZmVy
ZW5jZS4gTWVtYmVycyBkZWJhdGluZyBhYm91dCBwdXR0aW5nIHVwIHRoZSBP
cGVuQlNEIGZpcmV3YWxsIG9uIHRoZSBjb3JlIG9mIHRoZSBuZXR3b3JrLiBH
byB0byB0aGUgcG9kaXVtIGFuZCBleHByZXNzIHlvdXIgb3BpbmlvbiBhYm91
dCB0aGlzIHNvbHV0aW9uLiBXaGF0IGFyZSB0aGUgcHJvcy9jb25zIGFuZCB3
aHk/ICoqKjwvYj48L3N1bW1hcnk+PGJyPgoKVG8gYmUgY29tcGxldGVkLgoK
PC9kZXRhaWxzPgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPklzIHRoZXJlIGEg
d2F5IHRvIGFsbG93IG11bHRpcGxlIGNyb3NzLWRvbWFpbnMgdXNpbmcgdGhl
IEFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbiBoZWFkZXIgaW4gTmdpbng/
PC9iPjwvc3VtbWFyeT48YnI+CgpUbyBtYXRjaCBhIGxpc3Qgb2YgZG9tYWlu
IGFuZCBzdWJkb21haW4gdGhpcyByZWdleCBtYWtlIGl0IGVhc2UgdG8gd29y
ayB3aXRoIGZvbnRzOgoKYGBgYmFzaApsb2NhdGlvbiB+KiBcLig/OnR0Znx0
dGN8b3RmfGVvdHx3b2ZmfHdvZmYyKSQgewogICBpZiAoICRodHRwX29yaWdp
biB+KiAoaHR0cHM/Oi8vKC4rXC4pPyhkb21haW4xfGRvbWFpbjJ8ZG9tYWlu
MylcLig/Om1lfGNvfGNvbSkkKSApIHsKICAgICAgYWRkX2hlYWRlciAiQWNj
ZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luIiAiJGh0dHBfb3JpZ2luIjsKICAg
fQp9CmBgYAoKTW9yZSBzbGlnaHRseSBjb25maWd1cmF0aW9uOgoKYGBgYmFz
aApsb2NhdGlvbiAvIHsKCiAgICBpZiAoJGh0dHBfb3JpZ2luIH4qICheaHR0
cHM/Oi8vKFteL10rXC4pKihkb21haW5vbmV8ZG9tYWludHdvKVwuY29tJCkp
IHsKICAgICAgICBzZXQgJGNvcnMgInRydWUiOwogICAgfQoKICAgICMgTmdp
bnggZG9lc24ndCBzdXBwb3J0IG5lc3RlZCBJZiBzdGF0ZW1lbnRzLiBUaGlz
IGlzIHdoZXJlIHRoaW5ncyBnZXQgc2xpZ2h0bHkgbmFzdHkuCiAgICAjIERl
dGVybWluZSB0aGUgSFRUUCByZXF1ZXN0IG1ldGhvZCB1c2VkCiAgICBpZiAo
JHJlcXVlc3RfbWV0aG9kID0gJ0dFVCcpIHsKICAgICAgICBzZXQgJGNvcnMg
IiR7Y29yc31nZXQiOwogICAgfQogICAgaWYgKCRyZXF1ZXN0X21ldGhvZCA9
ICdQT1NUJykgewogICAgICAgIHNldCAkY29ycyAiJHtjb3JzfXBvc3QiOwog
ICAgfQoKICAgIGlmICgkY29ycyA9ICJ0cnVlIikgewogICAgICAgICMgQ2F0
Y2ggYWxsIGluIGNhc2UgdGhlcmUncyBhIHJlcXVlc3QgbWV0aG9kIHdlJ3Jl
IG5vdCBkZWFsaW5nIHdpdGggcHJvcGVybHkKICAgICAgICBhZGRfaGVhZGVy
ICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nICIkaHR0cF9vcmlnaW4i
OwogICAgfQoKICAgIGlmICgkY29ycyA9ICJ0cnVlZ2V0IikgewogICAgICAg
IGFkZF9oZWFkZXIgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbicgIiRo
dHRwX29yaWdpbiI7CiAgICAgICAgYWRkX2hlYWRlciAnQWNjZXNzLUNvbnRy
b2wtQWxsb3ctQ3JlZGVudGlhbHMnICd0cnVlJzsKICAgICAgICBhZGRfaGVh
ZGVyICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzJyAnR0VULCBQT1NU
LCBPUFRJT05TJzsKICAgICAgICBhZGRfaGVhZGVyICdBY2Nlc3MtQ29udHJv
bC1BbGxvdy1IZWFkZXJzJyAnRE5ULFgtQ3VzdG9tSGVhZGVyLEtlZXAtQWxp
dmUsVXNlci1BZ2VudCxYLVJlcXVlc3RlZC1XaXRoLElmLU1vZGlmaWVkLVNp
bmNlLENhY2hlLUNvbnRyb2wsQ29udGVudC1UeXBlJzsKICAgIH0KCiAgICBp
ZiAoJGNvcnMgPSAidHJ1ZXBvc3QiKSB7CiAgICAgICAgYWRkX2hlYWRlciAn
QWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJyAiJGh0dHBfb3JpZ2luIjsK
ICAgICAgICBhZGRfaGVhZGVyICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVk
ZW50aWFscycgJ3RydWUnOwogICAgICAgIGFkZF9oZWFkZXIgJ0FjY2Vzcy1D
b250cm9sLUFsbG93LU1ldGhvZHMnICdHRVQsIFBPU1QsIE9QVElPTlMnOwog
ICAgICAgIGFkZF9oZWFkZXIgJ0FjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRl
cnMnICdETlQsWC1DdXN0b21IZWFkZXIsS2VlcC1BbGl2ZSxVc2VyLUFnZW50
LFgtUmVxdWVzdGVkLVdpdGgsSWYtTW9kaWZpZWQtU2luY2UsQ2FjaGUtQ29u
dHJvbCxDb250ZW50LVR5cGUnOwogICAgfQoKfQpgYGAKCjwvZGV0YWlscz4K
CjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5FeHBsYWluIDxjb2RlPjooKXsgOnw6
JiB9Ozo8L2NvZGU+IGFuZCBob3cgc3RvcCB0aGlzIGNvZGUgaWYgeW91IGFy
ZSBhbHJlYWR5IGxvZ2dlZCBpbnRvIGEgc3lzdGVtPzwvYj48L3N1bW1hcnk+
PGJyPgoKSXQncyBhICoqZm9yayBib21iKiouCgotIGA6KClgIC0gdGhpcyBk
ZWZpbmVzIHRoZSBmdW5jdGlvbi4gYDpgIGlzIHRoZSBmdW5jdGlvbiBuYW1l
IGFuZCB0aGUgZW1wdHkgcGFyZW50aGVzaXMgc2hvd3MgdGhhdCBpdCB3aWxs
IG5vdCBhY2NlcHQgYW55IGFyZ3VtZW50cwotIGB7IH1gIC0gdGhlc2UgY2hh
cmFjdGVycyBzaG93cyB0aGUgYmVnaW5uaW5nIGFuZCBlbmQgb2YgZnVuY3Rp
b24gZGVmaW5pdGlvbgotIGA6fDpgIC0gaXQgbG9hZHMgYSBjb3B5IG9mIHRo
ZSBmdW5jdGlvbiBgOmAgaW50byBtZW1vcnkgYW5kIHBpcGUgaXRzIG91dHB1
dCB0byBhbm90aGVyIGNvcHkgb2YgdGhlIGA6YCBmdW5jdGlvbiwgd2hpY2gg
aGFzIHRvIGJlIGxvYWRlZCBpbnRvIG1lbW9yeQotIGAmYCAtIHRoaXMgd2ls
bCBtYWtlIHRoZSBwcm9jZXNzIGFzIGEgYmFja2dyb3VuZCBwcm9jZXNzLCBz
byB0aGF0IHRoZSBjaGlsZCBwcm9jZXNzZXMgd2lsbCBub3QgZ2V0IGtpbGxl
ZCBldmVuIHRob3VnaCB0aGUgcGFyZW50IGdldHMgYXV0by1raWxsZWQKLSBg
OmAgLSBmaW5hbCBgOmAgd2lsbCBleGVjdXRlIHRoZSBmdW5jdGlvbiBhZ2Fp
biBhbmQgaGVuY2UgdGhlIGNoYWluIHJlYWN0aW9uIGJlZ2lucwoKVGhlIGJl
c3Qgd2F5IHRvIHByb3RlY3QgYSBtdWx0aS11c2VyIHN5c3RlbSBpcyB0byB1
c2UgKipQQU0qKiB0byBsaW1pdCB0aGUgbnVtYmVyIG9mIHByb2Nlc3NlcyBh
IHVzZXIgY2FuIHVzZS4gV2Uga25vdyB0aGUgYmlnZ2VzdCBwcm9ibGVtIHdp
dGggYSBmb3JrIGJvbWIgaXMgdGhlIGZhY3QgaXQgdGFrZXMgdXAgc28gbWFu
eSBwcm9jZXNzZXMuCgpTbyB3ZSBoYXZlIHR3byB3YXlzIG9mIGF0dGVtcHRp
bmcgdG8gZml4IHRoaXMsIGlmIHlvdSBhcmUgYWxyZWFkeSBsb2dnZWQgaW50
byB0aGUgc3lzdGVtOgotIGV4ZWN1dGUgYSAqKlNJR1NUT1AqKiBjb21tYW5k
IHRvIHN0b3AgdGhlIHByb2Nlc3M6IGBraWxsYWxsIC1TVE9QIC11IHVzZXIx
YAotIGlmIHlvdSBjYW4ndCBydW4gYXQgdGhlIGNvbW1hbmQgbGluZSB5b3Ug
d2lsbCBoYXZlIHRvIHVzZSBgZXhlY2AgdG8gZm9yY2UgaXQgdG8gcnVuIChk
dWUgdG8gcHJvY2Vzc2VzIGFsbCBiZWluZyB1c2VkKTogYGV4ZWMga2lsbGFs
bCAtU1RPUCAtdSB1c2VyMWAKCldpdGggZm9yayBib21icyB5b3VyIGJlc3Qg
bWV0aG9kIGZvciB0aGlzIGlzIHByZXZlbnRpbmcgZnJvbSBiZWluZyB0byBi
aWcgb2YgYW4gaXNzdWUgaW4gdGhlIGZpcnN0IHBsYWNlLgoKPC9kZXRhaWxz
PgoKPGRldGFpbHM+CjxzdW1tYXJ5PjxiPkhvdyB0byByZWNvdmVyIGRlbGV0
ZWQgZmlsZSBoZWxkIG9wZW4gZS5nLiBieSBBcGFjaGU/PC9iPjwvc3VtbWFy
eT48YnI+CgpJZiBhIGZpbGUgaGFzIGJlZW4gZGVsZXRlZCBidXQgaXMgc3Rp
bGwgb3BlbiwgdGhhdCBtZWFucyB0aGUgZmlsZSBzdGlsbCBleGlzdHMgaW4g
dGhlIGZpbGVzeXN0ZW0gKGl0IGhhcyBhbiBpbm9kZSkgYnV0IGhhcyBhIGhh
cmQgbGluayBjb3VudCBvZiAwLiBTaW5jZSB0aGVyZSBpcyBubyBsaW5rIHRv
IHRoZSBmaWxlLCB5b3UgY2Fubm90IG9wZW4gaXQgYnkgbmFtZS4gVGhlcmUg
aXMgbm8gZmFjaWxpdHkgdG8gb3BlbiBhIGZpbGUgYnkgaW5vZGUgZWl0aGVy
LgoKTGludXggZXhwb3NlcyBvcGVuIGZpbGVzIHRocm91Z2ggc3BlY2lhbCBz
eW1ib2xpYyBsaW5rcyB1bmRlciBgL3Byb2NgLiBUaGVzZSBsaW5rcyBhcmUg
Y2FsbGVkIGAvcHJvYy8xMjM0NS9mZC80MmAgd2hlcmUgMTIzNDUgaXMgdGhl
ICoqUElEKiogb2YgYSBwcm9jZXNzIGFuZCA0MiBpcyB0aGUgbnVtYmVyIG9m
IGEgZmlsZSBkZXNjcmlwdG9yIGluIHRoYXQgcHJvY2Vzcy4gQSBwcm9ncmFt
IHJ1bm5pbmcgYXMgdGhlIHNhbWUgdXNlciBhcyB0aGF0IHByb2Nlc3MgY2Fu
IGFjY2VzcyB0aGUgZmlsZSAodGhlIHJlYWQvd3JpdGUvZXhlY3V0ZSBwZXJt
aXNzaW9ucyBhcmUgdGhlIHNhbWUgeW91IGhhZCBhcyB3aGVuIHRoZSBmaWxl
IHdhcyBkZWxldGVkKS4KClRoZSBuYW1lIHVuZGVyIHdoaWNoIHRoZSBmaWxl
IHdhcyBvcGVuZWQgaXMgc3RpbGwgdmlzaWJsZSBpbiB0aGUgdGFyZ2V0IG9m
IHRoZSBzeW1ib2xpYyBsaW5rOiBpZiB0aGUgZmlsZSB3YXMgYC92YXIvbG9n
L2FwYWNoZS9mb28ubG9nYCwgdGhlbiB0aGUgdGFyZ2V0IG9mIHRoZSBsaW5r
IGlzIGAvdmFyL2xvZy9hcGFjaGUvZm9vLmxvZyAoZGVsZXRlZClgLgoKVGh1
cyB5b3UgY2FuIHJlY292ZXIgdGhlIGNvbnRlbnQgb2YgYW4gb3BlbiBkZWxl
dGVkIGZpbGUgZ2l2ZW4gdGhlICoqUElEKiogb2YgYSBwcm9jZXNzIHRoYXQg
aGFzIGl0IG9wZW4gYW5kIHRoZSBkZXNjcmlwdG9yIHRoYXQgaXQncyBvcGVu
ZWQgb24gbGlrZSB0aGlzOgoKYGBgYmFzaApyZWNvdmVyX29wZW5fZGVsZXRl
ZF9maWxlICgpIHsKICBvbGRfbmFtZT0kKHJlYWRsaW5rICIkMSIpCiAgY2Fz
ZSAiJG9sZF9uYW1lIiBpbgogICAgKicgKGRlbGV0ZWQpJykKICAgICAgb2xk
X25hbWU9JHtvbGRfbmFtZSUnIChkZWxldGVkKSd9CiAgICAgIGlmIFsgLWUg
IiRvbGRfbmFtZSIgXTsgdGhlbgogICAgICAgIG5ld19uYW1lPSQoVE1QRElS
PSR7b2xkX25hbWUlLyp9IG1rdGVtcCkKICAgICAgICBlY2hvICIkb2xkbmFt
ZSBoYXMgYmVlbiByZXBsYWNlZCwgcmVjb3ZlcmluZyBjb250ZW50IHRvICRu
ZXdfbmFtZSIKICAgICAgZWxzZQogICAgICAgIG5ld19uYW1lPSIkb2xkX25h
bWUiCiAgICAgIGZpCiAgICAgIGNhdCA8IiQxIiA+IiRuZXdfbmFtZSI7Owog
ICAgKikgZWNobyAiRmlsZSBpcyBub3QgZGVsZXRlZCwgZG9pbmcgbm90aGlu
ZyI7OwogIGVzYWMKfQpyZWNvdmVyX29wZW5fZGVsZXRlZF9maWxlICIvcHJv
Yy8kcGlkL2ZkLyRmZCIKYGBgCgpJZiB5b3Ugb25seSBrbm93IHRoZSBwcm9j
ZXNzICoqSUQqKiBidXQgbm90IHRoZSBkZXNjcmlwdG9yLCB5b3UgY2FuIHJl
Y292ZXIgYWxsIGZpbGVzIHdpdGg6CgpgYGBiYXNoCmZvciB4IGluIC9wcm9j
LyRwaWQvZmQvKiA7IGRvCiAgcmVjb3Zlcl9vcGVuX2RlbGV0ZWRfZmlsZSAi
JHgiCmRvbmUKYGBgCgpJZiB5b3UgZG9uJ3Qga25vdyB0aGUgcHJvY2VzcyAq
KklEKiogZWl0aGVyLCB5b3UgY2FuIHNlYXJjaCBhbW9uZyBhbGwgcHJvY2Vz
c2VzOgoKYGBgYmFzaApmb3IgeCBpbiAvcHJvYy9bMS05XSovZmQvKiA7IGRv
CiAgY2FzZSAkKHJlYWRsaW5rICIkeCIpIGluCiAgICAvdmFyL2xvZy9hcGFj
aGUvKikgcmVjb3Zlcl9vcGVuX2RlbGV0ZWRfZmlsZSAiJHgiOzsKICBlc2Fj
CmRvbmUKYGBgCgpZb3UgY2FuIGFsc28gb2J0YWluIHRoaXMgbGlzdCBieSBw
YXJzaW5nIHRoZSBvdXRwdXQgb2YgYGxzb2ZgLCBidXQgaXQgaXNuJ3Qgc2lt
cGxlciBub3IgbW9yZSByZWxpYWJsZSBub3IgbW9yZSBwb3J0YWJsZSAodGhp
cyBpcyBMaW51eC1zcGVjaWZpYyBhbnlob3cpLgoKPC9kZXRhaWxzPgoKPGRl
dGFpbHM+CjxzdW1tYXJ5PjxiPlRoZSB0ZWFtIG9mIGFkbWlucyBuZWVkcyB5
b3VyIHN1cHBvcnQuIFlvdSBtdXN0IHJlbW90ZWx5IHJlaW5zdGFsbCB0aGUg
c3lzdGVtIG9uIG9uZSBvZiB0aGUgbWFpbiBzZXJ2ZXJzLiBUaGVyZSBpcyBu
byBhY2Nlc3MgdG8gdGhlIG1hbmFnZW1lbnQgY29uc29sZSAoZS5nLiBpRFJB
QykuIEhvdyB0byBpbnN0YWxsIExpbnV4IG9uIGRpc2ssIGZyb20gYW5kIHdo
ZXJlIG90aGVyIExpbnV4IGV4aXN0IGFuZCBydW5uaW5nPzwvYj48L3N1bW1h
cnk+PGJyPgoKSXQgaXMgcG9zc2libGUgdGhhdCB0aGUgcXVlc3Rpb24gc2hv
dWxkIGJlOiAiX1N5c3RlbSBpbnN0YWxsYXRpb24gZnJvbSB0aGUgbGV2ZWwg
YW5kIGluIHBsYWNlIG9mIGFscmVhZHkgb3RoZXIgc3lzdGVtIHdvcmtpbmdf
Ii4KCk9uIHRoZSBleGFtcGxlIG9mIHRoZSBEZWJpYW4gR05VL0xpbnV4IGRp
c3RyaWJ1dGlvbi4KCjEuIENyZWF0aW5nIGEgd29ya2luZyBkaXJlY3Rvcnkg
YW5kIGRvd25sb2FkaW5nIHRoZSBzeXN0ZW0gdXNpbmcgdGhlIGRlYm9vdHN0
cmFwIHRvb2wuCgpgYGBiYXNoCl93b3JraW5nX2RpcmVjdG9yeT0iL21udC9z
eXN0ZW0iCm1rZGlyICRfd29ya2luZ19kaXJlY3RvcnkKZGVib290c3RyYXAg
LS12ZXJib3NlIC0tYXJjaCBhbWQ2NCB7d2hlZXp5fGplc3NpZX0gLiBodHRw
Oi8vZnRwLmVuLmRlYmlhbi5vcmcvZGViaWFuCmBgYAoKMi4gTW91bnRpbmcg
c3ViLXN5c3RlbXM6IGBwcm9jYCwgYHN5c2AsIGBkZXZgIGFuZCBgZGV2L3B0
c2AuCgpgYGBiYXNoCmZvciBpIGluIHByb2Mgc3lzIGRldiBkZXYvcHRzIDsg
ZG8gbW91bnQgLW8gYmluZCAkaSAkX3dvcmtpbmdfZGlyZWN0b3J5LyRpIDsg
ZG9uZQpgYGAKCjMuIENvcHkgc3lzdGVtIGJhY2t1cCBmb3IgcmVzdG9yZS4K
CmBgYGJhc2gKY3Agc3lzdGVtX2JhY2t1cF8yMjAxMjAxNS50Z3ogJF93b3Jr
aW5nX2RpcmVjdG9yeS9tbnQKYGBgCgpIb3dldmVyLCBpdCBpcyBiZXR0ZXIg
bm90IHRvIHdhc3RlIHNwYWNlIGFuZCBkbyBpdCBpbiBhIGRpZmZlcmVudCB3
YXkgKGFzc3VtaW5nIHRoYXQgdGhlIGNvcHkgaXMgaW4gYC9tbnQvYmFja3Vw
YCk6CgpgYGBiYXNoCl9iYWNrdXBfZGlyZWN0b3J5PSIke193b3JraW5nX2Rp
cmVjdG9yeX0vbW50L2JhY2t1cCIKbWtkaXIgJF9iYWNrdXBfZGlyZWN0b3J5
ICYmIG1vdW50IC0tYmluZCAvbW50L2JhY2t1cCAkX2JhY2t1cF9kaXJlY3Rv
cnkKYGBgCgo0LiBDaHJvb3QgdG8gIm5ldyIgc3lzdGVtLgoKYGBgYmFzaApj
aHJvb3QgJF93b3JraW5nX2RpcmVjdG9yeSAvYmluL2Jhc2gKYGBgCgo1LiBV
cGRhdGluZyBpbmZvcm1hdGlvbiBhYm91dCBtb3VudGVkIGRldmljZXMuCgpg
YGBiYXNoCmdyZXAgLXYgcm9vdGZzIC9wcm9jL21vdW50cyA+IC9ldGMvbXRh
YgpgYGAKCjYuIEluIHRoZSAibmV3IiBzeXN0ZW0sIHRoZSBuZXh0IHRoaW5n
IHRvIGRvIGlzIG1vdW50IHRoZSBkaXNrIG9uIHdoaWNoIHRoZSAib2xkIiBz
eXN0ZW0gaXMgbG9jYXRlZCAoZS5nLiBgL2Rldi9zZGExYCkuCgpgYGBiYXNo
Cl93b3JraW5nX2RpcmVjdG9yeT0iL21udC9vbGRfc3lzdGVtIgpfYmFja3Vw
X2RpcmVjdG9yeT0iL21udC9iYWNrdXAiCm1rZGlyICRfd29ya2luZ19kaXJl
Y3RvcnkgJiYgbW91bnQgL2Rldi9zZGExICRfd29ya2luZ19kaXJlY3RvcnkK
YGBgCgo3LiBSZW1vdmUgYWxsIGZpbGVzIG9mIHRoZSBvbGQgc3lzdGVtLgoK
YGBgYmFzaApmb3IgaSBpbiAkKGxzIHwgYXdrICchKC9wcm9jLyB8fCAvZGV2
LyB8fCAvc3lzLyB8fCAvbW50LyknKSA7IGRvIHJtIC1mciAkaSA7IGRvbmUK
YGBgCgo4LiBUaGUgbmV4dCBzdGVwIGlzIHRvIHJlc3RvcmUgdGhlIHN5c3Rl
bSBmcm9tIGEgYmFja3VwLgoKYGBgYmFzaAp0YXIgeHp2ZnAgJF9iYWNrdXBf
ZGlyZWN0b3J5L3N5c3RlbV9iYWNrdXBfMjIwMTIwMTUudGd6IC1DICRfd29y
a2luZ19kaXJlY3RvcnkKYGBgCgo5LiBBbmQgbW91bnQgYHByb2NgLCBgc3lz
YCwgYGRldmAgYW5kIGBkZXYvcHRzYCBpbiBhIG5ldyB3b3JraW5nIGRpcmVj
dG9yeS4KCmBgYGJhc2gKZm9yIGkgaW4gcHJvYyBzeXMgZGV2IGRldi9wdHMg
OyBkbyBtb3VudCAtbyBiaW5kICRpICRfd29ya2luZ19kaXJlY3RvcnkvJGkg
OyBkb25lCmBgYAoKMTAuIEluc3RhbGwgYW5kIHVwZGF0ZSBncnViIGNvbmZp
Z3VyYXRpb24uCgpgYGBiYXNoCmNocm9vdCAkX3dvcmtpbmdfZGlyZWN0b3J5
IC9iaW4vYmFzaCAtYyAiZ3J1Yi1pbnN0YWxsIC0tbm8tZmxvcHB5IC0tcm9v
dC1kaXJlY3Rvcnk9LyAvZGV2L3NkYSIKY2hyb290ICRfd29ya2luZ19kaXJl
Y3RvcnkgL2Jpbi9iYXNoIC1jICJ1cGRhdGUtZ3J1YiIKYGBgCgoxMS4gVW5t
b3VudCBgcHJvY2AsIGBzeXNgLCBgZGV2YCBhbmQgYGRldi9wdHNgIGZpbGVz
eXN0ZW1zLgoKYGBgYmFzaApjZApncmVwICRfd29ya2luZ19kaXJlY3Rvcnkg
L3Byb2MvbW91bnRzIHwgY3V0IC1mMiAtZCAiICIgfCBzb3J0IC1yIHwgeGFy
Z3MgdW1vdW50IC1uCmBgYAoKTm9uZSBvZiB0aGUgYXZhaWxhYmxlIGNvbW1h
bmRzLCBpLmUuIGBoYWx0YCwgYHNodXRkb3duYCBvciBgcmVib290YCwgd2ls
bCB3b3JrLiBZb3UgbmVlZCB0byByZWxvYWQgdGhlIHN5c3RlbSBjb25maWd1
cmF0aW9uIC0gdG8gZG8gdGhpcywgdXNlIHRoZSAqKmtlcm5lbCBkZWJ1Z2dl
cioqICh3aXRob3V0IHRoZSAnKipiKionIG9wdGlvbik6CgpgYGBiYXNoCmVj
aG8gMSA+IC9wcm9jL3N5cy9rZXJuZWwvc3lzcnEKZWNobyByZWlzdSA+IC9w
cm9jL3N5c3JxLXRyaWdnZXIKYGBgCgpPZiBjb3Vyc2UsIGl0IGlzIHJlY29t
bWVuZGVkIHRvIGZ1bGx5IHJlc3RhcnQgdGhlIG1hY2hpbmUgaW4gb3JkZXIg
dG8gY29tcGxldGVseSBsb2FkIHRoZSBjdXJyZW50IHN5c3RlbS4gVG8gZG8g
dGhpczoKCmBgYGJhc2gKc3luYyA7IHJlYm9vdCAtZgpgYGAKCjwvZGV0YWls
cz4KCjxkZXRhaWxzPgo8c3VtbWFyeT48Yj5Sc3luYyB0cmlnZ2VyZWQgTGlu
dXggT09NIGtpbGxlciBvbiBhIHNpbmdsZSA1MCBHQiBmaWxlLiBIb3cgZG9l
cyB0aGUgT09NIGtpbGxlciBkZWNpZGUgd2hpY2ggcHJvY2VzcyB0byBraWxs
IGZpcnN0PyBIb3cgdG8gY29udHJvbCB0aGlzPzwvYj48L3N1bW1hcnk+PGJy
PgoKTWFqb3IgZGlzdHJpYnV0aW9uIGtlcm5lbHMgc2V0IHRoZSBkZWZhdWx0
IHZhbHVlIG9mIGAvcHJvYy9zeXMvdm0vb3ZlcmNvbW1pdF9tZW1vcnlgIHRv
IHplcm8sIHdoaWNoIG1lYW5zIHRoYXQgcHJvY2Vzc2VzIGNhbiByZXF1ZXN0
IG1vcmUgbWVtb3J5IHRoYW4gaXMgY3VycmVudGx5IGZyZWUgaW4gdGhlIHN5
c3RlbS4KCklmIG1lbW9yeSBpcyBleGhhdXN0aXZlbHkgdXNlZCB1cCBieSBw
cm9jZXNzZXMsIHRvIHRoZSBleHRlbnQgd2hpY2ggY2FuIHBvc3NpYmx5IHRo
cmVhdGVuIHRoZSBzdGFiaWxpdHkgb2YgdGhlIHN5c3RlbSwgdGhlbiB0aGUg
KipPT00ga2lsbGVyKiogY29tZXMgaW50byB0aGUgcGljdHVyZS4KCk5PVEU6
IEl0IGlzIHRoZSB0YXNrIG9mIHRoZSAqKk9PTSBLaWxsZXIqKiB0byBjb250
aW51ZSBraWxsaW5nIHByb2Nlc3NlcyB1bnRpbCBlbm91Z2ggbWVtb3J5IGlz
IGZyZWVkIGZvciB0aGUgc21vb3RoIGZ1bmN0aW9uaW5nIG9mIHRoZSByZXN0
IG9mIHRoZSBwcm9jZXNzIHRoYXQgdGhlIEtlcm5lbCBpcyBhdHRlbXB0aW5n
IHRvIHJ1bi4KClRoZSAqKk9PTSBLaWxsZXIqKiBoYXMgdG8gc2VsZWN0IHRo
ZSBiZXN0IHByb2Nlc3MoZXMpIHRvIGtpbGwuIEJlc3QgaGVyZSByZWZlcnMg
dG8gdGhhdCBwcm9jZXNzIHdoaWNoIHdpbGwgZnJlZSB1cCB0aGUgbWF4aW11
bSBtZW1vcnkgdXBvbiBraWxsaW5nIGFuZCBpcyBhbHNvIHRoZSBsZWFzdCBp
bXBvcnRhbnQgdG8gdGhlIHN5c3RlbS4KClRoZSBwcmltYXJ5IGdvYWwgaXMg
dG8ga2lsbCB0aGUgbGVhc3QgbnVtYmVyIG9mIHByb2Nlc3NlcyB0aGF0IG1p
bmltaXplcyB0aGUgZGFtYWdlIGRvbmUgYW5kIGF0IHRoZSBzYW1lIHRpbWUg
bWF4aW1pemluZyB0aGUgYW1vdW50IG9mIG1lbW9yeSBmcmVlZC4KClRvIGZh
Y2lsaXRhdGUgdGhpcywgdGhlIGtlcm5lbCBtYWludGFpbnMgYW4gYG9vbV9z
Y29yZWAgZm9yIGVhY2ggb2YgdGhlIHByb2Nlc3Nlcy4gWW91IGNhbiBzZWUg
dGhlIG9vbV9zY29yZSBvZiBlYWNoIG9mIHRoZSBwcm9jZXNzZXMgaW4gdGhl
IGAvcHJvY2AgZmlsZXN5c3RlbSB1bmRlciB0aGUgcGlkIGRpcmVjdG9yeS4K
CiAgPiBXaGVuIGFuYWx5emluZyBPT00ga2lsbGVyIGxvZ3MsIGl0IGlzIGlt
cG9ydGFudCB0byBsb29rIGF0IHdoYXQgdHJpZ2dlcmVkIGl0LgoKYGBgYmFz
aApjYXQgL3Byb2MvMTAyOTIvb29tX3Njb3JlCmBgYAoKVGhlIGhpZ2hlciB0
aGUgdmFsdWUgb2YgYG9vbV9zY29yZWAgb2YgYW55IHByb2Nlc3MsIHRoZSBo
aWdoZXIgaXMgaXRzIGxpa2VsaWhvb2Qgb2YgZ2V0dGluZyBraWxsZWQgYnkg
dGhlICoqT09NIEtpbGxlcioqIGluIGFuIG91dC1vZi1tZW1vcnkgc2l0dWF0
aW9uLgoKSWYgeW91IHdhbnQgdG8gY3JlYXRlIGEgc3BlY2lhbCBjb250cm9s
IGdyb3VwIGNvbnRhaW5pbmcgdGhlIGxpc3Qgb2YgcHJvY2Vzc2VzIHdoaWNo
IHNob3VsZCBiZSB0aGUgZmlyc3QgdG8gcmVjZWl2ZSB0aGUgKipPT00ga2ls
bGVyJ3MqKiBhdHRlbnRpb24sIGNyZWF0ZSBhIGRpcmVjdG9yeSB1bmRlciBg
L21udC9vb20ta2lsbGVyYCB0byByZXByZXNlbnQgaXQ6CgpgYGBiYXNoCm1r
ZGlyIGxhbWJzCmBgYAoKU2V0IGBvb20ucHJpb3JpdHlgIHRvIGEgdmFsdWUg
aGlnaCBlbm91Z2g6CgpgYGBiYXNoCmVjaG8gMjU2ID4gL21udC9vb20ta2ls
bGVyL2xhbWJzL29vbS5wcmlvcml0eQpgYGAKCmBvb20ucHJpb3JpdHlgIGlz
IGEgNjQtYml0IHVuc2lnbmVkIGludGVnZXIsIGFuZCBjYW4gaGF2ZSBhIG1h
eGltdW0gdmFsdWUgYW4gdW5zaWduZWQgNjQtYml0IG51bWJlciBjYW4gaG9s
ZC4gV2hpbGUgc2Nhbm5pbmcgZm9yIHRoZSBwcm9jZXNzIHRvIGJlIGtpbGxl
ZCwgdGhlICoqT09NLWtpbGxlcioqIHNlbGVjdHMgYSBwcm9jZXNzIGZyb20g
dGhlIGxpc3Qgb2YgdGFza3Mgd2l0aCB0aGUgaGlnaGVzdCBgb29tLnByaW9y
aXR5YCB2YWx1ZS4KCkFkZCB0aGUgUElEIG9mIHRoZSBwcm9jZXNzIHRvIGJl
IGFkZGVkIHRvIHRoZSBsaXN0IG9mIHRhc2tzOgoKYGBgYmFzaAplY2hvIDxw
aWQ+ID4gL21udC9vb20ta2lsbGVyL2xhbWJzL3Rhc2tzCmBgYAoKVG8gY3Jl
YXRlIGEgbGlzdCBvZiBwcm9jZXNzZXMsIHdoaWNoIHdpbGwgbm90IGJlIGtp
bGxlZCBieSB0aGUgKipPT00ta2lsbGVyKiosIG1ha2UgYSBkaXJlY3Rvcnkg
dG8gY29udGFpbiB0aGUgcHJvY2Vzc2VzOgoKYGBgYmFzaApta2RpciBpbnZp
bmNpYmxlcwpgYGAKClNldHRpbmcgYG9vbS5wcmlvcml0eWAgdG8gemVybyBt
YWtlcyBhbGwgdGhlIHByb2Nlc3MgaW4gdGhpcyBjZ3JvdXAgdG8gYmUgZXhj
bHVkZWQgZnJvbSB0aGUgbGlzdCBvZiB0YXJnZXQgcHJvY2Vzc2VzIHRvIGJl
IGtpbGxlZC4KCmBgYGJhc2gKZWNobyAwID4gL21udC9vb20ta2lsbGVyL2lu
dmluY2libGVzL29vbS5wcmlvcml0eQpgYGAKClRvIGFkZCBtb3JlIHByb2Nl
c3NlcyB0byB0aGlzIGdyb3VwLCBhZGQgdGhlIHBpZCBvZiB0aGUgdGFzayB0
byB0aGUgbGlzdCBvZiB0YXNrcyBpbiB0aGUgaW52aW5jaWJsZSBncm91cDoK
CmBgYGJhc2gKZWNobyA8cGlkPiA+IC9tbnQvb29tLWtpbGxlci9pbnZpbmNp
Ymxlcy90YXNrcwpgYGAKClVzZWZ1bCByZXNvdXJjZXM6CgotIFtSc3luYyB0
cmlnZ2VyZWQgTGludXggT09NIGtpbGxlciBvbiBhIHNpbmdsZSA1MCBHQiBm
aWxlXShodHRwczovL3NlcnZlcmZhdWx0LmNvbS9xdWVzdGlvbnMvNzI0NDY5
L3JzeW5jLXRyaWdnZXJlZC1saW51eC1vb20ta2lsbGVyLW9uLWEtc2luZ2xl
LTUwLWdiLWZpbGUpCi0gW1RhbWluZyB0aGUgT09NIGtpbGxlcl0oaHR0cHM6
Ly9sd24ubmV0L0FydGljbGVzLzMxNzgxNC8pCgo8L2RldGFpbHM+Cgo8ZGV0
YWlscz4KPHN1bW1hcnk+PGI+WW91IGhhdmUgYSBsb3Qgb2Ygc29ja2V0cywg
aGFuZ2luZyBpbiA8Y29kZT5USU1FX1dBSVQ8L2NvZGU+LiBZb3VyIGh0dHAg
c2VydmljZSBiZWhpbmQgcHJveHkgc2VydmUgYSBsb3Qgb2Ygc21hbGwgaHR0
cCByZXF1ZXN0cy4gSG93IHRvIGNoZWNrIGFuZCByZWR1Y2UgPGNvZGU+VElN
RV9XQUlUPC9jb2RlPiBzb2NrZXRzPyAqKio8L2I+PC9zdW1tYXJ5Pjxicj4K
ClRvIGJlIGNvbXBsZXRlZC4KClVzZWZ1bCByZXNvdXJjZXM6CgotIFtIb3cg
dG8gcmVkdWNlIG51bWJlciBvZiBzb2NrZXRzIGluIFRJTUVfV0FJVD9dKGh0
dHBzOi8vc2VydmVyZmF1bHQuY29tL3F1ZXN0aW9ucy8yMTIwOTMvaG93LXRv
LXJlZHVjZS1udW1iZXItb2Ytc29ja2V0cy1pbi10aW1lLXdhaXQpCgo8L2Rl
dGFpbHM+Cgo8ZGV0YWlscz4KPHN1bW1hcnk+PGI+SG93IGRvIDxjb2RlPlNP
X1JFVVNFQUREUjwvY29kZT4gYW5kIDxjb2RlPlNPX1JFVVNFUE9SVDwvY29k
ZT4gZGlmZmVyPyBFeHBsYWluIGFsbCBzb2NrZXQgaW1wbGVtZW50YXRpb25z
LiAqKio8L2I+PC9zdW1tYXJ5Pjxicj4KClRvIGJlIGNvbXBsZXRlZC4KCjwv
ZGV0YWlscz4K
",,6321,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'transactional-email-templates',22720859,b'Responsive transactional HTML email templates',b'HTML',8,6320,,251,False,b'https://api.github.com/repos/mailgun/transactional-email-templates/forks',"IyBSZXNwb25zaXZlIHRyYW5zYWN0aW9uYWwgSFRNTCBlbWFpbCB0ZW1wbGF0
ZXMKClRyYW5zYWN0aW9uYWwgSFRNTCBlbWFpbHMgb2Z0ZW4gZ2V0IG5lZ2xl
Y3RlZC4gKipTdHlsaW5nIEhUTUwgZW1haWwgaXMgcGFpbmZ1bCoqLiBUYWJs
ZXMsIGlubGluZSBDU1MsIHVuc3VwcG9ydGVkIENTUywgZGVza3RvcCBjbGll
bnRzLCB3ZWIgY2xpZW50cywgbW9iaWxlIGNsaWVudHMsIHZhcmlvdXMgZGV2
aWNlcywgdmFyaW91cyBwcm92aWRlcnMuCgpXZeKAmXZlIHRyaWVkIHRvIHJl
bW92ZSBzb21lIG9mIHRoZSBwYWluIGZvciB5b3UgYW5kIG9wZW4tc291cmNl
ZCBhIGNvbGxlY3Rpb24gb2YgY29tbW9uIHRlbXBsYXRlcyBmb3IgdHJhbnNh
Y3Rpb25hbCBlbWFpbC4KCjxwIGFsaWduPSJjZW50ZXIiPjxpbWcgc3JjPSJo
dHRwczovL21haWxndW4uZ2hvc3QuaW8vY29udGVudC9pbWFnZXMvMjAxNC9B
dWcvaWNvbnMucG5nIiB3aWR0aD0iNTAwIj48L3A+CgoqIFtBY3Rpb24gZW1h
aWxdKGh0dHA6Ly9tYWlsZ3VuLmdpdGh1Yi5pby90cmFuc2FjdGlvbmFsLWVt
YWlsLXRlbXBsYXRlcy9hY3Rpb24uaHRtbCkKKiBbRW1haWwgYWxlcnRdKGh0
dHA6Ly9tYWlsZ3VuLmdpdGh1Yi5pby90cmFuc2FjdGlvbmFsLWVtYWlsLXRl
bXBsYXRlcy9hbGVydC5odG1sKQoqIFtCaWxsaW5nIGVtYWlsXShodHRwOi8v
bWFpbGd1bi5naXRodWIuaW8vdHJhbnNhY3Rpb25hbC1lbWFpbC10ZW1wbGF0
ZXMvYmlsbGluZy5odG1sKQoKRWFjaCB0ZW1wbGF0ZSBpcyAqKnJlc3BvbnNp
dmUqKiBhbmQgZWFjaCBoYXMgYmVlbiAqKnRlc3RlZCoqIGluIGFsbCB0aGUg
Kipwb3B1bGFyIGVtYWlsIGNsaWVudHMqKi4KCiMjIEhvdyB0byB1c2UKCiog
VXNlIHRoZXNlIGVtYWlsIHRlbXBsYXRlcyBmb3IgeW91ciB0cmFuc2FjdGlv
bmFsIGVtYWlscwoqIFVzZSB0aGVtIGFzIGlzIG9yIHRoaW5rIG9mIHRoZW0g
YXMgYm9pbGVycGxhdGVzIGZvciBtb3JlIGRldGFpbGVkIGVtYWlscwoqIEVu
c3VyZSB5b3UgW2lubGluZSB0aGUgQ1NTXSgjaW5saW5lLXRoZS1jc3MpIGJl
Zm9yZSBzZW5kaW5nIHRoZSBlbWFpbCBvdXQKCiMjIFdoYXQgYXJlIHRyYW5z
YWN0aW9uYWwgZW1haWxzPwoKVHlwaWNhbGx5IGFueSBlbWFpbCB0aGF0IGlz
IHRyaWdnZXJlZCBieSBvciBzZW50IGF1dG9tYXRpY2FsbHkgZnJvbSB5b3Vy
IGFwcGxpY2F0aW9uLgoKKiBXZWxjb21lIGVtYWlscwoqIEFjdGlvbmFibGUg
ZW1haWxzCiogUGFzc3dvcmQgcmVzZXRzCiogUmVjZWlwdHMKKiBNb250aGx5
IGludm9pY2VzCiogU3VwcG9ydCByZXF1ZXN0cwoqIEFwcCBlcnJvciBhbGVy
dHMKKiBSZW1pbmRlcnMKKiBldGMuCgojIyBJbmxpbmUgdGhlIENTUwoKQmVm
b3JlIHNlbmRpbmcgSFRNTCBlbWFpbHMgKip5b3Ugc2hvdWxkIGlubGluZSB5
b3VyIENTUyoqLgoKV2UgcmVjb21tZW5kIHVzaW5nIFtQcmVtYWlsZXJdKGh0
dHA6Ly9wcmVtYWlsZXIuZGlhbGVjdC5jYS8pIHRvIGFjY29tcGxpc2ggdGhp
cy4KCk91ciByZXBvIGNvbnRhaW5zIGJvdGggdGhlIG9yaWdpbmFsIHRlbXBs
YXRlcyB3aXRoIGEgc2VwYXJhdGUgQ1NTIHN0eWxlc2hlZXQsIGFzIHdlbGwg
YXMgdGVtcGxhdGVzIHdpdGggQ1NTIGFscmVhZHkgaW5saW5lZCBmb3IgeW91
IHRvIHByZXZpZXcuIFNlZSB0aGUgYC90ZW1wbGF0ZXMvaW5saW5lZGAgZm9s
ZGVyLgoKIyMgVGVzdGVkIGFuZCB2ZXJpZmllZAoKV2XigJl2ZSB0ZXN0ZWQg
dGhlc2UgZW1haWwgdGVtcGxhdGVzIGFjcm9zcyBhbGwgdGhlIG1ham9yIGRl
c2t0b3AsIHdlYiBhbmQgbW9iaWxlIGNsaWVudHMsIHVzaW5nIExpdG11cy4g
W1NlZSB0aGUgdGVzdCByZXN1bHRzLl0oaHR0cHM6Ly9saXRtdXMuY29tL3B1
Yi8zMzNlMmI2L3NjcmVlbnNob3RzKQoKPGltZyBzcmM9Imh0dHA6Ly9pLmlt
Z3VyLmNvbS9lWDlmWXdMLnBuZyI+CgojIyBFbWFpbCBkZXNpZ24gd29ya2Zs
b3cgd2l0aCBHcnVudAoKWW91IGFsc28gbWlnaHQgYmUgaW50ZXJlc3RlZCBp
biB0aGlzIFtHcnVudCB0YXNrXShodHRwczovL2dpdGh1Yi5jb20vbGVlbXVu
cm9lL2dydW50LWVtYWlsLWRlc2lnbikgIGZvciBjb21waWxpbmcgYW5kIHRl
c3RpbmcgaHRtbCBlbWFpbHMuIFdlIHVzZWQgdGhpcyB0byBoZWxwIGRlc2ln
biBhbmQgdGVzdCBvdXIgdHJhbnNhY3Rpb25hbCBlbWFpbHMuCg==
",,6320,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
