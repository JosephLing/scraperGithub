name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,circleci0,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'nightmare',18477927,b'A high-level browser automation library.',b'JavaScript',159,17944,,373,False,b'https://api.github.com/repos/segmentio/nightmare/forks',"WyFbQnVpbGQgU3RhdHVzXShodHRwczovL2ltZy5zaGllbGRzLmlvL2NpcmNs
ZWNpL3Byb2plY3Qvc2VnbWVudGlvL25pZ2h0bWFyZS9tYXN0ZXIuc3ZnKV0o
aHR0cHM6Ly9jaXJjbGVjaS5jb20vZ2gvc2VnbWVudGlvL25pZ2h0bWFyZSkK
WyFbSm9pbiB0aGUgY2hhdCBhdCBodHRwczovL2dpdHRlci5pbS9yb3NzaGlu
a2xleS9uaWdodG1hcmVdKGh0dHBzOi8vYmFkZ2VzLmdpdHRlci5pbS9yb3Nz
aGlua2xleS9uaWdodG1hcmUuc3ZnKV0oaHR0cHM6Ly9naXR0ZXIuaW0vcm9z
c2hpbmtsZXkvbmlnaHRtYXJlP3V0bV9zb3VyY2U9YmFkZ2UmdXRtX21lZGl1
bT1iYWRnZSZ1dG1fY2FtcGFpZ249cHItYmFkZ2UmdXRtX2NvbnRlbnQ9YmFk
Z2UpCgojIE5pZ2h0bWFyZQoKTmlnaHRtYXJlIGlzIGEgaGlnaC1sZXZlbCBi
cm93c2VyIGF1dG9tYXRpb24gbGlicmFyeSBmcm9tIFtTZWdtZW50XShodHRw
czovL3NlZ21lbnQuY29tKS4KClRoZSBnb2FsIGlzIHRvIGV4cG9zZSBhIGZl
dyBzaW1wbGUgbWV0aG9kcyB0aGF0IG1pbWljIHVzZXIgYWN0aW9ucyAobGlr
ZSBgZ290b2AsIGB0eXBlYCBhbmQgYGNsaWNrYCksIHdpdGggYW4gQVBJIHRo
YXQgZmVlbHMgc3luY2hyb25vdXMgZm9yIGVhY2ggYmxvY2sgb2Ygc2NyaXB0
aW5nLCByYXRoZXIgdGhhbiBkZWVwbHkgbmVzdGVkIGNhbGxiYWNrcy4gSXQg
d2FzIG9yaWdpbmFsbHkgZGVzaWduZWQgZm9yIGF1dG9tYXRpbmcgdGFza3Mg
YWNyb3NzIHNpdGVzIHRoYXQgZG9uJ3QgaGF2ZSBBUElzLCBidXQgaXMgbW9z
dCBvZnRlbiB1c2VkIGZvciBVSSB0ZXN0aW5nIGFuZCBjcmF3bGluZy4KClVu
ZGVyIHRoZSBjb3ZlcnMgaXQgdXNlcyBbRWxlY3Ryb25dKGh0dHA6Ly9lbGVj
dHJvbi5hdG9tLmlvLyksIHdoaWNoIGlzIHNpbWlsYXIgdG8gW1BoYW50b21K
U10oaHR0cDovL3BoYW50b21qcy5vcmcvKSBidXQgcm91Z2hseSBbdHdpY2Ug
YXMgZmFzdF0oaHR0cHM6Ly9naXRodWIuY29tL3NlZ21lbnRpby9uaWdodG1h
cmUvaXNzdWVzLzQ4NCNpc3N1ZWNvbW1lbnQtMTg0NTE5NTkxKSBhbmQgbW9y
ZSBtb2Rlcm4uIAoKKirimqDvuI8gU2VjdXJpdHkgV2FybmluZzoqKiBXZSd2
ZSBpbXBsZW1lbnRlZCBbbWFueV0oaHR0cHM6Ly9naXRodWIuY29tL3NlZ21l
bnRpby9uaWdodG1hcmUvaXNzdWVzLzEzODgpIG9mIHRoZSBzZWN1cml0eSBy
ZWNvbW1lbmRhdGlvbnMgW291dGxpbmVkIGJ5IEVsZWN0cm9uXShodHRwczov
L2dpdGh1Yi5jb20vZWxlY3Ryb24vZWxlY3Ryb24vYmxvYi9tYXN0ZXIvZG9j
cy90dXRvcmlhbC9zZWN1cml0eS5tZCkgdG8gdHJ5IGFuZCBrZWVwIHlvdSBz
YWZlLCBidXQgdW5kaXNjb3ZlcmVkIHZ1bG5lcmFiaWxpdGllcyBtYXkgZXhp
c3QgaW4gRWxlY3Ryb24gdGhhdCBjb3VsZCBhbGxvdyBhIG1hbGljaW91cyB3
ZWJzaXRlIHRvIGV4ZWN1dGUgY29kZSBvbiB5b3VyIGNvbXB1dGVyLiBBdm9p
ZCB2aXNpdGluZyB1bnRydXN0ZWQgd2Vic2l0ZXMuCgoqKvCfm6AgTWlncmF0
aW5nIHRvIDMueDoqKiBZb3UnbGwgd2FudCB0byBjaGVjayBvdXQgW3RoaXMg
aXNzdWVdKGh0dHBzOi8vZ2l0aHViLmNvbS9zZWdtZW50aW8vbmlnaHRtYXJl
L2lzc3Vlcy8xMzk2KSBiZWZvcmUgdXBncmFkaW5nLiBXZSd2ZSB3b3JrZWQg
aGFyZCB0byBtYWtlIGltcHJvdmVtZW50cyB0byBuaWdodG1hcmUgd2hpbGUg
bGltaXRpbmcgdGhlIGJyZWFraW5nIGNoYW5nZXMgYW5kIHRoZXJlJ3MgYSBn
b29kIGNoYW5jZSB5b3Ugd29uJ3QgbmVlZCB0byBkbyBhbnl0aGluZy4KCltO
aWZmeV0oaHR0cHM6Ly9naXRodWIuY29tL3NlZ21lbnRpby9uaWZmeSkgaXMg
YSBwZXJjZXB0dWFsIGRpZmZpbmcgdG9vbCBidWlsdCBvbiBOaWdodG1hcmUu
IEl0IGhlbHBzIHlvdSBkZXRlY3QgVUkgY2hhbmdlcyBhbmQgYnVncyBhY3Jv
c3MgcmVsZWFzZXMgb2YgeW91ciB3ZWIgYXBwLgoKW0RheWRyZWFtXShodHRw
czovL2dpdGh1Yi5jb20vc2VnbWVudGlvL2RheWRyZWFtKSBpcyBhIGNvbXBs
ZW1lbnRhcnkgY2hyb21lIGV4dGVuc2lvbiBidWlsdCBieSBbQHN0ZXZlbm1p
bGxlcjg4OF0oaHR0cHM6Ly9naXRodWIuY29tL3N0ZXZlbm1pbGxlcjg4OCkg
dGhhdCBnZW5lcmF0ZXMgTmlnaHRtYXJlIHNjcmlwdHMgZm9yIHlvdSB3aGls
ZSB5b3UgYnJvd3NlLgoKTWFueSB0aGFua3MgdG8gW0BtYXR0aGV3bXVlbGxl
cl0oaHR0cHM6Ly9naXRodWIuY29tL21hdHRoZXdtdWVsbGVyKSBhbmQgW0By
b3NzaGlua2xleV0oaHR0cHM6Ly9naXRodWIuY29tL3Jvc3NoaW5rbGV5KSBm
b3IgdGhlaXIgaGVscCBvbiBOaWdodG1hcmUuCgoqIFtFeGFtcGxlc10oI2V4
YW1wbGVzKQogICogW1VJIFRlc3RpbmcgUXVpY2sgU3RhcnRdKGh0dHBzOi8v
c2VnbWVudC5jb20vYmxvZy91aS10ZXN0aW5nLXdpdGgtbmlnaHRtYXJlLykK
ICAqIFtQZXJjZXB0dWFsIERpZmZpbmcgd2l0aCBOaWZmeSAmIE5pZ2h0bWFy
ZV0oaHR0cHM6Ly9zZWdtZW50LmNvbS9ibG9nL3BlcmNlcHR1YWwtZGlmZmlu
Zy13aXRoLW5pZmZ5LykKKiBbQVBJXSgjYXBpKQogICogW1NldCB1cCBhbiBp
bnN0YW5jZV0oI25pZ2h0bWFyZW9wdGlvbnMpCiAgKiBbSW50ZXJhY3Qgd2l0
aCB0aGUgcGFnZV0oI2ludGVyYWN0LXdpdGgtdGhlLXBhZ2UpCiAgKiBbRXh0
cmFjdCBmcm9tIHRoZSBwYWdlXSgjZXh0cmFjdC1mcm9tLXRoZS1wYWdlKQog
ICogW0Nvb2tpZXNdKCNjb29raWVzKQogICogW1Byb3hpZXNdKCNwcm94aWVz
KQogICogW1Byb21pc2VzXSgjcHJvbWlzZXMpCiAgKiBbRXh0ZW5kaW5nIE5p
Z2h0bWFyZV0oI2V4dGVuZGluZy1uaWdodG1hcmUpCiogW1VzYWdlXSgjdXNh
Z2UpCiogW0RlYnVnZ2luZ10oI2RlYnVnZ2luZykKKiBbQWRkaXRpb25hbCBS
ZXNvdXJjZXNdKCNhZGRpdGlvbmFsLXJlc291cmNlcykKCiMjIEV4YW1wbGVz
CgpMZXQncyBzZWFyY2ggb24gRHVja0R1Y2tHbzoKCmBgYGpzCmNvbnN0IE5p
Z2h0bWFyZSA9IHJlcXVpcmUoJ25pZ2h0bWFyZScpCmNvbnN0IG5pZ2h0bWFy
ZSA9IE5pZ2h0bWFyZSh7IHNob3c6IHRydWUgfSkKCm5pZ2h0bWFyZQogIC5n
b3RvKCdodHRwczovL2R1Y2tkdWNrZ28uY29tJykKICAudHlwZSgnI3NlYXJj
aF9mb3JtX2lucHV0X2hvbWVwYWdlJywgJ2dpdGh1YiBuaWdodG1hcmUnKQog
IC5jbGljaygnI3NlYXJjaF9idXR0b25faG9tZXBhZ2UnKQogIC53YWl0KCcj
cjEtMCBhLnJlc3VsdF9fYScpCiAgLmV2YWx1YXRlKCgpID0+IGRvY3VtZW50
LnF1ZXJ5U2VsZWN0b3IoJyNyMS0wIGEucmVzdWx0X19hJykuaHJlZikKICAu
ZW5kKCkKICAudGhlbihjb25zb2xlLmxvZykKICAuY2F0Y2goZXJyb3IgPT4g
ewogICAgY29uc29sZS5lcnJvcignU2VhcmNoIGZhaWxlZDonLCBlcnJvcikK
ICB9KQpgYGAKCllvdSBjYW4gcnVuIHRoaXMgd2l0aDoKCmBgYHNoZWxsCm5w
bSBpbnN0YWxsIC0tc2F2ZSBuaWdodG1hcmUKbm9kZSBleGFtcGxlLmpzCmBg
YAoKT3IsIGxldCdzIHJ1biBzb21lIG1vY2hhIHRlc3RzOgoKYGBganMKY29u
c3QgTmlnaHRtYXJlID0gcmVxdWlyZSgnbmlnaHRtYXJlJykKY29uc3QgY2hh
aSA9IHJlcXVpcmUoJ2NoYWknKQpjb25zdCBleHBlY3QgPSBjaGFpLmV4cGVj
dAoKZGVzY3JpYmUoJ3Rlc3QgZHVja2R1Y2tnbyBzZWFyY2ggcmVzdWx0cycs
ICgpID0+IHsKICBpdCgnc2hvdWxkIGZpbmQgdGhlIG5pZ2h0bWFyZSBnaXRo
dWIgbGluayBmaXJzdCcsIGZ1bmN0aW9uKGRvbmUpIHsKICAgIHRoaXMudGlt
ZW91dCgnMTBzJykKCiAgICBjb25zdCBuaWdodG1hcmUgPSBOaWdodG1hcmUo
KQogICAgbmlnaHRtYXJlCiAgICAgIC5nb3RvKCdodHRwczovL2R1Y2tkdWNr
Z28uY29tJykKICAgICAgLnR5cGUoJyNzZWFyY2hfZm9ybV9pbnB1dF9ob21l
cGFnZScsICdnaXRodWIgbmlnaHRtYXJlJykKICAgICAgLmNsaWNrKCcjc2Vh
cmNoX2J1dHRvbl9ob21lcGFnZScpCiAgICAgIC53YWl0KCcjbGlua3MgLnJl
c3VsdF9fYScpCiAgICAgIC5ldmFsdWF0ZSgoKSA9PiBkb2N1bWVudC5xdWVy
eVNlbGVjdG9yKCcjbGlua3MgLnJlc3VsdF9fYScpLmhyZWYpCiAgICAgIC5l
bmQoKQogICAgICAudGhlbihsaW5rID0+IHsKICAgICAgICBleHBlY3QobGlu
aykudG8uZXF1YWwoJ2h0dHBzOi8vZ2l0aHViLmNvbS9zZWdtZW50aW8vbmln
aHRtYXJlJykKICAgICAgICBkb25lKCkKICAgICAgfSkKICB9KQp9KQpgYGAK
CllvdSBjYW4gc2VlIGV4YW1wbGVzIG9mIGV2ZXJ5IGZ1bmN0aW9uIFtpbiB0
aGUgdGVzdHMgaGVyZV0oaHR0cHM6Ly9naXRodWIuY29tL3NlZ21lbnRpby9u
aWdodG1hcmUvYmxvYi9tYXN0ZXIvdGVzdC9pbmRleC5qcykuCgpUbyBnZXQg
c3RhcnRlZCB3aXRoIFVJIFRlc3RpbmcsIGNoZWNrIG91dCB0aGlzIFtxdWlj
ayBzdGFydCBndWlkZV0oaHR0cHM6Ly9zZWdtZW50LmNvbS9ibG9nL3VpLXRl
c3Rpbmctd2l0aC1uaWdodG1hcmUpLgoKIyMjIFRvIGluc3RhbGwgZGVwZW5k
ZW5jaWVzCgpgYGAKbnBtIGluc3RhbGwKYGBgCgojIyMgVG8gcnVuIHRoZSBt
b2NoYSB0ZXN0cwoKYGBgCm5wbSB0ZXN0CmBgYAoKIyMjIE5vZGUgdmVyc2lv
bnMKCk5pZ2h0bWFyZSBpcyBpbnRlbmRlZCB0byBiZSBydW4gb24gTm9kZUpT
IDQueCBvciBoaWdoZXIuCgojIyBBUEkKCiMjIyMgTmlnaHRtYXJlKG9wdGlv
bnMpCgpDcmVhdGVzIGEgbmV3IGluc3RhbmNlIHRoYXQgY2FuIG5hdmlnYXRl
IGFyb3VuZCB0aGUgd2ViLiBUaGUgYXZhaWxhYmxlIG9wdGlvbnMgYXJlIFtk
b2N1bWVudGVkIGhlcmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9hdG9tL2VsZWN0
cm9uL2Jsb2IvbWFzdGVyL2RvY3MvYXBpL2Jyb3dzZXItd2luZG93Lm1kI25l
dy1icm93c2Vyd2luZG93b3B0aW9ucyksIGFsb25nIHdpdGggdGhlIGZvbGxv
d2luZyBuaWdodG1hcmUtc3BlY2lmaWMgb3B0aW9ucy4KCiMjIyMjIHdhaXRU
aW1lb3V0IChkZWZhdWx0OiAzMHMpCgpUaHJvd3MgYW4gZXhjZXB0aW9uIGlm
IHRoZSBgLndhaXQoKWAgZGlkbid0IHJldHVybiBgdHJ1ZWAgd2l0aGluIHRo
ZSBzZXQgdGltZWZyYW1lLgoKYGBganMKY29uc3QgbmlnaHRtYXJlID0gTmln
aHRtYXJlKHsKICB3YWl0VGltZW91dDogMTAwMCAvLyBpbiBtcwp9KQpgYGAK
CiMjIyMjIGdvdG9UaW1lb3V0IChkZWZhdWx0OiAzMHMpCgpUaHJvd3MgYW4g
ZXhjZXB0aW9uIGlmIHRoZSBgLmdvdG8oKWAgZGlkbid0IGZpbmlzaCBsb2Fk
aW5nIHdpdGhpbiB0aGUgc2V0IHRpbWVmcmFtZS4gTm90ZSB0aGF0LCBldmVu
IHRob3VnaCBgZ290b2Agbm9ybWFsbHkgd2FpdHMgZm9yIGFsbCB0aGUgcmVz
b3VyY2VzIG9uIGEgcGFnZSB0byBsb2FkLCBhIHRpbWVvdXQgZXhjZXB0aW9u
IGlzIG9ubHkgcmFpc2VkIGlmIHRoZSBET00gaXRzZWxmIGhhcyBub3QgeWV0
IGxvYWRlZC4KCmBgYGpzCmNvbnN0IG5pZ2h0bWFyZSA9IE5pZ2h0bWFyZSh7
CiAgZ290b1RpbWVvdXQ6IDEwMDAgLy8gaW4gbXMKfSkKYGBgCgojIyMjIyBs
b2FkVGltZW91dCAoZGVmYXVsdDogaW5maW5pdGUpCgpGb3JjZXMgTmlnaHRt
YXJlIHRvIG1vdmUgb24gaWYgYSBwYWdlIHRyYW5zaXRpb24gY2F1c2VkIGJ5
IGFuIGFjdGlvbiAoZWcsIGAuY2xpY2soKWApIGRpZG4ndCBmaW5pc2ggd2l0
aGluIHRoZSBzZXQgdGltZWZyYW1lLiBJZiBgbG9hZFRpbWVvdXRgIGlzIHNo
b3J0ZXIgdGhhbiBgZ290b1RpbWVvdXRgLCB0aGUgZXhjZXB0aW9ucyB0aHJv
d24gYnkgYGdvdG9UaW1lb3V0YCB3aWxsIGJlIHN1cHByZXNzZWQuCgpgYGBq
cwpjb25zdCBuaWdodG1hcmUgPSBOaWdodG1hcmUoewogIGxvYWRUaW1lb3V0
OiAxMDAwIC8vIGluIG1zCn0pCmBgYAoKIyMjIyMgZXhlY3V0aW9uVGltZW91
dCAoZGVmYXVsdDogMzBzKQoKVGhlIG1heGltdW0gYW1vdW50IG9mIHRpbWUg
dG8gd2FpdCBmb3IgYW4gYC5ldmFsdWF0ZSgpYCBzdGF0ZW1lbnQgdG8gY29t
cGxldGUuCgpgYGBqcwpjb25zdCBuaWdodG1hcmUgPSBOaWdodG1hcmUoewog
IGV4ZWN1dGlvblRpbWVvdXQ6IDEwMDAgLy8gaW4gbXMKfSkKYGBgCgojIyMj
IyBwYXRocwoKVGhlIGRlZmF1bHQgc3lzdGVtIHBhdGhzIHRoYXQgRWxlY3Ry
b24ga25vd3MgYWJvdXQuIEhlcmUncyBhIGxpc3Qgb2YgYXZhaWxhYmxlIHBh
dGhzOiBodHRwczovL2dpdGh1Yi5jb20vYXRvbS9lbGVjdHJvbi9ibG9iL21h
c3Rlci9kb2NzL2FwaS9hcHAubWQjYXBwZ2V0cGF0aG5hbWUKCllvdSBjYW4g
b3ZlcndyaXRlIHRoZW0gaW4gTmlnaHRtYXJlIGJ5IGRvaW5nIHRoZSBmb2xs
b3dpbmc6CgpgYGBqcwpjb25zdCBuaWdodG1hcmUgPSBOaWdodG1hcmUoewog
IHBhdGhzOiB7CiAgICB1c2VyRGF0YTogJy91c2VyL2RhdGEnCiAgfQp9KQpg
YGAKCiMjIyMjIHN3aXRjaGVzCgpUaGUgY29tbWFuZCBsaW5lIHN3aXRjaGVz
IHVzZWQgYnkgdGhlIENocm9tZSBicm93c2VyIHRoYXQgYXJlIGFsc28gc3Vw
cG9ydGVkIGJ5IEVsZWN0cm9uLiBIZXJlJ3MgYSBsaXN0IG9mIHN1cHBvcnRl
ZCBDaHJvbWUgY29tbWFuZCBsaW5lIHN3aXRjaGVzOgpodHRwczovL2dpdGh1
Yi5jb20vYXRvbS9lbGVjdHJvbi9ibG9iL21hc3Rlci9kb2NzL2FwaS9jaHJv
bWUtY29tbWFuZC1saW5lLXN3aXRjaGVzLm1kCgpgYGBqcwpjb25zdCBuaWdo
dG1hcmUgPSBOaWdodG1hcmUoewogIHN3aXRjaGVzOiB7CiAgICAncHJveHkt
c2VydmVyJzogJzEuMi4zLjQ6NTY3OCcsCiAgICAnaWdub3JlLWNlcnRpZmlj
YXRlLWVycm9ycyc6IHRydWUKICB9Cn0pCmBgYAoKIyMjIyMgZWxlY3Ryb25Q
YXRoCgpUaGUgcGF0aCB0byB0aGUgcHJlYnVpbHQgRWxlY3Ryb24gYmluYXJ5
LiBUaGlzIGlzIHVzZWZ1bCBmb3IgdGVzdGluZyBvbiBkaWZmZXJlbnQgdmVy
c2lvbnMgb2YgRWxlY3Ryb24uIE5vdGUgdGhhdCBOaWdodG1hcmUgb25seSBz
dXBwb3J0cyB0aGUgdmVyc2lvbiBvbiB3aGljaCB0aGlzIHBhY2thZ2UgZGVw
ZW5kcy4gVXNlIHRoaXMgb3B0aW9uIGF0IHlvdXIgb3duIHJpc2suCgpgYGBq
cwpjb25zdCBuaWdodG1hcmUgPSBOaWdodG1hcmUoewogIGVsZWN0cm9uUGF0
aDogcmVxdWlyZSgnZWxlY3Ryb24nKQp9KQpgYGAKCiMjIyMjIGRvY2sgKE9T
IFgpCgpBIGJvb2xlYW4gdG8gb3B0aW9uYWxseSBzaG93IHRoZSBFbGVjdHJv
biBpY29uIGluIHRoZSBkb2NrIChkZWZhdWx0cyB0byBgZmFsc2VgKS4gVGhp
cyBpcyB1c2VmdWwgZm9yIHRlc3RpbmcgcHVycG9zZXMuCgpgYGBqcwpjb25z
dCBuaWdodG1hcmUgPSBOaWdodG1hcmUoewogIGRvY2s6IHRydWUKfSkKYGBg
CgojIyMjIyBvcGVuRGV2VG9vbHMKCk9wdGlvbmFsbHkgc2hvd3MgdGhlIERl
dlRvb2xzIGluIHRoZSBFbGVjdHJvbiB3aW5kb3cgdXNpbmcgYHRydWVgLCBv
ciB1c2UgYW4gb2JqZWN0IGhhc2ggY29udGFpbmluZyBgbW9kZTogJ2RldGFj
aCdgIHRvIHNob3cgaW4gYSBzZXBhcmF0ZSB3aW5kb3cuIFRoZSBoYXNoIGdl
dHMgcGFzc2VkIHRvIFtgY29udGVudHMub3BlbkRldlRvb2xzKClgXShodHRw
czovL2dpdGh1Yi5jb20vZWxlY3Ryb24vZWxlY3Ryb24vYmxvYi9tYXN0ZXIv
ZG9jcy9hcGkvd2ViLWNvbnRlbnRzLm1kI2NvbnRlbnRzb3BlbmRldnRvb2xz
b3B0aW9ucykgdG8gYmUgaGFuZGxlZC4gVGhpcyBpcyBhbHNvIHVzZWZ1bCBm
b3IgdGVzdGluZyBwdXJwb3Nlcy4gTm90ZSB0aGF0IHRoaXMgb3B0aW9uIGlz
IGhvbm9yZWQgb25seSBpZiBgc2hvd2AgaXMgc2V0IHRvIGB0cnVlYC4KCmBg
YGpzCmNvbnN0IG5pZ2h0bWFyZSA9IE5pZ2h0bWFyZSh7CiAgb3BlbkRldlRv
b2xzOiB7CiAgICBtb2RlOiAnZGV0YWNoJwogIH0sCiAgc2hvdzogdHJ1ZQp9
KQpgYGAKCiMjIyMjIHR5cGVJbnRlcnZhbCAoZGVmYXVsdDogMTAwbXMpCgpI
b3cgbG9uZyB0byB3YWl0IGJldHdlZW4ga2V5c3Ryb2tlcyB3aGVuIHVzaW5n
IGAudHlwZSgpYC4KCmBgYGpzCmNvbnN0IG5pZ2h0bWFyZSA9IE5pZ2h0bWFy
ZSh7CiAgdHlwZUludGVydmFsOiAyMAp9KQpgYGAKCiMjIyMjIHBvbGxJbnRl
cnZhbCAoZGVmYXVsdDogMjUwbXMpCgpIb3cgbG9uZyB0byB3YWl0IGJldHdl
ZW4gY2hlY2tzIGZvciB0aGUgYC53YWl0KClgIGNvbmRpdGlvbiB0byBiZSBz
dWNjZXNzZnVsLgoKYGBganMKY29uc3QgbmlnaHRtYXJlID0gTmlnaHRtYXJl
KHsKICBwb2xsSW50ZXJ2YWw6IDUwIC8vaW4gbXMKfSkKYGBgCgojIyMjIyBt
YXhBdXRoUmV0cmllcyAoZGVmYXVsdDogMykKCkRlZmluZXMgdGhlIG51bWJl
ciBvZiB0aW1lcyB0byByZXRyeSBhbiBhdXRoZW50aWNhdGlvbiB3aGVuIHNl
dCB1cCB3aXRoIGAuYXV0aGVudGljYXRlKClgLgoKYGBganMKY29uc3Qgbmln
aHRtYXJlID0gTmlnaHRtYXJlKHsKICBtYXhBdXRoUmV0cmllczogMwp9KQpg
YGAKCiMjIyMgY2VydGlmaWNhdGVTdWJqZWN0TmFtZQoKQSBzdHJpbmcgdG8g
ZGV0ZXJtaW5lIHRoZSBjbGllbnQgY2VydGlmaWNhdGUgc2VsZWN0ZWQgYnkg
ZWxlY3Ryb24uIElmIHRoaXMgb3B0aW9ucyBpcyBzZXQsIHRoZSBbYHNlbGVj
dC1jbGllbnQtY2VydGlmaWNhdGVgXShodHRwczovL2dpdGh1Yi5jb20vZWxl
Y3Ryb24vZWxlY3Ryb24vYmxvYi9tYXN0ZXIvZG9jcy9hcGkvYXBwLm1kI2V2
ZW50LXNlbGVjdC1jbGllbnQtY2VydGlmaWNhdGUpIGV2ZW50IHdpbGwgYmUg
c2V0IHRvIGxvb3AgdGhyb3VnaCB0aGUgY2VydGlmaWNhdGVMaXN0IGFuZCBm
aW5kIHRoZSBmaXJzdCBjZXJ0aWZpY2F0ZSB0aGF0IG1hdGNoZXMgYHN1Ympl
Y3ROYW1lYCBvbiB0aGUgZWxlY3Ryb24gW2BDZXJ0aWZpY2F0ZSBPYmplY3Rg
XShodHRwczovL2VsZWN0cm9uanMub3JnL2RvY3MvYXBpL3N0cnVjdHVyZXMv
Y2VydGlmaWNhdGUpLgoKYGBganMKY29uc3QgbmlnaHRtYXJlID0gTmlnaHRt
YXJlKHsKICBjZXJ0aWZpY2F0ZVN1YmplY3ROYW1lOiAndGVzdGVyJwp9KQpg
YGAKCiMjIyMgLmVuZ2luZVZlcnNpb25zKCkKCkdldHMgdGhlIHZlcnNpb25z
IGZvciBFbGVjdHJvbiBhbmQgQ2hyb21pdW0uCgojIyMjIC51c2VyYWdlbnQo
dXNlcmFnZW50KQoKU2V0cyB0aGUgYHVzZXJhZ2VudGAgdXNlZCBieSBlbGVj
dHJvbi4KCiMjIyMgLmF1dGhlbnRpY2F0aW9uKHVzZXIsIHBhc3N3b3JkKQoK
U2V0cyB0aGUgYHVzZXJgIGFuZCBgcGFzc3dvcmRgIGZvciBhY2Nlc3Npbmcg
YSB3ZWIgcGFnZSB1c2luZyBiYXNpYyBhdXRoZW50aWNhdGlvbi4gQmUgc3Vy
ZSB0byBzZXQgaXQgYmVmb3JlIGNhbGxpbmcgYC5nb3RvKHVybClgLgoKIyMj
IyAuZW5kKCkKCkNvbXBsZXRlcyBhbnkgcXVldWUgb3BlcmF0aW9ucywgZGlz
Y29ubmVjdCBhbmQgY2xvc2UgdGhlIGVsZWN0cm9uIHByb2Nlc3MuIE5vdGUg
dGhhdCBpZiB5b3UncmUgdXNpbmcgcHJvbWlzZXMsIGAudGhlbigpYCBtdXN0
IGJlIGNhbGxlZCBhZnRlciBgLmVuZCgpYCB0byBydW4gdGhlIGAuZW5kKClg
IHRhc2suIEFsc28gbm90ZSB0aGF0IGlmIHVzaW5nIGFuIGAuZW5kKClgIGNh
bGxiYWNrLCB0aGUgYC5lbmQoKWAgY2FsbCBpcyBlcXVpdmFsZW50IHRvIGNh
bGxpbmcgYC5lbmQoKWAgZm9sbG93ZWQgYnkgYC50aGVuKGZuKWAuIENvbnNp
ZGVyOgoKYGBganMKbmlnaHRtYXJlCiAgLmdvdG8oc29tZVVybCkKICAuZW5k
KCgpID0+ICdzb21lIHZhbHVlJykKICAvL3ByaW50cyAic29tZSB2YWx1ZSIK
ICAudGhlbihjb25zb2xlLmxvZykKYGBgCgojIyMjIC5oYWx0KGVycm9yLCBk
b25lKQoKQ2xlYXJzIGFsbCBxdWV1ZWQgb3BlcmF0aW9ucywga2lsbHMgdGhl
IGVsZWN0cm9uIHByb2Nlc3MsIGFuZCBwYXNzZXMgZXJyb3IgbWVzc2FnZSBv
ciAnTmlnaHRtYXJlIEhhbHRlZCcgdG8gYW4gdW5yZXNvbHZlZCBwcm9taXNl
LiBEb25lIHdpbGwgYmUgY2FsbGVkIGFmdGVyIHRoZSBwcm9jZXNzIGhhcyBl
eGl0ZWQuCgojIyMgSW50ZXJhY3Qgd2l0aCB0aGUgUGFnZQoKIyMjIyAuZ290
byh1cmxbLCBoZWFkZXJzXSkKCkxvYWRzIHRoZSBwYWdlIGF0IGB1cmxgLiBP
cHRpb25hbGx5LCBhIGBoZWFkZXJzYCBoYXNoIGNhbiBiZSBzdXBwbGllZCB0
byBzZXQgaGVhZGVycyBvbiB0aGUgYGdvdG9gIHJlcXVlc3QuCgpXaGVuIGEg
cGFnZSBsb2FkIGlzIHN1Y2Nlc3NmdWwsIGBnb3RvYCByZXR1cm5zIGFuIG9i
amVjdCB3aXRoIG1ldGFkYXRhIGFib3V0IHRoZSBwYWdlIGxvYWQsIGluY2x1
ZGluZzoKCiogYHVybGA6IFRoZSBVUkwgdGhhdCB3YXMgbG9hZGVkCiogYGNv
ZGVgOiBUaGUgSFRUUCBzdGF0dXMgY29kZSAoZS5nLiAyMDAsIDQwNCwgNTAw
KQoqIGBtZXRob2RgOiBUaGUgSFRUUCBtZXRob2QgdXNlZCAoZS5nLiAiR0VU
IiwgIlBPU1QiKQoqIGByZWZlcnJlcmA6IFRoZSBwYWdlIHRoYXQgdGhlIHdp
bmRvdyB3YXMgZGlzcGxheWluZyBwcmlvciB0byB0aGlzIGxvYWQgb3IgYW4g
ZW1wdHkgc3RyaW5nIGlmIHRoaXMgaXMgdGhlIGZpcnN0IHBhZ2UgbG9hZC4K
KiBgaGVhZGVyc2A6IEFuIG9iamVjdCByZXByZXNlbnRpbmcgdGhlIHJlc3Bv
bnNlIGhlYWRlcnMgZm9yIHRoZSByZXF1ZXN0IGFzIGluIGB7aGVhZGVyMS1u
YW1lOiBoZWFkZXIxLXZhbHVlLCBoZWFkZXIyLW5hbWU6IGhlYWRlcjItdmFs
dWV9YAoKSWYgdGhlIHBhZ2UgbG9hZCBmYWlscywgdGhlIGVycm9yIHdpbGwg
YmUgYW4gb2JqZWN0IHdpdGggdGhlIGZvbGxvd2luZyBwcm9wZXJ0aWVzOgoK
KiBgbWVzc2FnZWA6IEEgc3RyaW5nIGRlc2NyaWJpbmcgdGhlIHR5cGUgb2Yg
ZXJyb3IKKiBgY29kZWA6IFRoZSB1bmRlcmx5aW5nIGVycm9yIGNvZGUgZGVz
Y3JpYmluZyB3aGF0IHdlbnQgd3JvbmcuIE5vdGUgdGhpcyBpcyBOT1QgdGhl
IEhUVFAgc3RhdHVzIGNvZGUuIEZvciBwb3NzaWJsZSB2YWx1ZXMsIHNlZSBo
dHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL2Nocm9taXVtL2NvZGVzZWFyY2gj
Y2hyb21pdW0vc3JjL25ldC9iYXNlL25ldF9lcnJvcl9saXN0LmgKKiBgZGV0
YWlsc2A6IEEgc3RyaW5nIHdpdGggYWRkaXRpb25hbCBkZXRhaWxzIGFib3V0
IHRoZSBlcnJvci4gVGhpcyBtYXkgYmUgbnVsbCBvciBhbiBlbXB0eSBzdHJp
bmcuCiogYHVybGA6IFRoZSBVUkwgdGhhdCBmYWlsZWQgdG8gbG9hZAoKTm90
ZSB0aGF0IGFueSB2YWxpZCByZXNwb25zZSBmcm9tIGEgc2VydmVyIGlzIGNv
bnNpZGVyZWQg4oCcc3VjY2Vzc2Z1bC7igJ0gVGhhdCBtZWFucyB0aGluZ3Mg
bGlrZSA0MDQg4oCcbm90IGZvdW5k4oCdIGVycm9ycyBhcmUgc3VjY2Vzc2Z1
bCByZXN1bHRzIGZvciBgZ290b2AuIE9ubHkgdGhpbmdzIHRoYXQgd291bGQg
Y2F1c2Ugbm8gcGFnZSB0byBhcHBlYXIgaW4gdGhlIGJyb3dzZXIgd2luZG93
LCBzdWNoIGFzIG5vIHNlcnZlciByZXNwb25kaW5nIGF0IHRoZSBnaXZlbiBh
ZGRyZXNzLCB0aGUgc2VydmVyIGhhbmdpbmcgdXAgaW4gdGhlIG1pZGRsZSBv
ZiBhIHJlc3BvbnNlLCBvciBpbnZhbGlkIFVSTHMsIGFyZSBlcnJvcnMuCgpZ
b3UgY2FuIGFsc28gYWRqdXN0IGhvdyBsb25nIGBnb3RvYCB3aWxsIHdhaXQg
YmVmb3JlIHRpbWluZyBvdXQgYnkgc2V0dGluZyB0aGUgW2Bnb3RvVGltZW91
dGAgb3B0aW9uXSgjZ290b3RpbWVvdXQtZGVmYXVsdC0zMHMpIG9uIHRoZSBO
aWdodG1hcmUgY29uc3RydWN0b3IuCgojIyMjIC5iYWNrKCkKCkdvZXMgYmFj
ayB0byB0aGUgcHJldmlvdXMgcGFnZS4KCiMjIyMgLmZvcndhcmQoKQoKR29l
cyBmb3J3YXJkIHRvIHRoZSBuZXh0IHBhZ2UuCgojIyMjIC5yZWZyZXNoKCkK
ClJlZnJlc2hlcyB0aGUgY3VycmVudCBwYWdlLgoKIyMjIyAuY2xpY2soc2Vs
ZWN0b3IpCgpDbGlja3MgdGhlIGBzZWxlY3RvcmAgZWxlbWVudCBvbmNlLgoK
IyMjIyAubW91c2Vkb3duKHNlbGVjdG9yKQoKTW91c2Vkb3ducyB0aGUgYHNl
bGVjdG9yYCBlbGVtZW50IG9uY2UuCgojIyMjIC5tb3VzZXVwKHNlbGVjdG9y
KQoKTW91c2V1cHMgdGhlIGBzZWxlY3RvcmAgZWxlbWVudCBvbmNlLgoKIyMj
IyAubW91c2VvdmVyKHNlbGVjdG9yKQoKTW91c2VvdmVycyB0aGUgYHNlbGVj
dG9yYCBlbGVtZW50IG9uY2UuCgojIyMjIC5tb3VzZW91dChzZWxlY3RvcikK
Ck1vdXNlb3V0IHRoZSBgc2VsZWN0b3JgIGVsZW1lbnQgb25jZS4KCiMjIyMg
LnR5cGUoc2VsZWN0b3JbLCB0ZXh0XSkKCkVudGVycyB0aGUgYHRleHRgIHBy
b3ZpZGVkIGludG8gdGhlIGBzZWxlY3RvcmAgZWxlbWVudC4gRW1wdHkgb3Ig
ZmFsc2V5IHZhbHVlcyBwcm92aWRlZCBmb3IgYHRleHRgIHdpbGwgY2xlYXIg
dGhlIHNlbGVjdG9yJ3MgdmFsdWUuCgpgLnR5cGUoKWAgbWltaWNzIGEgdXNl
ciB0eXBpbmcgaW4gYSB0ZXh0Ym94IGFuZCB3aWxsIGVtaXQgdGhlIHByb3Bl
ciBrZXlib2FyZCBldmVudHMuCgpLZXkgcHJlc3NlcyBjYW4gYWxzbyBiZSBm
aXJlZCB1c2luZyBVbmljb2RlIHZhbHVlcyB3aXRoIGAudHlwZSgpYC4gRm9y
IGV4YW1wbGUsIGlmIHlvdSB3YW50ZWQgdG8gZmlyZSBhbiBlbnRlciBrZXkg
cHJlc3MsIHlvdSB3b3VsZCB3cml0ZSBgLnR5cGUoJ2JvZHknLCAnXHUwMDBk
JylgLgoKPiBJZiB5b3UgZG9uJ3QgbmVlZCB0aGUga2V5Ym9hcmQgZXZlbnRz
LCBjb25zaWRlciB1c2luZyBgLmluc2VydCgpYCBpbnN0ZWFkIGFzIGl0IHdp
bGwgYmUgZmFzdGVyIGFuZCBtb3JlIHJvYnVzdC4KCiMjIyMgLmluc2VydChz
ZWxlY3RvclssIHRleHRdKQoKU2ltaWxhciB0byBgLnR5cGUoKWAsIGAuaW5z
ZXJ0KClgIGVudGVycyB0aGUgYHRleHRgIHByb3ZpZGVkIGludG8gdGhlIGBz
ZWxlY3RvcmAgZWxlbWVudC4gRW1wdHkgb3IgZmFsc2V5IHZhbHVlcyBwcm92
aWRlZCBmb3IgYHRleHRgIHdpbGwgY2xlYXIgdGhlIHNlbGVjdG9yJ3MgdmFs
dWUuCgpgLmluc2VydCgpYCBpcyBmYXN0ZXIgdGhhbiBgLnR5cGUoKWAgYnV0
IGRvZXMgbm90IHRyaWdnZXIgdGhlIGtleWJvYXJkIGV2ZW50cy4KCiMjIyMg
LmNoZWNrKHNlbGVjdG9yKQoKQ2hlY2tzIHRoZSBgc2VsZWN0b3JgIGNoZWNr
Ym94IGVsZW1lbnQuCgojIyMjIC51bmNoZWNrKHNlbGVjdG9yKQoKVW5jaGVj
a3MgdGhlIGBzZWxlY3RvcmAgY2hlY2tib3ggZWxlbWVudC4KCiMjIyMgLnNl
bGVjdChzZWxlY3Rvciwgb3B0aW9uKQoKQ2hhbmdlcyB0aGUgYHNlbGVjdG9y
YCBkcm9wZG93biBlbGVtZW50IHRvIHRoZSBvcHRpb24gd2l0aCBhdHRyaWJ1
dGUgW3ZhbHVlPWBvcHRpb25gXQoKIyMjIyAuc2Nyb2xsVG8odG9wLCBsZWZ0
KQoKU2Nyb2xscyB0aGUgcGFnZSB0byBkZXNpcmVkIHBvc2l0aW9uLiBgdG9w
YCBhbmQgYGxlZnRgIGFyZSBhbHdheXMgcmVsYXRpdmUgdG8gdGhlIHRvcCBs
ZWZ0IGNvcm5lciBvZiB0aGUgZG9jdW1lbnQuCgojIyMjIC52aWV3cG9ydCh3
aWR0aCwgaGVpZ2h0KQoKU2V0cyB0aGUgdmlld3BvcnQgc2l6ZS4KCiMjIyMg
LmluamVjdCh0eXBlLCBmaWxlKQoKSW5qZWN0cyBhIGxvY2FsIGBmaWxlYCBv
bnRvIHRoZSBjdXJyZW50IHBhZ2UuIFRoZSBmaWxlIGB0eXBlYCBtdXN0IGJl
IGVpdGhlciBganNgIG9yIGBjc3NgLgoKIyMjIyAuZXZhbHVhdGUoZm5bLCBh
cmcxLCBhcmcyLC4uLl0pCgpJbnZva2VzIGBmbmAgb24gdGhlIHBhZ2Ugd2l0
aCBgYXJnMSwgYXJnMiwuLi5gLiBBbGwgdGhlIGBhcmdzYCBhcmUgb3B0aW9u
YWwuIE9uIGNvbXBsZXRpb24gaXQgcmV0dXJucyB0aGUgcmV0dXJuIHZhbHVl
IG9mIGBmbmAuIFVzZWZ1bCBmb3IgZXh0cmFjdGluZyBpbmZvcm1hdGlvbiBm
cm9tIHRoZSBwYWdlLiBIZXJlJ3MgYW4gZXhhbXBsZToKCmBgYGpzCmNvbnN0
IHNlbGVjdG9yID0gJ2gxJwpuaWdodG1hcmUKICAuZXZhbHVhdGUoc2VsZWN0
b3IgPT4gewogICAgLy8gbm93IHdlJ3JlIGV4ZWN1dGluZyBpbnNpZGUgdGhl
IGJyb3dzZXIgc2NvcGUuCiAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxl
Y3RvcihzZWxlY3RvcikuaW5uZXJUZXh0CiAgfSwgc2VsZWN0b3IpIC8vIDwt
LSB0aGF0J3MgaG93IHlvdSBwYXNzIHBhcmFtZXRlcnMgZnJvbSBOb2RlIHNj
b3BlIHRvIGJyb3dzZXIgc2NvcGUKICAudGhlbih0ZXh0ID0+IHsKICAgIC8v
IC4uLgogIH0pCmBgYAoKRXJyb3ItZmlyc3QgY2FsbGJhY2tzIGFyZSBzdXBw
b3J0ZWQgYXMgYSBwYXJ0IG9mIGBldmFsdWF0ZSgpYC4gSWYgdGhlIGFyZ3Vt
ZW50cyBwYXNzZWQgYXJlIG9uZSBmZXdlciB0aGFuIHRoZSBhcmd1bWVudHMg
ZXhwZWN0ZWQgZm9yIHRoZSBldmFsdWF0ZWQgZnVuY3Rpb24sIHRoZSBldmFs
dWF0aW9uIHdpbGwgYmUgcGFzc2VkIGEgY2FsbGJhY2sgYXMgdGhlIGxhc3Qg
cGFyYW1ldGVyIHRvIHRoZSBmdW5jdGlvbi4gRm9yIGV4YW1wbGU6CgpgYGBq
cwpjb25zdCBzZWxlY3RvciA9ICdoMScKbmlnaHRtYXJlCiAgLmV2YWx1YXRl
KChzZWxlY3RvciwgZG9uZSkgPT4gewogICAgLy8gbm93IHdlJ3JlIGV4ZWN1
dGluZyBpbnNpZGUgdGhlIGJyb3dzZXIgc2NvcGUuCiAgICBzZXRUaW1lb3V0
KAogICAgICAoKSA9PiBkb25lKG51bGwsIGRvY3VtZW50LnF1ZXJ5U2VsZWN0
b3Ioc2VsZWN0b3IpLmlubmVyVGV4dCksCiAgICAgIDIwMDAKICAgICkKICB9
LCBzZWxlY3RvcikKICAudGhlbih0ZXh0ID0+IHsKICAgIC8vIC4uLgogIH0p
CmBgYAoKTm90ZSB0aGF0IGNhbGxiYWNrcyBzdXBwb3J0IG9ubHkgb25lIHZh
bHVlIGFyZ3VtZW50IChlZyBgZnVuY3Rpb24oZXJyLCB2YWx1ZSlgKS4gVWx0
aW1hdGVseSwgdGhlIGNhbGxiYWNrIHdpbGwgZ2V0IHdyYXBwZWQgaW4gYSBu
YXRpdmUgUHJvbWlzZSBhbmQgb25seSBiZSBhYmxlIHRvIHJlc29sdmUgYSBz
aW5nbGUgdmFsdWUuCgpQcm9taXNlcyBhcmUgYWxzbyBzdXBwb3J0ZWQgYXMg
YSBwYXJ0IG9mIGBldmFsdWF0ZSgpYC4gSWYgdGhlIHJldHVybiB2YWx1ZSBv
ZiB0aGUgZnVuY3Rpb24gaGFzIGEgYHRoZW5gIG1lbWJlciwgYC5ldmFsdWF0
ZSgpYCBhc3N1bWVzIGl0IGlzIHdhaXRpbmcgZm9yIGEgcHJvbWlzZS4gRm9y
IGV4YW1wbGU6CgpgYGBqcwpjb25zdCBzZWxlY3RvciA9ICdoMSc7Cm5pZ2h0
bWFyZQogIC5ldmFsdWF0ZSgoc2VsZWN0b3IpID0+ICgKICAgIG5ldyBQcm9t
aXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgc2V0VGltZW91dCgo
KSA9PiByZXNvbHZlKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3Ip
LmlubmVyVGV4dCksIDIwMDApOwogICAgKX0sIHNlbGVjdG9yKQogICkKICAu
dGhlbigodGV4dCkgPT4gewogICAgLy8gLi4uCiAgfSkKYGBgCgojIyMjIC53
YWl0KG1zKQoKV2FpdHMgZm9yIGBtc2AgbWlsbGlzZWNvbmRzIGUuZy4gYC53
YWl0KDUwMDApYC4KCiMjIyMgLndhaXQoc2VsZWN0b3IpCgpXYWl0cyB1bnRp
bCB0aGUgZWxlbWVudCBgc2VsZWN0b3JgIGlzIHByZXNlbnQgZS5nLiBgLndh
aXQoJyNwYXktYnV0dG9uJylgLgoKIyMjIyAud2FpdChmblssIGFyZzEsIGFy
ZzIsLi4uXSkKCldhaXRzIHVudGlsIHRoZSBgZm5gIGV2YWx1YXRlZCBvbiB0
aGUgcGFnZSB3aXRoIGBhcmcxLCBhcmcyLC4uLmAgcmV0dXJucyBgdHJ1ZWAu
IEFsbCB0aGUgYGFyZ3NgIGFyZSBvcHRpb25hbC4gU2VlIGAuZXZhbHVhdGUo
KWAgZm9yIHVzYWdlLgoKIyMjIyAuaGVhZGVyKGhlYWRlciwgdmFsdWUpCgpB
ZGRzIGEgaGVhZGVyIG92ZXJyaWRlIGZvciBhbGwgSFRUUCByZXF1ZXN0cy4g
SWYgYGhlYWRlcmAgaXMgdW5kZWZpbmVkLCB0aGUgaGVhZGVyIG92ZXJyaWRl
cyB3aWxsIGJlIHJlc2V0LgoKIyMjIEV4dHJhY3QgZnJvbSB0aGUgUGFnZQoK
IyMjIyAuZXhpc3RzKHNlbGVjdG9yKQoKUmV0dXJucyB3aGV0aGVyIHRoZSBz
ZWxlY3RvciBleGlzdHMgb3Igbm90IG9uIHRoZSBwYWdlLgoKIyMjIyAudmlz
aWJsZShzZWxlY3RvcikKClJldHVybnMgd2hldGhlciB0aGUgc2VsZWN0b3Ig
aXMgdmlzaWJsZSBvciBub3QuCgojIyMjIC5vbihldmVudCwgY2FsbGJhY2sp
CgpDYXB0dXJlcyBwYWdlIGV2ZW50cyB3aXRoIHRoZSBjYWxsYmFjay4gWW91
IGhhdmUgdG8gY2FsbCBgLm9uKClgIGJlZm9yZSBjYWxsaW5nIGAuZ290bygp
YC4gU3VwcG9ydGVkIGV2ZW50cyBhcmUgW2RvY3VtZW50ZWQgaGVyZV0oaHR0
cDovL2VsZWN0cm9uLmF0b20uaW8vZG9jcy9hcGkvd2ViLWNvbnRlbnRzLyNj
bGFzcy13ZWJjb250ZW50cykuCgojIyMjIyBBZGRpdGlvbmFsICJwYWdlIiBl
dmVudHMKCiMjIyMjIyAub24oJ3BhZ2UnLCBmdW5jdGlvbih0eXBlPSJlcnJv
ciIsIG1lc3NhZ2UsIHN0YWNrKSkKClRoaXMgZXZlbnQgaXMgdHJpZ2dlcmVk
IGlmIGFueSBqYXZhc2NyaXB0IGV4Y2VwdGlvbiBpcyB0aHJvd24gb24gdGhl
IHBhZ2UuIEJ1dCB0aGlzIGV2ZW50IGlzIG5vdCB0cmlnZ2VyZWQgaWYgdGhl
IGluamVjdGVkIGphdmFzY3JpcHQgY29kZSAoZS5nLiB2aWEgYC5ldmFsdWF0
ZSgpYCkgaXMgdGhyb3dpbmcgYW4gZXhjZXB0aW9uLgoKIyMjIyMgInBhZ2Ui
IGV2ZW50cwoKTGlzdGVucyBmb3IgYHdpbmRvdy5hZGRFdmVudExpc3RlbmVy
KCdlcnJvcicpYCwgYGFsZXJ0KC4uLilgLCBgcHJvbXB0KC4uLilgICYgYGNv
bmZpcm0oLi4uKWAuCgojIyMjIyMgLm9uKCdwYWdlJywgZnVuY3Rpb24odHlw
ZT0iZXJyb3IiLCBtZXNzYWdlLCBzdGFjaykpCgpMaXN0ZW5zIGZvciB0b3At
bGV2ZWwgcGFnZSBlcnJvcnMuIFRoaXMgd2lsbCBnZXQgdHJpZ2dlcmVkIHdo
ZW4gYW4gZXJyb3IgaXMgdGhyb3duIG9uIHRoZSBwYWdlLgoKIyMjIyMjIC5v
bigncGFnZScsIGZ1bmN0aW9uKHR5cGU9ImFsZXJ0IiwgbWVzc2FnZSkpCgpO
aWdodG1hcmUgZGlzYWJsZXMgYHdpbmRvdy5hbGVydGAgZnJvbSBwb3BwaW5n
IHVwIGJ5IGRlZmF1bHQsIGJ1dCB5b3UgY2FuIHN0aWxsIGxpc3RlbiBmb3Ig
dGhlIGNvbnRlbnRzIG9mIHRoZSBhbGVydCBkaWFsb2cuCgojIyMjIyMgLm9u
KCdwYWdlJywgZnVuY3Rpb24odHlwZT0icHJvbXB0IiwgbWVzc2FnZSwgcmVz
cG9uc2UpKQoKTmlnaHRtYXJlIGRpc2FibGVzIGB3aW5kb3cucHJvbXB0YCBm
cm9tIHBvcHBpbmcgdXAgYnkgZGVmYXVsdCwgYnV0IHlvdSBjYW4gc3RpbGwg
bGlzdGVuIGZvciB0aGUgbWVzc2FnZSB0byBjb21lIHVwLiBJZiB5b3UgbmVl
ZCB0byBoYW5kbGUgdGhlIGNvbmZpcm1hdGlvbiBkaWZmZXJlbnRseSwgeW91
J2xsIG5lZWQgdG8gdXNlIHlvdXIgb3duIHByZWxvYWQgc2NyaXB0LgoKIyMj
IyMjIC5vbigncGFnZScsIGZ1bmN0aW9uKHR5cGU9ImNvbmZpcm0iLCBtZXNz
YWdlLCByZXNwb25zZSkpCgpOaWdodG1hcmUgZGlzYWJsZXMgYHdpbmRvdy5j
b25maXJtYCBmcm9tIHBvcHBpbmcgdXAgYnkgZGVmYXVsdCwgYnV0IHlvdSBj
YW4gc3RpbGwgbGlzdGVuIGZvciB0aGUgbWVzc2FnZSB0byBjb21lIHVwLiBJ
ZiB5b3UgbmVlZCB0byBoYW5kbGUgdGhlIGNvbmZpcm1hdGlvbiBkaWZmZXJl
bnRseSwgeW91J2xsIG5lZWQgdG8gdXNlIHlvdXIgb3duIHByZWxvYWQgc2Ny
aXB0LgoKIyMjIyMjIC5vbignY29uc29sZScsIGZ1bmN0aW9uKHR5cGUgWywg
YXJndW1lbnRzLCAuLi5dKSkKCmB0eXBlYCB3aWxsIGJlIGVpdGhlciBgbG9n
YCwgYHdhcm5gIG9yIGBlcnJvcmAgYW5kIGBhcmd1bWVudHNgIGFyZSB3aGF0
IGdldHMgcGFzc2VkIGZyb20gdGhlIGNvbnNvbGUuIFRoaXMgZXZlbnQgaXMg
bm90IHRyaWdnZXJlZCBpZiB0aGUgaW5qZWN0ZWQgamF2YXNjcmlwdCBjb2Rl
IChlLmcuIHZpYSBgLmV2YWx1YXRlKClgKSBpcyB1c2luZyBgY29uc29sZS5s
b2dgLgoKIyMjIyAub25jZShldmVudCwgY2FsbGJhY2spCgpTaW1pbGFyIHRv
IGAub24oKWAsIGJ1dCBjYXB0dXJlcyBwYWdlIGV2ZW50cyB3aXRoIHRoZSBj
YWxsYmFjayBvbmUgdGltZS4KCiMjIyMgLnJlbW92ZUxpc3RlbmVyKGV2ZW50
LCBjYWxsYmFjaykKClJlbW92ZXMgYSBnaXZlbiBsaXN0ZW5lciBjYWxsYmFj
ayBmb3IgYW4gZXZlbnQuCgojIyMjIC5zY3JlZW5zaG90KFtwYXRoXVssIGNs
aXBdKQoKVGFrZXMgYSBzY3JlZW5zaG90IG9mIHRoZSBjdXJyZW50IHBhZ2Uu
IFVzZWZ1bCBmb3IgZGVidWdnaW5nLiBUaGUgb3V0cHV0IGlzIGFsd2F5cyBh
IGBwbmdgLiBCb3RoIGFyZ3VtZW50cyBhcmUgb3B0aW9uYWwuIElmIGBwYXRo
YCBpcyBwcm92aWRlZCwgaXQgc2F2ZXMgdGhlIGltYWdlIHRvIHRoZSBkaXNr
LiBPdGhlcndpc2UgaXQgcmV0dXJucyBhIGBCdWZmZXJgIG9mIHRoZSBpbWFn
ZSBkYXRhLiBJZiBgY2xpcGAgaXMgcHJvdmlkZWQgKGFzIFtkb2N1bWVudGVk
IGhlcmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9hdG9tL2VsZWN0cm9uL2Jsb2Iv
bWFzdGVyL2RvY3MvYXBpL2Jyb3dzZXItd2luZG93Lm1kI3dpbmNhcHR1cmVw
YWdlcmVjdC1jYWxsYmFjaykpLCB0aGUgaW1hZ2Ugd2lsbCBiZSBjbGlwcGVk
IHRvIHRoZSByZWN0YW5nbGUuCgojIyMjIC5odG1sKHBhdGgsIHNhdmVUeXBl
KQoKU2F2ZXMgdGhlIGN1cnJlbnQgcGFnZSBhcyBodG1sIGFzIGZpbGVzIHRv
IGRpc2sgYXQgdGhlIGdpdmVuIHBhdGguIFNhdmUgdHlwZSBvcHRpb25zIGFy
ZSBbaGVyZV0oaHR0cHM6Ly9naXRodWIuY29tL2F0b20vZWxlY3Ryb24vYmxv
Yi9tYXN0ZXIvZG9jcy9hcGkvd2ViLWNvbnRlbnRzLm1kI3dlYmNvbnRlbnRz
c2F2ZXBhZ2VmdWxscGF0aC1zYXZldHlwZS1jYWxsYmFjaykuCgojIyMjIC5w
ZGYocGF0aCwgb3B0aW9ucykKClNhdmVzIGEgUERGIHRvIHRoZSBzcGVjaWZp
ZWQgYHBhdGhgLiBPcHRpb25zIGFyZSBbaGVyZV0oaHR0cHM6Ly9naXRodWIu
Y29tL2VsZWN0cm9uL2VsZWN0cm9uL2Jsb2IvdjEuNC40L2RvY3MvYXBpL3dl
Yi1jb250ZW50cy5tZCNjb250ZW50c3ByaW50dG9wZGZvcHRpb25zLWNhbGxi
YWNrKS4KCiMjIyMgLnRpdGxlKCkKClJldHVybnMgdGhlIHRpdGxlIG9mIHRo
ZSBjdXJyZW50IHBhZ2UuCgojIyMjIC51cmwoKQoKUmV0dXJucyB0aGUgdXJs
IG9mIHRoZSBjdXJyZW50IHBhZ2UuCgojIyMjIC5wYXRoKCkKClJldHVybnMg
dGhlIHBhdGggbmFtZSBvZiB0aGUgY3VycmVudCBwYWdlLgoKIyMjIENvb2tp
ZXMKCiMjIyMgLmNvb2tpZXMuZ2V0KG5hbWUpCgpHZXRzIGEgY29va2llIGJ5
IGl0J3MgYG5hbWVgLiBUaGUgdXJsIHdpbGwgYmUgdGhlIGN1cnJlbnQgdXJs
LgoKIyMjIyAuY29va2llcy5nZXQocXVlcnkpCgpRdWVyaWVzIG11bHRpcGxl
IGNvb2tpZXMgd2l0aCB0aGUgYHF1ZXJ5YCBvYmplY3QuIElmIGEgYHF1ZXJ5
Lm5hbWVgIGlzIHNldCwgaXQgd2lsbCByZXR1cm4gdGhlIGZpcnN0IGNvb2tp
ZSBpdCBmaW5kcyB3aXRoIHRoYXQgbmFtZSwgb3RoZXJ3aXNlIGl0IHdpbGwg
cXVlcnkgZm9yIGFuIGFycmF5IG9mIGNvb2tpZXMuIElmIG5vIGBxdWVyeS51
cmxgIGlzIHNldCwgaXQgd2lsbCB1c2UgdGhlIGN1cnJlbnQgdXJsLiBIZXJl
J3MgYW4gZXhhbXBsZToKCmBgYGpzCi8vIGdldCBhbGwgZ29vZ2xlIGNvb2tp
ZXMgdGhhdCBhcmUgc2VjdXJlCi8vIGFuZCBoYXZlIHRoZSBwYXRoIGAvcXVl
cnlgCm5pZ2h0bWFyZQogIC5nb3RvKCdodHRwOi8vZ29vZ2xlLmNvbScpCiAg
LmNvb2tpZXMuZ2V0KHsKICAgIHBhdGg6ICcvcXVlcnknLAogICAgc2VjdXJl
OiB0cnVlCiAgfSkKICAudGhlbihjb29raWVzID0+IHsKICAgIC8vIGRvIHNv
bWV0aGluZyB3aXRoIHRoZSBjb29raWVzCiAgfSkKYGBgCgpBdmFpbGFibGUg
cHJvcGVydGllcyBhcmUgZG9jdW1lbnRlZCBoZXJlOiBodHRwczovL2dpdGh1
Yi5jb20vYXRvbS9lbGVjdHJvbi9ibG9iL21hc3Rlci9kb2NzL2FwaS9zZXNz
aW9uLm1kI3Nlc2Nvb2tpZXNnZXRkZXRhaWxzLWNhbGxiYWNrCgojIyMjIC5j
b29raWVzLmdldCgpCgpHZXRzIGFsbCB0aGUgY29va2llcyBmb3IgdGhlIGN1
cnJlbnQgdXJsLiBJZiB5b3UnZCBsaWtlIGdldCBhbGwgY29va2llcyBmb3Ig
YWxsIHVybHMsIHVzZTogYC5nZXQoeyB1cmw6IG51bGwgfSlgLgoKIyMjIyAu
Y29va2llcy5zZXQobmFtZSwgdmFsdWUpCgpTZXRzIGEgY29va2llJ3MgYG5h
bWVgIGFuZCBgdmFsdWVgLiBUaGlzIGlzIHRoZSBtb3N0IGJhc2ljIGZvcm0s
IGFuZCB0aGUgdXJsIHdpbGwgYmUgdGhlIGN1cnJlbnQgdXJsLgoKIyMjIyAu
Y29va2llcy5zZXQoY29va2llKQoKU2V0cyBhIGBjb29raWVgLiBJZiBgY29v
a2llLnVybGAgaXMgbm90IHNldCwgaXQgd2lsbCBzZXQgdGhlIGNvb2tpZSBv
biB0aGUgY3VycmVudCB1cmwuIEhlcmUncyBhbiBleGFtcGxlOgoKYGBganMK
bmlnaHRtYXJlCiAgLmdvdG8oJ2h0dHA6Ly9nb29nbGUuY29tJykKICAuY29v
a2llcy5zZXQoewogICAgbmFtZTogJ3Rva2VuJywKICAgIHZhbHVlOiAnc29t
ZSB0b2tlbicsCiAgICBwYXRoOiAnL3F1ZXJ5JywKICAgIHNlY3VyZTogdHJ1
ZQogIH0pCiAgLy8gLi4uIG90aGVyIGFjdGlvbnMgLi4uCiAgLnRoZW4oKCkg
PT4gewogICAgLy8gLi4uCiAgfSkKYGBgCgpBdmFpbGFibGUgcHJvcGVydGll
cyBhcmUgZG9jdW1lbnRlZCBoZXJlOiBodHRwczovL2dpdGh1Yi5jb20vYXRv
bS9lbGVjdHJvbi9ibG9iL21hc3Rlci9kb2NzL2FwaS9zZXNzaW9uLm1kI3Nl
c2Nvb2tpZXNzZXRkZXRhaWxzLWNhbGxiYWNrCgojIyMjIC5jb29raWVzLnNl
dChjb29raWVzKQoKU2V0cyBtdWx0aXBsZSBjb29raWVzIGF0IG9uY2UuIGBj
b29raWVzYCBpcyBhbiBhcnJheSBvZiBgY29va2llYCBvYmplY3RzLiBUYWtl
IGEgbG9vayBhdCB0aGUgYC5jb29raWVzLnNldChjb29raWUpYCBkb2N1bWVu
dGF0aW9uIGFib3ZlIGZvciBhIGJldHRlciBpZGVhIG9mIHdoYXQgYGNvb2tp
ZWAgc2hvdWxkIGxvb2sgbGlrZS4KCiMjIyMgLmNvb2tpZXMuY2xlYXIoW25h
bWVdKQoKQ2xlYXJzIGEgY29va2llIGZvciB0aGUgY3VycmVudCBkb21haW4u
IElmIGBuYW1lYCBpcyBub3Qgc3BlY2lmaWVkLCBhbGwgY29va2llcyBmb3Ig
dGhlIGN1cnJlbnQgZG9tYWluIHdpbGwgYmUgY2xlYXJlZC4KCmBgYGpzCm5p
Z2h0bWFyZQogIC5nb3RvKCdodHRwOi8vZ29vZ2xlLmNvbScpCiAgLmNvb2tp
ZXMuY2xlYXIoJ1NvbWVDb29raWVOYW1lJykKICAvLyAuLi4gb3RoZXIgYWN0
aW9ucyAuLi4KICAudGhlbigoKSA9PiB7CiAgICAvLyAuLi4KICB9KQpgYGAK
CiMjIyMgLmNvb2tpZXMuY2xlYXJBbGwoKQoKQ2xlYXJzIGFsbCBjb29raWVz
IGZvciBhbGwgZG9tYWlucy4KCmBgYGpzCm5pZ2h0bWFyZQogIC5nb3RvKCdo
dHRwOi8vZ29vZ2xlLmNvbScpCiAgLmNvb2tpZXMuY2xlYXJBbGwoKQogIC8v
IC4uLiBvdGhlciBhY3Rpb25zIC4uLgogIC50aGVuKCgpID0+IHsKICAgIC8v
Li4uCiAgfSkKYGBgCgojIyMgUHJveGllcwoKUHJveGllcyBhcmUgc3VwcG9y
dGVkIGluIE5pZ2h0bWFyZSB0aHJvdWdoIFtzd2l0Y2hlc10oI3N3aXRjaGVz
KS4KCklmIHlvdXIgcHJveHkgcmVxdWlyZXMgYXV0aGVudGljYXRpb24geW91
IGFsc28gbmVlZCB0aGUgW2F1dGhlbnRpY2F0aW9uXSgjYXV0aGVudGljYXRp
b251c2VyLXBhc3N3b3JkKSBjYWxsLgoKVGhlIGZvbGxvd2luZyBleGFtcGxl
IG5vdCBvbmx5IGRlbW9uc3RyYXRlcyBob3cgdG8gdXNlIHByb3hpZXMsIGJ1
dCB5b3UgY2FuIHJ1biBpdCB0byB0ZXN0IGlmIHlvdXIgcHJveHkgY29ubmVj
dGlvbiBpcyB3b3JraW5nOgoKYGBganMKaW1wb3J0IE5pZ2h0bWFyZSBmcm9t
ICduaWdodG1hcmUnOwoKY29uc3QgcHJveHlOaWdodG1hcmUgPSBOaWdodG1h
cmUoewogIHN3aXRjaGVzOiB7CiAgICAncHJveHktc2VydmVyJzogJ215X3By
b3h5X3NlcnZlci5leGFtcGxlLmNvbTo4MDgwJyAvLyBzZXQgdGhlIHByb3h5
IHNlcnZlciBoZXJlIC4uLgogIH0sCiAgc2hvdzogdHJ1ZQp9KTsKCnByb3h5
TmlnaHRtYXJlCiAgLmF1dGhlbnRpY2F0aW9uKCdwcm94eVVzZXJuYW1lJywg
J3Byb3h5UGFzc3dvcmQnKSAvLyAuLi4gYW5kIGF1dGhlbnRpY2F0ZSBoZXJl
IGJlZm9yZSBgZ290b2AKICAuZ290bygnaHR0cDovL3d3dy5pcGNoaWNrZW4u
Y29tJykKICAuZXZhbHVhdGUoKCkgPT4gewogICAgcmV0dXJuIGRvY3VtZW50
LnF1ZXJ5U2VsZWN0b3IoJ2InKS5pbm5lclRleHQucmVwbGFjZSgvW15cZFwu
XS9nLCAnJyk7CiAgfSkKICAuZW5kKCkKICAudGhlbigoaXApID0+IHsgLy8g
VGhpcyB3aWxsIGxvZyB0aGUgUHJveHkncyBJUAogICAgY29uc29sZS5sb2co
J3Byb3h5IElQOicsIGlwKTsKICB9KTsKCi8vIFRoZSByZXN0IGlzIGp1c3Qg
bm9ybWFsIE5pZ2h0bWFyZSB0byBnZXQgeW91ciBsb2NhbCBJUApjb25zdCBy
ZWd1bGFyTmlnaHRtYXJlID0gTmlnaHRtYXJlKHsgc2hvdzogdHJ1ZSB9KTsK
CnJlZ3VsYXJOaWdodG1hcmUKICAuZ290bygnaHR0cDovL3d3dy5pcGNoaWNr
ZW4uY29tJykKICAuZXZhbHVhdGUoKCkgPT4KICAgIGRvY3VtZW50LnF1ZXJ5
U2VsZWN0b3IoJ2InKS5pbm5lclRleHQucmVwbGFjZSgvW15cZFwuXS9nLCAn
Jyk7CiAgKQogIC5lbmQoKQogIC50aGVuKChpcCkgPT4geyAvLyBUaGlzIHdp
bGwgbG9nIHRoZSB5b3VyIGxvY2FsIElQCiAgICBjb25zb2xlLmxvZygnbG9j
YWwgSVA6JywgaXApOwogIH0pOwpgYGAKCiMjIyBQcm9taXNlcwoKQnkgZGVm
YXVsdCwgTmlnaHRtYXJlIHVzZXMgZGVmYXVsdCBuYXRpdmUgRVM2IHByb21p
c2VzLiBZb3UgY2FuIHBsdWcgaW4geW91ciBmYXZvcml0ZSBbRVM2LXN0eWxl
IHByb21pc2VzIGxpYnJhcnldKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEu
b3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2Jh
bF9PYmplY3RzL1Byb21pc2UpIGxpa2UgW2JsdWViaXJkXShodHRwczovL3d3
dy5ucG1qcy5jb20vcGFja2FnZS9ibHVlYmlyZCkgb3IgW3FdKGh0dHBzOi8v
d3d3Lm5wbWpzLmNvbS9wYWNrYWdlL3EpIGZvciBjb252ZW5pZW5jZSEKCkhl
cmUncyBhbiBleGFtcGxlOgoKYGBganMKdmFyIE5pZ2h0bWFyZSA9IHJlcXVp
cmUoJ25pZ2h0bWFyZScpCgpOaWdodG1hcmUuUHJvbWlzZSA9IHJlcXVpcmUo
J2JsdWViaXJkJykKLy8gT1I6Ck5pZ2h0bWFyZS5Qcm9taXNlID0gcmVxdWly
ZSgncScpLlByb21pc2UKYGBgCgpZb3UgY2FuIGFsc28gc3BlY2lmeSBhIGN1
c3RvbSBQcm9taXNlIGxpYnJhcnkgcGVyLWluc3RhbmNlIHdpdGggdGhlIGBQ
cm9taXNlYCBjb25zdHJ1Y3RvciBvcHRpb24gbGlrZSBzbzoKCmBgYGpzCnZh
ciBOaWdodG1hcmUgPSByZXF1aXJlKCduaWdodG1hcmUnKQoKdmFyIGVzNk5p
Z2h0bWFyZSA9IE5pZ2h0bWFyZSgpCnZhciBibHVlYmlyZE5pZ2h0bWFyZSA9
IE5pZ2h0bWFyZSh7CiAgUHJvbWlzZTogcmVxdWlyZSgnYmx1ZWJpcmQnKQp9
KQoKdmFyIGVzNlByb21pc2UgPSBlczZOaWdodG1hcmUKICAuZ290bygnaHR0
cHM6Ly9naXRodWIuY29tL3NlZ21lbnRpby9uaWdodG1hcmUnKQogIC50aGVu
KCkKdmFyIGJsdWViaXJkUHJvbWlzZSA9IGJsdWViaXJkTmlnaHRtYXJlCiAg
LmdvdG8oJ2h0dHBzOi8vZ2l0aHViLmNvbS9zZWdtZW50aW8vbmlnaHRtYXJl
JykKICAudGhlbigpCgplczZQcm9taXNlLmlzRnVsZmlsbGVkKCkgLy8gdGhy
b3dzOiBgVHlwZUVycm9yOiBlczZFbmRQcm9taXNlLmlzRnVsZmlsbGVkIGlz
IG5vdCBhIGZ1bmN0aW9uYApibHVlYmlyZFByb21pc2UuaXNGdWxmaWxsZWQo
KSAvLyByZXR1cm5zOiBgdHJ1ZSB8IGZhbHNlYApgYGAKCiMjIyBFeHRlbmRp
bmcgTmlnaHRtYXJlCgojIyMjIE5pZ2h0bWFyZS5hY3Rpb24obmFtZSwgW2Vs
ZWN0cm9uQWN0aW9ufGVsZWN0cm9uTmFtZXNwYWNlXSwgYWN0aW9ufG5hbWVz
cGFjZSkKCllvdSBjYW4gYWRkIHlvdXIgb3duIGN1c3RvbSBhY3Rpb25zIHRv
IHRoZSBOaWdodG1hcmUgcHJvdG90eXBlLiBIZXJlJ3MgYW4gZXhhbXBsZToK
CmBgYGpzCk5pZ2h0bWFyZS5hY3Rpb24oJ3NpemUnLCBmdW5jdGlvbihkb25l
KSB7CiAgdGhpcy5ldmFsdWF0ZV9ub3coKCkgPT4gewogICAgY29uc3QgdyA9
IE1hdGgubWF4KAogICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xp
ZW50V2lkdGgsCiAgICAgIHdpbmRvdy5pbm5lcldpZHRoIHx8IDAKICAgICkK
ICAgIGNvbnN0IGggPSBNYXRoLm1heCgKICAgICAgZG9jdW1lbnQuZG9jdW1l
bnRFbGVtZW50LmNsaWVudEhlaWdodCwKICAgICAgd2luZG93LmlubmVySGVp
Z2h0IHx8IDAKICAgICkKICAgIHJldHVybiB7CiAgICAgIGhlaWdodDogaCwK
ICAgICAgd2lkdGg6IHcKICAgIH0KICB9LCBkb25lKQp9KQoKTmlnaHRtYXJl
KCkKICAuZ290bygnaHR0cDovL2Nubi5jb20nKQogIC5zaXplKCkKICAudGhl
bihzaXplID0+IHsKICAgIC8vLi4uIGRvIHNvbWV0aGluZyB3aXRoIHRoZSBz
aXplIGluZm9ybWF0aW9uCiAgfSkKYGBgCgo+IFJlbWVtYmVyLCB0aGlzIGlz
IGF0dGFjaGVkIHRvIHRoZSBzdGF0aWMgY2xhc3MgYE5pZ2h0bWFyZWAsIG5v
dCB0aGUgaW5zdGFuY2UuCgpZb3UnbGwgbm90aWNlIHdlIHVzZWQgYW4gaW50
ZXJuYWwgZnVuY3Rpb24gYGV2YWx1YXRlX25vd2AuIFRoaXMgZnVuY3Rpb24g
aXMgZGlmZmVyZW50IHRoYW4gYG5pZ2h0bWFyZS5ldmFsdWF0ZWAgYmVjYXVz
ZSBpdCBydW5zIGl0IGltbWVkaWF0ZWx5LCB3aGVyZWFzIGBuaWdodG1hcmUu
ZXZhbHVhdGVgIGlzIHF1ZXVlZC4KCkFuIGVhc3kgd2F5IHRvIHJlbWVtYmVy
OiB3aGVuIGluIGRvdWJ0LCB1c2UgYGV2YWx1YXRlYC4gSWYgeW91J3JlIGNy
ZWF0aW5nIGN1c3RvbSBhY3Rpb25zLCB1c2UgYGV2YWx1YXRlX25vd2AuIFRo
ZSB0ZWNobmljYWwgcmVhc29uIGlzIHRoYXQgc2luY2Ugb3VyIGFjdGlvbiBo
YXMgYWxyZWFkeSBiZWVuIHF1ZXVlZCBhbmQgd2UncmUgcnVubmluZyBpdCBu
b3csIHdlIHNob3VsZG4ndCByZS1xdWV1ZSB0aGUgZXZhbHVhdGUgZnVuY3Rp
b24uCgpXZSBjYW4gYWxzbyBjcmVhdGUgY3VzdG9tIG5hbWVzcGFjZXMuIFdl
IGRvIHRoaXMgaW50ZXJuYWxseSBmb3IgYG5pZ2h0bWFyZS5jb29raWVzLmdl
dGAgYW5kIGBuaWdodG1hcmUuY29va2llcy5zZXRgLiBUaGVzZSBhcmUgdXNl
ZnVsIGlmIHlvdSBoYXZlIGEgYnVuZGxlIG9mIGFjdGlvbnMgeW91IHdhbnQg
dG8gZXhwb3NlLCBidXQgaXQgd2lsbCBjbHV0dGVyIHVwIHRoZSBtYWluIG5p
Z2h0bWFyZSBvYmplY3QuIEhlcmUncyBhbiBleGFtcGxlIG9mIHRoYXQ6Cgpg
YGBqcwpOaWdodG1hcmUuYWN0aW9uKCdzdHlsZScsIHsKICBiYWNrZ3JvdW5k
KGRvbmUpIHsKICAgIHRoaXMuZXZhbHVhdGVfbm93KAogICAgICAoKSA9PiB3
aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShkb2N1bWVudC5ib2R5LCBudWxsKS5i
YWNrZ3JvdW5kQ29sb3IsCiAgICAgIGRvbmUKICAgICkKICB9Cn0pCgpOaWdo
dG1hcmUoKQogIC5nb3RvKCdodHRwOi8vZ29vZ2xlLmNvbScpCiAgLnN0eWxl
LmJhY2tncm91bmQoKQogIC50aGVuKGJhY2tncm91bmQgPT4gewogICAgLy8g
Li4uIGRvIHNvbWV0aGluZyBpbnRlcmVzdGluZyB3aXRoIGJhY2tncm91bmQK
ICB9KQpgYGAKCllvdSBjYW4gYWxzbyBhZGQgY3VzdG9tIEVsZWN0cm9uIGFj
dGlvbnMuIFRoZSBhZGRpdGlvbmFsIEVsZWN0cm9uIGFjdGlvbiBvciBuYW1l
c3BhY2UgYWN0aW9ucyB0YWtlIGBuYW1lYCwgYG9wdGlvbnNgLCBgcGFyZW50
YCwgYHdpbmAsIGByZW5kZXJlcmAsIGFuZCBgZG9uZWAuIE5vdGUgdGhlIEVs
ZWN0cm9uIGFjdGlvbiBjb21lcyBmaXJzdCwgbWlycm9yaW5nIGhvdyBgLmV2
YWx1YXRlKClgIHdvcmtzLiBGb3IgZXhhbXBsZToKCmBgYGphdmFzY3JpcHQK
TmlnaHRtYXJlLmFjdGlvbigKICAnY2xlYXJDYWNoZScsCiAgKG5hbWUsIG9w
dGlvbnMsIHBhcmVudCwgd2luLCByZW5kZXJlciwgZG9uZSkgPT4gewogICAg
cGFyZW50LnJlc3BvbmRUbygnY2xlYXJDYWNoZScsIGRvbmUgPT4gewogICAg
ICB3aW4ud2ViQ29udGVudHMuc2Vzc2lvbi5jbGVhckNhY2hlKGRvbmUpCiAg
ICB9KQogICAgZG9uZSgpCiAgfSwKICBmdW5jdGlvbihkb25lKSB7CiAgICB0
aGlzLmNoaWxkLmNhbGwoJ2NsZWFyQ2FjaGUnLCBkb25lKQogIH0KKQoKTmln
aHRtYXJlKCkKICAuY2xlYXJDYWNoZSgpCiAgLmdvdG8oJ2h0dHA6Ly9leGFt
cGxlLm9yZycpCiAgLy8uLi4gbW9yZSBhY3Rpb25zIC4uLgogIC50aGVuKCgp
ID0+IHsKICAgIC8vIC4uLgogIH0pCmBgYAoKLi4ud291bGQgY2xlYXIgdGhl
IGJyb3dzZXLigJlzIGNhY2hlIGJlZm9yZSBuYXZpZ2F0aW5nIHRvIGBleGFt
cGxlLm9yZ2AuCgpTZWUgW3RoaXMgZG9jdW1lbnRdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9yb3NzaGlua2xleS9uaWdodG1hcmUtZXhhbXBsZXMvYmxvYi9tYXN0
ZXIvZG9jcy9iZWdpbm5lci9hY3Rpb24ubWQpIGZvciBtb3JlIGRldGFpbHMg
b24gY3JlYXRpbmcgY3VzdG9tIGFjdGlvbnMuCgojIyMjIC51c2UocGx1Z2lu
KQoKYG5pZ2h0bWFyZS51c2VgIGlzIHVzZWZ1bCBmb3IgcmV1c2luZyBhIHNl
dCBvZiB0YXNrcyBvbiBhbiBpbnN0YW5jZS4gQ2hlY2sgb3V0IFtuaWdodG1h
cmUtc3dpZnRseV0oaHR0cHM6Ly9naXRodWIuY29tL3NlZ21lbnRpby9uaWdo
dG1hcmUtc3dpZnRseSkgZm9yIHNvbWUgZXhhbXBsZXMuCgojIyMjIEN1c3Rv
bSBwcmVsb2FkIHNjcmlwdAoKSWYgeW91IG5lZWQgdG8gZG8gc29tZXRoaW5n
IGN1c3RvbSB3aGVuIHlvdSBmaXJzdCBsb2FkIHRoZSB3aW5kb3cgZW52aXJv
bm1lbnQsIHlvdQpjYW4gc3BlY2lmeSBhIGN1c3RvbSBwcmVsb2FkIHNjcmlw
dC4gSGVyZSdzIGhvdyB5b3UgZG8gdGhhdDoKCmBgYGpzCmltcG9ydCBwYXRo
IGZyb20gJ3BhdGgnCgpjb25zdCBuaWdodG1hcmUgPSBOaWdodG1hcmUoewog
IHdlYlByZWZlcmVuY2VzOiB7CiAgICBwcmVsb2FkOiBwYXRoLnJlc29sdmUo
J2N1c3RvbS1zY3JpcHQuanMnKQogICAgLy9hbHRlcm5hdGl2ZTogcHJlbG9h
ZDogImFic29sdXRlL3BhdGgvdG8vY3VzdG9tLXNjcmlwdC5qcyIKICB9Cn0p
CmBgYAoKVGhlIG9ubHkgcmVxdWlyZW1lbnQgZm9yIHRoYXQgc2NyaXB0IGlz
IHRoYXQgeW91J2xsIG5lZWQgdGhlIGZvbGxvd2luZyBwcmVsdWRlOgoKYGBg
anMKd2luZG93Ll9fbmlnaHRtYXJlID0ge30KX19uaWdodG1hcmUuaXBjID0g
cmVxdWlyZSgnZWxlY3Ryb24nKS5pcGNSZW5kZXJlcgpgYGAKClRvIGJlbmVm
aXQgb2YgYWxsIG9mIG5pZ2h0bWFyZSdzIGZlZWRiYWNrIGZyb20gdGhlIGJy
b3dzZXIsIHlvdSBjYW4gaW5zdGVhZCBjb3B5IHRoZSBjb250ZW50cyBvZiBu
aWdodG1hcmUncyBbcHJlbG9hZCBzY3JpcHRdKGxpYi9wcmVsb2FkLmpzKS4K
CiMjIyMgU3RvcmFnZSBQZXJzaXN0ZW5jZSBiZXR3ZWVuIG5pZ2h0bWFyZSBp
bnN0YW5jZXMKCkJ5IGRlZmF1bHQgbmlnaHRtYXJlIHdpbGwgY3JlYXRlIGFu
IGluLW1lbW9yeSBwYXJ0aXRpb24gZm9yIGVhY2ggaW5zdGFuY2UuIFRoaXMg
bWVhbnMgdGhhdCBhbnkgbG9jYWxTdG9yYWdlIG9yIGNvb2tpZXMgb3IgYW55
IG90aGVyIGZvcm0gb2YgcGVyc2lzdGVudCBzdGF0ZSB3aWxsIGJlIGRlc3Ry
b3llZCB3aGVuIG5pZ2h0bWFyZSBpcyBlbmRlZC4gSWYgeW91IHdvdWxkIGxp
a2UgdG8gcGVyc2lzdCBzdGF0ZSBiZXR3ZWVuIGluc3RhbmNlcyB5b3UgY2Fu
IHVzZSB0aGUgW3dlYlByZWZlcmVuY2VzLnBhcnRpdGlvbl0oaHR0cDovL2Vs
ZWN0cm9uLmF0b20uaW8vZG9jcy9hcGkvYnJvd3Nlci13aW5kb3cvI25ldy1i
cm93c2Vyd2luZG93b3B0aW9ucykgYXBpIGluIGVsZWN0cm9uLgoKYGBganMK
aW1wb3J0IE5pZ2h0bWFyZSBmcm9tICduaWdodG1hcmUnOwoKbmlnaHRtYXJl
ID0gTmlnaHRtYXJlKCk7IC8vIG5vbiBwZXJzaXN0ZW50IHBhcml0aXRpb24g
YnkgZGVmYXVsdAp5aWVsZCBuaWdodG1hcmUKICAuZXZhbHVhdGUoKCkgPT4g
ewogICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCd0ZXN0aW5nJywg
J1RoaXMgd2lsbCBub3QgYmUgcGVyc2lzdGVkJyk7CiAgfSkKICAuZW5kKCk7
CgpuaWdodG1hcmUgPSBOaWdodG1hcmUoewogIHdlYlByZWZlcmVuY2VzOiB7
CiAgICBwYXJ0aXRpb246ICdwZXJzaXN0OiB0ZXN0aW5nJwogIH0KfSk7Cnlp
ZWxkIG5pZ2h0bWFyZQogIC5ldmFsdWF0ZSgoKSA9PiB7CiAgICB3aW5kb3cu
bG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Rlc3RpbmcnLCAnVGhpcyBpcyBwZXJz
aXN0ZWQgZm9yIG90aGVyIGluc3RhbmNlcyB3aXRoIHRoZSBzYW1lIHBhcml0
aXRpb24gbmFtZScpOwogIH0pCiAgLmVuZCgpOwpgYGAKCklmIHlvdSBzcGVj
aWZ5IGEgYG51bGxgIHBhcml0aXRpb24gdGhlbiBpdCB3aWxsIHVzZSB0aGUg
ZWxlY3Ryb24gZGVmYXVsdCBiZWhhdmlvciAocGVyc2lzdGVudCkgb3IgYW55
IHN0cmluZyB0aGF0IHN0YXJ0cyB3aXRoIGAncGVyc2lzdDonYCB3aWxsIHBl
cnNpc3QgdW5kZXIgdGhhdCBwYXJ0aXRpb24gbmFtZSwgYW55IG90aGVyIHN0
cmluZyB3aWxsIHJlc3VsdCBpbiBpbi1tZW1vcnkgb25seSBzdG9yYWdlLgoK
IyMgVXNhZ2UKCiMjIyMgSW5zdGFsbGF0aW9uCgpOaWdodG1hcmUgaXMgYSBO
b2RlLmpzIG1vZHVsZSwgc28geW91J2xsIG5lZWQgdG8gW2hhdmUgTm9kZS5q
cyBpbnN0YWxsZWRdKGh0dHA6Ly9ub2RlanMub3JnLykuIFRoZW4geW91IGp1
c3QgbmVlZCB0byBgbnBtIGluc3RhbGxgIHRoZSBtb2R1bGU6CgpgYGBiYXNo
CiQgbnBtIGluc3RhbGwgLS1zYXZlIG5pZ2h0bWFyZQpgYGAKCiMjIyMgRXhl
Y3V0aW9uCgpOaWdodG1hcmUgaXMgYSBub2RlIG1vZHVsZSB0aGF0IGNhbiBi
ZSB1c2VkIGluIGEgTm9kZS5qcyBzY3JpcHQgb3IgbW9kdWxlLiBIZXJlJ3Mg
YSBzaW1wbGUgc2NyaXB0IHRvIG9wZW4gYSB3ZWIgcGFnZToKCmBgYGpzCmlt
cG9ydCBOaWdodG1hcmUgZnJvbSAnbmlnaHRtYXJlJzsKCmNvbnN0IG5pZ2h0
bWFyZSA9IE5pZ2h0bWFyZSgpOwoKbmlnaHRtYXJlLmdvdG8oJ2h0dHA6Ly9j
bm4uY29tJykKICAuZXZhbHVhdGUoKCkgPT4gewogICAgcmV0dXJuIGRvY3Vt
ZW50LnRpdGxlOwogIH0pCiAgLmVuZCgpCiAgLnRoZW4oKHRpdGxlKSA9PiB7
CiAgICBjb25zb2xlLmxvZyh0aXRsZSk7CiAgfSkKYGBgCgpJZiB5b3Ugc2F2
ZSB0aGlzIGFzIGBjbm4uanNgLCB5b3UgY2FuIHJ1biBpdCBvbiB0aGUgY29t
bWFuZCBsaW5lIGxpa2UgdGhpczoKCmBgYGJhc2gKbnBtIGluc3RhbGwgLS1z
YXZlIG5pZ2h0bWFyZQpub2RlIGNubi5qcwpgYGAKCiMjIyMgQ29tbW9uIEV4
ZWN1dGlvbiBQcm9ibGVtcwoKTmlnaHRtYXJlIGhlYXZpbHkgcmVsaWVzIG9u
IFtFbGVjdHJvbl0oaHR0cDovL2VsZWN0cm9uLmF0b20uaW8vKSBmb3IgaGVh
dnkgbGlmdGluZy4gQW5kIEVsZWN0cm9uIGluIHR1cm4gcmVsaWVzIG9uIHNl
dmVyYWwgVUktZm9jdXNlZCBkZXBlbmRlbmNpZXMgKGVnLiBsaWJndGsrKSB3
aGljaCBhcmUgb2Z0ZW4gbWlzc2luZyBmcm9tIHNlcnZlciBkaXN0cm9zLgoK
Rm9yIGhlbHAgcnVubmluZyBuaWdodG1hcmUgb24geW91ciBzZXJ2ZXIgZGlz
dHJvIGNoZWNrIG91dCBbSG93IHRvIHJ1biBuaWdodG1hcmUgb24gQW1hem9u
IExpbnV4IGFuZCBDZW50T1NdKGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL2Rp
bWtpci9mNGFmZGU3NzM2NmZmMDQxYjY2ZDIyNTJiNDVhMTNkYikgZ3VpZGUu
CgojIyMjIERlYnVnZ2luZwoKVGhlcmUgYXJlIHRocmVlIGdvb2Qgd2F5cyB0
byBnZXQgbW9yZSBpbmZvcm1hdGlvbiBhYm91dCB3aGF0J3MgaGFwcGVuaW5n
IGluc2lkZSB0aGUgaGVhZGxlc3MgYnJvd3NlcjoKCjEuIFVzZSB0aGUgYERF
QlVHPSpgIGZsYWcgZGVzY3JpYmVkIGJlbG93LgoyLiBQYXNzIGB7IHNob3c6
IHRydWUgfWAgdG8gdGhlIFtuaWdodG1hcmUgY29uc3RydWN0b3JdKCNuaWdo
dG1hcmVvcHRpb25zKSB0byBoYXZlIGl0IGNyZWF0ZSBhIHZpc2libGUsIHJl
bmRlcmVkIHdpbmRvdyB3aGVyZSB5b3UgY2FuIHdhdGNoIHdoYXQgaXMgaGFw
cGVuaW5nLgozLiBMaXN0ZW4gZm9yIFtzcGVjaWZpYyBldmVudHNdKCNvbmV2
ZW50LWNhbGxiYWNrKS4KClRvIHJ1biB0aGUgc2FtZSBmaWxlIHdpdGggZGVi
dWdnaW5nIG91dHB1dCwgcnVuIGl0IGxpa2UgdGhpcyBgREVCVUc9bmlnaHRt
YXJlIG5vZGUgY25uLmpzYCAob24gV2luZG93cyB1c2UgYHNldCBERUJVRz1u
aWdodG1hcmUgJiBub2RlIGNubi5qc2ApLgoKVGhpcyB3aWxsIHByaW50IG91
dCBzb21lIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCdzIGdv
aW5nIG9uOgoKYGBgYmFzaApuaWdodG1hcmUgcXVldWVpbmcgYWN0aW9uICJn
b3RvIiArMG1zCm5pZ2h0bWFyZSBxdWV1ZWluZyBhY3Rpb24gImV2YWx1YXRl
IiArNG1zCkJyZWFraW5nIE5ld3MsIFUuUy4sIFdvcmxkLCBXZWF0aGVyLCBF
bnRlcnRhaW5tZW50ICYgVmlkZW8gTmV3cyAtIENOTi5jb20KYGBgCgojIyMj
IyBEZWJ1ZyBGbGFncwoKQWxsIG5pZ2h0bWFyZSBtZXNzYWdlcwoKYERFQlVH
PW5pZ2h0bWFyZSpgCgpPbmx5IGFjdGlvbnMKCmBERUJVRz1uaWdodG1hcmU6
YWN0aW9ucypgCgpPbmx5IGxvZ3MKCmBERUJVRz1uaWdodG1hcmU6bG9nKmAK
CiMjIEFkZGl0aW9uYWwgUmVzb3VyY2VzCgoqIFtSb3NzIEhpbmtsZXkncyBO
aWdodG1hcmUgRXhhbXBsZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9yb3NzaGlu
a2xleS9uaWdodG1hcmUtZXhhbXBsZXMpIGlzIGEgZ3JlYXQgcmVzb3VyY2Ug
Zm9yIHNldHRpbmcgdXAgbmlnaHRtYXJlLCBsZWFybmluZyBhYm91dCBjdXN0
b20gYWN0aW9ucywgYW5kIGF2b2lkaW5nIGNvbW1vbiBwaXRmYWxscy4KCiog
W05pZ2h0bWFyZSBJc3N1ZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9tYXR0aGV3
bXVlbGxlci9uaWdodG1hcmUtaXNzdWVzKSBoYXMgYSBidW5jaCBvZiBzdGFu
ZGFsb25lIHJ1bm5hYmxlIGV4YW1wbGVzLiBUaGUgc2NyaXB0IG51bWJlcnMg
Y29ycmVzcG9uZCB0byBuaWdodG1hcmUgaXNzdWUgbnVtYmVycy4KCiogW05p
Z2h0bWFyaXNobHkgZ29vZCBzY3JhcGluZ10oaHR0cHM6Ly9oYWNrZXJub29u
LmNvbS9uaWdodG1hcmlzaGx5LWdvb2Qtc2NyYXBpbmctd2l0aC1uaWdodG1h
cmUtanMtYW5kLWFzeW5jLWF3YWl0LWI3YjIwYTM4NDM4ZikgaXMgYSBncmVh
dCB0dXRvcmlhbCBieSBbw4ZuZHJldyBSaW5pbnNsYW5kXShodHRwczovL3R3
aXR0ZXIuY29tL0BhZW5kcmV3KSBvbiBnZXR0aW5nIHVwICYgcnVubmluZyB3
aXRoIE5pZ2h0bWFyZSB1c2luZyByZWFsLWxpZmUgZGF0YS4KCiMjIFRlc3Rz
CgpBdXRvbWF0ZWQgdGVzdHMgZm9yIG5pZ2h0bWFyZSBpdHNlbGYgYXJlIHJ1
biB1c2luZyBbTW9jaGFdKGh0dHA6Ly9tb2NoYWpzLm9yZy8pIGFuZCBDaGFp
LCBib3RoIG9mIHdoaWNoIHdpbGwgYmUgaW5zdGFsbGVkIHZpYSBgbnBtIGlu
c3RhbGxgLiBUbyBydW4gbmlnaHRtYXJlJ3MgdGVzdHMsIGp1c3QgcnVuIGBt
YWtlIHRlc3RgLgoKV2hlbiB0aGUgdGVzdHMgYXJlIGRvbmUsIHlvdSdsbCBz
ZWUgc29tZXRoaW5nIGxpa2UgdGhpczoKCmBgYGJhc2gKbWFrZSB0ZXN0CiAg
4oCk4oCk4oCk4oCk4oCk4oCk4oCk4oCk4oCk4oCk4oCk4oCk4oCk4oCk4oCk
4oCk4oCk4oCkCiAgMTggcGFzc2luZyAoMW0pCmBgYAoKTm90ZSB0aGF0IGlm
IHlvdSBhcmUgdXNpbmcgYHh2ZmJgLCBgbWFrZSB0ZXN0YCB3aWxsIGF1dG9t
YXRpY2FsbHkgcnVuIHRoZSB0ZXN0cyB1bmRlciBhbiBgeHZmYi1ydW5gIHdy
YXBwZXIuIElmIHlvdSBhcmUgcGxhbm5pbmcgdG8gcnVuIHRoZSB0ZXN0cyBo
ZWFkbGVzc2x5IHdpdGhvdXQgcnVubmluZyBgeHZmYmAgZmlyc3QsIHNldCB0
aGUgYEhFQURMRVNTYCBlbnZpcm9ubWVudCB2YXJpYWJsZSB0byBgMGAuCgoj
IyBMaWNlbnNlIChNSVQpCgpgYGAKV1dXV1dXfHxXV1dXV1cKIFcgVyBXfHxX
IFcgVwogICAgICB8fAogICAgKCBPTyApX19fX19fX19fXwogICAgIC8gIHwg
ICAgICAgICAgIFwKICAgIC9vIG98ICAgIE1JVCAgICAgXAogICAgXF9fXy98
fF98fF9ffHxffHwgKgogICAgICAgICB8fCB8fCAgfHwgfHwKICAgICAgICBf
fHxffHwgX3x8X3x8CiAgICAgICAoX198X198KF9ffF9ffApgYGAKCkNvcHly
aWdodCAoYykgMjAxNSBTZWdtZW50LmlvLCBJbmMuIDxtYWlsdG86ZnJpZW5k
c0BzZWdtZW50LmNvbT4KClBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQs
IGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNv
cHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0
aW9uIGZpbGVzICh0aGUgJ1NvZnR3YXJlJyksIHRvIGRlYWwgaW4gdGhlIFNv
ZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0
IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwg
bWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9v
ciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQg
cGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8g
ZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOgoK
VGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lv
biBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsIGNvcGllcyBvciBz
dWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuCgpUSEUgU09G
VFdBUkUgSVMgUFJPVklERUQgJ0FTIElTJywgV0lUSE9VVCBXQVJSQU5UWSBP
RiBBTlkgS0lORCwgRVhQUkVTUyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVU
IE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJ
TElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5P
TklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMg
T1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0s
IERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFD
VElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcg
RlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdB
UkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdB
UkUuCg==
",,17944,"dGVzdDogJnRlc3QKICB3b3JraW5nX2RpcmVjdG9yeTogfi9yZXBvCiAgc3Rl
cHM6CiAgICAtIGNoZWNrb3V0CiAgICAtIHJ1bjoKICAgICAgICBuYW1lOiBQ
cmludCBzeXN0ZW0gaW5mb3JtYXRpb24KICAgICAgICBjb21tYW5kOiB8CiAg
ICAgICAgICBlY2hvICJub2RlICQobm9kZSAtdikiCiAgICAgICAgICBlY2hv
ICJucG0gdiQobnBtIC0tdmVyc2lvbikiCiAgICAtIHJ1bjoKICAgICAgICBu
YW1lOiBJbnN0YWxsIGRlcGVuZGVuY2llcwogICAgICAgIGNvbW1hbmQ6IHN1
ZG8gYXB0LWdldCB1cGRhdGUgJiYgc3VkbyBhcHQtZ2V0IGluc3RhbGwgZGJ1
cy14MTEgLXkKICAgIC0gcmVzdG9yZV9jYWNoZToKICAgICAgICBrZXlzOgog
ICAgICAgICAgLSB2MS1ucG0tZGVwcy17eyBjaGVja3N1bSAicGFja2FnZS5q
c29uIiB9fQogICAgICAgICAgLSB2MS1ucG0tZGVwcwogICAgLSBydW46CiAg
ICAgICAgbmFtZTogbnBtIGluc3RhbGwKICAgICAgICBjb21tYW5kOiBucG0g
aW5zdGFsbAogICAgLSBzYXZlX2NhY2hlOgogICAgICAgIGtleTogdjEtbnBt
LWRlcHMte3sgY2hlY2tzdW0gInBhY2thZ2UuanNvbiIgfX0KICAgICAgICBw
YXRoczoKICAgICAgICAgIC0gbm9kZV9tb2R1bGVzCiAgICAtIHJ1bjoKICAg
ICAgICBuYW1lOiBucG0gdGVzdAogICAgICAgIGNvbW1hbmQ6IG5wbSB0ZXN0
CgpwdWJsaXNoOiAmcHVibGlzaAogIHdvcmtpbmdfZGlyZWN0b3J5OiB+L3Jl
cG8KICBzdGVwczoKICAgIC0gY2hlY2tvdXQKICAgIC0gcnVuOgogICAgICAg
IG5hbWU6IFByaW50IHN5c3RlbSBpbmZvcm1hdGlvbgogICAgICAgIGNvbW1h
bmQ6IHwKICAgICAgICAgIGVjaG8gIm5vZGUgJChub2RlIC12KSIKICAgICAg
ICAgIGVjaG8gIm5wbSB2JChucG0gLS12ZXJzaW9uKSIKICAgIC0gcnVuOgog
ICAgICAgIG5hbWU6IEluc3RhbGwgZGVwZW5kZW5jaWVzCiAgICAgICAgY29t
bWFuZDogc3VkbyBhcHQtZ2V0IHVwZGF0ZSAmJiBzdWRvIGFwdC1nZXQgaW5z
dGFsbCBkYnVzLXgxMSAteQogICAgIyBEbyBub3QgZXhwbGljaXRseSB1c2Ug
Y2FjaGluZyB3aGVuIHB1Ymxpc2hpbmcKICAgIC0gcnVuOgogICAgICAgIG5h
bWU6IG5wbSBpbnN0YWxsCiAgICAgICAgY29tbWFuZDogbnBtIGluc3RhbGwK
ICAgIC0gcnVuOgogICAgICAgIG5hbWU6IHNldCBucG0gYXV0aCB0b2tlbgog
ICAgICAgIGNvbW1hbmQ6IG5wbSBjb25maWcgc2V0ICIvL3JlZ2lzdHJ5Lm5w
bWpzLm9yZy86X2F1dGhUb2tlbiIgJE5QTV9BVVRICiAgICAtIHJ1bjoKICAg
ICAgICBuYW1lOiBucG0gcHVibGlzaAogICAgICAgIGNvbW1hbmQ6IG5wbSBw
dWJsaXNoCgp2ZXJzaW9uOiAyCmpvYnM6CiAgdGVzdC1ub2RlNjoKICAgIDw8
OiAqdGVzdAogICAgZG9ja2VyOgogICAgICAtIGltYWdlOiBjaXJjbGVjaS9u
b2RlOjYtYnJvd3NlcnMKICB0ZXN0LW5vZGU3OgogICAgPDw6ICp0ZXN0CiAg
ICBkb2NrZXI6CiAgICAgIC0gaW1hZ2U6IGNpcmNsZWNpL25vZGU6Ny1icm93
c2VycwogIHRlc3Qtbm9kZS1sYXRlc3Q6CiAgICA8PDogKnRlc3QKICAgIGRv
Y2tlcjoKICAgICAgLSBpbWFnZTogY2lyY2xlY2kvbm9kZTpsYXRlc3QtYnJv
d3NlcnMKICBwdWJsaXNoOgogICAgPDw6ICpwdWJsaXNoCiAgICBkb2NrZXI6
CiAgICAgIC0gaW1hZ2U6IGNpcmNsZWNpL25vZGU6Ni1icm93c2VycwoKd29y
a2Zsb3dzOgogIHZlcnNpb246IDIKICBidWlsZC10ZXN0LWFuZC1wdWJsaXNo
OgogICAgam9iczoKICAgICAgLSB0ZXN0LW5vZGU2CiAgICAgIC0gdGVzdC1u
b2RlNwogICAgICAtIHRlc3Qtbm9kZS1sYXRlc3QKICAgICAgLSBwdWJsaXNo
OgogICAgICAgICAgZmlsdGVyczoKICAgICAgICAgICAgdGFnczoKICAgICAg
ICAgICAgICBvbmx5OiAnL3Y/WzAtOV0rKFwuWzAtOV0rKSooLS4rKT8vJwog
ICAgICAgICAgICBicmFuY2hlczoKICAgICAgICAgICAgICBpZ25vcmU6IC8u
Ki8KICAgICAgICAgIHJlcXVpcmVzOgogICAgICAgICAgICAtIHRlc3Qtbm9k
ZTYKICAgICAgICAgICAgLSB0ZXN0LW5vZGU3CiAgICAgICAgICAgIC0gdGVz
dC1ub2RlLWxhdGVzdAo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
