name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'react-loadable',84476389,b':hourglass_flowing_sand: A higher order component for loading components with promises.',b'JavaScript',59,14279,,157,False,b'https://api.github.com/repos/jamiebuilds/react-loadable/forks',"IVtSZWFjdCBMb2FkYWJsZV0oaHR0cDovL3RoZWphbWVza3lsZS5jb20vaW1n
L3JlYWN0LWxvYWRhYmxlLWhlYWRlci5wbmcpCgo+IEEgaGlnaGVyIG9yZGVy
IGNvbXBvbmVudCBmb3IgbG9hZGluZyBjb21wb25lbnRzIHdpdGggZHluYW1p
YyBpbXBvcnRzLgoKIyMgSW5zdGFsbAoKYGBgc2gKeWFybiBhZGQgcmVhY3Qt
bG9hZGFibGUKYGBgCgojIyBFeGFtcGxlCgpgYGBqcwppbXBvcnQgTG9hZGFi
bGUgZnJvbSAncmVhY3QtbG9hZGFibGUnOwppbXBvcnQgTG9hZGluZyBmcm9t
ICcuL215LWxvYWRpbmctY29tcG9uZW50JzsKCmNvbnN0IExvYWRhYmxlQ29t
cG9uZW50ID0gTG9hZGFibGUoewogIGxvYWRlcjogKCkgPT4gaW1wb3J0KCcu
L215LWNvbXBvbmVudCcpLAogIGxvYWRpbmc6IExvYWRpbmcsCn0pOwoKZXhw
b3J0IGRlZmF1bHQgY2xhc3MgQXBwIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50
IHsKICByZW5kZXIoKSB7CiAgICByZXR1cm4gPExvYWRhYmxlQ29tcG9uZW50
Lz47CiAgfQp9CmBgYAoKIyMgSGFwcHkgQ3VzdG9tZXJzOgoKLSBbIkknbSBv
YnNlc3NlZCB3aXRoIHRoaXMgcmlnaHQgbm93OiBDUkEgd2l0aCBSZWFjdCBS
b3V0ZXIgdjQgYW5kIHJlYWN0LWxvYWRhYmxlLiBGcmVlIGNvZGUgc3BsaXR0
aW5nLCB0aGlzIGlzIHNvIGVhc3kuIl0oaHR0cHM6Ly90d2l0dGVyLmNvbS9t
YXR6YXRvcnNraS9zdGF0dXMvODcyMDU5ODY1MzUwNDA2MTQ0KQotIFsiT2gg
aGV5IC0gdXNpbmcgbG9hZGFibGUgY29tcG9uZW50IEkga25vY2tlZCAxM0sg
b2ZmIG15IGluaXRpYWwgbG9hZC4gRWFzeSB3aW4hIl0oaHR0cHM6Ly90d2l0
dGVyLmNvbS9BZGFtUmFja2lzL3N0YXR1cy84NDY1OTMwODA5OTIxNTM2MDAp
Ci0gWyJIYWQgYSBsb29rIGFuZCBpdHMgYXdlc29tZS4gc2hhdmVkIGxpa2Ug
NTBrYiBvZmYgb3VyIG1haW4gYnVuZGxlLiJdKGh0dHBzOi8vZ2l0aHViLmNv
bS9xdXJhbi9xdXJhbi5jb20tZnJvbnRlbmQvcHVsbC83MDEjaXNzdWVjb21t
ZW50LTI4NzkwODU1MSkKLSBbIkkndmUgZ290IHRoYXQgc2VydmVyLXNpZGUg
cmVuZGVyaW5nICsgY29kZSBzcGxpdHRpbmcgKyBQV0EgU2VydmljZVdvcmtl
ciBjYWNoaW5nIHNldHVwIGRvbmUg8J+YjiAodGhhbmtzIHRvIHJlYWN0LWxv
YWRhYmxlKS4gTm93IG91ciBmcm9udGVuZCBpcyBzdXBlciBmYXN0LiJdKGh0
dHBzOi8vdHdpdHRlci5jb20vbXhzdGJyL3N0YXR1cy85MjIzNzU1NzUyMTc2
MjcxMzYpCi0gWyJVc2luZyByZWFjdC1sb2FkYWJsZSB3ZW50IGZyb20gMjIx
LjI4IEtCIOKGkiAxMTUuNzYgS0IgQCBtYWluIGJ1bmRsZS4gRnVja2luZyBh
d2Vzb21lIGFuZCB2ZXJ5IHNpbXBsZSBBUEkuIl0oaHR0cHM6Ly90d2l0dGVy
LmNvbS9ldmdlbnlyb2Rpb25vdi9zdGF0dXMvOTU4ODIxNjE0NjQ0MjY5MDU3
KQotIFsiV2UndmUgcmVkdWNlZCBvdXIgZW50cnkgY2h1bmsgYnkgYSBsb3Qg
JiByZWR1Y2VkIGluaXRpYWwgbG9hZCB0aW1lIGJ5IH41MCUhIl0oaHR0cHM6
Ly9naXRodWIuY29tL2phbWllYnVpbGRzL3JlYWN0LWxvYWRhYmxlL3B1bGwv
MTgxKQotIFsiUmVhY3QtbG9hZGFibGUgaXMga2lsbGVyISBXZSd2ZSBkZWNy
ZWFzZWQgb3VyIGxvYWQgc2l6ZSBieSBvdmVyIDUwa2Igd2l0aCBvbmx5IDIg
ZmlsZXMhIENhbid0IHdhaXQgdG8gc2VlIGhvdyBtdWNoIGxvd2VyIGl0IHdp
bGwgZ28uIl0oaHR0cHM6Ly9naXRodWIuY29tL2phbWllYnVpbGRzL3JlYWN0
LWxvYWRhYmxlL3B1bGwvMTgwLykKCiMjIFVzZXJzCgotIFtBZEhhd2sgLyBG
bG9vcmluZyBTdG9yZXNdKGh0dHBzOi8vd3d3LmZsb29yaW5nc3RvcmVzLmNv
bSkKLSBbQWt1dGJvbGlnLmRrXShodHRwczovL3d3dy5ha3V0Ym9saWcuZGsp
Ci0gW0FuYWxvZy5DYWZlXShodHRwczovL3d3dy5hbmFsb2cuY2FmZSkKLSBb
QW1icm9zdXNdKGh0dHBzOi8vYW1icm9zdXMuY29tKQotIFtBcHBiYXNlLmlv
XShodHRwczovL2dpdGh1Yi5jb20vYXBwYmFzZWlvL3JlYWN0aXZlc2VhcmNo
KQotIFtBdGxhc3NpYW5dKGh0dHBzOi8vd3d3LmF0bGFzc2lhbi5jb20vKQot
IFtCQkMgTmV3c10oaHR0cHM6Ly9naXRodWIuY29tL0JCQy1OZXdzL3NpbW9y
Z2gpCi0gW0JseXR6cGF5XShodHRwczovL3d3dy5ibHl0enBheS5jb20pCi0g
W0NsZWFyVGF4XShodHRwczovL2NsZWFydGF4LmluKQotIFtDbG91ZGZsYXJl
XShodHRwczovL3d3dy5jbG91ZGZsYXJlLmNvbSkKLSBbQ2hpYmFraV0oaHR0
cHM6Ly9jaGliYWtpLmNvKQotIFtDdXJpb10oaHR0cHM6Ly93d3cuY3VyaW8u
b3JnKQotIFtEZWxpdmVyeS5jb21dKGh0dHBzOi8vd3d3LmRlbGl2ZXJ5LmNv
bSkKLSBbRG9jdG9yLmNvbV0oaHR0cHM6Ly93d3cuZG9jdG9yLmNvbS8pCi0g
W0RvbGxhciBTaGF2ZSBDbHViXShodHRwczovL2dpdGh1Yi5jb20vZG9sbGFy
c2hhdmVjbHViKQotIFtEcmVzZXpdKGh0dHBzOi8vZHJlc2V6LnBrLykKLSBb
RXZpZGF0aW9uIEhlYWx0aF0oaHR0cHM6Ly9ldmlkYXRpb24uY29tLykKLSBb
Rmx5aG9tZXNdKGh0dHBzOi8vZmx5aG9tZXMuY29tKQotIFtHb2dvXShodHRw
czovL2dvZ29haXIuY29tKQotIFtHb2ZvcmVdKGh0dHBzOi8vZ29mb3JlLmNv
bS9lbi9ob21lLykKLSBbR3JhYW5hXShodHRwczovL3d3dy5ncmFhbmEuY29t
LykKLSBbTG9jYWxpZV0oaHR0cHM6Ly9sb2NhbGllLmNvL2VuKQotIFtNZWRp
YVRlayBNQ1MtTGl0ZV0oaHR0cHM6Ly9naXRodWIuY29tL01DUy1MaXRlKQot
IFtOaVlPIFNvbHV0aW9ucyBJbmMuXShodHRwczovL3d3dy5nb25peW8uY29t
LykKLSBbT2ZmaWNlcHVsc2VdKGh0dHBzOi8vd3d3Lm9mZmljZXB1bHNlLmlu
LykKLSBbUGVyeF0oaHR0cHM6Ly93d3cucGVyeHRlY2guY29tLykKLSBbUGxv
dHR1XShodHRwczovL3B1YmxpYy5wbG90dHUuY29tKQotIFtSZW5kZXJdKGh0
dHBzOi8vcmVuZGVyLmNvbSkKLSBbU2hpZnRdKGh0dHBzOi8vc2hpZnQuY29t
KQotIFtTbmlwaXRdKGh0dHBzOi8vc25pcGl0LmlvKQotIFtTcGVjdHJ1bS5j
aGF0XShodHRwczovL3NwZWN0cnVtLmNoYXQpCi0gW1RhbGVudHBhaXJdKGh0
dHBzOi8vdGFsZW50cGFpci5jb20pCi0gW1RpbmRlcl0oaHR0cHM6Ly90aW5k
ZXIuY29tLykKLSBbVW5zcGxhc2hdKGh0dHBzOi8vdW5zcGxhc2guY29tLykK
LSBbV2F2ZV0oaHR0cHM6Ly93YXZlYXBwcy5jb20vKQotIFtXVVpaVUZdKGh0
dHBzOi8vd3V6enVmLm5ldC8pCgo+IF9JZiB5b3VyIGNvbXBhbnkgb3IgcHJv
amVjdCBpcyB1c2luZyBSZWFjdCBMb2FkYWJsZSwgcGxlYXNlIG9wZW4gYSBQ
UiBhbmQgYWRkCj4geW91cnNlbGYgdG8gdGhpcyBsaXN0IChpbiBhbHBoYWJl
dGljYWwgb3JkZXIgcGxlYXNlKV8KCiMjIEFsc28gU2VlOgoKLSBbYHJlYWN0
LWxvYWRhYmxlLXZpc2liaWxpdHlgXShodHRwczovL2dpdGh1Yi5jb20vc3Ry
YXRpZm9ybWx0ZC9yZWFjdC1sb2FkYWJsZS12aXNpYmlsaXR5KSAtIEJ1aWxk
aW5nIG9uIHRvcCBvZiBhbmQga2VlcGluZyB0aGUgc2FtZSBBUEkgYXMgYHJl
YWN0LWxvYWRhYmxlYCwgdGhpcyBsaWJyYXJ5IGVuYWJsZXMgeW91IHRvIGxv
YWQgY29udGVudCB0aGF0IGlzIHZpc2libGUgb24gdGhlIHNjcmVlbi4KCjxo
Mj4KICA8aHI+CiAgPGhyPgogIDxpbWcgc3JjPSJodHRwOi8vdGhlamFtZXNr
eWxlLmNvbS9pbWcvcmVhY3QtbG9hZGFibGUtZ3VpZGUucG5nIiBhbHQ9IkdV
SURFIj4KICA8aHI+CiAgPGhyPgogIDxzbWFsbD5HdWlkZTwvc21hbGw+Cjwv
aDI+CgpTbyB5b3UndmUgZ290IHlvdXIgUmVhY3QgYXBwLCB5b3UncmUgYnVu
ZGxpbmcgaXQgd2l0aCBXZWJwYWNrLCBhbmQgdGhpbmdzIGFyZQpnb2luZyBz
bW9vdGguIEJ1dCB0aGVuIG9uZSBkYXkgeW91IG5vdGljZSB5b3VyIGFwcCdz
IGJ1bmRsZSBpcyBnZXR0aW5nIHNvIGJpZwp0aGF0IGl0J3Mgc2xvd2luZyB0
aGluZ3MgZG93bi4KCkl0J3MgdGltZSB0byBzdGFydCBjb2RlLXNwbGl0dGlu
ZyB5b3VyIGFwcCEKCiFbQSBzaW5nbGUgZ2lhbnQgYnVuZGxlIHZzIG11bHRp
cGxlIHNtYWxsZXIgYnVuZGxlc10oaHR0cDovL3RoZWphbWVza3lsZS5jb20v
aW1nL3JlYWN0LWxvYWRhYmxlLXNwbGl0LWJ1bmRsZXMucG5nKQoKQ29kZS1z
cGxpdHRpbmcgaXMgdGhlIHByb2Nlc3Mgb2YgdGFraW5nIG9uZSBsYXJnZSBi
dW5kbGUgY29udGFpbmluZyB5b3VyIGVudGlyZQphcHAsIGFuZCBzcGxpdHRp
bmcgdGhlbSB1cCBpbnRvIG11bHRpcGxlIHNtYWxsZXIgYnVuZGxlcyB3aGlj
aCBjb250YWluIHNlcGFyYXRlCnBhcnRzIG9mIHlvdXIgYXBwLgoKVGhpcyBt
aWdodCBzZWVtIGRpZmZpY3VsdCB0byBkbywgYnV0IHRvb2xzIGxpa2UgV2Vi
cGFjayBoYXZlIHRoaXMgYnVpbHQgaW4sIGFuZApSZWFjdCBMb2FkYWJsZSBp
cyBkZXNpZ25lZCB0byBtYWtlIGl0IHN1cGVyIHNpbXBsZS4KCiMjIyBSb3V0
ZS1iYXNlZCBzcGxpdHRpbmcgdnMuIENvbXBvbmVudC1iYXNlZCBzcGxpdHRp
bmcKCkEgY29tbW9uIHBpZWNlIG9mIGFkdmljZSB5b3Ugd2lsbCBzZWUgaXMg
dG8gYnJlYWsgeW91ciBhcHAgaW50byBzZXBhcmF0ZSByb3V0ZXMKYW5kIGxv
YWQgZWFjaCBvbmUgYXN5bmNocm9ub3VzbHkuIFRoaXMgc2VlbXMgdG8gd29y
ayB3ZWxsIGVub3VnaCBmb3IgbWFueSBhcHBz4oCTCmFzIGEgdXNlciwgY2xp
Y2tpbmcgYSBsaW5rIGFuZCB3YWl0aW5nIGZvciBhIHBhZ2UgdG8gbG9hZCBp
cyBhIGZhbWlsaWFyCmV4cGVyaWVuY2Ugb24gdGhlIHdlYi4KCkJ1dCB3ZSBj
YW4gZG8gYmV0dGVyIHRoYW4gdGhhdC4KClVzaW5nIG1vc3Qgcm91dGluZyB0
b29scyBmb3IgUmVhY3QsIGEgcm91dGUgaXMgc2ltcGx5IGEgY29tcG9uZW50
LiBUaGVyZSdzCm5vdGhpbmcgcGFydGljdWxhcmx5IHNwZWNpYWwgYWJvdXQg
dGhlbSAoU29ycnkgUnlhbiBhbmQgTWljaGFlbOKAkyB5b3UncmUgd2hhdCdz
CnNwZWNpYWwpLiBTbyB3aGF0IGlmIHdlIG9wdGltaXplZCBmb3Igc3BsaXR0
aW5nIGFyb3VuZCBjb21wb25lbnRzIGluc3RlYWQgb2YKcm91dGVzPyBXaGF0
IHdvdWxkIHRoYXQgZ2V0IHVzPwoKIVtSb3V0ZSB2cy4gY29tcG9uZW50IGNl
bnRyaWMgY29kZSBzcGxpdHRpbmddKGh0dHA6Ly90aGVqYW1lc2t5bGUuY29t
L2ltZy9yZWFjdC1sb2FkYWJsZS1jb21wb25lbnQtc3BsaXR0aW5nLnBuZykK
CkFzIGl0IHR1cm5zIG91dDogUXVpdGUgYSBsb3QuIFRoZXJlIGFyZSBtYW55
IG1vcmUgcGxhY2VzIHRoYW4ganVzdCByb3V0ZXMgd2hlcmUKeW91IGNhbiBw
cmV0dHkgZWFzaWx5IHNwbGl0IGFwYXJ0IHlvdXIgYXBwLiBNb2RhbHMsIHRh
YnMsIGFuZCBtYW55IG1vcmUgVUkKY29tcG9uZW50cyBoaWRlIGNvbnRlbnQg
dW50aWwgdGhlIHVzZXIgaGFzIGRvbmUgc29tZXRoaW5nIHRvIHJldmVhbCBp
dC4KCj4gKipFeGFtcGxlOioqIE1heWJlIHlvdXIgYXBwIGhhcyBhIG1hcCBi
dXJpZWQgaW5zaWRlIG9mIGEgdGFiIGNvbXBvbmVudC4gV2h5Cj4gd291bGQg
eW91IGxvYWQgYSBtYXNzaXZlIG1hcHBpbmcgbGlicmFyeSBmb3IgdGhlIHBh
cmVudCByb3V0ZSBldmVyeSB0aW1lIHdoZW4KPiB0aGUgdXNlciBtYXkgbmV2
ZXIgZ28gdG8gdGhhdCB0YWI/CgpOb3QgdG8gbWVudGlvbiBhbGwgdGhlIHBs
YWNlcyB3aGVyZSB5b3UgY2FuIGRlZmVyIGxvYWRpbmcgY29udGVudCB1bnRp
bCBoaWdoZXIKcHJpb3JpdHkgY29udGVudCBpcyBmaW5pc2hlZCBsb2FkaW5n
LiBUaGF0IGNvbXBvbmVudCBhdCB0aGUgYm90dG9tIG9mIHlvdXIgcGFnZQp3
aGljaCBsb2FkcyBhIGJ1bmNoIG9mIGxpYnJhcmllczogV2h5IHNob3VsZCB0
aGF0IGJlIGxvYWRlZCBhdCB0aGUgc2FtZSB0aW1lIGFzCnRoZSBjb250ZW50
IGF0IHRoZSB0b3A/CgpBbmQgYmVjYXVzZSByb3V0ZXMgYXJlIGp1c3QgY29t
cG9uZW50cywgd2UgY2FuIHN0aWxsIGVhc2lseSBjb2RlLXNwbGl0IGF0IHRo
ZQpyb3V0ZSBsZXZlbC4KCkludHJvZHVjaW5nIG5ldyBjb2RlLXNwbGl0dGlu
ZyBwb2ludHMgaW4geW91ciBhcHAgc2hvdWxkIGJlIHNvIGVhc3kgdGhhdCB5
b3UKZG9uJ3QgdGhpbmsgdHdpY2UgYWJvdXQgaXQuIEl0IHNob3VsZCBiZSBh
IG1hdHRlciBvZiBjaGFuZ2luZyBhIGZldyBsaW5lcyBvZgpjb2RlIGFuZCBl
dmVyeXRoaW5nIGVsc2Ugc2hvdWxkIGJlIGF1dG9tYXRlZC4KCiMjIyBJbnRy
b2R1Y2luZyBSZWFjdCBMb2FkYWJsZQoKUmVhY3QgTG9hZGFibGUgaXMgYSBz
bWFsbCBsaWJyYXJ5IHRoYXQgbWFrZXMgY29tcG9uZW50LWNlbnRyaWMgY29k
ZSBzcGxpdHRpbmcKaW5jcmVkaWJseSBlYXN5IGluIFJlYWN0LgoKYExvYWRh
YmxlYCBpcyBhIGhpZ2hlci1vcmRlciBjb21wb25lbnQgKGEgZnVuY3Rpb24g
dGhhdCBjcmVhdGVzIGEgY29tcG9uZW50KQp3aGljaCBsZXRzIHlvdSBkeW5h
bWljYWxseSBsb2FkIGFueSBtb2R1bGUgYmVmb3JlIHJlbmRlcmluZyBpdCBp
bnRvIHlvdXIgYXBwLgoKTGV0J3MgaW1hZ2luZSB0d28gY29tcG9uZW50cywg
b25lIHRoYXQgaW1wb3J0cyBhbmQgcmVuZGVycyBhbm90aGVyLgoKYGBganMK
aW1wb3J0IEJhciBmcm9tICcuL2NvbXBvbmVudHMvQmFyJzsKCmNsYXNzIEZv
byBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7CiAgcmVuZGVyKCkgewogICAg
cmV0dXJuIDxCYXIvPjsKICB9Cn0KYGBgCgpSaWdodCBub3cgd2UncmUgZGVw
ZW5kaW5nIG9uIGBCYXJgIGJlaW5nIGltcG9ydGVkIHN5bmNocm9ub3VzbHkg
dmlhIGBpbXBvcnRgLApidXQgd2UgZG9uJ3QgbmVlZCBpdCB1bnRpbCB3ZSBn
byB0byByZW5kZXIgaXQuIFNvIHdoeSBkb24ndCB3ZSBqdXN0IGRlZmVyIHRo
YXQ/CgpVc2luZyBhICoqZHluYW1pYyBpbXBvcnQqKiAoW2EgdGMzOSBwcm9w
b3NhbCBjdXJyZW50bHkgYXQgU3RhZ2UgM10oaHR0cHM6Ly9naXRodWIuY29t
L3RjMzkvcHJvcG9zYWwtZHluYW1pYy1pbXBvcnQpKQp3ZSBjYW4gbW9kaWZ5
IG91ciBjb21wb25lbnQgdG8gbG9hZCBgQmFyYCBhc3luY2hyb25vdXNseS4K
CmBgYGpzCmNsYXNzIE15Q29tcG9uZW50IGV4dGVuZHMgUmVhY3QuQ29tcG9u
ZW50IHsKICBzdGF0ZSA9IHsKICAgIEJhcjogbnVsbAogIH07CgogIGNvbXBv
bmVudFdpbGxNb3VudCgpIHsKICAgIGltcG9ydCgnLi9jb21wb25lbnRzL0Jh
cicpLnRoZW4oQmFyID0+IHsKICAgICAgdGhpcy5zZXRTdGF0ZSh7IEJhcjog
QmFyLmRlZmF1bHQgfSk7CiAgICB9KTsKICB9CgogIHJlbmRlcigpIHsKICAg
IGxldCB7QmFyfSA9IHRoaXMuc3RhdGU7CiAgICBpZiAoIUJhcikgewogICAg
ICByZXR1cm4gPGRpdj5Mb2FkaW5nLi4uPC9kaXY+OwogICAgfSBlbHNlIHsK
ICAgICAgcmV0dXJuIDxCYXIvPjsKICAgIH07CiAgfQp9CmBgYAoKQnV0IHRo
YXQncyBhIHdob2xlIGJ1bmNoIG9mIHdvcmssIGFuZCBpdCBkb2Vzbid0IGV2
ZW4gaGFuZGxlIGEgYnVuY2ggb2YgY2FzZXMuCldoYXQgYWJvdXQgd2hlbiBg
aW1wb3J0KClgIGZhaWxzPyBXaGF0IGFib3V0IHNlcnZlci1zaWRlIHJlbmRl
cmluZz8KCkluc3RlYWQgeW91IGNhbiB1c2UgYExvYWRhYmxlYCB0byBhYnN0
cmFjdCBhd2F5IHRoZSBwcm9ibGVtLgoKYGBganMKaW1wb3J0IExvYWRhYmxl
IGZyb20gJ3JlYWN0LWxvYWRhYmxlJzsKCmNvbnN0IExvYWRhYmxlQmFyID0g
TG9hZGFibGUoewogIGxvYWRlcjogKCkgPT4gaW1wb3J0KCcuL2NvbXBvbmVu
dHMvQmFyJyksCiAgbG9hZGluZygpIHsKICAgIHJldHVybiA8ZGl2PkxvYWRp
bmcuLi48L2Rpdj4KICB9Cn0pOwoKY2xhc3MgTXlDb21wb25lbnQgZXh0ZW5k
cyBSZWFjdC5Db21wb25lbnQgewogIHJlbmRlcigpIHsKICAgIHJldHVybiA8
TG9hZGFibGVCYXIvPjsKICB9Cn0KYGBgCgojIyMgQXV0b21hdGljIGNvZGUt
c3BsaXR0aW5nIG9uIGBpbXBvcnQoKWAKCldoZW4geW91IHVzZSBgaW1wb3J0
KClgIHdpdGggV2VicGFjayAyKywgaXQgd2lsbApbYXV0b21hdGljYWxseSBj
b2RlLXNwbGl0XShodHRwczovL3dlYnBhY2suanMub3JnL2d1aWRlcy9jb2Rl
LXNwbGl0dGluZy8pIGZvcgp5b3Ugd2l0aCBubyBhZGRpdGlvbmFsIGNvbmZp
Z3VyYXRpb24uCgpUaGlzIG1lYW5zIHRoYXQgeW91IGNhbiBlYXNpbHkgZXhw
ZXJpbWVudCB3aXRoIG5ldyBjb2RlIHNwbGl0dGluZyBwb2ludHMganVzdApi
eSBzd2l0Y2hpbmcgdG8gYGltcG9ydCgpYCBhbmQgdXNpbmcgUmVhY3QgTG9h
ZGFibGUuIEZpZ3VyZSBvdXQgd2hhdCBwZXJmb3JtcwpiZXN0IGZvciB5b3Vy
IGFwcC4KCiMjIyBDcmVhdGluZyBhIGdyZWF0ICJMb2FkaW5nLi4uIiBDb21w
b25lbnQKClJlbmRlcmluZyBhIHN0YXRpYyAiTG9hZGluZy4uLiIgZG9lc24n
dCBjb21tdW5pY2F0ZSBlbm91Z2ggdG8gdGhlIHVzZXIuIFlvdQphbHNvIG5l
ZWQgdG8gdGhpbmsgYWJvdXQgZXJyb3Igc3RhdGVzLCB0aW1lb3V0cywgYW5k
IG1ha2luZyBpdCBhIG5pY2UKZXhwZXJpZW5jZS4KCmBgYGpzCmZ1bmN0aW9u
IExvYWRpbmcoKSB7CiAgcmV0dXJuIDxkaXY+TG9hZGluZy4uLjwvZGl2PjsK
fQoKTG9hZGFibGUoewogIGxvYWRlcjogKCkgPT4gaW1wb3J0KCcuL1dpbGxG
YWlsVG9Mb2FkJyksIC8vIG9oIG5vIQogIGxvYWRpbmc6IExvYWRpbmcsCn0p
OwpgYGAKClRvIG1ha2UgdGhpcyBhbGwgbmljZSwgeW91ciBbbG9hZGluZyBj
b21wb25lbnRdKCNsb2FkaW5nY29tcG9uZW50KSByZWNlaXZlcyBhCmNvdXBs
ZSBkaWZmZXJlbnQgcHJvcHMuCgojIyMjIExvYWRpbmcgZXJyb3Igc3RhdGVz
CgpXaGVuIHlvdXIgW2Bsb2FkZXJgXShvcHRzbG9hZGVyKSBmYWlscywgeW91
ciBbbG9hZGluZyBjb21wb25lbnRdKCNsb2FkaW5nY29tcG9uZW50KQp3aWxs
IHJlY2VpdmUgYW4gW2BlcnJvcmBdKHByb3BzZXJyb3IpIHByb3Agd2hpY2gg
d2lsbCBiZSBhbiBgRXJyb3JgIG9iamVjdCAob3RoZXJ3aXNlIGl0CndpbGwg
YmUgYG51bGxgKS4KCmBgYGpzCmZ1bmN0aW9uIExvYWRpbmcocHJvcHMpIHsK
ICBpZiAocHJvcHMuZXJyb3IpIHsKICAgIHJldHVybiA8ZGl2PkVycm9yISA8
YnV0dG9uIG9uQ2xpY2s9eyBwcm9wcy5yZXRyeSB9PlJldHJ5PC9idXR0b24+
PC9kaXY+OwogIH0gZWxzZSB7CiAgICByZXR1cm4gPGRpdj5Mb2FkaW5nLi4u
PC9kaXY+OwogIH0KfQpgYGAKCiMjIyMgQXZvaWRpbmcgX0ZsYXNoIE9mIExv
YWRpbmcgQ29tcG9uZW50XwoKU29tZXRpbWVzIGNvbXBvbmVudHMgbG9hZCBy
ZWFsbHkgcXVpY2tseSAoPDIwMG1zKSBhbmQgdGhlIGxvYWRpbmcgc2NyZWVu
IG9ubHkKcXVpY2tseSBmbGFzaGVzIG9uIHRoZSBzY3JlZW4uCgpBIG51bWJl
ciBvZiB1c2VyIHN0dWRpZXMgaGF2ZSBwcm92ZW4gdGhhdCB0aGlzIGNhdXNl
cyB1c2VycyB0byBwZXJjZWl2ZSB0aGluZ3MKdGFraW5nIGxvbmdlciB0aGFu
IHRoZXkgcmVhbGx5IGhhdmUuIElmIHlvdSBkb24ndCBzaG93IGFueXRoaW5n
LCB1c2VycyBwZXJjZWl2ZQppdCBhcyBiZWluZyBmYXN0ZXIuCgpTbyB5b3Vy
IGxvYWRpbmcgY29tcG9uZW50IHdpbGwgYWxzbyBnZXQgYSBbYHBhc3REZWxh
eWAgcHJvcF0oI3Byb3BzcGFzdGRlbGF5KQp3aGljaCB3aWxsIG9ubHkgYmUg
dHJ1ZSBvbmNlIHRoZSBjb21wb25lbnQgaGFzIHRha2VuIGxvbmdlciB0byBs
b2FkIHRoYW4gYSBzZXQKW2RlbGF5XSgjb3B0c2RlbGF5KS4KCmBgYGpzCmZ1
bmN0aW9uIExvYWRpbmcocHJvcHMpIHsKICBpZiAocHJvcHMuZXJyb3IpIHsK
ICAgIHJldHVybiA8ZGl2PkVycm9yISA8YnV0dG9uIG9uQ2xpY2s9eyBwcm9w
cy5yZXRyeSB9PlJldHJ5PC9idXR0b24+PC9kaXY+OwogIH0gZWxzZSBpZiAo
cHJvcHMucGFzdERlbGF5KSB7CiAgICByZXR1cm4gPGRpdj5Mb2FkaW5nLi4u
PC9kaXY+OwogIH0gZWxzZSB7CiAgICByZXR1cm4gbnVsbDsKICB9Cn0KYGBg
CgpUaGlzIGRlbGF5IGRlZmF1bHRzIHRvIGAyMDBtc2AgYnV0IHlvdSBjYW4g
YWxzbyBjdXN0b21pemUgdGhlCltkZWxheV0oI29wdHNkZWxheSkgaW4gYExv
YWRhYmxlYC4KCmBgYGpzCkxvYWRhYmxlKHsKICBsb2FkZXI6ICgpID0+IGlt
cG9ydCgnLi9jb21wb25lbnRzL0JhcicpLAogIGxvYWRpbmc6IExvYWRpbmcs
CiAgZGVsYXk6IDMwMCwgLy8gMC4zIHNlY29uZHMKfSk7CmBgYAoKIyMjIyBU
aW1pbmcgb3V0IHdoZW4gdGhlIGBsb2FkZXJgIGlzIHRha2luZyB0b28gbG9u
ZwoKU29tZXRpbWVzIG5ldHdvcmsgY29ubmVjdGlvbnMgc3VjayBhbmQgbmV2
ZXIgcmVzb2x2ZSBvciBmYWlsLCB0aGV5IGp1c3QgaGFuZwp0aGVyZSBmb3Jl
dmVyLiBUaGlzIHN1Y2tzIGZvciB0aGUgdXNlciBiZWNhdXNlIHRoZXkgd29u
J3Qga25vdyBpZiBpdCBzaG91bGQKYWx3YXlzIHRha2UgdGhpcyBsb25nLCBv
ciBpZiB0aGV5IHNob3VsZCB0cnkgcmVmcmVzaGluZy4KClRoZSBbbG9hZGlu
ZyBjb21wb25lbnRdKCNsb2FkaW5nY29tcG9uZW50KSB3aWxsIHJlY2VpdmUg
YQpbYHRpbWVkT3V0YCBwcm9wXSgjcHJvcHN0aW1lZG91dCkgd2hpY2ggd2ls
bCBiZSBzZXQgdG8gYHRydWVgIHdoZW4gdGhlCltgbG9hZGVyYF0oI29wdHNs
b2FkZXIpIGhhcyB0aW1lZCBvdXQuCgpgYGBqcwpmdW5jdGlvbiBMb2FkaW5n
KHByb3BzKSB7CiAgaWYgKHByb3BzLmVycm9yKSB7CiAgICByZXR1cm4gPGRp
dj5FcnJvciEgPGJ1dHRvbiBvbkNsaWNrPXsgcHJvcHMucmV0cnkgfT5SZXRy
eTwvYnV0dG9uPjwvZGl2PjsKICB9IGVsc2UgaWYgKHByb3BzLnRpbWVkT3V0
KSB7CiAgICByZXR1cm4gPGRpdj5UYWtpbmcgYSBsb25nIHRpbWUuLi4gPGJ1
dHRvbiBvbkNsaWNrPXsgcHJvcHMucmV0cnkgfT5SZXRyeTwvYnV0dG9uPjwv
ZGl2PjsKICB9IGVsc2UgaWYgKHByb3BzLnBhc3REZWxheSkgewogICAgcmV0
dXJuIDxkaXY+TG9hZGluZy4uLjwvZGl2PjsKICB9IGVsc2UgewogICAgcmV0
dXJuIG51bGw7CiAgfQp9CmBgYAoKSG93ZXZlciwgdGhpcyBmZWF0dXJlIGlz
IGRpc2FibGVkIGJ5IGRlZmF1bHQuIFRvIHR1cm4gaXQgb24sIHlvdSBjYW4g
cGFzcyBhCltgdGltZW91dGAgb3B0aW9uXSgjb3B0c3RpbWVvdXQpIHRvIGBM
b2FkYWJsZWAuCgpgYGBqcwpMb2FkYWJsZSh7CiAgbG9hZGVyOiAoKSA9PiBp
bXBvcnQoJy4vY29tcG9uZW50cy9CYXInKSwKICBsb2FkaW5nOiBMb2FkaW5n
LAogIHRpbWVvdXQ6IDEwMDAwLCAvLyAxMCBzZWNvbmRzCn0pOwpgYGAKCiMj
IyBDdXN0b21pemluZyByZW5kZXJpbmcKCkJ5IGRlZmF1bHQgYExvYWRhYmxl
YCB3aWxsIHJlbmRlciB0aGUgYGRlZmF1bHRgIGV4cG9ydCBvZiB0aGUgcmV0
dXJuZWQgbW9kdWxlLgpJZiB5b3Ugd2FudCB0byBjdXN0b21pemUgdGhpcyBi
ZWhhdmlvciB5b3UgY2FuIHVzZSB0aGUKW2ByZW5kZXJgIG9wdGlvbl0oI29w
dHNyZW5kZXIpLgoKYGBganMKTG9hZGFibGUoewogIGxvYWRlcjogKCkgPT4g
aW1wb3J0KCcuL215LWNvbXBvbmVudCcpLAogIHJlbmRlcihsb2FkZWQsIHBy
b3BzKSB7CiAgICBsZXQgQ29tcG9uZW50ID0gbG9hZGVkLm5hbWVkRXhwb3J0
OwogICAgcmV0dXJuIDxDb21wb25lbnQgey4uLnByb3BzfS8+OwogIH0KfSk7
CmBgYAoKIyMjIExvYWRpbmcgbXVsdGlwbGUgcmVzb3VyY2VzCgpUZWNobmlj
YWxseSB5b3UgY2FuIGRvIHdoYXRldmVyIHlvdSB3YW50IHdpdGhpbiBgbG9h
ZGVyKClgIGFzIGxvbmcgYXMgaXQKcmV0dXJucyBhIHByb21pc2UgYW5kIFt5
b3UncmUgYWJsZSB0byByZW5kZXIgc29tZXRoaW5nXSgjY3VzdG9taXppbmct
cmVuZGVyaW5nKS4KQnV0IHdyaXRpbmcgaXQgb3V0IGNhbiBiZSBhIGJpdCBh
bm5veWluZy4KClRvIG1ha2UgaXQgZWFzaWVyIHRvIGxvYWQgbXVsdGlwbGUg
cmVzb3VyY2VzIGluIHBhcmFsbGVsLCB5b3UgY2FuIHVzZQpbYExvYWRhYmxl
Lk1hcGBdKCNsb2FkYWJsZW1hcCkuCgpgYGBqcwpMb2FkYWJsZS5NYXAoewog
IGxvYWRlcjogewogICAgQmFyOiAoKSA9PiBpbXBvcnQoJy4vQmFyJyksCiAg
ICBpMThuOiAoKSA9PiBmZXRjaCgnLi9pMThuL2Jhci5qc29uJykudGhlbihy
ZXMgPT4gcmVzLmpzb24oKSksCiAgfSwKICByZW5kZXIobG9hZGVkLCBwcm9w
cykgewogICAgbGV0IEJhciA9IGxvYWRlZC5CYXIuZGVmYXVsdDsKICAgIGxl
dCBpMThuID0gbG9hZGVkLmkxOG47CiAgICByZXR1cm4gPEJhciB7Li4ucHJv
cHN9IGkxOG49e2kxOG59Lz47CiAgfSwKfSk7CmBgYAoKV2hlbiB1c2luZyBg
TG9hZGFibGUuTWFwYCB0aGUgW2ByZW5kZXIoKWAgbWV0aG9kXSgjb3B0c3Jl
bmRlcikgaXMgcmVxdWlyZWQuIEl0CndpbGwgYmUgcGFzc2VkIGEgYGxvYWRl
ZGAgcGFyYW0gd2hpY2ggd2lsbCBiZSBhbiBvYmplY3QgbWF0Y2hpbmcgdGhl
IHNoYXBlIG9mCnlvdXIgYGxvYWRlcmAuCgojIyMgUHJlbG9hZGluZwoKQXMg
YW4gb3B0aW1pemF0aW9uLCB5b3UgY2FuIGFsc28gZGVjaWRlIHRvIHByZWxv
YWQgYSBjb21wb25lbnQgYmVmb3JlIGl0IGdldHMKcmVuZGVyZWQuCgpGb3Ig
ZXhhbXBsZSwgaWYgeW91IG5lZWQgdG8gbG9hZCBhIG5ldyBjb21wb25lbnQg
d2hlbiBhIGJ1dHRvbiBnZXRzIHByZXNzZWQsCnlvdSBjb3VsZCBzdGFydCBw
cmVsb2FkaW5nIHRoZSBjb21wb25lbnQgd2hlbiB0aGUgdXNlciBob3ZlcnMg
b3ZlciB0aGUgYnV0dG9uLgoKVGhlIGNvbXBvbmVudCBjcmVhdGVkIGJ5IGBM
b2FkYWJsZWAgZXhwb3NlcyBhCltzdGF0aWMgYHByZWxvYWRgIG1ldGhvZF0o
I2xvYWRhYmxlY29tcG9uZW50cHJlbG9hZCkgd2hpY2ggZG9lcyBleGFjdGx5
IHRoaXMuCgpgYGBqcwpjb25zdCBMb2FkYWJsZUJhciA9IExvYWRhYmxlKHsK
ICBsb2FkZXI6ICgpID0+IGltcG9ydCgnLi9CYXInKSwKICBsb2FkaW5nOiBM
b2FkaW5nLAp9KTsKCmNsYXNzIE15Q29tcG9uZW50IGV4dGVuZHMgUmVhY3Qu
Q29tcG9uZW50IHsKICBzdGF0ZSA9IHsgc2hvd0JhcjogZmFsc2UgfTsKCiAg
b25DbGljayA9ICgpID0+IHsKICAgIHRoaXMuc2V0U3RhdGUoeyBzaG93QmFy
OiB0cnVlIH0pOwogIH07CgogIG9uTW91c2VPdmVyID0gKCkgPT4gewogICAg
TG9hZGFibGVCYXIucHJlbG9hZCgpOwogIH07CgogIHJlbmRlcigpIHsKICAg
IHJldHVybiAoCiAgICAgIDxkaXY+CiAgICAgICAgPGJ1dHRvbgogICAgICAg
ICAgb25DbGljaz17dGhpcy5vbkNsaWNrfQogICAgICAgICAgb25Nb3VzZU92
ZXI9e3RoaXMub25Nb3VzZU92ZXJ9PgogICAgICAgICAgU2hvdyBCYXIKICAg
ICAgICA8L2J1dHRvbj4KICAgICAgICB7dGhpcy5zdGF0ZS5zaG93QmFyICYm
IDxMb2FkYWJsZUJhci8+fQogICAgICA8L2Rpdj4KICAgICkKICB9Cn0KYGBg
Cgo8aDI+CiAgPGhyPgogIDxocj4KICA8aW1nIHNyYz0iaHR0cDovL3RoZWph
bWVza3lsZS5jb20vaW1nL3JlYWN0LWxvYWRhYmxlLXNzci5wbmciIGFsdD0i
U0VSVkVSIFNJREUgUkVOREVSSU5HIj4KICA8aHI+CiAgPGhyPgogIDxzbWFs
bD5TZXJ2ZXItU2lkZSBSZW5kZXJpbmc8L3NtYWxsPgo8L2gyPgoKV2hlbiB5
b3UgZ28gdG8gcmVuZGVyIGFsbCB0aGVzZSBkeW5hbWljYWxseSBsb2FkZWQg
Y29tcG9uZW50cywgd2hhdCB5b3UnbGwgZ2V0CmlzIGEgd2hvbGUgYnVuY2gg
b2YgbG9hZGluZyBzY3JlZW5zLgoKVGhpcyByZWFsbHkgc3Vja3MsIGJ1dCB0
aGUgZ29vZCBuZXdzIGlzIHRoYXQgUmVhY3QgTG9hZGFibGUgaXMgZGVzaWdu
ZWQgdG8KbWFrZSBzZXJ2ZXItc2lkZSByZW5kZXJpbmcgd29yayBhcyBpZiBu
b3RoaW5nIGlzIGJlaW5nIGxvYWRlZCBkeW5hbWljYWxseS4KCkhlcmUncyBv
dXIgc3RhcnRpbmcgc2VydmVyIHVzaW5nIFtFeHByZXNzXShodHRwczovL2V4
cHJlc3Nqcy5jb20vKS4KCmBgYGpzCmltcG9ydCBleHByZXNzIGZyb20gJ2V4
cHJlc3MnOwppbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnOwppbXBvcnQgUmVh
Y3RET01TZXJ2ZXIgZnJvbSAncmVhY3QtZG9tL3NlcnZlcic7CmltcG9ydCBB
cHAgZnJvbSAnLi9jb21wb25lbnRzL0FwcCc7Cgpjb25zdCBhcHAgPSBleHBy
ZXNzKCk7CgphcHAuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiB7CiAgcmVzLnNl
bmQoYAogICAgPCFkb2N0eXBlIGh0bWw+CiAgICA8aHRtbCBsYW5nPSJlbiI+
CiAgICAgIDxoZWFkPi4uLjwvaGVhZD4KICAgICAgPGJvZHk+CiAgICAgICAg
PGRpdiBpZD0iYXBwIj4ke1JlYWN0RE9NU2VydmVyLnJlbmRlclRvU3RyaW5n
KDxBcHAvPil9PC9kaXY+CiAgICAgICAgPHNjcmlwdCBzcmM9Ii9kaXN0L21h
aW4uanMiPjwvc2NyaXB0PgogICAgICA8L2JvZHk+CiAgICA8L2h0bWw+CiAg
YCk7Cn0pOwoKYXBwLmxpc3RlbigzMDAwLCAoKSA9PiB7CiAgY29uc29sZS5s
b2coJ1J1bm5pbmcgb24gaHR0cDovL2xvY2FsaG9zdDozMDAwLycpOwp9KTsK
YGBgCgojIyMgUHJlbG9hZGluZyBhbGwgeW91ciBsb2FkYWJsZSBjb21wb25l
bnRzIG9uIHRoZSBzZXJ2ZXIKClRoZSBmaXJzdCBzdGVwIHRvIHJlbmRlcmlu
ZyB0aGUgY29ycmVjdCBjb250ZW50IGZyb20gdGhlIHNlcnZlciBpcyB0byBt
YWtlIHN1cmUKdGhhdCBhbGwgb2YgeW91ciBsb2FkYWJsZSBjb21wb25lbnRz
IGFyZSBhbHJlYWR5IGxvYWRlZCB3aGVuIHlvdSBnbyB0byByZW5kZXIKdGhl
bS4KClRvIGRvIHRoaXMsIHlvdSBjYW4gdXNlIHRoZSBbYExvYWRhYmxlLnBy
ZWxvYWRBbGxgXSgjbG9hZGFibGVwcmVsb2FkYWxsKQptZXRob2QuIEl0IHJl
dHVybnMgYSBwcm9taXNlIHRoYXQgd2lsbCByZXNvbHZlIHdoZW4gYWxsIHlv
dXIgbG9hZGFibGUKY29tcG9uZW50cyBhcmUgcmVhZHkuCgpgYGBqcwpMb2Fk
YWJsZS5wcmVsb2FkQWxsKCkudGhlbigoKSA9PiB7CiAgYXBwLmxpc3Rlbigz
MDAwLCAoKSA9PiB7CiAgICBjb25zb2xlLmxvZygnUnVubmluZyBvbiBodHRw
Oi8vbG9jYWxob3N0OjMwMDAvJyk7CiAgfSk7Cn0pOwpgYGAKCiMjIyBQaWNr
aW5nIHVwIGEgc2VydmVyLXNpZGUgcmVuZGVyZWQgYXBwIG9uIHRoZSBjbGll
bnQKClRoaXMgaXMgd2hlcmUgdGhpbmdzIGdldCBhIGxpdHRsZSBiaXQgdHJp
Y2t5LiBTbyBsZXQncyBwcmVwYXJlIG91cnNlbHZlcwpsaXR0bGUgYml0LgoK
SW4gb3JkZXIgZm9yIHVzIHRvIHBpY2sgdXAgd2hhdCB3YXMgcmVuZGVyZWQg
ZnJvbSB0aGUgc2VydmVyIHdlIG5lZWQgdG8gaGF2ZQphbGwgdGhlIHNhbWUg
Y29kZSB0aGF0IHdhcyB1c2VkIHRvIHJlbmRlciBvbiB0aGUgc2VydmVyLgoK
VG8gZG8gdGhpcywgd2UgZmlyc3QgbmVlZCBvdXIgbG9hZGFibGUgY29tcG9u
ZW50cyB0ZWxsaW5nIHVzIHdoaWNoIG1vZHVsZXMgdGhleQphcmUgcmVuZGVy
aW5nLgoKIyMjIyBEZWNsYXJpbmcgd2hpY2ggbW9kdWxlcyBhcmUgYmVpbmcg
bG9hZGVkCgpUaGVyZSBhcmUgdHdvIG9wdGlvbnMgaW4gW2BMb2FkYWJsZWBd
KCNsb2FkYWJsZSkgYW5kCltgTG9hZGFibGUuTWFwYF0oI2xvYWRhYmxlbWFw
KSB3aGljaCBhcmUgdXNlZCB0byB0ZWxsIHVzIHdoaWNoIG1vZHVsZXMgb3Vy
CmNvbXBvbmVudCBpcyB0cnlpbmcgdG8gbG9hZDogW2BvcHRzLm1vZHVsZXNg
XSgjb3B0c21vZHVsZXMpIGFuZApbYG9wdHMud2VicGFja2BdKCNvcHRzd2Vi
cGFjaykuCgpgYGBqcwpMb2FkYWJsZSh7CiAgbG9hZGVyOiAoKSA9PiBpbXBv
cnQoJy4vQmFyJyksCiAgbW9kdWxlczogWycuL0JhciddLAogIHdlYnBhY2s6
ICgpID0+IFtyZXF1aXJlLnJlc29sdmVXZWFrKCcuL0JhcicpXSwKfSk7CmBg
YAoKQnV0IGRvbid0IHdvcnJ5IHRvbyBtdWNoIGFib3V0IHRoZXNlIG9wdGlv
bnMuIFJlYWN0IExvYWRhYmxlIGluY2x1ZGVzIGEKW0JhYmVsIHBsdWdpbl0o
I2JhYmVsLXBsdWdpbikgdG8gYWRkIHRoZW0gZm9yIHlvdS4KCkp1c3QgYWRk
IHRoZSBgcmVhY3QtbG9hZGFibGUvYmFiZWxgIHBsdWdpbiB0byB5b3VyIEJh
YmVsIGNvbmZpZzoKCmBgYGpzb24KewogICJwbHVnaW5zIjogWwogICAgInJl
YWN0LWxvYWRhYmxlL2JhYmVsIgogIF0KfQpgYGAKCk5vdyB0aGVzZSBvcHRp
b25zIHdpbGwgYXV0b21hdGljYWxseSBiZSBwcm92aWRlZC4KCiMjIyMgRmlu
ZGluZyBvdXQgd2hpY2ggZHluYW1pYyBtb2R1bGVzIHdlcmUgcmVuZGVyZWQK
Ck5leHQgd2UgbmVlZCB0byBmaW5kIG91dCB3aGljaCBtb2R1bGVzIHdlcmUg
YWN0dWFsbHkgcmVuZGVyZWQgd2hlbiBhIHJlcXVlc3QKY29tZXMgaW4uCgpG
b3IgdGhpcywgdGhlcmUgaXMgW2BMb2FkYWJsZS5DYXB0dXJlYF0oI2xvYWRh
YmxlY2FwdHVyZSkgY29tcG9uZW50IHdoaWNoIGNhbgpiZSB1c2VkIHRvIGNv
bGxlY3QgYWxsIHRoZSBtb2R1bGVzIHRoYXQgd2VyZSByZW5kZXJlZC4KCmBg
YGpzCmltcG9ydCBMb2FkYWJsZSBmcm9tICdyZWFjdC1sb2FkYWJsZSc7Cgph
cHAuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiB7CiAgbGV0IG1vZHVsZXMgPSBb
XTsKCiAgbGV0IGh0bWwgPSBSZWFjdERPTVNlcnZlci5yZW5kZXJUb1N0cmlu
ZygKICAgIDxMb2FkYWJsZS5DYXB0dXJlIHJlcG9ydD17bW9kdWxlTmFtZSA9
PiBtb2R1bGVzLnB1c2gobW9kdWxlTmFtZSl9PgogICAgICA8QXBwLz4KICAg
IDwvTG9hZGFibGUuQ2FwdHVyZT4KICApOwoKICBjb25zb2xlLmxvZyhtb2R1
bGVzKTsKCiAgcmVzLnNlbmQoYC4uLiR7aHRtbH0uLi5gKTsKfSk7CmBgYAoK
IyMjIyBNYXBwaW5nIGxvYWRlZCBtb2R1bGVzIHRvIGJ1bmRsZXMKCkluIG9y
ZGVyIHRvIG1ha2Ugc3VyZSB0aGF0IHRoZSBjbGllbnQgbG9hZHMgYWxsIHRo
ZSBtb2R1bGVzIHRoYXQgd2VyZSByZW5kZXJlZApzZXJ2ZXItc2lkZSwgd2Un
bGwgbmVlZCB0byBtYXAgdGhlbSB0byB0aGUgYnVuZGxlcyB0aGF0IFdlYnBh
Y2sgY3JlYXRlZC4KClRoaXMgY29tZXMgaW4gdHdvIHBhcnRzLgoKRmlyc3Qg
d2UgbmVlZCBXZWJwYWNrIHRvIHRlbGwgdXMgd2hpY2ggYnVuZGxlcyBlYWNo
IG1vZHVsZSBsaXZlcyBpbnNpZGUuIEZvcgp0aGlzIHRoZXJlIGlzIHRoZSBb
UmVhY3QgTG9hZGFibGUgV2VicGFjayBwbHVnaW5dKCN3ZWJwYWNrLXBsdWdp
bikuCgpJbXBvcnQgdGhlIGBSZWFjdExvYWRhYmxlUGx1Z2luYCBmcm9tIGBy
ZWFjdC1sb2FkYWJsZS93ZWJwYWNrYCBhbmQgaW5jbHVkZSBpdAppbiB5b3Vy
IHdlYnBhY2sgY29uZmlnLiBQYXNzIGl0IGEgYGZpbGVuYW1lYCBmb3Igd2hl
cmUgdG8gc3RvcmUgdGhlIEpTT04gZGF0YQphYm91dCBvdXIgYnVuZGxlcy4K
CmBgYGpzCi8vIHdlYnBhY2suY29uZmlnLmpzCmltcG9ydCB7IFJlYWN0TG9h
ZGFibGVQbHVnaW4gfSBmcm9tICdyZWFjdC1sb2FkYWJsZS93ZWJwYWNrJzsK
CmV4cG9ydCBkZWZhdWx0IHsKICBwbHVnaW5zOiBbCiAgICBuZXcgUmVhY3RM
b2FkYWJsZVBsdWdpbih7CiAgICAgIGZpbGVuYW1lOiAnLi9kaXN0L3JlYWN0
LWxvYWRhYmxlLmpzb24nLAogICAgfSksCiAgXSwKfTsKYGBgCgpUaGVuIHdl
J2xsIGdvIGJhY2sgdG8gb3VyIHNlcnZlciBhbmQgdXNlIHRoaXMgZGF0YSB0
byBjb252ZXJ0IG91ciBtb2R1bGVzIHRvCmJ1bmRsZXMuCgpUbyBjb252ZXJ0
IGZyb20gbW9kdWxlcyB0byBidW5kbGVzLCBpbXBvcnQgdGhlIFtgZ2V0QnVu
ZGxlc2BdKCNnZXRidW5kbGVzKQptZXRob2QgZnJvbSBgcmVhY3QtbG9hZGFi
bGUvd2VicGFja2AgYW5kIHRoZSBkYXRhIGZyb20gV2VicGFjay4KCmBgYGpz
CmltcG9ydCBMb2FkYWJsZSBmcm9tICdyZWFjdC1sb2FkYWJsZSc7CmltcG9y
dCB7IGdldEJ1bmRsZXMgfSBmcm9tICdyZWFjdC1sb2FkYWJsZS93ZWJwYWNr
JwppbXBvcnQgc3RhdHMgZnJvbSAnLi9kaXN0L3JlYWN0LWxvYWRhYmxlLmpz
b24nOwoKYXBwLmdldCgnLycsIChyZXEsIHJlcykgPT4gewogIGxldCBtb2R1
bGVzID0gW107CgogIGxldCBodG1sID0gUmVhY3RET01TZXJ2ZXIucmVuZGVy
VG9TdHJpbmcoCiAgICA8TG9hZGFibGUuQ2FwdHVyZSByZXBvcnQ9e21vZHVs
ZU5hbWUgPT4gbW9kdWxlcy5wdXNoKG1vZHVsZU5hbWUpfT4KICAgICAgPEFw
cC8+CiAgICA8L0xvYWRhYmxlLkNhcHR1cmU+CiAgKTsKCiAgbGV0IGJ1bmRs
ZXMgPSBnZXRCdW5kbGVzKHN0YXRzLCBtb2R1bGVzKTsKCiAgLy8gLi4uCn0p
OwpgYGAKCldlIGNhbiB0aGVuIHJlbmRlciB0aGVzZSBidW5kbGVzIGludG8g
YDxzY3JpcHQ+YCB0YWdzIGluIG91ciBIVE1MLgoKSXQgaXMgaW1wb3J0YW50
IHRoYXQgdGhlIGJ1bmRsZXMgYXJlIGluY2x1ZGVkIF9iZWZvcmVfIHRoZSBt
YWluIGJ1bmRsZSwgc28gdGhhdAp0aGV5IGNhbiBiZSBsb2FkZWQgYnkgdGhl
IGJyb3dzZXIgcHJpb3IgdG8gdGhlIGFwcCByZW5kZXJpbmcuCgpIb3dldmVy
LCBhcyB0aGUgV2VicGFjayBtYW5pZmVzdCAoaW5jbHVkaW5nIHRoZSBsb2dp
YyBmb3IgcGFyc2luZyBidW5kbGVzKSBsaXZlcyBpbgp0aGUgbWFpbiBidW5k
bGUsIGl0IHdpbGwgbmVlZCB0byBiZSBleHRyYWN0ZWQgaW50byBpdHMgb3du
IGNodW5rLgoKVGhpcyBpcyBlYXN5IHRvIGRvIHdpdGggdGhlIFtDb21tb25z
Q2h1bmtQbHVnaW5dKGh0dHBzOi8vd2VicGFjay5qcy5vcmcvcGx1Z2lucy9j
b21tb25zLWNodW5rLXBsdWdpbi8pCgpgYGBqcwovLyB3ZWJwYWNrLmNvbmZp
Zy5qcwpleHBvcnQgZGVmYXVsdCB7CiAgcGx1Z2luczogWwogICAgbmV3IHdl
YnBhY2sub3B0aW1pemUuQ29tbW9uc0NodW5rUGx1Z2luKHsKICAgICAgbmFt
ZTogJ21hbmlmZXN0JywKICAgICAgbWluQ2h1bmtzOiBJbmZpbml0eQogICAg
fSkKICBdCn0KYGBgCgpfTm90aWNlOiBBcyBvZiBXZWJwYWNrIDQgdGhlIENv
bW1vbnNDaHVua1BsdWdpbiBoYXMgYmVlbiByZW1vdmVkIGFuZCB0aGUgbWFu
aWZlc3QgZG9lc24ndCBuZWVkIHRvIGJlIGV4dHJhY3RlZCBhbnltb3JlLl8K
CmBgYGpzCmxldCBidW5kbGVzID0gZ2V0QnVuZGxlcyhzdGF0cywgbW9kdWxl
cyk7CgpyZXMuc2VuZChgCiAgPCFkb2N0eXBlIGh0bWw+CiAgPGh0bWwgbGFu
Zz0iZW4iPgogICAgPGhlYWQ+Li4uPC9oZWFkPgogICAgPGJvZHk+CiAgICAg
IDxkaXYgaWQ9ImFwcCI+JHtodG1sfTwvZGl2PgogICAgICA8c2NyaXB0IHNy
Yz0iL2Rpc3QvbWFuaWZlc3QuanMiPjwvc2NyaXB0PgogICAgICAke2J1bmRs
ZXMubWFwKGJ1bmRsZSA9PiB7CiAgICAgICAgcmV0dXJuIGA8c2NyaXB0IHNy
Yz0iL2Rpc3QvJHtidW5kbGUuZmlsZX0iPjwvc2NyaXB0PmAKICAgICAgICAv
LyBhbHRlcm5hdGl2ZWx5IGlmIHlvdSBhcmUgdXNpbmcgcHVibGljUGF0aCBv
cHRpb24gaW4gd2VicGFjayBjb25maWcKICAgICAgICAvLyB5b3UgY2FuIHVz
ZSB0aGUgcHVibGljUGF0aCB2YWx1ZSBmcm9tIGJ1bmRsZSwgZS5nOgogICAg
ICAgIC8vIHJldHVybiBgPHNjcmlwdCBzcmM9IiR7YnVuZGxlLnB1YmxpY1Bh
dGh9Ij48L3NjcmlwdD5gCiAgICAgIH0pLmpvaW4oJ1xuJyl9CiAgICAgIDxz
Y3JpcHQgc3JjPSIvZGlzdC9tYWluLmpzIj48L3NjcmlwdD4KICAgIDwvYm9k
eT4KICA8L2h0bWw+CmApOwpgYGAKCiMjIyMgUHJlbG9hZGluZyByZWFkeSBs
b2FkYWJsZSBjb21wb25lbnRzIG9uIHRoZSBjbGllbnQKCldlIGNhbiB1c2Ug
dGhlIFtgTG9hZGFibGUucHJlbG9hZFJlYWR5KClgXSgjbG9hZGFibGVwcmVs
b2FkcmVhZHkpIG1ldGhvZCBvbiB0aGUKY2xpZW50IHRvIHByZWxvYWQgdGhl
IGxvYWRhYmxlIGNvbXBvbmVudHMgdGhhdCB3ZXJlIGluY2x1ZGVkIG9uIHRo
ZSBwYWdlLgoKTGlrZSBbYExvYWRhYmxlLnByZWxvYWRBbGwoKWBdKCNsb2Fk
YWJsZXByZWxvYWRhbGwpLCBpdCByZXR1cm5zIGEgcHJvbWlzZSwKd2hpY2gg
b24gcmVzb2x1dGlvbiBtZWFucyB0aGF0IHdlIGNhbiBoeWRyYXRlIG91ciBh
cHAuCgpgYGBqcwovLyBzcmMvZW50cnkuanMKaW1wb3J0IFJlYWN0IGZyb20g
J3JlYWN0JzsKaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7Cmlt
cG9ydCBMb2FkYWJsZSBmcm9tICdyZWFjdC1sb2FkYWJsZSc7CmltcG9ydCBB
cHAgZnJvbSAnLi9jb21wb25lbnRzL0FwcCc7CgpMb2FkYWJsZS5wcmVsb2Fk
UmVhZHkoKS50aGVuKCgpID0+IHsKICBSZWFjdERPTS5oeWRyYXRlKDxBcHAv
PiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FwcCcpKTsKfSk7CgpgYGAK
CjxoNCBhbGlnbj0iY2VudGVyIj4KICBOb3cgc2VydmVyLXNpZGUgcmVuZGVy
aW5nIHNob3VsZCB3b3JrIHBlcmZlY3RseSEKPC9oND4KCjxoMj4KICA8aHI+
CiAgPGhyPgogIDxpbWcgc3JjPSJodHRwOi8vdGhlamFtZXNreWxlLmNvbS9p
bWcvcmVhY3QtbG9hZGFibGUtYXBpLWRvY3MucG5nIiBhbHQ9IkFQSSBET0NT
Ij4KICA8aHI+CiAgPGhyPgogIDxzbWFsbD5BUEkgRG9jczwvc21hbGw+Cjwv
aDI+CgojIyMgYExvYWRhYmxlYAoKQSBoaWdoZXItb3JkZXIgY29tcG9uZW50
IGZvciBkeW5hbWljYWxseSBbbG9hZGluZ10oI29wdHNsb2FkZXIpIGEgbW9k
dWxlIGJlZm9yZQpbcmVuZGVyaW5nXSgjb3B0c3JlbmRlcikgaXQsIGEgW2xv
YWRpbmddKCNvcHRzLmxvYWRpbmcpIGNvbXBvbmVudCBpcyByZW5kZXJlZAp3
aGlsZSB0aGUgbW9kdWxlIGlzIHVuYXZhaWxhYmxlLgoKYGBganMKY29uc3Qg
TG9hZGFibGVDb21wb25lbnQgPSBMb2FkYWJsZSh7CiAgbG9hZGVyOiAoKSA9
PiBpbXBvcnQoJy4vQmFyJyksCiAgbG9hZGluZzogTG9hZGluZywKICBkZWxh
eTogMjAwLAogIHRpbWVvdXQ6IDEwMDAwLAp9KTsKYGBgCgpUaGlzIHJldHVy
bnMgYSBbTG9hZGFibGVDb21wb25lbnRdKCNsb2FkYWJsZWNvbXBvbmVudCku
CgojIyMgYExvYWRhYmxlLk1hcGAKCkEgaGlnaGVyLW9yZGVyIGNvbXBvbmVu
dCB0aGF0IGFsbG93cyB5b3UgdG8gbG9hZCBtdWx0aXBsZSByZXNvdXJjZXMg
aW4gcGFyYWxsZWwuCgpMb2FkYWJsZS5NYXAncyBbYG9wdHMubG9hZGVyYF0o
I29wdHNsb2FkZXIpIGFjY2VwdHMgYW4gb2JqZWN0IG9mIGZ1bmN0aW9ucywg
YW5kCm5lZWRzIGEgW2BvcHRzLnJlbmRlcmBdKCNvcHRzcmVuZGVyKSBtZXRo
b2QuCgpgYGBqcwpMb2FkYWJsZS5NYXAoewogIGxvYWRlcjogewogICAgQmFy
OiAoKSA9PiBpbXBvcnQoJy4vQmFyJyksCiAgICBpMThuOiAoKSA9PiBmZXRj
aCgnLi9pMThuL2Jhci5qc29uJykudGhlbihyZXMgPT4gcmVzLmpzb24oKSks
CiAgfSwKICByZW5kZXIobG9hZGVkLCBwcm9wcykgewogICAgbGV0IEJhciA9
IGxvYWRlZC5CYXIuZGVmYXVsdDsKICAgIGxldCBpMThuID0gbG9hZGVkLmkx
OG47CiAgICByZXR1cm4gPEJhciB7Li4ucHJvcHN9IGkxOG49e2kxOG59Lz47
CiAgfQp9KTsKYGBgCgpXaGVuIHVzaW5nIGBMb2FkYWJsZS5NYXBgIHRoZSBg
cmVuZGVyKClgIG1ldGhvZCdzIGBsb2FkZWRgIHBhcmFtIHdpbGwgYmUgYW4K
b2JqZWN0IHdpdGggdGhlIHNhbWUgc2hhcGUgYXMgeW91ciBgbG9hZGVyYC4K
CiMjIyBgTG9hZGFibGVgIGFuZCBgTG9hZGFibGUuTWFwYCBPcHRpb25zCgoj
IyMjIGBvcHRzLmxvYWRlcmAKCkEgZnVuY3Rpb24gcmV0dXJuaW5nIGEgcHJv
bWlzZSB0aGF0IGxvYWRzIHlvdXIgbW9kdWxlLgoKYGBganMKTG9hZGFibGUo
ewogIGxvYWRlcjogKCkgPT4gaW1wb3J0KCcuL0JhcicpLAp9KTsKYGBgCgpX
aGVuIHVzaW5nIHdpdGggW2BMb2FkYWJsZS5NYXBgXSgjbG9hZGFibGVtYXAp
IHRoaXMgYWNjZXB0cyBhbiBvYmplY3Qgb2YgdGhlc2UKdHlwZXMgb2YgZnVu
Y3Rpb25zLgoKYGBganMKTG9hZGFibGUuTWFwKHsKICBsb2FkZXI6IHsKICAg
IEJhcjogKCkgPT4gaW1wb3J0KCcuL0JhcicpLAogICAgaTE4bjogKCkgPT4g
ZmV0Y2goJy4vaTE4bi9iYXIuanNvbicpLnRoZW4ocmVzID0+IHJlcy5qc29u
KCkpLAogIH0sCn0pOwpgYGAKCldoZW4gdXNpbmcgd2l0aCBgTG9hZGFibGUu
TWFwYCB5b3UnbGwgYWxzbyBuZWVkIHRvIHBhc3MgYQpbYG9wdHMucmVuZGVy
YF0oI29wdHNyZW5kZXIpIGZ1bmN0aW9uLgoKIyMjIyBgb3B0cy5sb2FkaW5n
YAoKQSBbYExvYWRpbmdDb21wb25lbnRgXSgjbG9hZGluZ2NvbXBvbmVudCkg
dGhhdCByZW5kZXJzIHdoaWxlIGEgbW9kdWxlIGlzCmxvYWRpbmcgb3Igd2hl
biBpdCBlcnJvcnMuCgpgYGBqcwpMb2FkYWJsZSh7CiAgbG9hZGluZzogTG9h
ZGluZ0NvbXBvbmVudCwKfSk7CmBgYAoKVGhpcyBvcHRpb24gaXMgcmVxdWly
ZWQsIGlmIHlvdSBkb24ndCB3YW50IHRvIHJlbmRlciBhbnl0aGluZywgcmV0
dXJuIGBudWxsYC4KCmBgYGpzCkxvYWRhYmxlKHsKICBsb2FkaW5nOiAoKSA9
PiBudWxsLAp9KTsKYGBgCgojIyMjIGBvcHRzLmRlbGF5YAoKVGltZSB0byB3
YWl0IChpbiBtaWxsaXNlY29uZHMpIGJlZm9yZSBwYXNzaW5nCltgcHJvcHMu
cGFzdERlbGF5YF0oI3Byb3BzcGFzdGRlbGF5KSB0byB5b3VyIFtgbG9hZGlu
Z2BdKCNvcHRzbG9hZGluZykKY29tcG9uZW50LiBUaGlzIGRlZmF1bHRzIHRv
IGAyMDBgLgoKYGBganMKTG9hZGFibGUoewogIGRlbGF5OiAyMDAKfSk7CmBg
YAoKW1JlYWQgbW9yZSBhYm91dCBkZWxheXNdKCNhdm9pZGluZy1mbGFzaC1v
Zi1sb2FkaW5nLWNvbXBvbmVudCkuCgojIyMjIGBvcHRzLnRpbWVvdXRgCgpU
aW1lIHRvIHdhaXQgKGluIG1pbGxpc2Vjb25kcykgYmVmb3JlIHBhc3NpbmcK
W2Bwcm9wcy50aW1lZE91dGBdKCNwcm9wc3RpbWVkb3V0KSB0byB5b3VyIFtg
bG9hZGluZ2BdKCNvcHRzbG9hZGluZykgY29tcG9uZW50LgpUaGlzIGlzIHR1
cm5lZCBvZmYgYnkgZGVmYXVsdC4KCmBgYGpzCkxvYWRhYmxlKHsKICB0aW1l
b3V0OiAxMDAwMAp9KTsKYGBgCgpbUmVhZCBtb3JlIGFib3V0IHRpbWVvdXRz
XSgjdGltaW5nLW91dC13aGVuLXRoZS1sb2FkZXItaXMtdGFraW5nLXRvby1s
b25nKS4KCiMjIyMgYG9wdHMucmVuZGVyYAoKQSBmdW5jdGlvbiB0byBjdXN0
b21pemUgdGhlIHJlbmRlcmluZyBvZiBsb2FkZWQgbW9kdWxlcy4KClJlY2Vp
dmVzIGBsb2FkZWRgIHdoaWNoIGlzIHRoZSByZXNvbHZlZCB2YWx1ZSBvZiBb
YG9wdHMubG9hZGVyYF0oI29wdHNsb2FkZXIpCmFuZCBgcHJvcHNgIHdoaWNo
IGFyZSB0aGUgcHJvcHMgcGFzc2VkIHRvIHRoZQpbYExvYWRhYmxlQ29tcG9u
ZW50YF0oI2xvYWRhYmxlY29tcG9uZW50KS4KCmBgYGpzCkxvYWRhYmxlKHsK
ICByZW5kZXIobG9hZGVkLCBwcm9wcykgewogICAgbGV0IENvbXBvbmVudCA9
IGxvYWRlZC5kZWZhdWx0OwogICAgcmV0dXJuIDxDb21wb25lbnQgey4uLnBy
b3BzfS8+OwogIH0KfSk7CmBgYAoKIyMjIyBgb3B0cy53ZWJwYWNrYAoKQW4g
b3B0aW9uYWwgZnVuY3Rpb24gd2hpY2ggcmV0dXJucyBhbiBhcnJheSBvZiBX
ZWJwYWNrIG1vZHVsZSBpZHMgd2hpY2ggeW91IGNhbgpnZXQgd2l0aCBgcmVx
dWlyZS5yZXNvbHZlV2Vha2AuCgpgYGBqcwpMb2FkYWJsZSh7CiAgbG9hZGVy
OiAoKSA9PiBpbXBvcnQoJy4vRm9vJyksCiAgd2VicGFjazogKCkgPT4gW3Jl
cXVpcmUucmVzb2x2ZVdlYWsoJy4vRm9vJyldLAp9KTsKYGBgCgpUaGlzIG9w
dGlvbiBjYW4gYmUgYXV0b21hdGVkIHdpdGggdGhlIFtCYWJlbCBQbHVnaW5d
KCNiYWJlbC1wbHVnaW4pLgoKIyMjIyBgb3B0cy5tb2R1bGVzYAoKQW4gb3B0
aW9uYWwgYXJyYXkgd2l0aCBtb2R1bGUgcGF0aHMgZm9yIHlvdXIgaW1wb3J0
cy4KCmBgYGpzCkxvYWRhYmxlKHsKICBsb2FkZXI6ICgpID0+IGltcG9ydCgn
Li9teS1jb21wb25lbnQnKSwKICBtb2R1bGVzOiBbJy4vbXktY29tcG9uZW50
J10sCn0pOwpgYGAKClRoaXMgb3B0aW9uIGNhbiBiZSBhdXRvbWF0ZWQgd2l0
aCB0aGUgW0JhYmVsIFBsdWdpbl0oI2JhYmVsLXBsdWdpbikuCgojIyMgYExv
YWRhYmxlQ29tcG9uZW50YAoKVGhpcyBpcyB0aGUgY29tcG9uZW50IHJldHVy
bmVkIGJ5IGBMb2FkYWJsZWAgYW5kIGBMb2FkYWJsZS5NYXBgLgoKYGBganMK
Y29uc3QgTG9hZGFibGVDb21wb25lbnQgPSBMb2FkYWJsZSh7CiAgLy8gLi4u
Cn0pOwpgYGAKClByb3BzIHBhc3NlZCB0byB0aGlzIGNvbXBvbmVudCB3aWxs
IGJlIHBhc3NlZCBzdHJhaWdodCB0aHJvdWdoIHRvIHRoZQpkeW5hbWljYWxs
eSBsb2FkZWQgY29tcG9uZW50IHZpYSBbYG9wdHMucmVuZGVyYF0oI29wdHNy
ZW5kZXIpLgoKIyMjIyBgTG9hZGFibGVDb21wb25lbnQucHJlbG9hZCgpYAoK
VGhpcyBpcyBhIHN0YXRpYyBtZXRob2Qgb24gW2BMb2FkYWJsZUNvbXBvbmVu
dGBdKCNsb2FkYWJsZWNvbXBvbmVudCkgd2hpY2ggY2FuCmJlIHVzZWQgdG8g
bG9hZCB0aGUgY29tcG9uZW50IGFoZWFkIG9mIHRpbWUuCgpgYGBqcwpjb25z
dCBMb2FkYWJsZUNvbXBvbmVudCA9IExvYWRhYmxlKHsuLi59KTsKCkxvYWRh
YmxlQ29tcG9uZW50LnByZWxvYWQoKTsKYGBgCgpUaGlzIHJldHVybnMgYSBw
cm9taXNlLCBidXQgeW91IHNob3VsZCBhdm9pZCB3YWl0aW5nIGZvciB0aGF0
IHByb21pc2UgdG8KcmVzb2x2ZSB0byB1cGRhdGUgeW91ciBVSS4gSW4gbW9z
dCBjYXNlcyBpdCBjcmVhdGVzIGEgYmFkIHVzZXIgZXhwZXJpZW5jZS4KCltS
ZWFkIG1vcmUgYWJvdXQgcHJlbG9hZGluZ10oI3ByZWxvYWRpbmcpLgoKIyMj
IGBMb2FkaW5nQ29tcG9uZW50YAoKVGhpcyBpcyB0aGUgY29tcG9uZW50IHlv
dSBwYXNzIHRvIFtgb3B0cy5sb2FkaW5nYF0oI29wdHNsb2FkaW5nKS4KCmBg
YGpzCmZ1bmN0aW9uIExvYWRpbmdDb21wb25lbnQocHJvcHMpIHsKICBpZiAo
cHJvcHMuZXJyb3IpIHsKICAgIC8vIFdoZW4gdGhlIGxvYWRlciBoYXMgZXJy
b3JlZAogICAgcmV0dXJuIDxkaXY+RXJyb3IhIDxidXR0b24gb25DbGljaz17
IHByb3BzLnJldHJ5IH0+UmV0cnk8L2J1dHRvbj48L2Rpdj47CiAgfSBlbHNl
IGlmIChwcm9wcy50aW1lZE91dCkgewogICAgLy8gV2hlbiB0aGUgbG9hZGVy
IGhhcyB0YWtlbiBsb25nZXIgdGhhbiB0aGUgdGltZW91dAogICAgcmV0dXJu
IDxkaXY+VGFraW5nIGEgbG9uZyB0aW1lLi4uIDxidXR0b24gb25DbGljaz17
IHByb3BzLnJldHJ5IH0+UmV0cnk8L2J1dHRvbj48L2Rpdj47CiAgfSBlbHNl
IGlmIChwcm9wcy5wYXN0RGVsYXkpIHsKICAgIC8vIFdoZW4gdGhlIGxvYWRl
ciBoYXMgdGFrZW4gbG9uZ2VyIHRoYW4gdGhlIGRlbGF5CiAgICByZXR1cm4g
PGRpdj5Mb2FkaW5nLi4uPC9kaXY+OwogIH0gZWxzZSB7CiAgICAvLyBXaGVu
IHRoZSBsb2FkZXIgaGFzIGp1c3Qgc3RhcnRlZAogICAgcmV0dXJuIG51bGw7
CiAgfQp9CgpMb2FkYWJsZSh7CiAgbG9hZGluZzogTG9hZGluZ0NvbXBvbmVu
dCwKfSk7CmBgYAoKW1JlYWQgbW9yZSBhYm91dCBsb2FkaW5nIGNvbXBvbmVu
dHNdKCNjcmVhdGluZy1hLWdyZWF0LWxvYWRpbmctY29tcG9uZW50KQoKIyMj
IyBgcHJvcHMuZXJyb3JgCgpBbiBgRXJyb3JgIG9iamVjdCBwYXNzZWQgdG8g
W2BMb2FkaW5nQ29tcG9uZW50YF0oI2xvYWRpbmdjb21wb25lbnQpIHdoZW4g
dGhlCltgbG9hZGVyYF0oI29wdHNsb2FkZXIpIGhhcyBmYWlsZWQuIFdoZW4g
dGhlcmUgaXMgbm8gZXJyb3IsIGBudWxsYCBpcwpwYXNzZWQuCgpgYGBqcwpm
dW5jdGlvbiBMb2FkaW5nQ29tcG9uZW50KHByb3BzKSB7CiAgaWYgKHByb3Bz
LmVycm9yKSB7CiAgICByZXR1cm4gPGRpdj5FcnJvciE8L2Rpdj47CiAgfSBl
bHNlIHsKICAgIHJldHVybiA8ZGl2PkxvYWRpbmcuLi48L2Rpdj47CiAgfQp9
CmBgYAoKW1JlYWQgbW9yZSBhYm91dCBlcnJvcnNdKCNsb2FkaW5nLWVycm9y
LXN0YXRlcykuCgojIyMjIGBwcm9wcy5yZXRyeWAKCkEgZnVuY3Rpb24gcHJv
cCBwYXNzZWQgdG8gW2BMb2FkaW5nQ29tcG9uZW50YF0oI2xvYWRpbmdjb21w
b25lbnQpIHdoZW4gdGhlCltgbG9hZGVyYF0oI29wdHNsb2FkZXIpIGhhcyBm
YWlsZWQsIHVzZWQgdG8gcmV0cnkgbG9hZGluZyB0aGUgY29tcG9uZW50LgoK
YGBganMKZnVuY3Rpb24gTG9hZGluZ0NvbXBvbmVudChwcm9wcykgewogIGlm
IChwcm9wcy5lcnJvcikgewogICAgcmV0dXJuIDxkaXY+RXJyb3IhIDxidXR0
b24gb25DbGljaz17IHByb3BzLnJldHJ5IH0+UmV0cnk8L2J1dHRvbj48L2Rp
dj47CiAgfSBlbHNlIHsKICAgIHJldHVybiA8ZGl2PkxvYWRpbmcuLi48L2Rp
dj47CiAgfQp9CmBgYAoKW1JlYWQgbW9yZSBhYm91dCBlcnJvcnNdKCNsb2Fk
aW5nLWVycm9yLXN0YXRlcykuCgojIyMjIGBwcm9wcy50aW1lZE91dGAKCkEg
Ym9vbGVhbiBwcm9wIHBhc3NlZCB0byBbYExvYWRpbmdDb21wb25lbnRgXSgj
bG9hZGluZ2NvbXBvbmVudCkgYWZ0ZXIgYSBzZXQKW2B0aW1lb3V0YF0oI29w
dHN0aW1lb3V0KS4KCmBgYGpzCmZ1bmN0aW9uIExvYWRpbmdDb21wb25lbnQo
cHJvcHMpIHsKICBpZiAocHJvcHMudGltZWRPdXQpIHsKICAgIHJldHVybiA8
ZGl2PlRha2luZyBhIGxvbmcgdGltZS4uLjwvZGl2PjsKICB9IGVsc2Ugewog
ICAgcmV0dXJuIDxkaXY+TG9hZGluZy4uLjwvZGl2PjsKICB9Cn0KYGBgCgpb
UmVhZCBtb3JlIGFib3V0IHRpbWVvdXRzXSgjdGltaW5nLW91dC13aGVuLXRo
ZS1sb2FkZXItaXMtdGFraW5nLXRvby1sb25nKS4KCiMjIyMgYHByb3BzLnBh
c3REZWxheWAKCkEgYm9vbGVhbiBwcm9wIHBhc3NlZCB0byBbYExvYWRpbmdD
b21wb25lbnRgXSgjbG9hZGluZ2NvbXBvbmVudCkgYWZ0ZXIgYSBzZXQKW2Bk
ZWxheWBdKCNvcHRzZGVsYXkpLgoKYGBganMKZnVuY3Rpb24gTG9hZGluZ0Nv
bXBvbmVudChwcm9wcykgewogIGlmIChwcm9wcy5wYXN0RGVsYXkpIHsKICAg
IHJldHVybiA8ZGl2PkxvYWRpbmcuLi48L2Rpdj47CiAgfSBlbHNlIHsKICAg
IHJldHVybiBudWxsOwogIH0KfQpgYGAKCltSZWFkIG1vcmUgYWJvdXQgZGVs
YXlzXSgjYXZvaWRpbmctZmxhc2gtb2YtbG9hZGluZy1jb21wb25lbnQpLgoK
IyMjIGBMb2FkYWJsZS5wcmVsb2FkQWxsKClgCgpUaGlzIHdpbGwgY2FsbCBh
bGwgb2YgdGhlCltgTG9hZGFibGVDb21wb25lbnQucHJlbG9hZGBdKCNsb2Fk
YWJsZWNvbXBvbmVudHByZWxvYWQpIG1ldGhvZHMgcmVjdXJzaXZlbHkKdW50
aWwgdGhleSBhcmUgYWxsIHJlc29sdmVkLiBBbGxvd2luZyB5b3UgdG8gcHJl
bG9hZCBhbGwgb2YgeW91ciBkeW5hbWljCm1vZHVsZXMgaW4gZW52aXJvbm1l
bnRzIGxpa2UgdGhlIHNlcnZlci4KCmBgYGpzCkxvYWRhYmxlLnByZWxvYWRB
bGwoKS50aGVuKCgpID0+IHsKICBhcHAubGlzdGVuKDMwMDAsICgpID0+IHsK
ICAgIGNvbnNvbGUubG9nKCdSdW5uaW5nIG9uIGh0dHA6Ly9sb2NhbGhvc3Q6
MzAwMC8nKTsKICB9KTsKfSk7CmBgYAoKSXQncyBpbXBvcnRhbnQgdG8gbm90
ZSB0aGF0IHRoaXMgcmVxdWlyZXMgdGhhdCB5b3UgZGVjbGFyZSBhbGwgb2Yg
eW91ciBsb2FkYWJsZQpjb21wb25lbnRzIHdoZW4gbW9kdWxlcyBhcmUgaW5p
dGlhbGl6ZWQgcmF0aGVyIHRoYW4gd2hlbiB5b3VyIGFwcCBpcyBiZWluZwpy
ZW5kZXJlZC4KCioqR29vZDoqKgoKYGBganMKLy8gRHVyaW5nIG1vZHVsZSBp
bml0aWFsaXphdGlvbi4uLgpjb25zdCBMb2FkYWJsZUNvbXBvbmVudCA9IExv
YWRhYmxlKHsuLi59KTsKCmNsYXNzIE15Q29tcG9uZW50IGV4dGVuZHMgUmVh
Y3QuQ29tcG9uZW50IHsKICBjb21wb25lbnREaWRNb3VudCgpIHsKICAgIC8v
IC4uLgogIH0KfQpgYGAKCioqQmFkOioqCgpgYGBqcwovLyAuLi4KCmNsYXNz
IE15Q29tcG9uZW50IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHsKICBjb21w
b25lbnREaWRNb3VudCgpIHsKICAgIC8vIER1cmluZyBhcHAgcmVuZGVyLi4u
CiAgICBjb25zdCBMb2FkYWJsZUNvbXBvbmVudCA9IExvYWRhYmxlKHsuLi59
KTsKICB9Cn0KYGBgCgo+ICoqTm90ZToqKiBgTG9hZGFibGUucHJlbG9hZEFs
bCgpYCB3aWxsIG5vdCB3b3JrIGlmIHlvdSBoYXZlIG1vcmUgdGhhbiBvbmUK
PiBjb3B5IG9mIGByZWFjdC1sb2FkYWJsZWAgaW4geW91ciBhcHAuCgpbUmVh
ZCBtb3JlIGFib3V0IHByZWxvYWRpbmcgb24gdGhlIHNlcnZlcl0oI3ByZWxv
YWRpbmctYWxsLXlvdXItbG9hZGFibGUtY29tcG9uZW50cy1vbi10aGUtc2Vy
dmVyKS4KCiMjIyBgTG9hZGFibGUucHJlbG9hZFJlYWR5KClgCgpDaGVjayBm
b3IgbW9kdWxlcyB0aGF0IGFyZSBhbHJlYWR5IGxvYWRlZCBpbiB0aGUgYnJv
d3NlciBhbmQgY2FsbCB0aGUgbWF0Y2hpbmcKW2BMb2FkYWJsZUNvbXBvbmVu
dC5wcmVsb2FkYF0oI2xvYWRhYmxlY29tcG9uZW50cHJlbG9hZCkgbWV0aG9k
cy4KCmBgYGpzCkxvYWRhYmxlLnByZWxvYWRSZWFkeSgpLnRoZW4oKCkgPT4g
ewogIFJlYWN0RE9NLmh5ZHJhdGUoPEFwcC8+LCBkb2N1bWVudC5nZXRFbGVt
ZW50QnlJZCgnYXBwJykpOwp9KTsKYGBgCgpbUmVhZCBtb3JlIGFib3V0IHBy
ZWxvYWRpbmcgb24gdGhlIGNsaWVudF0oI3dhaXRpbmctdG8tcmVuZGVyLW9u
LXRoZS1jbGllbnQtdW50aWwtYWxsLXRoZS1idW5kbGVzLWFyZS1sb2FkZWQp
LgoKIyMjIGBMb2FkYWJsZS5DYXB0dXJlYAoKQSBjb21wb25lbnQgZm9yIHJl
cG9ydGluZyB3aGljaCBtb2R1bGVzIHdlcmUgcmVuZGVyZWQuCgpBY2NlcHRz
IGEgYHJlcG9ydGAgcHJvcCB3aGljaCBpcyBjYWxsZWQgZm9yIGV2ZXJ5IGBt
b2R1bGVOYW1lYCB0aGF0IGlzCnJlbmRlcmVkIHZpYSBSZWFjdCBMb2FkYWJs
ZS4KCmBgYGpzCmxldCBtb2R1bGVzID0gW107CgpsZXQgaHRtbCA9IFJlYWN0
RE9NU2VydmVyLnJlbmRlclRvU3RyaW5nKAogIDxMb2FkYWJsZS5DYXB0dXJl
IHJlcG9ydD17bW9kdWxlTmFtZSA9PiBtb2R1bGVzLnB1c2gobW9kdWxlTmFt
ZSl9PgogICAgPEFwcC8+CiAgPC9Mb2FkYWJsZS5DYXB0dXJlPgopOwoKY29u
c29sZS5sb2cobW9kdWxlcyk7CmBgYAoKW1JlYWQgbW9yZSBhYm91dCBjYXB0
dXJpbmcgcmVuZGVyZWQgbW9kdWxlc10oI2ZpbmRpbmctb3V0LXdoaWNoLWR5
bmFtaWMtbW9kdWxlcy13ZXJlLXJlbmRlcmVkKS4KCiMjIEJhYmVsIFBsdWdp
bgoKUHJvdmlkaW5nIFtgb3B0cy53ZWJwYWNrYF0oI29wdHN3ZWJwYWNrKSBh
bmQgW2BvcHRzLm1vZHVsZXNgXSgjb3B0c21vZHVsZXMpIGZvcgpldmVyeSBs
b2FkYWJsZSBjb21wb25lbnQgaXMgYSBsb3Qgb2YgbWFudWFsIHdvcmsgdG8g
cmVtZW1iZXIgdG8gZG8uCgpJbnN0ZWFkIHlvdSBjYW4gYWRkIHRoZSBCYWJl
bCBwbHVnaW4gdG8geW91ciBjb25maWcgYW5kIGl0IHdpbGwgYXV0b21hdGUg
aXQgZm9yCnlvdToKCmBgYGpzb24KewogICJwbHVnaW5zIjogWyJyZWFjdC1s
b2FkYWJsZS9iYWJlbCJdCn0KYGBgCgoqKklucHV0KioKCmBgYGpzCmltcG9y
dCBMb2FkYWJsZSBmcm9tICdyZWFjdC1sb2FkYWJsZSc7Cgpjb25zdCBMb2Fk
YWJsZU15Q29tcG9uZW50ID0gTG9hZGFibGUoewogIGxvYWRlcjogKCkgPT4g
aW1wb3J0KCcuL015Q29tcG9uZW50JyksCn0pOwoKY29uc3QgTG9hZGFibGVD
b21wb25lbnRzID0gTG9hZGFibGUuTWFwKHsKICBsb2FkZXI6IHsKICAgIE9u
ZTogKCkgPT4gaW1wb3J0KCcuL09uZScpLAogICAgVHdvOiAoKSA9PiBpbXBv
cnQoJy4vVHdvJyksCiAgfSwKfSk7CmBgYAoKKipPdXRwdXQqKgoKYGBganMK
aW1wb3J0IExvYWRhYmxlIGZyb20gJ3JlYWN0LWxvYWRhYmxlJzsKaW1wb3J0
IHBhdGggZnJvbSAncGF0aCc7Cgpjb25zdCBMb2FkYWJsZU15Q29tcG9uZW50
ID0gTG9hZGFibGUoewogIGxvYWRlcjogKCkgPT4gaW1wb3J0KCcuL015Q29t
cG9uZW50JyksCiAgd2VicGFjazogKCkgPT4gW3JlcXVpcmUucmVzb2x2ZVdl
YWsoJy4vTXlDb21wb25lbnQnKV0sCiAgbW9kdWxlczogW3BhdGguam9pbihf
X2Rpcm5hbWUsICcuL015Q29tcG9uZW50JyldLAp9KTsKCmNvbnN0IExvYWRh
YmxlQ29tcG9uZW50cyA9IExvYWRhYmxlLk1hcCh7CiAgbG9hZGVyOiB7CiAg
ICBPbmU6ICgpID0+IGltcG9ydCgnLi9PbmUnKSwKICAgIFR3bzogKCkgPT4g
aW1wb3J0KCcuL1R3bycpLAogIH0sCiAgd2VicGFjazogKCkgPT4gW3JlcXVp
cmUucmVzb2x2ZVdlYWsoJy4vT25lJyksIHJlcXVpcmUucmVzb2x2ZVdlYWso
Jy4vVHdvJyldLAogIG1vZHVsZXM6IFtwYXRoLmpvaW4oX19kaXJuYW1lLCAn
Li9PbmUnKSwgcGF0aC5qb2luKF9fZGlybmFtZSwgJy4vVHdvJyldLAp9KTsK
YGBgCgpbUmVhZCBtb3JlIGFib3V0IGRlY2xhcmluZyBtb2R1bGVzXSgjZGVj
bGFyaW5nLXdoaWNoLW1vZHVsZXMtYXJlLWJlaW5nLWxvYWRlZCkuCgojIyBX
ZWJwYWNrIFBsdWdpbgoKSW4gb3JkZXIgdG8gW3NlbmQgdGhlIHJpZ2h0IGJ1
bmRsZXMgZG93bl0oI21hcHBpbmctbG9hZGVkLW1vZHVsZXMtdG8tYnVuZGxl
cykKd2hlbiByZW5kZXJpbmcgc2VydmVyLXNpZGUsIHlvdSdsbCBuZWVkIHRo
ZSBSZWFjdCBMb2FkYWJsZSBXZWJwYWNrIHBsdWdpbsKgCnRvIHByb3ZpZGUg
eW91IHdpdGggYSBtYXBwaW5nIG9mIG1vZHVsZXMgdG8gYnVuZGxlcy4KCmBg
YGpzCi8vIHdlYnBhY2suY29uZmlnLmpzCmltcG9ydCB7IFJlYWN0TG9hZGFi
bGVQbHVnaW4gfSBmcm9tICdyZWFjdC1sb2FkYWJsZS93ZWJwYWNrJzsKCmV4
cG9ydCBkZWZhdWx0IHsKICBwbHVnaW5zOiBbCiAgICBuZXcgUmVhY3RMb2Fk
YWJsZVBsdWdpbih7CiAgICAgIGZpbGVuYW1lOiAnLi9kaXN0L3JlYWN0LWxv
YWRhYmxlLmpzb24nLAogICAgfSksCiAgXSwKfTsKYGBgCgpUaGlzIHdpbGwg
Y3JlYXRlIGEgZmlsZSAoYG9wdHMuZmlsZW5hbWVgKSB3aGljaCB5b3UgY2Fu
IGltcG9ydCB0byBtYXAgbW9kdWxlcwp0byBidW5kbGVzLgoKW1JlYWQgbW9y
ZSBhYm91dCBtYXBwaW5nIG1vZHVsZXMgdG8gYnVuZGxlc10oI21hcHBpbmct
bG9hZGVkLW1vZHVsZXMtdG8tYnVuZGxlcykuCgojIyMgYGdldEJ1bmRsZXNg
CgpBIG1ldGhvZCBleHBvcnRlZCBieSBgcmVhY3QtbG9hZGFibGUvd2VicGFj
a2AgZm9yIGNvbnZlcnRpbmcgbW9kdWxlcyB0bwpidW5kbGVzLgoKYGBganMK
aW1wb3J0IHsgZ2V0QnVuZGxlcyB9IGZyb20gJ3JlYWN0LWxvYWRhYmxlL3dl
YnBhY2snOwoKbGV0IGJ1bmRsZXMgPSBnZXRCdW5kbGVzKHN0YXRzLCBtb2R1
bGVzKTsKYGBgCgpbUmVhZCBtb3JlIGFib3V0IG1hcHBpbmcgbW9kdWxlcyB0
byBidW5kbGVzXSgjbWFwcGluZy1sb2FkZWQtbW9kdWxlcy10by1idW5kbGVz
KS4KCjxoMj4KICA8aHI+CiAgPGhyPgogIDxpbWcgc3JjPSJodHRwOi8vdGhl
amFtZXNreWxlLmNvbS9pbWcvcmVhY3QtbG9hZGFibGUtZmFxLnBuZyIgYWx0
PSJGQVEiPgogIDxocj4KICA8aHI+CiAgPHNtYWxsPkZBUTwvc21hbGw+Cjwv
aDI+CgojIyMgSG93IGRvIEkgYXZvaWQgcmVwZXRpdGlvbj8KClNwZWNpZnlp
bmcgdGhlIHNhbWUgYGxvYWRpbmdgIGNvbXBvbmVudCBvciBgZGVsYXlgIGV2
ZXJ5IHRpbWUgeW91IHVzZQpgTG9hZGFibGUoKWAgZ2V0cyByZXBldGl0aXZl
IGZhc3QuIEluc3RlYWQgeW91IGNhbiB3cmFwIGBMb2FkYWJsZWAgd2l0aCB5
b3VyCm93biBIaWdoZXItT3JkZXIgQ29tcG9uZW50IChIT0MpIHRvIHNldCBk
ZWZhdWx0IG9wdGlvbnMuCgpgYGBqcwppbXBvcnQgTG9hZGFibGUgZnJvbSAn
cmVhY3QtbG9hZGFibGUnOwppbXBvcnQgTG9hZGluZyBmcm9tICcuL215LWxv
YWRpbmctY29tcG9uZW50JzsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE15
TG9hZGFibGUob3B0cykgewogIHJldHVybiBMb2FkYWJsZShPYmplY3QuYXNz
aWduKHsKICAgIGxvYWRpbmc6IExvYWRpbmcsCiAgICBkZWxheTogMjAwLAog
ICAgdGltZW91dDogMTAwMDAsCiAgfSwgb3B0cykpOwp9OwpgYGAKClRoZW4g
eW91IGNhbiBqdXN0IHNwZWNpZnkgYSBgbG9hZGVyYCB3aGVuIHlvdSBnbyB0
byB1c2UgaXQuCgpgYGBqcwppbXBvcnQgTXlMb2FkYWJsZSBmcm9tICcuL015
TG9hZGFibGUnOwoKY29uc3QgTG9hZGFibGVNeUNvbXBvbmVudCA9IE15TG9h
ZGFibGUoewogIGxvYWRlcjogKCkgPT4gaW1wb3J0KCcuL015Q29tcG9uZW50
JyksCn0pOwoKZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBwIGV4dGVuZHMgUmVh
Y3QuQ29tcG9uZW50IHsKICByZW5kZXIoKSB7CiAgICByZXR1cm4gPExvYWRh
YmxlTXlDb21wb25lbnQvPjsKICB9Cn0KYGBgCgpVbmZvcnR1bmF0ZWx5IGF0
IHRoZSBtb21lbnQgdXNpbmcgd3JhcHBlZCBMb2FkYWJsZSBicmVha3MgW3Jl
YWN0LWxvYWRhYmxlL2JhYmVsXSgjYmFiZWwtcGx1Z2luKSBzbyBpbiBzdWNo
IGNhc2UgeW91IGhhdmUgdG8gYWRkIHJlcXVpcmVkIHByb3BlcnRpZXMgKGBt
b2R1bGVzYCwgYHdlYnBhY2tgKSBtYW51YWxseS4KCmBgYGpzCmltcG9ydCBN
eUxvYWRhYmxlIGZyb20gJy4vTXlMb2FkYWJsZSc7Cgpjb25zdCBMb2FkYWJs
ZU15Q29tcG9uZW50ID0gTXlMb2FkYWJsZSh7CiAgbG9hZGVyOiAoKSA9PiBp
bXBvcnQoJy4vTXlDb21wb25lbnQnKSwKICBtb2R1bGVzOiBbJy4vTXlDb21w
b25lbnQnXSwKICB3ZWJwYWNrOiAoKSA9PiBbcmVxdWlyZS5yZXNvbHZlV2Vh
aygnLi9NeUNvbXBvbmVudCcpXSwKfSk7CgpleHBvcnQgZGVmYXVsdCBjbGFz
cyBBcHAgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQgewogIHJlbmRlcigpIHsK
ICAgIHJldHVybiA8TG9hZGFibGVNeUNvbXBvbmVudC8+OwogIH0KfQpgYGAK
CiMjIyBIb3cgZG8gSSBoYW5kbGUgb3RoZXIgc3R5bGVzIGAuY3NzYCBvciBz
b3VyY2VtYXBzIGAubWFwYCB3aXRoIHNlcnZlci1zaWRlIHJlbmRlcmluZz8K
CldoZW4geW91IGNhbGwgW2BnZXRCdW5kbGVzYF0oI2dldGJ1bmRsZXMpLCBp
dCBtYXkgcmV0dXJuIGZpbGUgdHlwZXMgb3RoZXIgdGhhbgpKYXZhU2NyaXB0
IGRlcGVuZGluZyBvbiB5b3VyIFdlYnBhY2sgY29uZmlndXJhdGlvbi4KClRv
IGhhbmRsZSB0aGlzLCB5b3Ugc2hvdWxkIG1hbnVhbGx5IGZpbHRlciBkb3du
IHRvIHRoZSBmaWxlIGV4dGVuc2lvbnMgdGhhdAp5b3UgY2FyZSBhYm91dDoK
CmBgYGpzCmxldCBidW5kbGVzID0gZ2V0QnVuZGxlcyhzdGF0cywgbW9kdWxl
cyk7CgpsZXQgc3R5bGVzID0gYnVuZGxlcy5maWx0ZXIoYnVuZGxlID0+IGJ1
bmRsZS5maWxlLmVuZHNXaXRoKCcuY3NzJykpOwpsZXQgc2NyaXB0cyA9IGJ1
bmRsZXMuZmlsdGVyKGJ1bmRsZSA9PiBidW5kbGUuZmlsZS5lbmRzV2l0aCgn
LmpzJykpOwoKcmVzLnNlbmQoYAogIDwhZG9jdHlwZSBodG1sPgogIDxodG1s
IGxhbmc9ImVuIj4KICAgIDxoZWFkPgogICAgICAuLi4KICAgICAgJHtzdHls
ZXMubWFwKHN0eWxlID0+IHsKICAgICAgICByZXR1cm4gYDxsaW5rIGhyZWY9
Ii9kaXN0LyR7c3R5bGUuZmlsZX0iIHJlbD0ic3R5bGVzaGVldCIvPmAKICAg
ICAgfSkuam9pbignXG4nKX0KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAg
ICA8ZGl2IGlkPSJhcHAiPiR7aHRtbH08L2Rpdj4KICAgICAgPHNjcmlwdCBz
cmM9Ii9kaXN0L21haW4uanMiPjwvc2NyaXB0PgogICAgICAke3NjcmlwdHMu
bWFwKHNjcmlwdCA9PiB7CiAgICAgICAgcmV0dXJuIGA8c2NyaXB0IHNyYz0i
L2Rpc3QvJHtzY3JpcHQuZmlsZX0iPjwvc2NyaXB0PmAKICAgICAgfSkuam9p
bignXG4nKX0KICAgIDwvYm9keT4KICA8L2h0bWw+CmApOwpgYGAK
",,14279,"bGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczoKICAtICc0JwogIC0gJzYnCiAg
LSAnOCcKICAtICcxMCcKY2FjaGU6IHlhcm4Kc2NyaXB0OiB5YXJuIHRlc3Qg
LS0gLS1ydW5JbkJhbmQgLS1jb3ZlcmFnZSAmJiB5YXJuIGZsb3cK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'trix',11829145,b'A rich text editor for everyday writing',b'CoffeeScript',34,14276,,271,False,b'https://api.github.com/repos/basecamp/trix/forks',"IyBUcml4CiMjIyBBIFJpY2ggVGV4dCBFZGl0b3IgZm9yIEV2ZXJ5ZGF5IFdy
aXRpbmcKCioqQ29tcG9zZSBiZWF1dGlmdWxseSBmb3JtYXR0ZWQgdGV4dCBp
biB5b3VyIHdlYiBhcHBsaWNhdGlvbi4qKiBUcml4IGlzIGEgV1lTSVdZRyBl
ZGl0b3IgZm9yIHdyaXRpbmcgbWVzc2FnZXMsIGNvbW1lbnRzLCBhcnRpY2xl
cywgYW5kIGxpc3Rz4oCUdGhlIHNpbXBsZSBkb2N1bWVudHMgbW9zdCB3ZWIg
YXBwcyBhcmUgbWFkZSBvZi4gSXQgZmVhdHVyZXMgYSBzb3BoaXN0aWNhdGVk
IGRvY3VtZW50IG1vZGVsLCBzdXBwb3J0IGZvciBlbWJlZGRlZCBhdHRhY2ht
ZW50cywgYW5kIG91dHB1dHMgdGVyc2UgYW5kIGNvbnNpc3RlbnQgSFRNTC4K
ClRyaXggaXMgYW4gb3Blbi1zb3VyY2UgcHJvamVjdCBmcm9tIFtCYXNlY2Ft
cF0oaHR0cHM6Ly9iYXNlY2FtcC5jb20vKSwgdGhlIGNyZWF0b3JzIG9mIFtS
dWJ5IG9uIFJhaWxzXShodHRwOi8vcnVieW9ucmFpbHMub3JnLykuIE1pbGxp
b25zIG9mIHBlb3BsZSB0cnVzdCB0aGVpciB0ZXh0IHRvIEJhc2VjYW1wLCBh
bmQgd2UgYnVpbHQgVHJpeCB0byBnaXZlIHRoZW0gdGhlIGJlc3QgcG9zc2li
bGUgZWRpdGluZyBleHBlcmllbmNlLiBTZWUgVHJpeCBpbiBhY3Rpb24gaW4g
dGhlIFthbGwtbmV3IEJhc2VjYW1wIDNdKGh0dHBzOi8vYmFzZWNhbXAuY29t
LzMtaXMtY29taW5nKS4KCiMjIyBEaWZmZXJlbnQgQnkgRGVzaWduCgpNb3N0
IFdZU0lXWUcgZWRpdG9ycyBhcmUgd3JhcHBlcnMgYXJvdW5kIEhUTUzigJlz
IGBjb250ZW50ZWRpdGFibGVgIGFuZCBgZXhlY0NvbW1hbmRgIEFQSXMsIGRl
c2lnbmVkIGJ5IE1pY3Jvc29mdCB0byBzdXBwb3J0IGxpdmUgZWRpdGluZyBv
ZiB3ZWIgcGFnZXMgaW4gSW50ZXJuZXQgRXhwbG9yZXIgNS41LCBhbmQgW2V2
ZW50dWFsbHkgcmV2ZXJzZS1lbmdpbmVlcmVkXShodHRwczovL2Jsb2cud2hh
dHdnLm9yZy90aGUtcm9hZC10by1odG1sLTUtY29udGVudGVkaXRhYmxlI2hp
c3RvcnkpIGFuZCBjb3BpZWQgYnkgb3RoZXIgYnJvd3NlcnMuCgpCZWNhdXNl
IHRoZXNlIEFQSXMgd2VyZSBuZXZlciBmdWxseSBzcGVjaWZpZWQgb3IgZG9j
dW1lbnRlZCwgYW5kIGJlY2F1c2UgV1lTSVdZRyBIVE1MIGVkaXRvcnMgYXJl
IGVub3Jtb3VzIGluIHNjb3BlLCBlYWNoIGJyb3dzZXLigJlzIGltcGxlbWVu
dGF0aW9uIGhhcyBpdHMgb3duIHNldCBvZiBidWdzIGFuZCBxdWlya3MsIGFu
ZCBKYXZhU2NyaXB0IGRldmVsb3BlcnMgYXJlIGxlZnQgdG8gcmVzb2x2ZSB0
aGUgaW5jb25zaXN0ZW5jaWVzLgoKVHJpeCBzaWRlc3RlcHMgdGhlc2UgaW5j
b25zaXN0ZW5jaWVzIGJ5IHRyZWF0aW5nIGBjb250ZW50ZWRpdGFibGVgIGFz
IGFuIEkvTyBkZXZpY2U6IHdoZW4gaW5wdXQgbWFrZXMgaXRzIHdheSB0byB0
aGUgZWRpdG9yLCBUcml4IGNvbnZlcnRzIHRoYXQgaW5wdXQgaW50byBhbiBl
ZGl0aW5nIG9wZXJhdGlvbiBvbiBpdHMgaW50ZXJuYWwgZG9jdW1lbnQgbW9k
ZWwsIHRoZW4gcmUtcmVuZGVycyB0aGF0IGRvY3VtZW50IGJhY2sgaW50byB0
aGUgZWRpdG9yLiBUaGlzIGdpdmVzIFRyaXggY29tcGxldGUgY29udHJvbCBv
dmVyIHdoYXQgaGFwcGVucyBhZnRlciBldmVyeSBrZXlzdHJva2UsIGFuZCBh
dm9pZHMgdGhlIG5lZWQgdG8gdXNlIGBleGVjQ29tbWFuZGAgYXQgYWxsLgoK
IyMjIEJ1aWx0IGZvciB0aGUgTW9kZXJuIFdlYgoKPGRldGFpbHM+PHN1bW1h
cnk+VHJpeCBzdXBwb3J0cyBhbGwgZXZlcmdyZWVuLCBzZWxmLXVwZGF0aW5n
IGRlc2t0b3AgYW5kIG1vYmlsZSBicm93c2Vycy48L3N1bW1hcnk+PGltZyBz
cmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS90cml4LWRlcG90L3Rlc3Qt
c3RhdHVzLWltYWdlcy90cml4LnN2ZyI+PC9kZXRhaWxzPgoKVHJpeCBpcyBi
dWlsdCB3aXRoIGVtZXJnaW5nIHdlYiBzdGFuZGFyZHMsIG5vdGFibHkgW0N1
c3RvbSBFbGVtZW50c10oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcv
ZW4tVVMvZG9jcy9XZWIvV2ViX0NvbXBvbmVudHMvVXNpbmdfY3VzdG9tX2Vs
ZW1lbnRzKSwgW011dGF0aW9uIE9ic2VydmVyXShodHRwczovL2RvbS5zcGVj
LndoYXR3Zy5vcmcvI211dGF0aW9uLW9ic2VydmVycyksIGFuZCBbUHJvbWlz
ZXNdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3Mv
V2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL1Byb21p
c2UpLiBFdmVudHVhbGx5IHdlIGV4cGVjdCBhbGwgYnJvd3NlcnMgdG8gaW1w
bGVtZW50IHRoZXNlIHN0YW5kYXJkcy4gSW4gdGhlIG1lYW50aW1lLCBUcml4
IGluY2x1ZGVzIFtwb2x5ZmlsbHNdKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9y
Zy93aWtpL1BvbHlmaWxsXyhwcm9ncmFtbWluZykpIGZvciBtaXNzaW5nIGZ1
bmN0aW9uYWxpdHkuCgojIEdldHRpbmcgU3RhcnRlZAoKSW5jbHVkZSB0aGUg
YnVuZGxlZCBgdHJpeC5jc3NgIGFuZCBgdHJpeC5qc2AgZmlsZXMgaW4gdGhl
IGA8aGVhZD5gIG9mIHlvdXIgcGFnZS4KCmBgYGh0bWwKPGhlYWQ+CiAg4oCm
CiAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJl
Zj0idHJpeC5jc3MiPgogIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0
IiBzcmM9InRyaXguanMiPjwvc2NyaXB0Pgo8L2hlYWQ+CmBgYAoKYHRyaXgu
Y3NzYCBpbmNsdWRlcyBkZWZhdWx0IHN0eWxlcyBmb3IgdGhlIFRyaXggdG9v
bGJhciwgZWRpdG9yLCBhbmQgYXR0YWNobWVudHMuIFNraXAgdGhpcyBmaWxl
IGlmIHlvdSBwcmVmZXIgdG8gZGVmaW5lIHRoZXNlIHN0eWxlcyB5b3Vyc2Vs
Zi4KClRvIHVzZSB5b3VyIG93biBwb2x5ZmlsbHMsIG9yIHRvIHRhcmdldCBv
bmx5IGJyb3dzZXJzIHRoYXQgc3VwcG9ydCBhbGwgb2YgdGhlIHJlcXVpcmVk
IHN0YW5kYXJkcywgaW5jbHVkZSBgdHJpeC1jb3JlLmpzYCBpbnN0ZWFkLgoK
IyMgQ3JlYXRpbmcgYW4gRWRpdG9yCgpQbGFjZSBhbiBlbXB0eSBgPHRyaXgt
ZWRpdG9yPjwvdHJpeC1lZGl0b3I+YCB0YWcgb24gdGhlIHBhZ2UuIFRyaXgg
d2lsbCBhdXRvbWF0aWNhbGx5IGluc2VydCBhIHNlcGFyYXRlIGA8dHJpeC10
b29sYmFyPmAgYmVmb3JlIHRoZSBlZGl0b3IuCgpMaWtlIGFuIEhUTUwgYDx0
ZXh0YXJlYT5gLCBgPHRyaXgtZWRpdG9yPmAgYWNjZXB0cyBgYXV0b2ZvY3Vz
YCBhbmQgYHBsYWNlaG9sZGVyYCBhdHRyaWJ1dGVzLiBVbmxpa2UgYSBgPHRl
eHRhcmVhPmAsIGA8dHJpeC1lZGl0b3I+YCBhdXRvbWF0aWNhbGx5IGV4cGFu
ZHMgdmVydGljYWxseSB0byBmaXQgaXRzIGNvbnRlbnRzLgoKIyMgSW50ZWdy
YXRpbmcgV2l0aCBGb3JtcwoKVG8gc3VibWl0IHRoZSBjb250ZW50cyBvZiBh
IGA8dHJpeC1lZGl0b3I+YCB3aXRoIGEgZm9ybSwgZmlyc3QgZGVmaW5lIGEg
aGlkZGVuIGlucHV0IGZpZWxkIGluIHRoZSBmb3JtIGFuZCBhc3NpZ24gaXQg
YW4gYGlkYC4gVGhlbiByZWZlcmVuY2UgdGhhdCBgaWRgIGluIHRoZSBlZGl0
b3LigJlzIGBpbnB1dGAgYXR0cmlidXRlLgoKYGBgaHRtbAo8Zm9ybSDigKY+
CiAgPGlucHV0IGlkPSJ4IiB0eXBlPSJoaWRkZW4iIG5hbWU9ImNvbnRlbnQi
PgogIDx0cml4LWVkaXRvciBpbnB1dD0ieCI+PC90cml4LWVkaXRvcj4KPC9m
b3JtPgpgYGAKClRyaXggd2lsbCBhdXRvbWF0aWNhbGx5IHVwZGF0ZSB0aGUg
dmFsdWUgb2YgdGhlIGhpZGRlbiBpbnB1dCBmaWVsZCB3aXRoIGVhY2ggY2hh
bmdlIHRvIHRoZSBlZGl0b3IuCgojIyBQb3B1bGF0aW5nIFdpdGggU3RvcmVk
IENvbnRlbnQKClRvIHBvcHVsYXRlIGEgYDx0cml4LWVkaXRvcj5gIHdpdGgg
c3RvcmVkIGNvbnRlbnQsIGluY2x1ZGUgdGhhdCBjb250ZW50IGluIHRoZSBh
c3NvY2lhdGVkIGlucHV0IGVsZW1lbnTigJlzIGB2YWx1ZWAgYXR0cmlidXRl
LgoKYGBgaHRtbAo8Zm9ybSDigKY+CiAgPGlucHV0IGlkPSJ4IiB2YWx1ZT0i
RWRpdG9yIGNvbnRlbnQgZ29lcyBoZXJlIiB0eXBlPSJoaWRkZW4iIG5hbWU9
ImNvbnRlbnQiPgogIDx0cml4LWVkaXRvciBpbnB1dD0ieCI+PC90cml4LWVk
aXRvcj4KPC9mb3JtPgpgYGAKCkFsd2F5cyB1c2UgYW4gYXNzb2NpYXRlZCBp
bnB1dCBlbGVtZW50IHRvIHNhZmVseSBwb3B1bGF0ZSBhbiBlZGl0b3IuIFRy
aXggd29u4oCZdCBsb2FkIGFueSBIVE1MIGNvbnRlbnQgaW5zaWRlIGEgYDx0
cml4LWVkaXRvcj7igKY8L3RyaXgtZWRpdG9yPmAgdGFnLgoKIyMgU3R5bGlu
ZyBGb3JtYXR0ZWQgQ29udGVudAoKVG8gZW5zdXJlIHdoYXQgeW91IHNlZSB3
aGVuIHlvdSBlZGl0IGlzIHdoYXQgeW91IHNlZSB3aGVuIHlvdSBzYXZlLCB1
c2UgYSBDU1MgY2xhc3MgbmFtZSB0byBzY29wZSBzdHlsZXMgZm9yIFRyaXgg
Zm9ybWF0dGVkIGNvbnRlbnQuIEFwcGx5IHRoaXMgY2xhc3MgbmFtZSB0byB5
b3VyIGA8dHJpeC1lZGl0b3I+YCBlbGVtZW50LCBhbmQgdG8gYSBjb250YWlu
aW5nIGVsZW1lbnQgd2hlbiB5b3UgcmVuZGVyIHN0b3JlZCBUcml4IGNvbnRl
bnQgZm9yIGRpc3BsYXkgaW4geW91ciBhcHBsaWNhdGlvbi4KCmBgYGh0bWwK
PHRyaXgtZWRpdG9yIGNsYXNzPSJ0cml4LWNvbnRlbnQiPjwvdHJpeC1lZGl0
b3I+CmBgYAoKYGBgaHRtbAo8ZGl2IGNsYXNzPSJ0cml4LWNvbnRlbnQiPlN0
b3JlZCBjb250ZW50IGhlcmU8L2Rpdj4KYGBgCgpUaGUgZGVmYXVsdCBgdHJp
eC5jc3NgIGZpbGUgaW5jbHVkZXMgc3R5bGVzIGZvciBiYXNpYyBmb3JtYXR0
ZWQgY29udGVudOKAlGluY2x1ZGluZyBidWxsZXRlZCBhbmQgbnVtYmVyZWQg
bGlzdHMsIGNvZGUgYmxvY2tzLCBhbmQgYmxvY2sgcXVvdGVz4oCUdW5kZXIg
dGhlIGNsYXNzIG5hbWUgYHRyaXgtY29udGVudGAuIFdlIGVuY291cmFnZSB5
b3UgdG8gdXNlIHRoZXNlIHN0eWxlcyBhcyBhIHN0YXJ0aW5nIHBvaW50IGJ5
IGNvcHlpbmcgdGhlbSBpbnRvIHlvdXIgYXBwbGljYXRpb27igJlzIENTUyB3
aXRoIGEgZGlmZmVyZW50IGNsYXNzIG5hbWUuCgojIyBTdG9yaW5nIEF0dGFj
aGVkIEZpbGVzCgpUcml4IGF1dG9tYXRpY2FsbHkgYWNjZXB0cyBmaWxlcyBk
cmFnZ2VkIG9yIHBhc3RlZCBpbnRvIGFuIGVkaXRvciBhbmQgaW5zZXJ0cyB0
aGVtIGFzIGF0dGFjaG1lbnRzIGluIHRoZSBkb2N1bWVudC4gRWFjaCBhdHRh
Y2htZW50IGlzIGNvbnNpZGVyZWQgX3BlbmRpbmdfIHVudGlsIHlvdSBzdG9y
ZSBpdCByZW1vdGVseSBhbmQgcHJvdmlkZSBUcml4IHdpdGggYSBwZXJtYW5l
bnQgVVJMLgoKVG8gc3RvcmUgYXR0YWNobWVudHMsIGxpc3RlbiBmb3IgdGhl
IGB0cml4LWF0dGFjaG1lbnQtYWRkYCBldmVudC4gVXBsb2FkIHRoZSBhdHRh
Y2hlZCBmaWxlcyB3aXRoIFhNTEh0dHBSZXF1ZXN0IHlvdXJzZWxmIGFuZCBz
ZXQgdGhlIGF0dGFjaG1lbnTigJlzIFVSTCBhdHRyaWJ1dGUgdXBvbiBjb21w
bGV0aW9uLiBTZWUgdGhlIFthdHRhY2htZW50IGV4YW1wbGVdKGh0dHBzOi8v
dHJpeC1lZGl0b3Iub3JnL2pzL2F0dGFjaG1lbnRzLmpzKSBmb3IgZGV0YWls
ZWQgaW5mb3JtYXRpb24uCgpJZiB5b3UgZG9u4oCZdCB3YW50IHRvIGFjY2Vw
dCBkcm9wcGVkIG9yIHBhc3RlZCBmaWxlcywgY2FsbCBgcHJldmVudERlZmF1
bHQoKWAgb24gdGhlIGB0cml4LWZpbGUtYWNjZXB0YCBldmVudCwgd2hpY2gg
VHJpeCBkaXNwYXRjaGVzIGp1c3QgYmVmb3JlIHRoZSBgdHJpeC1hdHRhY2ht
ZW50LWFkZGAgZXZlbnQuCgojIEVkaXRpbmcgVGV4dCBQcm9ncmFtbWF0aWNh
bGx5CgpZb3UgY2FuIG1hbmlwdWxhdGUgYSBUcml4IGVkaXRvciBwcm9ncmFt
bWF0aWNhbGx5IHRocm91Z2ggdGhlIGBUcml4LkVkaXRvcmAgaW50ZXJmYWNl
LCBhdmFpbGFibGUgb24gZWFjaCBgPHRyaXgtZWRpdG9yPmAgZWxlbWVudCB0
aHJvdWdoIGl0cyBgZWRpdG9yYCBwcm9wZXJ0eS4KCmBgYGpzCnZhciBlbGVt
ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigidHJpeC1lZGl0b3IiKQpl
bGVtZW50LmVkaXRvciAgLy8gaXMgYSBUcml4LkVkaXRvciBpbnN0YW5jZQpg
YGAKCiMjIFVuZGVyc3RhbmRpbmcgdGhlIERvY3VtZW50IE1vZGVsCgpUaGUg
Zm9ybWF0dGVkIGNvbnRlbnQgb2YgYSBUcml4IGVkaXRvciBpcyBrbm93biBh
cyBhIF9kb2N1bWVudF8sIGFuZCBpcyByZXByZXNlbnRlZCBhcyBhbiBpbnN0
YW5jZSBvZiB0aGUgYFRyaXguRG9jdW1lbnRgIGNsYXNzLiBUbyBnZXQgdGhl
IGVkaXRvcuKAmXMgY3VycmVudCBkb2N1bWVudCwgdXNlIHRoZSBgZWRpdG9y
LmdldERvY3VtZW50YCBtZXRob2QuCgpgYGBqcwplbGVtZW50LmVkaXRvci5n
ZXREb2N1bWVudCgpICAvLyBpcyBhIFRyaXguRG9jdW1lbnQgaW5zdGFuY2UK
YGBgCgpZb3UgY2FuIGNvbnZlcnQgYSBkb2N1bWVudCB0byBhbiB1bmZvcm1h
dHRlZCBKYXZhU2NyaXB0IHN0cmluZyB3aXRoIHRoZSBgZG9jdW1lbnQudG9T
dHJpbmdgIG1ldGhvZC4KCmBgYGpzCnZhciBkb2N1bWVudCA9IGVsZW1lbnQu
ZWRpdG9yLmdldERvY3VtZW50KCkKZG9jdW1lbnQudG9TdHJpbmcoKSAgLy8g
aXMgYSBKYXZhU2NyaXB0IHN0cmluZwpgYGAKCiMjIyBJbW11dGFiaWxpdHkg
YW5kIEVxdWFsaXR5CgpEb2N1bWVudHMgYXJlIGltbXV0YWJsZSB2YWx1ZXMu
IEVhY2ggY2hhbmdlIHlvdSBtYWtlIGluIGFuIGVkaXRvciByZXBsYWNlcyB0
aGUgcHJldmlvdXMgZG9jdW1lbnQgd2l0aCBhIG5ldyBkb2N1bWVudC4gQ2Fw
dHVyaW5nIGEgc25hcHNob3Qgb2YgdGhlIGVkaXRvcuKAmXMgY29udGVudCBp
cyBhcyBzaW1wbGUgYXMga2VlcGluZyBhIHJlZmVyZW5jZSB0byBpdHMgZG9j
dW1lbnQsIHNpbmNlIHRoYXQgZG9jdW1lbnQgd2lsbCBuZXZlciBjaGFuZ2Ug
b3ZlciB0aW1lLiAoVGhpcyBpcyBob3cgVHJpeCBpbXBsZW1lbnRzIHVuZG8u
KQoKVG8gY29tcGFyZSB0d28gZG9jdW1lbnRzIGZvciBlcXVhbGl0eSwgdXNl
IHRoZSBgZG9jdW1lbnQuaXNFcXVhbFRvYCBtZXRob2QuCgpgYGBqcwp2YXIg
ZG9jdW1lbnQgPSBlbGVtZW50LmVkaXRvci5nZXREb2N1bWVudCgpCmRvY3Vt
ZW50LmlzRXF1YWxUbyhlbGVtZW50LmVkaXRvci5nZXREb2N1bWVudCgpKSAg
Ly8gdHJ1ZQpgYGAKCiMjIEdldHRpbmcgYW5kIFNldHRpbmcgdGhlIFNlbGVj
dGlvbgoKVHJpeCBkb2N1bWVudHMgYXJlIHN0cnVjdHVyZWQgYXMgc2VxdWVu
Y2VzIG9mIGluZGl2aWR1YWxseSBhZGRyZXNzYWJsZSBjaGFyYWN0ZXJzLiBU
aGUgaW5kZXggb2Ygb25lIGNoYXJhY3RlciBpbiBhIGRvY3VtZW50IGlzIGNh
bGxlZCBhIF9wb3NpdGlvbl8sIGFuZCBhIHN0YXJ0IGFuZCBlbmQgcG9zaXRp
b24gdG9nZXRoZXIgbWFrZSB1cCBhIF9yYW5nZV8uCgpUbyBnZXQgdGhlIGVk
aXRvcuKAmXMgY3VycmVudCBzZWxlY3Rpb24sIHVzZSB0aGUgYGVkaXRvci5n
ZXRTZWxlY3RlZFJhbmdlYCBtZXRob2QsIHdoaWNoIHJldHVybnMgYSB0d28t
ZWxlbWVudCBhcnJheSBjb250YWluaW5nIHRoZSBzdGFydCBhbmQgZW5kIHBv
c2l0aW9ucy4KCmBgYGpzCmVsZW1lbnQuZWRpdG9yLmdldFNlbGVjdGVkUmFu
Z2UoKSAgLy8gWzAsIDBdCmBgYAoKWW91IGNhbiBzZXQgdGhlIGVkaXRvcuKA
mXMgY3VycmVudCBzZWxlY3Rpb24gYnkgcGFzc2luZyBhIHJhbmdlIGFycmF5
IHRvIHRoZSBgZWRpdG9yLnNldFNlbGVjdGVkUmFuZ2VgIG1ldGhvZC4KCmBg
YGpzCi8vIFNlbGVjdCB0aGUgZmlyc3QgY2hhcmFjdGVyIGluIHRoZSBkb2N1
bWVudAplbGVtZW50LmVkaXRvci5zZXRTZWxlY3RlZFJhbmdlKFswLCAxXSkK
YGBgCgojIyMgQ29sbGFwc2VkIFNlbGVjdGlvbnMKCldoZW4gdGhlIHN0YXJ0
IGFuZCBlbmQgcG9zaXRpb25zIG9mIGEgcmFuZ2UgYXJlIGVxdWFsLCB0aGUg
cmFuZ2UgaXMgc2FpZCB0byBiZSBfY29sbGFwc2VkXy4gSW4gdGhlIGVkaXRv
ciwgYSBjb2xsYXBzZWQgc2VsZWN0aW9uIGFwcGVhcnMgYXMgYSBibGlua2lu
ZyBjdXJzb3IgcmF0aGVyIHRoYW4gYSBoaWdobGlnaHRlZCBzcGFuIG9mIHRl
eHQuCgpGb3IgY29udmVuaWVuY2UsIHRoZSBmb2xsb3dpbmcgY2FsbHMgdG8g
YHNldFNlbGVjdGVkUmFuZ2VgIGFyZSBlcXVpdmFsZW50IHdoZW4gd29ya2lu
ZyB3aXRoIGNvbGxhcHNlZCBzZWxlY3Rpb25zOgoKYGBganMKZWxlbWVudC5l
ZGl0b3Iuc2V0U2VsZWN0ZWRSYW5nZSgxKQplbGVtZW50LmVkaXRvci5zZXRT
ZWxlY3RlZFJhbmdlKFsxXSkKZWxlbWVudC5lZGl0b3Iuc2V0U2VsZWN0ZWRS
YW5nZShbMSwgMV0pCmBgYAoKIyMjIERpcmVjdGlvbmFsIE1vdmVtZW50CgpU
byBwcm9ncmFtbWF0aWNhbGx5IG1vdmUgdGhlIGN1cnNvciBvciBzZWxlY3Rp
b24gdGhyb3VnaCB0aGUgZG9jdW1lbnQsIGNhbGwgdGhlIGBlZGl0b3IubW92
ZUN1cnNvckluRGlyZWN0aW9uYCBvciBgZWRpdG9yLmV4cGFuZFNlbGVjdGlv
bkluRGlyZWN0aW9uYCBtZXRob2RzIHdpdGggYSBfZGlyZWN0aW9uXyBhcmd1
bWVudC4gVGhlIGRpcmVjdGlvbiBjYW4gYmUgZWl0aGVyIGAiZm9yd2FyZCJg
IG9yIGAiYmFja3dhcmQiYC4KCmBgYGpzCi8vIE1vdmUgdGhlIGN1cnNvciBi
YWNrd2FyZCBvbmUgY2hhcmFjdGVyCmVsZW1lbnQuZWRpdG9yLm1vdmVDdXJz
b3JJbkRpcmVjdGlvbigiYmFja3dhcmQiKQoKLy8gRXhwYW5kIHRoZSBlbmQg
b2YgdGhlIHNlbGVjdGlvbiBmb3J3YXJkIGJ5IG9uZSBjaGFyYWN0ZXIKZWxl
bWVudC5lZGl0b3IuZXhwYW5kU2VsZWN0aW9uSW5EaXJlY3Rpb24oImZvcndh
cmQiKQpgYGAKCiMjIyBDb252ZXJ0aW5nIFBvc2l0aW9ucyB0byBQaXhlbCBP
ZmZzZXRzCgpTb21ldGltZXMgeW91IG5lZWQgdG8ga25vdyB0aGUgX3hfIGFu
ZCBfeV8gY29vcmRpbmF0ZXMgb2YgYSBjaGFyYWN0ZXIgYXQgYSBnaXZlbiBw
b3NpdGlvbiBpbiB0aGUgZWRpdG9yLiBGb3IgZXhhbXBsZSwgeW91IG1pZ2h0
IHdhbnQgdG8gYWJzb2x1dGVseSBwb3NpdGlvbiBhIHBvcC11cCBtZW51IGVs
ZW1lbnQgYmVsb3cgdGhlIGVkaXRvcuKAmXMgY3Vyc29yLgoKQ2FsbCB0aGUg
YGVkaXRvci5nZXRDbGllbnRSZWN0QXRQb3NpdGlvbmAgbWV0aG9kIHdpdGgg
YSBwb3NpdGlvbiBhcmd1bWVudCB0byBnZXQgYSBbYERPTVJlY3RgXShodHRw
czovL2RyYWZ0cy5meHRmLm9yZy9nZW9tZXRyeS8jRE9NUmVjdCkgaW5zdGFu
Y2UgcmVwcmVzZW50aW5nIHRoZSBsZWZ0IGFuZCB0b3Agb2Zmc2V0cywgd2lk
dGgsIGFuZCBoZWlnaHQgb2YgdGhlIGNoYXJhY3RlciBhdCB0aGUgZ2l2ZW4g
cG9zaXRpb24uCgpgYGBqcwp2YXIgcmVjdCA9IGVsZW1lbnQuZWRpdG9yLmdl
dENsaWVudFJlY3RBdFBvc2l0aW9uKDApCltyZWN0LmxlZnQsIHJlY3QudG9w
XSAgLy8gWzE3LCA0OV0KYGBgCgojIyBJbnNlcnRpbmcgYW5kIERlbGV0aW5n
IFRleHQKClRoZSBlZGl0b3IgaW50ZXJmYWNlIHByb3ZpZGVzIG1ldGhvZHMg
Zm9yIGluc2VydGluZywgcmVwbGFjaW5nLCBhbmQgZGVsZXRpbmcgdGV4dCBh
dCB0aGUgY3VycmVudCBzZWxlY3Rpb24uCgpUbyBpbnNlcnQgb3IgcmVwbGFj
ZSB0ZXh0LCBiZWdpbiBieSBzZXR0aW5nIHRoZSBzZWxlY3RlZCByYW5nZSwg
dGhlbiBjYWxsIG9uZSBvZiB0aGUgaW5zZXJ0aW9uIG1ldGhvZHMgYmVsb3cu
IFRyaXggd2lsbCBmaXJzdCByZW1vdmUgYW55IHNlbGVjdGVkIHRleHQsIHRo
ZW4gaW5zZXJ0IHRoZSBuZXcgdGV4dCBhdCB0aGUgc3RhcnQgcG9zaXRpb24g
b2YgdGhlIHNlbGVjdGVkIHJhbmdlLgoKIyMjIEluc2VydGluZyBQbGFpbiBU
ZXh0CgpUbyBpbnNlcnQgdW5mb3JtYXR0ZWQgdGV4dCBpbnRvIHRoZSBkb2N1
bWVudCwgY2FsbCB0aGUgYGVkaXRvci5pbnNlcnRTdHJpbmdgIG1ldGhvZC4K
CmBgYGpzCi8vIEluc2VydCDigJxIZWxsb+KAnSBhdCB0aGUgYmVnaW5uaW5n
IG9mIHRoZSBkb2N1bWVudAplbGVtZW50LmVkaXRvci5zZXRTZWxlY3RlZFJh
bmdlKFswLCAwXSkKZWxlbWVudC5lZGl0b3IuaW5zZXJ0U3RyaW5nKCJIZWxs
byIpCmBgYAoKIyMjIEluc2VydGluZyBIVE1MCgpUbyBpbnNlcnQgSFRNTCBp
bnRvIHRoZSBkb2N1bWVudCwgY2FsbCB0aGUgYGVkaXRvci5pbnNlcnRIVE1M
YCBtZXRob2QuIFRyaXggd2lsbCBmaXJzdCBjb252ZXJ0IHRoZSBIVE1MIGlu
dG8gaXRzIGludGVybmFsIGRvY3VtZW50IG1vZGVsLiBEdXJpbmcgdGhpcyBj
b252ZXJzaW9uLCBhbnkgZm9ybWF0dGluZyB0aGF0IGNhbm5vdCBiZSByZXBy
ZXNlbnRlZCBpbiBhIFRyaXggZG9jdW1lbnQgd2lsbCBiZSBsb3N0LgoKYGBg
anMKLy8gSW5zZXJ0IGEgYm9sZCDigJxIZWxsb+KAnSBhdCB0aGUgYmVnaW5u
aW5nIG9mIHRoZSBkb2N1bWVudAplbGVtZW50LmVkaXRvci5zZXRTZWxlY3Rl
ZFJhbmdlKFswLCAwXSkKZWxlbWVudC5lZGl0b3IuaW5zZXJ0SFRNTCgiPHN0
cm9uZz5IZWxsbzwvc3Ryb25nPiIpCmBgYAoKIyMjIEluc2VydGluZyBhIEZp
bGUKClRvIGluc2VydCBhIERPTSBbYEZpbGVgXShodHRwOi8vd3d3LnczLm9y
Zy9UUi9GaWxlQVBJLyNmaWxlKSBvYmplY3QgaW50byB0aGUgZG9jdW1lbnQs
IGNhbGwgdGhlIGBlZGl0b3IuaW5zZXJ0RmlsZWAgbWV0aG9kLiBUcml4IHdp
bGwgaW5zZXJ0IGEgcGVuZGluZyBhdHRhY2htZW50IGZvciB0aGUgZmlsZSBh
cyBpZiB5b3UgaGFkIGRyYWdnZWQgYW5kIGRyb3BwZWQgaXQgb250byB0aGUg
ZWRpdG9yLgoKYGBganMKLy8gSW5zZXJ0IHRoZSBzZWxlY3RlZCBmaWxlIGZy
b20gdGhlIGZpcnN0IGZpbGUgaW5wdXQgZWxlbWVudAp2YXIgZmlsZSA9IGRv
Y3VtZW50LnF1ZXJ5U2VsZWN0b3IoImlucHV0W3R5cGU9ZmlsZV0iKS5maWxl
CmVsZW1lbnQuZWRpdG9yLmluc2VydEZpbGUoZmlsZSkKYGBgCgojIyMgSW5z
ZXJ0aW5nIGEgQ29udGVudCBBdHRhY2htZW50CgpDb250ZW50IGF0dGFjaG1l
bnRzIGFyZSBzZWxmLWNvbnRhaW5lZCB1bml0cyBvZiBIVE1MIHRoYXQgYmVo
YXZlIGxpa2UgZmlsZXMgaW4gdGhlIGVkaXRvci4gVGhleSBjYW4gYmUgbW92
ZWQgb3IgcmVtb3ZlZCwgYnV0IG5vdCBlZGl0ZWQgZGlyZWN0bHksIGFuZCBh
cmUgcmVwcmVzZW50ZWQgYnkgYSBzaW5nbGUgY2hhcmFjdGVyIHBvc2l0aW9u
IGluIHRoZSBkb2N1bWVudCBtb2RlbC4KClRvIGluc2VydCBIVE1MIGFzIGFu
IGF0dGFjaG1lbnQsIGNyZWF0ZSBhIGBUcml4LkF0dGFjaG1lbnRgIHdpdGgg
YSBgY29udGVudGAgYXR0cmlidXRlIGFuZCBjYWxsIHRoZSBgZWRpdG9yLmlu
c2VydEF0dGFjaG1lbnRgIG1ldGhvZC4gVGhlIEhUTUwgaW5zaWRlIGEgY29u
dGVudCBhdHRhY2htZW50IGlzIG5vdCBzdWJqZWN0IHRvIFRyaXjigJlzIGRv
Y3VtZW50IGNvbnZlcnNpb24gcnVsZXMgYW5kIHdpbGwgYmUgcmVuZGVyZWQg
YXMtaXMuCgpgYGBqcwp2YXIgYXR0YWNobWVudCA9IG5ldyBUcml4LkF0dGFj
aG1lbnQoeyBjb250ZW50OiAnPHNwYW4gY2xhc3M9Im1lbnRpb24iPkB0cml4
PC9zcGFuPicgfSkKZWxlbWVudC5lZGl0b3IuaW5zZXJ0QXR0YWNobWVudChh
dHRhY2htZW50KQpgYGAKCiMjIyBJbnNlcnRpbmcgYSBMaW5lIEJyZWFrCgpU
byBpbnNlcnQgYSBsaW5lIGJyZWFrLCBjYWxsIHRoZSBgZWRpdG9yLmluc2Vy
dExpbmVCcmVha2AgbWV0aG9kLCB3aGljaCBpcyBmdW5jdGlvbmFsbHkgZXF1
aXZhbGVudCB0byBwcmVzc2luZyB0aGUgcmV0dXJuIGtleS4KCmBgYGpzCi8v
IEluc2VydCDigJxIZWxsb1xu4oCdCmVsZW1lbnQuZWRpdG9yLmluc2VydFN0
cmluZygiSGVsbG8iKQplbGVtZW50LmVkaXRvci5pbnNlcnRMaW5lQnJlYWso
KQpgYGAKCiMjIyBEZWxldGluZyBUZXh0CgpJZiB0aGUgY3VycmVudCBzZWxl
Y3Rpb24gaXMgY29sbGFwc2VkLCB5b3UgY2FuIHNpbXVsYXRlIGRlbGV0aW5n
IHRleHQgYmVmb3JlIG9yIGFmdGVyIHRoZSBjdXJzb3Igd2l0aCB0aGUgYGVk
aXRvci5kZWxldGVJbkRpcmVjdGlvbmAgbWV0aG9kLgoKYGBganMKLy8g4oCc
QmFja3NwYWNl4oCdIHRoZSBmaXJzdCBjaGFyYWN0ZXIgaW4gdGhlIGRvY3Vt
ZW50CmVsZW1lbnQuZWRpdG9yLnNldFNlbGVjdGVkUmFuZ2UoWzEsIDFdKQpl
bGVtZW50LmVkaXRvci5kZWxldGVJbkRpcmVjdGlvbigiYmFja3dhcmQiKQoK
Ly8gRGVsZXRlIHRoZSBzZWNvbmQgY2hhcmFjdGVyIGluIHRoZSBkb2N1bWVu
dAplbGVtZW50LmVkaXRvci5zZXRTZWxlY3RlZFJhbmdlKFsxLCAxXSkKZWxl
bWVudC5lZGl0b3IuZGVsZXRlSW5EaXJlY3Rpb24oImZvcndhcmQiKQpgYGAK
ClRvIGRlbGV0ZSBhIHJhbmdlIG9mIHRleHQsIGZpcnN0IHNldCB0aGUgc2Vs
ZWN0ZWQgcmFuZ2UsIHRoZW4gY2FsbCBgZWRpdG9yLmRlbGV0ZUluRGlyZWN0
aW9uYCB3aXRoIGVpdGhlciBkaXJlY3Rpb24gYXMgdGhlIGFyZ3VtZW50LgoK
YGBganMKLy8gRGVsZXRlIHRoZSBmaXJzdCBmaXZlIGNoYXJhY3RlcnMKZWxl
bWVudC5lZGl0b3Iuc2V0U2VsZWN0ZWRSYW5nZShbMCwgNF0pCmVsZW1lbnQu
ZWRpdG9yLmRlbGV0ZUluRGlyZWN0aW9uKCJmb3J3YXJkIikKYGBgCgojIyBX
b3JraW5nIFdpdGggQXR0cmlidXRlcyBhbmQgTmVzdGluZwoKVHJpeCByZXBy
ZXNlbnRzIGZvcm1hdHRpbmcgYXMgc2V0cyBvZiBfYXR0cmlidXRlc18gYXBw
bGllZCBhY3Jvc3MgcmFuZ2VzIG9mIGEgZG9jdW1lbnQuCgpCeSBkZWZhdWx0
LCBUcml4IHN1cHBvcnRzIHRoZSBpbmxpbmUgYXR0cmlidXRlcyBgYm9sZGAs
IGBpdGFsaWNgLCBgaHJlZmAsIGFuZCBgc3RyaWtlYCwgYW5kIHRoZSBibG9j
ay1sZXZlbCBhdHRyaWJ1dGVzIGBoZWFkaW5nMWAsIGBxdW90ZWAsIGBjb2Rl
YCwgYGJ1bGxldGAsIGFuZCBgbnVtYmVyYC4KCiMjIyBBcHBseWluZyBGb3Jt
YXR0aW5nCgpUbyBhcHBseSBmb3JtYXR0aW5nIHRvIHRoZSBjdXJyZW50IHNl
bGVjdGlvbiwgdXNlIHRoZSBgZWRpdG9yLmFjdGl2YXRlQXR0cmlidXRlYCBt
ZXRob2QuCgpgYGBqcwplbGVtZW50LmVkaXRvci5pbnNlcnRTdHJpbmcoIkhl
bGxvIikKZWxlbWVudC5lZGl0b3Iuc2V0U2VsZWN0ZWRSYW5nZShbMCwgNV0p
CmVsZW1lbnQuZWRpdG9yLmFjdGl2YXRlQXR0cmlidXRlKCJib2xkIikKYGBg
CgpUbyBzZXQgdGhlIGBocmVmYCBhdHRyaWJ1dGUsIHBhc3MgYSBVUkwgYXMg
dGhlIHNlY29uZCBhcmd1bWVudCB0byBgZWRpdG9yLmFjdGl2YXRlQXR0cmli
dXRlYC4KCmBgYGpzCmVsZW1lbnQuZWRpdG9yLmluc2VydFN0cmluZygiVHJp
eCIpCmVsZW1lbnQuZWRpdG9yLnNldFNlbGVjdGVkUmFuZ2UoWzAsIDRdKQpl
bGVtZW50LmVkaXRvci5hY3RpdmF0ZUF0dHJpYnV0ZSgiaHJlZiIsICJodHRw
czovL3RyaXgtZWRpdG9yLm9yZy8iKQpgYGAKCiMjIyBSZW1vdmluZyBGb3Jt
YXR0aW5nCgpVc2UgdGhlIGBlZGl0b3IuZGVhY3RpdmF0ZUF0dHJpYnV0ZWAg
bWV0aG9kIHRvIHJlbW92ZSBmb3JtYXR0aW5nIGZyb20gYSBzZWxlY3Rpb24u
CgpgYGBqcwplbGVtZW50LmVkaXRvci5zZXRTZWxlY3RlZFJhbmdlKFsyLCA0
XSkKZWxlbWVudC5lZGl0b3IuZGVhY3RpdmF0ZUF0dHJpYnV0ZSgiYm9sZCIp
CmBgYAoKIyMjIEZvcm1hdHRpbmcgV2l0aCBhIENvbGxhcHNlZCBTZWxlY3Rp
b24KCklmIHlvdSBhY3RpdmF0ZSBvciBkZWFjdGl2YXRlIGF0dHJpYnV0ZXMg
d2hlbiB0aGUgc2VsZWN0aW9uIGlzIGNvbGxhcHNlZCwgeW91ciBmb3JtYXR0
aW5nIGNoYW5nZXMgd2lsbCBhcHBseSB0byB0aGUgdGV4dCBpbnNlcnRlZCBi
eSBhbnkgc3Vic2VxdWVudCBjYWxscyB0byBgZWRpdG9yLmluc2VydFN0cmlu
Z2AuCgpgYGBqcwplbGVtZW50LmVkaXRvci5hY3RpdmF0ZUF0dHJpYnV0ZSgi
aXRhbGljIikKZWxlbWVudC5lZGl0b3IuaW5zZXJ0U3RyaW5nKCJUaGlzIGlz
IGl0YWxpYyIpCmBgYAoKIyMjIEFkanVzdGluZyB0aGUgTmVzdGluZyBMZXZl
bAoKVG8gYWRqdXN0IHRoZSBuZXN0aW5nIGxldmVsIG9mIHF1b3RlcywgYnVs
bGV0ZWQgbGlzdHMsIG9yIG51bWJlcmVkIGxpc3RzLCBjYWxsIHRoZSBgZWRp
dG9yLmluY3JlYXNlTmVzdGluZ0xldmVsYCBhbmQgYGVkaXRvci5kZWNyZWFz
ZU5lc3RpbmdMZXZlbGAgbWV0aG9kcy4KCmBgYGpzCmVsZW1lbnQuZWRpdG9y
LmFjdGl2YXRlQXR0cmlidXRlKCJxdW90ZSIpCmVsZW1lbnQuZWRpdG9yLmlu
Y3JlYXNlTmVzdGluZ0xldmVsKCkKZWxlbWVudC5lZGl0b3IuZGVjcmVhc2VO
ZXN0aW5nTGV2ZWwoKQpgYGAKCiMjIFVzaW5nIFVuZG8gYW5kIFJlZG8KClRy
aXggZWRpdG9ycyBzdXBwb3J0IHVubGltaXRlZCB1bmRvIGFuZCByZWRvLiBT
dWNjZXNzaXZlIHR5cGluZyBhbmQgZm9ybWF0dGluZyBjaGFuZ2VzIGFyZSBj
b25zb2xpZGF0ZWQgdG9nZXRoZXIgYXQgZml2ZS1zZWNvbmQgaW50ZXJ2YWxz
OyBhbGwgb3RoZXIgaW5wdXQgY2hhbmdlcyBhcmUgcmVjb3JkZWQgaW5kaXZp
ZHVhbGx5IGluIHVuZG8gaGlzdG9yeS4KCkNhbGwgdGhlIGBlZGl0b3IudW5k
b2AgYW5kIGBlZGl0b3IucmVkb2AgbWV0aG9kcyB0byBwZXJmb3JtIGFuIHVu
ZG8gb3IgcmVkbyBvcGVyYXRpb24uCgpgYGBqcwplbGVtZW50LmVkaXRvci51
bmRvKCkKZWxlbWVudC5lZGl0b3IucmVkbygpCmBgYAoKQ2hhbmdlcyB5b3Ug
bWFrZSB0aHJvdWdoIHRoZSBlZGl0b3IgaW50ZXJmYWNlIHdpbGwgbm90IGF1
dG9tYXRpY2FsbHkgcmVjb3JkIHVuZG8gZW50cmllcy4gWW91IGNhbiBzYXZl
IHlvdXIgb3duIHVuZG8gZW50cmllcyBieSBjYWxsaW5nIHRoZSBgZWRpdG9y
LnJlY29yZFVuZG9FbnRyeWAgbWV0aG9kIHdpdGggYSBkZXNjcmlwdGlvbiBh
cmd1bWVudC4KCmBgYGpzCmVsZW1lbnQuZWRpdG9yLnJlY29yZFVuZG9FbnRy
eSgiSW5zZXJ0IFRleHQiKQplbGVtZW50LmVkaXRvci5pbnNlcnRTdHJpbmco
IkhlbGxvIikKYGBgCgojIyBMb2FkaW5nIGFuZCBTYXZpbmcgRWRpdG9yIFN0
YXRlCgpTZXJpYWxpemUgYW4gZWRpdG9y4oCZcyBzdGF0ZSB3aXRoIGBKU09O
LnN0cmluZ2lmeWAgYW5kIHJlc3RvcmUgc2F2ZWQgc3RhdGUgd2l0aCB0aGUg
YGVkaXRvci5sb2FkSlNPTmAgbWV0aG9kLiBUaGUgc2VyaWFsaXplZCBzdGF0
ZSBpbmNsdWRlcyB0aGUgZG9jdW1lbnQgYW5kIGN1cnJlbnQgc2VsZWN0aW9u
LCBidXQgZG9lcyBub3QgaW5jbHVkZSB1bmRvIGhpc3RvcnkuCgpgYGBqcwov
LyBTYXZlIGVkaXRvciBzdGF0ZSB0byBsb2NhbCBzdG9yYWdlCmxvY2FsU3Rv
cmFnZVsiZWRpdG9yU3RhdGUiXSA9IEpTT04uc3RyaW5naWZ5KGVsZW1lbnQu
ZWRpdG9yKQoKLy8gUmVzdG9yZSBlZGl0b3Igc3RhdGUgZnJvbSBsb2NhbCBz
dG9yYWdlCmVsZW1lbnQuZWRpdG9yLmxvYWRKU09OKEpTT04ucGFyc2UobG9j
YWxTdG9yYWdlWyJlZGl0b3JTdGF0ZSJdKSkKYGBgCgojIyBPYnNlcnZpbmcg
RWRpdG9yIENoYW5nZXMKClRoZSBgPHRyaXgtZWRpdG9yPmAgZWxlbWVudCBl
bWl0cyBzZXZlcmFsIGV2ZW50cyB3aGljaCB5b3UgY2FuIHVzZSB0byBvYnNl
cnZlIGFuZCByZXNwb25kIHRvIGNoYW5nZXMgaW4gZWRpdG9yIHN0YXRlLgoK
KiBgdHJpeC1iZWZvcmUtaW5pdGlhbGl6ZWAgZmlyZXMgd2hlbiB0aGUgYDx0
cml4LWVkaXRvcj5gIGVsZW1lbnQgaXMgYXR0YWNoZWQgdG8gdGhlIERPTSBq
dXN0IGJlZm9yZSBUcml4IGluc3RhbGxzIGl0cyBgZWRpdG9yYCBvYmplY3Qu
CgoqIGB0cml4LWluaXRpYWxpemVgIGZpcmVzIHdoZW4gdGhlIGA8dHJpeC1l
ZGl0b3I+YCBlbGVtZW50IGlzIGF0dGFjaGVkIHRvIHRoZSBET00gYW5kIGl0
cyBgZWRpdG9yYCBvYmplY3QgaXMgcmVhZHkgZm9yIHVzZS4KCiogYHRyaXgt
Y2hhbmdlYCBmaXJlcyB3aGVuZXZlciB0aGUgZWRpdG9y4oCZcyBjb250ZW50
cyBoYXZlIGNoYW5nZWQuCgoqIGB0cml4LXNlbGVjdGlvbi1jaGFuZ2VgIGZp
cmVzIGFueSB0aW1lIHRoZSBzZWxlY3RlZCByYW5nZSBjaGFuZ2VzIGluIHRo
ZSBlZGl0b3IuCgoqIGB0cml4LWZvY3VzYCBhbmQgYHRyaXgtYmx1cmAgZmly
ZSB3aGVuIHRoZSBlZGl0b3IgZ2FpbnMgb3IgbG9zZXMgZm9jdXMsIHJlc3Bl
Y3RpdmVseS4KCiogYHRyaXgtZmlsZS1hY2NlcHRgIGZpcmVzIHdoZW4gYSBm
aWxlIGlzIGRyb3BwZWQgb3IgaW5zZXJ0ZWQgaW50byB0aGUgZWRpdG9yLiBZ
b3UgY2FuIGFjY2VzcyB0aGUgRE9NIGBGaWxlYCBvYmplY3QgdGhyb3VnaCB0
aGUgYGZpbGVgIHByb3BlcnR5IG9uIHRoZSBldmVudC4gQ2FsbCBgcHJldmVu
dERlZmF1bHRgIG9uIHRoZSBldmVudCB0byBwcmV2ZW50IGF0dGFjaGluZyB0
aGUgZmlsZSB0byB0aGUgZG9jdW1lbnQuCgoqIGB0cml4LWF0dGFjaG1lbnQt
YWRkYCBmaXJlcyBhZnRlciBhbiBhdHRhY2htZW50IGlzIGFkZGVkIHRvIHRo
ZSBkb2N1bWVudC4gWW91IGNhbiBhY2Nlc3MgdGhlIFRyaXggYXR0YWNobWVu
dCBvYmplY3QgdGhyb3VnaCB0aGUgYGF0dGFjaG1lbnRgIHByb3BlcnR5IG9u
IHRoZSBldmVudC4gSWYgdGhlIGBhdHRhY2htZW50YCBvYmplY3QgaGFzIGEg
YGZpbGVgIHByb3BlcnR5LCB5b3Ugc2hvdWxkIHN0b3JlIHRoaXMgZmlsZSBy
ZW1vdGVseSBhbmQgc2V0IHRoZSBhdHRhY2htZW504oCZcyBVUkwgYXR0cmli
dXRlLiBTZWUgdGhlIFthdHRhY2htZW50IGV4YW1wbGVdKGh0dHA6Ly90cml4
LWVkaXRvci5vcmcvanMvYXR0YWNobWVudHMuanMpIGZvciBkZXRhaWxlZCBp
bmZvcm1hdGlvbi4KCiogYHRyaXgtYXR0YWNobWVudC1yZW1vdmVgIGZpcmVz
IHdoZW4gYW4gYXR0YWNobWVudCBpcyByZW1vdmVkIGZyb20gdGhlIGRvY3Vt
ZW50LiBZb3UgY2FuIGFjY2VzcyB0aGUgVHJpeCBhdHRhY2htZW50IG9iamVj
dCB0aHJvdWdoIHRoZSBgYXR0YWNobWVudGAgcHJvcGVydHkgb24gdGhlIGV2
ZW50LiBZb3UgbWF5IHdpc2ggdG8gdXNlIHRoaXMgZXZlbnQgdG8gY2xlYW4g
dXAgcmVtb3RlbHkgc3RvcmVkIGZpbGVzLgoKIyBDb250cmlidXRpbmcgdG8g
VHJpeAoKVHJpeCBpcyBvcGVuLXNvdXJjZSBzb2Z0d2FyZSwgZnJlZWx5IGRp
c3RyaWJ1dGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIGFuIFtNSVQtc3R5bGUg
bGljZW5zZV0oTElDRU5TRSkuIFRoZSBbc291cmNlIGNvZGUgaXMgaG9zdGVk
IG9uIEdpdEh1Yl0oaHR0cHM6Ly9naXRodWIuY29tL2Jhc2VjYW1wL3RyaXgp
LgoKV2Ugd2VsY29tZSBjb250cmlidXRpb25zIGluIHRoZSBmb3JtIG9mIGJ1
ZyByZXBvcnRzLCBwdWxsIHJlcXVlc3RzLCBvciB0aG91Z2h0ZnVsIGRpc2N1
c3Npb25zIGluIHRoZSBbR2l0SHViIGlzc3VlIHRyYWNrZXJdKGh0dHBzOi8v
Z2l0aHViLmNvbS9iYXNlY2FtcC90cml4L2lzc3VlcykuIFBsZWFzZSBzZWUg
dGhlIFtDb2RlIG9mIENvbmR1Y3RdKENPREVfT0ZfQ09ORFVDVC5tZCkgZm9y
IG91ciBwbGVkZ2UgdG8gY29udHJpYnV0b3JzLgoKVHJpeCB3YXMgY3JlYXRl
ZCBieSBbSmF2YW4gTWFraG1hbGldKGh0dHBzOi8vdHdpdHRlci5jb20vamF2
YW4pIGFuZCBbU2FtIFN0ZXBoZW5zb25dKGh0dHBzOi8vdHdpdHRlci5jb20v
c3N0ZXBoZW5zb24pLCB3aXRoIGRldmVsb3BtZW50IHNwb25zb3JlZCBieSBb
QmFzZWNhbXBdKGh0dHBzOi8vYmFzZWNhbXAuY29tLykuCgojIyMgQnVpbGRp
bmcgRnJvbSBTb3VyY2UKClRyaXggaXMgd3JpdHRlbiBpbiBbQ29mZmVlU2Ny
aXB0XShodHRwczovL2dpdGh1Yi5jb20vamFzaGtlbmFzL2NvZmZlZXNjcmlw
dCkgYW5kIGNvbXBpbGVkIHRvIEphdmFTY3JpcHQgd2l0aCBbQmxhZGVdKGh0
dHBzOi8vZ2l0aHViLmNvbS9qYXZhbi9ibGFkZSkuCgpGcm9tIGluc2lkZSBh
IGNoZWNrb3V0IG9mIHRoZSBUcml4IEdpdCByZXBvc2l0b3J5LCBpc3N1ZSB0
aGUgZm9sbG93aW5nIGNvbW1hbmRzIHRvIGJ1aWxkIHRoZSBkaXN0cmlidXRh
YmxlIGZpbGVzIGluIGBkaXN0L2A6CgpgYGAKJCBiaW4vc2V0dXAKJCBiaW4v
YmxhZGUgYnVpbGQKYGBgCgojIyMgRGV2ZWxvcGluZyBJbi1Ccm93c2VyCgpZ
b3UgY2FuIHNwYXduIGEgZGV2ZWxvcG1lbnQgd2ViIHNlcnZlciB0byB3b3Jr
IG9uIFRyaXggaW4gYSBtb3JlIGNvbnZlbmllbnQgZmFzaGlvbi4gSW5zdGVh
ZCBvZiBtYW51YWxseSByZWJ1aWxkaW5nIHRoZSBzb3VyY2UgZWFjaCB0aW1l
LCBqdXN0IHJlbG9hZCBhIHBhZ2UgaW4geW91ciBicm93c2VyIHRvIHNlZSB5
b3VyIGNoYW5nZXMuCgpUbyBkZXZlbG9wIGluLWJyb3dzZXIsIHJ1biBgYmlu
L3NldHVwYCBhbmQgZm9sbG93IHRoZSBkaXNwbGF5ZWQgaW5zdHJ1Y3Rpb25z
LgoKIyMjIFJ1bm5pbmcgVGVzdHMKCk1ha2Ugc3VyZSB5b3XigJlyZSBzZXQg
dXAgdG8gYnVpbGQgZnJvbSBzb3VyY2UgdXNpbmcgdGhlIGluc3RydWN0aW9u
cyBhYm92ZS4gVGhlbiBydW4gYGJpbi9ibGFkZSBydW5uZXJgIGFuZCB2aXNp
dCB0aGUgZGlzcGxheWVkIFVSTCB0byBydW4gdGhlIFRyaXggdGVzdCBzdWl0
ZS4KCiMjIyBQdWxsIFJlcXVlc3RzCgpPbmx5IGNvbW1pdCBjaGFuZ2VzIHRv
IFRyaXjigJlzIHNvdXJjZSAoZXZlcnl0aGluZyBleGNlcHQgdGhlIGNvbXBp
bGVkIGZpbGVzIGluIGAvZGlzdGApIGFuZCBsZWF2ZSB0aGUgW1ZFUlNJT05d
KHNyYy90cml4L1ZFUlNJT04pIHVuY2hhbmdlZC4gV2UgdXBkYXRlIGJvdGgg
d2hlbiBwdWJsaXNoaW5nIG5ldyBbcmVsZWFzZXNdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9iYXNlY2FtcC90cml4L3JlbGVhc2VzKS4gOmhlYXJ0OgoKLS0tCgrC
qSAyMDE5IEJhc2VjYW1wLCBMTEMuCg==
",,14276,"ZGlzdDogeGVuaWFsCnN1ZG86IGZhbHNlCmxhbmd1YWdlOiBub2RlX2pzCm5v
ZGVfanM6IDExCmNhY2hlOgogIC0gYnVuZGxlcgogIC0geWFybgppbnN0YWxs
OgogIC0gYnVuZGxlIGluc3RhbGwKICAtIGNkIHRlc3QgJiYgeWFybiBpbnN0
YWxsICYmIGNkIC0Kc2NyaXB0OgogIC0gYmluL2NpCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
