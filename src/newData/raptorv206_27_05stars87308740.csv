name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'mockery',137515,"b'Mockery is a simple yet flexible PHP mock object framework for use in unit testing with PHPUnit, PHPSpec or any other testing framework. Its core goal is to offer a test double framework with a succinct API capable of clearly defining all possible object operations and interactions using a human readable Domain Specific Language (DSL).'",b'PHP',60,8744,,87,False,b'https://api.github.com/repos/mockery/mockery/forks',"TW9ja2VyeQo9PT09PT09CgpbIVtCdWlsZCBTdGF0dXNdKGh0dHBzOi8vdHJh
dmlzLWNpLm9yZy9tb2NrZXJ5L21vY2tlcnkuc3ZnP2JyYW5jaD1tYXN0ZXIp
XShodHRwczovL3RyYXZpcy1jaS5vcmcvbW9ja2VyeS9tb2NrZXJ5KQpbIVtM
YXRlc3QgU3RhYmxlIFZlcnNpb25dKGh0dHBzOi8vcG9zZXIucHVneC5vcmcv
bW9ja2VyeS9tb2NrZXJ5L3Yvc3RhYmxlLnN2ZyldKGh0dHBzOi8vcGFja2Fn
aXN0Lm9yZy9wYWNrYWdlcy9tb2NrZXJ5L21vY2tlcnkpClshW0NvdmVyYWdl
IFN0YXR1c10oaHR0cHM6Ly9jb3ZlcmFsbHMuaW8vcmVwb3MvZ2l0aHViL21v
Y2tlcnkvbW9ja2VyeS9iYWRnZS5zdmcpXShodHRwczovL2NvdmVyYWxscy5p
by9naXRodWIvbW9ja2VyeS9tb2NrZXJ5KQpbIVtUb3RhbCBEb3dubG9hZHNd
KGh0dHBzOi8vcG9zZXIucHVneC5vcmcvbW9ja2VyeS9tb2NrZXJ5L2Rvd25s
b2Fkcy5zdmcpXShodHRwczovL3BhY2thZ2lzdC5vcmcvcGFja2FnZXMvbW9j
a2VyeS9tb2NrZXJ5KQoKTW9ja2VyeSBpcyBhIHNpbXBsZSB5ZXQgZmxleGli
bGUgUEhQIG1vY2sgb2JqZWN0IGZyYW1ld29yayBmb3IgdXNlIGluIHVuaXQg
dGVzdGluZwp3aXRoIFBIUFVuaXQsIFBIUFNwZWMgb3IgYW55IG90aGVyIHRl
c3RpbmcgZnJhbWV3b3JrLiBJdHMgY29yZSBnb2FsIGlzIHRvIG9mZmVyIGEK
dGVzdCBkb3VibGUgZnJhbWV3b3JrIHdpdGggYSBzdWNjaW5jdCBBUEkgY2Fw
YWJsZSBvZiBjbGVhcmx5IGRlZmluaW5nIGFsbCBwb3NzaWJsZQpvYmplY3Qg
b3BlcmF0aW9ucyBhbmQgaW50ZXJhY3Rpb25zIHVzaW5nIGEgaHVtYW4gcmVh
ZGFibGUgRG9tYWluIFNwZWNpZmljIExhbmd1YWdlCihEU0wpLiBEZXNpZ25l
ZCBhcyBhIGRyb3AgaW4gYWx0ZXJuYXRpdmUgdG8gUEhQVW5pdCdzIHBocHVu
aXQtbW9jay1vYmplY3RzIGxpYnJhcnksCk1vY2tlcnkgaXMgZWFzeSB0byBp
bnRlZ3JhdGUgd2l0aCBQSFBVbml0IGFuZCBjYW4gb3BlcmF0ZSBhbG9uZ3Np
ZGUKcGhwdW5pdC1tb2NrLW9iamVjdHMgd2l0aG91dCB0aGUgV29ybGQgZW5k
aW5nLgoKTW9ja2VyeSBpcyByZWxlYXNlZCB1bmRlciBhIE5ldyBCU0QgTGlj
ZW5zZS4KCiMjIEluc3RhbGxhdGlvbgoKVG8gaW5zdGFsbCBNb2NrZXJ5LCBy
dW4gdGhlIGNvbW1hbmQgYmVsb3cgYW5kIHlvdSB3aWxsIGdldCB0aGUgbGF0
ZXN0CnZlcnNpb24KCmBgYHNoCmNvbXBvc2VyIHJlcXVpcmUgLS1kZXYgbW9j
a2VyeS9tb2NrZXJ5CmBgYAoKIyMgRG9jdW1lbnRhdGlvbgoKSW4gb2xkZXIg
dmVyc2lvbnMsIHRoaXMgUkVBRE1FIGZpbGUgd2FzIHRoZSBkb2N1bWVudGF0
aW9uIGZvciBNb2NrZXJ5LiBPdmVyIHRpbWUKd2UgaGF2ZSBpbXByb3ZlZCB0
aGlzLCBhbmQgaGF2ZSBjcmVhdGVkIGFuIGV4dGVuc2l2ZSBkb2N1bWVudGF0
aW9uIGZvciB5b3UuIFBsZWFzZQp1c2UgdGhpcyBSRUFETUUgZmlsZSBhcyBh
IHN0YXJ0aW5nIHBvaW50IGZvciBNb2NrZXJ5LCBidXQgZG8gcmVhZCB0aGUg
ZG9jdW1lbnRhdGlvbgp0byBsZWFybiBob3cgdG8gdXNlIE1vY2tlcnkuCgpU
aGUgY3VycmVudCB2ZXJzaW9uIGNhbiBiZSBzZWVuIGF0IFtkb2NzLm1vY2tl
cnkuaW9dKGh0dHA6Ly9kb2NzLm1vY2tlcnkuaW8pLgoKIyMgVGVzdCBEb3Vi
bGVzCgpUZXN0IGRvdWJsZXMgKG9mdGVuIGNhbGxlZCBtb2Nrcykgc2ltdWxh
dGUgdGhlIGJlaGF2aW91ciBvZiByZWFsIG9iamVjdHMuIFRoZXkgYXJlCmNv
bW1vbmx5IHV0aWxpc2VkIHRvIG9mZmVyIHRlc3QgaXNvbGF0aW9uLCB0byBz
dGFuZCBpbiBmb3Igb2JqZWN0cyB3aGljaCBkbyBub3QKeWV0IGV4aXN0LCBv
ciB0byBhbGxvdyBmb3IgdGhlIGV4cGxvcmF0b3J5IGRlc2lnbiBvZiBjbGFz
cyBBUElzIHdpdGhvdXQKcmVxdWlyaW5nIGFjdHVhbCBpbXBsZW1lbnRhdGlv
biB1cCBmcm9udC4KClRoZSBiZW5lZml0cyBvZiBhIHRlc3QgZG91YmxlIGZy
YW1ld29yayBhcmUgdG8gYWxsb3cgZm9yIHRoZSBmbGV4aWJsZSBnZW5lcmF0
aW9uCmFuZCBjb25maWd1cmF0aW9uIG9mIHRlc3QgZG91Ymxlcy4gVGhleSBh
bGxvdyB0aGUgc2V0dGluZyBvZiBleHBlY3RlZCBtZXRob2QgY2FsbHMKYW5k
L29yIHJldHVybiB2YWx1ZXMgdXNpbmcgYSBmbGV4aWJsZSBBUEkgd2hpY2gg
aXMgY2FwYWJsZSBvZiBjYXB0dXJpbmcgZXZlcnkKcG9zc2libGUgcmVhbCBv
YmplY3QgYmVoYXZpb3VyIGluIHdheSB0aGF0IGlzIHN0YXRlZCBhcyBjbG9z
ZSBhcyBwb3NzaWJsZSB0byBhCm5hdHVyYWwgbGFuZ3VhZ2UgZGVzY3JpcHRp
b24uIFVzZSB0aGUgYE1vY2tlcnk6Om1vY2tgIG1ldGhvZCB0byBjcmVhdGUg
YSB0ZXN0CmRvdWJsZS4KCmBgYCBwaHAKJGRvdWJsZSA9IE1vY2tlcnk6Om1v
Y2soKTsKYGBgCgpJZiB5b3UgbmVlZCBNb2NrZXJ5IHRvIGNyZWF0ZSBhIHRl
c3QgZG91YmxlIHRvIHNhdGlzZnkgYSBwYXJ0aWN1bGFyIHR5cGUgaGludCwK
eW91IGNhbiBwYXNzIHRoZSB0eXBlIHRvIHRoZSBgbW9ja2AgbWV0aG9kLgoK
YGBgIHBocApjbGFzcyBCb29rIHt9CgppbnRlcmZhY2UgQm9va1JlcG9zaXRv
cnkgewogICAgZnVuY3Rpb24gZmluZCgkaWQpOiBCb29rOwogICAgZnVuY3Rp
b24gZmluZEFsbCgpOiBhcnJheTsKICAgIGZ1bmN0aW9uIGFkZChCb29rICRi
b29rKTogdm9pZDsKfQoKJGRvdWJsZSA9IE1vY2tlcnk6Om1vY2soQm9va1Jl
cG9zaXRvcnk6OmNsYXNzKTsKYGBgCgpBIGRldGFpbGVkIGV4cGxhbmF0aW9u
IG9mIGNyZWF0aW5nIGFuZCB3b3JraW5nIHdpdGggdGVzdCBkb3VibGVzIGlz
IGdpdmVuIGluIHRoZQpkb2N1bWVudGF0aW9uLCBbQ3JlYXRpbmcgdGVzdCBk
b3VibGVzXShodHRwOi8vZG9jcy5tb2NrZXJ5LmlvL2VuL2xhdGVzdC9yZWZl
cmVuY2UvY3JlYXRpbmdfdGVzdF9kb3VibGVzLmh0bWwpCnNlY3Rpb24uCgoj
IyBNZXRob2QgU3R1YnMg8J+OqwoKQSBtZXRob2Qgc3R1YiBpcyBhIG1lY2hh
bmlzbSBmb3IgaGF2aW5nIHlvdXIgdGVzdCBkb3VibGUgcmV0dXJuIGNhbm5l
ZCByZXNwb25zZXMKdG8gY2VydGFpbiBtZXRob2QgY2FsbHMuIFdpdGggc3R1
YnMsIHlvdSBkb24ndCBjYXJlIGhvdyBtYW55IHRpbWVzLCBpZiBhdCBhbGws
CnRoZSBtZXRob2QgaXMgY2FsbGVkLiBTdHVicyBhcmUgdXNlZCB0byBwcm92
aWRlIGluZGlyZWN0IGlucHV0IHRvIHRoZSBzeXN0ZW0KdW5kZXIgdGVzdC4K
CmBgYCBwaHAKJGRvdWJsZS0+YWxsb3dzKCktPmZpbmQoMTIzKS0+YW5kUmV0
dXJucyhuZXcgQm9vaygpKTsKCiRib29rID0gJGRvdWJsZS0+ZmluZCgxMjMp
OwpgYGAKCklmIHlvdSBoYXZlIHVzZWQgTW9ja2VyeSBiZWZvcmUsIHlvdSBt
aWdodCBzZWUgc29tZXRoaW5nIG5ldyBpbiB0aGUgZXhhbXBsZQphYm92ZSAm
bWRhc2g7IHdlIGNyZWF0ZWQgYSBtZXRob2Qgc3R1YiB1c2luZyBgYWxsb3dz
YCwgaW5zdGVhZCBvZiB0aGUgIm9sZCIKYHNob3VsZFJlY2VpdmVgIHN5bnRh
eC4gVGhpcyBpcyBhIG5ldyBmZWF0dXJlIG9mIE1vY2tlcnkgdjEsIGJ1dCBm
ZWFyIG5vdCwKdGhlIHRydXN0eSBvbCcgYHNob3VsZFJlY2VpdmVgIGlzIHN0
aWxsIGhlcmUuCgpGb3IgbmV3IHVzZXJzIG9mIE1vY2tlcnksIHRoZSBhYm92
ZSBleGFtcGxlIGNhbiBhbHNvIGJlIHdyaXR0ZW4gYXM6CgpgYGAgcGhwCiRk
b3VibGUtPnNob3VsZFJlY2VpdmUoJ2ZpbmQnKS0+d2l0aCgxMjMpLT5hbmRS
ZXR1cm4obmV3IEJvb2soKSk7CiRib29rID0gJGRvdWJsZS0+ZmluZCgxMjMp
OwpgYGAKCklmIHlvdXIgc3R1YiBkb2Vzbid0IHJlcXVpcmUgc3BlY2lmaWMg
YXJndW1lbnRzLCB5b3UgY2FuIGFsc28gdXNlIHRoaXMgc2hvcnRjdXQKZm9y
IHNldHRpbmcgdXAgbXVsdGlwbGUgY2FsbHMgYXQgb25jZToKCmBgYCBwaHAK
JGRvdWJsZS0+YWxsb3dzKFsKICAgICJmaW5kQWxsIiA9PiBbbmV3IEJvb2so
KSwgbmV3IEJvb2soKV0sCl0pOwpgYGAKCm9yCgpgYGAgcGhwCiRkb3VibGUt
PnNob3VsZFJlY2VpdmUoJ2ZpbmRBbGwnKQogICAgLT5hbmRSZXR1cm4oW25l
dyBCb29rKCksIG5ldyBCb29rKCldKTsKYGBgCgpZb3UgY2FuIGFsc28gdXNl
IHRoaXMgc2hvcnRjdXQsIHdoaWNoIGNyZWF0ZXMgYSBkb3VibGUgYW5kIHNl
dHMgdXAgc29tZSBzdHVicyBpbgpvbmUgY2FsbDoKCmBgYCBwaHAKJGRvdWJs
ZSA9IE1vY2tlcnk6Om1vY2soQm9va1JlcG9zaXRvcnk6OmNsYXNzLCBbCiAg
ICAiZmluZEFsbCIgPT4gW25ldyBCb29rKCksIG5ldyBCb29rKCldLApdKTsK
YGBgCgojIyBNZXRob2QgQ2FsbCBFeHBlY3RhdGlvbnMg8J+TsgoKQSBNZXRo
b2QgY2FsbCBleHBlY3RhdGlvbiBpcyBhIG1lY2hhbmlzbSB0byBhbGxvdyB5
b3UgdG8gdmVyaWZ5IHRoYXQgYQpwYXJ0aWN1bGFyIG1ldGhvZCBoYXMgYmVl
biBjYWxsZWQuIFlvdSBjYW4gc3BlY2lmeSB0aGUgcGFyYW1ldGVycyBhbmQg
eW91IGNhbgphbHNvIHNwZWNpZnkgaG93IG1hbnkgdGltZXMgeW91IGV4cGVj
dCBpdCB0byBiZSBjYWxsZWQuIE1ldGhvZCBjYWxsIGV4cGVjdGF0aW9ucwph
cmUgdXNlZCB0byB2ZXJpZnkgaW5kaXJlY3Qgb3V0cHV0IG9mIHRoZSBzeXN0
ZW0gdW5kZXIgdGVzdC4KCmBgYCBwaHAKJGJvb2sgPSBuZXcgQm9vaygpOwoK
JGRvdWJsZSA9IE1vY2tlcnk6Om1vY2soQm9va1JlcG9zaXRvcnk6OmNsYXNz
KTsKJGRvdWJsZS0+ZXhwZWN0cygpLT5hZGQoJGJvb2spOwpgYGAKCkR1cmlu
ZyB0aGUgdGVzdCwgTW9ja2VyeSBhY2NlcHQgY2FsbHMgdG8gdGhlIGBhZGRg
IG1ldGhvZCBhcyBwcmVzY3JpYmVkLgpBZnRlciB5b3UgaGF2ZSBmaW5pc2hl
ZCBleGVyY2lzaW5nIHRoZSBzeXN0ZW0gdW5kZXIgdGVzdCwgeW91IG5lZWQg
dG8KdGVsbCBNb2NrZXJ5IHRvIGNoZWNrIHRoYXQgdGhlIG1ldGhvZCB3YXMg
Y2FsbGVkIGFzIGV4cGVjdGVkLCB1c2luZyB0aGUKYE1vY2tlcnk6OmNsb3Nl
YCBtZXRob2QuIE9uZSB3YXkgdG8gZG8gdGhhdCBpcyB0byBhZGQgaXQgdG8g
eW91ciBgdGVhckRvd25gCm1ldGhvZCBpbiBQSFBVbml0LgoKYGBgIHBocAoK
cHVibGljIGZ1bmN0aW9uIHRlYXJEb3duKCkKewogICAgTW9ja2VyeTo6Y2xv
c2UoKTsKfQpgYGAKClRoZSBgZXhwZWN0cygpYCBtZXRob2QgYXV0b21hdGlj
YWxseSBzZXRzIHVwIGFuIGV4cGVjdGF0aW9uIHRoYXQgdGhlIG1ldGhvZCBj
YWxsCihhbmQgbWF0Y2hpbmcgcGFyYW1ldGVycykgaXMgY2FsbGVkICoqb25j
ZSBhbmQgb25jZSBvbmx5KiouIFlvdSBjYW4gY2hvb3NlIHRvIGNoYW5nZQp0
aGlzIGlmIHlvdSBhcmUgZXhwZWN0aW5nIG1vcmUgY2FsbHMuCgpgYGAgcGhw
CiRkb3VibGUtPmV4cGVjdHMoKS0+YWRkKCRib29rKS0+dHdpY2UoKTsKYGBg
CgpJZiB5b3UgaGF2ZSB1c2VkIE1vY2tlcnkgYmVmb3JlLCB5b3UgbWlnaHQg
c2VlIHNvbWV0aGluZyBuZXcgaW4gdGhlIGV4YW1wbGUKYWJvdmUgJm1kYXNo
OyB3ZSBjcmVhdGVkIGEgbWV0aG9kIGV4cGVjdGF0aW9uIHVzaW5nIGBleHBl
Y3RzYCwgaW5zdGVhZCBvZiB0aGUgIm9sZCIKYHNob3VsZFJlY2VpdmVgIHN5
bnRheC4gVGhpcyBpcyBhIG5ldyBmZWF0dXJlIG9mIE1vY2tlcnkgdjEsIGJ1
dCBzYW1lIGFzIHdpdGgKYGFjY2VwdHNgIGluIHRoZSBwcmV2aW91cyBzZWN0
aW9uLCBpdCBjYW4gYmUgd3JpdHRlbiBpbiB0aGUgIm9sZCIgc3R5bGUuCgpG
b3IgbmV3IHVzZXJzIG9mIE1vY2tlcnksIHRoZSBhYm92ZSBleGFtcGxlIGNh
biBhbHNvIGJlIHdyaXR0ZW4gYXM6CgpgYGAgcGhwCiRkb3VibGUtPnNob3Vs
ZFJlY2VpdmUoJ2ZpbmQnKQogICAgLT53aXRoKDEyMykKICAgIC0+b25jZSgp
CiAgICAtPmFuZFJldHVybihuZXcgQm9vaygpKTsKJGJvb2sgPSAkZG91Ymxl
LT5maW5kKDEyMyk7CmBgYAoKQSBkZXRhaWxlZCBleHBsYW5hdGlvbiBvZiBk
ZWNsYXJpbmcgZXhwZWN0YXRpb25zIG9uIG1ldGhvZCBjYWxscywgcGxlYXNl
CnJlYWQgdGhlIGRvY3VtZW50YXRpb24sIHRoZSBbRXhwZWN0YXRpb24gZGVj
bGFyYXRpb25zXShodHRwOi8vZG9jcy5tb2NrZXJ5LmlvL2VuL2xhdGVzdC9y
ZWZlcmVuY2UvZXhwZWN0YXRpb25zLmh0bWwpCnNlY3Rpb24uIEFmdGVyIHRo
YXQsIHlvdSBjYW4gYWxzbyBsZWFybiBhYm91dCB0aGUgbmV3IGBhbGxvd3Ng
IGFuZCBgZXhwZWN0c2AgbWV0aG9kcwppbiB0aGUgW0FsdGVybmF0aXZlIHNo
b3VsZFJlY2VpdmUgc3ludGF4XShodHRwOi8vZG9jcy5tb2NrZXJ5LmlvL2Vu
L2xhdGVzdC9yZWZlcmVuY2UvYWx0ZXJuYXRpdmVfc2hvdWxkX3JlY2VpdmVf
c3ludGF4Lmh0bWwpCnNlY3Rpb24uCgpJdCBpcyB3b3J0aCBtZW50aW9uaW5n
IHRoYXQgb25lIHdheSBvZiBzZXR0aW5nIHVwIGV4cGVjdGF0aW9ucyBpcyBu
byBiZXR0ZXIgb3Igd29yc2UKdGhhbiB0aGUgb3RoZXIuIFVuZGVyIHRoZSBo
b29kLCBgYWxsb3dzYCBhbmQgYGV4cGVjdHNgIGFyZSBkb2luZyB0aGUgc2Ft
ZSB0aGluZyBhcwpgc2hvdWxkUmVjZWl2ZWAsIGF0IHRpbWVzIGluICJsZXNz
IHdvcmRzIiwgYW5kIGFzIHN1Y2ggaXQgY29tZXMgdG8gYSBwZXJzb25hbCBw
cmVmZXJlbmNlCm9mIHRoZSBwcm9ncmFtbWVyIHdoaWNoIHdheSB0byB1c2Uu
CgojIyBUZXN0IFNwaWVzIPCflbXvuI8KCkJ5IGRlZmF1bHQsIGFsbCB0ZXN0
IGRvdWJsZXMgY3JlYXRlZCB3aXRoIHRoZSBgTW9ja2VyeTo6bW9ja2AgbWV0
aG9kIHdpbGwgb25seQphY2NlcHQgY2FsbHMgdGhhdCB0aGV5IGhhdmUgYmVl
biBjb25maWd1cmVkIHRvIGBhbGxvd2Agb3IgYGV4cGVjdGAgKG9yIGluIG90
aGVyIHdvcmRzLApjYWxscyB0aGF0IHRoZXkgYHNob3VsZFJlY2VpdmVgKS4g
U29tZXRpbWVzIHdlIGRvbid0IG5lY2Vzc2FyaWx5IGNhcmUgYWJvdXQgYWxs
IG9mIHRoZQpjYWxscyB0aGF0IGFyZSBnb2luZyB0byBiZSBtYWRlIHRvIGFu
IG9iamVjdC4gVG8gZmFjaWxpdGF0ZSB0aGlzLCB3ZSBjYW4gdGVsbCBNb2Nr
ZXJ5CnRvIGlnbm9yZSBhbnkgY2FsbHMgaXQgaGFzIG5vdCBiZWVuIHRvbGQg
dG8gZXhwZWN0IG9yIGFsbG93LiBUbyBkbyBzbywgd2UgY2FuIHRlbGwgYQp0
ZXN0IGRvdWJsZSBgc2hvdWxkSWdub3JlTWlzc2luZ2AsIG9yIHdlIGNhbiBj
cmVhdGUgdGhlIGRvdWJsZSB1c2luZyB0aGUgYE1vY2tlcjo6c3B5YApzaG9y
dGN1dC4KCmBgYCBwaHAKLy8gJGRvdWJsZSA9IE1vY2tlcnk6Om1vY2soKS0+
c2hvdWxkSWdub3JlTWlzc2luZygpOwokZG91YmxlID0gTW9ja2VyeTo6c3B5
KCk7CgokZG91YmxlLT5mb28oKTsgLy8gbnVsbAokZG91YmxlLT5iYXIoKTsg
Ly8gbnVsbApgYGAKCkZ1cnRoZXIgdG8gdGhpcywgc29tZXRpbWVzIHdlIHdh
bnQgdG8gaGF2ZSB0aGUgb2JqZWN0IGFjY2VwdCBhbnkgY2FsbCBkdXJpbmcg
dGhlIHRlc3QgZXhlY3V0aW9uCmFuZCB0aGVuIHZlcmlmeSB0aGUgY2FsbHMg
YWZ0ZXJ3YXJkcy4gRm9yIHRoZXNlIHB1cnBvc2VzLCB3ZSBuZWVkIG91ciB0
ZXN0CmRvdWJsZSB0byBhY3QgYXMgYSBTcHkuIEFsbCBtb2NrZXJ5IHRlc3Qg
ZG91YmxlcyByZWNvcmQgdGhlIGNhbGxzIHRoYXQgYXJlIG1hZGUKdG8gdGhl
bSBmb3IgdmVyaWZpY2F0aW9uIGFmdGVyd2FyZHMgYnkgZGVmYXVsdDoKCmBg
YCBwaHAKJGRvdWJsZS0+YmF6KDEyMyk7CgokZG91YmxlLT5zaG91bGRIYXZl
UmVjZWl2ZWQoKS0+YmF6KDEyMyk7IC8vIG51bGwKJGRvdWJsZS0+c2hvdWxk
SGF2ZVJlY2VpdmVkKCktPmJheigxMjM0NSk7IC8vIFVuY2F1Z2h0IEV4Y2Vw
dGlvbiBNb2NrZXJ5XEV4Y2VwdGlvblxJbnZhbGlkQ291bnRFeGNlcHRpb24u
Li4KYGBgCgpQbGVhc2UgcmVmZXIgdG8gdGhlIFtTcGllc10oaHR0cDovL2Rv
Y3MubW9ja2VyeS5pby9lbi9sYXRlc3QvcmVmZXJlbmNlL3NwaWVzLmh0bWwp
IHNlY3Rpb24Kb2YgdGhlIGRvY3VtZW50YXRpb24gdG8gbGVhcm4gbW9yZSBh
Ym91dCB0aGUgc3BpZXMuCgojIyBVdGlsaXRpZXMg8J+UjAoKIyMjIEdsb2Jh
bCBIZWxwZXJzCgpNb2NrZXJ5IHNoaXBzIHdpdGggYSBoYW5kZnVsIG9mIGds
b2JhbCBoZWxwZXIgbWV0aG9kcywgeW91IGp1c3QgbmVlZCB0byBhc2sKTW9j
a2VyeSB0byBkZWNsYXJlIHRoZW0uCgpgYGAgcGhwCk1vY2tlcnk6Omdsb2Jh
bEhlbHBlcnMoKTsKCiRtb2NrID0gbW9jayhTb21lOjpjbGFzcyk7CiRzcHkg
PSBzcHkoU29tZTo6Y2xhc3MpOwoKJHNweS0+c2hvdWxkSGF2ZVJlY2VpdmVk
KCkKICAgIC0+Zm9vKGFueUFyZ3MoKSk7CmBgYAoKQWxsIG9mIHRoZSBnbG9i
YWwgaGVscGVycyBhcmUgd3JhcHBlZCBpbiBhIGAhZnVuY3Rpb25fZXhpc3Rz
YCBjYWxsIHRvIGF2b2lkCmNvbmZsaWN0cy4gU28gaWYgeW91IGFscmVhZHkg
aGF2ZSBhIGdsb2JhbCBmdW5jdGlvbiBjYWxsZWQgYHNweWAsIE1vY2tlcnkg
d2lsbApzaWxlbnRseSBza2lwIHRoZSBkZWNsYXJpbmcgaXRzIG93biBgc3B5
YCBmdW5jdGlvbi4KCiMjIyBUZXN0aW5nIFRyYWl0cwoKQXMgTW9ja2VyeSBz
aGlwcyB3aXRoIGNvZGUgZ2VuZXJhdGlvbiBjYXBhYmlsaXRpZXMsIGl0IHdh
cyB0cml2aWFsIHRvIGFkZApmdW5jdGlvbmFsaXR5IGFsbG93aW5nIHVzZXJz
IHRvIGNyZWF0ZSBvYmplY3RzIG9uIHRoZSBmbHkgdGhhdCB1c2UgcGFydGlj
dWxhcgp0cmFpdHMuIEFueSBhYnN0cmFjdCBtZXRob2RzIGRlZmluZWQgYnkg
dGhlIHRyYWl0IHdpbGwgYmUgY3JlYXRlZCBhbmQgY2FuIGhhdmUKZXhwZWN0
YXRpb25zIG9yIHN0dWJzIGNvbmZpZ3VyZWQgbGlrZSBub3JtYWwgVGVzdCBE
b3VibGVzLgoKYGBgIHBocAp0cmFpdCBGb28gewogICAgZnVuY3Rpb24gZm9v
KCkgewogICAgICAgIHJldHVybiAkdGhpcy0+ZG9Gb28oKTsKICAgIH0KCiAg
ICBhYnN0cmFjdCBmdW5jdGlvbiBkb0ZvbygpOwp9CgokZG91YmxlID0gTW9j
a2VyeTo6bW9jayhGb286OmNsYXNzKTsKJGRvdWJsZS0+YWxsb3dzKCktPmRv
Rm9vKCktPmFuZFJldHVybnMoMTIzKTsKJGRvdWJsZS0+Zm9vKCk7IC8vIGlu
dCgxMjMpCmBgYAoKIyMgVmVyc2lvbmluZwoKVGhlIE1vY2tlcnkgdGVhbSBh
dHRlbXB0cyB0byBhZGhlcmUgdG8gW1NlbWFudGljIFZlcnNpb25pbmddKGh0
dHA6Ly9zZW12ZXIub3JnKSwKaG93ZXZlciwgc29tZSBvZiBNb2NrZXJ5J3Mg
aW50ZXJuYWxzIGFyZSBjb25zaWRlcmVkIHByaXZhdGUgYW5kIHdpbGwgYmUg
b3BlbiB0bwpjaGFuZ2UgYXQgYW55IHRpbWUuIEp1c3QgYmVjYXVzZSBhIGNs
YXNzIGlzbid0IGZpbmFsLCBvciBhIG1ldGhvZCBpc24ndCBtYXJrZWQKcHJp
dmF0ZSwgZG9lcyBub3QgbWVhbiBpdCBjb25zdGl0dXRlcyBwYXJ0IG9mIHRo
ZSBBUEkgd2UgZ3VhcmFudGVlIHVuZGVyIHRoZQp2ZXJzaW9uaW5nIHNjaGVt
ZS4KCiMjIyBBbHRlcm5hdGl2ZSBSdW50aW1lcwoKTW9ja2VyeSB3aWxsIGF0
dGVtcHQgdG8gY29udGludWUgc3VwcG9ydCBISFZNLCBidXQgd2lsbCBub3Qg
bWFrZSBhbnkgZ3VhcmFudGVlcy4KCiMjIEEgbmV3IGhvbWUgZm9yIE1vY2tl
cnkKCuKaoO+4j++4jyBVcGRhdGUgeW91ciByZW1vdGVzISBNb2NrZXJ5IGhh
cyB0cmFuc2ZlcnJlZCB0byBhIG5ldyBsb2NhdGlvbi4gV2hpbGUgaXQgd2Fz
IG9uY2UKYXQgYHBhZHJhaWMvbW9ja2VyeWAsIGl0IGlzIG5vdyBhdCBgbW9j
a2VyeS9tb2NrZXJ5YC4gV2hpbGUgeW91cgpleGlzdGluZyByZXBvc2l0b3Jp
ZXMgd2lsbCByZWRpcmVjdCB0cmFuc3BhcmVudGx5IGZvciBhbnkgb3BlcmF0
aW9ucywgdGFrZSBzb21lCnRpbWUgdG8gdHJhbnNpdGlvbiB0byB0aGUgbmV3
IFVSTC4KYGBgc2gKJCBnaXQgcmVtb3RlIHNldC11cmwgdXBzdHJlYW0gaHR0
cHM6Ly9naXRodWIuY29tL21vY2tlcnkvbW9ja2VyeS5naXQKYGBgClJlcGxh
Y2UgYHVwc3RyZWFtYCB3aXRoIHRoZSBuYW1lIG9mIHRoZSByZW1vdGUgeW91
IHVzZSBsb2NhbGx5OyBgdXBzdHJlYW1gIGlzIGNvbW1vbmx5CnVzZWQgYnV0
IHlvdSBtYXkgYmUgdXNpbmcgc29tZXRoaW5nIGVsc2UuIFJ1biBgZ2l0IHJl
bW90ZSAtdmAgdG8gc2VlIHdoYXQgeW91J3JlIGFjdHVhbGx5CnVzaW5nLgo=
",,8744,"c3VkbzogZmFsc2UKCmxhbmd1YWdlOiBwaHAKCm1hdHJpeDoKICBhbGxvd19m
YWlsdXJlczoKICAgIC0gcGhwOiBoaHZtCiAgICAtIHBocDogNy40c25hcHNo
b3QKICAgIC0gcGhwOiBuaWdodGx5CiAgZmFzdF9maW5pc2g6IHRydWUKICBp
bmNsdWRlOgogICAgLSBwaHA6IDUuNgogICAgICBlbnY6CiAgICAgICAgLSBE
RVBTPWxvd2VzdAogICAgLSBwaHA6IDUuNgogICAgICBlbnY6CiAgICAgICAg
LSBERVBTPWxhdGVzdAogICAgLSBwaHA6IDUuNgogICAgICBlbnY6CiAgICAg
ICAgLSBQSFBVTklUPW1pbmltdW0KICAgICAgICAtIERFUFM9bGF0ZXN0CiAg
ICAtIHBocDogNy4wCiAgICAgIGVudjoKICAgICAgICAtIERFUFM9bG93ZXN0
CiAgICAtIHBocDogNy4wCiAgICAgIGVudjoKICAgICAgICAtIERFUFM9bGF0
ZXN0CiAgICAtIHBocDogNy4xCiAgICAgIGVudjoKICAgICAgICAtIERFUFM9
bG93ZXN0CiAgICAtIHBocDogNy4xCiAgICAgIGVudjoKICAgICAgICAtIERF
UFM9bGF0ZXN0CiAgICAtIHBocDogNy4yCiAgICAgIGVudjoKICAgICAgICAt
IERFUFM9bG93ZXN0CiAgICAtIHBocDogNy4yCiAgICAgIGVudjoKICAgICAg
ICAtIERFUFM9bGF0ZXN0CiAgICAtIHBocDogNy4zCiAgICAgIGVudjoKICAg
ICAgICAtIERFUFM9bG93ZXN0CiAgICAtIHBocDogNy4zCiAgICAgIGVudjoK
ICAgICAgICAtIERFUFM9bGF0ZXN0CiAgICAtIHBocDogNy40c25hcHNob3QK
ICAgICAgZW52OgogICAgICAgIC0gREVQUz1sb3dlc3QKICAgIC0gcGhwOiA3
LjRzbmFwc2hvdAogICAgICBlbnY6CiAgICAgICAgLSBERVBTPWxhdGVzdAog
ICAgLSBwaHA6IG5pZ2h0bHkKICAgICAgZW52OgogICAgICAgIC0gREVQUz1s
b3dlc3QKICAgIC0gcGhwOiBuaWdodGx5CiAgICAgIGVudjoKICAgICAgICAt
IERFUFM9bGF0ZXN0CiAgICAtIHBocDogaGh2bQogICAgICBlbnY6CiAgICAg
ICAgLSBERVBTPWxvd2VzdAogICAgLSBwaHA6IGhodm0KICAgICAgZW52Ogog
ICAgICAgIC0gREVQUz1sYXRlc3QKCmNhY2hlOgogIGRpcmVjdG9yaWVzOgog
ICAgLSAuY29tcG9zZXIvY2FjaGUKCmJlZm9yZV9pbnN0YWxsOgogIC0gYWxp
YXMgY29tcG9zZXI9Y29tcG9zZXJcIC1uICYmIGNvbXBvc2VyIHNlbGYtdXBk
YXRlCgppbnN0YWxsOgogIC0gaWYgW1sgJFBIUFVOSVQgPT0gJ21pbmltdW0n
IF1dOyB0aGVuIHNlZCAtaSAncy9+NS43fC81LjQuKnwvZycgLi9jb21wb3Nl
ci5qc29uIDsgZmkKICAtIGlmIFtbICRERVBTID09ICdsYXRlc3QnIF1dOyB0
aGVuIHRyYXZpc19yZXRyeSBjb21wb3NlciB1cGRhdGUgLS1uby1pbnRlcmFj
dGlvbiA7IGZpCiAgLSBpZiBbWyAkREVQUyA9PSAnbG93ZXN0JyBdXTsgdGhl
biB0cmF2aXNfcmV0cnkgY29tcG9zZXIgdXBkYXRlIC0tcHJlZmVyLWxvd2Vz
dCAtLXByZWZlci1zdGFibGUgLS1uby1pbnRlcmFjdGlvbiA7IGZpCgpiZWZv
cmVfc2NyaXB0OgogICMgSW5zdGFsbCBleHRlbnNpb25zIGZvciBQSFAgNS54
IHNlcmllcy4gNy54IGluY2x1ZGVzIHRoZW0gYnkgZGVmYXVsdC4KICAtIHwK
ICAgIGlmIFtbICRUUkFWSVNfUEhQX1ZFUlNJT04gPSA1LiogXV07IHRoZW4K
ICAgICAgY2F0IDw8PCAnCiAgICAgICAgZXh0ZW5zaW9uPW1vbmdvLnNvCiAg
ICAgICAgZXh0ZW5zaW9uPXJlZGlzLnNvCiAgICAgICcgPj4gfi8ucGhwZW52
L3ZlcnNpb25zLyIkKHBocGVudiB2ZXJzaW9uLW5hbWUpIi9ldGMvY29uZi5k
L3RyYXZpcy5pbmkKICAgIGZpCgpzY3JpcHQ6Ci0gfAogICAgaWYgW1sgJFRS
QVZJU19QSFBfVkVSU0lPTiA9IDUuKiBdXTsgdGhlbgogICAgICAuL3ZlbmRv
ci9iaW4vcGhwdW5pdCAtLWNvdmVyYWdlLXRleHQgLS1jb3ZlcmFnZS1jbG92
ZXI9ImJ1aWxkL2xvZ3MvY2xvdmVyLnhtbCIgLS10ZXN0c3VpdGU9Ik1vY2tl
cnkgVGVzdCBTdWl0ZSBQSFA1NiI7CiAgICBlbHNlCiAgICAgIC4vdmVuZG9y
L2Jpbi9waHB1bml0IC0tY292ZXJhZ2UtdGV4dCAtLWNvdmVyYWdlLWNsb3Zl
cj0iYnVpbGQvbG9ncy9jbG92ZXIueG1sIiAtLXRlc3RzdWl0ZT0iTW9ja2Vy
eSBUZXN0IFN1aXRlIjsKICAgIGZpCgphZnRlcl9zdWNjZXNzOgogIC0gY29t
cG9zZXIgcmVxdWlyZSBzYXRvb3NoaS9waHAtY292ZXJhbGxzCiAgLSB2ZW5k
b3IvYmluL2NvdmVyYWxscyAtdgogIC0gd2dldCBodHRwczovL3NjcnV0aW5p
emVyLWNpLmNvbS9vY3VsYXIucGhhcgogIC0gcGhwIG9jdWxhci5waGFyIGNv
ZGUtY292ZXJhZ2U6dXBsb2FkIC0tZm9ybWF0PXBocC1jbG92ZXIgImJ1aWxk
L2xvZ3MvY2xvdmVyLnhtbCIKICAtIG1ha2UgYXBpZG9jcwoKbm90aWZpY2F0
aW9uczoKICBlbWFpbDoKICAgIC0gcGFkcmFpYy5icmFkeUBnbWFpbC5jb20K
ICAgIC0gZGF2ZUBhdHN0c29sdXRpb25zLmNvLnVrCgogIGlyYzogaXJjLmZy
ZWVub2RlLm9yZyNtb2NrZXJ5CmRlcGxveToKICBvdmVyd3JpdGU6IHRydWUK
ICBwcm92aWRlcjogcGFnZXMKICBmaWxlX2dsb2I6IHRydWUKICBmaWxlOiBk
b2NzL2FwaS8qCiAgbG9jYWxfZGlyOiBkb2NzL2FwaQogIHNraXBfY2xlYW51
cDogdHJ1ZQogIGdpdGh1Yl90b2tlbjogJEdJVEhVQl9UT0tFTgogIG9uOgog
ICAgYnJhbmNoOiBtYXN0ZXIKICAgIHBocDogJzcuMScKICAgIGNvbmRpdGlv
bjogJERFUFMgPSBsYXRlc3QK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'css',32551735,b'The CSS design system that powers GitHub',b'CSS',117,8740,,192,False,b'https://api.github.com/repos/primer/css/forks',"PHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyB3aWR0aD0iMzAwcHgiIHNyYz0i
Li9zdGF0aWMvcmVhZG1lLnBuZyI+CjwvcD4KCjxoMSBhbGlnbj0iY2VudGVy
Ij5QcmltZXIgQ1NTPC9oMT4KCjxwIGFsaWduPSJjZW50ZXIiPlRoZSBDU1Mg
aW1wbGVtZW50YXRpb24gb2YgR2l0SHViJ3MgUHJpbWVyIERlc2lnbiBTeXN0
ZW08L3A+Cgo8cCBhbGlnbj0iY2VudGVyIj4KICA8YSBhcmlhLWxhYmVsPSJu
cG0gcGFja2FnZSIgaHJlZj0iaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2th
Z2UvQHByaW1lci9jc3MiPgogICAgPGltZyBhbHQ9IiIgc3JjPSJodHRwczov
L2ltZy5zaGllbGRzLmlvL25wbS92L0BwcmltZXIvY3NzLnN2ZyI+CiAgPC9h
PgogIDxhIGFyaWEtbGFiZWw9ImNvbnRyaWJ1dG9ycyBncmFwaCIgaHJlZj0i
aHR0cHM6Ly9naXRodWIuY29tL3ByaW1lci9jc3MvZ3JhcGhzL2NvbnRyaWJ1
dG9ycyI+CiAgICA8aW1nIHNyYz0iaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9n
aXRodWIvY29udHJpYnV0b3JzL3ByaW1lci9jc3Muc3ZnIj4KICA8L2E+CiAg
PGEgYXJpYS1sYWJlbD0ibGFzdCBjb21taXQiIGhyZWY9Imh0dHBzOi8vZ2l0
aHViLmNvbS9wcmltZXIvY3NzL2NvbW1pdHMvbWFzdGVyIj4KICAgIDxpbWcg
YWx0PSIiIHNyYz0iaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9naXRodWIvbGFz
dC1jb21taXQvcHJpbWVyL2Nzcy5zdmciPgogIDwvYT4KICA8YSBhcmlhLWxh
YmVsPSJqb2luIHVzIGluIHNwZWN0cnVtIiBocmVmPSJodHRwczovL3NwZWN0
cnVtLmNoYXQvcHJpbWVyIj4KICAgIDxpbWcgYWx0PSIiIHNyYz0iaHR0cHM6
Ly93aXRoc3BlY3RydW0uZ2l0aHViLmlvL2JhZGdlL2JhZGdlLnN2ZyI+CiAg
PC9hPgogIDxhIGFyaWEtbGFiZWw9ImxpY2Vuc2UiIGhyZWY9Imh0dHBzOi8v
Z2l0aHViLmNvbS9wcmltZXIvY3NzL2Jsb2IvbWFzdGVyL0xJQ0VOU0UiPgog
ICAgPGltZyBzcmM9Imh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vZ2l0aHViL2xp
Y2Vuc2UvcHJpbWVyL2Nzcy5zdmciIGFsdD0iIj4KICA8L2E+CjwvcD4KCiMj
IE1pZ3JhdGluZwo6cm90YXRpbmdfbGlnaHQ6ICoqSWYgeW91IGN1cnJlbnRs
eSB1c2UgdGhlIGBwcmltZXJgIG9yIGBwcmltZXItYC1wcmVmaXhlZCBucG0g
cGFja2FnZXMsIHBsZWFzZSByZWFkIFt0aGUgbWlncmF0aW9uIGd1aWRlXShN
SUdSQVRJTkcubWQpISoqCgojIyBJbnN0YWxsClRoaXMgcmVwb3NpdG9yeSBp
cyBkaXN0cmlidXRlZCB3aXRoIFtucG1dLiBBZnRlciBbaW5zdGFsbGluZyBu
cG1dW2luc3RhbGwtbnBtXSwgeW91IGNhbiBpbnN0YWxsIGBAcHJpbWVyL2Nz
c2Agd2l0aCB0aGlzIGNvbW1hbmQ6CgpgYGBzaAokIG5wbSBpbnN0YWxsIC0t
c2F2ZSBAcHJpbWVyL2NzcwpgYGAKCiMjIFVzYWdlClRoZSBpbmNsdWRlZCBz
b3VyY2UgZmlsZXMgYXJlIHdyaXR0ZW4gaW4gW1Nhc3NdIHVzaW5nIFNDU1Mg
c3ludGF4LiBBZnRlciBbaW5zdGFsbGluZ10oI2luc3RhbGwpIHdpdGggbnBt
LCB5b3UgY2FuIGFkZCB5b3VyIHByb2plY3QncyBgbm9kZV9tb2R1bGVzYCBk
aXJlY3RvcnkgdG8geW91ciBTYXNzIFtpbmNsdWRlIHBhdGhzXShodHRwczov
L2dpdGh1Yi5jb20vc2Fzcy9ub2RlLXNhc3MjaW5jbHVkZXBhdGhzKSAoQUtB
IFtsb2FkIHBhdGhzXShodHRwOi8vdGVjaG5vbG9neS5jdXN0b21pbmsuY29t
L2Jsb2cvMjAxNC8xMC8wOS91bmRlcnN0YW5kaW5nLWFuZC11c2luZy1zYXNz
LWxvYWQtcGF0aHMvKSBpbiBSdWJ5KSwgdGhlbiBpbXBvcnQgaXQgbGlrZSB0
aGlzOgoKYGBgc2NzcwpAaW1wb3J0ICJAcHJpbWVyL2Nzcy9pbmRleC5zY3Nz
IjsKYGBgCgpZb3UgY2FuIGltcG9ydCBpbmRpdmlkdWFsIFByaW1lciBtb2R1
bGVzIGRpcmVjdGx5IGZyb20gdGhlIGBAcHJpbWVyL2Nzc2AgcGFja2FnZToK
CmBgYHNjc3MKQGltcG9ydCAiQHByaW1lci9jc3MvY29yZS9pbmRleC5zY3Nz
IjsKQGltcG9ydCAiQHByaW1lci9jc3MvcHJvZHVjdC9pbmRleC5zY3NzIjsK
QGltcG9ydCAiQHByaW1lci9jc3MvbWFya2V0aW5nL2luZGV4LnNjc3MiOwpg
YGAKCiMjIERldmVsb3BtZW50ClNlZSBbREVWRUxPUC5tZF0oLi9ERVZFTE9Q
Lm1kKSBmb3IgZGV2ZWxvcG1lbnQgZG9jcy4KCiMjIFJlbGVhc2luZyAoZm9y
IEdpdEh1YiBzdGFmZikKWW91IGNhbiBmaW5kIGRvY3MgYWJvdXQgb3VyIHJl
bGVhc2UgcHJvY2VzcyBpbiBbUkVMRUFTSU5HLm1kXSguL1JFTEVBU0lORy5t
ZCkuCgojIyBEb2N1bWVudGF0aW9uClRoZSBbUHJpbWVyIENTUyBkb2NzIHNp
dGVdKGh0dHBzOi8vcHJpbWVyLnN0eWxlL2NzcykgaXMgZGVwbG95ZWQgZnJv
bSB0aGlzIHJlcG8gd2l0aCBbcHJpbWVyL2RlcGxveV0oaHR0cHM6Ly9naXRo
dWIuY29tL3ByaW1lci9kZXBsb3kpLiBTZWUgW3RoZSBkZXZlbG9wbWVudCBk
b2NzXShERVZFTE9QLm1kI2RvY3Mtc2l0ZSkgZm9yIG1vcmUgaW5mby4KCiMj
IExpY2Vuc2UKCltNSVRdKC4vTElDRU5TRSkgJmNvcHk7IFtHaXRIdWJdKGh0
dHBzOi8vZ2l0aHViLmNvbS8pCgoKW2luc3RhbGwtbnBtXTogaHR0cHM6Ly9k
b2NzLm5wbWpzLmNvbS9nZXR0aW5nLXN0YXJ0ZWQvaW5zdGFsbGluZy1ub2Rl
CltucG1dOiBodHRwczovL3d3dy5ucG1qcy5jb20vCltwcmltZXJdOiBodHRw
czovL3ByaW1lci5zdHlsZQpbc2Fzc106IGh0dHA6Ly9zYXNzLWxhbmcuY29t
Lwo=
",,8740,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"bmFtZTogQ0kKb246IHB1c2gKam9iczoKICBhbGw6CiAgICBydW5zLW9uOiB1
YnVudHUtbGF0ZXN0CiAgICBzdGVwczoKICAgICAgLSB1c2VzOiBhY3Rpb25z
L2NoZWNrb3V0QG1hc3RlcgogICAgICAtIHVzZXM6IGFjdGlvbnMvc2V0dXAt
bm9kZUBtYXN0ZXIKICAgICAgICB3aXRoOgogICAgICAgICAgbm9kZS12ZXJz
aW9uOiAxMQogICAgICAtIG5hbWU6IGluc3RhbGwKICAgICAgICBydW46IG5w
bSBpbnN0YWxsCiAgICAgIC0gbmFtZTogbGludAogICAgICAgIHJ1bjogc2Ny
aXB0L2xpbnQtY2kKICAgICAgLSBuYW1lOiB0ZXN0CiAgICAgICAgcnVuOiBu
cG0gdGVzdAogICAgICAtIG5hbWU6IHByZXB1Ymxpc2gKICAgICAgICBydW46
IHNjcmlwdC9wcmVwdWJsaXNoCiAgICAgIC0gbmFtZTogdGVzdCBkZXByZWNh
dGlvbnMKICAgICAgICBpZjogc3RhcnRzV2l0aChnaXRodWIucmVmLCAncmVm
cy9oZWFkcy9yZWxlYXNlLScpCiAgICAgICAgcnVuOiBzY3JpcHQvdGVzdC1k
ZXByZWNhdGlvbnMuanMKICAgICAgLSB1c2VzOiBwcmltZXIvcHVibGlzaEB2
MS4xLjAKICAgICAgICBlbnY6CiAgICAgICAgICBHSVRIVUJfVE9LRU46ICR7
eyBzZWNyZXRzLkdJVEhVQl9UT0tFTiB9fQogICAgICAgICAgTlBNX0FVVEhf
VE9LRU46ICR7eyBzZWNyZXRzLk5QTV9BVVRIX1RPS0VOIH19Cg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'learn-go-with-tests',123572362,b'Learn Go with test-driven development',b'Go',24,8740,,231,False,b'https://api.github.com/repos/quii/learn-go-with-tests/forks',"IyBMZWFybiBHbyB3aXRoIFRlc3RzCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8
aW1nIHNyYz0icmVkLWdyZWVuLWJsdWUtZ29waGVycy1zbWFsbGVyLnBuZyIg
Lz4KPC9wPgoKW0FydCBieSBEZW5pc2VdKGh0dHBzOi8vdHdpdHRlci5jb20v
ZGVuaXNleXUyMSkKClshW0J1aWxkIFN0YXR1c10oaHR0cHM6Ly90cmF2aXMt
Y2kub3JnL3F1aWkvbGVhcm4tZ28td2l0aC10ZXN0cy5zdmc/YnJhbmNoPW1h
c3RlcildKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9xdWlpL2xlYXJuLWdvLXdp
dGgtdGVzdHMpClshW0dvIFJlcG9ydCBDYXJkXShodHRwczovL2dvcmVwb3J0
Y2FyZC5jb20vYmFkZ2UvZ2l0aHViLmNvbS9xdWlpL2xlYXJuLWdvLXdpdGgt
dGVzdHMpXShodHRwczovL2dvcmVwb3J0Y2FyZC5jb20vcmVwb3J0L2dpdGh1
Yi5jb20vcXVpaS9sZWFybi1nby13aXRoLXRlc3RzKQoKLSBGb3JtYXRzOiBb
R2l0Ym9va10oaHR0cHM6Ly9xdWlpLmdpdGJvb2suaW8vbGVhcm4tZ28td2l0
aC10ZXN0cyksIFtFUFVCIG9yIFBERl0oaHR0cHM6Ly9naXRodWIuY29tL3F1
aWkvbGVhcm4tZ28td2l0aC10ZXN0cy9yZWxlYXNlcykKLSBUcmFuc2xhdGlv
bnM6IFvkuK3mloddKGh0dHBzOi8vc3R1ZHlnb2xhbmcuZ2l0Ym9vay5pby9s
ZWFybi1nby13aXRoLXRlc3RzKSwgW1BvcnR1Z3XDqnNdKGh0dHBzOi8vbGFy
aWVuLmdpdGJvb2suaW8vYXByZW5kYS1nby1jb20tdGVzdGVzLykKCiMjIFdo
eQoKKiBFeHBsb3JlIHRoZSBHbyBsYW5ndWFnZSBieSB3cml0aW5nIHRlc3Rz
CiogKipHZXQgYSBncm91bmRpbmcgd2l0aCBUREQqKi4gR28gaXMgYSBnb29k
IGxhbmd1YWdlIGZvciBsZWFybmluZyBUREQgYmVjYXVzZSBpdCBpcyBhIHNp
bXBsZSBsYW5ndWFnZSB0byBsZWFybiBhbmQgdGVzdGluZyBpcyBidWlsdC1p
bgoqIEJlIGNvbmZpZGVudCB0aGF0IHlvdSdsbCBiZSBhYmxlIHRvIHN0YXJ0
IHdyaXRpbmcgcm9idXN0LCB3ZWxsLXRlc3RlZCBzeXN0ZW1zIGluIEdvCiog
W1dhdGNoIGEgdmlkZW8sIG9yIHJlYWQgYWJvdXQgd2h5IHVuaXQgdGVzdGlu
ZyBhbmQgVEREIGlzIGltcG9ydGFudF0od2h5Lm1kKQoKIyMgVGFibGUgb2Yg
Y29udGVudHMKCiMjIyBHbyBmdW5kYW1lbnRhbHMKCjEuIFtJbnN0YWxsIEdv
XShpbnN0YWxsLWdvLm1kKSAtIFNldCB1cCBlbnZpcm9ubWVudCBmb3IgcHJv
ZHVjdGl2aXR5LgoyLiBbSGVsbG8sIHdvcmxkXShoZWxsby13b3JsZC5tZCkg
LSBEZWNsYXJpbmcgdmFyaWFibGVzLCBjb25zdGFudHMsIGlmL2Vsc2Ugc3Rh
dGVtZW50cywgc3dpdGNoLCB3cml0ZSB5b3VyIGZpcnN0IGdvIHByb2dyYW0g
YW5kIHdyaXRlIHlvdXIgZmlyc3QgdGVzdC4gU3ViLXRlc3Qgc3ludGF4IGFu
ZCBjbG9zdXJlcy4KMy4gW0ludGVnZXJzXShpbnRlZ2Vycy5tZCkgLSBGdXJ0
aGVyIEV4cGxvcmUgZnVuY3Rpb24gZGVjbGFyYXRpb24gc3ludGF4IGFuZCBs
ZWFybiBuZXcgd2F5cyB0byBpbXByb3ZlIHRoZSBkb2N1bWVudGF0aW9uIG9m
IHlvdXIgY29kZS4KNC4gW0l0ZXJhdGlvbl0oaXRlcmF0aW9uLm1kKSAtIExl
YXJuIGFib3V0IGBmb3JgIGFuZCBiZW5jaG1hcmtpbmcuCjUuIFtBcnJheXMg
YW5kIHNsaWNlc10oYXJyYXlzLWFuZC1zbGljZXMubWQpIC0gTGVhcm4gYWJv
dXQgYXJyYXlzLCBzbGljZXMsIGBsZW5gLCB2YXJhcmdzLCBgcmFuZ2VgIGFu
ZCB0ZXN0IGNvdmVyYWdlLgo2LiBbU3RydWN0cywgbWV0aG9kcyAmIGludGVy
ZmFjZXNdKHN0cnVjdHMtbWV0aG9kcy1hbmQtaW50ZXJmYWNlcy5tZCkgLSBM
ZWFybiBhYm91dCBgc3RydWN0YCwgbWV0aG9kcywgYGludGVyZmFjZWAgYW5k
IHRhYmxlIGRyaXZlbiB0ZXN0cy4KNy4gW1BvaW50ZXJzICYgZXJyb3JzXShw
b2ludGVycy1hbmQtZXJyb3JzLm1kKSAtIExlYXJuIGFib3V0IHBvaW50ZXJz
IGFuZCBlcnJvcnMuCjguIFtNYXBzXShtYXBzLm1kKSAtIExlYXJuIGFib3V0
IHN0b3JpbmcgdmFsdWVzIGluIHRoZSBtYXAgZGF0YSBzdHJ1Y3R1cmUuCjku
IFtEZXBlbmRlbmN5IEluamVjdGlvbl0oZGVwZW5kZW5jeS1pbmplY3Rpb24u
bWQpIC0gTGVhcm4gYWJvdXQgZGVwZW5kZW5jeSBpbmplY3Rpb24sIGhvdyBp
dCByZWxhdGVzIHRvIHVzaW5nIGludGVyZmFjZXMgYW5kIGEgcHJpbWVyIG9u
IGlvLgoxMC4gW01vY2tpbmddKG1vY2tpbmcubWQpIC0gVGFrZSBzb21lIGV4
aXN0aW5nIHVudGVzdGVkIGNvZGUgYW5kIHVzZSBESSB3aXRoIG1vY2tpbmcg
dG8gdGVzdCBpdC4KMTEuIFtDb25jdXJyZW5jeV0oY29uY3VycmVuY3kubWQp
IC0gTGVhcm4gaG93IHRvIHdyaXRlIGNvbmN1cnJlbnQgY29kZSB0byBtYWtl
IHlvdXIgc29mdHdhcmUgZmFzdGVyLgoxMi4gW1NlbGVjdF0oc2VsZWN0Lm1k
KSAtIExlYXJuIGhvdyB0byBzeW5jaHJvbmlzZSBhc3luY2hyb25vdXMgcHJv
Y2Vzc2VzIGVsZWdhbnRseS4KMTMuIFtSZWZsZWN0aW9uXShyZWZsZWN0aW9u
Lm1kKSAtIExlYXJuIGFib3V0IHJlZmxlY3Rpb24KMTMuIFtTeW5jXShzeW5j
Lm1kKSAtIExlYXJuIHNvbWUgZnVuY3Rpb25hbGl0eSBmcm9tIHRoZSBzeW5j
IHBhY2thZ2UgaW5jbHVkaW5nIGBXYWl0R3JvdXBgIGFuZCBgTXV0ZXhgCjEz
LiBbQ29udGV4dF0oY29udGV4dC5tZCkgLSBVc2UgdGhlIGNvbnRleHQgcGFj
a2FnZSB0byBtYW5hZ2UgYW5kIGNhbmNlbCBsb25nLXJ1bm5pbmcgcHJvY2Vz
c2VzCjE0LiBbSW50cm8gdG8gcHJvcGVydHkgYmFzZWQgdGVzdHNdKHJvbWFu
LW51bWVyYWxzLm1kKSAtIFByYWN0aWNlIHNvbWUgVEREIHdpdGggdGhlIFJv
bWFuIE51bWVyYWxzIGthdGEgYW5kIGdldCBhIGJyaWVmIGludHJvIHRvIHBy
b3BlcnR5IGJhc2VkIHRlc3RzCjE1LiBbTWF0aHNdKG1hdGgubWQpIC0gVXNl
IHRoZSBgbWF0aGAgcGFja2FnZSB0byBkcmF3IGFuIFNWRyBjbG9jawoKIyMj
IEJ1aWxkIGFuIGFwcGxpY2F0aW9uCgpOb3cgdGhhdCB5b3UgaGF2ZSBob3Bl
ZnVsbHkgZGlnZXN0ZWQgdGhlIF9HbyBGdW5kYW1lbnRhbHNfIHNlY3Rpb24g
eW91IGhhdmUgYSBzb2xpZCBncm91bmRpbmcgb2YgYSBtYWpvcml0eSBvZiBH
bydzIGxhbmd1YWdlIGZlYXR1cmVzIGFuZCBob3cgdG8gZG8gVERELgoKVGhp
cyBuZXh0IHNlY3Rpb24gd2lsbCBpbnZvbHZlIGJ1aWxkaW5nIGFuIGFwcGxp
Y2F0aW9uLgoKRWFjaCBjaGFwdGVyIHdpbGwgaXRlcmF0ZSBvbiB0aGUgcHJl
dmlvdXMgb25lLCBleHBhbmRpbmcgdGhlIGFwcGxpY2F0aW9uJ3MgZnVuY3Rp
b25hbGl0eSBhcyBvdXIgcHJvZHVjdCBvd25lciBkaWN0YXRlcy4KCk5ldyBj
b25jZXB0cyB3aWxsIGJlIGludHJvZHVjZWQgdG8gaGVscCBmYWNpbGl0YXRl
IHdyaXRpbmcgZ3JlYXQgY29kZSBidXQgbW9zdCBvZiB0aGUgbmV3IG1hdGVy
aWFsIHdpbGwgYmUgbGVhcm5pbmcgd2hhdCBjYW4gYmUgYWNjb21wbGlzaGVk
IGZyb20gR28ncyBzdGFuZGFyZCBsaWJyYXJ5LgoKQnkgdGhlIGVuZCBvZiB0
aGlzLCB5b3Ugc2hvdWxkIGhhdmUgYSBzdHJvbmcgZ3Jhc3AgYXMgdG8gaG93
IHRvIGl0ZXJhdGl2ZWx5IHdyaXRlIGFuIGFwcGxpY2F0aW9uIGluIEdvLCBi
YWNrZWQgYnkgdGVzdHMuCgoqIFtIVFRQIHNlcnZlcl0oaHR0cC1zZXJ2ZXIu
bWQpIC0gV2Ugd2lsbCBjcmVhdGUgYW4gYXBwbGljYXRpb24gd2hpY2ggbGlz
dGVucyB0byBIVFRQIHJlcXVlc3RzIGFuZCByZXNwb25kcyB0byB0aGVtLgoq
IFtKU09OLCByb3V0aW5nIGFuZCBlbWJlZGRpbmddKGpzb24ubWQpIC0gV2Ug
d2lsbCBtYWtlIG91ciBlbmRwb2ludHMgcmV0dXJuIEpTT04gYW5kIGV4cGxv
cmUgaG93IHRvIGRvIHJvdXRpbmcuCiogW0lPIGFuZCBzb3J0aW5nXShpby5t
ZCkgLSBXZSB3aWxsIHBlcnNpc3QgYW5kIHJlYWQgb3VyIGRhdGEgZnJvbSBk
aXNrIGFuZCB3ZSdsbCBjb3ZlciBzb3J0aW5nIGRhdGEuCiogW0NvbW1hbmQg
bGluZSAmIHByb2plY3Qgc3RydWN0dXJlXShjb21tYW5kLWxpbmUubWQpIC0g
U3VwcG9ydCBtdWx0aXBsZSBhcHBsaWNhdGlvbnMgZnJvbSBvbmUgY29kZSBi
YXNlIGFuZCByZWFkIGlucHV0IGZyb20gY29tbWFuZCBsaW5lLgoqIFtUaW1l
XSh0aW1lLm1kKSAtIHVzaW5nIHRoZSBgdGltZWAgcGFja2FnZSB0byBzY2hl
ZHVsZSBhY3Rpdml0aWVzLgoqIFtXZWJTb2NrZXRzXSh3ZWJzb2NrZXRzLm1k
KSAtIGxlYXJuIGhvdyB0byB3cml0ZSBhbmQgdGVzdCBhIHNlcnZlciB0aGF0
IHVzZXMgV2ViU29ja2V0cy4KCiMjIyBRdWVzdGlvbnMgYW5kIGFuc3dlcnMK
Ckkgb2Z0ZW4gcnVuIGluIHRvIHF1ZXN0aW9ucyBvbiB0aGUgaW50ZXJuZXRz
IGxpa2UKCj4gSG93IGRvIEkgdGVzdCBteSBhbWF6aW5nIGZ1bmN0aW9uIHRo
YXQgZG9lcyB4LCB5IGFuZCB6CgpJZiB5b3UgaGF2ZSBzdWNoIGEgcXVlc3Rp
b24gcmFpc2UgaXQgYXMgYW4gaXNzdWUgb24gZ2l0aHViIGFuZCBJJ2xsIHRy
eSBhbmQgZmluZCB0aW1lIHRvIHdyaXRlIGEgc2hvcnQgY2hhcHRlciB0byB0
YWNrbGUgdGhlIGlzc3VlLiBJIGZlZWwgbGlrZSBjb250ZW50IGxpa2UgdGhp
cyBpcyB2YWx1YWJsZSBhcyBpdCBpcyB0YWNrbGluZyBwZW9wbGUncyBfcmVh
bF8gcXVlc3Rpb25zIGFyb3VuZCB0ZXN0aW5nLgoKKiBbT1MgZXhlY10ob3Mt
ZXhlYy5tZCkgLSBBbiBleGFtcGxlIG9mIGhvdyB3ZSBjYW4gcmVhY2ggb3V0
IHRvIHRoZSBPUyB0byBleGVjdXRlIGNvbW1hbmRzIHRvIGZldGNoIGRhdGEg
YW5kIGtlZXAgb3VyIGJ1c2luZXNzIGxvZ2ljIHRlc3RhYmxlLwoqIFtFcnJv
ciB0eXBlc10oZXJyb3ItdHlwZXMubWQpIC0gRXhhbXBsZSBvZiBjcmVhdGlu
ZyB5b3VyIG93biBlcnJvciB0eXBlcyB0byBpbXByb3ZlIHlvdXIgdGVzdHMg
YW5kIG1ha2UgeW91ciBjb2RlIGVhc2llciB0byB3b3JrIHdpdGguCgojIyBD
b250cmlidXRpbmcKCiogX1RoaXMgcHJvamVjdCBpcyB3b3JrIGluIHByb2dy
ZXNzXyBJZiB5b3Ugd291bGQgbGlrZSB0byBjb250cmlidXRlLCBwbGVhc2Ug
ZG8gZ2V0IGluIHRvdWNoLgoqIFJlYWQgW2NvbnRyaWJ1dGluZy5tZF0oaHR0
cHM6Ly9naXRodWIuY29tL3F1aWkvbGVhcm4tZ28td2l0aC10ZXN0cy90cmVl
Lzg0MmY0ZjI0ZDFmMWMyMGJhM2JiMjNjYmMzNzZjN2NhNmY3Y2E3OWEvY29u
dHJpYnV0aW5nLm1kKSBmb3IgZ3VpZGVsaW5lcwoqIEFueSBpZGVhcz8gQ3Jl
YXRlIGFuIGlzc3VlCgojIyBCYWNrZ3JvdW5kCgpJIGhhdmUgc29tZSBleHBl
cmllbmNlIGludHJvZHVjaW5nIEdvIHRvIGRldmVsb3BtZW50IHRlYW1zIGFu
ZCBoYXZlIHRyaWVkIGRpZmZlcmVudCBhcHByb2FjaGVzIGFzIHRvIGhvdyB0
byBncm93IGEgdGVhbSBmcm9tIHNvbWUgcGVvcGxlIGN1cmlvdXMgYWJvdXQg
R28gaW50byBoaWdobHkgZWZmZWN0aXZlIHdyaXRlcnMgb2YgR28gc3lzdGVt
cy4KCiMjIyBXaGF0IGRpZG4ndCB3b3JrCgojIyMjIFJlYWQgX3RoZV8gYm9v
awoKQW4gYXBwcm9hY2ggd2UgdHJpZWQgd2FzIHRvIHRha2UgW3RoZSBibHVl
IGJvb2tdKGh0dHBzOi8vd3d3LmFtYXpvbi5jby51ay9Qcm9ncmFtbWluZy1M
YW5ndWFnZS1BZGRpc29uLVdlc2xleS1Qcm9mZXNzaW9uYWwtQ29tcHV0aW5n
L2RwLzAxMzQxOTA0NDApIGFuZCBldmVyeSB3ZWVrIGRpc2N1c3MgdGhlIG5l
eHQgY2hhcHRlciBhbG9uZyB3aXRoIHRoZSBleGVyY2lzZXMuCgpJIGxvdmUg
dGhpcyBib29rIGJ1dCBpdCByZXF1aXJlcyBhIGhpZ2ggbGV2ZWwgb2YgY29t
bWl0bWVudC4gVGhlIGJvb2sgaXMgdmVyeSBkZXRhaWxlZCBpbiBleHBsYWlu
aW5nIGNvbmNlcHRzLCB3aGljaCBpcyBvYnZpb3VzbHkgZ3JlYXQgYnV0IGl0
IG1lYW5zIHRoYXQgdGhlIHByb2dyZXNzIGlzIHNsb3cgYW5kIHN0ZWFkeSAt
IHRoaXMgaXMgbm90IGZvciBldmVyeW9uZS4KCkkgZm91bmQgdGhhdCB3aGls
c3QgYSBzbWFsbCBudW1iZXIgb2YgcGVvcGxlIHdvdWxkIHJlYWQgY2hhcHRl
ciBYIGFuZCBkbyB0aGUgZXhlcmNpc2VzLCBtYW55IHBlb3BsZSBkaWRuJ3Qu
CgojIyMjIFNvbHZlIHNvbWUgcHJvYmxlbXMKCkthdGFzIGFyZSBmdW4gYnV0
IHRoZXkgYXJlIHVzdWFsbHkgbGltaXRlZCBpbiB0aGVpciBzY29wZSBmb3Ig
bGVhcm5pbmcgYSBsYW5ndWFnZTsgeW91J3JlIHVubGlrZWx5IHRvIHVzZSBn
b3JvdXRpbmVzIHRvIHNvbHZlIGEga2F0YS4KCkFub3RoZXIgcHJvYmxlbSBp
cyB3aGVuIHlvdSBoYXZlIHZhcnlpbmcgbGV2ZWxzIG9mIGVudGh1c2lhc20u
IFNvbWUgcGVvcGxlIGp1c3QgbGVhcm4gd2F5IG1vcmUgb2YgdGhlIGxhbmd1
YWdlIHRoYW4gb3RoZXJzIGFuZCB3aGVuIGRlbW9uc3RyYXRpbmcgd2hhdCB0
aGV5IGhhdmUgZG9uZSBlbmQgdXAgY29uZnVzaW5nIHBlb3BsZSB3aXRoIGZl
YXR1cmVzIHRoZSBvdGhlcnMgYXJlIG5vdCBmYW1pbGlhciB3aXRoLgoKVGhp
cyBlbmRzIHVwIG1ha2luZyB0aGUgbGVhcm5pbmcgZmVlbCBxdWl0ZSBfdW5z
dHJ1Y3R1cmVkXyBhbmQgX2FkIGhvY18uCgojIyMgV2hhdCBkaWQgd29yawoK
QnkgZmFyIHRoZSBtb3N0IGVmZmVjdGl2ZSB3YXkgd2FzIGJ5IHNsb3dseSBp
bnRyb2R1Y2luZyB0aGUgZnVuZGFtZW50YWxzIG9mIHRoZSBsYW5ndWFnZSBi
eSByZWFkaW5nIHRocm91Z2ggW2dvIGJ5IGV4YW1wbGVdKGh0dHBzOi8vZ29i
eWV4YW1wbGUuY29tLyksIGV4cGxvcmluZyB0aGVtIHdpdGggZXhhbXBsZXMg
YW5kIGRpc2N1c3NpbmcgdGhlbSBhcyBhIGdyb3VwLiBUaGlzIHdhcyBhIG1v
cmUgaW50ZXJhY3RpdmUgYXBwcm9hY2ggdGhhbiAicmVhZCBjaGFwdGVyIHgg
Zm9yIGhvbWV3b3JrIi4KCk92ZXIgdGltZSB0aGUgdGVhbSBnYWluZWQgYSBz
b2xpZCBmb3VuZGF0aW9uIG9mIHRoZSBfZ3JhbW1hcl8gb2YgdGhlIGxhbmd1
YWdlIHNvIHdlIGNvdWxkIHRoZW4gc3RhcnQgdG8gYnVpbGQgc3lzdGVtcy4K
ClRoaXMgdG8gbWUgc2VlbXMgYW5hbG9nb3VzIHRvIHByYWN0aWNpbmcgc2Nh
bGVzIHdoZW4gdHJ5aW5nIHRvIGxlYXJuIGd1aXRhci4KCkl0IGRvZXNuJ3Qg
bWF0dGVyIGhvdyBhcnRpc3RpYyB5b3UgdGhpbmsgeW91IGFyZSwgeW91IGFy
ZSB1bmxpa2VseSB0byB3cml0ZSBnb29kIG11c2ljIHdpdGhvdXQgdW5kZXJz
dGFuZGluZyB0aGUgZnVuZGFtZW50YWxzIGFuZCBwcmFjdGljaW5nIHRoZSBt
ZWNoYW5pY3MuCgojIyMgV2hhdCB3b3JrcyBmb3IgbWUKCldoZW4gX0lfIGxl
YXJuIGEgbmV3IHByb2dyYW1taW5nIGxhbmd1YWdlIEkgdXN1YWxseSBzdGFy
dCBieSBtZXNzaW5nIGFyb3VuZCBpbiBhIFJFUEwgYnV0IGV2ZW50dWFsbHks
IEkgbmVlZCBtb3JlIHN0cnVjdHVyZS4KCldoYXQgSSBsaWtlIHRvIGRvIGlz
IGV4cGxvcmUgY29uY2VwdHMgYW5kIHRoZW4gc29saWRpZnkgdGhlIGlkZWFz
IHdpdGggdGVzdHMuIFRlc3RzIHZlcmlmeSB0aGUgY29kZSBJIHdyaXRlIGlz
IGNvcnJlY3QgYW5kIGRvY3VtZW50cyB0aGUgZmVhdHVyZSBJIGhhdmUgbGVh
cm5lZC4KClRha2luZyBteSBleHBlcmllbmNlIG9mIGxlYXJuaW5nIHdpdGgg
YSBncm91cCBhbmQgbXkgb3duIHBlcnNvbmFsIHdheSBJIGFtIGdvaW5nIHRv
IHRyeSBhbmQgY3JlYXRlIHNvbWV0aGluZyB0aGF0IGhvcGVmdWxseSBwcm92
ZXMgdXNlZnVsIHRvIG90aGVyIHRlYW1zLiBMZWFybmluZyB0aGUgZnVuZGFt
ZW50YWxzIGJ5IHdyaXRpbmcgc21hbGwgdGVzdHMgc28gdGhhdCB5b3UgY2Fu
IHRoZW4gdGFrZSB5b3VyIGV4aXN0aW5nIHNvZnR3YXJlIGRlc2lnbiBza2ls
bHMgYW5kIHNoaXAgc29tZSBncmVhdCBzeXN0ZW1zLgoKIyMgV2hvIHRoaXMg
aXMgZm9yCgoqIFBlb3BsZSB3aG8gYXJlIGludGVyZXN0ZWQgaW4gcGlja2lu
ZyB1cCBHby4KKiBQZW9wbGUgd2hvIGFscmVhZHkga25vdyBzb21lIEdvLCBi
dXQgd2FudCB0byBleHBsb3JlIHRlc3Rpbmcgd2l0aCBUREQuCgojIyBXaGF0
IHlvdSdsbCBuZWVkCgoqIEEgY29tcHV0ZXIhCiogW0luc3RhbGxlZCBHb10o
aHR0cHM6Ly9nb2xhbmcub3JnLykKKiBBIHRleHQgZWRpdG9yCiogU29tZSBl
eHBlcmllbmNlIHdpdGggcHJvZ3JhbW1pbmcuIFVuZGVyc3RhbmRpbmcgb2Yg
Y29uY2VwdHMgbGlrZSBgaWZgLCB2YXJpYWJsZXMsIGZ1bmN0aW9ucyBldGMu
CiogQ29tZm9ydGFibGUgd2l0aCB1c2luZyB0aGUgdGVybWluYWwKCiMjIEZl
ZWRiYWNrCgoqIEFkZCBpc3N1ZXMvc3VibWl0IFBScyBbaGVyZV0oaHR0cHM6
Ly9naXRodWIuY29tL3F1aWkvbGVhcm4tZ28td2l0aC10ZXN0cykgb3IgW3R3
ZWV0IG1lIEBxdWlpXShodHRwczovL3R3aXR0ZXIuY29tL3F1aWkpCgpbTUlU
IGxpY2Vuc2VdKExJQ0VOU0UubWQpCgpbTG9nbyBpcyBieSBlZ29uZWxicmVd
KGh0dHBzOi8vZ2l0aHViLmNvbS9lZ29uZWxicmUpIFdoYXQgYSBzdGFyIQo=
",,8740,"ZGlzdDogYmlvbmljCmxhbmd1YWdlOiBnbwoKZ286CiAgLSAxLjEzLngKCmJl
Zm9yZV9pbnN0YWxsOgogIC0gZ28gZ2V0IGdpdGh1Yi5jb20vcXVpaS9sZWFy
bi1nby13aXRoLXRlc3RzL2NvbW1hbmQtbGluZS92MQoKaW5zdGFsbDogdHJ1
ZQoKc2VydmljZXM6CiAgLSBkb2NrZXIKCnN0YWdlczoKICAtIGJ1aWxkCiAg
LSBzcGVsbGluZwogIC0gZXB1YgoKam9iczoKICBpbmNsdWRlOgogICAgLSBz
dGFnZTogYnVpbGQKICAgICAgc2NyaXB0OgogICAgICAgIC0gZ28gZ2V0IC11
IGdvbGFuZy5vcmcveC9saW50L2dvbGludAogICAgICAgIC0gIi4vYnVpbGQu
c2giCiAgICAtIHN0YWdlOiBzcGVsbGluZwogICAgICBzY3JpcHQ6CiAgICAg
ICAgLSBnbyBnZXQgLXUgZ2l0aHViLmNvbS9jbGllbnQ5L21pc3NwZWxsL2Nt
ZC9taXNzcGVsbAogICAgICAgIC0gbWlzc3BlbGwgLWVycm9yIC4KICAgIC0g
c3RhZ2U6IHJlbGVhc2VzCiAgICAgIHNjcmlwdDoKICAgICAgICAtIGRvY2tl
ciBwdWxsIGphZ3JlZ29yeS9wYW5kb2MKICAgICAgICAtICIuL2J1aWxkLmJv
b2tzLnNoIgogICAgICBkZXBsb3k6CiAgICAgICAgcHJvdmlkZXI6IHJlbGVh
c2VzCiAgICAgICAgYXBpX2tleToKICAgICAgICAgIHNlY3VyZTogcTU4b29m
TFUxdENjTzYxOGF4U21sYzNlT2Y2Zi9RdFAvWE9SdG4wbzd6LzFPNkFFTmxX
QUluMFJZZXRIRXAwSk5ZUWZTNHNxZ3kzNGdBeTJINkJwWlVSYUhjMW11VzBm
aHdSbmRCanJiVTVEdmlmbE9jOWxIOHBMekRacHpoS2RCaUNNb1pwRHMrR3Ay
N1BtWm42MnZIU1praVIzRU1kckpGb0RWOC9mVUN5NFVZcy9VMy9RaUcvUXYv
RG5LTTBHSTVMZk5XR3REMGR6YmUxejRxVkVmVVhrNDRDbnhFSlpvYVNFeDZl
MHpyUDlRSHJlVUdwQURCNHN5emdTVy9ROFJ3bXlaSVdQWnJtbUJ1OHF6cm1w
SnRjak5hVWxseDRWQUlCODZVNWZaYVVJRW9Bb2RHZjcrM1V0OEs1b0krZUJv
NUhrQVlTaHdyelhSczZnUVdwOG53RVd5eHpFdkx3ZjQ5NDlsbG5DMGV6NnF2
U2Y3cHJYSktLMlJtdmlkN3hadDUxZU1nbEJEYXRBRmFwcm1kTTRBWmVXaWJV
cFZQMlFiellBcXBrZDhTWmF6bWpZelJKUGVkdU56R29PT3NIdXFJV2RtS0h0
aFFFTVpYaVhTRHk0SFdQOUEwODUvK2k0NXBLNmpmMUJmdTJYYkNXK1loM2Qx
dVRVQ1NTdFBNZ1ZPTGJUTDhZR2FLcG5wTzZUQW8wL3ZBRWlPNC8vbFplb2R4
L3c3czh6VERQVlBwYjloREZiY3dRZldaYXJQVHpWUXVVS3JWYWdGbExvb1Rw
ekoyc1U3STdRNDVPNnZ2RHZoWnpqMmdNKy9nWHRiUzhDS3dVTkVPc0p1YnBy
R2tzVzUyNTR2TVJheVRVVlhYZUhjckFJTWNDZFcwRDkrWWJYaWZtSnZjYzFM
WWs9CiAgICAgICAgZmlsZToKICAgICAgICAgIC0gImxlYXJuLWdvLXdpdGgt
dGVzdHMuZXB1YiIKIyAgICAgICAgICAtICJsZWFybi1nby13aXRoLXRlc3Rz
LnBkZiIKICAgICAgICBza2lwX2NsZWFudXA6IHRydWUKICAgICAgICBvbjoK
ICAgICAgICAgIHRhZ3M6IHRydWUK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'AndroidSlidingUpPanel',10410764,b'This library provides a simple way to add a draggable sliding up panel (popularized by Google Music and Google Maps) to your Android application. Brought to you by Umano.',b'Java',296,8734,,368,False,b'https://api.github.com/repos/umano/AndroidSlidingUpPanel/forks',"WyFbTWF2ZW4gQ2VudHJhbF0oaHR0cHM6Ly9tYXZlbi1iYWRnZXMuaGVyb2t1
YXBwLmNvbS9tYXZlbi1jZW50cmFsL2NvbS5zb3RocmVlLnNsaWRpbmd1cHBh
bmVsL2xpYnJhcnkvYmFkZ2Uuc3ZnKV0oaHR0cHM6Ly9tYXZlbi1iYWRnZXMu
aGVyb2t1YXBwLmNvbS9tYXZlbi1jZW50cmFsL2NvbS5zb3RocmVlLnNsaWRp
bmd1cHBhbmVsL2xpYnJhcnkpClshW0JhZGdlXShodHRwOi8vd3d3LmxpYnRh
c3RpYy5jb20vc3RhdGljL29zYmFkZ2VzLzMwLnBuZyldKGh0dHA6Ly93d3cu
bGlidGFzdGljLmNvbS90ZWNobm9sb2d5LzMwLykKCioqTm90ZToqKiB3ZSBh
cmUgKipub3QqKiBhY3RpdmVseSByZXNwb25kaW5nIHRvIGlzc3VlcyByaWdo
dCBub3cuIElmIHlvdSBmaW5kIGEgYnVnLCBwbGVhc2Ugc3VibWl0IGEgUFIu
IAoKQW5kcm9pZCBTbGlkaW5nIFVwIFBhbmVsCj09PT09PT09PT09PT09PT09
PT09PT09PT0KClRoaXMgbGlicmFyeSBwcm92aWRlcyBhIHNpbXBsZSB3YXkg
dG8gYWRkIGEgZHJhZ2dhYmxlIHNsaWRpbmcgdXAgcGFuZWwgKHBvcHVsYXJp
emVkIGJ5IEdvb2dsZSBNdXNpYyBhbmQgR29vZ2xlIE1hcHMpIHRvIHlvdXIg
QW5kcm9pZCBhcHBsaWNhdGlvbi4KCkFzIHNlZW4gaW4gVW1hbm8gQW5kcm9p
ZCBBcHAgKG5vdyBhY3F1aXJlZCBieSBEcm9wYm94KToKCiFbU2xpZGluZ1Vw
UGFuZWxMYXlvdXRdKGh0dHBzOi8vcmF3LmdpdGh1Yi5jb20vdW1hbm8vQW5k
cm9pZFNsaWRpbmdVcFBhbmVsRGVtby9tYXN0ZXIvc2xpZGluZ3VwcGFuZWwu
cG5nKQoKIyMjIEtub3duIFVzZXMgaW4gUG9wdWxhciBBcHBzCgoqIFtTb3Vu
ZGNsb3VkXSAoaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYXBwcy9k
ZXRhaWxzP2lkPWNvbS5zb3VuZGNsb3VkLmFuZHJvaWQpCiogW0Ryb3Bib3gg
UGFwZXJdIChodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9hcHBzL2Rl
dGFpbHM/aWQ9Y29tLmRyb3Bib3gucGFwZXIpCiogW1NuYXB0ZWVdIChodHRw
czovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9hcHBzL2RldGFpbHM/aWQ9Y28u
c25hcHRlZS5hbmRyb2lkKQoKSWYgeW91IGFyZSB1c2luZyB0aGUgbGlicmFy
eSBhbmQgeW91IHdvdWxkIGxpa2UgdG8gaGF2ZSB5b3VyIGFwcCBsaXN0ZWQs
IHNpbXBseSBsZXQgdXMga25vdy4KCiMjIyBJbXBvcnRpbmcgdGhlIExpYnJh
cnkKClNpbXBseSBhZGQgdGhlIGZvbGxvd2luZyBkZXBlbmRlbmN5IHRvIHlv
dXIgYGJ1aWxkLmdyYWRsZWAgZmlsZSB0byB1c2UgdGhlIGxhdGVzdCB2ZXJz
aW9uOgoKYGBgZ3Jvb3Z5CmRlcGVuZGVuY2llcyB7CiAgICByZXBvc2l0b3Jp
ZXMgewogICAgICAgIG1hdmVuQ2VudHJhbCgpCiAgICB9CiAgICBjb21waWxl
ICdjb20uc290aHJlZS5zbGlkaW5ndXBwYW5lbDpsaWJyYXJ5OjMuNC4wJwp9
CmBgYAoKIyMjIFVzYWdlCgoqIEluY2x1ZGUgYGNvbS5zb3RocmVlLnNsaWRp
bmd1cHBhbmVsLlNsaWRpbmdVcFBhbmVsTGF5b3V0YCBhcyB0aGUgcm9vdCBl
bGVtZW50IGluIHlvdXIgYWN0aXZpdHkgbGF5b3V0LgoqIFRoZSBsYXlvdXQg
bXVzdCBoYXZlIGBncmF2aXR5YCBzZXQgdG8gZWl0aGVyIGB0b3BgIG9yIGBi
b3R0b21gLgoqIE1ha2Ugc3VyZSB0aGF0IGl0IGhhcyB0d28gY2hpbGRyZW4u
IFRoZSBmaXJzdCBjaGlsZCBpcyB5b3VyIG1haW4gbGF5b3V0LiBUaGUgc2Vj
b25kIGNoaWxkIGlzIHlvdXIgbGF5b3V0IGZvciB0aGUgc2xpZGluZyB1cCBw
YW5lbC4KKiBUaGUgbWFpbiBsYXlvdXQgc2hvdWxkIGhhdmUgdGhlIHdpZHRo
IGFuZCB0aGUgaGVpZ2h0IHNldCB0byBgbWF0Y2hfcGFyZW50YC4KKiBUaGUg
c2xpZGluZyBsYXlvdXQgc2hvdWxkIGhhdmUgdGhlIHdpZHRoIHNldCB0byBg
bWF0Y2hfcGFyZW50YCBhbmQgdGhlIGhlaWdodCBzZXQgdG8gZWl0aGVyIGBt
YXRjaF9wYXJlbnRgLCBgd3JhcF9jb250ZW50YCBvciB0aGUgbWF4IGRlc2ly
ZWFibGUgaGVpZ2h0LiBJZiB5b3Ugd291bGQgbGlrZSB0byBkZWZpbmUgdGhl
IGhlaWdodCBhcyB0aGUgcGVyY2V0YW5nZSBvZiB0aGUgc2NyZWVuLCBzZXQg
aXQgdG8gYG1hdGNoX3BhcmVudGAgYW5kIGFsc28gZGVmaW5lIGEgYGxheW91
dF93ZWlnaHRgIGF0dHJpYnV0ZSBmb3IgdGhlIHNsaWRpbmcgdmlldy4KKiBC
eSBkZWZhdWx0LCB0aGUgd2hvbGUgcGFuZWwgd2lsbCBhY3QgYXMgYSBkcmFn
IHJlZ2lvbiBhbmQgd2lsbCBpbnRlcmNlcHQgY2xpY2tzIGFuZCBkcmFnIGV2
ZW50cy4gWW91IGNhbiByZXN0cmljdCB0aGUgZHJhZyBhcmVhIHRvIGEgc3Bl
Y2lmaWMgdmlldyBieSB1c2luZyB0aGUgYHNldERyYWdWaWV3YCBtZXRob2Qg
b3IgYHVtYW5vRHJhZ1ZpZXdgIGF0dHJpYnV0ZS4KCkZvciBtb3JlIGluZm9y
bWF0aW9uLCBwbGVhc2UgcmVmZXIgdG8gdGhlIHNhbXBsZSBjb2RlLgoKYGBg
eG1sCjxjb20uc290aHJlZS5zbGlkaW5ndXBwYW5lbC5TbGlkaW5nVXBQYW5l
bExheW91dAogICAgeG1sbnM6c290aHJlZT0iaHR0cDovL3NjaGVtYXMuYW5k
cm9pZC5jb20vYXBrL3Jlcy1hdXRvIgogICAgYW5kcm9pZDppZD0iQCtpZC9z
bGlkaW5nX2xheW91dCIKICAgIGFuZHJvaWQ6bGF5b3V0X3dpZHRoPSJtYXRj
aF9wYXJlbnQiCiAgICBhbmRyb2lkOmxheW91dF9oZWlnaHQ9Im1hdGNoX3Bh
cmVudCIKICAgIGFuZHJvaWQ6Z3Jhdml0eT0iYm90dG9tIgogICAgc290aHJl
ZTp1bWFub1BhbmVsSGVpZ2h0PSI2OGRwIgogICAgc290aHJlZTp1bWFub1No
YWRvd0hlaWdodD0iNGRwIj4KCiAgICA8VGV4dFZpZXcKICAgICAgICBhbmRy
b2lkOmxheW91dF93aWR0aD0ibWF0Y2hfcGFyZW50IgogICAgICAgIGFuZHJv
aWQ6bGF5b3V0X2hlaWdodD0ibWF0Y2hfcGFyZW50IgogICAgICAgIGFuZHJv
aWQ6Z3Jhdml0eT0iY2VudGVyIgogICAgICAgIGFuZHJvaWQ6dGV4dD0iTWFp
biBDb250ZW50IgogICAgICAgIGFuZHJvaWQ6dGV4dFNpemU9IjE2c3AiIC8+
CgogICAgPFRleHRWaWV3CiAgICAgICAgYW5kcm9pZDpsYXlvdXRfd2lkdGg9
Im1hdGNoX3BhcmVudCIKICAgICAgICBhbmRyb2lkOmxheW91dF9oZWlnaHQ9
Im1hdGNoX3BhcmVudCIKICAgICAgICBhbmRyb2lkOmdyYXZpdHk9ImNlbnRl
cnx0b3AiCiAgICAgICAgYW5kcm9pZDp0ZXh0PSJUaGUgQXdlc29tZSBTbGlk
aW5nIFVwIFBhbmVsIgogICAgICAgIGFuZHJvaWQ6dGV4dFNpemU9IjE2c3Ai
IC8+CjwvY29tLnNvdGhyZWUuc2xpZGluZ3VwcGFuZWwuU2xpZGluZ1VwUGFu
ZWxMYXlvdXQ+CmBgYApGb3Igc21vb3RoIGludGVyYWN0aW9uIHdpdGggdGhl
IEFjdGlvbkJhciwgbWFrZSBzdXJlIHRoYXQgYHdpbmRvd0FjdGlvbkJhck92
ZXJsYXlgIGlzIHNldCB0byBgdHJ1ZWAgaW4geW91ciBzdHlsZXM6CmBgYHht
bAo8c3R5bGUgbmFtZT0iQXBwVGhlbWUiPgogICAgPGl0ZW0gbmFtZT0iYW5k
cm9pZDp3aW5kb3dBY3Rpb25CYXJPdmVybGF5Ij50cnVlPC9pdGVtPgo8L3N0
eWxlPgpgYGAKSG93ZXZlciwgaW4gdGhpcyBjYXNlIHlvdSB3b3VsZCBsaWtl
bHkgd2FudCB0byBhZGQgYSB0b3AgbWFyZ2luIHRvIHlvdXIgbWFpbiBsYXlv
dXQgb2YgYD9hbmRyb2lkOmF0dHIvYWN0aW9uQmFyU2l6ZWAKb3IgYD9hdHRy
L2FjdGlvbkJhclNpemVgIHRvIHN1cHBvcnQgb2xkZXIgQVBJIHZlcnNpb25z
LgoKIyMjIENhdmVhdHMsIEFkZGl0aW9uYWwgRmVhdHVyZXMgYW5kIEN1c3Rv
bWl6YXRpb24KCiogSWYgeW91IGFyZSB1c2luZyBhIGN1c3RvbSBgdW1hbm9E
cmFnVmlld2AsIHRoZSBwYW5lbCB3aWxsIHBhc3MgdGhyb3VnaCB0aGUgY2xp
Y2sgZXZlbnRzIHRvIHRoZSBtYWluIGxheW91dC4gTWFrZSB5b3VyIHNlY29u
ZCBsYXlvdXQgYGNsaWNrYWJsZWAgdG8gcHJldmVudCB0aGlzLgoqIFlvdSBj
YW4gY2hhbmdlIHRoZSBwYW5lbCBoZWlnaHQgYnkgdXNpbmcgdGhlIGBzZXRQ
YW5lbEhlaWdodGAgbWV0aG9kIG9yIGB1bWFub1BhbmVsSGVpZ2h0YCBhdHRy
aWJ1dGUuCiogSWYgeW91IHdvdWxkIGxpa2UgdG8gaGlkZSB0aGUgc2hhZG93
IGFib3ZlIHRoZSBzbGlkaW5nIHBhbmVsLCBzZXQgYHNoYWRvd0hlaWdodGAg
YXR0cmlidXRlIHRvIDAuCiogVXNlIGBzZXRFbmFibGVkKGZhbHNlKWAgdG8g
Y29tcGxldGVseSBkaXNhYmxlIHRoZSBzbGlkaW5nIHBhbmVsIChpbmNsdWRp
bmcgdG91Y2ggYW5kIHByb2dyYW1tYXRpYyBzbGlkaW5nKQoqIFVzZSBgc2V0
VG91Y2hFbmFibGVkKGZhbHNlKWAgdG8gZGlzYWJsZXMgcGFuZWwncyB0b3Vj
aCByZXNwb25zaXZlbmVzcyAoZHJhZyBhbmQgY2xpY2spLCB5b3UgY2FuIHN0
aWxsIGNvbnRyb2wgdGhlIHBhbmVsIHByb2dyYW1hdGljYWxseQoqIFVzZSBg
Z2V0UGFuZWxTdGF0ZWAgdG8gZ2V0IHRoZSBjdXJyZW50IHBhbmVsIHN0YXRl
CiogVXNlIGBzZXRQYW5lbFN0YXRlYCB0byBzZXQgdGhlIGN1cnJlbnQgcGFu
ZWwgc3RhdGUKKiBZb3UgY2FuIGFkZCBwYXJhbGxheCB0byB0aGUgbWFpbiB2
aWV3IGJ5IHNldHRpbmcgYHVtYW5vUGFyYWxsYXhPZmZzZXRgIGF0dHJpYnV0
ZSAoc2VlIGRlbW8gZm9yIHRoZSBleGFtcGxlKS4KKiBZb3UgY2FuIHNldCBh
IGFuY2hvciBwb2ludCBpbiB0aGUgbWlkZGxlIG9mIHRoZSBzY3JlZW4gdXNp
bmcgYHNldEFuY2hvclBvaW50YCB0byBhbGxvdyBhbiBpbnRlcm1lZGlhdGUg
ZXhwYW5kZWQgc3RhdGUgZm9yIHRoZSBwYW5lbCAoc2ltaWxhciB0byBHb29n
bGUgTWFwcykuCiogWW91IGNhbiBzZXQgYSBgUGFuZWxTbGlkZUxpc3RlbmVy
YCB0byBtb25pdG9yIGV2ZW50cyBhYm91dCBzbGlkaW5nIHBhbmVzLgoqIFlv
dSBjYW4gYWxzbyBtYWtlIHRoZSBwYW5lbCBzbGlkZSBmcm9tIHRoZSB0b3Ag
YnkgY2hhbmdpbmcgdGhlIGBsYXlvdXRfZ3Jhdml0eWAgYXR0cmlidXRlIG9m
IHRoZSBsYXlvdXQgdG8gYHRvcGAuCiogWW91IGNhbiBwcm92aWRlIGEgc2Ny
b2xsIGludGVycG9sYXRvciBmb3IgdGhlIHBhbmVsIG1vdmVtZW50IGJ5IHNl
dHRpbmcgYHVtYW5vU2Nyb2xsSW50ZXJwb2xhdG9yYCBhdHRyaWJ1dGUuIEZv
ciBpbnN0YW5jZSwgaWYgeW91IHdhbnQgYSBib3VuY2Ugb3Igb3ZlcnNob290
IGVmZmVjdCBmb3IgdGhlIHBhbmVsLgoqIEJ5IGRlZmF1bHQsIHRoZSBwYW5l
bCBwdXNoZXMgdXAgdGhlIG1haW4gY29udGVudC4gWW91IGNhbiBtYWtlIGl0
IG92ZXJsYXkgdGhlIG1haW4gY29udGVudCBieSB1c2luZyBgc2V0T3Zlcmxh
eWVkYCBtZXRob2Qgb3IgYHVtYW5vT3ZlcmxheWAgYXR0cmlidXRlLiBUaGlz
IGlzIHVzZWZ1bCBpZiB5b3Ugd291bGQgbGlrZSB0byBtYWtlIHRoZSBzbGlk
aW5nIGxheW91dCBzZW1pLXRyYW5zcGFyZW50LiBZb3UgY2FuIGFsc28gc2V0
IGB1bWFub0NsaXBQYW5lbGAgdG8gZmFsc2UgdG8gbWFrZSB0aGUgcGFuZWwg
dHJhbnNwYXJlbnQgaW4gbm9uLW92ZXJsYXkgbW9kZS4KKiBCeSBkZWZhdWx0
LCB0aGUgbWFpbiBjb250ZW50IGlzIGRpbW1lZCBhcyB0aGUgcGFuZWwgc2xp
ZGVzIHVwLiBZb3UgY2FuIGNoYW5nZSB0aGUgZGltIGNvbG9yIGJ5IGNoYW5n
aW5nIGB1bWFub0ZhZGVDb2xvcmAuIFNldCBpdCB0byBgIkBhbmRyb2lkOmNv
bG9yL3RyYW5zcGFyZW50ImAgdG8gcmVtb3ZlIGRpbW1pbmcgY29tcGxldGVs
eS4KCiMjIyBTY3JvbGxhYmxlIFNsaWRpbmcgVmlld3MKCklmIHlvdSBoYXZl
IGEgc2Nyb2xsYWJsZSB2aWV3IGluc2lkZSBvZiB0aGUgc2xpZGluZyBwYW5l
bCwgbWFrZSBzdXJlIHRvIHNldCBgdW1hbm9TY3JvbGxhYmxlVmlld2AgYXR0
cmlidXRlIG9uIHRoZSBwYW5lbCB0byBzdXBwb3J0ZWQgbmVzdGVkIHNjcm9s
bGluZy4gVGhlIHBhbmVsIHN1cHBvcnRzIGBMaXN0Vmlld2AsIGBTY3JvbGxW
aWV3YCBhbmQgYFJlY3ljbGVyVmlld2Agb3V0IG9mIHRoZSBib3gsIGJ1dCB5
b3UgY2FuIGFkZCBzdXBwb3J0IGZvciBhbnkgdHlwZSBvZiBhIHNjcm9sbGFi
bGUgdmlldyBieSBzZXR0aW5nIGEgY3VzdG9tIGBTY3JvbGxhYmxlVmlld0hl
bHBlcmAuIEhlcmUgaXMgYW4gZXhhbXBsZSBmb3IgYE5lc3RlZFNjcm9sbFZp
ZXdgCgpgYGAKcHVibGljIGNsYXNzIE5lc3RlZFNjcm9sbGFibGVWaWV3SGVs
cGVyIGV4dGVuZHMgU2Nyb2xsYWJsZVZpZXdIZWxwZXIgewogIHB1YmxpYyBp
bnQgZ2V0U2Nyb2xsYWJsZVZpZXdTY3JvbGxQb3NpdGlvbihWaWV3IHNjcm9s
bGFibGVWaWV3LCBib29sZWFuIGlzU2xpZGluZ1VwKSB7CiAgICBpZiAobVNj
cm9sbGFibGVWaWV3IGluc3RhbmNlb2YgTmVzdGVkU2Nyb2xsVmlldykgewog
ICAgICBpZihpc1NsaWRpbmdVcCl7CiAgICAgICAgcmV0dXJuIG1TY3JvbGxh
YmxlVmlldy5nZXRTY3JvbGxZKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAg
TmVzdGVkU2Nyb2xsVmlldyBuc3YgPSAoKE5lc3RlZFNjcm9sbFZpZXcpIG1T
Y3JvbGxhYmxlVmlldyk7CiAgICAgICAgVmlldyBjaGlsZCA9IG5zdi5nZXRD
aGlsZEF0KDApOwogICAgICAgIHJldHVybiAoY2hpbGQuZ2V0Qm90dG9tKCkg
LSAobnN2LmdldEhlaWdodCgpICsgbnN2LmdldFNjcm9sbFkoKSkpOwogICAg
ICB9CiAgICB9IGVsc2UgewogICAgICByZXR1cm4gMDsKICAgIH0KICB9Cn0K
YGBgCgpPbmNlIHlvdSBkZWZpbmUgeW91ciBoZWxwZXIsIHlvdSBjYW4gc2V0
IGl0IHVzaW5nIGBzZXRTY3JvbGxhYmxlVmlld0hlbHBlcmAgb24gdGhlIHNs
aWRpbmcgcGFuZWwuCgojIyMgSW1wbGVtZW50YXRpb24KClRoaXMgbGlicmFy
eSB3YXMgaW5pdGlhbGx5IGJhc2VkIG9uIHRoZSBvcGVuZWQtc291cmNlZCBb
U2xpZGluZ1BhbmVMYXlvdXRdKGh0dHA6Ly9kZXZlbG9wZXIuYW5kcm9pZC5j
b20vcmVmZXJlbmNlL2FuZHJvaWQvc3VwcG9ydC92NC93aWRnZXQvU2xpZGlu
Z1BhbmVMYXlvdXQuaHRtbCkgY29tcG9uZW50IGZyb20gdGhlIHIxMyBvZiB0
aGUgQW5kcm9pZCBTdXBwb3J0IExpYnJhcnkuIFRoYW5rcyBBbmRyb2lkIHRl
YW0hCgojIyMgUmVxdWlyZW1lbnRzCgpUZXN0ZWQgb24gQW5kcm9pZCAyLjIr
CgojIyMgT3RoZXIgQ29udHJpYnV0b3JzCgoqIE5vdiAyMywgMTUgLSBbQGtp
eWVvbmtdKGh0dHBzOi8vZ2l0aHViLmNvbS9raXllb25rKSAtIHVtYW5vU2Ny
b2xsSW50ZXJwb2xhdG9yIHN1cHBvcnQKKiBKYW4gMjEsIDE0IC0gQ2hhWW91
bmcgWW91IChbQHlvdXNdKGh0dHBzOi8vZ2l0aHViLmNvbS95b3VzKSkgLSBT
bGlkZSBmcm9tIHRoZSB0b3Agc3VwcG9ydAoqIEF1ZyAyMCwgMTMgLSBbQGdp
cGldKGh0dHBzOi8vZ2l0aHViLmNvbS9naXBpKSAtIEFuZHJvaWQgU3R1ZGlv
IFN1cHBvcnQKKiBKdWwgMjQsIDEzIC0gUGhpbGlwIFNjaGlmZmVyIChbQGhh
bWVub10oaHR0cHM6Ly9naXRodWIuY29tL2hhbWVubykpIC0gTWF2ZW4gU3Vw
cG9ydAoqIE9jdCAyMCwgMTMgLSBJcmluYSBQcmXImWEgKFtAaXJpaW5hXSho
dHRwczovL2dpdGh1Yi5jb20vaXJpaW5hKSkgLSBBbmNob3IgU3VwcG9ydAoq
IERlYyAxLCAxMyAtIChbQHlvdWNoeV0oaHR0cHM6Ly9naXRodWIuY29tL3lv
dWNoeSkpIC0gWE1MIEF0dHJpYnV0ZXMgU3VwcG9ydAoqIERlYyAyMiwgMTMg
LSBWbGFkaW1pciBNaXJvbm92IChbQE1pcm9ub3ZOc2tdKGh0dHBzOi8vZ2l0
aHViLmNvbS9uc2stbWlyb25vdikpIC0gQ3VzdG9tIEV4cGFuZGVkIFBhbmVs
IEhlaWdodAoKSWYgeW91IGhhdmUgYW4gYXdlc29tZSBwdWxsIHJlcXVlc3Qs
IHNlbmQgaXQgb3ZlciEKCiMjIyBDaGFuZ2Vsb2cKCiogMy40LjAKICAqIFVz
ZSB0aGUgbGF0ZXN0IHN1cHBvcnQgbGlicmFyeSAyNiBhbmQgdXBkYXRlIHRo
ZSBtaW4gdmVyc2lvbiB0byAxNC4KICAqIEJ1ZyBmaXhlcwoqIDMuMy4xCiAg
KiBMb3RzIG9mIGJ1ZyBmaXhlcyBmcm9tIHZhcmlvdXMgcHVsbCByZXF1ZXN0
cy4KICAqIFJlbW92ZWQgdGhlIG5pbmVvbGRhbmRyb2lkcyBkZXBlbmRlbmN5
LiBVc2UgVmlld0NvbXBhdCBpbnN0ZWFkLgoqIDMuMy4wCiAgKiBZb3UgY2Fu
IG5vdyBzZXQgYSBgRmFkZU9uQ2xpY2tMaXN0ZW5lcmAsIGZvciB3aGVuIHRo
ZSBmYWRlZCBhcmVhIG9mIHRoZSBtYWluIGNvbnRlbnQgaXMgY2xpY2tlZC4K
ICAqIGBQYW5lbFNsaWRlTGlzdGVuZXJgIGhhcyBhIG5ldyBmb3JtYXQgKG11
bHRpcGxlIG9mIHRoZW0gY2FuIGJlIHNldCBub3cKICAqIEZpeGVkIHRoZSBz
ZXRUb3VjaEVuYWJsZWQgYnVnCiogMy4yLjEKICAqIEFkZCBzdXBwb3J0IGZv
ciBgdW1hbm9TY3JvbGxJbnRlcnBvbGF0b3JgCiAgKiBBZGQgc3VwcG9ydCBm
b3IgcGVyY2VudGFnZS1iYXNlZCBzbGlkaW5nIHBhbmVsIGhlaWdodCB1c2lu
ZyBgbGF5b3V0X3dlaWdodGAgYXR0cmlidXRlCiAgKiBBZGQgYFNjcm9sbGFi
bGVWaWV3SGVscGVyYCB0byBhbGxvdyB1c2VycyBleHRlbmQgc3VwcG9ydCBm
b3IgbmV3IHR5cGVzIG9mIHNjcm9sbGFibGUgdmlld3MuCiogMy4yLjAKICAq
IFJlbmFtZSBgdW1hbm9QYXJhbGF4T2Zmc2V0YCB0byBgdW1hbm9QYXJhbGxh
eE9mZnNldGAKICAqIFJlY3ljbGVyVmlldyBzdXBwb3J0LgoqIDMuMS4wCiAg
KiBBZGRlZCBgdW1hbm9TY3JvbGxhYmxlVmlld2AgdG8gc3VwcG9ydGVkIG5l
c3RlZCBzY3JvbGxpbmcgaW4gY2hpbGRyZW4gKG9ubHkgU2Nyb2xsVmlldyBh
bmQgTGlzdFZpZXcgYXJlIHN1cHBvcnRlZCBmb3Igbm93KQoqIDMuMC4wCiAg
KiBBZGRlZCBgdW1hbm9gIHByZWZpeCBmb3IgYWxsIGF0dHJpYnV0ZXMKICAq
IEFkZGVkIGBjbGlwUGFuZWxgIGF0dHJpYnV0ZSBmb3Igc3VwcG9ydGluZyB0
cmFuc3BhcmVudCBwYW5lbHMgaW4gbm9uLW92ZXJsYXkgbW9kZS4KICAqIGBz
ZXRFbmFibGVkKGZhbHNlKWAgLSBub3cgY29tcGxldGVseSBkaXNhYmxlcyB0
aGUgc2xpZGluZyBwYW5lbCAodG91Y2ggYW5kIHByb2dyYW1tYXRpYyBzbGlk
aW5nKQogICogYHNldFRvdWNoRW5hYmxlZChmYWxzZSlgIC0gZGlzYWJsZXMg
cGFuZWwncyB0b3VjaCByZXNwb25zaXZlbmVzcyAoZHJhZyBhbmQgY2xpY2sp
LCB5b3UgY2FuIHN0aWxsIGNvbnRyb2wgdGhlIHBhbmVsIHByb2dyYW1hdGlj
YWxseQogICogYGdldFBhbmVsU3RhdGVgIC0gaXMgbm93IHRoZSBvbmx5IG1l
dGhvZCB0byBnZXQgdGhlIGN1cnJlbnQgcGFuZWwgc3RhdGUKICAqIGBzZXRQ
YW5lbFN0YXRlYCAtIGlzIG5vdyB0aGUgb25seSBtZXRob2QgdG8gbW9kaWZ5
IHRoZSBwYW5lbCBzdGF0ZSBmcm9tIGNvZGUKKiAyLjAuMiAtIEFsbG93IGB3
cmFwX2NvbnRlbnRgIGZvciBzbGlkaW5nIHZpZXcgaGVpZ2h0IGF0dHJpYnV0
ZS4gQnVnIGZpeGVzLiAKKiAyLjAuMSAtIEJ1ZyBmaXhlcy4gCiogMi4wLjAg
LSBDbGVhbmVkIHVwIHZhcmlvdXMgcHVibGljIG1ldGhvZCBjYWxscy4gQWRk
ZWQgYW5pbWF0ZWQgYHNob3dQYW5lbGAvYGhpZGVQYW5lbGAgbWV0aG9kcy4g
CiogMS4wLjEgLSBJbml0aWFsIFJlbGVhc2UgCgojIyMgTGljZW5jZQoKPiBM
aWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4w
ICh0aGUgIkxpY2Vuc2UiKTsKPiB5b3UgbWF5IG5vdCB1c2UgdGhpcyB3b3Jr
IGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCj4gWW91
IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGluIHRoZSBMSUNF
TlNFIGZpbGUsIG9yIGF0Ogo+Cj4gIFtodHRwOi8vd3d3LmFwYWNoZS5vcmcv
bGljZW5zZXMvTElDRU5TRS0yLjBdKGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9s
aWNlbnNlcy9MSUNFTlNFLTIuMCkKPgo+IFVubGVzcyByZXF1aXJlZCBieSBh
cHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdh
cmUKPiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmli
dXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAo+IFdJVEhPVVQgV0FSUkFOVElF
UyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBv
ciBpbXBsaWVkLgo+IFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmlj
IGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQKPiBsaW1pdGF0
aW9ucyB1bmRlciB0aGUgTGljZW5zZS4K
",,8734,"bGFuZ3VhZ2U6IGFuZHJvaWQKamRrOiBvcmFjbGVqZGs3CgphbmRyb2lkOgog
IGNvbXBvbmVudHM6CiAgICAtIHRvb2xzCiAgICAtIHBsYXRmb3JtLXRvb2xz
CiAgICAtIGV4dHJhLWFuZHJvaWQtbTJyZXBvc2l0b3J5CiAgICAtIGV4dHJh
LWdvb2dsZS1tMnJlcG9zaXRvcnkKICAgIC0gYnVpbGQtdG9vbHMtMjYuMC4w
CiAgICAtIGFuZHJvaWQtMjYKCiMgRW5hYmxlIHRyYXZpcyBjb250YWluZXIg
YmFzZWQgaW5mcmFzdHJ1Y3R1cmUKc3VkbzogZmFsc2UKCmJlZm9yZV9zY3Jp
cHQ6CiAgICAtIGNobW9kICt4IGdyYWRsZXcKCnNjcmlwdDoKICAgIC0gLi9n
cmFkbGV3IGNsZWFuIGFzc2VtYmxlCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'napajs',97646385,b'Napa.js: a multi-threaded JavaScript runtime',b'C++',64,8733,,217,False,b'https://api.github.com/repos/microsoft/napajs/forks',"WyFbQnVpbGQgU3RhdHVzIGZvciBMaW51eC9NYWNPU10oaHR0cHM6Ly90cmF2
aXMtY2kub3JnL01pY3Jvc29mdC9uYXBhanMuc3ZnP2JyYW5jaD1tYXN0ZXIp
XShodHRwczovL3RyYXZpcy1jaS5vcmcvTWljcm9zb2Z0L25hcGFqcykKWyFb
QnVpbGQgU3RhdHVzIGZvciBXaW5kb3dzXShodHRwczovL2NpLmFwcHZleW9y
LmNvbS9hcGkvcHJvamVjdHMvc3RhdHVzL2dpdGh1Yi9NaWNyb3NvZnQvbmFw
YWpzP2JyYW5jaD1tYXN0ZXImc3ZnPXRydWUpXShodHRwczovL2NpLmFwcHZl
eW9yLmNvbS9wcm9qZWN0L25hcGFqcy9uYXBhanMpClshW25wbSB2ZXJzaW9u
XShodHRwczovL2JhZGdlLmZ1cnkuaW8vanMvbmFwYWpzLnN2ZyldKGh0dHBz
Oi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL25hcGFqcykKWyFbRG93bmxvYWRz
XShodHRwczovL2ltZy5zaGllbGRzLmlvL25wbS9kbS9uYXBhanMuc3ZnKV0o
aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvbmFwYWpzKQoKIyBOYXBh
LmpzCk5hcGEuanMgaXMgYSBtdWx0aS10aHJlYWRlZCBKYXZhU2NyaXB0IHJ1
bnRpbWUgYnVpbHQgb24gW1Y4XShodHRwczovL2dpdGh1Yi5jb20vdjgvdjgp
LCB3aGljaCB3YXMgb3JpZ2luYWxseSBkZXNpZ25lZCB0byBkZXZlbG9wIGhp
Z2hseSBpdGVyYXRpdmUgc2VydmljZXMgd2l0aCBub24tY29tcHJvbWlzZWQg
cGVyZm9ybWFuY2UgaW4gQmluZy4gQXMgaXQgZXZvbHZlcywgd2UgZmluZCBp
dCB1c2VmdWwgdG8gY29tcGxlbWVudCBbTm9kZS5qc10oaHR0cHM6Ly9ub2Rl
anMub3JnKSBpbiBDUFUtYm91bmQgdGFza3MsIHdpdGggdGhlIGNhcGFiaWxp
dHkgb2YgZXhlY3V0aW5nIEphdmFTY3JpcHQgaW4gbXVsdGlwbGUgVjggaXNv
bGF0ZXMgYW5kIGNvbW11bmljYXRpbmcgYmV0d2VlbiB0aGVtLiBOYXBhLmpz
IGlzIGV4cG9zZWQgYXMgYSBOb2RlLmpzIG1vZHVsZSwgd2hpbGUgaXQgY2Fu
IGFsc28gYmUgZW1iZWRkZWQgaW4gYSBob3N0IHByb2Nlc3Mgd2l0aG91dCBO
b2RlLmpzIGRlcGVuZGVuY3kuCgojIyBJbnN0YWxsYXRpb24KSW5zdGFsbCB0
aGUgbGF0ZXN0IHN0YWJsZSB2ZXJzaW9uOgpgYGAKbnBtIGluc3RhbGwgbmFw
YWpzCmBgYApPdGhlciBvcHRpb25zIGNhbiBiZSBmb3VuZCBpbiBbQnVpbGQg
TmFwYS5qc10oaHR0cHM6Ly9naXRodWIuY29tL01pY3Jvc29mdC9uYXBhanMv
d2lraS9idWlsZC1uYXBhLmpzKS4KCiMjIFF1aWNrIFN0YXJ0CmBgYGpzCmNv
bnN0IG5hcGEgPSByZXF1aXJlKCduYXBhanMnKTsKY29uc3Qgem9uZTEgPSBu
YXBhLnpvbmUuY3JlYXRlKCd6b25lMScsIHsgd29ya2VyczogNCB9KTsKCi8v
IEJyb2FkY2FzdCBjb2RlIHRvIGFsbCA0IHdvcmtlcnMgaW4gJ3pvbmUxJy4K
em9uZTEuYnJvYWRjYXN0KCdjb25zb2xlLmxvZygiaGVsbG8gd29ybGQiKTsn
KTsKCi8vIEV4ZWN1dGUgYW4gYW5vbnltb3VzIGZ1bmN0aW9uIGluIGFueSB3
b3JrZXIgdGhyZWFkIGluICd6b25lMScuCnpvbmUxLmV4ZWN1dGUoCiAgICAo
dGV4dCkgPT4gdGV4dCwgCiAgICBbJ2hlbGxvIG5hcGEnXSkKICAgIC50aGVu
KChyZXN1bHQpID0+IHsKICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQudmFs
dWUpOwogICAgfSk7CmBgYApNb3JlIGV4YW1wbGVzOgoqIFtFc3RpbWF0ZSBQ
SSBpbiBwYXJhbGxlbF0oLi9leGFtcGxlcy90dXRvcmlhbC9lc3RpbWF0ZS1w
aS1pbi1wYXJhbGxlbCkKKiBbTWF4IHN1Yi1tYXRyaXggb2YgMXMgd2l0aCBs
YXllcmVkIHBhcmFsbGVsaXNtXSguL2V4YW1wbGVzL3R1dG9yaWFsL21heC1z
cXVhcmUtc3ViLW1hdHJpeCkKKiBbUGFyYWxsZWwgUXVpY2sgU29ydF0oLi9l
eGFtcGxlcy90dXRvcmlhbC9wYXJhbGxlbC1xdWljay1zb3J0KQoqIFtSZWN1
cnNpdmUgRmlib25hY2NpIHdpdGggbXVsdGlwbGUgSmF2YVNjcmlwdCB0aHJl
YWRzXSguL2V4YW1wbGVzL3R1dG9yaWFsL3JlY3Vyc2l2ZS1maWJvbmFjY2kp
CiogW1N5bmNocm9uaXplZCBsb2FkaW5nXSguL2V4YW1wbGVzL3R1dG9yaWFs
L3N5bmNocm9uaXplZC1sb2FkaW5nKQoKIyMgRmVhdHVyZXMKLSBNdWx0aS10
aHJlYWRlZCBKYXZhU2NyaXB0IHJ1bnRpbWUuCi0gTm9kZS5qcyBjb21wYXRp
YmxlIG1vZHVsZSBhcmNoaXRlY3R1cmUgd2l0aCBOUE0gc3VwcG9ydC4KLSBB
UEkgZm9yIG9iamVjdCB0cmFuc3BvcnRhdGlvbiwgb2JqZWN0IHNoYXJpbmcg
YW5kIHN5bmNocm9uaXphdGlvbiBhY3Jvc3MgSmF2YVNjcmlwdCB0aHJlYWRz
LgotIEFQSSBmb3IgcGx1Z2dhYmxlIGxvZ2dpbmcsIG1ldHJpYyBhbmQgbWVt
b3J5IGFsbG9jYXRvci4KLSBEaXN0cmlidXRlZCBhcyBhIE5vZGUuanMgbW9k
dWxlLCBhcyB3ZWxsIGFzIHN1cHBvcnRpbmcgZW1iZWQgc2NlbmFyaW9zLgoK
IyMgRG9jdW1lbnRhdGlvbgotIFtOYXBhLmpzIEhvbWVdKGh0dHBzOi8vZ2l0
aHViLmNvbS9NaWNyb3NvZnQvbmFwYWpzL3dpa2kpCi0gW0FQSSBSZWZlcmVu
Y2VdKC4vZG9jcy9hcGkvaW5kZXgubWQpCi0gW0ZBUV0oaHR0cHM6Ly9naXRo
dWIuY29tL01pY3Jvc29mdC9uYXBhanMvd2lraS9GQVEpCgojIENvbnRyaWJ1
dGUKWW91IGNhbiBjb250cmlidXRlIHRvIE5hcGEuanMgaW4gZm9sbG93aW5n
IHdheXM6CgoqIFtSZXBvcnQgaXNzdWVzXShodHRwczovL2dpdGh1Yi5jb20v
TWljcm9zb2Z0L25hcGFqcy9pc3N1ZXMpIGFuZCBoZWxwIHVzIHZlcmlmeSBm
aXhlcyBhcyB0aGV5IGFyZSBjaGVja2VkIGluLgoqIFJldmlldyB0aGUgW3Nv
dXJjZSBjb2RlIGNoYW5nZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9NaWNyb3Nv
ZnQvbmFwYWpzL3B1bGxzKS4KKiBDb250cmlidXRlIHRvIGNvcmUgbW9kdWxl
IGNvbXBhdGliaWxpdHkgd2l0aCBOb2RlLgoqIENvbnRyaWJ1dGUgYnVnIGZp
eGVzLgoKVGhpcyBwcm9qZWN0IGhhcyBhZG9wdGVkIHRoZSBbTWljcm9zb2Z0
IE9wZW4gU291cmNlIENvZGUgb2YgQ29uZHVjdF0oaHR0cHM6Ly9vcGVuc291
cmNlLm1pY3Jvc29mdC5jb20vY29kZW9mY29uZHVjdC8pLjxicj4gRm9yIG1v
cmUgaW5mb3JtYXRpb24gc2VlIHRoZSBbQ29kZSBvZiBDb25kdWN0IEZBUV0o
aHR0cHM6Ly9vcGVuc291cmNlLm1pY3Jvc29mdC5jb20vY29kZW9mY29uZHVj
dC9mYXEvKSBvciBjb250YWN0IG9wZW5jb2RlQG1pY3Jvc29mdC5jb20gd2l0
aCBhbnkgYWRkaXRpb25hbCBxdWVzdGlvbnMgb3IgY29tbWVudHMuCgojIExp
Y2Vuc2UKQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFs
bCByaWdodHMgcmVzZXJ2ZWQuCgpMaWNlbnNlZCB1bmRlciB0aGUgW01JVF0o
aHR0cHM6Ly9naXRodWIuY29tL01pY3Jvc29mdC9uYXBhanMvYmxvYi9tYXN0
ZXIvTElDRU5TRS50eHQpIExpY2Vuc2UuCg==
",,8733,"bGFuZ3VhZ2U6IG5vZGVfanMKY29tcGlsZXI6IGRlZmF1bHQKbWF0cml4Ogog
IGV4Y2x1ZGU6CiAgIyBEaXNhYmxlIHRoZSBkZWZhdWx0IGJ1aWxkIGFuZCB1
c2UgY3VzdG9taXplZCBtYXRyaXggb25seS4KICAtIGNvbXBpbGVyOiBkZWZh
dWx0CiAgaW5jbHVkZToKICAjIE5vZGUgNi54ICAgICAgICAgICAgICAgICBM
aW51eCAoUHJlY2lzZSkgICAgICAgICAgRysrNS40LjEKICAtIG9zOiBsaW51
eAogICAgZGlzdDogcHJlY2lzZQogICAgbm9kZV9qczogJzYnCiAgICBjb21w
aWxlcjogZysrLTUKICAgIGFkZG9uczoKICAgICAgYXB0OgogICAgICAgICMg
VGhlIGFwdCBzb3VyY2UgJ3VidW50dS10b29sY2hhaW4tci10ZXN0JyBpcyBm
b3IgR0NDIDUrCiAgICAgICAgIyBUaGUgYXB0IHNvdXJjZSAnZ2VvcmdlLWVk
aXNvbjU1LXByZWNpc2UtYmFja3BvcnRzJyBpcyBmb3IgQ01ha2UgMy4yKwog
ICAgICAgIHNvdXJjZXM6CiAgICAgICAgLSB1YnVudHUtdG9vbGNoYWluLXIt
dGVzdAogICAgICAgIC0gZ2VvcmdlLWVkaXNvbjU1LXByZWNpc2UtYmFja3Bv
cnRzCiAgICAgICAgcGFja2FnZXM6CiAgICAgICAgLSBnKystNQogICAgICAg
IC0gY21ha2UtZGF0YQogICAgICAgIC0gY21ha2UKICAgIGVudjoKICAgIC0g
Q09NUElMRVJfT1ZFUlJJREU9IkNYWD1nKystNSBDQz1nY2MtNSIKICAjIE5v
ZGUgNi54ICAgICAgICAgICAgICAgICBPUyBYIChZb3NlbWl0ZSkgICAgICAg
ICAgQXBwbGVDbGFuZyA2LjEKICAtIG9zOiBvc3gKICAgIG5vZGVfanM6ICc2
JwogICAgb3N4X2ltYWdlOiB4Y29kZTYuNAogICMgTm9kZSBMVFMgKDgueCkg
ICAgICAgICAgIExpbnV4IChUcnVzdHkpICAgICAgICAgICBHKys2LjQuMAog
IC0gb3M6IGxpbnV4CiAgICBkaXN0OiB0cnVzdHkKICAgIG5vZGVfanM6ICc4
JwogICAgY29tcGlsZXI6IGcrKy02CiAgICBhZGRvbnM6CiAgICAgIGFwdDoK
ICAgICAgICBzb3VyY2VzOgogICAgICAgIC0gdWJ1bnR1LXRvb2xjaGFpbi1y
LXRlc3QKICAgICAgICBwYWNrYWdlczoKICAgICAgICAtIGcrKy02CiAgICBl
bnY6CiAgICAtIENPTVBJTEVSX09WRVJSSURFPSJDWFg9ZysrLTYgQ0M9Z2Nj
LTYiCiAgIyBOb2RlIExUUyAoOC54KSAgICAgICAgICAgT1MgWCAoRWwgQ2Fw
aXRhbikgICAgICAgIEFwcGxlQ2xhbmcgNy4zCiAgLSBvczogb3N4CiAgICBu
b2RlX2pzOiAnOCcKICAgIG9zeF9pbWFnZTogeGNvZGU3LjMKICAjIE5vZGUg
KDkueCkgICAgICAgICAgICAgICBMaW51eCAoVHJ1c3R5KSAgICAgICAgICAg
RysrNi40LjAKICAtIG9zOiBsaW51eAogICAgZGlzdDogdHJ1c3R5CiAgICBu
b2RlX2pzOiAnOScKICAgIGNvbXBpbGVyOiBnKystNgogICAgYWRkb25zOgog
ICAgICBhcHQ6CiAgICAgICAgc291cmNlczoKICAgICAgICAtIHVidW50dS10
b29sY2hhaW4tci10ZXN0CiAgICAgICAgcGFja2FnZXM6CiAgICAgICAgLSBn
KystNgogICAgZW52OgogICAgLSBDT01QSUxFUl9PVkVSUklERT0iQ1hYPWcr
Ky02IENDPWdjYy02IgogICMgTm9kZSAoOS54KSAgICAgICAgICAgICAgIG1h
Y09TIChTaWVycmEpICAgICAgICAgICBBcHBsZUNsYW5nIDguMQogIC0gb3M6
IG9zeAogICAgbm9kZV9qczogJzknCiAgICBvc3hfaW1hZ2U6IHhjb2RlOC4z
CiAgIyBOb2RlIEN1cnJlbnQgKDEwLngpICAgICAgIExpbnV4IChUcnVzdHkp
ICAgICAgICAgIEcrKzcuMy4wCiAgLSBvczogbGludXgKICAgIGRpc3Q6IHRy
dXN0eQogICAgbm9kZV9qczogJzEwJwogICAgY29tcGlsZXI6IGcrKy03CiAg
ICBhZGRvbnM6CiAgICAgIGFwdDoKICAgICAgICBzb3VyY2VzOgogICAgICAg
IC0gdWJ1bnR1LXRvb2xjaGFpbi1yLXRlc3QKICAgICAgICBwYWNrYWdlczoK
ICAgICAgICAtIGcrKy03CiAgICBlbnY6CiAgICAtIENPTVBJTEVSX09WRVJS
SURFPSJDWFg9ZysrLTcgQ0M9Z2NjLTciCiAgIyBOb2RlIEN1cnJlbnQgKDEw
LngpICAgICAgIG1hY09TIChIaWdoIFNpZXJyYSkgICAgIEFwcGxlQ2xhbmcg
OS4xCiAgLSBvczogb3N4CiAgICBub2RlX2pzOiAnMTAnCiAgICBvc3hfaW1h
Z2U6IHhjb2RlOS4zCgpiZWZvcmVfaW5zdGFsbDoKLSB8CiAgaWYgWyAkVFJB
VklTX09TX05BTUUgPT0gbGludXggXTsgdGhlbgogICAgZXhwb3J0ICR7Q09N
UElMRVJfT1ZFUlJJREV9CiAgZmkKaW5zdGFsbDoKLSBucG0gaW5zdGFsbCBj
bWFrZS1qcyAtZwotIG5wbSBpbnN0YWxsIC0tbm8tZmV0Y2gKc2NyaXB0Ogot
IG5wbSB0ZXN0Ci0gbnBtIHJ1biB1bml0dGVzdAo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
