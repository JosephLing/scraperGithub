name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'react-demos',32726377,b'a collection of simple demos of React.js',b'JavaScript',0,14764,,1118,False,b'https://api.github.com/repos/ruanyf/react-demos/forks',"VGhpcyBpcyBhIGNvbGxlY3Rpb24gb2Ygc2ltcGxlIGRlbW9zIG9mIFJlYWN0
LmpzLgoKVGhlc2UgZGVtb3MgYXJlIHB1cnBvc2VseSB3cml0dGVuIGluIGEg
c2ltcGxlIGFuZCBjbGVhciBzdHlsZS4gWW91IHdpbGwgZmluZCBubyBkaWZm
aWN1bHR5IGluIGZvbGxvd2luZyB0aGVtIHRvIGxlYXJuIHRoZSBwb3dlcmZ1
bCBsaWJyYXJ5LgoKIyMgUmVsYXRlZCBQcm9qZWN0cwoKLSBbRmx1eCBEZW1v
XShodHRwczovL2dpdGh1Yi5jb20vcnVhbnlmL2V4dHJlbWVseS1zaW1wbGUt
Zmx1eC1kZW1vKQotIFtXZWJwYWNrIERlbW9zXShodHRwczovL2dpdGh1Yi5j
b20vcnVhbnlmL3dlYnBhY2stZGVtb3MpCi0gW1JlYWN0IFJvdXRlciBUdXRv
cmlhbF0oaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0anMvcmVhY3Qtcm91dGVy
LXR1dG9yaWFsKQotIFtDU1MgTW9kdWxlcyBEZW1vc10oaHR0cHM6Ly9naXRo
dWIuY29tL3J1YW55Zi9jc3MtbW9kdWxlcy1kZW1vcykKLSBbUmVhY3QgVGVz
dGluZyBEZW1vXShodHRwczovL2dpdGh1Yi5jb20vcnVhbnlmL3JlYWN0LXRl
c3RpbmctZGVtbykKLSBbQSBib2lsZXJwbGF0ZSBmb3IgUmVhY3QtQmFiZWwt
V2VicGFjayBwcm9qZWN0XShodHRwczovL2dpdGh1Yi5jb20vcnVhbnlmL3Jl
YWN0LWJhYmVsLXdlYnBhY2stYm9pbGVycGxhdGUpCgojIyBIb3cgdG8gdXNl
CgpGaXJzdCBjb3B5IHRoZSByZXBvIGludG8geW91ciBkaXNrLgoKYGBgYmFz
aAokIGdpdCBjbG9uZSBnaXRAZ2l0aHViLmNvbTpydWFueWYvcmVhY3QtZGVt
b3MuZ2l0CmBgYAoKVGhlbiBwbGF5IHdpdGggdGhlIHNvdXJjZSBmaWxlcyB1
bmRlciB0aGUgcmVwbydzIGRlbW8qIGRpcmVjdG9yaWVzLgoKIyMgSFRNTCBU
ZW1wbGF0ZQoKYGBgaHRtbAo8IURPQ1RZUEUgaHRtbD4KPGh0bWw+CiAgPGhl
YWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCIgLz4KICAgIDxzY3JpcHQg
c3JjPSIuLi9idWlsZC9yZWFjdC5kZXZlbG9wbWVudC5qcyI+PC9zY3JpcHQ+
CiAgICA8c2NyaXB0IHNyYz0iLi4vYnVpbGQvcmVhY3QtZG9tLmRldmVsb3Bt
ZW50LmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSIuLi9idWlsZC9i
YWJlbC5taW4uanMiPjwvc2NyaXB0PgogIDwvaGVhZD4KICA8Ym9keT4KICAg
IDxkaXYgaWQ9ImV4YW1wbGUiPjwvZGl2PgogICAgPHNjcmlwdCB0eXBlPSJ0
ZXh0L2JhYmVsIj4KCiAgICAgIC8vICoqIE91ciBjb2RlIGdvZXMgaGVyZSEg
KioKCiAgICA8L3NjcmlwdD4KICA8L2JvZHk+CjwvaHRtbD4KYGBgCgojIyBJ
bmRleAoKMS4gW1JlbmRlciBKU1hdKCNkZW1vMDEtcmVuZGVyLWpzeCkKMS4g
W1VzZSBKYXZhU2NyaXB0IGluIEpTWF0oI2RlbW8wMi11c2UtamF2YXNjcmlw
dC1pbi1qc3gpCjEuIFtVc2UgYXJyYXkgaW4gSlNYXSgjZGVtbzAzLXVzZS1h
cnJheS1pbi1qc3gpCjEuIFtEZWZpbmUgYSBjb21wb25lbnRdKCNkZW1vMDQt
ZGVmaW5lLWEtY29tcG9uZW50KQoxLiBbdGhpcy5wcm9wcy5jaGlsZHJlbl0o
I2RlbW8wNS10aGlzcHJvcHNjaGlsZHJlbikKMS4gW1Byb3BUeXBlc10oI2Rl
bW8wNi1wcm9wdHlwZXMpCjEuIFtGaW5kaW5nIGEgRE9NIG5vZGVdKCNkZW1v
MDctZmluZGluZy1hLWRvbS1ub2RlKQoxLiBbdGhpcy5zdGF0ZV0oI2RlbW8w
OC10aGlzc3RhdGUpCjEuIFtGb3JtXSgjZGVtbzA5LWZvcm0pCjEuIFtDb21w
b25lbnQgTGlmZWN5Y2xlXSgjZGVtbzEwLWNvbXBvbmVudC1saWZlY3ljbGUp
CjEuIFtBamF4XSgjZGVtbzExLWFqYXgpCjEuIFtEaXNwbGF5IHZhbHVlIGZy
b20gYSBQcm9taXNlXSgjZGVtbzEyLWRpc3BsYXktdmFsdWUtZnJvbS1hLXBy
b21pc2UpCjEuIFtTZXJ2ZXItc2lkZSByZW5kZXJpbmddKCNkZW1vMTMtc2Vy
dmVyLXNpZGUtcmVuZGVyaW5nKQoKLS0tCgojIyBEZW1vMDE6IFJlbmRlciBK
U1gKCltkZW1vXShodHRwOi8vcnVhbnlmLmdpdGh1Yi5pby9yZWFjdC1kZW1v
cy9kZW1vMDEvKSAvIFtzb3VyY2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9ydWFu
eWYvcmVhY3QtZGVtb3MvYmxvYi9tYXN0ZXIvZGVtbzAxL2luZGV4Lmh0bWwp
CgpUaGUgdGVtcGxhdGUgc3ludGF4IGluIFJlYWN0IGlzIGNhbGxlZCBbSlNY
XShodHRwOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0L2RvY3MvZGlzcGxh
eWluZy1kYXRhLmh0bWwjanN4LXN5bnRheCkuIEl0IGlzIGFsbG93ZWQgaW4g
SlNYIHRvIHB1dCBIVE1MIHRhZ3MgZGlyZWN0bHkgaW50byBKYXZhU2NyaXB0
IGNvZGVzLiBgUmVhY3RET00ucmVuZGVyKClgIGlzIHRoZSBtZXRob2Qgd2hp
Y2ggdHJhbnNsYXRlcyBKU1ggaW50byBIVE1MLCBhbmQgcmVuZGVycyBpdCBp
bnRvIHRoZSBzcGVjaWZpZWQgRE9NIG5vZGUuCgpgYGBqcwpSZWFjdERPTS5y
ZW5kZXIoCiAgPGgxPkhlbGxvLCB3b3JsZCE8L2gxPiwKICBkb2N1bWVudC5n
ZXRFbGVtZW50QnlJZCgnZXhhbXBsZScpCik7CmBgYAoKQXR0ZW50aW9uLCB5
b3UgaGF2ZSB0byB1c2UgYDxzY3JpcHQgdHlwZT0idGV4dC9iYWJlbCI+YCB0
byBpbmRpY2F0ZSBKU1ggY29kZXMsIGFuZCBpbmNsdWRlIGBiYWJlbC5taW4u
anNgLCB3aGljaCBpcyBhIFticm93c2VyIHZlcnNpb25dKGh0dHBzOi8vYmFi
ZWxqcy5pby9kb2NzL3VzYWdlL2Jyb3dzZXIvKSBvZiBCYWJlbCBhbmQgY291
bGQgYmUgZ2V0IGluc2lkZSBhIFtiYWJlbC1jb3JlQDZdKGh0dHBzOi8vd3d3
Lm5wbWpzLmNvbS9wYWNrYWdlL2JhYmVsLWNvcmUpIG5wbSByZWxlYXNlLCB0
byBhY3R1YWxseSBwZXJmb3JtIHRoZSB0cmFuc2Zvcm1hdGlvbiBpbiB0aGUg
YnJvd3Nlci4KCkJlZm9yZSB2MC4xNCwgUmVhY3QgdXNlIGBKU1RyYW5zZm9y
bS5qc2AgdG8gdHJhbnNsYXRlIGA8c2NyaXB0IHR5cGU9InRleHQvanN4Ij5g
LiBJdCBoYXMgYmVlbiBkZXByZWNhdGVkIChbbW9yZSBpbmZvXShodHRwczov
L2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC9ibG9nLzIwMTUvMDYvMTIvZGVw
cmVjYXRpbmctanN0cmFuc2Zvcm0tYW5kLXJlYWN0LXRvb2xzLmh0bWwpKS4K
CiMjIERlbW8wMjogVXNlIEphdmFTY3JpcHQgaW4gSlNYCgpbZGVtb10oaHR0
cDovL3J1YW55Zi5naXRodWIuaW8vcmVhY3QtZGVtb3MvZGVtbzAyLykgLyBb
c291cmNlXShodHRwczovL2dpdGh1Yi5jb20vcnVhbnlmL3JlYWN0LWRlbW9z
L2Jsb2IvbWFzdGVyL2RlbW8wMi9pbmRleC5odG1sKQoKWW91IGNvdWxkIGFs
c28gdXNlIEphdmFTY3JpcHQgaW4gSlNYLiBJdCB0YWtlcyBhbmdsZSBicmFj
a2V0cyAoJmx0OykgYXMgdGhlIGJlZ2lubmluZyBvZiBIVE1MIHN5bnRheCwg
YW5kIGN1cmx5IGJyYWNrZXRzIChge2ApIGFzIHRoZSBiZWdpbm5pbmcgb2Yg
SmF2YVNjcmlwdCBzeW50YXguCgpgYGBqcwp2YXIgbmFtZXMgPSBbJ0FsaWNl
JywgJ0VtaWx5JywgJ0thdGUnXTsKClJlYWN0RE9NLnJlbmRlcigKICA8ZGl2
PgogIHsKICAgIG5hbWVzLm1hcChmdW5jdGlvbiAobmFtZSkgewogICAgICBy
ZXR1cm4gPGRpdj5IZWxsbywge25hbWV9ITwvZGl2PgogICAgfSkKICB9CiAg
PC9kaXY+LAogIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdleGFtcGxlJykK
KTsKYGBgCgojIyBEZW1vMDM6IFVzZSBhcnJheSBpbiBKU1gKCltkZW1vXSho
dHRwOi8vcnVhbnlmLmdpdGh1Yi5pby9yZWFjdC1kZW1vcy9kZW1vMDMvKSAv
IFtzb3VyY2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9ydWFueWYvcmVhY3QtZGVt
b3MvYmxvYi9tYXN0ZXIvZGVtbzAzL2luZGV4Lmh0bWwpCgpJZiBhIEphdmFT
Y3JpcHQgdmFyaWFibGUgaXMgYW4gYXJyYXksIEpTWCB3aWxsIGltcGxpY2l0
bHkgY29uY2F0IGFsbCBtZW1iZXJzIG9mIHRoZSBhcnJheS4KCmBgYGpzCnZh
ciBhcnIgPSBbCiAgPGgxPkhlbGxvIHdvcmxkITwvaDE+LAogIDxoMj5SZWFj
dCBpcyBhd2Vzb21lPC9oMj4sCl07ClJlYWN0RE9NLnJlbmRlcigKICA8ZGl2
PnthcnJ9PC9kaXY+LAogIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdleGFt
cGxlJykKKTsKYGBgCgojIyBEZW1vMDQ6IERlZmluZSBhIGNvbXBvbmVudAoK
W2RlbW9dKGh0dHA6Ly9ydWFueWYuZ2l0aHViLmlvL3JlYWN0LWRlbW9zL2Rl
bW8wNC8pIC8gW3NvdXJjZV0oaHR0cHM6Ly9naXRodWIuY29tL3J1YW55Zi9y
ZWFjdC1kZW1vcy9ibG9iL21hc3Rlci9kZW1vMDQvaW5kZXguaHRtbCkKCgoK
YGNsYXNzIENvbXBvbmVudE5hbWUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnRg
IGNyZWF0ZXMgYSBjb21wb25lbnQgY2xhc3MsIHdoaWNoIGltcGxlbWVudHMg
YSByZW5kZXIgbWV0aG9kIHRvIHJldHVybiBhbiBjb21wb25lbnQgaW5zdGFu
Y2Ugb2YgdGhlIGNsYXNzLgoKQmVmb3JlIHYxNi4wLCBSZWFjdCB1c2UgYFJl
YWN0LmNyZWF0ZUNsYXNzKClgIHRvIGNyZWF0ZSBhIGNvbXBvbmVudCBjbGFz
cy4gSXQgaGFzIGJlZW4gZGVwcmVjYXRlZCAoW21vcmUgaW5mb10oaHR0cHM6
Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2Jsb2IvbWFzdGVyL0NIQU5H
RUxPRy5tZCNyZW1vdmVkLWRlcHJlY2F0aW9ucykpLgoKYGBgamF2YXNjcmlw
dApjbGFzcyBIZWxsb01lc3NhZ2UgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQg
ewogIHJlbmRlcigpIHsKICAgIHJldHVybiA8aDE+SGVsbG8ge3RoaXMucHJv
cHMubmFtZX08L2gxPjsKICB9Cn0KClJlYWN0RE9NLnJlbmRlcigKICA8SGVs
bG9NZXNzYWdlIG5hbWU9IkpvaG4iIC8+LAogIGRvY3VtZW50LmdldEVsZW1l
bnRCeUlkKCdleGFtcGxlJykKKTsKYGBgCgpDb21wb25lbnRzIHdvdWxkIGhh
dmUgYXR0cmlidXRlcywgYW5kIHlvdSBjYW4gdXNlIGB0aGlzLnByb3BzLlth
dHRyaWJ1dGVdYCB0byBhY2Nlc3MgdGhlbSwganVzdCBsaWtlIGB0aGlzLnBy
b3BzLm5hbWVgIG9mIGA8SGVsbG9NZXNzYWdlIG5hbWU9IkpvaG4iIC8+YCBp
cyBKb2huLgoKUGxlYXNlIHJlbWVtYmVyIHRoZSBmaXJzdCBsZXR0ZXIgb2Yg
dGhlIGNvbXBvbmVudCdzIG5hbWUgbXVzdCBiZSBjYXBpdGFsaXplZCwgb3Ro
ZXJ3aXNlIFJlYWN0IHdpbGwgdGhyb3cgYW4gZXJyb3IuIEZvciBpbnN0YW5j
ZSwgYEhlbGxvTWVzc2FnZWAgYXMgYSBjb21wb25lbnQncyBuYW1lIGlzIE9L
LCBidXQgYGhlbGxvTWVzc2FnZWAgaXMgbm90IGFsbG93ZWQuIEFuZCBhIFJl
YWN0IGNvbXBvbmVudCBzaG91bGQgb25seSBoYXZlIG9uZSB0b3AgY2hpbGQg
bm9kZS4KCmBgYGphdmFzY3JpcHQKLy8gd3JvbmcKY2xhc3MgSGVsbG9NZXNz
YWdlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHsKICByZW5kZXIoKSB7CiAg
ICByZXR1cm4gPGgxPgogICAgICBIZWxsbyB7dGhpcy5wcm9wcy5uYW1lfQog
ICAgPC9oMT48cD4KICAgICAgc29tZSB0ZXh0CiAgICA8L3A+OwogIH0KfQoK
Ly8gY29ycmVjdApjbGFzcyBIZWxsb01lc3NhZ2UgZXh0ZW5kcyBSZWFjdC5D
b21wb25lbnQgewogIHJlbmRlcigpIHsKICAgIHJldHVybiA8ZGl2PgogICAg
ICA8aDE+SGVsbG8ge3RoaXMucHJvcHMubmFtZX08L2gxPgogICAgICA8cD5z
b21lIHRleHQ8L3A+CiAgICA8L2Rpdj47CiAgfQp9CmBgYAoKIyMgRGVtbzA1
OiB0aGlzLnByb3BzLmNoaWxkcmVuCgpbZGVtb10oaHR0cDovL3J1YW55Zi5n
aXRodWIuaW8vcmVhY3QtZGVtb3MvZGVtbzA1LykgLyBbc291cmNlXShodHRw
czovL2dpdGh1Yi5jb20vcnVhbnlmL3JlYWN0LWRlbW9zL2Jsb2IvbWFzdGVy
L2RlbW8wNS9pbmRleC5odG1sKQoKUmVhY3QgdXNlcyBgdGhpcy5wcm9wcy5j
aGlsZHJlbmAgdG8gYWNjZXNzIGEgY29tcG9uZW50J3MgY2hpbGRyZW4gbm9k
ZXMuCgpgYGBqYXZhc2NyaXB0CmNsYXNzIE5vdGVzTGlzdCBleHRlbmRzIFJl
YWN0LkNvbXBvbmVudCB7CiAgcmVuZGVyKCkgewogICAgcmV0dXJuICgKICAg
ICAgPG9sPgogICAgICB7CiAgICAgICAgUmVhY3QuQ2hpbGRyZW4ubWFwKHRo
aXMucHJvcHMuY2hpbGRyZW4sIGZ1bmN0aW9uIChjaGlsZCkgewogICAgICAg
ICAgcmV0dXJuIDxsaT57Y2hpbGR9PC9saT47CiAgICAgICAgfSkKICAgICAg
fQogICAgICA8L29sPgogICAgKTsKICB9Cn0KClJlYWN0RE9NLnJlbmRlcigK
ICA8Tm90ZXNMaXN0PgogICAgPHNwYW4+aGVsbG88L3NwYW4+CiAgICA8c3Bh
bj53b3JsZDwvc3Bhbj4KICA8L05vdGVzTGlzdD4sCiAgZG9jdW1lbnQuZ2V0
RWxlbWVudEJ5SWQoJ2V4YW1wbGUnKQopOwpgYGAKClBsZWFzZSBiZSBtaW5k
ZnVsIHRoYXQgdGhlIHZhbHVlIG9mIGB0aGlzLnByb3BzLmNoaWxkcmVuYCBo
YXMgdGhyZWUgcG9zc2liaWxpdGllcy4gSWYgdGhlIGNvbXBvbmVudCBoYXMg
bm8gY2hpbGRyZW4gbm9kZSwgdGhlIHZhbHVlIGlzIGB1bmRlZmluZWRgOyBJ
ZiBzaW5nbGUgY2hpbGRyZW4gbm9kZSwgYW4gb2JqZWN0OyBJZiBtdWx0aXBs
ZSBjaGlsZHJlbiBub2RlcywgYW4gYXJyYXkuIFlvdSBzaG91bGQgYmUgY2Fy
ZWZ1bCB0byBoYW5kbGUgaXQuCgpSZWFjdCBnYXZlIHVzIGFuIHV0aWxpdHkg
W2BSZWFjdC5DaGlsZHJlbmBdKGh0dHBzOi8vZmFjZWJvb2suZ2l0aHViLmlv
L3JlYWN0L2RvY3MvdG9wLWxldmVsLWFwaS5odG1sI3JlYWN0LmNoaWxkcmVu
KSBmb3IgZGVhbGluZyB3aXRoIHRoZSBgdGhpcy5wcm9wcy5jaGlsZHJlbmAn
cyBvcGFxdWUgZGF0YSBzdHJ1Y3R1cmUuIFlvdSBjb3VsZCB1c2UgYFJlYWN0
LkNoaWxkcmVuLm1hcGAgdG8gaXRlcmF0ZSBgdGhpcy5wcm9wcy5jaGlsZHJl
bmAgd2l0aG91dCB3b3JyaW5nIGl0cyBkYXRhIHR5cGUgYmVpbmcgYHVuZGVm
aW5lZGAgb3IgYG9iamVjdGAuIENoZWNrIFtvZmZpY2lhbCBkb2N1bWVudF0o
aHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QvZG9jcy90b3AtbGV2
ZWwtYXBpLmh0bWwjcmVhY3QuY2hpbGRyZW4pIGZvciBtb3JlIG1ldGhvZHMg
YFJlYWN0LkNoaWxkcmVuYCBvZmZlcnMuCgojIyBEZW1vMDY6IFByb3BUeXBl
cwoKW2RlbW9dKGh0dHA6Ly9ydWFueWYuZ2l0aHViLmlvL3JlYWN0LWRlbW9z
L2RlbW8wNi8pIC8gW3NvdXJjZV0oaHR0cHM6Ly9naXRodWIuY29tL3J1YW55
Zi9yZWFjdC1kZW1vcy9ibG9iL21hc3Rlci9kZW1vMDYvaW5kZXguaHRtbCkK
CkNvbXBvbmVudHMgaGF2ZSBtYW55IHNwZWNpZmljIGF0dHJpYnV0ZXMgd2hp
Y2ggYXJlIGNhbGxlZCBgcHJvcHNgIGluIFJlYWN0IGFuZCBjYW4gYmUgb2Yg
YW55IHR5cGUuCgpTb21ldGltZXMgeW91IG5lZWQgYSB3YXkgdG8gdmFsaWRh
dGUgdGhlc2UgcHJvcHMuIFlvdSBkb24ndCB3YW50IHVzZXJzIGhhdmUgdGhl
IGZyZWVkb20gdG8gaW5wdXQgYW55dGhpbmcgaW50byB5b3VyIGNvbXBvbmVu
dHMuCgpSZWFjdCBoYXMgYSBzb2x1dGlvbiBmb3IgdGhpcyBhbmQgaXQncyBj
YWxsZWQgUHJvcFR5cGVzLgoKYGBgamF2YXNjcmlwdApjbGFzcyBNeVRpdGxl
IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHsKICBzdGF0aWMgcHJvcFR5cGVz
ID0gewogICAgdGl0bGU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCwK
ICB9CiAgcmVuZGVyKCkgewogICAgcmV0dXJuIDxoMT4ge3RoaXMucHJvcHMu
dGl0bGV9IDwvaDE+OwogIH0KfQpgYGAKClRoZSBhYm92ZSBjb21wb25lbnQg
b2YgYE15VGl0bGVgIGhhcyBhIHByb3BzIG9mIGB0aXRsZWAuIFByb3BUeXBl
cyB0ZWxscyBSZWFjdCB0aGF0IHRoZSB0aXRsZSBpcyByZXF1aXJlZCBhbmQg
aXRzIHZhbHVlIHNob3VsZCBiZSBhIHN0cmluZy4KCk5vdyB3ZSBnaXZlIGBU
aXRsZWAgYSBudW1iZXIgdmFsdWUuCgpgYGBqYXZhc2NyaXB0CnZhciBkYXRh
ID0gMTIzOwoKUmVhY3RET00ucmVuZGVyKAogIDxNeVRpdGxlIHRpdGxlPXtk
YXRhfSAvPiwKICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZXhhbXBsZScp
Cik7CmBgYAoKSXQgbWVhbnMgdGhlIHByb3BzIGRvZXNuJ3QgcGFzcyB0aGUg
dmFsaWRhdGlvbiwgYW5kIHRoZSBjb25zb2xlIHdpbGwgc2hvdyB5b3UgYW4g
ZXJyb3IgbWVzc2FnZS4KCmBgYGJhc2gKV2FybmluZzogRmFpbGVkIHByb3BU
eXBlOiBJbnZhbGlkIHByb3AgYHRpdGxlYCBvZiB0eXBlIGBudW1iZXJgIHN1
cHBsaWVkIHRvIGBNeVRpdGxlYCwgZXhwZWN0ZWQgYHN0cmluZ2AuCmBgYAoK
VmlzaXQgW29mZmljaWFsIGRvY10oaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2Nz
L3R5cGVjaGVja2luZy13aXRoLXByb3B0eXBlcy5odG1sKSBmb3IgbW9yZSBQ
cm9wVHlwZXMgb3B0aW9ucy4KClAuUy4gSWYgeW91IHdhbnQgdG8gZ2l2ZSB0
aGUgcHJvcHMgYSBkZWZhdWx0IHZhbHVlLCB1c2UgYGRlZmF1bHRQcm9wc2Au
CgpgYGBqYXZhc2NyaXB0CmNsYXNzIE15VGl0bGUgZXh0ZW5kcyBSZWFjdC5D
b21wb25lbnQgewogIGNvbnN0cnVjdG9yKHByb3BzKSB7CiAgICBzdXBlcihw
cm9wcykKICB9CiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHsKICAgIHRpdGxl
OiAnSGVsbG8gV29ybGQnLAogIH0KICByZW5kZXIoKSB7CiAgICByZXR1cm4g
PGgxPiB7dGhpcy5wcm9wcy50aXRsZX0gPC9oMT47CiAgfQp9CgpSZWFjdERP
TS5yZW5kZXIoCiAgPE15VGl0bGUgLz4sCiAgZG9jdW1lbnQuZ2V0RWxlbWVu
dEJ5SWQoJ2V4YW1wbGUnKQopOwpgYGAKClJlYWN0LlByb3BUeXBlcyBoYXMg
bW92ZWQgaW50byBhIGRpZmZlcmVudCBwYWNrYWdlIHNpbmNlIFJlYWN0IHYx
NS41LiAoW21vcmUgaW5mb10oaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL3R5
cGVjaGVja2luZy13aXRoLXByb3B0eXBlcy5odG1sKSkuCgojIyBEZW1vMDc6
IEZpbmRpbmcgYSBET00gbm9kZQoKW2RlbW9dKGh0dHA6Ly9ydWFueWYuZ2l0
aHViLmlvL3JlYWN0LWRlbW9zL2RlbW8wNy8pIC8gW3NvdXJjZV0oaHR0cHM6
Ly9naXRodWIuY29tL3J1YW55Zi9yZWFjdC1kZW1vcy9ibG9iL21hc3Rlci9k
ZW1vMDcvaW5kZXguaHRtbCkKClNvbWV0aW1lcyB5b3UgbmVlZCB0byByZWZl
cmVuY2UgYSBET00gbm9kZSBpbiBhIGNvbXBvbmVudC4gUmVhY3QgZ2l2ZXMg
eW91IHRoZSBgcmVmYCBhdHRyaWJ1dGUgdG8gYXR0YWNoIGEgRE9NIG5vZGUg
dG8gaW5zdGFuY2UgY3JlYXRlZCBieSBgUmVhY3QuY3JlYXRlUmVmKClgLgoK
CmBgYGpzCmNsYXNzIE15Q29tcG9uZW50IGV4dGVuZHMgUmVhY3QuQ29tcG9u
ZW50IHsKICBjb25zdHJ1Y3Rvcihwcm9wcykgewogICAgc3VwZXIocHJvcHMp
OwogICAgdGhpcy5teVRleHRJbnB1dCA9IFJlYWN0LmNyZWF0ZVJlZigpOwog
ICAgdGhpcy5oYW5kbGVDbGljayA9IHRoaXMuaGFuZGxlQ2xpY2suYmluZCh0
aGlzKQogIH0KICBoYW5kbGVDbGljaygpIHsKICAgIHRoaXMubXlUZXh0SW5w
dXQuY3VycmVudC5mb2N1cygpOwogIH0KICByZW5kZXIoKSB7CiAgICByZXR1
cm4gKAogICAgICA8ZGl2PgogICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBy
ZWY9e3RoaXMubXlUZXh0SW5wdXR9IC8+CiAgICAgICAgPGlucHV0IHR5cGU9
ImJ1dHRvbiIgdmFsdWU9IkZvY3VzIHRoZSB0ZXh0IGlucHV0IiBvbkNsaWNr
PXt0aGlzLmhhbmRsZUNsaWNrfSAvPgogICAgICA8L2Rpdj4KICAgICk7CiAg
fQp9CgpSZWFjdERPTS5yZW5kZXIoCiAgPE15Q29tcG9uZW50IC8+LAogIGRv
Y3VtZW50LmdldEVsZW1lbnRCeUlkKCdleGFtcGxlJykKKTsKYGBgCgpQbGVh
c2UgYmUgbWluZGZ1bCB0aGF0IHlvdSBjb3VsZCBkbyB0aGF0IG9ubHkgYWZ0
ZXIgdGhpcyBjb21wb25lbnQgaGFzIGJlZW4gbW91bnRlZCBpbnRvIHRoZSBE
T00sIG90aGVyd2lzZSB5b3UgZ2V0IGBudWxsYC4KCiMjIERlbW8wODogdGhp
cy5zdGF0ZQoKW2RlbW9dKGh0dHA6Ly9ydWFueWYuZ2l0aHViLmlvL3JlYWN0
LWRlbW9zL2RlbW8wOC8pIC8gW3NvdXJjZV0oaHR0cHM6Ly9naXRodWIuY29t
L3J1YW55Zi9yZWFjdC1kZW1vcy9ibG9iL21hc3Rlci9kZW1vMDgvaW5kZXgu
aHRtbCkKClJlYWN0IHRoaW5rcyBvZiBjb21wb25lbnQgYXMgc3RhdGUgbWFj
aGluZXMsIGFuZCB1c2VzIGB0aGlzLnN0YXRlYCB0byBob2xkIGNvbXBvbmVu
dCdzIHN0YXRlLCBgdGhpcy5zZXRTdGF0ZSgpYCB0byB1cGRhdGUgYHRoaXMu
c3RhdGVgIGFuZCByZS1yZW5kZXIgdGhlIGNvbXBvbmVudC4KCmBgYGpzCmNs
YXNzIExpa2VCdXR0b24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQgewogIGNv
bnN0cnVjdG9yKHByb3BzKSB7CiAgICBzdXBlcihwcm9wcykKICAgIHRoaXMu
c3RhdGUgPSB7CiAgICAJbGlrZWQ6IGZhbHNlCiAgICB9CiAgICB0aGlzLmhh
bmRsZUNsaWNrID0gdGhpcy5oYW5kbGVDbGljay5iaW5kKHRoaXMpCiAgfQog
IGhhbmRsZUNsaWNrKGV2ZW50KSB7CiAgICB0aGlzLnNldFN0YXRlKHsgbGlr
ZWQ6ICF0aGlzLnN0YXRlLmxpa2VkIH0pOwogIH0KICByZW5kZXIoKSB7CiAg
ICB2YXIgdGV4dCA9IHRoaXMuc3RhdGUubGlrZWQgPyAnbGlrZScgOiAnaGF2
ZW5cJ3QgbGlrZWQnOwogICAgcmV0dXJuICgKICAgICAgPHAgb25DbGljaz17
dGhpcy5oYW5kbGVDbGlja30+CiAgICAgICAgWW91IHt0ZXh0fSB0aGlzLiBD
bGljayB0byB0b2dnbGUuCiAgICAgIDwvcD4KICAgICk7CiAgfQp9CgpSZWFj
dERPTS5yZW5kZXIoCiAgPExpa2VCdXR0b24gLz4sCiAgZG9jdW1lbnQuZ2V0
RWxlbWVudEJ5SWQoJ2V4YW1wbGUnKQopOwpgYGAKCllvdSBjb3VsZCB1c2Ug
Y29tcG9uZW50IGF0dHJpYnV0ZXMgdG8gcmVnaXN0ZXIgZXZlbnQgaGFuZGxl
cnMsIGp1c3QgbGlrZSBgb25DbGlja2AsIGBvbktleURvd25gLCBgb25Db3B5
YCwgZXRjLiBPZmZpY2lhbCBEb2N1bWVudCBoYXMgYWxsIFtzdXBwb3J0ZWQg
ZXZlbnRzXShodHRwOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0L2RvY3Mv
ZXZlbnRzLmh0bWwjc3VwcG9ydGVkLWV2ZW50cykuCgojIyBEZW1vMDk6IEZv
cm0KCltkZW1vXShodHRwOi8vcnVhbnlmLmdpdGh1Yi5pby9yZWFjdC1kZW1v
cy9kZW1vMDkvKSAvIFtzb3VyY2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9ydWFu
eWYvcmVhY3QtZGVtb3MvYmxvYi9tYXN0ZXIvZGVtbzA5L2luZGV4Lmh0bWwp
CgpBY2NvcmRpbmcgdG8gUmVhY3QncyBkZXNpZ24gcGhpbG9zb3BoeSwgYHRo
aXMuc3RhdGVgIGRlc2NyaWJlcyB0aGUgc3RhdGUgb2YgY29tcG9uZW50IGFu
ZCBpcyBtdXRhdGVkIHZpYSB1c2VyIGludGVyYWN0aW9ucywgYW5kIGB0aGlz
LnByb3BzYCBkZXNjcmliZXMgdGhlIHByb3BlcnRpZXMgb2YgY29tcG9uZW50
IGFuZCBpcyBzdGFibGUgYW5kIGltbXV0YWJsZS4KClNpbmNlIHRoYXQsIHRo
ZSBgdmFsdWVgIGF0dHJpYnV0ZSBvZiBGb3JtIGNvbXBvbmVudHMsIHN1Y2gg
YXMgJmx0O2lucHV0Jmd0OywgJmx0O3RleHRhcmVhJmd0OywgYW5kICZsdDtv
cHRpb24mZ3Q7LCBpcyB1bmFmZmVjdGVkIGJ5IGFueSB1c2VyIGlucHV0LiBJ
ZiB5b3Ugd2FudGVkIHRvIGFjY2VzcyBvciB1cGRhdGUgdGhlIHZhbHVlIGlu
IHJlc3BvbnNlIHRvIHVzZXIgaW5wdXQsIHlvdSBjb3VsZCB1c2UgdGhlIG9u
Q2hhbmdlIGV2ZW50LgoKYGBganMKY2xhc3MgSW5wdXQgZXh0ZW5kcyBSZWFj
dC5Db21wb25lbnQgewpjb25zdHJ1Y3Rvcihwcm9wcykgewogIHN1cGVyKHBy
b3BzKQogIHRoaXMuc3RhdGUgPSB7dmFsdWU6ICdIZWxsbyEnfQogIHRoaXMu
aGFuZGxlQ2hhbmdlID0gdGhpcy5oYW5kbGVDaGFuZ2UuYmluZCh0aGlzKQp9
CmhhbmRsZUNoYW5nZShldmVudCkgewogIHRoaXMuc2V0U3RhdGUoe3ZhbHVl
OiBldmVudC50YXJnZXQudmFsdWV9KTsKfQpyZW5kZXIoKSB7CiAgdmFyIHZh
bHVlID0gdGhpcy5zdGF0ZS52YWx1ZTsKICByZXR1cm4gKAogICAgPGRpdj4K
ICAgICAgPGlucHV0IHR5cGU9InRleHQiIHZhbHVlPXt2YWx1ZX0gb25DaGFu
Z2U9e3RoaXMuaGFuZGxlQ2hhbmdlfSAvPgogICAgICA8cD57dmFsdWV9PC9w
PgogICAgPC9kaXY+CiAgKTsKfQp9CgpSZWFjdERPTS5yZW5kZXIoPElucHV0
Lz4sIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdleGFtcGxlJykpOwpgYGAK
Ck1vcmUgaW5mb3JtYXRpb24gb24gW29mZmljaWFsIGRvY3VtZW50XShodHRw
Oi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0L2RvY3MvZm9ybXMuaHRtbCku
CgojIyBEZW1vMTA6IENvbXBvbmVudCBMaWZlY3ljbGUKCltkZW1vXShodHRw
Oi8vcnVhbnlmLmdpdGh1Yi5pby9yZWFjdC1kZW1vcy9kZW1vMTAvKSAvIFtz
b3VyY2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9ydWFueWYvcmVhY3QtZGVtb3Mv
YmxvYi9tYXN0ZXIvZGVtbzEwL2luZGV4Lmh0bWwpCgpDb21wb25lbnRzIGhh
dmUgdGhyZWUgbWFpbiBwYXJ0cyBvZiBbdGhlaXIgbGlmZWN5Y2xlXShodHRw
czovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC9kb2NzL3dvcmtpbmctd2l0
aC10aGUtYnJvd3Nlci5odG1sI2NvbXBvbmVudC1saWZlY3ljbGUpOiBNb3Vu
dGluZyhiZWluZyBpbnNlcnRlZCBpbnRvIHRoZSBET00pLCBVcGRhdGluZyhi
ZWluZyByZS1yZW5kZXJlZCkgYW5kIFVubW91bnRpbmcoYmVpbmcgcmVtb3Zl
ZCBmcm9tIHRoZSBET00pLiBSZWFjdCBwcm92aWRlcyBob29rcyBpbnRvIHRo
ZXNlIGxpZmVjeWNsZSBwYXJ0LiBgd2lsbGAgbWV0aG9kcyBhcmUgY2FsbGVk
IHJpZ2h0IGJlZm9yZSBzb21ldGhpbmcgaGFwcGVucywgYW5kIGBkaWRgIG1l
dGhvZHMgd2hpY2ggYXJlIGNhbGxlZCByaWdodCBhZnRlciBzb21ldGhpbmcg
aGFwcGVucy4KCmBgYGpzCmNsYXNzIEhlbGxvIGV4dGVuZHMgUmVhY3QuQ29t
cG9uZW50IHsKICBjb25zdHJ1Y3Rvcihwcm9wcykgewogICAgc3VwZXIocHJv
cHMpCiAgICB0aGlzLnN0YXRlID0ge29wYWNpdHk6IDEuMH07CiAgfQoKICBj
b21wb25lbnREaWRNb3VudCgpIHsKICAgIHRoaXMudGltZXIgPSBzZXRJbnRl
cnZhbChmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBvcGFjaXR5ID0gdGhpcy5z
dGF0ZS5vcGFjaXR5OwogICAgICBvcGFjaXR5IC09IC4wNTsKICAgICAgaWYg
KG9wYWNpdHkgPCAwLjEpIHsKICAgICAgICBvcGFjaXR5ID0gMS4wOwogICAg
ICB9CiAgICAgIHRoaXMuc2V0U3RhdGUoewogICAgICAgIG9wYWNpdHk6IG9w
YWNpdHkKICAgICAgfSk7CiAgICB9LmJpbmQodGhpcyksIDEwMCk7CiAgfQoK
ICByZW5kZXIoKSB7CiAgICByZXR1cm4gKAogICAgICA8ZGl2IHN0eWxlPXt7
b3BhY2l0eTogdGhpcy5zdGF0ZS5vcGFjaXR5fX0+CiAgICAgICAgSGVsbG8g
e3RoaXMucHJvcHMubmFtZX0KICAgICAgPC9kaXY+CiAgICApOwogIH0KfQoK
UmVhY3RET00ucmVuZGVyKAogIDxIZWxsbyBuYW1lPSJ3b3JsZCIvPiwKICBk
b2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZXhhbXBsZScpCik7CmBgYAoKVGhl
IGZvbGxvd2luZyBpcyBbYSB3aG9sZSBsaXN0IG9mIGxpZmVjeWNsZSBtZXRo
b2RzXShodHRwOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0L2RvY3MvY29t
cG9uZW50LXNwZWNzLmh0bWwjbGlmZWN5Y2xlLW1ldGhvZHMpLgoKLSAqKmNv
bXBvbmVudFdpbGxNb3VudCgpKio6IEZpcmVkIG9uY2UsIGJlZm9yZSBpbml0
aWFsIHJlbmRlcmluZyBvY2N1cnMuIEdvb2QgcGxhY2UgdG8gd2lyZS11cCBt
ZXNzYWdlIGxpc3RlbmVycy4gYHRoaXMuc2V0U3RhdGVgIGRvZXNuJ3Qgd29y
ayBoZXJlLgotICoqY29tcG9uZW50RGlkTW91bnQoKSoqOiBGaXJlZCBvbmNl
LCBhZnRlciBpbml0aWFsIHJlbmRlcmluZyBvY2N1cnMuIENhbiB1c2UgYHRo
aXMuZ2V0RE9NTm9kZSgpYC4KLSAqKmNvbXBvbmVudFdpbGxVcGRhdGUob2Jq
ZWN0IG5leHRQcm9wcywgb2JqZWN0IG5leHRTdGF0ZSkqKjogRmlyZWQgYWZ0
ZXIgdGhlIGNvbXBvbmVudCdzIHVwZGF0ZXMgYXJlIG1hZGUgdG8gdGhlIERP
TS4gQ2FuIHVzZSBgdGhpcy5nZXRET01Ob2RlKClgIGZvciB1cGRhdGVzLgot
ICoqY29tcG9uZW50RGlkVXBkYXRlKG9iamVjdCBwcmV2UHJvcHMsIG9iamVj
dCBwcmV2U3RhdGUpKio6IEludm9rZWQgaW1tZWRpYXRlbHkgYWZ0ZXIgdGhl
IGNvbXBvbmVudCdzIHVwZGF0ZXMgYXJlIGZsdXNoZWQgdG8gdGhlIERPTS4g
VGhpcyBtZXRob2QgaXMgbm90IGNhbGxlZCBmb3IgdGhlIGluaXRpYWwgcmVu
ZGVyLiBVc2UgdGhpcyBhcyBhbiBvcHBvcnR1bml0eSB0byBvcGVyYXRlIG9u
IHRoZSBET00gd2hlbiB0aGUgY29tcG9uZW50IGhhcyBiZWVuIHVwZGF0ZWQu
Ci0gKipjb21wb25lbnRXaWxsVW5tb3VudCgpKio6IEZpcmVkIGltbWVkaWF0
ZWx5IGJlZm9yZSBhIGNvbXBvbmVudCBpcyB1bm1vdW50ZWQgZnJvbSB0aGUg
RE9NLiBHb29kIHBsYWNlIHRvIHJlbW92ZSBtZXNzYWdlIGxpc3RlbmVycyBv
ciBnZW5lcmFsIGNsZWFuIHVwLgotICoqY29tcG9uZW50V2lsbFJlY2VpdmVQ
cm9wcyhvYmplY3QgbmV4dFByb3BzKSoqOiBGaXJlZCB3aGVuIGEgY29tcG9u
ZW50IGlzIHJlY2VpdmluZyBuZXcgcHJvcHMuIFlvdSBtaWdodCB3YW50IHRv
IGB0aGlzLnNldFN0YXRlYCBkZXBlbmRpbmcgb24gdGhlIHByb3BzLgotICoq
c2hvdWxkQ29tcG9uZW50VXBkYXRlKG9iamVjdCBuZXh0UHJvcHMsIG9iamVj
dCBuZXh0U3RhdGUpKio6IEZpcmVkIGJlZm9yZSByZW5kZXJpbmcgd2hlbiBu
ZXcgcHJvcHMgb3Igc3RhdGUgYXJlIHJlY2VpdmVkLiBgcmV0dXJuIGZhbHNl
YCBpZiB5b3Uga25vdyBhbiB1cGRhdGUgaXNuJ3QgbmVlZGVkLgoKIyMgRGVt
bzExOiBBamF4CgpbZGVtb10oaHR0cDovL3J1YW55Zi5naXRodWIuaW8vcmVh
Y3QtZGVtb3MvZGVtbzExLykgLyBbc291cmNlXShodHRwczovL2dpdGh1Yi5j
b20vcnVhbnlmL3JlYWN0LWRlbW9zL2Jsb2IvbWFzdGVyL2RlbW8xMS9pbmRl
eC5odG1sKQoKSG93IHRvIGdldCB0aGUgZGF0YSBvZiBhIGNvbXBvbmVudCBm
cm9tIGEgc2VydmVyIG9yIGFuIEFQSSBwcm92aWRlcj8gVGhlIGFuc3dlciBp
cyB1c2luZyBBamF4IHRvIGZldGNoIGRhdGEgaW4gdGhlIGV2ZW50IGhhbmRs
ZXIgb2YgYGNvbXBvbmVudERpZE1vdW50YC4gV2hlbiB0aGUgc2VydmVyIHJl
c3BvbnNlIGFycml2ZXMsIHN0b3JlIHRoZSBkYXRhIHdpdGggYHRoaXMuc2V0
U3RhdGUoKWAgdG8gdHJpZ2dlciBhIHJlLXJlbmRlciBvZiB5b3VyIFVJLgoK
YGBganMKY2xhc3MgVXNlckdpc3QgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQg
ewogIGNvbnN0cnVjdG9yKHByb3BzKSB7CiAgICBzdXBlcihwcm9wcykKICAg
IHRoaXMuc3RhdGUgPSB7CiAgICAgIHVzZXJuYW1lOiAnJywKICAgICAgbGFz
dEdpc3RVcmw6ICcnCiAgICB9OwogIH0KCiAgY29tcG9uZW50RGlkTW91bnQo
KSB7CiAgICAkLmdldCh0aGlzLnByb3BzLnNvdXJjZSwgZnVuY3Rpb24ocmVz
dWx0KSB7CiAgICAgIHZhciBsYXN0R2lzdCA9IHJlc3VsdFswXTsKICAgICAg
dGhpcy5zZXRTdGF0ZSh7CiAgICAgICAgdXNlcm5hbWU6IGxhc3RHaXN0Lm93
bmVyLmxvZ2luLAogICAgICAgIGxhc3RHaXN0VXJsOiBsYXN0R2lzdC5odG1s
X3VybAogICAgICB9KTsKICAgIH0uYmluZCh0aGlzKSk7CiAgfQoKICByZW5k
ZXIoKSB7CiAgICByZXR1cm4gKAogICAgICA8ZGl2PgogICAgICAgIHt0aGlz
LnN0YXRlLnVzZXJuYW1lfSdzIGxhc3QgZ2lzdCBpcwogICAgICAgIDxhIGhy
ZWY9e3RoaXMuc3RhdGUubGFzdEdpc3RVcmx9PmhlcmU8L2E+LgogICAgICA8
L2Rpdj4KICAgICk7CiAgfQp9CgpSZWFjdERPTS5yZW5kZXIoCiAgPFVzZXJH
aXN0IHNvdXJjZT0iaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS91c2Vycy9vY3Rv
Y2F0L2dpc3RzIiAvPiwKICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZXhh
bXBsZScpCik7CmBgYAoKIyMgRGVtbzEyOiBEaXNwbGF5IHZhbHVlIGZyb20g
YSBQcm9taXNlCgpbZGVtb10oaHR0cDovL3J1YW55Zi5naXRodWIuaW8vcmVh
Y3QtZGVtb3MvZGVtbzEyLykgLyBbc291cmNlXShodHRwczovL2dpdGh1Yi5j
b20vcnVhbnlmL3JlYWN0LWRlbW9zL2Jsb2IvbWFzdGVyL2RlbW8xMi9pbmRl
eC5odG1sKQoKVGhpcyBkZW1vIGlzIGluc3BpcmVkIGJ5IE5hdCBQcnljZSdz
IGFydGljbGUgWyJIaWdoZXIgT3JkZXIgUmVhY3QgQ29tcG9uZW50cyJdKGh0
dHA6Ly9uYXRwcnljZS5jb20vYXJ0aWNsZXMvMDAwODE0Lmh0bWwpLgoKSWYg
YSBSZWFjdCBjb21wb25lbnQncyBkYXRhIGlzIHJlY2VpdmVkIGFzeW5jaHJv
bm91c2x5LCB3ZSBjYW4gdXNlIGEgUHJvbWlzZSBvYmplY3QgYXMgdGhlIGNv
bXBvbmVudCdzIHByb3BlcnR5IGFsc28sIGp1c3QgYXMgdGhlIGZvbGxvd2lu
Zy4KCmBgYGphdmFzY3JpcHQKUmVhY3RET00ucmVuZGVyKAogIDxSZXBvTGlz
dCBwcm9taXNlPXskLmdldEpTT04oJ2h0dHBzOi8vYXBpLmdpdGh1Yi5jb20v
c2VhcmNoL3JlcG9zaXRvcmllcz9xPWphdmFzY3JpcHQmc29ydD1zdGFycycp
fSAvPiwKICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZXhhbXBsZScpCik7
CmBgYAoKVGhlIGFib3ZlIGNvZGUgdGFrZXMgZGF0YSBmcm9tIEdpdGh1Yidz
IEFQSSwgYW5kIHRoZSBgUmVwb0xpc3RgIGNvbXBvbmVudCBnZXRzIGEgUHJv
bWlzZSBvYmplY3QgYXMgaXRzIHByb3BlcnR5LgoKTm93LCB3aGlsZSB0aGUg
cHJvbWlzZSBpcyBwZW5kaW5nLCB0aGUgY29tcG9uZW50IGRpc3BsYXlzIGEg
bG9hZGluZyBpbmRpY2F0b3IuIFdoZW4gdGhlIHByb21pc2UgaXMgcmVzb2x2
ZWQgc3VjY2Vzc2Z1bGx5LCB0aGUgY29tcG9uZW50IGRpc3BsYXlzIGEgbGlz
dCBvZiByZXBvc2l0b3J5IGluZm9ybWF0aW9uLiBJZiB0aGUgcHJvbWlzZSBp
cyByZWplY3RlZCwgdGhlIGNvbXBvbmVudCBkaXNwbGF5cyBhbiBlcnJvciBt
ZXNzYWdlLgoKYGBgamF2YXNjcmlwdApjbGFzcyBSZXBvTGlzdCBleHRlbmRz
IFJlYWN0LkNvbXBvbmVudCB7CiAgY29uc3RydWN0b3IocHJvcHMpIHsKICAg
IHN1cGVyKHByb3BzKQogICAgdGhpcy5zdGF0ZSA9IHsKICAgICAgbG9hZGlu
ZzogdHJ1ZSwKICAgICAgZXJyb3I6IG51bGwsCiAgICAgIGRhdGE6IG51bGwK
ICAgIH07CiAgfQoKICBjb21wb25lbnREaWRNb3VudCgpIHsKICAgIHRoaXMu
cHJvcHMucHJvbWlzZS50aGVuKAogICAgICB2YWx1ZSA9PiB0aGlzLnNldFN0
YXRlKHtsb2FkaW5nOiBmYWxzZSwgZGF0YTogdmFsdWV9KSwKICAgICAgZXJy
b3IgPT4gdGhpcy5zZXRTdGF0ZSh7bG9hZGluZzogZmFsc2UsIGVycm9yOiBl
cnJvcn0pKTsKICB9CgogIHJlbmRlcigpIHsKICAgIGlmICh0aGlzLnN0YXRl
LmxvYWRpbmcpIHsKICAgICAgcmV0dXJuIDxzcGFuPkxvYWRpbmcuLi48L3Nw
YW4+OwogICAgfQogICAgZWxzZSBpZiAodGhpcy5zdGF0ZS5lcnJvciAhPT0g
bnVsbCkgewogICAgICByZXR1cm4gPHNwYW4+RXJyb3I6IHt0aGlzLnN0YXRl
LmVycm9yLm1lc3NhZ2V9PC9zcGFuPjsKICAgIH0KICAgIGVsc2UgewogICAg
ICB2YXIgcmVwb3MgPSB0aGlzLnN0YXRlLmRhdGEuaXRlbXM7CiAgICAgIHZh
ciByZXBvTGlzdCA9IHJlcG9zLm1hcChmdW5jdGlvbiAocmVwbywgaW5kZXgp
IHsKICAgICAgICByZXR1cm4gKAogICAgICAgICAgPGxpIGtleT17aW5kZXh9
PjxhIGhyZWY9e3JlcG8uaHRtbF91cmx9PntyZXBvLm5hbWV9PC9hPiAoe3Jl
cG8uc3RhcmdhemVyc19jb3VudH0gc3RhcnMpIDxici8+IHtyZXBvLmRlc2Ny
aXB0aW9ufTwvbGk+CiAgICAgICAgKTsKICAgICAgfSk7CiAgICAgIHJldHVy
biAoCiAgICAgICAgPG1haW4+CiAgICAgICAgICA8aDE+TW9zdCBQb3B1bGFy
IEphdmFTY3JpcHQgUHJvamVjdHMgaW4gR2l0aHViPC9oMT4KICAgICAgICAg
IDxvbD57cmVwb0xpc3R9PC9vbD4KICAgICAgICA8L21haW4+CiAgICAgICk7
CiAgICB9CiAgfQp9CmBgYAoKIyMgRGVtbzEzOiBTZXJ2ZXItc2lkZSByZW5k
ZXJpbmcKCltzb3VyY2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9ydWFueWYvcmVh
Y3QtZGVtb3MvdHJlZS9tYXN0ZXIvZGVtbzEzL3NyYykKClRoaXMgZGVtbyBp
cyBjb3BpZWQgZnJvbSBbZ2l0aHViLmNvbS9taGFydC9yZWFjdC1zZXJ2ZXIt
ZXhhbXBsZV0oaHR0cHM6Ly9naXRodWIuY29tL21oYXJ0L3JlYWN0LXNlcnZl
ci1leGFtcGxlKSwgYnV0IEkgcmV3cm90ZSBpdCB3aXRoIEpTWCBzeW50YXgu
CgpgYGBiYXNoCiMgaW5zdGFsbCB0aGUgZGVwZW5kZW5jaWVzIGluIGRlbW8x
MyBkaXJlY3RvcnkKJCBucG0gaW5zdGFsbAoKIyB0cmFuc2xhdGUgYWxsIGpz
eCBmaWxlIGluIHNyYyBzdWJkaXJlY3RvcnkgdG8ganMgZmlsZQokIG5wbSBy
dW4gYnVpbGQKCiMgbGF1bmNoIGh0dHAgc2VydmVyCiQgbm9kZSBzZXJ2ZXIu
anMKYGBgCgojIyBFeHRyYXMKCiMjIyBQcmVjb21waWxpbmcgSlNYCgpBbGwg
YWJvdmUgZGVtb3MgZG9uJ3QgdXNlIEpTWCBjb21waWxhdGlvbiBmb3IgY2xh
cml0eS4gSW4gcHJvZHVjdGlvbiBlbnZpcm9ubWVudCwgZW5zdXJlIHRvIHBy
ZWNvbXBpbGUgSlNYIGZpbGVzIGJlZm9yZSBwdXR0aW5nIHRoZW0gb25saW5l
LgoKRmlyc3QsIGluc3RhbGwgdGhlIGNvbW1hbmQtbGluZSB0b29scyBbQmFi
ZWxdKGh0dHBzOi8vYmFiZWxqcy5pby9kb2NzL3VzYWdlL2NsaS8pLgoKYGBg
YmFzaAokIG5wbSBpbnN0YWxsIC1nIGJhYmVsCmBgYAoKVGhlbiBwcmVjb21w
aWxlIHlvdXIgSlNYIGZpbGVzKC5qc3gpIGludG8gSmF2YVNjcmlwdCguanMp
LiBDb21waWxpbmcgdGhlIGVudGlyZSBzcmMgZGlyZWN0b3J5IGFuZCBvdXRw
dXQgaXQgdG8gdGhlIGJ1aWxkIGRpcmVjdG9yeSwgeW91IG1heSB1c2UgdGhl
IG9wdGlvbiBgLS1vdXQtZGlyYCBvciBgLWRgLgoKYGBgYmFzaAokIGJhYmVs
IHNyYyAtLW91dC1kaXIgYnVpbGQKYGBgCgpQdXQgdGhlIGNvbXBpbGVkIEpT
IGZpbGVzIGludG8gSFRNTC4KCmBgYGh0bWwKPCFET0NUWVBFIGh0bWw+Cjxo
dG1sPgogIDxoZWFkPgogICAgPHRpdGxlPkhlbGxvIFJlYWN0ITwvdGl0bGU+
CiAgICA8c2NyaXB0IHNyYz0iYnVpbGQvcmVhY3QuanMiPjwvc2NyaXB0Pgog
ICAgPHNjcmlwdCBzcmM9ImJ1aWxkL3JlYWN0LWRvbS5qcyI+PC9zY3JpcHQ+
CiAgICA8IS0tIE5vIG5lZWQgZm9yIEJyb3dzZXIuanMhIC0tPgogIDwvaGVh
ZD4KICA8Ym9keT4KICAgIDxkaXYgaWQ9ImV4YW1wbGUiPjwvZGl2PgogICAg
PHNjcmlwdCBzcmM9ImJ1aWxkL2hlbGxvd29ybGQuanMiPjwvc2NyaXB0Pgog
IDwvYm9keT4KPC9odG1sPgpgYGAKCiMjIFVzZWZ1bCBsaW5rcwoKLSBbUmVh
Y3QncyBvZmZpY2lhbCBzaXRlXShodHRwOi8vZmFjZWJvb2suZ2l0aHViLmlv
L3JlYWN0KQotIFtSZWFjdCdzIG9mZmljaWFsIGV4YW1wbGVzXShodHRwczov
L2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvdHJlZS9tYXN0ZXIvZXhhbXBs
ZXMpCi0gW1JlYWN0IChWaXJ0dWFsKSBET00gVGVybWlub2xvZ3ldKGh0dHA6
Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QvZG9jcy9nbG9zc2FyeS5odG1s
KSwgYnkgU2ViYXN0aWFuIE1hcmtiw6VnZQotIFtUaGUgUmVhY3QgUXVpY2sg
U3RhcnQgR3VpZGVdKGh0dHA6Ly93d3cuamFja2NhbGxpc3Rlci5jb20vMjAx
NS8wMS8wNS90aGUtcmVhY3QtcXVpY2stc3RhcnQtZ3VpZGUuaHRtbCksIGJ5
IEphY2sgQ2FsbGlzdGVyCi0gW0xlYXJuaW5nIFJlYWN0LmpzOiBHZXR0aW5n
IFN0YXJ0ZWQgYW5kIENvbmNlcHRzXShodHRwczovL3Njb3RjaC5pby90dXRv
cmlhbHMvbGVhcm5pbmctcmVhY3QtZ2V0dGluZy1zdGFydGVkLWFuZC1jb25j
ZXB0cyksIGJ5IEtlbiBXaGVlbGVyCi0gW0dldHRpbmcgc3RhcnRlZCB3aXRo
IFJlYWN0XShodHRwOi8vcnlhbmNsYXJrLm1lL2dldHRpbmctc3RhcnRlZC13
aXRoLXJlYWN0KSwgYnkgUnlhbiBDbGFyawotIFtSZWFjdCBKUyBUdXRvcmlh
bCBhbmQgR3VpZGUgdG8gdGhlIEdvdGNoYXNdKGh0dHBzOi8vemFwaWVyLmNv
bS9lbmdpbmVlcmluZy9yZWFjdC1qcy10dXRvcmlhbC1ndWlkZS1nb3RjaGFz
LyksIGJ5IEp1c3RpbiBEZWFsCi0gW1JlYWN0IFByaW1lcl0oaHR0cHM6Ly9n
aXRodWIuY29tL0JpbmFyeU11c2UvcmVhY3QtcHJpbWVyKSwgYnkgQmluYXJ5
IE11c2UKLSBbalF1ZXJ5IHZlcnN1cyBSZWFjdC5qcyB0aGlua2luZ10oaHR0
cDovL2Jsb2cuemlnb21pci5jb20vcmVhY3QuanMvanF1ZXJ5LzIwMTUvMDEv
MTEvanF1ZXJ5LXZlcnN1cy1yZWFjdC10aGlua2luZy5odG1sKSwgYnkgemln
b21pcgoKIyMgTGljZW5zZQoKQlNEIGxpY2Vuc2VkCg==
",,14764,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'q',887025,b'A promise library for JavaScript',b'JavaScript',118,14764,,442,False,b'https://api.github.com/repos/kriskowal/q/forks',"WyFbQnVpbGQgU3RhdHVzXShodHRwczovL3NlY3VyZS50cmF2aXMtY2kub3Jn
L2tyaXNrb3dhbC9xLnN2Zz9icmFuY2g9bWFzdGVyKV0oaHR0cDovL3RyYXZp
cy1jaS5vcmcva3Jpc2tvd2FsL3EpClshW0NETkpTXShodHRwczovL2ltZy5z
aGllbGRzLmlvL2NkbmpzL3YvcS5qcy5zdmcpXShodHRwczovL2NkbmpzLmNv
bS9saWJyYXJpZXMvcS5qcykKCjxhIGhyZWY9Imh0dHA6Ly9wcm9taXNlcy1h
cGx1cy5naXRodWIuY29tL3Byb21pc2VzLXNwZWMiPgogICAgPGltZyBzcmM9
Imh0dHA6Ly9rcmlza293YWwuZ2l0aHViLmlvL3EvcS5wbmciIGFsaWduPSJy
aWdodCIgYWx0PSJRIGxvZ28iIC8+CjwvYT4KCklmIGEgZnVuY3Rpb24gY2Fu
bm90IHJldHVybiBhIHZhbHVlIG9yIHRocm93IGFuIGV4Y2VwdGlvbiB3aXRo
b3V0CmJsb2NraW5nLCBpdCBjYW4gcmV0dXJuIGEgcHJvbWlzZSBpbnN0ZWFk
LiAgQSBwcm9taXNlIGlzIGFuIG9iamVjdAp0aGF0IHJlcHJlc2VudHMgdGhl
IHJldHVybiB2YWx1ZSBvciB0aGUgdGhyb3duIGV4Y2VwdGlvbiB0aGF0IHRo
ZQpmdW5jdGlvbiBtYXkgZXZlbnR1YWxseSBwcm92aWRlLiAgQSBwcm9taXNl
IGNhbiBhbHNvIGJlIHVzZWQgYXMgYQpwcm94eSBmb3IgYSBbcmVtb3RlIG9i
amVjdF1bUS1Db25uZWN0aW9uXSB0byBvdmVyY29tZSBsYXRlbmN5LgoKW1Et
Q29ubmVjdGlvbl06IGh0dHBzOi8vZ2l0aHViLmNvbS9rcmlza293YWwvcS1j
b25uZWN0aW9uCgpPbiB0aGUgZmlyc3QgcGFzcywgcHJvbWlzZXMgY2FuIG1p
dGlnYXRlIHRoZSDigJxbUHlyYW1pZCBvZgpEb29tXVtQT0Rd4oCdOiB0aGUg
c2l0dWF0aW9uIHdoZXJlIGNvZGUgbWFyY2hlcyB0byB0aGUgcmlnaHQgZmFz
dGVyCnRoYW4gaXQgbWFyY2hlcyBmb3J3YXJkLgoKW1BPRF06IGh0dHA6Ly9j
YWxjdWxpc3Qub3JnL2Jsb2cvMjAxMS8xMi8xNC93aHktY29yb3V0aW5lcy13
b250LXdvcmstb24tdGhlLXdlYi8KCmBgYGphdmFzY3JpcHQKc3RlcDEoZnVu
Y3Rpb24gKHZhbHVlMSkgewogICAgc3RlcDIodmFsdWUxLCBmdW5jdGlvbih2
YWx1ZTIpIHsKICAgICAgICBzdGVwMyh2YWx1ZTIsIGZ1bmN0aW9uKHZhbHVl
MykgewogICAgICAgICAgICBzdGVwNCh2YWx1ZTMsIGZ1bmN0aW9uKHZhbHVl
NCkgewogICAgICAgICAgICAgICAgLy8gRG8gc29tZXRoaW5nIHdpdGggdmFs
dWU0CiAgICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgfSk7Cn0pOwpg
YGAKCldpdGggYSBwcm9taXNlIGxpYnJhcnksIHlvdSBjYW4gZmxhdHRlbiB0
aGUgcHlyYW1pZC4KCmBgYGphdmFzY3JpcHQKUS5mY2FsbChwcm9taXNlZFN0
ZXAxKQoudGhlbihwcm9taXNlZFN0ZXAyKQoudGhlbihwcm9taXNlZFN0ZXAz
KQoudGhlbihwcm9taXNlZFN0ZXA0KQoudGhlbihmdW5jdGlvbiAodmFsdWU0
KSB7CiAgICAvLyBEbyBzb21ldGhpbmcgd2l0aCB2YWx1ZTQKfSkKLmNhdGNo
KGZ1bmN0aW9uIChlcnJvcikgewogICAgLy8gSGFuZGxlIGFueSBlcnJvciBm
cm9tIGFsbCBhYm92ZSBzdGVwcwp9KQouZG9uZSgpOwpgYGAKCldpdGggdGhp
cyBhcHByb2FjaCwgeW91IGFsc28gZ2V0IGltcGxpY2l0IGVycm9yIHByb3Bh
Z2F0aW9uLCBqdXN0IGxpa2UgYHRyeWAsCmBjYXRjaGAsIGFuZCBgZmluYWxs
eWAuICBBbiBlcnJvciBpbiBgcHJvbWlzZWRTdGVwMWAgd2lsbCBmbG93IGFs
bCB0aGUgd2F5IHRvCnRoZSBgY2F0Y2hgIGZ1bmN0aW9uLCB3aGVyZSBpdOKA
mXMgY2F1Z2h0IGFuZCBoYW5kbGVkLiAgKEhlcmUgYHByb21pc2VkU3RlcE5g
IGlzCmEgdmVyc2lvbiBvZiBgc3RlcE5gIHRoYXQgcmV0dXJucyBhIHByb21p
c2UuKQoKVGhlIGNhbGxiYWNrIGFwcHJvYWNoIGlzIGNhbGxlZCBhbiDigJxp
bnZlcnNpb24gb2YgY29udHJvbOKAnS4KQSBmdW5jdGlvbiB0aGF0IGFjY2Vw
dHMgYSBjYWxsYmFjayBpbnN0ZWFkIG9mIGEgcmV0dXJuIHZhbHVlCmlzIHNh
eWluZywg4oCcRG9u4oCZdCBjYWxsIG1lLCBJ4oCZbGwgY2FsbCB5b3Uu4oCd
LiAgUHJvbWlzZXMKW3VuLWludmVydF1bSU9DXSB0aGUgaW52ZXJzaW9uLCBj
bGVhbmx5IHNlcGFyYXRpbmcgdGhlIGlucHV0CmFyZ3VtZW50cyBmcm9tIGNv
bnRyb2wgZmxvdyBhcmd1bWVudHMuICBUaGlzIHNpbXBsaWZpZXMgdGhlCnVz
ZSBhbmQgY3JlYXRpb24gb2YgQVBJ4oCZcywgcGFydGljdWxhcmx5IHZhcmlh
ZGljLApyZXN0IGFuZCBzcHJlYWQgYXJndW1lbnRzLgoKW0lPQ106IGh0dHA6
Ly93d3cuc2xpZGVzaGFyZS5uZXQvZG9tZW5pY2Rlbmljb2xhL2NhbGxiYWNr
cy1wcm9taXNlcy1hbmQtY29yb3V0aW5lcy1vaC1teS10aGUtZXZvbHV0aW9u
LW9mLWFzeW5jaHJvbmljaXR5LWluLWphdmFzY3JpcHQKCgojIyBHZXR0aW5n
IFN0YXJ0ZWQKClRoZSBRIG1vZHVsZSBjYW4gYmUgbG9hZGVkIGFzOgoKLSAg
IEEgYGA8c2NyaXB0PmBgIHRhZyAoY3JlYXRpbmcgYSBgYFFgYCBnbG9iYWwg
dmFyaWFibGUpOiB+Mi41IEtCIG1pbmlmaWVkIGFuZAogICAgZ3ppcHBlZC4K
LSAgIEEgTm9kZS5qcyBhbmQgQ29tbW9uSlMgbW9kdWxlLCBhdmFpbGFibGUg
aW4gW25wbV0oaHR0cHM6Ly9ucG1qcy5vcmcvKSBhcwogICAgdGhlIFtxXSho
dHRwczovL25wbWpzLm9yZy9wYWNrYWdlL3EpIHBhY2thZ2UKLSAgIEFuIEFN
RCBtb2R1bGUKLSAgIEEgW2NvbXBvbmVudF0oaHR0cHM6Ly9naXRodWIuY29t
L2NvbXBvbmVudC9jb21wb25lbnQpIGFzIGBgbWljcm9qcy9xYGAKLSAgIFVz
aW5nIFtib3dlcl0oaHR0cDovL2Jvd2VyLmlvLykgYXMgYHEjXjEuNC4xYAot
ICAgVXNpbmcgW051R2V0XShodHRwOi8vbnVnZXQub3JnLykgYXMgW1FdKGh0
dHBzOi8vbnVnZXQub3JnL3BhY2thZ2VzL3EpCgpRIGNhbiBleGNoYW5nZSBw
cm9taXNlcyB3aXRoIGpRdWVyeSwgRG9qbywgV2hlbi5qcywgV2luSlMsIGFu
ZCBtb3JlLgoKIyMgUmVzb3VyY2VzCgpPdXIgW3dpa2ldW10gY29udGFpbnMg
YSBudW1iZXIgb2YgdXNlZnVsIHJlc291cmNlcywgaW5jbHVkaW5nOgoKLSBB
IG1ldGhvZC1ieS1tZXRob2QgW1EgQVBJIHJlZmVyZW5jZV1bcmVmZXJlbmNl
XS4KLSBBIGdyb3dpbmcgW2V4YW1wbGVzIGdhbGxlcnldW2V4YW1wbGVzXSwg
c2hvd2luZyBob3cgUSBjYW4gYmUgdXNlZCB0byBtYWtlCiAgZXZlcnl0aGlu
ZyBiZXR0ZXIuIEZyb20gWEhSIHRvIGRhdGFiYXNlIGFjY2VzcyB0byBhY2Nl
c3NpbmcgdGhlIEZsaWNrciBBUEksCiAgUSBpcyB0aGVyZSBmb3IgeW91Lgot
IFRoZXJlIGFyZSBtYW55IGxpYnJhcmllcyB0aGF0IHByb2R1Y2UgYW5kIGNv
bnN1bWUgUSBwcm9taXNlcyBmb3IgZXZlcnl0aGluZwogIGZyb20gZmlsZSBz
eXN0ZW0vZGF0YWJhc2UgYWNjZXNzIG9yIFJQQyB0byB0ZW1wbGF0aW5nLiBG
b3IgYSBsaXN0IG9mIHNvbWUgb2YKICB0aGUgbW9yZSBwb3B1bGFyIG9uZXMs
IHNlZSBbTGlicmFyaWVzXVtdLgotIElmIHlvdSB3YW50IG1hdGVyaWFscyB0
aGF0IGludHJvZHVjZSB0aGUgcHJvbWlzZSBjb25jZXB0IGdlbmVyYWxseSwg
YW5kIHRoZQogIGJlbG93IHR1dG9yaWFsIGlzbid0IGRvaW5nIGl0IGZvciB5
b3UsIGNoZWNrIG91dCBvdXIgY29sbGVjdGlvbiBvZgogIFtwcmVzZW50YXRp
b25zLCBibG9nIHBvc3RzLCBhbmQgcG9kY2FzdHNdW3Jlc291cmNlc10uCi0g
QSBndWlkZSBmb3IgdGhvc2UgW2NvbWluZyBmcm9tIGpRdWVyeSdzIGAkLkRl
ZmVycmVkYF1banF1ZXJ5XS4KCldlJ2QgYWxzbyBsb3ZlIHRvIGhhdmUgeW91
IGpvaW4gdGhlIFEtQ29udGludXVtIFttYWlsaW5nIGxpc3RdW10uCgpbd2lr
aV06IGh0dHBzOi8vZ2l0aHViLmNvbS9rcmlza293YWwvcS93aWtpCltyZWZl
cmVuY2VdOiBodHRwczovL2dpdGh1Yi5jb20va3Jpc2tvd2FsL3Evd2lraS9B
UEktUmVmZXJlbmNlCltleGFtcGxlc106IGh0dHBzOi8vZ2l0aHViLmNvbS9r
cmlza293YWwvcS93aWtpL0V4YW1wbGVzLUdhbGxlcnkKW0xpYnJhcmllc106
IGh0dHBzOi8vZ2l0aHViLmNvbS9rcmlza293YWwvcS93aWtpL0xpYnJhcmll
cwpbcmVzb3VyY2VzXTogaHR0cHM6Ly9naXRodWIuY29tL2tyaXNrb3dhbC9x
L3dpa2kvR2VuZXJhbC1Qcm9taXNlLVJlc291cmNlcwpbanF1ZXJ5XTogaHR0
cHM6Ly9naXRodWIuY29tL2tyaXNrb3dhbC9xL3dpa2kvQ29taW5nLWZyb20t
alF1ZXJ5ClttYWlsaW5nIGxpc3RdOiBodHRwczovL2dyb3Vwcy5nb29nbGUu
Y29tL2ZvcnVtLyMhZm9ydW0vcS1jb250aW51dW0KCgojIyBUdXRvcmlhbAoK
UHJvbWlzZXMgaGF2ZSBhIGBgdGhlbmBgIG1ldGhvZCwgd2hpY2ggeW91IGNh
biB1c2UgdG8gZ2V0IHRoZSBldmVudHVhbApyZXR1cm4gdmFsdWUgKGZ1bGZp
bGxtZW50KSBvciB0aHJvd24gZXhjZXB0aW9uIChyZWplY3Rpb24pLgoKYGBg
amF2YXNjcmlwdApwcm9taXNlTWVTb21ldGhpbmcoKQoudGhlbihmdW5jdGlv
biAodmFsdWUpIHsKfSwgZnVuY3Rpb24gKHJlYXNvbikgewp9KTsKYGBgCgpJ
ZiBgYHByb21pc2VNZVNvbWV0aGluZ2BgIHJldHVybnMgYSBwcm9taXNlIHRo
YXQgZ2V0cyBmdWxmaWxsZWQgbGF0ZXIKd2l0aCBhIHJldHVybiB2YWx1ZSwg
dGhlIGZpcnN0IGZ1bmN0aW9uICh0aGUgZnVsZmlsbG1lbnQgaGFuZGxlcikg
d2lsbCBiZQpjYWxsZWQgd2l0aCB0aGUgdmFsdWUuICBIb3dldmVyLCBpZiB0
aGUgYGBwcm9taXNlTWVTb21ldGhpbmdgYCBmdW5jdGlvbgpnZXRzIHJlamVj
dGVkIGxhdGVyIGJ5IGEgdGhyb3duIGV4Y2VwdGlvbiwgdGhlIHNlY29uZCBm
dW5jdGlvbiAodGhlCnJlamVjdGlvbiBoYW5kbGVyKSB3aWxsIGJlIGNhbGxl
ZCB3aXRoIHRoZSBleGNlcHRpb24uCgpOb3RlIHRoYXQgcmVzb2x1dGlvbiBv
ZiBhIHByb21pc2UgaXMgYWx3YXlzIGFzeW5jaHJvbm91czogdGhhdCBpcywg
dGhlCmZ1bGZpbGxtZW50IG9yIHJlamVjdGlvbiBoYW5kbGVyIHdpbGwgYWx3
YXlzIGJlIGNhbGxlZCBpbiB0aGUgbmV4dCB0dXJuIG9mIHRoZQpldmVudCBs
b29wIChpLmUuIGBwcm9jZXNzLm5leHRUaWNrYCBpbiBOb2RlKS4gVGhpcyBn
aXZlcyB5b3UgYSBuaWNlCmd1YXJhbnRlZSB3aGVuIG1lbnRhbGx5IHRyYWNp
bmcgdGhlIGZsb3cgb2YgeW91ciBjb2RlLCBuYW1lbHkgdGhhdApgYHRoZW5g
YCB3aWxsIGFsd2F5cyByZXR1cm4gYmVmb3JlIGVpdGhlciBoYW5kbGVyIGlz
IGV4ZWN1dGVkLgoKSW4gdGhpcyB0dXRvcmlhbCwgd2UgYmVnaW4gd2l0aCBo
b3cgdG8gY29uc3VtZSBhbmQgd29yayB3aXRoIHByb21pc2VzLiBXZSdsbAp0
YWxrIGFib3V0IGhvdyB0byBjcmVhdGUgdGhlbSwgYW5kIHRodXMgY3JlYXRl
IGZ1bmN0aW9ucyBsaWtlCmBwcm9taXNlTWVTb21ldGhpbmdgIHRoYXQgcmV0
dXJuIHByb21pc2VzLCBbYmVsb3ddKCN0aGUtYmVnaW5uaW5nKS4KCgojIyMg
UHJvcGFnYXRpb24KClRoZSBgYHRoZW5gYCBtZXRob2QgcmV0dXJucyBhIHBy
b21pc2UsIHdoaWNoIGluIHRoaXMgZXhhbXBsZSwgSeKAmW0KYXNzaWduaW5n
IHRvIGBgb3V0cHV0UHJvbWlzZWBgLgoKYGBgamF2YXNjcmlwdAp2YXIgb3V0
cHV0UHJvbWlzZSA9IGdldElucHV0UHJvbWlzZSgpCi50aGVuKGZ1bmN0aW9u
IChpbnB1dCkgewp9LCBmdW5jdGlvbiAocmVhc29uKSB7Cn0pOwpgYGAKClRo
ZSBgYG91dHB1dFByb21pc2VgYCB2YXJpYWJsZSBiZWNvbWVzIGEgbmV3IHBy
b21pc2UgZm9yIHRoZSByZXR1cm4KdmFsdWUgb2YgZWl0aGVyIGhhbmRsZXIu
ICBTaW5jZSBhIGZ1bmN0aW9uIGNhbiBvbmx5IGVpdGhlciByZXR1cm4gYQp2
YWx1ZSBvciB0aHJvdyBhbiBleGNlcHRpb24sIG9ubHkgb25lIGhhbmRsZXIg
d2lsbCBldmVyIGJlIGNhbGxlZCBhbmQgaXQKd2lsbCBiZSByZXNwb25zaWJs
ZSBmb3IgcmVzb2x2aW5nIGBgb3V0cHV0UHJvbWlzZWBgLgoKLSAgIElmIHlv
dSByZXR1cm4gYSB2YWx1ZSBpbiBhIGhhbmRsZXIsIGBgb3V0cHV0UHJvbWlz
ZWBgIHdpbGwgZ2V0CiAgICBmdWxmaWxsZWQuCgotICAgSWYgeW91IHRocm93
IGFuIGV4Y2VwdGlvbiBpbiBhIGhhbmRsZXIsIGBgb3V0cHV0UHJvbWlzZWBg
IHdpbGwgZ2V0CiAgICByZWplY3RlZC4KCi0gICBJZiB5b3UgcmV0dXJuIGEg
Kipwcm9taXNlKiogaW4gYSBoYW5kbGVyLCBgYG91dHB1dFByb21pc2VgYCB3
aWxsCiAgICDigJxiZWNvbWXigJ0gdGhhdCBwcm9taXNlLiAgQmVpbmcgYWJs
ZSB0byBiZWNvbWUgYSBuZXcgcHJvbWlzZSBpcyB1c2VmdWwKICAgIGZvciBt
YW5hZ2luZyBkZWxheXMsIGNvbWJpbmluZyByZXN1bHRzLCBvciByZWNvdmVy
aW5nIGZyb20gZXJyb3JzLgoKSWYgdGhlIGBgZ2V0SW5wdXRQcm9taXNlKClg
YCBwcm9taXNlIGdldHMgcmVqZWN0ZWQgYW5kIHlvdSBvbWl0IHRoZQpyZWpl
Y3Rpb24gaGFuZGxlciwgdGhlICoqZXJyb3IqKiB3aWxsIGdvIHRvIGBgb3V0
cHV0UHJvbWlzZWBgOgoKYGBgamF2YXNjcmlwdAp2YXIgb3V0cHV0UHJvbWlz
ZSA9IGdldElucHV0UHJvbWlzZSgpCi50aGVuKGZ1bmN0aW9uICh2YWx1ZSkg
ewp9KTsKYGBgCgpJZiB0aGUgaW5wdXQgcHJvbWlzZSBnZXRzIGZ1bGZpbGxl
ZCBhbmQgeW91IG9taXQgdGhlIGZ1bGZpbGxtZW50IGhhbmRsZXIsIHRoZQoq
KnZhbHVlKiogd2lsbCBnbyB0byBgYG91dHB1dFByb21pc2VgYDoKCmBgYGph
dmFzY3JpcHQKdmFyIG91dHB1dFByb21pc2UgPSBnZXRJbnB1dFByb21pc2Uo
KQoudGhlbihudWxsLCBmdW5jdGlvbiAoZXJyb3IpIHsKfSk7CmBgYAoKUSBw
cm9taXNlcyBwcm92aWRlIGEgYGBmYWlsYGAgc2hvcnRoYW5kIGZvciBgYHRo
ZW5gYCB3aGVuIHlvdSBhcmUgb25seQppbnRlcmVzdGVkIGluIGhhbmRsaW5n
IHRoZSBlcnJvcjoKCmBgYGphdmFzY3JpcHQKdmFyIG91dHB1dFByb21pc2Ug
PSBnZXRJbnB1dFByb21pc2UoKQouZmFpbChmdW5jdGlvbiAoZXJyb3IpIHsK
fSk7CmBgYAoKSWYgeW91IGFyZSB3cml0aW5nIEphdmFTY3JpcHQgZm9yIG1v
ZGVybiBlbmdpbmVzIG9ubHkgb3IgdXNpbmcKQ29mZmVlU2NyaXB0LCB5b3Ug
bWF5IHVzZSBgY2F0Y2hgIGluc3RlYWQgb2YgYGZhaWxgLgoKUHJvbWlzZXMg
YWxzbyBoYXZlIGEgYGBmaW5gYCBmdW5jdGlvbiB0aGF0IGlzIGxpa2UgYSBg
YGZpbmFsbHlgYCBjbGF1c2UuClRoZSBmaW5hbCBoYW5kbGVyIGdldHMgY2Fs
bGVkLCB3aXRoIG5vIGFyZ3VtZW50cywgd2hlbiB0aGUgcHJvbWlzZQpyZXR1
cm5lZCBieSBgYGdldElucHV0UHJvbWlzZSgpYGAgZWl0aGVyIHJldHVybnMg
YSB2YWx1ZSBvciB0aHJvd3MgYW4KZXJyb3IuICBUaGUgdmFsdWUgcmV0dXJu
ZWQgb3IgZXJyb3IgdGhyb3duIGJ5IGBgZ2V0SW5wdXRQcm9taXNlKClgYApw
YXNzZXMgZGlyZWN0bHkgdG8gYGBvdXRwdXRQcm9taXNlYGAgdW5sZXNzIHRo
ZSBmaW5hbCBoYW5kbGVyIGZhaWxzLCBhbmQKbWF5IGJlIGRlbGF5ZWQgaWYg
dGhlIGZpbmFsIGhhbmRsZXIgcmV0dXJucyBhIHByb21pc2UuCgpgYGBqYXZh
c2NyaXB0CnZhciBvdXRwdXRQcm9taXNlID0gZ2V0SW5wdXRQcm9taXNlKCkK
LmZpbihmdW5jdGlvbiAoKSB7CiAgICAvLyBjbG9zZSBmaWxlcywgZGF0YWJh
c2UgY29ubmVjdGlvbnMsIHN0b3Agc2VydmVycywgY29uY2x1ZGUgdGVzdHMK
fSk7CmBgYAoKLSAgIElmIHRoZSBoYW5kbGVyIHJldHVybnMgYSB2YWx1ZSwg
dGhlIHZhbHVlIGlzIGlnbm9yZWQKLSAgIElmIHRoZSBoYW5kbGVyIHRocm93
cyBhbiBlcnJvciwgdGhlIGVycm9yIHBhc3NlcyB0byBgYG91dHB1dFByb21p
c2VgYAotICAgSWYgdGhlIGhhbmRsZXIgcmV0dXJucyBhIHByb21pc2UsIGBg
b3V0cHV0UHJvbWlzZWBgIGdldHMgcG9zdHBvbmVkLiAgVGhlCiAgICBldmVu
dHVhbCB2YWx1ZSBvciBlcnJvciBoYXMgdGhlIHNhbWUgZWZmZWN0IGFzIGFu
IGltbWVkaWF0ZSByZXR1cm4KICAgIHZhbHVlIG9yIHRocm93biBlcnJvcjog
YSB2YWx1ZSB3b3VsZCBiZSBpZ25vcmVkLCBhbiBlcnJvciB3b3VsZCBiZQog
ICAgZm9yd2FyZGVkLgoKSWYgeW91IGFyZSB3cml0aW5nIEphdmFTY3JpcHQg
Zm9yIG1vZGVybiBlbmdpbmVzIG9ubHkgb3IgdXNpbmcKQ29mZmVlU2NyaXB0
LCB5b3UgbWF5IHVzZSBgZmluYWxseWAgaW5zdGVhZCBvZiBgZmluYC4KCiMj
IyBDaGFpbmluZwoKVGhlcmUgYXJlIHR3byB3YXlzIHRvIGNoYWluIHByb21p
c2VzLiAgWW91IGNhbiBjaGFpbiBwcm9taXNlcyBlaXRoZXIKaW5zaWRlIG9y
IG91dHNpZGUgaGFuZGxlcnMuICBUaGUgbmV4dCB0d28gZXhhbXBsZXMgYXJl
IGVxdWl2YWxlbnQuCgpgYGBqYXZhc2NyaXB0CnJldHVybiBnZXRVc2VybmFt
ZSgpCi50aGVuKGZ1bmN0aW9uICh1c2VybmFtZSkgewogICAgcmV0dXJuIGdl
dFVzZXIodXNlcm5hbWUpCiAgICAudGhlbihmdW5jdGlvbiAodXNlcikgewog
ICAgICAgIC8vIGlmIHdlIGdldCBoZXJlIHdpdGhvdXQgYW4gZXJyb3IsCiAg
ICAgICAgLy8gdGhlIHZhbHVlIHJldHVybmVkIGhlcmUKICAgICAgICAvLyBv
ciB0aGUgZXhjZXB0aW9uIHRocm93biBoZXJlCiAgICAgICAgLy8gcmVzb2x2
ZXMgdGhlIHByb21pc2UgcmV0dXJuZWQKICAgICAgICAvLyBieSB0aGUgZmly
c3QgbGluZQogICAgfSkKfSk7CmBgYAoKYGBgamF2YXNjcmlwdApyZXR1cm4g
Z2V0VXNlcm5hbWUoKQoudGhlbihmdW5jdGlvbiAodXNlcm5hbWUpIHsKICAg
IHJldHVybiBnZXRVc2VyKHVzZXJuYW1lKTsKfSkKLnRoZW4oZnVuY3Rpb24g
KHVzZXIpIHsKICAgIC8vIGlmIHdlIGdldCBoZXJlIHdpdGhvdXQgYW4gZXJy
b3IsCiAgICAvLyB0aGUgdmFsdWUgcmV0dXJuZWQgaGVyZQogICAgLy8gb3Ig
dGhlIGV4Y2VwdGlvbiB0aHJvd24gaGVyZQogICAgLy8gcmVzb2x2ZXMgdGhl
IHByb21pc2UgcmV0dXJuZWQKICAgIC8vIGJ5IHRoZSBmaXJzdCBsaW5lCn0p
OwpgYGAKClRoZSBvbmx5IGRpZmZlcmVuY2UgaXMgbmVzdGluZy4gIEl04oCZ
cyB1c2VmdWwgdG8gbmVzdCBoYW5kbGVycyBpZiB5b3UKbmVlZCB0byBjYXB0
dXJlIG11bHRpcGxlIGlucHV0IHZhbHVlcyBpbiB5b3VyIGNsb3N1cmUuCgpg
YGBqYXZhc2NyaXB0CmZ1bmN0aW9uIGF1dGhlbnRpY2F0ZSgpIHsKICAgIHJl
dHVybiBnZXRVc2VybmFtZSgpCiAgICAudGhlbihmdW5jdGlvbiAodXNlcm5h
bWUpIHsKICAgICAgICByZXR1cm4gZ2V0VXNlcih1c2VybmFtZSk7CiAgICB9
KQogICAgLy8gY2hhaW5lZCBiZWNhdXNlIHdlIHdpbGwgbm90IG5lZWQgdGhl
IHVzZXIgbmFtZSBpbiB0aGUgbmV4dCBldmVudAogICAgLnRoZW4oZnVuY3Rp
b24gKHVzZXIpIHsKICAgICAgICByZXR1cm4gZ2V0UGFzc3dvcmQoKQogICAg
ICAgIC8vIG5lc3RlZCBiZWNhdXNlIHdlIG5lZWQgYm90aCB1c2VyIGFuZCBw
YXNzd29yZCBuZXh0CiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHBhc3N3b3Jk
KSB7CiAgICAgICAgICAgIGlmICh1c2VyLnBhc3N3b3JkSGFzaCAhPT0gaGFz
aChwYXNzd29yZCkpIHsKICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJv
cigiQ2FuJ3QgYXV0aGVudGljYXRlIik7CiAgICAgICAgICAgIH0KICAgICAg
ICB9KTsKICAgIH0pOwp9CmBgYAoKCiMjIyBDb21iaW5hdGlvbgoKWW91IGNh
biB0dXJuIGFuIGFycmF5IG9mIHByb21pc2VzIGludG8gYSBwcm9taXNlIGZv
ciB0aGUgd2hvbGUsCmZ1bGZpbGxlZCBhcnJheSB1c2luZyBgYGFsbGBgLgoK
YGBgamF2YXNjcmlwdApyZXR1cm4gUS5hbGwoWwogICAgZXZlbnR1YWxBZGQo
MiwgMiksCiAgICBldmVudHVhbEFkZCgxMCwgMjApCl0pOwpgYGAKCklmIHlv
dSBoYXZlIGEgcHJvbWlzZSBmb3IgYW4gYXJyYXksIHlvdSBjYW4gdXNlIGBg
c3ByZWFkYGAgYXMgYQpyZXBsYWNlbWVudCBmb3IgYGB0aGVuYGAuICBUaGUg
YGBzcHJlYWRgYCBmdW5jdGlvbiDigJxzcHJlYWRz4oCdIHRoZQp2YWx1ZXMg
b3ZlciB0aGUgYXJndW1lbnRzIG9mIHRoZSBmdWxmaWxsbWVudCBoYW5kbGVy
LiAgVGhlIHJlamVjdGlvbiBoYW5kbGVyCndpbGwgZ2V0IGNhbGxlZCBhdCB0
aGUgZmlyc3Qgc2lnbiBvZiBmYWlsdXJlLiAgVGhhdCBpcywgd2hpY2hldmVy
IG9mCnRoZSByZWNlaXZlZCBwcm9taXNlcyBmYWlscyBmaXJzdCBnZXRzIGhh
bmRsZWQgYnkgdGhlIHJlamVjdGlvbiBoYW5kbGVyLgoKYGBgamF2YXNjcmlw
dApmdW5jdGlvbiBldmVudHVhbEFkZChhLCBiKSB7CiAgICByZXR1cm4gUS5z
cHJlYWQoW2EsIGJdLCBmdW5jdGlvbiAoYSwgYikgewogICAgICAgIHJldHVy
biBhICsgYjsKICAgIH0pCn0KYGBgCgpCdXQgYGBzcHJlYWRgYCBjYWxscyBg
YGFsbGBgIGluaXRpYWxseSwgc28geW91IGNhbiBza2lwIGl0IGluIGNoYWlu
cy4KCmBgYGphdmFzY3JpcHQKcmV0dXJuIGdldFVzZXJuYW1lKCkKLnRoZW4o
ZnVuY3Rpb24gKHVzZXJuYW1lKSB7CiAgICByZXR1cm4gW3VzZXJuYW1lLCBn
ZXRVc2VyKHVzZXJuYW1lKV07Cn0pCi5zcHJlYWQoZnVuY3Rpb24gKHVzZXJu
YW1lLCB1c2VyKSB7Cn0pOwpgYGAKClRoZSBgYGFsbGBgIGZ1bmN0aW9uIHJl
dHVybnMgYSBwcm9taXNlIGZvciBhbiBhcnJheSBvZiB2YWx1ZXMuICBXaGVu
IHRoaXMKcHJvbWlzZSBpcyBmdWxmaWxsZWQsIHRoZSBhcnJheSBjb250YWlu
cyB0aGUgZnVsZmlsbG1lbnQgdmFsdWVzIG9mIHRoZSBvcmlnaW5hbApwcm9t
aXNlcywgaW4gdGhlIHNhbWUgb3JkZXIgYXMgdGhvc2UgcHJvbWlzZXMuICBJ
ZiBvbmUgb2YgdGhlIGdpdmVuIHByb21pc2VzCmlzIHJlamVjdGVkLCB0aGUg
cmV0dXJuZWQgcHJvbWlzZSBpcyBpbW1lZGlhdGVseSByZWplY3RlZCwgbm90
IHdhaXRpbmcgZm9yIHRoZQpyZXN0IG9mIHRoZSBiYXRjaC4gIElmIHlvdSB3
YW50IHRvIHdhaXQgZm9yIGFsbCBvZiB0aGUgcHJvbWlzZXMgdG8gZWl0aGVy
IGJlCmZ1bGZpbGxlZCBvciByZWplY3RlZCwgeW91IGNhbiB1c2UgYGBhbGxT
ZXR0bGVkYGAuCgpgYGBqYXZhc2NyaXB0ClEuYWxsU2V0dGxlZChwcm9taXNl
cykKLnRoZW4oZnVuY3Rpb24gKHJlc3VsdHMpIHsKICAgIHJlc3VsdHMuZm9y
RWFjaChmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgICAgaWYgKHJlc3VsdC5z
dGF0ZSA9PT0gImZ1bGZpbGxlZCIpIHsKICAgICAgICAgICAgdmFyIHZhbHVl
ID0gcmVzdWx0LnZhbHVlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAg
IHZhciByZWFzb24gPSByZXN1bHQucmVhc29uOwogICAgICAgIH0KICAgIH0p
Owp9KTsKYGBgCgpUaGUgYGBhbnlgYCBmdW5jdGlvbiBhY2NlcHRzIGFuIGFy
cmF5IG9mIHByb21pc2VzIGFuZCByZXR1cm5zIGEgcHJvbWlzZSB0aGF0IGlz
CmZ1bGZpbGxlZCBieSB0aGUgZmlyc3QgZ2l2ZW4gcHJvbWlzZSB0byBiZSBm
dWxmaWxsZWQsIG9yIHJlamVjdGVkIGlmIGFsbCBvZiB0aGUKZ2l2ZW4gcHJv
bWlzZXMgYXJlIHJlamVjdGVkLgoKYGBgamF2YXNjcmlwdApRLmFueShwcm9t
aXNlcykKLnRoZW4oZnVuY3Rpb24gKGZpcnN0KSB7CiAgICAvLyBBbnkgb2Yg
dGhlIHByb21pc2VzIHdhcyBmdWxmaWxsZWQuCn0sIGZ1bmN0aW9uIChlcnJv
cikgewogICAgLy8gQWxsIG9mIHRoZSBwcm9taXNlcyB3ZXJlIHJlamVjdGVk
Lgp9KTsKYGBgCgojIyMgU2VxdWVuY2VzCgpJZiB5b3UgaGF2ZSBhIG51bWJl
ciBvZiBwcm9taXNlLXByb2R1Y2luZyBmdW5jdGlvbnMgdGhhdCBuZWVkCnRv
IGJlIHJ1biBzZXF1ZW50aWFsbHksIHlvdSBjYW4gb2YgY291cnNlIGRvIHNv
IG1hbnVhbGx5OgoKYGBgamF2YXNjcmlwdApyZXR1cm4gZm9vKGluaXRpYWxW
YWwpLnRoZW4oYmFyKS50aGVuKGJheikudGhlbihxdXgpOwpgYGAKCkhvd2V2
ZXIsIGlmIHlvdSB3YW50IHRvIHJ1biBhIGR5bmFtaWNhbGx5IGNvbnN0cnVj
dGVkIHNlcXVlbmNlIG9mCmZ1bmN0aW9ucywgeW91J2xsIHdhbnQgc29tZXRo
aW5nIGxpa2UgdGhpczoKCmBgYGphdmFzY3JpcHQKdmFyIGZ1bmNzID0gW2Zv
bywgYmFyLCBiYXosIHF1eF07Cgp2YXIgcmVzdWx0ID0gUShpbml0aWFsVmFs
KTsKZnVuY3MuZm9yRWFjaChmdW5jdGlvbiAoZikgewogICAgcmVzdWx0ID0g
cmVzdWx0LnRoZW4oZik7Cn0pOwpyZXR1cm4gcmVzdWx0OwpgYGAKCllvdSBj
YW4gbWFrZSB0aGlzIHNsaWdodGx5IG1vcmUgY29tcGFjdCB1c2luZyBgcmVk
dWNlYDoKCmBgYGphdmFzY3JpcHQKcmV0dXJuIGZ1bmNzLnJlZHVjZShmdW5j
dGlvbiAoc29GYXIsIGYpIHsKICAgIHJldHVybiBzb0Zhci50aGVuKGYpOwp9
LCBRKGluaXRpYWxWYWwpKTsKYGBgCgpPciwgeW91IGNvdWxkIHVzZSB0aGUg
dWx0cmEtY29tcGFjdCB2ZXJzaW9uOgoKYGBgamF2YXNjcmlwdApyZXR1cm4g
ZnVuY3MucmVkdWNlKFEud2hlbiwgUShpbml0aWFsVmFsKSk7CmBgYAoKIyMj
IEhhbmRsaW5nIEVycm9ycwoKT25lIHNvbWV0aW1lcy11bmludHVpdGl2ZSBh
c3BlY3Qgb2YgcHJvbWlzZXMgaXMgdGhhdCBpZiB5b3UgdGhyb3cgYW4KZXhj
ZXB0aW9uIGluIHRoZSBmdWxmaWxsbWVudCBoYW5kbGVyLCBpdCB3aWxsIG5v
dCBiZSBjYXVnaHQgYnkgdGhlIGVycm9yCmhhbmRsZXIuCgpgYGBqYXZhc2Ny
aXB0CnJldHVybiBmb28oKQoudGhlbihmdW5jdGlvbiAodmFsdWUpIHsKICAg
IHRocm93IG5ldyBFcnJvcigiQ2FuJ3QgYmFyLiIpOwp9LCBmdW5jdGlvbiAo
ZXJyb3IpIHsKICAgIC8vIFdlIG9ubHkgZ2V0IGhlcmUgaWYgImZvbyIgZmFp
bHMKfSk7CmBgYAoKVG8gc2VlIHdoeSB0aGlzIGlzLCBjb25zaWRlciB0aGUg
cGFyYWxsZWwgYmV0d2VlbiBwcm9taXNlcyBhbmQKYGB0cnlgYC9gYGNhdGNo
YGAuIFdlIGFyZSBgYHRyeWBgLWluZyB0byBleGVjdXRlIGBgZm9vKClgYDog
dGhlIGVycm9yCmhhbmRsZXIgcmVwcmVzZW50cyBhIGBgY2F0Y2hgYCBmb3Ig
YGBmb28oKWBgLCB3aGlsZSB0aGUgZnVsZmlsbG1lbnQgaGFuZGxlcgpyZXBy
ZXNlbnRzIGNvZGUgdGhhdCBoYXBwZW5zICphZnRlciogdGhlIGBgdHJ5YGAv
YGBjYXRjaGBgIGJsb2NrLgpUaGF0IGNvZGUgdGhlbiBuZWVkcyBpdHMgb3du
IGBgdHJ5YGAvYGBjYXRjaGBgIGJsb2NrLgoKSW4gdGVybXMgb2YgcHJvbWlz
ZXMsIHRoaXMgbWVhbnMgY2hhaW5pbmcgeW91ciByZWplY3Rpb24gaGFuZGxl
cjoKCmBgYGphdmFzY3JpcHQKcmV0dXJuIGZvbygpCi50aGVuKGZ1bmN0aW9u
ICh2YWx1ZSkgewogICAgdGhyb3cgbmV3IEVycm9yKCJDYW4ndCBiYXIuIik7
Cn0pCi5mYWlsKGZ1bmN0aW9uIChlcnJvcikgewogICAgLy8gV2UgZ2V0IGhl
cmUgd2l0aCBlaXRoZXIgZm9vJ3MgZXJyb3Igb3IgYmFyJ3MgZXJyb3IKfSk7
CmBgYAoKIyMjIFByb2dyZXNzIE5vdGlmaWNhdGlvbgoKSXQncyBwb3NzaWJs
ZSBmb3IgcHJvbWlzZXMgdG8gcmVwb3J0IHRoZWlyIHByb2dyZXNzLCBlLmcu
IGZvciB0YXNrcyB0aGF0IHRha2UgYQpsb25nIHRpbWUgbGlrZSBhIGZpbGUg
dXBsb2FkLiBOb3QgYWxsIHByb21pc2VzIHdpbGwgaW1wbGVtZW50IHByb2dy
ZXNzCm5vdGlmaWNhdGlvbnMsIGJ1dCBmb3IgdGhvc2UgdGhhdCBkbywgeW91
IGNhbiBjb25zdW1lIHRoZSBwcm9ncmVzcyB2YWx1ZXMgdXNpbmcKYSB0aGly
ZCBwYXJhbWV0ZXIgdG8gYGB0aGVuYGA6CgpgYGBqYXZhc2NyaXB0CnJldHVy
biB1cGxvYWRGaWxlKCkKLnRoZW4oZnVuY3Rpb24gKCkgewogICAgLy8gU3Vj
Y2VzcyB1cGxvYWRpbmcgdGhlIGZpbGUKfSwgZnVuY3Rpb24gKGVycikgewog
ICAgLy8gVGhlcmUgd2FzIGFuIGVycm9yLCBhbmQgd2UgZ2V0IHRoZSByZWFz
b24gZm9yIGVycm9yCn0sIGZ1bmN0aW9uIChwcm9ncmVzcykgewogICAgLy8g
V2UgZ2V0IG5vdGlmaWVkIG9mIHRoZSB1cGxvYWQncyBwcm9ncmVzcyBhcyBp
dCBpcyBleGVjdXRlZAp9KTsKYGBgCgpMaWtlIGBmYWlsYCwgUSBhbHNvIHBy
b3ZpZGVzIGEgc2hvcnRoYW5kIGZvciBwcm9ncmVzcyBjYWxsYmFja3MKY2Fs
bGVkIGBwcm9ncmVzc2A6CgpgYGBqYXZhc2NyaXB0CnJldHVybiB1cGxvYWRG
aWxlKCkucHJvZ3Jlc3MoZnVuY3Rpb24gKHByb2dyZXNzKSB7CiAgICAvLyBX
ZSBnZXQgbm90aWZpZWQgb2YgdGhlIHVwbG9hZCdzIHByb2dyZXNzCn0pOwpg
YGAKCiMjIyBUaGUgRW5kCgpXaGVuIHlvdSBnZXQgdG8gdGhlIGVuZCBvZiBh
IGNoYWluIG9mIHByb21pc2VzLCB5b3Ugc2hvdWxkIGVpdGhlcgpyZXR1cm4g
dGhlIGxhc3QgcHJvbWlzZSBvciBlbmQgdGhlIGNoYWluLiAgU2luY2UgaGFu
ZGxlcnMgY2F0Y2gKZXJyb3JzLCBpdOKAmXMgYW4gdW5mb3J0dW5hdGUgcGF0
dGVybiB0aGF0IHRoZSBleGNlcHRpb25zIGNhbiBnbwp1bm9ic2VydmVkLgoK
U28sIGVpdGhlciByZXR1cm4gaXQsCgpgYGBqYXZhc2NyaXB0CnJldHVybiBm
b28oKQoudGhlbihmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gImJhciI7Cn0p
OwpgYGAKCk9yLCBlbmQgaXQuCgpgYGBqYXZhc2NyaXB0CmZvbygpCi50aGVu
KGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiAiYmFyIjsKfSkKLmRvbmUoKTsK
YGBgCgpFbmRpbmcgYSBwcm9taXNlIGNoYWluIG1ha2VzIHN1cmUgdGhhdCwg
aWYgYW4gZXJyb3IgZG9lc27igJl0IGdldApoYW5kbGVkIGJlZm9yZSB0aGUg
ZW5kLCBpdCB3aWxsIGdldCByZXRocm93biBhbmQgcmVwb3J0ZWQuCgpUaGlz
IGlzIGEgc3RvcGdhcC4gV2UgYXJlIGV4cGxvcmluZyB3YXlzIHRvIG1ha2Ug
dW5oYW5kbGVkIGVycm9ycwp2aXNpYmxlIHdpdGhvdXQgYW55IGV4cGxpY2l0
IGhhbmRsaW5nLgoKCiMjIyBUaGUgQmVnaW5uaW5nCgpFdmVyeXRoaW5nIGFi
b3ZlIGFzc3VtZXMgeW91IGdldCBhIHByb21pc2UgZnJvbSBzb21ld2hlcmUg
ZWxzZS4gIFRoaXMKaXMgdGhlIGNvbW1vbiBjYXNlLiAgRXZlcnkgb25jZSBp
biBhIHdoaWxlLCB5b3Ugd2lsbCBuZWVkIHRvIGNyZWF0ZSBhCnByb21pc2Ug
ZnJvbSBzY3JhdGNoLgoKIyMjIyBVc2luZyBgYFEuZmNhbGxgYAoKWW91IGNh
biBjcmVhdGUgYSBwcm9taXNlIGZyb20gYSB2YWx1ZSB1c2luZyBgYFEuZmNh
bGxgYC4gIFRoaXMgcmV0dXJucyBhCnByb21pc2UgZm9yIDEwLgoKYGBgamF2
YXNjcmlwdApyZXR1cm4gUS5mY2FsbChmdW5jdGlvbiAoKSB7CiAgICByZXR1
cm4gMTA7Cn0pOwpgYGAKCllvdSBjYW4gYWxzbyB1c2UgYGBmY2FsbGBgIHRv
IGdldCBhIHByb21pc2UgZm9yIGFuIGV4Y2VwdGlvbi4KCmBgYGphdmFzY3Jp
cHQKcmV0dXJuIFEuZmNhbGwoZnVuY3Rpb24gKCkgewogICAgdGhyb3cgbmV3
IEVycm9yKCJDYW4ndCBkbyBpdCIpOwp9KTsKYGBgCgpBcyB0aGUgbmFtZSBp
bXBsaWVzLCBgYGZjYWxsYGAgY2FuIGNhbGwgZnVuY3Rpb25zLCBvciBldmVu
IHByb21pc2VkCmZ1bmN0aW9ucy4gIFRoaXMgdXNlcyB0aGUgYGBldmVudHVh
bEFkZGBgIGZ1bmN0aW9uIGFib3ZlIHRvIGFkZCB0d28KbnVtYmVycy4KCmBg
YGphdmFzY3JpcHQKcmV0dXJuIFEuZmNhbGwoZXZlbnR1YWxBZGQsIDIsIDIp
OwpgYGAKCgojIyMjIFVzaW5nIERlZmVycmVkcwoKSWYgeW91IGhhdmUgdG8g
aW50ZXJmYWNlIHdpdGggYXN5bmNocm9ub3VzIGZ1bmN0aW9ucyB0aGF0IGFy
ZSBjYWxsYmFjay1iYXNlZAppbnN0ZWFkIG9mIHByb21pc2UtYmFzZWQsIFEg
cHJvdmlkZXMgYSBmZXcgc2hvcnRjdXRzIChsaWtlIGBgUS5uZmNhbGxgYCBh
bmQKZnJpZW5kcykuIEJ1dCBtdWNoIG9mIHRoZSB0aW1lLCB0aGUgc29sdXRp
b24gd2lsbCBiZSB0byB1c2UgKmRlZmVycmVkcyouCgpgYGBqYXZhc2NyaXB0
CnZhciBkZWZlcnJlZCA9IFEuZGVmZXIoKTsKRlMucmVhZEZpbGUoImZvby50
eHQiLCAidXRmLTgiLCBmdW5jdGlvbiAoZXJyb3IsIHRleHQpIHsKICAgIGlm
IChlcnJvcikgewogICAgICAgIGRlZmVycmVkLnJlamVjdChuZXcgRXJyb3Io
ZXJyb3IpKTsKICAgIH0gZWxzZSB7CiAgICAgICAgZGVmZXJyZWQucmVzb2x2
ZSh0ZXh0KTsKICAgIH0KfSk7CnJldHVybiBkZWZlcnJlZC5wcm9taXNlOwpg
YGAKCk5vdGUgdGhhdCBhIGRlZmVycmVkIGNhbiBiZSByZXNvbHZlZCB3aXRo
IGEgdmFsdWUgb3IgYSBwcm9taXNlLiAgVGhlCmBgcmVqZWN0YGAgZnVuY3Rp
b24gaXMgYSBzaG9ydGhhbmQgZm9yIHJlc29sdmluZyB3aXRoIGEgcmVqZWN0
ZWQKcHJvbWlzZS4KCmBgYGphdmFzY3JpcHQKLy8gdGhpczoKZGVmZXJyZWQu
cmVqZWN0KG5ldyBFcnJvcigiQ2FuJ3QgZG8gaXQiKSk7CgovLyBpcyBzaG9y
dGhhbmQgZm9yOgp2YXIgcmVqZWN0aW9uID0gUS5mY2FsbChmdW5jdGlvbiAo
KSB7CiAgICB0aHJvdyBuZXcgRXJyb3IoIkNhbid0IGRvIGl0Iik7Cn0pOwpk
ZWZlcnJlZC5yZXNvbHZlKHJlamVjdGlvbik7CmBgYAoKVGhpcyBpcyBhIHNp
bXBsaWZpZWQgaW1wbGVtZW50YXRpb24gb2YgYGBRLmRlbGF5YGAuCgpgYGBq
YXZhc2NyaXB0CmZ1bmN0aW9uIGRlbGF5KG1zKSB7CiAgICB2YXIgZGVmZXJy
ZWQgPSBRLmRlZmVyKCk7CiAgICBzZXRUaW1lb3V0KGRlZmVycmVkLnJlc29s
dmUsIG1zKTsKICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlOwp9CmBgYAoK
VGhpcyBpcyBhIHNpbXBsaWZpZWQgaW1wbGVtZW50YXRpb24gb2YgYGBRLnRp
bWVvdXRgYAoKYGBgamF2YXNjcmlwdApmdW5jdGlvbiB0aW1lb3V0KHByb21p
c2UsIG1zKSB7CiAgICB2YXIgZGVmZXJyZWQgPSBRLmRlZmVyKCk7CiAgICBR
LndoZW4ocHJvbWlzZSwgZGVmZXJyZWQucmVzb2x2ZSk7CiAgICBkZWxheSht
cykudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgZGVmZXJyZWQucmVqZWN0
KG5ldyBFcnJvcigiVGltZWQgb3V0IikpOwogICAgfSk7CiAgICByZXR1cm4g
ZGVmZXJyZWQucHJvbWlzZTsKfQpgYGAKCkZpbmFsbHksIHlvdSBjYW4gc2Vu
ZCBhIHByb2dyZXNzIG5vdGlmaWNhdGlvbiB0byB0aGUgcHJvbWlzZSB3aXRo
CmBgZGVmZXJyZWQubm90aWZ5YGAuCgpGb3IgaWxsdXN0cmF0aW9uLCB0aGlz
IGlzIGEgd3JhcHBlciBmb3IgWE1MIEhUVFAgcmVxdWVzdHMgaW4gdGhlIGJy
b3dzZXIuIE5vdGUKdGhhdCBhIG1vcmUgW3Rob3JvdWdoXVtYSFJdIGltcGxl
bWVudGF0aW9uIHdvdWxkIGJlIGluIG9yZGVyIGluIHByYWN0aWNlLgoKW1hI
Ul06IGh0dHBzOi8vZ2l0aHViLmNvbS9tb250YWdlanMvbXIvYmxvYi83MWU4
ZGY5OWJiNGYwNTg0OTg1YWNjZDZmMjgwMWVmMzAxNWI5NzYzL2Jyb3dzZXIu
anMjTDI5LUw3MwoKYGBgamF2YXNjcmlwdApmdW5jdGlvbiByZXF1ZXN0T2tU
ZXh0KHVybCkgewogICAgdmFyIHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVl
c3QoKTsKICAgIHZhciBkZWZlcnJlZCA9IFEuZGVmZXIoKTsKCiAgICByZXF1
ZXN0Lm9wZW4oIkdFVCIsIHVybCwgdHJ1ZSk7CiAgICByZXF1ZXN0Lm9ubG9h
ZCA9IG9ubG9hZDsKICAgIHJlcXVlc3Qub25lcnJvciA9IG9uZXJyb3I7CiAg
ICByZXF1ZXN0Lm9ucHJvZ3Jlc3MgPSBvbnByb2dyZXNzOwogICAgcmVxdWVz
dC5zZW5kKCk7CgogICAgZnVuY3Rpb24gb25sb2FkKCkgewogICAgICAgIGlm
IChyZXF1ZXN0LnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgICAgIGRlZmVy
cmVkLnJlc29sdmUocmVxdWVzdC5yZXNwb25zZVRleHQpOwogICAgICAgIH0g
ZWxzZSB7CiAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdChuZXcgRXJyb3Io
IlN0YXR1cyBjb2RlIHdhcyAiICsgcmVxdWVzdC5zdGF0dXMpKTsKICAgICAg
ICB9CiAgICB9CgogICAgZnVuY3Rpb24gb25lcnJvcigpIHsKICAgICAgICBk
ZWZlcnJlZC5yZWplY3QobmV3IEVycm9yKCJDYW4ndCBYSFIgIiArIEpTT04u
c3RyaW5naWZ5KHVybCkpKTsKICAgIH0KCiAgICBmdW5jdGlvbiBvbnByb2dy
ZXNzKGV2ZW50KSB7CiAgICAgICAgZGVmZXJyZWQubm90aWZ5KGV2ZW50Lmxv
YWRlZCAvIGV2ZW50LnRvdGFsKTsKICAgIH0KCiAgICByZXR1cm4gZGVmZXJy
ZWQucHJvbWlzZTsKfQpgYGAKCkJlbG93IGlzIGFuIGV4YW1wbGUgb2YgaG93
IHRvIHVzZSB0aGlzIGBgcmVxdWVzdE9rVGV4dGBgIGZ1bmN0aW9uOgoKYGBg
amF2YXNjcmlwdApyZXF1ZXN0T2tUZXh0KCJodHRwOi8vbG9jYWxob3N0OjMw
MDAiKQoudGhlbihmdW5jdGlvbiAocmVzcG9uc2VUZXh0KSB7CiAgICAvLyBJ
ZiB0aGUgSFRUUCByZXNwb25zZSByZXR1cm5zIDIwMCBPSywgbG9nIHRoZSBy
ZXNwb25zZSB0ZXh0LgogICAgY29uc29sZS5sb2cocmVzcG9uc2VUZXh0KTsK
fSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgICAvLyBJZiB0aGVyZSdzIGFuIGVy
cm9yIG9yIGEgbm9uLTIwMCBzdGF0dXMgY29kZSwgbG9nIHRoZSBlcnJvci4K
ICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwp9LCBmdW5jdGlvbiAocHJvZ3Jl
c3MpIHsKICAgIC8vIExvZyB0aGUgcHJvZ3Jlc3MgYXMgaXQgY29tZXMgaW4u
CiAgICBjb25zb2xlLmxvZygiUmVxdWVzdCBwcm9ncmVzczogIiArIE1hdGgu
cm91bmQocHJvZ3Jlc3MgKiAxMDApICsgIiUiKTsKfSk7CmBgYAoKIyMjIyBV
c2luZyBgUS5Qcm9taXNlYAoKVGhpcyBpcyBhbiBhbHRlcm5hdGl2ZSBwcm9t
aXNlLWNyZWF0aW9uIEFQSSB0aGF0IGhhcyB0aGUgc2FtZSBwb3dlciBhcwp0
aGUgZGVmZXJyZWQgY29uY2VwdCwgYnV0IHdpdGhvdXQgaW50cm9kdWNpbmcg
YW5vdGhlciBjb25jZXB0dWFsIGVudGl0eS4KClJld3JpdGluZyB0aGUgYHJl
cXVlc3RPa1RleHRgIGV4YW1wbGUgYWJvdmUgdXNpbmcgYFEuUHJvbWlzZWA6
CgpgYGBqYXZhc2NyaXB0CmZ1bmN0aW9uIHJlcXVlc3RPa1RleHQodXJsKSB7
CiAgICByZXR1cm4gUS5Qcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVj
dCwgbm90aWZ5KSB7CiAgICAgICAgdmFyIHJlcXVlc3QgPSBuZXcgWE1MSHR0
cFJlcXVlc3QoKTsKCiAgICAgICAgcmVxdWVzdC5vcGVuKCJHRVQiLCB1cmws
IHRydWUpOwogICAgICAgIHJlcXVlc3Qub25sb2FkID0gb25sb2FkOwogICAg
ICAgIHJlcXVlc3Qub25lcnJvciA9IG9uZXJyb3I7CiAgICAgICAgcmVxdWVz
dC5vbnByb2dyZXNzID0gb25wcm9ncmVzczsKICAgICAgICByZXF1ZXN0LnNl
bmQoKTsKCiAgICAgICAgZnVuY3Rpb24gb25sb2FkKCkgewogICAgICAgICAg
ICBpZiAocmVxdWVzdC5zdGF0dXMgPT09IDIwMCkgewogICAgICAgICAgICAg
ICAgcmVzb2x2ZShyZXF1ZXN0LnJlc3BvbnNlVGV4dCk7CiAgICAgICAgICAg
IH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKCJT
dGF0dXMgY29kZSB3YXMgIiArIHJlcXVlc3Quc3RhdHVzKSk7CiAgICAgICAg
ICAgIH0KICAgICAgICB9CgogICAgICAgIGZ1bmN0aW9uIG9uZXJyb3IoKSB7
CiAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoIkNhbid0IFhIUiAiICsg
SlNPTi5zdHJpbmdpZnkodXJsKSkpOwogICAgICAgIH0KCiAgICAgICAgZnVu
Y3Rpb24gb25wcm9ncmVzcyhldmVudCkgewogICAgICAgICAgICBub3RpZnko
ZXZlbnQubG9hZGVkIC8gZXZlbnQudG90YWwpOwogICAgICAgIH0KICAgIH0p
Owp9CmBgYAoKSWYgYHJlcXVlc3RPa1RleHRgIHdlcmUgdG8gdGhyb3cgYW4g
ZXhjZXB0aW9uLCB0aGUgcmV0dXJuZWQgcHJvbWlzZSB3b3VsZCBiZQpyZWpl
Y3RlZCB3aXRoIHRoYXQgdGhyb3duIGV4Y2VwdGlvbiBhcyB0aGUgcmVqZWN0
aW9uIHJlYXNvbi4KCiMjIyBUaGUgTWlkZGxlCgpJZiB5b3UgYXJlIHVzaW5n
IGEgZnVuY3Rpb24gdGhhdCBtYXkgcmV0dXJuIGEgcHJvbWlzZSwgYnV0IGp1
c3QgbWlnaHQKcmV0dXJuIGEgdmFsdWUgaWYgaXQgZG9lc27igJl0IG5lZWQg
dG8gZGVmZXIsIHlvdSBjYW4gdXNlIHRoZSDigJxzdGF0aWPigJ0KbWV0aG9k
cyBvZiB0aGUgUSBsaWJyYXJ5LgoKVGhlIGBgd2hlbmBgIGZ1bmN0aW9uIGlz
IHRoZSBzdGF0aWMgZXF1aXZhbGVudCBmb3IgYGB0aGVuYGAuCgpgYGBqYXZh
c2NyaXB0CnJldHVybiBRLndoZW4odmFsdWVPclByb21pc2UsIGZ1bmN0aW9u
ICh2YWx1ZSkgewp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKfSk7CmBgYAoKQWxs
IG9mIHRoZSBvdGhlciBtZXRob2RzIG9uIGEgcHJvbWlzZSBoYXZlIHN0YXRp
YyBhbmFsb2dzIHdpdGggdGhlCnNhbWUgbmFtZS4KClRoZSBmb2xsb3dpbmcg
YXJlIGVxdWl2YWxlbnQ6CgpgYGBqYXZhc2NyaXB0CnJldHVybiBRLmFsbChb
YSwgYl0pOwpgYGAKCmBgYGphdmFzY3JpcHQKcmV0dXJuIFEuZmNhbGwoZnVu
Y3Rpb24gKCkgewogICAgcmV0dXJuIFthLCBiXTsKfSkKLmFsbCgpOwpgYGAK
CldoZW4gd29ya2luZyB3aXRoIHByb21pc2VzIHByb3ZpZGVkIGJ5IG90aGVy
IGxpYnJhcmllcywgeW91IHNob3VsZApjb252ZXJ0IGl0IHRvIGEgUSBwcm9t
aXNlLiAgTm90IGFsbCBwcm9taXNlIGxpYnJhcmllcyBtYWtlIHRoZSBzYW1l
Cmd1YXJhbnRlZXMgYXMgUSBhbmQgY2VydGFpbmx5IGRvbuKAmXQgcHJvdmlk
ZSBhbGwgb2YgdGhlIHNhbWUgbWV0aG9kcy4KTW9zdCBsaWJyYXJpZXMgb25s
eSBwcm92aWRlIGEgcGFydGlhbGx5IGZ1bmN0aW9uYWwgYGB0aGVuYGAgbWV0
aG9kLgpUaGlzIHRoYW5rZnVsbHkgaXMgYWxsIHdlIG5lZWQgdG8gdHVybiB0
aGVtIGludG8gdmlicmFudCBRIHByb21pc2VzLgoKYGBgamF2YXNjcmlwdApy
ZXR1cm4gUSgkLmFqYXgoLi4uKSkKLnRoZW4oZnVuY3Rpb24gKCkgewp9KTsK
YGBgCgpJZiB0aGVyZSBpcyBhbnkgY2hhbmNlIHRoYXQgdGhlIHByb21pc2Ug
eW91IHJlY2VpdmUgaXMgbm90IGEgUSBwcm9taXNlCmFzIHByb3ZpZGVkIGJ5
IHlvdXIgbGlicmFyeSwgeW91IHNob3VsZCB3cmFwIGl0IHVzaW5nIGEgUSBm
dW5jdGlvbi4KWW91IGNhbiBldmVuIHVzZSBgYFEuaW52b2tlYGAgYXMgYSBz
aG9ydGhhbmQuCgpgYGBqYXZhc2NyaXB0CnJldHVybiBRLmludm9rZSgkLCAn
YWpheCcsIC4uLikKLnRoZW4oZnVuY3Rpb24gKCkgewp9KTsKYGBgCgoKIyMj
IE92ZXIgdGhlIFdpcmUKCkEgcHJvbWlzZSBjYW4gc2VydmUgYXMgYSBwcm94
eSBmb3IgYW5vdGhlciBvYmplY3QsIGV2ZW4gYSByZW1vdGUKb2JqZWN0LiAg
VGhlcmUgYXJlIG1ldGhvZHMgdGhhdCBhbGxvdyB5b3UgdG8gb3B0aW1pc3Rp
Y2FsbHkgbWFuaXB1bGF0ZQpwcm9wZXJ0aWVzIG9yIGNhbGwgZnVuY3Rpb25z
LiAgQWxsIG9mIHRoZXNlIGludGVyYWN0aW9ucyByZXR1cm4KcHJvbWlzZXMs
IHNvIHRoZXkgY2FuIGJlIGNoYWluZWQuCgpgYGAKZGlyZWN0IG1hbmlwdWxh
dGlvbiAgICAgICAgIHVzaW5nIGEgcHJvbWlzZSBhcyBhIHByb3h5Ci0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tCnZhbHVlLmZvbyAgICAgICAgICAgICAgICAgICBwcm9taXNl
LmdldCgiZm9vIikKdmFsdWUuZm9vID0gdmFsdWUgICAgICAgICAgIHByb21p
c2UucHV0KCJmb28iLCB2YWx1ZSkKZGVsZXRlIHZhbHVlLmZvbyAgICAgICAg
ICAgIHByb21pc2UuZGVsKCJmb28iKQp2YWx1ZS5mb28oLi4uYXJncykgICAg
ICAgICAgcHJvbWlzZS5wb3N0KCJmb28iLCBbYXJnc10pCnZhbHVlLmZvbygu
Li5hcmdzKSAgICAgICAgICBwcm9taXNlLmludm9rZSgiZm9vIiwgLi4uYXJn
cykKdmFsdWUoLi4uYXJncykgICAgICAgICAgICAgIHByb21pc2UuZmFwcGx5
KFthcmdzXSkKdmFsdWUoLi4uYXJncykgICAgICAgICAgICAgIHByb21pc2Uu
ZmNhbGwoLi4uYXJncykKYGBgCgpJZiB0aGUgcHJvbWlzZSBpcyBhIHByb3h5
IGZvciBhIHJlbW90ZSBvYmplY3QsIHlvdSBjYW4gc2hhdmUKcm91bmQtdHJp
cHMgYnkgdXNpbmcgdGhlc2UgZnVuY3Rpb25zIGluc3RlYWQgb2YgYGB0aGVu
YGAuICBUbyB0YWtlCmFkdmFudGFnZSBvZiBwcm9taXNlcyBmb3IgcmVtb3Rl
IG9iamVjdHMsIGNoZWNrIG91dCBbUS1Db25uZWN0aW9uXVtdLgoKW1EtQ29u
bmVjdGlvbl06IGh0dHBzOi8vZ2l0aHViLmNvbS9rcmlza293YWwvcS1jb25u
ZWN0aW9uCgpFdmVuIGluIHRoZSBjYXNlIG9mIG5vbi1yZW1vdGUgb2JqZWN0
cywgdGhlc2UgbWV0aG9kcyBjYW4gYmUgdXNlZCBhcwpzaG9ydGhhbmQgZm9y
IHBhcnRpY3VsYXJseS1zaW1wbGUgZnVsZmlsbG1lbnQgaGFuZGxlcnMuIEZv
ciBleGFtcGxlLCB5b3UKY2FuIHJlcGxhY2UKCmBgYGphdmFzY3JpcHQKcmV0
dXJuIFEuZmNhbGwoZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIFt7IGZvbzog
ImJhciIgfSwgeyBmb286ICJiYXoiIH1dOwp9KQoudGhlbihmdW5jdGlvbiAo
dmFsdWUpIHsKICAgIHJldHVybiB2YWx1ZVswXS5mb287Cn0pOwpgYGAKCndp
dGgKCmBgYGphdmFzY3JpcHQKcmV0dXJuIFEuZmNhbGwoZnVuY3Rpb24gKCkg
ewogICAgcmV0dXJuIFt7IGZvbzogImJhciIgfSwgeyBmb286ICJiYXoiIH1d
Owp9KQouZ2V0KDApCi5nZXQoImZvbyIpOwpgYGAKCgojIyMgQWRhcHRpbmcg
Tm9kZQoKSWYgeW91J3JlIHdvcmtpbmcgd2l0aCBmdW5jdGlvbnMgdGhhdCBt
YWtlIHVzZSBvZiB0aGUgTm9kZS5qcyBjYWxsYmFjayBwYXR0ZXJuLAp3aGVy
ZSBjYWxsYmFja3MgYXJlIGluIHRoZSBmb3JtIG9mIGBmdW5jdGlvbihlcnIs
IHJlc3VsdClgLCBRIHByb3ZpZGVzIGEgZmV3CnVzZWZ1bCB1dGlsaXR5IGZ1
bmN0aW9ucyBmb3IgY29udmVydGluZyBiZXR3ZWVuIHRoZW0uIFRoZSBtb3N0
IHN0cmFpZ2h0Zm9yd2FyZAphcmUgcHJvYmFibHkgYFEubmZjYWxsYCBhbmQg
YFEubmZhcHBseWAgKCJOb2RlIGZ1bmN0aW9uIGNhbGwvYXBwbHkiKSBmb3Ig
Y2FsbGluZwpOb2RlLmpzLXN0eWxlIGZ1bmN0aW9ucyBhbmQgZ2V0dGluZyBi
YWNrIGEgcHJvbWlzZToKCmBgYGphdmFzY3JpcHQKcmV0dXJuIFEubmZjYWxs
KEZTLnJlYWRGaWxlLCAiZm9vLnR4dCIsICJ1dGYtOCIpOwpyZXR1cm4gUS5u
ZmFwcGx5KEZTLnJlYWRGaWxlLCBbImZvby50eHQiLCAidXRmLTgiXSk7CmBg
YAoKSWYgeW91IGFyZSB3b3JraW5nIHdpdGggbWV0aG9kcywgaW5zdGVhZCBv
ZiBzaW1wbGUgZnVuY3Rpb25zLCB5b3UgY2FuIGVhc2lseQpydW4gaW4gdG8g
dGhlIHVzdWFsIHByb2JsZW1zIHdoZXJlIHBhc3NpbmcgYSBtZXRob2QgdG8g
YW5vdGhlciBmdW5jdGlvbuKAlGxpa2UKYFEubmZjYWxsYOKAlCJ1bi1iaW5k
cyIgdGhlIG1ldGhvZCBmcm9tIGl0cyBvd25lci4gVG8gYXZvaWQgdGhpcywg
eW91IGNhbiBlaXRoZXIKdXNlIGBGdW5jdGlvbi5wcm90b3R5cGUuYmluZGAg
b3Igc29tZSBuaWNlIHNob3J0Y3V0IG1ldGhvZHMgd2UgcHJvdmlkZToKCmBg
YGphdmFzY3JpcHQKcmV0dXJuIFEubmludm9rZShyZWRpc0NsaWVudCwgImdl
dCIsICJ1c2VyOjE6aWQiKTsKcmV0dXJuIFEubnBvc3QocmVkaXNDbGllbnQs
ICJnZXQiLCBbInVzZXI6MTppZCJdKTsKYGBgCgpZb3UgY2FuIGFsc28gY3Jl
YXRlIHJldXNhYmxlIHdyYXBwZXJzIHdpdGggYFEuZGVub2RlaWZ5YCBvciBg
US5uYmluZGA6CgpgYGBqYXZhc2NyaXB0CnZhciByZWFkRmlsZSA9IFEuZGVu
b2RlaWZ5KEZTLnJlYWRGaWxlKTsKcmV0dXJuIHJlYWRGaWxlKCJmb28udHh0
IiwgInV0Zi04Iik7Cgp2YXIgcmVkaXNDbGllbnRHZXQgPSBRLm5iaW5kKHJl
ZGlzQ2xpZW50LmdldCwgcmVkaXNDbGllbnQpOwpyZXR1cm4gcmVkaXNDbGll
bnRHZXQoInVzZXI6MTppZCIpOwpgYGAKCkZpbmFsbHksIGlmIHlvdSdyZSB3
b3JraW5nIHdpdGggcmF3IGRlZmVycmVkIG9iamVjdHMsIHRoZXJlIGlzIGEK
YG1ha2VOb2RlUmVzb2x2ZXJgIG1ldGhvZCBvbiBkZWZlcnJlZHMgdGhhdCBj
YW4gYmUgaGFuZHk6CgpgYGBqYXZhc2NyaXB0CnZhciBkZWZlcnJlZCA9IFEu
ZGVmZXIoKTsKRlMucmVhZEZpbGUoImZvby50eHQiLCAidXRmLTgiLCBkZWZl
cnJlZC5tYWtlTm9kZVJlc29sdmVyKCkpOwpyZXR1cm4gZGVmZXJyZWQucHJv
bWlzZTsKYGBgCgojIyMgTG9uZyBTdGFjayBUcmFjZXMKClEgY29tZXMgd2l0
aCBvcHRpb25hbCBzdXBwb3J0IGZvciDigJxsb25nIHN0YWNrIHRyYWNlcyzi
gJ0gd2hlcmVpbiB0aGUgYHN0YWNrYApwcm9wZXJ0eSBvZiBgRXJyb3JgIHJl
amVjdGlvbiByZWFzb25zIGlzIHJld3JpdHRlbiB0byBiZSB0cmFjZWQgYWxv
bmcKYXN5bmNocm9ub3VzIGp1bXBzIGluc3RlYWQgb2Ygc3RvcHBpbmcgYXQg
dGhlIG1vc3QgcmVjZW50IG9uZS4gQXMgYW4gZXhhbXBsZToKCmBgYGpzCmZ1
bmN0aW9uIHRoZURlcHRoc09mTXlQcm9ncmFtKCkgewogIFEuZGVsYXkoMTAw
KS5kb25lKGZ1bmN0aW9uIGV4cGxvZGUoKSB7CiAgICB0aHJvdyBuZXcgRXJy
b3IoImJvbyEiKTsKICB9KTsKfQoKdGhlRGVwdGhzT2ZNeVByb2dyYW0oKTsK
YGBgCgp1c3VhbGx5IHdvdWxkIGdpdmUgYSByYXRoZXIgdW5oZWxwZnVsIHN0
YWNrIHRyYWNlIGxvb2tpbmcgc29tZXRoaW5nIGxpa2UKCmBgYApFcnJvcjog
Ym9vIQogICAgYXQgZXhwbG9kZSAoL3BhdGgvdG8vdGVzdC5qczozOjExKQog
ICAgYXQgX2Z1bGZpbGxlZCAoL3BhdGgvdG8vdGVzdC5qczpxOjU0KQogICAg
YXQgcmVzb2x2ZWRWYWx1ZS5wcm9taXNlRGlzcGF0Y2guZG9uZSAoL3BhdGgv
dG8vcS5qczo4MjM6MzApCiAgICBhdCBtYWtlUHJvbWlzZS5wcm9taXNlLnBy
b21pc2VEaXNwYXRjaCAoL3BhdGgvdG8vcS5qczo0OTY6MTMpCiAgICBhdCBw
ZW5kaW5nICgvcGF0aC90by9xLmpzOjM5NzozOSkKICAgIGF0IHByb2Nlc3Mu
c3RhcnR1cC5wcm9jZXNzTmV4dFRpY2sucHJvY2Vzcy5fdGlja0NhbGxiYWNr
IChub2RlLmpzOjI0NDo5KQpgYGAKCkJ1dCwgaWYgeW91IHR1cm4gdGhpcyBm
ZWF0dXJlIG9uIGJ5IHNldHRpbmcKCmBgYGpzClEubG9uZ1N0YWNrU3VwcG9y
dCA9IHRydWU7CmBgYAoKdGhlbiB0aGUgYWJvdmUgY29kZSBnaXZlcyBhIG5p
Y2Ugc3RhY2sgdHJhY2UgdG8gdGhlIHR1bmUgb2YKCmBgYApFcnJvcjogYm9v
IQogICAgYXQgZXhwbG9kZSAoL3BhdGgvdG8vdGVzdC5qczozOjExKQpGcm9t
IHByZXZpb3VzIGV2ZW50OgogICAgYXQgdGhlRGVwdGhzT2ZNeVByb2dyYW0g
KC9wYXRoL3RvL3Rlc3QuanM6MjoxNikKICAgIGF0IE9iamVjdC48YW5vbnlt
b3VzPiAoL3BhdGgvdG8vdGVzdC5qczo3OjEpCmBgYAoKTm90ZSBob3cgeW91
IGNhbiBzZWUgdGhlIGZ1bmN0aW9uIHRoYXQgdHJpZ2dlcmVkIHRoZSBhc3lu
YyBvcGVyYXRpb24gaW4gdGhlCnN0YWNrIHRyYWNlISBUaGlzIGlzIHZlcnkg
aGVscGZ1bCBmb3IgZGVidWdnaW5nLCBhcyBvdGhlcndpc2UgeW91IGVuZCB1
cCBnZXR0aW5nCm9ubHkgdGhlIGZpcnN0IGxpbmUsIHBsdXMgYSBidW5jaCBv
ZiBRIGludGVybmFscywgd2l0aCBubyBzaWduIG9mIHdoZXJlIHRoZQpvcGVy
YXRpb24gc3RhcnRlZC4KCkluIG5vZGUuanMsIHRoaXMgZmVhdHVyZSBjYW4g
YWxzbyBiZSBlbmFibGVkIHRocm91Z2ggdGhlIFFfREVCVUcgZW52aXJvbm1l
bnQKdmFyaWFibGU6CgpgYGAKUV9ERUJVRz0xIG5vZGUgc2VydmVyLmpzCmBg
YAoKVGhpcyB3aWxsIGVuYWJsZSBsb25nIHN0YWNrIHN1cHBvcnQgaW4gZXZl
cnkgaW5zdGFuY2Ugb2YgUS4KClRoaXMgZmVhdHVyZSBkb2VzIGNvbWUgd2l0
aCBzb21ld2hhdC1zZXJpb3VzIHBlcmZvcm1hbmNlIGFuZCBtZW1vcnkgb3Zl
cmhlYWQsCmhvd2V2ZXIuIElmIHlvdSdyZSB3b3JraW5nIHdpdGggbG90cyBv
ZiBwcm9taXNlcywgb3IgdHJ5aW5nIHRvIHNjYWxlIGEgc2VydmVyCnRvIG1h
bnkgdXNlcnMsIHlvdSBzaG91bGQgcHJvYmFibHkga2VlcCBpdCBvZmYuIEJ1
dCBpbiBkZXZlbG9wbWVudCwgZ28gZm9yIGl0IQoKIyMgVGVzdHMKCllvdSBj
YW4gdmlldyB0aGUgcmVzdWx0cyBvZiB0aGUgUSB0ZXN0IHN1aXRlIFtpbiB5
b3VyIGJyb3dzZXJdW3Rlc3RzXSEKClt0ZXN0c106IGh0dHBzOi8vcmF3Z2l0
aHViLmNvbS9rcmlza293YWwvcS92MS9zcGVjL3Etc3BlYy5odG1sCgojIyBM
aWNlbnNlCgpDb3B5cmlnaHQgMjAwOeKAkzIwMTcgS3Jpc3RvcGhlciBNaWNo
YWVsIEtvd2FsIGFuZCBjb250cmlidXRvcnMKTUlUIExpY2Vuc2UgKGVuY2xv
c2VkKQoK
",,14764,"bGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczoKICAtICIwLjEwIgpzY3JpcHQ6
CiAgbnBtIHRlc3QK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'cobra',12574344,b'A Commander for modern Go CLI interactions',b'Go',247,14760,,312,False,b'https://api.github.com/repos/spf13/cobra/forks',"IVtjb2JyYSBsb2dvXShodHRwczovL2Nsb3VkLmdpdGh1YnVzZXJjb250ZW50
LmNvbS9hc3NldHMvMTczNDEyLzEwODg2MzUyL2FkNTY2MjMyLTgxNGYtMTFl
NS05Y2QwLWFhMTAxNzg4YzExNy5wbmcpCgpDb2JyYSBpcyBib3RoIGEgbGli
cmFyeSBmb3IgY3JlYXRpbmcgcG93ZXJmdWwgbW9kZXJuIENMSSBhcHBsaWNh
dGlvbnMgYXMgd2VsbCBhcyBhIHByb2dyYW0gdG8gZ2VuZXJhdGUgYXBwbGlj
YXRpb25zIGFuZCBjb21tYW5kIGZpbGVzLgoKTWFueSBvZiB0aGUgbW9zdCB3
aWRlbHkgdXNlZCBHbyBwcm9qZWN0cyBhcmUgYnVpbHQgdXNpbmcgQ29icmEs
IHN1Y2ggYXM6CltLdWJlcm5ldGVzXShodHRwOi8va3ViZXJuZXRlcy5pby8p
LApbSHVnb10oaHR0cDovL2dvaHVnby5pbyksCltya3RdKGh0dHBzOi8vZ2l0
aHViLmNvbS9jb3Jlb3Mvcmt0KSwKW2V0Y2RdKGh0dHBzOi8vZ2l0aHViLmNv
bS9jb3Jlb3MvZXRjZCksCltNb2J5IChmb3JtZXIgRG9ja2VyKV0oaHR0cHM6
Ly9naXRodWIuY29tL21vYnkvbW9ieSksCltEb2NrZXIgKGRpc3RyaWJ1dGlv
bildKGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXIvZGlzdHJpYnV0aW9uKSwK
W09wZW5TaGlmdF0oaHR0cHM6Ly93d3cub3BlbnNoaWZ0LmNvbS8pLApbRGVs
dmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9kZXJla3Bhcmtlci9kZWx2ZSksCltH
b3BoZXJKU10oaHR0cDovL3d3dy5nb3BoZXJqcy5vcmcvKSwKW0NvY2tyb2Fj
aERCXShodHRwOi8vd3d3LmNvY2tyb2FjaGxhYnMuY29tLyksCltCbGV2ZV0o
aHR0cDovL3d3dy5ibGV2ZXNlYXJjaC5jb20vKSwKW1Byb2plY3RBdG9taWMg
KGVudGVycHJpc2UpXShodHRwOi8vd3d3LnByb2plY3RhdG9taWMuaW8vKSwK
W0dpYW50IFN3YXJtJ3MgZ3NjdGxdKGh0dHBzOi8vZ2l0aHViLmNvbS9naWFu
dHN3YXJtL2dzY3RsKSwKW05hbm9ib3hdKGh0dHBzOi8vZ2l0aHViLmNvbS9u
YW5vYm94LWlvL25hbm9ib3gpL1tOYW5vcGFja10oaHR0cHM6Ly9naXRodWIu
Y29tL25hbm9wYWNrKSwKW3JjbG9uZV0oaHR0cDovL3JjbG9uZS5vcmcvKSwK
W25laG1dKGh0dHBzOi8vZ2l0aHViLmNvbS9ib2dlbS9uZWhtKSwKW1BvdWNo
XShodHRwczovL2dpdGh1Yi5jb20vYWxpYmFiYS9wb3VjaCksCltJc3Rpb10o
aHR0cHM6Ly9pc3Rpby5pbyksCltQcm90b3Rvb2xdKGh0dHBzOi8vZ2l0aHVi
LmNvbS91YmVyL3Byb3RvdG9vbCksClttYXR0ZXJtb3N0LXNlcnZlcl0oaHR0
cHM6Ly9naXRodWIuY29tL21hdHRlcm1vc3QvbWF0dGVybW9zdC1zZXJ2ZXIp
LApbR2FyZGVuZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9nYXJkZW5lci9nYXJk
ZW5jdGwpLApbTGlua2VyZF0oaHR0cHM6Ly9saW5rZXJkLmlvLyksCmV0Yy4K
ClshW0J1aWxkIFN0YXR1c10oaHR0cHM6Ly90cmF2aXMtY2kub3JnL3NwZjEz
L2NvYnJhLnN2ZyAiVHJhdmlzIENJIHN0YXR1cyIpXShodHRwczovL3RyYXZp
cy1jaS5vcmcvc3BmMTMvY29icmEpClshW0NpcmNsZUNJIHN0YXR1c10oaHR0
cHM6Ly9jaXJjbGVjaS5jb20vZ2gvc3BmMTMvY29icmEucG5nP2NpcmNsZS10
b2tlbj06Y2lyY2xlLXRva2VuICJDaXJjbGVDSSBzdGF0dXMiKV0oaHR0cHM6
Ly9jaXJjbGVjaS5jb20vZ2gvc3BmMTMvY29icmEpClshW0dvRG9jXShodHRw
czovL2dvZG9jLm9yZy9naXRodWIuY29tL3NwZjEzL2NvYnJhP3N0YXR1cy5z
dmcpXShodHRwczovL2dvZG9jLm9yZy9naXRodWIuY29tL3NwZjEzL2NvYnJh
KQpbIVtHbyBSZXBvcnQgQ2FyZF0oaHR0cHM6Ly9nb3JlcG9ydGNhcmQuY29t
L2JhZGdlL2dpdGh1Yi5jb20vc3BmMTMvY29icmEpXShodHRwczovL2dvcmVw
b3J0Y2FyZC5jb20vcmVwb3J0L2dpdGh1Yi5jb20vc3BmMTMvY29icmEpCgoj
IFRhYmxlIG9mIENvbnRlbnRzCgotIFtPdmVydmlld10oI292ZXJ2aWV3KQot
IFtDb25jZXB0c10oI2NvbmNlcHRzKQogICogW0NvbW1hbmRzXSgjY29tbWFu
ZHMpCiAgKiBbRmxhZ3NdKCNmbGFncykKLSBbSW5zdGFsbGluZ10oI2luc3Rh
bGxpbmcpCi0gW0dldHRpbmcgU3RhcnRlZF0oI2dldHRpbmctc3RhcnRlZCkK
ICAqIFtVc2luZyB0aGUgQ29icmEgR2VuZXJhdG9yXSgjdXNpbmctdGhlLWNv
YnJhLWdlbmVyYXRvcikKICAqIFtVc2luZyB0aGUgQ29icmEgTGlicmFyeV0o
I3VzaW5nLXRoZS1jb2JyYS1saWJyYXJ5KQogICogW1dvcmtpbmcgd2l0aCBG
bGFnc10oI3dvcmtpbmctd2l0aC1mbGFncykKICAqIFtQb3NpdGlvbmFsIGFu
ZCBDdXN0b20gQXJndW1lbnRzXSgjcG9zaXRpb25hbC1hbmQtY3VzdG9tLWFy
Z3VtZW50cykKICAqIFtFeGFtcGxlXSgjZXhhbXBsZSkKICAqIFtIZWxwIENv
bW1hbmRdKCNoZWxwLWNvbW1hbmQpCiAgKiBbVXNhZ2UgTWVzc2FnZV0oI3Vz
YWdlLW1lc3NhZ2UpCiAgKiBbUHJlUnVuIGFuZCBQb3N0UnVuIEhvb2tzXSgj
cHJlcnVuLWFuZC1wb3N0cnVuLWhvb2tzKQogICogW1N1Z2dlc3Rpb25zIHdo
ZW4gInVua25vd24gY29tbWFuZCIgaGFwcGVuc10oI3N1Z2dlc3Rpb25zLXdo
ZW4tdW5rbm93bi1jb21tYW5kLWhhcHBlbnMpCiAgKiBbR2VuZXJhdGluZyBk
b2N1bWVudGF0aW9uIGZvciB5b3VyIGNvbW1hbmRdKCNnZW5lcmF0aW5nLWRv
Y3VtZW50YXRpb24tZm9yLXlvdXItY29tbWFuZCkKICAqIFtHZW5lcmF0aW5n
IGJhc2ggY29tcGxldGlvbnNdKCNnZW5lcmF0aW5nLWJhc2gtY29tcGxldGlv
bnMpCiAgKiBbR2VuZXJhdGluZyB6c2ggY29tcGxldGlvbnNdKCNnZW5lcmF0
aW5nLXpzaC1jb21wbGV0aW9ucykKLSBbQ29udHJpYnV0aW5nXSgjY29udHJp
YnV0aW5nKQotIFtMaWNlbnNlXSgjbGljZW5zZSkKCiMgT3ZlcnZpZXcKCkNv
YnJhIGlzIGEgbGlicmFyeSBwcm92aWRpbmcgYSBzaW1wbGUgaW50ZXJmYWNl
IHRvIGNyZWF0ZSBwb3dlcmZ1bCBtb2Rlcm4gQ0xJCmludGVyZmFjZXMgc2lt
aWxhciB0byBnaXQgJiBnbyB0b29scy4KCkNvYnJhIGlzIGFsc28gYW4gYXBw
bGljYXRpb24gdGhhdCB3aWxsIGdlbmVyYXRlIHlvdXIgYXBwbGljYXRpb24g
c2NhZmZvbGRpbmcgdG8gcmFwaWRseQpkZXZlbG9wIGEgQ29icmEtYmFzZWQg
YXBwbGljYXRpb24uCgpDb2JyYSBwcm92aWRlczoKKiBFYXN5IHN1YmNvbW1h
bmQtYmFzZWQgQ0xJczogYGFwcCBzZXJ2ZXJgLCBgYXBwIGZldGNoYCwgZXRj
LgoqIEZ1bGx5IFBPU0lYLWNvbXBsaWFudCBmbGFncyAoaW5jbHVkaW5nIHNo
b3J0ICYgbG9uZyB2ZXJzaW9ucykKKiBOZXN0ZWQgc3ViY29tbWFuZHMKKiBH
bG9iYWwsIGxvY2FsIGFuZCBjYXNjYWRpbmcgZmxhZ3MKKiBFYXN5IGdlbmVy
YXRpb24gb2YgYXBwbGljYXRpb25zICYgY29tbWFuZHMgd2l0aCBgY29icmEg
aW5pdCBhcHBuYW1lYCAmIGBjb2JyYSBhZGQgY21kbmFtZWAKKiBJbnRlbGxp
Z2VudCBzdWdnZXN0aW9ucyAoYGFwcCBzcnZlcmAuLi4gZGlkIHlvdSBtZWFu
IGBhcHAgc2VydmVyYD8pCiogQXV0b21hdGljIGhlbHAgZ2VuZXJhdGlvbiBm
b3IgY29tbWFuZHMgYW5kIGZsYWdzCiogQXV0b21hdGljIGhlbHAgZmxhZyBy
ZWNvZ25pdGlvbiBvZiBgLWhgLCBgLS1oZWxwYCwgZXRjLgoqIEF1dG9tYXRp
Y2FsbHkgZ2VuZXJhdGVkIGJhc2ggYXV0b2NvbXBsZXRlIGZvciB5b3VyIGFw
cGxpY2F0aW9uCiogQXV0b21hdGljYWxseSBnZW5lcmF0ZWQgbWFuIHBhZ2Vz
IGZvciB5b3VyIGFwcGxpY2F0aW9uCiogQ29tbWFuZCBhbGlhc2VzIHNvIHlv
dSBjYW4gY2hhbmdlIHRoaW5ncyB3aXRob3V0IGJyZWFraW5nIHRoZW0KKiBU
aGUgZmxleGliaWxpdHkgdG8gZGVmaW5lIHlvdXIgb3duIGhlbHAsIHVzYWdl
LCBldGMuCiogT3B0aW9uYWwgdGlnaHQgaW50ZWdyYXRpb24gd2l0aCBbdmlw
ZXJdKGh0dHA6Ly9naXRodWIuY29tL3NwZjEzL3ZpcGVyKSBmb3IgMTItZmFj
dG9yIGFwcHMKCiMgQ29uY2VwdHMKCkNvYnJhIGlzIGJ1aWx0IG9uIGEgc3Ry
dWN0dXJlIG9mIGNvbW1hbmRzLCBhcmd1bWVudHMgJiBmbGFncy4KCioqQ29t
bWFuZHMqKiByZXByZXNlbnQgYWN0aW9ucywgKipBcmdzKiogYXJlIHRoaW5n
cyBhbmQgKipGbGFncyoqIGFyZSBtb2RpZmllcnMgZm9yIHRob3NlIGFjdGlv
bnMuCgpUaGUgYmVzdCBhcHBsaWNhdGlvbnMgd2lsbCByZWFkIGxpa2Ugc2Vu
dGVuY2VzIHdoZW4gdXNlZC4gVXNlcnMgd2lsbCBrbm93IGhvdwp0byB1c2Ug
dGhlIGFwcGxpY2F0aW9uIGJlY2F1c2UgdGhleSB3aWxsIG5hdGl2ZWx5IHVu
ZGVyc3RhbmQgaG93IHRvIHVzZSBpdC4KClRoZSBwYXR0ZXJuIHRvIGZvbGxv
dyBpcwpgQVBQTkFNRSBWRVJCIE5PVU4gLS1BREpFQ1RJVkUuYAogICAgb3IK
YEFQUE5BTUUgQ09NTUFORCBBUkcgLS1GTEFHYAoKQSBmZXcgZ29vZCByZWFs
IHdvcmxkIGV4YW1wbGVzIG1heSBiZXR0ZXIgaWxsdXN0cmF0ZSB0aGlzIHBv
aW50LgoKSW4gdGhlIGZvbGxvd2luZyBleGFtcGxlLCAnc2VydmVyJyBpcyBh
IGNvbW1hbmQsIGFuZCAncG9ydCcgaXMgYSBmbGFnOgoKICAgIGh1Z28gc2Vy
dmVyIC0tcG9ydD0xMzEzCgpJbiB0aGlzIGNvbW1hbmQgd2UgYXJlIHRlbGxp
bmcgR2l0IHRvIGNsb25lIHRoZSB1cmwgYmFyZS4KCiAgICBnaXQgY2xvbmUg
VVJMIC0tYmFyZQoKIyMgQ29tbWFuZHMKCkNvbW1hbmQgaXMgdGhlIGNlbnRy
YWwgcG9pbnQgb2YgdGhlIGFwcGxpY2F0aW9uLiBFYWNoIGludGVyYWN0aW9u
IHRoYXQKdGhlIGFwcGxpY2F0aW9uIHN1cHBvcnRzIHdpbGwgYmUgY29udGFp
bmVkIGluIGEgQ29tbWFuZC4gQSBjb21tYW5kIGNhbgpoYXZlIGNoaWxkcmVu
IGNvbW1hbmRzIGFuZCBvcHRpb25hbGx5IHJ1biBhbiBhY3Rpb24uCgpJbiB0
aGUgZXhhbXBsZSBhYm92ZSwgJ3NlcnZlcicgaXMgdGhlIGNvbW1hbmQuCgpb
TW9yZSBhYm91dCBjb2JyYS5Db21tYW5kXShodHRwczovL2dvZG9jLm9yZy9n
aXRodWIuY29tL3NwZjEzL2NvYnJhI0NvbW1hbmQpCgojIyBGbGFncwoKQSBm
bGFnIGlzIGEgd2F5IHRvIG1vZGlmeSB0aGUgYmVoYXZpb3Igb2YgYSBjb21t
YW5kLiBDb2JyYSBzdXBwb3J0cwpmdWxseSBQT1NJWC1jb21wbGlhbnQgZmxh
Z3MgYXMgd2VsbCBhcyB0aGUgR28gW2ZsYWcgcGFja2FnZV0oaHR0cHM6Ly9n
b2xhbmcub3JnL3BrZy9mbGFnLykuCkEgQ29icmEgY29tbWFuZCBjYW4gZGVm
aW5lIGZsYWdzIHRoYXQgcGVyc2lzdCB0aHJvdWdoIHRvIGNoaWxkcmVuIGNv
bW1hbmRzCmFuZCBmbGFncyB0aGF0IGFyZSBvbmx5IGF2YWlsYWJsZSB0byB0
aGF0IGNvbW1hbmQuCgpJbiB0aGUgZXhhbXBsZSBhYm92ZSwgJ3BvcnQnIGlz
IHRoZSBmbGFnLgoKRmxhZyBmdW5jdGlvbmFsaXR5IGlzIHByb3ZpZGVkIGJ5
IHRoZSBbcGZsYWcKbGlicmFyeV0oaHR0cHM6Ly9naXRodWIuY29tL3NwZjEz
L3BmbGFnKSwgYSBmb3JrIG9mIHRoZSBmbGFnIHN0YW5kYXJkIGxpYnJhcnkK
d2hpY2ggbWFpbnRhaW5zIHRoZSBzYW1lIGludGVyZmFjZSB3aGlsZSBhZGRp
bmcgUE9TSVggY29tcGxpYW5jZS4KCiMgSW5zdGFsbGluZwpVc2luZyBDb2Jy
YSBpcyBlYXN5LiBGaXJzdCwgdXNlIGBnbyBnZXRgIHRvIGluc3RhbGwgdGhl
IGxhdGVzdCB2ZXJzaW9uCm9mIHRoZSBsaWJyYXJ5LiBUaGlzIGNvbW1hbmQg
d2lsbCBpbnN0YWxsIHRoZSBgY29icmFgIGdlbmVyYXRvciBleGVjdXRhYmxl
CmFsb25nIHdpdGggdGhlIGxpYnJhcnkgYW5kIGl0cyBkZXBlbmRlbmNpZXM6
CgogICAgZ28gZ2V0IC11IGdpdGh1Yi5jb20vc3BmMTMvY29icmEvY29icmEK
Ck5leHQsIGluY2x1ZGUgQ29icmEgaW4geW91ciBhcHBsaWNhdGlvbjoKCmBg
YGdvCmltcG9ydCAiZ2l0aHViLmNvbS9zcGYxMy9jb2JyYSIKYGBgCgojIEdl
dHRpbmcgU3RhcnRlZAoKV2hpbGUgeW91IGFyZSB3ZWxjb21lIHRvIHByb3Zp
ZGUgeW91ciBvd24gb3JnYW5pemF0aW9uLCB0eXBpY2FsbHkgYSBDb2JyYS1i
YXNlZAphcHBsaWNhdGlvbiB3aWxsIGZvbGxvdyB0aGUgZm9sbG93aW5nIG9y
Z2FuaXphdGlvbmFsIHN0cnVjdHVyZToKCmBgYAogIOKWviBhcHBOYW1lLwog
ICAg4pa+IGNtZC8KICAgICAgICBhZGQuZ28KICAgICAgICB5b3VyLmdvCiAg
ICAgICAgY29tbWFuZHMuZ28KICAgICAgICBoZXJlLmdvCiAgICAgIG1haW4u
Z28KYGBgCgpJbiBhIENvYnJhIGFwcCwgdHlwaWNhbGx5IHRoZSBtYWluLmdv
IGZpbGUgaXMgdmVyeSBiYXJlLiBJdCBzZXJ2ZXMgb25lIHB1cnBvc2U6IGlu
aXRpYWxpemluZyBDb2JyYS4KCmBgYGdvCnBhY2thZ2UgbWFpbgoKaW1wb3J0
ICgKICAie3BhdGhUb1lvdXJBcHB9L2NtZCIKKQoKZnVuYyBtYWluKCkgewog
IGNtZC5FeGVjdXRlKCkKfQpgYGAKCiMjIFVzaW5nIHRoZSBDb2JyYSBHZW5l
cmF0b3IKCkNvYnJhIHByb3ZpZGVzIGl0cyBvd24gcHJvZ3JhbSB0aGF0IHdp
bGwgY3JlYXRlIHlvdXIgYXBwbGljYXRpb24gYW5kIGFkZCBhbnkKY29tbWFu
ZHMgeW91IHdhbnQuIEl0J3MgdGhlIGVhc2llc3Qgd2F5IHRvIGluY29ycG9y
YXRlIENvYnJhIGludG8geW91ciBhcHBsaWNhdGlvbi4KCltIZXJlXShodHRw
czovL2dpdGh1Yi5jb20vc3BmMTMvY29icmEvYmxvYi9tYXN0ZXIvY29icmEv
UkVBRE1FLm1kKSB5b3UgY2FuIGZpbmQgbW9yZSBpbmZvcm1hdGlvbiBhYm91
dCBpdC4KCiMjIFVzaW5nIHRoZSBDb2JyYSBMaWJyYXJ5CgpUbyBtYW51YWxs
eSBpbXBsZW1lbnQgQ29icmEgeW91IG5lZWQgdG8gY3JlYXRlIGEgYmFyZSBt
YWluLmdvIGZpbGUgYW5kIGEgcm9vdENtZCBmaWxlLgpZb3Ugd2lsbCBvcHRp
b25hbGx5IHByb3ZpZGUgYWRkaXRpb25hbCBjb21tYW5kcyBhcyB5b3Ugc2Vl
IGZpdC4KCiMjIyBDcmVhdGUgcm9vdENtZAoKQ29icmEgZG9lc24ndCByZXF1
aXJlIGFueSBzcGVjaWFsIGNvbnN0cnVjdG9ycy4gU2ltcGx5IGNyZWF0ZSB5
b3VyIGNvbW1hbmRzLgoKSWRlYWxseSB5b3UgcGxhY2UgdGhpcyBpbiBhcHAv
Y21kL3Jvb3QuZ286CgpgYGBnbwp2YXIgcm9vdENtZCA9ICZjb2JyYS5Db21t
YW5kewogIFVzZTogICAiaHVnbyIsCiAgU2hvcnQ6ICJIdWdvIGlzIGEgdmVy
eSBmYXN0IHN0YXRpYyBzaXRlIGdlbmVyYXRvciIsCiAgTG9uZzogYEEgRmFz
dCBhbmQgRmxleGlibGUgU3RhdGljIFNpdGUgR2VuZXJhdG9yIGJ1aWx0IHdp
dGgKICAgICAgICAgICAgICAgIGxvdmUgYnkgc3BmMTMgYW5kIGZyaWVuZHMg
aW4gR28uCiAgICAgICAgICAgICAgICBDb21wbGV0ZSBkb2N1bWVudGF0aW9u
IGlzIGF2YWlsYWJsZSBhdCBodHRwOi8vaHVnby5zcGYxMy5jb21gLAogIFJ1
bjogZnVuYyhjbWQgKmNvYnJhLkNvbW1hbmQsIGFyZ3MgW11zdHJpbmcpIHsK
ICAgIC8vIERvIFN0dWZmIEhlcmUKICB9LAp9CgpmdW5jIEV4ZWN1dGUoKSB7
CiAgaWYgZXJyIDo9IHJvb3RDbWQuRXhlY3V0ZSgpOyBlcnIgIT0gbmlsIHsK
ICAgIGZtdC5QcmludGxuKGVycikKICAgIG9zLkV4aXQoMSkKICB9Cn0KYGBg
CgpZb3Ugd2lsbCBhZGRpdGlvbmFsbHkgZGVmaW5lIGZsYWdzIGFuZCBoYW5k
bGUgY29uZmlndXJhdGlvbiBpbiB5b3VyIGluaXQoKSBmdW5jdGlvbi4KCkZv
ciBleGFtcGxlIGNtZC9yb290LmdvOgoKYGBgZ28KcGFja2FnZSBjbWQKCmlt
cG9ydCAoCgkiZm10IgoKCWhvbWVkaXIgImdpdGh1Yi5jb20vbWl0Y2hlbGxo
L2dvLWhvbWVkaXIiCgkiZ2l0aHViLmNvbS9zcGYxMy9jb2JyYSIKCSJnaXRo
dWIuY29tL3NwZjEzL3ZpcGVyIgopCgp2YXIgKAoJLy8gVXNlZCBmb3IgZmxh
Z3MuCgljZmdGaWxlICAgICBzdHJpbmcKCXVzZXJMaWNlbnNlIHN0cmluZwoK
CXJvb3RDbWQgPSAmY29icmEuQ29tbWFuZHsKCQlVc2U6ICAgImNvYnJhIiwK
CQlTaG9ydDogIkEgZ2VuZXJhdG9yIGZvciBDb2JyYSBiYXNlZCBBcHBsaWNh
dGlvbnMiLAoJCUxvbmc6IGBDb2JyYSBpcyBhIENMSSBsaWJyYXJ5IGZvciBH
byB0aGF0IGVtcG93ZXJzIGFwcGxpY2F0aW9ucy4KVGhpcyBhcHBsaWNhdGlv
biBpcyBhIHRvb2wgdG8gZ2VuZXJhdGUgdGhlIG5lZWRlZCBmaWxlcwp0byBx
dWlja2x5IGNyZWF0ZSBhIENvYnJhIGFwcGxpY2F0aW9uLmAsCgl9CikKCi8v
IEV4ZWN1dGUgZXhlY3V0ZXMgdGhlIHJvb3QgY29tbWFuZC4KZnVuYyBFeGVj
dXRlKCkgZXJyb3IgewoJcmV0dXJuIHJvb3RDbWQuRXhlY3V0ZSgpCn0KCmZ1
bmMgaW5pdCgpIHsKCWNvYnJhLk9uSW5pdGlhbGl6ZShpbml0Q29uZmlnKQoK
CXJvb3RDbWQuUGVyc2lzdGVudEZsYWdzKCkuU3RyaW5nVmFyKCZjZmdGaWxl
LCAiY29uZmlnIiwgIiIsICJjb25maWcgZmlsZSAoZGVmYXVsdCBpcyAkSE9N
RS8uY29icmEueWFtbCkiKQoJcm9vdENtZC5QZXJzaXN0ZW50RmxhZ3MoKS5T
dHJpbmdQKCJhdXRob3IiLCAiYSIsICJZT1VSIE5BTUUiLCAiYXV0aG9yIG5h
bWUgZm9yIGNvcHlyaWdodCBhdHRyaWJ1dGlvbiIpCglyb290Q21kLlBlcnNp
c3RlbnRGbGFncygpLlN0cmluZ1ZhclAoJnVzZXJMaWNlbnNlLCAibGljZW5z
ZSIsICJsIiwgIiIsICJuYW1lIG9mIGxpY2Vuc2UgZm9yIHRoZSBwcm9qZWN0
IikKCXJvb3RDbWQuUGVyc2lzdGVudEZsYWdzKCkuQm9vbCgidmlwZXIiLCB0
cnVlLCAidXNlIFZpcGVyIGZvciBjb25maWd1cmF0aW9uIikKCXZpcGVyLkJp
bmRQRmxhZygiYXV0aG9yIiwgcm9vdENtZC5QZXJzaXN0ZW50RmxhZ3MoKS5M
b29rdXAoImF1dGhvciIpKQoJdmlwZXIuQmluZFBGbGFnKCJ1c2VWaXBlciIs
IHJvb3RDbWQuUGVyc2lzdGVudEZsYWdzKCkuTG9va3VwKCJ2aXBlciIpKQoJ
dmlwZXIuU2V0RGVmYXVsdCgiYXV0aG9yIiwgIk5BTUUgSEVSRSA8RU1BSUwg
QUREUkVTUz4iKQoJdmlwZXIuU2V0RGVmYXVsdCgibGljZW5zZSIsICJhcGFj
aGUiKQoKCXJvb3RDbWQuQWRkQ29tbWFuZChhZGRDbWQpCglyb290Q21kLkFk
ZENvbW1hbmQoaW5pdENtZCkKfQoKZnVuYyBpbml0Q29uZmlnKCkgewoJaWYg
Y2ZnRmlsZSAhPSAiIiB7CgkJLy8gVXNlIGNvbmZpZyBmaWxlIGZyb20gdGhl
IGZsYWcuCgkJdmlwZXIuU2V0Q29uZmlnRmlsZShjZmdGaWxlKQoJfSBlbHNl
IHsKCQkvLyBGaW5kIGhvbWUgZGlyZWN0b3J5LgoJCWhvbWUsIGVyciA6PSBo
b21lZGlyLkRpcigpCgkJaWYgZXJyICE9IG5pbCB7CgkJCWVyKGVycikKCQl9
CgoJCS8vIFNlYXJjaCBjb25maWcgaW4gaG9tZSBkaXJlY3Rvcnkgd2l0aCBu
YW1lICIuY29icmEiICh3aXRob3V0IGV4dGVuc2lvbikuCgkJdmlwZXIuQWRk
Q29uZmlnUGF0aChob21lKQoJCXZpcGVyLlNldENvbmZpZ05hbWUoIi5jb2Jy
YSIpCgl9CgoJdmlwZXIuQXV0b21hdGljRW52KCkKCglpZiBlcnIgOj0gdmlw
ZXIuUmVhZEluQ29uZmlnKCk7IGVyciA9PSBuaWwgewoJCWZtdC5QcmludGxu
KCJVc2luZyBjb25maWcgZmlsZToiLCB2aXBlci5Db25maWdGaWxlVXNlZCgp
KQoJfQp9CmBgYAoKIyMjIENyZWF0ZSB5b3VyIG1haW4uZ28KCldpdGggdGhl
IHJvb3QgY29tbWFuZCB5b3UgbmVlZCB0byBoYXZlIHlvdXIgbWFpbiBmdW5j
dGlvbiBleGVjdXRlIGl0LgpFeGVjdXRlIHNob3VsZCBiZSBydW4gb24gdGhl
IHJvb3QgZm9yIGNsYXJpdHksIHRob3VnaCBpdCBjYW4gYmUgY2FsbGVkIG9u
IGFueSBjb21tYW5kLgoKSW4gYSBDb2JyYSBhcHAsIHR5cGljYWxseSB0aGUg
bWFpbi5nbyBmaWxlIGlzIHZlcnkgYmFyZS4gSXQgc2VydmVzLCBvbmUgcHVy
cG9zZSwgdG8gaW5pdGlhbGl6ZSBDb2JyYS4KCmBgYGdvCnBhY2thZ2UgbWFp
bgoKaW1wb3J0ICgKICAie3BhdGhUb1lvdXJBcHB9L2NtZCIKKQoKZnVuYyBt
YWluKCkgewogIGNtZC5FeGVjdXRlKCkKfQpgYGAKCiMjIyBDcmVhdGUgYWRk
aXRpb25hbCBjb21tYW5kcwoKQWRkaXRpb25hbCBjb21tYW5kcyBjYW4gYmUg
ZGVmaW5lZCBhbmQgdHlwaWNhbGx5IGFyZSBlYWNoIGdpdmVuIHRoZWlyIG93
biBmaWxlCmluc2lkZSBvZiB0aGUgY21kLyBkaXJlY3RvcnkuCgpJZiB5b3Ug
d2FudGVkIHRvIGNyZWF0ZSBhIHZlcnNpb24gY29tbWFuZCB5b3Ugd291bGQg
Y3JlYXRlIGNtZC92ZXJzaW9uLmdvIGFuZApwb3B1bGF0ZSBpdCB3aXRoIHRo
ZSBmb2xsb3dpbmc6CgpgYGBnbwpwYWNrYWdlIGNtZAoKaW1wb3J0ICgKICAi
Zm10IgoKICAiZ2l0aHViLmNvbS9zcGYxMy9jb2JyYSIKKQoKZnVuYyBpbml0
KCkgewogIHJvb3RDbWQuQWRkQ29tbWFuZCh2ZXJzaW9uQ21kKQp9Cgp2YXIg
dmVyc2lvbkNtZCA9ICZjb2JyYS5Db21tYW5kewogIFVzZTogICAidmVyc2lv
biIsCiAgU2hvcnQ6ICJQcmludCB0aGUgdmVyc2lvbiBudW1iZXIgb2YgSHVn
byIsCiAgTG9uZzogIGBBbGwgc29mdHdhcmUgaGFzIHZlcnNpb25zLiBUaGlz
IGlzIEh1Z28nc2AsCiAgUnVuOiBmdW5jKGNtZCAqY29icmEuQ29tbWFuZCwg
YXJncyBbXXN0cmluZykgewogICAgZm10LlByaW50bG4oIkh1Z28gU3RhdGlj
IFNpdGUgR2VuZXJhdG9yIHYwLjkgLS0gSEVBRCIpCiAgfSwKfQpgYGAKCiMj
IFdvcmtpbmcgd2l0aCBGbGFncwoKRmxhZ3MgcHJvdmlkZSBtb2RpZmllcnMg
dG8gY29udHJvbCBob3cgdGhlIGFjdGlvbiBjb21tYW5kIG9wZXJhdGVzLgoK
IyMjIEFzc2lnbiBmbGFncyB0byBhIGNvbW1hbmQKClNpbmNlIHRoZSBmbGFn
cyBhcmUgZGVmaW5lZCBhbmQgdXNlZCBpbiBkaWZmZXJlbnQgbG9jYXRpb25z
LCB3ZSBuZWVkIHRvCmRlZmluZSBhIHZhcmlhYmxlIG91dHNpZGUgd2l0aCB0
aGUgY29ycmVjdCBzY29wZSB0byBhc3NpZ24gdGhlIGZsYWcgdG8Kd29yayB3
aXRoLgoKYGBgZ28KdmFyIFZlcmJvc2UgYm9vbAp2YXIgU291cmNlIHN0cmlu
ZwpgYGAKClRoZXJlIGFyZSB0d28gZGlmZmVyZW50IGFwcHJvYWNoZXMgdG8g
YXNzaWduIGEgZmxhZy4KCiMjIyBQZXJzaXN0ZW50IEZsYWdzCgpBIGZsYWcg
Y2FuIGJlICdwZXJzaXN0ZW50JyBtZWFuaW5nIHRoYXQgdGhpcyBmbGFnIHdp
bGwgYmUgYXZhaWxhYmxlIHRvIHRoZQpjb21tYW5kIGl0J3MgYXNzaWduZWQg
dG8gYXMgd2VsbCBhcyBldmVyeSBjb21tYW5kIHVuZGVyIHRoYXQgY29tbWFu
ZC4gRm9yCmdsb2JhbCBmbGFncywgYXNzaWduIGEgZmxhZyBhcyBhIHBlcnNp
c3RlbnQgZmxhZyBvbiB0aGUgcm9vdC4KCmBgYGdvCnJvb3RDbWQuUGVyc2lz
dGVudEZsYWdzKCkuQm9vbFZhclAoJlZlcmJvc2UsICJ2ZXJib3NlIiwgInYi
LCBmYWxzZSwgInZlcmJvc2Ugb3V0cHV0IikKYGBgCgojIyMgTG9jYWwgRmxh
Z3MKCkEgZmxhZyBjYW4gYWxzbyBiZSBhc3NpZ25lZCBsb2NhbGx5IHdoaWNo
IHdpbGwgb25seSBhcHBseSB0byB0aGF0IHNwZWNpZmljIGNvbW1hbmQuCgpg
YGBnbwpsb2NhbENtZC5GbGFncygpLlN0cmluZ1ZhclAoJlNvdXJjZSwgInNv
dXJjZSIsICJzIiwgIiIsICJTb3VyY2UgZGlyZWN0b3J5IHRvIHJlYWQgZnJv
bSIpCmBgYAoKIyMjIExvY2FsIEZsYWcgb24gUGFyZW50IENvbW1hbmRzCgpC
eSBkZWZhdWx0IENvYnJhIG9ubHkgcGFyc2VzIGxvY2FsIGZsYWdzIG9uIHRo
ZSB0YXJnZXQgY29tbWFuZCwgYW55IGxvY2FsIGZsYWdzIG9uCnBhcmVudCBj
b21tYW5kcyBhcmUgaWdub3JlZC4gQnkgZW5hYmxpbmcgYENvbW1hbmQuVHJh
dmVyc2VDaGlsZHJlbmAgQ29icmEgd2lsbApwYXJzZSBsb2NhbCBmbGFncyBv
biBlYWNoIGNvbW1hbmQgYmVmb3JlIGV4ZWN1dGluZyB0aGUgdGFyZ2V0IGNv
bW1hbmQuCgpgYGBnbwpjb21tYW5kIDo9IGNvYnJhLkNvbW1hbmR7CiAgVXNl
OiAicHJpbnQgW09QVElPTlNdIFtDT01NQU5EU10iLAogIFRyYXZlcnNlQ2hp
bGRyZW46IHRydWUsCn0KYGBgCgojIyMgQmluZCBGbGFncyB3aXRoIENvbmZp
ZwoKWW91IGNhbiBhbHNvIGJpbmQgeW91ciBmbGFncyB3aXRoIFt2aXBlcl0o
aHR0cHM6Ly9naXRodWIuY29tL3NwZjEzL3ZpcGVyKToKYGBgZ28KdmFyIGF1
dGhvciBzdHJpbmcKCmZ1bmMgaW5pdCgpIHsKICByb290Q21kLlBlcnNpc3Rl
bnRGbGFncygpLlN0cmluZ1ZhcigmYXV0aG9yLCAiYXV0aG9yIiwgIllPVVIg
TkFNRSIsICJBdXRob3IgbmFtZSBmb3IgY29weXJpZ2h0IGF0dHJpYnV0aW9u
IikKICB2aXBlci5CaW5kUEZsYWcoImF1dGhvciIsIHJvb3RDbWQuUGVyc2lz
dGVudEZsYWdzKCkuTG9va3VwKCJhdXRob3IiKSkKfQpgYGAKCkluIHRoaXMg
ZXhhbXBsZSB0aGUgcGVyc2lzdGVudCBmbGFnIGBhdXRob3JgIGlzIGJvdW5k
IHdpdGggYHZpcGVyYC4KKipOb3RlKiosIHRoYXQgdGhlIHZhcmlhYmxlIGBh
dXRob3JgIHdpbGwgbm90IGJlIHNldCB0byB0aGUgdmFsdWUgZnJvbSBjb25m
aWcsCndoZW4gdGhlIGAtLWF1dGhvcmAgZmxhZyBpcyBub3QgcHJvdmlkZWQg
YnkgdXNlci4KCk1vcmUgaW4gW3ZpcGVyIGRvY3VtZW50YXRpb25dKGh0dHBz
Oi8vZ2l0aHViLmNvbS9zcGYxMy92aXBlciN3b3JraW5nLXdpdGgtZmxhZ3Mp
LgoKIyMjIFJlcXVpcmVkIGZsYWdzCgpGbGFncyBhcmUgb3B0aW9uYWwgYnkg
ZGVmYXVsdC4gSWYgaW5zdGVhZCB5b3Ugd2lzaCB5b3VyIGNvbW1hbmQgdG8g
cmVwb3J0IGFuIGVycm9yCndoZW4gYSBmbGFnIGhhcyBub3QgYmVlbiBzZXQs
IG1hcmsgaXQgYXMgcmVxdWlyZWQ6CmBgYGdvCnJvb3RDbWQuRmxhZ3MoKS5T
dHJpbmdWYXJQKCZSZWdpb24sICJyZWdpb24iLCAiciIsICIiLCAiQVdTIHJl
Z2lvbiAocmVxdWlyZWQpIikKcm9vdENtZC5NYXJrRmxhZ1JlcXVpcmVkKCJy
ZWdpb24iKQpgYGAKCiMjIFBvc2l0aW9uYWwgYW5kIEN1c3RvbSBBcmd1bWVu
dHMKClZhbGlkYXRpb24gb2YgcG9zaXRpb25hbCBhcmd1bWVudHMgY2FuIGJl
IHNwZWNpZmllZCB1c2luZyB0aGUgYEFyZ3NgIGZpZWxkCm9mIGBDb21tYW5k
YC4KClRoZSBmb2xsb3dpbmcgdmFsaWRhdG9ycyBhcmUgYnVpbHQgaW46Cgot
IGBOb0FyZ3NgIC0gdGhlIGNvbW1hbmQgd2lsbCByZXBvcnQgYW4gZXJyb3Ig
aWYgdGhlcmUgYXJlIGFueSBwb3NpdGlvbmFsIGFyZ3MuCi0gYEFyYml0cmFy
eUFyZ3NgIC0gdGhlIGNvbW1hbmQgd2lsbCBhY2NlcHQgYW55IGFyZ3MuCi0g
YE9ubHlWYWxpZEFyZ3NgIC0gdGhlIGNvbW1hbmQgd2lsbCByZXBvcnQgYW4g
ZXJyb3IgaWYgdGhlcmUgYXJlIGFueSBwb3NpdGlvbmFsIGFyZ3MgdGhhdCBh
cmUgbm90IGluIHRoZSBgVmFsaWRBcmdzYCBmaWVsZCBvZiBgQ29tbWFuZGAu
Ci0gYE1pbmltdW1OQXJncyhpbnQpYCAtIHRoZSBjb21tYW5kIHdpbGwgcmVw
b3J0IGFuIGVycm9yIGlmIHRoZXJlIGFyZSBub3QgYXQgbGVhc3QgTiBwb3Np
dGlvbmFsIGFyZ3MuCi0gYE1heGltdW1OQXJncyhpbnQpYCAtIHRoZSBjb21t
YW5kIHdpbGwgcmVwb3J0IGFuIGVycm9yIGlmIHRoZXJlIGFyZSBtb3JlIHRo
YW4gTiBwb3NpdGlvbmFsIGFyZ3MuCi0gYEV4YWN0QXJncyhpbnQpYCAtIHRo
ZSBjb21tYW5kIHdpbGwgcmVwb3J0IGFuIGVycm9yIGlmIHRoZXJlIGFyZSBu
b3QgZXhhY3RseSBOIHBvc2l0aW9uYWwgYXJncy4KLSBgRXhhY3RWYWxpZEFy
Z3MoaW50KWAgLSB0aGUgY29tbWFuZCB3aWxsIHJlcG9ydCBhbiBlcnJvciBp
ZiB0aGVyZSBhcmUgbm90IGV4YWN0bHkgTiBwb3NpdGlvbmFsIGFyZ3MgT1Ig
aWYgdGhlcmUgYXJlIGFueSBwb3NpdGlvbmFsIGFyZ3MgdGhhdCBhcmUgbm90
IGluIHRoZSBgVmFsaWRBcmdzYCBmaWVsZCBvZiBgQ29tbWFuZGAKLSBgUmFu
Z2VBcmdzKG1pbiwgbWF4KWAgLSB0aGUgY29tbWFuZCB3aWxsIHJlcG9ydCBh
biBlcnJvciBpZiB0aGUgbnVtYmVyIG9mIGFyZ3MgaXMgbm90IGJldHdlZW4g
dGhlIG1pbmltdW0gYW5kIG1heGltdW0gbnVtYmVyIG9mIGV4cGVjdGVkIGFy
Z3MuCgpBbiBleGFtcGxlIG9mIHNldHRpbmcgdGhlIGN1c3RvbSB2YWxpZGF0
b3I6CgpgYGBnbwp2YXIgY21kID0gJmNvYnJhLkNvbW1hbmR7CiAgU2hvcnQ6
ICJoZWxsbyIsCiAgQXJnczogZnVuYyhjbWQgKmNvYnJhLkNvbW1hbmQsIGFy
Z3MgW11zdHJpbmcpIGVycm9yIHsKICAgIGlmIGxlbihhcmdzKSA8IDEgewog
ICAgICByZXR1cm4gZXJyb3JzLk5ldygicmVxdWlyZXMgYSBjb2xvciBhcmd1
bWVudCIpCiAgICB9CiAgICBpZiBteWFwcC5Jc1ZhbGlkQ29sb3IoYXJnc1sw
XSkgewogICAgICByZXR1cm4gbmlsCiAgICB9CiAgICByZXR1cm4gZm10LkVy
cm9yZigiaW52YWxpZCBjb2xvciBzcGVjaWZpZWQ6ICVzIiwgYXJnc1swXSkK
ICB9LAogIFJ1bjogZnVuYyhjbWQgKmNvYnJhLkNvbW1hbmQsIGFyZ3MgW11z
dHJpbmcpIHsKICAgIGZtdC5QcmludGxuKCJIZWxsbywgV29ybGQhIikKICB9
LAp9CmBgYAoKIyMgRXhhbXBsZQoKSW4gdGhlIGV4YW1wbGUgYmVsb3csIHdl
IGhhdmUgZGVmaW5lZCB0aHJlZSBjb21tYW5kcy4gVHdvIGFyZSBhdCB0aGUg
dG9wIGxldmVsCmFuZCBvbmUgKGNtZFRpbWVzKSBpcyBhIGNoaWxkIG9mIG9u
ZSBvZiB0aGUgdG9wIGNvbW1hbmRzLiBJbiB0aGlzIGNhc2UgdGhlIHJvb3QK
aXMgbm90IGV4ZWN1dGFibGUgbWVhbmluZyB0aGF0IGEgc3ViY29tbWFuZCBp
cyByZXF1aXJlZC4gVGhpcyBpcyBhY2NvbXBsaXNoZWQKYnkgbm90IHByb3Zp
ZGluZyBhICdSdW4nIGZvciB0aGUgJ3Jvb3RDbWQnLgoKV2UgaGF2ZSBvbmx5
IGRlZmluZWQgb25lIGZsYWcgZm9yIGEgc2luZ2xlIGNvbW1hbmQuCgpNb3Jl
IGRvY3VtZW50YXRpb24gYWJvdXQgZmxhZ3MgaXMgYXZhaWxhYmxlIGF0IGh0
dHBzOi8vZ2l0aHViLmNvbS9zcGYxMy9wZmxhZwoKYGBgZ28KcGFja2FnZSBt
YWluCgppbXBvcnQgKAogICJmbXQiCiAgInN0cmluZ3MiCgogICJnaXRodWIu
Y29tL3NwZjEzL2NvYnJhIgopCgpmdW5jIG1haW4oKSB7CiAgdmFyIGVjaG9U
aW1lcyBpbnQKCiAgdmFyIGNtZFByaW50ID0gJmNvYnJhLkNvbW1hbmR7CiAg
ICBVc2U6ICAgInByaW50IFtzdHJpbmcgdG8gcHJpbnRdIiwKICAgIFNob3J0
OiAiUHJpbnQgYW55dGhpbmcgdG8gdGhlIHNjcmVlbiIsCiAgICBMb25nOiBg
cHJpbnQgaXMgZm9yIHByaW50aW5nIGFueXRoaW5nIGJhY2sgdG8gdGhlIHNj
cmVlbi4KRm9yIG1hbnkgeWVhcnMgcGVvcGxlIGhhdmUgcHJpbnRlZCBiYWNr
IHRvIHRoZSBzY3JlZW4uYCwKICAgIEFyZ3M6IGNvYnJhLk1pbmltdW1OQXJn
cygxKSwKICAgIFJ1bjogZnVuYyhjbWQgKmNvYnJhLkNvbW1hbmQsIGFyZ3Mg
W11zdHJpbmcpIHsKICAgICAgZm10LlByaW50bG4oIlByaW50OiAiICsgc3Ry
aW5ncy5Kb2luKGFyZ3MsICIgIikpCiAgICB9LAogIH0KCiAgdmFyIGNtZEVj
aG8gPSAmY29icmEuQ29tbWFuZHsKICAgIFVzZTogICAiZWNobyBbc3RyaW5n
IHRvIGVjaG9dIiwKICAgIFNob3J0OiAiRWNobyBhbnl0aGluZyB0byB0aGUg
c2NyZWVuIiwKICAgIExvbmc6IGBlY2hvIGlzIGZvciBlY2hvaW5nIGFueXRo
aW5nIGJhY2suCkVjaG8gd29ya3MgYSBsb3QgbGlrZSBwcmludCwgZXhjZXB0
IGl0IGhhcyBhIGNoaWxkIGNvbW1hbmQuYCwKICAgIEFyZ3M6IGNvYnJhLk1p
bmltdW1OQXJncygxKSwKICAgIFJ1bjogZnVuYyhjbWQgKmNvYnJhLkNvbW1h
bmQsIGFyZ3MgW11zdHJpbmcpIHsKICAgICAgZm10LlByaW50bG4oIkVjaG86
ICIgKyBzdHJpbmdzLkpvaW4oYXJncywgIiAiKSkKICAgIH0sCiAgfQoKICB2
YXIgY21kVGltZXMgPSAmY29icmEuQ29tbWFuZHsKICAgIFVzZTogICAidGlt
ZXMgW3N0cmluZyB0byBlY2hvXSIsCiAgICBTaG9ydDogIkVjaG8gYW55dGhp
bmcgdG8gdGhlIHNjcmVlbiBtb3JlIHRpbWVzIiwKICAgIExvbmc6IGBlY2hv
IHRoaW5ncyBtdWx0aXBsZSB0aW1lcyBiYWNrIHRvIHRoZSB1c2VyIGJ5IHBy
b3ZpZGluZwphIGNvdW50IGFuZCBhIHN0cmluZy5gLAogICAgQXJnczogY29i
cmEuTWluaW11bU5BcmdzKDEpLAogICAgUnVuOiBmdW5jKGNtZCAqY29icmEu
Q29tbWFuZCwgYXJncyBbXXN0cmluZykgewogICAgICBmb3IgaSA6PSAwOyBp
IDwgZWNob1RpbWVzOyBpKysgewogICAgICAgIGZtdC5QcmludGxuKCJFY2hv
OiAiICsgc3RyaW5ncy5Kb2luKGFyZ3MsICIgIikpCiAgICAgIH0KICAgIH0s
CiAgfQoKICBjbWRUaW1lcy5GbGFncygpLkludFZhclAoJmVjaG9UaW1lcywg
InRpbWVzIiwgInQiLCAxLCAidGltZXMgdG8gZWNobyB0aGUgaW5wdXQiKQoK
ICB2YXIgcm9vdENtZCA9ICZjb2JyYS5Db21tYW5ke1VzZTogImFwcCJ9CiAg
cm9vdENtZC5BZGRDb21tYW5kKGNtZFByaW50LCBjbWRFY2hvKQogIGNtZEVj
aG8uQWRkQ29tbWFuZChjbWRUaW1lcykKICByb290Q21kLkV4ZWN1dGUoKQp9
CmBgYAoKRm9yIGEgbW9yZSBjb21wbGV0ZSBleGFtcGxlIG9mIGEgbGFyZ2Vy
IGFwcGxpY2F0aW9uLCBwbGVhc2UgY2hlY2tvdXQgW0h1Z29dKGh0dHA6Ly9n
b2h1Z28uaW8vKS4KCiMjIEhlbHAgQ29tbWFuZAoKQ29icmEgYXV0b21hdGlj
YWxseSBhZGRzIGEgaGVscCBjb21tYW5kIHRvIHlvdXIgYXBwbGljYXRpb24g
d2hlbiB5b3UgaGF2ZSBzdWJjb21tYW5kcy4KVGhpcyB3aWxsIGJlIGNhbGxl
ZCB3aGVuIGEgdXNlciBydW5zICdhcHAgaGVscCcuIEFkZGl0aW9uYWxseSwg
aGVscCB3aWxsIGFsc28Kc3VwcG9ydCBhbGwgb3RoZXIgY29tbWFuZHMgYXMg
aW5wdXQuIFNheSwgZm9yIGluc3RhbmNlLCB5b3UgaGF2ZSBhIGNvbW1hbmQg
Y2FsbGVkCidjcmVhdGUnIHdpdGhvdXQgYW55IGFkZGl0aW9uYWwgY29uZmln
dXJhdGlvbjsgQ29icmEgd2lsbCB3b3JrIHdoZW4gJ2FwcCBoZWxwCmNyZWF0
ZScgaXMgY2FsbGVkLiAgRXZlcnkgY29tbWFuZCB3aWxsIGF1dG9tYXRpY2Fs
bHkgaGF2ZSB0aGUgJy0taGVscCcgZmxhZyBhZGRlZC4KCiMjIyBFeGFtcGxl
CgpUaGUgZm9sbG93aW5nIG91dHB1dCBpcyBhdXRvbWF0aWNhbGx5IGdlbmVy
YXRlZCBieSBDb2JyYS4gTm90aGluZyBiZXlvbmQgdGhlCmNvbW1hbmQgYW5k
IGZsYWcgZGVmaW5pdGlvbnMgYXJlIG5lZWRlZC4KCiAgICAkIGNvYnJhIGhl
bHAKCiAgICBDb2JyYSBpcyBhIENMSSBsaWJyYXJ5IGZvciBHbyB0aGF0IGVt
cG93ZXJzIGFwcGxpY2F0aW9ucy4KICAgIFRoaXMgYXBwbGljYXRpb24gaXMg
YSB0b29sIHRvIGdlbmVyYXRlIHRoZSBuZWVkZWQgZmlsZXMKICAgIHRvIHF1
aWNrbHkgY3JlYXRlIGEgQ29icmEgYXBwbGljYXRpb24uCgogICAgVXNhZ2U6
CiAgICAgIGNvYnJhIFtjb21tYW5kXQoKICAgIEF2YWlsYWJsZSBDb21tYW5k
czoKICAgICAgYWRkICAgICAgICAgQWRkIGEgY29tbWFuZCB0byBhIENvYnJh
IEFwcGxpY2F0aW9uCiAgICAgIGhlbHAgICAgICAgIEhlbHAgYWJvdXQgYW55
IGNvbW1hbmQKICAgICAgaW5pdCAgICAgICAgSW5pdGlhbGl6ZSBhIENvYnJh
IEFwcGxpY2F0aW9uCgogICAgRmxhZ3M6CiAgICAgIC1hLCAtLWF1dGhvciBz
dHJpbmcgICAgYXV0aG9yIG5hbWUgZm9yIGNvcHlyaWdodCBhdHRyaWJ1dGlv
biAoZGVmYXVsdCAiWU9VUiBOQU1FIikKICAgICAgICAgIC0tY29uZmlnIHN0
cmluZyAgICBjb25maWcgZmlsZSAoZGVmYXVsdCBpcyAkSE9NRS8uY29icmEu
eWFtbCkKICAgICAgLWgsIC0taGVscCAgICAgICAgICAgICBoZWxwIGZvciBj
b2JyYQogICAgICAtbCwgLS1saWNlbnNlIHN0cmluZyAgIG5hbWUgb2YgbGlj
ZW5zZSBmb3IgdGhlIHByb2plY3QKICAgICAgICAgIC0tdmlwZXIgICAgICAg
ICAgICB1c2UgVmlwZXIgZm9yIGNvbmZpZ3VyYXRpb24gKGRlZmF1bHQgdHJ1
ZSkKCiAgICBVc2UgImNvYnJhIFtjb21tYW5kXSAtLWhlbHAiIGZvciBtb3Jl
IGluZm9ybWF0aW9uIGFib3V0IGEgY29tbWFuZC4KCgpIZWxwIGlzIGp1c3Qg
YSBjb21tYW5kIGxpa2UgYW55IG90aGVyLiBUaGVyZSBpcyBubyBzcGVjaWFs
IGxvZ2ljIG9yIGJlaGF2aW9yCmFyb3VuZCBpdC4gSW4gZmFjdCwgeW91IGNh
biBwcm92aWRlIHlvdXIgb3duIGlmIHlvdSB3YW50LgoKIyMjIERlZmluaW5n
IHlvdXIgb3duIGhlbHAKCllvdSBjYW4gcHJvdmlkZSB5b3VyIG93biBIZWxw
IGNvbW1hbmQgb3IgeW91ciBvd24gdGVtcGxhdGUgZm9yIHRoZSBkZWZhdWx0
IGNvbW1hbmQgdG8gdXNlCndpdGggZm9sbG93aW5nIGZ1bmN0aW9uczoKCmBg
YGdvCmNtZC5TZXRIZWxwQ29tbWFuZChjbWQgKkNvbW1hbmQpCmNtZC5TZXRI
ZWxwRnVuYyhmIGZ1bmMoKkNvbW1hbmQsIFtdc3RyaW5nKSkKY21kLlNldEhl
bHBUZW1wbGF0ZShzIHN0cmluZykKYGBgCgpUaGUgbGF0dGVyIHR3byB3aWxs
IGFsc28gYXBwbHkgdG8gYW55IGNoaWxkcmVuIGNvbW1hbmRzLgoKIyMgVXNh
Z2UgTWVzc2FnZQoKV2hlbiB0aGUgdXNlciBwcm92aWRlcyBhbiBpbnZhbGlk
IGZsYWcgb3IgaW52YWxpZCBjb21tYW5kLCBDb2JyYSByZXNwb25kcyBieQpz
aG93aW5nIHRoZSB1c2VyIHRoZSAndXNhZ2UnLgoKIyMjIEV4YW1wbGUKWW91
IG1heSByZWNvZ25pemUgdGhpcyBmcm9tIHRoZSBoZWxwIGFib3ZlLiBUaGF0
J3MgYmVjYXVzZSB0aGUgZGVmYXVsdCBoZWxwCmVtYmVkcyB0aGUgdXNhZ2Ug
YXMgcGFydCBvZiBpdHMgb3V0cHV0LgoKICAgICQgY29icmEgLS1pbnZhbGlk
CiAgICBFcnJvcjogdW5rbm93biBmbGFnOiAtLWludmFsaWQKICAgIFVzYWdl
OgogICAgICBjb2JyYSBbY29tbWFuZF0KCiAgICBBdmFpbGFibGUgQ29tbWFu
ZHM6CiAgICAgIGFkZCAgICAgICAgIEFkZCBhIGNvbW1hbmQgdG8gYSBDb2Jy
YSBBcHBsaWNhdGlvbgogICAgICBoZWxwICAgICAgICBIZWxwIGFib3V0IGFu
eSBjb21tYW5kCiAgICAgIGluaXQgICAgICAgIEluaXRpYWxpemUgYSBDb2Jy
YSBBcHBsaWNhdGlvbgoKICAgIEZsYWdzOgogICAgICAtYSwgLS1hdXRob3Ig
c3RyaW5nICAgIGF1dGhvciBuYW1lIGZvciBjb3B5cmlnaHQgYXR0cmlidXRp
b24gKGRlZmF1bHQgIllPVVIgTkFNRSIpCiAgICAgICAgICAtLWNvbmZpZyBz
dHJpbmcgICAgY29uZmlnIGZpbGUgKGRlZmF1bHQgaXMgJEhPTUUvLmNvYnJh
LnlhbWwpCiAgICAgIC1oLCAtLWhlbHAgICAgICAgICAgICAgaGVscCBmb3Ig
Y29icmEKICAgICAgLWwsIC0tbGljZW5zZSBzdHJpbmcgICBuYW1lIG9mIGxp
Y2Vuc2UgZm9yIHRoZSBwcm9qZWN0CiAgICAgICAgICAtLXZpcGVyICAgICAg
ICAgICAgdXNlIFZpcGVyIGZvciBjb25maWd1cmF0aW9uIChkZWZhdWx0IHRy
dWUpCgogICAgVXNlICJjb2JyYSBbY29tbWFuZF0gLS1oZWxwIiBmb3IgbW9y
ZSBpbmZvcm1hdGlvbiBhYm91dCBhIGNvbW1hbmQuCgojIyMgRGVmaW5pbmcg
eW91ciBvd24gdXNhZ2UKWW91IGNhbiBwcm92aWRlIHlvdXIgb3duIHVzYWdl
IGZ1bmN0aW9uIG9yIHRlbXBsYXRlIGZvciBDb2JyYSB0byB1c2UuCkxpa2Ug
aGVscCwgdGhlIGZ1bmN0aW9uIGFuZCB0ZW1wbGF0ZSBhcmUgb3ZlcnJpZGFi
bGUgdGhyb3VnaCBwdWJsaWMgbWV0aG9kczoKCmBgYGdvCmNtZC5TZXRVc2Fn
ZUZ1bmMoZiBmdW5jKCpDb21tYW5kKSBlcnJvcikKY21kLlNldFVzYWdlVGVt
cGxhdGUocyBzdHJpbmcpCmBgYAoKIyMgVmVyc2lvbiBGbGFnCgpDb2JyYSBh
ZGRzIGEgdG9wLWxldmVsICctLXZlcnNpb24nIGZsYWcgaWYgdGhlIFZlcnNp
b24gZmllbGQgaXMgc2V0IG9uIHRoZSByb290IGNvbW1hbmQuClJ1bm5pbmcg
YW4gYXBwbGljYXRpb24gd2l0aCB0aGUgJy0tdmVyc2lvbicgZmxhZyB3aWxs
IHByaW50IHRoZSB2ZXJzaW9uIHRvIHN0ZG91dCB1c2luZwp0aGUgdmVyc2lv
biB0ZW1wbGF0ZS4gVGhlIHRlbXBsYXRlIGNhbiBiZSBjdXN0b21pemVkIHVz
aW5nIHRoZQpgY21kLlNldFZlcnNpb25UZW1wbGF0ZShzIHN0cmluZylgIGZ1
bmN0aW9uLgoKIyMgUHJlUnVuIGFuZCBQb3N0UnVuIEhvb2tzCgpJdCBpcyBw
b3NzaWJsZSB0byBydW4gZnVuY3Rpb25zIGJlZm9yZSBvciBhZnRlciB0aGUg
bWFpbiBgUnVuYCBmdW5jdGlvbiBvZiB5b3VyIGNvbW1hbmQuIFRoZSBgUGVy
c2lzdGVudFByZVJ1bmAgYW5kIGBQcmVSdW5gIGZ1bmN0aW9ucyB3aWxsIGJl
IGV4ZWN1dGVkIGJlZm9yZSBgUnVuYC4gYFBlcnNpc3RlbnRQb3N0UnVuYCBh
bmQgYFBvc3RSdW5gIHdpbGwgYmUgZXhlY3V0ZWQgYWZ0ZXIgYFJ1bmAuICBU
aGUgYFBlcnNpc3RlbnQqUnVuYCBmdW5jdGlvbnMgd2lsbCBiZSBpbmhlcml0
ZWQgYnkgY2hpbGRyZW4gaWYgdGhleSBkbyBub3QgZGVjbGFyZSB0aGVpciBv
d24uICBUaGVzZSBmdW5jdGlvbnMgYXJlIHJ1biBpbiB0aGUgZm9sbG93aW5n
IG9yZGVyOgoKLSBgUGVyc2lzdGVudFByZVJ1bmAKLSBgUHJlUnVuYAotIGBS
dW5gCi0gYFBvc3RSdW5gCi0gYFBlcnNpc3RlbnRQb3N0UnVuYAoKQW4gZXhh
bXBsZSBvZiB0d28gY29tbWFuZHMgd2hpY2ggdXNlIGFsbCBvZiB0aGVzZSBm
ZWF0dXJlcyBpcyBiZWxvdy4gIFdoZW4gdGhlIHN1YmNvbW1hbmQgaXMgZXhl
Y3V0ZWQsIGl0IHdpbGwgcnVuIHRoZSByb290IGNvbW1hbmQncyBgUGVyc2lz
dGVudFByZVJ1bmAgYnV0IG5vdCB0aGUgcm9vdCBjb21tYW5kJ3MgYFBlcnNp
c3RlbnRQb3N0UnVuYDoKCmBgYGdvCnBhY2thZ2UgbWFpbgoKaW1wb3J0ICgK
ICAiZm10IgoKICAiZ2l0aHViLmNvbS9zcGYxMy9jb2JyYSIKKQoKZnVuYyBt
YWluKCkgewoKICB2YXIgcm9vdENtZCA9ICZjb2JyYS5Db21tYW5kewogICAg
VXNlOiAgICJyb290IFtzdWJdIiwKICAgIFNob3J0OiAiTXkgcm9vdCBjb21t
YW5kIiwKICAgIFBlcnNpc3RlbnRQcmVSdW46IGZ1bmMoY21kICpjb2JyYS5D
b21tYW5kLCBhcmdzIFtdc3RyaW5nKSB7CiAgICAgIGZtdC5QcmludGYoIklu
c2lkZSByb290Q21kIFBlcnNpc3RlbnRQcmVSdW4gd2l0aCBhcmdzOiAldlxu
IiwgYXJncykKICAgIH0sCiAgICBQcmVSdW46IGZ1bmMoY21kICpjb2JyYS5D
b21tYW5kLCBhcmdzIFtdc3RyaW5nKSB7CiAgICAgIGZtdC5QcmludGYoIklu
c2lkZSByb290Q21kIFByZVJ1biB3aXRoIGFyZ3M6ICV2XG4iLCBhcmdzKQog
ICAgfSwKICAgIFJ1bjogZnVuYyhjbWQgKmNvYnJhLkNvbW1hbmQsIGFyZ3Mg
W11zdHJpbmcpIHsKICAgICAgZm10LlByaW50ZigiSW5zaWRlIHJvb3RDbWQg
UnVuIHdpdGggYXJnczogJXZcbiIsIGFyZ3MpCiAgICB9LAogICAgUG9zdFJ1
bjogZnVuYyhjbWQgKmNvYnJhLkNvbW1hbmQsIGFyZ3MgW11zdHJpbmcpIHsK
ICAgICAgZm10LlByaW50ZigiSW5zaWRlIHJvb3RDbWQgUG9zdFJ1biB3aXRo
IGFyZ3M6ICV2XG4iLCBhcmdzKQogICAgfSwKICAgIFBlcnNpc3RlbnRQb3N0
UnVuOiBmdW5jKGNtZCAqY29icmEuQ29tbWFuZCwgYXJncyBbXXN0cmluZykg
ewogICAgICBmbXQuUHJpbnRmKCJJbnNpZGUgcm9vdENtZCBQZXJzaXN0ZW50
UG9zdFJ1biB3aXRoIGFyZ3M6ICV2XG4iLCBhcmdzKQogICAgfSwKICB9Cgog
IHZhciBzdWJDbWQgPSAmY29icmEuQ29tbWFuZHsKICAgIFVzZTogICAic3Vi
IFtubyBvcHRpb25zIV0iLAogICAgU2hvcnQ6ICJNeSBzdWJjb21tYW5kIiwK
ICAgIFByZVJ1bjogZnVuYyhjbWQgKmNvYnJhLkNvbW1hbmQsIGFyZ3MgW11z
dHJpbmcpIHsKICAgICAgZm10LlByaW50ZigiSW5zaWRlIHN1YkNtZCBQcmVS
dW4gd2l0aCBhcmdzOiAldlxuIiwgYXJncykKICAgIH0sCiAgICBSdW46IGZ1
bmMoY21kICpjb2JyYS5Db21tYW5kLCBhcmdzIFtdc3RyaW5nKSB7CiAgICAg
IGZtdC5QcmludGYoIkluc2lkZSBzdWJDbWQgUnVuIHdpdGggYXJnczogJXZc
biIsIGFyZ3MpCiAgICB9LAogICAgUG9zdFJ1bjogZnVuYyhjbWQgKmNvYnJh
LkNvbW1hbmQsIGFyZ3MgW11zdHJpbmcpIHsKICAgICAgZm10LlByaW50Zigi
SW5zaWRlIHN1YkNtZCBQb3N0UnVuIHdpdGggYXJnczogJXZcbiIsIGFyZ3Mp
CiAgICB9LAogICAgUGVyc2lzdGVudFBvc3RSdW46IGZ1bmMoY21kICpjb2Jy
YS5Db21tYW5kLCBhcmdzIFtdc3RyaW5nKSB7CiAgICAgIGZtdC5QcmludGYo
Ikluc2lkZSBzdWJDbWQgUGVyc2lzdGVudFBvc3RSdW4gd2l0aCBhcmdzOiAl
dlxuIiwgYXJncykKICAgIH0sCiAgfQoKICByb290Q21kLkFkZENvbW1hbmQo
c3ViQ21kKQoKICByb290Q21kLlNldEFyZ3MoW11zdHJpbmd7IiJ9KQogIHJv
b3RDbWQuRXhlY3V0ZSgpCiAgZm10LlByaW50bG4oKQogIHJvb3RDbWQuU2V0
QXJncyhbXXN0cmluZ3sic3ViIiwgImFyZzEiLCAiYXJnMiJ9KQogIHJvb3RD
bWQuRXhlY3V0ZSgpCn0KYGBgCgpPdXRwdXQ6CmBgYApJbnNpZGUgcm9vdENt
ZCBQZXJzaXN0ZW50UHJlUnVuIHdpdGggYXJnczogW10KSW5zaWRlIHJvb3RD
bWQgUHJlUnVuIHdpdGggYXJnczogW10KSW5zaWRlIHJvb3RDbWQgUnVuIHdp
dGggYXJnczogW10KSW5zaWRlIHJvb3RDbWQgUG9zdFJ1biB3aXRoIGFyZ3M6
IFtdCkluc2lkZSByb290Q21kIFBlcnNpc3RlbnRQb3N0UnVuIHdpdGggYXJn
czogW10KCkluc2lkZSByb290Q21kIFBlcnNpc3RlbnRQcmVSdW4gd2l0aCBh
cmdzOiBbYXJnMSBhcmcyXQpJbnNpZGUgc3ViQ21kIFByZVJ1biB3aXRoIGFy
Z3M6IFthcmcxIGFyZzJdCkluc2lkZSBzdWJDbWQgUnVuIHdpdGggYXJnczog
W2FyZzEgYXJnMl0KSW5zaWRlIHN1YkNtZCBQb3N0UnVuIHdpdGggYXJnczog
W2FyZzEgYXJnMl0KSW5zaWRlIHN1YkNtZCBQZXJzaXN0ZW50UG9zdFJ1biB3
aXRoIGFyZ3M6IFthcmcxIGFyZzJdCmBgYAoKIyMgU3VnZ2VzdGlvbnMgd2hl
biAidW5rbm93biBjb21tYW5kIiBoYXBwZW5zCgpDb2JyYSB3aWxsIHByaW50
IGF1dG9tYXRpYyBzdWdnZXN0aW9ucyB3aGVuICJ1bmtub3duIGNvbW1hbmQi
IGVycm9ycyBoYXBwZW4uIFRoaXMgYWxsb3dzIENvYnJhIHRvIGJlaGF2ZSBz
aW1pbGFybHkgdG8gdGhlIGBnaXRgIGNvbW1hbmQgd2hlbiBhIHR5cG8gaGFw
cGVucy4gRm9yIGV4YW1wbGU6CgpgYGAKJCBodWdvIHNyZXZlcgpFcnJvcjog
dW5rbm93biBjb21tYW5kICJzcmV2ZXIiIGZvciAiaHVnbyIKCkRpZCB5b3Ug
bWVhbiB0aGlzPwogICAgICAgIHNlcnZlcgoKUnVuICdodWdvIC0taGVscCcg
Zm9yIHVzYWdlLgpgYGAKClN1Z2dlc3Rpb25zIGFyZSBhdXRvbWF0aWMgYmFz
ZWQgb24gZXZlcnkgc3ViY29tbWFuZCByZWdpc3RlcmVkIGFuZCB1c2UgYW4g
aW1wbGVtZW50YXRpb24gb2YgW0xldmVuc2h0ZWluIGRpc3RhbmNlXShodHRw
Oi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0xldmVuc2h0ZWluX2Rpc3RhbmNl
KS4gRXZlcnkgcmVnaXN0ZXJlZCBjb21tYW5kIHRoYXQgbWF0Y2hlcyBhIG1p
bmltdW0gZGlzdGFuY2Ugb2YgMiAoaWdub3JpbmcgY2FzZSkgd2lsbCBiZSBk
aXNwbGF5ZWQgYXMgYSBzdWdnZXN0aW9uLgoKSWYgeW91IG5lZWQgdG8gZGlz
YWJsZSBzdWdnZXN0aW9ucyBvciB0d2VhayB0aGUgc3RyaW5nIGRpc3RhbmNl
IGluIHlvdXIgY29tbWFuZCwgdXNlOgoKYGBgZ28KY29tbWFuZC5EaXNhYmxl
U3VnZ2VzdGlvbnMgPSB0cnVlCmBgYAoKb3IKCmBgYGdvCmNvbW1hbmQuU3Vn
Z2VzdGlvbnNNaW5pbXVtRGlzdGFuY2UgPSAxCmBgYAoKWW91IGNhbiBhbHNv
IGV4cGxpY2l0bHkgc2V0IG5hbWVzIGZvciB3aGljaCBhIGdpdmVuIGNvbW1h
bmQgd2lsbCBiZSBzdWdnZXN0ZWQgdXNpbmcgdGhlIGBTdWdnZXN0Rm9yYCBh
dHRyaWJ1dGUuIFRoaXMgYWxsb3dzIHN1Z2dlc3Rpb25zIGZvciBzdHJpbmdz
IHRoYXQgYXJlIG5vdCBjbG9zZSBpbiB0ZXJtcyBvZiBzdHJpbmcgZGlzdGFu
Y2UsIGJ1dCBtYWtlcyBzZW5zZSBpbiB5b3VyIHNldCBvZiBjb21tYW5kcyBh
bmQgZm9yIHNvbWUgd2hpY2ggeW91IGRvbid0IHdhbnQgYWxpYXNlcy4gRXhh
bXBsZToKCmBgYAokIGt1YmVjdGwgcmVtb3ZlCkVycm9yOiB1bmtub3duIGNv
bW1hbmQgInJlbW92ZSIgZm9yICJrdWJlY3RsIgoKRGlkIHlvdSBtZWFuIHRo
aXM/CiAgICAgICAgZGVsZXRlCgpSdW4gJ2t1YmVjdGwgaGVscCcgZm9yIHVz
YWdlLgpgYGAKCiMjIEdlbmVyYXRpbmcgZG9jdW1lbnRhdGlvbiBmb3IgeW91
ciBjb21tYW5kCgpDb2JyYSBjYW4gZ2VuZXJhdGUgZG9jdW1lbnRhdGlvbiBi
YXNlZCBvbiBzdWJjb21tYW5kcywgZmxhZ3MsIGV0Yy4gaW4gdGhlIGZvbGxv
d2luZyBmb3JtYXRzOgoKLSBbTWFya2Rvd25dKGRvYy9tZF9kb2NzLm1kKQot
IFtSZVN0cnVjdHVyZWQgVGV4dF0oZG9jL3Jlc3RfZG9jcy5tZCkKLSBbTWFu
IFBhZ2VdKGRvYy9tYW5fZG9jcy5tZCkKCiMjIEdlbmVyYXRpbmcgYmFzaCBj
b21wbGV0aW9ucwoKQ29icmEgY2FuIGdlbmVyYXRlIGEgYmFzaC1jb21wbGV0
aW9uIGZpbGUuIElmIHlvdSBhZGQgbW9yZSBpbmZvcm1hdGlvbiB0byB5b3Vy
IGNvbW1hbmQsIHRoZXNlIGNvbXBsZXRpb25zIGNhbiBiZSBhbWF6aW5nbHkg
cG93ZXJmdWwgYW5kIGZsZXhpYmxlLiAgUmVhZCBtb3JlIGFib3V0IGl0IGlu
IFtCYXNoIENvbXBsZXRpb25zXShiYXNoX2NvbXBsZXRpb25zLm1kKS4KCiMj
IEdlbmVyYXRpbmcgenNoIGNvbXBsZXRpb25zCgpDb2JyYSBjYW4gZ2VuZXJh
dGUgenNoLWNvbXBsZXRpb24gZmlsZS4gUmVhZCBtb3JlIGFib3V0IGl0IGlu
Cltac2ggQ29tcGxldGlvbnNdKHpzaF9jb21wbGV0aW9ucy5tZCkuCgojIENv
bnRyaWJ1dGluZwoKMS4gRm9yayBpdAoyLiBEb3dubG9hZCB5b3VyIGZvcmsg
dG8geW91ciBQQyAoYGdpdCBjbG9uZSBodHRwczovL2dpdGh1Yi5jb20veW91
cl91c2VybmFtZS9jb2JyYSAmJiBjZCBjb2JyYWApCjMuIENyZWF0ZSB5b3Vy
IGZlYXR1cmUgYnJhbmNoIChgZ2l0IGNoZWNrb3V0IC1iIG15LW5ldy1mZWF0
dXJlYCkKNC4gTWFrZSBjaGFuZ2VzIGFuZCBhZGQgdGhlbSAoYGdpdCBhZGQg
LmApCjUuIENvbW1pdCB5b3VyIGNoYW5nZXMgKGBnaXQgY29tbWl0IC1tICdB
ZGQgc29tZSBmZWF0dXJlJ2ApCjYuIFB1c2ggdG8gdGhlIGJyYW5jaCAoYGdp
dCBwdXNoIG9yaWdpbiBteS1uZXctZmVhdHVyZWApCjcuIENyZWF0ZSBuZXcg
cHVsbCByZXF1ZXN0CgojIExpY2Vuc2UKCkNvYnJhIGlzIHJlbGVhc2VkIHVu
ZGVyIHRoZSBBcGFjaGUgMi4wIGxpY2Vuc2UuIFNlZSBbTElDRU5TRS50eHRd
KGh0dHBzOi8vZ2l0aHViLmNvbS9zcGYxMy9jb2JyYS9ibG9iL21hc3Rlci9M
SUNFTlNFLnR4dCkK
",,14760,"bGFuZ3VhZ2U6IGdvCgpzdGFnZXM6CiAgLSBkaWZmCiAgLSB0ZXN0CgpnbzoK
ICAtIDEuMTAueAogIC0gMS4xMS54CiAgLSAxLjEyLngKICAtIHRpcAoKbWF0
cml4OgogIGFsbG93X2ZhaWx1cmVzOgogICAgLSBnbzogdGlwCiAgaW5jbHVk
ZToKICAgIC0gc3RhZ2U6IGRpZmYKICAgICAgZ286IDEuMTIueAogICAgICBz
Y3JpcHQ6IGRpZmYgLXUgPChlY2hvIC1uKSA8KGdvZm10IC1kIC1zIC4pCgpi
ZWZvcmVfaW5zdGFsbDogZ28gZ2V0IC11IGdpdGh1Yi5jb20va3lvaDg2L3Jp
Y2hnbwoKc2NyaXB0OgogIC0gcmljaGdvIHRlc3QgLXYgLi8uLi4KICAtIGdv
IGJ1aWxkCiAgLSBpZiBbIC16ICROT1ZFVCBdOyB0aGVuCiAgICAgIGRpZmYg
LXUgPChlY2hvIC1uKSA8KGdvIHZldCAuIDI+JjEgfCBncmVwIC12RSAnRXhh
bXBsZUNvbW1hbmR8YmFzaF9jb21wbGV0aW9ucy4qRnByaW50Jyk7CiAgICBm
aQo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"dmVyc2lvbjogMgoKcmVmZXJlbmNlczoKICB3b3Jrc3BhY2U6ICZ3b3Jrc3Bh
Y2UKICAgIC9nby9zcmMvZ2l0aHViLmNvbS9zcGYxMy9jb2JyYQoKICBydW5f
dGVzdHM6ICZydW5fdGVzdHMKICAgIHJ1bjoKICAgICAgbmFtZTogIkFsbCBD
b21tYW5kcyIKICAgICAgY29tbWFuZDogfAogICAgICAgIG1rZGlyIC1wIGJp
bgogICAgICAgIGN1cmwgLUxzbyBiaW4vc2hlbGxjaGVjayBodHRwczovL2dp
dGh1Yi5jb20vY2FhcmxvczAvc2hlbGxjaGVjay1kb2NrZXIvcmVsZWFzZXMv
ZG93bmxvYWQvdjAuNC42L3NoZWxsY2hlY2sKICAgICAgICBjaG1vZCAreCBi
aW4vc2hlbGxjaGVjawogICAgICAgIGdvIGdldCAtdCAtdiAuLy4uLgogICAg
ICAgIFBBVEg9JFBBVEg6JFBXRC9iaW4gZ28gdGVzdCAtdiAuLy4uLgogICAg
ICAgIGdvIGJ1aWxkCiAgICAgICAgaWYgWyAteiAkTk9WRVQgXTsgdGhlbgog
ICAgICAgICAgZGlmZiAtdSA8KGVjaG8gLW4pIDwoZ28gdmV0IC4gMj4mMSB8
IGdyZXAgLXZFICdFeGFtcGxlQ29tbWFuZHxiYXNoX2NvbXBsZXRpb25zLipG
cHJpbnQnKTsKICAgICAgICBmaQoKam9iczoKICBnby1jdXJyZW50OgogICAg
ZG9ja2VyOgogICAgICAtIGltYWdlOiBjaXJjbGVjaS9nb2xhbmc6MS4xMgog
ICAgd29ya2luZ19kaXJlY3Rvcnk6ICp3b3Jrc3BhY2UKICAgIHN0ZXBzOgog
ICAgICAtIGNoZWNrb3V0CiAgICAgIC0gKnJ1bl90ZXN0cwogICAgICAtIHJ1
bjoKICAgICAgICAgIG5hbWU6ICJDaGVjayBmb3JtYXR0aW5nIgogICAgICAg
ICAgY29tbWFuZDogZGlmZiAtdSA8KGVjaG8gLW4pIDwoZ29mbXQgLWQgLXMg
LikKICBnby1wcmV2aW91czoKICAgIGRvY2tlcjoKICAgICAgLSBpbWFnZTog
Y2lyY2xlY2kvZ29sYW5nOjEuMTEKICAgIHdvcmtpbmdfZGlyZWN0b3J5OiAq
d29ya3NwYWNlCiAgICBzdGVwczoKICAgICAgLSBjaGVja291dAogICAgICAt
ICpydW5fdGVzdHMKICBnby1sYXRlc3Q6CiAgICBkb2NrZXI6CiAgICAgIC0g
aW1hZ2U6IGNpcmNsZWNpL2dvbGFuZzpsYXRlc3QKICAgIHdvcmtpbmdfZGly
ZWN0b3J5OiAqd29ya3NwYWNlCiAgICBzdGVwczoKICAgICAgLSBjaGVja291
dAogICAgICAtICpydW5fdGVzdHMKCndvcmtmbG93czoKICB2ZXJzaW9uOiAy
CiAgbWFpbjoKICAgIGpvYnM6CiAgICAgIC0gZ28tY3VycmVudAogICAgICAt
IGdvLXByZXZpb3VzCiAgICAgIC0gZ28tbGF0ZXN0Cg==
",,,,,,,,,,,,,,,,,,,,,,,
