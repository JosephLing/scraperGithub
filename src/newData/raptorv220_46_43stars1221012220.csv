name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'iscroll',1136075,b'Smooth scrolling for the web',b'JavaScript',580,12218,,519,False,b'https://api.github.com/repos/cubiq/iscroll/forks',"PGgxIGlkPSJpbnRybyI+aVNjcm9sbCwgc21vb3RoIHNjcm9sbGluZyBmb3Ig
dGhlIHdlYjwvaDE+CgppU2Nyb2xsIGlzIGEgaGlnaCBwZXJmb3JtYW5jZSwg
c21hbGwgZm9vdHByaW50LCBkZXBlbmRlbmN5IGZyZWUsIG11bHRpLXBsYXRm
b3JtIGphdmFzY3JpcHQgc2Nyb2xsZXIuCgpJdCB3b3JrcyBvbiBkZXNrdG9w
LCBtb2JpbGUgYW5kIHNtYXJ0IFRWLiBJdCBoYXMgYmVlbiB2aWdvcm91c2x5
IG9wdGltaXplZCBmb3IgcGVyZm9ybWFuY2UgYW5kIHNpemUgc28gdG8gb2Zm
ZXIgdGhlIHNtb290aGVzdCByZXN1bHQgb24gbW9kZXJuIGFuZCBvbGQgZGV2
aWNlcyBhbGlrZS4KCmlTY3JvbGwgZG9lcyBub3QganVzdCAqc2Nyb2xsKi4g
SXQgY2FuIGhhbmRsZSBhbnkgZWxlbWVudCB0aGF0IG5lZWRzIHRvIGJlIG1v
dmVkIHdpdGggdXNlciBpbnRlcmFjdGlvbi4gSXQgYWRkcyBzY3JvbGxpbmcs
IHpvb21pbmcsIHBhbm5pbmcsIGluZmluaXRlIHNjcm9sbGluZywgcGFyYWxs
YXggc2Nyb2xsaW5nLCBjYXJvdXNlbHMgdG8geW91ciBwcm9qZWN0cyBhbmQg
bWFuYWdlcyB0byBkbyB0aGF0IGluIGp1c3QgNGtiLiBHaXZlIGl0IGEgYnJv
b20gYW5kIGl0IHdpbGwgYWxzbyBjbGVhbiB1cCB5b3VyIG9mZmljZS4KCkV2
ZW4gb24gcGxhdGZvcm1zIHdoZXJlIG5hdGl2ZSBzY3JvbGxpbmcgaXMgZ29v
ZCBlbm91Z2gsIGlTY3JvbGwgYWRkcyBmZWF0dXJlcyB0aGF0IHdvdWxkbid0
IGJlIHBvc3NpYmxlIG90aGVyd2lzZS4gU3BlY2lmaWNhbGx5OgoKKiBHcmFu
dWxhciBjb250cm9sIG92ZXIgdGhlIHNjcm9sbCBwb3NpdGlvbiwgZXZlbiBk
dXJpbmcgbW9tZW50dW0uIFlvdSBjYW4gYWx3YXlzIGdldCBhbmQgc2V0IHRo
ZSB4LHkgY29vcmRpbmF0ZXMgb2YgdGhlIHNjcm9sbGVyLgoqIEFuaW1hdGlv
biBjYW4gYmUgY3VzdG9taXplZCB3aXRoIHVzZXIgZGVmaW5lZCBlYXNpbmcg
ZnVuY3Rpb25zIChib3VuY2UsIGVsYXN0aWMsIGJhY2ssIC4uLikuCiogWW91
IGNhbiBlYXNpbHkgaG9vayB0byBhIHBsZXRob3JhIG9mIGN1c3RvbSBldmVu
dHMgKG9uQmVmb3JlU2Nyb2xsU3RhcnQsIG9uU2Nyb2xsU3RhcnQsIG9uU2Ny
b2xsLCBvblNjcm9sbEVuZCwgZmxpY2ssIC4uLikuCiogT3V0IG9mIHRoZSBi
b3ggbXVsdGktcGxhdGZvcm0gc3VwcG9ydC4gRnJvbSBvbGRlciBBbmRyb2lk
IGRldmljZXMgdG8gdGhlIGxhdGVzdCBpUGhvbmUsIGZyb20gQ2hyb21lIHRv
IEludGVybmV0IEV4cGxvcmVyLgoKPGgyIGlkPSJpc2Nyb2xsLXZlcnNpb25z
Ij5UaGUgbWFueSBmYWNlcyBvZiBpU2Nyb2xsPC9oMj4KCmlTY3JvbGwgaXMg
YWxsIGFib3V0IG9wdGltaXphdGlvbi4gVG8gcmVhY2ggdGhlIGhpZ2hlc3Qg
cGVyZm9ybWFuY2UgaXQgaGFzIGJlZW4gZGl2aWRlZCBpbnRvIG11bHRpcGxl
IHZlcnNpb25zLiBZb3UgY2FuIHBpY2sgdGhlIHZlcnNpb24gdGhhdCBiZXR0
ZXIgc3VpdHMgeW91ciBuZWVkLgoKQ3VycmVudGx5IHdlIGhhdmUgdGhlIGZv
bGxvd2luZyBmcmFncmFuY2VzOgoKKiAqKmlzY3JvbGwuanMqKiwgaXQgaXMg
dGhlIGdlbmVyYWwgcHVycG9zZSBzY3JpcHQuIEl0IGluY2x1ZGVzIHRoZSBt
b3N0IGNvbW1vbmx5IHVzZWQgZmVhdHVyZXMgYW5kIGdyYW50cyB2ZXJ5IGhp
Z2ggcGVyZm9ybWFuY2UgaW4gYSBzbWFsbCBmb290cHJpbnQuCiogKippc2Ny
b2xsLWxpdGUuanMqKiwgaXQgaXMgYSBzdHJpcHBlZCBkb3duIHZlcnNpb24g
b2YgdGhlIG1haW4gc2NyaXB0LiBJdCBkb2Vzbid0IHN1cHBvcnQgc25hcCwg
c2Nyb2xsYmFycywgbW91c2Ugd2hlZWwsIGtleSBiaW5kaW5ncy4gQnV0IGlm
IGFsbCB5b3UgbmVlZCBpcyBzY3JvbGxpbmcgKGVzcGVjaWFsbHkgb24gbW9i
aWxlKSAqaVNjcm9sbCBsaXRlKiBpcyB0aGUgc21hbGxlc3QsIGZhc3Rlc3Qg
c29sdXRpb24uCiogKippc2Nyb2xsLXByb2JlLmpzKiosIHByb2JpbmcgdGhl
IGN1cnJlbnQgc2Nyb2xsIHBvc2l0aW9uIGlzIGEgZGVtYW5kaW5nIHRhc2ss
IHRoYXQncyB3aHkgSSBkZWNpZGVkIHRvIGJ1aWxkIGEgZGVkaWNhdGVkIHZl
cnNpb24gZm9yIGl0LiBJZiB5b3UgbmVlZCB0byBrbm93IHRoZSBzY3JvbGxp
bmcgcG9zaXRpb24gYXQgYW55IGdpdmVuIHRpbWUsIHRoaXMgaXMgdGhlIGlT
Y3JvbGwgZm9yIHlvdS4gKEknbSBtYWtpbmcgc29tZSBtb3JlIHRlc3RzLCB0
aGlzIG1pZ2h0IGVuZCB1cCBpbiB0aGUgcmVndWxhciBgaXNjcm9sbC5qc2Ag
c2NyaXB0LCBzbyBrZWVwIGFuIGV5ZSBvbiBpdCkuCiogKippc2Nyb2xsLXpv
b20uanMqKiwgYWRkcyB6b29taW5nIHRvIHRoZSBzdGFuZGFyZCBzY3JvbGwu
CiogKippc2Nyb2xsLWluZmluaXRlLmpzKiosIGNhbiBkbyBpbmZpbml0ZSBh
bmQgY2FjaGVkIHNjcm9sbGluZy4gSGFuZGxpbmcgdmVyeSBsb25nIGxpc3Rz
IG9mIGVsZW1lbnRzIGlzIG5vIGVhc3kgdGFzayBmb3IgbW9iaWxlIGRldmlj
ZXMuICppU2Nyb2xsIGluZmluaXRlKiB1c2VzIGEgY2FjaGluZyBtZWNoYW5p
c20gdGhhdCBsZXRzIHlvdSBzY3JvbGwgYSBwb3RlbnRpYWxseSBpbmZpbml0
ZSBudW1iZXIgb2YgZWxlbWVudHMuCgo8aDIgaWQ9ImdldHRpbmctc3RhcnRl
ZCI+R2V0dGluZyBzdGFydGVkPC9oMj4KClNvIHlvdSB3YW50IHRvIGJlIGFu
IGlTY3JvbGwgbWFzdGVyLiBDb29sLCBiZWNhdXNlIHRoYXQgaXMgd2hhdCBJ
J2xsIG1ha2UgeW91IGludG8uCgpUaGUgYmVzdCB3YXkgdG8gbGVhcm4gdGhl
IGlTY3JvbGwgaXMgYnkgbG9va2luZyBhdCB0aGUgZGVtb3MuIEluIHRoZSBh
cmNoaXZlIHlvdSdsbCBmaW5kIGEgYGRlbW9gIGZvbGRlciBbc3R1ZmZlZCB3
aXRoIGV4YW1wbGVzXShodHRwczovL2dpdGh1Yi5jb20vY3ViaXEvaXNjcm9s
bC90cmVlL21hc3Rlci9kZW1vcykuIE1vc3Qgb2YgdGhlIHNjcmlwdCBmZWF0
dXJlcyBhcmUgb3V0bGluZWQgdGhlcmUuCgpgSVNjcm9sbGAgaXMgYSBjbGFz
cyB0aGF0IG5lZWRzIHRvIGJlIGluaXRpYXRlZCBmb3IgZWFjaCBzY3JvbGxp
bmcgYXJlYS4gVGhlcmUncyBubyBsaW1pdCB0byB0aGUgbnVtYmVyIG9mIGlT
Y3JvbGxzIHlvdSBjYW4gaGF2ZSBpbiBlYWNoIHBhZ2UgaWYgbm90IHRoYXQg
aW1wb3NlZCBieSB0aGUgZGV2aWNlIENQVS9NZW1vcnkuCgpUcnkgdG8ga2Vl
cCB0aGUgRE9NIGFzIHNpbXBsZSBhcyBwb3NzaWJsZS4gaVNjcm9sbCB1c2Vz
IHRoZSBoYXJkd2FyZSBjb21wb3NpdGluZyBsYXllciBidXQgdGhlcmUncyBh
IGxpbWl0IHRvIHRoZSBlbGVtZW50cyB0aGUgaGFyZHdhcmUgY2FuIGhhbmRs
ZS4KClRoZSBvcHRpbWFsIEhUTUwgc3RydWN0dXJlIGlzOgoKYGBgaHRtbAo8
ZGl2IGlkPSJ3cmFwcGVyIj4KICAgIDx1bD4KICAgICAgICA8bGk+Li4uPC9s
aT4KICAgICAgICA8bGk+Li4uPC9saT4KICAgICAgICAuLi4KICAgIDwvdWw+
CjwvZGl2PgpgYGAKCmlTY3JvbGwgbXVzdCBiZSBhcHBsaWVkIHRvIHRoZSB3
cmFwcGVyIG9mIHRoZSBzY3JvbGxpbmcgYXJlYS4gSW4gdGhlIGFib3ZlIGV4
YW1wbGUgdGhlIGBVTGAgZWxlbWVudCB3aWxsIGJlIHNjcm9sbGVkLiBPbmx5
IHRoZSBmaXJzdCBjaGlsZCBvZiB0aGUgY29udGFpbmVyIGVsZW1lbnQgaXMg
c2Nyb2xsZWQsIGFkZGl0aW9uYWwgY2hpbGRyZW4gYXJlIHNpbXBseSBpZ25v
cmVkLgoKPGRpdiBjbGFzcz0idGlwIj4KPHA+PGNvZGU+Ym94LXNoYWRvdzwv
Y29kZT4sIDxjb2RlPm9wYWNpdHk8L2NvZGU+LCA8Y29kZT50ZXh0LXNoYWRv
dzwvY29kZT4gYW5kIGFscGhhIGNoYW5uZWxzIGFyZSBhbGwgcHJvcGVydGll
cyB0aGF0IGRvbid0IGdvIHZlcnkgd2VsbCB0b2dldGhlciB3aXRoIGhhcmR3
YXJlIGFjY2VsZXJhdGlvbi4gU2Nyb2xsaW5nIG1pZ2h0IGxvb2sgZ29vZCB3
aXRoIGZldyBlbGVtZW50cyBidXQgYXMgc29vbiBhcyB5b3VyIERPTSBiZWNv
bWVzIG1vcmUgY29tcGxleCB5b3UnbGwgc3RhcnQgZXhwZXJpZW5jaW5nIGxh
ZyBhbmQgamVya2luZXNzLjwvcD4KCjxwPlNvbWV0aW1lcyBhIGJhY2tncm91
bmQgaW1hZ2UgdG8gc2ltdWxhdGUgdGhlIHNoYWRvdyBwZXJmb3JtcyBiZXR0
ZXIgdGhhbiA8Y29kZT5ib3gtc2hhZG93PC9jb2RlPi4gVGhlIGJvdHRvbSBs
aW5lIGlzOiBleHBlcmltZW50IHdpdGggQ1NTIHByb3BlcnRpZXMsIHlvdSds
bCBiZSBzdXJwcmlzZWQgYnkgdGhlIGRpZmZlcmVuY2UgaW4gcGVyZm9ybWFu
Y2UgYSBzbWFsbCBDU1MgY2hhbmdlIGNhbiBkby48L3A+CjwvZGl2PgoKVGhl
IG1pbmltYWwgY2FsbCB0byBpbml0aWF0ZSB0aGUgc2NyaXB0IGlzIGFzIGZv
bGxvdzoKCmBgYGh0bWwKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQi
Pgp2YXIgbXlTY3JvbGwgPSBuZXcgSVNjcm9sbCgnI3dyYXBwZXInKTsKPC9z
Y3JpcHQ+CmBgYAoKVGhlIGZpcnN0IHBhcmFtZXRlciBjYW4gYmUgYSBzdHJp
bmcgcmVwcmVzZW50aW5nIHRoZSBET00gc2VsZWN0b3Igb2YgdGhlIHNjcm9s
bCBjb250YWluZXIgZWxlbWVudCBPUiBhIHJlZmVyZW5jZSB0byB0aGUgZWxl
bWVudCBpdHNlbGYuIFRoZSBmb2xsb3dpbmcgaXMgYSB2YWxpZCBzeW50YXgg
dG9vOgoKYGBganMKdmFyIHdyYXBwZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50
QnlJZCgnd3JhcHBlcicpOwp2YXIgbXlTY3JvbGwgPSBuZXcgSVNjcm9sbCh3
cmFwcGVyKTsKYGBgCgpTbyBiYXNpY2FsbHkgZWl0aGVyIHlvdSBwYXNzIHRo
ZSBlbGVtZW50IGRpcmVjdGx5IG9yIGEgc3RyaW5nIHRoYXQgd2lsbCBiZSBn
aXZlbiB0byBgcXVlcnlTZWxlY3RvcmAuIENvbnNlcXVlbnRseSB0byBzZWxl
Y3QgYSB3cmFwcGVyIGJ5IGl0cyBjbGFzcyBuYW1lIGluc3RlYWQgb2YgdGhl
IElELCB5b3UnZCBkbzoKCmBgYGpzCnZhciBteVNjcm9sbCA9IG5ldyBJU2Ny
b2xsKCcud3JhcHBlcicpOwpgYGAKCk5vdGUgdGhhdCBpU2Nyb2xsIHVzZXMg
YHF1ZXJ5U2VsZWN0b3JgIG5vdCBgcXVlcnlTZWxlY3RvckFsbGAsIHNvIG9u
bHkgdGhlIGZpcnN0IG9jY3VycmVuY2Ugb2YgdGhlIHNlbGVjdG9yIGlzIHVz
ZWQuIElmIHlvdSBuZWVkIHRvIGFwcGx5IGlTY3JvbGwgdG8gbXVsdGlwbGUg
b2JqZWN0cyB5b3UnbGwgaGF2ZSB0byBidWlsZCB5b3VyIG93biBjeWNsZS4K
CjxkaXYgY2xhc3M9InRpcCI+CjxwPllvdSBkb24ndCBzdHJpY3RseSBuZWVk
IHRvIGFzc2lnbiB0aGUgaW5zdGFuY2UgdG8gYSB2YXJpYWJsZSAoPGNvZGU+
bXlTY3JvbGw8L2NvZGU+KSwgYnV0IGl0IGlzIGhhbmR5IHRvIGtlZXAgYSBy
ZWZlcmVuY2UgdG8gdGhlIGlTY3JvbGwuPC9wPgoKPHA+Rm9yIGV4YW1wbGUg
eW91IGNvdWxkIGxhdGVyIGNoZWNrIHRoZSA8YSBocmVmPSIjc2Nyb2xsZXIt
aW5mbyI+c2Nyb2xsZXIgcG9zaXRpb248L2E+IG9yIDxhIGhyZWY9IiNkZXN0
cm95Ij51bmxvYWQgdW5uZWNlc3NhcnkgZXZlbnRzPC9hPiB3aGVuIHlvdSBk
b24ndCBuZWVkIHRoZSBpU2Nyb2xsIGFueW1vcmUuPC9wPgo8L2Rpdj4KCjxo
MiBpZD0iaW5pdGlhbGl6YXRpb24iPkluaXRpYWxpemF0aW9uPC9oMj4KClRo
ZSBpU2Nyb2xsIG5lZWRzIHRvIGJlIGluaXRpYXRlZCB3aGVuIHRoZSBET00g
aXMgcmVhZHkuIFRoZSBzYWZlc3QgYmV0IGlzIHRvIHN0YXJ0IGl0IG9uIHdp
bmRvdyBgb25sb2FkYCBldmVudC4gYERPTUNvbnRlbnRMb2FkZWRgIG9yIGlu
bGluZSBpbml0aWFsaXphdGlvbiBhcmUgYWxzbyBmaW5lIGJ1dCByZW1lbWJl
ciB0aGF0IHRoZSBzY3JpcHQgbmVlZHMgdG8ga25vdyB0aGUgaGVpZ2h0L3dp
ZHRoIG9mIHRoZSBzY3JvbGxpbmcgYXJlYS4gSWYgeW91IGhhdmUgaW1hZ2Vz
IHRoYXQgZG9uJ3QgaGF2ZSBleHBsaWNpdCB3aWR0aC9oZWlnaHQgZGVjbGFy
YXRpb24sIGlTY3JvbGwgd2lsbCBtb3N0IGxpa2VseSBlbmQgdXAgd2l0aCBh
IHdyb25nIHNjcm9sbGVyIHNpemUuCgo8ZGl2IGNsYXNzPSJpbXBvcnRhbnQi
Pgo8cD5BZGQgPGNvZGU+cG9zaXRpb246cmVsYXRpdmU8L2NvZGU+IG9yIDxj
b2RlPmFic29sdXRlPC9jb2RlPiB0byB0aGUgc2Nyb2xsIGNvbnRhaW5lciAo
dGhlIHdyYXBwZXIpLiBUaGF0IGFsb25lIHVzdWFsbHkgc29sdmVzIG1vc3Qg
b2YgdGhlIHByb2JsZW1zIHdpdGggd3JvbmdseSBjYWxjdWxhdGVkIHdyYXBw
ZXIgZGltZW5zaW9ucy48L3A+CjwvZGl2PgoKVG8gc3VtIHVwLCB0aGUgc21h
bGxlc3QgaVNjcm9sbCBjb25maWd1cmF0aW9uIGlzOgoKYGBgaHRtbAo8aGVh
ZD4KLi4uCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imlz
Y3JvbGwuanMiPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNj
cmlwdCI+CnZhciBteVNjcm9sbDsKZnVuY3Rpb24gbG9hZGVkKCkgewogICAg
bXlTY3JvbGwgPSBuZXcgSVNjcm9sbCgnI3dyYXBwZXInKTsKfQo8L3Njcmlw
dD4KPC9oZWFkPgouLi4KPGJvZHkgb25sb2FkPSJsb2FkZWQoKSI+CjxkaXYg
aWQ9IndyYXBwZXIiPgogICAgPHVsPgogICAgICAgIDxsaT4uLi48L2xpPgog
ICAgICAgIDxsaT4uLi48L2xpPgogICAgICAgIC4uLgogICAgPC91bD4KPC9k
aXY+CjwvYm9keT4KYGBgCgpSZWZlciB0byB0aGUgW2JhcmVib25lIGV4YW1w
bGVdKGh0dHA6Ly9sYWIuY3ViaXEub3JnL2lzY3JvbGw1L2RlbW9zL2JhcmVi
b25lLykgZm9yIG1vcmUgZGV0YWlscyBvbiB0aGUgbWluaW1hbCBDU1MvSFRN
TCByZXF1aXJlbWVudHMuCgo8ZGl2IGNsYXNzPSJ0aXAiPgo8cD5JZiB5b3Ug
aGF2ZSBhIGNvbXBsZXggRE9NIGl0IGlzIHNvbWV0aW1lcyBzbWFydCB0byBh
ZGQgYSBsaXR0bGUgZGVsYXkgZnJvbSB0aGUgPGNvZGU+b25sb2FkPC9jb2Rl
PiBldmVudCB0byBpU2Nyb2xsIGluaXRpYWxpemF0aW9uLiBFeGVjdXRpbmcg
dGhlIGlTY3JvbGwgd2l0aCBhIDEwMCBvciAyMDAgbWlsbGlzZWNvbmRzIGRl
bGF5IGdpdmVzIHRoZSBicm93c2VyIHRoYXQgbGl0dGxlIHJlc3QgdGhhdCBj
YW4gc2F2ZSB5b3VyIGFzcy48L3A+CjwvZGl2PgoKPGgyIGlkPSJjb25maWd1
cmluZyI+Q29uZmlndXJpbmcgdGhlIGlTY3JvbGw8L2gyPgoKaVNjcm9sbCBj
YW4gYmUgY29uZmlndXJlZCBieSBwYXNzaW5nIGEgc2Vjb25kIHBhcmFtZXRl
ciBkdXJpbmcgdGhlIGluaXRpYWxpemF0aW9uIHBoYXNlLgoKYGBganMKdmFy
IG15U2Nyb2xsID0gbmV3IElTY3JvbGwoJyN3cmFwcGVyJywgewogICAgbW91
c2VXaGVlbDogdHJ1ZSwKICAgIHNjcm9sbGJhcnM6IHRydWUKfSk7CmBgYAoK
VGhlIGV4YW1wbGUgYWJvdmUgdHVybnMgb24gbW91c2Ugd2hlZWwgc3VwcG9y
dCBhbmQgc2Nyb2xsYmFycy4KCkFmdGVyIGluaXRpYWxpemF0aW9uIHlvdSBj
YW4gYWNjZXNzIHRoZSAqbm9ybWFsaXplZCogdmFsdWVzIGZyb20gdGhlIGBv
cHRpb25zYCBvYmplY3QuIEVnOgoKYGBganMKY29uc29sZS5kaXIobXlTY3Jv
bGwub3B0aW9ucyk7CmBgYAoKVGhlIGFib3ZlIHdpbGwgcmV0dXJuIHRoZSBj
b25maWd1cmF0aW9uIHRoZSBgbXlTY3JvbGxgIGluc3RhbmNlIHdpbGwgcnVu
IG9uLiBCeSAqbm9ybWFsaXplZCogSSBtZWFuIHRoYXQgaWYgeW91IHNldCBg
dXNlVHJhbnNmb3JtOnRydWVgIChmb3IgZXhhbXBsZSkgYnV0IHRoZSBicm93
c2VyIGRvZXNuJ3Qgc3VwcG9ydCBDU1MgdHJhbnNmb3JtcywgYHVzZVRyYW5z
Zm9ybWAgd2lsbCBiZSBgZmFsc2VgLgoKPGgyIGlkPSJ0aGUtY29yZSI+VW5k
ZXJzdGFuZGluZyB0aGUgY29yZTwvaDI+CgppU2Nyb2xsIHVzZXMgdmFyaW91
cyB0ZWNobmlxdWVzIHRvIHNjcm9sbCBiYXNlZCBvbiBkZXZpY2UvYnJvd3Nl
ciBjYXBhYmlsaXR5LiAqKk5vcm1hbGx5IHlvdSBkb24ndCBuZWVkIHRvIGNv
bmZpZ3VyZSB0aGUgZW5naW5lKiosIGlTY3JvbGwgaXMgc21hcnQgZW5vdWdo
IHRvIHBpY2sgdGhlIGJlc3QgZm9yIHlvdS4KCk5vbmV0aGVsZXNzIGl0IGlz
IGltcG9ydGFudCB0byB1bmRlcnN0YW5kIHdoaWNoIG1lY2hhbmlzbXMgaVNj
cm9sbCB3b3JrcyBvbiBhbmQgaG93IHRvIGNvbmZpZ3VyZSB0aGVtLgoKIyMj
IDxzbWFsbD5vcHRpb25zLjwvc21hbGw+dXNlVHJhbnNmb3JtCgpCeSBkZWZh
dWx0IHRoZSBlbmdpbmUgdXNlcyB0aGUgYHRyYW5zZm9ybWAgQ1NTIHByb3Bl
cnR5LiBTZXR0aW5nIHRoaXMgdG8gYGZhbHNlYCBzY3JvbGxzIGxpa2Ugd2Ug
d2VyZSBpbiAyMDA3LCBpZTogdXNpbmcgdGhlIGB0b3BgL2BsZWZ0YCAoYW5k
IHRodXMgdGhlIHNjcm9sbGVyIG5lZWRzIHRvIGJlIGFic29sdXRlbHkgcG9z
aXRpb25lZCkuCgpUaGlzIG1pZ2h0IGJlIHVzZWZ1bCB3aGVuIHNjcm9sbGlu
ZyBzZW5zaXRpdmUgY29udGVudCBzdWNoIGFzIEZsYXNoLCBpZnJhbWVzIGFu
ZCB2aWRlb3MsIGJ1dCBiZSB3YXJuZWQ6IHBlcmZvcm1hbmNlIGxvc3MgaXMg
aHVnZS4KCkRlZmF1bHQ6IGB0cnVlYAoKIyMjIDxzbWFsbD5vcHRpb25zLjwv
c21hbGw+dXNlVHJhbnNpdGlvbgoKaVNjcm9sbCB1c2VzIENTUyB0cmFuc2l0
aW9uIHRvIHBlcmZvcm0gYW5pbWF0aW9ucyAobW9tZW50dW0gYW5kIGJvdW5j
ZSkuIEJ5IHNldHRpbmcgdGhpcyB0byBgZmFsc2VgLCBgcmVxdWVzdEFuaW1h
dGlvbkZyYW1lYCBpcyB1c2VkIGluc3RlYWQuCgpPbiBtb2Rlcm4gYnJvd3Nl
cnMgdGhlIGRpZmZlcmVuY2UgaXMgYmFyZWx5IG5vdGljZWFibGUuIE9uIG9s
ZGVyIGRldmljZXMgdHJhbnNpdGlvbnMgcGVyZm9ybSBiZXR0ZXIuCgpEZWZh
dWx0OiBgdHJ1ZWAKCiMjIyA8c21hbGw+b3B0aW9ucy48L3NtYWxsPkhXQ29t
cG9zaXRpbmcKClRoaXMgb3B0aW9uIHRyaWVzIHRvIHB1dCB0aGUgc2Nyb2xs
ZXIgb24gdGhlIGhhcmR3YXJlIGxheWVyIGJ5IGFwcGVuZGluZyBgdHJhbnNs
YXRlWigwKWAgdG8gdGhlIHRyYW5zZm9ybSBDU1MgcHJvcGVydHkuIFRoaXMg
Z3JlYXRseSBpbmNyZWFzZXMgcGVyZm9ybWFuY2UgZXNwZWNpYWxseSBvbiBt
b2JpbGUsIGJ1dCB0aGVyZSBhcmUgc2l0dWF0aW9ucyB3aGVyZSB5b3UgbWln
aHQgd2FudCB0byBkaXNhYmxlIGl0IChub3RhYmx5IGlmIHlvdSBoYXZlIHRv
byBtYW55IGVsZW1lbnRzIGFuZCB0aGUgaGFyZHdhcmUgY2FuJ3QgY2F0Y2gg
dXApLgoKRGVmYXVsdDogYHRydWVgCgo8ZGl2IGNsYXNzPSJpbXBvcnRhbnQi
Pgo8cD5JZiB1bnN1cmUgbGVhdmUgaVNjcm9sbCBkZWNpZGUgd2hhdCdzIHRo
ZSBvcHRpbWFsIGNvbmZpZy4gRm9yIGJlc3QgcGVyZm9ybWFuY2UgYWxsIHRo
ZSBhYm92ZSBvcHRpb25zIHNob3VsZCBiZSBzZXQgdG8gPGNvZGU+dHJ1ZTwv
Y29kZT4gKG9yIGJldHRlciBsZWF2ZSB0aGVtIHVuZGVmaW5lZCBhcyB0aGV5
IGFyZSBzZXQgdG8gdHJ1ZSBhdXRvbWF0aWNhbGx5KS4gWW91IG1heSB0cnkg
dG8gcGxheSB3aXRoIHRoZW0gaW4gY2FzZSB5b3UgZW5jb3VudGVyIGhpY2N1
cHMgYW5kIG1lbW9yeSBsZWFrcy48L3A+CjwvZGl2PgoKPGgyIGlkPSJiYXNp
Yy1mZWF0dXJlcyI+QmFzaWMgZmVhdHVyZXM8L2gyPgoKIyMjIDxzbWFsbD5v
cHRpb25zLjwvc21hbGw+Ym91bmNlCgpXaGVuIHRoZSBzY3JvbGxlciBtZWV0
cyB0aGUgYm91bmRhcnkgaXQgcGVyZm9ybXMgYSBzbWFsbCBib3VuY2UgYW5p
bWF0aW9uLiBEaXNhYmxpbmcgYm91bmNlIG1heSBoZWxwIHJlYWNoIHNtb290
aGVyIHJlc3VsdHMgb24gb2xkIG9yIHNsb3cgZGV2aWNlcy4KCkRlZmF1bHQ6
IGB0cnVlYAoKIyMjIDxzbWFsbD5vcHRpb25zLjwvc21hbGw+Y2xpY2sKClRv
IG92ZXJyaWRlIHRoZSBuYXRpdmUgc2Nyb2xsaW5nIGlTY3JvbGwgaGFzIHRv
IGluaGliaXQgc29tZSBkZWZhdWx0IGJyb3dzZXIgYmVoYXZpb3JzLCBzdWNo
IGFzIG1vdXNlIGNsaWNrcy4gSWYgeW91IHdhbnQgeW91ciBhcHBsaWNhdGlv
biB0byByZXNwb25kIHRvIHRoZSAqY2xpY2sqIGV2ZW50IHlvdSBoYXZlIHRv
IGV4cGxpY2l0bHkgc2V0IHRoaXMgb3B0aW9uIHRvIGB0cnVlYC4gUGxlYXNl
IG5vdGUgdGhhdCBpdCBpcyBzdWdnZXN0ZWQgdG8gdXNlIHRoZSBjdXN0b20g
YHRhcGAgZXZlbnQgaW5zdGVhZCAoc2VlIGJlbG93KS4KCkRlZmF1bHQ6IGBm
YWxzZWAKCiMjIyA8c21hbGw+b3B0aW9ucy48L3NtYWxsPmRpc2FibGVNb3Vz
ZTxici8+PHNtYWxsPm9wdGlvbnMuPC9zbWFsbD5kaXNhYmxlUG9pbnRlcjxi
ci8+PHNtYWxsPm9wdGlvbnMuPC9zbWFsbD5kaXNhYmxlVG91Y2gKCkJ5IGRl
ZmF1bHQgaVNjcm9sbCBsaXN0ZW5zIHRvIGFsbCBwb2ludGVyIGV2ZW50cyBh
bmQgcmVhY3RzIHRvIHRoZSBmaXJzdCBvbmUgdGhhdCBvY2N1cnMuIEl0IG1h
eSBzZWVtIGEgd2FzdGUgb2YgcmVzb3VyY2VzIGJ1dCBmZWF0dXJlIGRldGVj
dGlvbiBoYXMgcHJvdmVuIHF1aXRlIHVucmVsaWFibGUgYW5kIHRoaXMgKmxp
c3Rlbi10by1hbGwqIGFwcHJvYWNoIGlzIG91ciBzYWZlc3QgYmV0IGZvciB3
aWRlIGJyb3dzZXIvZGV2aWNlIGNvbXBhdGliaWxpdHkuCgpJZiB5b3UgaGF2
ZSBhbiBpbnRlcm5hbCBtZWNoYW5pc20gZm9yIGRldmljZSBkZXRlY3Rpb24g
b3IgeW91IGtub3cgaW4gYWR2YW5jZSB3aGVyZSB5b3VyIHNjcmlwdCB3aWxs
IHJ1biBvbiwgeW91IG1heSB3YW50IHRvIGRpc2FibGUgYWxsIGV2ZW50IHNl
dHMgeW91IGRvbid0IG5lZWQgKG1vdXNlLCBwb2ludGVyIG9yIHRvdWNoIGV2
ZW50cykuCgpGb3IgZXhhbXBsZSB0byBkaXNhYmxlIG1vdXNlIGFuZCBwb2lu
dGVyIGV2ZW50czoKCmBgYGpzCnZhciBteVNjcm9sbCA9IG5ldyBJU2Nyb2xs
KCcjd3JhcHBlcicsIHsKICAgIGRpc2FibGVNb3VzZTogdHJ1ZSwKICAgIGRp
c2FibGVQb2ludGVyOiB0cnVlCn0pOwpgYGAKCkRlZmF1bHQ6IGBmYWxzZWAK
CiMjIyA8c21hbGw+b3B0aW9ucy48L3NtYWxsPmV2ZW50UGFzc3Rocm91Z2gK
ClNvbWV0aW1lcyB5b3Ugd2FudCB0byBwcmVzZXJ2ZSBuYXRpdmUgdmVydGlj
YWwgc2Nyb2xsIGJ1dCBiZWluZyBhYmxlIHRvIGFkZCBhbiBob3Jpem9udGFs
IGlTY3JvbGwgKG1heWJlIGEgY2Fyb3VzZWwpLiBTZXQgdGhpcyB0byBgdHJ1
ZWAgYW5kIHRoZSBpU2Nyb2xsIGFyZWEgd2lsbCByZWFjdCB0byBob3Jpem9u
dGFsIHN3aXBlcyBvbmx5LiBWZXJ0aWNhbCBzd2lwZXMgd2lsbCBuYXR1cmFs
bHkgc2Nyb2xsIHRoZSB3aG9sZSBwYWdlLgoKU2VlIFtldmVudCBwYXNzdGhy
b3VnaCBkZW1vXShodHRwOi8vbGFiLmN1YmlxLm9yZy9pc2Nyb2xsNS9kZW1v
cy9ldmVudC1wYXNzdGhyb3VnaC8pIG9uIGEgbW9iaWxlIGRldmljZS4gTm90
ZSB0aGF0IHRoaXMgY2FuIGJlIHNldCB0byBgJ2hvcml6b250YWwnYCB0byBp
bnZlcnNlIHRoZSBiZWhhdmlvciAobmF0aXZlIGhvcml6b250YWwgc2Nyb2xs
LCB2ZXJ0aWNhbCBpU2Nyb2xsKS4KCiMjIyA8c21hbGw+b3B0aW9ucy48L3Nt
YWxsPmZyZWVTY3JvbGwKClRoaXMgaXMgdXNlZnVsIG1haW5seSBvbiAyRCBz
Y3JvbGxlcnMgKHdoZW4geW91IG5lZWQgdG8gc2Nyb2xsIGJvdGggaG9yaXpv
bnRhbGx5IGFuZCB2ZXJ0aWNhbGx5KS4gTm9ybWFsbHkgd2hlbiB5b3Ugc3Rh
cnQgc2Nyb2xsaW5nIGluIG9uZSBkaXJlY3Rpb24gdGhlIG90aGVyIGlzIGxv
Y2tlZC4KClNvbWV0aW1lcyB5b3UganVzdCB3YW50IHRvIG1vdmUgZnJlZWx5
IHdpdGggbm8gY29uc3RyYWlucy4gSW4gdGhlc2UgY2FzZXMgeW91IGNhbiBz
ZXQgdGhpcyBvcHRpb24gdG8gYHRydWVgLiBTZWUgWzJEIHNjcm9sbCBkZW1v
XShodHRwOi8vbGFiLmN1YmlxLm9yZy9pc2Nyb2xsNS9kZW1vcy8yZC1zY3Jv
bGwvKS4KCkRlZmF1bHQ6IGBmYWxzZWAKCiMjIyA8c21hbGw+b3B0aW9ucy48
L3NtYWxsPmtleUJpbmRpbmdzCgpTZXQgdGhpcyB0byBgdHJ1ZWAgdG8gYWN0
aXZhdGUga2V5Ym9hcmQgKGFuZCByZW1vdGUgY29udHJvbHMpIGludGVyYWN0
aW9uLiBTZWUgdGhlIFtLZXkgYmluZGluZ3NdKCNrZXktYmluZGluZ3MpIHNl
Y3Rpb24gYmVsb3cgZm9yIG1vcmUgaW5mb3JtYXRpb24uCgpEZWZhdWx0OiBg
ZmFsc2VgCgojIyMgPHNtYWxsPm9wdGlvbnMuPC9zbWFsbD5pbnZlcnRXaGVl
bERpcmVjdGlvbgoKTWVhbmluZ2Z1bCB3aGVuIG1vdXNlIHdoZWVsIHN1cHBv
cnQgaXMgYWN0aXZhdGVkLCBpbiB3aGljaCBjYXNlIGl0IGp1c3QgaW52ZXJ0
cyB0aGUgc2Nyb2xsaW5nIGRpcmVjdGlvbi4gKGllLiBnb2luZyBkb3duIHNj
cm9sbHMgdXAgYW5kIHZpY2UtdmVyc2EpLgoKRGVmYXVsdDogYGZhbHNlYAoK
IyMjIDxzbWFsbD5vcHRpb25zLjwvc21hbGw+bW9tZW50dW0KCllvdSBjYW4g
dHVybiBvbi9vZmYgdGhlIG1vbWVudHVtIGFuaW1hdGlvbiBwZXJmb3JtZWQg
d2hlbiB0aGUgdXNlciBxdWlja2x5IGZsaWNrcyBvbiBzY3JlZW4uIFR1cm5p
bmcgdGhpcyBvZmYgZ3JlYXRseSBlbmhhbmNlcyBwZXJmb3JtYW5jZS4KCkRl
ZmF1bHQ6IGB0cnVlYAoKIyMjIDxzbWFsbD5vcHRpb25zLjwvc21hbGw+bW91
c2VXaGVlbAoKTGlzdGVuIHRvIHRoZSBtb3VzZSB3aGVlbCBldmVudC4KCkRl
ZmF1bHQ6IGBmYWxzZWAKCiMjIyA8c21hbGw+b3B0aW9ucy48L3NtYWxsPnBy
ZXZlbnREZWZhdWx0CgpXaGV0aGVyIG9yIG5vdCB0byBgcHJldmVudERlZmF1
bHQoKWAgd2hlbiBldmVudHMgYXJlIGZpcmVkLiBUaGlzIHNob3VsZCBiZSBs
ZWZ0IGB0cnVlYCB1bmxlc3MgeW91IHJlYWxseSBrbm93IHdoYXQgeW91IGFy
ZSBkb2luZy4KClNlZSBgcHJldmVudERlZmF1bHRFeGNlcHRpb25gIGluIHRo
ZSBbQWR2YW5jZWQgb3B0aW9uc10oI2FkdmFuY2VkLW9wdGlvbnMpIGZvciBt
b3JlIGNvbnRyb2wgb3ZlciB0aGUgcHJldmVudERlZmF1bHQgYmVoYXZpb3Iu
CgpEZWZhdWx0OiBgdHJ1ZWAKCiMjIyA8c21hbGw+b3B0aW9ucy48L3NtYWxs
PnNjcm9sbGJhcnMKCldoZXRlciBvciBub3QgdG8gZGlzcGxheSB0aGUgZGVm
YXVsdCBzY3JvbGxiYXJzLiBTZWUgbW9yZSBpbiB0aGUgW1Njcm9sbGJhcl0o
I3Njcm9sbGJhcikgc2VjdGlvbi4KCkRlZmF1bHQ6IGBmYWxzZWAuCgojIyMg
PHNtYWxsPm9wdGlvbnMuPC9zbWFsbD5zY3JvbGxYPGJyLz48c21hbGw+b3B0
aW9ucy48L3NtYWxsPnNjcm9sbFkKCkJ5IGRlZmF1bHQgb25seSB2ZXJ0aWNh
bCBzY3JvbGxpbmcgaXMgZW5hYmxlZC4gSWYgeW91IG5lZWQgdG8gc2Nyb2xs
IGhvcml6b250YWxseSB5b3UgaGF2ZSB0byBzZXQgYHNjcm9sbFhgIHRvIGB0
cnVlYC4gU2VlIFtob3Jpem9udGFsIGRlbW9dKGh0dHA6Ly9sYWIuY3ViaXEu
b3JnL2lzY3JvbGw1L2RlbW9zL2hvcml6b250YWwvKS4KClNlZSBhbHNvIHRo
ZSAqKmZyZWVTY3JvbGwqKiBvcHRpb24uCgpEZWZhdWx0OiBgc2Nyb2xsWDog
ZmFsc2VgLCBgc2Nyb2xsWTogdHJ1ZWAKCjxkaXYgY2xhc3M9ImltcG9ydGFu
dCI+CjxwPk5vdGUgdGhhdCA8Y29kZT5zY3JvbGxYL1k6IHRydWU8L2NvZGU+
IGhhcyB0aGUgc2FtZSBlZmZlY3QgYXMgPGNvZGU+b3ZlcmZsb3c6IGF1dG88
L2NvZGU+LiBTZXR0aW5nIG9uZSBkaXJlY3Rpb24gdG8gPGNvZGU+ZmFsc2U8
L2NvZGU+IGhlbHBzIHRvIHNwYXJlIHNvbWUgY2hlY2tzIGFuZCB0aHVzIENQ
VSBjeWNsZXMuPC9wPgo8L2Rpdj4KCiMjIyA8c21hbGw+b3B0aW9ucy48L3Nt
YWxsPnN0YXJ0WDxici8+PHNtYWxsPm9wdGlvbnMuPC9zbWFsbD5zdGFydFkK
CkJ5IGRlZmF1bHQgaVNjcm9sbCBzdGFydHMgYXQgYDAsIDBgICh0b3AgbGVm
dCkgcG9zaXRpb24sIHlvdSBjYW4gaW5zdHJ1Y3QgdGhlIHNjcm9sbGVyIHRv
IGtpY2tvZmYgYXQgYSBkaWZmZXJlbnQgbG9jYXRpb24uCgpEZWZhdWx0OiBg
MGAKCiMjIyA8c21hbGw+b3B0aW9ucy48L3NtYWxsPnRhcAoKU2V0IHRoaXMg
dG8gYHRydWVgIHRvIGxldCBpU2Nyb2xsIGVtaXQgYSBjdXN0b20gYHRhcGAg
ZXZlbnQgd2hlbiB0aGUgc2Nyb2xsIGFyZWEgaXMgY2xpY2tlZC90YXBwZWQg
YnV0IG5vdCBzY3JvbGxlZC4KClRoaXMgaXMgdGhlIHN1Z2dlc3RlZCB3YXkg
dG8gaGFuZGxlIHVzZXIgaW50ZXJhY3Rpb24gd2l0aCBjbGlja2FibGUgZWxl
bWVudHMuIFRvIGxpc3RlbiB0byB0aGUgdGFwIGV2ZW50IHlvdSB3b3VsZCBh
ZGQgYW4gZXZlbnQgbGlzdGVuZXIgYXMgeW91IHdvdWxkIGRvIGZvciBhIHN0
YW5kYXJkIGV2ZW50LiBFeGFtcGxlOiAKCmBgYGpzCmVsZW1lbnQuYWRkRXZl
bnRMaXN0ZW5lcigndGFwJywgZG9Tb21ldGhpbmcsIGZhbHNlKTsgXFwgTmF0
aXZlCiQoJyNlbGVtZW50Jykub24oJ3RhcCcsIGRvU29tZXRoaW5nKTsgXFwg
alF1ZXJ5CmBgYAogICAgCllvdSBjYW4gYWxzbyBjdXN0b21pemUgdGhlIGV2
ZW50IG5hbWUgYnkgcGFzc2luZyBhIHN0cmluZy4gRWc6CgpgYGBqcwp0YXA6
ICdteUN1c3RvbVRhcEV2ZW50JwpgYGAKCkluIHRoaXMgY2FzZSB5b3UnZCBs
aXN0ZW4gdG8gYG15Q3VzdG9tVGFwRXZlbnRgLgoKRGVmYXVsdDogYGZhbHNl
YAoKPGgyIGlkPSJzY3JvbGxiYXJzIj5TY3JvbGxiYXJzPC9oMj4KClRoZSBz
Y3JvbGxiYXJzIGFyZSBtb3JlIHRoYW4ganVzdCB3aGF0IHRoZSBuYW1lIHN1
Z2dlc3RzLiBJbiBmYWN0IGludGVybmFsbHkgdGhleSBhcmUgcmVmZXJlbmNl
ZCBhcyAqaW5kaWNhdG9ycyouCgpBbiBpbmRpY2F0b3IgbGlzdGVucyB0byB0
aGUgc2Nyb2xsZXIgcG9zaXRpb24gYW5kIG5vcm1hbGx5IGl0IGp1c3Qgc2hv
d3MgaXRzIHBvc2l0aW9uIGluIHJlbGF0aW9uIHRvIHdob2xlLCBidXQgd2hh
dCBpdCBjYW4gZG8gaXMgc28gbXVjaCBtb3JlLgoKTGV0J3Mgc3RhcnQgd2l0
aCB0aGUgYmFzaXMuCgojIyMgPHNtYWxsPm9wdGlvbnMuPC9zbWFsbD5zY3Jv
bGxiYXJzCgpBcyB3ZSBtZW50aW9uZWQgaW4gdGhlIFtCYXNpYyBmZWF0dXJl
cyBzZWN0aW9uXSgjYmFzaWMtZmVhdHVyZXMpIHRoZXJlJ3Mgb25seSBvbmUg
dGhpbmcgdGhhdCB5b3UgZ290IHRvIGRvIHRvIGFjdGl2YXRlIHRoZSBzY3Jv
bGxiYXJzIGluIGFsbCB0aGVpciBzcGxlbmRvciwgYW5kIHRoYXQgb25lIHRo
aW5nIGlzOgoKYGBganMKdmFyIG15U2Nyb2xsID0gbmV3IElTY3JvbGwoJyN3
cmFwcGVyJywgewogICAgc2Nyb2xsYmFyczogdHJ1ZQp9KTsKYGBgCgpPZiBj
b3Vyc2UgdGhlIGRlZmF1bHQgYmVoYXZpb3IgY2FuIGJlIHBlcnNvbmFsaXpl
ZC4KCiMjIyA8c21hbGw+b3B0aW9ucy48L3NtYWxsPmZhZGVTY3JvbGxiYXJz
CgpXaGVuIG5vdCBpbiB1c2UgdGhlIHNjcm9sbGJhciBmYWRlcyBhd2F5LiBM
ZWF2ZSB0aGlzIHRvIGBmYWxzZWAgdG8gc3BhcmUgcmVzb3VyY2VzLgoKRGVm
YXVsdDogYGZhbHNlYAoKIyMjIDxzbWFsbD5vcHRpb25zLjwvc21hbGw+aW50
ZXJhY3RpdmVTY3JvbGxiYXJzCgpUaGUgc2Nyb2xsYmFyIGJlY29tZXMgZHJh
Z2dhYmxlIGFuZCB1c2VyIGNhbiBpbnRlcmFjdCB3aXRoIGl0LgoKRGVmYXVs
dDogYGZhbHNlYAoKIyMjIDxzbWFsbD5vcHRpb25zLjwvc21hbGw+cmVzaXpl
U2Nyb2xsYmFycwoKVGhlIHNjcm9sbGJhciBzaXplIGNoYW5nZXMgYmFzZWQg
b24gdGhlIHByb3BvcnRpb24gYmV0d2VlbiB0aGUgd3JhcHBlciBhbmQgdGhl
IHNjcm9sbGVyIHdpZHRoL2hlaWdodC4gU2V0dGluZyB0aGlzIHRvIGBmYWxz
ZWAgbWFrZXMgdGhlIHNjcm9sbGJhciBhIGZpeGVkIHNpemUuIFRoaXMgbWln
aHQgYmUgdXNlZnVsIGluIGNhc2Ugb2YgY3VzdG9tIHN0eWxlZCBzY3JvbGxi
YXJzIChbc2VlIGJlbG93XSgjc3R5bGluZy10aGUtc2Nyb2xsYmFyKSkuCgpE
ZWZhdWx0OiBgdHJ1ZWAKCiMjIyA8c21hbGw+b3B0aW9ucy48L3NtYWxsPnNo
cmlua1Njcm9sbGJhcnMKCldoZW4gc2Nyb2xsaW5nIG91dHNpZGUgb2YgdGhl
IGJvdW5kYXJpZXMgdGhlIHNjcm9sbGJhciBpcyBzaHJ1bmsgYnkgYSBzbWFs
bCBhbW91bnQuCgpWYWxpZCB2YWx1ZXMgYXJlOiBgJ2NsaXAnYCBhbmQgYCdz
Y2FsZSdgLgoKYCdjbGlwJ2AganVzdCBtb3ZlcyB0aGUgaW5kaWNhdG9yIG91
dHNpZGUgb2YgaXRzIGNvbnRhaW5lciwgdGhlIGltcHJlc3Npb24gaXMgdGhh
dCB0aGUgc2Nyb2xsYmFyIHNocmlua3MgYnV0IGl0IGlzIHNpbXBseSBtb3Zp
bmcgb3V0IG9mIHRoZSBzY3JlZW4uIElmIHlvdSBjYW4gbGl2ZSB3aXRoIHRo
ZSB2aXN1YWwgZWZmZWN0IHRoaXMgb3B0aW9uICoqaW1tZW5zZWx5IGltcHJv
dmVzIG92ZXJhbGwgcGVyZm9ybWFuY2UqKi4KCmAnc2NhbGUnYCB0dXJucyBv
ZmYgYHVzZVRyYW5zaXRpb25gIGhlbmNlIGFsbCBhbmltYXRpb25zIGFyZSBz
ZXJ2ZWQgd2l0aCBgcmVxdWVzdEFuaW1hdGlvbkZyYW1lYC4gVGhlIGluZGlj
YXRvciBpcyBhY3R1YWxseSB2YXJpZWQgaW4gc2l6ZSBhbmQgdGhlIGVuZCBy
ZXN1bHQgaXMgbmljZXIgdG8gdGhlIGV5ZS4KCkRlZmF1bHQ6IGBmYWxzZWAK
CjxkaXYgY2xhc3M9InRpcCI+CjxwPk5vdGUgdGhhdCByZXNpemluZyBjYW4n
dCBiZSBwZXJmb3JtZWQgYnkgdGhlIEdQVSwgc28gPGNvZGU+c2NhbGU8L2Nv
ZGU+IGlzIGFsbCBvbiB0aGUgQ1BVLjwvcD4KPHA+SWYgeW91ciBhcHBsaWNh
dGlvbiBydW5zIG9uIG11bHRpcGxlIGRldmljZXMgbXkgc3VnZ2VzdGlvbiB3
b3VsZCBiZSB0byBzd2l0Y2ggdGhpcyBvcHRpb24gdG8gPGNvZGU+J3NjYWxl
JzwvY29kZT4sIDxjb2RlPidjbGlwJzwvY29kZT4gb3IgPGNvZGU+ZmFsc2U8
L2NvZGU+IGJhc2VkIG9uIHRoZSBwbGF0Zm9ybSByZXNwb25zaXZlbmVzcyAo
ZWc6IG9uIG9sZGVyIG1vYmlsZSBkZXZpY2VzIHlvdSBjb3VsZCBzZXQgdGhp
cyB0byA8Y29kZT4nY2xpcCc8L2NvZGU+IGFuZCBvbiBkZXNrdG9wIGJyb3dz
ZXIgdG8gPGNvZGU+J3NjYWxlJzwvY29kZT4pLjwvcD4KPC9kaXY+CgpTZWUg
dGhlIFtzY3JvbGxiYXIgZGVtb10oaHR0cDovL2xhYi5jdWJpcS5vcmcvaXNj
cm9sbDUvZGVtb3Mvc2Nyb2xsYmFycy8pLgoKPGgzIGlkPSJzdHlsaW5nLXRo
ZS1zY3JvbGxiYXIiPlN0eWxpbmcgdGhlIHNjcm9sbGJhcjwvaDM+CgpTbyB5
b3UgZG9uJ3QgbGlrZSB0aGUgZGVmYXVsdCBzY3JvbGxiYXIgc3R5bGluZyBh
bmQgeW91IHRoaW5rIHlvdSBjb3VsZCBkbyBiZXR0ZXIuIEhlbHAgeW91cnNl
bGYhIGlTY3JvbGwgbWFrZXMgZHJlc3NpbmcgdGhlIHNjcm9sbGJhciBhIHNu
YXAuIEZpcnN0IG9mIGFsbCBzZXQgdGhlIGBzY3JvbGxiYXJzYCBvcHRpb24g
dG8gYCdjdXN0b20nYDoKCmBgYGpzCnZhciBteVNjcm9sbCA9IG5ldyBJU2Ny
b2xsKCcjd3JhcHBlcicsIHsKICAgIHNjcm9sbGJhcnM6ICdjdXN0b20nCn0p
OwpgYGAKClRoZW4gdXNlIHRoZSBmb2xsb3dpbmcgQ1NTIGNsYXNzZXMgdG8g
c3R5bGUgdGhlIGxpdHRsZSBiYXN0YXJkcy4KCiogKiouaVNjcm9sbEhvcml6
b250YWxTY3JvbGxiYXIqKiwgdGhpcyBpcyBhcHBsaWVkIHRvIHRoZSBob3Jp
em9udGFsIGNvbnRhaW5lci4gVGhlIGVsZW1lbnQgdGhhdCBhY3R1YWxseSBo
b3N0cyB0aGUgc2Nyb2xsYmFyIGluZGljYXRvci4KKiAqKi5pU2Nyb2xsVmVy
dGljYWxTY3JvbGxiYXIqKiwgc2FtZSBhcyBhYm92ZSBidXQgZm9yIHRoZSB2
ZXJ0aWNhbCBjb250YWluZXIuCiogKiouaVNjcm9sbEluZGljYXRvcioqLCB0
aGUgYWN0dWFsIHNjcm9sbGJhciBpbmRpY2F0b3IuCiogKiouaVNjcm9sbEJv
dGhTY3JvbGxiYXJzKiosIHRoaXMgaXMgYWRkZWQgdG8gdGhlIGNvbnRhaW5l
ciBlbGVtZW50cyB3aGVuIGJvdGggc2Nyb2xsYmFycyBhcmUgc2hvd24uIE5v
cm1hbGx5IGp1c3Qgb25lIChob3Jpem9udGFsIG9yIHZlcnRpY2FsKSBpcyB2
aXNpYmxlLgoKVGhlIFtzdHlsZWQgc2Nyb2xsYmFycyBkZW1vXShodHRwOi8v
bGFiLmN1YmlxLm9yZy9pc2Nyb2xsNS9kZW1vcy9zdHlsZWQtc2Nyb2xsYmFy
cy8pIHNob3VsZCBtYWtlIHRoaW5ncyBjbGVhcmVyIHRoYW4gbXkgbG91c3kg
ZXhwbGFuYXRpb24uCgpJZiB5b3Ugc2V0IGByZXNpemVTY3JvbGxiYXJzOiBm
YWxzZWAgeW91IGNvdWxkIG1ha2UgdGhlIHNjcm9sbGJhciBvZiBhIGZpeGVk
IHNpemUsIG90aGVyd2lzZSBpdCB3b3VsZCBiZSByZXNpemVkIGJhc2VkIG9u
IHRoZSBzY3JvbGxlciBsZW5ndGguCgpQbGVhc2Uga2VlcCByZWFkaW5nIHRv
IHRoZSBmb2xsb3dpbmcgc2VjdGlvbiBmb3IgYSByZXZlbGF0aW9uIHRoYXQg
d2lsbCBzaGFrZSB5b3VyIHdvcmxkLgoKPGgyIGlkPSJpbmRpY2F0b3JzIj5J
bmRpY2F0b3JzPC9oMj4KCkFsbCB0aGUgc2Nyb2xsYmFyIG9wdGlvbnMgYWJv
dmUgYXJlIGluIHJlYWxpdHkganVzdCB3cmFwcGVycyB0byB0aGUgbG93IGxl
dmVsIGBpbmRpY2F0b3JzYCBvcHRpb24uIEl0IGxvb2tzIG1vcmUgb3IgbGVz
cyBsaWtlIHRoaXM6CgpgYGBqcwp2YXIgbXlTY3JvbGwgPSBuZXcgSVNjcm9s
bCgnI3dyYXBwZXInLCB7CiAgICBpbmRpY2F0b3JzOiB7CiAgICAgICAgZWw6
IFtlbGVtZW50fGVsZW1lbnQgc2VsZWN0b3JdCiAgICAgICAgZmFkZTogZmFs
c2UsCiAgICAgICAgaWdub3JlQm91bmRhcmllczogZmFsc2UsCiAgICAgICAg
aW50ZXJhY3RpdmU6IGZhbHNlLAogICAgICAgIGxpc3Rlblg6IHRydWUsCiAg
ICAgICAgbGlzdGVuWTogdHJ1ZSwKICAgICAgICByZXNpemU6IHRydWUsCiAg
ICAgICAgc2hyaW5rOiBmYWxzZSwKICAgICAgICBzcGVlZFJhdGlvWDogMCwK
ICAgICAgICBzcGVlZFJhdGlvWTogMCwKICAgIH0KfSk7CmBgYAoKIyMjIDxz
bWFsbD5vcHRpb25zLmluZGljYXRvcnMuPC9zbWFsbD5lbAoKVGhpcyBpcyBh
IG1hbmRhdG9yeSBwYXJhbWV0ZXIgd2hpY2ggaG9sZHMgYSByZWZlcmVuY2Ug
dG8gdGhlIHNjcm9sbGJhciBjb250YWluZXIgZWxlbWVudC4gVGhlIGZpcnN0
IGNoaWxkIGluc2lkZSB0aGUgY29udGFpbmVyIHdpbGwgYmUgdGhlIGluZGlj
YXRvci4gTm90ZSB0aGF0IHRoZSBzY3JvbGxiYXIgY2FuIGJlIGFueXdoZXJl
IG9uIHlvdXIgZG9jdW1lbnQsIGl0IGRvZXNuJ3QgbmVlZCB0byBiZSBpbnNp
ZGUgdGhlIHNjcm9sbGVyIHdyYXBwZXIuIERvIHlvdSBzdGFydCBwZXJjZWl2
aW5nIHRoZSBwb3dlciBvZiBzdWNoIHRvb2w/CgpWYWxpZCBzeW50YXggd291
bGQgYmU6CgpgYGBqcwppbmRpY2F0b3JzOiB7CiAgICBlbDogZG9jdW1lbnQu
Z2V0RWxlbWVudEJ5SWQoJ2luZGljYXRvcicpCn0KYGBgCgpPciBzaW1wbHk6
CgpgYGBqcwppbmRpY2F0b3JzOiB7CiAgICBlbDogJyNpbmRpY2F0b3InCn0K
YGBgCgojIyMgPHNtYWxsPm9wdGlvbnMuaW5kaWNhdG9ycy48L3NtYWxsPmln
bm9yZUJvdW5kYXJpZXMKClRoaXMgdGVsbHMgdGhlIGluZGljYXRvciB0byBp
Z25vcmUgdGhlIGJvdW5kYXJpZXMgaW1wb3NlZCBieSBpdHMgY29udGFpbmVy
LiBTaW5jZSB3ZSBjYW4gYWx0ZXIgdGhlIHNwZWVkIHJhdGlvIG9mIHRoZSBz
Y3JvbGxiYXIsIGl0IGlzIHVzZWZ1bCB0byBqdXN0IGxldCB0aGUgc2Nyb2xs
YmFyIGdvLiBTYXkgeW91IHdhbnQgdGhlIGluZGljYXRvciB0byBnbyB0d2lj
ZSBhcyBmYXN0IGFzIHRoZSBzY3JvbGxlciwgaXQgd291bGQgcmVhY2ggdGhl
IGVuZCBvZiBpdHMgcnVuIHZlcnkgcXVpY2tseS4gVGhpcyBvcHRpb24gaXMg
dXNlZCBmb3IgW3BhcmFsbGF4IHNjcm9sbGluZ10oI3BhcmFsbGF4LXNjcm9s
bGluZykuCgpEZWZhdWx0OiBgZmFsc2VgCgojIyMgPHNtYWxsPm9wdGlvbnMu
aW5kaWNhdG9ycy48L3NtYWxsPmxpc3Rlblg8YnIvPjxzbWFsbD5vcHRpb25z
LmluZGljYXRvcnMuPC9zbWFsbD5saXN0ZW5ZCgpUbyB3aGljaCBheGlzIHRo
ZSBpbmRpY2F0b3IgbGlzdGVucyB0by4gSXQgY2FuIGJlIGp1c3Qgb25lIG9y
IGJvdGguCgpEZWZhdWx0OiBgdHJ1ZWAKCiMjIyA8c21hbGw+b3B0aW9ucy5p
bmRpY2F0b3JzLjwvc21hbGw+c3BlZWRSYXRpb1g8YnIvPjxzbWFsbD5vcHRp
b25zLmluZGljYXRvcnMuPC9zbWFsbD5zcGVlZFJhdGlvWQoKVGhlIHNwZWVk
IHRoZSBpbmRpY2F0b3IgbW92ZXMgaW4gcmVsYXRpb24gdG8gdGhlIG1haW4g
c2Nyb2xsZXIgc2l6ZS4gQnkgZGVmYXVsdCB0aGlzIGlzIHNldCBhdXRvbWF0
aWNhbGx5LiBZb3UgcmFyZWx5IG5lZWQgdG8gYWx0ZXIgdGhpcyB2YWx1ZS4K
CkRlZmF1bHQ6IGAwYAoKIyMjIDxzbWFsbD5vcHRpb25zLmluZGljYXRvcnMu
PC9zbWFsbD5mYWRlPGJyLz48c21hbGw+b3B0aW9ucy5pbmRpY2F0b3JzLjwv
c21hbGw+aW50ZXJhY3RpdmU8YnIvPjxzbWFsbD5vcHRpb25zLmluZGljYXRv
cnMuPC9zbWFsbD5yZXNpemU8L2JyPjxzbWFsbD5vcHRpb25zLmluZGljYXRv
cnMuPC9zbWFsbD5zaHJpbmsKClRoZXNlIGFyZSB0aGUgc2FtZSBvcHRpb25z
IHdlIGV4cGxvcmVkIGluIHRoZSBbc2Nyb2xsYmFycyBzZWN0aW9uXSgjc2Ny
b2xsYmFycyksIEknbSBub3QgZ29pbmcgdG8gaW5zdWx0IHlvdXIgaW50ZWxs
aWdlbmNlIGFuZCByZXBlYXQgdGhlbSBoZXJlLgoKPGRpdiBjbGFzcz0iaW1w
b3J0YW50Ij4KPHA+PHN0cm9uZz5EbyBub3QgY3Jvc3MgdGhlIHN0cmVhbXMu
IEl0IHdvdWxkIGJlIGJhZCE8L3N0cm9uZz4gRG8gbm90IG1peCB0aGUgc2Ny
b2xsYmFycyBzeW50YXggKDxjb2RlPm9wdGlvbnMuc2Nyb2xsYmFyczwvY29k
ZT4sIDxjb2RlPm9wdGlvbnMuZmFkZVNjcm9sbGJhcnM8L2NvZGU+LCA8Y29k
ZT5vcHRpb25zLmludGVyYWN0aXZlU2Nyb2xsYmFyczwvY29kZT4sIC4uLikg
d2l0aCB0aGUgaW5kaWNhdG9ycyEgVXNlIG9uZSBvciB0aGUgb3RoZXIuPC9w
Pgo8L2Rpdj4KCkhhdmUgYSBsb29rIGF0IHRoZSBbbWluaW1hcCBkZW1vXSho
dHRwOi8vbGFiLmN1YmlxLm9yZy9pc2Nyb2xsNS9kZW1vcy9taW5pbWFwLykg
dG8gZ2V0IGEgZ2xhbmNlIGF0IHRoZSBwb3dlciBvZiB0aGUgYGluZGljYXRv
cnNgIG9wdGlvbi4KClRoZSB3aXR0aWVzdCBvZiB5b3Ugd291bGQgaGF2ZSBu
b3RpY2VkIHRoYXQgYGluZGljYXRvcnNgIGlzIGFjdHVhbGx5IHBsdXJhbC4u
LiBZZXMsIGV4YWN0bHksIHBhc3NpbmcgYW4gYXJyYXkgb2Ygb2JqZWN0cyB5
b3UgY2FuIGhhdmUgYSB2aXJ0dWFsbHkgaW5maW5pdGUgbnVtYmVyIG9mIGlu
ZGljYXRvcnMuIEkgZG9uJ3Qga25vdyB3aGF0IHlvdSBtYXkgbmVlZCB0aGVt
IGZvciwgYnV0IGhleSEgd2hvIGFtIEkgdG8gYXJndWUgYWJvdXQgeW91ciBz
Y3JvbGxiYXIgcHJlZmVyZW5jZXM/CgojIyA8c3BhbiBpZD0icGFyYWxsYXgt
c2Nyb2xsaW5nIj5QYXJhbGxheCBzY3JvbGxpbmc8L3NwYW4+CgpQYXJhbGxh
eCBzY3JvbGxpbmcgaXMganVzdCBhICpjb2xsYXRlcmFsIGRhbWFnZSogb2Yg
dGhlIFtJbmRpY2F0b3JzXSgjaW5kaWNhdG9ycykgZnVuY3Rpb25hbGl0eS4K
CkFuIGluZGljYXRvciBpcyBqdXN0IGEgbGF5ZXIgdGhhdCBmb2xsb3dzIHRo
ZSBtb3ZlbWVudCBhbmQgYW5pbWF0aW9uIGFwcGxpZWQgdG8gdGhlIG1haW4g
c2Nyb2xsZXIuIElmIHlvdSBzZWUgaXQgbGlrZSB0aGF0IHlvdSdsbCB1bmRl
cnN0YW5kIHRoZSBwb3dlciBiZWhpbmQgdGhpcyBmZWF0dXJlLiBUbyB0aGlz
IGFkZCB0aGF0IHlvdSBjYW4gaGF2ZSBhbnkgbnVtYmVyIG9mIGluZGljYXRv
cnMgYW5kIHRoZSBwYXJhbGxheCBzY3JvbGxpbmcgaXMgc2VydmVkLgoKUGxl
YXNlIHJlZmVyIHRvIHRoZSBbcGFyYWxsYXggZGVtb10oaHR0cDovL2xhYi5j
dWJpcS5vcmcvaXNjcm9sbDUvZGVtb3MvcGFyYWxsYXgvKS4KCiMjIFNjcm9s
bGluZyBwcm9ncmFtbWF0aWNhbGx5CgpZb3Ugc2lsbHkhIE9mIGNvdXJzZSB5
b3UgY2FuIHNjcm9sbCBwcm9ncmFtbWF0aWNhbHkhCgojIyMgc2Nyb2xsVG8o
eCwgeSwgdGltZSwgZWFzaW5nKQoKU2F5IHlvdXIgaVNjcm9sbCBpbnN0YW5j
ZSByZXNpZGVzIGludG8gdGhlIGBteVNjcm9sbGAgdmFyaWFibGUuIFlvdSBj
YW4gZWFzaWx5IHNjcm9sbCB0byBhbnkgcG9zaXRpb24gd2l0aCB0aGUgZm9s
bG93aW5nIHN5bnRheDoKCmBgYGpzCm15U2Nyb2xsLnNjcm9sbFRvKDAsIC0x
MDApOwpgYGAKClRoYXQgd291bGQgc2Nyb2xsIGRvd24gYnkgMTAwIHBpeGVs
cy4gUmVtZW1iZXI6IDAgaXMgYWx3YXlzIHRoZSB0b3AgbGVmdCBjb3JuZXIu
IFRvIHNjcm9sbCB5b3UgaGF2ZSB0byBwYXNzIG5lZ2F0aXZlIG51bWJlcnMu
CgpgdGltZWAgYW5kIGBlYXNpbmdgIGFyZSBvcHRpb25hbC4gVGhleSByZWd1
bGF0ZXMgdGhlIGR1cmF0aW9uIChpbiBtcykgYW5kIHRoZSBlYXNpbmcgZnVu
Y3Rpb24gb2YgdGhlIGFuaW1hdGlvbiByZXNwZWN0aXZlbHkuCgpUaGUgZWFz
aW5nIGZ1bmN0aW9ucyBhcmUgYXZhaWxhYmxlIGluIHRoZSBgSVNjcm9sbC51
dGlscy5lYXNlYCBvYmplY3QuIEZvciBleGFtcGxlIHRvIGFwcGx5IGEgMSBz
ZWNvbmQgZWxhc3RpYyBlYXNpbmcgeW91J2QgZG86CgpgYGBqcwpteVNjcm9s
bC5zY3JvbGxUbygwLCAtMTAwLCAxMDAwLCBJU2Nyb2xsLnV0aWxzLmVhc2Uu
ZWxhc3RpYyk7CmBgYAoKVGhlIGF2YWlsYWJsZSBvcHRpb25zIGFyZTogYHF1
YWRyYXRpY2AsIGBjaXJjdWxhcmAsIGBiYWNrYCwgYGJvdW5jZWAsIGBlbGFz
dGljYC4KCiMjIyBzY3JvbGxCeSh4LCB5LCB0aW1lLCBlYXNpbmcpCgpTYW1l
IGFzIGFib3ZlIGJ1dCBYIGFuZCBZIGFyZSByZWxhdGl2ZSB0byB0aGUgY3Vy
cmVudCBwb3NpdGlvbi4KCmBgYGpzCm15U2Nyb2xsLnNjcm9sbEJ5KDAsIC0x
MCk7CmBgYAogICAgCldvdWxkIHNjcm9sbCAxMCBwaXhlbHMgZG93bi4gSWYg
eW91IGFyZSBhdCAtMTAwLCB5b3UnbGwgZW5kIHVwIGF0IC0xMTAuCgojIyMg
c2Nyb2xsVG9FbGVtZW50KGVsLCB0aW1lLCBvZmZzZXRYLCBvZmZzZXRZLCBl
YXNpbmcpCgpZb3UncmUgZ29ubmEgbGlrZSB0aGlzLiBTaXQgdGlnaHQuCgpU
aGUgb25seSBtYW5kYXRvcnkgcGFyYW1ldGVyIGlzIGBlbGAuIFBhc3MgYW4g
ZWxlbWVudCBvciBhIHNlbGVjdG9yIGFuZCBpU2Nyb2xsIHdpbGwgdHJ5IHRv
IHNjcm9sbCB0byB0aGUgdG9wL2xlZnQgb2YgdGhhdCBlbGVtZW50LgoKYHRp
bWVgIGlzIG9wdGlvbmFsIGFuZCBzZXRzIHRoZSBhbmltYXRpb24gZHVyYXRp
b24uCgpgb2Zmc2V0WGAgYW5kIGBvZmZzZXRZYCBkZWZpbmUgYW4gb2Zmc2V0
IGluIHBpeGVscywgc28gdGhhdCB5b3UgY2FuIHNjcm9sbCB0byB0aGF0IGVs
ZW1lbnQgcGx1cyBhIHRoZSBzcGVjaWZpZWQgb2Zmc2V0LiBOb3Qgb25seSB0
aGF0LiBJZiB5b3Ugc2V0IHRoZW0gdG8gYHRydWVgIHRoZSBlbGVtZW50IHdp
bGwgYmUgY2VudGVyZWQgb24gc2NyZWVuLiBSZWZlciB0byB0aGUgW3Njcm9s
bCB0byBlbGVtZW50XShodHRwOi8vbGFiLmN1YmlxLm9yZy9pc2Nyb2xsNS9k
ZW1vcy9zY3JvbGwtdG8tZWxlbWVudC8pIGV4YW1wbGUuCgpgZWFzaW5nYCB3
b3JrcyB0aGUgc2FtZSB3YXkgYXMgcGVyIHRoZSAqKnNjcm9sbFRvKiogbWV0
aG9kLgoKPGgyIGlkPSJzbmFwIj5TbmFwPC9oMj4KCmlTY3JvbGwgY2FuIHNu
YXAgdG8gZml4ZWQgcG9zaXRpb25zIGFuZCBlbGVtZW50cy4KCiMjIyA8c21h
bGw+b3B0aW9ucy48L3NtYWxsPnNuYXAKClRoZSBzaW1wbGVzdCBzbmFwIGNv
bmZpZyBpcyBhcyBmb2xsb3c6CgpgYGBqcwp2YXIgbXlTY3JvbGwgPSBuZXcg
SVNjcm9sbCgnI3dyYXBwZXInLCB7CiAgICBzbmFwOiB0cnVlCn0pOwpgYGAK
ClRoaXMgd291bGQgYXV0b21hdGljYWxseSBzcGxpdCB0aGUgc2Nyb2xsZXIg
aW50byBwYWdlcyB0aGUgc2l6ZSBvZiB0aGUgY29udGFpbmVyLgoKYHNuYXBg
IGFsc28gdGFrZXMgYSBzdHJpbmcgYXMgYSB2YWx1ZS4gVGhlIHN0cmluZyB3
aWxsIGJlIHRoZSBzZWxlY3RvciB0byB0aGUgZWxlbWVudHMgdGhlIHNjcm9s
bGVyIHdpbGwgYmUgc25hcHBlZCB0by4gU28gdGhlIGZvbGxvd2luZwoKYGBg
anMKdmFyIG15U2Nyb2xsID0gbmV3IElTY3JvbGwoJyN3cmFwcGVyJywgewog
ICAgc25hcDogJ2xpJwp9KTsKYGBgCgp3b3VsZCBzbmFwIHRvIGVhY2ggYW5k
IGV2ZXJ5IGBMSWAgdGFnLgoKVG8gaGVscCB5b3UgbmF2aWdhdGUgdGhyb3Vn
aCB0aGUgc25hcCBwb2ludHMgaVNjcm9sbCBncmFudHMgYWNjZXNzIHRvIGEg
c2VyaWVzIG9mIGludGVyZXN0aW5nIG1ldGhvZHMuCgojIyMgZ29Ub1BhZ2Uo
eCwgeSwgdGltZSwgZWFzaW5nKQoKYHhgIGFuZCBgeWAgcmVwcmVzZW50IHRo
ZSBwYWdlIG51bWJlciB5b3Ugd2FudCB0byBzY3JvbGwgdG8gaW4gdGhlIGhv
cml6b250YWwgb3IgdmVydGljYWwgYXhlcyAoeWVhaCwgaXQncyB0aGUgcGx1
cmFsIG9mICpheGlzKiwgSSBjaGVja2VkKS4gSWYgdGhlIHNjcm9sbGVyIGlu
IG1vbm8tZGltZW5zaW9uYWwsIGp1c3QgcGFzcyBgMGAgdG8gdGhlIGF4aXMg
eW91IGRvbid0IG5lZWQuCgpgdGltZWAgaXMgdGhlIGR1cmF0aW9uIG9mIHRo
ZSBhbmltYXRpb24sIGBlYXNpbmdgIHRoZSBlYXNpbmcgZnVuY3Rpb24gdXNl
ZCB0byBzY3JvbGwgdG8gdGhlIHBvaW50LiBSZWZlciB0byB0aGUgKipvcHRp
b24uYm91bmNlRWFzaW5nKiogaW4gdGhlIFtBZHZhbmNlZCBvcHRpb25zXSgj
YWR2YW5jZWQtb3B0aW9ucykuIFRoZXkgYXJlIGJvdGggb3B0aW9uYWwuCgpg
YGBqcwpteVNjcm9sbC5nb1RvUGFnZSgxMCwgMCwgMTAwMCk7CmBgYAoKVGhp
cyB3b3VsZCBzY3JvbGwgdG8gdGhlIDEwdGggcGFnZSBvbiB0aGUgaG9yaXpv
bnRhbCBheGlzIGluIDEgc2Vjb25kLgoKIyMjIG5leHQoKTxici8+cHJldigp
CgpHbyB0byB0aGUgbmV4dCBhbmQgcHJldmlvdXMgcGFnZSBiYXNlZCBvbiBj
dXJyZW50IHBvc2l0aW9uLgoKPGgyIGlkPSJ6b29tIj5ab29tPC9oMj4KClRv
IHVzZSB0aGUgcGluY2gvem9vbSBmdW5jdGlvbmFsaXR5IHlvdSBiZXR0ZXIg
dXNlIHRoZSBgaXNjcm9sbC16b29tLmpzYCBzY3JpcHQuCgojIyMgPHNtYWxs
Pm9wdGlvbnMuPC9zbWFsbD56b29tCgpTZXQgdGhpcyB0byBgdHJ1ZWAgdG8g
YWN0aXZhdGUgem9vbS4KCkRlZmF1bHQ6IGBmYWxzZWAKCiMjIyA8c21hbGw+
b3B0aW9ucy48L3NtYWxsPnpvb21NYXgKCk1heGltdW0gem9vbSBsZXZlbC4K
CkRlZmF1bHQ6IGA0YAoKIyMjIDxzbWFsbD5vcHRpb25zLjwvc21hbGw+em9v
bU1pbgoKTWluaW11bSB6b29tIGxldmVsLgoKRGVmYXVsdDogYDFgCgojIyMg
PHNtYWxsPm9wdGlvbnMuPC9zbWFsbD5zdGFydFpvb20KClN0YXJ0aW5nIHpv
b20gbGV2ZWwuCgpEZWZhdWx0OiBgMWAKCiMjIyA8c21hbGw+b3B0aW9ucy48
L3NtYWxsPndoZWVsQWN0aW9uCgpXaGVlbCBhY3Rpb24gY2FuIGJlIHNldCB0
byBgJ3pvb20nYCB0byBoYXZlIHRoZSB3aGVlbCByZWd1bGF0ZSB0aGUgem9v
bSBsZXZlbCBpbnN0ZWFkIG9mIHNjcm9sbGluZyBwb3NpdGlvbi4KCkRlZmF1
bHQ6IGB1bmRlZmluZWRgIChpZTogdGhlIG1vdXNlIHdoZWVsIHNjcm9sbHMp
CgpUbyBzdW0gdXAsIGEgbmljZSB6b29tIGNvbmZpZyB3b3VsZCBiZToKCmBg
YGpzCm15U2Nyb2xsID0gbmV3IElTY3JvbGwoJyN3cmFwcGVyJywgewogICAg
em9vbTogdHJ1ZSwKICAgIG1vdXNlV2hlZWw6IHRydWUsCiAgICB3aGVlbEFj
dGlvbjogJ3pvb20nCn0pOwpgYGAKCjxkaXYgY2xhc3M9ImltcG9ydGFudCI+
CjxwPlRoZSB6b29tIGlzIHBlcmZvcm1lZCB3aXRoIENTUyB0cmFuc2Zvcm0u
IGlTY3JvbGwgY2FuIHpvb20gb25seSBvbiBicm93c2VycyB0aGF0IHN1cHBv
cnQgdGhhdC48L3A+CjwvZGl2PgoKPGRpdiBjbGFzcz0idGlwIj4KPHA+U29t
ZSBicm93c2VycyAobm90YWJseSB3ZWJraXQgYmFzZWQgb25lcykgdGFrZSBh
IHNuYXBzaG90IG9mIHRoZSB6b29taW5nIGFyZWEgYXMgc29vbiBhcyB0aGV5
IGFyZSBwbGFjZWQgb24gdGhlIGhhcmR3YXJlIGNvbXBvc2l0aW5nIGxheWVy
IChzYXkgYXMgc29vbiBhcyB5b3UgYXBwbHkgYSB0cmFuc2Zvcm0gdG8gdGhl
bSkuIFRoaXMgc25hcHNob3QgaXMgdXNlZCBhcyBhIHRleHR1cmUgZm9yIHRo
ZSB6b29taW5nIGFyZWEgYW5kIGl0IGNhbiBoYXJkbHkgYmUgdXBkYXRlZC4g
VGhpcyBtZWFucyB0aGF0IHlvdXIgdGV4dHVyZSB3aWxsIGJlIGJhc2VkIG9u
IGVsZW1lbnRzIGF0IDxzdHJvbmc+c2NhbGUgMTwvc3Ryb25nPiBhbmQgem9v
bWluZyBpbiB3aWxsIHJlc3VsdCBpbiBibHVycmVkLCBsb3cgZGVmaW5pdGlv
biB0ZXh0IGFuZCBpbWFnZXMuPC9wPgoKPHA+QSBzaW1wbGUgc29sdXRpb24g
aXMgdG8gbG9hZCBjb250ZW50IGF0IGRvdWJsZSAob3IgdHJpcGxlKSBpdHMg
YWN0dWFsIHJlc29sdXRpb24gYW5kIHNjYWxlIGl0IGRvd24gaW5zaWRlIGEg
PGNvZGU+c2NhbGUoMC41KTwvY29kZT4gZGl2LiBUaGlzIHNob3VsZCBiZSBl
bm91Z2ggdG8gZ3JhbnQgeW91IGEgYmV0dGVyIHJlc3VsdC4gSSBob3BlIHRv
IGJlIGFibGUgdG8gcG9zdCBtb3JlIGRlbW9zIHNvb248L3A+CjwvZGl2PgoK
UmVmZXIgdG8gdGhlIFt6b29tIGRlbW9dKGh0dHA6Ly9sYWIuY3ViaXEub3Jn
L2lzY3JvbGw1L2RlbW9zL3pvb20vKS4KCiMjIyB6b29tKHNjYWxlLCB4LCB5
LCB0aW1lKQoKSnVpY3kgbWV0aG9kIHRoYXQgbGV0cyB5b3Ugem9vbSBwcm9n
cmFtbWF0aWNhbGx5LgoKYHNjYWxlYCBpcyB0aGUgem9vbSBmYWN0b3IuCgpg
eGAgYW5kIGB5YCB0aGUgZm9jdXMgcG9pbnQsIGFrYSB0aGUgY2VudGVyIG9m
IHRoZSB6b29tLiBJZiBub3Qgc3BlY2lmaWVkLCB0aGUgY2VudGVyIG9mIHRo
ZSBzY3JlZW4gd2lsbCBiZSB1c2VkLgoKYHRpbWVgIGlzIHRoZSBkdXJhdGlv
biBvZiB0aGUgYW5pbWF0aW9uIGluIG1pbGxpc2Vjb25kcyAob3B0aW9uYWwp
LgoKPGgyIGlkPSJpbmZpbml0ZS1zY3JvbGxpbmciPkluZmluaXRlIHNjcm9s
bGluZzwvaDI+CgppU2Nyb2xsIGludGVncmF0ZXMgYSBzbWFydCBjYWNoaW5n
IHN5c3RlbSB0aGF0IGFsbG93cyB0byBoYW5kbGUgb2YgYSB2aXJ0dWFsbHkg
aW5maW5pdGUgYW1vdW50IG9mIGRhdGEgdXNpbmcgKGFuZCByZXVzaW5nKSBq
dXN0IGEgYnVuY2ggb2YgZWxlbWVudHMuCgpJbmZpbml0ZSBzY3JvbGxpbmcg
aXMgaW4gYW4gZWFybHkgc3RhZ2Ugb2YgZGV2ZWxvcG1lbnQgYW5kIGFsdGhv
dWdoIGl0IGNhbiBiZSBjb25zaWRlcmVkIHN0YWJsZSwgaXQgaXMgbm90IHJl
YWR5IGZvciB3aWRlIGNvbnN1bXB0aW9uLgoKUGxlYXNlIHJldmlldyB0aGUg
W2luZmluaXRlIGRlbW9dKGh0dHA6Ly9sYWIuY3ViaXEub3JnL2lzY3JvbGw1
L2RlbW9zL2luZmluaXRlLykgYW5kIHNlbmQgeW91ciBzdWdnZXN0aW9ucyBh
bmQgYnVnIHJlcG9ydHMuCgpJIHdpbGwgYWRkIG1vcmUgZGV0YWlscyBhcyBz
b29uIGFzIHRoZSBmdW5jdGlvbmFsaXR5IGV2b2x2ZXMuCgo8aDIgaWQ9ImFk
dmFuY2VkLW9wdGlvbnMiPkFkdmFuY2VkIG9wdGlvbnM8L2gyPgoKRm9yIHRo
ZSBoYXJkY29yZSBkZXZlbG9wZXIuCgojIyMgPHNtYWxsPm9wdGlvbnMuPC9z
bWFsbD5iaW5kVG9XcmFwcGVyCgpUaGUgYG1vdmVgIGV2ZW50IGlzIG5vcm1h
bGx5IGJvdW5kIHRvIHRoZSBkb2N1bWVudCBhbmQgbm90IHRoZSBzY3JvbGwg
Y29udGFpbmVyLiBXaGVuIHlvdSBtb3ZlIHRoZSBjdXJzb3IvZmluZ2VyIG91
dCBvZiB0aGUgd3JhcHBlciB0aGUgc2Nyb2xsaW5nIGtlZXBzIGdvaW5nLiBU
aGlzIGlzIHVzdWFsbHkgd2hhdCB5b3Ugd2FudCwgYnV0IHlvdSBjYW4gYWxz
byBiaW5kIHRoZSBtb3ZlIGV2ZW50IHRvIHdyYXBwZXIgaXRzZWxmLiBEb2lu
ZyBzbyBhcyBzb29uIGFzIHRoZSBwb2ludGVyIGxlYXZlcyB0aGUgY29udGFp
bmVyIHRoZSBzY3JvbGwgc3RvcHMuCgpEZWZhdWx0OiBgZmFsc2VgCgojIyMg
PHNtYWxsPm9wdGlvbnMuPC9zbWFsbD5ib3VuY2VFYXNpbmcKCkVhc2luZyBm
dW5jdGlvbiBwZXJmb3JtZWQgZHVyaW5nIHRoZSBib3VuY2UgYW5pbWF0aW9u
LiBWYWxpZCB2YWx1ZXMgYXJlOiBgJ3F1YWRyYXRpYydgLCBgJ2NpcmN1bGFy
J2AsIGAnYmFjaydgLCBgJ2JvdW5jZSdgLCBgJ2VsYXN0aWMnYC4gU2VlIHRo
ZSBbYm91bmNlIGVhc2luZyBkZW1vXShodHRwOi8vbGFiLmN1YmlxLm9yZy9p
c2Nyb2xsNS9kZW1vcy9ib3VuY2UtZWFzaW5nLyksIGRyYWcgdGhlIHNjcm9s
bGVyIGRvd24gYW5kIHJlbGVhc2UuCgpgYm91bmNlRWFzaW5nYCBpcyBhIGJp
dCBzbWFydGVyIHRoYW4gdGhhdC4gWW91IGNhbiBhbHNvIGZlZWQgYSBjdXN0
b20gZWFzaW5nIGZ1bmN0aW9uLCBsaWtlIHNvOgoKYGBganMKYm91bmNlRWFz
aW5nOiB7CiAgICBzdHlsZTogJ2N1YmljLWJlemllcigwLDAsMSwxKScsCiAg
ICBmbjogZnVuY3Rpb24gKGspIHsgcmV0dXJuIGs7IH0KfQpgYGAKClRoZSBh
Ym92ZSB3b3VsZCBwZXJmb3JtIGEgbGluZWFyIGVhc2luZy4gVGhlIGBzdHls
ZWAgb3B0aW9uIGlzIHVzZWQgZXZlcnkgdGltZSB0aGUgYW5pbWF0aW9uIGlz
IGV4ZWN1dGVkIHdpdGggQ1NTIHRyYW5zaXRpb25zLCBgZm5gIGlzIHVzZWQg
d2l0aCBgcmVxdWVzdEFuaW1hdGlvbkZyYW1lYC4gSWYgdGhlIGVhc2luZyBm
dW5jdGlvbiBpcyB0b28gY29tcGxleCBhbmQgY2FuJ3QgYmUgcmVwcmVzZW50
ZWQgYnkgYSBjdWJpYyBiZXppZXIganVzdCBwYXNzIGAnJ2AgKGVtcHR5IHN0
cmluZykgYXMgYHN0eWxlYC4KCk5vdGUgdGhhdCBgYm91bmNlYCBhbmQgYGVs
YXN0aWNgIGNhbid0IGJlIHBlcmZvcm1lZCBieSBDU1MgdHJhbnNpdGlvbnMu
CgpEZWZhdWx0OiBgJ2NpcmN1bGFyJ2AKCiMjIyA8c21hbGw+b3B0aW9ucy48
L3NtYWxsPmJvdW5jZVRpbWUKCkR1cmF0aW9uIGluIG1pbGxpc2Vjb25kIG9m
IHRoZSBib3VuY2UgYW5pbWF0aW9uLgoKRGVmYXVsdDogYDYwMGAKCiMjIyA8
c21hbGw+b3B0aW9ucy48L3NtYWxsPmRlY2VsZXJhdGlvbgoKVGhpcyB2YWx1
ZSBjYW4gYmUgYWx0ZXJlZCB0byBjaGFuZ2UgdGhlIG1vbWVudHVtIGFuaW1h
dGlvbiBkdXJhdGlvbi9zcGVlZC4gSGlnaGVyIG51bWJlcnMgbWFrZSB0aGUg
YW5pbWF0aW9uIHNob3J0ZXIuIFNlbnNpYmxlIHJlc3VsdHMgY2FuIGJlIGV4
cGVyaWVuY2VkIHN0YXJ0aW5nIHdpdGggYSB2YWx1ZSBvZiBgMC4wMWAsIGJp
Z2dlciB0aGFuIHRoYXQgYmFzaWNhbGx5IGRvZXNuJ3QgbWFrZSBhbnkgbW9t
ZW50dW0gYXQgYWxsLgoKRGVmYXVsdDogYDAuMDAwNmAKCiMjIyA8c21hbGw+
b3B0aW9ucy48L3NtYWxsPm1vdXNlV2hlZWxTcGVlZAoKU2V0IHRoZSBzcGVl
ZCBvZiB0aGUgbW91c2Ugd2hlZWwuCgpEZWZhdWx0OiBgMjBgCgojIyMgPHNt
YWxsPm9wdGlvbnMuPC9zbWFsbD5wcmV2ZW50RGVmYXVsdEV4Y2VwdGlvbgoK
VGhlc2UgYXJlIGFsbCB0aGUgZXhjZXB0aW9ucyB3aGVuIGBwcmV2ZW50RGVm
YXVsdCgpYCB3b3VsZCBiZSBmaXJlZCBhbnl3YXkgZGVzcGl0ZSB0aGUgKipw
cmV2ZW50RGVmYXVsdCoqIG9wdGlvbiB2YWx1ZS4KClRoaXMgaXMgYSBwcmV0
dHkgcG93ZXJmdWwgb3B0aW9uLCBpZiB5b3UgZG9uJ3Qgd2FudCB0byBgcHJl
dmVudERlZmF1bHQoKWAgb24gYWxsIGVsZW1lbnRzIHdpdGggKmZvcm1maWVs
ZCogY2xhc3MgbmFtZSBmb3IgZXhhbXBsZSwgeW91IGNvdWxkIHBhc3MgdGhl
IGZvbGxvd2luZzoKCmBgYGpzCnByZXZlbnREZWZhdWx0RXhjZXB0aW9uOiB7
IGNsYXNzTmFtZTogLyhefFxzKWZvcm1maWVsZChcc3wkKS8gfQpgYGAKCkRl
ZmF1bHQ6IGB7IHRhZ05hbWU6IC9eKElOUFVUfFRFWFRBUkVBfEJVVFRPTnxT
RUxFQ1QpJC8gfWAuCgojIyMgPHNtYWxsPm9wdGlvbnMuPC9zbWFsbD5yZXNp
emVQb2xsaW5nCgpXaGVuIHlvdSByZXNpemUgdGhlIHdpbmRvdyBpU2Nyb2xs
IGhhcyB0byByZWNhbGN1bGF0ZSBlbGVtZW50cyBwb3NpdGlvbiBhbmQgZGlt
ZW5zaW9uLiBUaGlzIG1pZ2h0IGJlIGEgcHJldHR5IGRhdW50aW5nIHRhc2sg
Zm9yIHRoZSBwb29yIGxpdHRsZSBmZWxsYS4gVG8gZ2l2ZSBpdCBzb21lIHJl
c3QgdGhlIHBvbGxpbmcgaXMgc2V0IHRvIDYwIG1pbGxpc2Vjb25kcy4KCkJ5
IHJlZHVjaW5nIHRoaXMgdmFsdWUgeW91IGdldCBiZXR0ZXIgdmlzdWFsIGVm
ZmVjdCBidXQgdGhlIHNjcmlwdCBiZWNvbWVzIG1vcmUgYWdncmVzc2l2ZSBv
biB0aGUgQ1BVLiBUaGUgZGVmYXVsdCB2YWx1ZSBzZWVtcyBhIGdvb2QgY29t
cHJvbWlzZS4KCkRlZmF1bHQ6IGA2MGAKCjxoMiBpZD0icmVmcmVzaCI+TWFz
dGVyaW5nIHRoZSByZWZyZXNoIG1ldGhvZDwvaDI+CgppU2Nyb2xsIG5lZWRz
IHRvIGtub3cgdGhlIGV4YWN0IGRpbWVuc2lvbnMgb2YgYm90aCB0aGUgd3Jh
cHBlciBhbmQgdGhlIHNjcm9sbGVyLiBUaGV5IGFyZSBjb21wdXRlZCBhdCBz
dGFydCB1cCBidXQgaWYgeW91ciBlbGVtZW50cyBjaGFuZ2UgaW4gc2l6ZSwg
d2UgbmVlZCB0byB0ZWxsIGlTY3JvbGwgdGhhdCB5b3UgYXJlIG1lc3Npbmcg
d2l0aCB0aGUgRE9NLgoKVGhpcyBpcyBhY2hpZXZlZCBieSBjYWxsaW5nIHRo
ZSBgcmVmcmVzaGAgbWV0aG9kIHdpdGggdGhlIHJpZ2h0IHRpbWluZy4gUGxl
YXNlIGZvbGxvdyBtZSBjbG9zZWx5LCB1bmRlcnN0YW5kaW5nIHRoaXMgd2ls
bCBzYXZlIHlvdSBob3VycyBvZiBmcnVzdHJhdGlvbi4KCkV2ZXJ5IHRpbWUg
eW91IHRvdWNoIHRoZSBET00gdGhlIGJyb3dzZXIgcmVuZGVyZXIgcmVwYWlu
dHMgdGhlIHBhZ2UuIE9uY2UgdGhpcyByZXBhaW50IGhhcyBoYXBwZW5lZCB3
ZSBjYW4gc2FmZWx5IHJlYWQgdGhlIG5ldyBET00gcHJvcGVydGllcy4gVGhl
IHJlcGFpbnQgcGhhc2UgaXMgbm90IGluc3RhbnRhbmVvdXMgYW5kIGl0IGhh
cHBlbnMgb25seSBhdCB0aGUgZW5kIG9mIHRoZSBzY29wZSB0aGF0IHRyaWdn
ZXJlZCBpdC4gVGhhdCdzIHdoeSB3ZSBuZWVkIHRvIGdpdmUgdGhlIHJlbmRl
cmVyIGEgbGl0dGxlIHJlc3QgYmVmb3JlIHJlZnJlc2hpbmcgdGhlIGlTY3Jv
bGwuCgpUbyBlbnN1cmUgdGhhdCBqYXZhc2NyaXB0IGdldHMgdGhlIHVwZGF0
ZWQgcHJvcGVydGllcyB5b3Ugc2hvdWxkIGRlZmVyIHRoZSByZWZyZXNoIHdp
dGggc29tZXRoaW5nIGxpa2UgdGhpczoKCmBgYGpzCmFqYXgoJ3BhZ2UucGhw
Jywgb25Db21wbGV0aW9uKTsKCmZ1bmN0aW9uIG9uQ29tcGxldGlvbiAoKSB7
CiAgICAvLyBVcGRhdGUgaGVyZSB5b3VyIERPTQogICAgCiAgICBzZXRUaW1l
b3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICBteVNjcm9sbC5yZWZyZXNoKCk7
CiAgICB9LCAwKTsKfTsKYGBgCgpXZSBoYXZlIHBsYWNlZCB0aGUgYHJlZnJl
c2goKWAgY2FsbCBpbnRvIGEgemVybyB0aW1lb3V0LiBUaGF0IGlzIGxpa2Vs
eSBhbGwgeW91IG5lZWQgdG8gY29ycmVjdGx5IHJlZnJlc2ggdGhlIGlTY3Jv
bGwgYm91bmRhcmllcy4gVGhlcmUgYXJlIG90aGVyIHdheXMgdG8gd2FpdCBm
b3IgdGhlIHJlcGFpbnQsIGJ1dCB0aGUgemVyby10aW1lb3V0IGhhcyBwcm92
ZW4gcHJldHR5IHNvbGlkLgoKPGRpdiBjbGFzcz0idGlwIj4KPHA+Q29uc2lk
ZXIgdGhhdCBpZiB5b3UgaGF2ZSBhIHZlcnkgY29tcGxleCBIVE1MIHN0cnVj
dHVyZSB5b3UgbWF5IGdpdmUgdGhlIGJyb3dzZXIgc29tZSBtb3JlIHJlc3Qg
YW5kIHJhaXNlIHRoZSB0aW1lb3V0IHRvIDEwMCBvciAyMDAgbWlsbGlzZWNv
bmRzLjwvcD4KCjxwPlRoaXMgaXMgZ2VuZXJhbGx5IHRydWUgZm9yIGFsbCB0
aGUgdGFza3MgdGhhdCBoYXZlIHRvIGJlIGRvbmUgb24gdGhlIERPTS4gQWx3
YXlzIGdpdmUgdGhlIHJlbmRlcmVyIHNvbWUgcmVzdC48L3A+CjwvZGl2PgoK
PGgyIGlkPSJjdXN0b20tZXZlbnRzIj5DdXN0b20gZXZlbnRzPC9oMj4KCmlT
Y3JvbGwgYWxzbyBlbWl0cyBzb21lIHVzZWZ1bCBjdXN0b20gZXZlbnRzIHlv
dSBjYW4gaG9vayB0by4KClRvIHJlZ2lzdGVyIHRoZW0geW91IHVzZSB0aGUg
YG9uKHR5cGUsIGZuKWAgbWV0aG9kLgoKYGBganMKbXlTY3JvbGwgPSBuZXcg
SVNjcm9sbCgnI3dyYXBwZXInKTsKbXlTY3JvbGwub24oJ3Njcm9sbEVuZCcs
IGRvU29tZXRoaW5nKTsKYGBgCgpUaGUgYWJvdmUgY29kZSBleGVjdXRlcyB0
aGUgYGRvU29tZXRoaW5nYCBmdW5jdGlvbiBldmVyeSB0aW1lIHRoZSBjb250
ZW50IHN0b3BzIHNjcm9sbGluZy4KClRoZSBhdmFpbGFibGUgdHlwZXMgYXJl
OgoKKiAqKmJlZm9yZVNjcm9sbFN0YXJ0KiosIGV4ZWN1dGVkIGFzIHNvb24g
YXMgdXNlciB0b3VjaGVzIHRoZSBzY3JlZW4gYnV0IGJlZm9yZSB0aGUgc2Ny
b2xsaW5nIGhhcyBpbml0aWF0ZWQuCiogKipzY3JvbGxDYW5jZWwqKiwgc2Ny
b2xsIGluaXRpYXRlZCBidXQgZGlkbid0IGhhcHBlbi4KKiAqKnNjcm9sbFN0
YXJ0KiosIHRoZSBzY3JvbGwgc3RhcnRlZC4KKiAqKnNjcm9sbCoqLCB0aGUg
Y29udGVudCBpcyBzY3JvbGxpbmcuIEF2YWlsYWJsZSBvbmx5IGluIGBzY3Jv
bGwtcHJvYmUuanNgIGVkaXRpb24uIFNlZSBbb25TY3JvbGwgZXZlbnRdKCNv
bnNjcm9sbCkuCiogKipzY3JvbGxFbmQqKiwgY29udGVudCBzdG9wcGVkIHNj
cm9sbGluZy4KKiAqKmZsaWNrKiosIHVzZXIgZmxpY2tlZCBsZWZ0L3JpZ2h0
LgoqICoqem9vbVN0YXJ0KiosIHVzZXIgc3RhcnRlZCB6b29taW5nLgoqICoq
em9vbUVuZCoqLCB6b29tIGVuZGVkLgoKPGgyIGlkPSJvbnNjcm9sbCI+b25T
Y3JvbGwgZXZlbnQ8L2gyPgoKVGhlIGBzY3JvbGxgIGV2ZW50IGlzIGF2YWls
YWJsZSBvbiAqKmlTY3JvbGwgcHJvYmUgZWRpdGlvbioqIG9ubHkgKGBpc2Ny
b2xsLXByb2JlLmpzYCkuIFRoZSBwcm9iZSBiZWhhdmlvciBjYW4gYmUgYWx0
ZXJlZCB0aHJvdWdoIHRoZSBgcHJvYmVUeXBlYCBvcHRpb24uCgojIyMgPHNt
YWxsPm9wdGlvbnMuPC9zbWFsbD5wcm9iZVR5cGUKClRoaXMgcmVndWxhdGVz
IHRoZSBwcm9iZSBhZ2dyZXNzaXZlbmVzcyBvciB0aGUgZnJlcXVlbmN5IGF0
IHdoaWNoIHRoZSBgc2Nyb2xsYCBldmVudCBpcyBmaXJlZC4gVmFsaWQgdmFs
dWVzIGFyZTogYDFgLCBgMmAsIGAzYC4gVGhlIGhpZ2hlciB0aGUgbnVtYmVy
IHRoZSBtb3JlIGFnZ3Jlc3NpdmUgdGhlIHByb2JlLiBUaGUgbW9yZSBhZ2dy
ZXNzaXZlIHRoZSBwcm9iZSB0aGUgaGlnaGVyIHRoZSBpbXBhY3Qgb24gdGhl
IENQVS4KCmBwcm9iZVR5cGU6IDFgIGhhcyBubyBpbXBhY3Qgb24gcGVyZm9y
bWFuY2UuIFRoZSBgc2Nyb2xsYCBldmVudCBpcyBmaXJlZCBvbmx5IHdoZW4g
dGhlIHNjcm9sbGVyIGlzIG5vdCBidXN5IGRvaW5nIGl0cyBzdHVmZi4KCmBw
cm9iZVR5cGU6IDJgIGFsd2F5cyBleGVjdXRlcyB0aGUgYHNjcm9sbGAgZXZl
bnQgZXhjZXB0IGR1cmluZyBtb21lbnR1bSBhbmQgYm91bmNlLiBUaGlzIHJl
c2VtYmxlcyB0aGUgbmF0aXZlIGBvblNjcm9sbGAgZXZlbnQuCgpgcHJvYmVU
eXBlOiAzYCBlbWl0cyB0aGUgYHNjcm9sbGAgZXZlbnQgd2l0aCBhIHRvLXRo
ZS1waXhlbCBwcmVjaXNpb24uIE5vdGUgdGhhdCB0aGUgc2Nyb2xsaW5nIGlz
IGZvcmNlZCB0byBgcmVxdWVzdEFuaW1hdGlvbkZyYW1lYCAoaWU6IGB1c2VU
cmFuc2l0aW9uOmZhbHNlYCkuCgpQbGVhc2Ugc2VlIHRoZSBbcHJvYmUgZGVt
b10oaHR0cDovL2xhYi5jdWJpcS5vcmcvaXNjcm9sbDUvZGVtb3MvcHJvYmUv
KS4KCjxoMiBpZD0ia2V5LWJpbmRpbmdzIj5LZXkgYmluZGluZ3M8L2gyPgoK
WW91IGNhbiBhY3RpdmF0ZSBzdXBwb3J0IGZvciBrZXlib2FyZHMgYW5kIHJl
bW90ZSBjb250cm9scyB3aXRoIHRoZSBga2V5QmluZGluZ3NgIG9wdGlvbi4g
QnkgZGVmYXVsdCBpU2Nyb2xsIGxpc3RlbnMgdG8gdGhlIGFycm93IGtleXMs
IHBhZ2UgdXAvZG93biwgaG9tZS9lbmQgYnV0IHRoZXkgYXJlICh3YWl0IGZv
ciBpdCkgdG90YWxseSBjdXN0b21pemFibGUuCgpZb3UgY2FuIHBhc3MgYW4g
b2JqZWN0IHdpdGggdGhlIGxpc3Qgb2Yga2V5IGNvZGVzIHlvdSB3YW50IGlT
Y3JvbGwgdG8gcmVhY3QgdG8uCgpUaGUgZGVmYXVsdCB2YWx1ZXMgYXJlIGFz
IGZvbGxvdzoKCmBgYGpzCmtleUJpbmRpbmdzOiB7CiAgICBwYWdlVXA6IDMz
LAogICAgcGFnZURvd246IDM0LAogICAgZW5kOiAzNSwKICAgIGhvbWU6IDM2
LAogICAgbGVmdDogMzcsCiAgICB1cDogMzgsCiAgICByaWdodDogMzksCiAg
ICBkb3duOiA0MAp9CmBgYAoKWW91IGNhbiBhbHNvIHBhc3MgYSBzdHJpbmcg
KGVnOiBgcGFnZVVwOiAnYSdgKSBhbmQgaVNjcm9sbCB3aWxsIGNvbnZlcnQg
aXQgZm9yIHlvdS4gWW91IGNvdWxkIGp1c3QgdGhpbmsgb2YgYSBrZXkgY29k
ZSBhbmQgaVNjcm9sbCB3b3VsZCByZWFkIGl0IG91dCBvZiB5b3VyIG1pbmQu
Cgo8aDIgaWQ9InNjcm9sbGVyLWluZm8iPlVzZWZ1bCBzY3JvbGxlciBpbmZv
PC9oMj4KCmlTY3JvbGwgc3RvcmVzIG1hbnkgdXNlZnVsIGluZm9ybWF0aW9u
IHRoYXQgeW91IGNhbiB1c2UgdG8gYXVnbWVudCB5b3VyIGFwcGxpY2F0aW9u
LgoKWW91IHdpbGwgcHJvYmFibHkgZmluZCB1c2VmdWw6CgoqICoqbXlTY3Jv
bGwueC95KiosIGN1cnJlbnQgcG9zaXRpb24KKiAqKm15U2Nyb2xsLmRpcmVj
dGlvblgvWSoqLCBsYXN0IGRpcmVjdGlvbiAoLTEgZG93bi9yaWdodCwgMCBz
dGlsbCwgMSB1cC9sZWZ0KQoqICoqbXlTY3JvbGwuY3VycmVudFBhZ2UqKiwg
Y3VycmVudCBzbmFwIHBvaW50IGluZm8KClRoZXNlIHBpZWNlcyBvZiBpbmZv
cm1hdGlvbiBtYXkgYmUgdXNlZnVsIHdoZW4gZGVhbGluZyB3aXRoIGN1c3Rv
bSBldmVudHMuIEVnOgoKYGBganMKbXlTY3JvbGwgPSBuZXcgSVNjcm9sbCgn
I3dyYXBwZXInKTsKbXlTY3JvbGwub24oJ3Njcm9sbEVuZCcsIGZ1bmN0aW9u
ICgpIHsKICAgIGlmICggdGhpcy54IDwgLTEwMDAgKSB7CiAgICAgICAgLy8g
ZG8gc29tZXRoaW5nCiAgICB9Cn0pOwpgYGAKClRoZSBhYm92ZSBleGVjdXRl
cyBzb21lIGNvZGUgaWYgdGhlIGB4YCBwb3NpdGlvbiBpcyBsb3dlciB0aGFu
IC0xMDAwcHggd2hlbiB0aGUgc2Nyb2xsZXIgc3RvcHMuIE5vdGUgdGhhdCBJ
IHVzZWQgYHRoaXNgIGluc3RlYWQgb2YgYG15U2Nyb2xsYCwgeW91IGNhbiB1
c2UgYm90aCBvZiBjb3Vyc2UsIGJ1dCBpU2Nyb2xsIHBhc3NlcyBpdHNlbGYg
YXMgYHRoaXNgIGNvbnRleHQgd2hlbiBmaXJpbmcgY3VzdG9tIGV2ZW50IGZ1
bmN0aW9ucy4KCjxoMiBpZD0iZGVzdHJveSI+RGVzdHJveTwvaDI+CgpUaGUg
cHVibGljIGBkZXN0cm95KClgIG1ldGhvZCBjYW4gYmUgdXNlZCB0byBmcmVl
IHNvbWUgbWVtb3J5IHdoZW4gdGhlIGlTY3JvbGwgaXMgbm90IG5lZWRlZCBh
bnltb3JlLgoKYGBganMKbXlTY3JvbGwuZGVzdHJveSgpOwpteVNjcm9sbCA9
IG51bGw7CmBgYAoKPGgyIGlkPSJjb250cmlidXRpbmciPkNvbnRyaWJ1dGlu
ZyBhbmQgQ0xBPC9oMj4KCklmIHlvdSB3YW50IHRvIGNvbnRyaWJ1dGUgdG8g
dGhlIGlTY3JvbGwgZGV2ZWxvcG1lbnQsIGJlZm9yZSBJIGNhbiBhY2NlcHQg
eW91ciBzdWJtaXNzaW9uIEkgaGF2ZSB0byBhc2sgeW91IHRvIHNpZ24gdGhl
IFtDb250cmlidXRvciBMaWNlbnNlIEFncmVlbWVudF0oaHR0cDovL2N1Ymlx
Lm9yZy9pc2Nyb2xsL2NsYS8pLiBVbmZvcnR1bmF0ZWx5IHRoYXQgaXMgdGhl
IG9ubHkgd2F5IHRvIGVuZm9yY2UgdGhlIG9wZW5uZXNzIG9mIHRoZSBzY3Jp
cHQuCgpBcyBhbiBlbmQgdXNlciB5b3UgaGF2ZSB0byBkbyBub3RoaW5nIG9m
IGNvdXJzZS4gQWN0dWFsbHkgdGhlIENMQSBlbnN1cmVzIHRoYXQgbm9ib2R5
IHdpbGwgZXZlbiBjb21lIGFmdGVyIHlvdSBhc2tpbmcgZm9yIHlvdXIgZmly
c3QgYm9ybiBmb3IgdXNpbmcgdGhlIGlTY3JvbGwuCgpQbGVhc2Ugbm90ZSB0
aGF0IHB1bGwgcmVxdWVzdHMgbWF5IHRha2Ugc29tZSB0aW1lIHRvIGJlIGFj
Y2VwdGVkLiBUZXN0aW5nIGlTY3JvbGwgaXMgb25lIG9mIHRoZSBtb3N0IHRp
bWUgY29uc3VtaW5nIHRhc2tzIG9mIHRoZSBwcm9qZWN0LiBpU2Nyb2xsIHdv
cmtzIGZyb20gZGVza3RvcCB0byBzbWFydHBob25lLCBmcm9tIHRhYmxldHMg
dG8gc21hcnQgVFZzLiBJIGRvIG5vdCBoYXZlIHBoeXNpY2FsIGFjY2VzcyB0
byBhbGwgdGhlIHRlc3RpbmcgZGV2aWNlcywgc28gYmVmb3JlIEkgY2FuIHB1
c2ggYSBjaGFuZ2UgSSBoYXZlIHRvIG1ha2Ugc3VyZSB0aGF0IHRoZSBuZXcg
Y29kZSBpcyB3b3JraW5nIGV2ZXJ5d2hlcmUuCgpDcml0aWNhbCBidWdzIGFy
ZSB1c3VhbGx5IGFwcGxpZWQgdmVyeSBxdWlja2x5LCBidXQgZW5oYW5jZW1l
bnRzIGFuZCBjb2Rpbmcgc3R5bGUgY2hhbmdlcyBoYXZlIHRvIHBhc3MgYSBs
b25nZXIgcmV2aWV3IHBoYXNlLiAqUmVtZW1iZXIgdGhhdCB0aGlzIGlzIHN0
aWxsIGEgc2lkZSBwcm9qZWN0IGZvciBtZS4qCgo8aDIgaWQ9Indob3MiPldo
byBpcyB1c2luZyBpU2Nyb2xsPC9oMj4KCkl0J3MgaW1wb3NzaWJsZSB0byB0
cmFjayBhbGwgdGhlIHdlYnNpdGVzIGFuZCBhcHBsaWNhdGlvbnMgdGhhdCB1
c2UgdGhlIGlTY3JvbGwuIEl0IGhhcyBiZWVuIHNwb3R0ZWQgb246IEFwcGxl
LCBNaWNyb3NvZnQsIFBlb3BsZSwgTGlua2VkSW4sIElLRUEsIE5pa2UsIFBs
YXlib3ksIEJvc2UsIGFuZCBjb3VudGxlc3Mgb3RoZXJzLgoKPGgyIGlkPSJs
aWNlbnNlIj5MaWNlbnNlIChNSVQpPC9oMj4KCgpDb3B5cmlnaHQgKGMpIDIw
MTQgTWF0dGVvIFNwaW5lbGxpLCBbY3ViaXEub3JnXShodHRwOi8vY3ViaXEu
b3JnLykKClBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2Yg
Y2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkgb2YgdGhp
cyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVz
ICh0aGUgIlNvZnR3YXJlIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdp
dGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRp
b24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1
Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNv
cGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0
byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1
YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOgoKVGhlIGFib3Zl
IGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ug
c2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlh
bCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuCgpUSEUgU09GVFdBUkUgSVMg
UFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lO
RCwgRVhQUkVTUyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1J
VEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwgRklU
TkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdF
TUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJ
R0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMg
T1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBD
T05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VU
IE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhF
IFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuCg==
",,12218,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'sqlitebrowser',19416551,"b'Official home of the DB Browser for SQLite (DB4S) project. Previously known as ""SQLite Database Browser"" and ""Database Browser for SQLite"". Website at: '",b'C++',380,12215,,504,False,b'https://api.github.com/repos/sqlitebrowser/sqlitebrowser/forks',"IyBEQiBCcm93c2VyIGZvciBTUUxpdGUKClshW1dpa2ldW3dpa2ktaW1nXV1b
d2lraV0KWyFbQnVpbGQgU3RhdHVzXVt0cmF2aXMtaW1nXV1bdHJhdmlzXQpb
IVtKb2luIHRoZSBjaGF0IGF0IGh0dHBzOi8vZ2l0dGVyLmltL3NxbGl0ZWJy
b3dzZXIvc3FsaXRlYnJvd3Nlcl1bZ2l0dGVyLWltZ11dW2dpdHRlcl0KWyFb
Sm9pbiB0aGUgY2hhdCBhdCBodHRwczovL2pvaW4uc2xhY2suY29tL3QvZGI0
cy9zaGFyZWRfaW52aXRlL2VuUXRNemMzTXpZNU9UVTRORGd6TFdSbFlqazBa
bUU1WkRFellXVm1ORFF4WVRZeE5tSmpOV1ZrTWpJM1ptVmpaVFkyTkRCak9E
WTNZek5oTlRObVpEVmxOV0kyWkdGak5UazVNakprWW1VXVtzbGFjay1pbWdd
XVtzbGFja10KWyFbRG93bmxvYWRdW2Rvd25sb2FkLWltZ11dW2Rvd25sb2Fk
XQpbIVtRdF1bcXQtaW1nXV1bcXRdClshW0NvdmVyaXR5XVtjb3Zlcml0eS1p
bWddXVtjb3Zlcml0eV0KWyFbUGF0cmVvbl1bcGF0cmVvbi1pbWddXVtwYXRy
ZW9uXQoKIVtEQiBCcm93c2VyIGZvciBTUUxpdGUgU2NyZWVuc2hvdF0oaHR0
cHM6Ly9naXRodWIuY29tL3NxbGl0ZWJyb3dzZXIvc3FsaXRlYnJvd3Nlci9y
YXcvbWFzdGVyL2ltYWdlcy9zcWxpdGVicm93c2VyLnBuZyAiREIgQnJvd3Nl
ciBmb3IgU1FMaXRlIFNjcmVlbnNob3QiKQoKIyMgV2hhdCBpdCBpcwoKX0RC
IEJyb3dzZXIgZm9yIFNRTGl0ZV8gKERCNFMpIGlzIGEgaGlnaCBxdWFsaXR5
LCB2aXN1YWwsIG9wZW4gc291cmNlIHRvb2wgdG8KY3JlYXRlLCBkZXNpZ24s
IGFuZCBlZGl0IGRhdGFiYXNlIGZpbGVzIGNvbXBhdGlibGUgd2l0aCBTUUxp
dGUuCgpEQjRTIGlzIGZvciB1c2VycyBhbmQgZGV2ZWxvcGVycyB3aG8gd2Fu
dCB0byBjcmVhdGUsIHNlYXJjaCwgYW5kIGVkaXQKZGF0YWJhc2VzLiAgREI0
UyB1c2VzIGEgZmFtaWxpYXIgc3ByZWFkc2hlZXQtbGlrZSBpbnRlcmZhY2Us
IGFuZCBjb21wbGljYXRlZCBTUUwgY29tbWFuZHMgZG8gbm90IGhhdmUgdG8g
YmUgbGVhcm5lZC4KCkNvbnRyb2xzIGFuZCB3aXphcmRzIGFyZSBhdmFpbGFi
bGUgZm9yIHVzZXJzIHRvOgoKKiBDcmVhdGUgYW5kIGNvbXBhY3QgZGF0YWJh
c2UgZmlsZXMKKiBDcmVhdGUsIGRlZmluZSwgbW9kaWZ5IGFuZCBkZWxldGUg
dGFibGVzCiogQ3JlYXRlLCBkZWZpbmUsIGFuZCBkZWxldGUgaW5kZXhlcwoq
IEJyb3dzZSwgZWRpdCwgYWRkLCBhbmQgZGVsZXRlIHJlY29yZHMKKiBTZWFy
Y2ggcmVjb3JkcwoqIEltcG9ydCBhbmQgZXhwb3J0IHJlY29yZHMgYXMgdGV4
dAoqIEltcG9ydCBhbmQgZXhwb3J0IHRhYmxlcyBmcm9tL3RvIENTViBmaWxl
cwoqIEltcG9ydCBhbmQgZXhwb3J0IGRhdGFiYXNlcyBmcm9tL3RvIFNRTCBk
dW1wIGZpbGVzCiogSXNzdWUgU1FMIHF1ZXJpZXMgYW5kIGluc3BlY3QgdGhl
IHJlc3VsdHMKKiBFeGFtaW5lIGEgbG9nIG9mIGFsbCBTUUwgY29tbWFuZHMg
aXNzdWVkIGJ5IHRoZSBhcHBsaWNhdGlvbgoqIFBsb3Qgc2ltcGxlIGdyYXBo
cyBiYXNlZCBvbiB0YWJsZSBvciBxdWVyeSBkYXRhCgojIyBXaGF0IGl0IGlz
IG5vdAoKVGhpcyBwcm9ncmFtIGlzIG5vdCBhIHZpc3VhbCBzaGVsbCBmb3Ig
dGhlIHNxbGl0ZSBjb21tYW5kIGxpbmUgdG9vbCwgYW5kIGRvZXMKbm90IHJl
cXVpcmUgZmFtaWxpYXJpdHkgd2l0aCBTUUwgY29tbWFuZHMuIEl0IGlzIGEg
dG9vbCB0byBiZSB1c2VkIGJ5IGJvdGgKZGV2ZWxvcGVycyBhbmQgZW5kIHVz
ZXJzLCBhbmQgbXVzdCByZW1haW4gYXMgc2ltcGxlIHRvIHVzZSBhcyBwb3Nz
aWJsZQppbiBvcmRlciB0byBhY2hpZXZlIHRoZXNlIGdvYWxzLgoKIyMgV2lr
aQoKRm9yIHVzZXIgYW5kIGRldmVsb3BlciBkb2N1bWVudGF0aW9uLCBjaGVj
ayBvdXQgb3VyIFdpa2kgYXQ6Cmh0dHBzOi8vZ2l0aHViLmNvbS9zcWxpdGVi
cm93c2VyL3NxbGl0ZWJyb3dzZXIvd2lraS4KCiMjIE5pZ2h0bHkgYnVpbGRz
CgpEb3dubG9hZCBuaWdodGx5IGJ1aWxkcyBmb3IgV2luZG93cyBhbmQgT1NY
IGhlcmU6CgoqIGh0dHBzOi8vbmlnaHRsaWVzLnNxbGl0ZWJyb3dzZXIub3Jn
L2xhdGVzdAoKIyMgV2luZG93cwoKRG93bmxvYWQgV2luZG93cyByZWxlYXNl
cyBoZXJlOgoKKiBodHRwczovL3NxbGl0ZWJyb3dzZXIub3JnL2RsLyN3aW5k
b3dzCgoqKk5vdGUqKiAtIElmIGZvciBzb21lIHJlYXNvbiB0aGUgc3RhbmRh
cmQgV2luZG93cyByZWxlYXNlIGRvZXMgbm90IHdvcmsKKGUuZy4gZ2l2ZXMg
YW4gZXJyb3IpLCB0cnkgYSBuaWdodGx5IGJ1aWxkLiAgTmlnaHRseSBidWls
ZHMgb2Z0ZW4gZml4IGJ1Z3MKcmVwb3J0ZWQgYWZ0ZXIgdGhlIGxhc3QgcmVs
ZWFzZS4gOkQKCiMjIE1hY09TIFggLyBtYWNPUwoKREIgQnJvd3NlciBmb3Ig
U1FMaXRlIHdvcmtzIHdlbGwgb24gTWFjT1MgWCAvIG1hY09TLgoKKiBPU1gg
MTAuOCAoTW91bnRhaW4gTGlvbikgLSAxMC4xMyAoSGlnaCBTaWVycmEpIGFy
ZSB0ZXN0ZWQgYW5kIGtub3duIHRvIHdvcmsKCkRvd25sb2FkIE9TWCByZWxl
YXNlcyBoZXJlOgoKKiBodHRwczovL3NxbGl0ZWJyb3dzZXIub3JnL2RsLyNt
YWNvcwoKVGhlIGxhdGVzdCBPU1ggYmluYXJ5IGNhbiBiZSBpbnN0YWxsZWQg
dmlhIFtIb21lYnJldyBDYXNrXShodHRwczovL2Nhc2tyb29tLmdpdGh1Yi5p
by8gIkhvbWVicmV3IENhc2siKToKCmBgYApicmV3IGNhc2sgaW5zdGFsbCBk
Yi1icm93c2VyLWZvci1zcWxpdGUKYGBgCgojIyBMaW51eAoKREIgQnJvd3Nl
ciBmb3IgU1FMaXRlIHdvcmtzIHdlbGwgb24gTGludXguCgojIyMgQXJjaCBM
aW51eAoKQXJjaCBMaW51eCBwcm92aWRlcyBhIHBhY2thZ2UgdGhyb3VnaCBw
YWNtYW4uCgojIyMgRmVkb3JhCgpJbnN0YWxsIGZvciBGZWRvcmEgKGkzODYg
YW5kIHg4Nl82NCkgYnkgaXNzdWluZyB0aGUgZm9sbG93aW5nIGNvbW1hbmQ6
CgogICAgJCBzdWRvIGRuZiBpbnN0YWxsIHNxbGl0ZWJyb3dzZXIKICAgIAoj
IyMgb3BlblNVU0UKCiAgICAkIHN1ZG8genlwcGVyIGluc3RhbGwgc3FsaXRl
YnJvd3NlcgoKIyMjIERlYmlhbgoKTm90ZSB0aGF0IERlYmlhbiBmb2N1c2Vz
IG1vcmUgb24gc3RhYmlsaXR5IHJhdGhlciB0aGFuIG5ld2VzdCBmZWF0dXJl
cy4gVGhlcmVmb3JlIHBhY2thZ2VzIHdpbGwgdHlwaWNhbGx5IGNvbnRhaW4g
c29tZSBvbGRlciAoYnV0IHdlbGwgdGVzdGVkKSB2ZXJzaW9uLCBjb21wYXJl
ZCB0byB0aGUgbGF0ZXN0IHJlbGVhc2UuCgpVcGRhdGUgdGhlIGNhY2hlIHVz
aW5nOgoKICAgIHN1ZG8gYXB0LWdldCB1cGRhdGUKCkluc3RhbGwgdGhlIHBh
Y2thZ2UgdXNpbmc6CgogICAgc3VkbyBhcHQtZ2V0IGluc3RhbGwgc3FsaXRl
YnJvd3NlcgoKCiMjIyBVYnVudHUgYW5kIERlcml2YXRpdmVzCgojIyMjIFN0
YWJsZSByZWxlYXNlCgpGb3IgVWJ1bnR1IGFuZCBkZXJpdmF0aWVzLCBbQGRl
ZXBzaWRodTEzMTNdKGh0dHBzOi8vZ2l0aHViLmNvbS9kZWVwc2lkaHUxMzEz
KQpwcm92aWRlcyBhIFBQQSB3aXRoIHRoZSBsYXRlc3QgcmVsZWFzZSBoZXJl
OgoKKiBodHRwczovL2xhdW5jaHBhZC5uZXQvfmxpbnV4Z25kdS8rYXJjaGl2
ZS91YnVudHUvc3FsaXRlYnJvd3NlcgoKVG8gYWRkIHRoaXMgcHBhIGp1c3Qg
dHlwZSBpbiB0aGVzZSBjb21tYW5kcyBpbiB0ZXJtaW5hbDoKCiAgICBzdWRv
IGFkZC1hcHQtcmVwb3NpdG9yeSAteSBwcGE6bGludXhnbmR1L3NxbGl0ZWJy
b3dzZXIKClRoZW4gdXBkYXRlIHRoZSBjYWNoZSB1c2luZzoKCiAgICBzdWRv
IGFwdC1nZXQgdXBkYXRlCgpJbnN0YWxsIHRoZSBwYWNrYWdlIHVzaW5nOgoK
ICAgIHN1ZG8gYXB0LWdldCBpbnN0YWxsIHNxbGl0ZWJyb3dzZXIKClVidW50
dSAxNC4wNC5YLCAxNS4wNC5YLCAxNS4xMC5YIGFuZCAxNi4wNC5YIGFyZSBz
dXBwb3J0ZWQgZm9yIG5vdyAodW50aWwKTGF1bmNocGFkIGRlY2lkZXMgdG8g
ZGlzY29udGludWUgYnVpbGRpbmcgZm9yIGFueSBzZXJpZXMpLgoKVWJ1bnR1
IFByZWNpc2UgKDEyLjA0KSBhbmQgVXRvcGljICgxNC4xMCkgYXJlIG5vdCBz
dXBwb3J0ZWQ6CiogUHJlY2lzZSBkb2VzIG5vdCBoYXZlIGEgbmV3IGVub3Vn
aCBRdCBwYWNrYWdlIGluIGl0cyByZXBvc2l0b3J5IGJ5IGRlZmF1bHQsCiAg
d2hpY2ggaXMgYSBkZXBlbmRlbmN5CiogTGF1bmNocGFkIGRvZXMgbm90IHN1
cHBvcnQgVXRvcGljIGFueSBtb3JlLCB3aGljaCBoYXMgcmVhY2hlZCBpdHMg
RW5kIG9mCiAgTGlmZQoKIyMjIyBOaWdodGx5IGJ1aWxkcwoKTmlnaHRseSBi
dWlsZHMgYXJlIGF2YWlsYWJsZSBoZXJlOgoKKiBodHRwczovL2xhdW5jaHBh
ZC5uZXQvfmxpbnV4Z25kdS8rYXJjaGl2ZS91YnVudHUvc3FsaXRlYnJvd3Nl
ci10ZXN0aW5nCgpUbyBhZGQgdGhpcyBwcGEsIHR5cGUgdGhlc2UgY29tbWFu
ZHMgaW50byB0aGUgdGVybWluYWw6CgogICAgc3VkbyBhZGQtYXB0LXJlcG9z
aXRvcnkgLXkgcHBhOmxpbnV4Z25kdS9zcWxpdGVicm93c2VyLXRlc3RpbmcK
ClRoZW4gdXBkYXRlIHRoZSBjYWNoZSB1c2luZzoKCiAgICBzdWRvIGFwdC1n
ZXQgdXBkYXRlCgpJbnN0YWxsIHRoZSBwYWNrYWdlIHVzaW5nOgoKICAgIHN1
ZG8gYXB0LWdldCBpbnN0YWxsIHNxbGl0ZWJyb3dzZXIKCiMjIyBPdGhlciBM
aW51eAoKT24gb3RoZXJzLCBjb21waWxlIERCNFMgdXNpbmcgdGhlIGluc3Ry
dWN0aW9ucwppbiBbQlVJTERJTkcubWRdKEJVSUxESU5HLm1kKS4KCiMjIEZy
ZWVCU0QKCkRCIEJyb3dzZXIgZm9yIFNRTGl0ZSB3b3JrcyB3ZWxsIG9uIEZy
ZWVCU0QsIGFuZCB0aGVyZSBpcyBhIHBvcnQgZm9yIGl0ICh0aGFua3MKdG8g
W2xiYXJ0b2xldHRpXShodHRwczovL2dpdGh1Yi5jb20vbGJhcnRvbGV0dGkp
IDpzbWlsZTopLiAgREI0UyBjYW4gYmUgaW5zdGFsbGVkCnVzaW5nIGVpdGhl
ciB0aGlzIGNvbW1hbmQ6CgogICAgIyBtYWtlIC1DIC91c3IvcG9ydHMvZGF0
YWJhc2VzL3NxbGl0ZWJyb3dzZXIgaW5zdGFsbAoKb3IgdGhpcyBjb21tYW5k
OgoKICAgICMgcGtnIGluc3RhbGwgc3FsaXRlYnJvd3NlcgoKIyMgU25hcCBw
YWNrYWdlcwoKWyFbR2V0IGl0IGZyb20gdGhlIFNuYXAgU3RvcmVdKGh0dHBz
Oi8vc25hcGNyYWZ0LmlvL3N0YXRpYy9pbWFnZXMvYmFkZ2VzL2VuL3NuYXAt
c3RvcmUtYmxhY2suc3ZnKV0oaHR0cHM6Ly9zbmFwY3JhZnQuaW8vc3FsaXRl
YnJvd3NlcikKCiMjIyMgU25hcCBOaWdodGxpZXMKCiAgICAgc25hcCBpbnN0
YWxsIHNxbGl0ZWJyb3dzZXIgLS1kZXZtb2RlCgojIyMjIFNuYXAgU3RhYmxl
CgogICAgIHNuYXAgaW5zdGFsbCBzcWxpdGVicm93c2VyCgoKIyMgQ29tcGls
aW5nCgpJbnN0cnVjdGlvbnMgZm9yIGNvbXBpbGluZyBvbiBXaW5kb3dzLCBP
U1gsIExpbnV4LCBhbmQgRnJlZUJTRCBhcmUKaW4gW0JVSUxESU5HXShCVUlM
RElORy5tZCkuCgojIyBUd2l0dGVyCgpGb2xsb3cgdXMgb24gVHdpdHRlcjog
aHR0cHM6Ly90d2l0dGVyLmNvbS9zcWxpdGVicm93c2VyCgojIyBXZWJzaXRl
CgoqIGh0dHBzOi8vc3FsaXRlYnJvd3Nlci5vcmcKCiMjIE9sZCBwcm9qZWN0
IHBhZ2UKCiogaHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvc3Fs
aXRlYnJvd3NlcgoKIyMgUmVsZWFzZXMKCiogW1ZlcnNpb24gMy4xMS4yIHJl
bGVhc2VkXShodHRwczovL2dpdGh1Yi5jb20vc3FsaXRlYnJvd3Nlci9zcWxp
dGVicm93c2VyL3JlbGVhc2VzL3RhZy92My4xMS4yKSAtIDIwMTktMDQtMDMK
KiBbVmVyc2lvbiAzLjExLjEgcmVsZWFzZWRdKGh0dHBzOi8vZ2l0aHViLmNv
bS9zcWxpdGVicm93c2VyL3NxbGl0ZWJyb3dzZXIvcmVsZWFzZXMvdGFnL3Yz
LjExLjEpIC0gMjAxOS0wMi0xOAoqIFtWZXJzaW9uIDMuMTEuMCByZWxlYXNl
ZF0oaHR0cHM6Ly9naXRodWIuY29tL3NxbGl0ZWJyb3dzZXIvc3FsaXRlYnJv
d3Nlci9yZWxlYXNlcy90YWcvdjMuMTEuMCkgLSAyMDE5LTAyLTA3CiogW1Zl
cnNpb24gMy4xMC4xIHJlbGVhc2VkXShodHRwczovL2dpdGh1Yi5jb20vc3Fs
aXRlYnJvd3Nlci9zcWxpdGVicm93c2VyL3JlbGVhc2VzL3RhZy92My4xMC4x
KSAtIDIwMTctMDktMjAKKiBbVmVyc2lvbiAzLjEwLjAgcmVsZWFzZWRdKGh0
dHBzOi8vZ2l0aHViLmNvbS9zcWxpdGVicm93c2VyL3NxbGl0ZWJyb3dzZXIv
cmVsZWFzZXMvdGFnL3YzLjEwLjApIC0gMjAxNy0wOC0yMAoqIFtWZXJzaW9u
IDMuOS4xIHJlbGVhc2VkXShodHRwczovL2dpdGh1Yi5jb20vc3FsaXRlYnJv
d3Nlci9zcWxpdGVicm93c2VyL3JlbGVhc2VzL3RhZy92My45LjEpIC0gMjAx
Ni0xMC0wMwoqIFtWZXJzaW9uIDMuOS4wIHJlbGVhc2VkXShodHRwczovL2dp
dGh1Yi5jb20vc3FsaXRlYnJvd3Nlci9zcWxpdGVicm93c2VyL3JlbGVhc2Vz
L3RhZy92My45LjApIC0gMjAxNi0wOC0yNAoqIFtWZXJzaW9uIDMuOC4wIHJl
bGVhc2VkXShodHRwczovL2dpdGh1Yi5jb20vc3FsaXRlYnJvd3Nlci9zcWxp
dGVicm93c2VyL3JlbGVhc2VzL3RhZy92My44LjApIC0gMjAxNS0xMi0yNQoq
IFtWZXJzaW9uIDMuNy4wIHJlbGVhc2VkXShodHRwczovL2dpdGh1Yi5jb20v
c3FsaXRlYnJvd3Nlci9zcWxpdGVicm93c2VyL3JlbGVhc2VzL3RhZy92My43
LjApIC0gMjAxNS0wNi0xNAoqIFtWZXJzaW9uIDMuNi4wIHJlbGVhc2VkXSho
dHRwczovL2dpdGh1Yi5jb20vc3FsaXRlYnJvd3Nlci9zcWxpdGVicm93c2Vy
L3JlbGVhc2VzL3RhZy92My42LjApIC0gMjAxNS0wNC0yNwoqIFtWZXJzaW9u
IDMuNS4xIHJlbGVhc2VkXShodHRwczovL2dpdGh1Yi5jb20vc3FsaXRlYnJv
d3Nlci9zcWxpdGVicm93c2VyL3JlbGVhc2VzL3RhZy92My41LjEpIC0gMjAx
NS0wMi0wOAoqIFtWZXJzaW9uIDMuNS4wIHJlbGVhc2VkXShodHRwczovL2dp
dGh1Yi5jb20vc3FsaXRlYnJvd3Nlci9zcWxpdGVicm93c2VyL3JlbGVhc2Vz
L3RhZy92My41LjApIC0gMjAxNS0wMS0zMQoqIFtWZXJzaW9uIDMuNC4wIHJl
bGVhc2VkXShodHRwczovL2dpdGh1Yi5jb20vc3FsaXRlYnJvd3Nlci9zcWxp
dGVicm93c2VyL3JlbGVhc2VzL3RhZy92My40LjApIC0gMjAxNC0xMC0yOQoq
IFtWZXJzaW9uIDMuMy4xIHJlbGVhc2VkXShodHRwczovL2dpdGh1Yi5jb20v
c3FsaXRlYnJvd3Nlci9zcWxpdGVicm93c2VyL3JlbGVhc2VzL3RhZy92My4z
LjEpIC0gMjAxNC0wOC0zMSAtIFByb2plY3QgcmVuYW1lZCBmcm9tICJTUUxp
dGUgRGF0YWJhc2UgQnJvd3NlciIKKiBbVmVyc2lvbiAzLjMuMCByZWxlYXNl
ZF0oaHR0cHM6Ly9naXRodWIuY29tL3NxbGl0ZWJyb3dzZXIvc3FsaXRlYnJv
d3Nlci9yZWxlYXNlcy90YWcvdjMuMy4wKSAtIDIwMTQtMDgtMjQKKiBbVmVy
c2lvbiAzLjIuMCByZWxlYXNlZF0oaHR0cHM6Ly9naXRodWIuY29tL3NxbGl0
ZWJyb3dzZXIvc3FsaXRlYnJvd3Nlci9yZWxlYXNlcy90YWcvc3FsYi0zLjIu
MCkgLSAyMDE0LTA3LTA2CiogW1ZlcnNpb24gMy4xLjAgcmVsZWFzZWRdKGh0
dHBzOi8vZ2l0aHViLmNvbS9zcWxpdGVicm93c2VyL3NxbGl0ZWJyb3dzZXIv
cmVsZWFzZXMvdGFnL3NxbGItMy4xLjApIC0gMjAxNC0wNS0xNwoqIFtWZXJz
aW9uIDMuMC4zIHJlbGVhc2VkXShodHRwczovL2dpdGh1Yi5jb20vc3FsaXRl
YnJvd3Nlci9zcWxpdGVicm93c2VyL3JlbGVhc2VzL3RhZy9zcWxiLTMuMC4z
KSAtIDIwMTQtMDQtMjgKKiBbVmVyc2lvbiAzLjAuMiByZWxlYXNlZF0oaHR0
cHM6Ly9naXRodWIuY29tL3NxbGl0ZWJyb3dzZXIvc3FsaXRlYnJvd3Nlci9y
ZWxlYXNlcy90YWcvc3FsYi0zLjAuMikgLSAyMDE0LTAyLTEyCiogW1ZlcnNp
b24gMy4wLjEgcmVsZWFzZWRdKGh0dHBzOi8vZ2l0aHViLmNvbS9zcWxpdGVi
cm93c2VyL3NxbGl0ZWJyb3dzZXIvcmVsZWFzZXMvdGFnL3NxbGItMy4wLjEp
IC0gMjAxMy0xMi0wMgoqIFtWZXJzaW9uIDMuMCByZWxlYXNlZF0oaHR0cHM6
Ly9naXRodWIuY29tL3NxbGl0ZWJyb3dzZXIvc3FsaXRlYnJvd3Nlci9yZWxl
YXNlcy90YWcvc3FsYi0zLjApIC0gMjAxMy0wOS0xNQoqIFtWZXJzaW9uIDMu
MHJjMSByZWxlYXNlZF0oaHR0cHM6Ly9naXRodWIuY29tL3NxbGl0ZWJyb3dz
ZXIvc3FsaXRlYnJvd3Nlci9yZWxlYXNlcy90YWcvcmMxKSAtIDIwMTMtMDkt
MDkgLSBQcm9qZWN0IG5vdyBvbiBHaXRIdWIKKiBWZXJzaW9uIDIuMGIxIHJl
bGVhc2VkIC0gMjAwOS0xMi0xMCAtIEJhc2VkIG9uIFF0NC42CiogVmVyc2lv
biAxLjIgcmVsZWFzZWQgLSAyMDA1LTA0LTA1CiogVmVyc2lvbiAxLjEgcmVs
ZWFzZWQgLSAyMDA0LTA3LTIwCiogVmVyc2lvbiAxLjAxIHJlbGVhc2VkIC0g
MjAwMy0xMC0wMgoqIFZlcnNpb24gMS4wIHJlbGVhc2VkIHRvIHB1YmxpYyBk
b21haW4gLSAyMDAzLTA4LTE5CgojIyBIaXN0b3J5CgpUaGlzIHByb2dyYW0g
d2FzIGRldmVsb3BlZCBvcmlnaW5hbGx5IGJ5IE1hdXJpY2lvIFBpYWNlbnRp
bmkKKFtAcGlhY2VudGluaV0oaHR0cHM6Ly9naXRodWIuY29tL3BpYWNlbnRp
bmkpKSBmcm9tIFRhYnVsZWlybyBQcm9kdWNvZXMsIGFzCnRoZSBBcmNhIERh
dGFiYXNlIEJyb3dzZXIuIFRoZSBvcmlnaW5hbCB2ZXJzaW9uIHdhcyB1c2Vk
IGFzIGEgZnJlZSBjb21wYW5pb24KdG9vbCB0byB0aGUgQXJjYSBEYXRhYmFz
ZSBYdHJhLCBhIGNvbW1lcmNpYWwgcHJvZHVjdCB0aGF0IGVtYmVkcyBTUUxp
dGUKZGF0YWJhc2VzIHdpdGggc29tZSBhZGRpdGlvbmFsIGV4dGVuc2lvbnMg
dG8gaGFuZGxlIGNvbXByZXNzZWQgYW5kIGJpbmFyeSBkYXRhLgoKVGhlIG9y
aWdpbmFsIGNvZGUgd2FzIHRyaW1tZWQgYW5kIGFkanVzdGVkIHRvIGJlIGNv
bXBhdGlibGUgd2l0aCBzdGFuZGFyZApTUUxpdGUgMi54IGRhdGFiYXNlcy4g
VGhlIHJlc3VsdGluZyBwcm9ncmFtIHdhcyByZW5hbWVkIFNRTGl0ZSBEYXRh
YmFzZQpCcm93c2VyLCBhbmQgcmVsZWFzZWQgaW50byB0aGUgUHVibGljIERv
bWFpbiBieSBNYXVyaWNpby4gSWNvbnMgd2VyZQpjb250cmlidXRlZCBieSBb
UmFxdWVsIFJhdmFuaW5pXShodHRwOi8vd3d3LnJhcXVlbHJhdmFuaW5pLmNv
bSksIGFsc28gZnJvbQpUYWJ1bGVpcm8uIEplbnMgTWlsdG5lciAoW0BqbWls
dG5lcl0oaHR0cHM6Ly9naXRodWIuY29tL2ptaWx0bmVyKSkgY29udHJpYnV0
ZWQKdGhlIGNvZGUgdG8gc3VwcG9ydCBTUUxpdGUgMy54IGRhdGFiYXNlcyBm
b3IgdGhlIDEuMiByZWxlYXNlLgoKUGV0ZSBNb3JnYW4gKFtAZGFmZm9kaWxd
KGh0dHBzOi8vZ2l0aHViLmNvbS9kYWZmb2RpbCkpIGNyZWF0ZWQgYW4gaW5p
dGlhbApwcm9qZWN0IG9uIEdpdEh1YiB3aXRoIHRoZSBjb2RlIGluIDIwMTIs
IHdoZXJlIHNldmVyYWwgY29udHJpYnV0b3JzIGZpeGVkIGFuZAppbXByb3Zl
ZCBwaWVjZXMgb3ZlciB0aGUgeWVhcnMuIFJlbsOpIFBlaW50aG9yIChbQHJw
LV0oaHR0cHM6Ly9naXRodWIuY29tL3JwLSkpCmFuZCBNYXJ0aW4gS2xldXNi
ZXJnIChbQE1LbGV1c2JlcmddKGh0dHBzOi8vZ2l0aHViLmNvbS9NS2xldXNi
ZXJnKSkgdGhlbgpiZWNhbWUgaW52b2x2ZWQsIGFuZCBoYXZlIGJlZW4gdGhl
IG1haW4gZHJpdmluZyBmb3JjZSBmcm9tIHRoYXQgcG9pbnQuICBKdXN0aW4K
Q2xpZnQgKFtAanVzdGluY2xpZnRdKGh0dHBzOi8vZ2l0aHViLmNvbS9qdXN0
aW5jbGlmdCkpIGhlbHBzIG91dCB3aXRoIHRlc3RpbmcKb24gT1NYLCBhbmQg
c3RhcnRlZCB0aGUgbmV3IGdpdGh1Yi5jb20vc3FsaXRlYnJvd3NlciBvcmdh
bmlzYXRpb24gb24gR2l0SHViLgoKW0pvaG4gVC4gSGFsbGVyXShodHRwOi8v
am9obmhhbGxlci5jb20pLCBvZgpbUG9ydGFibGVBcHBzLmNvbV0oaHR0cDov
L3BvcnRhYmxlYXBwcy5jb20pIGZhbWUsIGNyZWF0ZWQgdGhlIG5ldyBsb2dv
LiAgSGUKYmFzZWQgaXQgb24gdGhlIFRhbmdvIGljb24gc2V0IChwdWJsaWMg
ZG9tYWluKS4KCkluIEF1Z3VzdCAyMDE0LCB0aGUgcHJvamVjdCB3YXMgcmVu
YW1lZCB0byAiRGF0YWJhc2UgQnJvd3NlciBmb3IgU1FMaXRlIiBhdAp0aGUg
cmVxdWVzdCBvZiBbUmljaGFyZCBIaXBwXShodHRwOi8vd3d3Lmh3YWNpLmNv
bS9kcmgpIChjcmVhdG9yIG9mCltTUUxpdGVdKGh0dHA6Ly9zcWxpdGUub3Jn
KSksIGFzIHRoZSBwcmV2aW91cyBuYW1lIHdhcyBjcmVhdGluZyB1bmludGVu
ZGVkCnN1cHBvcnQgaXNzdWVzLgoKSW4gU2VwdGVtYmVyIDIwMTQsIHRoZSBw
cm9qZWN0IHdhcyByZW5hbWVkIHRvICJEQiBCcm93c2VyIGZvciBTUUxpdGUi
LCB0bwphdm9pZCBjb25mdXNpb24gd2l0aCBhbiBleGlzdGluZyBhcHBsaWNh
dGlvbiBjYWxsZWQgIkRhdGFiYXNlIEJyb3dzZXIiLgoKIyMgQ29udHJpYnV0
b3JzCgpWaWV3IHRoZSBsaXN0IGJ5IGdvaW5nIHRvIHRoZSBbX19Db250cmli
dXRvcnNfXyB0YWJdKGh0dHBzOi8vZ2l0aHViLmNvbS9zcWxpdGVicm93c2Vy
L3NxbGl0ZWJyb3dzZXIvZ3JhcGhzL2NvbnRyaWJ1dG9ycykuCgojIyBMaWNl
bnNlCgpEQiBCcm93c2VyIGZvciBTUUxpdGUgaXMgYmktbGljZW5zZWQgdW5k
ZXIgdGhlIE1vemlsbGEgUHVibGljIExpY2Vuc2UKVmVyc2lvbiAyLCBhcyB3
ZWxsIGFzIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBWZXJzaW9u
IDMgb3IgbGF0ZXIuCgpNb2RpZmljYXRpb24gb3IgcmVkaXN0cmlidXRpb24g
aXMgcGVybWl0dGVkIHVuZGVyIHRoZSBjb25kaXRpb25zIG9mIHRoZXNlIGxp
Y2Vuc2VzLgoKICBbdHJhdmlzLWltZ106IGh0dHBzOi8vdHJhdmlzLWNpLm9y
Zy9zcWxpdGVicm93c2VyL3NxbGl0ZWJyb3dzZXIuc3ZnP2JyYW5jaD1tYXN0
ZXIKICBbdHJhdmlzXTogaHR0cHM6Ly90cmF2aXMtY2kub3JnL3NxbGl0ZWJy
b3dzZXIvc3FsaXRlYnJvd3NlcgoKICBbZ2l0dGVyLWltZ106IGh0dHBzOi8v
YmFkZ2VzLmdpdHRlci5pbS9zcWxpdGVicm93c2VyL3NxbGl0ZWJyb3dzZXIu
c3ZnCiAgW2dpdHRlcl06IGh0dHBzOi8vZ2l0dGVyLmltL3NxbGl0ZWJyb3dz
ZXIvc3FsaXRlYnJvd3NlcgoKICBbc2xhY2staW1nXTogaHR0cHM6Ly9pbWcu
c2hpZWxkcy5pby9iYWRnZS9jaGF0LW9uJTIwc2xhY2stb3JhbmdlLnN2Zwog
IFtzbGFja106IGh0dHBzOi8vam9pbi5zbGFjay5jb20vdC9kYjRzL3NoYXJl
ZF9pbnZpdGUvZW5RdE16YzNNelk1T1RVNE5EZ3pMV1JsWWprMFptRTVaREV6
WVdWbU5EUXhZVFl4Tm1Kak5XVmtNakkzWm1WalpUWTJOREJqT0RZM1l6TmhO
VE5tWkRWbE5XSTJaR0ZqTlRrNU1qSmtZbVUKCiAgW2Rvd25sb2FkLWltZ106
IGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vZ2l0aHViL2Rvd25sb2Fkcy9zcWxp
dGVicm93c2VyL3NxbGl0ZWJyb3dzZXIvdG90YWwuc3ZnCiAgW2Rvd25sb2Fk
XTogaHR0cHM6Ly9naXRodWIuY29tL3NxbGl0ZWJyb3dzZXIvc3FsaXRlYnJv
d3Nlci9yZWxlYXNlcwoKICBbcXQtaW1nXTogaHR0cHM6Ly9pbWcuc2hpZWxk
cy5pby9iYWRnZS9RdC1xbWFrZS1ncmVlbi5zdmcKICBbcXRdOiBodHRwczov
L3d3dy5xdC5pbwoKICBbY292ZXJpdHktaW1nXTogaHR0cHM6Ly9pbWcuc2hp
ZWxkcy5pby9jb3Zlcml0eS9zY2FuLzExNzEyLnN2ZwogIFtjb3Zlcml0eV06
IGh0dHBzOi8vc2Nhbi5jb3Zlcml0eS5jb20vcHJvamVjdHMvc3FsaXRlYnJv
d3Nlci1zcWxpdGVicm93c2VyCgogIFtwYXRyZW9uLWltZ106IGh0dHBzOi8v
aW1nLnNoaWVsZHMuaW8vYmFkZ2UvZG9uYXRlLVBhdHJlb24tY29yYWwuc3Zn
CiAgW3BhdHJlb25dOiBodHRwczovL3d3dy5wYXRyZW9uLmNvbS9iZVBhdHJv
bj91PTExNTc4NzQ5CgogIFt3aWtpLWltZ106IGh0dHBzOi8vaW1nLnNoaWVs
ZHMuaW8vYmFkZ2UvZG9jcy1XaWtpLWJsdWUuc3ZnCiAgW3dpa2ldOiBodHRw
czovL2dpdGh1Yi5jb20vc3FsaXRlYnJvd3Nlci9zcWxpdGVicm93c2VyL3dp
a2kK
",,12215,"bGFuZ3VhZ2U6IGNwcApzdWRvOiByZXF1aXJlZApkaXN0OiB4ZW5pYWwKCmJy
YW5jaGVzOgogIG9ubHk6CiAgLSBtYXN0ZXIKCiMgZW52OgojICAgLSBBUkNI
PXg4Nl82NCBET0NLRVJfSU1BR0U9YW1kNjQvdWJ1bnR1OnRydXN0eQojICAg
LSBBUkNIPWk2ODYgRE9DS0VSX0lNQUdFPWkzODYvdWJ1bnR1OnRydXN0eQoK
bWF0cml4OgogIGZhc3RfZmluaXNoOiB0cnVlCiAgaW5jbHVkZToKICAtIGNv
bXBpbGVyOiBnY2MKICAgIGFkZG9uczoKICAgICAgYXB0OgogICAgICAgIHNv
dXJjZXM6CiAgICAgICAgLSB1YnVudHUtdG9vbGNoYWluLXItdGVzdAogICAg
ICAgIHBhY2thZ2VzOgogICAgICAgIC0gZysrLTUKICAgIGVudjogQ09NUElM
RVI9ZysrLTUgQ1hYPWcrKy01CiAgLSBjb21waWxlcjogY2xhbmcKICAgIGFk
ZG9uczoKICAgICAgYXB0OgogICAgICAgIHNvdXJjZXM6CiAgICAgICAgLSB1
YnVudHUtdG9vbGNoYWluLXItdGVzdAogICAgICAgIC0gbGx2bS10b29sY2hh
aW4tcHJlY2lzZS0zLjgKICAgICAgICBwYWNrYWdlczoKICAgICAgICAtIGNs
YW5nLTMuOAogICAgZW52OiBDT01QSUxFUj1jbGFuZysrLTMuOAoKYmVmb3Jl
X2luc3RhbGw6Ci0gc3VkbyBhcHQtZ2V0IHVwZGF0ZSAtcXEKLSBzdWRvIGFw
dC1nZXQgLS1mb3JjZS15ZXMgaW5zdGFsbCBidWlsZC1lc3NlbnRpYWwgZ2l0
LWNvcmUgY21ha2UgbGlic3FsaXRlMy1kZXYgcXQ1LWRlZmF1bHQgcXR0b29s
czUtZGV2LXRvb2xzIGxpYnNxbGNpcGhlci1kZXYgcXRiYXNlNS1kZXYgbGli
cXQ1c2NpbnRpbGxhMi1kZXYgbGlicWN1c3RvbXBsb3QtZGV2IHF0dG9vbHM1
LWRldgoKCmluc3RhbGw6Ci0gaWYgWyAiJENYWCIgPSAiZysrIiBdOyB0aGVu
IGV4cG9ydCBDWFg9ImcrKy01IiBDQz0iZ2NjLTUiOyBmaQotIGlmIFsgIiRD
WFgiID0gImNsYW5nKysiIF07IHRoZW4gZXhwb3J0IENYWD0iY2xhbmcrKy0z
LjgiIENDPSJjbGFuZy0zLjgiOyBmaQoKc2NyaXB0OgotIG1rZGlyIGJ1aWxk
Ci0gbWtkaXIgYnVpbGRfY2lwaGVyCi0gbWtkaXIgYXBwYnVpbGQKLSBta2Rp
ciBhcHBkaXIKLSBjZCBidWlsZAotIGNtYWtlIC1EQ01BS0VfSU5TVEFMTF9Q
UkVGSVg6UEFUSD0vdXNyIC1ERU5BQkxFX1RFU1RJTkc9T04gLi4KLSBtYWtl
Ci0gY3Rlc3QgLVYKLSBjZCAuLi9idWlsZF9jaXBoZXIKLSBjbWFrZSAtRENN
QUtFX0lOU1RBTExfUFJFRklYOlBBVEg9L3VzciAtREVOQUJMRV9URVNUSU5H
PU9OIC1Ec3FsY2lwaGVyPTEgLi4KLSBtYWtlCi0gY3Rlc3QgLVYKLSBjZCAu
Li9hcHBidWlsZAotIGNtYWtlIC1EQ01BS0VfSU5TVEFMTF9QUkVGSVg6UEFU
SD0uLi9hcHBkaXIvdXNyIC1Xbm8tZGV2IC1Ec3FsY2lwaGVyPTEgLURTUUxJ
VEVfRU5BQkxFX0pTT04xPTEgLi4KLSBtYWtlIGluc3RhbGwKLSBjZCAuLgot
IGdpdCByZXYtbGlzdCBtYXN0ZXIgLS1jb3VudAotIHdnZXQgLWMgLW52ICJo
dHRwczovL2dpdGh1Yi5jb20vcHJvYm9ub3BkL2xpbnV4ZGVwbG95cXQvcmVs
ZWFzZXMvZG93bmxvYWQvNi9saW51eGRlcGxveXF0LTYteDg2XzY0LkFwcElt
YWdlIgotIGNobW9kIGEreCBsaW51eGRlcGxveXF0LTYteDg2XzY0LkFwcElt
YWdlCi0gZXhwb3J0IFZFUlNJT049JChwcmludGYgImBtYXN0ZXJgLWBnaXQg
cmV2LWxpc3QgSEVBRCAtLWNvdW50YC1gIGdpdCAtQyAuIHJldi1wYXJzZSAt
LXNob3J0IEhFQURgIikgICAgIyQoZ2l0IHJldi1wYXJzZSAtLXNob3J0IEhF
QUQpICMgbGludXhkZXBsb3lxdCB1c2VzIHRoaXMgZm9yIG5hbWluZyB0aGUg
ZmlsZQotIC4vbGludXhkZXBsb3lxdC02LXg4Nl82NC5BcHBJbWFnZSBhcHBk
aXIvdXNyL3NoYXJlL2FwcGxpY2F0aW9ucy8qLmRlc2t0b3AgLWFwcGltYWdl
CgoKYWZ0ZXJfc3VjY2VzczoKICAtIGZpbmQgYXBwZGlyIC1leGVjdXRhYmxl
IC10eXBlIGYgLWV4ZWMgbGRkIHt9IFw7IHwgZ3JlcCAiID0+IC91c3IiIHwg
Y3V0IC1kICIgIiAtZiAyLTMgfCBzb3J0IHwgdW5pcQogIC0gd2dldCAtYyBo
dHRwczovL2dpdGh1Yi5jb20vcHJvYm9ub3BkL3VwbG9hZHRvb2wvcmF3L21h
c3Rlci91cGxvYWQuc2gKICAtIGJhc2ggdXBsb2FkLnNoIERCX0Jyb3dzZXJf
Zm9yX1NRTGl0ZSouQXBwSW1hZ2UqCgpub3RpZmljYXRpb25zOgogIGVtYWls
OgogICByZWNpcGllbnRzOgogICAtIG1rbGV1c2JlcmdAZ21haWwuY29tCiAg
IC0gaW5uZXJtb3VzQGdtYWlsLmNvbQogICAtIGp1c3RpbkBwb3N0Z3Jlc3Fs
Lm9yZwogICAtIG1ncm9qb0BnbWFpbC5jb20KICAgb25fc3VjY2VzczogbmV2
ZXIKICAgb25fZmFpbHVyZTogYWx3YXlzCiAgc2xhY2s6CiAgIHNlY3VyZTog
YXg1YnU3eVNGK3dsRzBwQ21RcXl6dmF1cnpRdDJ5TG5wL3U0S2FqeUZDZ1da
S093Y3ZFbG5kamh2VzhiSVJOZ1dyR1A4VFZQa29zSGh3R3VjRlFOakpxNWhI
SklidVB6ZkJUSWJJVENWYktKTlJxZXFMMFFYbEtMd01UZWpYOUFVWXd6ekoz
eFRUajhyWm4vVU1vY3NpQ3k3dVB1SzF2LzVCaFpmRXIzQkJVPQo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'react-canvas',30384844,b'High performance <canvas> rendering for React components',b'JavaScript',77,12214,,423,False,b'https://api.github.com/repos/Flipboard/react-canvas/forks',"IyByZWFjdC1jYW52YXMKCltJbnRyb2R1Y3RvcnkgYmxvZyBwb3N0XShodHRw
Oi8vZW5naW5lZXJpbmcuZmxpcGJvYXJkLmNvbS8yMDE1LzAyL21vYmlsZS13
ZWIpCgpSZWFjdCBDYW52YXMgYWRkcyB0aGUgYWJpbGl0eSBmb3IgUmVhY3Qg
Y29tcG9uZW50cyB0byByZW5kZXIgdG8gYDxjYW52YXM+YCByYXRoZXIgdGhh
biBET00uCgpUaGlzIHByb2plY3QgaXMgYSB3b3JrLWluLXByb2dyZXNzLiBU
aG91Z2ggbXVjaCBvZiB0aGUgY29kZSBpcyBpbiBwcm9kdWN0aW9uIG9uIGZs
aXBib2FyZC5jb20sIHRoZSBSZWFjdCBjYW52YXMgYmluZGluZ3MgYXJlIHJl
bGF0aXZlbHkgbmV3IGFuZCB0aGUgQVBJIGlzIHN1YmplY3QgdG8gY2hhbmdl
LgoKIyMgTW90aXZhdGlvbgoKSGF2aW5nIGEgbG9uZyBoaXN0b3J5IG9mIGJ1
aWxkaW5nIGludGVyZmFjZXMgZ2VhcmVkIHRvd2FyZCBtb2JpbGUgZGV2aWNl
cywgd2UgZm91bmQgdGhhdCB0aGUgcmVhc29uIG1vYmlsZSB3ZWIgYXBwcyBm
ZWVsIHNsb3cgd2hlbiBjb21wYXJlZCB0byBuYXRpdmUgYXBwcyBpcyB0aGUg
RE9NLiBDU1MgYW5pbWF0aW9ucyBhbmQgdHJhbnNpdGlvbnMgYXJlIHRoZSBm
YXN0ZXN0IHBhdGggdG8gc21vb3RoIGFuaW1hdGlvbnMgb24gdGhlIHdlYiwg
YnV0IHRoZXkgaGF2ZSBzZXZlcmFsIGxpbWl0YXRpb25zLiBSZWFjdCBDYW52
YXMgbGV2ZXJhZ2VzIHRoZSBmYWN0IHRoYXQgbW9zdCBtb2Rlcm4gbW9iaWxl
IGJyb3dzZXJzIG5vdyBoYXZlIGhhcmR3YXJlIGFjY2VsZXJhdGVkIGNhbnZh
cy4KCldoaWxlIHRoZXJlIGhhdmUgYmVlbiBvdGhlciBhdHRlbXB0cyB0byBi
aW5kIGNhbnZhcyBkcmF3aW5nIEFQSXMgdG8gUmVhY3QsIHRoZXkgYXJlIG1v
cmUgZm9jdXNlZCBvbiB2aXN1YWxpemF0aW9ucyBhbmQgZ2FtZXMuIFdoZXJl
IFJlYWN0IENhbnZhcyBkaWZmZXJzIGlzIGluIHRoZSBmb2N1cyBvbiBidWls
ZGluZyBhcHBsaWNhdGlvbiB1c2VyIGludGVyZmFjZXMuIFRoZSBmYWN0IHRo
YXQgaXQgcmVuZGVycyB0byBjYW52YXMgaXMgYW4gaW1wbGVtZW50YXRpb24g
ZGV0YWlsLgoKUmVhY3QgQ2FudmFzIGJyaW5ncyBzb21lIG9mIHRoZSBBUElz
IHdlYiBkZXZlbG9wZXJzIGFyZSBmYW1pbGlhciB3aXRoIGFuZCBibGVuZHMg
dGhlbSB3aXRoIGEgaGlnaCBwZXJmb3JtYW5jZSBkcmF3aW5nIGVuZ2luZS4K
CiMjIEluc3RhbGxhdGlvbgoKUmVhY3QgQ2FudmFzIGlzIGF2YWlsYWJsZSB0
aHJvdWdoIG5wbToKCmBgYG5wbSBpbnN0YWxsIHJlYWN0LWNhbnZhc2BgYAoK
IyMgUmVhY3QgQ2FudmFzIENvbXBvbmVudHMKClJlYWN0IENhbnZhcyBwcm92
aWRlcyBhIHNldCBvZiBzdGFuZGFyZCBSZWFjdCBjb21wb25lbnRzIHRoYXQg
YWJzdHJhY3QgdGhlIHVuZGVybHlpbmcgcmVuZGVyaW5nIGltcGxlbWVudGF0
aW9uLgoKIyMjICZsdDtTdXJmYWNlJmd0OwoKKipTdXJmYWNlKiogaXMgdGhl
IHRvcC1sZXZlbCBjb21wb25lbnQuIFRoaW5rIG9mIGl0IGFzIGEgZHJhd2lu
ZyBjYW52YXMgaW4gd2hpY2ggeW91IGNhbiBwbGFjZSBvdGhlciBjb21wb25l
bnRzLgoKIyMjICZsdDtMYXllciZndDsKCioqTGF5ZXIqKiBpcyB0aGUgdGhl
IGJhc2UgY29tcG9uZW50IGJ5IHdoaWNoIG90aGVyIGNvbXBvbmVudHMgYnVp
bGQgdXBvbi4gQ29tbW9uIHN0eWxlcyBhbmQgcHJvcGVydGllcyBzdWNoIGFz
IHRvcCwgd2lkdGgsIGxlZnQsIGhlaWdodCwgYmFja2dyb3VuZENvbG9yIGFu
ZCB6SW5kZXggYXJlIGV4cHJlc3NlZCBhdCB0aGlzIGxldmVsLgoKIyMjICZs
dDtHcm91cCZndDsKCioqR3JvdXAqKiBpcyBhIGNvbnRhaW5lciBjb21wb25l
bnQuIEJlY2F1c2UgUmVhY3QgZW5mb3JjZXMgdGhhdCBhbGwgY29tcG9uZW50
cyByZXR1cm4gYSBzaW5nbGUgY29tcG9uZW50IGluIGByZW5kZXIoKWAsIEdy
b3VwcyBjYW4gYmUgdXNlZnVsIGZvciBwYXJlbnRpbmcgYSBzZXQgb2YgY2hp
bGQgY29tcG9uZW50cy4gVGhlIEdyb3VwIGlzIGFsc28gYW4gaW1wb3J0YW50
IGNvbXBvbmVudCBmb3Igb3B0aW1pemluZyBzY3JvbGxpbmcgcGVyZm9ybWFu
Y2UsIGFzIGl0IGFsbG93cyB0aGUgcmVuZGVyaW5nIGVuZ2luZSB0byBjYWNo
ZSBleHBlbnNpdmUgZHJhd2luZyBvcGVyYXRpb25zLgoKIyMjICZsdDtUZXh0
Jmd0OwoKKipUZXh0KiogaXMgYSBmbGV4aWJsZSBjb21wb25lbnQgdGhhdCBz
dXBwb3J0cyBtdWx0aS1saW5lIHRydW5jYXRpb24sIHNvbWV0aGluZyB3aGlj
aCBoYXMgaGlzdG9yaWNhbGx5IGJlZW4gZGlmZmljdWx0IGFuZCB2ZXJ5IGV4
cGVuc2l2ZSB0byBkbyBpbiBET00uCgojIyMgJmx0O0ltYWdlJmd0OwoKKipJ
bWFnZSoqIGlzIGV4YWN0bHkgd2hhdCB5b3UgdGhpbmsgaXQgaXMuIEhvd2V2
ZXIsIGl0IGFkZHMgdGhlIGFiaWxpdHkgdG8gaGlkZSBhbiBpbWFnZSB1bnRp
bCBpdCBpcyBmdWxseSBsb2FkZWQgYW5kIG9wdGlvbmFsbHkgZmFkZSBpdCBp
biBvbiBsb2FkLgoKIyMjICZsdDtHcmFkaWVudCZndDsKCioqR3JhZGllbnQq
KiBjYW4gYmUgdXNlZCB0byBzZXQgdGhlIGJhY2tncm91bmQgb2YgYSBncm91
cCBvciBzdXJmYWNlLiAKYGBgamF2YXNjcmlwdAogIHJlbmRlcigpIHsKICAg
IC4uLgogICAgcmV0dXJuICgKICAgICAgPEdyb3VwIHN0eWxlPXt0aGlzLmdl
dFN0eWxlKCl9PgogICAgICAgIDxHcmFkaWVudCBzdHlsZT17dGhpcy5nZXRH
cmFkaWVudFN0eWxlKCl9IAogICAgICAgICAgICAgICAgICBjb2xvclN0b3Bz
PXt0aGlzLmdldEdyYWRpZW50Q29sb3JzKCl9IC8+CiAgICAgIDwvR3JvdXA+
CiAgICApOwogIH0KICBnZXRHcmFkaWVudENvbG9ycygpewogICAgcmV0dXJu
IFsKICAgICAgeyBjb2xvcjogInRyYW5zcGFyZW50IiwgcG9zaXRpb246IDAg
fSwKICAgICAgeyBjb2xvcjogIiMwMDAiLCBwb3NpdGlvbjogMSB9CiAgICBd
CiAgfQpgYGAgCgojIyMgJmx0O0xpc3RWaWV3Jmd0OwoKKipMaXN0Vmlldyoq
IGlzIGEgdG91Y2ggc2Nyb2xsaW5nIGNvbnRhaW5lciB0aGF0IHJlbmRlcnMg
YSBsaXN0IG9mIGVsZW1lbnRzIGluIGEgY29sdW1uLiBUaGluayBvZiBpdCBs
aWtlIFVJVGFibGVWaWV3IGZvciB0aGUgd2ViLiBJdCBsZXZlcmFnZXMgbWFu
eSBvZiB0aGUgc2FtZSBvcHRpbWl6YXRpb25zIHRoYXQgbWFrZSB0YWJsZSB2
aWV3cyBvbiBpT1MgYW5kIGxpc3Qgdmlld3Mgb24gQW5kcm9pZCBmYXN0LgoK
IyMgRXZlbnRzCgpSZWFjdCBDYW52YXMgY29tcG9uZW50cyBzdXBwb3J0IHRo
ZSBzYW1lIGV2ZW50IG1vZGVsIGFzIG5vcm1hbCBSZWFjdCBjb21wb25lbnRz
LiBIb3dldmVyLCBub3QgYWxsIGV2ZW50IHR5cGVzIGFyZSBjdXJyZW50bHkg
c3VwcG9ydGVkLgoKRm9yIGEgZnVsbCBsaXN0IG9mIHN1cHBvcnRlZCBldmVu
dHMgc2VlIFtFdmVudFR5cGVzXShsaWIvRXZlbnRUeXBlcy5qcykuCgojIyBC
dWlsZGluZyBDb21wb25lbnRzCgpIZXJlIGlzIGEgdmVyeSBzaW1wbGUgY29t
cG9uZW50IHRoYXQgcmVuZGVycyB0ZXh0IGJlbG93IGFuIGltYWdlOgoKYGBg
amF2YXNjcmlwdAp2YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpOwp2YXIg
UmVhY3RDYW52YXMgPSByZXF1aXJlKCdyZWFjdC1jYW52YXMnKTsKCnZhciBT
dXJmYWNlID0gUmVhY3RDYW52YXMuU3VyZmFjZTsKdmFyIEltYWdlID0gUmVh
Y3RDYW52YXMuSW1hZ2U7CnZhciBUZXh0ID0gUmVhY3RDYW52YXMuVGV4dDsK
CnZhciBNeUNvbXBvbmVudCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHsKCiAgcmVu
ZGVyOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgc3VyZmFjZVdpZHRoID0gd2lu
ZG93LmlubmVyV2lkdGg7CiAgICB2YXIgc3VyZmFjZUhlaWdodCA9IHdpbmRv
dy5pbm5lckhlaWdodDsKICAgIHZhciBpbWFnZVN0eWxlID0gdGhpcy5nZXRJ
bWFnZVN0eWxlKCk7CiAgICB2YXIgdGV4dFN0eWxlID0gdGhpcy5nZXRUZXh0
U3R5bGUoKTsKCiAgICByZXR1cm4gKAogICAgICA8U3VyZmFjZSB3aWR0aD17
c3VyZmFjZVdpZHRofSBoZWlnaHQ9e3N1cmZhY2VIZWlnaHR9IGxlZnQ9ezB9
IHRvcD17MH0+CiAgICAgICAgPEltYWdlIHN0eWxlPXtpbWFnZVN0eWxlfSBz
cmM9Jy4uLicgLz4KICAgICAgICA8VGV4dCBzdHlsZT17dGV4dFN0eWxlfT4K
ICAgICAgICAgIEhlcmUgaXMgc29tZSB0ZXh0IGJlbG93IGFuIGltYWdlLgog
ICAgICAgIDwvVGV4dD4KICAgICAgPC9TdXJmYWNlPgogICAgKTsKICB9LAoK
ICBnZXRJbWFnZUhlaWdodDogZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIE1h
dGgucm91bmQod2luZG93LmlubmVySGVpZ2h0IC8gMik7CiAgfSwKCiAgZ2V0
SW1hZ2VTdHlsZTogZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHsKICAgICAg
dG9wOiAwLAogICAgICBsZWZ0OiAwLAogICAgICB3aWR0aDogd2luZG93Lmlu
bmVyV2lkdGgsCiAgICAgIGhlaWdodDogdGhpcy5nZXRJbWFnZUhlaWdodCgp
CiAgICB9OwogIH0sCgogIGdldFRleHRTdHlsZTogZnVuY3Rpb24gKCkgewog
ICAgcmV0dXJuIHsKICAgICAgdG9wOiB0aGlzLmdldEltYWdlSGVpZ2h0KCkg
KyAxMCwKICAgICAgbGVmdDogMCwKICAgICAgd2lkdGg6IHdpbmRvdy5pbm5l
cldpZHRoLAogICAgICBoZWlnaHQ6IDIwLAogICAgICBsaW5lSGVpZ2h0OiAy
MCwKICAgICAgZm9udFNpemU6IDEyCiAgICB9OwogIH0KCn0pOwpgYGAKCiMj
IExpc3RWaWV3CgpNYW55IG1vYmlsZSBpbnRlcmZhY2VzIGludm9sdmUgYW4g
aW5maW5pdGVseSBsb25nIHNjcm9sbGluZyBsaXN0IG9mIGl0ZW1zLiBSZWFj
dCBDYW52YXMgcHJvdmlkZXMgdGhlIExpc3RWaWV3IGNvbXBvbmVudCB0byBk
byBqdXN0IHRoYXQuCgpCZWNhdXNlIExpc3RWaWV3IHZpcnR1YWxpemVzIGVs
ZW1lbnRzIG91dHNpZGUgb2YgdGhlIHZpZXdwb3J0LCBwYXNzaW5nIGNoaWxk
cmVuIHRvIGl0IGlzIGRpZmZlcmVudCB0aGFuIGEgbm9ybWFsIFJlYWN0IGNv
bXBvbmVudCB3aGVyZSBjaGlsZHJlbiBhcmUgZGVjbGFyZWQgaW4gcmVuZGVy
KCkuCgpUaGUgYG51bWJlck9mSXRlbXNHZXR0ZXJgLCBgaXRlbUhlaWdodEdl
dHRlcmAgYW5kIGBpdGVtR2V0dGVyYCBwcm9wcyBhcmUgYWxsIHJlcXVpcmVk
LgoKYGBgamF2YXNjcmlwdAp2YXIgTGlzdFZpZXcgPSBSZWFjdENhbnZhcy5M
aXN0VmlldzsKCnZhciBNeVNjcm9sbGluZ0xpc3RWaWV3ID0gUmVhY3QuY3Jl
YXRlQ2xhc3MoewoKICByZW5kZXI6IGZ1bmN0aW9uICgpIHsKICAgIHJldHVy
biAoCiAgICAgIDxMaXN0VmlldwogICAgICAgIG51bWJlck9mSXRlbXNHZXR0
ZXI9e3RoaXMuZ2V0TnVtYmVyT2ZJdGVtc30KICAgICAgICBpdGVtSGVpZ2h0
R2V0dGVyPXt0aGlzLmdldEl0ZW1IZWlnaHR9CiAgICAgICAgaXRlbUdldHRl
cj17dGhpcy5yZW5kZXJJdGVtfSAvPgogICAgKTsKICB9LAoKICBnZXROdW1i
ZXJPZkl0ZW1zOiBmdW5jdGlvbiAoKSB7CiAgICAvLyBSZXR1cm4gdGhlIHRv
dGFsIG51bWJlciBvZiBpdGVtcyBpbiB0aGUgbGlzdAogIH0sCgogIGdldEl0
ZW1IZWlnaHQ6IGZ1bmN0aW9uICgpIHsKICAgIC8vIFJldHVybiB0aGUgaGVp
Z2h0IG9mIGEgc2luZ2xlIGl0ZW0KICB9LAoKICByZW5kZXJJdGVtOiBmdW5j
dGlvbiAoaW5kZXgpIHsKICAgIC8vIFJlbmRlciB0aGUgaXRlbSBhdCB0aGUg
Z2l2ZW4gaW5kZXgsIHVzdWFsbHkgYSA8R3JvdXA+CiAgfSwKCn0pOwpgYGAK
ClNlZSB0aGUgW3RpbWVsaW5lIGV4YW1wbGVdKGV4YW1wbGVzL3RpbWVsaW5l
L2FwcC5qcykgZm9yIGEgbW9yZSBjb21wbGV0ZSBleGFtcGxlLgoKQ3VycmVu
dGx5LCBMaXN0VmlldyByZXF1aXJlcyB0aGF0IGVhY2ggaXRlbSBpcyBvZiB0
aGUgc2FtZSBoZWlnaHQuIEZ1dHVyZSB2ZXJzaW9ucyB3aWxsIHN1cHBvcnQg
dmFyaWFibGUgaGVpZ2h0IGl0ZW1zLgoKIyMgVGV4dCBzaXppbmcKClJlYWN0
IENhbnZhcyBwcm92aWRlcyB0aGUgYG1lYXN1cmVUZXh0YCBmdW5jdGlvbiBm
b3IgY29tcHV0aW5nIHRleHQgbWV0cmljcy4KClRoZSBbUGFnZSBjb21wb25l
bnRdKGV4YW1wbGVzL3RpbWVsaW5lL2NvbXBvbmVudHMvUGFnZS5qcykgaW4g
dGhlIHRpbWVsaW5lIGV4YW1wbGUgY29udGFpbnMgYW4gZXhhbXBsZSBvZiB1
c2luZyBtZWFzdXJlVGV4dCB0byBhY2hpZXZlIHByZWNpc2UgbXVsdGktbGlu
ZSBlbGxpcHNpemVkIHRleHQuCgpDdXN0b20gZm9udHMgYXJlIG5vdCBjdXJy
ZW50bHkgc3VwcG9ydGVkIGJ1dCB3aWxsIGJlIGFkZGVkIGluIGEgZnV0dXJl
IHZlcnNpb24uCgojIyBjc3MtbGF5b3V0CgpUaGVyZSBpcyBleHBlcmltZW50
YWwgc3VwcG9ydCBmb3IgdXNpbmcgW2Nzcy1sYXlvdXRdKGh0dHBzOi8vZ2l0
aHViLmNvbS9mYWNlYm9vay9jc3MtbGF5b3V0KSB0byBzdHlsZSBSZWFjdCBD
YW52YXMgY29tcG9uZW50cy4gVGhpcyBpcyBhIG1vcmUgZXhwcmVzc2l2ZSB3
YXkgb2YgZGVmaW5pbmcgc3R5bGVzIGZvciBhIGNvbXBvbmVudCB1c2luZyBz
dGFuZGFyZCBDU1Mgc3R5bGVzIGFuZCBmbGV4Ym94LgoKRnV0dXJlIHZlcnNp
b25zIG1heSBub3Qgc3VwcG9ydCBjc3MtbGF5b3V0IG91dCBvZiB0aGUgYm94
LiBUaGUgcGVyZm9ybWFuY2UgaW1wbGljYXRpb25zIG5lZWQgdG8gYmUgaW52
ZXN0aWdhdGVkIGJlZm9yZSBiYWtpbmcgdGhpcyBpbiBhcyBhIGNvcmUgbGF5
b3V0IHByaW5jaXBsZS4KClNlZSB0aGUgW2Nzcy1sYXlvdXQgZXhhbXBsZV0o
ZXhhbXBsZXMvY3NzLWxheW91dCkuCgojIyBBY2Nlc3NpYmlsaXR5CgpUaGlz
IGFyZWEgbmVlZHMgZnVydGhlciBleHBsb3JhdGlvbi4gVXNpbmcgZmFsbGJh
Y2sgY29udGVudCAodGhlIGNhbnZhcyBET00gc3ViLXRyZWUpIHNob3VsZCBh
bGxvdyBzY3JlZW4gcmVhZGVycyBzdWNoIGFzIFZvaWNlT3ZlciB0byBpbnRl
cmFjdCB3aXRoIHRoZSBjb250ZW50LiBXZSd2ZSBzZWVuIG1peGVkIHJlc3Vs
dHMgd2l0aCB0aGUgaU9TIGRldmljZXMgd2UndmUgdGVzdGVkLiBBZGRpdGlv
bmFsbHkgdGhlcmUgaXMgYSBzdGFuZGFyZCBmb3IgW2ZvY3VzIG1hbmFnZW1l
bnRdKGh0dHA6Ly93d3cudzMub3JnL1RSLzIwMTAvV0QtMmRjb250ZXh0LTIw
MTAwMzA0LyNkb20tY29udGV4dC0yZC1kcmF3Zm9jdXNyaW5nKSB0aGF0IGlz
IG5vdCBzdXBwb3J0ZWQgYnkgYnJvd3NlcnMgeWV0LgoKT25lIGFwcHJvYWNo
IHRoYXQgd2FzIHJhaXNlZCBieSBbQmVzcGluXShodHRwOi8vdmltZW8uY29t
LzMxOTUwNzkpIGluIDIwMDkgaXMgdG8ga2VlcCBhIFtwYXJhbGxlbCBET01d
KGh0dHA6Ly9yb2JlcnRueW1hbi5jb20vMjAwOS8wNC8wMy9tb3ppbGxhLWxh
YnMtb25saW5lLWNvZGUtZWRpdG9yLWJlc3Bpbi8jY29tbWVudC01NjAzMTAp
IGluIHN5bmMgd2l0aCB0aGUgZWxlbWVudHMgcmVuZGVyZWQgaW4gY2FudmFz
LgoKIyMgUnVubmluZyB0aGUgZXhhbXBsZXMKCmBgYApucG0gaW5zdGFsbApu
cG0gc3RhcnQKYGBgCgpUaGlzIHdpbGwgc3RhcnQgYSBsaXZlIHJlbG9hZGlu
ZyBzZXJ2ZXIgb24gcG9ydCA4MDgwLiBUbyBvdmVycmlkZSB0aGUgZGVmYXVs
dCBzZXJ2ZXIgYW5kIGxpdmUgcmVsb2FkIHBvcnRzLCBydW4gYG5wbSBzdGFy
dGAgd2l0aCBQT1JUIGFuZC9vciBSRUxPQURfUE9SVCBlbnZpcm9ubWVudCB2
YXJpYWJsZXMuCgoqKkEgbm90ZSBvbiBOT0RFX0VOViBhbmQgUmVhY3QqKjog
cnVubmluZyB0aGUgZXhhbXBsZXMgd2l0aCBgTk9ERV9FTlY9cHJvZHVjdGlv
bmAgd2lsbCBub3RpY2VhYmx5IGltcHJvdmUgc2Nyb2xsaW5nIHBlcmZvcm1h
bmNlLiBUaGlzIGlzIGJlY2F1c2UgUmVhY3Qgc2tpcHMgcHJvcFR5cGUgdmFs
aWRhdGlvbiBpbiBwcm9kdWN0aW9uIG1vZGUuCgoKIyMgVXNpbmcgd2l0aCB3
ZWJwYWNrCgpUaGUgW2JyZnNdKGh0dHBzOi8vZ2l0aHViLmNvbS9zdWJzdGFj
ay9icmZzKSB0cmFuc2Zvcm0gaXMgcmVxdWlyZWQgaW4gb3JkZXIgdG8gdXNl
IHRoZSBwcm9qZWN0IHdpdGggd2VicGFjay4KCmBgYGJhc2gKbnBtIGluc3Rh
bGwgLWcgYnJmcwpucG0gaW5zdGFsbCAtLXNhdmUtZGV2IHRyYW5zZm9ybS1s
b2FkZXIgYnJmcwpgYGAKClRoZW4gYWRkIHRoZSBbYnJmc10oaHR0cHM6Ly9n
aXRodWIuY29tL3N1YnN0YWNrL2JyZnMpIHRyYW5zZm9ybSB0byB5b3VyIHdl
YnBhY2sgY29uZmlnCgpgYGBqYXZhc2NyaXB0Cm1vZHVsZTogewogIHBvc3RM
b2FkZXJzOiBbCiAgICB7IGxvYWRlcjogInRyYW5zZm9ybT9icmZzIiB9CiAg
XQp9CmBgYAoKIyMgQ29udHJpYnV0aW5nCgpXZSB3ZWxjb21lIHB1bGwgcmVx
dWVzdHMgZm9yIGJ1ZyBmaXhlcywgbmV3IGZlYXR1cmVzLCBhbmQgaW1wcm92
ZW1lbnRzIHRvIFJlYWN0IENhbnZhcy4gQ29udHJpYnV0b3JzIHRvIHRoZSBt
YWluIHJlcG9zaXRvcnkgbXVzdCBhY2NlcHQgRmxpcGJvYXJkJ3MgQXBhY2hl
LXN0eWxlIFtJbmRpdmlkdWFsIENvbnRyaWJ1dG9yIExpY2Vuc2UgQWdyZWVt
ZW50IChDTEEpXShodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9mb3Jtcy9kLzFn
aDl5Nl9pOHhGbjZwQTE1UHFGZXllMTlWcWFzdUk5LWJHcF9lMG93eTc0L3Zp
ZXdmb3JtKSBiZWZvcmUgYW55IGNoYW5nZXMgY2FuIGJlIG1lcmdlZC4K
",,12214,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
