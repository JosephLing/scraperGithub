name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'Front-End-Checklist',107111421,b'\xf0\x9f\x97\x82 The perfect Front-End Checklist for modern websites and meticulous developers',b'JavaScript',17,36817,,1090,False,b'https://api.github.com/repos/thedaviddias/Front-End-Checklist/forks',"PGgxIGFsaWduPSJjZW50ZXIiPgo8YnI+CiAgPGltZyBzcmM9Imh0dHBzOi8v
cmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS90aGVkYXZpZGRpYXMvRnJvbnQt
RW5kLUNoZWNrbGlzdC9tYXN0ZXIvc3JjL2ltZy9iYW5uZXJzL2xvZ28tZnJv
bnQtZW5kLWNoZWNrbGlzdC5qcGciIGFsdD0iRnJvbnQtRW5kIENoZWNrbGlz
dCIgd2lkdGg9IjE3MCI+CiAgPGJyPgogICAgPGJyPgrCoCBGcm9udC1FbmQg
Q2hlY2tsaXN0CsKgIDxicj4KPC9oMT4KCjxoNCBhbGlnbj0iY2VudGVyIj5U
aGUgRnJvbnQtRW5kIENoZWNrbGlzdCBpcyBhbiBleGhhdXN0aXZlIGxpc3Qg
b2YgYWxsIGVsZW1lbnRzIHlvdSBuZWVkIHRvIGhhdmUgLyB0byB0ZXN0IGJl
Zm9yZSBsYXVuY2hpbmcgeW91ciB3ZWJzaXRlIC8gSFRNTCBwYWdlIHRvIHBy
b2R1Y3Rpb24uPC9oND4KCjxwIGFsaWduPSJjZW50ZXIiPgrCoCA8YSBocmVm
PSJodHRwOi8vbWFrZWFwdWxscmVxdWVzdC5jb20iPgrCoMKgwqAgPGltZyBz
cmM9Imh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvUFJzLXdlbGNvbWUt
YnJpZ2h0Z3JlZW4uc3ZnP3N0eWxlPWZsYXQtc3F1YXJlIiBhbHQ9IlBScyBX
ZWxjb21lIj4KwqAgPC9hPgrCoCDCoCA8YSBocmVmPSJodHRwczovL2dpdGh1
Yi5jb20vdGhlZGF2aWRkaWFzL0Zyb250LUVuZC1DaGVja2xpc3QvZ3JhcGhz
L2NvbnRyaWJ1dG9ycyI+CsKgwqDCoCA8aW1nIHNyYz0iaHR0cHM6Ly9pbWcu
c2hpZWxkcy5pby9naXRodWIvY29udHJpYnV0b3JzL3RoZWRhdmlkZGlhcy9G
cm9udC1FbmQtQ2hlY2tsaXN0LnN2Zz9zdHlsZT1mbGF0LXNxdWFyZSIgYWx0
PSJDb250cmlidXRvcnMiPgrCoCA8L2E+CsKgIDxhIGhyZWY9Imh0dHBzOi8v
c3BlY3RydW0uY2hhdC9mcm9udC1lbmQtY2hlY2tsaXN0Ij4KwqDCoMKgIDxp
bWcgc3JjPSJodHRwczovL2ltZy5zaGllbGRzLmlvL2JhZGdlL2NoYXQtb25f
c3BlY3RydW0tNDgzN0UyLnN2Zz9zdHlsZT1mbGF0LXNxdWFyZSIgYWx0PSJT
cGVjdHJ1bSI+CsKgIDwvYT4KwqAgwqAgwqAgPGEgaHJlZj0iaHR0cHM6Ly9n
aXRodWIuY29tL3RoZWRhdmlkZGlhcy9Gcm9udC1FbmQtQ2hlY2tsaXN0LyI+
CsKgwqDCoCA8aW1nIHNyYz0iaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRn
ZS9Gcm9udOKAkUVuZF9DaGVja2xpc3QtZm9sbG93ZWQtYnJpZ2h0Z3JlZW4u
c3ZnP3N0eWxlPWZsYXQtc3F1YXJlIiBhbHQ9IkZyb2504oCRRW5kX0NoZWNr
bGlzdCBmb2xsb3dlZCI+CjwvYT4KwqAgwqAgPGEgaHJlZj0iaHR0cHM6Ly9j
cmVhdGl2ZWNvbW1vbnMub3JnL3B1YmxpY2RvbWFpbi96ZXJvLzEuMC8iPgrC
oMKgwqAgPGltZyBzcmM9Imh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2Uv
bGljZW5zZS1DQzAtZ3JlZW4uc3ZnP3N0eWxlPWZsYXQtc3F1YXJlIiBhbHQ9
IkNDMCI+CsKgIDwvYT4KPC9wPgoKPHAgYWxpZ249ImNlbnRlciI+CsKgIDxh
IGhyZWY9IiNob3ctdG8tdXNlIj5Ib3cgVG8gVXNlPC9hPiDigKIgPGEgaHJl
Zj0iI2NvbnRyaWJ1dGluZyI+Q29udHJpYnV0aW5nPC9hPiDigKIgPGEgaHJl
Zj0iaHR0cHM6Ly9mcm9udGVuZGNoZWNrbGlzdC5pbyI+V2Vic2l0ZTwvYT4g
4oCiIDxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb2R1Y3RodW50LmNvbS9wb3N0
cy9mcm9udC1lbmQtY2hlY2tsaXN0Ij5Qcm9kdWN0IEh1bnQ8L2E+CjwvcD4K
PHAgYWxpZ249ImNlbnRlciI+CiAgICA8c3Bhbj5PdGhlciBDaGVja2xpc3Rz
Ojwvc3Bhbj4KICAgIDxicj4KwqAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIu
Y29tL3RoZWRhdmlkZGlhcy9Gcm9udC1FbmQtUGVyZm9ybWFuY2UtQ2hlY2ts
aXN0Iy0tLS0tLS0tLWZyb250LWVuZC1wZXJmb3JtYW5jZS1jaGVja2xpc3Qt
Ij7wn46uIEZyb250LUVuZCBQZXJmb3JtYW5jZSBDaGVja2xpc3Q8L2E+IOKA
oiA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vdGhlZGF2aWRkaWFzL0Zy
b250LUVuZC1EZXNpZ24tQ2hlY2tsaXN0I2Zyb250LWVuZC1kZXNpZ24tY2hl
Y2tsaXN0Ij7wn5KOIEZyb250LUVuZCBEZXNpZ24gQ2hlY2tsaXN0PC9hPgo8
L3A+CgoKSXQgaXMgYmFzZWQgb24gRnJvbnQtRW5kIGRldmVsb3BlcnMnIHll
YXJzIG9mIGV4cGVyaWVuY2UsIHdpdGggdGhlIGFkZGl0aW9ucyBjb21pbmcg
ZnJvbSBzb21lIG90aGVyIG9wZW4tc291cmNlIGNoZWNrbGlzdHMuCgojIyBU
YWJsZSBvZiBDb250ZW50cwoKMS4gKipbSGVhZF0oI2hlYWQpKioKMi4gKipb
SFRNTF0oI2h0bWwpKioKMy4gKipbV2ViZm9udHNdKCN3ZWJmb250cykqKgo0
LiAqKltDU1NdKCNjc3MpKioKNS4gKipbSW1hZ2VzXSgjaW1hZ2VzKSoqCjYu
ICoqW0phdmFTY3JpcHRdKCNqYXZhc2NyaXB0KSoqCjcuICoqW1NlY3VyaXR5
XSgjc2VjdXJpdHkpKioKOC4gKipbUGVyZm9ybWFuY2VdKCNwZXJmb3JtYW5j
ZS0xKSoqCjkuICoqW0FjY2Vzc2liaWxpdHldKCNhY2Nlc3NpYmlsaXR5KSoq
CjEwLiAqKltTRU9dKCNzZW8pKioKMTEuICoqW1RyYW5zbGF0aW9uc10oI3Ry
YW5zbGF0aW9ucykqKgoKLS0tCgojIyBIb3cgdG8gdXNlPwoKQWxsIGl0ZW1z
IGluIHRoZSAqKkZyb250LUVuZCBDaGVja2xpc3QqKiBhcmUgcmVxdWlyZWQg
Zm9yIHRoZSBtYWpvcml0eSBvZiB0aGUgcHJvamVjdHMsIGJ1dCBzb21lIGVs
ZW1lbnRzIGNhbiBiZSBvbWl0dGVkIG9yIGFyZSBub3QgZXNzZW50aWFsIChp
biB0aGUgY2FzZSBvZiBhbiBhZG1pbmlzdHJhdGlvbiB3ZWIgYXBwLCB5b3Ug
bWF5IG5vdCBuZWVkIFJTUyBmZWVkIGZvciBleGFtcGxlKS4gV2UgY2hvb3Nl
IHRvIHVzZSAzIGxldmVscyBvZiBmbGV4aWJpbGl0eToKCiogIVtMb3ddW2xv
d19pbWddIG1lYW5zIHRoYXQgdGhlIGl0ZW0gaXMgKipyZWNvbW1lbmRlZCoq
IGJ1dCBjYW4gYmUgb21pdHRlZCBpbiBzb21lIHBhcnRpY3VsYXIgc2l0dWF0
aW9ucy4KKiAhW01lZGl1bV1bbWVkaXVtX2ltZ10gbWVhbnMgdGhhdCB0aGUg
aXRlbSBpcyAqKmhpZ2hseSByZWNvbW1lbmRlZCoqIGFuZCBjYW4gZXZlbnR1
YWxseSBiZSBvbWl0dGVkIGluIHNvbWUgcmVhbGx5IHBhcnRpY3VsYXIgY2Fz
ZXMuIFNvbWUgZWxlbWVudHMsIGlmIG9taXR0ZWQsIGNhbiBoYXZlIGJhZCBy
ZXBlcmN1c3Npb25zIGluIHRlcm1zIG9mIHBlcmZvcm1hbmNlIG9yIFNFTy4K
KiAhW0hpZ2hdW2hpZ2hfaW1nXSBtZWFucyB0aGF0IHRoZSBpdGVtICoqY2Fu
J3QgYmUgb21pdHRlZCoqIGJ5IGFueSByZWFzb24uIFlvdSBtYXkgY2F1c2Ug
YSBkeXNmdW5jdGlvbiBpbiB5b3VyIHBhZ2Ugb3IgaGF2ZSBhY2Nlc3NpYmls
aXR5IG9yIFNFTyBpc3N1ZXMuIFRoZSB0ZXN0aW5nIHByaW9yaXR5IG5lZWRz
IHRvIGJlIG9uIHRoZXNlIGVsZW1lbnRzIGZpcnN0LgoKU29tZSByZXNvdXJj
ZXMgcG9zc2VzcyBhbiBlbW90aWNvbiB0byBoZWxwIHlvdSB1bmRlcnN0YW5k
IHdoaWNoIHR5cGUgb2YgY29udGVudCAvIGhlbHAgeW91IG1heSBmaW5kIG9u
IHRoZSBjaGVja2xpc3Q6CgoqIPCfk5Y6IGRvY3VtZW50YXRpb24gb3IgYXJ0
aWNsZQoqIPCfm6A6IG9ubGluZSB0b29sIC8gdGVzdGluZyB0b29sCiog8J+T
uTogbWVkaWEgb3IgdmlkZW8gY29udGVudAoKPiBZb3UgY2FuIGNvbnRyaWJ1
dGUgdG8gdGhlICoqKkZyb250LUVuZCBDaGVja2xpc3QgQXBwKioqIHJlYWRp
bmcgdGhlIFtSRUFETUVfQVBQIGZpbGVdKGh0dHBzOi8vZ2l0aHViLmNvbS90
aGVkYXZpZGRpYXMvRnJvbnQtRW5kLUNoZWNrbGlzdC9ibG9iL21hc3Rlci9S
RUFETUVfQVBQLm1kKSB3aGljaCBleHBsYWluIGV2ZXJ5dGhpbmcgYWJvdXQg
dGhlIHByb2plY3QuCgotLS0KCiMjIEhlYWQKCj4gKipOb3RlczoqKiBZb3Ug
Y2FuIGZpbmQgW2EgbGlzdCBvZiBldmVyeXRoaW5nXShodHRwczovL2dpdGh1
Yi5jb20vam9zaGJ1Y2hlYS9IRUFEKSB0aGF0IGNvdWxkIGJlIGZvdW5kIGlu
IHRoZSBgPGhlYWQ+YCBvZiBhbiBIVE1MIGRvY3VtZW50LgoKIyMjIE1ldGEg
dGFnCgoqIFsgXSAqKkRvY3R5cGU6KiogIVtIaWdoXVtoaWdoX2ltZ10gVGhl
IERvY3R5cGUgaXMgSFRNTDUgYW5kIGlzIGF0IHRoZSB0b3Agb2YgYWxsIHlv
dXIgSFRNTCBwYWdlcy4KCmBgYGh0bWwKPCFkb2N0eXBlIGh0bWw+IDwhLS0g
SFRNTDUgLS0+CmBgYAoKPiAqIPCfk5YgW0RldGVybWluaW5nIHRoZSBjaGFy
YWN0ZXIgZW5jb2RpbmcgLSBIVE1MNSBXM0NdKGh0dHBzOi8vd3d3LnczLm9y
Zy9UUi9odG1sNS9zeW50YXguaHRtbCNkZXRlcm1pbmluZy10aGUtY2hhcmFj
dGVyLWVuY29kaW5nKQoKKlRoZSBuZXh0IDIgbWV0YSB0YWdzIChDaGFyc2V0
IGFuZCBWaWV3cG9ydCkgbmVlZCB0byBjb21lIGZpcnN0IGluIHRoZSBoZWFk
LioKCiogWyBdICoqQ2hhcnNldDoqKiAhW0hpZ2hdW2hpZ2hfaW1nXSBUaGUg
Y2hhcnNldCAoVVRGLTgpIGlzIGRlY2xhcmVkIGNvcnJlY3RseS4KCmBgYGh0
bWwKPCEtLSBTZXQgY2hhcmFjdGVyIGVuY29kaW5nIGZvciB0aGUgZG9jdW1l
bnQgLS0+CjxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KYGBgCgoqIFsgXSAqKlZp
ZXdwb3J0OioqICFbSGlnaF1baGlnaF9pbWddIFRoZSB2aWV3cG9ydCBpcyBk
ZWNsYXJlZCBjb3JyZWN0bHkuCgpgYGBodG1sCjwhLS0gVmlld3BvcnQgZm9y
IHJlc3BvbnNpdmUgd2ViIGRlc2lnbiAtLT4KPG1ldGEgbmFtZT0idmlld3Bv
cnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2Fs
ZT0xLCB2aWV3cG9ydC1maXQ9Y292ZXIiPgpgYGAKCiogWyBdICoqVGl0bGU6
KiogIVtIaWdoXVtoaWdoX2ltZ10gQSB0aXRsZSBpcyB1c2VkIG9uIGFsbCBw
YWdlcyAoU0VPOiBHb29nbGUgY2FsY3VsYXRlcyB0aGUgcGl4ZWwgd2lkdGgg
b2YgdGhlIGNoYXJhY3RlcnMgdXNlZCBpbiB0aGUgdGl0bGUsIGFuZCBpdCBj
dXRzIG9mZiBiZXR3ZWVuIDQ3MiBhbmQgNDgyIHBpeGVscy4gVGhlIGF2ZXJh
Z2UgY2hhcmFjdGVyIGxpbWl0IHdvdWxkIGJlIGFyb3VuZCA1NS1jaGFyYWN0
ZXJzKS4KCmBgYGh0bWwKPCEtLSBEb2N1bWVudCBUaXRsZSAtLT4KPHRpdGxl
PlBhZ2UgVGl0bGUgbGVzcyB0aGFuIDU1IGNoYXJhY3RlcnM8L3RpdGxlPgpg
YGAKCj4gKiDwn5OWIFtUaXRsZSAtIEhUTUwgLSBNRE5dKGh0dHBzOi8vZGV2
ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0hUTUwvRWxlbWVu
dC90aXRsZSkKPiAqIPCfm6AgW1NFUlAgU25pcHBldCBHZW5lcmF0b3JdKGh0
dHBzOi8vd3d3LnNpc3RyaXguY29tL3NlcnAtc25pcHBldC1nZW5lcmF0b3Iv
KQoKKiBbIF0gKipEZXNjcmlwdGlvbjoqKiAhW0hpZ2hdW2hpZ2hfaW1nXSBB
IG1ldGEgZGVzY3JpcHRpb24gaXMgcHJvdmlkZWQsIGl0IGlzIHVuaXF1ZSBh
bmQgZG9lc24ndCBwb3NzZXNzIG1vcmUgdGhhbiAxNTAgY2hhcmFjdGVycy4K
CmBgYGh0bWwKPCEtLSBNZXRhIERlc2NyaXB0aW9uIC0tPgo8bWV0YSBuYW1l
PSJkZXNjcmlwdGlvbiIgY29udGVudD0iRGVzY3JpcHRpb24gb2YgdGhlIHBh
Z2UgbGVzcyB0aGFuIDE1MCBjaGFyYWN0ZXJzIj4KYGBgCgo+ICog8J+TliBb
TWV0YSBEZXNjcmlwdGlvbiAtIEhUTUwgLSBNRE5dKGh0dHBzOi8vZGV2ZWxv
cGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvTGVhcm4vSFRNTC9JbnRyb2R1
Y3Rpb25fdG9fSFRNTC9UaGVfaGVhZF9tZXRhZGF0YV9pbl9IVE1MI0FkZGlu
Z19hbl9hdXRob3JfYW5kX2Rlc2NyaXB0aW9uKQoKKiBbIF0gKipGYXZpY29u
czoqKiAhW01lZGl1bV1bbWVkaXVtX2ltZ10gRWFjaCBmYXZpY29uIGhhcyBi
ZWVuIGNyZWF0ZWQgYW5kIGRpc3BsYXlzIGNvcnJlY3RseS4gSWYgeW91IGhh
dmUgb25seSBhIGBmYXZpY29uLmljb2AsIHB1dCBpdCBhdCB0aGUgcm9vdCBv
ZiB5b3VyIHNpdGUuIE5vcm1hbGx5IHlvdSB3b24ndCBuZWVkIHRvIHVzZSBh
bnkgbWFya3VwLiBIb3dldmVyLCBpdCdzIHN0aWxsIGdvb2QgcHJhY3RpY2Ug
dG8gbGluayB0byBpdCB1c2luZyB0aGUgZXhhbXBsZSBiZWxvdy4gVG9kYXks
ICoqUE5HIGZvcm1hdCBpcyByZWNvbW1lbmRlZCoqIG92ZXIgYC5pY29gIGZv
cm1hdCAoZGltZW5zaW9uczogMzJ4MzJweCkuCgpgYGBodG1sCjwhLS0gU3Rh
bmRhcmQgZmF2aWNvbiAtLT4KPGxpbmsgcmVsPSJpY29uIiB0eXBlPSJpbWFn
ZS94LWljb24iIGhyZWY9Imh0dHBzOi8vZXhhbXBsZS5jb20vZmF2aWNvbi5p
Y28iPgo8IS0tIFJlY29tbWVuZGVkIGZhdmljb24gZm9ybWF0IC0tPgo8bGlu
ayByZWw9Imljb24iIHR5cGU9ImltYWdlL3BuZyIgaHJlZj0iaHR0cHM6Ly9l
eGFtcGxlLmNvbS9mYXZpY29uLnBuZyI+CmBgYAoKPiAqIPCfm6AgW0Zhdmlj
b24gR2VuZXJhdG9yXShodHRwczovL3d3dy5mYXZpY29uLWdlbmVyYXRvci5v
cmcvKQo+ICog8J+boCBbUmVhbEZhdmljb25HZW5lcmF0b3JdKGh0dHBzOi8v
cmVhbGZhdmljb25nZW5lcmF0b3IubmV0LykKPiAqIPCfk5YgW0Zhdmljb24g
Q2hlYXQgU2hlZXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9hdWRyZXlyL2Zhdmlj
b24tY2hlYXQtc2hlZXQpCj4gKiDwn5OWIFtGYXZpY29ucywgVG91Y2ggSWNv
bnMsIFRpbGUgSWNvbnMsIGV0Yy4gV2hpY2ggRG8gWW91IE5lZWQ/IC0gQ1NT
IFRyaWNrc10oaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9mYXZpY29uLXF1aXov
KQo+ICog8J+TliBbUE5HIGZhdmljb25zIC0gY2FuaXVzZV0oaHR0cHM6Ly9j
YW5pdXNlLmNvbS8jZmVhdD1saW5rLWljb24tcG5nKQoKKiBbIF0gKipBcHBs
ZSBXZWIgQXBwIE1ldGE6KiogIVtMb3ddW2xvd19pbWddIEFwcGxlIG1ldGEt
dGFncyBhcmUgcHJlc2VudC4KCmBgYGh0bWwKPCEtLSBBcHBsZSBUb3VjaCBJ
Y29uIChhdCBsZWFzdCAyMDB4MjAwcHgpIC0tPgo8bGluayByZWw9ImFwcGxl
LXRvdWNoLWljb24iIGhyZWY9Ii9jdXN0b20taWNvbi5wbmciPgoKPCEtLSBU
byBydW4gd2ViIGFwcGxpY2F0aW9uIGluIGZ1bGwtc2NyZWVuIC0tPgo8bWV0
YSBuYW1lPSJhcHBsZS1tb2JpbGUtd2ViLWFwcC1jYXBhYmxlIiBjb250ZW50
PSJ5ZXMiPgoKPCEtLSBTdGF0dXMgQmFyIFN0eWxlIChzZWUgU3VwcG9ydGVk
IE1ldGEgVGFncyBiZWxvdyBmb3IgYXZhaWxhYmxlIHZhbHVlcykgLS0+Cjwh
LS0gSGFzIG5vIGVmZmVjdCB1bmxlc3MgeW91IGhhdmUgdGhlIHByZXZpb3Vz
IG1ldGEgdGFnIC0tPgo8bWV0YSBuYW1lPSJhcHBsZS1tb2JpbGUtd2ViLWFw
cC1zdGF0dXMtYmFyLXN0eWxlIiBjb250ZW50PSJibGFjayI+CmBgYAoKPiAq
IPCfk5YgW0NvbmZpZ3VyaW5nIFdlYiBBcHBsaWNhdGlvbnNdKGh0dHBzOi8v
ZGV2ZWxvcGVyLmFwcGxlLmNvbS9saWJyYXJ5L2NvbnRlbnQvZG9jdW1lbnRh
dGlvbi9BcHBsZUFwcGxpY2F0aW9ucy9SZWZlcmVuY2UvU2FmYXJpV2ViQ29u
dGVudC9Db25maWd1cmluZ1dlYkFwcGxpY2F0aW9ucy9Db25maWd1cmluZ1dl
YkFwcGxpY2F0aW9ucy5odG1sKQo+ICog8J+TliBbU3VwcG9ydGVkIE1ldGEg
VGFnc10oaHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tL2xpYnJhcnkvY29u
dGVudC9kb2N1bWVudGF0aW9uL0FwcGxlQXBwbGljYXRpb25zL1JlZmVyZW5j
ZS9TYWZhcmlIVE1MUmVmL0FydGljbGVzL01ldGFUYWdzLmh0bWwpCgotIFsg
XSAqKldpbmRvd3MgVGlsZXM6KiogIVtMb3ddW2xvd19pbWddIFdpbmRvd3Mg
dGlsZXMgYXJlIHByZXNlbnQgYW5kIGxpbmtlZC4KCmBgYGh0bWwKPCEtLSBN
aWNyb3NvZnQgVGlsZXMgLS0+CjxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24t
Y29uZmlnIiBjb250ZW50PSJicm93c2VyY29uZmlnLnhtbCIgLz4KYGBgCgpN
aW5pbXVtIHJlcXVpcmVkIHhtbCBtYXJrdXAgZm9yIHRoZSBgYnJvd3NlcmNv
bmZpZy54bWxgIGZpbGUgaXMgYXMgZm9sbG93czoKCmBgYHhtbAo8P3htbCB2
ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJ1dGYtOCI/Pgo8YnJvd3NlcmNvbmZp
Zz4KICAgPG1zYXBwbGljYXRpb24+CiAgICAgPHRpbGU+CiAgICAgICAgPHNx
dWFyZTcweDcwbG9nbyBzcmM9InNtYWxsLnBuZyIvPgogICAgICAgIDxzcXVh
cmUxNTB4MTUwbG9nbyBzcmM9Im1lZGl1bS5wbmciLz4KICAgICAgICA8d2lk
ZTMxMHgxNTBsb2dvIHNyYz0id2lkZS5wbmciLz4KICAgICAgICA8c3F1YXJl
MzEweDMxMGxvZ28gc3JjPSJsYXJnZS5wbmciLz4KICAgICA8L3RpbGU+CiAg
IDwvbXNhcHBsaWNhdGlvbj4KPC9icm93c2VyY29uZmlnPgpgYGAKCj4gKiDw
n5OWIFtCcm93c2VyIGNvbmZpZ3VyYXRpb24gc2NoZW1hIHJlZmVyZW5jZV0o
aHR0cHM6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9kbjMy
MDQyNih2PXZzLjg1KS5hc3B4KQoKKiBbIF0gKipDYW5vbmljYWw6KiogIVtN
ZWRpdW1dW21lZGl1bV9pbWddIFVzZSBgcmVsPSJjYW5vbmljYWwiYCB0byBh
dm9pZCBkdXBsaWNhdGUgY29udGVudC4KCmBgYGh0bWwKPCEtLSBIZWxwcyBw
cmV2ZW50IGR1cGxpY2F0ZSBjb250ZW50IGlzc3VlcyAtLT4KPGxpbmsgcmVs
PSJjYW5vbmljYWwiIGhyZWY9Imh0dHA6Ly9leGFtcGxlLmNvbS8yMDE3LzA5
L2EtbmV3LWFydGljbGUtdG8tcmVhZC5odG1sIj4KYGBgCgo+ICog8J+TliBb
VXNlIGNhbm9uaWNhbCBVUkxzIC0gU2VhcmNoIENvbnNvbGUgSGVscCAtIEdv
b2dsZSBTdXBwb3J0XShodHRwczovL3N1cHBvcnQuZ29vZ2xlLmNvbS93ZWJt
YXN0ZXJzL2Fuc3dlci8xMzkwNjY/aGw9ZW4pCj4gKiDwn5OWIFs1IGNvbW1v
biBtaXN0YWtlcyB3aXRoIHJlbD1jYW5vbmljYWwgLSBHb29nbGUgV2VibWFz
dGVyIEJsb2ddKGh0dHBzOi8vd2VibWFzdGVycy5nb29nbGVibG9nLmNvbS8y
MDEzLzA0LzUtY29tbW9uLW1pc3Rha2VzLXdpdGgtcmVsY2Fub25pY2FsLmh0
bWwpCgojIyMgSFRNTCB0YWdzCgoqIFsgXSAqKkxhbmd1YWdlIGF0dHJpYnV0
ZToqKiAhW0hpZ2hdW2hpZ2hfaW1nXSBUaGUgYGxhbmdgIGF0dHJpYnV0ZSBv
ZiB5b3VyIHdlYnNpdGUgaXMgc3BlY2lmaWVkIGFuZCByZWxhdGVkIHRvIHRo
ZSBsYW5ndWFnZSBvZiB0aGUgY3VycmVudCBwYWdlLgoKYGBgaHRtbAo8aHRt
bCBsYW5nPSJlbiI+CmBgYAoKKiBbIF0gKipEaXJlY3Rpb24gYXR0cmlidXRl
OioqICFbTWVkaXVtXVttZWRpdW1faW1nXSBUaGUgZGlyZWN0aW9uIG9mIGxl
Y3R1cmUgaXMgc3BlY2lmaWVkIG9uIHRoZSBodG1sIHRhZyAoSXQgY2FuIGJl
IHVzZWQgb24gYW5vdGhlciBIVE1MIHRhZykuCgpgYGBodG1sCjxodG1sIGRp
cj0icnRsIj4KYGBgCgo+ICog8J+TliBbZGlyIC0gSFRNTCAtIE1ETl0oaHR0
cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRN
TC9HbG9iYWxfYXR0cmlidXRlcy9kaXIpCgoqIFsgXSAqKkFsdGVybmF0ZSBs
YW5ndWFnZToqKiAhW0xvd11bbG93X2ltZ10gVGhlIGxhbmd1YWdlIHRhZyBv
ZiB5b3VyIHdlYnNpdGUgaXMgc3BlY2lmaWVkIGFuZCByZWxhdGVkIHRvIHRo
ZSBsYW5ndWFnZSBvZiB0aGUgY3VycmVudCBwYWdlLgoKYGBgaHRtbAo8bGlu
ayByZWw9ImFsdGVybmF0ZSIgaHJlZj0iaHR0cHM6Ly9lcy5leGFtcGxlLmNv
bS8iIGhyZWZsYW5nPSJlcyI+CmBgYAoKKiBbIF0gKipDb25kaXRpb25hbCBj
b21tZW50czoqKiAhW0xvd11bbG93X2ltZ10gQ29uZGl0aW9uYWwgY29tbWVu
dHMgYXJlIHByZXNlbnQgZm9yIElFIGlmIG5lZWRlZC4KCj4gKiDwn5OWIFtB
Ym91dCBjb25kaXRpb25hbCBjb21tZW50cyAoSW50ZXJuZXQgRXhwbG9yZXIp
IC0gTVNETiAtIE1pY3Jvc29mdF0oaHR0cHM6Ly9tc2RuLm1pY3Jvc29mdC5j
b20vZW4tdXMvbGlicmFyeS9tczUzNzUxMih2PXZzLjg1KS5hc3B4KQoKKiBb
IF0gKipSU1MgZmVlZDoqKiAhW0xvd11bbG93X2ltZ10gSWYgeW91ciBwcm9q
ZWN0IGlzIGEgYmxvZyBvciBoYXMgYXJ0aWNsZXMsIGFuIFJTUyBsaW5rIHdh
cyBwcm92aWRlZC4KCiogWyBdICoqQ1NTIENyaXRpY2FsOioqICFbTWVkaXVt
XVttZWRpdW1faW1nXSBUaGUgQ1NTIGNyaXRpY2FsIChvciAiYWJvdmUgdGhl
IGZvbGQiKSBjb2xsZWN0cyBhbGwgdGhlIENTUyB1c2VkIHRvIHJlbmRlciB0
aGUgdmlzaWJsZSBwb3J0aW9uIG9mIHRoZSBwYWdlLiBJdCBpcyBlbWJlZGRl
ZCBiZWZvcmUgeW91ciBwcmluY2lwYWwgQ1NTIGNhbGwgYW5kIGJldHdlZW4g
YDxzdHlsZT48L3N0eWxlPmAgaW4gYSBzaW5nbGUgbGluZSAobWluaWZpZWQp
LgoKPiAqIPCfm6AgW0NyaXRpY2FsIGJ5IEFkZHkgT3NtYW5pIG9uIEdpdEh1
Yl0oaHR0cHM6Ly9naXRodWIuY29tL2FkZHlvc21hbmkvY3JpdGljYWwpIGF1
dG9tYXRlcyB0aGlzLgoKKiBbIF0gKipDU1Mgb3JkZXI6KiogIVtIaWdoXVto
aWdoX2ltZ10gQWxsIENTUyBmaWxlcyBhcmUgbG9hZGVkIGJlZm9yZSBhbnkg
SmF2YVNjcmlwdCBmaWxlcyBpbiB0aGUgYDxoZWFkPmAuIChFeGNlcHQgdGhl
IGNhc2Ugd2hlcmUgc29tZXRpbWVzIEpTIGZpbGVzIGFyZSBsb2FkZWQgYXN5
bmNocm9ub3VzbHkgb24gdG9wIG9mIHlvdXIgcGFnZSkuCgojIyMgU29jaWFs
IG1ldGEKClZpc3VhbGl6ZSBhbmQgZ2VuZXJhdGUgYXV0b21hdGljYWxseSBv
dXIgc29jaWFsIG1ldGEgdGFncyB3aXRoIFtNZXRhIFRhZ3NdKGh0dHBzOi8v
bWV0YXRhZ3MuaW8vKQoKKioqRmFjZWJvb2sgT0cqKiogYW5kICoqKlR3aXR0
ZXIgQ2FyZHMqKiogYXJlLCBmb3IgYW55IHdlYnNpdGUsIGhpZ2hseSByZWNv
bW1lbmRlZC4gVGhlIG90aGVyIHNvY2lhbCBtZWRpYSB0YWdzIGNhbiBiZSBj
b25zaWRlcmVkIGlmIHlvdSB0YXJnZXQgYSBwYXJ0aWN1bGFyIHByZXNlbmNl
IG9uIHRob3NlIGFuZCB3YW50IHRvIGVuc3VyZSB0aGUgZGlzcGxheS4KCiog
WyBdICoqRmFjZWJvb2sgT3BlbiBHcmFwaDoqKiAhW0xvd11bbG93X2ltZ10g
QWxsIEZhY2Vib29rIE9wZW4gR3JhcGggKE9HKSBhcmUgdGVzdGVkIGFuZCBu
byBvbmUgaXMgbWlzc2luZyBvciB3aXRoIGEgZmFsc2UgaW5mb3JtYXRpb24u
IEltYWdlcyBuZWVkIHRvIGJlIGF0IGxlYXN0IDYwMCB4IDMxNSBwaXhlbHMs
IGFsdGhvdWdoIDEyMDAgeCA2MzAgcGl4ZWxzIGlzIHJlY29tbWVuZGVkLgoK
PiAqKk5vdGVzOioqIFVzaW5nIGBvZzppbWFnZTp3aWR0aGAgYW5kIGBvZzpp
bWFnZTpoZWlnaHRgIHdpbGwgc3BlY2lmeSB0aGUgaW1hZ2UgZGltZW5zaW9u
cyB0byB0aGUgY3Jhd2xlciBzbyB0aGF0IGl0IGNhbiByZW5kZXIgdGhlIGlt
YWdlIGltbWVkaWF0ZWx5IHdpdGhvdXQgaGF2aW5nIHRvIGFzeW5jaHJvbm91
c2x5IGRvd25sb2FkIGFuZCBwcm9jZXNzIGl0LgoKYGBgaHRtbAo8bWV0YSBw
cm9wZXJ0eT0ib2c6dHlwZSIgY29udGVudD0id2Vic2l0ZSI+CjxtZXRhIHBy
b3BlcnR5PSJvZzp1cmwiIGNvbnRlbnQ9Imh0dHBzOi8vZXhhbXBsZS5jb20v
cGFnZS5odG1sIj4KPG1ldGEgcHJvcGVydHk9Im9nOnRpdGxlIiBjb250ZW50
PSJDb250ZW50IFRpdGxlIj4KPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlIiBj
b250ZW50PSJodHRwczovL2V4YW1wbGUuY29tL2ltYWdlLmpwZyI+CjxtZXRh
IHByb3BlcnR5PSJvZzpkZXNjcmlwdGlvbiIgY29udGVudD0iRGVzY3JpcHRp
b24gSGVyZSI+CjxtZXRhIHByb3BlcnR5PSJvZzpzaXRlX25hbWUiIGNvbnRl
bnQ9IlNpdGUgTmFtZSI+CjxtZXRhIHByb3BlcnR5PSJvZzpsb2NhbGUiIGNv
bnRlbnQ9ImVuX1VTIj4KPCEtLSBOZXh0IHRhZ3MgYXJlIG9wdGlvbmFsIGJ1
dCByZWNvbW1lbmRlZCAtLT4KPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlOndp
ZHRoIiBjb250ZW50PSIxMjAwIj4KPG1ldGEgcHJvcGVydHk9Im9nOmltYWdl
OmhlaWdodCIgY29udGVudD0iNjMwIj4KYGBgCgo+ICog8J+TliBbQSBHdWlk
ZSB0byBTaGFyaW5nIGZvciBXZWJtYXN0ZXJzXShodHRwczovL2RldmVsb3Bl
cnMuZmFjZWJvb2suY29tL2RvY3Mvc2hhcmluZy93ZWJtYXN0ZXJzLykKPiAq
IPCfk5YgW0Jlc3QgUHJhY3RpY2VzIC0gU2hhcmluZ10oaHR0cHM6Ly9kZXZl
bG9wZXJzLmZhY2Vib29rLmNvbS9kb2NzL3NoYXJpbmcvYmVzdC1wcmFjdGlj
ZXMvKQo+ICog8J+boCBUZXN0IHlvdXIgcGFnZSB3aXRoIHRoZSBbRmFjZWJv
b2sgT0cgdGVzdGluZ10oaHR0cHM6Ly9kZXZlbG9wZXJzLmZhY2Vib29rLmNv
bS90b29scy9kZWJ1Zy8pCgoqIFsgXSAqKlR3aXR0ZXIgQ2FyZDoqKiAhW0xv
d11bbG93X2ltZ10KCmBgYGh0bWwKPG1ldGEgbmFtZT0idHdpdHRlcjpjYXJk
IiBjb250ZW50PSJzdW1tYXJ5Ij4KPG1ldGEgbmFtZT0idHdpdHRlcjpzaXRl
IiBjb250ZW50PSJAc2l0ZV9hY2NvdW50Ij4KPG1ldGEgbmFtZT0idHdpdHRl
cjpjcmVhdG9yIiBjb250ZW50PSJAaW5kaXZpZHVhbF9hY2NvdW50Ij4KPG1l
dGEgbmFtZT0idHdpdHRlcjp1cmwiIGNvbnRlbnQ9Imh0dHBzOi8vZXhhbXBs
ZS5jb20vcGFnZS5odG1sIj4KPG1ldGEgbmFtZT0idHdpdHRlcjp0aXRsZSIg
Y29udGVudD0iQ29udGVudCBUaXRsZSI+CjxtZXRhIG5hbWU9InR3aXR0ZXI6
ZGVzY3JpcHRpb24iIGNvbnRlbnQ9IkNvbnRlbnQgZGVzY3JpcHRpb24gbGVz
cyB0aGFuIDIwMCBjaGFyYWN0ZXJzIj4KPG1ldGEgbmFtZT0idHdpdHRlcjpp
bWFnZSIgY29udGVudD0iaHR0cHM6Ly9leGFtcGxlLmNvbS9pbWFnZS5qcGci
PgpgYGAKCj4gKiDwn5OWIFtHZXR0aW5nIHN0YXJ0ZWQgd2l0aCBjYXJkcyDi
gJQgVHdpdHRlciBEZXZlbG9wZXJzXShodHRwczovL2RldmVsb3Blci50d2l0
dGVyLmNvbS9lbi9kb2NzL3R3ZWV0cy9vcHRpbWl6ZS13aXRoLWNhcmRzL2d1
aWRlcy9nZXR0aW5nLXN0YXJ0ZWQpCj4gKiDwn5ugIFRlc3QgeW91ciBwYWdl
IHdpdGggdGhlIFtUd2l0dGVyIGNhcmQgdmFsaWRhdG9yXShodHRwczovL2Nh
cmRzLWRldi50d2l0dGVyLmNvbS92YWxpZGF0b3IpCgoqKlvirIYgYmFjayB0
byB0b3BdKCN0YWJsZS1vZi1jb250ZW50cykqKgoKLS0tCgojIyBIVE1MCgoj
IyMgQmVzdCBwcmFjdGljZXMKCiogWyBdICoqSFRNTDUgU2VtYW50aWMgRWxl
bWVudHM6KiogIVtIaWdoXVtoaWdoX2ltZ10gSFRNTDUgU2VtYW50aWMgRWxl
bWVudHMgYXJlIHVzZWQgYXBwcm9wcmlhdGVseSAoaGVhZGVyLCBzZWN0aW9u
LCBmb290ZXIsIG1haW4uLi4pLgoKPiAqIPCfk5YgW0hUTUwgUmVmZXJlbmNl
XShodHRwOi8vaHRtbHJlZmVyZW5jZS5pby8pCgoqIFsgXSAqKkVycm9yIHBh
Z2VzOioqICFbSGlnaF1baGlnaF9pbWddIEVycm9yIDQwNCBwYWdlIGFuZCA1
eHggZXhpc3QuIFJlbWVtYmVyIHRoYXQgdGhlIDV4eCBlcnJvciBwYWdlcyBu
ZWVkIHRvIGhhdmUgdGhlaXIgQ1NTIGludGVncmF0ZWQgKG5vIGV4dGVybmFs
IGNhbGwgb24gdGhlIGN1cnJlbnQgc2VydmVyKS4KCiogWyBdICoqTm9vcGVu
ZXI6KiogIVtNZWRpdW1dW21lZGl1bV9pbWddIEluIGNhc2UgeW91IGFyZSB1
c2luZyBleHRlcm5hbCBsaW5rcyB3aXRoIGB0YXJnZXQ9Il9ibGFuayJgLCB5
b3VyIGxpbmsgc2hvdWxkIGhhdmUgYSBgcmVsPSJub29wZW5lciJgIGF0dHJp
YnV0ZSB0byBwcmV2ZW50IHRhYiBuYWJiaW5nLiBJZiB5b3UgbmVlZCB0byBz
dXBwb3J0IG9sZGVyIHZlcnNpb25zIG9mIEZpcmVmb3gsIHVzZSBgcmVsPSJu
b29wZW5lciBub3JlZmVycmVyImAuCgo+ICog8J+TliBbQWJvdXQgcmVsPW5v
b3BlbmVyXShodHRwczovL21hdGhpYXNieW5lbnMuZ2l0aHViLmlvL3JlbC1u
b29wZW5lci8pCgoqIFsgXSAqKkNsZWFuIHVwIGNvbW1lbnRzOioqICFbTG93
XVtsb3dfaW1nXSBVbm5lY2Vzc2FyeSBjb2RlIG5lZWRzIHRvIGJlIHJlbW92
ZWQgYmVmb3JlIHNlbmRpbmcgdGhlIHBhZ2UgdG8gcHJvZHVjdGlvbi4KCiMj
IyBIVE1MIHRlc3RpbmcKCiogWyBdICoqVzNDIGNvbXBsaWFudDoqKiAhW0hp
Z2hdW2hpZ2hfaW1nXSBBbGwgcGFnZXMgbmVlZCB0byBiZSB0ZXN0ZWQgd2l0
aCB0aGUgVzNDIHZhbGlkYXRvciB0byBpZGVudGlmeSBwb3NzaWJsZSBpc3N1
ZXMgaW4gdGhlIEhUTUwgY29kZS4KCj4gKiDwn5ugIFtXM0MgdmFsaWRhdG9y
XShodHRwczovL3ZhbGlkYXRvci53My5vcmcvKQoKKiBbIF0gKipIVE1MIExp
bnQ6KiogIVtIaWdoXVtoaWdoX2ltZ10gSSB1c2UgdG9vbHMgdG8gaGVscCBt
ZSBhbmFseXplIGFueSBpc3N1ZXMgSSBjb3VsZCBoYXZlIG9uIG15IEhUTUwg
Y29kZS4KCj4gKiDwn5ugIFtEaXJ0eSBtYXJrdXBdKGh0dHBzOi8vZGlydHlt
YXJrdXAuY29tLykKCj4gKiDwn5ugIFt3ZWJoaW50XShodHRwczovL3dlYmhp
bnQuaW8vKQoKKiBbIF0gKipMaW5rIGNoZWNrZXI6KiogIVtIaWdoXVtoaWdo
X2ltZ10gVGhlcmUgYXJlIG5vIGJyb2tlbiBsaW5rcyBpbiBteSBwYWdlLCB2
ZXJpZnkgdGhhdCB5b3UgZG9uJ3QgaGF2ZSBhbnkgNDA0IGVycm9yLgoKPiAq
IPCfm6AgW1czQyBMaW5rIENoZWNrZXJdKGh0dHBzOi8vdmFsaWRhdG9yLncz
Lm9yZy9jaGVja2xpbmspCgoqIFsgXSAqKkFkYmxvY2tlcnMgdGVzdDoqKiAh
W01lZGl1bV1bbWVkaXVtX2ltZ10gWW91ciB3ZWJzaXRlIHNob3dzIHlvdXIg
Y29udGVudCBjb3JyZWN0bHkgd2l0aCBhZGJsb2NrZXJzIGVuYWJsZWQgKFlv
dSBjYW4gcHJvdmlkZSBhIG1lc3NhZ2UgZW5jb3VyYWdpbmcgcGVvcGxlIHRv
IGRpc2FibGUgdGhlaXIgYWRibG9ja2VyKS4KCj4gKiDwn5OWIFtVc2UgQWRC
bG9ja2luZyBpbiB5b3VyIERldiBFbnZpcm9ubWVudF0oaHR0cHM6Ly9hbmRy
ZWljaW9hcmEuY29tL3VzZS1hZGJsb2NraW5nLWluLXlvdXItZGV2LWVudmly
b25tZW50LTQ4ZGI1MDBkOWI4NikKCgoqKlvirIYgYmFjayB0byB0b3BdKCN0
YWJsZS1vZi1jb250ZW50cykqKgoKLS0tCgojIyBXZWJmb250cwoKPiAqKk5v
dGVzOioqIFVzaW5nIHdlYmZvbnRzIG1heSBjYXVzZSBGbGFzaCBPZiBVbnN0
eWxlZCBUZXh0L0ZsYXNoIE9mIEludmlzaWJsZSBUZXh0IC0gY29uc2lkZXIg
aGF2aW5nIGZhbGxiYWNrIGZvbnRzIGFuZC9vciB1dGlsaXppbmcgd2ViZm9u
dCBsb2FkZXJzIHRvIGNvbnRyb2wgYmVoYXZpb3IuCj4gKiDwn5OWIFtHb29n
bGUgVGVjaG5pY2FsIGNvbnNpZGVyYXRpb25zIGFib3V0IHdlYmZvbnRzXSho
dHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS9mb250cy9kb2NzL3RlY2hu
aWNhbF9jb25zaWRlcmF0aW9ucykKCiogWyBdICoqV2ViZm9udCBmb3JtYXQ6
KiogIVtIaWdoXVtoaWdoX2ltZ10gV09GRiwgV09GRjIgYW5kIFRURiBhcmUg
c3VwcG9ydGVkIGJ5IGFsbCBtb2Rlcm4gYnJvd3NlcnMuCgo+ICog8J+TliBb
V09GRiAtIFdlYiBPcGVuIEZvbnQgRm9ybWF0IC0gQ2FuaXVzZV0oaHR0cHM6
Ly9jYW5pdXNlLmNvbS8jZmVhdD13b2ZmKS4KPiAqIPCfk5YgW1dPRkYgMi4w
IC0gV2ViIE9wZW4gRm9udCBGb3JtYXQgLSBDYW5pdXNlXShodHRwczovL2Nh
bml1c2UuY29tLyNmZWF0PXdvZmYyKS4KPiAqIPCfk5YgW1RURi9PVEYgLSBU
cnVlVHlwZSBhbmQgT3BlblR5cGUgZm9udCBzdXBwb3J0XShodHRwczovL2Nh
bml1c2UuY29tLyNmZWF0PXR0ZikKPiAqIPCfk5YgW1VzaW5nIEBmb250LWZh
Y2UgLSBDU1MtVHJpY2tzXShodHRwczovL2Nzcy10cmlja3MuY29tL3NuaXBw
ZXRzL2Nzcy91c2luZy1mb250LWZhY2UvKQoKKiBbIF0gKipXZWJmb250IHNp
emU6KiogIVtIaWdoXVtoaWdoX2ltZ10gV2ViZm9udCBzaXplcyBkb24ndCBl
eGNlZWQgMiBNQiAoYWxsIHZhcmlhbnRzIGluY2x1ZGVkKS4KCiogWyBdICoq
V2ViZm9udCBsb2FkZXI6KiogIVtMb3ddW2xvd19pbWddIENvbnRyb2wgbG9h
ZGluZyBiZWhhdmlvciB3aXRoIGEgd2ViZm9udCBsb2FkZXIKCj4gKiDwn5ug
IFtUeXBla2l0IFdlYiBGb250IExvYWRlcl0oaHR0cHM6Ly9naXRodWIuY29t
L3R5cGVraXQvd2ViZm9udGxvYWRlcikKCioqW+KshiBiYWNrIHRvIHRvcF0o
I3RhYmxlLW9mLWNvbnRlbnRzKSoqCgotLS0KCiMjIENTUwoKPiAqKk5vdGVz
OioqIFRha2UgYSBsb29rIGF0IFtDU1MgZ3VpZGVsaW5lc10oaHR0cHM6Ly9j
c3NndWlkZWxpbi5lcy8pIGFuZCBbU2FzcyBHdWlkZWxpbmVzXShodHRwczov
L3Nhc3MtZ3VpZGVsaW4uZXMvKSBmb2xsb3dlZCBieSBtb3N0ICBGcm9udC1F
bmQgZGV2ZWxvcGVycy4gSWYgeW91IGhhdmUgYSBkb3VidCBhYm91dCBDU1Mg
cHJvcGVydGllcywgeW91IGNhbiB2aXNpdCBbQ1NTIFJlZmVyZW5jZV0oaHR0
cDovL2Nzc3JlZmVyZW5jZS5pby8pLiBUaGVyZSBpcyBhbHNvIGEgc2hvcnQg
W0NvZGUgR3VpZGVdKGh0dHA6Ly9jb2RlZ3VpZGUuY28vKSBmb3IgY29uc2lz
dGVuY3kuCgoqIFsgXSAqKlJlc3BvbnNpdmUgV2ViIERlc2lnbjoqKiAhW0hp
Z2hdW2hpZ2hfaW1nXSBUaGUgd2Vic2l0ZSBpcyB1c2luZyByZXNwb25zaXZl
IHdlYiBkZXNpZ24uCiogWyBdICoqQ1NTIFByaW50OioqICFbTWVkaXVtXVtt
ZWRpdW1faW1nXSBBIHByaW50IHN0eWxlc2hlZXQgaXMgcHJvdmlkZWQgYW5k
IGlzIGNvcnJlY3Qgb24gZWFjaCBwYWdlLgoqIFsgXSAqKlByZXByb2Nlc3Nv
cnM6KiogIVtMb3ddW2xvd19pbWddIFlvdXIgcHJvamVjdCBpcyB1c2luZyBh
IENTUyBwcmVwcm9jZXNzb3IgKGUuZyBbU2Fzc10oaHR0cDovL3Nhc3MtbGFu
Zy5jb20vKSwgW0xlc3NdKGh0dHA6Ly9sZXNzY3NzLm9yZy8pLCBbU3R5bHVz
XShodHRwOi8vc3R5bHVzLWxhbmcuY29tLykpLgoqIFsgXSAqKlVuaXF1ZSBJ
RDoqKiAhW0hpZ2hdW2hpZ2hfaW1nXSBJZiBJRHMgYXJlIHVzZWQsIHRoZXkg
YXJlIHVuaXF1ZSB0byBhIHBhZ2UuCiogWyBdICoqUmVzZXQgQ1NTOioqICFb
SGlnaF1baGlnaF9pbWddIEEgQ1NTIHJlc2V0IChyZXNldCwgbm9ybWFsaXpl
IG9yIHJlYm9vdCkgaXMgdXNlZCBhbmQgdXAgdG8gZGF0ZS4gKihJZiB5b3Ug
YXJlIHVzaW5nIGEgQ1NTIEZyYW1ld29yayBsaWtlIEJvb3RzdHJhcCBvciBG
b3VuZGF0aW9uLCBhIE5vcm1hbGl6ZSBpcyBhbHJlYWR5IGluY2x1ZGVkIGlu
dG8gaXQuKSoKCj4gKiDwn5OWIFtSZXNldC5jc3NdKGh0dHBzOi8vbWV5ZXJ3
ZWIuY29tL2VyaWMvdG9vbHMvY3NzL3Jlc2V0LykKPiAqIPCfk5YgW05vcm1h
bGl6ZS5jc3NdKGh0dHBzOi8vbmVjb2xhcy5naXRodWIuaW8vbm9ybWFsaXpl
LmNzcy8pCj4gKiDwn5OWIFtSZWJvb3RdKGh0dHBzOi8vZ2V0Ym9vdHN0cmFw
LmNvbS9kb2NzLzQuMC9jb250ZW50L3JlYm9vdC8pCgoqIFsgXSAqKkpTIHBy
ZWZpeDoqKiAhW0xvd11bbG93X2ltZ10gQWxsIGNsYXNzZXMgKG9yIGlkLSB1
c2VkIGluIEphdmFTY3JpcHQgZmlsZXMpIGJlZ2luIHdpdGggKipqcy0qKiBh
bmQgYXJlIG5vdCBzdHlsZWQgaW50byB0aGUgQ1NTIGZpbGVzLgoKYGBgaHRt
bAo8ZGl2IGlkPSJqcy1zbGlkZXIiIGNsYXNzPSJteS1zbGlkZXIiPgo8IS0t
IE9yIC0tPgo8ZGl2IGlkPSJpZC11c2VkLWJ5LWNtcyIgY2xhc3M9ImpzLXNs
aWRlciBteS1zbGlkZXIiPgpgYGAKCiogWyBdICoqZW1iZWRkZWQgb3IgaW5s
aW5lIENTUzoqKiAhW0hpZ2hdW2hpZ2hfaW1nXSBBdm9pZCBhdCBhbGwgY29z
dCBlbWJlZGRpbmcgQ1NTIGluIGA8c3R5bGU+YCB0YWdzIG9yIHVzaW5nIGlu
bGluZSBDU1M6IG9ubHkgdXNlIGZvciB2YWxpZCByZWFzb25zIChlLmcuIGJh
Y2tncm91bmQtaW1hZ2UgZm9yIHNsaWRlciwgY3JpdGljYWwgQ1NTKS4KKiBb
IF0gKipWZW5kb3IgcHJlZml4ZXM6KiogIVtIaWdoXVtoaWdoX2ltZ10gQ1NT
IHZlbmRvciBwcmVmaXhlcyBhcmUgdXNlZCBhbmQgYXJlIGdlbmVyYXRlZCBh
Y2NvcmRpbmdseSB3aXRoIHlvdXIgYnJvd3NlciBzdXBwb3J0IGNvbXBhdGli
aWxpdHkuCgo+ICog8J+boCBbQXV0b3ByZWZpeGVyIENTUyBvbmxpbmVdKGh0
dHBzOi8vYXV0b3ByZWZpeGVyLmdpdGh1Yi5pby8pCgojIyMgUGVyZm9ybWFu
Y2UKCi0gWyBdICoqQ29uY2F0ZW5hdGlvbjoqKiAhW0hpZ2hdW2hpZ2hfaW1n
XSBDU1MgZmlsZXMgYXJlIGNvbmNhdGVuYXRlZCBpbiBhIHNpbmdsZSBmaWxl
ICooTm90IGZvciBIVFRQLzIpKi4KLSBbIF0gKipNaW5pZmljYXRpb246Kiog
IVtIaWdoXVtoaWdoX2ltZ10gQWxsIENTUyBmaWxlcyBhcmUgbWluaWZpZWQu
Ci0gWyBdICoqTm9uLWJsb2NraW5nOioqICFbTWVkaXVtXVttZWRpdW1faW1n
XSBDU1MgZmlsZXMgbmVlZCB0byBiZSBub24tYmxvY2tpbmcgdG8gcHJldmVu
dCB0aGUgRE9NIGZyb20gdGFraW5nIHRpbWUgdG8gbG9hZC4KCj4gKiDwn5OW
IFtsb2FkQ1NTIGJ5IGZpbGFtZW50IGdyb3VwXShodHRwczovL2dpdGh1Yi5j
b20vZmlsYW1lbnRncm91cC9sb2FkQ1NTKQo+ICog8J+TliBbRXhhbXBsZSBv
ZiBwcmVsb2FkIENTUyB1c2luZyBsb2FkQ1NTXShodHRwczovL2dpc3QuZ2l0
aHViLmNvbS90aGVkYXZpZGRpYXMvYzI0NzYzYjgyYjk5OTFlNTM5MjhlNjZh
MGJhZmM5YmYpCgotIFsgXSAqKlVudXNlZCBDU1M6KiogIVtMb3ddW2xvd19p
bWddIFJlbW92ZSB1bnVzZWQgQ1NTLgoKPiAqIPCfm6AgW1VuQ1NTIE9ubGlu
ZV0oaHR0cHM6Ly91bmNzcy1vbmxpbmUuY29tLykKPiAqIPCfm6AgW1B1cmlm
eUNTU10oaHR0cHM6Ly9naXRodWIuY29tL3B1cmlmeWNzcy9wdXJpZnljc3Mp
Cj4gKiDwn5ugIFtQdXJnZUNTU10oaHR0cHM6Ly9naXRodWIuY29tL0Z1bGxI
dW1hbi9wdXJnZWNzcykKPiAqIPCfm6AgW0Nocm9tZSBEZXZUb29scyBDb3Zl
cmFnZV0oaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vd2ViL3VwZGF0
ZXMvMjAxNy8wNC9kZXZ0b29scy1yZWxlYXNlLW5vdGVzI2NvdmVyYWdlKQoK
CiMjIyBDU1MgdGVzdGluZwoKKiBbIF0gKipTdHlsZWxpbnQ6KiogIVtIaWdo
XVtoaWdoX2ltZ10gQWxsIENTUyBvciBTQ1NTIGZpbGVzIGFyZSB3aXRob3V0
IGFueSBlcnJvcnMuCgo+ICog8J+boCBbc3R5bGVsaW50LCBhIENTUyBsaW50
ZXJdKGh0dHBzOi8vc3R5bGVsaW50LmlvLykKPiAqIPCfk5YgW1Nhc3MgZ3Vp
ZGVsaW5lc10oaHR0cHM6Ly9zYXNzLWd1aWRlbGluLmVzLykKCiogWyBdICoq
UmVzcG9uc2l2ZSB3ZWIgZGVzaWduOioqICFbSGlnaF1baGlnaF9pbWddIEFs
bCBwYWdlcyB3ZXJlIHRlc3RlZCBhdCB0aGUgZm9sbG93aW5nIGJyZWFrcG9p
bnRzOiAzMjBweCwgNzY4cHgsIDEwMjRweCAoY2FuIGJlIG1vcmUgLyBkaWZm
ZXJlbnQgYWNjb3JkaW5nIHRvIHlvdXIgYW5hbHl0aWNzKS4KCiogWyBdICoq
Q1NTIFZhbGlkYXRvcjoqKiAhW01lZGl1bV1bbWVkaXVtX2ltZ10gVGhlIENT
UyB3YXMgdGVzdGVkIGFuZCBwZXJ0aW5lbnQgZXJyb3JzIHdlcmUgY29ycmVj
dGVkLgoKPiAqIPCfm6AgW0NTUyBWYWxpZGF0b3JdKGh0dHBzOi8vamlnc2F3
LnczLm9yZy9jc3MtdmFsaWRhdG9yLykKCiogWyBdICoqRGVza3RvcCBCcm93
c2VyczoqKiAhW0hpZ2hdW2hpZ2hfaW1nXSBBbGwgcGFnZXMgd2VyZSB0ZXN0
ZWQgb24gYWxsIGN1cnJlbnQgZGVza3RvcCBicm93c2VycyAoU2FmYXJpLCBG
aXJlZm94LCBDaHJvbWUsIEludGVybmV0IEV4cGxvcmVyLCBFREdFLi4uKS4K
KiBbIF0gKipNb2JpbGUgQnJvd3NlcnM6KiogICFbSGlnaF1baGlnaF9pbWdd
IEFsbCBwYWdlcyB3ZXJlIHRlc3RlZCBvbiBhbGwgY3VycmVudCBtb2JpbGUg
YnJvd3NlcnMgKE5hdGl2ZSBicm93c2VyLCBDaHJvbWUsIFNhZmFyaS4uLiku
CiogWyBdICoqT1M6KiogICFbSGlnaF1baGlnaF9pbWddIEFsbCBwYWdlcyB3
ZXJlIHRlc3RlZCBvbiBhbGwgY3VycmVudCBPUyAoV2luZG93cywgQW5kcm9p
ZCwgaU9TLCBNYWMuLi4pLgoKLSBbIF0gKipEZXNpZ24gZmlkZWxpdHk6Kiog
IVtMb3ddW2xvd19pbWddIERlcGVuZGluZyB0aGUgcHJvamVjdCBhbmQgdGhl
IHF1YWxpdHkgb2YgdGhlIGNyZWF0aXZlcywgeW91IG1heSBiZSBhc2tlZCB0
byBiZSBjbG9zZSB0byB0aGUgZGVzaWduLiBZb3UgY2FuIHVzZSBzb21lIHRv
b2xzIHRvIGNvbXBhcmUgY3JlYXRpdmVzIHdpdGggeW91ciBjb2RlIGltcGxl
bWVudGF0aW9uIGFuZCBlbnN1cmUgY29uc2lzdGVuY3kuCgo+IFtQaXhlbCBQ
ZXJmZWN0IC0gQ2hyb21lIEV4dGVuc2lvbl0oaHR0cHM6Ly9jaHJvbWUuZ29v
Z2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvcGVyZmVjdHBpeGVsLWJ5LXdlbGxk
b25lYy9ka2FhZ2Rnam1nZG1ibmVjbWNlZmRoamVrY29jZWViaT9obD1lbikK
CiogWyBdICoqUmVhZGluZyBkaXJlY3Rpb246KiogIVtIaWdoXVtoaWdoX2lt
Z10gQWxsIHBhZ2VzIG5lZWQgdG8gYmUgdGVzdGVkIGZvciBMVFIgYW5kIFJU
TCBsYW5ndWFnZXMgaWYgdGhleSBuZWVkIHRvIGJlIHN1cHBvcnRlZC4KCj4g
KiDwn5OWIFtCdWlsZGluZyBSVEwtQXdhcmUgV2ViIEFwcHMgJiBXZWJzaXRl
czogUGFydCAxIC0gTW96aWxsYSBIYWNrc10oaHR0cHM6Ly9oYWNrcy5tb3pp
bGxhLm9yZy8yMDE1LzA5L2J1aWxkaW5nLXJ0bC1hd2FyZS13ZWItYXBwcy1h
bmQtd2Vic2l0ZXMtcGFydC0xLykKPiAqIPCfk5YgW0J1aWxkaW5nIFJUTC1B
d2FyZSBXZWIgQXBwcyAmIFdlYnNpdGVzOiBQYXJ0IDIgLSBNb3ppbGxhIEhh
Y2tzXShodHRwczovL2hhY2tzLm1vemlsbGEub3JnLzIwMTUvMTAvYnVpbGRp
bmctcnRsLWF3YXJlLXdlYi1hcHBzLXdlYnNpdGVzLXBhcnQtMi8pCgoqKlvi
rIYgYmFjayB0byB0b3BdKCN0YWJsZS1vZi1jb250ZW50cykqKgoKLS0tCgoj
IyBJbWFnZXMKCj4gKipOb3RlczoqKiBGb3IgYSBjb21wbGV0ZSB1bmRlcnN0
YW5kaW5nIG9mIGltYWdlIG9wdGltaXphdGlvbiwgY2hlY2sgdGhlIGZyZWUg
ZWJvb2sgKipbRXNzZW50aWFsIEltYWdlIE9wdGltaXphdGlvbl0oaHR0cHM6
Ly9pbWFnZXMuZ3VpZGUvKSoqIGZyb20gQWRkeSBPc21hbmkuCgojIyMgQmVz
dCBwcmFjdGljZXMKCiogWyBdICoqT3B0aW1pemF0aW9uOioqICFbSGlnaF1b
aGlnaF9pbWddIEFsbCBpbWFnZXMgYXJlIG9wdGltaXplZCB0byBiZSByZW5k
ZXJlZCBpbiB0aGUgYnJvd3Nlci4gV2ViUCBmb3JtYXQgY291bGQgYmUgdXNl
ZCBmb3IgY3JpdGljYWwgcGFnZXMgKGxpa2UgSG9tZXBhZ2UpLgoKPiAqIPCf
m6AgW0ltYWdlbWluXShodHRwczovL2dpdGh1Yi5jb20vaW1hZ2VtaW4vaW1h
Z2VtaW4pCj4gKiDwn5ugIFVzZSBbSW1hZ2VPcHRpbV0oaHR0cHM6Ly9pbWFn
ZW9wdGltLmNvbS8pIHRvIG9wdGltaXNlIHlvdXIgaW1hZ2VzIGZvciBmcmVl
Lgo+ICog8J+boCBVc2UgW0tyYWtlbi5pb10oaHR0cHM6Ly9rcmFrZW4uaW8v
d2ViLWludGVyZmFjZSkgYXdlc29tZSBhbHRlcm5hdGl2ZSBmb3IgYm90aCBw
bmcgYW5kIGpwZyBvcHRpbWl6YXRpb24uIFVwIHRvIDFtYiBwZXIgZmlsZXMg
b24gZnJlZSBwbGFuLgo+ICog8J+boCBbVGlueVBOR10oaHR0cHM6Ly90aW55
cG5nLmNvbS8pIGxvc3NsZXNzbHkgb3B0aW1pc2UgcG5nLCBhcG5nIChhbmlt
YXRlZCBwbmcpIGFuZCBqcGcgaW1hZ2VzLiBGcmVlIGFuZCBwYWlkIHZlcnNp
b24gYXZhaWxhYmxlLgo+ICog8J+boCBbWm9ycm9TVkddKGh0dHA6Ly9xdWFz
aW1vbmRvLmNvbS9ab3Jyb1NWRy8pIGpwZy1saWtlIGNvbXByZXNzaW9uIGZv
ciB0cmFuc3BhcmVudCBpbWFnZXMgdXNpbmcgc3ZnIG1hc2tpbmcuCj4gKiDw
n5ugIFtTVkdPXShodHRwczovL2dpdGh1Yi5jb20vc3ZnL3N2Z28pIGEgTm9k
ZWpzLWJhc2VkIHRvb2wgZm9yIG9wdGltaXppbmcgU1ZHIHZlY3RvciBncmFw
aGljcyBmaWxlcy4KPiAqIPCfm6AgW1NWR09NR10oaHR0cHM6Ly9qYWtlYXJj
aGliYWxkLmdpdGh1Yi5pby9zdmdvbWcvKSBhIHdlYi1iYXNlZCBHVUkgdmVy
c2lvbiBvZiBTVkdPIGZvciBvcHRpbWlzaW5nIHlvdXIgc3ZncyBvbmxpbmUu
CgoKKiBbIF0gKipQaWN0dXJlL1NyY3NldDoqKiAhW01lZGl1bV1bbWVkaXVt
X2ltZ10gWW91IHVzZSBwaWN0dXJlL3NyY3NldCB0byBwcm92aWRlIHRoZSBt
b3N0IGFwcHJvcHJpYXRlIGltYWdlIGZvciB0aGUgY3VycmVudCB2aWV3cG9y
dCBvZiB0aGUgdXNlci4KCj4gKiDwn5OWIFtIb3cgdG8gQnVpbGQgUmVzcG9u
c2l2ZSBJbWFnZXMgd2l0aCBzcmNzZXRdKGh0dHBzOi8vd3d3LnNpdGVwb2lu
dC5jb20vaG93LXRvLWJ1aWxkLXJlc3BvbnNpdmUtaW1hZ2VzLXdpdGgtc3Jj
c2V0LykKCiogWyBdICoqUmV0aW5hOioqICFbTG93XVtsb3dfaW1nXSBZb3Ug
cHJvdmlkZSBsYXlvdXQgaW1hZ2VzIDJ4IG9yIDN4LCBzdXBwb3J0IHJldGlu
YSBkaXNwbGF5LgoqIFsgXSAqKlNwcml0ZToqKiAhW01lZGl1bV1bbWVkaXVt
X2ltZ10gU21hbGwgaW1hZ2VzIGFyZSBpbiBhIHNwcml0ZSBmaWxlIChpbiB0
aGUgY2FzZSBvZiBpY29ucywgdGhleSBjYW4gYmUgaW4gYW4gU1ZHIHNwcml0
ZSBpbWFnZSkuCiogWyBdICoqV2lkdGggYW5kIEhlaWdodDoqKiAhW0hpZ2hd
W2hpZ2hfaW1nXSBTZXQgYHdpZHRoYCBhbmQgYGhlaWdodGAgYXR0cmlidXRl
cyBvbiBgPGltZz5gIGlmIHRoZSBmaW5hbCByZW5kZXJlZCBpbWFnZSBzaXpl
IGlzIGtub3duIChjYW4gYmUgb21pdHRlZCBmb3IgQ1NTIHNpemluZykuCiog
WyBdICoqQWx0ZXJuYXRpdmUgdGV4dDoqKiAhW0hpZ2hdW2hpZ2hfaW1nXSBB
bGwgYDxpbWc+YCBoYXZlIGFuIGFsdGVybmF0aXZlIHRleHQgd2hpY2ggZGVz
Y3JpYmUgdGhlIGltYWdlIHZpc3VhbGx5LgoKPiAqIPCfk5YgW0FsdC10ZXh0
czogVGhlIFVsdGltYXRlIEd1aWRlXShodHRwczovL2F4ZXNzbGFiLmNvbS9h
bHQtdGV4dHMvKQoKKiBbIF0gKipMYXp5IGxvYWRpbmc6KiogIVtNZWRpdW1d
W21lZGl1bV9pbWddIEltYWdlcyBhcmUgbGF6eWxvYWRlZCAoQSBub3Njcmlw
dCBmYWxsYmFjayBpcyBhbHdheXMgcHJvdmlkZWQpLgoKKipb4qyGIGJhY2sg
dG8gdG9wXSgjdGFibGUtb2YtY29udGVudHMpKioKCi0tLQoKIyMgSmF2YVNj
cmlwdAoKIyMjIEJlc3QgcHJhY3RpY2VzCgoqIFsgXSAqKkphdmFTY3JpcHQg
SW5saW5lOioqICFbSGlnaF1baGlnaF9pbWddIFlvdSBkb24ndCBoYXZlIGFu
eSBKYXZhU2NyaXB0IGNvZGUgaW5saW5lIChtaXhlZCB3aXRoIHlvdXIgSFRN
TCBjb2RlKS4KKiBbIF0gKipDb25jYXRlbmF0aW9uOioqICFbSGlnaF1baGln
aF9pbWddIEphdmFTY3JpcHQgZmlsZXMgYXJlIGNvbmNhdGVuYXRlZC4KKiBb
IF0gKipNaW5pZmljYXRpb246KiogIVtIaWdoXVtoaWdoX2ltZ10gSmF2YVNj
cmlwdCBmaWxlcyBhcmUgbWluaWZpZWQgKHlvdSBjYW4gYWRkIHRoZSBgLm1p
bmAgc3VmZml4KS4KCj4gKiDwn5OWIFtNaW5pZnkgUmVzb3VyY2VzIChIVE1M
LCBDU1MsIGFuZCBKYXZhU2NyaXB0KV0oaHR0cHM6Ly9kZXZlbG9wZXJzLmdv
b2dsZS5jb20vc3BlZWQvZG9jcy9pbnNpZ2h0cy9NaW5pZnlSZXNvdXJjZXMp
CgoqIFsgXSAqKkphdmFTY3JpcHQgc2VjdXJpdHk6KiogIVtIaWdoXVtoaWdo
X2ltZ10KCj4gKiDwn5OWIFtHdWlkZWxpbmVzIGZvciBEZXZlbG9waW5nIFNl
Y3VyZSBBcHBsaWNhdGlvbnMgVXRpbGl6aW5nIEphdmFTY3JpcHRdKGh0dHBz
Oi8vd3d3Lm93YXNwLm9yZy9pbmRleC5waHAvRE9NX2Jhc2VkX1hTU19QcmV2
ZW50aW9uX0NoZWF0X1NoZWV0I0d1aWRlbGluZXNfZm9yX0RldmVsb3Bpbmdf
U2VjdXJlX0FwcGxpY2F0aW9uc19VdGlsaXppbmdfSmF2YVNjcmlwdCkKCiog
WyBdICoqYG5vc2NyaXB0YCB0YWc6KiogIVtNZWRpdW1dW21lZGl1bV9pbWdd
IFVzZSBgPG5vc2NyaXB0PmAgdGFnIGluIHRoZSBIVE1MIGJvZHkgaWYgYSBz
Y3JpcHQgdHlwZSBvbiB0aGUgcGFnZSBpcyB1bnN1cHBvcnRlZCBvciBpZiBz
Y3JpcHRpbmcgaXMgY3VycmVudGx5IHR1cm5lZCBvZmYgaW4gdGhlIGJyb3dz
ZXIuIFRoaXMgd2lsbCBiZSBoZWxwZnVsIGluIGNsaWVudC1zaWRlIHJlbmRl
cmluZyBoZWF2eSBhcHBzIHN1Y2ggYXMgUmVhY3QuanMsIHNlZSBbZXhhbXBs
ZXNdKGh0dHBzOi8vd2ViZGVzaWduLnR1dHNwbHVzLmNvbS90dXRvcmlhbHMv
cXVpY2stdGlwLWRvbnQtZm9yZ2V0LXRoZS1ub3NjcmlwdC1lbGVtZW50LS1j
bXMtMjU0OTgpLgoKYGBgaHRtbAo8bm9zY3JpcHQ+CiAgWW91IG5lZWQgdG8g
ZW5hYmxlIEphdmFTY3JpcHQgdG8gcnVuIHRoaXMgYXBwLgo8L25vc2NyaXB0
PgpgYGAKCiogWyBdICoqTm9uLWJsb2NraW5nOioqICFbTWVkaXVtXVttZWRp
dW1faW1nXSBKYXZhU2NyaXB0IGZpbGVzIGFyZSBsb2FkZWQgYXN5bmNocm9u
b3VzbHkgdXNpbmcgYGFzeW5jYCBvciBkZWZlcnJlZCB1c2luZyBgZGVmZXJg
IGF0dHJpYnV0ZS4KCj4gKiDwn5OWIFtSZW1vdmUgUmVuZGVyLUJsb2NraW5n
IEphdmFTY3JpcHRdKGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL3Nw
ZWVkL2RvY3MvaW5zaWdodHMvQmxvY2tpbmdKUykKCiogWyBdICoqT3B0aW1p
emVkIGFuZCB1cGRhdGVkIEpTIGxpYnJhcmllczoqKiAhW01lZGl1bV1bbWVk
aXVtX2ltZ10gQWxsIEphdmFTY3JpcHQgbGlicmFyaWVzIHVzZWQgaW4geW91
ciBwcm9qZWN0IGFyZSBuZWNlc3NhcnkgKHByZWZlciBWYW5pbGxhIEphdmFz
Y3JpcHQgZm9yIHNpbXBsZSBmdW5jdGlvbmFsaXRpZXMpLCB1cGRhdGVkIHRv
IHRoZWlyIGxhdGVzdCB2ZXJzaW9uIGFuZCBkb24ndCBvdmVyd2hlbG0geW91
ciBKYXZhU2NyaXB0IHdpdGggdW5uZWNlc3NhcnkgbWV0aG9kcy4KCj4gKiDw
n5OWIFtZb3UgbWF5IG5vdCBuZWVkIGpRdWVyeV0oaHR0cDovL3lvdW1pZ2h0
bm90bmVlZGpxdWVyeS5jb20vKQo+ICog8J+TliBbVmFuaWxsYSBKYXZhU2Ny
aXB0IGZvciBidWlsZGluZyBwb3dlcmZ1bCB3ZWIgYXBwbGljYXRpb25zXSho
dHRwczovL3BsYWluanMuY29tLykKCiogWyBdICoqTW9kZXJuaXpyOioqICFb
TG93XVtsb3dfaW1nXSBJZiB5b3UgbmVlZCB0byB0YXJnZXQgc29tZSBzcGVj
aWZpYyBmZWF0dXJlcyB5b3UgY2FuIHVzZSBhIGN1c3RvbSBNb2Rlcm5penIg
dG8gYWRkIGNsYXNzZXMgaW4geW91ciBgPGh0bWw+YCB0YWcuCgo+ICog8J+b
oCBbQ3VzdG9taXplIHlvdXIgTW9kZXJuaXpyXShodHRwczovL21vZGVybml6
ci5jb20vZG93bmxvYWQ/c2V0Y2xhc3NlcykKCiMjIyBKYXZhU2NyaXB0IHRl
c3RpbmcKCiogWyBdICoqRVNMaW50OioqICFbSGlnaF1baGlnaF9pbWddIE5v
IGVycm9ycyBhcmUgZmxhZ2dlZCBieSBFU0xpbnQgKGJhc2VkIG9uIHlvdXIg
Y29uZmlndXJhdGlvbiBvciBzdGFuZGFyZHMgcnVsZXMpLgoKPiAqIPCfk5Yg
W0VTTGludCAtIFRoZSBwbHVnZ2FibGUgbGludGluZyB1dGlsaXR5IGZvciBK
YXZhU2NyaXB0IGFuZCBKU1hdKGh0dHBzOi8vZXNsaW50Lm9yZy8pCgoqKlvi
rIYgYmFjayB0byB0b3BdKCN0YWJsZS1vZi1jb250ZW50cykqKgoKLS0tCgoj
IyBTZWN1cml0eQoKIyMjIFNjYW4gYW5kIGNoZWNrIHlvdXIgd2ViIHNpdGUK
Cj4gKiBbc2VjdXJpdHloZWFkZXJzLmlvXShodHRwczovL3NlY3VyaXR5aGVh
ZGVycy5pby8pCj4gKiBbT2JzZXJ2YXRvcnkgYnkgTW96aWxsYV0oaHR0cHM6
Ly9vYnNlcnZhdG9yeS5tb3ppbGxhLm9yZy8pCgojIyMgQmVzdCBwcmFjdGlj
ZXMKCiogWyBdICoqSFRUUFM6KiogIVtIaWdoXVtoaWdoX2ltZ10gSFRUUFMg
aXMgdXNlZCBvbiBldmVyeSBwYWdlcyBhbmQgZm9yIGFsbCBleHRlcm5hbCBj
b250ZW50IChwbHVnaW5zLCBpbWFnZXMuLi4pLgoKPiAqIPCfm6AgW0xldCdz
IEVuY3J5cHQgLSBGcmVlIFNTTC9UTFMgQ2VydGlmaWNhdGVzXShodHRwczov
L2xldHNlbmNyeXB0Lm9yZy8pCj4gKiDwn5ugIFtGcmVlIFNTTCBTZXJ2ZXIg
VGVzdF0oaHR0cHM6Ly93d3cuc3NsbGFicy5jb20vc3NsdGVzdC9pbmRleC5o
dG1sKQo+ICog8J+TliBbU3RyaWN0IFRyYW5zcG9ydCBTZWN1cml0eV0oaHR0
cDovL2Nhbml1c2UuY29tLyNmZWF0PXN0cmljdHRyYW5zcG9ydHNlY3VyaXR5
KQoKKiBbIF0gKipIVFRQIFN0cmljdCBUcmFuc3BvcnQgU2VjdXJpdHkgKEhT
VFMpOioqICFbTWVkaXVtXVttZWRpdW1faW1nXSBUaGUgSFRUUCBoZWFkZXIg
aXMgc2V0IHRvICdTdHJpY3QtVHJhbnNwb3J0LVNlY3VyaXR5Jy4KCj4gKiDw
n5ugIFtDaGVjayBIU1RTIHByZWxvYWQgc3RhdHVzIGFuZCBlbGlnaWJpbGl0
eV0oaHR0cHM6Ly9oc3RzcHJlbG9hZC5vcmcvKQo+ICog8J+TliBbSFRUUCBT
dHJpY3QgVHJhbnNwb3J0IFNlY3VyaXR5IENoZWF0IFNoZWV0IC0gT1dBU1Bd
KGh0dHBzOi8vd3d3Lm93YXNwLm9yZy9pbmRleC5waHAvSFRUUF9TdHJpY3Rf
VHJhbnNwb3J0X1NlY3VyaXR5X0NoZWF0X1NoZWV0KQo+ICog8J+TliBbVHJh
bnNwb3J0IExheWVyIFByb3RlY3Rpb24gQ2hlYXQgU2hlZXQgLSBPV0FTUF0o
aHR0cHM6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9UcmFuc3BvcnRfTGF5
ZXJfUHJvdGVjdGlvbl9DaGVhdF9TaGVldCkKCiogWyBdICoqQ3Jvc3MgU2l0
ZSBSZXF1ZXN0IEZvcmdlcnkgKENTUkYpOioqICFbSGlnaF1baGlnaF9pbWdd
IFlvdSBlbnN1cmUgdGhhdCByZXF1ZXN0cyBtYWRlIHRvIHlvdXIgc2VydmVy
LXNpZGUgYXJlIGxlZ2l0aW1hdGUgYW5kIG9yaWdpbmF0ZSBmcm9tIHlvdXIg
d2Vic2l0ZSAvIGFwcCB0byBwcmV2ZW50IENTUkYgYXR0YWNrcy4KCj4gKiDw
n5OWIFtDcm9zcy1TaXRlIFJlcXVlc3QgRm9yZ2VyeSAoQ1NSRikgUHJldmVu
dGlvbiBDaGVhdCBTaGVldCAgLSBPV0FTUF0oaHR0cHM6Ly93d3cub3dhc3Au
b3JnL2luZGV4LnBocC9Dcm9zcy1TaXRlX1JlcXVlc3RfRm9yZ2VyeV8oQ1NS
RilfUHJldmVudGlvbl9DaGVhdF9TaGVldCkKCiogWyBdICoqQ3Jvc3MgU2l0
ZSBTY3JpcHRpbmcgKFhTUyk6KiogIVtIaWdoXVtoaWdoX2ltZ10gWW91ciBw
YWdlIG9yIHdlYnNpdGUgaXMgZnJlZSBmcm9tIFhTUyBwb3NzaWJsZSBpc3N1
ZXMuCgo+ICog8J+TliBbWFNTIChDcm9zcyBTaXRlIFNjcmlwdGluZykgUHJl
dmVudGlvbiBDaGVhdCBTaGVldCAgLSBPV0FTUF0oaHR0cHM6Ly93d3cub3dh
c3Aub3JnL2luZGV4LnBocC9YU1NfKENyb3NzX1NpdGVfU2NyaXB0aW5nKV9Q
cmV2ZW50aW9uX0NoZWF0X1NoZWV0KQo+ICog8J+TliBbRE9NIGJhc2VkIFhT
UyBQcmV2ZW50aW9uIENoZWF0IFNoZWV0ICAtIE9XQVNQXShodHRwczovL3d3
dy5vd2FzcC5vcmcvaW5kZXgucGhwL0RPTV9iYXNlZF9YU1NfUHJldmVudGlv
bl9DaGVhdF9TaGVldCkKCiogWyBdICoqQ29udGVudCBUeXBlIE9wdGlvbnM6
KiogIVtNZWRpdW1dW21lZGl1bV9pbWddIFByZXZlbnRzIEdvb2dsZSBDaHJv
bWUgYW5kIEludGVybmV0IEV4cGxvcmVyIGZyb20gdHJ5aW5nIHRvIG1pbWUt
c25pZmYgdGhlIGNvbnRlbnQtdHlwZSBvZiBhIHJlc3BvbnNlIGF3YXkgZnJv
bSB0aGUgb25lIGJlaW5nIGRlY2xhcmVkIGJ5IHRoZSBzZXJ2ZXIuCgo+ICog
8J+TliBbWC1Db250ZW50LVR5cGUtT3B0aW9ucyAtIFNjb3R0IEhlbG1lXSho
dHRwczovL3Njb3R0aGVsbWUuY28udWsvaGFyZGVuaW5nLXlvdXItaHR0cC1y
ZXNwb25zZS1oZWFkZXJzLyN4LWNvbnRlbnQtdHlwZS1vcHRpb25zKQoKKiBb
IF0gKipYLUZyYW1lLU9wdGlvbnMgKFhGTyk6KiogIVtNZWRpdW1dW21lZGl1
bV9pbWddIFByb3RlY3RzIHlvdXIgdmlzaXRvcnMgYWdhaW5zdCBjbGlja2ph
Y2tpbmcgYXR0YWNrcy4KCj4gKiDwn5OWIFtYLUZyYW1lLU9wdGlvbnMgLSBT
Y290dCBIZWxtZV0oaHR0cHM6Ly9zY290dGhlbG1lLmNvLnVrL2hhcmRlbmlu
Zy15b3VyLWh0dHAtcmVzcG9uc2UtaGVhZGVycy8jeC1mcmFtZS1vcHRpb25z
KQo+ICog8J+TliBbUkZDNzAzNCAtIEhUVFAgSGVhZGVyIEZpZWxkIFgtRnJh
bWUtT3B0aW9uc10oaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzcw
MzQpCgoqIFsgXSAqKkNvbnRlbnQgU2VjdXJpdHkgUG9saWN5OioqICFbTWVk
aXVtXVttZWRpdW1faW1nXSBEZWZpbmVzIGhvdyBjb250ZW50IGlzIGxvYWRl
ZCBvbiB5b3VyIHNpdGUgYW5kIGZyb20gd2hlcmUgaXQgaXMgcGVybWl0dGVk
IHRvIGJlIGxvYWRlZC4gQ2FuIGFsc28gYmUgdXNlZCB0byBwcm90ZWN0IGFn
YWluc3QgY2xpY2tqYWNraW5nIGF0dGFja3MuCgo+ICog8J+TliBbQ29udGVu
dCBTZWN1cml0eSBQb2xpY3kgLSBBbiBJbnRyb2R1Y3Rpb24gLSBTY290dCBI
ZWxtZV0oaHR0cHM6Ly9zY290dGhlbG1lLmNvLnVrL2NvbnRlbnQtc2VjdXJp
dHktcG9saWN5LWFuLWludHJvZHVjdGlvbi8pCj4gKiDwn5OWIFtDU1AgQ2hl
YXQgU2hlZXQgLSBTY290dCBIZWxtZV0oaHR0cHM6Ly9zY290dGhlbG1lLmNv
LnVrL2NzcC1jaGVhdC1zaGVldC8pCj4gKiDwn5OWIFtDU1AgQ2hlYXQgU2hl
ZXQgLSBPV0FTUF0oaHR0cHM6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9D
b250ZW50X1NlY3VyaXR5X1BvbGljeV9DaGVhdF9TaGVldCkKPiAqIPCfk5Yg
W0NvbnRlbnQgU2VjdXJpdHkgUG9saWN5IFJlZmVyZW5jZV0oaHR0cHM6Ly9j
b250ZW50LXNlY3VyaXR5LXBvbGljeS5jb20vKQoKKipb4qyGIGJhY2sgdG8g
dG9wXSgjdGFibGUtb2YtY29udGVudHMpKioKCi0tLQoKIyMgUGVyZm9ybWFu
Y2UKCiMjIyBCZXN0IHByYWN0aWNlcwoKLSBbIF0gKipHb2FscyB0byBhY2hp
ZXZlOioqICFbTWVkaXVtXVttZWRpdW1faW1nXSBZb3VyIHBhZ2VzIHNob3Vs
ZCByZWFjaCB0aGVzZSBnb2FsczoKICAtIEZpcnN0IE1lYW5pbmdmdWwgUGFp
bnQgdW5kZXIgMSBzZWNvbmQKICAtIFRpbWUgVG8gSW50ZXJhY3RpdmUgdW5k
ZXIgNSBzZWNvbmRzIGZvciB0aGUgImF2ZXJhZ2UiIGNvbmZpZ3VyYXRpb24g
KGEgJDIwMCBBbmRyb2lkIG9uIGEgc2xvdyAzRyBuZXR3b3JrIHdpdGggNDAw
bXMgUlRUIGFuZCA0MDBrYnBzIHRyYW5zZmVyIHNwZWVkKSBhbmQgdW5kZXIg
MiBzZWNvbmRzIGZvciByZXBlYXQgdmlzaXRzCiAgLSBDcml0aWNhbCBmaWxl
IHNpemUgdW5kZXIgMTcwS2IgZ3ppcHBlZAoKPiAqIPCfm6AgW1dlYnNpdGUg
UGFnZSBBbmFseXNpc10oaHR0cHM6Ly90b29scy5waW5nZG9tLmNvbSkKPiAq
IPCfm6AgW1dlYlBhZ2VUZXN0XShodHRwczovL3d3dy53ZWJwYWdldGVzdC5v
cmcvKQo+ICog8J+TliBbU2l6ZSBMaW1pdDogTWFrZSB0aGUgV2ViIGxpZ2h0
ZXJdKGh0dHBzOi8vZXZpbG1hcnRpYW5zLmNvbS9jaHJvbmljbGVzL3NpemUt
bGltaXQtbWFrZS10aGUtd2ViLWxpZ2h0ZXIpCgoqIFsgXSAqKk1pbmlmaWVk
IEhUTUw6KiogIVtNZWRpdW1dW21lZGl1bV9pbWddIFlvdXIgSFRNTCBpcyBt
aW5pZmllZC4KCiogWyBdICoqTGF6eSBsb2FkaW5nOioqICFbTWVkaXVtXVtt
ZWRpdW1faW1nXSBJbWFnZXMsIHNjcmlwdHMgYW5kIENTUyBuZWVkIHRvIGJl
IGxhenkgbG9hZGVkIHRvIGltcHJvdmUgdGhlIHJlc3BvbnNlIHRpbWUgb2Yg
dGhlIGN1cnJlbnQgcGFnZSAoU2VlIGRldGFpbHMgaW4gdGhlaXIgcmVzcGVj
dGl2ZSBzZWN0aW9ucykuCgoqIFsgXSAqKkNvb2tpZSBzaXplOioqICFbTWVk
aXVtXVttZWRpdW1faW1nXSBJZiB5b3UgYXJlIHVzaW5nIGNvb2tpZXMgYmUg
c3VyZSBlYWNoIGNvb2tpZSBkb2Vzbid0IGV4Y2VlZCA0MDk2IGJ5dGVzIGFu
ZCB5b3VyIGRvbWFpbiBuYW1lIGRvZXNuJ3QgaGF2ZSBtb3JlIHRoYW4gMjAg
Y29va2llcy4KCj4gKiDwn5OWIFtDb29raWUgc3BlY2lmaWNhdGlvbjogUkZD
IDYyNjVdKGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM2MjY1KQo+
ICog8J+TliBbQ29va2llc10oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5v
cmcvZW4tVVMvZG9jcy9XZWIvSFRUUC9Db29raWVzKQo+ICog8J+boCBbQnJv
d3NlciBDb29raWUgTGltaXRzXShodHRwOi8vYnJvd3NlcmNvb2tpZWxpbWl0
cy5zcXVhd2t5Lm5ldC8pCgoqIFsgXSAqKlRoaXJkIHBhcnR5IGNvbXBvbmVu
dHM6KiogIVtNZWRpdW1dW21lZGl1bV9pbWddIFRoaXJkIHBhcnR5IGlmcmFt
ZXMgb3IgY29tcG9uZW50cyByZWx5aW5nIG9uIGV4dGVybmFsIEpTIChsaWtl
IHNoYXJpbmcgYnV0dG9ucykgYXJlIHJlcGxhY2VkIGJ5IHN0YXRpYyBjb21w
b25lbnRzIHdoZW4gcG9zc2libGUsIHRodXMgbGltaXRpbmcgY2FsbHMgdG8g
ZXh0ZXJuYWwgQVBJcyBhbmQga2VlcGluZyB5b3VyIHVzZXJzIGFjdGl2aXR5
IHByaXZhdGUuCgo+ICog8J+boCBbU2ltcGxlIHNoYXJpbmcgYnV0dG9ucyBn
ZW5lcmF0b3JdKGh0dHBzOi8vc2ltcGxlc2hhcmluZ2J1dHRvbnMuY29tLykK
CiMjIyBQcmVwYXJpbmcgdXBjb21pbmcgcmVxdWVzdHMKCj4gKiDwn5OWIFtF
eHBsYW5hdGlvbiBvZiB0aGUgZm9sbG93aW5nIHRlY2huaXF1ZXNdKGh0dHBz
Oi8vY3NzLXRyaWNrcy5jb20vcHJlZmV0Y2hpbmctcHJlbG9hZGluZy1wcmVi
cm93c2luZy8pCgoqIFsgXSAqKkROUyByZXNvbHV0aW9uOioqICFbTG93XVts
b3dfaW1nXSBETlMgb2YgdGhpcmQtcGFydHkgc2VydmljZXMgdGhhdCBtYXkg
YmUgbmVlZGVkIGFyZSByZXNvbHZlZCBpbiBhZHZhbmNlIGR1cmluZyBpZGxl
IHRpbWUgdXNpbmcgYGRucy1wcmVmZXRjaGAuCgpgYGBodG1sCjxsaW5rIHJl
bD0iZG5zLXByZWZldGNoIiBocmVmPSJodHRwczovL2V4YW1wbGUuY29tIj4K
YGBgCgoqIFsgXSAqKlByZWNvbm5lY3Rpb246KiogIVtMb3ddW2xvd19pbWdd
IEROUyBsb29rdXAsIFRDUCBoYW5kc2hha2UgYW5kIFRMUyBuZWdvdGlhdGlv
biB3aXRoIHNlcnZpY2VzIHRoYXQgd2lsbCBiZSBuZWVkZWQgc29vbiBpcyBk
b25lIGluIGFkdmFuY2UgZHVyaW5nIGlkbGUgdGltZSB1c2luZyBgcHJlY29u
bmVjdGAuCgpgYGBodG1sCjxsaW5rIHJlbD0icHJlY29ubmVjdCIgaHJlZj0i
aHR0cHM6Ly9leGFtcGxlLmNvbSI+CmBgYAoKKiBbIF0gKipQcmVmZXRjaGlu
ZzoqKiAhW0xvd11bbG93X2ltZ10gUmVzb3VyY2VzIHRoYXQgd2lsbCBiZSBu
ZWVkZWQgc29vbiAoZS5nLiBsYXp5IGxvYWRlZCBpbWFnZXMpIGFyZSByZXF1
ZXN0ZWQgaW4gYWR2YW5jZSBkdXJpbmcgaWRsZSB0aW1lIHVzaW5nIGBwcmVm
ZXRjaGAuCgpgYGBodG1sCjxsaW5rIHJlbD0icHJlZmV0Y2giIGhyZWY9Imlt
YWdlLnBuZyI+CmBgYAoKKiBbIF0gKipQcmVsb2FkaW5nOioqICFbTG93XVts
b3dfaW1nXSBSZXNvdXJjZXMgbmVlZGVkIGluIHRoZSBjdXJyZW50IHBhZ2Ug
KGUuZy4gc2NyaXB0cyBwbGFjZWQgYXQgdGhlIGVuZCBvZiBgPGJvZHk+YCkg
aW4gYWR2YW5jZSB1c2luZyBgcHJlbG9hZGAuCgpgYGBodG1sCjxsaW5rIHJl
bD0icHJlbG9hZCIgaHJlZj0iYXBwLmpzIj4KYGBgCgo+ICog8J+TliBbRGlm
ZmVyZW5jZSBiZXR3ZWVuIHByZWZldGNoIGFuZCBwcmVsb2FkXShodHRwczov
L21lZGl1bS5jb20vcmVsb2FkaW5nL3ByZWxvYWQtcHJlZmV0Y2gtYW5kLXBy
aW9yaXRpZXMtaW4tY2hyb21lLTc3NjE2NTk2MWJiZikKCiMjIyBQZXJmb3Jt
YW5jZSB0ZXN0aW5nCgoqIFsgXSAqKkdvb2dsZSBQYWdlU3BlZWQ6KiogIVtI
aWdoXVtoaWdoX2ltZ10gQWxsIHlvdXIgcGFnZXMgd2VyZSB0ZXN0ZWQgKG5v
dCBvbmx5IHRoZSBob21lcGFnZSkgYW5kIGhhdmUgYSBzY29yZSBvZiBhdCBs
ZWFzdCA5MC8xMDAuCgo+ICog8J+boCBbR29vZ2xlIFBhZ2VTcGVlZF0oaHR0
cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vc3BlZWQvcGFnZXNwZWVkL2lu
c2lnaHRzLykKPiAqIPCfm6AgW1Rlc3QgeW91ciBtb2JpbGUgc3BlZWQgd2l0
aCBHb29nbGVdKGh0dHBzOi8vdGVzdG15c2l0ZS53aXRoZ29vZ2xlLmNvbSkK
PiAqIPCfm6AgW1dlYlBhZ2V0ZXN0IC0gV2Vic2l0ZSBQZXJmb3JtYW5jZSBh
bmQgT3B0aW1pemF0aW9uIFRlc3RdKGh0dHBzOi8vd3d3LndlYnBhZ2V0ZXN0
Lm9yZy8pCj4gKiDwn5ugIFtHVG1ldHJpeCAtIFdlYnNpdGUgc3BlZWQgYW5k
IHBlcmZvcm1hbmNlIG9wdGltaXphdGlvbl0oaHR0cHM6Ly9ndG1ldHJpeC5j
b20vKQo+ICog8J+boCBbU3BlZWRyYW5rIC0gSW1wcm92ZSB0aGUgcGVyZm9y
bWFuY2Ugb2YgeW91ciB3ZWJzaXRlXShodHRwczovL3NwZWVkcmFuay5hcHAv
KQoKKipb4qyGIGJhY2sgdG8gdG9wXSgjdGFibGUtb2YtY29udGVudHMpKioK
Ci0tLQoKIyMgQWNjZXNzaWJpbGl0eQoKPiAqKk5vdGVzOioqIFlvdSBjYW4g
d2F0Y2ggdGhlIHBsYXlsaXN0IFtBMTF5Y2FzdHMgd2l0aCBSb2IgRG9kc29u
XShodHRwczovL3d3dy55b3V0dWJlLmNvbS9wbGF5bGlzdD9saXN0PVBMTllr
eE9GNnJjSUNXeDBDOUxWV1dWcXZIbFlKeXF3N2cpIPCfk7kKCiMjIyBCZXN0
IHByYWN0aWNlcwoKLSBbIF0gKipQcm9ncmVzc2l2ZSBlbmhhbmNlbWVudDoq
KiAhW01lZGl1bV1bbWVkaXVtX2ltZ10gTWFqb3IgZnVuY3Rpb25hbGl0eSBs
aWtlIG1haW4gbmF2aWdhdGlvbiBhbmQgc2VhcmNoIHNob3VsZCB3b3JrIHdp
dGhvdXQgSmF2YVNjcmlwdCBlbmFibGVkLgoKPiAqIPCfk5YgW0VuYWJsZSAv
IERpc2FibGUgSmF2YVNjcmlwdCBpbiBDaHJvbWUgRGV2ZWxvcGVyIFRvb2xz
XShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWtCbXZxMmNFMEQ4
KQoKLSBbIF0gKipDb2xvciBjb250cmFzdDoqKiAhW01lZGl1bV1bbWVkaXVt
X2ltZ10gQ29sb3IgY29udHJhc3Qgc2hvdWxkIGF0IGxlYXN0IHBhc3MgV0NB
RyBBQSAoQUFBIGZvciBtb2JpbGUpLgoKPiAqIPCfm6AgW0NvbnRyYXN0IHJh
dGlvXShodHRwczovL2xlYXZlcm91LmdpdGh1Yi5pby9jb250cmFzdC1yYXRp
by8pCgojIyMjIEhlYWRpbmdzCgoqIFsgXSAqKkgxOioqICFbSGlnaF1baGln
aF9pbWddIEFsbCBwYWdlcyBoYXZlIGFuIEgxIHdoaWNoIGlzIG5vdCB0aGUg
dGl0bGUgb2YgdGhlIHdlYnNpdGUuCiogWyBdICoqSGVhZGluZ3M6KiogIVtI
aWdoXVtoaWdoX2ltZ10gSGVhZGluZ3Mgc2hvdWxkIGJlIHVzZWQgcHJvcGVy
bHkgYW5kIGluIHRoZSByaWdodCBvcmRlciAoSDEgdG8gSDYpLgoKPiAqIPCf
k7kgW1doeSBoZWFkaW5ncyBhbmQgbGFuZG1hcmtzIGFyZSBzbyBpbXBvcnRh
bnQgLS0gQTExeWNhc3RzICMxOF0oaHR0cHM6Ly93d3cueW91dHViZS5jb20v
d2F0Y2g/dj12QUF6ZGkxeHVVWSZpbmRleD05Jmxpc3Q9UExOWWt4T0Y2cmNJ
Q1d4MEM5TFZXV1ZxdkhsWUp5cXc3ZykKCiMjIyBTZW1hbnRpY3MKCi0gWyBd
ICoqU3BlY2lmaWMgSFRNTDUgaW5wdXQgdHlwZXMgYXJlIHVzZWQ6KiogIVtN
ZWRpdW1dW21lZGl1bV9pbWddIFRoaXMgaXMgZXNwZWNpYWxseSBpbXBvcnRh
bnQgZm9yIG1vYmlsZSBkZXZpY2VzIHRoYXQgc2hvdyBjdXN0b21pemVkIGtl
eXBhZHMgYW5kIHdpZGdldHMgZm9yIGRpZmZlcmVudCB0eXBlcy4KCj4gKiDw
n5OWIFtNb2JpbGUgSW5wdXQgVHlwZXNdKGh0dHA6Ly9tb2JpbGVpbnB1dHR5
cGVzLmNvbS8pCgojIyMgRm9ybQoKKiBbIF0gKipMYWJlbDoqKiAhW0hpZ2hd
W2hpZ2hfaW1nXSBBIGxhYmVsIGlzIGFzc29jaWF0ZWQgd2l0aCBlYWNoIGlu
cHV0IGZvcm0gZWxlbWVudC4gSW4gY2FzZSBhIGxhYmVsIGNhbid0IGJlIGRp
c3BsYXllZCwgdXNlIGBhcmlhLWxhYmVsYCBpbnN0ZWFkLgoKPiAqIPCfk5Yg
W1VzaW5nIHRoZSBhcmlhLWxhYmVsIGF0dHJpYnV0ZSAtIE1ETl0oaHR0cHM6
Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQWNjZXNz
aWJpbGl0eS9BUklBL0FSSUFfVGVjaG5pcXVlcy9Vc2luZ190aGVfYXJpYS1s
YWJlbF9hdHRyaWJ1dGUpCgojIyMgQWNjZXNzaWJpbGl0eSB0ZXN0aW5nCgoq
IFsgXSAqKkFjY2Vzc2liaWxpdHkgc3RhbmRhcmRzIHRlc3Rpbmc6KiogIVtI
aWdoXVtoaWdoX2ltZ10gVXNlIHRoZSBXQVZFIHRvb2wgdG8gdGVzdCBpZiB5
b3VyIHBhZ2UgcmVzcGVjdHMgdGhlIGFjY2Vzc2liaWxpdHkgc3RhbmRhcmRz
LgoKPiAqIPCfm6AgW1dhdmUgdGVzdGluZ10oaHR0cDovL3dhdmUud2ViYWlt
Lm9yZy8pCgoqIFsgXSAqKktleWJvYXJkIG5hdmlnYXRpb246KiogIVtIaWdo
XVtoaWdoX2ltZ10gVGVzdCB5b3VyIHdlYnNpdGUgdXNpbmcgb25seSB5b3Vy
IGtleWJvYXJkIGluIGEgcHJldmlzaWJsZSBvcmRlci4gQWxsIGludGVyYWN0
aXZlIGVsZW1lbnRzIGFyZSByZWFjaGFibGUgYW5kIHVzYWJsZS4KKiBbIF0g
KipTY3JlZW4tcmVhZGVyOioqICFbTWVkaXVtXVttZWRpdW1faW1nXSBBbGwg
cGFnZXMgd2VyZSB0ZXN0ZWQgaW4gYSBzY3JlZW4tcmVhZGVyIChWb2ljZU92
ZXIsIENocm9tZVZveCwgTlZEQSBvciBMeW54KS4KKiBbIF0gKipGb2N1cyBz
dHlsZToqKiAhW0hpZ2hdW2hpZ2hfaW1nXSBJZiB0aGUgZm9jdXMgaXMgZGlz
YWJsZWQsIGl0IGlzIHJlcGxhY2VkIGJ5IHZpc2libGUgc3RhdGUgaW4gQ1NT
LgoKPiAqIPCfk7kgW01hbmFnaW5nIEZvY3VzIC0gQTExeWNhc3RzICMyMl0o
aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1zckxSU1FnNkpnZyZp
bmRleD01Jmxpc3Q9UExOWWt4T0Y2cmNJQ1d4MEM5TFZXV1ZxdkhsWUp5cXc3
ZykKCioqW+KshiBiYWNrIHRvIHRvcF0oI3RhYmxlLW9mLWNvbnRlbnRzKSoq
CgotLS0KCiMjIFNFTwoKKiBbIF0gKipHb29nbGUgQW5hbHl0aWNzOioqICFb
SGlnaF1baGlnaF9pbWddIEdvb2dsZSBBbmFseXRpY3MgaXMgaW5zdGFsbGVk
IGFuZCBjb3JyZWN0bHkgY29uZmlndXJlZC4KCj4gKiDwn5ugIFtHb29nbGUg
QW5hbHl0aWNzXShodHRwczovL2FuYWx5dGljcy5nb29nbGUuY29tL2FuYWx5
dGljcy93ZWIvKQo+ICog8J+boCBbR0EgQ2hlY2tlciAoYW5kIG90aGVycyld
KGh0dHA6Ly93d3cuZ2FjaGVja2VyLmNvbS8pCgoqIFsgXSAqKkhlYWRpbmdz
IGxvZ2ljOioqICFbTWVkaXVtXVttZWRpdW1faW1nXSBIZWFkaW5nIHRleHQg
aGVscHMgdG8gdW5kZXJzdGFuZCB0aGUgY29udGVudCBpbiB0aGUgY3VycmVu
dCBwYWdlLgoKPiAqIPCfm6AgW1RvdGExMXksIHRhYiBIZWFkaW5nc10oaHR0
cDovL2toYW4uZ2l0aHViLmlvL3RvdGExMXkvI1RyeS1pdCkKCiogWyBdICoq
c2l0ZW1hcC54bWw6KiogIVtIaWdoXVtoaWdoX2ltZ10gQSBzaXRlbWFwLnht
bCBleGlzdHMgYW5kIHdhcyBzdWJtaXR0ZWQgdG8gR29vZ2xlIFNlYXJjaCBD
b25zb2xlIChwcmV2aW91c2x5IEdvb2dsZSBXZWJtYXN0ZXIgVG9vbHMpLgoK
PiAqIPCfm6AgW1NpdGVtYXAgZ2VuZXJhdG9yXShodHRwczovL3dlYnNpdGVz
ZW9jaGVja2VyLmNvbS9odG1sLXNpdGVtYXAtZ2VuZXJhdG9yLykKCiogWyBd
ICoqcm9ib3RzLnR4dDoqKiAhW0hpZ2hdW2hpZ2hfaW1nXSBUaGUgcm9ib3Rz
LnR4dCBpcyBub3QgYmxvY2tpbmcgd2VicGFnZXMuCgo+ICog8J+TliBbVGhl
IHJvYm90cy50eHQgZmlsZV0oaHR0cHM6Ly92YXJ2eS5jb20vcm9ib3R0eHQu
aHRtbCkKPiAqIPCfm6AgVGVzdCB5b3VyIHJvYm90cy50eHQgd2l0aCBbR29v
Z2xlIFJvYm90cyBUZXN0aW5nIFRvb2xdKGh0dHBzOi8vd3d3Lmdvb2dsZS5j
b20vd2VibWFzdGVycy90b29scy9yb2JvdHMtdGVzdGluZy10b29sKQoKKiBb
IF0gKipTdHJ1Y3R1cmVkIERhdGE6KiogIVtIaWdoXVtoaWdoX2ltZ10gUGFn
ZXMgdXNpbmcgc3RydWN0dXJlZCBkYXRhIGFyZSB0ZXN0ZWQgYW5kIGFyZSB3
aXRob3V0IGVycm9ycy4gU3RydWN0dXJlZCBkYXRhIGhlbHBzIGNyYXdsZXJz
IHVuZGVyc3RhbmQgdGhlIGNvbnRlbnQgaW4gdGhlIGN1cnJlbnQgcGFnZS4K
Cj4gKiDwn5OWIFtJbnRyb2R1Y3Rpb24gdG8gU3RydWN0dXJlZCBEYXRhIC0g
U2VhcmNoIC0gR29vZ2xlIERldmVsb3BlcnNdKGh0dHBzOi8vZGV2ZWxvcGVy
cy5nb29nbGUuY29tL3NlYXJjaC9kb2NzL2d1aWRlcy9pbnRyby1zdHJ1Y3R1
cmVkLWRhdGEpCj4gKiDwn5OWIFtSREZhIC0gTGlua2VkIERhdGEgaW4gSFRN
TF0oaHR0cHM6Ly9yZGZhLmluZm8vKQo+ICog8J+TliBbSlNPTi1MRF0oaHR0
cHM6Ly9qc29uLWxkLm9yZy8pCj4gKiDwn5OWIFtNaWNyb2RhdGFdKGh0dHBz
Oi8vd3d3LnczLm9yZy9UUi9taWNyb2RhdGEvKQo+ICog8J+boCBUZXN0IHlv
dXIgcGFnZSB3aXRoIHRoZSBbU3RydWN0dXJlZCBEYXRhIFRlc3RpbmcgVG9v
bF0oaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vc3RydWN0dXJlZC1k
YXRhL3Rlc3RpbmctdG9vbC8pCj4gKiDwn5ugIENvbXBsZXRlIGxpc3Qgb2Yg
dm9jYWJ1bGFyaWVzIHRoYXQgY2FuIGJlIHVzZWQgYXMgc3RydWN0dXJlZCBk
YXRhLiBbU2NoZW1hLm9yZyBGdWxsIEhpZXJhcmNoeV0oaHR0cDovL3NjaGVt
YS5vcmcvZG9jcy9mdWxsLmh0bWwpCgoqIFsgXSAqKlNpdGVtYXAgSFRNTDoq
KiAhW01lZGl1bV1bbWVkaXVtX2ltZ10gQW4gSFRNTCBzaXRlbWFwIGlzIHBy
b3ZpZGVkIGFuZCBpcyBhY2Nlc3NpYmxlIHZpYSBhIGxpbmsgaW4gdGhlIGZv
b3RlciBvZiB5b3VyIHdlYnNpdGUuCgo+ICog8J+TliBbU2l0ZW1hcCBndWlk
ZWxpbmVzIC0gR29vZ2xlIFN1cHBvcnRdKGh0dHBzOi8vc3VwcG9ydC5nb29n
bGUuY29tL3dlYm1hc3RlcnMvYW5zd2VyLzE4MzY2OD9obD1lbikKCiogWyBd
ICoqUGFnaW5hdGlvbiBsaW5rIHRhZ3M6KiogIVtNZWRpdW1dW21lZGl1bV9p
bWddIFByb3ZpZGUgYHJlbD0icHJldiJgIGFuZCBgcmVsPSJuZXh0ImAgdG8g
aW5kaWNhdGUgcGFnaW5hdGVkIGNvbnRlbnQuCgo+ICog8J+boCBbUGFnaW5h
dGlvbiAocmVsPSJwcmV2L25leHQiKSBUZXN0aW5nIFRvb2xdKGh0dHBzOi8v
dGVjaG5pY2Fsc2VvLmNvbS9zZW8tdG9vbHMvcmVsLXByZXYtbmV4dC8pCgo+
ICog8J+TliBbUGFnaW5hdGlvbiBndWlkZWxpbmVzIC0gR29vZ2xlIFN1cHBv
cnRdKGh0dHBzOi8vc3VwcG9ydC5nb29nbGUuY29tL3dlYm1hc3RlcnMvYW5z
d2VyLzE2NjM3NDQ/aGw9ZW4pCgpgYGBodG1sCjwhLS0gRXhhbXBsZTogUGFn
aW5hdGlvbiBsaW5rIHRhZ3MgZm9yIHBhZ2UgMiBvZiBhIHBhZ2luYXRlZCBs
aXN0IC0tPgo8bGluayByZWw9InByZXYiIGhyZWY9Imh0dHBzOi8vZXhhbXBs
ZS5jb20vP3BhZ2U9MSI+CjxsaW5rIHJlbD0ibmV4dCIgaHJlZj0iaHR0cHM6
Ly9leGFtcGxlLmNvbS8/cGFnZT0zIj4KYGBgCgoqKlvirIYgYmFjayB0byB0
b3BdKCN0YWJsZS1vZi1jb250ZW50cykqKgoKLS0tCgojIyBUcmFuc2xhdGlv
bnMKClRoZSBGcm9udC1FbmQgQ2hlY2tsaXN0IGlzIGFsc28gYXZhaWxhYmxl
IGluIG90aGVyIGxhbmd1YWdlcy4gVGhhbmtzIGZvciBhbGwgdHJhbnNsYXRv
cnMgYW5kIHRoZWlyIGF3ZXNvbWUgd29yayEKCiog8J+Hr/Cfh7UgSmFwYW5l
c2U6IFttaXlhMDAwMS9Gcm9udC1FbmQtQ2hlY2tsaXN0XShodHRwczovL2dp
dGh1Yi5jb20vbWl5YTAwMDEvRnJvbnQtRW5kLUNoZWNrbGlzdCkKKiDwn4eq
8J+HuCBTcGFuaXNoOiBbZW9hc2FrdXJhL0Zyb250LUVuZC1DaGVja2xpc3Qt
RVNdKGh0dHBzOi8vZ2l0aHViLmNvbS9lb2FzYWt1cmEvRnJvbnQtRW5kLUNo
ZWNrbGlzdC1FUykKKiDwn4eo8J+HsyBDaGluZXNlOiBbSm9obnNlblpob3Uv
RnJvbnQtRW5kLUNoZWNrbGlzdF0oaHR0cHM6Ly9naXRodWIuY29tL0pvaG5z
ZW5aaG91L0Zyb250LUVuZC1DaGVja2xpc3QpCiog8J+HsPCfh7cgS29yZWFu
OiBba2VzdXNraW0vRnJvbnQtRW5kLUNoZWNrbGlzdF0oaHR0cHM6Ly9naXRo
dWIuY29tL2tlc3Vza2ltL0Zyb250LUVuZC1DaGVja2xpc3QpCiog8J+Hp/Cf
h7cgUG9ydHVndWVzZTogW2pjZXphcm1zL0Zyb250LUVuZC1DaGVja2xpc3Rd
KGh0dHBzOi8vZ2l0aHViLmNvbS9qY2V6YXJtcy9Gcm9udC1FbmQtQ2hlY2ts
aXN0KQoqIPCfh7vwn4ezIFZpZXRuYW1lc2U6IFtldWNsaWQxOTkwL0Zyb250
LUVuZC1DaGVja2xpc3RdKGh0dHBzOi8vZ2l0aHViLmNvbS9ldWNsaWQxOTkw
L0Zyb250LUVuZC1DaGVja2xpc3QpCiog8J+HufCfh7wgVHJhZGl0aW9uYWwg
Q2hpbmVzZTogW0VuZ2luZUxpbi9Gcm9udC1FbmQtQ2hlY2tsaXN0XShodHRw
czovL2dpdGh1Yi5jb20vRW5naW5lTGluL0Zyb250LUVuZC1DaGVja2xpc3Qp
Ciog8J+Hq/Cfh7cgRnJlbmNoOiBbeW5pem9uL0Zyb250LUVuZC1DaGVja2xp
c3RdKGh0dHBzOi8vZ2l0aHViLmNvbS95bml6b24vRnJvbnQtRW5kLUNoZWNr
bGlzdCkKKiDwn4e38J+HuiBSdXNzaWFuOiBbdW5nZWFyL0Zyb250LUVuZC1D
aGVja2xpc3RdKGh0dHBzOi8vZ2l0aHViLmNvbS91bmdlYXIvRnJvbnQtRW5k
LUNoZWNrbGlzdCkKKiDwn4e58J+HtyBUdXJraXNoOiBbZXJheWNldGluYXkv
RnJvbnQtRW5kLUNoZWNrbGlzdF0oaHR0cHM6Ly9naXRodWIuY29tL2VyYXlj
ZXRpbmF5L0Zyb250LUVuZC1DaGVja2xpc3QpCiog8J+HqfCfh6ogR2VybWFu
OiBbeGZ1dHVyZTYwMy9Gcm9udC1FbmQtQ2hlY2tsaXN0XShodHRwczovL2dp
dGh1Yi5jb20veEZ1dHVyZTYwMy9Gcm9udC1FbmQtQ2hlY2tsaXN0KQoKLS0t
CgojIyBGcm9udC1FbmQgQ2hlY2tsaXN0IEJhZGdlCgpJZiB5b3Ugd2FudCB0
byBzaG93IHlvdSBhcmUgZm9sbG93aW5nIHRoZSBydWxlcyBvZiB0aGUgRnJv
bnQtRW5kIENoZWNrbGlzdCwgcHV0IHRoaXMgYmFkZ2Ugb24geW91ciBSRUFE
TUUgZmlsZSEKCuKelCBbIVtGcm9udOKAkUVuZF9DaGVja2xpc3QgZm9sbG93
ZWRdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvRnJvbnTigJFFbmRf
Q2hlY2tsaXN0LWZvbGxvd2VkLWJyaWdodGdyZWVuLnN2ZyldKGh0dHBzOi8v
Z2l0aHViLmNvbS90aGVkYXZpZGRpYXMvRnJvbnQtRW5kLUNoZWNrbGlzdC8p
CgpgYGBtZApbIVtGcm9udOKAkUVuZF9DaGVja2xpc3QgZm9sbG93ZWRdKGh0
dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvRnJvbnTigJFFbmRfQ2hlY2ts
aXN0LWZvbGxvd2VkLWJyaWdodGdyZWVuLnN2ZyldKGh0dHBzOi8vZ2l0aHVi
LmNvbS90aGVkYXZpZGRpYXMvRnJvbnQtRW5kLUNoZWNrbGlzdC8pCmBgYAoK
Kipb4qyGIGJhY2sgdG8gdG9wXSgjdGFibGUtb2YtY29udGVudHMpKioKCi0t
LQoKIyMgQ29udHJpYnV0aW5nCgoqKk9wZW4gYW4gaXNzdWUgb3IgYSBwdWxs
IHJlcXVlc3QgdG8gc3VnZ2VzdCBjaGFuZ2VzIG9yIGFkZGl0aW9ucy4qKgoK
IyMjIEd1aWRlCgpUaGUgKipGcm9udC1FbmQgQ2hlY2tsaXN0KiogcmVwb3Np
dG9yeSBjb25zaXN0cyBvZiB0d28gYnJhbmNoZXM6CgojIyMjIDEuIGBtYXN0
ZXJgCgpUaGlzIGJyYW5jaCBjb25zaXN0cyBvZiB0aGUgYFJFQURNRS5tZGAg
ZmlsZSB0aGF0IGlzIGF1dG9tYXRpY2FsbHkgcmVmbGVjdGVkIG9uIHRoZSBb
RnJvbnQtRW5kIENoZWNrbGlzdF0oaHR0cHM6Ly9mcm9udGVuZGNoZWNrbGlz
dC5pbykgd2Vic2l0ZS4KCiMjIyMgMi4gYGRldmVsb3BgCgpUaGlzIGJyYW5j
aCB3aWxsIGJlIHVzZWQgdG8gbWFrZSBzb21lIHNpZ25pZmljYW50IGNoYW5n
ZXMgdG8gdGhlIHN0cnVjdHVyZSwgY29udGVudCBpZiBuZWVkZWQuIEl0IGlz
IHByZWZlcmFibGUgdG8gdXNlIHRoZSBtYXN0ZXIgYnJhbmNoIHRvIGZpeCBz
bWFsbCBlcnJvcnMgb3IgYWRkIGEgbmV3IGl0ZW0uCgojIyBTdXBwb3J0CgpJ
ZiB5b3UgaGF2ZSBhbnkgcXVlc3Rpb24gb3Igc3VnZ2VzdGlvbiwgZG9uJ3Qg
aGVzaXRhdGUgdG8gdXNlIEdpdHRlciBvciBUd2l0dGVyOgoKKiBbQ2hhdCBv
biBHaXR0ZXJdKGh0dHBzOi8vZ2l0dGVyLmltL0Zyb250LUVuZC1DaGVja2xp
c3QvTG9iYnk/dXRtX3NvdXJjZT1zaGFyZS1saW5rJnV0bV9tZWRpdW09bGlu
ayZ1dG1fY2FtcGFpZ249c2hhcmUtbGluaykKKiBbRmFjZWJvb2tdKGh0dHBz
Oi8vd3d3LmZhY2Vib29rLmNvbS9mcm9udGVuZGNoZWNrbGlzdC8pCiogW1R3
aXR0ZXJdKGh0dHBzOi8vdHdpdHRlci5jb20vdGhlZGF2aWRkaWFzKQoKIyMg
QXV0aG9yCgoqKltEYXZpZCBEaWFzXShodHRwczovL2dpdGh1Yi5jb20vdGhl
ZGF2aWRkaWFzKSoqCgojIyBDb250cmlidXRvcnMKClRoaXMgcHJvamVjdCBl
eGlzdHMgdGhhbmtzIHRvIGFsbCB0aGUgcGVvcGxlIHdobyBjb250cmlidXRl
LiBbW0NvbnRyaWJ1dGVdXSguZ2l0aHViL0NPTlRSSUJVVElORy5tZCkuCjxh
IGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS90aGVkYXZpZGRpYXMvRnJvbnQt
RW5kLUNoZWNrbGlzdC9ncmFwaHMvY29udHJpYnV0b3JzIj48aW1nIHNyYz0i
aHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20vZnJvbnQtZW5kLWNoZWNrbGlz
dC9jb250cmlidXRvcnMuc3ZnP3dpZHRoPTg5MCIgLz48L2E+CgoKIyMgQmFj
a2VycwoKVGhhbmsgeW91IHRvIGFsbCBvdXIgYmFja2VycyEg8J+ZjyBbW0Jl
Y29tZSBhIGJhY2tlcl0oaHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20vZnJv
bnQtZW5kLWNoZWNrbGlzdCNiYWNrZXIpXQoKPGEgaHJlZj0iaHR0cHM6Ly9v
cGVuY29sbGVjdGl2ZS5jb20vZnJvbnQtZW5kLWNoZWNrbGlzdCNiYWNrZXJz
IiB0YXJnZXQ9Il9ibGFuayI+PGltZyBzcmM9Imh0dHBzOi8vb3BlbmNvbGxl
Y3RpdmUuY29tL2Zyb250LWVuZC1jaGVja2xpc3QvYmFja2Vycy5zdmc/d2lk
dGg9ODkwIj48L2E+CgoKIyMgU3BvbnNvcnMKClN1cHBvcnQgdGhpcyBwcm9q
ZWN0IGJ5IGJlY29taW5nIGEgc3BvbnNvci4gWW91ciBsb2dvIHdpbGwgc2hv
dyB1cCBoZXJlIHdpdGggYSBsaW5rIHRvIHlvdXIgd2Vic2l0ZS4gW1tCZWNv
bWUgYSBzcG9uc29yXShodHRwczovL29wZW5jb2xsZWN0aXZlLmNvbS9mcm9u
dC1lbmQtY2hlY2tsaXN0I3Nwb25zb3IpXQoKPGEgaHJlZj0iaHR0cHM6Ly9v
cGVuY29sbGVjdGl2ZS5jb20vZnJvbnQtZW5kLWNoZWNrbGlzdC9zcG9uc29y
LzAvd2Vic2l0ZSIgdGFyZ2V0PSJfYmxhbmsiPjxpbWcgc3JjPSJodHRwczov
L29wZW5jb2xsZWN0aXZlLmNvbS9mcm9udC1lbmQtY2hlY2tsaXN0L3Nwb25z
b3IvMC9hdmF0YXIuc3ZnIj48L2E+CjxhIGhyZWY9Imh0dHBzOi8vb3BlbmNv
bGxlY3RpdmUuY29tL2Zyb250LWVuZC1jaGVja2xpc3Qvc3BvbnNvci8xL3dl
YnNpdGUiIHRhcmdldD0iX2JsYW5rIj48aW1nIHNyYz0iaHR0cHM6Ly9vcGVu
Y29sbGVjdGl2ZS5jb20vZnJvbnQtZW5kLWNoZWNrbGlzdC9zcG9uc29yLzEv
YXZhdGFyLnN2ZyI+PC9hPgo8YSBocmVmPSJodHRwczovL29wZW5jb2xsZWN0
aXZlLmNvbS9mcm9udC1lbmQtY2hlY2tsaXN0L3Nwb25zb3IvMi93ZWJzaXRl
IiB0YXJnZXQ9Il9ibGFuayI+PGltZyBzcmM9Imh0dHBzOi8vb3BlbmNvbGxl
Y3RpdmUuY29tL2Zyb250LWVuZC1jaGVja2xpc3Qvc3BvbnNvci8yL2F2YXRh
ci5zdmciPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5j
b20vZnJvbnQtZW5kLWNoZWNrbGlzdC9zcG9uc29yLzMvd2Vic2l0ZSIgdGFy
Z2V0PSJfYmxhbmsiPjxpbWcgc3JjPSJodHRwczovL29wZW5jb2xsZWN0aXZl
LmNvbS9mcm9udC1lbmQtY2hlY2tsaXN0L3Nwb25zb3IvMy9hdmF0YXIuc3Zn
Ij48L2E+CjxhIGhyZWY9Imh0dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL2Zy
b250LWVuZC1jaGVja2xpc3Qvc3BvbnNvci80L3dlYnNpdGUiIHRhcmdldD0i
X2JsYW5rIj48aW1nIHNyYz0iaHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20v
ZnJvbnQtZW5kLWNoZWNrbGlzdC9zcG9uc29yLzQvYXZhdGFyLnN2ZyI+PC9h
Pgo8YSBocmVmPSJodHRwczovL29wZW5jb2xsZWN0aXZlLmNvbS9mcm9udC1l
bmQtY2hlY2tsaXN0L3Nwb25zb3IvNS93ZWJzaXRlIiB0YXJnZXQ9Il9ibGFu
ayI+PGltZyBzcmM9Imh0dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL2Zyb250
LWVuZC1jaGVja2xpc3Qvc3BvbnNvci81L2F2YXRhci5zdmciPjwvYT4KPGEg
aHJlZj0iaHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20vZnJvbnQtZW5kLWNo
ZWNrbGlzdC9zcG9uc29yLzYvd2Vic2l0ZSIgdGFyZ2V0PSJfYmxhbmsiPjxp
bWcgc3JjPSJodHRwczovL29wZW5jb2xsZWN0aXZlLmNvbS9mcm9udC1lbmQt
Y2hlY2tsaXN0L3Nwb25zb3IvNi9hdmF0YXIuc3ZnIj48L2E+CjxhIGhyZWY9
Imh0dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL2Zyb250LWVuZC1jaGVja2xp
c3Qvc3BvbnNvci83L3dlYnNpdGUiIHRhcmdldD0iX2JsYW5rIj48aW1nIHNy
Yz0iaHR0cHM6Ly9vcGVuY29sbGVjdGl2ZS5jb20vZnJvbnQtZW5kLWNoZWNr
bGlzdC9zcG9uc29yLzcvYXZhdGFyLnN2ZyI+PC9hPgo8YSBocmVmPSJodHRw
czovL29wZW5jb2xsZWN0aXZlLmNvbS9mcm9udC1lbmQtY2hlY2tsaXN0L3Nw
b25zb3IvOC93ZWJzaXRlIiB0YXJnZXQ9Il9ibGFuayI+PGltZyBzcmM9Imh0
dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL2Zyb250LWVuZC1jaGVja2xpc3Qv
c3BvbnNvci84L2F2YXRhci5zdmciPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly9v
cGVuY29sbGVjdGl2ZS5jb20vZnJvbnQtZW5kLWNoZWNrbGlzdC9zcG9uc29y
Lzkvd2Vic2l0ZSIgdGFyZ2V0PSJfYmxhbmsiPjxpbWcgc3JjPSJodHRwczov
L29wZW5jb2xsZWN0aXZlLmNvbS9mcm9udC1lbmQtY2hlY2tsaXN0L3Nwb25z
b3IvOS9hdmF0YXIuc3ZnIj48L2E+CgojIyBMaWNlbnNlCgpbIVtDQzBdKGh0
dHBzOi8vaS5jcmVhdGl2ZWNvbW1vbnMub3JnL3AvemVyby8xLjAvODh4MzEu
cG5nKV0oaHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL3B1YmxpY2RvbWFp
bi96ZXJvLzEuMC8pCgoqKlvirIYgYmFjayB0byB0b3BdKCN0YWJsZS1vZi1j
b250ZW50cykqKgoKW2xvd19pbWddOiBodHRwczovL2Zyb250LWVuZC1jaGVj
a2xpc3Qubm93LnNoL2xvdy5zdmcKW21lZGl1bV9pbWddOiBodHRwczovL2Zy
b250LWVuZC1jaGVja2xpc3Qubm93LnNoL21lZGl1bS5zdmcKW2hpZ2hfaW1n
XTogaHR0cHM6Ly9mcm9udC1lbmQtY2hlY2tsaXN0Lm5vdy5zaC9oaWdoLnN2
Zwo=
",,36817,"bGFuZ3VhZ2U6IG5vZGVfanMKc3VkbzogZmFsc2UKbm9kZV9qczoKICAtICI4
LjEyLjAiCmNhY2hlOgogIGRpcmVjdG9yaWVzOgogICAgLSBub2RlX21vZHVs
ZXMKYmVmb3JlX2luc3RhbGw6CiAgLSBucG0gaSAtZyBucG1AbGF0ZXN0Cmlu
c3RhbGw6CiAgLSBucG0gaW5zdGFsbApzY3JpcHQ6CiAgLSBndWxwIGJ1aWxk
Cm5vdGlmaWNhdGlvbnM6CiAgZW1haWw6CiAgICByZWNpcGllbnRzOgogICAg
ICAtIHRoZWRhdmlkZGlhc0BnbWFpbC5jb20KYnJhbmNoZXM6CiAgb25seToK
ICAgIC0gbWFzdGVyCiAgICAtIC9eZ3JlZW5rZWVwZXIvLiokLwpkZXBsb3k6
CiAgbG9jYWxfZGlyOiBkaXN0CiAgcHJvdmlkZXI6IHBhZ2VzCiAgc2tpcF9j
bGVhbnVwOiB0cnVlCiAgZ2l0aHViX3Rva2VuOiAkR0lUSFVCX1RPS0VOCiAg
b246CiAgICBicmFuY2g6IG1hc3Rlcgo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
