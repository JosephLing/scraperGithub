name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'lectures',81080671,b' Oxford Deep NLP 2017 course',,9,14335,,1272,False,b'https://api.github.com/repos/oxford-cs-deepnlp-2017/lectures/forks',"IyBQcmVhbWJsZQpUaGlzIHJlcG9zaXRvcnkgY29udGFpbnMgdGhlIGxlY3R1
cmUgc2xpZGVzIGFuZCBjb3Vyc2UgZGVzY3JpcHRpb24gZm9yIHRoZSBbRGVl
cCBOYXR1cmFsIExhbmd1YWdlIFByb2Nlc3NpbmddKGh0dHA6Ly93d3cuY3Mu
b3guYWMudWsvdGVhY2hpbmcvY291cnNlcy8yMDE2LTIwMTcvZGwvKSBjb3Vy
c2Ugb2ZmZXJlZCBpbiBIaWxhcnkgVGVybSAyMDE3IGF0IHRoZSBVbml2ZXJz
aXR5IG9mIE94Zm9yZC4gCgpUaGlzIGlzIGFuIGFkdmFuY2VkIGNvdXJzZSBv
biBuYXR1cmFsIGxhbmd1YWdlIHByb2Nlc3NpbmcuIEF1dG9tYXRpY2FsbHkg
cHJvY2Vzc2luZyBuYXR1cmFsIGxhbmd1YWdlIGlucHV0cyBhbmQgcHJvZHVj
aW5nIGxhbmd1YWdlIG91dHB1dHMgaXMgYSBrZXkgY29tcG9uZW50IG9mIEFy
dGlmaWNpYWwgR2VuZXJhbCBJbnRlbGxpZ2VuY2UuIFRoZSBhbWJpZ3VpdGll
cyBhbmQgbm9pc2UgaW5oZXJlbnQgaW4gaHVtYW4gY29tbXVuaWNhdGlvbiBy
ZW5kZXIgdHJhZGl0aW9uYWwgc3ltYm9saWMgQUkgdGVjaG5pcXVlcyBpbmVm
ZmVjdGl2ZSBmb3IgcmVwcmVzZW50aW5nIGFuZCBhbmFseXNpbmcgbGFuZ3Vh
Z2UgZGF0YS4gUmVjZW50bHkgc3RhdGlzdGljYWwgdGVjaG5pcXVlcyBiYXNl
ZCBvbiBuZXVyYWwgbmV0d29ya3MgaGF2ZSBhY2hpZXZlZCBhIG51bWJlciBv
ZiByZW1hcmthYmxlIHN1Y2Nlc3NlcyBpbiBuYXR1cmFsIGxhbmd1YWdlIHBy
b2Nlc3NpbmcgbGVhZGluZyB0byBhIGdyZWF0IGRlYWwgb2YgY29tbWVyY2lh
bCBhbmQgYWNhZGVtaWMgaW50ZXJlc3QgaW4gdGhlIGZpZWxkCgpUaGlzIGlz
IGFuIGFwcGxpZWQgY291cnNlIGZvY3Vzc2luZyBvbiByZWNlbnQgYWR2YW5j
ZXMgaW4gYW5hbHlzaW5nIGFuZCBnZW5lcmF0aW5nIHNwZWVjaCBhbmQgdGV4
dCB1c2luZyByZWN1cnJlbnQgbmV1cmFsIG5ldHdvcmtzLiBXZSBpbnRyb2R1
Y2UgdGhlIG1hdGhlbWF0aWNhbCBkZWZpbml0aW9ucyBvZiB0aGUgcmVsZXZh
bnQgbWFjaGluZSBsZWFybmluZyBtb2RlbHMgYW5kIGRlcml2ZSB0aGVpciBh
c3NvY2lhdGVkIG9wdGltaXNhdGlvbiBhbGdvcml0aG1zLiBUaGUgY291cnNl
IGNvdmVycyBhIHJhbmdlIG9mIGFwcGxpY2F0aW9ucyBvZiBuZXVyYWwgbmV0
d29ya3MgaW4gTkxQIGluY2x1ZGluZyBhbmFseXNpbmcgbGF0ZW50IGRpbWVu
c2lvbnMgaW4gdGV4dCwgdHJhbnNjcmliaW5nIHNwZWVjaCB0byB0ZXh0LCB0
cmFuc2xhdGluZyBiZXR3ZWVuIGxhbmd1YWdlcywgYW5kIGFuc3dlcmluZyBx
dWVzdGlvbnMuIFRoZXNlIHRvcGljcyBhcmUgb3JnYW5pc2VkIGludG8gdGhy
ZWUgaGlnaCBsZXZlbCB0aGVtZXMgZm9ybWluZyBhIHByb2dyZXNzaW9uIGZy
b20gdW5kZXJzdGFuZGluZyB0aGUgdXNlIG9mIG5ldXJhbCBuZXR3b3JrcyBm
b3Igc2VxdWVudGlhbCBsYW5ndWFnZSBtb2RlbGxpbmcsIHRvIHVuZGVyc3Rh
bmRpbmcgdGhlaXIgdXNlIGFzIGNvbmRpdGlvbmFsIGxhbmd1YWdlIG1vZGVs
cyBmb3IgdHJhbnNkdWN0aW9uIHRhc2tzLCBhbmQgZmluYWxseSB0byBhcHBy
b2FjaGVzIGVtcGxveWluZyB0aGVzZSB0ZWNobmlxdWVzIGluIGNvbWJpbmF0
aW9uIHdpdGggb3RoZXIgbWVjaGFuaXNtcyBmb3IgYWR2YW5jZWQgYXBwbGlj
YXRpb25zLiBUaHJvdWdob3V0IHRoZSBjb3Vyc2UgdGhlIHByYWN0aWNhbCBp
bXBsZW1lbnRhdGlvbiBvZiBzdWNoIG1vZGVscyBvbiBDUFUgYW5kIEdQVSBo
YXJkd2FyZSBpcyBhbHNvIGRpc2N1c3NlZC4KClRoaXMgY291cnNlIGlzIG9y
Z2FuaXNlZCBieSBQaGlsIEJsdW5zb20gYW5kIGRlbGl2ZXJlZCBpbiBwYXJ0
bmVyc2hpcCB3aXRoIHRoZSBEZWVwTWluZCBOYXR1cmFsIExhbmd1YWdlIFJl
c2VhcmNoIEdyb3VwLgoKIyBMZWN0dXJlcnMKKiBQaGlsIEJsdW5zb20gKE94
Zm9yZCBVbml2ZXJzaXR5IGFuZCBEZWVwTWluZCkKKiBDaHJpcyBEeWVyIChD
YXJuZWdpZSBNZWxsb24gVW5pdmVyc2l0eSBhbmQgRGVlcE1pbmQpCiogRWR3
YXJkIEdyZWZlbnN0ZXR0ZSAoRGVlcE1pbmQpCiogS2FybCBNb3JpdHogSGVy
bWFubiAoRGVlcE1pbmQpCiogQW5kcmV3IFNlbmlvciAoRGVlcE1pbmQpCiog
V2FuZyBMaW5nIChEZWVwTWluZCkKKiBKZXJlbXkgQXBwbGV5YXJkIChOVklE
SUEpCgojIFRBcwoqIFlhbm5pcyBBc3NhZWwKKiBZaXNodSBNaWFvCiogQnJl
bmRhbiBTaGlsbGluZ2ZvcmQKKiBKYW4gQnV5cwoKIyBUaW1ldGFibGUKIyMg
UHJhY3RpY2FscwogKiBHcm91cCAxIC0gTW9uZGF5LCA5OjAwLTExOjAwIChX
ZWVrcyAyLTgpLCA2MC4wNSBUaG9tIEJ1aWxkaW5nCiAqIEdyb3VwIDIgLSBG
cmlkYXksIDE2OjAwLTE4OjAwIChXZWVrcyAyLTgpLCBSb29tIDM3OQogCjEu
IFtQcmFjdGljYWwgMTogd29yZDJ2ZWNdKGh0dHBzOi8vZ2l0aHViLmNvbS9v
eGZvcmQtY3MtZGVlcG5scC0yMDE3L3ByYWN0aWNhbC0xKQoyLiBbUHJhY3Rp
Y2FsIDI6IHRleHQgY2xhc3NpZmljYXRpb25dKGh0dHBzOi8vZ2l0aHViLmNv
bS9veGZvcmQtY3MtZGVlcG5scC0yMDE3L3ByYWN0aWNhbC0yKQozLiBbUHJh
Y3RpY2FsIDM6IHJlY3VycmVudCBuZXVyYWwgbmV0d29ya3MgZm9yIHRleHQg
Y2xhc3NpZmljYXRpb24gYW5kIGxhbmd1YWdlIG1vZGVsbGluZ10oaHR0cHM6
Ly9naXRodWIuY29tL294Zm9yZC1jcy1kZWVwbmxwLTIwMTcvcHJhY3RpY2Fs
LTMpCjQuIFtQcmFjdGljYWwgNDogb3BlbiBwcmFjdGljYWxdKGh0dHBzOi8v
Z2l0aHViLmNvbS9veGZvcmQtY3MtZGVlcG5scC0yMDE3L3ByYWN0aWNhbC1v
cGVuKQoKIyMgTGVjdHVyZXMKUHVibGljIExlY3R1cmVzIGFyZSBoZWxkIGlu
IExlY3R1cmUgVGhlYXRyZSAxIG9mIHRoZSBNYXRocyBJbnN0aXR1dGUsIG9u
IFR1ZXNkYXlzIGFuZCBUaHVyc2RheXMgKGV4Y2VwdCB3ZWVrIDgpLCAxNjow
MC0xODowMCAoSGlsYXJ5IFRlcm0gV2Vla3MgMSwzLTgpLgoKIyBMZWN0dXJl
IE1hdGVyaWFscwojIyAxLiBMZWN0dXJlIDFhIC0gSW50cm9kdWN0aW9uIFtQ
aGlsIEJsdW5zb21dClRoaXMgbGVjdHVyZSBpbnRyb2R1Y2VzIHRoZSBjb3Vy
c2UgYW5kIG1vdGl2YXRlcyB3aHkgaXQgaXMgaW50ZXJlc3RpbmcgdG8gc3R1
ZHkgbGFuZ3VhZ2UgcHJvY2Vzc2luZyB1c2luZyBEZWVwIExlYXJuaW5nIHRl
Y2huaXF1ZXMuCgpbW3NsaWRlc11dKExlY3R1cmUlMjAxYSUyMC0lMjBJbnRy
b2R1Y3Rpb24ucGRmKQpbW3ZpZGVvXV0oaHR0cDovL21lZGlhLnBvZGNhc3Rz
Lm94LmFjLnVrL2NvbWxhYi9kZWVwX2xlYXJuaW5nX05MUC8yMDE3LTAxX2Rl
ZXBfTkxQXzFhX2ludHJvLm1wNCkKCiMjIDIuIExlY3R1cmUgMWIgLSBEZWVw
IE5ldXJhbCBOZXR3b3JrcyBBcmUgT3VyIEZyaWVuZHMgW1dhbmcgTGluZ10K
VGhpcyBsZWN0dXJlIHJldmlzZXMgYmFzaWMgbWFjaGluZSBsZWFybmluZyBj
b25jZXB0cyB0aGF0IHN0dWRlbnRzIHNob3VsZCBrbm93IGJlZm9yZSBlbWJh
cmtpbmcgb24gdGhpcyBjb3Vyc2UuCgpbW3NsaWRlc11dKExlY3R1cmUlMjAx
YiUyMC0lMjBEZWVwJTIwTmV1cmFsJTIwTmV0d29ya3MlMjBBcmUlMjBPdXIl
MjBGcmllbmRzLnBkZikKW1t2aWRlb11dKGh0dHA6Ly9tZWRpYS5wb2RjYXN0
cy5veC5hYy51ay9jb21sYWIvZGVlcF9sZWFybmluZ19OTFAvMjAxNy0wMV9k
ZWVwX05MUF8xYl9mcmllbmRzLm1wNCkKCiMjIDMuIExlY3R1cmUgMmEtIFdv
cmQgTGV2ZWwgU2VtYW50aWNzIFtFZCBHcmVmZW5zdGV0dGVdCldvcmRzIGFy
ZSB0aGUgY29yZSBtZWFuaW5nIGJlYXJpbmcgdW5pdHMgaW4gbGFuZ3VhZ2Uu
IFJlcHJlc2VudGluZyBhbmQgbGVhcm5pbmcgdGhlIG1lYW5pbmdzIG9mIHdv
cmRzIGlzIGEgZnVuZGFtZW50YWwgdGFzayBpbiBOTFAgYW5kIGluIHRoaXMg
bGVjdHVyZSB0aGUgY29uY2VwdCBvZiBhIHdvcmQgZW1iZWRkaW5nIGlzIGlu
dHJvZHVjZWQgYXMgYSBwcmFjdGljYWwgYW5kIHNjYWxhYmxlIHNvbHV0aW9u
LgoKW1tzbGlkZXNdXShMZWN0dXJlJTIwMmEtJTIwV29yZCUyMExldmVsJTIw
U2VtYW50aWNzLnBkZikKW1t2aWRlb11dKGh0dHA6Ly9tZWRpYS5wb2RjYXN0
cy5veC5hYy51ay9jb21sYWIvZGVlcF9sZWFybmluZ19OTFAvMjAxNy0wMV9k
ZWVwX05MUF8yYV9sZXhpY2FsX3NlbWFudGljcy5tcDQpCgojIyMgUmVhZGlu
ZwoKIyMjIyBFbWJlZGRpbmdzIEJhc2ljcwoqIFtGaXJ0aCwgSm9obiBSLiAi
QSBzeW5vcHNpcyBvZiBsaW5ndWlzdGljIHRoZW9yeSwgMTkzMC0xOTU1LiIg
KDE5NTcpOiAxLTMyLl0oaHR0cDovL2FubmFiZWxsZWx1a2luLmVkdWJsb2dz
Lm9yZy9maWxlcy8yMDEzLzA4L0ZpcnRoLUpSLTE5NjItQS1TeW5vcHNpcy1v
Zi1MaW5ndWlzdGljLVRoZW9yeS13ZmloaTUucGRmKQoqIFtDdXJyYW4sIEph
bWVzIFJpY2hhcmQuICJGcm9tIGRpc3RyaWJ1dGlvbmFsIHRvIHNlbWFudGlj
IHNpbWlsYXJpdHkuIiAoMjAwNCkuXShodHRwczovL3d3dy5lcmEubGliLmVk
LmFjLnVrL2JpdHN0cmVhbS9oYW5kbGUvMTg0Mi81NjMvSVAwMzAwMjMucGRm
P3NlcXVlbmNlPTImaXNBbGxvd2VkPXkpCiogW0NvbGxvYmVydCwgUm9uYW4s
IGV0IGFsLiAiTmF0dXJhbCBsYW5ndWFnZSBwcm9jZXNzaW5nIChhbG1vc3Qp
IGZyb20gc2NyYXRjaC4iIEpvdXJuYWwgb2YgTWFjaGluZSBMZWFybmluZyBS
ZXNlYXJjaCAxMi4gQXVnICgyMDExKTogMjQ5My0yNTM3Ll0oaHR0cDovL3d3
dy5qbWxyLm9yZy9wYXBlcnMvdm9sdW1lMTIvY29sbG9iZXJ0MTFhL2NvbGxv
YmVydDExYS5wZGYpCiogW01pa29sb3YsIFRvbWFzLCBldCBhbC4gIkRpc3Ry
aWJ1dGVkIHJlcHJlc2VudGF0aW9ucyBvZiB3b3JkcyBhbmQgcGhyYXNlcyBh
bmQgdGhlaXIgY29tcG9zaXRpb25hbGl0eS4iIEFkdmFuY2VzIGluIG5ldXJh
bCBpbmZvcm1hdGlvbiBwcm9jZXNzaW5nIHN5c3RlbXMuIDIwMTMuXShodHRw
Oi8vcGFwZXJzLm5pcHMuY2MvcGFwZXIvNTAyMS1kaXN0cmlidXRlZC1yZXBy
ZXNlbnRhdGlvbnMtb2Ytd29yZHMtYW5kLXBocmFzZXMtYW5kLXRoZWlyLWNv
bXBvc2l0aW9uYWxpdHkucGRmKQoKIyMjIyBEYXRhc2V0cyBhbmQgVmlzdWFs
aXNhdGlvbgoqIFtGaW5rZWxzdGVpbiwgTGV2LCBldCBhbC4gIlBsYWNpbmcg
c2VhcmNoIGluIGNvbnRleHQ6IFRoZSBjb25jZXB0IHJldmlzaXRlZC4iIFBy
b2NlZWRpbmdzIG9mIHRoZSAxMHRoIGludGVybmF0aW9uYWwgY29uZmVyZW5j
ZSBvbiBXb3JsZCBXaWRlIFdlYi4gQUNNLCAyMDAxLl0oaHR0cDovL3d3dy5p
aWNtLnR1Z3Jhei5hdC90aGVzaXMvY2d1ZXRsX2Rpc3MvbGl0ZXJhdHVyL0th
cGl0ZWwwNy9SZWZlcmVuY2VzL0ZpbmtlbHN0ZWluX2V0X2FsLl8yMDAyL3Ax
MTYtZmlua2Vsc3RlaW4ucGRmKQoqIFtIaWxsLCBGZWxpeCwgUm9pIFJlaWNo
YXJ0LCBhbmQgQW5uYSBLb3Job25lbi4gIlNpbWxleC05OTk6IEV2YWx1YXRp
bmcgc2VtYW50aWMgbW9kZWxzIHdpdGggKGdlbnVpbmUpIHNpbWlsYXJpdHkg
ZXN0aW1hdGlvbi4iIENvbXB1dGF0aW9uYWwgTGluZ3Vpc3RpY3MgKDIwMTYp
Ll0oaHR0cDovL3d3dy5hY2x3ZWIub3JnL3dlYnNpdGUvb2xkX2FudGhvbG9n
eS9KL0oxNS9KMTUtNDAwNC5wZGYpCiogW01hYXRlbiwgTGF1cmVucyB2YW4g
ZGVyLCBhbmQgR2VvZmZyZXkgSGludG9uLiAiVmlzdWFsaXppbmcgZGF0YSB1
c2luZyB0LVNORS4iIEpvdXJuYWwgb2YgTWFjaGluZSBMZWFybmluZyBSZXNl
YXJjaCA5Lk5vdiAoMjAwOCk6IDI1NzktMjYwNS5dKGh0dHA6Ly93d3cuam1s
ci5vcmcvcGFwZXJzL3ZvbHVtZTkvdmFuZGVybWFhdGVuMDhhL3ZhbmRlcm1h
YXRlbjA4YS5wZGYpCgojIyMjIEJsb2cgcG9zdHMKKiBbRGVlcCBMZWFybmlu
ZywgTkxQLCBhbmQgUmVwcmVzZW50YXRpb25zXShodHRwOi8vY29sYWguZ2l0
aHViLmlvL3Bvc3RzLzIwMTQtMDctTkxQLVJOTnMtUmVwcmVzZW50YXRpb25z
LyksIENocmlzdG9waGVyIE9sYWguCiogW1Zpc3VhbGl6aW5nIFRvcCBUd2Vl
cHMgd2l0aCB0LVNORSwgaW4gSmF2YXNjcmlwdF0oaHR0cDovL2thcnBhdGh5
LmdpdGh1Yi5pby8yMDE0LzA3LzAyL3Zpc3VhbGl6aW5nLXRvcC10d2VlcHMt
d2l0aC10LXNuZS1pbi1KYXZhc2NyaXB0LyksIEFuZHJlaiBLYXJwYXRoeS4K
CiMjIyMgRnVydGhlciBSZWFkaW5nCiogW0hlcm1hbm4sIEthcmwgTW9yaXR6
LCBhbmQgUGhpbCBCbHVuc29tLiAiTXVsdGlsaW5ndWFsIG1vZGVscyBmb3Ig
Y29tcG9zaXRpb25hbCBkaXN0cmlidXRlZCBzZW1hbnRpY3MuIiBhclhpdiBw
cmVwcmludCBhclhpdjoxNDA0LjQ2NDEgKDIwMTQpLl0oaHR0cHM6Ly9hcnhp
di5vcmcvcGRmLzE0MDQuNDY0MS5wZGYpCiogW0xldnksIE9tZXIsIGFuZCBZ
b2F2IEdvbGRiZXJnLiAiTmV1cmFsIHdvcmQgZW1iZWRkaW5nIGFzIGltcGxp
Y2l0IG1hdHJpeCBmYWN0b3JpemF0aW9uLiIgQWR2YW5jZXMgaW4gbmV1cmFs
IGluZm9ybWF0aW9uIHByb2Nlc3Npbmcgc3lzdGVtcy4gMjAxNC5dKGh0dHA6
Ly91LmNzLmJpdS5hYy5pbC9+bmxwL3dwLWNvbnRlbnQvdXBsb2Fkcy9OZXVy
YWwtV29yZC1FbWJlZGRpbmdzLWFzLUltcGxpY2l0LU1hdHJpeC1GYWN0b3Jp
emF0aW9uLU5JUFMtMjAxNC5wZGYpCiogW0xldnksIE9tZXIsIFlvYXYgR29s
ZGJlcmcsIGFuZCBJZG8gRGFnYW4uICJJbXByb3ZpbmcgZGlzdHJpYnV0aW9u
YWwgc2ltaWxhcml0eSB3aXRoIGxlc3NvbnMgbGVhcm5lZCBmcm9tIHdvcmQg
ZW1iZWRkaW5ncy4iIFRyYW5zYWN0aW9ucyBvZiB0aGUgQXNzb2NpYXRpb24g
Zm9yIENvbXB1dGF0aW9uYWwgTGluZ3Vpc3RpY3MgMyAoMjAxNSk6IDIxMS0y
MjUuXShodHRwczovL3d3dy50cmFuc2FjbC5vcmcvb2pzL2luZGV4LnBocC90
YWNsL2FydGljbGUvdmlldy81NzAvMTI0KQoqIFtMaW5nLCBXYW5nLCBldCBh
bC4gIlR3by9Ub28gU2ltcGxlIEFkYXB0YXRpb25zIG9mIFdvcmQyVmVjIGZv
ciBTeW50YXggUHJvYmxlbXMuIiBITFQtTkFBQ0wuIDIwMTUuXShodHRwczov
L3d3dy5hY2x3ZWIub3JnL2FudGhvbG9neS9OL04xNS9OMTUtMTE0Mi5wZGYp
CgojIyA0LiBMZWN0dXJlIDJiIC0gT3ZlcnZpZXcgb2YgdGhlIFByYWN0aWNh
bHMgW0NocmlzIER5ZXJdClRoaXMgbGVjdHVyZSBtb3RpdmF0ZXMgdGhlIHBy
YWN0aWNhbCBzZWdtZW50IG9mIHRoZSBjb3Vyc2UuCgpbW3NsaWRlc11dKExl
Y3R1cmUlMjAyYiUyMC0lMjBPdmVydmlldyUyMG9mJTIwdGhlJTIwUHJhY3Rp
Y2Fscy5wZGYpCltbdmlkZW9dXShodHRwOi8vbWVkaWEucG9kY2FzdHMub3gu
YWMudWsvY29tbGFiL2RlZXBfbGVhcm5pbmdfTkxQLzIwMTctMDFfZGVlcF9O
TFBfMmJfcHJhY3RpY2Fscy5tcDQpCgojIyA1LiBMZWN0dXJlIDMgLSBMYW5n
dWFnZSBNb2RlbGxpbmcgYW5kIFJOTnMgUGFydCAxIFtQaGlsIEJsdW5zb21d
Ckxhbmd1YWdlIG1vZGVsbGluZyBpcyBpbXBvcnRhbnQgdGFzayBvZiBncmVh
dCBwcmFjdGljYWwgdXNlIGluIG1hbnkgTkxQIGFwcGxpY2F0aW9ucy4gVGhp
cyBsZWN0dXJlIGludHJvZHVjZXMgbGFuZ3VhZ2UgbW9kZWxsaW5nLCBpbmNs
dWRpbmcgdHJhZGl0aW9uYWwgbi1ncmFtIGJhc2VkIGFwcHJvYWNoZXMgYW5k
IG1vcmUgY29udGVtcG9yYXJ5IG5ldXJhbCBhcHByb2FjaGVzLiBJbiBwYXJ0
aWN1bGFyIHRoZSBwb3B1bGFyIFJlY3VycmVudCBOZXVyYWwgTmV0d29yayAo
Uk5OKSBsYW5ndWFnZSBtb2RlbCBpcyBpbnRyb2R1Y2VkIGFuZCBpdHMgYmFz
aWMgdHJhaW5pbmcgYW5kIGV2YWx1YXRpb24gYWxnb3JpdGhtcyBkZXNjcmli
ZWQuCgpbW3NsaWRlc11dKExlY3R1cmUlMjAzJTIwLSUyMExhbmd1YWdlJTIw
TW9kZWxsaW5nJTIwYW5kJTIwUk5OcyUyMFBhcnQlMjAxLnBkZikKW1t2aWRl
b11dKGh0dHA6Ly9tZWRpYS5wb2RjYXN0cy5veC5hYy51ay9jb21sYWIvZGVl
cF9sZWFybmluZ19OTFAvMjAxNy0wMV9kZWVwX05MUF8zX21vZGVsbGluZ18x
Lm1wNCkKCiMjIyBSZWFkaW5nCgojIyMjIFRleHRib29rCiAqIFtEZWVwIExl
YXJuaW5nLCBDaGFwdGVyIDEwXShodHRwOi8vd3d3LmRlZXBsZWFybmluZ2Jv
b2sub3JnL2NvbnRlbnRzL3Jubi5odG1sKS4KIAojIyMjIEJsb2dzIAogKiBb
VGhlIFVucmVhc29uYWJsZSBFZmZlY3RpdmVuZXNzIG9mIFJlY3VycmVudCBO
ZXVyYWwgTmV0d29ya3NdKGh0dHA6Ly9rYXJwYXRoeS5naXRodWIuaW8vMjAx
NS8wNS8yMS9ybm4tZWZmZWN0aXZlbmVzcy8pLCBBbmRyZWogS2FycGF0aHku
CiAqIFtUaGUgdW5yZWFzb25hYmxlIGVmZmVjdGl2ZW5lc3Mgb2YgQ2hhcmFj
dGVyLWxldmVsIExhbmd1YWdlIE1vZGVsc10oaHR0cDovL25idmlld2VyLmp1
cHl0ZXIub3JnL2dpc3QveW9hdmcvZDc2MTIxZGZkZTI2MTg0MjIxMzkpLCBZ
b2F2IEdvbGRiZXJnLgogKiBbRXhwbGFpbmluZyBhbmQgaWxsdXN0cmF0aW5n
IG9ydGhvZ29uYWwgaW5pdGlhbGl6YXRpb24gZm9yIHJlY3VycmVudCBuZXVy
YWwgbmV0d29ya3NdKGh0dHA6Ly9zbWVyaXR5LmNvbS9hcnRpY2xlcy8yMDE2
L29ydGhvZ29uYWxfaW5pdC5odG1sKSwgU3RlcGhlbiBNZXJpdHkuCgojIyA2
LiBMZWN0dXJlIDQgLSBMYW5ndWFnZSBNb2RlbGxpbmcgYW5kIFJOTnMgUGFy
dCAyIFtQaGlsIEJsdW5zb21dClRoaXMgbGVjdHVyZSBjb250aW51ZXMgb24g
ZnJvbSB0aGUgcHJldmlvdXMgb25lIGFuZCBjb25zaWRlcnMgc29tZSBvZiB0
aGUgaXNzdWVzIGludm9sdmVkIGluIHByb2R1Y2luZyBhbiBlZmZlY3RpdmUg
aW1wbGVtZW50YXRpb24gb2YgYW4gUk5OIGxhbmd1YWdlIG1vZGVsLiBUaGUg
dmFuaXNoaW5nIGFuZCBleHBsb2RpbmcgZ3JhZGllbnQgcHJvYmxlbSBpcyBk
ZXNjcmliZWQgYW5kIGFyY2hpdGVjdHVyYWwgc29sdXRpb25zLCBzdWNoIGFz
IExvbmcgU2hvcnQgVGVybSBNZW1vcnkgKExTVE0pLCBhcmUgaW50cm9kdWNl
ZC4gCgpbW3NsaWRlc11dKExlY3R1cmUlMjA0JTIwLSUyMExhbmd1YWdlJTIw
TW9kZWxsaW5nJTIwYW5kJTIwUk5OcyUyMFBhcnQlMjAyLnBkZikKW1t2aWRl
b11dKGh0dHA6Ly9tZWRpYS5wb2RjYXN0cy5veC5hYy51ay9jb21sYWIvZGVl
cF9sZWFybmluZ19OTFAvMjAxNy0wMV9kZWVwX05MUF80X21vZGVsbGluZ18y
Lm1wNCkKCiMjIyBSZWFkaW5nCgojIyMjIFRleHRib29rCiAqIFtEZWVwIExl
YXJuaW5nLCBDaGFwdGVyIDEwXShodHRwOi8vd3d3LmRlZXBsZWFybmluZ2Jv
b2sub3JnL2NvbnRlbnRzL3Jubi5odG1sKS4KIAojIyMjIFZhbmlzaGluZyBn
cmFkaWVudHMsIExTVE1zIGV0Yy4KKiBbT24gdGhlIGRpZmZpY3VsdHkgb2Yg
dHJhaW5pbmcgcmVjdXJyZW50IG5ldXJhbCBuZXR3b3Jrcy4gUGFzY2FudSBl
dCBhbC4sIElDTUwgMjAxMy5dKGh0dHA6Ly9qbWxyLmNzYWlsLm1pdC5lZHUv
cHJvY2VlZGluZ3MvcGFwZXJzL3YyOC9wYXNjYW51MTMucGRmKQoqIFtMb25n
IFNob3J0LVRlcm0gTWVtb3J5LiBIb2NocmVpdGVyIGFuZCBTY2htaWRodWJl
ciwgTmV1cmFsIENvbXB1dGF0aW9uIDE5OTcuXShodHRwOi8vZGwuYWNtLm9y
Zy9jaXRhdGlvbi5jZm0/aWQ9MTI0NjQ1MCkKKiBbTGVhcm5pbmcgUGhyYXNl
IFJlcHJlc2VudGF0aW9ucyB1c2luZyBSTk4gRW5jb2RlckRlY29kZXIgZm9y
IFN0YXRpc3RpY2FsIE1hY2hpbmUgVHJhbnNsYXRpb24uIENobyBldCBhbCwg
RU1OTFAgMjAxNC5dKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNDA2LjEwNzgp
CiogQmxvZzogW1VuZGVyc3RhbmRpbmcgTFNUTSBOZXR3b3Jrc10oaHR0cDov
L2NvbGFoLmdpdGh1Yi5pby9wb3N0cy8yMDE1LTA4LVVuZGVyc3RhbmRpbmct
TFNUTXMvKSwgQ2hyaXN0b3BoZXIgT2xhaC4KCiMjIyMgRGVhbGluZyB3aXRo
IGxhcmdlIHZvY2FidWxhcmllcwoqIFtBIHNjYWxhYmxlIGhpZXJhcmNoaWNh
bCBkaXN0cmlidXRlZCBsYW5ndWFnZSBtb2RlbC4gTW5paCBhbmQgSGludG9u
LCBOSVBTIDIwMDkuXShodHRwczovL3BhcGVycy5uaXBzLmNjL3BhcGVyLzM1
ODMtYS1zY2FsYWJsZS1oaWVyYXJjaGljYWwtZGlzdHJpYnV0ZWQtbGFuZ3Vh
Z2UtbW9kZWwucGRmKQoqIFtBIGZhc3QgYW5kIHNpbXBsZSBhbGdvcml0aG0g
Zm9yIHRyYWluaW5nIG5ldXJhbCBwcm9iYWJpbGlzdGljIGxhbmd1YWdlIG1v
ZGVscy4gTW5paCBhbmQgVGVoLCBJQ01MIDIwMTIuXShodHRwczovL3d3dy5j
cy50b3JvbnRvLmVkdS9+YW1uaWgvcGFwZXJzL25jZWxtLnBkZikKKiBbT24g
VXNpbmcgVmVyeSBMYXJnZSBUYXJnZXQgVm9jYWJ1bGFyeSBmb3IgTmV1cmFs
IE1hY2hpbmUgVHJhbnNsYXRpb24uIEplYW4gZXQgYWwuLCBBQ0wgMjAxNS5d
KGh0dHA6Ly93d3cuYWNsd2ViLm9yZy9hbnRob2xvZ3kvUDE1LTEwMDEpCiog
W0V4cGxvcmluZyB0aGUgTGltaXRzIG9mIExhbmd1YWdlIE1vZGVsaW5nLiBK
b3plZm93aWN6IGV0IGFsLiwgYXJYaXYgMjAxNi5dKGh0dHBzOi8vYXJ4aXYu
b3JnL2Ficy8xNjAyLjAyNDEwKQoqIFtFZmZpY2llbnQgc29mdG1heCBhcHBy
b3hpbWF0aW9uIGZvciBHUFVzLiBHcmF2ZSBldCBhbC4sIGFyWGl2IDIwMTYu
XShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTYwOS4wNDMwOSkKKiBbTm90ZXMg
b24gTm9pc2UgQ29udHJhc3RpdmUgRXN0aW1hdGlvbiBhbmQgTmVnYXRpdmUg
U2FtcGxpbmcuIER5ZXIsIGFyWGl2IDIwMTQuXShodHRwczovL2FyeGl2Lm9y
Zy9hYnMvMTQxMC44MjUxKQoqIFtQcmFnbWF0aWMgTmV1cmFsIExhbmd1YWdl
IE1vZGVsbGluZyBpbiBNYWNoaW5lIFRyYW5zbGF0aW9uLiBCYWx0ZXNjdSBh
bmQgQmx1bnNvbSwgTkFBQ0wgMjAxNV0oaHR0cDovL3d3dy5hY2x3ZWIub3Jn
L2FudGhvbG9neS9OMTUtMTA4MykKCiMjIyMgUmVndWxhcmlzYXRpb24gYW5k
IGRyb3BvdXQKKiBbQSBUaGVvcmV0aWNhbGx5IEdyb3VuZGVkIEFwcGxpY2F0
aW9uIG9mIERyb3BvdXQgaW4gUmVjdXJyZW50IE5ldXJhbCBOZXR3b3Jrcy4g
R2FsIGFuZCBHaGFocmFtYW5pLCBOSVBTIDIwMTYuXShodHRwczovL2FyeGl2
Lm9yZy9hYnMvMTUxMi4wNTI4NykKKiBCbG9nOiBbVW5jZXJ0YWludHkgaW4g
RGVlcCBMZWFybmluZ10oaHR0cDovL21sZy5lbmcuY2FtLmFjLnVrL3lhcmlu
L2Jsb2dfMjI0OC5odG1sKSwgWWFyaW4gR2FsLgoKIyMjIyBPdGhlciBzdHVm
ZgoqIFtSZWN1cnJlbnQgSGlnaHdheSBOZXR3b3Jrcy4gWmlsbHkgZXQgYWwu
LCBhclhpdiAyMDE2Ll0oaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE2MDcuMDM0
NzQpCiogW0NhcGFjaXR5IGFuZCBUcmFpbmFiaWxpdHkgaW4gUmVjdXJyZW50
IE5ldXJhbCBOZXR3b3Jrcy4gQ29sbGlucyBldCBhbC4sIGFyWGl2IDIwMTYu
XShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTYxMS4wOTkxMykKCiMjIDcuIExl
Y3R1cmUgNSAtIFRleHQgQ2xhc3NpZmljYXRpb24gW0thcmwgTW9yaXR6IEhl
cm1hbm5dClRoaXMgbGVjdHVyZSBkaXNjdXNzZXMgdGV4dCBjbGFzc2lmaWNh
dGlvbiwgYmVnaW5uaW5nIHdpdGggYmFzaWMgY2xhc3NpZmllcnMsIHN1Y2gg
YXMgTmFpdmUgQmF5ZXMsIGFuZCBwcm9ncmVzc2luZyB0aHJvdWdoIHRvIFJO
TnMgYW5kIENvbnZvbHV0aW9uIE5ldHdvcmtzLgoKW1tzbGlkZXNdXShMZWN0
dXJlJTIwNSUyMC0lMjBUZXh0JTIwQ2xhc3NpZmljYXRpb24ucGRmKSAKW1t2
aWRlb11dKGh0dHA6Ly9tZWRpYS5wb2RjYXN0cy5veC5hYy51ay9jb21sYWIv
ZGVlcF9sZWFybmluZ19OTFAvMjAxNy0wMV9kZWVwX05MUF81X3RleHRfY2xh
c3NpZmljYXRpb24ubXA0KQoKIyMjIFJlYWRpbmcKICogW1JlY3VycmVudCBD
b252b2x1dGlvbmFsIE5ldXJhbCBOZXR3b3JrcyBmb3IgVGV4dCBDbGFzc2lm
aWNhdGlvbi4gTGFpIGV0IGFsLiBBQUFJIDIwMTUuXShodHRwOi8vd3d3LmFh
YWkub3JnL29jcy9pbmRleC5waHAvQUFBSS9BQUFJMTUvcGFwZXIvZG93bmxv
YWQvOTc0NS85NTUyKSAKICogW0EgQ29udm9sdXRpb25hbCBOZXVyYWwgTmV0
d29yayBmb3IgTW9kZWxsaW5nIFNlbnRlbmNlcywgS2FsY2hicmVubmVyIGV0
IGFsLiBBQ0wgMjAxNC5dKGh0dHA6Ly93d3cuYWNsd2ViLm9yZy9hbnRob2xv
Z3kvUDE0LTEwNjIpCiAqIFtTZW1hbnRpYyBjb21wb3NpdGlvbmFsaXR5IHRo
cm91Z2ggcmVjdXJzaXZlIG1hdHJpeC12ZWN0b3IsIFNvY2hlciBldCBhbC4g
RU1OTFAgMjAxMi5dKGh0dHA6Ly9ubHAuc3RhbmZvcmQuZWR1L3B1YnMvU29j
aGVySHV2YWxNYW5uaW5nTmdfRU1OTFAyMDEyLnBkZikKICogQmxvZzogW1Vu
ZGVyc3RhbmRpbmcgQ29udm9sdXRpb24gTmV1cmFsIE5ldHdvcmtzIEZvciBO
TFBdKGh0dHA6Ly93d3cud2lsZG1sLmNvbS8yMDE1LzExL3VuZGVyc3RhbmRp
bmctY29udm9sdXRpb25hbC1uZXVyYWwtbmV0d29ya3MtZm9yLW5scC8pLCBE
ZW5ueSBCcml0ei4KICogVGhlc2lzOiBbRGlzdHJpYnV0aW9uYWwgUmVwcmVz
ZW50YXRpb25zIGZvciBDb21wb3NpdGlvbmFsIFNlbWFudGljcywgSGVybWFu
biAoMjAxNCkuXShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTQxMS4zMTQ2KQoK
IyMgOC4gTGVjdHVyZSA2IC0gRGVlcCBOTFAgb24gTnZpZGlhIEdQVXMgW0pl
cmVteSBBcHBsZXlhcmRdClRoaXMgbGVjdHVyZSBpbnRyb2R1Y2VzIEdyYXBo
aWNhbCBQcm9jZXNzaW5nIFVuaXRzIChHUFVzKSBhcyBhbiBhbHRlcm5hdGl2
ZSB0byBDUFVzIGZvciBleGVjdXRpbmcgRGVlcCBMZWFybmluZyBhbGdvcml0
aG1zLiBUaGUgc3RyZW5ndGhzIGFuZCB3ZWFrbmVzc2VzIG9mIEdQVXMgYXJl
IGRpc2N1c3NlZCBhcyB3ZWxsIGFzIHRoZSBpbXBvcnRhbmNlIG9mIHVuZGVy
c3RhbmRpbmcgaG93IG1lbW9yeSBiYW5kd2lkdGggYW5kIGNvbXB1dGF0aW9u
IGltcGFjdCB0aHJvdWdocHV0IGZvciBSTk5zLgoKW1tzbGlkZXNdXShMZWN0
dXJlJTIwNiUyMC0lMjBOdmlkaWElMjBSTk5zJTIwYW5kJTIwR1BVcy5wZGYp
CltbdmlkZW9dXShodHRwOi8vbWVkaWEucG9kY2FzdHMub3guYWMudWsvY29t
bGFiL2RlZXBfbGVhcm5pbmdfTkxQLzIwMTctMDFfZGVlcF9OTFBfNl9udmlk
aWFfZ3B1cy5tcDQpCgojIyMgUmVhZGluZwoqIFtPcHRpbWl6aW5nIFBlcmZv
cm1hbmNlIG9mIFJlY3VycmVudCBOZXVyYWwgTmV0d29ya3Mgb24gR1BVcy4g
QXBwbGV5YXJkIGV0IGFsLiwgYXJYaXYgMjAxNi5dKGh0dHBzOi8vYXJ4aXYu
b3JnL2Ficy8xNjA0LjAxOTQ2KQoqIFtQZXJzaXN0ZW50IFJOTnM6IFN0YXNo
aW5nIFJlY3VycmVudCBXZWlnaHRzIE9uLUNoaXAsIERpYW1vcyBldCBhbC4s
IElDTUwgMjAxNl0oaHR0cDovL2ptbHIub3JnL3Byb2NlZWRpbmdzL3BhcGVy
cy92NDgvZGlhbW9zMTYucGRmKQoqIFtFZmZpY2llbnQgc29mdG1heCBhcHBy
b3hpbWF0aW9uIGZvciBHUFVzLiBHcmF2ZSBldCBhbC4sIGFyWGl2IDIwMTYu
XShodHRwczovL2FyeGl2Lm9yZy9hYnMvMTYwOS4wNDMwOSkKCgojIyA5LiBM
ZWN0dXJlIDcgLSBDb25kaXRpb25hbCBMYW5ndWFnZSBNb2RlbHMgW0Nocmlz
IER5ZXJdCkluIHRoaXMgbGVjdHVyZSB3ZSBleHRlbmQgdGhlIGNvbmNlcHQg
b2YgbGFuZ3VhZ2UgbW9kZWxsaW5nIHRvIGluY29ycG9yYXRlIHByaW9yIGlu
Zm9ybWF0aW9uLiBCeSBjb25kaXRpb25pbmcgYW4gUk5OIGxhbmd1YWdlIG1v
ZGVsIG9uIGFuIGlucHV0IHJlcHJlc2VudGF0aW9uIHdlIGNhbiBnZW5lcmF0
ZSBjb250ZXh0dWFsbHkgcmVsZXZhbnQgbGFuZ3VhZ2UuIFRoaXMgdmVyeSBn
ZW5lcmFsIGlkZWEgY2FuIGJlIGFwcGxpZWQgdG8gdHJhbnNkdWNlIHNlcXVl
bmNlcyBpbnRvIG5ldyBzZXF1ZW5jZXMgZm9yIHRhc2tzIHN1Y2ggYXMgdHJh
bnNsYXRpb24gYW5kIHN1bW1hcmlzYXRpb24sIG9yIGltYWdlcyBpbnRvIGNh
cHRpb25zIGRlc2NyaWJpbmcgdGhlaXIgY29udGVudC4KCltbc2xpZGVzXV0o
TGVjdHVyZSUyMDclMjAtJTIwQ29uZGl0aW9uYWwlMjBMYW5ndWFnZSUyME1v
ZGVsaW5nLnBkZikKW1t2aWRlb11dKGh0dHA6Ly9tZWRpYS5wb2RjYXN0cy5v
eC5hYy51ay9jb21sYWIvZGVlcF9sZWFybmluZ19OTFAvMjAxNy0wMV9kZWVw
X05MUF83X2NvbmRpdGlvbmFsX2xhbmdfbW9kLm1wNCkKCiMjIyBSZWFkaW5n
CiogW1JlY3VycmVudCBDb250aW51b3VzIFRyYW5zbGF0aW9uIE1vZGVscy4g
S2FsY2hicmVubmVyIGFuZCBCbHVuc29tLCBFTU5MUCAyMDEzXShodHRwOi8v
YW50aG9sb2d5LmFjbHdlYi5vcmcvRC9EMTMvRDEzLTExNzYucGRmKQoqIFtT
ZXF1ZW5jZSB0byBTZXF1ZW5jZSBMZWFybmluZyB3aXRoIE5ldXJhbCBOZXR3
b3Jrcy4gU3V0c2tldmVyIGV0IGFsLiwgTklQUyAyMDE0XShodHRwczovL2Fy
eGl2Lm9yZy9hYnMvMTQwOS4zMjE1KQoqIFtNdWx0aW1vZGFsIE5ldXJhbCBM
YW5ndWFnZSBNb2RlbHMuIEtpcm9zIGV0IGFsLiwgSUNNTCAyMDE0XShodHRw
Oi8vd3d3LmNzLnRvcm9udG8uZWR1L35ya2lyb3MvcGFwZXJzL21ubG0yMDE0
LnBkZikKKiBbU2hvdyBhbmQgVGVsbDogQSBOZXVyYWwgSW1hZ2UgQ2FwdGlv
biBHZW5lcmF0b3IuIFZpbnlhbHMgZXQgYWwuLCBDVlBSIDIwMTVdKGh0dHBz
Oi8vYXJ4aXYub3JnL2Ficy8xNDExLjQ1NTUpCgoKIyMgMTAuIExlY3R1cmUg
OCAtIEdlbmVyYXRpbmcgTGFuZ3VhZ2Ugd2l0aCBBdHRlbnRpb24gW0Nocmlz
IER5ZXJdClRoaXMgbGVjdHVyZSBpbnRyb2R1Y2VzIG9uZSBvZiB0aGUgbW9z
dCBpbXBvcnRhbnQgYW5kIGluZmx1ZW5jaWFsIG1lY2hhbmlzbXMgZW1wbG95
ZWQgaW4gRGVlcCBOZXVyYWwgTmV0d29ya3M6IEF0dGVudGlvbi4gQXR0ZW50
aW9uIGF1Z21lbnRzIHJlY3VycmVudCBuZXR3b3JrcyB3aXRoIHRoZSBhYmls
aXR5IHRvIGNvbmRpdGlvbiBvbiBzcGVjaWZpYyBwYXJ0cyBvZiB0aGUgaW5w
dXQgYW5kIGlzIGtleSB0byBhY2hpZXZpbmcgaGlnaCBwZXJmb3JtYW5jZSBp
biB0YXNrcyBzdWNoIGFzIE1hY2hpbmUgVHJhbnNsYXRpb24gYW5kIEltYWdl
IENhcHRpb25pbmcuCgpbW3NsaWRlc11dKExlY3R1cmUlMjA4JTIwLSUyMENv
bmRpdGlvbmFsJTIwTGFuZ3VhZ2UlMjBNb2RlbGluZyUyMHdpdGglMjBBdHRl
bnRpb24ucGRmKQpbW3ZpZGVvXV0oaHR0cDovL21lZGlhLnBvZGNhc3RzLm94
LmFjLnVrL2NvbWxhYi9kZWVwX2xlYXJuaW5nX05MUC8yMDE3LTAxX2RlZXBf
TkxQXzhfY29uZGl0aW9uYWxfbGFuZ19tb2RfYXR0Lm1wNCkKCiMjIyBSZWFk
aW5nCiogW05ldXJhbCBNYWNoaW5lIFRyYW5zbGF0aW9uIGJ5IEpvaW50bHkg
TGVhcm5pbmcgdG8gQWxpZ24gYW5kIFRyYW5zbGF0ZS4gQmFoZGFuYXUgZXQg
YWwuLCBJQ0xSIDIwMTVdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNDA5LjA0
NzMpCiogW1Nob3csIEF0dGVuZCwgYW5kIFRlbGw6IE5ldXJhbCBJbWFnZSBD
YXB0aW9uIEdlbmVyYXRpb24gd2l0aCBWaXN1YWwgQXR0ZW50aW9uLiBYdSBl
dCBhbC4sIElDTUwgMjAxNV0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzE1MDIu
MDMwNDQucGRmKQoqIFtJbmNvcnBvcmF0aW5nIHN0cnVjdHVyYWwgYWxpZ25t
ZW50IGJpYXNlcyBpbnRvIGFuIGF0dGVudGlvbmFsIG5ldXJhbCB0cmFuc2xh
dGlvbiBtb2RlbC4gQ29obiBldCBhbC4sIE5BQUNMIDIwMTZdKGh0dHA6Ly93
d3cuYWNsd2ViLm9yZy9hbnRob2xvZ3kvTjE2LTExMDIpCiogW0JMRVU6IGEg
TWV0aG9kIGZvciBBdXRvbWF0aWMgRXZhbHVhdGlvbiBvZiBNYWNoaW5lIFRy
YW5zbGF0aW9uLiBQYXBpbmVuaSBldCBhbCwgQUNMIDIwMDJdKGh0dHA6Ly93
d3cuYWNsd2ViLm9yZy9hbnRob2xvZ3kvUDAyLTEwNDAucGRmKQoKCiMjIDEx
LiBMZWN0dXJlIDkgLSBTcGVlY2ggUmVjb2duaXRpb24gKEFTUikgW0FuZHJl
dyBTZW5pb3JdCkF1dG9tYXRpYyBTcGVlY2ggUmVjb2duaXRpb24gKEFTUikg
aXMgdGhlIHRhc2sgb2YgdHJhbnNkdWNpbmcgcmF3IGF1ZGlvIHNpZ25hbHMg
b2Ygc3Bva2VuIGxhbmd1YWdlIGludG8gdGV4dCB0cmFuc2NyaXB0aW9ucy4g
VGhpcyB0YWxrIGNvdmVycyB0aGUgaGlzdG9yeSBvZiBBU1IgbW9kZWxzLCBm
cm9tIEdhdXNzaWFuIE1peHR1cmVzIHRvIGF0dGVudGlvbiBhdWdtZW50ZWQg
Uk5OcywgdGhlIGJhc2ljIGxpbmd1aXN0aWNzIG9mIHNwZWVjaCwgYW5kIHRo
ZSB2YXJpb3VzIGlucHV0IGFuZCBvdXRwdXQgcmVwcmVzZW50YXRpb25zIGZy
ZXF1ZW50bHkgZW1wbG95ZWQuCgpbW3NsaWRlc11dKExlY3R1cmUlMjA5JTIw
LSUyMFNwZWVjaCUyMFJlY29nbml0aW9uLnBkZikKW1t2aWRlb11dKGh0dHA6
Ly9tZWRpYS5wb2RjYXN0cy5veC5hYy51ay9jb21sYWIvZGVlcF9sZWFybmlu
Z19OTFAvMjAxNy0wMV9kZWVwX05MUF85X3NwZWVjaF9yZWNvZ25pdGlvbi5t
cDQpCgoKIyMgMTIuIExlY3R1cmUgMTAgLSBUZXh0IHRvIFNwZWVjaCAoVFRT
KSBbQW5kcmV3IFNlbmlvcl0KVGhpcyBsZWN0dXJlIGludHJvZHVjZXMgYWxn
b3JpdGhtcyBmb3IgY29udmVydGluZyB3cml0dGVuIGxhbmd1YWdlIGludG8g
c3Bva2VuIGxhbmd1YWdlIChUZXh0IHRvIFNwZWVjaCkuIFRUUyBpcyB0aGUg
aW52ZXJzZSBwcm9jZXNzIHRvIEFTUiwgYnV0IHRoZXJlIGFyZSBzb21lIGlt
cG9ydGFudCBkaWZmZXJlbmNlcyBpbiB0aGUgbW9kZWxzIGFwcGxpZWQuIEhl
cmUgd2UgcmV2aWV3IHRyYWRpdGlvbmFsIFRUUyBtb2RlbHMsIGFuZCB0aGVu
IGNvdmVyIG1vcmUgcmVjZW50IG5ldXJhbCBhcHByb2FjaGVzIHN1Y2ggYXMg
RGVlcE1pbmQncyBXYXZlTmV0IG1vZGVsLgoKW1tzbGlkZXNdXShMZWN0dXJl
JTIwMTAlMjAtJTIwVGV4dCUyMHRvJTIwU3BlZWNoLnBkZikKW1t2aWRlb11d
KGh0dHA6Ly9tZWRpYS5wb2RjYXN0cy5veC5hYy51ay9jb21sYWIvZGVlcF9s
ZWFybmluZ19OTFAvMjAxNy0wMV9kZWVwX05MUF8xMF90ZXh0X3NwZWVjaC5t
cDQpCgoKIyMgMTMuIExlY3R1cmUgMTEgLSBRdWVzdGlvbiBBbnN3ZXJpbmcg
W0thcmwgTW9yaXR6IEhlcm1hbm5dCgpbW3NsaWRlc11dKExlY3R1cmUlMjAx
MSUyMC0lMjBRdWVzdGlvbiUyMEFuc3dlcmluZy5wZGYpCltbdmlkZW9dXSho
dHRwOi8vbWVkaWEucG9kY2FzdHMub3guYWMudWsvY29tbGFiL2RlZXBfbGVh
cm5pbmdfTkxQLzIwMTctMDFfZGVlcF9OTFBfMTFfcXVlc3Rpb25fYW5zd2Vy
aW5nLm1wNCkKCiMjIyBSZWFkaW5nCiogW1RlYWNoaW5nIG1hY2hpbmVzIHRv
IHJlYWQgYW5kIGNvbXByZWhlbmQuIEhlcm1hbm4gZXQgYWwuLCBOSVBTIDIw
MTVdKGh0dHA6Ly9wYXBlcnMubmlwcy5jYy9wYXBlci81OTQ1LXRlYWNoaW5n
LW1hY2hpbmVzLXRvLXJlYWQtYW5kLWNvbXByZWhlbmQpCiogW0RlZXAgTGVh
cm5pbmcgZm9yIEFuc3dlciBTZW50ZW5jZSBTZWxlY3Rpb24uIFl1IGV0IGFs
LiwgTklQUyBEZWVwIExlYXJuaW5nIFdvcmtzaG9wIDIwMTRdKGh0dHBzOi8v
YXJ4aXYub3JnL2Ficy8xNDEyLjE2MzIpCgoKIyMgMTQuIExlY3R1cmUgMTIg
LSBNZW1vcnkgW0VkIEdyZWZlbnN0ZXR0ZV0KCltbc2xpZGVzXV0oTGVjdHVy
ZSUyMDEyLSUyME1lbW9yeSUyMExlY3R1cmUucGRmKQpbW3ZpZGVvXV0oaHR0
cDovL21lZGlhLnBvZGNhc3RzLm94LmFjLnVrL2NvbWxhYi9kZWVwX2xlYXJu
aW5nX05MUC8yMDE3LTAxX2RlZXBfTkxQXzEyX21lbW9yeS5tcDQpCgojIyMg
UmVhZGluZwoqIFtIeWJyaWQgY29tcHV0aW5nIHVzaW5nIGEgbmV1cmFsIG5l
dHdvcmsgd2l0aCBkeW5hbWljIGV4dGVybmFsIG1lbW9yeS4gR3JhdmVzIGV0
IGFsLiwgTmF0dXJlIDIwMTZdKGh0dHA6Ly93d3cubmF0dXJlLmNvbS9uYXR1
cmUvam91cm5hbC92NTM4L243NjI2L2Ficy9uYXR1cmUyMDEwMS5odG1sKQoq
IFtSZWFzb25pbmcgYWJvdXQgRW50YWlsbWVudCB3aXRoIE5ldXJhbCBBdHRl
bnRpb24uIFJvY2t0w6RzY2hlbCBldCBhbC4sIElDTFIgMjAxNl0oaHR0cHM6
Ly9hcnhpdi5vcmcvYWJzLzE1MDkuMDY2NjQpCiogW0xlYXJuaW5nIHRvIHRy
YW5zZHVjZSB3aXRoIHVuYm91bmRlZCBtZW1vcnkuIEdyZWZlbnN0ZXR0ZSBl
dCBhbC4sIE5JUFMgMjAxNV0oaHR0cDovL3BhcGVycy5uaXBzLmNjL3BhcGVy
LzU2NDgtbGVhcm5pbmctdG8tdHJhbnNkdWNlLXdpdGgtdW5ib3VuZGVkLW1l
bW9yeSkKKiBbRW5kLXRvLUVuZCBNZW1vcnkgTmV0d29ya3MuIFN1a2hiYWF0
YXIgZXQgYWwuLCBOSVBTIDIwMTVdKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8x
NTAzLjA4ODk1KQoKCiMjIDE1LiBMZWN0dXJlIDEzIC0gTGluZ3Vpc3RpYyBL
bm93bGVkZ2UgaW4gTmV1cmFsIE5ldHdvcmtzCgpbW3NsaWRlc11dKExlY3R1
cmUlMjAxMyUyMC0lMjBMaW5ndWlzdGljcy5wZGYpCltbdmlkZW9dXShodHRw
Oi8vbWVkaWEucG9kY2FzdHMub3guYWMudWsvY29tbGFiL2RlZXBfbGVhcm5p
bmdfTkxQLzIwMTctMDFfZGVlcF9OTFBfMTNfbGluZ3Vpc3RpY19rbm93bGVk
Z2VfbmV1cmFsLm1wNCkKCgojIFBpYXp6YQpXZSB3aWxsIGJlIHVzaW5nIFBp
YXp6YSB0byBmYWNpbGl0YXRlIGNsYXNzIGRpc2N1c3Npb24gZHVyaW5nIHRo
ZSBjb3Vyc2UuIFJhdGhlciB0aGFuIGVtYWlsaW5nIHF1ZXN0aW9ucyBkaXJl
Y3RseSwgSSBlbmNvdXJhZ2UgeW91IHRvIHBvc3QgeW91ciBxdWVzdGlvbnMg
b24gUGlhenphIHRvIGJlIGFuc3dlcmVkIGJ5IHlvdXIgZmVsbG93IHN0dWRl
bnRzLCBpbnN0cnVjdG9ycywgYW5kIGxlY3R1cmVycy4gSG93ZXZlciBkbyBw
bGVhc2UgZG8gbm90ZSB0aGF0IGFsbCB0aGUgbGVjdHVyZXJzIGZvciB0aGlz
IGNvdXJzZSBhcmUgdm9sdW50ZWVyaW5nIHRoZWlyIHRpbWUgYW5kIG1heSBu
b3QgYWx3YXlzIGJlIGF2YWlsYWJsZSB0byBnaXZlIGEgcmVzcG9uc2UuCgpG
aW5kIG91ciBjbGFzcyBwYWdlIGF0OiBodHRwczovL3BpYXp6YS5jb20vb3gu
YWMudWsvd2ludGVyMjAxNy9kbmxwaHQyMDE3L2hvbWUKCiMgQXNzZXNzbWVu
dApUaGUgcHJpbWFyeSBhc3Nlc3NtZW50IGZvciB0aGlzIGNvdXJzZSB3aWxs
IGJlIGEgdGFrZS1ob21lIGFzc2lnbm1lbnQgaXNzdWVkIGF0IHRoZSBlbmQg
b2YgdGhlIHRlcm0uIFRoaXMgYXNzaWdubWVudCB3aWxsIGFzayBxdWVzdGlv
bnMgZHJhd2luZyBvbiB0aGUgY29uY2VwdHMgYW5kIG1vZGVscyBkaXNjdXNz
ZWQgaW4gdGhlIGNvdXJzZSwgYXMgd2VsbCBhcyBmcm9tIHNlbGVjdGVkIHJl
c2VhcmNoIHB1YmxpY2F0aW9ucy4gVGhlIG5hdHVyZSBvZiB0aGUgcXVlc3Rp
b25zIHdpbGwgaW5jbHVkZSBhbmFseXNpbmcgbWF0aGVtYXRpY2FsIGRlc2Ny
aXB0aW9ucyBvZiBtb2RlbHMgYW5kIHByb3Bvc2luZyBleHRlbnNpb25zLCBp
bXByb3ZlbWVudHMsIG9yIGV2YWx1YXRpb25zIHRvIHN1Y2ggbW9kZWxzLiBU
aGUgYXNzaWdubWVudCBtYXkgYWxzbyBhc2sgc3R1ZGVudHMgdG8gcmVhZCBz
cGVjaWZpYyByZXNlYXJjaCBwdWJsaWNhdGlvbnMgYW5kIGRpc2N1c3MgdGhl
aXIgcHJvcG9zZWQgYWxnb3JpdGhtcyBpbiB0aGUgY29udGV4dCBvZiB0aGUg
Y291cnNlLiBJbiBhbnN3ZXJpbmcgcXVlc3Rpb25zIHN0dWRlbnRzIHdpbGwg
YmUgZXhwZWN0ZWQgdG8gYm90aCBwcmVzZW50IGNvaGVyZW50IHdyaXR0ZW4g
YXJndW1lbnRzIGFuZCB1c2UgYXBwcm9wcmlhdGUgbWF0aGVtYXRpY2FsIGZv
cm11bGFlLCBhbmQgcG9zc2libHkgcHNldWRvLWNvZGUsIHRvIGlsbHVzdHJh
dGUgYW5zd2Vycy4KClRoZSBwcmFjdGljYWwgY29tcG9uZW50IG9mIHRoZSBj
b3Vyc2Ugd2lsbCBiZSBhc3Nlc3NlZCBpbiB0aGUgdXN1YWwgd2F5LgoKIyBB
Y2tub3dsZWRnZW1lbnRzClRoaXMgY291cnNlIHdvdWxkIG5vdCBoYXZlIGJl
ZW4gcG9zc2libGUgd2l0aG91dCB0aGUgc3VwcG9ydCBvZiBbRGVlcE1pbmRd
KGh0dHA6Ly93d3cuZGVlcG1pbmQuY29tKSwgW1RoZSBVbml2ZXJzaXR5IG9m
IE94Zm9yZCBEZXBhcnRtZW50IG9mIENvbXB1dGVyIFNjaWVuY2VdKGh0dHA6
Ly93d3cuY3Mub3guYWMudWsvKSwgW052aWRpYV0oaHR0cDovL3d3dy5udmlk
aWEuY29tKSwgYW5kIHRoZSBnZW5lcm91cyBkb25hdGlvbiBvZiBHUFUgcmVz
b3VyY2VzIGZyb20gW01pY3Jvc29mdCBBenVyZV0oaHR0cHM6Ly9henVyZS5t
aWNyb3NvZnQuY29tKS4K
",,14335,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
