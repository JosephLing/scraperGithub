name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'30-seconds-of-code',112507086,b'A curated collection of useful JavaScript snippets that you can understand in 30 seconds or less.',b'JavaScript',6,52610,,1766,False,b'https://api.github.com/repos/30-seconds/30-seconds-of-code/forks',"WyFbTG9nb10oL2xvZ28ucG5nKV0oaHR0cHM6Ly8zMHNlY29uZHNvZmNvZGUu
b3JnLykKCiMgMzAgc2Vjb25kcyBvZiBjb2RlCgpbIVtMaWNlbnNlXShodHRw
czovL2ltZy5zaGllbGRzLmlvL2JhZGdlL2xpY2Vuc2UtQ0MwLS0xLjAtYmx1
ZS5zdmcpXShodHRwczovL2dpdGh1Yi5jb20vMzAtc2Vjb25kcy8zMC1zZWNv
bmRzLW9mLWNvZGUvYmxvYi9tYXN0ZXIvTElDRU5TRSkgWyFbbnBtIERvd25s
b2Fkc10oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9ucG0vZHQvMzAtc2Vjb25k
cy1vZi1jb2RlLnN2ZyldKGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdl
LzMwLXNlY29uZHMtb2YtY29kZSkgWyFbbnBtIFZlcnNpb25dKGh0dHBzOi8v
aW1nLnNoaWVsZHMuaW8vbnBtL3YvMzAtc2Vjb25kcy1vZi1jb2RlLnN2Zyld
KGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlLzMwLXNlY29uZHMtb2Yt
Y29kZSkgWyFbS25vd24gVnVsbmVyYWJpbGl0aWVzXShodHRwczovL3NueWsu
aW8vdGVzdC9naXRodWIvMzAtc2Vjb25kcy8zMC1zZWNvbmRzLW9mLWNvZGUv
YmFkZ2Uuc3ZnP3RhcmdldEZpbGU9cGFja2FnZS5qc29uKV0oaHR0cHM6Ly9z
bnlrLmlvL3Rlc3QvZ2l0aHViLzMwLXNlY29uZHMvMzAtc2Vjb25kcy1vZi1j
b2RlP3RhcmdldEZpbGU9cGFja2FnZS5qc29uKSBbIVtUcmF2aXMgQnVpbGRd
KGh0dHBzOi8vdHJhdmlzLWNpLmNvbS8zMC1zZWNvbmRzLzMwLXNlY29uZHMt
b2YtY29kZS5zdmc/YnJhbmNoPW1hc3RlcildKGh0dHBzOi8vdHJhdmlzLWNp
LmNvbS8zMC1zZWNvbmRzLzMwLXNlY29uZHMtb2YtY29kZSkgPGJyLz4KWyFb
QXdlc29tZV0oaHR0cHM6Ly9hd2Vzb21lLnJlL2JhZGdlLnN2ZyldKGh0dHBz
Oi8vYXdlc29tZS5yZSkgWyFbUHJvZHVjdEh1bnRdKGh0dHBzOi8vaW1nLnNo
aWVsZHMuaW8vYmFkZ2UvcHJvZHVjdGh1bnQtdm90ZS1vcmFuZ2Uuc3ZnKV0o
aHR0cHM6Ly93d3cucHJvZHVjdGh1bnQuY29tL3Bvc3RzLzMwLXNlY29uZHMt
b2YtY29kZSkgWyFbanMtc2VtaXN0YW5kYXJkLXN0eWxlXShodHRwczovL2lt
Zy5zaGllbGRzLmlvL2JhZGdlL2NvZGUlMjBzdHlsZS1zZW1pc3RhbmRhcmQt
YnJpZ2h0Z3JlZW4uc3ZnKV0oaHR0cHM6Ly9naXRodWIuY29tL0ZsZXQvc2Vt
aXN0YW5kYXJkKSBbIVtQUnMgV2VsY29tZV0oaHR0cHM6Ly9pbWcuc2hpZWxk
cy5pby9iYWRnZS9QUnMtd2VsY29tZS1icmlnaHRncmVlbi5zdmcpXShodHRw
Oi8vbWFrZWFwdWxscmVxdWVzdC5jb20pCgo+IEN1cmF0ZWQgY29sbGVjdGlv
biBvZiB1c2VmdWwgSmF2YVNjcmlwdCBzbmlwcGV0cyB0aGF0IHlvdSBjYW4g
dW5kZXJzdGFuZCBpbiAzMCBzZWNvbmRzIG9yIGxlc3MuCgoqIFVzZSA8a2Jk
PkN0cmw8L2tiZD4gKyA8a2JkPkY8L2tiZD4gb3IgPGtiZD5jb21tYW5kPC9r
YmQ+ICsgPGtiZD5GPC9rYmQ+IHRvIHNlYXJjaCBmb3IgYSBzbmlwcGV0Lgoq
IENvbnRyaWJ1dGlvbnMgd2VsY29tZSwgcGxlYXNlIHJlYWQgdGhlIFtjb250
cmlidXRpb24gZ3VpZGVdKENPTlRSSUJVVElORy5tZCkuCiogU25pcHBldHMg
YXJlIHdyaXR0ZW4gaW4gRVM2LCB1c2UgdGhlIFtCYWJlbCB0cmFuc3BpbGVy
XShodHRwczovL2JhYmVsanMuaW8vKSB0byBlbnN1cmUgYmFja3dhcmRzLWNv
bXBhdGliaWxpdHkuCiogWW91IGNhbiBpbXBvcnQgdGhlc2Ugc25pcHBldHMg
aW50byBWU0NvZGUsIGJ5IGZvbGxvd2luZyB0aGUgaW5zdHJ1Y3Rpb25zIGZv
dW5kIFtoZXJlXShodHRwczovL2dpdGh1Yi5jb20vMzAtc2Vjb25kcy8zMC1z
ZWNvbmRzLW9mLWNvZGUvdHJlZS9tYXN0ZXIvdnNjb2RlX3NuaXBwZXRzKS4K
KiBZb3UgY2FuIHNlYXJjaCwgdmlldyBhbmQgY29weSB0aGVzZSBzbmlwcGV0
cyBmcm9tIGEgdGVybWluYWwsIHVzaW5nIHRoZSBDTEkgYXBwbGljYXRpb24g
ZnJvbSBbdGhpcyByZXBvXShodHRwczovL2dpdGh1Yi5jb20vc1FWZS8zMHMp
LgoqIElmIHlvdSB3YW50IHRvIGZvbGxvdyAzMC1zZWNvbmRzLW9mLWNvZGUg
b24gc29jaWFsIG1lZGlhLCB5b3UgY2FuIGZpbmQgdXMgb24gW0ZhY2Vib29r
XShodHRwczovL3d3dy5mYWNlYm9vay5jb20vMzBzZWNvbmRzb2Zjb2RlKSwg
W0luc3RhZ3JhbV0oaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS8zMHNlY29u
ZHNvZmNvZGUpIGFuZCBbVHdpdHRlcl0oaHR0cHM6Ly90d2l0dGVyLmNvbS8z
MHNlY29uZHNvZmNvZGUpLgoKIyMjIyBSZWxhdGVkIHByb2plY3RzCgoqIFsz
MCBTZWNvbmRzIG9mIENTU10oaHR0cHM6Ly8zMC1zZWNvbmRzLmdpdGh1Yi5p
by8zMC1zZWNvbmRzLW9mLWNzcy8pCiogWzMwIFNlY29uZHMgb2YgSW50ZXJ2
aWV3c10oaHR0cHM6Ly8zMHNlY29uZHNvZmludGVydmlld3Mub3JnLykKKiBb
MzAgU2Vjb25kcyBvZiBSZWFjdF0oaHR0cHM6Ly9naXRodWIuY29tLzMwLXNl
Y29uZHMvMzAtc2Vjb25kcy1vZi1yZWFjdCkKKiBbMzAgU2Vjb25kcyBvZiBQ
eXRob25dKGh0dHBzOi8vZ2l0aHViLmNvbS8zMC1zZWNvbmRzLzMwLXNlY29u
ZHMtb2YtcHl0aG9uLWNvZGUpCiogWzMwIFNlY29uZHMgb2YgUEhQXShodHRw
czovL2dpdGh1Yi5jb20vMzAtc2Vjb25kcy8zMC1zZWNvbmRzLW9mLXBocC1j
b2RlKQoqIFszMCBTZWNvbmRzIG9mIEtub3dsZWRnZV0oaHR0cHM6Ly9jaHJv
bWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvMzAtc2Vjb25kcy1vZi1r
bm93bGVkZ2UvbW1ncGxvbmRuamVrb2JvbmtsYWNtZW1pa2NuaGtsbGEpCiog
WzMwIFNlY29uZHMgb2YgS290bGluXShodHRwczovL2dpdGh1Yi5jb20vSXZh
bk13aXJ1a2kvMzAtc2Vjb25kcy1vZi1rb3RsaW4pIF8odW5vZmZpY2lhbClf
CgojIyMjIFBhY2thZ2UKCuKaoO+4jyAqKk5PVElDRToqKiBBIGZldyBvZiBv
dXIgc25pcHBldHMgYXJlIG5vdCB5ZXQgb3B0aW1pemVkIGZvciBwcm9kdWN0
aW9uIChzZWUgZGlzY2xhaW1lcnMgZm9yIGluZGl2aWR1YWwgc25pcHBldCBp
c3N1ZXMpLgoKWW91IGNhbiBmaW5kIGEgcGFja2FnZSB3aXRoIGFsbCB0aGUg
c25pcHBldHMgb24gW25wbV0oaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2th
Z2UvMzAtc2Vjb25kcy1vZi1jb2RlKS4KCmBgYGJhc2gKIyBXaXRoIG5wbQpu
cG0gaW5zdGFsbCAzMC1zZWNvbmRzLW9mLWNvZGUKCiMgV2l0aCB5YXJuCnlh
cm4gYWRkIDMwLXNlY29uZHMtb2YtY29kZQpgYGAKCltDRE4gbGlua10oaHR0
cHM6Ly91bnBrZy5jb20vMzAtc2Vjb25kcy1vZi1jb2RlLykKCjxkZXRhaWxz
Pgo8c3VtbWFyeT5EZXRhaWxzPC9zdW1tYXJ5PgoKKipCcm93c2VyKioKCmBg
YGh0bWwKPHNjcmlwdCBzcmM9Imh0dHBzOi8vdW5wa2cuY29tLzMwLXNlY29u
ZHMtb2YtY29kZUAxL2Rpc3QvXzMwcy5lczUubWluLmpzIj48L3NjcmlwdD4K
PHNjcmlwdD4KICBfMzBzLmF2ZXJhZ2UoMSwgMiwgMyk7Cjwvc2NyaXB0Pgpg
YGAKCioqTm9kZSoqCgpgYGBqcwovLyBDb21tb25KUwpjb25zdCBfMzBzID0g
cmVxdWlyZSgnMzAtc2Vjb25kcy1vZi1jb2RlJyk7Cl8zMHMuYXZlcmFnZSgx
LCAyLCAzKTsKCi8vIEVTIE1vZHVsZXMKaW1wb3J0IF8zMHMgZnJvbSAnMzAt
c2Vjb25kcy1vZi1jb2RlJzsKXzMwcy5hdmVyYWdlKDEsIDIsIDMpOwpgYGAK
CjwvZGV0YWlscz4KCiMjIENvbnRlbnRzCgojIyMg8J+UjCBBZGFwdGVyCgo8
ZGV0YWlscz4KPHN1bW1hcnk+VmlldyBjb250ZW50czwvc3VtbWFyeT4KCiog
W2BhcnlgXSgjYXJ5KQoqIFtgY2FsbGBdKCNjYWxsKQoqIFtgY29sbGVjdElu
dG9gXSgjY29sbGVjdGludG8pCiogW2BmbGlwYF0oI2ZsaXApCiogW2BvdmVy
YF0oI292ZXIpCiogW2BvdmVyQXJnc2BdKCNvdmVyYXJncykKKiBbYHBpcGVB
c3luY0Z1bmN0aW9uc2BdKCNwaXBlYXN5bmNmdW5jdGlvbnMpCiogW2BwaXBl
RnVuY3Rpb25zYF0oI3BpcGVmdW5jdGlvbnMpCiogW2Bwcm9taXNpZnlgXSgj
cHJvbWlzaWZ5KQoqIFtgcmVhcmdgXSgjcmVhcmcpCiogW2BzcHJlYWRPdmVy
YF0oI3NwcmVhZG92ZXIpCiogW2B1bmFyeWBdKCN1bmFyeSkKCjwvZGV0YWls
cz4KCiMjIyDwn5OaIEFycmF5Cgo8ZGV0YWlscz4KPHN1bW1hcnk+VmlldyBj
b250ZW50czwvc3VtbWFyeT4KCiogW2BhbGxgXSgjYWxsKQoqIFtgYWxsRXF1
YWxgXSgjYWxsZXF1YWwpCiogW2BhbnlgXSgjYW55KQoqIFtgYXJyYXlUb0NT
VmBdKCNhcnJheXRvY3N2KQoqIFtgYmlmdXJjYXRlYF0oI2JpZnVyY2F0ZSkK
KiBbYGJpZnVyY2F0ZUJ5YF0oI2JpZnVyY2F0ZWJ5KQoqIFtgY2h1bmtgXSgj
Y2h1bmspCiogW2Bjb21wYWN0YF0oI2NvbXBhY3QpCiogW2Bjb3VudEJ5YF0o
I2NvdW50YnkpCiogW2Bjb3VudE9jY3VycmVuY2VzYF0oI2NvdW50b2NjdXJy
ZW5jZXMpCiogW2BkZWVwRmxhdHRlbmBdKCNkZWVwZmxhdHRlbikKKiBbYGRp
ZmZlcmVuY2VgXSgjZGlmZmVyZW5jZSkKKiBbYGRpZmZlcmVuY2VCeWBdKCNk
aWZmZXJlbmNlYnkpCiogW2BkaWZmZXJlbmNlV2l0aGBdKCNkaWZmZXJlbmNl
d2l0aCkKKiBbYGRyb3BgXSgjZHJvcCkKKiBbYGRyb3BSaWdodGBdKCNkcm9w
cmlnaHQpCiogW2Bkcm9wUmlnaHRXaGlsZWBdKCNkcm9wcmlnaHR3aGlsZSkK
KiBbYGRyb3BXaGlsZWBdKCNkcm9wd2hpbGUpCiogW2BldmVyeU50aGBdKCNl
dmVyeW50aCkKKiBbYGZpbHRlckZhbHN5YF0oI2ZpbHRlcmZhbHN5KQoqIFtg
ZmlsdGVyTm9uVW5pcXVlYF0oI2ZpbHRlcm5vbnVuaXF1ZSkKKiBbYGZpbHRl
ck5vblVuaXF1ZUJ5YF0oI2ZpbHRlcm5vbnVuaXF1ZWJ5KQoqIFtgZmluZExh
c3RgXSgjZmluZGxhc3QpCiogW2BmaW5kTGFzdEluZGV4YF0oI2ZpbmRsYXN0
aW5kZXgpCiogW2BmbGF0dGVuYF0oI2ZsYXR0ZW4pCiogW2Bmb3JFYWNoUmln
aHRgXSgjZm9yZWFjaHJpZ2h0KQoqIFtgZ3JvdXBCeWBdKCNncm91cGJ5KQoq
IFtgaGVhZGBdKCNoZWFkKQoqIFtgaW5jbHVkZXNBbGxgXSgjaW5jbHVkZXNh
bGwpCiogW2BpbmNsdWRlc0FueWBdKCNpbmNsdWRlc2FueSkKKiBbYGluZGV4
T2ZBbGxgXSgjaW5kZXhvZmFsbCkKKiBbYGluaXRpYWxgXSgjaW5pdGlhbCkK
KiBbYGluaXRpYWxpemUyREFycmF5YF0oI2luaXRpYWxpemUyZGFycmF5KQoq
IFtgaW5pdGlhbGl6ZUFycmF5V2l0aFJhbmdlYF0oI2luaXRpYWxpemVhcnJh
eXdpdGhyYW5nZSkKKiBbYGluaXRpYWxpemVBcnJheVdpdGhSYW5nZVJpZ2h0
YF0oI2luaXRpYWxpemVhcnJheXdpdGhyYW5nZXJpZ2h0KQoqIFtgaW5pdGlh
bGl6ZUFycmF5V2l0aFZhbHVlc2BdKCNpbml0aWFsaXplYXJyYXl3aXRodmFs
dWVzKQoqIFtgaW5pdGlhbGl6ZU5EQXJyYXlgXSgjaW5pdGlhbGl6ZW5kYXJy
YXkpCiogW2BpbnRlcnNlY3Rpb25gXSgjaW50ZXJzZWN0aW9uKQoqIFtgaW50
ZXJzZWN0aW9uQnlgXSgjaW50ZXJzZWN0aW9uYnkpCiogW2BpbnRlcnNlY3Rp
b25XaXRoYF0oI2ludGVyc2VjdGlvbndpdGgpCiogW2Bpc1NvcnRlZGBdKCNp
c3NvcnRlZCkKKiBbYGpvaW5gXSgjam9pbikKKiBbYEpTT050b0NTVmBdKCNq
c29udG9jc3YtKQoqIFtgbGFzdGBdKCNsYXN0KQoqIFtgbG9uZ2VzdEl0ZW1g
XSgjbG9uZ2VzdGl0ZW0pCiogW2BtYXBPYmplY3RgXSgjbWFwb2JqZWN0LSkK
KiBbYG1heE5gXSgjbWF4bikKKiBbYG1pbk5gXSgjbWlubikKKiBbYG5vbmVg
XSgjbm9uZSkKKiBbYG50aEVsZW1lbnRgXSgjbnRoZWxlbWVudCkKKiBbYG9m
ZnNldGBdKCNvZmZzZXQpCiogW2BwYXJ0aXRpb25gXSgjcGFydGl0aW9uKQoq
IFtgcGVybXV0YXRpb25zYF0oI3Blcm11dGF0aW9ucy0pCiogW2BwdWxsYF0o
I3B1bGwpCiogW2BwdWxsQXRJbmRleGBdKCNwdWxsYXRpbmRleC0pCiogW2Bw
dWxsQXRWYWx1ZWBdKCNwdWxsYXR2YWx1ZS0pCiogW2BwdWxsQnlgXSgjcHVs
bGJ5LSkKKiBbYHJlZHVjZWRGaWx0ZXJgXSgjcmVkdWNlZGZpbHRlcikKKiBb
YHJlZHVjZVN1Y2Nlc3NpdmVgXSgjcmVkdWNlc3VjY2Vzc2l2ZSkKKiBbYHJl
ZHVjZVdoaWNoYF0oI3JlZHVjZXdoaWNoKQoqIFtgcmVqZWN0YF0oI3JlamVj
dCkKKiBbYHJlbW92ZWBdKCNyZW1vdmUpCiogW2BzYW1wbGVgXSgjc2FtcGxl
KQoqIFtgc2FtcGxlU2l6ZWBdKCNzYW1wbGVzaXplKQoqIFtgc2hhbmtgXSgj
c2hhbmspCiogW2BzaHVmZmxlYF0oI3NodWZmbGUpCiogW2BzaW1pbGFyaXR5
YF0oI3NpbWlsYXJpdHkpCiogW2Bzb3J0ZWRJbmRleGBdKCNzb3J0ZWRpbmRl
eCkKKiBbYHNvcnRlZEluZGV4QnlgXSgjc29ydGVkaW5kZXhieSkKKiBbYHNv
cnRlZExhc3RJbmRleGBdKCNzb3J0ZWRsYXN0aW5kZXgpCiogW2Bzb3J0ZWRM
YXN0SW5kZXhCeWBdKCNzb3J0ZWRsYXN0aW5kZXhieSkKKiBbYHN0YWJsZVNv
cnRgXSgjc3RhYmxlc29ydC0pCiogW2BzeW1tZXRyaWNEaWZmZXJlbmNlYF0o
I3N5bW1ldHJpY2RpZmZlcmVuY2UpCiogW2BzeW1tZXRyaWNEaWZmZXJlbmNl
QnlgXSgjc3ltbWV0cmljZGlmZmVyZW5jZWJ5KQoqIFtgc3ltbWV0cmljRGlm
ZmVyZW5jZVdpdGhgXSgjc3ltbWV0cmljZGlmZmVyZW5jZXdpdGgpCiogW2B0
YWlsYF0oI3RhaWwpCiogW2B0YWtlYF0oI3Rha2UpCiogW2B0YWtlUmlnaHRg
XSgjdGFrZXJpZ2h0KQoqIFtgdGFrZVJpZ2h0V2hpbGVgXSgjdGFrZXJpZ2h0
d2hpbGUpCiogW2B0YWtlV2hpbGVgXSgjdGFrZXdoaWxlKQoqIFtgdG9IYXNo
YF0oI3RvaGFzaCkKKiBbYHVuaW9uYF0oI3VuaW9uKQoqIFtgdW5pb25CeWBd
KCN1bmlvbmJ5KQoqIFtgdW5pb25XaXRoYF0oI3VuaW9ud2l0aCkKKiBbYHVu
aXF1ZUVsZW1lbnRzYF0oI3VuaXF1ZWVsZW1lbnRzKQoqIFtgdW5pcXVlRWxl
bWVudHNCeWBdKCN1bmlxdWVlbGVtZW50c2J5KQoqIFtgdW5pcXVlRWxlbWVu
dHNCeVJpZ2h0YF0oI3VuaXF1ZWVsZW1lbnRzYnlyaWdodCkKKiBbYHVuaXF1
ZVN5bW1ldHJpY0RpZmZlcmVuY2VgXSgjdW5pcXVlc3ltbWV0cmljZGlmZmVy
ZW5jZSkKKiBbYHVuemlwYF0oI3VuemlwKQoqIFtgdW56aXBXaXRoYF0oI3Vu
emlwd2l0aC0pCiogW2B3aXRob3V0YF0oI3dpdGhvdXQpCiogW2B4UHJvZGBd
KCN4cHJvZCkKKiBbYHppcGBdKCN6aXApCiogW2B6aXBPYmplY3RgXSgjemlw
b2JqZWN0KQoqIFtgemlwV2l0aGBdKCN6aXB3aXRoLSkKCjwvZGV0YWlscz4K
CiMjIyDwn4yQIEJyb3dzZXIKCjxkZXRhaWxzPgo8c3VtbWFyeT5WaWV3IGNv
bnRlbnRzPC9zdW1tYXJ5PgoKKiBbYGFycmF5VG9IdG1sTGlzdGBdKCNhcnJh
eXRvaHRtbGxpc3QpCiogW2Bib3R0b21WaXNpYmxlYF0oI2JvdHRvbXZpc2li
bGUpCiogW2Bjb3B5VG9DbGlwYm9hcmRgXSgjY29weXRvY2xpcGJvYXJkLSkK
KiBbYGNvdW50ZXJgXSgjY291bnRlci0pCiogW2BjcmVhdGVFbGVtZW50YF0o
I2NyZWF0ZWVsZW1lbnQpCiogW2BjcmVhdGVFdmVudEh1YmBdKCNjcmVhdGVl
dmVudGh1Yi0pCiogW2BjdXJyZW50VVJMYF0oI2N1cnJlbnR1cmwpCiogW2Bk
ZXRlY3REZXZpY2VUeXBlYF0oI2RldGVjdGRldmljZXR5cGUpCiogW2BlbGVt
ZW50Q29udGFpbnNgXSgjZWxlbWVudGNvbnRhaW5zKQoqIFtgZWxlbWVudElz
VmlzaWJsZUluVmlld3BvcnRgXSgjZWxlbWVudGlzdmlzaWJsZWludmlld3Bv
cnQtKQoqIFtgZm9ybVRvT2JqZWN0YF0oI2Zvcm10b29iamVjdCkKKiBbYGdl
dEltYWdlc2BdKCNnZXRpbWFnZXMpCiogW2BnZXRTY3JvbGxQb3NpdGlvbmBd
KCNnZXRzY3JvbGxwb3NpdGlvbikKKiBbYGdldFN0eWxlYF0oI2dldHN0eWxl
KQoqIFtgaGFzQ2xhc3NgXSgjaGFzY2xhc3MpCiogW2BoYXNoQnJvd3NlcmBd
KCNoYXNoYnJvd3Nlci0pCiogW2BoaWRlYF0oI2hpZGUpCiogW2BodHRwc1Jl
ZGlyZWN0YF0oI2h0dHBzcmVkaXJlY3QpCiogW2BpbnNlcnRBZnRlcmBdKCNp
bnNlcnRhZnRlcikKKiBbYGluc2VydEJlZm9yZWBdKCNpbnNlcnRiZWZvcmUp
CiogW2Bpc0Jyb3dzZXJUYWJGb2N1c2VkYF0oI2lzYnJvd3NlcnRhYmZvY3Vz
ZWQpCiogW2Bub2RlTGlzdFRvQXJyYXlgXSgjbm9kZWxpc3R0b2FycmF5KQoq
IFtgb2JzZXJ2ZU11dGF0aW9uc2BdKCNvYnNlcnZlbXV0YXRpb25zLSkKKiBb
YG9mZmBdKCNvZmYpCiogW2BvbmBdKCNvbikKKiBbYG9uVXNlcklucHV0Q2hh
bmdlYF0oI29udXNlcmlucHV0Y2hhbmdlLSkKKiBbYHByZWZpeGBdKCNwcmVm
aXgpCiogW2ByZWNvcmRBbmltYXRpb25GcmFtZXNgXSgjcmVjb3JkYW5pbWF0
aW9uZnJhbWVzKQoqIFtgcmVkaXJlY3RgXSgjcmVkaXJlY3QpCiogW2BydW5B
c3luY2BdKCNydW5hc3luYy0pCiogW2BzY3JvbGxUb1RvcGBdKCNzY3JvbGx0
b3RvcCkKKiBbYHNlcmlhbGl6ZUZvcm1gXSgjc2VyaWFsaXplZm9ybSkKKiBb
YHNldFN0eWxlYF0oI3NldHN0eWxlKQoqIFtgc2hvd2BdKCNzaG93KQoqIFtg
c21vb3RoU2Nyb2xsYF0oI3Ntb290aHNjcm9sbCkKKiBbYHRvZ2dsZUNsYXNz
YF0oI3RvZ2dsZWNsYXNzKQoqIFtgdHJpZ2dlckV2ZW50YF0oI3RyaWdnZXJl
dmVudCkKKiBbYFVVSURHZW5lcmF0b3JCcm93c2VyYF0oI3V1aWRnZW5lcmF0
b3Jicm93c2VyKQoKPC9kZXRhaWxzPgoKIyMjIOKPse+4jyBEYXRlCgo8ZGV0
YWlscz4KPHN1bW1hcnk+VmlldyBjb250ZW50czwvc3VtbWFyeT4KCiogW2Bk
YXlPZlllYXJgXSgjZGF5b2Z5ZWFyKQoqIFtgZm9ybWF0RHVyYXRpb25gXSgj
Zm9ybWF0ZHVyYXRpb24pCiogW2BnZXRDb2xvblRpbWVGcm9tRGF0ZWBdKCNn
ZXRjb2xvbnRpbWVmcm9tZGF0ZSkKKiBbYGdldERheXNEaWZmQmV0d2VlbkRh
dGVzYF0oI2dldGRheXNkaWZmYmV0d2VlbmRhdGVzKQoqIFtgZ2V0TWVyaWRp
ZW1TdWZmaXhPZkludGVnZXJgXSgjZ2V0bWVyaWRpZW1zdWZmaXhvZmludGVn
ZXIpCiogW2Bpc0FmdGVyRGF0ZWBdKCNpc2FmdGVyZGF0ZSkKKiBbYGlzQmVm
b3JlRGF0ZWBdKCNpc2JlZm9yZWRhdGUpCiogW2Bpc1NhbWVEYXRlYF0oI2lz
c2FtZWRhdGUpCiogW2Bpc1dlZWtkYXlgXSgjaXN3ZWVrZGF5KQoqIFtgaXNX
ZWVrZW5kYF0oI2lzd2Vla2VuZCkKKiBbYG1heERhdGVgXSgjbWF4ZGF0ZSkK
KiBbYG1pbkRhdGVgXSgjbWluZGF0ZSkKKiBbYHRvbW9ycm93YF0oI3RvbW9y
cm93KQoqIFtgeWVzdGVyZGF5YF0oI3llc3RlcmRheSkKCjwvZGV0YWlscz4K
CiMjIyDwn46b77iPIEZ1bmN0aW9uCgo8ZGV0YWlscz4KPHN1bW1hcnk+Vmll
dyBjb250ZW50czwvc3VtbWFyeT4KCiogW2BhdHRlbXB0YF0oI2F0dGVtcHQp
CiogW2BiaW5kYF0oI2JpbmQpCiogW2BiaW5kS2V5YF0oI2JpbmRrZXkpCiog
W2BjaGFpbkFzeW5jYF0oI2NoYWluYXN5bmMpCiogW2BjaGVja1Byb3BgXSgj
Y2hlY2twcm9wKQoqIFtgY29tcG9zZWBdKCNjb21wb3NlKQoqIFtgY29tcG9z
ZVJpZ2h0YF0oI2NvbXBvc2VyaWdodCkKKiBbYGNvbnZlcmdlYF0oI2NvbnZl
cmdlKQoqIFtgY3VycnlgXSgjY3VycnkpCiogW2BkZWJvdW5jZWBdKCNkZWJv
dW5jZSkKKiBbYGRlZmVyYF0oI2RlZmVyKQoqIFtgZGVsYXlgXSgjZGVsYXkp
CiogW2BmdW5jdGlvbk5hbWVgXSgjZnVuY3Rpb25uYW1lKQoqIFtgaHpgXSgj
aHopCiogW2BtZW1vaXplYF0oI21lbW9pemUtKQoqIFtgbmVnYXRlYF0oI25l
Z2F0ZSkKKiBbYG9uY2VgXSgjb25jZSkKKiBbYHBhcnRpYWxgXSgjcGFydGlh
bCkKKiBbYHBhcnRpYWxSaWdodGBdKCNwYXJ0aWFscmlnaHQpCiogW2BydW5Q
cm9taXNlc0luU2VyaWVzYF0oI3J1bnByb21pc2VzaW5zZXJpZXMpCiogW2Bz
bGVlcGBdKCNzbGVlcCkKKiBbYHRocm90dGxlYF0oI3Rocm90dGxlLSkKKiBb
YHRpbWVzYF0oI3RpbWVzKQoqIFtgdW5jdXJyeWBdKCN1bmN1cnJ5KQoqIFtg
dW5mb2xkYF0oI3VuZm9sZCkKKiBbYHdoZW5gXSgjd2hlbikKCjwvZGV0YWls
cz4KCiMjIyDinpcgTWF0aAoKPGRldGFpbHM+CjxzdW1tYXJ5PlZpZXcgY29u
dGVudHM8L3N1bW1hcnk+CgoqIFtgYXBwcm94aW1hdGVseUVxdWFsYF0oI2Fw
cHJveGltYXRlbHllcXVhbCkKKiBbYGF2ZXJhZ2VgXSgjYXZlcmFnZSkKKiBb
YGF2ZXJhZ2VCeWBdKCNhdmVyYWdlYnkpCiogW2BiaW5vbWlhbENvZWZmaWNp
ZW50YF0oI2Jpbm9taWFsY29lZmZpY2llbnQpCiogW2BjbGFtcE51bWJlcmBd
KCNjbGFtcG51bWJlcikKKiBbYGRlZ3JlZXNUb1JhZHNgXSgjZGVncmVlc3Rv
cmFkcykKKiBbYGRpZ2l0aXplYF0oI2RpZ2l0aXplKQoqIFtgZGlzdGFuY2Vg
XSgjZGlzdGFuY2UpCiogW2BlbG9gXSgjZWxvLSkKKiBbYGZhY3RvcmlhbGBd
KCNmYWN0b3JpYWwpCiogW2BmaWJvbmFjY2lgXSgjZmlib25hY2NpKQoqIFtg
Z2NkYF0oI2djZCkKKiBbYGdlb21ldHJpY1Byb2dyZXNzaW9uYF0oI2dlb21l
dHJpY3Byb2dyZXNzaW9uKQoqIFtgaGFtbWluZ0Rpc3RhbmNlYF0oI2hhbW1p
bmdkaXN0YW5jZSkKKiBbYGluUmFuZ2VgXSgjaW5yYW5nZSkKKiBbYGlzRGl2
aXNpYmxlYF0oI2lzZGl2aXNpYmxlKQoqIFtgaXNFdmVuYF0oI2lzZXZlbikK
KiBbYGlzTmVnYXRpdmVaZXJvYF0oI2lzbmVnYXRpdmV6ZXJvKQoqIFtgaXNP
ZGRgXSgjaXNvZGQpCiogW2Bpc1ByaW1lYF0oI2lzcHJpbWUpCiogW2BsY21g
XSgjbGNtKQoqIFtgbHVobkNoZWNrYF0oI2x1aG5jaGVjay0pCiogW2BtYXBO
dW1SYW5nZWBdKCNtYXBudW1yYW5nZSkKKiBbYG1heEJ5YF0oI21heGJ5KQoq
IFtgbWVkaWFuYF0oI21lZGlhbikKKiBbYG1pZHBvaW50YF0oI21pZHBvaW50
KQoqIFtgbWluQnlgXSgjbWluYnkpCiogW2BwZXJjZW50aWxlYF0oI3BlcmNl
bnRpbGUpCiogW2Bwb3dlcnNldGBdKCNwb3dlcnNldCkKKiBbYHByaW1lc2Bd
KCNwcmltZXMpCiogW2ByYWRzVG9EZWdyZWVzYF0oI3JhZHN0b2RlZ3JlZXMp
CiogW2ByYW5kb21JbnRBcnJheUluUmFuZ2VgXSgjcmFuZG9taW50YXJyYXlp
bnJhbmdlKQoqIFtgcmFuZG9tSW50ZWdlckluUmFuZ2VgXSgjcmFuZG9taW50
ZWdlcmlucmFuZ2UpCiogW2ByYW5kb21OdW1iZXJJblJhbmdlYF0oI3JhbmRv
bW51bWJlcmlucmFuZ2UpCiogW2Byb3VuZGBdKCNyb3VuZCkKKiBbYHNkYm1g
XSgjc2RibSkKKiBbYHN0YW5kYXJkRGV2aWF0aW9uYF0oI3N0YW5kYXJkZGV2
aWF0aW9uKQoqIFtgc3VtYF0oI3N1bSkKKiBbYHN1bUJ5YF0oI3N1bWJ5KQoq
IFtgc3VtUG93ZXJgXSgjc3VtcG93ZXIpCiogW2B0b1NhZmVJbnRlZ2VyYF0o
I3Rvc2FmZWludGVnZXIpCiogW2B2ZWN0b3JEaXN0YW5jZWBdKCN2ZWN0b3Jk
aXN0YW5jZSkKCjwvZGV0YWlscz4KCiMjIyDwn5OmIE5vZGUKCjxkZXRhaWxz
Pgo8c3VtbWFyeT5WaWV3IGNvbnRlbnRzPC9zdW1tYXJ5PgoKKiBbYGF0b2Jg
XSgjYXRvYikKKiBbYGJ0b2FgXSgjYnRvYSkKKiBbYGNvbG9yaXplYF0oI2Nv
bG9yaXplKQoqIFtgY3JlYXRlRGlySWZOb3RFeGlzdHNgXSgjY3JlYXRlZGly
aWZub3RleGlzdHMpCiogW2BoYXNGbGFnc2BdKCNoYXNmbGFncykKKiBbYGhh
c2hOb2RlYF0oI2hhc2hub2RlKQoqIFtgaXNEdXBsZXhTdHJlYW1gXSgjaXNk
dXBsZXhzdHJlYW0pCiogW2Bpc1JlYWRhYmxlU3RyZWFtYF0oI2lzcmVhZGFi
bGVzdHJlYW0pCiogW2Bpc1N0cmVhbWBdKCNpc3N0cmVhbSkKKiBbYGlzVHJh
dmlzQ0lgXSgjaXN0cmF2aXNjaSkKKiBbYGlzV3JpdGFibGVTdHJlYW1gXSgj
aXN3cml0YWJsZXN0cmVhbSkKKiBbYEpTT05Ub0ZpbGVgXSgjanNvbnRvZmls
ZSkKKiBbYHJlYWRGaWxlTGluZXNgXSgjcmVhZGZpbGVsaW5lcykKKiBbYHVu
dGlsZGlmeWBdKCN1bnRpbGRpZnkpCiogW2BVVUlER2VuZXJhdG9yTm9kZWBd
KCN1dWlkZ2VuZXJhdG9ybm9kZSkKCjwvZGV0YWlscz4KCiMjIyDwn5eD77iP
IE9iamVjdAoKPGRldGFpbHM+CjxzdW1tYXJ5PlZpZXcgY29udGVudHM8L3N1
bW1hcnk+CgoqIFtgYmluZEFsbGBdKCNiaW5kYWxsKQoqIFtgZGVlcENsb25l
YF0oI2RlZXBjbG9uZSkKKiBbYGRlZXBGcmVlemVgXSgjZGVlcGZyZWV6ZSkK
KiBbYGRlZXBHZXRgXSgjZGVlcGdldCkKKiBbYGRlZXBNYXBLZXlzYF0oI2Rl
ZXBtYXBrZXlzLSkKKiBbYGRlZmF1bHRzYF0oI2RlZmF1bHRzKQoqIFtgZGln
YF0oI2RpZykKKiBbYGVxdWFsc2BdKCNlcXVhbHMtKQoqIFtgZmluZEtleWBd
KCNmaW5ka2V5KQoqIFtgZmluZExhc3RLZXlgXSgjZmluZGxhc3RrZXkpCiog
W2BmbGF0dGVuT2JqZWN0YF0oI2ZsYXR0ZW5vYmplY3QpCiogW2Bmb3JPd25g
XSgjZm9yb3duKQoqIFtgZm9yT3duUmlnaHRgXSgjZm9yb3ducmlnaHQpCiog
W2BmdW5jdGlvbnNgXSgjZnVuY3Rpb25zKQoqIFtgZ2V0YF0oI2dldCkKKiBb
YGhhc0tleWBdKCNoYXNrZXkpCiogW2BpbnZlcnRLZXlWYWx1ZXNgXSgjaW52
ZXJ0a2V5dmFsdWVzKQoqIFtgbG93ZXJjYXNlS2V5c2BdKCNsb3dlcmNhc2Vr
ZXlzKQoqIFtgbWFwS2V5c2BdKCNtYXBrZXlzKQoqIFtgbWFwVmFsdWVzYF0o
I21hcHZhbHVlcykKKiBbYG1hdGNoZXNgXSgjbWF0Y2hlcykKKiBbYG1hdGNo
ZXNXaXRoYF0oI21hdGNoZXN3aXRoKQoqIFtgbWVyZ2VgXSgjbWVyZ2UpCiog
W2BuZXN0YF0oI25lc3QpCiogW2BvYmplY3RGcm9tUGFpcnNgXSgjb2JqZWN0
ZnJvbXBhaXJzKQoqIFtgb2JqZWN0VG9QYWlyc2BdKCNvYmplY3R0b3BhaXJz
KQoqIFtgb21pdGBdKCNvbWl0KQoqIFtgb21pdEJ5YF0oI29taXRieSkKKiBb
YG9yZGVyQnlgXSgjb3JkZXJieSkKKiBbYHBpY2tgXSgjcGljaykKKiBbYHBp
Y2tCeWBdKCNwaWNrYnkpCiogW2ByZW5hbWVLZXlzYF0oI3JlbmFtZWtleXMp
CiogW2BzaGFsbG93Q2xvbmVgXSgjc2hhbGxvd2Nsb25lKQoqIFtgc2l6ZWBd
KCNzaXplKQoqIFtgdHJhbnNmb3JtYF0oI3RyYW5zZm9ybSkKKiBbYHRydXRo
Q2hlY2tDb2xsZWN0aW9uYF0oI3RydXRoY2hlY2tjb2xsZWN0aW9uKQoqIFtg
dW5mbGF0dGVuT2JqZWN0YF0oI3VuZmxhdHRlbm9iamVjdC0pCgo8L2RldGFp
bHM+CgojIyMg8J+TnCBTdHJpbmcKCjxkZXRhaWxzPgo8c3VtbWFyeT5WaWV3
IGNvbnRlbnRzPC9zdW1tYXJ5PgoKKiBbYGJ5dGVTaXplYF0oI2J5dGVzaXpl
KQoqIFtgY2FwaXRhbGl6ZWBdKCNjYXBpdGFsaXplKQoqIFtgY2FwaXRhbGl6
ZUV2ZXJ5V29yZGBdKCNjYXBpdGFsaXplZXZlcnl3b3JkKQoqIFtgY29tcGFj
dFdoaXRlc3BhY2VgXSgjY29tcGFjdHdoaXRlc3BhY2UpCiogW2BDU1ZUb0Fy
cmF5YF0oI2NzdnRvYXJyYXkpCiogW2BDU1ZUb0pTT05gXSgjY3N2dG9qc29u
LSkKKiBbYGRlY2FwaXRhbGl6ZWBdKCNkZWNhcGl0YWxpemUpCiogW2Blc2Nh
cGVIVE1MYF0oI2VzY2FwZWh0bWwpCiogW2Blc2NhcGVSZWdFeHBgXSgjZXNj
YXBlcmVnZXhwKQoqIFtgZnJvbUNhbWVsQ2FzZWBdKCNmcm9tY2FtZWxjYXNl
KQoqIFtgaW5kZW50U3RyaW5nYF0oI2luZGVudHN0cmluZykKKiBbYGlzQWJz
b2x1dGVVUkxgXSgjaXNhYnNvbHV0ZXVybCkKKiBbYGlzQW5hZ3JhbWBdKCNp
c2FuYWdyYW0pCiogW2Bpc0xvd2VyQ2FzZWBdKCNpc2xvd2VyY2FzZSkKKiBb
YGlzVXBwZXJDYXNlYF0oI2lzdXBwZXJjYXNlKQoqIFtgbWFwU3RyaW5nYF0o
I21hcHN0cmluZykKKiBbYG1hc2tgXSgjbWFzaykKKiBbYHBhZGBdKCNwYWQp
CiogW2BwYWxpbmRyb21lYF0oI3BhbGluZHJvbWUpCiogW2BwbHVyYWxpemVg
XSgjcGx1cmFsaXplKQoqIFtgcmVtb3ZlTm9uQVNDSUlgXSgjcmVtb3Zlbm9u
YXNjaWkpCiogW2ByZXZlcnNlU3RyaW5nYF0oI3JldmVyc2VzdHJpbmcpCiog
W2Bzb3J0Q2hhcmFjdGVyc0luU3RyaW5nYF0oI3NvcnRjaGFyYWN0ZXJzaW5z
dHJpbmcpCiogW2BzcGxpdExpbmVzYF0oI3NwbGl0bGluZXMpCiogW2BzdHJp
bmdQZXJtdXRhdGlvbnNgXSgjc3RyaW5ncGVybXV0YXRpb25zLSkKKiBbYHN0
cmlwSFRNTFRhZ3NgXSgjc3RyaXBodG1sdGFncykKKiBbYHRvQ2FtZWxDYXNl
YF0oI3RvY2FtZWxjYXNlKQoqIFtgdG9LZWJhYkNhc2VgXSgjdG9rZWJhYmNh
c2UpCiogW2B0b1NuYWtlQ2FzZWBdKCN0b3NuYWtlY2FzZSkKKiBbYHRvVGl0
bGVDYXNlYF0oI3RvdGl0bGVjYXNlKQoqIFtgdHJ1bmNhdGVTdHJpbmdgXSgj
dHJ1bmNhdGVzdHJpbmcpCiogW2B1bmVzY2FwZUhUTUxgXSgjdW5lc2NhcGVo
dG1sKQoqIFtgVVJMSm9pbmBdKCN1cmxqb2luLSkKKiBbYHdvcmRzYF0oI3dv
cmRzKQoKPC9kZXRhaWxzPgoKIyMjIPCfk4MgVHlwZQoKPGRldGFpbHM+Cjxz
dW1tYXJ5PlZpZXcgY29udGVudHM8L3N1bW1hcnk+CgoqIFtgZ2V0VHlwZWBd
KCNnZXR0eXBlKQoqIFtgaXNgXSgjaXMpCiogW2Bpc0FycmF5TGlrZWBdKCNp
c2FycmF5bGlrZSkKKiBbYGlzQm9vbGVhbmBdKCNpc2Jvb2xlYW4pCiogW2Bp
c0VtcHR5YF0oI2lzZW1wdHkpCiogW2Bpc0Z1bmN0aW9uYF0oI2lzZnVuY3Rp
b24pCiogW2Bpc05pbGBdKCNpc25pbCkKKiBbYGlzTnVsbGBdKCNpc251bGwp
CiogW2Bpc051bWJlcmBdKCNpc251bWJlcikKKiBbYGlzT2JqZWN0YF0oI2lz
b2JqZWN0KQoqIFtgaXNPYmplY3RMaWtlYF0oI2lzb2JqZWN0bGlrZSkKKiBb
YGlzUGxhaW5PYmplY3RgXSgjaXNwbGFpbm9iamVjdCkKKiBbYGlzUHJpbWl0
aXZlYF0oI2lzcHJpbWl0aXZlKQoqIFtgaXNQcm9taXNlTGlrZWBdKCNpc3By
b21pc2VsaWtlKQoqIFtgaXNTdHJpbmdgXSgjaXNzdHJpbmcpCiogW2Bpc1N5
bWJvbGBdKCNpc3N5bWJvbCkKKiBbYGlzVW5kZWZpbmVkYF0oI2lzdW5kZWZp
bmVkKQoqIFtgaXNWYWxpZEpTT05gXSgjaXN2YWxpZGpzb24pCgo8L2RldGFp
bHM+CgojIyMg8J+UpyBVdGlsaXR5Cgo8ZGV0YWlscz4KPHN1bW1hcnk+Vmll
dyBjb250ZW50czwvc3VtbWFyeT4KCiogW2BjYXN0QXJyYXlgXSgjY2FzdGFy
cmF5KQoqIFtgY2xvbmVSZWdFeHBgXSgjY2xvbmVyZWdleHApCiogW2Bjb2Fs
ZXNjZWBdKCNjb2FsZXNjZSkKKiBbYGNvYWxlc2NlRmFjdG9yeWBdKCNjb2Fs
ZXNjZWZhY3RvcnkpCiogW2BleHRlbmRIZXhgXSgjZXh0ZW5kaGV4KQoqIFtg
Z2V0VVJMUGFyYW1ldGVyc2BdKCNnZXR1cmxwYXJhbWV0ZXJzKQoqIFtgaGV4
VG9SR0JgXSgjaGV4dG9yZ2ItKQoqIFtgaHR0cEdldGBdKCNodHRwZ2V0KQoq
IFtgaHR0cFBvc3RgXSgjaHR0cHBvc3QpCiogW2Bpc0Jyb3dzZXJgXSgjaXNi
cm93c2VyKQoqIFtgbW9zdFBlcmZvcm1hbnRgXSgjbW9zdHBlcmZvcm1hbnQp
CiogW2BudGhBcmdgXSgjbnRoYXJnKQoqIFtgb2JqZWN0VG9RdWVyeVN0cmlu
Z2BdKCNvYmplY3R0b3F1ZXJ5c3RyaW5nKQoqIFtgcGFyc2VDb29raWVgXSgj
cGFyc2Vjb29raWUpCiogW2BwcmV0dHlCeXRlc2BdKCNwcmV0dHlieXRlcy0p
CiogW2ByYW5kb21IZXhDb2xvckNvZGVgXSgjcmFuZG9taGV4Y29sb3Jjb2Rl
KQoqIFtgUkdCVG9IZXhgXSgjcmdidG9oZXgpCiogW2BzZXJpYWxpemVDb29r
aWVgXSgjc2VyaWFsaXplY29va2llKQoqIFtgdGltZVRha2VuYF0oI3RpbWV0
YWtlbikKKiBbYHRvQ3VycmVuY3lgXSgjdG9jdXJyZW5jeSkKKiBbYHRvRGVj
aW1hbE1hcmtgXSgjdG9kZWNpbWFsbWFyaykKKiBbYHRvT3JkaW5hbFN1ZmZp
eGBdKCN0b29yZGluYWxzdWZmaXgpCiogW2B2YWxpZGF0ZU51bWJlcmBdKCN2
YWxpZGF0ZW51bWJlcikKKiBbYHllc05vYF0oI3llc25vKQoKPC9kZXRhaWxz
PgoKCi0tLQoKIyMg8J+UjCBBZGFwdGVyCgoKIyMjIGFyeQoKQ3JlYXRlcyBh
IGZ1bmN0aW9uIHRoYXQgYWNjZXB0cyB1cCB0byBgbmAgYXJndW1lbnRzLCBp
Z25vcmluZyBhbnkgYWRkaXRpb25hbCBhcmd1bWVudHMuCgpDYWxsIHRoZSBw
cm92aWRlZCBmdW5jdGlvbiwgYGZuYCwgd2l0aCB1cCB0byBgbmAgYXJndW1l
bnRzLCB1c2luZyBgQXJyYXkucHJvdG90eXBlLnNsaWNlKDAsIG4pYCBhbmQg
dGhlIHNwcmVhZCBvcGVyYXRvciAoYC4uLmApLgoKYGBganMKY29uc3QgYXJ5
ID0gKGZuLCBuKSA9PiAoLi4uYXJncykgPT4gZm4oLi4uYXJncy5zbGljZSgw
LCBuKSk7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1t
YXJ5PgoKYGBganMKY29uc3QgZmlyc3RUd29NYXggPSBhcnkoTWF0aC5tYXgs
IDIpOwpbWzIsIDYsICdhJ10sIFs2LCA0LCA4XSwgWzEwXV0ubWFwKHggPT4g
Zmlyc3RUd29NYXgoLi4ueCkpOyAvLyBbNiwgNiwgMTBdCmBgYAo8L2RldGFp
bHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGNh
bGwKCkdpdmVuIGEga2V5IGFuZCBhIHNldCBvZiBhcmd1bWVudHMsIGNhbGwg
dGhlbSB3aGVuIGdpdmVuIGEgY29udGV4dC4gUHJpbWFyaWx5IHVzZWZ1bCBp
biBjb21wb3NpdGlvbi4KClVzZSBhIGNsb3N1cmUgdG8gY2FsbCBhIHN0b3Jl
ZCBrZXkgd2l0aCBzdG9yZWQgYXJndW1lbnRzLgoKYGBganMKY29uc3QgY2Fs
bCA9IChrZXksIC4uLmFyZ3MpID0+IGNvbnRleHQgPT4gY29udGV4dFtrZXld
KC4uLmFyZ3MpOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwv
c3VtbWFyeT4KCmBgYGpzClByb21pc2UucmVzb2x2ZShbMSwgMiwgM10pCiAg
LnRoZW4oY2FsbCgnbWFwJywgeCA9PiAyICogeCkpCiAgLnRoZW4oY29uc29s
ZS5sb2cpOyAvLyBbIDIsIDQsIDYgXQpjb25zdCBtYXAgPSBjYWxsLmJpbmQo
bnVsbCwgJ21hcCcpOwpQcm9taXNlLnJlc29sdmUoWzEsIDIsIDNdKQogIC50
aGVuKG1hcCh4ID0+IDIgKiB4KSkKICAudGhlbihjb25zb2xlLmxvZyk7IC8v
IFsgMiwgNCwgNiBdCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRv
IHRvcF0oI2NvbnRlbnRzKQoKIyMjIGNvbGxlY3RJbnRvCgpDaGFuZ2VzIGEg
ZnVuY3Rpb24gdGhhdCBhY2NlcHRzIGFuIGFycmF5IGludG8gYSB2YXJpYWRp
YyBmdW5jdGlvbi4KCkdpdmVuIGEgZnVuY3Rpb24sIHJldHVybiBhIGNsb3N1
cmUgdGhhdCBjb2xsZWN0cyBhbGwgaW5wdXRzIGludG8gYW4gYXJyYXktYWNj
ZXB0aW5nIGZ1bmN0aW9uLgoKYGBganMKY29uc3QgY29sbGVjdEludG8gPSBm
biA9PiAoLi4uYXJncykgPT4gZm4oYXJncyk7CmBgYAoKPGRldGFpbHM+Cjxz
dW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKY29uc3QgUGFsbCA9
IGNvbGxlY3RJbnRvKFByb21pc2UuYWxsLmJpbmQoUHJvbWlzZSkpOwpsZXQg
cDEgPSBQcm9taXNlLnJlc29sdmUoMSk7CmxldCBwMiA9IFByb21pc2UucmVz
b2x2ZSgyKTsKbGV0IHAzID0gbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRU
aW1lb3V0KHJlc29sdmUsIDIwMDAsIDMpKTsKUGFsbChwMSwgcDIsIHAzKS50
aGVuKGNvbnNvbGUubG9nKTsgLy8gWzEsIDIsIDNdIChhZnRlciBhYm91dCAy
IHNlY29uZHMpCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRv
cF0oI2NvbnRlbnRzKQoKIyMjIGZsaXAKCkZsaXAgdGFrZXMgYSBmdW5jdGlv
biBhcyBhbiBhcmd1bWVudCwgdGhlbiBtYWtlcyB0aGUgZmlyc3QgYXJndW1l
bnQgdGhlIGxhc3QuCgpSZXR1cm4gYSBjbG9zdXJlIHRoYXQgdGFrZXMgdmFy
aWFkaWMgaW5wdXRzLCBhbmQgc3BsaWNlcyB0aGUgbGFzdCBhcmd1bWVudCB0
byBtYWtlIGl0IHRoZSBmaXJzdCBhcmd1bWVudCBiZWZvcmUgYXBwbHlpbmcg
dGhlIHJlc3QuCgpgYGBqcwpjb25zdCBmbGlwID0gZm4gPT4gKGZpcnN0LCAu
Li5yZXN0KSA9PiBmbiguLi5yZXN0LCBmaXJzdCk7CmBgYAoKPGRldGFpbHM+
CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKbGV0IGEgPSB7
IG5hbWU6ICdKb2huIFNtaXRoJyB9OwpsZXQgYiA9IHt9Owpjb25zdCBtZXJn
ZUZyb20gPSBmbGlwKE9iamVjdC5hc3NpZ24pOwpsZXQgbWVyZ2VQZXJzb24g
PSBtZXJnZUZyb20uYmluZChudWxsLCBhKTsKbWVyZ2VQZXJzb24oYik7IC8v
ID09IGIKYiA9IHt9OwpPYmplY3QuYXNzaWduKGIsIGEpOyAvLyA9PSBiCmBg
YAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRz
KQoKIyMjIG92ZXIKCkNyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IGludm9rZXMg
ZWFjaCBwcm92aWRlZCBmdW5jdGlvbiB3aXRoIHRoZSBhcmd1bWVudHMgaXQg
cmVjZWl2ZXMgYW5kIHJldHVybnMgdGhlIHJlc3VsdHMuCgpVc2UgYEFycmF5
LnByb3RvdHlwZS5tYXAoKWAgYW5kIGBGdW5jdGlvbi5wcm90b3R5cGUuYXBw
bHkoKWAgdG8gYXBwbHkgZWFjaCBmdW5jdGlvbiB0byB0aGUgZ2l2ZW4gYXJn
dW1lbnRzLgoKYGBganMKY29uc3Qgb3ZlciA9ICguLi5mbnMpID0+ICguLi5h
cmdzKSA9PiBmbnMubWFwKGZuID0+IGZuLmFwcGx5KG51bGwsIGFyZ3MpKTsK
YGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+Cgpg
YGBqcwpjb25zdCBtaW5NYXggPSBvdmVyKE1hdGgubWluLCBNYXRoLm1heCk7
Cm1pbk1heCgxLCAyLCAzLCA0LCA1KTsgLy8gWzEsNV0KYGBgCjwvZGV0YWls
cz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgb3Zl
ckFyZ3MKCkNyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IGludm9rZXMgdGhlIHBy
b3ZpZGVkIGZ1bmN0aW9uIHdpdGggaXRzIGFyZ3VtZW50cyB0cmFuc2Zvcm1l
ZC4KClVzZSBgQXJyYXkucHJvdG90eXBlLm1hcCgpYCB0byBhcHBseSBgdHJh
bnNmb3Jtc2AgdG8gYGFyZ3NgIGluIGNvbWJpbmF0aW9uIHdpdGggdGhlIHNw
cmVhZCBvcGVyYXRvciAoYC4uLmApIHRvIHBhc3MgdGhlIHRyYW5zZm9ybWVk
IGFyZ3VtZW50cyB0byBgZm5gLgoKYGBganMKY29uc3Qgb3ZlckFyZ3MgPSAo
Zm4sIHRyYW5zZm9ybXMpID0+ICguLi5hcmdzKSA9PiBmbiguLi5hcmdzLm1h
cCgodmFsLCBpKSA9PiB0cmFuc2Zvcm1zW2ldKHZhbCkpKTsKYGBgCgo8ZGV0
YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpjb25z
dCBzcXVhcmUgPSBuID0+IG4gKiBuOwpjb25zdCBkb3VibGUgPSBuID0+IG4g
KiAyOwpjb25zdCBmbiA9IG92ZXJBcmdzKCh4LCB5KSA9PiBbeCwgeV0sIFtz
cXVhcmUsIGRvdWJsZV0pOwpmbig5LCAzKTsgLy8gWzgxLCA2XQpgYGAKPC9k
ZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMj
IyBwaXBlQXN5bmNGdW5jdGlvbnMKClBlcmZvcm1zIGxlZnQtdG8tcmlnaHQg
ZnVuY3Rpb24gY29tcG9zaXRpb24gZm9yIGFzeW5jaHJvbm91cyBmdW5jdGlv
bnMuCgpVc2UgYEFycmF5LnByb3RvdHlwZS5yZWR1Y2UoKWAgd2l0aCB0aGUg
c3ByZWFkIG9wZXJhdG9yIChgLi4uYCkgdG8gcGVyZm9ybSBsZWZ0LXRvLXJp
Z2h0IGZ1bmN0aW9uIGNvbXBvc2l0aW9uIHVzaW5nIGBQcm9taXNlLnRoZW4o
KWAuClRoZSBmdW5jdGlvbnMgY2FuIHJldHVybiBhIGNvbWJpbmF0aW9uIG9m
OiBzaW1wbGUgdmFsdWVzLCBgUHJvbWlzZWAncywgb3IgdGhleSBjYW4gYmUg
ZGVmaW5lZCBhcyBgYXN5bmNgIG9uZXMgcmV0dXJuaW5nIHRocm91Z2ggYGF3
YWl0YC4KQWxsIGZ1bmN0aW9ucyBtdXN0IGJlIHVuYXJ5LgoKYGBganMKY29u
c3QgcGlwZUFzeW5jRnVuY3Rpb25zID0gKC4uLmZucykgPT4gYXJnID0+IGZu
cy5yZWR1Y2UoKHAsIGYpID0+IHAudGhlbihmKSwgUHJvbWlzZS5yZXNvbHZl
KGFyZykpOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3Vt
bWFyeT4KCmBgYGpzCmNvbnN0IHN1bSA9IHBpcGVBc3luY0Z1bmN0aW9ucygK
ICB4ID0+IHggKyAxLAogIHggPT4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiBz
ZXRUaW1lb3V0KCgpID0+IHJlc29sdmUoeCArIDIpLCAxMDAwKSksCiAgeCA9
PiB4ICsgMywKICBhc3luYyB4ID0+IChhd2FpdCB4KSArIDQKKTsKKGFzeW5j
KCkgPT4gewogIGNvbnNvbGUubG9nKGF3YWl0IHN1bSg1KSk7IC8vIDE1IChh
ZnRlciBvbmUgc2Vjb25kKQp9KSgpOwpgYGAKPC9kZXRhaWxzPgoKPGJyPlvi
rIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBwaXBlRnVuY3Rpb25z
CgpQZXJmb3JtcyBsZWZ0LXRvLXJpZ2h0IGZ1bmN0aW9uIGNvbXBvc2l0aW9u
LgoKVXNlIGBBcnJheS5wcm90b3R5cGUucmVkdWNlKClgIHdpdGggdGhlIHNw
cmVhZCBvcGVyYXRvciAoYC4uLmApIHRvIHBlcmZvcm0gbGVmdC10by1yaWdo
dCBmdW5jdGlvbiBjb21wb3NpdGlvbi4KVGhlIGZpcnN0IChsZWZ0bW9zdCkg
ZnVuY3Rpb24gY2FuIGFjY2VwdCBvbmUgb3IgbW9yZSBhcmd1bWVudHM7IHRo
ZSByZW1haW5pbmcgZnVuY3Rpb25zIG11c3QgYmUgdW5hcnkuCgpgYGBqcwpj
b25zdCBwaXBlRnVuY3Rpb25zID0gKC4uLmZucykgPT4gZm5zLnJlZHVjZSgo
ZiwgZykgPT4gKC4uLmFyZ3MpID0+IGcoZiguLi5hcmdzKSkpOwpgYGAKCjxk
ZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmNv
bnN0IGFkZDUgPSB4ID0+IHggKyA1Owpjb25zdCBtdWx0aXBseSA9ICh4LCB5
KSA9PiB4ICogeTsKY29uc3QgbXVsdGlwbHlBbmRBZGQ1ID0gcGlwZUZ1bmN0
aW9ucyhtdWx0aXBseSwgYWRkNSk7Cm11bHRpcGx5QW5kQWRkNSg1LCAyKTsg
Ly8gMTUKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgj
Y29udGVudHMpCgojIyMgcHJvbWlzaWZ5CgpDb252ZXJ0cyBhbiBhc3luY2hy
b25vdXMgZnVuY3Rpb24gdG8gcmV0dXJuIGEgcHJvbWlzZS4KCipJbiBOb2Rl
IDgrLCB5b3UgY2FuIHVzZSBbYHV0aWwucHJvbWlzaWZ5YF0oaHR0cHM6Ly9u
b2RlanMub3JnL2FwaS91dGlsLmh0bWwjdXRpbF91dGlsX3Byb21pc2lmeV9v
cmlnaW5hbCkqCgpVc2UgY3VycnlpbmcgdG8gcmV0dXJuIGEgZnVuY3Rpb24g
cmV0dXJuaW5nIGEgYFByb21pc2VgIHRoYXQgY2FsbHMgdGhlIG9yaWdpbmFs
IGZ1bmN0aW9uLgpVc2UgdGhlIGAuLi5yZXN0YCBvcGVyYXRvciB0byBwYXNz
IGluIGFsbCB0aGUgcGFyYW1ldGVycy4KCmBgYGpzCmNvbnN0IHByb21pc2lm
eSA9IGZ1bmMgPT4gKC4uLmFyZ3MpID0+CiAgbmV3IFByb21pc2UoKHJlc29s
dmUsIHJlamVjdCkgPT4KICAgIGZ1bmMoLi4uYXJncywgKGVyciwgcmVzdWx0
KSA9PiAoZXJyID8gcmVqZWN0KGVycikgOiByZXNvbHZlKHJlc3VsdCkpKQog
ICk7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5
PgoKYGBganMKY29uc3QgZGVsYXkgPSBwcm9taXNpZnkoKGQsIGNiKSA9PiBz
ZXRUaW1lb3V0KGNiLCBkKSk7CmRlbGF5KDIwMDApLnRoZW4oKCkgPT4gY29u
c29sZS5sb2coJ0hpIScpKTsgLy8gLy8gUHJvbWlzZSByZXNvbHZlcyBhZnRl
ciAycwpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNj
b250ZW50cykKCiMjIyByZWFyZwoKQ3JlYXRlcyBhIGZ1bmN0aW9uIHRoYXQg
aW52b2tlcyB0aGUgcHJvdmlkZWQgZnVuY3Rpb24gd2l0aCBpdHMgYXJndW1l
bnRzIGFycmFuZ2VkIGFjY29yZGluZyB0byB0aGUgc3BlY2lmaWVkIGluZGV4
ZXMuCgpVc2UgYEFycmF5LnByb3RvdHlwZS5tYXAoKWAgdG8gcmVvcmRlciBh
cmd1bWVudHMgYmFzZWQgb24gYGluZGV4ZXNgIGluIGNvbWJpbmF0aW9uIHdp
dGggdGhlIHNwcmVhZCBvcGVyYXRvciAoYC4uLmApIHRvIHBhc3MgdGhlIHRy
YW5zZm9ybWVkIGFyZ3VtZW50cyB0byBgZm5gLgoKYGBganMKY29uc3QgcmVh
cmcgPSAoZm4sIGluZGV4ZXMpID0+ICguLi5hcmdzKSA9PiBmbiguLi5pbmRl
eGVzLm1hcChpID0+IGFyZ3NbaV0pKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1h
cnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwp2YXIgcmVhcmdlZCA9IHJl
YXJnKAogIGZ1bmN0aW9uKGEsIGIsIGMpIHsKICAgIHJldHVybiBbYSwgYiwg
Y107CiAgfSwKICBbMiwgMCwgMV0KKTsKcmVhcmdlZCgnYicsICdjJywgJ2En
KTsgLy8gWydhJywgJ2InLCAnYyddCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+Ks
hiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHNwcmVhZE92ZXIKClRh
a2VzIGEgdmFyaWFkaWMgZnVuY3Rpb24gYW5kIHJldHVybnMgYSBjbG9zdXJl
IHRoYXQgYWNjZXB0cyBhbiBhcnJheSBvZiBhcmd1bWVudHMgdG8gbWFwIHRv
IHRoZSBpbnB1dHMgb2YgdGhlIGZ1bmN0aW9uLgoKVXNlIGNsb3N1cmVzIGFu
ZCB0aGUgc3ByZWFkIG9wZXJhdG9yIChgLi4uYCkgdG8gbWFwIHRoZSBhcnJh
eSBvZiBhcmd1bWVudHMgdG8gdGhlIGlucHV0cyBvZiB0aGUgZnVuY3Rpb24u
CgpgYGBqcwpjb25zdCBzcHJlYWRPdmVyID0gZm4gPT4gYXJnc0FyciA9PiBm
biguLi5hcmdzQXJyKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBs
ZXM8L3N1bW1hcnk+CgpgYGBqcwpjb25zdCBhcnJheU1heCA9IHNwcmVhZE92
ZXIoTWF0aC5tYXgpOwphcnJheU1heChbMSwgMiwgM10pOyAvLyAzCmBgYAo8
L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoK
IyMjIHVuYXJ5CgpDcmVhdGVzIGEgZnVuY3Rpb24gdGhhdCBhY2NlcHRzIHVw
IHRvIG9uZSBhcmd1bWVudCwgaWdub3JpbmcgYW55IGFkZGl0aW9uYWwgYXJn
dW1lbnRzLgoKQ2FsbCB0aGUgcHJvdmlkZWQgZnVuY3Rpb24sIGBmbmAsIHdp
dGgganVzdCB0aGUgZmlyc3QgYXJndW1lbnQgZ2l2ZW4uCgpgYGBqcwpjb25z
dCB1bmFyeSA9IGZuID0+IHZhbCA9PiBmbih2YWwpOwpgYGAKCjxkZXRhaWxz
Pgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzClsnNicsICc4
JywgJzEwJ10ubWFwKHVuYXJ5KHBhcnNlSW50KSk7IC8vIFs2LCA4LCAxMF0K
YGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVu
dHMpCgotLS0KCiMjIPCfk5ogQXJyYXkKCgojIyMgYWxsCgpSZXR1cm5zIGB0
cnVlYCBpZiB0aGUgcHJvdmlkZWQgcHJlZGljYXRlIGZ1bmN0aW9uIHJldHVy
bnMgYHRydWVgIGZvciBhbGwgZWxlbWVudHMgaW4gYSBjb2xsZWN0aW9uLCBg
ZmFsc2VgIG90aGVyd2lzZS4KClVzZSBgQXJyYXkucHJvdG90eXBlLmV2ZXJ5
KClgIHRvIHRlc3QgaWYgYWxsIGVsZW1lbnRzIGluIHRoZSBjb2xsZWN0aW9u
IHJldHVybiBgdHJ1ZWAgYmFzZWQgb24gYGZuYC4KT21pdCB0aGUgc2Vjb25k
IGFyZ3VtZW50LCBgZm5gLCB0byB1c2UgYEJvb2xlYW5gIGFzIGEgZGVmYXVs
dC4KCmBgYGpzCmNvbnN0IGFsbCA9IChhcnIsIGZuID0gQm9vbGVhbikgPT4g
YXJyLmV2ZXJ5KGZuKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBs
ZXM8L3N1bW1hcnk+CgpgYGBqcwphbGwoWzQsIDIsIDNdLCB4ID0+IHggPiAx
KTsgLy8gdHJ1ZQphbGwoWzEsIDIsIDNdKTsgLy8gdHJ1ZQpgYGAKPC9kZXRh
aWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBh
bGxFcXVhbAoKQ2hlY2sgaWYgYWxsIGVsZW1lbnRzIGluIGFuIGFycmF5IGFy
ZSBlcXVhbC4KClVzZSBgQXJyYXkucHJvdG90eXBlLmV2ZXJ5KClgIHRvIGNo
ZWNrIGlmIGFsbCB0aGUgZWxlbWVudHMgb2YgdGhlIGFycmF5IGFyZSB0aGUg
c2FtZSBhcyB0aGUgZmlyc3Qgb25lLgpFbGVtZW50cyBpbiB0aGUgYXJyYXkg
YXJlIGNvbXBhcmVkIHVzaW5nIHRoZSBzdHJpY3QgY29tcGFyaXNvbiBvcGVy
YXRvciwgd2hpY2ggZG9lcyBub3QgYWNjb3VudCBmb3IgYE5hTmAgc2VsZi1p
bmVxdWFsaXR5LgoKYGBganMKY29uc3QgYWxsRXF1YWwgPSBhcnIgPT4gYXJy
LmV2ZXJ5KHZhbCA9PiB2YWwgPT09IGFyclswXSk7CmBgYAoKPGRldGFpbHM+
CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKYWxsRXF1YWwo
WzEsIDIsIDMsIDQsIDUsIDZdKTsgLy8gZmFsc2UKYWxsRXF1YWwoWzEsIDEs
IDEsIDFdKTsgLy8gdHJ1ZQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFj
ayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBhbnkKClJldHVybnMgYHRydWVg
IGlmIHRoZSBwcm92aWRlZCBwcmVkaWNhdGUgZnVuY3Rpb24gcmV0dXJucyBg
dHJ1ZWAgZm9yIGF0IGxlYXN0IG9uZSBlbGVtZW50IGluIGEgY29sbGVjdGlv
biwgYGZhbHNlYCBvdGhlcndpc2UuCgpVc2UgYEFycmF5LnByb3RvdHlwZS5z
b21lKClgIHRvIHRlc3QgaWYgYW55IGVsZW1lbnRzIGluIHRoZSBjb2xsZWN0
aW9uIHJldHVybiBgdHJ1ZWAgYmFzZWQgb24gYGZuYC4KT21pdCB0aGUgc2Vj
b25kIGFyZ3VtZW50LCBgZm5gLCB0byB1c2UgYEJvb2xlYW5gIGFzIGEgZGVm
YXVsdC4KCmBgYGpzCmNvbnN0IGFueSA9IChhcnIsIGZuID0gQm9vbGVhbikg
PT4gYXJyLnNvbWUoZm4pOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFt
cGxlczwvc3VtbWFyeT4KCmBgYGpzCmFueShbMCwgMSwgMiwgMF0sIHggPT4g
eCA+PSAyKTsgLy8gdHJ1ZQphbnkoWzAsIDAsIDEsIDBdKTsgLy8gdHJ1ZQpg
YGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50
cykKCiMjIyBhcnJheVRvQ1NWCgpDb252ZXJ0cyBhIDJEIGFycmF5IHRvIGEg
Y29tbWEtc2VwYXJhdGVkIHZhbHVlcyAoQ1NWKSBzdHJpbmcuCgpVc2UgYEFy
cmF5LnByb3RvdHlwZS5tYXAoKWAgYW5kIGBBcnJheS5wcm90b3R5cGUuam9p
bihkZWxpbWl0ZXIpYCB0byBjb21iaW5lIGluZGl2aWR1YWwgMUQgYXJyYXlz
IChyb3dzKSBpbnRvIHN0cmluZ3MuClVzZSBgQXJyYXkucHJvdG90eXBlLmpv
aW4oJ1xuJylgIHRvIGNvbWJpbmUgYWxsIHJvd3MgaW50byBhIENTViBzdHJp
bmcsIHNlcGFyYXRpbmcgZWFjaCByb3cgd2l0aCBhIG5ld2xpbmUuCk9taXQg
dGhlIHNlY29uZCBhcmd1bWVudCwgYGRlbGltaXRlcmAsIHRvIHVzZSBhIGRl
ZmF1bHQgZGVsaW1pdGVyIG9mIGAsYC4KCmBgYGpzCmNvbnN0IGFycmF5VG9D
U1YgPSAoYXJyLCBkZWxpbWl0ZXIgPSAnLCcpID0+CiAgYXJyCiAgICAubWFw
KHYgPT4gdi5tYXAoeCA9PiAoaXNOYU4oeCkgPyBgIiR7eC5yZXBsYWNlKC8i
L2csICciIicpfSJgIDogeCkpLmpvaW4oZGVsaW1pdGVyKSkKICAgIC5qb2lu
KCdcbicpOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3Vt
bWFyeT4KCmBgYGpzCmFycmF5VG9DU1YoW1snYScsICdiJ10sIFsnYycsICdk
J11dKTsgLy8gJyJhIiwiYiJcbiJjIiwiZCInCmFycmF5VG9DU1YoW1snYScs
ICdiJ10sIFsnYycsICdkJ11dLCAnOycpOyAvLyAnImEiOyJiIlxuImMiOyJk
IicKYXJyYXlUb0NTVihbWydhJywgJyJiIiBncmVhdCddLCBbJ2MnLCAzLjE0
MTVdXSk7IC8vICciYSIsIiIiYiIiIGdyZWF0IlxuImMiLDMuMTQxNScKYGBg
CjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMp
CgojIyMgYmlmdXJjYXRlCgpTcGxpdHMgdmFsdWVzIGludG8gdHdvIGdyb3Vw
cy4gSWYgYW4gZWxlbWVudCBpbiBgZmlsdGVyYCBpcyB0cnV0aHksIHRoZSBj
b3JyZXNwb25kaW5nIGVsZW1lbnQgaW4gdGhlIGNvbGxlY3Rpb24gYmVsb25n
cyB0byB0aGUgZmlyc3QgZ3JvdXA7IG90aGVyd2lzZSwgaXQgYmVsb25ncyB0
byB0aGUgc2Vjb25kIGdyb3VwLgoKVXNlIGBBcnJheS5wcm90b3R5cGUucmVk
dWNlKClgIGFuZCBgQXJyYXkucHJvdG90eXBlLnB1c2goKWAgdG8gYWRkIGVs
ZW1lbnRzIHRvIGdyb3VwcywgYmFzZWQgb24gYGZpbHRlcmAuCgpgYGBqcwpj
b25zdCBiaWZ1cmNhdGUgPSAoYXJyLCBmaWx0ZXIpID0+CiAgYXJyLnJlZHVj
ZSgoYWNjLCB2YWwsIGkpID0+IChhY2NbZmlsdGVyW2ldID8gMCA6IDFdLnB1
c2godmFsKSwgYWNjKSwgW1tdLCBbXV0pOwpgYGAKCjxkZXRhaWxzPgo8c3Vt
bWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmJpZnVyY2F0ZShbJ2Jl
ZXAnLCAnYm9vcCcsICdmb28nLCAnYmFyJ10sIFt0cnVlLCB0cnVlLCBmYWxz
ZSwgdHJ1ZV0pOyAvLyBbIFsnYmVlcCcsICdib29wJywgJ2JhciddLCBbJ2Zv
byddIF0KYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgj
Y29udGVudHMpCgojIyMgYmlmdXJjYXRlQnkKClNwbGl0cyB2YWx1ZXMgaW50
byB0d28gZ3JvdXBzIGFjY29yZGluZyB0byBhIHByZWRpY2F0ZSBmdW5jdGlv
biwgd2hpY2ggc3BlY2lmaWVzIHdoaWNoIGdyb3VwIGFuIGVsZW1lbnQgaW4g
dGhlIGlucHV0IGNvbGxlY3Rpb24gYmVsb25ncyB0by4gSWYgdGhlIHByZWRp
Y2F0ZSBmdW5jdGlvbiByZXR1cm5zIGEgdHJ1dGh5IHZhbHVlLCB0aGUgY29s
bGVjdGlvbiBlbGVtZW50IGJlbG9uZ3MgdG8gdGhlIGZpcnN0IGdyb3VwOyBv
dGhlcndpc2UsIGl0IGJlbG9uZ3MgdG8gdGhlIHNlY29uZCBncm91cC4KClVz
ZSBgQXJyYXkucHJvdG90eXBlLnJlZHVjZSgpYCBhbmQgYEFycmF5LnByb3Rv
dHlwZS5wdXNoKClgIHRvIGFkZCBlbGVtZW50cyB0byBncm91cHMsIGJhc2Vk
IG9uIHRoZSB2YWx1ZSByZXR1cm5lZCBieSBgZm5gIGZvciBlYWNoIGVsZW1l
bnQuCgpgYGBqcwpjb25zdCBiaWZ1cmNhdGVCeSA9IChhcnIsIGZuKSA9Pgog
IGFyci5yZWR1Y2UoKGFjYywgdmFsLCBpKSA9PiAoYWNjW2ZuKHZhbCwgaSkg
PyAwIDogMV0ucHVzaCh2YWwpLCBhY2MpLCBbW10sIFtdXSk7CmBgYAoKPGRl
dGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKYmlm
dXJjYXRlQnkoWydiZWVwJywgJ2Jvb3AnLCAnZm9vJywgJ2JhciddLCB4ID0+
IHhbMF0gPT09ICdiJyk7IC8vIFsgWydiZWVwJywgJ2Jvb3AnLCAnYmFyJ10s
IFsnZm9vJ10gXQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0
b3BdKCNjb250ZW50cykKCiMjIyBjaHVuawoKQ2h1bmtzIGFuIGFycmF5IGlu
dG8gc21hbGxlciBhcnJheXMgb2YgYSBzcGVjaWZpZWQgc2l6ZS4KClVzZSBg
QXJyYXkuZnJvbSgpYCB0byBjcmVhdGUgYSBuZXcgYXJyYXksIHRoYXQgZml0
cyB0aGUgbnVtYmVyIG9mIGNodW5rcyB0aGF0IHdpbGwgYmUgcHJvZHVjZWQu
ClVzZSBgQXJyYXkucHJvdG90eXBlLnNsaWNlKClgIHRvIG1hcCBlYWNoIGVs
ZW1lbnQgb2YgdGhlIG5ldyBhcnJheSB0byBhIGNodW5rIHRoZSBsZW5ndGgg
b2YgYHNpemVgLgpJZiB0aGUgb3JpZ2luYWwgYXJyYXkgY2FuJ3QgYmUgc3Bs
aXQgZXZlbmx5LCB0aGUgZmluYWwgY2h1bmsgd2lsbCBjb250YWluIHRoZSBy
ZW1haW5pbmcgZWxlbWVudHMuCgpgYGBqcwpjb25zdCBjaHVuayA9IChhcnIs
IHNpemUpID0+CiAgQXJyYXkuZnJvbSh7IGxlbmd0aDogTWF0aC5jZWlsKGFy
ci5sZW5ndGggLyBzaXplKSB9LCAodiwgaSkgPT4KICAgIGFyci5zbGljZShp
ICogc2l6ZSwgaSAqIHNpemUgKyBzaXplKQogICk7CmBgYAoKPGRldGFpbHM+
CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKY2h1bmsoWzEs
IDIsIDMsIDQsIDVdLCAyKTsgLy8gW1sxLDJdLFszLDRdLFs1XV0KYGBgCjwv
ZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgoj
IyMgY29tcGFjdAoKUmVtb3ZlcyBmYWxzeSB2YWx1ZXMgZnJvbSBhbiBhcnJh
eS4KClVzZSBgQXJyYXkucHJvdG90eXBlLmZpbHRlcigpYCB0byBmaWx0ZXIg
b3V0IGZhbHN5IHZhbHVlcyAoYGZhbHNlYCwgYG51bGxgLCBgMGAsIGAiImAs
IGB1bmRlZmluZWRgLCBhbmQgYE5hTmApLgoKYGBganMKY29uc3QgY29tcGFj
dCA9IGFyciA9PiBhcnIuZmlsdGVyKEJvb2xlYW4pOwpgYGAKCjxkZXRhaWxz
Pgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmNvbXBhY3Qo
WzAsIDEsIGZhbHNlLCAyLCAnJywgMywgJ2EnLCAnZScgKiAyMywgTmFOLCAn
cycsIDM0XSk7IC8vIFsgMSwgMiwgMywgJ2EnLCAncycsIDM0IF0KYGBgCjwv
ZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgoj
IyMgY291bnRCeQoKR3JvdXBzIHRoZSBlbGVtZW50cyBvZiBhbiBhcnJheSBi
YXNlZCBvbiB0aGUgZ2l2ZW4gZnVuY3Rpb24gYW5kIHJldHVybnMgdGhlIGNv
dW50IG9mIGVsZW1lbnRzIGluIGVhY2ggZ3JvdXAuCgpVc2UgYEFycmF5LnBy
b3RvdHlwZS5tYXAoKWAgdG8gbWFwIHRoZSB2YWx1ZXMgb2YgYW4gYXJyYXkg
dG8gYSBmdW5jdGlvbiBvciBwcm9wZXJ0eSBuYW1lLgpVc2UgYEFycmF5LnBy
b3RvdHlwZS5yZWR1Y2UoKWAgdG8gY3JlYXRlIGFuIG9iamVjdCwgd2hlcmUg
dGhlIGtleXMgYXJlIHByb2R1Y2VkIGZyb20gdGhlIG1hcHBlZCByZXN1bHRz
LgoKYGBganMKY29uc3QgY291bnRCeSA9IChhcnIsIGZuKSA9PgogIGFyci5t
YXAodHlwZW9mIGZuID09PSAnZnVuY3Rpb24nID8gZm4gOiB2YWwgPT4gdmFs
W2ZuXSkucmVkdWNlKChhY2MsIHZhbCkgPT4gewogICAgYWNjW3ZhbF0gPSAo
YWNjW3ZhbF0gfHwgMCkgKyAxOwogICAgcmV0dXJuIGFjYzsKICB9LCB7fSk7
CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoK
YGBganMKY291bnRCeShbNi4xLCA0LjIsIDYuM10sIE1hdGguZmxvb3IpOyAv
LyB7NDogMSwgNjogMn0KY291bnRCeShbJ29uZScsICd0d28nLCAndGhyZWUn
XSwgJ2xlbmd0aCcpOyAvLyB7MzogMiwgNTogMX0KYGBgCjwvZGV0YWlscz4K
Cjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgY291bnRP
Y2N1cnJlbmNlcwoKQ291bnRzIHRoZSBvY2N1cnJlbmNlcyBvZiBhIHZhbHVl
IGluIGFuIGFycmF5LgoKVXNlIGBBcnJheS5wcm90b3R5cGUucmVkdWNlKClg
IHRvIGluY3JlbWVudCBhIGNvdW50ZXIgZWFjaCB0aW1lIHlvdSBlbmNvdW50
ZXIgdGhlIHNwZWNpZmljIHZhbHVlIGluc2lkZSB0aGUgYXJyYXkuCgpgYGBq
cwpjb25zdCBjb3VudE9jY3VycmVuY2VzID0gKGFyciwgdmFsKSA9PiBhcnIu
cmVkdWNlKChhLCB2KSA9PiAodiA9PT0gdmFsID8gYSArIDEgOiBhKSwgMCk7
CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoK
YGBganMKY291bnRPY2N1cnJlbmNlcyhbMSwgMSwgMiwgMSwgMiwgM10sIDEp
OyAvLyAzCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0o
I2NvbnRlbnRzKQoKIyMjIGRlZXBGbGF0dGVuCgpEZWVwIGZsYXR0ZW5zIGFu
IGFycmF5LgoKVXNlIHJlY3Vyc2lvbi4KVXNlIGBBcnJheS5wcm90b3R5cGUu
Y29uY2F0KClgIHdpdGggYW4gZW1wdHkgYXJyYXkgKGBbXWApIGFuZCB0aGUg
c3ByZWFkIG9wZXJhdG9yIChgLi4uYCkgdG8gZmxhdHRlbiBhbiBhcnJheS4K
UmVjdXJzaXZlbHkgZmxhdHRlbiBlYWNoIGVsZW1lbnQgdGhhdCBpcyBhbiBh
cnJheS4KCmBgYGpzCmNvbnN0IGRlZXBGbGF0dGVuID0gYXJyID0+IFtdLmNv
bmNhdCguLi5hcnIubWFwKHYgPT4gKEFycmF5LmlzQXJyYXkodikgPyBkZWVw
RmxhdHRlbih2KSA6IHYpKSk7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4
YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKZGVlcEZsYXR0ZW4oWzEsIFsyXSwg
W1szXSwgNF0sIDVdKTsgLy8gWzEsMiwzLDQsNV0KYGBgCjwvZGV0YWlscz4K
Cjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgZGlmZmVy
ZW5jZQoKUmV0dXJucyB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHR3byBhcnJh
eXMuCgpDcmVhdGUgYSBgU2V0YCBmcm9tIGBiYCwgdGhlbiB1c2UgYEFycmF5
LnByb3RvdHlwZS5maWx0ZXIoKWAgb24gYGFgIHRvIG9ubHkga2VlcCB2YWx1
ZXMgbm90IGNvbnRhaW5lZCBpbiBgYmAuCgpgYGBqcwpjb25zdCBkaWZmZXJl
bmNlID0gKGEsIGIpID0+IHsKICBjb25zdCBzID0gbmV3IFNldChiKTsKICBy
ZXR1cm4gYS5maWx0ZXIoeCA9PiAhcy5oYXMoeCkpOwp9OwpgYGAKCjxkZXRh
aWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmRpZmZl
cmVuY2UoWzEsIDIsIDNdLCBbMSwgMiwgNF0pOyAvLyBbM10KYGBgCjwvZGV0
YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMg
ZGlmZmVyZW5jZUJ5CgpSZXR1cm5zIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4g
dHdvIGFycmF5cywgYWZ0ZXIgYXBwbHlpbmcgdGhlIHByb3ZpZGVkIGZ1bmN0
aW9uIHRvIGVhY2ggYXJyYXkgZWxlbWVudCBvZiBib3RoLgoKQ3JlYXRlIGEg
YFNldGAgYnkgYXBwbHlpbmcgYGZuYCB0byBlYWNoIGVsZW1lbnQgaW4gYGJg
LCB0aGVuIHVzZSBgQXJyYXkucHJvdG90eXBlLm1hcCgpYCB0byBhcHBseSBg
Zm5gIHRvIGVhY2ggZWxlbWVudCBpbiBgYWAsIHRoZW4gYEFycmF5LnByb3Rv
dHlwZS5maWx0ZXIoKWAKCmBgYGpzCmNvbnN0IGRpZmZlcmVuY2VCeSA9IChh
LCBiLCBmbikgPT4gewogIGNvbnN0IHMgPSBuZXcgU2V0KGIubWFwKGZuKSk7
CiAgcmV0dXJuIGEubWFwKGZuKS5maWx0ZXIoZWwgPT4gIXMuaGFzKGVsKSk7
Cn07CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5
PgoKYGBganMKZGlmZmVyZW5jZUJ5KFsyLjEsIDEuMl0sIFsyLjMsIDMuNF0s
IE1hdGguZmxvb3IpOyAvLyBbMV0KZGlmZmVyZW5jZUJ5KFt7IHg6IDIgfSwg
eyB4OiAxIH1dLCBbeyB4OiAxIH1dLCB2ID0+IHYueCk7IC8vIFsyXQpgYGAK
PC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykK
CiMjIyBkaWZmZXJlbmNlV2l0aAoKRmlsdGVycyBvdXQgYWxsIHZhbHVlcyBm
cm9tIGFuIGFycmF5IGZvciB3aGljaCB0aGUgY29tcGFyYXRvciBmdW5jdGlv
biBkb2VzIG5vdCByZXR1cm4gYHRydWVgLgoKVXNlIGBBcnJheS5wcm90b3R5
cGUuZmlsdGVyKClgIGFuZCBgQXJyYXkucHJvdG90eXBlLmZpbmRJbmRleCgp
YCB0byBmaW5kIHRoZSBhcHByb3ByaWF0ZSB2YWx1ZXMuCgpgYGBqcwpjb25z
dCBkaWZmZXJlbmNlV2l0aCA9IChhcnIsIHZhbCwgY29tcCkgPT4gYXJyLmZp
bHRlcihhID0+IHZhbC5maW5kSW5kZXgoYiA9PiBjb21wKGEsIGIpKSA9PT0g
LTEpOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFy
eT4KCmBgYGpzCmRpZmZlcmVuY2VXaXRoKFsxLCAxLjIsIDEuNSwgMywgMF0s
IFsxLjksIDMsIDBdLCAoYSwgYikgPT4gTWF0aC5yb3VuZChhKSA9PT0gTWF0
aC5yb3VuZChiKSk7IC8vIFsxLCAxLjJdCmBgYAo8L2RldGFpbHM+Cgo8YnI+
W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGRyb3AKClJldHVy
bnMgYSBuZXcgYXJyYXkgd2l0aCBgbmAgZWxlbWVudHMgcmVtb3ZlZCBmcm9t
IHRoZSBsZWZ0LgoKVXNlIGBBcnJheS5wcm90b3R5cGUuc2xpY2UoKWAgdG8g
cmVtb3ZlIHRoZSBzcGVjaWZpZWQgbnVtYmVyIG9mIGVsZW1lbnRzIGZyb20g
dGhlIGxlZnQuCgpgYGBqcwpjb25zdCBkcm9wID0gKGFyciwgbiA9IDEpID0+
IGFyci5zbGljZShuKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBs
ZXM8L3N1bW1hcnk+CgpgYGBqcwpkcm9wKFsxLCAyLCAzXSk7IC8vIFsyLDNd
CmRyb3AoWzEsIDIsIDNdLCAyKTsgLy8gWzNdCmRyb3AoWzEsIDIsIDNdLCA0
Mik7IC8vIFtdCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRv
cF0oI2NvbnRlbnRzKQoKIyMjIGRyb3BSaWdodAoKUmV0dXJucyBhIG5ldyBh
cnJheSB3aXRoIGBuYCBlbGVtZW50cyByZW1vdmVkIGZyb20gdGhlIHJpZ2h0
LgoKVXNlIGBBcnJheS5wcm90b3R5cGUuc2xpY2UoKWAgdG8gcmVtb3ZlIHRo
ZSBzcGVjaWZpZWQgbnVtYmVyIG9mIGVsZW1lbnRzIGZyb20gdGhlIHJpZ2h0
LgoKYGBganMKY29uc3QgZHJvcFJpZ2h0ID0gKGFyciwgbiA9IDEpID0+IGFy
ci5zbGljZSgwLCAtbik7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1w
bGVzPC9zdW1tYXJ5PgoKYGBganMKZHJvcFJpZ2h0KFsxLCAyLCAzXSk7IC8v
IFsxLDJdCmRyb3BSaWdodChbMSwgMiwgM10sIDIpOyAvLyBbMV0KZHJvcFJp
Z2h0KFsxLCAyLCAzXSwgNDIpOyAvLyBbXQpgYGAKPC9kZXRhaWxzPgoKPGJy
PlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBkcm9wUmlnaHRX
aGlsZQoKUmVtb3ZlcyBlbGVtZW50cyBmcm9tIHRoZSBlbmQgb2YgYW4gYXJy
YXkgdW50aWwgdGhlIHBhc3NlZCBmdW5jdGlvbiByZXR1cm5zIGB0cnVlYC4g
UmV0dXJucyB0aGUgcmVtYWluaW5nIGVsZW1lbnRzIGluIHRoZSBhcnJheS4K
Ckxvb3AgdGhyb3VnaCB0aGUgYXJyYXksIHVzaW5nIGBBcnJheS5wcm90b3R5
cGUuc2xpY2UoKWAgdG8gZHJvcCB0aGUgbGFzdCBlbGVtZW50IG9mIHRoZSBh
cnJheSB1bnRpbCB0aGUgcmV0dXJuZWQgdmFsdWUgZnJvbSB0aGUgZnVuY3Rp
b24gaXMgYHRydWVgLgpSZXR1cm5zIHRoZSByZW1haW5pbmcgZWxlbWVudHMu
CgpgYGBqcwpjb25zdCBkcm9wUmlnaHRXaGlsZSA9IChhcnIsIGZ1bmMpID0+
IHsKICBsZXQgcmlnaHRJbmRleCA9IGFyci5sZW5ndGg7CiAgd2hpbGUgKHJp
Z2h0SW5kZXgtLSAmJiAhZnVuYyhhcnJbcmlnaHRJbmRleF0pKTsKICByZXR1
cm4gYXJyLnNsaWNlKDAsIHJpZ2h0SW5kZXggKyAxKTsKfTsKYGBgCgo8ZGV0
YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpkcm9w
UmlnaHRXaGlsZShbMSwgMiwgMywgNF0sIG4gPT4gbiA8IDMpOyAvLyBbMSwg
Ml0KYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29u
dGVudHMpCgojIyMgZHJvcFdoaWxlCgpSZW1vdmVzIGVsZW1lbnRzIGluIGFu
IGFycmF5IHVudGlsIHRoZSBwYXNzZWQgZnVuY3Rpb24gcmV0dXJucyBgdHJ1
ZWAuIFJldHVybnMgdGhlIHJlbWFpbmluZyBlbGVtZW50cyBpbiB0aGUgYXJy
YXkuCgpMb29wIHRocm91Z2ggdGhlIGFycmF5LCB1c2luZyBgQXJyYXkucHJv
dG90eXBlLnNsaWNlKClgIHRvIGRyb3AgdGhlIGZpcnN0IGVsZW1lbnQgb2Yg
dGhlIGFycmF5IHVudGlsIHRoZSByZXR1cm5lZCB2YWx1ZSBmcm9tIHRoZSBm
dW5jdGlvbiBpcyBgdHJ1ZWAuClJldHVybnMgdGhlIHJlbWFpbmluZyBlbGVt
ZW50cy4KCmBgYGpzCmNvbnN0IGRyb3BXaGlsZSA9IChhcnIsIGZ1bmMpID0+
IHsKICB3aGlsZSAoYXJyLmxlbmd0aCA+IDAgJiYgIWZ1bmMoYXJyWzBdKSkg
YXJyID0gYXJyLnNsaWNlKDEpOwogIHJldHVybiBhcnI7Cn07CmBgYAoKPGRl
dGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKZHJv
cFdoaWxlKFsxLCAyLCAzLCA0XSwgbiA9PiBuID49IDMpOyAvLyBbMyw0XQpg
YGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50
cykKCiMjIyBldmVyeU50aAoKUmV0dXJucyBldmVyeSBudGggZWxlbWVudCBp
biBhbiBhcnJheS4KClVzZSBgQXJyYXkucHJvdG90eXBlLmZpbHRlcigpYCB0
byBjcmVhdGUgYSBuZXcgYXJyYXkgdGhhdCBjb250YWlucyBldmVyeSBudGgg
ZWxlbWVudCBvZiBhIGdpdmVuIGFycmF5LgoKYGBganMKY29uc3QgZXZlcnlO
dGggPSAoYXJyLCBudGgpID0+IGFyci5maWx0ZXIoKGUsIGkpID0+IGkgJSBu
dGggPT09IG50aCAtIDEpOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFt
cGxlczwvc3VtbWFyeT4KCmBgYGpzCmV2ZXJ5TnRoKFsxLCAyLCAzLCA0LCA1
LCA2XSwgMik7IC8vIFsgMiwgNCwgNiBdCmBgYAo8L2RldGFpbHM+Cgo8YnI+
W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGZpbHRlckZhbHN5
CgpGaWx0ZXJzIG91dCB0aGUgZmFsc3kgdmFsdWVzIGluIGFuIGFycmF5LgoK
VXNlIGBBcnJheS5wcm90b3R5cGUuZmlsdGVyKClgIHRvIGdldCBhbiBhcnJh
eSBjb250YWluaW5nIG9ubHkgdHJ1dGh5IHZhbHVlcy4KCmBgYGpzCmNvbnN0
IGZpbHRlckZhbHN5ID0gYXJyID0+IGFyci5maWx0ZXIoQm9vbGVhbik7CmBg
YAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBg
anMKZmlsdGVyRmFsc3koWycnLCB0cnVlLCB7fSwgZmFsc2UsICdzYW1wbGUn
LCAxLCAwXSk7IC8vIFt0cnVlLCB7fSwgJ3NhbXBsZScsIDFdCmBgYAo8L2Rl
dGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMj
IGZpbHRlck5vblVuaXF1ZQoKRmlsdGVycyBvdXQgdGhlIG5vbi11bmlxdWUg
dmFsdWVzIGluIGFuIGFycmF5LgoKVXNlIGBBcnJheS5wcm90b3R5cGUuZmls
dGVyKClgIGZvciBhbiBhcnJheSBjb250YWluaW5nIG9ubHkgdGhlIHVuaXF1
ZSB2YWx1ZXMuCgpgYGBqcwpjb25zdCBmaWx0ZXJOb25VbmlxdWUgPSBhcnIg
PT4gYXJyLmZpbHRlcihpID0+IGFyci5pbmRleE9mKGkpID09PSBhcnIubGFz
dEluZGV4T2YoaSkpOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxl
czwvc3VtbWFyeT4KCmBgYGpzCmZpbHRlck5vblVuaXF1ZShbMSwgMiwgMiwg
MywgNCwgNCwgNV0pOyAvLyBbMSwgMywgNV0KYGBgCjwvZGV0YWlscz4KCjxi
cj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgZmlsdGVyTm9u
VW5pcXVlQnkKCkZpbHRlcnMgb3V0IHRoZSBub24tdW5pcXVlIHZhbHVlcyBp
biBhbiBhcnJheSwgYmFzZWQgb24gYSBwcm92aWRlZCBjb21wYXJhdG9yIGZ1
bmN0aW9uLgoKVXNlIGBBcnJheS5wcm90b3R5cGUuZmlsdGVyKClgIGFuZCBg
QXJyYXkucHJvdG90eXBlLmV2ZXJ5KClgIGZvciBhbiBhcnJheSBjb250YWlu
aW5nIG9ubHkgdGhlIHVuaXF1ZSB2YWx1ZXMsIGJhc2VkIG9uIHRoZSBjb21w
YXJhdG9yIGZ1bmN0aW9uLCBgZm5gLgpUaGUgY29tcGFyYXRvciBmdW5jdGlv
biB0YWtlcyBmb3VyIGFyZ3VtZW50czogdGhlIHZhbHVlcyBvZiB0aGUgdHdv
IGVsZW1lbnRzIGJlaW5nIGNvbXBhcmVkIGFuZCB0aGVpciBpbmRleGVzLgoK
YGBganMKY29uc3QgZmlsdGVyTm9uVW5pcXVlQnkgPSAoYXJyLCBmbikgPT4K
ICBhcnIuZmlsdGVyKCh2LCBpKSA9PiBhcnIuZXZlcnkoKHgsIGopID0+IChp
ID09PSBqKSA9PT0gZm4odiwgeCwgaSwgaikpKTsKYGBgCgo8ZGV0YWlscz4K
PHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpmaWx0ZXJOb25V
bmlxdWVCeSgKICBbCiAgICB7IGlkOiAwLCB2YWx1ZTogJ2EnIH0sCiAgICB7
IGlkOiAxLCB2YWx1ZTogJ2InIH0sCiAgICB7IGlkOiAyLCB2YWx1ZTogJ2Mn
IH0sCiAgICB7IGlkOiAxLCB2YWx1ZTogJ2QnIH0sCiAgICB7IGlkOiAwLCB2
YWx1ZTogJ2UnIH0KICBdLAogIChhLCBiKSA9PiBhLmlkID09IGIuaWQKKTsg
Ly8gWyB7IGlkOiAyLCB2YWx1ZTogJ2MnIH0gXQpgYGAKPC9kZXRhaWxzPgoK
PGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBmaW5kTGFz
dAoKUmV0dXJucyB0aGUgbGFzdCBlbGVtZW50IGZvciB3aGljaCB0aGUgcHJv
dmlkZWQgZnVuY3Rpb24gcmV0dXJucyBhIHRydXRoeSB2YWx1ZS4KClVzZSBg
QXJyYXkucHJvdG90eXBlLmZpbHRlcigpYCB0byByZW1vdmUgZWxlbWVudHMg
Zm9yIHdoaWNoIGBmbmAgcmV0dXJucyBmYWxzeSB2YWx1ZXMsIGBBcnJheS5w
cm90b3R5cGUucG9wKClgIHRvIGdldCB0aGUgbGFzdCBvbmUuCgpgYGBqcwpj
b25zdCBmaW5kTGFzdCA9IChhcnIsIGZuKSA9PiBhcnIuZmlsdGVyKGZuKS5w
b3AoKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1h
cnk+CgpgYGBqcwpmaW5kTGFzdChbMSwgMiwgMywgNF0sIG4gPT4gbiAlIDIg
PT09IDEpOyAvLyAzCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRv
IHRvcF0oI2NvbnRlbnRzKQoKIyMjIGZpbmRMYXN0SW5kZXgKClJldHVybnMg
dGhlIGluZGV4IG9mIHRoZSBsYXN0IGVsZW1lbnQgZm9yIHdoaWNoIHRoZSBw
cm92aWRlZCBmdW5jdGlvbiByZXR1cm5zIGEgdHJ1dGh5IHZhbHVlLgoKVXNl
IGBBcnJheS5wcm90b3R5cGUubWFwKClgIHRvIG1hcCBlYWNoIGVsZW1lbnQg
dG8gYW4gYXJyYXkgd2l0aCBpdHMgaW5kZXggYW5kIHZhbHVlLgpVc2UgYEFy
cmF5LnByb3RvdHlwZS5maWx0ZXIoKWAgdG8gcmVtb3ZlIGVsZW1lbnRzIGZv
ciB3aGljaCBgZm5gIHJldHVybnMgZmFsc3kgdmFsdWVzLCBgQXJyYXkucHJv
dG90eXBlLnBvcCgpYCB0byBnZXQgdGhlIGxhc3Qgb25lLgpgLTFgIGlzIHRo
ZSBkZWZhdWx0IHZhbHVlIHdoZW4gbm90IGZvdW5kLgoKYGBganMKY29uc3Qg
ZmluZExhc3RJbmRleCA9IChhcnIsIGZuKSA9PgogIChhcnIKICAgIC5tYXAo
KHZhbCwgaSkgPT4gW2ksIHZhbF0pCiAgICAuZmlsdGVyKChbaSwgdmFsXSkg
PT4gZm4odmFsLCBpLCBhcnIpKQogICAgLnBvcCgpIHx8IFstMV0pWzBdOwpg
YGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBg
YGpzCmZpbmRMYXN0SW5kZXgoWzEsIDIsIDMsIDRdLCBuID0+IG4gJSAyID09
PSAxKTsgLy8gMiAoaW5kZXggb2YgdGhlIHZhbHVlIDMpCmZpbmRMYXN0SW5k
ZXgoWzEsIDIsIDMsIDRdLCBuID0+IG4gPT09IDUpOyAvLyAtMSAoZGVmYXVs
dCB2YWx1ZSB3aGVuIG5vdCBmb3VuZCkKYGBgCjwvZGV0YWlscz4KCjxicj5b
4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgZmxhdHRlbgoKRmxh
dHRlbnMgYW4gYXJyYXkgdXAgdG8gdGhlIHNwZWNpZmllZCBkZXB0aC4KClVz
ZSByZWN1cnNpb24sIGRlY3JlbWVudGluZyBgZGVwdGhgIGJ5IDEgZm9yIGVh
Y2ggbGV2ZWwgb2YgZGVwdGguClVzZSBgQXJyYXkucHJvdG90eXBlLnJlZHVj
ZSgpYCBhbmQgYEFycmF5LnByb3RvdHlwZS5jb25jYXQoKWAgdG8gbWVyZ2Ug
ZWxlbWVudHMgb3IgYXJyYXlzLgpCYXNlIGNhc2UsIGZvciBgZGVwdGhgIGVx
dWFsIHRvIGAxYCBzdG9wcyByZWN1cnNpb24uCk9taXQgdGhlIHNlY29uZCBh
cmd1bWVudCwgYGRlcHRoYCB0byBmbGF0dGVuIG9ubHkgdG8gYSBkZXB0aCBv
ZiBgMWAgKHNpbmdsZSBmbGF0dGVuKS4KCmBgYGpzCmNvbnN0IGZsYXR0ZW4g
PSAoYXJyLCBkZXB0aCA9IDEpID0+CiAgYXJyLnJlZHVjZSgoYSwgdikgPT4g
YS5jb25jYXQoZGVwdGggPiAxICYmIEFycmF5LmlzQXJyYXkodikgPyBmbGF0
dGVuKHYsIGRlcHRoIC0gMSkgOiB2KSwgW10pOwpgYGAKCjxkZXRhaWxzPgo8
c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmZsYXR0ZW4oWzEs
IFsyXSwgMywgNF0pOyAvLyBbMSwgMiwgMywgNF0KZmxhdHRlbihbMSwgWzIs
IFszLCBbNCwgNV0sIDZdLCA3XSwgOF0sIDIpOyAvLyBbMSwgMiwgMywgWzQs
IDVdLCA2LCA3LCA4XQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0
byB0b3BdKCNjb250ZW50cykKCiMjIyBmb3JFYWNoUmlnaHQKCkV4ZWN1dGVz
IGEgcHJvdmlkZWQgZnVuY3Rpb24gb25jZSBmb3IgZWFjaCBhcnJheSBlbGVt
ZW50LCBzdGFydGluZyBmcm9tIHRoZSBhcnJheSdzIGxhc3QgZWxlbWVudC4K
ClVzZSBgQXJyYXkucHJvdG90eXBlLnNsaWNlKDApYCB0byBjbG9uZSB0aGUg
Z2l2ZW4gYXJyYXksIGBBcnJheS5wcm90b3R5cGUucmV2ZXJzZSgpYCB0byBy
ZXZlcnNlIGl0IGFuZCBgQXJyYXkucHJvdG90eXBlLmZvckVhY2goKWAgdG8g
aXRlcmF0ZSBvdmVyIHRoZSByZXZlcnNlZCBhcnJheS4KCmBgYGpzCmNvbnN0
IGZvckVhY2hSaWdodCA9IChhcnIsIGNhbGxiYWNrKSA9PgogIGFycgogICAg
LnNsaWNlKDApCiAgICAucmV2ZXJzZSgpCiAgICAuZm9yRWFjaChjYWxsYmFj
ayk7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5
PgoKYGBganMKZm9yRWFjaFJpZ2h0KFsxLCAyLCAzLCA0XSwgdmFsID0+IGNv
bnNvbGUubG9nKHZhbCkpOyAvLyAnNCcsICczJywgJzInLCAnMScKYGBgCjwv
ZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgoj
IyMgZ3JvdXBCeQoKR3JvdXBzIHRoZSBlbGVtZW50cyBvZiBhbiBhcnJheSBi
YXNlZCBvbiB0aGUgZ2l2ZW4gZnVuY3Rpb24uCgpVc2UgYEFycmF5LnByb3Rv
dHlwZS5tYXAoKWAgdG8gbWFwIHRoZSB2YWx1ZXMgb2YgYW4gYXJyYXkgdG8g
YSBmdW5jdGlvbiBvciBwcm9wZXJ0eSBuYW1lLgpVc2UgYEFycmF5LnByb3Rv
dHlwZS5yZWR1Y2UoKWAgdG8gY3JlYXRlIGFuIG9iamVjdCwgd2hlcmUgdGhl
IGtleXMgYXJlIHByb2R1Y2VkIGZyb20gdGhlIG1hcHBlZCByZXN1bHRzLgoK
YGBganMKY29uc3QgZ3JvdXBCeSA9IChhcnIsIGZuKSA9PgogIGFyci5tYXAo
dHlwZW9mIGZuID09PSAnZnVuY3Rpb24nID8gZm4gOiB2YWwgPT4gdmFsW2Zu
XSkucmVkdWNlKChhY2MsIHZhbCwgaSkgPT4gewogICAgYWNjW3ZhbF0gPSAo
YWNjW3ZhbF0gfHwgW10pLmNvbmNhdChhcnJbaV0pOwogICAgcmV0dXJuIGFj
YzsKICB9LCB7fSk7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVz
PC9zdW1tYXJ5PgoKYGBganMKZ3JvdXBCeShbNi4xLCA0LjIsIDYuM10sIE1h
dGguZmxvb3IpOyAvLyB7NDogWzQuMl0sIDY6IFs2LjEsIDYuM119Cmdyb3Vw
QnkoWydvbmUnLCAndHdvJywgJ3RocmVlJ10sICdsZW5ndGgnKTsgLy8gezM6
IFsnb25lJywgJ3R3byddLCA1OiBbJ3RocmVlJ119CmBgYAo8L2RldGFpbHM+
Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGhlYWQK
ClJldHVybnMgdGhlIGhlYWQgb2YgYSBsaXN0LgoKVXNlIGBhcnJbMF1gIHRv
IHJldHVybiB0aGUgZmlyc3QgZWxlbWVudCBvZiB0aGUgcGFzc2VkIGFycmF5
LgoKYGBganMKY29uc3QgaGVhZCA9IGFyciA9PiBhcnJbMF07CmBgYAoKPGRl
dGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKaGVh
ZChbMSwgMiwgM10pOyAvLyAxCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBC
YWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGluY2x1ZGVzQWxsCgpSZXR1
cm5zIGB0cnVlYCBpZiBhbGwgdGhlIGVsZW1lbnRzIM65zr0gYHZhbHVlc2Ag
YXJlIGluY2x1ZGVkIGluIGBhcnJgLCBgZmFsc2VgIG90aGVyd2lzZS4KClVz
ZSBgQXJyYXkucHJvdG90eXBlLmV2ZXJ5KClgIGFuZCBgQXJyYXkucHJvdG90
eXBlLmluY2x1ZGVzKClgIHRvIGNoZWNrIGlmIGFsbCBlbGVtZW50cyBvZiBg
dmFsdWVzYCBhcmUgaW5jbHVkZWQgaW4gYGFycmAuCgpgYGBqcwpjb25zdCBp
bmNsdWRlc0FsbCA9IChhcnIsIHZhbHVlcykgPT4gdmFsdWVzLmV2ZXJ5KHYg
PT4gYXJyLmluY2x1ZGVzKHYpKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+
RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwppbmNsdWRlc0FsbChbMSwgMiwg
MywgNF0sIFsxLCA0XSk7IC8vIHRydWUKaW5jbHVkZXNBbGwoWzEsIDIsIDMs
IDRdLCBbMSwgNV0pOyAvLyBmYWxzZQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvi
rIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBpbmNsdWRlc0FueQoK
UmV0dXJucyBgdHJ1ZWAgaWYgYXQgbGVhc3Qgb25lIGVsZW1lbnQgb2YgdmFs
dWVzIGlzIGluY2x1ZGVkIGluIGFyciAsIGBmYWxzZWAgb3RoZXJ3aXNlLgoK
VXNlIGBBcnJheS5wcm90b3R5cGUuc29tZSgpYCBhbmQgYEFycmF5LnByb3Rv
dHlwZS5pbmNsdWRlcygpYCB0byBjaGVjayBpZiBhdCBsZWFzdCBvbmUgZWxl
bWVudCBvZiBgdmFsdWVzYCBpcyBpbmNsdWRlZCBpbiBgYXJyYC4KCmBgYGpz
CmNvbnN0IGluY2x1ZGVzQW55ID0gKGFyciwgdmFsdWVzKSA9PiB2YWx1ZXMu
c29tZSh2ID0+IGFyci5pbmNsdWRlcyh2KSk7CmBgYAoKPGRldGFpbHM+Cjxz
dW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKaW5jbHVkZXNBbnko
WzEsIDIsIDMsIDRdLCBbMiwgOV0pOyAvLyB0cnVlCmluY2x1ZGVzQW55KFsx
LCAyLCAzLCA0XSwgWzgsIDldKTsgLy8gZmFsc2UKYGBgCjwvZGV0YWlscz4K
Cjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgaW5kZXhP
ZkFsbAoKUmV0dXJucyBhbGwgaW5kaWNlcyBvZiBgdmFsYCBpbiBhbiBhcnJh
eS4KSWYgYHZhbGAgbmV2ZXIgb2NjdXJzLCByZXR1cm5zIGBbXWAuCgpVc2Ug
YEFycmF5LnByb3RvdHlwZS5yZWR1Y2UoKWAgdG8gbG9vcCBvdmVyIGVsZW1l
bnRzIGFuZCBzdG9yZSBpbmRpY2VzIGZvciBtYXRjaGluZyBlbGVtZW50cy4K
UmV0dXJuIHRoZSBhcnJheSBvZiBpbmRpY2VzLgoKYGBganMKY29uc3QgaW5k
ZXhPZkFsbCA9IChhcnIsIHZhbCkgPT4gYXJyLnJlZHVjZSgoYWNjLCBlbCwg
aSkgPT4gKGVsID09PSB2YWwgPyBbLi4uYWNjLCBpXSA6IGFjYyksIFtdKTsK
YGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+Cgpg
YGBqcwppbmRleE9mQWxsKFsxLCAyLCAzLCAxLCAyLCAzXSwgMSk7IC8vIFsw
LDNdCmluZGV4T2ZBbGwoWzEsIDIsIDNdLCA0KTsgLy8gW10KYGBgCjwvZGV0
YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMg
aW5pdGlhbAoKUmV0dXJucyBhbGwgdGhlIGVsZW1lbnRzIG9mIGFuIGFycmF5
IGV4Y2VwdCB0aGUgbGFzdCBvbmUuCgpVc2UgYGFyci5zbGljZSgwLC0xKWAg
dG8gcmV0dXJuIGFsbCBidXQgdGhlIGxhc3QgZWxlbWVudCBvZiB0aGUgYXJy
YXkuCgpgYGBqcwpjb25zdCBpbml0aWFsID0gYXJyID0+IGFyci5zbGljZSgw
LCAtMSk7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1t
YXJ5PgoKYGBganMKaW5pdGlhbChbMSwgMiwgM10pOyAvLyBbMSwyXQpgYGAK
PC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykK
CiMjIyBpbml0aWFsaXplMkRBcnJheQoKSW5pdGlhbGl6ZXMgYSAyRCBhcnJh
eSBvZiBnaXZlbiB3aWR0aCBhbmQgaGVpZ2h0IGFuZCB2YWx1ZS4KClVzZSBg
QXJyYXkucHJvdG90eXBlLm1hcCgpYCB0byBnZW5lcmF0ZSBoIHJvd3Mgd2hl
cmUgZWFjaCBpcyBhIG5ldyBhcnJheSBvZiBzaXplIHcgaW5pdGlhbGl6ZSB3
aXRoIHZhbHVlLiBJZiB0aGUgdmFsdWUgaXMgbm90IHByb3ZpZGVkLCBkZWZh
dWx0IHRvIGBudWxsYC4KCmBgYGpzCmNvbnN0IGluaXRpYWxpemUyREFycmF5
ID0gKHcsIGgsIHZhbCA9IG51bGwpID0+CiAgQXJyYXkuZnJvbSh7IGxlbmd0
aDogaCB9KS5tYXAoKCkgPT4gQXJyYXkuZnJvbSh7IGxlbmd0aDogdyB9KS5m
aWxsKHZhbCkpOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwv
c3VtbWFyeT4KCmBgYGpzCmluaXRpYWxpemUyREFycmF5KDIsIDIsIDApOyAv
LyBbWzAsMF0sIFswLDBdXQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFj
ayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBpbml0aWFsaXplQXJyYXlXaXRo
UmFuZ2UKCkluaXRpYWxpemVzIGFuIGFycmF5IGNvbnRhaW5pbmcgdGhlIG51
bWJlcnMgaW4gdGhlIHNwZWNpZmllZCByYW5nZSB3aGVyZSBgc3RhcnRgIGFu
ZCBgZW5kYCBhcmUgaW5jbHVzaXZlIHdpdGggdGhlaXIgY29tbW9uIGRpZmZl
cmVuY2UgYHN0ZXBgLgoKVXNlIGBBcnJheS5mcm9tKClgIHRvIGNyZWF0ZSBh
biBhcnJheSBvZiB0aGUgZGVzaXJlZCBsZW5ndGgsIGAoZW5kIC0gc3RhcnQg
KyAxKS9zdGVwYCwgYW5kIGEgbWFwIGZ1bmN0aW9uIHRvIGZpbGwgaXQgd2l0
aCB0aGUgZGVzaXJlZCB2YWx1ZXMgaW4gdGhlIGdpdmVuIHJhbmdlLgpZb3Ug
Y2FuIG9taXQgYHN0YXJ0YCB0byB1c2UgYSBkZWZhdWx0IHZhbHVlIG9mIGAw
YC4KWW91IGNhbiBvbWl0IGBzdGVwYCB0byB1c2UgYSBkZWZhdWx0IHZhbHVl
IG9mIGAxYC4KCmBgYGpzCmNvbnN0IGluaXRpYWxpemVBcnJheVdpdGhSYW5n
ZSA9IChlbmQsIHN0YXJ0ID0gMCwgc3RlcCA9IDEpID0+CiAgQXJyYXkuZnJv
bSh7IGxlbmd0aDogTWF0aC5jZWlsKChlbmQgLSBzdGFydCArIDEpIC8gc3Rl
cCkgfSwgKHYsIGkpID0+IGkgKiBzdGVwICsgc3RhcnQpOwpgYGAKCjxkZXRh
aWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmluaXRp
YWxpemVBcnJheVdpdGhSYW5nZSg1KTsgLy8gWzAsMSwyLDMsNCw1XQppbml0
aWFsaXplQXJyYXlXaXRoUmFuZ2UoNywgMyk7IC8vIFszLDQsNSw2LDddCmlu
aXRpYWxpemVBcnJheVdpdGhSYW5nZSg5LCAwLCAyKTsgLy8gWzAsMiw0LDYs
OF0KYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29u
dGVudHMpCgojIyMgaW5pdGlhbGl6ZUFycmF5V2l0aFJhbmdlUmlnaHQKCklu
aXRpYWxpemVzIGFuIGFycmF5IGNvbnRhaW5pbmcgdGhlIG51bWJlcnMgaW4g
dGhlIHNwZWNpZmllZCByYW5nZSAoaW4gcmV2ZXJzZSkgd2hlcmUgYHN0YXJ0
YCBhbmQgYGVuZGAgYXJlIGluY2x1c2l2ZSB3aXRoIHRoZWlyIGNvbW1vbiBk
aWZmZXJlbmNlIGBzdGVwYC4KClVzZSBgQXJyYXkuZnJvbShNYXRoLmNlaWwo
KGVuZCsxLXN0YXJ0KS9zdGVwKSlgIHRvIGNyZWF0ZSBhbiBhcnJheSBvZiB0
aGUgZGVzaXJlZCBsZW5ndGgodGhlIGFtb3VudHMgb2YgZWxlbWVudHMgaXMg
ZXF1YWwgdG8gYChlbmQtc3RhcnQpL3N0ZXBgIG9yIGAoZW5kKzEtc3RhcnQp
L3N0ZXBgIGZvciBpbmNsdXNpdmUgZW5kKSwgYEFycmF5LnByb3RvdHlwZS5t
YXAoKWAgdG8gZmlsbCB3aXRoIHRoZSBkZXNpcmVkIHZhbHVlcyBpbiBhIHJh
bmdlLgpZb3UgY2FuIG9taXQgYHN0YXJ0YCB0byB1c2UgYSBkZWZhdWx0IHZh
bHVlIG9mIGAwYC4KWW91IGNhbiBvbWl0IGBzdGVwYCB0byB1c2UgYSBkZWZh
dWx0IHZhbHVlIG9mIGAxYC4KCmBgYGpzCmNvbnN0IGluaXRpYWxpemVBcnJh
eVdpdGhSYW5nZVJpZ2h0ID0gKGVuZCwgc3RhcnQgPSAwLCBzdGVwID0gMSkg
PT4KICBBcnJheS5mcm9tKHsgbGVuZ3RoOiBNYXRoLmNlaWwoKGVuZCArIDEg
LSBzdGFydCkgLyBzdGVwKSB9KS5tYXAoCiAgICAodiwgaSwgYXJyKSA9PiAo
YXJyLmxlbmd0aCAtIGkgLSAxKSAqIHN0ZXAgKyBzdGFydAogICk7CmBgYAoK
PGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMK
aW5pdGlhbGl6ZUFycmF5V2l0aFJhbmdlUmlnaHQoNSk7IC8vIFs1LDQsMywy
LDEsMF0KaW5pdGlhbGl6ZUFycmF5V2l0aFJhbmdlUmlnaHQoNywgMyk7IC8v
IFs3LDYsNSw0LDNdCmluaXRpYWxpemVBcnJheVdpdGhSYW5nZVJpZ2h0KDks
IDAsIDIpOyAvLyBbOCw2LDQsMiwwXQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvi
rIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBpbml0aWFsaXplQXJy
YXlXaXRoVmFsdWVzCgpJbml0aWFsaXplcyBhbmQgZmlsbHMgYW4gYXJyYXkg
d2l0aCB0aGUgc3BlY2lmaWVkIHZhbHVlcy4KClVzZSBgQXJyYXkobilgIHRv
IGNyZWF0ZSBhbiBhcnJheSBvZiB0aGUgZGVzaXJlZCBsZW5ndGgsIGBmaWxs
KHYpYCB0byBmaWxsIGl0IHdpdGggdGhlIGRlc2lyZWQgdmFsdWVzLgpZb3Ug
Y2FuIG9taXQgYHZhbGAgdG8gdXNlIGEgZGVmYXVsdCB2YWx1ZSBvZiBgMGAu
CgpgYGBqcwpjb25zdCBpbml0aWFsaXplQXJyYXlXaXRoVmFsdWVzID0gKG4s
IHZhbCA9IDApID0+IEFycmF5KG4pLmZpbGwodmFsKTsKYGBgCgo8ZGV0YWls
cz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwppbml0aWFs
aXplQXJyYXlXaXRoVmFsdWVzKDUsIDIpOyAvLyBbMiwgMiwgMiwgMiwgMl0K
YGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVu
dHMpCgojIyMgaW5pdGlhbGl6ZU5EQXJyYXkKCkNyZWF0ZSBhIG4tZGltZW5z
aW9uYWwgYXJyYXkgd2l0aCBnaXZlbiB2YWx1ZS4KClVzZSByZWN1cnNpb24u
ClVzZSBgQXJyYXkucHJvdG90eXBlLm1hcCgpYCB0byBnZW5lcmF0ZSByb3dz
IHdoZXJlIGVhY2ggaXMgYSBuZXcgYXJyYXkgaW5pdGlhbGl6ZWQgdXNpbmcg
YGluaXRpYWxpemVOREFycmF5YC4KCmBgYGpzCmNvbnN0IGluaXRpYWxpemVO
REFycmF5ID0gKHZhbCwgLi4uYXJncykgPT4KICBhcmdzLmxlbmd0aCA9PT0g
MAogICAgPyB2YWwKICAgIDogQXJyYXkuZnJvbSh7IGxlbmd0aDogYXJnc1sw
XSB9KS5tYXAoKCkgPT4gaW5pdGlhbGl6ZU5EQXJyYXkodmFsLCAuLi5hcmdz
LnNsaWNlKDEpKSk7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVz
PC9zdW1tYXJ5PgoKYGBganMKaW5pdGlhbGl6ZU5EQXJyYXkoMSwgMyk7IC8v
IFsxLDEsMV0KaW5pdGlhbGl6ZU5EQXJyYXkoNSwgMiwgMiwgMik7IC8vIFtb
WzUsNV0sWzUsNV1dLFtbNSw1XSxbNSw1XV1dCmBgYAo8L2RldGFpbHM+Cgo8
YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGludGVyc2Vj
dGlvbgoKUmV0dXJucyBhIGxpc3Qgb2YgZWxlbWVudHMgdGhhdCBleGlzdCBp
biBib3RoIGFycmF5cy4KCkNyZWF0ZSBhIGBTZXRgIGZyb20gYGJgLCB0aGVu
IHVzZSBgQXJyYXkucHJvdG90eXBlLmZpbHRlcigpYCBvbiBgYWAgdG8gb25s
eSBrZWVwIHZhbHVlcyBjb250YWluZWQgaW4gYGJgLgoKYGBganMKY29uc3Qg
aW50ZXJzZWN0aW9uID0gKGEsIGIpID0+IHsKICBjb25zdCBzID0gbmV3IFNl
dChiKTsKICByZXR1cm4gYS5maWx0ZXIoeCA9PiBzLmhhcyh4KSk7Cn07CmBg
YAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBg
anMKaW50ZXJzZWN0aW9uKFsxLCAyLCAzXSwgWzQsIDMsIDJdKTsgLy8gWzIs
IDNdCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2Nv
bnRlbnRzKQoKIyMjIGludGVyc2VjdGlvbkJ5CgpSZXR1cm5zIGEgbGlzdCBv
ZiBlbGVtZW50cyB0aGF0IGV4aXN0IGluIGJvdGggYXJyYXlzLCBhZnRlciBh
cHBseWluZyB0aGUgcHJvdmlkZWQgZnVuY3Rpb24gdG8gZWFjaCBhcnJheSBl
bGVtZW50IG9mIGJvdGguCgpDcmVhdGUgYSBgU2V0YCBieSBhcHBseWluZyBg
Zm5gIHRvIGFsbCBlbGVtZW50cyBpbiBgYmAsIHRoZW4gdXNlIGBBcnJheS5w
cm90b3R5cGUuZmlsdGVyKClgIG9uIGBhYCB0byBvbmx5IGtlZXAgZWxlbWVu
dHMsIHdoaWNoIHByb2R1Y2UgdmFsdWVzIGNvbnRhaW5lZCBpbiBgYmAgd2hl
biBgZm5gIGlzIGFwcGxpZWQgdG8gdGhlbS4KCmBgYGpzCmNvbnN0IGludGVy
c2VjdGlvbkJ5ID0gKGEsIGIsIGZuKSA9PiB7CiAgY29uc3QgcyA9IG5ldyBT
ZXQoYi5tYXAoZm4pKTsKICByZXR1cm4gYS5maWx0ZXIoeCA9PiBzLmhhcyhm
bih4KSkpOwp9OwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwv
c3VtbWFyeT4KCmBgYGpzCmludGVyc2VjdGlvbkJ5KFsyLjEsIDEuMl0sIFsy
LjMsIDMuNF0sIE1hdGguZmxvb3IpOyAvLyBbMi4xXQpgYGAKPC9kZXRhaWxz
PgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBpbnRl
cnNlY3Rpb25XaXRoCgpSZXR1cm5zIGEgbGlzdCBvZiBlbGVtZW50cyB0aGF0
IGV4aXN0IGluIGJvdGggYXJyYXlzLCB1c2luZyBhIHByb3ZpZGVkIGNvbXBh
cmF0b3IgZnVuY3Rpb24uCgpVc2UgYEFycmF5LnByb3RvdHlwZS5maWx0ZXIo
KWAgYW5kIGBBcnJheS5wcm90b3R5cGUuZmluZEluZGV4KClgIGluIGNvbWJp
bmF0aW9uIHdpdGggdGhlIHByb3ZpZGVkIGNvbXBhcmF0b3IgdG8gZGV0ZXJt
aW5lIGludGVyc2VjdGluZyB2YWx1ZXMuCgpgYGBqcwpjb25zdCBpbnRlcnNl
Y3Rpb25XaXRoID0gKGEsIGIsIGNvbXApID0+IGEuZmlsdGVyKHggPT4gYi5m
aW5kSW5kZXgoeSA9PiBjb21wKHgsIHkpKSAhPT0gLTEpOwpgYGAKCjxkZXRh
aWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmludGVy
c2VjdGlvbldpdGgoWzEsIDEuMiwgMS41LCAzLCAwXSwgWzEuOSwgMywgMCwg
My45XSwgKGEsIGIpID0+IE1hdGgucm91bmQoYSkgPT09IE1hdGgucm91bmQo
YikpOyAvLyBbMS41LCAzLCAwXQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYg
QmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBpc1NvcnRlZAoKUmV0dXJu
cyBgMWAgaWYgdGhlIGFycmF5IGlzIHNvcnRlZCBpbiBhc2NlbmRpbmcgb3Jk
ZXIsIGAtMWAgaWYgaXQgaXMgc29ydGVkIGluIGRlc2NlbmRpbmcgb3JkZXIg
b3IgYDBgIGlmIGl0IGlzIG5vdCBzb3J0ZWQuCgpDYWxjdWxhdGUgdGhlIG9y
ZGVyaW5nIGBkaXJlY3Rpb25gIGZvciB0aGUgZmlyc3QgdHdvIGVsZW1lbnRz
LgpVc2UgYE9iamVjdC5lbnRyaWVzKClgIHRvIGxvb3Agb3ZlciBhcnJheSBv
YmplY3RzIGFuZCBjb21wYXJlIHRoZW0gaW4gcGFpcnMuClJldHVybiBgMGAg
aWYgdGhlIGBkaXJlY3Rpb25gIGNoYW5nZXMgb3IgdGhlIGBkaXJlY3Rpb25g
IGlmIHRoZSBsYXN0IGVsZW1lbnQgaXMgcmVhY2hlZC4KCmBgYGpzCmNvbnN0
IGlzU29ydGVkID0gYXJyID0+IHsKICBsZXQgZGlyZWN0aW9uID0gLShhcnJb
MF0gLSBhcnJbMV0pOwogIGZvciAobGV0IFtpLCB2YWxdIG9mIGFyci5lbnRy
aWVzKCkpIHsKICAgIGRpcmVjdGlvbiA9ICFkaXJlY3Rpb24gPyAtKGFycltp
IC0gMV0gLSBhcnJbaV0pIDogZGlyZWN0aW9uOwogICAgaWYgKGkgPT09IGFy
ci5sZW5ndGggLSAxKSByZXR1cm4gIWRpcmVjdGlvbiA/IDAgOiBkaXJlY3Rp
b247CiAgICBlbHNlIGlmICgodmFsIC0gYXJyW2kgKyAxXSkgKiBkaXJlY3Rp
b24gPiAwKSByZXR1cm4gMDsKICB9Cn07CmBgYAoKPGRldGFpbHM+CjxzdW1t
YXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKaXNTb3J0ZWQoWzAsIDEs
IDIsIDJdKTsgLy8gMQppc1NvcnRlZChbNCwgMywgMl0pOyAvLyAtMQppc1Nv
cnRlZChbNCwgMywgNV0pOyAvLyAwCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+Ks
hiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGpvaW4KCkpvaW5zIGFs
bCBlbGVtZW50cyBvZiBhbiBhcnJheSBpbnRvIGEgc3RyaW5nIGFuZCByZXR1
cm5zIHRoaXMgc3RyaW5nLgpVc2VzIGEgc2VwYXJhdG9yIGFuZCBhbiBlbmQg
c2VwYXJhdG9yLgoKVXNlIGBBcnJheS5wcm90b3R5cGUucmVkdWNlKClgIHRv
IGNvbWJpbmUgZWxlbWVudHMgaW50byBhIHN0cmluZy4KT21pdCB0aGUgc2Vj
b25kIGFyZ3VtZW50LCBgc2VwYXJhdG9yYCwgdG8gdXNlIGEgZGVmYXVsdCBz
ZXBhcmF0b3Igb2YgYCcsJ2AuCk9taXQgdGhlIHRoaXJkIGFyZ3VtZW50LCBg
ZW5kYCwgdG8gdXNlIHRoZSBzYW1lIHZhbHVlIGFzIGBzZXBhcmF0b3JgIGJ5
IGRlZmF1bHQuCgpgYGBqcwpjb25zdCBqb2luID0gKGFyciwgc2VwYXJhdG9y
ID0gJywnLCBlbmQgPSBzZXBhcmF0b3IpID0+CiAgYXJyLnJlZHVjZSgKICAg
IChhY2MsIHZhbCwgaSkgPT4KICAgICAgaSA9PT0gYXJyLmxlbmd0aCAtIDIK
ICAgICAgICA/IGFjYyArIHZhbCArIGVuZAogICAgICAgIDogaSA9PT0gYXJy
Lmxlbmd0aCAtIDEKICAgICAgICA/IGFjYyArIHZhbAogICAgICAgIDogYWNj
ICsgdmFsICsgc2VwYXJhdG9yLAogICAgJycKICApOwpgYGAKCjxkZXRhaWxz
Pgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmpvaW4oWydw
ZW4nLCAncGluZWFwcGxlJywgJ2FwcGxlJywgJ3BlbiddLCAnLCcsICcmJyk7
IC8vICJwZW4scGluZWFwcGxlLGFwcGxlJnBlbiIKam9pbihbJ3BlbicsICdw
aW5lYXBwbGUnLCAnYXBwbGUnLCAncGVuJ10sICcsJyk7IC8vICJwZW4scGlu
ZWFwcGxlLGFwcGxlLHBlbiIKam9pbihbJ3BlbicsICdwaW5lYXBwbGUnLCAn
YXBwbGUnLCAncGVuJ10pOyAvLyAicGVuLHBpbmVhcHBsZSxhcHBsZSxwZW4i
CmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRl
bnRzKQoKIyMjIEpTT050b0NTViAhW2FkdmFuY2VkXSgvYWR2YW5jZWQuc3Zn
KQoKQ29udmVydHMgYW4gYXJyYXkgb2Ygb2JqZWN0cyB0byBhIGNvbW1hLXNl
cGFyYXRlZCB2YWx1ZXMgKENTVikgc3RyaW5nIHRoYXQgY29udGFpbnMgb25s
eSB0aGUgYGNvbHVtbnNgIHNwZWNpZmllZC4KClVzZSBgQXJyYXkucHJvdG90
eXBlLmpvaW4oZGVsaW1pdGVyKWAgdG8gY29tYmluZSBhbGwgdGhlIG5hbWVz
IGluIGBjb2x1bW5zYCB0byBjcmVhdGUgdGhlIGZpcnN0IHJvdy4KVXNlIGBB
cnJheS5wcm90b3R5cGUubWFwKClgIGFuZCBgQXJyYXkucHJvdG90eXBlLnJl
ZHVjZSgpYCB0byBjcmVhdGUgYSByb3cgZm9yIGVhY2ggb2JqZWN0LCBzdWJz
dGl0dXRpbmcgbm9uLWV4aXN0ZW50IHZhbHVlcyB3aXRoIGVtcHR5IHN0cmlu
Z3MgYW5kIG9ubHkgbWFwcGluZyB2YWx1ZXMgaW4gYGNvbHVtbnNgLgpVc2Ug
YEFycmF5LnByb3RvdHlwZS5qb2luKCdcbicpYCB0byBjb21iaW5lIGFsbCBy
b3dzIGludG8gYSBzdHJpbmcuCk9taXQgdGhlIHRoaXJkIGFyZ3VtZW50LCBg
ZGVsaW1pdGVyYCwgdG8gdXNlIGEgZGVmYXVsdCBkZWxpbWl0ZXIgb2YgYCxg
LgoKYGBganMKY29uc3QgSlNPTnRvQ1NWID0gKGFyciwgY29sdW1ucywgZGVs
aW1pdGVyID0gJywnKSA9PgogIFsKICAgIGNvbHVtbnMuam9pbihkZWxpbWl0
ZXIpLAogICAgLi4uYXJyLm1hcChvYmogPT4KICAgICAgY29sdW1ucy5yZWR1
Y2UoCiAgICAgICAgKGFjYywga2V5KSA9PiBgJHthY2N9JHshYWNjLmxlbmd0
aCA/ICcnIDogZGVsaW1pdGVyfSIkeyFvYmpba2V5XSA/ICcnIDogb2JqW2tl
eV19ImAsCiAgICAgICAgJycKICAgICAgKQogICAgKQogIF0uam9pbignXG4n
KTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+
CgpgYGBqcwpKU09OdG9DU1YoW3sgYTogMSwgYjogMiB9LCB7IGE6IDMsIGI6
IDQsIGM6IDUgfSwgeyBhOiA2IH0sIHsgYjogNyB9XSwgWydhJywgJ2InXSk7
IC8vICdhLGJcbiIxIiwiMiJcbiIzIiwiNCJcbiI2IiwiIlxuIiIsIjciJwpK
U09OdG9DU1YoW3sgYTogMSwgYjogMiB9LCB7IGE6IDMsIGI6IDQsIGM6IDUg
fSwgeyBhOiA2IH0sIHsgYjogNyB9XSwgWydhJywgJ2InXSwgJzsnKTsgLy8g
J2E7YlxuIjEiOyIyIlxuIjMiOyI0IlxuIjYiOyIiXG4iIjsiNyInCmBgYAo8
L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoK
IyMjIGxhc3QKClJldHVybnMgdGhlIGxhc3QgZWxlbWVudCBpbiBhbiBhcnJh
eS4KClVzZSBgYXJyLmxlbmd0aCAtIDFgIHRvIGNvbXB1dGUgdGhlIGluZGV4
IG9mIHRoZSBsYXN0IGVsZW1lbnQgb2YgdGhlIGdpdmVuIGFycmF5IGFuZCBy
ZXR1cm5pbmcgaXQuCgpgYGBqcwpjb25zdCBsYXN0ID0gYXJyID0+IGFyclth
cnIubGVuZ3RoIC0gMV07CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1w
bGVzPC9zdW1tYXJ5PgoKYGBganMKbGFzdChbMSwgMiwgM10pOyAvLyAzCmBg
YAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRz
KQoKIyMjIGxvbmdlc3RJdGVtCgpUYWtlcyBhbnkgbnVtYmVyIG9mIGl0ZXJh
YmxlIG9iamVjdHMgb3Igb2JqZWN0cyB3aXRoIGEgYGxlbmd0aGAgcHJvcGVy
dHkgYW5kIHJldHVybnMgdGhlIGxvbmdlc3Qgb25lLgpJZiBtdWx0aXBsZSBv
YmplY3RzIGhhdmUgdGhlIHNhbWUgbGVuZ3RoLCB0aGUgZmlyc3Qgb25lIHdp
bGwgYmUgcmV0dXJuZWQuClJldHVybnMgYHVuZGVmaW5lZGAgaWYgbm8gYXJn
dW1lbnRzIGFyZSBwcm92aWRlZC4KClVzZSBgQXJyYXkucHJvdG90eXBlLnJl
ZHVjZSgpYCwgY29tcGFyaW5nIHRoZSBgbGVuZ3RoYCBvZiBvYmplY3RzIHRv
IGZpbmQgdGhlIGxvbmdlc3Qgb25lLgoKYGBganMKY29uc3QgbG9uZ2VzdEl0
ZW0gPSAoLi4udmFscykgPT4gdmFscy5yZWR1Y2UoKGEsIHgpID0+ICh4Lmxl
bmd0aCA+IGEubGVuZ3RoID8geCA6IGEpKTsKYGBgCgo8ZGV0YWlscz4KPHN1
bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpsb25nZXN0SXRlbSgn
dGhpcycsICdpcycsICdhJywgJ3Rlc3RjYXNlJyk7IC8vICd0ZXN0Y2FzZScK
bG9uZ2VzdEl0ZW0oLi4uWydhJywgJ2FiJywgJ2FiYyddKTsgLy8gJ2FiYycK
bG9uZ2VzdEl0ZW0oLi4uWydhJywgJ2FiJywgJ2FiYyddLCAnYWJjZCcpOyAv
LyAnYWJjZCcKbG9uZ2VzdEl0ZW0oWzEsIDIsIDNdLCBbMSwgMl0sIFsxLCAy
LCAzLCA0LCA1XSk7IC8vIFsxLCAyLCAzLCA0LCA1XQpsb25nZXN0SXRlbShb
MSwgMiwgM10sICdmb29iYXInKTsgLy8gJ2Zvb2JhcicKYGBgCjwvZGV0YWls
cz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgbWFw
T2JqZWN0ICFbYWR2YW5jZWRdKC9hZHZhbmNlZC5zdmcpCgpNYXBzIHRoZSB2
YWx1ZXMgb2YgYW4gYXJyYXkgdG8gYW4gb2JqZWN0IHVzaW5nIGEgZnVuY3Rp
b24sIHdoZXJlIHRoZSBrZXktdmFsdWUgcGFpcnMgY29uc2lzdCBvZiB0aGUg
c3RyaW5naWZpZWQgdmFsdWUgYXMgdGhlIGtleSBhbmQgdGhlIG1hcHBlZCB2
YWx1ZS4KClVzZSBhbiBhbm9ueW1vdXMgaW5uZXIgZnVuY3Rpb24gc2NvcGUg
dG8gZGVjbGFyZSBhbiB1bmRlZmluZWQgbWVtb3J5IHNwYWNlLCB1c2luZyBj
bG9zdXJlcyB0byBzdG9yZSBhIHJldHVybiB2YWx1ZS4gVXNlIGEgbmV3IGBB
cnJheWAgdG8gc3RvcmUgdGhlIGFycmF5IHdpdGggYSBtYXAgb2YgdGhlIGZ1
bmN0aW9uIG92ZXIgaXRzIGRhdGEgc2V0IGFuZCBhIGNvbW1hIG9wZXJhdG9y
IHRvIHJldHVybiBhIHNlY29uZCBzdGVwLCB3aXRob3V0IG5lZWRpbmcgdG8g
bW92ZSBmcm9tIG9uZSBjb250ZXh0IHRvIGFub3RoZXIgKGR1ZSB0byBjbG9z
dXJlcyBhbmQgb3JkZXIgb2Ygb3BlcmF0aW9ucykuCgpgYGBqcwpjb25zdCBt
YXBPYmplY3QgPSAoYXJyLCBmbikgPT4KICAoYSA9PiAoCiAgICAoYSA9IFth
cnIsIGFyci5tYXAoZm4pXSksIGFbMF0ucmVkdWNlKChhY2MsIHZhbCwgaW5k
KSA9PiAoKGFjY1t2YWxdID0gYVsxXVtpbmRdKSwgYWNjKSwge30pCiAgKSko
KTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+
CgpgYGBqcwpjb25zdCBzcXVhcmVJdCA9IGFyciA9PiBtYXBPYmplY3QoYXJy
LCBhID0+IGEgKiBhKTsKc3F1YXJlSXQoWzEsIDIsIDNdKTsgLy8geyAxOiAx
LCAyOiA0LCAzOiA5IH0KYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sg
dG8gdG9wXSgjY29udGVudHMpCgojIyMgbWF4TgoKUmV0dXJucyB0aGUgYG5g
IG1heGltdW0gZWxlbWVudHMgZnJvbSB0aGUgcHJvdmlkZWQgYXJyYXkuCklm
IGBuYCBpcyBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gdGhlIHByb3ZpZGVk
IGFycmF5J3MgbGVuZ3RoLCB0aGVuIHJldHVybiB0aGUgb3JpZ2luYWwgYXJy
YXkgKHNvcnRlZCBpbiBkZXNjZW5kaW5nIG9yZGVyKS4KClVzZSBgQXJyYXku
cHJvdG90eXBlLnNvcnQoKWAgY29tYmluZWQgd2l0aCB0aGUgc3ByZWFkIG9w
ZXJhdG9yIChgLi4uYCkgdG8gY3JlYXRlIGEgc2hhbGxvdyBjbG9uZSBvZiB0
aGUgYXJyYXkgYW5kIHNvcnQgaXQgaW4gZGVzY2VuZGluZyBvcmRlci4KVXNl
IGBBcnJheS5wcm90b3R5cGUuc2xpY2UoKWAgdG8gZ2V0IHRoZSBzcGVjaWZp
ZWQgbnVtYmVyIG9mIGVsZW1lbnRzLgpPbWl0IHRoZSBzZWNvbmQgYXJndW1l
bnQsIGBuYCwgdG8gZ2V0IGEgb25lLWVsZW1lbnQgYXJyYXkuCgpgYGBqcwpj
b25zdCBtYXhOID0gKGFyciwgbiA9IDEpID0+IFsuLi5hcnJdLnNvcnQoKGEs
IGIpID0+IGIgLSBhKS5zbGljZSgwLCBuKTsKYGBgCgo8ZGV0YWlscz4KPHN1
bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwptYXhOKFsxLCAyLCAz
XSk7IC8vIFszXQptYXhOKFsxLCAyLCAzXSwgMik7IC8vIFszLDJdCmBgYAo8
L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoK
IyMjIG1pbk4KClJldHVybnMgdGhlIGBuYCBtaW5pbXVtIGVsZW1lbnRzIGZy
b20gdGhlIHByb3ZpZGVkIGFycmF5LgpJZiBgbmAgaXMgZ3JlYXRlciB0aGFu
IG9yIGVxdWFsIHRvIHRoZSBwcm92aWRlZCBhcnJheSdzIGxlbmd0aCwgdGhl
biByZXR1cm4gdGhlIG9yaWdpbmFsIGFycmF5IChzb3J0ZWQgaW4gYXNjZW5k
aW5nIG9yZGVyKS4KClVzZSBgQXJyYXkucHJvdG90eXBlLnNvcnQoKWAgY29t
YmluZWQgd2l0aCB0aGUgc3ByZWFkIG9wZXJhdG9yIChgLi4uYCkgdG8gY3Jl
YXRlIGEgc2hhbGxvdyBjbG9uZSBvZiB0aGUgYXJyYXkgYW5kIHNvcnQgaXQg
aW4gYXNjZW5kaW5nIG9yZGVyLgpVc2UgYEFycmF5LnByb3RvdHlwZS5zbGlj
ZSgpYCB0byBnZXQgdGhlIHNwZWNpZmllZCBudW1iZXIgb2YgZWxlbWVudHMu
Ck9taXQgdGhlIHNlY29uZCBhcmd1bWVudCwgYG5gLCB0byBnZXQgYSBvbmUt
ZWxlbWVudCBhcnJheS4KCmBgYGpzCmNvbnN0IG1pbk4gPSAoYXJyLCBuID0g
MSkgPT4gWy4uLmFycl0uc29ydCgoYSwgYikgPT4gYSAtIGIpLnNsaWNlKDAs
IG4pOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFy
eT4KCmBgYGpzCm1pbk4oWzEsIDIsIDNdKTsgLy8gWzFdCm1pbk4oWzEsIDIs
IDNdLCAyKTsgLy8gWzEsMl0KYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJh
Y2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgbm9uZQoKUmV0dXJucyBgdHJ1
ZWAgaWYgdGhlIHByb3ZpZGVkIHByZWRpY2F0ZSBmdW5jdGlvbiByZXR1cm5z
IGBmYWxzZWAgZm9yIGFsbCBlbGVtZW50cyBpbiBhIGNvbGxlY3Rpb24sIGBm
YWxzZWAgb3RoZXJ3aXNlLgoKVXNlIGBBcnJheS5wcm90b3R5cGUuc29tZSgp
YCB0byB0ZXN0IGlmIGFueSBlbGVtZW50cyBpbiB0aGUgY29sbGVjdGlvbiBy
ZXR1cm4gYHRydWVgIGJhc2VkIG9uIGBmbmAuCk9taXQgdGhlIHNlY29uZCBh
cmd1bWVudCwgYGZuYCwgdG8gdXNlIGBCb29sZWFuYCBhcyBhIGRlZmF1bHQu
CgpgYGBqcwpjb25zdCBub25lID0gKGFyciwgZm4gPSBCb29sZWFuKSA9PiAh
YXJyLnNvbWUoZm4pOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxl
czwvc3VtbWFyeT4KCmBgYGpzCm5vbmUoWzAsIDEsIDMsIDBdLCB4ID0+IHgg
PT0gMik7IC8vIHRydWUKbm9uZShbMCwgMCwgMF0pOyAvLyB0cnVlCmBgYAo8
L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoK
IyMjIG50aEVsZW1lbnQKClJldHVybnMgdGhlIG50aCBlbGVtZW50IG9mIGFu
IGFycmF5LgoKVXNlIGBBcnJheS5wcm90b3R5cGUuc2xpY2UoKWAgdG8gZ2V0
IGFuIGFycmF5IGNvbnRhaW5pbmcgdGhlIG50aCBlbGVtZW50IGF0IHRoZSBm
aXJzdCBwbGFjZS4KSWYgdGhlIGluZGV4IGlzIG91dCBvZiBib3VuZHMsIHJl
dHVybiBgdW5kZWZpbmVkYC4KT21pdCB0aGUgc2Vjb25kIGFyZ3VtZW50LCBg
bmAsIHRvIGdldCB0aGUgZmlyc3QgZWxlbWVudCBvZiB0aGUgYXJyYXkuCgpg
YGBqcwpjb25zdCBudGhFbGVtZW50ID0gKGFyciwgbiA9IDApID0+IChuID09
PSAtMSA/IGFyci5zbGljZShuKSA6IGFyci5zbGljZShuLCBuICsgMSkpWzBd
OwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4K
CmBgYGpzCm50aEVsZW1lbnQoWydhJywgJ2InLCAnYyddLCAxKTsgLy8gJ2In
Cm50aEVsZW1lbnQoWydhJywgJ2InLCAnYiddLCAtMyk7IC8vICdhJwpgYGAK
PC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykK
CiMjIyBvZmZzZXQKCk1vdmVzIHRoZSBzcGVjaWZpZWQgYW1vdW50IG9mIGVs
ZW1lbnRzIHRvIHRoZSBlbmQgb2YgdGhlIGFycmF5LgoKVXNlIGBBcnJheS5w
cm90b3R5cGUuc2xpY2UoKWAgdHdpY2UgdG8gZ2V0IHRoZSBlbGVtZW50cyBh
ZnRlciB0aGUgc3BlY2lmaWVkIGluZGV4IGFuZCB0aGUgZWxlbWVudHMgYmVm
b3JlIHRoYXQuClVzZSB0aGUgc3ByZWFkIG9wZXJhdG9yKGAuLi5gKSB0byBj
b21iaW5lIHRoZSB0d28gaW50byBvbmUgYXJyYXkuCklmIGBvZmZzZXRgIGlz
IG5lZ2F0aXZlLCB0aGUgZWxlbWVudHMgd2lsbCBiZSBtb3ZlZCBmcm9tIGVu
ZCB0byBzdGFydC4KCmBgYGpzCmNvbnN0IG9mZnNldCA9IChhcnIsIG9mZnNl
dCkgPT4gWy4uLmFyci5zbGljZShvZmZzZXQpLCAuLi5hcnIuc2xpY2UoMCwg
b2Zmc2V0KV07CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9z
dW1tYXJ5PgoKYGBganMKb2Zmc2V0KFsxLCAyLCAzLCA0LCA1XSwgMik7IC8v
IFszLCA0LCA1LCAxLCAyXQpvZmZzZXQoWzEsIDIsIDMsIDQsIDVdLCAtMik7
IC8vIFs0LCA1LCAxLCAyLCAzXQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYg
QmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBwYXJ0aXRpb24KCkdyb3Vw
cyB0aGUgZWxlbWVudHMgaW50byB0d28gYXJyYXlzLCBkZXBlbmRpbmcgb24g
dGhlIHByb3ZpZGVkIGZ1bmN0aW9uJ3MgdHJ1dGhpbmVzcyBmb3IgZWFjaCBl
bGVtZW50LgoKVXNlIGBBcnJheS5wcm90b3R5cGUucmVkdWNlKClgIHRvIGNy
ZWF0ZSBhbiBhcnJheSBvZiB0d28gYXJyYXlzLgpVc2UgYEFycmF5LnByb3Rv
dHlwZS5wdXNoKClgIHRvIGFkZCBlbGVtZW50cyBmb3Igd2hpY2ggYGZuYCBy
ZXR1cm5zIGB0cnVlYCB0byB0aGUgZmlyc3QgYXJyYXkgYW5kIGVsZW1lbnRz
IGZvciB3aGljaCBgZm5gIHJldHVybnMgYGZhbHNlYCB0byB0aGUgc2Vjb25k
IG9uZS4KCmBgYGpzCmNvbnN0IHBhcnRpdGlvbiA9IChhcnIsIGZuKSA9Pgog
IGFyci5yZWR1Y2UoCiAgICAoYWNjLCB2YWwsIGksIGFycikgPT4gewogICAg
ICBhY2NbZm4odmFsLCBpLCBhcnIpID8gMCA6IDFdLnB1c2godmFsKTsKICAg
ICAgcmV0dXJuIGFjYzsKICAgIH0sCiAgICBbW10sIFtdXQogICk7CmBgYAoK
PGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMK
Y29uc3QgdXNlcnMgPSBbeyB1c2VyOiAnYmFybmV5JywgYWdlOiAzNiwgYWN0
aXZlOiBmYWxzZSB9LCB7IHVzZXI6ICdmcmVkJywgYWdlOiA0MCwgYWN0aXZl
OiB0cnVlIH1dOwpwYXJ0aXRpb24odXNlcnMsIG8gPT4gby5hY3RpdmUpOyAv
LyBbW3sgJ3VzZXInOiAnZnJlZCcsICAgICdhZ2UnOiA0MCwgJ2FjdGl2ZSc6
IHRydWUgfV0sW3sgJ3VzZXInOiAnYmFybmV5JywgICdhZ2UnOiAzNiwgJ2Fj
dGl2ZSc6IGZhbHNlIH1dXQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFj
ayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBwZXJtdXRhdGlvbnMgIVthZHZh
bmNlZF0oL2FkdmFuY2VkLnN2ZykKCkdlbmVyYXRlcyBhbGwgcGVybXV0YXRp
b25zIG9mIGFuIGFycmF5J3MgZWxlbWVudHMgKGNvbnRhaW5zIGR1cGxpY2F0
ZXMpLgoK4pqg77iPICoqV0FSTklORyoqOiBUaGlzIGZ1bmN0aW9uJ3MgZXhl
Y3V0aW9uIHRpbWUgaW5jcmVhc2VzIGV4cG9uZW50aWFsbHkgd2l0aCBlYWNo
IGFycmF5IGVsZW1lbnQuIEFueXRoaW5nIG1vcmUgdGhhbiA4IHRvIDEwIGVu
dHJpZXMgd2lsbCBjYXVzZSB5b3VyIGJyb3dzZXIgdG8gaGFuZyBhcyBpdCB0
cmllcyB0byBzb2x2ZSBhbGwgdGhlIGRpZmZlcmVudCBjb21iaW5hdGlvbnMu
CgpVc2UgcmVjdXJzaW9uLgpGb3IgZWFjaCBlbGVtZW50IGluIHRoZSBnaXZl
biBhcnJheSwgY3JlYXRlIGFsbCB0aGUgcGFydGlhbCBwZXJtdXRhdGlvbnMg
Zm9yIHRoZSByZXN0IG9mIGl0cyBlbGVtZW50cy4KVXNlIGBBcnJheS5wcm90
b3R5cGUubWFwKClgIHRvIGNvbWJpbmUgdGhlIGVsZW1lbnQgd2l0aCBlYWNo
IHBhcnRpYWwgcGVybXV0YXRpb24sIHRoZW4gYEFycmF5LnByb3RvdHlwZS5y
ZWR1Y2UoKWAgdG8gY29tYmluZSBhbGwgcGVybXV0YXRpb25zIGluIG9uZSBh
cnJheS4KQmFzZSBjYXNlcyBhcmUgZm9yIGFycmF5IGBsZW5ndGhgIGVxdWFs
IHRvIGAyYCBvciBgMWAuCgpgYGBqcwpjb25zdCBwZXJtdXRhdGlvbnMgPSBh
cnIgPT4gewogIGlmIChhcnIubGVuZ3RoIDw9IDIpIHJldHVybiBhcnIubGVu
Z3RoID09PSAyID8gW2FyciwgW2FyclsxXSwgYXJyWzBdXV0gOiBhcnI7CiAg
cmV0dXJuIGFyci5yZWR1Y2UoCiAgICAoYWNjLCBpdGVtLCBpKSA9PgogICAg
ICBhY2MuY29uY2F0KAogICAgICAgIHBlcm11dGF0aW9ucyhbLi4uYXJyLnNs
aWNlKDAsIGkpLCAuLi5hcnIuc2xpY2UoaSArIDEpXSkubWFwKHZhbCA9PiBb
aXRlbSwgLi4udmFsXSkKICAgICAgKSwKICAgIFtdCiAgKTsKfTsKYGBgCgo8
ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpw
ZXJtdXRhdGlvbnMoWzEsIDMzLCA1XSk7IC8vIFsgWyAxLCAzMywgNSBdLCBb
IDEsIDUsIDMzIF0sIFsgMzMsIDEsIDUgXSwgWyAzMywgNSwgMSBdLCBbIDUs
IDEsIDMzIF0sIFsgNSwgMzMsIDEgXSBdCmBgYAo8L2RldGFpbHM+Cgo8YnI+
W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHB1bGwKCk11dGF0
ZXMgdGhlIG9yaWdpbmFsIGFycmF5IHRvIGZpbHRlciBvdXQgdGhlIHZhbHVl
cyBzcGVjaWZpZWQuCgpVc2UgYEFycmF5LnByb3RvdHlwZS5maWx0ZXIoKWAg
YW5kIGBBcnJheS5wcm90b3R5cGUuaW5jbHVkZXMoKWAgdG8gcHVsbCBvdXQg
dGhlIHZhbHVlcyB0aGF0IGFyZSBub3QgbmVlZGVkLgpVc2UgYEFycmF5LnBy
b3RvdHlwZS5sZW5ndGggPSAwYCB0byBtdXRhdGUgdGhlIHBhc3NlZCBpbiBh
biBhcnJheSBieSByZXNldHRpbmcgaXQncyBsZW5ndGggdG8gemVybyBhbmQg
YEFycmF5LnByb3RvdHlwZS5wdXNoKClgIHRvIHJlLXBvcHVsYXRlIGl0IHdp
dGggb25seSB0aGUgcHVsbGVkIHZhbHVlcy4KCmBgYGpzCmNvbnN0IHB1bGwg
PSAoYXJyLCAuLi5hcmdzKSA9PiB7CiAgbGV0IGFyZ1N0YXRlID0gQXJyYXku
aXNBcnJheShhcmdzWzBdKSA/IGFyZ3NbMF0gOiBhcmdzOwogIGxldCBwdWxs
ZWQgPSBhcnIuZmlsdGVyKCh2LCBpKSA9PiAhYXJnU3RhdGUuaW5jbHVkZXMo
dikpOwogIGFyci5sZW5ndGggPSAwOwogIHB1bGxlZC5mb3JFYWNoKHYgPT4g
YXJyLnB1c2godikpOwp9OwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFt
cGxlczwvc3VtbWFyeT4KCmBgYGpzCmxldCBteUFycmF5ID0gWydhJywgJ2In
LCAnYycsICdhJywgJ2InLCAnYyddOwpwdWxsKG15QXJyYXksICdhJywgJ2Mn
KTsgLy8gbXlBcnJheSA9IFsgJ2InLCAnYicgXQpgYGAKPC9kZXRhaWxzPgoK
PGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBwdWxsQXRJ
bmRleCAhW2FkdmFuY2VkXSgvYWR2YW5jZWQuc3ZnKQoKTXV0YXRlcyB0aGUg
b3JpZ2luYWwgYXJyYXkgdG8gZmlsdGVyIG91dCB0aGUgdmFsdWVzIGF0IHRo
ZSBzcGVjaWZpZWQgaW5kZXhlcy4KClVzZSBgQXJyYXkucHJvdG90eXBlLmZp
bHRlcigpYCBhbmQgYEFycmF5LnByb3RvdHlwZS5pbmNsdWRlcygpYCB0byBw
dWxsIG91dCB0aGUgdmFsdWVzIHRoYXQgYXJlIG5vdCBuZWVkZWQuClVzZSBg
QXJyYXkucHJvdG90eXBlLmxlbmd0aCA9IDBgIHRvIG11dGF0ZSB0aGUgcGFz
c2VkIGluIGFuIGFycmF5IGJ5IHJlc2V0dGluZyBpdCdzIGxlbmd0aCB0byB6
ZXJvIGFuZCBgQXJyYXkucHJvdG90eXBlLnB1c2goKWAgdG8gcmUtcG9wdWxh
dGUgaXQgd2l0aCBvbmx5IHRoZSBwdWxsZWQgdmFsdWVzLgpVc2UgYEFycmF5
LnByb3RvdHlwZS5wdXNoKClgIHRvIGtlZXAgdHJhY2sgb2YgcHVsbGVkIHZh
bHVlcwoKYGBganMKY29uc3QgcHVsbEF0SW5kZXggPSAoYXJyLCBwdWxsQXJy
KSA9PiB7CiAgbGV0IHJlbW92ZWQgPSBbXTsKICBsZXQgcHVsbGVkID0gYXJy
CiAgICAubWFwKCh2LCBpKSA9PiAocHVsbEFyci5pbmNsdWRlcyhpKSA/IHJl
bW92ZWQucHVzaCh2KSA6IHYpKQogICAgLmZpbHRlcigodiwgaSkgPT4gIXB1
bGxBcnIuaW5jbHVkZXMoaSkpOwogIGFyci5sZW5ndGggPSAwOwogIHB1bGxl
ZC5mb3JFYWNoKHYgPT4gYXJyLnB1c2godikpOwogIHJldHVybiByZW1vdmVk
Owp9OwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFy
eT4KCmBgYGpzCmxldCBteUFycmF5ID0gWydhJywgJ2InLCAnYycsICdkJ107
CmxldCBwdWxsZWQgPSBwdWxsQXRJbmRleChteUFycmF5LCBbMSwgM10pOyAv
LyBteUFycmF5ID0gWyAnYScsICdjJyBdICwgcHVsbGVkID0gWyAnYicsICdk
JyBdCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2Nv
bnRlbnRzKQoKIyMjIHB1bGxBdFZhbHVlICFbYWR2YW5jZWRdKC9hZHZhbmNl
ZC5zdmcpCgpNdXRhdGVzIHRoZSBvcmlnaW5hbCBhcnJheSB0byBmaWx0ZXIg
b3V0IHRoZSB2YWx1ZXMgc3BlY2lmaWVkLiBSZXR1cm5zIHRoZSByZW1vdmVk
IGVsZW1lbnRzLgoKVXNlIGBBcnJheS5wcm90b3R5cGUuZmlsdGVyKClgIGFu
ZCBgQXJyYXkucHJvdG90eXBlLmluY2x1ZGVzKClgIHRvIHB1bGwgb3V0IHRo
ZSB2YWx1ZXMgdGhhdCBhcmUgbm90IG5lZWRlZC4KVXNlIGBBcnJheS5wcm90
b3R5cGUubGVuZ3RoID0gMGAgdG8gbXV0YXRlIHRoZSBwYXNzZWQgaW4gYW4g
YXJyYXkgYnkgcmVzZXR0aW5nIGl0J3MgbGVuZ3RoIHRvIHplcm8gYW5kIGBB
cnJheS5wcm90b3R5cGUucHVzaCgpYCB0byByZS1wb3B1bGF0ZSBpdCB3aXRo
IG9ubHkgdGhlIHB1bGxlZCB2YWx1ZXMuClVzZSBgQXJyYXkucHJvdG90eXBl
LnB1c2goKWAgdG8ga2VlcCB0cmFjayBvZiBwdWxsZWQgdmFsdWVzCgpgYGBq
cwpjb25zdCBwdWxsQXRWYWx1ZSA9IChhcnIsIHB1bGxBcnIpID0+IHsKICBs
ZXQgcmVtb3ZlZCA9IFtdLAogICAgcHVzaFRvUmVtb3ZlID0gYXJyLmZvckVh
Y2goKHYsIGkpID0+IChwdWxsQXJyLmluY2x1ZGVzKHYpID8gcmVtb3ZlZC5w
dXNoKHYpIDogdikpLAogICAgbXV0YXRlVG8gPSBhcnIuZmlsdGVyKCh2LCBp
KSA9PiAhcHVsbEFyci5pbmNsdWRlcyh2KSk7CiAgYXJyLmxlbmd0aCA9IDA7
CiAgbXV0YXRlVG8uZm9yRWFjaCh2ID0+IGFyci5wdXNoKHYpKTsKICByZXR1
cm4gcmVtb3ZlZDsKfTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBs
ZXM8L3N1bW1hcnk+CgpgYGBqcwpsZXQgbXlBcnJheSA9IFsnYScsICdiJywg
J2MnLCAnZCddOwpsZXQgcHVsbGVkID0gcHVsbEF0VmFsdWUobXlBcnJheSwg
WydiJywgJ2QnXSk7IC8vIG15QXJyYXkgPSBbICdhJywgJ2MnIF0gLCBwdWxs
ZWQgPSBbICdiJywgJ2QnIF0KYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJh
Y2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgcHVsbEJ5ICFbYWR2YW5jZWRd
KC9hZHZhbmNlZC5zdmcpCgpNdXRhdGVzIHRoZSBvcmlnaW5hbCBhcnJheSB0
byBmaWx0ZXIgb3V0IHRoZSB2YWx1ZXMgc3BlY2lmaWVkLCBiYXNlZCBvbiBh
IGdpdmVuIGl0ZXJhdG9yIGZ1bmN0aW9uLgoKQ2hlY2sgaWYgdGhlIGxhc3Qg
YXJndW1lbnQgcHJvdmlkZWQgaW4gYSBmdW5jdGlvbi4KVXNlIGBBcnJheS5w
cm90b3R5cGUubWFwKClgIHRvIGFwcGx5IHRoZSBpdGVyYXRvciBmdW5jdGlv
biBgZm5gIHRvIGFsbCBhcnJheSBlbGVtZW50cy4KVXNlIGBBcnJheS5wcm90
b3R5cGUuZmlsdGVyKClgIGFuZCBgQXJyYXkucHJvdG90eXBlLmluY2x1ZGVz
KClgIHRvIHB1bGwgb3V0IHRoZSB2YWx1ZXMgdGhhdCBhcmUgbm90IG5lZWRl
ZC4KVXNlIGBBcnJheS5wcm90b3R5cGUubGVuZ3RoID0gMGAgdG8gbXV0YXRl
IHRoZSBwYXNzZWQgaW4gYW4gYXJyYXkgYnkgcmVzZXR0aW5nIGl0J3MgbGVu
Z3RoIHRvIHplcm8gYW5kIGBBcnJheS5wcm90b3R5cGUucHVzaCgpYCB0byBy
ZS1wb3B1bGF0ZSBpdCB3aXRoIG9ubHkgdGhlIHB1bGxlZCB2YWx1ZXMuCgpg
YGBqcwpjb25zdCBwdWxsQnkgPSAoYXJyLCAuLi5hcmdzKSA9PiB7CiAgY29u
c3QgbGVuZ3RoID0gYXJncy5sZW5ndGg7CiAgbGV0IGZuID0gbGVuZ3RoID4g
MSA/IGFyZ3NbbGVuZ3RoIC0gMV0gOiB1bmRlZmluZWQ7CiAgZm4gPSB0eXBl
b2YgZm4gPT0gJ2Z1bmN0aW9uJyA/IChhcmdzLnBvcCgpLCBmbikgOiB1bmRl
ZmluZWQ7CiAgbGV0IGFyZ1N0YXRlID0gKEFycmF5LmlzQXJyYXkoYXJnc1sw
XSkgPyBhcmdzWzBdIDogYXJncykubWFwKHZhbCA9PiBmbih2YWwpKTsKICBs
ZXQgcHVsbGVkID0gYXJyLmZpbHRlcigodiwgaSkgPT4gIWFyZ1N0YXRlLmlu
Y2x1ZGVzKGZuKHYpKSk7CiAgYXJyLmxlbmd0aCA9IDA7CiAgcHVsbGVkLmZv
ckVhY2godiA9PiBhcnIucHVzaCh2KSk7Cn07CmBgYAoKPGRldGFpbHM+Cjxz
dW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKdmFyIG15QXJyYXkg
PSBbeyB4OiAxIH0sIHsgeDogMiB9LCB7IHg6IDMgfSwgeyB4OiAxIH1dOwpw
dWxsQnkobXlBcnJheSwgW3sgeDogMSB9LCB7IHg6IDMgfV0sIG8gPT4gby54
KTsgLy8gbXlBcnJheSA9IFt7IHg6IDIgfV0KYGBgCjwvZGV0YWlscz4KCjxi
cj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgcmVkdWNlZEZp
bHRlcgoKRmlsdGVyIGFuIGFycmF5IG9mIG9iamVjdHMgYmFzZWQgb24gYSBj
b25kaXRpb24gd2hpbGUgYWxzbyBmaWx0ZXJpbmcgb3V0IHVuc3BlY2lmaWVk
IGtleXMuCgpVc2UgYEFycmF5LnByb3RvdHlwZS5maWx0ZXIoKWAgdG8gZmls
dGVyIHRoZSBhcnJheSBiYXNlZCBvbiB0aGUgcHJlZGljYXRlIGBmbmAgc28g
dGhhdCBpdCByZXR1cm5zIHRoZSBvYmplY3RzIGZvciB3aGljaCB0aGUgY29u
ZGl0aW9uIHJldHVybmVkIGEgdHJ1dGh5IHZhbHVlLgpPbiB0aGUgZmlsdGVy
ZWQgYXJyYXksIHVzZSBgQXJyYXkucHJvdG90eXBlLm1hcCgpYCB0byByZXR1
cm4gdGhlIG5ldyBvYmplY3QgdXNpbmcgYEFycmF5LnByb3RvdHlwZS5yZWR1
Y2UoKWAgdG8gZmlsdGVyIG91dCB0aGUga2V5cyB3aGljaCB3ZXJlIG5vdCBz
dXBwbGllZCBhcyB0aGUgYGtleXNgIGFyZ3VtZW50LgoKYGBganMKY29uc3Qg
cmVkdWNlZEZpbHRlciA9IChkYXRhLCBrZXlzLCBmbikgPT4KICBkYXRhLmZp
bHRlcihmbikubWFwKGVsID0+CiAgICBrZXlzLnJlZHVjZSgoYWNjLCBrZXkp
ID0+IHsKICAgICAgYWNjW2tleV0gPSBlbFtrZXldOwogICAgICByZXR1cm4g
YWNjOwogICAgfSwge30pCiAgKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+
RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpjb25zdCBkYXRhID0gWwogIHsK
ICAgIGlkOiAxLAogICAgbmFtZTogJ2pvaG4nLAogICAgYWdlOiAyNAogIH0s
CiAgewogICAgaWQ6IDIsCiAgICBuYW1lOiAnbWlrZScsCiAgICBhZ2U6IDUw
CiAgfQpdOwoKcmVkdWNlZEZpbHRlcihkYXRhLCBbJ2lkJywgJ25hbWUnXSwg
aXRlbSA9PiBpdGVtLmFnZSA+IDI0KTsgLy8gW3sgaWQ6IDIsIG5hbWU6ICdt
aWtlJ31dCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0o
I2NvbnRlbnRzKQoKIyMjIHJlZHVjZVN1Y2Nlc3NpdmUKCkFwcGxpZXMgYSBm
dW5jdGlvbiBhZ2FpbnN0IGFuIGFjY3VtdWxhdG9yIGFuZCBlYWNoIGVsZW1l
bnQgaW4gdGhlIGFycmF5IChmcm9tIGxlZnQgdG8gcmlnaHQpLCByZXR1cm5p
bmcgYW4gYXJyYXkgb2Ygc3VjY2Vzc2l2ZWx5IHJlZHVjZWQgdmFsdWVzLgoK
VXNlIGBBcnJheS5wcm90b3R5cGUucmVkdWNlKClgIHRvIGFwcGx5IHRoZSBn
aXZlbiBmdW5jdGlvbiB0byB0aGUgZ2l2ZW4gYXJyYXksIHN0b3JpbmcgZWFj
aCBuZXcgcmVzdWx0LgoKYGBganMKY29uc3QgcmVkdWNlU3VjY2Vzc2l2ZSA9
IChhcnIsIGZuLCBhY2MpID0+CiAgYXJyLnJlZHVjZSgocmVzLCB2YWwsIGks
IGFycikgPT4gKHJlcy5wdXNoKGZuKHJlcy5zbGljZSgtMSlbMF0sIHZhbCwg
aSwgYXJyKSksIHJlcyksIFthY2NdKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1h
cnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpyZWR1Y2VTdWNjZXNzaXZl
KFsxLCAyLCAzLCA0LCA1LCA2XSwgKGFjYywgdmFsKSA9PiBhY2MgKyB2YWws
IDApOyAvLyBbMCwgMSwgMywgNiwgMTAsIDE1LCAyMV0KYGBgCjwvZGV0YWls
cz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgcmVk
dWNlV2hpY2gKClJldHVybnMgdGhlIG1pbmltdW0vbWF4aW11bSB2YWx1ZSBv
ZiBhbiBhcnJheSwgYWZ0ZXIgYXBwbHlpbmcgdGhlIHByb3ZpZGVkIGZ1bmN0
aW9uIHRvIHNldCBjb21wYXJpbmcgcnVsZS4KClVzZSBgQXJyYXkucHJvdG90
eXBlLnJlZHVjZSgpYCBpbiBjb21iaW5hdGlvbiB3aXRoIHRoZSBgY29tcGFy
YXRvcmAgZnVuY3Rpb24gdG8gZ2V0IHRoZSBhcHByb3ByaWF0ZSBlbGVtZW50
IGluIHRoZSBhcnJheS4KWW91IGNhbiBvbWl0IHRoZSBzZWNvbmQgcGFyYW1l
dGVyLCBgY29tcGFyYXRvcmAsIHRvIHVzZSB0aGUgZGVmYXVsdCBvbmUgdGhh
dCByZXR1cm5zIHRoZSBtaW5pbXVtIGVsZW1lbnQgaW4gdGhlIGFycmF5LgoK
YGBganMKY29uc3QgcmVkdWNlV2hpY2ggPSAoYXJyLCBjb21wYXJhdG9yID0g
KGEsIGIpID0+IGEgLSBiKSA9PgogIGFyci5yZWR1Y2UoKGEsIGIpID0+IChj
b21wYXJhdG9yKGEsIGIpID49IDAgPyBiIDogYSkpOwpgYGAKCjxkZXRhaWxz
Pgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCnJlZHVjZVdo
aWNoKFsxLCAzLCAyXSk7IC8vIDEKcmVkdWNlV2hpY2goWzEsIDMsIDJdLCAo
YSwgYikgPT4gYiAtIGEpOyAvLyAzCnJlZHVjZVdoaWNoKAogIFt7IG5hbWU6
ICdUb20nLCBhZ2U6IDEyIH0sIHsgbmFtZTogJ0phY2snLCBhZ2U6IDE4IH0s
IHsgbmFtZTogJ0x1Y3knLCBhZ2U6IDkgfV0sCiAgKGEsIGIpID0+IGEuYWdl
IC0gYi5hZ2UKKTsgLy8ge25hbWU6ICJMdWN5IiwgYWdlOiA5fQpgYGAKPC9k
ZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMj
IyByZWplY3QKCkZpbHRlcnMgYW4gYXJyYXkncyB2YWx1ZXMgYmFzZWQgb24g
YSBwcmVkaWNhdGUgZnVuY3Rpb24sIHJldHVybmluZyBvbmx5IHZhbHVlcyBm
b3Igd2hpY2ggdGhlIHByZWRpY2F0ZSBmdW5jdGlvbiByZXR1cm5zIGB0cnVl
YC4KClVzZSBgQXJyYXkucHJvdG90eXBlLmZpbHRlcigpYCBpbiBjb21iaW5h
dGlvbiB3aXRoIHRoZSBwcmVkaWNhdGUgZnVuY3Rpb24sIGBwcmVkYCwgdG8g
cmV0dXJuIG9ubHkgdGhlIHZhbHVlcyBmb3Igd2hpY2ggYHByZWQoKWAgcmV0
dXJucyBgdHJ1ZWAuCgpgYGBqcwpjb25zdCByZWplY3QgPSAocHJlZCwgYXJy
YXkpID0+IGFycmF5LmZpbHRlcigoLi4uYXJncykgPT4gIXByZWQoLi4uYXJn
cykpOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFy
eT4KCmBgYGpzCnJlamVjdCh4ID0+IHggJSAyID09PSAwLCBbMSwgMiwgMywg
NCwgNV0pOyAvLyBbMSwgMywgNV0KcmVqZWN0KHdvcmQgPT4gd29yZC5sZW5n
dGggPiA0LCBbJ0FwcGxlJywgJ1BlYXInLCAnS2l3aScsICdCYW5hbmEnXSk7
IC8vIFsnUGVhcicsICdLaXdpJ10KYGBgCjwvZGV0YWlscz4KCjxicj5b4qyG
IEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgcmVtb3ZlCgpSZW1vdmVz
IGVsZW1lbnRzIGZyb20gYW4gYXJyYXkgZm9yIHdoaWNoIHRoZSBnaXZlbiBm
dW5jdGlvbiByZXR1cm5zIGBmYWxzZWAuCgpVc2UgYEFycmF5LnByb3RvdHlw
ZS5maWx0ZXIoKWAgdG8gZmluZCBhcnJheSBlbGVtZW50cyB0aGF0IHJldHVy
biB0cnV0aHkgdmFsdWVzIGFuZCBgQXJyYXkucHJvdG90eXBlLnJlZHVjZSgp
YCB0byByZW1vdmUgZWxlbWVudHMgdXNpbmcgYEFycmF5LnByb3RvdHlwZS5z
cGxpY2UoKWAuClRoZSBgZnVuY2AgaXMgaW52b2tlZCB3aXRoIHRocmVlIGFy
Z3VtZW50cyAoYHZhbHVlLCBpbmRleCwgYXJyYXlgKS4KCmBgYGpzCmNvbnN0
IHJlbW92ZSA9IChhcnIsIGZ1bmMpID0+CiAgQXJyYXkuaXNBcnJheShhcnIp
CiAgICA/IGFyci5maWx0ZXIoZnVuYykucmVkdWNlKChhY2MsIHZhbCkgPT4g
ewogICAgICAgIGFyci5zcGxpY2UoYXJyLmluZGV4T2YodmFsKSwgMSk7CiAg
ICAgICAgcmV0dXJuIGFjYy5jb25jYXQodmFsKTsKICAgICAgfSwgW10pCiAg
ICA6IFtdOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3Vt
bWFyeT4KCmBgYGpzCnJlbW92ZShbMSwgMiwgMywgNF0sIG4gPT4gbiAlIDIg
PT09IDApOyAvLyBbMiwgNF0KYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJh
Y2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgc2FtcGxlCgpSZXR1cm5zIGEg
cmFuZG9tIGVsZW1lbnQgZnJvbSBhbiBhcnJheS4KClVzZSBgTWF0aC5yYW5k
b20oKWAgdG8gZ2VuZXJhdGUgYSByYW5kb20gbnVtYmVyLCBtdWx0aXBseSBp
dCBieSBgbGVuZ3RoYCBhbmQgcm91bmQgaXQgb2ZmIHRvIHRoZSBuZWFyZXN0
IHdob2xlIG51bWJlciB1c2luZyBgTWF0aC5mbG9vcigpYC4KVGhpcyBtZXRo
b2QgYWxzbyB3b3JrcyB3aXRoIHN0cmluZ3MuCgpgYGBqcwpjb25zdCBzYW1w
bGUgPSBhcnIgPT4gYXJyW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGFy
ci5sZW5ndGgpXTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8
L3N1bW1hcnk+CgpgYGBqcwpzYW1wbGUoWzMsIDcsIDksIDExXSk7IC8vIDkK
YGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVu
dHMpCgojIyMgc2FtcGxlU2l6ZQoKR2V0cyBgbmAgcmFuZG9tIGVsZW1lbnRz
IGF0IHVuaXF1ZSBrZXlzIGZyb20gYGFycmF5YCB1cCB0byB0aGUgc2l6ZSBv
ZiBgYXJyYXlgLgoKU2h1ZmZsZSB0aGUgYXJyYXkgdXNpbmcgdGhlIFtGaXNo
ZXItWWF0ZXMgYWxnb3JpdGhtXShodHRwczovL2dpdGh1Yi5jb20vMzAtc2Vj
b25kcy8zMC1zZWNvbmRzLW9mLWNvZGUjc2h1ZmZsZSkuClVzZSBgQXJyYXku
cHJvdG90eXBlLnNsaWNlKClgIHRvIGdldCB0aGUgZmlyc3QgYG5gIGVsZW1l
bnRzLgpPbWl0IHRoZSBzZWNvbmQgYXJndW1lbnQsIGBuYCB0byBnZXQgb25s
eSBvbmUgZWxlbWVudCBhdCByYW5kb20gZnJvbSB0aGUgYXJyYXkuCgpgYGBq
cwpjb25zdCBzYW1wbGVTaXplID0gKFsuLi5hcnJdLCBuID0gMSkgPT4gewog
IGxldCBtID0gYXJyLmxlbmd0aDsKICB3aGlsZSAobSkgewogICAgY29uc3Qg
aSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIG0tLSk7CiAgICBbYXJy
W21dLCBhcnJbaV1dID0gW2FycltpXSwgYXJyW21dXTsKICB9CiAgcmV0dXJu
IGFyci5zbGljZSgwLCBuKTsKfTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+
RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpzYW1wbGVTaXplKFsxLCAyLCAz
XSwgMik7IC8vIFszLDFdCnNhbXBsZVNpemUoWzEsIDIsIDNdLCA0KTsgLy8g
WzIsMywxXQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3Bd
KCNjb250ZW50cykKCiMjIyBzaGFuawoKSGFzIHRoZSBzYW1lIGZ1bmN0aW9u
YWxpdHkgYXMgW2BBcnJheS5wcm90b3R5cGUuc3BsaWNlKClgXShodHRwczov
L2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2Ny
aXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9BcnJheS9zcGxpY2UpLCBi
dXQgcmV0dXJuaW5nIGEgbmV3IGFycmF5IGluc3RlYWQgb2YgbXV0YXRpbmcg
dGhlIG9yaWdpbmFsIGFycmF5LgoKVXNlIGBBcnJheS5wcm90b3R5cGUuc2xp
Y2UoKWAgYW5kIGBBcnJheS5wcm90b3R5cGUuY29uY2F0KClgIHRvIGdldCBh
IG5ldyBhcnJheSB3aXRoIHRoZSBuZXcgY29udGVudHMgYWZ0ZXIgcmVtb3Zp
bmcgZXhpc3RpbmcgZWxlbWVudHMgYW5kL29yIGFkZGluZyBuZXcgZWxlbWVu
dHMuCk9taXQgdGhlIHNlY29uZCBhcmd1bWVudCwgYGluZGV4YCwgdG8gc3Rh
cnQgYXQgYDBgLgpPbWl0IHRoZSB0aGlyZCBhcmd1bWVudCwgYGRlbENvdW50
YCwgdG8gcmVtb3ZlIGAwYCBlbGVtZW50cy4KT21pdCB0aGUgZm91cnRoIGFy
Z3VtZW50LCBgZWxlbWVudHNgLCBpbiBvcmRlciB0byBub3QgYWRkIGFueSBu
ZXcgZWxlbWVudHMuCgpgYGBqcwpjb25zdCBzaGFuayA9IChhcnIsIGluZGV4
ID0gMCwgZGVsQ291bnQgPSAwLCAuLi5lbGVtZW50cykgPT4KICBhcnIKICAg
IC5zbGljZSgwLCBpbmRleCkKICAgIC5jb25jYXQoZWxlbWVudHMpCiAgICAu
Y29uY2F0KGFyci5zbGljZShpbmRleCArIGRlbENvdW50KSk7CmBgYAoKPGRl
dGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKY29u
c3QgbmFtZXMgPSBbJ2FscGhhJywgJ2JyYXZvJywgJ2NoYXJsaWUnXTsKY29u
c3QgbmFtZXNBbmREZWx0YSA9IHNoYW5rKG5hbWVzLCAxLCAwLCAnZGVsdGEn
KTsgLy8gWyAnYWxwaGEnLCAnZGVsdGEnLCAnYnJhdm8nLCAnY2hhcmxpZScg
XQpjb25zdCBuYW1lc05vQnJhdm8gPSBzaGFuayhuYW1lcywgMSwgMSk7IC8v
IFsgJ2FscGhhJywgJ2NoYXJsaWUnIF0KY29uc29sZS5sb2cobmFtZXMpOyAv
LyBbJ2FscGhhJywgJ2JyYXZvJywgJ2NoYXJsaWUnXQpgYGAKPC9kZXRhaWxz
PgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBzaHVm
ZmxlCgpSYW5kb21pemVzIHRoZSBvcmRlciBvZiB0aGUgdmFsdWVzIG9mIGFu
IGFycmF5LCByZXR1cm5pbmcgYSBuZXcgYXJyYXkuCgpVc2VzIHRoZSBbRmlz
aGVyLVlhdGVzIGFsZ29yaXRobV0oaHR0cHM6Ly9naXRodWIuY29tLzMwLXNl
Y29uZHMvMzAtc2Vjb25kcy1vZi1jb2RlI3NodWZmbGUpIHRvIHJlb3JkZXIg
dGhlIGVsZW1lbnRzIG9mIHRoZSBhcnJheS4KCmBgYGpzCmNvbnN0IHNodWZm
bGUgPSAoWy4uLmFycl0pID0+IHsKICBsZXQgbSA9IGFyci5sZW5ndGg7CiAg
d2hpbGUgKG0pIHsKICAgIGNvbnN0IGkgPSBNYXRoLmZsb29yKE1hdGgucmFu
ZG9tKCkgKiBtLS0pOwogICAgW2FyclttXSwgYXJyW2ldXSA9IFthcnJbaV0s
IGFyclttXV07CiAgfQogIHJldHVybiBhcnI7Cn07CmBgYAoKPGRldGFpbHM+
CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKY29uc3QgZm9v
ID0gWzEsIDIsIDNdOwpzaHVmZmxlKGZvbyk7IC8vIFsyLCAzLCAxXSwgZm9v
ID0gWzEsIDIsIDNdCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRv
IHRvcF0oI2NvbnRlbnRzKQoKIyMjIHNpbWlsYXJpdHkKClJldHVybnMgYW4g
YXJyYXkgb2YgZWxlbWVudHMgdGhhdCBhcHBlYXIgaW4gYm90aCBhcnJheXMu
CgpVc2UgYEFycmF5LnByb3RvdHlwZS5maWx0ZXIoKWAgdG8gcmVtb3ZlIHZh
bHVlcyB0aGF0IGFyZSBub3QgcGFydCBvZiBgdmFsdWVzYCwgZGV0ZXJtaW5l
ZCB1c2luZyBgQXJyYXkucHJvdG90eXBlLmluY2x1ZGVzKClgLgoKYGBganMK
Y29uc3Qgc2ltaWxhcml0eSA9IChhcnIsIHZhbHVlcykgPT4gYXJyLmZpbHRl
cih2ID0+IHZhbHVlcy5pbmNsdWRlcyh2KSk7CmBgYAoKPGRldGFpbHM+Cjxz
dW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKc2ltaWxhcml0eShb
MSwgMiwgM10sIFsxLCAyLCA0XSk7IC8vIFsxLCAyXQpgYGAKPC9kZXRhaWxz
PgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBzb3J0
ZWRJbmRleAoKUmV0dXJucyB0aGUgbG93ZXN0IGluZGV4IGF0IHdoaWNoIHZh
bHVlIHNob3VsZCBiZSBpbnNlcnRlZCBpbnRvIGFycmF5IGluIG9yZGVyIHRv
IG1haW50YWluIGl0cyBzb3J0IG9yZGVyLgoKQ2hlY2sgaWYgdGhlIGFycmF5
IGlzIHNvcnRlZCBpbiBkZXNjZW5kaW5nIG9yZGVyIChsb29zZWx5KS4KVXNl
IGBBcnJheS5wcm90b3R5cGUuZmluZEluZGV4KClgIHRvIGZpbmQgdGhlIGFw
cHJvcHJpYXRlIGluZGV4IHdoZXJlIHRoZSBlbGVtZW50IHNob3VsZCBiZSBp
bnNlcnRlZC4KCmBgYGpzCmNvbnN0IHNvcnRlZEluZGV4ID0gKGFyciwgbikg
PT4gewogIGNvbnN0IGlzRGVzY2VuZGluZyA9IGFyclswXSA+IGFyclthcnIu
bGVuZ3RoIC0gMV07CiAgY29uc3QgaW5kZXggPSBhcnIuZmluZEluZGV4KGVs
ID0+IChpc0Rlc2NlbmRpbmcgPyBuID49IGVsIDogbiA8PSBlbCkpOwogIHJl
dHVybiBpbmRleCA9PT0gLTEgPyBhcnIubGVuZ3RoIDogaW5kZXg7Cn07CmBg
YAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBg
anMKc29ydGVkSW5kZXgoWzUsIDMsIDIsIDFdLCA0KTsgLy8gMQpzb3J0ZWRJ
bmRleChbMzAsIDUwXSwgNDApOyAvLyAxCmBgYAo8L2RldGFpbHM+Cgo8YnI+
W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHNvcnRlZEluZGV4
QnkKClJldHVybnMgdGhlIGxvd2VzdCBpbmRleCBhdCB3aGljaCB2YWx1ZSBz
aG91bGQgYmUgaW5zZXJ0ZWQgaW50byBhcnJheSBpbiBvcmRlciB0byBtYWlu
dGFpbiBpdHMgc29ydCBvcmRlciwgYmFzZWQgb24gYSBwcm92aWRlZCBpdGVy
YXRvciBmdW5jdGlvbi4KCkNoZWNrIGlmIHRoZSBhcnJheSBpcyBzb3J0ZWQg
aW4gZGVzY2VuZGluZyBvcmRlciAobG9vc2VseSkuClVzZSBgQXJyYXkucHJv
dG90eXBlLmZpbmRJbmRleCgpYCB0byBmaW5kIHRoZSBhcHByb3ByaWF0ZSBp
bmRleCB3aGVyZSB0aGUgZWxlbWVudCBzaG91bGQgYmUgaW5zZXJ0ZWQsIGJh
c2VkIG9uIHRoZSBpdGVyYXRvciBmdW5jdGlvbiBgZm5gLgoKYGBganMKY29u
c3Qgc29ydGVkSW5kZXhCeSA9IChhcnIsIG4sIGZuKSA9PiB7CiAgY29uc3Qg
aXNEZXNjZW5kaW5nID0gZm4oYXJyWzBdKSA+IGZuKGFyclthcnIubGVuZ3Ro
IC0gMV0pOwogIGNvbnN0IHZhbCA9IGZuKG4pOwogIGNvbnN0IGluZGV4ID0g
YXJyLmZpbmRJbmRleChlbCA9PiAoaXNEZXNjZW5kaW5nID8gdmFsID49IGZu
KGVsKSA6IHZhbCA8PSBmbihlbCkpKTsKICByZXR1cm4gaW5kZXggPT09IC0x
ID8gYXJyLmxlbmd0aCA6IGluZGV4Owp9OwpgYGAKCjxkZXRhaWxzPgo8c3Vt
bWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCnNvcnRlZEluZGV4Qnko
W3sgeDogNCB9LCB7IHg6IDUgfV0sIHsgeDogNCB9LCBvID0+IG8ueCk7IC8v
IDAKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29u
dGVudHMpCgojIyMgc29ydGVkTGFzdEluZGV4CgpSZXR1cm5zIHRoZSBoaWdo
ZXN0IGluZGV4IGF0IHdoaWNoIHZhbHVlIHNob3VsZCBiZSBpbnNlcnRlZCBp
bnRvIGFycmF5IGluIG9yZGVyIHRvIG1haW50YWluIGl0cyBzb3J0IG9yZGVy
LgoKQ2hlY2sgaWYgdGhlIGFycmF5IGlzIHNvcnRlZCBpbiBkZXNjZW5kaW5n
IG9yZGVyIChsb29zZWx5KS4KVXNlIGBBcnJheS5wcm90b3R5cGUucmV2ZXJz
ZSgpYCBhbmQgYEFycmF5LnByb3RvdHlwZS5maW5kSW5kZXgoKWAgdG8gZmlu
ZCB0aGUgYXBwcm9wcmlhdGUgbGFzdCBpbmRleCB3aGVyZSB0aGUgZWxlbWVu
dCBzaG91bGQgYmUgaW5zZXJ0ZWQuCgpgYGBqcwpjb25zdCBzb3J0ZWRMYXN0
SW5kZXggPSAoYXJyLCBuKSA9PiB7CiAgY29uc3QgaXNEZXNjZW5kaW5nID0g
YXJyWzBdID4gYXJyW2Fyci5sZW5ndGggLSAxXTsKICBjb25zdCBpbmRleCA9
IGFyci5yZXZlcnNlKCkuZmluZEluZGV4KGVsID0+IChpc0Rlc2NlbmRpbmcg
PyBuIDw9IGVsIDogbiA+PSBlbCkpOwogIHJldHVybiBpbmRleCA9PT0gLTEg
PyAwIDogYXJyLmxlbmd0aCAtIGluZGV4Owp9OwpgYGAKCjxkZXRhaWxzPgo8
c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCnNvcnRlZExhc3RJ
bmRleChbMTAsIDIwLCAzMCwgMzAsIDQwXSwgMzApOyAvLyA0CmBgYAo8L2Rl
dGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMj
IHNvcnRlZExhc3RJbmRleEJ5CgpSZXR1cm5zIHRoZSBoaWdoZXN0IGluZGV4
IGF0IHdoaWNoIHZhbHVlIHNob3VsZCBiZSBpbnNlcnRlZCBpbnRvIGFycmF5
IGluIG9yZGVyIHRvIG1haW50YWluIGl0cyBzb3J0IG9yZGVyLCBiYXNlZCBv
biBhIHByb3ZpZGVkIGl0ZXJhdG9yIGZ1bmN0aW9uLgoKQ2hlY2sgaWYgdGhl
IGFycmF5IGlzIHNvcnRlZCBpbiBkZXNjZW5kaW5nIG9yZGVyIChsb29zZWx5
KS4KVXNlIGBBcnJheS5wcm90b3R5cGUubWFwKClgIHRvIGFwcGx5IHRoZSBp
dGVyYXRvciBmdW5jdGlvbiB0byBhbGwgZWxlbWVudHMgb2YgdGhlIGFycmF5
LgpVc2UgYEFycmF5LnByb3RvdHlwZS5yZXZlcnNlKClgIGFuZCBgQXJyYXku
cHJvdG90eXBlLmZpbmRJbmRleCgpYCB0byBmaW5kIHRoZSBhcHByb3ByaWF0
ZSBsYXN0IGluZGV4IHdoZXJlIHRoZSBlbGVtZW50IHNob3VsZCBiZSBpbnNl
cnRlZCwgYmFzZWQgb24gdGhlIHByb3ZpZGVkIGl0ZXJhdG9yIGZ1bmN0aW9u
LgoKYGBganMKY29uc3Qgc29ydGVkTGFzdEluZGV4QnkgPSAoYXJyLCBuLCBm
bikgPT4gewogIGNvbnN0IGlzRGVzY2VuZGluZyA9IGZuKGFyclswXSkgPiBm
bihhcnJbYXJyLmxlbmd0aCAtIDFdKTsKICBjb25zdCB2YWwgPSBmbihuKTsK
ICBjb25zdCBpbmRleCA9IGFycgogICAgLm1hcChmbikKICAgIC5yZXZlcnNl
KCkKICAgIC5maW5kSW5kZXgoZWwgPT4gKGlzRGVzY2VuZGluZyA/IHZhbCA8
PSBlbCA6IHZhbCA+PSBlbCkpOwogIHJldHVybiBpbmRleCA9PT0gLTEgPyAw
IDogYXJyLmxlbmd0aCAtIGluZGV4Owp9OwpgYGAKCjxkZXRhaWxzPgo8c3Vt
bWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCnNvcnRlZExhc3RJbmRl
eEJ5KFt7IHg6IDQgfSwgeyB4OiA1IH1dLCB7IHg6IDQgfSwgbyA9PiBvLngp
OyAvLyAxCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0o
I2NvbnRlbnRzKQoKIyMjIHN0YWJsZVNvcnQgIVthZHZhbmNlZF0oL2FkdmFu
Y2VkLnN2ZykKClBlcmZvcm1zIHN0YWJsZSBzb3J0aW5nIG9mIGFuIGFycmF5
LCBwcmVzZXJ2aW5nIHRoZSBpbml0aWFsIGluZGV4ZXMgb2YgaXRlbXMgd2hl
biB0aGVpciB2YWx1ZXMgYXJlIHRoZSBzYW1lLgpEb2VzIG5vdCBtdXRhdGUg
dGhlIG9yaWdpbmFsIGFycmF5LCBidXQgcmV0dXJucyBhIG5ldyBhcnJheSBp
bnN0ZWFkLgoKVXNlIGBBcnJheS5wcm90b3R5cGUubWFwKClgIHRvIHBhaXIg
ZWFjaCBlbGVtZW50IG9mIHRoZSBpbnB1dCBhcnJheSB3aXRoIGl0cyBjb3Jy
ZXNwb25kaW5nIGluZGV4LgpVc2UgYEFycmF5LnByb3RvdHlwZS5zb3J0KClg
IGFuZCBhIGBjb21wYXJlYCBmdW5jdGlvbiB0byBzb3J0IHRoZSBsaXN0LCBw
cmVzZXJ2aW5nIHRoZWlyIGluaXRpYWwgb3JkZXIgaWYgdGhlIGl0ZW1zIGNv
bXBhcmVkIGFyZSBlcXVhbC4KVXNlIGBBcnJheS5wcm90b3R5cGUubWFwKClg
IHRvIGNvbnZlcnQgYmFjayB0byB0aGUgaW5pdGlhbCBhcnJheSBpdGVtcy4K
CmBgYGpzCmNvbnN0IHN0YWJsZVNvcnQgPSAoYXJyLCBjb21wYXJlKSA9Pgog
IGFycgogICAgLm1hcCgoaXRlbSwgaW5kZXgpID0+ICh7IGl0ZW0sIGluZGV4
IH0pKQogICAgLnNvcnQoKGEsIGIpID0+IGNvbXBhcmUoYS5pdGVtLCBiLml0
ZW0pIHx8IGEuaW5kZXggLSBiLmluZGV4KQogICAgLm1hcCgoeyBpdGVtIH0p
ID0+IGl0ZW0pOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwv
c3VtbWFyeT4KCmBgYGpzCmNvbnN0IGFyciA9IFswLCAxLCAyLCAzLCA0LCA1
LCA2LCA3LCA4LCA5LCAxMF07CmNvbnN0IHN0YWJsZSA9IHN0YWJsZVNvcnQo
YXJyLCAoKSA9PiAwKTsgLy8gWzAsIDEsIDIsIDMsIDQsIDUsIDYsIDcsIDgs
IDksIDEwXQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3Bd
KCNjb250ZW50cykKCiMjIyBzeW1tZXRyaWNEaWZmZXJlbmNlCgpSZXR1cm5z
IHRoZSBzeW1tZXRyaWMgZGlmZmVyZW5jZSBiZXR3ZWVuIHR3byBhcnJheXMs
IHdpdGhvdXQgZmlsdGVyaW5nIG91dCBkdXBsaWNhdGUgdmFsdWVzLgoKQ3Jl
YXRlIGEgYFNldGAgZnJvbSBlYWNoIGFycmF5LCB0aGVuIHVzZSBgQXJyYXku
cHJvdG90eXBlLmZpbHRlcigpYCBvbiBlYWNoIG9mIHRoZW0gdG8gb25seSBr
ZWVwIHZhbHVlcyBub3QgY29udGFpbmVkIGluIHRoZSBvdGhlci4KCmBgYGpz
CmNvbnN0IHN5bW1ldHJpY0RpZmZlcmVuY2UgPSAoYSwgYikgPT4gewogIGNv
bnN0IHNBID0gbmV3IFNldChhKSwKICAgIHNCID0gbmV3IFNldChiKTsKICBy
ZXR1cm4gWy4uLmEuZmlsdGVyKHggPT4gIXNCLmhhcyh4KSksIC4uLmIuZmls
dGVyKHggPT4gIXNBLmhhcyh4KSldOwp9OwpgYGAKCjxkZXRhaWxzPgo8c3Vt
bWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCnN5bW1ldHJpY0RpZmZl
cmVuY2UoWzEsIDIsIDNdLCBbMSwgMiwgNF0pOyAvLyBbMywgNF0Kc3ltbWV0
cmljRGlmZmVyZW5jZShbMSwgMiwgMl0sIFsxLCAzLCAxXSk7IC8vIFsyLCAy
LCAzXQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNj
b250ZW50cykKCiMjIyBzeW1tZXRyaWNEaWZmZXJlbmNlQnkKClJldHVybnMg
dGhlIHN5bW1ldHJpYyBkaWZmZXJlbmNlIGJldHdlZW4gdHdvIGFycmF5cywg
YWZ0ZXIgYXBwbHlpbmcgdGhlIHByb3ZpZGVkIGZ1bmN0aW9uIHRvIGVhY2gg
YXJyYXkgZWxlbWVudCBvZiBib3RoLgoKQ3JlYXRlIGEgYFNldGAgYnkgYXBw
bHlpbmcgYGZuYCB0byBlYWNoIGFycmF5J3MgZWxlbWVudHMsIHRoZW4gdXNl
IGBBcnJheS5wcm90b3R5cGUuZmlsdGVyKClgIG9uIGVhY2ggb2YgdGhlbSB0
byBvbmx5IGtlZXAgdmFsdWVzIG5vdCBjb250YWluZWQgaW4gdGhlIG90aGVy
LgoKYGBganMKY29uc3Qgc3ltbWV0cmljRGlmZmVyZW5jZUJ5ID0gKGEsIGIs
IGZuKSA9PiB7CiAgY29uc3Qgc0EgPSBuZXcgU2V0KGEubWFwKHYgPT4gZm4o
dikpKSwKICAgIHNCID0gbmV3IFNldChiLm1hcCh2ID0+IGZuKHYpKSk7CiAg
cmV0dXJuIFsuLi5hLmZpbHRlcih4ID0+ICFzQi5oYXMoZm4oeCkpKSwgLi4u
Yi5maWx0ZXIoeCA9PiAhc0EuaGFzKGZuKHgpKSldOwp9OwpgYGAKCjxkZXRh
aWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCnN5bW1l
dHJpY0RpZmZlcmVuY2VCeShbMi4xLCAxLjJdLCBbMi4zLCAzLjRdLCBNYXRo
LmZsb29yKTsgLy8gWyAxLjIsIDMuNCBdCmBgYAo8L2RldGFpbHM+Cgo8YnI+
W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHN5bW1ldHJpY0Rp
ZmZlcmVuY2VXaXRoCgpSZXR1cm5zIHRoZSBzeW1tZXRyaWMgZGlmZmVyZW5j
ZSBiZXR3ZWVuIHR3byBhcnJheXMsIHVzaW5nIGEgcHJvdmlkZWQgZnVuY3Rp
b24gYXMgYSBjb21wYXJhdG9yLgoKVXNlIGBBcnJheS5wcm90b3R5cGUuZmls
dGVyKClgIGFuZCBgQXJyYXkucHJvdG90eXBlLmZpbmRJbmRleCgpYCB0byBm
aW5kIHRoZSBhcHByb3ByaWF0ZSB2YWx1ZXMuCgpgYGBqcwpjb25zdCBzeW1t
ZXRyaWNEaWZmZXJlbmNlV2l0aCA9IChhcnIsIHZhbCwgY29tcCkgPT4gWwog
IC4uLmFyci5maWx0ZXIoYSA9PiB2YWwuZmluZEluZGV4KGIgPT4gY29tcChh
LCBiKSkgPT09IC0xKSwKICAuLi52YWwuZmlsdGVyKGEgPT4gYXJyLmZpbmRJ
bmRleChiID0+IGNvbXAoYSwgYikpID09PSAtMSkKXTsKYGBgCgo8ZGV0YWls
cz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpzeW1tZXRy
aWNEaWZmZXJlbmNlV2l0aCgKICBbMSwgMS4yLCAxLjUsIDMsIDBdLAogIFsx
LjksIDMsIDAsIDMuOV0sCiAgKGEsIGIpID0+IE1hdGgucm91bmQoYSkgPT09
IE1hdGgucm91bmQoYikKKTsgLy8gWzEsIDEuMiwgMy45XQpgYGAKPC9kZXRh
aWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyB0
YWlsCgpSZXR1cm5zIGFsbCBlbGVtZW50cyBpbiBhbiBhcnJheSBleGNlcHQg
Zm9yIHRoZSBmaXJzdCBvbmUuCgpSZXR1cm4gYEFycmF5LnByb3RvdHlwZS5z
bGljZSgxKWAgaWYgdGhlIGFycmF5J3MgYGxlbmd0aGAgaXMgbW9yZSB0aGFu
IGAxYCwgb3RoZXJ3aXNlLCByZXR1cm4gdGhlIHdob2xlIGFycmF5LgoKYGBg
anMKY29uc3QgdGFpbCA9IGFyciA9PiAoYXJyLmxlbmd0aCA+IDEgPyBhcnIu
c2xpY2UoMSkgOiBhcnIpOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFt
cGxlczwvc3VtbWFyeT4KCmBgYGpzCnRhaWwoWzEsIDIsIDNdKTsgLy8gWzIs
M10KdGFpbChbMV0pOyAvLyBbMV0KYGBgCjwvZGV0YWlscz4KCjxicj5b4qyG
IEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgdGFrZQoKUmV0dXJucyBh
biBhcnJheSB3aXRoIG4gZWxlbWVudHMgcmVtb3ZlZCBmcm9tIHRoZSBiZWdp
bm5pbmcuCgpVc2UgYEFycmF5LnByb3RvdHlwZS5zbGljZSgpYCB0byBjcmVh
dGUgYSBzbGljZSBvZiB0aGUgYXJyYXkgd2l0aCBgbmAgZWxlbWVudHMgdGFr
ZW4gZnJvbSB0aGUgYmVnaW5uaW5nLgoKYGBganMKY29uc3QgdGFrZSA9IChh
cnIsIG4gPSAxKSA9PiBhcnIuc2xpY2UoMCwgbik7CmBgYAoKPGRldGFpbHM+
CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKdGFrZShbMSwg
MiwgM10sIDUpOyAvLyBbMSwgMiwgM10KdGFrZShbMSwgMiwgM10sIDApOyAv
LyBbXQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNj
b250ZW50cykKCiMjIyB0YWtlUmlnaHQKClJldHVybnMgYW4gYXJyYXkgd2l0
aCBuIGVsZW1lbnRzIHJlbW92ZWQgZnJvbSB0aGUgZW5kLgoKVXNlIGBBcnJh
eS5wcm90b3R5cGUuc2xpY2UoKWAgdG8gY3JlYXRlIGEgc2xpY2Ugb2YgdGhl
IGFycmF5IHdpdGggYG5gIGVsZW1lbnRzIHRha2VuIGZyb20gdGhlIGVuZC4K
CmBgYGpzCmNvbnN0IHRha2VSaWdodCA9IChhcnIsIG4gPSAxKSA9PiBhcnIu
c2xpY2UoYXJyLmxlbmd0aCAtIG4sIGFyci5sZW5ndGgpOwpgYGAKCjxkZXRh
aWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCnRha2VS
aWdodChbMSwgMiwgM10sIDIpOyAvLyBbIDIsIDMgXQp0YWtlUmlnaHQoWzEs
IDIsIDNdKTsgLy8gWzNdCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNr
IHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHRha2VSaWdodFdoaWxlCgpSZW1v
dmVzIGVsZW1lbnRzIGZyb20gdGhlIGVuZCBvZiBhbiBhcnJheSB1bnRpbCB0
aGUgcGFzc2VkIGZ1bmN0aW9uIHJldHVybnMgYHRydWVgLiBSZXR1cm5zIHRo
ZSByZW1vdmVkIGVsZW1lbnRzLgoKTG9vcCB0aHJvdWdoIHRoZSBhcnJheSwg
dXNpbmcgYSBgQXJyYXkucHJvdG90eXBlLnJlZHVjZVJpZ2h0KClgIGFuZCBh
Y2N1bXVsYXRpbmcgZWxlbWVudHMgd2hpbGUgdGhlIGZ1bmN0aW9uIHJldHVy
bnMgZmFsc3kgdmFsdWUuCgpgYGBqcwpjb25zdCB0YWtlUmlnaHRXaGlsZSA9
IChhcnIsIGZ1bmMpID0+CiAgYXJyLnJlZHVjZVJpZ2h0KChhY2MsIGVsKSA9
PiAoZnVuYyhlbCkgPyBhY2MgOiBbZWwsIC4uLmFjY10pLCBbXSk7CmBgYAoK
PGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMK
dGFrZVJpZ2h0V2hpbGUoWzEsIDIsIDMsIDRdLCBuID0+IG4gPCAzKTsgLy8g
WzMsIDRdCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0o
I2NvbnRlbnRzKQoKIyMjIHRha2VXaGlsZQoKUmVtb3ZlcyBlbGVtZW50cyBp
biBhbiBhcnJheSB1bnRpbCB0aGUgcGFzc2VkIGZ1bmN0aW9uIHJldHVybnMg
YHRydWVgLiBSZXR1cm5zIHRoZSByZW1vdmVkIGVsZW1lbnRzLgoKTG9vcCB0
aHJvdWdoIHRoZSBhcnJheSwgdXNpbmcgYSBgZm9yLi4ub2ZgIGxvb3Agb3Zl
ciBgQXJyYXkucHJvdG90eXBlLmVudHJpZXMoKWAgdW50aWwgdGhlIHJldHVy
bmVkIHZhbHVlIGZyb20gdGhlIGZ1bmN0aW9uIGlzIGB0cnVlYC4KUmV0dXJu
IHRoZSByZW1vdmVkIGVsZW1lbnRzLCB1c2luZyBgQXJyYXkucHJvdG90eXBl
LnNsaWNlKClgLgoKYGBganMKY29uc3QgdGFrZVdoaWxlID0gKGFyciwgZnVu
YykgPT4gewogIGZvciAoY29uc3QgW2ksIHZhbF0gb2YgYXJyLmVudHJpZXMo
KSkgaWYgKGZ1bmModmFsKSkgcmV0dXJuIGFyci5zbGljZSgwLCBpKTsKICBy
ZXR1cm4gYXJyOwp9OwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxl
czwvc3VtbWFyeT4KCmBgYGpzCnRha2VXaGlsZShbMSwgMiwgMywgNF0sIG4g
PT4gbiA+PSAzKTsgLy8gWzEsIDJdCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+Ks
hiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHRvSGFzaAoKUmVkdWNl
cyBhIGdpdmVuIEFycmF5LWxpa2UgaW50byBhIHZhbHVlIGhhc2ggKGtleWVk
IGRhdGEgc3RvcmUpLgoKR2l2ZW4gYW4gSXRlcmFibGUgb3IgQXJyYXktbGlr
ZSBzdHJ1Y3R1cmUsIGNhbGwgYEFycmF5LnByb3RvdHlwZS5yZWR1Y2UuY2Fs
bCgpYCBvbiB0aGUgcHJvdmlkZWQgb2JqZWN0IHRvIHN0ZXAgb3ZlciBpdCBh
bmQgcmV0dXJuIGFuIE9iamVjdCwga2V5ZWQgYnkgdGhlIHJlZmVyZW5jZSB2
YWx1ZS4KCmBgYGpzCmNvbnN0IHRvSGFzaCA9IChvYmplY3QsIGtleSkgPT4K
ICBBcnJheS5wcm90b3R5cGUucmVkdWNlLmNhbGwoCiAgICBvYmplY3QsCiAg
ICAoYWNjLCBkYXRhLCBpbmRleCkgPT4gKChhY2NbIWtleSA/IGluZGV4IDog
ZGF0YVtrZXldXSA9IGRhdGEpLCBhY2MpLAogICAge30KICApOwpgYGAKCjxk
ZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCnRv
SGFzaChbNCwgMywgMiwgMV0pOyAvLyB7IDA6IDQsIDE6IDMsIDI6IDIsIDM6
IDEgfQp0b0hhc2goW3sgYTogJ2xhYmVsJyB9XSwgJ2EnKTsgLy8geyBsYWJl
bDogeyBhOiAnbGFiZWwnIH0gfQovLyBBIG1vcmUgaW4gZGVwdGggZXhhbXBs
ZToKbGV0IHVzZXJzID0gW3sgaWQ6IDEsIGZpcnN0OiAnSm9uJyB9LCB7IGlk
OiAyLCBmaXJzdDogJ0pvZScgfSwgeyBpZDogMywgZmlyc3Q6ICdNb2UnIH1d
OwpsZXQgbWFuYWdlcnMgPSBbeyBtYW5hZ2VyOiAxLCBlbXBsb3llZXM6IFsy
LCAzXSB9XTsKLy8gV2UgdXNlIGZ1bmN0aW9uIGhlcmUgYmVjYXVzZSB3ZSB3
YW50IGEgYmluZGFibGUgcmVmZXJlbmNlLCBidXQgYSBjbG9zdXJlIHJlZmVy
ZW5jaW5nIHRoZSBoYXNoIHdvdWxkIHdvcmssIHRvby4KbWFuYWdlcnMuZm9y
RWFjaCgKICBtYW5hZ2VyID0+CiAgICAobWFuYWdlci5lbXBsb3llZXMgPSBt
YW5hZ2VyLmVtcGxveWVlcy5tYXAoZnVuY3Rpb24oaWQpIHsKICAgICAgcmV0
dXJuIHRoaXNbaWRdOwogICAgfSwgdG9IYXNoKHVzZXJzLCAnaWQnKSkpCik7
Cm1hbmFnZXJzOyAvLyBbIHsgbWFuYWdlcjoxLCBlbXBsb3llZXM6IFsgeyBp
ZDogMiwgZmlyc3Q6ICJKb2UiIH0sIHsgaWQ6IDMsIGZpcnN0OiAiTW9lIiB9
IF0gfSBdCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0o
I2NvbnRlbnRzKQoKIyMjIHVuaW9uCgpSZXR1cm5zIGV2ZXJ5IGVsZW1lbnQg
dGhhdCBleGlzdHMgaW4gYW55IG9mIHRoZSB0d28gYXJyYXlzIG9uY2UuCgpD
cmVhdGUgYSBgU2V0YCB3aXRoIGFsbCB2YWx1ZXMgb2YgYGFgIGFuZCBgYmAg
YW5kIGNvbnZlcnQgdG8gYW4gYXJyYXkuCgpgYGBqcwpjb25zdCB1bmlvbiA9
IChhLCBiKSA9PiBBcnJheS5mcm9tKG5ldyBTZXQoWy4uLmEsIC4uLmJdKSk7
CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoK
YGBganMKdW5pb24oWzEsIDIsIDNdLCBbNCwgMywgMl0pOyAvLyBbMSwyLDMs
NF0KYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29u
dGVudHMpCgojIyMgdW5pb25CeQoKUmV0dXJucyBldmVyeSBlbGVtZW50IHRo
YXQgZXhpc3RzIGluIGFueSBvZiB0aGUgdHdvIGFycmF5cyBvbmNlLCBhZnRl
ciBhcHBseWluZyB0aGUgcHJvdmlkZWQgZnVuY3Rpb24gdG8gZWFjaCBhcnJh
eSBlbGVtZW50IG9mIGJvdGguCgpDcmVhdGUgYSBgU2V0YCBieSBhcHBseWlu
ZyBhbGwgYGZuYCB0byBhbGwgdmFsdWVzIG9mIGBhYC4KQ3JlYXRlIGEgYFNl
dGAgZnJvbSBgYWAgYW5kIGFsbCBlbGVtZW50cyBpbiBgYmAgd2hvc2UgdmFs
dWUsIGFmdGVyIGFwcGx5aW5nIGBmbmAgZG9lcyBub3QgbWF0Y2ggYSB2YWx1
ZSBpbiB0aGUgcHJldmlvdXNseSBjcmVhdGVkIHNldC4KUmV0dXJuIHRoZSBs
YXN0IHNldCBjb252ZXJ0ZWQgdG8gYW4gYXJyYXkuCgpgYGBqcwpjb25zdCB1
bmlvbkJ5ID0gKGEsIGIsIGZuKSA9PiB7CiAgY29uc3QgcyA9IG5ldyBTZXQo
YS5tYXAoZm4pKTsKICByZXR1cm4gQXJyYXkuZnJvbShuZXcgU2V0KFsuLi5h
LCAuLi5iLmZpbHRlcih4ID0+ICFzLmhhcyhmbih4KSkpXSkpOwp9OwpgYGAK
CjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpz
CnVuaW9uQnkoWzIuMV0sIFsxLjIsIDIuM10sIE1hdGguZmxvb3IpOyAvLyBb
Mi4xLCAxLjJdCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRv
cF0oI2NvbnRlbnRzKQoKIyMjIHVuaW9uV2l0aAoKUmV0dXJucyBldmVyeSBl
bGVtZW50IHRoYXQgZXhpc3RzIGluIGFueSBvZiB0aGUgdHdvIGFycmF5cyBv
bmNlLCB1c2luZyBhIHByb3ZpZGVkIGNvbXBhcmF0b3IgZnVuY3Rpb24uCgpD
cmVhdGUgYSBgU2V0YCB3aXRoIGFsbCB2YWx1ZXMgb2YgYGFgIGFuZCB2YWx1
ZXMgaW4gYGJgIGZvciB3aGljaCB0aGUgY29tcGFyYXRvciBmaW5kcyBubyBt
YXRjaGVzIGluIGBhYCwgdXNpbmcgYEFycmF5LnByb3RvdHlwZS5maW5kSW5k
ZXgoKWAuCgpgYGBqcwpjb25zdCB1bmlvbldpdGggPSAoYSwgYiwgY29tcCkg
PT4KICBBcnJheS5mcm9tKG5ldyBTZXQoWy4uLmEsIC4uLmIuZmlsdGVyKHgg
PT4gYS5maW5kSW5kZXgoeSA9PiBjb21wKHgsIHkpKSA9PT0gLTEpXSkpOwpg
YGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBg
YGpzCnVuaW9uV2l0aChbMSwgMS4yLCAxLjUsIDMsIDBdLCBbMS45LCAzLCAw
LCAzLjldLCAoYSwgYikgPT4gTWF0aC5yb3VuZChhKSA9PT0gTWF0aC5yb3Vu
ZChiKSk7IC8vIFsxLCAxLjIsIDEuNSwgMywgMCwgMy45XQpgYGAKPC9kZXRh
aWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyB1
bmlxdWVFbGVtZW50cwoKUmV0dXJucyBhbGwgdW5pcXVlIHZhbHVlcyBvZiBh
biBhcnJheS4KClVzZSBFUzYgYFNldGAgYW5kIHRoZSBgLi4ucmVzdGAgb3Bl
cmF0b3IgdG8gZGlzY2FyZCBhbGwgZHVwbGljYXRlZCB2YWx1ZXMuCgpgYGBq
cwpjb25zdCB1bmlxdWVFbGVtZW50cyA9IGFyciA9PiBbLi4ubmV3IFNldChh
cnIpXTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1h
cnk+CgpgYGBqcwp1bmlxdWVFbGVtZW50cyhbMSwgMiwgMiwgMywgNCwgNCwg
NV0pOyAvLyBbMSwgMiwgMywgNCwgNV0KYGBgCjwvZGV0YWlscz4KCjxicj5b
4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgdW5pcXVlRWxlbWVu
dHNCeQoKUmV0dXJucyBhbGwgdW5pcXVlIHZhbHVlcyBvZiBhbiBhcnJheSwg
YmFzZWQgb24gYSBwcm92aWRlZCBjb21wYXJhdG9yIGZ1bmN0aW9uLgoKVXNl
IGBBcnJheS5wcm90b3R5cGUucmVkdWNlKClgIGFuZCBgQXJyYXkucHJvdG90
eXBlLnNvbWUoKWAgZm9yIGFuIGFycmF5IGNvbnRhaW5pbmcgb25seSB0aGUg
Zmlyc3QgdW5pcXVlIG9jY3VycmVuY2Ugb2YgZWFjaCB2YWx1ZSwgYmFzZWQg
b24gdGhlIGNvbXBhcmF0b3IgZnVuY3Rpb24sIGBmbmAuClRoZSBjb21wYXJh
dG9yIGZ1bmN0aW9uIHRha2VzIHR3byBhcmd1bWVudHM6IHRoZSB2YWx1ZXMg
b2YgdGhlIHR3byBlbGVtZW50cyBiZWluZyBjb21wYXJlZC4KCmBgYGpzCmNv
bnN0IHVuaXF1ZUVsZW1lbnRzQnkgPSAoYXJyLCBmbikgPT4KICBhcnIucmVk
dWNlKChhY2MsIHYpID0+IHsKICAgIGlmICghYWNjLnNvbWUoeCA9PiBmbih2
LCB4KSkpIGFjYy5wdXNoKHYpOwogICAgcmV0dXJuIGFjYzsKICB9LCBbXSk7
CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoK
YGBganMKdW5pcXVlRWxlbWVudHNCeSgKICBbCiAgICB7IGlkOiAwLCB2YWx1
ZTogJ2EnIH0sCiAgICB7IGlkOiAxLCB2YWx1ZTogJ2InIH0sCiAgICB7IGlk
OiAyLCB2YWx1ZTogJ2MnIH0sCiAgICB7IGlkOiAxLCB2YWx1ZTogJ2QnIH0s
CiAgICB7IGlkOiAwLCB2YWx1ZTogJ2UnIH0KICBdLAogIChhLCBiKSA9PiBh
LmlkID09IGIuaWQKKTsgLy8gWyB7IGlkOiAwLCB2YWx1ZTogJ2EnIH0sIHsg
aWQ6IDEsIHZhbHVlOiAnYicgfSwgeyBpZDogMiwgdmFsdWU6ICdjJyB9IF0K
YGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVu
dHMpCgojIyMgdW5pcXVlRWxlbWVudHNCeVJpZ2h0CgpSZXR1cm5zIGFsbCB1
bmlxdWUgdmFsdWVzIG9mIGFuIGFycmF5LCBiYXNlZCBvbiBhIHByb3ZpZGVk
IGNvbXBhcmF0b3IgZnVuY3Rpb24sIHN0YXJ0aW5nIGZyb20gdGhlIHJpZ2h0
LgoKVXNlIGBBcnJheS5wcm90b3R5cGUucmVkdWNlUmlnaHQoKWAgYW5kIGBB
cnJheS5wcm90b3R5cGUuc29tZSgpYCBmb3IgYW4gYXJyYXkgY29udGFpbmlu
ZyBvbmx5IHRoZSBsYXN0IHVuaXF1ZSBvY2N1cnJlbmNlIG9mIGVhY2ggdmFs
dWUsIGJhc2VkIG9uIHRoZSBjb21wYXJhdG9yIGZ1bmN0aW9uLCBgZm5gLgpU
aGUgY29tcGFyYXRvciBmdW5jdGlvbiB0YWtlcyB0d28gYXJndW1lbnRzOiB0
aGUgdmFsdWVzIG9mIHRoZSB0d28gZWxlbWVudHMgYmVpbmcgY29tcGFyZWQu
CgpgYGBqcwpjb25zdCB1bmlxdWVFbGVtZW50c0J5UmlnaHQgPSAoYXJyLCBm
bikgPT4KICBhcnIucmVkdWNlUmlnaHQoKGFjYywgdikgPT4gewogICAgaWYg
KCFhY2Muc29tZSh4ID0+IGZuKHYsIHgpKSkgYWNjLnB1c2godik7CiAgICBy
ZXR1cm4gYWNjOwogIH0sIFtdKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+
RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwp1bmlxdWVFbGVtZW50c0J5Umln
aHQoCiAgWwogICAgeyBpZDogMCwgdmFsdWU6ICdhJyB9LAogICAgeyBpZDog
MSwgdmFsdWU6ICdiJyB9LAogICAgeyBpZDogMiwgdmFsdWU6ICdjJyB9LAog
ICAgeyBpZDogMSwgdmFsdWU6ICdkJyB9LAogICAgeyBpZDogMCwgdmFsdWU6
ICdlJyB9CiAgXSwKICAoYSwgYikgPT4gYS5pZCA9PSBiLmlkCik7IC8vIFsg
eyBpZDogMCwgdmFsdWU6ICdlJyB9LCB7IGlkOiAxLCB2YWx1ZTogJ2QnIH0s
IHsgaWQ6IDIsIHZhbHVlOiAnYycgfSBdCmBgYAo8L2RldGFpbHM+Cgo8YnI+
W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHVuaXF1ZVN5bW1l
dHJpY0RpZmZlcmVuY2UKClJldHVybnMgdGhlIHVuaXF1ZSBzeW1tZXRyaWMg
ZGlmZmVyZW5jZSBiZXR3ZWVuIHR3byBhcnJheXMsIG5vdCBjb250YWluaW5n
IGR1cGxpY2F0ZSB2YWx1ZXMgZnJvbSBlaXRoZXIgYXJyYXkuCgpVc2UgYEFy
cmF5LnByb3RvdHlwZS5maWx0ZXIoKWAgYW5kIGBBcnJheS5wcm90b3R5cGUu
aW5jbHVkZXMoKWAgb24gZWFjaCBhcnJheSB0byByZW1vdmUgdmFsdWVzIGNv
bnRhaW5lZCBpbiB0aGUgb3RoZXIsIHRoZW4gY3JlYXRlIGEgYFNldGAgZnJv
bSB0aGUgcmVzdWx0cywgcmVtb3ZpbmcgZHVwbGljYXRlIHZhbHVlcy4KCmBg
YGpzCmNvbnN0IHVuaXF1ZVN5bW1ldHJpY0RpZmZlcmVuY2UgPSAoYSwgYikg
PT4gWwogIC4uLm5ldyBTZXQoWy4uLmEuZmlsdGVyKHYgPT4gIWIuaW5jbHVk
ZXModikpLCAuLi5iLmZpbHRlcih2ID0+ICFhLmluY2x1ZGVzKHYpKV0pCl07
CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoK
YGBganMKdW5pcXVlU3ltbWV0cmljRGlmZmVyZW5jZShbMSwgMiwgM10sIFsx
LCAyLCA0XSk7IC8vIFszLCA0XQp1bmlxdWVTeW1tZXRyaWNEaWZmZXJlbmNl
KFsxLCAyLCAyXSwgWzEsIDMsIDFdKTsgLy8gWzIsIDNdCmBgYAo8L2RldGFp
bHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHVu
emlwCgpDcmVhdGVzIGFuIGFycmF5IG9mIGFycmF5cywgdW5ncm91cGluZyB0
aGUgZWxlbWVudHMgaW4gYW4gYXJyYXkgcHJvZHVjZWQgYnkgW3ppcF0oI3pp
cCkuCgpVc2UgYE1hdGgubWF4LmFwcGx5KClgIHRvIGdldCB0aGUgbG9uZ2Vz
dCBzdWJhcnJheSBpbiB0aGUgYXJyYXksIGBBcnJheS5wcm90b3R5cGUubWFw
KClgIHRvIG1ha2UgZWFjaCBlbGVtZW50IGFuIGFycmF5LgpVc2UgYEFycmF5
LnByb3RvdHlwZS5yZWR1Y2UoKWAgYW5kIGBBcnJheS5wcm90b3R5cGUuZm9y
RWFjaCgpYCB0byBtYXAgZ3JvdXBlZCB2YWx1ZXMgdG8gaW5kaXZpZHVhbCBh
cnJheXMuCgpgYGBqcwpjb25zdCB1bnppcCA9IGFyciA9PgogIGFyci5yZWR1
Y2UoCiAgICAoYWNjLCB2YWwpID0+ICh2YWwuZm9yRWFjaCgodiwgaSkgPT4g
YWNjW2ldLnB1c2godikpLCBhY2MpLAogICAgQXJyYXkuZnJvbSh7CiAgICAg
IGxlbmd0aDogTWF0aC5tYXgoLi4uYXJyLm1hcCh4ID0+IHgubGVuZ3RoKSkK
ICAgIH0pLm1hcCh4ID0+IFtdKQogICk7CmBgYAoKPGRldGFpbHM+CjxzdW1t
YXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKdW56aXAoW1snYScsIDEs
IHRydWVdLCBbJ2InLCAyLCBmYWxzZV1dKTsgLy8gW1snYScsICdiJ10sIFsx
LCAyXSwgW3RydWUsIGZhbHNlXV0KdW56aXAoW1snYScsIDEsIHRydWVdLCBb
J2InLCAyXV0pOyAvLyBbWydhJywgJ2InXSwgWzEsIDJdLCBbdHJ1ZV1dCmBg
YAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRz
KQoKIyMjIHVuemlwV2l0aCAhW2FkdmFuY2VkXSgvYWR2YW5jZWQuc3ZnKQoK
Q3JlYXRlcyBhbiBhcnJheSBvZiBlbGVtZW50cywgdW5ncm91cGluZyB0aGUg
ZWxlbWVudHMgaW4gYW4gYXJyYXkgcHJvZHVjZWQgYnkgW3ppcF0oI3ppcCkg
YW5kIGFwcGx5aW5nIHRoZSBwcm92aWRlZCBmdW5jdGlvbi4KClVzZSBgTWF0
aC5tYXguYXBwbHkoKWAgdG8gZ2V0IHRoZSBsb25nZXN0IHN1YmFycmF5IGlu
IHRoZSBhcnJheSwgYEFycmF5LnByb3RvdHlwZS5tYXAoKWAgdG8gbWFrZSBl
YWNoIGVsZW1lbnQgYW4gYXJyYXkuClVzZSBgQXJyYXkucHJvdG90eXBlLnJl
ZHVjZSgpYCBhbmQgYEFycmF5LnByb3RvdHlwZS5mb3JFYWNoKClgIHRvIG1h
cCBncm91cGVkIHZhbHVlcyB0byBpbmRpdmlkdWFsIGFycmF5cy4KVXNlIGBB
cnJheS5wcm90b3R5cGUubWFwKClgIGFuZCB0aGUgc3ByZWFkIG9wZXJhdG9y
IChgLi4uYCkgdG8gYXBwbHkgYGZuYCB0byBlYWNoIGluZGl2aWR1YWwgZ3Jv
dXAgb2YgZWxlbWVudHMuCgpgYGBqcwpjb25zdCB1bnppcFdpdGggPSAoYXJy
LCBmbikgPT4KICBhcnIKICAgIC5yZWR1Y2UoCiAgICAgIChhY2MsIHZhbCkg
PT4gKHZhbC5mb3JFYWNoKCh2LCBpKSA9PiBhY2NbaV0ucHVzaCh2KSksIGFj
YyksCiAgICAgIEFycmF5LmZyb20oewogICAgICAgIGxlbmd0aDogTWF0aC5t
YXgoLi4uYXJyLm1hcCh4ID0+IHgubGVuZ3RoKSkKICAgICAgfSkubWFwKHgg
PT4gW10pCiAgICApCiAgICAubWFwKHZhbCA9PiBmbiguLi52YWwpKTsKYGBg
Cgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBq
cwp1bnppcFdpdGgoW1sxLCAxMCwgMTAwXSwgWzIsIDIwLCAyMDBdXSwgKC4u
LmFyZ3MpID0+IGFyZ3MucmVkdWNlKChhY2MsIHYpID0+IGFjYyArIHYsIDAp
KTsgLy8gWzMsIDMwLCAzMDBdCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBC
YWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHdpdGhvdXQKCkZpbHRlcnMg
b3V0IHRoZSBlbGVtZW50cyBvZiBhbiBhcnJheSwgdGhhdCBoYXZlIG9uZSBv
ZiB0aGUgc3BlY2lmaWVkIHZhbHVlcy4KClVzZSBgQXJyYXkucHJvdG90eXBl
LmZpbHRlcigpYCB0byBjcmVhdGUgYW4gYXJyYXkgZXhjbHVkaW5nKHVzaW5n
IGAhQXJyYXkuaW5jbHVkZXMoKWApIGFsbCBnaXZlbiB2YWx1ZXMuCgpgYGBq
cwpjb25zdCB3aXRob3V0ID0gKGFyciwgLi4uYXJncykgPT4gYXJyLmZpbHRl
cih2ID0+ICFhcmdzLmluY2x1ZGVzKHYpKTsKYGBgCgo8ZGV0YWlscz4KPHN1
bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwp3aXRob3V0KFsyLCAx
LCAyLCAzXSwgMSwgMik7IC8vIFszXQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvi
rIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyB4UHJvZAoKQ3JlYXRl
cyBhIG5ldyBhcnJheSBvdXQgb2YgdGhlIHR3byBzdXBwbGllZCBieSBjcmVh
dGluZyBlYWNoIHBvc3NpYmxlIHBhaXIgZnJvbSB0aGUgYXJyYXlzLgoKVXNl
IGBBcnJheS5wcm90b3R5cGUucmVkdWNlKClgLCBgQXJyYXkucHJvdG90eXBl
Lm1hcCgpYCBhbmQgYEFycmF5LnByb3RvdHlwZS5jb25jYXQoKWAgdG8gcHJv
ZHVjZSBldmVyeSBwb3NzaWJsZSBwYWlyIGZyb20gdGhlIGVsZW1lbnRzIG9m
IHRoZSB0d28gYXJyYXlzIGFuZCBzYXZlIHRoZW0gaW4gYW4gYXJyYXkuCgpg
YGBqcwpjb25zdCB4UHJvZCA9IChhLCBiKSA9PiBhLnJlZHVjZSgoYWNjLCB4
KSA9PiBhY2MuY29uY2F0KGIubWFwKHkgPT4gW3gsIHldKSksIFtdKTsKYGBg
Cgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBq
cwp4UHJvZChbMSwgMl0sIFsnYScsICdiJ10pOyAvLyBbWzEsICdhJ10sIFsx
LCAnYiddLCBbMiwgJ2EnXSwgWzIsICdiJ11dCmBgYAo8L2RldGFpbHM+Cgo8
YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHppcAoKQ3Jl
YXRlcyBhbiBhcnJheSBvZiBlbGVtZW50cywgZ3JvdXBlZCBiYXNlZCBvbiB0
aGUgcG9zaXRpb24gaW4gdGhlIG9yaWdpbmFsIGFycmF5cy4KClVzZSBgTWF0
aC5tYXguYXBwbHkoKWAgdG8gZ2V0IHRoZSBsb25nZXN0IGFycmF5IGluIHRo
ZSBhcmd1bWVudHMuCkNyZWF0ZXMgYW4gYXJyYXkgd2l0aCB0aGF0IGxlbmd0
aCBhcyByZXR1cm4gdmFsdWUgYW5kIHVzZSBgQXJyYXkuZnJvbSgpYCB3aXRo
IGEgbWFwLWZ1bmN0aW9uIHRvIGNyZWF0ZSBhbiBhcnJheSBvZiBncm91cGVk
IGVsZW1lbnRzLgpJZiBsZW5ndGhzIG9mIHRoZSBhcmd1bWVudC1hcnJheXMg
dmFyeSwgYHVuZGVmaW5lZGAgaXMgdXNlZCB3aGVyZSBubyB2YWx1ZSBjb3Vs
ZCBiZSBmb3VuZC4KCmBgYGpzCmNvbnN0IHppcCA9ICguLi5hcnJheXMpID0+
IHsKICBjb25zdCBtYXhMZW5ndGggPSBNYXRoLm1heCguLi5hcnJheXMubWFw
KHggPT4geC5sZW5ndGgpKTsKICByZXR1cm4gQXJyYXkuZnJvbSh7IGxlbmd0
aDogbWF4TGVuZ3RoIH0pLm1hcCgoXywgaSkgPT4gewogICAgcmV0dXJuIEFy
cmF5LmZyb20oeyBsZW5ndGg6IGFycmF5cy5sZW5ndGggfSwgKF8sIGspID0+
IGFycmF5c1trXVtpXSk7CiAgfSk7Cn07CmBgYAoKPGRldGFpbHM+CjxzdW1t
YXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKemlwKFsnYScsICdiJ10s
IFsxLCAyXSwgW3RydWUsIGZhbHNlXSk7IC8vIFtbJ2EnLCAxLCB0cnVlXSwg
WydiJywgMiwgZmFsc2VdXQp6aXAoWydhJ10sIFsxLCAyXSwgW3RydWUsIGZh
bHNlXSk7IC8vIFtbJ2EnLCAxLCB0cnVlXSwgW3VuZGVmaW5lZCwgMiwgZmFs
c2VdXQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNj
b250ZW50cykKCiMjIyB6aXBPYmplY3QKCkdpdmVuIGFuIGFycmF5IG9mIHZh
bGlkIHByb3BlcnR5IGlkZW50aWZpZXJzIGFuZCBhbiBhcnJheSBvZiB2YWx1
ZXMsIHJldHVybiBhbiBvYmplY3QgYXNzb2NpYXRpbmcgdGhlIHByb3BlcnRp
ZXMgdG8gdGhlIHZhbHVlcy4KClNpbmNlIGFuIG9iamVjdCBjYW4gaGF2ZSB1
bmRlZmluZWQgdmFsdWVzIGJ1dCBub3QgdW5kZWZpbmVkIHByb3BlcnR5IHBv
aW50ZXJzLCB0aGUgYXJyYXkgb2YgcHJvcGVydGllcyBpcyB1c2VkIHRvIGRl
Y2lkZSB0aGUgc3RydWN0dXJlIG9mIHRoZSByZXN1bHRpbmcgb2JqZWN0IHVz
aW5nIGBBcnJheS5wcm90b3R5cGUucmVkdWNlKClgLgoKYGBganMKY29uc3Qg
emlwT2JqZWN0ID0gKHByb3BzLCB2YWx1ZXMpID0+CiAgcHJvcHMucmVkdWNl
KChvYmosIHByb3AsIGluZGV4KSA9PiAoKG9ialtwcm9wXSA9IHZhbHVlc1tp
bmRleF0pLCBvYmopLCB7fSk7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4
YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKemlwT2JqZWN0KFsnYScsICdiJywg
J2MnXSwgWzEsIDJdKTsgLy8ge2E6IDEsIGI6IDIsIGM6IHVuZGVmaW5lZH0K
emlwT2JqZWN0KFsnYScsICdiJ10sIFsxLCAyLCAzXSk7IC8vIHthOiAxLCBi
OiAyfQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNj
b250ZW50cykKCiMjIyB6aXBXaXRoICFbYWR2YW5jZWRdKC9hZHZhbmNlZC5z
dmcpCgpDcmVhdGVzIGFuIGFycmF5IG9mIGVsZW1lbnRzLCBncm91cGVkIGJh
c2VkIG9uIHRoZSBwb3NpdGlvbiBpbiB0aGUgb3JpZ2luYWwgYXJyYXlzIGFu
ZCB1c2luZyBmdW5jdGlvbiBhcyB0aGUgbGFzdCB2YWx1ZSB0byBzcGVjaWZ5
IGhvdyBncm91cGVkIHZhbHVlcyBzaG91bGQgYmUgY29tYmluZWQuCgpDaGVj
ayBpZiB0aGUgbGFzdCBhcmd1bWVudCBwcm92aWRlZCBpcyBhIGZ1bmN0aW9u
LgpVc2UgYE1hdGgubWF4KClgIHRvIGdldCB0aGUgbG9uZ2VzdCBhcnJheSBp
biB0aGUgYXJndW1lbnRzLgpDcmVhdGVzIGFuIGFycmF5IHdpdGggdGhhdCBs
ZW5ndGggYXMgcmV0dXJuIHZhbHVlIGFuZCB1c2UgYEFycmF5LmZyb20oKWAg
d2l0aCBhIG1hcC1mdW5jdGlvbiB0byBjcmVhdGUgYW4gYXJyYXkgb2YgZ3Jv
dXBlZCBlbGVtZW50cy4KSWYgbGVuZ3RocyBvZiB0aGUgYXJndW1lbnQtYXJy
YXlzIHZhcnksIGB1bmRlZmluZWRgIGlzIHVzZWQgd2hlcmUgbm8gdmFsdWUg
Y291bGQgYmUgZm91bmQuClRoZSBmdW5jdGlvbiBpcyBpbnZva2VkIHdpdGgg
dGhlIGVsZW1lbnRzIG9mIGVhY2ggZ3JvdXAgYCguLi5ncm91cClgLgoKYGBg
anMKY29uc3QgemlwV2l0aCA9ICguLi5hcnJheSkgPT4gewogIGNvbnN0IGZu
ID0gdHlwZW9mIGFycmF5W2FycmF5Lmxlbmd0aCAtIDFdID09PSAnZnVuY3Rp
b24nID8gYXJyYXkucG9wKCkgOiB1bmRlZmluZWQ7CiAgcmV0dXJuIEFycmF5
LmZyb20oeyBsZW5ndGg6IE1hdGgubWF4KC4uLmFycmF5Lm1hcChhID0+IGEu
bGVuZ3RoKSkgfSwgKF8sIGkpID0+CiAgICBmbiA/IGZuKC4uLmFycmF5Lm1h
cChhID0+IGFbaV0pKSA6IGFycmF5Lm1hcChhID0+IGFbaV0pCiAgKTsKfTsK
YGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+Cgpg
YGBqcwp6aXBXaXRoKFsxLCAyXSwgWzEwLCAyMF0sIFsxMDAsIDIwMF0sIChh
LCBiLCBjKSA9PiBhICsgYiArIGMpOyAvLyBbMTExLDIyMl0KemlwV2l0aCgK
ICBbMSwgMiwgM10sCiAgWzEwLCAyMF0sCiAgWzEwMCwgMjAwXSwKICAoYSwg
YiwgYykgPT4gKGEgIT0gbnVsbCA/IGEgOiAnYScpICsgKGIgIT0gbnVsbCA/
IGIgOiAnYicpICsgKGMgIT0gbnVsbCA/IGMgOiAnYycpCik7IC8vIFsxMTEs
IDIyMiwgJzNiYyddCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRv
IHRvcF0oI2NvbnRlbnRzKQoKLS0tCgojIyDwn4yQIEJyb3dzZXIKCgojIyMg
YXJyYXlUb0h0bWxMaXN0CgpDb252ZXJ0cyB0aGUgZ2l2ZW4gYXJyYXkgZWxl
bWVudHMgaW50byBgPGxpPmAgdGFncyBhbmQgYXBwZW5kcyB0aGVtIHRvIHRo
ZSBsaXN0IG9mIHRoZSBnaXZlbiBpZC4KClVzZSBgQXJyYXkucHJvdG90eXBl
Lm1hcCgpYCwgYGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoKWAsIGFuZCBhbiBh
bm9ueW1vdXMgaW5uZXIgY2xvc3VyZSB0byBjcmVhdGUgYSBsaXN0IG9mIGh0
bWwgdGFncy4KCmBgYGpzCmNvbnN0IGFycmF5VG9IdG1sTGlzdCA9IChhcnIs
IGxpc3RJRCkgPT4KICAoZWwgPT4gKAogICAgKGVsID0gZG9jdW1lbnQucXVl
cnlTZWxlY3RvcignIycgKyBsaXN0SUQpKSwKICAgIChlbC5pbm5lckhUTUwg
Kz0gYXJyLm1hcChpdGVtID0+IGA8bGk+JHtpdGVtfTwvbGk+YCkuam9pbign
JykpCiAgKSkoKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8
L3N1bW1hcnk+CgpgYGBqcwphcnJheVRvSHRtbExpc3QoWydpdGVtIDEnLCAn
aXRlbSAyJ10sICdteUxpc3RJRCcpOwpgYGAKPC9kZXRhaWxzPgoKPGJyPlvi
rIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBib3R0b21WaXNpYmxl
CgpSZXR1cm5zIGB0cnVlYCBpZiB0aGUgYm90dG9tIG9mIHRoZSBwYWdlIGlz
IHZpc2libGUsIGBmYWxzZWAgb3RoZXJ3aXNlLgoKVXNlIGBzY3JvbGxZYCwg
YHNjcm9sbEhlaWdodGAgYW5kIGBjbGllbnRIZWlnaHRgIHRvIGRldGVybWlu
ZSBpZiB0aGUgYm90dG9tIG9mIHRoZSBwYWdlIGlzIHZpc2libGUuCgpgYGBq
cwpjb25zdCBib3R0b21WaXNpYmxlID0gKCkgPT4KICBkb2N1bWVudC5kb2N1
bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0ICsgd2luZG93LnNjcm9sbFkgPj0K
ICAoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbEhlaWdodCB8fCBk
b2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0KTsKYGBgCgo8
ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpi
b3R0b21WaXNpYmxlKCk7IC8vIHRydWUKYGBgCjwvZGV0YWlscz4KCjxicj5b
4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgY29weVRvQ2xpcGJv
YXJkICFbYWR2YW5jZWRdKC9hZHZhbmNlZC5zdmcpCgpDb3B5IGEgc3RyaW5n
IHRvIHRoZSBjbGlwYm9hcmQuIApPbmx5IHdvcmtzIGFzIGEgcmVzdWx0IG9m
IHVzZXIgYWN0aW9uIChpLmUuIGluc2lkZSBhIGBjbGlja2AgZXZlbnQgbGlz
dGVuZXIpLgoK4pqg77iPICoqTk9USUNFOioqIFRoZSBzYW1lIGZ1bmN0aW9u
YWxpdHkgY2FuIGJlIGVhc2lseSBpbXBsZW1lbnRlZCBieSB1c2luZyB0aGUg
bmV3IGFzeW5jaHJvbm91cyBDbGlwYm9hcmQgQVBJLCB3aGljaCBpcyBzdGls
bCBleHBlcmltZW50YWwgYnV0IHNob3VsZCBiZSB1c2VkIGluIHRoZSBmdXR1
cmUgaW5zdGVhZCBvZiB0aGlzIHNuaXBwZXQuIEZpbmQgb3V0IG1vcmUgYWJv
dXQgaXQgW2hlcmVdKGh0dHBzOi8vZ2l0aHViLmNvbS93M2MvY2xpcGJvYXJk
LWFwaXMvYmxvYi9tYXN0ZXIvZXhwbGFpbmVyLmFkb2Mjd3JpdGluZy10by10
aGUtY2xpcGJvYXJkKS4KCkNyZWF0ZSBhIG5ldyBgPHRleHRhcmVhPmAgZWxl
bWVudCwgZmlsbCBpdCB3aXRoIHRoZSBzdXBwbGllZCBkYXRhIGFuZCBhZGQg
aXQgdG8gdGhlIEhUTUwgZG9jdW1lbnQuClVzZSBgU2VsZWN0aW9uLmdldFJh
bmdlQXQoKWB0byBzdG9yZSB0aGUgc2VsZWN0ZWQgcmFuZ2UgKGlmIGFueSku
ClVzZSBgZG9jdW1lbnQuZXhlY0NvbW1hbmQoJ2NvcHknKWAgdG8gY29weSB0
byB0aGUgY2xpcGJvYXJkLgpSZW1vdmUgdGhlIGA8dGV4dGFyZWE+YCBlbGVt
ZW50IGZyb20gdGhlIEhUTUwgZG9jdW1lbnQuCkZpbmFsbHksIHVzZSBgU2Vs
ZWN0aW9uKCkuYWRkUmFuZ2UoKWAgdG8gcmVjb3ZlciB0aGUgb3JpZ2luYWwg
c2VsZWN0ZWQgcmFuZ2UgKGlmIGFueSkuCgpgYGBqcwpjb25zdCBjb3B5VG9D
bGlwYm9hcmQgPSBzdHIgPT4gewogIGNvbnN0IGVsID0gZG9jdW1lbnQuY3Jl
YXRlRWxlbWVudCgndGV4dGFyZWEnKTsKICBlbC52YWx1ZSA9IHN0cjsKICBl
bC5zZXRBdHRyaWJ1dGUoJ3JlYWRvbmx5JywgJycpOwogIGVsLnN0eWxlLnBv
c2l0aW9uID0gJ2Fic29sdXRlJzsKICBlbC5zdHlsZS5sZWZ0ID0gJy05OTk5
cHgnOwogIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZWwpOwogIGNvbnN0
IHNlbGVjdGVkID0KICAgIGRvY3VtZW50LmdldFNlbGVjdGlvbigpLnJhbmdl
Q291bnQgPiAwID8gZG9jdW1lbnQuZ2V0U2VsZWN0aW9uKCkuZ2V0UmFuZ2VB
dCgwKSA6IGZhbHNlOwogIGVsLnNlbGVjdCgpOwogIGRvY3VtZW50LmV4ZWND
b21tYW5kKCdjb3B5Jyk7CiAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChl
bCk7CiAgaWYgKHNlbGVjdGVkKSB7CiAgICBkb2N1bWVudC5nZXRTZWxlY3Rp
b24oKS5yZW1vdmVBbGxSYW5nZXMoKTsKICAgIGRvY3VtZW50LmdldFNlbGVj
dGlvbigpLmFkZFJhbmdlKHNlbGVjdGVkKTsKICB9Cn07CmBgYAoKPGRldGFp
bHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKY29weVRv
Q2xpcGJvYXJkKCdMb3JlbSBpcHN1bScpOyAvLyAnTG9yZW0gaXBzdW0nIGNv
cGllZCB0byBjbGlwYm9hcmQuCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBC
YWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGNvdW50ZXIgIVthZHZhbmNl
ZF0oL2FkdmFuY2VkLnN2ZykKCkNyZWF0ZXMgYSBjb3VudGVyIHdpdGggdGhl
IHNwZWNpZmllZCByYW5nZSwgc3RlcCBhbmQgZHVyYXRpb24gZm9yIHRoZSBz
cGVjaWZpZWQgc2VsZWN0b3IuCgpDaGVjayBpZiBgc3RlcGAgaGFzIHRoZSBw
cm9wZXIgc2lnbiBhbmQgY2hhbmdlIGl0IGFjY29yZGluZ2x5LgpVc2UgYHNl
dEludGVydmFsKClgIGluIGNvbWJpbmF0aW9uIHdpdGggYE1hdGguYWJzKClg
IGFuZCBgTWF0aC5mbG9vcigpYCB0byBjYWxjdWxhdGUgdGhlIHRpbWUgYmV0
d2VlbiBlYWNoIG5ldyB0ZXh0IGRyYXcuClVzZSBgZG9jdW1lbnQucXVlcnlT
ZWxlY3RvcigpLmlubmVySFRNTGAgdG8gdXBkYXRlIHRoZSB2YWx1ZSBvZiB0
aGUgc2VsZWN0ZWQgZWxlbWVudC4KT21pdCB0aGUgZm91cnRoIHBhcmFtZXRl
ciwgYHN0ZXBgLCB0byB1c2UgYSBkZWZhdWx0IHN0ZXAgb2YgYDFgLgpPbWl0
IHRoZSBmaWZ0aCBwYXJhbWV0ZXIsIGBkdXJhdGlvbmAsIHRvIHVzZSBhIGRl
ZmF1bHQgZHVyYXRpb24gb2YgYDIwMDBgbXMuCgpgYGBqcwpjb25zdCBjb3Vu
dGVyID0gKHNlbGVjdG9yLCBzdGFydCwgZW5kLCBzdGVwID0gMSwgZHVyYXRp
b24gPSAyMDAwKSA9PiB7CiAgbGV0IGN1cnJlbnQgPSBzdGFydCwKICAgIF9z
dGVwID0gKGVuZCAtIHN0YXJ0KSAqIHN0ZXAgPCAwID8gLXN0ZXAgOiBzdGVw
LAogICAgdGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7CiAgICAgIGN1cnJl
bnQgKz0gX3N0ZXA7CiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2Vs
ZWN0b3IpLmlubmVySFRNTCA9IGN1cnJlbnQ7CiAgICAgIGlmIChjdXJyZW50
ID49IGVuZCkgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RvcikuaW5u
ZXJIVE1MID0gZW5kOwogICAgICBpZiAoY3VycmVudCA+PSBlbmQpIGNsZWFy
SW50ZXJ2YWwodGltZXIpOwogICAgfSwgTWF0aC5hYnMoTWF0aC5mbG9vcihk
dXJhdGlvbiAvIChlbmQgLSBzdGFydCkpKSk7CiAgcmV0dXJuIHRpbWVyOwp9
OwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4K
CmBgYGpzCmNvdW50ZXIoJyNteS1pZCcsIDEsIDEwMDAsIDUsIDIwMDApOyAv
LyBDcmVhdGVzIGEgMi1zZWNvbmQgdGltZXIgZm9yIHRoZSBlbGVtZW50IHdp
dGggaWQ9Im15LWlkIgpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0
byB0b3BdKCNjb250ZW50cykKCiMjIyBjcmVhdGVFbGVtZW50CgpDcmVhdGVz
IGFuIGVsZW1lbnQgZnJvbSBhIHN0cmluZyAod2l0aG91dCBhcHBlbmRpbmcg
aXQgdG8gdGhlIGRvY3VtZW50KS4gCklmIHRoZSBnaXZlbiBzdHJpbmcgY29u
dGFpbnMgbXVsdGlwbGUgZWxlbWVudHMsIG9ubHkgdGhlIGZpcnN0IG9uZSB3
aWxsIGJlIHJldHVybmVkLgoKVXNlIGBkb2N1bWVudC5jcmVhdGVFbGVtZW50
KClgIHRvIGNyZWF0ZSBhIG5ldyBlbGVtZW50LgpTZXQgaXRzIGBpbm5lckhU
TUxgIHRvIHRoZSBzdHJpbmcgc3VwcGxpZWQgYXMgdGhlIGFyZ3VtZW50LiAK
VXNlIGBQYXJlbnROb2RlLmZpcnN0RWxlbWVudENoaWxkYCB0byByZXR1cm4g
dGhlIGVsZW1lbnQgdmVyc2lvbiBvZiB0aGUgc3RyaW5nLgoKYGBganMKY29u
c3QgY3JlYXRlRWxlbWVudCA9IHN0ciA9PiB7CiAgY29uc3QgZWwgPSBkb2N1
bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICBlbC5pbm5lckhUTUwgPSBz
dHI7CiAgcmV0dXJuIGVsLmZpcnN0RWxlbWVudENoaWxkOwp9OwpgYGAKCjxk
ZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmNv
bnN0IGVsID0gY3JlYXRlRWxlbWVudCgKICBgPGRpdiBjbGFzcz0iY29udGFp
bmVyIj4KICAgIDxwPkhlbGxvITwvcD4KICA8L2Rpdj5gCik7CmNvbnNvbGUu
bG9nKGVsLmNsYXNzTmFtZSk7IC8vICdjb250YWluZXInCmBgYAo8L2RldGFp
bHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGNy
ZWF0ZUV2ZW50SHViICFbYWR2YW5jZWRdKC9hZHZhbmNlZC5zdmcpCgpDcmVh
dGVzIGEgcHViL3N1YiAoW3B1Ymxpc2jigJNzdWJzY3JpYmVdKGh0dHBzOi8v
ZW4ud2lraXBlZGlhLm9yZy93aWtpL1B1Ymxpc2glRTIlODAlOTNzdWJzY3Jp
YmVfcGF0dGVybikpIGV2ZW50IGh1YiB3aXRoIGBlbWl0YCwgYG9uYCwgYW5k
IGBvZmZgIG1ldGhvZHMuCgpVc2UgYE9iamVjdC5jcmVhdGUobnVsbClgIHRv
IGNyZWF0ZSBhbiBlbXB0eSBgaHViYCBvYmplY3QgdGhhdCBkb2VzIG5vdCBp
bmhlcml0IHByb3BlcnRpZXMgZnJvbSBgT2JqZWN0LnByb3RvdHlwZWAuCkZv
ciBgZW1pdGAsIHJlc29sdmUgdGhlIGFycmF5IG9mIGhhbmRsZXJzIGJhc2Vk
IG9uIHRoZSBgZXZlbnRgIGFyZ3VtZW50IGFuZCB0aGVuIHJ1biBlYWNoIG9u
ZSB3aXRoIGBBcnJheS5wcm90b3R5cGUuZm9yRWFjaCgpYCBieSBwYXNzaW5n
IGluIHRoZSBkYXRhIGFzIGFuIGFyZ3VtZW50LgpGb3IgYG9uYCwgY3JlYXRl
IGFuIGFycmF5IGZvciB0aGUgZXZlbnQgaWYgaXQgZG9lcyBub3QgeWV0IGV4
aXN0LCB0aGVuIHVzZSBgQXJyYXkucHJvdG90eXBlLnB1c2goKWAgdG8gYWRk
IHRoZSBoYW5kbGVyCnRvIHRoZSBhcnJheS4KRm9yIGBvZmZgLCB1c2UgYEFy
cmF5LnByb3RvdHlwZS5maW5kSW5kZXgoKWAgdG8gZmluZCB0aGUgaW5kZXgg
b2YgdGhlIGhhbmRsZXIgaW4gdGhlIGV2ZW50IGFycmF5IGFuZCByZW1vdmUg
aXQgdXNpbmcgYEFycmF5LnByb3RvdHlwZS5zcGxpY2UoKWAuCgpgYGBqcwpj
b25zdCBjcmVhdGVFdmVudEh1YiA9ICgpID0+ICh7CiAgaHViOiBPYmplY3Qu
Y3JlYXRlKG51bGwpLAogIGVtaXQoZXZlbnQsIGRhdGEpIHsKICAgICh0aGlz
Lmh1YltldmVudF0gfHwgW10pLmZvckVhY2goaGFuZGxlciA9PiBoYW5kbGVy
KGRhdGEpKTsKICB9LAogIG9uKGV2ZW50LCBoYW5kbGVyKSB7CiAgICBpZiAo
IXRoaXMuaHViW2V2ZW50XSkgdGhpcy5odWJbZXZlbnRdID0gW107CiAgICB0
aGlzLmh1YltldmVudF0ucHVzaChoYW5kbGVyKTsKICB9LAogIG9mZihldmVu
dCwgaGFuZGxlcikgewogICAgY29uc3QgaSA9ICh0aGlzLmh1YltldmVudF0g
fHwgW10pLmZpbmRJbmRleChoID0+IGggPT09IGhhbmRsZXIpOwogICAgaWYg
KGkgPiAtMSkgdGhpcy5odWJbZXZlbnRdLnNwbGljZShpLCAxKTsKICAgIGlm
ICh0aGlzLmh1YltldmVudF0ubGVuZ3RoID09PSAwKSBkZWxldGUgdGhpcy5o
dWJbZXZlbnRdOwogIH0KfSk7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4
YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKY29uc3QgaGFuZGxlciA9IGRhdGEg
PT4gY29uc29sZS5sb2coZGF0YSk7CmNvbnN0IGh1YiA9IGNyZWF0ZUV2ZW50
SHViKCk7CmxldCBpbmNyZW1lbnQgPSAwOwoKLy8gU3Vic2NyaWJlOiBsaXN0
ZW4gZm9yIGRpZmZlcmVudCB0eXBlcyBvZiBldmVudHMKaHViLm9uKCdtZXNz
YWdlJywgaGFuZGxlcik7Cmh1Yi5vbignbWVzc2FnZScsICgpID0+IGNvbnNv
bGUubG9nKCdNZXNzYWdlIGV2ZW50IGZpcmVkJykpOwpodWIub24oJ2luY3Jl
bWVudCcsICgpID0+IGluY3JlbWVudCsrKTsKCi8vIFB1Ymxpc2g6IGVtaXQg
ZXZlbnRzIHRvIGludm9rZSBhbGwgaGFuZGxlcnMgc3Vic2NyaWJlZCB0byB0
aGVtLCBwYXNzaW5nIHRoZSBkYXRhIHRvIHRoZW0gYXMgYW4gYXJndW1lbnQK
aHViLmVtaXQoJ21lc3NhZ2UnLCAnaGVsbG8gd29ybGQnKTsgLy8gbG9ncyAn
aGVsbG8gd29ybGQnIGFuZCAnTWVzc2FnZSBldmVudCBmaXJlZCcKaHViLmVt
aXQoJ21lc3NhZ2UnLCB7IGhlbGxvOiAnd29ybGQnIH0pOyAvLyBsb2dzIHRo
ZSBvYmplY3QgYW5kICdNZXNzYWdlIGV2ZW50IGZpcmVkJwpodWIuZW1pdCgn
aW5jcmVtZW50Jyk7IC8vIGBpbmNyZW1lbnRgIHZhcmlhYmxlIGlzIG5vdyAx
CgovLyBVbnN1YnNjcmliZTogc3RvcCBhIHNwZWNpZmljIGhhbmRsZXIgZnJv
bSBsaXN0ZW5pbmcgdG8gdGhlICdtZXNzYWdlJyBldmVudApodWIub2ZmKCdt
ZXNzYWdlJywgaGFuZGxlcik7CmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBC
YWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGN1cnJlbnRVUkwKClJldHVy
bnMgdGhlIGN1cnJlbnQgVVJMLgoKVXNlIGB3aW5kb3cubG9jYXRpb24uaHJl
ZmAgdG8gZ2V0IGN1cnJlbnQgVVJMLgoKYGBganMKY29uc3QgY3VycmVudFVS
TCA9ICgpID0+IHdpbmRvdy5sb2NhdGlvbi5ocmVmOwpgYGAKCjxkZXRhaWxz
Pgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmN1cnJlbnRV
UkwoKTsgLy8gJ2h0dHBzOi8vZ29vZ2xlLmNvbScKYGBgCjwvZGV0YWlscz4K
Cjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgZGV0ZWN0
RGV2aWNlVHlwZQoKRGV0ZWN0cyB3aGV0aGVyIHRoZSB3ZWJzaXRlIGlzIGJl
aW5nIG9wZW5lZCBpbiBhIG1vYmlsZSBkZXZpY2Ugb3IgYSBkZXNrdG9wL2xh
cHRvcC4KClVzZSBhIHJlZ3VsYXIgZXhwcmVzc2lvbiB0byB0ZXN0IHRoZSBg
bmF2aWdhdG9yLnVzZXJBZ2VudGAgcHJvcGVydHkgdG8gZmlndXJlIG91dCBp
ZiB0aGUgZGV2aWNlIGlzIGEgbW9iaWxlIGRldmljZSBvciBhIGRlc2t0b3Av
bGFwdG9wLgoKYGBganMKY29uc3QgZGV0ZWN0RGV2aWNlVHlwZSA9ICgpID0+
CiAgL0FuZHJvaWR8d2ViT1N8aVBob25lfGlQYWR8aVBvZHxCbGFja0JlcnJ5
fElFTW9iaWxlfE9wZXJhIE1pbmkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdl
bnQpCiAgICA/ICdNb2JpbGUnCiAgICA6ICdEZXNrdG9wJzsKYGBgCgo8ZGV0
YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpkZXRl
Y3REZXZpY2VUeXBlKCk7IC8vICJNb2JpbGUiIG9yICJEZXNrdG9wIgpgYGAK
PC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykK
CiMjIyBlbGVtZW50Q29udGFpbnMKClJldHVybnMgYHRydWVgIGlmIHRoZSBg
cGFyZW50YCBlbGVtZW50IGNvbnRhaW5zIHRoZSBgY2hpbGRgIGVsZW1lbnQs
IGBmYWxzZWAgb3RoZXJ3aXNlLgoKQ2hlY2sgdGhhdCBgcGFyZW50YCBpcyBu
b3QgdGhlIHNhbWUgZWxlbWVudCBhcyBgY2hpbGRgLCB1c2UgYHBhcmVudC5j
b250YWlucyhjaGlsZClgIHRvIGNoZWNrIGlmIHRoZSBgcGFyZW50YCBlbGVt
ZW50IGNvbnRhaW5zIHRoZSBgY2hpbGRgIGVsZW1lbnQuCgpgYGBqcwpjb25z
dCBlbGVtZW50Q29udGFpbnMgPSAocGFyZW50LCBjaGlsZCkgPT4gcGFyZW50
ICE9PSBjaGlsZCAmJiBwYXJlbnQuY29udGFpbnMoY2hpbGQpOwpgYGAKCjxk
ZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmVs
ZW1lbnRDb250YWlucyhkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdoZWFkJyks
IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ3RpdGxlJykpOyAvLyB0cnVlCmVs
ZW1lbnRDb250YWlucyhkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5Jyks
IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKSk7IC8vIGZhbHNlCmBg
YAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRz
KQoKIyMjIGVsZW1lbnRJc1Zpc2libGVJblZpZXdwb3J0ICFbYWR2YW5jZWRd
KC9hZHZhbmNlZC5zdmcpCgpSZXR1cm5zIGB0cnVlYCBpZiB0aGUgZWxlbWVu
dCBzcGVjaWZpZWQgaXMgdmlzaWJsZSBpbiB0aGUgdmlld3BvcnQsIGBmYWxz
ZWAgb3RoZXJ3aXNlLgoKVXNlIGBFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50
UmVjdCgpYCBhbmQgdGhlIGB3aW5kb3cuaW5uZXIoV2lkdGh8SGVpZ2h0KWAg
dmFsdWVzCnRvIGRldGVybWluZSBpZiBhIGdpdmVuIGVsZW1lbnQgaXMgdmlz
aWJsZSBpbiB0aGUgdmlld3BvcnQuCk9taXQgdGhlIHNlY29uZCBhcmd1bWVu
dCB0byBkZXRlcm1pbmUgaWYgdGhlIGVsZW1lbnQgaXMgZW50aXJlbHkgdmlz
aWJsZSwgb3Igc3BlY2lmeSBgdHJ1ZWAgdG8gZGV0ZXJtaW5lIGlmCml0IGlz
IHBhcnRpYWxseSB2aXNpYmxlLgoKYGBganMKY29uc3QgZWxlbWVudElzVmlz
aWJsZUluVmlld3BvcnQgPSAoZWwsIHBhcnRpYWxseVZpc2libGUgPSBmYWxz
ZSkgPT4gewogIGNvbnN0IHsgdG9wLCBsZWZ0LCBib3R0b20sIHJpZ2h0IH0g
PSBlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsKICBjb25zdCB7IGlubmVy
SGVpZ2h0LCBpbm5lcldpZHRoIH0gPSB3aW5kb3c7CiAgcmV0dXJuIHBhcnRp
YWxseVZpc2libGUKICAgID8gKCh0b3AgPiAwICYmIHRvcCA8IGlubmVySGVp
Z2h0KSB8fCAoYm90dG9tID4gMCAmJiBib3R0b20gPCBpbm5lckhlaWdodCkp
ICYmCiAgICAgICAgKChsZWZ0ID4gMCAmJiBsZWZ0IDwgaW5uZXJXaWR0aCkg
fHwgKHJpZ2h0ID4gMCAmJiByaWdodCA8IGlubmVyV2lkdGgpKQogICAgOiB0
b3AgPj0gMCAmJiBsZWZ0ID49IDAgJiYgYm90dG9tIDw9IGlubmVySGVpZ2h0
ICYmIHJpZ2h0IDw9IGlubmVyV2lkdGg7Cn07CmBgYAoKPGRldGFpbHM+Cjxz
dW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKLy8gZS5nLiAxMDB4
MTAwIHZpZXdwb3J0IGFuZCBhIDEweDEwcHggZWxlbWVudCBhdCBwb3NpdGlv
biB7dG9wOiAtMSwgbGVmdDogMCwgYm90dG9tOiA5LCByaWdodDogMTB9CmVs
ZW1lbnRJc1Zpc2libGVJblZpZXdwb3J0KGVsKTsgLy8gZmFsc2UgLSAobm90
IGZ1bGx5IHZpc2libGUpCmVsZW1lbnRJc1Zpc2libGVJblZpZXdwb3J0KGVs
LCB0cnVlKTsgLy8gdHJ1ZSAtIChwYXJ0aWFsbHkgdmlzaWJsZSkKYGBgCjwv
ZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgoj
IyMgZm9ybVRvT2JqZWN0CgpFbmNvZGUgYSBzZXQgb2YgZm9ybSBlbGVtZW50
cyBhcyBhbiBgb2JqZWN0YC4KClVzZSB0aGUgYEZvcm1EYXRhYCBjb25zdHJ1
Y3RvciB0byBjb252ZXJ0IHRoZSBIVE1MIGBmb3JtYCB0byBgRm9ybURhdGFg
LCBgQXJyYXkuZnJvbSgpYCB0byBjb252ZXJ0IHRvIGFuIGFycmF5LgpDb2xs
ZWN0IHRoZSBvYmplY3QgZnJvbSB0aGUgYXJyYXksIHVzaW5nIGBBcnJheS5w
cm90b3R5cGUucmVkdWNlKClgLgoKYGBganMKY29uc3QgZm9ybVRvT2JqZWN0
ID0gZm9ybSA9PgogIEFycmF5LmZyb20obmV3IEZvcm1EYXRhKGZvcm0pKS5y
ZWR1Y2UoCiAgICAoYWNjLCBba2V5LCB2YWx1ZV0pID0+ICh7CiAgICAgIC4u
LmFjYywKICAgICAgW2tleV06IHZhbHVlCiAgICB9KSwKICAgIHt9CiAgKTsK
YGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+Cgpg
YGBqcwpmb3JtVG9PYmplY3QoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Zv
cm0nKSk7IC8vIHsgZW1haWw6ICd0ZXN0QGVtYWlsLmNvbScsIG5hbWU6ICdU
ZXN0IE5hbWUnIH0KYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8g
dG9wXSgjY29udGVudHMpCgojIyMgZ2V0SW1hZ2VzCgpGZXRjaGVzIGFsbCBp
bWFnZXMgZnJvbSB3aXRoaW4gYW4gZWxlbWVudCBhbmQgcHV0cyB0aGVtIGlu
dG8gYW4gYXJyYXkKClVzZSBgRWxlbWVudC5wcm90b3R5cGUuZ2V0RWxlbWVu
dHNCeVRhZ05hbWUoKWAgdG8gZmV0Y2ggYWxsIGA8aW1nPmAgZWxlbWVudHMg
aW5zaWRlIHRoZSBwcm92aWRlZCBlbGVtZW50LCBgQXJyYXkucHJvdG90eXBl
Lm1hcCgpYCB0byBtYXAgZXZlcnkgYHNyY2AgYXR0cmlidXRlIG9mIHRoZWly
IHJlc3BlY3RpdmUgYDxpbWc+YCBlbGVtZW50LCB0aGVuIGNyZWF0ZSBhIGBT
ZXRgIHRvIGVsaW1pbmF0ZSBkdXBsaWNhdGVzIGFuZCByZXR1cm4gdGhlIGFy
cmF5LgoKYGBganMKY29uc3QgZ2V0SW1hZ2VzID0gKGVsLCBpbmNsdWRlRHVw
bGljYXRlcyA9IGZhbHNlKSA9PiB7CiAgY29uc3QgaW1hZ2VzID0gWy4uLmVs
LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdpbWcnKV0ubWFwKGltZyA9PiBpbWcu
Z2V0QXR0cmlidXRlKCdzcmMnKSk7CiAgcmV0dXJuIGluY2x1ZGVEdXBsaWNh
dGVzID8gaW1hZ2VzIDogWy4uLm5ldyBTZXQoaW1hZ2VzKV07Cn07CmBgYAoK
PGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMK
Z2V0SW1hZ2VzKGRvY3VtZW50LCB0cnVlKTsgLy8gWydpbWFnZTEuanBnJywg
J2ltYWdlMi5wbmcnLCAnaW1hZ2UxLnBuZycsICcuLi4nXQpnZXRJbWFnZXMo
ZG9jdW1lbnQsIGZhbHNlKTsgLy8gWydpbWFnZTEuanBnJywgJ2ltYWdlMi5w
bmcnLCAnLi4uJ10KYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8g
dG9wXSgjY29udGVudHMpCgojIyMgZ2V0U2Nyb2xsUG9zaXRpb24KClJldHVy
bnMgdGhlIHNjcm9sbCBwb3NpdGlvbiBvZiB0aGUgY3VycmVudCBwYWdlLgoK
VXNlIGBwYWdlWE9mZnNldGAgYW5kIGBwYWdlWU9mZnNldGAgaWYgdGhleSBh
cmUgZGVmaW5lZCwgb3RoZXJ3aXNlIGBzY3JvbGxMZWZ0YCBhbmQgYHNjcm9s
bFRvcGAuCllvdSBjYW4gb21pdCBgZWxgIHRvIHVzZSBhIGRlZmF1bHQgdmFs
dWUgb2YgYHdpbmRvd2AuCgpgYGBqcwpjb25zdCBnZXRTY3JvbGxQb3NpdGlv
biA9IChlbCA9IHdpbmRvdykgPT4gKHsKICB4OiBlbC5wYWdlWE9mZnNldCAh
PT0gdW5kZWZpbmVkID8gZWwucGFnZVhPZmZzZXQgOiBlbC5zY3JvbGxMZWZ0
LAogIHk6IGVsLnBhZ2VZT2Zmc2V0ICE9PSB1bmRlZmluZWQgPyBlbC5wYWdl
WU9mZnNldCA6IGVsLnNjcm9sbFRvcAp9KTsKYGBgCgo8ZGV0YWlscz4KPHN1
bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpnZXRTY3JvbGxQb3Np
dGlvbigpOyAvLyB7eDogMCwgeTogMjAwfQpgYGAKPC9kZXRhaWxzPgoKPGJy
PlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBnZXRTdHlsZQoK
UmV0dXJucyB0aGUgdmFsdWUgb2YgYSBDU1MgcnVsZSBmb3IgdGhlIHNwZWNp
ZmllZCBlbGVtZW50LgoKVXNlIGBXaW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSgp
YCB0byBnZXQgdGhlIHZhbHVlIG9mIHRoZSBDU1MgcnVsZSBmb3IgdGhlIHNw
ZWNpZmllZCBlbGVtZW50LgoKYGBganMKY29uc3QgZ2V0U3R5bGUgPSAoZWws
IHJ1bGVOYW1lKSA9PiBnZXRDb21wdXRlZFN0eWxlKGVsKVtydWxlTmFtZV07
CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoK
YGBganMKZ2V0U3R5bGUoZG9jdW1lbnQucXVlcnlTZWxlY3RvcigncCcpLCAn
Zm9udC1zaXplJyk7IC8vICcxNnB4JwpgYGAKPC9kZXRhaWxzPgoKPGJyPlvi
rIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBoYXNDbGFzcwoKUmV0
dXJucyBgdHJ1ZWAgaWYgdGhlIGVsZW1lbnQgaGFzIHRoZSBzcGVjaWZpZWQg
Y2xhc3MsIGBmYWxzZWAgb3RoZXJ3aXNlLgoKVXNlIGBlbGVtZW50LmNsYXNz
TGlzdC5jb250YWlucygpYCB0byBjaGVjayBpZiB0aGUgZWxlbWVudCBoYXMg
dGhlIHNwZWNpZmllZCBjbGFzcy4KCmBgYGpzCmNvbnN0IGhhc0NsYXNzID0g
KGVsLCBjbGFzc05hbWUpID0+IGVsLmNsYXNzTGlzdC5jb250YWlucyhjbGFz
c05hbWUpOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3Vt
bWFyeT4KCmBgYGpzCmhhc0NsYXNzKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Io
J3Auc3BlY2lhbCcpLCAnc3BlY2lhbCcpOyAvLyB0cnVlCmBgYAo8L2RldGFp
bHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGhh
c2hCcm93c2VyICFbYWR2YW5jZWRdKC9hZHZhbmNlZC5zdmcpCgpDcmVhdGVz
IGEgaGFzaCBmb3IgYSB2YWx1ZSB1c2luZyB0aGUgW1NIQS0yNTZdKGh0dHBz
Oi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1NIQS0yKSBhbGdvcml0aG0uIFJl
dHVybnMgYSBwcm9taXNlLgoKVXNlIHRoZSBbU3VidGxlQ3J5cHRvXShodHRw
czovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkv
U3VidGxlQ3J5cHRvKSBBUEkgdG8gY3JlYXRlIGEgaGFzaCBmb3IgdGhlIGdp
dmVuIHZhbHVlLgoKYGBganMKY29uc3QgaGFzaEJyb3dzZXIgPSB2YWwgPT4K
ICBjcnlwdG8uc3VidGxlLmRpZ2VzdCgnU0hBLTI1NicsIG5ldyBUZXh0RW5j
b2RlcigndXRmLTgnKS5lbmNvZGUodmFsKSkudGhlbihoID0+IHsKICAgIGxl
dCBoZXhlcyA9IFtdLAogICAgICB2aWV3ID0gbmV3IERhdGFWaWV3KGgpOwog
ICAgZm9yIChsZXQgaSA9IDA7IGkgPCB2aWV3LmJ5dGVMZW5ndGg7IGkgKz0g
NCkKICAgICAgaGV4ZXMucHVzaCgoJzAwMDAwMDAwJyArIHZpZXcuZ2V0VWlu
dDMyKGkpLnRvU3RyaW5nKDE2KSkuc2xpY2UoLTgpKTsKICAgIHJldHVybiBo
ZXhlcy5qb2luKCcnKTsKICB9KTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+
RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpoYXNoQnJvd3NlcihKU09OLnN0
cmluZ2lmeSh7IGE6ICdhJywgYjogWzEsIDIsIDMsIDRdLCBmb286IHsgYzog
J2JhcicgfSB9KSkudGhlbihjb25zb2xlLmxvZyk7IC8vICcwNGFhMTA2Mjc5
ZjU5NzdmNTlmOTA2N2ZhOTcxMmFmYzRhZWRjNmY1ODYyYThkZWZjMzQ1NTJk
OGM3MjA2MzkzJwpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0
b3BdKCNjb250ZW50cykKCiMjIyBoaWRlCgpIaWRlcyBhbGwgdGhlIGVsZW1l
bnRzIHNwZWNpZmllZC4KClVzZSBgTm9kZUxpc3QucHJvdG90eXBlLmZvckVh
Y2goKWAgdG8gYXBwbHkgYGRpc3BsYXk6IG5vbmVgIHRvIGVhY2ggZWxlbWVu
dCBzcGVjaWZpZWQuCgpgYGBqcwpjb25zdCBoaWRlID0gKC4uLmVsKSA9PiBb
Li4uZWxdLmZvckVhY2goZSA9PiAoZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUn
KSk7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5
PgoKYGBganMKaGlkZShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdpbWcn
KSk7IC8vIEhpZGVzIGFsbCA8aW1nPiBlbGVtZW50cyBvbiB0aGUgcGFnZQpg
YGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50
cykKCiMjIyBodHRwc1JlZGlyZWN0CgpSZWRpcmVjdHMgdGhlIHBhZ2UgdG8g
SFRUUFMgaWYgaXRzIGN1cnJlbnRseSBpbiBIVFRQLiBBbHNvLCBwcmVzc2lu
ZyB0aGUgYmFjayBidXR0b24gZG9lc24ndCB0YWtlIGl0IGJhY2sgdG8gdGhl
IEhUVFAgcGFnZSBhcyBpdHMgcmVwbGFjZWQgaW4gdGhlIGhpc3RvcnkuCgpV
c2UgYGxvY2F0aW9uLnByb3RvY29sYCB0byBnZXQgdGhlIHByb3RvY29sIGN1
cnJlbnRseSBiZWluZyB1c2VkLiBJZiBpdCdzIG5vdCBIVFRQUywgdXNlIGBs
b2NhdGlvbi5yZXBsYWNlKClgIHRvIHJlcGxhY2UgdGhlIGV4aXN0aW5nIHBh
Z2Ugd2l0aCB0aGUgSFRUUFMgdmVyc2lvbiBvZiB0aGUgcGFnZS4gVXNlIGBs
b2NhdGlvbi5ocmVmYCB0byBnZXQgdGhlIGZ1bGwgYWRkcmVzcywgc3BsaXQg
aXQgd2l0aCBgU3RyaW5nLnByb3RvdHlwZS5zcGxpdCgpYCBhbmQgcmVtb3Zl
IHRoZSBwcm90b2NvbCBwYXJ0IG9mIHRoZSBVUkwuCgpgYGBqcwpjb25zdCBo
dHRwc1JlZGlyZWN0ID0gKCkgPT4gewogIGlmIChsb2NhdGlvbi5wcm90b2Nv
bCAhPT0gJ2h0dHBzOicpIGxvY2F0aW9uLnJlcGxhY2UoJ2h0dHBzOi8vJyAr
IGxvY2F0aW9uLmhyZWYuc3BsaXQoJy8vJylbMV0pOwp9OwpgYGAKCjxkZXRh
aWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmh0dHBz
UmVkaXJlY3QoKTsgLy8gSWYgeW91IGFyZSBvbiBodHRwOi8vbXlkb21haW4u
Y29tLCB5b3UgYXJlIHJlZGlyZWN0ZWQgdG8gaHR0cHM6Ly9teWRvbWFpbi5j
b20KYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29u
dGVudHMpCgojIyMgaW5zZXJ0QWZ0ZXIKCkluc2VydHMgYW4gSFRNTCBzdHJp
bmcgYWZ0ZXIgdGhlIGVuZCBvZiB0aGUgc3BlY2lmaWVkIGVsZW1lbnQuCgpV
c2UgYGVsLmluc2VydEFkamFjZW50SFRNTCgpYCB3aXRoIGEgcG9zaXRpb24g
b2YgYCdhZnRlcmVuZCdgIHRvIHBhcnNlIGBodG1sU3RyaW5nYCBhbmQgaW5z
ZXJ0IGl0IGFmdGVyIHRoZSBlbmQgb2YgYGVsYC4KCmBgYGpzCmNvbnN0IGlu
c2VydEFmdGVyID0gKGVsLCBodG1sU3RyaW5nKSA9PiBlbC5pbnNlcnRBZGph
Y2VudEhUTUwoJ2FmdGVyZW5kJywgaHRtbFN0cmluZyk7CmBgYAoKPGRldGFp
bHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKaW5zZXJ0
QWZ0ZXIoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ215SWQnKSwgJzxwPmFm
dGVyPC9wPicpOyAvLyA8ZGl2IGlkPSJteUlkIj4uLi48L2Rpdj4gPHA+YWZ0
ZXI8L3A+CmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0o
I2NvbnRlbnRzKQoKIyMjIGluc2VydEJlZm9yZQoKSW5zZXJ0cyBhbiBIVE1M
IHN0cmluZyBiZWZvcmUgdGhlIHN0YXJ0IG9mIHRoZSBzcGVjaWZpZWQgZWxl
bWVudC4KClVzZSBgZWwuaW5zZXJ0QWRqYWNlbnRIVE1MKClgIHdpdGggYSBw
b3NpdGlvbiBvZiBgJ2JlZm9yZWJlZ2luJ2AgdG8gcGFyc2UgYGh0bWxTdHJp
bmdgIGFuZCBpbnNlcnQgaXQgYmVmb3JlIHRoZSBzdGFydCBvZiBgZWxgLgoK
YGBganMKY29uc3QgaW5zZXJ0QmVmb3JlID0gKGVsLCBodG1sU3RyaW5nKSA9
PiBlbC5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWJlZ2luJywgaHRtbFN0
cmluZyk7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1t
YXJ5PgoKYGBganMKaW5zZXJ0QmVmb3JlKGRvY3VtZW50LmdldEVsZW1lbnRC
eUlkKCdteUlkJyksICc8cD5iZWZvcmU8L3A+Jyk7IC8vIDxwPmJlZm9yZTwv
cD4gPGRpdiBpZD0ibXlJZCI+Li4uPC9kaXY+CmBgYAo8L2RldGFpbHM+Cgo8
YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGlzQnJvd3Nl
clRhYkZvY3VzZWQKClJldHVybnMgYHRydWVgIGlmIHRoZSBicm93c2VyIHRh
YiBvZiB0aGUgcGFnZSBpcyBmb2N1c2VkLCBgZmFsc2VgIG90aGVyd2lzZS4K
ClVzZSB0aGUgYERvY3VtZW50LmhpZGRlbmAgcHJvcGVydHksIGludHJvZHVj
ZWQgYnkgdGhlIFBhZ2UgVmlzaWJpbGl0eSBBUEkgdG8gY2hlY2sgaWYgdGhl
IGJyb3dzZXIgdGFiIG9mIHRoZSBwYWdlIGlzIHZpc2libGUgb3IgaGlkZGVu
LgoKYGBganMKY29uc3QgaXNCcm93c2VyVGFiRm9jdXNlZCA9ICgpID0+ICFk
b2N1bWVudC5oaWRkZW47CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1w
bGVzPC9zdW1tYXJ5PgoKYGBganMKaXNCcm93c2VyVGFiRm9jdXNlZCgpOyAv
LyB0cnVlCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0o
I2NvbnRlbnRzKQoKIyMjIG5vZGVMaXN0VG9BcnJheQoKQ29udmVydHMgYSBg
Tm9kZUxpc3RgIHRvIGFuIGFycmF5LgoKVXNlIHNwcmVhZCBvcGVyYXRvciBp
bnNpZGUgbmV3IGFycmF5IHRvIGNvbnZlcnQgYSBgTm9kZUxpc3RgIHRvIGFu
IGFycmF5LgoKYGBganMKY29uc3Qgbm9kZUxpc3RUb0FycmF5ID0gbm9kZUxp
c3QgPT4gWy4uLm5vZGVMaXN0XTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+
RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpub2RlTGlzdFRvQXJyYXkoZG9j
dW1lbnQuY2hpbGROb2Rlcyk7IC8vIFsgPCFET0NUWVBFIGh0bWw+LCBodG1s
IF0KYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29u
dGVudHMpCgojIyMgb2JzZXJ2ZU11dGF0aW9ucyAhW2FkdmFuY2VkXSgvYWR2
YW5jZWQuc3ZnKQoKUmV0dXJucyBhIG5ldyBNdXRhdGlvbk9ic2VydmVyIGFu
ZCBydW5zIHRoZSBwcm92aWRlZCBjYWxsYmFjayBmb3IgZWFjaCBtdXRhdGlv
biBvbiB0aGUgc3BlY2lmaWVkIGVsZW1lbnQuCgpVc2UgYSBbYE11dGF0aW9u
T2JzZXJ2ZXJgXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1V
Uy9kb2NzL1dlYi9BUEkvTXV0YXRpb25PYnNlcnZlcikgdG8gb2JzZXJ2ZSBt
dXRhdGlvbnMgb24gdGhlIGdpdmVuIGVsZW1lbnQuClVzZSBgQXJyYXkucHJv
dG90eXBlLmZvckVhY2goKWAgdG8gcnVuIHRoZSBjYWxsYmFjayBmb3IgZWFj
aCBtdXRhdGlvbiB0aGF0IGlzIG9ic2VydmVkLgpPbWl0IHRoZSB0aGlyZCBh
cmd1bWVudCwgYG9wdGlvbnNgLCB0byB1c2UgdGhlIGRlZmF1bHQgW29wdGlv
bnNdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3Mv
V2ViL0FQSS9NdXRhdGlvbk9ic2VydmVyI011dGF0aW9uT2JzZXJ2ZXJJbml0
KSAoYWxsIGB0cnVlYCkuCgpgYGBqcwpjb25zdCBvYnNlcnZlTXV0YXRpb25z
ID0gKGVsZW1lbnQsIGNhbGxiYWNrLCBvcHRpb25zKSA9PiB7CiAgY29uc3Qg
b2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcihtdXRhdGlvbnMgPT4g
bXV0YXRpb25zLmZvckVhY2gobSA9PiBjYWxsYmFjayhtKSkpOwogIG9ic2Vy
dmVyLm9ic2VydmUoCiAgICBlbGVtZW50LAogICAgT2JqZWN0LmFzc2lnbigK
ICAgICAgewogICAgICAgIGNoaWxkTGlzdDogdHJ1ZSwKICAgICAgICBhdHRy
aWJ1dGVzOiB0cnVlLAogICAgICAgIGF0dHJpYnV0ZU9sZFZhbHVlOiB0cnVl
LAogICAgICAgIGNoYXJhY3RlckRhdGE6IHRydWUsCiAgICAgICAgY2hhcmFj
dGVyRGF0YU9sZFZhbHVlOiB0cnVlLAogICAgICAgIHN1YnRyZWU6IHRydWUK
ICAgICAgfSwKICAgICAgb3B0aW9ucwogICAgKQogICk7CiAgcmV0dXJuIG9i
c2VydmVyOwp9OwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwv
c3VtbWFyeT4KCmBgYGpzCmNvbnN0IG9icyA9IG9ic2VydmVNdXRhdGlvbnMo
ZG9jdW1lbnQsIGNvbnNvbGUubG9nKTsgLy8gTG9ncyBhbGwgbXV0YXRpb25z
IHRoYXQgaGFwcGVuIG9uIHRoZSBwYWdlCm9icy5kaXNjb25uZWN0KCk7IC8v
IERpc2Nvbm5lY3RzIHRoZSBvYnNlcnZlciBhbmQgc3RvcHMgbG9nZ2luZyBt
dXRhdGlvbnMgb24gdGhlIHBhZ2UKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyG
IEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgb2ZmCgpSZW1vdmVzIGFu
IGV2ZW50IGxpc3RlbmVyIGZyb20gYW4gZWxlbWVudC4KClVzZSBgRXZlbnRU
YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcigpYCB0byByZW1vdmUgYW4gZXZl
bnQgbGlzdGVuZXIgZnJvbSBhbiBlbGVtZW50LiAKT21pdCB0aGUgZm91cnRo
IGFyZ3VtZW50IGBvcHRzYCB0byB1c2UgYGZhbHNlYCBvciBzcGVjaWZ5IGl0
IGJhc2VkIG9uIHRoZSBvcHRpb25zIHVzZWQgd2hlbiB0aGUgZXZlbnQgbGlz
dGVuZXIgd2FzIGFkZGVkLgoKYGBganMKY29uc3Qgb2ZmID0gKGVsLCBldnQs
IGZuLCBvcHRzID0gZmFsc2UpID0+IGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIo
ZXZ0LCBmbiwgb3B0cyk7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1w
bGVzPC9zdW1tYXJ5PgoKYGBganMKY29uc3QgZm4gPSAoKSA9PiBjb25zb2xl
LmxvZygnIScpOwpkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoJ2Ns
aWNrJywgZm4pOwpvZmYoZG9jdW1lbnQuYm9keSwgJ2NsaWNrJywgZm4pOyAv
LyBubyBsb25nZXIgbG9ncyAnIScgdXBvbiBjbGlja2luZyBvbiB0aGUgcGFn
ZQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250
ZW50cykKCiMjIyBvbgoKQWRkcyBhbiBldmVudCBsaXN0ZW5lciB0byBhbiBl
bGVtZW50IHdpdGggdGhlIGFiaWxpdHkgdG8gdXNlIGV2ZW50IGRlbGVnYXRp
b24uCgpVc2UgYEV2ZW50VGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoKWAgdG8g
YWRkIGFuIGV2ZW50IGxpc3RlbmVyIHRvIGFuIGVsZW1lbnQuIElmIHRoZXJl
IGlzIGEgYHRhcmdldGAgcHJvcGVydHkgc3VwcGxpZWQgdG8gdGhlIG9wdGlv
bnMgb2JqZWN0LCBlbnN1cmUgdGhlIGV2ZW50IHRhcmdldCBtYXRjaGVzIHRo
ZSB0YXJnZXQgc3BlY2lmaWVkIGFuZCB0aGVuIGludm9rZSB0aGUgY2FsbGJh
Y2sgYnkgc3VwcGx5aW5nIHRoZSBjb3JyZWN0IGB0aGlzYCBjb250ZXh0LgpS
ZXR1cm5zIGEgcmVmZXJlbmNlIHRvIHRoZSBjdXN0b20gZGVsZWdhdG9yIGZ1
bmN0aW9uLCBpbiBvcmRlciB0byBiZSBwb3NzaWJsZSB0byB1c2Ugd2l0aCBb
YG9mZmBdKCNvZmYpLgpPbWl0IGBvcHRzYCB0byBkZWZhdWx0IHRvIG5vbi1k
ZWxlZ2F0aW9uIGJlaGF2aW9yIGFuZCBldmVudCBidWJibGluZy4KCmBgYGpz
CmNvbnN0IG9uID0gKGVsLCBldnQsIGZuLCBvcHRzID0ge30pID0+IHsKICBj
b25zdCBkZWxlZ2F0b3JGbiA9IGUgPT4gZS50YXJnZXQubWF0Y2hlcyhvcHRz
LnRhcmdldCkgJiYgZm4uY2FsbChlLnRhcmdldCwgZSk7CiAgZWwuYWRkRXZl
bnRMaXN0ZW5lcihldnQsIG9wdHMudGFyZ2V0ID8gZGVsZWdhdG9yRm4gOiBm
biwgb3B0cy5vcHRpb25zIHx8IGZhbHNlKTsKICBpZiAob3B0cy50YXJnZXQp
IHJldHVybiBkZWxlZ2F0b3JGbjsKfTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1h
cnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpjb25zdCBmbiA9ICgpID0+
IGNvbnNvbGUubG9nKCchJyk7Cm9uKGRvY3VtZW50LmJvZHksICdjbGljaycs
IGZuKTsgLy8gbG9ncyAnIScgdXBvbiBjbGlja2luZyB0aGUgYm9keQpvbihk
b2N1bWVudC5ib2R5LCAnY2xpY2snLCBmbiwgeyB0YXJnZXQ6ICdwJyB9KTsg
Ly8gbG9ncyAnIScgdXBvbiBjbGlja2luZyBhIGBwYCBlbGVtZW50IGNoaWxk
IG9mIHRoZSBib2R5Cm9uKGRvY3VtZW50LmJvZHksICdjbGljaycsIGZuLCB7
IG9wdGlvbnM6IHRydWUgfSk7IC8vIHVzZSBjYXB0dXJpbmcgaW5zdGVhZCBv
ZiBidWJibGluZwpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0
b3BdKCNjb250ZW50cykKCiMjIyBvblVzZXJJbnB1dENoYW5nZSAhW2FkdmFu
Y2VkXSgvYWR2YW5jZWQuc3ZnKQoKUnVuIHRoZSBjYWxsYmFjayB3aGVuZXZl
ciB0aGUgdXNlciBpbnB1dCB0eXBlIGNoYW5nZXMgKGBtb3VzZWAgb3IgYHRv
dWNoYCkuIFVzZWZ1bCBmb3IgZW5hYmxpbmcvZGlzYWJsaW5nIGNvZGUgZGVw
ZW5kaW5nIG9uIHRoZSBpbnB1dCBkZXZpY2UuIFRoaXMgcHJvY2VzcyBpcyBk
eW5hbWljIGFuZCB3b3JrcyB3aXRoIGh5YnJpZCBkZXZpY2VzIChlLmcuIHRv
dWNoc2NyZWVuIGxhcHRvcHMpLgoKVXNlIHR3byBldmVudCBsaXN0ZW5lcnMu
IEFzc3VtZSBgbW91c2VgIGlucHV0IGluaXRpYWxseSBhbmQgYmluZCBhIGB0
b3VjaHN0YXJ0YCBldmVudCBsaXN0ZW5lciB0byB0aGUgZG9jdW1lbnQuIApP
biBgdG91Y2hzdGFydGAsIGFkZCBhIGBtb3VzZW1vdmVgIGV2ZW50IGxpc3Rl
bmVyIHRvIGxpc3RlbiBmb3IgdHdvIGNvbnNlY3V0aXZlIGBtb3VzZW1vdmVg
IGV2ZW50cyBmaXJpbmcgd2l0aGluIDIwbXMsIHVzaW5nIGBwZXJmb3JtYW5j
ZS5ub3coKWAuClJ1biB0aGUgY2FsbGJhY2sgd2l0aCB0aGUgaW5wdXQgdHlw
ZSBhcyBhbiBhcmd1bWVudCBpbiBlaXRoZXIgb2YgdGhlc2Ugc2l0dWF0aW9u
cy4KCmBgYGpzCmNvbnN0IG9uVXNlcklucHV0Q2hhbmdlID0gY2FsbGJhY2sg
PT4gewogIGxldCB0eXBlID0gJ21vdXNlJywKICAgIGxhc3RUaW1lID0gMDsK
ICBjb25zdCBtb3VzZW1vdmVIYW5kbGVyID0gKCkgPT4gewogICAgY29uc3Qg
bm93ID0gcGVyZm9ybWFuY2Uubm93KCk7CiAgICBpZiAobm93IC0gbGFzdFRp
bWUgPCAyMCkKICAgICAgKHR5cGUgPSAnbW91c2UnKSwgY2FsbGJhY2sodHlw
ZSksIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScs
IG1vdXNlbW92ZUhhbmRsZXIpOwogICAgbGFzdFRpbWUgPSBub3c7CiAgfTsK
ICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgKCkg
PT4gewogICAgaWYgKHR5cGUgPT09ICd0b3VjaCcpIHJldHVybjsKICAgICh0
eXBlID0gJ3RvdWNoJyksIGNhbGxiYWNrKHR5cGUpLCBkb2N1bWVudC5hZGRF
dmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBtb3VzZW1vdmVIYW5kbGVyKTsK
ICB9KTsKfTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1
bW1hcnk+CgpgYGBqcwpvblVzZXJJbnB1dENoYW5nZSh0eXBlID0+IHsKICBj
b25zb2xlLmxvZygnVGhlIHVzZXIgaXMgbm93IHVzaW5nJywgdHlwZSwgJ2Fz
IGFuIGlucHV0IG1ldGhvZC4nKTsKfSk7CmBgYAo8L2RldGFpbHM+Cgo8YnI+
W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHByZWZpeAoKUmV0
dXJucyB0aGUgcHJlZml4ZWQgdmVyc2lvbiAoaWYgbmVjZXNzYXJ5KSBvZiBh
IENTUyBwcm9wZXJ0eSB0aGF0IHRoZSBicm93c2VyIHN1cHBvcnRzLgoKVXNl
IGBBcnJheS5wcm90b3R5cGUuZmluZEluZGV4KClgIG9uIGFuIGFycmF5IG9m
IHZlbmRvciBwcmVmaXggc3RyaW5ncyB0byB0ZXN0IGlmIGBkb2N1bWVudC5i
b2R5YCBoYXMgb25lIG9mIHRoZW0gZGVmaW5lZCBpbiBpdHMgYENTU1N0eWxl
RGVjbGFyYXRpb25gIG9iamVjdCwgb3RoZXJ3aXNlIHJldHVybiBgbnVsbGAu
ClVzZSBgU3RyaW5nLnByb3RvdHlwZS5jaGFyQXQoKWAgYW5kIGBTdHJpbmcu
cHJvdG90eXBlLnRvVXBwZXJDYXNlKClgIHRvIGNhcGl0YWxpemUgdGhlIHBy
b3BlcnR5LCB3aGljaCB3aWxsIGJlIGFwcGVuZGVkIHRvIHRoZSB2ZW5kb3Ig
cHJlZml4IHN0cmluZy4KCmBgYGpzCmNvbnN0IHByZWZpeCA9IHByb3AgPT4g
ewogIGNvbnN0IGNhcGl0YWxpemVkUHJvcCA9IHByb3AuY2hhckF0KDApLnRv
VXBwZXJDYXNlKCkgKyBwcm9wLnNsaWNlKDEpOwogIGNvbnN0IHByZWZpeGVz
ID0gWycnLCAnd2Via2l0JywgJ21veicsICdtcycsICdvJ107CiAgY29uc3Qg
aSA9IHByZWZpeGVzLmZpbmRJbmRleCgKICAgIHByZWZpeCA9PiB0eXBlb2Yg
ZG9jdW1lbnQuYm9keS5zdHlsZVtwcmVmaXggPyBwcmVmaXggKyBjYXBpdGFs
aXplZFByb3AgOiBwcm9wXSAhPT0gJ3VuZGVmaW5lZCcKICApOwogIHJldHVy
biBpICE9PSAtMSA/IChpID09PSAwID8gcHJvcCA6IHByZWZpeGVzW2ldICsg
Y2FwaXRhbGl6ZWRQcm9wKSA6IG51bGw7Cn07CmBgYAoKPGRldGFpbHM+Cjxz
dW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKcHJlZml4KCdhcHBl
YXJhbmNlJyk7IC8vICdhcHBlYXJhbmNlJyBvbiBhIHN1cHBvcnRlZCBicm93
c2VyLCBvdGhlcndpc2UgJ3dlYmtpdEFwcGVhcmFuY2UnLCAnbW96QXBwZWFy
YW5jZScsICdtc0FwcGVhcmFuY2UnIG9yICdvQXBwZWFyYW5jZScKYGBgCjwv
ZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgoj
IyMgcmVjb3JkQW5pbWF0aW9uRnJhbWVzCgpJbnZva2VzIHRoZSBwcm92aWRl
ZCBjYWxsYmFjayBvbiBlYWNoIGFuaW1hdGlvbiBmcmFtZS4KClVzZSByZWN1
cnNpb24uIApQcm92aWRlZCB0aGF0IGBydW5uaW5nYCBpcyBgdHJ1ZWAsIGNv
bnRpbnVlIGludm9raW5nIGB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1l
KClgIHdoaWNoIGludm9rZXMgdGhlIHByb3ZpZGVkIGNhbGxiYWNrLiAKUmV0
dXJuIGFuIG9iamVjdCB3aXRoIHR3byBtZXRob2RzIGBzdGFydGAgYW5kIGBz
dG9wYCB0byBhbGxvdyBtYW51YWwgY29udHJvbCBvZiB0aGUgcmVjb3JkaW5n
LiAKT21pdCB0aGUgc2Vjb25kIGFyZ3VtZW50LCBgYXV0b1N0YXJ0YCwgdG8g
aW1wbGljaXRseSBjYWxsIGBzdGFydGAgd2hlbiB0aGUgZnVuY3Rpb24gaXMg
aW52b2tlZC4KCmBgYGpzCmNvbnN0IHJlY29yZEFuaW1hdGlvbkZyYW1lcyA9
IChjYWxsYmFjaywgYXV0b1N0YXJ0ID0gdHJ1ZSkgPT4gewogIGxldCBydW5u
aW5nID0gdHJ1ZSwKICAgIHJhZjsKICBjb25zdCBzdG9wID0gKCkgPT4gewog
ICAgcnVubmluZyA9IGZhbHNlOwogICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUo
cmFmKTsKICB9OwogIGNvbnN0IHN0YXJ0ID0gKCkgPT4gewogICAgcnVubmlu
ZyA9IHRydWU7CiAgICBydW4oKTsKICB9OwogIGNvbnN0IHJ1biA9ICgpID0+
IHsKICAgIHJhZiA9IHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7CiAg
ICAgIGNhbGxiYWNrKCk7CiAgICAgIGlmIChydW5uaW5nKSBydW4oKTsKICAg
IH0pOwogIH07CiAgaWYgKGF1dG9TdGFydCkgc3RhcnQoKTsKICByZXR1cm4g
eyBzdGFydCwgc3RvcCB9Owp9OwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5F
eGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmNvbnN0IGNiID0gKCkgPT4gY29u
c29sZS5sb2coJ0FuaW1hdGlvbiBmcmFtZSBmaXJlZCcpOwpjb25zdCByZWNv
cmRlciA9IHJlY29yZEFuaW1hdGlvbkZyYW1lcyhjYik7IC8vIGxvZ3MgJ0Fu
aW1hdGlvbiBmcmFtZSBmaXJlZCcgb24gZWFjaCBhbmltYXRpb24gZnJhbWUK
cmVjb3JkZXIuc3RvcCgpOyAvLyBzdG9wcyBsb2dnaW5nCnJlY29yZGVyLnN0
YXJ0KCk7IC8vIHN0YXJ0cyBhZ2Fpbgpjb25zdCByZWNvcmRlcjIgPSByZWNv
cmRBbmltYXRpb25GcmFtZXMoY2IsIGZhbHNlKTsgLy8gYHN0YXJ0YCBuZWVk
cyB0byBiZSBleHBsaWNpdGx5IGNhbGxlZCB0byBiZWdpbiByZWNvcmRpbmcg
ZnJhbWVzCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0o
I2NvbnRlbnRzKQoKIyMjIHJlZGlyZWN0CgpSZWRpcmVjdHMgdG8gYSBzcGVj
aWZpZWQgVVJMLgoKVXNlIGB3aW5kb3cubG9jYXRpb24uaHJlZmAgb3IgYHdp
bmRvdy5sb2NhdGlvbi5yZXBsYWNlKClgIHRvIHJlZGlyZWN0IHRvIGB1cmxg
LgpQYXNzIGEgc2Vjb25kIGFyZ3VtZW50IHRvIHNpbXVsYXRlIGEgbGluayBj
bGljayAoYHRydWVgIC0gZGVmYXVsdCkgb3IgYW4gSFRUUCByZWRpcmVjdCAo
YGZhbHNlYCkuCgpgYGBqcwpjb25zdCByZWRpcmVjdCA9ICh1cmwsIGFzTGlu
ayA9IHRydWUpID0+CiAgYXNMaW5rID8gKHdpbmRvdy5sb2NhdGlvbi5ocmVm
ID0gdXJsKSA6IHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHVybCk7CmBgYAoK
PGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMK
cmVkaXJlY3QoJ2h0dHBzOi8vZ29vZ2xlLmNvbScpOwpgYGAKPC9kZXRhaWxz
PgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBydW5B
c3luYyAhW2FkdmFuY2VkXSgvYWR2YW5jZWQuc3ZnKQoKUnVucyBhIGZ1bmN0
aW9uIGluIGEgc2VwYXJhdGUgdGhyZWFkIGJ5IHVzaW5nIGEgW1dlYiBXb3Jr
ZXJdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3Mv
V2ViL0FQSS9XZWJfV29ya2Vyc19BUEkvVXNpbmdfd2ViX3dvcmtlcnMpLCBh
bGxvd2luZyBsb25nIHJ1bm5pbmcgZnVuY3Rpb25zIHRvIG5vdCBibG9jayB0
aGUgVUkuCgpDcmVhdGUgYSBuZXcgYFdvcmtlcmAgdXNpbmcgYSBgQmxvYmAg
b2JqZWN0IFVSTCwgdGhlIGNvbnRlbnRzIG9mIHdoaWNoIHNob3VsZCBiZSB0
aGUgc3RyaW5naWZpZWQgdmVyc2lvbiBvZiB0aGUgc3VwcGxpZWQgZnVuY3Rp
b24uCkltbWVkaWF0ZWx5IHBvc3QgdGhlIHJldHVybiB2YWx1ZSBvZiBjYWxs
aW5nIHRoZSBmdW5jdGlvbiBiYWNrLgpSZXR1cm4gYSBwcm9taXNlLCBsaXN0
ZW5pbmcgZm9yIGBvbm1lc3NhZ2VgIGFuZCBgb25lcnJvcmAgZXZlbnRzIGFu
ZCByZXNvbHZpbmcgdGhlIGRhdGEgcG9zdGVkIGJhY2sgZnJvbSB0aGUgd29y
a2VyLCBvciB0aHJvd2luZyBhbiBlcnJvci4KCmBgYGpzCmNvbnN0IHJ1bkFz
eW5jID0gZm4gPT4gewogIGNvbnN0IHdvcmtlciA9IG5ldyBXb3JrZXIoCiAg
ICBVUkwuY3JlYXRlT2JqZWN0VVJMKG5ldyBCbG9iKFtgcG9zdE1lc3NhZ2Uo
KCR7Zm59KSgpKTtgXSksIHsKICAgICAgdHlwZTogJ2FwcGxpY2F0aW9uL2ph
dmFzY3JpcHQ7IGNoYXJzZXQ9dXRmLTgnCiAgICB9KQogICk7CiAgcmV0dXJu
IG5ldyBQcm9taXNlKChyZXMsIHJlaikgPT4gewogICAgd29ya2VyLm9ubWVz
c2FnZSA9ICh7IGRhdGEgfSkgPT4gewogICAgICByZXMoZGF0YSksIHdvcmtl
ci50ZXJtaW5hdGUoKTsKICAgIH07CiAgICB3b3JrZXIub25lcnJvciA9IGVy
ciA9PiB7CiAgICAgIHJlaihlcnIpLCB3b3JrZXIudGVybWluYXRlKCk7CiAg
ICB9OwogIH0pOwp9OwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxl
czwvc3VtbWFyeT4KCmBgYGpzCmNvbnN0IGxvbmdSdW5uaW5nRnVuY3Rpb24g
PSAoKSA9PiB7CiAgbGV0IHJlc3VsdCA9IDA7CiAgZm9yIChsZXQgaSA9IDA7
IGkgPCAxMDAwOyBpKyspCiAgICBmb3IgKGxldCBqID0gMDsgaiA8IDcwMDsg
aisrKSBmb3IgKGxldCBrID0gMDsgayA8IDMwMDsgaysrKSByZXN1bHQgPSBy
ZXN1bHQgKyBpICsgaiArIGs7CgogIHJldHVybiByZXN1bHQ7Cn07Ci8qCiAg
Tk9URTogU2luY2UgdGhlIGZ1bmN0aW9uIGlzIHJ1bm5pbmcgaW4gYSBkaWZm
ZXJlbnQgY29udGV4dCwgY2xvc3VyZXMgYXJlIG5vdCBzdXBwb3J0ZWQuCiAg
VGhlIGZ1bmN0aW9uIHN1cHBsaWVkIHRvIGBydW5Bc3luY2AgZ2V0cyBzdHJp
bmdpZmllZCwgc28gZXZlcnl0aGluZyBiZWNvbWVzIGxpdGVyYWwuCiAgQWxs
IHZhcmlhYmxlcyBhbmQgZnVuY3Rpb25zIG11c3QgYmUgZGVmaW5lZCBpbnNp
ZGUuCiovCnJ1bkFzeW5jKGxvbmdSdW5uaW5nRnVuY3Rpb24pLnRoZW4oY29u
c29sZS5sb2cpOyAvLyAyMDk2ODUwMDAwMDAKcnVuQXN5bmMoKCkgPT4gMTAg
KiogMykudGhlbihjb25zb2xlLmxvZyk7IC8vIDEwMDAKbGV0IG91dHNpZGVW
YXJpYWJsZSA9IDUwOwpydW5Bc3luYygoKSA9PiB0eXBlb2Ygb3V0c2lkZVZh
cmlhYmxlKS50aGVuKGNvbnNvbGUubG9nKTsgLy8gJ3VuZGVmaW5lZCcKYGBg
CjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMp
CgojIyMgc2Nyb2xsVG9Ub3AKClNtb290aC1zY3JvbGxzIHRvIHRoZSB0b3Ag
b2YgdGhlIHBhZ2UuCgpHZXQgZGlzdGFuY2UgZnJvbSB0b3AgdXNpbmcgYGRv
Y3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3BgIG9yIGBkb2N1bWVu
dC5ib2R5LnNjcm9sbFRvcGAuClNjcm9sbCBieSBhIGZyYWN0aW9uIG9mIHRo
ZSBkaXN0YW5jZSBmcm9tIHRoZSB0b3AuIFVzZSBgd2luZG93LnJlcXVlc3RB
bmltYXRpb25GcmFtZSgpYCB0byBhbmltYXRlIHRoZSBzY3JvbGxpbmcuCgpg
YGBqcwpjb25zdCBzY3JvbGxUb1RvcCA9ICgpID0+IHsKICBjb25zdCBjID0g
ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCB8fCBkb2N1bWVu
dC5ib2R5LnNjcm9sbFRvcDsKICBpZiAoYyA+IDApIHsKICAgIHdpbmRvdy5y
ZXF1ZXN0QW5pbWF0aW9uRnJhbWUoc2Nyb2xsVG9Ub3ApOwogICAgd2luZG93
LnNjcm9sbFRvKDAsIGMgLSBjIC8gOCk7CiAgfQp9OwpgYGAKCjxkZXRhaWxz
Pgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCnNjcm9sbFRv
VG9wKCk7CmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0o
I2NvbnRlbnRzKQoKIyMjIHNlcmlhbGl6ZUZvcm0KCkVuY29kZSBhIHNldCBv
ZiBmb3JtIGVsZW1lbnRzIGFzIGEgcXVlcnkgc3RyaW5nLgoKVXNlIHRoZSBg
Rm9ybURhdGFgIGNvbnN0cnVjdG9yIHRvIGNvbnZlcnQgdGhlIEhUTUwgYGZv
cm1gIHRvIGBGb3JtRGF0YWAsIGBBcnJheS5mcm9tKClgIHRvIGNvbnZlcnQg
dG8gYW4gYXJyYXksIHBhc3NpbmcgYSBtYXAgZnVuY3Rpb24gYXMgdGhlIHNl
Y29uZCBhcmd1bWVudC4KVXNlIGBBcnJheS5wcm90b3R5cGUubWFwKClgIGFu
ZCBgd2luZG93LmVuY29kZVVSSUNvbXBvbmVudCgpYCB0byBlbmNvZGUgZWFj
aCBmaWVsZCdzIHZhbHVlLgpVc2UgYEFycmF5LnByb3RvdHlwZS5qb2luKClg
IHdpdGggYXBwcm9wcmlhdGUgYXJndW1lbnMgdG8gcHJvZHVjZSBhbiBhcHBy
b3ByaWF0ZSBxdWVyeSBzdHJpbmcuCgpgYGBqcwpjb25zdCBzZXJpYWxpemVG
b3JtID0gZm9ybSA9PgogIEFycmF5LmZyb20obmV3IEZvcm1EYXRhKGZvcm0p
LCBmaWVsZCA9PiBmaWVsZC5tYXAoZW5jb2RlVVJJQ29tcG9uZW50KS5qb2lu
KCc9JykpLmpvaW4oJyYnKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhh
bXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpzZXJpYWxpemVGb3JtKGRvY3VtZW50
LnF1ZXJ5U2VsZWN0b3IoJyNmb3JtJykpOyAvLyBlbWFpbD10ZXN0JTQwZW1h
aWwuY29tJm5hbWU9VGVzdCUyME5hbWUKYGBgCjwvZGV0YWlscz4KCjxicj5b
4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgc2V0U3R5bGUKClNl
dHMgdGhlIHZhbHVlIG9mIGEgQ1NTIHJ1bGUgZm9yIHRoZSBzcGVjaWZpZWQg
ZWxlbWVudC4KClVzZSBgZWxlbWVudC5zdHlsZWAgdG8gc2V0IHRoZSB2YWx1
ZSBvZiB0aGUgQ1NTIHJ1bGUgZm9yIHRoZSBzcGVjaWZpZWQgZWxlbWVudCB0
byBgdmFsYC4KCmBgYGpzCmNvbnN0IHNldFN0eWxlID0gKGVsLCBydWxlTmFt
ZSwgdmFsKSA9PiAoZWwuc3R5bGVbcnVsZU5hbWVdID0gdmFsKTsKYGBgCgo8
ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpz
ZXRTdHlsZShkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdwJyksICdmb250LXNp
emUnLCAnMjBweCcpOyAvLyBUaGUgZmlyc3QgPHA+IGVsZW1lbnQgb24gdGhl
IHBhZ2Ugd2lsbCBoYXZlIGEgZm9udC1zaXplIG9mIDIwcHgKYGBgCjwvZGV0
YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMg
c2hvdwoKU2hvd3MgYWxsIHRoZSBlbGVtZW50cyBzcGVjaWZpZWQuCgpVc2Ug
dGhlIHNwcmVhZCBvcGVyYXRvciAoYC4uLmApIGFuZCBgQXJyYXkucHJvdG90
eXBlLmZvckVhY2goKWAgdG8gY2xlYXIgdGhlIGBkaXNwbGF5YCBwcm9wZXJ0
eSBmb3IgZWFjaCBlbGVtZW50IHNwZWNpZmllZC4KCmBgYGpzCmNvbnN0IHNo
b3cgPSAoLi4uZWwpID0+IFsuLi5lbF0uZm9yRWFjaChlID0+IChlLnN0eWxl
LmRpc3BsYXkgPSAnJykpOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFt
cGxlczwvc3VtbWFyeT4KCmBgYGpzCnNob3coLi4uZG9jdW1lbnQucXVlcnlT
ZWxlY3RvckFsbCgnaW1nJykpOyAvLyBTaG93cyBhbGwgPGltZz4gZWxlbWVu
dHMgb24gdGhlIHBhZ2UKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sg
dG8gdG9wXSgjY29udGVudHMpCgojIyMgc21vb3RoU2Nyb2xsCgpTbW9vdGhs
eSBzY3JvbGxzIHRoZSBlbGVtZW50IG9uIHdoaWNoIGl0J3MgY2FsbGVkIGlu
dG8gdGhlIHZpc2libGUgYXJlYSBvZiB0aGUgYnJvd3NlciB3aW5kb3cuCgpV
c2UgYC5zY3JvbGxJbnRvVmlld2AgbWV0aG9kIHRvIHNjcm9sbCB0aGUgZWxl
bWVudC4gClBhc3MgYHsgYmVoYXZpb3I6ICdzbW9vdGgnIH1gIHRvIGAuc2Ny
b2xsSW50b1ZpZXdgIHNvIGl0IHNjcm9sbHMgc21vb3RobHkuCgpgYGBqcwpj
b25zdCBzbW9vdGhTY3JvbGwgPSBlbGVtZW50ID0+CiAgZG9jdW1lbnQucXVl
cnlTZWxlY3RvcihlbGVtZW50KS5zY3JvbGxJbnRvVmlldyh7CiAgICBiZWhh
dmlvcjogJ3Ntb290aCcKICB9KTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+
RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpzbW9vdGhTY3JvbGwoJyNmb29C
YXInKTsgLy8gc2Nyb2xscyBzbW9vdGhseSB0byB0aGUgZWxlbWVudCB3aXRo
IHRoZSBpZCBmb29CYXIKc21vb3RoU2Nyb2xsKCcuZm9vQmFyJyk7IC8vIHNj
cm9sbHMgc21vb3RobHkgdG8gdGhlIGZpcnN0IGVsZW1lbnQgd2l0aCBhIGNs
YXNzIG9mIGZvb0JhcgpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0
byB0b3BdKCNjb250ZW50cykKCiMjIyB0b2dnbGVDbGFzcwoKVG9nZ2xlIGEg
Y2xhc3MgZm9yIGFuIGVsZW1lbnQuCgpVc2UgYGVsZW1lbnQuY2xhc3NMaXN0
LnRvZ2dsZSgpYCB0byB0b2dnbGUgdGhlIHNwZWNpZmllZCBjbGFzcyBmb3Ig
dGhlIGVsZW1lbnQuCgpgYGBqcwpjb25zdCB0b2dnbGVDbGFzcyA9IChlbCwg
Y2xhc3NOYW1lKSA9PiBlbC5jbGFzc0xpc3QudG9nZ2xlKGNsYXNzTmFtZSk7
CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoK
YGBganMKdG9nZ2xlQ2xhc3MoZG9jdW1lbnQucXVlcnlTZWxlY3RvcigncC5z
cGVjaWFsJyksICdzcGVjaWFsJyk7IC8vIFRoZSBwYXJhZ3JhcGggd2lsbCBu
b3QgaGF2ZSB0aGUgJ3NwZWNpYWwnIGNsYXNzIGFueW1vcmUKYGBgCjwvZGV0
YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMg
dHJpZ2dlckV2ZW50CgpUcmlnZ2VycyBhIHNwZWNpZmljIGV2ZW50IG9uIGEg
Z2l2ZW4gZWxlbWVudCwgb3B0aW9uYWxseSBwYXNzaW5nIGN1c3RvbSBkYXRh
LgoKVXNlIGBuZXcgQ3VzdG9tRXZlbnQoKWAgdG8gY3JlYXRlIGFuIGV2ZW50
IGZyb20gdGhlIHNwZWNpZmllZCBgZXZlbnRUeXBlYCBhbmQgZGV0YWlscy4K
VXNlIGBlbC5kaXNwYXRjaEV2ZW50KClgIHRvIHRyaWdnZXIgdGhlIG5ld2x5
IGNyZWF0ZWQgZXZlbnQgb24gdGhlIGdpdmVuIGVsZW1lbnQuCk9taXQgdGhl
IHRoaXJkIGFyZ3VtZW50LCBgZGV0YWlsYCwgaWYgeW91IGRvIG5vdCB3YW50
IHRvIHBhc3MgY3VzdG9tIGRhdGEgdG8gdGhlIHRyaWdnZXJlZCBldmVudC4K
CmBgYGpzCmNvbnN0IHRyaWdnZXJFdmVudCA9IChlbCwgZXZlbnRUeXBlLCBk
ZXRhaWwpID0+CiAgZWwuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQo
ZXZlbnRUeXBlLCB7IGRldGFpbCB9KSk7CmBgYAoKPGRldGFpbHM+CjxzdW1t
YXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKdHJpZ2dlckV2ZW50KGRv
Y3VtZW50LmdldEVsZW1lbnRCeUlkKCdteUlkJyksICdjbGljaycpOwp0cmln
Z2VyRXZlbnQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ215SWQnKSwgJ2Ns
aWNrJywgeyB1c2VybmFtZTogJ2JvYicgfSk7CmBgYAo8L2RldGFpbHM+Cgo8
YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIFVVSURHZW5l
cmF0b3JCcm93c2VyCgpHZW5lcmF0ZXMgYSBVVUlEIGluIGEgYnJvd3Nlci4K
ClVzZSBgY3J5cHRvYCBBUEkgdG8gZ2VuZXJhdGUgYSBVVUlELCBjb21wbGlh
bnQgd2l0aCBbUkZDNDEyMl0oaHR0cHM6Ly93d3cuaWV0Zi5vcmcvcmZjL3Jm
YzQxMjIudHh0KSB2ZXJzaW9uIDQuCgpgYGBqcwpjb25zdCBVVUlER2VuZXJh
dG9yQnJvd3NlciA9ICgpID0+CiAgKFsxZTddICsgLTFlMyArIC00ZTMgKyAt
OGUzICsgLTFlMTEpLnJlcGxhY2UoL1swMThdL2csIGMgPT4KICAgIChjIF4g
KGNyeXB0by5nZXRSYW5kb21WYWx1ZXMobmV3IFVpbnQ4QXJyYXkoMSkpWzBd
ICYgKDE1ID4+IChjIC8gNCkpKSkudG9TdHJpbmcoMTYpCiAgKTsKYGBgCgo8
ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpV
VUlER2VuZXJhdG9yQnJvd3NlcigpOyAvLyAnNzk4MmZjZmUtNTcyMS00NjMy
LWJlZGUtNjAwMDg4NWJlNTdkJwpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYg
QmFjayB0byB0b3BdKCNjb250ZW50cykKCi0tLQoKIyMg4o+x77iPIERhdGUK
CgojIyMgZGF5T2ZZZWFyCgpHZXRzIHRoZSBkYXkgb2YgdGhlIHllYXIgZnJv
bSBhIGBEYXRlYCBvYmplY3QuCgpVc2UgYG5ldyBEYXRlKClgIGFuZCBgRGF0
ZS5wcm90b3R5cGUuZ2V0RnVsbFllYXIoKWAgdG8gZ2V0IHRoZSBmaXJzdCBk
YXkgb2YgdGhlIHllYXIgYXMgYSBgRGF0ZWAgb2JqZWN0LCBzdWJ0cmFjdCBp
dCBmcm9tIHRoZSBwcm92aWRlZCBgZGF0ZWAgYW5kIGRpdmlkZSB3aXRoIHRo
ZSBtaWxsaXNlY29uZHMgaW4gZWFjaCBkYXkgdG8gZ2V0IHRoZSByZXN1bHQu
ClVzZSBgTWF0aC5mbG9vcigpYCB0byBhcHByb3ByaWF0ZWx5IHJvdW5kIHRo
ZSByZXN1bHRpbmcgZGF5IGNvdW50IHRvIGFuIGludGVnZXIuCgpgYGBqcwpj
b25zdCBkYXlPZlllYXIgPSBkYXRlID0+CiAgTWF0aC5mbG9vcigoZGF0ZSAt
IG5ldyBEYXRlKGRhdGUuZ2V0RnVsbFllYXIoKSwgMCwgMCkpIC8gMTAwMCAv
IDYwIC8gNjAgLyAyNCk7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1w
bGVzPC9zdW1tYXJ5PgoKYGBganMKZGF5T2ZZZWFyKG5ldyBEYXRlKCkpOyAv
LyAyNzIKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgj
Y29udGVudHMpCgojIyMgZm9ybWF0RHVyYXRpb24KClJldHVybnMgdGhlIGh1
bWFuIHJlYWRhYmxlIGZvcm1hdCBvZiB0aGUgZ2l2ZW4gbnVtYmVyIG9mIG1p
bGxpc2Vjb25kcy4KCkRpdmlkZSBgbXNgIHdpdGggdGhlIGFwcHJvcHJpYXRl
IHZhbHVlcyB0byBvYnRhaW4gdGhlIGFwcHJvcHJpYXRlIHZhbHVlcyBmb3Ig
YGRheWAsIGBob3VyYCwgYG1pbnV0ZWAsIGBzZWNvbmRgIGFuZCBgbWlsbGlz
ZWNvbmRgLgpVc2UgYE9iamVjdC5lbnRyaWVzKClgIHdpdGggYEFycmF5LnBy
b3RvdHlwZS5maWx0ZXIoKWAgdG8ga2VlcCBvbmx5IG5vbi16ZXJvIHZhbHVl
cy4KVXNlIGBBcnJheS5wcm90b3R5cGUubWFwKClgIHRvIGNyZWF0ZSB0aGUg
c3RyaW5nIGZvciBlYWNoIHZhbHVlLCBwbHVyYWxpemluZyBhcHByb3ByaWF0
ZWx5LgpVc2UgYFN0cmluZy5wcm90b3R5cGUuam9pbignLCAnKWAgdG8gY29t
YmluZSB0aGUgdmFsdWVzIGludG8gYSBzdHJpbmcuCgpgYGBqcwpjb25zdCBm
b3JtYXREdXJhdGlvbiA9IG1zID0+IHsKICBpZiAobXMgPCAwKSBtcyA9IC1t
czsKICBjb25zdCB0aW1lID0gewogICAgZGF5OiBNYXRoLmZsb29yKG1zIC8g
ODY0MDAwMDApLAogICAgaG91cjogTWF0aC5mbG9vcihtcyAvIDM2MDAwMDAp
ICUgMjQsCiAgICBtaW51dGU6IE1hdGguZmxvb3IobXMgLyA2MDAwMCkgJSA2
MCwKICAgIHNlY29uZDogTWF0aC5mbG9vcihtcyAvIDEwMDApICUgNjAsCiAg
ICBtaWxsaXNlY29uZDogTWF0aC5mbG9vcihtcykgJSAxMDAwCiAgfTsKICBy
ZXR1cm4gT2JqZWN0LmVudHJpZXModGltZSkKICAgIC5maWx0ZXIodmFsID0+
IHZhbFsxXSAhPT0gMCkKICAgIC5tYXAoKFtrZXksIHZhbF0pID0+IGAke3Zh
bH0gJHtrZXl9JHt2YWwgIT09IDEgPyAncycgOiAnJ31gKQogICAgLmpvaW4o
JywgJyk7Cn07CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9z
dW1tYXJ5PgoKYGBganMKZm9ybWF0RHVyYXRpb24oMTAwMSk7IC8vICcxIHNl
Y29uZCwgMSBtaWxsaXNlY29uZCcKZm9ybWF0RHVyYXRpb24oMzQzMjUwNTU1
NzQpOyAvLyAnMzk3IGRheXMsIDYgaG91cnMsIDQ0IG1pbnV0ZXMsIDE1IHNl
Y29uZHMsIDU3NCBtaWxsaXNlY29uZHMnCmBgYAo8L2RldGFpbHM+Cgo8YnI+
W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGdldENvbG9uVGlt
ZUZyb21EYXRlCgpSZXR1cm5zIGEgc3RyaW5nIG9mIHRoZSBmb3JtIGBISDpN
TTpTU2AgZnJvbSBhIGBEYXRlYCBvYmplY3QuCgpVc2UgYERhdGUucHJvdG90
eXBlLnRvVGltZVN0cmluZygpYCBhbmQgYFN0cmluZy5wcm90b3R5cGUuc2xp
Y2UoKWAgdG8gZ2V0IHRoZSBgSEg6TU06U1NgIHBhcnQgb2YgYSBnaXZlbiBg
RGF0ZWAgb2JqZWN0LgoKYGBganMKY29uc3QgZ2V0Q29sb25UaW1lRnJvbURh
dGUgPSBkYXRlID0+IGRhdGUudG9UaW1lU3RyaW5nKCkuc2xpY2UoMCwgOCk7
CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoK
YGBganMKZ2V0Q29sb25UaW1lRnJvbURhdGUobmV3IERhdGUoKSk7IC8vICIw
ODozODowMCIKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9w
XSgjY29udGVudHMpCgojIyMgZ2V0RGF5c0RpZmZCZXR3ZWVuRGF0ZXMKClJl
dHVybnMgdGhlIGRpZmZlcmVuY2UgKGluIGRheXMpIGJldHdlZW4gdHdvIGRh
dGVzLgoKQ2FsY3VsYXRlIHRoZSBkaWZmZXJlbmNlIChpbiBkYXlzKSBiZXR3
ZWVuIHR3byBgRGF0ZWAgb2JqZWN0cy4KCmBgYGpzCmNvbnN0IGdldERheXNE
aWZmQmV0d2VlbkRhdGVzID0gKGRhdGVJbml0aWFsLCBkYXRlRmluYWwpID0+
CiAgKGRhdGVGaW5hbCAtIGRhdGVJbml0aWFsKSAvICgxMDAwICogMzYwMCAq
IDI0KTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1h
cnk+CgpgYGBqcwpnZXREYXlzRGlmZkJldHdlZW5EYXRlcyhuZXcgRGF0ZSgn
MjAxNy0xMi0xMycpLCBuZXcgRGF0ZSgnMjAxNy0xMi0yMicpKTsgLy8gOQpg
YGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50
cykKCiMjIyBnZXRNZXJpZGllbVN1ZmZpeE9mSW50ZWdlcgoKQ29udmVydHMg
YW4gaW50ZWdlciB0byBhIHN1ZmZpeGVkIHN0cmluZywgYWRkaW5nIGBhbWAg
b3IgYHBtYCBiYXNlZCBvbiBpdHMgdmFsdWUuCgpVc2UgdGhlIG1vZHVsbyBv
cGVyYXRvciAoYCVgKSBhbmQgY29uZGl0aW9uYWwgY2hlY2tzIHRvIHRyYW5z
Zm9ybSBhbiBpbnRlZ2VyIHRvIGEgc3RyaW5naWZpZWQgMTItaG91ciBmb3Jt
YXQgd2l0aCBtZXJpZGllbSBzdWZmaXguCgpgYGBqcwpjb25zdCBnZXRNZXJp
ZGllbVN1ZmZpeE9mSW50ZWdlciA9IG51bSA9PgogIG51bSA9PT0gMCB8fCBu
dW0gPT09IDI0CiAgICA/IDEyICsgJ2FtJwogICAgOiBudW0gPT09IDEyCiAg
ICA/IDEyICsgJ3BtJwogICAgOiBudW0gPCAxMgogICAgPyAobnVtICUgMTIp
ICsgJ2FtJwogICAgOiAobnVtICUgMTIpICsgJ3BtJzsKYGBgCgo8ZGV0YWls
cz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpnZXRNZXJp
ZGllbVN1ZmZpeE9mSW50ZWdlcigwKTsgLy8gIjEyYW0iCmdldE1lcmlkaWVt
U3VmZml4T2ZJbnRlZ2VyKDExKTsgLy8gIjExYW0iCmdldE1lcmlkaWVtU3Vm
Zml4T2ZJbnRlZ2VyKDEzKTsgLy8gIjFwbSIKZ2V0TWVyaWRpZW1TdWZmaXhP
ZkludGVnZXIoMjUpOyAvLyAiMXBtIgpgYGAKPC9kZXRhaWxzPgoKPGJyPlvi
rIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBpc0FmdGVyRGF0ZQoK
Q2hlY2sgaWYgYSBkYXRlIGlzIGFmdGVyIGFub3RoZXIgZGF0ZS4KClVzZSB0
aGUgZ3JlYXRlciB0aGFuIG9wZXJhdG9yIChgPmApIHRvIGNoZWNrIGlmIHRo
ZSBmaXJzdCBkYXRlIGNvbWVzIGFmdGVyIHRoZSBzZWNvbmQgb25lLgoKYGBg
anMKY29uc3QgaXNBZnRlckRhdGUgPSAoZGF0ZUEsIGRhdGVCKSA9PiBkYXRl
QSA+IGRhdGVCOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwv
c3VtbWFyeT4KCmBgYGpzCmlzQWZ0ZXJEYXRlKG5ldyBEYXRlKDIwMTAsIDEw
LCAyMSksIG5ldyBEYXRlKDIwMTAsIDEwLCAyMCkpOyAvLyB0cnVlCmBgYAo8
L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoK
IyMjIGlzQmVmb3JlRGF0ZQoKQ2hlY2sgaWYgYSBkYXRlIGlzIGJlZm9yZSBh
bm90aGVyIGRhdGUuCgpVc2UgdGhlIGxlc3MgdGhhbiBvcGVyYXRvciAoYDxg
KSB0byBjaGVjayBpZiB0aGUgZmlyc3QgZGF0ZSBjb21lcyBiZWZvcmUgdGhl
IHNlY29uZCBvbmUuCgpgYGBqcwpjb25zdCBpc0JlZm9yZURhdGUgPSAoZGF0
ZUEsIGRhdGVCKSA9PiBkYXRlQSA8IGRhdGVCOwpgYGAKCjxkZXRhaWxzPgo8
c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmlzQmVmb3JlRGF0
ZShuZXcgRGF0ZSgyMDEwLCAxMCwgMjApLCBuZXcgRGF0ZSgyMDEwLCAxMCwg
MjEpKTsgLy8gdHJ1ZQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0
byB0b3BdKCNjb250ZW50cykKCiMjIyBpc1NhbWVEYXRlCgpDaGVjayBpZiBh
IGRhdGUgaXMgdGhlIHNhbWUgYXMgYW5vdGhlciBkYXRlLgoKVXNlIGBEYXRl
LnByb3RvdHlwZS50b0lTT1N0cmluZygpYCBhbmQgc3RyaWN0IGVxdWFsaXR5
IGNoZWNraW5nIChgPT09YCkgdG8gY2hlY2sgaWYgdGhlIGZpcnN0IGRhdGUg
aXMgdGhlIHNhbWUgYXMgdGhlIHNlY29uZCBvbmUuCgpgYGBqcwpjb25zdCBp
c1NhbWVEYXRlID0gKGRhdGVBLCBkYXRlQikgPT4gZGF0ZUEudG9JU09TdHJp
bmcoKSA9PT0gZGF0ZUIudG9JU09TdHJpbmcoKTsKYGBgCgo8ZGV0YWlscz4K
PHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwppc1NhbWVEYXRl
KG5ldyBEYXRlKDIwMTAsIDEwLCAyMCksIG5ldyBEYXRlKDIwMTAsIDEwLCAy
MCkpOyAvLyB0cnVlCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRv
IHRvcF0oI2NvbnRlbnRzKQoKIyMjIGlzV2Vla2RheQoKUmVzdWx0cyBpbiBh
IGJvb2xlYW4gcmVwcmVzZW50YXRpb24gb2YgYSBzcGVjaWZpYyBkYXRlLgoK
UGFzcyB0aGUgc3BlY2lmaWMgZGF0ZSBvYmplY3QgZmlyc3RseS4KVXNlIGBE
YXRlLmdldERheSgpYCB0byBjaGVjayB3ZWVrZGF5IGJ5IHVzaW5nIGEgbW9k
dWxvIG9wZXJhdG9yIGFuZCB0aGVuIHJldHVybmluZyBhIGJvb2xlYW4uCgpg
YGBqcwpjb25zdCBpc1dlZWtkYXkgPSAodCA9IG5ldyBEYXRlKCkpID0+IHsK
ICByZXR1cm4gdC5nZXREYXkoKSAlIDYgIT09IDA7Cn07CmBgYAoKPGRldGFp
bHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKaXNXZWVr
ZGF5KCk7IC8vIHRydWUgKGlmIGN1cnJlbnQgZGF0ZSBpcyAyMDE5LTA3LTE5
KQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250
ZW50cykKCiMjIyBpc1dlZWtlbmQKClJlc3VsdHMgaW4gYSBib29sZWFuIHJl
cHJlc2VudGF0aW9uIG9mIGEgc3BlY2lmaWMgZGF0ZS4KClBhc3MgdGhlIHNw
ZWNpZmljIGRhdGUgb2JqZWN0IGZpcnN0bHkuClVzZSBgRGF0ZS5nZXREYXko
KWAgdG8gY2hlY2sgd2Vla2VuZCBiYXNlZCBvbiB0aGUgZGF5IGJlaW5nIHJl
dHVybmVkIGFzIDAgLSA2IHVzaW5nIGEgbW9kdWxvIG9wZXJhdGlvbiB0aGVu
IHJldHVybiBhIGJvb2xlYW4uCgpgYGBqcwpjb25zdCBpc1dlZWtlbmQgPSAo
dCA9IG5ldyBEYXRlKCkpID0+IHsKICByZXR1cm4gdC5nZXREYXkoKSAlIDYg
PT09IDA7Cn07CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9z
dW1tYXJ5PgoKYGBganMKaXNXZWVrZW5kKCk7IC8vIDIwMTgtMTAtMTkgKGlm
IGN1cnJlbnQgZGF0ZSBpcyAyMDE4LTEwLTE4KQpgYGAKPC9kZXRhaWxzPgoK
PGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBtYXhEYXRl
CgpSZXR1cm5zIHRoZSBtYXhpbXVtIG9mIHRoZSBnaXZlbiBkYXRlcy4KClVz
ZSB0aGUgRVM2IHNwcmVhZCBzeW50YXggd2l0aCBgTWF0aC5tYXhgIHRvIGZp
bmQgdGhlIG1heGltdW0gZGF0ZSB2YWx1ZSwgYG5ldyBEYXRlKClgIHRvIGNv
bnZlcnQgaXQgdG8gYSBgRGF0ZWAgb2JqZWN0LgoKYGBganMKY29uc3QgbWF4
RGF0ZSA9IGRhdGVzID0+IG5ldyBEYXRlKE1hdGgubWF4KC4uLmRhdGVzKSk7
CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoK
YGBganMKY29uc3QgYXJyYXkgPSBbCiAgbmV3IERhdGUoMjAxNywgNCwgMTMp
LAogIG5ldyBEYXRlKDIwMTgsIDIsIDEyKSwKICBuZXcgRGF0ZSgyMDE2LCAw
LCAxMCksCiAgbmV3IERhdGUoMjAxNiwgMCwgOSkKXTsKbWF4RGF0ZShhcnJh
eSk7IC8vIDIwMTgtMDMtMTFUMjI6MDA6MDAuMDAwWgpgYGAKPC9kZXRhaWxz
PgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBtaW5E
YXRlCgpSZXR1cm5zIHRoZSBtaW5pbXVtIG9mIHRoZSBnaXZlbiBkYXRlcy4K
ClVzZSB0aGUgRVM2IHNwcmVhZCBzeW50YXggdG8gZmluZCB0aGUgbWluaW11
bSBkYXRlIHZhbHVlLCBgbmV3IERhdGUoKWAgdG8gY29udmVydCBpdCB0byBh
IGBEYXRlYCBvYmplY3QuCgpgYGBqcwpjb25zdCBtaW5EYXRlID0gZGF0ZXMg
PT4gbmV3IERhdGUoTWF0aC5taW4oLi4uZGF0ZXMpKTsKYGBgCgo8ZGV0YWls
cz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpjb25zdCBh
cnJheSA9IFsKICBuZXcgRGF0ZSgyMDE3LCA0LCAxMyksCiAgbmV3IERhdGUo
MjAxOCwgMiwgMTIpLAogIG5ldyBEYXRlKDIwMTYsIDAsIDEwKSwKICBuZXcg
RGF0ZSgyMDE2LCAwLCA5KQpdOwptaW5EYXRlKGFycmF5KTsgLy8gMjAxNi0w
MS0wOFQyMjowMDowMC4wMDBaCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBC
YWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHRvbW9ycm93CgpSZXN1bHRz
IGluIGEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRvbW9ycm93J3MgZGF0
ZS4KClVzZSBgbmV3IERhdGUoKWAgdG8gZ2V0IHRoZSBjdXJyZW50IGRhdGUs
IGluY3JlbWVudCBieSBvbmUgdXNpbmcgYERhdGUuZ2V0RGF0ZSgpYCBhbmQg
c2V0IHRoZSB2YWx1ZSB0byB0aGUgcmVzdWx0IHVzaW5nIGBEYXRlLnNldERh
dGUoKWAuIApVc2UgYERhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nKClgIHRv
IHJldHVybiBhIHN0cmluZyBpbiBgeXl5eS1tbS1kZGAgZm9ybWF0LgoKYGBg
anMKY29uc3QgdG9tb3Jyb3cgPSAoKSA9PiB7CiAgbGV0IHQgPSBuZXcgRGF0
ZSgpOwogIHQuc2V0RGF0ZSh0LmdldERhdGUoKSArIDEpOwogIHJldHVybiB0
LnRvSVNPU3RyaW5nKCkuc3BsaXQoJ1QnKVswXTsKfTsKYGBgCgo8ZGV0YWls
cz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwp0b21vcnJv
dygpOyAvLyAyMDE4LTEwLTE5IChpZiBjdXJyZW50IGRhdGUgaXMgMjAxOC0x
MC0xOCkKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgj
Y29udGVudHMpCgojIyMgeWVzdGVyZGF5CgpSZXN1bHRzIGluIGEgc3RyaW5n
IHJlcHJlc2VudGF0aW9uIG9mIHllc3RlcmRheSdzIGRhdGUuCgpVc2UgYG5l
dyBEYXRlKClgIHRvIGdldCB0aGUgY3VycmVudCBkYXRlLCBkZWNyZW1lbnQg
Ynkgb25lIHVzaW5nIGBEYXRlLmdldERhdGUoKWAgYW5kIHNldCB0aGUgdmFs
dWUgdG8gdGhlIHJlc3VsdCB1c2luZyBgRGF0ZS5zZXREYXRlKClgLgpVc2Ug
YERhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nKClgIHRvIHJldHVybiBhIHN0
cmluZyBpbiBgeXl5eS1tbS1kZGAgZm9ybWF0LgoKYGBganMKY29uc3QgeWVz
dGVyZGF5ID0gKCkgPT4gewogIGxldCB0ID0gbmV3IERhdGUoKTsKICB0LnNl
dERhdGUodC5nZXREYXRlKCkgLSAxKTsKICByZXR1cm4gdC50b0lTT1N0cmlu
ZygpLnNwbGl0KCdUJylbMF07Cn07CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5
PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKeWVzdGVyZGF5KCk7IC8vIDIw
MTgtMTAtMTcgKGlmIGN1cnJlbnQgZGF0ZSBpcyAyMDE4LTEwLTE4KQpgYGAK
PC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykK
Ci0tLQoKIyMg8J+Om++4jyBGdW5jdGlvbgoKCiMjIyBhdHRlbXB0CgpBdHRl
bXB0cyB0byBpbnZva2UgYSBmdW5jdGlvbiB3aXRoIHRoZSBwcm92aWRlZCBh
cmd1bWVudHMsIHJldHVybmluZyBlaXRoZXIgdGhlIHJlc3VsdCBvciB0aGUg
Y2F1Z2h0IGVycm9yIG9iamVjdC4KClVzZSBhIGB0cnkuLi4gY2F0Y2hgIGJs
b2NrIHRvIHJldHVybiBlaXRoZXIgdGhlIHJlc3VsdCBvZiB0aGUgZnVuY3Rp
b24gb3IgYW4gYXBwcm9wcmlhdGUgZXJyb3IuCgpgYGBqcwpjb25zdCBhdHRl
bXB0ID0gKGZuLCAuLi5hcmdzKSA9PiB7CiAgdHJ5IHsKICAgIHJldHVybiBm
biguLi5hcmdzKTsKICB9IGNhdGNoIChlKSB7CiAgICByZXR1cm4gZSBpbnN0
YW5jZW9mIEVycm9yID8gZSA6IG5ldyBFcnJvcihlKTsKICB9Cn07CmBgYAoK
PGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMK
dmFyIGVsZW1lbnRzID0gYXR0ZW1wdChmdW5jdGlvbihzZWxlY3Rvcikgewog
IHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTsK
fSwgJz5fPicpOwppZiAoZWxlbWVudHMgaW5zdGFuY2VvZiBFcnJvcikgZWxl
bWVudHMgPSBbXTsgLy8gZWxlbWVudHMgPSBbXQpgYGAKPC9kZXRhaWxzPgoK
PGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBiaW5kCgpD
cmVhdGVzIGEgZnVuY3Rpb24gdGhhdCBpbnZva2VzIGBmbmAgd2l0aCBhIGdp
dmVuIGNvbnRleHQsIG9wdGlvbmFsbHkgYWRkaW5nIGFueSBhZGRpdGlvbmFs
IHN1cHBsaWVkIHBhcmFtZXRlcnMgdG8gdGhlIGJlZ2lubmluZyBvZiB0aGUg
YXJndW1lbnRzLgoKUmV0dXJuIGEgYGZ1bmN0aW9uYCB0aGF0IHVzZXMgYEZ1
bmN0aW9uLnByb3RvdHlwZS5hcHBseSgpYCB0byBhcHBseSB0aGUgZ2l2ZW4g
YGNvbnRleHRgIHRvIGBmbmAuClVzZSBgQXJyYXkucHJvdG90eXBlLmNvbmNh
dCgpYCB0byBwcmVwZW5kIGFueSBhZGRpdGlvbmFsIHN1cHBsaWVkIHBhcmFt
ZXRlcnMgdG8gdGhlIGFyZ3VtZW50cy4KCmBgYGpzCmNvbnN0IGJpbmQgPSAo
Zm4sIGNvbnRleHQsIC4uLmJvdW5kQXJncykgPT4gKC4uLmFyZ3MpID0+IGZu
LmFwcGx5KGNvbnRleHQsIFsuLi5ib3VuZEFyZ3MsIC4uLmFyZ3NdKTsKYGBg
Cgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBq
cwpmdW5jdGlvbiBncmVldChncmVldGluZywgcHVuY3R1YXRpb24pIHsKICBy
ZXR1cm4gZ3JlZXRpbmcgKyAnICcgKyB0aGlzLnVzZXIgKyBwdW5jdHVhdGlv
bjsKfQpjb25zdCBmcmVkZHkgPSB7IHVzZXI6ICdmcmVkJyB9Owpjb25zdCBm
cmVkZHlCb3VuZCA9IGJpbmQoZ3JlZXQsIGZyZWRkeSk7CmNvbnNvbGUubG9n
KGZyZWRkeUJvdW5kKCdoaScsICchJykpOyAvLyAnaGkgZnJlZCEnCmBgYAo8
L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoK
IyMjIGJpbmRLZXkKCkNyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IGludm9rZXMg
dGhlIG1ldGhvZCBhdCBhIGdpdmVuIGtleSBvZiBhbiBvYmplY3QsIG9wdGlv
bmFsbHkgYWRkaW5nIGFueSBhZGRpdGlvbmFsIHN1cHBsaWVkIHBhcmFtZXRl
cnMgdG8gdGhlIGJlZ2lubmluZyBvZiB0aGUgYXJndW1lbnRzLgoKUmV0dXJu
IGEgYGZ1bmN0aW9uYCB0aGF0IHVzZXMgYEZ1bmN0aW9uLnByb3RvdHlwZS5h
cHBseSgpYCB0byBiaW5kIGBjb250ZXh0W2ZuXWAgdG8gYGNvbnRleHRgLgpV
c2UgdGhlIHNwcmVhZCBvcGVyYXRvciAoYC4uLmApIHRvIHByZXBlbmQgYW55
IGFkZGl0aW9uYWwgc3VwcGxpZWQgcGFyYW1ldGVycyB0byB0aGUgYXJndW1l
bnRzLgoKYGBganMKY29uc3QgYmluZEtleSA9IChjb250ZXh0LCBmbiwgLi4u
Ym91bmRBcmdzKSA9PiAoLi4uYXJncykgPT4KICBjb250ZXh0W2ZuXS5hcHBs
eShjb250ZXh0LCBbLi4uYm91bmRBcmdzLCAuLi5hcmdzXSk7CmBgYAoKPGRl
dGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKY29u
c3QgZnJlZGR5ID0gewogIHVzZXI6ICdmcmVkJywKICBncmVldDogZnVuY3Rp
b24oZ3JlZXRpbmcsIHB1bmN0dWF0aW9uKSB7CiAgICByZXR1cm4gZ3JlZXRp
bmcgKyAnICcgKyB0aGlzLnVzZXIgKyBwdW5jdHVhdGlvbjsKICB9Cn07CmNv
bnN0IGZyZWRkeUJvdW5kID0gYmluZEtleShmcmVkZHksICdncmVldCcpOwpj
b25zb2xlLmxvZyhmcmVkZHlCb3VuZCgnaGknLCAnIScpKTsgLy8gJ2hpIGZy
ZWQhJwpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNj
b250ZW50cykKCiMjIyBjaGFpbkFzeW5jCgpDaGFpbnMgYXN5bmNocm9ub3Vz
IGZ1bmN0aW9ucy4KCkxvb3AgdGhyb3VnaCBhbiBhcnJheSBvZiBmdW5jdGlv
bnMgY29udGFpbmluZyBhc3luY2hyb25vdXMgZXZlbnRzLCBjYWxsaW5nIGBu
ZXh0YCB3aGVuIGVhY2ggYXN5bmNocm9ub3VzIGV2ZW50IGhhcyBjb21wbGV0
ZWQuCgpgYGBqcwpjb25zdCBjaGFpbkFzeW5jID0gZm5zID0+IHsKICBsZXQg
Y3VyciA9IDA7CiAgY29uc3QgbGFzdCA9IGZuc1tmbnMubGVuZ3RoIC0gMV07
CiAgY29uc3QgbmV4dCA9ICgpID0+IHsKICAgIGNvbnN0IGZuID0gZm5zW2N1
cnIrK107CiAgICBmbiA9PT0gbGFzdCA/IGZuKCkgOiBmbihuZXh0KTsKICB9
OwogIG5leHQoKTsKfTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBs
ZXM8L3N1bW1hcnk+CgpgYGBqcwpjaGFpbkFzeW5jKFsKICBuZXh0ID0+IHsK
ICAgIGNvbnNvbGUubG9nKCcwIHNlY29uZHMnKTsKICAgIHNldFRpbWVvdXQo
bmV4dCwgMTAwMCk7CiAgfSwKICBuZXh0ID0+IHsKICAgIGNvbnNvbGUubG9n
KCcxIHNlY29uZCcpOwogICAgc2V0VGltZW91dChuZXh0LCAxMDAwKTsKICB9
LAogICgpID0+IHsKICAgIGNvbnNvbGUubG9nKCcyIHNlY29uZCcpOwogIH0K
XSk7CmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2Nv
bnRlbnRzKQoKIyMjIGNoZWNrUHJvcAoKR2l2ZW4gYSBgcHJlZGljYXRlYCBm
dW5jdGlvbiBhbmQgYSBgcHJvcGAgc3RyaW5nLCB0aGlzIGN1cnJpZWQgZnVu
Y3Rpb24gd2lsbCB0aGVuIHRha2UgYW4gYG9iamVjdGAgdG8gaW5zcGVjdCBi
eSBjYWxsaW5nIHRoZSBwcm9wZXJ0eSBhbmQgcGFzc2luZyBpdCB0byB0aGUg
cHJlZGljYXRlLgoKU3VtbW9uIGBwcm9wYCBvbiBgb2JqYCwgcGFzcyBpdCB0
byBhIHByb3ZpZGVkIGBwcmVkaWNhdGVgIGZ1bmN0aW9uIGFuZCByZXR1cm4g
YSBtYXNrZWQgYm9vbGVhbi4KCmBgYGpzCmNvbnN0IGNoZWNrUHJvcCA9IChw
cmVkaWNhdGUsIHByb3ApID0+IG9iaiA9PiAhIXByZWRpY2F0ZShvYmpbcHJv
cF0pOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFy
eT4KCmBgYGpzCmNvbnN0IGxlbmd0aElzNCA9IGNoZWNrUHJvcChsID0+IGwg
PT09IDQsICdsZW5ndGgnKTsKbGVuZ3RoSXM0KFtdKTsgLy8gZmFsc2UKbGVu
Z3RoSXM0KFsxLDIsMyw0XSk7IC8vIHRydWUKbGVuZ3RoSXM0KG5ldyBTZXQo
WzEsMiwzLDRdKSk7IC8vIGZhbHNlIChTZXQgdXNlcyBTaXplLCBub3QgbGVu
Z3RoKQoKY29uc3Qgc2Vzc2lvbiA9IHsgdXNlcjoge30gfTsKY29uc3QgdmFs
aWRVc2VyU2Vzc2lvbiA9IGNoZWNrUHJvcHModSA9PiB1LmFjdGl2ZSAmJiAh
dS5kaXNhYmxlZCwgJ3VzZXInKTsKCnZhbGlkVXNlclNlc3Npb24oc2Vzc2lv
bik7IC8vIGZhbHNlCgpzZXNzaW9uLnVzZXIuYWN0aXZlID0gdHJ1ZTsKdmFs
aWRVc2VyU2Vzc2lvbihzZXNzaW9uKTsgLy8gdHJ1ZQoKY29uc3Qgbm9MZW5n
dGgobCA9PiBsID09PSB1bmRlZmluZWQsICdsZW5ndGgnKTsKbm9MZW5ndGgo
W10pOyAvLyBmYWxzZQpub0xlbmd0aCh7fSk7IC8vIHRydWUKbm9MZW5ndGgo
bmV3IFNldCgpKTsgLy8gdHJ1ZQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYg
QmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBjb21wb3NlCgpQZXJmb3Jt
cyByaWdodC10by1sZWZ0IGZ1bmN0aW9uIGNvbXBvc2l0aW9uLgoKVXNlIGBB
cnJheS5wcm90b3R5cGUucmVkdWNlKClgIHRvIHBlcmZvcm0gcmlnaHQtdG8t
bGVmdCBmdW5jdGlvbiBjb21wb3NpdGlvbi4KVGhlIGxhc3QgKHJpZ2h0bW9z
dCkgZnVuY3Rpb24gY2FuIGFjY2VwdCBvbmUgb3IgbW9yZSBhcmd1bWVudHM7
IHRoZSByZW1haW5pbmcgZnVuY3Rpb25zIG11c3QgYmUgdW5hcnkuCgpgYGBq
cwpjb25zdCBjb21wb3NlID0gKC4uLmZucykgPT4gZm5zLnJlZHVjZSgoZiwg
ZykgPT4gKC4uLmFyZ3MpID0+IGYoZyguLi5hcmdzKSkpOwpgYGAKCjxkZXRh
aWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmNvbnN0
IGFkZDUgPSB4ID0+IHggKyA1Owpjb25zdCBtdWx0aXBseSA9ICh4LCB5KSA9
PiB4ICogeTsKY29uc3QgbXVsdGlwbHlBbmRBZGQ1ID0gY29tcG9zZSgKICBh
ZGQ1LAogIG11bHRpcGx5Cik7Cm11bHRpcGx5QW5kQWRkNSg1LCAyKTsgLy8g
MTUKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29u
dGVudHMpCgojIyMgY29tcG9zZVJpZ2h0CgpQZXJmb3JtcyBsZWZ0LXRvLXJp
Z2h0IGZ1bmN0aW9uIGNvbXBvc2l0aW9uLgoKVXNlIGBBcnJheS5wcm90b3R5
cGUucmVkdWNlKClgIHRvIHBlcmZvcm0gbGVmdC10by1yaWdodCBmdW5jdGlv
biBjb21wb3NpdGlvbi4KVGhlIGZpcnN0IChsZWZ0bW9zdCkgZnVuY3Rpb24g
Y2FuIGFjY2VwdCBvbmUgb3IgbW9yZSBhcmd1bWVudHM7IHRoZSByZW1haW5p
bmcgZnVuY3Rpb25zIG11c3QgYmUgdW5hcnkuCgpgYGBqcwpjb25zdCBjb21w
b3NlUmlnaHQgPSAoLi4uZm5zKSA9PiBmbnMucmVkdWNlKChmLCBnKSA9PiAo
Li4uYXJncykgPT4gZyhmKC4uLmFyZ3MpKSk7CmBgYAoKPGRldGFpbHM+Cjxz
dW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKY29uc3QgYWRkID0g
KHgsIHkpID0+IHggKyB5Owpjb25zdCBzcXVhcmUgPSB4ID0+IHggKiB4Owpj
b25zdCBhZGRBbmRTcXVhcmUgPSBjb21wb3NlUmlnaHQoYWRkLCBzcXVhcmUp
OwphZGRBbmRTcXVhcmUoMSwgMik7IC8vIDkKYGBgCjwvZGV0YWlscz4KCjxi
cj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgY29udmVyZ2UK
CkFjY2VwdHMgYSBjb252ZXJnaW5nIGZ1bmN0aW9uIGFuZCBhIGxpc3Qgb2Yg
YnJhbmNoaW5nIGZ1bmN0aW9ucyBhbmQgcmV0dXJucyBhIGZ1bmN0aW9uIHRo
YXQgYXBwbGllcyBlYWNoIGJyYW5jaGluZyBmdW5jdGlvbiB0byB0aGUgYXJn
dW1lbnRzIGFuZCB0aGUgcmVzdWx0cyBvZiB0aGUgYnJhbmNoaW5nIGZ1bmN0
aW9ucyBhcmUgcGFzc2VkIGFzIGFyZ3VtZW50cyB0byB0aGUgY29udmVyZ2lu
ZyBmdW5jdGlvbi4KClVzZSBgQXJyYXkucHJvdG90eXBlLm1hcCgpYCBhbmQg
YEZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseSgpYCB0byBhcHBseSBlYWNoIGZ1
bmN0aW9uIHRvIHRoZSBnaXZlbiBhcmd1bWVudHMuClVzZSB0aGUgc3ByZWFk
IG9wZXJhdG9yIChgLi4uYCkgdG8gY2FsbCBgY292ZXJnZXJgIHdpdGggdGhl
IHJlc3VsdHMgb2YgYWxsIG90aGVyIGZ1bmN0aW9ucy4KCmBgYGpzCmNvbnN0
IGNvbnZlcmdlID0gKGNvbnZlcmdlciwgZm5zKSA9PiAoLi4uYXJncykgPT4g
Y29udmVyZ2VyKC4uLmZucy5tYXAoZm4gPT4gZm4uYXBwbHkobnVsbCwgYXJn
cykpKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1h
cnk+CgpgYGBqcwpjb25zdCBhdmVyYWdlID0gY29udmVyZ2UoKGEsIGIpID0+
IGEgLyBiLCBbCiAgYXJyID0+IGFyci5yZWR1Y2UoKGEsIHYpID0+IGEgKyB2
LCAwKSwKICBhcnIgPT4gYXJyLmxlbmd0aApdKTsKYXZlcmFnZShbMSwgMiwg
MywgNCwgNSwgNiwgN10pOyAvLyA0CmBgYAo8L2RldGFpbHM+Cgo8YnI+W+Ks
hiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGN1cnJ5CgpDdXJyaWVz
IGEgZnVuY3Rpb24uCgpVc2UgcmVjdXJzaW9uLgpJZiB0aGUgbnVtYmVyIG9m
IHByb3ZpZGVkIGFyZ3VtZW50cyAoYGFyZ3NgKSBpcyBzdWZmaWNpZW50LCBj
YWxsIHRoZSBwYXNzZWQgZnVuY3Rpb24gYGZuYC4KT3RoZXJ3aXNlLCByZXR1
cm4gYSBjdXJyaWVkIGZ1bmN0aW9uIGBmbmAgdGhhdCBleHBlY3RzIHRoZSBy
ZXN0IG9mIHRoZSBhcmd1bWVudHMuCklmIHlvdSB3YW50IHRvIGN1cnJ5IGEg
ZnVuY3Rpb24gdGhhdCBhY2NlcHRzIGEgdmFyaWFibGUgbnVtYmVyIG9mIGFy
Z3VtZW50cyAoYSB2YXJpYWRpYyBmdW5jdGlvbiwgZS5nLiBgTWF0aC5taW4o
KWApLCB5b3UgY2FuIG9wdGlvbmFsbHkgcGFzcyB0aGUgbnVtYmVyIG9mIGFy
Z3VtZW50cyB0byB0aGUgc2Vjb25kIHBhcmFtZXRlciBgYXJpdHlgLgoKYGBg
anMKY29uc3QgY3VycnkgPSAoZm4sIGFyaXR5ID0gZm4ubGVuZ3RoLCAuLi5h
cmdzKSA9PgogIGFyaXR5IDw9IGFyZ3MubGVuZ3RoID8gZm4oLi4uYXJncykg
OiBjdXJyeS5iaW5kKG51bGwsIGZuLCBhcml0eSwgLi4uYXJncyk7CmBgYAoK
PGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMK
Y3VycnkoTWF0aC5wb3cpKDIpKDEwKTsgLy8gMTAyNApjdXJyeShNYXRoLm1p
biwgMykoMTApKDUwKSgyKTsgLy8gMgpgYGAKPC9kZXRhaWxzPgoKPGJyPlvi
rIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBkZWJvdW5jZQoKQ3Jl
YXRlcyBhIGRlYm91bmNlZCBmdW5jdGlvbiB0aGF0IGRlbGF5cyBpbnZva2lu
ZyB0aGUgcHJvdmlkZWQgZnVuY3Rpb24gdW50aWwgYXQgbGVhc3QgYG1zYCBt
aWxsaXNlY29uZHMgaGF2ZSBlbGFwc2VkIHNpbmNlIHRoZSBsYXN0IHRpbWUg
aXQgd2FzIGludm9rZWQuCgpFYWNoIHRpbWUgdGhlIGRlYm91bmNlZCBmdW5j
dGlvbiBpcyBpbnZva2VkLCBjbGVhciB0aGUgY3VycmVudCBwZW5kaW5nIHRp
bWVvdXQgd2l0aCBgY2xlYXJUaW1lb3V0KClgIGFuZCB1c2UgYHNldFRpbWVv
dXQoKWAgdG8gY3JlYXRlIGEgbmV3IHRpbWVvdXQgdGhhdCBkZWxheXMgaW52
b2tpbmcgdGhlIGZ1bmN0aW9uIHVudGlsIGF0IGxlYXN0IGBtc2AgbWlsbGlz
ZWNvbmRzIGhhcyBlbGFwc2VkLiBVc2UgYEZ1bmN0aW9uLnByb3RvdHlwZS5h
cHBseSgpYCB0byBhcHBseSB0aGUgYHRoaXNgIGNvbnRleHQgdG8gdGhlIGZ1
bmN0aW9uIGFuZCBwcm92aWRlIHRoZSBuZWNlc3NhcnkgYXJndW1lbnRzLgpP
bWl0IHRoZSBzZWNvbmQgYXJndW1lbnQsIGBtc2AsIHRvIHNldCB0aGUgdGlt
ZW91dCBhdCBhIGRlZmF1bHQgb2YgMCBtcy4KCmBgYGpzCmNvbnN0IGRlYm91
bmNlID0gKGZuLCBtcyA9IDApID0+IHsKICBsZXQgdGltZW91dElkOwogIHJl
dHVybiBmdW5jdGlvbiguLi5hcmdzKSB7CiAgICBjbGVhclRpbWVvdXQodGlt
ZW91dElkKTsKICAgIHRpbWVvdXRJZCA9IHNldFRpbWVvdXQoKCkgPT4gZm4u
YXBwbHkodGhpcywgYXJncyksIG1zKTsKICB9Owp9OwpgYGAKCjxkZXRhaWxz
Pgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCndpbmRvdy5h
ZGRFdmVudExpc3RlbmVyKAogICdyZXNpemUnLAogIGRlYm91bmNlKCgpID0+
IHsKICAgIGNvbnNvbGUubG9nKHdpbmRvdy5pbm5lcldpZHRoKTsKICAgIGNv
bnNvbGUubG9nKHdpbmRvdy5pbm5lckhlaWdodCk7CiAgfSwgMjUwKQopOyAv
LyBXaWxsIGxvZyB0aGUgd2luZG93IGRpbWVuc2lvbnMgYXQgbW9zdCBldmVy
eSAyNTBtcwpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3Bd
KCNjb250ZW50cykKCiMjIyBkZWZlcgoKRGVmZXJzIGludm9raW5nIGEgZnVu
Y3Rpb24gdW50aWwgdGhlIGN1cnJlbnQgY2FsbCBzdGFjayBoYXMgY2xlYXJl
ZC4KClVzZSBgc2V0VGltZW91dCgpYCB3aXRoIGEgdGltZW91dCBvZiAxbXMg
dG8gYWRkIGEgbmV3IGV2ZW50IHRvIHRoZSBicm93c2VyIGV2ZW50IHF1ZXVl
IGFuZCBhbGxvdyB0aGUgcmVuZGVyaW5nIGVuZ2luZSB0byBjb21wbGV0ZSBp
dHMgd29yay4gVXNlIHRoZSBzcHJlYWQgKGAuLi5gKSBvcGVyYXRvciB0byBz
dXBwbHkgdGhlIGZ1bmN0aW9uIHdpdGggYW4gYXJiaXRyYXJ5IG51bWJlciBv
ZiBhcmd1bWVudHMuCgpgYGBqcwpjb25zdCBkZWZlciA9IChmbiwgLi4uYXJn
cykgPT4gc2V0VGltZW91dChmbiwgMSwgLi4uYXJncyk7CmBgYAoKPGRldGFp
bHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKLy8gRXhh
bXBsZSBBOgpkZWZlcihjb25zb2xlLmxvZywgJ2EnKSwgY29uc29sZS5sb2co
J2InKTsgLy8gbG9ncyAnYicgdGhlbiAnYScKCi8vIEV4YW1wbGUgQjoKZG9j
dW1lbnQucXVlcnlTZWxlY3RvcignI3NvbWVFbGVtZW50JykuaW5uZXJIVE1M
ID0gJ0hlbGxvJzsKbG9uZ1J1bm5pbmdGdW5jdGlvbigpOyAvLyBCcm93c2Vy
IHdpbGwgbm90IHVwZGF0ZSB0aGUgSFRNTCB1bnRpbCB0aGlzIGhhcyBmaW5p
c2hlZApkZWZlcihsb25nUnVubmluZ0Z1bmN0aW9uKTsgLy8gQnJvd3NlciB3
aWxsIHVwZGF0ZSB0aGUgSFRNTCB0aGVuIHJ1biB0aGUgZnVuY3Rpb24KYGBg
CjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMp
CgojIyMgZGVsYXkKCkludm9rZXMgdGhlIHByb3ZpZGVkIGZ1bmN0aW9uIGFm
dGVyIGB3YWl0YCBtaWxsaXNlY29uZHMuCgpVc2UgYHNldFRpbWVvdXQoKWAg
dG8gZGVsYXkgZXhlY3V0aW9uIG9mIGBmbmAuClVzZSB0aGUgc3ByZWFkIChg
Li4uYCkgb3BlcmF0b3IgdG8gc3VwcGx5IHRoZSBmdW5jdGlvbiB3aXRoIGFu
IGFyYml0cmFyeSBudW1iZXIgb2YgYXJndW1lbnRzLgoKYGBganMKY29uc3Qg
ZGVsYXkgPSAoZm4sIHdhaXQsIC4uLmFyZ3MpID0+IHNldFRpbWVvdXQoZm4s
IHdhaXQsIC4uLmFyZ3MpOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFt
cGxlczwvc3VtbWFyeT4KCmBgYGpzCmRlbGF5KAogIGZ1bmN0aW9uKHRleHQp
IHsKICAgIGNvbnNvbGUubG9nKHRleHQpOwogIH0sCiAgMTAwMCwKICAnbGF0
ZXInCik7IC8vIExvZ3MgJ2xhdGVyJyBhZnRlciBvbmUgc2Vjb25kLgpgYGAK
PC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykK
CiMjIyBmdW5jdGlvbk5hbWUKCkxvZ3MgdGhlIG5hbWUgb2YgYSBmdW5jdGlv
bi4KClVzZSBgY29uc29sZS5kZWJ1ZygpYCBhbmQgdGhlIGBuYW1lYCBwcm9w
ZXJ0eSBvZiB0aGUgcGFzc2VkIG1ldGhvZCB0byBsb2cgdGhlIG1ldGhvZCdz
IG5hbWUgdG8gdGhlIGBkZWJ1Z2AgY2hhbm5lbCBvZiB0aGUgY29uc29sZS4K
CmBgYGpzCmNvbnN0IGZ1bmN0aW9uTmFtZSA9IGZuID0+IChjb25zb2xlLmRl
YnVnKGZuLm5hbWUpLCBmbik7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4
YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKZnVuY3Rpb25OYW1lKE1hdGgubWF4
KTsgLy8gbWF4IChsb2dnZWQgaW4gZGVidWcgY2hhbm5lbCBvZiBjb25zb2xl
KQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250
ZW50cykKCiMjIyBoegoKUmV0dXJucyB0aGUgbnVtYmVyIG9mIHRpbWVzIGEg
ZnVuY3Rpb24gZXhlY3V0ZWQgcGVyIHNlY29uZC4gCmBoemAgaXMgdGhlIHVu
aXQgZm9yIGBoZXJ0emAsIHRoZSB1bml0IG9mIGZyZXF1ZW5jeSBkZWZpbmVk
IGFzIG9uZSBjeWNsZSBwZXIgc2Vjb25kLgoKVXNlIGBwZXJmb3JtYW5jZS5u
b3coKWAgdG8gZ2V0IHRoZSBkaWZmZXJlbmNlIGluIG1pbGxpc2Vjb25kcyBi
ZWZvcmUgYW5kIGFmdGVyIHRoZSBpdGVyYXRpb24gbG9vcCB0byBjYWxjdWxh
dGUgdGhlIHRpbWUgZWxhcHNlZCBleGVjdXRpbmcgdGhlIGZ1bmN0aW9uIGBp
dGVyYXRpb25zYCB0aW1lcy4gClJldHVybiB0aGUgbnVtYmVyIG9mIGN5Y2xl
cyBwZXIgc2Vjb25kIGJ5IGNvbnZlcnRpbmcgbWlsbGlzZWNvbmRzIHRvIHNl
Y29uZHMgYW5kIGRpdmlkaW5nIGl0IGJ5IHRoZSB0aW1lIGVsYXBzZWQuIApP
bWl0IHRoZSBzZWNvbmQgYXJndW1lbnQsIGBpdGVyYXRpb25zYCwgdG8gdXNl
IHRoZSBkZWZhdWx0IG9mIDEwMCBpdGVyYXRpb25zLgoKYGBganMKY29uc3Qg
aHogPSAoZm4sIGl0ZXJhdGlvbnMgPSAxMDApID0+IHsKICBjb25zdCBiZWZv
cmUgPSBwZXJmb3JtYW5jZS5ub3coKTsKICBmb3IgKGxldCBpID0gMDsgaSA8
IGl0ZXJhdGlvbnM7IGkrKykgZm4oKTsKICByZXR1cm4gKDEwMDAgKiBpdGVy
YXRpb25zKSAvIChwZXJmb3JtYW5jZS5ub3coKSAtIGJlZm9yZSk7Cn07CmBg
YAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBg
anMKLy8gMTAsMDAwIGVsZW1lbnQgYXJyYXkKY29uc3QgbnVtYmVycyA9IEFy
cmF5KDEwMDAwKQogIC5maWxsKCkKICAubWFwKChfLCBpKSA9PiBpKTsKCi8v
IFRlc3QgZnVuY3Rpb25zIHdpdGggdGhlIHNhbWUgZ29hbDogc3VtIHVwIHRo
ZSBlbGVtZW50cyBpbiB0aGUgYXJyYXkKY29uc3Qgc3VtUmVkdWNlID0gKCkg
PT4gbnVtYmVycy5yZWR1Y2UoKGFjYywgbikgPT4gYWNjICsgbiwgMCk7CmNv
bnN0IHN1bUZvckxvb3AgPSAoKSA9PiB7CiAgbGV0IHN1bSA9IDA7CiAgZm9y
IChsZXQgaSA9IDA7IGkgPCBudW1iZXJzLmxlbmd0aDsgaSsrKSBzdW0gKz0g
bnVtYmVyc1tpXTsKICByZXR1cm4gc3VtOwp9OwoKLy8gYHN1bUZvckxvb3Bg
IGlzIG5lYXJseSAxMCB0aW1lcyBmYXN0ZXIKTWF0aC5yb3VuZChoeihzdW1S
ZWR1Y2UpKTsgLy8gNTcyCk1hdGgucm91bmQoaHooc3VtRm9yTG9vcCkpOyAv
LyA0Nzg0CmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0o
I2NvbnRlbnRzKQoKIyMjIG1lbW9pemUgIVthZHZhbmNlZF0oL2FkdmFuY2Vk
LnN2ZykKClJldHVybnMgdGhlIG1lbW9pemVkIChjYWNoZWQpIGZ1bmN0aW9u
LgoKQ3JlYXRlIGFuIGVtcHR5IGNhY2hlIGJ5IGluc3RhbnRpYXRpbmcgYSBu
ZXcgYE1hcGAgb2JqZWN0LgpSZXR1cm4gYSBmdW5jdGlvbiB3aGljaCB0YWtl
cyBhIHNpbmdsZSBhcmd1bWVudCB0byBiZSBzdXBwbGllZCB0byB0aGUgbWVt
b2l6ZWQgZnVuY3Rpb24gYnkgZmlyc3QgY2hlY2tpbmcgaWYgdGhlIGZ1bmN0
aW9uJ3Mgb3V0cHV0IGZvciB0aGF0IHNwZWNpZmljIGlucHV0IHZhbHVlIGlz
IGFscmVhZHkgY2FjaGVkLCBvciBzdG9yZSBhbmQgcmV0dXJuIGl0IGlmIG5v
dC4gVGhlIGBmdW5jdGlvbmAga2V5d29yZCBtdXN0IGJlIHVzZWQgaW4gb3Jk
ZXIgdG8gYWxsb3cgdGhlIG1lbW9pemVkIGZ1bmN0aW9uIHRvIGhhdmUgaXRz
IGB0aGlzYCBjb250ZXh0IGNoYW5nZWQgaWYgbmVjZXNzYXJ5LgpBbGxvdyBh
Y2Nlc3MgdG8gdGhlIGBjYWNoZWAgYnkgc2V0dGluZyBpdCBhcyBhIHByb3Bl
cnR5IG9uIHRoZSByZXR1cm5lZCBmdW5jdGlvbi4KCmBgYGpzCmNvbnN0IG1l
bW9pemUgPSBmbiA9PiB7CiAgY29uc3QgY2FjaGUgPSBuZXcgTWFwKCk7CiAg
Y29uc3QgY2FjaGVkID0gZnVuY3Rpb24odmFsKSB7CiAgICByZXR1cm4gY2Fj
aGUuaGFzKHZhbCkgPyBjYWNoZS5nZXQodmFsKSA6IGNhY2hlLnNldCh2YWws
IGZuLmNhbGwodGhpcywgdmFsKSkgJiYgY2FjaGUuZ2V0KHZhbCk7CiAgfTsK
ICBjYWNoZWQuY2FjaGUgPSBjYWNoZTsKICByZXR1cm4gY2FjaGVkOwp9Owpg
YGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBg
YGpzCi8vIFNlZSB0aGUgYGFuYWdyYW1zYCBzbmlwcGV0Lgpjb25zdCBhbmFn
cmFtc0NhY2hlZCA9IG1lbW9pemUoYW5hZ3JhbXMpOwphbmFncmFtc0NhY2hl
ZCgnamF2YXNjcmlwdCcpOyAvLyB0YWtlcyBhIGxvbmcgdGltZQphbmFncmFt
c0NhY2hlZCgnamF2YXNjcmlwdCcpOyAvLyByZXR1cm5zIHZpcnR1YWxseSBp
bnN0YW50bHkgc2luY2UgaXQncyBub3cgY2FjaGVkCmNvbnNvbGUubG9nKGFu
YWdyYW1zQ2FjaGVkLmNhY2hlKTsgLy8gVGhlIGNhY2hlZCBhbmFncmFtcyBt
YXAKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29u
dGVudHMpCgojIyMgbmVnYXRlCgpOZWdhdGVzIGEgcHJlZGljYXRlIGZ1bmN0
aW9uLgoKVGFrZSBhIHByZWRpY2F0ZSBmdW5jdGlvbiBhbmQgYXBwbHkgdGhl
IG5vdCBvcGVyYXRvciAoYCFgKSB0byBpdCB3aXRoIGl0cyBhcmd1bWVudHMu
CgpgYGBqcwpjb25zdCBuZWdhdGUgPSBmdW5jID0+ICguLi5hcmdzKSA9PiAh
ZnVuYyguLi5hcmdzKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBs
ZXM8L3N1bW1hcnk+CgpgYGBqcwpbMSwgMiwgMywgNCwgNSwgNl0uZmlsdGVy
KG5lZ2F0ZShuID0+IG4gJSAyID09PSAwKSk7IC8vIFsgMSwgMywgNSBdCmBg
YAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRz
KQoKIyMjIG9uY2UKCkVuc3VyZXMgYSBmdW5jdGlvbiBpcyBjYWxsZWQgb25s
eSBvbmNlLgoKVXRpbGl6aW5nIGEgY2xvc3VyZSwgdXNlIGEgZmxhZywgYGNh
bGxlZGAsIGFuZCBzZXQgaXQgdG8gYHRydWVgIG9uY2UgdGhlIGZ1bmN0aW9u
IGlzIGNhbGxlZCBmb3IgdGhlIGZpcnN0IHRpbWUsIHByZXZlbnRpbmcgaXQg
ZnJvbSBiZWluZyBjYWxsZWQgYWdhaW4uIEluIG9yZGVyIHRvIGFsbG93IHRo
ZSBmdW5jdGlvbiB0byBoYXZlIGl0cyBgdGhpc2AgY29udGV4dCBjaGFuZ2Vk
IChzdWNoIGFzIGluIGFuIGV2ZW50IGxpc3RlbmVyKSwgdGhlIGBmdW5jdGlv
bmAga2V5d29yZCBtdXN0IGJlIHVzZWQsIGFuZCB0aGUgc3VwcGxpZWQgZnVu
Y3Rpb24gbXVzdCBoYXZlIHRoZSBjb250ZXh0IGFwcGxpZWQuCkFsbG93IHRo
ZSBmdW5jdGlvbiB0byBiZSBzdXBwbGllZCB3aXRoIGFuIGFyYml0cmFyeSBu
dW1iZXIgb2YgYXJndW1lbnRzIHVzaW5nIHRoZSByZXN0L3NwcmVhZCAoYC4u
LmApIG9wZXJhdG9yLgoKYGBganMKY29uc3Qgb25jZSA9IGZuID0+IHsKICBs
ZXQgY2FsbGVkID0gZmFsc2U7CiAgcmV0dXJuIGZ1bmN0aW9uKC4uLmFyZ3Mp
IHsKICAgIGlmIChjYWxsZWQpIHJldHVybjsKICAgIGNhbGxlZCA9IHRydWU7
CiAgICByZXR1cm4gZm4uYXBwbHkodGhpcywgYXJncyk7CiAgfTsKfTsKYGBg
Cgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBq
cwpjb25zdCBzdGFydEFwcCA9IGZ1bmN0aW9uKGV2ZW50KSB7CiAgY29uc29s
ZS5sb2codGhpcywgZXZlbnQpOyAvLyBkb2N1bWVudC5ib2R5LCBNb3VzZUV2
ZW50Cn07CmRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2sn
LCBvbmNlKHN0YXJ0QXBwKSk7IC8vIG9ubHkgcnVucyBgc3RhcnRBcHBgIG9u
Y2UgdXBvbiBjbGljawpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0
byB0b3BdKCNjb250ZW50cykKCiMjIyBwYXJ0aWFsCgpDcmVhdGVzIGEgZnVu
Y3Rpb24gdGhhdCBpbnZva2VzIGBmbmAgd2l0aCBgcGFydGlhbHNgIHByZXBl
bmRlZCB0byB0aGUgYXJndW1lbnRzIGl0IHJlY2VpdmVzLgoKVXNlIHRoZSBz
cHJlYWQgb3BlcmF0b3IgKGAuLi5gKSB0byBwcmVwZW5kIGBwYXJ0aWFsc2Ag
dG8gdGhlIGxpc3Qgb2YgYXJndW1lbnRzIG9mIGBmbmAuCgpgYGBqcwpjb25z
dCBwYXJ0aWFsID0gKGZuLCAuLi5wYXJ0aWFscykgPT4gKC4uLmFyZ3MpID0+
IGZuKC4uLnBhcnRpYWxzLCAuLi5hcmdzKTsKYGBgCgo8ZGV0YWlscz4KPHN1
bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpjb25zdCBncmVldCA9
IChncmVldGluZywgbmFtZSkgPT4gZ3JlZXRpbmcgKyAnICcgKyBuYW1lICsg
JyEnOwpjb25zdCBncmVldEhlbGxvID0gcGFydGlhbChncmVldCwgJ0hlbGxv
Jyk7CmdyZWV0SGVsbG8oJ0pvaG4nKTsgLy8gJ0hlbGxvIEpvaG4hJwpgYGAK
PC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykK
CiMjIyBwYXJ0aWFsUmlnaHQKCkNyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IGlu
dm9rZXMgYGZuYCB3aXRoIGBwYXJ0aWFsc2AgYXBwZW5kZWQgdG8gdGhlIGFy
Z3VtZW50cyBpdCByZWNlaXZlcy4KClVzZSB0aGUgc3ByZWFkIG9wZXJhdG9y
IChgLi4uYCkgdG8gYXBwZW5kIGBwYXJ0aWFsc2AgdG8gdGhlIGxpc3Qgb2Yg
YXJndW1lbnRzIG9mIGBmbmAuCgpgYGBqcwpjb25zdCBwYXJ0aWFsUmlnaHQg
PSAoZm4sIC4uLnBhcnRpYWxzKSA9PiAoLi4uYXJncykgPT4gZm4oLi4uYXJn
cywgLi4ucGFydGlhbHMpOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFt
cGxlczwvc3VtbWFyeT4KCmBgYGpzCmNvbnN0IGdyZWV0ID0gKGdyZWV0aW5n
LCBuYW1lKSA9PiBncmVldGluZyArICcgJyArIG5hbWUgKyAnISc7CmNvbnN0
IGdyZWV0Sm9obiA9IHBhcnRpYWxSaWdodChncmVldCwgJ0pvaG4nKTsKZ3Jl
ZXRKb2huKCdIZWxsbycpOyAvLyAnSGVsbG8gSm9obiEnCmBgYAo8L2RldGFp
bHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHJ1
blByb21pc2VzSW5TZXJpZXMKClJ1bnMgYW4gYXJyYXkgb2YgcHJvbWlzZXMg
aW4gc2VyaWVzLgoKVXNlIGBBcnJheS5wcm90b3R5cGUucmVkdWNlKClgIHRv
IGNyZWF0ZSBhIHByb21pc2UgY2hhaW4sIHdoZXJlIGVhY2ggcHJvbWlzZSBy
ZXR1cm5zIHRoZSBuZXh0IHByb21pc2Ugd2hlbiByZXNvbHZlZC4KCmBgYGpz
CmNvbnN0IHJ1blByb21pc2VzSW5TZXJpZXMgPSBwcyA9PiBwcy5yZWR1Y2Uo
KHAsIG5leHQpID0+IHAudGhlbihuZXh0KSwgUHJvbWlzZS5yZXNvbHZlKCkp
OwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4K
CmBgYGpzCmNvbnN0IGRlbGF5ID0gZCA9PiBuZXcgUHJvbWlzZShyID0+IHNl
dFRpbWVvdXQociwgZCkpOwpydW5Qcm9taXNlc0luU2VyaWVzKFsoKSA9PiBk
ZWxheSgxMDAwKSwgKCkgPT4gZGVsYXkoMjAwMCldKTsgLy8gRXhlY3V0ZXMg
ZWFjaCBwcm9taXNlIHNlcXVlbnRpYWxseSwgdGFraW5nIGEgdG90YWwgb2Yg
MyBzZWNvbmRzIHRvIGNvbXBsZXRlCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+Ks
hiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHNsZWVwCgpEZWxheXMg
dGhlIGV4ZWN1dGlvbiBvZiBhbiBhc3luY2hyb25vdXMgZnVuY3Rpb24uCgpE
ZWxheSBleGVjdXRpbmcgcGFydCBvZiBhbiBgYXN5bmNgIGZ1bmN0aW9uLCBi
eSBwdXR0aW5nIGl0IHRvIHNsZWVwLCByZXR1cm5pbmcgYSBgUHJvbWlzZWAu
CgpgYGBqcwpjb25zdCBzbGVlcCA9IG1zID0+IG5ldyBQcm9taXNlKHJlc29s
dmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCBtcykpOwpgYGAKCjxkZXRhaWxz
Pgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmFzeW5jIGZ1
bmN0aW9uIHNsZWVweVdvcmsoKSB7CiAgY29uc29sZS5sb2coIkknbSBnb2lu
ZyB0byBzbGVlcCBmb3IgMSBzZWNvbmQuIik7CiAgYXdhaXQgc2xlZXAoMTAw
MCk7CiAgY29uc29sZS5sb2coJ0kgd29rZSB1cCBhZnRlciAxIHNlY29uZC4n
KTsKfQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNj
b250ZW50cykKCiMjIyB0aHJvdHRsZSAhW2FkdmFuY2VkXSgvYWR2YW5jZWQu
c3ZnKQoKQ3JlYXRlcyBhIHRocm90dGxlZCBmdW5jdGlvbiB0aGF0IG9ubHkg
aW52b2tlcyB0aGUgcHJvdmlkZWQgZnVuY3Rpb24gYXQgbW9zdCBvbmNlIHBl
ciBldmVyeSBgd2FpdGAgbWlsbGlzZWNvbmRzCgpVc2UgYHNldFRpbWVvdXQo
KWAgYW5kIGBjbGVhclRpbWVvdXQoKWAgdG8gdGhyb3R0bGUgdGhlIGdpdmVu
IG1ldGhvZCwgYGZuYC4KVXNlIGBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHko
KWAgdG8gYXBwbHkgdGhlIGB0aGlzYCBjb250ZXh0IHRvIHRoZSBmdW5jdGlv
biBhbmQgcHJvdmlkZSB0aGUgbmVjZXNzYXJ5IGBhcmd1bWVudHNgLgpVc2Ug
YERhdGUubm93KClgIHRvIGtlZXAgdHJhY2sgb2YgdGhlIGxhc3QgdGltZSB0
aGUgdGhyb3R0bGVkIGZ1bmN0aW9uIHdhcyBpbnZva2VkLgpPbWl0IHRoZSBz
ZWNvbmQgYXJndW1lbnQsIGB3YWl0YCwgdG8gc2V0IHRoZSB0aW1lb3V0IGF0
IGEgZGVmYXVsdCBvZiAwIG1zLgoKYGBganMKY29uc3QgdGhyb3R0bGUgPSAo
Zm4sIHdhaXQpID0+IHsKICBsZXQgaW5UaHJvdHRsZSwgbGFzdEZuLCBsYXN0
VGltZTsKICByZXR1cm4gZnVuY3Rpb24oKSB7CiAgICBjb25zdCBjb250ZXh0
ID0gdGhpcywKICAgICAgYXJncyA9IGFyZ3VtZW50czsKICAgIGlmICghaW5U
aHJvdHRsZSkgewogICAgICBmbi5hcHBseShjb250ZXh0LCBhcmdzKTsKICAg
ICAgbGFzdFRpbWUgPSBEYXRlLm5vdygpOwogICAgICBpblRocm90dGxlID0g
dHJ1ZTsKICAgIH0gZWxzZSB7CiAgICAgIGNsZWFyVGltZW91dChsYXN0Rm4p
OwogICAgICBsYXN0Rm4gPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAg
ICAgIGlmIChEYXRlLm5vdygpIC0gbGFzdFRpbWUgPj0gd2FpdCkgewogICAg
ICAgICAgZm4uYXBwbHkoY29udGV4dCwgYXJncyk7CiAgICAgICAgICBsYXN0
VGltZSA9IERhdGUubm93KCk7CiAgICAgICAgfQogICAgICB9LCBNYXRoLm1h
eCh3YWl0IC0gKERhdGUubm93KCkgLSBsYXN0VGltZSksIDApKTsKICAgIH0K
ICB9Owp9OwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3Vt
bWFyeT4KCmBgYGpzCndpbmRvdy5hZGRFdmVudExpc3RlbmVyKAogICdyZXNp
emUnLAogIHRocm90dGxlKGZ1bmN0aW9uKGV2dCkgewogICAgY29uc29sZS5s
b2cod2luZG93LmlubmVyV2lkdGgpOwogICAgY29uc29sZS5sb2cod2luZG93
LmlubmVySGVpZ2h0KTsKICB9LCAyNTApCik7IC8vIFdpbGwgbG9nIHRoZSB3
aW5kb3cgZGltZW5zaW9ucyBhdCBtb3N0IGV2ZXJ5IDI1MG1zCmBgYAo8L2Rl
dGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMj
IHRpbWVzCgpJdGVyYXRlcyBvdmVyIGEgY2FsbGJhY2sgYG5gIHRpbWVzCgpV
c2UgYEZ1bmN0aW9uLmNhbGwoKWAgdG8gY2FsbCBgZm5gIGBuYCB0aW1lcyBv
ciB1bnRpbCBpdCByZXR1cm5zIGBmYWxzZWAuCk9taXQgdGhlIGxhc3QgYXJn
dW1lbnQsIGBjb250ZXh0YCwgdG8gdXNlIGFuIGB1bmRlZmluZWRgIG9iamVj
dCAob3IgdGhlIGdsb2JhbCBvYmplY3QgaW4gbm9uLXN0cmljdCBtb2RlKS4K
CmBgYGpzCmNvbnN0IHRpbWVzID0gKG4sIGZuLCBjb250ZXh0ID0gdW5kZWZp
bmVkKSA9PiB7CiAgbGV0IGkgPSAwOwogIHdoaWxlIChmbi5jYWxsKGNvbnRl
eHQsIGkpICE9PSBmYWxzZSAmJiArK2kgPCBuKSB7fQp9OwpgYGAKCjxkZXRh
aWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCnZhciBv
dXRwdXQgPSAnJzsKdGltZXMoNSwgaSA9PiAob3V0cHV0ICs9IGkpKTsKY29u
c29sZS5sb2cob3V0cHV0KTsgLy8gMDEyMzQKYGBgCjwvZGV0YWlscz4KCjxi
cj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgdW5jdXJyeQoK
VW5jdXJyaWVzIGEgZnVuY3Rpb24gdXAgdG8gZGVwdGggYG5gLgoKUmV0dXJu
IGEgdmFyaWFkaWMgZnVuY3Rpb24uClVzZSBgQXJyYXkucHJvdG90eXBlLnJl
ZHVjZSgpYCBvbiB0aGUgcHJvdmlkZWQgYXJndW1lbnRzIHRvIGNhbGwgZWFj
aCBzdWJzZXF1ZW50IGN1cnJ5IGxldmVsIG9mIHRoZSBmdW5jdGlvbi4KSWYg
dGhlIGBsZW5ndGhgIG9mIHRoZSBwcm92aWRlZCBhcmd1bWVudHMgaXMgbGVz
cyB0aGFuIGBuYCB0aHJvdyBhbiBlcnJvci4KT3RoZXJ3aXNlLCBjYWxsIGBm
bmAgd2l0aCB0aGUgcHJvcGVyIGFtb3VudCBvZiBhcmd1bWVudHMsIHVzaW5n
IGBBcnJheS5wcm90b3R5cGUuc2xpY2UoMCwgbilgLgpPbWl0IHRoZSBzZWNv
bmQgYXJndW1lbnQsIGBuYCwgdG8gdW5jdXJyeSB1cCB0byBkZXB0aCBgMWAu
CgpgYGBqcwpjb25zdCB1bmN1cnJ5ID0gKGZuLCBuID0gMSkgPT4gKC4uLmFy
Z3MpID0+IHsKICBjb25zdCBuZXh0ID0gYWNjID0+IGFyZ3MgPT4gYXJncy5y
ZWR1Y2UoKHgsIHkpID0+IHgoeSksIGFjYyk7CiAgaWYgKG4gPiBhcmdzLmxl
bmd0aCkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0FyZ3VtZW50cyB0b28gZmV3
IScpOwogIHJldHVybiBuZXh0KGZuKShhcmdzLnNsaWNlKDAsIG4pKTsKfTsK
YGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+Cgpg
YGBqcwpjb25zdCBhZGQgPSB4ID0+IHkgPT4geiA9PiB4ICsgeSArIHo7CmNv
bnN0IHVuY3VycmllZEFkZCA9IHVuY3VycnkoYWRkLCAzKTsKdW5jdXJyaWVk
QWRkKDEsIDIsIDMpOyAvLyA2CmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBC
YWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHVuZm9sZAoKQnVpbGRzIGFu
IGFycmF5LCB1c2luZyBhbiBpdGVyYXRvciBmdW5jdGlvbiBhbmQgYW4gaW5p
dGlhbCBzZWVkIHZhbHVlLgoKVXNlIGEgYHdoaWxlYCBsb29wIGFuZCBgQXJy
YXkucHJvdG90eXBlLnB1c2goKWAgdG8gY2FsbCB0aGUgZnVuY3Rpb24gcmVw
ZWF0ZWRseSB1bnRpbCBpdCByZXR1cm5zIGBmYWxzZWAuClRoZSBpdGVyYXRv
ciBmdW5jdGlvbiBhY2NlcHRzIG9uZSBhcmd1bWVudCAoYHNlZWRgKSBhbmQg
bXVzdCBhbHdheXMgcmV0dXJuIGFuIGFycmF5IHdpdGggdHdvIGVsZW1lbnRz
IChbYHZhbHVlYCwgYG5leHRTZWVkYF0pIG9yIGBmYWxzZWAgdG8gdGVybWlu
YXRlLgoKYGBganMKY29uc3QgdW5mb2xkID0gKGZuLCBzZWVkKSA9PiB7CiAg
bGV0IHJlc3VsdCA9IFtdLAogICAgdmFsID0gW251bGwsIHNlZWRdOwogIHdo
aWxlICgodmFsID0gZm4odmFsWzFdKSkpIHJlc3VsdC5wdXNoKHZhbFswXSk7
CiAgcmV0dXJuIHJlc3VsdDsKfTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+
RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwp2YXIgZiA9IG4gPT4gKG4gPiA1
MCA/IGZhbHNlIDogWy1uLCBuICsgMTBdKTsKdW5mb2xkKGYsIDEwKTsgLy8g
Wy0xMCwgLTIwLCAtMzAsIC00MCwgLTUwXQpgYGAKPC9kZXRhaWxzPgoKPGJy
PlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyB3aGVuCgpUZXN0
cyBhIHZhbHVlLCBgeGAsIGFnYWluc3QgYSBwcmVkaWNhdGUgZnVuY3Rpb24u
IElmIGB0cnVlYCwgcmV0dXJuIGBmbih4KWAuIEVsc2UsIHJldHVybiBgeGAu
IAoKUmV0dXJuIGEgZnVuY3Rpb24gZXhwZWN0aW5nIGEgc2luZ2xlIHZhbHVl
LCBgeGAsIHRoYXQgcmV0dXJucyB0aGUgYXBwcm9wcmlhdGUgdmFsdWUgYmFz
ZWQgb24gYHByZWRgLgoKYGBganMKY29uc3Qgd2hlbiA9IChwcmVkLCB3aGVu
VHJ1ZSkgPT4geCA9PiAocHJlZCh4KSA/IHdoZW5UcnVlKHgpIDogeCk7CmBg
YAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBg
anMKY29uc3QgZG91YmxlRXZlbk51bWJlcnMgPSB3aGVuKHggPT4geCAlIDIg
PT09IDAsIHggPT4geCAqIDIpOwpkb3VibGVFdmVuTnVtYmVycygyKTsgLy8g
NApkb3VibGVFdmVuTnVtYmVycygxKTsgLy8gMQpgYGAKPC9kZXRhaWxzPgoK
PGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCi0tLQoKIyMg4p6X
IE1hdGgKCgojIyMgYXBwcm94aW1hdGVseUVxdWFsCgpDaGVja3MgaWYgdHdv
IG51bWJlcnMgYXJlIGFwcHJveGltYXRlbHkgZXF1YWwgdG8gZWFjaCBvdGhl
ci4KClVzZSBgTWF0aC5hYnMoKWAgdG8gY29tcGFyZSB0aGUgYWJzb2x1dGUg
ZGlmZmVyZW5jZSBvZiB0aGUgdHdvIHZhbHVlcyB0byBgZXBzaWxvbmAuCk9t
aXQgdGhlIHRoaXJkIHBhcmFtZXRlciwgYGVwc2lsb25gLCB0byB1c2UgYSBk
ZWZhdWx0IHZhbHVlIG9mIGAwLjAwMWAuCgpgYGBqcwpjb25zdCBhcHByb3hp
bWF0ZWx5RXF1YWwgPSAodjEsIHYyLCBlcHNpbG9uID0gMC4wMDEpID0+IE1h
dGguYWJzKHYxIC0gdjIpIDwgZXBzaWxvbjsKYGBgCgo8ZGV0YWlscz4KPHN1
bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwphcHByb3hpbWF0ZWx5
RXF1YWwoTWF0aC5QSSAvIDIuMCwgMS41NzA4KTsgLy8gdHJ1ZQpgYGAKPC9k
ZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMj
IyBhdmVyYWdlCgpSZXR1cm5zIHRoZSBhdmVyYWdlIG9mIHR3byBvciBtb3Jl
IG51bWJlcnMuCgpVc2UgYEFycmF5LnByb3RvdHlwZS5yZWR1Y2UoKWAgdG8g
YWRkIGVhY2ggdmFsdWUgdG8gYW4gYWNjdW11bGF0b3IsIGluaXRpYWxpemVk
IHdpdGggYSB2YWx1ZSBvZiBgMGAsIGRpdmlkZSBieSB0aGUgYGxlbmd0aGAg
b2YgdGhlIGFycmF5LgoKYGBganMKY29uc3QgYXZlcmFnZSA9ICguLi5udW1z
KSA9PiBudW1zLnJlZHVjZSgoYWNjLCB2YWwpID0+IGFjYyArIHZhbCwgMCkg
LyBudW1zLmxlbmd0aDsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBs
ZXM8L3N1bW1hcnk+CgpgYGBqcwphdmVyYWdlKC4uLlsxLCAyLCAzXSk7IC8v
IDIKYXZlcmFnZSgxLCAyLCAzKTsgLy8gMgpgYGAKPC9kZXRhaWxzPgoKPGJy
PlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBhdmVyYWdlQnkK
ClJldHVybnMgdGhlIGF2ZXJhZ2Ugb2YgYW4gYXJyYXksIGFmdGVyIG1hcHBp
bmcgZWFjaCBlbGVtZW50IHRvIGEgdmFsdWUgdXNpbmcgdGhlIHByb3ZpZGVk
IGZ1bmN0aW9uLgoKVXNlIGBBcnJheS5wcm90b3R5cGUubWFwKClgIHRvIG1h
cCBlYWNoIGVsZW1lbnQgdG8gdGhlIHZhbHVlIHJldHVybmVkIGJ5IGBmbmAs
IGBBcnJheS5wcm90b3R5cGUucmVkdWNlKClgIHRvIGFkZCBlYWNoIHZhbHVl
IHRvIGFuIGFjY3VtdWxhdG9yLCBpbml0aWFsaXplZCB3aXRoIGEgdmFsdWUg
b2YgYDBgLCBkaXZpZGUgYnkgdGhlIGBsZW5ndGhgIG9mIHRoZSBhcnJheS4K
CmBgYGpzCmNvbnN0IGF2ZXJhZ2VCeSA9IChhcnIsIGZuKSA9PgogIGFyci5t
YXAodHlwZW9mIGZuID09PSAnZnVuY3Rpb24nID8gZm4gOiB2YWwgPT4gdmFs
W2ZuXSkucmVkdWNlKChhY2MsIHZhbCkgPT4gYWNjICsgdmFsLCAwKSAvCiAg
YXJyLmxlbmd0aDsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8
L3N1bW1hcnk+CgpgYGBqcwphdmVyYWdlQnkoW3sgbjogNCB9LCB7IG46IDIg
fSwgeyBuOiA4IH0sIHsgbjogNiB9XSwgbyA9PiBvLm4pOyAvLyA1CmF2ZXJh
Z2VCeShbeyBuOiA0IH0sIHsgbjogMiB9LCB7IG46IDggfSwgeyBuOiA2IH1d
LCAnbicpOyAvLyA1CmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRv
IHRvcF0oI2NvbnRlbnRzKQoKIyMjIGJpbm9taWFsQ29lZmZpY2llbnQKCkV2
YWx1YXRlcyB0aGUgYmlub21pYWwgY29lZmZpY2llbnQgb2YgdHdvIGludGVn
ZXJzIGBuYCBhbmQgYGtgLgoKVXNlIGBOdW1iZXIuaXNOYU4oKWAgdG8gY2hl
Y2sgaWYgYW55IG9mIHRoZSB0d28gdmFsdWVzIGlzIGBOYU5gLgpDaGVjayBp
ZiBga2AgaXMgbGVzcyB0aGFuIGAwYCwgZ3JlYXRlciB0aGFuIG9yIGVxdWFs
IHRvIGBuYCwgZXF1YWwgdG8gYDFgIG9yIGBuIC0gMWAgYW5kIHJldHVybiB0
aGUgYXBwcm9wcmlhdGUgcmVzdWx0LgpDaGVjayBpZiBgbiAtIGtgIGlzIGxl
c3MgdGhhbiBga2AgYW5kIHN3aXRjaCB0aGVpciB2YWx1ZXMgYWNjb3JkaW5n
bHkuCkxvb3AgZnJvbSBgMmAgdGhyb3VnaCBga2AgYW5kIGNhbGN1bGF0ZSB0
aGUgYmlub21pYWwgY29lZmZpY2llbnQuClVzZSBgTWF0aC5yb3VuZCgpYCB0
byBhY2NvdW50IGZvciByb3VuZGluZyBlcnJvcnMgaW4gdGhlIGNhbGN1bGF0
aW9uLgoKYGBganMKY29uc3QgYmlub21pYWxDb2VmZmljaWVudCA9IChuLCBr
KSA9PiB7CiAgaWYgKE51bWJlci5pc05hTihuKSB8fCBOdW1iZXIuaXNOYU4o
aykpIHJldHVybiBOYU47CiAgaWYgKGsgPCAwIHx8IGsgPiBuKSByZXR1cm4g
MDsKICBpZiAoayA9PT0gMCB8fCBrID09PSBuKSByZXR1cm4gMTsKICBpZiAo
ayA9PT0gMSB8fCBrID09PSBuIC0gMSkgcmV0dXJuIG47CiAgaWYgKG4gLSBr
IDwgaykgayA9IG4gLSBrOwogIGxldCByZXMgPSBuOwogIGZvciAobGV0IGog
PSAyOyBqIDw9IGs7IGorKykgcmVzICo9IChuIC0gaiArIDEpIC8gajsKICBy
ZXR1cm4gTWF0aC5yb3VuZChyZXMpOwp9OwpgYGAKCjxkZXRhaWxzPgo8c3Vt
bWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmJpbm9taWFsQ29lZmZp
Y2llbnQoOCwgMik7IC8vIDI4CmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBC
YWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGNsYW1wTnVtYmVyCgpDbGFt
cHMgYG51bWAgd2l0aGluIHRoZSBpbmNsdXNpdmUgcmFuZ2Ugc3BlY2lmaWVk
IGJ5IHRoZSBib3VuZGFyeSB2YWx1ZXMgYGFgIGFuZCBgYmAuCgpJZiBgbnVt
YCBmYWxscyB3aXRoaW4gdGhlIHJhbmdlLCByZXR1cm4gYG51bWAuCk90aGVy
d2lzZSwgcmV0dXJuIHRoZSBuZWFyZXN0IG51bWJlciBpbiB0aGUgcmFuZ2Uu
CgpgYGBqcwpjb25zdCBjbGFtcE51bWJlciA9IChudW0sIGEsIGIpID0+IE1h
dGgubWF4KE1hdGgubWluKG51bSwgTWF0aC5tYXgoYSwgYikpLCBNYXRoLm1p
bihhLCBiKSk7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9z
dW1tYXJ5PgoKYGBganMKY2xhbXBOdW1iZXIoMiwgMywgNSk7IC8vIDMKY2xh
bXBOdW1iZXIoMSwgLTEsIC01KTsgLy8gLTEKYGBgCjwvZGV0YWlscz4KCjxi
cj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgZGVncmVlc1Rv
UmFkcwoKQ29udmVydHMgYW4gYW5nbGUgZnJvbSBkZWdyZWVzIHRvIHJhZGlh
bnMuCgpVc2UgYE1hdGguUElgIGFuZCB0aGUgZGVncmVlIHRvIHJhZGlhbiBm
b3JtdWxhIHRvIGNvbnZlcnQgdGhlIGFuZ2xlIGZyb20gZGVncmVlcyB0byBy
YWRpYW5zLgoKYGBganMKY29uc3QgZGVncmVlc1RvUmFkcyA9IGRlZyA9PiAo
ZGVnICogTWF0aC5QSSkgLyAxODAuMDsKYGBgCgo8ZGV0YWlscz4KPHN1bW1h
cnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpkZWdyZWVzVG9SYWRzKDkw
LjApOyAvLyB+MS41NzA4CmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNr
IHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGRpZ2l0aXplCgpDb252ZXJ0cyBh
IG51bWJlciB0byBhbiBhcnJheSBvZiBkaWdpdHMuCgpDb252ZXJ0IHRoZSBu
dW1iZXIgdG8gYSBzdHJpbmcsIHVzaW5nIHRoZSBzcHJlYWQgb3BlcmF0b3Ig
KGAuLi5gKSB0byBidWlsZCBhbiBhcnJheS4KVXNlIGBBcnJheS5wcm90b3R5
cGUubWFwKClgIGFuZCBgcGFyc2VJbnQoKWAgdG8gdHJhbnNmb3JtIGVhY2gg
dmFsdWUgdG8gYW4gaW50ZWdlci4KCmBgYGpzCmNvbnN0IGRpZ2l0aXplID0g
biA9PiBbLi4uYCR7bn1gXS5tYXAoaSA9PiBwYXJzZUludChpKSk7CmBgYAoK
PGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMK
ZGlnaXRpemUoMTIzKTsgLy8gWzEsIDIsIDNdCmBgYAo8L2RldGFpbHM+Cgo8
YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGRpc3RhbmNl
CgpSZXR1cm5zIHRoZSBkaXN0YW5jZSBiZXR3ZWVuIHR3byBwb2ludHMuCgpV
c2UgYE1hdGguaHlwb3QoKWAgdG8gY2FsY3VsYXRlIHRoZSBFdWNsaWRlYW4g
ZGlzdGFuY2UgYmV0d2VlbiB0d28gcG9pbnRzLgoKYGBganMKY29uc3QgZGlz
dGFuY2UgPSAoeDAsIHkwLCB4MSwgeTEpID0+IE1hdGguaHlwb3QoeDEgLSB4
MCwgeTEgLSB5MCk7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVz
PC9zdW1tYXJ5PgoKYGBganMKZGlzdGFuY2UoMSwgMSwgMiwgMyk7IC8vIDIu
MjM2MDY3OTc3NDk5NzkKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sg
dG8gdG9wXSgjY29udGVudHMpCgojIyMgZWxvICFbYWR2YW5jZWRdKC9hZHZh
bmNlZC5zdmcpCgpDb21wdXRlcyB0aGUgbmV3IHJhdGluZ3MgYmV0d2VlbiB0
d28gb3IgbW9yZSBvcHBvbmVudHMgdXNpbmcgdGhlIFtFbG8gcmF0aW5nIHN5
c3RlbV0oaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvRWxvX3JhdGlu
Z19zeXN0ZW0pLiBJdCB0YWtlcyBhbiBhcnJheQpvZiBwcmUtcmF0aW5ncyBh
bmQgcmV0dXJucyBhbiBhcnJheSBjb250YWluaW5nIHBvc3QtcmF0aW5ncy4K
VGhlIGFycmF5IHNob3VsZCBiZSBvcmRlcmVkIGZyb20gYmVzdCBwZXJmb3Jt
ZXIgdG8gd29yc3QgcGVyZm9ybWVyICh3aW5uZXIgLT4gbG9zZXIpLgoKVXNl
IHRoZSBleHBvbmVudCBgKipgIG9wZXJhdG9yIGFuZCBtYXRoIG9wZXJhdG9y
cyB0byBjb21wdXRlIHRoZSBleHBlY3RlZCBzY29yZSAoY2hhbmNlIG9mIHdp
bm5pbmcpLgpvZiBlYWNoIG9wcG9uZW50IGFuZCBjb21wdXRlIHRoZSBuZXcg
cmF0aW5nIGZvciBlYWNoLgpMb29wIHRocm91Z2ggdGhlIHJhdGluZ3MsIHVz
aW5nIGVhY2ggcGVybXV0YXRpb24gdG8gY29tcHV0ZSB0aGUgcG9zdC1FbG8g
cmF0aW5nIGZvciBlYWNoIHBsYXllciBpbiBhIHBhaXJ3aXNlIGZhc2hpb24u
IApPbWl0IHRoZSBzZWNvbmQgYXJndW1lbnQgdG8gdXNlIHRoZSBkZWZhdWx0
IGBrRmFjdG9yYCBvZiAzMi4KCmBgYGpzCmNvbnN0IGVsbyA9IChbLi4ucmF0
aW5nc10sIGtGYWN0b3IgPSAzMiwgc2VsZlJhdGluZykgPT4gewogIGNvbnN0
IFthLCBiXSA9IHJhdGluZ3M7CiAgY29uc3QgZXhwZWN0ZWRTY29yZSA9IChz
ZWxmLCBvcHBvbmVudCkgPT4gMSAvICgxICsgMTAgKiogKChvcHBvbmVudCAt
IHNlbGYpIC8gNDAwKSk7CiAgY29uc3QgbmV3UmF0aW5nID0gKHJhdGluZywg
aSkgPT4KICAgIChzZWxmUmF0aW5nIHx8IHJhdGluZykgKyBrRmFjdG9yICog
KGkgLSBleHBlY3RlZFNjb3JlKGkgPyBhIDogYiwgaSA/IGIgOiBhKSk7CiAg
aWYgKHJhdGluZ3MubGVuZ3RoID09PSAyKSByZXR1cm4gW25ld1JhdGluZyhh
LCAxKSwgbmV3UmF0aW5nKGIsIDApXTsKCiAgZm9yIChsZXQgaSA9IDAsIGxl
biA9IHJhdGluZ3MubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHsKICAgIGxldCBq
ID0gaTsKICAgIHdoaWxlIChqIDwgbGVuIC0gMSkgewogICAgICBqKys7CiAg
ICAgIFtyYXRpbmdzW2ldLCByYXRpbmdzW2pdXSA9IGVsbyhbcmF0aW5nc1tp
XSwgcmF0aW5nc1tqXV0sIGtGYWN0b3IpOwogICAgfQogIH0KICByZXR1cm4g
cmF0aW5nczsKfTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8
L3N1bW1hcnk+CgpgYGBqcwovLyBTdGFuZGFyZCAxdjFzCmVsbyhbMTIwMCwg
MTIwMF0pOyAvLyBbMTIxNiwgMTE4NF0KZWxvKFsxMjAwLCAxMjAwXSwgNjQp
OyAvLyBbMTIzMiwgMTE2OF0KLy8gNCBwbGF5ZXIgRkZBLCBhbGwgc2FtZSBy
YW5rCmVsbyhbMTIwMCwgMTIwMCwgMTIwMCwgMTIwMF0pLm1hcChNYXRoLnJv
dW5kKTsgLy8gWzEyNDYsIDEyMTUsIDExODUsIDExNTRdCi8qCkZvciB0ZWFt
cywgZWFjaCByYXRpbmcgY2FuIGFkanVzdGVkIGJhc2VkIG9uIG93biB0ZWFt
J3MgYXZlcmFnZSByYXRpbmcgdnMuCmF2ZXJhZ2UgcmF0aW5nIG9mIG9wcG9z
aW5nIHRlYW0sIHdpdGggdGhlIHNjb3JlIGJlaW5nIGFkZGVkIHRvIHRoZWly
Cm93biBpbmRpdmlkdWFsIHJhdGluZyBieSBzdXBwbHlpbmcgaXQgYXMgdGhl
IHRoaXJkIGFyZ3VtZW50LgoqLwpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYg
QmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBmYWN0b3JpYWwKCkNhbGN1
bGF0ZXMgdGhlIGZhY3RvcmlhbCBvZiBhIG51bWJlci4KClVzZSByZWN1cnNp
b24uCklmIGBuYCBpcyBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gYDFgLCByZXR1
cm4gYDFgLgpPdGhlcndpc2UsIHJldHVybiB0aGUgcHJvZHVjdCBvZiBgbmAg
YW5kIHRoZSBmYWN0b3JpYWwgb2YgYG4gLSAxYC4KVGhyb3dzIGFuIGV4Y2Vw
dGlvbiBpZiBgbmAgaXMgYSBuZWdhdGl2ZSBudW1iZXIuCgpgYGBqcwpjb25z
dCBmYWN0b3JpYWwgPSBuID0+CiAgbiA8IDAKICAgID8gKCgpID0+IHsKICAg
ICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdOZWdhdGl2ZSBudW1iZXJzIGFy
ZSBub3QgYWxsb3dlZCEnKTsKICAgICAgfSkoKQogICAgOiBuIDw9IDEKICAg
ID8gMQogICAgOiBuICogZmFjdG9yaWFsKG4gLSAxKTsKYGBgCgo8ZGV0YWls
cz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpmYWN0b3Jp
YWwoNik7IC8vIDcyMApgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0
byB0b3BdKCNjb250ZW50cykKCiMjIyBmaWJvbmFjY2kKCkdlbmVyYXRlcyBh
biBhcnJheSwgY29udGFpbmluZyB0aGUgRmlib25hY2NpIHNlcXVlbmNlLCB1
cCB1bnRpbCB0aGUgbnRoIHRlcm0uCgpDcmVhdGUgYW4gZW1wdHkgYXJyYXkg
b2YgdGhlIHNwZWNpZmljIGxlbmd0aCwgaW5pdGlhbGl6aW5nIHRoZSBmaXJz
dCB0d28gdmFsdWVzIChgMGAgYW5kIGAxYCkuClVzZSBgQXJyYXkucHJvdG90
eXBlLnJlZHVjZSgpYCB0byBhZGQgdmFsdWVzIGludG8gdGhlIGFycmF5LCB1
c2luZyB0aGUgc3VtIG9mIHRoZSBsYXN0IHR3byB2YWx1ZXMsIGV4Y2VwdCBm
b3IgdGhlIGZpcnN0IHR3by4KCmBgYGpzCmNvbnN0IGZpYm9uYWNjaSA9IG4g
PT4KICBBcnJheS5mcm9tKHsgbGVuZ3RoOiBuIH0pLnJlZHVjZSgKICAgIChh
Y2MsIHZhbCwgaSkgPT4gYWNjLmNvbmNhdChpID4gMSA/IGFjY1tpIC0gMV0g
KyBhY2NbaSAtIDJdIDogaSksCiAgICBbXQogICk7CmBgYAoKPGRldGFpbHM+
CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKZmlib25hY2Np
KDYpOyAvLyBbMCwgMSwgMSwgMiwgMywgNV0KYGBgCjwvZGV0YWlscz4KCjxi
cj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgZ2NkCgpDYWxj
dWxhdGVzIHRoZSBncmVhdGVzdCBjb21tb24gZGl2aXNvciBiZXR3ZWVuIHR3
byBvciBtb3JlIG51bWJlcnMvYXJyYXlzLgoKVGhlIGlubmVyIGBfZ2NkYCBm
dW5jdGlvbiB1c2VzIHJlY3Vyc2lvbi4KQmFzZSBjYXNlIGlzIHdoZW4gYHlg
IGVxdWFscyBgMGAuIEluIHRoaXMgY2FzZSwgcmV0dXJuIGB4YC4KT3RoZXJ3
aXNlLCByZXR1cm4gdGhlIEdDRCBvZiBgeWAgYW5kIHRoZSByZW1haW5kZXIg
b2YgdGhlIGRpdmlzaW9uIGB4L3lgLgoKYGBganMKY29uc3QgZ2NkID0gKC4u
LmFycikgPT4gewogIGNvbnN0IF9nY2QgPSAoeCwgeSkgPT4gKCF5ID8geCA6
IGdjZCh5LCB4ICUgeSkpOwogIHJldHVybiBbLi4uYXJyXS5yZWR1Y2UoKGEs
IGIpID0+IF9nY2QoYSwgYikpOwp9OwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFy
eT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmdjZCg4LCAzNik7IC8vIDQK
Z2NkKC4uLlsxMiwgOCwgMzJdKTsgLy8gNApgYGAKPC9kZXRhaWxzPgoKPGJy
PlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBnZW9tZXRyaWNQ
cm9ncmVzc2lvbgoKSW5pdGlhbGl6ZXMgYW4gYXJyYXkgY29udGFpbmluZyB0
aGUgbnVtYmVycyBpbiB0aGUgc3BlY2lmaWVkIHJhbmdlIHdoZXJlIGBzdGFy
dGAgYW5kIGBlbmRgIGFyZSBpbmNsdXNpdmUgYW5kIHRoZSByYXRpbyBiZXR3
ZWVuIHR3byB0ZXJtcyBpcyBgc3RlcGAuClJldHVybnMgYW4gZXJyb3IgaWYg
YHN0ZXBgIGVxdWFscyBgMWAuCgpVc2UgYEFycmF5LmZyb20oKWAsIGBNYXRo
LmxvZygpYCBhbmQgYE1hdGguZmxvb3IoKWAgdG8gY3JlYXRlIGFuIGFycmF5
IG9mIHRoZSBkZXNpcmVkIGxlbmd0aCwgYEFycmF5LnByb3RvdHlwZS5tYXAo
KWAgdG8gZmlsbCB3aXRoIHRoZSBkZXNpcmVkIHZhbHVlcyBpbiBhIHJhbmdl
LgpPbWl0IHRoZSBzZWNvbmQgYXJndW1lbnQsIGBzdGFydGAsIHRvIHVzZSBh
IGRlZmF1bHQgdmFsdWUgb2YgYDFgLgpPbWl0IHRoZSB0aGlyZCBhcmd1bWVu
dCwgYHN0ZXBgLCB0byB1c2UgYSBkZWZhdWx0IHZhbHVlIG9mIGAyYC4KCmBg
YGpzCmNvbnN0IGdlb21ldHJpY1Byb2dyZXNzaW9uID0gKGVuZCwgc3RhcnQg
PSAxLCBzdGVwID0gMikgPT4KICBBcnJheS5mcm9tKHsgbGVuZ3RoOiBNYXRo
LmZsb29yKE1hdGgubG9nKGVuZCAvIHN0YXJ0KSAvIE1hdGgubG9nKHN0ZXAp
KSArIDEgfSkubWFwKAogICAgKHYsIGkpID0+IHN0YXJ0ICogc3RlcCAqKiBp
CiAgKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1h
cnk+CgpgYGBqcwpnZW9tZXRyaWNQcm9ncmVzc2lvbigyNTYpOyAvLyBbMSwg
MiwgNCwgOCwgMTYsIDMyLCA2NCwgMTI4LCAyNTZdCmdlb21ldHJpY1Byb2dy
ZXNzaW9uKDI1NiwgMyk7IC8vIFszLCA2LCAxMiwgMjQsIDQ4LCA5NiwgMTky
XQpnZW9tZXRyaWNQcm9ncmVzc2lvbigyNTYsIDEsIDQpOyAvLyBbMSwgNCwg
MTYsIDY0LCAyNTZdCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRv
IHRvcF0oI2NvbnRlbnRzKQoKIyMjIGhhbW1pbmdEaXN0YW5jZQoKQ2FsY3Vs
YXRlcyB0aGUgSGFtbWluZyBkaXN0YW5jZSBiZXR3ZWVuIHR3byB2YWx1ZXMu
CgpVc2UgWE9SIG9wZXJhdG9yIChgXmApIHRvIGZpbmQgdGhlIGJpdCBkaWZm
ZXJlbmNlIGJldHdlZW4gdGhlIHR3byBudW1iZXJzLCBjb252ZXJ0IHRvIGEg
YmluYXJ5IHN0cmluZyB1c2luZyBgdG9TdHJpbmcoMilgLgpDb3VudCBhbmQg
cmV0dXJuIHRoZSBudW1iZXIgb2YgYDFgcyBpbiB0aGUgc3RyaW5nLCB1c2lu
ZyBgbWF0Y2goLzEvZylgLgoKYGBganMKY29uc3QgaGFtbWluZ0Rpc3RhbmNl
ID0gKG51bTEsIG51bTIpID0+ICgobnVtMSBeIG51bTIpLnRvU3RyaW5nKDIp
Lm1hdGNoKC8xL2cpIHx8ICcnKS5sZW5ndGg7CmBgYAoKPGRldGFpbHM+Cjxz
dW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKaGFtbWluZ0Rpc3Rh
bmNlKDIsIDMpOyAvLyAxCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNr
IHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGluUmFuZ2UKCkNoZWNrcyBpZiB0
aGUgZ2l2ZW4gbnVtYmVyIGZhbGxzIHdpdGhpbiB0aGUgZ2l2ZW4gcmFuZ2Uu
CgpVc2UgYXJpdGhtZXRpYyBjb21wYXJpc29uIHRvIGNoZWNrIGlmIHRoZSBn
aXZlbiBudW1iZXIgaXMgaW4gdGhlIHNwZWNpZmllZCByYW5nZS4KSWYgdGhl
IHNlY29uZCBwYXJhbWV0ZXIsIGBlbmRgLCBpcyBub3Qgc3BlY2lmaWVkLCB0
aGUgcmFuZ2UgaXMgY29uc2lkZXJlZCB0byBiZSBmcm9tIGAwYCB0byBgc3Rh
cnRgLgoKYGBganMKY29uc3QgaW5SYW5nZSA9IChuLCBzdGFydCwgZW5kID0g
bnVsbCkgPT4gewogIGlmIChlbmQgJiYgc3RhcnQgPiBlbmQpIFtlbmQsIHN0
YXJ0XSA9IFtzdGFydCwgZW5kXTsKICByZXR1cm4gZW5kID09IG51bGwgPyBu
ID49IDAgJiYgbiA8IHN0YXJ0IDogbiA+PSBzdGFydCAmJiBuIDwgZW5kOwp9
OwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4K
CmBgYGpzCmluUmFuZ2UoMywgMiwgNSk7IC8vIHRydWUKaW5SYW5nZSgzLCA0
KTsgLy8gdHJ1ZQppblJhbmdlKDIsIDMsIDUpOyAvLyBmYWxzZQppblJhbmdl
KDMsIDIpOyAvLyBmYWxzZQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFj
ayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBpc0RpdmlzaWJsZQoKQ2hlY2tz
IGlmIHRoZSBmaXJzdCBudW1lcmljIGFyZ3VtZW50IGlzIGRpdmlzaWJsZSBi
eSB0aGUgc2Vjb25kIG9uZS4KClVzZSB0aGUgbW9kdWxvIG9wZXJhdG9yIChg
JWApIHRvIGNoZWNrIGlmIHRoZSByZW1haW5kZXIgaXMgZXF1YWwgdG8gYDBg
LgoKYGBganMKY29uc3QgaXNEaXZpc2libGUgPSAoZGl2aWRlbmQsIGRpdmlz
b3IpID0+IGRpdmlkZW5kICUgZGl2aXNvciA9PT0gMDsKYGBgCgo8ZGV0YWls
cz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwppc0Rpdmlz
aWJsZSg2LCAzKTsgLy8gdHJ1ZQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYg
QmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBpc0V2ZW4KClJldHVybnMg
YHRydWVgIGlmIHRoZSBnaXZlbiBudW1iZXIgaXMgZXZlbiwgYGZhbHNlYCBv
dGhlcndpc2UuCgpDaGVja3Mgd2hldGhlciBhIG51bWJlciBpcyBvZGQgb3Ig
ZXZlbiB1c2luZyB0aGUgbW9kdWxvIChgJWApIG9wZXJhdG9yLgpSZXR1cm5z
IGB0cnVlYCBpZiB0aGUgbnVtYmVyIGlzIGV2ZW4sIGBmYWxzZWAgaWYgdGhl
IG51bWJlciBpcyBvZGQuCgpgYGBqcwpjb25zdCBpc0V2ZW4gPSBudW0gPT4g
bnVtICUgMiA9PT0gMDsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBs
ZXM8L3N1bW1hcnk+CgpgYGBqcwppc0V2ZW4oMyk7IC8vIGZhbHNlCmBgYAo8
L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoK
IyMjIGlzTmVnYXRpdmVaZXJvCgpDaGVja3MgaWYgdGhlIGdpdmVuIHZhbHVl
IGlzIGVxdWFsIHRvIG5lZ2F0aXZlIHplcm8gKGAtMGApLgoKQ2hlY2tzIHdo
ZXRoZXIgYSBwYXNzZWQgdmFsdWUgaXMgZXF1YWwgdG8gYDBgIGFuZCBpZiBg
MWAgZGl2aWRlZCBieSB0aGUgdmFsdWUgZXF1YWxzIGAtSW5maW5pdHlgLgoK
YGBganMKY29uc3QgaXNOZWdhdGl2ZVplcm8gPSB2YWwgPT4gdmFsID09PSAw
ICYmIDEgLyB2YWwgPT09IC1JbmZpbml0eTsKYGBgCgo8ZGV0YWlscz4KPHN1
bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwppc05lZ2F0aXZlWmVy
bygtMCk7IC8vIHRydWUKaXNOZWdhdGl2ZVplcm8oMCk7IC8vIGZhbHNlCmBg
YAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRz
KQoKIyMjIGlzT2RkCgpSZXR1cm5zIGB0cnVlYCBpZiB0aGUgZ2l2ZW4gbnVt
YmVyIGlzIG9kZCwgYGZhbHNlYCBvdGhlcndpc2UuCgpDaGVja3Mgd2hldGhl
ciBhIG51bWJlciBpcyBvZGQgb3IgZXZlbiB1c2luZyB0aGUgbW9kdWxvIChg
JWApIG9wZXJhdG9yLgpSZXR1cm5zIGB0cnVlYCBpZiB0aGUgbnVtYmVyIGlz
IG9kZCwgYGZhbHNlYCBpZiB0aGUgbnVtYmVyIGlzIGV2ZW4uCgpgYGBqcwpj
b25zdCBpc09kZCA9IG51bSA9PiBudW0gJSAyID09PSAxOwpgYGAKCjxkZXRh
aWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmlzT2Rk
KDMpOyAvLyB0cnVlCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRv
IHRvcF0oI2NvbnRlbnRzKQoKIyMjIGlzUHJpbWUKCkNoZWNrcyBpZiB0aGUg
cHJvdmlkZWQgaW50ZWdlciBpcyBhIHByaW1lIG51bWJlci4KCkNoZWNrIG51
bWJlcnMgZnJvbSBgMmAgdG8gdGhlIHNxdWFyZSByb290IG9mIHRoZSBnaXZl
biBudW1iZXIuClJldHVybiBgZmFsc2VgIGlmIGFueSBvZiB0aGVtIGRpdmlk
ZXMgdGhlIGdpdmVuIG51bWJlciwgZWxzZSByZXR1cm4gYHRydWVgLCB1bmxl
c3MgdGhlIG51bWJlciBpcyBsZXNzIHRoYW4gYDJgLgoKYGBganMKY29uc3Qg
aXNQcmltZSA9IG51bSA9PiB7CiAgY29uc3QgYm91bmRhcnkgPSBNYXRoLmZs
b29yKE1hdGguc3FydChudW0pKTsKICBmb3IgKHZhciBpID0gMjsgaSA8PSBi
b3VuZGFyeTsgaSsrKSBpZiAobnVtICUgaSA9PT0gMCkgcmV0dXJuIGZhbHNl
OwogIHJldHVybiBudW0gPj0gMjsKfTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1h
cnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwppc1ByaW1lKDExKTsgLy8g
dHJ1ZQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNj
b250ZW50cykKCiMjIyBsY20KClJldHVybnMgdGhlIGxlYXN0IGNvbW1vbiBt
dWx0aXBsZSBvZiB0d28gb3IgbW9yZSBudW1iZXJzLgoKVXNlIHRoZSBncmVh
dGVzdCBjb21tb24gZGl2aXNvciAoR0NEKSBmb3JtdWxhIGFuZCB0aGUgZmFj
dCB0aGF0IGBsY20oeCx5KSA9IHggKiB5IC8gZ2NkKHgseSlgIHRvIGRldGVy
bWluZSB0aGUgbGVhc3QgY29tbW9uIG11bHRpcGxlLgpUaGUgR0NEIGZvcm11
bGEgdXNlcyByZWN1cnNpb24uCgpgYGBqcwpjb25zdCBsY20gPSAoLi4uYXJy
KSA9PiB7CiAgY29uc3QgZ2NkID0gKHgsIHkpID0+ICgheSA/IHggOiBnY2Qo
eSwgeCAlIHkpKTsKICBjb25zdCBfbGNtID0gKHgsIHkpID0+ICh4ICogeSkg
LyBnY2QoeCwgeSk7CiAgcmV0dXJuIFsuLi5hcnJdLnJlZHVjZSgoYSwgYikg
PT4gX2xjbShhLCBiKSk7Cn07CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4
YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKbGNtKDEyLCA3KTsgLy8gODQKbGNt
KC4uLlsxLCAzLCA0LCA1XSk7IC8vIDYwCmBgYAo8L2RldGFpbHM+Cgo8YnI+
W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGx1aG5DaGVjayAh
W2FkdmFuY2VkXSgvYWR2YW5jZWQuc3ZnKQoKSW1wbGVtZW50YXRpb24gb2Yg
dGhlIFtMdWhuIEFsZ29yaXRobV0oaHR0cHM6Ly9lbi53aWtpcGVkaWEub3Jn
L3dpa2kvTHVobl9hbGdvcml0aG0pIHVzZWQgdG8gdmFsaWRhdGUgYSB2YXJp
ZXR5IG9mIGlkZW50aWZpY2F0aW9uIG51bWJlcnMsIHN1Y2ggYXMgY3JlZGl0
IGNhcmQgbnVtYmVycywgSU1FSSBudW1iZXJzLCBOYXRpb25hbCBQcm92aWRl
ciBJZGVudGlmaWVyIG51bWJlcnMgZXRjLgoKVXNlIGBTdHJpbmcucHJvdG90
eXBlLnNwbGl0KCcnKWAsIGBBcnJheS5wcm90b3R5cGUucmV2ZXJzZSgpYCBh
bmQgYEFycmF5LnByb3RvdHlwZS5tYXAoKWAgaW4gY29tYmluYXRpb24gd2l0
aCBgcGFyc2VJbnQoKWAgdG8gb2J0YWluIGFuIGFycmF5IG9mIGRpZ2l0cy4K
VXNlIGBBcnJheS5wcm90b3R5cGUuc3BsaWNlKDAsMSlgIHRvIG9idGFpbiB0
aGUgbGFzdCBkaWdpdC4KVXNlIGBBcnJheS5wcm90b3R5cGUucmVkdWNlKClg
IHRvIGltcGxlbWVudCB0aGUgTHVobiBBbGdvcml0aG0uClJldHVybiBgdHJ1
ZWAgaWYgYHN1bWAgaXMgZGl2aXNpYmxlIGJ5IGAxMGAsIGBmYWxzZWAgb3Ro
ZXJ3aXNlLgoKYGBganMKY29uc3QgbHVobkNoZWNrID0gbnVtID0+IHsKICBs
ZXQgYXJyID0gKG51bSArICcnKQogICAgLnNwbGl0KCcnKQogICAgLnJldmVy
c2UoKQogICAgLm1hcCh4ID0+IHBhcnNlSW50KHgpKTsKICBsZXQgbGFzdERp
Z2l0ID0gYXJyLnNwbGljZSgwLCAxKVswXTsKICBsZXQgc3VtID0gYXJyLnJl
ZHVjZSgoYWNjLCB2YWwsIGkpID0+IChpICUgMiAhPT0gMCA/IGFjYyArIHZh
bCA6IGFjYyArICgodmFsICogMikgJSA5KSB8fCA5KSwgMCk7CiAgc3VtICs9
IGxhc3REaWdpdDsKICByZXR1cm4gc3VtICUgMTAgPT09IDA7Cn07CmBgYAoK
PGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMK
bHVobkNoZWNrKCc0NDg1Mjc1NzQyMzA4MzI3Jyk7IC8vIHRydWUKbHVobkNo
ZWNrKDYwMTEzMjk5MzM2NTUyOTkpOyAvLyAgZmFsc2UKbHVobkNoZWNrKDEy
MzQ1Njc4OSk7IC8vIGZhbHNlCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBC
YWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIG1hcE51bVJhbmdlCgpNYXBz
IGEgbnVtYmVyIGZyb20gb25lIHJhbmdlIHRvIGFub3RoZXIgcmFuZ2UuCgpS
ZXR1cm5zIGBudW1gIG1hcHBlZCBiZXR3ZWVuIGBvdXRNaW5gLWBvdXRNYXhg
IGZyb20gYGluTWluYC1gaW5NYXhgLgoKYGBganMKY29uc3QgbWFwTnVtUmFu
Z2UgPSAobnVtLCBpbk1pbiwgaW5NYXgsIG91dE1pbiwgb3V0TWF4KSA9Pgog
ICgobnVtIC0gaW5NaW4pICogKG91dE1heCAtIG91dE1pbikpIC8gKGluTWF4
IC0gaW5NaW4pICsgb3V0TWluOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5F
eGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCm1hcE51bVJhbmdlKDUsIDAsIDEw
LCAwLCAxMDApOyAvLyA1MApgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFj
ayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBtYXhCeQoKUmV0dXJucyB0aGUg
bWF4aW11bSB2YWx1ZSBvZiBhbiBhcnJheSwgYWZ0ZXIgbWFwcGluZyBlYWNo
IGVsZW1lbnQgdG8gYSB2YWx1ZSB1c2luZyB0aGUgcHJvdmlkZWQgZnVuY3Rp
b24uCgpVc2UgYEFycmF5LnByb3RvdHlwZS5tYXAoKWAgdG8gbWFwIGVhY2gg
ZWxlbWVudCB0byB0aGUgdmFsdWUgcmV0dXJuZWQgYnkgYGZuYCwgYE1hdGgu
bWF4KClgIHRvIGdldCB0aGUgbWF4aW11bSB2YWx1ZS4KCmBgYGpzCmNvbnN0
IG1heEJ5ID0gKGFyciwgZm4pID0+IE1hdGgubWF4KC4uLmFyci5tYXAodHlw
ZW9mIGZuID09PSAnZnVuY3Rpb24nID8gZm4gOiB2YWwgPT4gdmFsW2ZuXSkp
OwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4K
CmBgYGpzCm1heEJ5KFt7IG46IDQgfSwgeyBuOiAyIH0sIHsgbjogOCB9LCB7
IG46IDYgfV0sIG8gPT4gby5uKTsgLy8gOAptYXhCeShbeyBuOiA0IH0sIHsg
bjogMiB9LCB7IG46IDggfSwgeyBuOiA2IH1dLCAnbicpOyAvLyA4CmBgYAo8
L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoK
IyMjIG1lZGlhbgoKUmV0dXJucyB0aGUgbWVkaWFuIG9mIGFuIGFycmF5IG9m
IG51bWJlcnMuCgpGaW5kIHRoZSBtaWRkbGUgb2YgdGhlIGFycmF5LCB1c2Ug
YEFycmF5LnByb3RvdHlwZS5zb3J0KClgIHRvIHNvcnQgdGhlIHZhbHVlcy4K
UmV0dXJuIHRoZSBudW1iZXIgYXQgdGhlIG1pZHBvaW50IGlmIGBsZW5ndGhg
IGlzIG9kZCwgb3RoZXJ3aXNlIHRoZSBhdmVyYWdlIG9mIHRoZSB0d28gbWlk
ZGxlIG51bWJlcnMuCgpgYGBqcwpjb25zdCBtZWRpYW4gPSBhcnIgPT4gewog
IGNvbnN0IG1pZCA9IE1hdGguZmxvb3IoYXJyLmxlbmd0aCAvIDIpLAogICAg
bnVtcyA9IFsuLi5hcnJdLnNvcnQoKGEsIGIpID0+IGEgLSBiKTsKICByZXR1
cm4gYXJyLmxlbmd0aCAlIDIgIT09IDAgPyBudW1zW21pZF0gOiAobnVtc1tt
aWQgLSAxXSArIG51bXNbbWlkXSkgLyAyOwp9OwpgYGAKCjxkZXRhaWxzPgo8
c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCm1lZGlhbihbNSwg
NiwgNTAsIDEsIC01XSk7IC8vIDUKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyG
IEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgbWlkcG9pbnQKCkNhbGN1
bGF0ZXMgdGhlIG1pZHBvaW50IGJldHdlZW4gdHdvIHBhaXJzIG9mICh4LHkp
IHBvaW50cy4KCkRlc3RydWN0dXJlIHRoZSBhcnJheSB0byBnZXQgYHgxYCwg
YHkxYCwgYHgyYCBhbmQgYHkyYCwgY2FsY3VsYXRlIHRoZSBtaWRwb2ludCBm
b3IgZWFjaCBkaW1lbnNpb24gYnkgZGl2aWRpbmcgdGhlIHN1bSBvZiB0aGUg
dHdvIGVuZHBvaW50cyBieSBgMmAuCgpgYGBqcwpjb25zdCBtaWRwb2ludCA9
IChbeDEsIHkxXSwgW3gyLCB5Ml0pID0+IFsoeDEgKyB4MikgLyAyLCAoeTEg
KyB5MikgLyAyXTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8
L3N1bW1hcnk+CgpgYGBqcwptaWRwb2ludChbMiwgMl0sIFs0LCA0XSk7IC8v
IFszLCAzXQptaWRwb2ludChbNCwgNF0sIFs2LCA2XSk7IC8vIFs1LCA1XQpt
aWRwb2ludChbMSwgM10sIFsyLCA0XSk7IC8vIFsxLjUsIDMuNV0KYGBgCjwv
ZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgoj
IyMgbWluQnkKClJldHVybnMgdGhlIG1pbmltdW0gdmFsdWUgb2YgYW4gYXJy
YXksIGFmdGVyIG1hcHBpbmcgZWFjaCBlbGVtZW50IHRvIGEgdmFsdWUgdXNp
bmcgdGhlIHByb3ZpZGVkIGZ1bmN0aW9uLgoKVXNlIGBBcnJheS5wcm90b3R5
cGUubWFwKClgIHRvIG1hcCBlYWNoIGVsZW1lbnQgdG8gdGhlIHZhbHVlIHJl
dHVybmVkIGJ5IGBmbmAsIGBNYXRoLm1pbigpYCB0byBnZXQgdGhlIG1pbmlt
dW0gdmFsdWUuCgpgYGBqcwpjb25zdCBtaW5CeSA9IChhcnIsIGZuKSA9PiBN
YXRoLm1pbiguLi5hcnIubWFwKHR5cGVvZiBmbiA9PT0gJ2Z1bmN0aW9uJyA/
IGZuIDogdmFsID0+IHZhbFtmbl0pKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1h
cnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwptaW5CeShbeyBuOiA0IH0s
IHsgbjogMiB9LCB7IG46IDggfSwgeyBuOiA2IH1dLCBvID0+IG8ubik7IC8v
IDIKbWluQnkoW3sgbjogNCB9LCB7IG46IDIgfSwgeyBuOiA4IH0sIHsgbjog
NiB9XSwgJ24nKTsgLy8gMgpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFj
ayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBwZXJjZW50aWxlCgpVc2VzIHRo
ZSBwZXJjZW50aWxlIGZvcm11bGEgdG8gY2FsY3VsYXRlIGhvdyBtYW55IG51
bWJlcnMgaW4gdGhlIGdpdmVuIGFycmF5IGFyZSBsZXNzIG9yIGVxdWFsIHRv
IHRoZSBnaXZlbiB2YWx1ZS4KClVzZSBgQXJyYXkucHJvdG90eXBlLnJlZHVj
ZSgpYCB0byBjYWxjdWxhdGUgaG93IG1hbnkgbnVtYmVycyBhcmUgYmVsb3cg
dGhlIHZhbHVlIGFuZCBob3cgbWFueSBhcmUgdGhlIHNhbWUgdmFsdWUgYW5k
IGFwcGx5IHRoZSBwZXJjZW50aWxlIGZvcm11bGEuCgpgYGBqcwpjb25zdCBw
ZXJjZW50aWxlID0gKGFyciwgdmFsKSA9PgogICgxMDAgKiBhcnIucmVkdWNl
KChhY2MsIHYpID0+IGFjYyArICh2IDwgdmFsID8gMSA6IDApICsgKHYgPT09
IHZhbCA/IDAuNSA6IDApLCAwKSkgLyBhcnIubGVuZ3RoOwpgYGAKCjxkZXRh
aWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCnBlcmNl
bnRpbGUoWzEsIDIsIDMsIDQsIDUsIDYsIDcsIDgsIDksIDEwXSwgNik7IC8v
IDU1CmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2Nv
bnRlbnRzKQoKIyMjIHBvd2Vyc2V0CgpSZXR1cm5zIHRoZSBwb3dlcnNldCBv
ZiBhIGdpdmVuIGFycmF5IG9mIG51bWJlcnMuCgpVc2UgYEFycmF5LnByb3Rv
dHlwZS5yZWR1Y2UoKWAgY29tYmluZWQgd2l0aCBgQXJyYXkucHJvdG90eXBl
Lm1hcCgpYCB0byBpdGVyYXRlIG92ZXIgZWxlbWVudHMgYW5kIGNvbWJpbmUg
aW50byBhbiBhcnJheSBjb250YWluaW5nIGFsbCBjb21iaW5hdGlvbnMuCgpg
YGBqcwpjb25zdCBwb3dlcnNldCA9IGFyciA9PiBhcnIucmVkdWNlKChhLCB2
KSA9PiBhLmNvbmNhdChhLm1hcChyID0+IFt2XS5jb25jYXQocikpKSwgW1td
XSk7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5
PgoKYGBganMKcG93ZXJzZXQoWzEsIDJdKTsgLy8gW1tdLCBbMV0sIFsyXSwg
WzIsIDFdXQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3Bd
KCNjb250ZW50cykKCiMjIyBwcmltZXMKCkdlbmVyYXRlcyBwcmltZXMgdXAg
dG8gYSBnaXZlbiBudW1iZXIsIHVzaW5nIHRoZSBTaWV2ZSBvZiBFcmF0b3N0
aGVuZXMuCgpHZW5lcmF0ZSBhbiBhcnJheSBmcm9tIGAyYCB0byB0aGUgZ2l2
ZW4gbnVtYmVyLiBVc2UgYEFycmF5LnByb3RvdHlwZS5maWx0ZXIoKWAgdG8g
ZmlsdGVyIG91dCB0aGUgdmFsdWVzIGRpdmlzaWJsZSBieSBhbnkgbnVtYmVy
IGZyb20gYDJgIHRvIHRoZSBzcXVhcmUgcm9vdCBvZiB0aGUgcHJvdmlkZWQg
bnVtYmVyLgoKYGBganMKY29uc3QgcHJpbWVzID0gbnVtID0+IHsKICBsZXQg
YXJyID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogbnVtIC0gMSB9KS5tYXAoKHgs
IGkpID0+IGkgKyAyKSwKICAgIHNxcm9vdCA9IE1hdGguZmxvb3IoTWF0aC5z
cXJ0KG51bSkpLAogICAgbnVtc1RpbGxTcXJvb3QgPSBBcnJheS5mcm9tKHsg
bGVuZ3RoOiBzcXJvb3QgLSAxIH0pLm1hcCgoeCwgaSkgPT4gaSArIDIpOwog
IG51bXNUaWxsU3Fyb290LmZvckVhY2goeCA9PiAoYXJyID0gYXJyLmZpbHRl
cih5ID0+IHkgJSB4ICE9PSAwIHx8IHkgPT09IHgpKSk7CiAgcmV0dXJuIGFy
cjsKfTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1h
cnk+CgpgYGBqcwpwcmltZXMoMTApOyAvLyBbMiwzLDUsN10KYGBgCjwvZGV0
YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMg
cmFkc1RvRGVncmVlcwoKQ29udmVydHMgYW4gYW5nbGUgZnJvbSByYWRpYW5z
IHRvIGRlZ3JlZXMuCgpVc2UgYE1hdGguUElgIGFuZCB0aGUgcmFkaWFuIHRv
IGRlZ3JlZSBmb3JtdWxhIHRvIGNvbnZlcnQgdGhlIGFuZ2xlIGZyb20gcmFk
aWFucyB0byBkZWdyZWVzLgoKYGBganMKY29uc3QgcmFkc1RvRGVncmVlcyA9
IHJhZCA9PiAocmFkICogMTgwLjApIC8gTWF0aC5QSTsKYGBgCgo8ZGV0YWls
cz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpyYWRzVG9E
ZWdyZWVzKE1hdGguUEkgLyAyKTsgLy8gOTAKYGBgCjwvZGV0YWlscz4KCjxi
cj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgcmFuZG9tSW50
QXJyYXlJblJhbmdlCgpSZXR1cm5zIGFuIGFycmF5IG9mIG4gcmFuZG9tIGlu
dGVnZXJzIGluIHRoZSBzcGVjaWZpZWQgcmFuZ2UuCgpVc2UgYEFycmF5LmZy
b20oKWAgdG8gY3JlYXRlIGFuIGVtcHR5IGFycmF5IG9mIHRoZSBzcGVjaWZp
YyBsZW5ndGgsIGBNYXRoLnJhbmRvbSgpYCB0byBnZW5lcmF0ZSBhIHJhbmRv
bSBudW1iZXIgYW5kIG1hcCBpdCB0byB0aGUgZGVzaXJlZCByYW5nZSwgdXNp
bmcgYE1hdGguZmxvb3IoKWAgdG8gbWFrZSBpdCBhbiBpbnRlZ2VyLgoKYGBg
anMKY29uc3QgcmFuZG9tSW50QXJyYXlJblJhbmdlID0gKG1pbiwgbWF4LCBu
ID0gMSkgPT4KICBBcnJheS5mcm9tKHsgbGVuZ3RoOiBuIH0sICgpID0+IE1h
dGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4gKyAxKSkgKyBt
aW4pOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFy
eT4KCmBgYGpzCnJhbmRvbUludEFycmF5SW5SYW5nZSgxMiwgMzUsIDEwKTsg
Ly8gWyAzNCwgMTQsIDI3LCAxNywgMzAsIDI3LCAyMCwgMjYsIDIxLCAxNCBd
CmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRl
bnRzKQoKIyMjIHJhbmRvbUludGVnZXJJblJhbmdlCgpSZXR1cm5zIGEgcmFu
ZG9tIGludGVnZXIgaW4gdGhlIHNwZWNpZmllZCByYW5nZS4KClVzZSBgTWF0
aC5yYW5kb20oKWAgdG8gZ2VuZXJhdGUgYSByYW5kb20gbnVtYmVyIGFuZCBt
YXAgaXQgdG8gdGhlIGRlc2lyZWQgcmFuZ2UsIHVzaW5nIGBNYXRoLmZsb29y
KClgIHRvIG1ha2UgaXQgYW4gaW50ZWdlci4KCmBgYGpzCmNvbnN0IHJhbmRv
bUludGVnZXJJblJhbmdlID0gKG1pbiwgbWF4KSA9PiBNYXRoLmZsb29yKE1h
dGgucmFuZG9tKCkgKiAobWF4IC0gbWluICsgMSkpICsgbWluOwpgYGAKCjxk
ZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCnJh
bmRvbUludGVnZXJJblJhbmdlKDAsIDUpOyAvLyAyCmBgYAo8L2RldGFpbHM+
Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHJhbmRv
bU51bWJlckluUmFuZ2UKClJldHVybnMgYSByYW5kb20gbnVtYmVyIGluIHRo
ZSBzcGVjaWZpZWQgcmFuZ2UuCgpVc2UgYE1hdGgucmFuZG9tKClgIHRvIGdl
bmVyYXRlIGEgcmFuZG9tIHZhbHVlLCBtYXAgaXQgdG8gdGhlIGRlc2lyZWQg
cmFuZ2UgdXNpbmcgbXVsdGlwbGljYXRpb24uCgpgYGBqcwpjb25zdCByYW5k
b21OdW1iZXJJblJhbmdlID0gKG1pbiwgbWF4KSA9PiBNYXRoLnJhbmRvbSgp
ICogKG1heCAtIG1pbikgKyBtaW47CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5
PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKcmFuZG9tTnVtYmVySW5SYW5n
ZSgyLCAxMCk7IC8vIDYuMDIxMTM2MzI4NTA4NzAwNQpgYGAKPC9kZXRhaWxz
PgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyByb3Vu
ZAoKUm91bmRzIGEgbnVtYmVyIHRvIGEgc3BlY2lmaWVkIGFtb3VudCBvZiBk
aWdpdHMuCgpVc2UgYE1hdGgucm91bmQoKWAgYW5kIHRlbXBsYXRlIGxpdGVy
YWxzIHRvIHJvdW5kIHRoZSBudW1iZXIgdG8gdGhlIHNwZWNpZmllZCBudW1i
ZXIgb2YgZGlnaXRzLgpPbWl0IHRoZSBzZWNvbmQgYXJndW1lbnQsIGBkZWNp
bWFsc2AgdG8gcm91bmQgdG8gYW4gaW50ZWdlci4KCmBgYGpzCmNvbnN0IHJv
dW5kID0gKG4sIGRlY2ltYWxzID0gMCkgPT4gTnVtYmVyKGAke01hdGgucm91
bmQoYCR7bn1lJHtkZWNpbWFsc31gKX1lLSR7ZGVjaW1hbHN9YCk7CmBgYAoK
PGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMK
cm91bmQoMS4wMDUsIDIpOyAvLyAxLjAxCmBgYAo8L2RldGFpbHM+Cgo8YnI+
W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHNkYm0KCkhhc2hl
cyB0aGUgaW5wdXQgc3RyaW5nIGludG8gYSB3aG9sZSBudW1iZXIuCgpVc2Ug
YFN0cmluZy5wcm90b3R5cGUuc3BsaXQoJycpYCBhbmQgYEFycmF5LnByb3Rv
dHlwZS5yZWR1Y2UoKWAgdG8gY3JlYXRlIGEgaGFzaCBvZiB0aGUgaW5wdXQg
c3RyaW5nLCB1dGlsaXppbmcgYml0IHNoaWZ0aW5nLgoKYGBganMKY29uc3Qg
c2RibSA9IHN0ciA9PiB7CiAgbGV0IGFyciA9IHN0ci5zcGxpdCgnJyk7CiAg
cmV0dXJuIGFyci5yZWR1Y2UoCiAgICAoaGFzaENvZGUsIGN1cnJlbnRWYWwp
ID0+CiAgICAgIChoYXNoQ29kZSA9IGN1cnJlbnRWYWwuY2hhckNvZGVBdCgw
KSArIChoYXNoQ29kZSA8PCA2KSArIChoYXNoQ29kZSA8PCAxNikgLSBoYXNo
Q29kZSksCiAgICAwCiAgKTsKfTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+
RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpzZGJtKCduYW1lJyk7IC8vIC0z
NTIxMjA0OTQ5CmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRv
cF0oI2NvbnRlbnRzKQoKIyMjIHN0YW5kYXJkRGV2aWF0aW9uCgpSZXR1cm5z
IHRoZSBzdGFuZGFyZCBkZXZpYXRpb24gb2YgYW4gYXJyYXkgb2YgbnVtYmVy
cy4KClVzZSBgQXJyYXkucHJvdG90eXBlLnJlZHVjZSgpYCB0byBjYWxjdWxh
dGUgdGhlIG1lYW4sIHZhcmlhbmNlIGFuZCB0aGUgc3VtIG9mIHRoZSB2YXJp
YW5jZSBvZiB0aGUgdmFsdWVzLCB0aGUgdmFyaWFuY2Ugb2YgdGhlIHZhbHVl
cywgdGhlbgpkZXRlcm1pbmUgdGhlIHN0YW5kYXJkIGRldmlhdGlvbi4KWW91
IGNhbiBvbWl0IHRoZSBzZWNvbmQgYXJndW1lbnQgdG8gZ2V0IHRoZSBzYW1w
bGUgc3RhbmRhcmQgZGV2aWF0aW9uIG9yIHNldCBpdCB0byBgdHJ1ZWAgdG8g
Z2V0IHRoZSBwb3B1bGF0aW9uIHN0YW5kYXJkIGRldmlhdGlvbi4KCmBgYGpz
CmNvbnN0IHN0YW5kYXJkRGV2aWF0aW9uID0gKGFyciwgdXNlUG9wdWxhdGlv
biA9IGZhbHNlKSA9PiB7CiAgY29uc3QgbWVhbiA9IGFyci5yZWR1Y2UoKGFj
YywgdmFsKSA9PiBhY2MgKyB2YWwsIDApIC8gYXJyLmxlbmd0aDsKICByZXR1
cm4gTWF0aC5zcXJ0KAogICAgYXJyLnJlZHVjZSgoYWNjLCB2YWwpID0+IGFj
Yy5jb25jYXQoKHZhbCAtIG1lYW4pICoqIDIpLCBbXSkucmVkdWNlKChhY2Ms
IHZhbCkgPT4gYWNjICsgdmFsLCAwKSAvCiAgICAgIChhcnIubGVuZ3RoIC0g
KHVzZVBvcHVsYXRpb24gPyAwIDogMSkpCiAgKTsKfTsKYGBgCgo8ZGV0YWls
cz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpzdGFuZGFy
ZERldmlhdGlvbihbMTAsIDIsIDM4LCAyMywgMzgsIDIzLCAyMV0pOyAvLyAx
My4yODQ0MzQxNDIxMTQ5OTEgKHNhbXBsZSkKc3RhbmRhcmREZXZpYXRpb24o
WzEwLCAyLCAzOCwgMjMsIDM4LCAyMywgMjFdLCB0cnVlKTsgLy8gMTIuMjk4
OTk2MTQyODc0NzkgKHBvcHVsYXRpb24pCmBgYAo8L2RldGFpbHM+Cgo8YnI+
W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHN1bQoKUmV0dXJu
cyB0aGUgc3VtIG9mIHR3byBvciBtb3JlIG51bWJlcnMvYXJyYXlzLgoKVXNl
IGBBcnJheS5wcm90b3R5cGUucmVkdWNlKClgIHRvIGFkZCBlYWNoIHZhbHVl
IHRvIGFuIGFjY3VtdWxhdG9yLCBpbml0aWFsaXplZCB3aXRoIGEgdmFsdWUg
b2YgYDBgLgoKYGBganMKY29uc3Qgc3VtID0gKC4uLmFycikgPT4gWy4uLmFy
cl0ucmVkdWNlKChhY2MsIHZhbCkgPT4gYWNjICsgdmFsLCAwKTsKYGBgCgo8
ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpz
dW0oMSwgMiwgMywgNCk7IC8vIDEwCnN1bSguLi5bMSwgMiwgMywgNF0pOyAv
LyAxMApgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNj
b250ZW50cykKCiMjIyBzdW1CeQoKUmV0dXJucyB0aGUgc3VtIG9mIGFuIGFy
cmF5LCBhZnRlciBtYXBwaW5nIGVhY2ggZWxlbWVudCB0byBhIHZhbHVlIHVz
aW5nIHRoZSBwcm92aWRlZCBmdW5jdGlvbi4KClVzZSBgQXJyYXkucHJvdG90
eXBlLm1hcCgpYCB0byBtYXAgZWFjaCBlbGVtZW50IHRvIHRoZSB2YWx1ZSBy
ZXR1cm5lZCBieSBgZm5gLCBgQXJyYXkucHJvdG90eXBlLnJlZHVjZSgpYCB0
byBhZGQgZWFjaCB2YWx1ZSB0byBhbiBhY2N1bXVsYXRvciwgaW5pdGlhbGl6
ZWQgd2l0aCBhIHZhbHVlIG9mIGAwYC4KCmBgYGpzCmNvbnN0IHN1bUJ5ID0g
KGFyciwgZm4pID0+CiAgYXJyLm1hcCh0eXBlb2YgZm4gPT09ICdmdW5jdGlv
bicgPyBmbiA6IHZhbCA9PiB2YWxbZm5dKS5yZWR1Y2UoKGFjYywgdmFsKSA9
PiBhY2MgKyB2YWwsIDApOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFt
cGxlczwvc3VtbWFyeT4KCmBgYGpzCnN1bUJ5KFt7IG46IDQgfSwgeyBuOiAy
IH0sIHsgbjogOCB9LCB7IG46IDYgfV0sIG8gPT4gby5uKTsgLy8gMjAKc3Vt
QnkoW3sgbjogNCB9LCB7IG46IDIgfSwgeyBuOiA4IH0sIHsgbjogNiB9XSwg
J24nKTsgLy8gMjAKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8g
dG9wXSgjY29udGVudHMpCgojIyMgc3VtUG93ZXIKClJldHVybnMgdGhlIHN1
bSBvZiB0aGUgcG93ZXJzIG9mIGFsbCB0aGUgbnVtYmVycyBmcm9tIGBzdGFy
dGAgdG8gYGVuZGAgKGJvdGggaW5jbHVzaXZlKS4KClVzZSBgQXJyYXkucHJv
dG90eXBlLmZpbGwoKWAgdG8gY3JlYXRlIGFuIGFycmF5IG9mIGFsbCB0aGUg
bnVtYmVycyBpbiB0aGUgdGFyZ2V0IHJhbmdlLCBgQXJyYXkucHJvdG90eXBl
Lm1hcCgpYCBhbmQgdGhlIGV4cG9uZW50IG9wZXJhdG9yIChgKipgKSB0byBy
YWlzZSB0aGVtIHRvIGBwb3dlcmAgYW5kIGBBcnJheS5wcm90b3R5cGUucmVk
dWNlKClgIHRvIGFkZCB0aGVtIHRvZ2V0aGVyLgpPbWl0IHRoZSBzZWNvbmQg
YXJndW1lbnQsIGBwb3dlcmAsIHRvIHVzZSBhIGRlZmF1bHQgcG93ZXIgb2Yg
YDJgLgpPbWl0IHRoZSB0aGlyZCBhcmd1bWVudCwgYHN0YXJ0YCwgdG8gdXNl
IGEgZGVmYXVsdCBzdGFydGluZyB2YWx1ZSBvZiBgMWAuCgpgYGBqcwpjb25z
dCBzdW1Qb3dlciA9IChlbmQsIHBvd2VyID0gMiwgc3RhcnQgPSAxKSA9Pgog
IEFycmF5KGVuZCArIDEgLSBzdGFydCkKICAgIC5maWxsKDApCiAgICAubWFw
KCh4LCBpKSA9PiAoaSArIHN0YXJ0KSAqKiBwb3dlcikKICAgIC5yZWR1Y2Uo
KGEsIGIpID0+IGEgKyBiLCAwKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+
RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpzdW1Qb3dlcigxMCk7IC8vIDM4
NQpzdW1Qb3dlcigxMCwgMyk7IC8vIDMwMjUKc3VtUG93ZXIoMTAsIDMsIDUp
OyAvLyAyOTI1CmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRv
cF0oI2NvbnRlbnRzKQoKIyMjIHRvU2FmZUludGVnZXIKCkNvbnZlcnRzIGEg
dmFsdWUgdG8gYSBzYWZlIGludGVnZXIuCgpVc2UgYE1hdGgubWF4KClgIGFu
ZCBgTWF0aC5taW4oKWAgdG8gZmluZCB0aGUgY2xvc2VzdCBzYWZlIHZhbHVl
LgpVc2UgYE1hdGgucm91bmQoKWAgdG8gY29udmVydCB0byBhbiBpbnRlZ2Vy
LgoKYGBganMKY29uc3QgdG9TYWZlSW50ZWdlciA9IG51bSA9PgogIE1hdGgu
cm91bmQoTWF0aC5tYXgoTWF0aC5taW4obnVtLCBOdW1iZXIuTUFYX1NBRkVf
SU5URUdFUiksIE51bWJlci5NSU5fU0FGRV9JTlRFR0VSKSk7CmBgYAoKPGRl
dGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKdG9T
YWZlSW50ZWdlcignMy4yJyk7IC8vIDMKdG9TYWZlSW50ZWdlcihJbmZpbml0
eSk7IC8vIDkwMDcxOTkyNTQ3NDA5OTEKYGBgCjwvZGV0YWlscz4KCjxicj5b
4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgdmVjdG9yRGlzdGFu
Y2UKClJldHVybnMgdGhlIGRpc3RhbmNlIGJldHdlZW4gdHdvIHZlY3RvcnMu
CgpVc2UgYEFycmF5LnByb3RvdHlwZS5yZWR1Y2UoKWAsIGBNYXRoLnBvdygp
YCBhbmQgYE1hdGguc3FydCgpYCB0byBjYWxjdWxhdGUgdGhlIEV1Y2xpZGVh
biBkaXN0YW5jZSBiZXR3ZWVuIHR3byB2ZWN0b3JzLgoKYGBganMKY29uc3Qg
dmVjdG9yRGlzdGFuY2UgPSAoLi4uY29vcmRzKSA9PiB7CiAgbGV0IHBvaW50
TGVuZ3RoID0gTWF0aC50cnVuYyhjb29yZHMubGVuZ3RoIC8gMik7CiAgbGV0
IHN1bSA9IGNvb3JkcwogICAgLnNsaWNlKDAsIHBvaW50TGVuZ3RoKQogICAg
LnJlZHVjZSgoYWNjLCB2YWwsIGkpID0+IGFjYyArIE1hdGgucG93KHZhbCAt
IGNvb3Jkc1twb2ludExlbmd0aCArIGldLCAyKSwgMCk7CiAgcmV0dXJuIE1h
dGguc3FydChzdW0pOwp9OwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFt
cGxlczwvc3VtbWFyeT4KCmBgYGpzCnZlY3RvckRpc3RhbmNlKDEwLCAwLCA1
LCAyMCwgMCwgMTApOyAvLyAxMS4xODAzMzk4ODc0OTg5NDkKYGBgCjwvZGV0
YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgotLS0K
CiMjIPCfk6YgTm9kZQoKCiMjIyBhdG9iCgpEZWNvZGVzIGEgc3RyaW5nIG9m
IGRhdGEgd2hpY2ggaGFzIGJlZW4gZW5jb2RlZCB1c2luZyBiYXNlLTY0IGVu
Y29kaW5nLgoKQ3JlYXRlIGEgYEJ1ZmZlcmAgZm9yIHRoZSBnaXZlbiBzdHJp
bmcgd2l0aCBiYXNlLTY0IGVuY29kaW5nIGFuZCB1c2UgYEJ1ZmZlci50b1N0
cmluZygnYmluYXJ5JylgIHRvIHJldHVybiB0aGUgZGVjb2RlZCBzdHJpbmcu
CgpgYGBqcwpjb25zdCBhdG9iID0gc3RyID0+IEJ1ZmZlci5mcm9tKHN0ciwg
J2Jhc2U2NCcpLnRvU3RyaW5nKCdiaW5hcnknKTsKYGBgCgo8ZGV0YWlscz4K
PHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwphdG9iKCdabTl2
WW1GeScpOyAvLyAnZm9vYmFyJwpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYg
QmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBidG9hCgpDcmVhdGVzIGEg
YmFzZS02NCBlbmNvZGVkIEFTQ0lJIHN0cmluZyBmcm9tIGEgU3RyaW5nIG9i
amVjdCBpbiB3aGljaCBlYWNoIGNoYXJhY3RlciBpbiB0aGUgc3RyaW5nIGlz
IHRyZWF0ZWQgYXMgYSBieXRlIG9mIGJpbmFyeSBkYXRhLgoKQ3JlYXRlIGEg
YEJ1ZmZlcmAgZm9yIHRoZSBnaXZlbiBzdHJpbmcgd2l0aCBiaW5hcnkgZW5j
b2RpbmcgYW5kIHVzZSBgQnVmZmVyLnRvU3RyaW5nKCdiYXNlNjQnKWAgdG8g
cmV0dXJuIHRoZSBlbmNvZGVkIHN0cmluZy4KCmBgYGpzCmNvbnN0IGJ0b2Eg
PSBzdHIgPT4gQnVmZmVyLmZyb20oc3RyLCAnYmluYXJ5JykudG9TdHJpbmco
J2Jhc2U2NCcpOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwv
c3VtbWFyeT4KCmBgYGpzCmJ0b2EoJ2Zvb2JhcicpOyAvLyAnWm05dlltRnkn
CmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRl
bnRzKQoKIyMjIGNvbG9yaXplCgpBZGQgc3BlY2lhbCBjaGFyYWN0ZXJzIHRv
IHRleHQgdG8gcHJpbnQgaW4gY29sb3IgaW4gdGhlIGNvbnNvbGUgKGNvbWJp
bmVkIHdpdGggYGNvbnNvbGUubG9nKClgKS4KClVzZSB0ZW1wbGF0ZSBsaXRl
cmFscyBhbmQgc3BlY2lhbCBjaGFyYWN0ZXJzIHRvIGFkZCB0aGUgYXBwcm9w
cmlhdGUgY29sb3IgY29kZSB0byB0aGUgc3RyaW5nIG91dHB1dC4KRm9yIGJh
Y2tncm91bmQgY29sb3JzLCBhZGQgYSBzcGVjaWFsIGNoYXJhY3RlciB0aGF0
IHJlc2V0cyB0aGUgYmFja2dyb3VuZCBjb2xvciBhdCB0aGUgZW5kIG9mIHRo
ZSBzdHJpbmcuCgpgYGBqcwpjb25zdCBjb2xvcml6ZSA9ICguLi5hcmdzKSA9
PiAoewogIGJsYWNrOiBgXHgxYlszMG0ke2FyZ3Muam9pbignICcpfWAsCiAg
cmVkOiBgXHgxYlszMW0ke2FyZ3Muam9pbignICcpfWAsCiAgZ3JlZW46IGBc
eDFiWzMybSR7YXJncy5qb2luKCcgJyl9YCwKICB5ZWxsb3c6IGBceDFiWzMz
bSR7YXJncy5qb2luKCcgJyl9YCwKICBibHVlOiBgXHgxYlszNG0ke2FyZ3Mu
am9pbignICcpfWAsCiAgbWFnZW50YTogYFx4MWJbMzVtJHthcmdzLmpvaW4o
JyAnKX1gLAogIGN5YW46IGBceDFiWzM2bSR7YXJncy5qb2luKCcgJyl9YCwK
ICB3aGl0ZTogYFx4MWJbMzdtJHthcmdzLmpvaW4oJyAnKX1gLAogIGJnQmxh
Y2s6IGBceDFiWzQwbSR7YXJncy5qb2luKCcgJyl9XHgxYlswbWAsCiAgYmdS
ZWQ6IGBceDFiWzQxbSR7YXJncy5qb2luKCcgJyl9XHgxYlswbWAsCiAgYmdH
cmVlbjogYFx4MWJbNDJtJHthcmdzLmpvaW4oJyAnKX1ceDFiWzBtYCwKICBi
Z1llbGxvdzogYFx4MWJbNDNtJHthcmdzLmpvaW4oJyAnKX1ceDFiWzBtYCwK
ICBiZ0JsdWU6IGBceDFiWzQ0bSR7YXJncy5qb2luKCcgJyl9XHgxYlswbWAs
CiAgYmdNYWdlbnRhOiBgXHgxYls0NW0ke2FyZ3Muam9pbignICcpfVx4MWJb
MG1gLAogIGJnQ3lhbjogYFx4MWJbNDZtJHthcmdzLmpvaW4oJyAnKX1ceDFi
WzBtYCwKICBiZ1doaXRlOiBgXHgxYls0N20ke2FyZ3Muam9pbignICcpfVx4
MWJbMG1gCn0pOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwv
c3VtbWFyeT4KCmBgYGpzCmNvbnNvbGUubG9nKGNvbG9yaXplKCdmb28nKS5y
ZWQpOyAvLyAnZm9vJyAocmVkIGxldHRlcnMpCmNvbnNvbGUubG9nKGNvbG9y
aXplKCdmb28nLCAnYmFyJykuYmdCbHVlKTsgLy8gJ2ZvbyBiYXInIChibHVl
IGJhY2tncm91bmQpCmNvbnNvbGUubG9nKGNvbG9yaXplKGNvbG9yaXplKCdm
b28nKS55ZWxsb3csIGNvbG9yaXplKCdmb28nKS5ncmVlbikuYmdXaGl0ZSk7
IC8vICdmb28gYmFyJyAoZmlyc3Qgd29yZCBpbiB5ZWxsb3cgbGV0dGVycywg
c2Vjb25kIHdvcmQgaW4gZ3JlZW4gbGV0dGVycywgd2hpdGUgYmFja2dyb3Vu
ZCBmb3IgYm90aCkKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8g
dG9wXSgjY29udGVudHMpCgojIyMgY3JlYXRlRGlySWZOb3RFeGlzdHMKCkNy
ZWF0ZXMgYSBkaXJlY3RvcnksIGlmIGl0IGRvZXMgbm90IGV4aXN0LgoKVXNl
IGBmcy5leGlzdHNTeW5jKClgIHRvIGNoZWNrIGlmIHRoZSBkaXJlY3Rvcnkg
ZXhpc3RzLCBgZnMubWtkaXJTeW5jKClgIHRvIGNyZWF0ZSBpdC4KCmBgYGpz
CmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTsKY29uc3QgY3JlYXRlRGlySWZO
b3RFeGlzdHMgPSBkaXIgPT4gKCFmcy5leGlzdHNTeW5jKGRpcikgPyBmcy5t
a2RpclN5bmMoZGlyKSA6IHVuZGVmaW5lZCk7CmBgYAoKPGRldGFpbHM+Cjxz
dW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKY3JlYXRlRGlySWZO
b3RFeGlzdHMoJ3Rlc3QnKTsgLy8gY3JlYXRlcyB0aGUgZGlyZWN0b3J5ICd0
ZXN0JywgaWYgaXQgZG9lc24ndCBleGlzdApgYGAKPC9kZXRhaWxzPgoKPGJy
PlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBoYXNGbGFncwoK
Q2hlY2sgaWYgdGhlIGN1cnJlbnQgcHJvY2VzcydzIGFyZ3VtZW50cyBjb250
YWluIHRoZSBzcGVjaWZpZWQgZmxhZ3MuCgpVc2UgYEFycmF5LnByb3RvdHlw
ZS5ldmVyeSgpYCBhbmQgYEFycmF5LnByb3RvdHlwZS5pbmNsdWRlcygpYCB0
byBjaGVjayBpZiBgcHJvY2Vzcy5hcmd2YCBjb250YWlucyBhbGwgdGhlIHNw
ZWNpZmllZCBmbGFncy4KVXNlIGEgcmVndWxhciBleHByZXNzaW9uIHRvIHRl
c3QgaWYgdGhlIHNwZWNpZmllZCBmbGFncyBhcmUgcHJlZml4ZWQgd2l0aCBg
LWAgb3IgYC0tYCBhbmQgcHJlZml4IHRoZW0gYWNjb3JkaW5nbHkuCgpgYGBq
cwpjb25zdCBoYXNGbGFncyA9ICguLi5mbGFncykgPT4KICBmbGFncy5ldmVy
eShmbGFnID0+IHByb2Nlc3MuYXJndi5pbmNsdWRlcygvXi17MSwyfS8udGVz
dChmbGFnKSA/IGZsYWcgOiAnLS0nICsgZmxhZykpOwpgYGAKCjxkZXRhaWxz
Pgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCi8vIG5vZGUg
bXlTY3JpcHQuanMgLXMgLS10ZXN0IC0tY29vbD10cnVlCmhhc0ZsYWdzKCct
cycpOyAvLyB0cnVlCmhhc0ZsYWdzKCctLXRlc3QnLCAnY29vbD10cnVlJywg
Jy1zJyk7IC8vIHRydWUKaGFzRmxhZ3MoJ3NwZWNpYWwnKTsgLy8gZmFsc2UK
YGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVu
dHMpCgojIyMgaGFzaE5vZGUKCkNyZWF0ZXMgYSBoYXNoIGZvciBhIHZhbHVl
IHVzaW5nIHRoZSBbU0hBLTI1Nl0oaHR0cHM6Ly9lbi53aWtpcGVkaWEub3Jn
L3dpa2kvU0hBLTIpIGFsZ29yaXRobS4gUmV0dXJucyBhIHByb21pc2UuCgpV
c2UgYGNyeXB0b2AgQVBJIHRvIGNyZWF0ZSBhIGhhc2ggZm9yIHRoZSBnaXZl
biB2YWx1ZSwgYHNldFRpbWVvdXRgIHRvIHByZXZlbnQgYmxvY2tpbmcgb24g
YSBsb25nIG9wZXJhdGlvbiwgYW5kIGEgYFByb21pc2VgIHRvIGdpdmUgaXQg
YSBmYW1pbGlhciBpbnRlcmZhY2UuCgpgYGBqcwpjb25zdCBjcnlwdG8gPSBy
ZXF1aXJlKCdjcnlwdG8nKTsKY29uc3QgaGFzaE5vZGUgPSB2YWwgPT4KICBu
ZXcgUHJvbWlzZShyZXNvbHZlID0+CiAgICBzZXRUaW1lb3V0KAogICAgICAo
KSA9PgogICAgICAgIHJlc29sdmUoCiAgICAgICAgICBjcnlwdG8KICAgICAg
ICAgICAgLmNyZWF0ZUhhc2goJ3NoYTI1NicpCiAgICAgICAgICAgIC51cGRh
dGUodmFsKQogICAgICAgICAgICAuZGlnZXN0KCdoZXgnKQogICAgICAgICks
CiAgICAgIDAKICAgICkKICApOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5F
eGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmhhc2hOb2RlKEpTT04uc3RyaW5n
aWZ5KHsgYTogJ2EnLCBiOiBbMSwgMiwgMywgNF0sIGZvbzogeyBjOiAnYmFy
JyB9IH0pKS50aGVuKGNvbnNvbGUubG9nKTsgLy8gJzA0YWExMDYyNzlmNTk3
N2Y1OWY5MDY3ZmE5NzEyYWZjNGFlZGM2ZjU4NjJhOGRlZmMzNDU1MmQ4Yzcy
MDYzOTMnCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0o
I2NvbnRlbnRzKQoKIyMjIGlzRHVwbGV4U3RyZWFtCgpDaGVja3MgaWYgdGhl
IGdpdmVuIGFyZ3VtZW50IGlzIGEgZHVwbGV4IChyZWFkYWJsZSBhbmQgd3Jp
dGFibGUpIHN0cmVhbS4KCkNoZWNrIGlmIHRoZSB2YWx1ZSBpcyBkaWZmZXJl
bnQgZnJvbSBgbnVsbGAsIHVzZSBgdHlwZW9mYCB0byBjaGVjayBpZiBhIHZh
bHVlIGlzIG9mIHR5cGUgYG9iamVjdGAgYW5kIHRoZSBgcGlwZWAgcHJvcGVy
dHkgaXMgb2YgdHlwZSBgZnVuY3Rpb25gLgpBZGRpdGlvbmFsbHkgY2hlY2sg
aWYgdGhlIGB0eXBlb2ZgIHRoZSBgX3JlYWRgLCBgX3dyaXRlYCBhbmQgYF9y
ZWFkYWJsZVN0YXRlYCwgYF93cml0YWJsZVN0YXRlYCBwcm9wZXJ0aWVzIGFy
ZSBgZnVuY3Rpb25gIGFuZCBgb2JqZWN0YCByZXNwZWN0aXZlbHkuCgpgYGBq
cwpjb25zdCBpc0R1cGxleFN0cmVhbSA9IHZhbCA9PgogIHZhbCAhPT0gbnVs
bCAmJgogIHR5cGVvZiB2YWwgPT09ICdvYmplY3QnICYmCiAgdHlwZW9mIHZh
bC5waXBlID09PSAnZnVuY3Rpb24nICYmCiAgdHlwZW9mIHZhbC5fcmVhZCA9
PT0gJ2Z1bmN0aW9uJyAmJgogIHR5cGVvZiB2YWwuX3JlYWRhYmxlU3RhdGUg
PT09ICdvYmplY3QnICYmCiAgdHlwZW9mIHZhbC5fd3JpdGUgPT09ICdmdW5j
dGlvbicgJiYKICB0eXBlb2YgdmFsLl93cml0YWJsZVN0YXRlID09PSAnb2Jq
ZWN0JzsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1h
cnk+CgpgYGBqcwpjb25zdCBTdHJlYW0gPSByZXF1aXJlKCdzdHJlYW0nKTsK
aXNEdXBsZXhTdHJlYW0obmV3IFN0cmVhbS5EdXBsZXgoKSk7IC8vIHRydWUK
YGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVu
dHMpCgojIyMgaXNSZWFkYWJsZVN0cmVhbQoKQ2hlY2tzIGlmIHRoZSBnaXZl
biBhcmd1bWVudCBpcyBhIHJlYWRhYmxlIHN0cmVhbS4KCkNoZWNrIGlmIHRo
ZSB2YWx1ZSBpcyBkaWZmZXJlbnQgZnJvbSBgbnVsbGAsIHVzZSBgdHlwZW9m
YCB0byBjaGVjayBpZiB0aGUgdmFsdWUgaXMgb2YgdHlwZSBgb2JqZWN0YCBh
bmQgdGhlIGBwaXBlYCBwcm9wZXJ0eSBpcyBvZiB0eXBlIGBmdW5jdGlvbmAu
CkFkZGl0aW9uYWxseSBjaGVjayBpZiB0aGUgYHR5cGVvZmAgdGhlIGBfcmVh
ZGAgYW5kIGBfcmVhZGFibGVTdGF0ZWAgcHJvcGVydGllcyBhcmUgYGZ1bmN0
aW9uYCBhbmQgYG9iamVjdGAgcmVzcGVjdGl2ZWx5LgoKYGBganMKY29uc3Qg
aXNSZWFkYWJsZVN0cmVhbSA9IHZhbCA9PgogIHZhbCAhPT0gbnVsbCAmJgog
IHR5cGVvZiB2YWwgPT09ICdvYmplY3QnICYmCiAgdHlwZW9mIHZhbC5waXBl
ID09PSAnZnVuY3Rpb24nICYmCiAgdHlwZW9mIHZhbC5fcmVhZCA9PT0gJ2Z1
bmN0aW9uJyAmJgogIHR5cGVvZiB2YWwuX3JlYWRhYmxlU3RhdGUgPT09ICdv
YmplY3QnOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3Vt
bWFyeT4KCmBgYGpzCmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTsKaXNSZWFk
YWJsZVN0cmVhbShmcy5jcmVhdGVSZWFkU3RyZWFtKCd0ZXN0LnR4dCcpKTsg
Ly8gdHJ1ZQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3Bd
KCNjb250ZW50cykKCiMjIyBpc1N0cmVhbQoKQ2hlY2tzIGlmIHRoZSBnaXZl
biBhcmd1bWVudCBpcyBhIHN0cmVhbS4KCkNoZWNrIGlmIHRoZSB2YWx1ZSBp
cyBkaWZmZXJlbnQgZnJvbSBgbnVsbGAsIHVzZSBgdHlwZW9mYCB0byBjaGVj
ayBpZiB0aGUgdmFsdWUgaXMgb2YgdHlwZSBgb2JqZWN0YCBhbmQgdGhlIGBw
aXBlYCBwcm9wZXJ0eSBpcyBvZiB0eXBlIGBmdW5jdGlvbmAuCgpgYGBqcwpj
b25zdCBpc1N0cmVhbSA9IHZhbCA9PiB2YWwgIT09IG51bGwgJiYgdHlwZW9m
IHZhbCA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIHZhbC5waXBlID09PSAnZnVu
Y3Rpb24nOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3Vt
bWFyeT4KCmBgYGpzCmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTsKaXNTdHJl
YW0oZnMuY3JlYXRlUmVhZFN0cmVhbSgndGVzdC50eHQnKSk7IC8vIHRydWUK
YGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVu
dHMpCgojIyMgaXNUcmF2aXNDSQoKQ2hlY2tzIGlmIHRoZSBjdXJyZW50IGVu
dmlyb25tZW50IGlzIFtUcmF2aXMgQ0ldKGh0dHBzOi8vdHJhdmlzLWNpLm9y
Zy8pLgoKQ2hlY2tzIGlmIHRoZSBjdXJyZW50IGVudmlyb25tZW50IGhhcyB0
aGUgYFRSQVZJU2AgYW5kIGBDSWAgZW52aXJvbm1lbnQgdmFyaWFibGVzIChb
cmVmZXJlbmNlXShodHRwczovL2RvY3MudHJhdmlzLWNpLmNvbS91c2VyL2Vu
dmlyb25tZW50LXZhcmlhYmxlcy8jRGVmYXVsdC1FbnZpcm9ubWVudC1WYXJp
YWJsZXMpKS4KCmBgYGpzCmNvbnN0IGlzVHJhdmlzQ0kgPSAoKSA9PiAnVFJB
VklTJyBpbiBwcm9jZXNzLmVudiAmJiAnQ0knIGluIHByb2Nlc3MuZW52Owpg
YGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBg
YGpzCmlzVHJhdmlzQ0koKTsgLy8gdHJ1ZSAoaWYgY29kZSBpcyBydW5uaW5n
IG9uIFRyYXZpcyBDSSkKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sg
dG8gdG9wXSgjY29udGVudHMpCgojIyMgaXNXcml0YWJsZVN0cmVhbQoKQ2hl
Y2tzIGlmIHRoZSBnaXZlbiBhcmd1bWVudCBpcyBhIHdyaXRhYmxlIHN0cmVh
bS4KCkNoZWNrIGlmIHRoZSB2YWx1ZSBpcyBkaWZmZXJlbnQgZnJvbSBgbnVs
bGAsIHVzZSBgdHlwZW9mYCB0byBjaGVjayBpZiB0aGUgdmFsdWUgaXMgb2Yg
dHlwZSBgb2JqZWN0YCBhbmQgdGhlIGBwaXBlYCBwcm9wZXJ0eSBpcyBvZiB0
eXBlIGBmdW5jdGlvbmAuCkFkZGl0aW9uYWxseSBjaGVjayBpZiB0aGUgYHR5
cGVvZmAgdGhlIGBfd3JpdGVgIGFuZCBgX3dyaXRhYmxlU3RhdGVgIHByb3Bl
cnRpZXMgYXJlIGBmdW5jdGlvbmAgYW5kIGBvYmplY3RgIHJlc3BlY3RpdmVs
eS4KCmBgYGpzCmNvbnN0IGlzV3JpdGFibGVTdHJlYW0gPSB2YWwgPT4KICB2
YWwgIT09IG51bGwgJiYKICB0eXBlb2YgdmFsID09PSAnb2JqZWN0JyAmJgog
IHR5cGVvZiB2YWwucGlwZSA9PT0gJ2Z1bmN0aW9uJyAmJgogIHR5cGVvZiB2
YWwuX3dyaXRlID09PSAnZnVuY3Rpb24nICYmCiAgdHlwZW9mIHZhbC5fd3Jp
dGFibGVTdGF0ZSA9PT0gJ29iamVjdCc7CmBgYAoKPGRldGFpbHM+CjxzdW1t
YXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKY29uc3QgZnMgPSByZXF1
aXJlKCdmcycpOwppc1dyaXRhYmxlU3RyZWFtKGZzLmNyZWF0ZVdyaXRlU3Ry
ZWFtKCd0ZXN0LnR4dCcpKTsgLy8gdHJ1ZQpgYGAKPC9kZXRhaWxzPgoKPGJy
PlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBKU09OVG9GaWxl
CgpXcml0ZXMgYSBKU09OIG9iamVjdCB0byBhIGZpbGUuCgpVc2UgYGZzLndy
aXRlRmlsZSgpYCwgdGVtcGxhdGUgbGl0ZXJhbHMgYW5kIGBKU09OLnN0cmlu
Z2lmeSgpYCB0byB3cml0ZSBhIGBqc29uYCBvYmplY3QgdG8gYSBgLmpzb25g
IGZpbGUuCgpgYGBqcwpjb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7CmNvbnN0
IEpTT05Ub0ZpbGUgPSAob2JqLCBmaWxlbmFtZSkgPT4KICBmcy53cml0ZUZp
bGUoYCR7ZmlsZW5hbWV9Lmpzb25gLCBKU09OLnN0cmluZ2lmeShvYmosIG51
bGwsIDIpKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1
bW1hcnk+CgpgYGBqcwpKU09OVG9GaWxlKHsgdGVzdDogJ2lzIHBhc3NlZCcg
fSwgJ3Rlc3RKc29uRmlsZScpOyAvLyB3cml0ZXMgdGhlIG9iamVjdCB0byAn
dGVzdEpzb25GaWxlLmpzb24nCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBC
YWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHJlYWRGaWxlTGluZXMKClJl
dHVybnMgYW4gYXJyYXkgb2YgbGluZXMgZnJvbSB0aGUgc3BlY2lmaWVkIGZp
bGUuCgpVc2UgYHJlYWRGaWxlU3luY2AgZnVuY3Rpb24gaW4gYGZzYCBub2Rl
IHBhY2thZ2UgdG8gY3JlYXRlIGEgYEJ1ZmZlcmAgZnJvbSBhIGZpbGUuCmNv
bnZlcnQgYnVmZmVyIHRvIHN0cmluZyB1c2luZyBgdG9TdHJpbmcoZW5jb2Rp
bmcpYCBmdW5jdGlvbi4KY3JlYXRpbmcgYW4gYXJyYXkgZnJvbSBjb250ZW50
cyBvZiBmaWxlIGJ5IGBzcGxpdGBpbmcgZmlsZSBjb250ZW50IGxpbmUgYnkg
bGluZSAoZWFjaCBgXG5gKS4KCmBgYGpzCmNvbnN0IGZzID0gcmVxdWlyZSgn
ZnMnKTsKY29uc3QgcmVhZEZpbGVMaW5lcyA9IGZpbGVuYW1lID0+CiAgZnMK
ICAgIC5yZWFkRmlsZVN5bmMoZmlsZW5hbWUpCiAgICAudG9TdHJpbmcoJ1VU
RjgnKQogICAgLnNwbGl0KCdcbicpOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFy
eT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCi8qCmNvbnRlbnRzIG9mIHRl
c3QudHh0IDoKICBsaW5lMQogIGxpbmUyCiAgbGluZTMKICBfX19fX19fX19f
X19fX19fX19fX19fX19fX18KKi8KbGV0IGFyciA9IHJlYWRGaWxlTGluZXMo
J3Rlc3QudHh0Jyk7CmNvbnNvbGUubG9nKGFycik7IC8vIFsnbGluZTEnLCAn
bGluZTInLCAnbGluZTMnXQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFj
ayB0byB0b3BdKCNjb250ZW50cykKCiMjIyB1bnRpbGRpZnkKCkNvbnZlcnRz
IGEgdGlsZGUgcGF0aCB0byBhbiBhYnNvbHV0ZSBwYXRoLgoKVXNlIGBTdHJp
bmcucHJvdG90eXBlLnJlcGxhY2UoKWAgd2l0aCBhIHJlZ3VsYXIgZXhwcmVz
c2lvbiBhbmQgYE9TLmhvbWVkaXIoKWAgdG8gcmVwbGFjZSB0aGUgYH5gIGlu
IHRoZSBzdGFydCBvZiB0aGUgcGF0aCB3aXRoIHRoZSBob21lIGRpcmVjdG9y
eS4KCmBgYGpzCmNvbnN0IHVudGlsZGlmeSA9IHN0ciA9PiBzdHIucmVwbGFj
ZSgvXn4oJHxcL3xcXCkvLCBgJHtyZXF1aXJlKCdvcycpLmhvbWVkaXIoKX0k
MWApOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFy
eT4KCmBgYGpzCnVudGlsZGlmeSgnfi9ub2RlJyk7IC8vICcvVXNlcnMvYVVz
ZXIvbm9kZScKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9w
XSgjY29udGVudHMpCgojIyMgVVVJREdlbmVyYXRvck5vZGUKCkdlbmVyYXRl
cyBhIFVVSUQgaW4gTm9kZS5KUy4KClVzZSBgY3J5cHRvYCBBUEkgdG8gZ2Vu
ZXJhdGUgYSBVVUlELCBjb21wbGlhbnQgd2l0aCBbUkZDNDEyMl0oaHR0cHM6
Ly93d3cuaWV0Zi5vcmcvcmZjL3JmYzQxMjIudHh0KSB2ZXJzaW9uIDQuCgpg
YGBqcwpjb25zdCBjcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKTsKY29uc3Qg
VVVJREdlbmVyYXRvck5vZGUgPSAoKSA9PgogIChbMWU3XSArIC0xZTMgKyAt
NGUzICsgLThlMyArIC0xZTExKS5yZXBsYWNlKC9bMDE4XS9nLCBjID0+CiAg
ICAoYyBeIChjcnlwdG8ucmFuZG9tQnl0ZXMoMSlbMF0gJiAoMTUgPj4gKGMg
LyA0KSkpKS50b1N0cmluZygxNikKICApOwpgYGAKCjxkZXRhaWxzPgo8c3Vt
bWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzClVVSURHZW5lcmF0b3JO
b2RlKCk7IC8vICc3OWM3YzEzNi02MGVlLTQwYTItYmViMi04NTZmMWZlYWJl
ZmMnCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2Nv
bnRlbnRzKQoKLS0tCgojIyDwn5eD77iPIE9iamVjdAoKCiMjIyBiaW5kQWxs
CgpCaW5kcyBtZXRob2RzIG9mIGFuIG9iamVjdCB0byB0aGUgb2JqZWN0IGl0
c2VsZiwgb3ZlcndyaXRpbmcgdGhlIGV4aXN0aW5nIG1ldGhvZC4KClVzZSBg
QXJyYXkucHJvdG90eXBlLmZvckVhY2goKWAgdG8gcmV0dXJuIGEgYGZ1bmN0
aW9uYCB0aGF0IHVzZXMgYEZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseSgpYCB0
byBhcHBseSB0aGUgZ2l2ZW4gY29udGV4dCAoYG9iamApIHRvIGBmbmAgZm9y
IGVhY2ggZnVuY3Rpb24gc3BlY2lmaWVkLgoKYGBganMKY29uc3QgYmluZEFs
bCA9IChvYmosIC4uLmZucykgPT4KICBmbnMuZm9yRWFjaCgKICAgIGZuID0+
ICgKICAgICAgKGYgPSBvYmpbZm5dKSwKICAgICAgKG9ialtmbl0gPSBmdW5j
dGlvbigpIHsKICAgICAgICByZXR1cm4gZi5hcHBseShvYmopOwogICAgICB9
KQogICAgKQogICk7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVz
PC9zdW1tYXJ5PgoKYGBganMKdmFyIHZpZXcgPSB7CiAgbGFiZWw6ICdkb2Nz
JywKICBjbGljazogZnVuY3Rpb24oKSB7CiAgICBjb25zb2xlLmxvZygnY2xp
Y2tlZCAnICsgdGhpcy5sYWJlbCk7CiAgfQp9OwpiaW5kQWxsKHZpZXcsICdj
bGljaycpOwpqUXVlcnkoZWxlbWVudCkub24oJ2NsaWNrJywgdmlldy5jbGlj
ayk7IC8vIExvZ3MgJ2NsaWNrZWQgZG9jcycgd2hlbiBjbGlja2VkLgpgYGAK
PC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykK
CiMjIyBkZWVwQ2xvbmUKCkNyZWF0ZXMgYSBkZWVwIGNsb25lIG9mIGFuIG9i
amVjdC4KClVzZSByZWN1cnNpb24uCkNoZWNrIGlmIHRoZSBwYXNzZWQgb2Jq
ZWN0IGlzIGBudWxsYCBhbmQsIGlmIHNvLCByZXR1cm4gYG51bGxgLgpVc2Ug
YE9iamVjdC5hc3NpZ24oKWAgYW5kIGFuIGVtcHR5IG9iamVjdCAoYHt9YCkg
dG8gY3JlYXRlIGEgc2hhbGxvdyBjbG9uZSBvZiB0aGUgb3JpZ2luYWwuClVz
ZSBgT2JqZWN0LmtleXMoKWAgYW5kIGBBcnJheS5wcm90b3R5cGUuZm9yRWFj
aCgpYCB0byBkZXRlcm1pbmUgd2hpY2gga2V5LXZhbHVlIHBhaXJzIG5lZWQg
dG8gYmUgZGVlcCBjbG9uZWQuCgpgYGBqcwpjb25zdCBkZWVwQ2xvbmUgPSBv
YmogPT4gewogIGlmIChvYmogPT09IG51bGwpIHJldHVybiBudWxsOwogIGxl
dCBjbG9uZSA9IE9iamVjdC5hc3NpZ24oe30sIG9iaik7CiAgT2JqZWN0Lmtl
eXMoY2xvbmUpLmZvckVhY2goCiAgICBrZXkgPT4gKGNsb25lW2tleV0gPSB0
eXBlb2Ygb2JqW2tleV0gPT09ICdvYmplY3QnID8gZGVlcENsb25lKG9ialtr
ZXldKSA6IG9ialtrZXldKQogICk7CiAgcmV0dXJuIEFycmF5LmlzQXJyYXko
b2JqKSAmJiBvYmoubGVuZ3RoCiAgICA/IChjbG9uZS5sZW5ndGggPSBvYmou
bGVuZ3RoKSAmJiBBcnJheS5mcm9tKGNsb25lKQogICAgOiBBcnJheS5pc0Fy
cmF5KG9iaikKICAgID8gQXJyYXkuZnJvbShvYmopCiAgICA6IGNsb25lOwp9
OwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4K
CmBgYGpzCmNvbnN0IGEgPSB7IGZvbzogJ2JhcicsIG9iajogeyBhOiAxLCBi
OiAyIH0gfTsKY29uc3QgYiA9IGRlZXBDbG9uZShhKTsgLy8gYSAhPT0gYiwg
YS5vYmogIT09IGIub2JqCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNr
IHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGRlZXBGcmVlemUKCkRlZXAgZnJl
ZXplcyBhbiBvYmplY3QuCgpDYWxscyBgT2JqZWN0LmZyZWV6ZShvYmopYCBy
ZWN1cnNpdmVseSBvbiBhbGwgdW5mcm96ZW4gcHJvcGVydGllcyBvZiBwYXNz
ZWQgb2JqZWN0IHRoYXQgYXJlIGBpbnN0YW5jZW9mYCBvYmplY3QuCgpgYGBq
cwpjb25zdCBkZWVwRnJlZXplID0gb2JqID0+CiAgT2JqZWN0LmtleXMob2Jq
KS5mb3JFYWNoKHByb3AgPT4KICAgICEob2JqW3Byb3BdIGluc3RhbmNlb2Yg
T2JqZWN0KSB8fCBPYmplY3QuaXNGcm96ZW4ob2JqW3Byb3BdKSA/IG51bGwg
OiBkZWVwRnJlZXplKG9ialtwcm9wXSkKICApIHx8IE9iamVjdC5mcmVlemUo
b2JqKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1h
cnk+CgpgYGBqcwondXNlIHN0cmljdCc7Cgpjb25zdCBvID0gZGVlcEZyZWV6
ZShbMSwgWzIsIDNdXSk7CgpvWzBdID0gMzsgLy8gbm90IGFsbG93ZWQKb1sx
XVswXSA9IDQ7IC8vIG5vdCBhbGxvd2VkIGFzIHdlbGwKYGBgCjwvZGV0YWls
cz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgZGVl
cEdldAoKUmV0dXJucyB0aGUgdGFyZ2V0IHZhbHVlIGluIGEgbmVzdGVkIEpT
T04gb2JqZWN0LCBiYXNlZCBvbiB0aGUgYGtleXNgIGFycmF5LgoKQ29tcGFy
ZSB0aGUga2V5cyB5b3Ugd2FudCBpbiB0aGUgbmVzdGVkIEpTT04gb2JqZWN0
IGFzIGFuIGBBcnJheWAuClVzZSBgQXJyYXkucHJvdG90eXBlLnJlZHVjZSgp
YCB0byBnZXQgdmFsdWUgZnJvbSBuZXN0ZWQgSlNPTiBvYmplY3Qgb25lIGJ5
IG9uZS4gCklmIHRoZSBrZXkgZXhpc3RzIGluIG9iamVjdCwgcmV0dXJuIHRh
cmdldCB2YWx1ZSwgb3RoZXJ3aXNlLCByZXR1cm4gYG51bGxgLgoKYGBganMK
Y29uc3QgZGVlcEdldCA9IChvYmosIGtleXMpID0+IGtleXMucmVkdWNlKCh4
cywgeCkgPT4gKHhzICYmIHhzW3hdID8geHNbeF0gOiBudWxsKSwgb2JqKTsK
YGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+Cgpg
YGBqcwpsZXQgaW5kZXggPSAyOwpjb25zdCBkYXRhID0gewogIGZvbzogewog
ICAgZm96OiBbMSwgMiwgM10sCiAgICBiYXI6IHsKICAgICAgYmF6OiBbJ2En
LCAnYicsICdjJ10KICAgIH0KICB9Cn07CmRlZXBHZXQoZGF0YSwgWydmb28n
LCAnZm96JywgaW5kZXhdKTsgLy8gZ2V0IDMKZGVlcEdldChkYXRhLCBbJ2Zv
bycsICdiYXInLCAnYmF6JywgOCwgJ2ZveiddKTsgLy8gbnVsbApgYGAKPC9k
ZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMj
IyBkZWVwTWFwS2V5cyAhW2FkdmFuY2VkXSgvYWR2YW5jZWQuc3ZnKQoKRGVl
cCBtYXBzIGFuIG9iamVjdCdzIGtleXMuCgpDcmVhdGVzIGFuIG9iamVjdCB3
aXRoIHRoZSBzYW1lIHZhbHVlcyBhcyB0aGUgcHJvdmlkZWQgb2JqZWN0IGFu
ZCBrZXlzIGdlbmVyYXRlZCBieSBydW5uaW5nIHRoZSBwcm92aWRlZCBmdW5j
dGlvbiBmb3IgZWFjaCBrZXkuClVzZSBgT2JqZWN0LmtleXMob2JqKWAgdG8g
aXRlcmF0ZSBvdmVyIHRoZSBvYmplY3QncyBrZXlzLiAKVXNlIGBBcnJheS5w
cm90b3R5cGUucmVkdWNlKClgIHRvIGNyZWF0ZSBhIG5ldyBvYmplY3Qgd2l0
aCB0aGUgc2FtZSB2YWx1ZXMgYW5kIG1hcHBlZCBrZXlzIHVzaW5nIGBmbmAu
CgpgYGBqcwpjb25zdCBkZWVwTWFwS2V5cyA9IChvYmosIGYpID0+CiAgQXJy
YXkuaXNBcnJheShvYmopCiAgICA/IG9iai5tYXAodmFsID0+IGRlZXBNYXBL
ZXlzKHZhbCwgZikpCiAgICA6IHR5cGVvZiBvYmogPT09ICdvYmplY3QnCiAg
ICA/IE9iamVjdC5rZXlzKG9iaikucmVkdWNlKChhY2MsIGN1cnJlbnQpID0+
IHsKICAgICAgICBjb25zdCB2YWwgPSBvYmpbY3VycmVudF07CiAgICAgICAg
YWNjW2YoY3VycmVudCldID0KICAgICAgICAgIHZhbCAhPT0gbnVsbCAmJiB0
eXBlb2YgdmFsID09PSAnb2JqZWN0JyA/IGRlZXBNYXBLZXlzKHZhbCwgZikg
OiAoYWNjW2YoY3VycmVudCldID0gdmFsKTsKICAgICAgICByZXR1cm4gYWNj
OwogICAgICB9LCB7fSkKICAgIDogb2JqOwpgYGAKCjxkZXRhaWxzPgo8c3Vt
bWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmNvbnN0IG9iaiA9IHsK
ICBmb286ICcxJywKICBuZXN0ZWQ6IHsKICAgIGNoaWxkOiB7CiAgICAgIHdp
dGhBcnJheTogWwogICAgICAgIHsKICAgICAgICAgIGdyYW5kQ2hpbGQ6IFsn
aGVsbG8nXQogICAgICAgIH0KICAgICAgXQogICAgfQogIH0KfTsKY29uc3Qg
dXBwZXJLZXlzT2JqID0gZGVlcE1hcEtleXMob2JqLCBrZXkgPT4ga2V5LnRv
VXBwZXJDYXNlKCkpOwovKgp7CiAgIkZPTyI6IjEiLAogICJORVNURUQiOnsK
ICAgICJDSElMRCI6ewogICAgICAiV0lUSEFSUkFZIjpbCiAgICAgICAgewog
ICAgICAgICAgIkdSQU5EQ0hJTEQiOlsgJ2hlbGxvJyBdCiAgICAgICAgfQog
ICAgICBdCiAgICB9CiAgfQp9CiovCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+Ks
hiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGRlZmF1bHRzCgpBc3Np
Z25zIGRlZmF1bHQgdmFsdWVzIGZvciBhbGwgcHJvcGVydGllcyBpbiBhbiBv
YmplY3QgdGhhdCBhcmUgYHVuZGVmaW5lZGAuCgpVc2UgYE9iamVjdC5hc3Np
Z24oKWAgdG8gY3JlYXRlIGEgbmV3IGVtcHR5IG9iamVjdCBhbmQgY29weSB0
aGUgb3JpZ2luYWwgb25lIHRvIG1haW50YWluIGtleSBvcmRlciwgdXNlIGBB
cnJheS5wcm90b3R5cGUucmV2ZXJzZSgpYCBhbmQgdGhlIHNwcmVhZCBvcGVy
YXRvciBgLi4uYCB0byBjb21iaW5lIHRoZSBkZWZhdWx0IHZhbHVlcyBmcm9t
IGxlZnQgdG8gcmlnaHQsIGZpbmFsbHkgdXNlIGBvYmpgIGFnYWluIHRvIG92
ZXJ3cml0ZSBwcm9wZXJ0aWVzIHRoYXQgb3JpZ2luYWxseSBoYWQgYSB2YWx1
ZS4KCmBgYGpzCmNvbnN0IGRlZmF1bHRzID0gKG9iaiwgLi4uZGVmcykgPT4g
T2JqZWN0LmFzc2lnbih7fSwgb2JqLCAuLi5kZWZzLnJldmVyc2UoKSwgb2Jq
KTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+
CgpgYGBqcwpkZWZhdWx0cyh7IGE6IDEgfSwgeyBiOiAyIH0sIHsgYjogNiB9
LCB7IGE6IDMgfSk7IC8vIHsgYTogMSwgYjogMiB9CmBgYAo8L2RldGFpbHM+
Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGRpZwoK
UmV0dXJucyB0aGUgdGFyZ2V0IHZhbHVlIGluIGEgbmVzdGVkIEpTT04gb2Jq
ZWN0LCBiYXNlZCBvbiB0aGUgZ2l2ZW4ga2V5LgoKVXNlIHRoZSBgaW5gIG9w
ZXJhdG9yIHRvIGNoZWNrIGlmIGB0YXJnZXRgIGV4aXN0cyBpbiBgb2JqYC4K
SWYgZm91bmQsIHJldHVybiB0aGUgdmFsdWUgb2YgYG9ialt0YXJnZXRdYCwg
b3RoZXJ3aXNlIHVzZSBgT2JqZWN0LnZhbHVlcyhvYmopYCBhbmQgYEFycmF5
LnByb3RvdHlwZS5yZWR1Y2UoKWAgdG8gcmVjdXJzaXZlbHkgY2FsbCBgZGln
YCBvbiBlYWNoIG5lc3RlZCBvYmplY3QgdW50aWwgdGhlIGZpcnN0IG1hdGNo
aW5nIGtleS92YWx1ZSBwYWlyIGlzIGZvdW5kLgoKYGBganMKY29uc3QgZGln
ID0gKG9iaiwgdGFyZ2V0KSA9PgogIHRhcmdldCBpbiBvYmoKICAgID8gb2Jq
W3RhcmdldF0KICAgIDogT2JqZWN0LnZhbHVlcyhvYmopLnJlZHVjZSgoYWNj
LCB2YWwpID0+IHsKICAgICAgICBpZiAoYWNjICE9PSB1bmRlZmluZWQpIHJl
dHVybiBhY2M7CiAgICAgICAgaWYgKHR5cGVvZiB2YWwgPT09ICdvYmplY3Qn
KSByZXR1cm4gZGlnKHZhbCwgdGFyZ2V0KTsKICAgICAgfSwgdW5kZWZpbmVk
KTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+
CgpgYGBqcwpjb25zdCBkYXRhID0gewogIGxldmVsMTogewogICAgbGV2ZWwy
OiB7CiAgICAgIGxldmVsMzogJ3NvbWUgZGF0YScKICAgIH0KICB9Cn07CmRp
ZyhkYXRhLCAnbGV2ZWwzJyk7IC8vICdzb21lIGRhdGEnCmRpZyhkYXRhLCAn
bGV2ZWw0Jyk7IC8vIHVuZGVmaW5lZApgYGAKPC9kZXRhaWxzPgoKPGJyPlvi
rIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBlcXVhbHMgIVthZHZh
bmNlZF0oL2FkdmFuY2VkLnN2ZykKClBlcmZvcm1zIGEgZGVlcCBjb21wYXJp
c29uIGJldHdlZW4gdHdvIHZhbHVlcyB0byBkZXRlcm1pbmUgaWYgdGhleSBh
cmUgZXF1aXZhbGVudC4KCkNoZWNrIGlmIHRoZSB0d28gdmFsdWVzIGFyZSBp
ZGVudGljYWwsIGlmIHRoZXkgYXJlIGJvdGggYERhdGVgIG9iamVjdHMgd2l0
aCB0aGUgc2FtZSB0aW1lLCB1c2luZyBgRGF0ZS5nZXRUaW1lKClgIG9yIGlm
IHRoZXkgYXJlIGJvdGggbm9uLW9iamVjdCB2YWx1ZXMgd2l0aCBhbiBlcXVp
dmFsZW50IHZhbHVlIChzdHJpY3QgY29tcGFyaXNvbikuCkNoZWNrIGlmIG9u
bHkgb25lIHZhbHVlIGlzIGBudWxsYCBvciBgdW5kZWZpbmVkYCBvciBpZiB0
aGVpciBwcm90b3R5cGVzIGRpZmZlci4KSWYgbm9uZSBvZiB0aGUgYWJvdmUg
Y29uZGl0aW9ucyBhcmUgbWV0LCB1c2UgYE9iamVjdC5rZXlzKClgIHRvIGNo
ZWNrIGlmIGJvdGggdmFsdWVzIGhhdmUgdGhlIHNhbWUgbnVtYmVyIG9mIGtl
eXMsIHRoZW4gdXNlIGBBcnJheS5wcm90b3R5cGUuZXZlcnkoKWAgdG8gY2hl
Y2sgaWYgZXZlcnkga2V5IGluIHRoZSBmaXJzdCB2YWx1ZSBleGlzdHMgaW4g
dGhlIHNlY29uZCBvbmUgYW5kIGlmIHRoZXkgYXJlIGVxdWl2YWxlbnQgYnkg
Y2FsbGluZyB0aGlzIG1ldGhvZCByZWN1cnNpdmVseS4KCmBgYGpzCmNvbnN0
IGVxdWFscyA9IChhLCBiKSA9PiB7CiAgaWYgKGEgPT09IGIpIHJldHVybiB0
cnVlOwogIGlmIChhIGluc3RhbmNlb2YgRGF0ZSAmJiBiIGluc3RhbmNlb2Yg
RGF0ZSkgcmV0dXJuIGEuZ2V0VGltZSgpID09PSBiLmdldFRpbWUoKTsKICBp
ZiAoIWEgfHwgIWIgfHwgKHR5cGVvZiBhICE9PSAnb2JqZWN0JyAmJiB0eXBl
b2YgYiAhPT0gJ29iamVjdCcpKSByZXR1cm4gYSA9PT0gYjsKICBpZiAoYS5w
cm90b3R5cGUgIT09IGIucHJvdG90eXBlKSByZXR1cm4gZmFsc2U7CiAgbGV0
IGtleXMgPSBPYmplY3Qua2V5cyhhKTsKICBpZiAoa2V5cy5sZW5ndGggIT09
IE9iamVjdC5rZXlzKGIpLmxlbmd0aCkgcmV0dXJuIGZhbHNlOwogIHJldHVy
biBrZXlzLmV2ZXJ5KGsgPT4gZXF1YWxzKGFba10sIGJba10pKTsKfTsKYGBg
Cgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBq
cwplcXVhbHMoeyBhOiBbMiwgeyBlOiAzIH1dLCBiOiBbNF0sIGM6ICdmb28n
IH0sIHsgYTogWzIsIHsgZTogMyB9XSwgYjogWzRdLCBjOiAnZm9vJyB9KTsg
Ly8gdHJ1ZQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3Bd
KCNjb250ZW50cykKCiMjIyBmaW5kS2V5CgpSZXR1cm5zIHRoZSBmaXJzdCBr
ZXkgdGhhdCBzYXRpc2ZpZXMgdGhlIHByb3ZpZGVkIHRlc3RpbmcgZnVuY3Rp
b24uIE90aGVyd2lzZSBgdW5kZWZpbmVkYCBpcyByZXR1cm5lZC4KClVzZSBg
T2JqZWN0LmtleXMob2JqKWAgdG8gZ2V0IGFsbCB0aGUgcHJvcGVydGllcyBv
ZiB0aGUgb2JqZWN0LCBgQXJyYXkucHJvdG90eXBlLmZpbmQoKWAgdG8gdGVz
dCB0aGUgcHJvdmlkZWQgZnVuY3Rpb24gZm9yIGVhY2gga2V5LXZhbHVlIHBh
aXIuIFRoZSBjYWxsYmFjayByZWNlaXZlcyB0aHJlZSBhcmd1bWVudHMgLSB0
aGUgdmFsdWUsIHRoZSBrZXkgYW5kIHRoZSBvYmplY3QuCgpgYGBqcwpjb25z
dCBmaW5kS2V5ID0gKG9iaiwgZm4pID0+IE9iamVjdC5rZXlzKG9iaikuZmlu
ZChrZXkgPT4gZm4ob2JqW2tleV0sIGtleSwgb2JqKSk7CmBgYAoKPGRldGFp
bHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKZmluZEtl
eSgKICB7CiAgICBiYXJuZXk6IHsgYWdlOiAzNiwgYWN0aXZlOiB0cnVlIH0s
CiAgICBmcmVkOiB7IGFnZTogNDAsIGFjdGl2ZTogZmFsc2UgfSwKICAgIHBl
YmJsZXM6IHsgYWdlOiAxLCBhY3RpdmU6IHRydWUgfQogIH0sCiAgbyA9PiBv
WydhY3RpdmUnXQopOyAvLyAnYmFybmV5JwpgYGAKPC9kZXRhaWxzPgoKPGJy
PlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBmaW5kTGFzdEtl
eQoKUmV0dXJucyB0aGUgbGFzdCBrZXkgdGhhdCBzYXRpc2ZpZXMgdGhlIHBy
b3ZpZGVkIHRlc3RpbmcgZnVuY3Rpb24uCk90aGVyd2lzZSBgdW5kZWZpbmVk
YCBpcyByZXR1cm5lZC4KClVzZSBgT2JqZWN0LmtleXMob2JqKWAgdG8gZ2V0
IGFsbCB0aGUgcHJvcGVydGllcyBvZiB0aGUgb2JqZWN0LCBgQXJyYXkucHJv
dG90eXBlLnJldmVyc2UoKWAgdG8gcmV2ZXJzZSB0aGVpciBvcmRlciBhbmQg
YEFycmF5LnByb3RvdHlwZS5maW5kKClgIHRvIHRlc3QgdGhlIHByb3ZpZGVk
IGZ1bmN0aW9uIGZvciBlYWNoIGtleS12YWx1ZSBwYWlyLgpUaGUgY2FsbGJh
Y2sgcmVjZWl2ZXMgdGhyZWUgYXJndW1lbnRzIC0gdGhlIHZhbHVlLCB0aGUg
a2V5IGFuZCB0aGUgb2JqZWN0LgoKYGBganMKY29uc3QgZmluZExhc3RLZXkg
PSAob2JqLCBmbikgPT4KICBPYmplY3Qua2V5cyhvYmopCiAgICAucmV2ZXJz
ZSgpCiAgICAuZmluZChrZXkgPT4gZm4ob2JqW2tleV0sIGtleSwgb2JqKSk7
CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoK
YGBganMKZmluZExhc3RLZXkoCiAgewogICAgYmFybmV5OiB7IGFnZTogMzYs
IGFjdGl2ZTogdHJ1ZSB9LAogICAgZnJlZDogeyBhZ2U6IDQwLCBhY3RpdmU6
IGZhbHNlIH0sCiAgICBwZWJibGVzOiB7IGFnZTogMSwgYWN0aXZlOiB0cnVl
IH0KICB9LAogIG8gPT4gb1snYWN0aXZlJ10KKTsgLy8gJ3BlYmJsZXMnCmBg
YAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRz
KQoKIyMjIGZsYXR0ZW5PYmplY3QKCkZsYXR0ZW4gYW4gb2JqZWN0IHdpdGgg
dGhlIHBhdGhzIGZvciBrZXlzLgoKVXNlIHJlY3Vyc2lvbi4KVXNlIGBPYmpl
Y3Qua2V5cyhvYmopYCBjb21iaW5lZCB3aXRoIGBBcnJheS5wcm90b3R5cGUu
cmVkdWNlKClgIHRvIGNvbnZlcnQgZXZlcnkgbGVhZiBub2RlIHRvIGEgZmxh
dHRlbmVkIHBhdGggbm9kZS4KSWYgdGhlIHZhbHVlIG9mIGEga2V5IGlzIGFu
IG9iamVjdCwgdGhlIGZ1bmN0aW9uIGNhbGxzIGl0c2VsZiB3aXRoIHRoZSBh
cHByb3ByaWF0ZSBgcHJlZml4YCB0byBjcmVhdGUgdGhlIHBhdGggdXNpbmcg
YE9iamVjdC5hc3NpZ24oKWAuCk90aGVyd2lzZSwgaXQgYWRkcyB0aGUgYXBw
cm9wcmlhdGUgcHJlZml4ZWQga2V5LXZhbHVlIHBhaXIgdG8gdGhlIGFjY3Vt
dWxhdG9yIG9iamVjdC4KWW91IHNob3VsZCBhbHdheXMgb21pdCB0aGUgc2Vj
b25kIGFyZ3VtZW50LCBgcHJlZml4YCwgdW5sZXNzIHlvdSB3YW50IGV2ZXJ5
IGtleSB0byBoYXZlIGEgcHJlZml4LgoKYGBganMKY29uc3QgZmxhdHRlbk9i
amVjdCA9IChvYmosIHByZWZpeCA9ICcnKSA9PgogIE9iamVjdC5rZXlzKG9i
aikucmVkdWNlKChhY2MsIGspID0+IHsKICAgIGNvbnN0IHByZSA9IHByZWZp
eC5sZW5ndGggPyBwcmVmaXggKyAnLicgOiAnJzsKICAgIGlmICh0eXBlb2Yg
b2JqW2tdID09PSAnb2JqZWN0JykgT2JqZWN0LmFzc2lnbihhY2MsIGZsYXR0
ZW5PYmplY3Qob2JqW2tdLCBwcmUgKyBrKSk7CiAgICBlbHNlIGFjY1twcmUg
KyBrXSA9IG9ialtrXTsKICAgIHJldHVybiBhY2M7CiAgfSwge30pOwpgYGAK
CjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpz
CmZsYXR0ZW5PYmplY3QoeyBhOiB7IGI6IHsgYzogMSB9IH0sIGQ6IDEgfSk7
IC8vIHsgJ2EuYi5jJzogMSwgZDogMSB9CmBgYAo8L2RldGFpbHM+Cgo8YnI+
W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGZvck93bgoKSXRl
cmF0ZXMgb3ZlciBhbGwgb3duIHByb3BlcnRpZXMgb2YgYW4gb2JqZWN0LCBy
dW5uaW5nIGEgY2FsbGJhY2sgZm9yIGVhY2ggb25lLgoKVXNlIGBPYmplY3Qu
a2V5cyhvYmopYCB0byBnZXQgYWxsIHRoZSBwcm9wZXJ0aWVzIG9mIHRoZSBv
YmplY3QsIGBBcnJheS5wcm90b3R5cGUuZm9yRWFjaCgpYCB0byBydW4gdGhl
IHByb3ZpZGVkIGZ1bmN0aW9uIGZvciBlYWNoIGtleS12YWx1ZSBwYWlyLiBU
aGUgY2FsbGJhY2sgcmVjZWl2ZXMgdGhyZWUgYXJndW1lbnRzIC0gdGhlIHZh
bHVlLCB0aGUga2V5IGFuZCB0aGUgb2JqZWN0LgoKYGBganMKY29uc3QgZm9y
T3duID0gKG9iaiwgZm4pID0+IE9iamVjdC5rZXlzKG9iaikuZm9yRWFjaChr
ZXkgPT4gZm4ob2JqW2tleV0sIGtleSwgb2JqKSk7CmBgYAoKPGRldGFpbHM+
CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKZm9yT3duKHsg
Zm9vOiAnYmFyJywgYTogMSB9LCB2ID0+IGNvbnNvbGUubG9nKHYpKTsgLy8g
J2JhcicsIDEKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9w
XSgjY29udGVudHMpCgojIyMgZm9yT3duUmlnaHQKCkl0ZXJhdGVzIG92ZXIg
YWxsIG93biBwcm9wZXJ0aWVzIG9mIGFuIG9iamVjdCBpbiByZXZlcnNlLCBy
dW5uaW5nIGEgY2FsbGJhY2sgZm9yIGVhY2ggb25lLgoKVXNlIGBPYmplY3Qu
a2V5cyhvYmopYCB0byBnZXQgYWxsIHRoZSBwcm9wZXJ0aWVzIG9mIHRoZSBv
YmplY3QsIGBBcnJheS5wcm90b3R5cGUucmV2ZXJzZSgpYCB0byByZXZlcnNl
IHRoZWlyIG9yZGVyIGFuZCBgQXJyYXkucHJvdG90eXBlLmZvckVhY2goKWAg
dG8gcnVuIHRoZSBwcm92aWRlZCBmdW5jdGlvbiBmb3IgZWFjaCBrZXktdmFs
dWUgcGFpci4gVGhlIGNhbGxiYWNrIHJlY2VpdmVzIHRocmVlIGFyZ3VtZW50
cyAtIHRoZSB2YWx1ZSwgdGhlIGtleSBhbmQgdGhlIG9iamVjdC4KCmBgYGpz
CmNvbnN0IGZvck93blJpZ2h0ID0gKG9iaiwgZm4pID0+CiAgT2JqZWN0Lmtl
eXMob2JqKQogICAgLnJldmVyc2UoKQogICAgLmZvckVhY2goa2V5ID0+IGZu
KG9ialtrZXldLCBrZXksIG9iaikpOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFy
eT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmZvck93blJpZ2h0KHsgZm9v
OiAnYmFyJywgYTogMSB9LCB2ID0+IGNvbnNvbGUubG9nKHYpKTsgLy8gMSwg
J2JhcicKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgj
Y29udGVudHMpCgojIyMgZnVuY3Rpb25zCgpSZXR1cm5zIGFuIGFycmF5IG9m
IGZ1bmN0aW9uIHByb3BlcnR5IG5hbWVzIGZyb20gb3duIChhbmQgb3B0aW9u
YWxseSBpbmhlcml0ZWQpIGVudW1lcmFibGUgcHJvcGVydGllcyBvZiBhbiBv
YmplY3QuCgpVc2UgYE9iamVjdC5rZXlzKG9iailgIHRvIGl0ZXJhdGUgb3Zl
ciB0aGUgb2JqZWN0J3Mgb3duIHByb3BlcnRpZXMuCklmIGBpbmhlcml0ZWRg
IGlzIGB0cnVlYCwgdXNlIGBPYmplY3QuZ2V0LlByb3RvdHlwZU9mKG9iailg
IHRvIGFsc28gZ2V0IHRoZSBvYmplY3QncyBpbmhlcml0ZWQgcHJvcGVydGll
cy4KVXNlIGBBcnJheS5wcm90b3R5cGUuZmlsdGVyKClgIHRvIGtlZXAgb25s
eSB0aG9zZSBwcm9wZXJ0aWVzIHRoYXQgYXJlIGZ1bmN0aW9ucy4KT21pdCB0
aGUgc2Vjb25kIGFyZ3VtZW50LCBgaW5oZXJpdGVkYCwgdG8gbm90IGluY2x1
ZGUgaW5oZXJpdGVkIHByb3BlcnRpZXMgYnkgZGVmYXVsdC4KCmBgYGpzCmNv
bnN0IGZ1bmN0aW9ucyA9IChvYmosIGluaGVyaXRlZCA9IGZhbHNlKSA9Pgog
IChpbmhlcml0ZWQKICAgID8gWy4uLk9iamVjdC5rZXlzKG9iaiksIC4uLk9i
amVjdC5rZXlzKE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmopKV0KICAgIDog
T2JqZWN0LmtleXMob2JqKQogICkuZmlsdGVyKGtleSA9PiB0eXBlb2Ygb2Jq
W2tleV0gPT09ICdmdW5jdGlvbicpOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFy
eT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmZ1bmN0aW9uIEZvbygpIHsK
ICB0aGlzLmEgPSAoKSA9PiAxOwogIHRoaXMuYiA9ICgpID0+IDI7Cn0KRm9v
LnByb3RvdHlwZS5jID0gKCkgPT4gMzsKZnVuY3Rpb25zKG5ldyBGb28oKSk7
IC8vIFsnYScsICdiJ10KZnVuY3Rpb25zKG5ldyBGb28oKSwgdHJ1ZSk7IC8v
IFsnYScsICdiJywgJ2MnXQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFj
ayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBnZXQKClJldHJpZXZlIGEgc2V0
IG9mIHByb3BlcnRpZXMgaW5kaWNhdGVkIGJ5IHRoZSBnaXZlbiBzZWxlY3Rv
cnMgZnJvbSBhbiBvYmplY3QuCgpVc2UgYEFycmF5LnByb3RvdHlwZS5tYXAo
KWAgZm9yIGVhY2ggc2VsZWN0b3IsIGBTdHJpbmcucHJvdG90eXBlLnJlcGxh
Y2UoKWAgdG8gcmVwbGFjZSBzcXVhcmUgYnJhY2tldHMgd2l0aCBkb3RzLCBg
U3RyaW5nLnByb3RvdHlwZS5zcGxpdCgnLicpYCB0byBzcGxpdCBlYWNoIHNl
bGVjdG9yLCBgQXJyYXkucHJvdG90eXBlLmZpbHRlcigpYCB0byByZW1vdmUg
ZW1wdHkgdmFsdWVzIGFuZCBgQXJyYXkucHJvdG90eXBlLnJlZHVjZSgpYCB0
byBnZXQgdGhlIHZhbHVlIGluZGljYXRlZCBieSBpdC4KCmBgYGpzCmNvbnN0
IGdldCA9IChmcm9tLCAuLi5zZWxlY3RvcnMpID0+CiAgWy4uLnNlbGVjdG9y
c10ubWFwKHMgPT4KICAgIHMKICAgICAgLnJlcGxhY2UoL1xbKFteXFtcXV0q
KVxdL2csICcuJDEuJykKICAgICAgLnNwbGl0KCcuJykKICAgICAgLmZpbHRl
cih0ID0+IHQgIT09ICcnKQogICAgICAucmVkdWNlKChwcmV2LCBjdXIpID0+
IHByZXYgJiYgcHJldltjdXJdLCBmcm9tKQogICk7CmBgYAoKPGRldGFpbHM+
CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKY29uc3Qgb2Jq
ID0geyBzZWxlY3RvcjogeyB0bzogeyB2YWw6ICd2YWwgdG8gc2VsZWN0JyB9
IH0sIHRhcmdldDogWzEsIDIsIHsgYTogJ3Rlc3QnIH1dIH07CmdldChvYmos
ICdzZWxlY3Rvci50by52YWwnLCAndGFyZ2V0WzBdJywgJ3RhcmdldFsyXS5h
Jyk7IC8vIFsndmFsIHRvIHNlbGVjdCcsIDEsICd0ZXN0J10KYGBgCjwvZGV0
YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMg
aGFzS2V5CgpSZXR1cm5zIGB0cnVlYCBpZiB0aGUgdGFyZ2V0IHZhbHVlIGV4
aXN0cyBpbiBhIEpTT04gb2JqZWN0LCBgZmFsc2VgIG90aGVyd2lzZS4KCkNo
ZWNrIGlmIGBrZXlzYCBpcyBub24tZW1wdHkgYW5kIHVzZSBgQXJyYXkucHJv
dG90eXBlLmV2ZXJ5KClgIHRvIHNlcXVlbnRpYWxseSBjaGVjayBpdHMga2V5
cyB0byBpbnRlcm5hbCBkZXB0aCBvZiB0aGUgb2JqZWN0LCBgb2JqYC4gClVz
ZSBgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSgpYCB0byBjaGVj
ayBpZiBgb2JqYCBkb2VzIG5vdCBoYXZlIHRoZSBjdXJyZW50IGtleSBvciBp
cyBub3QgYW4gb2JqZWN0LCBzdG9wIHByb3BhZ2F0aW9uIGFuZCByZXR1cm4g
YGZhbHNlYC4KT3RoZXJ3aXNlIGFzc2lnbiB0aGUga2V5J3MgdmFsdWUgdG8g
YG9iamAgdG8gdXNlIG9uIHRoZSBuZXh0IGl0ZXJhdGlvbi4KUmV0dXJuIGBm
YWxzZWAgYmVmb3JlaGFuZCBpZiBnaXZlbiBrZXkgbGlzdCBpcyBlbXB0eS4K
CmBgYGpzCmNvbnN0IGhhc0tleSA9IChvYmosIGtleXMpID0+IHsKICByZXR1
cm4gKAogICAga2V5cy5sZW5ndGggPiAwICYmCiAgICBrZXlzLmV2ZXJ5KGtl
eSA9PiB7CiAgICAgIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0JyB8fCAh
b2JqLmhhc093blByb3BlcnR5KGtleSkpIHJldHVybiBmYWxzZTsKICAgICAg
b2JqID0gb2JqW2tleV07CiAgICAgIHJldHVybiB0cnVlOwogICAgfSkKICAp
Owp9OwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFy
eT4KCmBgYGpzCmxldCBvYmogPSB7CiAgYTogMSwKICBiOiB7IGM6IDQgfSwK
ICAnYi5kJzogNQp9OwpoYXNLZXkob2JqLCBbJ2EnXSk7IC8vIHRydWUKaGFz
S2V5KG9iaiwgWydiJ10pOyAvLyB0cnVlCmhhc0tleShvYmosIFsnYicsICdj
J10pOyAvLyB0cnVlCmhhc0tleShvYmosIFsnYi5kJ10pOyAvLyB0cnVlCmhh
c0tleShvYmosIFsnZCddKTsgLy8gZmFsc2UKaGFzS2V5KG9iaiwgWydjJ10p
OyAvLyBmYWxzZQpoYXNLZXkob2JqLCBbJ2InLCAnZiddKTsgLy8gZmFsc2UK
YGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVu
dHMpCgojIyMgaW52ZXJ0S2V5VmFsdWVzCgpJbnZlcnRzIHRoZSBrZXktdmFs
dWUgcGFpcnMgb2YgYW4gb2JqZWN0LCB3aXRob3V0IG11dGF0aW5nIGl0LiBU
aGUgY29ycmVzcG9uZGluZyBpbnZlcnRlZCB2YWx1ZSBvZiBlYWNoIGludmVy
dGVkIGtleSBpcyBhbiBhcnJheSBvZiBrZXlzIHJlc3BvbnNpYmxlIGZvciBn
ZW5lcmF0aW5nIHRoZSBpbnZlcnRlZCB2YWx1ZS4gSWYgYSBmdW5jdGlvbiBp
cyBzdXBwbGllZCwgaXQgaXMgYXBwbGllZCB0byBlYWNoIGludmVydGVkIGtl
eS4KClVzZSBgT2JqZWN0LmtleXMoKWAgYW5kIGBBcnJheS5wcm90b3R5cGUu
cmVkdWNlKClgIHRvIGludmVydCB0aGUga2V5LXZhbHVlIHBhaXJzIG9mIGFu
IG9iamVjdCBhbmQgYXBwbHkgdGhlIGZ1bmN0aW9uIHByb3ZpZGVkIChpZiBh
bnkpLgpPbWl0IHRoZSBzZWNvbmQgYXJndW1lbnQsIGBmbmAsIHRvIGdldCB0
aGUgaW52ZXJ0ZWQga2V5cyB3aXRob3V0IGFwcGx5aW5nIGEgZnVuY3Rpb24g
dG8gdGhlbS4KCmBgYGpzCmNvbnN0IGludmVydEtleVZhbHVlcyA9IChvYmos
IGZuKSA9PgogIE9iamVjdC5rZXlzKG9iaikucmVkdWNlKChhY2MsIGtleSkg
PT4gewogICAgY29uc3QgdmFsID0gZm4gPyBmbihvYmpba2V5XSkgOiBvYmpb
a2V5XTsKICAgIGFjY1t2YWxdID0gYWNjW3ZhbF0gfHwgW107CiAgICBhY2Nb
dmFsXS5wdXNoKGtleSk7CiAgICByZXR1cm4gYWNjOwogIH0sIHt9KTsKYGBg
Cgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBq
cwppbnZlcnRLZXlWYWx1ZXMoeyBhOiAxLCBiOiAyLCBjOiAxIH0pOyAvLyB7
IDE6IFsgJ2EnLCAnYycgXSwgMjogWyAnYicgXSB9CmludmVydEtleVZhbHVl
cyh7IGE6IDEsIGI6IDIsIGM6IDEgfSwgdmFsdWUgPT4gJ2dyb3VwJyArIHZh
bHVlKTsgLy8geyBncm91cDE6IFsgJ2EnLCAnYycgXSwgZ3JvdXAyOiBbICdi
JyBdIH0KYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgj
Y29udGVudHMpCgojIyMgbG93ZXJjYXNlS2V5cwoKQ3JlYXRlcyBhIG5ldyBv
YmplY3QgZnJvbSB0aGUgc3BlY2lmaWVkIG9iamVjdCwgd2hlcmUgYWxsIHRo
ZSBrZXlzIGFyZSBpbiBsb3dlcmNhc2UuCgpVc2UgYE9iamVjdC5rZXlzKClg
IGFuZCBgQXJyYXkucHJvdG90eXBlLnJlZHVjZSgpYCB0byBjcmVhdGUgYSBu
ZXcgb2JqZWN0IGZyb20gdGhlIHNwZWNpZmllZCBvYmplY3QuCkNvbnZlcnQg
ZWFjaCBrZXkgaW4gdGhlIG9yaWdpbmFsIG9iamVjdCB0byBsb3dlcmNhc2Us
IHVzaW5nIGBTdHJpbmcudG9Mb3dlckNhc2UoKWAuCgpgYGBqcwpjb25zdCBs
b3dlcmNhc2VLZXlzID0gb2JqID0+CiAgT2JqZWN0LmtleXMob2JqKS5yZWR1
Y2UoKGFjYywga2V5KSA9PiB7CiAgICBhY2Nba2V5LnRvTG93ZXJDYXNlKCld
ID0gb2JqW2tleV07CiAgICByZXR1cm4gYWNjOwogIH0sIHt9KTsKYGBgCgo8
ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpj
b25zdCBteU9iaiA9IHsgTmFtZTogJ0FkYW0nLCBzVXJuQU1FOiAnU21pdGgn
IH07CmNvbnN0IG15T2JqTG93ZXIgPSBsb3dlcmNhc2VLZXlzKG15T2JqKTsg
Ly8ge25hbWU6ICdBZGFtJywgc3VybmFtZTogJ1NtaXRoJ307CmBgYAo8L2Rl
dGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMj
IG1hcEtleXMKCkNyZWF0ZXMgYW4gb2JqZWN0IHdpdGgga2V5cyBnZW5lcmF0
ZWQgYnkgcnVubmluZyB0aGUgcHJvdmlkZWQgZnVuY3Rpb24gZm9yIGVhY2gg
a2V5IGFuZCB0aGUgc2FtZSB2YWx1ZXMgYXMgdGhlIHByb3ZpZGVkIG9iamVj
dC4KClVzZSBgT2JqZWN0LmtleXMob2JqKWAgdG8gaXRlcmF0ZSBvdmVyIHRo
ZSBvYmplY3QncyBrZXlzLgpVc2UgYEFycmF5LnByb3RvdHlwZS5yZWR1Y2Uo
KWAgdG8gY3JlYXRlIGEgbmV3IG9iamVjdCB3aXRoIHRoZSBzYW1lIHZhbHVl
cyBhbmQgbWFwcGVkIGtleXMgdXNpbmcgYGZuYC4KCmBgYGpzCmNvbnN0IG1h
cEtleXMgPSAob2JqLCBmbikgPT4KICBPYmplY3Qua2V5cyhvYmopLnJlZHVj
ZSgoYWNjLCBrKSA9PiB7CiAgICBhY2NbZm4ob2JqW2tdLCBrLCBvYmopXSA9
IG9ialtrXTsKICAgIHJldHVybiBhY2M7CiAgfSwge30pOwpgYGAKCjxkZXRh
aWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCm1hcEtl
eXMoeyBhOiAxLCBiOiAyIH0sICh2YWwsIGtleSkgPT4ga2V5ICsgdmFsKTsg
Ly8geyBhMTogMSwgYjI6IDIgfQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYg
QmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBtYXBWYWx1ZXMKCkNyZWF0
ZXMgYW4gb2JqZWN0IHdpdGggdGhlIHNhbWUga2V5cyBhcyB0aGUgcHJvdmlk
ZWQgb2JqZWN0IGFuZCB2YWx1ZXMgZ2VuZXJhdGVkIGJ5IHJ1bm5pbmcgdGhl
IHByb3ZpZGVkIGZ1bmN0aW9uIGZvciBlYWNoIHZhbHVlLgoKVXNlIGBPYmpl
Y3Qua2V5cyhvYmopYCB0byBpdGVyYXRlIG92ZXIgdGhlIG9iamVjdCdzIGtl
eXMuClVzZSBgQXJyYXkucHJvdG90eXBlLnJlZHVjZSgpYCB0byBjcmVhdGUg
YSBuZXcgb2JqZWN0IHdpdGggdGhlIHNhbWUga2V5cyBhbmQgbWFwcGVkIHZh
bHVlcyB1c2luZyBgZm5gLgoKYGBganMKY29uc3QgbWFwVmFsdWVzID0gKG9i
aiwgZm4pID0+CiAgT2JqZWN0LmtleXMob2JqKS5yZWR1Y2UoKGFjYywgaykg
PT4gewogICAgYWNjW2tdID0gZm4ob2JqW2tdLCBrLCBvYmopOwogICAgcmV0
dXJuIGFjYzsKICB9LCB7fSk7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4
YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKY29uc3QgdXNlcnMgPSB7CiAgZnJl
ZDogeyB1c2VyOiAnZnJlZCcsIGFnZTogNDAgfSwKICBwZWJibGVzOiB7IHVz
ZXI6ICdwZWJibGVzJywgYWdlOiAxIH0KfTsKbWFwVmFsdWVzKHVzZXJzLCB1
ID0+IHUuYWdlKTsgLy8geyBmcmVkOiA0MCwgcGViYmxlczogMSB9CmBgYAo8
L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoK
IyMjIG1hdGNoZXMKCkNvbXBhcmVzIHR3byBvYmplY3RzIHRvIGRldGVybWlu
ZSBpZiB0aGUgZmlyc3Qgb25lIGNvbnRhaW5zIGVxdWl2YWxlbnQgcHJvcGVy
dHkgdmFsdWVzIHRvIHRoZSBzZWNvbmQgb25lLgoKVXNlIGBPYmplY3Qua2V5
cyhzb3VyY2UpYCB0byBnZXQgYWxsIHRoZSBrZXlzIG9mIHRoZSBzZWNvbmQg
b2JqZWN0LCB0aGVuIGBBcnJheS5wcm90b3R5cGUuZXZlcnkoKWAsIGBPYmpl
Y3QuaGFzT3duUHJvcGVydHkoKWAgYW5kIHN0cmljdCBjb21wYXJpc29uIHRv
IGRldGVybWluZSBpZiBhbGwga2V5cyBleGlzdCBpbiB0aGUgZmlyc3Qgb2Jq
ZWN0IGFuZCBoYXZlIHRoZSBzYW1lIHZhbHVlcy4KCmBgYGpzCmNvbnN0IG1h
dGNoZXMgPSAob2JqLCBzb3VyY2UpID0+CiAgT2JqZWN0LmtleXMoc291cmNl
KS5ldmVyeShrZXkgPT4gb2JqLmhhc093blByb3BlcnR5KGtleSkgJiYgb2Jq
W2tleV0gPT09IHNvdXJjZVtrZXldKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1h
cnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwptYXRjaGVzKHsgYWdlOiAy
NSwgaGFpcjogJ2xvbmcnLCBiZWFyZDogdHJ1ZSB9LCB7IGhhaXI6ICdsb25n
JywgYmVhcmQ6IHRydWUgfSk7IC8vIHRydWUKbWF0Y2hlcyh7IGhhaXI6ICds
b25nJywgYmVhcmQ6IHRydWUgfSwgeyBhZ2U6IDI1LCBoYWlyOiAnbG9uZycs
IGJlYXJkOiB0cnVlIH0pOyAvLyBmYWxzZQpgYGAKPC9kZXRhaWxzPgoKPGJy
PlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBtYXRjaGVzV2l0
aAoKQ29tcGFyZXMgdHdvIG9iamVjdHMgdG8gZGV0ZXJtaW5lIGlmIHRoZSBm
aXJzdCBvbmUgY29udGFpbnMgZXF1aXZhbGVudCBwcm9wZXJ0eSB2YWx1ZXMg
dG8gdGhlIHNlY29uZCBvbmUsIGJhc2VkIG9uIGEgcHJvdmlkZWQgZnVuY3Rp
b24uCgpVc2UgYE9iamVjdC5rZXlzKHNvdXJjZSlgIHRvIGdldCBhbGwgdGhl
IGtleXMgb2YgdGhlIHNlY29uZCBvYmplY3QsIHRoZW4gYEFycmF5LnByb3Rv
dHlwZS5ldmVyeSgpYCwgYE9iamVjdC5oYXNPd25Qcm9wZXJ0eSgpYCBhbmQg
dGhlIHByb3ZpZGVkIGZ1bmN0aW9uIHRvIGRldGVybWluZSBpZiBhbGwga2V5
cyBleGlzdCBpbiB0aGUgZmlyc3Qgb2JqZWN0IGFuZCBoYXZlIGVxdWl2YWxl
bnQgdmFsdWVzLgpJZiBubyBmdW5jdGlvbiBpcyBwcm92aWRlZCwgdGhlIHZh
bHVlcyB3aWxsIGJlIGNvbXBhcmVkIHVzaW5nIHRoZSBlcXVhbGl0eSBvcGVy
YXRvci4KCmBgYGpzCmNvbnN0IG1hdGNoZXNXaXRoID0gKG9iaiwgc291cmNl
LCBmbikgPT4KICBPYmplY3Qua2V5cyhzb3VyY2UpLmV2ZXJ5KGtleSA9Pgog
ICAgb2JqLmhhc093blByb3BlcnR5KGtleSkgJiYgZm4KICAgICAgPyBmbihv
Ympba2V5XSwgc291cmNlW2tleV0sIGtleSwgb2JqLCBzb3VyY2UpCiAgICAg
IDogb2JqW2tleV0gPT0gc291cmNlW2tleV0KICApOwpgYGAKCjxkZXRhaWxz
Pgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmNvbnN0IGlz
R3JlZXRpbmcgPSB2YWwgPT4gL15oKD86aXxlbGxvKSQvLnRlc3QodmFsKTsK
bWF0Y2hlc1dpdGgoCiAgeyBncmVldGluZzogJ2hlbGxvJyB9LAogIHsgZ3Jl
ZXRpbmc6ICdoaScgfSwKICAob1YsIHNWKSA9PiBpc0dyZWV0aW5nKG9WKSAm
JiBpc0dyZWV0aW5nKHNWKQopOyAvLyB0cnVlCmBgYAo8L2RldGFpbHM+Cgo8
YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIG1lcmdlCgpD
cmVhdGVzIGEgbmV3IG9iamVjdCBmcm9tIHRoZSBjb21iaW5hdGlvbiBvZiB0
d28gb3IgbW9yZSBvYmplY3RzLgoKVXNlIGBBcnJheS5wcm90b3R5cGUucmVk
dWNlKClgIGNvbWJpbmVkIHdpdGggYE9iamVjdC5rZXlzKG9iailgIHRvIGl0
ZXJhdGUgb3ZlciBhbGwgb2JqZWN0cyBhbmQga2V5cy4KVXNlIGBoYXNPd25Q
cm9wZXJ0eSgpYCBhbmQgYEFycmF5LnByb3RvdHlwZS5jb25jYXQoKWAgdG8g
YXBwZW5kIHZhbHVlcyBmb3Iga2V5cyBleGlzdGluZyBpbiBtdWx0aXBsZSBv
YmplY3RzLgoKYGBganMKY29uc3QgbWVyZ2UgPSAoLi4ub2JqcykgPT4KICBb
Li4ub2Jqc10ucmVkdWNlKAogICAgKGFjYywgb2JqKSA9PgogICAgICBPYmpl
Y3Qua2V5cyhvYmopLnJlZHVjZSgoYSwgaykgPT4gewogICAgICAgIGFjY1tr
XSA9IGFjYy5oYXNPd25Qcm9wZXJ0eShrKSA/IFtdLmNvbmNhdChhY2Nba10p
LmNvbmNhdChvYmpba10pIDogb2JqW2tdOwogICAgICAgIHJldHVybiBhY2M7
CiAgICAgIH0sIHt9KSwKICAgIHt9CiAgKTsKYGBgCgo8ZGV0YWlscz4KPHN1
bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpjb25zdCBvYmplY3Qg
PSB7CiAgYTogW3sgeDogMiB9LCB7IHk6IDQgfV0sCiAgYjogMQp9Owpjb25z
dCBvdGhlciA9IHsKICBhOiB7IHo6IDMgfSwKICBiOiBbMiwgM10sCiAgYzog
J2ZvbycKfTsKbWVyZ2Uob2JqZWN0LCBvdGhlcik7IC8vIHsgYTogWyB7IHg6
IDIgfSwgeyB5OiA0IH0sIHsgejogMyB9IF0sIGI6IFsgMSwgMiwgMyBdLCBj
OiAnZm9vJyB9CmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRv
cF0oI2NvbnRlbnRzKQoKIyMjIG5lc3QKCkdpdmVuIGEgZmxhdCBhcnJheSBv
ZiBvYmplY3RzIGxpbmtlZCB0byBvbmUgYW5vdGhlciwgaXQgd2lsbCBuZXN0
IHRoZW0gcmVjdXJzaXZlbHkuClVzZWZ1bCBmb3IgbmVzdGluZyBjb21tZW50
cywgc3VjaCBhcyB0aGUgb25lcyBvbiByZWRkaXQuY29tLgoKVXNlIHJlY3Vy
c2lvbi4KVXNlIGBBcnJheS5wcm90b3R5cGUuZmlsdGVyKClgIHRvIGZpbHRl
ciB0aGUgaXRlbXMgd2hlcmUgdGhlIGBpZGAgbWF0Y2hlcyB0aGUgYGxpbmtg
LCB0aGVuIGBBcnJheS5wcm90b3R5cGUubWFwKClgIHRvIG1hcCBlYWNoIG9u
ZSB0byBhIG5ldyBvYmplY3QgdGhhdCBoYXMgYSBgY2hpbGRyZW5gIHByb3Bl
cnR5IHdoaWNoIHJlY3Vyc2l2ZWx5IG5lc3RzIHRoZSBpdGVtcyBiYXNlZCBv
biB3aGljaCBvbmVzIGFyZSBjaGlsZHJlbiBvZiB0aGUgY3VycmVudCBpdGVt
LgpPbWl0IHRoZSBzZWNvbmQgYXJndW1lbnQsIGBpZGAsIHRvIGRlZmF1bHQg
dG8gYG51bGxgIHdoaWNoIGluZGljYXRlcyB0aGUgb2JqZWN0IGlzIG5vdCBs
aW5rZWQgdG8gYW5vdGhlciBvbmUgKGkuZS4gaXQgaXMgYSB0b3AgbGV2ZWwg
b2JqZWN0KS4KT21pdCB0aGUgdGhpcmQgYXJndW1lbnQsIGBsaW5rYCwgdG8g
dXNlIGAncGFyZW50X2lkJ2AgYXMgdGhlIGRlZmF1bHQgcHJvcGVydHkgd2hp
Y2ggbGlua3MgdGhlIG9iamVjdCB0byBhbm90aGVyIG9uZSBieSBpdHMgYGlk
YC4KCmBgYGpzCmNvbnN0IG5lc3QgPSAoaXRlbXMsIGlkID0gbnVsbCwgbGlu
ayA9ICdwYXJlbnRfaWQnKSA9PgogIGl0ZW1zCiAgICAuZmlsdGVyKGl0ZW0g
PT4gaXRlbVtsaW5rXSA9PT0gaWQpCiAgICAubWFwKGl0ZW0gPT4gKHsgLi4u
aXRlbSwgY2hpbGRyZW46IG5lc3QoaXRlbXMsIGl0ZW0uaWQpIH0pKTsKYGBg
Cgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBq
cwovLyBPbmUgdG9wIGxldmVsIGNvbW1lbnQKY29uc3QgY29tbWVudHMgPSBb
CiAgeyBpZDogMSwgcGFyZW50X2lkOiBudWxsIH0sCiAgeyBpZDogMiwgcGFy
ZW50X2lkOiAxIH0sCiAgeyBpZDogMywgcGFyZW50X2lkOiAxIH0sCiAgeyBp
ZDogNCwgcGFyZW50X2lkOiAyIH0sCiAgeyBpZDogNSwgcGFyZW50X2lkOiA0
IH0KXTsKY29uc3QgbmVzdGVkQ29tbWVudHMgPSBuZXN0KGNvbW1lbnRzKTsg
Ly8gW3sgaWQ6IDEsIHBhcmVudF9pZDogbnVsbCwgY2hpbGRyZW46IFsuLi5d
IH1dCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2Nv
bnRlbnRzKQoKIyMjIG9iamVjdEZyb21QYWlycwoKQ3JlYXRlcyBhbiBvYmpl
Y3QgZnJvbSB0aGUgZ2l2ZW4ga2V5LXZhbHVlIHBhaXJzLgoKVXNlIGBBcnJh
eS5wcm90b3R5cGUucmVkdWNlKClgIHRvIGNyZWF0ZSBhbmQgY29tYmluZSBr
ZXktdmFsdWUgcGFpcnMuCgpgYGBqcwpjb25zdCBvYmplY3RGcm9tUGFpcnMg
PSBhcnIgPT4gYXJyLnJlZHVjZSgoYSwgW2tleSwgdmFsXSkgPT4gKChhW2tl
eV0gPSB2YWwpLCBhKSwge30pOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5F
eGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCm9iamVjdEZyb21QYWlycyhbWydh
JywgMV0sIFsnYicsIDJdXSk7IC8vIHthOiAxLCBiOiAyfQpgYGAKPC9kZXRh
aWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBv
YmplY3RUb1BhaXJzCgpDcmVhdGVzIGFuIGFycmF5IG9mIGtleS12YWx1ZSBw
YWlyIGFycmF5cyBmcm9tIGFuIG9iamVjdC4KClVzZSBgT2JqZWN0LmtleXMo
KWAgYW5kIGBBcnJheS5wcm90b3R5cGUubWFwKClgIHRvIGl0ZXJhdGUgb3Zl
ciB0aGUgb2JqZWN0J3Mga2V5cyBhbmQgcHJvZHVjZSBhbiBhcnJheSB3aXRo
IGtleS12YWx1ZSBwYWlycy4KCmBgYGpzCmNvbnN0IG9iamVjdFRvUGFpcnMg
PSBvYmogPT4gT2JqZWN0LmtleXMob2JqKS5tYXAoayA9PiBbaywgb2JqW2td
XSk7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5
PgoKYGBganMKb2JqZWN0VG9QYWlycyh7IGE6IDEsIGI6IDIgfSk7IC8vIFsg
WydhJywgMV0sIFsnYicsIDJdIF0KYGBgCjwvZGV0YWlscz4KCjxicj5b4qyG
IEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgb21pdAoKT21pdHMgdGhl
IGtleS12YWx1ZSBwYWlycyBjb3JyZXNwb25kaW5nIHRvIHRoZSBnaXZlbiBr
ZXlzIGZyb20gYW4gb2JqZWN0LgoKVXNlIGBPYmplY3Qua2V5cyhvYmopYCwg
YEFycmF5LnByb3RvdHlwZS5maWx0ZXIoKWAgYW5kIGBBcnJheS5wcm90b3R5
cGUuaW5jbHVkZXMoKWAgdG8gcmVtb3ZlIHRoZSBwcm92aWRlZCBrZXlzLgpV
c2UgYEFycmF5LnByb3RvdHlwZS5yZWR1Y2UoKWAgdG8gY29udmVydCB0aGUg
ZmlsdGVyZWQga2V5cyBiYWNrIHRvIGFuIG9iamVjdCB3aXRoIHRoZSBjb3Jy
ZXNwb25kaW5nIGtleS12YWx1ZSBwYWlycy4KCmBgYGpzCmNvbnN0IG9taXQg
PSAob2JqLCBhcnIpID0+CiAgT2JqZWN0LmtleXMob2JqKQogICAgLmZpbHRl
cihrID0+ICFhcnIuaW5jbHVkZXMoaykpCiAgICAucmVkdWNlKChhY2MsIGtl
eSkgPT4gKChhY2Nba2V5XSA9IG9ialtrZXldKSwgYWNjKSwge30pOwpgYGAK
CjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpz
Cm9taXQoeyBhOiAxLCBiOiAnMicsIGM6IDMgfSwgWydiJ10pOyAvLyB7ICdh
JzogMSwgJ2MnOiAzIH0KYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sg
dG8gdG9wXSgjY29udGVudHMpCgojIyMgb21pdEJ5CgpDcmVhdGVzIGFuIG9i
amVjdCBjb21wb3NlZCBvZiB0aGUgcHJvcGVydGllcyB0aGUgZ2l2ZW4gZnVu
Y3Rpb24gcmV0dXJucyBmYWxzeSBmb3IuIFRoZSBmdW5jdGlvbiBpcyBpbnZv
a2VkIHdpdGggdHdvIGFyZ3VtZW50czogKHZhbHVlLCBrZXkpLgoKVXNlIGBP
YmplY3Qua2V5cyhvYmopYCBhbmQgYEFycmF5LnByb3RvdHlwZS5maWx0ZXIo
KWB0byByZW1vdmUgdGhlIGtleXMgZm9yIHdoaWNoIGBmbmAgcmV0dXJucyBh
IHRydXRoeSB2YWx1ZS4KVXNlIGBBcnJheS5wcm90b3R5cGUucmVkdWNlKClg
IHRvIGNvbnZlcnQgdGhlIGZpbHRlcmVkIGtleXMgYmFjayB0byBhbiBvYmpl
Y3Qgd2l0aCB0aGUgY29ycmVzcG9uZGluZyBrZXktdmFsdWUgcGFpcnMuCgpg
YGBqcwpjb25zdCBvbWl0QnkgPSAob2JqLCBmbikgPT4KICBPYmplY3Qua2V5
cyhvYmopCiAgICAuZmlsdGVyKGsgPT4gIWZuKG9ialtrXSwgaykpCiAgICAu
cmVkdWNlKChhY2MsIGtleSkgPT4gKChhY2Nba2V5XSA9IG9ialtrZXldKSwg
YWNjKSwge30pOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwv
c3VtbWFyeT4KCmBgYGpzCm9taXRCeSh7IGE6IDEsIGI6ICcyJywgYzogMyB9
LCB4ID0+IHR5cGVvZiB4ID09PSAnbnVtYmVyJyk7IC8vIHsgYjogJzInIH0K
YGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVu
dHMpCgojIyMgb3JkZXJCeQoKUmV0dXJucyBhIHNvcnRlZCBhcnJheSBvZiBv
YmplY3RzIG9yZGVyZWQgYnkgcHJvcGVydGllcyBhbmQgb3JkZXJzLgoKVXNl
cyBgQXJyYXkucHJvdG90eXBlLnNvcnQoKWAsIGBBcnJheS5wcm90b3R5cGUu
cmVkdWNlKClgIG9uIHRoZSBgcHJvcHNgIGFycmF5IHdpdGggYSBkZWZhdWx0
IHZhbHVlIG9mIGAwYCwgdXNlIGFycmF5IGRlc3RydWN0dXJpbmcgdG8gc3dh
cCB0aGUgcHJvcGVydGllcyBwb3NpdGlvbiBkZXBlbmRpbmcgb24gdGhlIG9y
ZGVyIHBhc3NlZC4KSWYgbm8gYG9yZGVyc2AgYXJyYXkgaXMgcGFzc2VkIGl0
IHNvcnQgYnkgYCdhc2MnYCBieSBkZWZhdWx0LgoKYGBganMKY29uc3Qgb3Jk
ZXJCeSA9IChhcnIsIHByb3BzLCBvcmRlcnMpID0+CiAgWy4uLmFycl0uc29y
dCgoYSwgYikgPT4KICAgIHByb3BzLnJlZHVjZSgoYWNjLCBwcm9wLCBpKSA9
PiB7CiAgICAgIGlmIChhY2MgPT09IDApIHsKICAgICAgICBjb25zdCBbcDEs
IHAyXSA9IG9yZGVycyAmJiBvcmRlcnNbaV0gPT09ICdkZXNjJyA/IFtiW3By
b3BdLCBhW3Byb3BdXSA6IFthW3Byb3BdLCBiW3Byb3BdXTsKICAgICAgICBh
Y2MgPSBwMSA+IHAyID8gMSA6IHAxIDwgcDIgPyAtMSA6IDA7CiAgICAgIH0K
ICAgICAgcmV0dXJuIGFjYzsKICAgIH0sIDApCiAgKTsKYGBgCgo8ZGV0YWls
cz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpjb25zdCB1
c2VycyA9IFt7IG5hbWU6ICdmcmVkJywgYWdlOiA0OCB9LCB7IG5hbWU6ICdi
YXJuZXknLCBhZ2U6IDM2IH0sIHsgbmFtZTogJ2ZyZWQnLCBhZ2U6IDQwIH1d
OwpvcmRlckJ5KHVzZXJzLCBbJ25hbWUnLCAnYWdlJ10sIFsnYXNjJywgJ2Rl
c2MnXSk7IC8vIFt7bmFtZTogJ2Jhcm5leScsIGFnZTogMzZ9LCB7bmFtZTog
J2ZyZWQnLCBhZ2U6IDQ4fSwge25hbWU6ICdmcmVkJywgYWdlOiA0MH1dCm9y
ZGVyQnkodXNlcnMsIFsnbmFtZScsICdhZ2UnXSk7IC8vIFt7bmFtZTogJ2Jh
cm5leScsIGFnZTogMzZ9LCB7bmFtZTogJ2ZyZWQnLCBhZ2U6IDQwfSwge25h
bWU6ICdmcmVkJywgYWdlOiA0OH1dCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+Ks
hiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHBpY2sKClBpY2tzIHRo
ZSBrZXktdmFsdWUgcGFpcnMgY29ycmVzcG9uZGluZyB0byB0aGUgZ2l2ZW4g
a2V5cyBmcm9tIGFuIG9iamVjdC4KClVzZSBgQXJyYXkucHJvdG90eXBlLnJl
ZHVjZSgpYCB0byBjb252ZXJ0IHRoZSBmaWx0ZXJlZC9waWNrZWQga2V5cyBi
YWNrIHRvIGFuIG9iamVjdCB3aXRoIHRoZSBjb3JyZXNwb25kaW5nIGtleS12
YWx1ZSBwYWlycyBpZiB0aGUga2V5IGV4aXN0cyBpbiB0aGUgb2JqZWN0LgoK
YGBganMKY29uc3QgcGljayA9IChvYmosIGFycikgPT4KICBhcnIucmVkdWNl
KChhY2MsIGN1cnIpID0+IChjdXJyIGluIG9iaiAmJiAoYWNjW2N1cnJdID0g
b2JqW2N1cnJdKSwgYWNjKSwge30pOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFy
eT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCnBpY2soeyBhOiAxLCBiOiAn
MicsIGM6IDMgfSwgWydhJywgJ2MnXSk7IC8vIHsgJ2EnOiAxLCAnYyc6IDMg
fQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250
ZW50cykKCiMjIyBwaWNrQnkKCkNyZWF0ZXMgYW4gb2JqZWN0IGNvbXBvc2Vk
IG9mIHRoZSBwcm9wZXJ0aWVzIHRoZSBnaXZlbiBmdW5jdGlvbiByZXR1cm5z
IHRydXRoeSBmb3IuIFRoZSBmdW5jdGlvbiBpcyBpbnZva2VkIHdpdGggdHdv
IGFyZ3VtZW50czogKHZhbHVlLCBrZXkpLgoKVXNlIGBPYmplY3Qua2V5cyhv
YmopYCBhbmQgYEFycmF5LnByb3RvdHlwZS5maWx0ZXIoKWB0byByZW1vdmUg
dGhlIGtleXMgZm9yIHdoaWNoIGBmbmAgcmV0dXJucyBhIGZhbHN5IHZhbHVl
LgpVc2UgYEFycmF5LnByb3RvdHlwZS5yZWR1Y2UoKWAgdG8gY29udmVydCB0
aGUgZmlsdGVyZWQga2V5cyBiYWNrIHRvIGFuIG9iamVjdCB3aXRoIHRoZSBj
b3JyZXNwb25kaW5nIGtleS12YWx1ZSBwYWlycy4KCmBgYGpzCmNvbnN0IHBp
Y2tCeSA9IChvYmosIGZuKSA9PgogIE9iamVjdC5rZXlzKG9iaikKICAgIC5m
aWx0ZXIoayA9PiBmbihvYmpba10sIGspKQogICAgLnJlZHVjZSgoYWNjLCBr
ZXkpID0+ICgoYWNjW2tleV0gPSBvYmpba2V5XSksIGFjYyksIHt9KTsKYGBg
Cgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBq
cwpwaWNrQnkoeyBhOiAxLCBiOiAnMicsIGM6IDMgfSwgeCA9PiB0eXBlb2Yg
eCA9PT0gJ251bWJlcicpOyAvLyB7ICdhJzogMSwgJ2MnOiAzIH0KYGBgCjwv
ZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgoj
IyMgcmVuYW1lS2V5cwoKUmVwbGFjZXMgdGhlIG5hbWVzIG9mIG11bHRpcGxl
IG9iamVjdCBrZXlzIHdpdGggdGhlIHZhbHVlcyBwcm92aWRlZC4KClVzZSBg
T2JqZWN0LmtleXMoKWAgaW4gY29tYmluYXRpb24gd2l0aCBgQXJyYXkucHJv
dG90eXBlLnJlZHVjZSgpYCBhbmQgdGhlIHNwcmVhZCBvcGVyYXRvciAoYC4u
LmApIHRvIGdldCB0aGUgb2JqZWN0J3Mga2V5cyBhbmQgcmVuYW1lIHRoZW0g
YWNjb3JkaW5nIHRvIGBrZXlzTWFwYC4KCmBgYGpzCmNvbnN0IHJlbmFtZUtl
eXMgPSAoa2V5c01hcCwgb2JqKSA9PgogIE9iamVjdC5rZXlzKG9iaikucmVk
dWNlKAogICAgKGFjYywga2V5KSA9PiAoewogICAgICAuLi5hY2MsCiAgICAg
IC4uLnsgW2tleXNNYXBba2V5XSB8fCBrZXldOiBvYmpba2V5XSB9CiAgICB9
KSwKICAgIHt9CiAgKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBs
ZXM8L3N1bW1hcnk+CgpgYGBqcwpjb25zdCBvYmogPSB7IG5hbWU6ICdCb2Jv
Jywgam9iOiAnRnJvbnQtRW5kIE1hc3RlcicsIHNob2VTaXplOiAxMDAgfTsK
cmVuYW1lS2V5cyh7IG5hbWU6ICdmaXJzdE5hbWUnLCBqb2I6ICdwYXNzaW9u
JyB9LCBvYmopOyAvLyB7IGZpcnN0TmFtZTogJ0JvYm8nLCBwYXNzaW9uOiAn
RnJvbnQtRW5kIE1hc3RlcicsIHNob2VTaXplOiAxMDAgfQpgYGAKPC9kZXRh
aWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBz
aGFsbG93Q2xvbmUKCkNyZWF0ZXMgYSBzaGFsbG93IGNsb25lIG9mIGFuIG9i
amVjdC4KClVzZSBgT2JqZWN0LmFzc2lnbigpYCBhbmQgYW4gZW1wdHkgb2Jq
ZWN0IChge31gKSB0byBjcmVhdGUgYSBzaGFsbG93IGNsb25lIG9mIHRoZSBv
cmlnaW5hbC4KCmBgYGpzCmNvbnN0IHNoYWxsb3dDbG9uZSA9IG9iaiA9PiBP
YmplY3QuYXNzaWduKHt9LCBvYmopOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFy
eT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmNvbnN0IGEgPSB7IHg6IHRy
dWUsIHk6IDEgfTsKY29uc3QgYiA9IHNoYWxsb3dDbG9uZShhKTsgLy8gYSAh
PT0gYgpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNj
b250ZW50cykKCiMjIyBzaXplCgpHZXQgc2l6ZSBvZiBhcnJheXMsIG9iamVj
dHMgb3Igc3RyaW5ncy4KCkdldCB0eXBlIG9mIGB2YWxgIChgYXJyYXlgLCBg
b2JqZWN0YCBvciBgc3RyaW5nYCkuIApVc2UgYGxlbmd0aGAgcHJvcGVydHkg
Zm9yIGFycmF5cy4KVXNlIGBsZW5ndGhgIG9yIGBzaXplYCB2YWx1ZSBpZiBh
dmFpbGFibGUgb3IgbnVtYmVyIG9mIGtleXMgZm9yIG9iamVjdHMuClVzZSBg
c2l6ZWAgb2YgYSBbYEJsb2JgIG9iamVjdF0oaHR0cHM6Ly9kZXZlbG9wZXIu
bW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0Jsb2IpIGNyZWF0ZWQg
ZnJvbSBgdmFsYCBmb3Igc3RyaW5ncy4KU3BsaXQgc3RyaW5ncyBpbnRvIGFy
cmF5IG9mIGNoYXJhY3RlcnMgd2l0aCBgc3BsaXQoJycpYCBhbmQgcmV0dXJu
IGl0cyBsZW5ndGguCgpgYGBqcwpjb25zdCBzaXplID0gdmFsID0+CiAgQXJy
YXkuaXNBcnJheSh2YWwpCiAgICA/IHZhbC5sZW5ndGgKICAgIDogdmFsICYm
IHR5cGVvZiB2YWwgPT09ICdvYmplY3QnCiAgICA/IHZhbC5zaXplIHx8IHZh
bC5sZW5ndGggfHwgT2JqZWN0LmtleXModmFsKS5sZW5ndGgKICAgIDogdHlw
ZW9mIHZhbCA9PT0gJ3N0cmluZycKICAgID8gbmV3IEJsb2IoW3ZhbF0pLnNp
emUKICAgIDogMDsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8
L3N1bW1hcnk+CgpgYGBqcwpzaXplKFsxLCAyLCAzLCA0LCA1XSk7IC8vIDUK
c2l6ZSgnc2l6ZScpOyAvLyA0CnNpemUoeyBvbmU6IDEsIHR3bzogMiwgdGhy
ZWU6IDMgfSk7IC8vIDMKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sg
dG8gdG9wXSgjY29udGVudHMpCgojIyMgdHJhbnNmb3JtCgpBcHBsaWVzIGEg
ZnVuY3Rpb24gYWdhaW5zdCBhbiBhY2N1bXVsYXRvciBhbmQgZWFjaCBrZXkg
aW4gdGhlIG9iamVjdCAoZnJvbSBsZWZ0IHRvIHJpZ2h0KS4KClVzZSBgT2Jq
ZWN0LmtleXMob2JqKWAgdG8gaXRlcmF0ZSBvdmVyIGVhY2gga2V5IGluIHRo
ZSBvYmplY3QsIGBBcnJheS5wcm90b3R5cGUucmVkdWNlKClgIHRvIGNhbGwg
dGhlIGFwcGx5IHRoZSBzcGVjaWZpZWQgZnVuY3Rpb24gYWdhaW5zdCB0aGUg
Z2l2ZW4gYWNjdW11bGF0b3IuCgpgYGBqcwpjb25zdCB0cmFuc2Zvcm0gPSAo
b2JqLCBmbiwgYWNjKSA9PiBPYmplY3Qua2V5cyhvYmopLnJlZHVjZSgoYSwg
aykgPT4gZm4oYSwgb2JqW2tdLCBrLCBvYmopLCBhY2MpOwpgYGAKCjxkZXRh
aWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCnRyYW5z
Zm9ybSgKICB7IGE6IDEsIGI6IDIsIGM6IDEgfSwKICAociwgdiwgaykgPT4g
ewogICAgKHJbdl0gfHwgKHJbdl0gPSBbXSkpLnB1c2goayk7CiAgICByZXR1
cm4gcjsKICB9LAogIHt9Cik7IC8vIHsgJzEnOiBbJ2EnLCAnYyddLCAnMic6
IFsnYiddIH0KYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9w
XSgjY29udGVudHMpCgojIyMgdHJ1dGhDaGVja0NvbGxlY3Rpb24KCkNoZWNr
cyBpZiB0aGUgcHJlZGljYXRlIChzZWNvbmQgYXJndW1lbnQpIGlzIHRydXRo
eSBvbiBhbGwgZWxlbWVudHMgb2YgYSBjb2xsZWN0aW9uIChmaXJzdCBhcmd1
bWVudCkuCgpVc2UgYEFycmF5LnByb3RvdHlwZS5ldmVyeSgpYCB0byBjaGVj
ayBpZiBlYWNoIHBhc3NlZCBvYmplY3QgaGFzIHRoZSBzcGVjaWZpZWQgcHJv
cGVydHkgYW5kIGlmIGl0IHJldHVybnMgYSB0cnV0aHkgdmFsdWUuCgpgYGBq
cwpjb25zdCB0cnV0aENoZWNrQ29sbGVjdGlvbiA9IChjb2xsZWN0aW9uLCBw
cmUpID0+IGNvbGxlY3Rpb24uZXZlcnkob2JqID0+IG9ialtwcmVdKTsKYGBg
Cgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBq
cwp0cnV0aENoZWNrQ29sbGVjdGlvbihbeyB1c2VyOiAnVGlua3ktV2lua3kn
LCBzZXg6ICdtYWxlJyB9LCB7IHVzZXI6ICdEaXBzeScsIHNleDogJ21hbGUn
IH1dLCAnc2V4Jyk7IC8vIHRydWUKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyG
IEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgdW5mbGF0dGVuT2JqZWN0
ICFbYWR2YW5jZWRdKC9hZHZhbmNlZC5zdmcpCgpVbmZsYXR0ZW4gYW4gb2Jq
ZWN0IHdpdGggdGhlIHBhdGhzIGZvciBrZXlzLgoKVXNlIGBPYmplY3Qua2V5
cyhvYmopYCBjb21iaW5lZCB3aXRoIGBBcnJheS5wcm90b3R5cGUucmVkdWNl
KClgIHRvIGNvbnZlcnQgZmxhdHRlbmVkIHBhdGggbm9kZSB0byBhIGxlYWYg
bm9kZS4KSWYgdGhlIHZhbHVlIG9mIGEga2V5IGNvbnRhaW5zIGEgZG90IGRl
bGltaXRlciAoYC5gKSwgdXNlIGBBcnJheS5wcm90b3R5cGUuc3BsaXQoJy4n
KWAsIHN0cmluZyB0cmFuc2Zvcm1hdGlvbnMgYW5kIGBKU09OLnBhcnNlKClg
IHRvIGNyZWF0ZSBhbiBvYmplY3QsIHRoZW4gYE9iamVjdC5hc3NpZ24oKWAg
dG8gY3JlYXRlIHRoZSBsZWFmIG5vZGUuCk90aGVyd2lzZSwgYWRkIHRoZSBh
cHByb3ByaWF0ZSBrZXktdmFsdWUgcGFpciB0byB0aGUgYWNjdW11bGF0b3Ig
b2JqZWN0LgoKYGBganMKY29uc3QgdW5mbGF0dGVuT2JqZWN0ID0gb2JqID0+
CiAgT2JqZWN0LmtleXMob2JqKS5yZWR1Y2UoKGFjYywgaykgPT4gewogICAg
aWYgKGsuaW5kZXhPZignLicpICE9PSAtMSkgewogICAgICBjb25zdCBrZXlz
ID0gay5zcGxpdCgnLicpOwogICAgICBPYmplY3QuYXNzaWduKAogICAgICAg
IGFjYywKICAgICAgICBKU09OLnBhcnNlKAogICAgICAgICAgJ3snICsKICAg
ICAgICAgICAga2V5cy5tYXAoKHYsIGkpID0+IChpICE9PSBrZXlzLmxlbmd0
aCAtIDEgPyBgIiR7dn0iOntgIDogYCIke3Z9IjpgKSkuam9pbignJykgKwog
ICAgICAgICAgICBvYmpba10gKwogICAgICAgICAgICAnfScucmVwZWF0KGtl
eXMubGVuZ3RoKQogICAgICAgICkKICAgICAgKTsKICAgIH0gZWxzZSBhY2Nb
a10gPSBvYmpba107CiAgICByZXR1cm4gYWNjOwogIH0sIHt9KTsKYGBgCgo8
ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwp1
bmZsYXR0ZW5PYmplY3QoeyAnYS5iLmMnOiAxLCBkOiAxIH0pOyAvLyB7IGE6
IHsgYjogeyBjOiAxIH0gfSwgZDogMSB9CmBgYAo8L2RldGFpbHM+Cgo8YnI+
W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKLS0tCgojIyDwn5OcIFN0
cmluZwoKCiMjIyBieXRlU2l6ZQoKUmV0dXJucyB0aGUgbGVuZ3RoIG9mIGEg
c3RyaW5nIGluIGJ5dGVzLgoKQ29udmVydCBhIGdpdmVuIHN0cmluZyB0byBh
IFtgQmxvYmAgT2JqZWN0XShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9y
Zy9lbi1VUy9kb2NzL1dlYi9BUEkvQmxvYikgYW5kIGZpbmQgaXRzIGBzaXpl
YC4KCmBgYGpzCmNvbnN0IGJ5dGVTaXplID0gc3RyID0+IG5ldyBCbG9iKFtz
dHJdKS5zaXplOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwv
c3VtbWFyeT4KCmBgYGpzCmJ5dGVTaXplKCfwn5iAJyk7IC8vIDQKYnl0ZVNp
emUoJ0hlbGxvIFdvcmxkJyk7IC8vIDExCmBgYAo8L2RldGFpbHM+Cgo8YnI+
W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGNhcGl0YWxpemUK
CkNhcGl0YWxpemVzIHRoZSBmaXJzdCBsZXR0ZXIgb2YgYSBzdHJpbmcuCgpV
c2UgYXJyYXkgZGVzdHJ1Y3R1cmluZyBhbmQgYFN0cmluZy5wcm90b3R5cGUu
dG9VcHBlckNhc2UoKWAgdG8gY2FwaXRhbGl6ZSBmaXJzdCBsZXR0ZXIsIGAu
Li5yZXN0YCB0byBnZXQgYXJyYXkgb2YgY2hhcmFjdGVycyBhZnRlciBmaXJz
dCBsZXR0ZXIgYW5kIHRoZW4gYEFycmF5LnByb3RvdHlwZS5qb2luKCcnKWAg
dG8gbWFrZSBpdCBhIHN0cmluZyBhZ2Fpbi4KT21pdCB0aGUgYGxvd2VyUmVz
dGAgcGFyYW1ldGVyIHRvIGtlZXAgdGhlIHJlc3Qgb2YgdGhlIHN0cmluZyBp
bnRhY3QsIG9yIHNldCBpdCB0byBgdHJ1ZWAgdG8gY29udmVydCB0byBsb3dl
cmNhc2UuCgpgYGBqcwpjb25zdCBjYXBpdGFsaXplID0gKFtmaXJzdCwgLi4u
cmVzdF0sIGxvd2VyUmVzdCA9IGZhbHNlKSA9PgogIGZpcnN0LnRvVXBwZXJD
YXNlKCkgKyAobG93ZXJSZXN0ID8gcmVzdC5qb2luKCcnKS50b0xvd2VyQ2Fz
ZSgpIDogcmVzdC5qb2luKCcnKSk7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5
PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKY2FwaXRhbGl6ZSgnZm9vQmFy
Jyk7IC8vICdGb29CYXInCmNhcGl0YWxpemUoJ2Zvb0JhcicsIHRydWUpOyAv
LyAnRm9vYmFyJwpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0
b3BdKCNjb250ZW50cykKCiMjIyBjYXBpdGFsaXplRXZlcnlXb3JkCgpDYXBp
dGFsaXplcyB0aGUgZmlyc3QgbGV0dGVyIG9mIGV2ZXJ5IHdvcmQgaW4gYSBz
dHJpbmcuCgpVc2UgYFN0cmluZy5wcm90b3R5cGUucmVwbGFjZSgpYCB0byBt
YXRjaCB0aGUgZmlyc3QgY2hhcmFjdGVyIG9mIGVhY2ggd29yZCBhbmQgYFN0
cmluZy5wcm90b3R5cGUudG9VcHBlckNhc2UoKWAgdG8gY2FwaXRhbGl6ZSBp
dC4KCmBgYGpzCmNvbnN0IGNhcGl0YWxpemVFdmVyeVdvcmQgPSBzdHIgPT4g
c3RyLnJlcGxhY2UoL1xiW2Etel0vZywgY2hhciA9PiBjaGFyLnRvVXBwZXJD
YXNlKCkpOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3Vt
bWFyeT4KCmBgYGpzCmNhcGl0YWxpemVFdmVyeVdvcmQoJ2hlbGxvIHdvcmxk
IScpOyAvLyAnSGVsbG8gV29ybGQhJwpgYGAKPC9kZXRhaWxzPgoKPGJyPlvi
rIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBjb21wYWN0V2hpdGVz
cGFjZQoKUmV0dXJucyBhIHN0cmluZyB3aXRoIHdoaXRlc3BhY2VzIGNvbXBh
Y3RlZC4KClVzZSBgU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlKClgIHdpdGgg
YSByZWd1bGFyIGV4cHJlc3Npb24gdG8gcmVwbGFjZSBhbGwgb2NjdXJyZW5j
ZXMgb2YgMiBvciBtb3JlIHdoaXRlc3BhY2UgY2hhcmFjdGVycyB3aXRoIGEg
c2luZ2xlIHNwYWNlLgoKYGBganMKY29uc3QgY29tcGFjdFdoaXRlc3BhY2Ug
PSBzdHIgPT4gc3RyLnJlcGxhY2UoL1xzezIsfS9nLCAnICcpOwpgYGAKCjxk
ZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmNv
bXBhY3RXaGl0ZXNwYWNlKCdMb3JlbSAgICBJcHN1bScpOyAvLyAnTG9yZW0g
SXBzdW0nCmNvbXBhY3RXaGl0ZXNwYWNlKCdMb3JlbSBcbiBJcHN1bScpOyAv
LyAnTG9yZW0gSXBzdW0nCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNr
IHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIENTVlRvQXJyYXkKCkNvbnZlcnRz
IGEgY29tbWEtc2VwYXJhdGVkIHZhbHVlcyAoQ1NWKSBzdHJpbmcgdG8gYSAy
RCBhcnJheS4KClVzZSBgQXJyYXkucHJvdG90eXBlLnNsaWNlKClgIGFuZCBg
QXJyYXkucHJvdG90eXBlLmluZGV4T2YoJ1xuJylgIHRvIHJlbW92ZSB0aGUg
Zmlyc3Qgcm93ICh0aXRsZSByb3cpIGlmIGBvbWl0Rmlyc3RSb3dgIGlzIGB0
cnVlYC4KVXNlIGBTdHJpbmcucHJvdG90eXBlLnNwbGl0KCdcbicpYCB0byBj
cmVhdGUgYSBzdHJpbmcgZm9yIGVhY2ggcm93LCB0aGVuIGBTdHJpbmcucHJv
dG90eXBlLnNwbGl0KGRlbGltaXRlcilgIHRvIHNlcGFyYXRlIHRoZSB2YWx1
ZXMgaW4gZWFjaCByb3cuCk9taXQgdGhlIHNlY29uZCBhcmd1bWVudCwgYGRl
bGltaXRlcmAsIHRvIHVzZSBhIGRlZmF1bHQgZGVsaW1pdGVyIG9mIGAsYC4K
T21pdCB0aGUgdGhpcmQgYXJndW1lbnQsIGBvbWl0Rmlyc3RSb3dgLCB0byBp
bmNsdWRlIHRoZSBmaXJzdCByb3cgKHRpdGxlIHJvdykgb2YgdGhlIENTViBz
dHJpbmcuCgpgYGBqcwpjb25zdCBDU1ZUb0FycmF5ID0gKGRhdGEsIGRlbGlt
aXRlciA9ICcsJywgb21pdEZpcnN0Um93ID0gZmFsc2UpID0+CiAgZGF0YQog
ICAgLnNsaWNlKG9taXRGaXJzdFJvdyA/IGRhdGEuaW5kZXhPZignXG4nKSAr
IDEgOiAwKQogICAgLnNwbGl0KCdcbicpCiAgICAubWFwKHYgPT4gdi5zcGxp
dChkZWxpbWl0ZXIpKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBs
ZXM8L3N1bW1hcnk+CgpgYGBqcwpDU1ZUb0FycmF5KCdhLGJcbmMsZCcpOyAv
LyBbWydhJywnYiddLFsnYycsJ2QnXV07CkNTVlRvQXJyYXkoJ2E7YlxuYztk
JywgJzsnKTsgLy8gW1snYScsJ2InXSxbJ2MnLCdkJ11dOwpDU1ZUb0FycmF5
KCdjb2wxLGNvbDJcbmEsYlxuYyxkJywgJywnLCB0cnVlKTsgLy8gW1snYScs
J2InXSxbJ2MnLCdkJ11dOwpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFj
ayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBDU1ZUb0pTT04gIVthZHZhbmNl
ZF0oL2FkdmFuY2VkLnN2ZykKCkNvbnZlcnRzIGEgY29tbWEtc2VwYXJhdGVk
IHZhbHVlcyAoQ1NWKSBzdHJpbmcgdG8gYSAyRCBhcnJheSBvZiBvYmplY3Rz
LgpUaGUgZmlyc3Qgcm93IG9mIHRoZSBzdHJpbmcgaXMgdXNlZCBhcyB0aGUg
dGl0bGUgcm93LgoKVXNlIGBBcnJheS5wcm90b3R5cGUuc2xpY2UoKWAgYW5k
IGBBcnJheS5wcm90b3R5cGUuaW5kZXhPZignXG4nKWAgYW5kIGBTdHJpbmcu
cHJvdG90eXBlLnNwbGl0KGRlbGltaXRlcilgIHRvIHNlcGFyYXRlIHRoZSBm
aXJzdCByb3cgKHRpdGxlIHJvdykgaW50byB2YWx1ZXMuClVzZSBgU3RyaW5n
LnByb3RvdHlwZS5zcGxpdCgnXG4nKWAgdG8gY3JlYXRlIGEgc3RyaW5nIGZv
ciBlYWNoIHJvdywgdGhlbiBgQXJyYXkucHJvdG90eXBlLm1hcCgpYCBhbmQg
YFN0cmluZy5wcm90b3R5cGUuc3BsaXQoZGVsaW1pdGVyKWAgdG8gc2VwYXJh
dGUgdGhlIHZhbHVlcyBpbiBlYWNoIHJvdy4KVXNlIGBBcnJheS5wcm90b3R5
cGUucmVkdWNlKClgIHRvIGNyZWF0ZSBhbiBvYmplY3QgZm9yIGVhY2ggcm93
J3MgdmFsdWVzLCB3aXRoIHRoZSBrZXlzIHBhcnNlZCBmcm9tIHRoZSB0aXRs
ZSByb3cuCk9taXQgdGhlIHNlY29uZCBhcmd1bWVudCwgYGRlbGltaXRlcmAs
IHRvIHVzZSBhIGRlZmF1bHQgZGVsaW1pdGVyIG9mIGAsYC4KCmBgYGpzCmNv
bnN0IENTVlRvSlNPTiA9IChkYXRhLCBkZWxpbWl0ZXIgPSAnLCcpID0+IHsK
ICBjb25zdCB0aXRsZXMgPSBkYXRhLnNsaWNlKDAsIGRhdGEuaW5kZXhPZign
XG4nKSkuc3BsaXQoZGVsaW1pdGVyKTsKICByZXR1cm4gZGF0YQogICAgLnNs
aWNlKGRhdGEuaW5kZXhPZignXG4nKSArIDEpCiAgICAuc3BsaXQoJ1xuJykK
ICAgIC5tYXAodiA9PiB7CiAgICAgIGNvbnN0IHZhbHVlcyA9IHYuc3BsaXQo
ZGVsaW1pdGVyKTsKICAgICAgcmV0dXJuIHRpdGxlcy5yZWR1Y2UoKG9iaiwg
dGl0bGUsIGluZGV4KSA9PiAoKG9ialt0aXRsZV0gPSB2YWx1ZXNbaW5kZXhd
KSwgb2JqKSwge30pOwogICAgfSk7Cn07CmBgYAoKPGRldGFpbHM+CjxzdW1t
YXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKQ1NWVG9KU09OKCdjb2wx
LGNvbDJcbmEsYlxuYyxkJyk7IC8vIFt7J2NvbDEnOiAnYScsICdjb2wyJzog
J2InfSwgeydjb2wxJzogJ2MnLCAnY29sMic6ICdkJ31dOwpDU1ZUb0pTT04o
J2NvbDE7Y29sMlxuYTtiXG5jO2QnLCAnOycpOyAvLyBbeydjb2wxJzogJ2En
LCAnY29sMic6ICdiJ30sIHsnY29sMSc6ICdjJywgJ2NvbDInOiAnZCd9XTsK
YGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVu
dHMpCgojIyMgZGVjYXBpdGFsaXplCgpEZWNhcGl0YWxpemVzIHRoZSBmaXJz
dCBsZXR0ZXIgb2YgYSBzdHJpbmcuCgpVc2UgYXJyYXkgZGVzdHJ1Y3R1cmlu
ZyBhbmQgYFN0cmluZy50b0xvd2VyQ2FzZSgpYCB0byBkZWNhcGl0YWxpemUg
Zmlyc3QgbGV0dGVyLCBgLi4ucmVzdGAgdG8gZ2V0IGFycmF5IG9mIGNoYXJh
Y3RlcnMgYWZ0ZXIgZmlyc3QgbGV0dGVyIGFuZCB0aGVuIGBBcnJheS5wcm90
b3R5cGUuam9pbignJylgIHRvIG1ha2UgaXQgYSBzdHJpbmcgYWdhaW4uCk9t
aXQgdGhlIGB1cHBlclJlc3RgIHBhcmFtZXRlciB0byBrZWVwIHRoZSByZXN0
IG9mIHRoZSBzdHJpbmcgaW50YWN0LCBvciBzZXQgaXQgdG8gYHRydWVgIHRv
IGNvbnZlcnQgdG8gdXBwZXJjYXNlLgoKYGBganMKY29uc3QgZGVjYXBpdGFs
aXplID0gKFtmaXJzdCwgLi4ucmVzdF0sIHVwcGVyUmVzdCA9IGZhbHNlKSA9
PgogIGZpcnN0LnRvTG93ZXJDYXNlKCkgKyAodXBwZXJSZXN0ID8gcmVzdC5q
b2luKCcnKS50b1VwcGVyQ2FzZSgpIDogcmVzdC5qb2luKCcnKSk7CmBgYAoK
PGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMK
ZGVjYXBpdGFsaXplKCdGb29CYXInKTsgLy8gJ2Zvb0JhcicKZGVjYXBpdGFs
aXplKCdGb29CYXInLCB0cnVlKTsgLy8gJ2ZPT0JBUicKYGBgCjwvZGV0YWls
cz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgZXNj
YXBlSFRNTAoKRXNjYXBlcyBhIHN0cmluZyBmb3IgdXNlIGluIEhUTUwuCgpV
c2UgYFN0cmluZy5wcm90b3R5cGUucmVwbGFjZSgpYCB3aXRoIGEgcmVnZXhw
IHRoYXQgbWF0Y2hlcyB0aGUgY2hhcmFjdGVycyB0aGF0IG5lZWQgdG8gYmUg
ZXNjYXBlZCwgdXNpbmcgYSBjYWxsYmFjayBmdW5jdGlvbiB0byByZXBsYWNl
IGVhY2ggY2hhcmFjdGVyIGluc3RhbmNlIHdpdGggaXRzIGFzc29jaWF0ZWQg
ZXNjYXBlZCBjaGFyYWN0ZXIgdXNpbmcgYSBkaWN0aW9uYXJ5IChvYmplY3Qp
LgoKYGBganMKY29uc3QgZXNjYXBlSFRNTCA9IHN0ciA9PgogIHN0ci5yZXBs
YWNlKAogICAgL1smPD4nIl0vZywKICAgIHRhZyA9PgogICAgICAoewogICAg
ICAgICcmJzogJyZhbXA7JywKICAgICAgICAnPCc6ICcmbHQ7JywKICAgICAg
ICAnPic6ICcmZ3Q7JywKICAgICAgICAiJyI6ICcmIzM5OycsCiAgICAgICAg
JyInOiAnJnF1b3Q7JwogICAgICB9W3RhZ10gfHwgdGFnKQogICk7CmBgYAoK
PGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMK
ZXNjYXBlSFRNTCgnPGEgaHJlZj0iIyI+TWUgJiB5b3U8L2E+Jyk7IC8vICcm
bHQ7YSBocmVmPSZxdW90OyMmcXVvdDsmZ3Q7TWUgJmFtcDsgeW91Jmx0Oy9h
Jmd0OycKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgj
Y29udGVudHMpCgojIyMgZXNjYXBlUmVnRXhwCgpFc2NhcGVzIGEgc3RyaW5n
IHRvIHVzZSBpbiBhIHJlZ3VsYXIgZXhwcmVzc2lvbi4KClVzZSBgU3RyaW5n
LnByb3RvdHlwZS5yZXBsYWNlKClgIHRvIGVzY2FwZSBzcGVjaWFsIGNoYXJh
Y3RlcnMuCgpgYGBqcwpjb25zdCBlc2NhcGVSZWdFeHAgPSBzdHIgPT4gc3Ry
LnJlcGxhY2UoL1suKis/XiR7fSgpfFtcXVxcXS9nLCAnXFwkJicpOwpgYGAK
CjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpz
CmVzY2FwZVJlZ0V4cCgnKHRlc3QpJyk7IC8vIFxcKHRlc3RcXCkKYGBgCjwv
ZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgoj
IyMgZnJvbUNhbWVsQ2FzZQoKQ29udmVydHMgYSBzdHJpbmcgZnJvbSBjYW1l
bGNhc2UuCgpVc2UgYFN0cmluZy5wcm90b3R5cGUucmVwbGFjZSgpYCB0byBy
ZW1vdmUgdW5kZXJzY29yZXMsIGh5cGhlbnMsIGFuZCBzcGFjZXMgYW5kIGNv
bnZlcnQgd29yZHMgdG8gY2FtZWxjYXNlLgpPbWl0IHRoZSBzZWNvbmQgYXJn
dW1lbnQgdG8gdXNlIGEgZGVmYXVsdCBgc2VwYXJhdG9yYCBvZiBgX2AuCgpg
YGBqcwpjb25zdCBmcm9tQ2FtZWxDYXNlID0gKHN0ciwgc2VwYXJhdG9yID0g
J18nKSA9PgogIHN0cgogICAgLnJlcGxhY2UoLyhbYS16XGRdKShbQS1aXSkv
ZywgJyQxJyArIHNlcGFyYXRvciArICckMicpCiAgICAucmVwbGFjZSgvKFtB
LVpdKykoW0EtWl1bYS16XGRdKykvZywgJyQxJyArIHNlcGFyYXRvciArICck
MicpCiAgICAudG9Mb3dlckNhc2UoKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1h
cnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpmcm9tQ2FtZWxDYXNlKCdz
b21lRGF0YWJhc2VGaWVsZE5hbWUnLCAnICcpOyAvLyAnc29tZSBkYXRhYmFz
ZSBmaWVsZCBuYW1lJwpmcm9tQ2FtZWxDYXNlKCdzb21lTGFiZWxUaGF0TmVl
ZHNUb0JlQ2FtZWxpemVkJywgJy0nKTsgLy8gJ3NvbWUtbGFiZWwtdGhhdC1u
ZWVkcy10by1iZS1jYW1lbGl6ZWQnCmZyb21DYW1lbENhc2UoJ3NvbWVKYXZh
c2NyaXB0UHJvcGVydHknLCAnXycpOyAvLyAnc29tZV9qYXZhc2NyaXB0X3By
b3BlcnR5JwpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3Bd
KCNjb250ZW50cykKCiMjIyBpbmRlbnRTdHJpbmcKCkluZGVudHMgZWFjaCBs
aW5lIGluIHRoZSBwcm92aWRlZCBzdHJpbmcuCgpVc2UgYFN0cmluZy5yZXBs
YWNlYCBhbmQgYSByZWd1bGFyIGV4cHJlc3Npb24gdG8gYWRkIHRoZSBjaGFy
YWN0ZXIgc3BlY2lmaWVkIGJ5IGBpbmRlbnRgIGBjb3VudGAgdGltZXMgYXQg
dGhlIHN0YXJ0IG9mIGVhY2ggbGluZS4KT21pdCB0aGUgdGhpcmQgcGFyYW1l
dGVyLCBgaW5kZW50YCwgdG8gdXNlIGEgZGVmYXVsdCBpbmRlbnRhdGlvbiBj
aGFyYWN0ZXIgb2YgYCcgJ2AuCgpgYGBqcwpjb25zdCBpbmRlbnRTdHJpbmcg
PSAoc3RyLCBjb3VudCwgaW5kZW50ID0gJyAnKSA9PiBzdHIucmVwbGFjZSgv
Xi9nbSwgaW5kZW50LnJlcGVhdChjb3VudCkpOwpgYGAKCjxkZXRhaWxzPgo8
c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmluZGVudFN0cmlu
ZygnTG9yZW1cbklwc3VtJywgMik7IC8vICcgIExvcmVtXG4gIElwc3VtJwpp
bmRlbnRTdHJpbmcoJ0xvcmVtXG5JcHN1bScsIDIsICdfJyk7IC8vICdfX0xv
cmVtXG5fX0lwc3VtJwpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0
byB0b3BdKCNjb250ZW50cykKCiMjIyBpc0Fic29sdXRlVVJMCgpSZXR1cm5z
IGB0cnVlYCBpZiB0aGUgZ2l2ZW4gc3RyaW5nIGlzIGFuIGFic29sdXRlIFVS
TCwgYGZhbHNlYCBvdGhlcndpc2UuCgpVc2UgYSByZWd1bGFyIGV4cHJlc3Np
b24gdG8gdGVzdCBpZiB0aGUgc3RyaW5nIGlzIGFuIGFic29sdXRlIFVSTC4K
CmBgYGpzCmNvbnN0IGlzQWJzb2x1dGVVUkwgPSBzdHIgPT4gL15bYS16XVth
LXowLTkrLi1dKjovLnRlc3Qoc3RyKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1h
cnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwppc0Fic29sdXRlVVJMKCdo
dHRwczovL2dvb2dsZS5jb20nKTsgLy8gdHJ1ZQppc0Fic29sdXRlVVJMKCdm
dHA6Ly93d3cubXlzZXJ2ZXIubmV0Jyk7IC8vIHRydWUKaXNBYnNvbHV0ZVVS
TCgnL2Zvby9iYXInKTsgLy8gZmFsc2UKYGBgCjwvZGV0YWlscz4KCjxicj5b
4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgaXNBbmFncmFtCgpD
aGVja3MgaWYgYSBzdHJpbmcgaXMgYW4gYW5hZ3JhbSBvZiBhbm90aGVyIHN0
cmluZyAoY2FzZS1pbnNlbnNpdGl2ZSwgaWdub3JlcyBzcGFjZXMsIHB1bmN0
dWF0aW9uIGFuZCBzcGVjaWFsIGNoYXJhY3RlcnMpLgoKVXNlIGBTdHJpbmcu
dG9Mb3dlckNhc2UoKWAsIGBTdHJpbmcucHJvdG90eXBlLnJlcGxhY2UoKWAg
d2l0aCBhbiBhcHByb3ByaWF0ZSByZWd1bGFyIGV4cHJlc3Npb24gdG8gcmVt
b3ZlIHVubmVjZXNzYXJ5IGNoYXJhY3RlcnMsIGBTdHJpbmcucHJvdG90eXBl
LnNwbGl0KCcnKWAsIGBBcnJheS5wcm90b3R5cGUuc29ydCgpYCBhbmQgYEFy
cmF5LnByb3RvdHlwZS5qb2luKCcnKWAgb24gYm90aCBzdHJpbmdzIHRvIG5v
cm1hbGl6ZSB0aGVtLCB0aGVuIGNoZWNrIGlmIHRoZWlyIG5vcm1hbGl6ZWQg
Zm9ybXMgYXJlIGVxdWFsLgoKYGBganMKY29uc3QgaXNBbmFncmFtID0gKHN0
cjEsIHN0cjIpID0+IHsKICBjb25zdCBub3JtYWxpemUgPSBzdHIgPT4KICAg
IHN0cgogICAgICAudG9Mb3dlckNhc2UoKQogICAgICAucmVwbGFjZSgvW15h
LXowLTldL2dpLCAnJykKICAgICAgLnNwbGl0KCcnKQogICAgICAuc29ydCgp
CiAgICAgIC5qb2luKCcnKTsKICByZXR1cm4gbm9ybWFsaXplKHN0cjEpID09
PSBub3JtYWxpemUoc3RyMik7Cn07CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5
PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKaXNBbmFncmFtKCdpY2VtYW4n
LCAnY2luZW1hJyk7IC8vIHRydWUKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyG
IEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgaXNMb3dlckNhc2UKCkNo
ZWNrcyBpZiBhIHN0cmluZyBpcyBsb3dlciBjYXNlLgoKQ29udmVydCB0aGUg
Z2l2ZW4gc3RyaW5nIHRvIGxvd2VyIGNhc2UsIHVzaW5nIGBTdHJpbmcudG9M
b3dlckNhc2UoKWAgYW5kIGNvbXBhcmUgaXQgdG8gdGhlIG9yaWdpbmFsLgoK
YGBganMKY29uc3QgaXNMb3dlckNhc2UgPSBzdHIgPT4gc3RyID09PSBzdHIu
dG9Mb3dlckNhc2UoKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBs
ZXM8L3N1bW1hcnk+CgpgYGBqcwppc0xvd2VyQ2FzZSgnYWJjJyk7IC8vIHRy
dWUKaXNMb3dlckNhc2UoJ2EzQCQnKTsgLy8gdHJ1ZQppc0xvd2VyQ2FzZSgn
QWI0Jyk7IC8vIGZhbHNlCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNr
IHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGlzVXBwZXJDYXNlCgpDaGVja3Mg
aWYgYSBzdHJpbmcgaXMgdXBwZXIgY2FzZS4KCkNvbnZlcnQgdGhlIGdpdmVu
IHN0cmluZyB0byB1cHBlciBjYXNlLCB1c2luZyBgU3RyaW5nLnByb3RvdHlw
ZS50b1VwcGVyQ2FzZSgpYCBhbmQgY29tcGFyZSBpdCB0byB0aGUgb3JpZ2lu
YWwuCgpgYGBqcwpjb25zdCBpc1VwcGVyQ2FzZSA9IHN0ciA9PiBzdHIgPT09
IHN0ci50b1VwcGVyQ2FzZSgpOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5F
eGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmlzVXBwZXJDYXNlKCdBQkMnKTsg
Ly8gdHJ1ZQppc1VwcGVyQ2FzZSgnQTNAJCcpOyAvLyB0cnVlCmlzVXBwZXJD
YXNlKCdhQjQnKTsgLy8gZmFsc2UKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyG
IEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgbWFwU3RyaW5nCgpDcmVh
dGVzIGEgbmV3IHN0cmluZyB3aXRoIHRoZSByZXN1bHRzIG9mIGNhbGxpbmcg
YSBwcm92aWRlZCBmdW5jdGlvbiBvbiBldmVyeSBjaGFyYWN0ZXIgaW4gdGhl
IGNhbGxpbmcgc3RyaW5nLgoKVXNlIGBTdHJpbmcucHJvdG90eXBlLnNwbGl0
KCcnKWAgYW5kIGBBcnJheS5wcm90b3R5cGUubWFwKClgIHRvIGNhbGwgdGhl
IHByb3ZpZGVkIGZ1bmN0aW9uLCBgZm5gLCBmb3IgZWFjaCBjaGFyYWN0ZXIg
aW4gYHN0cmAuClVzZSBgQXJyYXkucHJvdG90eXBlLmpvaW4oJycpYCB0byBy
ZWNvbWJpbmUgdGhlIGFycmF5IG9mIGNoYXJhY3RlcnMgaW50byBhIHN0cmlu
Zy4KVGhlIGNhbGxiYWNrIGZ1bmN0aW9uLCBgZm5gLCB0YWtlcyB0aHJlZSBh
cmd1bWVudHMgKHRoZSBjdXJyZW50IGNoYXJhY3RlciwgdGhlIGluZGV4IG9m
IHRoZSBjdXJyZW50IGNoYXJhY3RlciBhbmQgdGhlIHN0cmluZyBgbWFwU3Ry
aW5nYCB3YXMgY2FsbGVkIHVwb24pLgoKYGBganMKY29uc3QgbWFwU3RyaW5n
ID0gKHN0ciwgZm4pID0+CiAgc3RyCiAgICAuc3BsaXQoJycpCiAgICAubWFw
KChjLCBpKSA9PiBmbihjLCBpLCBzdHIpKQogICAgLmpvaW4oJycpOwpgYGAK
CjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpz
Cm1hcFN0cmluZygnbG9yZW0gaXBzdW0nLCBjID0+IGMudG9VcHBlckNhc2Uo
KSk7IC8vICdMT1JFTSBJUFNVTScKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyG
IEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgbWFzawoKUmVwbGFjZXMg
YWxsIGJ1dCB0aGUgbGFzdCBgbnVtYCBvZiBjaGFyYWN0ZXJzIHdpdGggdGhl
IHNwZWNpZmllZCBtYXNrIGNoYXJhY3Rlci4KClVzZSBgU3RyaW5nLnByb3Rv
dHlwZS5zbGljZSgpYCB0byBncmFiIHRoZSBwb3J0aW9uIG9mIHRoZSBjaGFy
YWN0ZXJzIHRoYXQgd2lsbCByZW1haW4gdW5tYXNrZWQgYW5kIHVzZSBgU3Ry
aW5nLnBhZFN0YXJ0KClgIHRvIGZpbGwgdGhlIGJlZ2lubmluZyBvZiB0aGUg
c3RyaW5nIHdpdGggdGhlIG1hc2sgY2hhcmFjdGVyIHVwIHRvIHRoZSBvcmln
aW5hbCBsZW5ndGguCk9taXQgdGhlIHNlY29uZCBhcmd1bWVudCwgYG51bWAs
IHRvIGtlZXAgYSBkZWZhdWx0IG9mIGA0YCBjaGFyYWN0ZXJzIHVubWFza2Vk
LiBJZiBgbnVtYCBpcyBuZWdhdGl2ZSwgdGhlIHVubWFza2VkIGNoYXJhY3Rl
cnMgd2lsbCBiZSBhdCB0aGUgc3RhcnQgb2YgdGhlIHN0cmluZy4KT21pdCB0
aGUgdGhpcmQgYXJndW1lbnQsIGBtYXNrYCwgdG8gdXNlIGEgZGVmYXVsdCBj
aGFyYWN0ZXIgb2YgYCcqJ2AgZm9yIHRoZSBtYXNrLgoKYGBganMKY29uc3Qg
bWFzayA9IChjYywgbnVtID0gNCwgbWFzayA9ICcqJykgPT4gYCR7Y2N9YC5z
bGljZSgtbnVtKS5wYWRTdGFydChgJHtjY31gLmxlbmd0aCwgbWFzayk7CmBg
YAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBg
anMKbWFzaygxMjM0NTY3ODkwKTsgLy8gJyoqKioqKjc4OTAnCm1hc2soMTIz
NDU2Nzg5MCwgMyk7IC8vICcqKioqKioqODkwJwptYXNrKDEyMzQ1Njc4OTAs
IC00LCAnJCcpOyAvLyAnJCQkJDU2Nzg5MCcKYGBgCjwvZGV0YWlscz4KCjxi
cj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgcGFkCgpQYWRz
IGEgc3RyaW5nIG9uIGJvdGggc2lkZXMgd2l0aCB0aGUgc3BlY2lmaWVkIGNo
YXJhY3RlciwgaWYgaXQncyBzaG9ydGVyIHRoYW4gdGhlIHNwZWNpZmllZCBs
ZW5ndGguCgpVc2UgYFN0cmluZy5wYWRTdGFydCgpYCBhbmQgYFN0cmluZy5w
YWRFbmQoKWAgdG8gcGFkIGJvdGggc2lkZXMgb2YgdGhlIGdpdmVuIHN0cmlu
Zy4KT21pdCB0aGUgdGhpcmQgYXJndW1lbnQsIGBjaGFyYCwgdG8gdXNlIHRo
ZSB3aGl0ZXNwYWNlIGNoYXJhY3RlciBhcyB0aGUgZGVmYXVsdCBwYWRkaW5n
IGNoYXJhY3Rlci4KCmBgYGpzCmNvbnN0IHBhZCA9IChzdHIsIGxlbmd0aCwg
Y2hhciA9ICcgJykgPT4KICBzdHIucGFkU3RhcnQoKHN0ci5sZW5ndGggKyBs
ZW5ndGgpIC8gMiwgY2hhcikucGFkRW5kKGxlbmd0aCwgY2hhcik7CmBgYAoK
PGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMK
cGFkKCdjYXQnLCA4KTsgLy8gJyAgY2F0ICAgJwpwYWQoU3RyaW5nKDQyKSwg
NiwgJzAnKTsgLy8gJzAwNDIwMCcKcGFkKCdmb29iYXInLCAzKTsgLy8gJ2Zv
b2JhcicKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgj
Y29udGVudHMpCgojIyMgcGFsaW5kcm9tZQoKUmV0dXJucyBgdHJ1ZWAgaWYg
dGhlIGdpdmVuIHN0cmluZyBpcyBhIHBhbGluZHJvbWUsIGBmYWxzZWAgb3Ro
ZXJ3aXNlLgoKQ29udmVydCB0aGUgc3RyaW5nIHRvIGBTdHJpbmcucHJvdG90
eXBlLnRvTG93ZXJDYXNlKClgIGFuZCB1c2UgYFN0cmluZy5wcm90b3R5cGUu
cmVwbGFjZSgpYCB0byByZW1vdmUgbm9uLWFscGhhbnVtZXJpYyBjaGFyYWN0
ZXJzIGZyb20gaXQuClRoZW4sIHVzZSB0aGUgc3ByZWFkIG9wZXJhdG9yIChg
Li4uYCkgdG8gc3BsaXQgdGhlIHN0cmluZyBpbnRvIGluZGl2aWR1YWwgY2hh
cmFjdGVycywgYEFycmF5LnByb3RvdHlwZS5yZXZlcnNlKClgLCBgU3RyaW5n
LnByb3RvdHlwZS5qb2luKCcnKWAgYW5kIGNvbXBhcmUgaXQgdG8gdGhlIG9y
aWdpbmFsLCB1bnJldmVyc2VkIHN0cmluZywgYWZ0ZXIgY29udmVydGluZyBp
dCB0byBgU3RyaW5nLnByb3RvdHlwZS50b0xvd2VyQ2FzZSgpYC4KCmBgYGpz
CmNvbnN0IHBhbGluZHJvbWUgPSBzdHIgPT4gewogIGNvbnN0IHMgPSBzdHIu
dG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9bXFdfXS9nLCAnJyk7CiAgcmV0dXJu
IHMgPT09IFsuLi5zXS5yZXZlcnNlKCkuam9pbignJyk7Cn07CmBgYAoKPGRl
dGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKcGFs
aW5kcm9tZSgndGFjbyBjYXQnKTsgLy8gdHJ1ZQpgYGAKPC9kZXRhaWxzPgoK
PGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBwbHVyYWxp
emUKClJldHVybnMgdGhlIHNpbmd1bGFyIG9yIHBsdXJhbCBmb3JtIG9mIHRo
ZSB3b3JkIGJhc2VkIG9uIHRoZSBpbnB1dCBudW1iZXIuIElmIHRoZSBmaXJz
dCBhcmd1bWVudCBpcyBhbiBgb2JqZWN0YCwgaXQgd2lsbCB1c2UgYSBjbG9z
dXJlIGJ5IHJldHVybmluZyBhIGZ1bmN0aW9uIHRoYXQgY2FuIGF1dG8tcGx1
cmFsaXplIHdvcmRzIHRoYXQgZG9uJ3Qgc2ltcGx5IGVuZCBpbiBgc2AgaWYg
dGhlIHN1cHBsaWVkIGRpY3Rpb25hcnkgY29udGFpbnMgdGhlIHdvcmQuCgpJ
ZiBgbnVtYCBpcyBlaXRoZXIgYC0xYCBvciBgMWAsIHJldHVybiB0aGUgc2lu
Z3VsYXIgZm9ybSBvZiB0aGUgd29yZC4gSWYgYG51bWAgaXMgYW55IG90aGVy
IG51bWJlciwgcmV0dXJuIHRoZSBwbHVyYWwgZm9ybS4gT21pdCB0aGUgdGhp
cmQgYXJndW1lbnQgdG8gdXNlIHRoZSBkZWZhdWx0IG9mIHRoZSBzaW5ndWxh
ciB3b3JkICsgYHNgLCBvciBzdXBwbHkgYSBjdXN0b20gcGx1cmFsaXplZCB3
b3JkIHdoZW4gbmVjZXNzYXJ5LiBJZiB0aGUgZmlyc3QgYXJndW1lbnQgaXMg
YW4gYG9iamVjdGAsIHV0aWxpemUgYSBjbG9zdXJlIGJ5IHJldHVybmluZyBh
IGZ1bmN0aW9uIHdoaWNoIGNhbiB1c2UgdGhlIHN1cHBsaWVkIGRpY3Rpb25h
cnkgdG8gcmVzb2x2ZSB0aGUgY29ycmVjdCBwbHVyYWwgZm9ybSBvZiB0aGUg
d29yZC4KCmBgYGpzCmNvbnN0IHBsdXJhbGl6ZSA9ICh2YWwsIHdvcmQsIHBs
dXJhbCA9IHdvcmQgKyAncycpID0+IHsKICBjb25zdCBfcGx1cmFsaXplID0g
KG51bSwgd29yZCwgcGx1cmFsID0gd29yZCArICdzJykgPT4KICAgIFsxLCAt
MV0uaW5jbHVkZXMoTnVtYmVyKG51bSkpID8gd29yZCA6IHBsdXJhbDsKICBp
ZiAodHlwZW9mIHZhbCA9PT0gJ29iamVjdCcpIHJldHVybiAobnVtLCB3b3Jk
KSA9PiBfcGx1cmFsaXplKG51bSwgd29yZCwgdmFsW3dvcmRdKTsKICByZXR1
cm4gX3BsdXJhbGl6ZSh2YWwsIHdvcmQsIHBsdXJhbCk7Cn07CmBgYAoKPGRl
dGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKcGx1
cmFsaXplKDAsICdhcHBsZScpOyAvLyAnYXBwbGVzJwpwbHVyYWxpemUoMSwg
J2FwcGxlJyk7IC8vICdhcHBsZScKcGx1cmFsaXplKDIsICdhcHBsZScpOyAv
LyAnYXBwbGVzJwpwbHVyYWxpemUoMiwgJ3BlcnNvbicsICdwZW9wbGUnKTsg
Ly8gJ3Blb3BsZScKCmNvbnN0IFBMVVJBTFMgPSB7CiAgcGVyc29uOiAncGVv
cGxlJywKICByYWRpdXM6ICdyYWRpaScKfTsKY29uc3QgYXV0b1BsdXJhbGl6
ZSA9IHBsdXJhbGl6ZShQTFVSQUxTKTsKYXV0b1BsdXJhbGl6ZSgyLCAncGVy
c29uJyk7IC8vICdwZW9wbGUnCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBC
YWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHJlbW92ZU5vbkFTQ0lJCgpS
ZW1vdmVzIG5vbi1wcmludGFibGUgQVNDSUkgY2hhcmFjdGVycy4KClVzZSBh
IHJlZ3VsYXIgZXhwcmVzc2lvbiB0byByZW1vdmUgbm9uLXByaW50YWJsZSBB
U0NJSSBjaGFyYWN0ZXJzLgoKYGBganMKY29uc3QgcmVtb3ZlTm9uQVNDSUkg
PSBzdHIgPT4gc3RyLnJlcGxhY2UoL1teXHgyMC1ceDdFXS9nLCAnJyk7CmBg
YAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBg
anMKcmVtb3ZlTm9uQVNDSUkoJ8Okw4TDp8OHw6nDicOqbG9yZW0taXBzdW3D
tsOWw5DDvsO6w5onKTsgLy8gJ2xvcmVtLWlwc3VtJwpgYGAKPC9kZXRhaWxz
PgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyByZXZl
cnNlU3RyaW5nCgpSZXZlcnNlcyBhIHN0cmluZy4KClVzZSB0aGUgc3ByZWFk
IG9wZXJhdG9yIChgLi4uYCkgYW5kIGBBcnJheS5wcm90b3R5cGUucmV2ZXJz
ZSgpYCB0byByZXZlcnNlIHRoZSBvcmRlciBvZiB0aGUgY2hhcmFjdGVycyBp
biB0aGUgc3RyaW5nLgpDb21iaW5lIGNoYXJhY3RlcnMgdG8gZ2V0IGEgc3Ry
aW5nIHVzaW5nIGBTdHJpbmcucHJvdG90eXBlLmpvaW4oJycpYC4KCmBgYGpz
CmNvbnN0IHJldmVyc2VTdHJpbmcgPSBzdHIgPT4gWy4uLnN0cl0ucmV2ZXJz
ZSgpLmpvaW4oJycpOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxl
czwvc3VtbWFyeT4KCmBgYGpzCnJldmVyc2VTdHJpbmcoJ2Zvb2JhcicpOyAv
LyAncmFib29mJwpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0
b3BdKCNjb250ZW50cykKCiMjIyBzb3J0Q2hhcmFjdGVyc0luU3RyaW5nCgpB
bHBoYWJldGljYWxseSBzb3J0cyB0aGUgY2hhcmFjdGVycyBpbiBhIHN0cmlu
Zy4KClVzZSB0aGUgc3ByZWFkIG9wZXJhdG9yIChgLi4uYCksIGBBcnJheS5w
cm90b3R5cGUuc29ydCgpYCBhbmQgIGBTdHJpbmcubG9jYWxlQ29tcGFyZSgp
YCB0byBzb3J0IHRoZSBjaGFyYWN0ZXJzIGluIGBzdHJgLCByZWNvbWJpbmUg
dXNpbmcgYFN0cmluZy5wcm90b3R5cGUuam9pbignJylgLgoKYGBganMKY29u
c3Qgc29ydENoYXJhY3RlcnNJblN0cmluZyA9IHN0ciA9PiBbLi4uc3RyXS5z
b3J0KChhLCBiKSA9PiBhLmxvY2FsZUNvbXBhcmUoYikpLmpvaW4oJycpOwpg
YGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBg
YGpzCnNvcnRDaGFyYWN0ZXJzSW5TdHJpbmcoJ2NhYmJhZ2UnKTsgLy8gJ2Fh
YmJjZWcnCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0o
I2NvbnRlbnRzKQoKIyMjIHNwbGl0TGluZXMKClNwbGl0cyBhIG11bHRpbGlu
ZSBzdHJpbmcgaW50byBhbiBhcnJheSBvZiBsaW5lcy4KClVzZSBgU3RyaW5n
LnByb3RvdHlwZS5zcGxpdCgpYCBhbmQgYSByZWd1bGFyIGV4cHJlc3Npb24g
dG8gbWF0Y2ggbGluZSBicmVha3MgYW5kIGNyZWF0ZSBhbiBhcnJheS4KCmBg
YGpzCmNvbnN0IHNwbGl0TGluZXMgPSBzdHIgPT4gc3RyLnNwbGl0KC9ccj9c
bi8pOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFy
eT4KCmBgYGpzCnNwbGl0TGluZXMoJ1RoaXNcbmlzIGFcbm11bHRpbGluZVxu
c3RyaW5nLlxuJyk7IC8vIFsnVGhpcycsICdpcyBhJywgJ211bHRpbGluZScs
ICdzdHJpbmcuJyAsICcnXQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFj
ayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBzdHJpbmdQZXJtdXRhdGlvbnMg
IVthZHZhbmNlZF0oL2FkdmFuY2VkLnN2ZykKCkdlbmVyYXRlcyBhbGwgcGVy
bXV0YXRpb25zIG9mIGEgc3RyaW5nIChjb250YWlucyBkdXBsaWNhdGVzKS4K
CuKaoO+4jyAqKldBUk5JTkcqKjogVGhpcyBmdW5jdGlvbidzIGV4ZWN1dGlv
biB0aW1lIGluY3JlYXNlcyBleHBvbmVudGlhbGx5IHdpdGggZWFjaCBjaGFy
YWN0ZXIuIEFueXRoaW5nIG1vcmUgdGhhbiA4IHRvIDEwIGNoYXJhY3RlcnMg
d2lsbCBjYXVzZSB5b3VyIGJyb3dzZXIgdG8gaGFuZyBhcyBpdCB0cmllcyB0
byBzb2x2ZSBhbGwgdGhlIGRpZmZlcmVudCBjb21iaW5hdGlvbnMuCgpVc2Ug
cmVjdXJzaW9uLgpGb3IgZWFjaCBsZXR0ZXIgaW4gdGhlIGdpdmVuIHN0cmlu
ZywgY3JlYXRlIGFsbCB0aGUgcGFydGlhbCBwZXJtdXRhdGlvbnMgZm9yIHRo
ZSByZXN0IG9mIGl0cyBsZXR0ZXJzLgpVc2UgYEFycmF5LnByb3RvdHlwZS5t
YXAoKWAgdG8gY29tYmluZSB0aGUgbGV0dGVyIHdpdGggZWFjaCBwYXJ0aWFs
IHBlcm11dGF0aW9uLCB0aGVuIGBBcnJheS5wcm90b3R5cGUucmVkdWNlKClg
IHRvIGNvbWJpbmUgYWxsIHBlcm11dGF0aW9ucyBpbiBvbmUgYXJyYXkuCkJh
c2UgY2FzZXMgYXJlIGZvciBzdHJpbmcgYGxlbmd0aGAgZXF1YWwgdG8gYDJg
IG9yIGAxYC4KCmBgYGpzCmNvbnN0IHN0cmluZ1Blcm11dGF0aW9ucyA9IHN0
ciA9PiB7CiAgaWYgKHN0ci5sZW5ndGggPD0gMikgcmV0dXJuIHN0ci5sZW5n
dGggPT09IDIgPyBbc3RyLCBzdHJbMV0gKyBzdHJbMF1dIDogW3N0cl07CiAg
cmV0dXJuIHN0cgogICAgLnNwbGl0KCcnKQogICAgLnJlZHVjZSgKICAgICAg
KGFjYywgbGV0dGVyLCBpKSA9PgogICAgICAgIGFjYy5jb25jYXQoc3RyaW5n
UGVybXV0YXRpb25zKHN0ci5zbGljZSgwLCBpKSArIHN0ci5zbGljZShpICsg
MSkpLm1hcCh2YWwgPT4gbGV0dGVyICsgdmFsKSksCiAgICAgIFtdCiAgICAp
Owp9OwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFy
eT4KCmBgYGpzCnN0cmluZ1Blcm11dGF0aW9ucygnYWJjJyk7IC8vIFsnYWJj
JywnYWNiJywnYmFjJywnYmNhJywnY2FiJywnY2JhJ10KYGBgCjwvZGV0YWls
cz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgc3Ry
aXBIVE1MVGFncwoKUmVtb3ZlcyBIVE1ML1hNTCB0YWdzIGZyb20gc3RyaW5n
LgoKVXNlIGEgcmVndWxhciBleHByZXNzaW9uIHRvIHJlbW92ZSBIVE1ML1hN
TCB0YWdzIGZyb20gYSBzdHJpbmcuCgpgYGBqcwpjb25zdCBzdHJpcEhUTUxU
YWdzID0gc3RyID0+IHN0ci5yZXBsYWNlKC88W14+XSo+L2csICcnKTsKYGBg
Cgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBq
cwpzdHJpcEhUTUxUYWdzKCc8cD48ZW0+bG9yZW08L2VtPiA8c3Ryb25nPmlw
c3VtPC9zdHJvbmc+PC9wPicpOyAvLyAnbG9yZW0gaXBzdW0nCmBgYAo8L2Rl
dGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMj
IHRvQ2FtZWxDYXNlCgpDb252ZXJ0cyBhIHN0cmluZyB0byBjYW1lbGNhc2Uu
CgpCcmVhayB0aGUgc3RyaW5nIGludG8gd29yZHMgYW5kIGNvbWJpbmUgdGhl
bSBjYXBpdGFsaXppbmcgdGhlIGZpcnN0IGxldHRlciBvZiBlYWNoIHdvcmQs
IHVzaW5nIGEgcmVnZXhwLgoKYGBganMKY29uc3QgdG9DYW1lbENhc2UgPSBz
dHIgPT4gewogIGxldCBzID0KICAgIHN0ciAmJgogICAgc3RyCiAgICAgIC5t
YXRjaCgvW0EtWl17Mix9KD89W0EtWl1bYS16XStbMC05XSp8XGIpfFtBLVpd
P1thLXpdK1swLTldKnxbQS1aXXxbMC05XSsvZykKICAgICAgLm1hcCh4ID0+
IHguc2xpY2UoMCwgMSkudG9VcHBlckNhc2UoKSArIHguc2xpY2UoMSkudG9M
b3dlckNhc2UoKSkKICAgICAgLmpvaW4oJycpOwogIHJldHVybiBzLnNsaWNl
KDAsIDEpLnRvTG93ZXJDYXNlKCkgKyBzLnNsaWNlKDEpOwp9OwpgYGAKCjxk
ZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCnRv
Q2FtZWxDYXNlKCdzb21lX2RhdGFiYXNlX2ZpZWxkX25hbWUnKTsgLy8gJ3Nv
bWVEYXRhYmFzZUZpZWxkTmFtZScKdG9DYW1lbENhc2UoJ1NvbWUgbGFiZWwg
dGhhdCBuZWVkcyB0byBiZSBjYW1lbGl6ZWQnKTsgLy8gJ3NvbWVMYWJlbFRo
YXROZWVkc1RvQmVDYW1lbGl6ZWQnCnRvQ2FtZWxDYXNlKCdzb21lLWphdmFz
Y3JpcHQtcHJvcGVydHknKTsgLy8gJ3NvbWVKYXZhc2NyaXB0UHJvcGVydHkn
CnRvQ2FtZWxDYXNlKCdzb21lLW1peGVkX3N0cmluZyB3aXRoIHNwYWNlc191
bmRlcnNjb3Jlcy1hbmQtaHlwaGVucycpOyAvLyAnc29tZU1peGVkU3RyaW5n
V2l0aFNwYWNlc1VuZGVyc2NvcmVzQW5kSHlwaGVucycKYGBgCjwvZGV0YWls
cz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgdG9L
ZWJhYkNhc2UKCkNvbnZlcnRzIGEgc3RyaW5nIHRvIGtlYmFiIGNhc2UuCgpC
cmVhayB0aGUgc3RyaW5nIGludG8gd29yZHMgYW5kIGNvbWJpbmUgdGhlbSBh
ZGRpbmcgYC1gIGFzIGEgc2VwYXJhdG9yLCB1c2luZyBhIHJlZ2V4cC4KCmBg
YGpzCmNvbnN0IHRvS2ViYWJDYXNlID0gc3RyID0+CiAgc3RyICYmCiAgc3Ry
CiAgICAubWF0Y2goL1tBLVpdezIsfSg/PVtBLVpdW2Etel0rWzAtOV0qfFxi
KXxbQS1aXT9bYS16XStbMC05XSp8W0EtWl18WzAtOV0rL2cpCiAgICAubWFw
KHggPT4geC50b0xvd2VyQ2FzZSgpKQogICAgLmpvaW4oJy0nKTsKYGBgCgo8
ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwp0
b0tlYmFiQ2FzZSgnY2FtZWxDYXNlJyk7IC8vICdjYW1lbC1jYXNlJwp0b0tl
YmFiQ2FzZSgnc29tZSB0ZXh0Jyk7IC8vICdzb21lLXRleHQnCnRvS2ViYWJD
YXNlKCdzb21lLW1peGVkX3N0cmluZyBXaXRoIHNwYWNlc191bmRlcnNjb3Jl
cy1hbmQtaHlwaGVucycpOyAvLyAnc29tZS1taXhlZC1zdHJpbmctd2l0aC1z
cGFjZXMtdW5kZXJzY29yZXMtYW5kLWh5cGhlbnMnCnRvS2ViYWJDYXNlKCdB
bGxUaGUtc21hbGwgVGhpbmdzJyk7IC8vICJhbGwtdGhlLXNtYWxsLXRoaW5n
cyIKdG9LZWJhYkNhc2UoJ0lBbUxpc3RlbmluZ1RvRk1XaGlsZUxvYWRpbmdE
aWZmZXJlbnRVUkxPbk15QnJvd3NlckFuZEFsc29FZGl0aW5nU29tZVhNTEFu
ZEhUTUwnKTsgLy8gImktYW0tbGlzdGVuaW5nLXRvLWZtLXdoaWxlLWxvYWRp
bmctZGlmZmVyZW50LXVybC1vbi1teS1icm93c2VyLWFuZC1hbHNvLWVkaXRp
bmcteG1sLWFuZC1odG1sIgpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFj
ayB0byB0b3BdKCNjb250ZW50cykKCiMjIyB0b1NuYWtlQ2FzZQoKQ29udmVy
dHMgYSBzdHJpbmcgdG8gc25ha2UgY2FzZS4KCkJyZWFrIHRoZSBzdHJpbmcg
aW50byB3b3JkcyBhbmQgY29tYmluZSB0aGVtIGFkZGluZyBgX2AgYXMgYSBz
ZXBhcmF0b3IsIHVzaW5nIGEgcmVnZXhwLgoKYGBganMKY29uc3QgdG9TbmFr
ZUNhc2UgPSBzdHIgPT4KICBzdHIgJiYKICBzdHIKICAgIC5tYXRjaCgvW0Et
Wl17Mix9KD89W0EtWl1bYS16XStbMC05XSp8XGIpfFtBLVpdP1thLXpdK1sw
LTldKnxbQS1aXXxbMC05XSsvZykKICAgIC5tYXAoeCA9PiB4LnRvTG93ZXJD
YXNlKCkpCiAgICAuam9pbignXycpOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFy
eT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCnRvU25ha2VDYXNlKCdjYW1l
bENhc2UnKTsgLy8gJ2NhbWVsX2Nhc2UnCnRvU25ha2VDYXNlKCdzb21lIHRl
eHQnKTsgLy8gJ3NvbWVfdGV4dCcKdG9TbmFrZUNhc2UoJ3NvbWUtbWl4ZWRf
c3RyaW5nIFdpdGggc3BhY2VzX3VuZGVyc2NvcmVzLWFuZC1oeXBoZW5zJyk7
IC8vICdzb21lX21peGVkX3N0cmluZ193aXRoX3NwYWNlc191bmRlcnNjb3Jl
c19hbmRfaHlwaGVucycKdG9TbmFrZUNhc2UoJ0FsbFRoZS1zbWFsbCBUaGlu
Z3MnKTsgLy8gImFsbF90aGVfc21hbF90aGluZ3MiCnRvU25ha2VDYXNlKCdJ
QW1MaXN0ZW5pbmdUb0ZNV2hpbGVMb2FkaW5nRGlmZmVyZW50VVJMT25NeUJy
b3dzZXJBbmRBbHNvRWRpdGluZ1NvbWVYTUxBbmRIVE1MJyk7IC8vICJpX2Ft
X2xpc3RlbmluZ190b19mbV93aGlsZV9sb2FkaW5nX2RpZmZlcmVudF91cmxf
b25fbXlfYnJvd3Nlcl9hbmRfYWxzb19lZGl0aW5nX3NvbWVfeG1sX2FuZF9o
dG1sIgpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNj
b250ZW50cykKCiMjIyB0b1RpdGxlQ2FzZQoKQ29udmVydHMgYSBzdHJpbmcg
dG8gdGl0bGUgY2FzZS4KCkJyZWFrIHRoZSBzdHJpbmcgaW50byB3b3Jkcywg
dXNpbmcgYSByZWdleHAsIGFuZCBjb21iaW5lIHRoZW0gY2FwaXRhbGl6aW5n
IHRoZSBmaXJzdCBsZXR0ZXIgb2YgZWFjaCB3b3JkIGFuZCBhZGRpbmcgYSB3
aGl0ZXNwYWNlIGJldHdlZW4gdGhlbS4KCmBgYGpzCmNvbnN0IHRvVGl0bGVD
YXNlID0gc3RyID0+CiAgc3RyCiAgICAubWF0Y2goL1tBLVpdezIsfSg/PVtB
LVpdW2Etel0rWzAtOV0qfFxiKXxbQS1aXT9bYS16XStbMC05XSp8W0EtWl18
WzAtOV0rL2cpCiAgICAubWFwKHggPT4geC5jaGFyQXQoMCkudG9VcHBlckNh
c2UoKSArIHguc2xpY2UoMSkpCiAgICAuam9pbignICcpOwpgYGAKCjxkZXRh
aWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCnRvVGl0
bGVDYXNlKCdzb21lX2RhdGFiYXNlX2ZpZWxkX25hbWUnKTsgLy8gJ1NvbWUg
RGF0YWJhc2UgRmllbGQgTmFtZScKdG9UaXRsZUNhc2UoJ1NvbWUgbGFiZWwg
dGhhdCBuZWVkcyB0byBiZSB0aXRsZS1jYXNlZCcpOyAvLyAnU29tZSBMYWJl
bCBUaGF0IE5lZWRzIFRvIEJlIFRpdGxlIENhc2VkJwp0b1RpdGxlQ2FzZSgn
c29tZS1wYWNrYWdlLW5hbWUnKTsgLy8gJ1NvbWUgUGFja2FnZSBOYW1lJwp0
b1RpdGxlQ2FzZSgnc29tZS1taXhlZF9zdHJpbmcgd2l0aCBzcGFjZXNfdW5k
ZXJzY29yZXMtYW5kLWh5cGhlbnMnKTsgLy8gJ1NvbWUgTWl4ZWQgU3RyaW5n
IFdpdGggU3BhY2VzIFVuZGVyc2NvcmVzIEFuZCBIeXBoZW5zJwpgYGAKPC9k
ZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMj
IyB0cnVuY2F0ZVN0cmluZwoKVHJ1bmNhdGVzIGEgc3RyaW5nIHVwIHRvIGEg
c3BlY2lmaWVkIGxlbmd0aC4KCkRldGVybWluZSBpZiB0aGUgc3RyaW5nJ3Mg
YGxlbmd0aGAgaXMgZ3JlYXRlciB0aGFuIGBudW1gLgpSZXR1cm4gdGhlIHN0
cmluZyB0cnVuY2F0ZWQgdG8gdGhlIGRlc2lyZWQgbGVuZ3RoLCB3aXRoIGAn
Li4uJ2AgYXBwZW5kZWQgdG8gdGhlIGVuZCBvciB0aGUgb3JpZ2luYWwgc3Ry
aW5nLgoKYGBganMKY29uc3QgdHJ1bmNhdGVTdHJpbmcgPSAoc3RyLCBudW0p
ID0+CiAgc3RyLmxlbmd0aCA+IG51bSA/IHN0ci5zbGljZSgwLCBudW0gPiAz
ID8gbnVtIC0gMyA6IG51bSkgKyAnLi4uJyA6IHN0cjsKYGBgCgo8ZGV0YWls
cz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwp0cnVuY2F0
ZVN0cmluZygnYm9vbWVyYW5nJywgNyk7IC8vICdib29tLi4uJwpgYGAKPC9k
ZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMj
IyB1bmVzY2FwZUhUTUwKClVuZXNjYXBlcyBlc2NhcGVkIEhUTUwgY2hhcmFj
dGVycy4KClVzZSBgU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlKClgIHdpdGgg
YSByZWdleCB0aGF0IG1hdGNoZXMgdGhlIGNoYXJhY3RlcnMgdGhhdCBuZWVk
IHRvIGJlIHVuZXNjYXBlZCwgdXNpbmcgYSBjYWxsYmFjayBmdW5jdGlvbiB0
byByZXBsYWNlIGVhY2ggZXNjYXBlZCBjaGFyYWN0ZXIgaW5zdGFuY2Ugd2l0
aCBpdHMgYXNzb2NpYXRlZCB1bmVzY2FwZWQgY2hhcmFjdGVyIHVzaW5nIGEg
ZGljdGlvbmFyeSAob2JqZWN0KS4KCmBgYGpzCmNvbnN0IHVuZXNjYXBlSFRN
TCA9IHN0ciA9PgogIHN0ci5yZXBsYWNlKAogICAgLyZhbXA7fCZsdDt8Jmd0
O3wmIzM5O3wmcXVvdDsvZywKICAgIHRhZyA9PgogICAgICAoewogICAgICAg
ICcmYW1wOyc6ICcmJywKICAgICAgICAnJmx0Oyc6ICc8JywKICAgICAgICAn
Jmd0Oyc6ICc+JywKICAgICAgICAnJiMzOTsnOiAiJyIsCiAgICAgICAgJyZx
dW90Oyc6ICciJwogICAgICB9W3RhZ10gfHwgdGFnKQogICk7CmBgYAoKPGRl
dGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKdW5l
c2NhcGVIVE1MKCcmbHQ7YSBocmVmPSZxdW90OyMmcXVvdDsmZ3Q7TWUgJmFt
cDsgeW91Jmx0Oy9hJmd0OycpOyAvLyAnPGEgaHJlZj0iIyI+TWUgJiB5b3U8
L2E+JwpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNj
b250ZW50cykKCiMjIyBVUkxKb2luICFbYWR2YW5jZWRdKC9hZHZhbmNlZC5z
dmcpCgpKb2lucyBhbGwgZ2l2ZW4gVVJMIHNlZ21lbnRzIHRvZ2V0aGVyLCB0
aGVuIG5vcm1hbGl6ZXMgdGhlIHJlc3VsdGluZyBVUkwuCgpVc2UgYFN0cmlu
Zy5wcm90b3R5cGUuam9pbignLycpYCB0byBjb21iaW5lIFVSTCBzZWdtZW50
cywgdGhlbiBhIHNlcmllcyBvZiBgU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNl
KClgIGNhbGxzIHdpdGggdmFyaW91cyByZWdleHBzIHRvIG5vcm1hbGl6ZSB0
aGUgcmVzdWx0aW5nIFVSTCAocmVtb3ZlIGRvdWJsZSBzbGFzaGVzLCBhZGQg
cHJvcGVyIHNsYXNoZXMgZm9yIHByb3RvY29sLCByZW1vdmUgc2xhc2hlcyBi
ZWZvcmUgcGFyYW1ldGVycywgY29tYmluZSBwYXJhbWV0ZXJzIHdpdGggYCcm
J2AgYW5kIG5vcm1hbGl6ZSBmaXJzdCBwYXJhbWV0ZXIgZGVsaW1pdGVyKS4K
CmBgYGpzCmNvbnN0IFVSTEpvaW4gPSAoLi4uYXJncykgPT4KICBhcmdzCiAg
ICAuam9pbignLycpCiAgICAucmVwbGFjZSgvW1wvXSsvZywgJy8nKQogICAg
LnJlcGxhY2UoL14oLispOlwvLywgJyQxOi8vJykKICAgIC5yZXBsYWNlKC9e
ZmlsZTovLCAnZmlsZTovJykKICAgIC5yZXBsYWNlKC9cLyhcP3wmfCNbXiFd
KS9nLCAnJDEnKQogICAgLnJlcGxhY2UoL1w/L2csICcmJykKICAgIC5yZXBs
YWNlKCcmJywgJz8nKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBs
ZXM8L3N1bW1hcnk+CgpgYGBqcwpVUkxKb2luKCdodHRwOi8vd3d3Lmdvb2ds
ZS5jb20nLCAnYScsICcvYi9jZCcsICc/Zm9vPTEyMycsICc/YmFyPWZvbycp
OyAvLyAnaHR0cDovL3d3dy5nb29nbGUuY29tL2EvYi9jZD9mb289MTIzJmJh
cj1mb28nCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0o
I2NvbnRlbnRzKQoKIyMjIHdvcmRzCgpDb252ZXJ0cyBhIGdpdmVuIHN0cmlu
ZyBpbnRvIGFuIGFycmF5IG9mIHdvcmRzLgoKVXNlIGBTdHJpbmcucHJvdG90
eXBlLnNwbGl0KClgIHdpdGggYSBzdXBwbGllZCBwYXR0ZXJuIChkZWZhdWx0
cyB0byBub24tYWxwaGEgYXMgYSByZWdleHApIHRvIGNvbnZlcnQgdG8gYW4g
YXJyYXkgb2Ygc3RyaW5ncy4gVXNlIGBBcnJheS5wcm90b3R5cGUuZmlsdGVy
KClgIHRvIHJlbW92ZSBhbnkgZW1wdHkgc3RyaW5ncy4KT21pdCB0aGUgc2Vj
b25kIGFyZ3VtZW50IHRvIHVzZSB0aGUgZGVmYXVsdCByZWdleHAuCgpgYGBq
cwpjb25zdCB3b3JkcyA9IChzdHIsIHBhdHRlcm4gPSAvW15hLXpBLVotXSsv
KSA9PiBzdHIuc3BsaXQocGF0dGVybikuZmlsdGVyKEJvb2xlYW4pOwpgYGAK
CjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpz
CndvcmRzKCdJIGxvdmUgamF2YVNjcmlwdCEhJyk7IC8vIFsiSSIsICJsb3Zl
IiwgImphdmFTY3JpcHQiXQp3b3JkcygncHl0aG9uLCBqYXZhU2NyaXB0ICYg
Y29mZmVlJyk7IC8vIFsicHl0aG9uIiwgImphdmFTY3JpcHQiLCAiY29mZmVl
Il0KYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29u
dGVudHMpCgotLS0KCiMjIPCfk4MgVHlwZQoKCiMjIyBnZXRUeXBlCgpSZXR1
cm5zIHRoZSBuYXRpdmUgdHlwZSBvZiBhIHZhbHVlLgoKUmV0dXJucyBsb3dl
cmNhc2VkIGNvbnN0cnVjdG9yIG5hbWUgb2YgdmFsdWUsIGAidW5kZWZpbmVk
ImAgb3IgYCJudWxsImAgaWYgdmFsdWUgaXMgYHVuZGVmaW5lZGAgb3IgYG51
bGxgLgoKYGBganMKY29uc3QgZ2V0VHlwZSA9IHYgPT4KICB2ID09PSB1bmRl
ZmluZWQgPyAndW5kZWZpbmVkJyA6IHYgPT09IG51bGwgPyAnbnVsbCcgOiB2
LmNvbnN0cnVjdG9yLm5hbWUudG9Mb3dlckNhc2UoKTsKYGBgCgo8ZGV0YWls
cz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpnZXRUeXBl
KG5ldyBTZXQoWzEsIDIsIDNdKSk7IC8vICdzZXQnCmBgYAo8L2RldGFpbHM+
Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGlzCgpD
aGVja3MgaWYgdGhlIHByb3ZpZGVkIHZhbHVlIGlzIG9mIHRoZSBzcGVjaWZp
ZWQgdHlwZS4KCkVuc3VyZSB0aGUgdmFsdWUgaXMgbm90IGB1bmRlZmluZWRg
IG9yIGBudWxsYCB1c2luZyBgQXJyYXkucHJvdG90eXBlLmluY2x1ZGVzKClg
LCBhbmQgY29tcGFyZSB0aGUgYGNvbnN0cnVjdG9yYCBwcm9wZXJ0eSBvbiB0
aGUgdmFsdWUgd2l0aCBgdHlwZWAgdG8gY2hlY2sgaWYgdGhlIHByb3ZpZGVk
IHZhbHVlIGlzIG9mIHRoZSBzcGVjaWZpZWQgYHR5cGVgLgoKYGBganMKY29u
c3QgaXMgPSAodHlwZSwgdmFsKSA9PiAhWywgbnVsbF0uaW5jbHVkZXModmFs
KSAmJiB2YWwuY29uc3RydWN0b3IgPT09IHR5cGU7CmBgYAoKPGRldGFpbHM+
CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKaXMoQXJyYXks
IFsxXSk7IC8vIHRydWUKaXMoQXJyYXlCdWZmZXIsIG5ldyBBcnJheUJ1ZmZl
cigpKTsgLy8gdHJ1ZQppcyhNYXAsIG5ldyBNYXAoKSk7IC8vIHRydWUKaXMo
UmVnRXhwLCAvLi9nKTsgLy8gdHJ1ZQppcyhTZXQsIG5ldyBTZXQoKSk7IC8v
IHRydWUKaXMoV2Vha01hcCwgbmV3IFdlYWtNYXAoKSk7IC8vIHRydWUKaXMo
V2Vha1NldCwgbmV3IFdlYWtTZXQoKSk7IC8vIHRydWUKaXMoU3RyaW5nLCAn
Jyk7IC8vIHRydWUKaXMoU3RyaW5nLCBuZXcgU3RyaW5nKCcnKSk7IC8vIHRy
dWUKaXMoTnVtYmVyLCAxKTsgLy8gdHJ1ZQppcyhOdW1iZXIsIG5ldyBOdW1i
ZXIoMSkpOyAvLyB0cnVlCmlzKEJvb2xlYW4sIHRydWUpOyAvLyB0cnVlCmlz
KEJvb2xlYW4sIG5ldyBCb29sZWFuKHRydWUpKTsgLy8gdHJ1ZQpgYGAKPC9k
ZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMj
IyBpc0FycmF5TGlrZQoKQ2hlY2tzIGlmIHRoZSBwcm92aWRlZCBhcmd1bWVu
dCBpcyBhcnJheS1saWtlIChpLmUuIGlzIGl0ZXJhYmxlKS4KCkNoZWNrIGlm
IHRoZSBwcm92aWRlZCBhcmd1bWVudCBpcyBub3QgYG51bGxgIGFuZCB0aGF0
IGl0cyBgU3ltYm9sLml0ZXJhdG9yYCBwcm9wZXJ0eSBpcyBhIGZ1bmN0aW9u
LgoKYGBganMKY29uc3QgaXNBcnJheUxpa2UgPSBvYmogPT4gb2JqICE9IG51
bGwgJiYgdHlwZW9mIG9ialtTeW1ib2wuaXRlcmF0b3JdID09PSAnZnVuY3Rp
b24nOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFy
eT4KCmBgYGpzCmlzQXJyYXlMaWtlKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JB
bGwoJy5jbGFzc05hbWUnKSk7IC8vIHRydWUKaXNBcnJheUxpa2UoJ2FiYycp
OyAvLyB0cnVlCmlzQXJyYXlMaWtlKG51bGwpOyAvLyBmYWxzZQpgYGAKPC9k
ZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMj
IyBpc0Jvb2xlYW4KCkNoZWNrcyBpZiB0aGUgZ2l2ZW4gYXJndW1lbnQgaXMg
YSBuYXRpdmUgYm9vbGVhbiBlbGVtZW50LgoKVXNlIGB0eXBlb2ZgIHRvIGNo
ZWNrIGlmIGEgdmFsdWUgaXMgY2xhc3NpZmllZCBhcyBhIGJvb2xlYW4gcHJp
bWl0aXZlLgoKYGBganMKY29uc3QgaXNCb29sZWFuID0gdmFsID0+IHR5cGVv
ZiB2YWwgPT09ICdib29sZWFuJzsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+
RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwppc0Jvb2xlYW4obnVsbCk7IC8v
IGZhbHNlCmlzQm9vbGVhbihmYWxzZSk7IC8vIHRydWUKYGBgCjwvZGV0YWls
cz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgaXNF
bXB0eQoKUmV0dXJucyB0cnVlIGlmIHRoZSBhIHZhbHVlIGlzIGFuIGVtcHR5
IG9iamVjdCwgY29sbGVjdGlvbiwgaGFzIG5vIGVudW1lcmFibGUgcHJvcGVy
dGllcyBvciBpcyBhbnkgdHlwZSB0aGF0IGlzIG5vdCBjb25zaWRlcmVkIGEg
Y29sbGVjdGlvbi4KCkNoZWNrIGlmIHRoZSBwcm92aWRlZCB2YWx1ZSBpcyBg
bnVsbGAgb3IgaWYgaXRzIGBsZW5ndGhgIGlzIGVxdWFsIHRvIGAwYC4KCmBg
YGpzCmNvbnN0IGlzRW1wdHkgPSB2YWwgPT4gdmFsID09IG51bGwgfHwgIShP
YmplY3Qua2V5cyh2YWwpIHx8IHZhbCkubGVuZ3RoOwpgYGAKCjxkZXRhaWxz
Pgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmlzRW1wdHko
W10pOyAvLyB0cnVlCmlzRW1wdHkoe30pOyAvLyB0cnVlCmlzRW1wdHkoJycp
OyAvLyB0cnVlCmlzRW1wdHkoWzEsIDJdKTsgLy8gZmFsc2UKaXNFbXB0eSh7
IGE6IDEsIGI6IDIgfSk7IC8vIGZhbHNlCmlzRW1wdHkoJ3RleHQnKTsgLy8g
ZmFsc2UKaXNFbXB0eSgxMjMpOyAvLyB0cnVlIC0gdHlwZSBpcyBub3QgY29u
c2lkZXJlZCBhIGNvbGxlY3Rpb24KaXNFbXB0eSh0cnVlKTsgLy8gdHJ1ZSAt
IHR5cGUgaXMgbm90IGNvbnNpZGVyZWQgYSBjb2xsZWN0aW9uCmBgYAo8L2Rl
dGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMj
IGlzRnVuY3Rpb24KCkNoZWNrcyBpZiB0aGUgZ2l2ZW4gYXJndW1lbnQgaXMg
YSBmdW5jdGlvbi4KClVzZSBgdHlwZW9mYCB0byBjaGVjayBpZiBhIHZhbHVl
IGlzIGNsYXNzaWZpZWQgYXMgYSBmdW5jdGlvbiBwcmltaXRpdmUuCgpgYGBq
cwpjb25zdCBpc0Z1bmN0aW9uID0gdmFsID0+IHR5cGVvZiB2YWwgPT09ICdm
dW5jdGlvbic7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9z
dW1tYXJ5PgoKYGBganMKaXNGdW5jdGlvbigneCcpOyAvLyBmYWxzZQppc0Z1
bmN0aW9uKHggPT4geCk7IC8vIHRydWUKYGBgCjwvZGV0YWlscz4KCjxicj5b
4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgaXNOaWwKClJldHVy
bnMgYHRydWVgIGlmIHRoZSBzcGVjaWZpZWQgdmFsdWUgaXMgYG51bGxgIG9y
IGB1bmRlZmluZWRgLCBgZmFsc2VgIG90aGVyd2lzZS4KClVzZSB0aGUgc3Ry
aWN0IGVxdWFsaXR5IG9wZXJhdG9yIHRvIGNoZWNrIGlmIHRoZSB2YWx1ZSBh
bmQgb2YgYHZhbGAgYXJlIGVxdWFsIHRvIGBudWxsYCBvciBgdW5kZWZpbmVk
YC4KCmBgYGpzCmNvbnN0IGlzTmlsID0gdmFsID0+IHZhbCA9PT0gdW5kZWZp
bmVkIHx8IHZhbCA9PT0gbnVsbDsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+
RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwppc05pbChudWxsKTsgLy8gdHJ1
ZQppc05pbCh1bmRlZmluZWQpOyAvLyB0cnVlCmBgYAo8L2RldGFpbHM+Cgo8
YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGlzTnVsbAoK
UmV0dXJucyBgdHJ1ZWAgaWYgdGhlIHNwZWNpZmllZCB2YWx1ZSBpcyBgbnVs
bGAsIGBmYWxzZWAgb3RoZXJ3aXNlLgoKVXNlIHRoZSBzdHJpY3QgZXF1YWxp
dHkgb3BlcmF0b3IgdG8gY2hlY2sgaWYgdGhlIHZhbHVlIGFuZCBvZiBgdmFs
YCBhcmUgZXF1YWwgdG8gYG51bGxgLgoKYGBganMKY29uc3QgaXNOdWxsID0g
dmFsID0+IHZhbCA9PT0gbnVsbDsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+
RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwppc051bGwobnVsbCk7IC8vIHRy
dWUKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29u
dGVudHMpCgojIyMgaXNOdW1iZXIKCkNoZWNrcyBpZiB0aGUgZ2l2ZW4gYXJn
dW1lbnQgaXMgYSBudW1iZXIuCgpVc2UgYHR5cGVvZmAgdG8gY2hlY2sgaWYg
YSB2YWx1ZSBpcyBjbGFzc2lmaWVkIGFzIGEgbnVtYmVyIHByaW1pdGl2ZS4g
ClRvIHNhZmVndWFyZCBhZ2FpbnN0IGBOYU5gLCBjaGVjayBpZiBgdmFsID09
PSB2YWxgIChhcyBgTmFOYCBoYXMgYSBgdHlwZW9mYCBlcXVhbCB0byBgbnVt
YmVyYCBhbmQgaXMgdGhlIG9ubHkgdmFsdWUgbm90IGVxdWFsIHRvIGl0c2Vs
ZikuCgpgYGBqcwpjb25zdCBpc051bWJlciA9IHZhbCA9PiB0eXBlb2YgdmFs
ID09PSAnbnVtYmVyJyAmJiB2YWwgPT09IHZhbDsKYGBgCgo8ZGV0YWlscz4K
PHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwppc051bWJlcigx
KTsgLy8gdHJ1ZQppc051bWJlcignMScpOyAvLyBmYWxzZQppc051bWJlcihO
YU4pOyAvLyBmYWxzZQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0
byB0b3BdKCNjb250ZW50cykKCiMjIyBpc09iamVjdAoKUmV0dXJucyBhIGJv
b2xlYW4gZGV0ZXJtaW5pbmcgaWYgdGhlIHBhc3NlZCB2YWx1ZSBpcyBhbiBv
YmplY3Qgb3Igbm90LgoKVXNlcyB0aGUgIGBPYmplY3RgIGNvbnN0cnVjdG9y
IHRvIGNyZWF0ZSBhbiBvYmplY3Qgd3JhcHBlciBmb3IgdGhlIGdpdmVuIHZh
bHVlLiAKSWYgdGhlIHZhbHVlIGlzIGBudWxsYCBvciBgdW5kZWZpbmVkYCwg
Y3JlYXRlIGFuZCByZXR1cm4gYW4gZW1wdHkgb2JqZWN0LiDOn3RoZXJ3aXNl
LCByZXR1cm4gYW4gb2JqZWN0IG9mIGEgdHlwZSB0aGF0IGNvcnJlc3BvbmRz
IHRvIHRoZSBnaXZlbiB2YWx1ZS4KCmBgYGpzCmNvbnN0IGlzT2JqZWN0ID0g
b2JqID0+IG9iaiA9PT0gT2JqZWN0KG9iaik7CmBgYAoKPGRldGFpbHM+Cjxz
dW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKaXNPYmplY3QoWzEs
IDIsIDMsIDRdKTsgLy8gdHJ1ZQppc09iamVjdChbXSk7IC8vIHRydWUKaXNP
YmplY3QoWydIZWxsbyEnXSk7IC8vIHRydWUKaXNPYmplY3QoeyBhOiAxIH0p
OyAvLyB0cnVlCmlzT2JqZWN0KHt9KTsgLy8gdHJ1ZQppc09iamVjdCh0cnVl
KTsgLy8gZmFsc2UKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8g
dG9wXSgjY29udGVudHMpCgojIyMgaXNPYmplY3RMaWtlCgpDaGVja3MgaWYg
YSB2YWx1ZSBpcyBvYmplY3QtbGlrZS4KCkNoZWNrIGlmIHRoZSBwcm92aWRl
ZCB2YWx1ZSBpcyBub3QgYG51bGxgIGFuZCBpdHMgYHR5cGVvZmAgaXMgZXF1
YWwgdG8gYCdvYmplY3QnYC4KCmBgYGpzCmNvbnN0IGlzT2JqZWN0TGlrZSA9
IHZhbCA9PiB2YWwgIT09IG51bGwgJiYgdHlwZW9mIHZhbCA9PT0gJ29iamVj
dCc7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5
PgoKYGBganMKaXNPYmplY3RMaWtlKHt9KTsgLy8gdHJ1ZQppc09iamVjdExp
a2UoWzEsIDIsIDNdKTsgLy8gdHJ1ZQppc09iamVjdExpa2UoeCA9PiB4KTsg
Ly8gZmFsc2UKaXNPYmplY3RMaWtlKG51bGwpOyAvLyBmYWxzZQpgYGAKPC9k
ZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMj
IyBpc1BsYWluT2JqZWN0CgpDaGVja3MgaWYgdGhlIHByb3ZpZGVkIHZhbHVl
IGlzIGFuIG9iamVjdCBjcmVhdGVkIGJ5IHRoZSBPYmplY3QgY29uc3RydWN0
b3IuCgpDaGVjayBpZiB0aGUgcHJvdmlkZWQgdmFsdWUgaXMgdHJ1dGh5LCB1
c2UgYHR5cGVvZmAgdG8gY2hlY2sgaWYgaXQgaXMgYW4gb2JqZWN0IGFuZCBg
T2JqZWN0LmNvbnN0cnVjdG9yYCB0byBtYWtlIHN1cmUgdGhlIGNvbnN0cnVj
dG9yIGlzIGVxdWFsIHRvIGBPYmplY3RgLgoKYGBganMKY29uc3QgaXNQbGFp
bk9iamVjdCA9IHZhbCA9PiAhIXZhbCAmJiB0eXBlb2YgdmFsID09PSAnb2Jq
ZWN0JyAmJiB2YWwuY29uc3RydWN0b3IgPT09IE9iamVjdDsKYGBgCgo8ZGV0
YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwppc1Bs
YWluT2JqZWN0KHsgYTogMSB9KTsgLy8gdHJ1ZQppc1BsYWluT2JqZWN0KG5l
dyBNYXAoKSk7IC8vIGZhbHNlCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBC
YWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGlzUHJpbWl0aXZlCgpSZXR1
cm5zIGEgYm9vbGVhbiBkZXRlcm1pbmluZyBpZiB0aGUgcGFzc2VkIHZhbHVl
IGlzIHByaW1pdGl2ZSBvciBub3QuCgpDcmVhdGUgYW4gb2JqZWN0IGZyb20g
YHZhbGAgYW5kIGNvbXBhcmUgaXQgd2l0aCBgdmFsYCB0byBkZXRlcm1pbmUg
aWYgdGhlIHBhc3NlZCB2YWx1ZSBpcyBwcmltaXRpdmUgKGkuZS4gbm90IGVx
dWFsIHRvIHRoZSBjcmVhdGVkIG9iamVjdCkuCgpgYGBqcwpjb25zdCBpc1By
aW1pdGl2ZSA9IHZhbCA9PiBPYmplY3QodmFsKSAhPT0gdmFsOwpgYGAKCjxk
ZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmlz
UHJpbWl0aXZlKG51bGwpOyAvLyB0cnVlCmlzUHJpbWl0aXZlKDUwKTsgLy8g
dHJ1ZQppc1ByaW1pdGl2ZSgnSGVsbG8hJyk7IC8vIHRydWUKaXNQcmltaXRp
dmUoZmFsc2UpOyAvLyB0cnVlCmlzUHJpbWl0aXZlKFN5bWJvbCgpKTsgLy8g
dHJ1ZQppc1ByaW1pdGl2ZShbXSk7IC8vIGZhbHNlCmBgYAo8L2RldGFpbHM+
Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGlzUHJv
bWlzZUxpa2UKClJldHVybnMgYHRydWVgIGlmIGFuIG9iamVjdCBsb29rcyBs
aWtlIGEgW2BQcm9taXNlYF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5v
cmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFs
X09iamVjdHMvUHJvbWlzZSksIGBmYWxzZWAgb3RoZXJ3aXNlLgoKQ2hlY2sg
aWYgdGhlIG9iamVjdCBpcyBub3QgYG51bGxgLCBpdHMgYHR5cGVvZmAgbWF0
Y2hlcyBlaXRoZXIgYG9iamVjdGAgb3IgYGZ1bmN0aW9uYCBhbmQgaWYgaXQg
aGFzIGEgYC50aGVuYCBwcm9wZXJ0eSwgd2hpY2ggaXMgYWxzbyBhIGBmdW5j
dGlvbmAuCgpgYGBqcwpjb25zdCBpc1Byb21pc2VMaWtlID0gb2JqID0+CiAg
b2JqICE9PSBudWxsICYmCiAgKHR5cGVvZiBvYmogPT09ICdvYmplY3QnIHx8
IHR5cGVvZiBvYmogPT09ICdmdW5jdGlvbicpICYmCiAgdHlwZW9mIG9iai50
aGVuID09PSAnZnVuY3Rpb24nOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5F
eGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmlzUHJvbWlzZUxpa2UoewogIHRo
ZW46IGZ1bmN0aW9uKCkgewogICAgcmV0dXJuICcnOwogIH0KfSk7IC8vIHRy
dWUKaXNQcm9taXNlTGlrZShudWxsKTsgLy8gZmFsc2UKaXNQcm9taXNlTGlr
ZSh7fSk7IC8vIGZhbHNlCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNr
IHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGlzU3RyaW5nCgpDaGVja3MgaWYg
dGhlIGdpdmVuIGFyZ3VtZW50IGlzIGEgc3RyaW5nLiBPbmx5IHdvcmtzIGZv
ciBzdHJpbmcgcHJpbWl0aXZlcy4KClVzZSBgdHlwZW9mYCB0byBjaGVjayBp
ZiBhIHZhbHVlIGlzIGNsYXNzaWZpZWQgYXMgYSBzdHJpbmcgcHJpbWl0aXZl
LgoKYGBganMKY29uc3QgaXNTdHJpbmcgPSB2YWwgPT4gdHlwZW9mIHZhbCA9
PT0gJ3N0cmluZyc7CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVz
PC9zdW1tYXJ5PgoKYGBganMKaXNTdHJpbmcoJzEwJyk7IC8vIHRydWUKYGBg
CjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMp
CgojIyMgaXNTeW1ib2wKCkNoZWNrcyBpZiB0aGUgZ2l2ZW4gYXJndW1lbnQg
aXMgYSBzeW1ib2wuCgpVc2UgYHR5cGVvZmAgdG8gY2hlY2sgaWYgYSB2YWx1
ZSBpcyBjbGFzc2lmaWVkIGFzIGEgc3ltYm9sIHByaW1pdGl2ZS4KCmBgYGpz
CmNvbnN0IGlzU3ltYm9sID0gdmFsID0+IHR5cGVvZiB2YWwgPT09ICdzeW1i
b2wnOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFy
eT4KCmBgYGpzCmlzU3ltYm9sKFN5bWJvbCgneCcpKTsgLy8gdHJ1ZQpgYGAK
PC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykK
CiMjIyBpc1VuZGVmaW5lZAoKUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIHNwZWNp
ZmllZCB2YWx1ZSBpcyBgdW5kZWZpbmVkYCwgYGZhbHNlYCBvdGhlcndpc2Uu
CgpVc2UgdGhlIHN0cmljdCBlcXVhbGl0eSBvcGVyYXRvciB0byBjaGVjayBp
ZiB0aGUgdmFsdWUgYW5kIG9mIGB2YWxgIGFyZSBlcXVhbCB0byBgdW5kZWZp
bmVkYC4KCmBgYGpzCmNvbnN0IGlzVW5kZWZpbmVkID0gdmFsID0+IHZhbCA9
PT0gdW5kZWZpbmVkOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxl
czwvc3VtbWFyeT4KCmBgYGpzCmlzVW5kZWZpbmVkKHVuZGVmaW5lZCk7IC8v
IHRydWUKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgj
Y29udGVudHMpCgojIyMgaXNWYWxpZEpTT04KCkNoZWNrcyBpZiB0aGUgcHJv
dmlkZWQgc3RyaW5nIGlzIGEgdmFsaWQgSlNPTi4KClVzZSBgSlNPTi5wYXJz
ZSgpYCBhbmQgYSBgdHJ5Li4uIGNhdGNoYCBibG9jayB0byBjaGVjayBpZiB0
aGUgcHJvdmlkZWQgc3RyaW5nIGlzIGEgdmFsaWQgSlNPTi4KCmBgYGpzCmNv
bnN0IGlzVmFsaWRKU09OID0gc3RyID0+IHsKICB0cnkgewogICAgSlNPTi5w
YXJzZShzdHIpOwogICAgcmV0dXJuIHRydWU7CiAgfSBjYXRjaCAoZSkgewog
ICAgcmV0dXJuIGZhbHNlOwogIH0KfTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1h
cnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwppc1ZhbGlkSlNPTigneyJu
YW1lIjoiQWRhbSIsImFnZSI6MjB9Jyk7IC8vIHRydWUKaXNWYWxpZEpTT04o
J3sibmFtZSI6IkFkYW0iLGFnZToiMjAifScpOyAvLyBmYWxzZQppc1ZhbGlk
SlNPTihudWxsKTsgLy8gdHJ1ZQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYg
QmFjayB0byB0b3BdKCNjb250ZW50cykKCi0tLQoKIyMg8J+UpyBVdGlsaXR5
CgoKIyMjIGNhc3RBcnJheQoKQ2FzdHMgdGhlIHByb3ZpZGVkIHZhbHVlIGFz
IGFuIGFycmF5IGlmIGl0J3Mgbm90IG9uZS4KClVzZSBgQXJyYXkucHJvdG90
eXBlLmlzQXJyYXkoKWAgdG8gZGV0ZXJtaW5lIGlmIGB2YWxgIGlzIGFuIGFy
cmF5IGFuZCByZXR1cm4gaXQgYXMtaXMgb3IgZW5jYXBzdWxhdGVkIGluIGFu
IGFycmF5IGFjY29yZGluZ2x5LgoKYGBganMKY29uc3QgY2FzdEFycmF5ID0g
dmFsID0+IChBcnJheS5pc0FycmF5KHZhbCkgPyB2YWwgOiBbdmFsXSk7CmBg
YAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBg
anMKY2FzdEFycmF5KCdmb28nKTsgLy8gWydmb28nXQpjYXN0QXJyYXkoWzFd
KTsgLy8gWzFdCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRv
cF0oI2NvbnRlbnRzKQoKIyMjIGNsb25lUmVnRXhwCgpDbG9uZXMgYSByZWd1
bGFyIGV4cHJlc3Npb24uCgpVc2UgYG5ldyBSZWdFeHAoKWAsIGBSZWdFeHAu
c291cmNlYCBhbmQgYFJlZ0V4cC5mbGFnc2AgdG8gY2xvbmUgdGhlIGdpdmVu
IHJlZ3VsYXIgZXhwcmVzc2lvbi4KCmBgYGpzCmNvbnN0IGNsb25lUmVnRXhw
ID0gcmVnRXhwID0+IG5ldyBSZWdFeHAocmVnRXhwLnNvdXJjZSwgcmVnRXhw
LmZsYWdzKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1
bW1hcnk+CgpgYGBqcwpjb25zdCByZWdFeHAgPSAvbG9yZW0gaXBzdW0vZ2k7
CmNvbnN0IHJlZ0V4cDIgPSBjbG9uZVJlZ0V4cChyZWdFeHApOyAvLyAvbG9y
ZW0gaXBzdW0vZ2kKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8g
dG9wXSgjY29udGVudHMpCgojIyMgY29hbGVzY2UKClJldHVybnMgdGhlIGZp
cnN0IG5vbi1udWxsL3VuZGVmaW5lZCBhcmd1bWVudC4KClVzZSBgQXJyYXku
cHJvdG90eXBlLmZpbmQoKWAgdG8gcmV0dXJuIHRoZSBmaXJzdCBub24gYG51
bGxgL2B1bmRlZmluZWRgIGFyZ3VtZW50LgoKYGBganMKY29uc3QgY29hbGVz
Y2UgPSAoLi4uYXJncykgPT4gYXJncy5maW5kKF8gPT4gIVt1bmRlZmluZWQs
IG51bGxdLmluY2x1ZGVzKF8pKTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+
RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpjb2FsZXNjZShudWxsLCB1bmRl
ZmluZWQsICcnLCBOYU4sICdXYWxkbycpOyAvLyAiIgpgYGAKPC9kZXRhaWxz
PgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBjb2Fs
ZXNjZUZhY3RvcnkKClJldHVybnMgYSBjdXN0b21pemVkIGNvYWxlc2NlIGZ1
bmN0aW9uIHRoYXQgcmV0dXJucyB0aGUgZmlyc3QgYXJndW1lbnQgdGhhdCBy
ZXR1cm5zIGB0cnVlYCBmcm9tIHRoZSBwcm92aWRlZCBhcmd1bWVudCB2YWxp
ZGF0aW9uIGZ1bmN0aW9uLgoKVXNlIGBBcnJheS5wcm90b3R5cGUuZmluZCgp
YCB0byByZXR1cm4gdGhlIGZpcnN0IGFyZ3VtZW50IHRoYXQgcmV0dXJucyBg
dHJ1ZWAgZnJvbSB0aGUgcHJvdmlkZWQgYXJndW1lbnQgdmFsaWRhdGlvbiBm
dW5jdGlvbi4KCmBgYGpzCmNvbnN0IGNvYWxlc2NlRmFjdG9yeSA9IHZhbGlk
ID0+ICguLi5hcmdzKSA9PiBhcmdzLmZpbmQodmFsaWQpOwpgYGAKCjxkZXRh
aWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmNvbnN0
IGN1c3RvbUNvYWxlc2NlID0gY29hbGVzY2VGYWN0b3J5KF8gPT4gIVtudWxs
LCB1bmRlZmluZWQsICcnLCBOYU5dLmluY2x1ZGVzKF8pKTsKY3VzdG9tQ29h
bGVzY2UodW5kZWZpbmVkLCBudWxsLCBOYU4sICcnLCAnV2FsZG8nKTsgLy8g
IldhbGRvIgpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3Bd
KCNjb250ZW50cykKCiMjIyBleHRlbmRIZXgKCkV4dGVuZHMgYSAzLWRpZ2l0
IGNvbG9yIGNvZGUgdG8gYSA2LWRpZ2l0IGNvbG9yIGNvZGUuCgpVc2UgYEFy
cmF5LnByb3RvdHlwZS5tYXAoKWAsIGBTdHJpbmcucHJvdG90eXBlLnNwbGl0
KClgIGFuZCBgQXJyYXkucHJvdG90eXBlLmpvaW4oKWAgdG8gam9pbiB0aGUg
bWFwcGVkIGFycmF5IGZvciBjb252ZXJ0aW5nIGEgMy1kaWdpdCBSR0Igbm90
YXRlZCBoZXhhZGVjaW1hbCBjb2xvci1jb2RlIHRvIHRoZSA2LWRpZ2l0IGZv
cm0uCmBBcnJheS5wcm90b3R5cGUuc2xpY2UoKWAgaXMgdXNlZCB0byByZW1v
dmUgYCNgIGZyb20gc3RyaW5nIHN0YXJ0IHNpbmNlIGl0J3MgYWRkZWQgb25j
ZS4KCmBgYGpzCmNvbnN0IGV4dGVuZEhleCA9IHNob3J0SGV4ID0+CiAgJyMn
ICsKICBzaG9ydEhleAogICAgLnNsaWNlKHNob3J0SGV4LnN0YXJ0c1dpdGgo
JyMnKSA/IDEgOiAwKQogICAgLnNwbGl0KCcnKQogICAgLm1hcCh4ID0+IHgg
KyB4KQogICAgLmpvaW4oJycpOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5F
eGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCmV4dGVuZEhleCgnIzAzZicpOyAv
LyAnIzAwMzNmZicKZXh0ZW5kSGV4KCcwNWEnKTsgLy8gJyMwMDU1YWEnCmBg
YAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRz
KQoKIyMjIGdldFVSTFBhcmFtZXRlcnMKClJldHVybnMgYW4gb2JqZWN0IGNv
bnRhaW5pbmcgdGhlIHBhcmFtZXRlcnMgb2YgdGhlIGN1cnJlbnQgVVJMLgoK
VXNlIGBTdHJpbmcubWF0Y2goKWAgd2l0aCBhbiBhcHByb3ByaWF0ZSByZWd1
bGFyIGV4cHJlc3Npb24gdG8gZ2V0IGFsbCBrZXktdmFsdWUgcGFpcnMsIGBB
cnJheS5wcm90b3R5cGUucmVkdWNlKClgIHRvIG1hcCBhbmQgY29tYmluZSB0
aGVtIGludG8gYSBzaW5nbGUgb2JqZWN0LgpQYXNzIGBsb2NhdGlvbi5zZWFy
Y2hgIGFzIHRoZSBhcmd1bWVudCB0byBhcHBseSB0byB0aGUgY3VycmVudCBg
dXJsYC4KCmBgYGpzCmNvbnN0IGdldFVSTFBhcmFtZXRlcnMgPSB1cmwgPT4K
ICAodXJsLm1hdGNoKC8oW14/PSZdKykoPShbXiZdKikpL2cpIHx8IFtdKS5y
ZWR1Y2UoCiAgICAoYSwgdikgPT4gKChhW3Yuc2xpY2UoMCwgdi5pbmRleE9m
KCc9JykpXSA9IHYuc2xpY2Uodi5pbmRleE9mKCc9JykgKyAxKSksIGEpLAog
ICAge30KICApOwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwv
c3VtbWFyeT4KCmBgYGpzCmdldFVSTFBhcmFtZXRlcnMoJ2h0dHA6Ly91cmwu
Y29tL3BhZ2U/bmFtZT1BZGFtJnN1cm5hbWU9U21pdGgnKTsgLy8ge25hbWU6
ICdBZGFtJywgc3VybmFtZTogJ1NtaXRoJ30KZ2V0VVJMUGFyYW1ldGVycygn
Z29vZ2xlLmNvbScpOyAvLyB7fQpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYg
QmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyBoZXhUb1JHQiAhW2FkdmFu
Y2VkXSgvYWR2YW5jZWQuc3ZnKQoKQ29udmVydHMgYSBjb2xvciBjb2RlIHRv
IGEgYHJnYigpYCBvciBgcmdiYSgpYCBzdHJpbmcgaWYgYWxwaGEgdmFsdWUg
aXMgcHJvdmlkZWQuCgpVc2UgYml0d2lzZSByaWdodC1zaGlmdCBvcGVyYXRv
ciBhbmQgbWFzayBiaXRzIHdpdGggYCZgIChhbmQpIG9wZXJhdG9yIHRvIGNv
bnZlcnQgYSBoZXhhZGVjaW1hbCBjb2xvciBjb2RlICh3aXRoIG9yIHdpdGhv
dXQgcHJlZml4ZWQgd2l0aCBgI2ApIHRvIGEgc3RyaW5nIHdpdGggdGhlIFJH
QiB2YWx1ZXMuIElmIGl0J3MgMy1kaWdpdCBjb2xvciBjb2RlLCBmaXJzdCBj
b252ZXJ0IHRvIDYtZGlnaXQgdmVyc2lvbi4gSWYgYW4gYWxwaGEgdmFsdWUg
aXMgcHJvdmlkZWQgYWxvbmdzaWRlIDYtZGlnaXQgaGV4LCBnaXZlIGByZ2Jh
KClgIHN0cmluZyBpbiByZXR1cm4uCgpgYGBqcwpjb25zdCBoZXhUb1JHQiA9
IGhleCA9PiB7CiAgbGV0IGFscGhhID0gZmFsc2UsCiAgICBoID0gaGV4LnNs
aWNlKGhleC5zdGFydHNXaXRoKCcjJykgPyAxIDogMCk7CiAgaWYgKGgubGVu
Z3RoID09PSAzKSBoID0gWy4uLmhdLm1hcCh4ID0+IHggKyB4KS5qb2luKCcn
KTsKICBlbHNlIGlmIChoLmxlbmd0aCA9PT0gOCkgYWxwaGEgPSB0cnVlOwog
IGggPSBwYXJzZUludChoLCAxNik7CiAgcmV0dXJuICgKICAgICdyZ2InICsK
ICAgIChhbHBoYSA/ICdhJyA6ICcnKSArCiAgICAnKCcgKwogICAgKGggPj4+
IChhbHBoYSA/IDI0IDogMTYpKSArCiAgICAnLCAnICsKICAgICgoaCAmIChh
bHBoYSA/IDB4MDBmZjAwMDAgOiAweDAwZmYwMCkpID4+PiAoYWxwaGEgPyAx
NiA6IDgpKSArCiAgICAnLCAnICsKICAgICgoaCAmIChhbHBoYSA/IDB4MDAw
MGZmMDAgOiAweDAwMDBmZikpID4+PiAoYWxwaGEgPyA4IDogMCkpICsKICAg
IChhbHBoYSA/IGAsICR7aCAmIDB4MDAwMDAwZmZ9YCA6ICcnKSArCiAgICAn
KScKICApOwp9OwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwv
c3VtbWFyeT4KCmBgYGpzCmhleFRvUkdCKCcjMjdhZTYwZmYnKTsgLy8gJ3Jn
YmEoMzksIDE3NCwgOTYsIDI1NSknCmhleFRvUkdCKCcyN2FlNjAnKTsgLy8g
J3JnYigzOSwgMTc0LCA5NiknCmhleFRvUkdCKCcjZmZmJyk7IC8vICdyZ2Io
MjU1LCAyNTUsIDI1NSknCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNr
IHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIGh0dHBHZXQKCk1ha2VzIGEgYEdF
VGAgcmVxdWVzdCB0byB0aGUgcGFzc2VkIFVSTC4KClVzZSBbYFhNTEh0dHBS
ZXF1ZXN0YF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMv
ZG9jcy9XZWIvQVBJL1hNTEh0dHBSZXF1ZXN0L1VzaW5nX1hNTEh0dHBSZXF1
ZXN0KSB3ZWIgYXBpIHRvIG1ha2UgYSBgZ2V0YCByZXF1ZXN0IHRvIHRoZSBn
aXZlbiBgdXJsYC4KSGFuZGxlIHRoZSBgb25sb2FkYCBldmVudCwgYnkgY2Fs
bGluZyB0aGUgZ2l2ZW4gYGNhbGxiYWNrYCB0aGUgYHJlc3BvbnNlVGV4dGAu
CkhhbmRsZSB0aGUgYG9uZXJyb3JgIGV2ZW50LCBieSBydW5uaW5nIHRoZSBw
cm92aWRlZCBgZXJyYCBmdW5jdGlvbi4KT21pdCB0aGUgdGhpcmQgYXJndW1l
bnQsIGBlcnJgLCB0byBsb2cgZXJyb3JzIHRvIHRoZSBjb25zb2xlJ3MgYGVy
cm9yYCBzdHJlYW0gYnkgZGVmYXVsdC4KCmBgYGpzCmNvbnN0IGh0dHBHZXQg
PSAodXJsLCBjYWxsYmFjaywgZXJyID0gY29uc29sZS5lcnJvcikgPT4gewog
IGNvbnN0IHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsKICByZXF1
ZXN0Lm9wZW4oJ0dFVCcsIHVybCwgdHJ1ZSk7CiAgcmVxdWVzdC5vbmxvYWQg
PSAoKSA9PiBjYWxsYmFjayhyZXF1ZXN0LnJlc3BvbnNlVGV4dCk7CiAgcmVx
dWVzdC5vbmVycm9yID0gKCkgPT4gZXJyKHJlcXVlc3QpOwogIHJlcXVlc3Qu
c2VuZCgpOwp9OwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwv
c3VtbWFyeT4KCmBgYGpzCmh0dHBHZXQoCiAgJ2h0dHBzOi8vanNvbnBsYWNl
aG9sZGVyLnR5cGljb2RlLmNvbS9wb3N0cy8xJywKICBjb25zb2xlLmxvZwop
OyAvKgpMb2dzOiB7CiAgInVzZXJJZCI6IDEsCiAgImlkIjogMSwKICAidGl0
bGUiOiAic3VudCBhdXQgZmFjZXJlIHJlcGVsbGF0IHByb3ZpZGVudCBvY2Nh
ZWNhdGkgZXhjZXB0dXJpIG9wdGlvIHJlcHJlaGVuZGVyaXQiLAogICJib2R5
IjogInF1aWEgZXQgc3VzY2lwaXRcbnN1c2NpcGl0IHJlY3VzYW5kYWUgY29u
c2VxdXVudHVyIGV4cGVkaXRhIGV0IGN1bVxucmVwcmVoZW5kZXJpdCBtb2xl
c3RpYWUgdXQgdXQgcXVhcyB0b3RhbVxubm9zdHJ1bSByZXJ1bSBlc3QgYXV0
ZW0gc3VudCByZW0gZXZlbmlldCBhcmNoaXRlY3RvIgp9CiovCmBgYAo8L2Rl
dGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMj
IGh0dHBQb3N0CgpNYWtlcyBhIGBQT1NUYCByZXF1ZXN0IHRvIHRoZSBwYXNz
ZWQgVVJMLgoKVXNlIFtgWE1MSHR0cFJlcXVlc3RgXShodHRwczovL2RldmVs
b3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvWE1MSHR0cFJl
cXVlc3QvVXNpbmdfWE1MSHR0cFJlcXVlc3QpIHdlYiBhcGkgdG8gbWFrZSBh
IGBwb3N0YCByZXF1ZXN0IHRvIHRoZSBnaXZlbiBgdXJsYC4KU2V0IHRoZSB2
YWx1ZSBvZiBhbiBgSFRUUGAgcmVxdWVzdCBoZWFkZXIgd2l0aCBgc2V0UmVx
dWVzdEhlYWRlcmAgbWV0aG9kLgpIYW5kbGUgdGhlIGBvbmxvYWRgIGV2ZW50
LCBieSBjYWxsaW5nIHRoZSBnaXZlbiBgY2FsbGJhY2tgIHRoZSBgcmVzcG9u
c2VUZXh0YC4KSGFuZGxlIHRoZSBgb25lcnJvcmAgZXZlbnQsIGJ5IHJ1bm5p
bmcgdGhlIHByb3ZpZGVkIGBlcnJgIGZ1bmN0aW9uLgpPbWl0IHRoZSB0aGly
ZCBhcmd1bWVudCwgYGRhdGFgLCB0byBzZW5kIG5vIGRhdGEgdG8gdGhlIHBy
b3ZpZGVkIGB1cmxgLgpPbWl0IHRoZSBmb3VydGggYXJndW1lbnQsIGBlcnJg
LCB0byBsb2cgZXJyb3JzIHRvIHRoZSBjb25zb2xlJ3MgYGVycm9yYCBzdHJl
YW0gYnkgZGVmYXVsdC4KCmBgYGpzCmNvbnN0IGh0dHBQb3N0ID0gKHVybCwg
ZGF0YSwgY2FsbGJhY2ssIGVyciA9IGNvbnNvbGUuZXJyb3IpID0+IHsKICBj
b25zdCByZXF1ZXN0ID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7CiAgcmVxdWVz
dC5vcGVuKCdQT1NUJywgdXJsLCB0cnVlKTsKICByZXF1ZXN0LnNldFJlcXVl
c3RIZWFkZXIoJ0NvbnRlbnQtdHlwZScsICdhcHBsaWNhdGlvbi9qc29uOyBj
aGFyc2V0PXV0Zi04Jyk7CiAgcmVxdWVzdC5vbmxvYWQgPSAoKSA9PiBjYWxs
YmFjayhyZXF1ZXN0LnJlc3BvbnNlVGV4dCk7CiAgcmVxdWVzdC5vbmVycm9y
ID0gKCkgPT4gZXJyKHJlcXVlc3QpOwogIHJlcXVlc3Quc2VuZChkYXRhKTsK
fTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+
CgpgYGBqcwpjb25zdCBuZXdQb3N0ID0gewogIHVzZXJJZDogMSwKICBpZDog
MTMzNywKICB0aXRsZTogJ0ZvbycsCiAgYm9keTogJ2JhciBiYXIgYmFyJwp9
Owpjb25zdCBkYXRhID0gSlNPTi5zdHJpbmdpZnkobmV3UG9zdCk7Cmh0dHBQ
b3N0KAogICdodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20v
cG9zdHMnLAogIGRhdGEsCiAgY29uc29sZS5sb2cKKTsgLyoKTG9nczogewog
ICJ1c2VySWQiOiAxLAogICJpZCI6IDEzMzcsCiAgInRpdGxlIjogIkZvbyIs
CiAgImJvZHkiOiAiYmFyIGJhciBiYXIiCn0KKi8KaHR0cFBvc3QoCiAgJ2h0
dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS9wb3N0cycsCiAg
bnVsbCwgLy8gZG9lcyBub3Qgc2VuZCBhIGJvZHkKICBjb25zb2xlLmxvZwop
OyAvKgpMb2dzOiB7CiAgImlkIjogMTAxCn0KKi8KYGBgCjwvZGV0YWlscz4K
Cjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMgaXNCcm93
c2VyCgpEZXRlcm1pbmVzIGlmIHRoZSBjdXJyZW50IHJ1bnRpbWUgZW52aXJv
bm1lbnQgaXMgYSBicm93c2VyIHNvIHRoYXQgZnJvbnQtZW5kIG1vZHVsZXMg
Y2FuIHJ1biBvbiB0aGUgc2VydmVyIChOb2RlKSB3aXRob3V0IHRocm93aW5n
IGVycm9ycy4KClVzZSBgQXJyYXkucHJvdG90eXBlLmluY2x1ZGVzKClgIG9u
IHRoZSBgdHlwZW9mYCB2YWx1ZXMgb2YgYm90aCBgd2luZG93YCBhbmQgYGRv
Y3VtZW50YCAoZ2xvYmFscyB1c3VhbGx5IG9ubHkgYXZhaWxhYmxlIGluIGEg
YnJvd3NlciBlbnZpcm9ubWVudCB1bmxlc3MgdGhleSB3ZXJlIGV4cGxpY2l0
bHkgZGVmaW5lZCksIHdoaWNoIHdpbGwgcmV0dXJuIGB0cnVlYCBpZiBvbmUg
b2YgdGhlbSBpcyBgdW5kZWZpbmVkYC4KYHR5cGVvZmAgYWxsb3dzIGdsb2Jh
bHMgdG8gYmUgY2hlY2tlZCBmb3IgZXhpc3RlbmNlIHdpdGhvdXQgdGhyb3dp
bmcgYSBgUmVmZXJlbmNlRXJyb3JgLgpJZiBib3RoIG9mIHRoZW0gYXJlIG5v
dCBgdW5kZWZpbmVkYCwgdGhlbiB0aGUgY3VycmVudCBlbnZpcm9ubWVudCBp
cyBhc3N1bWVkIHRvIGJlIGEgYnJvd3Nlci4KCmBgYGpzCmNvbnN0IGlzQnJv
d3NlciA9ICgpID0+ICFbdHlwZW9mIHdpbmRvdywgdHlwZW9mIGRvY3VtZW50
XS5pbmNsdWRlcygndW5kZWZpbmVkJyk7CmBgYAoKPGRldGFpbHM+CjxzdW1t
YXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKaXNCcm93c2VyKCk7IC8v
IHRydWUgKGJyb3dzZXIpCmlzQnJvd3NlcigpOyAvLyBmYWxzZSAoTm9kZSkK
YGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVu
dHMpCgojIyMgbW9zdFBlcmZvcm1hbnQKClJldHVybnMgdGhlIGluZGV4IG9m
IHRoZSBmdW5jdGlvbiBpbiBhbiBhcnJheSBvZiBmdW5jdGlvbnMgd2hpY2gg
ZXhlY3V0ZWQgdGhlIGZhc3Rlc3QuCgpVc2UgYEFycmF5LnByb3RvdHlwZS5t
YXAoKWAgdG8gZ2VuZXJhdGUgYW4gYXJyYXkgd2hlcmUgZWFjaCB2YWx1ZSBp
cyB0aGUgdG90YWwgdGltZSB0YWtlbiB0byBleGVjdXRlIHRoZSBmdW5jdGlv
biBhZnRlciBgaXRlcmF0aW9uc2AgdGltZXMuIFVzZSB0aGUgZGlmZmVyZW5j
ZSBpbiBgcGVyZm9ybWFuY2Uubm93KClgIHZhbHVlcyBiZWZvcmUgYW5kIGFm
dGVyIHRvIGdldCB0aGUgdG90YWwgdGltZSBpbiBtaWxsaXNlY29uZHMgdG8g
YSBoaWdoIGRlZ3JlZSBvZiBhY2N1cmFjeS4KVXNlIGBNYXRoLm1pbigpYCB0
byBmaW5kIHRoZSBtaW5pbXVtIGV4ZWN1dGlvbiB0aW1lLCBhbmQgcmV0dXJu
IHRoZSBpbmRleCBvZiB0aGF0IHNob3J0ZXN0IHRpbWUgd2hpY2ggY29ycmVz
cG9uZHMgdG8gdGhlIGluZGV4IG9mIHRoZSBtb3N0IHBlcmZvcm1hbnQgZnVu
Y3Rpb24uCk9taXQgdGhlIHNlY29uZCBhcmd1bWVudCwgYGl0ZXJhdGlvbnNg
LCB0byB1c2UgYSBkZWZhdWx0IG9mIDEwLDAwMCBpdGVyYXRpb25zLiBUaGUg
bW9yZSBpdGVyYXRpb25zLCB0aGUgbW9yZSByZWxpYWJsZSB0aGUgcmVzdWx0
IGJ1dCB0aGUgbG9uZ2VyIGl0IHdpbGwgdGFrZS4KCmBgYGpzCmNvbnN0IG1v
c3RQZXJmb3JtYW50ID0gKGZucywgaXRlcmF0aW9ucyA9IDEwMDAwKSA9PiB7
CiAgY29uc3QgdGltZXMgPSBmbnMubWFwKGZuID0+IHsKICAgIGNvbnN0IGJl
Zm9yZSA9IHBlcmZvcm1hbmNlLm5vdygpOwogICAgZm9yIChsZXQgaSA9IDA7
IGkgPCBpdGVyYXRpb25zOyBpKyspIGZuKCk7CiAgICByZXR1cm4gcGVyZm9y
bWFuY2Uubm93KCkgLSBiZWZvcmU7CiAgfSk7CiAgcmV0dXJuIHRpbWVzLmlu
ZGV4T2YoTWF0aC5taW4oLi4udGltZXMpKTsKfTsKYGBgCgo8ZGV0YWlscz4K
PHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+CgpgYGBqcwptb3N0UGVyZm9y
bWFudChbCiAgKCkgPT4gewogICAgLy8gTG9vcHMgdGhyb3VnaCB0aGUgZW50
aXJlIGFycmF5IGJlZm9yZSByZXR1cm5pbmcgYGZhbHNlYAogICAgWzEsIDIs
IDMsIDQsIDUsIDYsIDcsIDgsIDksICcxMCddLmV2ZXJ5KGVsID0+IHR5cGVv
ZiBlbCA9PT0gJ251bWJlcicpOwogIH0sCiAgKCkgPT4gewogICAgLy8gT25s
eSBuZWVkcyB0byByZWFjaCBpbmRleCBgMWAgYmVmb3JlIHJldHVybmluZyBm
YWxzZQogICAgWzEsICcyJywgMywgNCwgNSwgNiwgNywgOCwgOSwgMTBdLmV2
ZXJ5KGVsID0+IHR5cGVvZiBlbCA9PT0gJ251bWJlcicpOwogIH0KXSk7IC8v
IDEKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29u
dGVudHMpCgojIyMgbnRoQXJnCgpDcmVhdGVzIGEgZnVuY3Rpb24gdGhhdCBn
ZXRzIHRoZSBhcmd1bWVudCBhdCBpbmRleCBgbmAuIElmIGBuYCBpcyBuZWdh
dGl2ZSwgdGhlIG50aCBhcmd1bWVudCBmcm9tIHRoZSBlbmQgaXMgcmV0dXJu
ZWQuCgpVc2UgYEFycmF5LnByb3RvdHlwZS5zbGljZSgpYCB0byBnZXQgdGhl
IGRlc2lyZWQgYXJndW1lbnQgYXQgaW5kZXggYG5gLgoKYGBganMKY29uc3Qg
bnRoQXJnID0gbiA9PiAoLi4uYXJncykgPT4gYXJncy5zbGljZShuKVswXTsK
YGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+Cgpg
YGBqcwpjb25zdCB0aGlyZCA9IG50aEFyZygyKTsKdGhpcmQoMSwgMiwgMyk7
IC8vIDMKdGhpcmQoMSwgMik7IC8vIHVuZGVmaW5lZApjb25zdCBsYXN0ID0g
bnRoQXJnKC0xKTsKbGFzdCgxLCAyLCAzLCA0LCA1KTsgLy8gNQpgYGAKPC9k
ZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMj
IyBvYmplY3RUb1F1ZXJ5U3RyaW5nCgpSZXR1cm5zIGEgcXVlcnkgc3RyaW5n
IGdlbmVyYXRlZCBmcm9tIHRoZSBrZXktdmFsdWUgcGFpcnMgb2YgdGhlIGdp
dmVuIG9iamVjdC4KClVzZSBgQXJyYXkucHJvdG90eXBlLnJlZHVjZSgpYCBv
biBgT2JqZWN0LmVudHJpZXMocXVlcnlQYXJhbWV0ZXJzKWAgdG8gY3JlYXRl
IHRoZSBxdWVyeSBzdHJpbmcuCkRldGVybWluZSB0aGUgYHN5bWJvbGAgdG8g
YmUgZWl0aGVyIGA/YCBvciBgJmAgYmFzZWQgb24gdGhlIGBpbmRleGAgYW5k
IGNvbmNhdGVuYXRlIGB2YWxgIHRvIGBxdWVyeVN0cmluZ2Agb25seSBpZiBp
dCdzIGEgc3RyaW5nLgpSZXR1cm4gdGhlIGBxdWVyeVN0cmluZ2Agb3IgYW4g
ZW1wdHkgc3RyaW5nIHdoZW4gdGhlIGBxdWVyeVBhcmFtZXRlcnNgIGFyZSBm
YWxzeS4KCmBgYGpzCmNvbnN0IG9iamVjdFRvUXVlcnlTdHJpbmcgPSBxdWVy
eVBhcmFtZXRlcnMgPT4gewogIHJldHVybiBxdWVyeVBhcmFtZXRlcnMKICAg
ID8gT2JqZWN0LmVudHJpZXMocXVlcnlQYXJhbWV0ZXJzKS5yZWR1Y2UoKHF1
ZXJ5U3RyaW5nLCBba2V5LCB2YWxdLCBpbmRleCkgPT4gewogICAgICBjb25z
dCBzeW1ib2wgPSBpbmRleCA9PT0gMCA/ICc/JyA6ICcmJzsKICAgICAgcXVl
cnlTdHJpbmcgKz0gdHlwZW9mIHZhbCA9PT0gJ3N0cmluZycgPyBgJHtzeW1i
b2x9JHtrZXl9PSR7dmFsfWAgOiAnJzsKICAgICAgcmV0dXJuIHF1ZXJ5U3Ry
aW5nOwogICAgfSwgJycpCiAgICA6ICcnOwp9OwpgYGAKCjxkZXRhaWxzPgo8
c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpzCm9iamVjdFRvUXVl
cnlTdHJpbmcoeyBwYWdlOiAnMScsIHNpemU6ICcya2cnLCBrZXk6IHVuZGVm
aW5lZCB9KTsgLy8gJz9wYWdlPTEmc2l6ZT0ya2cnCmBgYAo8L2RldGFpbHM+
Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHBhcnNl
Q29va2llCgpQYXJzZSBhbiBIVFRQIENvb2tpZSBoZWFkZXIgc3RyaW5nIGFu
ZCByZXR1cm4gYW4gb2JqZWN0IG9mIGFsbCBjb29raWUgbmFtZS12YWx1ZSBw
YWlycy4KClVzZSBgU3RyaW5nLnByb3RvdHlwZS5zcGxpdCgnOycpYCB0byBz
ZXBhcmF0ZSBrZXktdmFsdWUgcGFpcnMgZnJvbSBlYWNoIG90aGVyLgpVc2Ug
YEFycmF5LnByb3RvdHlwZS5tYXAoKWAgYW5kIGBTdHJpbmcucHJvdG90eXBl
LnNwbGl0KCc9JylgIHRvIHNlcGFyYXRlIGtleXMgZnJvbSB2YWx1ZXMgaW4g
ZWFjaCBwYWlyLgpVc2UgYEFycmF5LnByb3RvdHlwZS5yZWR1Y2UoKWAgYW5k
IGBkZWNvZGVVUklDb21wb25lbnQoKWAgdG8gY3JlYXRlIGFuIG9iamVjdCB3
aXRoIGFsbCBrZXktdmFsdWUgcGFpcnMuCgpgYGBqcwpjb25zdCBwYXJzZUNv
b2tpZSA9IHN0ciA9PgogIHN0cgogICAgLnNwbGl0KCc7JykKICAgIC5tYXAo
diA9PiB2LnNwbGl0KCc9JykpCiAgICAucmVkdWNlKChhY2MsIHYpID0+IHsK
ICAgICAgYWNjW2RlY29kZVVSSUNvbXBvbmVudCh2WzBdLnRyaW0oKSldID0g
ZGVjb2RlVVJJQ29tcG9uZW50KHZbMV0udHJpbSgpKTsKICAgICAgcmV0dXJu
IGFjYzsKICAgIH0sIHt9KTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhh
bXBsZXM8L3N1bW1hcnk+CgpgYGBqcwpwYXJzZUNvb2tpZSgnZm9vPWJhcjsg
ZXF1YXRpb249RSUzRG1jJTVFMicpOyAvLyB7IGZvbzogJ2JhcicsIGVxdWF0
aW9uOiAnRT1tY14yJyB9CmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNr
IHRvIHRvcF0oI2NvbnRlbnRzKQoKIyMjIHByZXR0eUJ5dGVzICFbYWR2YW5j
ZWRdKC9hZHZhbmNlZC5zdmcpCgpDb252ZXJ0cyBhIG51bWJlciBpbiBieXRl
cyB0byBhIGh1bWFuLXJlYWRhYmxlIHN0cmluZy4KClVzZSBhbiBhcnJheSBk
aWN0aW9uYXJ5IG9mIHVuaXRzIHRvIGJlIGFjY2Vzc2VkIGJhc2VkIG9uIHRo
ZSBleHBvbmVudC4KVXNlIGBOdW1iZXIudG9QcmVjaXNpb24oKWAgdG8gdHJ1
bmNhdGUgdGhlIG51bWJlciB0byBhIGNlcnRhaW4gbnVtYmVyIG9mIGRpZ2l0
cy4KUmV0dXJuIHRoZSBwcmV0dGlmaWVkIHN0cmluZyBieSBidWlsZGluZyBp
dCB1cCwgdGFraW5nIGludG8gYWNjb3VudCB0aGUgc3VwcGxpZWQgb3B0aW9u
cyBhbmQgd2hldGhlciBpdCBpcyBuZWdhdGl2ZSBvciBub3QuCk9taXQgdGhl
IHNlY29uZCBhcmd1bWVudCwgYHByZWNpc2lvbmAsIHRvIHVzZSBhIGRlZmF1
bHQgcHJlY2lzaW9uIG9mIGAzYCBkaWdpdHMuCk9taXQgdGhlIHRoaXJkIGFy
Z3VtZW50LCBgYWRkU3BhY2VgLCB0byBhZGQgc3BhY2UgYmV0d2VlbiB0aGUg
bnVtYmVyIGFuZCB1bml0IGJ5IGRlZmF1bHQuCgpgYGBqcwpjb25zdCBwcmV0
dHlCeXRlcyA9IChudW0sIHByZWNpc2lvbiA9IDMsIGFkZFNwYWNlID0gdHJ1
ZSkgPT4gewogIGNvbnN0IFVOSVRTID0gWydCJywgJ0tCJywgJ01CJywgJ0dC
JywgJ1RCJywgJ1BCJywgJ0VCJywgJ1pCJywgJ1lCJ107CiAgaWYgKE1hdGgu
YWJzKG51bSkgPCAxKSByZXR1cm4gbnVtICsgKGFkZFNwYWNlID8gJyAnIDog
JycpICsgVU5JVFNbMF07CiAgY29uc3QgZXhwb25lbnQgPSBNYXRoLm1pbihN
YXRoLmZsb29yKE1hdGgubG9nMTAobnVtIDwgMCA/IC1udW0gOiBudW0pIC8g
MyksIFVOSVRTLmxlbmd0aCAtIDEpOwogIGNvbnN0IG4gPSBOdW1iZXIoKChu
dW0gPCAwID8gLW51bSA6IG51bSkgLyAxMDAwICoqIGV4cG9uZW50KS50b1By
ZWNpc2lvbihwcmVjaXNpb24pKTsKICByZXR1cm4gKG51bSA8IDAgPyAnLScg
OiAnJykgKyBuICsgKGFkZFNwYWNlID8gJyAnIDogJycpICsgVU5JVFNbZXhw
b25lbnRdOwp9OwpgYGAKCjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwv
c3VtbWFyeT4KCmBgYGpzCnByZXR0eUJ5dGVzKDEwMDApOyAvLyAiMSBLQiIK
cHJldHR5Qnl0ZXMoLTI3MTQ1NDI0MzIzLjU4MjEsIDUpOyAvLyAiLTI3LjE0
NSBHQiIKcHJldHR5Qnl0ZXMoMTIzNDU2Nzg5LCAzLCBmYWxzZSk7IC8vICIx
MjNNQiIKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgj
Y29udGVudHMpCgojIyMgcmFuZG9tSGV4Q29sb3JDb2RlCgpHZW5lcmF0ZXMg
YSByYW5kb20gaGV4YWRlY2ltYWwgY29sb3IgY29kZS4KClVzZSBgTWF0aC5y
YW5kb21gIHRvIGdlbmVyYXRlIGEgcmFuZG9tIDI0LWJpdCg2eDRiaXRzKSBo
ZXhhZGVjaW1hbCBudW1iZXIuIFVzZSBiaXQgc2hpZnRpbmcgYW5kIHRoZW4g
Y29udmVydCBpdCB0byBhbiBoZXhhZGVjaW1hbCBTdHJpbmcgdXNpbmcgYHRv
U3RyaW5nKDE2KWAuCgpgYGBqcwpjb25zdCByYW5kb21IZXhDb2xvckNvZGUg
PSAoKSA9PiB7CiAgbGV0IG4gPSAoTWF0aC5yYW5kb20oKSAqIDB4ZmZmZmYg
KiAxMDAwMDAwKS50b1N0cmluZygxNik7CiAgcmV0dXJuICcjJyArIG4uc2xp
Y2UoMCwgNik7Cn07CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVz
PC9zdW1tYXJ5PgoKYGBganMKcmFuZG9tSGV4Q29sb3JDb2RlKCk7IC8vICIj
ZTM0MTU1IgpgYGAKPC9kZXRhaWxzPgoKPGJyPlvirIYgQmFjayB0byB0b3Bd
KCNjb250ZW50cykKCiMjIyBSR0JUb0hleAoKQ29udmVydHMgdGhlIHZhbHVl
cyBvZiBSR0IgY29tcG9uZW50cyB0byBhIGNvbG9yIGNvZGUuCgpDb252ZXJ0
IGdpdmVuIFJHQiBwYXJhbWV0ZXJzIHRvIGhleGFkZWNpbWFsIHN0cmluZyB1
c2luZyBiaXR3aXNlIGxlZnQtc2hpZnQgb3BlcmF0b3IgKGA8PGApIGFuZCBg
dG9TdHJpbmcoMTYpYCwgdGhlbiBgU3RyaW5nLnBhZFN0YXJ0KDYsJzAnKWAg
dG8gZ2V0IGEgNi1kaWdpdCBoZXhhZGVjaW1hbCB2YWx1ZS4KCmBgYGpzCmNv
bnN0IFJHQlRvSGV4ID0gKHIsIGcsIGIpID0+ICgociA8PCAxNikgKyAoZyA8
PCA4KSArIGIpLnRvU3RyaW5nKDE2KS5wYWRTdGFydCg2LCAnMCcpOwpgYGAK
CjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpz
ClJHQlRvSGV4KDI1NSwgMTY1LCAxKTsgLy8gJ2ZmYTUwMScKYGBgCjwvZGV0
YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVudHMpCgojIyMg
c2VyaWFsaXplQ29va2llCgpTZXJpYWxpemUgYSBjb29raWUgbmFtZS12YWx1
ZSBwYWlyIGludG8gYSBTZXQtQ29va2llIGhlYWRlciBzdHJpbmcuCgpVc2Ug
dGVtcGxhdGUgbGl0ZXJhbHMgYW5kIGBlbmNvZGVVUklDb21wb25lbnQoKWAg
dG8gY3JlYXRlIHRoZSBhcHByb3ByaWF0ZSBzdHJpbmcuCgpgYGBqcwpjb25z
dCBzZXJpYWxpemVDb29raWUgPSAobmFtZSwgdmFsKSA9PiBgJHtlbmNvZGVV
UklDb21wb25lbnQobmFtZSl9PSR7ZW5jb2RlVVJJQ29tcG9uZW50KHZhbCl9
YDsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1bW1hcnk+
CgpgYGBqcwpzZXJpYWxpemVDb29raWUoJ2ZvbycsICdiYXInKTsgLy8gJ2Zv
bz1iYXInCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0o
I2NvbnRlbnRzKQoKIyMjIHRpbWVUYWtlbgoKTWVhc3VyZXMgdGhlIHRpbWUg
dGFrZW4gYnkgYSBmdW5jdGlvbiB0byBleGVjdXRlLgoKVXNlIGBjb25zb2xl
LnRpbWUoKWAgYW5kIGBjb25zb2xlLnRpbWVFbmQoKWAgdG8gbWVhc3VyZSB0
aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSBzdGFydCBhbmQgZW5kIHRpbWVz
IHRvIGRldGVybWluZSBob3cgbG9uZyB0aGUgY2FsbGJhY2sgdG9vayB0byBl
eGVjdXRlLgoKYGBganMKY29uc3QgdGltZVRha2VuID0gY2FsbGJhY2sgPT4g
ewogIGNvbnNvbGUudGltZSgndGltZVRha2VuJyk7CiAgY29uc3QgciA9IGNh
bGxiYWNrKCk7CiAgY29uc29sZS50aW1lRW5kKCd0aW1lVGFrZW4nKTsKICBy
ZXR1cm4gcjsKfTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8
L3N1bW1hcnk+CgpgYGBqcwp0aW1lVGFrZW4oKCkgPT4gTWF0aC5wb3coMiwg
MTApKTsgLy8gMTAyNCwgKGxvZ2dlZCk6IHRpbWVUYWtlbjogMC4wMjA5OTYw
OTM3NW1zCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0o
I2NvbnRlbnRzKQoKIyMjIHRvQ3VycmVuY3kKClRha2UgYSBudW1iZXIgYW5k
IHJldHVybiBzcGVjaWZpZWQgY3VycmVuY3kgZm9ybWF0dGluZy4KClVzZSBg
SW50bC5OdW1iZXJGb3JtYXRgIHRvIGVuYWJsZSBjb3VudHJ5IC8gY3VycmVu
Y3kgc2Vuc2l0aXZlIGZvcm1hdHRpbmcuCgpgYGBqcwpjb25zdCB0b0N1cnJl
bmN5ID0gKG4sIGN1cnIsIExhbmd1YWdlRm9ybWF0ID0gdW5kZWZpbmVkKSA9
PgogIEludGwuTnVtYmVyRm9ybWF0KExhbmd1YWdlRm9ybWF0LCB7IHN0eWxl
OiAnY3VycmVuY3knLCBjdXJyZW5jeTogY3VyciB9KS5mb3JtYXQobik7CmBg
YAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBg
anMKdG9DdXJyZW5jeSgxMjM0NTYuNzg5LCAnRVVSJyk7IC8vIOKCrDEyMyw0
NTYuNzkgIHwgY3VycmVuY3k6IEV1cm8gfCBjdXJyZW5jeUxhbmdGb3JtYXQ6
IExvY2FsCnRvQ3VycmVuY3koMTIzNDU2Ljc4OSwgJ1VTRCcsICdlbi11cycp
OyAvLyAkMTIzLDQ1Ni43OSAgfCBjdXJyZW5jeTogVVMgRG9sbGFyIHwgY3Vy
cmVuY3lMYW5nRm9ybWF0OiBFbmdsaXNoIChVbml0ZWQgU3RhdGVzKQp0b0N1
cnJlbmN5KDEyMzQ1Ni43ODksICdVU0QnLCAnZmEnKTsgLy8g27Hbstuz2azb
tNu127bZq9u327kg2JwkIHwgY3VycmVuY3k6IFVTIERvbGxhciB8IGN1cnJl
bmN5TGFuZ0Zvcm1hdDogRmFyc2kKdG9DdXJyZW5jeSgzMjIzNDI0MzY0MjMu
MjQzNSwgJ0pQWScpOyAvLyDCpTMyMiwzNDIsNDM2LDQyMyB8IGN1cnJlbmN5
OiBKYXBhbmVzZSBZZW4gfCBjdXJyZW5jeUxhbmdGb3JtYXQ6IExvY2FsCnRv
Q3VycmVuY3koMzIyMzQyNDM2NDIzLjI0MzUsICdKUFknLCAnZmknKTsgLy8g
MzIyIDM0MiA0MzYgNDIzIMKlIHwgY3VycmVuY3k6IEphcGFuZXNlIFllbiB8
IGN1cnJlbmN5TGFuZ0Zvcm1hdDogRmlubmlzaApgYGAKPC9kZXRhaWxzPgoK
PGJyPlvirIYgQmFjayB0byB0b3BdKCNjb250ZW50cykKCiMjIyB0b0RlY2lt
YWxNYXJrCgpVc2UgYHRvTG9jYWxlU3RyaW5nKClgIHRvIGNvbnZlcnQgYSBm
bG9hdC1wb2ludCBhcml0aG1ldGljIHRvIHRoZSBbRGVjaW1hbCBtYXJrXSho
dHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9EZWNpbWFsX21hcmspIGZv
cm0uIEl0IG1ha2VzIGEgY29tbWEgc2VwYXJhdGVkIHN0cmluZyBmcm9tIGEg
bnVtYmVyLgoKYGBganMKY29uc3QgdG9EZWNpbWFsTWFyayA9IG51bSA9PiBu
dW0udG9Mb2NhbGVTdHJpbmcoJ2VuLVVTJyk7CmBgYAoKPGRldGFpbHM+Cjxz
dW1tYXJ5PkV4YW1wbGVzPC9zdW1tYXJ5PgoKYGBganMKdG9EZWNpbWFsTWFy
aygxMjMwNTAzMDM4OC45MDg3KTsgLy8gIjEyLDMwNSwwMzAsMzg4LjkwOSIK
YGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29udGVu
dHMpCgojIyMgdG9PcmRpbmFsU3VmZml4CgpBZGRzIGFuIG9yZGluYWwgc3Vm
Zml4IHRvIGEgbnVtYmVyLgoKVXNlIHRoZSBtb2R1bG8gb3BlcmF0b3IgKGAl
YCkgdG8gZmluZCB2YWx1ZXMgb2Ygc2luZ2xlIGFuZCB0ZW5zIGRpZ2l0cy4K
RmluZCB3aGljaCBvcmRpbmFsIHBhdHRlcm4gZGlnaXRzIG1hdGNoLgpJZiBk
aWdpdCBpcyBmb3VuZCBpbiB0ZWVucyBwYXR0ZXJuLCB1c2UgdGVlbnMgb3Jk
aW5hbC4KCmBgYGpzCmNvbnN0IHRvT3JkaW5hbFN1ZmZpeCA9IG51bSA9PiB7
CiAgY29uc3QgaW50ID0gcGFyc2VJbnQobnVtKSwKICAgIGRpZ2l0cyA9IFtp
bnQgJSAxMCwgaW50ICUgMTAwXSwKICAgIG9yZGluYWxzID0gWydzdCcsICdu
ZCcsICdyZCcsICd0aCddLAogICAgb1BhdHRlcm4gPSBbMSwgMiwgMywgNF0s
CiAgICB0UGF0dGVybiA9IFsxMSwgMTIsIDEzLCAxNCwgMTUsIDE2LCAxNywg
MTgsIDE5XTsKICByZXR1cm4gb1BhdHRlcm4uaW5jbHVkZXMoZGlnaXRzWzBd
KSAmJiAhdFBhdHRlcm4uaW5jbHVkZXMoZGlnaXRzWzFdKQogICAgPyBpbnQg
KyBvcmRpbmFsc1tkaWdpdHNbMF0gLSAxXQogICAgOiBpbnQgKyBvcmRpbmFs
c1szXTsKfTsKYGBgCgo8ZGV0YWlscz4KPHN1bW1hcnk+RXhhbXBsZXM8L3N1
bW1hcnk+CgpgYGBqcwp0b09yZGluYWxTdWZmaXgoJzEyMycpOyAvLyAiMTIz
cmQiCmBgYAo8L2RldGFpbHM+Cgo8YnI+W+KshiBCYWNrIHRvIHRvcF0oI2Nv
bnRlbnRzKQoKIyMjIHZhbGlkYXRlTnVtYmVyCgpSZXR1cm5zIGB0cnVlYCBp
ZiB0aGUgZ2l2ZW4gdmFsdWUgaXMgYSBudW1iZXIsIGBmYWxzZWAgb3RoZXJ3
aXNlLgoKVXNlIGAhaXNOYU4oKWAgaW4gY29tYmluYXRpb24gd2l0aCBgcGFy
c2VGbG9hdCgpYCB0byBjaGVjayBpZiB0aGUgYXJndW1lbnQgaXMgYSBudW1i
ZXIuClVzZSBgaXNGaW5pdGUoKWAgdG8gY2hlY2sgaWYgdGhlIG51bWJlciBp
cyBmaW5pdGUuClVzZSBgTnVtYmVyKClgIHRvIGNoZWNrIGlmIHRoZSBjb2Vy
Y2lvbiBob2xkcy4KCmBgYGpzCmNvbnN0IHZhbGlkYXRlTnVtYmVyID0gbiA9
PiAhaXNOYU4ocGFyc2VGbG9hdChuKSkgJiYgaXNGaW5pdGUobikgJiYgTnVt
YmVyKG4pID09IG47CmBgYAoKPGRldGFpbHM+CjxzdW1tYXJ5PkV4YW1wbGVz
PC9zdW1tYXJ5PgoKYGBganMKdmFsaWRhdGVOdW1iZXIoJzEwJyk7IC8vIHRy
dWUKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29u
dGVudHMpCgojIyMgeWVzTm8KClJldHVybnMgYHRydWVgIGlmIHRoZSBzdHJp
bmcgaXMgYHlgL2B5ZXNgIG9yIGBmYWxzZWAgaWYgdGhlIHN0cmluZyBpcyBg
bmAvYG5vYC4KClVzZSBgUmVnRXhwLnRlc3QoKWAgdG8gY2hlY2sgaWYgdGhl
IHN0cmluZyBldmFsdWF0ZXMgdG8gYHkveWVzYCBvciBgbi9ub2AuCk9taXQg
dGhlIHNlY29uZCBhcmd1bWVudCwgYGRlZmAgdG8gc2V0IHRoZSBkZWZhdWx0
IGFuc3dlciBhcyBgbm9gLgoKYGBganMKY29uc3QgeWVzTm8gPSAodmFsLCBk
ZWYgPSBmYWxzZSkgPT4KICAvXih5fHllcykkL2kudGVzdCh2YWwpID8gdHJ1
ZSA6IC9eKG58bm8pJC9pLnRlc3QodmFsKSA/IGZhbHNlIDogZGVmOwpgYGAK
CjxkZXRhaWxzPgo8c3VtbWFyeT5FeGFtcGxlczwvc3VtbWFyeT4KCmBgYGpz
Cnllc05vKCdZJyk7IC8vIHRydWUKeWVzTm8oJ3llcycpOyAvLyB0cnVlCnll
c05vKCdObycpOyAvLyBmYWxzZQp5ZXNObygnRm9vJywgdHJ1ZSk7IC8vIHRy
dWUKYGBgCjwvZGV0YWlscz4KCjxicj5b4qyGIEJhY2sgdG8gdG9wXSgjY29u
dGVudHMpCgojIyBDb2xsYWJvcmF0b3JzCgp8IFs8aW1nIHNyYz0iaHR0cHM6
Ly9naXRodWIuY29tL0NoYWxhcmFuZ2Vsby5wbmciIHdpZHRoPSIxMDBweDsi
Lz5dKGh0dHBzOi8vZ2l0aHViLmNvbS9DaGFsYXJhbmdlbG8pPGJyLz4gWzxz
dWI+QW5nZWxvcyBDaGFsYXJpczwvc3ViPl0oaHR0cHM6Ly9naXRodWIuY29t
L0NoYWxhcmFuZ2VsbykgfCBbPGltZyBzcmM9Imh0dHBzOi8vZ2l0aHViLmNv
bS9mbHh3dS5wbmciIHdpZHRoPSIxMDBweDsiLz5dKGh0dHBzOi8vZ2l0aHVi
LmNvbS9mbHh3dSk8YnIvPiBbPHN1Yj5GZWxpeCBXdTwvc3ViPl0oaHR0cHM6
Ly9naXRodWIuY29tL1BsNGd1ZSkgfCBbPGltZyBzcmM9Imh0dHBzOi8vZ2l0
aHViLmNvbS9mZWplczcxMy5wbmciIHdpZHRoPSIxMDBweDsiLz5dKGh0dHBz
Oi8vZ2l0aHViLmNvbS9mZWplczcxMyk8YnIvPiBbPHN1Yj5TdGVmYW4gRmVq
ZcWhPC9zdWI+XShodHRwczovL2dpdGh1Yi5jb20vZmVqZXM3MTMpICB8IFs8
aW1nIHNyYz0iaHR0cHM6Ly9naXRodWIuY29tL2tpbmdkYXZpZG1hcnRpbnMu
cG5nIiB3aWR0aD0iMTAwcHg7Ii8+XShodHRwczovL2dpdGh1Yi5jb20va2lu
Z2RhdmlkbWFydGlucyk8YnIvPiBbPHN1Yj5LaW5nIERhdmlkIE1hcnRpbnM8
L3N1Yj5dKGh0dHBzOi8vZ2l0aHViLmNvbS9pYW1zb29yZW5hKSB8IFs8aW1n
IHNyYz0iaHR0cHM6Ly9naXRodWIuY29tL2lhbXNvb3JlbmEucG5nIiB3aWR0
aD0iMTAwcHg7Ii8+XShodHRwczovL2dpdGh1Yi5jb20vaWFtc29vcmVuYSk8
YnIvPiBbPHN1Yj5Tb29yZW5hIFNvbGVpbWFuaTwvc3ViPl0oaHR0cHM6Ly9n
aXRodWIuY29tL2lhbXNvb3JlbmEpIHwKfCAtLS0gfCAtLS0gfCAtLS0gfCAt
LS0gfCAtLS0gfAp8IFs8aW1nIHNyYz0iaHR0cHM6Ly9naXRodWIuY29tL2Vs
ZGVyaHNvdXphLnBuZyIgd2lkdGg9IjEwMHB4OyIvPl0oaHR0cHM6Ly9naXRo
dWIuY29tL2VsZGVyaHNvdXphKTxici8+IFs8c3ViPkVsZGVyIEhlbnJpcXVl
IFNvdXphPC9zdWI+XShodHRwczovL2dpdGh1Yi5jb20vZWxkZXJoc291emEp
IHwgWzxpbWcgc3JjPSJodHRwczovL2dpdGh1Yi5jb20vc2thdGNhdDMxLnBu
ZyIgd2lkdGg9IjEwMHB4OyIvPl0oaHR0cHM6Ly9naXRodWIuY29tL3NrYXRj
YXQzMSk8YnIvPiBbPHN1Yj5Sb2JlcnQgTWVubmVsbDwvc3ViPl0oaHR0cHM6
Ly9naXRodWIuY29tL3NrYXRjYXQzMSkgfCBbPGltZyBzcmM9Imh0dHBzOi8v
Z2l0aHViLmNvbS9hdG9taWtzLnBuZyIgd2lkdGg9IjEwMHB4OyIvPl0oaHR0
cHM6Ly9naXRodWIuY29tL2F0b21pa3MpPGJyLz4gWzxzdWI+YXRvbWlrczwv
c3ViPl0oaHR0cHM6Ly9naXRodWIuY29tL2F0b21pa3MpICB8CgoKIyMgQ3Jl
ZGl0cwoKKkxvZ29zIG1hZGUgYnkgW0FuZ2Vsb3MgQ2hhbGFyaXNdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9DaGFsYXJhbmdlbG8pIGFyZSBsaWNlbnNlZCB1bmRl
ciB0aGUgW01JVF0oaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9N
SVQpIGxpY2Vuc2UuKgoqVGhpcyBSRUFETUUgaXMgYnVpbHQgdXNpbmcgW21h
cmtkb3duLWJ1aWxkZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS8zMC1zZWNvbmRz
L21hcmtkb3duLWJ1aWxkZXIpLioKCg==
",,52610,"bGFuZ3VhZ2U6IG5vZGVfanMKY2FjaGU6CiAgZGlyZWN0b3JpZXM6CiAgICAt
IG5vZGVfbW9kdWxlcwpub2RlX2pzOgotIGx0cy8qCmJlZm9yZV9pbnN0YWxs
OgotIG5wbSBpbnN0YWxsIC1nIHNlbWlzdGFuZGFyZAotIG5wbSBpbnN0YWxs
IC1nIHByZXR0aWVyCi0gbnBtIGluc3RhbGwgLWcgZXNsaW50CnNjcmlwdDoK
LSBucG0gcnVuIGxpbnRlcgotIG5wbSBydW4gZXh0cmFjdG9yCi0gbnBtIHJ1
biBidWlsZGVyCi0gbnBtIHJ1biBwYWNrYWdlcgotIG5wbSBydW4gdGVzdGVy
Ci0gbnBtIHJ1biB2c2NvZGVyCmFmdGVyX3N1Y2Nlc3M6Ci0gY2htb2QgK3gg
LnRyYXZpcy9wdXNoLnNoCi0gLnRyYXZpcy9wdXNoLnNoCmdyb3VwOiBkZXBy
ZWNhdGVkLTIwMTdRNAo=
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
