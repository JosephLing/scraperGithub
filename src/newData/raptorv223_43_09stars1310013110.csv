name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'logrus',13628513,"b'Structured, pluggable logging for Go.'",b'Go',177,13105,,294,False,b'https://api.github.com/repos/sirupsen/logrus/forks',"IyBMb2dydXMgPGltZyBzcmM9Imh0dHA6Ly9pLmltZ3VyLmNvbS9oVGVWd21K
LnBuZyIgd2lkdGg9IjQwIiBoZWlnaHQ9IjQwIiBhbHQ9Ijp3YWxydXM6IiBj
bGFzcz0iZW1vamkiIHRpdGxlPSI6d2FscnVzOiIvPiZuYnNwO1shW0J1aWxk
IFN0YXR1c10oaHR0cHM6Ly90cmF2aXMtY2kub3JnL3NpcnVwc2VuL2xvZ3J1
cy5zdmc/YnJhbmNoPW1hc3RlcildKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9z
aXJ1cHNlbi9sb2dydXMpJm5ic3A7WyFbR29Eb2NdKGh0dHBzOi8vZ29kb2Mu
b3JnL2dpdGh1Yi5jb20vc2lydXBzZW4vbG9ncnVzP3N0YXR1cy5zdmcpXSho
dHRwczovL2dvZG9jLm9yZy9naXRodWIuY29tL3NpcnVwc2VuL2xvZ3J1cykK
CkxvZ3J1cyBpcyBhIHN0cnVjdHVyZWQgbG9nZ2VyIGZvciBHbyAoZ29sYW5n
KSwgY29tcGxldGVseSBBUEkgY29tcGF0aWJsZSB3aXRoCnRoZSBzdGFuZGFy
ZCBsaWJyYXJ5IGxvZ2dlci4KCioqU2VlaW5nIHdlaXJkIGNhc2Utc2Vuc2l0
aXZlIHByb2JsZW1zPyoqIEl0J3MgaW4gdGhlIHBhc3QgYmVlbiBwb3NzaWJs
ZSB0bwppbXBvcnQgTG9ncnVzIGFzIGJvdGggdXBwZXItIGFuZCBsb3dlci1j
YXNlLiBEdWUgdG8gdGhlIEdvIHBhY2thZ2UgZW52aXJvbm1lbnQsCnRoaXMg
Y2F1c2VkIGlzc3VlcyBpbiB0aGUgY29tbXVuaXR5IGFuZCB3ZSBuZWVkZWQg
YSBzdGFuZGFyZC4gU29tZSBlbnZpcm9ubWVudHMKZXhwZXJpZW5jZWQgcHJv
YmxlbXMgd2l0aCB0aGUgdXBwZXItY2FzZSB2YXJpYW50LCBzbyB0aGUgbG93
ZXItY2FzZSB3YXMgZGVjaWRlZC4KRXZlcnl0aGluZyB1c2luZyBgbG9ncnVz
YCB3aWxsIG5lZWQgdG8gdXNlIHRoZSBsb3dlci1jYXNlOgpgZ2l0aHViLmNv
bS9zaXJ1cHNlbi9sb2dydXNgLiBBbnkgcGFja2FnZSB0aGF0IGlzbid0LCBz
aG91bGQgYmUgY2hhbmdlZC4KClRvIGZpeCBHbGlkZSwgc2VlIFt0aGVzZQpj
b21tZW50c10oaHR0cHM6Ly9naXRodWIuY29tL3NpcnVwc2VuL2xvZ3J1cy9p
c3N1ZXMvNTUzI2lzc3VlY29tbWVudC0zMDY1OTE0MzcpLgpGb3IgYW4gaW4t
ZGVwdGggZXhwbGFuYXRpb24gb2YgdGhlIGNhc2luZyBpc3N1ZSwgc2VlIFt0
aGlzCmNvbW1lbnRdKGh0dHBzOi8vZ2l0aHViLmNvbS9zaXJ1cHNlbi9sb2dy
dXMvaXNzdWVzLzU3MCNpc3N1ZWNvbW1lbnQtMzEzOTMzMjc2KS4KCk5pY2Vs
eSBjb2xvci1jb2RlZCBpbiBkZXZlbG9wbWVudCAod2hlbiBhIFRUWSBpcyBh
dHRhY2hlZCwgb3RoZXJ3aXNlIGp1c3QKcGxhaW4gdGV4dCk6CgohW0NvbG9y
ZWRdKGh0dHA6Ly9pLmltZ3VyLmNvbS9QWTdxTXdkLnBuZykKCldpdGggYGxv
Zy5TZXRGb3JtYXR0ZXIoJmxvZy5KU09ORm9ybWF0dGVye30pYCwgZm9yIGVh
c3kgcGFyc2luZyBieSBsb2dzdGFzaApvciBTcGx1bms6CgpgYGBqc29uCnsi
YW5pbWFsIjoid2FscnVzIiwibGV2ZWwiOiJpbmZvIiwibXNnIjoiQSBncm91
cCBvZiB3YWxydXMgZW1lcmdlcyBmcm9tIHRoZQpvY2VhbiIsInNpemUiOjEw
LCJ0aW1lIjoiMjAxNC0wMy0xMCAxOTo1NzozOC41NjIyNjQxMzEgLTA0MDAg
RURUIn0KCnsibGV2ZWwiOiJ3YXJuaW5nIiwibXNnIjoiVGhlIGdyb3VwJ3Mg
bnVtYmVyIGluY3JlYXNlZCB0cmVtZW5kb3VzbHkhIiwKIm51bWJlciI6MTIy
LCJvbWciOnRydWUsInRpbWUiOiIyMDE0LTAzLTEwIDE5OjU3OjM4LjU2MjQ3
MTI5NyAtMDQwMCBFRFQifQoKeyJhbmltYWwiOiJ3YWxydXMiLCJsZXZlbCI6
ImluZm8iLCJtc2ciOiJBIGdpYW50IHdhbHJ1cyBhcHBlYXJzISIsCiJzaXpl
IjoxMCwidGltZSI6IjIwMTQtMDMtMTAgMTk6NTc6MzguNTYyNTAwNTkxIC0w
NDAwIEVEVCJ9Cgp7ImFuaW1hbCI6IndhbHJ1cyIsImxldmVsIjoiaW5mbyIs
Im1zZyI6IlRyZW1lbmRvdXNseSBzaXplZCBjb3cgZW50ZXJzIHRoZSBvY2Vh
bi4iLAoic2l6ZSI6OSwidGltZSI6IjIwMTQtMDMtMTAgMTk6NTc6MzguNTYy
NTI3ODk2IC0wNDAwIEVEVCJ9Cgp7ImxldmVsIjoiZmF0YWwiLCJtc2ciOiJU
aGUgaWNlIGJyZWFrcyEiLCJudW1iZXIiOjEwMCwib21nIjp0cnVlLAoidGlt
ZSI6IjIwMTQtMDMtMTAgMTk6NTc6MzguNTYyNTQzMTI4IC0wNDAwIEVEVCJ9
CmBgYAoKV2l0aCB0aGUgZGVmYXVsdCBgbG9nLlNldEZvcm1hdHRlcigmbG9n
LlRleHRGb3JtYXR0ZXJ7fSlgIHdoZW4gYSBUVFkgaXMgbm90CmF0dGFjaGVk
LCB0aGUgb3V0cHV0IGlzIGNvbXBhdGlibGUgd2l0aCB0aGUKW2xvZ2ZtdF0o
aHR0cDovL2dvZG9jLm9yZy9naXRodWIuY29tL2tyL2xvZ2ZtdCkgZm9ybWF0
OgoKYGBgdGV4dAp0aW1lPSIyMDE1LTAzLTI2VDAxOjI3OjM4LTA0OjAwIiBs
ZXZlbD1kZWJ1ZyBtc2c9IlN0YXJ0ZWQgb2JzZXJ2aW5nIGJlYWNoIiBhbmlt
YWw9d2FscnVzIG51bWJlcj04CnRpbWU9IjIwMTUtMDMtMjZUMDE6Mjc6Mzgt
MDQ6MDAiIGxldmVsPWluZm8gbXNnPSJBIGdyb3VwIG9mIHdhbHJ1cyBlbWVy
Z2VzIGZyb20gdGhlIG9jZWFuIiBhbmltYWw9d2FscnVzIHNpemU9MTAKdGlt
ZT0iMjAxNS0wMy0yNlQwMToyNzozOC0wNDowMCIgbGV2ZWw9d2FybmluZyBt
c2c9IlRoZSBncm91cCdzIG51bWJlciBpbmNyZWFzZWQgdHJlbWVuZG91c2x5
ISIgbnVtYmVyPTEyMiBvbWc9dHJ1ZQp0aW1lPSIyMDE1LTAzLTI2VDAxOjI3
OjM4LTA0OjAwIiBsZXZlbD1kZWJ1ZyBtc2c9IlRlbXBlcmF0dXJlIGNoYW5n
ZXMiIHRlbXBlcmF0dXJlPS00CnRpbWU9IjIwMTUtMDMtMjZUMDE6Mjc6Mzgt
MDQ6MDAiIGxldmVsPXBhbmljIG1zZz0iSXQncyBvdmVyIDkwMDAhIiBhbmlt
YWw9b3JjYSBzaXplPTkwMDkKdGltZT0iMjAxNS0wMy0yNlQwMToyNzozOC0w
NDowMCIgbGV2ZWw9ZmF0YWwgbXNnPSJUaGUgaWNlIGJyZWFrcyEiIGVycj0m
ezB4MjA4MjI4MGMwIG1hcFthbmltYWw6b3JjYSBzaXplOjkwMDldIDIwMTUt
MDMtMjYgMDE6Mjc6MzguNDQxNTc0MDA5IC0wNDAwIEVEVCBwYW5pYyBJdCdz
IG92ZXIgOTAwMCF9IG51bWJlcj0xMDAgb21nPXRydWUKYGBgClRvIGVuc3Vy
ZSB0aGlzIGJlaGF2aW91ciBldmVuIGlmIGEgVFRZIGlzIGF0dGFjaGVkLCBz
ZXQgeW91ciBmb3JtYXR0ZXIgYXMgZm9sbG93czoKCmBgYGdvCglsb2cuU2V0
Rm9ybWF0dGVyKCZsb2cuVGV4dEZvcm1hdHRlcnsKCQlEaXNhYmxlQ29sb3Jz
OiB0cnVlLAoJCUZ1bGxUaW1lc3RhbXA6IHRydWUsCgl9KQpgYGAKCiMjIyMg
TG9nZ2luZyBNZXRob2QgTmFtZQoKSWYgeW91IHdpc2ggdG8gYWRkIHRoZSBj
YWxsaW5nIG1ldGhvZCBhcyBhIGZpZWxkLCBpbnN0cnVjdCB0aGUgbG9nZ2Vy
IHZpYToKYGBgZ28KbG9nLlNldFJlcG9ydENhbGxlcih0cnVlKQpgYGAKVGhp
cyBhZGRzIHRoZSBjYWxsZXIgYXMgJ21ldGhvZCcgbGlrZSBzbzoKCmBgYGpz
b24KeyJhbmltYWwiOiJwZW5ndWluIiwibGV2ZWwiOiJmYXRhbCIsIm1ldGhv
ZCI6ImdpdGh1Yi5jb20vc2lydXBzZW4vYXJjdGljY3JlYXR1cmVzLm1pZ3Jh
dGUiLCJtc2ciOiJhIHBlbmd1aW4gc3dpbXMgYnkiLAoidGltZSI6IjIwMTQt
MDMtMTAgMTk6NTc6MzguNTYyNTQzMTI5IC0wNDAwIEVEVCJ9CmBgYAoKYGBg
dGV4dAp0aW1lPSIyMDE1LTAzLTI2VDAxOjI3OjM4LTA0OjAwIiBsZXZlbD1m
YXRhbCBtZXRob2Q9Z2l0aHViLmNvbS9zaXJ1cHNlbi9hcmN0aWNjcmVhdHVy
ZXMubWlncmF0ZSBtc2c9ImEgcGVuZ3VpbiBzd2ltcyBieSIgYW5pbWFsPXBl
bmd1aW4KYGBgCk5vdGUgdGhhdCB0aGlzIGRvZXMgYWRkIG1lYXN1cmFibGUg
b3ZlcmhlYWQgLSB0aGUgY29zdCB3aWxsIGRlcGVuZCBvbiB0aGUgdmVyc2lv
biBvZiBHbywgYnV0IGlzCmJldHdlZW4gMjAgYW5kIDQwJSBpbiByZWNlbnQg
dGVzdHMgd2l0aCAxLjYgYW5kIDEuNy4gIFlvdSBjYW4gdmFsaWRhdGUgdGhp
cyBpbiB5b3VyCmVudmlyb25tZW50IHZpYSBiZW5jaG1hcmtzOiAKYGBgCmdv
IHRlc3QgLWJlbmNoPS4qQ2FsbGVyVHJhY2luZwpgYGAKCgojIyMjIENhc2Ut
c2Vuc2l0aXZpdHkKClRoZSBvcmdhbml6YXRpb24ncyBuYW1lIHdhcyBjaGFu
Z2VkIHRvIGxvd2VyLWNhc2UtLWFuZCB0aGlzIHdpbGwgbm90IGJlIGNoYW5n
ZWQKYmFjay4gSWYgeW91IGFyZSBnZXR0aW5nIGltcG9ydCBjb25mbGljdHMg
ZHVlIHRvIGNhc2Ugc2Vuc2l0aXZpdHksIHBsZWFzZSB1c2UKdGhlIGxvd2Vy
LWNhc2UgaW1wb3J0OiBgZ2l0aHViLmNvbS9zaXJ1cHNlbi9sb2dydXNgLgoK
IyMjIyBFeGFtcGxlCgpUaGUgc2ltcGxlc3Qgd2F5IHRvIHVzZSBMb2dydXMg
aXMgc2ltcGx5IHRoZSBwYWNrYWdlLWxldmVsIGV4cG9ydGVkIGxvZ2dlcjoK
CmBgYGdvCnBhY2thZ2UgbWFpbgoKaW1wb3J0ICgKICBsb2cgImdpdGh1Yi5j
b20vc2lydXBzZW4vbG9ncnVzIgopCgpmdW5jIG1haW4oKSB7CiAgbG9nLldp
dGhGaWVsZHMobG9nLkZpZWxkc3sKICAgICJhbmltYWwiOiAid2FscnVzIiwK
ICB9KS5JbmZvKCJBIHdhbHJ1cyBhcHBlYXJzIikKfQpgYGAKCk5vdGUgdGhh
dCBpdCdzIGNvbXBsZXRlbHkgYXBpLWNvbXBhdGlibGUgd2l0aCB0aGUgc3Rk
bGliIGxvZ2dlciwgc28geW91IGNhbgpyZXBsYWNlIHlvdXIgYGxvZ2AgaW1w
b3J0cyBldmVyeXdoZXJlIHdpdGggYGxvZyAiZ2l0aHViLmNvbS9zaXJ1cHNl
bi9sb2dydXMiYAphbmQgeW91J2xsIG5vdyBoYXZlIHRoZSBmbGV4aWJpbGl0
eSBvZiBMb2dydXMuIFlvdSBjYW4gY3VzdG9taXplIGl0IGFsbCB5b3UKd2Fu
dDoKCmBgYGdvCnBhY2thZ2UgbWFpbgoKaW1wb3J0ICgKICAib3MiCiAgbG9n
ICJnaXRodWIuY29tL3NpcnVwc2VuL2xvZ3J1cyIKKQoKZnVuYyBpbml0KCkg
ewogIC8vIExvZyBhcyBKU09OIGluc3RlYWQgb2YgdGhlIGRlZmF1bHQgQVND
SUkgZm9ybWF0dGVyLgogIGxvZy5TZXRGb3JtYXR0ZXIoJmxvZy5KU09ORm9y
bWF0dGVye30pCgogIC8vIE91dHB1dCB0byBzdGRvdXQgaW5zdGVhZCBvZiB0
aGUgZGVmYXVsdCBzdGRlcnIKICAvLyBDYW4gYmUgYW55IGlvLldyaXRlciwg
c2VlIGJlbG93IGZvciBGaWxlIGV4YW1wbGUKICBsb2cuU2V0T3V0cHV0KG9z
LlN0ZG91dCkKCiAgLy8gT25seSBsb2cgdGhlIHdhcm5pbmcgc2V2ZXJpdHkg
b3IgYWJvdmUuCiAgbG9nLlNldExldmVsKGxvZy5XYXJuTGV2ZWwpCn0KCmZ1
bmMgbWFpbigpIHsKICBsb2cuV2l0aEZpZWxkcyhsb2cuRmllbGRzewogICAg
ImFuaW1hbCI6ICJ3YWxydXMiLAogICAgInNpemUiOiAgIDEwLAogIH0pLklu
Zm8oIkEgZ3JvdXAgb2Ygd2FscnVzIGVtZXJnZXMgZnJvbSB0aGUgb2NlYW4i
KQoKICBsb2cuV2l0aEZpZWxkcyhsb2cuRmllbGRzewogICAgIm9tZyI6ICAg
IHRydWUsCiAgICAibnVtYmVyIjogMTIyLAogIH0pLldhcm4oIlRoZSBncm91
cCdzIG51bWJlciBpbmNyZWFzZWQgdHJlbWVuZG91c2x5ISIpCgogIGxvZy5X
aXRoRmllbGRzKGxvZy5GaWVsZHN7CiAgICAib21nIjogICAgdHJ1ZSwKICAg
ICJudW1iZXIiOiAxMDAsCiAgfSkuRmF0YWwoIlRoZSBpY2UgYnJlYWtzISIp
CgogIC8vIEEgY29tbW9uIHBhdHRlcm4gaXMgdG8gcmUtdXNlIGZpZWxkcyBi
ZXR3ZWVuIGxvZ2dpbmcgc3RhdGVtZW50cyBieSByZS11c2luZwogIC8vIHRo
ZSBsb2dydXMuRW50cnkgcmV0dXJuZWQgZnJvbSBXaXRoRmllbGRzKCkKICBj
b250ZXh0TG9nZ2VyIDo9IGxvZy5XaXRoRmllbGRzKGxvZy5GaWVsZHN7CiAg
ICAiY29tbW9uIjogInRoaXMgaXMgYSBjb21tb24gZmllbGQiLAogICAgIm90
aGVyIjogIkkgYWxzbyBzaG91bGQgYmUgbG9nZ2VkIGFsd2F5cyIsCiAgfSkK
CiAgY29udGV4dExvZ2dlci5JbmZvKCJJJ2xsIGJlIGxvZ2dlZCB3aXRoIGNv
bW1vbiBhbmQgb3RoZXIgZmllbGQiKQogIGNvbnRleHRMb2dnZXIuSW5mbygi
TWUgdG9vIikKfQpgYGAKCkZvciBtb3JlIGFkdmFuY2VkIHVzYWdlIHN1Y2gg
YXMgbG9nZ2luZyB0byBtdWx0aXBsZSBsb2NhdGlvbnMgZnJvbSB0aGUgc2Ft
ZQphcHBsaWNhdGlvbiwgeW91IGNhbiBhbHNvIGNyZWF0ZSBhbiBpbnN0YW5j
ZSBvZiB0aGUgYGxvZ3J1c2AgTG9nZ2VyOgoKYGBgZ28KcGFja2FnZSBtYWlu
CgppbXBvcnQgKAogICJvcyIKICAiZ2l0aHViLmNvbS9zaXJ1cHNlbi9sb2dy
dXMiCikKCi8vIENyZWF0ZSBhIG5ldyBpbnN0YW5jZSBvZiB0aGUgbG9nZ2Vy
LiBZb3UgY2FuIGhhdmUgYW55IG51bWJlciBvZiBpbnN0YW5jZXMuCnZhciBs
b2cgPSBsb2dydXMuTmV3KCkKCmZ1bmMgbWFpbigpIHsKICAvLyBUaGUgQVBJ
IGZvciBzZXR0aW5nIGF0dHJpYnV0ZXMgaXMgYSBsaXR0bGUgZGlmZmVyZW50
IHRoYW4gdGhlIHBhY2thZ2UgbGV2ZWwKICAvLyBleHBvcnRlZCBsb2dnZXIu
IFNlZSBHb2RvYy4KICBsb2cuT3V0ID0gb3MuU3Rkb3V0CgogIC8vIFlvdSBj
b3VsZCBzZXQgdGhpcyB0byBhbnkgYGlvLldyaXRlcmAgc3VjaCBhcyBhIGZp
bGUKICAvLyBmaWxlLCBlcnIgOj0gb3MuT3BlbkZpbGUoImxvZ3J1cy5sb2ci
LCBvcy5PX0NSRUFURXxvcy5PX1dST05MWXxvcy5PX0FQUEVORCwgMDY2NikK
ICAvLyBpZiBlcnIgPT0gbmlsIHsKICAvLyAgbG9nLk91dCA9IGZpbGUKICAv
LyB9IGVsc2UgewogIC8vICBsb2cuSW5mbygiRmFpbGVkIHRvIGxvZyB0byBm
aWxlLCB1c2luZyBkZWZhdWx0IHN0ZGVyciIpCiAgLy8gfQoKICBsb2cuV2l0
aEZpZWxkcyhsb2dydXMuRmllbGRzewogICAgImFuaW1hbCI6ICJ3YWxydXMi
LAogICAgInNpemUiOiAgIDEwLAogIH0pLkluZm8oIkEgZ3JvdXAgb2Ygd2Fs
cnVzIGVtZXJnZXMgZnJvbSB0aGUgb2NlYW4iKQp9CmBgYAoKIyMjIyBGaWVs
ZHMKCkxvZ3J1cyBlbmNvdXJhZ2VzIGNhcmVmdWwsIHN0cnVjdHVyZWQgbG9n
Z2luZyB0aHJvdWdoIGxvZ2dpbmcgZmllbGRzIGluc3RlYWQgb2YKbG9uZywg
dW5wYXJzZWFibGUgZXJyb3IgbWVzc2FnZXMuIEZvciBleGFtcGxlLCBpbnN0
ZWFkIG9mOiBgbG9nLkZhdGFsZigiRmFpbGVkCnRvIHNlbmQgZXZlbnQgJXMg
dG8gdG9waWMgJXMgd2l0aCBrZXkgJWQiKWAsIHlvdSBzaG91bGQgbG9nIHRo
ZSBtdWNoIG1vcmUKZGlzY292ZXJhYmxlOgoKYGBgZ28KbG9nLldpdGhGaWVs
ZHMobG9nLkZpZWxkc3sKICAiZXZlbnQiOiBldmVudCwKICAidG9waWMiOiB0
b3BpYywKICAia2V5Ijoga2V5LAp9KS5GYXRhbCgiRmFpbGVkIHRvIHNlbmQg
ZXZlbnQiKQpgYGAKCldlJ3ZlIGZvdW5kIHRoaXMgQVBJIGZvcmNlcyB5b3Ug
dG8gdGhpbmsgYWJvdXQgbG9nZ2luZyBpbiBhIHdheSB0aGF0IHByb2R1Y2Vz
Cm11Y2ggbW9yZSB1c2VmdWwgbG9nZ2luZyBtZXNzYWdlcy4gV2UndmUgYmVl
biBpbiBjb3VudGxlc3Mgc2l0dWF0aW9ucyB3aGVyZSBqdXN0CmEgc2luZ2xl
IGFkZGVkIGZpZWxkIHRvIGEgbG9nIHN0YXRlbWVudCB0aGF0IHdhcyBhbHJl
YWR5IHRoZXJlIHdvdWxkJ3ZlIHNhdmVkIHVzCmhvdXJzLiBUaGUgYFdpdGhG
aWVsZHNgIGNhbGwgaXMgb3B0aW9uYWwuCgpJbiBnZW5lcmFsLCB3aXRoIExv
Z3J1cyB1c2luZyBhbnkgb2YgdGhlIGBwcmludGZgLWZhbWlseSBmdW5jdGlv
bnMgc2hvdWxkIGJlCnNlZW4gYXMgYSBoaW50IHlvdSBzaG91bGQgYWRkIGEg
ZmllbGQsIGhvd2V2ZXIsIHlvdSBjYW4gc3RpbGwgdXNlIHRoZQpgcHJpbnRm
YC1mYW1pbHkgZnVuY3Rpb25zIHdpdGggTG9ncnVzLgoKIyMjIyBEZWZhdWx0
IEZpZWxkcwoKT2Z0ZW4gaXQncyBoZWxwZnVsIHRvIGhhdmUgZmllbGRzIF9h
bHdheXNfIGF0dGFjaGVkIHRvIGxvZyBzdGF0ZW1lbnRzIGluIGFuCmFwcGxp
Y2F0aW9uIG9yIHBhcnRzIG9mIG9uZS4gRm9yIGV4YW1wbGUsIHlvdSBtYXkg
d2FudCB0byBhbHdheXMgbG9nIHRoZQpgcmVxdWVzdF9pZGAgYW5kIGB1c2Vy
X2lwYCBpbiB0aGUgY29udGV4dCBvZiBhIHJlcXVlc3QuIEluc3RlYWQgb2Yg
d3JpdGluZwpgbG9nLldpdGhGaWVsZHMobG9nLkZpZWxkc3sicmVxdWVzdF9p
ZCI6IHJlcXVlc3RfaWQsICJ1c2VyX2lwIjogdXNlcl9pcH0pYCBvbgpldmVy
eSBsaW5lLCB5b3UgY2FuIGNyZWF0ZSBhIGBsb2dydXMuRW50cnlgIHRvIHBh
c3MgYXJvdW5kIGluc3RlYWQ6CgpgYGBnbwpyZXF1ZXN0TG9nZ2VyIDo9IGxv
Zy5XaXRoRmllbGRzKGxvZy5GaWVsZHN7InJlcXVlc3RfaWQiOiByZXF1ZXN0
X2lkLCAidXNlcl9pcCI6IHVzZXJfaXB9KQpyZXF1ZXN0TG9nZ2VyLkluZm8o
InNvbWV0aGluZyBoYXBwZW5lZCBvbiB0aGF0IHJlcXVlc3QiKSAjIHdpbGwg
bG9nIHJlcXVlc3RfaWQgYW5kIHVzZXJfaXAKcmVxdWVzdExvZ2dlci5XYXJu
KCJzb21ldGhpbmcgbm90IGdyZWF0IGhhcHBlbmVkIikKYGBgCgojIyMjIEhv
b2tzCgpZb3UgY2FuIGFkZCBob29rcyBmb3IgbG9nZ2luZyBsZXZlbHMuIEZv
ciBleGFtcGxlIHRvIHNlbmQgZXJyb3JzIHRvIGFuIGV4Y2VwdGlvbgp0cmFj
a2luZyBzZXJ2aWNlIG9uIGBFcnJvcmAsIGBGYXRhbGAgYW5kIGBQYW5pY2As
IGluZm8gdG8gU3RhdHNEIG9yIGxvZyB0bwptdWx0aXBsZSBwbGFjZXMgc2lt
dWx0YW5lb3VzbHksIGUuZy4gc3lzbG9nLgoKTG9ncnVzIGNvbWVzIHdpdGgg
W2J1aWx0LWluIGhvb2tzXShob29rcy8pLiBBZGQgdGhvc2UsIG9yIHlvdXIg
Y3VzdG9tIGhvb2ssIGluCmBpbml0YDoKCmBgYGdvCmltcG9ydCAoCiAgbG9n
ICJnaXRodWIuY29tL3NpcnVwc2VuL2xvZ3J1cyIKICAiZ29wa2cuaW4vZ2Vt
bmFzaXVtL2xvZ3J1cy1haXJicmFrZS1ob29rLnYyIiAvLyB0aGUgcGFja2Fn
ZSBpcyBuYW1lZCAiYWlyYnJha2UiCiAgbG9ncnVzX3N5c2xvZyAiZ2l0aHVi
LmNvbS9zaXJ1cHNlbi9sb2dydXMvaG9va3Mvc3lzbG9nIgogICJsb2cvc3lz
bG9nIgopCgpmdW5jIGluaXQoKSB7CgogIC8vIFVzZSB0aGUgQWlyYnJha2Ug
aG9vayB0byByZXBvcnQgZXJyb3JzIHRoYXQgaGF2ZSBFcnJvciBzZXZlcml0
eSBvciBhYm92ZSB0bwogIC8vIGFuIGV4Y2VwdGlvbiB0cmFja2VyLiBZb3Ug
Y2FuIGNyZWF0ZSBjdXN0b20gaG9va3MsIHNlZSB0aGUgSG9va3Mgc2VjdGlv
bi4KICBsb2cuQWRkSG9vayhhaXJicmFrZS5OZXdIb29rKDEyMywgInh5eiIs
ICJwcm9kdWN0aW9uIikpCgogIGhvb2ssIGVyciA6PSBsb2dydXNfc3lzbG9n
Lk5ld1N5c2xvZ0hvb2soInVkcCIsICJsb2NhbGhvc3Q6NTE0Iiwgc3lzbG9n
LkxPR19JTkZPLCAiIikKICBpZiBlcnIgIT0gbmlsIHsKICAgIGxvZy5FcnJv
cigiVW5hYmxlIHRvIGNvbm5lY3QgdG8gbG9jYWwgc3lzbG9nIGRhZW1vbiIp
CiAgfSBlbHNlIHsKICAgIGxvZy5BZGRIb29rKGhvb2spCiAgfQp9CmBgYApO
b3RlOiBTeXNsb2cgaG9vayBhbHNvIHN1cHBvcnQgY29ubmVjdGluZyB0byBs
b2NhbCBzeXNsb2cgKEV4LiAiL2Rldi9sb2ciIG9yICIvdmFyL3J1bi9zeXNs
b2ciIG9yICIvdmFyL3J1bi9sb2ciKS4gRm9yIHRoZSBkZXRhaWwsIHBsZWFz
ZSBjaGVjayB0aGUgW3N5c2xvZyBob29rIFJFQURNRV0oaG9va3Mvc3lzbG9n
L1JFQURNRS5tZCkuCgpBIGxpc3Qgb2YgY3VycmVudGx5IGtub3duIHNlcnZp
Y2UgaG9va3MgY2FuIGJlIGZvdW5kIGluIHRoaXMgd2lraSBbcGFnZV0oaHR0
cHM6Ly9naXRodWIuY29tL3NpcnVwc2VuL2xvZ3J1cy93aWtpL0hvb2tzKQoK
CiMjIyMgTGV2ZWwgbG9nZ2luZwoKTG9ncnVzIGhhcyBzZXZlbiBsb2dnaW5n
IGxldmVsczogVHJhY2UsIERlYnVnLCBJbmZvLCBXYXJuaW5nLCBFcnJvciwg
RmF0YWwgYW5kIFBhbmljLgoKYGBgZ28KbG9nLlRyYWNlKCJTb21ldGhpbmcg
dmVyeSBsb3cgbGV2ZWwuIikKbG9nLkRlYnVnKCJVc2VmdWwgZGVidWdnaW5n
IGluZm9ybWF0aW9uLiIpCmxvZy5JbmZvKCJTb21ldGhpbmcgbm90ZXdvcnRo
eSBoYXBwZW5lZCEiKQpsb2cuV2FybigiWW91IHNob3VsZCBwcm9iYWJseSB0
YWtlIGEgbG9vayBhdCB0aGlzLiIpCmxvZy5FcnJvcigiU29tZXRoaW5nIGZh
aWxlZCBidXQgSSdtIG5vdCBxdWl0dGluZy4iKQovLyBDYWxscyBvcy5FeGl0
KDEpIGFmdGVyIGxvZ2dpbmcKbG9nLkZhdGFsKCJCeWUuIikKLy8gQ2FsbHMg
cGFuaWMoKSBhZnRlciBsb2dnaW5nCmxvZy5QYW5pYygiSSdtIGJhaWxpbmcu
IikKYGBgCgpZb3UgY2FuIHNldCB0aGUgbG9nZ2luZyBsZXZlbCBvbiBhIGBM
b2dnZXJgLCB0aGVuIGl0IHdpbGwgb25seSBsb2cgZW50cmllcyB3aXRoCnRo
YXQgc2V2ZXJpdHkgb3IgYW55dGhpbmcgYWJvdmUgaXQ6CgpgYGBnbwovLyBX
aWxsIGxvZyBhbnl0aGluZyB0aGF0IGlzIGluZm8gb3IgYWJvdmUgKHdhcm4s
IGVycm9yLCBmYXRhbCwgcGFuaWMpLiBEZWZhdWx0Lgpsb2cuU2V0TGV2ZWwo
bG9nLkluZm9MZXZlbCkKYGBgCgpJdCBtYXkgYmUgdXNlZnVsIHRvIHNldCBg
bG9nLkxldmVsID0gbG9ncnVzLkRlYnVnTGV2ZWxgIGluIGEgZGVidWcgb3Ig
dmVyYm9zZQplbnZpcm9ubWVudCBpZiB5b3VyIGFwcGxpY2F0aW9uIGhhcyB0
aGF0LgoKIyMjIyBFbnRyaWVzCgpCZXNpZGVzIHRoZSBmaWVsZHMgYWRkZWQg
d2l0aCBgV2l0aEZpZWxkYCBvciBgV2l0aEZpZWxkc2Agc29tZSBmaWVsZHMg
YXJlCmF1dG9tYXRpY2FsbHkgYWRkZWQgdG8gYWxsIGxvZ2dpbmcgZXZlbnRz
OgoKMS4gYHRpbWVgLiBUaGUgdGltZXN0YW1wIHdoZW4gdGhlIGVudHJ5IHdh
cyBjcmVhdGVkLgoyLiBgbXNnYC4gVGhlIGxvZ2dpbmcgbWVzc2FnZSBwYXNz
ZWQgdG8gYHtJbmZvLFdhcm4sRXJyb3IsRmF0YWwsUGFuaWN9YCBhZnRlcgog
ICB0aGUgYEFkZEZpZWxkc2AgY2FsbC4gRS5nLiBgRmFpbGVkIHRvIHNlbmQg
ZXZlbnQuYAozLiBgbGV2ZWxgLiBUaGUgbG9nZ2luZyBsZXZlbC4gRS5nLiBg
aW5mb2AuCgojIyMjIEVudmlyb25tZW50cwoKTG9ncnVzIGhhcyBubyBub3Rp
b24gb2YgZW52aXJvbm1lbnQuCgpJZiB5b3Ugd2lzaCBmb3IgaG9va3MgYW5k
IGZvcm1hdHRlcnMgdG8gb25seSBiZSB1c2VkIGluIHNwZWNpZmljIGVudmly
b25tZW50cywKeW91IHNob3VsZCBoYW5kbGUgdGhhdCB5b3Vyc2VsZi4gRm9y
IGV4YW1wbGUsIGlmIHlvdXIgYXBwbGljYXRpb24gaGFzIGEgZ2xvYmFsCnZh
cmlhYmxlIGBFbnZpcm9ubWVudGAsIHdoaWNoIGlzIGEgc3RyaW5nIHJlcHJl
c2VudGF0aW9uIG9mIHRoZSBlbnZpcm9ubWVudCB5b3UKY291bGQgZG86Cgpg
YGBnbwppbXBvcnQgKAogIGxvZyAiZ2l0aHViLmNvbS9zaXJ1cHNlbi9sb2dy
dXMiCikKCmluaXQoKSB7CiAgLy8gZG8gc29tZXRoaW5nIGhlcmUgdG8gc2V0
IGVudmlyb25tZW50IGRlcGVuZGluZyBvbiBhbiBlbnZpcm9ubWVudCB2YXJp
YWJsZQogIC8vIG9yIGNvbW1hbmQtbGluZSBmbGFnCiAgaWYgRW52aXJvbm1l
bnQgPT0gInByb2R1Y3Rpb24iIHsKICAgIGxvZy5TZXRGb3JtYXR0ZXIoJmxv
Zy5KU09ORm9ybWF0dGVye30pCiAgfSBlbHNlIHsKICAgIC8vIFRoZSBUZXh0
Rm9ybWF0dGVyIGlzIGRlZmF1bHQsIHlvdSBkb24ndCBhY3R1YWxseSBoYXZl
IHRvIGRvIHRoaXMuCiAgICBsb2cuU2V0Rm9ybWF0dGVyKCZsb2cuVGV4dEZv
cm1hdHRlcnt9KQogIH0KfQpgYGAKClRoaXMgY29uZmlndXJhdGlvbiBpcyBo
b3cgYGxvZ3J1c2Agd2FzIGludGVuZGVkIHRvIGJlIHVzZWQsIGJ1dCBKU09O
IGluCnByb2R1Y3Rpb24gaXMgbW9zdGx5IG9ubHkgdXNlZnVsIGlmIHlvdSBk
byBsb2cgYWdncmVnYXRpb24gd2l0aCB0b29scyBsaWtlClNwbHVuayBvciBM
b2dzdGFzaC4KCiMjIyMgRm9ybWF0dGVycwoKVGhlIGJ1aWx0LWluIGxvZ2dp
bmcgZm9ybWF0dGVycyBhcmU6CgoqIGBsb2dydXMuVGV4dEZvcm1hdHRlcmAu
IExvZ3MgdGhlIGV2ZW50IGluIGNvbG9ycyBpZiBzdGRvdXQgaXMgYSB0dHks
IG90aGVyd2lzZQogIHdpdGhvdXQgY29sb3JzLgogICogKk5vdGU6KiB0byBm
b3JjZSBjb2xvcmVkIG91dHB1dCB3aGVuIHRoZXJlIGlzIG5vIFRUWSwgc2V0
IHRoZSBgRm9yY2VDb2xvcnNgCiAgICBmaWVsZCB0byBgdHJ1ZWAuICBUbyBm
b3JjZSBubyBjb2xvcmVkIG91dHB1dCBldmVuIGlmIHRoZXJlIGlzIGEgVFRZ
ICBzZXQgdGhlCiAgICBgRGlzYWJsZUNvbG9yc2AgZmllbGQgdG8gYHRydWVg
LiBGb3IgV2luZG93cywgc2VlCiAgICBbZ2l0aHViLmNvbS9tYXR0bi9nby1j
b2xvcmFibGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9tYXR0bi9nby1jb2xvcmFi
bGUpLgogICogV2hlbiBjb2xvcnMgYXJlIGVuYWJsZWQsIGxldmVscyBhcmUg
dHJ1bmNhdGVkIHRvIDQgY2hhcmFjdGVycyBieSBkZWZhdWx0LiBUbyBkaXNh
YmxlCiAgICB0cnVuY2F0aW9uIHNldCB0aGUgYERpc2FibGVMZXZlbFRydW5j
YXRpb25gIGZpZWxkIHRvIGB0cnVlYC4KICAqIFdoZW4gb3V0cHV0dGluZyB0
byBhIFRUWSwgaXQncyBvZnRlbiBoZWxwZnVsIHRvIHZpc3VhbGx5IHNjYW4g
ZG93biBhIGNvbHVtbiB3aGVyZSBhbGwgdGhlIGxldmVscyBhcmUgdGhlIHNh
bWUgd2lkdGguIFNldHRpbmcgdGhlIGBQYWRMZXZlbFRleHRgIGZpZWxkIHRv
IGB0cnVlYCBlbmFibGVzIHRoaXMgYmVoYXZpb3IsIGJ5IGFkZGluZyBwYWRk
aW5nIHRvIHRoZSBsZXZlbCB0ZXh0LgogICogQWxsIG9wdGlvbnMgYXJlIGxp
c3RlZCBpbiB0aGUgW2dlbmVyYXRlZCBkb2NzXShodHRwczovL2dvZG9jLm9y
Zy9naXRodWIuY29tL3NpcnVwc2VuL2xvZ3J1cyNUZXh0Rm9ybWF0dGVyKS4K
KiBgbG9ncnVzLkpTT05Gb3JtYXR0ZXJgLiBMb2dzIGZpZWxkcyBhcyBKU09O
LgogICogQWxsIG9wdGlvbnMgYXJlIGxpc3RlZCBpbiB0aGUgW2dlbmVyYXRl
ZCBkb2NzXShodHRwczovL2dvZG9jLm9yZy9naXRodWIuY29tL3NpcnVwc2Vu
L2xvZ3J1cyNKU09ORm9ybWF0dGVyKS4KClRoaXJkIHBhcnR5IGxvZ2dpbmcg
Zm9ybWF0dGVyczoKCiogW2BGbHVlbnRkRm9ybWF0dGVyYF0oaHR0cHM6Ly9n
aXRodWIuY29tL2pvb25peC9sb2cpLiBGb3JtYXRzIGVudHJpZXMgdGhhdCBj
YW4gYmUgcGFyc2VkIGJ5IEt1YmVybmV0ZXMgYW5kIEdvb2dsZSBDb250YWlu
ZXIgRW5naW5lLgoqIFtgR0VMRmBdKGh0dHBzOi8vZ2l0aHViLmNvbS9mYWJp
ZW5tL2dvLWxvZ3J1cy1mb3JtYXR0ZXJzKS4gRm9ybWF0cyBlbnRyaWVzIHNv
IHRoZXkgY29tcGx5IHRvIEdyYXlsb2cncyBbR0VMRiAxLjEgc3BlY2lmaWNh
dGlvbl0oaHR0cDovL2RvY3MuZ3JheWxvZy5vcmcvZW4vMi40L3BhZ2VzL2dl
bGYuaHRtbCkuCiogW2Bsb2dzdGFzaGBdKGh0dHBzOi8vZ2l0aHViLmNvbS9i
c2h1c3Rlci1yZXBvL2xvZ3J1cy1sb2dzdGFzaC1ob29rKS4gTG9ncyBmaWVs
ZHMgYXMgW0xvZ3N0YXNoXShodHRwOi8vbG9nc3Rhc2gubmV0KSBFdmVudHMu
CiogW2BwcmVmaXhlZGBdKGh0dHBzOi8vZ2l0aHViLmNvbS94LWNyYXkvbG9n
cnVzLXByZWZpeGVkLWZvcm1hdHRlcikuIERpc3BsYXlzIGxvZyBlbnRyeSBz
b3VyY2UgYWxvbmcgd2l0aCBhbHRlcm5hdGl2ZSBsYXlvdXQuCiogW2B6YWxn
b2BdKGh0dHBzOi8vZ2l0aHViLmNvbS9heWJhYnRtZS9sb2d6YWxnbykuIElu
dm9raW5nIHRoZSBQzYnMq2/Ms8y8zIp3zJbNiMywzY5lzKzNlMytzYJyzZrM
vMy5zLIgzKvNk82JzLPNiMWNzKDNlc2WzJpmzJ3NjcygIM2VzLLMns2WzZFa
zJbMq8ykzKvNqmHNicyszYjMl2zNls2OZ8yzzKVvzLDMpcyFIcyjzZTMssy7
zYrMhCDMmcyYzKbMucymLgoqIFtgbmVzdGVkLWxvZ3J1cy1mb3JtYXR0ZXJg
XShodHRwczovL2dpdGh1Yi5jb20vYW50b25maXNoZXIvbmVzdGVkLWxvZ3J1
cy1mb3JtYXR0ZXIpLiBDb252ZXJ0cyBsb2dydXMgZmllbGRzIHRvIGEgbmVz
dGVkIHN0cnVjdHVyZS4KKiBbYHBvd2VyZnVsLWxvZ3J1cy1mb3JtYXR0ZXJg
XShodHRwczovL2dpdGh1Yi5jb20venB1dC96eGNUb29sKS4gZ2V0IGZpbGVO
YW1lLCBsb2cncyBsaW5lIG51bWJlciBhbmQgdGhlIGxhdGVzdCBmdW5jdGlv
bidzIG5hbWUgd2hlbiBwcmludCBsb2c7IFNhdmEgbG9nIHRvIGZpbGVzLgoK
WW91IGNhbiBkZWZpbmUgeW91ciBmb3JtYXR0ZXIgYnkgaW1wbGVtZW50aW5n
IHRoZSBgRm9ybWF0dGVyYCBpbnRlcmZhY2UsCnJlcXVpcmluZyBhIGBGb3Jt
YXRgIG1ldGhvZC4gYEZvcm1hdGAgdGFrZXMgYW4gYCpFbnRyeWAuIGBlbnRy
eS5EYXRhYCBpcyBhCmBGaWVsZHNgIHR5cGUgKGBtYXBbc3RyaW5nXWludGVy
ZmFjZXt9YCkgd2l0aCBhbGwgeW91ciBmaWVsZHMgYXMgd2VsbCBhcyB0aGUK
ZGVmYXVsdCBvbmVzIChzZWUgRW50cmllcyBzZWN0aW9uIGFib3ZlKToKCmBg
YGdvCnR5cGUgTXlKU09ORm9ybWF0dGVyIHN0cnVjdCB7Cn0KCmxvZy5TZXRG
b3JtYXR0ZXIobmV3KE15SlNPTkZvcm1hdHRlcikpCgpmdW5jIChmICpNeUpT
T05Gb3JtYXR0ZXIpIEZvcm1hdChlbnRyeSAqRW50cnkpIChbXWJ5dGUsIGVy
cm9yKSB7CiAgLy8gTm90ZSB0aGlzIGRvZXNuJ3QgaW5jbHVkZSBUaW1lLCBM
ZXZlbCBhbmQgTWVzc2FnZSB3aGljaCBhcmUgYXZhaWxhYmxlIG9uCiAgLy8g
dGhlIEVudHJ5LiBDb25zdWx0IGBnb2RvY2Agb24gaW5mb3JtYXRpb24gYWJv
dXQgdGhvc2UgZmllbGRzIG9yIHJlYWQgdGhlCiAgLy8gc291cmNlIG9mIHRo
ZSBvZmZpY2lhbCBsb2dnZXJzLgogIHNlcmlhbGl6ZWQsIGVyciA6PSBqc29u
Lk1hcnNoYWwoZW50cnkuRGF0YSkKICAgIGlmIGVyciAhPSBuaWwgewogICAg
ICByZXR1cm4gbmlsLCBmbXQuRXJyb3JmKCJGYWlsZWQgdG8gbWFyc2hhbCBm
aWVsZHMgdG8gSlNPTiwgJXYiLCBlcnIpCiAgICB9CiAgcmV0dXJuIGFwcGVu
ZChzZXJpYWxpemVkLCAnXG4nKSwgbmlsCn0KYGBgCgojIyMjIExvZ2dlciBh
cyBhbiBgaW8uV3JpdGVyYAoKTG9ncnVzIGNhbiBiZSB0cmFuc2Zvcm1lZCBp
bnRvIGFuIGBpby5Xcml0ZXJgLiBUaGF0IHdyaXRlciBpcyB0aGUgZW5kIG9m
IGFuIGBpby5QaXBlYCBhbmQgaXQgaXMgeW91ciByZXNwb25zaWJpbGl0eSB0
byBjbG9zZSBpdC4KCmBgYGdvCncgOj0gbG9nZ2VyLldyaXRlcigpCmRlZmVy
IHcuQ2xvc2UoKQoKc3J2IDo9IGh0dHAuU2VydmVyewogICAgLy8gY3JlYXRl
IGEgc3RkbGliIGxvZy5Mb2dnZXIgdGhhdCB3cml0ZXMgdG8KICAgIC8vIGxv
Z3J1cy5Mb2dnZXIuCiAgICBFcnJvckxvZzogbG9nLk5ldyh3LCAiIiwgMCks
Cn0KYGBgCgpFYWNoIGxpbmUgd3JpdHRlbiB0byB0aGF0IHdyaXRlciB3aWxs
IGJlIHByaW50ZWQgdGhlIHVzdWFsIHdheSwgdXNpbmcgZm9ybWF0dGVycwph
bmQgaG9va3MuIFRoZSBsZXZlbCBmb3IgdGhvc2UgZW50cmllcyBpcyBgaW5m
b2AuCgpUaGlzIG1lYW5zIHRoYXQgd2UgY2FuIG92ZXJyaWRlIHRoZSBzdGFu
ZGFyZCBsaWJyYXJ5IGxvZ2dlciBlYXNpbHk6CgpgYGBnbwpsb2dnZXIgOj0g
bG9ncnVzLk5ldygpCmxvZ2dlci5Gb3JtYXR0ZXIgPSAmbG9ncnVzLkpTT05G
b3JtYXR0ZXJ7fQoKLy8gVXNlIGxvZ3J1cyBmb3Igc3RhbmRhcmQgbG9nIG91
dHB1dAovLyBOb3RlIHRoYXQgYGxvZ2AgaGVyZSByZWZlcmVuY2VzIHN0ZGxp
YidzIGxvZwovLyBOb3QgbG9ncnVzIGltcG9ydGVkIHVuZGVyIHRoZSBuYW1l
IGBsb2dgLgpsb2cuU2V0T3V0cHV0KGxvZ2dlci5Xcml0ZXIoKSkKYGBgCgoj
IyMjIFJvdGF0aW9uCgpMb2cgcm90YXRpb24gaXMgbm90IHByb3ZpZGVkIHdp
dGggTG9ncnVzLiBMb2cgcm90YXRpb24gc2hvdWxkIGJlIGRvbmUgYnkgYW4K
ZXh0ZXJuYWwgcHJvZ3JhbSAobGlrZSBgbG9ncm90YXRlKDgpYCkgdGhhdCBj
YW4gY29tcHJlc3MgYW5kIGRlbGV0ZSBvbGQgbG9nCmVudHJpZXMuIEl0IHNo
b3VsZCBub3QgYmUgYSBmZWF0dXJlIG9mIHRoZSBhcHBsaWNhdGlvbi1sZXZl
bCBsb2dnZXIuCgojIyMjIFRvb2xzCgp8IFRvb2wgfCBEZXNjcmlwdGlvbiB8
CnwgLS0tLSB8IC0tLS0tLS0tLS0tIHwKfFtMb2dydXMgTWF0ZV0oaHR0cHM6
Ly9naXRodWIuY29tL2dvZ2FwL2xvZ3J1c19tYXRlKXxMb2dydXMgbWF0ZSBp
cyBhIHRvb2wgZm9yIExvZ3J1cyB0byBtYW5hZ2UgbG9nZ2VycywgeW91IGNh
biBpbml0aWFsIGxvZ2dlcidzIGxldmVsLCBob29rIGFuZCBmb3JtYXR0ZXIg
YnkgY29uZmlnIGZpbGUsIHRoZSBsb2dnZXIgd2lsbCBiZSBnZW5lcmF0ZWQg
d2l0aCBkaWZmZXJlbnQgY29uZmlncyBpbiBkaWZmZXJlbnQgZW52aXJvbm1l
bnRzLnwKfFtMb2dydXMgVmlwZXIgSGVscGVyXShodHRwczovL2dpdGh1Yi5j
b20vaGVpcmtvL2dvLWNvbnRyaWIvdHJlZS9tYXN0ZXIvbG9ncnVzSGVscGVy
KXxBbiBIZWxwZXIgYXJvdW5kIExvZ3J1cyB0byB3cmFwIHdpdGggc3BmMTMv
VmlwZXIgdG8gbG9hZCBjb25maWd1cmF0aW9uIHdpdGggZmFuZ3MhIEFuZCB0
byBzaW1wbGlmeSBMb2dydXMgY29uZmlndXJhdGlvbiB1c2Ugc29tZSBiZWhh
dmlvciBvZiBbTG9ncnVzIE1hdGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9nb2dh
cC9sb2dydXNfbWF0ZSkuIFtzYW1wbGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9o
ZWlya28vaXJpcy1jb250cmliL2Jsb2IvbWFzdGVyL21pZGRsZXdhcmUvbG9n
cnVzLWxvZ2dlci9leGFtcGxlKSB8CgojIyMjIFRlc3RpbmcKCkxvZ3J1cyBo
YXMgYSBidWlsdCBpbiBmYWNpbGl0eSBmb3IgYXNzZXJ0aW5nIHRoZSBwcmVz
ZW5jZSBvZiBsb2cgbWVzc2FnZXMuIFRoaXMgaXMgaW1wbGVtZW50ZWQgdGhy
b3VnaCB0aGUgYHRlc3RgIGhvb2sgYW5kIHByb3ZpZGVzOgoKKiBkZWNvcmF0
b3JzIGZvciBleGlzdGluZyBsb2dnZXIgKGB0ZXN0Lk5ld0xvY2FsYCBhbmQg
YHRlc3QuTmV3R2xvYmFsYCkgd2hpY2ggYmFzaWNhbGx5IGp1c3QgYWRkcyB0
aGUgYHRlc3RgIGhvb2sKKiBhIHRlc3QgbG9nZ2VyIChgdGVzdC5OZXdOdWxs
TG9nZ2VyYCkgdGhhdCBqdXN0IHJlY29yZHMgbG9nIG1lc3NhZ2VzIChhbmQg
ZG9lcyBub3Qgb3V0cHV0IGFueSk6CgpgYGBnbwppbXBvcnQoCiAgImdpdGh1
Yi5jb20vc2lydXBzZW4vbG9ncnVzIgogICJnaXRodWIuY29tL3NpcnVwc2Vu
L2xvZ3J1cy9ob29rcy90ZXN0IgogICJnaXRodWIuY29tL3N0cmV0Y2hyL3Rl
c3RpZnkvYXNzZXJ0IgogICJ0ZXN0aW5nIgopCgpmdW5jIFRlc3RTb21ldGhp
bmcodCp0ZXN0aW5nLlQpewogIGxvZ2dlciwgaG9vayA6PSB0ZXN0Lk5ld051
bGxMb2dnZXIoKQogIGxvZ2dlci5FcnJvcigiSGVsbG9lcnJvciIpCgogIGFz
c2VydC5FcXVhbCh0LCAxLCBsZW4oaG9vay5FbnRyaWVzKSkKICBhc3NlcnQu
RXF1YWwodCwgbG9ncnVzLkVycm9yTGV2ZWwsIGhvb2suTGFzdEVudHJ5KCku
TGV2ZWwpCiAgYXNzZXJ0LkVxdWFsKHQsICJIZWxsb2Vycm9yIiwgaG9vay5M
YXN0RW50cnkoKS5NZXNzYWdlKQoKICBob29rLlJlc2V0KCkKICBhc3NlcnQu
TmlsKHQsIGhvb2suTGFzdEVudHJ5KCkpCn0KYGBgCgojIyMjIEZhdGFsIGhh
bmRsZXJzCgpMb2dydXMgY2FuIHJlZ2lzdGVyIG9uZSBvciBtb3JlIGZ1bmN0
aW9ucyB0aGF0IHdpbGwgYmUgY2FsbGVkIHdoZW4gYW55IGBmYXRhbGAKbGV2
ZWwgbWVzc2FnZSBpcyBsb2dnZWQuIFRoZSByZWdpc3RlcmVkIGhhbmRsZXJz
IHdpbGwgYmUgZXhlY3V0ZWQgYmVmb3JlCmxvZ3J1cyBwZXJmb3JtcyBhbiBg
b3MuRXhpdCgxKWAuIFRoaXMgYmVoYXZpb3IgbWF5IGJlIGhlbHBmdWwgaWYg
Y2FsbGVycyBuZWVkCnRvIGdyYWNlZnVsbHkgc2h1dGRvd24uIFVubGlrZSBh
IGBwYW5pYygiU29tZXRoaW5nIHdlbnQgd3JvbmcuLi4iKWAgY2FsbCB3aGlj
aCBjYW4gYmUgaW50ZXJjZXB0ZWQgd2l0aCBhIGRlZmVycmVkIGByZWNvdmVy
YCBhIGNhbGwgdG8gYG9zLkV4aXQoMSlgIGNhbiBub3QgYmUgaW50ZXJjZXB0
ZWQuCgpgYGAKLi4uCmhhbmRsZXIgOj0gZnVuYygpIHsKICAvLyBncmFjZWZ1
bGx5IHNodXRkb3duIHNvbWV0aGluZy4uLgp9CmxvZ3J1cy5SZWdpc3RlckV4
aXRIYW5kbGVyKGhhbmRsZXIpCi4uLgpgYGAKCiMjIyMgVGhyZWFkIHNhZmV0
eQoKQnkgZGVmYXVsdCwgTG9nZ2VyIGlzIHByb3RlY3RlZCBieSBhIG11dGV4
IGZvciBjb25jdXJyZW50IHdyaXRlcy4gVGhlIG11dGV4IGlzIGhlbGQgd2hl
biBjYWxsaW5nIGhvb2tzIGFuZCB3cml0aW5nIGxvZ3MuCklmIHlvdSBhcmUg
c3VyZSBzdWNoIGxvY2tpbmcgaXMgbm90IG5lZWRlZCwgeW91IGNhbiBjYWxs
IGxvZ2dlci5TZXROb0xvY2soKSB0byBkaXNhYmxlIHRoZSBsb2NraW5nLgoK
U2l0dWF0aW9uIHdoZW4gbG9ja2luZyBpcyBub3QgbmVlZGVkIGluY2x1ZGVz
OgoKKiBZb3UgaGF2ZSBubyBob29rcyByZWdpc3RlcmVkLCBvciBob29rcyBj
YWxsaW5nIGlzIGFscmVhZHkgdGhyZWFkLXNhZmUuCgoqIFdyaXRpbmcgdG8g
bG9nZ2VyLk91dCBpcyBhbHJlYWR5IHRocmVhZC1zYWZlLCBmb3IgZXhhbXBs
ZToKCiAgMSkgbG9nZ2VyLk91dCBpcyBwcm90ZWN0ZWQgYnkgbG9ja3MuCgog
IDIpIGxvZ2dlci5PdXQgaXMgYW4gb3MuRmlsZSBoYW5kbGVyIG9wZW5lZCB3
aXRoIGBPX0FQUEVORGAgZmxhZywgYW5kIGV2ZXJ5IHdyaXRlIGlzIHNtYWxs
ZXIgdGhhbiA0ay4gKFRoaXMgYWxsb3dzIG11bHRpLXRocmVhZC9tdWx0aS1w
cm9jZXNzIHdyaXRpbmcpCgogICAgIChSZWZlciB0byBodHRwOi8vd3d3Lm5v
dHRoZXdpemFyZC5jb20vMjAxNC8wNi8xNy9hcmUtZmlsZXMtYXBwZW5kcy1y
ZWFsbHktYXRvbWljLykK
",,13105,"bGFuZ3VhZ2U6IGdvCmdvX2ltcG9ydF9wYXRoOiBnaXRodWIuY29tL3NpcnVw
c2VuL2xvZ3J1cwpnaXQ6CiAgZGVwdGg6IDEKZW52OgogIC0gR08xMTFNT0RV
TEU9b24KICAtIEdPMTExTU9EVUxFPW9mZgpnbzogWzEuMTIueCwgMS4xMy54
XQpvczogW2xpbnV4LCBvc3hdCm1hdHJpeDoKICBleGNsdWRlOgogICAgLSBn
bzogMS4xMy54CiAgICAgIGVudjogR08xMTFNT0RVTEU9b2ZmICMjIE1vZHVs
ZXMgYXJlIHRoZSBkZWZhdWx0IG5vdy4KaW5zdGFsbDoKICAtIC4vdHJhdmlz
L2luc3RhbGwuc2gKc2NyaXB0OgogIC0gLi90cmF2aXMvY3Jvc3NfYnVpbGQu
c2gKICAtIC4vdHJhdmlzL2xpbnQuc2gKICAtIGV4cG9ydCBHT01BWFBST0NT
PTQKICAtIGV4cG9ydCBHT1JBQ0U9aGFsdF9vbl9lcnJvcj0xCiAgLSBnbyB0
ZXN0IC1yYWNlIC12IC4vLi4uCiAgLSBpZiBbWyAiJFRSQVZJU19PU19OQU1F
IiA9PSAibGludXgiIF1dOyB0aGVuIGdvIHRlc3QgLXJhY2UgLXYgLXRhZ3Mg
YXBwZW5naW5lIC4vLi4uIDsgZmkK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
