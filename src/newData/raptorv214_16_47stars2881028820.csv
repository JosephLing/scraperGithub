name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'immutable-js',21413198,b'Immutable persistent data collections for Javascript which increase efficiency and simplicity.',b'JavaScript',166,28817,,586,False,b'https://api.github.com/repos/immutable-js/immutable-js/forks',"SW1tdXRhYmxlIGNvbGxlY3Rpb25zIGZvciBKYXZhU2NyaXB0Cj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoKWyFbQnVpbGQgU3RhdHVz
XShodHRwczovL3RyYXZpcy1jaS5vcmcvZmFjZWJvb2svaW1tdXRhYmxlLWpz
LnN2Zz9icmFuY2g9bWFzdGVyKV0oaHR0cHM6Ly90cmF2aXMtY2kub3JnL2Zh
Y2Vib29rL2ltbXV0YWJsZS1qcykgWyFbSm9pbiB0aGUgY2hhdCBhdCBodHRw
czovL2dpdHRlci5pbS9pbW11dGFibGUtanMvTG9iYnldKGh0dHBzOi8vYmFk
Z2VzLmdpdHRlci5pbS9pbW11dGFibGUtanMvTG9iYnkuc3ZnKV0oaHR0cHM6
Ly9naXR0ZXIuaW0vaW1tdXRhYmxlLWpzL0xvYmJ5P3V0bV9zb3VyY2U9YmFk
Z2UmdXRtX21lZGl1bT1iYWRnZSZ1dG1fY2FtcGFpZ249cHItYmFkZ2UmdXRt
X2NvbnRlbnQ9YmFkZ2UpCgpbSW1tdXRhYmxlXVtdIGRhdGEgY2Fubm90IGJl
IGNoYW5nZWQgb25jZSBjcmVhdGVkLCBsZWFkaW5nIHRvIG11Y2ggc2ltcGxl
cgphcHBsaWNhdGlvbiBkZXZlbG9wbWVudCwgbm8gZGVmZW5zaXZlIGNvcHlp
bmcsIGFuZCBlbmFibGluZyBhZHZhbmNlZCBtZW1vaXphdGlvbgphbmQgY2hh
bmdlIGRldGVjdGlvbiB0ZWNobmlxdWVzIHdpdGggc2ltcGxlIGxvZ2ljLiBb
UGVyc2lzdGVudF1bXSBkYXRhIHByZXNlbnRzCmEgbXV0YXRpdmUgQVBJIHdo
aWNoIGRvZXMgbm90IHVwZGF0ZSB0aGUgZGF0YSBpbi1wbGFjZSwgYnV0IGlu
c3RlYWQgYWx3YXlzCnlpZWxkcyBuZXcgdXBkYXRlZCBkYXRhLgoKSW1tdXRh
YmxlLmpzIHByb3ZpZGVzIG1hbnkgUGVyc2lzdGVudCBJbW11dGFibGUgZGF0
YSBzdHJ1Y3R1cmVzIGluY2x1ZGluZzoKYExpc3RgLCBgU3RhY2tgLCBgTWFw
YCwgYE9yZGVyZWRNYXBgLCBgU2V0YCwgYE9yZGVyZWRTZXRgIGFuZCBgUmVj
b3JkYC4KClRoZXNlIGRhdGEgc3RydWN0dXJlcyBhcmUgaGlnaGx5IGVmZmlj
aWVudCBvbiBtb2Rlcm4gSmF2YVNjcmlwdCBWTXMgYnkgdXNpbmcKc3RydWN0
dXJhbCBzaGFyaW5nIHZpYSBbaGFzaCBtYXBzIHRyaWVzXVtdIGFuZCBbdmVj
dG9yIHRyaWVzXVtdIGFzIHBvcHVsYXJpemVkCmJ5IENsb2p1cmUgYW5kIFNj
YWxhLCBtaW5pbWl6aW5nIHRoZSBuZWVkIHRvIGNvcHkgb3IgY2FjaGUgZGF0
YS4KCkltbXV0YWJsZS5qcyBhbHNvIHByb3ZpZGVzIGEgbGF6eSBgU2VxYCwg
YWxsb3dpbmcgZWZmaWNpZW50CmNoYWluaW5nIG9mIGNvbGxlY3Rpb24gbWV0
aG9kcyBsaWtlIGBtYXBgIGFuZCBgZmlsdGVyYCB3aXRob3V0IGNyZWF0aW5n
CmludGVybWVkaWF0ZSByZXByZXNlbnRhdGlvbnMuIENyZWF0ZSBzb21lIGBT
ZXFgIHdpdGggYFJhbmdlYCBhbmQgYFJlcGVhdGAuCgpXYW50IHRvIGhlYXIg
bW9yZT8gV2F0Y2ggdGhlIHByZXNlbnRhdGlvbiBhYm91dCBJbW11dGFibGUu
anM6Cgo8YSBocmVmPSJodHRwczovL3lvdXR1LmJlL0k3SWRTLVBiRWdJIiB0
YXJnZXQ9Il9ibGFuayIgYWx0PSJJbW11dGFibGUgRGF0YSBhbmQgUmVhY3Qi
PjxpbWcgc3JjPSJodHRwczovL2ltZy55b3V0dWJlLmNvbS92aS9JN0lkUy1Q
YkVnSS8wLmpwZyIgLz48L2E+CgpbUGVyc2lzdGVudF06IGh0dHA6Ly9lbi53
aWtpcGVkaWEub3JnL3dpa2kvUGVyc2lzdGVudF9kYXRhX3N0cnVjdHVyZQpb
SW1tdXRhYmxlXTogaHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9JbW11
dGFibGVfb2JqZWN0CltoYXNoIG1hcHMgdHJpZXNdOiBodHRwOi8vZW4ud2lr
aXBlZGlhLm9yZy93aWtpL0hhc2hfYXJyYXlfbWFwcGVkX3RyaWUKW3ZlY3Rv
ciB0cmllc106IGh0dHA6Ly9oeXBpcmlvbi5jb20vbXVzaW5ncy91bmRlcnN0
YW5kaW5nLXBlcnNpc3RlbnQtdmVjdG9yLXB0LTEKCgpHZXR0aW5nIHN0YXJ0
ZWQKLS0tLS0tLS0tLS0tLS0tCgpJbnN0YWxsIGBpbW11dGFibGVgIHVzaW5n
IG5wbS4KCmBgYHNoZWxsCm5wbSBpbnN0YWxsIGltbXV0YWJsZQpgYGAKClRo
ZW4gcmVxdWlyZSBpdCBpbnRvIGFueSBtb2R1bGUuCgo8IS0tIHJ1bmtpdDph
Y3RpdmF0ZSAtLT4KYGBganMKY29uc3QgeyBNYXAgfSA9IHJlcXVpcmUoJ2lt
bXV0YWJsZScpOwpjb25zdCBtYXAxID0gTWFwKHsgYTogMSwgYjogMiwgYzog
MyB9KTsKY29uc3QgbWFwMiA9IG1hcDEuc2V0KCdiJywgNTApOwptYXAxLmdl
dCgnYicpICsgIiB2cy4gIiArIG1hcDIuZ2V0KCdiJyk7IC8vIDIgdnMuIDUw
CmBgYAoKIyMjIEJyb3dzZXIKCkltbXV0YWJsZS5qcyBoYXMgbm8gZGVwZW5k
ZW5jaWVzLCB3aGljaCBtYWtlcyBpdCBwcmVkaWN0YWJsZSB0byBpbmNsdWRl
IGluIGEgQnJvd3Nlci4KCkl0J3MgaGlnaGx5IHJlY29tbWVuZGVkIHRvIHVz
ZSBhIG1vZHVsZSBidW5kbGVyIGxpa2UgW3dlYnBhY2tdKGh0dHBzOi8vd2Vi
cGFjay5naXRodWIuaW8vKSwKW3JvbGx1cF0oaHR0cHM6Ly9yb2xsdXBqcy5v
cmcvKSwgb3IKW2Jyb3dzZXJpZnldKGh0dHA6Ly9icm93c2VyaWZ5Lm9yZy8p
LiBUaGUgYGltbXV0YWJsZWAgbnBtIG1vZHVsZSB3b3Jrcwp3aXRob3V0IGFu
eSBhZGRpdGlvbmFsIGNvbnNpZGVyYXRpb24uIEFsbCBleGFtcGxlcyB0aHJv
dWdob3V0IHRoZSBkb2N1bWVudGF0aW9uCndpbGwgYXNzdW1lIHVzZSBvZiB0
aGlzIGtpbmQgb2YgdG9vbC4KCkFsdGVybmF0aXZlbHksIEltbXV0YWJsZS5q
cyBtYXkgYmUgZGlyZWN0bHkgaW5jbHVkZWQgYXMgYSBzY3JpcHQgdGFnLiBE
b3dubG9hZApvciBsaW5rIHRvIGEgQ0ROIHN1Y2ggYXMgW0NETkpTXShodHRw
czovL2NkbmpzLmNvbS9saWJyYXJpZXMvaW1tdXRhYmxlKQpvciBbanNEZWxp
dnJdKGh0dHBzOi8vd3d3LmpzZGVsaXZyLmNvbS9wYWNrYWdlL25wbS9pbW11
dGFibGUpLgoKVXNlIGEgc2NyaXB0IHRhZyB0byBkaXJlY3RseSBhZGQgYElt
bXV0YWJsZWAgdG8gdGhlIGdsb2JhbCBzY29wZToKCmBgYGh0bWwKPHNjcmlw
dCBzcmM9ImltbXV0YWJsZS5taW4uanMiPjwvc2NyaXB0Pgo8c2NyaXB0Pgog
IHZhciBtYXAxID0gSW1tdXRhYmxlLk1hcCh7IGE6IDEsIGI6IDIsIGM6IDMg
fSk7CiAgdmFyIG1hcDIgPSBtYXAxLnNldCgnYicsIDUwKTsKICBtYXAxLmdl
dCgnYicpOyAvLyAyCiAgbWFwMi5nZXQoJ2InKTsgLy8gNTAKPC9zY3JpcHQ+
CmBgYAoKT3IgdXNlIGFuIEFNRC1zdHlsZSBsb2FkZXIgKHN1Y2ggYXMgW1Jl
cXVpcmVKU10oaHR0cDovL3JlcXVpcmVqcy5vcmcvKSk6CgpgYGBqcwpyZXF1
aXJlKFsnLi9pbW11dGFibGUubWluLmpzJ10sIGZ1bmN0aW9uIChJbW11dGFi
bGUpIHsKICB2YXIgbWFwMSA9IEltbXV0YWJsZS5NYXAoeyBhOiAxLCBiOiAy
LCBjOiAzIH0pOwogIHZhciBtYXAyID0gbWFwMS5zZXQoJ2InLCA1MCk7CiAg
bWFwMS5nZXQoJ2InKTsgLy8gMgogIG1hcDIuZ2V0KCdiJyk7IC8vIDUwCn0p
OwpgYGAKCiMjIyBGbG93ICYgVHlwZVNjcmlwdAoKVXNlIHRoZXNlIEltbXV0
YWJsZSBjb2xsZWN0aW9ucyBhbmQgc2VxdWVuY2VzIGFzIHlvdSB3b3VsZCB1
c2UgbmF0aXZlCmNvbGxlY3Rpb25zIGluIHlvdXIgW0Zsb3d0eXBlXShodHRw
czovL2Zsb3d0eXBlLm9yZy8pIG9yIFtUeXBlU2NyaXB0XShodHRwOi8vdHlw
ZXNjcmlwdGxhbmcub3JnKSBwcm9ncmFtcyB3aGlsZSBzdGlsbCB0YWtpbmcK
YWR2YW50YWdlIG9mIHR5cGUgZ2VuZXJpY3MsIGVycm9yIGRldGVjdGlvbiwg
YW5kIGF1dG8tY29tcGxldGUgaW4geW91ciBJREUuCgpJbnN0YWxsaW5nIGBp
bW11dGFibGVgIHZpYSBucG0gYnJpbmdzIHdpdGggaXQgdHlwZSBkZWZpbml0
aW9ucyBmb3IgRmxvdyAodjAuNTUuMCBvciBoaWdoZXIpCmFuZCBUeXBlU2Ny
aXB0ICh2Mi4xLjAgb3IgaGlnaGVyKSwgc28geW91IHNob3VsZG4ndCBuZWVk
IHRvIGRvIGFueXRoaW5nIGF0IGFsbCEKCiMjIyMgVXNpbmcgVHlwZVNjcmlw
dCB3aXRoIEltbXV0YWJsZS5qcyB2NAoKSW1tdXRhYmxlLmpzIHR5cGUgZGVm
aW5pdGlvbnMgZW1icmFjZSBFUzIwMTUuIFdoaWxlIEltbXV0YWJsZS5qcyBp
dHNlbGYgc3VwcG9ydHMKbGVnYWN5IGJyb3dzZXJzIGFuZCBlbnZpcm9ubWVu
dHMsIGl0cyB0eXBlIGRlZmluaXRpb25zIHJlcXVpcmUgVHlwZVNjcmlwdCdz
IDIwMTUKbGliLiBJbmNsdWRlIGVpdGhlciBgInRhcmdldCI6ICJlczIwMTUi
YCBvciBgImxpYiI6ICJlczIwMTUiYCBpbiB5b3VyCmB0c2NvbmZpZy5qc29u
YCwgb3IgcHJvdmlkZSBgLS10YXJnZXQgZXMyMDE1YCBvciBgLS1saWIgZXMy
MDE1YCB0byB0aGUKYHRzY2AgY29tbWFuZC4KCjwhLS0gcnVua2l0OmFjdGl2
YXRlIC0tPgpgYGBqcwpjb25zdCB7IE1hcCB9ID0gcmVxdWlyZSgiaW1tdXRh
YmxlIik7CmNvbnN0IG1hcDEgPSBNYXAoeyBhOiAxLCBiOiAyLCBjOiAzIH0p
Owpjb25zdCBtYXAyID0gbWFwMS5zZXQoJ2InLCA1MCk7Cm1hcDEuZ2V0KCdi
JykgKyAiIHZzLiAiICsgbWFwMi5nZXQoJ2InKTsgLy8gMiB2cy4gNTAKYGBg
CgojIyMjIFVzaW5nIFR5cGVTY3JpcHQgd2l0aCBJbW11dGFibGUuanMgdjMg
YW5kIGVhcmxpZXI6CgpQcmV2aW91cyB2ZXJzaW9ucyBvZiBJbW11dGFibGUu
anMgaW5jbHVkZSBhIHJlZmVyZW5jZSBmaWxlIHdoaWNoIHlvdSBjYW4gaW5j
bHVkZQp2aWEgcmVsYXRpdmUgcGF0aCB0byB0aGUgdHlwZSBkZWZpbml0aW9u
cyBhdCB0aGUgdG9wIG9mIHlvdXIgZmlsZS4KCmBgYGpzCi8vLzxyZWZlcmVu
Y2UgcGF0aD0nLi9ub2RlX21vZHVsZXMvaW1tdXRhYmxlL2Rpc3QvaW1tdXRh
YmxlLmQudHMnLz4KaW1wb3J0IEltbXV0YWJsZSBmcm9tIHJlcXVpcmUoJ2lt
bXV0YWJsZScpOwp2YXIgbWFwMTogSW1tdXRhYmxlLk1hcDxzdHJpbmcsIG51
bWJlcj47Cm1hcDEgPSBJbW11dGFibGUuTWFwKHsgYTogMSwgYjogMiwgYzog
MyB9KTsKdmFyIG1hcDIgPSBtYXAxLnNldCgnYicsIDUwKTsKbWFwMS5nZXQo
J2InKTsgLy8gMgptYXAyLmdldCgnYicpOyAvLyA1MApgYGAKCgpUaGUgY2Fz
ZSBmb3IgSW1tdXRhYmlsaXR5Ci0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0K
Ck11Y2ggb2Ygd2hhdCBtYWtlcyBhcHBsaWNhdGlvbiBkZXZlbG9wbWVudCBk
aWZmaWN1bHQgaXMgdHJhY2tpbmcgbXV0YXRpb24gYW5kCm1haW50YWluaW5n
IHN0YXRlLiBEZXZlbG9waW5nIHdpdGggaW1tdXRhYmxlIGRhdGEgZW5jb3Vy
YWdlcyB5b3UgdG8gdGhpbmsKZGlmZmVyZW50bHkgYWJvdXQgaG93IGRhdGEg
Zmxvd3MgdGhyb3VnaCB5b3VyIGFwcGxpY2F0aW9uLgoKU3Vic2NyaWJpbmcg
dG8gZGF0YSBldmVudHMgdGhyb3VnaG91dCB5b3VyIGFwcGxpY2F0aW9uIGNy
ZWF0ZXMgYSBodWdlIG92ZXJoZWFkIG9mCmJvb2sta2VlcGluZyB3aGljaCBj
YW4gaHVydCBwZXJmb3JtYW5jZSwgc29tZXRpbWVzIGRyYW1hdGljYWxseSwg
YW5kIGNyZWF0ZXMKb3Bwb3J0dW5pdGllcyBmb3IgYXJlYXMgb2YgeW91ciBh
cHBsaWNhdGlvbiB0byBnZXQgb3V0IG9mIHN5bmMgd2l0aCBlYWNoIG90aGVy
CmR1ZSB0byBlYXN5IHRvIG1ha2UgcHJvZ3JhbW1lciBlcnJvci4gU2luY2Ug
aW1tdXRhYmxlIGRhdGEgbmV2ZXIgY2hhbmdlcywKc3Vic2NyaWJpbmcgdG8g
Y2hhbmdlcyB0aHJvdWdob3V0IHRoZSBtb2RlbCBpcyBhIGRlYWQtZW5kIGFu
ZCBuZXcgZGF0YSBjYW4gb25seQpldmVyIGJlIHBhc3NlZCBmcm9tIGFib3Zl
LgoKVGhpcyBtb2RlbCBvZiBkYXRhIGZsb3cgYWxpZ25zIHdlbGwgd2l0aCB0
aGUgYXJjaGl0ZWN0dXJlIG9mIFtSZWFjdF1bXQphbmQgZXNwZWNpYWxseSB3
ZWxsIHdpdGggYW4gYXBwbGljYXRpb24gZGVzaWduZWQgdXNpbmcgdGhlIGlk
ZWFzIG9mIFtGbHV4XVtdLgoKV2hlbiBkYXRhIGlzIHBhc3NlZCBmcm9tIGFi
b3ZlIHJhdGhlciB0aGFuIGJlaW5nIHN1YnNjcmliZWQgdG8sIGFuZCB5b3Un
cmUgb25seQppbnRlcmVzdGVkIGluIGRvaW5nIHdvcmsgd2hlbiBzb21ldGhp
bmcgaGFzIGNoYW5nZWQsIHlvdSBjYW4gdXNlIGVxdWFsaXR5LgoKSW1tdXRh
YmxlIGNvbGxlY3Rpb25zIHNob3VsZCBiZSB0cmVhdGVkIGFzICp2YWx1ZXMq
IHJhdGhlciB0aGFuICpvYmplY3RzKi4gV2hpbGUKb2JqZWN0cyByZXByZXNl
bnQgc29tZSB0aGluZyB3aGljaCBjb3VsZCBjaGFuZ2Ugb3ZlciB0aW1lLCBh
IHZhbHVlIHJlcHJlc2VudHMKdGhlIHN0YXRlIG9mIHRoYXQgdGhpbmcgYXQg
YSBwYXJ0aWN1bGFyIGluc3RhbmNlIG9mIHRpbWUuIFRoaXMgcHJpbmNpcGxl
IGlzIG1vc3QKaW1wb3J0YW50IHRvIHVuZGVyc3RhbmRpbmcgdGhlIGFwcHJv
cHJpYXRlIHVzZSBvZiBpbW11dGFibGUgZGF0YS4gSW4gb3JkZXIgdG8KdHJl
YXQgSW1tdXRhYmxlLmpzIGNvbGxlY3Rpb25zIGFzIHZhbHVlcywgaXQncyBp
bXBvcnRhbnQgdG8gdXNlIHRoZQpgSW1tdXRhYmxlLmlzKClgIGZ1bmN0aW9u
IG9yIGAuZXF1YWxzKClgIG1ldGhvZCB0byBkZXRlcm1pbmUgKnZhbHVlIGVx
dWFsaXR5KgppbnN0ZWFkIG9mIHRoZSBgPT09YCBvcGVyYXRvciB3aGljaCBk
ZXRlcm1pbmVzIG9iamVjdCAqcmVmZXJlbmNlIGlkZW50aXR5Ki4KCjwhLS0g
cnVua2l0OmFjdGl2YXRlIC0tPgpgYGBqcwpjb25zdCB7IE1hcCB9ID0gcmVx
dWlyZSgnaW1tdXRhYmxlJyk7CmNvbnN0IG1hcDEgPSBNYXAoeyBhOiAxLCBi
OiAyLCBjOiAzIH0pOwpjb25zdCBtYXAyID0gTWFwKHsgYTogMSwgYjogMiwg
YzogMyB9KTsKbWFwMS5lcXVhbHMobWFwMik7IC8vIHRydWUKbWFwMSA9PT0g
bWFwMjsgLy8gZmFsc2UKYGBgCgpOb3RlOiBBcyBhIHBlcmZvcm1hbmNlIG9w
dGltaXphdGlvbiBJbW11dGFibGUuanMgYXR0ZW1wdHMgdG8gcmV0dXJuIHRo
ZSBleGlzdGluZwpjb2xsZWN0aW9uIHdoZW4gYW4gb3BlcmF0aW9uIHdvdWxk
IHJlc3VsdCBpbiBhbiBpZGVudGljYWwgY29sbGVjdGlvbiwgYWxsb3dpbmcK
Zm9yIHVzaW5nIGA9PT1gIHJlZmVyZW5jZSBlcXVhbGl0eSB0byBkZXRlcm1p
bmUgaWYgc29tZXRoaW5nIGRlZmluaXRlbHkgaGFzIG5vdApjaGFuZ2VkLiBU
aGlzIGNhbiBiZSBleHRyZW1lbHkgdXNlZnVsIHdoZW4gdXNlZCB3aXRoaW4g
YSBtZW1vaXphdGlvbiBmdW5jdGlvbgp3aGljaCB3b3VsZCBwcmVmZXIgdG8g
cmUtcnVuIHRoZSBmdW5jdGlvbiBpZiBhIGRlZXBlciBlcXVhbGl0eSBjaGVj
ayBjb3VsZApwb3RlbnRpYWxseSBiZSBtb3JlIGNvc3RseS4gVGhlIGA9PT1g
IGVxdWFsaXR5IGNoZWNrIGlzIGFsc28gdXNlZCBpbnRlcm5hbGx5IGJ5CmBJ
bW11dGFibGUuaXNgIGFuZCBgLmVxdWFscygpYCBhcyBhIHBlcmZvcm1hbmNl
IG9wdGltaXphdGlvbi4KCjwhLS0gcnVua2l0OmFjdGl2YXRlIC0tPgpgYGBq
cwpjb25zdCB7IE1hcCB9ID0gcmVxdWlyZSgnaW1tdXRhYmxlJyk7CmNvbnN0
IG1hcDEgPSBNYXAoeyBhOiAxLCBiOiAyLCBjOiAzIH0pOwpjb25zdCBtYXAy
ID0gbWFwMS5zZXQoJ2InLCAyKTsgLy8gU2V0IHRvIHNhbWUgdmFsdWUKbWFw
MSA9PT0gbWFwMjsgLy8gdHJ1ZQpgYGAKCklmIGFuIG9iamVjdCBpcyBpbW11
dGFibGUsIGl0IGNhbiBiZSAiY29waWVkIiBzaW1wbHkgYnkgbWFraW5nIGFu
b3RoZXIgcmVmZXJlbmNlCnRvIGl0IGluc3RlYWQgb2YgY29weWluZyB0aGUg
ZW50aXJlIG9iamVjdC4gQmVjYXVzZSBhIHJlZmVyZW5jZSBpcyBtdWNoIHNt
YWxsZXIKdGhhbiB0aGUgb2JqZWN0IGl0c2VsZiwgdGhpcyByZXN1bHRzIGlu
IG1lbW9yeSBzYXZpbmdzIGFuZCBhIHBvdGVudGlhbCBib29zdCBpbgpleGVj
dXRpb24gc3BlZWQgZm9yIHByb2dyYW1zIHdoaWNoIHJlbHkgb24gY29waWVz
IChzdWNoIGFzIGFuIHVuZG8tc3RhY2spLgoKPCEtLSBydW5raXQ6YWN0aXZh
dGUgLS0+CmBgYGpzCmNvbnN0IHsgTWFwIH0gPSByZXF1aXJlKCdpbW11dGFi
bGUnKTsKY29uc3QgbWFwID0gTWFwKHsgYTogMSwgYjogMiwgYzogMyB9KTsK
Y29uc3QgbWFwQ29weSA9IG1hcDsgLy8gTG9vaywgImNvcGllcyIgYXJlIGZy
ZWUhCmBgYAoKW1JlYWN0XTogaHR0cDovL2ZhY2Vib29rLmdpdGh1Yi5pby9y
ZWFjdC8KW0ZsdXhdOiBodHRwOi8vZmFjZWJvb2suZ2l0aHViLmlvL2ZsdXgv
ZG9jcy9vdmVydmlldy5odG1sCgoKSmF2YVNjcmlwdC1maXJzdCBBUEkKLS0t
LS0tLS0tLS0tLS0tLS0tLS0KCldoaWxlIEltbXV0YWJsZS5qcyBpcyBpbnNw
aXJlZCBieSBDbG9qdXJlLCBTY2FsYSwgSGFza2VsbCBhbmQgb3RoZXIgZnVu
Y3Rpb25hbApwcm9ncmFtbWluZyBlbnZpcm9ubWVudHMsIGl0J3MgZGVzaWdu
ZWQgdG8gYnJpbmcgdGhlc2UgcG93ZXJmdWwgY29uY2VwdHMgdG8KSmF2YVNj
cmlwdCwgYW5kIHRoZXJlZm9yZSBoYXMgYW4gT2JqZWN0LU9yaWVudGVkIEFQ
SSB0aGF0IGNsb3NlbHkgbWlycm9ycyB0aGF0Cm9mIFtFUzIwMTVdW10gW0Fy
cmF5XVtdLCBbTWFwXVtdLCBhbmQgW1NldF1bXS4KCltFUzIwMTVdOiBodHRw
czovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZh
U2NyaXB0L05ld19pbl9KYXZhU2NyaXB0L0VDTUFTY3JpcHRfNl9zdXBwb3J0
X2luX01vemlsbGEKW0FycmF5XTogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxs
YS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xv
YmFsX09iamVjdHMvQXJyYXkKW01hcF06IGh0dHBzOi8vZGV2ZWxvcGVyLm1v
emlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNl
L0dsb2JhbF9PYmplY3RzL01hcApbU2V0XTogaHR0cHM6Ly9kZXZlbG9wZXIu
bW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVu
Y2UvR2xvYmFsX09iamVjdHMvU2V0CgpUaGUgZGlmZmVyZW5jZSBmb3IgdGhl
IGltbXV0YWJsZSBjb2xsZWN0aW9ucyBpcyB0aGF0IG1ldGhvZHMgd2hpY2gg
d291bGQgbXV0YXRlCnRoZSBjb2xsZWN0aW9uLCBsaWtlIGBwdXNoYCwgYHNl
dGAsIGB1bnNoaWZ0YCBvciBgc3BsaWNlYCwgaW5zdGVhZCByZXR1cm4gYSBu
ZXcKaW1tdXRhYmxlIGNvbGxlY3Rpb24uIE1ldGhvZHMgd2hpY2ggcmV0dXJu
IG5ldyBhcnJheXMsIGxpa2UgYHNsaWNlYCBvciBgY29uY2F0YCwKaW5zdGVh
ZCByZXR1cm4gbmV3IGltbXV0YWJsZSBjb2xsZWN0aW9ucy4KCjwhLS0gcnVu
a2l0OmFjdGl2YXRlIC0tPgpgYGBqcwpjb25zdCB7IExpc3QgfSA9IHJlcXVp
cmUoJ2ltbXV0YWJsZScpOwpjb25zdCBsaXN0MSA9IExpc3QoWyAxLCAyIF0p
Owpjb25zdCBsaXN0MiA9IGxpc3QxLnB1c2goMywgNCwgNSk7CmNvbnN0IGxp
c3QzID0gbGlzdDIudW5zaGlmdCgwKTsKY29uc3QgbGlzdDQgPSBsaXN0MS5j
b25jYXQobGlzdDIsIGxpc3QzKTsKYXNzZXJ0LmVxdWFsKGxpc3QxLnNpemUs
IDIpOwphc3NlcnQuZXF1YWwobGlzdDIuc2l6ZSwgNSk7CmFzc2VydC5lcXVh
bChsaXN0My5zaXplLCA2KTsKYXNzZXJ0LmVxdWFsKGxpc3Q0LnNpemUsIDEz
KTsKYXNzZXJ0LmVxdWFsKGxpc3Q0LmdldCgwKSwgMSk7CmBgYAoKQWxtb3N0
IGFsbCBvZiB0aGUgbWV0aG9kcyBvbiBbQXJyYXldW10gd2lsbCBiZSBmb3Vu
ZCBpbiBzaW1pbGFyIGZvcm0gb24KYEltbXV0YWJsZS5MaXN0YCwgdGhvc2Ug
b2YgW01hcF1bXSBmb3VuZCBvbiBgSW1tdXRhYmxlLk1hcGAsIGFuZCB0aG9z
ZSBvZiBbU2V0XVtdCmZvdW5kIG9uIGBJbW11dGFibGUuU2V0YCwgaW5jbHVk
aW5nIGNvbGxlY3Rpb24gb3BlcmF0aW9ucyBsaWtlIGBmb3JFYWNoKClgCmFu
ZCBgbWFwKClgLgoKPCEtLSBydW5raXQ6YWN0aXZhdGUgLS0+CmBgYGpzCmNv
bnN0IHsgTWFwIH0gPSByZXF1aXJlKCdpbW11dGFibGUnKTsKY29uc3QgYWxw
aGEgPSBNYXAoeyBhOiAxLCBiOiAyLCBjOiAzLCBkOiA0IH0pOwphbHBoYS5t
YXAoKHYsIGspID0+IGsudG9VcHBlckNhc2UoKSkuam9pbigpOwovLyAnQSxC
LEMsRCcKYGBgCgojIyMgQ29udmVydCBmcm9tIHJhdyBKYXZhU2NyaXB0IG9i
amVjdHMgYW5kIGFycmF5cy4KCkRlc2lnbmVkIHRvIGludGVyLW9wZXJhdGUg
d2l0aCB5b3VyIGV4aXN0aW5nIEphdmFTY3JpcHQsIEltbXV0YWJsZS5qcwph
Y2NlcHRzIHBsYWluIEphdmFTY3JpcHQgQXJyYXlzIGFuZCBPYmplY3RzIGFu
eXdoZXJlIGEgbWV0aG9kIGV4cGVjdHMgYQpgQ29sbGVjdGlvbmAuCgo8IS0t
IHJ1bmtpdDphY3RpdmF0ZSAtLT4KYGBganMKY29uc3QgeyBNYXAsIExpc3Qg
fSA9IHJlcXVpcmUoJ2ltbXV0YWJsZScpOwpjb25zdCBtYXAxID0gTWFwKHsg
YTogMSwgYjogMiwgYzogMywgZDogNCB9KTsKY29uc3QgbWFwMiA9IE1hcCh7
IGM6IDEwLCBhOiAyMCwgdDogMzAgfSk7CmNvbnN0IG9iaiA9IHsgZDogMTAw
LCBvOiAyMDAsIGc6IDMwMCB9Owpjb25zdCBtYXAzID0gbWFwMS5tZXJnZSht
YXAyLCBvYmopOwovLyBNYXAgeyBhOiAyMCwgYjogMiwgYzogMTAsIGQ6IDEw
MCwgdDogMzAsIG86IDIwMCwgZzogMzAwIH0KY29uc3QgbGlzdDEgPSBMaXN0
KFsgMSwgMiwgMyBdKTsKY29uc3QgbGlzdDIgPSBMaXN0KFsgNCwgNSwgNiBd
KTsKY29uc3QgYXJyYXkgPSBbIDcsIDgsIDkgXTsKY29uc3QgbGlzdDMgPSBs
aXN0MS5jb25jYXQobGlzdDIsIGFycmF5KTsKLy8gTGlzdCBbIDEsIDIsIDMs
IDQsIDUsIDYsIDcsIDgsIDkgXQpgYGAKClRoaXMgaXMgcG9zc2libGUgYmVj
YXVzZSBJbW11dGFibGUuanMgY2FuIHRyZWF0IGFueSBKYXZhU2NyaXB0IEFy
cmF5IG9yIE9iamVjdAphcyBhIENvbGxlY3Rpb24uIFlvdSBjYW4gdGFrZSBh
ZHZhbnRhZ2Ugb2YgdGhpcyBpbiBvcmRlciB0byBnZXQgc29waGlzdGljYXRl
ZApjb2xsZWN0aW9uIG1ldGhvZHMgb24gSmF2YVNjcmlwdCBPYmplY3RzLCB3
aGljaCBvdGhlcndpc2UgaGF2ZSBhIHZlcnkgc3BhcnNlCm5hdGl2ZSBBUEku
IEJlY2F1c2UgU2VxIGV2YWx1YXRlcyBsYXppbHkgYW5kIGRvZXMgbm90IGNh
Y2hlIGludGVybWVkaWF0ZQpyZXN1bHRzLCB0aGVzZSBvcGVyYXRpb25zIGNh
biBiZSBleHRyZW1lbHkgZWZmaWNpZW50LgoKPCEtLSBydW5raXQ6YWN0aXZh
dGUgLS0+CmBgYGpzCmNvbnN0IHsgU2VxIH0gPSByZXF1aXJlKCdpbW11dGFi
bGUnKTsKY29uc3QgbXlPYmplY3QgPSB7IGE6IDEsIGI6IDIsIGM6IDMgfTsK
U2VxKG15T2JqZWN0KS5tYXAoeCA9PiB4ICogeCkudG9PYmplY3QoKTsKLy8g
eyBhOiAxLCBiOiA0LCBjOiA5IH0KYGBgCgpLZWVwIGluIG1pbmQsIHdoZW4g
dXNpbmcgSlMgb2JqZWN0cyB0byBjb25zdHJ1Y3QgSW1tdXRhYmxlIE1hcHMs
IHRoYXQKSmF2YVNjcmlwdCBPYmplY3QgcHJvcGVydGllcyBhcmUgYWx3YXlz
IHN0cmluZ3MsIGV2ZW4gaWYgd3JpdHRlbiBpbiBhIHF1b3RlLWxlc3MKc2hv
cnRoYW5kLCB3aGlsZSBJbW11dGFibGUgTWFwcyBhY2NlcHQga2V5cyBvZiBh
bnkgdHlwZS4KCjwhLS0gcnVua2l0OmFjdGl2YXRlIC0tPgpgYGBqcwpjb25z
dCB7IGZyb21KUyB9ID0gcmVxdWlyZSgnaW1tdXRhYmxlJyk7Cgpjb25zdCBv
YmogPSB7IDE6ICJvbmUiIH07CmNvbnNvbGUubG9nKE9iamVjdC5rZXlzKG9i
aikpOyAvLyBbICIxIiBdCmNvbnNvbGUubG9nKG9ialsiMSJdLCBvYmpbMV0p
OyAvLyAib25lIiwgIm9uZSIKCmNvbnN0IG1hcCA9IGZyb21KUyhvYmopOwpj
b25zb2xlLmxvZyhtYXAuZ2V0KCIxIiksIG1hcC5nZXQoMSkpOyAvLyAib25l
IiwgdW5kZWZpbmVkCmBgYAoKUHJvcGVydHkgYWNjZXNzIGZvciBKYXZhU2Ny
aXB0IE9iamVjdHMgZmlyc3QgY29udmVydHMgdGhlIGtleSB0byBhIHN0cmlu
ZywgYnV0CnNpbmNlIEltbXV0YWJsZSBNYXAga2V5cyBjYW4gYmUgb2YgYW55
IHR5cGUgdGhlIGFyZ3VtZW50IHRvIGBnZXQoKWAgaXMKbm90IGFsdGVyZWQu
CgoKIyMjIENvbnZlcnRzIGJhY2sgdG8gcmF3IEphdmFTY3JpcHQgb2JqZWN0
cy4KCkFsbCBJbW11dGFibGUuanMgQ29sbGVjdGlvbnMgY2FuIGJlIGNvbnZl
cnRlZCB0byBwbGFpbiBKYXZhU2NyaXB0IEFycmF5cyBhbmQKT2JqZWN0cyBz
aGFsbG93bHkgd2l0aCBgdG9BcnJheSgpYCBhbmQgYHRvT2JqZWN0KClgIG9y
IGRlZXBseSB3aXRoIGB0b0pTKClgLgpBbGwgSW1tdXRhYmxlIENvbGxlY3Rp
b25zIGFsc28gaW1wbGVtZW50IGB0b0pTT04oKWAgYWxsb3dpbmcgdGhlbSB0
byBiZSBwYXNzZWQKdG8gYEpTT04uc3RyaW5naWZ5YCBkaXJlY3RseS4gVGhl
eSBhbHNvIHJlc3BlY3QgdGhlIGN1c3RvbSBgdG9KU09OKClgIG1ldGhvZHMg
b2YKbmVzdGVkIG9iamVjdHMuCgo8IS0tIHJ1bmtpdDphY3RpdmF0ZSAtLT4K
YGBganMKY29uc3QgeyBNYXAsIExpc3QgfSA9IHJlcXVpcmUoJ2ltbXV0YWJs
ZScpOwpjb25zdCBkZWVwID0gTWFwKHsgYTogMSwgYjogMiwgYzogTGlzdChb
IDMsIDQsIDUgXSkgfSk7CmNvbnNvbGUubG9nKGRlZXAudG9PYmplY3QoKSk7
IC8vIHsgYTogMSwgYjogMiwgYzogTGlzdCBbIDMsIDQsIDUgXSB9CmNvbnNv
bGUubG9nKGRlZXAudG9BcnJheSgpKTsgLy8gWyAxLCAyLCBMaXN0IFsgMywg
NCwgNSBdIF0KY29uc29sZS5sb2coZGVlcC50b0pTKCkpOyAvLyB7IGE6IDEs
IGI6IDIsIGM6IFsgMywgNCwgNSBdIH0KSlNPTi5zdHJpbmdpZnkoZGVlcCk7
IC8vICd7ImEiOjEsImIiOjIsImMiOlszLDQsNV19JwpgYGAKCiMjIyBFbWJy
YWNlcyBFUzIwMTUKCkltbXV0YWJsZS5qcyBzdXBwb3J0cyBhbGwgSmF2YVNj
cmlwdCBlbnZpcm9ubWVudHMsIGluY2x1ZGluZyBsZWdhY3kKYnJvd3NlcnMg
KGV2ZW4gSUU4KS4gSG93ZXZlciBpdCBhbHNvIHRha2VzIGFkdmFudGFnZSBv
ZiBmZWF0dXJlcyBhZGRlZCB0bwpKYXZhU2NyaXB0IGluIFtFUzIwMTVdW10s
IHRoZSBsYXRlc3Qgc3RhbmRhcmQgdmVyc2lvbiBvZiBKYXZhU2NyaXB0LCBp
bmNsdWRpbmcKW0l0ZXJhdG9yc11bXSwgW0Fycm93IEZ1bmN0aW9uc11bXSwg
W0NsYXNzZXNdW10sIGFuZCBbTW9kdWxlc11bXS4gSXQncyBpbnNwaXJlZApi
eSB0aGUgbmF0aXZlIFtNYXBdW10gYW5kIFtTZXRdW10gY29sbGVjdGlvbnMg
YWRkZWQgdG8gRVMyMDE1LgoKQWxsIGV4YW1wbGVzIGluIHRoZSBEb2N1bWVu
dGF0aW9uIGFyZSBwcmVzZW50ZWQgaW4gRVMyMDE1LiBUbyBydW4gaW4gYWxs
CmJyb3dzZXJzLCB0aGV5IG5lZWQgdG8gYmUgdHJhbnNsYXRlZCB0byBFUzUu
CgpgYGBqcwovLyBFUzIwMTUKY29uc3QgbWFwcGVkID0gZm9vLm1hcCh4ID0+
IHggKiB4KTsKLy8gRVM1CnZhciBtYXBwZWQgPSBmb28ubWFwKGZ1bmN0aW9u
ICh4KSB7IHJldHVybiB4ICogeDsgfSk7CmBgYAoKQWxsIEltbXV0YWJsZS5q
cyBjb2xsZWN0aW9ucyBhcmUgW0l0ZXJhYmxlXVtJdGVyYXRvcnNdLCB3aGlj
aCBhbGxvd3MgdGhlbSB0byBiZQp1c2VkIGFueXdoZXJlIGFuIEl0ZXJhYmxl
IGlzIGV4cGVjdGVkLCBzdWNoIGFzIHdoZW4gc3ByZWFkaW5nIGludG8gYW4g
QXJyYXkuCgo8IS0tIHJ1bmtpdDphY3RpdmF0ZSAtLT4KYGBganMKY29uc3Qg
eyBMaXN0IH0gPSByZXF1aXJlKCdpbW11dGFibGUnKTsKY29uc3QgYUxpc3Qg
PSBMaXN0KFsgMSwgMiwgMyBdKTsKY29uc3QgYW5BcnJheSA9IFsgMCwgLi4u
YUxpc3QsIDQsIDUgXTsgLy8gWyAwLCAxLCAyLCAzLCA0LCA1IF0KYGBgCgpO
b3RlOiBBIENvbGxlY3Rpb24gaXMgYWx3YXlzIGl0ZXJhdGVkIGluIHRoZSBz
YW1lIG9yZGVyLCBob3dldmVyIHRoYXQgb3JkZXIgbWF5Cm5vdCBhbHdheXMg
YmUgd2VsbCBkZWZpbmVkLCBhcyBpcyB0aGUgY2FzZSBmb3IgdGhlIGBNYXBg
IGFuZCBgU2V0YC4KCltJdGVyYXRvcnNdOiBodHRwczovL2RldmVsb3Blci5t
b3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L0d1aWRlL1Ro
ZV9JdGVyYXRvcl9wcm90b2NvbApbQXJyb3cgRnVuY3Rpb25zXTogaHR0cHM6
Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNj
cmlwdC9SZWZlcmVuY2UvRnVuY3Rpb25zL0Fycm93X2Z1bmN0aW9ucwpbQ2xh
c3Nlc106IGh0dHA6Ly93aWtpLmVjbWFzY3JpcHQub3JnL2Rva3UucGhwP2lk
PXN0cmF3bWFuOm1heGltYWxseV9taW5pbWFsX2NsYXNzZXMKW01vZHVsZXNd
OiBodHRwOi8vd3d3LjJhbGl0eS5jb20vMjAxNC8wOS9lczYtbW9kdWxlcy1m
aW5hbC5odG1sCgoKTmVzdGVkIFN0cnVjdHVyZXMKLS0tLS0tLS0tLS0tLS0t
LS0KClRoZSBjb2xsZWN0aW9ucyBpbiBJbW11dGFibGUuanMgYXJlIGludGVu
ZGVkIHRvIGJlIG5lc3RlZCwgYWxsb3dpbmcgZm9yIGRlZXAKdHJlZXMgb2Yg
ZGF0YSwgc2ltaWxhciB0byBKU09OLgoKPCEtLSBydW5raXQ6YWN0aXZhdGUg
LS0+CmBgYGpzCmNvbnN0IHsgZnJvbUpTIH0gPSByZXF1aXJlKCdpbW11dGFi
bGUnKTsKY29uc3QgbmVzdGVkID0gZnJvbUpTKHsgYTogeyBiOiB7IGM6IFsg
MywgNCwgNSBdIH0gfSB9KTsKLy8gTWFwIHsgYTogTWFwIHsgYjogTWFwIHsg
YzogTGlzdCBbIDMsIDQsIDUgXSB9IH0gfQpgYGAKCkEgZmV3IHBvd2VyLXRv
b2xzIGFsbG93IGZvciByZWFkaW5nIGFuZCBvcGVyYXRpbmcgb24gbmVzdGVk
IGRhdGEuIFRoZQptb3N0IHVzZWZ1bCBhcmUgYG1lcmdlRGVlcGAsIGBnZXRJ
bmAsIGBzZXRJbmAsIGFuZCBgdXBkYXRlSW5gLCBmb3VuZCBvbiBgTGlzdGAs
CmBNYXBgIGFuZCBgT3JkZXJlZE1hcGAuCgo8IS0tIHJ1bmtpdDphY3RpdmF0
ZSAtLT4KYGBganMKY29uc3QgeyBmcm9tSlMgfSA9IHJlcXVpcmUoJ2ltbXV0
YWJsZScpOwpjb25zdCBuZXN0ZWQgPSBmcm9tSlMoeyBhOiB7IGI6IHsgYzog
WyAzLCA0LCA1IF0gfSB9IH0pOwoKY29uc3QgbmVzdGVkMiA9IG5lc3RlZC5t
ZXJnZURlZXAoeyBhOiB7IGI6IHsgZDogNiB9IH0gfSk7Ci8vIE1hcCB7IGE6
IE1hcCB7IGI6IE1hcCB7IGM6IExpc3QgWyAzLCA0LCA1IF0sIGQ6IDYgfSB9
IH0KCmNvbnNvbGUubG9nKG5lc3RlZDIuZ2V0SW4oWyAnYScsICdiJywgJ2Qn
IF0pKTsgLy8gNgoKY29uc3QgbmVzdGVkMyA9IG5lc3RlZDIudXBkYXRlSW4o
WyAnYScsICdiJywgJ2QnIF0sIHZhbHVlID0+IHZhbHVlICsgMSk7CmNvbnNv
bGUubG9nKG5lc3RlZDMpOwovLyBNYXAgeyBhOiBNYXAgeyBiOiBNYXAgeyBj
OiBMaXN0IFsgMywgNCwgNSBdLCBkOiA3IH0gfSB9Cgpjb25zdCBuZXN0ZWQ0
ID0gbmVzdGVkMy51cGRhdGVJbihbICdhJywgJ2InLCAnYycgXSwgbGlzdCA9
PiBsaXN0LnB1c2goNikpOwovLyBNYXAgeyBhOiBNYXAgeyBiOiBNYXAgeyBj
OiBMaXN0IFsgMywgNCwgNSwgNiBdLCBkOiA3IH0gfSB9CmBgYAoKCkVxdWFs
aXR5IHRyZWF0cyBDb2xsZWN0aW9ucyBhcyBWYWx1ZXMKLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKSW1tdXRhYmxlLmpzIGNvbGxl
Y3Rpb25zIGFyZSB0cmVhdGVkIGFzIHB1cmUgZGF0YSAqdmFsdWVzKi4gVHdv
IGltbXV0YWJsZQpjb2xsZWN0aW9ucyBhcmUgY29uc2lkZXJlZCAqdmFsdWUg
ZXF1YWwqICh2aWEgYC5lcXVhbHMoKWAgb3IgYGlzKClgKSBpZiB0aGV5CnJl
cHJlc2VudCB0aGUgc2FtZSBjb2xsZWN0aW9uIG9mIHZhbHVlcy4gVGhpcyBk
aWZmZXJzIGZyb20gSmF2YVNjcmlwdCdzIHR5cGljYWwKKnJlZmVyZW5jZSBl
cXVhbCogKHZpYSBgPT09YCBvciBgPT1gKSBmb3IgT2JqZWN0cyBhbmQgQXJy
YXlzIHdoaWNoIG9ubHkKZGV0ZXJtaW5lcyBpZiB0d28gdmFyaWFibGVzIHJl
cHJlc2VudCByZWZlcmVuY2VzIHRvIHRoZSBzYW1lIG9iamVjdCBpbnN0YW5j
ZS4KCkNvbnNpZGVyIHRoZSBleGFtcGxlIGJlbG93IHdoZXJlIHR3byBpZGVu
dGljYWwgYE1hcGAgaW5zdGFuY2VzIGFyZSBub3QKKnJlZmVyZW5jZSBlcXVh
bCogYnV0IGFyZSAqdmFsdWUgZXF1YWwqLgoKPCEtLSBydW5raXQ6YWN0aXZh
dGUgLS0+CmBgYGpzCi8vIEZpcnN0IGNvbnNpZGVyOgpjb25zdCBvYmoxID0g
eyBhOiAxLCBiOiAyLCBjOiAzIH07CmNvbnN0IG9iajIgPSB7IGE6IDEsIGI6
IDIsIGM6IDMgfTsKb2JqMSAhPT0gb2JqMjsgLy8gdHdvIGRpZmZlcmVudCBp
bnN0YW5jZXMgYXJlIGFsd2F5cyBub3QgZXF1YWwgd2l0aCA9PT0KCmNvbnN0
IHsgTWFwLCBpcyB9ID0gcmVxdWlyZSgnaW1tdXRhYmxlJyk7CmNvbnN0IG1h
cDEgPSBNYXAoeyBhOiAxLCBiOiAyLCBjOiAzIH0pOwpjb25zdCBtYXAyID0g
TWFwKHsgYTogMSwgYjogMiwgYzogMyB9KTsKbWFwMSAhPT0gbWFwMjsgLy8g
dHdvIGRpZmZlcmVudCBpbnN0YW5jZXMgYXJlIG5vdCByZWZlcmVuY2UtZXF1
YWwKbWFwMS5lcXVhbHMobWFwMik7IC8vIGJ1dCBhcmUgdmFsdWUtZXF1YWwg
aWYgdGhleSBoYXZlIHRoZSBzYW1lIHZhbHVlcwppcyhtYXAxLCBtYXAyKTsg
Ly8gYWx0ZXJuYXRpdmVseSBjYW4gdXNlIHRoZSBpcygpIGZ1bmN0aW9uCmBg
YAoKVmFsdWUgZXF1YWxpdHkgYWxsb3dzIEltbXV0YWJsZS5qcyBjb2xsZWN0
aW9ucyB0byBiZSB1c2VkIGFzIGtleXMgaW4gTWFwcyBvcgp2YWx1ZXMgaW4g
U2V0cywgYW5kIHJldHJpZXZlZCB3aXRoIGRpZmZlcmVudCBidXQgZXF1aXZh
bGVudCBjb2xsZWN0aW9uczoKCjwhLS0gcnVua2l0OmFjdGl2YXRlIC0tPgpg
YGBqcwpjb25zdCB7IE1hcCwgU2V0IH0gPSByZXF1aXJlKCdpbW11dGFibGUn
KTsKY29uc3QgbWFwMSA9IE1hcCh7IGE6IDEsIGI6IDIsIGM6IDMgfSk7CmNv
bnN0IG1hcDIgPSBNYXAoeyBhOiAxLCBiOiAyLCBjOiAzIH0pOwpjb25zdCBz
ZXQgPSBTZXQoKS5hZGQobWFwMSk7CnNldC5oYXMobWFwMik7IC8vIHRydWUg
YmVjYXVzZSB0aGVzZSBhcmUgdmFsdWUtZXF1YWwKYGBgCgpOb3RlOiBgaXMo
KWAgdXNlcyB0aGUgc2FtZSBtZWFzdXJlIG9mIGVxdWFsaXR5IGFzIFtPYmpl
Y3QuaXNdW10gZm9yIHNjYWxhcgpzdHJpbmdzIGFuZCBudW1iZXJzLCBidXQg
dXNlcyB2YWx1ZSBlcXVhbGl0eSBmb3IgSW1tdXRhYmxlIGNvbGxlY3Rpb25z
LApkZXRlcm1pbmluZyBpZiBib3RoIGFyZSBpbW11dGFibGUgYW5kIGFsbCBr
ZXlzIGFuZCB2YWx1ZXMgYXJlIGVxdWFsCnVzaW5nIHRoZSBzYW1lIG1lYXN1
cmUgb2YgZXF1YWxpdHkuCgpbT2JqZWN0LmlzXTogaHR0cHM6Ly9kZXZlbG9w
ZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZl
cmVuY2UvR2xvYmFsX09iamVjdHMvT2JqZWN0L2lzCgojIyMjIFBlcmZvcm1h
bmNlIHRyYWRlb2ZmcwoKV2hpbGUgdmFsdWUgZXF1YWxpdHkgaXMgdXNlZnVs
IGluIG1hbnkgY2lyY3Vtc3RhbmNlcywgaXQgaGFzIGRpZmZlcmVudApwZXJm
b3JtYW5jZSBjaGFyYWN0ZXJpc3RpY3MgdGhhbiByZWZlcmVuY2UgZXF1YWxp
dHkuIFVuZGVyc3RhbmRpbmcgdGhlc2UKdHJhZGVvZmZzIG1heSBoZWxwIHlv
dSBkZWNpZGUgd2hpY2ggdG8gdXNlIGluIGVhY2ggY2FzZSwgZXNwZWNpYWxs
eSB3aGVuIHVzZWQKdG8gbWVtb2l6ZSBzb21lIG9wZXJhdGlvbi4KCldoZW4g
Y29tcGFyaW5nIHR3byBjb2xsZWN0aW9ucywgdmFsdWUgZXF1YWxpdHkgbWF5
IHJlcXVpcmUgY29uc2lkZXJpbmcgZXZlcnkKaXRlbSBpbiBlYWNoIGNvbGxl
Y3Rpb24sIG9uIGFuIGBPKE4pYCB0aW1lIGNvbXBsZXhpdHkuIEZvciBsYXJn
ZSBjb2xsZWN0aW9ucyBvZgp2YWx1ZXMsIHRoaXMgY291bGQgYmVjb21lIGEg
Y29zdGx5IG9wZXJhdGlvbi4gVGhvdWdoIGlmIHRoZSB0d28gYXJlIG5vdCBl
cXVhbAphbmQgaGFyZGx5IHNpbWlsYXIsIHRoZSBpbmVxdWFsaXR5IGlzIGRl
dGVybWluZWQgdmVyeSBxdWlja2x5LiBJbiBjb250cmFzdCwgd2hlbgpjb21w
YXJpbmcgdHdvIGNvbGxlY3Rpb25zIHdpdGggcmVmZXJlbmNlIGVxdWFsaXR5
LCBvbmx5IHRoZSBpbml0aWFsIHJlZmVyZW5jZXMKdG8gbWVtb3J5IG5lZWQg
dG8gYmUgY29tcGFyZWQgd2hpY2ggaXMgbm90IGJhc2VkIG9uIHRoZSBzaXpl
IG9mIHRoZSBjb2xsZWN0aW9ucywKd2hpY2ggaGFzIGFuIGBPKDEpYCB0aW1l
IGNvbXBsZXhpdHkuIENoZWNraW5nIHJlZmVyZW5jZSBlcXVhbGl0eSBpcyBh
bHdheXMgdmVyeQpmYXN0LCBob3dldmVyIGp1c3QgYmVjYXVzZSB0d28gY29s
bGVjdGlvbnMgYXJlIG5vdCByZWZlcmVuY2UtZXF1YWwgZG9lcyBub3QgcnVs
ZQpvdXQgdGhlIHBvc3NpYmlsaXR5IHRoYXQgdGhleSBtYXkgYmUgdmFsdWUt
ZXF1YWwuCgojIyMjIFJldHVybiBzZWxmIG9uIG5vLW9wIG9wdGltaXphdGlv
bgoKV2hlbiBwb3NzaWJsZSwgSW1tdXRhYmxlLmpzIGF2b2lkcyBjcmVhdGlu
ZyBuZXcgb2JqZWN0cyBmb3IgdXBkYXRlcyB3aGVyZSBubwpjaGFuZ2UgaW4g
KnZhbHVlKiBvY2N1cnJlZCwgdG8gYWxsb3cgZm9yIGVmZmljaWVudCAqcmVm
ZXJlbmNlIGVxdWFsaXR5KiBjaGVja2luZwp0byBxdWlja2x5IGRldGVybWlu
ZSBpZiBubyBjaGFuZ2Ugb2NjdXJyZWQuCgo8IS0tIHJ1bmtpdDphY3RpdmF0
ZSAtLT4KYGBganMKY29uc3QgeyBNYXAgfSA9IHJlcXVpcmUoJ2ltbXV0YWJs
ZScpOwpjb25zdCBvcmlnaW5hbE1hcCA9IE1hcCh7IGE6IDEsIGI6IDIsIGM6
IDMgfSk7CmNvbnN0IHVwZGF0ZWRNYXAgPSBvcmlnaW5hbE1hcC5zZXQoJ2In
LCAyKTsKdXBkYXRlZE1hcCA9PT0gb3JpZ2luYWxNYXA7IC8vIE5vLW9wIC5z
ZXQoKSByZXR1cm5lZCB0aGUgb3JpZ2luYWwgcmVmZXJlbmNlLgpgYGAKCkhv
d2V2ZXIgdXBkYXRlcyB3aGljaCBkbyByZXN1bHQgaW4gYSBjaGFuZ2Ugd2ls
bCByZXR1cm4gYSBuZXcgcmVmZXJlbmNlLiBFYWNoCm9mIHRoZXNlIG9wZXJh
dGlvbnMgb2NjdXIgaW5kZXBlbmRlbnRseSwgc28gdHdvIHNpbWlsYXIgdXBk
YXRlcyB3aWxsIG5vdCByZXR1cm4KdGhlIHNhbWUgcmVmZXJlbmNlOgoKPCEt
LSBydW5raXQ6YWN0aXZhdGUgLS0+CmBgYGpzCmNvbnN0IHsgTWFwIH0gPSBy
ZXF1aXJlKCdpbW11dGFibGUnKTsKY29uc3Qgb3JpZ2luYWxNYXAgPSBNYXAo
eyBhOiAxLCBiOiAyLCBjOiAzIH0pOwpjb25zdCB1cGRhdGVkTWFwID0gb3Jp
Z2luYWxNYXAuc2V0KCdiJywgMTAwMCk7Ci8vIE5ldyBpbnN0YW5jZSwgbGVh
dmluZyB0aGUgb3JpZ2luYWwgaW1tdXRhYmxlLgp1cGRhdGVkTWFwICE9PSBv
cmlnaW5hbE1hcDsKY29uc3QgYW5vdGhlclVwZGF0ZWRNYXAgPSBvcmlnaW5h
bE1hcC5zZXQoJ2InLCAxMDAwKTsKLy8gRGVzcGl0ZSBib3RoIHRoZSByZXN1
bHRzIG9mIHRoZSBzYW1lIG9wZXJhdGlvbiwgZWFjaCBjcmVhdGVkIGEgbmV3
IHJlZmVyZW5jZS4KYW5vdGhlclVwZGF0ZWRNYXAgIT09IHVwZGF0ZWRNYXA7
Ci8vIEhvd2V2ZXIgdGhlIHR3byBhcmUgdmFsdWUgZXF1YWwuCmFub3RoZXJV
cGRhdGVkTWFwLmVxdWFscyh1cGRhdGVkTWFwKTsKYGBgCgpCYXRjaGluZyBN
dXRhdGlvbnMKLS0tLS0tLS0tLS0tLS0tLS0tCgo+IElmIGEgdHJlZSBmYWxs
cyBpbiB0aGUgd29vZHMsIGRvZXMgaXQgbWFrZSBhIHNvdW5kPwo+Cj4gSWYg
YSBwdXJlIGZ1bmN0aW9uIG11dGF0ZXMgc29tZSBsb2NhbCBkYXRhIGluIG9y
ZGVyIHRvIHByb2R1Y2UgYW4gaW1tdXRhYmxlCj4gcmV0dXJuIHZhbHVlLCBp
cyB0aGF0IG9rPwo+Cj4g4oCUIFJpY2ggSGlja2V5LCBDbG9qdXJlCgpBcHBs
eWluZyBhIG11dGF0aW9uIHRvIGNyZWF0ZSBhIG5ldyBpbW11dGFibGUgb2Jq
ZWN0IHJlc3VsdHMgaW4gc29tZSBvdmVyaGVhZCwKd2hpY2ggY2FuIGFkZCB1
cCB0byBhIG1pbm9yIHBlcmZvcm1hbmNlIHBlbmFsdHkuIElmIHlvdSBuZWVk
IHRvIGFwcGx5IGEgc2VyaWVzCm9mIG11dGF0aW9ucyBsb2NhbGx5IGJlZm9y
ZSByZXR1cm5pbmcsIEltbXV0YWJsZS5qcyBnaXZlcyB5b3UgdGhlIGFiaWxp
dHkgdG8KY3JlYXRlIGEgdGVtcG9yYXJ5IG11dGFibGUgKHRyYW5zaWVudCkg
Y29weSBvZiBhIGNvbGxlY3Rpb24gYW5kIGFwcGx5IGEgYmF0Y2ggb2YKbXV0
YXRpb25zIGluIGEgcGVyZm9ybWFudCBtYW5uZXIgYnkgdXNpbmcgYHdpdGhN
dXRhdGlvbnNgLiBJbiBmYWN0LCB0aGlzIGlzCmV4YWN0bHkgaG93ICBJbW11
dGFibGUuanMgYXBwbGllcyBjb21wbGV4IG11dGF0aW9ucyBpdHNlbGYuCgpB
cyBhbiBleGFtcGxlLCBidWlsZGluZyBgbGlzdDJgIHJlc3VsdHMgaW4gdGhl
IGNyZWF0aW9uIG9mIDEsIG5vdCAzLCBuZXcKaW1tdXRhYmxlIExpc3RzLgoK
PCEtLSBydW5raXQ6YWN0aXZhdGUgLS0+CmBgYGpzCmNvbnN0IHsgTGlzdCB9
ID0gcmVxdWlyZSgnaW1tdXRhYmxlJyk7CmNvbnN0IGxpc3QxID0gTGlzdChb
IDEsIDIsIDMgXSk7CmNvbnN0IGxpc3QyID0gbGlzdDEud2l0aE11dGF0aW9u
cyhmdW5jdGlvbiAobGlzdCkgewogIGxpc3QucHVzaCg0KS5wdXNoKDUpLnB1
c2goNik7Cn0pOwphc3NlcnQuZXF1YWwobGlzdDEuc2l6ZSwgMyk7CmFzc2Vy
dC5lcXVhbChsaXN0Mi5zaXplLCA2KTsKYGBgCgpOb3RlOiBJbW11dGFibGUu
anMgYWxzbyBwcm92aWRlcyBgYXNNdXRhYmxlYCBhbmQgYGFzSW1tdXRhYmxl
YCwgYnV0IG9ubHkKZW5jb3VyYWdlcyB0aGVpciB1c2Ugd2hlbiBgd2l0aE11
dGF0aW9uc2Agd2lsbCBub3Qgc3VmZmljZS4gVXNlIGNhdXRpb24gdG8gbm90
CnJldHVybiBhIG11dGFibGUgY29weSwgd2hpY2ggY291bGQgcmVzdWx0IGlu
IHVuZGVzaXJlZCBiZWhhdmlvci4KCipJbXBvcnRhbnQhKjogT25seSBhIHNl
bGVjdCBmZXcgbWV0aG9kcyBjYW4gYmUgdXNlZCBpbiBgd2l0aE11dGF0aW9u
c2AgaW5jbHVkaW5nCmBzZXRgLCBgcHVzaGAgYW5kIGBwb3BgLiBUaGVzZSBt
ZXRob2RzIGNhbiBiZSBhcHBsaWVkIGRpcmVjdGx5IGFnYWluc3QgYQpwZXJz
aXN0ZW50IGRhdGEtc3RydWN0dXJlIHdoZXJlIG90aGVyIG1ldGhvZHMgbGlr
ZSBgbWFwYCwgYGZpbHRlcmAsIGBzb3J0YCwKYW5kIGBzcGxpY2VgIHdpbGwg
YWx3YXlzIHJldHVybiBuZXcgaW1tdXRhYmxlIGRhdGEtc3RydWN0dXJlcyBh
bmQgbmV2ZXIgbXV0YXRlCmEgbXV0YWJsZSBjb2xsZWN0aW9uLgoKCkxhenkg
U2VxCi0tLS0tLS0tCgpgU2VxYCBkZXNjcmliZXMgYSBsYXp5IG9wZXJhdGlv
biwgYWxsb3dpbmcgdGhlbSB0byBlZmZpY2llbnRseSBjaGFpbgp1c2Ugb2Yg
YWxsIHRoZSBoaWdoZXItb3JkZXIgY29sbGVjdGlvbiBtZXRob2RzIChzdWNo
IGFzIGBtYXBgIGFuZCBgZmlsdGVyYCkKYnkgbm90IGNyZWF0aW5nIGludGVy
bWVkaWF0ZSBjb2xsZWN0aW9ucy4KCioqU2VxIGlzIGltbXV0YWJsZSoqIOKA
lCBPbmNlIGEgU2VxIGlzIGNyZWF0ZWQsIGl0IGNhbm5vdCBiZQpjaGFuZ2Vk
LCBhcHBlbmRlZCB0bywgcmVhcnJhbmdlZCBvciBvdGhlcndpc2UgbW9kaWZp
ZWQuIEluc3RlYWQsIGFueSBtdXRhdGl2ZQptZXRob2QgY2FsbGVkIG9uIGEg
YFNlcWAgd2lsbCByZXR1cm4gYSBuZXcgYFNlcWAuCgoqKlNlcSBpcyBsYXp5
Kiog4oCUIGBTZXFgIGRvZXMgYXMgbGl0dGxlIHdvcmsgYXMgbmVjZXNzYXJ5
IHRvIHJlc3BvbmQgdG8gYW55Cm1ldGhvZCBjYWxsLiBWYWx1ZXMgYXJlIG9m
dGVuIGNyZWF0ZWQgZHVyaW5nIGl0ZXJhdGlvbiwgaW5jbHVkaW5nIGltcGxp
Y2l0Cml0ZXJhdGlvbiB3aGVuIHJlZHVjaW5nIG9yIGNvbnZlcnRpbmcgdG8g
YSBjb25jcmV0ZSBkYXRhIHN0cnVjdHVyZSBzdWNoIGFzCmEgYExpc3RgIG9y
IEphdmFTY3JpcHQgYEFycmF5YC4KCkZvciBleGFtcGxlLCB0aGUgZm9sbG93
aW5nIHBlcmZvcm1zIG5vIHdvcmssIGJlY2F1c2UgdGhlIHJlc3VsdGluZwpg
U2VxYCdzIHZhbHVlcyBhcmUgbmV2ZXIgaXRlcmF0ZWQ6CgpgYGBqcwpjb25z
dCB7IFNlcSB9ID0gcmVxdWlyZSgnaW1tdXRhYmxlJyk7CmNvbnN0IG9kZFNx
dWFyZXMgPSBTZXEoWyAxLCAyLCAzLCA0LCA1LCA2LCA3LCA4IF0pCiAgLmZp
bHRlcih4ID0+IHggJSAyICE9PSAwKQogIC5tYXAoeCA9PiB4ICogeCk7CmBg
YAoKT25jZSB0aGUgYFNlcWAgaXMgdXNlZCwgaXQgcGVyZm9ybXMgb25seSB0
aGUgd29yayBuZWNlc3NhcnkuIEluIHRoaXMKZXhhbXBsZSwgbm8gaW50ZXJt
ZWRpYXRlIGFycmF5cyBhcmUgZXZlciBjcmVhdGVkLCBmaWx0ZXIgaXMgY2Fs
bGVkIHRocmVlCnRpbWVzLCBhbmQgbWFwIGlzIG9ubHkgY2FsbGVkIG9uY2U6
CgpgYGBqcwpvZGRTcXVhcmVzLmdldCgxKTsgLy8gOQpgYGAKCkFueSBjb2xs
ZWN0aW9uIGNhbiBiZSBjb252ZXJ0ZWQgdG8gYSBsYXp5IFNlcSB3aXRoIGBT
ZXEoKWAuCgo8IS0tIHJ1bmtpdDphY3RpdmF0ZSAtLT4KYGBganMKY29uc3Qg
eyBNYXAsIFNlcSB9ID0gcmVxdWlyZSgnaW1tdXRhYmxlJyk7CmNvbnN0IG1h
cCA9IE1hcCh7IGE6IDEsIGI6IDIsIGM6IDMgfSk7CmNvbnN0IGxhenlTZXEg
PSBTZXEobWFwKTsKYGBgCgpgU2VxYCBhbGxvd3MgZm9yIHRoZSBlZmZpY2ll
bnQgY2hhaW5pbmcgb2Ygb3BlcmF0aW9ucywgYWxsb3dpbmcgZm9yIHRoZQpl
eHByZXNzaW9uIG9mIGxvZ2ljIHRoYXQgY2FuIG90aGVyd2lzZSBiZSB2ZXJ5
IHRlZGlvdXM6CgpgYGBqcwpsYXp5U2VxCiAgLmZsaXAoKQogIC5tYXAoa2V5
ID0+IGtleS50b1VwcGVyQ2FzZSgpKQogIC5mbGlwKCk7Ci8vIFNlcSB7IEE6
IDEsIEI6IDIsIEM6IDMgfQpgYGAKCkFzIHdlbGwgYXMgZXhwcmVzc2luZyBs
b2dpYyB0aGF0IHdvdWxkIG90aGVyd2lzZSBzZWVtIG1lbW9yeSBvciB0aW1l
CmxpbWl0ZWQsIGZvciBleGFtcGxlIGBSYW5nZWAgaXMgYSBzcGVjaWFsIGtp
bmQgb2YgTGF6eSBzZXF1ZW5jZS4KCjwhLS0gcnVua2l0OmFjdGl2YXRlIC0t
PgpgYGBqcwpjb25zdCB7IFJhbmdlIH0gPSByZXF1aXJlKCdpbW11dGFibGUn
KTsKUmFuZ2UoMSwgSW5maW5pdHkpCiAgLnNraXAoMTAwMCkKICAubWFwKG4g
PT4gLW4pCiAgLmZpbHRlcihuID0+IG4gJSAyID09PSAwKQogIC50YWtlKDIp
CiAgLnJlZHVjZSgociwgbikgPT4gciAqIG4sIDEpOwovLyAxMDA2MDA4CmBg
YAoKCkRvY3VtZW50YXRpb24KLS0tLS0tLS0tLS0tLQoKW1JlYWQgdGhlIGRv
Y3NdKGh0dHA6Ly9mYWNlYm9vay5naXRodWIuaW8vaW1tdXRhYmxlLWpzL2Rv
Y3MvKSBhbmQgZWF0IHlvdXIgdmVnZXRhYmxlcy4KCkRvY3MgYXJlIGF1dG9t
YXRpY2FsbHkgZ2VuZXJhdGVkIGZyb20gW0ltbXV0YWJsZS5kLnRzXShodHRw
czovL2dpdGh1Yi5jb20vZmFjZWJvb2svaW1tdXRhYmxlLWpzL2Jsb2IvbWFz
dGVyL3R5cGUtZGVmaW5pdGlvbnMvSW1tdXRhYmxlLmQudHMpLgpQbGVhc2Ug
Y29udHJpYnV0ZSEKCkFsc28sIGRvbid0IG1pc3MgdGhlIFtXaWtpXShodHRw
czovL2dpdGh1Yi5jb20vZmFjZWJvb2svaW1tdXRhYmxlLWpzL3dpa2kpIHdo
aWNoCmNvbnRhaW5zIGFydGljbGVzIG9uIHNwZWNpZmljIHRvcGljcy4gQ2Fu
J3QgZmluZCBzb21ldGhpbmc/IE9wZW4gYW4gW2lzc3VlXShodHRwczovL2dp
dGh1Yi5jb20vZmFjZWJvb2svaW1tdXRhYmxlLWpzL2lzc3VlcykuCgoKVGVz
dGluZwotLS0tLS0tCgpJZiB5b3UgYXJlIHVzaW5nIHRoZSBbQ2hhaSBBc3Nl
cnRpb24gTGlicmFyeV0oaHR0cDovL2NoYWlqcy5jb20vKSwgW0NoYWkgSW1t
dXRhYmxlXShodHRwczovL2dpdGh1Yi5jb20vYXN0b3JpamUvY2hhaS1pbW11
dGFibGUpIHByb3ZpZGVzIGEgc2V0IG9mIGFzc2VydGlvbnMgdG8gdXNlIGFn
YWluc3QgSW1tdXRhYmxlLmpzIGNvbGxlY3Rpb25zLgoKCkNvbnRyaWJ1dGlv
bgotLS0tLS0tLS0tLS0KClVzZSBbR2l0aHViIGlzc3Vlc10oaHR0cHM6Ly9n
aXRodWIuY29tL2ZhY2Vib29rL2ltbXV0YWJsZS1qcy9pc3N1ZXMpIGZvciBy
ZXF1ZXN0cy4KCldlIGFjdGl2ZWx5IHdlbGNvbWUgcHVsbCByZXF1ZXN0cywg
bGVhcm4gaG93IHRvIFtjb250cmlidXRlXShodHRwczovL2dpdGh1Yi5jb20v
ZmFjZWJvb2svaW1tdXRhYmxlLWpzL2Jsb2IvbWFzdGVyLy5naXRodWIvQ09O
VFJJQlVUSU5HLm1kKS4KCgpDaGFuZ2Vsb2cKLS0tLS0tLS0tCgpDaGFuZ2Vz
IGFyZSB0cmFja2VkIGFzIFtHaXRodWIgcmVsZWFzZXNdKGh0dHBzOi8vZ2l0
aHViLmNvbS9mYWNlYm9vay9pbW11dGFibGUtanMvcmVsZWFzZXMpLgoKClRo
YW5rcwotLS0tLS0KCltQaGlsIEJhZ3dlbGxdKGh0dHBzOi8vd3d3LnlvdXR1
YmUuY29tL3dhdGNoP3Y9SzJOWXdQOTBiTnMpLCBmb3IgaGlzIGluc3BpcmF0
aW9uCmFuZCByZXNlYXJjaCBpbiBwZXJzaXN0ZW50IGRhdGEgc3RydWN0dXJl
cy4KCltIdWdoIEphY2tzb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9odWdoZmRq
YWNrc29uLyksIGZvciBwcm92aWRpbmcgdGhlIG5wbSBwYWNrYWdlCm5hbWUu
IElmIHlvdSdyZSBsb29raW5nIGZvciBoaXMgdW5zdXBwb3J0ZWQgcGFja2Fn
ZSwgc2VlIFt0aGlzIHJlcG9zaXRvcnldKGh0dHBzOi8vZ2l0aHViLmNvbS9o
dWdoZmRqYWNrc29uL2ltbXV0YWJsZSkuCgoKTGljZW5zZQotLS0tLS0tCgpJ
bW11dGFibGUuanMgaXMgW01JVC1saWNlbnNlZF0oaHR0cHM6Ly9naXRodWIu
Y29tL2ZhY2Vib29rL2ltbXV0YWJsZS1qcy9ibG9iL21hc3Rlci9MSUNFTlNF
KS4K
",,28817,"c3VkbzogZmFsc2UKbGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczogOAoKY2Fj
aGU6IHlhcm4Kc2NyaXB0OiBucG0gcnVuIHRlc3Q6dHJhdmlzCgplbnY6CiAg
Z2xvYmFsOgogICAgLSBzZWN1cmU6ICJWRHN4eTMwc0U5aXZkcW9Ya2FLWG8w
Y3piUzRick5wd0tFSWJsdTdmMWdWTHg3T0Q5cGpUYzc4Y2R3clZiWkRCWXJv
U2lZVll1VXJMRGpwVmpIODhsTC9MeFJycnUzVjBDSWxBcXFhK3NzWGNxeWND
YVQvNmRzK1p5bXVUVEdSaCtNZjEycElLTyt5YzhqVG92Mk03QXpQSmRwUytP
UlA1ZEltWXlFM2V4OXM9IgoKZGVwbG95OgogIC0gcHJvdmlkZXI6IHNjcmlw
dAogICAgc2NyaXB0OiBucG0gcnVuIGdpdHB1Ymxpc2gKICAgIHNraXBfY2xl
YW51cDogdHJ1ZQogICAgb246CiAgICAgIGJyYW5jaDogbWFzdGVyCiAgICAg
IHJlcG86IGZhY2Vib29rL2ltbXV0YWJsZS1qcwogIC0gcHJvdmlkZXI6IHNj
cmlwdAogICAgc2tpcF9jbGVhbnVwOiB0cnVlCiAgICBzY3JpcHQ6IG5wbSBy
dW4gZGVwbG95CiAgICBvbjoKICAgICAgYnJhbmNoOiBtYXN0ZXIKICAgICAg
cmVwbzogZmFjZWJvb2svaW1tdXRhYmxlLWpzCiAgICAgIHRhZ3M6IHRydWUK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'hexo',5923215,"b'A fast, simple & powerful blog framework, powered by Node.js.'",b'JavaScript',223,28812,,848,False,b'https://api.github.com/repos/hexojs/hexo/forks',"PGltZyBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9o
ZXhvanMvbG9nby9tYXN0ZXIvaGV4by1sb2dvLWF2YXRhci5wbmciIGFsdD0i
SGV4byBsb2dvIiB3aWR0aD0iMTAwIiBoZWlnaHQ9IjEwMCIgYWxpZ249InJp
Z2h0IiAvPgoKIyBIZXhvCgo+IEEgZmFzdCwgc2ltcGxlICYgcG93ZXJmdWwg
YmxvZyBmcmFtZXdvcmssIHBvd2VyZWQgYnkgW05vZGUuanNdKGh0dHBzOi8v
bm9kZWpzLm9yZykuCgpbV2Vic2l0ZV0oaHR0cHM6Ly9oZXhvLmlvKSB8CltE
b2N1bWVudGF0aW9uXShodHRwczovL2hleG8uaW8vZG9jcy8pIHwKW0luc3Rh
bGxhdGlvbiBHdWlkZV0oaHR0cHM6Ly9oZXhvLmlvL2RvY3MvI0luc3RhbGxh
dGlvbikgfApbQ29udHJpYnV0aW9uIEd1aWRlXShodHRwczovL2hleG8uaW8v
ZG9jcy9jb250cmlidXRpbmcpIHwKW0FQSV0oaHR0cHM6Ly9oZXhvLmlvL2Fw
aS8pIHwKW1R3aXR0ZXJdKGh0dHBzOi8vdHdpdHRlci5jb20vaGV4b2pzKQoK
WyFbTlBNIHZlcnNpb25dKGh0dHBzOi8vYmFkZ2UuZnVyeS5pby9qcy9oZXhv
LnN2ZyldKGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL2hleG8pCiFb
UmVxdWlyZWQgTm9kZSB2ZXJzaW9uXShodHRwczovL2ltZy5zaGllbGRzLmlv
L25vZGUvdi9oZXhvKQpbIVtCdWlsZCBTdGF0dXNdKGh0dHBzOi8vdHJhdmlz
LWNpLmNvbS9oZXhvanMvaGV4by5zdmc/YnJhbmNoPW1hc3RlcildKGh0dHBz
Oi8vdHJhdmlzLWNpLmNvbS9oZXhvanMvaGV4bykKWyFbQnVpbGQgc3RhdHVz
XShodHRwczovL2NpLmFwcHZleW9yLmNvbS9hcGkvcHJvamVjdHMvc3RhdHVz
L2dpdGh1Yi9oZXhvanMvaGV4bz9icmFuY2g9bWFzdGVyJnN2Zz10cnVlKV0o
aHR0cHM6Ly9jaS5hcHB2ZXlvci5jb20vcHJvamVjdC90b21teTM1MS9oZXhv
L2JyYW5jaC9tYXN0ZXIpClshW2RlcGVuZGVuY2llcyBTdGF0dXNdKGh0dHBz
Oi8vZGF2aWQtZG0ub3JnL2hleG9qcy9oZXhvL3N0YXR1cy5zdmcpXShodHRw
czovL2RhdmlkLWRtLm9yZy9oZXhvanMvaGV4bykKWyFbZGV2RGVwZW5kZW5j
aWVzIFN0YXR1c10oaHR0cHM6Ly9kYXZpZC1kbS5vcmcvaGV4b2pzL2hleG8v
ZGV2LXN0YXR1cy5zdmcpXShodHRwczovL2RhdmlkLWRtLm9yZy9oZXhvanMv
aGV4bz90eXBlPWRldikKWyFbQ292ZXJhZ2UgU3RhdHVzXShodHRwczovL2Nv
dmVyYWxscy5pby9yZXBvcy9oZXhvanMvaGV4by9iYWRnZS5zdmc/YnJhbmNo
PW1hc3RlcildKGh0dHBzOi8vY292ZXJhbGxzLmlvL3IvaGV4b2pzL2hleG8/
YnJhbmNoPW1hc3RlcikKWyFbR2l0dGVyXShodHRwczovL2JhZGdlcy5naXR0
ZXIuaW0vaGV4b2pzL2hleG8uc3ZnKV0oaHR0cHM6Ly9naXR0ZXIuaW0vaGV4
b2pzL2hleG8pClshW0Rpc2NvcmQgQ2hhdF0oaHR0cHM6Ly9pbWcuc2hpZWxk
cy5pby9iYWRnZS9jaGF0LW9uJTIwZGlzY29yZC03Mjg5ZGEuc3ZnKV0oaHR0
cHM6Ly9kaXNjb3JkLmdnL3RlTTJBbmopClshW1RlbGVncmFtIENoYXRdKGh0
dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvY2hhdC1vbiUyMHRlbGVncmFt
LTMyYWZlZC5zdmcpXShodHRwczovL3QubWUvaGV4b2pzKQpbIVtGT1NTQSBT
dGF0dXNdKGh0dHBzOi8vYXBwLmZvc3NhLmNvbS9hcGkvcHJvamVjdHMvZ2l0
JTJCZ2l0aHViLmNvbSUyRmhleG9qcyUyRmhleG8uc3ZnP3R5cGU9c2hpZWxk
KV0oaHR0cHM6Ly9hcHAuZm9zc2EuY29tL3Byb2plY3RzL2dpdCUyQmdpdGh1
Yi5jb20lMkZoZXhvanMlMkZoZXhvP3JlZj1iYWRnZV9zaGllbGQpCgojIyBG
ZWF0dXJlcwoKLSBCbGF6aW5nIGZhc3QgZ2VuZXJhdGluZwotIFN1cHBvcnQg
Zm9yIEdpdEh1YiBGbGF2b3JlZCBNYXJrZG93biBhbmQgbW9zdCBPY3RvcHJl
c3MgcGx1Z2lucwotIE9uZS1jb21tYW5kIGRlcGxveSB0byBHaXRIdWIgUGFn
ZXMsIEhlcm9rdSwgZXRjLgotIFBvd2VyZnVsIEFQSSBmb3IgbGltaXRsZXNz
IGV4dGVuc2liaWxpdHkKLSBIdW5kcmVkcyBvZiBbdGhlbWVzXShodHRwczov
L2hleG8uaW8vdGhlbWVzLykgJiBbcGx1Z2luc10oaHR0cHM6Ly9oZXhvLmlv
L3BsdWdpbnMvKQoKIyMgUXVpY2sgU3RhcnQKCioqSW5zdGFsbCBIZXhvKioK
CmBgYCBiYXNoCiQgbnBtIGluc3RhbGwgaGV4by1jbGkgLWcKYGBgCgoqKlNl
dHVwIHlvdXIgYmxvZyoqCgpgYGAgYmFzaAokIGhleG8gaW5pdCBibG9nCiQg
Y2QgYmxvZwpgYGAKCioqU3RhcnQgdGhlIHNlcnZlcioqCgpgYGAgYmFzaAok
IGhleG8gc2VydmVyCmBgYAoKKipDcmVhdGUgYSBuZXcgcG9zdCoqCgpgYGAg
YmFzaAokIGhleG8gbmV3ICJIZWxsbyBIZXhvIgpgYGAKCioqR2VuZXJhdGUg
c3RhdGljIGZpbGVzKioKCmBgYCBiYXNoCiQgaGV4byBnZW5lcmF0ZQpgYGAK
CiMjIE1vcmUgSW5mb3JtYXRpb24KCi0gUmVhZCB0aGUgW2RvY3VtZW50YXRp
b25dKGh0dHBzOi8vaGV4by5pby8pCi0gVmlzaXQgdGhlIFtBd2Vzb21lIEhl
eG9dKGh0dHBzOi8vZ2l0aHViLmNvbS9oZXhvanMvYXdlc29tZS1oZXhvKSBs
aXN0Ci0gRmluZCBzb2x1dGlvbnMgaW4gW3Ryb3VibGVzaG9vdGluZ10oaHR0
cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWwpCi0gSm9p
biBkaXNjdXNzaW9uIG9uIFtHb29nbGUgR3JvdXBdKGh0dHBzOi8vZ3JvdXBz
Lmdvb2dsZS5jb20vZ3JvdXAvaGV4byksIFtEaXNjb3JkXShodHRwczovL2Rp
c2NvcmQuZ2cvdGVNMkFuaiksIFtHaXR0ZXJdKGh0dHBzOi8vZ2l0dGVyLmlt
L2hleG9qcy9oZXhvKSBvciBbVGVsZWdyYW1dKGh0dHBzOi8vdC5tZS9oZXhv
anMpCi0gU2VlIHRoZSBbcGx1Z2luIGxpc3RdKGh0dHBzOi8vaGV4by5pby9w
bHVnaW5zLykgYW5kIHRoZSBbdGhlbWUgbGlzdF0oaHR0cHM6Ly9oZXhvLmlv
L3RoZW1lcy8pIG9uIHdpa2kKLSBGb2xsb3cgW0BoZXhvanNdKGh0dHBzOi8v
dHdpdHRlci5jb20vaGV4b2pzKSBmb3IgbGF0ZXN0IG5ld3MKCiMjIENvbnRy
aWJ1dGluZwoKV2Ugd2VsY29tZSB5b3UgdG8gam9pbiB0aGUgZGV2ZWxvcG1l
bnQgb2YgSGV4by4gUGxlYXNlIHNlZSBbY29udHJpYnV0aW5nIGRvY3VtZW50
XShodHRwczovL2hleG8uaW8vZG9jcy9jb250cmlidXRpbmcpLiDwn6SXCgpB
bHNvLCB3ZSB3ZWxjb21lIFBSIG9yIGlzc3VlIHRvIFtvZmZpY2lhbC1wbHVn
aW5zXShodHRwczovL2dpdGh1Yi5jb20vaGV4b2pzKS4KCiMjIENvbnRyaWJ1
dG9ycwoKWyFbXShodHRwczovL29wZW5jb2xsZWN0aXZlLmNvbS9IZXhvL2Nv
bnRyaWJ1dG9ycy5zdmc/d2lkdGg9ODkwKV0oaHR0cHM6Ly9naXRodWIuY29t
L2hleG9qcy9oZXhvL2dyYXBocy9jb250cmlidXRvcnMpCgojIyBCYWNrZXJz
CgpbIVtCYWNrZXJzXShodHRwczovL29wZW5jb2xsZWN0aXZlLmNvbS9oZXhv
L3RpZXJzL2JhY2tlcnMuc3ZnP2F2YXRhckhlaWdodD0zNiZ3aWR0aD02MDAp
XShodHRwczovL29wZW5jb2xsZWN0aXZlLmNvbS9oZXhvKQoKIyMgU3BvbnNv
cnMKCjxhIGhyZWY9Imh0dHBzOi8vd3d3LmpldGJyYWlucy5jb20vIj48aW1n
IHNyYz0iLy5naXRodWIvamV0YnJhaW5zLXZhcmlhbnQtNC5zdmciIGFsdD0i
SmV0QnJhaW5zIiB3aWR0aD0iMjAwIi8+PC9hPgoKPGEgaHJlZj0iaHR0cHM6
Ly93d3cuY21zY3JpdGljLmNvbS8iPjxpbWcgc3JjPSIvLmdpdGh1Yi9DTVMt
Q3JpdGljX2xvZ28tMy5wbmciIGFsdD0iQ01TIENyaXRpYyIgd2lkdGg9IjIw
MCIvPjwvYT4KCjxhIGhyZWY9Imh0dHBzOi8vZ2V0Zm9ybS5pby8iPjxpbWcg
c3JjPSIvLmdpdGh1Yi9nZXRmb3JtLWxvZ28uc3ZnIiBhbHQ9IkdldGZvcm0i
IHdpZHRoPSIyMDAiLz48L2E+CgojIyBMaWNlbnNlCgpbIVtGT1NTQSBTdGF0
dXNdKGh0dHBzOi8vYXBwLmZvc3NhLmNvbS9hcGkvcHJvamVjdHMvZ2l0JTJC
Z2l0aHViLmNvbSUyRmhleG9qcyUyRmhleG8uc3ZnP3R5cGU9bGFyZ2UpXSho
dHRwczovL2FwcC5mb3NzYS5jb20vcHJvamVjdHMvZ2l0JTJCZ2l0aHViLmNv
bSUyRmhleG9qcyUyRmhleG8/cmVmPWJhZGdlX2xhcmdlKQo=
",,28812,"bGFuZ3VhZ2U6IG5vZGVfanMKCmFkZG9uczoKICBhcHQ6CiAgICBwYWNrYWdl
czoKICAgIC0gdGltZQoKY2FjaGU6CiAgbnBtOiB0cnVlCgpub2RlX2pzOgog
IC0gIjgiCiAgLSAiMTAiCiAgLSAiMTIiCiAgLSAiMTMiCgpzY3JpcHQ6CiAg
LSBucG0gcnVuIGVzbGludAogIC0gbnBtIHJ1biB0ZXN0LWNvdgogIC0gLi90
ZXN0L2JlbmNobWFyay5zaAoKYWZ0ZXJfc2NyaXB0OgogIC0gbnBtIGluc3Rh
bGwgY292ZXJhbGxzCiAgLSBueWMgcmVwb3J0IC0tcmVwb3J0ZXI9dGV4dC1s
Y292IHwgY292ZXJhbGxzCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
