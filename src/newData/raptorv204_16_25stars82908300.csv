name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'dataloader',42237038,"b""DataLoader is a generic utility to be used as part of your application's data fetching layer to provide a consistent API over various backends and reduce requests to those backends via batching and caching.""",b'JavaScript',2,8299,,146,False,b'https://api.github.com/repos/graphql/dataloader/forks',"IyBEYXRhTG9hZGVyCgpEYXRhTG9hZGVyIGlzIGEgZ2VuZXJpYyB1dGlsaXR5
IHRvIGJlIHVzZWQgYXMgcGFydCBvZiB5b3VyIGFwcGxpY2F0aW9uJ3MgZGF0
YQpmZXRjaGluZyBsYXllciB0byBwcm92aWRlIGEgc2ltcGxpZmllZCBhbmQg
Y29uc2lzdGVudCBBUEkgb3ZlciB2YXJpb3VzIHJlbW90ZQpkYXRhIHNvdXJj
ZXMgc3VjaCBhcyBkYXRhYmFzZXMgb3Igd2ViIHNlcnZpY2VzIHZpYSBiYXRj
aGluZyBhbmQgY2FjaGluZy4KClshW0J1aWxkIFN0YXR1c10oaHR0cHM6Ly90
cmF2aXMtY2kub3JnL2dyYXBocWwvZGF0YWxvYWRlci5zdmcpXShodHRwczov
L3RyYXZpcy1jaS5vcmcvZ3JhcGhxbC9kYXRhbG9hZGVyKQpbIVtDb3ZlcmFn
ZSBTdGF0dXNdKGh0dHBzOi8vY292ZXJhbGxzLmlvL3JlcG9zL2dyYXBocWwv
ZGF0YWxvYWRlci9iYWRnZS5zdmc/YnJhbmNoPW1hc3RlciZzZXJ2aWNlPWdp
dGh1YildKGh0dHBzOi8vY292ZXJhbGxzLmlvL2dpdGh1Yi9ncmFwaHFsL2Rh
dGFsb2FkZXI/YnJhbmNoPW1hc3RlcikKCkEgcG9ydCBvZiB0aGUgIkxvYWRl
ciIgQVBJIG9yaWdpbmFsbHkgZGV2ZWxvcGVkIGJ5IFtAc2Nocm9ja25dW10g
YXQgRmFjZWJvb2sgaW4KMjAxMCBhcyBhIHNpbXBsaWZ5aW5nIGZvcmNlIHRv
IGNvYWxlc2NlIHRoZSBzdW5kcnkga2V5LXZhbHVlIHN0b3JlIGJhY2stZW5k
CkFQSXMgd2hpY2ggZXhpc3RlZCBhdCB0aGUgdGltZS4gQXQgRmFjZWJvb2ss
ICJMb2FkZXIiIGJlY2FtZSBvbmUgb2YgdGhlCmltcGxlbWVudGF0aW9uIGRl
dGFpbHMgb2YgdGhlICJFbnQiIGZyYW1ld29yaywgYSBwcml2YWN5LWF3YXJl
IGRhdGEgZW50aXR5CmxvYWRpbmcgYW5kIGNhY2hpbmcgbGF5ZXIgd2l0aGlu
IHdlYiBzZXJ2ZXIgcHJvZHVjdCBjb2RlLiBUaGlzIHVsdGltYXRlbHkgYmVj
YW1lCnRoZSB1bmRlcnBpbm5pbmcgZm9yIEZhY2Vib29rJ3MgR3JhcGhRTCBz
ZXJ2ZXIgaW1wbGVtZW50YXRpb24gYW5kIHR5cGUKZGVmaW5pdGlvbnMuCgpE
YXRhTG9hZGVyIGlzIGEgc2ltcGxpZmllZCB2ZXJzaW9uIG9mIHRoaXMgb3Jp
Z2luYWwgaWRlYSBpbXBsZW1lbnRlZCBpbgpKYXZhU2NyaXB0IGZvciBOb2Rl
LmpzIHNlcnZpY2VzLiBEYXRhTG9hZGVyIGlzIG9mdGVuIHVzZWQgd2hlbiBp
bXBsZW1lbnRpbmcgYQpbZ3JhcGhxbC1qc11bXSBzZXJ2aWNlLCB0aG91Z2gg
aXQgaXMgYWxzbyBicm9hZGx5IHVzZWZ1bCBpbiBvdGhlciBzaXR1YXRpb25z
LgoKVGhpcyBtZWNoYW5pc20gb2YgYmF0Y2hpbmcgYW5kIGNhY2hpbmcgZGF0
YSByZXF1ZXN0cyBpcyBjZXJ0YWlubHkgbm90IHVuaXF1ZSB0bwpOb2RlLmpz
IG9yIEphdmFTY3JpcHQsIGl0IGlzIGFsc28gdGhlIHByaW1hcnkgbW90aXZh
dGlvbiBmb3IKW0hheGxdKGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9I
YXhsKSwgRmFjZWJvb2sncyBkYXRhIGxvYWRpbmcgbGlicmFyeQpmb3IgSGFz
a2VsbC4gTW9yZSBhYm91dCBob3cgSGF4bCB3b3JrcyBjYW4gYmUgcmVhZCBp
biB0aGlzIFtibG9nIHBvc3RdKGh0dHBzOi8vY29kZS5mYWNlYm9vay5jb20v
cG9zdHMvMzAyMDYwOTczMjkxMTI4L29wZW4tc291cmNpbmctaGF4bC1hLWxp
YnJhcnktZm9yLWhhc2tlbGwvKS4KCkRhdGFMb2FkZXIgaXMgcHJvdmlkZWQg
c28gdGhhdCBpdCBtYXkgYmUgdXNlZnVsIG5vdCBqdXN0IHRvIGJ1aWxkIEdy
YXBoUUwKc2VydmljZXMgZm9yIE5vZGUuanMgYnV0IGFsc28gYXMgYSBwdWJs
aWNseSBhdmFpbGFibGUgcmVmZXJlbmNlIGltcGxlbWVudGF0aW9uCm9mIHRo
aXMgY29uY2VwdCBpbiB0aGUgaG9wZXMgdGhhdCBpdCBjYW4gYmUgcG9ydGVk
IHRvIG90aGVyIGxhbmd1YWdlcy4gSWYgeW91CnBvcnQgRGF0YUxvYWRlciB0
byBhbm90aGVyIGxhbmd1YWdlLCBwbGVhc2Ugb3BlbiBhbiBpc3N1ZSB0byBp
bmNsdWRlIGEgbGluayBmcm9tCnRoaXMgcmVwb3NpdG9yeS4KCgojIyBHZXR0
aW5nIFN0YXJ0ZWQKCkZpcnN0LCBpbnN0YWxsIERhdGFMb2FkZXIgdXNpbmcg
bnBtLgoKYGBgc2gKbnBtIGluc3RhbGwgLS1zYXZlIGRhdGFsb2FkZXIKYGBg
CgpUbyBnZXQgc3RhcnRlZCwgY3JlYXRlIGEgYERhdGFMb2FkZXJgLiBFYWNo
IGBEYXRhTG9hZGVyYCBpbnN0YW5jZSByZXByZXNlbnRzIGEKdW5pcXVlIGNh
Y2hlLiBUeXBpY2FsbHkgaW5zdGFuY2VzIGFyZSBjcmVhdGVkIHBlciByZXF1
ZXN0IHdoZW4gdXNlZCB3aXRoaW4gYQp3ZWItc2VydmVyIGxpa2UgW2V4cHJl
c3NdW10gaWYgZGlmZmVyZW50IHVzZXJzIGNhbiBzZWUgZGlmZmVyZW50IHRo
aW5ncy4KCj4gTm90ZTogRGF0YUxvYWRlciBhc3N1bWVzIGEgSmF2YVNjcmlw
dCBlbnZpcm9ubWVudCB3aXRoIGdsb2JhbCBFUzYgYFByb21pc2VgCmFuZCBg
TWFwYCBjbGFzc2VzLCBhdmFpbGFibGUgaW4gYWxsIHN1cHBvcnRlZCB2ZXJz
aW9ucyBvZiBOb2RlLmpzLgoKCiMjIEJhdGNoaW5nCgpCYXRjaGluZyBpcyBu
b3QgYW4gYWR2YW5jZWQgZmVhdHVyZSwgaXQncyBEYXRhTG9hZGVyJ3MgcHJp
bWFyeSBmZWF0dXJlLgpDcmVhdGUgbG9hZGVycyBieSBwcm92aWRpbmcgYSBi
YXRjaCBsb2FkaW5nIGZ1bmN0aW9uLgoKYGBganMKY29uc3QgRGF0YUxvYWRl
ciA9IHJlcXVpcmUoJ2RhdGFsb2FkZXInKQoKY29uc3QgdXNlckxvYWRlciA9
IG5ldyBEYXRhTG9hZGVyKGtleXMgPT4gbXlCYXRjaEdldFVzZXJzKGtleXMp
KQpgYGAKCkEgYmF0Y2ggbG9hZGluZyBmdW5jdGlvbiBhY2NlcHRzIGFuIEFy
cmF5IG9mIGtleXMsIGFuZCByZXR1cm5zIGEgUHJvbWlzZSB3aGljaApyZXNv
bHZlcyB0byBhbiBBcnJheSBvZiB2YWx1ZXNbPHN1cD4qPC9zdXA+XSgjYmF0
Y2gtZnVuY3Rpb24pLgoKVGhlbiBsb2FkIGluZGl2aWR1YWwgdmFsdWVzIGZy
b20gdGhlIGxvYWRlci4gRGF0YUxvYWRlciB3aWxsIGNvYWxlc2NlIGFsbApp
bmRpdmlkdWFsIGxvYWRzIHdoaWNoIG9jY3VyIHdpdGhpbiBhIHNpbmdsZSBm
cmFtZSBvZiBleGVjdXRpb24gKGEgc2luZ2xlIHRpY2sKb2YgdGhlIGV2ZW50
IGxvb3ApIGFuZCB0aGVuIGNhbGwgeW91ciBiYXRjaCBmdW5jdGlvbiB3aXRo
IGFsbCByZXF1ZXN0ZWQga2V5cy4KCmBgYGpzCmNvbnN0IHVzZXIgPSBhd2Fp
dCB1c2VyTG9hZGVyLmxvYWQoMSkKY29uc3QgaW52aXRlZEJ5ID0gYXdhaXQg
dXNlckxvYWRlci5sb2FkKHVzZXIuaW52aXRlZEJ5SUQpCmNvbnNvbGUubG9n
KGBVc2VyIDEgd2FzIGludml0ZWQgYnkgJHtpbnZpdGVkQnl9YCkKCi8vIEVs
c2V3aGVyZSBpbiB5b3VyIGFwcGxpY2F0aW9uCmNvbnN0IHVzZXIgPSBhd2Fp
dCB1c2VyTG9hZGVyLmxvYWQoMikKY29uc3QgbGFzdEludml0ZWQgPSBhd2Fp
dCB1c2VyTG9hZGVyLmxvYWQodXNlci5sYXN0SW52aXRlZElEKQpjb25zb2xl
LmxvZyhgVXNlciAyIGxhc3QgaW52aXRlZCAke2xhc3RJbnZpdGVkfWApCmBg
YAoKQSBuYWl2ZSBhcHBsaWNhdGlvbiBtYXkgaGF2ZSBpc3N1ZWQgZm91ciBy
b3VuZC10cmlwcyB0byBhIGJhY2tlbmQgZm9yIHRoZQpyZXF1aXJlZCBpbmZv
cm1hdGlvbiwgYnV0IHdpdGggRGF0YUxvYWRlciB0aGlzIGFwcGxpY2F0aW9u
IHdpbGwgbWFrZSBhdCBtb3N0CnR3by4KCkRhdGFMb2FkZXIgYWxsb3dzIHlv
dSB0byBkZWNvdXBsZSB1bnJlbGF0ZWQgcGFydHMgb2YgeW91ciBhcHBsaWNh
dGlvbiB3aXRob3V0CnNhY3JpZmljaW5nIHRoZSBwZXJmb3JtYW5jZSBvZiBi
YXRjaCBkYXRhLWxvYWRpbmcuIFdoaWxlIHRoZSBsb2FkZXIgcHJlc2VudHMg
YW4KQVBJIHRoYXQgbG9hZHMgaW5kaXZpZHVhbCB2YWx1ZXMsIGFsbCBjb25j
dXJyZW50IHJlcXVlc3RzIHdpbGwgYmUgY29hbGVzY2VkIGFuZApwcmVzZW50
ZWQgdG8geW91ciBiYXRjaCBsb2FkaW5nIGZ1bmN0aW9uLiBUaGlzIGFsbG93
cyB5b3VyIGFwcGxpY2F0aW9uIHRvIHNhZmVseQpkaXN0cmlidXRlIGRhdGEg
ZmV0Y2hpbmcgcmVxdWlyZW1lbnRzIHRocm91Z2hvdXQgeW91ciBhcHBsaWNh
dGlvbiBhbmQgbWFpbnRhaW4KbWluaW1hbCBvdXRnb2luZyBkYXRhIHJlcXVl
c3RzLgoKIyMjIyBCYXRjaCBGdW5jdGlvbgoKQSBiYXRjaCBsb2FkaW5nIGZ1
bmN0aW9uIGFjY2VwdHMgYW4gQXJyYXkgb2Yga2V5cywgYW5kIHJldHVybnMg
YSBQcm9taXNlIHdoaWNoCnJlc29sdmVzIHRvIGFuIEFycmF5IG9mIHZhbHVl
cyBvciBFcnJvciBpbnN0YW5jZXMuIFRoZSBsb2FkZXIgaXRzZWxmIGlzIHBy
b3ZpZGVkCmFzIHRoZSBgdGhpc2AgY29udGV4dC4KCmBgYGpzCmFzeW5jIGZ1
bmN0aW9uIGJhdGNoRnVuY3Rpb24oa2V5cykgewogIGNvbnN0IHJlc3VsdHMg
PSBhd2FpdCBkYi5mZXRjaEFsbEtleXMoa2V5cykKICByZXR1cm4ga2V5cy5t
YXAoa2V5ID0+IHJlc3VsdHNba2V5XSB8fCBuZXcgRXJyb3IoYE5vIHJlc3Vs
dCBmb3IgJHtrZXl9YCkpCn0KCmNvbnN0IGxvYWRlciA9IG5ldyBEYXRhTG9h
ZGVyKGJhdGNoRnVuY3Rpb24pCmBgYAoKVGhlcmUgYXJlIGEgZmV3IGNvbnN0
cmFpbnRzIHRoaXMgZnVuY3Rpb24gbXVzdCB1cGhvbGQ6CgogKiBUaGUgQXJy
YXkgb2YgdmFsdWVzIG11c3QgYmUgdGhlIHNhbWUgbGVuZ3RoIGFzIHRoZSBB
cnJheSBvZiBrZXlzLgogKiBFYWNoIGluZGV4IGluIHRoZSBBcnJheSBvZiB2
YWx1ZXMgbXVzdCBjb3JyZXNwb25kIHRvIHRoZSBzYW1lIGluZGV4IGluIHRo
ZSBBcnJheSBvZiBrZXlzLgoKRm9yIGV4YW1wbGUsIGlmIHlvdXIgYmF0Y2gg
ZnVuY3Rpb24gd2FzIHByb3ZpZGVkIHRoZSBBcnJheSBvZiBrZXlzOiBgWyAy
LCA5LCA2LCAxIF1gLAphbmQgbG9hZGluZyBmcm9tIGEgYmFjay1lbmQgc2Vy
dmljZSByZXR1cm5lZCB0aGUgdmFsdWVzOgoKYGBganMKeyBpZDogOSwgbmFt
ZTogJ0NoaWNhZ28nIH0KeyBpZDogMSwgbmFtZTogJ05ldyBZb3JrJyB9Cnsg
aWQ6IDIsIG5hbWU6ICdTYW4gRnJhbmNpc2NvJyB9CmBgYAoKT3VyIGJhY2st
ZW5kIHNlcnZpY2UgcmV0dXJuZWQgcmVzdWx0cyBpbiBhIGRpZmZlcmVudCBv
cmRlciB0aGFuIHdlIHJlcXVlc3RlZCwgbGlrZWx5CmJlY2F1c2UgaXQgd2Fz
IG1vcmUgZWZmaWNpZW50IGZvciBpdCB0byBkbyBzby4gQWxzbywgaXQgb21p
dHRlZCBhIHJlc3VsdCBmb3Iga2V5IGA2YCwKd2hpY2ggd2UgY2FuIGludGVy
cHJldCBhcyBubyB2YWx1ZSBleGlzdGluZyBmb3IgdGhhdCBrZXkuCgpUbyB1
cGhvbGQgdGhlIGNvbnN0cmFpbnRzIG9mIHRoZSBiYXRjaCBmdW5jdGlvbiwg
aXQgbXVzdCByZXR1cm4gYW4gQXJyYXkgb2YgdmFsdWVzCnRoZSBzYW1lIGxl
bmd0aCBhcyB0aGUgQXJyYXkgb2Yga2V5cywgYW5kIHJlLW9yZGVyIHRoZW0g
dG8gZW5zdXJlIGVhY2ggaW5kZXggYWxpZ25zCndpdGggdGhlIG9yaWdpbmFs
IGtleXMgYFsgMiwgOSwgNiwgMSBdYDoKCmBgYGpzClsKICB7IGlkOiAyLCBu
YW1lOiAnU2FuIEZyYW5jaXNjbycgfSwKICB7IGlkOiA5LCBuYW1lOiAnQ2hp
Y2FnbycgfSwKICBudWxsLCAvLyBvciBwZXJoYXBzIGBuZXcgRXJyb3IoKWAK
ICB7IGlkOiAxLCBuYW1lOiAnTmV3IFlvcmsnIH0KXQpgYGAKCiMjIyMgQmF0
Y2ggU2NoZWR1bGluZwoKQnkgZGVmYXVsdCBEYXRhTG9hZGVyIHdpbGwgY29h
bGVzY2UgYWxsIGluZGl2aWR1YWwgbG9hZHMgd2hpY2ggb2NjdXIgd2l0aGlu
IGEKc2luZ2xlIGZyYW1lIG9mIGV4ZWN1dGlvbiBiZWZvcmUgY2FsbGluZyB5
b3VyIGJhdGNoIGZ1bmN0aW9uIHdpdGggYWxsIHJlcXVlc3RlZAprZXlzLiBU
aGlzIGVuc3VyZXMgbm8gYWRkaXRpb25hbCBsYXRlbmN5IHdoaWxlIGNhcHR1
cmluZyBtYW55IHJlbGF0ZWQgcmVxdWVzdHMKaW50byBhIHNpbmdsZSBiYXRj
aC4gSW4gZmFjdCwgdGhpcyBpcyB0aGUgc2FtZSBiZWhhdmlvciB1c2VkIGlu
IEZhY2Vib29rJ3MKb3JpZ2luYWwgUEhQIGltcGxlbWVudGF0aW9uIGluIDIw
MTAuIFNlZSBgZW5xdWV1ZVBvc3RQcm9taXNlSm9iYCBpbiB0aGUKW3NvdXJj
ZSBjb2RlXVtdIGZvciBtb3JlIGRldGFpbHMgYWJvdXQgaG93IHRoaXMgd29y
a3MuCgpIb3dldmVyIHNvbWV0aW1lcyB0aGlzIGJlaGF2aW9yIGlzIG5vdCBk
ZXNpcmFibGUgb3Igb3B0aW1hbC4gUGVyaGFwcyB5b3UgZXhwZWN0CnJlcXVl
c3RzIHRvIGJlIHNwcmVhZCBvdXQgb3ZlciBhIGZldyBzdWJzZXF1ZW50IHRp
Y2tzIGJlY2F1c2Ugb2YgYW4gZXhpc3RpbmcgdXNlCm9mIGBzZXRUaW1lb3V0
YCwgb3IgeW91IGp1c3Qgd2FudCBtYW51YWwgY29udHJvbCBvdmVyIGRpc3Bh
dGNoaW5nIHJlZ2FyZGxlc3Mgb2YKdGhlIHJ1biBsb29wLiBEYXRhTG9hZGVy
IGFsbG93cyBwcm92aWRpbmcgYSBjdXN0b20gYmF0Y2ggc2NoZWR1bGVyIHRv
IHByb3ZpZGUKdGhlc2Ugb3IgYW55IG90aGVyIGJlaGF2aW9ycy4KCkEgY3Vz
dG9tIHNjaGVkdWxlciBpcyBwcm92aWRlZCBhcyBgYmF0Y2hTY2hlZHVsZUZu
YCBpbiBvcHRpb25zLiBJdCBtdXN0IGJlIGEKZnVuY3Rpb24gd2hpY2ggaXMg
cGFzc2VkIGEgY2FsbGJhY2sgYW5kIGlzIGV4cGVjdGVkIHRvIGNhbGwgdGhh
dCBjYWxsYmFjayBpbiB0aGUKaW1tZWRpYXRlIGZ1dHVyZSB0byBleGVjdXRl
IHRoZSBiYXRjaCByZXF1ZXN0LgoKQXMgYW4gZXhhbXBsZSwgaGVyZSBpcyBh
IGJhdGNoIHNjaGVkdWxlciB3aGljaCBjb2xsZWN0cyBhbGwgcmVxdWVzdHMg
b3ZlciBhCjEwMG1zIHdpbmRvdyBvZiB0aW1lIChhbmQgYXMgYSBjb25zZXF1
ZW5jZSwgYWRkcyAxMDBtcyBvZiBsYXRlbmN5KToKCmBgYGpzCmNvbnN0IG15
TG9hZGVyID0gbmV3IERhdGFMb2FkZXIobXlCYXRjaEZuLCB7CiAgYmF0Y2hT
Y2hlZHVsZUZuOiBjYWxsYmFjayA9PiBzZXRUaW1lb3V0KGNhbGxiYWNrLCAx
MDApCn0pCmBgYAoKQXMgYW5vdGhlciBleGFtcGxlLCBoZXJlIGlzIGEgbWFu
dWFsbHkgZGlzcGF0Y2hlZCBiYXRjaCBzY2hlZHVsZXI6CgpgYGBqcwpmdW5j
dGlvbiBjcmVhdGVTY2hlZHVsZXIoKSB7CiAgbGV0IGNhbGxiYWNrcyA9IFtd
CiAgcmV0dXJuIHsKICAgIHNjaGVkdWxlKGNhbGxiYWNrKSB7CiAgICAgIGNh
bGxiYWNrcy5wdXNoKGNhbGxiYWNrKQogICAgfSwKICAgIGRpc3BhdGNoKCkg
ewogICAgICBjYWxsYmFja3MuZm9yRWFjaChjYWxsYmFjayA9PiBjYWxsYmFj
aygpKQogICAgICBjYWxsYmFja3MgPSBbXQogICAgfQogIH0KfQoKY29uc3Qg
eyBzY2hlZHVsZSwgZGlzcGF0Y2ggfSA9IGNyZWF0ZVNjaGVkdWxlcigpCmNv
bnN0IG15TG9hZGVyID0gbmV3IERhdGFMb2FkZXIobXlCYXRjaEZuLCB7IGJh
dGNoU2NoZWR1bGVGbjogc2NoZWR1bGUgfSkKCm15TG9hZGVyLmxvYWQoMSkK
bXlMb2FkZXIubG9hZCgyKQpkaXNwYXRjaCgpCmBgYAoKCiMjIENhY2hpbmcK
CkRhdGFMb2FkZXIgcHJvdmlkZXMgYSBtZW1vaXphdGlvbiBjYWNoZSBmb3Ig
YWxsIGxvYWRzIHdoaWNoIG9jY3VyIGluIGEgc2luZ2xlCnJlcXVlc3QgdG8g
eW91ciBhcHBsaWNhdGlvbi4gQWZ0ZXIgYC5sb2FkKClgIGlzIGNhbGxlZCBv
bmNlIHdpdGggYSBnaXZlbiBrZXksCnRoZSByZXN1bHRpbmcgdmFsdWUgaXMg
Y2FjaGVkIHRvIGVsaW1pbmF0ZSByZWR1bmRhbnQgbG9hZHMuCgojIyMjIENh
Y2hpbmcgUGVyLVJlcXVlc3QKCkRhdGFMb2FkZXIgY2FjaGluZyAqZG9lcyBu
b3QqIHJlcGxhY2UgUmVkaXMsIE1lbWNhY2hlLCBvciBhbnkgb3RoZXIgc2hh
cmVkCmFwcGxpY2F0aW9uLWxldmVsIGNhY2hlLiBEYXRhTG9hZGVyIGlzIGZp
cnN0IGFuZCBmb3JlbW9zdCBhIGRhdGEgbG9hZGluZyBtZWNoYW5pc20sCmFu
ZCBpdHMgY2FjaGUgb25seSBzZXJ2ZXMgdGhlIHB1cnBvc2Ugb2Ygbm90IHJl
cGVhdGVkbHkgbG9hZGluZyB0aGUgc2FtZSBkYXRhIGluCnRoZSBjb250ZXh0
IG9mIGEgc2luZ2xlIHJlcXVlc3QgdG8geW91ciBBcHBsaWNhdGlvbi4gVG8g
ZG8gdGhpcywgaXQgbWFpbnRhaW5zIGEKc2ltcGxlIGluLW1lbW9yeSBtZW1v
aXphdGlvbiBjYWNoZSAobW9yZSBhY2N1cmF0ZWx5OiBgLmxvYWQoKWAgaXMg
YSBtZW1vaXplZCBmdW5jdGlvbikuCgpBdm9pZCBtdWx0aXBsZSByZXF1ZXN0
cyBmcm9tIGRpZmZlcmVudCB1c2VycyB1c2luZyB0aGUgRGF0YUxvYWRlciBp
bnN0YW5jZSwgd2hpY2gKY291bGQgcmVzdWx0IGluIGNhY2hlZCBkYXRhIGlu
Y29ycmVjdGx5IGFwcGVhcmluZyBpbiBlYWNoIHJlcXVlc3QuIFR5cGljYWxs
eSwKRGF0YUxvYWRlciBpbnN0YW5jZXMgYXJlIGNyZWF0ZWQgd2hlbiBhIFJl
cXVlc3QgYmVnaW5zLCBhbmQgYXJlIG5vdCB1c2VkIG9uY2UgdGhlClJlcXVl
c3QgZW5kcy4KCkZvciBleGFtcGxlLCB3aGVuIHVzaW5nIHdpdGggW2V4cHJl
c3NdW106CgpgYGBqcwpmdW5jdGlvbiBjcmVhdGVMb2FkZXJzKGF1dGhUb2tl
bikgewogIHJldHVybiB7CiAgICB1c2VyczogbmV3IERhdGFMb2FkZXIoaWRz
ID0+IGdlblVzZXJzKGF1dGhUb2tlbiwgaWRzKSksCiAgfQp9Cgpjb25zdCBh
cHAgPSBleHByZXNzKCkKCmFwcC5nZXQoJy8nLCBmdW5jdGlvbihyZXEsIHJl
cykgewogIGNvbnN0IGF1dGhUb2tlbiA9IGF1dGhlbnRpY2F0ZVVzZXIocmVx
KQogIGNvbnN0IGxvYWRlcnMgPSBjcmVhdGVMb2FkZXJzKGF1dGhUb2tlbikK
ICByZXMuc2VuZChyZW5kZXJQYWdlKHJlcSwgbG9hZGVycykpCn0pCgphcHAu
bGlzdGVuKCkKYGBgCgojIyMjIENhY2hpbmcgYW5kIEJhdGNoaW5nCgpTdWJz
ZXF1ZW50IGNhbGxzIHRvIGAubG9hZCgpYCB3aXRoIHRoZSBzYW1lIGtleSB3
aWxsIHJlc3VsdCBpbiB0aGF0IGtleSBub3QKYXBwZWFyaW5nIGluIHRoZSBr
ZXlzIHByb3ZpZGVkIHRvIHlvdXIgYmF0Y2ggZnVuY3Rpb24uICpIb3dldmVy
KiwgdGhlIHJlc3VsdGluZwpQcm9taXNlIHdpbGwgc3RpbGwgd2FpdCBvbiB0
aGUgY3VycmVudCBiYXRjaCB0byBjb21wbGV0ZS4gVGhpcyB3YXkgYm90aCBj
YWNoZWQKYW5kIHVuY2FjaGVkIHJlcXVlc3RzIHdpbGwgcmVzb2x2ZSBhdCB0
aGUgc2FtZSB0aW1lLCBhbGxvd2luZyBEYXRhTG9hZGVyCm9wdGltaXphdGlv
bnMgZm9yIHN1YnNlcXVlbnQgZGVwZW5kZW50IGxvYWRzLgoKSW4gdGhlIGV4
YW1wbGUgYmVsb3csIFVzZXIgYDFgIGhhcHBlbnMgdG8gYmUgY2FjaGVkLiBI
b3dldmVyLCBiZWNhdXNlIFVzZXIgYDFgCmFuZCBgMmAgYXJlIGxvYWRlZCBp
biB0aGUgc2FtZSB0aWNrLCB0aGV5IHdpbGwgcmVzb2x2ZSBhdCB0aGUgc2Ft
ZSB0aW1lLiBUaGlzCm1lYW5zIGJvdGggYHVzZXIuYmVzdEZyaWVuZElEYCBs
b2FkcyB3aWxsIGFsc28gaGFwcGVuIGluIHRoZSBzYW1lIHRpY2sgd2hpY2gK
cmVzdWx0cyBpbiB0d28gdG90YWwgcmVxdWVzdHMgKHRoZSBzYW1lIGFzIGlm
IFVzZXIgYDFgIGhhZCBub3QgYmVlbiBjYWNoZWQpLgoKYGBganMKdXNlckxv
YWRlci5wcmltZSgxLCB7IGJlc3RGcmllbmQ6IDMgfSkKCmFzeW5jIGZ1bmN0
aW9uIGdldEJlc3RGcmllbmQodXNlcklEKSB7CiAgY29uc3QgdXNlciA9IGF3
YWl0IHVzZXJMb2FkZXIubG9hZCh1c2VySUQpCiAgcmV0dXJuIGF3YWl0IHVz
ZXJMb2FkZXIubG9hZCh1c2VyLmJlc3RGcmllbmRJRCkKfQoKLy8gSW4gb25l
IHBhcnQgb2YgeW91ciBhcHBsaWNhdGlvbgpnZXRCZXN0RnJpZW5kKDEpCgov
LyBFbHNld2hlcmUKZ2V0QmVzdEZyaWVuZCgyKQpgYGAKCldpdGhvdXQgdGhp
cyBvcHRpbWl6YXRpb24sIGlmIHRoZSBjYWNoZWQgVXNlciBgMWAgcmVzb2x2
ZWQgaW1tZWRpYXRlbHksIHRoaXMKY291bGQgcmVzdWx0IGluIHRocmVlIHRv
dGFsIHJlcXVlc3RzIHNpbmNlIGVhY2ggYHVzZXIuYmVzdEZyaWVuZElEYCBs
b2FkIHdvdWxkCmhhcHBlbiBhdCBkaWZmZXJlbnQgdGltZXMuCgojIyMjIENs
ZWFyaW5nIENhY2hlCgpJbiBjZXJ0YWluIHVuY29tbW9uIGNhc2VzLCBjbGVh
cmluZyB0aGUgcmVxdWVzdCBjYWNoZSBtYXkgYmUgbmVjZXNzYXJ5LgoKVGhl
IG1vc3QgY29tbW9uIGV4YW1wbGUgd2hlbiBjbGVhcmluZyB0aGUgbG9hZGVy
J3MgY2FjaGUgaXMgbmVjZXNzYXJ5IGlzIGFmdGVyCmEgbXV0YXRpb24gb3Ig
dXBkYXRlIHdpdGhpbiB0aGUgc2FtZSByZXF1ZXN0LCB3aGVuIGEgY2FjaGVk
IHZhbHVlIGNvdWxkIGJlIG91dCBvZgpkYXRlIGFuZCBmdXR1cmUgbG9hZHMg
c2hvdWxkIG5vdCB1c2UgYW55IHBvc3NpYmx5IGNhY2hlZCB2YWx1ZS4KCkhl
cmUncyBhIHNpbXBsZSBleGFtcGxlIHVzaW5nIFNRTCBVUERBVEUgdG8gaWxs
dXN0cmF0ZS4KCmBgYGpzCi8vIFJlcXVlc3QgYmVnaW5zLi4uCmNvbnN0IHVz
ZXJMb2FkZXIgPSBuZXcgRGF0YUxvYWRlciguLi4pCgovLyBBbmQgYSB2YWx1
ZSBoYXBwZW5zIHRvIGJlIGxvYWRlZCAoYW5kIGNhY2hlZCkuCmNvbnN0IHVz
ZXIgPSBhd2FpdCB1c2VyTG9hZGVyLmxvYWQoNCkKCi8vIEEgbXV0YXRpb24g
b2NjdXJzLCBpbnZhbGlkYXRpbmcgd2hhdCBtaWdodCBiZSBpbiBjYWNoZS4K
YXdhaXQgc3FsUnVuKCdVUERBVEUgdXNlcnMgV0hFUkUgaWQ9NCBTRVQgdXNl
cm5hbWU9Inp1Y2siJykKdXNlckxvYWRlci5jbGVhcig0KQoKLy8gTGF0ZXIg
dGhlIHZhbHVlIGxvYWQgaXMgbG9hZGVkIGFnYWluIHNvIHRoZSBtdXRhdGVk
IGRhdGEgYXBwZWFycy4KY29uc3QgdXNlciA9IGF3YWl0IHVzZXJMb2FkZXIu
bG9hZCg0KQoKLy8gUmVxdWVzdCBjb21wbGV0ZXMuCmBgYAoKIyMjIyBDYWNo
aW5nIEVycm9ycwoKSWYgYSBiYXRjaCBsb2FkIGZhaWxzICh0aGF0IGlzLCBh
IGJhdGNoIGZ1bmN0aW9uIHRocm93cyBvciByZXR1cm5zIGEgcmVqZWN0ZWQK
UHJvbWlzZSksIHRoZW4gdGhlIHJlcXVlc3RlZCB2YWx1ZXMgd2lsbCBub3Qg
YmUgY2FjaGVkLiBIb3dldmVyIGlmIGEgYmF0Y2gKZnVuY3Rpb24gcmV0dXJu
cyBhbiBgRXJyb3JgIGluc3RhbmNlIGZvciBhbiBpbmRpdmlkdWFsIHZhbHVl
LCB0aGF0IGBFcnJvcmAgd2lsbApiZSBjYWNoZWQgdG8gYXZvaWQgZnJlcXVl
bnRseSBsb2FkaW5nIHRoZSBzYW1lIGBFcnJvcmAuCgpJbiBzb21lIGNpcmN1
bXN0YW5jZXMgeW91IG1heSB3aXNoIHRvIGNsZWFyIHRoZSBjYWNoZSBmb3Ig
dGhlc2UgaW5kaXZpZHVhbCBFcnJvcnM6CgpgYGBqcwp0cnkgewogIGNvbnN0
IHVzZXIgPSBhd2FpdCB1c2VyTG9hZGVyLmxvYWQoMSkKfSBjYXRjaCAoZXJy
b3IpIHsKICBpZiAoLyogZGV0ZXJtaW5lIGlmIHRoZSBlcnJvciBzaG91bGQg
bm90IGJlIGNhY2hlZCAqLykgewogICAgdXNlckxvYWRlci5jbGVhcigxKQog
IH0KICB0aHJvdyBlcnJvcgp9CmBgYAoKIyMjIyBEaXNhYmxpbmcgQ2FjaGUK
CkluIGNlcnRhaW4gdW5jb21tb24gY2FzZXMsIGEgRGF0YUxvYWRlciB3aGlj
aCAqZG9lcyBub3QqIGNhY2hlIG1heSBiZSBkZXNpcmFibGUuCkNhbGxpbmcg
YG5ldyBEYXRhTG9hZGVyKG15QmF0Y2hGbiwgeyBjYWNoZTogZmFsc2UgfSlg
IHdpbGwgZW5zdXJlIHRoYXQgZXZlcnkKY2FsbCB0byBgLmxvYWQoKWAgd2ls
bCBwcm9kdWNlIGEgKm5ldyogUHJvbWlzZSwgYW5kIHJlcXVlc3RlZCBrZXlz
IHdpbGwgbm90IGJlCnNhdmVkIGluIG1lbW9yeS4KCkhvd2V2ZXIsIHdoZW4g
dGhlIG1lbW9pemF0aW9uIGNhY2hlIGlzIGRpc2FibGVkLCB5b3VyIGJhdGNo
IGZ1bmN0aW9uIHdpbGwKcmVjZWl2ZSBhbiBhcnJheSBvZiBrZXlzIHdoaWNo
IG1heSBjb250YWluIGR1cGxpY2F0ZXMhIEVhY2gga2V5IHdpbGwgYmUKYXNz
b2NpYXRlZCB3aXRoIGVhY2ggY2FsbCB0byBgLmxvYWQoKWAuIFlvdXIgYmF0
Y2ggbG9hZGVyIHNob3VsZCBwcm92aWRlIGEgdmFsdWUKZm9yIGVhY2ggaW5z
dGFuY2Ugb2YgdGhlIHJlcXVlc3RlZCBrZXkuCgpGb3IgZXhhbXBsZToKCmBg
YGpzCmNvbnN0IG15TG9hZGVyID0gbmV3IERhdGFMb2FkZXIoa2V5cyA9PiB7
CiAgY29uc29sZS5sb2coa2V5cykKICByZXR1cm4gc29tZUJhdGNoTG9hZEZu
KGtleXMpCn0sIHsgY2FjaGU6IGZhbHNlIH0pCgpteUxvYWRlci5sb2FkKCdB
JykKbXlMb2FkZXIubG9hZCgnQicpCm15TG9hZGVyLmxvYWQoJ0EnKQoKLy8g
PiBbICdBJywgJ0InLCAnQScgXQpgYGAKCk1vcmUgY29tcGxleCBjYWNoZSBi
ZWhhdmlvciBjYW4gYmUgYWNoaWV2ZWQgYnkgY2FsbGluZyBgLmNsZWFyKClg
IG9yIGAuY2xlYXJBbGwoKWAKcmF0aGVyIHRoYW4gZGlzYWJsaW5nIHRoZSBj
YWNoZSBjb21wbGV0ZWx5LiBGb3IgZXhhbXBsZSwgdGhpcyBEYXRhTG9hZGVy
IHdpbGwKcHJvdmlkZSB1bmlxdWUga2V5cyB0byBhIGJhdGNoIGZ1bmN0aW9u
IGR1ZSB0byB0aGUgbWVtb2l6YXRpb24gY2FjaGUgYmVpbmcKZW5hYmxlZCwg
YnV0IHdpbGwgaW1tZWRpYXRlbHkgY2xlYXIgaXRzIGNhY2hlIHdoZW4gdGhl
IGJhdGNoIGZ1bmN0aW9uIGlzIGNhbGxlZApzbyBsYXRlciByZXF1ZXN0cyB3
aWxsIGxvYWQgbmV3IHZhbHVlcy4KCmBgYGpzCmNvbnN0IG15TG9hZGVyID0g
bmV3IERhdGFMb2FkZXIoa2V5cyA9PiB7CiAgaWRlbnRpdHlMb2FkZXIuY2xl
YXJBbGwoKQogIHJldHVybiBzb21lQmF0Y2hMb2FkRm4oa2V5cykKfSkKYGBg
CgojIyMjIEN1c3RvbSBDYWNoZQoKQXMgbWVudGlvbmVkIGFib3ZlLCBEYXRh
TG9hZGVyIGlzIGludGVuZGVkIHRvIGJlIHVzZWQgYXMgYSBwZXItcmVxdWVz
dCBjYWNoZS4KU2luY2UgcmVxdWVzdHMgYXJlIHNob3J0LWxpdmVkLCBEYXRh
TG9hZGVyIHVzZXMgYW4gaW5maW5pdGVseSBncm93aW5nIFtNYXBdW10gYXMK
YSBtZW1vaXphdGlvbiBjYWNoZS4gVGhpcyBzaG91bGQgbm90IHBvc2UgYSBw
cm9ibGVtIGFzIG1vc3QgcmVxdWVzdHMgYXJlCnNob3J0LWxpdmVkIGFuZCB0
aGUgZW50aXJlIGNhY2hlIGNhbiBiZSBkaXNjYXJkZWQgYWZ0ZXIgdGhlIHJl
cXVlc3QgY29tcGxldGVzLgoKSG93ZXZlciB0aGlzIG1lbW9pemF0aW9uIGNh
Y2hpbmcgc3RyYXRlZ3kgaXNuJ3Qgc2FmZSB3aGVuIHVzaW5nIGEgbG9uZy1s
aXZlZApEYXRhTG9hZGVyLCBzaW5jZSBpdCBjb3VsZCBjb25zdW1lIHRvbyBt
dWNoIG1lbW9yeS4gSWYgdXNpbmcgRGF0YUxvYWRlciBpbiB0aGlzCndheSwg
eW91IGNhbiBwcm92aWRlIGEgY3VzdG9tIENhY2hlIGluc3RhbmNlIHdpdGgg
d2hhdGV2ZXIgYmVoYXZpb3IgeW91IHByZWZlciwKYXMgbG9uZyBhcyBpdCBm
b2xsb3dzIHRoZSBzYW1lIEFQSSBhcyBbTWFwXVtdLgoKVGhlIGV4YW1wbGUg
YmVsb3cgdXNlcyBhbiBMUlUgKGxlYXN0IHJlY2VudGx5IHVzZWQpIGNhY2hl
IHRvIGxpbWl0IHRvdGFsIG1lbW9yeQp0byBob2xkIGF0IG1vc3QgMTAwIGNh
Y2hlZCB2YWx1ZXMgdmlhIHRoZSBbbHJ1X21hcF1bXSBucG0gcGFja2FnZS4K
CmBgYGpzCmltcG9ydCB7IExSVU1hcCB9IGZyb20gJ2xydV9tYXAnCgpjb25z
dCBteUxvYWRlciA9IG5ldyBEYXRhTG9hZGVyKHNvbWVCYXRjaExvYWRGbiwg
ewogIGNhY2hlTWFwOiBuZXcgTFJVTWFwKDEwMCkKfSkKYGBgCgpNb3JlIHNw
ZWNpZmljYWxseSwgYW55IG9iamVjdCB0aGF0IGltcGxlbWVudHMgdGhlIG1l
dGhvZHMgYGdldCgpYCwgYHNldCgpYCwKYGRlbGV0ZSgpYCBhbmQgYGNsZWFy
KClgIG1ldGhvZHMgY2FuIGJlIHByb3ZpZGVkLiBUaGlzIGFsbG93cyBmb3Ig
Y3VzdG9tIE1hcHMKd2hpY2ggaW1wbGVtZW50IHZhcmlvdXMgW2NhY2hlIGFs
Z29yaXRobXNdW10gdG8gYmUgcHJvdmlkZWQuCgoKIyMgQVBJCgojIyMjIGNs
YXNzIERhdGFMb2FkZXIKCkRhdGFMb2FkZXIgY3JlYXRlcyBhIHB1YmxpYyBB
UEkgZm9yIGxvYWRpbmcgZGF0YSBmcm9tIGEgcGFydGljdWxhcgpkYXRhIGJh
Y2stZW5kIHdpdGggdW5pcXVlIGtleXMgc3VjaCBhcyB0aGUgYGlkYCBjb2x1
bW4gb2YgYSBTUUwgdGFibGUgb3IKZG9jdW1lbnQgbmFtZSBpbiBhIE1vbmdv
REIgZGF0YWJhc2UsIGdpdmVuIGEgYmF0Y2ggbG9hZGluZyBmdW5jdGlvbi4K
CkVhY2ggYERhdGFMb2FkZXJgIGluc3RhbmNlIGNvbnRhaW5zIGEgdW5pcXVl
IG1lbW9pemVkIGNhY2hlLiBVc2UgY2F1dGlvbiB3aGVuCnVzZWQgaW4gbG9u
Zy1saXZlZCBhcHBsaWNhdGlvbnMgb3IgdGhvc2Ugd2hpY2ggc2VydmUgbWFu
eSB1c2VycyB3aXRoIGRpZmZlcmVudAphY2Nlc3MgcGVybWlzc2lvbnMgYW5k
IGNvbnNpZGVyIGNyZWF0aW5nIGEgbmV3IGluc3RhbmNlIHBlciB3ZWIgcmVx
dWVzdC4KCiMjIyMjIGBuZXcgRGF0YUxvYWRlcihiYXRjaExvYWRGbiBbLCBv
cHRpb25zXSlgCgpDcmVhdGUgYSBuZXcgYERhdGFMb2FkZXJgIGdpdmVuIGEg
YmF0Y2ggbG9hZGluZyBmdW5jdGlvbiBhbmQgb3B0aW9ucy4KCi0gKmJhdGNo
TG9hZEZuKjogQSBmdW5jdGlvbiB3aGljaCBhY2NlcHRzIGFuIEFycmF5IG9m
IGtleXMsIGFuZCByZXR1cm5zIGEKICBQcm9taXNlIHdoaWNoIHJlc29sdmVz
IHRvIGFuIEFycmF5IG9mIHZhbHVlcy4KCi0gKm9wdGlvbnMqOiBBbiBvcHRp
b25hbCBvYmplY3Qgb2Ygb3B0aW9uczoKCiAgfCBPcHRpb24gS2V5IHwgVHlw
ZSB8IERlZmF1bHQgfCBEZXNjcmlwdGlvbiB8CiAgfCAtLS0tLS0tLS0tIHwg
LS0tLSB8IC0tLS0tLS0gfCAtLS0tLS0tLS0tLSB8CiAgfCAqYmF0Y2gqICB8
IEJvb2xlYW4gfCBgdHJ1ZWAgfCBTZXQgdG8gYGZhbHNlYCB0byBkaXNhYmxl
IGJhdGNoaW5nLCBpbnZva2luZyBgYmF0Y2hMb2FkRm5gIHdpdGggYSBzaW5n
bGUgbG9hZCBrZXkuIFRoaXMgaXMgZXF1aXZhbGVudCB0byBzZXR0aW5nIGBt
YXhCYXRjaFNpemVgIHRvIGAxYC4KICB8ICptYXhCYXRjaFNpemUqIHwgTnVt
YmVyIHwgYEluZmluaXR5YCB8IExpbWl0cyB0aGUgbnVtYmVyIG9mIGl0ZW1z
IHRoYXQgZ2V0IHBhc3NlZCBpbiB0byB0aGUgYGJhdGNoTG9hZEZuYC4gTWF5
IGJlIHNldCB0byBgMWAgdG8gZGlzYWJsZSBiYXRjaGluZy4KICB8ICpiYXRj
aFNjaGVkdWxlRm4qIHwgRnVuY3Rpb24gfCBTZWUgW0JhdGNoIHNjaGVkdWxp
bmddKCNiYXRjaC1zY2hlZHVsaW5nKSB8IEEgZnVuY3Rpb24gdG8gc2NoZWR1
bGUgdGhlIGxhdGVyIGV4ZWN1dGlvbiBvZiBhIGJhdGNoLiBUaGUgZnVuY3Rp
b24gaXMgZXhwZWN0ZWQgdG8gY2FsbCB0aGUgcHJvdmlkZWQgY2FsbGJhY2sg
aW4gdGhlIGltbWVkaWF0ZSBmdXR1cmUuCiAgfCAqY2FjaGUqIHwgQm9vbGVh
biB8IGB0cnVlYCB8IFNldCB0byBgZmFsc2VgIHRvIGRpc2FibGUgbWVtb2l6
YXRpb24gY2FjaGluZywgY3JlYXRpbmcgYSBuZXcgUHJvbWlzZSBhbmQgbmV3
IGtleSBpbiB0aGUgYGJhdGNoTG9hZEZuYCBmb3IgZXZlcnkgbG9hZCBvZiB0
aGUgc2FtZSBrZXkuIFRoaXMgaXMgZXF1aXZhbGVudCB0byBzZXR0aW5nIGBj
YWNoZU1hcGAgdG8gYG51bGxgLgogIHwgKmNhY2hlS2V5Rm4qIHwgRnVuY3Rp
b24gfCBga2V5wqA9PsKga2V5YCB8IFByb2R1Y2VzIGNhY2hlIGtleSBmb3Ig
YSBnaXZlbiBsb2FkIGtleS4gVXNlZnVsIHdoZW4gb2JqZWN0cyBhcmUga2V5
cyBhbmQgdHdvIG9iamVjdHMgc2hvdWxkIGJlIGNvbnNpZGVyZWQgZXF1aXZh
bGVudC4KICB8ICpjYWNoZU1hcCogfCBPYmplY3QgfCBgbmV3wqBNYXAoKWAg
fCBJbnN0YW5jZSBvZiBbTWFwXVtdIChvciBhbiBvYmplY3Qgd2l0aCBhIHNp
bWlsYXIgQVBJKSB0byBiZSB1c2VkIGFzIGNhY2hlLiBNYXkgYmUgc2V0IHRv
IGBudWxsYCB0byBkaXNhYmxlIGNhY2hpbmcuCgojIyMjIyBgbG9hZChrZXkp
YAoKTG9hZHMgYSBrZXksIHJldHVybmluZyBhIGBQcm9taXNlYCBmb3IgdGhl
IHZhbHVlIHJlcHJlc2VudGVkIGJ5IHRoYXQga2V5LgoKLSAqa2V5KjogQSBr
ZXkgdmFsdWUgdG8gbG9hZC4KCiMjIyMjIGBsb2FkTWFueShrZXlzKWAKCkxv
YWRzIG11bHRpcGxlIGtleXMsIHByb21pc2luZyBhbiBhcnJheSBvZiB2YWx1
ZXM6CgpgYGBqcwpjb25zdCBbIGEsIGIgXSA9IGF3YWl0IG15TG9hZGVyLmxv
YWRNYW55KFsgJ2EnLCAnYicgXSkKYGBgCgpUaGlzIGlzIHNpbWlsYXIgdG8g
dGhlIG1vcmUgdmVyYm9zZToKCmBgYGpzCmNvbnN0IFsgYSwgYiBdID0gYXdh
aXQgUHJvbWlzZS5hbGwoWwogIG15TG9hZGVyLmxvYWQoJ2EnKSwKICBteUxv
YWRlci5sb2FkKCdiJykKXSkKYGBgCgpIb3dldmVyIGl0IGlzIGRpZmZlcmVu
dCBpbiB0aGUgY2FzZSB3aGVyZSBhbnkgbG9hZCBmYWlscy4gV2hlcmUKUHJv
bWlzZS5hbGwoKSB3b3VsZCByZWplY3QsIGxvYWRNYW55KCkgYWx3YXlzIHJl
c29sdmVzLCBob3dldmVyIGVhY2ggcmVzdWx0CmlzIGVpdGhlciBhIHZhbHVl
IG9yIGFuIEVycm9yIGluc3RhbmNlLgoKYGBganMKdmFyIFsgYSwgYiwgYyBd
ID0gYXdhaXQgbXlMb2FkZXIubG9hZE1hbnkoWyAnYScsICdiJywgJ2JhZGtl
eScgXSk7Ci8vIGMgaW5zdGFuY2VvZiBFcnJvcgpgYGAKCi0gKmtleXMqOiBB
biBhcnJheSBvZiBrZXkgdmFsdWVzIHRvIGxvYWQuCgojIyMjIyBgY2xlYXIo
a2V5KWAKCkNsZWFycyB0aGUgdmFsdWUgYXQgYGtleWAgZnJvbSB0aGUgY2Fj
aGUsIGlmIGl0IGV4aXN0cy4gUmV0dXJucyBpdHNlbGYgZm9yCm1ldGhvZCBj
aGFpbmluZy4KCi0gKmtleSo6IEEga2V5IHZhbHVlIHRvIGNsZWFyLgoKIyMj
IyMgYGNsZWFyQWxsKClgCgpDbGVhcnMgdGhlIGVudGlyZSBjYWNoZS4gVG8g
YmUgdXNlZCB3aGVuIHNvbWUgZXZlbnQgcmVzdWx0cyBpbiB1bmtub3duCmlu
dmFsaWRhdGlvbnMgYWNyb3NzIHRoaXMgcGFydGljdWxhciBgRGF0YUxvYWRl
cmAuIFJldHVybnMgaXRzZWxmIGZvcgptZXRob2QgY2hhaW5pbmcuCgojIyMj
IyBgcHJpbWUoa2V5LCB2YWx1ZSlgCgpQcmltZXMgdGhlIGNhY2hlIHdpdGgg
dGhlIHByb3ZpZGVkIGtleSBhbmQgdmFsdWUuIElmIHRoZSBrZXkgYWxyZWFk
eSBleGlzdHMsIG5vCmNoYW5nZSBpcyBtYWRlLiAoVG8gZm9yY2VmdWxseSBw
cmltZSB0aGUgY2FjaGUsIGNsZWFyIHRoZSBrZXkgZmlyc3Qgd2l0aApgbG9h
ZGVyLmNsZWFyKGtleSkucHJpbWUoa2V5LCB2YWx1ZSlgLikgUmV0dXJucyBp
dHNlbGYgZm9yIG1ldGhvZCBjaGFpbmluZy4KClRvIHByaW1lIHRoZSBjYWNo
ZSB3aXRoIGFuIGVycm9yIGF0IGEga2V5LCBwcm92aWRlIGFuIEVycm9yIGlu
c3RhbmNlLgoKIyMgVXNpbmcgd2l0aCBHcmFwaFFMCgpEYXRhTG9hZGVyIHBh
aXJzIG5pY2VseSB3ZWxsIHdpdGggW0dyYXBoUUxdW2dyYXBocWwtanNdLiBH
cmFwaFFMIGZpZWxkcyBhcmUKZGVzaWduZWQgdG8gYmUgc3RhbmQtYWxvbmUg
ZnVuY3Rpb25zLiBXaXRob3V0IGEgY2FjaGluZyBvciBiYXRjaGluZyBtZWNo
YW5pc20sCml0J3MgZWFzeSBmb3IgYSBuYWl2ZSBHcmFwaFFMIHNlcnZlciB0
byBpc3N1ZSBuZXcgZGF0YWJhc2UgcmVxdWVzdHMgZWFjaCB0aW1lIGEKZmll
bGQgaXMgcmVzb2x2ZWQuCgpDb25zaWRlciB0aGUgZm9sbG93aW5nIEdyYXBo
UUwgcmVxdWVzdDoKCmBgYAp7CiAgbWUgewogICAgbmFtZQogICAgYmVzdEZy
aWVuZCB7CiAgICAgIG5hbWUKICAgIH0KICAgIGZyaWVuZHMoZmlyc3Q6IDUp
IHsKICAgICAgbmFtZQogICAgICBiZXN0RnJpZW5kIHsKICAgICAgICBuYW1l
CiAgICAgIH0KICAgIH0KICB9Cn0KYGBgCgpOYWl2ZWx5LCBpZiBgbWVgLCBg
YmVzdEZyaWVuZGAgYW5kIGBmcmllbmRzYCBlYWNoIG5lZWQgdG8gcmVxdWVz
dCB0aGUgYmFja2VuZCwKdGhlcmUgY291bGQgYmUgYXQgbW9zdCAxMyBkYXRh
YmFzZSByZXF1ZXN0cyEKCldoZW4gdXNpbmcgRGF0YUxvYWRlciwgd2UgY291
bGQgZGVmaW5lIHRoZSBgVXNlcmAgdHlwZSB1c2luZyB0aGUKW1NRTGl0ZV0o
ZXhhbXBsZXMvU1FMLm1kKSBleGFtcGxlIHdpdGggY2xlYXJlciBjb2RlIGFu
ZCBhdCBtb3N0IDQgZGF0YWJhc2UgcmVxdWVzdHMsCmFuZCBwb3NzaWJseSBm
ZXdlciBpZiB0aGVyZSBhcmUgY2FjaGUgaGl0cy4KCmBgYGpzCmNvbnN0IFVz
ZXJUeXBlID0gbmV3IEdyYXBoUUxPYmplY3RUeXBlKHsKICBuYW1lOiAnVXNl
cicsCiAgZmllbGRzOiAoKSA9PiAoewogICAgbmFtZTogeyB0eXBlOiBHcmFw
aFFMU3RyaW5nIH0sCiAgICBiZXN0RnJpZW5kOiB7CiAgICAgIHR5cGU6IFVz
ZXJUeXBlLAogICAgICByZXNvbHZlOiB1c2VyID0+IHVzZXJMb2FkZXIubG9h
ZCh1c2VyLmJlc3RGcmllbmRJRCkKICAgIH0sCiAgICBmcmllbmRzOiB7CiAg
ICAgIGFyZ3M6IHsKICAgICAgICBmaXJzdDogeyB0eXBlOiBHcmFwaFFMSW50
IH0KICAgICAgfSwKICAgICAgdHlwZTogbmV3IEdyYXBoUUxMaXN0KFVzZXJU
eXBlKSwKICAgICAgcmVzb2x2ZTogYXN5bmMgKHVzZXIsIHsgZmlyc3QgfSkg
PT4gewogICAgICAgIGNvbnN0IHJvd3MgPSBhd2FpdCBxdWVyeUxvYWRlci5s
b2FkKFsKICAgICAgICAgICdTRUxFQ1QgdG9JRCBGUk9NIGZyaWVuZHMgV0hF
UkUgZnJvbUlEPT8gTElNSVQgPycsIHVzZXIuaWQsIGZpcnN0CiAgICAgICAg
XSkKICAgICAgICByZXR1cm4gcm93cy5tYXAocm93ID0+IHVzZXJMb2FkZXIu
bG9hZChyb3cudG9JRCkpCiAgICAgIH0KICAgIH0KICB9KQp9KQpgYGAKCgoj
IyBDb21tb24gUGF0dGVybnMKCiMjIyBDcmVhdGluZyBhIG5ldyBEYXRhTG9h
ZGVyIHBlciByZXF1ZXN0LgoKSW4gbWFueSBhcHBsaWNhdGlvbnMsIGEgd2Vi
IHNlcnZlciB1c2luZyBEYXRhTG9hZGVyIHNlcnZlcyByZXF1ZXN0cyB0byBt
YW55CmRpZmZlcmVudCB1c2VycyB3aXRoIGRpZmZlcmVudCBhY2Nlc3MgcGVy
bWlzc2lvbnMuIEl0IG1heSBiZSBkYW5nZXJvdXMgdG8gdXNlCm9uZSBjYWNo
ZSBhY3Jvc3MgbWFueSB1c2VycywgYW5kIGlzIGVuY291cmFnZWQgdG8gY3Jl
YXRlIGEgbmV3IERhdGFMb2FkZXIKcGVyIHJlcXVlc3Q6CgpgYGBqcwpmdW5j
dGlvbiBjcmVhdGVMb2FkZXJzKGF1dGhUb2tlbikgewogIHJldHVybiB7CiAg
ICB1c2VyczogbmV3IERhdGFMb2FkZXIoaWRzID0+IGdlblVzZXJzKGF1dGhU
b2tlbiwgaWRzKSksCiAgICBjZG5VcmxzOiBuZXcgRGF0YUxvYWRlcihyYXdV
cmxzID0+IGdlbkNkblVybHMoYXV0aFRva2VuLCByYXdVcmxzKSksCiAgICBz
dG9yaWVzOiBuZXcgRGF0YUxvYWRlcihrZXlzID0+IGdlblN0b3JpZXMoYXV0
aFRva2VuLCBrZXlzKSksCiAgfQp9CgovLyBXaGVuIGhhbmRsaW5nIGFuIGlu
Y29taW5nIHdlYiByZXF1ZXN0Ogpjb25zdCBsb2FkZXJzID0gY3JlYXRlTG9h
ZGVycyhyZXF1ZXN0LnF1ZXJ5LmF1dGhUb2tlbikKCi8vIFRoZW4sIHdpdGhp
biBhcHBsaWNhdGlvbiBsb2dpYzoKY29uc3QgdXNlciA9IGF3YWl0IGxvYWRl
cnMudXNlcnMubG9hZCg0KQpjb25zdCBwaWMgPSBhd2FpdCBsb2FkZXJzLmNk
blVybHMubG9hZCh1c2VyLnJhd1BpY1VybCkKYGBgCgpDcmVhdGluZyBhbiBv
YmplY3Qgd2hlcmUgZWFjaCBrZXkgaXMgYSBgRGF0YUxvYWRlcmAgaXMgb25l
IGNvbW1vbiBwYXR0ZXJuIHdoaWNoCnByb3ZpZGVzIGEgc2luZ2xlIHZhbHVl
IHRvIHBhc3MgYXJvdW5kIHRvIGNvZGUgd2hpY2ggbmVlZHMgdG8gcGVyZm9y
bQpkYXRhIGxvYWRpbmcsIHN1Y2ggYXMgcGFydCBvZiB0aGUgYHJvb3RWYWx1
ZWAgaW4gYSBbZ3JhcGhxbC1qc11bXSByZXF1ZXN0LgoKIyMjIExvYWRpbmcg
YnkgYWx0ZXJuYXRpdmUga2V5cy4KCk9jY2FzaW9uYWxseSwgc29tZSBraW5k
IG9mIHZhbHVlIGNhbiBiZSBhY2Nlc3NlZCBpbiBtdWx0aXBsZSB3YXlzLiBG
b3IgZXhhbXBsZSwKcGVyaGFwcyBhICJVc2VyIiB0eXBlIGNhbiBiZSBsb2Fk
ZWQgbm90IG9ubHkgYnkgYW4gImlkIiBidXQgYWxzbyBieSBhICJ1c2VybmFt
ZSIKdmFsdWUuIElmIHRoZSBzYW1lIHVzZXIgaXMgbG9hZGVkIGJ5IGJvdGgg
a2V5cywgdGhlbiBpdCBtYXkgYmUgdXNlZnVsIHRvIGZpbGwKYm90aCBjYWNo
ZXMgd2hlbiBhIHVzZXIgaXMgbG9hZGVkIGZyb20gZWl0aGVyIHNvdXJjZToK
CmBgYGpzCmNvbnN0IHVzZXJCeUlETG9hZGVyID0gbmV3IERhdGFMb2FkZXIo
YXN5bmMgaWRzID0+IHsKICBjb25zdCB1c2VycyA9IGF3YWl0IGdlblVzZXJz
QnlJRChpZHMpCiAgZm9yIChsZXQgdXNlciBvZiB1c2VycykgewogICAgdXNl
cm5hbWVMb2FkZXIucHJpbWUodXNlci51c2VybmFtZSwgdXNlcikKICB9CiAg
cmV0dXJuIHVzZXJzCn0pCgpjb25zdCB1c2VybmFtZUxvYWRlciA9IG5ldyBE
YXRhTG9hZGVyKGFzeW5jIG5hbWVzID0+IHsKICBjb25zdCB1c2VycyA9IGF3
YWl0IGdlblVzZXJuYW1lcyhuYW1lcykKICBmb3IgKGxldCB1c2VyIG9mIHVz
ZXJzKSB7CiAgICB1c2VyQnlJRExvYWRlci5wcmltZSh1c2VyLmlkLCB1c2Vy
KQogIH0KICByZXR1cm4gdXNlcnMKfSkKYGBgCgojIyMgRnJlZXppbmcgcmVz
dWx0cyB0byBlbmZvcmNlIGltbXV0YWJpbGl0eQoKU2luY2UgRGF0YUxvYWRl
ciBjYWNoZXMgdmFsdWVzLCBpdCdzIHR5cGljYWxseSBhc3N1bWVkIHRoZXNl
IHZhbHVlcyB3aWxsIGJlCnRyZWF0ZWQgYXMgaWYgdGhleSB3ZXJlIGltbXV0
YWJsZS4gV2hpbGUgRGF0YUxvYWRlciBpdHNlbGYgZG9lc24ndCBlbmZvcmNl
CnRoaXMsIHlvdSBjYW4gY3JlYXRlIGEgaGlnaGVyLW9yZGVyIGZ1bmN0aW9u
IHRvIGVuZm9yY2UgaW1tdXRhYmlsaXR5CndpdGggT2JqZWN0LmZyZWV6ZSgp
OgoKYGBganMKZnVuY3Rpb24gZnJlZXplUmVzdWx0cyhiYXRjaExvYWRlcikg
ewogIHJldHVybiBrZXlzID0+IGJhdGNoTG9hZGVyKGtleXMpLnRoZW4odmFs
dWVzID0+IHZhbHVlcy5tYXAoT2JqZWN0LmZyZWV6ZSkpCn0KCmNvbnN0IG15
TG9hZGVyID0gbmV3IERhdGFMb2FkZXIoZnJlZXplUmVzdWx0cyhteUJhdGNo
TG9hZGVyKSkKYGBgCgojIyMgQmF0Y2ggZnVuY3Rpb25zIHdoaWNoIHJldHVy
biBPYmplY3RzIGluc3RlYWQgb2YgQXJyYXlzCgpEYXRhTG9hZGVyIGV4cGVj
dHMgYmF0Y2ggZnVuY3Rpb25zIHdoaWNoIHJldHVybiBhbiBBcnJheSBvZiB0
aGUgc2FtZSBsZW5ndGggYXMKdGhlIHByb3ZpZGVkIGtleXMuIEhvd2V2ZXIg
dGhpcyBpcyBub3QgYWx3YXlzIGEgY29tbW9uIHJldHVybiBmb3JtYXQgZnJv
bSBvdGhlcgpsaWJyYXJpZXMuIEEgRGF0YUxvYWRlciBoaWdoZXItb3JkZXIg
ZnVuY3Rpb24gY2FuIGNvbnZlcnQgZnJvbSBvbmUgZm9ybWF0IHRvIGFub3Ro
ZXIuIFRoZSBleGFtcGxlIGJlbG93IGNvbnZlcnRzIGEgYHsga2V5OiB2YWx1
ZSB9YCByZXN1bHQgdG8gdGhlIGZvcm1hdApEYXRhTG9hZGVyIGV4cGVjdHMu
CgpgYGBqcwpmdW5jdGlvbiBvYmpSZXN1bHRzKGJhdGNoTG9hZGVyKSB7CiAg
cmV0dXJuIGtleXMgPT4gYmF0Y2hMb2FkZXIoa2V5cykudGhlbihvYmpWYWx1
ZXMgPT4ga2V5cy5tYXAoCiAgICBrZXkgPT4gb2JqVmFsdWVzW2tleV0gfHwg
bmV3IEVycm9yKGBObyB2YWx1ZSBmb3IgJHtrZXl9YCkKICApKQp9Cgpjb25z
dCBteUxvYWRlciA9IG5ldyBEYXRhTG9hZGVyKG9ialJlc3VsdHMobXlCYXRj
aExvYWRlcikpCmBgYAoKCiMjIENvbW1vbiBCYWNrLWVuZHMKCkxvb2tpbmcg
dG8gZ2V0IHN0YXJ0ZWQgd2l0aCBhIHNwZWNpZmljIGJhY2stZW5kPyBUcnkg
dGhlIFtsb2FkZXJzIGluIHRoZSBleGFtcGxlcyBkaXJlY3RvcnldKC9leGFt
cGxlcykuCgojIyBPdGhlciBJbXBsZW1lbnRhdGlvbnMKCkxpc3RlZCBpbiBh
bHBoYWJldGljYWwgb3JkZXIKCiogRWxpeGlyCiAgKiBbZGF0YWxvYWRlcl0o
aHR0cHM6Ly9naXRodWIuY29tL2Fic2ludGhlLWdyYXBocWwvZGF0YWxvYWRl
cikKKiBHb2xhbmcKICAqIFtEYXRhbG9hZGVyXShodHRwczovL2dpdGh1Yi5j
b20vbmlja3NyYW5kYWxsL2RhdGFsb2FkZXIpCiogSmF2YQogICogW2phdmEt
ZGF0YWxvYWRlcl0oaHR0cHM6Ly9naXRodWIuY29tL2dyYXBocWwtamF2YS9q
YXZhLWRhdGFsb2FkZXIpCiogLk5ldAogICogW0dyYXBoUUwgLk5FVCBEYXRh
TG9hZGVyXShodHRwczovL2dyYXBocWwtZG90bmV0LmdpdGh1Yi5pby9kb2Nz
L2d1aWRlcy9kYXRhbG9hZGVyLykKICAqIFtHcmVlbkRvbnV0XShodHRwczov
L2dpdGh1Yi5jb20vQ2hpbGxpQ3JlYW0vZ3JlZW5kb251dCkKKiBQZXJsCiAg
KiBbcGVybC1EYXRhTG9hZGVyXShodHRwczovL2dpdGh1Yi5jb20vcmljaGFy
ZGpoYXJyaXMvcGVybC1EYXRhTG9hZGVyKQoqIFBIUAogICogW0RhdGFMb2Fk
ZXJQSFBdKGh0dHBzOi8vZ2l0aHViLmNvbS9vdmVyYmxvZy9kYXRhbG9hZGVy
LXBocCkKKiBQeXRob24KICAqIFthaW9kYXRhbG9hZGVyXShodHRwczovL2dp
dGh1Yi5jb20vc3lydXNha2JhcnkvYWlvZGF0YWxvYWRlcikKKiBSZWFzb25N
TAogICogW2JzLWRhdGFsb2FkZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS91bHJp
a3N0cmlkL2JzLWRhdGFsb2FkZXIpCiogUnVieQogICogW0JhdGNoTG9hZGVy
XShodHRwczovL2dpdGh1Yi5jb20vZXhhc3BhcmsvYmF0Y2gtbG9hZGVyKQog
ICogW0RhdGFsb2FkZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9zaGVlcnVuL2Rh
dGFsb2FkZXIpCiAgKiBbR3JhcGhRTCBCYXRjaF0oaHR0cHM6Ly9naXRodWIu
Y29tL1Nob3BpZnkvZ3JhcGhxbC1iYXRjaCkKKiBSdXN0CiAgKiBbRGF0YWxv
YWRlcl0oaHR0cHM6Ly9naXRodWIuY29tL2Nrc2FjL2RhdGFsb2FkZXItcnMp
CiogU3dpZnQKICAqIFtTd2lmdERhdGFMb2FkZXJdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9raW1kdi9Td2lmdERhdGFMb2FkZXIpCgojIyBWaWRlbyBTb3VyY2Ug
Q29kZSBXYWxrdGhyb3VnaAoKKipEYXRhTG9hZGVyIFNvdXJjZSBDb2RlIFdh
bGt0aHJvdWdoIChZb3VUdWJlKToqKgoKQSB3YWxrdGhyb3VnaCBvZiB0aGUg
RGF0YUxvYWRlciB2MSBzb3VyY2UgY29kZS4gV2hpbGUgdGhlIHNvdXJjZSBo
YXMgY2hhbmdlZApzaW5jZSB0aGlzIHZpZGVvIHdhcyBtYWRlLCBpdCBpcyBz
dGlsbCBhIGdvb2Qgb3ZlcnZpZXcgb2YgdGhlIHJhdGlvbmFsZSBvZgpEYXRh
TG9hZGVyIGFuZCBob3cgaXQgd29ya3MuCgo8YSBocmVmPSJodHRwczovL3lv
dXR1LmJlL09RVG5YTkNEeXdBIiB0YXJnZXQ9Il9ibGFuayIgYWx0PSJEYXRh
TG9hZGVyIFNvdXJjZSBDb2RlIFdhbGt0aHJvdWdoIj48aW1nIHNyYz0iaHR0
cHM6Ly9pbWcueW91dHViZS5jb20vdmkvT1FUblhOQ0R5d0EvMC5qcGciIC8+
PC9hPgoKCltAc2Nocm9ja25dOiBodHRwczovL2dpdGh1Yi5jb20vc2Nocm9j
a24KW01hcF06IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVT
L2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3Rz
L01hcApbZ3JhcGhxbC1qc106IGh0dHBzOi8vZ2l0aHViLmNvbS9ncmFwaHFs
L2dyYXBocWwtanMKW2NhY2hlIGFsZ29yaXRobXNdOiBodHRwczovL2VuLndp
a2lwZWRpYS5vcmcvd2lraS9DYWNoZV9hbGdvcml0aG1zCltleHByZXNzXTog
aHR0cDovL2V4cHJlc3Nqcy5jb20vCltiYWJlbC9wb2x5ZmlsbF06IGh0dHBz
Oi8vYmFiZWxqcy5pby9kb2NzL3VzYWdlL3BvbHlmaWxsLwpbbHJ1X21hcF06
IGh0dHBzOi8vZ2l0aHViLmNvbS9yc21zL2pzLWxydQpbc291cmNlIGNvZGVd
OiBodHRwczovL2dpdGh1Yi5jb20vZ3JhcGhxbC9kYXRhbG9hZGVyL2Jsb2Iv
bWFzdGVyL3NyYy9pbmRleC5qcwo=
",,8299,"bGFuZ3VhZ2U6IG5vZGVfanMKCiMgaHR0cHM6Ly9naXRodWIuY29tL25vZGVq
cy9MVFMKbm9kZV9qczoKICAtICcxMicKICAtICcxMCcKICAtICc4JwoKZ2l0
OgogIGRlcHRoOiA1CgpjYWNoZTogeWFybgoKc2NyaXB0OgogIC0gaWYgW1sg
IiRUUkFWSVNfSk9CX05VTUJFUiIgPT0gKi4xIF1dOyB0aGVuIG5wbSBydW4g
dGVzdDpjaTsgZWxzZSBucG0gcnVuIHRlc3Rvbmx5OyBmaQoKam9iczoKICBp
bmNsdWRlOgogICAgLSBzdGFnZTogZGVwbG95CiAgICAgIGlmOiB0YWcgSVMg
cHJlc2VudAogICAgICBzY3JpcHQ6IGVjaG8gIkRlcGxveWluZy4uLiIKICAg
ICAgbm9kZV9qczogJzEyJwogICAgICBkZXBsb3k6CiAgICAgICAgcHJvdmlk
ZXI6IG5wbQogICAgICAgIHNraXBfY2xlYW51cDogdHJ1ZQogICAgICAgIGVt
YWlsOiBsZWVAbGVlYnlyb24uY29tCiAgICAgICAgYXBpX2tleToKICAgICAg
ICAgIHNlY3VyZTogblNHYzZ2bHJFQk03dm5naUExWWR3bFpzRkxQVmttWHVv
Vm5IcEZMbWxRODYwMkZnMTB5QkpoYWI2YTVTekpPMTFPR1pDRjU4cFVPSzVW
Wm4rZ3o1UUxabitNc092Q2w4cThZK3d3dEVlNnZEdEd1RDNMSTFIdzd6akJY
R0Fsa1o0MTgvTUx5ZTJhWEFTaHJZekdPdGJuRm4yQVlZWlR5UjZocUZTQkJx
a3RYc0czRTZaSE5lNHBhSnowOVlUc2xEN1lrL212NHVpdGJ4WFJ3TktlNEdY
M2dkZEtpR1JjNUVnS1NJclNxQmcxOWxoYU92TDMwSHZNeWJvc0pBSEVzMEVy
L1U0U1FpS2FZT2QzYmRlQUJQZTRzeUJwbzc2WWZnUUpRTlpkWHEyTVJaeEVu
Q3M4aG5pQ3c4ckFQbTFRL3l2M0ZWRzZOOUlQazIzQkVlems2YWg0dnA2cDF1
TUNpd3BTMStMUTMvaFlzN3NqaXN3V2tLMlRnNFdONmptVFlNZlBmRUdwUERz
Z3d5Q1JjTDlJOW92RGwvbmJETGxYaXNlUnFGc1NrTTQ5U0pYQk1KYStFdVFO
Z2ZQYlQrekVkWkZkS0NGZTlmbUQyZjJ5UGFWRzV0dkY3ai9IeVpFMEZUZkxr
QWVLZFBMdm5NN1UzdzgxQmZwemZ1ejJLeXdqaVIvQzZMcWpWMUo4aW9CbGhw
QnRibmFoQ1RqNWQraklmZVIwT2MwMG5wOXcwREpBRlNmSFRYU0JYemh2VEh0
WjBBS2R2YWx6aW1KS1JFZnk1MEFCUFBidGJVbE5uU2tveUxqbHhLVXBwMGti
WkJubHUra1Zjb0V5SUZpTmhnOFQrczI4V3Y4ZllWVWlKN1BpaHBVeEI5UVZE
NmlUdm1ZRmZ0dXNOWkpuZlpaVGs9CiAgICAgICAgb246CiAgICAgICAgICB0
YWdzOiB0cnVlCiAgICAgICAgICBicmFuY2g6IG1hc3RlcgogICAgICAgICAg
cmVwbzogZ3JhcGhxbC9kYXRhbG9hZGVyCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'frontend-stuff',24817507,"b'A continuously expanded list of frameworks, libraries and tools I used/want to use for building things on the web. Mostly JavaScript.'",,2,8298,,439,False,b'https://api.github.com/repos/moklick/frontend-stuff/forks',"RnJvbnRlbmQgc3R1ZmYKPT09PT09PT09PT09PT0KCkEgY29udGludW91c2x5
IGV4cGFuZGVkIGxpc3Qgb2YgZnJhbWV3b3JrcywgbGlicmFyaWVzIGFuZCB0
b29scyBJIHVzZWQvd2FudCB0byB1c2UgZm9yIGJ1aWxkaW5nIHRoaW5ncyBv
biB0aGUgd2ViLiBNb3N0bHkgSmF2YXNjcmlwdCBzdHVmZi4KCiMjIFRhYmxl
IG9mIENvbnRlbnRzCi0gW0NTUy9VSSBGcmFtZXdvcmtzXSgjY3NzdWktZnJh
bWV3b3JrcykKLSBbRnJvbnRlbmQgRnJhbWV3b3Jrcy9VSSBDb21wb25lbnQg
TGlicmFyaWVzXSgjZnJvbnRlbmQtZnJhbWV3b3Jrcy11aS1jb21wb25lbnQt
bGlicmFyaWVzKQotIFtBbGxyb3VuZGVyXSgjYWxscm91bmRlci1qcXVlcnkt
bGlrZSkgKGpRdWVyeSBsaWtlKQotIFtDaGFydHNdKCNjaGFydHMpCi0gW01h
cHNdKCNtYXBzKQotIFtUYWJsZXMgJiBTcHJlYWRzaGVldHNdKCN0YWJsZXMt
LXNwcmVhZHNoZWV0cykKLSBbU2VsZWN0c10oI3NlbGVjdHMpCi0gW0xvYWRl
cnNdKCNsb2FkZXJzKQotIFtVSSBFbGVtZW50c10oI3VpLWVsZW1lbnRzKQot
IFtDb250ZW50IFNsaWRlci9DYXJvdXNlbHNdKCNjb250ZW50LXNsaWRlcmNh
cm91c2VscykKLSBbVHlwb2dyYXBoeS9UZXh0XSgjdHlwb2dyYXBoeXRleHQp
Ci0gW1ZpZGVvXSgjdmlkZW8pCi0gW0F1ZGlvXSgjYXVkaW8pCi0gW0NhbnZh
cyBhbmQgU1ZHXSgjY2FudmFzLWFuZC1zdmcpCi0gWzNEL1dlYkdMIEZyYW1l
d29ya3NdKCMzZHdlYmdsLWZyYW1ld29ya3MpCi0gW0ltYWdlIFByb2Nlc3Np
bmddKCNpbWFnZS1wcm9jZXNzaW5nKQotIFtTY3JvbGxpbmddKCNzY3JvbGxp
bmcpCi0gW1RvdWNoIEdlc3R1cmVzXSgjdG91Y2gtZ2VzdHVyZXMpCi0gW0Fu
aW1hdGlvbnNdKCNhbmltYXRpb25zKQotIFtUZW1wbGF0aW5nXSgjdGVtcGxh
dGluZykKLSBbSFRUUCBSZXF1ZXN0c10oI2h0dHAtcmVxdWVzdHMpCi0gW0V2
ZW50c10oI2V2ZW50cykKLSBbSWNvbnNdKCNpY29ucykKLSBbQ29sb3JzXSgj
Y29sb3JzKQotIFtEYXRhYmFzZXMvU3RvcmFnZV0oI2RhdGFiYXNlc3N0b3Jh
Z2UpCi0gW1ZhbGlkYXRpb25dKCN2YWxpZGF0aW9uKQotIFtEYXRlc10oI2Rh
dGVzKQotIFtJbnRlcm5hdGlvbmFsaXphdGlvbl0oI2ludGVybmF0aW9uYWxp
emF0aW9uKQotIFtOdW1iZXJzICYgQ3VycmVuY2llc10oI251bWJlcnMtLWN1
cnJlbmNpZXMpCi0gW1N0YXRpc3RpY3MgJiBkYXRhIGFuYWx5c2lzXSgjc3Rh
dGlzdGljcy0tZGF0YS1hbmFseXNpcykKLSBbTW9kdWxlIExvYWRlcnNdKCNt
b2R1bGUtbG9hZGVycykKLSBbTGF6eSBMb2FkaW5nXSgjbGF6eS1sb2FkaW5n
KQotIFtOZXVyYWwgTmV0d29ya3NdKCNuZXVyYWwtbmV0d29ya3MpCi0gW1Nv
Y2lhbF0oI3NvY2lhbCkKLSBbVXRpbGl0eSBMaWJyYXJpZXNdKCN1dGlsaXR5
LWxpYnJhcmllcykKLSBbR2VuZXJhbF0oI2dlbmVyYWwpCgojIyMgQ1NTL1VJ
IEZyYW1ld29ya3MKLSBbYmFzZV0oaHR0cDovL21hdHRoZXdoYXJ0bWFuLmdp
dGh1Yi5pby9iYXNlLykgLSBSZXNwb25zaXZlIENTUyBmcmFtZXdvcmsgd2l0
aCBJRTcrIHN1cHBvcnQKLSBbQkFTU0NTU10oaHR0cDovL3d3dy5iYXNzY3Nz
LmNvbS8pIC0gTG93LWxldmVsIENTUyB0b29sa2l0Ci0gW2Jvb3RmbGF0XSho
dHRwOi8vYm9vdGZsYXQuZ2l0aHViLmlvL2luZGV4Lmh0bWwpIC0gQm9vdHN0
cmFwIHdpdGggYSBmbGF0IGRlc2lnbiB0aGVtZQotIFtCb290c3dhdGNoXSho
dHRwczovL2dpdGh1Yi5jb20vdGhvbWFzcGFyay9ib290c3dhdGNoKSAtIEEg
Y29sbGVjdGlvbiBvZiB0aGVtZXMgZm9yIEJvb3RzdHJhcAotIFtidWxtYV0o
aHR0cDovL2J1bG1hLmlvLykgLSBDU1MgZnJhbWV3b3JrIGJhc2VkIG9uIEZs
ZXhib3gKLSBbY2FyZGluYWxdKGh0dHA6Ly9jYXJkaW5hbGNzcy5jb20vKSAt
IENhcmRpbmFsIGlzIGEgc21hbGwgbW9iaWxlIGZpcnN0IENTUyBmcmFtZXdv
cmsKLSBbY2FyYW1lbF0oaHR0cDovL2NhcmFtZWwua3VyaXN1YnJvb2tzLmNv
bS8pIC0gQSBzaW1wbGUsIGJlYXV0aWZ1bCwgcmVzcG9uc2l2ZSwgbW9kZXJu
IENTUyBmcmFtZXdvcmsKLSBbY29ycHVzXShodHRwczovL2dpdGh1Yi5jb20v
amFtaWV3aWxzb24vY29ycHVzKSAtIEEgY29sbGVjdGlvbiBvZiBDU1MgdGhp
bmdzCi0gW0hUTUwgU3RhcnRlcmtpdF0oaHR0cDovL3ppdHJ1c2ZyaXNjaC5j
b20vaHRtbC1zdGFydGVya2l0LykgLSBIVE1MNSB0ZW1wbGF0ZSB0byBraWNr
IG9mZiB5b3VyIHJlc3BvbnNpdmUgd2Vic2l0ZXMKLSBba3ViZV0oaHR0cDov
L2ltcGVyYXZpLmNvbS9rdWJlLykgLSBNaW5pbWFsaXN0aWMgV2ViIGZyYW1l
d29yawotIFtNYXRlcmlhbCBEZXNpZ24gTGl0ZV0oaHR0cDovL3d3dy5nZXRt
ZGwuaW8vKSAtIE1hdGVyaWFsIERlc2lnbiBMaXRlIENvbXBvbmVudHMgaW4g
SFRNTC9DU1MvSlMKLSBbbWF0ZXJpYWxpemVdKGh0dHA6Ly9tYXRlcmlhbGl6
ZWNzcy5jb20vKSAtIEEgbW9kZXJuIHJlc3BvbnNpdmUgZnJvbnQtZW5kIGZy
YW1ld29yayBiYXNlZCBvbiBNYXRlcmlhbCBEZXNpZ24KLSBbTWV0cm8gVUld
KGh0dHBzOi8vbWV0cm91aS5vcmcudWEvKSAtIEEgZnJvbnQtZW5kIGZyYW1l
d29yayBmb3IgZGV2ZWxvcGluZyB3ZWJzaXRlIGluIFdpbmRvd3MgTWV0cm8g
U3R5bGUKLSBbbWlsbGlncmFtXShodHRwOi8vbWlsbGlncmFtLmdpdGh1Yi5p
by8pIC0gTWluaW1hbCBzZXR1cCBvZiBzdHlsZXMgZm9yIGEgZmFzdCBzdGFy
dGluZyBwb2ludC4KLSBbbWluaS5jc3NdKGh0dHBzOi8vY2hhbGFyYW5nZWxv
LmdpdGh1Yi5pby9taW5pLmNzcy8pIC0gQSBtaW5pbWFsLCByZXNwb25zaXZl
LCBzdHlsZS1hZ25vc3RpYyBDU1MgZnJhbWV3b3JrL3Rvb2xraXQKLSBbbXVp
XShodHRwczovL3d3dy5tdWljc3MuY29tKSAtIEEgTGlnaHR3ZWlnaHQgSFRN
TC9DU1MvSlMgRnJhbWV3b3JrIGltcGxlbWVudGluZyBNYXRlcmlhbCBEZXNp
Z24KLSBbTkVTLmNzc10oaHR0cHM6Ly9iY3Jpa2tvLmdpdGh1Yi5pby9ORVMu
Y3NzLykgLSBORVMtc3R5bGUgQ1NTIEZyYW1ld29yawotIFtwYXBlckNTU10o
aHR0cHM6Ly93d3cuZ2V0cGFwZXJjc3MuY29tLykgLSBUaGUgTGVzcyBGb3Jt
YWwgQ1NTIEZyYW1ld29yawotIFtwYXBpZXJdKGh0dHA6Ly9ndWdlbC5pby9w
YXBpZXIvKSAtIE1hdGVyaWFsIGRlc2lnbiBsaWtlIG1pbmltYWwgQ1NTIGZy
YW1ld29yawotIFtwYXZpbGlvbl0oaHR0cDovL3d3dy5wYXZpbGlvbi5pby8p
IC0gVW5vcGluaW9uYXRlZCBDU1MgZnJhbWV3b3JrCi0gW3BpY25pY3NzXSho
dHRwOi8vcGljbmljc3MuY29tLykgLSBMaWdodHdlaWdodCBVSSBsaWJyYXJ5
Ci0gW3B1cmVdKGh0dHA6Ly9wdXJlY3NzLmlvLykgLSBBIHNldCBvZiBzbWFs
bCwgcmVzcG9uc2l2ZSBDU1MgbW9kdWxlcwotIFtzZW1hbnRpYy11aV0oaHR0
cDovL3NlbWFudGljLXVpLmNvbS8pIC0gVUkgS2l0IHdpdGggbG90cyBvZiB0
aGVtZXMgYW5kIGVsZW1lbnRzCi0gW3NrZWxldG9uXShodHRwOi8vZ2V0c2tl
bGV0b24uY29tLykgLSBBIGRlYWQgc2ltcGxlLCByZXNwb25zaXZlIGJvaWxl
cnBsYXRlCi0gW3RhY2h5b25zXShodHRwOi8vdGFjaHlvbnMuaW8vKSAtIE1v
ZHVsYXIgVUkgZnJhbWV3b3JrCi0gW3RhY2l0XShodHRwczovL2dpdGh1Yi5j
b20veWVnb3IyNTYvdGFjaXQpIC0gQ1NTIGZyYW1ld29yayB3aXRob3V0IGNs
YXNzZXMKLSBbdWlraXRdKGh0dHA6Ly9nZXR1aWtpdC5jb20vaW5kZXguaHRt
bCkgLSBBIGxpZ2h0d2VpZ2h0IGFuZCBtb2R1bGFyIGZyb250LWVuZCBmcmFt
ZXdvcmsKLSBbd2luZ10oaHR0cHM6Ly9naXRodWIuY29tL0tpbmdQaXhpbC93
aW5nLykgLSBNaW5pbWFsIENTUyBmcmFtZXdvcmsKCioqWyBiYWNrIHRvIHRv
cF0oI3RhYmxlLW9mLWNvbnRlbnRzKSoqCgojIyMgRnJvbnRlbmQgRnJhbWV3
b3Jrcy8gVWkgQ29tcG9uZW50IExpYnJhcmllcwotIFtBbmd1bGFyXShodHRw
czovL2FuZ3VsYXJqcy5vcmcvKSAtIEhUTUwgZW5oYW5jZWQgZm9yIHdlYiBh
cHBzCi0gW0F1cmVsaWFdKGh0dHA6Ly9hdXJlbGlhLmlvLykgLSBVSSBmcmFt
ZXdvcmsgZm9yIHRoZSBicm93c2VyLCBtb2JpbGUgb3IgZGVza3RvcCBhcHBz
Ci0gW2Nob29dKGh0dHBzOi8vZ2l0aHViLmNvbS95b3NodWF3dXl0cy9jaG9v
KSAtIElzb21vcnBoaWMsIHNpbmdsZSBzdGF0ZSwgZnVuY3Rpb25hbCBmcm9u
dGVuZCBmcmFtZXdvcmsKLSBbZGVrdV0oaHR0cHM6Ly9naXRodWIuY29tL2Fu
dGhvbnlzaG9ydC9kZWt1KSAtIExpYnJhcnkgZm9yIHJlbmRlcmluZyBpbnRl
cmZhY2VzIHVzaW5nIHB1cmUgZnVuY3Rpb25zIGFuZCB2aXJ0dWFsIERPTQot
IFtEaXNwbGF5SlNdKGh0dHBzOi8vZ2l0aHViLmNvbS9hcmd1aW90L0Rpc3Bs
YXlKUykgLSBBIHNpbXBsZSBKYXZhU2NyaXB0IGZyYW1ld29yayBmb3IgYnVp
bGRpbmcgYW1iaXRpb3VzIFVJcwotIFtoeXBlcmFwcF0oaHR0cHM6Ly9naXRo
dWIuY29tL2h5cGVyYXBwL2h5cGVyYXBwKSAtIE1pY3JvLWZyYW1ld29yayBm
b3IgYnVpbGRpbmcgd2ViIGFwcGxpY2F0aW9ucwotIFtpbmZlcm5vXShodHRw
czovL2dpdGh1Yi5jb20vdHJ1ZWFkbS9pbmZlcm5vKSAtIElzb21vcnBoaWMg
bGlicmFyeSBmb3IgYnVpbGRpbmcgaGlnaC1wZXJmb3JtYW5jZSB1c2VyIGlu
dGVyZmFjZXMKLSBbanNibG9ja3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9hc3Rv
aWxrb3YvanNibG9ja3MpIC0gTVYtaXNoIGZyYW1ld29yayBmb3Igc2luZ2xl
IHBhZ2UgYXBwcwotIFttZXJjdXJ5XShodHRwczovL2dpdGh1Yi5jb20vUmF5
bm9zL21lcmN1cnkpIC0gTW9kdWxhciBmcm9udGVuZCBmcmFtZXdvcmsKLSBb
bWl0aHJpbF0oaHR0cHM6Ly9naXRodWIuY29tL2xob3JpZS9taXRocmlsLmpz
LykgLSBDbGllbnQtc2lkZSBNVkMgZnJhbWV3b3JrCi0gW01vb25dKGh0dHBz
Oi8va2Jyc2guZ2l0aHViLmlvL21vb24vKSAtIE1pbmltYWwgVUkgbGlicmFy
eSAKLSBbcHJlYWN0XShodHRwczovL2dpdGh1Yi5jb20vZGV2ZWxvcGl0L3By
ZWFjdCkgLSBSZWFjdCBFUzYgQVBJICsgQ29tcG9uZW50cyAmIFZpcnR1YWwg
RE9NCi0gW1JlYWN0XShodHRwczovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFj
dC8pIC0gTGlicmFyeSBmb3IgYnVpbGRpbmcgdXNlciBpbnRlcmZhY2VzCi0g
W1JFOkRPTV0oaHR0cHM6Ly9naXRodWIuY29tL3Bha2FzdGluL3JlZG9tKSAt
IExpYnJhcnkgZm9yIGNyZWF0aW5nIHVzZXIgaW50ZXJmYWNlcwotIFtyZWFj
dC1saXRlXShodHRwczovL2dpdGh1Yi5jb20vTHVjaWZpZXIxMjkvcmVhY3Qt
bGl0ZSkgLSBJbXBsZW1lbnRhdGlvbiBvZiBSZWFjdCB0aGF0IG9wdGltaXpl
cyBmb3Igc21hbGwgc2NyaXB0IHNpemUKLSBbcmlvdF0oaHR0cDovL3Jpb3Rq
cy5jb20vKSAtIFVzZXIgaW50ZXJmYWNlIG1pY3JvLWxpYnJhcnkKLSBbc2th
dGVqc10oaHR0cHM6Ly9naXRodWIuY29tL3NrYXRlanMvc2thdGVqcykgLSBX
ZWIgY29tcG9uZW50IGxpYnJhcnkKLSBbc3ZlbHRlXShodHRwczovL2dpdGh1
Yi5jb20vc3ZlbHRlanMvc3ZlbHRlKSAtIFRoZSBtYWdpY2FsIGRpc2FwcGVh
cmluZyBVSSBmcmFtZXdvcmsKLSBbdnVlXShodHRwczovL2dpdGh1Yi5jb20v
dnVlanMvdnVlKSAtIExpYnJhcnkgZm9yIGJ1aWxkaW5nIHdlYiBpbnRlcmZh
Y2VzCgoqKlsgYmFjayB0byB0b3BdKCN0YWJsZS1vZi1jb250ZW50cykqKgoK
IyMjIEFsbHJvdW5kZXIgKGpRdWVyeSBsaWtlKQotIFtibGlzc10oaHR0cDov
L2JsaXNzZnVsanMuY29tLykgLSBBIGNvbGxlY3Rpb24gb2YgaGVscGVycyBh
bmQgbGlnaHQgc3ludGFjdGljIHN1Z2FyIG92ZXIgVmFuaWxsYSBKUwotIFtj
YXNoXShodHRwczovL2dpdGh1Yi5jb20va2Vud2hlZWxlci9jYXNoKSAtIExp
YnJhcnkgdGhhdCBwcm92aWRlcyBqUXVlcnkgc3R5bGUgc3ludGF4IHRvIHdy
YXAgbW9kZXJuIFZhbmlsbGEgSlMgZmVhdHVyZXMKLSBbalF1ZXJ5XShodHRw
czovL2pxdWVyeS5jb20vKSAtIEZlYXR1cmUtcmljaCBKYXZhU2NyaXB0IGxp
YnJhcnkKLSBbbmFub0pTXShodHRwczovL2dpdGh1Yi5jb20vdmxhZG9jYXIv
bmFub0pTLykgLSBNaW5pbWFsIHN0YW5kYWxvbmUgSlMgbGlicmFyeSBmb3Ig
RE9NIG1hbmlwdWxhdGlvbgotIFtOb2RlTGlzdC5qc10oaHR0cHM6Ly9naXRo
dWIuY29tL2VvcnJvZS9Ob2RlTGlzdC5qcykgLSBVc2UgdGhlIE5hdGl2ZSBE
T00gQVBJcyBhcyBlYXNpbHkgYXMgalF1ZXJ5Ci0gW1NlbGVjdG9yXShodHRw
czovL2dpdGh1Yi5jb20vV2Vic2lsay9TZWxlY3RvcikgLSBMaWdodHdlaWdo
dCBsaWJyYXJ5IHVzZWQgYXMgYSByZXBsYWNlbWVudCBmb3IgalF1ZXJ5Ci0g
W3VtYnJlbGxhXShodHRwczovL2dpdGh1Yi5jb20vdW1icmVsbGFqcy91bWJy
ZWxsYSkgLSBET00sIEV2ZW50IGFuZCBBSkFYIGxpYnJhcnkKLSBbemVwdG9q
c10oaHR0cDovL3plcHRvanMuY29tLykgLSBMaWJyYXJ5IHdpdGggYSBsYXJn
ZWx5IGpRdWVyeS1jb21wYXRpYmxlIEFQSQoqKlsgYmFjayB0byB0b3BdKCN0
YWJsZS1vZi1jb250ZW50cykqKgoKIyMjIENoYXJ0cwotIFtjaGFydGlzdF0o
aHR0cDovL2dpb25rdW56LmdpdGh1Yi5pby9jaGFydGlzdC1qcy8pIC0gU2lt
cGxlIHJlc3BvbnNpdmUgY2hhcnRzCi0gW2NoYXJ0c10oaHR0cHM6Ly9naXRo
dWIuY29tL2ZyYXBwZS9jaGFydHMpIC0gU1ZHIENoYXJ0cyB3aXRoIHplcm8g
ZGVwZW5kZW5jaWVzCi0gW2NoYXJ0anNdKGh0dHA6Ly93d3cuY2hhcnRqcy5v
cmcvKSAtIFNpbXBsZSwgY2xlYW4gYW5kIGVuZ2FnaW5nIGNoYXJ0cyBmb3Ig
ZGVzaWduZXJzIGFuZCBkZXZlbG9wZXJzCi0gW2NoYXJ0LnhrY2RdKGh0dHBz
Oi8vdGltcWlhbi5jb20vY2hhcnQueGtjZC8pIC0gQ2hhcnQgbGlicmFyeSBm
b3IgInNrZXRjaHkiIG9yICJjYXJ0b29ueSIgc3R5bGVkIGNoYXJ0cwotIFtD
eXRvc2NhcGUuanNdKGh0dHA6Ly9qcy5jeXRvc2NhcGUub3JnLykgLSBHcmFw
aCB0aGVvcnkgLyBuZXR3b3JrIGxpYnJhcnkgZm9yIGFuYWx5c2lzIGFuZCB2
aXN1YWxpc2F0aW9uCi0gW2MzXShodHRwOi8vYzNqcy5vcmcvKSAtIEQzLWJh
c2VkIHJldXNhYmxlIGNoYXJ0IGxpYnJhcnkKLSBbZGNdKGh0dHA6Ly9kYy1q
cy5naXRodWIuaW8vZGMuanMvKSAtIEZvciBoZWF2eSBhbW91bnRzIG9mIGRh
dGEKLSBbZGltcGxlXShodHRwOi8vZGltcGxlanMub3JnKSAtIEFuIG9iamVj
dC1vcmllbnRlZCBBUEkgZm9yIGJ1c2luZXNzIGFuYWx5dGljcyBwb3dlcmVk
IGJ5IGQzCi0gW0QzeHRlcl0oaHR0cHM6Ly9naXRodWIuY29tL05hdGhhbkVw
c3RlaW4vRDN4dGVyKSAtIFN0cmFpZ2h0IGZvcndhcmQgcGxvdHRpbmcgYnVp
bHQgb24gRDMKLSBbRUNoYXJ0c10oaHR0cDovL2VjaGFydHMuYmFpZHUuY29t
L2luZGV4LWVuLmh0bWwpIC0gQ2hhcnRpbmcgbGlicmFyeSBhbmQgaW50ZXJh
Y3RpdmUgZGF0YSB2aXN1YWxpemF0aW9uIHRvb2wKLSBbZXBvY2hdKGh0dHA6
Ly9lcG9jaGpzLmdpdGh1Yi5pby9lcG9jaCkgLSBBIGdlbmVyYWwgcHVycG9z
ZSwgcmVhbC10aW1lIHZpc3VhbGl6YXRpb24gbGlicmFyeQotIFtmMl0oaHR0
cHM6Ly9naXRodWIuY29tL2FudHZpcy9mMikgLSBJbnRlcmFjdGl2ZSBhbmQg
ZmxleGlibGUgY2hhcnRpbmcgbGlicmFyeSBmb3IgbW9iaWxlCi0gW2Zsb3dj
aGFydC5qc10oaHR0cDovL2FkcmFpLmdpdGh1Yi5pby9mbG93Y2hhcnQuanMp
IC0gRHJhd3MgZmxvdyBjaGFydHMgZnJvbSB0ZXh0dWFsIHJlcHJlc2VudGF0
aW9uIG9mIHRoZSBkaWFncmFtCi0gW2dncmFwaF0oaHR0cHM6Ly9naXRodWIu
Y29tL3BjYmplL2dncmFwaCkgLSBHcmFwaCB2aXN1YWxpemF0aW9uIG9mIGJp
ZyBtZXNzeSBkYXRhCi0gW2pzcGx1bWJdKGh0dHA6Ly9qc3BsdW1idG9vbGtp
dC5jb20vKSAtIFZpc3VhbCBjb25uZWN0aXZpdHkgZm9yIHdlYmFwcHMgKGZs
b3djaGFydHMsIHNlcXVlbmNlIGRpYWdyYW1zLCBldGMpCi0gW21ldHJpY3Nn
cmFwaGljc10oaHR0cDovL21ldHJpY3NncmFwaGljc2pzLm9yZy8pIC0gT3B0
aW1pemVkIGZvciB2aXN1YWxpemluZyB0aW1lLXNlcmllcyBkYXRhCi0gW21v
cnJpc2pzXShodHRwczovL2dpdGh1Yi5jb20vbW9ycmlzanMvbW9ycmlzLmpz
KSAtIFNWRyBjaGFydHMgYmFzZWQgb24ganF1ZXJ5IGFuZCBSYXBoYWVsCi0g
W211emVdKGh0dHBzOi8vZ2l0aHViLmNvbS9jaGFydHNocS9tdXplKSAtIENv
bXBvc2FibGUgZGF0YSB2aXN1YWxpc2F0aW9uIGxpYiB3aXRoIGEgZGF0YS1m
aXJzdCBhcHByb2FjaCAKLSBbbnZkM10oaHR0cDovL252ZDMub3JnLykgLSBS
ZS11c2FibGUgY2hhcnRzIGFuZCBjaGFydCBjb21wb25lbnRzIGZvciBkMy5q
cwotIFtwZWl0eV0oaHR0cDovL2JlbnBpY2tsZXMuZ2l0aHViLmlvL3BlaXR5
LykgLSBQcm9ncmVzc2l2ZSBtaW5pIFw8c3ZnXD4gcGllLCBkb251dCwgYmFy
IGFuZCBsaW5lIGNoYXJ0cwotIFtzcGFya2xpbmVdKGh0dHA6Ly9vbW5pcG90
ZW50Lm5ldC9qcXVlcnkuc3BhcmtsaW5lLykgLSBTcGFya2xpbmUgY2hhcnRz
IGxpYnJhcnkKLSBbc3Bhcmt5XShodHRwOi8vcHJhZy5tYS9jb2RlL3NwYXJr
eS8pIC0gU3BhcmtsaW5lIGNoYXJ0cyBsaWJyYXJ5IGJhc2VkIG9uIHJhcGFo
ZWwKLSBbdGF1Y2hhcnRzXShodHRwOi8vd3d3LnRhdWNoYXJ0cy5jb20vKSAt
IENoYXJ0cyB3aXRoIGEgZm9jdXMgb24gZGVzaWduIGFuZCBmbGV4aWJpbGl0
eQotIFt0aW1lc2hlZXQuanNdKGh0dHBzOi8vc2JzdGpuLmdpdGh1Yi5pby90
aW1lc2hlZXQuanMvKSAtIEhUTUw1ICYgQ1NTMyB0aW1lIHNoZWV0cwotIFt0
dWkuY2hhcnRdKGh0dHBzOi8vZ2l0aHViLmNvbS9uaG5lbnQvdHVpLmNoYXJ0
KSAtIERhdGEgdmlzdWFsaXphdGlvbiBsaWJyYXJ5IHdpdGggSUU4IHN1cHBv
cnQKLSBbdXZDaGFydHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9pbWFnaW5lYS91
dkNoYXJ0cykgLSBTaW1wbGUsIHJvYnVzdCwgZXh0ZW5zaWJsZSBjaGFydGlu
ZyBsaWJyYXJ5IGJ1aWx0IHVzaW5nIGQzCi0gW3Zpcy5qc10oaHR0cDovL3Zp
c2pzLm9yZy8pIC0gQSBkeW5hbWljLCBicm93c2VyIGJhc2VkIHZpc3VhbGl6
YXRpb24gbGlicmFyeQotIFtWaXZhR3JhcGhdKGh0dHBzOi8vZ2l0aHViLmNv
bS9hbnZha2EvVml2YUdyYXBoSlMpIC0gRXh0ZW5zaWJsZSBncmFwaCBkcmF3
aW5nIGxpYnJhcnkKLSBbWjNkXShodHRwczovL2dpdGh1Yi5jb20vTmF0aGFu
RXBzdGVpbi9aM2QpIC0gM2QgcGxvdHMgd2l0aCB0aHJlZS5qcwoKKipbIGJh
Y2sgdG8gdG9wXSgjdGFibGUtb2YtY29udGVudHMpKioKCiMjIyBNYXBzCi0g
W0Nlc2l1bV0oaHR0cDovL2Nlc2l1bWpzLm9yZy8pIC0gTGlicmFyeSBmb3Ig
Y3JlYXRpbmcgM0QgZ2xvYmVzIGFuZCAyRCBtYXBzIGluIGEgd2ViIGJyb3dz
ZXIgd2l0aG91dCBhIHBsdWdpbgotIFtLYXJ0b2dyYXBoXShodHRwOi8va2Fy
dG9ncmFwaC5vcmcvKSAtIFNpbXBsZSBhbmQgbGlnaHR3ZWlnaHQgZnJhbWV3
b3JrIGZvciBidWlsZGluZyBpbnRlcmFjdGl2ZSBtYXAgYXBwbGljYXRpb25z
IHdpdGhvdXQgR29vZ2xlIE1hcHMKLSBbbGVhZmxldF0oaHR0cDovL2xlYWZs
ZXRqcy5jb20vKSAtIExpYnJhcnkgZm9yIE1vYmlsZS1GcmllbmRseSBJbnRl
cmFjdGl2ZSBNYXBzCi0gW2xlYWZsZXQgcGx1Z2luc10oaHR0cDovL2xlYWZs
ZXRqcy5jb20vcGx1Z2lucy5odG1sKSAtIE5vdGFibGUgTGVhZmxldCBQbHVn
aW5zCi0gW2xlYWZsZXQgdG9wb2pzb24gc3VwcG9ydF0oaHR0cHM6Ly9naXN0
LmdpdGh1Yi5jb20vcmNsYXJrLzU3Nzk2NzMpIC0gVG9wb0pTT04tYXdhcmUg
TGVhZmxldCBsYXllcgotIFtNYXBib3ggR0wgSlNdKGh0dHBzOi8vd3d3Lm1h
cGJveC5jb20vbWFwYm94LWdsLWpzLykgLSBJbnRlcmFjdGl2ZSBXZWJHTCBt
YXBzIGZyb20gdmVjdG9yIHRpbGVzCi0gW21hcG1hcC5qc10oaHR0cHM6Ly9n
aXRodWIuY29tL2Zsb2xlZGVybWFubi9tYXBtYXAuanMpIC0gQSBkYXRhLWRy
aXZlbiBBUEkgZm9yIGludGVyYWN0aXZlIHRoZW1hdGljIG1hcHMKLSBbbWFw
c2ljb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9kamFpc3MvbWFwc2ljb24pIC0g
Q29sbGVjdGlvbiBvZiBtYXBzIGZvciBuZWFybHkgZXZlcnkgY291bnRyeSBp
biB0aGUgd29ybGQgaW4gUE5HIGFuZCBTVkcKLSBbb3NtYnVpbGRpbmdzXSho
dHRwOi8vb3NtYnVpbGRpbmdzLm9yZy8pIC0gTGlicmFyeSBmb3IgdmlzdWFs
aXppbmcgYnVpbGRpbmdzIGFzIHBzZXVkbyAzRCBvYmplY3RzIG9uIGludGVy
YWN0aXZlIG1hcHMKLSBbb3BlbmxheWVyczNdKGh0dHA6Ly9vcGVubGF5ZXJz
Lm9yZy8pIC0gTWFwcGluZyBsaWJyYXJ5IHRoYXQgc3VwcG9ydHMgZGlmZmVy
ZW50IHByb2plY3Rpb25zCi0gW3BsYW5ldGFyeV0oaHR0cDovL3BsYW5ldGFy
eWpzLmNvbS8pIC0gSW50ZXJhY3RpdmUgZ2xvYmVzIGZvciB0aGUgd2ViCi0g
W3NtYWxsd29ybGRdKGh0dHA6Ly9taWtlZm93bGVyLm1lL3NtYWxsd29ybGQu
anMvKSAtIEEgc21hbGwgdXRpbGl0eSBmb3IgZ2VuZXJhdGluZyBhIHNtYWxs
IHdvcmxkCi0gW1RhbmdyYW1dKGh0dHBzOi8vbWFwemVuLmNvbS9wcm9kdWN0
cy90YW5ncmFtLykgLSBXZWJHTCBiYXNlZCBtYXAgcmVuZGVyZXIKLSBbdG9w
b2pzb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9tYm9zdG9jay90b3BvanNvbikg
LSBBbiBleHRlbnNpb24gdG8gR2VvSlNPTiB0aGF0IGVuY29kZXMgdG9wb2xv
Z3kKLSBbdHVyZl0oaHR0cDovL3R1cmZqcy5vcmcvKSAtIEEgbW9kdWxhciBn
ZW9zcGF0aWFsIGVuZ2luZQoKKipbIGJhY2sgdG8gdG9wXSgjdGFibGUtb2Yt
Y29udGVudHMpKioKCiMjIyBUYWJsZXMgJiBTcHJlYWRzaGVldHMKLSBbQ2x1
c3Rlcml6ZS5qc10oaHR0cHM6Ly9naXRodWIuY29tL05lWFRzL0NsdXN0ZXJp
emUuanMpIC0gVmFuaWxsYSBwbHVnaW4gdG8gZGlzcGxheSBsYXJnZSBkYXRh
IHNldHMKLSBbRGF0YVRhYmxlc10oaHR0cDovL3d3dy5kYXRhdGFibGVzLm5l
dC8pIC0galF1ZXJ5IHBsdWdpbiB3aGljaCBhZGRzIHNvcnRpbmcsIHBhZ2lu
ZyBhbmQgZmlsdGVyaW5nIGFiaWxpdGllcyB0byBwbGFpbiBIVE1MIHRhYmxl
cyB3aXRoIG1pbmltYWwgZWZmb3J0Ci0gW2R5bmF0YWJsZXNdKGh0dHA6Ly93
d3cuZHluYXRhYmxlLmNvbS8pIC0gU2VtYW50aWMgYW5kIGludGVyYWN0aXZl
IHRhYmxlIHBsdWdpbiB1c2luZyBqUXVlcnksIEhUTUw1LCBhbmQgSlNPTgot
IFtoYW5kc29uIHRhYmxlXShodHRwOi8vaGFuZHNvbnRhYmxlLmNvbS8pIC0g
TWluaW1hbGlzdCBFeGNlbC1saWtlIGRhdGEgZ3JpZCBlZGl0b3IKLSBbTGlz
dEpTXShodHRwOi8vd3d3Lmxpc3Rqcy5jb20vKSAtIEFkZHMgc2VhcmNoLCBz
b3J0LCBmaWx0ZXJzIGFuZCBmbGV4aWJpbGl0eSB0byBwbGFpbiBIVE1MIGxp
c3RzLCB0YWJsZXMsIG9yIGFueXRoaW5nCi0gW3NvcnRhYmxlXShodHRwOi8v
Z2l0aHViLmh1YnNwb3QuY29tL3NvcnRhYmxlL2RvY3Mvd2VsY29tZS8pIC0g
TWFrZXMgdGFibGVzIHNvcnRhYmxlCi0gW3RhYmxlc2F3XShodHRwczovL2dp
dGh1Yi5jb20vZmlsYW1lbnRncm91cC90YWJsZXNhdykgLSBBIGdyb3VwIG9m
IHBsdWdpbnMgZm9yIHJlc3BvbnNpdmUgdGFibGVzCi0gW3R1aS1ncmlkXSho
dHRwczovL3VpLnRvYXN0LmNvbS90dWktZ3JpZC8pIC0gV2lkZ2V0IHRvIHZp
c3VhbGl6ZSBhbmQgZWRpdCBkYXRhIHZpYSBpdHMgdGFibGUgcmVwcmVzZW50
YXRpb24KLSBbeC1zcHJlYWRzaGVldF0oaHR0cHM6Ly9naXRodWIuY29tL215
bGlhbmcveC1zcHJlYWRzaGVldCkgLSBBIHdlYi1iYXNlZCBzcHJlYWRzaGVl
dCAKCioqWyBiYWNrIHRvIHRvcF0oI3RhYmxlLW9mLWNvbnRlbnRzKSoqCgoj
IyMgU2VsZWN0cwotIFthd2Vzb21wbGV0ZV0oaHR0cHM6Ly9sZWF2ZXJvdS5n
aXRodWIuaW8vYXdlc29tcGxldGUvKSAtIExpZ2h0d2VpZ2h0IGF1dG9jb21w
bGV0ZQotIFtjaG9zZW5dKGh0dHBzOi8vaGFydmVzdGhxLmdpdGh1Yi5pby9j
aG9zZW4vKSAtIExpYnJhcnkgZm9yIG1ha2luZyBsb25nLCB1bndpZWxkeSBz
ZWxlY3QgYm94ZXMgbW9yZSBmcmllbmRseQotIFtzZWxlY3QyXShodHRwczov
L3NlbGVjdDIuZ2l0aHViLmlvLykgLSBKUXVlcnkgYmFzZWQgcmVwbGFjZW1l
bnQgZm9yIHNlbGVjdCBib3hlcwoKKipbIGJhY2sgdG8gdG9wXSgjdGFibGUt
b2YtY29udGVudHMpKioKCiMjIyBMb2FkZXJzCi0gW0xvYWRlcnMuY3NzXSho
dHRwczovL2dpdGh1Yi5jb20vQ29ubm9yQXRoZXJ0b24vbG9hZGVycy5jc3Mp
IC0gRGVsaWdodGZ1bCwgcGVyZm9ybWFuY2UtZm9jdXNlZCBwdXJlIGNzcyBs
b2FkaW5nIGFuaW1hdGlvbnMKLSBbTVByb2dyZXNzLmpzXShodHRwczovL2xp
Z2h0bmluZ3RnYy5naXRodWIuaW8vTVByb2dyZXNzLmpzLykgLSBHb29nbGUg
TWF0ZXJpYWwgRGVzaWduIFByb2dyZXNzIExpbmVhciBiYXIKLSBbTlByb2dy
ZXNzXShodHRwOi8vcmljb3N0YWNydXouY29tL25wcm9ncmVzcy8pIC0gU2xp
bSBwcm9ncmVzcyBiYXJzIGZvciBBamF4J3kgYXBwbGljYXRpb25zLiBJbnNw
aXJlZCBieSBHb29nbGUsIFlvdVR1YmUsIGFuZCBNZWRpdW0KLSBbbmFub2Jh
cl0oaHR0cHM6Ly9naXRodWIuY29tL2phY29ib3J1cy9uYW5vYmFyLykgLSBM
aWdodHdlaWdodCBwcm9ncmVzcyBiYXJzIHdpdGhvdXQgalF1ZXJ5Ci0gW1BB
Q0VdKGh0dHA6Ly9naXRodWIuaHVic3BvdC5jb20vcGFjZS9kb2NzL3dlbGNv
bWUvKSAtIEF1dG9tYXRpYyBwYWdlIGxvYWQgcHJvZ3Jlc3MgYmFyLiBOZWVk
cyB6ZXJvIGNvbmZpZy4gRWFzeSB0aGVtZWFibGUuCi0gW1BsZWFzZVdhaXQu
anNdKGh0dHBzOi8vcGF0aGdhdGhlci5naXRodWIuaW8vcGxlYXNlLXdhaXQv
KSAtIEEgc2ltcGxlIGxpYnJhcnkgdG8gc2hvdyB5b3VyIHVzZXJzIGEgYmVh
dXRpZnVsIHNwbGFzaCBwYWdlIHdoaWxlIHlvdXIgYXBwbGljYXRpb24gbG9h
ZHMKCioqWyBiYWNrIHRvIHRvcF0oI3RhYmxlLW9mLWNvbnRlbnRzKSoqCgoj
IyMgVUkgRWxlbWVudHMKLSBbYnV0dG9uIGNvbmNlcHRzXShodHRwOi8vdHlt
cGFudXMubmV0L0RldmVsb3BtZW50L0NyZWF0aXZlQnV0dG9ucy8pIC0gTGlz
dCBvZiBDU1MgYnV0dG9uIHZhcmlhdGlvbnMKLSBbY291bnRVcC5qc10oaHR0
cHM6Ly9pbm9yZ2FuaWsuZ2l0aHViLmlvL2NvdW50VXAuanMvKSAtIENvdW50
IHVwIG9yIGRvd24gYW5pbWF0aW9uIGVmZmVjdHMgZm9yIG51bWJlcnMKLSBb
RmxpcHNpZGVdKGh0dHA6Ly9sYWIuaGFraW0uc2UvZmxpcHNpZGUvKSAtIEEg
YnV0dG9uIHRoYXQgc2VhbWxlc3NseSB0cmFuc2l0aW9ucyBmcm9tIGFjdGlv
biB0byBjb25maXJtYXRpb24gd2l0aCBmbGlwcGluZyBhbmltYXRpb24KLSBb
TWVzc2VuZ2VyLmpzXShodHRwOi8vZ2l0aHViLmh1YnNwb3QuY29tL21lc3Nl
bmdlci8pIC0gQ2xpZW50LXNpZGUgZ3Jvd2wtbGlrZSBub3RpZmljYXRpb25z
IHdpdGggYWN0aW9ucyBhbmQgYXV0by1yZXRyeS4KLSBbbm91aXNsaWRlcl0o
aHR0cHM6Ly9yZWZyZXNobGVzcy5jb20vbm91aXNsaWRlci8pIC0gUmFuZ2Ug
c2xpZGVyCi0gW251ZGdlXShodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2Fn
ZS9tbGJ6LW51ZGdlKSAtIFByb3ZpZGVzIHNpbXBsZSBvbi1zY3JlZW4gbnVk
Z2VzIC8gbm90aWZpY2F0aW9ucwotIFtTbGlkZW91dC5qc10oaHR0cDovL21h
bmdvLmdpdGh1Yi5pby9zbGlkZW91dC8pIC0gQSB0b3VjaCBzbGlkZW91dCBu
YXZpZ2F0aW9uIG1lbnUgZm9yIG1vYmlsZSB3ZWIgYXBwcwotIFtTb3J0YWJs
ZS5qc10oaHR0cDovL3J1YmF4YS5naXRodWIuaW8vU29ydGFibGUvKSAtIFJl
b3JkZXJhYmxlIGRyYWctYW5kLWRyb3AgbGlzdHMKLSBbU3dlZXRBbGVydF0o
aHR0cHM6Ly90NHQ1LmdpdGh1Yi5pby9zd2VldGFsZXJ0LykgLSBBbiBhd2Vz
b21lIHJlcGxhY2VtZW50IGZvciBKYXZhU2NyaXB0J3MgYWxlcnQKLSBbVG9h
c3RyXShodHRwOi8vY29kZXNldmVuLmdpdGh1Yi5pby90b2FzdHIvKSAtIFNp
bXBsZSB0b2FzdCBub3RpZmljYXRpb25zCi0gW3ZleF0oaHR0cDovL2dpdGh1
Yi5odWJzcG90LmNvbS92ZXgvZG9jcy93ZWxjb21lLykgLSBBIG1vZGVybiBk
aWFsb2cgbGlicmFyeSB3aGljaCBpcyBoaWdobHkgY29uZmlndXJhYmxlIGFu
ZCBlYXN5IHRvIHN0eWxlCgoqKlsgYmFjayB0byB0b3BdKCN0YWJsZS1vZi1j
b250ZW50cykqKgoKIyMjIENvbnRlbnQgU2xpZGVyL0Nhcm91c2VscwotIFtH
bGlkZV0oaHR0cHM6Ly9nbGlkZWpzLmNvbS8pIC0gQSBkZXBlbmRlbmN5LWZy
ZWUgc2xpZGVyIGFuZCBjYXJvdXNlbAotIFtHbGlkZXIuanNdKGh0dHBzOi8v
Z2l0aHViLmNvbS9OaWNrUGlzY2l0ZWxsaS9HbGlkZXIuanMpIC0gQSBtaW5p
bWFsIGNhcm91c2VsIHdpdGggbW9tZW50dW0gc2Nyb2xsaW5nCi0gW2xvcnld
KGh0dHA6Ly9tZWFuZG1heC5naXRodWIuaW8vbG9yeS8pIC0gTWluaW1hbGlz
dGljIHNsaWRlciB3cml0dGVuIGluIHZhbmlsbGEgSmF2YVNjcmlwdAotIFtJ
dGVtU2xpZGUuanNdKGh0dHA6Ly9pdGVtc2xpZGUuZ2l0aHViLmlvLykgLSBU
b3VjaCBjYXJvdXNlbCAobmVlZHMganF1ZXJ5KQotIFtTaWVtYV0oaHR0cHM6
Ly9wYXdlbGdyenliZWsuY29tL3NpZW1hLykgLSBDYXJvdXNlbCB3aXRoIG5v
IGRlcGVuZGVuY2llcwotIFtzbGlja10oaHR0cDovL2tlbndoZWVsZXIuZ2l0
aHViLmlvL3NsaWNrLykgLSBGdWxseSByZXNwb25zaXZlIGNhcm91c2VsIChu
ZWVkcyB6ZXB0byBvciBqcXVlcnkpCi0gW3N3aXBlXShodHRwczovL2dpdGh1
Yi5jb20vbHlmZXlhai9zd2lwZSkgLSBUb3VjaCBzbGlkZXIgd2l0aCBSZWFj
dCBhbmQgQW5ndWxhciBzdXBwb3J0Ci0gW3N3aXBlcl0oaHR0cDovL3d3dy5p
ZGFuZ2Vyby51cy9zd2lwZXIvKSAtIFNsaWRlciB3aXRoIHRvdWNoIHN1cHBv
cnQKCioqWyBiYWNrIHRvIHRvcF0oI3RhYmxlLW9mLWNvbnRlbnRzKSoqCgoj
IyMgVHlwb2dyYXBoeS9UZXh0Ci0gW2JhY29uXShodHRwOi8vYmFjb25mb3Jt
ZS5jb20vKSAtIFdyYXBzIHRleHQgYXJvdW5kIGEgQsOpemllciBjdXJ2ZSBv
ciBhIGxpbmUKLSBbYmlnZm9vdC5qc10oaHR0cDovL3d3dy5iaWdmb290anMu
Y29tLykgLSBSZXNwb25zaXZlIHBvcG92ZXIgZm9vdG5vdGVzCi0gW0Jsb3R0
ZXJdKGh0dHBzOi8vYmxvdHRlci5qcy5vcmcvKSAtIFVuY29udmVudGlvbmFs
IHRleHQgZWZmZWN0cyBmb3IgdGhlIHdlYgotIFtkcm9wY2FwLmpzXShodHRw
czovL2dpdGh1Yi5jb20vYWRvYmUtd2VicGxhdGZvcm0vZHJvcGNhcC5qcykg
LSBDU1MgZHJvcGNhcHMKLSBbZml0dHldKGh0dHBzOi8vZ2l0aHViLmNvbS9y
aWtzY2hlbm5pbmsvZml0dHkpIC0gU2NhbGVzIHRleHQgc28gaXQgZml0cyB0
byBpdHMgcGFyZW50IGNvbnRhaW5lcgotIFtmbG93dHlwZV0oaHR0cDovL3Np
bXBsZWZvY3VzLmNvbS9mbG93dHlwZS8pIC0gUmVzcG9uc2l2ZSB0eXBvZ3Jh
cGh5Ci0gW2dyYW5kZS5qc10oaHR0cHM6Ly9naXRodWIuY29tL21kdXZhbGwv
Z3JhbmRlLmpzKSAtIExpYnJhcnkgdGhhdCBpbXBsZW1lbnRzIGZlYXR1cmVz
IGZyb20gTWVkaXVtJ3MgZWRpdGluZyBleHBlcmllbmNlCi0gW2xpbmluZy5q
c10oaHR0cHM6Ly9naXRodWIuY29tL3ptbWJyZWV6ZS9saW5pbmcuanMpIC0g
QSBjb21wbGV0ZSBET1dOLVRPLVRIRS1MSU5FIGNvbnRyb2wgZm9yIHJhZGlj
YWwgd2ViIHR5cG9ncmFwaHkKLSBbbGV0dGVyaW5nXShodHRwOi8vbGV0dGVy
aW5nanMuY29tLykgLSBKUXVlcnkgd2ViIHR5cG9ncmFwaHkgcGx1Z2luCi0g
W3Blbl0oaHR0cDovL3NvZmlzaC5naXRodWIuaW8vcGVuKSAtIEVkaXRvciB3
aXRoIG1hcmtkb3duIHN1cHBvcnQKLSBbUGx1bWluLmpzXShodHRwOi8vd3d3
LnBsdW1pbmpzLmNvbS8pIC0gQ3JlYXRlIGFuZCBtYW5pcHVsYXRlIGZvbnRz
IHVzaW5nIGphdmFzY3JpcHQKLSBbc2hhdmVdKGh0dHBzOi8vZG9sbGFyc2hh
dmVjbHViLmdpdGh1Yi5pby9zaGF2ZS8pIC0gUGx1Z2luIGZvciB0cnVuY2F0
aW5nIHRleHQgd2l0aGluIGFuIGh0bWwgZWxlbWVudAotIFtzaWRlLWNvbW1l
bnRzXShodHRwOi8vYXJvYy5naXRodWIuaW8vc2lkZS1jb21tZW50cy1kZW1v
LykgLSBNZWRpdW0gc3R5bGUgY29tbWVudHMKLSBbc2xhYlRleHRdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9mcmVxZGVjL3NsYWJUZXh0KSAtIGpRdWVyeSBwbHVn
aW4gZm9yIHByb2R1Y2luZyBiaWcsIGJvbGQgJiByZXNwb25zaXZlIGhlYWRs
aW5lcwotIFtzbWFydCB1bmRlcmxpbmVdKGh0dHBzOi8vZWFnZXIuaW8vc2hv
d2Nhc2UvU21hcnRVbmRlcmxpbmUvKSAtIERlc2NlbmRlci1hd2FyZSB1bmRl
cmxpbmVzIGZvciBldmVyeSBicm93c2VyCi0gW3R5cGVhaGVhZC5qc10oaHR0
cDovL3R3aXR0ZXIuZ2l0aHViLmNvbS90eXBlYWhlYWQuanMpIC0gRm91bmRh
dGlvbiBmb3IgYnVpbGRpbmcgcm9idXN0IHR5cGVhaGVhZHMKLSBbVHlwZXBs
YXRlXShodHRwOi8vdHlwZXBsYXRlLmNvbS8pIC0gQSB0eXBvZ3JhcGhpYyBz
dGFydGVyIGtpdAotIFtUeXBlc2V0LmpzXShodHRwczovL2dpdGh1Yi5jb20v
ZGF2aWRtZXJmaWVsZC90eXBlc2V0KSAtIEhUTUwgcHJlLXByb2Nlc3NvciBm
b3Igd2ViIHR5cG9ncmFwaHkKCioqWyBiYWNrIHRvIHRvcF0oI3RhYmxlLW9m
LWNvbnRlbnRzKSoqCgojIyMgVmlkZW8KLSBbRml0dmlkXShodHRwOi8vZml0
dmlkc2pzLmNvbS8pIC0gUmVzcG9uc2l2ZSB2aWRlb3MKLSBbbWVkaWFsZW1l
bnRqc10oaHR0cDovL21lZGlhZWxlbWVudGpzLmNvbS8pIC0gVmlkZW8gYW5k
IGF1ZGlvIGhhbmRsaW5nCi0gW1BseXJdKGh0dHA6Ly9wbHlyLmlvLykgLSBB
IHNpbXBsZSBIVE1MNSBtZWRpYSBwbGF5ZXIgd2l0aCBjdXN0b20gY29udHJv
bHMgYW5kIFdlYlZUVCBjYXB0aW9ucwotIFt0YWxraWVdKGh0dHBzOi8vZ2l0
aHViLmNvbS9raWxuL3RhbGtpZSkgLSBDb21iaW5lcyBhdWRpbyBhbmQgYW5p
bWF0aW9ucwotIFtWaWRlb2pzXShodHRwOi8vd3d3LnZpZGVvanMuY29tLykg
LSBPcGVuIHNvdXJjZSBIVE1MNSB2aWRlbyBwbGF5ZXIKCioqWyBiYWNrIHRv
IHRvcF0oI3RhYmxlLW9mLWNvbnRlbnRzKSoqCgojIyMgQXVkaW8KLSBbYWJj
anNdKGh0dHBzOi8vZ2l0aHViLmNvbS9wYXVscm9zZW4vYWJjanMpIC0gamF2
YXNjcmlwdCBmb3IgcmVuZGVyaW5nIGFiYyBtdXNpYyBub3RhdGlvbgotIFth
dWRpbzVqc10oaHR0cHM6Ly9naXRodWIuY29tL3pvaGFyYXJhZC9hdWRpbzVq
cykgLSBUaGUgSFRNTDUgQXVkaW8gQ29tcGF0aWJpbGl0eSBMYXllcgotIFti
YXBdKGh0dHBzOi8vZ2l0aHViLmNvbS9hZGFtcmVua2xpbnQvYmFwKSAtIFRv
b2xraXQgZm9yIG1ha2luZyBiZWF0cyBhbmQgY29tcG9zaW5nIHNlcXVlbmNl
cwotIFtibGlwXShodHRwOi8vanNoYW5sZXkuZ2l0aHViLmlvL2JsaXAvKSAt
IFdlYiBBdWRpbyBBUEkgd3JhcHBlcgotIFtob3dsZXJdKGh0dHA6Ly9ob3ds
ZXJqcy5jb20vKSAtIEF1ZGlvIGxpYnJhcnkKLSBbU291bmRDaXRlXShodHRw
Oi8vc291bmRjaXRlLmtuaWdodGxhYi5jb20vKSAtIElubGluZSBhdWRpbyBw
bGF5ZXIKLSBbc291bmRqc10oaHR0cDovL2NyZWF0ZWpzLmNvbS9Tb3VuZEpT
KSAtIEF1ZGlvIGxpYnJhcnkgKyBzaW1wbGUgaW50ZXJmYWNlCi0gW3RpbWJy
ZS5qc10oaHR0cDovL21vaGF5b25hby5naXRodWIuaW8vdGltYnJlLmpzLykg
LSBMaWJyYXJ5IGZvciBPYmplY3RpdmUgU291bmQgUHJvZ3JhbW1pbmcKLSBb
dG9uZS5qc10oaHR0cHM6Ly9naXRodWIuY29tL1RvbmVqcy9Ub25lLmpzKSAt
IEZyYW1ld29yayBmb3IgaW50ZXJhY3RpdmUgbXVzaWMKLSBbdG9uYWxdKGh0
dHBzOi8vZ2l0aHViLmNvbS9kYW5pZ2IvdG9uYWwpIC0gQSBmdW5jdGlvbmFs
IG11c2ljIHRoZW9yeSBsaWJyYXJ5Ci0gW3ZleGZsb3ddKGh0dHA6Ly93d3cu
dmV4Zmxvdy5jb20vKSAtIExpYnJhcnkgZm9yIHJlbmRlcmluZyBtdXNpYyBu
b3RhdGlvbgotIFt3YXZlc3VyZmVyLmpzXShodHRwczovL2dpdGh1Yi5jb20v
a2F0c3BhdWdoL3dhdmVzdXJmZXIuanMpIC0gTmF2aWdhYmxlIHdhdmVmb3Jt
CgoqKlsgYmFjayB0byB0b3BdKCN0YWJsZS1vZi1jb250ZW50cykqKgoKIyMj
IENhbnZhcyBhbmQgU1ZHCi0gW2NhbnZhcy1za2V0Y2hdKGh0dHBzOi8vZ2l0
aHViLmNvbS9tYXR0ZGVzbC9jYW52YXMtc2tldGNoKSAtIEZyYW1ld29yayBm
b3IgbWFraW5nIGdlbmVyYXRpdmUgYXJ0d29yawotIFtEM10oaHR0cDovL2Qz
anMub3JnLykgLSBBIEphdmFTY3JpcHQgdmlzdWFsaXphdGlvbiBsaWJyYXJ5
IGZvciBIVE1MIGFuZCBTVkcKLSBbRWFzZWxqc10oaHR0cDovL3d3dy5jcmVh
dGVqcy5jb20vZWFzZWxqcykgLSBMaWJyYXJ5IGZvciBidWlsZGluZyBjYW52
YXMgYmFzZWQgaW50ZXJhY3RpdmUgMkQgY29udGVudAotIFtGYWJyaWMuanNd
KGh0dHA6Ly9mYWJyaWNqcy5jb20vKSAtIENhbnZhcyBMaWJyYXJ5LCBTVkct
dG8tQ2FudmFzICgmIENhbnZhcy10by1TVkcpIFBhcnNlcgotIFtHcmFwaGlj
c0pTXShodHRwOi8vd3d3LmdyYXBoaWNzanMub3JnLykgLSBHcmFwaGljcyBs
aWJyYXJ5IHdpdGggYW4gaW50dWl0aXZlIEFQSSwgYmFzZWQgb24gU1ZHL1ZN
TCB0ZWNobm9sb2d5Ci0gW0tvbnZhXShodHRwOi8va29udmFqcy5naXRodWIu
aW8vKSAtIEZyYW1ld29yayB0aGF0IGV4dGVuZHMgdGhlIDJkIGNvbnRleHQg
YnkgZW5hYmxpbmcgY2FudmFzIGludGVyYWN0aXZpdHkKLSBbcGFuem9vbV0o
aHR0cHM6Ly9naXRodWIuY29tL2FudmFrYS9wYW56b29tKSAtIFBhbiBhbmQg
em9vbSBTVkcgZWxlbWVudHMKLSBbUGFwZXIuanNdKGh0dHA6Ly9wYXBlcmpz
Lm9yZy8pIC0gQ2FudmFzIGJhc2VkIHZlY3RvciBncmFwaGljcyBzY3JpcHRp
bmcgZnJhbWV3b3JrCi0gW1BhdGhzLmpzXShodHRwczovL2dpdGh1Yi5jb20v
YW5kcmVhZmVycmV0dGkvcGF0aHMtanMpIC0gR2VuZXJhdGUgU1ZHIHBhdGhz
IGZvciBnZW9tZXRyaWMgc2hhcGVzCi0gW3BpeGkuanNdKGh0dHA6Ly93d3cu
cGl4aWpzLmNvbS8pIC0gMkQgV2ViR0wgcmVuZGVyaW5nIGVuZ2luZSB3aXRo
IENhbnZhcyBmYWxsYmFjawotIFtwNWpzXShodHRwOi8vcDVqcy5vcmcvKSAt
IFByb2Nlc3NpbmcgZm9yIEphdmFzY3JpcHQKLSBbUmFwaGFlbF0oaHR0cDov
L3JhcGhhZWxqcy5jb20vKSAtIExpYnJhcnkgdGhhdCBzaW1wbGlmeSB5b3Vy
IHdvcmsgd2l0aCB2ZWN0b3IgZ3JhcGhpY3Mgb24gdGhlIHdlYgotIFtSb3Vn
aC5qc10oaHR0cHM6Ly9yb3VnaGpzLmNvbS8pIC0gQ3JlYXRlIGdyYXBoaWNz
IHdpdGggYSBoYW5kLWRyYXduLCBza2V0Y2h5LCBhcHBlYXJhbmNlCi0gW3J1
bmUuanNdKGh0dHA6Ly9ydW5lbWFkc2VuLmdpdGh1Yi5pby9ydW5lLmpzL2lu
ZGV4Lmh0bWwpIC0gQSBMaWJyYXJ5IGZvciBwcm9ncmFtbWluZyBncmFwaGlj
IGRlc2lnbiBzeXN0ZW1zIHdpdGggU1ZHCi0gW3N2Zy5qc10oaHR0cHM6Ly9n
aXRodWIuY29tL3dvdXQvc3ZnLmpzKSAtIEEgTGlicmFyeSBmb3IgbWFuaXB1
bGF0aW5nIGFuZCBhbmltYXRpbmcgU1ZHCi0gW3N2Zy0zZC1idWlsZGVyXSho
dHRwczovL2dpdGh1Yi5jb20vY2FwdGFpbnd6L3N2Zy0zZC1idWlsZGVyKSAt
IFRvb2wgdG8gY3JlYXRlIDNkIG1vZGVsIHdpdGggc3ZnIAotIFt0d28uanNd
KGh0dHBzOi8vam9ub2JyMS5naXRodWIuaW8vdHdvLmpzLykgLSAgQSB0d28t
ZGltZW5zaW9uYWwgZHJhd2luZyBhcGkKLSBbdml6Zmxvd10oaHR0cHM6Ly9n
aXRodWIuY29tL3ZpemZsb3cvdml6ZmxvdykgLSBJbnRlcmFjdGl2ZSB2aXN1
YWxpemF0aW9uIGVuZ2luZQotIFtaZG9nXShodHRwczovL2dpdGh1Yi5jb20v
bWV0YWZpenp5L3pkb2cpIC0gUHNldWRvLTNEIGVuZ2luZSBmb3IgY2FudmFz
ICYgU1ZHCgoqKlsgYmFjayB0byB0b3BdKCN0YWJsZS1vZi1jb250ZW50cykq
KgoKIyMjIDNEL1dlYkdMIEZyYW1ld29ya3MKLSBbYmFieWxvbkpTXShodHRw
Oi8vYmFieWxvbmpzLmNvbS8pIC0gRnJhbWV3b3JrIGZvciBidWlsZGluZyAz
RCBnYW1lcyB3aXRoIEhUTUw1LCBXZWJHTCBhbmQgV2ViIEF1ZGlvCi0gW3Nj
ZW5lSlNdKGh0dHA6Ly9zY2VuZWpzLm9yZy8pIC0gV2ViR0wtYmFzZWQgM0Qg
dmlzdWFsaXphdGlvbiBlbmdpbmUKLSBbdGhyZWUuanNdKGh0dHBzOi8vdGhy
ZWVqcy5vcmcvKS0gM0QgTGlicmFyeSB3aGljaCBtYWtlcyBXZWJHTCBzaW1w
bGVyCi0gW3ZveGVsLmpzXShodHRwOi8vdm94ZWxqcy5jb20vKSAtIFZveGVs
IGdhbWUgYnVpbGRpbmcgdG9vbGtpdAotIFtXaGl0ZXN0b3JtSlNdKGh0dHBz
Oi8vd2hzanMuaW8vIy8pIC0gRnJhbWV3b3JrIGZvciBkZXZlbG9waW5nIDNE
IHdlYiBhcHBzIHdpdGggcGh5c2ljcwoKKipbIGJhY2sgdG8gdG9wXSgjdGFi
bGUtb2YtY29udGVudHMpKioKCiMjIyBJbWFnZSBQcm9jZXNzaW5nCi0gW2Nh
bWFuanNdKGh0dHA6Ly9jYW1hbmpzLmNvbS8pIC0gQ29tYmluYXRpb24gb2Yg
YSBzaW1wbGUtdG8tdXNlIGludGVyZmFjZSB3aXRoIGFkdmFuY2VkIGFuZCBp
bWFnZS9jYW52YXMgZWRpdGluZyB0ZWNobmlxdWVzCi0gW2dyYWZpanNdKGh0
dHA6Ly9ncmFmaWpzLm9yZy8pIC0gTGlicmFyeSB3aXRoIGJhc2ljIGltYWdl
IHByb2Nlc3NpbmcgZnVuY3Rpb25zCi0gW3NtYXJ0Y3JvcF0oaHR0cHM6Ly9n
aXRodWIuY29tL2p3YWduZXIvc21hcnRjcm9wLmpzLykgLSBDb250ZW50IGF3
YXJlIGltYWdlIGNyb3BwaW5nCgoqKlsgYmFjayB0byB0b3BdKCN0YWJsZS1v
Zi1jb250ZW50cykqKgoKIyMjIFNjcm9sbGluZwotIFtiYXNpY1Njcm9sbF0o
aHR0cHM6Ly9iYXNpY3Njcm9sbC5lbGVjdGVyaW91cy5jb20vKSAtIFN0YW5k
YWxvbmUgcGFyYWxsYXggc2Nyb2xsaW5nIGZvciBtb2JpbGUgYW5kIGRlc2t0
b3Agd2l0aCBDU1MgdmFyaWFibGVzCi0gW2VtZXJnZW5jZS5qc10oaHR0cHM6
Ly9naXRodWIuY29tL3h0aWFubWlsbGVyL2VtZXJnZW5jZS5qcykgLSBEZXRl
Y3QgZWxlbWVudCB2aXNpYmlsaXR5IGluIHRoZSBicm93c2VyCi0gW2hlYWRy
b29tXShodHRwOi8vd2lja3kubmlsbGlhLm1zL2hlYWRyb29tLmpzLykgLSBI
aWRlIHlvdXIgaGVhZGVyIHVudGlsIHlvdSBuZWVkIGl0Ci0gW2luLXZpZXdd
KGh0dHBzOi8vY2Ftd2llZ2VydC5naXRodWIuaW8vaW4tdmlldykgLSBHZXQg
bm90aWZpZWQgd2hlbiBhIGVsZW1lbnQgZW50ZXJzL2V4aXRzIHRoZSB2aWV3
cG9ydAotIFttb3ZlVG9dKGh0dHBzOi8vZ2l0aHViLmNvbS9oc25heWRkL21v
dmVUbykgLSBTY3JvbGwgYW5pbWF0aW9uIGxpYnJhcnkKLSBbc2Nyb2xsLXNj
b3BlLmpzXShodHRwOi8vZWlza2lzLm5ldC9zY3JvbGwtc2NvcGUvKSAtIEtl
ZXAgcGFyZW50IGVsZW1lbnQgc3RpbGwgd2hlbiBzY3JvbGxpbmcgYW4gZWxl
bWVudCB0byBpdHMgYm91bmRhcnkKLSBbU2Nyb2xsTWFnaWNdKGh0dHA6Ly9q
YW5wYWVwa2UuZ2l0aHViLmlvL1Njcm9sbE1hZ2ljLykgLSBMaWJyYXJ5IGZv
ciBzY3JvbGwgaW50ZXJhY3Rpb25zCi0gW3Njcm9sbE1vbml0b3JdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9zdHV0cmVrL3Njcm9sbE1vbml0b3IpIC0gQVBJIHRv
IG1vbml0b3IgZWxlbWVudHMgYXMgeW91IHNjcm9sbAotIFtzY3JvbGxyZXZl
YWxdKGh0dHBzOi8vc2Nyb2xscmV2ZWFsanMub3JnLykgLSBTY3JvbGwgYW5p
bWF0aW9ucyBmb3Igd2ViIGFuZCBtb2JpbGUgYnJvd3NlcnMKLSBbdmVyZ2Vd
KGh0dHBzOi8vZ2l0aHViLmNvbS9yeWFudmUvdmVyZ2UpIC0gR2V0IHZpZXdw
b3J0IGRpbWVuc2lvbnMsIGRldGVjdCBlbGVtZW50cyBpbiB0aGUgdmlld3Bv
cnQKCioqWyBiYWNrIHRvIHRvcF0oI3RhYmxlLW9mLWNvbnRlbnRzKSoqCgoj
IyMgVG91Y2ggR2VzdHVyZXMKLSBbQWxsb3lGaW5nZXJdKGh0dHBzOi8vZ2l0
aHViLmNvbS9BbGxveVRlYW0vQWxsb3lGaW5nZXIpIC0gTXVsdGktdG91Y2gg
Z2VzdHVyZXMgbGlicmFyeQotIFtIYW1tZXIuanNdKGh0dHA6Ly9oYW1tZXJq
cy5naXRodWIuaW8vKSAtIEFkZCBzdXBwb3J0IGZvciB0b3VjaCBnZXN0dXJl
cyBhbmQgcmVtb3ZlIDMwMG1zIGRlbGF5IGZyb20gY2xpY2tzCgoqKlsgYmFj
ayB0byB0b3BdKCN0YWJsZS1vZi1jb250ZW50cykqKgoKIyMjIEFuaW1hdGlv
bnMKLSBbYW5pbWF0ZS5jc3NdKGh0dHBzOi8vZGFuZWRlbi5naXRodWIuaW8v
YW5pbWF0ZS5jc3MvKSAtIEEgY3Jvc3MtYnJvd3NlciBsaWJyYXJ5IG9mIENT
UyBhbmltYXRpb25zCi0gW0FuaW1hdGUgUGx1c10oaHR0cHM6Ly9naXRodWIu
Y29tL2JlbmRjL2FuaW1hdGVwbHVzKSAtIFRpbnkgKDIgS0IgbWluaWZpZWQg
YW5kIGd6aXBwZWQpIGFuaW1hdGlvbiBsaWJyYXJ5Ci0gW0FuaW1lXShodHRw
Oi8vYW5pbWUtanMuY29tLykgLSBBbmltZSBpcyBhIGZsZXhpYmxlIHlldCBs
aWdodHdlaWdodCBhbmltYXRpb24gbGlicmFyeQotIFtib3VuY2UuanNdKGh0
dHA6Ly9ib3VuY2Vqcy5jb20vKSAtIENTUzMgcG93ZXJlZCBhbmltYXRpb25z
Ci0gW2Nob3Jlb2dyYXBoZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9jaHJpc3Rp
bmVjaGEvY2hvcmVvZ3JhcGhlci1qcykgLSBMaWJyYXJ5IHRvIHRha2UgY2Fy
ZSBvZiBjb21wbGljYXRlZCBjc3MgYW5pbWF0aW9ucwotIFtEeW5hbWljcy5q
c10oaHR0cDovL2R5bmFtaWNzanMuY29tLykgLSBMaWJyYXJ5IHRvIGNyZWF0
ZSBwaHlzaWNzLWJhc2VkIENTUyBhbmltYXRpb25zCi0gW0dTQVBdKGh0dHBz
Oi8vZ3JlZW5zb2NrLmNvbS9nc2FwKSAtIEZhc3QgYW5pbWF0aW9uIGxpYnJh
cnkKLSBbSG92ZXIuY3NzXShodHRwOi8vaWFubHVubi5naXRodWIuaW8vSG92
ZXIvKSAtIENTUzMgSG92ZXIgRWZmZWN0cwotIFtpbXB1bHNlXShodHRwOi8v
aW1wdWxzZS5sdXN0ZXIuaW8vKSAtIER5bmFtaWMgcGh5c2ljcyBpbnRlcmFj
dGlvbnMgZm9yIHRoZSBtb2JpbGUgd2ViCi0gW0tVVEUuanNdKGh0dHA6Ly90
aGVkbnAuZ2l0aHViLmlvL2t1dGUuanMvIykgLSBhbmltYXRpb24gZW5naW5l
LCBtZW1vcnkgZWZmaWNpZW50ICYgbW9kdWxhciBjb2RlCi0gW21vanNdKGh0
dHA6Ly9tb2pzLmlvLykgLSBNb3Rpb24gZm9yIHRoZSB3ZWIKLSBbcG9wbW90
aW9uXShodHRwOi8vcG9wbW90aW9uLmlvLykgLSBNb3Rpb24gRW5naW5lLiBV
c2UgZm9yIGFuaW1hdGlvbiwgcGh5c2ljcyBhbmQgaW5wdXQgdHJhY2tpbmcu
Ci0gW3JlYm91bmRdKGh0dHA6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVib3Vu
ZC1qcy9leGFtcGxlcy8pIC0gTGlicmFyeSB0aGF0IG1vZGVscyBTcHJpbmcg
ZHluYW1pY3MgZm9yIGRyaXZpbmcgcGh5c2ljYWwgYW5pbWF0aW9ucwotIFty
ZXBhaW50bGVzc10oaHR0cDovL3N6eW5zenlsaXN6eXMuZ2l0aHViLmlvL3Jl
cGFpbnRsZXNzLykgIC0gQW5pbWF0aW9uIGxpYnJhcnkgdGhhdCBjb25zaXN0
cyBvZiBhbmltYXRpb25zIHRoYXQgZG9uJ3QgY2F1c2UgcmVmbG93cyBhbmQg
cmVwYWludHMKLSBbU2NlbmUuanNdKGh0dHA6Ly9kYXlicnVzaC5jb20vc2Nl
bmVqcy8pIC0gVGltZWxpbmUtYmFzZWQgYW5pbWF0aW9uIGxpYnJhcnkKLSBb
c2VtYW50aWMgdWkgLSB0cmFuc2l0aW9uXShodHRwOi8vc2VtYW50aWMtdWku
Y29tL21vZHVsZXMvdHJhbnNpdGlvbi5odG1sKSAtIFNpbXBsZSBDU1MzIEFu
aW1hdGlvbnMgYW5kIHRyYW5zaXRpb25zCi0gW1NlcXVlbmNlLmpzXShodHRw
czovL2dpdGh1Yi5jb20vSWFuTHVubi9TZXF1ZW5jZS8pIC0gUmVzcG9uc2l2
ZSBDU1MgYW5pbWF0aW9uIGZyYW1ld29yawotIFtzaGlmdHldKGh0dHBzOi8v
amVyZW15Y2thaG4uZ2l0aHViLmlvL3NoaWZ0eS8pIC0gVHdlZW5pbmcgZW5n
aW5lCi0gW3NuYWJidF0oaHR0cHM6Ly9kYW5pZWwtbHVuZGluLmdpdGh1Yi5p
by9zbmFiYnQuanMvKSAtIEFuaW1hdGlvbnMgd2l0aCBKYXZhU2NyaXB0IGFu
ZCBDU1MgdHJhbnNmb3JtcwotIFtzbmFwc3ZnXShodHRwOi8vc25hcHN2Zy5p
by8pIC0gTGlicmFyeSBmb3IgYW5pbWF0aW5nIGFuZCBtYW5pcHVsYXRpbmcg
U1ZHJ3MKLSBbdHdlZW4uanNdKGh0dHBzOi8vZ2l0aHViLmNvbS90d2Vlbmpz
L3R3ZWVuLmpzKSAtIFR3ZWVuaW5nIGVuZ2luZQotIFt2ZWxvY2l0eV0oaHR0
cDovL3ZlbG9jaXR5anMub3JnLykgLSBBY2NlbGVyYXRlZCBKYXZhU2NyaXB0
IGFuaW1hdGlvbnMKLSBbdml2dXNdKGh0dHBzOi8vbWF4d2VsbGl0by5naXRo
dWIuaW8vdml2dXMvKSAtIFZpdnVzIGlzIGEgbGlnaHR3ZWlnaHQgSmF2YVNj
cmlwdCBjbGFzcyAod2l0aCBubyBkZXBlbmRlbmNpZXMpIHRoYXQgYWxsb3dz
IHlvdSB0byBhbmltYXRlIFNWR3MsIGdpdmluZyB0aGVtIHRoZSBhcHBlYXJl
bmNlIG9mIGJlaW5nIGRyYXduCgoqKlsgYmFjayB0byB0b3BdKCN0YWJsZS1v
Zi1jb250ZW50cykqKgoKIyMjIFRlbXBsYXRpbmcKLSBbZG90anNdKGh0dHBz
Oi8vb2xhZG8uZ2l0aHViLmlvL2RvVC8pIC0gRmFzdCB0ZW1wbGF0aW5nIGVu
Z2luZQotIFtIYW5kbGViYXJzXShodHRwOi8vaGFuZGxlYmFyc2pzLmNvbS8p
IC0gTWluaW1hbCBUZW1wbGF0aW5nIG9uIFN0ZXJvaWRzCi0gW0hvZ2FuXSho
dHRwOi8vdHdpdHRlci5naXRodWIuaW8vaG9nYW4uanMvKSAtIEphdmFTY3Jp
cHQgdGVtcGxhdGluZwotIFttYXJrb10oaHR0cDovL21hcmtvanMuY29tLykg
LSBGYXN0IGFuZCBsaWdodHdlaWdodCBIVE1MLWJhc2VkIHRlbXBsYXRpbmcg
ZW5naW5lIHRoYXQgY29tcGlsZXMgdGVtcGxhdGVzIHRvIENvbW1vbkpTIG1v
ZHVsZXMgYW5kIHN1cHBvcnRzIHN0cmVhbWluZywgYXN5bmMgcmVuZGVyaW5n
LCBjdXN0b20gdGFncyBhbmQgYSBjb25jaXNlIHN5bnRheAotIFttdXN0YWNo
ZV0oaHR0cHM6Ly9naXRodWIuY29tL2phbmwvbXVzdGFjaGUuanMpIC0gTWlu
aW1hbCB0ZW1wbGF0aW5nIHdpdGgge3ttdXN0YWNoZXN9fSBpbiBKYXZhU2Ny
aXB0Ci0gW251bmp1Y2tzXShodHRwOi8vbW96aWxsYS5naXRodWIuaW8vbnVu
anVja3MvKSAtIEEgcmljaCBhbmQgcG93ZXJmdWwgdGVtcGxhdGluZyBsYW5n
dWFnZQotIFtwYXBlcmNsaXAuanNdKGh0dHA6Ly9wYXBlcmNsaXBqcy5jb20v
KSAtIFJlYWN0aXZlIERPTSB0ZW1wbGF0ZSBlbmdpbmUgYnVpbHQgZm9yIHNw
ZWVkIGFuZCBleHRlbnNpYmlsaXR5Ci0gW3Zkb10oaHR0cHM6Ly9naXRodWIu
Y29tL0R5bGFuUGllcmNleS92ZG8pIC0gTWluaW1hbCBKU1ggY29tcGF0aWJs
ZSBodG1sIGZvY3VzZWQgdGVtcGxhdGluZyBlbmdpbmUKCioqWyBiYWNrIHRv
IHRvcF0oI3RhYmxlLW9mLWNvbnRlbnRzKSoqCgojIyMgSFRUUCBSZXF1ZXN0
cwotIFthamFdKGh0dHA6Ly9rcmFtcHN0dWRpby5naXRodWIuaW8vYWphLmpz
LykgLSBBc3luY2hyb25vdXMgSmF2YVNjcmlwdCBhbmQgSlNPTihQKQotIFth
eGlvc10oaHR0cHM6Ly9naXRodWIuY29tL216YWJyaXNraWUvYXhpb3MpIC0g
UHJvbWlzZSBiYXNlZCBIVFRQIGNsaWVudAotIFtkMy1yZXF1ZXN0XShodHRw
czovL2dpdGh1Yi5jb20vZDMvZDMtcmVxdWVzdCkgLSBBIGNvbnZlbmllbnQg
YWx0ZXJuYXRpdmUgdG8gWE1MSHR0cFJlcXVlc3QKLSBbZmV0Y2hdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9naXRodWIvZmV0Y2gpIC0gQSBgd2luZG93LmZldGNo
YCBqYXZhc2NyaXB0IHBvbHlmaWxsCi0gW2ludGVyY29vbGVyLWpzXShodHRw
Oi8vaW50ZXJjb29sZXJqcy5vcmcvKSAtIE1ha2luZyBBSkFYIGFzIGVhc3kg
YXMgYW5jaG9yIHRhZ3MKLSBbcXdlc3RdKGh0dHBzOi8vZ2l0aHViLmNvbS9w
eXJzbWsvcXdlc3QpIC0gQWpheCBsaWJyYXJ5IHdpdGggWEhSMiwgcHJvbWlz
ZXMgYW5kIHJlcXVlc3QgbGltaXQKLSBbcmVxd2VzdF0oaHR0cHM6Ly9naXRo
dWIuY29tL2RlZC9yZXF3ZXN0KSAtIEJyb3dzZXIgYXN5bmNocm9ub3VzIEhU
VFAgcmVxdWVzdHMKLSBbc3VwZXJhZ2VudF0oaHR0cHM6Ly92aXNpb25tZWRp
YS5naXRodWIuaW8vc3VwZXJhZ2VudC8pIC0gQ2xpZW50LXNpZGUgSFRUUCBy
ZXF1ZXN0IGxpYnJhcnkKCioqWyBiYWNrIHRvIHRvcF0oI3RhYmxlLW9mLWNv
bnRlbnRzKSoqCgojIyMgRXZlbnRzCi0gW2JlYW5dKGh0dHBzOi8vZ2l0aHVi
LmNvbS9mYXQvYmVhbikgLSBFdmVudHMgYXBpCi0gW2dhdG9yLmpzXShodHRw
Oi8vY3JhaWcuaXMvcmlkaW5nL2dhdG9ycykgLSBTaW1wbGUgZXZlbnQgZGVs
ZWdhdGlvbgotIFtFdmVudEVtaXR0ZXIyXShodHRwczovL2dpdGh1Yi5jb20v
YXN5bmNseS9FdmVudEVtaXR0ZXIyKSAtIEV2ZW50cyBBUEkgd2l0aCB3aWxk
Y2FyZHMKLSBbbWl0dF0oaHR0cHM6Ly9naXRodWIuY29tL2RldmVsb3BpdC9t
aXR0KSAtIFRpbnkgZnVuY3Rpb25hbCBldmVudCBlbWl0dGVyIC8gcHVic3Vi
CgoqKlsgYmFjayB0byB0b3BdKCN0YWJsZS1vZi1jb250ZW50cykqKgoKIyMj
IEljb25zCi0gW2VsZWdhbnRdKGh0dHA6Ly93d3cuZWxlZ2FudHRoZW1lcy5j
b20vYmxvZy9yZXNvdXJjZXMvZWxlZ2FudC1pY29uLWZvbnQpIC0gRWxlZ2Fu
dCBJY29uIGZvbnQKLSBbZXZhLWljb25zXShodHRwczovL2dpdGh1Yi5jb20v
YWt2ZW8vZXZhLWljb25zKSAtIEljb24gcGFjayB3aXRoIFNWRywgU2tldGNo
LCBXZWIgRm9udCBhbmQgYW5pbWF0aW9uIHN1cHBvcnQKLSBbZXZpbCBpY29u
c10oaHR0cDovL2V2aWwtaWNvbnMuaW8vKSAtIExpZ2h0d2VpZ2h0IFNWRyBp
Y29ucwotIFtGZWF0aGVyXShodHRwczovL2ZlYXRoZXJpY29ucy5jb20vKSAt
IFNpbXBseSBiZWF1dGlmdWwgb3BlbiBzb3VyY2UgaWNvbnMKLSBbZmxhdGlj
b25dKGh0dHA6Ly9mbGF0aWNvbi5jb20vKSAtIFRlbnMgb2YgdGhvdXNhbmRz
IG9mIGZyZWUgbW9ub2Nocm9tYXRpYyBpY29ucyBpbiBTVkcsIGZvbnQsIFBO
Ry4KLSBbZm9udGF3ZXNvbWVdKGh0dHA6Ly9mb3J0YXdlc29tZS5naXRodWIu
aW8vRm9udC1Bd2Vzb21lLykgLSBHaXZlcyB5b3Ugc2NhbGFibGUgdmVjdG9y
IGljb25zIHRoYXQgY2FuIGluc3RhbnRseSBiZSBjdXN0b21pemVkCi0gW2Zv
bnRlbGxvXShodHRwOi8vZm9udGVsbG8uY29tLykgLSBJY29uIGZvbnRzIGdl
bmVyYXRvcgotIFtmb3VuZGF0aW9uIGljb24gZm9udCAzXShodHRwOi8venVy
Yi5jb20vcGxheWdyb3VuZC9mb3VuZGF0aW9uLWljb24tZm9udHMtMykgLSBG
b3VuZGF0aW9uIFp1cmIgSWNvbiBGb250IDMKLSBbSWNvbW9vbl0oaHR0cHM6
Ly9pY29tb29uLmlvLykgLSBXZWJzaXRlIHRvIGN1c3RvbSBidWlsZCBpY29u
IGZvbnRzCi0gW2lrb25hdGVdKGh0dHBzOi8vaWtvbmF0ZS5jb20vKSAtIEZ1
bGx5IGN1c3RvbWlzYWJsZSAmIGFjY2Vzc2libGUgdmVjdG9yIGljb25zCi0g
W2lvbmljb25zXShodHRwOi8vaW9uaWNvbnMuY29tLykgLSBUaGUgaWNvbiBm
b250IGZvciBJb25pYyBGcmFtZXdvcmsKLSBbbWF0ZXJpYWwtZGVzaWduLWlj
b25zXShodHRwczovL2dpdGh1Yi5jb20vZ29vZ2xlL21hdGVyaWFsLWRlc2ln
bi1pY29ucykgLSBNYXRlcmlhbCBEZXNpZ24gaWNvbnMgYnkgR29vZ2xlCi0g
W29jdGljb25zXShodHRwczovL29jdGljb25zLmdpdGh1Yi5jb20vKSAtIEdp
dGh1YiBpY29ucwotIFt0aGUgbm91bnByb2plY3RdKGh0dHA6Ly90aGVub3Vu
cHJvamVjdC5jb20vKSAtIEljb24gc2VhcmNoCi0gW3dlbG92ZWljb25mb250
c10oaHR0cDovL3dlbG92ZWljb25mb250cy5jb20vKSAtIEEgZnJlZSAmIG9w
ZW4gc291cmNlIGljb24gZm9udHMgaG9zdGluZyBzZXJ2aWNlCgoqKlsgYmFj
ayB0byB0b3BdKCN0YWJsZS1vZi1jb250ZW50cykqKgoKIyMjIENvbG9ycwot
IFtib290ZmxhdCBjb2xvciBwaWNrZXJdKGh0dHA6Ly9ib290ZmxhdC5naXRo
dWIuaW8vY29sb3ItcGlja2VyLmh0bWwpIC0gQ29sb3IgcGlja2VyIGZvciBm
bGF0IGRlc2lnbgotIFtCcmFuZCBDb2xvcnNdKGh0dHA6Ly9icmFuZGNvbG9y
cy5uZXQpIC0gT2ZmaWNpYWwgY29sb3IgY29kZXMgZm9yIHRoZSB3b3JsZCdz
IGJpZ2dlc3QgYnJhbmRzCi0gW2Nocm9tYWpzXShodHRwOi8vb2xkLmRyaXZl
bi1ieS1kYXRhLm5ldC9hYm91dC9jaHJvbWFqcy8pIC0gTGlicmFyeSBmb3Ig
YWxsIGtpbmRzIG9mIGNvbG9yIG1hbmlwdWxhdGlvbnMKLSBbY2hyb21hanMg
Y29sb3Igc2NhbGUgaGVscGVyXShodHRwOi8vZ2thLmdpdGh1Yi5pby9wYWxl
dHRlcykgLSBUb29sIHRvIGhlbHAgdXMgbWFzdGVyaW5nIG11bHRpLWh1ZWQs
IG11bHRpLXN0b3BzIGNvbG9yIHNjYWxlcwotIFtjb29sb3JzXShodHRwOi8v
Y29vbG9ycy5jby8pIC0gU3VwZXIgZmFzdCBjb2xvciBzY2hlbWUgZ2VuZXJh
dG9yCi0gW2NvbG9yXShodHRwOi8vY29sb3IuaGFpbHBpeGVsLmNvbS8pIC0g
SW50dWl0aXZlIGNvbG9yIHBpY2tlcgotIFtjb2xvcmJyZXdlcjJdKGh0dHA6
Ly9jb2xvcmJyZXdlcjIub3JnLykgLSBDb2xvciBhZHZpY2UgZm9yIGNhcnRv
Z3JhcGh5Ci0gW0NvbG9ySGV4YV0oaHR0cDovL3d3dy5jb2xvcmhleGEuY29t
LykgLSBDb2xvciBlbmN5Y2xvcGVkaWEgOiBJbmZvcm1hdGlvbiBhbmQgY29u
dmVyc2lvbgotIFtjb2xvdXJjb10oaHR0cDovL2NvbG91cmNvLmRlLykgLSBD
b2xvciBzY2hlbWUgdG9vbAotIFtjb2xvcm1pbmRdKGh0dHA6Ly9jb2xvcm1p
bmQuaW8vKSAtIERlZXAgbGVhcm5pbmcgQUkgdGhhdCBrbm93cyBjb2xvciB0
aGVvcnkgYW5kIGNyZWF0ZXMgY29sb3Igc2NoZW1lcwotIFtDb2xvcnNdKGh0
dHA6Ly9jbHJzLmNjLykgLSBTbWFydGVyIERlZmF1bHQgY29sb3JzIG9uIHRo
ZSB3ZWIKLSBbaGNsLXBpY2tlcl0oaHR0cDovL3RyaXN0ZW4uY2EvaGNsLXBp
Y2tlci8pIC0gQ29sb3JwaWNrZXIgZm9yIGRhdGEKLSBba2V3bGVyXShodHRw
czovL2dpdGh1Yi5jb20vYWRyaWFudG9pbmUva2V3bGVyKSAtIEZ1bmN0aW9u
YWwgYW5kIGltbXV0YWJsZSBjb2xvciBtYW5pcHVsYXRpb24gbGlicmFyeQot
IFtraHJvbWFdKGh0dHA6Ly9raHJvbWEuY28vKSAtIEFJIGNvbG9yIHRvb2wg
Zm9yIGRlc2lnbmVycwotIFtwb2x5Y2hyb21lXShodHRwczovL2dpdGh1Yi5j
b20vY2Rvbm9odWUvcG9seWNocm9tZSkgLSBDb2xvciBtYW5pcHVsYXRpb24g
aGVscGVyCi0gW3VpR3JhZGllbnRzXShodHRwOi8vdWlncmFkaWVudHMuY29t
LykgLSBBIGhhbmRwaWNrZWQgY29sbGVjdGlvbiBvZiBiZWF1dGlmdWwgY29s
b3VyIGdyYWRpZW50cyBmb3IgZGVzaWduIGFuZCBjb2RlCi0gW3ZpYnJhbnQu
anNdKGh0dHBzOi8vZ2l0aHViLmNvbS9qYXJpei92aWJyYW50LmpzLykgLSBF
eHRyYWN0IHByb21pbmVudCBjb2xvcnMgZnJvbSBhbiBpbWFnZQoKKipbIGJh
Y2sgdG8gdG9wXSgjdGFibGUtb2YtY29udGVudHMpKioKCiMjIyBEYXRhYmFz
ZXMvU3RvcmFnZQotIFtiYXNpbC5qc10oaHR0cHM6Ly9naXRodWIuY29tL1dp
c2VtYmx5L2Jhc2lsLmpzKSAtIFBlcnNpc3RlbmNlIGxheWVyCi0gW0RleGll
LmpzXShodHRwOi8vZGV4aWUub3JnLykgLSBXcmFwcGVyIGZvciBJbmRleGVk
REIKLSBbRm9yZXJ1bm5lckRCXShodHRwOi8vd3d3LmZvcmVydW5uZXJkYi5j
b20vKSAtIERhdGFiYXNlIHdpdGggbW9uZ28tbGlrZSBxdWVyeSBsYW5ndWFn
ZSBhbmQgZGF0YS1iaW5kaW5nIHN1cHBvcnQKLSBbbG9jYWxGb3JhZ2VdKGh0
dHBzOi8vZ2l0aHViLmNvbS9tb3ppbGxhL2xvY2FsRm9yYWdlKSAtIExpYnJh
cnkgbGlrZSBhIGxvY2FsU3RvcmFnZSBBUEkgd2l0aCBmYWxsYmFjayBzdG9y
ZSBmb3IgYnJvd3NlcnMgd2l0aCBubyBJbmRleGVkREIgb3IgV2ViU1FMIHN1
cHBvcnQKLSBbTG9raUpTXShodHRwOi8vbG9raWpzLm9yZy8pIC0gRW1iZWRk
YWJsZSAvIGluLW1lbW9yeSBkYXRhYmFzZQotIFtsb3ZlZmllbGRdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9nb29nbGUvbG92ZWZpZWxkKSAtIFNRTC1saWtlLCBy
ZWxhdGlvbmFsIHF1ZXJ5IGVuZ2luZSBmb3IgdGhlIGJyb3dzZXIKLSBbcG91
Y2hkYl0oaHR0cDovL3BvdWNoZGIuY29tLykgLSBDcmVhdGVkIHRvIGhlbHAg
ZGV2ZWxvcGVycyBidWlsZCBhcHBsaWNhdGlvbnMgdGhhdCB3b3JrIGFzIHdl
bGwgb2ZmbGluZSBhcyB0aGV5IGRvIG9ubGluZQotIFtyeGRiXShodHRwczov
L2dpdGh1Yi5jb20vcHVia2V5L3J4ZGIpIC0gUmVhY3RpdmUsIHNlcnZlcmxl
c3MsIGNsaWVudC1zaWRlLCBvZmZsaW5lLWZpcnN0IGRhdGFiYXNlCi0gW3N0
b3JlLmpzXShodHRwczovL2dpdGh1Yi5jb20vbWFyY3Vzd2VzdGluL3N0b3Jl
LmpzLykgLSBMb2NhbFN0b3JhZ2Ugd3JhcHBlciBmb3IgYWxsIGJyb3dzZXJz
IHdpdGhvdXQgdXNpbmcgY29va2llcyBvciAKZmxhc2guIFVzZXMgbG9jYWxT
dG9yYWdlLCBnbG9iYWxTdG9yYWdlIGFuZCB1c2VyRGF0YSBiZWhhdmlvcgot
IFt0YWZmeWRiXShodHRwOi8vd3d3LnRhZmZ5ZGIuY29tLykgLSBCcmluZ3Mg
ZGF0YWJhc2UgZmVhdHVyZXMgaW50byB5b3VyIEphdmFTY3JpcHQgYXBwbGlj
YXRpb25zCi0gW1phbmdvREJdKGh0dHBzOi8vZ2l0aHViLmNvbS9lcmlrb2xz
b24xODYvemFuZ29kYikgLSBNb25nb0RCLWxpa2UgaW50ZXJmYWNlIGZvciBI
VE1MNSBJbmRleGVkREIKCioqWyBiYWNrIHRvIHRvcF0oI3RhYmxlLW9mLWNv
bnRlbnRzKSoqCgojIyMgVmFsaWRhdGlvbgotIFtpcy5qc10oaHR0cDovL2Fy
YXNhdGFzYXlnaW4uZ2l0aHViLmlvL2lzLmpzLykgLSBNaWNybyBjaGVjayBs
aWJyYXJ5Ci0gW1BhcnNsZXldKGh0dHBzOi8vZ2l0aHViLmNvbS9ndWlsbGF1
bWVwb3RpZXIvUGFyc2xleS5qcykgLSBFYXN5IEZvcm0gdmFsaWRhdGlvbgot
IFt2YWxpZGF0ZS5qc10oaHR0cHM6Ly9naXRodWIuY29tL3JpY2toYXJyaXNv
bi92YWxpZGF0ZS5qcykgLSBGb3JtIHZhbGlkYXRpb24gbGlicmFyeSBpbnNw
aXJlZCBieSBDb2RlSWduaXRlcgotIFt2YWxpZGF0b3IuanNdKGh0dHBzOi8v
Z2l0aHViLmNvbS9jaHJpc28vdmFsaWRhdG9yLmpzKSAtIFN0cmluZyB2YWxp
ZGF0aW9uIGFuZCBzYW5pdGl6YXRpb24KCioqWyBiYWNrIHRvIHRvcF0oI3Rh
YmxlLW9mLWNvbnRlbnRzKSoqCgojIyMgRGF0ZXMKLSBbZGF0ZWRyb3BwZXJd
KGh0dHA6Ly9mZWxpY2VnYXR0dXNvLmNvbS9wcm9qZWN0cy9kYXRlZHJvcHBl
ci8pIC0gSlF1ZXJ5IHBsdWdpbiB0aGF0IHByb3ZpZGVzIGEgd2F5IHRvIG1h
bmFnZSBkYXRlcyBmb3IgaW5wdXQgZmllbGRzCi0gW2RhdGVmb3JtYXRdKGh0
dHBzOi8vZ2l0aHViLmNvbS9mZWxpeGdlL25vZGUtZGF0ZWZvcm1hdCkgLSBM
aWJyYXJ5IGZvciBmb3JtYXR0aW5nIGRhdGVzCi0gW2RhdGUtZm5zXShodHRw
czovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0ZS1mbnMpIC0gVG9vbHNldCBm
b3IgbWFuaXB1bGF0aW5nIGRhdGVzCi0gW2ZsYXRwaWNrcl0oaHR0cHM6Ly9j
aG1sbi5naXRodWIuaW8vZmxhdHBpY2tyLykgLSBMaWdodHdlaWdodCBkYXRl
IHRpbWUgcGlja2VyIHdpdGhvdXQgZGVwZW5kZW5jaWVzIAotIFtpbnN0YWRh
dGVdKGh0dHBzOi8vZ2l0aHViLmNvbS90ZWFtd2Vlay9pbnN0YWRhdGUpIC0g
QSBtaW5pbWFsIGRhdGUgbGlicmFyeQotIFtsdXhvbl0oaHR0cHM6Ly9naXRo
dWIuY29tL21vbWVudC9sdXhvbikgLSBBIGxpYnJhcnkgZm9yIHdvcmtpbmcg
d2l0aCBkYXRlcyBhbmQgdGltZXMKLSBbbW9tZW50LmpzXShodHRwOi8vbW9t
ZW50anMuY29tLykgLSBQYXJzZSwgdmFsaWRhdGUsIG1hbmlwdWxhdGUsIGFu
ZCBkaXNwbGF5IGRhdGVzCi0gW1Bpa2FkYXldKGh0dHA6Ly9kYnVzaGVsbC5n
aXRodWIuaW8vUGlrYWRheS8pIC0gQSBsaWdodHdlaWdodCBEYXRlcGlja2Vy
Ci0gW3N1Z2FyXShodHRwOi8vc3VnYXJqcy5jb20vZGF0ZXMpIC0gUGFyc2Us
IGNyZWF0ZSwgbWFuaXB1bGF0ZSwgY29tcGFyZSwgZm9ybWF0IGFuZCBkaXNw
bGF5IGRhdGVzCi0gW3Rpbnl0aW1lXShodHRwczovL2dpdGh1Yi5jb20vYXdl
YXJ5L3Rpbnl0aW1lKSAtIExpZ2h0IGRhdGUgYW5kIHRpbWUgZm9ybWF0dGVy
CgoqKlsgYmFjayB0byB0b3BdKCN0YWJsZS1vZi1jb250ZW50cykqKgoKIyMj
IEludGVybmF0aW9uYWxpemF0aW9uCi0gW2wxMG5zXShodHRwOi8vbDEwbnMu
b3JnLykgLSBJbnRlcm5hdGlvbmFsaXphdGlvbiB3b3JrZmxvd2FuZCBmb3Jt
YXR0aW5nCi0gW2dsb2JhbGl6ZV0oaHR0cHM6Ly9naXRodWIuY29tL2pxdWVy
eS9nbG9iYWxpemUpIC0gQSBsaWJyYXJ5IGZvciBpbnRlcm5hdGlvbmFsaXph
dGlvbiBhbmQgbG9jYWxpemF0aW9uIHRoYXQgbGV2ZXJhZ2VzIHRoZSBvZmZp
Y2lhbCBVbmljb2RlIENMRFIgSlNPTiBkYXRhCgoqKlsgYmFjayB0byB0b3Bd
KCN0YWJsZS1vZi1jb250ZW50cykqKgoKIyMjIE51bWJlcnMgJiBDdXJyZW5j
aWVzCi0gW051bWJyby5qc10oaHR0cDovL251bWJyb2pzLmNvbS8pIC0gRm9y
bWF0dGluZyBhbmQgbWFuaXB1bGF0aW5nIG51bWJlcnMgaW4gbW9yZSB0aGFu
IDMwIGxhbmd1YWdlcwotIFthY2NvdW50aW5nLmpzXShodHRwOi8vb3BlbmV4
Y2hhbmdlcmF0ZXMuZ2l0aHViLmlvL2FjY291bnRpbmcuanMpIC0gTnVtYmVy
LCBtb25leSBhbmQgY3VycmVuY3kgZm9ybWF0dGluZwotIFttb25leS5qc10o
aHR0cDovL29wZW5leGNoYW5nZXJhdGVzLmdpdGh1Yi5pby9tb25leS5qcy8p
IC0gQ3VycmVuY3kgY29udmVyc2lvbiBsaWJyYXJ5Ci0gW2NsZWF2ZS5qc10o
aHR0cDovL25vc2lyLmdpdGh1Yi5pby9jbGVhdmUuanMvKSAtIEZvcm1hdCBp
bnB1dCB0ZXh0IGNvbnRlbnQgd2hlbiB5b3UgYXJlIHR5cGluZwoKKipbIGJh
Y2sgdG8gdG9wXSgjdGFibGUtb2YtY29udGVudHMpKioKCiMjIyBTdGF0aXN0
aWNzICYgRGF0YSBBbmFseXNpcwotIFtkYXRha2l0XShodHRwczovL2dpdGh1
Yi5jb20vbmF0aGFuZXBzdGVpbi9kYXRha2l0KSAtIEZyYW1ld29yayBmb3Ig
ZGF0YSBhbmFseXNpcwotIFtkYXRhbGliXShodHRwczovL2dpdGh1Yi5jb20v
dmVnYS9kYXRhbGliKSAtIERhdGEgdXRpbGl0eSBsaWJyYXJ5Ci0gW2dhdXNz
XShodHRwczovL2dpdGh1Yi5jb20vd2F5b3V0bWluZC9nYXVzcykgLSBTdGF0
aXN0aWNzLCBhbmFseXRpY3MsIGFuZCBkYXRhIGxpYnJhcnkKLSBbanN0YXRd
KGh0dHBzOi8vZ2l0aHViLmNvbS9qc3RhdC9qc3RhdCkgLSBKYXZhc2NyaXB0
IFN0YXRpc3RpY2FsIExpYnJhcnkKLSBbc2NpZW5jZS5qc10oaHR0cHM6Ly9n
aXRodWIuY29tL2phc29uZGF2aWVzL3NjaWVuY2UuanMpIC0gU2NpZW50aWZp
YyBhbmQgc3RhdGlzdGljYWwgY29tcHV0aW5nIGluIEphdmFTY3JpcHQKLSBb
c2ltcGxlLXN0YXRpc3RpY3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9zaW1wbGUt
c3RhdGlzdGljcy9zaW1wbGUtc3RhdGlzdGljcykgLSBzaW1wbGUgc3RhdGlz
dGljcyBmb3Igbm9kZSAmIGJyb3dzZXIgamF2YXNjcmlwdAotIFtzdGF0a2l0
XShodHRwczovL2dpdGh1Yi5jb20vcmlndG9ycC9zdGF0a2l0KSAtIFN0YXRp
c3RpY3MgdG9vbGtpdAotIFtzdGRsaWJdKGh0dHBzOi8vc3RkbGliLmlvLykg
LSBMaWJyYXJ5IHdpdGggYW4gZW1waGFzaXMgb24gbnVtZXJpY2FsIGFuZCBz
Y2llbnRpZmljIGNvbXB1dGluZyBhcHBsaWNhdGlvbnMKLSBbVGhlb3JlbUpT
XShodHRwczovL2dpdGh1Yi5jb20vYXJndWlvdC9UaGVvcmVtSlMpIC0gQSBN
YXRoIGxpYnJhcnkgZm9yIGNvbXB1dGF0aW9uCgoqKlsgYmFjayB0byB0b3Bd
KCN0YWJsZS1vZi1jb250ZW50cykqKgoKIyMjIE1vZHVsZSBMb2FkZXJzCi0g
W0Jyb3dzZXJpZnldKGh0dHA6Ly9icm93c2VyaWZ5Lm9yZy8pIC0gTGV0cyB5
b3UgcmVxdWlyZSgnbW9kdWxlcycpIGluIHRoZSBicm93c2VyCi0gW1JlcXVp
cmVKU10oaHR0cHM6Ly9naXRodWIuY29tL2pyYnVya2UvcmVxdWlyZWpzKSAt
IEEgZmlsZSBhbmQgQU1EIG1vZHVsZSBsb2FkZXIKLSBbUm9sbHVwXShodHRw
czovL2dpdGh1Yi5jb20vcm9sbHVwL3JvbGx1cCkgLSBFUzYgbW9kdWxlIGJ1
bmRsZXIgd2l0aCB0cmVlIHNoYWtpbmcgYWJpbGl0aWVzCi0gW3N0ZWFsanNd
KGh0dHA6Ly9zdGVhbGpzLmNvbS8pIC0gRGVwZW5kZW5jeSBsb2FkZXIgYW5k
IGJ1aWxkZXIKLSBbU3lzdGVtanNdKGh0dHBzOi8vZ2l0aHViLmNvbS9zeXN0
ZW1qcy9zeXN0ZW1qcykgLSBFUzYsIEFNRCBhbmQgQ29tbW9uSlMgbG9hZGVy
Ci0gW3dlYnBhY2tdKGh0dHA6Ly93ZWJwYWNrLmdpdGh1Yi5pby8pIC0gQ29t
bW9uSnMgYW5kIEFNRCBtb2R1bGUgbG9hZGVyCgoqKlsgYmFjayB0byB0b3Bd
KCN0YWJsZS1vZi1jb250ZW50cykqKgoKIyMjIExhenkgTG9hZGluZwotIFtB
bG9hZF0oaHR0cDovL3Bhemd1aWxsZS5naXRodWIuaW8vYWxvYWQvKSAtIEFz
eW5jaHJvbm91c2x5IGxvYWRzIGltYWdlcywgc2NyaXB0cywgc3R5bGVzIGFu
ZCBtb3JlCi0gW2VjaG9dKGh0dHA6Ly90b2RkbW90dG8uY29tL2xhYnMvZWNo
by8pIC0gU3RhbmRhbG9uZSBsYXp5IGxvYWRpbmcgaW1hZ2UgbWljcm8tbGli
cmFyeQotIFtMYXp5IFByb2dyZXNzaXZlIEVuaGFuY2VtZW50XShodHRwOi8v
dHlsZXJkZWl0ei5jby9sYXp5LXByb2dyZXNzaXZlLWVuaGFuY2VtZW50Lykg
LSBBIGxhenkgaW1hZ2UgbG9hZGVyIGRlc2lnbmVkIHRvIGVuZm9yY2UgcHJv
Z3Jlc3NpdmUgZW5oYW5jZW1lbnQgYW5kIHZhbGlkIEhUTUwKLSBbbGF5enIu
anNdKGh0dHA6Ly9jYWxsbWVjYXZzLmdpdGh1Yi5pby9sYXl6ci5qcy8pIC0g
RGVwZW5kZW5jeS1mcmVlIGxpYnJhcnkgZm9yIGxhenkgbG9hZGluZyBpbWFn
ZXMKLSBbbGF6eXNpemVzXShodHRwczovL2dpdGh1Yi5jb20vYUZhcmthcy9s
YXp5c2l6ZXMpIC0gZmFzdCBhbmQgc2VsZi1pbml0aWFsaXppbmcgbGF6eWxv
YWRlciBmb3IgaW1hZ2VzLCBpZnJhbWVzIGFuZCBtb3JlCi0gW2xvYWRYVF0o
aHR0cHM6Ly9naXRodWIuY29tL3Jlc3Npby9sYXp5LWxvYWQteHQpIC0gTGF6
eSBsb2FkaW5nIGZvciBhbnkgZWxlbWVudHMKLSBbVW52ZWlsXShodHRwOi8v
bHVpcy1hbG1laWRhLmdpdGh1Yi5pby91bnZlaWwvKSAtIExpZ2h0d2VpZ2h0
IHBsdWdpbiB0byBsYXp5IGxvYWQgaW1hZ2VzIGZvciBqUXVlcnkgb3IgWmVw
dG8uanMKCioqWyBiYWNrIHRvIHRvcF0oI3RhYmxlLW9mLWNvbnRlbnRzKSoq
CgojIyMgTmV1cmFsIE5ldHdvcmtzCi0gW2JyYWluXShodHRwczovL2dpdGh1
Yi5jb20vaGFydGh1ci1vcmcvYnJhaW4pIC0gTmV1cmFsIG5ldHdvcmtzIGlu
IEphdmFTY3JpcHQKLSBbQ29udk5ldEpTXShodHRwOi8vY3Muc3RhbmZvcmQu
ZWR1L3Blb3BsZS9rYXJwYXRoeS9jb252bmV0anMvKSAtIExpYnJhcnkgZm9y
IHRyYWluaW5nIERlZXAgTGVhcm5pbmcgbW9kZWxzCi0gW2RlZXBsZWFybi5q
c10oaHR0cHM6Ly9naXRodWIuY29tL1BBSVItY29kZS9kZWVwbGVhcm5qcykg
LSBIYXJkd2FyZS1hY2NlbGVyYXRlZCBtYWNoaW5lIGludGVsbGlnZW5jZSBs
aWJyYXJ5Ci0gW2RuMmEtamF2YXNjcmlwdF0oaHR0cHM6Ly9naXRodWIuY29t
L2RuMmEvZG4yYS1qYXZhc2NyaXB0KSAtIERpZ2l0YWwgTmV1cmFsIE5ldHdv
cmtzIEFyY2hpdGVjdHVyZQotIFtNaW5kXShodHRwOi8vd3d3Lm1pbmRqcy5u
ZXQvKSAtIEZsZXhpYmxlIG5ldXJhbCBuZXR3b3JrcwotIFtuZXVyb2pzXSho
dHRwczovL2dpdGh1Yi5jb20vamFuaHVlbmVybWFubi9uZXVyb2pzKSAtIERl
ZXAgbGVhcm5pbmcgYW5kIHJlaW5mb3JjZW1lbnQgbGVhcm5pbmcgbGlicmFy
eQotIFtzeW5hcHRpYy5qc10oaHR0cDovL3N5bmFwdGljLmp1YW5jYXphbGEu
Y29tLyMvKSAtIEFyY2hpdGVjdHVyZS1mcmVlIG5ldXJhbCBuZXR3b3JrCi0g
W1RlbnNvciBGaXJlXShodHRwczovL3RlbnNvLnJzLykgLSBOZXVyYWwgbmV0
d29ya3MgaW4gdGhlIGJyb3dzZXIgdXNpbmcgV2ViR0wKCioqWyBiYWNrIHRv
IHRvcF0oI3RhYmxlLW9mLWNvbnRlbnRzKSoqCgojIyMgU29jaWFsCi0gW2pz
IHNvY2lhbHNdKGh0dHA6Ly9qcy1zb2NpYWxzLmNvbS8pIC0gU29jaWFsIG5l
dHdvcmsgc2hhcmluZyBqUXVlcnkgcGx1Z2luCi0gW3Jyc3NiXShodHRwOi8v
a3VydG5vYmxlLmNvbS9sYWJzL3Jyc3NiLykgLSBSaWRpY3Vsb3VzbHkgUmVz
cG9uc2l2ZSBTb2NpYWwgU2hhcmluZyBCdXR0b25zCi0gW3NoYXJlLWJ1dHRv
bl0oaHR0cDovL3NoYXJlYnV0dG9uLmNvLykgLSBGYXN0LCBiZWF1dGlmdWws
IGFuZCBwYWlubGVzcyBzb2NpYWwgc2hhcmVzCi0gW3NoYXJpbmdidXR0b25z
XShodHRwOi8vc2hhcmluZ2J1dHRvbnMuaW8vKSAtIFNvY2lhbCBtZWRpYSBz
aGFyaW5nIGJ1dHRvbnMgd2l0aG91dCBKYXZhU2NyaXB0Ci0gW3NvY2lhbGNv
dW50XShodHRwOi8vd3d3LmZpbGFtZW50Z3JvdXAuY29tL2xhYi9zb2NpYWxj
b3VudC5odG1sKSAtIEN1c3RvbSBzaGFyaW5nIGJ1dHRvbnMgd2l0aCBzaGFy
ZSBjb3VudAotIFtTb2NpYWwgTGlrZXNdKGh0dHA6Ly9zYXBlZ2luLmdpdGh1
Yi5pby9zb2NpYWwtbGlrZXMvKSAtIFNpbmdsZS1zdHlsZSBzaGFyaW5nIGJ1
dHRvbnMgd2l0aCBjb3VudGVycyBmb3IgalF1ZXJ5Ci0gW3doYXRzYXBwIGJ1
dHRvbl0oaHR0cDovL3doYXRzYXBwLXNoYXJpbmcuY29tLykgLSBDcmVhdGVz
IGEgd2hhdHNhcHAgc2hhcmluZyBidXR0b24KCioqWyBiYWNrIHRvIHRvcF0o
I3RhYmxlLW9mLWNvbnRlbnRzKSoqCgojIyMgVXRpbGl0eSBMaWJyYXJpZXMK
LSBbbGF6eS5qc10oaHR0cDovL2RhbmllbHRhby5jb20vbGF6eS5qcy8pIC0g
QSBmdW5jdGlvbmFsIHV0aWxpdHkgbGlicmFyeQotIFtsb2Rhc2hdKGh0dHBz
Oi8vbG9kYXNoLmNvbS8pIC0gVXRpbGl0eSBsaWJyYXJ5IGRlbGl2ZXJpbmcg
bW9kdWxhcml0eSwgcGVyZm9ybWFuY2UgJiBleHRyYXMuCi0gW21vdXRqc10o
aHR0cDovL21vdXRqcy5jb20vKSAtIENvbGxlY3Rpb24gb2YgbW9kdWxhciBK
YXZhU2NyaXB0IHV0aWxpdGllcyAKLSBbcGFyZXRvLmpzXShodHRwczovL2dp
dGh1Yi5jb20vY29uY3JldGVzb2x1dGlvbnMvcGFyZXRvLmpzKSAtIEZ1bmN0
aW9uYWwgdXRpbGl0eSBsaWJyYXJ5Ci0gW3JhbWRhanNdKGh0dHA6Ly9yYW1k
YWpzLmNvbS8pIC0gQSBwcmFjdGljYWwgZnVuY3Rpb25hbCBsaWJyYXJ5Ci0g
W1N1Z2FyXShodHRwczovL3N1Z2FyanMuY29tLykgLSBVdGlsaXR5IGxpYnJh
cnkgZm9yIHdvcmtpbmcgd2l0aCBuYXRpdmUgb2JqZWN0cwotIFt1bmRlcnNj
b3JlXShodHRwOi8vdW5kZXJzY29yZWpzLm9yZy8pIC0gTGlicmFyeSB0aGF0
IHByb3ZpZGVzIGZ1bmN0aW9uYWwgcHJvZ3JhbW1pbmcgaGVscGVycwoKKipb
IGJhY2sgdG8gdG9wXSgjdGFibGUtb2YtY29udGVudHMpKioKCiMjIyBHZW5l
cmFsCi0gW2RhdC5HVUldKGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRhYXJ0cy9k
YXQuZ3VpKSAtIE1pbmltYWwgaW50ZXJmYWNlIGZvciBsaXZlIGNvbnRyb2wg
b2YgdmFyaWFibGVzIGluIEpTCi0gW2VtYmVkLmpzXShodHRwczovL2dpdGh1
Yi5jb20vcml0ejA3OC9lbWJlZC5qcykgLSBBdXRvbWF0aWNhbGx5IGVtYmVk
cyBlbW9qaXMsIG1lZGlhLCBtYXBzLCB0d2VldHMsIGNvZGUgYW5kIHNlcnZp
Y2VzCi0gW2Zvcm1zdG9uZV0oaHR0cDovL2Zvcm1zdG9uZS5pdC8pIC0gQ29s
bGVjdGlvbiBvZiBoYW5keSB1c2VmdWwgc2NyaXB0cwotIFtnb2xkZW4tbGF5
b3V0XShodHRwczovL2dvbGRlbi1sYXlvdXQuY29tLykgLSBBIG11bHRpLXNj
cmVlbiBsYXlvdXQgbWFuYWdlciBmb3Igd2ViYXBwcwotIFtpbnRlcmFjdC5q
c10oaHR0cDovL2ludGVyYWN0anMuaW8vKSAtIERyYWcgYW5kIGRyb3AsIHJl
c2l6aW5nIGFuZCBtdWx0aS10b3VjaCBnZXN0dXJlcyB3aXRoIGluZXJ0aWEg
YW5kIHNuYXBwaW5nCi0gW2p3ZXJ0eV0oaHR0cDovL2tlaXRoYW11cy5naXRo
dWIuaW8vandlcnR5LykgLSBIYW5kbGluZyBvZiBrZXlib2FyZCBldmVudHMK
LSBba2V5bWFzdGVyXShodHRwczovL2dpdGh1Yi5jb20vbWFkcm9iYnkva2V5
bWFzdGVyKSAtIFNpbXBsZSBrZXkgbGlzdGVuZXIKLSBbbW9kZXJuaXpyXSho
dHRwOi8vbW9kZXJuaXpyLmNvbS8pIC0gRmVhdHVyZSBEZXRlY3Rpb24gTGli
cmFyeQotIFt0ZXRoZXJdKGh0dHA6Ly9naXRodWIuaHVic3BvdC5jb20vdGV0
aGVyL2RvY3Mvd2VsY29tZS8pIC0gTWFycnlpbmcgVUkgRWxlbWVudHMgKGRy
b3Bkb3duLCB0b29sdGlwcywgZ3VpZGUsIHNlbGVjdHMpCi0gW1VwVXBdKGh0
dHBzOi8vd3d3LnRhbGF0ZXIuY29tL3VwdXAvKSAtIE9mZmxpbmUgRmlyc3Qg
bGlicmFyeS4gTGV0IHVzZXJzIHZpc2l0IHlvdXIgc2l0ZSwgZXZlbiB3aXRo
b3V0IGEgY29ubmVjdGlvbi4KLSBbYnJvLWZzXShodHRwczovL2dpdGh1Yi5j
b20vdml0YWxldHMvYnJvLWZzKSAtIFByb21pc2UtYmFzZWQgd3JhcHBlciBv
dmVyIFtIVE1MNSBGaWxlc3lzdGVtIEFQSV0oaHR0cHM6Ly9kZXYudzMub3Jn
LzIwMDkvZGFwL2ZpbGUtc3lzdGVtL2ZpbGUtZGlyLXN5cy5odG1sKSBhbGxv
d2luZyB0byB3b3JrIHdpdGggc2FuZGJveGVkIGZpbGVzeXN0ZW0gaW4gQ2hy
b21lCgoqKlsgYmFjayB0byB0b3BdKCN0YWJsZS1vZi1jb250ZW50cykqKgo=
",,8298,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'mdx-deck',142714512,b'\xe2\x99\xa0\xef\xb8\x8f React MDX-based presentation decks',b'JavaScript',53,8290,,87,False,b'https://api.github.com/repos/jxnblk/mdx-deck/forks',"IVtdKGh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9qeG5ibGsvbWR4LWRlY2st
Mi5naWYpCgojIE1EWCBEZWNrIDxpbWcgc3JjPSdkb2NzL2FjZS5wbmcnIHdp
ZHRoPScyNCcgaGVpZ2h0PScyNCcgLz4KCkF3YXJkLXdpbm5pbmcgUmVhY3Qg
W01EWF1bXS1iYXNlZCBwcmVzZW50YXRpb24gZGVja3MKClshW0J1aWxkIFN0
YXR1c11bYmFkZ2VdXVt0cmF2aXNdClshW1ZlcnNpb25dW11dW25wbV0KWyFb
RG93bmxvYWRzXVtdXVtucG1dCgpbYmFkZ2VdOiBodHRwczovL2ZsYXQuYmFk
Z2VuLm5ldC90cmF2aXMvanhuYmxrL21keC1kZWNrClt0cmF2aXNdOiBodHRw
czovL3RyYXZpcy1jaS5vcmcvanhuYmxrL21keC1kZWNrClt2ZXJzaW9uXTog
aHR0cHM6Ly9mbGF0LmJhZGdlbi5uZXQvbnBtL3YvbWR4LWRlY2sKW2Rvd25s
b2Fkc106IGh0dHBzOi8vZmxhdC5iYWRnZW4ubmV0L25wbS9kbS9tZHgtZGVj
awpbbnBtXTogaHR0cHM6Ly9ucG1qcy5jb20vcGFja2FnZS9tZHgtZGVjawoK
LSA6bWVtbzogV3JpdGUgcHJlc2VudGF0aW9ucyBpbiBtYXJrZG93bgotIDph
dG9tX3N5bWJvbDogSW1wb3J0IGFuZCB1c2UgW1JlYWN0IGNvbXBvbmVudHNd
KCNpbXBvcnRzKQotIDpuYWlsX2NhcmU6IEN1c3RvbWl6YWJsZSBbdGhlbWVz
XSgjdGhlbWluZykgYW5kIGNvbXBvbmVudHMKLSA6emVybzogWmVyby1jb25m
aWcgQ0xJCi0gOnRpcHBpbmdfaGFuZF93b21hbjogW1ByZXNlbnRlciBtb2Rl
XSgjcHJlc2VudGVyLW1vZGUpCi0gOm5vdGVib29rOiBbU3BlYWtlciBub3Rl
c10oI3NwZWFrZXItbm90ZXMpCi0gOmZpcmU6IEF2YWlsYWJsZSBhcyBhIEdh
dHNieSB0aGVtZQoKW1ZpZXcgZGVtb10oaHR0cHM6Ly9tZHgtZGVjay5qeG5i
bGsuY29tKQoKIyMgR2V0dGluZyBTdGFydGVkCgpgYGBzaApucG0gaSAtRCBt
ZHgtZGVjawpgYGAKCkNyZWF0ZSBhbiBbTURYXVtdIGZpbGUgYW5kIHNlcGFy
YXRlIGVhY2ggc2xpZGUgd2l0aCBgLS0tYC4KCmBgYGBtZHgKIyBUaGlzIGlz
IHRoZSB0aXRsZSBvZiBteSBkZWNrCgotLS0KCiMgQWJvdXQgTWUKCi0tLQoK
YGBganN4CjxDb2RlU25pcHBldCAvPgpgYGAKCi0tLQoKaW1wb3J0IERlbW8g
ZnJvbSAnLi9jb21wb25lbnRzL0RlbW8nCgojIyA8RGVtbyAvPgoKIyBUaGUg
ZW5kCmBgYGAKCkFkZCBhIHJ1biBzY3JpcHQgdG8geW91ciBgcGFja2FnZS5q
c29uYCB3aXRoIHRoZSBNRFggRGVjayBDTEkKcG9pbnRpbmcgdG8gdGhlIGAu
bWR4YCBmaWxlIHRvIHN0YXJ0IHRoZSBkZXYgc2VydmVyOgoKYGBganNvbgoi
c2NyaXB0cyI6IHsKICAic3RhcnQiOiAibWR4LWRlY2sgZGVjay5tZHgiCn0K
YGBgCgpTdGFydCB0aGUgZGV2IHNlcnZlcjoKCmBgYHNoCm5wbSBzdGFydApg
YGAKCiMjIFVzaW5nIE1EWAoKTURYIHVzZXMgTWFya2Rvd24gc3ludGF4IGFu
ZCBjYW4gcmVuZGVyIFJlYWN0IGNvbXBvbmVudHMgaW5saW5lIHdpdGggSlNY
LgoKIyMjIEltcG9ydHMKClRvIGltcG9ydCBjb21wb25lbnRzLCB1c2UgRVMg
aW1wb3J0IHN5bnRheCBzZXBhcmF0ZWQgd2l0aCBlbXB0eSBsaW5lcyBiZXR3
ZWVuIGFueSBtYXJrZG93biBvciBKU1ggc3ludGF4LgoKYGBgbWR4CmltcG9y
dCB7IEJveCB9IGZyb20gJ3JlYmFzcycKCjxCb3ggY29sb3I9InRvbWF0byI+
SGVsbG88L0JveD4KYGBgCgpSZWFkIG1vcmUgYWJvdXQgTURYIHN5bnRheCBp
biB0aGUgW01EWCBEb2NzXVttZHhdLgoKIyMgVGhlbWluZwoKPGRpdj4KICA8
aW1nIHNyYz0nZG9jcy9pbWFnZXMvZnV0dXJlLnBuZycgd2lkdGg9JzI1Nicg
Lz4KICA8aW1nIHNyYz0nZG9jcy9pbWFnZXMvY29taWMucG5nJyB3aWR0aD0n
MjU2JyAvPgogIDxpbWcgc3JjPSdkb2NzL2ltYWdlcy95ZWxsb3cucG5nJyB3
aWR0aD0nMjU2JyAvPgo8L2Rpdj4KCk1EWCBEZWNrIHVzZXMgW1RoZW1lIFVJ
XVtdIGFuZCBbRW1vdGlvbl1bXSBmb3Igc3R5bGluZywgbWFraW5nIHByYWN0
aWNhbGx5IGFueSBwYXJ0IG9mIHRoZSBwcmVzZW50YXRpb24gdGhlbWVhYmxl
LgpJdCBhbHNvIGluY2x1ZGVzIHNldmVyYWwgYnVpbHQtaW4gdGhlbWVzIHRv
IGNoYW5nZSB0aGUgbG9vayBhbmQgZmVlbCBvZiB0aGUgcHJlc2VudGF0aW9u
LgpTZWUgdGhlIGxpc3Qgb2YgYXZhaWxhYmxlIFtUaGVtZXNdKGRvY3MvdGhl
bWVzLm1kKSwKb3IgcmVhZCBtb3JlIGFib3V0IHRoZW1pbmcgaW4gdGhlIFtU
aGVtaW5nXShkb2NzL3RoZW1pbmcubWQpIGRvY3MuCgojIyBDb21wb25lbnRz
CgpNRFggRGVjayBpbmNsdWRlcyBidWlsdC1pbiBjb21wb25lbnRzIHRvIGhl
bHAgd2l0aCBjcmVhdGluZyBwcmVzZW50YXRpb25zLCBpbmNsdWRpbmcgYSBi
YWNrZ3JvdW5kIGBJbWFnZWAgY29tcG9uZW50LCBhbiBgQXBwZWFyYCBjb21w
b25lbnQgdGhhdCBhbGxvd3Mgc3RlcHBpbmcgdGhyb3VnaCBwYXJ0cyBvZiBh
IHNpbmdsZSBzbGlkZSwgYW5kIGEgYE5vdGVzYCBjb21wb25lbnQgZm9yIGFk
ZGluZyBzcGVha2VyIG5vdGVzLgpSZWFkIG1vcmUgaW4gdGhlIFtDb21wb25l
bnRzXShkb2NzL2NvbXBvbmVudHMubWQpIGRvY3MuCgojIyBUaGlyZC1QYXJ0
eSBDb21wb25lbnRzCgpUaGVzZSBvcHRpb25hbCBsaWJyYXJpZXMgYXJlIGlu
dGVuZGVkIGZvciB1c2Ugd2l0aCBNRFggRGVjay4KCi0gW0NvZGVTdXJmZXJd
W106IFJlYWN0IGNvbXBvbmVudCBmb3Igc2Nyb2xsaW5nLCB6b29taW5nIGFu
ZCBoaWdobGlnaHRpbmcgY29kZS4KLSBbbWR4LWNvZGVdW106IFJ1bm5hYmxl
IGNvZGUgcGxheWdyb3VuZHMgZm9yIE1EWCBEZWNrLgotIFttZHgtZGVjay1s
aXZlLWNvZGVdW106IExpdmUgUmVhY3QgYW5kIEpTIGNvZGluZyBpbiBzbGlk
ZXMuCgpfTm90ZTogcGxlYXNlIGNoZWNrIHdpdGggdmVyc2lvbiBjb21wYXRp
YmlsaXR5IHdoZW4gdXNpbmcgdGhlc2UgbGlicmFyaWVzLl8KCltjb2Rlc3Vy
ZmVyXTogaHR0cHM6Ly9naXRodWIuY29tL3BvbWJlci9jb2RlLXN1cmZlcgpb
bWR4LWNvZGVdOiBodHRwczovL2dpdGh1Yi5jb20vcHJhbmF5Z3AvbWR4LWNv
ZGUKW21keC1kZWNrLWxpdmUtY29kZV06IGh0dHBzOi8vZ2l0aHViLmNvbS9K
UmVpbmhvbGQvbWR4LWRlY2stbGl2ZS1jb2RlCgojIyBMYXlvdXRzCgpFYWNo
IHNsaWRlIGNhbiBpbmNsdWRlIGEgY3VzdG9tIGxheW91dCBhcm91bmQgaXRz
IGNvbnRlbnQsCndoaWNoIGNhbiBiZSB1c2VkIGFzIGEgKnRlbXBsYXRlKiBm
b3IgdmlzdWFsbHkgZGlmZmVyZW50aWF0aW5nIHNsaWRlcy4KCmBgYGpzCi8v
IGV4YW1wbGUgTGF5b3V0LmpzCmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCcK
CmV4cG9ydCBkZWZhdWx0ICh7IGNoaWxkcmVuIH0pID0+ICgKICA8ZGl2CiAg
ICBzdHlsZT17ewogICAgICB3aWR0aDogJzEwMHZ3JywKICAgICAgaGVpZ2h0
OiAnMTAwdmgnLAogICAgICBiYWNrZ3JvdW5kQ29sb3I6ICd0b21hdG8nLAog
ICAgfX0+CiAgICB7Y2hpbGRyZW59CiAgPC9kaXY+CikKYGBgCgpgYGBtZHgK
aW1wb3J0IExheW91dCBmcm9tICcuL0xheW91dCcKCiMgTm8gTGF5b3V0Cgot
LS0KCjxMYXlvdXQ+CgojIEN1c3RvbSBMYXlvdXQKCjwvTGF5b3V0PgpgYGAK
ClRoZSBsYXlvdXQgY29tcG9uZW50IHdpbGwgd3JhcCB0aGUgTURYIGVsZW1l
bnRzIHdpdGhpbiB0aGF0IHNsaWRlLAp3aGljaCBtZWFucyB5b3UgY2FuIGFk
ZCBsYXlvdXQgc3R5bGVzLCB1c2UgYSBuZXN0ZWQgVGhlbWVQcm92aWRlciwg
b3Igc3R5bGUgZWxlbWVudHMgd2l0aCBDU1MtaW4tSlMuCgojIyBCdWlsdC1p
biBMYXlvdXRzCgpNRFggRGVjayBpbmNsdWRlcyBhIGZldyBbYnVpbHQtaW4g
bGF5b3V0c10oZG9jcy9sYXlvdXRzLm1kKSBmb3IgaW52ZXJ0aW5nIHRoZW1l
IGNvbG9ycyBhbmQgY2hhbmdpbmcgdGhlIGxheW91dCBvZiBhIHNsaWRlLgoK
IyMgUHJlc2VudGVyIE1vZGUKClVzZSBbX1ByZXNlbnRlciBNb2RlX10oZG9j
cy9wcmVzZW50aW5nLm1kKSB3aGVuIG9uIHN0YWdlIHRvIHNob3cgYSBwcmV2
aWV3IG9mIHRoZSBuZXh0IHNsaWRlLCBhIHRpbWVyLCBhbmQgc3BlYWtlciBu
b3Rlcy4KCiFbcHJlc2VudGVyIG1vZGUgc2NyZWVuc2hvdF0oZG9jcy9pbWFn
ZXMvcHJlc2VudGVyLW1vZGUucG5nKQoKIyMgS2V5Ym9hcmQgU2hvcnRjdXRz
Cgp8IEtleSAgICAgICAgIHwgRGVzY3JpcHRpb24gICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgfAp8IC0tLS0tLS0tLS0tIHwgLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfAp8IExlZnQg
QXJyb3csIFBhZ2UgVXAsIFNoaWZ0ICsgU3BhY2UgIHwgR28gdG8gcHJldmlv
dXMgc2xpZGUgKG9yIHN0ZXAgaW4gW0FwcGVhcl1bXSkgfAp8IFJpZ2h0IEFy
cm93LCBQYWdlIERvd24sIFNwYWNlIHwgR28gdG8gbmV4dCBzbGlkZSAob3Ig
c3RlcCBpbiBbQXBwZWFyXVtdKSAgICAgfAp8IE9wdGlvbiArIFAgIHwgVG9n
Z2xlIFtQcmVzZW50ZXIgTW9kZV0oI3ByZXNlbnRlci1tb2RlKSAgICAgfAp8
IE9wdGlvbiArIE8gIHwgVG9nZ2xlIFtPdmVydmlldyBNb2RlXSgjb3ZlcnZp
ZXctbW9kZSkgICAgICAgfAp8IE9wdGlvbiArIEcgIHwgVG9nZ2xlIEdyaWQg
TW9kZQoKW2FwcGVhcl06IGRvY3MvY29tcG9uZW50cy5tZCNhcHBlYXIKCiMj
IFZpZGVvcyAmIEFydGljbGVzCgotIFtFZ2doZWFkIFR1dG9yaWFsXVtlZ2do
ZWFkXSBieSBbQW5kcmV3IERlbCBQcmV0ZV0oaHR0cHM6Ly9naXRodWIuY29t
L2FuZHJld2RlbHByZXRlKS4KLSBbbWR4LWRlY2s6IHNsaWRlIGRlY2tzIHBv
d2VyZWQgYnkgbWFya2Rvd24gYW5kIHJlYWN0XVtrY2QtbWVkaXVtXSBieSBb
S2VudCBDLiBEb2Rkc11bXQotIFtNYWtlIEZhc3QgJiBCZWF1dGlmdWwgUHJl
c2VudGF0aW9ucyB3aXRoIE1EWC1EZWNrXVtody12aWRlb10gYnkgW0hhcnJ5
IFdvbGZmXVtdIChbRGVtb11baHctZGVtb10pCi0gW1doYXQgaXMgTURYXVtr
Y2QtdmlkZW9dIGJ5IFtLZW50IEMuIERvZGRzXVtdCi0gW0J1aWxkIGEgQ3Vz
dG9tIFByb3ZpZGVyIENvbXBvbmVudCBmb3IgTURYLURlY2tdW2tzLWVnZ2hl
YWRdIGJ5IFtLeWxlIFNoZXZsaW5dW10KCltlZ2doZWFkXTogaHR0cHM6Ly9l
Z2doZWFkLmlvL2xlc3NvbnMvcmVhY3QtYnVpbGQtYS1zbGlkZS1kZWNrLXdp
dGgtbWR4LWRlY2stdXNpbmctbWFya2Rvd24tcmVhY3QKW2tlbnQgYy4gZG9k
ZHNdOiBodHRwczovL21vYmlsZS50d2l0dGVyLmNvbS9rZW50Y2RvZGRzCltr
Y2QtdmlkZW9dOiBodHRwOi8veW91dHUuYmUvZDJzUWlJNU5GQU0/YQpba2Nk
LW1lZGl1bV06IGh0dHBzOi8vYmxvZy5rZW50Y2RvZGRzLmNvbS9tZHgtZGVj
ay1zbGlkZS1kZWNrcy1wb3dlcmVkLWJ5LW1hcmtkb3duLWFuZC1yZWFjdC1i
ZmM2ZDZhZjIwZGEKW2h3LXZpZGVvXTogaHR0cHM6Ly93d3cueW91dHViZS5j
b20vd2F0Y2g/dj1MdlAyRXFDaVFNZyZmZWF0dXJlPXlvdXR1LmJlCltody1k
ZW1vXTogaHR0cHM6Ly9naXRodWIuY29tL2hzd29sZmYvbWR4LWRlY2stZGVt
bwpbaGFycnkgd29sZmZdOiBodHRwczovL21vYmlsZS50d2l0dGVyLmNvbS9o
c3dvbGZmCltrcy1lZ2doZWFkXTogaHR0cHM6Ly9lZ2doZWFkLmlvL2xlc3Nv
bnMvamF2YXNjcmlwdC1idWlsZC1hLWN1c3RvbS1wcm92aWRlci1jb21wb25l
bnQtZm9yLW1keC1kZWNrCltreWxlIHNoZXZsaW5dOiBodHRwczovL3R3aXR0
ZXIuY29tL2t5bGVzaGV2bGluCgojIyBEb2NzCgotIFtUaGVtaW5nXShkb2Nz
L3RoZW1pbmcubWQpCi0gW0J1aWx0LWluIFRoZW1lc10oZG9jcy90aGVtZXMu
bWQpCi0gW0xheW91dHNdKGRvY3MvbGF5b3V0cy5tZCkKLSBbQ29tcG9uZW50
c10oZG9jcy9jb21wb25lbnRzLm1kKQotIFtQcmVzZW50aW5nXShkb2NzL3By
ZXNlbnRpbmcubWQpCi0gW0V4cG9ydGluZ10oZG9jcy9leHBvcnRpbmcubWQp
Ci0gW1VzYWdlIHdpdGggR2F0c2J5XShkb2NzL2dhdHNieS5tZCkKLSBbQWR2
YW5jZWQgVXNhZ2VdKGRvY3MvYWR2YW5jZWQubWQpCi0gW0FQSV0oZG9jcy9h
cGkubWQpCgojIyBSZWFsLVdvcmxkIEV4YW1wbGVzCgpTZWUgaG93IG90aGVy
cyBoYXZlIHVzZWQgTURYIERlY2sgZm9yIHRoZWlyIHByZXNlbnRhdGlvbnMu
CgotIFtEZXNpZ24gU3lzdGVtcyAmIFJlYWN0XVtkZXNpZ24tc3lzdGVtcy1y
ZWFjdF0gYnkgW0RpYW5hIE1vdW50ZXJdKGh0dHBzOi8vbW9iaWxlLnR3aXR0
ZXIuY29tL2Jyb2Njb2xpbmkpCi0gW0JyaW5naW5nIEJyYXppbCB0byB0aGUg
Q2xvdWQsIE5vd11bYnJhemlsLW5vd10gYnkgW0d1aWxsZXJtbyBSYXVjaF0o
aHR0cHM6Ly9tb2JpbGUudHdpdHRlci5jb20vcmF1Y2hnLykKLSBbU2ltcGxp
ZnkgUmVhY3RdW3NpbXBsaWZ5LXJlYWN0XSBieSBbS2VudCBDLiBEb2Rkc10o
aHR0cHM6Ly9tb2JpbGUudHdpdHRlci5jb20va2VudGNkb2RkcykKLSBbSSBH
b3QgOTkgUHJvYmxlbXMgYnV0IEdyYXBoUUwgQWluJ3QgT25lXVs5OS1wcm9i
bGVtc10gYnkgW1NhcmEgVmllaXJhXShodHRwczovL21vYmlsZS50d2l0dGVy
LmNvbS9OaWtraXRhRlRXKQotIFtTdG9wIGRlICNkaXZGZXN0XVtzdG9wLWRp
di1mZXN0XSBieSBbU2FyYSBWaWVpcmFdKGh0dHBzOi8vbW9iaWxlLnR3aXR0
ZXIuY29tL05pa2tpdGFGVFcpCi0gW01EWCwgYXV0aG9ycyBhbmQgcmljaGVy
IEpBTXN0YWNrIGNvbnRlbnRdW21keC10YWxrXSBieSBbSm9zaCBEemllbGFr
XShodHRwczovL21vYmlsZS50d2l0dGVyLmNvbS9kemVsbG8pCi0gW0NvbXBv
bmVudHMgYXMgRGF0YTogQSBDcm9zcyBQbGF0Zm9ybSBHcmFwaFFMIFBvd2Vy
ZWQgQ29tcG9uZW50IEFQSV1bY29tcG9uZW50cy1hcy1kYXRhXSBieSBbTHVr
ZSBIZXJyaW5ndG9uXShodHRwczovL21vYmlsZS50d2l0dGVyLmNvbS9sdWtl
aGVycmluZ3RvbikKCiMjIFVzYWdlIEV4YW1wbGVzCgpUaGUgZm9sbG93aW5n
IGV4YW1wbGVzIHdpbGwgb3BlbiBpbiBDb2RlU2FuZGJveC4KCi0gW0Jhc2lj
IEV4YW1wbGVdKGh0dHBzOi8vY29kZXNhbmRib3guaW8vcy9naXRodWIvanhu
YmxrL21keC1kZWNrL3RyZWUvbWFzdGVyL2V4YW1wbGVzL2Jhc2ljKQotIFtN
dWx0aXBsZSBEZWNrc10oaHR0cHM6Ly9jb2Rlc2FuZGJveC5pby9zL2dpdGh1
Yi9qeG5ibGsvbWR4LWRlY2svdHJlZS9tYXN0ZXIvZXhhbXBsZXMvbXVsdGlw
bGUpCi0gW1N5bnRheCBIaWdobGlnaHRpbmddKGh0dHBzOi8vY29kZXNhbmRi
b3guaW8vcy9naXRodWIvanhuYmxrL21keC1kZWNrL3RyZWUvbWFzdGVyL2V4
YW1wbGVzL3N5bnRheC1oaWdobGlnaHRpbmcpCi0gW1ByaXNtIFN5bnRheCBI
aWdobGlnaHRpbmddKGh0dHBzOi8vY29kZXNhbmRib3guaW8vcy9naXRodWIv
anhuYmxrL21keC1kZWNrL3RyZWUvbWFzdGVyL2V4YW1wbGVzL3ByaXNtKQot
IFtBc3BlY3QgUmF0aW9dKGh0dHBzOi8vY29kZXNhbmRib3guaW8vcy9naXRo
dWIvanhuYmxrL21keC1kZWNrL3RyZWUvbWFzdGVyL2V4YW1wbGVzL2FzcGVj
dC1yYXRpbykKLSBbTGF5b3V0c10oaHR0cHM6Ly9jb2Rlc2FuZGJveC5pby9z
L2dpdGh1Yi9qeG5ibGsvbWR4LWRlY2svdHJlZS9tYXN0ZXIvZXhhbXBsZXMv
bGF5b3V0cykKLSBbSW1hZ2VzXShodHRwczovL2NvZGVzYW5kYm94LmlvL3Mv
Z2l0aHViL2p4bmJsay9tZHgtZGVjay90cmVlL21hc3Rlci9leGFtcGxlcy9p
bWFnZXMpCi0gW0FwcGVhcl0oaHR0cHM6Ly9jb2Rlc2FuZGJveC5pby9zL2dp
dGh1Yi9qeG5ibGsvbWR4LWRlY2svdHJlZS9tYXN0ZXIvZXhhbXBsZXMvYXBw
ZWFyKQotIFtIZWFkXShodHRwczovL2NvZGVzYW5kYm94LmlvL3MvZ2l0aHVi
L2p4bmJsay9tZHgtZGVjay90cmVlL21hc3Rlci9leGFtcGxlcy9oZWFkKQot
IFtQcm92aWRlcl0oaHR0cHM6Ly9jb2Rlc2FuZGJveC5pby9zL2dpdGh1Yi9q
eG5ibGsvbWR4LWRlY2svdHJlZS9tYXN0ZXIvZXhhbXBsZXMvcHJvdmlkZXIp
Ci0gW1RoZW1lc10oaHR0cHM6Ly9jb2Rlc2FuZGJveC5pby9zL2dpdGh1Yi9q
eG5ibGsvbWR4LWRlY2svdHJlZS9tYXN0ZXIvZXhhbXBsZXMvdGhlbWVzKQoK
LS0tCgojIyMgUmVsYXRlZAoKLSBbTURYXVtdCi0gW0dhdHNieV1bXQotIFtU
aGVtZSBVSV1bXQotIFtFbW90aW9uXVtdCi0gW1NwZWN0YWNsZV1bXQoKW01J
VCBMaWNlbnNlXShMSUNFTlNFLm1kKQoKW21keF06IGh0dHBzOi8vbWR4anMu
Y29tLwpbZ2F0c2J5XTogaHR0cHM6Ly9nYXRzYnlqcy5vcmcKW3NwZWN0YWNs
ZV06IGh0dHBzOi8vZ2l0aHViLmNvbS9Gb3JtaWRhYmxlTGFicy9zcGVjdGFj
bGUKW2Vtb3Rpb25dOiBodHRwczovL2Vtb3Rpb24uc2gKW3RoZW1lIHVpXTog
aHR0cHM6Ly90aGVtZS11aS5jb20KCjwhLS0gZXhhbXBsZXMgLS0+CltkZXNp
Z24tc3lzdGVtcy1yZWFjdF06IGh0dHBzOi8vZ2l0aHViLWRzLm5vdy5zaC8j
MApbYnJhemlsLW5vd106IGh0dHBzOi8vYnJhemlsanMubm93LnNoCltzaW1w
bGlmeS1yZWFjdF06IGh0dHBzOi8vc2ltcGx5LXJlYWN0Lm5ldGxpZnkuY29t
LyMwCls5OS1wcm9ibGVtc106IGh0dHBzOi8vOTktcHJvYmxlbXMtZ3JhcGhx
bC1haW50LW9uZS5ub3cuc2gvIzAKW3N0b3AtZGl2LWZlc3RdOiBodHRwczov
L3N0b3AtZGl2LWZlc3Qubm93LnNoLwpbbWR4LXRhbGtdOiBodHRwczovL21k
eC10YWxrLmRldmVsb3Blcm1vZGUuY29tLwpbY29tcG9uZW50cy1hcy1kYXRh
XTogaHR0cHM6Ly9jb21wb25lbnRzYXNkYXRhLmx1a2VoZXJyaW5ndG9uLmNv
bQoK
",,8290,"bGFuZ3VhZ2U6IG5vZGVfanMKbm9kZV9qczoKICAtIDEwCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"IyBKYXZhc2NyaXB0IE5vZGUgQ2lyY2xlQ0kgMi4wIGNvbmZpZ3VyYXRpb24g
ZmlsZQojCiMgQ2hlY2sgaHR0cHM6Ly9jaXJjbGVjaS5jb20vZG9jcy8yLjAv
bGFuZ3VhZ2UtamF2YXNjcmlwdC8gZm9yIG1vcmUgZGV0YWlscwojCnZlcnNp
b246IDIKam9iczoKICBidWlsZDoKICAgIGRvY2tlcjoKICAgICAgIyBzcGVj
aWZ5IHRoZSB2ZXJzaW9uIHlvdSBkZXNpcmUgaGVyZQogICAgICAjIC0gaW1h
Z2U6IGNpcmNsZWNpL25vZGU6MTAKICAgICAgLSBpbWFnZTogY3lwcmVzcy9i
YXNlOjEwCgogICAgICAjIFNwZWNpZnkgc2VydmljZSBkZXBlbmRlbmNpZXMg
aGVyZSBpZiBuZWNlc3NhcnkKICAgICAgIyBDaXJjbGVDSSBtYWludGFpbnMg
YSBsaWJyYXJ5IG9mIHByZS1idWlsdCBpbWFnZXMKICAgICAgIyBkb2N1bWVu
dGVkIGF0IGh0dHBzOi8vY2lyY2xlY2kuY29tL2RvY3MvMi4wL2NpcmNsZWNp
LWltYWdlcy8KICAgICAgIyAtIGltYWdlOiBjaXJjbGVjaS9tb25nbzozLjQu
NAoKICAgIHdvcmtpbmdfZGlyZWN0b3J5OiB+L3JlcG8KCiAgICBzdGVwczoK
ICAgICAgLSBjaGVja291dAoKICAgICAgIyBEb3dubG9hZCBhbmQgY2FjaGUg
ZGVwZW5kZW5jaWVzCiAgICAgIC0gcmVzdG9yZV9jYWNoZToKICAgICAgICAg
IGtleXM6CiAgICAgICAgICAgIC0gdjEtZGVwZW5kZW5jaWVzLXt7IGNoZWNr
c3VtICJwYWNrYWdlLmpzb24iIH19CiAgICAgICAgICAgICMgZmFsbGJhY2sg
dG8gdXNpbmcgdGhlIGxhdGVzdCBjYWNoZSBpZiBubyBleGFjdCBtYXRjaCBp
cyBmb3VuZAogICAgICAgICAgICAtIHYxLWRlcGVuZGVuY2llcy0KCiAgICAg
IC0gcnVuOiB5YXJuCgogICAgICAtIHNhdmVfY2FjaGU6CiAgICAgICAgICBw
YXRoczoKICAgICAgICAgICAgLSBub2RlX21vZHVsZXMKICAgICAgICAgIGtl
eTogdjEtZGVwZW5kZW5jaWVzLXt7IGNoZWNrc3VtICJwYWNrYWdlLmpzb24i
IH19CgogICAgICAjIHJ1biB0ZXN0cyEKICAgICAgLSBydW46IHlhcm4gdGVz
dAo=
",,,,,,,,,,,,,,,,,,,,,,,
