name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'ipython',658518,"b'Official repository for IPython itself. Other repos in the IPython organization contain things like the website, documentation builds, etc.'",b'Python',1245,13899,,827,False,b'https://api.github.com/repos/ipython/ipython/forks',"Li4gaW1hZ2U6OiBodHRwczovL2NvZGVjb3YuaW8vZ2l0aHViL2lweXRob24v
aXB5dGhvbi9jb3ZlcmFnZS5zdmc/YnJhbmNoPW1hc3RlcgogICAgOnRhcmdl
dDogaHR0cHM6Ly9jb2RlY292LmlvL2dpdGh1Yi9pcHl0aG9uL2lweXRob24/
YnJhbmNoPW1hc3RlcgoKLi4gaW1hZ2U6OiBodHRwczovL2ltZy5zaGllbGRz
LmlvL3B5cGkvdi9JUHl0aG9uLnN2ZwogICAgOnRhcmdldDogaHR0cHM6Ly9w
eXBpLnB5dGhvbi5vcmcvcHlwaS9pcHl0aG9uCgouLiBpbWFnZTo6IGh0dHBz
Oi8vaW1nLnNoaWVsZHMuaW8vdHJhdmlzL2lweXRob24vaXB5dGhvbi5zdmcK
ICAgIDp0YXJnZXQ6IGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9pcHl0aG9uL2lw
eXRob24KCi4uIGltYWdlOjogaHR0cHM6Ly93d3cuY29kZXRyaWFnZS5jb20v
aXB5dGhvbi9pcHl0aG9uL2JhZGdlcy91c2Vycy5zdmcKICAgIDp0YXJnZXQ6
IGh0dHBzOi8vd3d3LmNvZGV0cmlhZ2UuY29tL2lweXRob24vaXB5dGhvbi8K
Ci4uIGltYWdlOjogaHR0cHM6Ly9yYXN0ZXIuc2hpZWxkcy5pby9iYWRnZS9G
b2xsb3dzLU5FUDI5LWJyaWdodGdyZWVuLnBuZwogICAgOnRhcmdldDogaHR0
cHM6Ly9udW1weS5vcmcvbmVwcy9uZXAtMDAyOS1kZXByZWNhdGlvbl9wb2xp
Y3kuaHRtbAoKCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT0KIElQeXRob246IFByb2R1Y3RpdmUgSW50ZXJhY3RpdmUgQ29t
cHV0aW5nCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT0KCk92ZXJ2aWV3Cj09PT09PT09CgpXZWxjb21lIHRvIElQeXRob24u
ICBPdXIgZnVsbCBkb2N1bWVudGF0aW9uIGlzIGF2YWlsYWJsZSBvbiBgaXB5
dGhvbi5yZWFkdGhlZG9jcy5pbwo8aHR0cHM6Ly9pcHl0aG9uLnJlYWR0aGVk
b2NzLmlvL2VuL3N0YWJsZS8+YF8gYW5kIGNvbnRhaW5zIGluZm9ybWF0aW9u
IG9uIGhvdyB0byBpbnN0YWxsLCB1c2UsIGFuZApjb250cmlidXRlIHRvIHRo
ZSBwcm9qZWN0LgoKKipJUHl0aG9uIHZlcnNpb25zIGFuZCBQeXRob24gU3Vw
cG9ydCoqCgpTdGFydGluZyB3aXRoIElQeXRob24gNy4xMCwgSVB5dGhvbiBm
b2xsb3dzIGBORVAgMjkgPGh0dHBzOi8vbnVtcHkub3JnL25lcHMvbmVwLTAw
MjktZGVwcmVjYXRpb25fcG9saWN5Lmh0bWw+YF8KCioqSVB5dGhvbiA3LjEw
KyoqIHJlcXVpcmVzIFB5dGhvbiB2ZXJzaW9uIDMuNiBhbmQgYWJvdmUuCgoq
KklQeXRob24gNy4wKiogcmVxdWlyZXMgUHl0aG9uIHZlcnNpb24gMy41IGFu
ZCBhYm92ZS4KCioqSVB5dGhvbiA2LngqKiByZXF1aXJlcyBQeXRob24gdmVy
c2lvbiAzLjMgYW5kIGFib3ZlLgoKKipJUHl0aG9uIDUueCBMVFMqKiBpcyB0
aGUgY29tcGF0aWJsZSByZWxlYXNlIGZvciBQeXRob24gMi43LgpJZiB5b3Ug
cmVxdWlyZSBQeXRob24gMiBzdXBwb3J0LCB5b3UgKiptdXN0KiogdXNlIElQ
eXRob24gNS54IExUUy4gUGxlYXNlCnVwZGF0ZSB5b3VyIHByb2plY3QgY29u
ZmlndXJhdGlvbnMgYW5kIHJlcXVpcmVtZW50cyBhcyBuZWNlc3NhcnkuCgoK
VGhlIE5vdGVib29rLCBRdCBjb25zb2xlIGFuZCBhIG51bWJlciBvZiBvdGhl
ciBwaWVjZXMgYXJlIG5vdyBwYXJ0cyBvZiAqSnVweXRlciouClNlZSB0aGUg
YEp1cHl0ZXIgaW5zdGFsbGF0aW9uIGRvY3MgPGh0dHBzOi8vanVweXRlci5y
ZWFkdGhlZG9jcy5pby9lbi9sYXRlc3QvaW5zdGFsbC5odG1sPmBfXwppZiB5
b3Ugd2FudCB0byB1c2UgdGhlc2UuCgoKCgpEZXZlbG9wbWVudCBhbmQgSW5z
dGFudCBydW5uaW5nCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0K
CllvdSBjYW4gZmluZCB0aGUgbGF0ZXN0IHZlcnNpb24gb2YgdGhlIGRldmVs
b3BtZW50IGRvY3VtZW50YXRpb24gb24gYHJlYWR0aGVkb2NzCjxodHRwczov
L2lweXRob24ucmVhZHRoZWRvY3MuaW8vZW4vbGF0ZXN0Lz5gXy4KCllvdSBj
YW4gcnVuIElQeXRob24gZnJvbSB0aGlzIGRpcmVjdG9yeSB3aXRob3V0IGV2
ZW4gaW5zdGFsbGluZyBpdCBzeXN0ZW0td2lkZQpieSB0eXBpbmcgYXQgdGhl
IHRlcm1pbmFsOjoKCiAgICQgcHl0aG9uIC1tIElQeXRob24KCk9yIHNlZSB0
aGUgYGRldmVsb3BtZW50IGluc3RhbGxhdGlvbiBkb2NzCjxodHRwczovL2lw
eXRob24ucmVhZHRoZWRvY3MuaW8vZW4vbGF0ZXN0L2luc3RhbGwvaW5zdGFs
bC5odG1sI2luc3RhbGxpbmctdGhlLWRldmVsb3BtZW50LXZlcnNpb24+YF8K
Zm9yIHRoZSBsYXRlc3QgcmV2aXNpb24gb24gcmVhZCB0aGUgZG9jcy4KCkRv
Y3VtZW50YXRpb24gYW5kIGluc3RhbGxhdGlvbiBpbnN0cnVjdGlvbnMgZm9y
IG9sZGVyIHZlcnNpb24gb2YgSVB5dGhvbiBjYW4gYmUKZm91bmQgb24gdGhl
IGBJUHl0aG9uIHdlYnNpdGUgPGh0dHBzOi8vaXB5dGhvbi5vcmcvZG9jdW1l
bnRhdGlvbi5odG1sPmBfCgoKCklQeXRob24gcmVxdWlyZXMgUHl0aG9uIHZl
cnNpb24gMyBvciBhYm92ZQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT0KClN0YXJ0aW5nIHdpdGggdmVyc2lvbiA2LjAsIElQ
eXRob24gZG9lcyBub3Qgc3VwcG9ydCBQeXRob24gMi43LCAzLjAsIDMuMSwg
b3IKMy4yLgoKRm9yIGEgdmVyc2lvbiBjb21wYXRpYmxlIHdpdGggUHl0aG9u
IDIuNywgcGxlYXNlIGluc3RhbGwgdGhlIDUueCBMVFMgTG9uZyBUZXJtClN1
cHBvcnQgdmVyc2lvbi4KCklmIHlvdSBhcmUgZW5jb3VudGVyaW5nIHRoaXMg
ZXJyb3IgbWVzc2FnZSB5b3UgYXJlIGxpa2VseSB0cnlpbmcgdG8gaW5zdGFs
bCBvcgp1c2UgSVB5dGhvbiBmcm9tIHNvdXJjZS4gWW91IG5lZWQgdG8gY2hl
Y2tvdXQgdGhlIHJlbW90ZSA1LnggYnJhbmNoLiBJZiB5b3UgYXJlCnVzaW5n
IGdpdCB0aGUgZm9sbG93aW5nIHNob3VsZCB3b3JrOjoKCiAgJCBnaXQgZmV0
Y2ggb3JpZ2luCiAgJCBnaXQgY2hlY2tvdXQgNS54CgpJZiB5b3UgZW5jb3Vu
dGVyIHRoaXMgZXJyb3IgbWVzc2FnZSB3aXRoIGEgcmVndWxhciBpbnN0YWxs
IG9mIElQeXRob24sIHRoZW4geW91Cmxpa2VseSBuZWVkIHRvIHVwZGF0ZSB5
b3VyIHBhY2thZ2UgbWFuYWdlciwgZm9yIGV4YW1wbGUgaWYgeW91IGFyZSB1
c2luZyBgcGlwYApjaGVjayB0aGUgdmVyc2lvbiBvZiBwaXAgd2l0aDo6Cgog
ICQgcGlwIC0tdmVyc2lvbgoKWW91IHdpbGwgbmVlZCB0byB1cGRhdGUgcGlw
IHRvIHRoZSB2ZXJzaW9uIDkuMC4xIG9yIGdyZWF0ZXIuIElmIHlvdSBhcmUg
bm90IHVzaW5nCnBpcCwgcGxlYXNlIGlucXVpcnkgd2l0aCB0aGUgbWFpbnRh
aW5lcnMgb2YgdGhlIHBhY2thZ2UgZm9yIHlvdXIgcGFja2FnZQptYW5hZ2Vy
LgoKRm9yIG1vcmUgaW5mb3JtYXRpb24gc2VlIG9uZSBvZiBvdXIgYmxvZyBw
b3N0czoKCiAgICBodHRwczovL2Jsb2cuanVweXRlci5vcmcvcmVsZWFzZS1v
Zi1pcHl0aG9uLTUtMC04Y2U2MGI4ZDJlOGUKCkFzIHdlbGwgYXMgdGhlIGZv
bGxvd2luZyBQdWxsLVJlcXVlc3QgZm9yIGRpc2N1c3Npb246CgogICAgaHR0
cHM6Ly9naXRodWIuY29tL2lweXRob24vaXB5dGhvbi9wdWxsLzk5MDAKClRo
aXMgZXJyb3IgZG9lcyBhbHNvIG9jY3VyIGlmIHlvdSBhcmUgaW52b2tpbmcg
YGBzZXR1cC5weWBgIGRpcmVjdGx5IOKAk8Kgd2hpY2ggeW91CnNob3VsZCBu
b3Qg4oCTwqBvciBhcmUgdXNpbmcgYGBlYXN5X2luc3RhbGxgYCBJZiB0aGlz
IGlzIHRoZSBjYXNlLCB1c2UgYGBwaXAKaW5zdGFsbCAuYGAgaW5zdGVhZCBv
ZiBgYHNldHVwLnB5IGluc3RhbGxgYCAsIGFuZCBgYHBpcCBpbnN0YWxsIC1l
IC5gYCBpbnN0ZWFkCm9mIGBgc2V0dXAucHkgZGV2ZWxvcGBgIElmIHlvdSBh
cmUgZGVwZW5kaW5nIG9uIElQeXRob24gYXMgYSBkZXBlbmRlbmN5IHlvdSBt
YXkKYWxzbyB3YW50IHRvIGhhdmUgYSBjb25kaXRpb25hbCBkZXBlbmRlbmN5
IG9uIElQeXRob24gZGVwZW5kaW5nIG9uIHRoZSBQeXRob24KdmVyc2lvbjo6
CgogICAgaW5zdGFsbF9yZXEgPSBbJ2lweXRob24nXQogICAgaWYgc3lzLnZl
cnNpb25faW5mb1swXSA8IDMgYW5kICdiZGlzdF93aGVlbCcgbm90IGluIHN5
cy5hcmd2OgogICAgICAgIGluc3RhbGxfcmVxLnJlbW92ZSgnaXB5dGhvbicp
CiAgICAgICAgaW5zdGFsbF9yZXEuYXBwZW5kKCdpcHl0aG9uPDYnKQoKICAg
IHNldHVwKAogICAgICAgIC4uLgogICAgICAgIGluc3RhbGxfcmVxdWlyZXM9
aW5zdGFsbF9yZXEKICAgICkKCkFsdGVybmF0aXZlcyB0byBJUHl0aG9uCj09
PT09PT09PT09PT09PT09PT09PT09CgpJUHl0aG9uIG1heSBub3QgYmUgdG8g
eW91ciB0YXN0ZTsgaWYgdGhhdCdzIHRoZSBjYXNlIHRoZXJlIG1pZ2h0IGJl
IHNpbWlsYXIKcHJvamVjdCB0aGF0IHlvdSBtaWdodCB3YW50IHRvIHVzZToK
Ci0gdGhlIGNsYXNzaWMgUHl0aG9uIFJFUEwuCi0gYGJweXRob24gPGh0dHBz
Oi8vYnB5dGhvbi1pbnRlcnByZXRlci5vcmcvPmBfCi0gYG15cHl0aG9uIDxo
dHRwczovL3d3dy5hc21ldXJlci5jb20vbXlweXRob24vPmBfCi0gYHB0cHl0
aG9uIGFuZCBwdGlweXRob24gPGh0dHBzOi8vcHlwaS5vcmcvcHJvamVjdC9w
dHB5dGhvbi8+YAotIGB4b25zaCA8aHR0cHM6Ly94b24uc2gvPmAK
",,13899,"IyBodHRwOi8vdHJhdmlzLWNpLm9yZy8jIS9pcHl0aG9uL2lweXRob24KbGFu
Z3VhZ2U6IHB5dGhvbgpvczogbGludXgKCmFkZG9uczoKICBhcHQ6CiAgICBw
YWNrYWdlczoKICAgICAgLSBncmFwaHZpegoKcHl0aG9uOgogICAgLSAzLjYK
CnN1ZG86IGZhbHNlCgplbnY6CiAgZ2xvYmFsOgogICAgLSBQQVRIPSRUUkFW
SVNfQlVJTERfRElSL3BhbmRvYzokUEFUSAoKZ3JvdXA6IGVkZ2UKCmJlZm9y
ZV9pbnN0YWxsOgogIC0gfAogICAgIyBpbnN0YWxsIFB5dGhvbiBvbiBtYWNP
UwogICAgaWYgW1sgIiRUUkFWSVNfT1NfTkFNRSIgPT0gIm9zeCIgXV07IHRo
ZW4KICAgICAgZW52IHwgc29ydAogICAgICBpZiAhIHdoaWNoIHB5dGhvbiRU
UkFWSVNfUFlUSE9OX1ZFUlNJT047IHRoZW4KICAgICAgICBIT01FQlJFV19O
T19BVVRPX1VQREFURT0xIGJyZXcgdGFwIG1pbnJrL2hvbWVicmV3LXB5dGhv
bi1mcmFtZXdvcmtzCiAgICAgICAgSE9NRUJSRVdfTk9fQVVUT19VUERBVEU9
MSBicmV3IGNhc2sgaW5zdGFsbCBweXRob24tZnJhbWV3b3JrLSR7VFJBVklT
X1BZVEhPTl9WRVJTSU9OLy4vfQogICAgICBmaQogICAgICBweXRob24zIC1t
IHBpcCBpbnN0YWxsIHZpcnR1YWxlbnYKICAgICAgcHl0aG9uMyAtbSB2aXJ0
dWFsZW52IC1wICQod2hpY2ggcHl0aG9uJFRSQVZJU19QWVRIT05fVkVSU0lP
Tikgfi90cmF2aXMtZW52CiAgICAgIHNvdXJjZSB+L3RyYXZpcy1lbnYvYmlu
L2FjdGl2YXRlCiAgICBmaQogIC0gcHl0aG9uIC0tdmVyc2lvbgoKaW5zdGFs
bDoKICAtIHBpcCBpbnN0YWxsIHBpcCAtLXVwZ3JhZGUKICAtIHBpcCBpbnN0
YWxsIHNldHVwdG9vbHMgLS11cGdyYWRlCiAgLSBwaXAgaW5zdGFsbCAtZSBm
aWxlOi8vJFBXRCNlZ2c9aXB5dGhvblt0ZXN0XSAtLXVwZ3JhZGUKICAtIHBp
cCBpbnN0YWxsIHRyaW8gY3VyaW8gLS11cGdyYWRlIC0tdXBncmFkZS1zdHJh
dGVneSBlYWdlcgogIC0gcGlwIGluc3RhbGwgJ3B5dGVzdDw0JyBtYXRwbG90
bGliCiAgLSBwaXAgaW5zdGFsbCBjb2RlY292IGNoZWNrLW1hbmlmZXN0IC0t
dXBncmFkZQoKc2NyaXB0OgogIC0gY2hlY2stbWFuaWZlc3QKICAtIHwKICAg
IGlmIFtbICIkVFJBVklTX1BZVEhPTl9WRVJTSU9OIiA9PSAibmlnaHRseSIg
XV07IHRoZW4KICAgICAgICMgb24gbmlnaHRseSBmYWtlIHBhcnNvIGtub3du
IHRoZSBncmFtbWFyCiAgICAgICBjcCAvaG9tZS90cmF2aXMvdmlydHVhbGVu
di9weXRob24zLjgtZGV2L2xpYi9weXRob24zLjgvc2l0ZS1wYWNrYWdlcy9w
YXJzby9weXRob24vZ3JhbW1hcjM3LnR4dCAvaG9tZS90cmF2aXMvdmlydHVh
bGVudi9weXRob24zLjgtZGV2L2xpYi9weXRob24zLjgvc2l0ZS1wYWNrYWdl
cy9wYXJzby9weXRob24vZ3JhbW1hcjM4LnR4dAogICAgZmkKICAtIGNkIC90
bXAgJiYgaXB0ZXN0IC0tY292ZXJhZ2UgeG1sICYmIGNkIC0KICAtIHB5dGVz
dCBJUHl0aG9uCiAgIyBPbiB0aGUgbGF0ZXN0IFB5dGhvbiAob24gTGludXgp
IG9ubHksIG1ha2Ugc3VyZSB0aGF0IHRoZSBkb2NzIGJ1aWxkLgogIC0gfAog
ICAgaWYgW1sgIiRUUkFWSVNfUFlUSE9OX1ZFUlNJT04iID09ICIzLjciIF1d
ICYmIFtbICIkVFJBVklTX09TX05BTUUiID09ICJsaW51eCIgXV07IHRoZW4K
ICAgICAgcGlwIGluc3RhbGwgLXIgZG9jcy9yZXF1aXJlbWVudHMudHh0CiAg
ICAgIHB5dGhvbiB0b29scy9maXh1cF93aGF0c19uZXdfcHIucHkKICAgICAg
bWFrZSAtQyBkb2NzLyBodG1sIFNQSElOWE9QVFM9Ii1XIgogICAgZmkKCmFm
dGVyX3N1Y2Nlc3M6CiAgLSBjcCAvdG1wL2lweV9jb3ZlcmFnZS54bWwgLi8K
ICAtIGNwIC90bXAvLmNvdmVyYWdlIC4vCiAgLSBjb2RlY292CgptYXRyaXg6
CiAgaW5jbHVkZToKICAgIC0gcHl0aG9uOiAiMy43IgogICAgICBkaXN0OiB4
ZW5pYWwKICAgICAgc3VkbzogdHJ1ZQogICAgLSBweXRob246ICIzLjgtZGV2
IgogICAgICBkaXN0OiB4ZW5pYWwKICAgICAgc3VkbzogdHJ1ZQogICAgLSBw
eXRob246ICIzLjctZGV2IgogICAgICBkaXN0OiB4ZW5pYWwKICAgICAgc3Vk
bzogdHJ1ZQogICAgLSBweXRob246ICJuaWdodGx5IgogICAgICBkaXN0OiB4
ZW5pYWwKICAgICAgc3VkbzogdHJ1ZQogICAgLSBvczogb3N4CiAgICAgIGxh
bmd1YWdlOiBnZW5lcmljCiAgICAgIHB5dGhvbjogMy42CiAgICAgIGVudjog
VFJBVklTX1BZVEhPTl9WRVJTSU9OPTMuNgogICAgLSBvczogb3N4CiAgICAg
IGxhbmd1YWdlOiBnZW5lcmljCiAgICAgIHB5dGhvbjogMy43CiAgICAgIGVu
djogVFJBVklTX1BZVEhPTl9WRVJTSU9OPTMuNwogIGFsbG93X2ZhaWx1cmVz
OgogICAgLSBweXRob246IG5pZ2h0bHkKCmJlZm9yZV9kZXBsb3k6CiAgLSBy
bSAtcmYgZGlzdC8KICAtIHB5dGhvbiBzZXR1cC5weSBzZGlzdAogIC0gcHl0
aG9uIHNldHVwLnB5IGJkaXN0X3doZWVsCgpkZXBsb3k6CiAgcHJvdmlkZXI6
IHJlbGVhc2VzCiAgYXBpX2tleToKICAgIHNlY3VyZTogWS9BZTl0WXM1YW9C
VThiRGpOMllyd0dHNnRDYmV6ai9oM0xjbXR4OEhRYXZTYkJnWG5oblpWUmIy
c25PS0Q3YXVxbnFqZlQvN1FNbTRaeUt2YU9FZ3lnZ0drdEtxRUtZSEM4S09a
N3lwOEk1L1VNRHRrNmo5VG5YcFNxcUJ4UGl1ZDRNRFY3NlNmUllFUWlhRG9H
NHRHR3ZTZlBKOUtjTmpLck52U3l5eG5zPQogIGZpbGU6IGRpc3QvKgogIGZp
bGVfZ2xvYjogdHJ1ZQogIHNraXBfY2xlYW51cDogdHJ1ZQogIG9uOgogICAg
cmVwbzogaXB5dGhvbi9pcHl0aG9uCiAgICBhbGxfYnJhbmNoZXM6IHRydWUg
ICMgQmFja3BvcnRzIGFyZSByZWxlYXNlZCBmcm9tIGUuZy4gNS54IGJyYW5j
aAogICAgdGFnczogdHJ1ZQogICAgcHl0aG9uOiAzLjYgICMgQW55IHZlcnNp
b24gc2hvdWxkIHdvcmssIGJ1dCB3ZSBvbmx5IG5lZWQgb25lCiAgICBjb25k
aXRpb246ICRUUkFWSVNfT1NfTkFNRSA9ICJsaW51eCIK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'ML-From-Scratch',80990461,b'Machine Learning From Scratch. Bare bones NumPy implementations of machine learning models and algorithms with a focus on accessibility. Aims to cover everything from linear regression to deep learning.',b'Python',19,13898,,745,False,b'https://api.github.com/repos/eriklindernoren/ML-From-Scratch/forks',"IyBNYWNoaW5lIExlYXJuaW5nIEZyb20gU2NyYXRjaAoKIyMgQWJvdXQKUHl0
aG9uIGltcGxlbWVudGF0aW9ucyBvZiBzb21lIG9mIHRoZSBmdW5kYW1lbnRh
bCBNYWNoaW5lIExlYXJuaW5nIG1vZGVscyBhbmQgYWxnb3JpdGhtcyBmcm9t
IHNjcmF0Y2guCgpUaGUgcHVycG9zZSBvZiB0aGlzIHByb2plY3QgaXMgbm90
IHRvIHByb2R1Y2UgYXMgb3B0aW1pemVkIGFuZCBjb21wdXRhdGlvbmFsbHkg
ZWZmaWNpZW50IGFsZ29yaXRobXMgYXMgcG9zc2libGUKYnV0IHJhdGhlciB0
byBwcmVzZW50IHRoZSBpbm5lciB3b3JraW5ncyBvZiB0aGVtIGluIGEgdHJh
bnNwYXJlbnQgYW5kIGFjY2Vzc2libGUgd2F5LgoKIyMgVGFibGUgb2YgQ29u
dGVudHMKLSBbTWFjaGluZSBMZWFybmluZyBGcm9tIFNjcmF0Y2hdKCNtYWNo
aW5lLWxlYXJuaW5nLWZyb20tc2NyYXRjaCkKICAqIFtBYm91dF0oI2Fib3V0
KQogICogW1RhYmxlIG9mIENvbnRlbnRzXSgjdGFibGUtb2YtY29udGVudHMp
CiAgKiBbSW5zdGFsbGF0aW9uXSgjaW5zdGFsbGF0aW9uKQogICogW0V4YW1w
bGVzXSgjZXhhbXBsZXMpCiAgICArIFtQb2x5bm9taWFsIFJlZ3Jlc3Npb25d
KCNwb2x5bm9taWFsLXJlZ3Jlc3Npb24pCiAgICArIFtDbGFzc2lmaWNhdGlv
biBXaXRoIENOTl0oI2NsYXNzaWZpY2F0aW9uLXdpdGgtY25uKQogICAgKyBb
RGVuc2l0eS1CYXNlZCBDbHVzdGVyaW5nXSgjZGVuc2l0eS1iYXNlZC1jbHVz
dGVyaW5nKQogICAgKyBbR2VuZXJhdGluZyBIYW5kd3JpdHRlbiBEaWdpdHNd
KCNnZW5lcmF0aW5nLWhhbmR3cml0dGVuLWRpZ2l0cykKICAgICsgW0RlZXAg
UmVpbmZvcmNlbWVudCBMZWFybmluZ10oI2RlZXAtcmVpbmZvcmNlbWVudC1s
ZWFybmluZykKICAgICsgW0ltYWdlIFJlY29uc3RydWN0aW9uIFdpdGggUkJN
XSgjaW1hZ2UtcmVjb25zdHJ1Y3Rpb24td2l0aC1yYm0pCiAgICArIFtFdm9s
dXRpb25hcnkgRXZvbHZlZCBOZXVyYWwgTmV0d29ya10oI2V2b2x1dGlvbmFy
eS1ldm9sdmVkLW5ldXJhbC1uZXR3b3JrKQogICAgKyBbR2VuZXRpYyBBbGdv
cml0aG1dKCNnZW5ldGljLWFsZ29yaXRobSkKICAgICsgW0Fzc29jaWF0aW9u
IEFuYWx5c2lzXSgjYXNzb2NpYXRpb24tYW5hbHlzaXMpCiAgKiBbSW1wbGVt
ZW50YXRpb25zXSgjaW1wbGVtZW50YXRpb25zKQogICAgKyBbU3VwZXJ2aXNl
ZCBMZWFybmluZ10oI3N1cGVydmlzZWQtbGVhcm5pbmcpCiAgICArIFtVbnN1
cGVydmlzZWQgTGVhcm5pbmddKCN1bnN1cGVydmlzZWQtbGVhcm5pbmcpCiAg
ICArIFtSZWluZm9yY2VtZW50IExlYXJuaW5nXSgjcmVpbmZvcmNlbWVudC1s
ZWFybmluZykKICAgICsgW0RlZXAgTGVhcm5pbmddKCNkZWVwLWxlYXJuaW5n
KQogICogW0NvbnRhY3RdKCNjb250YWN0KQoKIyMgSW5zdGFsbGF0aW9uCiAg
ICAkIGdpdCBjbG9uZSBodHRwczovL2dpdGh1Yi5jb20vZXJpa2xpbmRlcm5v
cmVuL01MLUZyb20tU2NyYXRjaAogICAgJCBjZCBNTC1Gcm9tLVNjcmF0Y2gK
ICAgICQgcHl0aG9uIHNldHVwLnB5IGluc3RhbGwKCiMjIEV4YW1wbGVzCiMj
IyBQb2x5bm9taWFsIFJlZ3Jlc3Npb24KICAgICQgcHl0aG9uIG1sZnJvbXNj
cmF0Y2gvZXhhbXBsZXMvcG9seW5vbWlhbF9yZWdyZXNzaW9uLnB5Cgo8cCBh
bGlnbj0iY2VudGVyIj4KICAgIDxpbWcgc3JjPSJodHRwOi8vZXJpa2xpbmRl
cm5vcmVuLnNlL2ltYWdlcy9wX3JlZy5naWYiIHdpZHRoPSI2NDAiXD4KPC9w
Pgo8cCBhbGlnbj0iY2VudGVyIj4KICAgIEZpZ3VyZTogVHJhaW5pbmcgcHJv
Z3Jlc3Mgb2YgYSByZWd1bGFyaXplZCBwb2x5bm9taWFsIHJlZ3Jlc3Npb24g
bW9kZWwgZml0dGluZyA8YnI+CiAgICB0ZW1wZXJhdHVyZSBkYXRhIG1lYXN1
cmVkIGluIExpbmvDtnBpbmcsIFN3ZWRlbiAyMDE2Lgo8L3A+CgojIyMgQ2xh
c3NpZmljYXRpb24gV2l0aCBDTk4KICAgICQgcHl0aG9uIG1sZnJvbXNjcmF0
Y2gvZXhhbXBsZXMvY29udm9sdXRpb25hbF9uZXVyYWxfbmV0d29yay5weQoK
ICAgICstLS0tLS0tLS0rCiAgICB8IENvbnZOZXQgfAogICAgKy0tLS0tLS0t
LSsKICAgIElucHV0IFNoYXBlOiAoMSwgOCwgOCkKICAgICstLS0tLS0tLS0t
LS0tLS0tLS0tLS0tKy0tLS0tLS0tLS0tLSstLS0tLS0tLS0tLS0tLSsKICAg
IHwgTGF5ZXIgVHlwZSAgICAgICAgICAgfCBQYXJhbWV0ZXJzIHwgT3V0cHV0
IFNoYXBlIHwKICAgICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tKy0tLS0tLS0t
LS0tLSstLS0tLS0tLS0tLS0tLSsKICAgIHwgQ29udjJEICAgICAgICAgICAg
ICAgfCAxNjAgICAgICAgIHwgKDE2LCA4LCA4KSAgIHwKICAgIHwgQWN0aXZh
dGlvbiAoUmVMVSkgICAgfCAwICAgICAgICAgIHwgKDE2LCA4LCA4KSAgIHwK
ICAgIHwgRHJvcG91dCAgICAgICAgICAgICAgfCAwICAgICAgICAgIHwgKDE2
LCA4LCA4KSAgIHwKICAgIHwgQmF0Y2hOb3JtYWxpemF0aW9uICAgfCAyMDQ4
ICAgICAgIHwgKDE2LCA4LCA4KSAgIHwKICAgIHwgQ29udjJEICAgICAgICAg
ICAgICAgfCA0NjQwICAgICAgIHwgKDMyLCA4LCA4KSAgIHwKICAgIHwgQWN0
aXZhdGlvbiAoUmVMVSkgICAgfCAwICAgICAgICAgIHwgKDMyLCA4LCA4KSAg
IHwKICAgIHwgRHJvcG91dCAgICAgICAgICAgICAgfCAwICAgICAgICAgIHwg
KDMyLCA4LCA4KSAgIHwKICAgIHwgQmF0Y2hOb3JtYWxpemF0aW9uICAgfCA0
MDk2ICAgICAgIHwgKDMyLCA4LCA4KSAgIHwKICAgIHwgRmxhdHRlbiAgICAg
ICAgICAgICAgfCAwICAgICAgICAgIHwgKDIwNDgsKSAgICAgIHwKICAgIHwg
RGVuc2UgICAgICAgICAgICAgICAgfCA1MjQ1NDQgICAgIHwgKDI1NiwpICAg
ICAgIHwKICAgIHwgQWN0aXZhdGlvbiAoUmVMVSkgICAgfCAwICAgICAgICAg
IHwgKDI1NiwpICAgICAgIHwKICAgIHwgRHJvcG91dCAgICAgICAgICAgICAg
fCAwICAgICAgICAgIHwgKDI1NiwpICAgICAgIHwKICAgIHwgQmF0Y2hOb3Jt
YWxpemF0aW9uICAgfCA1MTIgICAgICAgIHwgKDI1NiwpICAgICAgIHwKICAg
IHwgRGVuc2UgICAgICAgICAgICAgICAgfCAyNTcwICAgICAgIHwgKDEwLCkg
ICAgICAgIHwKICAgIHwgQWN0aXZhdGlvbiAoU29mdG1heCkgfCAwICAgICAg
ICAgIHwgKDEwLCkgICAgICAgIHwKICAgICstLS0tLS0tLS0tLS0tLS0tLS0t
LS0tKy0tLS0tLS0tLS0tLSstLS0tLS0tLS0tLS0tLSsKICAgIFRvdGFsIFBh
cmFtZXRlcnM6IDUzODU3MAoKICAgIFRyYWluaW5nOiAxMDAlIFstLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS1dIFRpbWU6IDA6MDE6NTUKICAgIEFjY3Vy
YWN5OiAwLjk4NzQ2NTE4MTA1OAoKPHAgYWxpZ249ImNlbnRlciI+CiAgICA8
aW1nIHNyYz0iaHR0cDovL2VyaWtsaW5kZXJub3Jlbi5zZS9pbWFnZXMvbWxm
c19jbm4xLnBuZyIgd2lkdGg9IjY0MCI+CjwvcD4KPHAgYWxpZ249ImNlbnRl
ciI+CiAgICBGaWd1cmU6IENsYXNzaWZpY2F0aW9uIG9mIHRoZSBkaWdpdCBk
YXRhc2V0IHVzaW5nIENOTi4KPC9wPgoKIyMjIERlbnNpdHktQmFzZWQgQ2x1
c3RlcmluZwogICAgJCBweXRob24gbWxmcm9tc2NyYXRjaC9leGFtcGxlcy9k
YnNjYW4ucHkKCjxwIGFsaWduPSJjZW50ZXIiPgogICAgPGltZyBzcmM9Imh0
dHA6Ly9lcmlrbGluZGVybm9yZW4uc2UvaW1hZ2VzL21sZnNfZGJzY2FuLnBu
ZyIgd2lkdGg9IjY0MCI+CjwvcD4KPHAgYWxpZ249ImNlbnRlciI+CiAgICBG
aWd1cmU6IENsdXN0ZXJpbmcgb2YgdGhlIG1vb25zIGRhdGFzZXQgdXNpbmcg
REJTQ0FOLgo8L3A+CgojIyMgR2VuZXJhdGluZyBIYW5kd3JpdHRlbiBEaWdp
dHMKICAgICQgcHl0aG9uIG1sZnJvbXNjcmF0Y2gvdW5zdXBlcnZpc2VkX2xl
YXJuaW5nL2dlbmVyYXRpdmVfYWR2ZXJzYXJpYWxfbmV0d29yay5weQoKICAg
ICstLS0tLS0tLS0tLSsKICAgIHwgR2VuZXJhdG9yIHwKICAgICstLS0tLS0t
LS0tLSsKICAgIElucHV0IFNoYXBlOiAoMTAwLCkKICAgICstLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0rLS0tLS0tLS0tLS0tKy0tLS0tLS0tLS0tLS0tKwog
ICAgfCBMYXllciBUeXBlICAgICAgICAgICAgIHwgUGFyYW1ldGVycyB8IE91
dHB1dCBTaGFwZSB8CiAgICArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKy0t
LS0tLS0tLS0tLSstLS0tLS0tLS0tLS0tLSsKICAgIHwgRGVuc2UgICAgICAg
ICAgICAgICAgICB8IDI1ODU2ICAgICAgfCAoMjU2LCkgICAgICAgfAogICAg
fCBBY3RpdmF0aW9uIChMZWFreVJlTFUpIHwgMCAgICAgICAgICB8ICgyNTYs
KSAgICAgICB8CiAgICB8IEJhdGNoTm9ybWFsaXphdGlvbiAgICAgfCA1MTIg
ICAgICAgIHwgKDI1NiwpICAgICAgIHwKICAgIHwgRGVuc2UgICAgICAgICAg
ICAgICAgICB8IDEzMTU4NCAgICAgfCAoNTEyLCkgICAgICAgfAogICAgfCBB
Y3RpdmF0aW9uIChMZWFreVJlTFUpIHwgMCAgICAgICAgICB8ICg1MTIsKSAg
ICAgICB8CiAgICB8IEJhdGNoTm9ybWFsaXphdGlvbiAgICAgfCAxMDI0ICAg
ICAgIHwgKDUxMiwpICAgICAgIHwKICAgIHwgRGVuc2UgICAgICAgICAgICAg
ICAgICB8IDUyNTMxMiAgICAgfCAoMTAyNCwpICAgICAgfAogICAgfCBBY3Rp
dmF0aW9uIChMZWFreVJlTFUpIHwgMCAgICAgICAgICB8ICgxMDI0LCkgICAg
ICB8CiAgICB8IEJhdGNoTm9ybWFsaXphdGlvbiAgICAgfCAyMDQ4ICAgICAg
IHwgKDEwMjQsKSAgICAgIHwKICAgIHwgRGVuc2UgICAgICAgICAgICAgICAg
ICB8IDgwMzYwMCAgICAgfCAoNzg0LCkgICAgICAgfAogICAgfCBBY3RpdmF0
aW9uIChUYW5IKSAgICAgIHwgMCAgICAgICAgICB8ICg3ODQsKSAgICAgICB8
CiAgICArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKy0tLS0tLS0tLS0tLSst
LS0tLS0tLS0tLS0tLSsKICAgIFRvdGFsIFBhcmFtZXRlcnM6IDE0ODk5MzYK
CiAgICArLS0tLS0tLS0tLS0tLS0tKwogICAgfCBEaXNjcmltaW5hdG9yIHwK
ICAgICstLS0tLS0tLS0tLS0tLS0rCiAgICBJbnB1dCBTaGFwZTogKDc4NCwp
CiAgICArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKy0tLS0tLS0tLS0tLSst
LS0tLS0tLS0tLS0tLSsKICAgIHwgTGF5ZXIgVHlwZSAgICAgICAgICAgICB8
IFBhcmFtZXRlcnMgfCBPdXRwdXQgU2hhcGUgfAogICAgKy0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLSstLS0tLS0tLS0tLS0rLS0tLS0tLS0tLS0tLS0rCiAg
ICB8IERlbnNlICAgICAgICAgICAgICAgICAgfCA0MDE5MjAgICAgIHwgKDUx
MiwpICAgICAgIHwKICAgIHwgQWN0aXZhdGlvbiAoTGVha3lSZUxVKSB8IDAg
ICAgICAgICAgfCAoNTEyLCkgICAgICAgfAogICAgfCBEcm9wb3V0ICAgICAg
ICAgICAgICAgIHwgMCAgICAgICAgICB8ICg1MTIsKSAgICAgICB8CiAgICB8
IERlbnNlICAgICAgICAgICAgICAgICAgfCAxMzEzMjggICAgIHwgKDI1Niwp
ICAgICAgIHwKICAgIHwgQWN0aXZhdGlvbiAoTGVha3lSZUxVKSB8IDAgICAg
ICAgICAgfCAoMjU2LCkgICAgICAgfAogICAgfCBEcm9wb3V0ICAgICAgICAg
ICAgICAgIHwgMCAgICAgICAgICB8ICgyNTYsKSAgICAgICB8CiAgICB8IERl
bnNlICAgICAgICAgICAgICAgICAgfCA1MTQgICAgICAgIHwgKDIsKSAgICAg
ICAgIHwKICAgIHwgQWN0aXZhdGlvbiAoU29mdG1heCkgICB8IDAgICAgICAg
ICAgfCAoMiwpICAgICAgICAgfAogICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLSstLS0tLS0tLS0tLS0rLS0tLS0tLS0tLS0tLS0rCiAgICBUb3RhbCBQ
YXJhbWV0ZXJzOiA1MzM3NjIKCgo8cCBhbGlnbj0iY2VudGVyIj4KICAgIDxp
bWcgc3JjPSJodHRwOi8vZXJpa2xpbmRlcm5vcmVuLnNlL2ltYWdlcy9nYW5f
bW5pc3Q1LmdpZiIgd2lkdGg9IjY0MCI+CjwvcD4KPHAgYWxpZ249ImNlbnRl
ciI+CiAgICBGaWd1cmU6IFRyYWluaW5nIHByb2dyZXNzIG9mIGEgR2VuZXJh
dGl2ZSBBZHZlcnNhcmlhbCBOZXR3b3JrIGdlbmVyYXRpbmcgPGJyPgogICAg
aGFuZHdyaXR0ZW4gZGlnaXRzLgo8L3A+CgojIyMgRGVlcCBSZWluZm9yY2Vt
ZW50IExlYXJuaW5nCiAgICAkIHB5dGhvbiBtbGZyb21zY3JhdGNoL2V4YW1w
bGVzL2RlZXBfcV9uZXR3b3JrLnB5CgogICAgKy0tLS0tLS0tLS0tLS0tLS0r
CiAgICB8IERlZXAgUS1OZXR3b3JrIHwKICAgICstLS0tLS0tLS0tLS0tLS0t
KwogICAgSW5wdXQgU2hhcGU6ICg0LCkKICAgICstLS0tLS0tLS0tLS0tLS0t
LS0tKy0tLS0tLS0tLS0tLSstLS0tLS0tLS0tLS0tLSsKICAgIHwgTGF5ZXIg
VHlwZSAgICAgICAgfCBQYXJhbWV0ZXJzIHwgT3V0cHV0IFNoYXBlIHwKICAg
ICstLS0tLS0tLS0tLS0tLS0tLS0tKy0tLS0tLS0tLS0tLSstLS0tLS0tLS0t
LS0tLSsKICAgIHwgRGVuc2UgICAgICAgICAgICAgfCAzMjAgICAgICAgIHwg
KDY0LCkgICAgICAgIHwKICAgIHwgQWN0aXZhdGlvbiAoUmVMVSkgfCAwICAg
ICAgICAgIHwgKDY0LCkgICAgICAgIHwKICAgIHwgRGVuc2UgICAgICAgICAg
ICAgfCAxMzAgICAgICAgIHwgKDIsKSAgICAgICAgIHwKICAgICstLS0tLS0t
LS0tLS0tLS0tLS0tKy0tLS0tLS0tLS0tLSstLS0tLS0tLS0tLS0tLSsKICAg
IFRvdGFsIFBhcmFtZXRlcnM6IDQ1MAoKPHAgYWxpZ249ImNlbnRlciI+CiAg
ICA8aW1nIHNyYz0iaHR0cDovL2VyaWtsaW5kZXJub3Jlbi5zZS9pbWFnZXMv
bWxmc19kcWwxLmdpZiIgd2lkdGg9IjY0MCI+CjwvcD4KPHAgYWxpZ249ImNl
bnRlciI+CiAgICBGaWd1cmU6IERlZXAgUS1OZXR3b3JrIHNvbHV0aW9uIHRv
IHRoZSBDYXJ0UG9sZS12MSBlbnZpcm9ubWVudCBpbiBPcGVuQUkgZ3ltLgo8
L3A+CgojIyMgSW1hZ2UgUmVjb25zdHJ1Y3Rpb24gV2l0aCBSQk0KICAgICQg
cHl0aG9uIG1sZnJvbXNjcmF0Y2gvZXhhbXBsZXMvcmVzdHJpY3RlZF9ib2x0
em1hbm5fbWFjaGluZS5weQoKPHAgYWxpZ249ImNlbnRlciI+CiAgICA8aW1n
IHNyYz0iaHR0cDovL2VyaWtsaW5kZXJub3Jlbi5zZS9pbWFnZXMvcmJtX2Rp
Z2l0czEuZ2lmIiB3aWR0aD0iNjQwIj4KPC9wPgo8cCBhbGlnbj0iY2VudGVy
Ij4KICAgIEZpZ3VyZTogU2hvd3MgaG93IHRoZSBuZXR3b3JrIGdldHMgYmV0
dGVyIGR1cmluZyB0cmFpbmluZyBhdCByZWNvbnN0cnVjdGluZyA8YnI+CiAg
ICB0aGUgZGlnaXQgMiBpbiB0aGUgTU5JU1QgZGF0YXNldC4KPC9wPgoKIyMj
IEV2b2x1dGlvbmFyeSBFdm9sdmVkIE5ldXJhbCBOZXR3b3JrCiAgICAkIHB5
dGhvbiBtbGZyb21zY3JhdGNoL2V4YW1wbGVzL25ldXJvZXZvbHV0aW9uLnB5
CgogICAgKy0tLS0tLS0tLS0tLS0tLSsKICAgIHwgTW9kZWwgU3VtbWFyeSB8
CiAgICArLS0tLS0tLS0tLS0tLS0tKwogICAgSW5wdXQgU2hhcGU6ICg2NCwp
CiAgICArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSstLS0tLS0tLS0tLS0rLS0t
LS0tLS0tLS0tLS0rCiAgICB8IExheWVyIFR5cGUgICAgICAgICAgIHwgUGFy
YW1ldGVycyB8IE91dHB1dCBTaGFwZSB8CiAgICArLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLSstLS0tLS0tLS0tLS0rLS0tLS0tLS0tLS0tLS0rCiAgICB8IERl
bnNlICAgICAgICAgICAgICAgIHwgMTA0MCAgICAgICB8ICgxNiwpICAgICAg
ICB8CiAgICB8IEFjdGl2YXRpb24gKFJlTFUpICAgIHwgMCAgICAgICAgICB8
ICgxNiwpICAgICAgICB8CiAgICB8IERlbnNlICAgICAgICAgICAgICAgIHwg
MTcwICAgICAgICB8ICgxMCwpICAgICAgICB8CiAgICB8IEFjdGl2YXRpb24g
KFNvZnRtYXgpIHwgMCAgICAgICAgICB8ICgxMCwpICAgICAgICB8CiAgICAr
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLSstLS0tLS0tLS0tLS0rLS0tLS0tLS0t
LS0tLS0rCiAgICBUb3RhbCBQYXJhbWV0ZXJzOiAxMjEwCgogICAgUG9wdWxh
dGlvbiBTaXplOiAxMDAKICAgIEdlbmVyYXRpb25zOiAzMDAwCiAgICBNdXRh
dGlvbiBSYXRlOiAwLjAxCgogICAgWzAgQmVzdCBJbmRpdmlkdWFsIC0gRml0
bmVzczogMy4wODMwMSwgQWNjdXJhY3k6IDEwLjUlXQogICAgWzEgQmVzdCBJ
bmRpdmlkdWFsIC0gRml0bmVzczogMy4wODc0NiwgQWNjdXJhY3k6IDEyLjAl
XQogICAgLi4uCiAgICBbMjk5OSBCZXN0IEluZGl2aWR1YWwgLSBGaXRuZXNz
OiA5NC4wODUxMywgQWNjdXJhY3k6IDk4LjUlXQogICAgVGVzdCBzZXQgYWNj
dXJhY3k6IDk2LjclCgo8cCBhbGlnbj0iY2VudGVyIj4KICAgIDxpbWcgc3Jj
PSJodHRwOi8vZXJpa2xpbmRlcm5vcmVuLnNlL2ltYWdlcy9ldm9fbm40LnBu
ZyIgd2lkdGg9IjY0MCI+CjwvcD4KPHAgYWxpZ249ImNlbnRlciI+CiAgICBG
aWd1cmU6IENsYXNzaWZpY2F0aW9uIG9mIHRoZSBkaWdpdCBkYXRhc2V0IGJ5
IGEgbmV1cmFsIG5ldHdvcmsgd2hpY2ggaGFzPGJyPgogICAgYmVlbiBldm9s
dXRpb25hcnkgZXZvbHZlZC4KPC9wPgoKIyMjIEdlbmV0aWMgQWxnb3JpdGht
CiAgICAkIHB5dGhvbiBtbGZyb21zY3JhdGNoL2V4YW1wbGVzL2dlbmV0aWNf
YWxnb3JpdGhtLnB5CgogICAgKy0tLS0tLS0tKwogICAgfCAgIEdBICAgfAog
ICAgKy0tLS0tLS0tKwogICAgRGVzY3JpcHRpb246IEltcGxlbWVudGF0aW9u
IG9mIGEgR2VuZXRpYyBBbGdvcml0aG0gd2hpY2ggYWltcyB0byBwcm9kdWNl
CiAgICB0aGUgdXNlciBzcGVjaWZpZWQgdGFyZ2V0IHN0cmluZy4gVGhpcyBp
bXBsZW1lbnRhdGlvbiBjYWxjdWxhdGVzIGVhY2gKICAgIGNhbmRpZGF0ZSdz
IGZpdG5lc3MgYmFzZWQgb24gdGhlIGFscGhhYmV0aWNhbCBkaXN0YW5jZSBi
ZXR3ZWVuIHRoZSBjYW5kaWRhdGUKICAgIGFuZCB0aGUgdGFyZ2V0LiBBIGNh
bmRpZGF0ZSBpcyBzZWxlY3RlZCBhcyBhIHBhcmVudCB3aXRoIHByb2JhYmls
aXRpZXMgcHJvcG9ydGlvbmFsCiAgICB0byB0aGUgY2FuZGlkYXRlJ3MgZml0
bmVzcy4gUmVwcm9kdWN0aW9uIGlzIGltcGxlbWVudGVkIGFzIGEgc2luZ2xl
LXBvaW50CiAgICBjcm9zc292ZXIgYmV0d2VlbiBwYWlycyBvZiBwYXJlbnRz
LiBNdXRhdGlvbiBpcyBkb25lIGJ5IHJhbmRvbWx5IGFzc2lnbmluZwogICAg
bmV3IGNoYXJhY3RlcnMgd2l0aCB1bmlmb3JtIHByb2JhYmlsaXR5LgoKICAg
IFBhcmFtZXRlcnMKICAgIC0tLS0tLS0tLS0KICAgIFRhcmdldCBTdHJpbmc6
ICdHZW5ldGljIEFsZ29yaXRobScKICAgIFBvcHVsYXRpb24gU2l6ZTogMTAw
CiAgICBNdXRhdGlvbiBSYXRlOiAwLjA1CgogICAgWzAgQ2xvc2VzdCBDYW5k
aWRhdGU6ICdDSnFsSmd1UGxxenZwb0ptYicsIEZpdG5lc3M6IDAuMDBdCiAg
ICBbMSBDbG9zZXN0IENhbmRpZGF0ZTogJ01DeFp4ZHIgbmxmaXd3R0VrJywg
Rml0bmVzczogMC4wMV0KICAgIFsyIENsb3Nlc3QgQ2FuZGlkYXRlOiAnTUN4
WnhkbSBubGZpd3dHY3gnLCBGaXRuZXNzOiAwLjAxXQogICAgWzMgQ2xvc2Vz
dCBDYW5kaWRhdGU6ICdTbWRzQWtsTUhuIGtCSXdLbicsIEZpdG5lc3M6IDAu
MDFdCiAgICBbNCBDbG9zZXN0IENhbmRpZGF0ZTogJyAgbG90bmVhSk9hc1dm
dSBaJywgRml0bmVzczogMC4wMV0KICAgIC4uLgogICAgWzI5MiBDbG9zZXN0
IENhbmRpZGF0ZTogJ0dlbmV0aWNhQWxnb3JpdGhtJywgRml0bmVzczogMS4w
MF0KICAgIFsyOTMgQ2xvc2VzdCBDYW5kaWRhdGU6ICdHZW5ldGljYUFsZ29y
aXRobScsIEZpdG5lc3M6IDEuMDBdCiAgICBbMjk0IEFuc3dlcjogJ0dlbmV0
aWMgQWxnb3JpdGhtJ10KCiMjIyBBc3NvY2lhdGlvbiBBbmFseXNpcwogICAg
JCBweXRob24gbWxmcm9tc2NyYXRjaC9leGFtcGxlcy9hcHJpb3JpLnB5CiAg
ICArLS0tLS0tLS0tLS0tLSsKICAgIHwgICBBcHJpb3JpICAgfAogICAgKy0t
LS0tLS0tLS0tLS0rCiAgICBNaW5pbXVtIFN1cHBvcnQ6IDAuMjUKICAgIE1p
bmltdW0gQ29uZmlkZW5jZTogMC44CiAgICBUcmFuc2FjdGlvbnM6CiAgICAg
ICAgWzEsIDIsIDMsIDRdCiAgICAgICAgWzEsIDIsIDRdCiAgICAgICAgWzEs
IDJdCiAgICAgICAgWzIsIDMsIDRdCiAgICAgICAgWzIsIDNdCiAgICAgICAg
WzMsIDRdCiAgICAgICAgWzIsIDRdCiAgICBGcmVxdWVudCBJdGVtc2V0czoK
ICAgICAgICBbMSwgMiwgMywgNCwgWzEsIDJdLCBbMSwgNF0sIFsyLCAzXSwg
WzIsIDRdLCBbMywgNF0sIFsxLCAyLCA0XSwgWzIsIDMsIDRdXQogICAgUnVs
ZXM6CiAgICAgICAgMSAtPiAyIChzdXBwb3J0OiAwLjQzLCBjb25maWRlbmNl
OiAxLjApCiAgICAgICAgNCAtPiAyIChzdXBwb3J0OiAwLjU3LCBjb25maWRl
bmNlOiAwLjgpCiAgICAgICAgWzEsIDRdIC0+IDIgKHN1cHBvcnQ6IDAuMjks
IGNvbmZpZGVuY2U6IDEuMCkKCgojIyBJbXBsZW1lbnRhdGlvbnMKIyMjIFN1
cGVydmlzZWQgTGVhcm5pbmcKLSBbQWRhYm9vc3RdKG1sZnJvbXNjcmF0Y2gv
c3VwZXJ2aXNlZF9sZWFybmluZy9hZGFib29zdC5weSkKLSBbQmF5ZXNpYW4g
UmVncmVzc2lvbl0obWxmcm9tc2NyYXRjaC9zdXBlcnZpc2VkX2xlYXJuaW5n
L2JheWVzaWFuX3JlZ3Jlc3Npb24ucHkpCi0gW0RlY2lzaW9uIFRyZWVdKG1s
ZnJvbXNjcmF0Y2gvc3VwZXJ2aXNlZF9sZWFybmluZy9kZWNpc2lvbl90cmVl
LnB5KQotIFtFbGFzdGljIE5ldF0obWxmcm9tc2NyYXRjaC9zdXBlcnZpc2Vk
X2xlYXJuaW5nL3JlZ3Jlc3Npb24ucHkpCi0gW0dyYWRpZW50IEJvb3N0aW5n
XShtbGZyb21zY3JhdGNoL3N1cGVydmlzZWRfbGVhcm5pbmcvZ3JhZGllbnRf
Ym9vc3RpbmcucHkpCi0gW0sgTmVhcmVzdCBOZWlnaGJvcnNdKG1sZnJvbXNj
cmF0Y2gvc3VwZXJ2aXNlZF9sZWFybmluZy9rX25lYXJlc3RfbmVpZ2hib3Jz
LnB5KQotIFtMYXNzbyBSZWdyZXNzaW9uXShtbGZyb21zY3JhdGNoL3N1cGVy
dmlzZWRfbGVhcm5pbmcvcmVncmVzc2lvbi5weSkKLSBbTGluZWFyIERpc2Ny
aW1pbmFudCBBbmFseXNpc10obWxmcm9tc2NyYXRjaC9zdXBlcnZpc2VkX2xl
YXJuaW5nL2xpbmVhcl9kaXNjcmltaW5hbnRfYW5hbHlzaXMucHkpCi0gW0xp
bmVhciBSZWdyZXNzaW9uXShtbGZyb21zY3JhdGNoL3N1cGVydmlzZWRfbGVh
cm5pbmcvcmVncmVzc2lvbi5weSkKLSBbTG9naXN0aWMgUmVncmVzc2lvbl0o
bWxmcm9tc2NyYXRjaC9zdXBlcnZpc2VkX2xlYXJuaW5nL2xvZ2lzdGljX3Jl
Z3Jlc3Npb24ucHkpCi0gW011bHRpLWNsYXNzIExpbmVhciBEaXNjcmltaW5h
bnQgQW5hbHlzaXNdKG1sZnJvbXNjcmF0Y2gvc3VwZXJ2aXNlZF9sZWFybmlu
Zy9tdWx0aV9jbGFzc19sZGEucHkpCi0gW011bHRpbGF5ZXIgUGVyY2VwdHJv
bl0obWxmcm9tc2NyYXRjaC9zdXBlcnZpc2VkX2xlYXJuaW5nL211bHRpbGF5
ZXJfcGVyY2VwdHJvbi5weSkKLSBbTmFpdmUgQmF5ZXNdKG1sZnJvbXNjcmF0
Y2gvc3VwZXJ2aXNlZF9sZWFybmluZy9uYWl2ZV9iYXllcy5weSkKLSBbTmV1
cm9ldm9sdXRpb25dKG1sZnJvbXNjcmF0Y2gvc3VwZXJ2aXNlZF9sZWFybmlu
Zy9uZXVyb2V2b2x1dGlvbi5weSkKLSBbUGFydGljbGUgU3dhcm0gT3B0aW1p
emF0aW9uIG9mIE5ldXJhbCBOZXR3b3JrXShtbGZyb21zY3JhdGNoL3N1cGVy
dmlzZWRfbGVhcm5pbmcvcGFydGljbGVfc3dhcm1fb3B0aW1pemF0aW9uLnB5
KQotIFtQZXJjZXB0cm9uXShtbGZyb21zY3JhdGNoL3N1cGVydmlzZWRfbGVh
cm5pbmcvcGVyY2VwdHJvbi5weSkKLSBbUG9seW5vbWlhbCBSZWdyZXNzaW9u
XShtbGZyb21zY3JhdGNoL3N1cGVydmlzZWRfbGVhcm5pbmcvcmVncmVzc2lv
bi5weSkKLSBbUmFuZG9tIEZvcmVzdF0obWxmcm9tc2NyYXRjaC9zdXBlcnZp
c2VkX2xlYXJuaW5nL3JhbmRvbV9mb3Jlc3QucHkpCi0gW1JpZGdlIFJlZ3Jl
c3Npb25dKG1sZnJvbXNjcmF0Y2gvc3VwZXJ2aXNlZF9sZWFybmluZy9yZWdy
ZXNzaW9uLnB5KQotIFtTdXBwb3J0IFZlY3RvciBNYWNoaW5lXShtbGZyb21z
Y3JhdGNoL3N1cGVydmlzZWRfbGVhcm5pbmcvc3VwcG9ydF92ZWN0b3JfbWFj
aGluZS5weSkKLSBbWEdCb29zdF0obWxmcm9tc2NyYXRjaC9zdXBlcnZpc2Vk
X2xlYXJuaW5nL3hnYm9vc3QucHkpCgojIyMgVW5zdXBlcnZpc2VkIExlYXJu
aW5nCi0gW0FwcmlvcmldKG1sZnJvbXNjcmF0Y2gvdW5zdXBlcnZpc2VkX2xl
YXJuaW5nL2FwcmlvcmkucHkpCi0gW0F1dG9lbmNvZGVyXShtbGZyb21zY3Jh
dGNoL3Vuc3VwZXJ2aXNlZF9sZWFybmluZy9hdXRvZW5jb2Rlci5weSkKLSBb
REJTQ0FOXShtbGZyb21zY3JhdGNoL3Vuc3VwZXJ2aXNlZF9sZWFybmluZy9k
YnNjYW4ucHkpCi0gW0ZQLUdyb3d0aF0obWxmcm9tc2NyYXRjaC91bnN1cGVy
dmlzZWRfbGVhcm5pbmcvZnBfZ3Jvd3RoLnB5KQotIFtHYXVzc2lhbiBNaXh0
dXJlIE1vZGVsXShtbGZyb21zY3JhdGNoL3Vuc3VwZXJ2aXNlZF9sZWFybmlu
Zy9nYXVzc2lhbl9taXh0dXJlX21vZGVsLnB5KQotIFtHZW5lcmF0aXZlIEFk
dmVyc2FyaWFsIE5ldHdvcmtdKG1sZnJvbXNjcmF0Y2gvdW5zdXBlcnZpc2Vk
X2xlYXJuaW5nL2dlbmVyYXRpdmVfYWR2ZXJzYXJpYWxfbmV0d29yay5weSkK
LSBbR2VuZXRpYyBBbGdvcml0aG1dKG1sZnJvbXNjcmF0Y2gvdW5zdXBlcnZp
c2VkX2xlYXJuaW5nL2dlbmV0aWNfYWxnb3JpdGhtLnB5KQotIFtLLU1lYW5z
XShtbGZyb21zY3JhdGNoL3Vuc3VwZXJ2aXNlZF9sZWFybmluZy9rX21lYW5z
LnB5KQotIFtQYXJ0aXRpb25pbmcgQXJvdW5kIE1lZG9pZHNdKG1sZnJvbXNj
cmF0Y2gvdW5zdXBlcnZpc2VkX2xlYXJuaW5nL3BhcnRpdGlvbmluZ19hcm91
bmRfbWVkb2lkcy5weSkKLSBbUHJpbmNpcGFsIENvbXBvbmVudCBBbmFseXNp
c10obWxmcm9tc2NyYXRjaC91bnN1cGVydmlzZWRfbGVhcm5pbmcvcHJpbmNp
cGFsX2NvbXBvbmVudF9hbmFseXNpcy5weSkKLSBbUmVzdHJpY3RlZCBCb2x0
em1hbm4gTWFjaGluZV0obWxmcm9tc2NyYXRjaC91bnN1cGVydmlzZWRfbGVh
cm5pbmcvcmVzdHJpY3RlZF9ib2x0em1hbm5fbWFjaGluZS5weSkKCiMjIyBS
ZWluZm9yY2VtZW50IExlYXJuaW5nCi0gW0RlZXAgUS1OZXR3b3JrXShtbGZy
b21zY3JhdGNoL3JlaW5mb3JjZW1lbnRfbGVhcm5pbmcvZGVlcF9xX25ldHdv
cmsucHkpCgojIyMgRGVlcCBMZWFybmluZwogICsgW05ldXJhbCBOZXR3b3Jr
XShtbGZyb21zY3JhdGNoL2RlZXBfbGVhcm5pbmcvbmV1cmFsX25ldHdvcmsu
cHkpCiAgKyBbTGF5ZXJzXShtbGZyb21zY3JhdGNoL2RlZXBfbGVhcm5pbmcv
bGF5ZXJzLnB5KQogICAgKiBBY3RpdmF0aW9uIExheWVyCiAgICAqIEF2ZXJh
Z2UgUG9vbGluZyBMYXllcgogICAgKiBCYXRjaCBOb3JtYWxpemF0aW9uIExh
eWVyCiAgICAqIENvbnN0YW50IFBhZGRpbmcgTGF5ZXIKICAgICogQ29udm9s
dXRpb25hbCBMYXllcgogICAgKiBEcm9wb3V0IExheWVyCiAgICAqIEZsYXR0
ZW4gTGF5ZXIKICAgICogRnVsbHktQ29ubmVjdGVkIChEZW5zZSkgTGF5ZXIK
ICAgICogRnVsbHktQ29ubmVjdGVkIFJOTiBMYXllcgogICAgKiBNYXggUG9v
bGluZyBMYXllcgogICAgKiBSZXNoYXBlIExheWVyCiAgICAqIFVwIFNhbXBs
aW5nIExheWVyCiAgICAqIFplcm8gUGFkZGluZyBMYXllcgogICsgTW9kZWwg
VHlwZXMKICAgICogW0NvbnZvbHV0aW9uYWwgTmV1cmFsIE5ldHdvcmtdKG1s
ZnJvbXNjcmF0Y2gvZXhhbXBsZXMvY29udm9sdXRpb25hbF9uZXVyYWxfbmV0
d29yay5weSkKICAgICogW011bHRpbGF5ZXIgUGVyY2VwdHJvbl0obWxmcm9t
c2NyYXRjaC9leGFtcGxlcy9tdWx0aWxheWVyX3BlcmNlcHRyb24ucHkpCiAg
ICAqIFtSZWN1cnJlbnQgTmV1cmFsIE5ldHdvcmtdKG1sZnJvbXNjcmF0Y2gv
ZXhhbXBsZXMvcmVjdXJyZW50X25ldXJhbF9uZXR3b3JrLnB5KQoKIyMgQ29u
dGFjdApJZiB0aGVyZSdzIHNvbWUgaW1wbGVtZW50YXRpb24geW91IHdvdWxk
IGxpa2UgdG8gc2VlIGhlcmUgb3IgaWYgeW91J3JlIGp1c3QgZmVlbGluZyBz
b2NpYWwsCmZlZWwgZnJlZSB0byBbZW1haWxdKG1haWx0bzplcmlrbGluZGVy
bm9yZW5AZ21haWwuY29tKSBtZSBvciBjb25uZWN0IHdpdGggbWUgb24gW0xp
bmtlZEluXShodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vZXJpa2xpbmRl
cm5vcmVuLykuCg==
",,13898,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'professional-programming',45723377,b'A collection of full-stack resources for programmers.',b'Shell',1,13892,,535,False,b'https://api.github.com/repos/charlax/professional-programming/forks',"PCEtLSBTVEFSVCBkb2N0b2MgZ2VuZXJhdGVkIFRPQyBwbGVhc2Uga2VlcCBj
b21tZW50IGhlcmUgdG8gYWxsb3cgYXV0byB1cGRhdGUgLS0+CjwhLS0gRE9O
J1QgRURJVCBUSElTIFNFQ1RJT04sIElOU1RFQUQgUkUtUlVOIGRvY3RvYyBU
TyBVUERBVEUgLS0+CiMgVGFibGUgb2YgQ29udGVudHMKCi0gW1Byb2Zlc3Np
b25hbCBQcm9ncmFtbWluZ10oI3Byb2Zlc3Npb25hbC1wcm9ncmFtbWluZykK
ICAtIFtDb250cmlidXRpbmcgdG8gdGhpcyBsaXN0XSgjY29udHJpYnV0aW5n
LXRvLXRoaXMtbGlzdCkKICAtIFtNdXN0LXJlYWQgYm9va3NdKCNtdXN0LXJl
YWQtYm9va3MpCiAgLSBbTXVzdC1yZWFkIGFydGljbGVzXSgjbXVzdC1yZWFk
LWFydGljbGVzKQogIC0gW090aGVyIGdlbmVyYWwgbWF0ZXJpYWwgYW5kIGxp
c3Qgb2YgcmVzb3VyY2VzXSgjb3RoZXItZ2VuZXJhbC1tYXRlcmlhbC1hbmQt
bGlzdC1vZi1yZXNvdXJjZXMpCiAgICAtIFtDb3Vyc2VzXSgjY291cnNlcykK
ICAtIFtUb3BpY3NdKCN0b3BpY3MpCiAgICAtIFtBbGdvcml0aG0gYW5kIGRh
dGEgc3RydWN0dXJlc10oI2FsZ29yaXRobS1hbmQtZGF0YS1zdHJ1Y3R1cmVz
KQogICAgLSBbQVBJIGRlc2lnbl0oI2FwaS1kZXNpZ24pCiAgICAtIFtBdHRp
dHVkZSwgaGFiaXRzLCBtaW5kc2V0XSgjYXR0aXR1ZGUtaGFiaXRzLW1pbmRz
ZXQpCiAgICAtIFtBdXRvbWF0aW9uXSgjYXV0b21hdGlvbikKICAgIC0gW0Jp
YXNlc10oI2JpYXNlcykKICAgIC0gW0NhcmVlciBncm93dGhdKCNjYXJlZXIt
Z3Jvd3RoKQogICAgLSBbQ2hhcmFjdGVycyBzZXRzXSgjY2hhcmFjdGVycy1z
ZXRzKQogICAgLSBbQ29kaW5nICYgY29kZSBxdWFsaXR5XSgjY29kaW5nLS1j
b2RlLXF1YWxpdHkpCiAgICAtIFtDb21wdXRlciBzY2llbmNlXSgjY29tcHV0
ZXItc2NpZW5jZSkKICAgIC0gW0NvbmZpZ3VyYXRpb25dKCNjb25maWd1cmF0
aW9uKQogICAgLSBbRGF0YWJhc2VzXSgjZGF0YWJhc2VzKQogICAgLSBbRGF0
YSBmb3JtYXRzXSgjZGF0YS1mb3JtYXRzKQogICAgLSBbRGF0YSBzY2llbmNl
XSgjZGF0YS1zY2llbmNlKQogICAgLSBbRGVidWdnaW5nXSgjZGVidWdnaW5n
KQogICAgLSBbRGVzaWduICh2aXN1YWwsIFVYLCBVSSldKCNkZXNpZ24tdmlz
dWFsLXV4LXVpKQogICAgLSBbRGVzaWduIChPTyBtb2RlbGluZywgYXJjaGl0
ZWN0dXJlLCBwYXR0ZXJucywgYW50aS1wYXR0ZXJucywgZXRjLildKCNkZXNp
Z24tb28tbW9kZWxpbmctYXJjaGl0ZWN0dXJlLXBhdHRlcm5zLWFudGktcGF0
dGVybnMtZXRjKQogICAgICAtIFtEZXNpZ246IHNpbXBsaWNpdHldKCNkZXNp
Z24tc2ltcGxpY2l0eSkKICAgIC0gW0RldiBlbnZpcm9ubWVudCAmIHRvb2xz
XSgjZGV2LWVudmlyb25tZW50LS10b29scykKICAgIC0gW0RpdmVyc2l0eSAm
IGluY2x1c2lvbl0oI2RpdmVyc2l0eS0taW5jbHVzaW9uKQogICAgLSBbRG9j
dW1lbnRhdGlvbl0oI2RvY3VtZW50YXRpb24pCiAgICAtIFtEb3RmaWxlc10o
I2RvdGZpbGVzKQogICAgLSBbRWRpdG9ycyAmIElERV0oI2VkaXRvcnMtLWlk
ZSkKICAgIC0gW0VuZ2luZWVyaW5nIG1hbmFnZW1lbnRdKCNlbmdpbmVlcmlu
Zy1tYW5hZ2VtZW50KQogICAgLSBbRXhlcmNpc2VzXSgjZXhlcmNpc2VzKQog
ICAgLSBbSW5jaWRlbnQgcmVzcG9uc2UgKGFsZXJ0aW5nLCBvdXRhZ2VzLCBm
aXJlZmlnaHRpbmcpXSgjaW5jaWRlbnQtcmVzcG9uc2UtYWxlcnRpbmctb3V0
YWdlcy1maXJlZmlnaHRpbmcpCiAgICAtIFtJbnRlcm5ldF0oI2ludGVybmV0
KQogICAgLSBbSW50ZXJ2aWV3aW5nXSgjaW50ZXJ2aWV3aW5nKQogICAgLSBb
TGVhcm5pbmcgJiBtZW1vcml6aW5nXSgjbGVhcm5pbmctLW1lbW9yaXppbmcp
CiAgICAtIFtMb3ctbGV2ZWxdKCNsb3ctbGV2ZWwpCiAgICAtIFtOZXR3b3Jr
XSgjbmV0d29yaykKICAgIC0gW1Byb2JsZW0gc29sdmluZ10oI3Byb2JsZW0t
c29sdmluZykKICAgIC0gW1Byb2plY3QgbWFuYWdlbWVudF0oI3Byb2plY3Qt
bWFuYWdlbWVudCkKICAgIC0gW1Byb2dyYW1taW5nIGxhbmd1YWdlc10oI3By
b2dyYW1taW5nLWxhbmd1YWdlcykKICAgICAgLSBbUHl0aG9uXSgjcHl0aG9u
KQogICAgICAtIFtKYXZhU2NyaXB0XSgjamF2YXNjcmlwdCkKICAgICAgLSBb
RlAgdnMuIE9PUF0oI2ZwLXZzLW9vcCkKICAgIC0gW092ZXItZW5naW5lZXJp
bmddKCNvdmVyLWVuZ2luZWVyaW5nKQogICAgLSBbUmVhZGluZ10oI3JlYWRp
bmcpCiAgICAtIFtSZWxlYXNpbmcgJiBkZXBsb3lpbmddKCNyZWxlYXNpbmct
LWRlcGxveWluZykKICAgIC0gW1NlY3VyaXR5XSgjc2VjdXJpdHkpCiAgICAt
IFtTaGVsbF0oI3NoZWxsKQogICAgLSBbU3lzdGVtIGFyY2hpdGVjdHVyZV0o
I3N5c3RlbS1hcmNoaXRlY3R1cmUpCiAgICAgIC0gW1NjYWxhYmlsaXR5XSgj
c2NhbGFiaWxpdHkpCiAgICAgIC0gW1N0YWJpbGl0eV0oI3N0YWJpbGl0eSkK
ICAgICAgLSBbUmVzaWxpZW5jeV0oI3Jlc2lsaWVuY3kpCiAgICAtIFtTaXRl
IFJlbGlhYmlsaXR5IEVuZ2luZWVyaW5nIChTUkUpXSgjc2l0ZS1yZWxpYWJp
bGl0eS1lbmdpbmVlcmluZy1zcmUpCiAgICAtIFtUZWNobmljYWwgZGVidF0o
I3RlY2huaWNhbC1kZWJ0KQogICAgLSBbVGVzdGluZ10oI3Rlc3RpbmcpCiAg
ICAtIFtUb29sc10oI3Rvb2xzKQogICAgLSBbVmVyc2lvbiBjb250cm9sIChH
aXQpXSgjdmVyc2lvbi1jb250cm9sLWdpdCkKICAgIC0gW1dvcmsgZXRoaWNz
LCBwcm9kdWN0aXZpdHkgJiB3b3JrL2xpZmUgYmFsYW5jZV0oI3dvcmstZXRo
aWNzLXByb2R1Y3Rpdml0eS0td29ya2xpZmUtYmFsYW5jZSkKICAgIC0gW1dl
YiBkZXZlbG9wbWVudF0oI3dlYi1kZXZlbG9wbWVudCkKICAgIC0gW1dyaXRp
bmddKCN3cml0aW5nKQogICAgLSBbV3JpdGluZyBmb3IgcGVyZm9ybWFuY2Vd
KCN3cml0aW5nLWZvci1wZXJmb3JtYW5jZSkKICAtIFtDb25jZXB0c10oI2Nv
bmNlcHRzKQoKPCEtLSBFTkQgZG9jdG9jIGdlbmVyYXRlZCBUT0MgcGxlYXNl
IGtlZXAgY29tbWVudCBoZXJlIHRvIGFsbG93IGF1dG8gdXBkYXRlIC0tPgoK
IyBQcm9mZXNzaW9uYWwgUHJvZ3JhbW1pbmcKCj4gR2l2ZSBtZSBzaXggaG91
cnMgdG8gY2hvcCBkb3duIGEgdHJlZSBhbmQgSSB3aWxsIHNwZW5kIHRoZSBm
aXJzdCBmb3VyIHNoYXJwZW5pbmcgdGhlIGF4ZS4gKEFicmFoYW0gTGluY29s
bikKCkEgY29sbGVjdGlvbiBvZiBmdWxsLXN0YWNrIHJlc291cmNlcyBmb3Ig
cHJvZ3JhbW1lcnMuCgpUaGUgZ29hbCBvZiB0aGlzIHBhZ2UgaXMgdG8gbWFr
ZSB5b3UgYSBtb3JlIHByb2ZpY2llbnQgZGV2ZWxvcGVyLiBZb3UnbGwgZmlu
ZCBvbmx5IHJlc291cmNlcyB0aGF0IEkndmUgZm91bmQgdHJ1bHkgaW5zcGly
aW5nLCBvciB0aGF0IGhhdmUgYmVjb21lIHRpbWVsZXNzIGNsYXNzaWNzLgoK
VGhpcyBwYWdlIGlzIG5vdCBtZWFudCB0byBiZSBjb21wcmVoZW5zaXZlLiBJ
IGFtIHRyeWluZyB0byBrZWVwIGl0IGxpZ2h0IGFuZCBub3QgdG9vIG92ZXJ3
aGVsbWluZy4gVGhlIHNlbGVjdGlvbiBvZiBhcnRpY2xlcyBpcyBvcGluaW9u
YXRlZC4KCiMjIENvbnRyaWJ1dGluZyB0byB0aGlzIGxpc3QKCkZlZWwgZnJl
ZSB0byBvcGVuIGEgUFIgdG8gY29udHJpYnV0ZSEgSSB3aWxsIG5vdCBiZSBh
ZGRpbmcgZXZlcnl0aGluZzogYXMgc3RhdGVkIGFib3ZlLCBJIGFtIHRyeWlu
ZyB0byBrZWVwIHRoZSBsaXN0IGNvbmNpc2UuCgojIyBNdXN0LXJlYWQgYm9v
a3MKCkkndmUgZm91bmQgdGhlc2UgYm9va3MgaW5jcmVkaWJseSBpbnNwaXJp
bmc6CgoqIFtUaGUgUHJhZ21hdGljIFByb2dyYW1tZXI6IEZyb20gSm91cm5l
eW1hbiB0bwogIE1hc3Rlcl0oaHR0cDovL3d3dy5hbWF6b24uY29tL1RoZS1Q
cmFnbWF0aWMtUHJvZ3JhbW1lci1Kb3VybmV5bWFuLU1hc3Rlci9kcC8wMjAx
NjE2MjJYKSDwn5OWOiBoYW5kcy1vbiB0aGUgbW9zdCBpbnNwaXJpbmcgYW5k
IHVzZWZ1bCBib29rIEkndmUgcmVhZCBhYm91dCBwcm9ncmFtbWluZy4KKiBb
Q29kZSBDb21wbGV0ZTogQSBQcmFjdGljYWwgSGFuZGJvb2sgb2YgU29mdHdh
cmUKICBDb25zdHJ1Y3Rpb25dKGh0dHA6Ly93d3cuYW1hem9uLmNvbS9Db2Rl
LUNvbXBsZXRlLVByYWN0aWNhbC1IYW5kYm9vay1Db25zdHJ1Y3Rpb24vZHAv
MDczNTYxOTY3MCkg8J+TljogYSBuaWNlIGFkZGl0aW9uIHRvIFRoZSBQcmFn
bWF0aWMgUHJvZ3JhbW1lciwgZ2l2ZXMgeW91IHRoZSBuZWNlc3NhcnkgZnJh
bWV3b3JrIHRvIHRhbGsgYWJvdXQgY29kZS4KKiBbUmVsZWFzZSBJdCFdKGh0
dHBzOi8vc21pbGUuYW1hem9uLmNvbS9SZWxlYXNlLURlc2lnbi1EZXBsb3kt
UHJvZHVjdGlvbi1SZWFkeS1Tb2Z0d2FyZS9kcC8xNjgwNTAyMzk1KSDwn5OW
OiB0aGlzIGJvb2tzIGdvZXMgYmV5b25kIGNvZGUgYW5kIGdpdmVzIHlvdSBi
ZXN0IHByYWN0aWNlcyBmb3IgYnVpbGRpbmcgcHJvZHVjdGlvbi1yZWFkeSBz
b2Z0d2FyZS4gSXQgd2lsbCBnaXZlIHlvdSBhYm91dCAzIHllYXJzIHdvcnRo
IG9mIHJlYWwtd29ybGQgZXhwZXJpZW5jZS4KKiBbU2NhbGFiaWxpdHkgUnVs
ZXM6IDUwIFByaW5jaXBsZXMgZm9yIFNjYWxpbmcgV2ViCiAgU2l0ZXNdKGh0
dHBzOi8vc21pbGUuYW1hem9uLmNvbS9TY2FsYWJpbGl0eS1SdWxlcy1Qcmlu
Y2lwbGVzLVNjYWxpbmctU2l0ZXMvZHAvMDEzNDQzMTYwWCkg8J+TlgoqIFtU
aGUgTGludXggUHJvZ3JhbW1pbmcgSW50ZXJmYWNlOiBBIExpbnV4IGFuZCBV
TklYIFN5c3RlbSBQcm9ncmFtbWluZyBIYW5kYm9va10oaHR0cDovL3d3dy5h
bWF6b24uY29tL1RoZS1MaW51eC1Qcm9ncmFtbWluZy1JbnRlcmZhY2UtSGFu
ZGJvb2svZHAvMTU5MzI3MjIwMCkg8J+Tljogb3V0c2lkZSBvZiB0ZWFjaGlu
ZyB5b3UgYWxtb3N0IGV2ZXJ5dGhpbmcgeW91IG5lZWQgdG8ga25vdyBhYm91
dCBMaW51eCwgdGhpcyBib29rIHdpbGwgZ2l2ZSB5b3UgaW5zaWdodHMgaW50
byBob3cgc29mdHdhcmUgZXZvbHZlcywgYW5kIHRoZSB2YWx1ZSBvZiBoYXZp
bmcgc2ltcGxlICYgZWxlZ2FudCBpbnRlcmZhY2VzLgoqIFtTdHJ1Y3R1cmUg
YW5kIGludGVycHJldGF0aW9uIG9mIENvbXB1dGVyIFByb2dyYW1zXShodHRw
czovL3dlYi5taXQuZWR1L2FsZXhtdi82LjAzNy9zaWNwLnBkZikgKGZyZWUp
IPCfk5Y6IE9uZSBvZiB0aGUgbW9zdCBpbmZsdWVudGlhbCB0ZXh0Ym9va3Mg
aW4gQ29tcHV0ZXIgU2NpZW5jZSAod3JpdHRlbiBhbmQgdXNlZCBhdCBNSVQp
LCBTSUNQIGhhcyBiZWVuIGluZmx1ZW50aWFsIGluIENTIGVkdWNhdGlvbi4g
W0J5dGVdKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0J5dGVfKG1h
Z2F6aW5lKSkgcmVjb21tZW5kZWQgU0lDUCAiZm9yIHByb2Zlc3Npb25hbCBw
cm9ncmFtbWVycyB3aG8gYXJlIHJlYWxseSBpbnRlcmVzdGVkIGluIHRoZWly
IHByb2Zlc3Npb24iLgoKVGhlcmUgYXJlIHNvbWUgZnJlZSBib29rcyBhdmFp
bGFibGUsIGluY2x1ZGluZzoKCiogW1Byb2Zlc3Npb25hbCBzb2Z0d2FyZSBk
ZXZlbG9wbWVudF0oaHR0cDovL21peG1hc3RhbXlrLmJpdGJ1Y2tldC5pby9w
cm9fc29mdF9kZXYvKSDwn5OWOiBwcmV0dHkgY29tcGxldGUgYW5kIGEgZ29v
ZCBjb21wYW5pb24gdG8gdGhpcyBwYWdlLiBUaGUgZnJlZSBjaGFwdGVycyBh
cmUgbW9zdGx5IGZvY3VzZWQgb24gc29mdHdhcmUgZGV2ZWxvcG1lbnQgcHJv
Y2Vzc2VzOiBkZXNpZ24sIHRlc3RpbmcsIGNvZGUgd3JpdGluZywgZXRjLiAt
IGFuZCBub3Qgc28gbXVjaCBhYm91dCB0ZWNoIGl0c2VsZi4KKiBbTGlzdCBv
ZiBmcmVlIHByb2dyYW1taW5nIGJvb2tzXShodHRwczovL2dpdGh1Yi5jb20v
dmhmL2ZyZWUtcHJvZ3JhbW1pbmctYm9va3MpCgojIyBNdXN0LXJlYWQgYXJ0
aWNsZXMKCiogW1ByYWN0aWNhbCBBZHZpY2UgZm9yIE5ldyBTb2Z0d2FyZSBF
bmdpbmVlcnNdKGh0dHA6Ly9wcm9kdWN0Lmh1YnNwb3QuY29tL2Jsb2cvcHJh
Y3RpY2FsLWFkdmljZS1mb3ItbmV3LXNvZnR3YXJlLWVuZ2luZWVycykKKiBb
T24gQmVpbmcgQSBTZW5pb3IgRW5naW5lZXJdKGh0dHA6Ly93d3cua2l0Y2hl
bnNvYXAuY29tLzIwMTIvMTAvMjUvb24tYmVpbmctYS1zZW5pb3ItZW5naW5l
ZXIvKQoqIFtMZXNzb25zIExlYXJuZWQgaW4gU29mdHdhcmUgRGV2ZWxvcG1l
bnRdKGh0dHA6Ly9oZW5yaWt3YXJuZS5jb20vMjAxNS8wNC8xNi9sZXNzb25z
LWxlYXJuZWQtaW4tc29mdHdhcmUtZGV2ZWxvcG1lbnQvKTogb25lIG9mIHRo
b3NlIGFydGljbGVzIHRoYXQgZ2l2ZSB5b3UgeWVhcnMgb2YgaGFyZC1lYXJu
ZWQgbGVzc29ucywgYWxsIGluIG9uZSBzaG9ydCBhcnRpY2xlLiBNdXN0IHJl
YWQuCiogW1RoaW5ncyBJIExlYXJudCBUaGUgSGFyZCBXYXldKGh0dHBzOi8v
YmxvZy5qdWxpb2JpYXNvbi5uZXQvdGhvdWdodHMvdGhpbmdzLWktbGVhcm50
LXRoZS1oYXJkLXdheS8pCgkqIFNwZWMgZmlyc3QsIHRoZW4gY29kZQoJKiBU
ZXN0cyBtYWtlIGJldHRlciBBUElzCgkqIEZ1dHVyZSB0aGlua2luZyBpcyBm
dXR1cmUgdHJhc2hpbmcKCSogRG9jdW1lbnRhdGlvbiBpcyBhIGxvdmUgbGV0
dGVyIHRvIHlvdXIgZnV0dXJlIHNlbGYKCSogU29tZXRpbWVzLCBpdCdzIGJl
dHRlciB0byBsZXQgdGhlIGFwcGxpY2F0aW9uIGNyYXNoIHRoYW4gZG8gbm90
aGluZwoJKiBVbmRlcnN0YW5kIGFuZCBzdGF5IGF3YXkgb2YgY2FyZ28gY3Vs
dAoJKiAiUmlnaHQgdG9vbCBmb3IgdGhlIGpvYiIgaXMganVzdCB0byBwdXNo
IGFuIGFnZW5kYQoJKiBMZWFybiB0aGUgYmFzaWNzIGZ1bmN0aW9uYWwgcHJv
Z3JhbW1pbmcKCSogQUxXQVlTIHVzZSB0aW1lem9uZXMgd2l0aCB5b3VyIGRh
dGVzCgkqIEFMV0FZUyB1c2UgVVRGLTgKCSogQ3JlYXRlIGxpYnJhcmllcwoJ
KiBMZWFybiB0byBtb25pdG9yCgkqIEV4cGxpY2l0IGlzIGJldHRlciB0aGFu
IGltcGxpY2l0CgkqIENvbXBhbmllcyBsb29rIGZvciBzcGVjaWFsaXN0cyBi
dXQga2VlcCBnZW5lcmFsaXN0cyBsb25nZXIKCSogVGhlIGJlc3Qgc2VjdXJl
IHdheSB0byBkZWFsIHdpdGggdXNlciBkYXRhIGlzIG5vdCB0byBjYXB0dXJl
IGl0CgkqIFdoZW4gaXQncyB0aW1lIHRvIHN0b3AsIGl0J3MgdGltZSB0byBz
dG9wCgkqIFlvdSdyZSByZXNwb25zaWJsZSBmb3IgdGhlIHVzZSBvZiB5b3Vy
IGNvZGUKCSogRG9uJ3QgdGVsbCAiSXQncyBkb25lIiB3aGVuIGl0J3Mgbm90
CgkqIFBheSBhdHRlbnRpb24gb24gaG93IHBlb3BsZSByZWFjdCB0byB5b3UK
CSogQmV3YXJlIG9mIG1pY3JvLWFnZ3Jlc3Npb25zCgkqIEtlZXAgYSBsaXN0
IG9mICJUaGluZ3MgSSBEb24ndCBLbm93IgoqIFtTaWducyB0aGF0IHlvdSdy
ZSBhIGdvb2QgcHJvZ3JhbW1lcl0oaHR0cDovL3d3dy55YWNvc2V0LmNvbS9I
b21lL3NpZ25zLXRoYXQteW91LXJlLWEtZ29vZC1wcm9ncmFtbWVyKQoqIFtT
aWducyB0aGF0IHlvdSdyZSBhIGJhZCBwcm9ncmFtbWVyXShodHRwOi8vd3d3
LnlhY29zZXQuY29tL0hvbWUvc2lnbnMtdGhhdC15b3UtcmUtYS1iYWQtcHJv
Z3JhbW1lcikKKiBbNyBhYnNvbHV0ZSB0cnV0aHMgSSB1bmxlYXJuZWQgYXMg
anVuaW9yIGRldmVsb3Blcl0oaHR0cHM6Ly9tb25pY2FsZW50LmNvbS9ibG9n
LzIwMTkvMDYvMDMvYWJzb2x1dGUtdHJ1dGhzLXVubGVhcm5lZC1hcy1qdW5p
b3ItZGV2ZWxvcGVyLykKCSogRWFybHkgaW4geW91ciBjYXJlZXIsIHlvdSBj
YW4gbGVhcm4gMTB4IG1vcmUgaW4gYSBzdXBwb3J0aXZlIHRlYW0gaW4gMSB5
ZWFyLCB0aGFuIGNvZGluZyBvbiB5b3VyIG93bgoJKiBFdmVyeSBjb21wYW55
IGhhcyBwcm9ibGVtcywgZXZlcnkgY29tcGFueSBoYXMgdGVjaG5pY2FsIGRl
YnQuCgkqIEJlaW5nIG92ZXJseSBvcGluaW9uYXRlZCBvbiB0b3BpY3MgeW91
IGxhY2sgcmVhbC13b3JsZCBleHBlcmllbmNlIHdpdGggaXMgcHJldHR5IGFy
cm9nYW50LgoJKiBNYW55IGNvbmZlcmVuY2UgdGFsa3MgY292ZXIgcHJvb2Yg
b2YgY29uY2VwdHMgcmF0aGVyIHRoYW4gcmVhbC13b3JsZCBzY2VuYXJpb3Mu
CgkqIERlYWxpbmcgd2l0aCBsZWdhY3kgaXMgY29tcGxldGVseSBub3JtYWwu
CgkqIEFyY2hpdGVjdHVyZSBpcyBtb3JlIGltcG9ydGFudCB0aGFuIG5pdHBp
Y2tpbmcuCgkqIEZvY3VzIG9uIGF1dG9tYXRpb24gb3ZlciBkb2N1bWVudGF0
aW9uIHdoZXJlIGFwcHJvcHJpYXRlLgoJKiBIYXZpbmcgc29tZSB0ZWNobmlj
YWwgZGVidCBpcyBoZWFsdGh5LgoJKiBTZW5pb3IgZW5naW5lZXJzIG11c3Qg
ZGV2ZWxvcCBtYW55IHNraWxscyBiZXNpZGVzIHByb2dyYW1taW5nLgoJKiBX
ZeKAmXJlIGFsbCBzdGlsbCBqdW5pb3IgaW4gc29tZSBhcmVhcy4KKiBbSG93
IHRvIEJ1aWxkIEdvb2QgU29mdHdhcmVdKGh0dHBzOi8vd3d3LmNzYy5nb3Yu
c2cvYXJ0aWNsZXMvaG93LXRvLWJ1aWxkLWdvb2Qtc29mdHdhcmUpCgkqIEEg
Z29vZCBoaWdoLWxldmVsIHN1bW1hcnkgb2YgZnVuZGFtZW50YWwgZW5naW5l
ZXJpbmcgcHJhY3RpY2VzLgoJKiBUaGUgcm9vdCBjYXVzZSBvZiBiYWQgc29m
dHdhcmUgaGFzIGxlc3MgdG8gZG8gd2l0aCBzcGVjaWZpYyBlbmdpbmVlcmlu
ZyBjaG9pY2VzLCBhbmQgbW9yZSB0byBkbyB3aXRoIGhvdyBkZXZlbG9wbWVu
dCBwcm9qZWN0cyBhcmUgbWFuYWdlZC4KCSogVGhlcmUgaXMgbm8gc3VjaCB0
aGluZyBhcyBwbGF0b25pY2FsbHkgZ29vZCBlbmdpbmVlcmluZzogaXQgZGVw
ZW5kcyBvbiB5b3VyIG5lZWRzIGFuZCB0aGUgcHJhY3RpY2FsIHByb2JsZW1z
IHlvdSBlbmNvdW50ZXIuCgkqIFNvZnR3YXJlIHNob3VsZCBiZSB0cmVhdGVk
IG5vdCBhcyBhIHN0YXRpYyBwcm9kdWN0LCBidXQgYXMgYSBsaXZpbmcgbWFu
aWZlc3RhdGlvbiBvZiB0aGUgZGV2ZWxvcG1lbnQgdGVhbeKAmXMgY29sbGVj
dGl2ZSB1bmRlcnN0YW5kaW5nLgoJKiBTb2Z0d2FyZSBwcm9qZWN0cyByYXJl
bHkgZmFpbCBiZWNhdXNlIHRoZXkgYXJlIHRvbyBzbWFsbDsgdGhleSBmYWls
IGJlY2F1c2UgdGhleSBnZXQgdG9vIGJpZy4KCSogQmV3YXJlIG9mIGJ1cmVh
dWNyYXRpYyBnb2FscyBtYXNxdWVyYWRpbmcgYXMgcHJvYmxlbSBzdGF0ZW1l
bnRzLiBJZiBvdXIgZW5kIGdvYWwgaXMgdG8gbWFrZSBjaXRpemVuc+KAmSBs
aXZlcyBiZXR0ZXIsIHdlIG5lZWQgdG8gZXhwbGljaXRseSBhY2tub3dsZWRn
ZSB0aGUgdGhpbmdzIHRoYXQgYXJlIG1ha2luZyB0aGVpciBsaXZlcyB3b3Jz
ZS4KCSogQnVpbGRpbmcgc29mdHdhcmUgaXMgbm90IGFib3V0IGF2b2lkaW5n
IGZhaWx1cmU7IGl0IGlzIGFib3V0IHN0cmF0ZWdpY2FsbHkgZmFpbGluZyBh
cyBmYXN0IGFzIHBvc3NpYmxlIHRvIGdldCB0aGUgaW5mb3JtYXRpb24geW91
IG5lZWQgdG8gYnVpbGQgc29tZXRoaW5nIGdvb2QuCgojIyBPdGhlciBnZW5l
cmFsIG1hdGVyaWFsIGFuZCBsaXN0IG9mIHJlc291cmNlcwoKKiBbVGhlIElt
cG9zdGVyJ3MgSGFuZGJvb2tdKGh0dHBzOi8vYmlnbWFjaGluZS5pby9wcm9k
dWN0cy90aGUtaW1wb3N0ZXJzLWhhbmRib29rKSAtICQzMC4gRnJvbSB0aGUg
YXV0aG9yOiAiRG9uJ3QgaGF2ZSBhIENTIERlZ3JlZT8gTmVpdGhlciBkbyBJ
IC0gVGhhdCdzIHdoeSBJIHdyb3RlIHRoaXMgYm9vay4iCiogW21yLW1pZy9l
dmVyeS1wcm9ncmFtbWVyLXNob3VsZC1rbm93OiBhIGNvbGxlY3Rpb24gb2Yg
KG1vc3RseSkgdGVjaG5pY2FsIHRoaW5ncyBldmVyeSBzb2Z0d2FyZSBkZXZl
bG9wZXIgc2hvdWxkIGtub3ddKGh0dHBzOi8vZ2l0aHViLmNvbS9tci1taWcv
ZXZlcnktcHJvZ3JhbW1lci1zaG91bGQta25vdykKKiBbRmFtb3VzIExhd3Mg
T2YgU29mdHdhcmUgRGV2ZWxvcG1lbnRdKGh0dHBzOi8vd3d3LnRpbXNvbW1l
ci5iZS9mYW1vdXMtbGF3cy1vZi1zb2Z0d2FyZS1kZXZlbG9wbWVudC8pCgoj
IyMgQ291cnNlcwoKKiBbR29vZ2xlIFRlY2ggRGV2IEd1aWRlXShodHRwczov
L3RlY2hkZXZndWlkZS53aXRoZ29vZ2xlLmNvbS8pCgojIyBUb3BpY3MKCiMj
IyBBbGdvcml0aG0gYW5kIGRhdGEgc3RydWN0dXJlcwoKKiBSZWFkIHRoZSBb
Q0xSU10oaHR0cHM6Ly9taXRwcmVzcy5taXQuZWR1L2Jvb2tzL2ludHJvZHVj
dGlvbi1hbGdvcml0aG1zKS4gWW91IGNhbiB3YXRjaCBhbmQgZG93bmxvYWQg
dGhlIGNvdXJzZSBvbiBbT0NXXShodHRwOi8vb2N3Lm1pdC5lZHUvY291cnNl
cy9lbGVjdHJpY2FsLWVuZ2luZWVyaW5nLWFuZC1jb21wdXRlci1zY2llbmNl
LzYtMDQ2ai1pbnRyb2R1Y3Rpb24tdG8tYWxnb3JpdGhtcy1zbWEtNTUwMy1m
YWxsLTIwMDUvKSAtIHRoZXJlIGFyZSBuZXdlciBjb3Vyc2VzIGFzIHdlbGwu
CiogT3IgW1RoZSBBbGdvcml0aG0gRGVzaWduIE1hbnVhbF0oaHR0cHM6Ly93
d3cuYW1hem9uLmNvbS9BbGdvcml0aG0tRGVzaWduLU1hbnVhbC1TdGV2ZW4t
U2tpZW5hL2RwLzE4NDk5NjcyMDI/aWU9VVRGOCZxaWQ9MTI5NzEyNzc5NCZy
ZWZfPXNyXzFfMSZzcj04LTEpCiogVHJ5IG91dCBzb21lIGFsZ29yaXRobXMg
b24gW1Byb2plY3QgRXVsZXJdKGh0dHBzOi8vcHJvamVjdGV1bGVyLm5ldC8p
CgpMZXQncyBiZSBob25lc3Q6IGFsZ29yaXRobXMgY2FuIGJlIGEgcHJldHR5
IGRyeSB0b3BpYy4gW1RoaXMgcXVvcmEgcXVlc3Rpb25dKGh0dHBzOi8vd3d3
LnF1b3JhLmNvbS9Jcy10aGVyZS1hLWJvb2stdGhhdC10ZWFjaGVzLWFsZ29y
aXRobXMtZGF0YS1zdHJ1Y3R1cmVzLWFuZC1vdGhlci1jb21wdXRlci1zY2ll
bmNlLWJhc2ljcy1pbi1hLWZ1bi13YXkpIGxpc3RzIHNvbWUgZnVubmllciBs
ZWFybmluZyBhbHRlcm5hdGl2ZSwgaW5jbHVkaW5nOgoKKiBbR3Jva2tpbmcg
QWxnb3JpdGhtc10oaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9kcC8xNjE3Mjky
MjMwL3JlZj1jbV9zd19zdV9kcCkKKiBbRXNzZW50aWFsIEFsZ29yaXRobXNd
KGh0dHBzOi8vd3d3LmFtYXpvbi5jb20vRXNzZW50aWFsLUFsZ29yaXRobXMt
UHJhY3RpY2FsLUFwcHJvYWNoLUNvbXB1dGVyL2RwLzExMTg2MTIxMDg/aWU9
VVRGOCYqVmVyc2lvbio9MSYqZW50cmllcyo9MCkKCgojIyMgQVBJIGRlc2ln
bgoKKiBbV2h5IHlvdSBzaG91bGQgdXNlIGxpbmtzLCBub3Qga2V5cywgdG8g
cmVwcmVzZW50IHJlbGF0aW9uc2hpcHMgaW4gQVBJc10oaHR0cHM6Ly9jbG91
ZC5nb29nbGUuY29tL2Jsb2cvcHJvZHVjdHMvYXBwbGljYXRpb24tZGV2ZWxv
cG1lbnQvYXBpLWRlc2lnbi13aHkteW91LXNob3VsZC11c2UtbGlua3Mtbm90
LWtleXMtdG8tcmVwcmVzZW50LXJlbGF0aW9uc2hpcHMtaW4tYXBpcyksIE1h
cnRpbiBOYWxseSwgR29vZ2xlCgkqICJVc2luZyBsaW5rcyBpbnN0ZWFkIG9m
IGZvcmVpZ24ga2V5cyB0byBleHByZXNzIHJlbGF0aW9uc2hpcHMgaW4gQVBJ
cyByZWR1Y2VzIHRoZSBhbW91bnQgb2YgaW5mb3JtYXRpb24gYSBjbGllbnQg
bmVlZHMgdG8ga25vdyB0byB1c2UgYW4gQVBJLCBhbmQgcmVkdWNlcyB0aGUg
d2F5cyBpbiB3aGljaCBjbGllbnRzIGFuZCBzZXJ2ZXJzIGFyZSBjb3VwbGVk
IHRvIGVhY2ggb3RoZXIuIgoKIyMjIEF0dGl0dWRlLCBoYWJpdHMsIG1pbmRz
ZXQKCiogW01hc3RlcmluZyBQcm9ncmFtbWluZ10oaHR0cHM6Ly93d3cucHJv
ZC5mYWNlYm9vay5jb20vbm90ZXMva2VudC1iZWNrL21hc3RlcmluZy1wcm9n
cmFtbWluZy8xMTg0NDI3ODE0OTIzNDE0IyksIEtlbnQgQmVjay4KKiBbVGhl
IHRyYWl0cyBvZiBhIHByb2ZpY2llbnQgcHJvZ3JhbW1lcl0oaHR0cHM6Ly93
d3cub3JlaWxseS5jb20vaWRlYXMvdGhlLXRyYWl0cy1vZi1hLXByb2ZpY2ll
bnQtcHJvZ3JhbW1lcikKKiBbVGhlIHRhbyBvZiBwcm9ncmFtbWluZ10oaHR0
cDovL3d3dy5taXQuZWR1L354ZWxhL3Rhby5odG1sKTogYSBzZXQgb2YgcGFy
YWJsZXMgYWJvdXQgcHJvZ3JhbW1pbmcuCiogW1Rha2luZyBPd25lcnNoaXAg
SXMgVGhlIE1vc3QgRWZmZWN0aXZlIFdheSB0byBHZXQgV2hhdCBZb3UgV2Fu
dF0oaHR0cDovL3d3dy50aGVlZmZlY3RpdmVlbmdpbmVlci5jb20vYmxvZy90
YWtlLW93bmVyc2hpcC1vZi15b3VyLWdvYWxzKQoqIFtGaW5kaW5nIFRpbWUg
dG8gQmVjb21lIGEgQmV0dGVyIERldmVsb3Blcl0oaHR0cHM6Ly9tZWRpdW0u
ZnJlZWNvZGVjYW1wLm9yZy9maW5kaW5nLXRpbWUtdG8tYmVjb21lLWEtYmV0
dGVyLWRldmVsb3Blci1lZWJjMTU0ODgxYjIpCiogW1RlbiBtaW51dGVzIGEg
ZGF5XShodHRwczovL2Jsb2cudXNlam91cm5hbC5jb20vdGVuLW1pbnV0ZXMt
YS1kYXktZTJmYTEwODRmOTI0KTogaG93IEFsZXggQWxsYWluIHdyb3RlIGEg
Ym9vayBpbiBsZXNzIHRoYW4gMjAwIGhvdXJzLCBieSB3cml0aW5nIDEwIG1p
bnV0ZXMgKmV2ZXJ5KiBkYXkuCgojIyMgQXV0b21hdGlvbgoKKiBbQXV0b21h
dGlvbiBTaG91bGQgQmUgTGlrZSBJcm9uIE1hbiwgTm90IFVsdHJvbl0oaHR0
cDovL3F1ZXVlLmFjbS5vcmcvZGV0YWlsLmNmbT9pZD0yODQxMzEzKQoKIyMj
IEJpYXNlcwoKQmlhc2VzIGRvbid0IG9ubHkgYXBwbHkgdG8gaGlyaW5nLiBG
b3IgaW5zdGFuY2UsIHRoZSBmdW5kYW1lbnRhbCBhdHRyaWJ1dGlvbiBiaWFz
IGFsc28gYXBwbGllcyB3aGVuIGNyaXRpY2l6aW5nIHNvbWVib2R5J3MgY29k
ZSB3cml0dGVuIGEgbG9uZyB0aW1lIGFnbywgaW4gYSB0b3RhbGx5IGRpZmZl
cmVudCBjb250ZXh0LgoKKiBbQ29nbml0aXZlIGJpYXMgY2hlYXQgc2hlZXRd
KGh0dHBzOi8vYmV0dGVyaHVtYW5zLmNvYWNoLm1lL2NvZ25pdGl2ZS1iaWFz
LWNoZWF0LXNoZWV0LTU1YTQ3MjQ3NmIxOCMuNnRlbWI2aHlnKS4gI2hpcmlu
ZwoKIyMjIENhcmVlciBncm93dGgKCiogW1RoZSBDb25qb2luZWQgVHJpYW5n
bGVzIG9mIFNlbmlvci1MZXZlbCBEZXZlbG9wbWVudF0oaHR0cDovL2Zyb250
c2lkZS5pby9ibG9nLzIwMTYvMDcvMDcvdGhlLWNvbmpvaW5lZC10cmlhbmds
ZXMtb2Ytc2VuaW9yLWxldmVsLWRldmVsb3BtZW50Lmh0bWwpIGxvb2tzIGlu
dG8gaG93IHRvIGRlZmluZSBhIHNlbmlvciBlbmdpbmVlci4KKiBbVGVuIFBy
aW5jaXBsZXMgZm9yIEdyb3d0aCBhcyBhbiBFbmdpbmVlcl0oaHR0cHM6Ly9t
ZWRpdW0uY29tL0BkYW5pZWwuaGVsbGVyL3Rlbi1wcmluY2lwbGVzLWZvci1n
cm93dGgtNjkwMTVlMDhjMzViKSwgRGFuIEhlbGxlci4KKiBbRG9uJ3QgQ2Fs
bCBZb3Vyc2VsZiBhIFByb2dyYW1tZXJdKGh0dHBzOi8vd3d3LmthbHp1bWV1
cy5jb20vMjAxMS8xMC8yOC9kb250LWNhbGwteW91cnNlbGYtYS1wcm9ncmFt
bWVyLyksIFBhdHJpY2sgTWNLZW56aWUuCiogW09uIGJlaW5nIGFuIEVuZ2lu
ZWVyaW5nIE1hbmFnZXJdKGh0dHBzOi8vbmlja21jaGFyZHkuY29tLzIwMTkv
MDIvb24tYmVpbmctYW4tZW5naW5lZXJpbmctbWFuYWdlci5odG1sKQoqIFtU
aGUgY2FyZWVyIGFkdmljZSBJIHdpc2ggSSBoYWQgYXQgMjVdKGh0dHBzOi8v
d3d3LmxpbmtlZGluLmNvbS9wdWxzZS9jYXJlZXItYWR2aWNlLWktd2lzaC1o
YWQtMjUtc2hhbmUtcm9kZ2Vycy8/dHJrPWhwLWZlZWQtYXJ0aWNsZS10aXRs
ZS1saWtlKQoJKiBBIGNhcmVlciBpcyBhIG1hcmF0aG9uLCBub3QgYSBzcHJp
bnQKCSogTW9zdCBzdWNjZXNzIGNvbWVzIGZyb20gcmVwZXRpdGlvbiwgbm90
IG5ldyB0aGluZ3MKCSogSWYgd29yayB3YXMgcmVhbGx5IHNvIGdyZWF0IGFs
bCB0aGUgcmljaCBwZW9wbGUgd291bGQgaGF2ZSB0aGUgam9icwoJKiBNYW5h
Z2VtZW50IGlzIGFib3V0IHBlb3BsZSwgbm90IHRoaW5ncwoJKiBHZW51aW5l
bHkgbGlzdGVuIHRvIG90aGVycwoJKiBSZWNvZ25pc2UgdGhhdCBzdGFmZiBh
cmUgcGVvcGxlIHdpdGggZmluaXRlIGVtb3Rpb25hbCBjYXBhY2l0eQoJKiBE
b27igJl0IGp1c3QgbmV0d29yayB3aXRoIHBlb3BsZSB5b3VyIG93biBhZ2UK
CSogTmV2ZXIgc2FjcmlmaWNlIHBlcnNvbmFsIGV0aGljcyBmb3IgYSB3b3Jr
IHJlYXNvbgoJKiBSZWNvZ25pc2UgdGhhdCBmYWlsdXJlIGlzIGxlYXJuaW5n
CiogW0NhcmVlciBhZHZpY2UgSSB3aXNoIEnigJlkIGJlZW4gZ2l2ZW4gd2hl
biBJIHdhcyB5b3VuZ10oaHR0cHM6Ly84MDAwMGhvdXJzLm9yZy8yMDE5LzA0
L2NhcmVlci1hZHZpY2UtaS13aXNoLWlkLWJlZW4tZ2l2ZW4td2hlbi1pLXdh
cy15b3VuZy8pCgkqIERvbuKAmXQgZm9jdXMgdG9vIG11Y2ggb24gbG9uZy10
ZXJtIHBsYW5zLgoJKiBGaW5kIGdvb2QgdGhpbmtlcnMgYW5kIGNvbGQtY2Fs
bCB0aGUgb25lcyB5b3UgbW9zdCBhZG1pcmUuCgkqIEFzc2lnbiBhIGhpZ2gg
dmFsdWUgdG8gcHJvZHVjdGl2aXR5IG92ZXIgeW91ciB3aG9sZSBsaWZlc3Bh
bi4KCSogRG9u4oCZdCBvdmVyLW9wdGltaXNlIHRoaW5ncyB0aGF0IGFyZW7i
gJl0IHlvdXIgdG9wIHByaW9yaXR5LgoJKiBSZWFkIGEgbG90LCBhbmQgcmVh
ZCB0aGluZ3MgdGhhdCBwZW9wbGUgYXJvdW5kIHlvdSBhcmVu4oCZdCByZWFk
aW5nLgoJKiBSZWZsZWN0IHNlcmlvdXNseSBvbiB3aGF0IHByb2JsZW0gdG8g
cHJpb3JpdGlzZSBzb2x2aW5nLgoJKiBSZWFkIG1vcmUgaGlzdG9yeS4KKiBb
V2h5IEdvb2QgRGV2ZWxvcGVycyBhcmUgUHJvbW90ZWQgaW50byBVbmhhcHBp
bmVzc10oaHR0cHM6Ly9yb2J3YWxsaW5nLmNvbS8yMDA3LzA2LzI3L3doeS1n
b29kLWRldmVsb3BlcnMtYXJlLXByb21vdGVkLWludG8tdW5oYXBwaW5lc3Mv
KSwgUm9iIFdhbGxpbmcuIE9yIHdoeSBtYW5hZ2VtZW50IG1pZ2h0IG5vdCBi
ZSBmb3IgeW91LgoKCiMjIyBDaGFyYWN0ZXJzIHNldHMKCiogW1RoZSBBYnNv
bHV0ZSBNaW5pbXVtIEV2ZXJ5IFNvZnR3YXJlIERldmVsb3BlciBBYnNvbHV0
ZWx5LCBQb3NpdGl2ZWx5IE11c3QgS25vdyBBYm91dCBVbmljb2RlIGFuZCBD
aGFyYWN0ZXIgU2V0cyAoTm8gRXhjdXNlcyEpXShodHRwOi8vd3d3LmpvZWxv
bnNvZnR3YXJlLmNvbS9hcnRpY2xlcy9Vbmljb2RlLmh0bWwpCgojIyMgQ29k
aW5nICYgY29kZSBxdWFsaXR5CgoqIFtXcml0ZSBjb2RlIHRoYXQgaXMgZWFz
eSB0byBkZWxldGUsIG5vdCBlYXN5IHRvIGV4dGVuZF0oaHR0cDovL3Byb2dy
YW1taW5naXN0ZXJyaWJsZS5jb20vcG9zdC8xMzkyMjI2NzQyNzMvd3JpdGUt
Y29kZS10aGF0LWlzLWVhc3ktdG8tZGVsZXRlLW5vdC1lYXN5LXRvKQoqIFtU
aGUgVGVuIENvbW1hbmRtZW50cyBvZiBFZ29sZXNzIFByb2dyYW1taW5nXSho
dHRwOi8vYmxvZy5jb2Rpbmdob3Jyb3IuY29tL3RoZS10ZW4tY29tbWFuZG1l
bnRzLW9mLWVnb2xlc3MtcHJvZ3JhbW1pbmcvKQoqIFtDbGVhbiBDb2RlOiBB
IEhhbmRib29rIG9mIEFnaWxlIFNvZnR3YXJlIENyYWZ0c21hbnNoaXBdKGh0
dHBzOi8vd3d3Lmdvb2RyZWFkcy5jb20vYm9vay9zaG93LzM3MzUyOTMtY2xl
YW4tY29kZSkg8J+TliwgUm9iZXJ0IEMuIE1hcnRpbi4gRGVzY3JpYmVzIG51
bWVyb3VzIHVzZWZ1bCBiZXN0IHByYWN0aWNlcy4gQSBiaXQgbG9uZy4gVGhl
cmUncyBhbHNvIGEgW2NsZWFuIGNvZGUgY2hlYXRzaGVldF0oY2hlYXRzaGVl
dHMvQ2xlYW4tQ29kZS1WMi40LnBkZikuCiogW1doYXQgU29mdHdhcmUgQ3Jh
ZnRzbWFuc2hpcCBpcyBhYm91dF0oaHR0cHM6Ly9ibG9nLmNsZWFuY29kZXIu
Y29tL3VuY2xlLWJvYi8yMDExLzAxLzE3L3NvZnR3YXJlLWNyYWZ0c21hbnNo
aXAtaXMtYWJvdXQuaHRtbCkKCSogV2XigJlyZSB0aXJlZCBvZiB3cml0aW5n
IGNyYXAuCgkqIFdlIHdpbGwgbm90IGFjY2VwdCB0aGUgc3R1cGlkIG9sZCBs
aWUgYWJvdXQgY2xlYW5pbmcgdGhpbmdzIHVwIGxhdGVyLgoJKiBXZSB3aWxs
IG5vdCBiZWxpZXZlIHRoZSBjbGFpbSB0aGF0IHF1aWNrIG1lYW5zIGRpcnR5
LgoJKiBXZSB3aWxsIG5vdCBhbGxvdyBhbnlvbmUgdG8gZm9yY2UgdXMgdG8g
YmVoYXZlIHVucHJvZmVzc2lvbmFsbHkuCgojIyMgQ29tcHV0ZXIgc2NpZW5j
ZQoKKiBbV2hhdCBldmVyeSBjb21wdXRlciBzY2llbmNlIG1ham9yIHNob3Vs
ZCBrbm93XShodHRwOi8vbWF0dC5taWdodC5uZXQvYXJ0aWNsZXMvd2hhdC1j
cy1tYWpvcnMtc2hvdWxkLWtub3cvKQoqIFtUZWFjaCBZb3Vyc2VsZiBDb21w
dXRlciBTY2llbmNlXShodHRwczovL3RlYWNoeW91cnNlbGZjcy5jb20vKTog
YW4gb3BpbmlvbmF0ZWQgc2V0IG9mIHRoZSBiZXN0IENTIHJlc291cmNlcy4K
CiMjIyBDb25maWd1cmF0aW9uCgoqIFtUaGUgZG93bnNpZGVzIG9mIEpTT04g
Zm9yIGNvbmZpZyBmaWxlc10oaHR0cHM6Ly9hcnAyNDIubmV0L3dlYmxvZy9K
U09OX2FzX2NvbmZpZ3VyYXRpb25fZmlsZXMtX3BsZWFzZV9kb250Lmh0bWwp
LCBNYXJ0aW4gVG91cm5vaWouCgkqIENhbid0IGFkZCBjb21tZW50cwoJKiBF
eGNlc3NpdmUgcXVvdGF0aW9uIGFuZCBzeW50YXggbm9pc2UKCSogVXNpbmcg
REMgKGRlY2xhcmF0aXZlIGNvbmZpZ3VyYXRpb24pIHRvIGNvbnRyb2wgbG9n
aWMgaXMgb2Z0ZW4gbm90IGEgZ29vZCBpZGVhLgoKIyMjIERhdGFiYXNlcwoK
KiBbQSBwbGFpbiBlbmdsaXNoIGludHJvZHVjdGlvbiB0byBDQVAgVGhlb3Jl
bV0oaHR0cDovL2tzYXQubWUvYS1wbGFpbi1lbmdsaXNoLWludHJvZHVjdGlv
bi10by1jYXAtdGhlb3JlbS8pCiogW05PU1FMIFBhdHRlcm5zXShodHRwOi8v
aG9yaWNreS5ibG9nc3BvdC5ubC8yMDA5LzExL25vc3FsLXBhdHRlcm5zLmh0
bWwpCiogW05vU1FMIERhdGFiYXNlczogYSBTdXJ2ZXkgYW5kIERlY2lzaW9u
IEd1aWRhbmNlXShodHRwczovL21lZGl1bS5iYXFlbmQuY29tL25vc3FsLWRh
dGFiYXNlcy1hLXN1cnZleS1hbmQtZGVjaXNpb24tZ3VpZGFuY2UtZWE3ODIz
YTgyMmQjLjlmZTc5cXI5MCkKKiBbU2FmZSBPcGVyYXRpb25zIEZvciBIaWdo
IFZvbHVtZSBQb3N0Z3JlU1FMXShodHRwczovL3d3dy5icmFpbnRyZWVwYXlt
ZW50cy5jb20vYmxvZy9zYWZlLW9wZXJhdGlvbnMtZm9yLWhpZ2gtdm9sdW1l
LXBvc3RncmVzcWwvKSAodGhpcyBpcyBmb3IgUG9zdGdyZVNRTCBidXQgd29y
a3MgZ3JlYXQgZm9yIG90aGVyIERCcyBhcyB3ZWxsKS4KKiBbWmVybyBkb3du
dGltZSBkYXRhYmFzZSBtaWdyYXRpb25zXShodHRwczovL2Jsb2cucmFpbmZv
cmVzdHFhLmNvbS8yMDE0LTA2LTI3LXplcm8tZG93bnRpbWUtZGF0YWJhc2Ut
bWlncmF0aW9ucy8pIChjb2RlIGV4YW1wbGVzIGFyZSB1c2luZyBSYWlscyBi
dXQgdGhpcyB3b3JrcyBncmVhdCBmb3IgYW55IHByb2dyYW1taW5nIGxhbmd1
YWdlKQoqIFtTUUwgc3R5bGVndWlkZV0oaHR0cDovL3d3dy5zcWxzdHlsZS5n
dWlkZS8pCiogW0FsZ29yaXRobXMgQmVoaW5kIE1vZGVybiBTdG9yYWdlIFN5
c3RlbXNdKGh0dHBzOi8vcXVldWUuYWNtLm9yZy9kZXRhaWwuY2ZtP2lkPTMy
MjAyNjYpLCBBQ00gUXVldWUKKiBbTGV0J3MgQnVpbGQgYSBTaW1wbGUgRGF0
YWJhc2VdKGh0dHBzOi8vY3N0YWNrLmdpdGh1Yi5pby9kYl90dXRvcmlhbC8p
CgojIyMgRGF0YSBmb3JtYXRzCgoqIFtGYWxzZWhvb2RzIFByb2dyYW1tZXJz
IEJlbGlldmUgQWJvdXQgUGhvbmUgTnVtYmVyc10oaHR0cHM6Ly9naXRodWIu
Y29tL2dvb2dsZWkxOG4vbGlicGhvbmVudW1iZXIvYmxvYi9tYXN0ZXIvRkFM
U0VIT09EUy5tZCksIEdvb2dsZSdzIGBsaWJwaG9uZW51bWJlcmAuCiogW1J1
bGVzIGZvciBBdXRvY29tcGxldGVdKGh0dHA6Ly9qZXJlbXltaWtrb2xhLmNv
bS9wb3N0cy8yMDE5XzAzXzE5X3J1bGVzX2Zvcl9hdXRvY29tcGxldGUuaHRt
bCk6IHJvdWdoIHNwZWNpZmljYXRpb25zIGZvciBhdXRvY29tcGxldGUgZmll
bGRzCgojIyMgRGF0YSBzY2llbmNlCgoqIFtBIGRpcnR5IGRvemVuOiB0d2Vs
dmUgY29tbW9uIG1ldHJpYyBpbnRlcnByZXRhdGlvbiBwaXRmYWxscyBpbiBv
bmxpbmUgY29udHJvbGxlZCBleHBlcmltZW50c10oaHR0cHM6Ly9ibG9nLmFj
b2x5ZXIub3JnLzIwMTcvMDkvMjUvYS1kaXJ0eS1kb3plbi10d2VsdmUtY29t
bW9uLW1ldHJpYy1pbnRlcnByZXRhdGlvbi1waXRmYWxscy1pbi1vbmxpbmUt
Y29udHJvbGxlZC1leHBlcmltZW50cy8pCgojIyMgRGVidWdnaW5nCgoqIFtS
dWJiZXIgRHVjayBQcm9ibGVtIFNvbHZpbmddKGh0dHA6Ly9ibG9nLmNvZGlu
Z2hvcnJvci5jb20vcnViYmVyLWR1Y2stcHJvYmxlbS1zb2x2aW5nLykKKiBb
UnViYmVyIER1Y2tpbmddKGh0dHA6Ly9jMi5jb20vY2dpL3dpa2k/UnViYmVy
RHVja2luZykKKiBbRml2ZSBXaHlzXShodHRwczovL2VuLndpa2lwZWRpYS5v
cmcvd2lraS81X1doeXMpCiogW1RoZSBJbmZpbml0ZSBIb3dzXShodHRwOi8v
d3d3LmtpdGNoZW5zb2FwLmNvbS8yMDE0LzExLzE0L3RoZS1pbmZpbml0ZS1o
b3dzLW9yLXRoZS1kYW5nZXJzLW9mLXRoZS1maXZlLXdoeXMvKTogdGhpcyBw
cm92aWRlcyBhIHN0cm9uZyBjcml0aWNpc20gb2YgdGhlIGZpdmUgd2h5cyBt
ZXRob2QuCiogW0xpbnV4IFBlcmZvcm1hbmNlIEFuYWx5c2lzIGluIDYwLDAw
MCBNaWxsaXNlY29uZHNdKGh0dHA6Ly90ZWNoYmxvZy5uZXRmbGl4LmNvbS8y
MDE1LzExL2xpbnV4LXBlcmZvcm1hbmNlLWFuYWx5c2lzLWluLTYwcy5odG1s
KQoKIyMjIERlc2lnbiAodmlzdWFsLCBVWCwgVUkpCgpJIGhpZ2hseSByZWNv
bW1lbmQgcmVhZGluZyBbVGhlIE5vbi1EZXNpZ25lcidzIERlc2lnbiBCb29r
XShodHRwOi8vd3d3LmFtYXpvbi5jb20vZ3AvcHJvZHVjdC8wMTMzOTY2MTUx
L3JlZj1wZF9scG9fc2JzX2RwX3NzXzE/cGZfcmRfcD0xOTQ0Njg3NjAyJnBm
X3JkX3M9bHBvLXRvcC1zdHJpcGUtMSZwZl9yZF90PTIwMSZwZl9yZF9pPTAz
MjE1MzQwNDImcGZfcmRfbT1BVFZQREtJS1gwREVSJnBmX3JkX3I9MVI3TVZR
UDBCQ1A3R1A5VlpHWVgpLiBUaGlzIGlzIGEgcHJldHR5IHNob3J0IGJvb2sg
dGhhdCB3aWxsIGdpdmUgeW91IHNvbWUgdmVyeSBhY3Rpb25hYmxlIGRlc2ln
biBhZHZpY2VzLgoKKiBJZiB5b3UncmUgd29ya2luZyBvbiBkYXRhLCBFZHdh
cmQgVHVmdGUncyBbVGhlIFZpc3VhbCBEaXNwbGF5IG9mIFF1YW50aXRhdGl2
ZSBJbmZvcm1hdGlvbl0oaHR0cDovL3d3dy5hbWF6b24uY29tL1Zpc3VhbC1E
aXNwbGF5LVF1YW50aXRhdGl2ZS1JbmZvcm1hdGlvbi9kcC8wOTYxMzkyMTQy
L3JlZj1zcl8xXzE/aWU9VVRGOCZxaWQ9MTQ1ODA0NjYwMyZzcj04LTEma2V5
d29yZHM9dHVmdGUpIGlzIGNvbnNpZGVyZWQgYSBjbGFzc2ljLgoqIFRoZSBb
VW5pdmVyc2FsIFByaW5jaXBsZXMgb2YgRGVzaWduXShodHRwOi8vd3d3LmFt
YXpvbi5jb20vVW5pdmVyc2FsLVByaW5jaXBsZXMtRGVzaWduLVJldmlzZWQt
VXBkYXRlZC9kcC8xNTkyNTM1ODc5L3JlZj1zcl8xXzE/aWU9VVRGOCZxaWQ9
MTQ1ODA0NjY2MyZzcj04LTEma2V5d29yZHM9dW5pdmVyc2FsK3ByaW5jaXBs
ZXMrb2YrZGVzaWduKSB3aWxsIGdpdmUgeW91IGVub3VnaCB2b2NhYnVsYXJ5
IGFuZCBjb25jZXB0cyB0byBkZXNjcmliZSBkZXNpZ24gY2hhbGxlbmdlcyBp
bnRvIHdvcmRzLgoqIFtNaWNyb3NvZnQncyBSZXN0IEFQSSBndWlkZWxpbmVz
XShodHRwczovL2dpdGh1Yi5jb20vTWljcm9zb2Z0L2FwaS1ndWlkZWxpbmVz
L2Jsb2IvbWFzdGVyL0d1aWRlbGluZXMubWQpCiogW0Jvb2sgcmVjb21tZW5k
YXRpb25zIGZyb20gSGFja2VyTmV3c10oaHR0cHM6Ly9uZXdzLnljb21iaW5h
dG9yLmNvbS9pdGVtP2lkPTEyNzExMDYwKQoKQXJ0aWNsZXMgOgoKKiBbMTAg
VXNhYmlsaXR5IEhldXJpc3RpY3MgRXZlcnkgRGVzaWduZXIgU2hvdWxkIEtu
b3ddKGh0dHBzOi8vdXhkZXNpZ24uY2MvMTAtdXNhYmlsaXR5LWhldXJpc3Rp
Y3MtZXZlcnktZGVzaWduZXItc2hvdWxkLWtub3ctMTI5Yjk3NzlhYzUzKQoJ
KiBWaXNpYmlsaXR5IG9mIFN5c3RlbSBTdGF0dXMKCSogVGhlIE1hdGNoIEJl
dHdlZW4gVGhlIFN5c3RlbSBBbmQgVGhlIFJlYWwgV29ybGQKCSogRXZlcnkg
c3lzdGVtIHNob3VsZCBoYXZlIGEgY2xlYXIgZW1lcmdlbmN5IGV4aXQKCSog
RG9uJ3QgZm9yZ2V0IHRoYXQgcGVvcGxlIHNwZW5kIDkwJSBvZiB0aGVpciB0
aW1lIGludGVyYWN0aW5nIHdpdGggb3RoZXIgYXBwcwoJKiBSZWNvZ25pdGlv
biBSYXRoZXIgVGhhbiBSZWNhbGwgKHJlY29nbml0aW9uID0gc2hhbGxvdyBm
b3JtIG9mIHJldHJpZXZhbCBmcm9tIG1lbW9yeSwgZS5nLiBhIGZhbWlsaWFy
IHBlcnNvbiwgcmVjYWxsID0gZGVlcGVyIHJldHJpZXZhbCkKCSog4oCdUGVy
ZmVjdGlvbiBpcyBhY2hpZXZlZCwgbm90IHdoZW4gdGhlcmUgaXMgbm90aGlu
ZyBtb3JlIHRvIGFkZCwgYnV0IHdoZW4gdGhlcmUgaXMgbm90aGluZyBsZWZ0
IHRvIHRha2UgYXdheS7igJ0g4oCTIEFudG9pbmUgZGUgU2FpbnQtRXh1cGVy
eQoJKiBIZWxwIFVzZXJzIFJlY29nbml6ZSwgRGlhZ25vc2UsIEFuZCBSZWNv
dmVyIEZyb20gRXJyb3JzCgojIyMgRGVzaWduIChPTyBtb2RlbGluZywgYXJj
aGl0ZWN0dXJlLCBwYXR0ZXJucywgYW50aS1wYXR0ZXJucywgZXRjLikKCkhl
cmUncyBhIGxpc3Qgb2YgZ29vZCBib29rczoKCiogW0Rlc2lnbiBQYXR0ZXJu
czogRWxlbWVudHMgb2YgUmV1c2FibGUgT2JqZWN0LU9yaWVudGVkIFNvZnR3
YXJlXShodHRwOi8vd3d3LmFtYXpvbi5jb20vZHAvMDIwMTYzMzYxMi8pOiBk
dWJiZWQgInRoZSBnYW5nIG9mIGZvdXIiLCB0aGlzIGlzIGFsbW9zdCBhIHJl
cXVpcmVkIHJlYWRpbmcgZm9yIGFueSBkZXZlbG9wZXIuIEEgbG90IG9mIHRo
b3NlIGFyZSBhIGJpdCBvdmVya2lsbCBmb3IgUHl0aG9uIChiZWNhdXNlIGV2
ZXJ5dGhpbmcgaXMgYW4gb2JqZWN0LCBhbmQgZHluYW1pYyB0eXBpbmcpLCBi
dXQgdGhlIG1haW4gaWRlYSAoY29tcG9zaXRpb24gaXMgYmV0dGVyIHRoYW4g
aW5oZXJpdGFuY2UpIGRlZmluaXRlbHkgaXMgYSBnb29kIHBoaWxvc29waHku
CiogW1BhdHRlcm5zIG9mIEVudGVycHJpc2UgQXBwbGljYXRpb24gQXJjaGl0
ZWN0dXJlXShodHRwOi8vd3d3LmFtYXpvbi5jb20vZHAvMDMyMTEyNzQyMC8/
dGFnPXN0YWNrb3ZlcmZsMDgtMjApOiBsZWFybiBhYm91dCBob3cgZGF0YWJh
c2UgYXJlIHVzZWQgaW4gcmVhbCB3b3JsZCBhcHBsaWNhdGlvbnMuIE1pa2Ug
QmF5ZXIncyBTUUxBbGNoZW15IGhhcyBiZWVuIGhlYXZpbHkgaW5mbHVlbmNl
ZCBieSB0aGlzIGJvb2suCiogW0RvbWFpbi1Ecml2ZW4gRGVzaWduOiBUYWNr
bGluZyBDb21wbGV4aXR5IGluIHRoZSBIZWFydCBvZiBTb2Z0d2FyZV0oaHR0
cHM6Ly93d3cuYW1hem9uLmNvbS9Eb21haW4tRHJpdmVuLURlc2lnbi1UYWNr
bGluZy1Db21wbGV4aXR5LVNvZnR3YXJlL2RwLzAzMjExMjUyMTUpIPCfk5Ys
IEVyaWMgRXZhbnMKKiBbQ2xlYW4gQXJjaGl0ZWN0dXJlXShodHRwczovL3d3
dy5nb29kcmVhZHMuY29tL2Jvb2svc2hvdy8xODA0MzAxMS1jbGVhbi1hcmNo
aXRlY3R1cmUpIPCfk5YsIFJvYmVydCBDLiBNYXJ0aW4uIFVuY2xlIEJvYiBw
cm9wb3NlcyBhbiBhcmNoaXRlY3R1cmUgdGhhdCBsZXZlcmFnZXMgdGhlIFNp
bmdsZSBSZXNwb25zaWJpbGl0eSBQcmluY2lwbGUgdG8gaXRzIGZ1bGxlc3Qu
IEEgZ3JlYXQgd2F5IHRvIHN0YXJ0IGEgbmV3IGNvZGViYXNlLiBBbHNvIGNo
ZWNrb3V0IHRoZSBbY2xlYW4gYXJjaGl0ZWN0dXJlIGNoZWF0c2hlZXRdKGNo
ZWF0c2hlZXRzL0NsZWFuLUFyY2hpdGVjdHVyZS1WMS4wLnBkZikuCgpPbmUg
b2YgdGhlIGFic29sdXRlIHJlZmVyZW5jZXMgb24gYXJjaGl0ZWN0dXJlIGlz
IE1hcnRpbiBGb3dsZXI6IGNoZWNrb3V0IGhpcyBbU29mdHdhcmUgQXJjaGl0
ZWN0dXJlIEd1aWRlXShodHRwczovL21hcnRpbmZvd2xlci5jb20vYXJjaGl0
ZWN0dXJlLykuCgpBcnRpY2xlczoKCiogWzEwMSBEZXNpZ24gUGF0dGVybnMg
JiBUaXBzIGZvciBEZXZlbG9wZXJzXShodHRwczovL3NvdXJjZW1ha2luZy5j
b20vZGVzaWduLXBhdHRlcm5zLWFuZC10aXBzKQoqIFtQeXRob24gRGVzaWdu
IFBhdHRlcm5zOiBGb3IgU2xlZWsgQW5kIEZhc2hpb25hYmxlIENvZGVdKGh0
dHBzOi8vd3d3LnRvcHRhbC5jb20vcHl0aG9uL3B5dGhvbi1kZXNpZ24tcGF0
dGVybnMpOiBhIHByZXR0eSBzaW1wbGUgaW50cm9kdWN0aW9uIHRvIGNvbW1v
biBkZXNpZ24gcGF0dGVybnMgKEZhY2FkZSwgQWRhcHRlciwgRGVjb3JhdG9y
KS4gQSBtb3JlIGNvbXBsZXRlIGxpc3Qgb2YgZGVzaWduIHBhdHRlcm5zIGlt
cGxlbWVudGF0aW9uIGluIFB5dGhvbiBvbiBbR2l0aHViXShodHRwczovL2dp
dGh1Yi5jb20vZmFpZi9weXRob24tcGF0dGVybnMpLiBbQWxzbyBhIGJvb2sg
aGVyZV0oaHR0cDovL3B5dGhvbi0zLXBhdHRlcm5zLWlkaW9tcy10ZXN0LnJl
YWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9QYXR0ZXJuQ29uY2VwdC5odG1sKS4K
KiBTb3VyY2VNYWtpbmcncyBbRGVzaWduIFBhdHRlcm5zXShodHRwczovL3Nv
dXJjZW1ha2luZy5jb20vZGVzaWduX3BhdHRlcm5zKSBzZWVtcyB0byBiZSBh
IGdvb2Qgd2ViIHJlc291cmNlIHRvby4KKiBPJ1JlaWxseSdzIFtIb3cgdG8g
bWFrZSBtaXN0YWtlcyBpbiBQeXRob25dKGh0dHA6Ly93d3cub3JlaWxseS5j
b20vcHJvZ3JhbW1pbmcvZnJlZS9maWxlcy9ob3ctdG8tbWFrZS1taXN0YWtl
cy1pbi1weXRob24ucGRmKQoqIFtFZHVjYXRpb24gb2YgYSBQcm9ncmFtbWVy
XShodHRwczovL2hhY2tlcm5vb24uY29tL2VkdWNhdGlvbi1vZi1hLXByb2dy
YW1tZXItYWFlY2YyZDM1MzEyKTogYSBkZXZlbG9wZXIncyB0aG91Z2h0cyBh
ZnRlciAzNSB5ZWFycyBpbiB0aGUgaW5kdXN0cnkuIFRoZXJlJ3MgYSBwYXJ0
aWN1bGFybHkgZ29vZCBzZWN0aW9uIGFib3V0IGRlc2lnbiAmIGNvbXBsZXhp
dHkgKHNlZSAidGhlIGVuZCB0byBlbmQgYXJndW1lbnQiLCAibGF5ZXJpbmcg
YW5kIGNvbXBvbmVudGl6YXRpb24iKS4KKiBHb29nbGUncyBbQVBJIERlc2ln
biBHdWlkZV0oaHR0cHM6Ly9jbG91ZC5nb29nbGUuY29tL2FwaXMvZGVzaWdu
Lyk6IGEgZ2VuZXJhbCBndWlkZSB0byBkZXNpZ24gbmV0d29ya2VkIEFQSS4K
KiBbRG9tYWluLWRyaXZlbiBkZXNpZ25dKGh0dHBzOi8vZW4ud2lraXBlZGlh
Lm9yZy93aWtpL0RvbWFpbi1kcml2ZW5fZGVzaWduKSwgV2lraXBlZGlhLgoq
IFtPbiB0aGUgU3BlY3RydW0gb2YgQWJzdHJhY3Rpb25dKGh0dHBzOi8vd3d3
LnlvdXR1YmUuY29tL3dhdGNoP3Y9bVZWTkpLdjllc0UpIPCfjp4sIENoZW5n
IExvdQoqIFtUaGUg4oCcQnVnLU/igJ0gTm90YXRpb25dKGh0dHBzOi8vb3Zl
cnJlYWN0ZWQuaW8vdGhlLWJ1Zy1vLW5vdGF0aW9uLyksIERhbiBBYnJhbW92
CgpJIG1haW50YWluIGEgW2xpc3Qgb2YgYW50aXBhdHRlcm5zXShodHRwczov
L2dpdGh1Yi5jb20vY2hhcmxheC9hbnRpcGF0dGVybnMpIG9uIGFub3RoZXIg
cmVwby4gVGhpcyBpcyBhIGhpZ2hseSByZWNvbW1lbmRlZCByZWFkLgoKKiBb
SW5oZXJpdGFuY2UgdnMuIGNvbXBvc2l0aW9uXShodHRwOi8vbGVhcm5weXRo
b250aGVoYXJkd2F5Lm9yZy9ib29rL2V4NDQuaHRtbCk6IGEgY29uY3JldGUg
ZXhhbXBsZSBpbiBQeXRob24uIFtBbm90aGVyIHNsaWdodGx5IGxvbmdlciBv
bmUgaGVyZV0oaHR0cDovL3B5dGhvbi10ZXh0Ym9rLnJlYWR0aGVkb2NzLmlv
L2VuL2xhdGVzdC9PYmplY3RfT3JpZW50ZWRfUHJvZ3JhbW1pbmcuaHRtbCku
IFtPbmUgbGFzdCBvbmUsIGluIFB5dGhvbiAzXShodHRwOi8vYmxvZy50aGVk
aWdpdGFsY2F0b25saW5lLmNvbS9ibG9nLzIwMTQvMDgvMjAvcHl0aG9uLTMt
b29wLXBhcnQtMy1kZWxlZ2F0aW9uLWNvbXBvc2l0aW9uLWFuZC1pbmhlcml0
YW5jZS8jLlY3U1o0dEI5NlJzKS4KKiBbQ29tcG9zaXRpb24gSW5zdGVhZCBP
ZiBJbmhlcml0YW5jZV0oaHR0cDovL2MyLmNvbS9jZ2kvd2lraT9Db21wb3Np
dGlvbkluc3RlYWRPZkluaGVyaXRhbmNlKQoqIFtDb21wbGV4aXR5IGFuZCBT
dHJhdGVneV0oaHR0cHM6Ly9oYWNrZXJub29uLmNvbS9jb21wbGV4aXR5LWFu
ZC1zdHJhdGVneS0zMjVjZDdmNTlhOTIpOiBpbnRlcmVzdGluZyBwZXJzcGVj
dGl2ZSBvbiBjb21wbGV4aXR5IGFuZCBmbGV4aWJpbGl0eSB3aXRoIHJlYWxs
eSBnb29kIGV4YW1wbGVzIChlLmcuIEdvb2dsZSBBcHBzIFN1aXRlIHZzLiBN
aWNyb3NvZnQgT2ZmaWNlKS4KCj4gWW91IGNhbiB1c2UgYW4gZXJhc2VyIG9u
IHRoZSBkcmFmdGluZyB0YWJsZSBvciBhIHNsZWRnZSBoYW1tZXIgb24gdGhl
IGNvbnN0cnVjdGlvbiBzaXRlLiAoRnJhbmsgTGxveWQgV3JpZ2h0KQoKIyMj
IyBEZXNpZ246IHNpbXBsaWNpdHkKCiogW1NpbXBsZSBNYWRlIEVhc3ldKGh0
dHBzOi8vd3d3LmluZm9xLmNvbS9wcmVzZW50YXRpb25zL1NpbXBsZS1NYWRl
LUVhc3kpIPCfjp4sIFJpY2ggSGlja2V5LiBUaGlzIGlzIGFuIGluY3JlZGli
bHkgaW5zcGlyaW5nIHRhbGsgcmVkZWZpbmluZyBzaW1wbGljaXR5LCBlYXNl
IGFuZCBjb21wbGV4aXR5LCBhbmQgc2hvd2luZyB0aGF0IHNvbHV0aW9ucyB0
aGF0IGxvb2sgZWFzeSBtYXkgYWN0dWFsbHkgaGFybSB5b3VyIGRlc2lnbi4K
CiMjIyBEZXYgZW52aXJvbm1lbnQgJiB0b29scwoKKiBbQXdlc29tZSBEZXYg
RW52XShodHRwczovL2dpdGh1Yi5jb20vam9uZG90L2F3ZXNvbWUtZGV2ZW52
KQoKVG9vbHMKCiogW0dsYW5jZXM6IEFuIGV5ZSBvbiB5b3VyIHN5c3RlbV0o
aHR0cHM6Ly9naXRodWIuY29tL25pY29sYXJnby9nbGFuY2VzKQoqIFtIVFRQ
aWU6IGEgQ0xJLCBjVVJMLWxpa2UgdG9vbCBmb3IgaHVtYW5zXShodHRwczov
L2dpdGh1Yi5jb20vamticnp0L2h0dHBpZSkKKiBbanE6IGNvbW1hbmQtbGlu
ZSBKU09OIHByb2Nlc3Nvcl0oaHR0cHM6Ly9zdGVkb2xhbi5naXRodWIuaW8v
anEvKQoqIFt0bXV4OiB0ZXJtaW5hbCBtdWx0aXBsZXhlcl0oaHR0cDovL3Rt
dXguZ2l0aHViLmlvLykKKiBbaHRvcDogYW4gaW50ZXJhY3RpdmUgcHJvY2Vz
cyB2aWV3ZXIgZm9yIExpbnV4XShodHRwOi8vaGlzaGFtLmhtL2h0b3AvKQoK
IyMjIERpdmVyc2l0eSAmIGluY2x1c2lvbgoKQ2hlY2sgb3V0IG15IFtsaXN0
IG9mIG1hbmFnZW1lbnQKcmVzb3VyY2VzXShodHRwczovL2dpdGh1Yi5jb20v
Y2hhcmxheC9lbmdpbmVlcmluZy1tYW5hZ2VtZW50KS4KCiMjIyBEb2N1bWVu
dGF0aW9uCgoqIFtEb2N1bWVudGF0aW9uLURyaXZlbiBEZXZlbG9wbWVudF0o
aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20venN1cC85NDM0NDUyKQoqIFtXcml0
aW5nIGF1dG9tYXRlZCB0ZXN0cyBmb3IgeW91ciBkb2N1bWVudGF0aW9uXSho
dHRwczovL2tyYXVzZWZ4LmNvbS9ibG9nL3dyaXRpbmctYXV0b21hdGVkLXRl
c3RzLWZvci15b3VyLWRvY3VtZW50YXRpb24pOiB0aGlzIHNob3VsZCBiZSBy
ZXF1aXJlZCwgSU1PLiBUZXN0aW5nIGNvZGUgc2FtcGxlcyBpbiB5b3VyIGRv
Y3VtZW50YXRpb24gZW5zdXJlcyB0aGV5IG5ldmVyIGdldCBvdXRkYXRlZC4K
KiBbRG9jdW1lbnRhdGlvbiBpcyBraW5nXShodHRwczovL3NwZWFrZXJkZWNr
LmNvbS9rZW5uZXRocmVpdHovZG9jdW1lbnRhdGlvbi1pcy1raW5nKSwgS2Vu
bmV0aCBSZWl0egoqIFtLZWVwIGEgQ2hhbmdlbG9nXShodHRwczovL2tlZXBh
Y2hhbmdlbG9nLmNvbS9lbi8xLjAuMC8pCgojIyMgRG90ZmlsZXMKCiogW0F3
ZXNvbWUgZG90ZmlsZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwcm8vYXdl
c29tZS1kb3RmaWxlcykKKiBbTXkgZG90ZmlsZXNdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9jaGFybGF4L2RvdGZpbGVzKQoKQXJ0aWNsZXMKCiogW1NldHRpbmcg
VXAgYSBNYWMgRGV2IE1hY2hpbmUgRnJvbSBaZXJvIHRvIEhlcm8gV2l0aCBE
b3RmaWxlc10oaHR0cDovL2NvZGUudHV0c3BsdXMuY29tL3R1dG9yaWFscy9z
ZXR0aW5nLXVwLWEtbWFjLWRldi1tYWNoaW5lLWZyb20temVyby10by1oZXJv
LXdpdGgtZG90ZmlsZXMtLW5ldC0zNTQ0OSkKCiMjIyBFZGl0b3JzICYgSURF
CgoqIFtTdWJsaW1lIFRleHQgZXNzZW50aWFsIHBsdWdpbnMgYW5kIHJlc291
cmNlc10oaHR0cHM6Ly9naXRodWIuY29tL2RyZWlrYW50ZXIvc3VibGltZS1i
b29rbWFya3MpCiogW3ZpbS1hd2Vzb21lXShodHRwOi8vdmltYXdlc29tZS5j
b20vKQoqIEJyYW0gTW9vbGVuYWFyIChWaW0gYXV0aG9yKSwgW1NldmVuIGhh
Yml0cyBvZiBlZmZlY3RpdmUgdGV4dCBlZGl0aW5nXShodHRwOi8vd3d3Lm1v
b2xlbmFhci5uZXQvaGFiaXRzLmh0bWwpIChbcHJlc2VudGF0aW9uXShodHRw
Oi8vd3d3Lm1vb2xlbmFhci5uZXQvaGFiaXRzXzIwMDcucGRmKSkuIFRoaXMg
aXMgYWJvdXQgVmltIGJ1dCBpdCBjb250YWlucyBnb29kIGxlc3NvbnMgYWJv
dXQgd2h5IGludmVzdGluZyB0aW1lIGluIGxlYXJuaW5nIGhvdyB0byBiZSBw
cm9kdWN0aXZlIHdpdGggeW91ciB0ZXh0IGVkaXRvcnMgcGF5cyBvZmYuCiog
W1ZTY29kZV0oaHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vKSBpcyBv
bmUgb2YgdGhlIG1vc3QgcG9wdWxhciB0ZXh0IGVkaXRvcnMgYXMgb2Ygd3Jp
dGluZy4gW1Zpc3VhbCBTdHVkaW8gQ29kZSBDYW4gRG8gVGhhdD9dKGh0dHBz
Oi8vd3d3LnNtYXNoaW5nbWFnYXppbmUuY29tLzIwMTgvMDEvdmlzdWFsLXN0
dWRpby1jb2RlLyksIFNtYXNoaW5nIE1hZ2F6aW5lLgoKIyMjIEVuZ2luZWVy
aW5nIG1hbmFnZW1lbnQKCkNoZWNrb3V0IG15IFtsaXN0IG9mIG1hbmFnZW1l
bnQKcmVzb3VyY2VzXShodHRwczovL2dpdGh1Yi5jb20vY2hhcmxheC9lbmdp
bmVlcmluZy1tYW5hZ2VtZW50KS4KCiMjIyBFeGVyY2lzZXMKClRoZSBiZXN0
IHdheSB0byBsZWFybiBpcyB0byBsZWFybiBieSBkb2luZy4KCiogW2Rhbmlz
dGVmYW5vdmljL2J1aWxkLXlvdXItb3duLXg6IGJ1aWxkIHlvdXIgb3duIChp
bnNlcnQgdGVjaG5vbG9neSBoZXJlKV0oaHR0cHM6Ly9naXRodWIuY29tL2Rh
bmlzdGVmYW5vdmljL2J1aWxkLXlvdXItb3duLXgpCgojIyMgSW5jaWRlbnQg
cmVzcG9uc2UgKGFsZXJ0aW5nLCBvdXRhZ2VzLCBmaXJlZmlnaHRpbmcpCgoq
IFtJbmNpZGVudCBSZXNwb25zZSBhdCBIZXJva3VdKGh0dHBzOi8vYmxvZy5o
ZXJva3UuY29tL2FyY2hpdmVzLzIwMTQvNS85L2luY2lkZW50LXJlc3BvbnNl
LWF0LWhlcm9rdSkKKiBbQmxhbWVsZXNzIFBvc3RNb3J0ZW1zIGFuZCBhIEp1
c3QgQ3VsdHVyZV0oaHR0cHM6Ly9jb2RlYXNjcmFmdC5jb20vMjAxMi8wNS8y
Mi9ibGFtZWxlc3MtcG9zdG1vcnRlbXMvKQoqIFtNeSBQaGlsb3NvcGh5IG9u
IEFsZXJ0aW5nXShodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9kb2N1bWVudC9k
LzE5OVBxeUczVXN5WGx3aWVIYXFiR2lXVmE4ZU1XaTh6ekFuMFlmY0FwcjhR
L3ByZXZpZXcjaGVhZGluZz1oLmZzM2tubWp0N2ZqeSkKKiBBIGdyZWF0IGV4
YW1wbGUgb2YgYSBbcG9zdG1vcnRlbSBmcm9tIEdpdGxhYiAoMDEvMzEvMjAx
NyldKGh0dHBzOi8vYWJvdXQuZ2l0bGFiLmNvbS8yMDE3LzAyLzAxL2dpdGxh
Yi1kb3QtY29tLWRhdGFiYXNlLWluY2lkZW50LykgZm9yIGFuIG91dGFnZSBk
dXJpbmcgd2hpY2ggYW4gZW5naW5lZXIncyBhY3Rpb24gY2F1c2VkIHRoZSBp
cnJlbWVkaWFibGUgbG9zcyBvZiA2IGhvdXJzIG9mIGRhdGEuCgojIyMgSW50
ZXJuZXQKCiogW0hvdyBEb2VzIHRoZSBJbnRlcm5ldCBXb3JrP10oaHR0cHM6
Ly93ZWIuc3RhbmZvcmQuZWR1L2NsYXNzL21zYW5kZTkxc2kvd3d3LXNwcjA0
L3JlYWRpbmdzL3dlZWsxL0ludGVybmV0V2hpdGVwYXBlci5odG0pCiogW0hv
dyB0aGUgd2ViIHdvcmtzXShodHRwczovL2dpdGh1Yi5jb20vdmFzYW50aGsv
aG93LXdlYi13b3JrcykKCiMjIyBJbnRlcnZpZXdpbmcKCk5vdGU6IHRoaXMg
aXMgYWJvdXQgeW91IGFzIGFuIGludGVydmlld2VlLCAqKm5vdCoqIGFzIGFu
IGludGVydmlld2VyLiBUbyBjaGVjayBvdXQgbXkgbGlzdCBvZiByZXNvdXJj
ZXMgZm9yIGludGVydmlld2VycywgZ28gdG8gbXkgW2VuZ2luZWVyaW5nLW1h
bmFnZW1lbnQgcmVwb3NpdG9yeV0oaHR0cHM6Ly9naXRodWIuY29tL2NoYXJs
YXgvZW5naW5lZXJpbmctbWFuYWdlbWVudCNoaXJpbmctaW50ZXJ2aWV3cyku
CgoqIFtBbGwgdGhlIGJlc3QgYWR2aWNlIHdlIGNvdWxkIGZpbmQgb24gaG93
IHRvIGdldCBhIGpvYl0oaHR0cHM6Ly84MDAwMGhvdXJzLm9yZy9jYXJlZXIt
Z3VpZGUvaG93LXRvLWdldC1hLWpvYi8pCiogW1N5c3RlbSBkZXNpZ24gaW50
ZXJ2aWV3IGZvciBJVCBjb21wYW55XShodHRwczovL2dpdGh1Yi5jb20vY2hl
Y2tjaGVja3p6L3N5c3RlbS1kZXNpZ24taW50ZXJ2aWV3KQoqIFtUZWNobmlj
YWwgSW50ZXJ2aWV3IE1lZ2FyZXBvXShodHRwczovL2dpdGh1Yi5jb20vamRz
dXR0b24vVGVjaG5pY2FsLUludGVydmlldy1NZWdhcmVwbyk6IHN0dWR5IG1h
dGVyaWFscyBmb3IgU0UvQ1MgdGVjaG5pY2FsIGludGVydmlld3MKKiBbSG93
IHRvIFdpbiB0aGUgQ29kaW5nIEludGVydmlld10oaHR0cHM6Ly9ibG9nLmRl
dm1hc3RlcnkuY29tL2hvdy10by13aW4tdGhlLWNvZGluZy1pbnRlcnZpZXct
NzFhZTcxMDJkNjg1Iy4xNnBoNmJwNXkpCiogW1RoZSBlbGV2YXRvciBwcm9n
cmFtbWluZyBnYW1lXShodHRwOi8vcGxheS5lbGV2YXRvcnNhZ2EuY29tLykK
KiBbSSBzcGVudCAzIG1vbnRocyBhcHBseWluZyB0byBqb2JzIGFmdGVyIGEg
Y29kaW5nIGJvb3RjYW1wLiBIZXJl4oCZcyB3aGF0IEkgbGVhcm5lZC5dKGh0
dHBzOi8vbWVkaXVtLmZyZWVjb2RlY2FtcC5jb20vNS1rZXktbGVhcm5pbmdz
LWZyb20tdGhlLXBvc3QtYm9vdGNhbXAtam9iLXNlYXJjaC05YTA3NDY4ZDIz
MzEjLnVxN3ZiYmpmeCkKKiBbVG9wIDEwIGFsZ29yaXRobXMgaW4gSW50ZXJ2
aWV3IFF1ZXN0aW9uc10oaHR0cDovL3d3dy5nZWVrc2ZvcmdlZWtzLm9yZy90
b3AtMTAtYWxnb3JpdGhtcy1pbi1pbnRlcnZpZXctcXVlc3Rpb25zLykKKiBb
UXVlc3Rpb25zIHRvIGFzayB5b3VyIGludGVydmlld2VyXShodHRwczovL3Jr
b3V0bmlrLmNvbS9hcnRpY2xlcy9RdWVzdGlvbnMtdG8tYXNrLXlvdXItaW50
ZXJ2aWV3ZXIuaHRtbCkKKiBbSW50ZXJhY3RpdmUgUHl0aG9uIGNvZGluZyBp
bnRlcnZpZXcgY2hhbGxlbmdlc10oaHR0cHM6Ly9naXRodWIuY29tL2Rvbm5l
bWFydGluL2ludGVyYWN0aXZlLWNvZGluZy1jaGFsbGVuZ2VzKQoqIFtUZWNo
IEludGVydmlldyBIYW5kYm9va10oaHR0cHM6Ly95YW5nc2h1bi5naXRodWIu
aW8vdGVjaC1pbnRlcnZpZXctaGFuZGJvb2svaW50cm9kdWN0aW9uLykKKiBb
dGVjaC1pbnRlcnZpZXctaGFuZGJvb2svY2hlYXRzaGVldC5tZF0oaHR0cHM6
Ly9naXRodWIuY29tL3lhbmdzaHVuL3RlY2gtaW50ZXJ2aWV3LWhhbmRib29r
L2Jsb2IvbWFzdGVyL3ByZXBhcmluZy9jaGVhdHNoZWV0Lm1kKVtdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9tYmVhdWRydS9tb2Rlcm4tanMtY2hlYXRzaGVldCk6
KQoKIyMjIExlYXJuaW5nICYgbWVtb3JpemluZwoKTGVhcm4gaG93IHRvIGxl
YXJuIQoKKiBbSG93IEkgUmV3aXJlZCBNeSBCcmFpbiB0byBCZWNvbWUgRmx1
ZW50IGluIE1hdGhdKGh0dHA6Ly9uYXV0aWwudXMvaXNzdWUvNDAvbGVhcm5p
bmcvaG93LWktcmV3aXJlZC1teS1icmFpbi10by1iZWNvbWUtZmx1ZW50LWlu
LW1hdGgtcnApOiBzdWJ0aXRsZWQgKnRoZSBidWlsZGluZyBibG9ja3Mgb2Yg
dW5kZXJzdGFuZGluZyBhcmUgbWVtb3JpemF0aW9uIGFuZCByZXBldGl0aW9u
Ki4KKiBbT25lIFN1cmUtRmlyZSBXYXkgdG8gSW1wcm92ZSBZb3VyIENvZGlu
Z10oaHR0cHM6Ly9jaGFuZ2Vsb2cuY29tL3Bvc3RzL29uZS1zdXJlLWZpcmUt
d2F5LXRvLWltcHJvdmUteW91ci1jb2RpbmcpOiByZWFkaW5nIGNvZGUhCiog
W1RpcHMgZm9yIGxlYXJuaW5nIHByb2dyYW1taW5nXShodHRwOi8vYmxvZy5o
aXBoaXBqb3JnZS5jb20vdGlwcy1mb3ItbGVhcm5pbmctcHJvZ3JhbW1pbmcv
KQoqIFtZb3UgY2FuIGluY3JlYXNlIHlvdXIgaW50ZWxsaWdlbmNlOiA1IHdh
eXMgdG8gbWF4aW1pemUgeW91ciBjb2duaXRpdmUgcG90ZW50aWFsXShodHRw
czovL2Jsb2dzLnNjaWVudGlmaWNhbWVyaWNhbi5jb20vZ3Vlc3QtYmxvZy95
b3UtY2FuLWluY3JlYXNlLXlvdXItaW50ZWxsaWdlbmNlLTUtd2F5cy10by1t
YXhpbWl6ZS15b3VyLWNvZ25pdGl2ZS1wb3RlbnRpYWwvKTogZm9yZ2l2ZSB0
aGUgY2xpY2tiYWl0IHRpdGxlLCBpdOKAmXMgYWN0dWFsbHkgYSBnb29kIGFy
dGljbGUuCiogW0hvdyB0byBhc2sgZ29vZCBxdWVzdGlvbnNdKGh0dHBzOi8v
anZucy5jYS9ibG9nL2dvb2QtcXVlc3Rpb25zLyksIEp1bGlhIEV2YW5zLgoq
IFtTdG9wIExlYXJuaW5nIEZyYW1ld29ya3NdKGh0dHBzOi8vc2l6b3ZzLm5l
dC8yMDE4LzEyLzE3L3N0b3AtbGVhcm5pbmctZnJhbWV3b3Jrcy8pCiogW0xl
YXJuaW5nIEhvdyB0byBMZWFybl0oaHR0cHM6Ly93d3cuY291cnNlcmEub3Jn
L2xlYXJuL2xlYXJuaW5nLWhvdy10by1sZWFybik6IHBvd2VyZnVsIG1lbnRh
bCB0b29scyB0byBoZWxwIHlvdSBtYXN0ZXIgdG91Z2ggc3ViamVjdHMKKiBb
V2h5IGJvb2tzIGRvbuKAmXQgd29ya10oaHR0cHM6Ly9hbmR5bWF0dXNjaGFr
Lm9yZy9ib29rcy8pLCBBbmR5IE1hdHVzY2hhay4KCSogIkFzIGEgbWVkaXVt
LCBib29rcyBhcmUgc3VycHJpc2luZ2x5IGJhZCBhdCBjb252ZXlpbmcga25v
d2xlZGdlLCBhbmQgcmVhZGVycyBtb3N0bHkgZG9u4oCZdCByZWFsaXplIGl0
LiIKCSogIkluIGxlYXJuaW5nIHNjaWVuY2VzLCB3ZSBjYWxsIHRoaXMgbW9k
ZWwg4oCcdHJhbnNtaXNzaW9uaXNtLuKAnSBJdOKAmXMgdGhlIG5vdGlvbiB0
aGF0IGtub3dsZWRnZSBjYW4gYmUgZGlyZWN0bHkgdHJhbnNtaXR0ZWQgZnJv
bSB0ZWFjaGVyIHRvIHN0dWRlbnQsIGxpa2UgdHJhbnNjcmliaW5nIHRleHQg
ZnJvbSBvbmUgcGFnZSBvbnRvIGFub3RoZXIuIElmIG9ubHkhIgoJKiAiQnkg
cmUtdGVzdGluZyB5b3Vyc2VsZiBvbiBtYXRlcmlhbCB5b3XigJl2ZSBsZWFy
bmVkIG92ZXIgZXhwYW5kaW5nIGludGVydmFscywgeW91IGNhbiBjaGVhcGx5
IGFuZCByZWxpYWJseSBjb21taXQgaHVnZSB2b2x1bWVzIG9mIGluZm9ybWF0
aW9uIHRvIGxvbmctdGVybSBtZW1vcnkuIgoqIFtTdHJhdGVnaWVzLCBUaXBz
LCBhbmQgVHJpY2tzIGZvciBBbmtpXShodHRwczovL3NlbnJpZ2FuLmlvL2Js
b2cvZXZlcnl0aGluZy1pLWtub3ctc3RyYXRlZ2llcy10aXBzLWFuZC10cmlj
a3MtZm9yLXNwYWNlZC1yZXBldGl0aW9uLWFua2kvKTogdGhvc2UgYWR2aWNl
cyB3b3JrIGZvciBhbnkgdG9vbCBhY3R1YWxseQoJKiBBZGQgaW1hZ2VzLiBP
dXIgYnJhaW5zIGFyZSB3aXJlZCB2aXN1YWxseSwgc28gdGhpcyBoZWxwcyBy
ZXRlbnRpb24uCgkqIERvbid0IGFkZCB0aGluZ3MgeW91IGRvbid0IHVuZGVy
c3RhbmQuCgkqIERvbid0IGFkZCBjYXJkcyBtZW1vcml6aW5nIGVudGlyZSBs
aXN0cy4KCSogV3JpdGUgaXQgb3V0LiBGb3Igd3JvbmcgYW5zd2VycywgSSds
bCB3cml0ZSBpdCBvbiBwYXBlci4gVGhlIGFjdCBvZiB3cml0aW5nIGlzIG1l
ZGl0YXRpdmUuIEkgcmVhbGx5IGVuam95IHRoaXMuCgkqIEtlZXAgb24gYXNr
aW5nIHlvdXJzZWxmIHdoeT8gd2h5IGRvZXMgdGhpcyB3b3JrPyB3aHkgZG9l
cyBpdCB3b3JrIHRoaXMgd2F5PyBGb3JjZSB5b3Vyc2VsZiB0byB1bmRlcnN0
YW5kIHRoZSByb290IG9mIGEgdG9waWMuCgkqIENvcm5lbGwgTWV0aG9kOiB3
aGVuIHJlYWRpbmcgYSB0b3BpYywgd3JpdGUgb3V0IHF1ZXN0aW9ucyBvbiB0
aGUgbWFyZ2lucyB0byBxdWl6IHlvdXJzZWxmLgoJKiBQcmV0ZW5kIHlvdSBo
YXZlIHRvIHRlYWNoIGl0CgkqIFVzZSBtbmVtb25pY3MgcGhyYXNlcyBsaWtl
IFBFTURBUyBmb3IgbGlzdHMgYW5kIG90aGVyIGhhcmQtdG8tcmVtZW1iZXIg
dG9waWNzLgoJKiBEZWxldGUgY2FyZHMgdGhhdCBkb24ndCBtYWtlIHNlbnNl
IG9yIHlvdSBkb24ndCB3YW50IHRvIHJlbWVtYmVyIGFueW1vcmUuCiogW0Vm
ZmVjdGl2ZSBsZWFybmluZzogVHdlbnR5IHJ1bGVzIG9mIGZvcm11bGF0aW5n
IGtub3dsZWRnZV0oaHR0cHM6Ly93d3cuc3VwZXJtZW1vLmNvbS9lbi9hcmNo
aXZlczE5OTAtMjAxNS9hcnRpY2xlcy8yMHJ1bGVzKQoJKiBCdWlsZCB1cG9u
IHRoZSBiYXNpY3MKCSogU3RpY2sgdG8gdGhlIG1pbmltdW0gaW5mb3JtYXRp
b24gcHJpbmNpcGxlOiB0aGUgbWF0ZXJpYWwgeW91IGxlYXJuIG11c3QgYmUg
Zm9ybXVsYXRlZCBpbiBhcyBzaW1wbGUgd2F5IGFzIGl0IGlzCgkqIENsb3pl
IGRlbGV0aW9uIGlzIGVhc3kgYW5kIGVmZmVjdGl2ZTogS2FsZWlkYSdzIG1p
c3Npb24gd2FzIHRvIGNyZWF0ZSBhIC4uLiBJdCBmaW5hbGx5IHByb2R1Y2Vk
IG9uZSwgY2FsbGVkIFNjcmlwdCBYLiBCdXQgaXQgdG9vayB0aHJlZSB5ZWFy
cwoJKiBHcmFwaGljIGRlbGV0aW9uIGlzIGFzIGdvb2QgYXMgY2xvemUgZGVs
ZXRpb24KCSogQXZvaWQgc2V0cwoJKiBBdm9pZCBlbnVtZXJhdGlvbnMKCSog
Q29tYmF0IGludGVyZmVyZW5jZSAtIGV2ZW4gdGhlIHNpbXBsZXN0IGl0ZW1z
IGNhbiBiZSBjb21wbGV0ZWx5IGludHJhY3RhYmxlIGlmIHRoZXkgYXJlIHNp
bWlsYXIgdG8gb3RoZXIgaXRlbXMuIFVzZSBleGFtcGxlcywgY29udGV4dCBj
dWVzLCB2aXZpZCBpbGx1c3RyYXRpb25zLCByZWZlciB0byBlbW90aW9ucywg
YW5kIHRvIHlvdXIgcGVyc29uYWwgbGlmZQoJKiBQZXJzb25hbGl6ZSBhbmQg
cHJvdmlkZSBleGFtcGxlcyAtIHBlcnNvbmFsaXphdGlvbiBtaWdodCBiZSB0
aGUgbW9zdCBlZmZlY3RpdmUgd2F5IG9mIGJ1aWxkaW5nIHVwb24gb3RoZXIg
bWVtb3JpZXMuIFlvdXIgcGVyc29uYWwgbGlmZSBpcyBhIGdvbGQgbWluZSBv
ZiBmYWN0cyBhbmQgZXZlbnRzIHRvIHJlZmVyIHRvLiBBcyBsb25nIGFzIHlv
dSBidWlsZCBhIGNvbGxlY3Rpb24gZm9yIHlvdXJzZWxmLCB1c2UgcGVyc29u
YWxpemF0aW9uIHJpY2hseSB0byBidWlsZCB1cG9uIHdlbGwgZXN0YWJsaXNo
ZWQgbWVtb3JpZXMKCSogUHJvdmlkZSBzb3VyY2VzIC0gc291cmNlcyBoZWxw
IHlvdSBtYW5hZ2UgdGhlIGxlYXJuaW5nIHByb2Nlc3MsIHVwZGF0aW5nIHlv
dXIga25vd2xlZGdlLCBqdWRnaW5nIGl0cyByZWxpYWJpbGl0eSwgb3IgaW1w
b3J0YW5jZQoJKiBQcmlvcml0aXplIC0gZWZmZWN0aXZlIGxlYXJuaW5nIGlz
IGFsbCBhYm91dCBwcmlvcml0aXppbmcuCiogW0hvdyB0byBSZW1lbWJlciBB
bnl0aGluZyBZb3UgUmVhbGx5IFdhbnQgdG8gUmVtZW1iZXIsIEJhY2tlZCBi
eSBTY2llbmNlXShodHRwczovL3d3dy5pbmMuY29tL2plZmYtaGFkZW4vaG93
LXRvLXJlbWVtYmVyLWFueXRoaW5nLXlvdS1yZWFsbHktd2FudC10by1yZW1l
bWJlci1iYWNrZWQtYnktc2NpZW5jZS5odG1sKQoJKiBRdWl6IHlvdXJzZWxm
CgkqIFN1bW1hcml6ZSBhbmQgc2hhcmUgd2l0aCBzb21lb25lIGVsc2UuCgkq
IENvbm5lY3Qgd2hhdCB5b3UganVzdCBsZWFybmVkIHRvIGV4cGVyaWVuY2Vz
IHlvdSBwcmV2aW91c2x5IGhhZC4KClJpY2hhcmQgRmV5bm1hbidzIExlYXJu
aW5nIFN0cmF0ZWd5OgoKMS4gU3RlcCAxOiBDb250aW51YWxseSBhc2sgIldo
eT/igJ0KMi4gU3RlcCAyOiBXaGVuIHlvdSBsZWFybiBzb21ldGhpbmcsIGxl
YXJuIGl0IHRvIHdoZXJlIHlvdSBjYW4gZXhwbGFpbiBpdCB0byBhIGNoaWxk
LgozLiBTdGVwIDM6IEluc3RlYWQgb2YgYXJiaXRyYXJpbHkgbWVtb3Jpemlu
ZyB0aGluZ3MsIGxvb2sgZm9yIHRoZSBleHBsYW5hdGlvbiB0aGF0IG1ha2Vz
IGl0IG9idmlvdXMuCgo+IE1vc3QgcGVvcGxlIG92ZXJlc3RpbWF0ZSB3aGF0
IHRoZXkgY2FuIGRvIGluIDEgeWVhciBhbmQgdW5kZXJlc3RpbWF0ZSB3aGF0
IHRoZXkgY2FuIGRvIGluIGEgZGVjYWRlLgo+IOKAkyBCaWxsIEdhdGVzCgo+
IEZyYW5rbHksIHRob3VnaCwgSSB0aGluayBtb3N0IHBlb3BsZSBjYW4gbGVh
cm4gYSBsb3QgbW9yZSB0aGFuIHRoZXkgdGhpbmsgdGhleSBjYW4uIFRoZXkg
c2VsbCB0aGVtc2VsdmVzIHNob3J0IHdpdGhvdXQgdHJ5aW5nLgo+IE9uZSBi
aXQgb2YgYWR2aWNlOiBpdCBpcyBpbXBvcnRhbnQgdG8gdmlldyBrbm93bGVk
Z2UgYXMgc29ydCBvZiBhIHNlbWFudGljIHRyZWXigIrigJTigIptYWtlIHN1
cmUgeW91IHVuZGVyc3RhbmQgdGhlIGZ1bmRhbWVudGFsIHByaW5jaXBsZXMs
IGllIHRoZSB0cnVuayBhbmQgYmlnIGJyYW5jaGVzLCBiZWZvcmUgeW91IGdl
dCBpbnRvIHRoZSBkZXRhaWxzL2xlYXZlcyBvciB0aGVyZSBpcyBub3RoaW5n
IGZvciB0aGVtIHRvIGhhbmcgb24gdG8uCj4g4oCUIEVsb24gTXVzawoKPiAi
RXhwZXJpZW5jZSBpcyBzb21ldGhpbmcgeW91IGRvbid0IGdldCB1bnRpbCBq
dXN0IGFmdGVyIHlvdSBuZWVkIGl0LiIKPiDigJUgU3RldmVuIFdyaWdodAoK
IyMjIExvdy1sZXZlbAoKKiBbQmFjayB0byBCYXNpY3NdKGh0dHBzOi8vd3d3
LmpvZWxvbnNvZnR3YXJlLmNvbS8yMDAxLzEyLzExL2JhY2stdG8tYmFzaWNz
LyksIEpvZWwgU3BvbHNreS4gRXhwbGFpbnMgd2h5IGxlYXJuaW5nIGxvdyBs
ZXZlbCBwcm9ncmFtbWluZyBpcyBpbXBvcnRhbnQuCgkqIEkgdGhpbmsgdGhh
dCBzb21lIG9mIHRoZSBiaWdnZXN0IG1pc3Rha2VzIHBlb3BsZSBtYWtlIGV2
ZW4gYXQgdGhlIGhpZ2hlc3QgYXJjaGl0ZWN0dXJhbCBsZXZlbHMgY29tZSBm
cm9tIGhhdmluZyBhIHdlYWsgb3IgYnJva2VuIHVuZGVyc3RhbmRpbmcgb2Yg
YSBmZXcgc2ltcGxlIHRoaW5ncyBhdCB0aGUgdmVyeSBsb3dlc3QgbGV2ZWxz
LgoKIyMjIE5ldHdvcmsKCiogW1RoZSBHcmVhdCBDb25mdXNpb24gQWJvdXQg
VVJJc10oaHR0cHM6Ly9iZW5iZXJuYXJkYmxvZy5jb20vdGhlLWdyZWF0LWNv
bmZ1c2lvbi1hYm91dC11cmlzLykKCSogQSBVUkkgaXMgYSBzdHJpbmcgb2Yg
Y2hhcmFjdGVycyB0aGF0IGlkZW50aWZpZXMgYSByZXNvdXJjZS4gSXRzIHN5
bnRheCBpcyBgPHNjaGVtZT46PGF1dGhvcml0eT48cGF0aD4/PHF1ZXJ5PiM8
ZnJhZ21lbnQ+YCwgd2hlcmUgb25seSBgPHNjaGVtZT5gIGFuZCBgPHBhdGg+
YCBhcmUgbWFuZGF0b3J5LiBVUkwgYW5kIFVSTiBhcmUgVVJJcy4KCSogQSBV
UkwgaXMgYSBzdHJpbmcgb2YgY2hhcmFjdGVycyB0aGF0IGlkZW50aWZpZXMg
YSByZXNvdXJjZSBsb2NhdGVkIG9uIGEgY29tcHV0ZXIgbmV0d29yay4gSXRz
IHN5bnRheCBkZXBlbmRzIG9uIGl0cyBzY2hlbWUuIEUuZy4gYG1haWx0bzpi
aWxsZ0BtaWNyb3NvZnQuY29tYC4KCSogQSBVUk4gaXMgYSBzdHJpbmcgb2Yg
Y2hhcmFjdGVycyB0aGF0IHVuaXF1ZWx5IGlkZW50aWZpZXMgYSByZXNvdXJj
ZS4gSXRzIHN5bnRheCBpcyBgdXJuOjxuYW1lc3BhY2UgaWRlbnRpZmllcj46
PG5hbWVzcGFjZSBzcGVjaWZpYyBzdHJpbmc+YC4gRS5nLiBgdXJuOmlzYm46
OTc4MDA2MjMwMTIzOWAKCiMjIyBQcm9ibGVtIHNvbHZpbmcKCiogW0RlYWxp
bmcgd2l0aCBIYXJkIFByb2JsZW1zXShodHRwczovL2FydG9mcHJvYmxlbXNv
bHZpbmcuY29tL2FydGljbGVzL2hhcmQtcHJvYmxlbXMpCgojIyMgUHJvamVj
dCBtYW5hZ2VtZW50CgpTZWUgW1Byb2plY3QgbWFuYWdlbWVudCBzZWN0aW9u
IG9uIG15IGVuZ2luZWVyaW5nLW1hbmFnZW1lbnQgbGlzdCBvZiByZXNvdXJj
ZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9jaGFybGF4L2VuZ2luZWVyaW5nLW1h
bmFnZW1lbnQjcHJvamVjdC1tYW5hZ2VtZW50KS4KCiMjIyBQcm9ncmFtbWlu
ZyBsYW5ndWFnZXMKCkkgd291bGQgcmVjb21tZW5kIGxlYXJuaW5nOgoKKiBK
YXZhU2NyaXB0IGFuZCBtYXliZSBhbm90aGVyIGludGVycHJldGVkIGxhbmd1
YWdlIChQeXRob24sIFJ1YnksIGV0Yy4pLiBJbnRlcnByZXRlZCBsYW5ndWFn
ZXMgYXJlIHVzZWZ1bCBmb3IgcXVpY2sgb25lLW9mZiBhdXRvbWF0aW9uIHNj
cmlwdHMsIGFuZCBmYXN0ZXN0IHRvIHdyaXRlIGZvciBpbnRlcnZpZXdzLiBK
YXZhU2NyaXB0IGlzIHViaXF1aXRvdXMuCiogQSBjb21waWxlZCBsYW5ndWFn
ZSAoSmF2YSwgQywgQysrLi4uKS4KKiBBIG1vcmUgcmVjZW50IGxhbmd1YWdl
IHRvIHNlZSB3aGVyZSB0aGUgaW5kdXN0cnkgaXMgZ29pbmcgKGFzIG9mIHdy
aXRpbmcsIEdvLCBTd2lmdCwgUnVzdCwgRWxpeGlyLi4uKS4KKiBBIGxhbmd1
YWdlIHRoYXQgaGFzIGZpcnN0LWNsYXNzIHN1cHBvcnQgZm9yIGZ1bmN0aW9u
YWwgcHJvZ3JhbW1pbmcgKEhhc2tlbGwsIFNjYWxhLCBDbG9qdXJlLi4uKS4K
CkEgYml0IG1vcmUgcmVhZGluZzoKCiogW0EgYnJpZWYsIGluY29tcGxldGUs
IG1vc3RseSB3cm9uZyBoaXN0b3J5IG9mIHByb2dyYW1taW5nIGxhbmd1YWdl
c10oaHR0cDovL2phbWVzLWlyeS5ibG9nc3BvdC5mci8yMDA5LzA1L2JyaWVm
LWluY29tcGxldGUtYW5kLW1vc3RseS13cm9uZy5odG1sKQoqIFtUeXBlc10o
aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vZ2FyeWJlcm5oYXJkdC8xMjI5MDk4
NTZiNTcwYzVjNDU3YTZjZDY3NDc5NWE5YykKKiBbUmVzb3VyY2VzIFRvIEhl
bHAgWW91IFRvIENyZWF0ZSBQcm9ncmFtbWluZyBMYW5ndWFnZXNdKGh0dHBz
Oi8vdG9tYXNzZXR0aS5tZS9yZXNvdXJjZXMtY3JlYXRlLXByb2dyYW1taW5n
LWxhbmd1YWdlcy8pCiogW0VmZmVjdGl2ZSBQcm9ncmFtcyAtIDEwIFllYXJz
IG9mIENsb2p1cmVdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9
MlYxRnRmQkRzTFUpIPCfjp4sIFJpY2ggSGlja2V5LiBUaGUgYXV0aG9yIG9m
IENsb2p1cmUgcmVmbGVjdHMgb24gaGlzIHByb2dyYW1taW5nIGV4cGVyaWVu
Y2UgYW5kIGV4cGxhaW5zIHRoZSByYXRpb25hbGUgYmVoaW5kIHNvbWUgb2Yg
Q2xvanVyZSdzIGtleSBkZXNpZ24gZGVjaXNpb25zLgoqIFtMZWFybiBtb3Jl
IHByb2dyYW1taW5nIGxhbmd1YWdlcywgZXZlbiBpZiB5b3Ugd29uJ3QgdXNl
IHRoZW1dKGh0dHBzOi8vdGhvcnN0ZW5iYWxsLmNvbS9ibG9nLzIwMTkvMDQv
MDkvbGVhcm4tbW9yZS1wcm9ncmFtbWluZy1sYW5ndWFnZXMvKSwgVGhvcnN0
ZW4gQmFsbAoJKiBUaGVzZSBuZXcgcGVyc3BlY3RpdmVzLCB0aGVzZSBpZGVh
cyBhbmQgcGF0dGVybnMg4oCUIHRoZXkgbGluZ2VyLCB0aGV5IHN0YXkgd2l0
aCB5b3UsIGV2ZW4gaWYgeW91IGVuZCB1cCBpbiBhbm90aGVyIGxhbmd1YWdl
LiBBbmQgdGhhdCBpcyBwb3dlcmZ1bCBlbm91Z2ggdG8ga2VlcCBvbiBsZWFy
bmluZyBuZXcgbGFuZ3VhZ2VzLCBiZWNhdXNlIG9uZSBvZiB0aGUgYmVzdCB0
aGluZ3MgdGhhdCBjYW4gaGFwcGVuIHRvIHlvdSB3aGVuIHlvdeKAmXJlIHRy
eWluZyB0byBzb2x2ZSBhIHByb2JsZW0gaXMgYSBjaGFuZ2Ugb2YgcGVyc3Bl
Y3RpdmUuCgo+IFRoZXJlIGFyZSBvbmx5IHR3byBraW5kcyBvZiBsYW5ndWFn
ZXM6IHRoZSBvbmVzIHBlb3BsZSBjb21wbGFpbiBhYm91dCBhbmQgdGhlIG9u
ZXMgbm9ib2R5IHVzZXMuCgotLSBCamFybmUgU3Ryb3VzdHJ1cCAoQysrIGNy
ZWF0b3IpCgojIyMjIFB5dGhvbgoKRm9yIFB5dGhvbiBmZWVsIGZyZWUgdG8g
Y2hlY2tvdXQgbXkgW3Byb2Zlc3Npb25hbCBQeXRob24gZWR1Y2F0aW9uIHJl
cG9zaXRvcnldKGh0dHBzOi8vZ2l0aHViLmNvbS9jaGFybGF4L3B5dGhvbi1l
ZHVjYXRpb24pLgoKIyMjIyBKYXZhU2NyaXB0CgpKYXZhU2NyaXB0IGlzIHN1
Y2ggYSBwZXJ2YXNpdmUgbGFuZ3VhZ2UgdGhhdCBpdCdzIGFsbW9zdCByZXF1
aXJlZCBsZWFybmluZy4KCiogW21iZWF1ZHJ1L21vZGVybi1qcy1jaGVhdHNo
ZWV0XShodHRwczovL2dpdGh1Yi5jb20vbWJlYXVkcnUvbW9kZXJuLWpzLWNo
ZWF0c2hlZXQpOiBjaGVhdHNoZWV0IGZvciB0aGUgSmF2YVNjcmlwdCBrbm93
bGVkZ2UgeW91IHdpbGwgZnJlcXVlbnRseSBlbmNvdW50ZXIgaW4gbW9kZXJu
IHByb2plY3RzLgoKIyMjIyBGUCB2cy4gT09QCgoqIFtKYXJnb24gZnJvbSB0
aGUgZnVuY3Rpb25hbCBwcm9ncmFtbWluZyB3b3JsZF0oaHR0cHM6Ly9naXRo
dWIuY29tL2hlbWFudGgvZnVuY3Rpb25hbC1wcm9ncmFtbWluZy1qYXJnb24p
CiogW0dvb2RieWUsIE9iamVjdCBPcmllbnRlZCBQcm9ncmFtbWluZ10oaHR0
cHM6Ly9tZWRpdW0uY29tL0Bjc2NhbGZhbmkvZ29vZGJ5ZS1vYmplY3Qtb3Jp
ZW50ZWQtcHJvZ3JhbW1pbmctYTU5Y2RhNGMwZTUzIy4zOWF4MDllNGspCiog
W0Z1bmN0aW9uYWwgUHJvZ3JhbW1pbmcgJiBIYXNrZWxsXShodHRwczovL3d3
dy55b3V0dWJlLmNvbS93YXRjaD92PUxuWDNCOW9hS3p3KTogc29tZSBnb29k
IHJlYXNvbnMgdG8gbGVhcm4gRlAhCiogW0Z1bmN0aW9uYWwgUHJvZ3JhbW1p
bmcgRnVuZGFtZW50YWxzXShodHRwczovL3d3dy5tYXR0aGV3Z2Vyc3RtYW4u
Y29tL2Z1bmN0aW9uYWwtcHJvZ3JhbW1pbmctZnVuZGFtZW50YWxzLyk6IHNo
b3J0IGludHJvZHVjdGlvbiB0byBGUCBhbmQgaXRzIGFkdmFudGFnZXMuCiog
W09PIHZzIEZQXShodHRwczovL2Jsb2cuY2xlYW5jb2Rlci5jb20vdW5jbGUt
Ym9iLzIwMTQvMTEvMjQvRlB2c09PLmh0bWwpLCBSb2JlcnQgQy4gTWFydGlu
LCBUaGUgQ2xlYW4gQ29kZSBCbG9nLiBBIHByZXR0eSBpbnRlcmVzdGluZyB0
YWtlIG9uIHRoZSBkaWZmZXJlbmNlcyBiZXR3ZWVuIE9PUCBhbmQgRlAgZnJv
bSBhbiBleHBlcnQgaW4gT09QLgoJKiBPTyBpcyBub3QgYWJvdXQgc3RhdGUu
IE9iamVjdHMgYXJlIGJhZ3Mgb2YgZnVuY3Rpb25zLCBub3QgYmFncyBvZiBk
YXRhLgoJKiBGdW5jdGlvbmFsIFByb2dyYW1zLCBsaWtlIE9PIFByb2dyYW1z
LCBhcmUgY29tcG9zZWQgb2YgZnVuY3Rpb25zIHRoYXQgb3BlcmF0ZSBvbiBk
YXRhLgoJKiBGUCBpbXBvc2VzIGRpc2NpcGxpbmUgdXBvbiBhc3NpZ25tZW50
LgoJKiBPTyBpbXBvc2VzIGRpc2NpcGxpbmUgb24gZnVuY3Rpb24gcG9pbnRl
cnMuCgkqIFRoZSBwcmluY2lwbGVzIG9mIHNvZnR3YXJlIGRlc2lnbiBzdGls
bCBhcHBseSwgcmVnYXJkbGVzcyBvZiB5b3VyIHByb2dyYW1taW5nIHN0eWxl
LiBUaGUgZmFjdCB0aGF0IHlvdeKAmXZlIGRlY2lkZWQgdG8gdXNlIGEgbGFu
Z3VhZ2UgdGhhdCBkb2VzbuKAmXQgaGF2ZSBhbiBhc3NpZ25tZW50IG9wZXJh
dG9yIGRvZXMgbm90IG1lYW4gdGhhdCB5b3UgY2FuIGlnbm9yZSB0aGUgU2lu
Z2xlIFJlc3BvbnNpYmlsaXR5IFByaW5jaXBsZS4KCiMjIyBPdmVyLWVuZ2lu
ZWVyaW5nCgoqIFsxMCBtb2Rlcm4gc29mdHdhcmUgb3Zlci1lbmdpbmVlcmlu
ZyBtaXN0YWtlc10oaHR0cHM6Ly9tZWRpdW0uY29tL0ByZHN1Ymhhcy8xMC1t
b2Rlcm4tc29mdHdhcmUtZW5naW5lZXJpbmctbWlzdGFrZXMtYmM2N2ZiZWY0
ZmM4Iy5kYTZkdnp5bmUpCiogW0EgZ29vZCBleGFtcGxlIG9mIG92ZXItZW5n
aW5lZXJpbmc6IHRoZSBKdWljZXJvIHByZXNzXShodHRwczovL2Jsb2cuYm9s
dC5pby9oZXJlcy13aHktanVpY2Vyby1zLXByZXNzLWlzLXNvLWV4cGVuc2l2
ZS02YWRkNzQ1OTRlNTApIChBcHJpbCAyMDE3KQoKPiDigJxBIGNvbXBsZXgg
c3lzdGVtIHRoYXQgd29ya3MgaXMgaW52YXJpYWJseSBmb3VuZCB0byBoYXZl
IGV2b2x2ZWQgZnJvbSBhIHNpbXBsZSBzeXN0ZW0gdGhhdCB3b3JrZWQuIEEg
Y29tcGxleCBzeXN0ZW0gZGVzaWduZWQgZnJvbSBzY3JhdGNoIG5ldmVyIHdv
cmtzIGFuZCBjYW5ub3QgYmUgcGF0Y2hlZCB1cCB0byBtYWtlIGl0IHdvcmsu
IFlvdSBoYXZlIHRvIHN0YXJ0IG92ZXIsIGJlZ2lubmluZyB3aXRoIGEgd29y
a2luZyBzaW1wbGUgc3lzdGVtLuKAnQoKSm9obiBHYWxsLCBHZW5lcmFsIHN5
c3RlbWFudGljcywgYW4gZXNzYXkgb24gaG93IHN5c3RlbXMgd29yaywgYW5k
IGVzcGVjaWFsbHkgaG93IHRoZXkgZmFpbC4uLiwgMTk3NSAodGhpcyBxdW90
ZSBpcyBzb21ldGltZSByZWZlcnJlZCBhcyAiR2FsbHMnIGxhdyIpCgo+ICJT
b2Z0d2FyZSBlbmdpbmVlcmluZyBpcyB3aGF0IGhhcHBlbnMgdG8gcHJvZ3Jh
bW1pbmcKPiB3aGVuIHlvdSBhZGQgdGltZSBhbmQgb3RoZXIgcHJvZ3JhbW1l
cnMuIgoKUm9iIFBpa2UsIFtHbyBhdCBHb29nbGU6IExhbmd1YWdlIERlc2ln
biBpbiB0aGUgU2VydmljZSBvZiBTb2Z0d2FyZSBFbmdpbmVlcmluZ10oaHR0
cHM6Ly90YWxrcy5nb2xhbmcub3JnLzIwMTIvc3BsYXNoLmFydGljbGUpCgoj
IyMgUmVhZGluZwoKKiBbUGFwZXJzIHdlIGxvdmVdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9wYXBlcnMtd2UtbG92ZS9wYXBlcnMtd2UtbG92ZSk6IHBhcGVycyBm
cm9tIHRoZSBjb21wdXRlciBzY2llbmNlIGNvbW11bml0eSB0byByZWFkIGFu
ZCBkaXNjdXNzLiBDYW4gYmUgYSBnb29kIHNvdXJjZSBvZiBpbnNwaXJhdGlv
biBvZiBzb2x2aW5nIHlvdXIgZGVzaWduIHByb2JsZW1zLgoqIFtUaGUgbW9y
bmluZyBwYXBlcl0oaHR0cHM6Ly9ibG9nLmFjb2x5ZXIub3JnLyk6IG9uZSBD
UyByZXNlYXJjaCBwYXBlciBleHBsYWluZWQgZXZlcnkgbW9ybmluZy4KCiMj
IyBSZWxlYXNpbmcgJiBkZXBsb3lpbmcKCiogW0hvdyBXZSBSZWxlYXNlIFNv
IEZyZXF1ZW50bHldKGh0dHA6Ly9lbmdpbmVlcmluZy5za3liZXR0aW5nYW5k
Z2FtaW5nLmNvbS8yMDE2LzAyLzAyL2hvdy13ZS1yZWxlYXNlLXNvLWZyZXF1
ZW50bHkvKQoqIFtIb3cgdG8gZGVwbG95IHNvZnR3YXJlXShodHRwczovL3ph
Y2hob2xtYW4uY29tL3Bvc3RzL2RlcGxveWluZy1zb2Z0d2FyZSksIFphY2gg
SG9sbWFuCiogW0JsdWVHcmVlbkRlcGxveW1lbnRdKGh0dHA6Ly9tYXJ0aW5m
b3dsZXIuY29tL2JsaWtpL0JsdWVHcmVlbkRlcGxveW1lbnQuaHRtbCksIE1h
cnRpbiBGb3dsZXIKKiBbTW92ZSBmYXN0IGFuZCBicmVhayBub3RoaW5nXSho
dHRwczovL3phY2hob2xtYW4uY29tL3RhbGsvbW92ZS1mYXN0LWJyZWFrLW5v
dGhpbmcvKSwgWmFjaCBIb2xtYW4KKiBbRmxpcHBpbmcgb3V0XShodHRwOi8v
Y29kZS5mbGlja3IubmV0LzIwMDkvMTIvMDIvZmxpcHBpbmctb3V0LyksIGZs
aWNrci4gT25lIG9mIHRoZSBmaXJzdCBhcnRpY2xlcyBhYm91dCBmZWF0dXJl
IGZsYWdzLgoqIFtQcm9kdWN0aW9uIFJlYWRpbmVzcyBDaGVja2xpc3RdKGh0
dHBzOi8vZ3J1bnR3b3JrLmlvL2Rldm9wcy1jaGVja2xpc3QvKSwgR3J1bnR3
b3JrCiogW0NoZWNrbGlzdDogd2hhdCBoYWQgdG8gYmUgZG9uZSBiZWZvcmUg
ZGVwbG95aW5nIG1pY3Jvc2VydmljZXMgdG8gcHJvZHVjdGlvbl0oaHR0cHM6
Ly9oYWJyLmNvbS9lbi9wb3N0LzQzODE4Ni8pCgojIyMgU2VjdXJpdHkKCiog
W1BlbmV0cmF0aW9uIFRlc3RpbmcgVG9vbHMgQ2hlYXQgU2hlZXRdKGh0dHBz
Oi8vaGlnaG9uLmNvZmZlZS9ibG9nL3BlbmV0cmF0aW9uLXRlc3RpbmctdG9v
bHMtY2hlYXQtc2hlZXQvI2h0dHAtLWh0dHBzLXdlYnNlcnZlci1lbnVtZXJh
dGlvbikKKiBbTXkgRmlyc3QgMTAgTWludXRlcyBPbiBhIFNlcnZlciAtIFBy
aW1lciBmb3IgU2VjdXJpbmcgVWJ1bnR1XShodHRwOi8vd3d3LmNvZGVsaXR0
LmNvbS9ibG9nL215LWZpcnN0LTEwLW1pbnV0ZXMtb24tYS1zZXJ2ZXItcHJp
bWVyLWZvci1zZWN1cmluZy11YnVudHUvKQoqIFtBIHByYWN0aWNhbCBndWlk
ZSB0byBzZWN1cmluZyBtYWNPU10oaHR0cHM6Ly9naXRodWIuY29tL2RyZHVo
L21hY09TLVNlY3VyaXR5LWFuZC1Qcml2YWN5LUd1aWRlKQoqIFtXZWIgRGV2
ZWxvcGVyIFNlY3VyaXR5IENoZWNrbGlzdF0oaHR0cHM6Ly93d3cucG93ZXJk
b3duLmlvL2Jsb2cvcG9zdHMvc3Rvcmllcy93ZWItZGV2ZWxvcGVyLXNlY3Vy
aXR5LWNoZWNrbGlzdC5odG1sKQoqIFtSZWNrb24geW91J3ZlIHNlZW4gc29t
ZSBzdHVwaWQgc2VjdXJpdHkgdGhpbmdzP10oaHR0cHM6Ly93d3cudHJveWh1
bnQuY29tL3JlY2tvbi15b3V2ZS1zZWVuLXNvbWUtc3R1cGlkLXNlY3VyaXR5
LXRoaW5ncy1oZXJlLWhvbGQtbXktYmVlci8pOiBldmVyeXRoaW5nICpub3Qq
IHRvIGRvLgoKIyMjIFNoZWxsCgoqIFtBd2Vzb21lIFNoZWxsXShodHRwczov
L2dpdGh1Yi5jb20vYWxlYmNheS9hd2Vzb21lLXNoZWxsKQoqIFtCYXNoIEhh
Y2tlcnMgV2lraV0oaHR0cDovL3dpa2kuYmFzaC1oYWNrZXJzLm9yZy8pCiog
W2R5bGFuYXJhcHMvcHVyZS1iYXNoLWJpYmxlOiBhIGNvbGxlY3Rpb24gb2Yg
cHVyZSBiYXNoIGFsdGVybmF0aXZlcyB0byBleHRlcm5hbCBwcm9jZXNzZXMu
XShodHRwczovL2dpdGh1Yi5jb20vZHlsYW5hcmFwcy9wdXJlLWJhc2gtYmli
bGUpCiogW01hc3RlciB0aGUgY29tbWFuZCBsaW5lLCBpbiBvbmUgcGFnZV0o
aHR0cHM6Ly9naXRodWIuY29tL2psZXZ5L3RoZS1hcnQtb2YtY29tbWFuZC1s
aW5lKSAqKm11c3QgcmVhZCoqCgojIyMgU3lzdGVtIGFyY2hpdGVjdHVyZQoK
KiBbSGlnaCBTY2FsYWJpbGl0eV0oaHR0cDovL2hpZ2hzY2FsYWJpbGl0eS5j
b20vKTogZ3JlYXQgYmxvZyBhYm91dCBzeXN0ZW0gYXJjaGl0ZWN0dXJlLCBp
dHMgd2Vla2x5IHJldmlldyBhcnRpY2xlIGFyZSBwYWNrZWQgd2l0aCBudW1l
cm91cyBpbnNpZ2h0cyBhbmQgaW50ZXJlc3RpbmcgdGVjaG5vbG9neSByZXZp
ZXdzLiBDaGVja291dCB0aGUgW2FsbC10aW1lcyBmYXZvcml0ZXNdKGh0dHA6
Ly9oaWdoc2NhbGFiaWxpdHkuY29tL2FsbC10aW1lLWZhdm9yaXRlcy8pLgoq
IFs2IFJ1bGVzIG9mIHRodW1iIHRvIGJ1aWxkIGJsYXppbmcgZmFzdCB3ZWIg
c2VydmVyIGFwcGxpY2F0aW9uc10oaHR0cDovL2xvaWdlLmNvLzYtcnVsZXMt
b2YtdGh1bWItdG8tYnVpbGQtYmxhemluZy1mYXN0LXdlYi1hcHBsaWNhdGlv
bnMvKQoqIFtEZWVwIExlc3NvbnMgRnJvbSBHb29nbGUgQW5kIEVCYXkgT24g
QnVpbGRpbmcgRWNvc3lzdGVtcyBPZiBNaWNyb3NlcnZpY2VzXShodHRwOi8v
aGlnaHNjYWxhYmlsaXR5LmNvbS9ibG9nLzIwMTUvMTIvMS9kZWVwLWxlc3Nv
bnMtZnJvbS1nb29nbGUtYW5kLWViYXktb24tYnVpbGRpbmctZWNvc3lzdGVt
cy1vZi5odG1sKQoqIFtTZXJ2aWNlIG9yaWVudGVkIGFyY2hpdGVjdHVyZTog
c2NhbGluZyB0aGUgVWJlciBlbmdpbmVlcmluZyBjb2RlYmFzZSBhcyB3ZSBn
cm93XShodHRwczovL2VuZy51YmVyLmNvbS9zb2EvKQoqIFtUaGUgdHdlbHZl
LWZhY3RvciBhcHBdKGh0dHA6Ly8xMmZhY3Rvci5uZXQvKQoqIFtTY2FsYWJs
ZSBXZWIgQXJjaGl0ZWN0dXJlIGFuZCBEaXN0cmlidXRlZCBTeXN0ZW1zXSho
dHRwOi8vd3d3LmFvc2Fib29rLm9yZy9lbi9kaXN0c3lzLmh0bWwpCiogW0lu
dHJvZHVjdGlvbiB0byBBcmNoaXRlY3RpbmcgU3lzdGVtcyBmb3IgU2NhbGVd
KGh0dHA6Ly9sZXRoYWluLmNvbS9pbnRyb2R1Y3Rpb24tdG8tYXJjaGl0ZWN0
aW5nLXN5c3RlbXMtZm9yLXNjYWxlLykKKiBbQSBEaXN0cmlidXRlZCBTeXN0
ZW1zIFJlYWRpbmcgTGlzdF0oaHR0cDovL2RhbmNyZXMuZ2l0aHViLmlvL1Bh
Z2VzLykKKiBbU2VydmljZXMgRW5naW5lZXJpbmcgUmVhZGluZyBMaXN0XSho
dHRwczovL2dpdGh1Yi5jb20vbW1jZ3JhbmEvc2VydmljZXMtZW5naW5lZXJp
bmcpCiogW1N5c3RlbSBEZXNpZ24gQ2hlYXRzaGVldF0oaHR0cHM6Ly9naXN0
LmdpdGh1Yi5jb20vdmFzYW50aGsvNDg1ZDFjMjU3MzdlOGU3Mjc1OWYpCiog
W1RoZSBMb2c6IFdoYXQgZXZlcnkgc29mdHdhcmUgZW5naW5lZXIgc2hvdWxk
IGtub3cgYWJvdXQgcmVhbC10aW1lIGRhdGEncyB1bmlmeWluZyBhYnN0cmFj
dGlvbl0oaHR0cHM6Ly9lbmdpbmVlcmluZy5saW5rZWRpbi5jb20vZGlzdHJp
YnV0ZWQtc3lzdGVtcy9sb2ctd2hhdC1ldmVyeS1zb2Z0d2FyZS1lbmdpbmVl
ci1zaG91bGQta25vdy1hYm91dC1yZWFsLXRpbWUtZGF0YXMtdW5pZnlpbmcp
OiBvbmUgb2YgdGhvc2UgY2xhc3NpY2FsIGFydGljbGVzIHRoYXQgZXZlcnlv
bmUgc2hvdWxkIHJlYWQuCiogW0xlYXJuIGhvdyB0byBkZXNpZ24gbGFyZ2Ug
c2NhbGUgc3lzdGVtcy4gUHJlcCBmb3IgdGhlIHN5c3RlbSBkZXNpZ24gaW50
ZXJ2aWV3XShodHRwczovL2dpdGh1Yi5jb20vZG9ubmVtYXJ0aW4vc3lzdGVt
LWRlc2lnbi1wcmltZXIpIChHaXRodWIgcmVwbykKKiBbVHVybmluZyB0aGUg
ZGF0YWJhc2Ugb3V0c2lkZS1vdXQgd2l0aCBBcGFjaGUgU2FtemFdKGh0dHBz
Oi8vd3d3LmNvbmZsdWVudC5pby9ibG9nL3R1cm5pbmctdGhlLWRhdGFiYXNl
LWluc2lkZS1vdXQtd2l0aC1hcGFjaGUtc2FtemEvKQoqIFtCdWlsZGluZyBN
aWNyb3NlcnZpY2VzXShodHRwczovL3d3dy5hbWF6b24uY29tL0J1aWxkaW5n
LU1pY3Jvc2VydmljZXMtRGVzaWduaW5nLUZpbmUtR3JhaW5lZC1TeXN0ZW1z
L2RwLzE0OTE5NTAzNTgpIPCfk5YsIFNhbSBOZXdtYW4gKHF1aXRlIGNvbXBs
ZXRlIGRpc2N1c3Npb24gb2YgbWljcm9zZXJ2aWNlcykKKiBbRGVzaWduaW5n
IERhdGEtSW50ZW5zaXZlIEFwcGxpY2F0aW9uc10oaHR0cHM6Ly93d3cuYW1h
em9uLmNvbS9EZXNpZ25pbmctRGF0YS1JbnRlbnNpdmUtQXBwbGljYXRpb25z
LVJlbGlhYmxlLU1haW50YWluYWJsZS9kcC8xNDQ5MzczMzIxKQoKIyMjIyBT
Y2FsYWJpbGl0eQoKKiBJIGFscmVhZHkgbWVudGlvbmVkIHRoZSBib29rIFNj
YWxhYmlsaXR5IHJ1bGVzIGFib3ZlLCBidXQgdGhlcmUncyBhbHNvIGEgW3By
ZXNlbnRhdGlvbl0oaHR0cDovL3d3dy5zbGlkZXNoYXJlLm5ldC9jeXJpbHdh
bmcvc2NhbGFiaWxpdHktcnVsZXMpIGFib3V0IGl0LgoKIyMjIyBTdGFiaWxp
dHkKCiogSSBhbHJlYWR5IG1lbnRpb25lZCB0aGUgYm9vayBSZWxlYXNlIGl0
ISBhYm92ZS4gVGhlcmUncyBhbHNvIGEgW3ByZXNlbnRhdGlvbl0oaHR0cDov
L3d3dy5zbGlkZXNoYXJlLm5ldC9qdXN0aW5kb3JmbWFuL3N0YWJpbGl0eS1w
YXR0ZXJucy1wcmVzZW50YXRpb24pIGZyb20gdGhlIGF1dGhvci4KCiMjIyMg
UmVzaWxpZW5jeQoKKiBbVGhlIFdhbGtpbmcgRGVhZCAtIEEgU3Vydml2YWwg
R3VpZGUgdG8gUmVzaWxpZW50IEFwcGxpY2F0aW9uc10oaHR0cHM6Ly9zcGVh
a2VyZGVjay5jb20vZGFzY2hsL3RoZS13YWxraW5nLWRlYWQtYS1zdXJ2aXZh
bC1ndWlkZS10by1yZXNpbGllbnQtYXBwbGljYXRpb25zKQoqIFtEZWZlbnNp
dmUgUHJvZ3JhbW1pbmcgJiBSZXNpbGllbnQgc3lzdGVtcyBpbiBSZWFsIFdv
cmxkIChUTSldKGh0dHBzOi8vc3BlYWtlcmRlY2suY29tL3R1ZW50aS9kZWZl
bnNpdmUtcHJvZ3JhbW1pbmctYW5kLXJlc2lsaWVudC1zeXN0ZW1zLWluLXJl
YWwtd29ybGQtdG0pCiogW0Z1bGwgU3RhY2sgRmVzdDogQXJjaGl0ZWN0dXJh
bCBQYXR0ZXJucyBvZiBSZXNpbGllbnQgRGlzdHJpYnV0ZWQgU3lzdGVtc10o
aHR0cHM6Ly9zcGVha2VyZGVjay5jb20vcmFuZG9tbW9vZC9mdWxsLXN0YWNr
LWZlc3QtYXJjaGl0ZWN0dXJhbC1wYXR0ZXJucy1vZi1yZXNpbGllbnQtZGlz
dHJpYnV0ZWQtc3lzdGVtcykKKiBbUmVzaWxpZW5jZSBFbmdpbmVlcmluZyBO
b3Rlc10oaHR0cDovL3Jlc2lsaWVuY2VwYXBlcnMuY2x1Yi8pOiBjb21wcmVo
ZW5zaXZlIGxpc3Qgb2YgcmVzb3VyY2VzIG9uIHJlc2lsaWVuY2UgZW5naW5l
ZXJpbmcKCiMjIyBTaXRlIFJlbGlhYmlsaXR5IEVuZ2luZWVyaW5nIChTUkUp
CgpCb29rczoKCiogW1NpdGUgUmVsaWFiaWxpdHkgRW5naW5lZXJpbmddKGh0
dHBzOi8vbGFuZGluZy5nb29nbGUuY29tL3NyZS9ib29rcy8pIPCfk5YKCSog
V3JpdHRlbiBieSBtZW1iZXJzIG9mIEdvb2dsZSdzIFNSRSB0ZWFtLCB3aXRo
IGEgY29tcHJlaGVuc2l2ZSBhbmFseXNpcyBvZiB0aGUgZW50aXJlIHNvZnR3
YXJlIGxpZmVjeWNsZSAtIGhvdyB0byBidWlsZCwgZGVwbG95LCBtb25pdG9y
LCBhbmQgbWFpbnRhaW4gbGFyZ2Ugc2NhbGUgc3lzdGVtcy4KCkFydGljbGVz
OgoKKiBbR3JhZHVhdGluZyBmcm9tIEJvb3RjYW1wIGFuZCBpbnRlcmVzdGVk
IGluIGJlY29taW5nIGEgU2l0ZSBSZWxpYWJpbGl0eSBFbmdpbmVlcj9dKGh0
dHBzOi8vbWVkaXVtLmNvbS9AdGFtbXlidXRvdy9ncmFkdWF0aW5nLWZyb20t
Ym9vdGNhbXAtYW5kLWludGVyZXN0ZWQtaW4tYmVjb21pbmctYS1zaXRlLXJl
bGlhYmlsaXR5LWVuZ2luZWVyLWI2OWEzOGNlODU4Yik6IGEgZ3JlYXQgY29s
bGVjdGlvbiBvZiByZXNvdXJjZXMgdG8gbGVhcm4gYWJvdXQgU1JFLgoqIFtP
cGVyYXRpbmcgYSBMYXJnZSwgRGlzdHJpYnV0ZWQgU3lzdGVtIGluIGEgUmVs
aWFibGUgV2F5OiBQcmFjdGljZXMgSSBMZWFybmVkXShodHRwczovL2Jsb2cu
cHJhZ21hdGljZW5naW5lZXIuY29tL29wZXJhdGluZy1hLWhpZ2gtc2NhbGUt
ZGlzdHJpYnV0ZWQtc3lzdGVtLykKCSogQSBnb29kIHN1bW1hcnkgb2YgcHJv
Y2Vzc2VzIHRvIGltcGxlbWVudC4KCiMjIyBUZWNobmljYWwgZGVidAoKKiBb
VGVjaG5pY2FsRGVidF0oaHR0cHM6Ly9tYXJ0aW5mb3dsZXIuY29tL2JsaWtp
L1RlY2huaWNhbERlYnQuaHRtbCksIE1hcnRpbiBGb3dsZXIuCgojIyMgVGVz
dGluZwoKKiBbV2h5IGJvdGhlciB3cml0aW5nIHRlc3RzIGF0IGFsbD9dKGh0
dHBzOi8vZGF2ZS5jaGVuZXkubmV0LzIwMTkvMDUvMTQvd2h5LWJvdGhlci13
cml0aW5nLXRlc3RzLWF0LWFsbCksIERhdmUgQ2hlbmV5LiBBIGdvb2QgaW50
cm8gdG8gdGhlIHRvcGljLgoJKiBFdmVuIGlmIHlvdSBkb27igJl0LCBzb21l
b25lIHdpbGwgdGVzdCB5b3VyIHNvZnR3YXJlCgkqIFRoZSBtYWpvcml0eSBv
ZiB0ZXN0aW5nIHNob3VsZCBiZSBwZXJmb3JtZWQgYnkgZGV2ZWxvcG1lbnQg
dGVhbXMKCSogTWFudWFsIHRlc3Rpbmcgc2hvdWxkIG5vdCBiZSB0aGUgbWFq
b3JpdHkgb2YgeW91ciB0ZXN0aW5nIGJlY2F1c2UgbWFudWFsIHRlc3Rpbmcg
aXMgTyhuKQoJKiBUZXN0cyBhcmUgdGhlIGNyaXRpY2FsIGNvbXBvbmVudCB0
aGF0IGVuc3VyZSB5b3UgY2FuIGFsd2F5cyBzaGlwIHlvdXIgbWFzdGVyIGJy
YW5jaAoJKiBUZXN0cyBsb2NrIGluIGJlaGF2aW91cgoJKiBUZXN0cyBnaXZl
IHlvdSBjb25maWRlbmNlIHRvIGNoYW5nZSBzb21lb25lIGVsc2XigJlzIGNv
ZGUKKiBbVGVzdGluZyBTdHJhdGVnaWVzIGluIGEgTWljcm9zZXJ2aWNlcyBB
cmNoaXRlY3R1cmVdKGh0dHA6Ly9tYXJ0aW5mb3dsZXIuY29tL2FydGljbGVz
L21pY3Jvc2VydmljZS10ZXN0aW5nLykgKE1hcnRpbiBGb3dsZXIpIGlzIGFu
IGF3ZXNvbWUgcmVzb3VyY2VzIGV4cGxhaW5pbmcgaG93IHRvIHRlc3QgYSBz
ZXJ2aWNlIHByb3Blcmx5LgoqIFtBIFF1aWNrIFB1enpsZSB0byBUZXN0IFlv
dXIgUHJvYmxlbSBTb2x2aW5nXShodHRwOi8vd3d3Lm55dGltZXMuY29tL2lu
dGVyYWN0aXZlLzIwMTUvMDcvMDMvdXBzaG90L2EtcXVpY2stcHV6emxlLXRv
LXRlc3QteW91ci1wcm9ibGVtLXNvbHZpbmcuaHRtbD9fcj0wKS4uLiBhbmQg
YSBncmVhdCB3YXkgdG8gbGVhcm4gYWJvdXQgY29uZmlybWF0aW9uIGJpYXMg
YW5kIHdoeSB5b3UncmUgbW9zdGx5IHdyaXRpbmcgcG9zaXRpdmUgdGVzdCBj
YXNlcy4KKiBbVGhlIHRlc3QgcHlyYW1pZF0oaHR0cDovL21hcnRpbmZvd2xl
ci5jb20vYmxpa2kvVGVzdFB5cmFtaWQuaHRtbCkKKiBbSnVzdCBTYXkgTm8g
dG8gTW9yZSBFbmQtdG8tRW5kIFRlc3RzXShodHRwczovL3Rlc3RpbmcuZ29v
Z2xlYmxvZy5jb20vMjAxNS8wNC9qdXN0LXNheS1uby10by1tb3JlLWVuZC10
by1lbmQtdGVzdHMuaHRtbCkKKiBbRW5kLVRvLUVuZCBUZXN0aW5nIENvbnNp
ZGVyZWQgSGFybWZ1bF0oaHR0cDovL3d3dy5hbHdheXNhZ2lsZWNvbnN1bHRp
bmcuY29tL2FydGljbGVzL2VuZC10by1lbmQtdGVzdGluZy1jb25zaWRlcmVk
LWhhcm1mdWwvKQoqIFtNb3ZlIGZhc3QgYW5kIGRvbid0IGJyZWFrIHRoaW5n
c10oaHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vcHJlc2VudGF0aW9uL2QvMTVn
TmsyMXJqZXIzeG8tYjFacXlRVkdlYk9wX2FQdkhVM1lIN1luT014dEUvZWRp
dCNzbGlkZT1pZC5nNDM3NjYzY2UxXzUzXzU5MSkgKHByZXNlbnRhdGlvbikK
KiBbRXJhZGljYXRpbmcgTm9uLURldGVybWluaXNtIGluIFRlc3RzXShodHRw
Oi8vd3d3Lm1hcnRpbmZvd2xlci5jb20vYXJ0aWNsZXMvbm9uRGV0ZXJtaW5p
c20uaHRtbCksIE1hcnRpbiBGb3dsZXIKKiBbIkkgZ2V0IHBhaWQgZm9yIGNv
ZGUgdGhhdCB3b3Jrcywgbm90IGZvciB0ZXN0cyJdKGh0dHBzOi8vaXN0YWNl
ZS53b3JkcHJlc3MuY29tLzIwMTMvMDkvMTgva2VudC1iZWNrLWktZ2V0LXBh
aWQtZm9yLWNvZGUtdGhhdC13b3Jrcy1ub3QtZm9yLXRlc3RzLykKKiBbU29m
dHdhcmUgVGVzdGluZyBBbnRpLXBhdHRlcm5zXShodHRwOi8vYmxvZy5jb2Rl
cGlwZXMuY29tL3Rlc3Rpbmcvc29mdHdhcmUtdGVzdGluZy1hbnRpcGF0dGVy
bnMuaHRtbCksIEtvc3RpcyBLYXBlbG9uaXMuCiogW1dyaXRlIHRlc3RzLiBO
b3QgdG9vIG1hbnkuIE1vc3RseSBpbnRlZ3JhdGlvbi5dKGh0dHBzOi8vYmxv
Zy5rZW50Y2RvZGRzLmNvbS93cml0ZS10ZXN0cy1ub3QtdG9vLW1hbnktbW9z
dGx5LWludGVncmF0aW9uLTVlOGM3ZmZmNTkxYykgZm9yIGEgY29udHJhcmlh
biB0YWtlIGFib3V0IHVuaXQgdGVzdGluZy4uLgoqIFtUZXN0aW5nIGlzIE5v
dCBmb3IgQmVnaW5uZXJzXShodHRwczovL3d3dy5jYWxob3VuLmlvL3Rlc3Rp
bmctaXMtbm90LWZvci1iZWdpbm5lcnMvKTogd2h5IGxlYXJuaW5nIHRvIHRl
c3QgaXMgaGFyZC4gVGhpcyBzaG91bGRuJ3QgZGVtb3RpdmF0ZSB5b3UgdGhv
dWdoIQoKIyMjIFRvb2xzCgoqIFtEZXZEb2NzIEFQSSBEb2N1bWVudGF0aW9u
XShodHRwczovL2RldmRvY3MuaW8vKTogYSByZXBvc2l0b3J5IGZvciBtdWx0
aXBsZSBBUEkgZG9jcyAoc2VlIGFsc28gW0Rhc2ggZm9yIG1hY09TXShodHRw
czovL2thcGVsaS5jb20vZGFzaCkpLgoqIFtEZXZDaGVja2xpc3RdKGh0dHBz
Oi8vZGV2Y2hlY2tsaXN0cy5jb20vKTogYSBjb2xsYWJvcmF0aXZlIHNwYWNl
IGZvciBzaGFyaW5nIGNoZWNrbGlzdHMgdGhhdCBoZWxwIGVuc3VyZSBzb2Z0
d2FyZSBxdWFsaXR5CgoKIyMjIFZlcnNpb24gY29udHJvbCAoR2l0KQoKKiBb
R2l0IENoZWF0IFNoZWV0XShodHRwczovL2dpdGh1Yi5jb20vYXJzbGFuYmls
YWwvZ2l0LWNoZWF0LXNoZWV0KQoqIFtnaXQtdGlwc10oaHR0cHM6Ly9naXRo
dWIuY29tL2dpdC10aXBzL3RpcHMpCiogW0dpdCBmcm9tIHRoZSBpbnNpZGUg
b3V0XShodHRwczovL2NvZGV3b3Jkcy5yZWN1cnNlLmNvbS9pc3N1ZXMvdHdv
L2dpdC1mcm9tLXRoZS1pbnNpZGUtb3V0KQoKIyMjIFdvcmsgZXRoaWNzLCBw
cm9kdWN0aXZpdHkgJiB3b3JrL2xpZmUgYmFsYW5jZQoKKiBbWW91ciBub24t
bGluZWFyIHByb2JsZW0gb2YgOTAlIHV0aWxpemF0aW9uXShodHRwczovL2Js
b2cuYXNtYXJ0YmVhci5jb20vdXRpbGl6YXRpb24uaHRtbCksIEphc29uIENv
aGVuOiB3aHkgY29uc3RhbnRseSBydW5uaW5nIGF0IDkwJSB1dGlsaXphdGlv
biBpcyBhY3R1YWxseSBjb3VudGVyLXByb2R1Y3RpdmUuCiogW0V2aWRlbmNl
LWJhc2VkIGFkdmljZSBvbiBob3cgdG8gYmUgc3VjY2Vzc2Z1bCBpbiBhbnkg
am9ic10oaHR0cHM6Ly84MDAwMGhvdXJzLm9yZy9jYXJlZXItZ3VpZGUvaG93
LXRvLWJlLXN1Y2Nlc3NmdWwvKTogbW9zdCBzZWxmLWhlbHAgYWR2aWNlcyBh
cmUgbm90IHJlc2VhcmNoLWJhc2VkLiBUaGUgb25lcyBsaXN0ZWQgaW4gdGhp
cyBhcnRpY2xlIGFyZS4KKiBbVGhlIENvbXBsZXRlIEd1aWRlIHRvIERlZXAg
V29ya10oaHR0cHM6Ly9kb2lzdC5jb20vYmxvZy9jb21wbGV0ZS1ndWlkZS10
by1kZWVwLXdvcmsvKQoJKiBUaGUgYWJpbGl0eSB0byBwZXJmb3JtIGRlZXAg
d29yayBpcyBiZWNvbWluZyBpbmNyZWFzaW5nbHkgcmFyZSBhdCBleGFjdGx5
IHRoZSBzYW1lIHRpbWUgaXQgaXMgYmVjb21pbmcgaW5jcmVhc2luZ2x5IHZh
bHVhYmxlIGluIG91ciBlY29ub215LgoJKiBDaG9vc2UgWW91ciBEZWVwIFdv
cmsgU3RyYXRlZ3kKCSogQnVpbGQgYSBEZWVwIFdvcmsgUm91dGluZQoJKiBE
aXNjaXBsaW5lICMxOiBGb2N1cyBvbiB0aGUgV2lsZGx5IEltcG9ydGFudAoJ
KiBEaXNjaXBsaW5lICMyOiBBY3Qgb24gdGhlIExlYWQgTWVhc3VyZXMKCSog
RGlzY2lwbGluZSAjNDogQ3JlYXRlIGEgQ2FkZW5jZSBvZiBBY2NvdW50YWJp
bGl0eQoJKiBPdXIgQWJpbGl0eSBmb3IgRGVlcCBXb3JrIGlzIEZpbml0ZQoJ
KiBUaGUgQ3JhZnRzbWFuIEFwcHJvYWNoIHRvIFRvb2wgU2VsZWN0aW9uCgkq
IFN0b3AgVXNpbmcgU29jaWFsIE1lZGlhCgkqIEdldCBZb3VyIEJvc3Mgb24g
Qm9hcmQgV2l0aCBEZWVwIFdvcmsKKiBbRXZlcnkgcHJvZHVjdGl2aXR5IHRo
b3VnaHQgSSd2ZSBldmVyIGhhZCwgYXMgY29uY2lzZWx5IGFzIHBvc3NpYmxl
XShodHRwczovL2d1emV5LmNvbS9wcm9kdWN0aXZpdHkvKQoJKiBDb250ZXh0
IGludGVudGlvbmFsaXR5IGFzIHRoZSBrZXkgZGlmZmVyZW5jZSBiZXR3ZWVu
IGhvbWUgYW5kIGV2ZXJ5IG90aGVyIHBsYWNlIG9uIHBsYW5ldCBlYXJ0aAoJ
KiBSdWxlcyBhcmUgYWJvdXQgZXhjZXB0aW9ucwoKCiMjIyBXZWIgZGV2ZWxv
cG1lbnQKCiogW2dyYWIvZnJvbnQtZW5kLWd1aWRlXShodHRwczovL2dpdGh1
Yi5jb20vZ3JhYi9mcm9udC1lbmQtZ3VpZGUpOiBhIHN0dWR5IGd1aWRlIGFu
ZCBpbnRyb2R1Y3Rpb24gdG8gdGhlIG1vZGVybiBmcm9udCBlbmQgc3RhY2su
CiogW01haW50YWluYWJsZSBDU1NdKGh0dHA6Ly9tYWludGFpbmFibGVjc3Mu
Y29tLykKKiBbRnJvbnQtRW5kIERldmVsb3BlciBIYW5kYm9vayAyMDE5XSho
dHRwczovL2Zyb250ZW5kbWFzdGVycy5jb20vYm9va3MvZnJvbnQtZW5kLWhh
bmRib29rLzIwMTkvKSwgQ29keSBMaW5kbGV5CiogW0EgRGlyZWN0b3J5IG9m
IGRlc2lnbiBhbmQgZnJvbnQtZW5kIHJlc291cmNlc10oaHR0cDovL3VpZ29v
ZGllcy5jb20vaW5kZXguaHRtbCkKCiMjIyBXcml0aW5nCgoqIFtVbmRlcnZh
bHVlZCBTb2Z0d2FyZSBFbmdpbmVlcmluZyBTa2lsbHM6IFdyaXRpbmcgV2Vs
bF0oaHR0cHM6Ly9ibG9nLnByYWdtYXRpY2VuZ2luZWVyLmNvbS9vbi13cml0
aW5nLXdlbGwvKQoJKiBGcm9tIHRoZSBITiBkaXNjdXNzaW9uOiAiV3JpdGlu
ZyBhIGNvdXBsZSBvZiBwYWdlcyBvZiBkZXNpZ24gZG9jcyBvciBhbiBBbWF6
b24tc3R5bGUgNiBwYWdlciBvciB3aGF0ZXZlciBtaWdodCB0YWtlIGEgZmV3
IGRheXMgb2Ygd29yaywgYnV0IGNhbiBzYXZlIHdlZWtzIG9yIG1vcmUgb2Yg
d2FzdGVkIGltcGxlbWVudGF0aW9uIHRpbWUgd2hlbiB5b3UgcmVhbGlzZSB5
b3VyIHN5c3RlbSBkZXNpZ24gd2FzIGZsYXdlZCBvciBpdCBkb2Vzbid0IGFk
ZHJlc3MgYW55IHJlYWwgdXNlciBuZWVkcy4iCgojIyMgV3JpdGluZyBmb3Ig
cGVyZm9ybWFuY2UKCiogW051bWJlcnMgRXZlcnlvbmUgU2hvdWxkIEtub3dd
KGh0dHBzOi8vZXZlcnl0aGluZ2lzZGF0YS53b3JkcHJlc3MuY29tLzIwMDkv
MTAvMTcvbnVtYmVycy1ldmVyeW9uZS1zaG91bGQta25vdy8pCiogW0xhdGVu
Y3kgbnVtYmVycyBldmVyeSBwcm9ncmFtbWVyIHNob3VsZCBrbm93XShodHRw
czovL2dpc3QuZ2l0aHViLmNvbS9oZWxsZXJiYXJkZS8yODQzMzc1KQoqIFtS
b2IgUGlrZSdzIDUgUnVsZXMgb2YgUHJvZ3JhbW1pbmddKGh0dHA6Ly91c2Vy
cy5lY2UudXRleGFzLmVkdS9+YWRuYW4vcGlrZS5odG1sKQoKIyMgQ29uY2Vw
dHMKCltHbG9zc2FyeV0oZ2xvc3NhcnkubWQpCgoqIFtERERdKGh0dHBzOi8v
ZW4ud2lraXBlZGlhLm9yZy93aWtpL0RvbWFpbi1kcml2ZW5fZGVzaWduKQoq
IFtURERdKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1Rlc3QtZHJp
dmVuX2RldmVsb3BtZW50KQoqIFtCRERdKGh0dHBzOi8vZW4ud2lraXBlZGlh
Lm9yZy93aWtpL0JlaGF2aW9yLWRyaXZlbl9kZXZlbG9wbWVudCkKKiBbQ0FQ
IHRoZW9yZW1dKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0NBUF90
aGVvcmVtKQoqIFtPT1BdKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtp
L09iamVjdC1vcmllbnRlZF9wcm9ncmFtbWluZykKKiBbWUFHTkldKGh0dHBz
Oi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1lvdV9hcmVuJTI3dF9nb25uYV9u
ZWVkX2l0KQoqIFtEUlldKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtp
L0RvbiUyN3RfcmVwZWF0X3lvdXJzZWxmKQoqIFtLSVNTXShodHRwczovL2Vu
Lndpa2lwZWRpYS5vcmcvd2lraS9LSVNTX3ByaW5jaXBsZSkKKiBbU09MSURd
KGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1NPTElEXyhvYmplY3Qt
b3JpZW50ZWRfZGVzaWduKSkKKiBbR1JBU1BdKGh0dHBzOi8vZW4ud2lraXBl
ZGlhLm9yZy93aWtpL0dSQVNQXyhvYmplY3Qtb3JpZW50ZWRfZGVzaWduKSkK
KiBbTWFrZSBpdCBydW4sIG1ha2UgaXQgcmlnaHQsIG1ha2UgaXQgZmFzdF0o
aHR0cDovL2MyLmNvbS9jZ2kvd2lraT9NYWtlSXRXb3JrTWFrZUl0UmlnaHRN
YWtlSXRGYXN0KQo=
",,13892,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'Public-APIs',49594603,b'\xf0\x9f\x93\x9a A public list of APIs from round the web.',,4,13891,,391,False,b'https://api.github.com/repos/n0shake/Public-APIs/forks',"IyBQdWJsaWMtQVBJcyBbIVtUd2l0dGVyOiBAYWJnYm1dKGh0dHBzOi8vaW1n
LnNoaWVsZHMuaW8vYmFkZ2UvY29udGFjdC1AbjBzaGFrZS1ibHVlLnN2Zz9z
dHlsZT1mbGF0KV0oaHR0cHM6Ly90d2l0dGVyLmNvbS9uMHNoYWtlKSBbIVtC
dWlsZCBTdGF0dXNdKGh0dHBzOi8vdHJhdmlzLWNpLm9yZy9uMHNoYWtlL1B1
YmxpYy1BUElzLnN2Zz9icmFuY2g9bWFzdGVyKV0oaHR0cHM6Ly90cmF2aXMt
Y2kub3JnL24wc2hha2UvUHVibGljLUFQSXMpIFshW1BScyBXZWxjb21lXSho
dHRwczovL2ltZy5zaGllbGRzLmlvL2JhZGdlL1BScy13ZWxjb21lLWJyaWdo
dGdyZWVuLnN2Zz9zdHlsZT1mbGF0LXNxdWFyZSldKGh0dHA6Ly9tYWtlYXB1
bGxyZXF1ZXN0LmNvbSkKClRoaXMgaXMgYW4gYXR0ZW1wdCB0byBjYXRlZ29y
aXNlIGRpZmZlcmVudCBBUElzIHNjb3VyZWQgZnJvbSB0aGUgd2ViIHdoaWNo
IG1ha2UgdGhlaXIgcmVzb3VyY2VzIGF2YWlsYWJsZSBmb3IgY29uc3VtcHRp
b24uCgo+ICpJdGVtcyBtYXJrZWQgd2l0aCAhW09wZW4gU291cmNlXShodHRw
czovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vYWJoaXNoZWtiYW50aGlh
L1B1YmxpYy1BUElzL21hc3Rlci9vcGVuc291cmNlLnBuZyAiT3BlbiBTb3Vy
Y2UiKSBhcmUgb3Blbi1zb3VyY2UKPiAqSXRlbXMgbWFya2VkIHdpdGgg8J+S
uCBhcmUgdHJpYWwgYmFzZWQgQVBJcwoKCiMjIFRhYmxlIG9mIENvbnRlbnRz
CgotIFtBZHZlcnRpc2luZ10oI2FkdmVydGlzaW5nKQotIFtBbmFseXRpY3Nd
KCNhbmFseXRpY3MpCi0gW0F1Z21lbnRlZCBSZWFsaXR5XSgjYXVnbWVudGVk
LXJlYWxpdHkpCi0gW0JhciBDb2RlXSgjYmFyY29kZSkKLSBbQmlnIERhdGEg
YW5kIEFuYWx5dGljc10oI2JpZy1kYXRhLWFuZC1hbmFseXRpY3MpCi0gW0Jp
dGNvaW5dKCNiaXRjb2luYml0Y29pbi13YWxsZXRzKQotIFtDYWxlbmRhcl0o
I2NhbGVuZGFyKQotIFtDYXB0Y2hhXSgjY2FwdGNoYSkKLSBbQ2hlY2sgSW5d
KCNjaGVjay1pbikKLSBbQ29tbWVyY2VdKCNjb21tZXJjZSkKLSBbQ29tbXVu
aWNhdGlvbl0oI2NvbW11bmljYXRpb24pCi0gW0NvbnRlbnRdKCNjb250ZW50
KQotIFtDdXJyZW5jeV0oI2N1cnJlbmN5KQotIFtEYXRhIFNjaWVuY2VdKCNk
YXRhLXNjaWVuY2UpCi0gW0Rlc2lnbl0oI2Rlc2lnbikKLSBbRGljdGlvbmFy
eV0oI2RpY3Rpb25hcnkpCi0gW0VudGVydGFpbm1lbnRdKCNlbnRlcnRhaW5t
ZW50KQotIFtFdmVudHNdKCNldmVudHMpCi0gW0ZhY2UgUmVjb2duaXRpb25d
KCNmYWNlLXJlY29nbml0aW9uKQotIFtGaWxlIFN0b3JhZ2UgYW5kIE1hbmlw
dWxhdGlvbl0oI2ZpbGUtc3RvcmFnZS1hbmQtbWFuaXB1bGF0aW9uKQotIFtG
aW5hbmNlXSgjZmluYW5jZSkKLSBbRml0bmVzc10oI2ZpdG5lc3MpCi0gW0dv
b2dsZV0oI2dvb2dsZSkKLSBbSWRlbnRpdHkgVmVyaWZpY2F0aW9uXSgjaWRl
bnRpdHktdmVyaWZpY2F0aW9uKQotIFtJbWFnZSBNb2RlcmF0aW9uXSgjaW1h
Z2UtbW9kZXJhdGlvbikKLSBbSW9UXSgjaW90KQotIFtMb2dpbiBhbmQgQXV0
aGVudGljYXRpb25dKCNsb2dpbi1hdXRoZW50aWNhdGlvbikKLSBbTWFjaGlu
ZSBMZWFybmluZ10oI21hY2hpbmUtbGVhcm5pbmcpCi0gW01hcHNdKCNtYXBz
KQotIFtNYXRoXSgjbWF0aCkKLSBbTWVkaWNhbF0oI21lZGljYWwpCi0gW01p
c2NlbGxhbmVvdXNdKCNtaXNjZWxsYW5lb3VzKQotIFtNb3ZpZXNdKCNtb3Zp
ZXMpCi0gW011c2ljXSgjbXVzaWMpCgktIFtNdXNpYyBBbmFseXRpY3NdKCNt
dXNpYy1hbmFseXRpY3MpCgktIFtNdXNpYyBEaXNjb3ZlcnldKCNtdXNpYy1k
aXNjb3ZlcnkpCgktIFtNdXNpYyBJZGVudGlmaWNhdGlvbl0oI211c2ljLWlk
ZW50aWZpY2F0aW9uKQogICAgLSBbTXVzaWMgTHlyaWNzXSgjbXVzaWMtbHly
aWNzKQogICAgLSBbTXVzaWMgU3RvcmVdKCNtdXNpYy1zdG9yZXMpCi0gW05h
dHVyYWwgTGFuZ3VhZ2UgUHJvY2Vzc2luZ10oI25hdHVyYWwtbGFuZ3VhZ2Ut
cHJvY2Vzc2luZykKLSBbTmV3c10oI25ld3Mtc2VydmljZXMpCi0gW1BsYWNl
aG9sZGVyIEltYWdlc10oI3BsYWNlaG9sZGVyLWltYWdlcykKLSBbUGxhY2Vz
XSgjcGxhY2VzKQotIFtQcm9kdWN0XSgjcHJvZHVjdCkKLSBbUXVvdGVzXSgj
cXVvdGVzKQotIFtTY2llbmNlXSgjc2NpZW5jZSkKLSBbU29jaWFsIE1lZGlh
XSgjc29jaWFsLW1lZGlhKQotIFtTb3VyY2UgQ29udHJvbF0oI3NvdXJjZS1j
b250cm9sKQotIFtTcG9ydF0oI3Nwb3J0KQotIFtUcmFuc3BvcnRhdGlvbl0o
I3RyYW5zcG9ydGF0aW9uKQotIFtVUkwgU2hvcnRlbmVyc10oI3VybC1zaG9y
dGVuZXJzKQotIFtWaWRlb2dhbWVzXSgjdmlkZW9nYW1lcykKLSBbV2VhdGhl
cl0oI3dlYXRoZXIpCi0gW1Jlc291cmNlcyBGb3IgRGVzaWduIGFuZCBEaXNj
b3Zlcnkgb2YgQVBJc10oI3Jlc291cmNlcy1mb3ItZGVzaWduLWFuZC1kaXNj
b3Zlcnktb2YtYXBpcykKLSBbTW9yZSBSZXNvdXJjZXNdKCNtb3JlLXJlc291
cmNlcykKLSBbQ29udHJpYnV0ZV0oI2NvbnRyaWJ1dGlvbnMpCgoKQVBJcwot
LS0tLS0tCgojIyMgQWR2ZXJ0aXNpbmcKCi0gW0FtYXpvbiBNb2JpbGUgQWRz
XShodHRwczovL2RldmVsb3Blci5hbWF6b24uY29tL21vYmlsZS1hZHMpIC0g
TW9uZXRpemUgYWNyb3NzIHBsYXRmb3JtcyB3aXRoIG11bHRpcGxlIGFkIGZv
cm1hdHMuCi0gW0ZhY2Vib29rIE1hcmtldGluZyBBUEldKGh0dHBzOi8vZGV2
ZWxvcGVycy5mYWNlYm9vay5jb20vZG9jcy9tYXJrZXRpbmctYXBpcykgLSBN
YW5hZ2UgYWRzIGFuZCBjYW1wYWlnbnMgdXNpbmcgdGhlIEZhY2Vib29rIEFQ
SS4KLSBbR29vZ2xlIEFkU2Vuc2VdKGh0dHBzOi8vZGV2ZWxvcGVycy5nb29n
bGUuY29tL2Fkc2Vuc2UvP2hsPWVuKSAtIEZyZWUsIGZsZXhpYmxlIHdheSB0
byBlYXJuIG1vbmV5IGZyb20geW91ciB3ZWJzaXRlcywgbW9iaWxlIHNpdGVz
LCBhbmQgc2l0ZSBzZWFyY2ggcmVzdWx0cy4KLSBbR29vZ2xlIEFkV29yZHMg
QVBJXShodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS9hZHdvcmRzL2Fw
aS9kb2NzL2d1aWRlcy9zdGFydCkgLSBNYW5hZ2UgR29vZ2xlIEFkV29yZHMg
Y2FtcGFpZ25zIHByb2dyYW1tYXRpY2FsbHkuCi0gW01pY3Jvc29mdCBBZHZl
cnRpc2luZyBQbGF0Zm9ybSAtIEJpbmcgQWRzIEFQSV0oaHR0cHM6Ly9tc2Ru
Lm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9iaW5nLWFkcy1hcGkuYXNw
eCkgLSBQcm92aWRlcyBwcm9ncmFtbWF0aWMgYWNjZXNzIHRvIHZhcmlvdXMg
YWR2ZXJ0aXNpbmcgdGVjaG5vbG9naWVzLgotIFtZYWhvbyBHZW1pbmkgQVBJ
XShodHRwczovL2RldmVsb3Blci55YWhvby5jb20vZ2VtaW5pLykgLSBBbGxv
d3MgYWR2ZXJ0aXNlcnMgdG8gbWFuYWdlIGNvbXBsZXggR2VtaW5pIGFjY291
bnRzIGFuZCBjYW1wYWlnbnMgbW9yZSBlZmZpY2llbnRseS4KCiMjIyBBbmFs
eXRpY3MKCi0gW0FtYXpvbiBNb2JpbGUgQW5hbHl0aWNzXShodHRwczovL2F3
cy5hbWF6b24uY29tL2RvY3VtZW50YXRpb24vbW9iaWxlYW5hbHl0aWNzLykg
LSBTZXJ2aWNlIGZvciBjb2xsZWN0aW5nLCB2aXN1YWxpemluZywgYW5kIHVu
ZGVyc3RhbmRpbmcgYXBwIHVzYWdlIGRhdGEgYXQgc2NhbGUuCi0gW0NsaWNr
eV0oaHR0cHM6Ly9jbGlja3kuY29tL2hlbHAvYXBpKSAtIEFsbG93cyB5b3Ug
dG8gZXh0cmFjdCB5b3VyIHdlYiBzaXRlJ3MgdHJhZmZpYyBkYXRhIGludG8g
c2V2ZXJhbCBmb3JtYXRzLCBtYWtpbmcgaXQgZWFzeSB0byBpbnRlZ3JhdGUs
IGFuYWx5emUsIG9yIHN0b3JlIHlvdXIgZGF0YSB3aXRoaW4geW91ciBvd24g
YXBwbGljYXRpb24uCi0gW0NvdW50bHldKGh0dHA6Ly9yZXNvdXJjZXMuY291
bnQubHkvcmVmZXJlbmNlKSAtIFNlbGYtaG9zdGVkIG9yIHByaXZhdGUgY2xv
dWQgbW9iaWxlLCB3ZWIgYW5kIGRlc2t0b3AgYW5hbHl0aWNzLiAhW09wZW4g
U291cmNlXShodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vYWJo
aXNoZWtiYW50aGlhL1B1YmxpYy1BUElzL21hc3Rlci9vcGVuc291cmNlLnBu
ZyAiT3BlbiBTb3VyY2UiKQotIFtGYWJyaWNdKGh0dHBzOi8vZ2V0LmZhYnJp
Yy5pby8pIC0gQSBwbGF0Zm9ybSB0aGF0IGhlbHBzIHlvdXIgbW9iaWxlIHRl
YW0gYnVpbGQgYmV0dGVyIGFwcHMsIHVuZGVyc3RhbmQgeW91ciB1c2Vycywg
YW5kIGdyb3cgeW91ciBidXNpbmVzcy4KLSBbRmx1cnJ5XShodHRwczovL2Rl
dmVsb3Blci55YWhvby5jb20vZmx1cnJ5L2RvY3MvYXBpLykgLSBZYWhvb+KA
mXMgRmx1cnJ5IHByb3ZpZGVzIHlvdSB3aXRoIGEgbnVtYmVyIG9mIEFQSXMg
ZW5hYmxpbmcgeW91IHRvIGV4cG9ydCB5b3VyIGRhdGEuCi0gW0dvb2dsZSBB
bmFseXRpY3NdKGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL2FuYWx5
dGljcy8/aGw9ZW4pIC0gR29vZ2xlIEFuYWx5dGljcyBwcm92aWRlcyBBUElz
IHRvIGNvbGxlY3QsIGNvbmZpZ3VyZSwgYW5kIHJlcG9ydCBvbiB1c2VyLWlu
dGVyYWN0aW9ucyB3aXRoIHlvdXIgb25saW5lIGNvbnRlbnQuCi0gW0xvY2Fs
eXRpY3NdKGh0dHA6Ly9kb2NzLmxvY2FseXRpY3MuY29tL2Rldi9xdWVyeS1h
cGkuaHRtbCNxdWVyeS1hcGkpIC0gSW50ZXJmYWNlIHRvIExvY2FseXRpY3Mg
YW5hbHl0aWNzIHBsYXRmb3JtLgotIFtNYXRvbW9dKGh0dHBzOi8vbWF0b21v
Lm9yZy9kb2NzL2FuYWx5dGljcy1hcGkvKSAtIE1hdG9tbyBpcyBhbiBhbGwt
aW4tb25lIHByZW1pdW0gd2ViIGFuYWx5dGljcyBwbGF0Zm9ybSBkZXNpZ25l
ZCB0byBnaXZlIHlvdSB0aGUgbW9zdCBjb25jbHVzaXZlIGluc2lnaHRzLiDw
n5K4Ci0gW01peFBhbmVsXShodHRwczovL21peHBhbmVsLmNvbS9oZWxwL3Jl
ZmVyZW5jZSkgLSBBbmFseXRpY3MgZm9yIG1vYmlsZSBhbmQgd2ViIHdoaWNo
IGhlbHBzIHlvdSBhbmFseXplIHRoZSBhY3Rpb25zIHBlb3BsZSB0YWtlIGlu
IHlvdXIgYXBwbGljYXRpb24uCi0gW09wZW4gV2ViIEFuYWx5dGljc10oaHR0
cHM6Ly9naXRodWIuY29tL3BhZGFtcy9PcGVuLVdlYi1BbmFseXRpY3Mvd2lr
aS9EYXRhLUFjY2Vzcy1BUEkpIC0gUHJvdmlkZXMgYSB3YXkgdG8gcmVxdWVz
dCBhbmQgd29yayB3aXRoIHlvdXIgZGF0YSBvdXRzaWRlIG9mIHRoZSBPV0Eg
cmVwb3J0aW5nIGludGVyZmFjZS4KLSBbVGlja3NlbF0oaHR0cHM6Ly90aWNr
c2VsLmNvbSkgLSBGcmllbmRseSB3ZWJzaXRlIGFuYWx5dGljcyBtYWRlIGZv
ciBodW1hbnMuIFNlY3VyZSBhbmQgcG93ZXJmdWwgeWV0IHNpbXBsZSB0byB1
c2UuCi0gW1dvb3ByYV0oaHR0cHM6Ly93d3cud29vcHJhLmNvbS9kb2NzL2Rl
dmVsb3Blci9hbmFseXRpY3MtYXBpLykgLSBSZWFsLXRpbWUgd2Vic2l0ZSBh
bmFseXNpcyB0b29sIHRoYXQgdGFyZ2V0cyBjdXN0b21lciBlbmdhZ2VtZW50
LgotIFtab2hvIFJlcG9ydHMgQVBJXShodHRwczovL3pvaG9yZXBvcnRzYXBp
Lndpa2kuem9oby5jb20vKSAtIEJ1aWxkIHBvd2VyZnVsIHJlcG9ydGluZyBh
bmQgYW5hbHl0aWNhbCBjYXBhYmlsaXRpZXMgaW50byB5b3VyIGFwcGxpY2F0
aW9uLgoKIyMjIEF1Z21lbnRlZCBSZWFsaXR5CgotIFtWdWZvcmlhXShodHRw
czovL2xpYnJhcnkudnVmb3JpYS5jb20vKSAtIFNvbGlkIFNESyB3aXRoIHJv
YnVzdCBkZXZlbG9wbWVudCBvcHRpb25zLiDwn5K4Ci0gW1dpa2l0dWRlXSho
dHRwOi8vd3d3Lndpa2l0dWRlLmNvbS9kb3dubG9hZC8pIC0gV2lraXR1ZGXi
gJlzIGFsbC1pbi1vbmUgQVIgc29sdXRpb24gaW5jbHVkZXMgaW1hZ2UgcmVj
b2duaXRpb24gJiB0cmFja2luZywgM0QgbW9kZWwgcmVuZGVyaW5nLCB2aWRl
byBvdmVybGF5LCBsb2NhdGlvbiBiYXNlZCBBUi4g8J+SuAoKIyMjIEJhckNv
ZGUKCi0gW0dvb2dsZSBCYXJjb2RlXShodHRwczovL2RldmVsb3BlcnMuZ29v
Z2xlLmNvbS92aXNpb24vYmFyY29kZXMtb3ZlcnZpZXc/aGw9ZW4pIC0gVGhl
IEJhcmNvZGUgQVBJIGRldGVjdHMgYmFyY29kZXMgaW4gcmVhbC10aW1lLCBv
biBkZXZpY2UsIGluIGFueSBvcmllbnRhdGlvbi4gSXQgY2FuIGFsc28gZGV0
ZWN0IG11bHRpcGxlIGJhcmNvZGVzIGF0IG9uY2UuCi0gW0VBTi1TZWFyY2hd
KGh0dHBzOi8vd3d3LmVhbi1zZWFyY2gub3JnL2Vhbi1kYXRhYmFzZS1hcGku
aHRtbCkgLSBUaGUgRUFOLVNlYXJjaCBBUEkgYWxsb3dzIHlvdSB0byBsb29r
dXAgcHJvZHVjdHMgYnkgRUFOLCBVUEMgb3IgR1RJTiBiYXJjb2RlLiDwn5K4
Ci0gW1FSIENvZGUgQVBJXShodHRwczovL2Z1bmdlbmVyYXRvcnMuY29tL2Fw
aS9xcmNvZGUvKSAtIFFSIENvZGUgUkVTVCBBUEkuIENhbiBjcmVhdGUgUVIg
Y29kZSBpbWFnZXMgb3IgcmVhZCBleGlzdGluZyBpbWFnZXMgYW5kIHJldHVy
biB0aGUgY29udGVudHMuIPCfkrgKCiMjIyBCaWcgRGF0YSBhbmQgQW5hbHl0
aWNzCgotIFtHb29nbGUgQ2hhcnRzXShodHRwczovL2RldmVsb3BlcnMuZ29v
Z2xlLmNvbS9jaGFydC9pbnRlcmFjdGl2ZS9kb2NzLykgLSBGcmVlIHRvb2wg
d2l0aCBhIHdpZGUgcmFuZ2Ugb2YgY2FwYWJpbGl0aWVzIGZvciB2aXN1YWxp
emluZyBkYXRhIGZyb20gYSB3ZWJzaXRlLgotIFtLZWVuIElPXShodHRwczov
L2tlZW4uaW8vZG9jcy9hcGkvKSAtIEtlZW4gSU8gaXMgYSBwb3dlcmZ1bCwg
ZmxleGlibGUsIGFuZCBzY2FsZWFibGUgc29sdXRpb24gdGhhdOKAmXMgbGl0
ZXJhbGx5IEJpZyBEYXRhLCBlYXN5LXRvLWltcGxlbWVudCBhbmQgYXQgeW91
ciBmaW5nZXJ0aXBzLgotIFtNb25nbyBEQl0oaHR0cHM6Ly9naXRodWIuY29t
L21vbmdvZGIpIC0gbW9uZ29EQiBpcyBpZGVhbCBmb3IgZGV2ZWxvcGVycyB3
aG8gd2FudCBwcmVjaXNlIGNvbnRyb2wgb3ZlciB0aGUgZmluYWwgcmVzdWx0
cyBhbmQgcHJvY2Vzc2VzIGZvciBoYW5kbGluZyBCaWcgRGF0YS4KLSBbUnlm
dF0oaHR0cDovL3d3dy5yeWZ0LmNvbS9hcGkpIC0gaW50ZWdyYXRlIHRoZSBS
eWZ0IE9OReKAmXMgZGF0YSBhbmFseXNpcyBjYXBhYmlsaXRpZXMgaW50byBl
eGlzdGluZyBiaWcgZGF0YSBlbnZpcm9ubWVudHMgZm9yIGZhc3RlciBkYXRh
IGFuYWx5c2lzIGFuZCByZWFsLXRpbWUgaW50ZWxsaWdlbmNlLgotIFtMaW5r
ZWREYXRhLkNlbnRlcl0oaHR0cDovL2xpbmtlZGRhdGEuY2VudGVyL2hvbWUv
Z2RhYXMpIC0gYSBSREYgZ3JhcGggZGF0YWJhc2UgYXMgYSBzZXJ2aWNlIHdp
dGggVzNDIFNQQVJRTCBxdWVyeSBhbmQgU1BBUlFMIHVwZGF0ZSBhcGlzLiDw
n5K4CgojIyMgQml0Y29pbi9CaXRjb2luIFdhbGxldHMKCi0gW0JpdGNvaW5d
KGh0dHBzOi8vYml0Y29pbi5vcmcvZW4vZGV2ZWxvcGVyLWRvY3VtZW50YXRp
b24pIC0gRmluZCB1c2VmdWwgcmVzb3VyY2VzLCBndWlkZXMgYW5kIHJlZmVy
ZW5jZSBtYXRlcmlhbCBmb3IgZGV2ZWxvcGVycy4KLSBbQml0Y29pbmNoYXJ0
c10oaHR0cHM6Ly9iaXRjb2luY2hhcnRzLmNvbS9hYm91dC9tYXJrZXRzLWFw
aS8pIC0gWW91IGNhbiB1c2UgdGhpcyBBUEkgdG8gaW5jbHVkZSBtYXJrZXRz
IGRhdGEgaW4geW91ciB3ZWJzaXRlcywgbW9iaWxlIGFwcHMgb3IgZGVza3Rv
cCBhcHBsZXRzLgotIFtiaXRwYXldKGh0dHBzOi8vYml0cGF5LmNvbS9kZXZl
bG9wZXJzKSAtIEEgc2ltcGxlLCBSRVNUZnVsIEFQSSB0byB0aGUgbW9zdCBw
b3dlcmZ1bCBiaXRjb2luIGluZnJhc3RydWN0dXJlIG9uIHRoZSBwbGFuZXQu
Ci0gW0Jsb2NrXShodHRwczovL2Jsb2NrLmlvLykgLSBUaGUgbW9zdCB2ZXJz
YXRpbGUgYW5kIHNlY3VyZSB3YWxsZXQgZm9yIGFsbCB5b3VyIGNvaW5zLgot
IFtCbG9ja0N5cGhlcl0oaHR0cHM6Ly93d3cuYmxvY2tjeXBoZXIuY29tLykg
LSBCbG9ja0N5cGhlciBpcyB0aGUgaW5mcmFzdHJ1Y3R1cmUgZmFicmljIGZv
ciBibG9ja2NoYWluIGFwcGxpY2F0aW9ucwotIFtCbG9ja0ZhY3RzLmlvXSho
dHRwczovL2Jsb2NrZmFjdHMuaW8vKSAtIENvbXBsaWFuY2UtZmlyc3QgZGln
aXRhbCBhc3NldCBkYXRhIHdpdGggUkVTVCBhbmQgV2ViU29ja2V0IEFQSSBz
dXBwb3J0LiBSZWFsLXRpbWUgY3J5cHRvY3VycmVuY3kgZGF0YSBmcm9tIG11
bHRpcGxlIGV4Y2hhbmdlcyB2aWEgYSBzaW5nbGUgdW5pZmllZCBBUEkuIFNE
S3MgZm9yIGludGVncmF0aW9uLCByaWNoIGhpc3RvcmljIHRpY2sgZGF0YS4K
LSBbQ29pbmJhc2VdKGh0dHBzOi8vZGV2ZWxvcGVycy5jb2luYmFzZS5jb20v
KSAtIENvaW5iYXNlIEFQSXMgYW5kIGRldmVsb3BlciB0b29scyBtYWtlIGJ1
aWxkaW5nIGJpdGNvaW4gYW5kIGJsb2NrY2hhaW4gYXBwcyBtdWNoIGVhc2ll
ci4KLSBbQ29pbkRlc2tdKGh0dHA6Ly93d3cuY29pbmRlc2suY29tL2FwaS8p
IC0gQml0Y29pbiBQcmljZSBJbmRleAotIFtDb2lubG9yZV0oaHR0cHM6Ly93
d3cuY29pbmxvcmUuY29tL2NyeXB0b2N1cnJlbmN5LWRhdGEtYXBpKSAtIENy
eXB0b2N1cnJlbmN5IHRpY2sgZGF0YSBBUEkKLSBbQ29pbmtpdGVdKGh0dHBz
Oi8vY29pbmtpdGUuY29tL2RldmVsb3BlcnMpIC0gQ29pbmtpdGUncyBCaXRj
b2luIEFQSSBwcm92aWRlcyBzaW1wbGUgYW5kIHBvd2VyZnVsIFJFU1QgaW50
ZWdyYXRpb25zIGZvciBhZGRpbmcgYml0Y29pbiBmdW5jdGlvbnMgaW50byB5
b3VyIGJ1c2luZXNzIC8gYXBwbGljYXRpb24uCi0gW0NvaW5NYXJrZXRDYXBd
KGh0dHBzOi8vY29pbm1hcmtldGNhcC5jb20vYXBpLykgLSBDcnlwdG9jdXJy
ZW5jaWVzIFByaWNlcwotIFtjb2lucGFwcmlrYV0oaHR0cHM6Ly9hcGkuY29p
bnBhcHJpa2EuY29tKSAtIENyeXB0b2N1cnJlbmNpZXMgcHJpY2VzLCBtYXJr
ZXQgY2FwaXRhbGl6YXRpb24sIHZvbHVtZSBhbmQgbW9yZS4KLSBbQ3J5cHRv
Q29tcGFyZV0oaHR0cHM6Ly93d3cuY3J5cHRvY29tcGFyZS5jb20vYXBpKSAt
IENyeXB0b2N1cnJlbmNpZXMgQ29tcGFyaXNvbgotIFtDcnlwdG9uYXRvcl0o
aHR0cHM6Ly93d3cuY3J5cHRvbmF0b3IuY29tL2FwaS8pIC0gQ3J5cHRvY3Vy
cmVuY2llcyBFeGNoYW5nZSBSYXRlcwotIFtDb2luaWd5XShodHRwczovL2Nv
aW5pZ3kuZG9jcy5hcGlhcnkuaW8pIC0gSW50ZXJhY3Qgd2l0aCBDb2luaWd5
IEFjY291bnRzIGFuZCBFeGNoYW5nZSBBY2NvdW50cyBEaXJlY3RseQotIFtF
eGNoYW5nZSBSYXRlcyBBUEldKGh0dHBzOi8vYmxvY2tjaGFpbi5pbmZvL2Fw
aS9leGNoYW5nZV9yYXRlc19hcGkpIC0gTWFya2V0IFByaWNlcyBhbmQgZXhj
aGFuZ2VzIHJhdGVzIGFwaS4KLSBbU2hhcGVTaGlmdC5pb10oaHR0cHM6Ly9z
aGFwZXNoaWZ0LmlvLykgLSBFeGNoYW5nZSBiZXR3ZWVuIGNyeXB0b2N1cnJl
bmNpZXMgd2l0aG91dCBhbiBhY2NvdW50LiAgV2VsbCBkb2N1bWVudGVkIEFQ
SSBmb3IgZWFzeSB1c2UuCi0gW1BvbG9uaWV4XShodHRwczovL3BvbG9uaWV4
LmNvbS9zdXBwb3J0L2FwaS8pIC0gVVMgYmFzZWQgZGlnaXRhbCBhc3NldCBl
eGNoYW5nZQoKIyMjIENhbGVuZGFyCgotIFtDYWxlbmRhckluZGV4XShodHRw
czovL3d3dy5jYWxlbmRhcmluZGV4LmNvbSkgLSBXb3JsZHdpZGUgSG9saWRh
eXMgYW5kIFdvcmtpbmcgRGF5cyBBUEkuCi0gW0hvbGlkYXkgQVBJXShodHRw
czovL2hvbGlkYXlhcGkucGwvKSAtIFB1YmxpYyBob2xpZGF5IEFQSSBzZXJ2
aWNlIGZvciBzZXZlcmFsIHN1cHBvcnRlZCBjb3VudHJpZXMuCgojIyMgQ2Fw
dGNoYQoKLSBbQW50aS1DYXB0Y2hhXShodHRwczovL2FudGktY2FwdGNoYS5j
b20vYXBpZG9jKSAtIEFjY2VzcyB0byBBbnRpLUNhcHRjaGHigJlzIEFQSS4K
LSBbTmF2ZXIgQ2FwdGNoYV0oaHR0cHM6Ly9kZXZlbG9wZXJzLm5hdmVyLmNv
bS9wcm9kdWN0cy9jYXB0Y2hhKSAtIEFjY2VzcyB0byBOYXZlcuKAmXMgQ2Fw
dGNoYSBBUEkuCi0gW1Byb3h5Q3Jhd2xdKGh0dHBzOi8vcHJveHljcmF3bC5j
b20pIOKAlCBDcmF3bCBhbmQgc2NyYXBlIHdlYnNpdGVzIHdpdGhvdXQgdGhl
IG5lZWQgb2YgcHJveGllcywgaW5mcmFzdHJ1Y3R1cmUgb3IgYnJvd3NlcnMu
IFdlIHNvbHZlIGNhcHRjaGFzIGZvciB5b3UgYW5kIHByZXZlbnQgeW91IGJl
aW5nIGJsb2NrZWQgd2hpbGUgc3BlZWRpbmcgdXAgeW91ciBkZXZlbG9wbWVu
dC4g8J+SuAotIFtHb29nbGUgcmVDQVBUQ0hBXShodHRwczovL2RldmVsb3Bl
cnMuZ29vZ2xlLmNvbS9yZWNhcHRjaGEvaW50cm8/aGw9ZW4pIC0gUmVDQVBU
Q0hBIGxldHMgeW91IGVtYmVkIGEgQ0FQVENIQSBpbiB5b3VyIHdlYiBwYWdl
cyBpbiBvcmRlciB0byBwcm90ZWN0IHRoZW0gYWdhaW5zdCBzcGFtIGFuZCBv
dGhlciB0eXBlcyBvZiBhdXRvbWF0ZWQgYWJ1c2UuCgojIyMgQ2hlY2stSW4K
Ci0gW0ZhY2Vib29rIENoZWNrLUluXShodHRwczovL2RldmVsb3BlcnMuZmFj
ZWJvb2suY29tL2RvY3MvZ3JhcGgtYXBpL3JlZmVyZW5jZS92Mi4zL2NoZWNr
aW4pIC0gQSBjaGVjay1pbiBtYWRlIHRvIGEgbG9jYXRpb24tYmFzZWQgUGFn
ZS4KLSBbR29vZ2xlIFBsYWNlc10oaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2ds
ZS5jb20vcGxhY2VzLz9obD1lbikgLSBBY2Nlc3MgdG8gR29vZ2xlIFBsYWNl
c+KAmSBBUEkuCi0gW0ZvdXJzcXVhcmUgQ2hlY2stSW5dKGh0dHBzOi8vZGV2
ZWxvcGVyLmZvdXJzcXVhcmUuY29tL2RvY3MvY2hlY2tpbnMvYWRkKSAtIEFs
bG93cyB5b3UgdG8gY2hlY2sgaW4gdG8gYSBwbGFjZS4KCiMjIyBDb21tZXJj
ZQotIFtlbnZvaWNlXShodHRwczovL3d3dy5lbnZvaWNlLmluKSAtIEludm9p
Y2luZyBmb3Igb25saW5lIGJ1c2luZXNzZXMuIFNpbXBsaWZ5IHlvdXIgaW52
b2ljaW5nIHByb2Nlc3MgYW5kIGdldCBwYWlkIG9ubGluZSB3aXRoIGEgZGVi
aXQgb3IgY3JlZGl0IGNhcmQgdmlhIHlvdXIgcGF5bWVudCBnYXRld2F5Lgot
IFtrb29tYWxvb21hXShodHRwOi8vYnVzaW5lc3Mua29vbWFsb29tYS5jb20p
IC0gQSBMb3lhbHR5IEJQYWFTIChCdXNpbmVzcyBQcm9jZXNzIGFzIGEgU2Vy
dmljZSkgZm9yIG1vYmlsZSBhbmQgd2ViIGNvbXBhbmllcy4gTWVyY2hhbnRz
IGlzc3VlIHBvaW50cyBmb3IgYWN0aW9ucyB0aGVpciBjdXN0b21lcnMvdXNl
cnMgbWFrZSwgZm9yIGV4YW1wbGUgYSBwdXJjaGFzZSBvciBhIHJlZmVycmFs
LiBrb29tYWxvb21hIHRha2VzIGNhcmUgb2YgYWxsIHRoZSByZXN0LCBmcm9t
IHNpZ25pbmcgdXAgdXNlcnMsIGtlZXBpbmcgdHJhY2sgb2YgcG9pbnRzIGFu
ZCBkZWxpdmVyaW5nIHJld2FyZHMgaW4gb3ZlciA4MCBjb3VudHJpZXMu8J+S
uAotIFtNYXJrZXRjbG91ZF0oaHR0cHM6Ly93d3cubWFya2V0Y2xvdWQuaXQp
IC0gZUNvbW1lcmNlIEFQSXMgZm9yIGRldmVsb3BlcnMuIEl0IGNvdmVycyBp
bnZlbnRvcnkgYW5kIGRhdGFiYXNlLCBjYXJ0cyBhbmQgY2hlY2tvdXQsIHBh
eW1lbnRzLCB1c2VyIGF1dGhlbnRpY2F0aW9uLCBhbmQgbW9yZS4gWW91IGp1
c3QgYnJpbmcgdGhlIGZyb250ZW5kLgotIFtNb2x0aW5dKGh0dHBzOi8vd3d3
Lm1vbHRpbi5jb20vZGV2ZWxvcGVycykgLSBVbmlmaWVkIEFQSXMgZm9yIGlu
dmVudG9yeSwgY2FydHMsIHRoZSBjaGVja291dCBwcm9jZXNzLCBwYXltZW50
cyBhbmQgbW9yZSwgc28geW91IGNhbiBmb2N1cyBvbiBjcmVhdGluZyBzZWFt
bGVzcyBjdXN0b21lciBleHBlcmllbmNlcyBhdCBhbnkgc2NhbGUuCi0gW1N0
cmlwZV0oaHR0cHM6Ly9zdHJpcGUuY29tL2RvY3MvYXBpKSAtIEFsbG93cyBi
b3RoIHByaXZhdGUgaW5kaXZpZHVhbHMgYW5kIGJ1c2luZXNzZXMgdG8gYWNj
ZXB0IHBheW1lbnRzIG92ZXIgdGhlIEludGVybmV0LgotIFtCcmFpbnRyZWVd
KGh0dHBzOi8vZGV2ZWxvcGVycy5icmFpbnRyZWVwYXltZW50cy5jb20pIC0g
U3BlY2lhbGl6ZXMgaW4gbW9iaWxlIGFuZCB3ZWIgcGF5bWVudCBzeXN0ZW1z
IGZvciBlY29tbWVyY2UgY29tcGFuaWVzLgoKIyMjIENvbW11bmljYXRpb24K
Ci0gW0FmcmljYSdzIFRhbGtpbmddKGh0dHBzOi8vYWZyaWNhc3RhbGtpbmcu
Y29tLykgLSBBY2Nlc3MgQWZyaWNhbiB0ZWxjbyBzZXJ2aWNlcyB0aHJvdWdo
IGEgSFRUUCBBUEku8J+SuAotIFtpUDFzbXNdKGh0dHBzOi8vd3d3LmlwMXNt
cy5jb20vZW4vZGV2ZWxvcGVyLykgLSBTZW5kIGFuZCByZWNpZXZlIFNNUyBt
ZXNzYWdlcyB3b3JsZHdpZGUu8J+SuAotIFtNYWlsR3VuXShodHRwczovL21h
aWxndW4uY29tKSAtIFRyYW5zYWN0aW9uYWwgRW1haWwgQVBJIFNlcnZpY2Ug
Rm9yIERldmVsb3BlcnMuIEZyZWUgZmlyc3QgMTAwMDAgZW1haWxzIHBlciBt
b250aC7wn5K4Ci0gW05leG1vXShodHRwczovL2RldmVsb3Blci5uZXhtby5j
b20pIC0gTWFrZSBhbmQgcmVjZWl2ZSBwaG9uZSBjYWxscywgc2VuZCBhbmQg
cmVjZWl2ZSBTTVMgd29ybGR3aWRlLiBMaWJyYXJpZXMgaW4gTm9kZSwgUnVi
eSwgSmF2YSwgUEhQLCAuTkVUICYgUHl0aG9uLvCfkrgKLSBbU2FrYXJpXSho
dHRwczovL2RldmVsb3Blci5zYWthcmkuaW8pIC0gU2VuZCBhbmQgUmVjZWl2
ZSBTTVMgdG8gb3ZlciAyMDArIGNvdW50cmllcyBhcm91bmQgdGhlIHdvcmxk
LiBTZW5kIG9uZSBvciBvbmUgbWlsbGlvbiBtZXNzYWdlcyBmcm9tIGEgc2lu
Z2xlIEFQSSBjYWxsLvCfkrgKLSBbVGhlIFNNUyBXb3Jrc10oaHR0cHM6Ly90
aGVzbXN3b3Jrcy5jby51ay9zbXMtYXBpKSAtIFRoZSBTTVMgV29ya3MgcHJv
dmlkZXMgYSBsb3ctY29zdCwgcmVsaWFibGUgU01TIEFQSSBmb3IgZGV2ZWxv
cGVycy4gUGF5IG9ubHkgZm9yIGRlbGl2ZXJlZCB0ZXh0cywgYWxsIGZhaWxl
ZCBtZXNzYWdlcyBhcmUgcmVmdW5kZWQu8J+SuAoKIyMjIENvbnRlbnQKCi0g
W0pva2VzXShodHRwczovL2pva2VzLm9uZS9hcGkvam9rZS8pIC0gRnVsbCBm
ZWF0dXJlZCBKb2tlcyBBUEkg8J+SuAotIFtQZXJmZWN0IFRlbnNlIEFQSV0o
aHR0cHM6Ly93d3cucGVyZmVjdHRlbnNlLmNvbS9kZXZlbG9wZXJzKSAtIFRo
ZSBQZXJmZWN0IFRlbnNlIEFQSSBpcyB0aGUgb25seSBzcGVsbGluZyBhbmQg
Z3JhbW1hciBjaGVja2luZyBBUEkgdGhhdCB1c2VzIGFydGlmaWNpYWwgaW50
ZWxsaWdlbmNlIHRvIGF1dG9tYXRpY2FsbHkgY29ycmVjdCBhbGwgb2YgeW91
ciB0ZXh0IGluIG9uZSBjYWxsLvCfkrgKLSBbcUthc3QgQ2hhbm5lbCBDb250
ZW50XShodHRwczovL2dpdGh1Yi5jb20vZWdmeC9xS2FzdCkgLSBBY2Nlc3Mg
bGl2ZSBjb250ZW50IGNvbGxlY3Rpb25zIHNvdXJjZWQgZnJvbSBhbnkgcGFn
ZSBhcm91bmQgdGhlIHdlYi4KLSBbUmFuZG9tIEZhY3RzXShodHRwczovL2Z1
bmdlbmVyYXRvcnMuY29tL2FwaS9mYWN0cy8pIC0gUmFuZG9tIEZhY3RzIEFQ
SSDwn5K4Ci0gW1NMRl0oaHR0cHM6Ly9naXRodWIuY29tL3NsZnRvb2wvc2xm
dG9vbC5naXRodWIuaW8vYmxvYi9tYXN0ZXIvQVBJLm1kKSAtIEdlcm1hbiBj
aXR5LCBjb3VudHJ5LCByaXZlciwgZGF0YWJhc2UuICFbT3BlbiBTb3VyY2Vd
KGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9hYmhpc2hla2Jh
bnRoaWEvUHVibGljLUFQSXMvbWFzdGVyL29wZW5zb3VyY2UucG5nICJPcGVu
IFNvdXJjZSIpCi0gW1dpa2lwZWRpYV0oaHR0cHM6Ly9lbi53aWtpcGVkaWEu
b3JnL3cvYXBpLnBocCkgLSBGcmVlIG11bHRpbGluZ3VhbCBFbmN5Y2xvcGVk
aWEuCgojIyMgQ3VycmVuY3kKCi0gWzFGb3JnZS5jb21dKGh0dHBzOi8vMWZv
cmdlLmNvbS8pIC0gUmVhbC10aW1lIGZvcmV4IGFuZCBjcnlwdG8gcXVvdGVz
IHZpYSBKU09OIGFuZCBXZWJTb2NrZXQuCi0gW0ZpeGVyLmlvXShodHRwOi8v
Zml4ZXIuaW8vKSAtIEpTT04gQVBJIGZvciBmb3JlaWduIGV4Y2hhbmdlIHJh
dGVzIGFuZCBjdXJyZW5jeSBjb252ZXJzaW9uLiAgRW5kIG9mIGRheSBkYXRh
IG9ubHkuCi0gW09wZW5SYXRlcy5pb10oaHR0cDovL3d3dy5vcGVucmF0ZXMu
aW8vKSAtIExpdmUgZXhjaGFuZ2UgcmF0ZXMgYW5kIGN1cnJlbmN5IGNvbnZl
cnNpb24gQVBJLgotIFtyYXRlc2FwaS5pb10oaHR0cHM6Ly9yYXRlc2FwaS5p
by8pIC0gRnJlZSBmb3JlaWduIGN1cnJlbmN5IGV4Y2hhbmdlIHJhdGVzIGFu
ZCBjdXJyZW5jeSBjb252ZXJzaW9uLgoKIyMjIERhdGEgU2NpZW5jZQoKLSBb
RGF0YSBTY2llbmNlIFRvb2xraXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9wZXRl
d2FyZGVuL2RzdGspIC0gQSBjb2xsZWN0aW9uIG9mIHRoZSBiZXN0IG9wZW4g
ZGF0YSBzZXRzIGFuZCBvcGVuLXNvdXJjZSB0b29scyBmb3IgZGF0YSBzY2ll
bmNlLgotIFtUaW1lIERvb3JdKGh0dHBzOi8vdGltZWRvb3IuaW8pIC0gVGlt
ZSBEb29yIGlzIGFuIEFQSSBmb3Igc3RhdGlzdGljYWwgaW5zaWdodHMgaW50
byB0aW1lIHNlcmllcyBkYXRhLiDwn5K4CgojIyMgRGVzaWduCgotIFtEcmli
YmJsZV0oaHR0cDovL2RldmVsb3Blci5kcmliYmJsZS5jb20vKSAtIERyaWJi
YmxlIGlzIGEgY29tbXVuaXR5IG9mIGRlc2lnbmVycyBhbnN3ZXJpbmcgdGhh
dCBxdWVzdGlvbiBlYWNoIGRheS4KLSBbQmVoYW5jZV0oaHR0cHM6Ly93d3cu
YmVoYW5jZS5uZXQvZGV2L2FwaS9lbmRwb2ludHMvKSAtIEJlaGFuY2UgaXMg
dGhlIGxlYWRpbmcgb25saW5lIHBsYXRmb3JtIHRvIHNob3djYXNlICYgZGlz
Y292ZXIgY3JlYXRpdmUgd29yay4KLSBbUGV4ZWxzXShodHRwczovL3d3dy5w
ZXhlbHMuY29tL2FwaS8pIC0gUGV4ZWxzIHByb3ZpZGVzIGhpZ2ggcXVhbGl0
eSBhbmQgY29tcGxldGVseSBmcmVlIHN0b2NrIHBob3RvcyBsaWNlbnNlZCB1
bmRlciB0aGUgQ3JlYXRpdmUgQ29tbW9ucyBaZXJvIChDQzApIGxpY2Vuc2Uu
CgojIyMgRGljdGlvbmFyeQoKLSBbQWdhcmF0aGldKGh0dHBzOi8vYWdhcmF0
aGkuY29tL2FwaS9kaWN0aW9uYXJ5KSAtIFRhbWlsIGxhbmd1YWdlIERpY3Rp
b25hcnkgQVBJIPCfkrgKLSBbQ2FtYnJpZGdlIERpY3Rpb25hcmllcyBPbmxp
bmVdKGh0dHA6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvbGljZW5zZS5o
dG1sKSAtIEFjY2VzcyB0byBDYW1icmlkZ2XigJlzIGN1c3RvbS1kZXZlbG9w
ZWQgQVBJLiDwn5K4Ci0gW0RpY3RTZXJ2aWNlXShodHRwOi8vc2VydmljZXMu
YW9uYXdhcmUuY29tL0RpY3RTZXJ2aWNlL0RpY3RTZXJ2aWNlLmFzbXgpIC0g
VGhpcyBXZWIgU2VydmljZSBhbGxvd3MgeW91IHRvIGFjY2VzcyBkaWN0aW9u
YXJ5IGRlZmluaXRpb25zIGZyb20gdGhlIGRpY3Qub3JnIHNlcnZpY2UuCi0g
W0dsb3NiZSBBUEldKGh0dHBzOi8vZ2xvc2JlLmNvbS9hLWFwaSkgLSBEaWN0
aW9uYXJ5IEFQSSBhbmQgVHJhbnNsYXRpb24gTWVtb3J5IEFQSSBkZXNjcmlw
dGlvbi4KLSBbTGluZ3VhIFJvYm90IEFQSV0oaHR0cHM6Ly93d3cubGluZ3Vh
cm9ib3QuaW8vKSAtIERlZmluaXRpb24gb2Ygd29yZHMsIHByb251bmNpYXRp
b25zLCBzeW5vbnltcyBhbmQgYW50b255bXMsIGxlbW1hdGl6YXRpb24gYW5k
IG1vcnBoZW1lIHNlZ21lbnRhdGlvbi4g8J+SuAotIFtNZXJyaWFtLVdlYnN0
ZXIgRGljdGlvbmFyeSBBUEldKGh0dHA6Ly93d3cuZGljdGlvbmFyeWFwaS5j
b20vKSAtIEdpdmVzIGRldmVsb3BlcnMgYWNjZXNzIHRvIGEgYmlnIGFzcyBy
ZXNvdXJjZSBvZiBkaWN0aW9uYXJ5IGFuZCB0aGVzYXVydXMgY29udGVudCBh
cyB3ZWxsIGFzIHNwZWNpYWxpemVkIG1lZGljYWwsIFNwYW5pc2gsIEVTTCwg
YW5kIHN0dWRlbnQtZnJpZW5kbHkgdm9jYWJ1bGFyeS4KLSBbT3hmb3JkIERp
Y3Rpb25hcnkgQVBJXShodHRwczovL2RldmVsb3Blci5veGZvcmRkaWN0aW9u
YXJpZXMuY29tLykgLSBBY2Nlc3MgdG8gT3hmb3JkIERpY3Rpb25hcnkgc2Vy
dmljZXMgd2l0aCBzZXZlcmFsIGRpZmZlcmVudCBzdWJzY3JpcHRpb24gb3B0
aW9ucyBpbmNsdWRpbmcgYSBmcmVlIHRpZXIuIPCfkrgKLSBbUGVhcnNvbiBE
aWN0aW9uYXJpZXMgQVBJXShodHRwOi8vZGV2ZWxvcGVyLnBlYXJzb24uY29t
L2FwaXMvZGljdGlvbmFyaWVzKSAtICgqQkVUQSopIEdpdmVzIGFjY2VzcyB0
byBhIHZlcnkgbGFyZ2UgZGF0YWJhc2Ugb2Ygd29yZHMgYW5kIHBocmFzZXMg
d2l0aCB0aG9yb3VnaCBleHBsYW5hdGlvbnMgLSBmcmVlIHVzYWdlIGZvciB1
cCB0byA0IG1pbGxpb24gY2FsbHMvbW9udGguCi0gW1dvcmRuaWtdKGh0dHA6
Ly9kZXZlbG9wZXIud29yZG5pay5jb20vZG9jcy5odG1sIyEvd29yZCkgLSBE
aWN0aW9uYXJ5IGZ1bmN0aW9ucy4KLSBbV29yZHMgQVBJXShodHRwczovL3d3
dy53b3Jkc2FwaS5jb20vKSAtIFVzZSBpdCB0byBmaW5kIGRlZmluaXRpb25z
IGZvciBtb3JlIHRoYW4gMTUwLDAwMCB3b3Jkcy4KLSBbV2lrdGlvbmFyeSBB
UEldKGh0dHBzOi8vZW4ud2lrdGlvbmFyeS5vcmcvdy9hcGkucGhwKSAtIENv
bGxhYm9yYXRpdmUsIGZyZWUtY29udGVudCBtdWx0aWxpbmd1YWwgZGljdGlv
bmFyeS4KCiMjIyBFbnRlcnRhaW5tZW50CgotIFtDYXQgYXMgYSBTZXJ2aWNl
IChDQVRBQVMpXShodHRwczovL2NhdGFhcy5jb20vIy8pIC0gSXMgYSBSRVNU
IEFQSSB0byBzcHJlYWQgcGVhY2UgYW5kIGxvdmUgKG9yIG5vdCkgdGhhbmtz
IHRvIGNhdHMuCi0gW0NvbWljIFZpbmVdKGh0dHA6Ly9jb21pY3ZpbmUuZ2Ft
ZXNwb3QuY29tL2FwaS8pIC0gQW4gZXh0cmVtZWx5IG1hdHVyZSwgd2VsbCBv
cmdhbml6ZWQgYW5kIGNvbnRpbnVlbHkgdXBkYXRlZCByZXNvdXJjZSBvZiBj
b21pYyBpbmZvcm1hdGlvbi4KLSBbQ29taWNocm9uIERhdGFdKGh0dHBzOi8v
Z2l0aHViLmNvbS9jb21pY2hyb24tZGF0YS9hcGkpIC0gQVBJIGZvciBjb21p
YyBzYWxlcyBkYXRhIGZyb20gY29taWNocm9uLmNvbS4gIVtPcGVuIFNvdXJj
ZV0oaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2FiaGlzaGVr
YmFudGhpYS9QdWJsaWMtQVBJcy9tYXN0ZXIvb3BlbnNvdXJjZS5wbmcgIk9w
ZW4gU291cmNlIikKLSBbRGFuYm9vcnVdKGh0dHBzOi8vZGFuYm9vcnUuZG9u
bWFpLnVzL3Bvc3RzP3RhZ3M9aGVscCUzQWFwaSkgLSBHZXQgaW1hZ2VzIGNh
cnRlZ29yaXplZCBieSB0YWdzLgotIFtEd0NoZWNrQXBpXShodHRwczovL2R3
Y2hlY2thcGkuYXp1cmV3ZWJzaXRlcy5uZXQvc3dhZ2dlci8pIC0gQSBEaXNj
d29ybGQgQVBJIGZlYXR1cmluZyBkYXRhIG9uIEJvb2tzLCBDaGFyYWN0ZXJz
LCBhbmQgZWFjaCBTZXJpZXMuICFbT3BlbiBTb3VyY2VdKGh0dHBzOi8vcmF3
LmdpdGh1YnVzZXJjb250ZW50LmNvbS9hYmhpc2hla2JhbnRoaWEvUHVibGlj
LUFQSXMvbWFzdGVyL29wZW5zb3VyY2UucG5nICJPcGVuIFNvdXJjZSIpCi0g
W0xvcmQgb2YgdGhlIFJpbmdzIEFQSV0oaHR0cHM6Ly90aGUtb25lLWFwaS5o
ZXJva3VhcHAuY29tLykgLSBHZXQgZGF0YSBhYm91dCB0aGUgYm9va3MsIHRo
ZSBtb3ZpZSB0cmlsb2d5LCBtYW55IGNoYXJhY3RlcnMgYW5kIHF1b3Rlcy4K
LSBbTWFydmVsXShodHRwczovL2RldmVsb3Blci5tYXJ2ZWwuY29tLykgLSBB
Y2Nlc3Mgb3ZlciA3MCB5ZWFycyBvZiBjb21pYyBkYXRhIHdpdGggTWFydmVs
J3Mgb2ZmaWNpYWwgZGV2ZWxvcGVyIEFQSS4KLSBbUG9rw6lhcGldKGh0dHBz
Oi8vcG9rZWFwaS5jby8pIC0gQWxsIHRoZSBQb2vDqW1vbiBkYXRhIHlvdSds
bCBldmVyIG5lZWQsIGluIG9uZSBwbGFjZS4gIVtPcGVuIFNvdXJjZV0oaHR0
cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2FiaGlzaGVrYmFudGhp
YS9QdWJsaWMtQVBJcy9tYXN0ZXIvb3BlbnNvdXJjZS5wbmcgIk9wZW4gU291
cmNlIikKLSBbUmljayBhbmQgTW9ydHldKGh0dHBzOi8vcmlja2FuZG1vcnR5
YXBpLmNvbS8pIC0gQWxsIHRoZSBSaWNrIGFuZCBNb3J0eSBpbmZvcm1hdGlv
biwgaW5jbHVkaW5nIGltYWdlcy4gIVtPcGVuIFNvdXJjZV0oaHR0cHM6Ly9y
YXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2FiaGlzaGVrYmFudGhpYS9QdWJs
aWMtQVBJcy9tYXN0ZXIvb3BlbnNvdXJjZS5wbmcgIk9wZW4gU291cmNlIikK
LSBbU3R1ZGlvIEdoaWJsaV0oaHR0cHM6Ly9naGlibGlhcGkuaGVyb2t1YXBw
LmNvbS8pIC0gUmVzb3VyY2VzIGZyb20gU3R1ZGlvIEdoaWJsaSBmaWxtcy4g
IVtPcGVuIFNvdXJjZV0oaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQu
Y29tL2FiaGlzaGVrYmFudGhpYS9QdWJsaWMtQVBJcy9tYXN0ZXIvb3BlbnNv
dXJjZS5wbmcgIk9wZW4gU291cmNlIikKLSBbU3dhcGldKGh0dHBzOi8vc3dh
cGkuY28vZG9jdW1lbnRhdGlvbikgLSBTdGFyIFdhcnMgQVBJIHdpdGggZGF0
YSB5b3UgZGlkbid0IGV2ZW4ga25vdyBleGlzdGVkLCBvciB0aGF0IHlvdSBu
ZWVkZWQgdG8ga25vdy4KCiMjIyBFdmVudHMKCi0gW1BpY2F0aWNdKGh0dHA6
Ly9kZXZlbG9wZXIucGljYXRpYy5jb20vP3V0bV9tZWRpdW09d2ViJnV0bV9z
b3VyY2U9Z2l0aHViJnV0bV9jYW1wYWlnbj1wdWJsaWMtYXBpcyUyMHJlcG8m
dXRtX2NvbnRlbnQ9YWJoaXNoZWtiYW50aGlhKSAtIFNlbGwgdGlja2V0cyBk
aXJlY3RseSBmcm9tIHlvdXIgYXBwIG9yIHdlYnNpdGUuCgojIyMgRmFjZSBS
ZWNvZ25pdGlvbgoKLSBbS2Fpcm9zXShodHRwczovL3d3dy5rYWlyb3MuY29t
LykgLSBGYWNlIHJlY29nbml0aW9uLCBlbW90aW9uIGFuYWx5c2lzIGFuZCBt
ZWFzdXJpbmcgZW5nYWdlbWVudCBvZiBwZW9wbGUgaW4gaW1hZ2VzIG9yIHZp
ZGVvcyBmb3IgYW55IG1vYmlsZSBvciB3ZWIgYXBwbGljYXRpb24uIDMwIERh
eSBUcmlhbCDwn5K4Ci0gW1NreWJpb21ldHJ5XShodHRwczovL3d3dy5za3li
aW9tZXRyeS5jb20pIC0gRmFjZSBkZXRlY3Rpb24sIGVtb3Rpb25hbCBhbmFs
eXNpcywgZmFjZSBncm91cGluZywgcmVjb2duaXRpb24gc2VydmljZSBhbmQg
dGFnZ2luZyB0aGUgcGhvdG8uCgojIyMgRmlsZSBTdG9yYWdlIGFuZCBNYW5p
cHVsYXRpb24KCi0gW0FtYXpvbiBTM10oaHR0cHM6Ly9hd3MuYW1hem9uLmNv
bS9kZS9kb2N1bWVudGF0aW9uL3MzLykgLSBBUEkgdGhhdCBwcm92aWRlcyBh
Y2Nlc3MgdG8gc3RvcmVkIGZpbGVzIGFuZCBjYW4gYmUgYWRkZWQgZWFzaWx5
IHRvIGFueSBzZXJ2aWNlIC0gYW5kIGl0J3MgZnJlZSBmb3IgdHdlbHZlIG1v
bnRocy4KLSBbQ2xvdWRpbmFyeV0oaHR0cDovL2Nsb3VkaW5hcnkuY29tL2Rv
Y3VtZW50YXRpb24pIC0gQVBJIGZvciBpbWFnZSBhbmQgdmlkZW8gc3RvcmFn
ZSBhbmQgbWFuaXB1bGF0aW9uIC0gZnJlZSBmb3IgdXAgdG8gNzUsMDAwIGlt
YWdlcyBhbmQgNyw1MDAgbWFuaXB1bGF0aW9ucyBwZXIgbW9udGgsIGdvb2Qg
ZG9jdW1lbnRhdGlvbiwgaXQgY2FuIGFsc28gbWFuaXB1bGF0ZSBHSUZzIGFu
ZCBQREZzLgotIFtEaWdpdGFsT2NlYW4gU3BhY2VzXShodHRwczovL3d3dy5k
aWdpdGFsb2NlYW4uY29tL3Byb2R1Y3RzL3NwYWNlcykgLSBBUEkgdGhhdCBw
cm92aWRlcyBlYXN5IGFjY2VzcyB0byBzdG9yZSBhbmQgcmVjZWl2ZSBmaWxl
cyBhcyBzaW1wbGUgb2JqZWN0IHN0b3JhZ2Ugd2l0aCBlYXN5IHRvIHVuZGVy
c3RhbmQgcHJpY2luZy4gMiBNb250aCBGcmVlIFRyaWFsIPCfkrgKLSBbRHJv
cGJveF0oaHR0cHM6Ly93d3cuZHJvcGJveC5jb20vZGV2ZWxvcGVycykgLSBB
UEkgZm9yIGFjY2Vzc2luZyBzdG9yZWQgZmlsZXMgYW5kIHBpY3R1cmVzIHdo
aWNoIGlzIGVhc3kgdG8gdXNlIGFuZCBmcmVlIGZvciBzbWFsbCBhbW91bnRz
IG9mIGRhdGEuCi0gW0ZpbGVzdGFja10oaHR0cHM6Ly9maWxlc3RhY2suY29t
L2RvY3MvKSAtIEFQSSBmb3IgaW1hZ2UgYW5kIGZpbGUgbWFuaXB1bGF0aW9u
LCAyNTAgdXBsb2FkcyBhbmQgNTAwIHVwbG9hZHMgcGVyIG1vbnRoIGZvciBm
cmVlLCBmcmVlIENETiwgSFRNTCB3aWRnZXQuCi0gW01pY3Jvc29mdCBHcmFw
aF0oaHR0cHM6Ly9ncmFwaC5taWNyb3NvZnQuaW8vZW4tdXMvZG9jcy9hcGkt
cmVmZXJlbmNlL3YxLjAvcmVzb3VyY2VzL29uZWRyaXZlKSAtIEFQSSBmb3Ig
YWNjZXNzaW5nIHN0b3JlZCBmaWxlcyBhbmQgcGhvdG9zIGZvciBwZXJzb25h
bCBhbmQgZW50ZXJwcmlzZSB1c2VycyB3aXRoIGhpZ2ggcmVzb2x1dGlvbiB0
aHVtYm5haWxzIGFuZCBNaWNyb3NvZnQgT2ZmaWNlIEFQSXMuCi0gW1Zlcml6
b24gQ2xvdWRdKGh0dHA6Ly93d3cudmVyaXpvbi5jb20vY2xvdWRzdG9yYWdl
YXBpKSAtIEFQSSBmb3IgYWNjZXNzaW5nIHN0b3JlZCBwaWN0dXJlcyBhbmQg
b3RoZXIgZmlsZXMgc3RvcmVkIGJ5IHVzZXJzIG9mIFZlcml6b24gQ2xvdWQg
YXBwLgoKIyMjIEZpbmFuY2UKLSBbSUVYXShodHRwczovL2lleHRyYWRpbmcu
Y29tL2RldmVsb3Blci8pIC0gRnJlZSBTdG9ja3MgYW5kIE1hcmtldCBEYXRh
Ci0gQ2VudHJhbCBCYW5rcwogLSBbQXVzdHJhbGlhXShodHRwczovL3d3dy5y
YmEuZ292LmF1L3N0YXRpc3RpY3MvdGFibGVzLykgLSBwbGVudHkgb2Yga2lu
ZHMgb2YgZGF0YSBpbiBDU1YgZm9ybWF0LgogLSBbQ2FuYWRhXShodHRwczov
L3d3dy5iYW5rb2ZjYW5hZGEuY2EvcmF0ZXMvKSAtIGRhaWx5IGV4Y2hhbmdl
IHJhdGVzIGFuZCBzdGF0aXN0aWNhbCBkYXRhIHRhYmxlcyBpbiBDU1YsIFhN
TCBvciBKU09OIGZvcm1hdHMuCiAtIFtFeGNoYW5nZSBSYXRlc10oaHR0cHM6
Ly9leGNoYW5nZXJhdGVzYXBpLmlvLykgLSBGb3JlaWduIGV4Y2hhbmdlIHJh
dGVzIEFQSSB3aXRoIGN1cnJlbmN5IGNvbnZlcnNpb24uIEpTT04gJiBDT1JT
LiAhW09wZW4gU291cmNlXShodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVu
dC5jb20vYWJoaXNoZWtiYW50aGlhL1B1YmxpYy1BUElzL21hc3Rlci9vcGVu
c291cmNlLnBuZyAiT3BlbiBTb3VyY2UiKQogLSBbR2VvcmdpYV0oaHR0cHM6
Ly9uYmcuZ292LmdlL2FwaS5odG1sKSAtIGN1cnJlbmN5IGV4Y2hhbmdlIHJh
dGVzIGF2YWlsYWJsZSB2aWEgU09BUCBBUEkuCiAtIFtJcmVsYW5kXShodHRw
czovL2RhdGEuZ292LmllL2RhdGEvc2VhcmNoP3B1Ymxpc2hlcj1jZW50cmFs
LWJhbmstb2YtaXJlbGFuZCkgLSB2YXJpZXR5IG9mIGRhdGEgbWFpbmx5IGlu
IFtYTFNdKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL01pY3Jvc29m
dF9FeGNlbCNGaWxlX2Zvcm1hdHMpIGZvcm1hdC4KIC0gW015YW5tYXJdKGh0
dHA6Ly9mb3JleC5jYm0uZ292Lm1tL2FwaS8pIC0gY3VycmVuY3kgZXhjaGFu
Z2UgcmF0ZXMgaW4gSlNPTiBmb3JtYXQuCiAtIFtNb2xkb3ZhXShodHRwczov
L2JubS5tZC9lbi9jb250ZW50L29mZmljaWFsLWV4Y2hhbmdlLXJhdGVzKSAt
IGN1cnJlbmN5IGV4Y2hhbmdlIHJhdGVzIGluIFhNTCwgSlNPTiBhbmQgWExT
IGZvcm1hdHMuCiAtIFtOZXcgWmVhbGFuZF0oaHR0cHM6Ly93d3cucmJuei5n
b3Z0Lm56L3N0YXRpc3RpY3MpIC0gdmFyaWV0eSBvZiBkYXRhIGluIFhMUyBm
b3JtYXQuCiAtIFtOaWdlcmlhXShodHRwczovL3d3dy5jYm4uZ292Lm5nL3Jh
dGVzLykgLSBub3Qgb25seSBleGNoYW5nZSByYXRlcywgYnV0IGFsc28gb3Ro
ZXIgaW5mbyBpbiBDU1YgZm9ybWF0LgogLSBbUGVydV0oaHR0cDovL3d3dy5i
Y3JwLmdvYi5wZS9zdGF0aXN0aWNzLmh0bWwpIC0gdmFyaWV0eSBvZiBkYXRh
IGluIFtYTFNYXShodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9NaWNy
b3NvZnRfRXhjZWwjRmlsZV9mb3JtYXRzKSBmb3JtYXQuCiAtIFtQb2xhbmRd
KGh0dHBzOi8vYXBpLm5icC5wbCkgLSBDdXJyZW5jeSBleGNoYW5nZSByYXRl
cyBhbmQgZ29sZCBwcmljZXMgaW4gdGhlIFhNTCBhbmQgSlNPTiBmb3JtYXRz
LgogLSBbU3dpdHplcmxhbmRdKGh0dHBzOi8vZGF0YS5zbmIuY2gvZW4pIC0g
cmljaCB2YXJpZXR5IG9mIGRhdGFuIGluIFhMUyBhbmQgQ1NWIGZvcm1hdHMu
CiAtIFtVa3JhaW5lXShodHRwczovL2JhbmsuZ292LnVhL2NvbnRyb2wvZW4v
cHVibGlzaC9hcnRpY2xlP2FydF9pZD0yNTM2NTYzMCkgLSBleGNoYW5nZSBy
YXRlcyBhbmQgYm9uZCBwbGFjZW1lbnRzIGluIEpTT04gYW5kIFhNTCBmb3Jt
YXRzLgoKIyMjIEZpdG5lc3MKCi0gW0ZpdEJpdF0oaHR0cHM6Ly9kZXYuZml0
Yml0LmNvbS9kb2NzLykgLSBXZWIgQVBJIGZvciBhY2Nlc3NpbmcgZGF0YSBm
cm9tIEZpdGJpdCBhY3Rpdml0eSB0cmFja2VycywgQXJpYSBzY2FsZSwgYW5k
IG1hbnVhbGx5IGVudGVyZWQgbG9ncy4KLSBbSGVhbHRoR3JhcGhdKGh0dHBz
Oi8vcnVua2VlcGVyLmNvbS9kZXZlbG9wZXIvaGVhbHRoZ3JhcGgvcmVnaXN0
cmF0aW9uLWF1dGhvcml6YXRpb24pIC0gUnVuS2VlcGVyJ3Mgd2ViLWJhc2Vk
IEhlYWx0aEdyYXBoIEFQSSBwcmVzZW50cyBIZWFsdGggR3JhcGggZGF0YSwg
YW5kIHByb3ZpZGVzIGluZm9ybWF0aW9uIGFib3V0IGEgdXNlciBhbmQgZnJp
ZW5kcy4KLSBbT3BlbiBGb29kIEZhY3RzXShodHRwczovL2VuLndpa2kub3Bl
bmZvb2RmYWN0cy5vcmcvQVBJKTogT3BlbiBGb29kIEZhY3RzIGlzIGEgZGF0
YWJhc2Ugb2YgZm9vZCBwcm9kdWN0cyB3aXRoIGluZ3JlZGllbnRzLCBhbGxl
cmdlbnMsIG51dHJpdGlvbiBmYWN0cyBhbmQgYWxsIHRoZSB0aWRiaXRzIG9m
IGluZm9ybWF0aW9uIHdlIGNhbiBmaW5kIG9uIHByb2R1Y3QgbGFiZWxzLgot
IFtTdHJhdmFdKGh0dHBzOi8vc3RyYXZhLmdpdGh1Yi5pby9hcGkvKSAtIEFQ
SSBmb3IgYWNjZXNzaW5nIGFuZCBtYW5hZ2luZyBkYXRhIGFib3V0IGF0aGxl
dGVzLCBhY3Rpdml0aWVzIGFuZCBzZWdtZW50cy4KLSBbV2l0aGluZ3NdKGh0
dHA6Ly9vYXV0aC53aXRoaW5ncy5jb20vYXBpKSAtIEFjY2VzcyB0byBkYXRh
IGZyb20gV2l0aGluZ3MgYWN0aXZpdHkgdHJhY2tlcnMgYW5kIGJvZHkgbWVh
c3VyZXMuCi0gW1VTREEgQVBJXShodHRwczovL25kYi5uYWwudXNkYS5nb3Yv
bmRiL2RvYy9pbmRleCkgLSBVbml0ZWQgU3RhdGVzIERlcGFydG1lbnQgb2Yg
QWdyaWN1bHR1cmUgT3BlbiBTb3VyY2UgQVBJIGZvciBnYXRoZXJpbmcgbnV0
cml0aW9uYWwgZGF0YSwgYW5kIGZvb2QgcmVwb3J0cy4KCiMjIyBHb29nbGUK
Ci0gW0dtYWlsIEFQSV0oaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20v
Z21haWwvYXBpLz9obD1lbikgLSBUaGUgR21haWwgUkVTVCBBUEkuICp2MSoK
LSBbR29vZ2xlIEJpZ1F1ZXJ5IEFQSV0oaHR0cHM6Ly9jbG91ZC5nb29nbGUu
Y29tL2JpZ3F1ZXJ5L2RvY3MvcmVmZXJlbmNlL3Jlc3QvdjIvKSAtIEEgZGF0
YSBwbGF0Zm9ybSBmb3IgY3VzdG9tZXJzIHRvIGNyZWF0ZSwgbWFuYWdlLCBz
aGFyZSBhbmQgcXVlcnkgZGF0YS4gKnYyKgotIFtHb29nbGUgQm9va3MgQVBJ
XShodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS9ib29rcy8pIC0gTGV0
cyB5b3Ugc2VhcmNoIGZvciBib29rcyBhbmQgbWFuYWdlIHlvdXIgR29vZ2xl
IEJvb2tzIGxpYnJhcnkuICp2MSoKLSBbR29vZ2xlIENhbGVuZGFyIEFQSV0o
aHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vZ29vZ2xlLWFwcHMvY2Fs
ZW5kYXIvP2hsPWVuKSAtIExldHMgeW91IG1hbmlwdWxhdGUgZXZlbnRzIGFu
ZCBvdGhlciBjYWxlbmRhciBkYXRhLiAqdjMqCi0gW0dvb2dsZSBDbGFzc3Jv
b20gQVBJXShodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS9jbGFzc3Jv
b20vP2hsPWVuKSAtIFRoZSBHb29nbGUgQ2xhc3Nyb29tIEFQSS4gKnYxKgot
IFtHb29nbGUgQ3VzdG9tU2VhcmNoIEFQSV0oaHR0cHM6Ly9kZXZlbG9wZXJz
Lmdvb2dsZS5jb20vY3VzdG9tLXNlYXJjaC9qc29uLWFwaS92MS9vdmVydmll
dykgLSBMZXRzIHlvdSBzZWFyY2ggb3ZlciBhIHdlYnNpdGUgb3IgY29sbGVj
dGlvbiBvZiB3ZWJzaXRlcy4gKnYxKgotIFtHb29nbGUgRHJpdmUgQVBJXSho
dHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS9kcml2ZS92Mi9yZWZlcmVu
Y2UvKSAtIFRoZSBBUEkgdG8gaW50ZXJhY3Qgd2l0aCBHb29nbGUgRHJpdmUu
ICp2MyoKLSBbR29vZ2xlIEZpdG5lc3MgQVBJXShodHRwczovL2RldmVsb3Bl
cnMuZ29vZ2xlLmNvbS9maXQvP2hsPWVuKSAtIFRoZSBGaXQgQVBJLiAqdjEq
Ci0gW1RoZSBHb29nbGUgRm9udHMgRGV2ZWxvcGVyIEFQSS5dKGh0dHBzOi8v
ZGV2ZWxvcGVycy5nb29nbGUuY29tL2ZvbnRzLz9obD1lbikgLSBUaGUgR29v
Z2xlIEZvbnRzIEFQSSBoZWxwcyB5b3UgYWRkIGZvbnRzIHRvIGFueSB3ZWIg
cGFnZS4gKnYxKgotIFtHb29nbGUgR2Vub21pY3MgQVBJXShodHRwczovL2Ns
b3VkLmdvb2dsZS5jb20vZ2Vub21pY3MvcmVmZXJlbmNlL3Jlc3QvKSAtIFBy
b3ZpZGVzIGFjY2VzcyB0byBHZW5vbWljcyBkYXRhLiAqdjFiZXRhMioKLSBb
R29vZ2xlIElkZW50aXR5IFRvb2xraXQgQVBJLl0oaHR0cHM6Ly9kZXZlbG9w
ZXJzLmdvb2dsZS5jb20vaWRlbnRpdHkvKSAtIEhlbHBzIHRoaXJkIHBhcnR5
IHNpdGVzIGltcGxlbWVudCBmZWRlcmF0ZWQgbG9naW4uICp2MSoKLSBbR29v
Z2xlIE1vbml0b3JpbmcgQVBJXShodHRwczovL2Nsb3VkLmdvb2dsZS5jb20v
bW9uaXRvcmluZy9hcGkvdjMvKSAtIEFQSSBmb3IgYWNjZXNzaW5nIEdvb2ds
ZSBDbG91ZCBhbmQgQVBJIG1vbml0b3JpbmcgZGF0YS4gKnYyYmV0YTIqCgoj
IyMgSWRlbnRpdHkgVmVyaWZpY2F0aW9uCgotIFtCbG9ja1Njb3JlXShodHRw
czovL2RvY3MuYmxvY2tzY29yZS5jb20vKSAtIEEgcmVhbC10aW1lIEFQSSBm
b3IgdmVyaWZ5aW5nIGFuIGlkZW50aXR5IGJ5IG5hbWUsIGFkZHJlc3MsIGRh
dGUgb2YgYmlydGgsIGFuZCBzb2NpYWwgc2VjdXJpdHkgbnVtYmVyLgotIFtD
b2duaXRvXShodHRwczovL2NvZ25pdG9ocS5jb20vZG9jcykgLSBBIHBvd2Vy
ZnVsIEFQSSBmb3IgdmVyaWZ5aW5nIGFuZCByZXRyaWV2aW5nIGlkZW50aXR5
IGluZm9ybWF0aW9uLiBDYW4gdGFrZSBhIGN1c3RvbWVyJ3MgY2VsbHBob25l
IG51bWJlciBhbmQgcmV0dXJuIG5hbWUsIGFkZHJlc3MgaGlzdG9yeSwgZnVs
bCBTU04sIGFuZCBkYXRlIG9mIGJpcnRoLgotIFtXaGl0ZXBhZ2VzIFByb10o
aHR0cHM6Ly9wcm8ud2hpdGVwYWdlcy5jb20vKSAtIEdsb2JhbCBJZGVudGl0
eSBWZXJpZmljYXRpb24gQVBJLiBHZXQgYSBjbGVhcmVyIHBpY3R1cmUgb2Yg
eW91ciBjdXN0b21lci4gSW5zdGFudGx5IGtub3cgaWYgYSBuYW1lLCBhZGRy
ZXNzLCBwaG9uZSBudW1iZXIsIGVtYWlsLCBhbmQgSVAgYWxsIGJlbG9uZyB0
byB0aGUgc2FtZSBwZXJzb24uIEV2ZXJ5IGNvdW50cnkgaW4gdGhlIHdvcmxk
IHN1cHBvcnRlZC4g8J+SuAoKIyMjIEltYWdlIE1vZGVyYXRpb24KCi0gW0Ns
YXJpZmFpXShodHRwczovL2RldmVsb3Blci5jbGFyaWZhaS5jb20vZG9jcy8p
IC0gQUkgQVBJIHRoYXQgYW5hbHl6ZXMgaW1hZ2VzIGFuZCB2aWRlb3MgYW5k
IHJldHVybnMgcHJvYmFiaWxpdHkgc2NvcmVzIG9uIHRoZSBsaWtlbGlob29k
IHRoYXQgdGhlIGltYWdlIGNvbnRhaW5zIHBvcm5vZ3JhcGh5LgotIFtOdWxs
TnVkZS5jb21dKGh0dHA6Ly93d3cubnVsbG51ZGUuY29tLykgLSBUaGUgYWR1
bHQgY29udGVudCBkZXRlY3Rpb24gQVBJLiBGcmVlIGZvciA2MDAgaW1hZ2Vz
IHBlciBtb250aC4g8J+SuAotIFtXZWJQdXJpZnldKGh0dHBzOi8vd3d3Lndl
YnB1cmlmeS5jb20vaW1hZ2UtbW9kZXJhdGlvbi8pIC0gUHJvdmlkZXMgbGl2
ZSBpbWFnZSBtb2RlcmF0aW9uIGJ5IGh1bWFucy4gRnJlZSBmb3IgZmlyc3Qg
MTAwIGltYWdlcy4gMsKiIHBlciBpbWFnZSBhZnRlci4g8J+SuAoKIyMjIElv
VAoKLSBbTGVseWxhbl0oaHR0cDovL2Rldi5sZWx5bGFuLmNvbS9hcGkpIC0g
T3BlbiBTb3VyY2UgSW50ZXJuZXQgb2YgVGhpbmdzIENsb3VkIFBsYXRmb3Jt
LiBNaWNyb3NlcnZpY2VzIEFyY2hpdGVjdHVyZS4gRm9yIERldmVsb3BlcnMu
ICFbT3BlbiBTb3VyY2VdKGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50
LmNvbS9hYmhpc2hla2JhbnRoaWEvUHVibGljLUFQSXMvbWFzdGVyL29wZW5z
b3VyY2UucG5nICJPcGVuIFNvdXJjZSIpCi0gW1BhcnRpY2xlXShodHRwczov
L2RvY3MucGFydGljbGUuaW8vcmVmZXJlbmNlL2FwaS8pIC0gQVBJIHRvIG1h
bmFnZSBQYXJ0aWNsZSBkZXZpY2VzIChpbmNsdWRpbmcgdGhlaXIgb3duIEFy
ZHVpbm8tY29tcGF0aWJsZSBvbmVzIGFuZCB0aGUgUmFzcGJlcnJ5IFBpKSBh
bmQgY29udHJvbCB0aGVtLiBGcmVlIGZvciB1cCB0byAyNSBkZXZpY2VzIGFu
ZCAyNTBrIGV2ZW50cy9tb250aC4KLSBbUHViTnViXShodHRwczovL3d3dy5w
dWJudWIuY29tL2RvY3MpIC0gQVBJIHRvIG1ha2UgcmVhbHRpbWUgYXBwbGlj
YXRpb25zIHdpdGggdmFyaWV0eSBvZiBoYXJkd2FyZSBkZXZpY2VzIGluY2x1
ZGluZyBBcmR1aW5vLCBSUGksIEtpbm9tYSwgQXRtZWwsIFNhbXN1bmcgU21h
cnQgVFYgV2ViT1MsIGFuZCBtb3JlLiAhW09wZW4gU291cmNlXShodHRwczov
L3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vYWJoaXNoZWtiYW50aGlhL1B1
YmxpYy1BUElzL21hc3Rlci9vcGVuc291cmNlLnBuZyAiT3BlbiBTb3VyY2Ui
KQotIFtQaGlsaXBzIEh1ZV0oaHR0cHM6Ly9kZXZlbG9wZXJzLm1lZXRodWUu
Y29tL2RvY3VtZW50YXRpb24vZ2V0dGluZy1zdGFydGVkKSAtIFJlZ2lzdHJh
dGlvbiAoZnJlZSkgYW5kIGxvY2FsIEh1ZSBCcmlkZ2UgKG5vdCBmcmVlKSBy
ZXF1aXJlZCAtIENvbnRyb2wgSHVlIGJyYW5kIGxpZ2h0cyBtYWRlIGJ5IFBo
aWxpcHMuICBBUEkgY2FsbHMgYXJlIG1hZGUgdG8gdGhlIEh1ZSBCcmlkZ2Ug
cmVzaWRpbmcgb24gbG9jYWwgbmV0d29yay4gIEluY2x1ZGVzIGEgd2ViIGJh
c2VkIFVJLgotIFtTbWFydFRoaW5nc10oaHR0cDovL2RldmVsb3Blci5zbWFy
dHRoaW5ncy5jb20vKSAtIEFQSSBmb3IgU2Ftc3VuZyBTbWFydFRoaW5ncyBT
bWFydCBIb21lIEh1YiBwcm9kdWN0cyAoWmlnQmVlLCBaLVdhdmUsIElQKS4K
LSBbVGVtYm9vIFNES10oaHR0cHM6Ly90ZW1ib28uY29tL2Rvd25sb2FkKSAt
IFRoaXMgcGxhdGZvcm0gYWN0cyBhcyBhIGxheWVyIG9uIHRvcCBvZiB0aGly
ZC1wYXJ0eSBBUElzLCB1c2luZyBjb2RlIHNuaXBwZXRzIHRvIHRyaWdnZXIg
Y29tcGxleCBwcm9jZXNzZXMgdGhhdCBydW4gdGhyb3VnaCB0aGVpciBjbG91
ZCBwbGF0Zm9ybS4KLSBbVGhpbmdTcGVha10oaHR0cHM6Ly9naXRodWIuY29t
L2lvYnJpZGdlL1RoaW5nU3BlYWspIC0g4oCcSW50ZXJuZXQgb2YgVGhpbmdz
4oCdIGFwcGxpY2F0aW9uIGFuZCBBUEkgdG8gc3RvcmUgYW5kIHJldHJpZXZl
IGRhdGEgZnJvbSB0aGluZ3MgdXNpbmcgSFRUUCBvdmVyIHRoZSBJbnRlcm5l
dCBvciB2aWEgYSBMb2NhbCBBcmVhIE5ldHdvcmsuCi0gW1hpdmVseV0oaHR0
cHM6Ly9kZXZlbG9wZXIueGl2ZWx5LmNvbS9yZWZlcmVuY2UpIC0gVXNlcyBm
cmVlIGFuZCBvcGVuIGxpYnJhcmllcyB0byBsZXQgeW91IGNvbm5lY3QgZGlm
ZmVyZW50IHR5cGVzIG9mIGhhcmR3YXJlLCB1c2luZyBhIHZhcmlldHkgb2Yg
bGFuZ3VhZ2VzIHRvIHRoZWlyIGNsb3VkIHNlcnZpY2UuCi0gW1pldHRhXSho
dHRwOi8vd3d3LnpldHRhanMub3JnLykgLSBBbiBvcGVuIHNvdXJjZSBwbGF0
Zm9ybSBidWlsdCBvbiBOb2RlLmpzIGZvciBjcmVhdGluZyBJb1Qgc2VydmVy
cyB0aGF0IHJ1biBhY3Jvc3MgZ2VvLWRpc3RyaWJ1dGVkIGNvbXB1dGVycyBh
bmQgdGhlIGNsb3VkLiAhW09wZW4gU291cmNlXShodHRwczovL3Jhdy5naXRo
dWJ1c2VyY29udGVudC5jb20vYWJoaXNoZWtiYW50aGlhL1B1YmxpYy1BUElz
L21hc3Rlci9vcGVuc291cmNlLnBuZyAiT3BlbiBTb3VyY2UiKQoKIyMjIExl
Z2FsCiMjIyMgT3BlbiBMaWNlbnNlcwoKLSBbR2l0SHViIExpY2Vuc2VzIEFQ
SV0oaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9saWNlbnNlcy8p
Ci0gW1RvU0RSIHRlcm1zIG9mIHNlcnZpY2UgQVBJXShodHRwczovL3Rvc2Ry
Lm9yZy9hcGkuaHRtbCkKLSBbVExEUkxlZ2FsIExpY2Vuc2VzIEFQSV0oaHR0
cHM6Ly90bGRybGVnYWwuY29tL2FwaS9saWNlbnNlKQoKIyMjIExvZ2luIEF1
dGhlbnRpY2F0aW9uCgotIFtBdXRoMF0oaHR0cHM6Ly9hdXRoMC5jb20pIC0g
QXV0aGVudGljYXRlIGFuZCBhdXRob3JpemUgYXBwcyBhbmQgQVBJcyB3aXRo
IGFueSBpZGVudGl0eSBwcm92aWRlciBydW5uaW5nIG9uIGFueSBzdGFjayBh
bnkgZGV2aWNlIG9yIGNsb3VkLiBGcmVlIGZvciA3MDAgYWN0aXZlIHVzZXJz
LgotIFtGYWNlYm9vayBMb2dpbiBmb3IgQXBwc10oaHR0cHM6Ly9kZXZlbG9w
ZXJzLmZhY2Vib29rLmNvbS9kb2NzL2ZhY2Vib29rLWxvZ2luKSAtIFNlY3Vy
ZSwgZmFzdCwgY29udmVuaWVudCB3YXkgdG8gbG9naW4gaW4geW91ciBhcHAv
d2Vic2l0ZS4KLSBbRmlyZWJhc2VdKGh0dHBzOi8vZmlyZWJhc2UuZ29vZ2xl
LmNvbS9kb2NzL3JlZmVyZW5jZS8pIC0gQXV0aGVudGljYXRpb24sIGFuYWx5
dGljcywgY2xvdWQgbWVzc2FnaW5nLCBjcmFzaCByZXBvcnRpbmcsIGFkcyBh
bmQgbW9yZS4KLSBbR2l0SHViIEF1dGhlbnRpY2F0aW9uXShodHRwczovL2Rl
dmVsb3Blci5naXRodWIuY29tL2d1aWRlcy9iYXNpY3Mtb2YtYXV0aGVudGlj
YXRpb24vKSAtIEFjY2VzcyB0byBHaXRIdWLigJlzIEF1dGhlbnRpY2F0aW9u
IEFQSS4KLSBbSW5zdGFncmFtXShodHRwczovL3d3dy5pbnN0YWdyYW0uY29t
L2RldmVsb3Blci9hdXRoZW50aWNhdGlvbi8pIC0gQWNjZXNzIHRvIEluc3Rh
Z3JhbeKAmXMgT0F1dGggQVBJLgotIFtLYWthbyBMb2dpbiBmb3IgQXBwc10o
aHR0cHM6Ly9kZXZlbG9wZXJzLmtha2FvLmNvbS9mZWF0dXJlcy9wbGF0Zm9y
bSkgLSBBY2Nlc3MgdG8gS2FrYW/igJlzIEF1dGhlbnRpY2F0aW9uIEFQSS4K
LSBbTGlua2VkSW5dKGh0dHBzOi8vZGV2ZWxvcGVyLmxpbmtlZGluLmNvbS9k
b2NzL3NpZ25pbi13aXRoLWxpbmtlZGluKSAtIE1ha2UgaXQgY29udmVuaWVu
dCBmb3IgeW91ciB1c2VycyB0byBzaWduIGluIHdpdGggdGhlaXIgcHJvZmVz
c2lvbmFsIGlkZW50aXR5LgotIFtOYXZlciBMb2dpbiBmb3IgQXBwc10oaHR0
cHM6Ly9kZXZlbG9wZXJzLm5hdmVyLmNvbS9wcm9kdWN0cy9sb2dpbi9hcGkp
IC0gQWNjZXNzIHRvIE5hdmVy4oCZcyBBdXRoZW50aWNhdGlvbiBBUEkuCi0g
W1BheVBhbF0oaHR0cHM6Ly9kZXZlbG9wZXIucGF5cGFsLmNvbS9kb2NzL2lu
dGVncmF0aW9uL2RpcmVjdC9pZGVudGl0eS9sb2ctaW4td2l0aC1wYXlwYWwv
KSAtIEVuYWJsZXMgeW91ciBjdXN0b21lcnMgdG8gc2lnbiBpbiB0byB5b3Vy
IHdlYiBzaXRlIHF1aWNrbHkgYW5kIHNlY3VyZWx5IHVzaW5nIHRoZWlyIFBh
eVBhbCBsb2dpbiBjcmVkZW50aWFscy4KLSBbU2FsZXNmb3JjZV0oaHR0cHM6
Ly9kZXZlbG9wZXIuc2FsZXNmb3JjZS5jb20vZG9jcy9hdGxhcy5lbi11cy5h
cGlfcmVzdC5tZXRhL2FwaV9yZXN0L2ludHJvX3VuZGVyc3RhbmRpbmdfYXV0
aGVudGljYXRpb24uaHRtKSAtIFNhbGVzZm9yY2UgdXNlcyB0aGUgT0F1dGgg
cHJvdG9jb2wgdG8gYWxsb3cgdXNlcnMgb2YgYXBwbGljYXRpb25zIHRvIHNl
Y3VyZWx5IGFjY2VzcyBkYXRhIHdpdGhvdXQgaGF2aW5nIHRvIHJldmVhbCB1
c2VybmFtZSBhbmQgcGFzc3dvcmQgY3JlZGVudGlhbHMuCi0gW1R3aXR0ZXIg
U2lnbi1pbl0oaHR0cHM6Ly9kZXYudHdpdHRlci5jb20vd2ViL3NpZ24taW4p
IC0gV29ya3Mgb24gd2Vic2l0ZXMsIGlPUywgbW9iaWxlIGFuZCBkZXNrdG9w
IGFwcGxpY2F0aW9ucy4KCiMjIyBNYWNoaW5lIExlYXJuaW5nCgotIFtBbWF6
b24gTUkgQVBJXShodHRwOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9tYWNoaW5l
LWxlYXJuaW5nL2xhdGVzdC9BUElSZWZlcmVuY2UvV2VsY29tZS5odG1sKSAt
IEFtYXpvbiBNYWNoaW5lIExlYXJuaW5nIEFQSSBzaW1wbGlmaWVzIHRoZSBw
cm9jZXNzIG9mIG1ha2luZyBwcmVkaWN0aW9ucyB0aGF0IHJlcXVpcmUgbG90
cyBvZiBleHBlcnRpc2UgYXJvdW5kIG1vZGVsIGJ1aWxkaW5nLCBkYXRhIGNs
ZWFuc2luZyBhbmQgc3RhdGlzdGljYWwgYW5hbHlzaXMuCi0gW0FZTElFTl0o
aHR0cDovL2F5bGllbi5jb20vKSAtIEFZTElFTiBUZXh0IEFuYWx5c2lzIEFQ
SSBpcyBhIHBhY2thZ2Ugb2YgTmF0dXJhbCBMYW5ndWFnZSBQcm9jZXNzaW5n
LCBJbmZvcm1hdGlvbiBSZXRyaWV2YWwgYW5kIE1hY2hpbmUgTGVhcm5pbmcg
dG9vbHMgZm9yIGV4dHJhY3RpbmcgbWVhbmluZyBhbmQgaW5zaWdodCBmcm9t
IHRleHR1YWwgYW5kIHZpc3VhbCBjb250ZW50IHdpdGggZWFzZS4KLSBbQmln
IE1MXShodHRwOi8vYmlnbWwuY29tL2FwaS8pIC0gQmlnTUwgaXMgdXNlci1m
cmllbmRseSBhbmQgZGV2ZWxvcGVyLWZyaWVuZGx5IE1hY2hpbmUgbGVhcm5p
bmcgQVBJIHRoYXQgbWFpbmx5IGNvbmNlbnRyYXRlcyBvbiBkZWNpc2lvbiB0
cmVlcy4KLSBbQ2xvdWQgTWFjaGluZSBMZWFybmluZyBFbmdpbmVdKGh0dHBz
Oi8vY2xvdWQuZ29vZ2xlLmNvbS9tbC1lbmdpbmUvZG9jcy8pIC0gQ2xvdWQt
YmFzZWQgbWFjaGluZSBsZWFybmluZyBhbmQgcGF0dGVybiBtYXRjaGluZyB0
b29sLgotIFtJQk0gV2F0c29uXShodHRwczovL2RldmVsb3Blci5pYm0uY29t
L3dhdHNvbi8pIC0gU2ltcGxpZmllcyB0aGUgcHJvY2VzcyBvZiBwcmVwYXJp
bmcgZGF0YSBhbmQgbWFrZXMgaXQgZWFzaWVyIHRvIHJ1biBwcmVkaWN0aXZl
IGFuYWx5c2lzLgotIFtNaWNyb3NvZnQgQXp1cmUgTWFjaGluZSBMZWFybmlu
ZyBBUEldKGh0dHBzOi8vYXp1cmUubWljcm9zb2Z0LmNvbS9lbi11cy9zZXJ2
aWNlcy9jb2duaXRpdmUtc2VydmljZXMvKSAtIEhlbHBzIGRhdGEgc2NpZW50
aXN0cyBwdWJsaXNoIGluIG1pbnV0ZXMgd2hpY2ggb25jZSB1c2VkIHRvIHRh
a2UgZGF5cyBhZnRlciB0aGV5IGhhZCBkZXZlbG9wZWQgYSBmZWFzaWJsZSBt
b2RlbC4KLSBbVW5wbHVnZ10oaHR0cDovL3VucGx1LmdnL3Rlc3RfYXBpLmh0
bWwpIC0gQXV0b21hdGVkIEZvcmVjYXN0aW5nIEFQSSBmb3IgdGltZXNlcmll
cyBkYXRhIHdoaWNoIGNhbiBiZSB1c2VkIHRvIGZvcmVjYXN0IGVuZXJneSBj
b25zdW1wdGlvbiwgdGVtcGVyYXR1cmUsIG9yIGFueSBvdGhlciB0aW1lc2Vy
aWVzIGRhdGEgd2hpY2ggaGFzIHNvbWUgc2Vhc29uYWxpdHkgZWZmZWN0LgoK
IyMjIE1hcHMKCi0gW0FtYXpvbiBNYXBzIEFQSSB2Ml0oaHR0cHM6Ly9kZXZl
bG9wZXIuYW1hem9uLmNvbS9tYXBzKSAtIEFkZCBpbnRlcmFjdGl2ZSAzRCBt
YXBzLCBncmFwaGljcywgYW5kIGN1c3RvbSBvdmVybGF5cyB0byB5b3VyIEZp
cmUgVGFibGV0IGFuZCBGaXJlIHBob25lIGFwcHMuCi0gW0JpbmcgTWFwc10o
aHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS9tYXBzL2Nob29zZS15b3VyLWJp
bmctbWFwcy1BUEkuYXNweCkgLSBCaW5nIE1hcHMgcGxhdGZvcm0gcHJvdmlk
ZXMgbXVsdGlwbGUgQVBJIG9wdGlvbnMgZm9yIHlvdXIgYXBwbGljYXRpb24u
Ci0gW0NhcnRvREJdKGh0dHBzOi8vY2FydG8uY29tL2RldmVsb3BlcnMvI2Fw
aXMpIC0gQWxsb3dzIHlvdSB0byBnZW5lcmF0ZSBtYXBzIGJhc2VkIG9uIGRh
dGEgaG9zdGVkIGluIHlvdXIgQ2FydG9EQiBhY2NvdW50LgotIFtEYXVtIE1h
cHMgQVBJXShodHRwOi8vYXBpcy5tYXAuZGF1bS5uZXQvKSAtIERhdW0gTWFw
cyBwcm92aWRlIG11bHRpcGxlIEFQSXMgZm9yIEtvcmVhbiBtYXAuCi0gW0dv
b2dsZSBNYXBzIEFQSV0oaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20v
bWFwcy8/aGw9ZW4pIC0gR29vZ2xlIE1hcHMgQVBJcyBhcmUgYXZhaWxhYmxl
IGZvciBBbmRyb2lkLCBpT1MsIHdlYiBicm93c2VycyBhbmQgdGhyb3VnaCBI
VFRQIHdlYiBzZXJ2aWNlcy4gW0NsaWVudHMgY2FuIGJlIGZvdW5kIGhlcmUu
XShodHRwczovL2dpdGh1Yi5jb20vZ29vZ2xlbWFwcy8pCi0gW0hFUkUgTWFw
cyBBUEldKGh0dHBzOi8vZGV2ZWxvcGVyLmhlcmUuY29tLykgLSBXaWRlIHJh
bmdlIG9mIEFQSXMgYXZhaWxhYmxlIHRocm91Z2ggSmF2YVNjcmlwdCwgaU9T
LCBBbmRyb2lkLCBvciBSRVNUIHNlcnZpY2VzLgotIFtMZWFmbGV0LmpzXSho
dHRwOi8vbGVhZmxldGpzLmNvbS8pIC0gQW4gb3Blbi1zb3VyY2UgSmF2YVNj
cmlwdCBsaWJyYXJ5IGZvciBtb2JpbGUtZnJpZW5kbHkgaW50ZXJhY3RpdmUg
bWFwcy4gIVtPcGVuIFNvdXJjZV0oaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNv
bnRlbnQuY29tL2FiaGlzaGVrYmFudGhpYS9QdWJsaWMtQVBJcy9tYXN0ZXIv
b3BlbnNvdXJjZS5wbmcgIk9wZW4gU291cmNlIikKLSBbTWFwYm94XShodHRw
czovL3d3dy5tYXBib3guY29tL2RldmVsb3BlcnMvYXBpL21hcHMvKSAtIEFj
Y2VzcyB0byBNYXBCb3jigJlzIEFQSS4KLSBbT3BlbiBTdHJlZXQgTWFwXSho
dHRwOi8vd2lraS5vcGVuc3RyZWV0bWFwLm9yZy93aWtpL0FQSSkgLSBBUEkg
YWNjZXNzIHRvIE9TTS4KLSBbU2NyaWJibGVdKGh0dHBzOi8vd3d3LnNjcmli
YmxlbWFwcy5jb20vYXBpLykgLSBUaGUgU2NyaWJibGUgTWFwcyBBUEkgaXMg
YSBjcm9zcyBicm93c2VyLCBtb2JpbGUgcmVhZHksIEhUTUw1L0phdmFTY3Jp
cHQsIGludGVyYWN0aXZlIG1hcCBidWlsZGVyLgotIFtZYWhvbyBNYXBzXSho
dHRwczovL2RldmVsb3Blci55YWhvby5jb20vbWFwcy8pIC0gWWFob28gTWFw
cyBsZXRzIHlvdSBlYXNpbHkgZW1iZWQgcmljaCBhbmQgaW50ZXJhY3RpdmUg
bWFwcyB1c2luZyB5b3VyIGNob2ljZSBvZiBwbGF0Zm9ybS4KLSBbWWFuZGV4
XShodHRwczovL3RlY2gueWFuZGV4LmNvbS9tYXBzLykgLSBBUEkgZm9yIGlu
c3RhbGxpbmcgWWFuZGV4Lk1hcHMgYW5kIHRoZSBuZWNlc3NhcnkgdG9vbHMg
Zm9yIHdvcmtpbmcgaXQgb24geW91ciB3ZWIgYXBwIG9yIHNpdGUuCgojIyMg
TWF0aAoKLSBbTWF0bGFiXShodHRwczovL3d3dy5wcm9ncmFtbWFibGV3ZWIu
Y29tL2FwaS9tYXRsYWIpIC0gVGhlIE1BVExBQiBSRVNUZnVsIEFQSSBlbmFi
bGVzIHlvdSB0byBldmFsdWF0ZSBNQVRMQUIgZnVuY3Rpb25zIG9uIHJlbW90
ZSBzZXJ2ZXJzIHVzaW5nIEpTT04gcmVwcmVzZW50YXRpb24gb2YgTUFUTEFC
IGRhdGEgdHlwZXMuCi0gW05ld3Rvbl0oaHR0cHM6Ly9uZXd0b24ubm93LnNo
LykgLSBBbiBBUEkgZm9yIEFyaXRobWV0aWMgYW5kIFN5bWJvbGljIE1hdGgu
ICFbT3BlbiBTb3VyY2VdKGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50
LmNvbS9hYmhpc2hla2JhbnRoaWEvUHVibGljLUFQSXMvbWFzdGVyL29wZW5z
b3VyY2UucG5nICJPcGVuIFNvdXJjZSIpCgoKIyMjIE1lZGljYWwKCi0gW0lu
ZmVybWVkaWNhXShodHRwczovL2RldmVsb3Blci5pbmZlcm1lZGljYS5jb20v
ZG9jcy9pbnRyb2R1Y3Rpb24pIC0gQUktYmFzZWQgZW5naW5lIGZvciBwYXRp
ZW50IHRyaWFnZSBhbmQgcHJlbGltaW5hcnkgbWVkaWNhbCBkaWFnbm9zaXMu
ICp2MioKLSBbTGV4aWdyYW1dKGh0dHBzOi8vZG9jcy5sZXhpZ3JhbS5pby92
MS93ZWxjb21lKSAtIE5MUCB0aGF0IGV4dHJhY3RzIG1lbnRpb25zIG9mIGNs
aW5pY2FsIGNvbmNlcHRzIGZyb20gdGV4dCwgZ2l2ZXMgYWNjZXNzIHRvIGNs
aW5pY2FsIG9udG9sb2d5LiAqdjEqCgojIyMgTWlzY2VsbGFuZW91cwotIFtB
YWRoYWFyIEJyaWRnZV0oaHR0cHM6Ly93d3cuYWFkaGFhcmJyaWRnZS5jb20v
KSAtIEFhZGhhYXIgaXMgYSAxMi1kaWdpdCB1bmlxdWUgaWRlbnRpZmljYXRp
b24gbnVtYmVyIGlzc3VlZCBieSB0aGUgSW5kaWFuIGdvdmVybm1lbnQgdG8g
ZXZlcnkgaW5kaXZpZHVhbCByZXNpZGVudCBvZiBJbmRpYS4gQVBJIGFsbG93
cyB5b3UgdG8gYXV0aGVudGljYXRlIGFuZCBwZXJmb3JtIGVrWUMgYW5kIGVT
aWduIHVzaW5nIEFhZGhhci4g8J+SuAotIFtNb3ppbGxhIEFkZG9uc10oaHR0
cHM6Ly9hZGRvbnMtc2VydmVyLnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC90
b3BpY3MvYXBpL2luZGV4Lmh0bWwpIC0gTW96aWxsYSdzIGNhdGFsb2d1ZSBv
ZiBhZGRvbnMgZm9yIEZpcmVmb3gtY29tcGF0aWJsZSB3ZWIgYnJvd3NlcnMu
ICFbT3BlbiBTb3VyY2VdKGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50
LmNvbS9hYmhpc2hla2JhbnRoaWEvUHVibGljLUFQSXMvbWFzdGVyL29wZW5z
b3VyY2UucG5nICJPcGVuIFNvdXJjZSIpCi0gW0FwaUZsYXNoXShodHRwczov
L2FwaWZsYXNoLmNvbS8pIC0gQ2hyb21lIGJhc2VkIHNjcmVlbnNob3QgQVBJ
IHRvIGNvbnZlcnQgVVJMcyB0byBpbWFnZXMuCi0gW0FwaWxpdHkuaW9dKGh0
dHBzOi8vYXBpbGl0eS5pby9hcGlkb2NzLykgLSBJUCBhZGRyZXNzZXMsIERv
bWFpbnMgYW5kIEVtYWlscyBhbnRpLWFidXNlIEFQSSBibG9ja2xpc3QgYW5k
IEdlbyBJUCBsb2NhdGlvbi4g8J+SuAotIFtCaGFnYXZhZCBHaXRhXShodHRw
czovL2JoYWdhdmFkZ2l0YS5pby8pIC0gQmhhZ2F2YWQgR2l0YSBpbiB2YXJp
b3VzIGxhbmd1YWdlcy4gIVtPcGVuIFNvdXJjZV0oaHR0cHM6Ly9yYXcuZ2l0
aHVidXNlcmNvbnRlbnQuY29tL2FiaGlzaGVrYmFudGhpYS9QdWJsaWMtQVBJ
cy9tYXN0ZXIvb3BlbnNvdXJjZS5wbmcgIk9wZW4gU291cmNlIikKLSBbQ2Fs
bG9vay5pbmZvXShodHRwczovL2NhbGxvb2suaW5mbykgLSBMb29rIHVwIGlu
Zm9ybWF0aW9uIGFib3V0IFVuaXRlZCBTdGF0ZXMgaGFtIHJhZGlvIGNhbGxz
aWducy4KLSBbQ2h1Y2tOb3JyaXMuaW9dKGh0dHBzOi8vYXBpLmNodWNrbm9y
cmlzLmlvKSAtIEEgZnJlZSBKU09OIEFQSSBmb3IgaGFuZCBjdXJhdGVkIENo
dWNrIE5vcnJpcyBmYWN0cy4gIVtPcGVuIFNvdXJjZV0oaHR0cHM6Ly9yYXcu
Z2l0aHVidXNlcmNvbnRlbnQuY29tL2FiaGlzaGVrYmFudGhpYS9QdWJsaWMt
QVBJcy9tYXN0ZXIvb3BlbnNvdXJjZS5wbmcgIk9wZW4gU291cmNlIikKLSBb
RG9uJ3QgS2lsbCBNeSBBcHBdKGh0dHBzOi8vZ2l0aHViLmNvbS91cmJhbmRy
b2lkLXRlYW0vZG9udC1raWxsLW15LWFwcCkgLSBEYXRhYmFzZSBvZiB3YXlz
IG1vYmlsZSB2ZW5kb3JzIGluaGliaXQgYmFja2dyb3VuZCBhY3Rpdml0eSBv
ZiBhcHBzLiAhW09wZW4gU291cmNlXShodHRwczovL3Jhdy5naXRodWJ1c2Vy
Y29udGVudC5jb20vYWJoaXNoZWtiYW50aGlhL1B1YmxpYy1BUElzL21hc3Rl
ci9vcGVuc291cmNlLnBuZyAiT3BlbiBTb3VyY2UiKQotIFtEb21haW5zZGIu
aW5mb10oaHR0cHM6Ly9kb21haW5zZGIuaW5mbykgLSBSZWdpc3RlcmVkIGRv
bWFpbiBuYW1lcyBzZWFyY2ggY2hlY2tzIHRoZSBsaXN0cyBvZiByZWdpc3Rl
cmVkIGRvbWFpbnMgZm9yIG5hbWVzIGNvbnRhaW5pbmcgcGFydGljdWxhciB3
b3Jkcy9waHJhc2VzL251bWJlcnMgb3Igc3ltYm9scy4KLSBbRXZpbCBJbnN1
bHQgR2VuZXJhdG9yXShodHRwczovL2V2aWxpbnN1bHQuY29tL2FwaS8pIC0g
T2ZmZXJzIHRoZSBtb3N0IGV2aWwgaW5zdWx0cy4gIVtPcGVuIFNvdXJjZV0o
aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2FiaGlzaGVrYmFu
dGhpYS9QdWJsaWMtQVBJcy9tYXN0ZXIvb3BlbnNvdXJjZS5wbmcgIk9wZW4g
U291cmNlIikKLSBbRnJlZURCXShodHRwOi8vd3d3LmZyZWVkYi5vcmcvKSAt
IExvb2sgdXAgQ0QgaW5mb3JtYXRpb24gdXNpbmcgdGhlIGZyZWVkIGRhdGFi
YXNlLiAhW09wZW4gU291cmNlXShodHRwczovL3Jhdy5naXRodWJ1c2VyY29u
dGVudC5jb20vYWJoaXNoZWtiYW50aGlhL1B1YmxpYy1BUElzL21hc3Rlci9v
cGVuc291cmNlLnBuZyAiT3BlbiBTb3VyY2UiKQotIFtHaXBoeV0oaHR0cHM6
Ly9kZXZlbG9wZXJzLmdpcGh5LmNvbS9kb2NzLykgLSBXb3JsZHMgbGFyZ2Vz
dCBsaWJyYXJ5IG9mIEdJRnMuCi0gW0ltYWdlLUNoYXJ0c10oaHR0cHM6Ly93
d3cuaW1hZ2UtY2hhcnRzLmNvbSkgLSAxIFVSTCA9IDEgQ2hhcnQ6IEdldCBh
IGNoYXJ0IGltYWdlIGluIHJlc3BvbnNlIHRvIGEgVVJMIEdFVCBvciBQT1NU
IHJlcXVlc3QuIEEgZHJvcC1pbi1yZXBsYWNlbWVudCBmb3IgdGhlIGRlcHJl
Y2F0ZWQgR29vZ2xlIEltYWdlIENoYXJ0cy4KLSBbSVAgU2lkZWtpY2tdKGh0
dHBzOi8vaXBzaWRla2ljay5jb20pIC0gSVAgU2lkZWtpY2sgaXMgYW4gQVBJ
IHRoYXQgcmV0dXJucyBpbmZvcm1hdGlvbiBhYm91dCBhbiBJUCBhZGRyZXNz
LiBZb3UgY2FuIHVzZSBpdCB0byBjdXN0b21pemUgeW91ciBjb250ZW50IGJh
c2VkIG9uIHRoZSB2aXNpdG9yJ3MgbG9jYXRpb24gb3IgZGlzcGxheSB0aGVp
ciBjb3VudHJ5LgotIFtKU09OYmluLmlvXShodHRwczovL2pzb25iaW4uaW8v
YXBpLXJlZmVyZW5jZSkgLSBGcmVlIEpTT04gZGF0YSBzdG9yYWdlIHNlcnZp
Y2UsIGlkZWFsIGZvciBzbWFsbCBzY2FsZSB3ZWIgYXBwcywgd2Vic2l0ZSwg
bW9iaWxlIGFwcHMuCi0gW0p1ZGdlMCBBUEldKGh0dHBzOi8vYXBpLmp1ZGdl
MC5jb20vKSAtIENvbXBpbGUgYW5kIHJ1biBzb3VyY2UgY29kZS4gIVtPcGVu
IFNvdXJjZV0oaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2Fi
aGlzaGVrYmFudGhpYS9QdWJsaWMtQVBJcy9tYXN0ZXIvb3BlbnNvdXJjZS5w
bmcgIk9wZW4gU291cmNlIikKLSBbTGFiczY0IE5ldExpY2Vuc2luZ10oaHR0
cHM6Ly9uZXRsaWNlbnNpbmcuaW8vd2lraS9yZXN0ZnVsLWFwaSkgKFtBUEkg
VGVzdCBDZW50ZXJdKGh0dHBzOi8vbmV0bGljZW5zaW5nLmlvL05ldExpY2Vu
c2luZy1BUEkvKSkgLSBJbm5vdmF0aXZlIExpY2Vuc2UgTWFuYWdlbWVudCBT
b2x1dGlvbi4KLSBbTGF1bmNoTGlicmFyeV0oaHR0cHM6Ly9sYXVuY2hsaWJy
YXJ5Lm5ldC9kb2NzLzEuMy9hcGkuaHRtbCkgLSBBZ2dyZWdhdGVkIGluZm8g
YWJvdXQgc3BhY2UgbGF1bmNoZXMuCi0gW0xldHNWYWxpZGF0ZV0oaHR0cHM6
Ly9naXRodWIuY29tL2xldHN2YWxpZGF0ZS9hcGkpIC0gVW5jb3ZlcnMgdGhl
IHRlY2hub2xvZ2llcyB1c2VkIG9uIHdlYnNpdGVzIGFuZCBVUkwgdG8gdGh1
bWJuYWlsLgotIFtMaW5rUHJldmlld10oaHR0cHM6Ly93d3cubGlua3ByZXZp
ZXcubmV0KSAtIFJFU1RmdWwgQVBJIHRoYXQgcmV0dXJucyBKU09OIGZvcm1h
dHRlZCBzdW1tYXJ5IHdpdGggdGl0bGUsIGRlc2NyaXB0aW9uIGFuZCBwcmV2
aWV3IGltYWdlIGZvciBhbnkgcmVxdWVzdGVkIFVSTC4gRnJlZSAmIHBhaWQg
cGxhbnMuCi0gW0xpdmVDaGF0XShodHRwczovL2RldmVsb3BlcnMubGl2ZWNo
YXRpbmMuY29tLykgLSBPbmxpbmUgQ3VzdG9tZXIgU2VydmljZSBzb2Z0d2Fy
ZSB3aXRoIGN1c3RvbWl6YWJsZSBjaGF0LCBlbWJlZGRhYmxlIHdpZGdldHMs
IGhlbHAgZGVzayBhbmQgd2ViIGFuYWx5dGljcyB0b29scy4gQVBJcyBpbmNs
dWRlIHdlYmhvb2tzIHN1cHBvcnQsIFNES3MgYW5kIG9wZW4tc291cmNlIGxp
YnJhcmllcyB0byBidWlsZCBvbi4g8J+SuAotIFtMb3R0ZXJ5IE51bWJlciBH
ZW5lcmF0aW9uXShodHRwczovL2Z1bmdlbmVyYXRvcnMuY29tL2FwaS9sb3R0
ZXJ5LykgLSBHZW5lcmF0ZSBsb3R0ZXJ5IG51bWJlcnMuIEh1bmRlcmVkcyBv
ZiBsb3R0ZXJ5IGdhbWVzIGZyb20gdmFyaW91cyBjb3VudHJpZXMgYXJlIHN1
cHBvcnRlZC4g8J+SuAotIFtNYXJpanVhbmEgU3RyYWluIEFQSV0oaHR0cDov
L3N0cmFpbnMuZXZhbmJ1c3NlLmNvbS8pIC0gRG9jdW1lbnRhdGlvbiBvbiBv
dmVyIDIwMDAgTWFyaWp1YW5hIHN0cmFpbnMgaW5jbHVkaW5nIHJhY2VzLCBm
bGF2b3JzLCBhbmQgZWZmZWN0cy4KLSBbUGFnZUNETl0oaHR0cHM6Ly9kb2Nz
LnBhZ2VjZG4uY29tL2FwaS9wdWJsaWMpIC0gUHVibGljIENETiBBUEkgZm9y
IE9wZW4tc291cmNlIEphdmFTY3JpcHQsIENTUyBhbmQgZm9udHMgbGlicmFy
aWVzLiAhW09wZW4gU291cmNlXShodHRwczovL3Jhdy5naXRodWJ1c2VyY29u
dGVudC5jb20vYWJoaXNoZWtiYW50aGlhL1B1YmxpYy1BUElzL21hc3Rlci9v
cGVuc291cmNlLnBuZyAiT3BlbiBTb3VyY2UiKQotIFtQREZteVVSTF0oaHR0
cHM6Ly9wZGZteXVybC5jb20vaHRtbC10by1wZGYtYXBpKSAtIFJFU1RmdWwg
QVBJIHRoYXQgY29udmVydHMgd2VicGFnZXMgdG8gUERGIHF1aWNrbHkgYW5k
IGV2ZW4gZG9lcyBlbnRpcmUgd2Vic2l0ZXMgdG8gUERGCi0gW1Bhc3RlYmlu
XShodHRwOi8vcGFzdGViaW4uY29tL2FwaSkgLSBRdWlja2x5IHNoYXJlIHRl
eHQgb3IgY29kZSwgd2l0aCBzdXBwb3J0IGZvciBvdmVyIDI1MCBsYW5ndWFn
ZXMgZm9yIHN5bnRheCBoaWdobGlnaHRpbmcuCi0gW1BoYW50QXV0aF0oaHR0
cHM6Ly93d3cucGhhbnRhdXRoLm5ldC8pIC0gUmFuZG9tIFVzZXIgR2VuZXJh
dG9yICsgT3BlbklEIENvbm5lY3QgUHJvdmlkZXIuIExpa2UgTG9yZW0gSXBz
dW0sIGJ1dCBmb3IgdXNlciBhY2NvdW50cyBhbmQgYXV0aGVudGljYXRpb24u
ICFbT3BlbiBTb3VyY2VdKGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50
LmNvbS9hYmhpc2hla2JhbnRoaWEvUHVibGljLUFQSXMvbWFzdGVyL29wZW5z
b3VyY2UucG5nICJPcGVuIFNvdXJjZSIpCi0gW1JpZyBWZWRhIEFQSV0oaHR0
cHM6Ly9hbmluZGl0YWJhc3UuZ2l0aHViLmlvL2luZGljYS9odG1sL3J2Lmh0
bWwpIC0gQWxsIG9mIHRoZSBwb2V0cyBhbmQgZ29kcyBpbiB0aGUgUmlnIFZl
ZGEsIHByZXNlbnRlZCB3aXRoIHRoZSBtYW5kYWwgYW5kIHN1a3RhIG51bWJl
cnMgdGhleSdyZSBtZW50aW9uZWQgaW4sIHRoZSBtZXRlcnMgdGhlIHZlcnNl
cyBhcmUgY29tcG9zZWQgaW4sIGFuZCB0aGUgY2F0ZWdvcmllcyB0aGUgcG9l
dHMgYW5kIGdvZHMgYmVsb25nIHRvLgotIFtSb2NrZXRpdW0gVmlkZW8gQVBJ
XShodHRwczovL3JvY2tldGl1bS5jb20vYXBpLz91dG1fc291cmNlPWdpdGh1
YiZ1dG1fbWVkaXVtPXJlcG9zaXRvcnkmdXRtX2NhbXBhaWduPWFiaGlzaGVr
YmFudGhpYSZ1dG1fY29udGVudD1hcGlfc29sdXRpb24pIC0gUm9ja2V0aXVt
IFZpZGVvIEFQSSBhbGxvd3MgeW91IHRvIGNyZWF0ZSBCdXp6ZmVlZC1saWtl
IHZpZGVvcyBwcm9ncmFtbWF0aWNhbGx5LiDwn5K4Ci0gW1NjcmFwZXIgQVBJ
XShodHRwczovL3d3dy5zY3JhcGVyYXBpLmNvbSkgLSBTY3JhcGVyIEFQSSBo
YW5kbGVzIHByb3hpZXMsIGJyb3dzZXJzLCBhbmQgQ0FQVENIQXMgc28gZGV2
ZWxvcGVycyBjYW4gZWFzaWx5IGJ1aWxkIHNjYWxhYmxlIHdlYiBzY3JhcGVy
cy4KLSBbU3ByZWFrZXJdKGh0dHBzOi8vZGV2ZWxvcGVycy5zcHJlYWtlci5j
b20vKSAtIEVuYWJsZXMgZGV2ZWxvcGVycyB0byByZWFkIGFuZCB3cml0ZSBk
YXRhIHRvIFNwcmVha2VyLgotIFtTdGFja0V4Y2hhbmdlXShodHRwczovL2Fw
aS5zdGFja2V4Y2hhbmdlLmNvbS8pIC0gVGhlIFN0YWNrRXhjaGFuZ2UgQVBJ
IHByb3ZpZGVzIFJFU1RmdWwgc2VydmljZXMgdG8gYWxsIHRoZSBzaXRlcyBv
biB0aGUgU3RhY2tFeGNoYW5nZSBkb21haW4uCi0gW1JhbmRvbVVzZXJHZW5l
cmF0b3JdKGh0dHBzOi8vcmFuZG9tdXNlci5tZS8pIC0gQW4gQVBJIGZvciBn
ZW5lcmF0aW5nIHJhbmRvbSB1c2VyIGRhdGEuIExpa2UgTG9yZW0gSXBzdW0s
IGJ1dCBmb3IgcGVvcGxlLiFbT3BlbiBTb3VyY2VdIChodHRwczovL3Jhdy5n
aXRodWJ1c2VyY29udGVudC5jb20vYWJoaXNoZWtiYW50aGlhL1B1YmxpYy1B
UElzL21hc3Rlci9vcGVuc291cmNlLnBuZyAiT3BlbiBTb3VyY2UiKQotIFtS
ZXN0Q291bnRyaWVzXShodHRwczovL3Jlc3Rjb3VudHJpZXMuZXUpIC0gR2V0
IGluZm9ybWF0aW9uIGFib3V0IGNvdW50cmllcyB2aWEgYSBSRVNUZnVsIEFQ
SS4KLSBbVHlwZWZvcm1dKGh0dHBzOi8vZGV2ZWxvcGVyLnR5cGVmb3JtLmNv
bS8pIC0gVHlwZWZvcm0ncyBBUElzIGFsbG93IHlvdSB0byBjcmVhdGUgYW5k
IGVkaXQgVHlwZWZvcm0gc3VydmV5cywgYW5kIHJldHJpZXZlIHN1cnZleSBy
ZXNwb25zZXMgb24gZGVtYW5kLgotIFtWZWRpYyBTb2NpZXR5IEFQSV0oaHR0
cHM6Ly9hbmluZGl0YWJhc3UuZ2l0aHViLmlvL2luZGljYS9odG1sL3ZzLmh0
bWwpIC0gQSBkZXNjcmlwdGlvbiBvZiBhbGwgb2YgdGhlIG5vdW5zIGluIHZl
ZGljIGxpdGVyYXR1cmUsIGluY2x1ZGluZyB0aGUgZmxvcmEsIGZhdW5hLCBn
ZW9ncmFwaHksIGZvb2QsIHJlbGF0aW9uc2hpcHMsIGFuZCBvYmplY3RzIChw
ZXJzb25hbCBub3VucyBub3QgaW5jbHVkZWQsIHRob3VnaCkuCi0gW1dhbGxo
YXZlbl0oaHR0cHM6Ly93YWxsaGF2ZW4uY2MvaGVscC9hcGkpIC0gQSBodWdl
IHdhbGxwYXBlciBsaWJyYXJ5LgotIFtXaG8gSG9zdHMgVGhpc10oaHR0cHM6
Ly93d3cud2hvLWhvc3RzLXRoaXMuY29tL0FQSSkgLSBEZXRlY3QgdGhlIGhv
c3RpbmcgcHJvdmlkZXIgcG93ZXJpbmcgYW55IHdlYiBzaXRlCi0gW1dvbGZy
YW1BbHBoYV0oaHR0cDovL3Byb2R1Y3RzLndvbGZyYW1hbHBoYS5jb20vYXBp
LykgLSBJbnRlZ3JhdGUgdG9wIG9mIHRoZSBsaW5lIGNvbXB1dGF0aW9uYWwg
a25vd2xlZGdlIGludG8geW91ciBhcHBsaWNhdGlvbnMgdGhyb3VnaCB0aGUg
V29sZnJhbUFscGhhIEFQSS4g8J+SuAotIFtXb3JsZFRpbWVBUEldKGh0dHA6
Ly93b3JsZHRpbWVhcGkub3JnKSAtIEEgSlNPTi9wbGFpbi10ZXh0IHdoaWNo
IHJldHVybnMgdGhlIChhcHByb3gpIGN1cnJlbnQgdGltZSBmb3IgYSBwcm92
aWRlZCB0aW1lem9uZSBvciBJUC4gVGFyZ2V0dGVkIGF0IGxpbWl0ZWQtY29t
cHV0ZSBJb1QgZGV2aWNlcy4KLSBbV3VuZGVybGlzdF0oaHR0cHM6Ly9kZXZl
bG9wZXIud3VuZGVybGlzdC5jb20vKSAtIFRoZSBXdW5kZXJsaXN0IEFQSSBw
cm92aWRlcyBSRVNULWJhc2VkIHN0b3JhZ2UgYW5kIHN5bmNocm9uaXphdGlv
biBvZiBhIHVzZXLigJlzIGxpc3RzIGFjcm9zcyBtdWx0aXBsZSBwbGF0Zm9y
bXMgYW5kIGRldmljZXMuCgojIyMgTW92aWVzCgotIFtPTURCXShodHRwczov
L3d3dy5vbWRiYXBpLmNvbS8pIC0gT01EYiBwcm92aWRlcyBhIHN1YnNjcmlw
dGlvbiBiYXNlZCB3ZWIgc2VydmljZSB0byBvYnRhaW4gaW5mb3JtYXRpb24g
YW5kIG1ldGFkYXRhIGFib3V0IG1vdmllcy4g8J+SuAotIFtUTURiXShodHRw
czovL3d3dy50aGVtb3ZpZWRiLm9yZy9kb2N1bWVudGF0aW9uL2FwaSkgLSBU
TURiIHByb3ZpZGVzIHBvd2VyZnVsIHNlYXJjaGVzIGFzIHdlbGwgYXMgcG93
ZXJmdWwgbW92aWUgZGlzY292ZXJ5LgotIFtUcmFrdF0oaHR0cHM6Ly90cmFr
dC5kb2NzLmFwaWFyeS5pby8pIC0gVHJha3QgY29sbGVjdCBsb3RzIG9mIGlu
Zm9ybWF0aW9uIGFib3V0IHdoYXQgdHYgc2hvd3MgYW5kIG1vdmllcyBldmVy
eW9uZSBpcyB3YXRjaGluZy4KLSBbVFZtYXplXShodHRwczovL3d3dy50dm1h
emUuY29tL2FwaSkgLSBUViBTaG93IGFuZCB3ZWIgc2VyaWVzIGRhdGFiYXNl
LiBFcGlzb2RlIGd1aWRlLCBjYXN0LCBjcmV3IGFuZCBjaGFyYWN0ZXIgaW5m
b3JtYXRpb24uIFJlY2FwcywgcmV2aWV3cywgZXBpc29kZSB0cmFpbGVycywg
Y2VsZWJyaXR5IHBob3RvcyBhbmQgbW9yZS4KCiMjIyBNdXNpYwoKLSBbQUkg
TWFzdGVyaW5nXShodHRwczovL2FpbWFzdGVyaW5nLmNvbS9hcGlfZG9jcy8p
IC0gQUkgTWFzdGVyaW5nIEFQSSBwcm92aWRlcyBhdXRvbWF0ZWQgYXVkaW8g
bWFzdGVyaW5nIHNlcnZpY2UuIFlvdSBjYW4gdXBsb2FkIHlvdXIgYXVkaW8s
IG1hc3RlciBpdCwgYW5kIGRvd25sb2FkIHRoZSBtYXN0ZXJlZCBhdWRpby4K
LSBbRGVlemVyXShodHRwOi8vZGV2ZWxvcGVycy5kZWV6ZXIuY29tL2FwaSkg
LSBEZWV6ZXIgQVBJIHByb3ZpZGVzIGEgbmljZSBzZXQgb2Ygc2VydmljZXMg
dG8gYnVpbGQgdXAgd2ViIGFwcGxpY2F0aW9ucyBhbGxvd2luZyB0aGUgZGlz
Y292ZXJ5IG9mIERlZXplcidzIG11c2ljIGNhdGFsb2d1ZS4KLSBbRGlzY29n
c10oaHR0cHM6Ly93d3cuZGlzY29ncy5jb20vZGV2ZWxvcGVycy8pIC0gQWNj
ZXNzIGRhdGFiYXNlIG9mIGFydGlzdHMsIGxhYmVscywgcmVsZWFzZXMsIG1h
cmtldHBsYWNlIGFuZCBtb3JlLgotIFtMYXN0LmZtXShodHRwOi8vd3d3Lmxh
c3QuZm0vYXBpKSAtICBUaGUgTGFzdC5mbSBBUEkgYWxsb3dzIGFueW9uZSB0
byBidWlsZCB0aGVpciBvd24gcHJvZ3JhbXMgdXNpbmcgTGFzdC5mbSBkYXRh
LCB3aGV0aGVyIHRoZXkncmUgb24gdGhlIHdlYiwgdGhlIGRlc2t0b3Agb3Ig
bW9iaWxlIGRldmljZXMuCi0gW011c2VTY29yZV0oaHR0cDovL2RldmVsb3Bl
cnMubXVzZXNjb3JlLmNvbS8pIC0gUkVTVCBiYXNlZCBBUEkgd2hpY2ggcHJv
dmlkZXMgbXVzaWMgbWV0YWRhdGEuCi0gW211c2ljQXBpXShodHRwczovL2dp
dGh1Yi5jb20vTElVOTI5My9tdXNpY0FQSSkgLSBDZW50cmFsaXplZCBOb2Rl
LkpTIEFQSSBTREsgZm9yIFhpYW1pLCBOZXRlYXNlLCBhbmQgUVEgbXVzaWMg
LSBUaGUgVG9wIDMgbXVzaWMgcHJvdmlkZXJzIGluIENoaW5hLgotIFtOUFIg
QVBJXShodHRwOi8vd3d3Lm5wci5vcmcvYXBpL2luZGV4KSAtIE5QUidzIEFQ
SSBpcyBhIGNvbnRlbnQgQVBJLCB3aGljaCBlc3NlbnRpYWxseSBwcm92aWRl
cyBhIHN0cnVjdHVyZWQgd2F5IGZvciBvdGhlciBjb21wdXRlciBhcHBsaWNh
dGlvbnMgdG8gZ2V0IE5QUiBzdG9yaWVzIGluIGEgcHJlZGljdGFibGUsIGZs
ZXhpYmxlIGFuZCBwb3dlcmZ1bCB3YXkuCi0gW1F1YW50T25lTXVzaWNdKGh0
dHA6Ly9xdWFudG9uZW11c2ljLmNvbS8pIC0gQW5zd2VycyB0aGUgbmVlZCBm
b3IgZGlnaXRhbCBtdXNpYyBkYXRhLgotIFtSaGFwc29keV0oaHR0cHM6Ly9k
ZXZlbG9wZXIucmhhcHNvZHkuY29tLykgLSBBY2Nlc3MgbWV0YWRhdGEsIHVz
ZXLigJlzIGVudGlyZSBsaWJyYXJ5IG9mIG11c2ljIGFuZCBkbyBtdWNoIG1v
cmUuCi0gW1NvdW5kQ2xvdWRdKGh0dHBzOi8vZGV2ZWxvcGVycy5zb3VuZGNs
b3VkLmNvbSkgLSBVc2luZyB0aGUgU291bmRDbG91ZCBBUEksIHlvdSBjYW4g
YnVpbGQgYXBwbGljYXRpb25zIHRoYXQgdGFrZSBzb3VuZCBvbiB0aGUgd2Vi
IHRvIHRoZSBuZXh0IGxldmVsLgotIFtTcG90aWZ5XShodHRwczovL2JldGEu
ZGV2ZWxvcGVyLnNwb3RpZnkuY29tL2RvY3VtZW50YXRpb24vd2ViLWFwaSkg
LSBTcG90aWZ54oCZcyBXZWIgQVBJIGxldHMgeW91ciBhcHBsaWNhdGlvbnMg
ZmV0Y2ggZGF0YSBmcm9tIHRoZSBTcG90aWZ5IG11c2ljIGNhdGFsb2csIG1h
bmFnZSB1c2VycycgcGxheWxpc3RzIGFuZCBzYXZlZCBtdXNpYywgZ2V0IHJl
Y29tbWVuZGF0aW9ucywgY29udHJvbCBTcG90aWZ5IENvbm5lY3QsIGFuZCBt
b3JlLgotIFtUaGVBdWRpb0RCXShodHRwOi8vd3d3LnRoZWF1ZGlvZGIuY29t
KSAtIEZyZWUgSlNPTiBBUEkgZm9yIG11c2ljIGRhdGEsIGFydHdvcmssIGNo
YXJ0aW5nLCByYXRpbmdzIGFuZCBoYXNoZXMuICFbT3BlbiBTb3VyY2VdKGh0
dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9hYmhpc2hla2JhbnRo
aWEvUHVibGljLUFQSXMvbWFzdGVyL29wZW5zb3VyY2UucG5nICJPcGVuIFNv
dXJjZSIpCgojIyMgTXVzaWMgQW5hbHl0aWNzCgotIFtOZXh0IEJpZyBTb3Vu
ZF0oaHR0cHM6Ly9hcGkzLm5leHRiaWdzb3VuZC5jb20vKSAtIEFQSSBvZmZl
cnMgYSB2ZXJ5IHNpbXBsZSBpbnRlcmZhY2UgdG8gYWNjZXNzIGRhdGEgZnJv
bSBOQlMuIFJ1Ynkgd3JhcHBlciBhdmFpbGFibGUuCgojIyMgTXVzaWMgRGlz
Y292ZXJ5CgotIFtSb3ZpXShodHRwczovL2RldmVsb3BlcnMucm92aWNvcnAu
Y29tLykgLSBBY2Nlc3MgdG8gTWV0YWRhdGEsIHNlYXJjaCBjYXBhYmlsaXRp
ZXMgYW5kIHJlY29tbWVuZGF0aW9ucy4KLSBbU2V0bGlzdC5mbV0oaHR0cHM6
Ly9hcGkuc2V0bGlzdC5mbS9kb2NzLzEuMC9pbmRleC5odG1sKSAtIFRoZSBz
ZXRsaXN0LmZtIEFQSSBoYXMgYmVlbiBkZXNpZ25lZCB0byBnaXZlIHlvdSBl
YXN5IGFjY2VzcyB0byBzZXRsaXN0IGRhdGEgaW4gb3JkZXIgdG8gYnVpbGQg
ZmFuY3kgd2Vic2l0ZXMgYW5kIG90aGVyIGFwcGxpY2F0aW9ucy4KLSBbVHVu
ZUZpbmRdKGh0dHA6Ly93d3cudHVuZWZpbmQuY29tL2FwaSkgLSBBbGxvd3Mg
ZGV2ZWxvcGVycyB0byBlbmhhbmNlIHRoZWlyIHNlcnZpY2VzIHdpdGggc29u
Zywgc2hvdywgYW5kIG1vdmllIGRhdGEgZnJvbSBUdW5lRmluZC4KLSBbR2Vu
aXVzXShodHRwczovL2RvY3MuZ2VuaXVzLmNvbS8jL2dldHRpbmctc3RhcnRl
ZC1oMSkgLSBBbGxvd3MgdXNlcnMgdG8gZmluZCBkZXRhaWxzIGFib3V0IEdl
bml1cyBhcnRpc3RzIGFuZCBzb25ncy4KCiMjIyBNdXNpYyBJZGVudGlmaWNh
dGlvbgoKLSBbQWNvdXN0aWRdKGh0dHBzOi8vYWNvdXN0aWQub3JnL3dlYnNl
cnZpY2UpIC0gU3VwcG9ydHMgc2VhcmNoaW5nIHRocm91Z2ggdGhlaXIgZmlu
Z2VycHJpbnQgZGF0YWJhc2UuICFbT3BlbiBTb3VyY2VdKGh0dHBzOi8vcmF3
LmdpdGh1YnVzZXJjb250ZW50LmNvbS9hYmhpc2hla2JhbnRoaWEvUHVibGlj
LUFQSXMvbWFzdGVyL29wZW5zb3VyY2UucG5nICJPcGVuIFNvdXJjZSIpCi0g
W0dyYWNlbm90ZV0oaHR0cHM6Ly9kZXZlbG9wZXIuZ3JhY2Vub3RlLmNvbS8p
IC0gTGFyZ2VzdCBzb3VyY2Ugb2YgbXVzaWMgYW5kIHZpZGVvIG1ldGFkYXRh
IG9uIHRoZSBwbGFuZXQuCgojIyMgTXVzaWMgTHlyaWNzCgotIFtDaGFydEx5
cmljcyBMeXJpY3MgQVBJXShodHRwOi8vd3d3LmNoYXJ0bHlyaWNzLmNvbS9h
cGkuYXNweCkgLSBBbGxvd3MgdXNlcnMgdG8gc2VhcmNoIGZvciBseXJpY3Mg
dXNpbmcgdGhlIGFydGlzdCBuYW1lLCBzb25nIHRpdGxlLCBvciBseXJpYyB0
ZXh0LgotIFtMb2xvbHlyaWNzIEFQSV0oaHR0cDovL2FwaS5sb2xvbHlyaWNz
LmNvbS8pIC0gR2l2ZW4gYW4gYXJ0aXN0IGFuZCB0cmFjayBuYW1lLCBvYnRh
aW5zIGl0cyBseXJpY3MgYW5kIG1ldGFkYXRhIHN1Y2ggYXMgdGhlIHllYXIg
cmVsZWFzZWQgYW5kIGFsYnVtIGFydC4gU3BlY2lhbGl6ZXMgbW9yZSBpbiBl
bGVjdHJvbmljIGRhbmNlIG11c2ljIGdlbnJlcyBzdWNoIGFzIGhhcmRzdHls
ZS4KLSBbTXVzaXhtYXRjaF0oaHR0cHM6Ly9kZXZlbG9wZXIubXVzaXhtYXRj
aC5jb20vKSAtIFBvd2VyIHlvdXIgbXVzaWMgcHJvamVjdCBieSBsaWNlbnNp
bmcgYWNjZXNzIHRvIHRoZSB3b3JsZOKAmXMgbW9zdCBhdXRob3JpdGF0aXZl
IGx5cmljcyBEQi4KCiMjIyBNdXNpYyBTdG9yZXMKCi0gW2lUdW5lcyBTZWFy
Y2hdKGh0dHBzOi8vYWZmaWxpYXRlLml0dW5lcy5hcHBsZS5jb20vcmVzb3Vy
Y2VzL2RvY3VtZW50YXRpb24vaXR1bmVzLXN0b3JlLXdlYi1zZXJ2aWNlLXNl
YXJjaC1hcGkvKSAtIFRoZSBTZWFyY2ggQVBJIGFsbG93cyB5b3UgdG8gcGxh
Y2Ugc2VhcmNoIGZpZWxkcyBpbiB5b3VyIHdlYnNpdGUgdG8gc2VhcmNoIGZv
ciBjb250ZW50IHdpdGhpbiB0aGUgaVR1bmVzIFN0b3JlLCBBcHAgU3RvcmUs
IGlCb29rcyBTdG9yZSBhbmQgTWFjIEFwcCBTdG9yZS4KLSBbUmV2ZXJiXSho
dHRwczovL2Rldi5yZXZlcmIuY29tLykgLSBTZWxsIGFuZCBidXkgbXVzaWMg
cmVsYXRlZCBtZXJjaGFuZGlzZS4KCiMjIyBOZXdzIFNlcnZpY2VzCgotIFtG
YXJvb10oaHR0cDovL3d3dy5mYXJvby5jb20vaHAvYXBpL2FwaS5odG1sKSAt
IEFsdGVybmF0aXZlIHRvIEdvb2dsZSBXZWIgU2VhcmNoIEFQSSAvIEdvb2ds
ZSBOZXdzIFNlYXJjaCBBUEksIGFsbG93cyB5b3UgdG8gc2VhcmNoIG5ld3Mg
d2l0aGluIGRhdGVzLCBmZXRjaCB0cmVuZGluZyBuZXdzLCB0b3BpY3MgYW5k
IHRlcm1zLgotIFtOZXcgWW9yayBUaW1lc10oaHR0cDovL2RldmVsb3Blci5u
eXRpbWVzLmNvbS8pIC0gQXJ0aWNsZSBzZWFyY2gsIGJlc3Qgc2VsbGVycywg
Y2FtcGFpZ24gZmluYW5jZSwgY29tbXVuaXR5LCBtb3N0IHBvcHVsYXIsIHJl
YWwgZXN0YXRlLCBtb3ZpZSByZXZpZXdzLCBOWSBzdGF0ZSBsZWdpc2xhdHVy
ZSwgVGltZXMgbmV3c3dpcmUsIHRhZ3MsIHBlb3BsZQotIFtOZXdzQVBJXSho
dHRwczovL25ld3NhcGkub3JnLykgLSA3MCsgbmV3cyBzb3VyY2VzIGFuZCB0
aGVpciBoZWFkbGluZXMsIG9uZSBBUEkuCi0gW1RoZSBHdWFyZGlhbl0oaHR0
cDovL29wZW4tcGxhdGZvcm0udGhlZ3VhcmRpYW4uY29tLykgLSBBY2Nlc3Mg
YSBodWdlIHJhbmdlIG9mIGNvbnRlbnQgZnJvbSBUaGUgR3VhcmRpYW4uCgoj
IyMgTmF0dXJhbCBMYW5ndWFnZSBQcm9jZXNzaW5nCgotIFtBbGNoZW15QVBJ
IC0gSUJNIENvbXBhbnldKGh0dHA6Ly93d3cuYWxjaGVteWFwaS5jb20vYXBp
KSAtIFVzZXMgTkxQIGFuZCBNTCBhbGdvcml0aG1zIHRvIGV4dHJhY3Qgc2Vt
YW50aWMgbWV0YS1kYXRhIGZyb20gY29udGVudC4KLSBbRGlhbG9nRmxvd10o
aHR0cHM6Ly9kaWFsb2dmbG93LmNvbS8pIC0gTmF0dXJhbCBMYW5ndWFnZSBJ
bnRlcmFjdGlvbnMgZm9yIEJvdHMsIEFwcGxpY2F0aW9ucywgU2VydmljZXMs
IGFuZCBEZXZpY2VzCi0gW0RhdHVtIEJveF0oaHR0cDovL3d3dy5kYXR1bWJv
eC5jb20vbWFjaGluZS1sZWFybmluZy1hcGkvKSAtIERhdHVtYm94IG9mZmVy
cyBhIHBvd2VyZnVsIG9wZW4tc291cmNlIE1hY2hpbmUgTGVhcm5pbmcgRnJh
bWV3b3JrIHdyaXR0ZW4gaW4gSmF2YS4gIVtPcGVuIFNvdXJjZV0oaHR0cHM6
Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2FiaGlzaGVrYmFudGhpYS9Q
dWJsaWMtQVBJcy9tYXN0ZXIvb3BlbnNvdXJjZS5wbmcgIk9wZW4gU291cmNl
IikKLSBbRGV0ZWN0IExhbmd1YWdlXShodHRwczovL3JhcGlkYXBpLmNvbS9C
aWdMb2JzdGVyL2FwaS9sYW5ndWFnZS1pZGVudGlmaWNhdGlvbi1wcmVkaWN0
aW9uKSAtIEF1dG9tYXRpYyBkZXRlY3Rpb24gb2YgdGhlIGxhbmd1YWdlIGlu
IHdoaWNoIHRoZSBpbnB1dCB0ZXh0IGlzIHdyaXR0ZW4uIPCfkrgKLSBbTFVJ
UyBBSV0oaHR0cHM6Ly93d3cubHVpcy5haS8pIC0gTGFuZ3VhZ2UgVW5kZXJz
dGFuZGluZyBJbnRlbGxpZ2VudCBTZXJ2aWNlIG9mZmVycyBhIGZhc3QgYW5k
IGVmZmVjdGl2ZSB3YXkgb2YgYWRkaW5nIGxhbmd1YWdlIHVuZGVyc3RhbmRp
bmcgdG8gYXBwbGljYXRpb25zLgotIFtNZWFuaW5nQ2xvdWRdKGh0dHBzOi8v
d3d3Lm1lYW5pbmdjbG91ZC5jb20pIC0gVGV4dCBhbmFseXNpcyBBUElzIGZv
ciB0b3BpYyBleHRyYWN0aW9uLCBzZW50aW1lbnQgYW5hbHlzaXMsIGF1dG9t
YXRpYyBjbGFzc2lmaWNhdGlvbiwgbW9ycGhvc3ludGFjdGljIGFuYWx5c2lz
LCBsYW5ndWFnZSBkZXRlY3Rpb24gYW5kIG1vcmUuIFNldmVyYWwgbGFuZ3Vh
Z2VzIGFyZSBzdXBwb3J0ZWQuCi0gW09wZW4gQ2FsYWlzXShodHRwOi8vd3d3
Lm9wZW5jYWxhaXMuY29tL29wZW5jYWxhaXMtYXBpLykgLSBHb29kIGVudGl0
eSBleHRyYWN0aW9uLCBubyBzZW50aW1lbnQgYW5hbHlzaXMuCi0gW1JlY2Fz
dC5BSV0oaHR0cHM6Ly9yZWNhc3QuYWkpIC0gUmVjYXN0LkFJIHByb3ZpZGUg
YW4gTkxQIEFQSSBmb3IgdGV4dCBhbmFseXNpcyBhbmQgZW50aXR5IGV4dHJh
Y3Rpb24uIFJlY2FzdC5BSSBpcyB0aGUgbGVhZGluZyBwbGF0Zm9ybSB0byBi
dWlsZCwgY29ubmVjdCBhbmQgbW9uaXRvciBib3RzLgotIFtTaGFrZXNwZWFy
ZSBUcmFuc2xhdG9yIEFQSV0oaHR0cHM6Ly9mdW50cmFuc2xhdGlvbnMuY29t
L2FwaS9zaGFrZXNwZWFyZSkgLSBTaGFrZXNwZWFyZSBFbmdsaXNoIFRyYW5z
bGF0aW9uIEFQSSDwn5K4Ci0gW1N1bW1hcml6ZUJvdCBBUEldKGh0dHBzOi8v
d3d3LnN1bW1hcml6ZWJvdC5jb20vc3VtbWFyaXphdGlvbl9idXNpbmVzcy5o
dG1sKSAtIEFJIHdlYiBkYXRhIGV4dHJhY3Rpb24gYW5kIGFuYWx5c2lzLiBN
dWx0aWxpbmd1YWwgc3VtbWFyaXphdGlvbiwga2V5d29yZHMgYW5kIHNlbnRp
bWVudCBhbmFseXNpcywgbGFuZ3VhZ2UgcmVjb2duaXRpb24sIGFydGljbGUg
ZXh0cmFjdGlvbiwgY29tbWVudHMgaWRlbnRpZmljYXRpb24sIG11bHRpbWVk
aWEgYW5hbHlzaXMsIGltYWdlIGFuZCBmYWNlIHJlY29nbml0aW9uIHNvbHV0
aW9ucy4g8J+SuAotIFtTZW1hbnRyaWFdKGh0dHBzOi8vd3d3LmxleGFseXRp
Y3MuY29tLykgLSBTQUFTIEFQSSBiYXNlZCBvbiBMZXhhbHl0aWNzIGVuZ2lu
ZS4gI1BhaWQKLSBbVGV4dFJhem9yXShodHRwczovL3d3dy50ZXh0cmF6b3Iu
Y29tL3BsYW5zKSAtIEhlbHBzIHlvdSBleHRyYWN0IGFuZCB1bmRlcnN0YW5k
IHRoZSBXaG8sIFdoYXQsIFdoeSwgYW5kIEhvdyBmcm9tIHlvdXIgc3VwcGxp
ZWQgdGV4dC4gI0ZyZWVUb1VzZQotIFtWb2ljZVJTU10oaHR0cDovL3d3dy52
b2ljZXJzcy5vcmcvKSAtIEFuIEFQSSB0byBjb252ZXJ0IFRleHQgdG8gU3Bl
ZWNoLCBzdXBwb3J0aW5nIDE1KyBtYWpvciBsYW5ndWFnZXMuCi0gW1dpdCBB
SV0oaHR0cHM6Ly93aXQuYWkvKSAtIFByb3ZpZGVzIGFuIGludGVudC1iYXNl
ZCBOTFAgQVBJIHRvIGVhc2lseSBidWlsZCB0ZXh0IGFuZCBhdWRpbyBiYXNl
ZCBjaGF0IGJvdHMuICFbT3BlbiBTb3VyY2VdKGh0dHBzOi8vcmF3LmdpdGh1
YnVzZXJjb250ZW50LmNvbS9hYmhpc2hla2JhbnRoaWEvUHVibGljLUFQSXMv
bWFzdGVyL29wZW5zb3VyY2UucG5nICJPcGVuIFNvdXJjZSIpCi0gW1dvcmQg
QXNzb2NpYXRpb25zIEFQSV0oaHR0cHM6Ly93b3JkYXNzb2NpYXRpb25zLm5l
dC9lbi9hcGkpIC0gUHJvdmlkZXMgc2VydmljZSB0byBnZXQgYXNzb2NpYXRp
b25zIGZvciBhIHdvcmQgb3IgcGhyYXNlLiBXb3JkcyBhcmUgZ3JvdXBlZCBi
eSBzZW1hbnRpY3MsIG1lYW5pbmcsIGFuZCBwc3ljaG9sb2dpY2FsIHBlcmNl
cHRpb24uCgojIyMgUGxhY2Vob2xkZXIgSW1hZ2VzCgotIFtEdW1teUltYWdl
XShodHRwczovL2R1bW15aW1hZ2UuY29tLykgLSBQYXJ0aWN1bGFybHkgbmlj
ZSwgd2hlbiBjb21wYXJlZCB0byBzb21lIG9mIGl0cyBjb21wZXRpdG9ycywg
aW4gdGhhdCBpdCBvZmZlcnMgYSBncmVhdCBkZWFsIG9mIGZsZXhpYmlsaXR5
LgotIFtQaXhhYmF5XShodHRwczovL3BpeGFiYXkuY29tL2FwaS9kb2NzLykg
LSBSZXN0ZnVsIEFQSSBmb3Igc2VhcmNoaW5nIGFuZCByZXRyaWV2aW5nIGZy
ZWUgaW1hZ2VzIGFuZCB2aWRlb3MuCi0gW1BsYWNlaG9sZF0oaHR0cHM6Ly9w
bGFjZWhvbGQuaXQvKSAtIEEgcXVpY2sgYW5kIHNpbXBsZSBpbWFnZSBwbGFj
ZWhvbGRlciBzZXJ2aWNlLgotIFtQbGFjZUtpdHRlbl0oaHR0cHM6Ly9wbGFj
ZWtpdHRlbi5jb20vKSAtIEEgcXVpY2sgYW5kIHNpbXBsZSBzZXJ2aWNlIGZv
ciBnZXR0aW5nIHBpY3R1cmVzIG9mIGtpdHRlbnMgZm9yIHVzZSBhcyBwbGFj
ZWhvbGRlcnMgaW4geW91ciBkZXNpZ25zIG9yIGNvZGUuCi0gW1NhdHlyXSho
dHRwOi8vc2F0eXIuaW8vKSAtIEZyZWUgcG93ZXJmdWwgQVBJIGZvciBnZW5l
cmF0aW5nIGR1bW15IGltYWdlcyB3aXRoIHVuaXF1ZSBmZWF0dXJlcyBsaWtl
IGRlbGF5LCBhc3BlY3QgcmF0aW8sIHZhcmlhYmxlIHJlc29sdXRpb24sIHRo
ZW1lcywgZmxhZ3MgYW5kIG9mZmxpbmUgbW9kZS4KLSBbVW5zcGxhc2hdKGh0
dHBzOi8vdW5zcGxhc2guaXQvKSAtIEJlYXV0aWZ1bCBwbGFjZWhvbGRlcnMg
dXNpbmcgaW1hZ2VzIGZyb20gdGhlIHBvcHVsYXIgW1Vuc3BsYXNoXShodHRw
czovL3Vuc3BsYXNoLmNvbS8pCgojIyMgUGxhY2VzCgotIFtibmcybGF0bG9u
Z10oaHR0cHM6Ly93d3cuZ2V0dGhlZGF0YS5jb20vYm5nMmxhdGxvbmcpIC0g
Q29udmVydCBhbiBPU0dCMzYgZWFzdGluZyBhbmQgbm9ydGhpbmcgKEJyaXRp
c2ggTmF0aW9uYWwgR3JpZCkgdG8gV0dTODQgbGF0aXR1ZGUgYW5kIGxvbmdp
dHVkZS4KLSBbQ2l0eUdyaWRdKGh0dHA6Ly9kb2NzLmNpdHlncmlkbWVkaWEu
Y29tL2Rpc3BsYXkvY2l0eWdyaWR2Mi9QbGFjZXMrQVBJKSAtIEVuYWJsZXMg
ZGV2ZWxvcGVycyB0byBjcmVhdGUgd2ViIGFuZCBtb2JpbGUgYXBwbGljYXRp
b25zIHRoYXQgZmluZCBsb2NhbCBidXNpbmVzc2VzLCBvcmdhbml6YXRpb25z
LCBhbmQgcG9pbnRzIG9mIGludGVyZXN0IGJ5IGEgdmFyaWV0eSBvZiBzZWFy
Y2ggY3JpdGVyaWEuCi0gW0NvdW50cnlBUEldKGh0dHBzOi8vZmFiaWFuNzU5
My5naXRodWIuaW8vQ291bnRyeUFQSS8pIC0gR2V0cyBhbGwgdGhlIGNvdW50
cmllcywgYW5kIG9idGFpbiB0aGUgbW9zdCBpbXBvcnRhbnQgaW5mb3JtYXRp
b24gb2YgdGhlc2UuCi0gW0ZhY3R1YWxdKGh0dHBzOi8vZGV2ZWxvcGVyLmZh
Y3R1YWwuY29tL2RvY3MvZ2V0dGluZy1zdGFydGVkKSAtIFByb3ZpZGluZyBh
IHBsYWNlcyBzZWFyY2ggdGhhdCBjYW4gYmUgc2VhcmNoZWQgYnkgbGF0aXR1
ZGUvbG9uZ2l0dWRlLCBhbmQg4oCcd2hlcmXigJ0gdXNpbmcgZnVsbCB0ZXh0
IHNlYXJjaCBxdWVyeSBzdHJpbmcuCi0gW0ZvdXJzcXVhcmUgVmVudWVdKGh0
dHBzOi8vZGV2ZWxvcGVyLmZvdXJzcXVhcmUuY29tL292ZXJ2aWV3L3ZlbnVl
cykgLSBQcm92aWRpbmcgYSBwbGFjZXMgc2VhcmNoIHRoYXQgY2FuIGJlIHNl
YXJjaGVkIGJ5IMKgaGllcmFyY2hpY2FsIGxpc3Qgb2YgY2F0ZWdvcmllcywg
bG9uZ2l0dWRlL2xhdGl0dWRlIGV0Yy4KLSBbR29vZ2xlIFBsYWNlcyBBUEld
KGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL3BsYWNlcy9kb2N1bWVu
dGF0aW9uLz9jc3c9MSkgLSBQcm92aWRpbmcgYSBwbGFjZXMgc2VhcmNoIHRo
YXQgY2FuIGJlIHNlYXJjaGVkIGJ5IGxhdGl0dWRlL2xvbmdpdHVkZSwga2V5
d29yZCBtYXRjaGVkIGFnYWluc3QgYWxsIGZpZWxkcywgbmFtZSBvZiBwbGFj
ZSwgdHlwZSBvZiBwbGFjZSByZXN0cmljdGVkIGJ5IHJhZGl1cy4KLSBbTm9r
aWFdKGh0dHBzOi8vZGV2ZWxvcGVyLmhlcmUuY29tL2RldmVsb3AvamF2YXNj
cmlwdC1hcGkpIC0gUHJvdmlkaW5nIGEgSmF2YVNjcmlwdCBwbGFjZXMgc2Vh
cmNoIHRoYXQgY2FuIGJlIHNlYXJjaGVkIGJ5IHNlYXJjaCB0ZXJtLCB3aXRo
IGEgZGV0YWlsIHNlYXJjaCBmb3IgZGlzcGxheSBieSBKUyB3aWRnZXQuCi0g
W1Byb3BlcnR5IGxpc3RpbmdzXShodHRwczovL2N5MzBsNGxhaTcuZXhlY3V0
ZS1hcGkuZXUtd2VzdC0yLmFtYXpvbmF3cy5jb20vYXBpKSAtIFNlYXJjaCBm
b3IgcHJvcGVydGllcyBjdXJyZW50bHkgZm9yIHNhbGUgYW5kIHRvIHJlbnQg
aW4gdGhlIFVLLgotIFtZZWxwXShodHRwczovL3d3dy55ZWxwLmNvbS9kZXZl
bG9wZXJzL2RvY3VtZW50YXRpb24vdjMvKSAtIFlvdSBjYW4gc2VhcmNoIGxv
Y2F0aW9uIHVzaW5nIGxvbmdpdHVkZSBhbmQgbGF0aXR1ZGUsIG5laWdoYm9y
aG9vZCwgYWRkcmVzcyBvciBjaXR5IGFuZCBmaWx0ZXIgbGlzdGluZ3MgYnkg
4oCcd2hlcmXigJ0sIHVzaW5nIGEgbGlzdCBvZiBzdXBwb3J0IGNhdGVnb3Jp
ZXMuCgojIyMgUHJvZHVjdAoKLSBbUHJvZHVjdCBIdW50XShodHRwczovL2Fw
aS5wcm9kdWN0aHVudC5jb20vdjEvZG9jcykgLSBUaGUgYmVzdCBuZXcgcHJv
ZHVjdHMsIGV2ZXJ5IGRheS4KCiMjIyBRdW90ZXMKCi0gW0ZhdlFzXShodHRw
czovL2ZhdnFzLmNvbS9hcGkpIC0gRmF2UXMgYWxsb3dzIHlvdSB0byBjb2xs
ZWN0LCBkaXNjb3ZlciwgYW5kIHNoYXJlIHlvdXIgZmF2b3JpdGUgcXVvdGVz
LgotIFtGb3Jpc21hdGljXShodHRwOi8vYXBpLmZvcmlzbWF0aWMuY29tL2Fw
aS8xLjAvKSAtIEdpdmVzIHlvdSBhIHJhbmRvbSBxdW90ZSBwZXIgY2xpY2su
Ci0gW1RoZXkgU2FpZCBTb10oaHR0cDovL3F1b3Rlcy5yZXN0L3FvZC5qc29u
P2NhdGVnb3J5PWluc3BpcmUpIC0gR2l2ZXMgeW91IGEgcmFuZG9tIHF1b3Rl
IHBlciBkYXkuCgojIyMgUmV0YWlsCgotIFtBbWF6b24gUHJvZHVjdCBBZHZl
cnRpc2luZyBBUEldKGh0dHA6Ly9kb2NzLmF3cy5hbWF6b24uY29tL0FXU0VD
b21tZXJjZVNlcnZpY2UvbGF0ZXN0L0RHL1dlbGNvbWUuaHRtbCkgLSBHZXQg
YWNjZXNzIHRvIHRoZSBkYXRhIHVzZWQgYnkgQW1hem9uIGluY2x1ZGluZyBp
dGVtcyBmb3Igc2FsZSwgY3VzdG9tZXIgcmV2aWV3cywgc2VsbGVyIHJldmll
d3MsIGl0ZW0gc2VhcmNoLCBwcm9kdWN0IHByb21vdGlvbnMsIGFuZCBtb3Jl
LgoKIyMjIFNjaWVuY2UKCi0gW05BU0FdKGh0dHBzOi8vYXBpLm5hc2EuZ292
L2luZGV4Lmh0bWwpIC0gR2V0IE5BU0EgZGF0YSwgaW5jbHVkaW5nIGltYWdl
cnksIGxpc3Qgb2YgYXN0ZXJvaWRzIGJhc2VkIG9uIHRoZWlyIGNsb3Nlc3Qg
YXBwcm9hY2ggZGF0ZSB0byBFYXJ0aCBhbmQgbXVjaCBtb3JlLgotIFtPcGVu
IFNjaWVuY2UgRnJhbWV3b3JrXShodHRwczovL29zZi5pby95OWpkdC93aWtp
L2hvbWUvKSAtIEEgZnJlZSwgb3BlbiBzb3VyY2Ugd29ya2Zsb3cvcHJvamVj
dCBtYW5hZ2VtZW50IHN5c3RlbSBmb3Igc3RvcmluZywgY29sbGFib3JhdGlu
ZyBvbiwgYW5kIHNoYXJpbmcgcmVzZWFyY2ggYWNyb3NzIHRoZSBzY2hvbGFy
bHkgbGlmZSBjeWNsZS4gIVtPcGVuIFNvdXJjZV0oaHR0cHM6Ly9yYXcuZ2l0
aHVidXNlcmNvbnRlbnQuY29tL2FiaGlzaGVrYmFudGhpYS9QdWJsaWMtQVBJ
cy9tYXN0ZXIvb3BlbnNvdXJjZS5wbmcgIk9wZW4gU291cmNlIikKLSBbU0hB
UkVdKGh0dHA6Ly9zaGFyZS1yZXNlYXJjaC5yZWFkdGhlZG9jcy5pby9lbi9s
YXRlc3QvKSAtIEEgZnJlZSwgb3BlbiBkYXRhc2V0IG9mIHNjaG9sYXJseSBy
ZXNlYXJjaCBhY3Rpdml0eSBhY3Jvc3MgdGhlIHNjaG9sYXJseSBsaWZlY3lj
bGUuICFbT3BlbiBTb3VyY2VdKGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250
ZW50LmNvbS9hYmhpc2hla2JhbnRoaWEvUHVibGljLUFQSXMvbWFzdGVyL29w
ZW5zb3VyY2UucG5nICJPcGVuIFNvdXJjZSIpCgojIyMgU29jaWFsIE1lZGlh
CgotIFtEYWlseSBNb3Rpb25dKGh0dHBzOi8vZGV2ZWxvcGVyLmRhaWx5bW90
aW9uLmNvbS8pIC0gQnVpbGQgYXBwbGljYXRpb25zIGNlbnRlcmVkIGFyb3Vu
ZCBEYWlseU1vdGlvbi4KLSBbRGVsaWNpb3VzXShodHRwczovL2dpdGh1Yi5j
b20vZG9tYWluZXJzdWl0ZWRldi9kZWxpY2lvdXMtYXBpKSAtIEFjY2VzcyB0
byBEZWxpY2lvdXPigJlzIEFQSS4KLSBbRGV2aWFudEFydF0oaHR0cHM6Ly93
d3cuZGV2aWFudGFydC5jb20vZGV2ZWxvcGVycy8pIC0gVGhlIGxhcmdlc3Qg
c29jaWFsIG5ldHdvcmtpbmcgd2Vic2l0ZSBmb3IgYXJ0aXN0cyBhbmQgYXJ0
IGVudGh1c2lhc3RzLgotIFtFdmVudEJyaXRlXShodHRwczovL2dpdGh1Yi5j
b20vZXZlbnRicml0ZS9ldmVudGJyaXRlLXNkay1weXRob24pIC0gVGhlIEV2
ZW50YnJpdGUgUHl0aG9uIFNESyBtYWtlcyBpdCB0cml2aWFsIHRvIGludGVy
YWN0IHdpdGggdGhlIEV2ZW50YnJpdGUgQVBJLiAhW09wZW4gU291cmNlXSho
dHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vYWJoaXNoZWtiYW50
aGlhL1B1YmxpYy1BUElzL21hc3Rlci9vcGVuc291cmNlLnBuZyAiT3BlbiBT
b3VyY2UiKQotIFtGYWNlYm9va10oaHR0cHM6Ly9kZXZlbG9wZXJzLmZhY2Vi
b29rLmNvbS8pIC0gRm9yIGFkcywgZ2FtZXMsIHBheW1lbnRzLCBsb2dpbiwg
c2hhcmluZyBzdGF0cywgYW5kIHVzZXIgZGF0YS4KLSBbRmxpY2tyXShodHRw
czovL3d3dy5mbGlja3IuY29tL3NlcnZpY2VzL2FwaS8pIC0gU2VhcmNoIHRo
cm91Z2ggdXNlciBGbGlja3IgY29udGVudCwgY29udGFjdHMsIHVwbG9hZCBv
ciByZXBsYWNlIHBob3Rvcy4KLSBbRm91cnNxdWFyZV0oaHR0cHM6Ly9kZXZl
bG9wZXIuZm91cnNxdWFyZS5jb20vKSAtIEFjY2VzcyB0byBGb3Vyc3F1YXJl
IGRhdGFiYXNlIGFuZCBhYmlsaXR5IHRvIGludGVyYWN0IHdpdGggRm91cnNx
dWFyZSB1c2Vycy4KLSBbR29vZFJlYWRzXShodHRwczovL3d3dy5nb29kcmVh
ZHMuY29tL2FwaSkgLSBBbGxvd3MgZGV2ZWxvcGVycyBhY2Nlc3MgdG8gR29v
ZHJlYWRzIGRhdGEgaW4gb3JkZXIgdG8gaGVscCB3ZWJzaXRlcyBvciBhcHBs
aWNhdGlvbnMgdGhhdCBkZWFsIHdpdGggYm9va3MuCi0gW0dvb2dsZStdKGh0
dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tLysvd2ViL2FwaS9yZXN0Lykg
LSBFbmFibGVzIGFwcHMgdG8gbG9naW4gdG8gR29vZ2xlKyB2aWV3IGNvbm5l
Y3Rpb25zLCBncm91cHMsIHBvc3RzLCBhbmQgY29udGFjdCBpbmZvcm1hdGlv
bi4KLSBbR3JhdmF0YXJdKGh0dHBzOi8vZW4uZ3JhdmF0YXIuY29tL3NpdGUv
aW1wbGVtZW50LykgLSBDcmVhdGUgcHJvZmlsZXMgYW5kIGF2YXRhcnMgdXNp
bmcgdGhpcyB3ZWIgc2VydmljZS4KLSBbSGFja2VyIE5ld3NdKGh0dHBzOi8v
Z2l0aHViLmNvbS9IYWNrZXJOZXdzL0FQSSkgLSBBbnl0aGluZyB0aGF0IGdv
b2QgaGFja2VycyB3b3VsZCBmaW5kIGludGVyZXN0aW5nLgotIFtJbWd1cl0o
aHR0cHM6Ly9hcGkuaW1ndXIuY29tLykgLSBJbWd1cidzIEFQSSBleHBvc2Vz
IHRoZSBlbnRpcmUgSW1ndXIgaW5mcmFzdHJ1Y3R1cmUgdmlhIGEgc3RhbmRh
cmRpemVkIHByb2dyYW1tYXRpYyBpbnRlcmZhY2UuCi0gW0luc3RhZ3JhbV0o
aHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9kZXZlbG9wZXIvKSAtIFNlYXJj
aCBwaG90b3MgYnkgbG9jYXRpb24sIHVzZXIsIHRhZ3MsIHZpZXcgdHJlbmRp
bmcgcGhvdG9zLCBhbmQgbWFrZSBjdXN0b20gaXRlbXMuCi0gW0tha2FvXSho
dHRwczovL2RldmVsb3BlcnMua2FrYW8uY29tL2ZlYXR1cmVzL2tha2FvKSAt
IEFjY2VzcyB0byBLYWthb+KAmXMgQVBJcy4KLSBbTGlua2VkSW5dKGh0dHBz
Oi8vZGV2ZWxvcGVyLmxpbmtlZGluLmNvbS8pIC0gRW5hYmxlcyBhcHBzIHRv
IGNvbm5lY3QgdG8gdXNlciBhY2NvdW50cywgZGF0YSwgY29ubmVjdGlvbnMs
Z3JvdXBzLCBjb21tdW5pY2F0aW9ucywgYW5kIHNvY2lhbCBzdHJlYW1zLgot
IFtNYXN0b2Rvbl0oaHR0cHM6Ly9naXRodWIuY29tL3Rvb3RzdWl0ZS9kb2N1
bWVudGF0aW9uL2Jsb2IvbWFzdGVyL1VzaW5nLXRoZS1BUEkvQVBJLm1kKSAt
IEFjY2VzcyB0byBbTWFzdG9kb25dKGh0dHBzOi8vZ2l0aHViLmNvbS90b290
c3VpdGUvbWFzdG9kb24p4oCZcyBBUElzLCB0aGUgT3Blbi1zb3VyY2UgdHdp
dHRlciBjb21wZXRpdG9yLiAhW09wZW4gU291cmNlXShodHRwczovL3Jhdy5n
aXRodWJ1c2VyY29udGVudC5jb20vYWJoaXNoZWtiYW50aGlhL1B1YmxpYy1B
UElzL21hc3Rlci9vcGVuc291cmNlLnBuZyAiT3BlbiBTb3VyY2UiKQotIFtN
aWNyb2xpbmtdKGh0dHBzOi8vbWljcm9saW5rLmlvKSAtIFR1cm5zIGFueSBs
aW5rIGludG8gaW5mb3JtYXRpb24uIFRha2Ugc2NyZWVuc2hvdHMsIGV4dHJh
Y3QgcHJlZG9taW5hbnQgcGFsZXR0ZSBjb2xvcnMuCi0gW015U29jaWFsQXBw
XShodHRwczovL215c29jaWFsYXBwLmlvKSAtIFNlYW1sZXNzIFNvY2lhbCBO
ZXR3b3JraW5nIGZlYXR1cmVzLCBBUEksIFNESyBmb3IgYW55IGFwcC4KLSBb
UGludGVyZXN0XShodHRwczovL3d3dy5waW50ZXJlc3QuY29tL2xvZ2luLz9u
ZXh0PWh0dHAlM0ElMkYlMkZkZXZlbG9wZXJzLnBpbnRlcmVzdC5jb20lMkZh
cGlfZG9jcyUyRikgLSBFbmFibGVzIGFwcHMgdG8gdmlldyB0aGUgbW9zdCBj
bGlja2VkLXRocm91Z2ggb3IgcmVwaW5uZWQgUGlucywgdmlldyByZWxhdGVk
IHBvc3RzLCBhbmQgdXNlciBwcm9maWxlcy4KLSBbUmVkZGl0XShodHRwczov
L2dpdGh1Yi5jb20vcmVkZGl0L3JlZGRpdC93aWtpL0FQSSkgLSBBUEkgdG8g
YnVpbGQgY2xpZW50cywgY3Jhd2xlcnMsIHNjcmFwZXJzLCBhbmQgYnJvd3Nl
ciBleHRlbnNpb25zLiAhW09wZW4gU291cmNlXShodHRwczovL3Jhdy5naXRo
dWJ1c2VyY29udGVudC5jb20vYWJoaXNoZWtiYW50aGlhL1B1YmxpYy1BUElz
L21hc3Rlci9vcGVuc291cmNlLnBuZyAiT3BlbiBTb3VyY2UiKQotIFtTbmFw
Y2hhdF0oaHR0cHM6Ly9naXRodWIuY29tL21ncDI1L1NDLUFQSSkgLSBQSFAg
bGlicmFyeSBvZiBTbmFwY2hhdOKAmXMgcHJpdmF0ZSBBUEkuICNQcml2YXRl
Ci0gW1RlbGVncmFtXShodHRwczovL2NvcmUudGVsZWdyYW0ub3JnLykgLSBU
aGUgVGVsZWdyYW0gQVBJIGFsbG93cyB5b3UgdG8gYnVpbGQgeW91ciBvd24g
Y3VzdG9taXplZCBUZWxlZ3JhbSBjbGllbnRzLgotIFtUcmFzaCBOb3RoaW5n
XShodHRwczovL3RyYXNobm90aGluZy5jb20vZGV2ZWxvcGVyKSAtIEJ1aWxk
IGFwcHMgb24gdG9wIG9mIG9uZSBvZiB0aGUgbGFyZ2VzdCBmcmVlY3ljbGlu
ZyBhbmQgcmV1c2UgY29tbXVuaXRpZXMgd2l0aCBtaWxsaW9ucyBvZiBwZW9w
bGUgZ2l2aW5nIGF3YXkgdGhvdXNhbmRzIG9mIGZyZWUgaXRlbXMgZXZlcnkg
ZGF5LgotIFtUd2l0Y2hdKGh0dHBzOi8vZGV2LnR3aXRjaC50di9kb2NzKSAt
IFRoZSBUd2l0Y2ggQVBJIGVuYWJsZXMgeW91IHRvIGRldmVsb3AgeW91ciBv
d24gYXBwbGljYXRpb25zIHVzaW5nIHRoZSByaWNoIGZlYXR1cmUgc2V0IHRo
YXQgVHdpdGNoIHByb3ZpZGVzLgotIFtUd2l0dGVyXShodHRwczovL2Rldi50
d2l0dGVyLmNvbS8pIC0gRW5hYmxlcyBhbiBhcHAgdG8gaW50ZXJhY3Qgd2l0
aCBtb3N0IG9mIFR3aXR0ZXLigJlzIGZ1bmN0aW9ucy4KLSBbVHVtYmxyXSho
dHRwczovL3d3dy50dW1ibHIuY29tL2RvY3MvZW4vYXBpL3YyKSAtIENyZWF0
ZSBuZXcgd2F5cyB0byB1c2UgVHVtYmxyIHdpdGggYWNjZXNzIHRvIGNvbnRl
bnQsIGxpa2VzLCBmb2xsb3dlcnMsIGFuZCBkcmFmdHMuCi0gW1ZpbWVvXSho
dHRwczovL2RldmVsb3Blci52aW1lby5jb20vKSAtIEFjY2VzcyB0byBWaW1l
b+KAmXMgQVBJLgotIFtWaWJlcl0oaHR0cHM6Ly9kZXZlbG9wZXJzLnZpYmVy
LmNvbS9kb2NzL2FwaS8pIC0gV2l0aCBWaWJlcuKAmXMgQVBJcywgY2FuIGNy
ZWF0ZSB1bmlxdWUgZXhwZXJpZW5jZXMgZm9yIHVzZXJzIGF0IHNjYWxlLgot
IFtWS10oaHR0cHM6Ly92ay5jb20vZGV2KSAtIEFjY2VzcyB0byBWS29udGFr
dGUncyBBUEkuIFRoaXMgaGFzIGEgdmFyaWV0eSBvZiBmZWF0dXJlcyBzdWNo
IGFzIGF1dGhvcml6YXRpb24gdmlhIFZLLCBlbWJlZGRpbmcgVksgY29tbWVu
dHMgZm9yIHRoaW5ncyBsaWtlIGJsb2dzLCBhbmQgdGFraW5nIHBheW1lbnRz
IHZpYSBWSy4gQWRkaXRpb25hbGx5LCB5b3UgbWF5IHVzZSB0aGUgVksgQVBJ
IHRvIGNvbnRyb2wgbXVjaCBvZiB0aGUgZnVuY3Rpb25hbGl0eSBvbiB0aGUg
d2Vic2l0ZSAoZm9yIGV4YW1wbGUsIGFkanVzdGluZyBzaG9wIGludmVudG9y
eSBpbiB5b3VyIFZLIGNvbW11bml0eSdzIG1hcmtldCBzZWN0aW9uKS4KLSBb
V2VpYm9dKGh0dHA6Ly9vcGVuLndlaWJvLmNvbS93aWtpL0FQSSVFNiU5NiU4
NyVFNiVBMSVBMy9lbikgLSBQcm9ncmFtbWF0aWMgYWNjZXNzIHRvIENoaW5h
4oCZcyBtb3N0IHBvcHVsYXIgbWljcm9ibG9nZ2luZyBzaXRlLgotIFtXaGF0
c2FwcCBEb2N1bWVudCBJbnRlcmFjdGlvbl0oaHR0cHM6Ly9mYXEud2hhdHNh
cHAuY29tL2VuL2lwaG9uZS8yMzU1OTAxMykgLSBJZiB5b3VyIGFwcGxpY2F0
aW9uIGNyZWF0ZXMgcGhvdG9zLCB2aWRlb3Mgb3IgYXVkaW8gbm90ZXMgYW5k
IHlvdeKAmWQgbGlrZSB5b3VyIHVzZXJzIHRvIHNoYXJlIHRoZXNlIG1lZGlh
IHVzaW5nIFdoYXRzQXBwLiAjTGltaXRlZAotIFtXb3JkcHJlc3NdKGh0dHBz
Oi8vY29kZXgud29yZHByZXNzLm9yZy9Xb3JkUHJlc3NfQVBJcykgLSBBY2Nl
c3MgdG8gV29yZHByZXNz4oCZIEFQSS4KLSBbVW50YXBwZF0oaHR0cHM6Ly91
bnRhcHBkLmNvbS9hcGkvZG9jcykgLSBVbnRhcHBkIGlzIGEgbW9iaWxlIHdl
YiBhcHAgdGhhdCBhbGxvd3MgeW91IHRvIHNvY2lhbGx5IHNoYXJlIGJlZXJz
IHRoYXQgeW91J3JlIGVuam95aW5nLgotIFtZb3VUdWJlXShodHRwczovL2Rl
dmVsb3BlcnMuZ29vZ2xlLmNvbS95b3V0dWJlLykgLSBBZGQgWW91VHViZSBm
dW5jdGlvbmFsaXR5IHRvIHlvdXIgc2l0ZXMgYW5kIGFwcHMuCi0gW1pvbWF0
b10oaHR0cHM6Ly9kZXZlbG9wZXJzLnpvbWF0by5jb20vYXBpKSAtIFpvbWF0
byBBUElzIGdpdmUgeW91IGFjY2VzcyB0byB0aGUgZnJlc2hlc3QgYW5kIG1v
c3QgZXhoYXVzdGl2ZSBpbmZvcm1hdGlvbiBmb3Igb3ZlciAxLjUgbWlsbGlv
biByZXN0YXVyYW50cyBhY3Jvc3MgMTAsMDAwIGNpdGllcyBnbG9iYWxseS4K
CiMjIyBTb3VyY2UgQ29udHJvbAoKLSBbQml0YnVja2V0XShodHRwczovL2Rl
dmVsb3Blci5hdGxhc3NpYW4uY29tL2JpdGJ1Y2tldC9hcGkvMi9yZWZlcmVu
Y2UvKSAtIEFjY2VzcyB0byBCaXRidWNrZXQncyBBUEkuCi0gW0dpdEh1Yl0o
aHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My8pIC0gQnVpbGQgcmVh
bC13b3JsZCBHaXRIdWIgYXBwbGljYXRpb25zIHJpZ2h0IGZyb20gYXV0aGVu
dGljYXRpb24sIHRvIG1hbmlwdWxhdGluZyByZXN1bHRzLCB0byBjb21iaW5p
bmcgcmVzdWx0cyB3aXRoIG90aGVyIHNlcnZpY2UuCi0gW0dpdEh1YiBHaXN0
c10oaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9naXN0cy8pIC0g
QWNjZXNzIHRvIEdpdEh1YuKAmXMgR2lzdHMgQVBJLgotIFtHaXRMYWJdKGh0
dHBzOi8vZG9jcy5naXRsYWIuY29tL2NlL2FwaS9SRUFETUUuaHRtbCkgLSBB
Y2Nlc3MgdG8gR2l0TGFiJ3MgQVBJLgotIFtNZXJjdXJpYWxdKGh0dHBzOi8v
d3d3Lm1lcmN1cmlhbC1zY20ub3JnL3dpa2kvTWVyY3VyaWFsQXBpKSAtIEFj
Y2VzcyB0byBNZXJjdXJpYWzigJlzIEFQSS4KLSBbU1ZOXShodHRwczovL3N1
YnZlcnNpb24uYXBhY2hlLm9yZy9kb2NzL2FwaS8xLjgvKSAtIENvbGxlY3Rp
b24gb2YgbW9kdWxhciBsaWJyYXJpZXMgd3JpdHRlbiBpbiB0aGUgQyBwcm9n
cmFtbWluZyBsYW5ndWFnZS4KLSBbVGVhbSBGb3VuZGF0aW9uIFNlcnZlcl0o
aHR0cHM6Ly93d3cudmlzdWFsc3R1ZGlvLmNvbS9lbi11cy9kb2NzL2ludGVn
cmF0ZS9nZXQtc3RhcnRlZC9vdmVydmlldykgLSBURlMgQVBJcyBhcmUgYmFz
ZWQgb24gUkVTVCwgT0F1dGgsIEpzb24gYW5kIHNlcnZpY2UgaG9va3MuCgoj
IyMgU3BvcnQKCi0gW0VyZ2FzdCBGb3JtdWxhIDFdKGh0dHA6Ly9lcmdhc3Qu
Y29tL21yZC8pIC0gUHJvdmlkZXMgYWNjZXNzIHRvIGN1cnJlbnQgYW5kIGhp
c3RvcmljYWwgRm9ybXVsYSAxIHJhY2UgZGF0YSBmcm9tIDE5NTAgdG8gdG9k
YXkuCi0gW0Zvb3RiYWxsIFByZWRpY3Rpb25dKGh0dHBzOi8vYm9nZ2lvLWFu
YWx5dGljcy5jb20vZnAtYXBpLykgLSBQcmVkaWN0aW9ucyBmb3IgdXBjb21p
bmcgZm9vdGJhbGwgbWF0Y2hlcywgb2RkcywgcmVzdWx0cyBhbmQgc3RhdHMu
IPCfkrgKLSBbVGhlU3BvcnRzREJdKGh0dHA6Ly93d3cudGhlc3BvcnRzZGIu
Y29tLykgLSBWYXJpb3VzIHNwb3J0cyBldmVudHMsIHJlc3VsdHMsIHBsYXll
cnMsIHRlYW1zIGFuZCBoaWdoIHF1YWxpdHkgYXJ0d29yay4KCiMjIyBUcmFu
c3BvcnRhdGlvbgoKLSBbQURTLUIgRXhjaGFuZ2VdKGh0dHBzOi8vd3d3LmFk
c2JleGNoYW5nZS5jb20vZGF0YS8pIC0gQWNjZXNzIHJlYWwtdGltZSBhbmQg
aGlzdG9yaWNhbCBkYXRhIG9mIGFueSBhbmQgYWxsIGFpcmJvcm5lIGFpcmNy
YWZ0LgotIFtBZnRlclNoaXBdKGh0dHBzOi8vd3d3LmFmdGVyc2hpcC5jb20v
ZG9jcy9hcGkvNC9vdmVydmlldykgLSBQcm92aWRlcyBtdWx0aS1jYXJyaWVy
IHNoaXBtZW50IHRyYWNraW5nIEFQSXMuCi0gW0VkbXVuZHNdKGh0dHA6Ly9k
ZXZlbG9wZXIuZWRtdW5kcy5jb20vKSAtIEEgZGF0YXNldCBjb250YWluaW5n
IGFsbCB0aGUgY2FyIG1ha2VzLgotIFtIeXBlclRyYWNrXShodHRwczovL2Rv
Y3MuaHlwZXJ0cmFjay5jb20pIC0gQnVpbGQgYXBwbGljYXRpb25zIHRoYXQg
dHJhY2sgdGhlIG1vdmVtZW50IG9mIHlvdXIgYnVzaW5lc3MuIPCfkrgKLSBb
THlmdF0oaHR0cHM6Ly93d3cubHlmdC5jb20vZGV2ZWxvcGVycykgLSBHZXQg
cmVhbC10aW1lIEVUQXMsIGF2YWlsYWJpbGl0eSwgcHJpY2UgZXN0aW1hdGVz
LCByaWRlIHN0YXR1cyB0aHJvdWdoIHRoZSBMeWZ0IEFQSS4KLSBbTW9vdml0
XShodHRwczovL3d3dy5kZXZlbG9wZXJzLm1vb3ZpdGFwcC5jb20vKSAtIENv
bm5lY3QgdXNlcnMgZnJvbSB5b3VyIGFwcCB0byB0aGUgTW9vdml0IGFwcCB3
aXRoIGEgc3BlY2lmaWMgYWN0aW9uIHRocm91Z2ggZGVlcGxpbmtzLgotIFtQ
b3N0bWVuXShodHRwczovL2RvY3MucG9zdG1lbi5jb20vKSAtIEFkZCBzaGlw
cGluZyBjYXBhYmlsaXR5IG9mIEZlZEV4LCBVUFMsIERITCwgVVNQUyBhbmQg
b3ZlciA0MCBjYXJyaWVycyB3b3JsZHdpZGUuCi0gW1Bvc3RtYXRlc10oaHR0
cHM6Ly9wb3N0bWF0ZXMuY29tL2RldmVsb3Blci9kb2NzKSAtIEJ1aWxkIG9u
LWRlbWFuZCBkZWxpdmVyeSBpbnRvIHlvdXIgYXBwIG9yIHdlYnNpdGUuCi0g
W1ViZXJdKGh0dHBzOi8vZGV2ZWxvcGVyLnViZXIuY29tLykgLSBVYmVyIHBy
b3ZpZGVzIEFQSSBmb3IgY3VzdG9taXppbmcgdHJpcCBleHBlcmllbmNlcywg
cmVxdWVzdGluZyByaWRlcywgcG93ZXJpbmcgbG9naXN0aWNzLCBjcmVhdGlu
ZyBib3RzIGFuZCBzbyBtdWNoIG1vcmUuCgojIyMgVVJMIFNob3J0ZW5lcnMK
Ci0gW0Fub24uY2xpY2tdKGh0dHBzOi8vYW5vbi5jbGljay9hcGkvKSAtIFNo
b3J0ZW4gbG9uZyBVUkxzIGFuZCBvcHRpb25hbGx5IHByb3RlY3QgdGhlbSB3
aXRoIHBhc3N3b3JkcyBvciBjYXB0Y2hhLiBObyByZWdpc3RyYXRpb24gcmVx
dWlyZWQuCi0gW0JpdGx5XShodHRwOi8vZGV2LmJpdGx5LmNvbS9saW5rcy5o
dG1sKSAtIEFjY2VzcyB0byBCaXRseeKAmXMgQVBJLgotIFtJcy5nZF0oaHR0
cHM6Ly9pcy5nZC9kZXZlbG9wZXJzLnBocCkgLSBTaW1wbGUgVVJMIHNob3J0
ZW5lci4gU3VwcG9ydHMgY3VzdG9tIHNob3J0IGxpbmsgZW5kaW5nLgotIFtO
YXZlciBVUkwgU2hvcnRlbmVyXShodHRwczovL2RldmVsb3BlcnMubmF2ZXIu
Y29tL3Byb2R1Y3RzL3Nob3J0ZW51cmwpIC0gQWNjZXNzIHRvIE5hdmVy4oCZ
cyBVUkwgc2hvcnRlbmluZyBBUEkuCi0gW1BvLnN0XShodHRwczovL3Bvc3Qu
emVuZGVzay5jb20vaGMvZW4tdXMvYXJ0aWNsZXMvMjAwMzI4NTE2LVBvLXN0
LVJFU1QtQVBJKSAtIFNob3J0ZW4gVVJMcywgRXhwYW5kIHNob3J0ZW5lZCBV
UkxzLCBzZWUgc3RhdGlzdGljcyBldGMuCi0gW1NocnRVUkldKGh0dHBzOi8v
c2hydHVyaS5jb20vZG9jcykgLSBVUkwgc2hvcnRlbmluZyBBUEkgZm9yIGNy
ZWF0aW5nIHNob3J0IFVSTHMgZnJvbSBsb25nIFVSTHMuCi0gW1RpbnkuY2Nd
KGh0dHBzOi8vdGlueS5jYy9hcGktZG9jcykgLSBFYXN5LXRvLXVzZSBVUkwg
c2hvcnRlbmVyLiBTdXBwb3J0cyBjdXN0b20gc2hvcnQgbGluayBlbmRpbmcu
Ci0gW1YuZ2RdKGh0dHBzOi8vdi5nZC9kZXZlbG9wZXJzLnBocCkgLSBTaW1w
bGUgVVJMIHNob3J0ZW5lci4gU3VwcG9ydHMgY3VzdG9tIHNob3J0IGxpbmsg
ZW5kaW5nLgotIFtZb3VybHNdKGh0dHBzOi8veW91cmxzLm9yZy8jQVBJKSAt
IEdlbmVyYXRlIG9yIGdldCBleGlzdGluZyBzaG9ydCBVUkxzLCB3aXRoIHNl
cXVlbnRpYWwgb3IgY3VzdG9tIGtleXdvcmQuCi0gW1plcm8gV2lkdGggU2hv
cnRlbmVyXShodHRwczovL2RvY3MuendzLmltKSAtIFVSTCBzaG9ydGVuZXIg
dGhhdCBzaG9ydGVucyBVUkxzIHVzaW5nIHNwYWNlcyB0aGF0IGhhdmUgemVy
byB3aWR0aCwgbWFraW5nIHRoZW0gaW52aXNpYmxlIHRvIGh1bWFucy4KCiMj
IyBWaWRlb2dhbWVzCgotIFtDbGFzaCBSb3lhbGVdKGh0dHBzOi8vZ2l0aHVi
LmNvbS9tYXJ0aW5jYXJyZXJhL2NsYXNoLXJveWFsZS1hcGkpIC0gQVBJIHRo
YXQgcHJvdmlkZXMgaW5mb3JtYXRpb25zIGFib3V0IENsYXNoIFJveWFsZSBn
YW1lLgotIFtHaWFudEJvbWJdKGh0dHA6Ly93d3cuZ2lhbnRib21iLmNvbS9h
cGkvKSAtIEFQSSB0byBxdWVyeSB0aGUgR2lhbnRCb21iIGRhdGFiYXNlIGZv
ciB2aWRlb2dhbWVzLCBjaGFyYWN0ZXJzLCBjb21wYW5pZXMsIGdlbnJlcyBh
bmQgbWFueSBtb3JlLgotIFtJR0RCXShodHRwczovL3d3dy5pZ2RiLmNvbS9h
cGkpIC0gQWNjZXNzIHRoZSBJbnRlcm5hdGlvbmFsIEdhbWVzIERhdGFiYXNl
IGFuZCBnZXQgaW5mb3JtYXRpb24gYWJvdXQgdmlkZW9nYW1lcywgY2hhcmFj
dGVycywgY29tcGFuaWVzLCBnZW5yZXMgYW5kIG1hbnkgbW9yZS4gQ29tbWVy
Y2lhbCB1c2FnZSBpcyBhbGxvd2VkLgoKIyMjIFdlYXRoZXIKCi0gW0Flcmlz
V2VhdGhlcl0oaHR0cHM6Ly93d3cuYWVyaXN3ZWF0aGVyLmNvbSkgLSBHbG9i
YWwgd2VhdGhlciBkYXRhIGFuZCBpbWFnZXJ5IEFQSXMsIHdpdGggYSBmcmVl
IGRldmVsb3BlciBzdWJzY3JpcHRpb24gdGllciwgYm9hc3RpbmcgZGV0YWls
ZWQgZG9jdW1lbnRhdGlvbiBmb3Igc2ltcGxlIHRvIGFkdmFuY2VkIHF1ZXJp
ZXMsIGZyZWUgU0RLcyBhbmQgYSBNYXAgQnVpbGRlciB0byBnZXQgeW91IHVw
IGFuZCBydW5uaW5nIGZhc3Rlci4KLSBbRm9yZWNhc3RdKGh0dHBzOi8vZGFy
a3NreS5uZXQvZGV2L2RvY3MpIC0gVGhlIHNhbWUgQVBJIHRoYXQgcG93ZXJz
IEZvcmVjYXN0LmlvIGFuZCBEYXJrIFNreSBmb3IgaU9TLgotIFtPcGVuIFdl
YXRoZXJdKGh0dHA6Ly9vcGVud2VhdGhlcm1hcC5vcmcvYXBpKSAtIEFjY2Vz
cyBjdXJyZW50IHdlYXRoZXIgZGF0YSBmb3IgYW55IGxvY2F0aW9uIG9uIEVh
cnRoIGluY2x1ZGluZyBvdmVyIDIwMCwwMDAgY2l0aWVzIQotIFtTdG9ybSBH
bGFzcyBNYXJpbmUgV2VhdGhlciBBUEldKGh0dHBzOi8vc3Rvcm1nbGFzcy5p
bykgLSBHbG9iYWwgbWFyaW5lIHdlYXRoZXIgZGF0YSBmcm9tIG11bHRpcGxl
IHNvdXJjZXMgaW4gb25lIHNpbmdsZSBBUEkhCi0gW1dlYXRoZXJiaXRdKGh0
dHBzOi8vd3d3LndlYXRoZXJiaXQuaW8vYXBpKSAtIEFjY2VzcyBmb3JlY2Fz
dHMsIGN1cnJlbnQgd2VhdGhlciwgYW5kIGhpc3RvcmljYWwgd2VhdGhlciBk
YXRhIGZvciBhbnkgcG9pbnQgb24gdGhlIEVhcnRoIQotIFtXZWF0aGVyIFNv
dXJjZV0oaHR0cDovL3dlYXRoZXJzb3VyY2UuY29tL3dlYXRoZXItYXBpKSAt
IFBvd2VyZnVsIFdlYXRoZXIgQVBJIGJ1aWx0IGZvciBzeXN0ZW1zIHRoYXQg
ZGVtYW5kIHNwZWVkLCByZWxpYWJpbGl0eSBhbmQgaGVhdnkgbG9hZC4KLSBb
V3VuZGVyZ3JvdW5kIEFQSV0oaHR0cHM6Ly93d3cud3VuZGVyZ3JvdW5kLmNv
bS93ZWF0aGVyL2FwaS8pIC0gUmVsaWFibGUgZGF0YSwgYWNjdXJhdGUgZm9y
ZWNhc3QsICYgZ2xvYmFsIGNvdmVyYWdlIGluIDgwIGxhbmd1YWdlcy4KLSBb
WWFob28gV2VhdGhlciBBUEldKGh0dHBzOi8vZGV2ZWxvcGVyLnlhaG9vLmNv
bS93ZWF0aGVyLykgLSBHZXQgdXAtdG8tZGF0ZSBpbmZvcm1hdGlvbiBmb3Ig
YW55IGxvY2F0aW9uLCBpbmNsdWRpbmcgNS1kYXkgZm9yZWNhc3QsIHdpbmQs
IGF0bW9zcGhlcmUsIGFzdHJvbm9teSBjb25kaXRpb25zLCBhbmQgbW9yZS4K
CiMjIyBDcmVkaXRzCgotIFtDb21wdXRlciBTY2llbmNlIFpvbmVdKGh0dHA6
Ly93d3cuY29tcHV0ZXJzY2llbmNlem9uZS5vcmcvNTAtbW9zdC11c2VmdWwt
YXBpcy1mb3ItZGV2ZWxvcGVycy8pCi0gW0xvdWlzIERvcnJhZF0oaHR0cDov
L3d3dy5sb3Vpc2RvcmFyZC5jb20vYmxvZy9tYWNoaW5lLWxlYXJuaW5nLWFw
aXMtY29tcGFyaXNvbikKLSBbTXVzaWMgTWFjaGluZXJ5XShodHRwczovL211
c2ljbWFjaGluZXJ5LmNvbS9tdXNpYy1hcGlzLykKLSBbTmV3U3RhY2tdKGh0
dHA6Ly90aGVuZXdzdGFjay5pby90aGUtZGlmZmVyZW50LWZsYXZvcnMtb2Yt
aW90LWFwaXMvKQoKIyMjIFJlc291cmNlcyBGb3IgRGVzaWduIGFuZCBEaXNj
b3Zlcnkgb2YgQVBJcwoKLSBbQXBpYXJ5XShodHRwczovL2FwaWFyeS5pby8p
IC0gQ29sbGFib3JhdGl2ZSB0b29sIHRvIGRlc2lnbiBBUElzLiDwn5K4Ci0g
W09wZW5BUEldKGh0dHBzOi8vd3d3Lm9wZW5hcGlzLm9yZykgLSBTdGFuZGFy
ZCwgbGFuZ3VhZ2UtYWdub3N0aWMgaW50ZXJmYWNlIHRvIFJFU1QgQVBJcyAo
YmFzZWQgb24gW1N3YWdnZXJdKGh0dHA6Ly9zd2FnZ2VyLmlvLykpLiAhW09w
ZW4gU291cmNlXShodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20v
YWJoaXNoZWtiYW50aGlhL1B1YmxpYy1BUElzL21hc3Rlci9vcGVuc291cmNl
LnBuZyAiT3BlbiBTb3VyY2UiKQotIFtTd2FnZ2VyXShodHRwOi8vc3dhZ2dl
ci5pby8pIC0gVG9vbHMgZm9yIGRlc2lnbmluZywgYnVpbGRpbmcsIGFuZCBk
b2N1bWVudGluZyBSRVNUZnVsIEFQSXMuICFbT3BlbiBTb3VyY2VdKGh0dHBz
Oi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9hYmhpc2hla2JhbnRoaWEv
UHVibGljLUFQSXMvbWFzdGVyL29wZW5zb3VyY2UucG5nICJPcGVuIFNvdXJj
ZSIpCgojIyMgTW9yZSBSZXNvdXJjZXMKCi0gW0FQSXMuZ3VydV0oaHR0cHM6
Ly9hcGlzLmd1cnUvKQotIFtNb3JlIEF3ZXNvbWUgQVBJc10oaHR0cHM6Ly9n
aXRodWIuY29tL0tpa29iZWF0cy9hd2Vzb21lLWFwaSkKLSBbUHJvZ3JhbW1h
YmxlIFdlYl0oaHR0cHM6Ly93d3cucHJvZ3JhbW1hYmxld2ViLmNvbS9hcGlz
L2RpcmVjdG9yeSkKLSBbUG9zdG1hbiBBUEkgVG9vbHNdKGh0dHBzOi8vd3d3
LmdldHBvc3RtYW4uY29tL2RvY3MvcG9zdG1hbi9wb3N0bWFuX2FwaS9pbnRy
b19hcGkpCgojIyMgQ29udHJpYnV0aW9ucwoKUHVsbCByZXF1ZXN0cyBhcmUg
d2VsY29tZS4gUGxlYXNlIGFkaGVyZSB0byB0aGUgW2d1aWRlbGluZXNdKGh0
dHBzOi8vZ2l0aHViLmNvbS9hYmhpc2hla2JhbnRoaWEvUHVibGljLUFQSXMv
YmxvYi9tYXN0ZXIvQ09OVFJJQlVUSU5HLm1kKS4KCiMgTGljZW5zZQoKPGEg
cmVsPSJsaWNlbnNlIiBocmVmPSJodHRwczovL2NyZWF0aXZlY29tbW9ucy5v
cmcvbGljZW5zZXMvYnktbmMtc2EvNC4wLyI+PGltZyBhbHQ9IkNyZWF0aXZl
IENvbW1vbnMgTGljZW5zZSIgc3R5bGU9ImJvcmRlci13aWR0aDowIiBzcmM9
Imh0dHBzOi8vbGljZW5zZWJ1dHRvbnMubmV0L2wvYnktbmMtc2EvNC4wLzg4
eDMxLnBuZyIgLz48L2E+PGJyIC8+VGhpcyB3b3JrIGlzIGxpY2Vuc2VkIHVu
ZGVyIGEgPGEgcmVsPSJsaWNlbnNlIiBocmVmPSJodHRwczovL2NyZWF0aXZl
Y29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMtc2EvNC4wLyI+Q3JlYXRpdmUg
Q29tbW9ucyBBdHRyaWJ1dGlvbi1Ob25Db21tZXJjaWFsLVNoYXJlQWxpa2Ug
NC4wIEludGVybmF0aW9uYWwgTGljZW5zZTwvYT4uCg==
",,13891,"bGFuZ3VhZ2U6IHJ1YnkKCnJ2bToKICAtIDIuMgoKYmVmb3JlX3NjcmlwdDoK
ICAtIGdlbSBpbnN0YWxsIGF3ZXNvbWVfYm90CgpzY3JpcHQ6Ci0gYXdlc29t
ZV9ib3QgUkVBRE1FLm1kIC0tYWxsb3ctZHVwZSAtLWFsbG93LXJlZGlyZWN0
IC0tYWxsb3ctc3NsIC0tYWxsb3ctdGltZW91dCAtLWFsbG93IDk5OSw0MDMs
NDA1LDUwMCw1MDMsNTIyCg==
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
