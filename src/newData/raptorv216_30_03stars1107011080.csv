name,id,description,language,open_issues,stargazers_count,topics,subscribers_count,fork,forks_url,readme,config,watch,travis0,travis1,travis2,travis3,travis4,travis5,travis6,travis7,travis8,travis9,travis10,travis11,travis12,travis13,travis14,travis15,travis16,travis17,travis18,travis19,travis20,travis21,travis22,travis23,gitlab0,gitlab1,gitlab2,gitlab3,gitlab4,gitlab5,gitlab6,gitlab7,gitlab8,gitlab9,gitlab10,gitlab11,gitlab12,gitlab13,gitlab14,gitlab15,gitlab16,gitlab17,gitlab18,gitlab19,gitlab20,gitlab21,gitlab22,gitlab23,jenkinsPipeline0,jenkinsPipeline1,jenkinsPipeline2,jenkinsPipeline3,jenkinsPipeline4,jenkinsPipeline5,jenkinsPipeline6,jenkinsPipeline7,jenkinsPipeline8,jenkinsPipeline9,jenkinsPipeline10,jenkinsPipeline11,jenkinsPipeline12,jenkinsPipeline13,jenkinsPipeline14,jenkinsPipeline15,jenkinsPipeline16,jenkinsPipeline17,jenkinsPipeline18,jenkinsPipeline19,jenkinsPipeline20,jenkinsPipeline21,jenkinsPipeline22,jenkinsPipeline23,cirrus0,cirrus1,cirrus2,cirrus3,cirrus4,cirrus5,cirrus6,cirrus7,cirrus8,cirrus9,cirrus10,cirrus11,cirrus12,cirrus13,cirrus14,cirrus15,cirrus16,cirrus17,cirrus18,cirrus19,cirrus20,cirrus21,cirrus22,cirrus23,github0,github1,github2,github3,github4,github5,github6,github7,github8,github9,github10,github11,github12,github13,github14,github15,github16,github17,github18,github19,github20,github21,github22,github23,cds0,cds1,cds2,cds3,cds4,cds5,cds6,cds7,cds8,cds9,cds10,cds11,cds12,cds13,cds14,cds15,cds16,cds17,cds18,cds19,cds20,cds21,cds22,cds23,azure0,azure1,azure2,azure3,azure4,azure5,azure6,azure7,azure8,azure9,azure10,azure11,azure12,azure13,azure14,azure15,azure16,azure17,azure18,azure19,azure20,azure21,azure22,azure23,circleci0,circleci1,circleci2,circleci3,circleci4,circleci5,circleci6,circleci7,circleci8,circleci9,circleci10,circleci11,circleci12,circleci13,circleci14,circleci15,circleci16,circleci17,circleci18,circleci19,circleci20,circleci21,circleci22,circleci23
b'electron-vue',58616946,"b'An Electron & Vue.js quick start boilerplate with vue-cli scaffolding, common Vue plugins, electron-packager/electron-builder, unit/e2e testing, vue-devtools, and webpack.'",b'JavaScript',216,11077,,246,False,b'https://api.github.com/repos/SimulatedGREG/electron-vue/forks',"PGRpdiBhbGlnbj0iY2VudGVyIj4KPGJyPgo8aW1nIHdpZHRoPSI1MDAiIHNy
Yz0iL2RvY3MvaW1hZ2VzL2xvZ28ucG5nIiBhbHQ9ImVsZWN0cm9uLXZ1ZSI+
Cjxicj4KPGJyPgo8L2Rpdj4KCjxwIGFsaWduPSJjZW50ZXIiIGNvbG9yPSIj
NmE3MzdkIj4KVGhlIGJvaWxlcnBsYXRlIGZvciBtYWtpbmcgZWxlY3Ryb24g
YXBwbGljYXRpb25zIGJ1aWx0IHdpdGggdnVlIChwcmV0dHkgbXVjaCB3aGF0
IGl0IHNvdW5kcyBsaWtlKS4KPC9wPgoKPGRpdiBhbGlnbj0iY2VudGVyIj4K
ClshW2ZvcnRoZWJhZGdlXShodHRwOi8vZm9ydGhlYmFkZ2UuY29tL2ltYWdl
cy9iYWRnZXMvYnVpbHQtd2l0aC1sb3ZlLnN2ZyldKGh0dHA6Ly9mb3J0aGVi
YWRnZS5jb20pIFshW2ZvcnRoZWJhZGdlXShodHRwOi8vZm9ydGhlYmFkZ2Uu
Y29tL2ltYWdlcy9iYWRnZXMvdXNlcy1qcy5zdmcpXShodHRwOi8vZm9ydGhl
YmFkZ2UuY29tKSBbIVtmb3J0aGViYWRnZV0oaHR0cDovL2ZvcnRoZWJhZGdl
LmNvbS9pbWFnZXMvYmFkZ2VzL21ha2VzLXBlb3BsZS1zbWlsZS5zdmcpXSho
dHRwOi8vZm9ydGhlYmFkZ2UuY29tKQo8L2Rpdj4KCjxkaXYgYWxpZ249ImNl
bnRlciI+CgpbIVtqcy1zdGFuZGFyZC1zdHlsZV0oaHR0cHM6Ly9jZG4ucmF3
Z2l0LmNvbS9mZXJvc3Mvc3RhbmRhcmQvbWFzdGVyL2JhZGdlLnN2ZyldKGh0
dHBzOi8vZ2l0aHViLmNvbS9mZXJvc3Mvc3RhbmRhcmQpCgpbIVtCdWlsZCBT
dGF0dXNdKGh0dHBzOi8vc2VtYXBob3JlY2kuY29tL2FwaS92MS9zaW11bGF0
ZWRncmVnL2VsZWN0cm9uLXZ1ZS9icmFuY2hlcy9tYXN0ZXIvYmFkZ2Uuc3Zn
KV0oaHR0cHM6Ly9zZW1hcGhvcmVjaS5jb20vc2ltdWxhdGVkZ3JlZy9lbGVj
dHJvbi12dWUpCjwvZGl2PgoKIyMgT3ZlcnZpZXcKClRoZSBhaW0gb2YgdGhp
cyBwcm9qZWN0IGlzIHRvIHJlbW92ZSB0aGUgbmVlZCBvZiBtYW51YWxseSBz
ZXR0aW5nIHVwIGVsZWN0cm9uIGFwcHMgdXNpbmcgdnVlLiBlbGVjdHJvbi12
dWUgdGFrZXMgYWR2YW50YWdlIG9mIGB2dWUtY2xpYCBmb3Igc2NhZmZvbGRp
bmcsIGB3ZWJwYWNrYCB3aXRoIGB2dWUtbG9hZGVyYCwgYGVsZWN0cm9uLXBh
Y2thZ2VyYCBvciBgZWxlY3Ryb24tYnVpbGRlcmAsIGFuZCBzb21lIG9mIHRo
ZSBtb3N0IHVzZWQgcGx1Z2lucyBsaWtlIGB2dWUtcm91dGVyYCwgYHZ1ZXhg
LCBhbmQgc28gbXVjaCBtb3JlLgoKIyMjIyBDaGVjayBvdXQgdGhlIGRldGFp
bGVkIGRvY3VtZW50YXRpb24gW2hlcmVdKGh0dHBzOi8vc2ltdWxhdGVkZ3Jl
Zy5naXRib29rcy5pby9lbGVjdHJvbi12dWUvY29udGVudC9pbmRleC5odG1s
KS4KClRoaW5ncyB5b3UnbGwgZmluZCBpbiB0aGlzIGJvaWxlcnBsYXRlLi4u
CgoqIEJhc2ljIHByb2plY3Qgc3RydWN0dXJlIHdpdGggYSAqKnNpbmdsZSoq
IGBwYWNrYWdlLmpzb25gIHNldHVwCiogRGV0YWlsZWQgW2RvY3VtZW50YXRp
b25dKGh0dHBzOi8vc2ltdWxhdGVkZ3JlZy5naXRib29rcy5pby9lbGVjdHJv
bi12dWUvY29udGVudC8pCiogUHJvamVjdCBzY2FmZm9sZGluZyB1c2luZyBb
dnVlLWNsaV0oaHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3Z1ZS1jbGkpCiog
UmVhZHkgdG8gdXNlIFZ1ZSBwbHVnaW5zIFwoW2F4aW9zXShodHRwczovL2dp
dGh1Yi5jb20vbXphYnJpc2tpZS9heGlvcyksIFt2dWUtZWxlY3Ryb25dKGh0
dHBzOi8vZ2l0aHViLmNvbS9TaW11bGF0ZWRHUkVHL3Z1ZS1lbGVjdHJvbiks
IFt2dWUtcm91dGVyXShodHRwczovL2dpdGh1Yi5jb20vdnVlanMvdnVlLXJv
dXRlciksIFt2dWV4XShodHRwczovL2dpdGh1Yi5jb20vdnVlanMvdnVleClc
KVwqCiogSW5zdGFsbGVkIFt2dWUtZGV2dG9vbHNdKGh0dHBzOi8vZ2l0aHVi
LmNvbS92dWVqcy92dWUtZGV2dG9vbHMpIGFuZCBbZGV2dHJvbl0oaHR0cHM6
Ly9naXRodWIuY29tL2VsZWN0cm9uL2RldnRyb24pIHRvb2xzIGZvciBkZXZl
bG9wbWVudAoqIEFiaWxpdHkgdG8gZWFzaWx5IHBhY2thZ2UgeW91ciBlbGVj
dHJvbiBhcHAgdXNpbmcgW2VsZWN0cm9uLXBhY2thZ2VyXShodHRwczovL2dp
dGh1Yi5jb20vZWxlY3Ryb24tdXNlcmxhbmQvZWxlY3Ryb24tcGFja2FnZXIp
IG9yIFtlbGVjdHJvbi1idWlsZGVyXShodHRwczovL2dpdGh1Yi5jb20vZWxl
Y3Ryb24tdXNlcmxhbmQvZWxlY3Ryb24tYnVpbGRlcilcKgoqIGBhcHB2ZXlv
ci55bWxgIGFuZCBgLnRyYXZpcy55bWxgIGNvbmZpZ3VyYXRpb25zIGZvciBh
dXRvbWF0ZWQgZGVwbG95bWVudHMgd2l0aCBbZWxlY3Ryb24tYnVpbGRlcl0o
aHR0cHM6Ly9naXRodWIuY29tL2VsZWN0cm9uLXVzZXJsYW5kL2VsZWN0cm9u
LWJ1aWxkZXIpXCoKKiBBYmlsaXR5IHRvIHByb2R1Y2Ugd2ViIG91dHB1dCBm
b3IgYnJvd3NlcnMKKiBIYW5keSBbTlBNIHNjcmlwdHNdKGh0dHBzOi8vc2lt
dWxhdGVkZ3JlZy5naXRib29rcy5pby9lbGVjdHJvbi12dWUvY29udGVudC9l
bi9ucG1fc2NyaXB0cy5odG1sKQoqIFVzZSBvZiBbd2VicGFja10oaHR0cHM6
Ly9naXRodWIuY29tL3dlYnBhY2svd2VicGFjaykgYW5kIFt2dWUtbG9hZGVy
XShodHRwczovL2dpdGh1Yi5jb20vdnVlanMvdnVlLWxvYWRlcikgd2l0aCBI
b3QgTW9kdWxlIFJlcGxhY2VtZW50CiogUHJvY2VzcyByZXN0YXJ0aW5nIHdo
ZW4gd29ya2luZyBpbiBtYWluIHByb2Nlc3MKKiBIVE1ML0NTUy9KUyBwcmUt
cHJvY2Vzc29yIHN1cHBvcnQgd2l0aCBbdnVlLWxvYWRlcl0oaHR0cHM6Ly9n
aXRodWIuY29tL3Z1ZWpzL3Z1ZS1sb2FkZXIvKQoqIEVTNiB3aXRoIFtgc3Rh
Z2UtMGBdKGh0dHBzOi8vYmFiZWxqcy5pby9kb2NzL3BsdWdpbnMvcHJlc2V0
LXN0YWdlLTAvKSBieSBkZWZhdWx0CiogVXNlIG9mIFtgYmFiaWxpYF0oaHR0
cHM6Ly9naXRodWIuY29tL2JhYmVsL2JhYmlsaSkgdG8gcmVtb3ZlIHRoZSBu
ZWVkIG9mIHRyYW5zcGlsaW5nIGNvbXBsZXRlbHkgZG93biB0byBFUzUKKiBF
U0xpbnQgXCh3aXRoIHN1cHBvcnQgZm9yIFtgc3RhbmRhcmRgXShodHRwczov
L2dpdGh1Yi5jb20vZmVyb3NzL3N0YW5kYXJkKSBhbmQgW2BhaXJibmItYmFz
ZWBdKGh0dHBzOi8vZ2l0aHViLmNvbS9haXJibmIvamF2YXNjcmlwdClcKVwq
CiogVW5pdCBUZXN0aW5nIFwod2l0aCBLYXJtYSArIE1vY2hhXClcKgoqIEVu
ZC10by1lbmQgVGVzdGluZyBcKHdpdGggU3BlY3Ryb24gKyBNb2NoYVwpXCoK
ClwqQ3VzdG9taXphYmxlIGR1cmluZyB2dWUtY2xpIHNjYWZmb2xkaW5nCgoj
IyMgR2V0dGluZyBTdGFydGVkCgpUaGlzIGJvaWxlcnBsYXRlIHdhcyBidWls
dCBhcyBhIHRlbXBsYXRlIGZvciBbdnVlLWNsaV0oaHR0cHM6Ly9naXRodWIu
Y29tL3Z1ZWpzL3Z1ZS1jbGkpIGFuZCBpbmNsdWRlcyBvcHRpb25zIHRvIGN1
c3RvbWl6ZSB5b3VyIGZpbmFsIHNjYWZmb2xkZWQgYXBwLiBUaGUgdXNlIG9m
IGBub2RlQF43YCBvciBoaWdoZXIgcmVxdWlyZWQuIGVsZWN0cm9uLXZ1ZSBh
bHNvIG9mZmljaWFsbHkgcmVjb21tZW5kcyB0aGUgW2B5YXJuYF0oaHR0cHM6
Ly95YXJucGtnLm9yZykgcGFja2FnZSBtYW5hZ2VyIGFzIGl0IGhhbmRsZXMg
ZGVwZW5kZW5jaWVzIG11Y2ggYmV0dGVyIGFuZCBjYW4gaGVscCByZWR1Y2Ug
ZmluYWwgYnVpbGQgc2l6ZSB3aXRoIGB5YXJuIGNsZWFuYC4KCmBgYGJhc2gK
IyBJbnN0YWxsIHZ1ZS1jbGkgYW5kIHNjYWZmb2xkIGJvaWxlcnBsYXRlCm5w
bSBpbnN0YWxsIC1nIHZ1ZS1jbGkKdnVlIGluaXQgc2ltdWxhdGVkZ3JlZy9l
bGVjdHJvbi12dWUgbXktcHJvamVjdAoKIyBJbnN0YWxsIGRlcGVuZGVuY2ll
cyBhbmQgcnVuIHlvdXIgYXBwCmNkIG15LXByb2plY3QKeWFybiAjIG9yIG5w
bSBpbnN0YWxsCnlhcm4gcnVuIGRldiAjIG9yIG5wbSBydW4gZGV2CmBgYAoK
IyMjIyMgQXJlIHlvdSBhIFdpbmRvd3MgVXNlcj8KCk1ha2Ugc3VyZSB0byBj
aGVjayBvdXQgWyoqQSBOb3RlIGZvciBXaW5kb3dzIFVzZXJzKipdKGh0dHBz
Oi8vc2ltdWxhdGVkZ3JlZy5naXRib29rcy5pby9lbGVjdHJvbi12dWUvY29u
dGVudC9lbi9nZXR0aW5nX3N0YXJ0ZWQuaHRtbCNhLW5vdGUtZm9yLXdpbmRv
d3MtdXNlcnMpIHRvIG1ha2Ugc3VyZSB5b3UgaGF2ZSBhbGwgdGhlIG5lY2Vz
c2FyeSBidWlsZCB0b29scyBuZWVkZWQgZm9yIGVsZWN0cm9uIGFuZCBvdGhl
ciBkZXBlbmRlbmNpZXMuCgojIyMjIyBXYW50aW5nIHRvIHVzZSBWdWUgMT8K
Ckp1c3QgcG9pbnQgdG8gdGhlIGAxLjBgIGJyYW5jaC4gUGxlYXNlIG5vdGUg
dGhhdCBlbGVjdHJvbi12dWUgaGFzIG9mZmljaWFsbHkgZGVwcmVjYXRlZCB0
aGUgdXNhZ2Ugb2YgYHZ1ZUBeMWAsIHNvIHByb2plY3Qgc3RydWN0dXJlLCBm
ZWF0dXJlcywgYW5kIGRvY3VtZW50YXRpb24gd2lsbCByZWZsZWN0IHRob3Nl
IGNoYW5nZXMgKFsqKmxlZ2FjeSBkb2N1bWVudGF0aW9uKipdKGh0dHBzOi8v
Z2l0aHViLmNvbS9TaW11bGF0ZWRHUkVHL2VsZWN0cm9uLXZ1ZS90cmVlLzEu
MC9kb2NzKSkuCgpgYGBiYXNoCnZ1ZSBpbml0IHNpbXVsYXRlZGdyZWcvZWxl
Y3Ryb24tdnVlIzEuMCBteS1wcm9qZWN0CmBgYAoKIyMjIE5leHQgU3RlcHMK
Ck1ha2Ugc3VyZSB0byB0YWtlIGEgbG9vayBhdCB0aGUgW2RvY3VtZW50YXRp
b25dKGh0dHBzOi8vc2ltdWxhdGVkZ3JlZy5naXRib29rcy5pby9lbGVjdHJv
bi12dWUvY29udGVudC8pLiBIZXJlIHlvdSB3aWxsIGZpbmQgdXNlZnVsIGlu
Zm9ybWF0aW9uIGFib3V0IGNvbmZpZ3VyYXRpb24sIHByb2plY3Qgc3RydWN0
dXJlLCBhbmQgYnVpbGRpbmcgeW91ciBhcHAuIFRoZXJlJ3MgYWxzbyBhIGhh
bmR5IFtGQVFzXShodHRwczovL3NpbXVsYXRlZGdyZWcuZ2l0Ym9va3MuaW8v
ZWxlY3Ryb24tdnVlL2NvbnRlbnQvZW4vZmFxcy5odG1sKSBzZWN0aW9uLgoK
CiMjIE1hZGUgd2l0aCBlbGVjdHJvbi12dWUKVGFrZSBhIGxvb2sgYXQgc29t
ZSBvZiB0aGUgYW1hemluZyBwcm9qZWN0cyBidWlsdCB3aXRoIGVsZWN0cm9u
LXZ1ZS4gV2FudCB0byBoYXZlIHlvdXIgb3duIHByb2plY3QgbGlzdGVkPyBG
ZWVsIGZyZWUgYWRkIHlvdXIgcHJvamVjdCB0byB0aGUgYm90dG9tIG9mIHRo
ZSBsaXN0IGJlbG93IHRoZW4gc3VibWl0IGEgcHVsbCByZXF1ZXN0LgoKKiBb
KipTdXJmYmlyZCoqXShodHRwczovL2dpdGh1Yi5jb20vc3VyZmJpcmRhcHAv
c3VyZmJpcmQpOiBBIFR3aXR0ZXIgY2xpZW50IGJ1aWx0IG9uIEVsZWN0cm9u
IGFuZCBWdWUKKiBbKipMdWx1bWktYnJvd3NlcioqXShodHRwczovL2dpdGh1
Yi5jb20vcWF6Ym5tNDU2L2x1bHVtaS1icm93c2VyKTogTHVsdW1pLWJyb3dz
ZXIgaXMgYSBsaWdodCB3ZWlnaHQgYnJvd3NlciBjb2RlZCB3aXRoIFZ1ZS5q
cyAyIGFuZCBFbGVjdHJvbgoqIFsqKlNwYWNlLVNuYWtlKipdKGh0dHBzOi8v
Z2l0aHViLmNvbS9pbHlhZ3J1L1NwYWNlLVNuYWtlKTogQSBEZXNrdG9wIGdh
bWUgYnVpbHQgd2l0aCBFbGVjdHJvbiBhbmQgVnVlLmpzLgoqIFsqKkZvcnJl
c3QqKl0oaHR0cHM6Ly9naXRodWIuY29tL3N0ZWZhbmp1ZGlzL2ZvcnJlc3Qp
OiBBbiBucG0gc2NyaXB0cyBkZXNrdG9wIGNsaWVudAoqIFsqKm1paWt1bioq
XShodHRwczovL2dpdGh1Yi5jb20vaGlybzAyMTgvbWlpa3VuKTogQSBTaW1w
bGUgTWFya2Rvd24gRWRpdG9yCiogWyoqRGFraWthKipdKGh0dHBzOi8vZ2l0
aHViLmNvbS9yYWozNDcvRGFraWthKTogQSBtaW51dGUgdGFraW5nIGFwcGxp
Y2F0aW9uIHRoYXQgbWFrZXMgd3JpdGluZyBtaW51dGVzIGEgYnJlZXplCiog
WyoqRHluYW1vYyoqXShodHRwczovL2dpdGh1Yi5jb20vaWVpYXlhb2JiL2R5
bmFtb2MpOiBEeW5hbW9jIGlzIGEgR1VJIGNsaWVudCBmb3IgZHluYW1vZGIt
bG9jYWwsIGR5bmFsaXRlIGFuZCBBV1MgZHluYW1vZGIKKiBbKipEb2NrZXJv
bioqXShodHRwczovL2dpdGh1Yi5jb20vZG9ja2Vyb24vZG9ja2Vyb24pOiBB
IGRvY2tlcm9uIHByb2plY3QsIGJ1aWx0IG9uIEVsZWN0cm9uICsgVnVlLmpz
IGZvciBEb2NrZXIKKiBbKipFYXN5c3VicyoqXShodHRwczovL2dpdGh1Yi5j
b20vbWF0aWFzdHVjY2kvZWFzeXN1YnMpOiBEb3dubG9hZCBzdWJ0aXRsZXMg
aW4gYSB2ZXJ5IGZhc3QgYW5kIHNpbXBsZSB3YXkKKiBbKiphZG1pblNjaGVk
dWxlcioqXShodHRwczovL2dpdGh1Yi5jb20vZGFuaWVsdG9vcmFuaS9hZG1p
blNjaGVkdWxlcik6IEFuIGFwcGxpY2F0aW9uIGxldmVyYWdpbmcgZWxlY3Ry
b24gZm9yIGNyb3NzIHBsYXRmb3JtIGNvbXBhdGliaWxpdHksIFZ1ZS5qcyBm
b3IgbGlnaHRuaW5nIGZhc3QgVUkgYW5kIGZ1bGwtY2FsZW5kYXIuaW8gdG8g
ZGVsaXZlciBhIHByZW1pdW0gY2FsZW5kYXIgaW50ZXJmYWNlLgoqIFsqKkJh
Y2tsb2cqKl0oaHR0cHM6Ly9naXRodWIuY29tL2N6eXRlbG55L2JhY2tsb2cp
OiBTaW1wbGUgYXBwIGZvciBzdG9yaW5nIFRPRE9zLCBpZGVhcyBvciBiYWNr
bG9nIGl0ZW1zLiBZb3UgY2FuIG9yZ2FuaXplIHRoZW0gd2l0aCBib2FyZHMu
IFNsZWVrIGZsb3cuIEJ1aWx0IHdpdGggRWxlY3Ryb24gKyBWdWUuanMgKyBp
VmlldwoqIFsqKk9wc2hlbGwqKl0oaHR0cHM6Ly9naXRodWIuY29tL3JpY2t0
YmFrZXIvb3BzaGVsbCk6IE9wcyB0b29sIHRvIG1ha2UgbGlmZSBlYXNpZXIg
d29ya2luZyB3aXRoIEFXUyBpbnN0YW5jZXMuCiogWyoqR2l0SG9hcmQqKl0o
aHR0cHM6Ly9naXRodWIuY29tL2pvam9ieXRlL2dpdGhvYXJkKTogSG9hcmQg
Z2l0IHJlcG9zaXRvcmllcyB3aXRoIGVhc2UuCiogWyoqRGF0YS1jdXJhdG9y
KipdKGh0dHBzOi8vZ2l0aHViLmNvbS9PRElRdWVlbnNsYW5kL2RhdGEtY3Vy
YXRvcik6IFNoYXJlIHVzYWJsZSBvcGVuIGRhdGEuCiogWyoqQm9va21hcmsq
Kl0oaHR0cHM6Ly9naXRodWIuY29tL21yZ29kaGFuaS9ib29rbWFyayk6IERl
c2t0b3AgYXBwIHRvIG1hbmFnZSBib29rbWFya2VkIGxpbmtzIHVzaW5nIEF0
b20gRWxlY3Ryb24gYW5kIFZ1ZS5qcwoqIFsqKlViZXIgUnVuKipdKGh0dHBz
Oi8vZ2l0aHViLmNvbS9icmVhay1lbnRlci91YmVycnVuKTogU2ltcGxlIGF1
dG9tYXRpb24gZGVza3RvcCBhcHAgdG8gZG93bmxvYWQgYW5kIG9yZ2FuaXpl
IHlvdXIgdGF4IGludm9pY2VzIGZyb20gVWJlci4KKiBbKipOZXRzaXgqKl0o
aHR0cHM6Ly9naXRodWIuY29tL3B1bHNhcmRldi9uZXRzaXgpOiBTaGFyZSB2
aWRlb3Mgd2l0aCB5b3VyIGZyaWVuZHMgaW4gYSByZWFsIHBlZXItdG8tcGVl
ciBtYW5uZXIgdXNpbmcgV2ViUlRDLgoqIFsqKmNvZGUtbm90ZXMqKl0oaHR0
cHM6Ly9naXRodWIuY29tL2xhdXRoaWViL2NvZGUtbm90ZXMpOiBBIHNpbXBs
ZSBjb2RlIHNuaXBwZXQgbWFuYWdlciBmb3IgZGV2ZWxvcGVycyBidWlsdCB3
aXRoIEVsZWN0cm9uICYgVnVlLmpzLgoqIFsqKlBvbW90cm9pZCoqXShodHRw
czovL2dpdGh1Yi5jb20vU3Bsb2RlL3BvbW90cm9pZCk6IEEgc2ltcGxlIGFu
ZCB2aXN1YWxseS1wbGVhc2luZyBQb21vZG9ybyB0aW1lcgoqIFsqKk1hcmtU
ZXh0KipdKGh0dHBzOi8vZ2l0aHViLmNvbS9tYXJrdGV4dC9tYXJrdGV4dCk6
IE1hcmsgVGV4dCBpcyBhIHJlYWx0aW1lIE1hcmtkb3duIEVkaXRvci4KKiBb
Kip2dWUtZGVzaWduKipdKGh0dHBzOi8vZ2l0aHViLmNvbS9MLUNocmlzL3Z1
ZS1kZXNpZ24pOiB0aGUgYmVzdCB3ZWJzaXRlIHZpc3VhbGl6YXRpb24gYnVp
bGRlciB3aXRoIFZ1ZSBhbmQgRWxlY3Ryb24KKiBbKipJbWFwU3luYyBDbGll
bnQqKl0oaHR0cHM6Ly9naXRodWIuY29tL3JpZGFhbWlyaW5pL0ltYXBTeW5j
Q2xpZW50KTogSXQncyBvbmx5IGFuIEludGVybmV0IE1lc3NhZ2UgQWNjZXNz
IFByb3RvY29sIFN5bmNocm9uaXphdGlvbiBDbGllbnQKKiBbKipIdmUqKl0o
aHR0cHM6Ly9naXRodWIuY29tL2hlbGxvaHZlL2h2ZSk6IEEgc3RhdGljIGJs
b2cgY2xpZW50IHRvb2wgeW91IG1heSBsaWtlLgoqIFsqKk1hcmtkb3duRm94
KipdKGh0dHBzOi8vZ2l0aHViLmNvbS9seDRyL21hcmtkb3duZm94KTogQSBz
aW1wbGUgTWFya2Rvd24gdmlld2VyIHdpdGggYXV0byB1cGRhdGUgYW5kIFBE
RiBleHBvcnQuCiogWyoqU21hcnQgRE9DU0UqKl0oaHR0cHM6Ly9naXRodWIu
Y29tL3NoaXJzaGFrNTUvc21hcnQtZG9jc2UpOiBBIGdlbmVyaWMgYXBwIHdo
aWNoIGFiaWxpdHkgdG8gZGlzcGxheSBuZXdzLCBjb250YWN0IGV0Yy4KKiBb
KipDbGVhdmVyKipdKGh0dHBzOi8vZ2V0Y2xlYXZlci5jb20vKTogQ2xlYXZl
ciBoZWxwcyB5b3UgcHJvdmlzaW9uIHNlcnZlcnMgcmVhZHkgZm9yIGRlcGxv
eWluZyB5b3VyIHdlYiBhcHBzIHdpdGggemVybyBkb3dudGltZSAtIGZvciBm
cmVlIQoqIFsqKlhQYW5lbCoqXShodHRwczovL2dpdGh1Yi5jb20va3J1c3Ru
aWMveHBhbmVsKTogWEFNUFAgY29udHJvbCBwYW5lbCBhbHRlcm5hdGl2ZSBi
dWlsdCB3aXRoIEVsZWN0cm9uICYgVnVlLmpzCiogWyoqSGV4by1DbGllbnQq
Kl0oaHR0cHM6Ly9naXRodWIuY29tL2dhb3lvdWJvL2hleG8tY2xpZW50KTog
QSBoZXhvIGNsaWVudCBwb3dlcmVkIGJ5IGVsZWN0cm9uLXZ1ZS4KKiBbKipZ
VC5Eb3dubG9hZGVyKipdKGh0dHBzOi8vZ2l0aHViLmNvbS9teWF6YXJjL3l0
ZG93bmxvYWRlcik6IFlvdXR1YmUgVmlkZW8gRG93bmxvYWRlciZDb252ZXJ0
ZXIgYW5kIFBsYXkgTXVzaWMsIGJ1aWx0IHdpdGggRWxlY3Ryb24gJiBWdWUu
anMuCiogWyoqQk1Gb250LUpTKipdKGh0dHBzOi8vZ2l0aHViLmNvbS9lbGlz
YWRheS9ibWZvbnQtanMpOiBCTUZvbnQtanMgaXMgYSBiaXRtYXAgZm9udCBn
ZW5lcmF0b3IsIGJ1aWx0IHdpdGggRWxlY3Ryb24gJiBWdWUuanMuCiogWyoq
WW91R2V0KipdKGh0dHBzOi8vZ2l0aHViLmNvbS9haG1ldHpleWJlay9Zb3VH
ZXQpOiBZb3VHZXQgLSBZb3VUdWJlIFZpZGVvL1BsYXlsaXN0IERvd25sb2Fk
ZXIvQ3V0dGVyIC0gTVAzIENvbnZlcnRlcgoqIFsqKkFzYXIgVUkqKl0oaHR0
cHM6Ly9naXRodWIuY29tL215YXphcmMvQXNhclVJKTogVUkgZm9yIEFzYXIg
UGFjaywgYnVpbHQgd2l0aCBFbGVjdHJvbiAmIFZ1ZS5qcy4K
",,11077,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
b'paper.js',1338813,"b'The Swiss Army Knife of Vector Graphics Scripting \xe2\x80\x93 Scriptographer ported to JavaScript and the browser, using HTML5 Canvas. Created by @lehni & @puckey'",b'JavaScript',227,11070,,425,False,b'https://api.github.com/repos/paperjs/paper.js/forks',"IyBQYXBlci5qcyAtIFRoZSBTd2lzcyBBcm15IEtuaWZlIG9mIFZlY3RvciBH
cmFwaGljcyBTY3JpcHRpbmcgWyFbQnVpbGQgU3RhdHVzXShodHRwczovL3Ry
YXZpcy1jaS5vcmcvcGFwZXJqcy9wYXBlci5qcy5zdmc/YnJhbmNoPWRldmVs
b3ApXShodHRwczovL3RyYXZpcy1jaS5vcmcvcGFwZXJqcy9wYXBlci5qcykg
WyFbTlBNXShodHRwczovL2ltZy5zaGllbGRzLmlvL25wbS92L3BhcGVyLnN2
ZyldKGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL3BhcGVyKQoKSWYg
eW91IHdhbnQgdG8gd29yayB3aXRoIFBhcGVyLmpzLCBzaW1wbHkgZG93bmxv
YWQgdGhlIGxhdGVzdCAic3RhYmxlIiB2ZXJzaW9uCmZyb20gW2h0dHA6Ly9w
YXBlcmpzLm9yZy9kb3dubG9hZC9dKGh0dHA6Ly9wYXBlcmpzLm9yZy9kb3du
bG9hZC8pCgotIFdlYnNpdGU6IDxodHRwOi8vcGFwZXJqcy5vcmcvPgotIFF1
ZXN0aW9uczogPGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25z
L3RhZ2dlZC9wYXBlcmpzPgotIERpc2N1c3Npb24gZm9ydW06IDxodHRwczov
L2dyb3Vwcy5nb29nbGUuY29tL2dyb3VwL3BhcGVyanM+Ci0gTWFpbmxpbmUg
c291cmNlIGNvZGU6IDxodHRwczovL2dpdGh1Yi5jb20vcGFwZXJqcy9wYXBl
ci5qcz4KLSBUd2l0dGVyOiBbQHBhcGVyanNdKGh0dHBzOi8vdHdpdHRlci5j
b20vcGFwZXJqcykKLSBMYXRlc3QgcmVsZWFzZXM6IDxodHRwOi8vcGFwZXJq
cy5vcmcvZG93bmxvYWQvPgotIFByZS1idWlsdCBkZXZlbG9wbWVudCB2ZXJz
aW9uczoKICBbYHByZWJ1aWx0L21vZHVsZWBdKGh0dHBzOi8vZ2l0aHViLmNv
bS9wYXBlcmpzL3BhcGVyLmpzL3RyZWUvcHJlYnVpbHQvbW9kdWxlKQogIGFu
ZCBbYHByZWJ1aWx0L2Rpc3RgXShodHRwczovL2dpdGh1Yi5jb20vcGFwZXJq
cy9wYXBlci5qcy90cmVlL3ByZWJ1aWx0L2Rpc3QpCiAgYnJhbmNoZXMuCgoj
IyBJbnN0YWxsaW5nIFBhcGVyLmpzCgpUaGUgcmVjb21tZW5kZWQgd2F5IHRv
IGluc3RhbGwgYW5kIG1haW50YWluIFBhcGVyLmpzIGFzIGEgZGVwZW5kZW5j
eSBpbiB5b3VyCnByb2plY3QgaXMgdGhyb3VnaCB0aGUgW05vZGUuanMgUGFj
a2FnZSBNYW5hZ2VyIChOUE0pXShodHRwczovL3d3dy5ucG1qcy5jb20vKQpm
b3IgYnJvd3NlcnMsIE5vZGUuanMgb3IgRWxlY3Ryb24uCgpJZiBOUE0gaXMg
YWxyZWFkeSBpbnN0YWxsZWQsIHNpbXBseSB0eXBlIG9uZSBvZiB0aGVzZSBj
b21tYW5kcyBpbiB5b3VyIHByb2plY3QKZm9sZGVyOgoKYGBgc2gKbnBtIGlu
c3RhbGwgcGFwZXIKYGBgCgpVcG9uIGV4ZWN1dGlvbiwgeW91IHdpbGwgZmlu
ZCBhIGBwYXBlcmAgZm9sZGVyIGluc2lkZSB0aGUgcHJvamVjdCdzCmBub2Rl
X21vZHVsZXNgIGZvbGRlci4KCkZvciBtb3JlIGluZm9ybWF0aW9uIG9uIGhv
dyB0byBpbnN0YWxsIE5vZGUuanMgYW5kIE5QTSwgcmVhZCB0aGUgY2hhcHRl
cgpbSW5zdGFsbGluZyBOb2RlLmpzIGFuZCBOUE1dKCNpbnN0YWxsaW5nLW5v
ZGVqcy1hbmQtbnBtKS4KCiMjIyBXaGljaCBWZXJzaW9uIHRvIFVzZQoKVGhl
IHZhcmlvdXMgZGlzdHJpYnV0aW9ucyBjb21lIHdpdGggdHdvIGRpZmZlcmVu
dCBwcmUtYnVpbGQgdmVyc2lvbnMgb2YKUGFwZXIuanMsIGluIG1pbmlmaWVk
IGFuZCBub3JtYWwgdmFyaWFudHM6CgotIGBwYXBlci1mdWxsLmpzYCDigJMg
VGhlIGZ1bGwgdmVyc2lvbiBmb3IgdGhlIGJyb3dzZXIsIGluY2x1ZGluZyBQ
YXBlclNjcmlwdAogIHN1cHBvcnQgYW5kIEFjb3JuLmpzCi0gYHBhcGVyLWNv
cmUuanNgIOKAkyBUaGUgY29yZSB2ZXJzaW9uIGZvciB0aGUgYnJvd3Nlciwg
d2l0aG91dCBQYXBlclNjcmlwdAogIHN1cHBvcnQgbm9yIEFjb3JuLmpzLiBZ
b3UgY2FuIHVzZSB0aGlzIHRvIHNoYXZlIG9mZiBzb21lIGJ5dGVzIGFuZCBj
b21waWxhdGlvbgogIHRpbWUgd2hlbiB3b3JraW5nIHdpdGggSmF2YVNjcmlw
dCBkaXJlY3RseS4KCiMjIyBJbnN0YWxsaW5nIE5vZGUuanMgYW5kIE5QTQoK
Tm9kZS5qcyBjb21lcyB3aXRoIHRoZSBOb2RlIFBhY2thZ2UgTWFuYWdlciAo
TlBNKS4gVGhlcmUgYXJlIG1hbnkgdHV0b3JpYWxzCmV4cGxhaW5pbmcgdGhl
IGRpZmZlcmVudCB3YXlzIHRvIGluc3RhbGwgTm9kZS5qcyBvbiBkaWZmZXJl
bnQgcGxhdGZvcm1zLiBJdCBpcwpnZW5lcmFsbHkgbm90IHJlY29tbWVuZGVk
IHRvIGluc3RhbGwgTm9kZS5qcyB0aHJvdWdoIE9TLXN1cHBsaWVkIHBhY2th
Z2UKbWFuYWdlcnMsIGFzIHRoZSBpdHMgZGV2ZWxvcG1lbnQgY3ljbGVzIG1v
dmUgZmFzdCBhbmQgdGhlc2UgdmVyc2lvbnMgYXJlIG9mdGVuCm91dC1vZi1k
YXRlLgoKT24gbWFjT1MsIFtIb21lYnJld10oaHR0cHM6Ly9icmV3LnNoLykg
aXMgYSBnb29kIG9wdGlvbiBpZiBvbmUgdmVyc2lvbiBvZgpOb2RlLmpzIHRo
YXQgaXMga2VwdCB1cCB0byBkYXRlIHdpdGggYGJyZXcgdXBncmFkZWAgaXMg
ZW5vdWdoOiAgCjxodHRwczovL3RyZWVob3VzZS5naXRodWIuaW8vaW5zdGFs
bGF0aW9uLWd1aWRlcy9tYWMvbm9kZS1tYWMuaHRtbD4KCltOVk1dKGh0dHBz
Oi8vZ2l0aHViLmNvbS9jcmVhdGlvbml4L252bSkgY2FuIGJlIHVzZWQgaW5z
dGVhZCB0byBpbnN0YWxsIGFuZAptYWludGFpbiBtdWx0aXBsZSB2ZXJzaW9u
cyBvZiBOb2RlLmpzIG9uIHRoZSBzYW1lIHBsYXRmb3JtLCBhcyBvZnRlbiBy
ZXF1aXJlZCBieQpkaWZmZXJlbnQgcHJvamVjdHM6ICAKPGh0dHBzOi8vbm9k
ZXNvdXJjZS5jb20vYmxvZy9pbnN0YWxsaW5nLW5vZGUtanMtdHV0b3JpYWwt
dXNpbmctbnZtLW9uLW1hYy1vcy14LWFuZC11YnVudHUvPgoKSG9tZWJyZXcg
aXMgcmVjb21tZW5kZWQgb24gbWFjT1MgYWxzbyBpZiB5b3UgaW50ZW5kIHRv
IGluc3RhbGwgUGFwZXIuanMgd2l0aApyZW5kZXJpbmcgdG8gdGhlIENhbnZh
cyBvbiBOb2RlLmpzLCBhcyBkZXNjcmliZWQgaW4gdGhlIG5leHQgcGFyYWdy
YXBoLgoKRm9yIExpbnV4LCBzZWUgPGh0dHBzOi8vbm9kZWpzLm9yZy9kb3du
bG9hZC8+IHRvIGxvY2F0ZSAzMi1iaXQgYW5kIDY0LWJpdCBOb2RlLmpzCmJp
bmFyaWVzIGFzIHdlbGwgYXMgc291cmNlcywgb3IgdXNlIE5WTSwgYXMgZGVz
Y3JpYmVkIGluIHRoZSBwYXJhZ3JhcGggYWJvdmUuCgojIyMgSW5zdGFsbGlu
ZyBQYXBlci5qcyBVc2luZyBOUE0KClBhcGVyLmpzIGNvbWVzIGluIHRocmVl
IGRpZmZlcmVudCB2ZXJzaW9ucyBvbiBOUE06IGBwYXBlcmAsIGBwYXBlci1q
c2RvbWAgYW5kCmBwYXBlci1qc2RvbS1jYW52YXNgLiBEZXBlbmRpbmcgb24g
eW91ciB1c2UgY2FzZSwgeW91IG5lZWQgdG8gcmVxdWlyZWQgYQpkaWZmZXJl
bnQgb25lOgoKLSBgcGFwZXJgIGlzIHRoZSBtYWluIGxpYnJhcnksIGFuZCBj
YW4gYmUgdXNlZCBkaXJlY3RseSBpbiBhIGJyb3dzZXIKICBjb250ZXh0LCBl
LmcuIGEgd2ViIGJyb3dzZXIgb3Igd29ya2VyLgotIGBwYXBlci1qc2RvbWAg
aXMgYSBzaGltIG1vZHVsZSBmb3IgTm9kZS5qcywgb2ZmZXJpbmcgaGVhZGxl
c3MgdXNlIHdpdGggU1ZHCiAgaW1wb3J0aW5nIGFuZCBleHBvcnRpbmcgdGhy
b3VnaCBbanNkb21dKGh0dHBzOi8vZ2l0aHViLmNvbS90bXB2YXIvanNkb20p
LgotIGBwYXBlci1qc2RvbS1jYW52YXNgIGlzIGEgc2hpbSBtb2R1bGUgZm9y
IE5vZGUuanMsIG9mZmVyaW5nIGNhbnZhcyByZW5kZXJpbmcKICB0aHJvdWdo
IFtOb2RlLUNhbnZhc10oaHR0cHM6Ly9naXRodWIuY29tL0F1dG9tYXR0aWMv
bm9kZS1jYW52YXMpIGFzIHdlbGwgYXMKICBTVkcgaW1wb3J0aW5nIGFuZCBl
eHBvcnRpbmcgdGhyb3VnaCBbanNkb21dKGh0dHBzOi8vZ2l0aHViLmNvbS90
bXB2YXIvanNkb20pLgoKSW4gb3JkZXIgdG8gaW5zdGFsbCBgcGFwZXItanNk
b20tY2FudmFzYCwgeW91IG5lZWQgdGhlIFtDYWlybyBHcmFwaGljcwpsaWJy
YXJ5XShodHRwczovL2NhaXJvZ3JhcGhpY3Mub3JnLykgaW5zdGFsbGVkIGlu
IHlvdXIgc3lzdGVtOgoKIyMjIEluc3RhbGxpbmcgTmF0aXZlIERlcGVuZGVu
Y2llcwoKUGFwZXIuanMgcmVsaWVzIG9uIFtOb2RlLUNhbnZhc10oaHR0cHM6
Ly9naXRodWIuY29tL0F1dG9tYXR0aWMvbm9kZS1jYW52YXMpIGZvcgpyZW5k
ZXJpbmcsIHdoaWNoIGluIHR1cm4gcmVsaWVzIG9uIHRoZSBuYXRpdmUgbGli
cmFyaWVzCltDYWlyb10oaHR0cHM6Ly9jYWlyb2dyYXBoaWNzLm9yZy8pIGFu
ZCBbUGFuZ29dKGh0dHBzOi8vd3d3LnBhbmdvLm9yZy8pLgoKIyMjIyBJbnN0
YWxsaW5nIE5hdGl2ZSBEZXBlbmRlbmNpZXMgb24gbWFjT1MKClBhcGVyLmpz
IHJlbGllcyBvbiBOb2RlLUNhbnZhcyBmb3IgcmVuZGVyaW5nLCB3aGljaCBp
biB0dXJuIHJlbGllcyBvbiBDYWlybyBhbmQKUGFuZ28uIFRoZSBlYXNpZXN0
IHdheSB0byBpbnN0YWxsIENhaXJvIGlzIHRocm91Z2gKW0hvbWVicmV3XSho
dHRwczovL2JyZXcuc2gvKSwgYnkgaXNzdWluZyB0aGUgY29tbWFuZDoKCiAg
ICBicmV3IGluc3RhbGwgY2Fpcm8gcGFuZ28KCk5vdGUgdGhhdCBjdXJyZW50
bHkgdGhlcmUgaXMgYW4gaXNzdWUgb24gbWFjT1Mgd2l0aCBDYWlyby4gSWYg
dGhlIGFib3ZlIGNhdXNlcwplcnJvcnMsIHRoZSBmb2xsb3dpbmcgd2lsbCBt
b3N0IGxpa2VseSBmaXggaXQ6CgogICAgUEtHX0NPTkZJR19QQVRIPS9vcHQv
WDExL2xpYi9wa2djb25maWcvIG5wbSBpbnN0YWxsIHBhcGVyCgpBbHNvLCB3
aGVuZXZlciB5b3Ugd291bGQgbGlrZSB0byB1cGRhdGUgdGhlIG1vZHVsZXMs
IHlvdSB3aWxsIG5lZWQgdG8gZXhlY3V0ZToKCiAgICBQS0dfQ09ORklHX1BB
VEg9L29wdC9YMTEvbGliL3BrZ2NvbmZpZy8gbnBtIHVwZGF0ZQoKSWYgeW91
IGtlZXAgZm9yZ2V0dGluZyBhYm91dCB0aGlzIHJlcXVpcmVtZW50LCBvciB3
b3VsZCBsaWtlIHRvIGJlIGFibGUgdG8gdHlwZQpzaW1wbGUgYW5kIGNsZWFu
IGNvbW1hbmRzLCBhZGQgdGhpcyB0byB5b3VyIGAuYmFzaF9wcm9maWxlYCBm
aWxlOgoKICAgICMgUEtHIENvbmZpZyBmb3IgUGFuZ28gLyBDYWlybwogICAg
ZXhwb3J0IFBLR19DT05GSUdfUEFUSD0vdXNyL2xvY2FsL2xpYi9wa2djb25m
aWc6L29wdC9YMTEvbGliL3BrZ2NvbmZpZwoKQWZ0ZXIgYWRkaW5nIHRoaXMg
bGluZSwgeW91ciBjb21tYW5kcyBzaG91bGQgd29yayBpbiB0aGUgZXhwZWN0
ZWQgd2F5OgoKICAgIG5wbSBpbnN0YWxsIHBhcGVyCiAgICBucG0gdXBkYXRl
CgojIyMjIEluc3RhbGxpbmcgTmF0aXZlIERlcGVuZGVuY2llcyBvbiBEZWJp
YW4vVWJ1bnR1IExpbnV4CgogICAgc3VkbyBhcHQtZ2V0IGluc3RhbGwgcGtn
LWNvbmZpZyBsaWJjYWlybzItZGV2IGxpYnBhbmdvMS4wLWRldiBsaWJzc2wt
ZGV2IGxpYmpwZWc2Mi1kZXYgbGliZ2lmLWRldgoKWW91IG1pZ2h0IGFsc28g
bmVlZCB0byBpbnN0YWxsIHRoZSBidWlsZC1lc3NlbnRpYWwgcGFja2FnZSBp
ZiB5b3UgZG9uJ3QgdXN1YWxseQpidWlsZCBmcm9tIGMrKyBzb3VyY2VzOgoK
ICAgIHN1ZG8gYXB0LWdldCBpbnN0YWxsIGJ1aWxkLWVzc2VudGlhbAoKIyMj
IyBJbnN0YWxsaW5nIE5hdGl2ZSBEZXBlbmRlbmNpZXMgZm9yIEVsZWN0cm9u
CgpJbiBvcmRlciB0byBidWlsZCBOb2RlLUNhbnZhcyBmb3IgdXNlIG9mIGBw
YXBlci1qc2RvbS1jYW52YXNgIGluIEVsZWN0cm9uLCB3aGljaAppcyBsaWtl
bHkgdG8gdXNlIGEgZGlmZmVyZW50IHZlcnNpb24gb2YgVjggdGhhbiB0aGUg
Tm9kZSBiaW5hcnkgaW5zdGFsbGVkIGluCnlvdXIgc3lzdGVtLCB5b3UgbmVl
ZCB0byBtYW51YWxseSBzcGVjaWZ5IHRoZSBsb2NhdGlvbiBvZiBFbGVjdHJv
buKAmXMgaGVhZGVycy4KRm9sbG93IHRoZXNlIHN0ZXBzIHRvIGRvIHNvOgoK
W0VsZWN0cm9uIOKAlCBVc2luZyBOYXRpdmUgTm9kZQpNb2R1bGVzXShodHRw
czovL2VsZWN0cm9uLmF0b20uaW8vZG9jcy90dXRvcmlhbC91c2luZy1uYXRp
dmUtbm9kZS1tb2R1bGVzLykKCiMjIyMgQWZ0ZXIgTmF0aXZlIERlcGVuZGVu
Y2llcyBoYXZlIGJlZW4gaW5zdGFsbGVkCgpZb3Ugc2hvdWxkIG5vdyBiZSBh
YmxlIHRvIGluc3RhbGwgdGhlIFBhcGVyLmpzIG1vZHVsZSB3aXRoIGpzZG9t
IGFuZCBDYW52YXMKcmVuZGVyaW5nIGZyb20gTlBNOgoKICAgIG5wbSBpbnN0
YWxsIHBhcGVyLWpzZG9tLWNhbnZhcwoKIyMgRGV2ZWxvcG1lbnQKClRoZSBt
YWluIFBhcGVyLmpzIHNvdXJjZSB0cmVlIGlzIGhvc3RlZCBvbgpbR2l0SHVi
XShodHRwczovL2dpdGh1Yi5jb20vcGFwZXJqcy9wYXBlci5qcy8pLiBgZ2l0
YCBpcyByZXF1aXJlZCB0byBjcmVhdGUgYQpjbG9uZSBvZiB0aGUgcmVwb3Np
dG9yeSwgYW5kIGNhbiBiZSBlYXNpbHkgaW5zdGFsbGVkIHRocm91Z2ggeW91
ciBwcmVmZXJyZWQKcGFja2FnZSBtYW5hZ2VyIG9uIHlvdXIgcGxhdGZvcm0u
CgojIyMgR2V0IHRoZSBTb3VyY2UKCiAgICBnaXQgY2xvbmUgLS1yZWN1cnNp
dmUgZ2l0Oi8vZ2l0aHViLmNvbS9wYXBlcmpzL3BhcGVyLmpzLmdpdAogICAg
Y2QgcGFwZXIuanMKClRvIHJlZnJlc2ggeW91ciBjbG9uZSBhbmQgZmV0Y2gg
Y2hhbmdlcyBmcm9tIG9yaWdpbiwgcnVuOgoKICAgIGdpdCBmZXRjaCBvcmln
aW4KClRvIHVwZGF0ZSB0aGUgYGpzZG9jLXRvb2xraXRgIHN1Ym1vZHVsZSwg
dXNlZCB0byBnZW5lcmF0ZSB0aGUgZG9jdW1lbnRhdGlvbiwKcnVuOgoKICAg
IGdpdCBzdWJtb2R1bGUgdXBkYXRlICAtLWluaXQgLS1yZWN1cnNpdmUKCiMj
IyBTZXR0aW5nIFVwIEZvciBCdWlsZGluZwoKQXMgb2YgMjAxNiwgUGFwZXIu
anMgdXNlcyBbR3VscC5qc10oaHR0cHM6Ly9ndWxwanMuY29tLykgZm9yIGJ1
aWxkaW5nLCBhbmQgaGFzIGEKY291cGxlIG9mIGRlcGVuZGVuY2llcyBhcyBO
UE0gbW9kdWxlcy4gUmVhZCB0aGUgY2hhcHRlciBbSW5zdGFsbGluZwpOb2Rl
LmpzIGFuZCBOUE1dKCNpbnN0YWxsaW5nLW5vZGVqcy1hbmQtbnBtKSBpZiB5
b3Ugc3RpbGwgbmVlZCB0bwppbnN0YWxsIHRoZXNlLgoKSW4gb3JkZXIgdG8g
YmUgYWJsZSB0byBidWlsZCBQYXBlci5qcywgYWZ0ZXIgY2hlY2tpbmcgb3V0
IHRoZSByZXBvc2l0b3J5LCBwYXBlcgpoYXMgZGVwZW5kZW5jaWVzIHRoYXQg
bmVlZCB0byBiZSBpbnN0YWxsZWQuIEluc3RhbGwgdGhlbSBieSBpc3N1aW5n
IHRoZQpmb2xsb3dpbmcgY29tbWFuZHMgZnJvbSB0aGUgUGFwZXIuanMgZGly
ZWN0b3J5OgoKICAgIG5wbSBpbnN0YWxsCgpJdCBpcyBhbHNvIHJlY29tbWVu
ZGVkIHRvIGluc3RhbGwgR3VscC5qcyBnbG9iYWxseSwgc28geW91IGNhbiBl
YXNpZXIgZXhlY3V0ZQp0aGUgYnVpbGQgY29tbWFuZHMgZnJvbSBhbnl3aGVy
ZSBpbiB0aGUgY29tbWFuZCBsaW5lOgoKICAgIG5wbSBpbnN0YWxsIC1nIGd1
bHAKCiMjIyBCdWlsZGluZyB0aGUgTGlicmFyeQoKVGhlIFBhcGVyLmpzIHNv
dXJjZXMgYXJlIGRpc3RyaWJ1dGVkIGFjcm9zcyBtYW55IHNlcGFyYXRlIGZp
bGVzLCBvcmdhbmlzZWQgaW4Kc3ViZm9sZGVycyBpbnNpZGUgdGhlIGBzcmNg
IGZvbGRlci4gVG8gY29tcGlsZSB0aGVtIGFsbCBpbnRvIGRpc3RyaWJ1dGFi
bGUKZmlsZXMsIHlvdSBjYW4gcnVuIHRoZSBgYnVpbGRgIHRhc2s6CgogICAg
Z3VscCBidWlsZAoKWW91IHdpbGwgdGhlbiBmaW5kIHRoZSBidWlsdCBsaWJy
YXJ5IGZpbGVzIGluc2lkZSB0aGUgYGRpc3RgIGZvbGRlciwgbmFtZWQKYHBh
cGVyLWZ1bGwuanNgIGFuZCBgcGFwZXItY29yZS5qc2AsIGFsb25nIHdpdGgg
dGhlaXIgbWluaWZpZWQgdmVyc2lvbnMuIFJlYWQKbW9yZSBhYm91dCB0aGlz
IGluIFtXaGljaCBWZXJzaW9uIHRvIFVzZT9dKCN3aGljaC12ZXJzaW9uLXRv
LXVzZSkuCgojIyMgUnVubmluZyBEaXJlY3RseSBmcm9tIFNlcGFyYXRlIFNv
dXJjZSBGaWxlcwoKQXMgYSBoYW5keSBhbHRlcm5hdGl2ZSB0byBidWlsZGlu
ZyB0aGUgbGlicmFyeSBhZnRlciBlYWNoIGNoYW5nZSB0byB0cnkgaXQgb3V0
CmluIHlvdXIgc2NyaXB0cywgdGhlcmUgaXMgdGhlIGBsb2FkYCB0YXNrLCB0
aGF0IHJlcGxhY2VzIHRoZSBidWlsdCBsaWJyYXJpZXMKd2l0aCBzeW1ib2xp
YyBsaW5rcyB0byB0aGUgYHNjcmMvbG9hZC5qc2Agc2NyaXB0LiBUaGlzIHNj
cmlwdCB0aGVuIGxvYWQgdGhlCmxpYnJhcnkgZGlyZWN0bHkgZnJvbSBhbGwg
dGhlIHNlcGFyYXRlIHNvdXJjZSBmaWxlcyBpbiB0aGUgYHNyY2AgZm9sZGVy
LCB0aHJvdWdoCnRoZSBbUHJlcHJvLmpzXShodHRwczovL2dpdGh1Yi5jb20v
bGVobmkvcHJlcHJvLmpzKSBKYXZhU2NyaXB0IHByZXByb2Nlc3NpbmcKbGli
cmFyeS4KClRoaXMgbWVhbnMgeW91IGNhbiBzd2l0Y2ggYmV0d2VlbiBsb2Fk
aW5nIGZyb20gc291cmNlcyBhbmQgbG9hZGluZyBhIGJ1aWx0CmxpYnJhcnkg
c2ltcGx5IGJ5IHJ1bm5pbmcuCgogICAgZ3VscCBsb2FkCgpBbmQgdG8gZ28g
YmFjayB0byBhIGJ1aWx0IGxpYnJhcnkKCiAgICBndWxwIGJ1aWxkCgpOb3Rl
IHRoYXQgeW91ciBQYXBlclNjcmlwdHMgZXhhbXBsZXMgZG8gbm90IG5lZWQg
dG8gY2hhbmdlLCB0aGV5IGNhbiBrZWVwCmxvYWRpbmcgYGRpc3QvcGFwZXIt
ZnVsbC5qc2AsIHdoaWNoIHdpbGwgYWx3YXlzIGRvIHRoZSByaWdodCB0aGlu
Zy4gTm90ZSBhbHNvCnRoYXQgYHNyYy9sb2FkLmpzYCBoYW5kbGVzIGJvdGgg
YnJvd3NlcnMgYW5kIE5vZGUuanMsIGFzIHN1cHBvcnRlZCBieSBQcmVwcm8u
anMuCgojIyMgT3RoZXIgQnVpbGQgVGFza3MKCkNyZWF0ZSBhIGZpbmFsIHpp
cHBlZCBkaXN0cmlidXRpb24gZmlsZSBpbnNpZGUgdGhlIGBkaXN0YCBmb2xk
ZXI6CgogICAgZ3VscCBkaXN0CgpBbmQgc2luY2UgYGRpc3RgIGlzIHRoZSBk
ZWZhdWx0IHRhc2ssIHRoaXMgaXMgdGhlIHNhbWU6CgogICAgZ3VscAoKIyMj
IEJyYW5jaCBzdHJ1Y3R1cmUKClNpbmNlIHRoZSByZWxlYXNlIG9mIHZlcnNp
b24gYDAuOS4yMmAsIFBhcGVyLmpzIGhhcyBhZG9wdGVkIGFzcGVjdHMgb2Yg
dGhlIEdpdC0KRmxvdyB3b3JrZmxvdy4gQWxsIGRldmVsb3BtZW50IGlzIHRh
a2luZyBwbGFjZSBpbiB0aGUKW2BkZXZlbG9wYF0oaHR0cHM6Ly9naXRodWIu
Y29tL3BhcGVyanMvcGFwZXIuanMvdHJlZS9kZXZlbG9wKSBicmFuY2gsIHdo
aWNoIGlzCm9ubHkgbWVyZ2VkIGludG8gW2BtYXN0ZXJgXShodHRwczovL2dp
dGh1Yi5jb20vcGFwZXJqcy9wYXBlci5qcy90cmVlL21hc3RlcikKd2hlbiBh
IG5ldyByZWxlYXNlIG9jY3Vycy4KCkFzIG9mIHZlcnNpb24gYDAuOS4yNmAs
IHRoZSBgZGlzdGAgZm9sZGVyIGlzIGV4Y2x1ZGVkIG9uIGFsbCBicmFuY2hl
cywgYW5kIHRoZQpidWlsZGluZyBpcyBub3cgcGFydCBvZiB0aGUgYG5wbSBw
dWJsaXNoYCBwcm9jZXNzIGJ5IHdheSBvZiB0aGUgYHByZXB1Ymxpc2hgCnNj
cmlwdC4KCldlIGFsc28gb2ZmZXIgcHJlYnVpbHQgdmVyc2lvbnMgb2YgdGhl
IGxhdGVzdCBzdGF0ZSBvZiB0aGUgYGRldmVsb3BgIGJyYW5jaCBvbgpbYHBy
ZWJ1aWx0L21vZHVsZWBdKGh0dHBzOi8vZ2l0aHViLmNvbS9wYXBlcmpzL3Bh
cGVyLmpzL3RyZWUvcHJlYnVpbHQvbW9kdWxlKQphbmQgW2BwcmVidWlsdC9k
aXN0YF0oaHR0cHM6Ly9naXRodWIuY29tL3BhcGVyanMvcGFwZXIuanMvdHJl
ZS9wcmVidWlsdC9kaXN0KS4KCiMjIyBCdWlsZGluZyB0aGUgRG9jdW1lbnRh
dGlvbgoKU2ltaWxhcmx5IHRvIGJ1aWxkaW5nIHRoZSBsaWJyYXJ5LCB5b3Ug
Y2FuIHJ1biB0aGUgYGRvY3NgIHRhc2sgdG8gYnVpbGQgdGhlCmRvY3VtZW50
YXRpb246CgogICAgZ3VscCBkb2NzCgpZb3VyIGRvY3Mgd2lsbCB0aGVuIGJl
IGxvY2F0ZWQgYXQgYGRpc3QvZG9jc2AuCgojIyMgVGVzdGluZwoKUGFwZXIu
anMgd2FzIGRldmVsb3BlZCBhbmQgdGVzdGVkIGZyb20gZGF5IDEgdXNpbmcg
cHJvcGVyIHVuaXQgdGVzdGluZyB0aHJvdWdoCmpRdWVyeSdzIFtRdW5pdF0o
aHR0cHM6Ly9xdW5pdGpzLmNvbS8pLiBUbyBydW4gdGhlIHRlc3RzIGFmdGVy
IGFueQpjaGFuZ2UgdG8gdGhlIGxpYnJhcnkncyBzb3VyY2UsIHNpbXBseSBv
cGVuIGBpbmRleC5odG1sYCBpbnNpZGUgdGhlIGB0ZXN0YApmb2xkZXIgaW4g
eW91ciB3ZWIgYnJvd3Nlci4gVGhlcmUgc2hvdWxkIGJlIGEgZ3JlZW4gYmFy
IGF0IHRoZSB0b3AsIG1lYW5pbmcgYWxsCnRlc3RzIGhhdmUgcGFzc2VkLiBJ
ZiB0aGUgYmFyIGlzIHJlZCwgc29tZSB0ZXN0cyBoYXZlIG5vdCBwYXNzZWQu
IFRoZXNlIHdpbGwgYmUKaGlnaGxpZ2h0ZWQgYW5kIGJlY29tZSB2aXNpYmxl
IHdoZW4gc2Nyb2xsaW5nIGRvd24uCgpJZiB5b3UgYXJlIHRlc3Rpbmcgb24g
Q2hyb21lLCBzb21lIG9mIHRoZSB0ZXN0cyB3aWxsIGZhaWwgZHVlIHRvIHRo
ZSBicm93c2VyJ3MKQ09SUyByZXN0cmljdGlvbnMuIEluIG9yZGVyIHRvIHJ1
biB0aGUgYnJvd3NlciBiYXNlZCB0ZXN0cyBvbiBDaHJvbWUsIHlvdSBuZWVk
CnRvIHJ1biBhIGxvY2FsIHdlYi1zZXJ2ZXIgdGhyb3VnaCBHdWxwLmpzLiBU
aGUgZm9sbG93aW5nIGNvbW1hbmQgd2lsbCBoYW5kbGUgaXQKZm9yIHlvdSwg
YW5kIHdpbGwgYWxzbyBvcGVuIHRoZSBicm93c2VyIGF0IHRoZSByaWdodCBh
ZGRyZXNzIHN0cmFpZ2h0IGF3YXk6CgogICAgZ3VscCB0ZXN0OmJyb3dzZXIK
CllvdSBjYW4gYWxzbyBydW4gdGhlIHVuaXQgdGVzdHMgdGhyb3VnaCBQaGFu
dG9tSlMgaW4gR3VscCBkaXJlY3RseSBvbiB0aGUKY29tbWFuZCBsaW5lOgoK
ICAgIGd1bHAgdGVzdDpwaGFudG9tCgpUbyB0ZXN0IHRoZSBOb2RlLmpzIHZl
cnNpb24gb2YgUGFwZXIuanMsIHVzZSB0aGlzIGNvbW1hbmQ6CgogICAgZ3Vs
cCB0ZXN0Om5vZGUKCkFuZCB0byB0ZXN0IGJvdGggdGhlIFBoYW50b21KUyBh
bmQgTm9kZS5qcyBlbnZpcm9ubWVudHMgdG9nZXRoZXIsIHNpbXBseSBydW46
CgogICAgZ3VscCB0ZXN0CgojIyMgQ29udHJpYnV0aW5nIFshW09wZW4gU291
cmNlIEhlbHBlcnNdKGh0dHBzOi8vd3d3LmNvZGV0cmlhZ2UuY29tL3BhcGVy
anMvcGFwZXIuanMvYmFkZ2VzL3VzZXJzLnN2ZyldKGh0dHBzOi8vd3d3LmNv
ZGV0cmlhZ2UuY29tL3BhcGVyanMvcGFwZXIuanMpCgpUaGUgbWFpbiBQYXBl
ci5qcyBzb3VyY2UgdHJlZSBpcyBob3N0ZWQgb24gR2l0SHViLCB0aHVzIHlv
dSBzaG91bGQgY3JlYXRlIGEgZm9yawpvZiB0aGUgcmVwb3NpdG9yeSBpbiB3
aGljaCB5b3UgcGVyZm9ybSBkZXZlbG9wbWVudC4gU2VlCjxodHRwczovL2hl
bHAuZ2l0aHViLmNvbS9hcnRpY2xlcy9mb3JrLWEtcmVwby8+LgoKV2UgcHJl
ZmVyIHRoYXQgeW91IHNlbmQgYQpbcHVsbCByZXF1ZXN0IG9uIEdpdEh1Yl0o
aHR0cHM6Ly9oZWxwLmdpdGh1Yi5jb20vYXJ0aWNsZXMvYWJvdXQtcHVsbC1y
ZXF1ZXN0cy8pIAp3aGljaCB3aWxsIHRoZW4gYmUgbWVyZ2VkIGludG8gdGhl
IG9mZmljaWFsIG1haW4gbGluZSByZXBvc2l0b3J5LgpZb3UgbmVlZCB0byBz
aWduIHRoZSBQYXBlci5qcyBDTEEgdG8gYmUgYWJsZSB0byBjb250cmlidXRl
IChzZWUgYmVsb3cpLgoKQWxzbywgaW4geW91ciBmaXJzdCBjb250cmlidXRp
b24sIGFkZCB5b3Vyc2VsZiB0byB0aGUgZW5kIG9mIGBBVVRIT1JTLm1kYCAo
d2hpY2gKb2YgY291cnNlIGlzIG9wdGlvbmFsKS4KCkluIGFkZGl0aW9uIHRv
IGNvbnRyaWJ1dGluZyBjb2RlIHlvdSBjYW4gYWxzbyB0cmlhZ2UgaXNzdWVz
IHdoaWNoIG1heSBpbmNsdWRlCnJlcHJvZHVjaW5nIGJ1ZyByZXBvcnRzIG9y
IGFza2luZyBmb3Igdml0YWwgaW5mb3JtYXRpb24sIHN1Y2ggYXMgdmVyc2lv
biBudW1iZXJzCm9yIHJlcHJvZHVjdGlvbiBpbnN0cnVjdGlvbnMuIElmIHlv
dSB3b3VsZCBsaWtlIHRvIHN0YXJ0IHRyaWFnaW5nIGlzc3Vlcywgb25lCmVh
c3kgd2F5IHRvIGdldCBzdGFydGVkIGlzIHRvCltzdWJzY3JpYmUgdG8gcGFw
ZXIuanMgb24gQ29kZVRyaWFnZV0oaHR0cHM6Ly93d3cuY29kZXRyaWFnZS5j
b20vcGFwZXJqcy9wYXBlci5qcykuCgoqKkdldCB0aGUgc291cmNlIChmb3Ig
Y29udHJpYnV0aW5nKToqKgoKSWYgeW91IHdhbnQgdG8gY29udHJpYnV0ZSB0
byB0aGUgcHJvamVjdCB5b3Ugd2lsbCBoYXZlIHRvIFttYWtlIGEKZm9ya10o
aHR0cHM6Ly9oZWxwLmdpdGh1Yi5jb20vYXJ0aWNsZXMvZm9yay1hLXJlcG8v
KS4gVGhlbiBkbyB0aGlzOgoKICAgIGdpdCBjbG9uZSAtLXJlY3Vyc2l2ZSBn
aXRAZ2l0aHViLmNvbTp5b3VydXNlcm5hbWUvcGFwZXIuanMuZ2l0CiAgICBj
ZCBwYXBlci5qcwogICAgZ2l0IHJlbW90ZSBhZGQgdXBzdHJlYW0gZ2l0Oi8v
Z2l0aHViLmNvbS9wYXBlcmpzL3BhcGVyLmpzLmdpdAoKVG8gdGhlbiBmZXRj
aCBjaGFuZ2VzIGZyb20gdXBzdHJlYW0sIHJ1bgoKICAgIGdpdCBmZXRjaCB1
cHN0cmVhbQoKIyMjIyBDcmVhdGluZyBhbmQgU3VibWl0dGluZyBhIFBhdGNo
CgpBcyBtZW50aW9uZWQgYWJvdmUsIHdlIHByZWZlciB0aGF0IHlvdSBzZW5k
IGEKW3B1bGwgcmVxdWVzdF0oaHR0cHM6Ly9oZWxwLmdpdGh1Yi5jb20vYXJ0
aWNsZXMvYWJvdXQtcHVsbC1yZXF1ZXN0cy8pIG9uIEdpdEh1YjoKCjEuIENy
ZWF0ZSBhIGZvcmsgb2YgdGhlIHVwc3RyZWFtIHJlcG9zaXRvcnkgYnkgdmlz
aXRpbmcKICAgPGh0dHBzOi8vZ2l0aHViLmNvbS9wYXBlcmpzL3BhcGVyLmpz
L2Zvcms+LiBJZiB5b3UgZmVlbCBpbnNlY3VyZSwgaGVyZSdzIGEKICAgZ3Jl
YXQgZ3VpZGU6IDxodHRwczovL2hlbHAuZ2l0aHViLmNvbS9hcnRpY2xlcy9m
b3JrLWEtcmVwby8+CgoyLiBDbG9uZSBvZiB5b3VyIHJlcG9zaXRvcnk6IGBn
aXQgY2xvbmUKICAgaHR0cHM6Ly95b3VydXNlcm5hbWVAZ2l0aHViLmNvbS95
b3VydXNlcm5hbWUvcGFwZXIuanMuZ2l0YAoKMy4gVGhpcyBpcyBpbXBvcnRh
bnQ6IENyZWF0ZSBhIHNvLWNhbGxlZCAqdG9waWMgYnJhbmNoKiBiYXNlZCBv
biB0aGUgYGRldmVsb3BgCiAgIGJyYW5jaDogYGdpdCBjaGVja291dCAtdGIg
bmFtZS1vZi1teS1wYXRjaCBkZXZlbG9wYCB3aGVyZSBgbmFtZS1vZi1teS1w
YXRjaGAKICAgaXMgYSBzaG9ydCBidXQgZGVzY3JpcHRpdmUgbmFtZSBvZiB0
aGUgcGF0Y2ggeW91J3JlIGFib3V0IHRvIGNyZWF0ZS4gRG9uJ3QKICAgd29y
cnkgYWJvdXQgdGhlIHBlcmZlY3QgbmFtZSB0aG91Z2ggLS0geW91IGNhbiBj
aGFuZ2UgdGhpcyBuYW1lIGF0IGFueSB0aW1lCiAgIGxhdGVyIG9uLgoKNC4g
SGFjayEgTWFrZSB5b3VyIGNoYW5nZXMsIGFkZGl0aW9ucywgZXRjLiwgY29t
bWl0IHRoZW0gdGhlbiBwdXNoIHRoZW0gdG8geW91cgogICBHaXRIdWIgZm9y
azogYGdpdCBwdXNoIG9yaWdpbiBuYW1lLW9mLW15LXBhdGNoYAoKNS4gU2Vu
ZCBhIHB1bGwgcmVxdWVzdCB0byB0aGUgdXBzdHJlYW0gcmVwb3NpdG9yeSdz
IG93bmVyIGJ5IHZpc2l0aW5nIHlvdXIKICAgcmVwb3NpdG9yeSdzIHNpdGUg
YXQgR2l0SHViIChpLmUuIGh0dHBzOi8vZ2l0aHViLmNvbS95b3VydXNlcm5h
bWUvcGFwZXIuanMpCiAgIGFuZCBwcmVzcyB0aGUgIlB1bGwgUmVxdWVzdCIg
YnV0dG9uLiBNYWtlIHN1cmUgeW91IGFyZSBjcmVhdGluZyB0aGUgcHVsbAog
ICByZXF1ZXN0IHRvIHRoZSBgZGV2ZWxvcGAgYnJhbmNoLCBub3QgdGhlIGBt
YXN0ZXJgIGJyYW5jaC4gSGVyZSdzIGEgZ29vZCBndWlkZQogICBvbiBwdWxs
IHJlcXVlc3RzOiA8aHR0cHM6Ly9oZWxwLmdpdGh1Yi5jb20vYXJ0aWNsZXMv
YWJvdXQtcHVsbC1yZXF1ZXN0cy8+CgojIyMjIyBVc2Ugb25lIHRvcGljIGJy
YW5jaCBwZXIgZmVhdHVyZToKCkRvbid0IG1peCBkaWZmZXJlbnQga2luZHMg
b2YgcGF0Y2hlcyBpbiB0aGUgc2FtZSBicmFuY2guIEluc3RlYWQsIG1lcmdl
IHRoZW0gYWxsCnRvZ2V0aGVyIGludG8geW91ciBgZGV2ZWxvcGAgYnJhbmNo
IChvciBkZXZlbG9wIGV2ZXJ5dGhpbmcgaW4geW91ciBgZGV2ZWxvcGAKYnJh
bmNoIGFuZCB0aGVuIGNoZXJyeS1waWNrLWFuZC1tZXJnZSBpbnRvIHRoZSBk
aWZmZXJlbnQgdG9waWMgYnJhbmNoZXMpLiBHaXQKcHJvdmlkZXMgZm9yIGFu
IGV4dHJlbWVseSBmbGV4aWJsZSB3b3JrZmxvdywgd2hpY2ggaW4gbWFueSB3
YXlzIGNhdXNlcyBtb3JlCmNvbmZ1c2lvbiB0aGFuIGl0IGhlbHBzIHlvdSB3
aGVuIG5ldyB0byBjb2xsYWJvcmF0aXZlIHNvZnR3YXJlIGRldmVsb3BtZW50
LiBUaGUKZ3VpZGVzIHByb3ZpZGVkIGJ5IEdpdEh1YiBhdCA8aHR0cHM6Ly9o
ZWxwLmdpdGh1Yi5jb20vPiBhcmUgYSByZWFsbHkgZ29vZApzdGFydGluZyBw
b2ludCBhbmQgcmVmZXJlbmNlLiBJZiB5b3UgYXJlIGZpeGluZyBhbiBpc3N1
ZSwgYSBjb252ZW5pZW50IHdheSB0bwpuYW1lIHRoZSBicmFuY2ggaXMgdG8g
dXNlIHRoZSBpc3N1ZSBudW1iZXIgYXMgYSBwcmVmaXgsIGxpa2UgdGhpczog
YGdpdCBjaGVja291dAotdGIgaXNzdWUtOTM3LWZlYXR1cmUtYWRkLXRleHQt
c3R5bGluZ2AuCgojIyMjIENvbnRyaWJ1dG9yIExpY2Vuc2UgQWdyZWVtZW50
CgpCZWZvcmUgd2UgY2FuIGFjY2VwdCBhbnkgY29udHJpYnV0aW9ucyB0byBQ
YXBlci5qcywgeW91IG5lZWQgdG8gc2lnbiB0aGlzCltDTEFdKGh0dHBzOi8v
ZW4ud2lraXBlZGlhLm9yZy93aWtpL0NvbnRyaWJ1dG9yX0xpY2Vuc2VfQWdy
ZWVtZW50KToKCltDb250cmlidXRvciBMaWNlbnNlIEFncmVlbWVudF0oaHR0
cHM6Ly9zcHJlYWRzaGVldHMuZ29vZ2xlLmNvbS9hL3BhcGVyanMub3JnL3Nw
cmVhZHNoZWV0L2VtYmVkZGVkZm9ybT9mb3Jta2V5PWRFTnhkMEpCVkRZMlJF
bzNUSFZ1Um1oNFlqZFdSbEU2TVEpCgo+IFRoZSBwdXJwb3NlIG9mIHRoaXMg
YWdyZWVtZW50IGlzIHRvIGNsZWFybHkgZGVmaW5lIHRoZSB0ZXJtcyB1bmRl
ciB3aGljaAo+IGludGVsbGVjdHVhbCBwcm9wZXJ0eSBoYXMgYmVlbiBjb250
cmlidXRlZCB0byBQYXBlci5qcyBhbmQgdGhlcmVieSBhbGxvdyB1cyB0bwo+
IGRlZmVuZCB0aGUgcHJvamVjdCBzaG91bGQgdGhlcmUgYmUgYSBsZWdhbCBk
aXNwdXRlIHJlZ2FyZGluZyB0aGUgc29mdHdhcmUgYXQKPiBzb21lIGZ1dHVy
ZSB0aW1lLgoKRm9yIGEgbGlzdCBvZiBhdXRob3JzIGFuZCBjb250cmlidXRv
cnMsIHBsZWFzZSBzZWUgCltBVVRIT1JTXShodHRwczovL2dpdGh1Yi5jb20v
cGFwZXJqcy9wYXBlci5qcy9ibG9iL21hc3Rlci9BVVRIT1JTLm1kKS4KCiMj
IExpY2Vuc2UKCkRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4g
U2VlIApbTElDRU5TRV0oaHR0cHM6Ly9naXRodWIuY29tL3BhcGVyanMvcGFw
ZXIuanMvYmxvYi9tYXN0ZXIvTElDRU5TRS50eHQpCmZvIGRldGFpbHMuCg==
",,11070,"bGFuZ3VhZ2U6IG5vZGVfanMKIyBGb2xsb3cgaHR0cHM6Ly9naXRodWIuY29t
L25vZGVqcy9MVFMgdG8gZGVjaWRlIHdoZW4gdG8gcmVtb3ZlIGEgdmVyc2lv
bgpub2RlX2pzOgojIFN0YWJsZSB2ZXJzaW9uIGlzIHRlbXBvcmFyaWx5IGRp
c2FibGVkIGR1ZSB0byBhIGJ1ZyBpbiByZXNlbWJsZWpzIHBhY2thZ2Ugd2l0
aAojIG5vZGUgdjEyIChodHRwczovL2dpdGh1Yi5jb20vb3Jncy9wYXBlcmpz
L3RlYW1zL2NvbnRyaWJ1dG9ycy9kaXNjdXNzaW9ucy8xMikuCiMgLSBzdGFi
bGUKLSAxMQotIDEwCi0gOApzdWRvOiBmYWxzZQplbnY6CiAgbWF0cml4Ogog
IC0gQ1hYPWcrKy00LjkKICBnbG9iYWw6CiAgLSBzZWN1cmU6IG8xZkovc3Vx
Y0wwYVg2UGlPbWlwNjAyZEFNNlE2TzVvVS9CRGhTdWVVT25Za25ieldmV0dP
ZHNvTXVuMFVZaHZ2ZGNYVTRzSEdIK3dtMFZlWGEyaWdheHJ5eDM2dU14UHNY
QjNtTzRzQVRvL1FsV1gvcjN3TENnMkNWaVhoeWtFNWwyZ1A0NU9IaDVESmdL
V3M1MWN3R0xEWjl5OUpIbFhTUC94SUdCTmtNR1ZDN3F2eWhUZkViMEVWdmly
bjliN0t0OGZtRDhLWWdORHJzbWNSM2Q0MmY0aml0dDREaTlMc1J5T0crU0NY
WmZJM3U4MzF0SG8xc2dadUdLMnJ4eDJTZEVjbElibEVVQ2tGSExwMEhQanEx
KzAzMkNnNUQ3SE5sb1NDUGZvU3djWStyT1dIdWJOWGhtWGdaSEZlU2thVmds
a2RXbERFM05peWpObFl3YzRtOXpxZkNpcDhqdy9qVWVTZkZWdHJ1bmNFdW1H
TExCeEUvYU1CUWpBUUxUcTI0anVhYm0zcVpOZ3JOQ0ZlRm8rWE55eDJPejFq
bGxHdmU2VnV1OFFnMHdGcUUrcWxaS254TmJ1NS8zSU9JYXdPRTF1aGFPRzhv
U3V2bHBRdU5ySEZJTUVmemgyVUtQaVVIYkVsVUR5b1R6SGxyaFFyN1pTUFdQ
SmF4NHVJUE9Uc2NwSzRZa3M3RkJTNEkwVm51aHc0MWYvYlZSMGtMRTlqTkFR
b1VwcDQ3bWE5TzJTdzlmaE93RWlvcFZyQUR6QVJVaXkwZU5lTHg4RjJGNzNM
MHd5UEJPdEVMMWNmQ3I1b1kreVo1WmZEWWIvTDgvR0lsYk1ubGpZeFZiWGVz
bXdkOFJGaThYMkhVTm5FbXVzamloOW9XYXpWdVpwaUZmVU8wb2V1MTVKVEJn
PQphZGRvbnM6CiAgYXB0OgogICAgc291cmNlczoKICAgIC0gdWJ1bnR1LXRv
b2xjaGFpbi1yLXRlc3QKICAgIC0gZ2l0LWNvcmUKICAgIHBhY2thZ2VzOgog
ICAgLSBnKystNC45CiAgICAtIGdpdAogICAgLSBsaWJjYWlybzItZGV2CiAg
ICAtIGxpYnBhbmdvMS4wLWRldgogICAgLSBsaWJzc2wtZGV2CiAgICAtIGxp
YmpwZWc2Mi1kZXYKICAgIC0gbGliZ2lmLWRldgpjYWNoZToKICBkaXJlY3Rv
cmllczoKICAtICJ+Ly5hc3NldHMiCiAgLSAifi8ubnZtIgogIC0gbm9kZV9t
b2R1bGVzCmluc3RhbGw6Ci0gdHJhdmlzL2luc3RhbGwtYXNzZXRzLnNoCmJl
Zm9yZV9zY3JpcHQ6Ci0gdHJhdmlzL3NldHVwLWdpdC5zaAotIG5wbSBzZXQg
cHJvZ3Jlc3M9ZmFsc2UKLSB3aGljaCBndWxwIHx8IG5wbSBpbnN0YWxsIC1n
IGd1bHAtY2xpCi0gbnBtIGluc3RhbGwKc2NyaXB0OgotIGd1bHAganNoaW50
Ci0gZ3VscCBtaW5pZnkKLSBndWxwIHRlc3QKLSBndWxwIHppcAotICdbICIk
e1RSQVZJU19CUkFOQ0h9IiA9ICJkZXZlbG9wIiBdICYmIFsgIiR7VFJBVklT
X05PREVfVkVSU0lPTn0iID0gIjExIiBdICYmIHRyYXZpcy9kZXBsb3ktcHJl
YnVpbHQuc2ggfHwgdHJ1ZScK
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
